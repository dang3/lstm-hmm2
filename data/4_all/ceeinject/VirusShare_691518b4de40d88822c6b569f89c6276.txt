call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
or
fsubrl
int
fmuls
insb
cmp
sub
cs
sbb
or
cld
in
mov
mov
in
clc
sbb
pop
sub
sub
pop
insl
or
outsb
in
mov
or
std
jb
xchg
sbb
add
imul
cld
lea
push
mov
daa
push
sbb
pushf
jg
xor
fldenv
enter
enter
fdivrl
cwtl
into
push
xor
pop
mov
sbb
mov
mov
int3
loop
out
inc
xchg
jbe
cwtl
pop
sbb
rcl
shl
lea
fsubrl
sbb
cmp
cld
popf
int3
inc
je
mov
in
jae
or
cmp
lds
insl
hlt
addr16
pusha
jmp
mov
jmp
jne
js
insl
fwait
sub
sub
gs
push
aaa
int
idivb
fsubrl
jo
jl
add
mov
dec
sarl
mov
cld
lea
mov
in
or
cli
or
add
adc
jge
insl
jmp
lahf
jecxz
sahf
enter
cmc
mov
jne
mov
and
adc
insl
ret
lods
leave
mov
test
loopne
sbb
inc
cmp
push
insb
ds
sub
stos
mov
scas
pushf
fmul
lods
std
pushf
in
mov
pop
sub
sub
sbb
or
cld
in
mov
mov
in
mov
pop
sub
sub
sbb
or
cld
mov
xor
loopne
and
sbb
or
out
pop
sbb
mov
xchg
std
jno
loopne
jl
frstor
nop
cmc
call
testl
jle
jnp
lea
stos
adc
xor
lods
and
fidivrs
dec
xchg
adc
aam
cld
lret
sbb
xchg
add
dec
movsl
push
xor
dec
inc
outsl
mov
pop
lret
pop
sub
mov
sbb
mov
pushf
push
lock
dec
inc
add
and
divb
addr16
or
xchg
push
cli
xchg
jnp
xchg
xchg
rolb
cmp
or
stos
gs
pop
jge
sub
mov
mov
mov
stos
sub
fisttpl
lahf
mov
shl
cmp
jecxz
shlb
or
mov
sbb
insb
repnz
ja
inc
cwtl
cli
mov
and
sub
mov
inc
sarb
mov
lock
and
xor
sbb
test
imul
test
adc
mov
aad
mov
and
pop
loopne
imul
fwait
xor
outsl
push
mov
sbb
das
cmp
jo
dec
mov
dec
loop
pop
jmp
jb
xchg
xlat
mov
js
push
push
sbbl
pop
in
outsb
cli
jmp
push
mov
mov
sbb
mov
mov
xor
iret
inc
insb
adc
mov
enter
add
outsb
movsb
insb
sub
sbb
ret
sbbb
sub
inc
pushf
add
pop
fcoml
sbb
mov
mov
sbb
mov
in
lds
repz
mov
test
add
xchg
movsb
mov
dec
sub
pop
mov
das
inc
sub
cmpsb
cmpl
pop
int
into
rcl
sbb
mov
fwait
xor
inc
cmpsl
dec
jle
add
inc
ljmp
loop
aaa
xor
pusha
xchg
jnp
mov
inc
das
in
pop
and
dec
movsl
add
xor
in
push
pop
ret
rolb
and
cmpsb
fsubr
and
cmpsl
add
push
lret
movb
adc
inc
mov
and
sti
or
add
arpl
in
sbb
insl
cs
subb
aad
ss
into
insb
sub
dec
sub
dec
lcall
out
fisubrs
lods
mov
push
push
xor
scas
das
mov
xchg
pop
jmp
fbstp
jnp
out
lahf
inc
loop
push
mov
lds
push
ret
jo
inc
cmc
add
dec
mov
mov
rclb
lret
loope
dec
or
das
cmp
sbbb
popf
or
or
lods
or
xchg
aam
hlt
cmp
pop
je
and
outsb
sbb
adc
lret
mov
push
clc
jmp
ficoms
lcall
inc
or
mov
push
xchg
xor
in
jecxz
js
int3
push
fiaddl
sub
sbb
jns
pop
out
cmp
dec
jne
leave
xchg
lea
hlt
jbe
adc
cmp
or
les
cmp
add
mov
loop
push
pusha
cmpsl
inc
xorl
push
jmp
je
sbb
lahf
ret
or
ret
add
ljmp
icebp
lock
mov
enter
out
clc
cmp
ss
sbb
mov
ljmp
das
mov
xchg
cmpsw
push
std
jns
inc
std
adc
push
bound
add
icebp
daa
push
loopne
test
mov
jns
xchg
aam
adc
scas
add
test
mov
outsl
xchg
cmc
mov
add
push
dec
and
cmp
inc
push
minps
in
xor
jecxz
and
adc
pusha
cmp
or
pop
leave
ja
imul
jae
shld
mov
cmc
idiv
xor
stc
mov
sub
dec
cld
push
es
in
sarl
add
jb
stc
and
rcll
adc
push
cmp
popa
sub
mov
mov
pop
xor
fisttps
cmp
add
fists
scas
nop
mov
pop
push
mov
mov
xchg
outsb
mov
iret
cmp
mov
aad
imul
pop
adc
or
mov
insl
loopne
mov
int
xor
jbe,pt
lods
icebp
sbb
push
or
loopne
xor
mov
shrl
imul
xor
sub
mov
adc
mov
int
cmc
leave
imul
test
jp
inc
mov
pop
in
dec
mov
pop
insl
xchg
rorb
push
iret
dec
push
subb
clc
repz
jbe
xor
push
les
lahf
xchg
mov
lods
pop
mov
adc
into
rcr
aas
and
mov
fwait
shlb
fs
mov
int3
test
movsb
dec
mov
cmp
inc
pop
enter
sbb
movsb
and
and
mov
sub
sub
pop
ret
cld
sub
and
cmpsb
cli
rcrb
enter
ret
in
push
push
mov
std
test
std
test
add
mov
shlb
testl
into
in
pop
cltd
or
out
int3
mov
jp
stc
xchg
rorb
idivb
sub
mov
jae
in
cmp
cmpsb
ds
test
mov
push
mov
out
cmc
fsubrp
push
ret
cmp
aaa
inc
mov
pop
test
adc
pop
out
dec
loop
cmc
lods
fs
push
jae
nop
pop
pop
dec
loop
orl
adc
xor
mov
sbb
dec
aam
inc
push
out
pop
inc
shlb
jmp
lds
movsl
xchg
int
decb
fcompl
lock
loop
pop
jp
cmp
cmp
sub
jbe
cmc
ja
jno
pop
mov
out
mov
imul
daa
cmp
adc
adc
and
lea
insb
push
ljmp
lcall
into
mov
sub
mov
arpl
jmp
bound
mov
push
adc
fcmovnu
or
aam
sub
jmp
bound
les
mov
inc
lahf
into
mov
add
adc
add
mov
pop
loopne
stc
push
movsb
mov
out
jns
xchg
and
mov
jp
inc
xchg
lret
xor
cmp
mov
pusha
out
icebp
mov
test
dec
mov
mov
mov
dec
xchg
insb
arpl
test
fisttpl
or
mov
push
cld
xlat
mov
shrl
inc
mov
outsl
aam
jo
jecxz
add
push
scas
sub
jg
adc
mov
outsb
insl
test
or
bound
mov
jle
out
push
push
pop
pop
aad
lret
cmp
xor
bound
or
push
js
orl
ja
sub
inc
les
shll
mov
and
xchg
push
int
out
andl
fisubs
push
in
out
sti
jns
mov
cmp
aaa
rcrb
shlb
push
test
xchg
loopne
cltd
jle
mov
jno
outsb
rsqrtps
xor
inc
mov
lret
xor
dec
imul
fiadds
or
push
sub
pop
mov
call
outsl
mov
sbbl
iret
and
mov
pop
pop
cmpsb
jg
adc
mov
sahf
lods
and
push
mov
push
cwtl
shlb
mov
fildll
jb
nop
mov
ds
add
dec
daa
mov
loopne
and
dec
mov
js
adc
sub
adc
cmpsb
out
lods
sti
lret
es
push
out
imul
xlat
ja
es
test
mov
push
jbe
popf
andps
lods
int
dec
xchg
lret
popa
or
xchg
int
in
imul
jne
insb
and
and
mov
cltd
jo
call
dec
sarb
mov
add
fbld
add
cmp
pop
aaa
xor
inc
cmpsb
pushl
push
lahf
imul
mov
jno
lea
ljmp
xor
sbb
aaa
mov
pop
adc
or
jmp
push
pop
sub
wrmsr
or
addr16
push
jl
out
add
mov
pop
enter
in
jge
or
mov
in
aas
jle
xchg
cmpsl
push
fimuls
sbb
sbb
push
jp
jb
fbstp
fcoml
test
ljmp
xorb
push
leave
icebp
dec
in
xchg
es
mov
ja
mov
push
popa
dec
xchg
sbb
mov
sub
push
push
push
cli
aam
outsb
sti
je
data16
call
stos
frstor
mov
mov
inc
sbb
cwtl
fwait
push
out
into
push
mov
xor
imul
mov
adc
xor
adc
ja
or
cmpsl
movsl
stos
cmpsb
sub
jmp
insl
xor
into
aad
jnp
test
jb
or
xor
or
sub
out
das
fildll
jge
push
jp
mov
or
dec
xlat
mov
dec
lret
or
pop
nop
xchg
shrb
stos
pop
js
dec
shrb
jae
dec
rcll
ja
xchg
ss
xor
dec
inc
push
lods
imul
cmpsl
pushf
or
xor
in
mov
lock
sub
in
dec
mov
lods
inc
lods
pop
xor
cld
push
out
rcrb
adc
cmp
jp
shrl
inc
inc
fnstcw
leave
adc
lods
cmp
and
lea
cmp
mov
mov
mov
das
push
divl
fiadds
mov
ret
shl
aas
push
loope
adc
icebp
xchg
dec
lods
nop
lods
jmp
jle
gs
cmp
pushf
jmp
sbb
add
in
outsl
sub
cmpb
int
mov
imull
xor
add
adc
jnp
jno
jnp
pop
sarb
aaa
xchg
mov
mov
fisttps
inc
mov
jb
jns
es
dec
pop
out
add
or
or
cmovno
pop
pop
pop
xchg
dec
mov
in
mov
popf
call
push
mov
xchg
or
shll
add
push
popl
add
xorl
popf
rcl
nop
push
sbb
jmp
or
xor
cli
clc
push
std
cmp
inc
outsl
loop
ljmp
movsl
mov
in
in
cmpsl
je
cwtl
fs
je
lds
cli
sbb
sub
mov
cmp
sbb
xchg
movsl
or
add
icebp
mov
nop
cld
loopne
xor
lahf
mov
lods
testb
dec
adc
dec
dec
xchg
mov
sbb
repz
sti
les
mov
pop
ljmp
pop
insl
pop
int
pop
mov
imul
fucomip
inc
push
test
lret
mov
sbb
ret
push
inc
xor
jg
jg
add
mov
mov
ja
lods
mov
shrb
lods
mov
fwait
imul
pop
jbe
cmp
rorb
or
and
test
fcoms
jb
ret
scas
pop
sbb
and
sbb
mov
popf
and
into
sarl
jg
adc
mov
lea
ds
pop
push
xchg
popa
dec
call
dec
and
mov
adc
sub
jmp
out
cltd
aad
ljmp
data16
sub
jo
scas
mov
mov
out
cmp
js
inc
lea
mov
aas
push
ret
stos
push
mov
leave
rcrb
pop
stos
fdivrl
outsl
aad
or
mov
dec
pop
add
daa
cmp
mov
sbb
push
xchg
mov
and
js
sbb
sbb
repnz
cmp
repnz
pop
mov
test
icebp
dec
xor
test
dec
dec
xor
sbb
mov
data16
jno
into
mov
mov
add
std
or
repnz
sbb
push
inc
repnz
and
loop
icebp
mov
aas
push
push
inc
cmp
out
ss
ss
cltd
jo
xlat
or
inc
cmp
jno
in
sbb
shl
enter
jae
push
lahf
mov
shrb
sub
inc
les
mov
les
inc
enter
aad
and
in
rcrb
out
push
daa
stc
cmpsl
push
fadds
xchg
xchg
jb
xchg
add
sub
pop
and
test
in
mov
pop
aad
cs
and
jae
es
adc
cmpsb
je
mov
shlb
roll
jns
inc
loopne
and
push
or
fists
and
inc
std
stos
and
daa
dec
xchg
ss
jno
mov
jb
mov
cmp
clc
loopne
lcall
sahf
fwait
scas
xchg
ja
mov
jp
pop
mov
sbb
cld
pop
out
sahf
pop
aad
icebp
pop
xchg
cmc
sub
lds
lock
movsl
pop
or
dec
fs
cltd
xor
mov
xchg
testl
add
cmp
jg
lods
fcoml
jecxz
dec
movsl
lds
xor
or
cltd
sbb
push
clc
add
mov
icebp
or
and
dec
dec
inc
dec
push
jge
sbb
pop
data16
int3
mov
mov
in
sbb
ljmp
test
fistps
int
fwait
or
outsl
cs
cmp
fistpll
jae
sbb
inc
and
or
xchg
adc
popf
lods
push
into
je
incl
jne
dec
push
pop
in
pushf
xor
mov
pop
jmp
aam
xchg
incl
pop
negb
mov
test
incl
mov
or
sti
dec
mov
cmp
shr
xor
and
out
jno
sub
das
adc
inc
xchg
imul
add
or
data16
clc
hlt
adc
punpcklwd
jecxz
cmp
push
shll
xor
divb
movsl
adc
fists
pop
lds
pop
lea
lods
dec
inc
mov
dec
jle
ret
xor
roll
mov
je
fwait
scas
sarl
leave
sbbl
mov
mov
pop
pop
sbb
bound
adc
jmp
sbb
aam
mov
dec
add
sub
rclb
xor
cmp
loop
fists
aam
clc
push
push
xlat
stos
sbb
mov
xchg
pop
lea
mov
lahf
data16
lahf
gs
out
cmp
dec
fst
lret
cmc
rcr
mov
mov
roll
dec
sub
mov
adc
je
jns
push
test
rcl
es
std
mov
sub
inc
sub
and
in
xchg
jle
cli
cmpb
lret
push
jo
mov
xchg
scas
fimuls
jae
lahf
jno
mov
dec
sub
xor
cmp
lock
lds
push
inc
outsl
enter
mov
add
or
sub
sbb
xchg
rolb
sub
add
add
mov
call
mov
addb
rclb
out
bound
andb
inc
jno
add
fsubl
out
pop
or
mov
fiaddl
data16
mov
inc
in
push
iret
mov
sahf
stos
shrb
add
or
in
dec
push
sbb
and
int3
into
cmp
test
sahf
mov
aas
xchg
push
pop
xlat
dec
xchg
enter
ja
pop
mov
dec
aaa
icebp
or
lcall
fdivr
pop
sbb
loop
inc
inc
jecxz
push
inc
xchg
pop
test
mov
adc
mov
imul
dec
movsb
lcall
sub
sub
lds
enter
fimuls
jg
lods
dec
jge
mov
add
xor
mov
jo
sahf
out
daa
mov
xchg
sub
std
xor
scas
icebp
xor
test
imul
rcrb
pop
cmp
mov
aad
sub
push
jl
fs
enter
fwait
in
xchg
or
mov
pop
clc
push
sub
push
mov
xor
stos
enter
hlt
cs
xchg
mov
xor
jg
sbb
stc
xor
test
fstl
xor
jno
mov
shlb
add
dec
push
add
test
repz
test
sbb
mov
push
in
dec
cmp
dec
push
aam
pop
add
loop
test
or
in
je
push
push
cmp
out
xchg
inc
ds
cmp
scas
cmp
scas
orb
sub
lock
test
dec
adc
push
adc
xchg
outsb
jp
cltd
daa
nop
test
movsb
pop
push
filds
scas
pop
add
data16
notl
call
sbb
push
cld
add
xchg
aas
and
cmpsb
mov
sub
lods
cmp
mov
push
dec
push
std
push
aaa
and
hlt
jnp
mov
aad
push
pop
jle
iret
stos
cwtl
popf
ret
imul
rol
mov
pop
shl
dec
clc
xor
rcrl
data16
popa
loope
mov
push
fimull
xchg
add
or
lret
ficompl
aas
dec
jns
lret
or
cmc
int3
outsl
fst
mov
cmp
or
sbb
xlat
mov
gs
mov
pop
ds
scas
icebp
add
adc
mov
ja
adc
mov
xor
cld
mov
jl
inc
push
and
mov
lock
and
adc
into
cwtl
sub
and
ret
test
js
lret
and
mov
or
test
pop
xchg
cmpb
dec
bound
or
mov
loopne
push
inc
fsubs
clc
rorl
jmp
pop
jnp
cmp
mov
pop
push
pop
inc
les
not
adc
adc
xchg
aam
js
xor
loop
sub
imul
cmp
insb
pop
inc
mov
xor
jns
jno
inc
stos
adc
insl
mov
ds
push
adc
insl
sub
insl
pop
sub
jo
jecxz
repz
xor
push
xchg
addr16
bnd
aam
push
push
push
insb
mov
repz
and
sbb
dec
lock
test
or
lcall
test
sti
cli
out
inc
gs
bound
mov
jno
xchg
fstpt
sub
xor
hlt
fs
lock
into
dec
orl
pop
loope
int3
inc
fwait
mov
pop
lock
data16
push
ja
mov
mov
cmp
out
je
or
xchg
jle
inc
lcall
push
imul
cmpsb
ss
mov
jmp
mov
out
loope
push
inc
sub
imul
or
fbstp
getsec
clc
out
add
jbe
mov
add
mov
xor
mov
push
inc
rol
push
push
stos
adc
or
cmp
cmp
inc
fnstsw
dec
mov
ret
mov
ljmp
sbb
stos
iret
imul
add
dec
scas
mov
jns
das
hlt
jns
dec
dec
mov
icebp
lea
lret
add
int3
out
inc
andl
jae
in
inc
sub
pop
repnz
fnstenv
nop
ret
jnp
cmpsl
sub
jl
adc
js
mov
fimuls
fistpl
rorl
mov
test
add
mov
imul
icebp
stc
cmp
scas
out
scas
int
inc
mov
shl
sbb
push
and
push
out
fs
sbb
or
adc
repz
test
cmpsb
sbbb
xchg
push
push
cmp
ljmp
inc
scas
das
or
mov
dec
out
mov
loopnew
mov
dec
cmpsb
xchg
ja
pop
dec
jns
add
add
cmp
fwait
lods
enter
pushf
imul
rorl
imul
dec
in
dec
andb
lock
mov
adc
adc
imul
push
movsb
lahf
jo
into
sub
dec
push
xor
loope
fidivrs
dec
xchg
push
mov
push
out
fwait
add
testl
pop
imul
xor
pop
mov
movsl
pop
push
clc
mov
test
out
rol
jp
xchg
fiadds
mov
xor
mov
cmpsb
aad
xor
pop
cmp
push
fstpl
xchg
ficoms
mov
or
sbb
cmc
pushf
xchg
xor
rol
icebp
add
or
push
data16
pop
insb
fdivrl
mov
xor
dec
cmp
jns
push
lcall
dec
in
dec
mov
int3
fnstsw
mov
pop
sub
sub
sbb
or
cld
in
mov
mov
in
mov
pop
sub
sub
sbb
or
cld
lea
mov
in
mov
pop
sub
sub
cmp
or
cld
mov
mov
mov
in
mov
pop
sub
roll
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
shr
sarl
mov
fcoml
test
popa
pop
adc
add
xor
sar
int
fstl
lea
jge
inc
popa
pop
push
add
cmp
imul
stos
popf
loope
scas
xchg
pop
sbb
das
jp
jae
gs
jns
test
mov
imul
pop
push
out
subb
in
mov
cmc
add
xor
out
cmp
and
jb
bound
mov
or
xor
test
inc
rolb
movb
inc
insl
fs
popa
mov
stc
fstps
std
adc
or
lea
mov
popf
cmc
mov
pop
out
cmp
mov
repnz
cmp
add
xor
sahf
or
dec
ret
lods
and
push
inc
add
leave
pop
sub
add
mov
push
pushf
bound
inc
sub
pushf
inc
push
js
loope
ja
popa
xchg
mov
stc
mov
xchg
insl
fcmovnbe
pop
dec
push
popa
pop
adc
roll
adc
mov
test
out
rol
clc
mov
or
arpl
push
pop
jns
je
stos
movsb
mov
clc
jmp
out
inc
in
scas
ss
or
sbb
bound
pop
push
lods
sbb
ret
mov
push
insl
inc
jge
dec
popa
pop
adc
and
icebp
int
fstl
lea
jge
dec
popa
pop
adc
and
xor
imul
fmull
mov
in
call
loopne
inc
xchg
js
jne
mov
or
mov
adc
mov
adc
lcall
inc
cmpsl
jo,pt
pop
mov
aad
jae
cmpb
fldenv
enter
out
in
pop
sahf
pop
test
lret
js
out
scas
xchg
in
cmpsb
dec
dec
inc
and
aam
in
add
and
push
pop
movsb
cmp
dec
sti
movsl
cld
les
pop
imul
stc
dec
out
mov
mov
add
cld
pop
shr
xchg
cmp
inc
test
push
add
arpl
lea
push
int3
pop
sub
outsl
lret
out
cmp
jecxz
lods
or
ljmp
mov
out
loop
mov
adc
addr16
pop
sub
push
cmp
jg
js
mov
cmp
out
sti
rol
push
fisubs
fiadds
inc
je
outsb
inc
xchg
sbb
sbb
add
outsl
and
in
adc
in
inc
popf
aam
cmpsb
push
mov
cmp
pop
in
enter
dec
add
loopne
mov
pop
add
mov
sbb
jp
es
rolb
cmp
lret
mov
add
cwtl
push
int3
pop
aaa
mov
push
push
repz
fsubp
sub
dec
or
mov
mov
mov
sbb
dec
subb
xor
sahf
adc
shl
or
and
out
aaa
adc
testb
push
sub
out
mov
xor
cmpsb
xor
or
movsb
loope
pop
add
lock
repz
and
mov
adc
pop
pop
bound
je
and
js
imul
aaa
lods
gs
mov
mov
mov
add
xor
add
test
xchg
jae
sbb
lret
inc
shrb
pop
mov
xor
sbb
mov
dec
imul
jae
test
xchg
mov
shrb
leave
mov
cmp
cmp
push
mov
repnz
movsl
inc
ret
mov
popa
sahf
dec
cld
and
jecxz
jnp
pop
daa
ret
jg
cmc
jne
ret
mov
jbe
adc
push
xchg
pop
iret
int3
inc
mov
test
jle
filds
inc
mov
push
scas
inc
addl
jno
cld
jge
outsl
push
imul
mov
popa
push
repnz
fdivr
decb
push
icebp
push
stos
jp
push
call
pop
jle
out
add
pop
sub
or
mov
pop
jnp
mov
sub
pop
jmp
sbb
icebp
push
iret
jbe
fisubs
dec
xor
daa
pop
notb
add
jmp
dec
div
push
or
push
in
in
insl
stc
mov
and
mov
daa
in
fstp
pop
lcall
div
scas
sub
xor
pop
mov
and
push
push
iret
pop
xor
fadds
cld
jne
lds
add
insl
xchg
add
repz
push
cmp
lds
or
mov
in
cmc
arpl
xchg
dec
call
sbb
mov
or
imul
or
mov
repnz
data16
lds
jle
mov
mov
test
adcb
adc
push
out
repnz
iret
pop
imul
xor
or
lods
jp
cli
fisubl
mov
outsl
adc
aas
cmpsw
sub
inc
inc
loope
xchg
inc
pop
xchg
testl
cs
out
mov
sbb
dec
add
ds
add
mov
bound
into
ljmp
mulb
out
push
addr16
clc
dec
pop
xchg
test
inc
es
movb
jecxz
xchg
and
adc
mov
int
pushl
mov
mov
xor
out
jne
mov
pop
dec
imull
mov
push
movsb
test
or
xor
aas
mov
dec
insb
int
popa
test
sub
mov
add
mov
mov
ret
cmp
push
outsl
cltd
ja
or
adc
scas
dec
outsb
jns
jb
mov
sbb
popa
insb
and
rorb
pop
inc
daa
popf
ja
jle
mov
in
scas
idiv
inc
out
mov
dec
pop
jmp
mov
or
and
dec
ljmp
aad
addr16
push
mov
dec
adc
cmp
in
push
pop
insl
fisubs
insb
xor
add
pop
xor
push
pop
jae
bound
add
pop
addr16
notl
vmovaps
cmpl
jns
movb
arpl
pop
rcl
add
sbb
mov
nop
sbb
push
jmp
jl
jle
enter
inc
orl
push
sub
or
push
arpl
dec
pop
xor
sbb
mov
enter
mov
lods
in
sub
rol
xor
rolb
stos
imul
push
jmp
loop
mov
out
cmp
daa
jb
jb
xchg
es
adc
mov
inc
dec
and
mov
int3
mov
sub
and
xor
ret
out
push
sub
stos
in
jne
jle
sbb
jb
fsubr
push
loope
aas
xor
cwtl
sub
mov
or
out
pop
push
add
aas
cmp
or
mov
mov
add
lret
or
push
sbb
pusha
call
shl
fldcw
or
xchg
xor
shrl
xchg
popf
push
test
mov
xchg
cmc
pushf
sub
daa
aaa
sbb
cmpsl
mov
and
cs
sbb
hlt
mov
int3
and
jb
movsl
adc
add
std
int3
cli
fdivrs
ja
int
xchg
adc
jecxz
call
shld
ja
scas
lahf
push
dec
pusha
popa
mov
data16
adc
nop
jnp
adc
push
enter
push
loopne
mov
xchg
add
push
sti
sbb
sbb
or
or
stc
inc
test
push
insl
mov
fidivs
lcall
hlt
and
xchg
filds
fstl
xchg
ds
in
cmp
cli
sti
sarb
je
lock
and
sbb
xor
xchg
lods
or
dec
in
push
sbb
dec
loope
and
cmp
subb
cmp
jne
dec
jnp
es
shrb
push
and
enter
imul
rolb
addr16
jp
mov
outsl
mov
dec
bound
xor
mov
call
xorb
arpl
push
pusha
jbe
add
shlb
sbb
dec
je
out
push
add
cmp
jbe,pn
dec
lods
push
pop
push
daa
rol
jnp
mov
mov
dec
mov
sbb
fsubr
rcll
xchg
repnz
cmpsl
or
add
xchg
sub
cmp
rorl
dec
mov
inc
addr16
iret
xor
xorl
or
sub
daa
xchg
pop
cld
mov
jbe
stc
aaa
call
or
es
jmp
into
out
pop
andb
popa
mov
and
cmp
dec
lret
push
repnz
xchg
mov
stos
bound
pop
stos
data16
mov
test
xchg
aad
popf
jg
repnz
imul
or
or
mov
push
fadds
and
ja
cmp
dec
dec
pop
sti
movl
shrb
cmp
mov
fsubl
outsb
and
jmp
sub
enter
mov
imul
cmp
andl
jecxz
iret
popf
cmp
pop
jns
clc
ret
arpl
mov
adc
out
mov
and
add
int3
nop
inc
xlat
in
mov
mov
xor
roll
pushf
js
mov
fistpll
xchg
popa
sti
jnp
add
inc
hlt
data16
out
mov
pop
jl
sahf
cmc
rcl
adc
jae
xchg
xor
push
out
xchg
add
lds
dec
subl
sub
gs
jg
cmp
fisubs
pop
mov
cmp
test
mov
xchg
out
sub
inc
divb
fldt
inc
call
pop
stos
std
call
mov
adc
mov
and
cmp
lret
scas
mov
lods
lea
orb
sbb
fcom
loopne
or
xor
stos
enter
mov
lea
cmp
mov
add
lock
and
gs
js
pop
aaa
in
adc
add
inc
xor
push
adc
mov
fiadds
mov
fcmove
push
xlat
popa
or
lahf
stos
lret
lods
aaa
lahf
sbb
enter
push
push
jbe
hlt
adc
shll
jne
fists
icebp
pop
cltd
or
jle
outsb
xchg
inc
sub
pop
dec
les
dec
sbb
push
dec
sub
movsb
into
mov
jl
dec
movsb
mov
mov
int3
mov
rolb
jbe
cmp
aas
gs
xchg
lret
push
sbb
push
sub
xchg
aad
dec
push
fsubl
in
jg
xor
rorb
imulb
adc
scas
pop
sub
mov
cmp
push
and
mov
add
sti
in
inc
mov
cmc
outsl
lds
inc
or
aas
repz
lret
out
loope
pusha
jne
pusha
adcb
faddp
int3
fdiv
sbb
cld
pop
lret
lods
cmp
mov
sahf
fsubs
jle
int
lods
fimuls
pushf
inc
fldcw
push
orl
push
pop
fidivrs
adcl
xor
insb
jno
inc
xchg
sub
jb
add
pushl
add
aas
fdivrs
mov
in
jl
xchg
popf
shlb
cmp
jno
jmp
mov
test
xorl
shrl
mov
movsl
lret
rcrl
jg
fsts
mov
push
pop
sub
adc
mov
jmp
or
fcmovu
lock
out
fistpll
and
fstp
and
add
aad
outsl
sarl
push
dec
cmp
pusha
mov
xchg
fs
sbb
jecxz
dec
cmpsl
cmp
and
and
mov
jge
mov
push
push
stc
cs
popa
int
pop
loop
xor
and
call
adc
filds
dec
mov
into
mov
add
pushf
pop
dec
aad
sbb
cmp
in
jg
push
pop
fisttpl
xor
cmp
inc
push
sti
cmc
jg
lahf
mov
mov
jo
std
pop
mov
orb
enter
xchg
adc
xchg
mov
stc
sarl
add
es
or
mov
aam
pop
adc
dec
dec
sbb
cs
push
lahf
xchg
or
sbb
mov
pop
sbb
dec
mov
add
push
mov
ja
xor
add
test
inc
xor
mov
push
es
fdivl
je
lock
and
popf
imul
cmp
cwtl
loopne
xchg
loopne
sbb
mov
cld
jle
mov
inc
xlat
out
push
add
or
mov
dec
add
dec
adc
iret
mov
xorb
xchg
xor
xchg
cmp
clc
pusha
fisubrl
adc
out
inc
out
out
rorl
faddl
ret
insb
arpl
cmp
mov
lret
repnz
mov
ss
js
shrl
cmpps
subl
push
mov
insb
test
pop
xchg
push
jp
or
frstor
in
movl
xor
iret
popf
icebp
and
push
cmp
jns
test
push
dec
or
sbb
mov
xchg
and
lcall
mov
stos
js
aaa
xor
cltd
fwait
pop
pop
daa
loop
jns
lock
les
sub
mov
mov
iret
adc
jo
add
sbb
jl
and
cs
xchg
mov
arpl
sbb
mov
and
pop
dec
decl
pop
and
pop
in
push
jmp
aad
shlb
xchg
pusha
jp
mov
dec
cltd
mov
sahf
dec
inc
mov
roll
in
xchg
adc
ret
mov
jnp
cmp
dec
mov
pop
inc
loope
or
movsb
mov
ss
pop
fcomps
jge
cmp
sub
movsl
inc
add
xor
arpl
into
push
aaa
stos
aam
pop
bnd
sub
bound
pop
lds
inc
scas
neg
in
imul
sbb
sbb
jbe
and
xchg
jbe
fisttpl
inc
jae
pushf
pushl
mov
outsb
cli
mov
pop
dec
imul
xor
or
push
imul
bound
inc
in
shlb
and
negl
push
pusha
aaa
push
mov
jnp
test
ror
cwtl
sbb
fs
test
pop
push
mov
add
adc
adc
cmpsl
xor
pop
adc
subb
movzbl
sub
stos
mov
mov
std
xchg
add
pop
lret
sub
fcmovne
lods
pop
xchg
lea
inc
or
sbb
adc
dec
stos
pop
mull
adc
popf
movsl
pop
movsb
xchg
xor
xlat
pop
add
jle
xor
cmpsb
rolb
lahf
out
cmp
jne
dec
sub
push
outsb
xor
shlb
mov
cmpsb
inc
cmp
pushf
sub
sbb
inc
scas
popf
jg,pt
cmp
xor
lods
mov
jo
and
mov
cmp
jns
adc
add
out
push
mov
lret
jmp
aaa
bound
movsl
lods
mov
pop
insb
push
notb
data16
xor
sub
sti
out
xchg
xchg
xlat
and
daa
mov
stc
dec
inc
push
jmp
int3
aad
xchg
lock
stos
pop
mov
adc
xor
sub
insb
xor
jp
jmp
pop
es
in
lock
sti
fmul
cmpsb
int3
mov
movsl
cmp
popa
js
pop
fldenv
aas
mov
mov
pop
dec
ljmp
or
sbb
and
push
rolb
stc
daa
test
push
testl
add
loopne
pusha
cmc
xchg
mov
insl
lret
lret
xor
sub
clc
mov
lods
sub
ds
sub
lret
pop
movsb
addr16
mov
lds
push
jle
fmul
fcmovnb
pop
add
lods
sbb
je
xchg
push
stos
sbb
loope
hlt
in
cltd
lock
out
mov
movsb
inc
clc
adc
sbb
xchg
xchg
shrl
rorb
es
sub
movsb
or
scas
jb
cmpsb
xchg
jae
aam
mov
daa
fcmovb
mov
sub
std
aam
jns
mov
aaa
movsl
loop
sbb
icebp
sub
popf
jbe
mov
mov
adc
neg
or
shlb
out
js
or
mov
stos
test
dec
sub
dec
push
jg
and
fldl
inc
xor
fnstenv
adc
stos
and
imul
fisubs
mov
cli
dec
add
pop
cmp
outsb
pop
sbb
pushf
jp
pop
iret
xchg
jbe
sub
sub
insl
mov
pop
aaa
push
lcall
jno
lods
bound
imul
xchg
clc
roll
loope
dec
and
test
stos
sbb
mov
rcr
fnsaves
mov
nop
stc
cmpsl
imul
hlt
das
out
fdivr
stc
std
popf
cltd
sub
jo
mov
sbb
aaa
and
mov
loopne
out
adc
push
outsl
pop
dec
xchg
outsl
rclb
cmc
das
jl
pop
push
movsl
xlat
loop
call
cmpb
add
rorb
mov
add
or
in
movsb
jno
cld
ds
test
or
jge
mov
lahf
call
fs
ret
iret
jge
repz
prefetch
mov
lds
cmp
pushf
imul
push
lea
rcrl
ljmp
jae
enter
cli
cmpsl
sub
ret
pop
pushf
or
lea
cld
ljmp
outsl
xchg
int3
cmpsl
sbb
addr16
inc
inc
jle
and
movsl
add
mov
cmp
jmp
jnp
jp
shll
aam
testl
sub
or
mov
pop
pop
in
sub
cli
sub
or
outsb
lods
mov
or
sub
lahf
cmp
mov
cltd
pop
pop
adc
movsb
into
adc
push
data16
mov
ljmp
lods
inc
lock
insl
sub
dec
pop
push
cmp
add
and
cwtl
and
pop
push
mov
stos
cltd
push
push
lret
pop
pop
jge
movsb
push
mov
mov
sub
push
mov
fs
mov
pop
bound
mov
aam
inc
mov
in
and
cmp
fnsave
jae
arpl
inc
mov
xchg
lods
mov
out
mov
shrb
testl
cmpsb
sar
loopne
xor
fs
jecxz
aaa
push
out
out
cmp
xchg
repnz
jg
es
cwtl
pop
mov
pusha
int3
cltd
fs
pop
idivl
sub
jmp
sub
cmpsb
ss
or
shrl
into
push
xlat
cmpsb
in
push
mov
push
pusha
cmp
xchg
lock
sub
stos
into
adc
pop
addr16
repz
ljmp
cmp
sbb
pop
lahf
repz
or
push
inc
cmc
push
lods
ljmp
push
out
mov
pushf
mov
dec
test
flds
sbb
inc
jmp
inc
dec
jbe
xchg
pop
ja
dec
lcall
push
jne
div
adc
jg
cltd
lods
jo
fistl
adc
popf
pusha
movsl
mov
enter
iret
inc
add
jb
cmpb
xchg
scas
ret
xor
rorb
lock
js
sbbl
adc
pop
lret
push
idiv
jle
jle
mov
and
shlb
inc
xchg
stos
mov
jbe
fs
sar
jg
pop
xor
or
xor
fwait
or
jae
pop
pop
xor
test
lahf
jnp
cmp
jb
mov
data16
xor
enter
cmc
adc
and
inc
daa
lret
and
and
fimull
cmp
xor
je
or
test
xor
repnz
add
int
push
sub
in
out
mov
scas
int3
pop
idivb
dec
push
rcrb
lret
test
fdivs
push
cmc
enter
ret
in
nop
add
mov
iret
jno
sbb
mov
enter
or
in
sti
bound
xchg
mov
insb
addl
push
pop
ds
jns
add
mov
cmpsl
sbb
add
mov
or
popf
nop
dec
xor
mov
inc
out
cmp
push
js
or
js
push
push
adc
dec
mov
mov
pop
loopne
aam
popl
add
movsl
call
push
mov
popf
mov
orb
test
mov
pop
cmp
jae
sub
call
adc
outsb
push
sbb
sti
ret
pop
cmp
lahf
testl
or
adc
sub
mov
div
xor
pop
dec
pop
or
test
xchg
push
add
pop
lock
fs
cs
jecxz
cmpsl
jp
mov
out
int
pop
daa
pop
jp
push
les
sbb
leave
mov
popf
mov
push
rdtsc
jp,pn
cmp
repz
pop
fstl
sbb
mov
cmpsb
cmp
pop
dec
and
and
pop
adc
push
je
mov
dec
add
mov
push
daa
xlat
fisttpl
fstps
shlb
test
int3
fdivp
or
dec
ss
adc
fdivrs
mov
rcr
cmp
rclb
mov
in
and
stos
or
sub
lea
movl
add
push
sub
ja
jnp
je
xchg
call
sbb
fsts
insb
inc
popa
mov
and
arpl
jg
cmp
sarb
lret
xchg
sbb
mov
mov
loope
xchg
lods
cmpl
jno
popa
pop
adc
and
icebp
int
fstl
lea
jge
dec
popa
pop
adc
and
xchg
aad
flds
lods
adc
push
insb
inc
jns
dec
popa
push
adc
adc
lds
popf
sbb
lods
xchg
mov
push
xchg
mov
sub
mov
jne
gs
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
jno
xchg
int3
sbb
or
jb
add
lods
in
adc
stc
sbb
or
cmp
sub
fsubrl
sbb
or
jl
insb
mov
aam
pop
lods
dec
mov
mov
mov
cmp
sub
fsubrl
insb
pushf
and
jo
mov
mov
push
in
or
stos
push
mov
test
jnp
idivl
daa
mov
pop
adc
pop
test
jae
jnp
and
test
pushf
xchg
or
enter
push
mov
imul
pop
cmp
jge
fdivrl
sbb
mov
hlt
xchg
sbb
stc
cld
or
arpl
popa
or
mov
push
call
jge
xchg
lea
dec
push
test
clc
jae
jno
out
repnz
xor
jecxz
int3
popa
adcl
sbb
add
jl
cld
add
in
or
cmp
sarb
in
test
inc
fnstenv
pop
popf
test
cltd
cmp
cmp
fsubrl
sbb
pusha
in
jl
sub
pop
ds
inc
jl
insb
pushf
sbb
or
cmp
inc
dec
fcomps
pop
cld
in
adc
sbb
dec
cli
sub
dec
int3
sbb
sbb
inc
mov
mov
in
adc
aad
enter
xor
jb
or
dec
cwtl
pop
test
mov
mov
mov
lods
mov
jl
insb
cld
sbb
or
cmp
sub
fsubrl
sbb
or
jl
insb
mov
lods
mov
jl
insb
cld
sbb
or
cmp
sub
fsubr
movsb
mov
push
cs
add
xor
out
pushl
push
or
jg
mov
jg
sti
cld
das
rcl
icebp
lahf
inc
repz
adc
jae
add
pusha
mov
rol
js
push
ss
inc
out
mov
sarb
lods
ficoml
xchg
or
sarb
lret
test
test
ljmp
mov
cmp
and
ja
pop
adc
jp
jo
pop
pop
xchg
mov
incb
push
daa
rol
out
test
arpl
xchg
cwtl
pop
mov
mov
xchg
push
or
cmp
or
sahf
stos
push
mov
and
jb
jge
jl
cmpsl
sbb
outsb
xchg
lret
pop
mov
repz
popa
mov
fdivl
pcmpgtw
add
imul
add
js
out
pusha
daa
dec
sbb
push
sub
lods
test
fbld
jp
mov
popa
push
cmp
mov
into
leave
stos
nop
repz
mov
inc
lods
imul
outsb
inc
xor
popf
mov
lahf
test
dec
int3
je
push
push
aas
fidivl
cwtl
addr16
jae
je
jmp
xor
punpckhdq
add
pop
fisttpl
outsl
and
test
insb
pushw
call
jbe
ds
ja
mov
lds
mov
jecxz
imul
mov
sbb
or
push
mov
pushf
and
cmpsl
lock
and
or
ds
sbb
lret
mov
dec
xchg
push
mov
cs
xor
test
fldl2e
push
jecxz
mov
dec
pop
pop
cmp
mov
jno
enter
xor
inc
xor
fildll
adc
nop
pop
movsb
push
out
sbb
lret
pop
or
sbb
andb
cmp
cmpsl
fwait
stos
xor
les
pop
push
sti
notb
mov
sti
adc
pop
inc
mov
adc
pushf
jecxz
push
mov
xchg
mov
cmpsl
jge
movsb
mov
filds
or
mov
inc
fdivl
addr16
cmp
rorl
cmp
lcall
adc
push
cltd
ss
inc
sbb
popa
and
repz
icebp
icebp
dec
or
pop
mov
dec
xor
test
pop
flds
int
pmulhw
jns
xchg
cs
shll
add
loop
and
add
dec
push
bound
push
nop
add
sbb
dec
adc
aaa
call
rcll
test
das
push
xchg
call
sbb
xor
scas
imul
ja
mov
in
sbb
jecxz
shr
in
outsl
das
xchg
sti
loop
addr16
sub
ret
addr16
cmp
int3
mov
adc
or
std
rolb
pop
imul
pop
test
es
pushf
popa
dec
pop
mov
add
sbb
add
xlat
inc
addr16
xor
enter
mov
fnstcw
addr16
in
fdivl
in
xchg
sub
mov
and
ss
sbb
fsubs
inc
xchg
test
xchg
das
out
lds
mov
cmp
int
sti
adc
inc
into
inc
arpl
sub
ss
sbb
mov
and
out
jle
mov
sbb
xchg
xchg
lods
call
fidivl
hlt
fwait
pop
cs
add
sbb
cmp
repnz
ficompl
inc
aam
mov
push
outsb
or
push
adc
daa
ja
dec
hlt
cs
lahf
xor
test
shlb
shrl
jae
inc
sub
cmp
add
shll
cmp
dec
test
mov
xchg
arpl
mov
in
sub
mov
pop
xor
inc
mov
es
lret
sbb
sub
loop,pt
fdiv
pop
arpl
out
xchg
sbb
mov
sahf
gs
pushf
je
cmp
cmp
fwait
ss
cmp
mov
mov
repz
or
clc
lods
pop
test
movsb
fwait
jl
push
mov
rolb
mov
mov
xor
aam
pop
mov
push
loopne
in
sbb
fimuls
mov
fcmovb
mov
js
pop
fxch
lock
bound
and
xor
std
and
pop
sbb
push
xor
or
pop
mov
gs
fsubrl
and
in
jns
loope
jns
mov
cmp
in
push
in
adcb
sub
shlb
mov
cli
mov
les
sub
and
aaa
mov
sub
cmpsb
pop
fidivrs
mov
out
fisubrl
pop
lcall
imul
repz
mov
or
lods
in
xorb
movsb
push
or
in
outsl
scas
sub
ljmp
call
dec
push
sub
lds
iret
mov
fchs
xchg
adc
aaa
test
flds
or
xor
sahf
jp
sub
loope
dec
fisttps
lods
and
or
call
int
pop
lds
jb
rcr
sbb
add
popa
lods
mov
push
mov
sarl
and
lret
inc
mull
call
fs
imul
rcll
in
scas
mov
sub
adc
mov
in
xchg
mov
insb
jmp
jle
roll
pop
or
jecxz
sbb
mov
aaa
out
inc
sbb
mov
xchg
sbb
or
cmpb
push
dec
sarb
loop
outsl
ljmp
mov
xchg
fiaddl
ja
fdivr
ljmp
push
cmp
aaa
lahf
out
cltd
xor
jle
jmp
es
sub
xchg
shll
lea
xchg
mov
jns
dec
movsl
xlat
or
mov
mov
cmp
inc
sub
inc
and
jecxz
mov
std
aad
rcrb
xor
jno
and
sbb
outsl
xchg
loop
xor
daa
not
and
inc
nop
or
jo,pt
aam
lret
into
dec
pop
adc
js
int
push
mov
call
mov
push
fwait
push
mov
fsubrs
or
fbld
lahf
push
mov
push
mov
jmp
mov
inc
jae
pop
or
stos
daa
in
xor
xchg
mov
jb
cmp
inc
int3
stc
sbb
arpl
ljmp
jp
movsl
test
dec
add
and
out
cmp
sub
stos
ror
inc
fdivrl
es
ljmp
xchg
insb
mov
push
cli
or
jne
pop
movsl
pushf
xor
push
push
outsb
orps
test
movswl
mov
inc
and
push
pop
addr16
pop
test
cmp
fimull
sahf
or
rcrb
mov
or
mov
jae,pn
mov
xorl
es
or
xchg
dec
dec
and
sbb
xor
jb
fstpl
add
cmpsb
and
mov
or
push
sbbl
and
pop
bts
inc
cmp
rcll
jb
xchg
push
pop
cli
sbb
sub
xorb
or
xchg
int
lods
push
sub
mov
dec
xchg
and
cmp
movsb
cs
inc
loop
push
dec
push
dec
fs
in
std
mov
inc
mov
cmp
sbb
xlat
inc
fcompl
mov
jmp
mov
mov
test
out
adc
push
aad
push
ret
inc
pmullw
pop
mov
addr16
cwtl
jp
adc
xlat
shrb
sbb
sbbb
in
outsl
dec
dec
cmp
loopne
divps
cmp
in
aam
ret
popa
fidivrs
sub
mov
pushf
push
loop
leave
lds
icebp
or
and
shr
out
in
out
int3
add
nop
fildll
popf
mov
shll
add
repnz
and
and
xchg
das
int
push
mov
adc
in
dec
call
jle
stc
cmp
lods
push
sbb
fs
out
je
in
fwait
push
xlat
test
dec
mov
xor
cs
adcb
out
fdivl
xchg
jmp
fwait
mov
cmpsl
and
or
out
jno
lcall
and
jnp
repnz
ficoms
andb
lret
add
inc
or
dec
rorl
jb
cmpl
cmp
xor
aas
xor
mov
xchg
cmp
frstor
xchg
sbb
enter
jecxz
rolb
clc
std
push
push
stos
mov
sub
dec
jns
cmpsl
fistps
adc
pop
xorl
or
push
mov
mov
in
sti
enter
repz
cmp
push
roll
inc
jl
fs
addr16
mov
je
xchg
pop
cmp
lahf
pop
dec
push
mov
xor
lret
cli
jmp
pop
mov
jo,pt
push
lret
aad
rcl
fs
add
in
andl
sbb
fstps
enter
iret
ss
xor
inc
stos
enter
int3
push
jnp
xchg
push
cmp
dec
mov
ljmp
lret
in
test
mov
hlt
rcrb
adc
shrb
push
xor
imul
pushf
shrl
lods
inc
push
enter
xor
pusha
aam
mov
push
adc
nop
shl
aad
adc
call
mov
lret
push
je
cmpsb
repnz
adc
cld
mov
xor
rclb
sub
outsb
cmp
mov
orb
adc
cmpsb
fsubrl
movsl
mov
jg
aas
push
add
jecxz
pop
push
dec
lret
mov
addb
mov
mov
sub
push
or
fcom
and
inc
xchg
sub
cmc
inc
and
cmp
fisubl
negl
dec
xchg
fnstsw
in
cmp
dec
subl
xchg
stc
dec
movl
sbb
fbstp
js
lock
jmp
sbb
andl
repnz
xchg
mov
fsubrl
adc
outsl
stc
adc
vpcmpeqd
addr16
dec
inc
mov
push
mov
add
xchg
andl
push
rorl
notl
or
ficompl
pop
push
fisubl
arpl
outsl
scas
mov
pop
or
adc
popa
mov
pop
mov
mov
subb
cmp
lret
out
adc
sub
out
movnti
dec
cltd
dec
mov
das
mov
xchg
adc
sbb
adc
push
out
es
sub
dec
xor
pop
out
or
push
sarl
sbb
sbb
jo
and
out
inc
mov
push
and
aad
ficoms
xchg
popf
push
add
add
mov
inc
push
dec
xchg
push
sbb
movsb
push
inc
add
ret
cmpsl
ret
jne
bound
push
andb
push
sub
dec
stos
lock
jno
jno
lock
in
ret
lahf
pop
scas
jae
xor
int3
leave
add
fdivp
push
bound
daa
pop
mov
pop
dec
adc
decb
push
pusha
daa
lods
divb
cmpsb
add
push
pop
lods
cmp
fidivl
jae
pop
jg
rcl
sub
inc
sbb
in
sbb
and
cmc
adcb
xor
and
pop
mov
or
aad
xchg
js
jle
pusha
pop
and
pushf
jl
filds
hlt
fnstsw
sub
dec
insb
stos
scas
ss
mull
mov
hlt
jecxz
lea
mov
icebp
insl
mov
pop
in
mov
sub
mov
mov
scas
adc
jne
fcomps
jns
and
jbe
sbb
incb
jno
popl
fcoms
insl
add
std
out
popf
mov
inc
push
lds
std
pop
aad
in
inc
out
orl
cmp
push
int3
mov
loopne
cmp
push
mov
and
pusha
stos
push
jb
sbb
out
push
pop
in
aam
mov
jbe
fisttps
fcmovbe
inc
ret
add
out
add
mov
jo
mov
inc
ja
inc
gs
ss
rorl
xchg
dec
add
pushf
pop
pop
fdivrs
cwtl
or
fmulp
and
test
jl
inc
pop
push
push
in
xchg
jmp
cwtl
push
jecxz
stos
mov
dec
test
decl
mov
orb
outsb
and
in
movsb
jmp
je
cmp
ficompl
ret
ret
mov
enter
push
nop
push
subl
fnsave
xor
pop
mov
fimull
fidivrl
adc
dec
out
mov
insl
mov
and
out
pop
xor
mov
sbb
int
ljmp
xchg
add
repnz
mov
cwtl
jecxz
ds
repnz
loopne
subb
adc
jnp
push
scas
popa
mov
shll
xchg
mov
pop
jge
xchg
jge
or
aam
and
or
mov
or
jmp
push
sar
pop
gs
or
int3
int3
insl
inc
sub
jmp
pop
dec
cltd
jae
outsb
int
gs
push
push
mov
outsb
dec
xchg
jno
adc
aas
adc
dec
iret
lock
and
divl
fdivl
arpl
inc
xlat
sbb
pushl
mov
cmpsl
sbb
inc
lock
push
pop
enter
jns
and
and
cmc
push
jnp
insl
pop
cmpsl
dec
sub
add
mov
iret
lret
dec
cmpsb
aaa
inc
leave
loop
lret
jp
mov
loop
repnz
pop
xchg
lods
aas
imul
or
insl
mov
adc
ss
cmp
jecxz
dec
xlat
in
fs
cmp
leave
xchg
aad
mov
xchg
imul
jo
flds
jle
xchg
daa
jno
add
jecxz
test
xchg
sub
mov
jp
das
imul
fcmove
vcvtsd2si
push
stos
pop
inc
out
add
mov
ljmp
push
push
jp
xchg
lds
jle
pop
fdivrs
xchg
lock
test
pop
dec
imul
fsts
mov
mov
dec
int
xchg
jnp
daa
test
xor
adc
add
das
pop
data16
pop
lea
mov
les
dec
pushf
cmp
sbb
lret
aam
push
lea
les
jp
jb
add
fcoms
es
push
jmp
and
lea
andl
jg,pn
push
insl
push
mov
fsubrl
cmc
cs
mov
cwtl
xor
cmpsb
rcrl
jae
and
jbe
inc
add
push
and
lds
push
std
sti
dec
cmp
sbb
push
inc
outsb
sti
icebp
ret
dec
jae
push
lcall
mov
or
xor
mov
fucomip
in
std
les
pop
dec
push
and
aas
mov
push
in
jae
repnz
in
add
in
add
xchg
js
inc
xor
lock
or
ss
xor
popa
jo
or
out
out
shlb
movsl
add
inc
lcall
cli
movb
push
and
pop
adc
ret
cmp
aas
shl
mov
aam
dec
ja
movsl
dec
or
in
dec
repnz
pop
lahf
in
aaa
stos
aad
xor
sbb
inc
jae
jno
xor
clc
cmpsb
ret
sarl
in
fwait
das
mov
dec
scas
pop
dec
mov
jmp
pop
cmpsl
push
insb
add
cmp
jge
jbe
in
sub
xchg
cmp
add
imul
mov
enter
fcmovu
add
ja
insl
cmp
xchg
loop
cld
test
insb
stos
xor
xor
fucomi
stc
add
xchg
pop
je
xor
and
rorb
inc
negb
cli
mov
xor
pushf
dec
mov
mov
addr16
fsubrl
mov
mov
ljmp
test
bound
adcl
push
and
rcrl
inc
fildl
inc
sbb
in
push
push
jl
imul
sbb
or
mov
mov
jl
inc
jb
es
add
jo
lahf
lods
scas
jns
data16
and
adc
test
repz
mov
jae
xor
or
xor
in
ss
sbb
test
hlt
inc
push
leave
inc
andl
xchg
pop
lds
xchg
jl
xchg
adc
jle
dec
xor
pop
dec
inc
jno
subb
push
push
pop
inc
cmp
push
mov
stos
fcomip
inc
in
fistps
pop
movsb
add
push
jae
xchg
jp
pop
divl
rol
lods
cmp
fsin
push
add
add
out
push
pop
sar
scas
xchg
mov
fldt
mov
leave
cmp
pop
jmp
decl
or
repnz
scas
pop
jnp
divb
lret
and
fdivr
inc
stos
rcr
ret
cmpsl
movsl
ss
lock
cmp
in
decb
jae
insl
out
add
xchg
pop
popf
bound
es
mov
aaa
adc
jmp
adc
jo
inc
fstps
xchg
std
scas
pop
mov
and
scas
rorl
imul
push
push
lods
inc
aas
add
test
pop
ret
sbb
mov
mov
aaa
sub
mov
popa
adc
mov
xchg
mov
repnz
jge
dec
out
or
push
inc
popf
je
sbb
aas
inc
icebp
push
scas
insl
fistpl
or
dec
add
xor
jne
mov
rolb
jne
scas
xchg
add
dec
sbbl
push
adc
add
lods
aad
cld
std
adc
add
and
and
or
rep
push
push
jl
mov
mov
sbb
lock
repnz
inc
push
pop
sahf
xor
sahf
int3
jo
js
cltd
aad
and
mov
frstor
mov
xchg
jnp
js
mov
xor
repnz
dec
inc
scas
cmpsl
dec
aas
xor
pushf
xchg
inc
iret
or
rcrl
push
fdivs
push
xor
ja
adc
jae
popf
dec
sbb
imul
mov
leave
orl
mov
leave
xor
out
xchg
push
push
sub
xorl
dec
cmp
jecxz
inc
pop
sub
fstps
arpl
jle
push
cmpsl
enter
adc
xor
loopne
out
and
das
pop
lock
jg
push
mov
sub
mov
sub
jbe
das
jmp
es
mov
mov
pop
sub
movsb
mov
xor
sbb
adc
mov
jno
stc
push
mulb
orb
xor
xchg
insl
lods
clc
jmp
out
repnz
arpl
cmpsl
inc
mov
jmp
loopne
hlt
sbb
inc
sbb
jmp
push
jae
xchg
pop
lock
test
insb
lock
test
call
std
add
aas
pop
xorl
aas
pop
or
adc
iret
mov
xchg
stos
push
lock
pop
mov
add
and
ds
mov
icebp
test
inc
and
push
lcall
or
shlb
xchg
mov
mov
and
or
mov
lods
sbb
scas
ds
push
ljmp
mov
jecxz
fbld
jge
pop
mov
divl
adc
mov
add
scas
cltd
sti
or
out
dec
add
mov
mov
movsb
mov
and
mov
add
mov
xchg
imul
inc
icebp
sub
jno
lods
shll
loop
cmp
call
xchg
inc
inc
arpl
ds
addr16
movb
mov
idivb
into
dec
in
addr16
push
mov
mov
sbb
cli
fidivs
inc
pop
pop
mov
loope
push
mov
jl
add
push
mov
or
mov
sbb
dec
cwtl
hlt
sbb
xor
imul
sub
pop
xlat
push
lock
pusha
insb
movsl
push
mov
jg
cmc
adc
clc
sbb
push
into
cmp
xor
sarb
out
mov
out
mov
and
arpl
ja
lock
or
cmpsl
sbb
xchg
repnz
stc
push
loope
addr16
xchg
punpckhdq
sbb
lahf
leave
int
pop
xor
ud1
fisttpl
and
lret
jle
push
iret
int3
mov
popf
hlt
mov
lret
jo
insb
jmp
or
inc
rcrb
div
mov
mov
adc
jl
insb
mov
lods
mov
jl
insb
cld
sbb
or
cmp
sub
fsubrl
sbb
or
jl
insb
mov
lods
mov
jl
insb
cld
sbb
or
cmp
sub
fsubrl
int3
or
or
jge
push
lods
mov
jl
insb
cld
sbb
or
cmp
sub
faddl
int3
xchg
cld
and
jl
jl
pop
mov
push
out
jl
sbb
ret
xor
shrb
mov
xchg
lret
fimull
sbb
sub
sbb
dec
push
cmc
push
jp
popf
stos
lcall
ljmp
add
sbb
dec
or
sbb
pop
js
dec
jp
xchg
mov
mov
shl
ret
loop
shr
rorb
adc
inc
jae
outsl
gs
adc
out
aam
ret
cmp
sub
xor
jecxz
sbb
xchg
cmpsb
icebp
bound
pop
xor
lcall
ret
aad
aad
aaa
in
or
mov
jecxz
js
test
sar
stc
loop
or
in
jp
iret
pop
ret
rorb
pop
hlt
mov
jne
leave
out
ljmp
ds
sub
xchg
iret
push
or
sub
gs
repz
out
lcall
mov
in
aas
repnz
out
sbb
push
lcall
pusha
push
pop
or
rorl
aad
cmp
mov
lcall
lcall
ljmp
adc
add
xor
and
push
jb
bound
arpl
stos
dec
iret
out
fdivrp
scas
call
xchg
mov
pop
push
push
jg
js
and
lcall
ljmp
or
pop
outsl
outsl
dec
sbb
sbb
jp
sub
test
iret
out
mov
cli
ljmp
cmp
or
sbb
pop
jp
dec
jp
mov
mov
cli
ljmp
cmp
or
sbb
pop
jp
dec
jp
mov
rcrb
push
add
lds
imul
negb
xlat
js
js
mov
ret
inc
dec
popf
lods
in
jge
shrl
scas
xchg
cmc
xchg
push
sub
pop
or
cwtl
sbb
or
stc
jle
std
cltd
lahf
add
iret
cmp
push
ret
loope
shl
inc
mov
or
jbe
and
fucomi
cmc
and
popa
icebp
add
push
in
jno
mov
stos
cmc
bound
sbb
jg
pushf
pop
mov
lds
xor
addr16
ficomps
xlat
js
dec
andl
push
push
xor
ja
repz
fmulp
repz
pop
repnz
inc
mov
mov
test
xchg
paddsb
jp
inc
ss
fbld
add
and
add
scas
sarb
xor
xchg
inc
into
pop
cmp
xchg
icebp
shll
aaa
pop
push
or
ret
fistps
hlt
fwait
xor
and
adc
jp
ret
sbb
jbe
mov
pop
test
adcl
popa
adc
lcall
int
pop
enter
inc
push
fucomi
pushf
mov
popf
sti
loop
cwtl
fstl
and
insb
addr16
out
push
cmp
out
sbb
add
push
cmc
inc
fwait
lock
add
mov
andl
outsb
addr16
push
outsl
scas
or
pop
pusha
test
xlat
add
and
dec
inc
fisubrl
push
or
shrb
xor
ret
in
push
xchg
cld
adc
dec
sbb
xlat
aaa
jle
xchg
nop
pop
cltd
mov
inc
js
dec
mull
sar
pop
xchg
aaa
jb
negb
pop
adc
sub
movsl
daa
push
sub
imul
push
pop
dec
and
stos
pop
test
arpl
sub
lahf
out
push
data16
clc
cmp
pop
arpl
cmp
fsubl
inc
or
xlat
mov
out
gs
movl
sub
outsb
jge
lahf
in
jbe
in
mov
aas
and
add
push
cmpsb
xorb
ret
movsl
xchg
push
xor
inc
or
addr16
negl
xchg
jmp
sub
dec
jb
jp
mov
insb
or
cmp
push
lds
mov
and
add
out
push
call
lahf
popf
inc
andb
xlat
repnz
scas
cwtl
addr16
in
cmp
mov
cmovs
test
mov
ljmp
push
bound
daa
cwtl
add
mov
cmpsb
outsb
mov
pusha
dec
or
mov
xor
mov
movsl
push
jge
xchg
sub
and
mov
arpl
sbb
mov
xchg
out
pushf
xor
mov
or
pusha
test
fidivrl
xor
stos
jge
jns
ret
push
and
cs
aad
js
pushf
arpl
and
jb
daa
shlb
xchg
insb
into
imul
shll
jno
hlt
ds
bnd
cwtl
cmpsl
scas
xchg
int3
xor
sahf
jp
cmp
aad
xor
xchg
test
cmp
inc
popa
and
pop
jae
out
imull
sub
fimull
jge
sar
leave
loop
inc
outsl
mov
stos
mov
test
inc
add
test
sbbb
sbb
mov
push
mov
xchg
or
mov
push
fidivs
div
fisubrs
int3
dec
outsb
xor
rorl
sbbb
xlat
mov
loope
repnz
mov
jecxz
push
imul
movsb
aad
fs
mov
rep
lret
into
jns
jae
cmp
mov
sub
cli
xor
loop
pop
outsl
jecxz
addb
into
sbbl
push
push
rclb
sub
push
push
aam
jns
out
shlb
aam
in
pop
icebp
xor
aas
inc
add
imul
inc
cld
ret
shll
jae
or
cmc
jmp
adc
mov
mov
lods
jb
mov
dec
enter
mov
add
sub
dec
jae
cmp
or
stc
xchg
add
loope
ret
mov
pop
movsl
inc
out
jmp
popf
push
mov
pop
inc
ret
add
xchg
addr16
ljmp
inc
adcb
lret
sti
loopne
jno
clc
adc
aad
cmp
stos
mov
sub
sbb
xchg
adc
adcb
and
push
js
dec
fsubr
xor
add
aas
iret
ss
push
aam
mov
adc
shl
les
imulb
movsl
lcall
adc
fwait
jae
adc
sbb
push
into
sbb
mov
int
out
nop
push
mov
fiaddl
mov
in
mov
lods
pop
jecxz
jne
mov
call
mov
cmp
imul
shl
inc
and
and
sub
xor
clc
or
cld
or
adc
mov
sub
xor
popa
jb
adc
pop
adcl
fldt
stos
loopne
push
or
add
dec
clc
clc
adc
loop
jnp
popf
loopne
jo
jecxz
mov
push
xchg
mov
scas
enter
ss
jns
mov
mov
inc
or
jb
mov
mov
add
xchg
ss
inc
je
dec
sub
aaa
mov
jbe
pop
adc
push
cmp
inc
inc
rcr
cs
out
incb
fisttps
ds
add
repz
stc
out
and
int3
and
jecxz
sbb
cmpsl
mov
cltd
or
cmc
mov
push
leave
cli
insb
or
cmc
add
pushf
mov
mov
aaa
cmpsl
outsb
add
inc
icebp
jl
fcmovu
leave
jl
adc
jl
into
cmpsb
test
call
inc
pop
stc
pop
inc
ja
push
test
fadd
cmp
ret
cmp
mov
fisttpll
cmp
ret
add
ficoml
or
jnp
sbb
mov
mov
or
push
into
push
fs
xchg
xor
inc
sub
and
xchg
out
cltd
sub
inc
mov
pop
inc
sub
mov
je
mov
and
push
vcvtsd2si
or
jne
out
mov
fwait
pop
jle
jb
loopne
pop
fs
xor
hlt
pusha
addr16
les
aad
mov
and
adc
pop
jmp
es
aas
cltd
xchg
pop
sub
rolb
cs
dec
adc
outsl
mov
sub
jbe
xchg
pop
popf
sbb
add
sti
ficompl
jne
jecxz
mov
xchg
ds
sbb
mov
bound
ret
mov
xchg
pop
mov
hlt
and
testl
pushf
les
fidivrs
cli
enter
pop
loopne
inc
adc
leave
ret
mov
adc
cmp
or
lcall
mov
push
mov
mov
cwtl
mov
nop
xor
pushf
inc
lahf
imul
xchg
decb
mov
push
adc
arpl
or
mov
inc
or
js
ljmp
xor
daa
sahf
jg
pop
inc
cmc
lods
mov
mov
adc
pop
cmp
pop
cmp
mov
and
pop
insb
or
push
inc
ja
jb
repz
repz
pop
aaa
das
or
arpl
movsl
in
fsubrs
pop
add
xor
clc
or
out
in
sub
std
cmp
sub
push
je
int
push
pop
std
stc
inc
pop
cs
lds
xchg
add
push
loop
rcrb
rolb
inc
pop
and
or
mov
icebp
jnp
push
in
and
xchg
push
int
imull
scas
adc
clc
mov
les
push
push
movsl
sub
mov
dec
pop
xor
std
rolb
test
shlb
jmp
pop
stc
movsl
loop
out
out
adc
cmp
iret
and
mov
int3
pop
in
push
lcall
jo
mov
sbb
jg
int3
sbb
inc
push
pop
movsl
xor
pop
packssdw
in
into
pop
aas
rcll
data16
jge
in
cs
popf
test
aam
mov
stos
xlat
push
cli
adc
mov
mov
mov
mov
push
push
or
push
or
xor
and
or
loope
or
xchg
cltd
stos
loope
ret
xor
test
aas
cmp
mov
or
jne
fscale
dec
stos
test
dec
pop
mov
push
pop
jns
push
xchg
stos
leave
pop
mov
call
add
lret
xchg
inc
mov
shlb
mov
pop
les
pand
fnstcw
es
sbbl
jo
cmp
in
xor
jg
mov
jmp
icebp
jmp
sbb
pusha
lahf
inc
xor
xchg
rolb
dec
aas
popa
scas
mov
out
popa
mov
cmp
daa
lahf
fsubp
dec
jbe
rcll
push
hlt
in
xor
xlat
aas
pop
dec
sbb
ret
jno
pop
mov
adc
and
push
aaa
adc
mov
pop
movsl
movl
jo
push
xorl
sbb
je
int
push
xor
in
cmp
pop
repnz
mov
xchg
out
jmp
cmp
pop
je
or
xchg
lahf
and
lahf
stc
dec
and
push
mov
fdivrs
fbstp
fs
sbb
lahf
and
push
or
out
mov
arpl
aam
std
jb
mov
sub
les
out
cmp
aas
popa
cmp
filds
addr16
pop
fistl
push
div
mov
add
and
adcl
das
sub
cmpsl
mov
cmp
jae
dec
xchg
dec
jno
test
bt
cmpsl
out
out
inc
fsubp
pop
jge
cmc
lcall
out
jne
test
call
test
or
push
xchg
test
adcl
scas
outsl
xchg
arpl
push
negb
popa
sahf
xchg
shll
push
int3
dec
sti
xchg
dec
loopne
pop
dec
sar
sbb
dec
or
shl
inc
jne
lcall
inc
movsl
sti
push
mov
inc
fnstsw
inc
ret
pusha
shlb
jae
in
mov
mov
inc
add
int3
mov
jge
sbb
mov
adc
jo
adc
sub
xchg
pop
jl
xchg
dec
jecxz
mov
repz
lods
cmpsl
push
jmp
push
rcrl
push
lret
mov
add
outsb
xchg
enter
lcall
push
and
sbb
sub
shl
inc
mov
adc
xor
ljmp
pop
popf
mov
test
orb
cmpsl
mov
push
cmc
jmp
out
roll
push
mov
sub
scas
jb
stos
xchg
pop
dec
cmp
dec
lea
mov
and
pop
addl
loop
rcrb
cmp
in
repnz
cmp
out
daa
jg
fdivs
xchg
add
jbe
push
hlt
ja
dec
and
das
adc
fdivs
xchg
dec
je
stos
orl
stos
stos
aam
adc
xor
sbb
arpl
aad
adc
shrl
stos
mov
and
jmp
dec
dec
cs
dec
and
cmp
mull
inc
pop
lea
stos
in
cmp
pop
stos
adc
mov
pop
out
cmp
sub
jns
jg
imul
ja
stos
inc
sbb
fwait
ja
ljmp
and
rcll
inc
dec
into
mov
dec
push
pusha
push
sarl
cmp
in
push
je
xlat
dec
inc
pop
sub
pop
dec
dec
out
push
fimull
cmp
jge
divl
dec
loop
lods
mov
jb
sbb
ljmp
mov
jmp
loope
sub
dec
adc
sub
mov
ja
int
ss
lods
or
adc
adc
test
insb
jns
lahf
sbb
test
push
sub
xchg
insl
and
nop
imul
cli
pop
mov
lcall
pop
inc
jnp
es
ret
jmp
mov
rorb
out
xchg
or
sub
add
imulb
dec
push
push
sbb
sbb
adc
mov
cmc
fistps
pop
sahf
pop
loopne
lret
sub
in
dec
es
rcll
sub
pop
mov
in
xchg
scas
lahf
mov
mov
jl
cli
and
clc
cmp
aaa
and
or
scas
js
fbld
std
mov
ljmp
std
test
jns
dec
sarl
shrl
lret
and
dec
fstpl
aad
aad
sub
shl
dec
lds
add
ss
es
push
mov
shl
cmp
push
pusha
mov
les
idivb
push
lods
imul
leave
mov
imul
ret
mov
add
and
xor
push
inc
lahf
jge
stos
das
inc
dec
mov
or
es
fiaddl
in
loopne
jb
pop
sbb
fcoms
insb
icebp
loope
inc
cmp
int
imul
ret
cmp
mov
sbb
mov
shll
mov
adc
mov
aam
sahf
pushf
cmpsl
mov
dec
mov
rorl
jne
jae
adc
dec
daa
jecxz
nop
shlb
mov
mov
add
stos
inc
test
sub
std
clc
jno
sub
jmp
mov
xor
sub
fs
lcall
pop
insb
or
lock
jle
cmp
daa
in
adc
dec
out
or
inc
out
sbb
imul
loope
add
cmp
adc
out
mov
cmpsb
iret
adc
xor
sub
pop
jmp
scas
int
repnz
mov
pop
xlat
and
and
nop
xor
inc
mov
mov
lods
scas
filds
das
cmpsb
subb
int
lret
call
ret
std
icebp
jmp
in
cmp
mov
mov
mov
push
imul
ja
jo
out
add
jge
add
icebp
adc
dec
rcl
pop
imul
mov
loope
mov
sub
xchg
inc
popa
les
pop
xor
add
popa
add
and
test
scas
movsl
in
shrb
in
cmpsb
inc
adc
sub
or
sbb
jecxz
and
mov
lret
sub
jne
sub
shlb
lcall
cli
jb
or
scas
lea
mov
fists
adc
shl
inc
mov
inc
and
cli
andl
cmp
fldt
xchg
in
push
push
mov
imul
sarb
mov
jecxz
adc
bswap
int
push
dec
das
loope
data16
aaa
mov
and
repnz
push
mov
mov
je
addr16
repz
and
or
inc
icebp
push
or
push
cmp
and
jge
sbb
pop
add
pop
xor
sbb
mov
mov
inc
lods
cmc
lods
js
sahf
push
ret
scas
cmovs
fldcw
in
imul
mov
sbb
and
movsb
push
or
dec
sub
mov
adcb
mov
sbb
rcr
mov
daa
leave
daa
jne
ja
sub
cmpsl
pop
ss
addb
scas
dec
inc
dec
mov
push
lret
lea
mov
ret
fiaddl
shr
lds
sahf
test
mov
jnp
xchg
outsl
pop
add
mov
add
dec
push
pop
or
fcmove
jo
add
and
clc
xchg
das
xor
shlb
xchg
add
xchg
cmp
xor
xor
fdivrl
cmp
in
jae
cmc
jecxz
jge
scas
inc
push
ljmp
outsl
jne
cmp
add
push
and
movsb
inc
es
inc
icebp
rcrl
dec
aas
sahf
js
mov
push
xor
dec
subl
enter
int
jmp
sbb
pop
inc
shll
push
aam
lcall
xchg
cmp
testl
imul
sbb
aad
add
jns
ret
fcoml
bound
loop
shll
inc
or
mov
sbb
scas
jo
adc
aam
out
cmp
or
add
sti
flds
outsl
mov
jle
addr16
iret
inc
aas
imul
mov
fistpl
enter
loopne
movl
dec
icebp
out
ficompl
xchg
shrb
push
xchg
fsubs
jp
push
push
jno
shl
icebp
push
mov
outsl
mov
push
inc
push
jmp
bound
mov
stc
fs
mov
gs
jecxz
fsubl
sub
mov
lock
mov
cwtl
lods
inc
mov
flds
test
inc
add
lea
je
and
rcrl
jl
pop
fisubs
jmp
mov
jmp
std
fs
aad
ret
call
mov
pop
mov
ud2
xor
and
inc
stos
test
pop
mov
push
sub
mov
sub
push
xchg
leave
decb
dec
xlat
or
cmpsb
loope
mov
add
rcll
inc
mov
imul
testl
jbe
sbb
mov
iret
push
and
inc
imul
lcall
pop
mov
mov
jnp
xchg
mov
outsb
inc
fdivrl
inc
enter
jo
xchg
fstps
push
adc
sub
lods
in
fdiv
mov
pop
push
iret
mov
test
cs
push
inc
cmp
xchg
sub
pop
push
xchg
lods
daa
xor
mov
xor
repz
js
adc
mov
sbb
pop
fbld
pop
lcall
xchg
or
scas
test
es
cld
mov
popf
shll
dec
aad
xor
ss
pop
or
clc
pop
push
adc
inc
arpl
pusha
push
fstps
cmp
movsb
sahf
xchg
call
adc
fisttps
mov
popl
lret
lcall
adc
push
inc
xchg
repz
jae
fnsave
mov
rcrb
xor
sarb
jge
lock
shrb
je
faddl
or
in
xlat
mov
jp
or
push
push
jl
cmp
xor
push
xchg
subl
jbe
ficompl
mov
sbb
and
dec
jmp
test
adc
inc
xlat
and
test
xchg
dec
test
fucom
jg
add
scas
xchg
negl
sub
lret
xor
scas
sub
in
mov
pop
mov
cmc
jle
ret
mov
stos
fwait
add
dec
dec
cmp
ja
cmp
cmp
cmp
es
cmp
das
dec
and
lret
rorl
dec
push
mov
fadd
decb
cmc
sarl
test
mov
dec
nop
add
mov
aaa
and
clc
mov
in
or
sarb
xor
pushf
stos
test
imul
push
aaa
test
jl
stos
ficomps
fsubl
data16
adc
adcb
ret
in
adc
cmp
neg
out
mov
popa
das
or
and
movsl
push
xchg
and
outsl
lds
or
lods
sub
sub
pop
adc
test
xchg
xchg
js
jmp
pop
iret
ficomps
lret
and
ja
in
or
xor
ret
cmp
and
pop
push
mov
rorb
enter
or
pop
andb
mov
dec
adc
add
cmp
ficoml
sbb
or
xchg
fists
test
fcoms
push
mov
out
ljmp
adc
jge
push
leave
xchg
sbb
shrb
sub
xorl
add
adc
xchg
jae
sbb
mov
sbb
xor
lret
pslld
lcall
jnp
mov
push
adc
jno
push
inc
or
in
incl
jge
movb
jbe
cld
jle
push
mov
fisubl
push
jp
push
loope
std
jbe
fmuls
dec
inc
inc
xlat
mov
mov
cmpsb
or
aad
adc
scas
jecxz
fistps
inc
roll
fnsave
lret
lret
jno
pusha
dec
pop
mov
mov
dec
adc
xchg
jg
add
add
cmp
sahf
lods
bound
pop
lds
mov
enter
xchg
negb
arpl
shl
divl
fsubp
aam
jae
int3
add
aas
and
xchg
mov
les
or
lea
lret
lock
mov
dec
dec
xchg
sbb
jnp
scas
and
stc
mov
lret
cli
ljmp
cmp
or
sbb
pop
jp
dec
jp
mov
mov
cli
ljmp
cmp
or
sbb
pop
jp
dec
jp
mov
mov
cli
ljmp
cmp
or
push
dec
push
jp
dec
dec
pop
mov
mov
cli
push
jp
cmc
sub
nop
orb
insl
cmp
xor
rorl
jnp
imul
cld
shrl
sub
push
lret
arpl
jae
add
xor
jecxz
repz
mov
push
fistl
arpl
jge
add
xor
sti
jnp
imul
mov
pop
in
xchg
cmp
or
add
jl
jg
fs
stos
pop
mov
xchg
fstl
enter
sahf
ljmp
push
sti
xor
bound
sub
fwait
push
xchg
test
aaa
es
data16
lahf
sti
ljmp
int3
push
cmp
das
popf
adc
subb
jae
adc
lods
xor
add
xor
sub
jg
sbb
jnp
call
mov
enter
inc
xor
outsb
lods
adc
out
les
inc
sahf
xchg
lret
sbb
push
adc
fdivrl
xor
jl
xchg
or
mov
ficompl
jmp
jmp
fs
jg
scas
xor
jecxz
repz
sub
dec
lret
jnp
push
sbb
xor
scas
ss
xchg
cmc
dec
out
pop
mov
inc
mov
mov
add
jbe
push
cmp
lods
sbb
cmp
jle
and
add
xor
push
into
push
lds
setnp
lret
ja
or
fistl
arpl
jae
add
xor
jecxz
repz
mov
inc
fistl
arpl
jae
add
xor
pop
mov
sbb
adc
mov
inc
fldcw
pop
iret
mov
cmp
jg
push
test
fwait
pop
jns
insb
aaa
dec
jge
xor
aas
and
sbb
cmc
sbb
shl
jns
inc
and
mull
mov
xor
enter
mov
inc
repnz
shrl
xchg
sub
sbb
movsb
adc
fnstsw
in
add
xchg
movb
sub
addl
xchg
insl
stos
xchg
ljmp
sbb
mov
add
pop
aad
mov
mov
into
shl
enter
int3
outsl
sub
jg
dec
stos
scas
push
pop
cmpsl
cmp
test
inc
jne
cwtl
pop
xchg
xor
aam
frstor
xor
popa
mov
pop
fwait
ljmp
repz
xor
cmp
dec
inc
push
add
dec
dec
pushf
ret
add
jbe
pop
jns
aam
sub
dec
cwtl
mov
adc
ficompl
push
loopne
in
dec
and
ret
inc
mov
mov
push
fidivrs
out
pop
xchg
sbb
add
xchg
sbb
or
jnp
sub
jnp
nop
push
addr16
jo
jae
mov
pop
dec
inc
mov
aas
scas
push
xchg
push
jmp
movsl
add
js
mov
jo
loope
cmpsl
xor
inc
push
ret
cmp
xchg
pusha
mov
mov
rcll
xchg
xchg
ss
adc
cltd
xchg
mov
xchg
mov
shll
xor
push
xlat
imul
test
int
ret
mov
jne
je
cmp
push
pop
loop
xor
add
mov
rcll
push
cmp
hlt
lahf
das
add
hlt
dec
sub
mov
xchg
and
or
subl
push
gs
lret
aam
add
mov
shrb
incl
push
cmpsl
fincstp
or
push
sahf
push
in
out
jge
test
xchg
adc
cmp
sub
ljmp
dec
jle
aaa
mov
sarb
jns
aas
clc
js
cmp
movsl
mov
movsl
dec
je
dec
fstl
inc
cltd
scas
and
pop
push
das
in
pop
ret
dec
dec
cld
cwtl
rcll
and
in
jns
js
pusha
aam
mov
pop
xchg
stos
add
sub
pop
mov
sahf
aad
rorb
insl
mov
in
mov
adc
repz
mov
shll
mov
jno
bound
jecxz
decl
dec
imul
sub
scas
jnp
sahf
xor
je
inc
pop
pop
loope
addr16
popa
pop
lods
push
leave
sbb
or
lret
xor
fdivl
cmp
sbb
testb
push
es
loope
cmp
in
xor
js
and
dec
bound
arpl
jbe
sbb
mov
push
inc
jae
sbb
sbb
cltd
jge
or
lret
outsl
testb
fsubl
repnz
test
dec
add
add
mov
xchg
and
mov
pop
movsb
sti
insb
insb
cs
fbld
push
push
out
jp
xor
fistl
repnz
leave
addl
xchg
xchg
and
movsb
mov
das
and
jns
fcom
mov
add
movl
movsl
aam
and
pop
mov
hlt
js
mov
xorl
dec
jnp
ss
es
popa
in
pop
fbld
fistl
test
lret
test
je
das
cli
push
pop
and
pop
out
gs
js
add
fnstcw
movsbl
sub
sarl
mov
xchg
inc
push
mov
mov
lret
mov
arpl
push
sub
xor
in
pop
leave
mov
ljmp
mov
ret
aad
call
stc
inc
js
fwait
and
fnstcw
sub
jbe
rorl
das
roll
dec
mov
stos
mov
mov
push
sbb
mov
adc
adc
repnz
xor
pop
shll
stc
and
iret
test
dec
inc
popf
jo
sub
fsubrl
addl
jnp
stos
mov
push
je
sub
cmp
mov
dec
jae
mov
jl
lds
push
sub
xor
fstpt
das
jle
repz
mov
jnp
adc
push
pushf
sahf
cmp
jmp
inc
adc
sarl
add
mov
xchg
add
out
aam
jp
pop
outsl
push
ljmp
mov
sahf
xchg
sub
outsb
xchg
mov
sbb
sub
ds
xor
int3
je
pcmpgtd
movsb
add
shlb
lahf
fdivl
ljmp
add
jbe
popa
sbb
adc
pop
inc
lea
cs
in
out
dec
dec
push
aad
xchg
xchg
imul
in
adcb
leave
loop
add
cs
mov
mov
iret
jae
jle
icebp
je
loope
and
jbe
push
xor
ljmp
je
cmpsb
push
push
inc
pusha
dec
add
lods
xchg
in
movsb
push
xchg
imul
leave
loopne
mov
daa
pop
mov
adc
das
push
adc
dec
sub
out
jg
lcall
add
mov
mov
stos
xor
cmp
sbb
jns
sar
fsts
call
js
lods
and
cmp
push
outsl
fcomip
xchg
push
pop
push
fs
jbe
outsb
int
add
sbb
ljmp
cmc
in
and
ja
push
sub
cld
xor
mov
mov
int3
jno
xchg
dec
ret
push
xor
pop
clc
sub
cwtl
lea
negl
insb
frstor
int
add
jno
fidivl
std
lds
clc
clc
hlt
daa
push
imulb
pop
xor
in
pop
imul
jns
mov
push
mov
or
bound
in
xlat
or
mov
push
mov
xlat
push
jb
push
sbb
loopne
cmc
data16
inc
outsl
jns
cmp
pop
lds
jae
jmp
insb
js
sub
ret
inc
sbb
push
or
lds
mov
pop
jo
lds
mov
inc
push
inc
insb
cmp
clc
fisttpll
out
je
jp
jae
leave
icebp
and
pop
pop
imul
je
adc
out
icebp
enter
sar
das
push
fwait
pop
data16
sti
xchg
and
mov
inc
inc
jmp
xchg
mov
mov
xchg
data16
subl
sahf
inc
setnp
mov
cmp
push
inc
add
sbb
push
xchg
push
in
inc
xlat
pop
mov
clc
fsub
mov
xchg
mov
mov
add
mov
mov
fcoml
pminsw
pop
test
and
pop
and
adc
dec
push
and
lods
jbe
xchg
fdivr
call
and
pushf
pop
test
xor
stos
mov
cltd
iret
scas
inc
xchg
mov
in
outsl
test
dec
fsubs
xchg
loopne
sbb
icebp
test
mov
mov
lods
loop
inc
in
je
fs
sbb
push
ficoms
mov
movsb
lock
enter
imul
mov
mov
dec
ljmp
pop
inc
fcmovne
mov
bound
adc
jns
jp
out
mov
int3
jo
cmp
xor
aaa
mov
xchg
mov
inc
push
adc
pop
in
loopne
adc
fcomi
jb
push
ret
in
in
je
push
mov
bound
inc
or
ljmp
sbb
push
mov
shlb
insl
adc
or
fistl
sub
add
and
pop
xchg
pushf
inc
enter
insb
mov
lcall
dec
adc
loope
push
mov
pop
inc
sub
dec
pop
call
mov
outsb
mov
sub
cmp
popf
cmp
xchg
mov
aad
mov
mov
inc
mov
movsl
or
add
cld
lods
push
adc
sbb
jmp
cmp
and
mov
xor
lret
lret
ja
sub
add
mov
xlat
lods
sbb
testl
push
fiaddl
cmp
stos
xchg
push
push
pop
inc
push
mov
mov
jmp
pop
cmp
xlat
cmp
xor
fisttpl
pop
fwait
aaa
sbb
jg
push
in
or
adc
push
sbb
scas
jb
pop
clc
xchg
int3
adc
cmpsl
je
mov
icebp
orb
push
cmp
nop
push
repz
icebp
popa
mov
jnp
fs
out
stos
in
or
dec
cmp
jae
and
or
sbb
cs
pop
push
sub
mov
lret
add
cwtl
pop
and
cli
in
pop
jnp
sbb
andl
addr16
shlb
cltd
inc
mov
ret
je
scas
push
mov
dec
mov
icebp
js
dec
jmp
aas
std
stc
jge
push
imul
outsl
adc
fbld
ljmp
sbb
or
add
pop
mov
add
add
rcrb
sti
arpl
jle
in
push
fucomi
lods
int
lds
or
dec
jecxz
loop
std
sti
or
fsubrs
fists
out
jo
lods
xchg
or
andb
dec
add
scas
or
and
add
ss
adc
or
push
iret
lret
loopne
mov
mov
mov
dec
adc
add
testb
pop
xchg
pushf
pop
and
xchg
mov
xchg
push
fwait
loopne
sub
mov
lret
flds
sub
push
pop
outsw
mov
inc
das
sub
out
cmpsb
aad
mov
xchg
outsl
fadd
mov
jno
or
cmp
and
call
or
push
lock
outsl
idivl
lds
jle
inc
xchg
sub
and
pop
push
or
sub
rclb
test
mov
stc
js
cmp
mov
push
push
sahf
jmp
std
fwait
pop
hlt
out
or
sarb
negl
in
adc
push
and
mov
push
mull
fwait
out
popa
or
imul
stos
int3
xor
or
jb
sub
test
pop
enter
jo
into
enter
icebp
test
and
jbe
imul
enter
dec
mov
cltd
int
jb,pn
aad
out
stos
inc
lds
ja
cwtl
lds
mov
or
jge
add
cmc
and
mov
test
mov
lds
adc
xor
stc
ds
negl
sbb
inc
pop
dec
add
ss
ss
dec
add
movsl
cmpl
lea
dec
xchg
adc
sbb
iret
xor
cmp
fdivr
and
mov
hlt
insb
cmp
sahf
sub
cmp
xor
popa
rcrl
arpl
lahf
lea
pop
jnp
xor
xchg
xchg
lret
ljmp
dec
in
cmp
dec
jb
popa
and
into
adc
mov
adc
in
jle
mov
mov
stos
sbb
xchg
mov
lret
inc
pop
pop
cmp
inc
ja
xlat
aam
dec
mov
fs
jnp
and
xor
pop
rcr
cmp
pop
sbb
mov
push
repz
fwait
sbb
into
xor
into
cmp
mov
mov
dec
or
mov
flds
lock
sub
xor
lods
mov
jge
cmp
mov
loop
jg
fmul
rol
fldl
mov
push
jb
nop
cmpsb
pop
or
xor
shlb
sub
bnd
mov
xor
sub
push
sub
aam
pop
pop
rcrb
xchg
jo
push
leave
scas
inc
add
jle
inc
xchg
xor
add
xor
iret
sub
adc
stc
adc
cmpsl
ss
pop
cmp
cmp
add
fistpl
arpl
gs
adc
orl
mov
mov
and
mov
je
pushf
mov
loopne
sub
and
push
in
sbb
pop
or
ret
cs
in
add
push
pushf
jo
fsubrp
ja
int
add
xor
gs
imul
addb
pop
je
in
sbb
or
out
in
add
or
fldcw
inc
je
pop
add
insb
mov
sbb
fcoms
pushl
inc
jge
push
inc
test
jge
daa
mov
or
int3
push
out
and
popa
cli
cmp
xor
fsubrs
stc
mov
imulb
xchg
push
addl
lret
cmpsl
dec
push
or
popf
lret
pop
ret
fcoml
call
cs
or
nop
dec
pop
std
pop
divl
pop
push
sti
and
aam
mov
lret
test
sbb
sti
xchg
push
pop
stc
inc
add
cmc
push
mov
cs
or
sbb
andb
lret
rep
mov
aad
js
xor
pop
and
adc
rcll
ret
mov
jg
fsts
loop
scas
andl
add
aam
fstpl
lahf
std
pop
ficoml
rcr
push
cmp
into
out
xchg
shlb
je
or
js
xlat
jg
jo
nop
jbe
mov
mov
adc
xor
arpl
sub
cmpsb
and
jecxz
or
cmpsl
adc
imul
pop
movb
or
out
lcall
cmp
jecxz
xor
mov
fistl
cld
aad
add
test
into
add
and
cmp
xchg
arpl
dec
test
subl
or
and
cwtl
mov
fbld
ds
stos
mov
or
add
subl
les
jbe
inc
sub
into
movl
ljmp
out
cmp
movsl
int3
sbb
cld
cmp
xor
cltd
outsb
popf
ss
or
pop
arpl
das
fs
xchg
in
add
or
pop
clc
xor
data16
loopne
imull
pop
mov
cmp
cli
mov
or
test
incb
mov
inc
jae
jne
lret
movsl
or
shrl
push
rolb
xchg
jns
popa
insl
leave
ds
outsb
jns
push
mov
pop
cmp
mov
xchg
mov
cmpsl
and
insl
fimull
imul
sbb
xchg
push
xor
es
mov
sbb
cmpsb
lds
rclb
add
test
mov
lret
aam
push
sbb
sbb
pop
and
adc
or
rclb
cmpb
sub
or
imul
sbbb
sub
lcall
jns
ret
sub
jns
sarb
xchg
vpshad
sbb
pop
add
sti
mov
mov
mov
insb
dec
cmpsl
jb
or
repz
pop
jae
inc
cld
or
mov
and
ja
in
sbb
sub
cmp
sub
mov
fmuls
inc
cmp
shll
icebp
add
daa
inc
adc
jmp
sub
adc
outsb
sbbb
pop
movsl
fimull
arpl
lea
mov
sbb
ss
lret
scas
rcrl
sub
lcall
in
inc
pop
test
cwtl
push
mov
add
repz
jp
jp
std
std
adc
lds
mov
mov
adc
out
cmp
movsb
lcall
cmpsb
adc
sbb
cmpsl
lods
add
orb
mov
push
imul
adc
push
sbb
push
mov
add
jge
shll
xchg
and
sbb
jmp
and
sahf
addr16
jo
jne
in
aas
pop
adc
fs
flds
adc
dec
push
inc
lock
std
test
adc
fisttps
jmp
and
sub
mov
lahf
aaa
xor
fisttpl
in
jecxz
es
lods
sbb
dec
fldenv
int
jmp
imul
loopne
mov
out
fimull
cmpsl
sbb
test
and
or
bound
xchg
int3
pop
jmp
sbbb
xor
cltd
dec
movlps
and
mov
in
pop
push
and
cmp
xchg
sub
jns
bound
movsl
sbb
push
fs
mov
mov
mov
sbb
mov
call
call
hlt
or
dec
pop
add
sbb
lret
insl
fidivl
mov
jb
shrl
or
push
aad
test
sbb
pop
or
rcl
cmc
aaa
outsl
inc
les
out
pop
idiv
inc
inc
repnz
ret
jp
mov
jnp
fistl
cmc
js
fsubrs
or
pop
int
sbb
dec
mov
arpl
daa
push
popf
fwait
aaa
leave
cmp
iret
pop
push
or
or
lahf
call
jmp
out
jl
loopne
push
shr
fwait
xchg
xor
stos
inc
les
and
adc
jle
pusha
sub
out
loopne
jle
cmpsl
scas
lods
test
idivb
std
call
mov
inc
pop
int3
mov
lods
pop
out
fwait
outsb
mov
lods
push
sbb
mov
nop
dec
push
inc
pop
mov
push
loop
mov
inc
popf
dec
imul
jnp
cmp
add
sbb
je
mov
pop
inc
loope
cmp
rcrb
lahf
pusha
pushfw
fdivrl
pop
adc
jmp
ljmp
in
insb
test
repz
ja
sbb
jne
mov
clc
outsl
sahf
sbb
lret
cmp
cmp
je
roll
mov
or
sbb
scas
sarl
daa
xorl
xor
jg
sahf
push
fcmovnu
test
dec
jl
xchg
shlb
pop
mov
das
mov
lds
fsubl
adcb
sub
sbb
fwait
cmp
int
push
inc
fsts
in
repnz
dec
inc
jp
decl
imul
ds
in
movsl
movsl
pop
lcall
stos
rolb
sbb
fwait
addr16
ret
xor
mov
lock
fcmove
cld
pusha
inc
std
fstl
jge
std
ss
dec
xchg
jae
pop
out
arpl
int
add
fs
minps
insl
es
inc
inc
fsubl
dec
pop
aad
aad
sbb
lock
mov
cwtl
mov
adc
adc
scas
scas
mov
pop
jmp
pop
push
xor
pusha
inc
pop
inc
leave
fcmovb
shrb
fsubp
popf
into
dec
mov
xchg
sub
in
call
xor
adc
jle
gs
sub
xlat
or
jbe
push
in
inc
jecxz
rcll
ret
daa
in
icebp
push
push
insl
in
sbb
sti
push
push
test
and
pusha
dec
cmc
fisttpll
je
push
xchg
outsb
adc
pop
cs
rol
incl
jl
imul
mov
cltd
push
pop
add
test
pushf
xor
enter
mov
into
lret
jmp
or
outsl
sahf
mov
adc
in
dec
ret
push
sbb
jb
nop
mov
xor
jl
jecxz
cmp
pop
sub
cmp
cld
ret
inc
jno
fldenv
out
movmskps
mov
mov
mov
mov
sub
testb
jbe,pt
sub
push
cmp
mov
jbe
mov
cmpsb
fistps
fs
mov
loope,pt
lret
add
fdivs
fdivs
out
ffree
or
jp
flds
lock
rorl
xor
xor
imul
xor
cmpsl
cmpsl
mov
or
sbb
jae
fld
pop
hlt
lret
add
pop
fcmovu
cwtl
cmc
inc
dec
sub
xor
mov
nop
je
shlb
cmp
int3
jg
adc
adc
mov
or
das
out
xchg
jbe
push
rol
mov
lret
add
je
or
lret
outsb
cmp
xchg
xor
mov
scas
mov
cwtl
mov
pop
fldcw
mov
enter
mov
popf
lea
dec
and
jecxz
sbb
mov
lods
ljmp
cmpsb
ljmp
xor
or
iret
insb
adc
fsubr
pop
inc
push
push
aas
fwait
xchg
call
jmp
jmp
cwtd
lods
sbb
push
pop
cvtdq2ps
push
push
lahf
jp
cmp
addr16
loop
push
cmpsb
mov
js
fwait
repnz
pop
ret
movsb
sub
cmp
ds
jp
lods
dec
mov
adc
aad
mov
mov
xchg
lcall
roll
push
scas
scas
out
out
xchg
lret
fwait
cmp
aam
cmp
lods
test
lahf
mov
jg
pop
cmp
sbb
sti
inc
fwait
aad
mov
xchg
fisubs
pop
or
das
mov
jp
imul
mov
inc
fistl
arpl
jae
add
xor
jecxz
repz
mov
inc
fistl
arpl
jae
add
xor
jecxz
repz
sbb
sub
push
lret
jae
add
xor
loop
rep
sbbl
xor
mov
sti
jae
je
fwait
je
inc
int3
push
pop
xor
outsl
cli
push
stos
push
mov
jp
js
or
cmp
dec
fidivrl
outsl
cli
pop
mov
lcall
iret
pop
decl
jp
imul
fidivrl
outsl
jecxz
xchg
jb
fildll
mov
dec
cld
je
jl
cmp
lret
jg
push
jno
gs
inc
aam
movsb
jnp
shl
cmc
outsb
call
es
call
fwait
andb
pop
add
fs
and
xor
inc
mov
jp
jp
dec
jmp
xor
es
dec
lcall
ficompl
sahf
sbb
cmp
scas
cmp
push
lret
lock
data16
inc
das
sbb
push
mov
test
pop
in
mov
lret
adc
das
retw
cli
movsb
mov
jb
fs
bound
xchg
inc
sub
cmp
nop
xor
test
nop
aas
aaa
cwtl
dec
mov
jg
push
pop
fsubrl
aad
sub
outsl
loopne
mov
lcall
iret
inc
pushl
arpl
sub
fidivrl
jmp
sti
jp
pusha
hlt
push
stos
xlat
scas
and
adc
fisubrl
fists
mov
ficompl
cs
jp
inc
test
into
push
lods
xor
cmp
ljmp
mov
cmp
setp
stos
das
mov
ljmp
jp
or
cmp
dec
fidivrl
outsl
cli
pop
mov
lcall
iret
pop
ljmp
jp
or
cmp
cs
loop
adc
iret
mov
ljmp
mov
insb
fcompl
shl
jbe
jo
xor
adc
insb
jmp
jne
inc
push
maxps
add
out
daa
scas
fsubrs
popf
aaa
cmpsl
and
pop
and
fstl
mov
push
push
sbb
test
flds
inc
inc
es
xchg
cmpsw
imul
pop
adc
testb
scas
das
dec
loop
or
dec
xor
out
call
or
xor
in
pop
sbb
shrl
pop
mov
xor
loope
pop
rcrb
dec
jo
in
add
inc
sub
lahf
mov
cs
xor
cmc
in
jge
adc
add
pushf
aad
adc
mov
inc
fisubs
xorl
pop
stc
push
outsb
sbb
sbb
push
dec
fcmovnbe
sbb
jae
sbb
stos
adc
addl
pushf
fst
mov
add
aam
pop
addr16
movsb
ds
repz
sub
insl
cmp
add
pop
cmpsl
shrl
or
cs
push
jno
lods
int
adc
mov
mov
fwait
mov
in
dec
lret
mov
icebp
test
mov
lcall
sbb
mov
mov
jg
inc
or
sbb
test
inc
xor
insb
les
mov
adc
pop
ss
mov
jb
xor
sub
ds
mov
mov
add
hlt
sbb
push
and
inc
sbb
iret
jl
pop
cld
enter
mov
cmp
xchg
inc
jo
arpl
dec
pop
lods
lret
and
inc
sbb
or
cli
mov
popa
push
ss
add
pusha
adc
pop
adc
lret
in
iret
iret
or
xchg
scas
enter
mull
jge
mov
ds
mov
in
jge
sbb
scas
jmp
je
scas
and
jnp
jbe
jp
sahf
sbb
insl
cmpsb
bts
xor
daa
fs
stos
mov
testb
jge
test
inc
dec
addr16
and
lret
js
cwtl
dec
dec
outsl
stc
fistl
cmp
fdivs
inc
addl
aaa
aad
mov
and
addr16
sbb
mov
push
mov
inc
mov
fwait
cs
hlt
or
cld
jecxz
insl
adc
imul
sub
pop
dec
mov
andl
push
fistps
jno
jge
cltd
insb
imul
mov
sbb
mov
or
dec
addr16
roll
inc
fists
add
push
jecxz
aas
xchg
jnp
pop
out
push
cmpsb
lds
daa
out
pop
lahf
cmp
cld
jmp
pop
repnz
xchg
inc
inc
sbb
lcall
bound
clc
adc
lret
xor
hlt
lods
xchg
inc
sub
ret
mov
mov
fdivr
in
push
push
push
inc
cmpl
and
gs
mov
jnp
in
pop
hlt
xor
cmp
push
inc
clc
jo
inc
cmpsl
in
cmp
push
jg
test
ss
cmp
inc
lock
iret
cmc
stos
ja
cmp
mov
and
lock
mov
xor
aaa
add
lahf
int
mov
sbb
sub
sub
mov
sub
inc
sbb
xor
add
or
mov
shlb
fcoms
mov
lret
mov
inc
adc
loopne
xor
inc
xor
add
dec
fiadds
insl
es
faddl
adc
fwait
pop
sbb
out
out
pushl
cmp
push
into
jno
lret
mov
imul
gs
mov
or
xchg
rep
fnsave
rcrl
add
mov
fbld
add
mov
pop
push
and
jl
call
pop
cltd
xchg
adc
add
mov
outsb
push
lret
mov
mov
lock
in
sbb
jae
int
fstps
mov
cli
movsb
push
cltd
shlb
inc
inc
ret
int
out
xor
les
dec
cmp
repz
loopne
dec
jbe
inc
inc
lea
fldenv
out
jo
sbb
jae
out
and
enter
fsub
andb
mov
jecxz
fs
in
jmp
pushf
inc
sahf
or
arpl
mov
sbbb
jl
int
xor
fsubl
mov
jg
pushf
cmpsl
arpl
pop
mov
push
mov
and
call
pop
adc
dec
push
lcall
sbb
ret
mov
lea
push
or
sbb
into
cwtl
push
xor
jnp
cmp
cmp
adc
mov
popa
loope
mov
cld
rorl
adc
mul
lret
push
add
jbe
lret
mov
test
lahf
rcll
xor
hlt
push
mov
push
pop
int
mov
arpl
lret
adc
rcll
mov
add
outsl
inc
dec
lea
or
add
and
popf
xor
movsb
jae
mulb
inc
movsb
or
mov
push
mov
iret
jg
jne
or
pop
shr
pop
dec
dec
les
jns
dec
daa
stos
test
fwait
insl
dec
lds
add
idivl
mov
pop
in
int
cmc
test
and
xchg
and
jmp
cmp
cmpsl
push
iret
xchg
sti
dec
rcrb
dec
adc
sub
mov
loop
xor
push
push
stc
sahf
and
mov
iret
jge
aam
or
ficomps
pushl
sub
lcall
test
out
cmp
cwtl
in
pop
xor
lret
dec
jp
or
out
xorb
xchg
out
insb
mov
rorb
aas
rclb
mov
jae
cwtl
out
aam
iret
scas
movsl
inc
int
sub
shlb
pushf
loope
adc
pop
cmp
xchg
and
add
stos
mov
jg
pusha
das
test
dec
in
xchg
cmc
inc
xchg
sub
lds
or
mov
or
or
or
jp
cli
jl
or
xor
repz
int3
sbb
test
adc
cmpsb
sbb
inc
mov
adc
xor
orl
push
out
test
xor
loop
out
add
popa
adc
xchg
fcom
lret
push
push
add
mov
je,pn
dec
pop
inc
mov
sahf
or
and
cmc
xchg
insb
movsb
xor
mov
sahf
mov
xchg
dec
or
data16
in
ljmp
lahf
out
cli
jecxz
cli
repnz
or
xchg
inc
psubsw
mov
or
push
movsb
enter
cmp
cmp
xchg
pop
jbe
loopne
popf
addr16
cltd
sbb
sbb
mov
sub
mov
bnd
sbb
or
dec
mov
push
stos
mov
push
push
scas
imul
jmp
je
loopne
inc
and
int
ja
pop
insb
mov
mov
jl
push
pop
ss
arpl
sahf
mov
xor
dec
test
cmp
popf
mov
mov
shl
out
and
mov
jmp
in
push
stos
notb
mov
lods
rclb
sbb
popf
jb
push
push
sub
xor
mov
jl
outsb
jae
xor
hlt
add
scas
jl
rep
adc
dec
mov
cmpsb
das
leave
jle
mov
lods
cld
pop
jbe
daa
adc
in
pop
repnz
das
sub
jb
test
xchg
aam
sbb
jnp
cwtl
xor
movsb
jne
sysenter
cli
mov
lcall
iret
xchg
mov
repz
aad
lds
sub
data16
notb
xchg
mov
shrb
lods
in
ljmp
fisttps
mov
cli
inc
flds
cmc
ret
or
and
xor
test
inc
push
push
push
lea
orl
push
mov
and
jno
push
fwait
jl
mov
sbb
pop
add
xchg
add
add
adc
call
xor
xor
xchg
addr16
dec
ret
sbb
int3
push
clc
pusha
xor
hlt
dec
xor
pop
adc
aaa
stos
les
adc
xchg
pop
inc
lea
dec
or
jle
repnz
sub
add
mov
jo
pop
call
push
popa
dec
hlt
cmpsl
pop
popf
add
sbb
push
test
std
je
sub
fildl
js
cmpsl
pop
clc
xchg
push
and
scas
insl
mov
ljmp
add
push
xchg
frstor
add
js
push
jge
cmpsl
xlat
scas
adcl
cmc
fwait
jo
in
out
xor
sbb
outsl
js
call
jno
jbe
xchg
xchg
inc
xchg
outsl
lcall
lock
cs
push
pop
fnstsw
sbb
lds
fnstcw
mov
mov
insb
jbe
ficompl
or
pop
test
sbb
pop
movl
add
ja
dec
push
adc
mov
sbb
pop
sub
or
add
enter
or
ret
stc
addr16
out
loope
cmp
fs
push
insl
rorb
in
rol
inc
inc
loopne
insl
lods
sub
sub
jno
jne
inc
push
cltd
or
in
push
popf
or
push
out
mov
test
and
pop
cmp
cmpb
cmp
add
lcall
mov
xchg
ss
jmp
mov
cmp
push
xchg
daa
dec
and
xor
test
jp
mov
inc
pushf
sti
sbb
hlt
adc
cmp
pop
ds
inc
jbe
push
mov
popa
push
xor
iret
movsb
clc
inc
or
jns
je
pop
lret
call
xchg
cmc
mov
pop
int3
mov
fmul
test
sub
mov
movsb
jnp
jnp
rcrb
ret
push
outsb
or
xorb
lret
xchg
jb
mov
addr16
cmpsl
xchg
mov
pop
inc
into
dec
bound
sub
adc
das
popf
jnp
push
push
in
inc
outsl
test
dec
adcl
scas
data16
mov
or
xchg
or
stos
cltd
cmc
or
negb
and
movsb
pop
sbb
mov
or
cwtl
dec
gs
push
imul
jl
imul
or
icebp
mov
mov
shlb
inc
int3
dec
inc
scas
inc
ret
vfrczss
ret
sub
ljmp
psubq
xchg
xor
shlb
cmp
xchg
and
inc
mov
in
iret
pop
out
sub
inc
enter
or
movsb
hlt
into
mov
pop
movsb
xchg
xlat
and
repz
push
movsl
lods
adc
or
adc
adc
loop
mov
fdivs
test
rcl
add
and
mov
inc
ret
loop
adc
mov
mov
outsl
lcall
fbld
lcall
rcrb
xor
call
push
sub
fcoml
adcl
pop
stc
jmp
adc
cli
jecxz
ja
out
mov
xor
dec
ret
pop
jg
sbb
cmp
stos
in
adc
xor
dec
adc
pop
adc
mov
mov
push
in
xchg
and
aad
and
jmp
or
pusha
mov
push
mov
pushf
es
sti
test
cld
aam
fldcw
jne
xor
adc
push
es
insb
sub
in
in
adc
and
lahf
push
aam
popa
jecxz
popl
pop
or
jns
push
fdiv
daa
fisubl
jmp
mov
add
pop
bound
aaa
xor
xor
jnp
sbb
sbb
bound
lret
dec
sub
fisubrl
sub
push
imul
adc
test
lods
ret
add
cmpsl
xorl
or
pushf
jns
push
sbb
je
adc
push
xchg
shlb
pop
test
mov
xchg
push
sub
push
inc
dec
nop
push
xor
pop
icebp
mov
jae
dec
iret
test
fnsave
sub
mov
gs
stc
sub
call
or
popl
hlt
xchg
cmpsb
push
or
lahf
gs
sti
out
rolb
mulb
fiadds
pop
sub
fnop
ds
fisubs
cmp
jbe
call
or
mov
lcall
mov
sti
negl
bound
addb
jns
jp
lods
push
lods
pop
arpl
movsb
xorb
sub
sub
lock
and
repz
ret
xor
inc
mov
aaa
mov
rclb
call
cld
and
mov
xlat
popa
icebp
jp
mov
mov
pop
jecxz
cmp
outsl
or
fisttps
lret
cld
stos
pop
or
inc
icebp
mov
loop
dec
aas
mov
ds
iret
and
imul
jge
inc
aaa
mov
adc
mov
push
sub
es
dec
stc
or
mov
in
push
adc
dec
add
dec
adc
cwtl
mov
cwtl
ret
xchg
mov
aaa
dec
das
out
bound
and
movsb
or
orl
jae
andb
ror
mov
fs
aam
lret
adcb
pop
pusha
test
xor
nop
cmp
insb
xchg
mov
leave
jbe
rcll
push
out
divl
lcall
push
cmpsl
fsubrp
repnz
cli
sub
inc
inc
movsb
or
insb
xor
sahf
jbe
and
daa
mov
imul
mov
rcl
sbb
push
gs
cltd
push
test
lcall
and
pslld
sub
sti
sub
ror
mov
dec
mov
ljmp
xor
and
out
stc
sbb
fwait
adc
loopne
dec
mov
incl
decl
dec
adc
out
push
fsubrp
pop
enter
adc
loope
xchg
push
fmuls
iret
shr
fadd
jp
scas
insb
daa
push
pop
inc
xor
mov
repz
mov
ret
inc
push
xchg
adc
aam
cs
sub
jns
out
incl
int
mov
sti
call
mov
int
mov
and
adcb
xchg
sub
mov
pop
or
adc
cmpsl
adc
addr16
fisttpll
scas
movl
clc
cmp
lret
pop
cmc
xchg
pushl
xchg
mov
out
or
mov
xchg
jne
rol
imulb
int3
sub
dec
sub
test
xlat
add
push
push
das
stc
sub
popa
dec
xor
push
jno
pop
dec
das
fs
loopne
mov
adc
jae
sbb
lahf
xchg
int
or
out
int3
sub
cmp
rclb
iret
ret
jmp
hlt
jge
stc
cmc
daa
jb
gs
sub
dec
es
cmc
ret
hlt
or
xor
pop
das
lea
stos
popa
ret
js
ljmp
dec
hlt
fbstp
inc
cmp
xchg
jecxz
lea
mov
dec
ja
or
push
shr
xor
sahf
out
sti
or
xchg
push
je
xor
imul
push
in
dec
rcrb
adc
adc
cmpsl
sub
loop
and
xchg
mov
lea
sbb
dec
int3
gs
pop
jo
leave
jl
dec
lahf
mov
and
sbb
xchg
in
shrl
sub
adcb
rcrl
pop
and
dec
popa
mov
push
mov
xchg
jg
aaa
cmp
inc
push
sub
xor
inc
xchg
stos
xor
push
daa
sbb
pop
push
fisubrl
sbb
dec
xor
out
aad
cmp
cltd
or
pop
arpl
std
xlat
dec
sti
test
ss
andb
cs
mov
movsl
sub
xor
add
push
fadd
jmp
adc
adc
sub
movsb
push
gs
mov
or
mov
into
gs
dec
push
dec
testb
push
adc
xor
sbb
rorb
mov
inc
cs
imul
sub
inc
adc
inc
gs
inc
cmp
xchg
scas
imul
shll
loope
cmp
jecxz
pop
xchg
mov
push
pop
idivl
push
jl
push
mov
out
inc
popf
or
mov
mov
cltd
push
dec
jbe
cmpsl
sbb
pushf
jne
push
rcrb
inc
ret
mov
and
daa
cs
push
jecxz,pt
aad
clc
sub
leave
mov
or
js
testb
xchg
arpl
xchg
fs
gs
gs
xor
arpl
cmp
or
stos
call
sarl
int3
fwait
je
pushf
insl
xchg
sub
cmp
bound
cmp
xchg
cltd
mov
xor
popa
out
dec
cmp
es
ss
clc
lock
push
xor
mov
xchg
dec
repnz
xchg
push
dec
add
xor
aaa
adc
ret
lahf
mov
lock
paddusb
test
inc
or
out
push
stos
xchg
mov
std
mov
inc
leave
and
mov
add
xchg
das
cld
inc
mov
into
dec
insl
arpl
aad
insb
imul
jbe
pop
cmp
mov
leave
adcb
and
sbb
sbb
mov
pop
stos
push
aad
jne
mov
cmp
test
rcll
shl
dec
aas
xchg
std
mov
push
out
xlat
xchg
mov
mov
and
shl
pusha
dec
xchg
addr16
push
rcrb
jno
adc
cmp
dec
xchg
aad
dec
stos
jl
xor
jle
test
stos
pop
mov
inc
inc
frstor
add
push
call
cwtl
in
mov
jmp
pop
mov
arpl
or
mov
int3
roll
adc
orl
add
pop
sbbl
inc
sbb
shl
push
add
mov
pop
fisubrl
out
and
enter
test
shl
outsl
inc
and
stos
mov
push
lds
arpl
inc
xor
bound
out
mov
mov
test
and
outsl
sahf
pop
inc
cmp
fstpt
jns
sbb
cmpsb
aad
div
insl
leave
push
ror
adc
pushf
stos
xor
stos
mov
or
repnz
xor
movsb
imul
inc
push
or
mov
nop
lahf
push
fnstenv
sbb
and
leave
and
cld
fwait
ljmp
fisubrl
les
fxtract
mov
test
in
lahf
fucomip
add
cmp
sub
sub
nop
jecxz
add
mov
addl
lret
lahf
cmp
mov
es
into
and
xchg
cmpsl
lret
add
sbb
stos
test
shrl
push
aas
push
mov
push
add
or
push
shr
call
loop
xchg
mov
into
pop
sub
pop
bound
lret
out
push
shrl
cmc
sbb
mov
xor
add
and
iret
adc
movsl
pop
movsl
dec
or
insl
dec
inc
test
hlt
jp
dec
push
push
iret
dec
or
mov
xor
daa
dec
outsb
int3
test
andb
mov
pop
or
push
push
dec
ljmp
jp
call
cs
add
das
shr
xchg
push
mov
stos
in
mov
or
xor
inc
cmp
stos
orl
jno
mov
sbb
mov
dec
orl
jg
je
inc
in
or
inc
mov
xor
aam
std
mov
bound
loop
push
mov
jns
js
mov
test
push
push
fld
and
movsb
xor
pusha
jmp
push
sbb
add
adc
mov
inc
int
pop
repnz
pop
enter
nop
popf
outsb
cmp
sahf
insl
xchg
mulb
int3
mov
in
sbb
dec
insb
test
mov
add
sub
les
bound
in
mov
fldl
sbb
or
loopne
into
sbb
jmp
shll
push
shll
lcall
aad
sub
xor
stos
or
shl
adc
mov
sar
sahf
or
outsb
mov
jnp
xchg
add
or
cmp
mulb
cmpl
xchg
jo
scas
cltd
dec
mov
and
leave
add
xchg
gs
mov
adc
out
dec
xchg
mov
jmp
enter
movsb
js
aaa
or
push
stos
jno
sti
mov
push
in
push
nop
in
fucomp
popa
jl
push
jne
and
addr16
cmp
int
jg
cld
ret
inc
cltd
outsb
push
stos
mov
cmp
add
mov
push
lea
movsb
es
mov
fldenv
and
outsb
add
dec
mov
xorl
rorl
push
insb
mov
sbbl
mov
cmc
xchg
fsts
push
test
nop
or
add
sarl
es
testb
pop
mov
lcall
iret
pop
ljmp
jp
or
cmp
dec
fidivrl
outsl
cli
pop
mov
lcall
iret
pop
ljmp
jp
or
cmp
dec
fidivrl
outsl
cli
pop
mov
lcall
iret
pop
ljmp
jnp
or
cmp
dec
fidivrl
outsl
cli
pop
mov
lcall
xor
push
push
or
inc
aad
lds
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
enter
call
xor
mov
dec
popf
pop
lea
jns
or
sbb
std
cmp
enter
call
pop
cwtl
dec
test
mov
in
push
fstpl
int
mov
fmuls
mov
dec
test
mov
lea
js
or
push
in
xchg
sbb
xchg
jl
lcall
sub
xchg
test
call
pop
inc
jns
cmp
orb
mov
pop
shlb
cwtl
mov
jnp
sub
xchg
mov
sbb
jg
mov
cwtl
inc
rcrb
out
lret
add
in
pushf
and
or
push
fsubl
dec
add
fs
xor
sub
sub
inc
fucom
xchg
inc
adc
divl
or
repnz
cwtl
pop
sub
out
mov
inc
add
xor
cmp
mov
repnz
aam
sub
and
call
push
lods
pop
enter
jmp
fmuls
mov
dec
test
mov
lea
js
or
sbb
sub
cmp
push
xchg
inc
mov
ljmp
clc
cmp
jmp
mov
jle
lods
sbb
xchg
pop
mov
ljmp
fdivrl
or
dec
mov
xchg
dec
les
dec
test
mov
lea
js
or
sbb
sub
cmp
enter
call
pop
cwtl
dec
test
mov
lea
js
or
sbb
sub
cmp
enter
jne
xlat
push
xchg
lcall
jg
shrl
inc
push
clc
mov
sub
inc
repz
xchg
pop
lds
pushf
inc
inc
jmp
fwait
inc
jmp
mov
bound
push
int3
xor
cmp
sahf
outsl
mov
cmp
pop
test
jmp
lods
or
adc
frstor
or
repz
xchg
sti
fcompl
cmp
cmp
jle
add
and
lock
jae
cli
les
lcall
and
adc
sub
xorl
push
je
mov
cmc
push
mov
xchg
pop
cmpl
and
arpl
sbb
and
rcrb
fwait
dec
test
pop
xor
mov
sarl
push
imul
add
scas
cmp
mov
xchg
jnp
jmp
in
adc
cmp
mov
data16
or
sbb
dec
imul
bound
ss
and
pop
and
jge
add
in
int3
cmp
lahf
cmpsb
cmp
das
add
hlt
cltd
fsubrl
lcall
or
divl
roll
jae
jp
pop
loopne
xor
subb
xor
mov
jae
dec
jecxz
push
sub
sbb
inc
inc
or
adc
scas
pop
inc
xchg
mov
aam
mov
outsb
cmpsl
adc
fidivrs
mov
outsb
xor
ja
xchg
imul
cmp
repz
sub
sahf
add
mull
shr
rcrl
jae
cmpsb
inc
fisubrs
dec
aam
push
js
xchg
insb
int
mov
scas
movsl
adc
aaa
cmp
int3
and
sbb
adc
push
mov
sahf
movsb
int3
xor
lcall
loope
xchg
gs
ja
lcall
cltd
icebp
aad
repnz
lods
xor
mov
lret
int
out
movb
lret
sbb
insl
add
jnp
rcrl
sbb
lcall
and
and
insb
dec
mov
arpl
rolb
and
push
mov
fcoms
adc
imul
sbb
and
pop
fldenv
mov
push
cmpsb
inc
mov
int3
xor
call
cmp
cli
pushf
test
xchg
ljmp
sti
dec
inc
movsb
mov
jo
in
mov
pop
pop
mov
pop
into
jb
push
or
push
mov
repnz
cltd
pushf
push
int3
pop
int
xchg
lret
xor
nop
sti
sbb
mov
addr16
adc
mov
adc
sbb
int
mov
xchg
out
call
ds
push
sbb
icebp
sub
icebp
xlat
pop
xchg
sbb
out
push
cmc
lock
pop
hlt
dec
lods
mov
xor
inc
aam
mov
dec
ret
jns
jnp
cli
dec
ret
xchg
aaa
ja
and
cmp
push
jl
ja
xchg
push
mov
hlt
aam
fisubl
mov
es
hlt
dec
clc
cmpsl
jno
jge
sbb
xchg
adc
loope
jbe
mov
or
in
inc
dec
mov
push
out
push
lock
out
xchg
jmp
in
xchg
inc
stos
fisttpl
ljmp
mov
ljmp
cmp
jge
iret
enter
ficomps
js
jb
fucomp
jp
xchg
sahf
pop
cmc
cmp
out
lock
xchg
imul
das
dec
jge
cmp
out
jecxz
adc
shll
into
and
dec
xor
jle
loop
sar
mov
stc
cmpsb
inc
xlat
push
cmp
add
insb
stos
bound
jg
mov
fstps
sahf
cmpsl
add
insb
lods
push
scas
addr16
mov
xlat
jne
or
repnz
std
je
mov
mov
cmp
sahf
call
std
sbb
rcrl
pop
jle
test
sbb
mov
insb
mov
loope
int
ret
lods
dec
cmp
dec
mov
jecxz
add
test
push
jae
adc
mov
psubsw
xor
cmp
roll
sub
jae
mov
stos
jg
mov
mov
inc
sbb
ret
dec
scas
bound
dec
test
or
add
jmp
and
ss
xor
push
cltd
mov
das
add
addr16
ja
pop
cmp
aam
push
pop
stos
test
in
out
movsl
call
dec
dec
inc
popf
pop
cltd
pop
lea
push
lret
sub
jmp
xchg
mov
sub
adc
cltd
jmp
cli
mov
pop
inc
shrl
adc
aad
dec
mov
add
add
lea
inc
push
lds
lret
add
dec
lret
mov
imul
mov
call
stos
pushf
test
je
fdivrs
mov
push
aas
mov
sub
shrl
in
sarl
popf
xchg
sub
rcrb
aam
or
sub
and
inc
in
jb
sbb
andl
mov
and
inc
cmp
and
das
push
ljmp
int3
sbb
mov
outsb
mov
orb
sbb
pop
bound
xchg
pop
lret
jl
call
add
xor
or
cs
call
jae
mov
xlat
add
call
loope
fisubrl
jns
fsts
mov
mov
add
std
scas
push
ret
sub
leave
mov
mov
mov
or
data16
gs
push
test
je
fcomip
jp
and
or
lea
jnp
stos
add
jg
ss
repz
movsb
loopne
jle
aas
mov
out
lret
popf
jl
pop
cmp
mov
fadds
pusha
mov
add
cmpsl
sub
insb
jle
adc
idivb
jo
repz
push
mov
mov
push
inc
in
movsl
mov
lret
cmp
ja
xchg
push
add
ljmp
jp
inc
and
shrb
mov
pop
sbb
aad
or
sub
inc
das
sub
add
mov
lahf
fdivrl
adc
push
lret
notb
std
adc
loop
or
xchg
rorl
movsl
dec
insl
popa
xor
mov
dec
fisttpl
testl
and
out
mov
fisttpl
mov
stc
pusha
div
jecxz
pop
mov
or
aas
icebp
cltd
inc
push
xlat
rcr
xchg
mov
xor
sbb
pop
sub
adc
mov
and
pop
mov
inc
test
sbbb
dec
cmp
orl
je
xchg
aas
ljmp
imul
scas
inc
mov
or
push
iret
inc
pop
out
pop
add
clc
inc
pop
je
mov
push
fisubrs
and
mov
leave
jecxz
cmpsb
dec
sbb
in
sub
jge
jle
dec
xor
add
mov
xlat
and
mov
sahf
loope
xor
loopne
xchg
pop
jno
add
leave
dec
test
lods
pop
rorb
out
ss
clc
jbe
xchg
add
sub
popa
push
fwait
imul
inc
dec
aaa
xchg
cmp
scas
push
mov
aam
cmp
test
pop
push
movsl
jbe
sub
and
lock
das
mov
les
cmc
stos
cmpsb
jl
lcall
jecxz
psllq
mov
xchg
pop
pop
mov
outsb
adc
mov
push
mov
pushl
mov
les
jne
push
out
fucomi
hlt
test
stos
js
xchg
icebp
xor
lods
lods
dec
insl
in
hlt
pop
cltd
mov
jo
jge
inc
mov
xor
int3
xchg
adc
jae
jg
stos
jae
pusha
or
repz
pop
ret
inc
movsb
das
lret
jo
xchg
cmp
add
sar
fneni(8087
jbe
aaa
add
nop
cmc
cmp
imul
pusha
std
gs
sti
inc
sub
and
shrl
add
int3
int
test
cs
les
xchg
dec
call
movsl
pop
out
aas
push
sbb
adc
sbb
rclb
fisubl
xor
test
nop
inc
mov
loope
mov
dec
popa
mov
dec
sbb
push
push
les
decl
rolb
xchg
or
xchg
dec
jge
pop
pop
rcll
imulb
out
push
and
add
arpl
push
aam
loope
pushf
mov
cld
mov
push
outsb
push
sbb
mov
rorl
fldenv
jge
cmp
sub
jmp
mov
cmp
or
sub
int
daa
test
arpl
out
cmpsl
subl
xchg
mov
mov
sbb
sti
arpl
sbb
sub
popa
nop
sahf
jp
sbb
jl
fildl
mov
insl
out
cmp
jmp
pop
sarl
bnd
cli
mov
adc
adc
pop
xor
push
loope
iret
pop
mov
push
jae
cltd
mov
shrl
or
lock
fiaddl
xor
pusha
push
cmp
add
mov
xchg
add
out
rcrb
int3
lahf
pop
xor
inc
orb
sub
adc
xor
push
adc
pop
pop
sub
and
mov
sbb
lret
xchg
mov
mov
cmp
sub
lcall
and
test
inc
cwtl
push
adcb
mov
shll
xchg
hlt
out
fsubs
mov
lret
lret
xchg
xchg
dec
mov
fldenv
cs
outsl
xor
dec
sub
cmp
jae
xchg
addr16
add
in
push
bound
xchg
push
push
test
jg
ret
push
int
fstp
mov
daa
inc
pop
sbb
mov
jle
jo
pop
into
pop
test
jp
notb
mov
mov
shr
and
test
dec
sub
push
mov
push
inc
lock
jo
or
movsb
ds
stos
mov
or
outsb
repz
inc
gs
adc
imull
cmpb
sub
adc
out
sarb
sbb
call
cmp
ficomps
out
arpl
test
and
ja
adc
jne
movsb
arpl
rolb
xchg
push
call
mov
push
add
push
out
ret
dec
sarl
dec
push
sti
fdivrs
fcomip
add
xor
std
into
cmp
xchg
jge
sbb
sarl
popa
push
mov
out
scas
rclb
jae
cmp
sti
jl
lret
daa
jno
and
mov
std
out
sub
mov
and
movsb
ret
rcll
xchg
sub
mov
test
fdivr
sub
jmp
push
lcall
jecxz
and
push
mov
mov
in
pushf
test
add
mov
add
mov
and
out
xchg
inc
xchg
shr
mov
inc
xchg
mov
repz
shll
test
mov
mov
inc
mov
xchg
push
fcmovu
adc
push
and
and
mov
add
inc
movsb
movsb
push
jo
shr
movsb
sub
push
cwtl
mov
cwtl
loopne
jmp
and
movsbl
mov
les
ss
sub
js
sub
push
sbb
shl
inc
mov
and
pop
mov
pusha
adc
push
push
ss
pop
pop
jb
adc
dec
xchg
sbb
cld
jns
scas
repnz
or
dec
dec
jnp
mov
scas
mov
pushf
cmpsl
dec
test
les
cmp
sti
add
js
adc
in
sbb
stos
jl
dec
in
mov
xchg
dec
pusha
lods
daa
mov
and
push
jbe
xor
xor
jns
popf
cmp
lock
pop
lods
sub
push
push
pop
mov
dec
cmpsb
jo
mov
mov
imul
mov
mov
jo
pop
inc
or
jne
sbb
jae
lret
pop
jo
fstpt
jo
sub
sub
scas
ljmp
push
lea
lcall
negb
mov
test
aam
hlt
jno
mov
fnstsw
push
sbb
pushf
cmp
icebp
call
sbbl
popf
jecxz
and
push
mov
add
jo
cmp
pop
lret
inc
xchg
das
xor
jge
rol
xchg
inc
dec
cmp
add
cmp
pushf
ficomps
cltd
jns
sbb
arpl
fdivs
sahf
mov
pop
cmp
dec
or
stos
sub
enter
or
cmp
insb
adc
movsb
pop
icebp
bound
add
jecxz
jb
push
loopne
sti
pusha
pop
push
rclb
mov
cmpl
mov
inc
sti
andl
push
test
test
sbb
lods
movsb
xchg
sbb
push
ja
jns
sbb
loopne
pop
jecxz
adcl
pop
std
xchg
cmp
cld
xchg
fwait
mov
mov
loop
out
aas
adc
xchg
pushl
je
and
or
sbb
inc
pop
call
popf
xor
sbb
adc
jns
mov
es
push
dec
les
jnp
jg
add
dec
sarl
mov
dec
orl
xchg
shrl
jmp
movsl
push
mov
xor
mov
push
mov
iret
ja
or
in
gs
cwtl
ficoml
dec
aaa
cmp
es
xchg
sbbb
popf
lods
icebp
pop
sbb
jns
and
addl
or
pusha
xlat
mov
or
cwtl
fcomps
push
imul
lock
int
aad
pop
mov
ljmp
add
shll
adc
call
in
sub
push
xlat
not
lret
test
and
cmpsl
pop
insl
mov
orl
scas
pop
xor
out
insl
es
lods
lods
orl
lds
adc
jg
push
and
inc
inc
pop
jnp
leave
and
pop
cmpsl
xchg
cmp
cmp
add
outsl
mov
dec
xchg
sub
in
lods
inc
pop
aad
or
hlt
flds
jmp
fistl
std
loop
pushf
inc
mov
out
arpl
adc
pop
roll
and
push
jmp
xchg
jo
jp
cmpsb
pop
xor
add
mov
push
sti
mov
insb
cmp
sahf
lret
fsubl
gs
mov
xor
ficomps
pusha
imul
dec
inc
fdivl
push
sbb
lods
inc
sub
cmp
repnz
testl
sbb
mov
jg
jmp
cld
cltd
or
xor
xchg
pop
push
int
mov
out
fldl
jle
xchg
push
adc
inc
jl
stc
push
jecxz
sbb
icebp
sbb
dec
mov
lfs
out
movsb
xlat
pusha
sbb
mov
movsl
sbb
jle
cmc
xlat
int3
sbb
fs
jb
inc
fs
jge
or
mov
mov
movsb
add
cmpsb
or
call
rcll
xchg
lret
jno
adc
push
les
mov
xlat
loope
sbb
mov
stc
fnstenv
scas
dec
sub
gs
adc
dec
push
mov
mov
aad
jne
movsb
pop
out
std
scas
mov
sbb
pusha
clc
xor
aaa
fwait
les
mov
jo
lock
fstpl
sti
ret
dec
cmp
repnz
adc
fdivr
add
jno
and
add
push
aas
mov
xor
xchg
mov
test
push
sarl
fisttpl
pop
push
push
mov
sti
addr16
or
xchg
es
int3
out
sub
popw
cmpsb
lods
mov
lahf
sarb
lock
repz
daa
fwait
lock
fisttpll
mov
sub
testl
movsb
pop
test
pop
nop
jge
pop
mov
fcmovu
pop
imul
pop
and
dec
fdivrl
jns,pt
xchg
mov
int3
sbb
lods
outsl
xor
add
and
dec
jmp
in
push
repnz
jbe
ret
add
sub
sub
mov
repz
pop
xchg
xchg
clc
test
add
jmp
lret
arpl
int3
jne
cltd
push
or
xchg
shll
push
test
cld
test
xorb
jbe
cmp
push
arpl
jle
pop
lock
inc
sbb
dec
adc
scas
mov
push
lcall
dec
decl
inc
inc
xor
cmpsl
lret
sub
adc
adc
sbb
pop
loopne
jle
or
repnz
push
jb
inc
pop
and
mov
arpl
daa
push
mov
aas
imul
pop
rclb
push
notb
push
or
inc
mov
mov
ffreep
inc
fyl2x
movsl
fstpt
cwtl
and
jb
inc
les
out
hlt
insl
push
pop
mov
jmp
ret
mov
push
out
out
or
test
xor
aaa
nop
dec
jns
jg
mov
leave
imul
add
sti
dec
orl
lock
jns
push
mov
arpl
push
push
les
mov
mov
add
popa
test
fisubrl
loopne
addb
je
jmp
test
imul
dec
cmpsb
inc
pusha
push
stos
scas
mov
sub
popa
add
aaa
push
mov
ja
or
mov
push
lcall
add
loope
pop
fcompl
inc
jecxz
mov
push
imull
pop
sub
jle,pt
ret
push
in
and
or
and
iret
mov
outsb
or
pop
shll
sub
or
push
xor
ljmp
cmpsb
sub
popa
adc
out
fldenv
sub
idivl
sbb
sub
mov
xchg
jle
mov
lahf
push
pusha
or
mov
subb
out
repnz
jae
std
dec
ret
pop
mov
mov
cmp
sub
out
inc
adc
push
mov
aaa
pop
nop
mov
lea
in
add
sbb
pop
and
test
xor
dec
add
add
and
mov
push
ret
outsl
pop
or
inc
xor
arpl
popf
or
popf
jl
das
inc
mov
or
xchg
dec
mov
mov
lods
jo
or
mov
and
and
and
cli
in
or
sbb
cltd
orb
jns
lods
inc
loop
pushf
xchg
addr16
mov
les
xor
dec
rcrb
mov
lds
xchg
sub
sub
test
adc
cmp
int
sti
mov
sbb
adc
fstl
test
in
push
lea
push
xchg
pavgb
daa
inc
mov
sbb
pop
mov
jo
insl
lds
jo
dec
dec
lods
cwtl
push
cld
and
testb
dec
xchg
cld
popf
stos
jecxz
pop
jo
adc
orl
mov
mov
scas
pop
gs
adc
push
push
insl
loope
or
sub
jbe
mov
daa
xchg
pushf
xchg
jnp
imul
outsb
ds
pop
push
mov
xchg
add
out
daa
or
pop
sub
and
adc
and
adc
mov
clc
add
lret
aaa
mov
pop
or
pop
in
sub
xor
ds
outsl
and
xchg
xor
scas
loop
in
pusha
xor
scas
cld
pop
mov
xor
lret
mov
jg
xlat
adc
cmp
mov
into
popf
imul
lods
jbe
and
clc
mov
jecxz
cmc
roll
mov
add
sub
imul
stos
iret
movsl
lret
mov
inc
sbb
dec
and
mov
decl
dec
cwtl
cmpsl
aaa
outsb
cld
sbb
bound
rcll
leave
mov
inc
and
loope
ficoml
xchg
or
dec
incl
std
pop
cmpsb
push
test
enter
mov
sahf
add
sbb
xor
shl
loope
pop
mov
inc
and
je
pop
insl
mov
pop
mov
mov
sbb
jge
mov
dec
fwait
adc
popf
dec
fidivrl
outsb
rclb
test
out
shr
out
test
or
shlb
sub
das
sbb
cmpsb
pop
mov
stos
mov
dec
add
jg
jp
and
mov
insl
addb
ljmp
add
dec
pop
cs
sub
and
mov
inc
fsubp
into
cmpl
test
jle
das
cmp
mov
cmp
adc
mov
ret
divb
jp
mov
enter
mov
test
ljmp
mov
jmp
pop
cwtl
dec
test
mov
lea
js
or
sbb
sub
cmp
enter
call
pop
cwtl
dec
test
mov
lea
js
or
sbb
sub
cmp
enter
push
pop
cwtl
int
jge
insl
dec
sbb
js
or
sbb
sub
cmp
enter
call
pop
cwtl
dec
test
mov
daa
ret
fidivrl
push
adc
push
and
push
adc
add
sbb
xchg
aad
in
adc
push
and
jbe
inc
xor
xchg
div
in
adc
push
and
jbe
inc
gs
xchg
cmpsb
test
mov
mov
add
jae
faddl
incb
push
push
and
neg
pop
outsl
aad
js
movsl
adc
insb
test
jg
sar
into
xchg
fsubl
stos
dec
cmp
subl
shrb
in
ss
std
aam
rorl
sub
popf
mov
dec
or
jne
dec
lret
and
and
movsb
inc
push
addr16
jbe
dec
or
dec
cmp
adc
imulb
ljmp
sbb
in
dec
cltd
je
fs
test
mov
pop
mov
out
scas
lock
push
lods
sub
lds
loopne
jmp
lea
dec
es
push
push
inc
jbe
inc
gs
xchg
cmpsb
test
aad
in
push
es
dec
push
inc
inc
push
cmp
or
adc
and
aam
subl
mov
mov
push
dec
ja
gs
inc
jne
and
gs
ret
xchg
hlt
loope
les
mov
popa
gs
arpl
push
push
inc
jbe
inc
gs
xchg
cmpsb
test
aad
in
adc
push
and
jbe
inc
gs
xchg
cmpsb
test
aad
in
adc
imul
cmc
int3
adc
cld
mov
test
hlt
testl
jge
mov
jmp
or
dec
mov
mov
mov
xor
mov
sbb
aam
imul
mov
ret
cmpsl
nop
jno
test
and
ljmp
aam
sub
leave
mov
sbb
or
fwait
mov
andb
lock
dec
test
adc
pop
lods
inc
push
xchg
pop
rorb
mov
popf
xchg
sub
xor
lock
xchg
rolb
and
cld
cmp
mov
hlt
fimuls
xor
pusha
popl
jne
mov
pop
xchg
sub
int3
sub
shll
iret
sahf
push
ss
jl
out
enter
arpl
mov
lahf
jl
cmp
in
rcll
imul
addr16
icebp
in
sbb
xchg
out
iret
sbb
lcall
in
xor
sbb
add
mov
cli
add
int
clc
xor
sub
mov
cmp
sub
in
xor
dec
add
fidivl
hlt
dec
pop
cmp
xchg
test
rcl
mov
aas
and
sbb
dec
xor
popa
mov
mov
adc
xlat
addl
lcall
dec
xchg
adc
gs
sbb
sbb
stos
aad
jle
xchg
cmp
pop
fimuls
int3
pushf
push
and
mov
je
adc
xor
pop
adc
sub
rcrl
mov
or
std
mov
xlat
push
je
cbtw
inc
cld
add
loope
fcoms
push
sub
ror
pop
and
mov
lods
outsl
sar
aaa
dec
and
cmp
int3
in
sub
scas
or
arpl
lods
fstpt
mov
ss
push
ss
je
daa
inc
sub
scas
out
xchg
and
mov
inc
stc
add
inc
and
ror
mov
jmp
popa
ret
xor
adc
fisubl
ss
mov
push
sbb
out
and
imul
test
inc
jp
xor
test
test
data16
movsb
sub
ds
sbb
or
jne
inc
lahf
or
lods
cli
inc
xchg
sub
int
mov
mov
pop
mul
mov
mov
pushf
mov
or
orl
push
sub
pop
incb
mov
xor
xchg
or
push
sbb
push
mov
cmp
insl
jmp
test
mov
xchg
pop
inc
jecxz
xchg
add
aaa
lcall
mov
and
movsb
mov
clc
mov
pop
jo
popf
xchg
push
aam
leave
ret
or
mov
lods
jg
and
enter
add
xor
enter
adc
insl
outsb
lret
aad
mov
fcmovbe
inc
iret
sub
sbb
mov
lods
inc
insb
js
outsb
and
sub
dec
pop
pop
sub
xor
mov
into
mov
push
cltd
in
icebp
test
push
insb
iret
push
xchg
mov
repz
cmpb
or
sbb
mov
jnp
xchg
pop
scas
mov
and
jp
ds
inc
sbb
mov
sub
mov
adc
fwait
inc
jl
push
dec
sub
das
roll
bound
cmp
sub
and
popa
popf
fstl
dec
xor
stos
fwait
lcall
shll
imul
dec
idivb
adc
icebp
mov
lcall
mov
lea
pop
in
add
push
in
mov
adc
mov
rcrb
rclb
call
jp
sbb
xchg
pop
xchg
cmpsb
cmp
sbb
movsl
sub
out
mov
add
aam
push
cli
mov
pushf
sbb
lahf
mov
mov
aaa
push
dec
cmp
jb
mov
nop
or
out
jp
or
cmpsl
and
sbbb
fisubs
stos
mov
and
lods
add
sub
jl
push
sbb
imul
jbe
or
addr16
daa
aam
daa
and
fldcw
stos
or
stos
icebp
mov
repz
pop
je
pop
test
sbb
mov
xchg
outsb
jge
or
mov
sub
add
aas
mov
xor
xchg
pop
mov
ljmp
lahf
and
pop
ljmp
fistl
aaa
or
cld
pop
dec
clc
fdivs
js
frstor
shrl
dec
pop
sub
mov
lahf
mov
lret
adc
xor
jl
add
pop
loopne
adc
push
jmp
pop
adcb
and
fwait
inc
cmp
and
sbb
popf
mov
mov
iret
cmpl
lods
pop
bound
push
mov
lds
loope
sti
pop
insb
adc
cltd
pop
test
mov
in
das
add
and
cmp
cmc
xor
push
sub
push
xchg
sbb
dec
inc
bts
iret
lcall
xor
sbb
dec
sub
cltd
mov
scas
nop
filds
imul
push
std
adc
enter
push
addr16
inc
cmpsl
jo
andb
adc
loop
jno
xlat
adc
mov
fadds
mov
xor
cmp
gs
cs
and
loopne
testb
aad
addb
cmpsb
adc
cmp
mov
pop
out
pop
push
xchg
cmp
cwtl
adc
jne
xchg
jno
insb
outsl
push
push
add
sbb
push
shrl
outsl
in
dec
adc
mov
xor
xchg
cmpsb
dec
mov
inc
xor
insb
jne
js
dec
adcl
adc
fiaddl
jg
pop
xchg
insb
outsl
in
data16
jbe
jo
fisubrl
shlb
nop
pop
icebp
mov
mov
push
and
cli
xchg
cmp
dec
jb
pop
shrb
cmp
fs
sysret
incl
sbb
lcall
enter
inc
inc
pop
lods
icebp
sbb
xchg
les
scas
lock
adc
loope
jg
jnp
push
mov
test
test
xchg
sbb
lcall
fisubrl
sub
sahf
je
out
scas
jae
or
pop
xor
mov
sahf
addr16
or
jmp
sbb
aas
xchg
jbe
push
cmp
jmp
mov
sub
test
scas
mov
int3
outsb
jp
pop
jge
lret
mov
xchg
or
jne
mov
push
push
pop
ficoms
ret
xor
cwtl
inc
out
imul
adc
fdivs
inc
jl
cwtl
sbb
adc
push
and
jge
stos
cmpsb
cmp
sub
shlb
pop
xlat
xchg
xor
stos
mov
inc
dec
sbb
push
loope
lahf
sbb
aad
jl
mov
aas
cmp
dec
inc
xor
fnsave
inc
fs
movsl
andl
adc
push
shlb
push
ss
int
add
or
lods
jg
dec
jmp
in
sbb
push
push
loop
je
add
and
xchg
lahf
push
stc
sbb
mov
cmpsb
shrl
lret
orl
lods
adc
clc
and
cmpsb
adc
insb
inc
insl
mov
jns
adc
call
sub
iret
inc
pop
mov
xor
dec
push
xchg
insb
mov
out
shl
insb
inc
ss
dec
loop
push
adc
pop
push
mov
sub
ds
mov
into
icebp
or
rorl
pop
lahf
hlt
std
cltd
mov
push
or
jo
inc
push
push
mov
jg
cwtl
sahf
sbb
rorl
adc
rorb
sub
or
jg
addr16
jo
fwait
or
lret
call
pop
push
ljmp
lret
xchg
adc
adc
sbb
mov
adc
or
jl
xor
es
loope
push
adc
in
test
lds
lret
inc
push
lds
sbb
or
xchg
or
movsl
iret
mov
lods
xchg
jecxz
push
ds
sti
bound
xor
mov
mov
fisttpl
jno
pop
mov
xor
inc
cmpsb
xchg
push
ret
pop
pop
mov
mov
mov
ljmp
mov
aad
cmp
mov
push
lahf
jmp
xor
ror
cld
xchg
fiaddl
mov
pop
outsl
jle
mov
aaa
cmp
jl
call
fimull
push
mov
xchg
mov
cs
pusha
xchg
sbb
mov
adc
jmp
cli
inc
mov
inc
push
dec
lret
pushf
iret
es
add
icebp
stos
call
sub
dec
shlb
in
inc
loope
imul
cwtl
cs
or
adc
cmp
push
cs
xor
sub
popa
mov
mov
inc
or
enter
in
mov
mov
aad
icebp
xor
jo
push
fcoml
inc
sahf
cmpb
dec
loopne
adc
push
cmpb
xor
mov
pushf
xlat
jae
or
push
popa
push
stos
cmp
bound
ljmp
xchg
mov
or
imul
cmp
sub
mov
test
pop
mov
add
add
into
inc
dec
sarl
jp
sub
lea
sarl
inc
xchg
shlb
addb
lea
stos
mov
sbb
clc
and
sub
push
imul
xchg
enter
ret
lds
nop
mov
andl
int3
mov
insb
iret
clc
and
bound
aam
push
repnz
test
inc
jbe
mov
outsl
lea
popf
inc
out
imul
and
and
push
add
cmp
cmc
outsl
xor
loopne
mov
or
cmp
out
scas
stos
fbld
dec
jg
inc
outsb
shl
push
sbb
call
jge
jo
mov
mov
push
arpl
cmp
pop
test
pop
cli
lock
sub
pop
and
jmp
adc
push
jp
test
add
pop
mov
outsl
jecxz
into
int3
xchg
add
stos
or
loopw
xor
lcall
jns
inc
or
mov
fistpll
aaa
mov
in
push
insl
xlat
jne
mull
imull
mov
mov
inc
out
or
mov
or
mov
mov
inc
sbb
cmpsb
sbb
mov
out
cmpsb
sbb
popf
imull
test
inc
dec
leave
inc
mov
loopne
fistpl
es
aad
out
sbb
imul
call
lret
xor
dec
filds
mov
stc
sbb
popf
adc
jnp
loope
movsl
push
data16
xor
roll
shll
jecxz
ds
or
jae
sbb
jg
mov
inc
je,pn
arpl
and
mov
push
push
sbb
fdivl
jecxz
mov
add
add
xor
movsb
add
mov
mov
xchg
push
cmpsl
jnp
mov
xchg
mov
sarl
sbb
loop
mov
std
cmp
jle
sbb
aas
add
jmp
sahf
mov
loope
sti
xchg
or
scas
sub
adc
inc
inc
xchg
xchg
bound
cli
mov
xlat
inc
out
rcrl
lcall
movsl
out
out
scas
outsb
jo
leave
addl
jecxz
cs
or
movsl
add
push
push
jne
pusha
pushf
roll
out
jo
mov
pop
mov
ljmp
add
push
xchg
push
loop
fldt
dec
xchg
and
dec
in
or
mov
xor
shll
or
pop
sub
sbb
pop
and
addl
cmc
cmp
lock
push
cmp
push
aas
push
hlt
adcb
xor
dec
cmp
sbb
movsl
lret
pop
outsb
lcall
repnz
or
stc
mov
and
ds
mov
and
test
push
not
mov
test
xchg
and
fwait
test
repz
ret
int
xchg
pop
loope
lcall
xchg
cs
movsl
clc
mov
jns
iret
enter
and
push
out
xor
out
mov
xor
mov
mov
fwait
and
add
adc
stos
data16
fs
sbb
arpl
or
inc
mov
cli
push
lock
dec
push
nop
dec
mov
out
sub
fisubs
mov
leave
cltd
dec
data16
call
dec
adc
enter
iret
cmp
fisubrl
push
add
fsts
imul
jns
rorl
inc
cmp
inc
inc
xchg
jb
jne
pop
adc
add
push
xchg
fs
jmp
adc
fdivs
dec
inc
jl
inc
out
pop
subb
adc
das
pop
pop
clts
xor
push
fdivl
pop
ljmp
fwait
push
push
dec
xchg
xchg
xchg
pop
out
shl
insb
xchg
aaa
mov
mov
xor
int3
jno
and
outsl
jbe
push
sub
iret
push
cmp
mov
call
pop
add
xor
add
loop,pt
addb
cli
enter
fwait
lcall
aad
mov
imul
push
mov
push
jbe
inc
jns
insl
or
fnstenv
cmp
cmp
push
addr16
or
push
ret
mov
daa
xchg
inc
ss
aad
mov
shll
leave
aam
lahf
add
mov
scas
push
mov
call
shr
dec
lock
popf
stos
sbb
scas
fiadds
mov
outsl
int
std
jg
xchg
jmp
adc
mov
test
mov
cli
pop
jge
andb
xor
pop
cmpsb
clc
sbb
mov
or
subl
cmp
dec
pushf
or
or
dec
in
mov
sbb
add
mov
dec
in
and
pop
pushf
mov
mov
pop
jg
ja
fistpl
into
mov
add
lahf
mov
orl
cmc
adc
das
enter
mul
mov
adc
pop
mov
orl
mov
shll
mov
jnp
jo
mov
jl
and
test
pop
sbb
lcall
pop
pusha
dec
cmpsb
repz
xorl
addr16
lds
fmul
add
dec
int3
pop
ja
sub
lods
push
xchg
adc
push
outsb
pop
nop
lds
jbe
push
add
mov
test
mov
test
xor
cmp
out
or
cli
mov
push
cmp
daa
xchg
jmp
jecxz
int3
jp
xchg
in
mov
testb
and
ret
and
xorl
inc
addl
enter
adc
lods
loopne
js
movsl
fstpl
jmp
xlat
sti
fs
in
lret
or
xchg
sbb
es
add
test
adc
mov
orb
lods
adc
sub
or
push
add
fidivrs
lea
jmp
push
push
fiaddl
mov
sarb
and
gs
sbb
cmc
or
or
js
inc
mov
loope
push
and
push
outsl
cmp
sub
mov
adc
dec
fdivrl
psubsb
mov
mov
sbb
jge
sbb
pop
jle
repz
sti
sub
xor
popf
or
fcmovb
out
fsubrp
mov
call
dec
mov
cmp
or
mov
fs
add
cmp
jge
adc
pop
cmpsl
into
xchg
xchg
aam
sti
push
jbe
mov
xor
jno
push
jb
mov
andl
jo
mov
mov
call
in
int3
push
pop
mov
inc
aaa
cmc
mov
mov
mov
adc
xlat
incb
mov
in
lret
fsub
in
test
and
imul
jno
xchg
pop
or
inc
xchg
mov
sbb
mov
cmp
push
push
push
lret
rcrb
fisttpl
inc
cmpsl
mov
test
add
cmp
xor
in
daa
mov
push
push
inc
or
pop
rorb
inc
cwtl
and
outsb
mov
lods
adc
es
into
subl
dec
or
mov
cmpsb
mov
jae
pop
xchg
jo
xchg
inc
cld
dec
xchg
es
mov
push
stos
shrb
pop
sarl
je
test
dec
out
loope
inc
pop
fcoml
jbe
sub
adc
mov
or
call
push
jle
in
test
les
mov
cld
out
mov
and
and
mov
mov
std
out
aas
mov
mov
fdivrs
sahf
push
mov
stos
bound
push
outsb
or
outsb
mov
sti
ljmp
and
push
je
xorl
fsubl
xlat
push
ljmp
outsb
push
add
jns
jle
mov
pop
jne
daa
nop
cmp
jmp
rdpmc
xor
mov
push
test
sub
inc
sbb
mov
add
jmp
or
test
rorb
dec
mov
in
mov
in
cmc
or
fisubl
outsl
inc
push
fiadds
jne
push
imul
pop
mov
xchg
sbb
dec
push
sub
push
mov
mov
mov
pop
and
sbb
inc
mov
add
je
sub
leave
inc
mov
cmpsl
sbb
clc
add
xor
push
bound
xchg
test
mov
jmp
and
int3
adc
gs
repz
stc
outsl
jl
pop
cld
inc
cmp
pop
test
adc
xor
or
stc
rcrb
sub
lods
inc
mov
aad
mov
movsl
or
adcl
cmp
pusha
addl
xor
or
fildll
cmp
stc
pusha
scas
jae
pushf
mov
cmp
xor
mov
mov
repnz
or
jbe
push
pop
jmp
or
lahf
in
cmp
outsb
int
fstpt
shlb
fstpl
insb
sub
or
inc
inc
fucom
sbb
sub
jecxz
addr16
pushf
adc
cmp
inc
std
mov
add
inc
cmp
nop
das
ljmp
es
sbb
ret
sahf
jno
cli
aaa
sbb
or
mov
je
cmp
imul
lahf
add
xchg
inc
sbb
inc
mov
bound
sbb
shrb
mov
call
cmp
aas
aam
push
daa
lds
lea
lahf
mov
mov
jns
mov
cmp
sub
test
sbb
cltd
pop
popa
xor
push
enter
sti
ret
push
dec
dec
sub
sub
mov
pop
xor
aas
mov
add
shlb
dec
adc
xchg
outsb
cmp
jno
cmc
jg
fdivl
fisubl
std
mov
popl
push
arpl
test
test
adc
xlat
movsb
jg
test
cmp
repnz
cmp
inc
les
nop
in
and
push
addb
shll
jg
cmp
mov
hlt
adc
bound
sub
cmp
orl
lods
mov
test
jecxz
inc
aam
mov
pop
push
in
cmp
fmul
mov
cmpsb
mov
scas
clc
mov
pop
popf
sub
xchg
fistps
cmp
jbe
sub
add
movsl
repnz
js
outsl
mov
ret
pushf
cwtl
and
orl
repz
mov
sbb
xchg
or
lcall
sar
or
outsb
cmp
xchg
icebp
out
in
and
adcl
inc
loop
inc
into
ss
mov
sub
shl
cmpsb
jb
adc
cmp
mov
out
test
dec
mov
sub
fistl
cmp
mov
push
jg
push
lea
in
fnstsw
fcmovb
cld
in
push
mov
divb
cmovle
fmull
fists
pop
adc
sub
mov
in
and
push
inc
xor
cmpsb
daa
sbb
push
mov
dec
lcall
sub
mov
ficomps
pop
repz
push
je
popa
or
mov
xchg
add
movl
pop
test
js
outsb
ja
aad
shrb
jmp
pushl
push
movsl
subl
mov
and
icebp
int
adcl
ds
push
lcall
repnz
jno
fwait
pop
dec
inc
push
push
nop
xchg
and
mov
dec
dec
mov
das
in
arpl
mov
fsts
pop
mov
popa
into
clc
push
fimuls
dec
mov
ss
inc
jbe
inc
gs
xchg
cmpsb
test
aad
in
adc
push
and
jbe
inc
gs
xchg
cmpsb
test
aad
in
adc
push
and
jbe
inc
gs
xchg
cmpsb
test
aad
in
adc
push
and
jbe
inc
gs
xchg
cmpsb
test
xchg
or
cmp
sub
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
cmp
lahf
push
aad
pop
iret
in
sub
lock
push
adc
add
or
add
or
add
add
add
arpl
arpl
pop
add
add
add
popf
add
add
insl
add
rolb
add
add
add
add
add
add
add
add
ret
add
add
add
rolb
add
add
add
sub
push
add
inc
add
add
movsl
add
add
add
add
add
arpl
les
push
add
add
arpl
testl
addr16
add
add
add
mov
aad
pushf
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
add
add
cmp
in
add
push
add
add
add
add
add
sub
scas
add
add
add
add
add
add
add
add
add
add
add
push
add
or
push
add
add
add
out
add
xchg
add
add
add
add
add
add
add
add
pop
add
add
add
or
ja
out
pop
add
add
add
or
stc
add
add
add
add
mov
cmp
mov
add
add
add
add
add
inc
add
rolb
add
stc
add
roll
aas
add
add
add
add
or
add
add
in
add
add
add
xor
add
cmp
push
add
mov
add
pushf
add
pop
add
out
add
add
xor
jo
push
add
add
arpl
mov
ljmp
add
mov
xchg
add
add
arpl
inc
add
add
add
arpl
xor
pop
add
add
inc
add
xchg
add
or
add
add
add
add
add
add
add
add
add
inc
add
add
add
mov
aaa
add
add
adc
sub
aam
pop
add
insl
add
lcall
add
adc
pusha
add
add
add
ret
add
adc
push
add
add
icebp
add
rolb
add
add
add
add
add
add
add
mov
add
add
add
add
add
cmp
lcall
add
add
add
or
jl
xchg
add
add
add
add
add
add
pushf
add
jb
push
popa
add
add
add
add
push
sub
add
add
add
aam
xchg
add
add
add
in
jle
out
add
add
out
add
add
add
pop
add
aam
add
add
add
movl
imul
add
add
add
aam
aam
pop
add
add
ret
add
add
dec
add
push
add
add
add
add
add
add
push
add
add
add
push
add
xchg
xchg
add
add
jno
cmp
stc
jo
leave
lret
cmp
xor
hlt
out
mov
test
fdivrl
jl
cmc
jecxz
outsl
mov
or
cli
lods
movsb
add
in
fsubrl
or
cli
arpl
jl
pop
jae
jle
fstl
or
jmp
imul
and
imul
stc
fs
outsb
xchg
incb
jmp
fisubrl
gs
add
ljmp
mov
adc
out
test
xor
ds
rorb
repz
repnz
loopne
mov
xor
xlat
xchg
out
in
inc
adc
das
jns
out
cmp
js
nop
sub
mov
add
add
add
mov
mov
negb
inc
in
mov
loope
ss
sub
mov
mov
inc
mov
and
sbb
dec
and
scas
add
test
pushl
lcall
ja
cmovns
cmpsb
lahf
cmc
outsl
mov
arpl
lret
cltd
or
or
mov
ficompl
ss
add
push
in
jg
mov
int
push
loopne
jno
repnz
out
aaa
out
bound
inc
sbb
adc
fcmovne
stos
add
jo
xchg
xchg
fisubrs
iret
xor
dec
sbb
jge
pop
xor
or
lods
in
mov
pusha
in
mov
cmp
es
sbb
sarl
jp
jmp
sbb
mov
xchg
xorl
sub
into
lds
clc
cmp
or
xchg
addr16
fwait
xchg
stos
cmp
and
add
mov
shlb
int3
xor
lret
add
inc
fdivrl
push
xor
fadds
mov
int
std
jg
ljmp
xchg
xchg
in
rcrl
cwtl
xchg
stc
test
sbbl
lahf
aaa
int
pop
scas
push
xchg
push
or
adc
idiv
leave
mov
sahf
rcr
mov
aas
sub
lds
arpl
test
dec
mov
inc
bound
push
add
and
cmc
push
shrl
pop
decl
xlat
cltd
inc
rolb
dec
xchg
stos
cmp
add
es
jge
das
add
xor
je
insb
inc
xlat
adc
push
lahf
lods
stos
and
mov
inc
push
mov
pop
repnz
cwtl
das
sub
inc
popa
ljmp
push
loop
scas
or
mov
clc
dec
jns
mov
jg
fistps
and
push
imul
fcomps
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
