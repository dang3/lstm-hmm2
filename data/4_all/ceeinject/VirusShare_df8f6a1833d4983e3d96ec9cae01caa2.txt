call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
add
xor
sub
adc
cmp
clc
mov
ret
mov
cwtl
repz
adc
push
push
sbb
jae
xchg
lret
mov
jmp
dec
jecxz
repz
cmp
popa
pop
adc
jnp
jae
lcall
clc
ret
leave
mov
mov
and
shll
push
scas
lret
arpl
movsb
cmp
adcb
test
push
out
mov
mov
clc
xchg
or
or
cld
mov
aaa
jne
sbbb
call
dec
insb
sbb
cwtl
das
cwtl
jecxz
repz
ljmp
fcomps
xchg
daa
xchg
or
fcmovnbe
addr16
jo
mov
mov
js
cmp
lods
inc
clc
cmp
rcll
jmp
repz
mov
adc
jl
push
int3
fdivrp
jecxz
xchg
sub
push
repz
dec
or
js
bound
sbb
push
lcall
loope
nop
lret
stc
test
fsubrl
jbe
inc
imul
cs
jae
andl
xchg
ret
in
lret
xchg
test
aad
xor
dec
sbb
das
jnp
sub
and
idivb
ret
cli
mov
frstor
jg
dec
or
or
arpl
jae
or
fsubs
mov
cwtl
jecxz
repz
and
js
or
arpl
jae
or
fsubs
mov
cwtl
jecxz
repz
pushf
dec
inc
imul
xor
xchg
mov
mov
bound
mov
test
ret
ja
and
shll
adc
mov
aam
out
lds
mov
sbb
lcall
daa
mov
jg
dec
div
jns
decl
arpl
sbb
shll
arpl
es
sub
cmp
jge
iret
jno
idiv
cmp
shl
sub
fsts
loopne
mov
in
xchg
cmp
insb
xchg
stos
mov
inc
test
adc
mov
adcl
loop
movsb
imul
sbb
popa
fidivrl
pop
out
mov
int
sub
mov
pop
jg
ret
mov
xchg
sbb
addl
sub
lods
mov
mov
inc
or
clc
div
jo
jp
pop
fidivs
xchg
dec
push
lcall
repnz
jle
sarb
ds
adc
imul
shrb
push
or
and
dec
jns
arpl
adc
dec
push
push
adc
and
pop
cs
mov
je
xor
or
cmp
aaa
or
cmpl
push
jl
jecxz
jp
push
out
xchg
and
adc
fidivrl
call
push
clc
or
cmc
inc
jne
cltd
mov
jbe
inc
cmpsl
fsubrl
dec
xlat
mulb
fsubr
fnstsw
pop
and
jne
fcomp
push
loope
jl
outsb
mov
push
stos
dec
mov
cmpsl
xor
movsb
inc
sbb
andb
mov
inc
out
in
clc
fildll
fisttpl
loop
push
testb
enter
test
mov
xchg
sbb
push
xchg
push
incl
jbe
pop
add
adc
xchg
and
orb
pushf
into
fs
mov
inc
divl
pop
sub
mov
lahf
js
stc
popf
sbb
hlt
shrl
dec
icebp
fs
inc
jmp
push
pop
push
cmp
sub
shl
lret
cmp
inc
sub
dec
outsb
push
sbb
fs
pop
push
ljmp
mov
cmp
mov
jg
lret
mov
lret
in
cli
pushl
in
jb
in
xchg
addr16
das
popa
or
je
lret
dec
add
mov
xor
cwtl
sub
sub
push
test
sbbl
adc
movsl
sbb
cvttps2pi
push
das
xchg
pop
xor
fiaddl
mov
or
icebp
fdivl
fsubl
andps
push
add
ja
jne
pop
cmp
mov
loope
inc
jb
nop
cltd
xlat
mov
pop
dec
cmp
shl
mov
out
addr16
stos
dec
in
pop
sub
lock
mov
repnz
stc
test
and
add
nop
andl
lcall
xlat
cwtl
in
das
fistps
mov
cmp
pop
push
and
add
ret
adc
xor
test
inc
jne
mov
push
test
xchg
subb
out
push
mov
cs
in
adc
or
cmpsb
cwtl
push
inc
shrl
iret
es
xor
les
inc
rcll
pop
les
add
ficoms
adc
adc
lock
mov
call
xchg
cs
and
adc
cmp
add
mov
fdivs
stos
sbb
jns
jp
into
jge
push
mov
inc
ja
cmpsl
jmp
xlat
addb
add
fistpll
cli
stos
sbb
jne
push
xchg
enter
cwtl
push
cmpsl
mov
sbb
ljmp
cmp
xor
add
inc
in
mov
mov
fwait
inc
sbb
or
dec
jae
ja
add
stos
outsb
add
sbb
mov
dec
xchg
add
cmp
cmp
shl
mov
xchg
and
repz
push
dec
aad
mov
ret
inc
cltd
aas
repz
sub
xchg
cld
call
ja
divb
jl
in
in
dec
cs
mov
inc
call
mov
jo
pusha
andb
mov
aaa
or
inc
pop
mov
cmp
outsb
sbbl
pop
imul
data16
jo
dec
or
inc
sbb
lahf
mov
dec
clc
int
dec
hlt
mov
adcb
lock
shrl
pop
dec
dec
das
mov
scas
cmp
dec
dec
pop
jp
lahf
nop
icebp
fldln2
xchg
cmp
ds
clc
push
ljmp
xchg
adc
imul
gs
fistps
add
push
jne
and
dec
xor
in
push
inc
mov
cmp
sub
and
arpl
lret
hlt
lret
mov
lds
xchg
imul
adc
mov
mov
jae
push
and
mov
sbb
sar
jl
mov
cltd
mov
mov
and
fbld
iret
outsl
mov
into
dec
pop
cmp
and
pop
cmpsl
xchg
or
mov
pop
mov
lret
insb
mov
aam
push
ds
das
jo
add
in
pop
test
sahf
dec
xor
repnz
mov
stos
mov
fistl
mov
icebp
testl
push
xchg
push
cmp
int3
cli
inc
adc
pusha
xchg
and
inc
add
inc
enter
loop
mov
mov
mov
mov
adc
pop
or
loopne
outsb
or
push
and
jle
push
add
adcl
mov
xchg
iret
xchg
xchg
jl
fidivrs
add
mov
inc
je
sub
dec
push
scas
les
lock
int
aam
dec
pop
dec
pop
push
jne
add
sbb
insl
inc
imul
adc
jnp
test
adc
stos
shrl
cmc
iret
push
jmp
les
movl
enter
ja
push
ret
lods
negl
and
mov
mov
test
aas
xchg
hlt
or
push
stos
pop
push
es
aad
mov
lcall
dec
lahf
jae
adc
out
mov
out
sub
shlb
insb
push
out
in
sbb
cltd
ret
xchg
pop
xchg
inc
push
shlb
add
fldt
out
lret
inc
les
inc
pop
sbb
jl
mov
jge
mov
mov
cltd
daa
pop
xor
icebp
pop
jmp
clc
cmp
cmpsl
imul
or
and
je
mov
and
sbb
mov
stos
bound
loope
in
into
inc
dec
pop
xor
adc
gs
insb
ret
mov
addr16
inc
xchg
pop
shl
sub
inc
pop
or
pop
adc
adc
jae
and
or
mov
push
stos
nop
nop
xor
mov
mov
insb
shrb
cltd
push
das
test
add
fisubrs
rol
cmp
fcmovne
outsl
xchg
insb
adc
or
push
sub
lret
lcall
mov
jg
adc
fwait
cmp
and
push
jae
cmp
xchg
add
add
outsb
pushf
xchg
adc
data16
bound
xor
fadd
sub
xchg
sbb
int
in
inc
xor
scas
scas
adc
clc
lahf
andl
inc
inc
sarb
mov
enter
mov
mov
jbe
test
xor
adc
cmpsl
shrb
sahf
jecxz
jo
fisubrs
lods
cmp
mov
pop
push
sbb
je
or
stos
inc
mov
popa
and
lock
testl
cmp
sub
lahf
jns
or
sub
test
lret
mov
fsubrl
cmp
xchg
icebp
mov
xor
testb
sar
mov
adc
int
in
pop
adc
xor
cmpsb
loop
lods
fisttps
xchg
cmp
or
das
mov
jg
adc
test
pop
sub
jno
push
fucomp
stos
xchg
mov
jecxz
jno
add
xchg
cmp
jbe
lods
mov
xchg
in
sahf
test
movsb
and
pusha
lock
or
add
in
sub
mov
rclb
sub
insb
sub
pop
adc
aam
fisttpll
push
sbb
push
cmpsl
xchg
lods
int
out
jne
lahf
and
add
daa
in
fldcw
add
cwtl
or
into
stos
sti
bound
pusha
mov
shl
aas
mov
mov
fs
inc
roll
dec
cli
insb
cmp
lret
orb
adc
mov
dec
push
inc
push
sbb
and
sub
rcrb
stc
mov
xchg
mov
jmp
pop
pushf
jo
in
mov
fdivrs
jg
jp
lods
aad
mov
repnz
mov
push
pushf
cmp
fistl
push
cmp
mov
dec
xchg
xchg
push
sub
loopne
dec
mov
jns
fdivs
lahf
aas
lods
mov
push
pushl
sub
cwtl
jmp
movsb
push
stos
add
pop
outsb
les
pop
popf
mov
mov
xchg
cmpsl
cmpsb
xchg
stos
jo
push
je
jecxz
pop
cltd
aad
psrlq
shll
sub
subl
xchg
and
push
jg
mov
cmpsb
sar
mov
xchg
jp
pop
test
dec
mov
mov
jmp
popf
xchg
gs
cmpsl
push
test
and
sub
pop
inc
xchg
cmp
xchg
bound
cld
pop
sbb
xchg
stos
int3
mov
dec
or
jb
xlat
lods
xor
insb
mov
adc
filds
dec
insb
jne
inc
xchg
push
dec
fsubrs
mov
jo
in
dec
outsl
js
imul
mov
andb
xor
xor
adc
sub
das
mov
mov
js
sbbb
fbld
iret
mov
mov
or
das
js
adc
mov
les
fdivl
cmp
push
dec
sar
xchg
fidivrl
and
shrl
iret
xor
or
addr16
inc
push
call
fdivrs
add
lods
jb
sbb
cs
add
loope
xor
sbbl
xchg
pop
sub
cli
std
lea
mov
jnp
sub
or
dec
scas
lret
and
jmp
adc
shll
add
sahf
add
je
popf
cwtl
or
sub
sbb
cmpl
or
incb
jbe
xchg
out
enter
pop
outsl
push
sub
insb
andl
mov
cmp
jb
xchg
adcl
loopne
pop
xchg
xchg
lock
sbb
andb
sub
jp
jmp
std
cmpsb
sahf
and
mov
mov
jns
pop
cmp
and
cmp
lcall
pop
mov
jg
test
push
pop
stos
loop
stos
lcall
test
pminsw
in
lea
fdivs
adc
push
dec
mov
adc
mov
push
scas
and
pop
mulb
popa
addr16
ret
leave
push
jp
pop
sub
cmp
outsb
fistpl
lret
xor
push
inc
mov
andl
push
insl
mov
xchg
add
cmp
jle
jb
pop
popa
mov
sbb
fsubr
rorb
sahf
loope
add
jle
movl
stc
fs
lods
repnz
lret
clc
add
dec
stos
push
out
xchg
inc
sbb
divl
fidivl
cli
or
cmpsl
pop
subl
test
add
xor
add
or
and
in
icebp
jle
out
imul
cmpsb
xor
pop
sbb
cmc
sbb
hlt
jnp
jne
mov
lret
adc
cld
into
mov
fcmove
xor
es
addr16
dec
in
pop
scas
xorb
inc
out
mov
xor
inc
pop
scas
cltd
xchg
scas
dec
cwtl
cltd
mov
push
xor
je
jmp
ds
pop
cmp
or
enter
sbb
xor
lock
cmpsl
mov
mov
outsl
aas
movsb
inc
cmc
out
xchg
inc
push
out
out
das
ret
jbe
ficoml
insb
lock
pop
jecxz
mov
test
arpl
dec
fs
xchg
cwtl
mov
roll
pop
in
ja
ds
push
fisubrl
clc
jbe
mov
xchg
cmp
mov
int3
xor
inc
bound
or
shrl
loope
rcl
lret
lahf
fmull
cli
xor
sbb
mov
clc
int
iret
andl
pusha
mov
dec
rsm
jmp
nop
outsl
inc
mov
mov
movsb
rorb
add
mov
mov
cld
mov
mov
aaa
push
lods
pushf
adc
jge
mov
cltd
xchg
add
sbb
mov
sbb
imulb
arpl
sbb
inc
and
movl
inc
sub
sbb
mov
lock
push
xchg
cmp
push
popa
stc
pop
sub
adc
scas
jae
push
cwtl
aam
push
dec
pop
or
out
jg
xchg
int3
sbb
mov
sub
mov
xchg
and
bound
sub
lahf
xor
out
push
mov
repz
insb
sub
lods
mov
sbb
mov
jae
test
or
cmp
sub
jnp
fiadds
aas
out
sbb
mov
push
enter
movsb
mov
fidivl
push
cwtl
sub
inc
pxor
stos
jecxz
lahf
lahf
jg
add
dec
arpl
cmp
repz
push
or
inc
mov
mov
sub
popa
mov
inc
out
xor
push
sbb
fsubs
aas
sub
jg
pop
pop
lods
fmuls
cmc
mov
adc
aam
mov
iret
jmp
imul
movsb
arpl
cmc
sub
jns
or
and
jbe
and
cmp
sbb
jecxz
pop
fmull
push
fnstcw
dec
jns
lods
pop
dec
andb
cmpsb
cmp
out
popa
dec
scas
push
and
daa
sub
jg
push
sbb
mov
clc
cs
fcomip
sub
xchg
push
sub
movl
sbb
pop
inc
stos
push
inc
dec
fmul
mov
or
cmp
dec
lcall
lcall
sbb
xor
jmp
stos
pop
out
add
push
mov
sbb
xlat
es
shlb
ret
mov
mov
sbb
divl
push
std
shll
jo
ret
in
sub
mov
mov
or
jl
aas
mov
ja
and
sahf
lret
cmp
aad
stc
lods
dec
test
cmp
ficoms
and
push
dec
call
icebp
es
cmp
xor
imul
mov
pop
outsb
test
cmp
jne
insb
sbb
test
pop
cli
adc
or
xor
cmc
xchg
sub
pushf
insb
lods
popa
push
jo
push
push
icebp
insl
dec
or
add
jl
inc
pop
and
loopne
std
rcrl
xchg
out
or
inc
pop
out
aaa
sahf
inc
insb
shll
lret
movsl
mov
dec
out
xchg
orl
pop
sub
popf
lcall
mov
insb
and
ficoml
jno
fucomi
jno
and
xor
ficoml
lods
jno
notb
xchg
mov
push
xchg
dec
int3
or
jecxz
xchg
and
xchg
sti
loopne
in
and
sahf
add
mov
cmp
iret
mov
and
mov
popf
js
inc
popa
sbb
faddl
adc
rolb
jecxz
dec
xchg
adc
dec
mov
fstpl
xlat
push
jg
push
stc
or
ja
add
sub
and
xor
inc
adc
cld
outsl
add
xorl
mov
in
or
nop
mov
cmp
pop
test
aam
test
inc
inc
pop
xchg
bound
fwait
ljmp
cmpsb
mov
call
sti
stos
aad
fildl
ja
or
stos
dec
adc
jns
mov
mov
mov
push
inc
or
cmc
xor
imul
fs
cwtl
enter
xchg
insl
adc
enter
pushf
cmp
mov
sub
roll
scas
cld
inc
push
daa
push
pop
popa
out
inc
cwtl
scas
stos
dec
inc
jp
inc
dec
add
notb
fidivs
leave
cwtl
lods
pop
insb
mov
or
cli
dec
mov
sahf
in
or
add
in
or
dec
pushf
cmp
outsb
mov
adc
push
loop
cld
mov
insl
push
movsb
stos
scas
in
fisubs
lock
and
jno
dec
aas
jnp
in
jmp
jb
mov
push
push
stc
add
repz
call
cmp
cmpsl
sub
imulb
or
jnp
adc
push
xor
xchg
xor
test
rcl
pop
mov
mov
jge
inc
jno
int3
clc
cli
sub
pop
mov
lods
mov
out
mov
push
test
lret
mov
push
mov
adc
stos
imul
lahf
scas
cmpsl
xchg
leave
scas
xrelease
jno
xchg
xchg
repz
mov
mov
mov
cmp
dec
rcrb
lods
push
xlat
mov
push
in
push
jge
adc
mov
push
mov
orl
push
xchg
sub
mov
push
and
jge
mov
ss
sahf
inc
sahf
ja
icebp
mov
push
or
jbe
out
mov
cld
sbb
sbb
xchg
hlt
jle
loopnew
les
sbb
pushf
sbb
mov
out
cmp
bound
sub
mov
cmp
ds
sahf
cs
sbb
push
mov
mov
mov
or
cmp
mov
pop
lahf
out
push
add
or
push
std
inc
pusha
adc
scas
lock
and
divl
hlt
fistpl
stc
cmp
pushf
iret
les
lahf
mov
dec
incl
es
push
pop
jg
pop
mov
icebp
cmp
dec
cmp
sbb
mov
movsb
rcrl
loopne
mov
mov
xor
mov
sub
aam
push
xchg
add
cmp
cwtl
inc
into
fcomps
push
pop
sbb
dec
jp
jge
mov
pop
jbe
pop
sbb
jb
in
push
sbb
ret
lret
xchg
fnsave
jne
xchg
inc
add
jnp
dec
ljmp
cmp
add
test
cli
in
add
out
inc
adc
lret
or
cli
ret
sbb
repnz
in
in
cltd
hlt
cmpsl
pushf
lcall
insb
pop
adc
and
je
repnz
in
mov
xor
fwait
out
imul
mov
out
ficoms
adc
push
push
pop
jmp
pop
push
jmp
dec
idivb
push
popf
mov
dec
inc
mov
push
stos
or
cmp
out
xchg
jbe
ror
add
loopne
inc
and
test
cs
mov
xlat
or
je
dec
out
push
xor
xor
jbe
xchg
jge
mov
xor
cmp
call
jae
jb
push
or
int3
sub
leave
xchg
sub
aaa
sbb
xchg
push
shr
rolb
mov
shrl
xor
repz
lret
mov
divb
daa
call
inc
and
pushf
xchg
adc
popf
stos
popa
push
pop
int3
fldcw
xchg
adc
dec
insb
xchg
mov
clc
jns
rorb
fistpll
mov
ret
mov
insl
jb,pn
adc
xor
ss
cmpsb
mov
iret
xchg
mov
testb
pop
stc
aam
into
mov
inc
add
movsl
fisubl
jae
dec
test
ja
mov
pop
stc
insl
sub
nop
mov
pusha
sub
aad
sbb
push
add
pop
ds
cmp
das
sub
in
push
movsl
loope
lock
add
das
stc
cmp
pop
aaa
xor
mov
jecxz
andl
in
and
dec
fadds
xor
and
data16
xchg
or
movsl
call
push
dec
pop
loopne
mov
leave
loopne
lods
add
jae
jno
xchg
dec
mov
int
les
xor
fnstsw
cmpsl
jb
fcompl
mov
in
mov
jne
es
sbb
and
push
cmp
mov
addr16
cld
hlt
xor
cmp
js
cld
fwait
adc
adc
cld
push
and
adc
xchg
pop
push
fadd
and
popf
cwtl
fidivrs
int
jnp
stos
pusha
sbb
dec
sarl
repnz
sub
cmp
pop
sbb
sbb
mov
pop
dec
mov
fstpl
ret
fdecstp
xchg
pop
fisubs
cmpsb
popf
and
sahf
adc
shll
imul
out
nop
jbe
mov
je
pusha
jne
xor
cmc
xchg
mov
jp
negl
xchg
lfs
sub
outsl
push
sub
out
and
js
or
arpl
jae
or
fsubs
mov
cwtl
jecxz
repz
and
js
or
arpl
jae
or
fsubs
mov
cwtl
jecxz
repz
and
js
or
arpl
jae
or
fsubs
mov
cwtl
jecxz
icebp
mov
and
js
or
jecxz
repz
jb
call
pop
addr16
or
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
push
xlat
cs
notl
sub
mov
stc
sahf
pop
lods
addr16
ja
push
sahf
push
out
aaa
aaa
sbb
push
xlat
push
out
testl
jle
test
push
lret
ja
fists
out
daa
aaa
pop
movl
notl
inc
xchg
jbe
imul
loope
xchg
dec
popf
inc
xchg
inc
jle
push
cmpsl
bound
js
movsb
xchg
addr16
cmp
mov
out
icebp
repz
xchg
lea
jp
xchg
mov
cmp
push
cwtl
mov
jb
mov
jae
adc
pop
addr16
pop
pop
jl
data16
inc
popa
push
popa
inc
mov
clc
fwait
sub
sti
fimuls
ret
mov
imul
push
mov
mov
imull
pop
loope
ja
dec
cli
push
or
js
imulb
xchg
mov
pop
arpl
xlat
out
sahf
push
shll
push
enter
sub
popa
push
push
adc
inc
push
daa
dec
into
push
xlat
cs
negl
inc
xchg
outsb
cmpsl
addr16
inc
xchg
cmpsl
ja
pop
pop
out
daa
out
jge
jnp
dec
cmpsb
pop
mov
shlb
insb
ret
cli
aaa
sahf
dec
fdivl
pop
mov
push
fwait
push
push
stos
push
mov
cmp
xor
add
cmp
jmp
lret
and
sahf
inc
arpl
sub
dec
cmpb
ss
xchg
outsb
cmpsl
jle
mov
push
scas
addr16
pop
out
daa
aaa
push
push
xlat
cs
testl
jle
mov
push
scas
addr16
pop
out
daa
aaa
push
ja
push
xor
jb
shl
es
mov
adc
outsb
jl
pushf
push
aam
dec
jnp
div
pop
xchg
insb
jbe
push
cvtdq2ps
push
push
push
inc
push
cmpl
lods
dec
ss
or
cmc
cs
mov
js
mov
scas
mov
shrb
jae
cmpsb
mov
enter
adc
sbb
movsl
mov
fwait
mov
mov
in
cmp
ljmp
dec
xchg
orb
loope
addr16
pop
ja
orb
mov
sbb
aas
sub
mov
adc
mov
and
pop
fistpll
cmp
repnz
ljmp
dec
jp
pop
jbe
xor
imul
in
mov
push
sub
sahf
xor
outsl
adc
repnz
mov
pop
call
xchg
cmpsb
jle
pusha
cmp
ret
in
shlb
ja
imul
fdivs
push
add
mov
pop
sar
shrb
lods
xchg
adc
push
repz
notb
and
xchg
sub
xor
test
fimull
ret
add
mov
in
ficoms
inc
xchg
xor
loop
cwtl
and
std
call
xchg
inc
jns
shll
nop
lahf
xor
cmp
test
xchg
or
int
xor
cmpsb
sub
inc
xchg
aaa
xchg
icebp
mov
xchg
cltd
dec
decl
lret
lahf
movsb
outsb
pop
adc
sub
cs
mov
cmp
mov
adc
cld
jecxz
ficompl
stos
mov
sub
push
cmp
xchg
pusha
jne
sbb
into
inc
rcr
es
inc
fucomp
sbb
outsb
adc
cwtl
cmp
inc
mov
mov
scas
mull
shlb
or
fisubrs
pop
xor
push
addb
adc
scas
jae
js
pop
popa
inc
cs
or
es
mov
push
xchg
mov
add
cli
and
inc
pop
test
in
and
sahf
es
xchg
repz
outsl
test
int
rclb
stc
fstpt
jp
jo
add
cmp
sbb
mov
xor
in
mov
jae
out
mov
add
ss
jbe
cmp
repz
mov
mov
stc
loop
push
cmp
std
iret
nop
shlb
sbb
and
and
lret
pop
hlt
cltd
inc
mov
mov
sbb
jp
cltd
dec
jp
sub
lds
mov
loope
and
push
pop
lods
dec
or
out
loope
fistps
jb
add
js
fnsave
push
scas
cs
push
inc
pushf
imul
fdivr
imul
popl
popa
iret
xor
fs
mov
and
add
jne
xchg
sub
add
push
fs
insl
cmpsl
add
js
repz
xor
repnz
pop
adc
stc
iret
dec
xor
call
or
cmp
or
mov
adc
outsb
repnz
outsl
jg
jbe
imul
mov
jge
xor
sub
nop
inc
mov
scas
push
cld
mov
ss
rol
sarb
pusha
push
pop
dec
fs
xchg
add
dec
pop
leave
imul
pop
pop
adc
in
mov
and
xor
aaa
ficomps
jno
pop
add
mov
or
sub
add
fdivp
and
test
pusha
ret
jge
jbe
adc
add
fistps
das
pop
into
notb
adc
add
test
dec
test
sub
fmul
ja
stos
fnsave
jmp
cmp
leave
xchg
pusha
subb
test
or
dec
shrl
js
sarl
dec
adc
comiss
test
pop
inc
scas
or
xlat
es
imul
push
rorl
jg
sub
dec
pushf
mov
xor
sbbb
or
dec
lret
loopne
aaa
stos
adc
addr16
arpl
loop
in
incl
and
pop
or
push
pop
in
push
stos
mov
sub
pop
and
mov
fdiv
ljmp
xchg
outsb
lock
mov
jb
sub
sbb
mov
pop
dec
cmpsb
or
fwait
pop
pop
cmpsl
cmp
dec
cmp
jns
xlat
mov
ret
jmp
push
in
out
imul
jb
jnp
xlat
lahf
push
push
xchg
imul
add
fstps
add
or
mov
lock
mov
pop
pop
lods
scas
cmp
mov
pop
leave
insb
sub
cmpsl
int
fs
cmp
outsb
in
mov
bound
cmp
pop
cmp
insb
shlb
repz
cld
dec
repz
inc
inc
jmp
sbb
cwtl
mov
in
push
inc
push
cmc
inc
iret
or
adc
cld
mov
lods
sbb
and
in
lods
mov
das
add
push
mov
js
lahf
push
pop
mov
cwtl
jno
or
daa
jecxz,pn
in
adc
jns
and
add
stos
out
push
mov
scas
stc
sub
adc
sti
add
lahf
movsb
sbb
lret
jno
sbb
xchg
and
imul
mov
add
lcall
out
mov
and
shll
pop
sub
sub
adc
jp
icebp
das
push
repz
pop
jg
ss
pop
sbb
xlat
movsl
mov
daa
outsb
sbb
out
cli
jb
mov
xchg
cli
rcrl
lcall
pop
xchg
arpl
clc
mov
xchg
jno
lret
mov
cmpb
fists
sti
cmp
sarl
mov
mov
subb
loope
das
ss
sub
xorb
ja
and
hlt
mov
add
add
xchg
cmc
mov
mov
mov
loop
push
or
mov
jb
push
iret
cmp
inc
outsl
aaa
mov
mov
mov
je
mov
adc
pop
sbb
and
mov
js
in
icebp
loop
enter
xor
ljmp
jecxz
mov
jns
sub
ret
sbb
cmp
adcb
push
jns
pop
cld
pop
sbb
mov
lahf
mov
inc
xor
push
jno
jns
fidivrs
sbb
popf
and
mov
int3
push
xchg
pop
rolb
int3
inc
je
dec
ret
and
jns
cmp
pop
jo
jmp
fmull
xchg
ss
dec
mov
mov
xchg
xor
dec
dec
or
and
xchg
fsubs
jl
in
add
fcompl
sub
push
ret
and
inc
ds
xchg
orb
mov
mov
pop
xchg
repnz
push
sti
stc
pop
leave
into
jge
sub
mov
mov
stos
sbb
inc
dec
popa
popf
xor
sbb
xor
cmp
sbb
insb
loop
shl
push
divl
fs
out
movsl
cmp
mov
sub
jecxz
dec
js
xlat
test
dec
ret
pop
js
pop
or
stc
sbb
sbb
into
mov
jbe
jne
ret
imul
sub
sub
push
sub
lahf
xchg
sub
scas
je
dec
pop
rcrl
rol
mov
into
or
mov
and
push
jp
jp
rcll
lods
in
popa
mov
out
daa
push
sub
outsb
stos
inc
push
adc
xor
jecxz
adc
stc
addl
or
ret
adc
lea
std
lcall
rolb
and
add
push
out
out
xchg
out
jecxz
rcl
jne
push
lcall
jne
mov
push
cltd
ss
mov
sub
ret
mov
shll
lods
outsl
dec
inc
rorl
test
or
mov
sbb
aaa
mov
icebp
cltd
push
add
sti
stos
pop
xor
lods
std
jl
jg
push
cmovle
sti
fs
outsb
cmp
xchg
push
pop
fs
jbe
push
mov
popa
and
lret
xor
cmp
insb
cmp
jno
dec
adc
mov
ss
dec
or
shll
cli
int3
gs
jnp
shll
std
sbb
xchg
jl
shrl
ficompl
mov
ss
dec
cmpsl
mov
push
sbb
test
push
jle
sub
fists
or
xchg
xor
fiaddl
push
cmp
or
stc
xchg
and
sub
out
mov
add
xchg
adc
icebp
das
pop
adcb
inc
mov
cs
roll
aad
shrb
dec
jnp
addb
dec
aas
pop
jb
jno
pushf
cmp
xor
fldcw
icebp
int3
add
cltd
loopne
xchg
xchg
sbb
fisttpll
pop
aad
sub
adc
aad
xchg
addr16
pushf
push
cli
mov
out
test
pop
or
insb
cmp
addr16
xchg
fs
addl
sbb
pop
shll
mov
pusha
inc
insl
mov
lods
mov
subl
call
push
push
pop
cmp
test
pop
ret
add
stc
insb
aad
int3
stc
xchg
pop
xchg
repz
into
mov
add
cmp
mov
xor
cmpsl
je
popa
sbb
pop
aad
cltd
or
sbb
push
lds
iret
loop
and
and
je
aaa
xchg
push
xchg
faddl
mov
out
and
jns
and
pop
cmp
sub
mov
xor
pop
pop
mov
rcrb
popa
mov
rolb
dec
xor
jnp
scas
mov
outsl
sbb
out
in
fldcw
dec
jns
bnd
enter
hlt
dec
lods
mov
push
fisttps
xchg
pop
mov
imul
dec
inc
subl
cltd
filds
bound
or
mov
pop
push
andl
xchg
sbb
daa
sbb
pop
ss
out
or
cmpl
jl
je
adc
mov
insl
add
jbe
bound
add
dec
xor
mov
mov
mov
shll
ljmp
add
addr16
push
mov
in
movsb
pop
mov
mov
jmp
jb
ja
mov
nop
leave
jo
adcl
jb
mov
mov
sbb
test
movsb
cmpsl
xor
pushf
push
mov
xor
les
fisubs
sub
mov
push
icebp
mov
outsb
xchg
jns
xor
idivb
div
mov
mov
movsb
inc
mov
jo
sti
mov
fwait
inc
xchg
jnp
cmp
pop
fucomip
mov
cmp
leave
pushf
outsb
ror
pop
mov
push
push
pop
fistpl
cli
test
ret
xor
mulb
jle
lret
adc
mov
fucomi
push
or
jge
push
sub
adc
mov
clc
shlb
jl
test
inc
sbb
push
int
adc
popf
jo
leave
mov
adcl
sub
jbe
out
sub
push
les
mov
out
fisttps
sbb
loope
jno
push
adc
inc
imul
cmp
lock
orl
jo
push
push
popa
loope
bound
loop
jmp
sbb
xchg
ljmp
popa
ss
daa
mov
adc
outsb
cmp
loope
or
cld
jp
sub
sarb
adc
adc
xchg
mov
mov
fnstcw
or
sbb
arpl
push
and
adcl
incb
inc
jo
sub
fsts
sub
jg
sbb
sbb
sub
data16
outsl
dec
int3
loope
shll
movsl
jge
xlat
mov
and
in
scas
out
dec
sub
inc
bound
sub
lea
adc
adc
mov
pop
jle
cmp
incl
das
mov
mov
xchg
jmp
dec
xor
lods
dec
xor
mov
cli
jecxz
sar
jle
push
pusha
fnstsw
cmc
mov
scas
fistl
hlt
rolb
xor
outsl
inc
pop
add
lcall
gs
popf
push
sbb
js
xchg
pop
pop
sti
mov
bound
or
fcomp
ret
dec
in
cmpl
imul
int
lea
fidivrs
aam
ja
or
nop
fidivl
pop
dec
add
cmp
in
dec
push
sbb
stos
fldt
decl
push
pushf
test
sti
cmp
ja
sahf
pop
add
pusha
mov
xchg
xchg
xor
lods
sbb
or
insl
sar
adcb
sbbl
jl
aam
in
push
jbe
das
je
pop
cmp
out
adc
push
in
jb
in
das
repnz
fists
push
dec
push
add
enter
mull
in
clc
add
popf
mov
push
js
push
sbb
in
cmc
movsl
xor
xchg
incb
out
xchg
aad
jae
mov
push
lcall
cmp
lahf
lret
xchg
pop
fdivrs
jnp
pop
mov
push
adc
lods
dec
jnp
movsb
fisubl
and
into
lods
jl
jno
inc
dec
sahf
mov
or
incb
sahf
jmp
adc
fidivl
or
sub
dec
push
add
sahf
cmpsl
adc
or
xor
mov
xchg
cmp
jmp
movsl
icebp
mov
or
hlt
jb
cld
es
and
and
push
movsl
imul
int
mov
lds
aas
in
in
stos
cmp
inc
add
pop
jp
lret
imul
add
stos
lcall
fadds
iret
mov
loope
jb
nop
or
ds
mov
ss
sbb
inc
dec
or
loopne
movsl
xor
push
xor
pushf
test
mov
aaa
and
clc
jmp
pop
cmpsb
ja
test
pop
inc
arpl
pop
clc
mov
movsl
cmpsb
cli
mov
mov
test
or
js
mov
test
test
sub
or
mov
pop
pop
stos
xor
push
add
or
push
sbb
imull
jp
outsl
pop
xchg
fdivl
and
js
mov
or
cmpsb
idivl
mov
rorl
push
xchg
mov
stc
into
mulb
test
xchg
xlat
adc
cltd
and
sbb
push
addb
fimull
divb
popl
jecxz
sbb
ljmp
int3
aas
xor
shrl
ret
mov
push
push
xor
fidivs
xchg
xchg
loope
sbb
rorl
scas
sbb
sbb
push
sar
adc
daa
cmp
mov
push
dec
xchg
into
xor
sub
mov
lods
leave
pop
push
inc
add
and
adc
pop
push
lods
sti
push
ficompl
inc
out
movsb
pop
rcrb
loope
mov
push
cmc
cmp
gs
aam
loope
push
int3
mov
mov
lds
cmp
inc
ret
scas
pop
out
lea
sbbl
adc
gs
ja
out
lods
andb
dec
enter
out
std
xor
mov
xor
mov
and
adc
ja
xor
dec
insl
test
and
popf
mov
fisttps
bound
jg
push
in
in
sti
xor
push
insl
adc
sub
aaa
addb
sub
and
cmpsl
inc
mov
mov
cmpsl
daa
pop
cld
mov
pop
cmp
out
mov
std
push
cmp
pop
mov
mov
fidivs
pop
mov
mov
or
in
stc
pop
in
jl
xchg
or
pop
stos
jcxz
or
xor
push
outsl
xlat
cmp
add
dec
cld
pop
je
inc
scas
leave
int3
and
push
sahf
mov
out
call
aas
xlat
pushf
dec
mov
shlb
std
fdivp
std
pop
mov
pusha
mov
rcrb
daa
lahf
inc
inc
sub
mov
outsb
stos
out
dec
xchg
mov
test
and
aam
test
not
test
jnp
pop
pop
push
inc
xchg
fdivrs
iret
shll
loop
xchg
cli
clc
int3
ret
push
loopne,pt
pop
in
mov
pop
rclb
outsl
gs
xor
xor
leave
inc
int3
xor
sahf
push
fsubl
sub
pop
pop
inc
jb
in
cmpsb
jne
sti
inc
push
jae
pop
icebp
outsb
bound
adcb
in
into
repz
cmpsl
or
jne
popa
lahf
fistpll
sub
jmp
mov
loope
fdivrs
lods
xor
and
cmp
cmp
and
jl
add
je
pusha
sub
shrb
pop
sub
or
sahf
add
es
mov
fnstcw
pop
movsl
aam
mov
adc
fiadds
and
stos
imul
mov
loopne
jae
sbb
xchg
mov
fdivs
push
loop
loop
or
clc
shl
push
jb
or
das
fld
inc
xor
dec
or
stc
repz
mov
adc
push
imul
mov
xor
dec
cmp
int
mov
or
mov
into
jp
mov
or
lds
idivb
fpatan
sbb
aam
cmp
inc
shlb
cmp
pop
cmp
cmp
hlt
fisubrl
jne
xchg
clc
xchg
hlt
pushf
sbbb
lret
pop
aad
stos
push
jl
loop
or
arpl
mov
mov
in
lea
lds
lods
idivb
stos
dec
cli
inc
dec
adcb
scas
lods
fstl
test
ss
sbb
adc
cmc
subb
mov
sub
roll
adcb
mov
and
pop
test
add
adcb
cmpl
loopne
add
js
mov
adc
into
inc
rcrb
jle
enter
cs
in
sub
les
inc
sub
nop
out
jmp
lock
cmp
jb
sub
popa
out
add
xor
add
xor
jp
data16
push
push
insb
mov
stc
fcmovne
jmp
jnp
xchg
sub
in
lock
idivb
jmp
mov
pop
out
outsl
and
pop
pop
mov
or
sub
xor
sbb
push
icebp
movsb
in
xchg
fidivl
or
jnp
clc
xor
mov
divl
loopne
loopne
pop
in
js
add
fs
jle
xor
les
mov
leave
in
mov
cmp
mov
sbb
cltd
mov
jge
cmp
adc
ljmp
das
inc
jnp
movsl
out
lock
add
popf
packssdw
test
enter
jmp
and
sbb
repnz
jo
jb,pn
cmp
loop
call
fs
cmp
mov
xchg
lcall
mov
divl
ja
pop
add
and
mov
lret
jo
jmpw
or
stos
sbb
jmp
scas
lds
decb
js
sbb
cmp
mov
mov
inc
push
xchg
dec
into
insl
push
popa
xor
scas
jmp
sbb
test
sbb
add
les
mov
or
stos
out
push
add
xchg
inc
xor
sub
imul
pop
sbb
je
mov
sub
icebp
iret
pushf
sbb
xor
and
pop
movb
rcr
adc
ficoml
jnp
iret
ss
dec
add
inc
fsubrl
sub
mov
inc
lock
aam
mov
call
push
xchg
sti
cld
xchg
imul
in
shrb
js
fcoml
and
out
xlat
jae
fcoml
stc
std
outsb
cmp
mov
shrb
push
fsubrl
push
pop
push
push
cmp
cmp
xchg
imul
pop
out
dec
jae
in
dec
or
imul
adc
imul
jo
jge
cld
dec
scas
popa
xor
dec
jae
mov
into
in
jne
pop
add
aas
pop
dec
mov
jmp
and
xchg
bound
je
out
jle
pop
rol
mov
sub
mov
dec
push
mov
adc
mov
addl
cwtl
push
loope
sahf
pop
ud0
and
dec
jp
mov
cmp
push
pushf
fstpl
in
aam
aad
fs
loopne
or
cmp
in
mov
adc
shrl
or
inc
jg
pop
jbe
or
pop
je
sarb
shl
pop
cmpsl
jge
sub
xchg
lods
loopne
xor
and
jmp
out
mov
lds
insl
repz
rcrb
bnd
jp
sahf
sarl
lret
lcall
add
xlat
push
out
testl
jle
mov
push
scas
addr16
pop
out
daa
aaa
push
push
xlat
cs
testl
jle
mov
push
scas
addr16
pop
out
daa
aaa
push
push
xlat
cs
testl
jle
mov
push
stos
addr16
pop
out
daa
iret
aaa
cmp
sub
sbb
testl
ja
inc
popa
std
add
mov
call
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
repz
sbb
test
js
mov
cwtl
push
test
mov
pop
call
scas
sbb
dec
out
aam
push
cs
jle
or
pop
test
clc
fs
out
je
xacquire
pusha
ds
inc
sti
js
outsl
lret
pop
lahf
xor
decl
mov
pop
stc
insl
jne
stos
rcr
je
mov
adc
clc
movsl
xor
push
sbb
stc
or
dec
adc
lods
ror
loope
in
sti
leave
lcall
fucomip
ret
jne
or
push
jbe
lahf
pusha
stos
into
div
jle
rcrl
sub
adc
sti
enter
cmp
cmp
adc
fists
jge
push
popf
icebp
inc
repz
insb
daa
dec
add
lock
jnp
mov
lcall
mov
outsl
or
stc
cmp
cmp
scas
movsl
popa
cmp
add
push
fistpl
aaa
test
mov
lock
push
push
mov
sbb
pop
jl
or
xor
dec
stos
pop
fidivs
mov
lock
in
and
sub
fisubrl
push
nop
cmp
aaa
int
scas
sbb
dec
fsubrl
pop
cmpsl
add
dec
es
sbb
mov
mov
into
jnp
fisttps
mov
xchg
int3
pop
popf
pop
out
js
pop
mov
push
cs
push
test
mov
pop
call
scas
sbb
dec
out
pop
fisubrs
js
mov
cwtl
push
test
mov
pop
call
push
ss
adc
roll
xor
lahf
lock
rcll
ljmp
add
xchg
int
shll
sub
sbb
cld
dec
test
add
aas
mov
inc
dec
ja
jnp
push
xor
stc
sub
in
adc
fdivl
or
jns
xchg
jmp
jecxz
jg,pn
mov
sbbl
loope
mov
push
jnp
ret
or
mov
mov
mov
pop
inc
pop
testb
inc
sub
mov
lods
add
fcompl
stos
jb
repz
inc
adcb
xchg
dec
stos
or
cli
push
lcall
ret
mov
ss
dec
sbb
test
jno
jnp
lret
xor
mov
push
mov
push
out
rcrb
jl
sbb
lahf
cmp
xchg
lret
adc
push
mov
ficoms
shlb
arpl
les
adc
mov
inc
shrb
push
mov
xorb
pop
pop
or
sub
int
daa
je
jmp
inc
lds
adc
fldt
mov
into
in
bnd
sbb
pushf
daa
adc
aam
lahf
xor
out
cmc
ficoml
adc
fadds
sti
pop
mov
mov
pop
xlat
cmp
mov
sub
mov
pop
mov
loopne
ret
sti
aas
lea
fidivl
dec
inc
lahf
push
or
jmp
mov
outsb
mov
pop
cmp
xchg
inc
push
pop
push
mov
fisubl
lock
shll
lds
mov
data16
push
pop
das
pop
out
lds
and
push
jne
mov
xchg
mov
fcomip
push
sbb
testb
outsl
daa
push
loope
or
mov
stos
or
adc
push
pop
inc
pop
pop
out
rcrl
popa
cmpsl
pop
rcrb
push
outsb
cmp
jecxz
cmpsl
and
mov
mov
frstor
repnz
hlt
pop
cmpsl
pop
lcall
xor
repz
or
lods
xchg
leave
mov
arpl
xchg
addl
mov
shll
sub
fcompl
xor
inc
xor
mov
shrl
inc
lock
inc
or
mov
jb
enter
out
outsl
and
shll
test
insb
mov
cld
mov
inc
popf
subb
mov
in
jle
and
cwtl
les
rorb
cmp
pop
push
test
ds
call
mov
ds
fst
cmpsl
add
arpl
adc
les
jb
lret
cli
xchg
lret
je
and
jg
stos
jecxz
mov
xchg
scas
mov
nop
jb
stc
adc
mov
or
xchg
mov
shlb
in
jbe
hlt
xchg
jmp
or
pop
enter
sbb
shrl
aas
push
add
fcomp
jecxz
das
orl
sbb
sub
imul
jge
pop
push
pop
ret
iret
das
mov
mov
sub
add
push
push
pop
mov
mov
push
int3
mov
popf
xchg
jae
inc
outsl
jae
lods
push
inc
push
test
sub
movsl
cs
jae
scas
pop
in
adc
push
cmpsl
adcb
aas
push
xchg
sar
adc
xchg
popa
add
mov
xor
imul
test
cltd
fwait
pop
push
cmp
cs
cmp
loopne
mov
outsl
pop
inc
pop
xor
daa
enter
fisttpll
fs
jmp
das
incb
sbb
jge
lcall
loopne
int3
sub
andl
ja
cld
lods
repnz
icebp
test
sti
bound
xchg
scas
xor
and
push
orps
sub
ja
or
shlb
int
dec
andb
loop
sbb
daa
sbb
test
lds
jmp
sar
dec
insl
and
push
adc
adc
mov
out
in
xchg
sti
js
and
aaa
arpl
mov
pop
dec
movsb
inc
out
shl
mov
fimull
jecxz
rorb
dec
or
and
cmp
mov
rcrb
adc
pop
iret
inc
les
push
dec
or
insl
lock
pop
adc
jecxz
mov
es
cmp
adc
out
inc
adcb
mov
and
and
scas
jns
movsb
jne
cltd
sbb
divb
shll
bound
fpatan
lahf
mov
cwtl
dec
aaa
or
in
jnp
or
add
out
lock
push
testl
adc
leave
subl
pushf
test
int3
xor
adc
sarb
mov
push
outsb
scas
fmull
insb
cmp
adc
inc
lods
cltd
cmpsb
mov
and
jmp
jle
in
mov
inc
mov
outsl
insl
mov
adc
rol
out
dec
jmp
nop
mov
pop
test
xor
scas
or
push
leave
adc
sbb
sub
xchg
pop
into
imull
pop
pop
faddp
nop
sub
jo
pop
mov
push
dec
pop
add
jno
push
test
sar
js
stos
sub
xor
test
insl
into
insl
enter
and
in
insl
or
mov
mov
jb
cld
test
int
mov
push
loope
push
pop
shr
inc
arpl
outsl
dec
cld
scas
inc
lods
dec
pop
xor
fbstp
adc
pop
out
insb
outsl
or
mov
cld
jmp
mov
pop
xor
lods
xor
lret
loop
lret
jae
lock
push
jne
pop
sarl
xlat
rcll
sbb
push
insl
negl
xchg
sbb
pop
lahf
sbb
hlt
lea
lcall
lods
stos
or
jne
je
repnz
pop
call
shll
test
push
and
cmp
xchg
pop
sub
lret
add
enter
pop
cmp
andb
outsl
mov
test
into
sbb
mov
addr16
jmp
popf
rcr
mov
lret
loop
ret
jmp
inc
outsb
jb
jp
leave
and
or
imul
loopne
call
jge
in
sarb
mov
push
in
sbb
ret
adc
lret
jo
inc
push
pop
jp
adcb
aam
stc
lock
test
ja
jb
mov
jae
jb
fcoml
mov
jno
and
and
cmp
and
lahf
adc
fildll
es
push
cltd
push
mov
sbb
sub
test
add
push
int
out
out
enter
pop
xchg
bound
push
pop
aaa
xor
mov
and
ljmp
pop
loope
pop
or
add
xchg
imul
xchg
notb
lea
dec
jmp
mov
xchg
outsb
loopne
push
loope
dec
mov
pop
test
pop
cmp
dec
add
les
xor
int3
xor
add
je
jecxz
shll
and
loope
mov
jg
cld
outsb
push
repz
mov
mov
lret
ss
jl
push
loopne
lods
and
in
mov
lods
roll
push
mov
and
pop
push
adc
jg
xchg
into
fildll
outsb
bound
jb
and
stos
out
sbb
idivl
fstp
iret
repz
jecxz
sub
mov
mov
enter
pop
pop
mov
in
in
mov
jns
addb
inc
mov
xor
ret
fidivrs
movsl
out
out
movsl
cmp
cmpsb
clc
xchg
pusha
in
into
sbb
push
push
loope
aad
xchg
adc
out
data16
dec
inc
mov
jbe
enter
jnp
in
dec
orb
rorl
in
or
jg
add
cmpsb
push
jno
ret
cmp
shll
add
push
mov
inc
insb
stos
adc
mov
jo
push
sub
mov
jl
movsl
js
xor
jg
lret
pop
dec
or
scas
mov
xor
and
int
int
inc
hlt
cmp
xchg
loopne
sbb
stc
cmpl
jb
and
mov
mov
mov
lahf
xor
scas
cli
jns
imul
test
in
pmullw
and
test
xor
mov
bnd
push
xchg
out
inc
cmpsb
addr16
push
pop
lods
mov
push
fwait
std
loop
push
vpmaddwd
jo
sub
xlat
mov
loope
pop
pop
inc
jmp
xor
and
mov
shlb
xor
inc
mov
dec
in
push
pusha
data16
arpl
pop
and
mov
push
xchg
pop
jmp
xlat
aam
pop
cmp
push
inc
mov
push
imulb
jp
xor
aad
rolb
cmp
into
dec
rol
lds
cmp
push
les
mov
addr16
dec
sbb
loope
leave
incb
sbb
lahf
std
stos
out
cmpsb
dec
xlat
xlat
inc
aam
out
xchg
lret
mov
mov
sbb
fs
xor
clc
mov
or
repnz
icebp
adc
sti
mov
jmp
mov
lahf
adcl
add
cmpsb
adc
and
dec
ss
data16
in
aaa
adc
ffree
mov
inc
aam
mov
cli
pop
fmull
hlt
shr
sub
push
add
ds
push
adc
enter
push
ss
inc
and
dec
lods
jns
cld
and
pop
imul
in
inc
fwait
jle
pop
mov
ja
icebp
out
add
outsl
mov
scas
cld
jno
xor
inc
inc
clc
nop
mov
shll
jecxz
popf
jmp
movsb
mov
stos
stos
jle
loope
sub
iret
mov
mov
mov
scas
fnstsw
cltd
push
cmp
sub
inc
ljmp
lea
push
insl
cmp
inc
xchg
mov
push
xor
addr16
pop
stc
shll
inc
rcr
cmc
repnz
lods
rorl
hlt
push
je
xchg
cmp
mov
in
test
mov
adc
sbb
mov
fcoml
enter
fldcw
jb
xor
std
xchg
ret
sub
js
stos
fsub
scas
inc
inc
mov
cmp
cltd
mov
pusha
fisttpl
or
stos
jmp
out
lods
out
fsts
rcrl
dec
add
xor
es
mov
ds
shrb
int
roll
sub
xor
outsl
cld
sub
mov
pushf
sub
mov
repnz
fs
sub
or
cwtl
sahf
repnz
jno
adcb
into
xor
sub
sbb
out
bound
jge
add
pop
dec
pop
cmp
imul
dec
xchg
cwtl
dec
lds
ss
lds
test
push
lock
xor
and
addb
in
cmp
mov
outsb
mov
cmp
sub
sbb
cmc
xchg
cmp
mov
adc
mov
addr16
jb
mov
clc
push
and
mov
es
icebp
fildll
xchg
lcall
mov
in
rorb
pop
xchg
stos
adc
add
inc
push
addr16
mov
cmp
xchg
or
inc
roll
pop
cmp
pop
and
pushf
jnp
js
imul
pop
mov
fisubs
xor
jo
or
movb
or
cmpsl
inc
bound
jnp
adc
sub
cwtl
mov
subl
das
mov
inc
sub
mov
adc
jmp
mov
orb
repz
push
cmp
xchg
daa
pop
mov
cmp
cld
mov
add
bound
js
mov
jle
lds
pop
mov
xchg
ret
jmp
jge
or
popa
pop
dec
pop
stos
push
add
jl
xor
push
dec
pop
xlat
aad
jbe
aas
jmp
out
xor
and
and
push
cmc
iret
mov
aam
mov
jo
hlt
mov
cld
test
cli
sub
jns
in
add
and
mov
insb
call
mov
sub
pop
in
mov
or
push
in
repz
cmp
mov
outsb
out
push
inc
mov
lods
jbe
insb
fs
test
mov
pop
jecxz
addr16
insl
pop
sbb
iret
fsub
insb
scas
mov
data16
movsl
xchg
icebp
faddp
fstps
arpl
jecxz
push
hlt
ret
push
cmpsb
out
sub
les
dec
sbb
mov
pop
mov
push
leave
cmp
push
repnz
xchg
imul
fnstsw
idivl
dec
sbbl
sbb
dec
dec
pop
pushf
pop
sbb
push
xor
imul
psraw
out
push
mov
sub
test
push
lds
and
mov
xchg
pop
flds
cmp
add
dec
cs
fistps
push
and
imul
sub
jb
fisttpll
aaa
mov
ljmp
mov
add
xor
pushf
aam
fisttpl
out
in
inc
or
push
movb
jo
pop
es
icebp
xor
je
pop
or
xchg
adc
gs
addr16
repnz
loop
ret
push
or
jns
dec
adc
cmp
sbb
pop
fidivs
ret
inc
mov
sarb
adc
pop
insl
mov
inc
divb
and
in
inc
jle
sbb
inc
xchg
fstpl
int
idivb
arpl
xchg
add
jnp
inc
push
xchg
es
sub
cmp
orb
xor
les
adc
pop
ljmp
push
pop
movsb
fstpt
ror
repz
jbe
lods
rorb
lcall
mov
dec
or
mov
push
push
cmp
push
mov
xchg
call
cmp
fs
rcrb
mov
lods
push
mov
addr16
mov
insl
movsl
out
cmp
in
mov
push
jmp
cld
lds
movl
sbb
outsl
xchg
vmwrite
rolb
inc
and
fiaddl
nop
test
stos
scas
mov
push
std
adc
add
mov
cli
testl
inc
xchg
and
dec
push
jae
mov
add
xchg
in
sbb
inc
mov
xor
xchg
mov
or
mov
add
movsl
xor
jle
jle
cmp
ja
add
or
push
ror
push
pop
aad
cmp
enter
or
mov
cwtl
les
xchg
aad
mov
int
mov
add
out
push
or
ss
pop
mov
or
into
mov
incl
mov
push
loope
push
arpl
out
jp
ret
js
ljmp
pop
add
lock
lods
and
push
inc
cli
fldl
push
outsl
insl
test
ja
dec
mov
sbb
mov
imul
shrl
dec
fnsave
into
mov
mov
aam
pop
dec
nop
push
mov
int
fs
sbb
mov
aaa
push
in
inc
pusha
scas
and
xlat
mov
inc
jl
mov
add
jl
insl
dec
adc
adc
rcrl
sbb
inc
stos
sub
lcall
hlt
jae
inc
flds
adc
shl
push
jnp
dec
lods
arpl
sbb
and
mov
cmp
xor
or
in
fisubrs
dec
fimuls
xor
std
pop
sbb
xlat
nop
xchg
xor
and
xchg
notb
leave
test
popf
and
cli
jns
xor
mov
sub
adc
xchg
dec
mov
andps
lcall
sbb
xor
rcll
xor
in
adc
sbb
loopne
inc
xchg
and
fcmovu
es
cmc
jmp
adc
mov
out
mov
aaa
fsts
daa
cmp
bound
push
loopne
stos
mov
les
pusha
outsb
mov
xchg
scas
mov
push
sub
dec
add
leave
cmp
popa
sbb
mov
sahf
jp
push
scas
inc
shr
pop
inc
pop
cmp
xor
jnp
out
int3
fildl
mov
sarb
movsl
push
lods
out
mov
clc
repz
dec
out
adc
in
jmp
imul
pop
dec
adc
scas
pusha
mov
add
xor
nop
pop
cmp
lret
pop
lcall
or
lds
dec
inc
cli
cmp
jmp
and
xchg
adc
fldenv
xchg
push
dec
jns
adc
fiadds
ljmp
andb
nop
lea
push
push
aas
sbb
and
bound
pusha
pop
sarb
mov
mov
das
data16
jmp
roll
scas
into
pushf
out
hlt
into
test
xchg
incb
adc
pop
hlt
popf
add
mov
cltd
pop
je
dec
xor
imul
or
xchg
lret
mov
mov
orb
lahf
pop
sbb
push
popl
ljmp
lret
inc
push
cmc
mov
mov
dec
test
adc
xchg
clc
aas
je
sub
mov
xchg
dec
daa
fwait
icebp
pushf
inc
in
pop
sbb
cmp
icebp
add
push
sub
pop
cmp
sbb
xchg
mov
fwait
push
sbb
arpl
ja
mov
ret
xor
lcall
adc
ret
cmpsl
ret
lods
movsl
mov
mov
inc
mov
outsl
movsb
push
int3
loope
or
stos
jl
je
push
into
jns
cmpsl
or
lret
push
ret
push
in
je
cli
int3
das
add
lea
adc
adc
mov
mov
pop
mov
das
inc
adc
test
sbb
daa
jl
push
mov
aas
lea
bound
daa
mov
push
xchg
xor
sbbl
movsl
xlat
cmc
sub
push
mov
mov
scas
xor
sbb
and
adc
ret
xor
stos
cmp
insl
jge
repnz
mov
cmc
adc
test
push
mov
in
fidivl
inc
sub
cmp
test
mov
movsb
lcall
inc
ss
mulb
cltd
jmp
pop
int3
push
jge
mov
push
cmovne
fnsave
mov
add
fdiv
aaa
jmp
push
jecxz
xchg
mov
inc
mov
shll
dec
jb
push
jb
es
jo
xor
jnp
stos
movb
arpl
cmp
ljmp
mov
lock
adc
addr16
shrl
mov
roll
pop
or
add
sbb
das
fbld
stc
fstps
fisttpll
call
fs
push
dec
adc
dec
orb
out
imul
out
xchg
jne
fwait
inc
mov
xlat
adc
cld
sub
jle
cmp
or
or
out
xor
loop
inc
fdivl
or
add
sbb
jle
push
xor
lahf
fidivrl
loop
jnp,pt
mov
add
cld
mov
push
mov
pop
pop
nop
cli
push
mov
sub
into
sub
testl
mov
add
and
arpl
mov
repnz
inc
into
pusha
fiadds
int
test
xor
sti
aam
sbb
gs
mov
mov
ret
fsubl
outsl
and
daa
rolb
mov
sbb
adc
movsb
cld
adc
sbb
push
daa
jecxz
and
inc
aam
cli
pop
in
inc
and
iret
mov
inc
outsb
jmp
sbb
enter
adc
inc
xchg
rcll
and
enter
or
aas
aaa
outsl
aaa
ss
and
cmp
addr16
ss
out
idivl
leave
jae
mov
stc
cmpb
inc
dec
jg
fneni(8087
out
notl
mov
add
mov
sbb
xor
daa
mov
dec
cmp
and
pop
notl
adc
push
lahf
dec
gs
sahf
cmp
lock
mov
imul
mov
pusha
dec
xor
dec
mov
clc
movsb
popa
mov
push
iret
push
das
xchg
inc
inc
jg
fcoml
icebp
movsb
popa
xor
insb
dec
or
js
pop
stc
imul
popf
fwait
negl
stos
icebp
dec
pusha
xchg
adc
sbb
ret
xchg
mov
cmp
hlt
xor
sahf
pop
add
ds
clc
inc
nop
and
lret
aad
outsb
jns
arpl
jnp
xchg
jp
test
inc
rorb
gs
ret
pop
flds
mov
push
pop
adc
adc
sub
gs
movsl
pop
adc
out
push
pop
push
jae
jg
sti
repz
mov
lock
pop
xlat
sbb
sti
adc
push
sub
jmp
mov
inc
lret
mov
js
pop
inc
dec
movsb
insb
sbb
inc
xchg
cmp
dec
out
pop
fisubrs
js
mov
cwtl
push
test
mov
pop
call
scas
sbb
dec
out
pop
fisubrs
js
mov
cwtl
push
test
mov
pop
call
lods
push
mov
cmp
dec
ljmp
push
cs
pop
test
mov
pop
enter
or
cmp
dec
pop
fsubrp
dec
js
ja
xor
out
mov
and
adc
xor
fstl
mov
push
xchg
loopew
mov
rcll
and
adc
popa
divl
inc
xlat
push
daa
mov
pop
xchg
cmpsl
loope
icebp
inc
rcll
and
adc
popa
divl
inc
xlat
push
daa
lahf
adc
imul
xchg
addr16
xchg
xor
inc
xchg
std
cmpsl
jl
int3
inc
das
mov
mov
and
xor
push
dec
push
sbb
sub
fistl
push
mov
dec
sub
sbb
sar
sub
jp
rcr
divl
out
mul
jge
ss
inc
mov
daa
popa
arpl
test
push
aaa
loope
ret
push
shlb
add
popa
inc
test
add
jg
outsb
cwtl
mov
mov
pop
mov
push
mov
pop
iret
in
mov
jge
mov
pop
rclb
movsb
dec
leave
inc
add
and
mov
aam
pop
mov
aaa
push
cli
add
imul
xor
popa
divl
inc
xlat
push
daa
mov
pop
xchg
loopew
icebp
inc
rcll
dec
ret
loop
inc
push
out
test
mov
int
fadds
out
outsl
jmp
ja
and
adc
add
inc
out
mov
mov
in
fldl
mov
sahf
sub
inc
call
or
xlat
push
daa
mov
pop
xchg
loopew
icebp
inc
rcll
and
adc
popa
divl
inc
xlat
push
daa
mov
pop
xchg
loopew
icebp
inc
rcll
and
rcrb
cmc
addr16
and
push
mov
xlat
jecxz
push
mov
mov
int3
shrl
lret
inc
jmp
push
pop
add
movsb
in
mov
movsb
sub
pusha
sbb
jmp
aaa
cmp
in
cli
sbb
mov
cli
jge
int3
pop
jbe
fildll
fcomp
sbb
mov
mov
cmp
cmpsb
arpl
scas
xor
cwtl
xchg
dec
sub
mov
adc
daa
insl
inc
mov
int
push
mov
movsb
aam
test
fildl
adc
outsb
aad
lods
or
enter
out
loopne
out
and
popf
cwtl
insl
cmpsl
and
jo
xorb
lret
or
int
xor
ret
mov
and
sar
and
js
mov
lods
lahf
add
push
push
cmp
push
pop
inc
dec
pop
cld
imul
bound
imul
test
cmp
jb
in
out
pop
fxam
sbb
orb
fbstp
xchg
add
xor
sahf
insb
das
ret
pop
popf
mov
lret
and
scas
subb
mov
inc
mov
insb
movsb
inc
icebp
lods
loop
lods
pop
dec
incl
inc
fdiv
repz
fs
lock
arpl
sub
pushf
ret
mov
repz
filds
jecxz
pop
sub
adc
xchg
add
loop
mov
dec
add
xchg
cmp
xchg
mov
rcll
xchg
adc
aad
pop
sbb
fstps
iret
push
push
sub
dec
es
pop
xchg
inc
loope
jge,pn
mov
test
ret
mov
test
aad
mov
popf
pop
adc
cmp
dec
cs
sub
or
xchg
ljmp
cmpsl
mov
lcall
int3
pop
lods
addb
adc
sahf
adc
loope
outsb
xchg
mov
and
lret
add
xchg
shlb
loopne
mov
inc
cmp
movsl
push
in
int3
sbb
pushf
clc
mov
lcall
push
shlb
jbe
mov
jge
enter
sub
xchg
jge
xchg
cmp
loope
jle
subb
push
inc
sbb
pushf
popf
call
repz
cli
adc
lods
cmc
xchg
pop
push
add
inc
mov
jb
shrl
jbe
in
mov
inc
aam
jae
or
xor
push
fdivs
dec
and
loop
inc
or
and
into
inc
xchg
imull
push
xor
mov
and
clc
outsb
movsb
sahf
mov
sub
enter
in
popf
nop
lea
sti
mov
adc
in
lods
fcmovnbe
sbb
ret
push
in
mov
enter
cli
out
aam
popf
and
dec
ds
sbb
test
mov
rcll
inc
idivl
jno
xor
inc
mov
je
clc
inc
and
push
mov
inc
add
leave
es
xchg
jo
inc
iret
je
aaa
and
mov
mul
xor
mov
xcrypt-cfb
cmpsl
popa
bound
ljmp
mov
aaa
lea
jne
sbb
fidivrs
push
mov
pop
cmp
cmpsb
cmp
sub
jge
inc
aas
cmp
clc
jo
pushf
fsubl
pop
mov
inc
pushf
jecxz
lcall
jg
xor
push
and
pushl
adc
sbb
shrb
repnz
ficomps
pop
jg
lret
inc
iret
nop
jne
jge
adc
jnp
int
into
or
nop
dec
add
jae
and
mov
mov
xor
or
sbb
push
pop
sub
or
popa
adc
loop
and
adc
daa
xchg
fisubrs
ror
ficoms
pop
mov
cmp
inc
iret
mov
jno
js
sub
jle
xor
popf
test
loop
xor
mov
outsl
dec
pushf
push
lods
sub
decl
mov
pslld
cwtl
jnp
out
ss
hlt
jle
jge
std
fadds
jle
jne
mov
mov
cld
mov
xchg
jno
out
icebp
mov
sbb
xchg
in
clc
or
sahf
jmp
xchg
inc
iret
pop
addl
cli
jecxz
nop
push
test
add
loope
xor
add
and
push
mov
ss
lret
lret
lret
mov
ja
inc
mov
outsl
arpl
loop
loope
jne
mov
shl
out
inc
das
add
jne
in
sbb
mov
lcall
shll
cmp
cmpsb
sbb
xchg
ljmp
les
adc
xchg
bound
or
dec
cmp
adc
int3
jle
ficomps
ret
fsts
lret
or
sub
in
pop
cmp
gs
stos
outsb
sbb
and
test
sahf
mov
jns
dec
cli
mov
les
and
loop
outsb
es
cmp
sub
inc
pushf
adc
insb
aaa
jmp
rcr
cmpsb
pop
mov
jle
inc
imul
jo
divb
mov
stc
jne
pop
ja
mov
dec
loope
inc
ret
lock
push
pop
test
dec
mov
add
subl
jmp
push
add
fs
inc
aaa
je
inc
in
lods
mov
jge
jecxz
iret
sub
adc
loope
mov
mov
pushf
int
shrl
xchg
mov
mov
add
mov
jle
jle
maxps
pop
xchg
mov
cmpsb
mov
push
adc
xor
imul
stos
inc
nop
push
or
pop
mov
test
xor
mov
or
loopne
cs
into
lods
jno
adc
and
fstpt
mov
and
lea
js
in
xchg
xlat
dec
cs
mov
ljmp
fcoms
in
lret
add
lahf
push
push
pop
or
lds
decl
ret
bnd
in
mov
mov
mov
and
aaa
outsb
and
add
imul
mov
repnz
cmp
loopne
rcll
jge
sbbl
mov
mov
mov
rcrb
cmp
jge
pop
mov
aam
cmp
rcr
stos
ret
xchg
loopne
std
call
push
mov
int3
fnstenv
sbb
and
dec
xor
add
fwait
push
push
fcompl
stos
xchg
adc
xchg
dec
fabs
mov
dec
jl
jg
nop
fisttpll
scas
sub
mov
cli
and
cmpsl
cwtl
lea
sbb
testb
loope
repnz
inc
or
push
inc
jno
mov
iret
lods
xchg
daa
pop
das
pop
arpl
or
roll
inc
inc
xor
lcall
mov
mov
mov
lds
addr16
add
add
inc
insl
fs
push
inc
mov
jb
push
or
jb
mov
push
leave
push
or
js
ret
imulb
neg
or
test
and
mov
xchg
and
mov
add
jecxz
cmp
mov
hlt
bound
and
push
mov
and
inc
movsb
jg
and
je
inc
pop
stos
cltd
je
xor
mov
icebp
xor
mov
cmp
movsl
dec
leave
adc
jb
mov
repz
xor
clc
mov
lret
push
repnz
inc
int
aad
outsb
xor
and
test
fmull
jbe
sbb
in
xchg
mov
pop
loop
in
add
sub
and
jmp
out
pushf
push
mov
cli
test
loop
xchg
dec
sbbl
jge
dec
and
or
call
xor
in
and
enter
stos
popa
jne
mov
icebp
jno
adc
cmp
mov
inc
mov
pop
pop
pusha
das
or
call
test
inc
cmp
lods
rcrb
add
inc
incb
dec
and
mov
aas
int3
test
pop
push
pop
movb
adc
adc
into
dec
mov
push
or
mov
xor
das
je
and
shld
fiadds
in
dec
inc
movsl
arpl
xchg
cld
movsb
jmp
mov
xchg
insb
adc
repz
mov
stos
adc
inc
cmp
dec
orl
mov
cltd
dec
push
pop
inc
adc
dec
ss
dec
dec
sub
cmp
cmp
sti
cmp
mov
gs
inc
xchg
pop
fst
adc
sar
jl
sub
or
adc
clc
dec
xchg
xor
lods
fs
push
pop
orl
movsb
jbe
test
mov
cmp
gs
fbstp
sbb
jp
jae
sbb
arpl
sbb
adc
sbb
jno
cli
subps
fsubs
xchg
fcomps
jle
int
push
leave
sbb
shll
gs
lock
in
dec
outsl
cmp
daa
loope
popf
mov
aas
cmp
sbb
out
std
jne
js
xchg
ljmp
arpl
imul
push
jno
fstl
subl
mov
aad
test
mov
add
sub
xor
lret
into
stos
cmpsl
adc
push
mov
mov
fisubrs
xor
dec
loope
xor
jbe
jno
sub
adc
cmp
fisubs
jle
jl
cmp
andl
mov
sub
mov
fwait
adc
mov
popa
stos
inc
loopne
scas
lret
push
shlb
bound
push
jnp
xchg
andb
jecxz
inc
add
imul
or
fwait
in
sub
cmpsb
filds
sbb
test
lock
in
jb
or
adc
aad
sbb
movsl
cwtl
js
push
add
negb
and
xchg
and
stos
fisubrs
fisubl
test
jae
ss
lea
loop
xchg
mov
lods
push
sbb
pop
sahf
sub
repz
add
inc
jle
lret
jecxz
sub
push
into
and
flds
mov
in
pop
fsubrs
cmp
sub
fcompl
mov
push
mov
hlt
pop
jno
jae
jp
adc
mov
add
int3
xchg
sbb
inc
aad
movsb
mov
pusha
repz
mov
dec
sti
add
fsubrl
jnp
fiaddl
mov
stos
dec
les
mov
xchg
dec
mov
add
mull
stc
in
sub
loope
nop
mov
mov
pop
sbb
cvtdq2ps
out
rcrb
cli
mov
out
cmp
bound
mov
xchg
imul
mov
push
aaa
lds
ret
xchg
leave
in
push
mov
aaa
into
insb
test
movsl
fdiv
cmp
pop
cmp
scas
add
jne
adc
out
push
jb
xor
pop
mov
pop
imul
aam
repz
and
rcrl
pop
stos
dec
pop
arpl
xchg
out
xor
dec
add
cmp
ret
fisttpl
fdivs
movsb
mov
add
inc
push
aaa
adc
popl
jmp
lea
adc
clc
mov
mov
mov
pushf
jecxz
ret
jl
inc
jg
dec
pop
cmp
fdivrl
jo
mov
in
mov
adc
push
push
sub
fs
xchg
cmp
repnz
cmpsb
xchg
sbb
inc
gs
and
daa
dec
push
in
xchg
inc
mov
adc
push
mov
sub
sbb
ret
or
lret
lds
push
lock
lcall
lea
stc
fxch
dec
dec
iret
daa
scas
fimull
adc
sbb
rol
sbb
fsubrl
lret
adc
lahf
aam
inc
add
add
pushf
mov
mov
xor
in
lods
mov
inc
pop
mov
xchg
dec
mov
push
mov
xchg
and
mov
outsl
and
add
or
lret
jg
mov
pop
sub
and
sub
loopne
pop
call
xor
fnstenv
cmp
je
cmp
adc
and
cli
out
aas
jae
push
dec
adc
mov
cltd
in
aad
shll
xchg
mov
mov
call
lds
int
push
sub
mov
mov
mov
jg
sub
test
into
cmp
int
sarl
in
dec
dec
mov
or
and
mov
pop
mov
pop
jmp
cmp
mov
enter
int3
roll
pop
decb
or
ljmp
and
inc
mov
and
add
cltd
cmp
sbb
jbe
mov
push
or
cmp
cmp
or
xor
js
jl
mov
je
shlb
adc
mov
xchg
roll
inc
inc
decb
cwtl
or
push
fs
xchg
fisubs
mov
mov
roll
loop
int3
scas
lcall
xor
or
add
enter
scas
rolb
not
dec
xor
sbb
jmp
testb
addb
cwtl
mov
dec
test
mov
mov
test
test
call
scas
adc
jle
sub
add
cmp
ds
cltd
and
mov
aas
pop
in
dec
leave
mov
mov
add
notb
scas
lods
sahf
in
jbe
int3
lods
mov
xlat
popa
mov
or
clc
push
inc
jmp
xor
icebp
movsb
mov
xchg
sahf
push
xchg
dec
ds
out
lret
iret
movsl
jns
sahf
xor
mov
jo
lret
mov
into
sub
push
and
ds
push
hlt
repz
popa
out
mov
nop
push
jae
out
pop
mov
outsb
mov
xchg
mov
or
inc
add
pop
and
add
mov
push
test
dec
pop
pop
cmp
xchg
xchg
popa
lret
jge
pushf
addr16
and
mov
cmp
xchg
pop
fwait
lods
sub
ljmp
js
xor
sub
push
push
sub
js
fisttps
dec
push
es
loopne
adc
ret
aas
sub
dec
outsl
addr16
push
rclb
adc
push
addr16
out
cwtl
dec
xor
sub
cmpsb
mov
jl
adc
mov
addr16
mov
out
add
or
or
rorb
mov
hlt
mov
push
lods
dec
imul
leave
or
jns
pop
sbb
dec
decl
add
lahf
test
mov
inc
jns
mov
add
bound
mov
lcall
add
mov
hlt
stos
mov
sbb
sysret
mov
pusha
fwait
xor
and
jg
sub
loope
dec
dec
add
test
or
push
or
or
adc
jecxz
test
imul
lea
push
jg
fs
lods
pushf
test
daa
adc
sbb
sahf
rcr
xchg
xor
sarb
ja
ds
leave
pop
and
jle
aam
push
pushf
mov
cli
test
mov
jne
mov
xchg
int3
xor
mov
gs
xchg
push
push
into
sbb
rclb
jns
outsl
stos
xchg
cmp
or
dec
push
ficoml
and
pop
dec
lahf
xor
sbb
sti
pop
pop
mov
repz
test
mov
adc
fists
roll
out
movsl
lcall
mov
mov
mov
outsl
and
loopne
cmp
and
hlt
pushl
xor
mov
std
cmp
cmp
fidivrs
daa
push
and
dec
out
jno
mov
jg
popf
lock
inc
aas
jae
fnstsw
push
pop
pop
pop
add
push
ret
mov
mov
add
outsb
jae
push
sub
mov
ror
shll
pop
xorl
jae
mov
cmp
sti
mov
outsb
push
xchg
loop
or
dec
iret
xor
scas
push
cmc
pop
xor
dec
jge
mov
mov
mov
xchg
nop
and
dec
icebp
mov
icebp
cmc
mov
adc
dec
dec
and
and
adc
ss
adc
xchg
je
pop
xchg
xchg
in
dec
nop
mov
mov
in
dec
jns
mov
dec
cmovb
loop
or
sub
das
pushf
add
in
dec
mov
mov
sub
in
fdivrs
jecxz
pop
jl
cmc
pop
push
popa
jo
and
fsubp
int3
xor
enter
clc
push
adc
stc
ret
les
mov
sbb
add
pop
jae
loopne
cmp
or
ret
lcall
out
push
mov
sub
sbb
jnp
jae
repnz
pushf
pop
dec
das
pop
hlt
dec
jmp
inc
in
lds
mov
push
cmp
or
mov
mov
xchg
pop
jns
test
add
lock
scas
fnstsw
fwait
mov
ljmp
push
add
inc
enter
push
call
call
fcmovbe
sub
test
iret
mov
pop
mov
pop
enter
ja
pop
js
loopne
pop
xchg
pop
pop
in
add
nop
xorb
jb
add
mov
into
ret
fildll
sub
imul
mov
rcrl
lahf
mov
xor
lret
or
cwtl
fimuls
push
sub
cli
cld
cltd
xor
stos
popf
hlt
lea
xlat
daa
pushf
jnp
cmp
std
xchg
inc
jne
jg
sub
push
or
popf
ja
popa
inc
jecxz
add
repz
xor
lret
sub
push
xchg
mov
outsl
xor
push
das
inc
es
xchg
gs
int3
daa
in
xchg
gs
jp
hlt
movsl
leave
mov
lret
jg
je
out
sbb
jnp
mov
leave
mov
rcrl
sub
pop
cld
pop
ret
push
pop
xor
lock
mov
or
cmp
xor
mov
mov
lods
std
jge
shr
jp
pop
das
test
pop
fdivr
ret
pop
pushf
jae
sub
xlat
sahf
ret
mov
fnsave
testl
sub
push
stos
xchg
in
pop
sbb
outsb
jns
fwait
loop
fcoml
scas
cmpsl
cmpsl
fsubrp
push
imul
cmp
or
jle
fcoml
cmpl
out
pop
mov
add
std
jg
sub
fwait
cmp
cmp
inc
ds
xchg
mov
push
mov
jo
cmpsl
test
clc
pop
xchg
into
mov
aaa
movsb
jecxz
loope
pushw
outsl
mov
pushf
fimull
lret
pop
cmp
sub
xor
adc
daa
mov
mov
sub
push
push
movsl
cmp
fsubl
add
and
sbb
xor
inc
add
sub
sti
out
inc
inc
pushf
cmp
sub
jp
aaa
out
loopne
mov
add
loop
lahf
pop
inc
cmp
andl
or
daa
stos
xor
mov
aam
shlb
pusha
daa
sub
sti
cli
jbe
add
cmp
test
rcl
adc
int3
mov
adc
lea
negl
fisubs
pop
jno
stc
ja
mov
inc
or
lahf
insl
arpl
push
sub
xchg
cmpsb
jb
xor
les
rolb
mov
or
call
movsl
adc
scas
mov
inc
xchg
adc
jne
int3
je
pushf
sub
add
pop
sbb
mov
stos
push
xchg
popa
pop
xchg
mov
sbb
adc
hlt
adc
arpl
or
push
push
inc
dec
imul
xchg
not
inc
inc
fiaddl
push
bswap
leave
loope
insl
ret
sbb
push
pop
pxor
adc
outsb
mov
sbb
push
ja
in
mov
icebp
lods
sbb
fistps
imul
pop
cwtl
ja
std
sbb
jp
ret
xchg
stos
outsl
sbb
iret
jge
into
stos
mov
imul
testb
dec
mov
mov
lea
sbb
cmp
icebp
in
sti
mov
add
push
add
mov
stos
mov
nop
rol
mov
mov
ljmp
daa
dec
fisttpl
imul
arpl
repz
mov
fistpl
fldt
push
adc
push
sbb
call
sbb
loopne
loop
lret
inc
push
loope
sbb
fimuls
out
out
xlat
aas
inc
mov
in
inc
jnp
shrb
test
xchg
or
xor
loop
xor
sarb
and
add
sbbb
test
pop
dec
sub
sbbl
mov
inc
mov
orb
cmp
xchg
add
rcrb
enter
ret
popl
mov
add
add
out
mov
push
pop
mov
dec
adc
or
and
arpl
xorl
push
clc
jno
movsb
add
popa
jp
xor
popa
divl
inc
xlat
push
daa
mov
pop
xchg
loopew
icebp
inc
rcll
and
adc
popa
divl
inc
xlat
push
daa
mov
pop
xchg
loopew
icebp
inc
rcll
and
xchg
adc
divl
inc
push
push
daa
mov
pop
xchg
loopnew
icebp
inc
rcll
and
adc
mov
aaa
sbb
imul
cs
rorl
clc
mov
enter
or
and
pop
add
fsub
test
hlt
rorl
fadds
sub
inc
or
dec
push
adc
loope
icebp
or
push
shl
mov
enter
or
xor
adc
data16
adc
xchg
in
cwtl
test
call
sbb
sbb
mov
and
dec
push
mov
jns
popf
or
xor
mov
into
adc
hlt
xor
pop
add
cld
in
stos
sahf
xlat
xor
sti
les
sub
or
xor
xor
movsb
rcl
jmp
call
outsl
cmp
divb
pop
or
inc
xchg
movsl
mov
add
pusha
cmp
inc
mov
sahf
stos
cmp
cmp
add
fs
xchg
pop
mov
std
aam
jo
and
and
bound
dec
add
loope
icebp
cwtl
rorl
fadds
mov
outsb
inc
cmp
and
push
dec
js
in
mov
shl
xchg
les
lds
sbb
jge
insl
and
xor
pop
cmc
test
xchg
ljmp
std
sub
sub
sbb
jo
add
xor
push
or
movsl
les
stos
or
jno
inc
or
and
pop
add
mov
rorl
fadds
sub
inc
or
and
pop
add
mov
sub
adc
aad
pop
mov
push
push
mov
ljmp
mov
and
inc
xchg
test
sahf
pop
cmp
push
cld
stos
daa
out
mov
sbb
dec
test
pop
xor
movsl
std
loope
add
test
stc
push
test
ljmp
dec
inc
dec
test
movsl
out
lret
leave
ja
pop
mov
mov
sbb
dec
mov
out
jnp
adc
repz
and
push
or
jno
dec
add
adcl
pop
inc
loop
mov
sbb
mov
add
ja
cli
mov
mov
hlt
or
push
ficomps
mov
fsts
cmp
pop
pop
fs
push
xorb
lock
inc
mov
in
sbb
cltd
cmp
jp
lods
sbb
push
push
outsl
orb
pop
testl
imul
mov
mov
cmpsb
adc
clc
add
test
dec
inc
xchg
dec
jne
dec
mov
jo
ficomps
enter
cmp
int
hlt
sahf
dec
xor
push
gs
jle
bound
jmp
int
push
mov
ja
push
and
out
andl
pop
ret
data16
insb
sti
les
pop
cmp
adc
leave
pop
addr16
jecxz
mov
cwtl
dec
add
sbbb
pop
adc
and
inc
clc
cltd
lock
repz
inc
mov
inc
inc
pop
mov
sti
cmpsb
shrl
mov
hlt
mov
add
fldl
int3
jmp
add
fimull
sub
sahf
daa
jns
cmp
dec
stc
call
lods
xchg
mov
faddl
push
mov
lret
shrb
mov
nop
stc
pop
mov
icebp
scas
xchg
push
or
clc
push
outsb
pushw
jle
cmp
loope
mov
mov
sbb
jnp
mov
sub
hlt
out
add
inc
imul
daa
cltd
pop
imul
mov
push
mov
clc
pop
daa
xor
xorl
and
inc
lret
mov
pop
mov
push
mov
jle
and
inc
nop
push
mov
popf
mov
and
mov
adc
and
jae
fwait
add
leave
jb
add
cmp
sbb
lods
pop
clc
in
and
cmp
cmpsb
lcall
jge
xchg
jno
aaa
sub
mov
or
fnstenv
xlat
xchg
mov
out
inc
repnz
fisttpl
enter
add
movsl
mulb
inc
add
popa
pushf
loopne
loope
and
lods
push
cmpsl
and
pop
sub
and
je
adc
sbb
inc
rcrb
aaa
jae
jg
dec
syscall
sub
adc
and
pop
or
cli
adcl
or
mov
jnp
sbbb
mov
ja
sti
fstpl
push
pop
xchg
pop
dec
insl
adcl
mov
sbb
es
mov
imulb
dec
pop
jg
add
insb
popf
mov
stos
inc
mov
aad
cmp
call
js
cld
negl
sbb
jg
ljmp
add
clc
imulb
add
inc
mov
push
sub
adc
xor
shrb
push
add
repnz
cmc
insb
cmp
stos
push
cmp
and
outsb
or
cmpsl
movsl
nop
jb
out
das
dec
cmp
adcl
pop
inc
jge
notl
mov
je
test
and
pop
test
xchg
mov
sub
dec
test
mov
arpl
sub
imul
je
sahf
jl
xchg
fsub
inc
iret
dec
or
popa
data16
cmpsb
mov
and
sti
shll
test
push
lods
adc
ret
cmp
pop
jp
mov
sub
iret
test
push
lret
stc
mov
enter
test
loop
mov
repnz
sub
or
aam
scas
outsb
sbb
repz
jp
mov
fisttpl
lods
sub
pop
mov
dec
jns
fs
or
and
decl
addb
repnz
cmp
xchg
test
loop
fs
or
dec
mov
xchg
pop
arpl
push
or
sub
fsubrs
mov
daa
fs
inc
in
xchg
aaa
fstpl
fdivl
push
push
jnp
cmp
dec
pop
jnp
out
dec
mov
push
leave
cli
add
mov
xchg
add
gs
filds
adc
test
insl
daa
cltd
mov
popa
push
push
pop
jnp
arpl
inc
loop
shlb
andb
mov
push
jge
cmp
sbb
test
rcl
sti
and
sub
xchg
shlb
xor
dec
jb
pop
add
mov
ljmp
cwtl
mov
imul
stos
dec
imul
lods
jmp
add
fsubrl
cmp
movsb
idivl
mov
xor
das
xchg
sub
mov
fs
pushf
sti
sarl
push
outsb
push
insb
clc
jg
xchg
ret
and
ja
fcomps
js
cmpsl
hlt
cmp
fidivl
popa
lods
jp
fwait
mov
sub
dec
sub
sbb
push
adc
movsl
xlat
cmp
cmpsb
cs
adc
mov
cwtl
mov
jecxz
sub
leave
push
shlb
dec
xor
mov
rcrl
jecxz
clc
out
push
daa
jnp
push
dec
push
xor
pop
dec
into
dec
xor
mov
inc
mov
fstpl
rcl
test
in
or
test
dec
dec
outsl
es
lds
xchg
mov
or
xor
pushf
cs
daa
loop
call
movsl
push
mov
and
cmc
sahf
jns
into
mov
sbbl
negb
mov
mov
mov
cs
loope
cmp
mov
sbb
mov
in
fldt
lods
sbb
cmp
dec
mov
popf
jbe
movb
xlat
in
jge
aam
insl
repz
pop
pop
mov
js
xchg
and
pop
mov
cli
clc
daa
sub
mov
adc
adc
jnp
jno,pn
insl
ja
mov
es
cld
sbb
mov
or
popf
bnd
lea
lcall
inc
call
dec
and
fimull
gs
mov
mov
push
push
aaa
inc
icebp
cmp
pop
idivb
popf
int3
shlb
in
pop
jnp
dec
pop
fscale
push
dec
mov
sbb
cmpsb
les
mov
cli
pusha
jbe
ret
jl
sahf
bound
push
and
loopne
xchg
hlt
ss
repnz
ss
movsb
jle
sub
sub
cmp
popf
int
mov
adc
inc
push
cmp
or
inc
lds
cmp
inc
ss
xor
push
mov
out
adc
leave
pusha
scas
adc
and
fs
mov
xlat
pusha
lea
ja
dec
pop
mov
mov
jmp
jae
movsb
adc
jnp
jb
adc
sub
repz
push
leave
pop
clc
sbb
mov
lcall
scas
xchg
jg
lods
and
add
ja
adc
out
adc
pop
test
mov
push
fidivl
dec
mov
mov
add
sbb
sbbb
std
sbb
test
test
cwtl
adc
push
in
jmp
cs
mov
dec
aam
rcrl
pop
sbb
fistl
cltd
insl
jb
mov
xchg
loop
stc
hlt
xchg
push
push
mov
insl
push
xor
mov
and
pop
lods
xor
dec
in
pop
ficoml
out
test
cmp
jl
adc
adc
adc
jbe
dec
cmp
and
rorl
adc
mov
xor
rorl
out
cli
inc
iret
xchg
jbe
mov
add
orl
test
into
sub
and
sbb
fdivr
aad
cmpl
in
jmp
sub
pop
lock
sbb
imul
or
je
mov
jns
fbstp
outsb
in
rcrl
insl
shll
sub
cmc
fadds
pop
pop
pop
frstor
mov
cwtl
addb
mov
shl
loope
pop
mov
out
xchg
ljmp
xlat
sub
aas
fistpll
sbb
push
or
cmp
xchg
aas
pop
inc
cli
jmp
ret
inc
lds
xor
in
aad
hlt
data16
mov
mov
push
add
dec
jno
cmpsb
pushf
movb
cltd
test
dec
lock
jb
pushf
cmp
out
sahf
cmc
sbb
fs
mov
dec
mov
roll
imul
push
dec
or
subl
fld
int
roll
adc
mov
push
xchg
divb
nop
add
cmp
mov
negl
fcoml
xchg
es
mov
negb
pusha
lock
and
loope
mov
or
cmp
add
jge
popa
insb
mov
fdivs
mov
sbb
push
jg
sub
and
add
push
loopne
adc
push
or
imul
dec
aas
cmp
add
push
fisubs
adc
xor
jecxz
sub
jp
xchg
mov
sub
cmp
pop
aad
mov
sahf
push
inc
mov
push
mov
sub
fadd
mov
push
mov
push
push
in
aad
int3
lcall
scas
scas
xor
movsb
scas
mov
mov
fwait
and
cwtl
push
mov
jmp
lcall
push
fstpl
lahf
jnp
xor
insl
out
inc
jge
xor
inc
stos
addr16
push
adc
cltd
or
insb
in
jl
push
xor
cli
shrl
sarb
cmp
push
sub
outsl
js
arpl
inc
xchg
mov
add
mov
pop
push
or
or
adc
popl
cmc
das
add
jecxz
mov
sbb
add
sbb
xor
iret
out
cmp
les
push
mov
push
addl
fsubs
mov
dec
adcb
loopne
roll
dec
dec
pop
pop
sub
popa
mov
leave
xor
mov
mov
push
or
adc
nop
int3
outsb
lods
adc
lock
mov
ja
lods
jle
push
jo
dec
jo
and
fwait
sbb
int3
std
lahf
inc
dec
mov
leave
inc
shrb
xchg
adc
dec
jl
mov
xchg
mov
sub
push
leave
xor
sub
mov
sbb
mov
pop
arpl
mov
out
cmp
sub
testl
push
mov
fldt
ja
lret
mov
rclb
hlt
sbb
cwtl
pop
repnz
push
arpl
ljmp
dec
lcall
xor
loope
and
lods
adc
and
cmpsl
push
gs
or
jo
mov
pop
testb
rorl
adc
rclb
lcall
aaa
test
xchg
jae
fwait
cwtl
dec
fdiv
test
out
sbb
sbb
push
mov
push
dec
loopne
pop
call
inc
jmp
sbb
cmp
inc
mov
jae
jle
cmpsl
loopne
pop
iret
rcl
movsl
cmc
cmp
adc
cmpsl
mov
jb
nop
sbb
add
sub
sarl
imul
push
fsubrl
xchg
andb
cwtl
add
sbb
test
stc
sub
outsb
js
popf
adc
fimuls
inc
jbe
push
pop
xchg
add
xlat
pop
in
repz
dec
or
insl
cmp
add
adc
in
push
jp
addr16
stos
xor
jmp
dec
or
cmp
outsb
pop
mov
and
lock
push
pop
push
test
adc
push
cmp
mov
inc
pop
adc
mov
std
sbb
inc
and
push
jmp
jg
ds
scas
jp
insl
roll
lret
into
orl
repnz
sti
xor
inc
dec
adc
xor
idivb
or
push
mov
mov
jmp
cld
adc
loope
or
loop
pusha
pop
sub
add
test
in
adc
imul
sub
in
cs
xchg
push
mov
pop
push
and
aas
insb
adc
ljmp
stc
ror
adc
leave
sti
push
push
or
sbb
out
cmc
cmpsl
nop
sarb
pop
mov
mov
push
rcl
and
inc
ret
xor
lods
mov
popf
push
pop
rcl
scas
sarb
add
push
stos
mov
cmp
xor
stc
add
fmul
sub
sub
clc
lock
sub
pop
xor
and
imul
call
rcll
call
jp
movsl
cmp
xor
adc
les
pop
test
iret
call
pop
inc
flds
push
outsb
xlat
sub
out
xchg
push
jle
adc
adc
fmull
rcrb
out
mov
stos
sbb
arpl
idivb
repnz
in
mov
cmp
je
popa
imul
sbb
fwait
test
sbb
jmp
in
icebp
push
add
sarb
shlb
and
mov
into
sbb
es
sub
ja
cli
mov
imul
mov
inc
enter
rolb
ljmp
mov
icebp
add
push
jb
or
and
mov
shll
ret
and
nop
mov
and
inc
push
ljmp
push
lret
pop
jl
cmp
xchg
mull
cmp
fldcw
fdivrs
xor
xchg
xchg
jno
insb
lds
push
jecxz,pn
sbb
dec
xor
mov
adc
rorb
popa
push
loope
mov
push
fbld
mov
mov
addr16
lds
out
jmp
and
sub
lds
inc
adc
aam
or
fucomp
pop
aam
mov
jbe
inc
aam
pop
add
sti
test
or
aas
cld
in
es
push
xchg
xchg
sub
or
xchg
xchg
pop
sub
mov
pop
inc
stos
fimuls
std
sub
adc
fistpl
dec
movsl
cmp
or
and
cli
leave
cmp
das
mov
call
jg
add
cmpsb
lds
ljmp
pop
fs
or
ja
test
in
out
jge
inc
xor
cmpsl
cmp
fistpll
sbb
push
adc
lods
sub
jno
xchg
pop
jae
cmpsb
sahf
add
jo
jg
aad
sti
mov
cli
ffreep
sub
dec
out
stos
add
fmul
pop
rcrb
ftst
dec
icebp
mov
dec
shll
and
jnp
es
adcl
cmp
mov
out
sbb
fs
push
push
jp
stc
sub
fldt
cmc
loope
orb
aas
lds
je
mov
mov
std
hlt
stos
int
lcall
arpl
sub
sahf
sbb
xor
adc
sbb
push
mov
data16
and
popa
pop
fs
cs
xor
stc
xor
push
add
or
testl
pop
ljmp
mov
mov
aaa
cwtl
pop
dec
xor
cld
jmp
movsl
sub
test
imul
cmpsb
jmp
push
stos
jne
sbb
push
ljmp
sub
js
jge
xchg
sbb
aam
adcl
mov
rcll
lods
fdivr
cmpsl
inc
scas
cmp
cmp
xor
loopne
lods
or
sbb
paddq
frstor
js
mov
xchg
pop
lea
aad
mov
xchg
movsb
xchg
aad
ja
sub
sub
lods
clc
stos
cmp
rcll
cli
add
shr
mov
mov
out
lahf
dec
enter
lods
out
push
sub
mov
int
jne
movsl
in
inc
mov
inc
out
xor
popf
xor
cltd
popf
mov
pop
loop
jecxz
mov
jnp
push
add
xor
sub
sbb
xchg
int
inc
xchg
outsb
mov
daa
mov
scas
jg
cmpsb
int3
rcrl
dec
bnd
call
pop
out
rcrl
or
rcrl
es
jmp
stc
cmp
xchg
stos
jno
movsl
cmp
add
mov
mov
ret
popf
cmc
jnp
int
and
xor
loopne
jnp
xor
in
jb
sbb
nop
jb
jg
hlt
mov
mov
addr16
in
int
mov
aas
dec
push
cmpl
pushf
sub
push
leave
inc
pop
push
push
sbb
jae
test
mov
cmp
bound
loop
out
fldt
rorl
jo
mov
xchg
ret
xchg
lahf
pusha
aas
cmp
mov
in
and
ret
cmpsb
mov
test
testb
lret
sbb
jl
gs
jg
mov
call
repnz
jl
cs
sub
mov
adc
pop
fwait
sarb
xor
mov
dec
imul
xchg
mov
mov
ja
mov
xlat
push
loop
fbld
in
jmp
sub
imul
mov
cmp
ja
push
and
sbb
xchg
push
sar
jecxz
push
sub
sbb
out
cmp
not
push
adc
xchg
mov
outsl
clc
xchg
sub
dec
add
mov
xchg
push
scas
sub
and
or
pop
add
lds
mov
movsb
lret
icebp
and
push
adc
cld
and
sarb
inc
sldt
test
or
mov
add
mov
mov
ja
bound
add
xlat
xor
test
lea
jl
mov
add
push
je
fimuls
jle
fs
and
jne
ljmp
in
inc
push
and
inc
lds
mov
sub
sub
je
mov
jmp
out
js
inc
popf
mov
inc
cmc
stc
mov
cmp
xchg
xor
mov
push
jno
lret
imul
jge
lret
dec
push
daa
outsl
inc
sbb
adc
movsl
inc
xchg
clc
cmp
pop
xchg
cmpsb
inc
cmpl
cmp
or
mov
add
inc
dec
add
jno,pn
xorl
or
dec
aas
jns
fdivrs
push
sub
jle
mov
ss
jae
in
fldenv
mov
mov
xchg
sbb
jne
andl
loope
fidivrl
push
loop
pusha
bound
aaa
xor
ds
pushf
das
lret
inc
or
insl
xchg
rcr
out
cltd
inc
fcomps
aam
cmp
cld
pushf
stc
test
fadd
sub
inc
fisubl
outsb
sub
mov
aam
lods
lcall
and
sahf
pop
mov
shlb
push
mov
test
pop
inc
loop
movsl
xor
cli
mov
ljmp
dec
dec
pop
inc
add
add
arpl
xchg
pop
les
pusha
sahf
jp
daa
cltd
sti
sub
and
jl
mov
inc
sbb
stc
ljmp
pop
test
adc
test
mov
stc
test
scas
stos
in
push
dec
sub
push
mov
stos
xor
inc
sub
add
adc
imul
lea
inc
add
pusha
push
scas
fwait
icebp
movsb
mov
pop
pop
iret
pop
icebp
push
ffree
fstpt
adc
or
fsubrs
push
xor
lock
or
and
sbb
loop
in
mov
sti
push
jb
das
or
and
dec
leave
unpcklps
inc
inc
sub
sahf
mov
and
out
sarl
jnp
jnp
aad
bound
test
inc
xchg
mov
loop
push
aam
and
lds
xchg
mov
insl
jecxz
add
negl
hlt
cmc
adc
stos
adc
shrb
stos
xor
ret
inc
fmuls
in
movsb
mov
pop
jbe
sbb
xchg
arpl
lock
jae
jne
mov
push
pop
fcmovu
rcrl
scas
cwtl
pushf
mov
xchg
push
add
pusha
jmp
push
stc
data16
lahf
cli
fbld
adc
pop
or
mov
push
fisubrs
out
inc
dec
in
insb
jae
pop
decl
test
push
pushf
mov
mov
adc
dec
adc
sti
out
jl
mov
rorb
fisttps
pushf
je
push
and
inc
movsb
push
mov
in
dec
xchg
ds
movsl
ficoml
pop
mov
and
mov
cmp
stc
dec
data16
shrb
or
inc
mov
icebp
into
mov
adc
fs
sub
daa
inc
enter
cs
fmull
and
and
ret
mov
std
mov
pop
popf
push
inc
cmc
mov
fsts
cmc
mov
jo
xor
dec
add
pushf
je
mov
sub
dec
inc
jo
xchg
pop
les
out
inc
nop
fcoml
repnz
icebp
ffreep
mov
clc
mov
enter
sub
inc
or
and
pop
add
mov
rorl
fadds
sub
inc
or
and
pop
add
mov
rorl
fadds
sub
inc
or
and
pop
add
icebp
ret
sar
mov
dec
xchg
cmp
test
mov
mov
jnp
dec
mov
push
sahf
sub
sbb
jmp
sti
sub
cmp
dec
stos
pop
imul
jnp
dec
mov
cmp
or
sbb
jmp
fwait
sub
cmp
dec
stos
pop
mov
mov
jnp
dec
mov
cmp
or
sbb
inc
cmp
pop
scas
pop
fisttpl
sub
sub
adc
stos
and
or
in
mov
add
jo
ret
jne
repz
shlb
addl
sti
push
sub
fcmovnb
pop
or
xchg
add
lret
sbb
pop
push
cmp
xor
imul
cmpsb
or
and
divl
or
jnp
je
adc
xchg
mov
sti
in
xor
mov
rcrl
je
push
fmuls
inc
movsb
xor
sti
cs
push
jo
or
adc
mov
jnp
mov
arpl
pop
push
mov
jle
sti
dec
sahf
pop
sti
fcmovnu
push
fisubrl
lahf
jns
dec
imul
lret
sub
cmp
or
sbb
jmp
sti
sub
cmp
dec
stos
pop
mov
out
add
jnp
and
xor
inc
jg
jnp
jle
pop
mov
sbb
push
mov
imul
enter
scas
arpl
sbb
jl
push
stos
cmp
out
adc
in
and
mov
fstpt
jmp
sti
sbb
jmp
sti
sub
cmp
dec
stos
pop
mov
mov
jnp
dec
mov
cmp
or
sbb
jmp
sti
sub
cmp
dec
stos
pop
mov
mov
xor
stc
les
out
xchg
or
movsl
adc
push
push
bound
mov
enter
out
mov
in
aaa
jecxz
inc
inc
insl
push
pop
hlt
scas
enter
add
repz
jne
mov
fsubrp
lret
ror
cli
push
jbe
in
add
sarb
sbb
sbb
sub
shlb
arpl
dec
jge
xchg
aad
adc
and
js
inc
loope
rdseed
xchg
push
shl
sarl
pop
in
push
mov
dec
lret
and
movsb
xor
mov
inc
cmp
pop
scas
mov
xlat
insb
ss
dec
pop
ret
loope
xchg
jae
sub
or
movsb
mov
mov
cmc
dec
cmp
scas
mov
xchg
xadd
bound
xor
lods
lods
mov
dec
js
popa
fsubrs
add
lea
lret
shlb
aam
inc
stc
mov
adc
sub
adc
loop
push
andb
mov
jle
out
jecxz
sub
loopne
jne
sub
dec
add
xor
dec
sbb
aaa
or
cmc
sbb
testb
cmp
adc
or
pop
icebp
cld
and
push
adc
fsubs
add
in
cmp
popa
pop
pop
ljmp
xchg
test
out
test
cld
push
rcrl
dec
loop
mov
jmp
ret
pusha
xor
jno
sbb
stos
add
sbb
scas
jg
fidivrl
add
pop
cs
adc
sub
or
and
and
popa
arpl
mov
cmp
cli
scas
and
lds
loop
inc
xor
cmp
or
pop
mov
or
imul
les
js
cmp
mov
sbb
inc
push
pop
icebp
sbb
lret
dec
xor
shl
clc
mov
iret
xchg
pop
add
in
xor
sbb
adc
mov
shlb
mov
repnz
inc
and
cmp
out
rol
lea
and
leave
add
pop
sub
adc
pop
mov
mov
dec
test
les
jecxz
inc
push
cmp
or
out
scas
leave
jb
push
repnz
xchg
push
push
scas
sbb
stos
cmp
mov
stc
mov
pop
mov
cld
dec
daa
xchg
lret
mov
dec
jle
xlat
sub
sbb
jnp
lret
adc
sbb
ud1
dec
stos
xlat
push
ja
mov
jle
sub
add
and
leave
lret
push
add
sti
sbb
push
call
mov
call
ret
mov
or
js
popa
mov
les
outsl
push
fisttps
ret
inc
sbb
mov
dec
add
out
push
addl
dec
or
rorb
test
stc
dec
movsl
ja
rcr
jle
jns
jmp
stc
fnsave
pop
xchg
dec
call
xor
in
pop
lret
jb
pop
mov
enter
icebp
cltd
or
repnz
push
mov
loopne
hlt
or
popf
sbb
xor
adc
jge
cwtl
mov
out
enter
pop
cld
jbe
pushf
mov
int
mov
aam
fs
mov
sti
or
add
es
call
xlat
xchg
sbb
jmp
les
fucomi
xchg
lret
dec
add
lret
mov
xchg
sub
adc
adc
dec
push
mov
jae
xchg
dec
jle
inc
inc
fwait
pop
xchg
add
mov
shl
or
push
in
or
push
add
jg
int3
cmpsb
dec
bound
mov
outsl
cmpsl
mov
add
xor
pop
cmp
lock
push
inc
ljmp
pop
pop
fwait
add
inc
loope
add
jae
dec
in
aad
gs
dec
iret
pop
cmp
lea
fiaddl
es
push
sub
movsb
lea
rcrb
pop
sti
xor
fwait
insl
xor
insb
enter
pop
dec
dec
push
xor
je
lea
add
jnp
push
pop
push
repz
in
inc
cmc
cmpsl
movsb
mov
les
sbb
mov
scas
lret
jmp
js
mov
jno
lea
and
movsb
loope
jp
in
insl
xlat
shr
sub
leave
insl
daa
pop
push
mov
sub
scas
mov
ret
add
xor
aaa
dec
and
inc
cltd
pop
ret
call
pop
mov
inc
jg
insl
push
mov
lahf
cmp
ds
sub
imul
mov
inc
fsubs
inc
lods
dec
out
sub
mov
call
and
lret
clc
int
push
lods
mov
dec
or
movl
mov
lret
ret
loope
bnd
mov
mov
and
cmc
in
jl
dec
ret
dec
xor
ret
sbbb
in
mov
mov
stos
xchg
adc
es
cmp
in
ffreep
mov
sti
stc
daa
imull
sub
push
and
push
test
sub
insb
xorb
add
enter
jo
test
xchg
jle
sbbb
int
sahf
or
add
sub
xchg
push
jle
xchg
hlt
in
sub
jmp
pop
sahf
nop
lea
dec
sahf
cmp
xor
cmp
ficompl
lret
push
test
ja
out
sarl
mov
pushl
or
sub
xchg
hlt
pop
mov
loope
scas
jbe
or
sbbb
pushl
jg
mov
cmp
cmp
aas
inc
dec
adc
and
fwait
jmp
pop
mov
test
fldenv
xchg
push
inc
scas
jno
imul
test
scas
test
pusha
xchg
or
mov
adc
cs
hlt
insl
enter
negb
mov
movsl
bound
or
mov
xor
cld
xchg
rol
mov
or
mov
ret
pop
lods
shr
lea
xchg
fadds
es
imul
sub
subl
jb
xchg
arpl
mov
xor
mov
cmp
or
mov
in
call
sub
rcrb
add
out
cmp
add
call
jle
pop
xor
lret
cmpsb
outsl
call
mov
xlat
adc
adc
int3
mov
fidivl
cmc
movb
inc
shlb
inc
adc
inc
outsl
push
arpl
fcoml
push
popa
jecxz
fsubrp
roll
outsl
and
push
and
into
cmc
sbb
inc
mov
mov
lcall
test
lcall
leave
pusha
ja
pop
lahf
loopne
iret
jb
mov
mov
fisttpl
scas
icebp
sbb
nop
loopne
push
test
xchg
fsubrl
pop
add
pop
xor
cltd
add
adc
mov
sbb
push
js
loop
mov
mov
outsl
cmpsl
addr16
nop
test
stos
mov
push
sahf
int
mov
adc
adc
jmp
stos
movsb
mov
maxps
mov
setp
dec
mov
cmc
jb
adc
sbb
js
pop
add
aam
xchg
add
sti
xchg
dec
sub
fwait
pop
sbb
sub
jne
jle
sub
fdivs
mov
repz
mov
inc
rorb
or
and
ja
fmull
xor
mov
in
sti
or
popa
nop
lret
mov
jmp
insl
lods
iret
adc
dec
and
fdiv
cwtl
hlt
test
mov
scas
in
or
add
js
push
ljmp
mov
jmp
hlt
daa
sbb
cmc
mov
cmp
leave
aas
popf
adc
lret
scas
lds
jmp
xchg
lock
out
mov
std
cmpsl
je
cmc
ds
jl
stc
mov
or
sub
jge
and
cltd
int3
or
mov
in
mov
jnp
pop
add
push
and
test
push
lahf
jmp
fs
test
sbbb
lahf
adc
push
xlat
mov
jge
sub
jnp
addb
fsts
loop
jle
xor
xor
repnz
xchg
xchg
and
imul
lcall
loop
fwait
xchg
dec
jbe
iret
ret
jmp
fisubs
fdivrl
test
adcb
dec
cs
pusha
dec
dec
adc
sub
xchg
fcom
mov
jnp
inc
aas
div
and
sub
sahf
insl
cmc
pop
xlat
mov
jp
xlat
push
ret
fs
pop
mov
loopne
xchg
fisttpll
mov
loope
ljmp
and
lret
test
in
cmc
lods
pop
mov
arpl
lcall
dec
outsl
aaa
lods
icebp
pop
jmp
pop
fcmovnbe
mov
add
shll
push
fwait
dec
ret
fmuls
cmp
mov
stos
test
jp
adc
xor
inc
jo
out
add
lods
mov
rcll
cs
mov
fxch
popf
adc
fisttpl
repz
pusha
test
pop
mov
lahf
cmp
addr16
xor
cmp
add
fnstsw
adc
out
push
mov
push
add
out
dec
lds
in
daa
pop
push
hlt
adc
adc
lds
add
sbb
ljmp
cmp
aam
pop
and
push
sbb
ret
and
cmp
scas
push
mov
and
add
imul
or
das
loope
iret
add
pop
adc
push
mov
and
or
sbbl
push
loope
dec
pop
mov
mov
dec
inc
ret
lods
or
imul
sub
mov
push
adc
or
lods
and
or
int
sub
rorb
loop
into
ret
iret
lds
pop
scas
ficomps
test
mov
iret
shll
sub
ret
dec
inc
insl
and
xlat
div
shl
call
and
jb
es
jmp
cs
sbb
mov
xchg
mov
dec
hlt
nop
pop
inc
mov
fmuls
shll
movsl
cmp
and
rorl
cwtl
adc
cwtl
cmp
fdivrl
imul
hlt
inc
xchg
push
jnp
jle
jecxz
bound
mov
xchg
lods
pop
std
cmp
sub
push
xchg
stc
in
xor
notl
fisttpll
shlb
cld
dec
outsl
lret
insb
jo
mov
cmp
pop
mov
and
test
int
xchg
call
sbb
stos
xor
roll
cmp
clc
test
gs
in
pop
mov
mov
jl
push
xchg
jbe
and
inc
push
jbe
cwtl
cmp
inc
xchg
and
pop
std
jmp
mov
in
mov
push
jecxz
and
loope
nop
and
imul
mov
add
mov
lahf
loope
sub
cmpsl
add
push
sub
movsb
push
adc
out
fmul
add
sub
ja
shl
cmp
sub
xchg
or
mov
pop
repz
mov
pop
insl
stos
dec
popa
repnz
call
xor
int
notl
rcll
out
jae
imul
cwtl
frstor
mov
inc
adc
insl
rorl
inc
or
adc
in
lods
cmpps
xchg
fcmovnb
outsb
fisttpl
cmp
test
cltd
jg
fdivl
mov
leave
xchg
test
loope
jecxz
bound
mov
es
rclb
mov
and
or
jge
jne
imul
sbb
in
iret
iret
push
jmp
pop
icebp
jmp
mov
stos
push
mov
out
stc
fcoms
stc
test
mov
rcr
das
int3
aad
dec
and
imulb
insb
push
daa
mov
mov
shll
dec
xor
jp
cmpsl
pop
pop
inc
test
mov
or
xor
ss
stc
outsb
xor
in
in
aaa
bound
jl
xchg
fisubl
in
adc
lcall
dec
add
lods
cli
pop
xchg
cmp
rolb
and
lahf
in
mov
rcl
sbb
sbb
loope
into
sub
jmp
add
pop
enter
je
test
lods
fcmovbe
adc
mov
int
mov
lret
jno
push
cmp
icebp
ret
loopne
mov
in
jmp
push
stos
xchg
adc
pop
mov
mov
test
dec
sarl
jae
mov
pop
mov
mov
or
shlb
xor
out
movsb
aas
scas
xchg
sub
in
fisubrl
dec
lret
fdivl
mov
mov
xor
lock
js
xchg
shlb
lea
mov
in
lahf
mov
dec
fxch
cltd
scas
or
arpl
popa
dec
popa
insl
or
pop
movsl
gs
pop
cwtl
lret
mov
pusha
loop
sahf
iret
push
jp
sbb
lret
sub
test
flds
sub
jl,pt
inc
dec
xchg
shrl
push
mov
sti
out
jbe
test
fadd
arpl
mov
inc
outsl
xchg
jb
daa
sbb
cmp
pusha
mov
cld
les
push
xchg
mov
jbe,pn
mov
cmp
in
lea
pushf
movsb
out
push
xor
mov
pop
jg
sub
mov
cli
adc
sbb
mov
pushl
lret
inc
iret
repnz
test
pop
pop
mov
xor
jecxz
nop
dec
outsb
xchg
push
push
popa
fnsave
adc
push
in
cmpb
lea
leave
adc
pop
icebp
xor
mov
or
out
addr16
subl
out
insb
and
insl
ret
mov
cs
sbb
jae
jge
mov
popf
xchg
xorb
adc
sub
shrl
adc
mov
sbb
sbb
das
out
pusha
stos
clc
lods
inc
icebp
test
push
jp
xor
mov
inc
popf
stc
nop
xor
cmp
imul
out
xor
cwtl
icebp
je
mov
push
std
stc
jecxz
push
xor
pop
popa
jbe
xlat
dec
fmull
sbb
pop
scas
xchg
hlt
jbe
push
pop
xchg
arpl
push
push
mov
or
jmp
xor
shll
lds
stos
scas
and
cmp
cs
jo
shrb
jns
in
pop
add
cld
xlat
je
xor
cmp
movb
std
cmp
push
mov
stc
in
pop
add
xor
scas
adc
out
lds
cmc
jg
scas
jl
jb
mov
inc
pop
sar
xor
or
jbe
adc
mov
fbstp
ja
sahf
lods
inc
push
and
mov
popa
hlt
or
dec
cmp
inc
jmp
rcrl
jne
or
test
cs
repz
and
dec
mov
jmp
mov
jmp
rorl
cld
in
sbb
xchg
cmpsb
xchg
pop
jae
daa
std
push
negl
or
inc
or
xor
xor
sarb
lock
jge
fildl
in
xchg
call
xor
fsubrp
sbb
pop
pop
adc
fs
sarl
cmc
adc
cs
stos
inc
sub
push
sub
xor
fnstcw
cmc
std
out
test
aaa
test
dec
xor
cli
movsb
mov
popf
mov
sub
in
lahf
pop
cli
iret
push
int3
sahf
or
cmp
sti
sbb
arpl
pusha
mov
adc
or
and
rcrb
les
jg
loopne
xchg
add
lcall
xor
sub
lahf
dec
lods
xor
mov
jmp
or
dec
inc
insl
adc
jecxz
adc
jmp
arpl
mov
cs
dec
out
adc
in
test
jge
pop
pop
and
lds
popf
cmp
lret
dec
insl
pop
loope
into
repnz
xchg
mov
ds
mov
jl
push
ds
int
mov
cwtl
dec
repz
adcb
outsl
pop
or
or
lea
xchg
jbe
pop
add
or
fsts
aaa
xchg
or
lea
loop
nop
repz
push
sub
mov
aad
ds
aas
jmp
or
mov
in
cmp
and
stc
adc
loop
pop
mov
out
pop
add
out
inc
add
mov
jo
std
scas
inc
js
fs
mov
push
jns
data16
mov
sahf
push
jb
test
push
mov
push
nop
fldt
lock
iret
pminsw
loopne
add
jmp
adc
xor
call
xchg
mov
push
cmpsl
mov
mov
adc
pop
xorl
fs
cld
hlt
pop
add
gs
adc
fcoml
mov
stos
stc
xorb
mov
adc
mov
fnsave
addl
pusha
sub
andl
dec
in
andl
pushf
lock
mov
pop
pop
das
cmpsl
xchg
cmpsb
add
insb
adc
pop
jne
scas
push
xchg
inc
sub
inc
jo
mulb
mov
jp
mov
pop
sbb
les
jns
jge
je
jle
mov
out
mov
cld
and
cli
mov
cs
fimuls
pop
ret
adc
xlat
mov
outsb
jg
dec
add
sub
sbb
stc
jb
push
cmp
xor
aas
adc
mov
jge
push
out
push
movsb
pop
pusha
push
sbb
cltd
adc
hlt
sbb
lret
or
sahf
xchg
sbb
lahf
or
dec
cmp
cmp
enter
cmpsl
cmpsl
cmpsb
push
mov
mov
mov
and
insl
cs
int
fsts
pop
dec
and
push
enter
test
xlat
pusha
or
insb
push
xchg
inc
sub
jns
dec
mov
dec
cmp
mov
cmp
jne
repz
aad
dec
cwtl
sbbl
rorl
ret
mov
xchg
sbb
repnz
adc
mov
cli
in
push
jnp
mov
ds
pop
lret
in
jge
jl
adc
mov
ljmp
push
rol
or
lret
sahf
push
fildll
scas
sbb
jecxz
dec
call
or
outsl
mov
mov
cli
cmp
pusha
ficompl
mov
loop
pop
je
add
aam
adc
int3
repz
lcall
pop
pushf
dec
adc
xor
sub
cs
test
and
cmp
iret
call
dec
pop
xor
jnp
test
test
movsb
sbb
dec
pop
mov
sti
je
mov
sbb
sbb
cmc
pop
popf
sub
push
xchg
xlat
jbe
adc
aaa
mov
shll
fisubrl
mov
lods
push
testb
shr
outsb
jno
dec
lods
mov
mov
ja
inc
pop
and
imul
fwait
push
cmpsl
mov
mov
push
inc
push
add
sarl
or
popf
xor
aas
dec
fcoms
dec
xchg
dec
mov
test
sub
daa
xor
les
mov
inc
loope
mov
jmp
mov
int3
xchg
ret
add
shll
jl
neg
pusha
arpl
and
jecxz
pop
outsl
pop
fs
mov
popa
aam
fstpl
fildll
jb
jmp
jecxz
mov
jne
add
iret
lret
subl
hlt
push
data16
stc
mov
insl
std
sub
jbe
adc
push
sbb
push
dec
cltd
jnp
int3
pop
in
jno
out
fstpl
lods
lock
lods
pop
mov
add
fwait
pop
in
fldenv
arpl
lock
push
mov
mov
idivl
lret
pop
mov
scas
jo
outsl
jbe
repnz
jo
push
std
cmp
aam
call
cmp
popa
pop
jle
ds
push
mov
stc
ret
mov
aad
fwait
mov
mov
ss
dec
inc
cmp
shlb
test
fstp
lods
pop
loope
jnp
mov
dec
adc
push
arpl
lahf
pushw
sub
cltd
fwait
repnz
dec
cmp
in
sbb
mov
imull
or
xchg
xchg
mov
fucom
je
scas
cmc
test
popa
pop
stos
adc
mov
pop
popf
ffree
in
cld
push
imul
jb
dec
and
pushf
mov
xorb
mov
push
dec
test
shlb
or
int3
icebp
mov
mov
fwait
cmp
xchg
sarb
in
ss
mov
sahf
jo
adc
daa
int3
mov
cmp
cld
iret
fmull
jecxz
push
stos
int
add
lret
negb
xor
inc
out
mov
test
aam
inc
test
fdivrl
sbb
jnp
lcall
mov
xchg
xor
xchg
jecxz
gs
aad
pop
mov
or
test
cmpb
roll
test
adc
adc
adcb
stos
cmp
outsl
xor
fsqrt
ror
pop
outsl
mov
inc
or
dec
mov
cmp
or
sbb
jmp
sti
sub
cmp
dec
stos
pop
mov
mov
jnp
dec
mov
cmp
or
sbb
jmp
sti
sub
cmp
dec
stos
pop
mov
mov
sti
stos
lret
mov
mov
or
sti
sub
cmp
dec
stos
pop
mov
mov
jnp
dec
mov
cmp
jnp
hlt
jmp
push
or
roll
andl
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
cmp
or
cmp
push
sbb
or
sbb
imul
mov
imul
clc
or
cmp
add
imul
js
dec
mov
mov
sbb
enter
sub
cmp
imul
aaa
iret
fcomps
mov
push
arpl
repnz
cmp
mov
in
xchg
inc
shl
std
pop
xor
xchg
jmp
les
aaa
push
add
mov
inc
xor
adc
divl
inc
lret
lods
jo
fisubrl
pop
cli
out
push
sbb
dec
test
je
call
sti
fsubs
or
ljmp
push
xlat
push
lea
fildl
lock
cli
fcom
inc
clc
dec
pushf
pop
sbb
sbb
icebp
adc
push
movsb
mov
mov
xor
sub
mov
fwait
jge
xchg
sbbl
pop
shl
mov
imul
clc
or
cmp
mov
or
sbb
push
mov
cld
and
pop
pop
stos
mov
mov
mov
sbb
xor
and
sbb
rolb
lea
pop
enter
jp
push
mov
and
or
fisubrs
xchg
stos
jmp
mov
or
cmp
sub
fstpt
lret
or
sbb
push
mov
mov
imul
clc
or
cmp
sub
fstpt
lret
or
sbb
push
mov
mov
test
xchg
sub
aas
xchg
popa
mov
push
jg
jge
xor
cld
pop
lcall
pop
pop
call
mov
push
and
push
cmp
cwtl
or
adc
adc
imul
inc
inc
test
sbb
jl
loop
cmp
pop
sbb
in
scas
inc
out
pop
dec
push
add
out
into
dec
push
dec
call
inc
shlb
xchg
iret
jns
xchg
data16
aad
cmp
xchg
in
push
or
gs
pop
sbb
pop
mov
ds
stc
xchg
fcomip
xchg
ds
mov
jle
jl
gs
sub
mov
jae
js
and
xor
push
adc
ds
movsl
int3
lret
pop
push
inc
push
pop
mov
sub
out
mov
pushf
xor
shl
scas
sbbl
mov
je
sbb
lret
inc
fisubrs
jmp
das
test
in
inc
mov
outsb
jns
outsl
js
jbe
scas
scas
mov
es
xchg
shrb
insl
fstpt
loop
adc
jbe
xchg
cmp
mov
jno
scas
mov
cmpsb
push
out
xchg
xor
les
push
xchg
push
push
pop
and
inc
mov
daa
pusha
ret
mov
scas
in
popf
and
aas
pop
mov
out
sub
leave
jmp
and
xchg
scas
es
jmp
dec
pop
cmp
loopne
lret
insb
dec
mov
mov
stos
insb
dec
mov
lret
xorl
push
jmp
adc
mov
in
lds
push
stos
push
xchg
cmpsb
stc
lds
sub
mov
call
testl
enter
mov
imul
ret
push
pop
mov
xchg
int
push
jp
fadd
sbb
bound
fisttpll
mov
movsl
in
lea
push
scas
adc
ss
scas
pop
movsb
pusha
mov
pusha
imul
push
enter
cmpsl
mov
in
jl
stos
pop
inc
filds
shrb
mov
lds
and
and
pop
mov
dec
addr16
hlt
lahf
test
shl
insl
out
lret
jg
sub
jle
adc
cs
mov
xor
stos
ret
inc
push
pop
inc
clc
rep
mov
arpl
lods
gs
xchg
icebp
cmc
inc
xchg
mov
fstpt
pop
pop
insl
push
pushf
shl
jae
repz
xchg
add
sub
decl
mov
cmpsb
test
test
fs
cmpsb
test
pop
xlat
fldt
test
pop
inc
and
lcall
push
mov
orb
inc
rcrl
cmpsb
test
add
push
lret
or
cmp
push
push
inc
mov
inc
sub
mov
and
imul
sub
xlat
cltd
hlt
xor
xchg
mov
jl
stos
neg
sarb
xor
mov
aad
push
ret
scas
xchg
sbb
dec
xchg
xor
jg
jecxz
lock
push
ds
adc
pusha
xchg
xlat
pusha
cmp
in
mov
xchg
movsb
shl
jb
les
cltd
fmuls
movsl
inc
aas
adc
jno
lods
inc
or
sub
xor
das
rorb
jle
add
push
add
das
mov
shll
add
test
loopne
push
lds
js
mull
dec
inc
sub
std
cmp
mov
xor
add
lods
mov
cmp
mov
jne
mov
cli
sub
lds
sbb
lret
loope
dec
push
outsb
mov
imul
sub
out
mov
xor
popf
push
mov
nop
cli
les
or
scas
insl
jl
outsb
fs
sub
jecxz
sarb
fadds
push
xor
cmp
je
jno
lahf
or
pop
insb
loopne
jecxz
cmp
andb
and
popw
mov
subl
dec
jae
sbb
gs
imul
mov
pop
mov
jno
rolb
dec
pushw
ret
push
cltd
lods
adc
mov
mov
incl
cmp
and
aaa
cwtl
test
xchg
and
test
add
xchg
je
cmpsl
je
push
mov
jp
fcmovu
repz
or
jae
inc
xchg
icebp
xor
pop
mov
int
lock
xchg
xchg
xchg
std
push
xor
outsb
mov
outsl
pusha
es
into
cmp
jl
or
ljmp
sahf
adc
bound
jns
push
xor
cmp
or
sar
dec
cmp
or
push
fs
inc
mov
adc
xchg
das
rcr
cmp
lock
jmp
lds
ret
stos
mov
ss
pop
loop
cmpsl
or
mov
mov
in
xor
rcll
dec
aad
aaa
je
out
lds
and
and
sub
push
adc
pop
jl
xchg
sbb
cld
out
cmp
out
sub
xor
inc
inc
xchg
inc
xchg
test
loopne
sahf
sub
cmp
rorb
or
orl
lea
mov
mov
jb
movsb
xor
scas
mov
inc
pop
cmpsb
dec
lock
sbb
cmpsb
or
mov
icebp
pop
mov
dec
aad
in
add
mov
push
les
pushl
pop
subl
cli
test
leave
jae
lods
pop
pop
scas
daa
lahf
push
mov
add
xchg
mov
inc
loopne
pop
in
imul
pop
sub
in
dec
mov
fildl
pop
xor
out
inc
test
cmp
cli
cmp
nop
jp
add
xchg
out
or
insb
cld
popf
int3
push
loop
mov
scas
dec
stc
in
jae
xchg
lods
xchg
push
inc
and
xlat
leave
inc
sbb
iret
icebp
push
add
popa
out
xlat
jns
push
jp
xchg
ljmp
jp
inc
cmp
inc
jno
inc
dec
aad
mov
inc
movsl
add
pusha
mulb
js
ja
test
adc
test
mov
push
mov
xor
inc
aaa
movsb
stos
test
shll
testb
mov
imul
sbb
out
shll
inc
ja,pt
test
loope
popa
sub
shl
push
cmp
xchg
sub
adc
pop
sub
xor
cmp
xlat
push
aaa
mov
dec
clc
test
adc
mov
pop
inc
pop
sar
inc
arpl
inc
or
mov
mov
inc
mov
lret
xchg
cmovae
stos
or
aam
xor
dec
mov
ret
mov
int
scas
popa
mov
pop
pop
mov
fidivs
fcmovne
or
dec
ret
inc
out
pop
call
mov
mov
inc
adc
pop
in
lret
fcomp
out
clc
adc
inc
or
mov
mov
cmp
mov
repnz
test
pop
hlt
add
dec
mov
inc
imul
insl
pusha
clc
mov
faddl
pop
adc
push
jge
imul
out
out
jmp
rorb
dec
repz
or
mov
xchg
sbb
mov
add
xchg
ss
add
lods
push
dec
sub
and
cmp
ficoml
inc
pop
jg
lea
shl
cld
mov
jno
adc
jmp
adc
sub
mov
mov
fdivrs
or
insb
mov
loop
cmpsb
shll
dec
and
hlt
push
xchg
out
ja
repnz
xor
inc
stc
adc
pop
out
mov
repnz
and
xchg
xchg
leave
decl
xchg
dec
rorb
dec
lock
les
stc
jmp
or
push
test
mov
add
and
mov
scas
push
adc
std
aam
inc
push
data16
xchg
lret
or
mov
rclb
aas
mov
mov
test
mov
test
cld
jnp
cmp
sbb
popf
js
dec
mov
xchg
mov
dec
xchg
mov
mov
enter
jo
daa
lcall
addr16
add
and
and
or
sub
test
pop
call
mov
jbe
lock
inc
dec
pop
xor
add
jle
outsb
lods
jnp
sbb
iret
xor
ja
insb
push
and
iret
sub
mov
dec
ss
add
mov
or
xchg
sub
add
sub
movsl
mov
stos
in
mov
sahf
fnstsw
stos
movsb
int
xor
fwait
ja
xor
sbb
and
pop
sti
xchg
xadd
mov
bound
push
outsl
inc
pop
cld
jecxz
mov
push
push
cmc
jns
sbb
mov
sbbl
stos
sbb
scas
mov
adc
hlt
dec
mov
jmp
jmp
push
pop
scas
in
mov
inc
xchg
sbb
lcall
test
fisubrs
mov
notb
lahf
sub
enter
adc
mov
out
testl
fistpll
lcall
mov
inc
int3
lret
push
rolb
test
ficoml
dec
sahf
inc
jno
sbb
xchg
push
aas
int
and
mov
pop
lcall
movsl
pop
add
mov
mov
lea
movsb
jo
adc
mov
std
inc
mov
rorb
ja
stos
mov
push
dec
fwait
cmp
push
xor
dec
jno
add
test
cmpsb
in
pusha
mov
mov
cmc
mov
adc
push
cld
es
cmp
pusha
inc
mov
ds
mov
xchg
xchg
push
sbb
xchg
push
and
push
ss
push
adcb
cmpsb
push
sbbl
mov
dec
test
inc
pop
jle
in
xchg
adc
pop
test
fwait
cwtl
pop
incl
xchg
test
enter
dec
lods
ret
lcall
mov
cli
cmova
lahf
scas
or
sub
daa
sarb
mov
jb
imul
mov
imul
jbe
mov
cmpsb
cmp
int3
mov
loope
sub
add
movsl
mov
xor
outsl
ss
cld
lret
enter
jp
cmpsl
test
push
arpl
jg
push
add
lods
jae
cmp
cmpsb
test
clc
lock
dec
scas
pop
gs
jne
adc
mov
xchg
xchg
xor
push
dec
xchg
mov
test
dec
push
iret
sbb
xchg
xor
pop
mov
js
xor
push
xor
icebp
push
inc
shrl
pop
jmp
ret
mov
outsl
subl
ds
cld
mov
mov
ret
adc
gs
mov
cmpsb
shrl
push
xchg
push
in
push
fwait
ret
in
stos
cmp
xchg
cmp
aaa
es
loop
icebp
lods
add
fidivs
int3
push
movsl
push
fscale
icebp
push
jecxz
call
and
out
out
mov
pusha
int
mov
mov
mov
cli
mov
dec
and
insl
xor
ja
gs
call
jbe
ret
mov
fdivrs
lock
mov
fwait
int3
mov
bound
mov
mov
push
bswap
mov
repz
push
cmpsb
or
dec
lahf
roll
push
inc
xor
add
data16
mov
mov
jne
cmp
pop
sbb
ret
add
test
mov
sti
aas
jg
stos
out
and
sub
leave
and
or
xorb
out
inc
ret
fcom
jno
mov
in
pop
dec
push
sbb
iret
xchg
pop
push
icebp
xor
or
xlat
jge
mov
ss
push
cmp
and
xor
add
cmpsb
out
out
xor
fcoml
cmp
jae
mov
dec
jecxz
pop
jg
ds
push
add
xor
push
inc
scas
mov
aam
loopne
fisubl
mov
in
cmp
pop
pop
sub
pop
sbb
push
mov
cmp
jg
sub
jne
iret
xor
in
stos
scas
shl
jo
lock
outsl
dec
sahf
shll
adc
pop
sahf
dec
sahf
add
bound
ret
and
mov
and
lret
jnp
jbe
loopne
pop
fdivs
lods
ud1
pusha
xor
xchg
adc
loop
mov
cmp
xchg
lret
bound
mov
cmpsb
imul
cld
fcmove
bound
outsb
mov
mov
mov
mov
inc
fs
jle
test
sti
cmp
mov
int3
and
ds
movsl
mov
mov
aad
jmp
rcll
add
insb
and
xlat
push
lret
psrlq
jnp
sbb
xchg
mov
adc
pop
lcall
pop
push
out
pop
inc
mov
cs
jne
mov
inc
icebp
inc
push
rcr
insl
jns
adc
jp
int3
ret
push
les
adc
sarl
push
mov
scas
pop
pusha
sub
imul
testb
das
outsl
and
mov
xchg
dec
rcrb
hlt
fidivs
cmc
fildl
mov
mov
leave
jge
inc
mov
imul
sbb
or
andb
sahf
rolb
cmp
sbb
mov
fwait
gs
or
ret
xchg
sub
sbb
scas
mov
cmp
or
jge
leave
es
mov
or
add
rcl
divb
inc
xchg
cld
mov
insb
pop
push
in
jp
filds
std
pusha
mov
or
or
lods
outsl
fcomip
mov
mov
pop
push
stos
dec
inc
mov
nop
cmp
icebp
in
inc
imul
fwait
sarb
loope
pop
xchg
cltd
mov
jb
mov
cmp
mov
jns
out
pop
add
pop
adc
je
mov
aas
imul
adc
inc
icebp
adc
out
dec
adc
test
push
push
cmp
cmpsb
sbb
add
icebp
mov
lds
into
push
sub
mov
call
lea
or
cld
js
inc
int
fcoms
inc
in
mov
out
mov
aad
leave
mov
clc
je
faddl
add
lock
xor
or
push
xor
lods
adc
in
or
mov
push
inc
insb
inc
xchg
push
pop
mov
rclb
xor
aad
icebp
sbb
jmp
sub
ds
std
call
sub
pop
fwait
and
test
shl
insb
push
orl
arpl
incb
in
dec
aas
mov
mov
pop
cwtl
lock
adc
xor
pop
in
repz
in
sub
hlt
fldcw
adc
sub
int3
mov
inc
hlt
xchg
divb
jl,pt
or
subl
bound
sub
lahf
je
inc
mov
dec
push
jecxz
xor
fs
imul
sub
inc
int
cmp
fsub
or
arpl
push
sahf
and
push
aaa
loopne
repnz
das
adc
mov
xlat
sbb
rcll
lock
jg
dec
sbbl
cwtl
stc
cmp
cli
andl
inc
ljmp
mov
jecxz
mov
sarl
mov
xor
xchg
clc
mov
cmp
mov
bound
int
cmp
cld
and
mov
push
sarb
push
mov
xlat
push
mov
or
push
inc
xchg
pop
cli
leave
jle
jge
inc
mov
int3
adc
dec
add
and
pop
mov
mov
jo,pn
mov
fstpt
cmp
ds
daa
arpl
push
stc
adc
mov
sub
mov
xor
shrb
lret
in
aam
pop
push
lds
mov
iret
add
add
jmp
and
mov
push
and
sbb
movsl
adc
nop
pushf
xchg
insb
call
fisttps
sarb
pop
faddp
mov
mov
mov
inc
xor
loop
adc
sahf
push
in
mov
push
sub
push
popa
lods
cmpsb
call
push
dec
lock
pop
dec
leave
ljmp
jg
icebp
or
cmp
call
decl
sub
loopne
addr16
lahf
iret
mov
xor
rcrb
inc
add
faddp
xchg
sub
shrb
push
cmp
in
aam
repnz
stos
movsl
ret
mov
gs
and
decl
notl
fwait
es
xchg
sub
jl
orl
push
xchg
dec
fisubrl
and
popf
daa
daa
adc
data16
ja
nop
sub
mov
cmpsb
sbb
mov
out
nop
daa
xchg
aas
sbb
sub
xchg
movsb
hlt
imul
pop
lret
adc
aad
mov
fs
jns
jne
lods
lods
jecxz
pusha
add
test
test
mov
xchg
stc
das
mov
into
pop
push
or
aad
in
xchg
pop
inc
in
iret
push
lret
and
inc
jp
mov
stos
xchg
andb
test
sub
sbb
das
loope
test
sbb
jns
lret
sbb
cmpsl
jle
pop
lret
cmp
inc
notb
jmp
mov
lock
mov
ljmp
iret
ljmp
add
and
adc
ss
ljmp
mov
loopne
push
jl
adc
out
in
hlt
pop
ret
pop
push
add
mov
ror
adc
sub
bound
notl
aas
pushf
jg
xchg
int
dec
fwait
je
cmp
push
sbb
cld
ss
and
adc
jo
insl
add
outsl
icebp
fisttpll
dec
sbb
bound
aas
mull
lods
notb
stos
mov
jp
inc
mov
or
aas
stos
pop
pop
loopne
cs
movsb
int3
stc
pop
out
enter
mull
dec
fcoml
rorl
sub
xchg
sub
or
dec
fiaddl
hlt
inc
sbb
es
cmp
push
out
lcall
cmp
mov
cmp
mov
push
popa
cmpsl
dec
les
mov
pop
in
aam
leave
ljmp
addr16
and
imul
xchg
ds
xor
scas
mov
call
cmp
and
add
push
add
mov
int
je
test
xor
out
lea
out
int
and
push
xchg
cmp
sbb
xor
pop
adc
fiadds
test
loopne
ret
loop
inc
sub
pushf
xor
xchg
sbb
sbb
mov
das
js
mov
push
pop
mov
mov
sub
movsb
pop
mov
insl
mov
and
icebp
ret
sbb
adc
xchg
repnz
jge
outsl
xor
out
jne
mov
dec
push
gs
outsl
push
repz
lahf
je
fs
inc
popf
js
fists
push
jae
xchg
mov
xchg
xchg
aas
inc
out
jne
add
jge
sbb
inc
out
imul
push
sbb
push
gs
inc
mov
sub
outsb
add
hlt
lcall
add
push
dec
sahf
xchg
or
fnstcw
dec
orb
mov
popa
icebp
sarb
jmp
mov
out
jle
rorb
xchg
int
adc
push
jb
clc
repz
or
shrl
repnz
dec
test
mov
cmpsl
inc
mov
xchg
sbb
cltd
aam
push
mov
mov
add
jnp
mov
or
mov
sub
jb
or
adc
inc
test
insl
xor
sub
add
mov
mov
cmp
mov
xchg
mov
adc
sbb
push
sbb
push
aam
and
div
pop
bound
and
mov
hlt
fdivl
clc
sbb
add
lods
loopne
cmp
adc
adc
clc
or
xchg
outsl
or
xchg
aas
jb
mov
lret
scas
test
lock
lahf
mov
orb
jge
in
mov
imul
leave
jo,pt
mov
in
add
xlat
add
mov
lret
xor
jmp
shl
mov
fbstp
or
xor
test
mov
data16
push
adc
mov
mov
push
std
setge
mov
roll
xor
pop
movsb
ja
rolb
das
sub
mov
sub
pop
dec
jge
pushf
outsb
pusha
adc
xor
xor
or
xchg
push
scas
jge
sub
ret
push
cmp
or
xchg
mov
jmp
mov
xchg
fmull
xor
loop
repz
imul
clc
or
cmp
sub
fstpt
lret
or
sbb
push
mov
mov
imul
clc
or
cmp
sub
fstpt
lret
or
sbb
push
mov
mov
outsl
call
aas
fsubrs
sub
cmp
or
sbb
push
mov
dec
test
lahf
cwtl
sub
sbb
or
mov
cmp
sti
sbb
ret
cmpsl
roll
lock
int3
sub
mov
and
inc
adc
bound
jb
adc
shlb
rclb
add
push
jo
pusha
inc
bound
bound
jb
or
fldenv
mov
cwtl
loop
repnz
push
or
sub
sbb
lret
pushf
xchg
mov
xchg
rolb
push
or
mov
or
leave
call
xor
shrb
dec
push
stc
aas
mov
loopne
jae
dec
add
hlt
scas
cmp
scas
and
pop
arpl
mov
jp
sbb
pushf
sbb
stos
lahf
sbbl
sbb
loop
fstpt
mov
mov
nop
ret
les
mov
mov
iret
jo
jge
out
enter
jns
fprem1
jecxz
repz
mov
iret
adc
andb
jge
stos
mov
or
cmp
adc
push
cmp
fimull
push
loopne
xor
es
xchg
shlb
nop
rolb
add
pop
and
jns
or
bound
jb
sar
mov
xchg
xlat
test
fdivl
inc
inc
je
add
es
es
cmpl
mov
xchg
addr16
and
daa
pusha
push
add
push
jb
jmp
test
xchg
mov
ret
and
repnz
and
pusha
inc
adc
bound
jb
adc
shlb
rolb
add
inc
and
pusha
inc
adc
bound
jb
adc
rcrl
ja
loop
sbb
pop
jle
mov
mov
pusha
aaa
lret
loope
ret
mov
in
lods
or
hlt
sti
mov
inc
data16
adc
popl
or
fcom
insl
push
mov
push
adc
mov
inc
insb
xchg
mov
les
subb
inc
sub
arpl
inc
ljmp
cs
fwait
insb
es
cmp
fisubrs
test
daa
fisttpl
mov
cmc
adc
movsl
dec
xorb
aam
mov
sub
ja
bound
push
test
or
movsl
ds
pop
sti
js
jmp
push
mov
lea
pop
mov
cmp
fistpll
ja
nopl
pop
loopne
out
cmp
insl
and
cmpsb
std
popa
dec
pop
dec
sbb
push
ret
xlat
mov
lahf
mov
xor
hlt
jnp
int3
xchg
inc
push
and
rcrl
xchg
popf
push
jns
jne
mov
xchg
mov
jo
cltd
pusha
cld
dec
ja
arpl
outsb
out
mov
mov
gs
popf
jae
mov
in
movb
out
adc
xchg
inc
pop
out
ds
mov
push
gs
imul
xor
add
xchg
push
mov
imul
add
mov
int
and
stos
xchg
jecxz
rcll
or
adc
ljmp
sbb
fildll
and
aas
movb
cmp
xor
cmp
addr16
cmp
add
lods
cmp
sti
or
cmp
stos
jns
fldt
test
leave
in
sbb
push
jns
dec
leave
in
push
mov
mull
jmp
rolb
adc
adc
dec
fsubs
rcrl
jo
jle
push
jp
gs
add
jmp
repnz
mov
arpl
test
outsl
add
or
inc
movsb
test
sbb
push
fwait
push
dec
ds
testl
rclb
lcall
xor
cmp
fistps
push
xor
cmpl
cli
imul
decl
mov
and
mov
or
jbe
adc
notb
out
sbb
shll
ja
add
andl
dec
jle
lods
dec
rcll
and
mov
add
outsl
into
and
mov
push
push
adc
mov
mov
in
cmc
mov
adc
shl
mov
lcall
jb
loopne
mov
int3
fisubs
or
imul
mov
cmc
lds
test
mov
in
rcrl
aas
dec
cmp
and
jae
mov
jae
sub
mov
pop
mov
inc
push
and
cmpsb
clc
cmp
popa
mov
lea
push
adc
jmp
xor
stos
xor
lea
in
mov
test
inc
cmp
out
insb
out
push
pop
popf
outsl
lret
push
fsubr
pop
repnz
sub
out
rcrl
mov
sub
fsubrl
ds
add
jbe
lds
inc
inc
fisttpl
mov
fincstp
ljmp
mov
stos
xchg
lock
mov
outsb
aad
pushf
aaa
pop
xchg
pop
ret
mov
xor
aaa
mov
xchg
add
adc
mov
jno
call
or
mov
in
xor
xlat
cmp
pushf
sub
xor
jno
in
cld
mov
pop
ljmp
adc
icebp
and
je
pushf
xlat
mov
cltd
lahf
shrl
push
jne
loopne
dec
jmp
data16
add
or
dec
cmp
in
insb
imulb
jb
xor
push
xchg
mov
aad
mov
pop
xlat
std
mov
mov
scas
lret
mov
shrl
insb
stos
pop
loop
push
cli
fstl
sub
cmpl
imul
jne
pop
imul
ficoml
pop
andl
pop
jmp
inc
push
loop
out
orb
cld
add
adc
movsb
push
and
call
add
mov
call
jp
adc
pop
test
cwtl
or
test
notl
mov
jecxz
pop
xor
loope
lds
push
mov
jle
jne
lret
dec
cmp
jns
bound
imulb
or
push
xor
cmove
out
push
in
into
sbb
daa
lahf
stos
adc
enter
ja
cwtl
lods
push
stos
fiaddl
push
add
push
hlt
sbb
adc
mov
mov
mov
inc
cmp
jecxz
push
js
sbb
sbb
sub
jge
mov
xchg
cwtl
dec
pop
mov
push
roll
add
outsl
mov
lock
jecxz
out
pop
jmp
ror
cs
pop
lock
cltd
sbb
adc
xchg
mov
xchg
lret
int3
inc
push
cmc
mov
icebp
hlt
movsl
push
sti
or
xor
fldt
gs
mov
jmp
test
push
or
add
lret
pop
pusha
add
sub
inc
push
imul
into
out
loope
ffree
bound
out
mov
enter
sbb
ja
adc
inc
into
pop
test
in
push
jnp
hlt
int
test
int
aam
jb
mov
inc
mov
cld
call
jle
fistps
imul
lahf
stc
and
mov
leave
es
adc
push
mov
stos
leave
pop
inc
repz
push
scas
ret
mov
into
movsb
pop
hlt
xchg
insb
mov
stc
push
adc
adc
xor
mov
pop
cmp
or
adc
xor
mov
and
lea
in
jmp
mov
subl
loopne
fucomi
cmp
cli
das
add
es
push
les
divps
faddl
inc
and
sbb
jb
ja
sar
add
cmpsl
das
stos
jne
xchg
mov
jle
aam
loope
cwtl
ds
scas
jmp
cltd
and
ret
clc
rclb
mov
pusha
sarl
xchg
pop
sub
push
dec
fsubl
mov
push
cmpsl
scas
jp
inc
stos
das
mov
in
push
aaa
inc
or
cmp
push
xchg
and
or
mov
loope
mov
out
lods
dec
imul
push
pop
hlt
adc
or
or
sub
sub
push
mov
and
or
aam
xorl
cmp
xchg
es
repz
sti
shlb
and
sahf
popa
mov
mov
ret
jg
push
lods
jne
sahf
arpl
adc
sbbl
lock
cmp
pusha
inc
icebp
pushf
arpl
fsubrs
sub
icebp
push
popa
cli
popf
and
pop
adc
xor
sub
fldcw
and
sbbb
pusha
and
outsl
adc
int3
addr16
lret
lock
jg
sbb
xor
or
jne
rcrl
sahf
fsubrs
outsb
xor
mov
sub
outsb
pushf
xchg
sbb
add
jl
cmpsl
mov
pop
imul
push
xlat
loop
cmpsl
out
std
jo
cmp
scas
xorb
pop
pause
push
ss
mov
popa
cmp
subl
mov
fwait
pop
push
stos
lods
iret
and
mov
out
cmp
push
in
jbe
xor
and
pop
dec
aas
inc
push
jae
inc
iret
fnstsw
mov
incb
icebp
fmuls
cwtl
push
xlat
fsubrl
xchg
cmc
add
not
cmp
mov
hlt
adc
les
cmp
dec
divl
jle
std
or
or
adc
pop
xchg
fsts
iret
or
insb
rolb
aad
dec
jnp
mov
jle
push
fcomi
mov
add
daa
in
jp
test
push
cmovnp
xor
cmp
mov
adc
jg
insl
sub
flds
xlat
xor
fildll
test
jmp
mov
sbb
es
pop
das
mov
sahf
mov
or
mov
aas
pop
dec
notb
cmp
xor
sub
les
push
icebp
sub
gs
jmp
cs
sub
mov
pop
lret
in
add
ret
dec
inc
addr16
faddl
and
mov
std
dec
cmp
fldcw
jmp
mov
out
sbb
test
dec
imul
pop
leave
sarl
jp
xchg
cmc
mov
cmp
push
push
das
dec
mov
jno
jmp
clc
imul
enter
jge
addl
and
sbb
cmp
jo
pop
paddusw
es
scas
xchg
jmp
cli
in
fildll
or
sub
and
jge
sbb
or
mov
push
daa
push
xor
les
pusha
adc
mov
and
mov
push
loope
ds
or
adc
lcall
sbb
lds
repnz
xor
icebp
and
int3
test
dec
xor
jge
out
cmc
jo
cmp
xchg
push
ficomps
jp
mov
jo
jae
rcrl
and
inc
jne
bound
cli
jmp
clc
mov
outsb
outsb
xchg
mov
push
mov
dec
push
xor
das
pop
bound
cmp
fadd
cmp
repz
movsb
mov
shlb
lahf
or
out
cmc
or
or
out
dec
sub
sahf
clc
loope
xlat
sbb
je
mov
cltd
std
mov
xchg
xchg
sbb
aas
int
int
push
outsl
and
sub
pop
shll
daa
pop
push
jne
jno
xor
das
sub
scas
pop
std
sbb
clc
lods
sbb
mov
pop
mov
jp
xorb
dec
cmpsl
sub
push
pop
lret
xlat
adc
mov
call
aad
xchg
fucomp
mov
xor
xchg
int
lcall
aas
fmuls
cs
fnstcw
adc
and
out
loope
jge
inc
jl
jmp
cs
push
add
jmp
and
fwait
imul
cmc
mov
or
mov
mov
shr
nop
mov
in
inc
xor
xchg
test
fwait
cmp
sub
xor
jecxz
jbe
push
cmp
inc
and
imul
push
iret
lods
mov
out
adc
and
jg
add
sub
mov
aam
imul
popf
push
xchg
jp
mov
cld
rorl
jg
xchg
dec
push
inc
sbb
mov
mov
mov
push
mov
popf
pop
sub
mov
ret
cltd
jg,pt
dec
push
iret
adc
push
ljmp
out
mov
scas
ja
sbb
aad
std
stos
scas
jo
jno
mov
push
jle
loope
xor
xchg
stos
fldenv
jns
pop
pop
jle
aam
cmp
hlt
inc
rcrl
das
cltd
dec
inc
jmp
movsl
and
mov
inc
inc
pushf
and
lret
push
aas
dec
push
cmp
ror
xor
cwtl
push
push
sub
inc
hlt
or
mov
aas
sub
inc
pop
arpl
daa
xchg
sub
pushf
and
ja
add
cli
sub
das
and
xchg
scas
pop
scas
or
je
popa
jmp
jle
sub
push
aam
mov
repnz
push
cwtl
and
addr16
mov
adc
mov
aad
movsl
test
aad
stos
jl
lret
sahf
add
lea
neg
inc
xor
xlat
mov
dec
mov
xor
int
sub
xchg
pop
dec
mov
push
pusha
icebp
xchg
or
inc
out
add
bound
dec
test
mov
dec
fwait
jle
outsb
mov
inc
mov
std
add
clc
and
enter
fnstcw
cmpsb
lods
mov
or
lret
pushf
pop
test
inc
scas
inc
icebp
in
loope
dec
popf
mov
pop
push
sub
adc
scas
mov
mov
repnz
neg
mov
adc
mov
lahf
push
fidivs
imul
fldenv
test
cmpsb
mov
lds
nop
popa
mov
or
push
mov
push
cmp
repnz
pop
add
rcrb
push
xor
or
mov
lret
xor
sahf
pusha
lods
cmp
inc
insl
and
fcoms
jg
int3
loope
push
sub
push
cmp
mov
cli
test
dec
call
mov
or
lods
cld
pop
mov
div
cmp
jne
pop
sub
pop
orl
dec
jle
cmc
mov
and
test
shll
xchg
addr16
out
stos
icebp
jp
mov
aas
stc
inc
rol
fwait
nop
sbb
mov
cltd
lds
cmp
dec
push
std
stos
imul
or
push
xchg
popa
and
push
mov
mov
insb
xchg
sbb
psrld
dec
hlt
dec
push
push
scas
adc
inc
jae
shlb
fisttpll
leave
iret
loop
mov
mov
out
daa
mov
mov
fcmove
test
inc
jge
dec
sub
push
aad
adc
mov
cltd
repnz
stc
std
test
and
shlb
cli
sub
popl
insb
or
mov
aam
push
push
inc
sbb
movsl
xor
cmp
loopne
xor
sti
adc
test
inc
or
xchg
add
out
pop
insb
out
addr16
mov
es
std
sub
clc
jge
cmp
aam
jmp
mov
dec
jmp
adcb
loop
les
mov
ds
ret
mov
push
pushf
sbb
in
xchg
dec
add
fs
sahf
mov
repz
mov
daa
cmp
push
xor
adc
xchg
addr16
into
scas
loope
xchg
inc
mov
out
or
dec
je
dec
addb
mov
xchg
and
das
xor
loopne
sub
es
cmp
or
incb
arpl
add
inc
call
mov
mov
jge
xor
jmp
daa
int3
xor
adc
sub
pop
inc
rcll
cmpb
adc
jmp
das
rcrl
xchg
push
push
lea
mov
mov
sbb
jo
scas
movsl
gs
hlt
mov
ja
cmp
outsl
inc
jp
xchg
movsb
jno
push
jo
pop
or
xchg
mov
sbb
in
pop
jecxz
lods
pop
cmc
mov
jne
xlat
and
add
lods
push
push
test
or
dec
mov
mov
dec
aaa
pop
mov
shrb
fdivr
adc
sahf
ficomps
push
bound
pop
out
sbb
xor
fsts
ja
jno
into
adc
mov
call
or
jb
dec
ret
xchg
inc
insb
rolb
sti
and
sub
aas
cmpl
arpl
test
jne
inc
fwait
mov
jbe
xchg
lock
outsl
addr16
jecxz
or
fcmovnb
repnz
insb
aaa
cmpsb
jns
pop
jnp
xlat
test
dec
or
adc
jmp
mov
movsl
jbe
test
push
or
lock
sahf
and
loopne
and
jl
mov
xorb
stc
iret
loop
push
and
test
bound
mov
sbb
xchg
mov
test
flds
dec
shlb
add
je
shlb
cwtl
je
pop
arpl
add
sti
lds
aas
ds
mov
add
aad
mov
xor
cmp
lock
movsb
push
adc
jne
push
adc
jne
je
in
push
inc
push
into
out
adc
repz
loope
xor
out
and
push
mov
outsl
sbb
out
testl
movsb
sub
inc
lock
rorb
jnp
aam
mov
inc
xor
push
cmp
or
fistpl
jp
mov
inc
push
sti
cmp
inc
psubq
into
out
test
cmp
fadds
xor
out
mov
cmp
inc
mov
dec
aas
jp
pop
xor
mov
dec
out
js
sbb
sti
add
shlb
clc
pop
jl
xlat
pop
jae
or
push
add
dec
push
mov
and
shrl
loope
ja
mov
rcrl
adc
cmp
ud0
or
daa
cmp
push
lcall
xchg
push
pushf
fcoms
in
and
ret
adc
inc
adc
mov
scas
pop
mov
imul
leave
sbb
cmpsl
mov
mov
aad
lcall
stc
sub
sbb
mov
sub
mov
sbb
mov
mov
dec
sub
adc
rcl
add
xchg
in
loop
pusha
pshufw
out
xchg
cmc
fisttpll
out
ljmp
lcall
mov
xchg
je
outsl
lods
cli
mov
lods
xor
movsl
push
cmpsb
add
inc
mov
flds
xchg
push
lods
sarb
mov
dec
insb
push
jle
or
fsubrl
push
fsts
mov
cld
shrl
push
mov
shr
pop
nop
and
icebp
jb
out
mov
lcall
jno
add
fldl
xchg
lret
push
sahf
mov
mov
nop
mov
inc
int
dec
mov
clc
in
fwait
aaa
es
dec
out
mov
add
mov
mov
adc
das
add
int3
fistps
dec
cwtl
mov
addb
sti
scas
in
ljmp
mov
jne
sbb
in
pop
jae
push
je
or
fldcw
int3
jb
rcrl
sub
and
mov
call
ja
inc
jbe
mov
mov
sub
fdivrs
xchg
das
mov
je
call
cmp
xlat
dec
push
testb
bt
pop
pop
fstl
pop
movsb
lds
push
loope
fisubrl
fisttpll
arpl
add
dec
call
nop
xor
fidivs
mov
xor
xchg
mov
pop
push
push
fucomp
imul
xor
das
imul
cwtl
out
jg
jae
stos
or
movsl
xchg
mov
inc
out
push
cmp
mov
pop
xchg
pop
and
or
fsubrl
or
cmp
adc
nop
add
ja
mov
jg
fdivp
mov
sbb
into
ja
xchg
cmp
sub
xchg
dec
pop
add
call
jbe
xor
cld
adcl
mov
pop
pop
sbb
pop
stc
push
cmp
stc
jmp
sbb
popf
in
jecxz
jo
jecxz
jg
push
dec
xlat
stos
js,pn
or
movsb
test
jbe
lahf
mov
insb
sbb
mov
xlat
xchg
je
test
adc
cltd
xlat
test
arpl
iret
ss
pop
pusha
mov
fimull
scas
pop
aad
mov
call
outsl
mov
jb
bound
xor
sub
push
cli
cmp
out
push
sub
decb
dec
jmp
es
cmp
sti
adc
arpl
minps
pusha
dec
insb
faddl
lahf
lret
bound
jl
fstpt
ljmp
xchg
pop
lret
shlb
mov
repz
xchg
xchg
pop
std
cmp
adc
dec
sub
cmp
xor
push
add
mov
cmp
arpl
lock
stos
outsl
ja
mov
add
jge
pusha
ret
daa
stos
xor
cmp
mull
or
jmp
lock
aas
mov
or
mov
xor
sbb
mov
xor
jno
cmp
inc
shr
xlat
jnp
pop
cmpsb
add
jb
mov
mov
lock
in
rolb
jge
cmp
mov
xchg
xchg
out
int3
ljmp
les
daa
adc
js
lock
jmp
xchg
leave
add
inc
cmc
xchg
inc
inc
adc
repnz
mov
stc
adc
xor
xor
je
pop
cmp
sbb
xchg
dec
and
push
addl
cmp
xchg
mov
mov
adc
lods
sub
inc
cmp
leave
sub
xchg
sbb
push
mov
jecxz
lds
push
xchg
jnp
leave
dec
aad
xchg
pop
inc
enter
push
outsl
lret
push
sti
inc
roll
pop
lods
outsb
mov
int
and
movsb
sbb
jne,pt
sub
or
push
adc
or
push
ja
mov
imul
xchg
pop
mov
and
loopne
nop
rolb
add
inc
and
pusha
inc
adc
bound
jb
adc
shlb
rolb
add
inc
and
pusha
inc
adc
bound
jb
adc
shlb
rolb
add
inc
and
fs
adc
bound
and
aam
les
nop
rolb
add
ljmp
fidivrl
dec
lea
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
mov
push
lea
add
das
add
pop
or
or
add
mov
out
add
add
add
add
js
stc
add
add
add
add
sbb
mov
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
mov
mov
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
jne
and
add
add
add
add
add
add
add
add
flds
jecxz
lret
add
add
popf
add
add
add
add
add
add
and
hlt
add
push
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
das
add
pop
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
jnp
adc
in
aaa
add
add
add
add
addb
add
xor
inc
add
add
add
add
add
or
pusha
add
add
add
add
add
and
faddl
mov
in
add
movsl
add
add
add
mov
push
add
lds
dec
add
add
add
add
add
add
add
add
dec
add
add
add
iret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
lret
add
add
add
and
js
imul
add
add
add
add
xor
add
add
add
add
cwtl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loope
mov
jnp
lret
add
sub
pop
add
add
add
add
xor
add
add
scas
add
add
adc
add
or
add
push
add
add
add
add
xchg
add
and
cmp
add
add
xchg
add
cltd
add
add
add
add
xchg
add
add
js
add
add
add
popa
add
add
add
and
iret
add
add
add
add
add
add
js
and
popa
add
add
add
add
push
add
add
xchg
add
jo
cltd
add
sub
dec
add
push
mov
add
xor
add
add
add
jo
in
add
add
add
add
add
imul
add
add
add
add
add
dec
add
ret
add
add
add
add
add
add
add
add
add
add
add
test
addr16
push
adcl
mov
es
rcl
loope
aad
imul
bound
mov
incb
int3
pop
mov
iret
cmp
ret
inc
inc
add
in
sub
cwtl
push
push
mov
stos
push
push
lret
testl
fdivrp
pop
call
or
or
lods
push
in
fwait
mov
xor
les
jp
repnz
jae
test
dec
les
xchg
inc
aas
clc
sub
into
and
repz
push
bound
stos
out
out
mov
fdivrs
mov
and
daa
or
adc
int
mov
push
je
cmpsl
add
scas
pushf
xor
mov
push
lods
std
mov
out
into
in
jno
inc
lds
fistps
jnp
mov
lods
cmpb
fs
insl
shrb
adc
fwait
cmp
imul
gs
sub
inc
xchg
add
jnp
sub
or
push
loopne
dec
rcl
push
pop
push
mov
in
jb
cmc
xchg
jnp
std
stos
or
xor
xor
mov
pop
decb
lock
out
lret
dec
pusha
popa
sbb
pop
test
pop
or
cmp
mov
call
insb
mov
fcompl
push
out
xor
fcomps
cmp
repz
cmpl
mov
out
sub
sbb
adc
pop
dec
les
outsb
repz
scas
pushf
in
pop
cld
arpl
fwait
cmp
mov
jg
xor
sub
clc
adcl
push
xchg
cli
xor
adc
cs
pop
xchg
stc
push
adc
in
add
add
ret
cli
icebp
pop
stos
pusha
mov
jmp
rolb
or
cmp
xchg
sub
mov
pop
decl
pop
push
or
xchg
pop
xor
xchg
sbb
pop
push
mov
addr16
movsl
pusha
jnp
or
sbb
dec
mov
push
repnz
sub
push
and
mov
push
xchg
jno
push
sbb
dec
fsubs
inc
dec
mov
inc
loopne
cmc
popf
push
and
sub
sub
imul
jno
or
out
scas
fcom
test
lea
dec
rclb
fsubl
and
fdivl
mov
jb
pop
mov
sti
insl
add
fiaddl
int
jno
jl
pop
jnp
adc
and
sub
daa
idivl
enter
sbb
adc
aam
fldcw
cmp
sbb
sub
iret
pusha
push
outsb
mov
movsl
out
cmp
sub
dec
mov
fbstp
jle
frstor
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
