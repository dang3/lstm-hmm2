call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
fiaddl
cmpsl
dec
fstps
scas
inc
adcl
inc
clc
pop
in
enter
mov
mov
push
xlat
cmp
sub
sbb
or
pop
call
push
js
cwtl
mov
pop
push
and
adc
sbb
push
lods
inc
enter
movb
adc
js
add
sub
ret
pop
xlat
xor
xchg
leave
and
add
cmp
lods
sahf
mov
xchg
xor
fwait
and
cs
mov
fcoml
cli
add
enter
cmp
ljmp
pop
daa
sub
outsb
mov
subl
jge
sub
test
test
data16
lret
js
sbb
call
add
fdivs
inc
push
bound
cwtl
loop
inc
jp
dec
cmpsl
addr16
sbb
dec
scas
or
jne
call
movsb
rolb
daa
cwtl
adc
ja
mov
add
jb
push
test
stc
cld
ss
fcom
jmp
fnsave
addr16
movsb
js
jg
dec
lret
push
xlat
cmp
adc
loopne
lock
sarl
aaa
mov
add
in
icebp
push
mov
je
gs
inc
nop
lea
ds
sti
add
punpckhbw
sub
dec
cmpsb
sbb
addl
and
and
add
es
in
mov
cmp
cmp
negl
out
pop
clc
pop
call
push
mov
mov
push
xlat
cmp
sub
sbb
or
clc
pop
call
push
mov
mov
out
pop
jns
pop
fwait
add
and
outsb
mov
adc
sbbl
mov
xor
stos
sarb
sub
ljmp
mov
fisubl
into
les
and
in
dec
jle
jne
ljmp
movsb
push
mov
inc
cmp
inc
pusha
dec
enter
jp
iret
xor
pop
scas
sbb
mov
cmp
jl,pn
je
push
sbb
xchg
ret
jle
aam
or
in
test
xor
xor
cli
dec
cmc
cld
repnz
dec
stc
or
ds
dec
jo
sti
push
push
popf
orl
jp
adc
push
lods
int
sti
shll
fidivs
push
adc
mov
jbe
fsubrs
add
pop
lea
sbb
xor
fmull
add
mov
pushf
xchg
mov
xor
and
sub
clc
xchg
jae
cltd
dec
push
sbb
out
subl
pop
sbb
mov
add
arpl
or
dec
nop
dec
lcall
push
movsb
jo
cmp
std
mov
mov
mov
push
mov
inc
cmp
les
pop
cs
repnz
cltd
int
ret
mov
jmp
mov
xor
dec
int
mov
repz
test
lret
sub
fwait
idivb
inc
mov
daa
push
stc
pop
fidivl
add
in
xchg
mov
adc
jnp
mov
pop
sub
insl
test
xchg
rorl
popa
mov
adc
iret
fucomp
add
sbb
adc
loopne
mov
mov
xchg
sub
vmovddup
in
push
inc
sbb
adc
mov
std
scas
xor
mov
and
test
cmp
nop
data16
out
mov
add
adc
jmp
mov
mov
dec
repnz
in
add
dec
jmp
and
jo
pop
aaa
cmp
shll
mov
mov
push
jg
test
adc
fnstsw
mov
testb
adcb
imul
divb
lcall
icebp
data16
inc
repz
jmp
imul
movsl
rcrb
aas
pushf
xor
add
aaa
cmc
je
jl
sub
jno
test
jae
add
sti
mov
fucomip
sub
stc
mov
mov
add
adc
xor
and
mov
jne
call
pop
sub
lret
fstpl
pop
in
lcall
sub
or
xorl
push
dec
adc
imul
push
xchg
in
jnp
adc
push
divb
mov
cld
call
ja
push
mov
sub
dec
dec
dec
std
repz
insl
cmp
imul
sub
inc
dec
inc
xor
aaa
jb
pop
pop
lods
add
push
add
dec
adc
ljmp
mov
pop
rorl
filds
test
xor
out
adc
mov
jae
push
mov
iret
insl
call
jno
in
outsb
into
and
divl
outsl
int
pop
aad
or
xor
cmc
cmp
rep
push
and
ss
push
mov
pop
loopne
rorl
inc
push
mov
test
stos
orb
fadds
mov
je
mov
jbe
mov
mov
cmc
add
cmp
mov
inc
fcmove
hlt
push
jle
lea
inc
and
insl
and
sbb
xchg
xchg
xchg
pop
js
ja
js
and
shl
call
insl
addr16
inc
push
clc
mov
int
aad
test
enter
mov
mov
cltd
mov
or
xchg
xor
or
fists
adc
sbb
adc
stc
or
shlb
sbb
pop
pop
push
or
fstl
repnz
mov
inc
xor
shll
stos
in
fmull
popl
add
cld
pop
sbb
mov
xchg
and
pop
jp
add
pop
popa
pop
or
jge
pop
sahf
lahf
mov
jp
hlt
shl
lea
jo
gs
pop
clc
lcall
push
and
push
xchg
pop
lock
aam
pop
outsl
sar
lock
add
in
negl
push
ror
lds
jbe
push
imul
insb
adc
xchg
adc
fs
push
lcall
movzbl
dec
pop
jl
adc
cmp
ret
xchg
add
jno
or
jnp
rol
pushf
mov
out
hlt
jmp
mov
addr16
ret
pop
sbb
jg
mov
dec
xchg
jmp
daa
lea
mov
jne
push
xor
lahf
sub
xor
sahf
cmp
cmp
shll
ds
push
jp
xor
mov
inc
inc
and
fcomp
les
int3
in
int3
jmp
xchg
pop
or
xchg
fsubs
frstor
sbb
pop
test
negb
into
adc
adc
push
fwait
mov
clc
repz
cmp
in
cmp
das
dec
xor
adc
mov
sahf
lds
jle
push
push
imul
push
xchg
adc
jne
xor
xchg
jae
mov
lods
sbb
sahf
ljmp
loopne
push
inc
ret
data16
add
jecxz
pop
daa
or
shll
scas
ljmp
nop
jp
cmpsl
jp
or
xor
cmp
es
dec
insl
pop
lock
imul
pop
lods
and
test
cmp
xlat
int
ss
inc
insl
jp
jl
pop
xchg
xor
fistpll
call
add
cmp
lea
jmp
out
sbb
in
mov
push
sbb
cmp
or
cmpsb
dec
ljmp
ss
fmuls
cwtl
loopne
cmpsl
inc
jg
in
xor
out
jmp
dec
je
test
sahf
call
outsl
add
sbb
jl
inc
lret
popf
divl
aam
popf
decb
cmp
scas
jae
mov
and
decl
jb
jge
xchg
loopne
or
jno
sub
mov
imul
mov
rorb
push
fiadds
into
aaa
les
imul
shrl
popf
push
cmp
into
sub
cmp
adc
lods
dec
jecxz
pop
push
sub
loope
xor
pop
cmp
and
nop
in
scas
popa
pop
cltd
inc
mov
and
inc
mov
lods
std
sti
lret
shrl
add
jp
and
pop
cmp
cltd
rolb
add
test
cmpsl
cmp
lea
sti
add
fisttpll
leave
cltd
or
adc
cmc
dec
shl
cli
dec
repz
js
lcall
xor
sbb
clc
in
and
jle
push
loop
mov
cmpsb
jp
movsl
test
sbb
mov
jae
push
bound
shl
sub
iret
cmc
or
setl
jae
pusha
cmp
sbb
mov
and
ja
ror
cvtps2pi
adc
sahf
mov
cli
cwtl
sbb
mov
daa
adc
mov
repz
inc
add
jns
fcomps
dec
xor
and
stos
out
xchg
push
into
push
push
sub
das
imul
cmp
fmuls
mov
cmp
loop
loope
mov
loope
and
xchg
repz
sbb
xchg
les
data16
xor
stc
inc
cmpsl
ret
lock
mov
sub
xchg
mov
stos
fsubrs
or
cltd
sarl
or
pusha
push
jg
pop
fsubs
test
stc
dec
pop
lea
insb
dec
arpl
scas
push
mov
incl
stos
sahf
xchg
clc
push
mov
rclb
imull
popf
and
dec
subl
pop
xchg
xchg
mov
cmpsl
push
fs
inc
gs
jle
pop
rcrb
pop
cmpsl
pop
mov
push
xor
loope
push
xor
jo
imul
lock
adc
out
inc
into
mov
push
out
pop
cmpl
jnp
loop
jle
push
gs
enter
dec
jecxz
xchg
out
mov
jbe
xor
sub
icebp
pop
daa
mov
cmp
shll
test
iret
in
rep
jno
xchg
jl
xor
push
cltd
jb
out
jl
jnp
cmpsl
push
jb
insl
cmp
xor
stc
iret
jge
adcl
mov
xor
mov
and
xchg
jae
bound
outsb
jb
stc
lea
cs
or
adc
push
dec
add
mov
aad
cmpsl
icebp
das
mov
mov
xchg
dec
jl
test
popa
pop
sbb
mov
sbb
push
add
mov
pop
pop
jle
addb
mov
inc
and
js
cs
cli
call
pop
pop
cmc
dec
pop
push
lea
push
push
adc
cwtl
inc
or
fidivrs
cwtl
sbb
push
cld
icebp
mov
out
push
mov
pushf
adc
stc
mov
push
stos
shlb
push
adc
pop
mov
imul
jb
mov
mov
lods
and
popl
movsb
push
aas
insl
sarb
jno
sub
jmp
inc
push
das
push
jle
adc
or
xchg
mov
push
xchg
fwait
mov
push
pop
pop
dec
dec
inc
and
mov
mov
push
lretw
repz
push
lock
push
int3
dec
jmp
dec
jns
dec
mov
bts
test
or
xchg
xchg
and
cltd
cmp
in
rol
lret
fcompl
jns
pop
in
nop
xlat
adc
fldt
sub
test
leave
mov
es
gs
push
mov
xchg
ret
in
mov
stc
lret
mov
dec
sub
fnsave
sbb
imul
es
into
fs
inc
pop
mov
xchg
inc
pop
in
outsl
adc
lcall
xor
nop
out
mov
in
cwtl
jmp
insb
jge
push
xor
scas
scas
add
mov
mov
cmp
inc
or
cmpb
ret
pushf
jmp
cmpsl
jnp
inc
mov
sbb
inc
imul
pop
cmp
fcmovnbe
and
or
ret
dec
inc
mov
and
mov
sbb
imul
cmpsl
ljmp
divb
push
push
jle
sub
cmpb
fbstp
add
les
adc
into
sbb
jnp
xor
test
and
loope
sbbb
push
popf
sti
and
add
pop
rcrb
cli
dec
jmp
cli
test
pop
int
sar
mov
sbb
sub
adc
outsb
xchg
lods
cmp
cs
es
imull
xchg
or
repz
dec
mov
mov
push
sbb
adc
addl
test
or
push
dec
mov
sbb
addb
xor
int3
sbb
pop
xchg
pop
xor
les
and
in
fwait
push
shll
add
shrl
jne
fucomip
loopne
cwtl
addr16
dec
jmp
mov
je
mov
shl
cmp
and
test
in
pushf
cmc
jecxz
inc
nop
lea
jbe
jge
jp
mov
nop
out
or
pop
mov
dec
and
sbb
mov
nop
movsl
cmp
jno
aad
cwtl
movsb
xor
sub
je
xchg
fsubl
cmp
inc
adc
es
push
out
or
adc
and
rorb
xor
pop
outsb
add
jge
pop
sub
xchg
insb
mov
or
mov
aad
icebp
jnp
insl
enter
imul
pop
sahf
loopne
or
test
cmp
push
cltd
and
or
dec
dec
pusha
gs
pop
mov
push
imul
stc
jns
cmp
mov
and
mov
and
push
push
aaa
scas
cmpsl
mov
clc
gs
mov
arpl
and
inc
pop
dec
jmp
and
pop
movsl
dec
negl
push
and
add
push
popf
xchg
arpl
push
add
pop
sub
fcoms
push
xchg
call
lahf
in
mov
jg
cmpsl
fmull
sub
mov
sbb
rclb
xchg
lea
lods
jg
scas
sbb
aas
jle
insb
jge
mov
pop
adc
lret
sbb
sbb
xlat
stos
mov
push
insl
rcll
lret
sub
sahf
andl
jg
test
mov
jo
rcll
out
stc
adc
pop
cmp
cmp
les
xlat
push
test
fmull
inc
xchg
aam
addr16
aas
nop
and
dec
ds
scas
int
ret
or
or
data16
xor
movsb
xor
jbe
outsb
or
sahf
lea
sahf
adc
lock
cmp
mov
lcall
xchg
xchg
xchg
paddusb
push
sar
jae
subb
lods
dec
sbb
jne
pop
mov
arpl
xchg
aaa
cmp
cmp
and
dec
sub
movsb
xchg
dec
mov
stos
in
adc
adc
dec
jmp
jl
and
sub
jl
test
outsl
mov
aam
test
jecxz
push
jl
cmpl
jno
je
cmpsb
pop
jecxz
xor
scas
pushf
testb
mov
jmp
xchg
loopne
pop
sub
clc
scas
sub
movsb
inc
dec
test
and
xor
xchg
stc
int3
call
push
xlat
inc
int3
cmp
cmpsb
jb
int
push
sub
loopne
pop
adc
jns
jg
pusha
mov
push
push
ljmp
aam
scas
dec
fsubrs
aas
and
jo
mov
mov
addr16
lds
arpl
int
mov
arpl
mov
adc
sub
sbb
xor
jns
ljmp
jbe
sti
push
in
adc
popa
mov
xchg
xor
inc
dec
xor
movsl
fsub
adc
sbb
xchg
push
xchg
inc
lret
imul
lock
in
movsl
pushf
das
push
jp
mov
xchg
xchg
dec
fstps
je
dec
sub
pop
popf
in
add
xchg
imul
xchg
sbb
cmp
cmp
pop
cmp
shlb
jle
int
icebp
jge
leave
outsb
pusha
or
int3
and
jbe
lret
ja
ljmp
pusha
nop
js
test
xchg
pop
negb
ljmp
mov
xchg
cmpsl
loopew
lock
add
and
or
sahf
arpl
adc
push
outsl
scas
loop
enter
sbb
mov
sub
lahf
adc
cwtl
pop
outsl
je
popa
inc
and
cs
ljmp
push
shlb
leave
mov
lds
outsb
pop
mov
cs
sti
test
pop
push
out
sbb
inc
lods
psubsw
cmp
push
test
cs
fs
pop
mov
xor
pop
jae
lock
jns
and
pop
out
mov
jb
add
mov
addl
jae
data16
fisubrl
push
test
jne
sbb
dec
movsl
push
movsl
nop
lds
jnp
repnz
ds
pop
jb
jmp
fsubl
jae
xchg
out
xchg
lock
dec
xor
jns
jecxz
push
jno
les
pop
push
js
je
lcall
loopne
sbb
insl
cmp
jbe
pop
push
and
mov
repnz
nop
inc
mov
lcall
dec
popl
icebp
cld
push
enter
ja
mov
mov
adc
cmpsb
icebp
add
lret
nop
xchg
jecxz
ficomps
out
js
cmpsl
push
xor
inc
iret
into
outsl
and
ficoms
push
mov
xchg
jno
fdivrs
dec
lds
cwtl
pop
rcrl
or
mov
outsb
out
shrb
daa
mulb
and
call
test
sub
or
ficoms
pop
pop
cmp
rcll
push
jmp
mov
push
sub
cltd
loopne
shr
jmp
stos
fsubrl
cld
repnz
sbb
cmc
out
movsl
push
loop
cmp
pop
and
pop
insl
dec
ret
enter
es
push
pop
push
jbe
in
xchg
pop
push
loope
mul
rcr
mov
out
cmp
pushf
push
mov
jbe
push
cmp
aaa
data16
movnti
into
movsl
mov
inc
xchg
mov
lret
jp
rorb
lret
cmp
jg
add
jb
add
mov
fldenv
or
fisubl
ss
and
cs
imul
cmp
daa
mov
enter
orl
mov
pop
pop
cmp
push
dec
pop
jl
push
out
inc
scas
nop
popf
addr16
xor
lahf
and
mov
sti
clc
js
shll
pop
jae
dec
cmpsl
jns
ds
fildll
dec
leave
addl
repz
int
dec
mov
inc
sub
mov
add
jnp
push
je
in
push
add
mov
mov
pusha
test
bound
in
mov
jne
pop
test
add
xor
in
xchg
ret
inc
repnz
adc
sbb
adcl
jmp
sub
or
pushf
sbb
mov
push
dec
mov
xchg
xor
lea
mov
pop
prefetch
inc
sbb
outsb
sbb
cmp
xor
sbb
pusha
pop
pop
mov
push
and
in
scas
invd
or
inc
lods
sbb
cmp
lock
cmp
xchg
ja
mov
dec
clc
adc
es
std
mov
ss
jo
mov
mov
or
adc
sub
cmpsl
adc
adc
test
ds
aaa
add
jne
add
and
add
das
scas
fidivrs
lcall
lahf
cltd
sahf
lds
jg
and
negl
sbb
sbb
in
xor
pop
push
mov
or
jge
ljmp
lock
xorb
jecxz
dec
scas
xchg
push
test
int3
inc
xchg
fisubl
in
lahf
mov
dec
add
cmp
jne
lcall
inc
inc
or
aaa
loopne
stos
push
or
cmp
cmp
jl
mov
pop
cmpsl
mov
dec
stos
pop
outsb
cmp
xor
and
mov
pop
lcall
outsb
adc
cmc
rol
std
jbe
or
xchg
push
lcall
addl
mov
aam
lods
aas
and
jmp
push
fwait
adc
sbb
nop
fs
adc
adc
popf
sbb
daa
lret
xchg
push
push
mov
dec
push
xor
or
icebp
add
mov
out
dec
cmp
mov
xchg
and
xchg
jl
mov
scas
push
movsb
push
jo
xchg
lret
into
jae
jmp
jmp
mov
fucomip
pop
xchg
fnstcw
or
mov
lret
lret
and
inc
test
inc
jno
int
add
adc
push
inc
push
and
mov
sbb
loop
cld
pop
sti
ret
in
mov
pop
adc
dec
pop
sbb
mov
jl
jbe
dec
dec
fsubr
mov
fidivl
and
mov
mov
xchg
lea
push
jge
and
or
push
roll
stos
inc
loop
pop
mov
adc
inc
lds
aaa
mov
shlb
xchg
inc
outsb
loopne
xor
mov
out
stc
mov
fwait
imul
add
inc
or
imull
test
jmp
add
xchg
mov
arpl
repz
or
add
pop
int
les
jns
jmp
mov
std
pop
in
and
cwtl
sbb
dec
lock
subb
adc
push
in
cwtl
adc
mov
aaa
or
fs
jbe
loope
and
dec
scas
mov
inc
mov
pushl
fcompl
fimull
sub
add
insb
mov
push
jmp
add
and
lods
arpl
push
cmp
js
mov
pop
shll
mov
xchg
mov
arpl
stc
mov
add
cltd
pop
shl
das
cmp
fadd
add
daa
loop
scas
cmc
fxch
call
inc
je
add
call
inc
enter
out
in
adc
lret
js
test
pushf
or
mov
xor
sbb
inc
push
mov
ficoms
pop
mov
sub
push
or
xchg
push
add
pop
lahf
cmpsl
sbb
lds
ljmp
sbb
push
xlat
cmp
sub
sbb
or
clc
pop
call
push
mov
mov
push
xlat
cmp
sub
sbb
or
clc
pop
call
push
mov
mov
push
cmp
sub
sbb
or
clc
pop
call
push
mov
push
mov
pop
xlat
sub
sbb
pop
clc
clc
inc
popf
fsubs
mov
mov
ja
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
xor
jle
dec
pop
jbe
dec
dec
jne
push
jno
stos
mov
int3
out
imulb
cmpsb
sahf
mov
inc
jle
jle
pop
jbe
push
ds
push
es
dec
in
stos
out
imulb
cmpsb
sahf
mov
inc
addr16
push
inc
jbe
push
daa
push
push
or
out
cmc
cmc
mov
shl
sar
test
add
xor
es
lods
out
adc
das
xor
xchg
repz
dec
repz
xlat
cmp
mov
sub
repz
bound
jle
pop
or
jo
push
aas
xchg
sbb
push
arpl
nop
add
mov
sti
xchg
and
pop
push
mov
dec
aad
or
push
enter
sub
bound
push
mov
addl
jle
lahf
push
dec
push
push
out
add
add
mov
dec
mov
jle
add
ss
pop
mov
out
cs
test
push
outsb
xchg
mov
dec
dec
jbe
push
and
push
es
ss
divb
cmpsb
xchg
sbb
data16
arpl
or
jae
lcall
add
jmp
sti
clc
outsb
and
sub
pop
jbe
push
pop
bound
push
in
scas
mov
int
lock
flds
add
adc
adc
ds
push
es
ss
into
out
imulb
cmpsb
sahf
mov
inc
jle
dec
pop
jbe
push
ds
push
es
ss
into
out
imulb
cmpsb
sahf
mov
inc
mov
mov
jb
stc
mov
inc
je
das
lea
cmpsb
jmp
adc
sbb
xor
push
push
cmp
hlt
mov
jo
aam
cmp
es
cli
or
push
fsubl
repz
lahf
pop
in
sbb
int
jns
xchg
sub
xlat
scas
sahf
pushf
jecxz
ret
outsl
lret
leave
rorb
xor
or
push
mov
out
mov
xor
pop
mov
jecxz
cld
stc
push
in
aaa
in
xor
xor
add
cmp
pop
pop
out
mov
or
sub
popa
fstl
pushf
fisttpll
jle
push
icebp
test
sbb
shll
sbb
fxtract
inc
and
js
mov
pop
cmpsl
jg
mov
push
mov
negb
jecxz
and
stc
orl
mov
sarb
pop
cmp
inc
xchg
sarl
iret
mov
and
or
test
in
jnp
xor
push
mov
jb
xchg
push
pop
lock
mov
inc
in
adc
in
pop
stos
jns
imul
scas
add
dec
in
jo
sub
cmpsl
and
sbb
popa
sti
add
sub
rorb
popf
mov
pop
xchg
stos
push
sub
add
pop
in
testl
imul
repnz
inc
mov
insl
mov
dec
or
aad
push
push
inc
mov
lcall
inc
enter
push
mov
jecxz
pop
inc
dec
flds
jno
mov
and
add
sbb
lea
xor
mov
fsubs
adc
inc
or
stos
js
inc
mov
dec
push
mov
dec
lods
mov
dec
dec
pop
rcll
ds
mov
repnz
les
and
lea
mov
jbe
enter
lret
mov
and
repnz
dec
shrl
cmp
sub
je
rclb
cmp
pop
mov
pop
pop
dec
out
dec
fsubr
adc
out
jae
pop
repnz
fadds
rcrl
pop
inc
xchg
sbb
mov
lcall
jnp
jbe
and
jl
lcall
rorb
adc
inc
sbb
sub
sub
mov
pushf
cwtl
add
or
rorb
push
cmp
loope
mov
pop
cmp
cltd
sbb
fwait
adc
pop
mov
xchg
vmwrite
jne
push
ret
fsubp
int3
cmp
sti
leave
imul
cltd
sub
test
std
add
mov
add
and
push
lahf
mov
push
xchg
or
xchg
push
fcmovbe
xor
movsl
mov
pop
pop
sbb
scas
daa
xchg
aad
jno
jne
sbb
or
push
adc
inc
mov
fsubl
jae
adc
mov
sub
xchg
bnd
mov
mov
add
cmc
rol
sub
das
inc
push
test
into
lds
xor
sbb
mov
inc
fwait
mov
stos
divb
sbb
jbe
cmp
cmpsb
jbe
push
fwait
roll
jno
adc
stos
mov
xor
pop
cmp
cmp
js
out
jb
pop
lahf
xor
in
xchg
in
push
and
jae
xchg
xchg
ret
mov
out
pushf
fsubl
push
mov
dec
insb
in
push
mov
ja
sub
daa
jne
and
lret
and
jb
call
xchg
xchg
testb
dec
stos
adc
shl
fwait
or
inc
add
push
lea
int3
mov
shlb
push
mov
lods
or
push
ret
cmp
sbb
and
outsl
sbb
test
fdivrp
sar
add
mov
mov
mov
jge
xchg
push
sbbb
lock
les
out
cmp
xchg
leave
push
stc
push
ss
push
test
sbb
sahf
out
mov
pop
shlb
inc
imul
mov
scas
cmp
and
adc
mov
inc
adc
mov
jmp
pop
iret
loopne
push
or
sub
pop
dec
repnz
or
xchg
dec
cwtl
sub
xchg
andl
mov
mov
pusha
mov
imul
insb
cld
int
inc
jns
dec
jae
stos
ret
sti
jns
dec
xchg
or
mov
rorb
mov
loope
adc
ss
mov
jns
data16
add
fucomp
aam
inc
xchg
iret
fwait
push
rcl
bnd
ljmp
and
inc
aam
and
dec
inc
test
fidivrl
mov
in
jae
jae
inc
cmp
inc
sbb
mov
ja
shl
mov
iret
mull
scas
pop
movl
enter
push
jl
cld
pop
or
fwait
mov
ret
repz
jnp
imulb
dec
adc
push
shrl
mov
jp
add
adc
lea
ljmp
inc
sbb
and
ss
jle
imul
lock
fldenv
pop
mov
aam
es
mov
sahf
addr16
inc
mov
das
stos
pop
push
scas
add
xor
jge
divl
sbb
sub
mov
jle
cltd
test
ja
xchg
dec
fyl2xp1
xchg
call
mov
sub
xchg
inc
negl
and
mov
adc
sbb
movsl
mov
aaa
xchg
jp
mov
xchg
add
cli
or
ja
inc
jp
aad
loope
hlt
pop
shrb
add
fdivl
mov
jns
in
jmp
push
test
mov
mov
pop
fs
lret
jmp
repnz
jns
sbb
loope
inc
or
pushf
xor
jge
les
push
movsl
pop
daa
sbb
movsb
aaa
lea
cwtl
test
or
xchg
inc
sti
mov
push
insl
lret
or
int3
out
adc
push
mov
or
cld
inc
push
mov
dec
dec
aam
xor
sbb
lcall
pop
ljmp
mov
cmp
xchg
clc
xchg
sub
or
nop
push
mov
gs
lods
negl
push
std
out
test
mov
cs
test
aas
sbbl
mov
bound
mov
popf
cld
repz
mov
test
sbb
mov
mov
push
sub
dec
sub
idivl
cmp
and
adc
stos
arpl
je
rolb
stos
pop
sbb
mov
daa
jl
and
add
testb
arpl
pop
ja
pop
sub
jmp
test
push
or
sbb
xor
push
out
rolb
pop
scas
xor
inc
fldl
pop
mov
mov
add
cld
loope
dec
inc
push
jae
cli
repnz
xorl
lods
sub
adc
fsubl
fmul
data16
inc
push
sbb
fcmovbe
sahf
mov
andb
and
dec
repz
jle
mov
imul
mov
mov
sar
jbe
enter
pop
loope
sbb
cld
pop
xchg
push
js
in
iret
ret
data16
mov
sbb
push
pop
fucom
xorb
push
and
das
dec
push
xchg
jg
and
pop
lods
jle
mov
pop
mov
movsl
mov
adc
dec
into
sbb
pop
aas
mov
popf
dec
ja
lea
ss
rcrb
mov
cmpsl
ljmp
test
sarb
lcall
les
movsl
push
push
icebp
push
mov
out
scas
leave
sub
clc
scas
roll
jbe
xor
int
mov
dec
push
sub
test
xor
jnp
jbe
inc
movsl
idiv
inc
add
push
aaa
dec
stc
adc
xor
add
xlat
lcall
mov
cltd
mov
int
pop
add
mov
cwtl
sub
mov
dec
aam
mov
dec
cmp
inc
daa
cld
in
push
xor
sub
sub
cmp
dec
jl
aam
and
outsl
cs
jmp
mov
pop
insl
mov
pop
test
hlt
or
mov
pop
enter
adc
nop
mov
insl
daa
mov
pop
xor
push
mov
scas
push
mov
inc
or
daa
jnp
add
test
iret
aam
pusha
sub
mov
add
test
shlb
xchg
mov
iret
cltd
aam
sub
addb
mov
fs
dec
mov
cltd
cmp
fidivrl
cs
bound
or
stos
sbb
rep
loopne
sub
arpl
lods
mov
and
mov
mov
adc
je
mov
xchg
aas
mov
xchg
stos
or
sbb
dec
into
push
xchg
mov
push
pop
push
es
into
fisubl
pop
push
aaa
cmp
xor
mov
inc
lods
push
test
mov
je
mov
xchg
mov
aad
js
pop
cld
adc
xor
cmp
mov
adc
jge
cld
inc
aas
stos
add
adc
push
fisubs
ficoms
iret
and
cmp
in
mov
dec
lret
ret
es
adc
inc
lods
imull
movsb
jnp
pushf
imul
pop
rcr
xchg
cmp
fdivrs
ret
xchg
inc
ficompl
pop
pop
fidivs
pop
mov
fdivrl
xor
xor
mov
into
dec
test
lods
test
inc
mov
movsb
sub
jae
pop
sbb
xchg
cmpsb
inc
xlat
int
xchg
out
jb
push
fstpt
in
xchg
dec
mov
orl
mov
add
shr
stos
ljmp
sbb
cltd
add
pop
adc
stos
dec
sbb
or
imul
and
std
movsl
mov
mov
mov
ja
outsl
cmpxchg
insb
stos
jge
enter
dec
repnz
mov
fwait
or
push
int3
mov
ljmp
pop
push
scas
sub
cmp
sbb
in
sbb
testl
ja
adc
fstps
add
push
jg
xor
aaa
and
inc
or
popa
cwtl
out
repnz
mov
mov
add
add
lds
popa
data16
outsl
jle
mov
adc
cli
inc
out
call
rcrb
icebp
bnd
sub
daa
cmpb
lds
jne
xor
mov
pop
lock
das
mov
outsb
and
mov
inc
or
push
cmp
mov
movsb
mov
pop
xor
int
insb
mov
mov
push
insb
pop
xor
mov
jns
int3
push
mov
mov
jae
mov
movsl
adc
hlt
inc
mov
mov
cmp
add
ror
out
dec
dec
adc
mov
cmp
adc
adc
js
orl
popf
xchg
sbb
xchg
xor
in
sbb
popa
push
ss
push
cmc
lds
fcoms
insb
test
lock
sub
jae
mov
jbe
mov
rolb
lret
dec
in
les
leave
rol
adc
out
ret
jl
mov
lea
call
mov
jl
lea
lds
fcompl
add
push
mov
add
js
ret
mov
mov
lods
fimuls
int
shrb
or
addr16
shrl
mov
data16
xor
imul
sbb
rol
pop
arpl
or
movsb
das
rol
pop
adc
fwait
jg
pop
sbb
dec
lock
roll
mov
mov
xorb
jnp
bound
adc
ja
ret
aad
ss
mov
ss
cmp
or
adc
bound
jecxz
je
rcll
movsb
cmp
mov
lds
test
or
cmp
mov
imul
xchg
sub
cld
shl
or
fs
xchg
mov
ret
test
sbb
fadds
outsb
xor
cmpsb
stc
mov
stc
lret
jecxz
xchg
sbb
xorb
enter
fwait
je
movsb
or
add
push
sub
push
frstpm(287
pop
jo
ret
scas
popa
push
pshufw
ljmp
jno,pn
push
sbb
and
xor
jmp
inc
stos
xchg
das
add
pushf
push
mov
cmp
fcmovbe
loope
adc
faddl
aad
mov
int
jno
adc
scas
ss
or
cmp
and
add
in
xchg
pop
and
loopne
test
push
xchg
pushf
inc
mov
stc
mov
push
out
mov
xor
scas
scas
jbe
call
movsl
fwait
pop
cwtl
add
sub
mov
xor
mov
sub
loopne
jg
jns
jns
lea
js
mov
lods
push
out
push
js
les
movsb
fbstp
leave
mov
enter
fisubrs
jge
cmc
repnz
cmp
out
sbb
adc
in
jmp
ja
jne
loope
xchg
and
and
int3
enter
mov
push
dec
sub
ljmp
cmp
sbb
cwtl
sub
out
mov
pop
shll
movd
cmp
fisubs
xor
loope
cltd
dec
rorb
pop
outsl
add
cmpl
or
mov
imull
pop
push
movsl
je
push
add
jg
insb
imul
test
ficomps
push
mov
add
test
mov
sbb
aad
mov
push
mov
or
push
sub
push
lahf
sub
mov
cli
arpl
cld
push
dec
btc
arpl
push
sub
xor
rcl
add
sarl
mov
xchg
or
inc
mov
adc
es
xchg
and
add
or
shll
imul
popf
adc
mov
push
pusha
push
repnz
loopne
int3
inc
mov
rcll
mov
dec
adc
js
fisubrs
jb
jmp
shlb
pop
mov
mov
into
cs
bound
fdivrs
or
xchg
outsb
lds
adc
xchg
xchg
cmc
sub
xor
mov
inc
jp
mov
das
pop
mov
pop
pop
neg
pop
cmp
sbbl
add
add
ss
pop
and
fnstsw
repnz
mov
add
jae
movl
rcll
bound
insl
sarb
or
mov
push
dec
into
jmp
loope
jge
lahf
sahf
add
push
sub
movsl
jb
ljmp
push
ss
mov
repnz
cmp
adc
incb
out
or
or
lock
popa
adc
inc
sbb
pop
aad
jae
mov
cli
inc
add
in
out
leave
mulb
and
sub
into
int
stc
pushf
fidivrs
jnp
ja
fnclex
gs
mov
icebp
mov
cmpsb
insb
sub
fadds
movsb
fbld
jbe
daa
fsubrl
cmp
dec
dec
repz
jecxz
cmp
loop
test
mov
test
mov
ja
loopne
fnstcw
xchg
mov
push
mov
pop
adc
mov
fdivl
dec
mov
std
push
push
add
mov
lcall
add
iret
push
fisubl
fimull
jge
add
mov
and
ret
or
add
xchg
outsl
or
adc
cmp
aaa
jbe
or
lcall
xchg
fs
mov
adc
adc
fldz
insb
repz
pop
ljmp
outsb
push
ja
test
cmc
insl
mov
mov
mov
cs
iret
sbb
and
push
popa
std
mul
in
mov
lcall
push
pusha
lock
dec
cmc
stos
mov
mov
inc
xor
xchg
xchg
adc
sub
ja
ss
sahf
out
aas
insl
xor
sub
pusha
jl
loope
mov
adc
mov
xchg
jne
dec
mov
fiadds
lret
pop
sahf
lods
push
adc
inc
and
repz
xchg
imul
js
add
out
push
in
fucomi
push
and
loop
into
cmpsb
fstl
pop
mov
je
xchg
pop
cwtl
and
add
pop
loop
inc
loopne
fsubrs
int3
or
callw
mov
or
cs
mov
pushf
cmovno
scas
xchg
mov
rol
pop
fdivr
testl
sub
mov
mov
push
jmp
sbbl
mov
jae
lods
shll
cwtl
jbe
pop
gs
int3
jae
andl
mov
lds
mov
adc
push
lods
shlb
push
fcmovb
add
inc
lods
clc
out
or
mov
movsl
sarb
out
adc
sbb
scas
push
cmc
sbb
pop
mov
test
test
loopne
adc
mov
add
fstpl
cli
or
lcall
dec
jnp
sbb
mov
dec
jecxz
jl
addb
das
cmpsb
xor
sahf
lret
fxch
scas
pop
popa
dec
sbb
notl
fsts
or
into
pop
fildl
push
aas
and
pusha
and
or
into
bound
dec
xor
mov
subb
sub
orl
leave
dec
test
pop
and
call
ja
dec
icebp
repz
pop
subl
cmp
pop
mov
pushf
shrb
xor
sbb
daa
mov
jge
inc
dec
les
jns
movsb
dec
dec
push
jecxz
sbb
ljmp
push
inc
daa
xchg
xchg
call
sub
js
lea
dec
jno
test
call
ret
cmc
jl
cmp
pop
pop
in
inc
imul
bound
movsb
mov
into
adc
call
mov
xchg
ret
cmp
mov
sub
lahf
shll
or
push
jecxz
negb
scas
pop
ret
and
xor
stos
sbb
in
je
fadd
sbb
push
loop
insl
dec
or
mov
cmpsb
ret
je
sub
scas
imul
mov
xchg
sbb
fisubs
push
ja
jmp
mov
mov
dec
in
aaa
subl
xlat
push
push
and
fisubs
push
rclb
adc
inc
fcmovbe
xor
mov
xchg
adc
xchg
pop
mov
mov
pop
mov
inc
imul
sbb
out
sub
mov
pop
xrelease
mov
xchg
adc
imul
xlat
sti
jns
sahf
rcrb
or
pop
lock
lock
and
or
fsubr
mov
fdiv
pop
popa
xor
fadds
mov
ljmp
xor
punpcklwd
push
aad
sub
push
ret
cmc
int
stos
movsb
mov
lcall
lret
icebp
hlt
sti
insl
mov
xchg
sbb
and
dec
jae
add
aaa
orl
mov
mov
iret
and
dec
loopne
daa
rcl
addl
xor
mov
or
imul
aad
cmp
movl
adc
or
adc
in
add
loopne
leave
mov
xchg
inc
std
test
cmpsl
ja
sbb
pop
sbb
es
push
into
mov
xchg
jl
fstps
inc
cmpsb
scas
sbb
add
cmp
xor
xchg
xchg
adc
test
adc
pop
or
xchg
int
inc
jg
nop
cld
xchg
jns
cmp
dec
lods
sub
ret
aam
sbb
xchg
pop
rolb
sbbl
test
jecxz
jnp
std
jo
push
sbb
xor
xchg
fndisi(8087
jl
in
push
popf
inc
stos
sbb
out
repz
addr16
jmp
xor
xlat
push
or
jns
or
testl
lea
and
rolb
out
inc
jge
jb
push
jno
mov
xchg
pop
mov
stos
adc
mov
xchg
mov
inc
fwait
ss
sahf
sub
or
out
push
xor
loope
cli
xor
jg
inc
int3
cmp
cwtl
mov
xchg
fidivl
mov
dec
popl
dec
pop
mov
cmp
bound
nop
sbb
enter
jno
ljmp
push
flds
lea
gs
sub
int
in
pop
dec
jae
or
data16
xor
aas
dec
movsl
sar
xchg
test
repnz
lods
jle
sub
cmp
pop
mov
out
bound
pop
out
adc
out
pop
adc
xchg
je
pop
ljmp
pop
add
sbb
pop
jbe
push
ds
push
es
ss
into
out
imulb
cmpsb
sahf
mov
inc
jle
dec
pop
jbe
push
ds
push
es
ss
into
out
imulb
cmpsb
sahf
mov
inc
jle
dec
pop
jbe
push
ds
push
es
ss
lret
imulb
cmpsb
scas
mov
inc
dec
push
js
pop
jbe
push
ds
mov
sahf
ss
add
fiadds
jno
popa
dec
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
in
hlt
cmp
dec
aam
stos
or
pop
loope
icebp
ds
inc
cli
push
fisubl
xor
add
adc
in
hlt
jp
dec
aam
movsb
sub
fs
and
xor
add
adc
in
hlt
mov
movsb
sbb
fs
dec
stc
push
fmull
jp
lods
cs
cmp
and
outsl
mov
xor
jne
shrl
dec
mov
mov
xor
xchg
adc
rorl
add
add
or
pop
stos
cli
movsl
ret
stc
cli
jp
fs
ljmp
mov
pop
mov
dec
push
pop
movsb
movsb
or
cld
xchg
outsl
fs
xor
pop
aaa
add
push
out
mov
in
movsl
pop
sbb
out
leave
mov
test
flds
pop
sbb
xor
pop
gs
jnp
pop
sbb
push
stos
mov
ret
add
jl
mov
ds
movsb
sub
fs
and
xor
add
adc
mov
es
enter
loope
aad
and
outsl
cmp
inc
incb
out
xchg
cmp
push
add
adc
inc
in
mov
lea
nop
lcall
mov
test
xchg
sbb
cli
inc
lret
and
xor
add
adc
in
hlt
jp
dec
aam
movsb
sub
fs
and
xor
add
adc
in
push
sub
aaa
lock
dec
sbb
cmp
movsl
add
lods
dec
test
test
jl
pop
and
js
insb
mov
or
fs
fwait
cmp
sti
ret
push
inc
mov
stos
sub
insb
ret
scas
fists
adc
imul
jo
jge
cwtl
in
rorb
mov
mov
mov
mov
xchg
jbe
adc
loop
xor
mov
loop
lock
aas
push
clc
imul
inc
loop
mov
test
fisubrl
pop
sub
jo
cli
hlt
ljmp
adc
inc
lods
fwait
xlat
jno
mov
dec
add
xchg
adc
fcoml
mov
loope
sub
cwtl
and
push
jns
and
insb
xor
pop
adcl
push
push
pop
adc
push
fs
lods
aam
push
mov
sbb
pop
xlat
ljmp
pop
js
stos
out
aam
inc
or
inc
out
sbb
sbb
cmp
movsl
out
test
or
sub
std
inc
pop
movsl
mov
scas
mov
inc
sahf
sbb
jno
and
jge
dec
insb
push
iret
or
adc
mov
pushf
ficoml
mov
or
push
sbb
nop
jo
xchg
adc
push
sub
mov
out
fsubrs
in
inc
pop
jns
lahf
adc
cmp
xchg
mov
imul
cwtl
faddl
cwtl
cmp
lcall
ss
aaa
sbb
mov
xchg
jecxz
stos
pop
mov
dec
daa
fwait
outsl
add
pop
xchg
pop
pop
and
pop
in
out
imull
mov
imul
sahf
push
and
insb
cwtl
imul
popa
sbb
fldl
pop
sub
pop
mov
xlat
repnz
cmp
and
sub
pop
fisttpl
int
mov
jg
or
and
jg
inc
mov
clc
out
dec
mov
ds
adcb
jmp
ljmp
imul
xchg
or
xchg
dec
mov
sbb
das
decl
push
dec
in
leave
in
mov
pop
jnp
lret
mov
mov
adc
loopne
fwait
xor
test
sti
mov
test
inc
mov
jns
imul
shlb
sub
lahf
xchg
imul
stos
out
fldl
nop
sub
js
xchg
and
ret
jle
imul
add
lahf
mov
aad
leave
and
fsts
add
jne
frstor
imul
stos
xchg
jo
aad
test
pop
outsl
nop
lock
adc
cmp
jb
mov
insb
and
sahf
jl
mov
and
gs
xchg
and
loop
or
mov
pop
xchg
imul
leave
mov
repz
pusha
movsl
xor
movsb
inc
mov
enter
sbb
add
dec
lret
pop
fisubrl
inc
lahf
inc
push
mov
movsb
pop
mov
in
gs
cmp
les
aam
out
insb
add
add
fwait
mov
mov
lret
adc
mov
shl
es
cs
push
es
xor
sbb
movsb
xchg
mov
mov
jns
push
mov
sti
loope
cmp
dec
stc
or
push
push
mov
in
cwtl
stos
xor
jmp
stc
mov
cmp
or
nop
shlb
aas
sub
in
mov
add
fbstp
aad
push
lret
scas
jl
sub
test
add
out
cmp
or
int3
mov
push
pop
rcrl
pop
mov
loop
jg
sub
fs
in
cmpsl
orl
leave
lret
xlat
sbb
cmp
jg
in
inc
test
and
xchg
jns
ss
faddl
xor
cmp
sbb
idivl
pop
cmp
inc
test
es
and
sbb
push
pusha
loop
cmp
sbb
xchg
mov
clc
push
mov
aad
arpl
cltd
lds
addl
adc
mull
or
cmp
jle
daa
add
sbb
in
sbb
in
icebp
push
aam
hlt
mov
xor
mov
cmpsb
adcl
jle
or
mov
fcmovbe
sbb
cwtl
sbb
sahf
push
and
ret
loopne
faddl
mov
push
and
in
inc
scas
pusha
sarl
and
jge
rcrb
pop
scas
int3
fwait
inc
add
inc
push
jl
mov
xchg
mov
arpl
dec
mov
and
lcall
subb
in
in
and
popa
sbb
shrb
push
cwtl
mov
roll
mov
cs
cmp
add
pop
imul
push
cli
shr
aam
dec
dec
sub
neg
or
adc
jb
mov
mov
or
inc
fmuls
adc
leave
pop
scas
sbb
test
inc
or
outsb
ss
ja
enter
popa
fcmovu
pop
jno
and
lret
jb
mov
jg
out
je
std
es
rol
stc
push
mov
sbb
jge
xor
push
jge
lock
add
test
mov
subl
mov
pushf
cmp
xchg
mov
push
shrl
fimull
mov
lret
xor
loopne
cmp
xchg
jns
or
cmp
mov
pop
icebp
fistps
xorb
adc
mov
mov
mov
loopne
xor
lock
leave
repnz
cmp
cmpb
es
lds
pop
fnsave
ficoms
cs
dec
inc
neg
incb
push
cmp
adc
dec
out
push
nop
out
push
orb
outsl
mov
cmc
inc
in
mov
mov
daa
stos
lret
loope
stc
bnd
hlt
jl
mov
inc
out
cmp
fwait
movsl
dec
out
xchg
ret
xchg
xlat
dec
roll
iret
push
sub
add
mov
dec
mov
mov
pop
in
adc
test
loope
fwait
shlb
jle
push
dec
jo
adc
stos
cmp
out
xchg
mov
add
repz
pop
out
daa
lcall
adc
pop
sti
and
push
mov
imul
mov
adc
insl
add
jne
mov
in
cmp
mov
pop
cld
dec
out
fisubrl
pop
jnp
mov
mov
sub
jno
mov
aaa
test
pop
ljmp
lret
mov
adc
pop
inc
cmp
in
in
add
and
aam
sbb
push
or
mov
rcrl
mul
xor
mov
daa
aas
rclb
cltd
into
popf
sbb
in
sbb
xchg
sub
dec
scas
pop
dec
out
lret
mov
loope
mov
jg
dec
pop
lds
pop
add
pop
aas
inc
sub
aas
stc
and
mov
dec
mov
into
call
jg
jb
add
inc
cld
push
repz
mov
aas
pop
adc
js
out
pop
out
aas
dec
std
pop
jns
in
push
cmp
adc
pop
stc
lret
cmp
jmp
pop
dec
cmpsl
push
xchg
data16
adc
gs
cld
js
cmpsb
ficompl
cs
popa
cmpsl
rcll
pushf
insb
movsb
pop
and
dec
and
das
jmp
pop
pusha
out
add
leave
outsb
fsub
inc
loop
mov
xor
xor
push
in
xor
inc
cltd
dec
js
jnp
in
mov
cmpsl
ret
std
js
arpl
add
in
cltd
jecxz
mov
int3
cmpsb
sbb
aad
stc
in
xchg
pop
pushf
push
dec
sbb
call
test
xor
sti
imul
out
lret
xchg
cs
dec
push
out
adc
mov
cmp
add
push
mov
dec
push
shrl
andb
or
mulb
icebp
sub
out
and
sbb
cmp
push
fwait
mov
sbb
je
push
cld
leave
subl
arpl
inc
fcompl
test
jl
xor
cmc
mov
scas
test
test
inc
or
pusha
mov
push
add
jge
pop
mov
and
shlb
lods
jmp
push
mov
mov
sub
pop
xchg
out
icebp
adc
xchg
sbb
sub
lret
mov
popf
push
push
inc
inc
xor
pop
imul
xor
loope
mov
sbb
add
cld
rcrl
push
cmc
shrb
mov
push
psllq
cmpsl
lock
pop
stc
mov
mov
sub
pop
sbb
dec
popa
xchg
xorb
mov
mov
push
sub
addl
pop
sbb
pop
push
dec
jecxz
scas
cwtl
divl
sbb
and
fcoml
adc
scas
mov
test
push
inc
jmp
xor
leave
push
jae
test
mov
jo
ret
and
xor
inc
leave
mov
dec
scas
dec
test
loop
cld
jmp
xor
pop
mov
nop
cmp
es
xlat
push
xchg
arpl
or
repnz
adc
push
dec
push
add
ljmp
mov
mov
scas
aam
jge
xor
repz
push
add
pop
test
mov
and
icebp
shl
cld
and
repnz
mov
fists
call
inc
push
das
arpl
inc
int3
push
or
cmp
xchg
mov
loop
push
jno
push
xchg
push
mov
jg
inc
inc
aas
dec
outsl
pushf
out
xchg
mov
lock
sbb
xchg
jp
mov
xchg
jbe
mov
or
xlat
mov
in
pop
scas
sub
gs
xor
ja
nop
cmpsl
dec
push
jg
gs
cmpsl
jmp
adcl
or
mov
xlat
out
clc
pop
sub
add
bnd
pop
push
cli
jb
inc
sbb
icebp
lds
call
push
xchg
xchg
mov
or
push
push
cmp
ret
pushf
hlt
arpl
bound
adc
enter
mov
shr
pop
or
stos
mov
lods
jp
mov
mov
push
mov
cmp
mov
aad
add
sete
punpcklbw
inc
push
enter
mov
test
mov
sbb
enter
pop
sub
mov
pop
jmp
pop
fimull
in
loop
mov
fistl
adc
jmp
and
pop
inc
push
inc
test
mov
pusha
ret
push
mov
dec
es
dec
mov
test
mov
cltd
mov
xchg
add
xchg
xor
xchg
push
sbb
imul
test
sub
mov
mov
cmp
unpcklps
outsl
adc
mov
mov
ficoml
add
rcl
int
aam
cwtl
xchg
lods
add
xchg
flds
pop
test
mov
popa
pop
mov
test
out
das
clc
sbb
in
xorl
stc
fdivrp
pop
lods
outsb
dec
sub
rorb
add
or
or
cmpl
push
push
gs
or
xchg
in
jl
in
lods
jle
sub
ret
jne
add
enter
mov
pop
and
ret
adc
or
mov
cmp
sub
test
ja
xchg
mov
in
xor
jnp
pushf
xor
pop
mov
pop
sbb
ret
xchg
xchg
dec
mov
jno
and
sub
push
rcrb
aas
push
cli
cwtl
xchg
mov
ret
sbb
test
cmpsb
xlat
sarb
test
mov
incb
scas
nop
sub
dec
fidivrl
addr16
cmp
std
loope
sbb
outsb
sbb
pop
push
and
push
xchg
shll
movsl
ret
mov
and
loop
ss
mov
out
push
sbb
aas
inc
add
pop
adc
mov
add
test
xchg
pop
pop
mov
bts
xchg
ds
push
insb
push
push
pop
repz
xchg
sub
push
scas
xchg
outsb
xchg
pop
adc
sbbl
fbld
out
lcall
cmpsb
dec
xlat
mov
xchg
insb
pop
test
xor
imul
sub
xor
push
add
int3
ret
dec
iret
int
std
push
adc
aaa
sub
mov
das
inc
xchg
jp
sarl
add
mov
push
sbb
lds
popf
or
je
out
daa
aaa
mov
cmpsb
pop
in
xor
and
repz
aam
das
mov
in
mov
sti
into
dec
jo
je
enter
jae
aaa
icebp
std
add
jnp
push
insb
sub
inc
and
jle
sbb
sub
pop
cwtl
lods
mov
lret
adc
push
sahf
mov
scas
add
mov
pop
sub
das
mov
xor
mov
out
xlat
sarl
leave
xchg
imul
fsts
pushf
call
sbb
mov
inc
pop
insb
imul
mov
cld
push
pop
lcall
sbb
imull
add
add
dec
xor
lret
inc
cld
sbb
push
fsts
sub
push
aaa
xchg
sub
pop
outsl
ficoms
inc
jg
xchg
fcmovbe
pop
or
mov
xor
test
in
xor
cmpsl
jecxz
mov
in
xor
pop
inc
pop
jne
xorl
add
sub
mov
push
push
cli
dec
xor
xor
iret
rcr
push
push
push
iret
mov
aaa
mov
enter
add
aaa
add
jno
out
jnp
dec
shrb
push
sbb
mov
jnp
cltd
xchg
mov
dec
xchg
out
and
aaa
out
cld
dec
jmp
mov
adc
sbb
add
push
push
mov
in
dec
sbb
std
jmp
inc
sar
hlt
bound
out
shrb
xor
addb
orl
ret
popf
hlt
jbe
cmp
push
int3
mov
in
dec
sbb
jbe
les
dec
clc
out
fcmovb
cs
dec
push
xor
mov
nop
mov
mov
mov
jne
repz
enter
inc
ja
hlt
lret
repz
hlt
iret
filds
in
and
or
icebp
test
lock
testl
sti
dec
cli
jle
rcrb
jle
gs
stos
lcall
sub
or
jg
inc
in
ret
mov
leave
cmp
mov
sbb
daa
sub
pop
pop
dec
enter
ss
fdivr
add
add
inc
or
gs
stc
bound
in
push
ss
mov
cmpsb
clc
mov
push
mov
add
mov
inc
in
in
data16
ja
pop
and
cmpsb
std
mov
mov
out
jmp
push
and
lods
in
xchg
xlat
jg
and
push
pop
cmpsb
cmp
inc
push
loopne
cmp
jns
out
cmc
icebp
test
or
mov
jecxz
jnp
jge
sub
testb
std
adc
inc
cmpsl
sbb
xchg
rcrb
ljmp
pop
pop
add
les
fisubl
test
mov
xchg
loop
mov
loopne
sub
orb
mov
fidivs
or
adc
dec
into
adc
in
dec
mov
mov
dec
sar
sti
test
jl
insb
mov
xchg
add
or
cltd
das
push
cmp
xor
and
mov
out
cmp
and
and
stos
push
mov
sarl
fstl
divb
jp
xchg
sbb
xchg
popf
cmp
pushf
insb
cmp
aad
pop
or
sahf
sbb
cmp
gs
xchg
jp
insb
out
ror
in
cmp
add
or
xchg
xchg
jecxz
aaa
push
jns
out
sub
xchg
scas
dec
stc
add
fcomp
ss
lea
call
mov
push
cmpsl
sub
bound
cmp
adc
mov
jmp
inc
stos
shlb
add
int
jnp
cmc
movsb
stc
dec
das
nop
scas
cmp
add
jmp
or
cmp
sub
push
mov
out
sub
xor
mov
mov
movsl
push
sub
mov
shll
das
ljmp
or
std
aam
fildll
imulb
pop
insl
fcomps
xor
jo
daa
fwait
mov
scas
adc
jmp
dec
pusha
fcmovnu
adc
add
subb
xlat
shrb
xchg
lods
bound
dec
arpl
xor
outsl
mov
push
lods
repnz
push
sarb
push
cmpl
jo
dec
lahf
dec
adc
dec
imul
shll
mov
pop
sbb
aaa
pop
or
xor
call
aad
test
add
mov
gs
adc
mov
mov
cmc
cmp
in
push
rorl
mov
jl
sub
cmc
pop
mov
les
xor
pop
fstp
pop
fdivr
or
inc
sbb
xor
adc
cmp
scas
mov
loop
xchg
ss
insl
add
subl
mov
push
and
loop
add
addr16
inc
aam
xchg
arpl
sbb
cmp
inc
shlb
add
fs
gs
push
pop
fsubrl
loope
int3
ret
fwait
pop
xor
pop
int3
aad
cmpsl
mov
xchg
ret
xchg
lret
inc
loope
ljmp
sbb
imul
lret
cltd
dec
popf
push
xchg
pop
mov
pushf
negb
sbb
pusha
daa
mov
mov
xchg
dec
rcrb
enter
in
fmuls
jl
dec
add
pop
outsb
mov
and
xor
sub
mov
push
mov
and
xchg
out
jmp
test
dec
cmp
loope
hlt
pop
mov
cltd
iret
jo
dec
jo
push
inc
aas
aam
adc
test
jnp
pusha
jp
sti
add
adc
test
rclb
mov
daa
icebp
addr16
loopne
ds
or
mov
sbb
loop
test
imul
jae
hlt
and
sbb
rcrl
mov
dec
ja
ret
mov
jne
pop
jnp
stos
lods
xchg
adc
dec
push
mov
pop
stc
jnp
sti
or
pop
push
inc
call
icebp
out
test
aad
cmp
inc
mov
rcrb
rolb
sbbl
sahf
inc
push
xor
sbb
cmp
pop
negb
or
stc
mov
ja
scas
lock
dec
lahf
lods
jo
rcrl
add
and
int3
cld
sbb
jnp
popa
mov
or
sti
shl
pusha
push
addl
ret
data16
hlt
add
aas
leave
sti
pushf
add
rorb
cmp
fwait
rorl
xor
fs
mov
and
push
scas
sbb
ud1
jl
sbb
stos
cli
repz
rolb
cld
mov
mov
xchg
mov
jno
ja
push
xor
lods
out
inc
inc
repz
dec
sbb
cmp
jb
xchg
mov
mov
or
pop
mov
inc
js
repz
xor
out
mov
mov
push
cmp
repnz
mov
std
imul
out
jecxz
call
shlb
xchg
xor
or
insl
rcrb
loopne
mov
cmp
ret
cmpsb
xchg
mov
or
push
dec
insb
pop
sti
push
jg
jge
jp
es
sbb
xor
ret
and
insl
popa
out
subl
inc
insl
pop
mov
sub
movsl
inc
int
aad
aaa
lret
loopne
mov
push
mov
adc
add
push
aad
push
push
add
dec
cs
mov
in
jge
add
test
shl
add
in
out
rcrb
fistpll
pop
sub
jl
pop
sbb
cwtl
cmp
mov
rcr
loop
mov
or
jnp
push
test
pop
jecxz
lds
subl
cwtl
call
push
sbb
add
out
xchg
cmc
and
jmp
pop
in
dec
lods
ja
xchg
push
loop
pop
mov
mov
pop
sub
ss
lahf
dec
mov
in
ficoml
adc
fs
int
repz
data16
inc
or
orb
inc
and
mov
mov
popf
jno
sahf
nop
pop
xchg
insl
and
rcl
les
inc
fistl
add
inc
cmp
roll
xchg
fiadds
cmp
inc
sbb
in
push
ret
lea
cmpsb
mov
adc
add
stos
jge
ljmp
addr16
cltd
mov
push
pushf
xchg
cmp
inc
dec
pushf
lcall
xchg
loop
vandps
bnd
aam
push
add
mov
jp
or
pushf
cmpsb
scas
stos
test
int
and
insl
sbb
jo
cmp
outsb
pop
in
mov
add
test
into
dec
push
sbb
pop
adc
xor
out
jns
pop
or
mov
cwtl
outsb
xor
pop
inc
in
pusha
xor
or
pop
mov
scas
iret
in
lea
xor
into
sti
adc
xor
in
ds
push
xchg
pushf
mov
xchg
fsubs
fs
cmp
jb
jp
dec
aam
movsb
sub
fs
and
xor
add
adc
in
hlt
jp
dec
aam
movsb
sub
fs
and
xor
add
adc
in
hlt
je
push
aam
movsb
sub
fs
incb
shll
xor
add
adc
in
hlt
sahf
les
mov
test
je
out
lret
push
sarb
push
incb
jb
into
fistpll
sub
repnz
jecxz
xchg
aas
subb
push
mov
out
jb
into
adc
and
sarb
outsb
repnz
loop
push
pop
subb
push
mov
out
jb
into
adc
and
sahf
cmp
and
jnp
jns
mov
sahf
jb
push
stos
fildl
inc
cmp
or
add
jecxz
cmpsb
lret
leave
cs
inc
in
scas
add
int3
push
filds
outsb
inc
xchg
or
xorl
das
pop
add
dec
jne,pn
pop
or
inc
jl
sarb
outsl
repnz
and
xlat
xchg
mov
sti
sbb
bound
mov
and
addb
cwtl
mov
insl
cs
imul
xchg
and
inc
mov
mov
adcl
loop
mov
clc
mov
jmp
and
test
push
sub
mov
das
movd
push
and
sahf
incb
jb
into
adc
and
repnz
loop
xchg
subb
push
mov
xchg
sbb
jo
push
sti
and
rorb
cmpsl
ja
or
subb
in
aaa
xchg
daa
adcb
push
lods
adc
inc
jmp
leave
jo
mov
xchg
sbb
cmp
sbb
pop
in
mov
aaa
mov
push
mov
mov
scas
xor
ret
pop
loop
xchg
subb
push
mov
out
jb
into
adc
and
repnz
loop
xchg
subb
push
mov
out
mov
or
dec
add
movsl
outsb
repz
sub
cltd
push
pop
repz
bound
ficomps
mov
mov
xchg
clc
sti
inc
xlat
dec
cmp
adc
or
aad
inc
hlt
loopne
jge
loope
pop
test
dec
outsb
sbb
sub
sbb
rolb
cltd
or
popf
out
inc
dec
adc
pop
adc
jg
cmp
xchg
lretw
inc
shll
jmp
imul
call
shlb
testb
xorl
cmc
movsl
lods
mov
pop
inc
pop
fs
dec
dec
or
cld
adc
mov
hlt
mov
and
repnz
jp
lea
add
popa
in
pop
lret
mov
mov
pushf
fwait
xor
cld
fnstcw
lock
lea
mov
xor
dec
outsl
mov
sub
pop
scas
mov
ficompl
addb
or
adc
fs
inc
xchg
mov
dec
or
add
add
inc
fwait
ret
sub
mov
shl
in
call
out
outsl
and
mov
cmpl
in
mov
xor
pop
insl
inc
stos
cli
loope
mov
mov
jecxz
test
in
fisttps
lods
lods
lret
popa
pop
jl
mov
push
mov
sub
insl
xor
pop
mov
jle
pushw
xchg
das
lods
adc
sub
aad
test
daa
cmpsl
aad
jl
inc
push
dec
fsincos
xchg
dec
cmpb
add
xor
mov
daa
je
in
add
jmp
push
cmc
pop
repnz
push
inc
add
mov
add
aad
cmp
pop
pop
divl
aaa
push
mov
ret
push
mov
clc
sar
scas
bound
pop
mov
xor
pusha
out
repz
je
jmp
lods
leave
dec
cli
and
jo
ss
gs
js
jns
addr16
sub
sbbb
mov
stc
mov
pushf
dec
stos
push
adc
mov
outsl
or
scas
jl
mov
or
mov
pop
inc
jnp
xor
cmp
mov
mov
jp
hlt
pushf
pop
sub
xor
dec
lret
pop
mov
add
rorb
cmp
or
inc
xor
or
mov
cmp
outsb
cld
and
xor
push
and
and
inc
or
daa
pushf
push
add
inc
mov
mov
dec
int
cmpsb
pop
or
jle
mov
out
add
cltd
sti
fcmovne
mov
and
inc
xor
sbb
mov
lds
gs
sti
sub
ja
mov
add
lods
jnp
mov
inc
mov
sahf
aaa
call
pop
ficompl
sti
out
mov
iret
add
aad
aaa
les
lret
mov
xchg
insb
pushf
cmp
fildll
iret
cmpsb
push
pusha
les
lea
enter
push
lahf
pop
sub
cwtl
fwait
loope
sarb
shll
js
pavgw
jl
insb
dec
mulb
inc
push
pop
ficomps
cmp
jp
lret
pop
movsb
hlt
in
aas
push
in
cmc
pop
pop
jl
cmpsb
mov
mov
mov
push
mov
in
fs
insb
les
mov
popf
popa
mov
pop
mov
push
lds
stos
inc
jne
or
repz
imulb
sub
push
roll
fmull
orb
adc
popf
mov
movsl
jle
stos
gs
pop
imul
mov
mov
in
mov
mov
xchg
add
js
mov
xchg
mov
ja
mov
mov
jo
mov
fisttps
adc
inc
xor
fcomps
dec
pop
push
add
rorb
dec
inc
cmp
aam
sub
jmp
out
mov
cmc
xchg
outsb
mov
lcall
mov
mov
das
mov
pop
fadds
mov
int
jbe
sub
lods
push
push
jle
adc
test
sarl
sbb
jb
sub
xchg
into
or
lods
sbb
inc
ss
test
ret
mov
push
clc
scas
test
sbb
push
pop
mov
mov
das
jbe
in
xor
or
lret
lret
xlat
cmpsl
fildll
mov
in
arpl
dec
mov
add
mull
mov
sub
int3
rorb
pop
scas
mov
ljmp
movsl
js
and
cltd
fdivp
ja
push
dec
mov
xchg
mov
lcall
mov
nopl
mov
clc
es
jle
cmpsb
cmc
dec
mov
lret
add
jb
stos
testb
nop
shr
rclb
mov
enter
adc
cltd
adc
vmread
fldl
fmull
lahf
lds
add
dec
std
out
in
sub
push
dec
sbb
inc
jge
pop
inc
push
xchg
push
mov
je
fiadds
fcmovb
scas
and
or
clc
cwtl
loopne
mov
and
test
rcl
leave
pop
mov
insb
jg
loop
iret
pusha
mov
dec
inc
out
push
cld
jnp
mov
mov
jmp
jnp
sti
jg
pop
mov
in
jmp
arpl
js
jnp
push
fucomp
imul
leave
es
mov
xchg
mov
xchg
xor
pop
add
insb
inc
lds
fs
dec
sbbb
xorl
sbb
adc
cld
fstps
push
ror
jae
loop
mov
sub
test
inc
xchg
aam
pop
fyl2xp1
xchg
dec
cli
mov
jno
jae
outsl
add
xor
lret
rcll
dec
fsub
ljmp
mov
xor
ljmp
popf
andb
in
jl
xlat
ret
cmpsl
lds
stc
test
loopne
cli
ret
jmp
push
test
mov
push
jnp
dec
repnz
setg
pop
push
jmp
cmp
dec
mov
ds
lock
testb
cmpsl
jns
push
sahf
mov
xchg
enter
out
mov
dec
dec
setne
adc
addb
push
lds
mov
popf
xchg
mov
mov
add
fisttpl
scas
pop
sti
ljmp
mov
clc
xchg
pop
jae
outsb
pop
mov
shlb
sbb
pushf
mov
xorl
aaa
dec
sbb
xor
or
mov
cmp
mov
mov
inc
sbb
cmp
loope
andb
mov
xor
xchg
fs
sahf
and
ror
pusha
and
inc
daa
mov
frstor
insb
in
data16
push
int
fcoms
aam
lcall
adc
adc
addb
jne
push
scas
stc
das
xchg
xor
ss
lods
sbb
leave
addr16
test
cmp
rclb
inc
imul
mov
lds
daa
jle
rcrb
dec
mov
clc
cmc
sti
inc
xor
add
js
mov
mov
pop
xor
lea
es
mov
fcoms
push
lods
jnp
xor
jmp
insl
and
ret
adc
mov
imul
out
mov
in
es
out
mov
jno
xorb
cmpsl
scas
push
roll
pop
std
out
inc
movsb
cltd
jecxz
and
mov
mov
mov
stos
out
movsl
inc
lds
push
rorb
aad
ds
push
sub
cmp
push
pop
out
pop
sbb
insb
out
or
movsl
adc
sub
stos
cmp
sbb
jno
pop
int
sbb
jnp
cmp
mov
fs
dec
sbbl
jmp
or
imul
and
mov
push
clc
pusha
in
mov
xchg
mov
aad
ss
popf
cmp
aad
orb
ljmp
ficoml
out
xor
popf
ss
mov
lcall
aad
call
pop
pop
mov
dec
pop
lods
push
adc
adc
es
insl
adc
add
in
xchg
jp
sub
arpl
cmp
dec
push
fsubp
jmp
fisubrl
jle
push
mov
pop
add
pop
shlb
movsb
pop
inc
jb
adc
mov
mov
cmp
cmpsb
dec
cmp
push
in
or
inc
push
arpl
mov
inc
les
or
imulb
mov
adc
aam
push
sub
cmc
jbe
lret
scas
daa
jp
iret
sbb
gs
negl
or
sub
push
fldenv
jbe
sbbl
cmc
push
insl
repz
es
mov
ret
aam
aad
daa
push
xor
mov
xchg
jbe
insl
pop
jae
int3
xor
int
fisubrs
negl
icebp
ljmp
cmp
gs
add
daa
cli
loop
aas
pop
sahf
mov
je
mov
or
daa
pop
xchg
fstl
cmp
mov
imul
xor
dec
jb
clc
sbb
mov
dec
pop
mov
movsb
push
imul
mov
insl
lret
imul
notl
in
xchg
loop
loop
divl
rcr
xlat
cmp
inc
shrl
clc
sbb
mov
sbb
std
ljmp
out
and
lret
ret
daa
cld
dec
jge
repz
jmp
scas
lock
mov
dec
mov
hlt
imul
insb
not
insl
fcoms
lret
pop
loopne
adc
pop
mov
jb
or
or
jmp
ret
push
in
mov
and
and
and
push
push
sarb
push
sub
sbb
xor
call
andl
xor
sub
dec
jp
test
jg
xchg
xchg
mov
jne
fists
fidivs
inc
jb
into
scas
cltd
insb
jge
jge
add
orl
mov
sbb
jge
stos
popa
xlat
or
cmp
leave
jg
std
jecxz
cs
movb
movsl
data16
addr16
loope
leave
push
xchg
frstor
ss
js,pt
mov
pop
rclb
cs
jnp
xchg
out
add
inc
lock
ja
mov
add
push
mov
xlat
pop
mov
scas
push
aam
sbb
mov
xor
test
push
shrl
fnsave
mov
ret
clc
jbe
xor
out
mov
sahf
mov
xchg
adc
sbb
test
add
outsl
adc
adc
inc
and
mov
aaa
xor
lods
jbe
addr16
push
cmp
add
pushf
mov
cmp
push
cmp
inc
cltd
lcall
addr16
cmpsl
xchg
fsubp
test
lds
divb
jbe
cmpsl
fdivl
inc
or
cmpsl
xor
les
and
xor
jg
fmull
pop
repnz
jg
test
pop
dec
mov
xlat
xor
cld
add
xor
push
pop
negl
push
jbe
pushw
scas
lret
test
push
js
and
cmp
addb
call
or
sti
loope
arpl
xor
ss
or
movsb
cmp
add
sti
mov
aaa
jo
ds
xchg
js
pop
add
jg
pop
push
mov
pop
mov
or
mov
cmp
jge
push
mov
mov
jmp
mov
leave
xchg
loopne
dec
and
and
les
mov
je
jge
inc
fucomp
xor
sbb
xchg
lods
mov
sbb
push
daa
cmp
or
adc
jp
aas
xchg
cltd
jmp
jne
gs
mov
add
sub
jo
sub
xchg
push
or
lret
insl
mov
scas
dec
jnp
mov
nop
pop
sbb
outsl
fcmovb
cltd
mov
arpl
push
inc
jne
add
pop
negl
ja
xchg
sbb
dec
movsl
repz
mov
js
add
or
das
cmpsl
stos
loopne
and
jae
adc
sbb
or
pop
mov
push
push
jle
stos
ret
add
or
sub
jae
xor
mov
add
sbb
jnp
fwait
mov
and
xchg
cmpsl
mov
aas
sarb
and
jl
or
addl
enter
dec
pop
clc
push
ljmp
andl
lcall
push
dec
sub
or
mov
movsb
mov
insl
dec
fdivp
shll
sbb
rcr
sbb
pop
sub
lea
xor
inc
out
mov
loope
call
lock
shrl
xlat
cmp
and
out
fimull
repz
cltd
dec
xor
movsb
mov
xchg
push
loopne
jno
xchg
test
sbbl
pop
mov
fidivs
stc
mov
mov
mov
inc
xor
outsl
inc
lds
loop
out
push
mov
xor
out
mov
add
lods
aas
pop
mov
shll
and
jecxz
sub
outsb
lea
in
loopne
data16
mov
lds
adc
jb
xchg
pop
in
mov
cmp
je
inc
js
sbb
popf
add
push
fnstsw
fmul
push
int
ljmp
adc
cmp
les
lods
jmp
sbb
add
and
add
jp
jne
daa
dec
in
stc
scas
jmp
jns
outsl
andl
in
mov
loope
es
inc
mov
iret
daa
or
mov
je
clc
js
or
iret
sar
nop
je
adc
mov
aad
mov
inc
icebp
and
cmp
push
pop
mov
sbb
ret
adc
sbb
xor
ja
aad
or
out
rcr
jb
pslld
mov
insb
inc
aaa
cmp
pop
cmp
add
movsl
fcmovnb
pop
inc
push
push
mov
xlat
pop
push
pop
inc
push
add
movb
faddp
aad
into
gs
lods
int3
mov
outsl
mov
push
dec
xor
sub
and
xchg
xor
jle
jne
rolb
xor
jae
shrl
sub
pop
stos
pop
data16
jle
bnd
fnstcw
das
push
pop
sti
mov
jmp
add
add
adc
jb
mov
mov
xor
icebp
mov
dec
dec
mov
mov
loop
rclb
adc
or
sub
cmp
lahf
mov
push
getsec
aaa
or
mov
push
popf
int3
stos
leave
dec
adc
cs
movsb
scas
xchg
and
mov
shrb
out
lods
push
hlt
int
fmul
rorb
scas
and
out
mov
int3
subl
lret
jae
shlb
arpl
xor
pop
aas
and
adc
lods
enter
into
mov
insl
sar
xchg
xchg
xchg
out
dec
jg
push
test
push
xor
fisttps
aas
test
dec
jg
rcr
test
jae
jns
arpl
aaa
fnop
fistpl
test
sarb
inc
jo
mov
jmp
stos
sub
int3
mov
jbe
mov
incb
cltd
push
xchg
mov
sub
andl
out
lods
mov
scas
hlt
insl
and
push
aad
cwtl
popa
jo
adc
aad
rclb
hlt
xor
xchg
pop
rcll
fs
jne
mov
stos
fisubs
in
jo
dec
aam
pop
in
ficoms
push
mov
hlt
push
js
pop
es
cld
ret
add
loop
mov
addl
adc
int
jmp
cmp
or
xor
mov
mov
pop
or
xchg
sub
aam
mov
xor
bound
cmp
xchg
dec
mov
dec
int3
sub
mov
lea
stc
add
push
add
jne
std
sbb
add
mov
or
test
lret
pop
push
test
push
inc
adc
int3
jmp
shrl
popf
xchg
aam
daa
xor
call
mov
jnp
inc
add
in
jbe
sub
imul
mov
test
xlat
cmp
push
addr16
inc
imul
testb
sub
jb
dec
repz
jae
loope
adc
mov
xor
mov
loopne
adc
mov
add
aam
in
push
fmull
xlat
inc
lods
push
and
mov
mov
push
pop
jns
jae
ficoms
rol
ss
pop
arpl
add
scas
adcl
mov
push
xor
outsl
movsb
cli
idiv
into
jl
sbb
mov
or
orl
jl
sarl
cltd
cltd
xchg
cmpsl
pusha
jp
mov
lahf
loope
sub
stc
mov
xor
inc
mov
inc
gs
ds
out
jae
imul
cld
mov
lret
mov
int
jmp
add
adc
pop
data16
cwtl
push
insb
cmpsl
data16
pop
and
pop
jmp
ffreep
bound
jb
or
sahf
xlat
cs
lds
clc
fmuls
xor
cs
ds
and
fs
sub
pop
popa
push
lcall
or
and
mov
jge
loope
xor
ficoml
int
mov
mov
add
gs
adc
jmp
push
cmp
cmp
loope
lahf
fwait
lock
lea
fldt
insb
mov
pop
movsb
or
adc
iret
sbb
arpl
xchg
cmp
or
mov
mov
mov
xchg
sub
mov
jmp
mov
scas
dec
scas
cwtl
outsb
jae
rcll
xchg
notb
ja
mov
push
imul
cmp
xchg
iret
pushl
stc
adc
xor
lds
mov
cmpsb
in
mov
cmp
insb
ja
mov
ret
or
enter
fchs
daa
cmpsb
push
cmp
mov
mov
inc
call
in
jge
iret
test
into
xchg
jb
push
stos
mov
sub
mov
mov
push
enter
pop
loopne
test
jne
aam
jb
jb
scas
or
test
fimull
sub
loope
daa
xchg
jae
sbb
mov
xlat
jp
pop
test
ffreep
cmc
movsb
xor
in
push
cld
subl
call
xchg
std
mov
fmull
fistpl
inc
or
loop
popf
rcrl
pop
inc
dec
or
push
arpl
arpl
in
faddl
bound
fbld
stos
xchg
mov
sub
daa
stos
mov
adc
sub
enter
pop
jae
sbb
hlt
dec
out
and
lahf
leave
fcoms
popf
mov
imul
inc
enter
or
into
pop
or
ficoml
adc
xor
jbe
lock
and
std
cmp
pop
push
fcoms
jbe
adcl
jb
in
cwtl
dec
dec
xchg
loope
enter
addl
or
xchg
sbb
std
in
aaa
xchg
lahf
inc
mov
std
xchg
mov
movsl
dec
aam
notb
inc
ja
mov
mov
mov
jg
adc
mov
inc
lea
sub
test
mov
fistpll
mov
jne
sbb
push
inc
cmp
inc
popa
loope
testl
pop
jmp
cmp
mov
and
and
sub
test
gs
ja
test
test
push
push
add
out
sarl
pop
and
jmp
imul
xchg
mov
lock
xchg
mov
sti
xor
jnp
cmp
xor
sahf
mov
call
inc
inc
arpl
cmpsb
idivb
xchg
repz
testl
add
inc
mov
push
into
loope
sub
inc
mov
test
and
cmp
push
sub
movl
dec
or
xchg
xor
inc
sbb
out
sbb
sub
ljmp
inc
dec
or
popa
cmp
and
sti
outsl
add
idivl
jmp
daa
mov
jnp
jg
insl
movl
mov
aas
mov
sbb
lret
pop
pop
mov
dec
mov
pop
push
and
or
mov
shlb
aaa
pop
loop
repz
data16
cltd
mov
mov
or
outsb
in
stos
pop
pushf
lock
fcmovnu
pusha
pop
cs
push
imul
add
in
xlat
jg
ds
inc
imul
loope
adc
mov
aas
roll
push
push
insl
push
mov
lret
xor
inc
xchg
adc
xorb
add
inc
inc
mov
scas
ss
inc
mov
cmp
loopne
mov
insb
stc
jns
xchg
fcmovu
negb
inc
jno
adc
pop
mov
es
mov
out
xchg
cwtl
loope
mov
mov
test
mov
mulb
adc
and
ss
pop
insl
adc
mov
sub
xor
gs
mov
and
add
addr16
cmpsb
imul
aaa
fcomps
fisubs
adc
and
repnz
loop
xchg
subb
push
mov
out
jb
into
adc
and
repnz
loop
xchg
subb
push
mov
out
repnz
xchg
mov
mov
outsb
repnz
loop
xchg
subb
push
mov
out
jb
into
adc
and
jle
les
loop
loop
repnz
loope
icebp
push
insl
inc
jge
dec
bound
xchg
jo
adc
sahf
fsubs
cld
repnz
int
lods
xorb
lea
jge
dec
bound
sub
and
loope
std
xchg
int
fst
filds
popf
ljmp
inc
or
bound
mov
loope
lcall
leave
out
repnz
push
or
push
in
cld
call
aaa
icebp
mov
leave
outsl
push
xorb
jb
in
insl
mov
or
mov
adc
and
fsubp
mov
pop
lods
icebp
pop
push
pop
jle
add
cmpsb
inc
push
cmp
adc
in
ret
cmpsl
loop
orb
add
lea
adcb
add
rorl
sbb
insl
xchg
cmpb
jb
lea
mov
sub
in
mov
add
inc
add
xor
subb
xchg
fisttps
jae
pushf
xlat
in
cmpsl
jmp
int
pop
dec
loope
xchg
jnp
push
and
test
pop
mov
mov
insl
jb
bound
sub
test
in
pop
in
aam
fidivl
mov
clts
sub
cmp
insb
pop
inc
popa
and
adcb
loopne
in
mov
pop
add
adc
add
jnp
addr16
jns
das
mov
nop
cwtl
repnz
fucomip
fucomp
mov
ds
jge,pn
sub
sbb
add
shr
ret
int
fstl
lea
jge
dec
bound
sub
and
repnz
fstl
lea
outsb
mov
mov
mov
mov
aad
mov
pop
data16
rolb
and
test
sbb
les
negb
sbb
mov
and
fldl
dec
xor
out
fcomps
mov
fcmovnbe
add
psadbw
arpl
loope
ja
rorb
sub
jnp
sub
sbb
cmp
mov
fwait
idivl
xchg
mov
inc
dec
fstpt
mov
mov
mov
sub
lock
leave
cmp
fnstsw
in
dec
sbb
and
imul
push
xchg
or
mov
fistpll
and
jbe
add
or
dec
inc
addl
lret
mov
fdivrp
ja
fdiv
adc
fdisi(8087
nop
pushf
lcall
std
dec
xor
repz
int
test
cmp
or
ss
jmp
push
je
adc
test
sub
arpl
pop
or
push
xchg
sti
mov
mov
xchg
and
insl
add
push
adc
cmpsl
and
sub
xchg
test
clc
add
xchg
sub
jge
scas
nop
das
dec
nop
repnz
and
pop
dec
repz
mov
xchg
leave
daa
cli
inc
imul
push
test
dec
fidivrl
cmpsb
sbb
lea
adc
and
mov
jne
int3
inc
shll
mov
jl
add
leave
fisubs
or
sbbl
jae
push
cmp
inc
cmp
mov
ds
pop
out
push
xor
pop
ret
das
out
in
pushf
or
out
stos
sub
fists
lahf
mov
test
imul
outsl
sub
pop
mov
sarb
mov
push
mov
ljmp
sbb
pop
mov
mov
add
clc
ror
bound
popl
adc
aaa
in
jo
jge
inc
jmp
mov
xor
iret
adc
inc
cmp
pop
clc
lret
adc
dec
aas
cmp
mov
pushf
dec
and
xor
sub
dec
mov
jnp
xor
pop
pop
cld
test
into
mov
cmp
mov
lods
in
push
pop
pop
jo
xchg
and
shr
push
and
pop
enter
or
cltd
mov
lahf
imul
and
out
or
sbb
cltd
pop
loop
cmpsb
mov
aad
cmpsl
cmp
andl
sub
mov
or
mov
pop
inc
inc
jmp
aad
cli
xor
loop
jae
or
xor
je
lock
loopne
enter
xchg
add
arpl
jo
das
in
out
ret
sub
adc
xlat
xchg
add
push
lods
popa
lret
leave
push
fmull
dec
add
stc
les
push
pushf
xchg
negl
add
shrl
xchg
stos
stos
ja
test
push
push
jp
lret
adcb
stos
inc
xchg
sub
pop
scas
out
in
mul
das
xchg
adcb
and
mov
pop
sbb
mov
fisubl
inc
cmp
fmul
mov
leave
adc
dec
mov
dec
test
or
xchg
lcall
add
insb
and
pop
notb
mov
stos
or
sbb
jbe
pop
popf
out
push
sub
mov
xor
or
loope
ret
cwtl
xchg
add
fsubl
push
pop
mov
sbb
pop
xchg
sbb
movsl
mov
into
stos
insl
or
xchg
jne
cmp
stc
in
pop
sub
inc
inc
xchg
ljmp
pop
cltd
movsb
sub
sahf
nop
dec
out
popa
fistl
lahf
or
jnp
aad
shrb
out
scas
or
sahf
cmp
imul
xor
inc
movsl
push
xor
cltd
in
xor
rorl
push
cli
inc
dec
jecxz
sub
test
jecxz
fcomps
xor
push
in
cli
shr
ljmp
cmpsb
js
mov
jp
movb
repz
xchg
sub
ror
shlb
push
lret
mov
sub
ss
cwtl
pop
idiv
cmp
sub
dec
mov
aaa
aaa
in
jecxz
cwtl
sub
dec
adc
and
jl
pop
mov
xchg
imul
jp
data16
pop
xchg
xchg
rcl
inc
pushf
stc
call
and
popf
pop
pushf
hlt
pop
in
mov
fsubl
mov
testb
inc
mov
mov
shr
mov
repz
es
mov
cltd
mov
adc
sbb
inc
push
and
sbb
push
sbb
jl
test
mull
lea
outsb
lahf
cwtl
out
cmp
es
jmp
push
scas
lods
das
pusha
inc
jecxz
stos
adc
clc
and
ja,pt
mov
jg
loope
dec
outsl
mov
xor
addr16
xchg
mov
jbe
pop
js
fwait
xorl
inc
jle
test
adc
lds
add
sahf
outsb
lock
lea
cmc
stos
sbb
shlb
add
cmc
rcrl
lret
adc
xchg
dec
jo
adc
ss
mov
aam
inc
add
jne
push
xor
sbb
add
inc
int3
inc
pandn
inc
mov
mov
out
cmp
inc
fisttpll
jmp
cmp
stos
push
repz
mov
hlt
in
shll
xchg
hlt
pop
lahf
out
add
sub
push
stos
js
sub
push
in
or
add
jno
loop
push
inc
arpl
pop
ja
into
jns
xchg
dec
sar
sbb
lds
jmp
push
loope
test
xor
imul
jl
sbb
mov
pushf
rolb
repnz
adcl
sub
mov
cmp
push
cmp
add
mov
pop
cltd
mov
int
lret
in
inc
sub
mov
cwtl
push
cli
in
ret
ret
jnp
push
jno
bound
out
into
jg
inc
mov
cmp
jae
jmp
mov
clc
cmp
fcoms
cmc
outsl
and
push
mov
addps
sub
pop
mov
aaa
mov
sbb
pop
in
inc
push
fwait
mov
inc
adc
fwait
ret
lret
in
pop
adc
adc
out
jno
xchg
push
int
repnz
repnz
and
add
stc
and
cs
pushf
ret
and
scas
mov
aaa
adc
mov
xchg
in
inc
rorl
jb
sti
push
and
xor
pop
cli
push
cltd
jns
or
xor
or
cmp
rorl
into
jecxz
test
xchg
rcrb
repz
jge
add
push
mov
jl
paddb
hlt
shlb
add
lahf
mov
nop
shl
xor
mov
sbb
push
or
inc
fistpl
dec
dec
add
and
ficoms
lock
icebp
add
clc
sbb
dec
test
dec
mov
pop
sti
push
pushf
popf
xchg
add
pop
ficompl
mov
imul
movsl
sbb
cmc
ret
mov
fsubrs
jae
into
jge
pop
js
add
mov
cwtl
fmul
jns
pop
xor
add
std
inc
sbb
pusha
pop
loope
shlb
cmp
fidivs
pop
xchg
inc
sbb
shrb
pop
imul
jns
nop
mov
test
jmp
jecxz
sarl
or
pop
xchg
xchg
enter
dec
fdivrl
adc
push
mov
stos
out
imul
lock
mov
gs
fldenv
mov
lahf
lods
inc
or
nop
dec
lcall
add
sub
fs
lret
push
inc
mov
insb
aas
lods
pop
out
xor
scas
add
push
inc
adc
mov
push
ja
mov
push
cmp
and
mov
pop
xor
or
js
mov
adc
jbe
adc
int
sti
cmc
lcall
loope
mov
mov
inc
sbb
mov
or
push
adc
or
jecxz
in
int
pop
push
adc
push
out
push
dec
out
aas
mov
ss
mov
adc
sub
lret
push
insb
loop
sbb
xor
pushf
pop
dec
std
shrl
gs
int3
pop
xchg
jne
scas
mov
and
xlat
adc
xchg
jnp
mov
fldcw
mov
nop
ffree
lods
in
adc
jb
inc
and
testb
mov
sub
jecxz
cld
dec
cmpsb
cld
pop
xor
fadds
xchg
jecxz
mov
mov
pop
lahf
jp
lds
stc
sub
iret
lds
in
xor
repnz
std
out
mov
jae
addr16
loop
cltd
lea
mov
inc
and
lods
stc
add
jne
mov
mov
ljmp
daa
loopne
insl
inc
loopne
pop
mov
mov
xchg
addr16
mov
in
sarl
ret
mov
inc
adc
daa
cmp
mov
cs
or
ja
loope
es
cmp
and
inc
stos
arpl
cltd
push
jl
popa
notb
andb
push
out
add
dec
dec
xchg
push
cli
mov
xor
pop
scas
lea
and
pushf
mov
mov
bound
gs
scas
test
fimuls
ret
rolb
in
cmp
idivb
jbe
or
loope
insl
mov
xor
cmp
into
jg
lods
mov
or
fdiv
fstpt
imul
scas
xchg
call
int3
mov
rcrb
inc
int3
test
repz
sub
outsb
add
lcall
leave
shl
cltd
inc
inc
sbb
mov
cmpsb
jmp
adc
outsb
js
roll
test
pop
cmp
adc
lds
in
out
out
into
imul
cmp
add
lds
mov
das
inc
mov
shll
mov
out
add
std
jmp
pusha
movsl
std
sti
mov
dec
push
aaa
pop
ret
push
cld
mov
xchg
mov
nop
cmp
inc
stos
pop
and
lods
adc
cmpsl
cltd
push
xor
lods
push
xchg
sub
outsb
xchg
mov
bound
inc
dec
sub
sub
movsl
test
or
inc
cltd
xor
and
divb
or
stos
shl
std
test
mov
sub
int
xchg
addr16
push
sub
jo
loope
adc
xchg
jl
outsb
jb
scas
jmp
jne
jecxz
leave
xor
xchg
inc
sbb
cli
push
pop
pop
mov
pop
add
ret
sbb
jge
sbb
jbe
jae
adc
xchg
adc
mov
mov
nop
in
pop
mov
mov
mov
fwait
sub
std
sub
shr
jcxz
vrsqrtps
push
ja
es
push
dec
xchg
int
jecxz
es
std
pop
sub
or
xchg
ret
cmp
add
add
scas
mov
sub
inc
add
pop
push
jno,pt
mov
shl
and
outsb
in
sub
add
sbb
fstl
mov
pop
inc
cmp
sub
sahf
leave
movsl
push
aam
test
ds
mov
fdiv
pop
into
jnp
ret
mov
mov
inc
inc
loop
lods
lea
adc
movsb
mov
lahf
fnstsw
inc
in
popf
or
out
shrl
and
xchg
inc
pop
push
insl
cmp
add
jbe
mov
enter
ficomps
add
xchg
loop
cmc
ss
sbb
mov
jge
xchg
or
roll
mov
les
dec
call
or
mov
cmp
or
mov
add
rcl
jmp
xor
aas
and
nop
sahf
and
cld
adc
xor
sbb
and
sbb
jns
shrb
ret
mov
and
dec
push
aam
jp
pushf
push
popf
add
jl
sbb
cld
ret
dec
pop
loop
lret
lret
jb
push
in
sub
in
hlt
dec
jns
mov
mull
mov
loopne
loope
adc
in
mov
hlt
into
jl,pt
aad
js
or
push
ret
arpl
mov
push
lea
fidivs
lret
imul
lock
xor
mov
xor
add
xchg
scas
out
mov
cmp
xchg
filds
and
in
push
adc
inc
sub
cmp
adc
xor
jmp
scas
aad
test
xor
mov
into
pop
mov
lcall
ret
pop
xor
xor
mov
mov
sbb
jbe
and
stos
sbb
push
js
adc
je
or
xor
add
dec
mov
sbb
lret
mov
lds
mov
xchg
popa
add
test
fimull
in
faddl
imull
add
pop
popa
cmp
repnz
mov
rol
xorb
cmpsl
cmc
cld
xor
sub
fsubr
add
push
push
int3
cwtl
xor
dec
mov
lret
cmpsb
adc
leave
xchg
lods
pop
mov
clc
dec
scas
mov
xorb
aad
or
mov
push
cmp
or
out
mov
fisttpl
clc
decb
shrl
push
out
insl
popa
fimull
les
sti
sbb
dec
sub
mov
sti
xor
ror
insb
dec
inc
dec
mov
sti
push
mov
mov
stos
sub
fbstp
xor
jb
imul
out
mov
out
jg
fistps
test
fstp
js
sbbb
aaa
or
mov
cmp
lret
dec
repz
pushf
cmpsl
out
pusha
mov
pop
test
fldenv
mov
ss
gs
push
and
pop
lods
pushf
cmpsb
ja
cmp
or
addr16
cmpsl
push
js
ret
mov
cmpsl
outsb
pusha
jp
pushf
adc
in
cmp
int3
push
fstl
enter
xor
adc
jmp
jbe
cmp
insb
adc
dec
roll
test
popf
and
sub
and
loopne
leave
lcall
jl
sub
xchg
mov
leave
sub
movsl
cmpsl
sbb
dec
mov
or
jnp
jge
push
dec
lret
sbb
loopne
sub
or
rcr
int
negl
xor
cmpsl
inc
push
rcr
sarb
das
popf
iret
cmp
sbb
sub
in
add
adc
rcrb
pop
pop
mov
fstps
or
in
pushf
jle
mov
add
out
lds
int3
int3
ror
push
mov
sbbb
sbb
shll
lds
clc
cmc
ja
negb
pop
sbb
pop
inc
int3
xchg
mov
mov
or
add
testb
jle
xchg
or
sub
mov
adc
inc
cmpsl
cmpb
test
sti
inc
mov
test
test
out
cmp
and
pop
test
push
jb
loope
push
insb
mov
jge
sbb
scas
push
mov
dec
arpl
jns
pop
xlat
mov
popw
xor
push
call
imul
icebp
addr16
stos
xchg
xor
leave
jg
add
cmp
mov
mov
mov
dec
insb
fnstcw
maxps
lret
pop
ds
xchg
fisttps
idivl
insb
out
sub
or
rcr
roll
aad
adc
aaa
cmp
sbb
mov
stos
int
clc
xchg
mov
jp
xchg
cld
mov
xchg
xor
addr16
mov
testl
adc
insl
enter
mov
dec
int
sbb
dec
loopne
jne
aad
or
and
dec
dec
mov
out
add
loope
pushf
mov
add
add
jne
inc
stos
in
int
pop
es
mov
xor
sub
add
mov
mov
sbb
and
push
cltd
jno
movsb
lock
cmpsl
sbb
cltd
cmpsl
mov
jae
loop
mov
adc
shrl
ja
cltd
or
inc
pop
pop
loopne
or
and
pop
and
adc
push
test
adc
inc
test
loop
dec
xchg
jmp
sub
sbb
out
lea
dec
add
xchg
test
ds
and
xchg
enter
in
test
lret
mov
push
jmp
jae
dec
mov
mov
mov
dec
jae
mov
lea
imul
adc
js
in
cmpsl
cs
push
xchg
fwait
std
cs
int
std
sbb
orl
movb
inc
arpl
inc
push
mov
push
iret
mov
mov
clc
push
lock
or
rcrl
mov
std
cvtpi2ps
or
jp
or
pop
mov
push
or
mov
mov
dec
push
or
gs
add
pop
jnp
hlt
jmp
ss
pop
test
stc
mov
into
or
cmp
test
aad
cli
mov
mov
mov
jae
xlat
sti
das
dec
jl
leave
int3
push
aad
hlt
pop
inc
popf
fcompl
inc
notl
clc
sub
popf
inc
ja
lahf
push
les
push
loop
fwait
inc
movsb
scas
mov
or
fcompl
rol
stos
scas
pop
pop
push
in
mov
xor
setnp
mov
imul
cmpsl
sar
or
fisttpll
xlat
xor
in
movsl
lock
aad
out
jnp
aas
ljmp
pop
push
adc
xchg
add
scas
add
push
adc
cpuid
sbb
ret
test
adc
stos
cltd
jmp
push
jge
jns
and
pusha
cmp
lods
cmp
enter
add
mov
daa
push
dec
bound
sti
jl
mov
lods
out
add
cli
inc
int
add
aam
mov
or
cmp
add
mov
mov
into
out
and
cmc
movsl
pop
push
fucomp
fisubs
cmp
sub
jl
pop
enter
int
or
pop
pop
pop
dec
ljmp
clc
sub
jl
pop
insl
sbb
or
pop
test
jmp
cmc
cmpsl
cmp
repnz
lods
out
pop
subb
test
popl
add
jb
lods
cmpsl
xchg
aad
cmc
mulb
jge
inc
xchg
cld
adc
ret
cmp
push
inc
mov
jbe
mov
inc
push
or
xor
pusha
push
sbb
das
cmp
cmp
stc
into
jge
testl
fs
xchg
stc
add
pop
aaa
mov
mov
jge
dec
out
add
out
cmp
adc
mov
repnz
stos
xchg
std
jnp
test
adc
mov
dec
lods
scas
in
and
add
push
pusha
outsb
imul
cltd
or
icebp
sub
lods
clc
xor
loope
jne
shlb
inc
sbb
lret
mov
call
sti
xor
or
adc
clc
sbb
test
or
std
xchg
add
stos
cmpl
xor
sub
mov
jo
pop
xor
out
lock
cli
incl
jp
push
fcoml
dec
inc
pop
stc
xchg
inc
pop
test
and
push
sarb
lods
or
test
adc
mov
cmp
cmp
out
insl
fimull
mov
clc
cwtl
sub
andl
negl
jae
aam
cmpsb
or
xor
inc
stc
scas
shlb
push
push
lods
jg
call
cltd
aaa
fisttpl
sarl
clc
jmp
stos
out
das
cmpsl
xchg
xor
cs
sahf
int3
popl
in
add
test
push
frstor
mov
mov
push
inc
add
dec
sbb
xchg
adc
mov
out
dec
mov
inc
cmp
in
ss
mov
mov
mov
imul
rcr
pusha
adc
mov
or
pxor
xor
loopne
sbb
aas
pop
push
jnp
inc
sbbb
push
out
add
gs
cmpsb
sbb
and
lods
xchg
mov
ret
cmp
divl
mov
loop
xchg
in
mov
mov
mov
stos
lods
paddb
mov
popf
sbbl
fdiv
adc
or
aaa
scas
or
loopne
clc
shlb
loop
dec
neg
sbb
test
popa
and
mov
or
adc
push
dec
jb
cmpsb
stos
outsl
in
xchg
orb
pop
data16
add
fs
push
pushf
arpl
in
sbb
ds
loopne
cmpsl
pop
aam
dec
mov
rcll
jns
outsb
in
mov
pop
add
jg
stos
cli
rcr
cmpsl
inc
lods
cmp
mov
or
cmc
test
jne
mov
aad
jno
sbb
push
jbe
mov
cmp
cmpsl
out
stc
clc
jecxz
inc
je
push
mov
je
or
cs
or
adc
dec
pop
or
mov
pop
adc
and
repnz
fstl
lea
jge
dec
bound
sub
and
repnz
fstl
lea
jge
dec
bound
sub
loop
shr
ret
int
fsts
mov
inc
imul
pop
adc
mov
push
pop
int
stos
in
or
dec
repnz
loop
jbe
xchg
push
addl
test
ss
push
xor
and
adc
add
jae
arpl
push
xchg
inc
xchg
push
addl
jecxz
rcll
ret
push
xor
and
jae
bound
mov
mov
inc
repz
rcll
ret
push
xor
out
mov
jae
adc
adc
sub
xchg
cmp
pop
cld
icebp
mov
cmp
dec
add
push
add
jno
sub
pop
and
xor
repz
fldcw
adc
inc
push
scas
sbb
xlat
cld
dec
and
arpl
adc
dec
cs
je
mov
xor
sbb
ljmp
xchg
jb
call
btr
in
lcall
mov
scas
mov
sub
xchg
and
arpl
imul
cltd
push
sarl
or
ret
xor
add
xor
sub
and
inc
or
xor
inc
push
out
andl
imul
xchg
addb
jbe
xchg
push
addl
jecxz
rcll
ret
push
xor
and
adc
add
jae
arpl
sbb
data16
lds
xchg
pop
mov
mov
xchg
inc
xchg
pusha
mov
and
ss
xor
lds
fs
ret
jle
inc
xchg
popa
xchg
inc
mov
mov
test
cmp
sub
aam
mov
and
push
ret
push
xor
and
adc
add
jae
arpl
mov
mov
inc
repz
rcll
ret
push
xor
and
adc
add
jae
arpl
mov
ret
in
add
cli
adc
adcb
sub
outsb
add
push
mov
and
cmpsb
int
bound
mov
scas
sub
aad
aas
sub
lods
pop
jbe
imul
jns
sbb
mov
fs
aas
or
in
or
mov
imul
cmp
jg
add
fstpl
arpl
pop
out
xorl
icebp
cmp
xchg
cmp
cs
or
out
cmc
sub
sbb
sbb
pop
pop
test
xlat
mov
sub
cs
in
add
imul
les
push
pop
hlt
adc
int
aam
addr16
mov
in
lret
cltd
push
test
mov
movsl
call
pushf
fsubr
xchg
inc
inc
add
dec
push
mov
stos
scas
fs
das
ret
jbe
stos
in
popf
repnz
outsl
pop
mov
testl
lock
and
aas
adc
in
out
xchg
adc
out
inc
mov
jge
mov
nop
xchg
cmp
pop
pop
cltd
mov
dec
xchg
pop
mov
adc
dec
push
jno
sub
jle
xchg
loopne
adc
shrl
testb
es
lods
popf
pop
fsubs
rcr
sahf
ret
loope
int3
sbb
push
mov
fldt
add
jmp
ss
stos
sbb
aad
out
movsb
and
pushf
adc
push
xor
js
movsb
xchg
mov
or
cld
lods
inc
rolb
inc
xor
addr16
and
insb
out
inc
mov
adc
xchg
dec
and
mov
or
mov
shlb
data16
push
cs
mov
mov
xor
cmpsb
push
shl
sub
pusha
pop
mov
pop
and
xor
mov
aad
bound
xor
push
shlb
lock
push
xchg
mov
mov
in
dec
ficoms
xor
push
mov
push
cld
push
dec
push
push
add
movsl
pop
jle
jo
and
dec
mov
iret
inc
dec
mov
daa
sbb
pop
arpl
arpl
les
in
dec
xor
mov
les
mov
sbb
mov
inc
mov
mov
xor
pop
push
cmc
sbb
jp
mov
aam
mov
jne
fwait
mov
out
add
jle
insb
outsl
stc
mov
pushf
pusha
es
adc
xchg
dec
mov
sub
clc
adc
insl
and
movsb
add
cmp
aam
test
cmc
movsb
or
shlb
sub
iret
add
jnp
adc
mov
jp
mov
leave
inc
lcall
popa
push
and
xchg
aam
mov
dec
cmp
jnp
mov
test
popf
inc
test
iret
pop
jnp
dec
leave
dec
dec
add
movsl
sbb
mov
ds
xorb
mov
sub
dec
or
sbb
inc
repz
ret
xchg
mov
aam
in
cmpsb
mov
call
pushf
push
negb
add
sahf
adc
pop
cmp
dec
or
lea
dec
or
dec
xchg
in
mov
rorb
gs
mov
mov
popf
jae
movsb
mov
hlt
shlb
sbb
js
das
xor
mov
cmpsb
jb
xchg
pop
or
xchg
ret
xchg
iret
adc
cmp
fistps
das
subl
xchg
jbe
loopne
xor
in
movsl
mov
ds
cmc
xor
imul
pop
ret
inc
or
leave
mov
mov
and
and
mov
push
adc
push
popf
imul
int
orl
mov
in
popf
imul
cs
pop
push
and
push
popa
int
mov
sub
sub
xchg
adc
scas
xor
inc
rorb
out
dec
sarb
xchg
test
ds
bound
cmp
fstpl
pop
xor
xlat
cmpsl
push
fucomip
pop
or
test
sbb
cs
mov
hlt
lret
mov
and
dec
sub
mov
xor
lcall
xchg
xor
shr
aaa
fstpt
lahf
scas
pop
fimull
fimull
sbb
jae
enter
jl
adc
arpl
lods
pushf
mov
mov
es
jo
data16
cmp
ja
call
dec
mov
scas
jno
fldcw
into
shll
push
pop
xor
jge
inc
mov
and
sub
pop
movsb
adc
add
inc
xor
adc
ja
cltd
inc
sysexit
cmp
fbstp
daa
cmp
jp
maxps
xor
out
push
int3
push
test
push
test
sbb
les
jmp
gs
pop
pop
cmp
out
inc
jmp
fnsave
insb
into
jg
or
inc
nop
ret
push
sahf
sub
fwait
pop
sti
cmp
sub
mov
sbb
pop
xchg
seta
loop
cmp
mov
xor
call
add
push
inc
pop
mov
pop
mov
xor
dec
push
enter
or
insl
shrl
sbb
lahf
clc
and
mov
or
movsl
cmp
test
pop
pop
les
and
mov
aaa
or
hlt
fnstcw
cltd
jmp
pop
ljmp
xchg
push
adc
inc
or
push
imul
imul
test
cmp
pandn
mov
es
jecxz
imul
test
and
mov
and
xor
aad
popa
xchg
and
out
int3
pop
int
imul
and
cmp
sti
mov
jo
iret
adc
cmpsl
xor
mov
into
xor
or
adcb
stc
inc
mov
mov
sbb
shl
repnz
aas
outsl
pop
fisubrl
xchg
sub
cmpsb
sub
mov
inc
addr16
sbb
inc
push
test
jl
jae
test
movsb
adc
loopne
push
fmuls
mov
lcall
adc
add
imul
mov
and
dec
xor
cmpb
mov
cld
sub
pop
leave
rorl
add
pop
mov
jge
pop
jmp
aaa
sbb
and
adc
xchg
test
hlt
in
mov
pusha
cld
push
jmp
lcall
scas
jl
adc
fucomip
test
data16
fnstenv
test
cmp
cli
stos
jp
mov
aaa
mov
pop
dec
std
xor
lods
pop
jp,pt
adc
jl
push
lock
cmpxchg
adc
out
movsl
xor
mov
imul
pop
xchg
jg
andb
popf
out
inc
cs
or
push
aas
inc
xor
cmpsl
cmpsl
adc
jae
add
dec
sbb
call
aas
jmp
out
jbe
lods
sti
xor
jp
mov
push
lahf
pusha
jg
test
outsb
sbb
out
scas
push
into
inc
dec
out
je
test
pop
std
cld
aaa
adc
mov
jecxz
inc
xor
mov
push
add
dec
adc
push
ret
xchg
in
insl
movsb
ret
push
int
sbb
aam
fists
mov
pop
fisttpl
nop
out
idivb
movsl
mov
mov
add
hlt
ja
lock
test
bound
push
sahf
xchg
ljmp
int3
das
pushl
and
sbb
xchg
rcll
sbb
pop
jecxz
stc
or
inc
in
arpl
and
aam
add
fidivrs
popf
sub
mov
ror
mov
pop
sub
lret
arpl
xchg
insb
mov
cmp
leave
fcomps
test
sub
das
inc
lock
cltd
add
pop
xchg
mov
jp
and
cmpsb
cmp
stc
mov
xchg
xchg
icebp
out
shrl
pop
adc
xchg
or
neg
adc
loop
movsl
mov
pop
cltd
push
stos
sbb
pop
fiaddl
fnsave
shr
push
sbb
push
mov
mov
repz
std
js
dec
mov
xchg
xchg
fdivl
adc
push
mov
jmp
cmp
daa
xchg
and
pop
ficoms
sar
mov
daa
mov
xor
inc
pop
and
fwait
adc
std
mov
jmp
xor
mov
cli
inc
jg
push
fwait
insb
nop
xchg
cmp
out
push
xchg
xchg
inc
sahf
lds
jmp
sti
and
push
fs
push
ds
mov
mov
fsubs
cmp
xor
sbb
cmpsb
out
jmp
pop
adc
in
mov
lods
jnp
lret
test
sahf
rcrl
prefetcht0
into
test
int3
pop
jae
mov
mov
das
sti
inc
add
pop
lea
rcl
cmp
xchg
out
lret
inc
mov
mov
pop
mov
sub
adc
shll
add
lahf
ds
lcall
xor
xchg
adc
jmp
outsl
push
xchg
cmp
cwtl
mov
or
int
and
jbe
sub
cld
mov
cs
daa
push
sub
loope
fsubr
out
clc
xorl
repnz
push
movsl
loopne,pt
and
inc
mov
mov
xor
adc
jl
or
mov
adc
jbe
ss
mov
arpl
out
call
jae
movb
adc
mov
aaa
push
dec
push
call
stc
jae
pusha
mov
loop
outsb
jo
inc
int
jo
mov
add
imul
push
ret
rcrb
scas
dec
push
xlat
add
sub
sbb
repz
andl
mov
pop
jg
daa
sbb
inc
lock
jne
ficoms
adc
cwtl
mov
out
xchg
xchg
test
fidivs
push
fucomp
mov
xchg
cli
out
daa
and
repnz
int
push
mov
out
dec
cmp
jo
pop
sbb
pop
dec
sub
aaa
outsl
jmp
push
cmp
rclb
cmpsb
and
xchg
sub
leave
mov
fcmovnbe
repnz
js
adc
call
pop
inc
jae
push
lea
fbstp
scas
aas
add
popf
or
and
cmp
mov
fadds
stos
sub
jbe
popf
inc
push
xor
repnz
movsb
rclb
push
inc
stos
les
xor
adc
bound
popf
scas
sub
sub
add
xchg
fimull
sti
cld
in
xor
xchg
fdivs
mov
outsb
jbe
jbe
lret
xor
push
stos
jns
into
loop
jno
xchg
stos
xor
mov
mov
fmull
mov
lock
push
and
jbe
leave
cmp
and
inc
movsl
mov
push
das
xchg
add
icebp
push
popf
cltd
or
push
sti
and
in
testl
sub
or
ja
out
or
loop
mov
xlat
cli
xchg
jo
test
jns
fisttps
enter
dec
js
or
sbb
xor
xor
test
pushf
mov
imul
out
jbe
int
inc
add
leave
jne
lcall
push
xchg
push
xor
push
cmpsb
mov
or
mov
lds
repz
out
negb
mov
stos
push
sub
lock
sub
sub
jae
xor
and
rorl
pop
pop
es
dec
iret
cmp
pusha
and
rcrl
xchg
or
mov
or
push
imul
cs
fstl
sbb
test
or
ss
out
nop
insb
rolb
fcoms
scas
sub
pop
xor
add
cmp
lcall
inc
or
xchg
dec
dec
fdivl
cmp
test
add
js
mov
test
cmp
neg
jge
mov
scas
lahf
fdiv
dec
in
leave
jp
sub
addr16
daa
aaa
xchg
loopne
outsl
sbb
adcl
mov
pop
sahf
jae
pop
nop
test
das
shll
pop
push
fldenv
dec
insb
cltd
dec
pop
gs
pop
divl
in
daa
dec
push
loopne
and
out
enter
mov
cmc
and
xchg
or
pop
lret
sbb
dec
and
add
repz
sbb
je
jg
adc
inc
stos
int
ljmp
in
mov
arpl
push
jmp
or
or
push
int
sbb
repz
sub
fisubs
push
mov
cmc
push
add
xchg
jb
dec
ljmp
outsl
xchg
cmpb
jns
jno
push
mov
fdivl
push
fcomp
mov
push
and
dec
lret
fimuls
out
cmp
pop
bound
and
xor
sub
adc
xlat
or
xchg
add
stc
shl
call
data16
sti
mov
div
dec
and
mov
out
dec
xchg
es
mov
dec
lcall
fidivrs
mov
insb
daa
push
sub
aad
int
adc
and
or
outsl
test
adc
xchg
ds
jnp
jge
or
dec
xchg
xchg
lahf
dec
mov
fcmovne
lret
ss
sub
cmp
pop
in
ja
jge
cmp
dec
call
or
pop
push
pusha
add
xor
cld
jae
ficomps
andl
mov
out
dec
sbb
pop
inc
mov
dec
stos
cmp
mov
cltd
sbb
xor
in
fwait
mov
and
mov
inc
sbb
dec
sarl
push
mov
and
push
shl
stos
aam
jle
add
dec
cmp
or
cmp
sub
cltd
jle
inc
add
stos
movsb
insl
or
insb
data16
movsl
pusha
ja
xlat
test
push
mov
sbb
mov
lret
lret
lock
leave
jns
and
dec
fcomip
mov
dec
push
aad
scas
lea
insb
leave
out
xchg
mov
mov
jg
mov
rcrb
xor
mov
out
stc
popf
rolb
or
adc
add
pop
xor
test
decb
jmp
ljmp
xorl
cmp
adc
mov
cltd
insb
jmp
lock
lcall
dec
jp
xor
in
testl
sub
fsubl
pop
rclb
subb
mov
outsl
inc
insb
mov
pushf
lock
inc
ja
pop
adc
push
inc
in
xor
sbb
aas
jnp
mov
or
data16
mov
movb
jge
jl
and
fwait
inc
or
xor
ret
pop
addl
in
mov
icebp
mov
or
ss
push
jmp
fnsave
fildl
lcall
jns
xor
adc
or
cmp
cmp
xchg
push
or
sub
push
inc
or
scas
cmpsb
add
enter
mov
mov
push
ja
dec
in
outsb
or
out
cwtl
ret
das
push
xor
xchg
mul
sbb
jns
push
in
cltd
inc
or
ret
jnp
dec
jmp
pop
insl
xchg
mov
mov
cmpsb
ja
mov
xchg
mov
jno
insb
pop
data16
mov
mov
fdivl
adc
daa
cmp
push
flds
orb
pop
insb
decb
xor
aas
mov
das
fsubr
jbe
cs
xchg
std
and
jno
cmc
ljmp
inc
adc
call
xor
xchg
sbb
rcr
and
in
inc
or
mov
push
push
xchg
fcomps
or
fnsave
jo
sub
push
repnz
cwtl
pop
out
faddl
imul
sub
sti
push
inc
mov
lret
mov
jl
xor
popf
int
sub
push
sbb
jecxz
sbb
pop
faddl
sub
or
or
fbstp
xchg
mov
imull
sbbb
lds
ljmp
addr16
cmpsb
xchg
xor
cmpsb
shlb
pop
test
jmp
push
cmp
sbbb
cmp
dec
cmp
xor
add
mov
scas
pop
mov
cmp
inc
jge
jecxz
js
pop
xchg
divb
notb
ljmp
testl
cmc
stc
insl
out
sbb
loope
xchg
ficompl
cmp
and
fwait
sbb
lret
call
push
inc
insb
push
repnz
loop
test
movsb
inc
xor
sub
sub
cwtl
sub
mov
push
je
outsl
popa
outsl
inc
or
cmp
xor
or
xchg
fiadds
inc
pop
push
or
add
daa
into
je
jo
hlt
inc
add
ljmp
pop
aam
sahf
mov
shll
mov
and
cmpsb
cwtl
out
dec
jecxz
inc
mov
dec
dec
adc
mov
dec
pop
loopne
xor
jl
or
dec
jo
push
das
in
imul
xchg
cmp
aad
js
xchg
ss
add
pop
iret
aad
addb
mov
jle
mov
dec
into
rcll
dec
jmp
mov
xsave
mov
mov
pmulhuw
mov
mov
inc
jl
je
or
or
fsubl
ljmp
int
outsb
push
adc
inc
push
inc
sub
out
mov
rcr
sarl
cli
dec
iret
fdivp
popa
mov
pop
adc
xor
push
and
addr16
adc
xchg
insl
nop
dec
into
insl
inc
lods
ret
leave
lcall
lea
loop
bound
inc
mov
sub
pop
stc
add
push
cpuid
mov
mov
call
add
pop
mov
sub
out
arpl
pop
out
adc
nop
movb
aam
andb
in
cmpsb
stos
mov
subb
leave
sahf
mov
lcall
dec
sarl
mov
cwtl
mov
call
sub
std
sub
aad
dec
sbb
stos
push
dec
cwtl
fstpt
aas
cmp
repz
sbb
dec
add
pop
dec
lret
push
mov
inc
add
inc
popf
pop
inc
push
sbb
mov
mov
ja
js
sti
add
divl
adc
in
jbe
push
divl
aam
shl
sub
xchg
inc
adc
movsl
mov
jb
sbb
shrl
push
cmp
scas
loope
inc
out
mov
add
cmp
repz
cmp
cmpsl
push
push
push
push
jge
test
cs
push
adc
push
repnz
xor
ja
jp
pushf
adc
fmull
insl
sub
int3
push
jo
fstps
xorb
aaa
push
cld
inc
gs
and
stos
push
inc
jae
fwait
pusha
fs
or
fldenv
mov
pand
lods
jl
xchg
jg
push
cmp
xor
addr16
pop
cmp
jbe
jae
sub
outsb
mov
nop
mov
fucomp
mov
bound
cmp
and
cld
sbb
adc
aas
hlt
sbb
xchg
mov
push
test
push
jno
mov
cwtl
xbegin
sbb
into
mov
inc
or
stos
clc
cmp
xchg
scas
ret
push
adc
push
ss
dec
sti
sbb
jo
aam
mov
cli
cmp
mov
cmp
leave
dec
sub
lcall
mov
lds
cltd
sti
ljmp
sub
fldcw
xchg
lea
faddl
imul
dec
in
add
push
mov
cmp
xchg
sbb
insl
xchg
pop
mov
imul
inc
mov
sub
lahf
pop
repz
push
aaa
cmp
add
rcrl
fstps
xor
lods
dec
icebp
sub
pop
pop
movl
pop
int3
in
lahf
add
insl
inc
push
xchg
mov
dec
push
pop
scas
push
fistpl
loope
cmp
aad
loopne
or
cmp
fs
mov
push
xor
xchg
push
test
int3
aaa
mov
cmp
jg
xchg
aam
cmp
mov
in
pop
push
shlb
xchg
insb
push
aaa
test
adc
and
xor
jl
xchg
idivl
lods
jb
push
xchg
es
je
push
loopne
int
mov
sub
mov
sbb
imul
inc
cwtl
cmp
jnp
adc
jle
out
mov
jb
lock
shll
gs
pop
iret
mov
push
repnz
outsl
outsb
push
loop
jne
jno
fwait
and
mov
inc
push
fbstp
and
pop
test
loopne
and
idivl
ds
jecxz
loopne
cmp
mov
lods
xchg
mov
lock
and
dec
test
sbb
fldlg2
push
cmpsb
outsl
mov
pop
mov
inc
sbb
dec
push
pop
in
test
loop
loop
jmp
add
jne
sub
dec
ret
out
loope
ret
jmp
push
addl
jecxz
rcll
ret
push
xor
and
adc
add
jae
arpl
mov
mov
inc
repz
rcll
ret
push
xor
and
adc
add
jae
arpl
mov
mov
inc
repz
rcll
ret
push
xor
out
add
jae
arpl
mov
mov
inc
repz
push
push
inc
push
int3
neg
dec
mov
ds
stos
imul
add
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
ds
mov
sahf
push
mov
mov
ds
push
push
outsl
outsb
jg
pop
dec
pop
pop
scas
scas
mov
sahf
out
out
dec
into
cs
push
push
push
outsb
outsb
jle
dec
dec
pop
pop
scas
scas
mov
sahf
out
out
dec
into
adc
bound
jnp
or
sub
pop
fisubrs
into
jb
sub
aas
xor
xor
dec
bound
cmpsb
sbb
aad
sti
cmpsb
xor
sti
lahf
fbld
push
icebp
add
pop
xchg
rcrl
xchg
pop
xchg
scas
xor
sub
push
ljmp
pop
cs
outsb
rcrb
outsb
mov
pop
imul
mov
out
shr
cs
fimuls
mul
mov
push
jg
xor
fstpl
arpl
out
testb
xor
mov
dec
aas
pop
repnz
sub
lret
dec
mov
inc
add
sbb
push
and
sbb
shr
das
jnp
xchg
push
sbb
pop
pop
icebp
scas
mov
sahf
out
out
dec
into
cs
push
push
push
outsb
outsb
jle
dec
dec
pop
sbb
ret
cli
insl
loop
rcr
lods
sbbl
push
popa
pusha
jp
sbb
xor
and
sub
icebp
out
std
hlt
cli
mov
leave
mov
cmpsb
fidivrs
push
jbe
jnp
and
cmp
fdivr
nop
lret
mov
dec
into
cs
push
push
push
outsb
outsb
jle
dec
dec
pop
pop
scas
scas
mov
sahf
out
out
dec
into
cs
push
push
push
outsb
outsb
jle
dec
dec
pop
pop
scas
scas
mov
dec
popf
sub
call
cmp
addr16
lea
pop
outsl
inc
sub
mov
leave
loope
fmull
pop
mov
jge
repnz
fidivrs
cld
and
cld
dec
gs
cs
add
idivl
xor
lods
leave
or
dec
xchg
ficomps
adc
and
dec
sbb
jae
sbb
rol
cltd
or
push
dec
mov
push
xchg
pop
mov
mov
stos
inc
cmpl
xchg
push
fsubrl
lock
ja
inc
enter
test
add
and
imul
loope
movsl
outsb
in
cli
pop
dec
push
inc
inc
in
mov
mov
sub
xlat
mov
push
jae
les
mov
mov
push
and
ljmp
pop
out
inc
insb
lods
sti
mov
out
pop
inc
ret
push
ljmpw
mov
mov
jg
add
mov
add
lds
and
icebp
mov
aas
test
dec
stos
jmp
jl
fmul
pop
mul
xchg
push
jecxz
mov
mov
add
xor
push
add
out
add
sbb
daa
lahf
jecxz
dec
xorb
push
dec
call
fnstsw
ficoms
andl
iret
popf
rcl
inc
inc
lods
rcr
sub
xlat
add
pusha
adc
data16
fs
jecxz
or
ret
cwtl
pop
mov
les
orb
cs
mov
lods
lea
rorl
int
aas
cmp
inc
filds
lcall
cwtl
lods
xor
xchg
lods
lock
shrl
and
dec
not
loopne
cli
loop
jmp
in
lea
or
mov
jmp
mov
ss
lret
jle
add
xor
inc
cmpsb
xor
outsb
out
push
jp
popa
jle
imulb
repz
pop
loopne
and
mov
loope
dec
fldenv
daa
shll
fcmovnb
ret
xor
lret
mov
insl
addr16
jp
and
pusha
popa
dec
and
cmc
and
comiss
sbb
mov
sete
jle
out
cmp
pusha
iret
xlat
fcmovu
mov
insl
mov
sub
mov
cwtl
and
push
hlt
jg
cmpsb
sub
std
jbe
jl
dec
ds
imul
insb
pop
outsl
xor
mov
cmp
es
jb
cmp
enter
mov
in
sub
cwtl
cmp
push
dec
sbb
popf
arpl
lock
movsb
aad
les
sahf
aaa
stos
add
dec
or
out
repnz
xchg
enter
adc
push
sbb
sub
push
xchg
push
clc
out
xor
insl
xchg
mov
mov
orb
mov
sub
out
sub
lar
movsb
stos
push
std
test
stos
cmpsb
add
out
lods
mov
sbb
repnz
ret
inc
rcl
movsb
iret
adc
jecxz
out
enter
stos
cmpsb
gs
adc
adc
daa
sahf
push
orl
jo
icebp
or
jp
cmpsb
xchg
lret
dec
fisttpl
jg
cld
mov
dec
test
sub
mov
enter
or
dec
cmp
mov
sub
insb
sub
pop
xor
push
in
mov
sub
push
mov
sbb
cmp
jb
cmp
mov
ret
jg
xchg
mov
jbe
pop
imul
rolb
loop
cmp
sub
lcall
repz
adc
ret
dec
clc
loope
fwait
or
push
add
daa
test
test
ljmp
out
push
cs
fistpll
iret
add
lock
mov
sub
xor
mull
xlat
pop
push
pushw
mov
cmpsl
cmpb
pop
sub
jb
aas
lahf
adc
iret
das
fbld
outsb
rcrl
push
aaa
stos
icebp
pop
cltd
mov
stos
xor
lcall
push
pop
mov
mov
dec
push
mov
test
and
ja
movsb
and
add
loopne
cmp
and
cmp
push
mov
add
lods
fcoms
and
test
call
test
mov
mov
jns
cmp
jnp
push
lahf
dec
jae
aaa
mov
loopne
push
ja
push
adc
in
fdivl
outsl
pusha
pusha
out
std
jmp
adc
outsb
jbe
arpl
cmp
pop
test
mov
test
mov
cwtl
pop
xchg
pop
ljmp
aam
xlat
xchg
jmp
mov
out
and
sub
fstps
repnz
jnp
add
repnz
arpl
mov
sub
clc
sub
cld
sbb
xor
sahf
inc
insb
ljmp
xor
xchg
mov
stc
push
icebp
jno
arpl
stos
adc
mov
mov
addb
hlt
mov
aaa
cmp
lea
inc
add
jb
loope
sub
jecxz
push
outsb
roll
sahf
insb
push
xchg
xlat
and
sub
cmp
ficoml
jnp
lahf
and
jp
adc
jae
nop
mov
popf
hlt
sbbb
fiaddl
mov
adc
xor
cs
lahf
sbb
and
sysexit
cmc
mov
pop
mov
push
je
adc
ret
dec
test
sahf
adc
and
cs
sti
inc
xchg
iret
subl
pop
test
fcmovnu
sar
mov
mov
mov
dec
xchg
cmc
dec
sub
xchg
lcall
aas
aas
cld
iret
sbb
mov
test
and
loopne
test
movsl
dec
iret
ljmp
dec
mov
jne
into
mov
inc
mov
cmc
mov
in
xchg
or
testl
gs
dec
add
push
xor
lea
pushl
outsl
push
popf
fstl
bound
add
push
add
repnz
outsl
orl
rorb
inc
jmp
add
cmp
insl
or
jnp
sbb
pop
mov
jnp
adc
movsb
hlt
jge
mov
into
cmpl
cltd
adc
push
or
arpl
jne
sbb
xlat
fmull
fcomps
clc
adc
enter
aas
divl
push
insb
pop
push
sbb
xlat
inc
repnz
mov
into
xchg
sarl
add
lret
cli
call
jae
xchg
pop
cmp
cmpb
push
push
cli
cmp
into
and
addr16
clc
into
mov
aam
fistpll
mov
iret
mov
xchg
mov
lahf
jge
xor
sub
js
mov
push
add
pushf
pop
mov
pop
cwtl
pop
push
jl
inc
push
pop
stos
enter
dec
pop
addr16
enter
cmpsb
xor
lock
in
jmp
clc
cmpsl
inc
sbb
jecxz
or
xchg
mov
ds
stos
adc
add
out
dec
push
roll
cmpsl
test
aaa
lret
fldt
and
popf
xor
loope
stos
test
xchg
lcall
adc
xor
sbb
enter
pop
jmp
mov
in
paddusw
push
and
xlat
movsl
stc
dec
pop
rcrl
dec
outsb
push
pop
cld
or
fdivrl
add
into
mov
sub
jp
jge
cmp
arpl
je
push
dec
mov
shlb
nop
scas
movsb
inc
jecxz
mov
cmp
xor
push
mov
jbe
xor
sub
test
icebp
pop
popw
lret
stos
hlt
mov
mov
jmp
dec
pop
std
or
loope
sub
movb
sbb
cmp
addr16
jecxz
xchg
insb
dec
test
jae
cld
dec
dec
outsb
into
outsb
enter
mov
inc
mov
fisubl
clc
lcall
imul
pop
mov
icebp
iret
and
inc
and
sarl
or
xchg
addr16
inc
push
aaa
shll
adc
test
xor
out
mov
and
pop
bound
pop
jle
in
xchg
aad
cmp
push
mov
lods
jl
xchg
cld
sbb
rorl
inc
es
loopne
cmp
outsl
push
in
repz
mov
mov
std
push
or
sub
movsl
in
add
lcall
loopne
push
cld
dec
iret
push
push
pop
das
lret
xchg
lock
sub
push
das
mov
push
sarb
mov
lea
push
adc
add
mov
fistl
imul
shlb
sub
mov
std
iret
xor
out
sarl
or
call
mov
stos
pop
out
or
xchg
mov
dec
test
sub
cltd
add
insl
xor
pop
enter
pop
or
push
lea
clc
pop
adc
push
and
dec
jge
out
lea
scas
test
inc
repz
bound
fisttps
mov
repnz
mov
adc
mov
stos
inc
mov
movd
loope
pop
aad
push
push
lds
dec
shlb
mov
mov
add
popa
stos
sbb
popf
ds
pop
cmpsb
add
mov
or
in
incb
adc
pop
sbb
mov
vmptrst
push
fsts
loop
jno
or
lret
std
sbb
dec
sbb
dec
loop
mov
xchg
outsb
les
stos
cmpsl
loop
or
addr16
loope
jbe
xor
mov
pop
xor
sbb
in
fidivrs
lds
loope
xor
inc
nop
and
pop
cmp
adc
stc
insl
insl
mov
popf
cmp
jb
mov
sub
clc
in
push
mov
call
push
mov
push
push
call
pushf
inc
test
out
add
fucomp
add
pop
sbb
mov
push
adc
inc
aad
mov
loop
jno
adc
das
mov
addr16
scas
add
add
dec
je
int3
insl
shlb
sub
popl
loop
jl
mov
xchg
push
int3
jb
stos
push
xor
popa
sbb
cmp
clc
mov
imul
fsubl
int
mov
fwait
jg
int3
push
jg
aaa
fdivl
xchg
mulb
lock
out
add
popa
cmp
cwtl
and
cwtl
mov
int
int
pop
push
insl
cmp
inc
mov
inc
push
dec
lods
outsb
outsb
mov
je
dec
rcr
mov
and
mov
loop
pop
jg
sub
popf
sti
scas
jle
cmpsb
cmpsl
inc
je
outsl
or
mov
rcrl
mov
cli
xor
or
pop
xor
addl
mov
lcall
cmp
mov
insl
fnstsw
scas
pusha
sub
jns
cli
mov
mov
clc
subl
lcall
add
fsts
idivl
fwait
add
dec
xor
inc
int3
pop
add
push
insb
inc
or
lret
cmpsb
pusha
jns
adc
cld
jge
clc
popa
ficoms
sub
push
and
aam
pop
mov
and
sar
pop
jbe
aaa
mov
mov
sub
dec
cltd
ficompl
push
and
sbb
or
enter
sbb
push
les
push
xchg
pop
call
xchg
icebp
sbb
inc
data16
ds
jle
inc
and
dec
push
add
scas
mov
addr16
mov
cli
jae
test
aad
iret
imul
pushf
mov
dec
fcomps
addr16
aad
and
imul
sub
in
jl
mov
mov
in
mov
add
cmc
and
sub
cmpsl
cmpsl
xlat
jo
jg
jle
stos
pop
mov
push
xorb
test
sarb
and
dec
pop
adc
mov
mov
cwtl
shll
data16
xor
pop
inc
pop
fstpl
daa
jl
mov
mov
xchg
jl
data16
jp
pop
jmp
maxps
dec
push
mov
push
jmp
shrl
xchg
imul
sbb
and
mov
adc
in
into
or
fidivrl
push
or
daa
popa
mov
xor
xor
jmp
add
lahf
push
arpl
dec
out
jo
mov
aaa
fimull
cli
and
sbb
jbe
xchg
mov
mov
fadds
lds
lds
sub
ret
sub
pushf
mov
gs
add
jbe
lcall
dec
push
mov
pop
and
sbb
add
das
pop
loop
cs
xor
xchg
test
ds
loop
jge
fs
imul
clc
movhlps
mov
aam
jb
addb
inc
jmp
xchg
xchg
and
imul
fildl
shlb
pushf
arpl
popf
andl
cmp
ss
ss
pop
arpl
mov
pop
pop
jae
pop
jmp
mov
cli
adc
push
xor
dec
inc
shll
adc
cmc
lcall
ja
and
lcall
adc
fimull
loope
popa
fists
mov
loope
jecxz
sahf
and
ja
and
pop
ja
das
test
test
in
cmc
push
push
outsb
ret
frstor
loope
insb
add
or
filds
mov
aas
loope
jle,pn
insl
insl
and
shrl
inc
lea
je
mov
inc
cmc
jg
push
jmp
push
xchg
sahf
in
sbb
mov
repnz
and
jne
stos
bound
sbb
cmp
or
xchg
jae
iret
fs
mov
xor
inc
lahf
push
mov
pushf
insl
lret
mov
js
dec
push
mov
jmp
mov
mov
shrb
mov
aam
sbb
mov
flds
xchg
mov
data16
or
adc
push
dec
push
jns
mov
sub
gs
jg
add
bound
aaa
jl
inc
call
mov
scas
or
stos
jle
fcoms
mov
xor
scas
dec
sub
scas
out
dec
cltd
push
mov
jbe
lahf
mov
lcall
arpl
sbb
adc
lahf
pop
imul
repnz
cmp
or
fildll
cwtl
xchg
mov
mov
mov
xor
push
je
jbe
out
ret
cmpl
cmc
add
push
ja
xchg
bound
rol
pop
cmp
rorl
filds
dec
pop
jge
loopne
outsb
pop
dec
sbb
call
fsub
test
mov
imul
sbb
sub
add
imul
adc
push
daa
adc
scas
imul
lret
aam
gs
xchg
and
pop
inc
pop
xor
or
xchg
pop
add
jle
mov
mov
cmp
jecxz
out
aaa
mov
imul
fwait
or
out
data16
and
aaa
psadbw
sub
dec
test
xor
cli
sbb
jmp
insb
sbb
sub
xchg
cwtl
xchg
sub
loopne
mov
adc
jns
sahf
dec
add
inc
std
aad
pop
adc
das
sub
xchg
aas
in
mov
enter
dec
push
push
fs
dec
or
sub
mov
push
sub
and
stos
ds
mov
fcomps
es
stos
add
cltd
mov
jl
rcr
mov
sbb
add
adc
or
std
fadds
xchg
out
mov
jp
jb
jecxz
jo
std
stc
rclb
imul
adc
push
xor
movsb
loope
outsl
xor
and
xchg
je
mov
stc
test
call
jmp
sub
or
sub
cmp
sahf
sub
hlt
bound
fdivs
sbb
jns
test
stc
loopne
sub
push
add
out
mov
lock
out
pusha
mov
pop
and
or
iret
and
xchg
mov
mov
push
add
xchg
roll
shlb
lret
je
cli
loop
and
scas
imul
mov
push
fadds
mov
test
imul
int
pop
sbb
cmp
cmpsb
divb
and
add
xor
add
rcrb
or
sub
lret
movsl
pop
push
in
lahf
sub
test
push
push
xchg
test
dec
push
adc
jbe
in
xchg
push
pop
jno
add
std
xor
insl
test
and
sahf
jbe
add
js
sub
jae
jmp
xchg
xchg
xchg
movsl
nopl
cmp
fwait
cmc
insb
jg
repz
or
jmp
or
lods
ret
xor
push
sub
imulb
sub
dec
int3
fnstenv
xorl
frstors
push
insl
push
and
shll
sbbb
shlb
in
push
pushf
or
rcl
add
daa
rolb
adc
insl
push
fstps
or
push
adc
mov
lret
xchg
enter
mov
insl
jmp
push
adcb
xorl
mov
mov
movsl
sub
shlb
jb
cmp
push
push
test
xlat
in
dec
fdivrp
repnz
push
in
ret
push
je
or
sub
mov
pop
inc
jmp
lret
pop
mov
push
xchg
or
inc
xchg
cmp
add
shrl
sbb
dec
test
sarl
dec
jmp
cmp
add
and
lock
call
dec
mov
inc
es
lods
mov
or
aaa
mov
adc
sbb
push
sbb
inc
cmp
cmp
xchg
testl
scas
mov
in
dec
je
xchg
insb
iret
adc
ljmp
xor
fwait
ljmp
je
pop
mov
loopne
push
adc
fwait
adc
ret
ss
test
arpl
mov
push
test
lea
xchg
in
cmpb
cmpl
pop
mov
addr16
push
push
sarl
mov
or
cmp
mov
sbb
add
clc
in
jp
sub
outsl
mov
sbb
pop
pop
repnz
cs
dec
sub
mov
mov
inc
pop
fnsave
das
xchg
stc
xchg
sub
xchg
lret
popl
and
fmull
stos
cltd
sbb
push
pop
aam
or
pop
imul
add
mov
push
insl
sbb
jnp
aaa
add
mov
es
sub
mov
je
xchg
inc
pusha
mov
aad
pop
stos
xchg
lret
popa
adc
dec
int3
clc
pop
in
pop
mov
rcll
ja
add
stos
push
out
ret
in
mov
cmp
adc
repnz
mov
test
fstps
sbb
cmp
mov
jns
cmp
jnp
push
in
add
daa
ret
mov
shlb
loope
inc
fists
inc
push
or
and
dec
in
add
push
xor
sahf
test
sub
push
hlt
mov
and
push
out
dec
cld
cmpsl
sbb
xchg
daa
add
xor
js
pop
dec
mov
jg
notl
jmp
push
out
in
mov
inc
jno
pop
sbb
xlat
int
pop
loopne
mov
push
rol
adc
inc
mov
subl
mov
xchg
cltd
in
adc
xchg
or
je
stos
push
enter
mov
cmovne
loop
test
adc
ljmp
add
push
push
shlb
lret
subb
xlat
xchg
jle
mov
mov
or
in
andl
hlt
pop
lret
and
pop
shlb
or
adc
out
sub
and
push
or
jo
add
nop
gs
in
iret
das
lea
sbb
dec
xchg
mov
dec
or
inc
xchg
jns
push
inc
mov
mov
mov
dec
rcrl
dec
dec
cmp
nop
cmp
test
ret
pop
in
mov
dec
bound
mov
adc
or
hlt
lret
jge
ret
xchg
xor
or
es
push
stos
daa
loopne,pt
inc
dec
fsts
sub
cld
jl
jge
sar
es
mov
subl
imul
mov
dec
jg
lret
shlb
outsl
mov
xorb
mov
subb
shrl
jl
sub
imul
pop
jno
cmpsl
mov
sbb
adc
xor
jmp
xor
cmc
andl
pushf
mov
inc
push
iret
out
into
cmp
lods
add
aam
mov
jle
stos
jge
cmpsl
daa
fst
js
insl
dec
mov
pop
add
xor
repz
mov
test
inc
mov
out
out
dec
into
cs
push
push
push
outsb
outsb
jle
dec
dec
pop
pop
scas
scas
mov
sahf
out
out
dec
into
cs
push
push
push
outsb
outsb
jle
dec
dec
pop
pop
scas
stos
mov
lahf
out
out
dec
iret
cs
push
push
push
push
outsb
outsl
jle
dec
dec
pop
pop
scas
scas
mov
lcall
fisubs
sarl
xchg
movsb
push
push
imul
mov
mov
xchg
dec
xchg
inc
loopne
pop
movsb
dec
lret
sbb
push
int
fnsave
fs
mov
cmpsb
jge
dec
xchg
sub
imul
int
fnsave
push
mov
scas
mov
pop
out
adc
add
jecxz
add
dec
xchg
jle
jbe
or
or
adc
xchg
cmp
or
adc
lds
divps
mov
ja
aaa
out
insb
out
pop
cmp
fsubrl
rcll
pop
mov
shrd
movsl
clc
int
lods
jbe
push
mov
js
push
shlb
bound
popa
pusha
fnstcw
inc
mov
lea
lea
pop
mov
push
sub
loop
adc
lods
and
stc
and
gs
into
out
sub
or
js
add
loopne
pop
or
fisttpll
pushf
push
bound
inc
rcl
jns
or
mov
leave
in
stos
xchg
imul
lds
lods
xor
sbb
mov
push
loope
idivb
das
imul
push
fstpl
xchg
outsb
cmpl
fidivrl
ret
jge
push
bnd
pop
adcb
js
stos
dec
mov
jbe
add
and
sub
fldcw
cmp
sub
js
inc
out
arpl
stos
push
test
mov
and
and
sarl
lret
sbb
out
or
es
push
int
fnsave
mov
inc
popf
mov
cmpsb
jge
dec
xchg
sub
sbb
push
int
fnsave
mov
inc
popf
mov
mov
lcall
push
pop
sub
sbb
iret
xor
lcall
xchg
mov
mov
test
jb
add
rcll
mov
mov
out
imul
sub
xchg
out
jg
jmp
and
scas
test
cmp
push
xchg
mov
idiv
ret
add
jle
cli
ret
rorb
xchg
mov
sub
cli
ds
mov
cmpsl
sbb
lods
mov
push
add
out
daa
push
int3
shlb
loop
insl
jcxz
clc
pop
xchg
mov
fcompl
movsl
pushf
mov
xlat
idivb
int
push
and
xchg
dec
popf
addr16
xchg
lods
jp
fmull
lcall
sub
aaa
es
sbb
sub
lcall
loop
mov
sti
out
lahf
push
cmp
bound
and
test
push
testb
mov
shlb
and
rclb
shr
inc
popf
or
popa
lret
int
jp
cmp
aad
stos
cmpsb
push
arpl
push
int3
and
inc
es
insb
mov
cld
lcall
pop
into
test
pxor
repz
and
iret
pop
mov
dec
sbb
cmp
mov
add
mov
out
ss
test
jne
jno
lock
shlb
xchg
cmp
sbb
jbe
mov
mov
cmp
add
xor
and
clc
sbb
icebp
insl
dec
adc
popa
leave
js
stos
ficoml
dec
xchg
js
dec
int
rcr
sbb
xchg
int3
ret
mov
mov
jmp
push
pop
lahf
xor
icebp
sub
sbb
adc
rcrb
iret
call
leave
mov
ljmp
add
adc
aad
ss
test
hlt
push
cmp
push
sti
mov
sub
push
movsb
mov
addr16
ds
jnp
lea
push
inc
ja
adc
xchg
in
js
outsb
lret
test
fists
lea
lret
shl
dec
mov
pop
add
sbb
mov
ret
rcrb
cwtl
aas
cltd
pop
push
push
xor
pop
das
stos
sahf
cmpsl
dec
mov
adc
in
add
mov
enter
sti
in
rcrl
mov
rclb
pop
mov
xor
inc
shl
imul
jbe
add
js
outsb
sbb
push
jne
cld
mov
mov
das
add
xor
out
in
mov
pop
inc
adcl
rorl
popf
sbb
inc
or
add
jp
bound
dec
lock
push
adc
pop
fstps
pushf
push
in
xor
pusha
jo
int
fdivrl
addl
mov
add
das
sbb
xchg
iret
js
add
and
add
hlt
pop
loop
mov
mov
shlb
mov
lods
mov
insl
mov
les
test
enter
pop
push
loope
cmp
gs
int
jb
mov
mov
jmp
jo
or
adc
lods
out
addl
enter
push
lahf
jb
mov
repnz
push
inc
jp
out
insb
stos
js
outsl
popa
cmp
stos
xchg
stc
mov
mov
sbb
push
sti
mov
sbb
sbb
lcall
cmp
mov
movsb
outsb
mov
or
mov
and
insl
inc
push
jo
inc
pop
dec
push
mov
cmp
xorl
and
sbb
and
jle
pop
inc
pop
test
fincstp
and
jbe
in
mov
push
adc
outsl
fucom
push
pop
fucomp
jl
repz
xlat
iret
stc
lods
xchg
inc
push
push
add
push
repz
mov
aaa
in
jb
sbb
adc
xchg
int
xchg
sub
sbb
xor
mov
pop
aaa
xchg
mov
inc
mov
push
outsb
stc
mov
jg
pop
push
pop
mov
loope
cmp
ljmp
test
pusha
pop
ret
fs
enter
and
mov
pop
jno
loop
cmpsl
ret
cmc
xlat
sbbl
jo
rcll
sbb
sub
dec
pop
dec
adc
pop
cli
jne
or
lret
jle
mov
jl
push
mov
cwtl
nop
or
out
pop
lcall
mov
xor
jmp
jae
gs
arpl
mov
arpl
pop
cmpb
popa
jg
lods
daa
mov
test
jb
fisttps
aad
ds
xor
dec
sbb
mov
mov
pop
jnp
repnz
test
inc
xchg
sub
lcall
aas
pop
push
jae
mov
xchg
aas
mov
in
outsl
mov
or
adc
test
out
lods
mov
in
sbb
lret
xor
and
pushf
dec
ret
jae
pop
stos
jg
cmp
jmp
and
xchg
and
mov
pop
sarb
mov
aad
scas
dec
xor
mov
ret
outsb
add
insl
shr
jecxz
jb
lahf
adc
ret
cmc
pop
test
xor
pop
sub
fistpll
or
mov
mov
movsb
data16
insb
mov
in
call
sub
sahf
and
int
cmp
shl
dec
fs
jle
adc
es
or
mov
xchg
mov
cli
sbb
aas
mov
inc
sub
mov
sub
sub
mov
fimuls
insl
gs
sarb
pop
pop
push
mov
ss
arpl
jnp
cli
cmp
test
push
or
fisubrl
mov
ret
cmp
adc
mov
icebp
jp
lods
int
jne
icebp
cmp
in
icebp
jae
subl
adc
clc
and
adc
jl
lods
jo
and
ss
leave
push
imull
mov
mov
iret
pop
xor
and
xor
jnp
cltd
repz
lods
push
mov
pop
scas
mov
stos
or
jg
sub
pop
mov
xchg
shll
or
movaps
stc
dec
fisubrs
fiaddl
jns
jne
xchg
sub
in
dec
dec
dec
movsl
pop
xor
push
push
push
out
xchg
and
in
insl
xchg
dec
xchg
scas
add
enter
add
jb
arpl
fimull
das
addb
fwait
mov
push
mov
adcb
jbe
pop
push
frstor
les
sub
cmp
or
rcrl
jle
orl
xlat
xchg
js
inc
test
fwait
outsb
call
jp
add
and
popf
daa
in
fsubl
mov
push
push
or
push
sub
icebp
insb
mov
sub
cmc
inc
lret
dec
pop
xor
notb
cmp
std
mov
scas
js
mov
add
int
xchg
xor
outsl
aaa
xchg
push
and
jecxz
fsub
adc
adc
push
shlb
les
push
push
inc
mov
push
dec
fisttpl
mov
mov
xor
push
or
xchg
rolb
mov
jecxz
sub
pop
jg
jno
les
lods
std
pop
sub
or
push
adc
enter
dec
mov
sub
cmc
sub
sti
sub
sahf
aas
add
out
mov
jecxz
jno
into
test
mov
dec
mov
sub
add
jb
push
test
mov
in
icebp
rclb
sub
movl
popa
or
cmc
xchg
mov
mul
lods
rorb
decl
into
mov
fisttps
add
test
ret
jmp
dec
adc
cmp
mov
mov
data16
add
arpl
push
sahf
sub
lods
js
push
inc
cmpsb
mov
inc
and
sbb
inc
xchg
fldt
xor
adc
decl
mov
test
lock
xor
adc
movsl
mov
push
leave
inc
push
or
and
xor
jnp
sbb
testl
imul
mov
nop
add
test
inc
repnz
filds
outsl
stos
push
dec
pop
pop
fisttpl
loope
mov
sub
inc
mov
aaa
mov
push
roll
outsl
lcall
mov
jnp
mov
and
iret
popa
scas
nop
in
dec
lea
push
push
ljmp
adc
test
insb
xlat
add
pop
pop
sbb
xchg
sub
push
leave
pop
mov
pop
imul
push
sarl
xchg
stc
push
pop
mov
cltd
add
ss
fcmovbe
js
and
test
stos
rcl
dec
and
jnp
test
or
aas
fstp
jns
inc
fwait
test
cmp
bound
inc
or
cs
sbb
and
push
cmp
imulb
fidivl
insl
xchg
pop
test
ljmp
pop
push
mov
sahf
inc
and
shl
data16
ja
push
insb
jmp
sub
sbb
popa
imul
mov
lret
fistpl
adcl
cmp
popf
jg
jp
sub
out
jae
imul
add
pop
ret
fstpl
mov
mov
sahf
aaa
jmp
addb
lret
or
ja
adc
mov
pop
push
mov
mov
xchg
inc
mov
fcompl
mov
sub
ss
sbb
pop
fst
sbb
sub
lods
lea
pop
inc
hlt
mov
dec
stos
jl
clc
jmp
or
mov
jns
ljmp
inc
pop
or
sub
imul
add
push
aam
pop
adc
pop
ljmp
je
mov
mov
out
pushf
sbb
bnd
jmp
fs
aam
jg
mov
push
mov
shlb
pop
das
xchg
test
nop
dec
mov
je
mov
mov
mov
cmp
icebp
into
mov
mov
stos
repnz
cmc
jo
mov
push
clc
movsl
add
lods
enter
add
dec
fsubs
xlat
jp
push
and
lcall
cmp
in
mov
adc
pusha
pop
sbb
sarl
cmpsb
sbb
or
out
out
lods
fucom
outsb
mov
sub
icebp
call
pop
jl,pt
into
push
test
movsl
addr16
scas
adc
cmp
mov
jl
xor
incl
loope
mov
leave
jnp
subb
hlt
inc
enter
pop
iret
mov
xchg
out
or
rcll
addr16
mov
and
pop
sbb
mov
xor
cmpsl
test
mov
jecxz
push
dec
mov
out
pop
movsl
sbb
imul
lods
and
cmp
iret
scas
cs
das
mov
jno
xchg
pop
insl
addr16
xchg
xor
data16
not
xor
imul
sub
mov
push
test
pop
stos
dec
test
test
xchg
lock
pop
aad
mov
repnz
inc
popf
adc
push
pop
push
ror
or
popf
pop
fs
js
sub
dec
sbb
addb
jne
or
mov
and
lret
dec
test
mov
fs
pop
pop
lods
ret
popa
dec
push
fistpll
iret
testb
das
xor
xchg
aad
mov
hlt
iret
aad
call
out
test
lock
dec
aam
xor
mov
cmpb
cmp
enter
xchg
ds
stos
ds
cmp
cmp
jo
aaa
sahf
pop
adc
lret
pushf
adc
mov
adc
xor
sarl
fld
insb
sub
shll
or
adc
lea
pop
or
lods
dec
mov
popa
gs
popa
inc
lods
loop
inc
mov
sbb
adc
cs
aad
dec
loope
inc
push
pop
rolb
popa
jg
aam
inc
adc
in
adcb
outsl
setge
adc
push
sahf
xchg
push
jl
or
sub
sub
push
popf
test
sti
cmp
xchg
shrl
sbb
lret
cmpsb
jle
dec
movsb
test
sbb
insl
mov
or
repz
inc
cltd
pop
cs
add
das
xor
gs
aas
mov
dec
jl
subb
jo
hlt
lret
leave
xchg
adc
fisubrs
pushf
mov
pop
sub
and
push
or
add
or
lds
jo
inc
push
push
mov
pop
xor
cmp
xchg
in
jb
sub
push
dec
pop
pop
outsb
divb
andl
sbb
shr
outsb
aas
push
push
repz
bound
lods
lret
ja
or
xlat
pusha
cli
pusha
or
jmp
imul
testb
scas
insb
es
inc
dec
mov
jge
pop
xchg
or
cmp
mov
adc
cmp
test
das
dec
inc
lods
xchg
iret
mov
cltd
cmp
xor
inc
test
xchg
lret
bound
push
xorb
push
mov
adc
insl
enter
in
mov
stos
add
mov
or
in
hlt
mov
popa
xchg
mov
in
sahf
mov
jns
sbb
sub
mov
lahf
daa
repz
sbbl
dec
js
loop
rolb
lret
mov
movsb
es
mov
jmp
adc
adcl
out
mov
movsl
aas
mov
fisubrs
add
cmpl
or
push
sbb
add
ret
jle
inc
xor
mov
loope
mov
pusha
hlt
dec
imul
in
push
mov
jle
lea
ss
xchg
lock
ja
or
xor
shll
aaa
sbb
push
std
je
xchg
xchg
sbb
loopne
mov
pop
inc
jmp
loop
adc
fcmove
push
sti
mov
imul
cmp
adc
hlt
fwait
sahf
cmc
negb
movsb
add
xor
jno
mov
jge
mov
and
leave
leave
push
cli
ds
xchg
add
adc
mov
adc
mov
jae
and
adc
and
insl
jge
repz
push
repnz
pop
aaa
pop
imul
shll
cmpsb
in
xchg
pop
cmc
adc
jmp
pop
dec
inc
fs
fcompl
jnp
dec
clc
cmove
lds
cltd
xchg
add
cmpsb
shlb
push
mov
in
inc
and
scas
or
push
daa
mov
std
mov
sarb
mov
test
pushf
and
out
adc
or
push
pop
data16
outsl
scas
cmc
sub
xchg
xor
and
cwtl
xor
cmp
push
and
push
jg
scas
jge
movsl
lahf
xchg
insl
pop
lret
lret
divb
jne
dec
xor
mov
dec
lahf
mov
and
mov
pop
ficoml
fs
push
ja
dec
outsb
lahf
adc
cmpl
xchg
mov
test
jmp
sbb
sbb
jne
movsb
mov
popf
xchg
xchg
js
cmp
sub
subps
sbb
or
push
jnp
jno
jo
sub
lcall
nop
add
pushf
jl
sbb
mov
push
dec
pop
addl
lods
mov
push
adc
fwait
cmp
aam
pop
xor
fbstp
or
cmp
lcall
sbb
hlt
cwtl
push
mov
scas
mov
push
adc
cmp
jp
jg
xor
jecxz
into
xchg
fisubl
in
scas
imul
in
aaa
mov
loopne
cmpsb
adc
lret
lods
push
lds
or
inc
mov
dec
pop
pop
cmpsl
cmp
enter
lods
sub
jge
stc
or
loopne
lcall
cmpsl
ljmp
or
cmc
insb
lcall
and
cmpsl
test
std
iret
sbb
jnp
cli
mov
adc
jnp
imul
test
xor
clc
sub
push
sbb
mov
mov
inc
lret
sti
jo
xor
dec
imul
jmp
rcl
cmp
lock
sahf
scas
psadbw
adc
aas
inc
dec
xlat
jmp
fldt
mov
dec
lret
rcr
out
in
lcall
add
xor
jecxz
xchg
inc
add
aam
inc
mov
or
mov
lods
imul
rcrb
jo
es
sbb
pop
mov
repz
imul
fstpl
jae
adcb
and
lods
imulb
sub
adc
jo
fnop
fdivrs
xor
xor
pop
inc
xchg
mov
rorb
adc
add
popf
cmc
inc
out
inc
fmul
inc
jge
and
xchg
and
jl
lcall
xor
popa
sub
cmpsl
andb
adc
push
jbe
sub
xchg
sub
lods
les
xorb
xchg
scas
jnp
xor
out
cmp
sub
add
out
pop
cld
inc
aas
xor
insb
xor
pop
mov
test
aaa
push
sbb
push
pushw
stos
mov
lods
push
test
sbb
or
jmp
add
testl
loop
pushf
scas
fstps
jg
cmp
in
jge
push
lock
mov
jecxz
add
sub
push
dec
das
inc
jo
jo
jae
mov
mov
add
leave
inc
mov
out
dec
ficoms
lahf
sub
negl
movsb
pop
sbb
lahf
or
loop
fisubrl
inc
je
push
dec
stos
ficoms
cmp
in
fmull
dec
inc
dec
pop
in
adc
cmp
xchg
jno
jno
movsl
scas
sub
pop
repz
xlat
sbb
imul
or
inc
stos
jle
mov
iret
mov
jbe
pushf
adc
xchg
push
ja
cmpsl
fcmovnu
ret
sub
hlt
jecxz
and
add
cmpsl
lcall
pop
test
push
xchg
adc
and
inc
and
sbb
sub
xorl
fisttpll
push
into
adc
nop
cmp
mov
fisubrl
sub
in
push
push
dec
sub
sahf
pop
mov
push
mov
add
sti
or
cmp
nop
in
push
lret
aam
in
xchg
in
push
xlat
sub
pushf
sbb
call
or
popa
daa
cmp
mov
ror
lods
call
mov
and
mov
xchg
adc
sarb
in
mov
mov
cmp
push
xchg
mov
pop
add
xor
add
adc
js
push
fnstsw
xchg
repz
pop
adc
in
pop
dec
cli
push
mov
cli
mov
inc
out
dec
sub
inc
and
adc
sub
pop
ds
cltd
adc
cmp
sbb
fwait
sub
test
push
cmp
popf
mov
xchg
xchg
sub
dec
ror
xchg
fcmovu
mov
je
loopne
lock
xorl
out
cld
push
sar
imul
jmp
push
mov
xor
push
pushf
divb
xchg
gs
sti
nop
and
cmp
mov
xchg
mov
andb
sbb
fistl
shlb
fcoms
sub
jmp
jnp
jle
loop
mov
xchg
daa
xchg
add
bound
mov
mov
loopne
lods
xorb
jnp
scas
sbb
inc
loop
cwtl
jno
push
popa
lahf
or
adc
jnp
in
pop
sub
sbb
filds
scas
xchg
out
es
loop
mov
les
stos
cli
subb
cmpsl
push
orl
out
imul
mov
xchg
gs
and
jns
sbb
addl
push
imul
out
push
pop
sub
fmuls
jno
lea
insl
mov
inc
stos
stc
add
imul
mov
das
sbb
push
ret
inc
loopne
outsl
pop
pop
xor
mov
sub
xchg
dec
shrl
xchg
adc
std
fmull
sbb
cmp
andb
popa
in
clc
jmp
pop
daa
mov
stos
mov
xor
arpl
in
mov
cmp
cmpsb
sub
scas
mov
lods
icebp
push
xchg
into
popa
add
in
mov
mov
xchg
push
mov
sbb
adc
push
jp
scas
testl
push
ja
push
lret
or
cmpsl
sbb
test
sub
sub
mov
jge
and
cmp
ss
es
push
int
fnsave
mov
inc
popf
mov
cmpsb
jge
dec
xchg
sub
sbb
push
int
fnsave
mov
inc
popf
mov
cmpsb
xor
imulb
sbb
push
int
fnsave
addr16
mov
movsb
jge
dec
xchg
out
push
lea
leave
adc
push
mov
and
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
xchg
outsl
lods
out
mov
push
bound
popa
jne
jns
add
add
add
pop
push
pop
add
mov
or
or
mov
jl
mov
push
add
jp
inc
add
sub
mov
les
lea
jmp
add
cmp
dec
add
add
and
inc
add
add
add
add
add
add
out
insl
add
add
add
add
add
add
add
add
add
clc
add
add
ret
add
inc
add
dec
add
add
add
add
mov
add
add
movb
add
add
pop
add
add
add
add
add
add
add
add
sub
pushf
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
pop
add
imul
pop
add
les
dec
add
add
add
add
jo
push
add
out
jno
sub
add
inc
add
mov
pop
add
inc
add
sub
add
mov
inc
add
add
xchg
sti
add
add
mov
add
add
mov
xchg
or
cmp
sti
add
add
ret
add
add
sub
sub
pop
add
or
add
add
add
add
add
add
cltd
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
inc
add
sbb
inc
add
add
push
add
add
add
add
nop
add
add
add
add
add
add
add
add
xchg
pop
add
add
add
add
mov
add
add
add
add
add
add
add
add
push
mov
add
add
add
add
xor
fiaddl
ja
lea
pushf
add
mov
pop
add
add
add
add
sub
je
sbb
sbb
or
sti
add
jl
ja
jo
mov
inc
add
xor
ja
add
pop
add
add
push
add
or
cmpsb
add
les
and
pushf
add
jp
jo
lods
add
add
or
add
add
add
xor
or
add
add
dec
add
add
add
pop
add
fwait
add
add
add
add
fadds
and
push
lea
jo
adc
in
add
fiaddl
push
add
add
add
sti
add
add
add
add
add
add
add
add
sbb
xchg
add
out
add
add
add
push
add
add
add
add
add
dec
add
add
add
mov
add
jge
arpl
fwait
add
add
add
arpl
filds
ret
add
pop
add
add
add
adc
inc
add
add
add
add
addl
pop
add
add
ret
add
push
add
add
sub
stos
add
inc
add
add
ret
addr16
ds
pop
js
jbe
sub
shll
sub
outsl
out
inc
sub
out
dec
cwtl
out
pusha
xchg
andl
xor
cmpsl
dec
leave
pop
daa
jbe
mov
test
jbe
pop
pop
add
sarl
int3
hlt
in
add
sti
out
out
xchg
aad
out
jecxz
mov
jecxz
mov
and
lea
jb
pop
pop
arpl
out
cli
lea
mov
adc
ret
jno
sbb
stos
push
jge
ja
scas
mov
ja
adc
sbbl
icebp
jg
add
inc
pop
stc
in
mov
call
pop
mov
addl
jno
inc
pop
fwait
push
or
push
cmp
in
repz
test
test
mov
cmc
xchg
hlt
les
mov
jmp
cltd
enter
addr16
or
sbb
jno
insb
lret
xchg
pushf
insl
jmp
xchg
lret
lods
gs
pop
je
dec
sbb
xchg
addr16
mov
std
mov
add
jbe
imul
test
cmp
addb
lods
pop
into
cmp
clc
push
sbb
adcl
sub
notb
jmp
jecxz
mov
out
push
ds
fiadds
sbb
lahf
cmp
aaa
pop
clc
add
xor
sarl
stc
sbb
pushf
repz
subb
clc
sub
xchg
push
or
ds
push
sub
shll
dec
push
je
and
adc
movsb
dec
mov
lahf
and
mov
adc
xor
and
inc
notb
dec
dec
add
das
cmovb
loopne
cs
mov
mov
decl
add
das
xchg
mov
or
jb
inc
push
sbb
sub
scas
fldl
hlt
jl
jmp
cmp
mov
mov
clc
repnz
inc
stc
mov
xchg
mov
push
xchg
jb
dec
and
push
and
mov
push
loop
and
add
jnp
sub
scas
in
lret
add
add
mov
mov
and
mov
xor
shll
repnz
std
call
sarb
dec
add
adc
sub
outsb
mov
repnz
ss
cmp
in
aad
std
outsl
jb
test
jmp
or
xchg
xchg
in
ja
xchg
jae
mov
stos
push
add
sbb
out
pop
rol
rcll
out
pop
les
lret
pop
pop
les
out
icebp
inc
neg
in
les
push
adc
fldcw
repnz
add
lret
out
int
fsin
in
sub
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
