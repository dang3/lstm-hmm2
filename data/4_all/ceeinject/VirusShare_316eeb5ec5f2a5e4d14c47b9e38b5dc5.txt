adc
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
imul
gs
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
test
mov
add
jne
inc
mov
or
scas
or
in
les
test
mov
add
je
fs
cmp
test
dec
in
aam
les
adc
add
je
rclb
xor
ljmp
btr
js
push
mov
popa
mov
push
pop
inc
scas
aaa
ret
pop
or
jns
nop
sub
sub
xor
jle
mov
fs
jmp
lods
movsb
adc
imul
cmp
push
xchg
push
and
in
faddp
sub
jl
inc
sbb
xor
test
dec
pop
pop
or
add
aaa
pop
fldenv
push
out
xchg
in
add
mov
xor
or
jmp
mov
dec
mov
imul
nop
cmpsl
js
mov
dec
and
insl
pop
xor
stos
addr16
cmp
out
cmp
ror
xlat
mov
mov
sub
aam
cmp
mov
add
je
fs
xor
test
pusha
in
aam
add
fstpl
push
in
inc
fwait
xor
xor
les
jl
push
cmpsb
xor
dec
out
call
and
add
or
pop
push
mov
nop
int
aam
in
lock
inc
clc
fs
sub
test
js
dec
aam
les
adc
add
je
fs
sub
test
js
dec
aam
les
jnp
ret
test
sbb
mov
xchg
xchg
sub
add
stos
mov
xchg
lret
or
pop
cmp
xchg
add
sbb
mov
ds
cli
mov
jo
rcl
pop
mov
push
je
mov
popf
fldcw
sub
in
add
addr16
xor
jae
mov
movsb
es
and
fwait
jo
dec
and
repnz
cmpl
nop
stos
popf
fnstsw
mov
mov
xchg
pop
mov
sar
into
mov
test
xor
pop
sbb
bound
dec
inc
xor
cmpsl
out
push
bound
inc
dec
addr16
xor
add
mov
ret
mov
inc
loope
push
test
rcl
and
fisubs
adc
adc
adc
stos
outsb
dec
push
mov
test
sub
clc
adc
in
jo
andb
icebp
dec
push
xchg
mov
clc
lret
pop
fldl
orl
inc
lods
jne
pop
hlt
sbb
cli
jle
mov
xacquire
jb
loop
stos
mov
ret
pop
out
test
sbb
cmp
cmp
mov
mov
lahf
mov
mov
mov
add
or
jle
pop
lods
sbb
lock
jle
sti
add
xchg
lcall
cmpsl
dec
lahf
movsb
rep
movsl
lds
in
pop
cmpsl
pop
jmp
adc
and
mov
loope
inc
inc
sbb
lret
dec
je
cmc
enter
push
xor
xchg
jno
out
pop
pop
xor
pop
push
xor
in
sbb
mov
test
and
pop
xor
xorl
cwtl
ret
jp
ja
pop
pop
pop
dec
jbe
pusha
cmp
sub
imul
inc
dec
and
aam
dec
jg
pop
xor
out
pop
sub
std
sbb
xlat
jmp
pusha
jge
mov
lods
jns
push
xlat
cmp
mov
push
ss
lcall
pop
int
mov
orb
fdivrl
stos
fs
lahf
cmp
cmp
cmp
mov
enter
dec
jo
aad
jo
dec
test
pcmpeqw
push
sbb
insb
adc
push
rclb
int3
sub
pop
mov
mov
inc
scas
adc
add
sub
jmp
addr16
jmp
adc
inc
hlt
cmp
jbe
loop
fwait
mov
icebp
jb
insl
mov
mov
adc
add
mov
fadd
dec
dec
and
cwtl
les
fwait
imull
imul
lods
sub
negl
jne
call
jbe
mov
dec
pop
or
in
shr
fcoms
fisubrl
out
movsb
sub
jo
mov
xorb
fadds
repz
js
pop
mov
jo
or
imul
cli
inc
xchg
cli
out
aad
push
push
jge
aad
sbb
icebp
imul
mov
xchg
dec
ss
and
push
shrl
jp
outsl
jp
xchg
add
sti
push
aas
dec
inc
addl
test
fsubr
jge
or
enter
xchg
and
loope
push
pop
mov
pusha
enter
mov
or
jle
call
xor
xor
lahf
imul
dec
rolb
imul
cmpsl
insb
mov
push
repnz
jle
cmp
or
inc
out
xor
movsl
popf
sbb
popf
cmc
dec
movsb
pop
mov
cmp
add
and
add
test
cld
es
add
scas
cli
sub
mov
sub
xchg
pop
mov
aam
jae
mov
pop
dec
pop
dec
into
dec
push
test
mov
enter
xchg
shlb
icebp
cmp
out
jne
dec
fidivrs
fs
sbb
xorb
out
hlt
jp
fistl
and
lahf
stos
xor
mov
push
ds
sbb
add
push
ficoml
shll
dec
cmp
fldcw
out
into
push
lods
fcmovnu
loope
sbb
movsl
out
outsl
jge
sub
pop
adc
sbb
or
fwait
gs
cwtl
fcomip
add
call
outsb
repnz
dec
dec
jb
push
arpl
pop
nop
fistps
pop
inc
jecxz
out
push
cmp
pop
les
fstp
das
imul
and
lret
push
xor
andl
and
test
push
pop
adc
inc
push
dec
fidivl
dec
jo
shlb
cld
xor
mov
gs
iret
scas
popa
xchg
ror
mov
mov
hlt
shrl
int3
cltd
lahf
lcall
jbe
xacquire
rol
add
sbb
in
push
push
mov
xchg
mov
push
pop
test
aam
out
lods
sbb
lock
les
lods
lret
adc
pushf
xchg
cli
cmp
pop
enter
sub
mov
adc
mov
fst
in
cli
mov
adc
sar
jge
aad
push
dec
sahf
imul
movsb
or
inc
dec
daa
cmpsl
lods
cmp
mov
std
aam
mov
jns
xchg
mov
adc
inc
or
mov
fcoml
push
aaa
or
aam
clc
call
dec
cmpsb
mov
pop
fidivl
adcb
sub
jno
cmp
mov
adc
push
es
mov
sahf
pop
xor
sub
or
ficoml
call
outsb
mov
insb
pusha
addb
aas
pop
out
rcll
nop
rcl
sbb
adc
inc
call
stos
cmp
mov
dec
lret
mov
mov
and
stos
scas
std
aad
pop
mov
pop
shll
les
adc
mov
pop
cmp
jbe
xlat
int3
xchg
mov
mov
cmc
ficompl
repnz
ret
sbb
cmp
mov
popf
dec
sbb
fisttps
cmc
ffree
aaa
imul
add
dec
cmp
lcall
push
add
lock
or
fs
mov
faddp
or
stos
add
or
sti
mov
loop
sti
sti
test
inc
mov
mov
push
loop
call
mov
pop
pop
loop
cmpb
shl
sub
into
cmp
push
sarl
imulb
and
loop
pop
fstpl
cmp
inc
loope
or
decb
add
dec
mov
jbe
jne
imul
movsl
rcr
add
lods
test
shrl
int
xchg
or
add
and
sahf
pop
mov
test
inc
mov
fistpl
mov
mov
push
sti
inc
cli
ss
jbe
fwait
mov
dec
sub
cwtl
cmp
mov
pop
das
jae
sbb
add
subb
push
ror
bound
jbe
arpl
mov
in
cmp
jbe
mov
stc
mov
cltd
jbe
outsl
call
jne
adc
adc
leave
popf
sub
mov
mov
adc
push
subl
add
in
pop
sub
loop
sub
adc
out
aad
xchg
test
repz
push
dec
jle
cmp
adc
push
xchg
jl
addl
aad
out
pop
lock
cltd
add
push
sbb
aas
cmp
addb
pop
into
cli
mov
and
xchg
xor
or
fildl
sbb
pop
push
push
sbb
lcall
jl
jmp
xchg
mov
xchg
cmp
mov
arpl
mov
push
dec
ljmp
sahf
or
shlb
pop
xor
inc
sbb
popf
out
pop
mov
fwait
test
andb
rclb
in
xchg
aad
lock
adc
mov
aaa
jns
orb
mov
dec
loopne
adc
leave
xchg
push
mov
mov
cmp
ret
xor
mov
cltd
js
cwtl
pop
mov
push
aad
inc
pop
loopne
imull
popa
rcll
sbb
sbb
sbb
xlat
or
jle
push
push
push
insb
push
sub
out
or
imul
jb
movsl
jb
mov
iret
jmp
xchg
ja
sub
jge
jo
lahf
je
xchg
inc
movsl
shrl
pop
pop
nop
mov
push
sub
xor
inc
pusha
ret
lahf
add
jl
push
ljmp
pop
mov
xor
or
sti
jbe
test
jle
call
xchg
xchg
xor
sub
rcrb
fsubrl
dec
fisubrs
xor
or
imul
inc
xchg
jl
dec
jnp
sbb
sub
sbb
pushf
popf
das
mov
ds
xchg
ret
or
mov
sbb
jo
aaa
jge
je
pushf
shll
or
and
lock
xchg
in
cli
xor
das
lock
loopne
shll
jg
mov
aaa
test
or
orl
pop
iret
imul
ss
cmp
and
out
lahf
out
in
je
jmp
push
mov
push
xor
insl
pop
dec
fwait
loopne
out
lds
pop
loopne
testl
dec
xchg
push
fdivrp
pop
aaa
lret
mov
mov
mov
sbb
cmc
mov
and
shrb
lcall
mov
push
mov
cs
mov
pop
xor
and
jmp
mov
pop
xchg
pusha
aaa
xchg
add
push
repnz
jle
push
add
xor
dec
test
push
jne
cld
xor
pusha
test
adc
xor
push
mov
jl
test
cmp
in
or
outsb
jno
cmpsb
loope
jmp
push
dec
popf
sub
fcomps
gs
cmp
fcmovu
dec
frstor
push
mov
and
adc
or
push
mov
es
out
inc
add
icebp
mov
je
sbb
leave
inc
shrb
fimuls
mov
adc
scas
inc
jns
xbegin
ja
cmp
fldcw
mov
push
mov
aas
mov
inc
push
mov
sub
adc
or
mov
push
mov
iret
adc
and
mov
push
repz
inc
jle
loope
mov
dec
les
xchg
mov
push
andb
cmp
sub
movsl
inc
mov
sub
pop
cmpsl
mov
mov
cmpsb
imul
std
jno
xchg
movsl
jg
insl
test
aas
xorb
and
in
xor
popa
insl
repz
sub
mov
dec
xchg
add
or
add
jns
in
sbb
orb
pop
mulb
adc
daa
nop
and
cltd
cmpsb
dec
or
insl
sbb
ss
loopne
popa
dec
movsl
mov
cmp
sub
loop
pop
and
pop
ficomps
fs
pop
ds
insb
pop
cmpsl
jne
mov
cltd
jle
aaa
shlb
push
jl
jg
rorl
jge
stc
xchg
sbb
dec
div
lret
lds
popf
mov
mov
push
inc
punpcklwd
ror
and
rcl
jbe
push
leave
addr16
or
test
les
xchg
std
push
and
into
movsb
je
dec
ret
test
scas
pop
xlat
or
outsl
mov
mov
mov
repnz
pushf
dec
fnstenv
jle
adcl
icebp
in
test
push
mov
out
mov
push
push
lcall
stc
out
add
mov
ficompl
je
push
mov
sub
subb
scas
fnsave
push
js
add
sbb
dec
pop
adc
enter
dec
dec
xchg
pop
adc
mov
cmp
inc
xchg
outsl
nop
adc
pop
pop
cwtl
sub
cmp
mov
mov
inc
adc
xor
lahf
push
icebp
and
and
sbb
mov
mov
rcrl
jne
test
adc
cmc
adc
rorl
loop
and
xchg
fiadds
iret
roll
adc
xchg
fsubs
inc
push
dec
push
lock
xor
cmpsb
xchg
pop
andb
fsubrs
inc
mov
add
jmp
mov
push
lahf
xchg
shll
bound
pop
das
mov
dec
scas
insl
roll
repnz
adc
mov
pusha
jge
jle
mov
mov
or
and
jle
push
push
insl
inc
test
jnp
pop
jne
push
jmp
cmc
mov
xor
inc
int
bound
push
in
out
xor
push
jmp
pop
pop
mov
push
push
sbb
dec
lock
adc
repnz
adc
loope
mov
mov
lods
clc
shl
inc
jne
cmp
mov
test
les
cld
testl
sbb
pop
cmpsl
mov
or
mov
jge
leave
mov
mov
and
pop
loopne
dec
jnp
add
cmp
out
cmp
lds
int
cli
daa
aaa
roll
sub
in
adc
add
cwtl
std
fdivp
push
ret
in
xchg
push
add
mov
test
mov
outsb
and
loope
js
jp
and
std
into
adc
jae
arpl
adc
mov
setne
mov
mov
push
lret
fwait
mov
cmp
cmp
xlat
cwtl
cwtl
adc
add
sub
sbb
push
pop
js
jns
insb
enter
or
fistpll
mov
mov
fnsave
cld
mov
push
cmp
inc
xchg
mov
mov
nop
aad
call
xchg
push
cli
std
mov
scas
add
push
or
in
xor
push
adc
add
pusha
add
movaps
adc
dec
mov
xor
xor
clc
cmp
nop
jnp
push
adc
in
repz
pop
pop
mov
cmp
loopne
xchg
rcl
sbb
test
in
outsl
pop
mov
mov
add
sbb
inc
jbe
lahf
or
mov
repnz
xor
sub
adc
xchg
and
lods
ficompl
pop
xchg
nop
mov
push
das
in
scas
dec
aaa
jns
lret
push
jmp
loopne
popa
pop
sbb
xor
out
inc
cmp
cltd
and
xchg
flds
inc
lret
xor
cmp
std
cmpsb
in
mov
cmpsl
fmulp
aad
pop
adc
aaa
sub
xor
sbb
imul
inc
inc
shrb
lods
rorb
inc
xor
call
jb
pop
mov
mov
cmp
cmp
mov
xchg
out
loopne
push
arpl
ret
sbb
jbe
xchg
aad
push
jno
push
cmp
jge
push
daa
xor
imul
dec
mov
dec
and
xor
dec
ljmp
out
pop
push
out
stc
push
cltd
or
cmpl
mov
jae
inc
inc
jns
mov
loopne
mov
sub
adc
cmp
mov
les
ja
adc
movsb
in
adc
andb
dec
xchg
sub
or
jl
sub
cmpsb
mov
adc
das
int
jne
and
jnp
test
jne
inc
adc
or
xor
scas
enter
xchg
bound
sbb
and
ret
push
sar
es
shlb
adc
test
ret
insl
out
out
jo
in
aaa
pushf
sbb
xchg
shr
or
mov
jmp
xor
mov
in
push
push
sbb
push
popa
or
fwait
pop
xor
mov
dec
xchg
call
jg
dec
jne
mov
daa
jne
mulb
outsb
div
shlb
hlt
shlb
cmc
xchg
sarl
iret
pushf
ss
cwtl
ffreep
mov
cmp
mov
and
sarl
mov
push
in
out
push
dec
notl
aam
stos
mov
dec
lea
adc
dec
xchg
iret
js
sbb
mov
fmulp
pop
in
inc
xchg
pop
pop
mov
jb
out
out
cmp
sti
fcmovbe
xchg
les
scas
pmuludq
jecxz
in
jle
stos
push
cmp
je
pop
xor
or
push
pop
push
push
add
xor
adc
xor
aas
bound
jmp
cmpsb
adc
mov
push
jno
lcall
int
add
mov
add
pop
jno
inc
jne
jecxz
test
imul
sar
int3
adc
aam
jmpw
adc
jge
int
repz
or
ja
dec
jbe
add
add
jge
jl
and
fxch
fcompl
dec
pop
add
xor
cs
push
jns
and
mov
or
fisubrl
repz
inc
mov
lds
movsb
push
hlt
xor
inc
std
arpl
xlat
out
lahf
hlt
adc
popa
in
lcall
sub
add
pusha
inc
sub
mov
mov
lods
nop
mov
test
xchg
stos
jmp
inc
lods
adc
or
scas
fdivl
out
jbe
stos
test
lods
in
in
cmp
test
and
in
in
xchg
and
and
mov
lea
jo
jge
xchg
adc
ds
cltd
popf
mov
xchg
stc
cmp
fimull
mov
push
or
xchg
stos
pop
lret
mov
adc
cmp
cmp
stos
gs
sti
push
or
sbb
ss
jbe
aaa
int
cmp
aad
dec
cmp
lret
icebp
loope
mov
imul
loop
out
or
popf
out
xchg
les
add
push
xchg
call
mov
sub
inc
push
pop
fstl
aas
mov
loope
popa
xchg
push
sub
push
mov
lea
inc
insb
push
js,pn
addr16
imul
mov
mov
ja
sub
lock
or
mov
movsb
loopne
inc
mov
ds
cmpsb
pop
dec
mov
xchg
cwtl
inc
mov
or
mov
jge
and
push
mov
ret
imul
push
push
mov
mov
stc
xchg
xchg
xchg
adc
cmpsb
shll
into
mov
stos
jnp
negb
out
and
pop
add
hlt
pop
mov
int
in
xchg
xchg
loop
add
add
or
xchg
imul
arpl
shl
insb
adc
pop
and
in
stos
push
out
fwait
xor
notb
mov
iret
repz
mov
imulb
mov
jmp
mov
jne
shrl
mov
loopne
jne
jp
rol
push
add
mov
mov
cmp
fwait
incl
fdivrl
push
xchg
mov
and
cmp
stos
idivb
pop
test
sub
mov
shlb
test
jge
pop
lcall
add
test
je
xchg
mov
jbe,pt
cmp
fwait
add
or
lcall
repz
push
adc
adc
shlb
lds
mov
lret
popa
sbb
adc
adc
adc
jb
loop
gs
lret
jb
popa
fisubrl
lock
int
inc
dec
mov
sub
xorl
lock
mov
mov
icebp
das
jbe
lahf
inc
add
les
jl
clc
or
and
movsl
mov
mov
shl
in
push
and
je
lahf
add
repnz
sbb
shll
mov
jno
mov
mov
cmpsl
fcoms
movsb
xor
push
xchg
int
imull
pop
mov
push
mov
xor
cmp
pop
int
divl
adc
in
ret
sbb
xor
pop
push
cs
movsl
in
add
push
lret
scas
enter
stos
inc
repnz
mov
bound
push
xchg
dec
adc
notl
fisubrs
enterw
push
int
shlb
aam
inc
incb
iret
inc
push
ljmp
fwait
xchg
mov
mov
shll
xchg
jmp
jmp
sub
mov
mov
roll
inc
pop
aam
sbb
gs
mov
cs
mov
xchg
outsl
sarl
push
mov
pop
fstpt
and
push
mov
pop
hlt
lods
out
stos
inc
lock
push
add
push
mov
mov
xchg
ss
fstpt
pop
and
lea
xchg
push
sub
leave
fnstcw
push
dec
in
flds
test
das
scas
mov
cmp
sbb
mov
jl
cmp
arpl
cmp
mov
aas
xor
sbb
inc
std
arpl
or
mov
fdivrs
dec
jge
xchg
ds
insb
jne
mov
mov
adc
iret
add
out
jle
loope
lods
push
and
cld
out
and
adc
add
je
fs
sub
test
js
dec
aam
les
adc
add
je
fs
sub
test
js
dec
aam
les
adc
add
je
fs
sub
test
jns
dec
aam
les
adc
add
je
fs
push
pop
test
mov
push
mov
jl
sbb
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
mov
jb
and
xor
ret
adc
add
jae
arpl
mov
mov
jb
add
adc
and
xor
shlb
adc
add
mov
arpl
mov
mov
imul
jecxz
sarl
ret
sub
and
call
jae
or
es
sub
cmp
in
push
repz
dec
in
pop
lcall
scas
add
jmp
iret
ljmp
sub
inc
cmpsb
cmp
repnz
repnz
movl
stos
aad
cmp
xchg
adc
popf
fidivs
inc
ja
adc
ja
xchg
push
xchg
ss
inc
mov
adc
inc
aam
not
push
jp
int
xchg
cmpsb
sub
mov
and
sub
dec
jp
mov
popf
jl
stos
and
out
push
jb
xor
dec
jne
xchg
cmpsl
jle
and
pushf
pop
add
pop
mov
bound
mov
pop
sbb
mov
in
imull
loop
shr
out
pop
ret
mov
xchg
jb
push
sarl
ret
sub
fisubl
lret
add
jae
arpl
repnz
xlat
push
cli
arpl
jae
push
xchg
jl
dec
rcrl
inc
stos
adc
arpl
xor
push
notb
out
ja
jno
and
mov
add
aas
into
xlat
add
pop
mov
and
xor
ret
adc
add
jae
arpl
mov
mov
jb
add
adc
and
xor
ret
adc
add
jae
arpl
mov
xchg
push
inc
lods
popa
or
sahf
xor
inc
push
adc
idiv
adc
out
and
dec
inc
xchg
mov
jecxz
jecxz
inc
push
jb
sbb
or
push
cmpsb
movhps
int
push
pop
cmpb
cmp
scas
inc
mov
jmp
sub
sbb
loope
push
into
js
pop
pop
arpl
lock
fidivl
dec
mov
out
cmc
adc
fwait
insl
shrb
and
jecxz
rorb
js
pop
rcl
out
mov
ret
xor
mov
iret
add
popf
in
mov
cwtl
mov
cmpsb
or
dec
mov
cli
jg
mov
jae
sub
in
jge
and
push
pop
into
std
inc
mov
mov
xchg
mov
fwait
mov
or
test
lock
or
xchg
jmp
mov
hlt
or
shl
sbb
fdivs
or
das
outsl
lcall
pop
add
out
inc
lods
add
aam
clc
cmp
insl
and
lods
dec
imul
sbb
mov
je
xchg
cmp
jmp
aad
mov
jb
jb
cltd
rclb
movsl
dec
neg
push
mov
test
cs
fsubs
aad
push
or
push
out
cmp
or
mov
loope
push
sbb
ss
inc
daa
inc
dec
dec
xchg
mov
and
repz
cld
jl
cwtl
lods
clc
sti
jo
dec
sbb
lcall
data16
xor
or
mov
aaa
rol
or
pop
nop
cmp
mov
js
mov
rorb
movsl
jo
adc
sbb
pop
or
push
leave
rcrb
sbbb
in
and
inc
fld
xor
cwtl
out
aam
and
cmpsb
aas
mov
sub
ds
in
dec
mov
rcrb
sub
inc
pop
xor
push
jge
int3
or
or
sub
mov
dec
popa
xchg
or
pop
dec
in
stos
insl
sar
pop
in
push
or
push
faddp
loop
mov
xorb
and
jl
divb
ret
inc
cwtl
adc
xchg
movsl
cli
js
inc
shrb
sub
cli
dec
push
stos
lahf
push
or
push
dec
movsb
and
test
xchg
push
xchg
filds
cmpsb
loop
pop
cli
xchg
mov
psrld
ds
addr16
notl
shlb
dec
nop
imul
lock
in
shlb
dec
mov
jp
dec
sub
mov
and
mov
cmp
xor
mov
out
jae
cli
pop
mov
add
add
outsl
xchg
pushf
mov
sub
mov
mov
and
js
cltd
jae
push
xchg
adc
scas
outsb
jnp
lret
out
xlat
pop
and
push
cmpsb
lods
and
mov
pop
pop
pop
lret
aas
pushf
add
add
mov
scas
mov
popf
adc
gs
popa
sub
adc
xchg
cmp
sub
and
mov
add
mov
insb
sahf
inc
hlt
sbb
in
popl
and
pop
test
call
lods
adc
out
push
mov
mov
inc
add
in
cmp
fadds
pop
cmp
adc
fisttpll
xor
out
mov
insb
xor
call
leave
jbe
int3
fwait
setle
pusha
jmp
push
inc
gs
loope
fsubl
jl
in
jno
aad
sub
push
faddl
jbe
test
sbbb
arpl
pop
and
xor
jbe
out
push
das
and
rorb
inc
xchg
cmpsl
out
mov
ds
out
inc
repnz
push
aad
adc
movsl
shl
aad
je
xor
sbb
fbstp
adc
mov
ss
mov
sti
dec
out
clc
lods
loopne
push
inc
or
dec
mov
test
cmpsl
sbb
sbb
outsb
orl
int
mov
lahf
cmpsl
aaa
outsl
fwait
iret
fdivrl
mov
mov
ficoms
mov
or
dec
mov
dec
mov
xor
bound
mov
sar
sub
push
jg
add
int3
lods
push
fxch
mov
jbe
enter
inc
mov
out
cmp
cmpsl
cmc
adcb
xchg
mov
les
sub
sbb
out
or
sti
cwtl
mov
adc
jb
mov
add
sbb
add
imul
aaa
mov
lret
lock
int3
sbb
repz
and
pop
incl
fisubrl
adc
or
add
pusha
jge
sbb
xor
sub
sti
les
dec
xchg
aaa
arpl
bound
les
incb
ljmp
xorb
movsl
std
dec
mov
je
fcmovnu
xorl
add
dec
mov
dec
mov
push
mov
and
add
adc
cltd
xor
or
mov
aas
lret
or
dec
andb
sbb
jge
jnp
fwait
push
fucomi
mov
insl
adc
adc
sarb
sbb
repz
pop
or
outsb
jnp
fidivs
cmp
lea
divl
fs
sub
mov
and
push
push
jae
in
or
int
mov
sbb
rorl
pop
xor
rolb
adc
cs
addr16
movsl
sbb
or
loop
lock
ljmp
cmp
push
cmpsl
dec
jmp
sahf
aam
cmpb
lea
jmp
jno
xchg
jl
sbb
in
jmp
pop
cmp
or
movsb
xchg
xor
pop
es
fwait
mov
pop
pop
mov
ret
jbe
fimull
jb
add
mov
imul
sbb
mov
test
icebp
ljmp
push
lock
push
das
insl
mov
add
mov
xor
cs
cmp
lret
dec
dec
add
jno
dec
lods
mov
fs
adc
mov
mov
pop
js
jl
cmp
scas
out
call
xchg
insl
push
xchg
sbbb
inc
cmp
test
stos
pop
pop
sub
mov
mov
mov
adc
movsl
dec
or
push
sti
jnp
addr16
xchg
addb
pop
in
sbb
mov
mov
stos
nop
imul
push
jmp
lods
pusha
arpl
aas
and
push
xor
ljmp
jmp
adc
mov
fnstcw
aaa
pop
mov
scas
add
mov
and
and
pop
shll
fwait
leave
push
repnz
jecxz
out
fstp
push
pushf
sbb
outsb
adc
and
lfs
out
and
outsl
dec
adc
push
xchg
outsl
aam
mov
sub
popa
jno
push
mov
rolb
out
pop
xor
mov
or
jp
mov
mov
and
adc
rcr
repnz
iret
cltd
cmp
enter
inc
push
dec
add
jae
jg
jmp
jecxz
lock
test
sbb
fwait
push
ficoml
mov
pop
push
xor
shrb
out
scas
mov
icebp
inc
push
out
lds
rorl
ds
mov
mov
pop
push
movsl
mov
repnz
pop
push
or
or
push
lret
addr16
push
cmp
and
and
ss
in
jns
fs
out
cmp
jno
scas
mov
stos
mov
push
shl
fildll
icebp
jmp
rol
out
mov
movsl
jmp
pop
into
pop
rcll
cmp
jge
jg
inc
mov
add
sbb
add
leave
sbb
cltd
cwtl
and
mov
rolb
cmpsb
mov
sti
xchg
loopne
pop
fs
mov
cmp
mov
and
mov
cmp
hlt
dec
inc
bound
lcall
ret
mov
loop
jns
xlat
rcl
stos
ret
int
movsl
int3
daa
jmp
mov
out
add
push
add
xchg
and
push
fsubr
outsl
jnp
dec
lea
mov
aad
mov
jecxz
test
push
aaa
pop
sub
push
mov
jne
dec
mov
adc
adcl
xor
scas
fcoml
push
and
test
inc
dec
inc
cmp
or
hlt
in
xchg
sbbb
stos
and
sub
push
sub
lods
cmc
lds
xchg
lods
cmpsl
dec
aam
xor
push
jle
popf
mov
jns
push
out
and
into
jb
outsl
rclb
inc
data16
jp
jns
sahf
dec
inc
mov
xchg
fidivrl
xor
test
cmpsl
icebp
mov
leave
push
cltd
mov
mov
mov
leave
mov
mov
cmpsb
xchg
xlat
movsb
pop
scas
repnz
fstps
xor
aas
shrl
rolb
outsb
adc
sub
outsl
cmpsl
scas
decl
outsb
mov
loop
shrb
fisttpll
lret
repnz
push
out
cmp
mov
sbb
jmp
out
mov
divl
stos
push
out
inc
ret
enter
test
aad
dec
int3
sti
or
in
cmp
call
mov
xor
lds
int3
sbb
push
adc
mov
lcall
push
negb
cltd
lahf
push
int3
or
sbb
std
icebp
inc
xlat
mov
ffree
in
insl
jnp
std
mov
inc
aad
das
inc
sbbb
data16
out
je
jle
filds
xor
imulb
jb
xchg
pop
scas
inc
jno
cmpsb
pop
fiaddl
push
enter
into
mov
ljmp
test
adc
cmp
jnp
jl
cli
mov
incl
out
sub
inc
vmovups
lret
pop
bound
jl
sub
jbe
scas
or
lcall
shl
sbb
out
ss
mov
std
pop
popa
fstps
aas
xchg
inc
push
mov
out
aad
cmc
mov
es
stos
xchg
mov
sub
test
popa
call
mov
mov
std
xor
sahf
movsb
fwait
mov
xor
call
rcr
inc
sub
add
mov
ja
inc
and
popf
or
lds
outsb
inc
scas
dec
sub
call
lret
in
and
pop
outsl
imul
int
lret
cld
mov
cmp
sbb
bound
scas
popa
mov
inc
inc
xor
addr16
sbb
jecxz
mov
fwait
inc
cmc
adc
enter
nop
rcrl
mov
or
adc
jnp
sub
aaa
jns
aaa
xchg
adc
ja
jle
fildl
call
sub
ret
mov
adc
test
xor
repnz
stc
push
insb
ret
xor
xchg
lods
enter
push
movsl
jle
push
pop
jno
adc
or
mov
jnp
xor
test
nop
inc
dec
popa
mov
cld
int
sbb
das
cltd
sbb
call
inc
popl
int3
fimull
icebp
push
mov
insb
lea
out
aas
scas
outsl
outsl
roll
and
sub
in
add
mov
adc
fstpl
ljmp
je
int
push
fstpl
fwait
out
dec
push
divl
aas
mov
sbb
sub
cltd
sbbb
ljmp
inc
pop
xor
mov
ret
adc
dec
jae
test
test
dec
xchg
addr16
in
pop
cmp
jnp
out
and
outsb
push
rcrb
iret
add
lcall
push
ficoml
push
sub
sub
dec
shll
or
in
ret
add
adc
out
xchg
adc
sbb
push
jmp
fs
lds
imul
in
pushf
jmp
xor
cmp
inc
dec
adc
iret
mov
push
movl
insb
xor
std
xchg
scas
orl
das
xlat
into
fnstsw
pusha
push
adc
sub
and
push
pusha
ljmp
out
jecxz
mov
pushf
popa
imul
out
push
jecxz
testb
mov
adc
mov
addr16
mov
jmp
int3
mov
dec
pop
jmp
add
leave
push
mov
cmp
and
loopne
inc
rclb
sbb
loop
add
mov
lcall
rolb
xlat
in
lret
dec
popf
out
pusha
cltd
mov
clc
inc
je
dec
inc
je
hlt
add
sti
add
push
es
jne
jp
cmp
cli
dec
dec
mov
testb
in
add
sbb
cmp
xor
and
push
stos
int
inc
jecxz
lahf
and
sbb
xchg
sti
xchg
mov
or
mov
jne
inc
sbb
dec
aaa
es
or
addb
adc
shl
mov
test
lds
fisttps
pop
int
push
andl
cmp
adc
ret
adc
sub
xor
xlat
and
jle
mov
fdiv
fsubl
sbb
pop
xlat
xlat
fsubp
xchg
jg
xchg
fwait
push
repz
loop
add
int
and
fildll
fldenv
xchg
ret
mov
leave
mov
mov
pop
clflush
inc
add
inc
cmp
subl
jmp
test
enter
sbb
lret
lcall
jg
mov
mov
shlb
mov
cs
add
ret
shufps
ret
nop
mov
ret
push
sbb
lea
mov
or
push
loope
pop
add
and
xchg
mov
cvtps2pd
sub
stos
jge
lea
ja
mov
sub
imull
fldcw
mov
daa
add
rcll
out
xchg
inc
sbb
and
hlt
add
icebp
jb
push
mov
insb
mov
mov
and
test
in
pop
and
cmp
ret
push
jne
jns
mov
push
std
mov
push
or
xchg
pop
das
jmp
jl
mov
into
dec
pop
dec
fsubs
int3
shlb
test
xor
dec
sub
aad
cmp
adcb
xchg
pop
jl
ss
push
lods
sub
in
xchg
and
adc
shll
sbb
xchg
lods
adc
cmp
inc
xchg
dec
pop
mov
lods
mov
movsl
inc
test
mov
ja
add
push
mov
test
cltd
mov
push
dec
sbb
das
mov
xchg
sbb
pushf
mov
scas
std
fidivrs
imul
sbb
mulb
mov
mov
popa
xchg
xchg
cmc
xor
xchg
mov
push
mov
sub
mov
xchg
pop
out
fs
jp
xchg
mov
popa
lahf
inc
mov
lock
xor
mov
cwtl
insl
movups
lds
mov
pushf
mov
pop
ja
pop
add
repz
clc
addr16
dec
sub
jmp
jg
mov
fistpll
sti
ret
mov
add
in
lods
je
pop
std
cld
jl
sub
cwtl
xchg
dec
stc
add
mov
movsl
mov
pop
and
sub
jecxz
cmp
sahf
int3
adc
or
rorb
in
mov
aam
out
lcall
sbb
inc
sbb
clc
sbb
call
loop
loopne
ss
aaa
push
insb
shll
pop
idivl
adc
popa
push
inc
lcall
lcall
jae
ja
jnp
and
lods
sahf
outsl
adc
dec
and
icebp
jns
pop
stos
fstpt
test
or
sub
stos
dec
mov
dec
mov
divl
callw
inc
imul
shrl
inc
mov
test
pushf
push
rcll
mov
out
test
lods
lret
inc
cmp
sbb
bound
and
das
pushf
xchg
pop
inc
in
fildl
jmp
xor
dec
jb
or
mov
mov
cld
xchg
dec
ret
lcall
imulb
inc
repnz
loop
inc
cmp
mov
xchg
dec
push
dec
xchg
mov
shrl
mov
notb
sbbl
sti
adc
es
xchg
sub
jp
or
outsb
or
push
sub
or
sbb
mov
insb
lahf
cld
adc
stos
jnp
in
inc
or
mov
xchg
xchg
lds
sti
xchg
lds
or
xchg
int
je
test
insb
pop
push
pop
iret
movsl
mov
out
sbb
repnz
enter
test
push
repnz
pop
lds
xorl
aad
push
lods
rcrl
cli
jne
inc
inc
pop
cmp
and
add
mov
cmp
mov
inc
mov
pop
pop
aas
lret
and
and
loopne
push
pop
in
lods
sub
lock
cmp
mov
icebp
mov
mov
outsb
inc
ds
outsb
and
aam
fnstcw
jne
mov
arpl
sub
test
sahf
jns
jle
pop
adc
out
gs
and
sbb
inc
mov
in
sbb
nop
adc
insl
sbb
jp
arpl
mov
fisubs
xor
scas
test
test
mov
push
pop
outsl
loopne
add
test
cmpsl
jge
xchg
xor
popf
loop
xor
jae
push
ja
movsb
adc
cwtl
cmp
aad
in
push
mov
bnd
or
sahf
sub
andb
push
xor
add
hlt
pop
lret
xor
jae
mov
movsb
pop
pop
into
loop
cs
xor
push
cwtl
inc
adc
xchg
into
push
cmp
cmc
sub
fcomps
mov
aaa
std
xchg
mov
aad
loope
es
push
xchg
aam
icebp
in
outsl
int
mov
mov
inc
leave
sub
xorl
cli
adc
mov
popf
inc
jmp
push
ret
and
nop
push
jbe
xor
cwtl
inc
sbb
dec
xor
dec
or
mov
or
aaa
ljmp
insb
rol
lock
sti
xor
jl
cmc
movsb
and
push
loopne
adc
adc
fdiv
mov
push
lods
mov
sub
fimuls
lret
jnp
push
adc
ss
hlt
pusha
scas
or
push
pop
das
test
jbe
scas
xchg
cmpsl
mov
call
mov
cli
negl
sub
mov
mov
inc
push
insl
icebp
dec
push
arpl
add
add
push
imul
mov
push
dec
xchg
adc
insl
mov
xlat
dec
clc
or
fisttpl
mov
jmp
inc
xchg
mov
or
fdivrl
and
or
jmp
repz
jo
adc
push
add
imul
sbb
push
inc
xlat
mov
vpsrld
daa
scas
push
lret
divl
push
sar
lret
add
xor
add
pop
imul
fnsave
cmc
stos
iret
mov
sub
ljmp
insb
in
mov
and
inc
lods
in
mov
mov
out
xor
cmp
inc
jne
push
or
inc
sahf
adc
in
dec
enter
dec
add
mov
int
movsl
stos
and
mov
pop
push
andl
in
inc
cmp
int
lea
ficomps
pop
dec
sub
inc
and
add
push
and
adc
push
in
add
les
inc
lods
jae
das
and
stos
push
lods
scas
inc
aam
call
faddl
and
daa
rclb
test
push
jmp
sbb
pusha
loope
cmp
loop
fdivl
xchg
add
pop
push
jno
add
cmp
add
mov
notb
enter
push
sbb
and
xor
pop
or
fcmovu
popa
adcb
mov
stc
cld
xchg
sbb
idivl
sub
in
imul
dec
xchg
cld
sub
pusha
or
lcall
js
mov
jp
and
into
xor
mov
fimuls
aam
mov
lea
call
sub
fbstp
notb
and
cmp
xchg
imul
xchg
jg
fcmovbe
cmp
push
ljmp
mov
test
jb
test
iretw
push
mov
lds
mulps
cmp
repz
add
daa
push
roll
xchg
mov
add
mov
test
jo
aaa
dec
jge
subl
mov
imul
push
mov
lods
int
sbb
sub
dec
or
add
cmp
js
or
imul
pop
push
nop
push
std
mov
xor
sbb
sub
and
dec
popf
jmp
xor
movsl
fisubl
arpl
push
pop
or
popf
lea
or
cmp
mov
pop
mov
arpl
adc
mov
ss
mov
into
iret
daa
roll
aas
inc
and
jge
inc
inc
cmp
pop
pop
popa
ja
lahf
stos
ss
push
mov
mov
pop
dec
adc
jbe
test
addr16
icebp
daa
adc
fcmovu
fs
outsb
push
xchg
lea
adc
and
xor
ret
adc
add
jae
arpl
mov
mov
jb
add
adc
and
xor
ret
adc
add
jae
arpl
mov
and
bound
adc
and
xor
and
adc
add
jae
arpl
mov
mov
jb
add
adc
and
xor
ret
mov
or
insl
and
dec
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
cmc
mov
lahf
mov
fisttps
push
aas
and
outsl
jnp
orl
dec
mov
sahf
lahf
mov
out
iret
loopne
ds
imul
push
outsl
push
jle
dec
pop
pop
dec
mov
cmpsb
push
test
cmpsb
xlat
aam
cld
das
ds
arpl
jl
sub
ss
cli
mov
jmp
icebp
add
cld
pop
paddq
repz
cmpsb
andl
push
add
sub
add
and
xor
rol
lock
pop
shrl
xor
mov
jle
adc
pop
xchg
sub
pop
loopne
nop
lea
xchg
in
cwtl
mov
scas
scas
outsl
lcall
daa
push
filds
mov
inc
pminsw
jecxz
mov
inc
push
arpl
jno
int
out
fistps
iret
xor
sbb
pop
inc
adc
jnp
or
mov
pop
push
mov
sbb
shrb
jle
enter
push
outsl
sub
xor
mov
in
iret
faddp
pop
ss
xchg
sbb
xor
orb
jl
mov
sti
loop
pop
xchg
or
mov
pop
jge
pop
jge
jno
add
sbb
sub
cmp
scas
clc
mov
loop
lods
xchg
mov
sub
dec
push
or
or
aas
cmp
int
dec
ljmp
out
iret
into
das
ds
nopl
push
outsl
jle
outsb
dec
pop
pop
dec
scas
mov
lahf
mov
out
iret
into
das
ds
nopl
push
outsl
jle
outsb
dec
pop
pop
dec
scas
mov
mull
cltd
shl
jo
xchg
add
push
icebp
cwtl
iret
aad
push
repnz
das
pop
xor
mov
xor
lcall
pop
movsb
shll
daa
test
mov
scas
and
push
mov
xchg
pop
pop
sub
xchg
pop
idivb
sbb
lock
arpl
std
insl
pop
pop
sub
int3
mov
into
xor
cmpsb
lds
sub
dec
mov
or
xorl
cmc
jle
cmp
dec
cmp
sbb
xchg
and
scas
jb
call
pusha
lock
aaa
add
mov
and
enter
mov
dec
popf
pop
sub
xor
pusha
mov
ds
test
and
popa
cmpsb
rcl
test
std
jmp
cmp
adc
dec
loope
cmpsb
aam
imul
movsb
pusha
jp
mov
push
adc
mov
loop
lret
fdivs
mov
push
sbb
xchg
dec
xchg
xchg
sahf
mov
sbb
jno
movsl
shll
movsl
add
lret
js
js
mov
imul
lea
xchg
jp
or
std
mov
arpl
pop
jp
bound
mov
daa
or
push
decb
sub
ja
dec
jmp
cmp
mov
cmp
xlat
inc
push
fnstsw
xlat
bound
cmpsl
iret
dec
adc
pop
lock
mov
push
xor
rorl
lock
lock
push
testb
popf
addl
mov
popf
push
lds
mov
rcll
hlt
repz
int
repnz
mov
and
mov
imul
shll
pushf
mov
dec
mov
lret
add
jle
xor
sbb
or
jnp
shr
dec
and
push
sub
jle
shrb
inc
addr16
sbb
add
gs
and
ds
mov
popf
add
imull
scas
ret
hlt
ret
or
mov
jnp
mov
rcr
pop
mov
jo
adcb
pop
std
cmpsb
xchg
call
lahf
jbe
push
js
iret
scas
into
push
push
das
daa
lea
pop
xor
jns
xor
mov
push
xchg
pop
push
mov
mov
enter
push
cmp
lods
push
loop
push
int3
aas
fdivrl
lock
aam
push
mov
lock
and
enter
jae
mov
push
sub
add
xchg
ret
jae
scas
push
jge
xchg
mov
and
jae
inc
ret
popf
cli
lcall
add
mov
dec
jl
addl
insl
jge
sub
lcall
xlat
mov
push
sahf
int3
in
popa
loopne
rolb
loope
scas
push
pop
adc
inc
ss
rcll
cmp
popf
xlat
jae
imulb
cmp
mov
push
push
pop
push
adc
jbe
cmp
sub
push
movsb
adc
xchg
loope
lahf
lret
xchg
and
pushf
and
mov
icebp
sarl
push
fildl
jp
sahf
push
cmp
pop
into
mov
mov
imul
sti
gs
push
cltd
or
and
xchg
xlat
add
ss
adc
out
xor
inc
pop
cltd
jle
lods
stc
cmp
dec
adc
arpl
insb
popf
push
icebp
push
xor
pop
and
pop
jns
cmp
iret
jmp
hlt
popa
jp
cld
mov
fsub
inc
dec
and
push
mov
or
bound
pop
test
mov
mov
xchg
test
loop
sub
cmp
cltd
gs
stos
xchg
movsb
jl,pt
out
ss
outsl
add
cmovne
aas
outsb
xchg
neg
test
inc
dec
in
gs
aaa
mov
and
pushf
jo
div
inc
inc
test
dec
and
in
cmc
int
jle
add
mov
mov
jno
or
mov
lock
jp
pop
cmp
push
push
mov
and
push
orb
div
out
mov
add
iret
pop
or
movsb
add
fincstp
nop
jge
stos
mov
sbb
repnz
xor
add
movsb
xchg
mov
pop
cwtl
repnz
sbb
mov
stos
mov
aas
movsl
mov
shl
and
push
or
stos
pop
into
inc
xchg
je
xchg
out
jmp
les
int
unpcklps
cmp
jmp
addb
push
dec
mov
frstor
pop
fwait
roll
cmpsl
out
pop
mov
adcb
sbb
inc
scas
in
dec
adc
sbb
mov
xchg
dec
mov
fnstcw
push
ja
sti
cmp
int3
in
sbb
ret
mov
icebp
mov
jmp
or
and
in
push
dec
mov
arpl
bound
aaa
xor
ljmp
lahf
adcb
xor
aad
sbb
jp
mov
aad
sarl
sub
insl
mov
mov
and
iret
add
inc
ror
xcrypt-ctr
cmpsl
popf
mov
out
pop
push
push
jno
insb
pop
cmp
fadds
fiadds
and
lds
push
fnstcw
das
mov
inc
aam
or
sub
stos
dec
push
mov
movsl
pop
fcompl
call
call
dec
out
arpl
subl
out
mov
notl
scas
ja
mov
fs
inc
insl
add
je
mov
arpl
push
mov
insb
mov
std
ljmp
mov
rclb
push
xchg
mov
cmp
mov
inc
das
add
jecxz
xlat
cmpsb
sbb
insl
cwtl
and
adc
cmp
js
fcmove
les
dec
xor
pop
decb
mov
icebp
cmp
cmp
sub
and
out
xchg
loopne
int3
mov
lds
fistpll
sub
das
gs
dec
mov
push
push
test
hlt
cltd
popf
daa
scas
xlat
sbb
popa
loope
pop
and
testl
mov
or
lret
mov
sub
je
loopne
rcll
xor
into
jecxz
xchg
inc
mov
or
stos
enter
test
sbbb
fwait
loopne
loope
push
sbb
and
jns
in
arpl
jg
pop
int3
pushf
adc
cmpsb
mov
dec
call
sti
fnstenv
lret
mov
inc
jg
pushf
mov
cmp
lret
xchg
cwtl
cmp
pop
add
jne
rcr
popf
jb
sub
cli
scas
subl
push
mul
pop
or
jge
xor
scas
pop
iret
cwtl
add
xchg
add
cltd
cs
sbb
xchg
cmpsb
out
push
adc
lods
aad
add
mov
mov
inc
lds
loop
push
mov
mov
sbb
dec
adc
mov
sbb
in
ljmp
inc
mov
cmp
jae
jg
fsts
into
mov
or
icebp
push
push
pop
ljmp
xchg
scas
dec
dec
mov
dec
jge
out
dec
push
leave
cmp
mov
rorl
xchg
push
mov
test
xchg
pop
push
mov
dec
mov
int3
mov
jbe
add
mov
fildll
sub
lahf
cmp
lock
fisubrs
jmp
pop
mov
lcall
cmp
mov
add
popf
adc
shrb
mov
sbb
js
aas
inc
fsubrl
add
out
sarb
pop
fimuls
dec
push
mov
lods
mov
jmp
movsl
jl
lret
hlt
cld
or
cli
push
pop
push
in
mov
dec
sbb
lret
dec
test
cmp
fildl
dec
xchg
imul
popf
ret
out
xor
loope
mov
out
and
fwait
add
sbb
or
insl
inc
mov
inc
jne
adc
push
pop
addr16
pusha
push
push
popf
andl
mov
jno
mov
lahf
xlat
sbb
mov
dec
jno
or
addr16
leave
mov
js
insl
push
adcb
int
xor
fwait
dec
ret
mov
sbb
mov
and
xchg
mov
ret
scas
push
test
out
out
cld
popa
mov
jnp
mov
cmp
add
sub
mov
pusha
les
sub
in
insb
jl
in
jmp
jne,pn
les
mov
pop
cmp
add
popa
sub
outsb
roll
rorb
arpl
add
insl
inc
xchg
xor
mov
mov
push
jbe
sbb
pop
test
fisttps
or
dec
fmulp
jg
sahf
mov
mov
mov
lahf
mov
stc
mov
add
jo
push
jl
sub
mov
roll
pop
inc
xchg
jg
sbbb
lds
sub
insb
add
xchg
stc
mov
dec
test
mov
in
jb
xor
frstor
jo
scas
inc
bound
imul
xlat
adc
imul
enter
je
call
sub
mov
cld
xor
shlb
cmc
lods
adc
bound
pop
inc
inc
shlb
leave
aaa
incb
cmp
mov
popa
rorb
outsl
enter
inc
and
push
inc
sub
jl
inc
sar
xchg
lcall
lds
add
jle
pop
xor
ja
and
movsb
loopne
sar
repnz
repz
test
or
insl
jbe
outsl
popl
adc
aaa
lahf
jo
jno
enter
faddl
cs
cltd
mov
leave
or
jmp
or
pusha
xchg
cwtl
pop
jns
addb
and
leave
es
sbb
mov
mov
insl
push
mov
outsb
das
loope
les
orl
nop
gs
out
in
and
sbb
int3
push
mov
mov
imul
in
mov
lea
mov
xchg
and
xor
push
stc
dec
adc
add
dec
push
cmp
sti
cmp
jo
dec
lcall
cmp
out
popf
pop
or
adc
xchg
adc
mov
push
sbb
xchg
sar
sbb
add
push
cmovo
fcomi
stos
inc
shlb
mov
cmp
add
push
pop
lcall
pop
pusha
jg
and
and
sub
outsb
inc
mov
shr
sti
ljmp
cmp
pushf
pop
sub
sub
jo
sbb
cltd
test
lds
mov
ret
xchg
inc
lcall
sub
push
stos
mov
popf
in
or
dec
jg
fildll
xorb
fisubrl
fwait
jne
dec
cmp
inc
add
mov
pop
cli
cs
loope
movsb
dec
js
ljmp
movsb
popf
ljmp
sahf
sbb
xor
in
mov
mov
xchg
inc
negb
xchg
jnp
mov
in
movsb
imul
jg
mov
dec
cmp
and
add
sub
mov
sbbb
dec
mov
scas
jg
mov
sti
dec
jecxz
icebp
adc
shrb
pop
test
push
sub
lcall
movsl
inc
into
data16
repz
das
ds
or
cs
or
jnp
xchg
cltd
xor
pop
jmp
into
sub
sub
and
pop
mov
out
mov
in
xor
ss
out
jg
mov
mov
mov
loopne
jg
sub
fidivrs
repz
jb
ds
lahf
fistpll
adc
stos
and
ss
aas
aad
mov
xor
daa
mov
xor
lret
ret
xor
lods
dec
out
xchg
push
xchg
lea
push
pushf
aaa
jno
lcall
sub
add
repnz
mov
sub
orl
dec
cwtl
sbb
pushf
jl
push
jecxz
push
testb
inc
fnstenv
js
leave
scas
ret
pop
mov
adc
mov
sub
cmpl
sub
es
xor
mov
jge
mov
mov
je
pop
mov
xor
mov
push
push
repz
hlt
icebp
push
push
dec
or
pop
adc
mov
mov
in
xor
hlt
mov
jo
hlt
sbb
xchg
int
sub
inc
movsb
imul
add
pop
push
jge
mov
push
and
jmp
adc
cmp
leave
lahf
enter
hlt
jns
test
xor
cli
movl
sub
js
rep
inc
in
cmp
jecxz
ja
inc
test
mov
push
into
cmp
enterw
ss
jl
imul
dec
lahf
int
mov
adc
ljmp
push
fsts
movsl
xchg
aam
and
xor
sbb
push
xchg
fbld
outsl
out
ficomps
aam
aam
lcall
push
in
pushf
sub
mov
mov
mov
lret
ds
inc
sub
addr16
sbb
adc
lods
push
addb
mov
stc
push
jbe
lret
adcb
sub
pop
sti
mov
out
into
push
jne
push
xchg
in
jb
sbb
cmpsl
mov
jp
stos
dec
add
sub
fs
mov
adc
add
je
stos
insl
add
mov
dec
fists
jnp
jp
ja
test
and
stc
in
add
add
lahf
adc
aad
lcall
jge
push
ret
pop
dec
and
roll
lds
sub
in
in
icebp
push
divb
inc
push
repnz
mov
adc
mov
outsb
jns
es
adc
xchg
add
jbe
outsl
xlat
ds
ret
adc
scas
jae
push
negl
rol
in
or
inc
inc
hlt
je
lea
inc
adc
inc
rcr
ret
add
mov
cmp
add
adcl
xor
hlt
cmp
or
lcall
or
roll
scas
mov
fs
sub
aam
xor
js
mov
aam
dec
xchg
ljmp
clc
ss
mov
jmp
inc
sahf
jnp
mov
jbe
leave
divb
mov
in
into
mov
push
test
aaa
outsb
xor
mov
mov
mov
adc
pop
xor
mov
sti
push
repnz
pop
or
pop
mov
icebp
fmuls
xchg
push
push
pop
dec
addb
push
pop
dec
bound
nop
inc
subb
adc
in
iret
fs
mov
cltd
pop
call
cltd
sarl
mov
jno
xchg
xchg
sub
mov
adc
adc
outsl
aad
push
es
rcrl
test
and
pop
or
dec
inc
xor
es
aam
gs
cli
or
mov
and
mov
mov
js
mov
jmp
imul
mov
adc
mov
xor
push
test
fsts
jl
mov
mov
out
push
and
imul
dec
aas
cli
ret
sbb
sub
daa
cltd
inc
jle
test
xchg
mov
jp
les
push
shl
mov
mov
stc
out
jl
sub
jae
cld
jecxz
loop
test
int
pop
in
dec
pop
sub
adc
xchg
xchg
lock
movsl
mov
das
negb
pop
xchg
push
pop
rdmsr
daa
mov
in
cmpsb
je
in
dec
and
das
lock
sbb
adc
stc
mov
mov
jo
add
sub
arpl
stc
adc
mov
mov
xchg
repz
push
push
or
popa
cmp
mov
cltd
jg
bound
int
outsb
fs
push
divb
pushf
bound
aam
lods
xor
imul
mov
jecxz
xchg
jg
scas
pop
movsl
inc
pop
cwtl
stos
add
pop
mov
xorb
push
cli
into
xchg
stos
nop
dec
push
dec
lret
pop
enter
mov
cmc
xlat
in
sbb
push
push
push
lods
das
pop
iret
dec
pop
push
or
movsl
pop
push
sub
mov
arpl
ret
lea
jo
repnz
dec
push
pop
out
js
aad
les
jg
lock
imul
inc
es
into
push
imul
lret
jl
jmp
xchg
es
in
pop
sbb
or
mov
jg
fmull
xor
out
mov
je
sbb
js
rorb
add
jp
sbb
mull
out
mov
or
shrl
lret
sbb
dec
pop
jp
out
push
or
cmovle
stos
pop
imulb
sbb
sub
and
mov
addl
sub
xacquire
jns
push
in
pop
jge
adc
mov
dec
dec
cmp
xchg
sub
shll
mov
jns
loopne
add
sbb
sub
or
and
addl
mov
mov
pop
sahf
test
out
pop
push
mov
out
test
mov
lcall
cmpsl
sub
dec
push
mov
pusha
fistl
mov
in
sbb
jge
shl
pop
push
xor
in
test
sub
enter
jg
adc
fildll
inc
mov
rcll
in
loopne
xorb
mov
fdivr
xchg
lock
xor
pop
hlt
sub
mov
dec
repnz
or
mov
cmp
fimuls
lahf
push
imulb
pop
pop
lock
push
mov
xor
jae
pop
add
mov
pusha
xchg
xchg
dec
incb
iret
mov
lds
scas
ret
and
dec
mov
dec
shld
int3
out
adc
movsb
mov
mov
mov
dec
js
jnp
mov
nopl
mov
and
cs
push
std
pop
in
or
les
add
out
pop
fcmovnb
inc
jo
fldl
std
push
sbb
push
mov
pop
sbb
pop
cmp
xchg
mov
adc
pop
cmp
and
push
dec
decb
stos
xor
data16
movsl
sub
insl
or
push
adc
cmp
xor
shrb
loop
or
push
inc
pop
push
mov
pop
ret
sub
or
out
lret
nop
mov
jg
mov
pop
repnz
mov
call
inc
jle
cmp
mov
rol
mov
sub
stc
pop
xchg
mov
dec
stos
fcompl
mov
mov
add
lret
data16
fadd
test
push
movsb
ret
fimull
jecxz
mov
mov
mov
or
cwtl
xor
mov
xchg
inc
decb
push
and
mov
mov
mov
fcompp
xor
enter
or
sbb
mov
xorl
push
mov
mov
insl
lds
fbld
outsb
orb
scas
call
wrmsr
sbb
adc
pop
dec
out
cmp
push
sbb
out
and
jmp
xor
fwait
sbb
sub
cmp
or
outsb
test
pop
jns
and
stos
lret
push
enter
out
cmp
xor
je
popa
cmp
lods
ljmp
jno
push
push
stos
lret
js
mov
test
mov
pop
pop
or
mov
sti
jmp
outsl
add
cs
test
js
mov
mov
ret
mov
push
repz
jbe
push
mov
das
dec
sti
shrl
loop
xchg
pushf
jg
xor
ret
scas
icebp
cwtl
rcrl
js
xchg
jbe
cmp
pop
add
cmpxchg
mov
lret
mov
mov
pop
imul
mov
pop
dec
or
push
mov
cmp
mov
aad
sbb
xchg
dec
sbb
les
xchg
ret
shrb
cli
sub
mov
mov
pop
sbb
fsubrs
test
and
nop
cwtl
fidivrl
out
dec
inc
dec
leave
iret
dec
pop
adc
fisubs
pop
loope
ja
push
test
sub
clc
add
jg
popa
adc
dec
pop
jae
adcb
jg
xchg
psraw
cmp
leave
sbb
sbb
mov
fisttps
movsb
cmpsb
jge
ljmp
fcomi
mov
bound
cmpsb
fmuls
in
adc
orl
lahf
xchg
lods
adc
scas
scas
andb
daa
lds
test
popa
add
and
sbb
stos
inc
es
clc
ficoml
in
fwait
out
xor
cmp
aas
push
aas
jns
add
shll
shll
xchg
push
xchg
out
retw
clc
adc
lods
mov
out
push
test
push
pop
mov
mov
es
jl
push
or
fcompp
les
insl
sahf
adc
mov
xchg
mov
repz
xor
fwait
lahf
mov
out
iret
into
das
ds
nopl
push
outsl
jle
outsb
dec
pop
pop
dec
scas
mov
lahf
mov
out
iret
into
das
ds
nopl
push
outsl
jle
outsb
dec
pop
pop
dec
scas
mov
lahf
mov
incl
das
aas
aas
sub
push
pop
pop
outsl
jp
outsb
dec
push
outsb
stos
fwait
pop
mov
jp
into
out
out
dec
pop
pop
push
rol
rolb
notl
mov
mov
daa
les
aam
lods
and
or
add
inc
addr16
cmpsl
inc
xchg
push
xchg
xor
add
adc
in
hlt
daa
les
aam
movsb
ja
test
inc
fs
cmpsl
inc
xchg
push
xchg
xor
in
hlt
daa
les
aam
movsb
ja
test
inc
mov
xor
xor
inc
mov
nop
aaa
xchg
push
les
jmp
mov
cmpsb
outsl
push
pop
movsb
lods
stos
pop
repnz
xchg
push
shrb
pop
push
push
or
or
push
sub
movsb
mov
js
jl
fmuls
stc
mov
aaa
xor
push
xlat
inc
cmp
and
imul
data16
dec
push
lret
fidivl
pop
push
xchg
roll
idivl
in
shll
pop
push
rcll
int3
jbe
ja
mov
stc
mov
imul
out
stos
jno
inc
shrl
pop
ja
cwtl
js
pop
adc
jl
leave
imul
je
mov
sti
adc
fdivs
sub
mov
test
and
mov
xchg
ds
or
ret
ret
daa
aaa
hlt
daa
les
aam
movsb
ja
test
inc
fs
cmpsl
inc
xchg
push
xchg
xor
add
adc
sbbl
inc
rcrl
es
adc
adc
adc
aaa
stc
adc
mov
push
mov
cmpsl
pop
xchg
push
rcll
dec
sarl
inc
push
repnz
cmp
push
jmp
cwtl
push
mov
jle
andl
andb
loope
mov
test
inc
fs
cmpsl
inc
xchg
push
xchg
xor
add
adc
in
hlt
daa
les
aam
movsb
ja
test
inc
fs
cmpsl
inc
xchg
push
xchg
xor
add
adc
in
xchg
xor
stos
je
inc
jno
add
cmp
scas
cmpsl
arpl
cmp
or
movsl
in
xchg
lret
xchg
out
sub
adc
sub
divb
dec
and
xchg
leave
or
dec
dec
subb
js
xchg
vcmpsd
pushf
paddw
xchg
cwtl
hlt
rcrb
dec
mov
push
iretw
subb
popa
pop
and
push
aaa
nop
sbb
insb
testb
call
testl
sub
and
jae
loope
sbb
inc
push
in
pop
lods
mov
cld
gs
pusha
lds
test
or
shll
in
ffree
or
ret
dec
pop
mov
xor
add
inc
minps
imul
jg
push
dec
imul
test
push
mov
dec
cmp
or
add
mov
jmp
dec
scas
push
adc
mov
add
cmc
mov
mov
push
cmpsl
sarl
pop
jnp
scas
hlt
cltd
cmpsl
gs
repz
jecxz
mov
and
mov
push
fs
lret
mov
inc
dec
dec
xor
test
pop
lahf
push
and
xchg
adc
mov
jae
sub
mov
cld
into
or
ret
dec
jge
mov
rcr
mov
sbbb
jp
pop
mov
sbb
dec
sbb
xchg
ds
les
dec
into
pop
in
add
in
fstl
repz
adc
daa
inc
mov
jbe
add
inc
in
xchg
out
ljmp
ficomps
aam
je
inc
int
jmp
ljmp
mov
out
add
in
sbb
pop
add
ficoms
mov
add
jns
loope
xor
jns
jns
stc
xchg
or
pop
mov
leave
dec
mov
stos
cwtl
mov
fstl
nop
inc
mov
cmc
fcoms
mov
fisubrl
fisttpl
cmp
aad
lret
mov
sub
cmp
pusha
in
icebp
sbbb
jge
bsf
mov
es
repz
mov
cmpsl
mov
mov
sbb
call
pop
and
rclb
mov
sub
pop
test
mov
inc
add
outsl
movsb
xor
adc
das
nop
adc
dec
repz
test
aas
mov
arpl
mov
dec
hlt
pop
dec
push
or
pusha
mov
loopne
outsb
mov
and
xor
inc
jecxz
in
dec
fs
jns
clc
pop
iret
push
xor
adc
cwtl
mov
xchg
push
sub
jnp
jmp
in
cli
mov
outsl
fwait
sbb
daa
fildl
fnstenv
cmp
or
mov
push
sub
inc
aas
cmpsl
or
loop
outsb
push
xor
xchg
pushf
outsl
and
inc
push
adcl
xlat
mov
sbb
cmpxchg
mov
sbb
sbb
cwtl
leave
sbb
out
inc
int
xlat
lock
jle
gs
xor
cmc
mov
sub
mov
cmpsb
mov
and
push
in
cmpsb
push
mov
scas
push
pushf
in
pop
sbb
movsb
xor
sbb
mov
in
insl
push
push
movsb
cs
xchg
test
cltd
mov
xchg
test
sbb
add
pop
sbb
or
rcrb
inc
jae
addr16
fadds
sub
dec
push
out
mov
fldl
mov
jns
lcall
mov
jmp
imul
in
lock
aad
es
or
pop
and
rcrb
test
icebp
movl
dec
push
or
jl
je
mov
xor
pop
or
pop
pop
cwtl
leave
xor
mov
mov
ret
subb
outsl
in
in
sub
shrb
jl
scas
mov
aaa
clc
aas
pop
mov
inc
push
bound
lcall
push
cmp
mov
mov
add
test
aad
cmp
mov
popa
xorb
fmuls
mov
mul
pop
fists
xchg
jbe
mov
nop
jb
sub
jae
popa
repz
fnsave
idivl
jno
mov
jmp
sub
outsb
and
add
iret
inc
rclb
cwtl
or
pop
lret
mov
ret
fildll
imul
inc
jg
femms
sub
xor
stc
popf
fidivrs
mov
testb
inc
jg
dec
mov
or
lea
pmulhuw
dec
jmp
lcall
xor
xlat
stos
mov
call
pushf
push
and
scas
fwait
dec
inc
outsb
mov
push
les
jg
jp
in
sub
adc
lcall
movsb
data16
xchg
pop
sub
inc
inc
and
movsb
das
lret
fdivs
sahf
divb
ud1
int
pop
push
jae
aas
xchg
in
push
xor
lods
shrb
cwtl
mov
sbb
jle
jno
stc
aam
xchg
jns
mov
and
mov
lods
shl
adc
fstpl
fldenv
dec
div
das
or
in
pop
or
pushf
movsb
mov
or
imul
mov
adc
loopne
cltd
cmpsb
das
scas
mov
lcall
mov
out
sub
sbb
xor
iret
es
mov
sahf
push
jbe
adc
and
sarl
stos
je
sub
fildll
mov
mov
xchg
or
andl
icebp
xchg
test
cld
mov
mov
movsb
xchg
cld
push
ss
popa
data16
nop
adc
mov
pop
adc
mov
mov
in
inc
lds
pop
jb
dec
sbb
jns
push
jno
pusha
lds
and
mov
lret
xlat
lea
mov
pop
or
inc
lahf
push
rolb
xchg
sbb
ret
ja
fucomp
dec
je
xchg
xchg
cmp
into
mov
movntq
add
leave
divl
sub
mov
push
sbb
test
mov
notl
in
inc
out
or
sahf
pop
cli
cs
mov
sub
sahf
in
in
aad
dec
repz
pusha
popf
mov
mov
mov
sub
mov
cltd
repz
jecxz
cmc
les
inc
std
in
adc
add
push
xor
cmp
fdivs
adc
cmp
push
add
sub
mov
cmp
and
mov
adc
outsb
mov
addb
mov
xor
dec
lret
jnp
and
aam
es
mov
movsb
dec
aam
cmpsb
sti
sbb
mov
rorb
xchg
repz
sbb
mov
loope
mov
lcall
popa
xchg
out
or
cmp
mov
fsts
movl
jge
sbb
in
jg
xchg
dec
push
stos
pop
scas
cmp
cmp
les
or
jmp
xchg
lods
rclb
cmp
sub
adc
jb
les
jge
imul
enter
dec
dec
sub
mov
in
shrl
mov
jmp
int
movb
enter
xor
push
mov
enter
popf
call
and
cmp
push
sarl
outsl
icebp
mov
rcrb
ffreep
jns
movsl
inc
aad
stos
js
mov
mov
sub
cmp
fldenv
mov
in
test
push
ret
cs
mov
mov
sub
leave
idiv
jb
sahf
das
cmp
or
stos
call
ret
sbb
js
xchg
aad
test
dec
das
adc
pusha
push
jmp
mov
cwtl
mov
in
mov
test
sbb
cmp
stos
fdivrs
jnp
sub
or
lock
jae
push
mov
leave
aaa
jo
in
push
dec
shll
mov
outsb
gs
dec
and
mov
cmpsb
xor
loop
cmp
cltd
xlat
adc
mov
out
push
jo
icebp
jmp
lcall
or
lret
add
stc
sub
adc
lret
jmp
push
pop
add
push
pop
cwtl
movsb
push
cmp
loop
aaa
pushf
jno
pop
movsl
jbe
pusha
outsb
push
sbb
add
ret
lods
xchg
mov
push
mov
nop
std
fs
ret
cmpsb
loop
fimull
mov
outsl
aad
lock
xor
arpl
dec
gs
int
jbe
cltd
lods
mov
fmuls
decl
sub
add
std
mov
cmp
mov
lahf
and
repz
std
mov
pop
inc
inc
outsb
cmc
jecxz
nop
mov
pop
jnp
std
adc
dec
dec
fadds
das
shll
mov
les
dec
xchg
lods
cmpsl
xchg
pop
in
inc
mov
sub
mov
add
je
inc
test
test
ljmp
ja
notb
xor
int
mov
dec
and
sbb
repnz
and
imul
mov
xchg
push
and
hlt
pop
cld
xchg
roll
xlat
ret
pop
stc
fsts
pop
pop
xchg
into
or
mov
mov
dec
adc
test
add
dec
xchg
mov
mov
xchg
sbb
sbb
mov
lods
in
add
inc
dec
call
cwtl
mov
lock
scas
cmc
icebp
push
and
imul
out
lret
je
pop
cmp
add
mov
xchg
sbb
pop
sti
sbb
mov
and
and
cmpsl
out
fdivrs
dec
mov
insb
sahf
sub
loop
add
dec
sub
dec
sti
sub
out
jge
xor
or
stos
push
dec
jnp
mov
shll
sub
dec
out
outsl
adc
jns
xor
ret
repnz
xor
pop
jg
jo
adc
cs
mov
cmc
fidivrl
xchg
sahf
jle
cwtl
cmp
sbbl
push
mov
inc
mov
popa
push
and
push
cmp
in
push
jg
inc
rcrl
ss
movsl
rclb
push
aaa
shll
inc
pop
inc
pop
adc
sub
les
dec
xor
cld
cmp
cld
test
stc
jns
sub
repz
mov
or
mov
fbstp
fsubrl
inc
test
dec
dec
pop
int
adc
aad
xor
lcall
frstor
adc
movsb
dec
dec
push
movsl
adc
std
fnstsw
outsl
mov
movsb
cmp
inc
jo
lahf
pop
daa
add
xor
pushf
out
std
mov
sti
adc
jns
inc
into
repnz
push
adc
dec
push
loopne
jo
lcall
mov
jae
rorw
sbb
sbb
std
jmp
jecxz
stos
pushf
adc
scas
add
loopne
xlat
or
and
mov
push
pushf
xchg
sahf
int3
inc
jno
sbb
stos
scas
fildll
jmp
mov
push
sub
loopne
jl
fwait
call
mov
dec
and
xchg
loopw
jl
push
push
in
movsb
sub
add
ret
cmpsl
loope
stc
scas
sub
adc
fldl
sti
mov
and
pop
lea
inc
ds
iret
adc
and
push
fsubl
data16
mov
xchg
aas
mov
or
jecxz
cltd
minps
jns
scas
test
adc
lcall
fiaddl
push
sarl
cmp
fsubs
out
adc
and
push
mov
mov
js
mov
jl
dec
rcll
cltd
pop
jbe
or
sub
xor
outsl
dec
xchg
ljmp
mov
repz
xchg
imul
xchg
mov
roll
push
sbb
arpl
jbe
ficoml
and
adc
push
or
call
mov
push
inc
sbb
sub
jo
pop
mov
iret
addl
sbbb
mov
out
arpl
movsl
ljmp
inc
loop
sbb
les
inc
add
hlt
adcl
out
sbb
cmp
in
cli
cs
push
push
mov
hlt
ret
xchg
jb
ljmp
minps
mov
mov
sub
mov
jae
lret
mov
cmpsl
ret
lods
pop
outsl
adc
fdivrl
pop
or
xor
add
in
mov
orb
sbb
dec
mov
adc
push
mov
scas
sti
repz
xor
cli
xchg
inc
inc
sbb
xchg
mov
movq
insb
sbb
mov
rclb
test
push
inc
inc
or
lods
lret
in
lea
lods
sbb
cmp
pop
mov
jl
into
pop
xchg
and
stos
divl
test
rcrb
scas
mov
addr16
xlat
mov
jb
dec
cltd
std
out
repnz
xor
into
mov
or
stos
mov
lcall
mov
adc
outsb
bound
fisttpl
xchg
outsl
icebp
rcr
sbb
jl
xor
add
fldl
loop
mov
add
push
not
cmc
mov
ret
ljmp
jecxz
xchg
frstor
dec
in
xchg
outsb
dec
popa
sub
cmp
jle
loope
repnz
pop
xchg
sbb
xor
cmovs
xor
push
dec
std
sub
cmp
fsubrs
std
cmpsl
loopne
mov
int
push
xchg
adc
rorb
pop
in
push
jl
sub
cmc
adc
xchg
jno
loopne
inc
test
cmp
and
mov
lods
scas
inc
mov
rcr
xor
mov
popa
jg
adc
mov
mov
pop
inc
inc
jno
roll
test
xor
pop
jp
add
addr16
adc
xchg
sub
sbb
js
jne
xchg
cmp
popf
mov
sbb
in
cmpsl
in
mov
ljmp
mov
insb
mov
xor
iret
mov
sbb
shr
and
imul
pop
pop
fwait
leave
adc
ss
shll
push
stos
pop
jge
adc
pop
mov
fstps
popf
dec
xor
int
aaa
mov
ja
and
jb
jo
or
push
sub
ljmp
les
out
and
mov
lahf
mov
jo
sbb
mov
hlt
stos
add
call
out
cmpsl
jge
xchg
jnp
xchg
mov
and
inc
inc
xchg
mov
in
pusha
orl
ret
lcall
lahf
sub
mov
divb
jo
push
sub
imul
xchg
aam
cltd
movb
fsubs
shr
sub
scas
out
stos
out
leave
pushf
push
or
mov
sub
push
adc
mov
pop
mov
xor
xor
mov
sahf
jle
jp
adc
outsb
pop
sub
jae
dec
sahf
mov
and
cltd
out
loope
cli
dec
inc
jae
mov
xchg
adc
rcrb
cmp
into
inc
sub
icebp
mov
addr16
mov
mov
ljmp
enter
push
cmc
mov
mov
aad
ljmp
sub
in
inc
inc
mov
popf
fnstcw
outsl
cmpsb
pushf
and
xchg
xor
inc
test
mov
mov
inc
pop
sub
in
xchg
push
cmpsl
cmp
xchg
xchg
rcll
mov
je
fistl
dec
movsl
jmp
mov
xchg
lret
cmpsb
jbe
mov
dec
ja
xor
xchg
outsb
sub
sbb
mov
in
frstor
test
packuswb
aas
sub
bound
bound
nopl
sbb
imulb
cmpsb
jmp
in
pop
dec
mov
lcall
pop
fnsave
cmp
xchg
stc
xor
pop
jmp
in
pop
jmp
mov
inc
adc
outsl
shrl
push
loopne
jbe
hlt
es
rcrl
rep
push
dec
mov
pushf
in
out
imul
loope
testl
mov
add
cli
mov
mov
xchg
xor
sbb
stos
xchg
cmp
sbb
int3
ret
inc
xor
shll
mov
xchg
cmpsb
fucomi
sbb
xchg
stc
scas
jp
in
push
icebp
cmpsl
fsubrs
push
js
and
xchg
ja
pop
fcomi
popf
xchg
mov
stc
sbb
mov
cli
in
dec
decl
in
jp
push
mov
icebp
mov
adc
nop
inc
daa
push
push
mov
sti
iret
jbe
pop
mov
jo
sarl
mov
mov
loop
int3
cmp
inc
sahf
ss
mov
add
or
or
sbb
jmp
mov
sub
mov
jge
inc
mov
jne
aad
mov
lcall
insb
pusha
mov
dec
push
fists
jl
stc
mov
loope
test
xor
mov
shrb
popf
xchg
mov
in
fs
and
mov
mov
pop
mov
pop
pop
xor
dec
and
cmp
cld
dec
ret
ljmp
rcl
out
jl
inc
push
icebp
loope
mov
push
mov
out
inc
jno
rol
push
arpl
xlat
int
dec
jbe
sbb
push
xor
ficoml
mov
pushf
xchg
and
adc
ret
addb
icebp
push
dec
int3
push
sub
iret
xor
mov
mov
jo
cld
stos
adc
lds
movsl
jge
cmp
fisubrl
push
inc
cld
pop
outsb
pusha
mov
pop
es
outsl
jg
test
sbb
sub
mov
mov
mov
dec
jg
pop
and
sarb
sbbl
lods
aas
int
jns
orb
rclb
jp
jge
int3
dec
jne
xlat
and
push
inc
popl
pop
subb
xchg
sbb
loop
mov
inc
movsl
insl
inc
out
or
mov
adc
push
out
and
fisttps
daa
sbb
bound
out
xchg
pop
daa
sub
les
mov
pop
pop
es
xchg
orl
rol
xor
lods
or
mov
in
adc
aam
enter
push
mov
aas
jns
test
scas
out
or
test
shlb
pop
lret
adc
daa
mov
aam
repz
fstpl
imul
mov
mov
movsb
mov
pop
mov
inc
call
inc
leave
ds
xchg
out
testl
pop
pop
lods
andb
aam
testb
cli
xchg
lds
jmp
arpl
rcl
and
aam
mov
mov
pop
and
sub
jmp
add
pop
addl
push
and
outsl
mov
clc
cmp
test
pop
movsb
push
adc
in
xor
inc
mov
pop
or
add
jle
adc
outsb
pop
ret
fstp
dec
lcall
inc
out
into
mov
arpl
xchg
pusha
inc
add
xchg
rclb
mov
inc
or
push
outsb
or
jae
xchg
sbb
sbb
and
pop
pushf
lock
push
shll
lret
int3
gs
mov
movsl
inc
nop
mov
inc
stos
je
dec
out
sub
lock
loop
or
es
repnz
test
lods
movsb
dec
jmp
out
sbb
js
leave
push
dec
and
pop
adc
pushf
popw
or
clc
sbb
inc
xchg
loope
and
loope
push
ret
std
out
mov
sarb
jne
fwait
loope
mov
push
and
mov
pusha
push
ss
mov
subb
test
enter
test
cmp
lods
inc
clc
pop
or
jle
sub
cwtl
or
sub
stos
sbb
push
mov
pop
jne
ds
gs
sbb
into
sbb
xchg
aam
mov
imul
or
out
dec
xor
andl
xor
sub
sbbb
xchg
lahf
lahf
adc
das
cli
lea
loop
and
adc
scas
xchg
xchg
leave
sub
jge
xor
enter
imul
xor
cwtl
dec
or
scas
jnp
mov
adc
fcoml
or
jo
popf
inc
clc
xor
xor
xchg
xchg
jp
push
rcrl
emms
mov
add
das
sbb
out
inc
addr16
shlb
cmpsl
mov
incl
push
and
mov
les
aam
movsb
ja
test
inc
fs
cmpsl
inc
xchg
push
xchg
xor
add
adc
in
hlt
daa
les
aam
movsb
ja
test
inc
fs
cmpsl
inc
xchg
push
xchg
xor
add
adc
in
hlt
daa
les
aam
movsb
ja
test
inc
gs
cmpsb
inc
xchg
push
xchg
xor
add
aaa
hlt
daa
les
aam
movsb
ja
out
xlat
adc
fwait
dec
mov
push
jg
sbb
sub
cmp
mov
push
sbb
push
in
lcall
sub
pop
lret
leave
ljmp
mov
mov
dec
int3
jp
push
lcall
sub
pop
lret
ds
mov
dec
int3
jp
push
lcall
sub
sbb
insb
push
or
jbe
jp
rcrl
push
andl
mov
fwait
pop
lods
je
scas
dec
lret
dec
fisubrl
pop
pop
inc
xor
cli
pop
lods
out
hlt
jne
jecxz
daa
mov
repnz
cmp
xor
push
rcrb
loope
repz
cld
push
shll
mov
scas
in
mov
bndldx
lods
pop
frstor
lcall
pusha
mov
ss
mov
and
out
cmc
jae
cmp
push
mov
inc
fnstcw
push
repnz
pop
ljmp
mov
adcl
mov
scas
push
mov
mov
iret
sub
sub
sti
push
or
fmull
jp
push
lcall
sub
pop
lret
jl
add
push
aad
lds
mov
int3
cmp
jns
js
push
into
push
cmp
sahf
sub
dec
mov
cs
mov
in
enter
ret
inc
xchg
aas
mov
cmp
aad
fistps
or
sbb
dec
int3
jp
push
lcall
sub
pop
lret
jl
insb
sbb
lods
pop
fmull
jp
push
lcall
sub
pop
lret
jl
insb
sbb
jmp
adc
or
rcll
movsl
imul
fldt
dec
js
fldl
mov
sub
dec
mov
imul
sub
mov
sarl
leave
out
pop
arpl
in
fmuls
lret
test
add
push
lds
icebp
and
je
inc
jmp
sbb
std
lods
ds
mov
jmp
push
sbb
inc
lods
push
out
xchg
sub
lds
and
mov
jecxz
fadd
out
leave
jb
ja
cli
cmp
fdivs
mov
mov
and
in
inc
push
cs
jg
add
push
gs
sbb
cmpsl
into
mov
std
or
cmp
mov
mov
dec
xor
jns
pop
dec
mov
lret
mov
test
pavgb
rcll
arpl
dec
add
int
inc
sbb
iret
add
xor
sub
call
mov
hlt
push
xchg
out
imul
fnstsw
in
ds
lahf
cmp
scas
gs
daa
mov
dec
cwtl
cmp
repz
testl
inc
mov
mov
xchg
frstor
loop
xor
pop
inc
filds
mov
insb
shl
fwait
jae
pop
jg
xor
stos
mov
adc
movsl
mov
pop
enter
mov
fwait
pop
and
mov
add
push
das
cmp
stos
mov
out
sbb
les
pop
adc
mov
das
mov
aam
xchg
adc
mov
popa
mov
pusha
mov
xchg
push
xor
scas
out
fcomip
fmuls
sub
adc
inc
add
xchg
add
inc
test
out
sub
inc
cwtl
cmp
ljmp
and
xchg
sub
fimull
fiaddl
stc
mov
mov
insl
inc
sbb
lahf
fisubrs
iret
shlb
pop
lret
scas
imulb
jbe
pop
cmpsl
data16
movsl
fisubl
roll
outsb
inc
lret
repnz
adc
in
xorl
xor
jns
in
lock
push
repz
dec
jp,pt
add
std
push
jnp
mov
ret
jp
mov
mov
int3
inc
iret
xchg
hlt
mov
outsl
filds
out
fisubrl
test
jae
pop
mov
add
andl
push
mov
pop
xchg
in
outsl
mov
adc
movsl
jae
sub
jo
ficompl
xor
mov
adc
cmp
mov
hlt
sbb
adc
mov
push
jle
dec
xor
dec
test
int
inc
add
inc
shl
jl
lea
test
mov
cmc
dec
or
add
push
cltd
or
sub
pop
cmc
adc
mov
fucomp
out
insb
out
adc
shll
mov
loop
add
incb
push
inc
imul
mov
mov
xor
or
cmpsb
or
add
push
xchg
ss
rcrl
ret
or
loopne
in
inc
in
mov
cld
push
mov
lret
int3
into
lret
aaa
inc
jno
lahf
xlat
cmc
xchg
dec
enter
enter
mov
jge
adcl
push
addb
sub
xchg
js
pop
stc
add
jbe
jecxz
adc
push
call
mov
fwait
imul
xlat
pop
xchg
scas
fwait
xchg
or
mov
fisubs
push
sub
in
out
dec
jo
loop
aaa
cltd
fsubrs
jns
add
int
mov
icebp
xor
mov
aaa
push
inc
div
add
adc
in
pop
inc
lock
jae
inc
mov
adc
add
cmc
dec
push
repz
jge
xor
subl
pop
mov
adc
pcmpeqw
jl
in
repnz
sahf
cmp
je
bound
adc
xor
jg
dec
test
xchg
test
xchg
arpl
out
sarb
dec
cmp
int
push
jle
mov
mov
rcr
or
add
inc
push
dec
inc
stc
outsb
mov
or
into
mov
sahf
fdivl
cmp
lods
cmp
cmp
push
lret
add
jb
ja
leave
out
mov
sbb
cmp
mov
ficompl
dec
out
inc
pop
data16
sub
daa
insb
push
jl
mov
push
jmp
lret
mov
les
ja
mov
sbb
jo
shrl
fmulp
xchg
xchg
nop
pop
inc
ss
shrl
fdivs
pop
mov
ljmp
add
fiadds
inc
test
mov
mov
jae
lea
pop
xchg
sbb
rcrl
repz
out
insl
fldt
jbe
inc
insl
jl
sub
je
cltd
mov
sbb
sub
and
pop
fidivs
push
lds
mulb
push
mov
mov
aad
icebp
in
mov
sbb
jnp
fnstenv
inc
ja
xchg
movmskps
rclb
and
jbe
lds
pop
les
cltd
inc
jbe
jmp
mov
gs
push
jl
mov
hlt
sbb
aaa
test
les
jl
xchg
sub
xchg
imul
jnp
inc
or
loopne
sub
stc
inc
loopne
and
cmp
insl
sub
or
cltd
mov
jae
enter
ds
js
addr16
add
mov
dec
mov
icebp
cmpb
adc
mov
sub
cmp
sbb
push
inc
clc
xor
outsb
pop
sub
fs
push
bound
shl
bound
sahf
inc
add
dec
cmp
xchg
aam
popf
add
sahf
mov
cmp
push
int
push
dec
repnz
mov
subb
out
push
jne
mov
cmpb
mov
fcmovnu
adc
mov
adc
cmp
add
sbb
out
sbb
adc
daa
dec
adc
test
cmp
mov
pop
arpl
mov
rclb
aam
lcall
ljmp
nop
test
loopne
xchg
pop
inc
sub
mov
push
push
cmp
or
aam
out
pop
xchg
mov
enter
push
iret
adc
inc
out
xchg
pop
inc
xchg
je
mov
rcll
test
pushf
dec
lods
pop
popf
outsl
dec
nop
cltd
mov
fldl
adc
jb
sbb
loop
adc
movsb
lcall
sbb
sti
adc
inc
mov
mov
push
push
test
inc
jp
jnp
adc
outsl
pop
push
int3
dec
imul
orl
mov
mov
pop
leave
incl
inc
fildll
cmc
ret
lods
fdivrl
pop
rol
testb
hlt
push
in
mov
jb
loop
in
clc
sub
fidivl
jecxz
in
mov
mov
push
ds
push
outsb
cmpsb
hlt
into
dec
imul
sbb
stos
mov
mov
inc
sbb
gs
arpl
xor
test
fs
jne
dec
xchg
and
push
out
fmuls
cmpsb
bound
sub
push
pop
push
test
scas
mov
sbb
loopne
fisubs
xchg
and
jb
jecxz
pop
popf
lods
loopne
push
js
inc
dec
xchg
push
add
mov
push
scas
jge
mov
mov
fisttpll
inc
mov
cmp
adc
xchg
mov
aas
sub
jns
cmpsb
xchg
mov
stc
pop
xchg
in
pop
repz
lods
psllw
push
inc
xor
and
daa
cmpsl
cmpsl
xchg
jp
lret
sub
adc
or
mov
mov
cmpsb
push
push
mov
sub
daa
out
inc
scas
fnstcw
xor
das
mov
andb
rol
fs
sti
xor
and
dec
jmp
sbb
mov
mov
xchg
lock
cs
lret
sub
add
cmp
mov
dec
hlt
mov
lret
pop
aam
subl
shrl
ljmp
ss
push
inc
mov
cmp
or
and
test
push
das
orb
or
fsubp
outsb
fnstsw
mov
ficompl
rcll
mov
lods
sbb
xor
jp
in
sbb
or
sar
stos
add
lret
ret
add
cmp
stos
xchg
mov
lock
int
push
push
mov
jne
aad
fidivrl
dec
mov
bound
les
fisubl
push
mov
adc
icebp
shl
xchg
pop
insl
pop
neg
jle
sti
fidivrs
in
adc
pop
popa
inc
or
ret
inc
sbb
cmp
mov
inc
add
sub
lods
das
outsl
fidivrl
out
mov
aam
sbb
stos
vphaddbq
movsb
fmuls
lcall
nop
hlt
jge
pop
push
imul
hlt
cmp
ja
inc
xchg
aaa
jmp
cltd
repnz
sbb
sbb
insb
addl
or
adc
sbb
pop
and
cmp
push
xor
or
push
xchg
ja
sub
push
insl
lock
out
push
mov
xor
insl
sub
ret
mov
pop
push
pop
xchg
movsl
jp
arpl
cwtl
add
rorb
inc
lcall
lret
aad
loope
insb
movsl
pop
sbb
rorb
stos
dec
lret
cltd
lods
jae
rcr
push
lds
pop
lods
and
pop
shll
mov
imul
xchg
mov
and
js
pop
xchg
push
lcall
xchg
lds
jae
popa
dec
add
xor
and
addb
pop
pop
in
subb
lahf
sbb
dec
loopne
xor
mov
pop
dec
mov
add
daa
data16
testb
or
ds
sti
aam
mov
fst
or
stos
imul
aam
pop
dec
add
movaps
add
stos
stos
sbb
pop
iret
pop
push
or
adc
push
stos
adc
pop
pop
sbb
aad
orb
rclb
inc
mov
fdivrs
in
rorb
sbb
xlat
pushf
jo
out
cld
jl
aam
outsb
lret
in
sti
push
sub
dec
fwait
hlt
sbb
or
add
push
fprem1
iret
adc
jle
std
sub
inc
loopne
lret
imul
enter
stos
jmp
into
hlt
sbb
jle
loop
dec
dec
mov
ret
mov
out
gs
push
push
jg
cli
iret
scas
dec
xchg
cmp
mov
fndisi(8087
push
push
in
mov
pop
test
mov
add
inc
fiadds
add
cmpsl
pop
and
gs
adc
cmc
movsb
cltd
nop
pop
leave
scas
and
mov
repz
sbb
dec
insl
jns
pcmpgtw
int
or
cli
dec
pop
jnp
popf
mov
in
cmpsb
cmp
sbb
jle
sbbl
sbb
mov
push
imul
dec
push
mov
pop
jmp
out
xor
out
xor
pop
roll
pop
dec
enter
and
fcoms
rolb
sbb
xorb
aam
dec
jns
and
push
mov
push
cwtl
mov
adc
push
mov
pop
sti
adc
mov
into
cld
jae
aam
in
stc
adc
sbb
imul
leave
dec
outsl
ficoml
pop
das
data16
sub
dec
pop
push
shl
test
xchg
shrb
or
cli
divb
mov
loope
imul
and
dec
fldl
outsb
cmpsl
mov
lods
dec
pop
in
shlb
push
push
movsl
and
pop
lret
mov
dec
stos
data16
pushw
ret
pop
and
sahf
adc
hlt
jp
inc
in
stos
in
shl
cld
stos
nop
fwait
or
and
sbb
add
leave
ret
pop
pand
dec
cmp
pop
outsb
xchg
ret
sub
pop
fs
insl
shr
dec
scas
scas
rorl
ret
imul
push
push
rorb
into
jecxz
ja
push
or
into
mov
call
xchg
and
lret
push
push
es
dec
cmp
dec
cwtl
mov
and
inc
mov
cltd
int
aas
push
fcompl
fs
into
sub
jmp
js
insl
dec
dec
in
fucomp
stos
std
jle
insb
bound
push
lcall
dec
out
std
sub
xchg
nop
push
dec
dec
push
jne
out
aas
add
imul
xchg
test
jmp
mov
push
scas
cmpsb
and
movl
cmp
clc
dec
mov
std
aam
mov
and
adc
push
sbb
sbb
push
sub
mov
in
push
mov
cmp
cmp
sbb
dec
pop
mov
or
and
adc
push
push
test
add
rcll
pop
gs
scas
add
pop
leave
test
popf
push
mov
imul
xor
sub
clc
in
jg
or
inc
jl
aas
out
int3
sub
std
cmpsb
add
cmp
xchg
ficompl
test
imul
insl
arpl
rorl
enter
stos
xchg
stos
sbb
fidivs
mov
jecxz
inc
pop
ret
and
cmc
inc
mov
inc
fldcw
xchg
mov
sbb
sub
push
lock
xchg
sti
fmull
xlat
pop
mov
fildl
lcall
or
int3
addr16
inc
push
mov
push
scas
xor
fwait
and
mov
cmpsb
out
and
enter
or
notb
lds
aas
or
adcl
mov
fcompl
xchg
das
mov
inc
mov
sub
notl
adc
inc
aas
sub
rol
or
xor
pop
inc
push
hlt
adc
xor
dec
scas
andb
les
in
les
call
sbb
fwait
repz
push
sub
sbb
cmp
loopne
lahf
xor
sub
cmc
inc
ret
jbe
xor
sbb
sub
inc
mov
pop
in
cld
xlat
in
cmpsb
pop
or
jns
mov
scas
sub
data16
fsubr
enter
sub
push
pop
jnp
mov
dec
xor
lea
lods
sub
pop
jo
aas
pop
mov
movsb
and
cld
das
stos
xor
mov
mov
insl
cmp
int
mov
in
push
js
stc
fistps
lods
call
or
scas
dec
mov
or
xor
jmp
and
or
ficompl
mov
fdivp
xor
flds
jb
outsb
mov
or
enter
pop
mov
ja
pop
mov
sub
std
fst
sbb
enter
push
and
mov
outsl
jb
fistl
sbb
in
sbb
jbe
push
pop
sub
popa
daa
cmpsb
fwait
dec
les
or
std
mov
xor
xchg
cmp
sbb
mov
cmpsl
lock
es
pop
pop
xchg
push
dec
add
stos
cmpsb
movsb
hlt
fwait
popf
das
hlt
pop
or
outsb
jbe
out
imul
or
mov
pop
cmpl
test
cli
outsl
or
dec
stos
shl
repz
push
clc
pusha
cmp
mov
in
jne
es
push
dec
rcrb
cmp
test
mov
ljmp
add
stos
aaa
mov
mov
push
push
adc
aaa
ret
lret
andl
push
sbb
jp
and
cli
scas
cwtl
sbb
test
rolb
xchg
xchg
fnstsw
imul
movsl
cmpsb
imul
leave
inc
pop
and
pop
xchg
scas
enter
add
pop
sub
fsubr
cwtl
inc
sub
shr
ficoms
mov
addr16
bnd
jge
in
jmp
or
xor
adc
xlat
dec
push
popf
arpl
xchg
push
aam
xor
lods
cmpb
loope
mov
daa
jb
add
pop
sbb
scas
int
dec
add
mov
xchg
rcr
mov
fnstenv
ret
out
faddl
sbb
int
add
xlat
std
lahf
mov
outsb
adc
call
cmp
xchg
movsl
nop
roll
dec
lods
xor
push
aam
adc
push
pop
inc
rsm
cmp
pop
dec
outsb
xor
mov
lret
xchg
das
pslld
and
mov
push
int
clc
cmc
enter
out
out
loopne
jg
mov
sbb
add
push
pop
into
outsb
repnz
andb
orb
push
mov
xor
adc
cmpsl
mov
std
xchg
ds
xchg
inc
inc
sahf
xchg
repnz
shlb
jp
in
inc
cld
andl
xlat
filds
pop
repnz
iret
sbb
js
pop
add
sub
mov
mov
stos
das
stc
mov
pop
andl
ss
pop
push
insl
or
push
jmp
icebp
mov
and
out
xchg
sub
out
outsl
dec
lds
lret
sub
sbb
fisubrs
fildll
mov
ja
nop
loopne
shrl
in
mov
jnp
jnp
lds
test
dec
test
cld
sub
lahf
push
fnsave
sbbb
repz
ret
sbb
out
adcb
popf
or
js
pop
push
movsl
adc
dec
sahf
enter
add
mov
jmp
dec
loopne
push
aaa
lods
jge
nop
out
lret
sub
jne
dec
adc
nop
mov
push
adc
push
mov
mov
mov
cmp
test
xchg
xchg
cmc
push
inc
push
dec
rcll
int
pop
jp
inc
mov
mov
xchg
xchg
sti
inc
dec
lods
mov
jl
aaa
jbe
js
daa
mov
mov
xlat
add
pop
ss
test
adc
jge
out
leave
cmc
mov
mov
ja
outsb
bound
jp
test
cmpsl
inc
mov
inc
push
cltd
loopne
lcall
cmp
add
sub
testl
xchg
das
test
je
jne
adc
inc
stc
push
cs
adc
js
pop
mov
lock
jne,pn
adcb
push
int
shrb
ret
dec
leave
fisubl
mov
outsb
cmp
xchg
lret
lock
sub
into
mov
pop
icebp
add
ja
mov
fs
mov
das
adc
sub
push
add
ss
cmpsl
mov
ds
stos
dec
xor
inc
pop
xchg
les
ret
aam
inc
mov
mov
jae
stc
ret
ret
jne
push
ja
aaa
xchg
jmp
inc
mov
xchg
and
ss
ja
ds
adc
xchg
clc
sbb
cmp
loope
out
sub
sahf
test
outsl
push
iret
movsb
push
mov
cmp
inc
mov
pop
inc
inc
dec
inc
cmpb
push
dec
cwtl
mov
bound
and
adc
mov
add
push
mov
inc
andb
xchg
pop
lahf
inc
out
shrl
push
or
dec
or
aam
sti
mov
ror
sub
js
cld
ret
movsl
stos
inc
push
fisttps
lea
std
mov
imul
and
or
jno
xlat
dec
out
xchg
pushf
fdivl
aam
cwtl
or
pop
stc
test
pop
sbb
push
das
mov
enter
mov
scas
adc
push
cmp
test
loope
test
andb
and
aam
sbb
push
jbe
sbb
inc
insb
hlt
popf
pop
dec
add
fstp
inc
lahf
les
mov
sbb
xor
pop
orl
lods
mov
mov
adc
pop
mov
aad
cmp
push
dec
popa
loopne
mov
dec
cmpsl
adc
mov
and
loop
loop
in
dec
lahf
adc
pusha
mov
into
addb
pop
ret
mov
xchg
xchg
dec
fidivl
lds
nop
jne
mov
cli
add
dec
cmp
and
and
cmp
jb
scas
das
bound
jecxz
call
cmp
rcrb
lcall
cs
inc
in
in
cvtdq2ps
jae
hlt
pop
mov
or
push
pop
add
mov
test
push
data16
mov
xor
and
lcall
testb
sub
outsb
add
cmp
mov
mov
dec
mov
jnp
ss
fwait
ds
adcl
in
fists
stos
push
pop
es
imul
fcomi
mov
loopne
push
mov
pusha
inc
pop
mov
fdivs
lods
mov
and
sbb
outsl
aaa
iret
mov
xchg
mov
xor
xchg
cwtl
xor
or
js
fstp
aaa
fs
push
add
xchg
roll
pop
add
xchg
adc
cmpsb
rorb
fnstsw
inc
ja
push
or
ret
pop
or
cmpsb
loop
ds
mov
sub
cld
push
lcall
sub
pop
lret
jl
insb
sbb
lods
pop
fmull
jp
push
lcall
sub
pop
lret
jl
insb
sbb
lods
pop
fmull
jp
push
lcall
sub
pop
lret
jl
insb
sbb
lods
pop
fmull
jp
push
lcall
pop
lods
aam
mov
adcl
mov
push
out
mov
and
repz
sbb
push
sbbl
arpl
push
call
add
imul
cmp
jl
sbb
push
sbbl
arpl
push
call
add
adc
jecxz
sarb
ss
negl
in
in
ss
adc
push
test
clc
ss
mov
cwtl
ljmp
stos
jecxz
push
int3
and
add
jge
adc
mov
or
sbb
xchg
push
or
popf
mov
mov
cmpsb
ret
xor
sub
push
mov
jmp
inc
sub
jb
enter
sub
es
add
sub
imul
xor
mov
push
pop
int3
and
adc
mov
cmp
mov
in
jp
test
dec
insl
push
out
dec
push
js
adc
cmp
aaa
or
js
push
mov
push
mov
xor
mov
push
call
add
adc
jecxz
repz
sbb
push
sbbl
shll
in
inc
std
push
test
pop
lods
inc
cltd
inc
imul
adc
or
or
stos
push
lret
es
push
scas
dec
xchg
jg
push
ja
test
mov
pop
mov
int
mov
aad
cld
shll
cmp
xor
xor
add
adc
jecxz
repz
sbb
push
sbbl
arpl
push
call
add
adc
jecxz
repz
sbb
push
sbbl
arpl
xchg
xor
fdivl
push
inc
or
lcall
xor
shl
insb
adc
shl
adc
pusha
dec
das
ficoml
test
cmp
and
pop
jg
pop
inc
in
subb
cld
fs
mov
mov
mov
movsb
jo
rcll
rcll
inc
mov
jle
adcb
mov
movsb
cwtl
mov
scas
inc
adc
sub
idivb
lock
repz
mov
out
ffree
out
jno
sub
sbb
mov
fcompl
add
shr
mov
into
sbb
sti
addb
or
push
jl
adc
fcomps
mov
or
sub
lret
ret
inc
pop
inc
loope
fidivs
sbb
pop
push
sbb
in
jno
adc
shrl
mov
xchg
test
xchg
test
and
jmp
or
shlb
mov
data16
mov
repz
mov
loop
inc
ret
dec
push
out
cmp
outsl
lock
mov
ret
mov
sbb
jg
es
rolb
das
xchg
outsb
xor
xorl
push
dec
cmpsl
pop
xor
lcall
js
in
bound
cli
lahf
mov
mov
jge
ret
fxch
sti
into
jg
lock
pop
lahf
jns
imul
xchg
cmp
in
ret
jo
or
cmp
in
inc
fistl
lahf
cmp
add
hlt
xchg
lret
cmp
scas
in
hlt
add
inc
pop
rcl
mov
mov
add
scas
add
gs
daa
or
jbe
mov
or
iret
mov
dec
or
xchg
jecxz
fstpl
sar
imul
test
int
pop
inc
ljmp
xchg
repnz
sbb
adc
incl
dec
mov
xor
scas
push
xchg
enter
mov
cmpsl
es
cltd
rclb
adc
mov
movsb
inc
push
outsl
fidivs
das
dec
sbb
enter
dec
test
popf
testl
sti
popf
lahf
movsb
and
test
mov
sbb
ljmp
gs
sbb
push
call
cmpsb
and
loope
lea
add
shrb
sub
cmp
dec
pop
loope
je
jmp
mov
and
mov
inc
or
outsl
add
les
dec
or
or
dec
mov
pusha
xchg
ja
popf
nop
sub
add
cli
xchg
into
pop
repnz
in
daa
test
pop
add
test
insb
pop
test
jo
sub
mov
fcoms
repz
stos
ds
jae
xchg
lods
push
jne
sub
xor
lods
and
icebp
add
je
lcall
mov
sbb
and
int3
fisubs
int
cltd
push
add
xchg
or
xchg
adc
push
ret
loope
jmp
call
pop
lea
fcoms
test
cmpsb
stos
adc
xor
inc
mov
rorb
cmp
sbb
xchg
mov
fs
js
ss
fcoml
push
fs
and
mov
inc
shll
xor
popf
mov
mov
test
sub
xchg
into
lfs
mov
stc
out
js
aaa
sub
iret
pop
dec
push
aas
or
lret
in
xchg
mull
shr
ljmp
xor
iret
lret
shll
movsb
xor
out
inc
jb
add
dec
enter
mov
xchg
mov
xchg
out
push
push
jo
call
cmc
push
fst
xchg
xor
adc
mov
adc
mov
and
stos
pop
mov
cmp
addr16
cmpsb
bound
fs
xor
add
pop
lcall
cmp
mov
jo
pop
in
cmp
fs
pop
cwtl
repnz
mov
jle
out
fsubrp
mov
jae
or
add
inc
pop
mov
inc
or
in
lods
leave
lock
inc
sbb
push
popa
push
dec
xor
sarl
add
rclb
pop
jge
lds
stos
mov
mov
or
cmpsl
mov
add
adc
push
push
je
dec
and
sbb
sti
adc
dec
sub
add
inc
mov
les
loop
inc
xchg
lret
sub
sbb
sbb
cmp
incl
xor
inc
push
add
sbb
mov
pop
nop
push
jp
dec
add
cs
sbb
ljmp
mov
call
mov
mov
aam
adc
adc
xor
inc
mov
push
movb
jecxz
arpl
in
jmp
or
sbb
xor
dec
mov
movsb
sub
cmp
into
sub
mov
and
pusha
dec
pop
jns,pt
xor
fistl
jle
js
test
mov
pushf
lret
movsb
stc
sbb
mov
cmpb
rolb
inc
mov
add
les
jns
jecxz
mov
into
ret
lock
mov
or
out
mov
mov
add
jg
inc
pop
repz
mov
scas
int3
jl
sub
xchg
push
rorl
fldcw
push
dec
adc
subb
mov
pop
mov
xor
addr16
out
push
fwait
xchg
test
in
xchg
jne
mov
loope
fs
jg
mov
mov
ds
daa
repz
pop
sub
cmp
pop
lret
outsl
call
dec
out
dec
mov
nop
adc
sysret
mov
std
sbb
dec
pop
xchg
cltd
mov
imul
out
cmp
sub
sub
jmp
scas
mov
mov
jg
adc
cld
in
incl
pop
mov
cmpsl
out
sbb
dec
sub
leave
ret
fdivs
fidivrl
mov
movsb
mov
mov
out
dec
sbb
cmp
push
leave
or
test
push
mov
ss
repnz
cmp
loope
add
fndisi(8087
xor
ja
inc
push
or
test
in
out
in
test
mov
pop
imul
and
test
jp
ficomps
je
aad
orb
xchg
in
lods
mov
mov
mov
mov
dec
mov
mov
jns
or
mov
fiadds
mov
stos
inc
sarl
pop
in
pop
lret
mov
mov
xor
pop
and
js
dec
lahf
pop
lahf
leave
int
ljmp
js
inc
sbb
xchg
sub
icebp
cmp
inc
mov
mov
sbb
xor
shlb
sub
les
mov
dec
shlb
xor
sub
xor
rclb
repz
loope
adc
loope
inc
cmp
mov
sbb
jne
filds
sub
fdivs
xchg
jmp
inc
sub
push
mov
adc
insl
icebp
pop
out
mov
aas
mov
jne
fsts
mov
and
mov
sub
mov
and
mov
popw
in
add
in
or
mov
cmpsb
je
and
aad
aas
push
lods
cmp
and
ljmp
lahf
mov
addb
cmp
out
andl
mov
subl
jns
dec
mov
int
jb
cmp
adc
mov
fs
xchg
jecxz
out
sbb
adc
out
jb
cmp
mov
jmp
rclb
lcall
mov
pop
pushf
adc
lea
daa
addl
xor
mov
inc
jae
xor
fdivs
lea
inc
std
push
inc
add
imul
xchg
sarb
arpl
pop
in
mov
jmp
sbb
lock
and
movsl
js
stc
push
sarb
in
testb
es
icebp
ds
inc
sbb
mov
arpl
out
inc
cld
inc
shl
sub
test
jae
jae
sti
push
jnp
jno
ds
cmp
mov
xor
sbb
into
arpl
xchg
push
push
test
pop
ret
div
or
packsswb
notb
push
in
push
stos
fdivl
xor
aam
lock
sbb
sbb
ret
or
cwtl
stc
aam
roll
lds
jl
ret
call
pop
daa
aas
xchg
js
movsb
pop
in
xlat
jnp
mov
pop
mov
cmp
inc
push
sbb
mov
ret
aad
push
dec
in
jb
xor
dec
cld
loopne
xchg
and
xchg
xor
fnsave
out
push
les
jmp
ja
enter
into
ja
xchg
idivl
fists
ret
dec
adc
and
lahf
test
aas
cmpsb
cmc
stc
int
inc
lret
clc
cs
dec
call
adc
or
dec
hlt
adc
and
jnp
fs
sbb
sbb
cmp
aam
jge
lock
shr
inc
mov
and
ljmp
inc
fwait
mov
jb
dec
cs
cltd
dec
jmp
cmpb
bt
mov
push
and
sub
xchg
mov
imul
adc
pop
js
pop
int
dec
sbb
mov
scas
and
mov
jns
cmp
lret
lret
adc
adc
add
jae
jne
int
and
xor
iret
movsb
scas
lods
mov
lea
sub
push
gs
hlt
out
dec
fidivrs
iret
fldt
cmp
mov
je
xor
bound
hlt
ds
ss
cltd
lret
aaa
ficoml
lods
in
sub
pop
hlt
push
push
pop
push
cltd
or
pushf
inc
into
mov
and
arpl
jae
mov
pop
push
negl
mov
fwait
pop
insb
aad
ss
loop
mov
add
imul
fcoml
data16
jecxz
es
cmp
leave
aad
daa
sub
adc
rclb
loope
xchg
pop
mov
cmp
roll
mov
sbb
movsl
aaa
sti
mov
out
xor
dec
leave
and
aas
ds
nop
imul
lea
xchg
xor
fdivs
and
and
sarl
aam
xchg
push
and
test
clc
cli
out
pop
movsb
inc
add
test
rcrb
or
lahf
test
mov
inc
mov
mov
mov
pop
mov
xor
jo
in
xchg
lret
jno
and
and
jge
das
insb
repnz
sbb
or
leave
mov
mov
in
stos
push
push
mov
inc
sub
add
cwtl
flds
fidivrs
loopne
cmc
sub
scas
stos
insb
dec
xchg
lret
xchg
mov
dec
xor
xor
xchg
ja
repnz
pop
push
jmp
pusha
ja
xchg
in
mov
push
mov
imul
ret
lret
or
out
cld
cmp
imul
lgs
xor
stc
mov
xor
arpl
test
sub
sub
cwtl
pop
mov
adc
mov
mov
rol
push
add
outsb
add
jo
stos
inc
mov
aad
cltd
cmpsb
enter
outsl
mov
ret
push
adc
pop
mov
add
inc
sub
pop
cmc
imul
push
push
adc
pusha
xchg
ror
mov
jecxz
cwtl
outsl
mov
outsb
dec
adc
rorb
sbb
fisubs
imul
push
sbb
test
iret
rcl
test
cld
push
ret
cltd
sbb
movsb
and
iret
xor
pop
pop
xchg
fstp
sub
mov
or
adc
iret
shll
and
cmc
mov
jae
sahf
sbb
pop
int
jae
pop
test
mov
nop
or
fstps
mov
mov
gs
hlt
xchg
out
push
loop
mov
xor
lea
bound
pop
lcall
sub
mov
xor
mov
inc
icebp
cmp
and
inc
cli
in
insl
inc
psrlw
mov
lea
add
pop
ret
mov
jbe
dec
loope
sbb
or
cmp
or
out
sarl
rolb
push
mov
pop
leave
pop
lahf
jl
xchg
rol
fmul
scas
mov
hlt
inc
dec
sbb
hlt
imul
xchg
pop
xchg
aad
jbe
scas
and
dec
mov
jg
lock
and
js
int3
mov
jns
test
dec
cmc
xchg
push
repz
pop
push
xchg
hlt
pop
inc
and
sbb
push
mov
dec
sbb
lock
sbb
cmp
aad
stos
rcll
add
mov
test
cmpsb
pop
jecxz
aad
cmp
ja
dec
jmp
fcmovnbe
push
xchg
mov
aam
mov
sbb
cmp
and
sub
sub
loope
jmp
fisubrs
insl
enter
xor
movsb
sarb
arpl
mov
adc
stos
adc
xlat
xchg
or
loop
out
jns
fsts
xchg
mov
mov
lcall
pop
jl
cld
lea
in
mov
mov
mov
mov
mov
or
mov
shll
shrb
or
aaa
sub
or
das
mov
mov
push
dec
mov
xorb
sub
mov
inc
bound
sub
xor
shl
xchg
ret
adc
adc
dec
inc
xchg
cs
pop
mov
stos
int3
faddp
xchg
cmp
insb
pop
fadd
adcb
mov
mov
adc
nop
in
movsb
cld
cmp
scas
fldln2
fistpl
inc
push
and
or
es
cmc
jge
pop
cmc
mov
dec
jecxz
mov
xchg
ds
movsl
sahf
data16
and
arpl
sahf
jnp
add
cs
add
jg
ja
int
daa
and
ret
inc
lahf
cmpsl
adc
cmpsb
add
or
mov
aam
mov
aas
xchg
fldpi
aas
xor
out
adc
pop
out
and
adc
and
out
jae
out
push
out
dec
jne
pop
xchg
or
clc
sahf
pop
shr
les
lcall
les
push
mov
pop
xchg
dec
or
int3
enter
mov
xor
push
xor
mov
xor
enter
add
push
and
jo
cmp
pop
test
stos
sub
adc
inc
lret
movsl
and
arpl
and
mov
adc
arpl
les
inc
cmp
push
inc
cmp
mov
jl
sbb
sub
inc
scas
mov
mov
or
mov
pusha
pop
imulb
data16
xor
in
sub
cwtl
jb
push
stc
test
inc
sbb
jle
shlb
and
push
cld
sahf
popa
cli
int3
and
test
pop
pop
cwtl
lret
jge
jecxz
inc
in
push
sbb
and
insb
pop
jl
inc
mov
popa
or
mov
iret
pop
jecxz
add
jg
dec
xchg
add
sti
push
or
and
dec
cmc
dec
add
stos
faddp
les
sbb
mov
es
and
aad
xchg
adc
lahf
sbb
inc
les
jg
mov
push
and
ljmp
jns
xchg
jge
ja
add
xorl
xor
cmpsl
insb
rolb
scas
into
mov
mov
cmc
rcl
cmp
and
int
or
xor
stc
jp
adc
push
adc
gs
dec
int
pop
adc
outsb
lods
xchg
scas
pop
inc
loop
pop
pop
movntps
lods
lods
jbe
jnp
into
cmpsl
jge
pop
mov
add
in
push
sarb
ss
cmpsb
jecxz
fmull
rol
mov
cld
mov
sbb
mov
inc
mov
es
cmp
insb
xchg
iret
push
sar
scas
imul
pop
aas
jl
mov
sub
test
and
mov
mov
insb
dec
inc
xor
or
stc
sbb
ljmp
insb
and
cmp
jp
lret
mov
push
push
mov
xor
pop
dec
sti
lret
push
fcom
adc
jo
test
enter
xor
outsb
pop
out
sub
aas
sub
shr
sub
xchg
and
xchg
lahf
negb
inc
xor
mov
cmpsl
mov
inc
rorb
out
imul
mov
mov
jmp
or
xlat
jg
fsubs
call
fimuls
xchg
ss
add
nop
test
sub
in
mov
mov
and
in
gs
cmp
pop
ljmp
jae
scas
lcall
dec
mov
out
jg
sub
cmp
jns
lret
and
cmp
fwait
into
mov
or
mov
cwtl
jo
mov
xlat
jle
adc
push
or
add
inc
mov
incl
popa
sarb
cmp
cmpsl
push
fst
fs
push
jg
cmc
sub
sub
mov
mov
incl
roll
sbb
arpl
in
test
fnsave
into
add
xchg
xchg
fwait
jo
lahf
lahf
test
sub
sbb
gs
mov
jo
popf
jb
loopne
add
mov
jmp
neg
or
jecxz
cmp
into
insb
cltd
mov
popf
push
pop
mov
es
pusha
pop
sub
cmpsb
cmp
call
or
cmp
shrb
mov
out
jp
insb
filds
repnz
dec
jnp
bound
add
xor
loope
jb
cld
out
shlb
jnp
scas
loop
fimull
fsubrs
mov
pop
sahf
sti
xchg
lds
ret
xchg
ficoml
and
sub
test
aad
out
inc
or
jg
bound
push
mov
xor
push
rcll
pushf
dec
and
popa
lods
cltd
out
call
add
test
xorb
daa
mov
addb
jns
les
stc
test
test
add
jbe
stos
mov
push
addl
add
lret
lods
out
push
sub
add
pop
dec
mov
adc
shll
adc
movsb
jns
dec
jae
mov
cmp
jg
push
pop
or
scas
imul
loope
pop
in
inc
inc
jbe
mov
inc
jg
test
push
sub
dec
add
je
jns
pop
mov
fs
pop
in
push
xchg
std
jnp
movsl
ret
enter
in
pop
pusha
xor
push
cmp
mov
xchg
xor
xchg
lret
mov
xlat
imul
adc
or
push
or
int3
push
out
mov
add
jl
mov
and
imul
test
xchg
test
popf
int
enter
nop
sbb
pop
arpl
mov
stos
push
pop
sub
cmp
inc
stos
mov
xor
pop
lea
xchg
ficompl
push
lds
add
sub
fidivrs
lahf
xor
xchg
repz
adc
adc
mov
cld
push
in
in
jecxz
sub
inc
insb
pop
lds
imul
pop
mov
xor
in
fimull
rorl
xor
jl
mov
jge
dec
popf
and
cmpsl
cld
or
and
pushf
push
jmp
mov
out
lock
sysexit
cmpsb
xchg
ror
mov
out
mov
mov
jecxz
loope
lods
pop
idivl
cmpsb
outsb
lds
je
lods
add
test
pop
pop
adc
jae
pop
cmc
adc
push
incl
jnp
fcmovnu
add
rcll
pop
es
add
pop
inc
mov
push
int
push
xchg
mov
in
pop
adc
shll
lock
ret
or
mov
out
adc
scas
push
jne
xchg
inc
dec
bound
sbb
cmpsl
push
mov
sub
pop
adc
and
cmp
fldenv
jne
movsb
shrl
fnstsw
data16
push
in
dec
insb
mov
mov
add
pop
out
das
roll
daa
and
aad
xor
push
lret
mov
stos
cmp
add
push
adc
jmp
fisttps
jle
and
sbb
stc
sbb
push
int
out
icebp
in
xchg
mov
std
mov
mov
cli
ret
sbb
arpl
lcall
xchg
lea
cli
jae
addb
push
mov
lret
call
mov
call
mov
lcall
aam
cs
push
mov
sub
mov
and
inc
aad
aas
scas
add
and
inc
cmpsl
orb
add
test
jecxz
or
jle
ficoml
mov
mov
loopne
js
inc
ss
inc
cwtl
push
call
add
adc
jecxz
repz
sbb
push
sbbl
arpl
push
call
add
adc
jecxz
repz
sbb
push
sbbl
arpl
push
call
add
adc
jecxz
repz
sbb
push
sbbl
arpl
push
call
add
adc
jecxz
pop
mov
sub
dec
mov
cmpsl
insb
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
xchg
cli
sti
ljmp
rol
stos
or
dec
jp
push
pop
sbb
test
cmp
sub
fcmovne
lret
cli
sti
ljmp
mov
dec
dec
push
jnp
imul
outsb
or
cmp
sub
ret
jl
sub
mov
push
mov
pop
es
cmp
dec
dec
pop
inc
fwait
xchg
ljmp
push
iret
dec
mov
orl
shl
cmpb
push
fistpl
mov
xchg
inc
cs
fisubs
xchg
lahf
jnp
push
mov
inc
fisubl
adc
sti
mov
sbb
dec
test
xchg
xchg
in
xchg
lahf
test
mov
mov
mov
xchg
out
daa
or
pop
pop
aaa
xor
add
lahf
gs
or
mov
ret
lcall
shr
sbb
sbb
pop
scas
pop
and
mov
pop
adc
aas
mov
mov
jnp
push
lahf
xor
jmp
cmp
sub
cli
loop
jmp
fwait
into
mov
pop
fcoms
bound
add
cmp
dec
sub
sahf
test
test
xor
dec
sub
push
jae
or
insl
inc
fidivl
and
iret
fstps
pop
push
push
imul
imul
stc
lret
mov
mov
pop
pop
dec
dec
jp
push
sbb
or
cmp
sub
fcmovu
lret
sti
ljmp
mov
dec
dec
jp
push
sbb
or
cmp
sub
fcmovu
push
fcoms
mov
adc
adc
sbb
sti
mov
arpl
enter
cmp
into
lds
lcall
mov
pop
mov
push
dec
add
les
daa
imul
or
out
and
pop
daa
stos
or
mov
sbb
shl
mov
push
xchg
jmp
cwtl
js
imul
jg
ljmp
sub
jecxz
pop
test
aam
mov
xchg
cmp
dec
jle
add
cmpsl
mov
jnp
dec
cmpsl
fisttpll
xor
pop
mov
aas
movsl
xchg
add
xor
repnz
mov
adcb
sti
and
jb
inc
pop
and
rcll
hlt
xchg
push
cmp
out
xchg
jp
mov
push
sbb
sub
pop
lret
jmp
mov
and
adc
push
lds
ljmp
pop
insb
xchg
bound
imul
pop
fstps
xor
mov
inc
push
xor
lock
inc
mov
test
jns
scas
xor
mov
cwtl
add
hlt
out
fbld
mov
mov
adc
clc
inc
sbbb
xchg
insl
fmull
and
sub
popf
mov
out
mov
stos
sarl
jnp
loopne
and
or
ss
mov
lret
iret
loopne
movsb
ret
fs
and
scas
xchg
jno
push
clc
and
in
cwtl
adc
pop
push
js
insl
or
scas
xor
mov
xlat
clc
imul
repnz
mov
add
pop
add
fldcw
mov
test
sub
inc
cwtl
mov
sub
ror
cli
pop
pop
mov
push
xchg
jne
int
repnz
push
loop
scas
lahf
sahf
sbb
js
clc
sub
rcrb
push
ds
adc
or
les
mov
sub
add
inc
fisubs
pop
or
xchg
sub
inc
dec
add
push
arpl
xchg
ror
xchg
or
push
jmp
add
test
dec
das
mov
cltd
xchg
sbb
sub
add
jl
repnz
and
in
pop
scas
hlt
out
incl
cmp
gs
mov
jg
cwtl
or
aaa
add
mov
cmp
add
lods
fimull
fidivrl
lret
adc
xor
pushf
sbb
add
jo
mov
cmpsb
shlb
cwtl
cltd
scas
or
push
or
stos
or
push
pop
sbb
jmp
movsl
mov
test
jecxz
sub
int
xchg
cmp
pop
out
fcmovbe
pop
inc
sahf
sbb
movsb
daa
nop
dec
dec
hlt
sub
test
pop
inc
outsb
mov
fdivs
dec
inc
and
adc
fs
insl
fwait
add
pop
das
sbb
test
loope
add
or
repz
mov
mov
cmc
mov
popa
enter
adc
std
iret
xor
push
fldenv
add
jecxz
adc
inc
mov
dec
int3
sub
into
ret
lahf
ja
mov
and
iret
xor
xchg
shlb
enter
jno
xor
fistps
daa
test
je
adc
arpl
pushf
add
pop
ret
add
lahf
ret
sbb
nop
ja
cmpsb
lcall
jbe
cmc
outsl
into
xchg
mov
adc
frstor
mov
cmpsb
gs
mov
fistpl
movsl
stos
and
xor
jg
sub
add
loope
dec
sti
stc
ds
dec
inc
xchg
jmp
xor
sbb
pop
dec
and
repnz
sbb
pop
stos
pop
dec
and
enter
cmp
popf
or
and
xor
aam
inc
inc
and
iret
lahf
xor
lods
pushf
xchg
and
add
enter
aas
popf
mov
mov
xor
inc
push
ds
test
fstpt
fmull
out
mov
add
rol
popa
movsb
mov
test
lods
cmpsb
test
cmpsb
pushf
adc
test
subb
jbe
insl
mov
pop
xchg
cmpb
shr
adc
clc
test
or
dec
adc
in
and
and
hlt
sbb
mov
sbb
shll
jmp
fisubrl
sbb
aaa
cmp
cmp
pop
fs
pop
scas
sub
out
mov
les
push
loope
mov
adc
mov
xchg
push
fcmovnbe
pusha
into
sub
or
ret
push
inc
fs
testl
jnp
shrb
xchg
jbe
push
xchg
loopne
cmp
sbbb
push
outsb
ret
lock
and
jle
stc
adc
cmp
fld
pop
dec
ror
repz
adc
jle
xor
and
loope
xchg
aad
aaa
and
mov
push
cmp
fists
jg
pop
insb
or
pop
mov
jns
out
dec
sbb
push
negl
sub
roll
xor
dec
pop
push
loop
mov
inc
rol
pop
fstpt
mov
popf
aam
mov
dec
imul
pop
es
xchg
add
fcmovnu
or
rclb
add
xchg
pop
leave
inc
je
data16
ljmp
add
stos
and
add
in
subl
add
and
cli
jns
xchg
bound
inc
dec
addr16
shl
push
test
jle
jno
in
inc
adc
lahf
pop
dec
push
push
int3
test
call
mov
movsl
adc
sar
jo
mov
nop
pushf
ret
aaa
lcall
into
ret
push
aad
iret
out
pop
addl
mov
and
ljmp
dec
popf
sbb
cli
jb
sbb
adc
mov
les
push
xchg
xor
out
jmp
addl
enter
adc
out
je
or
push
cmc
xchg
movsb
dec
cmp
out
xchg
lret
scas
and
cmpsl
dec
daa
mov
sbb
or
xor
push
xchg
test
pop
dec
cmc
sub
mov
mov
pop
int
shrb
mov
pop
in
cltd
in
popa
adc
scas
imul
and
xor
and
and
xchg
outsl
and
scas
push
fmull
and
mov
jp
out
dec
inc
sub
dec
roll
aam
out
add
inc
adc
in
jle
bound
or
aad
adc
mov
inc
js
pop
jl
out
pop
outsb
rcrl
std
enter
test
dec
add
dec
test
fdivl
mov
sub
inc
int
test
aas
mov
addr16
fcoml
fdivrl
incb
inc
and
rolb
mov
lods
in
xor
lods
aad
adc
jnp
repz
cmp
push
jg
icebp
dec
xchg
int3
mov
pop
orl
sahf
data16
xor
test
test
mov
dec
pop
int3
mov
data16
roll
pushf
ljmp
ret
lret
insb
shlb
sbb
inc
adc
mov
scas
fisubl
lea
les
idivl
inc
in
arpl
and
es
dec
scas
sub
sarb
jp
js,pn
inc
dec
push
push
ds
fstpl
push
int
cs
mov
test
sbb
outsl
int3
add
sub
inc
sar
lock
jg
cmp
in
pop
sbb
cmpsl
in
jl
adc
pop
mov
jecxz
loope
dec
stos
into
cwtl
cmc
mov
call
test
push
pop
in
aad
jno
pushf
test
mov
pop
bound
mov
pop
js
or
insb
aas
pop
outsb
int3
mov
pusha
inc
popa
lahf
push
fidivrl
inc
stos
inc
inc
jmp
jae
jns
fstpt
mov
and
sub
dec
push
ficompl
and
xchg
arpl
adc
jae
pop
sub
pop
shrl
lods
pop
sub
xor
int3
adc
das
inc
sti
cli
ret
int3
and
mov
jl
adc
out
mov
add
test
mov
jmp
in
jl
cmp
imul
sub
pop
pop
scas
inc
out
cmp
insb
and
sbb
pop
lret
mov
or
push
out
rcrb
pop
sbb
jns
outsb
cwtl
mov
cltd
inc
jmp
mov
sub
mov
paddusb
cmp
push
inc
mov
adc
shlb
xor
inc
adc
pushl
lea
add
jb
lret
or
cmp
sbb
lahf
jecxz
jmp
add
and
jmp
mov
mov
lock
xor
mov
fadd
inc
xor
or
rorb
lea
addr16
test
repz
cld
jnp
icebp
pop
ret
in
stos
and
jno
not
mov
inc
push
add
and
pop
hlt
mov
mov
fldl
adc
andb
and
mov
jb
lds
add
outsb
bound
sub
insb
fnsetpm(287
xor
pop
inc
loope
sub
xor
fistps
cld
sbb
fdivl
pop
jnp
addb
cs
outsl
aaa
loop
cltd
int
insb
or
jg
jmp
jo
lea
xor
mov
loope
rolb
pop
mov
call
adc
popl
clc
dec
sbb
lret
icebp
pusha
jmp
ljmp
push
xor
out
test
mov
mov
inc
std
xor
mov
lret
or
mov
stos
enter
fs
shlb
cmp
push
mov
ja
xor
or
xor
testl
test
mov
mov
je
outsb
push
inc
sub
mov
in
nop
in
jecxz
pushf
pavgb
dec
jmp
mov
in
test
lret
shll
xor
js
jl
dec
cmp
cs
in
mov
lret
sub
inc
mov
cmc
outsb
mov
lahf
enter
jno
sar
lea
inc
pop
inc
loope
test
mov
fnsaves
dec
and
push
cmp
pop
cmpsb
cli
clc
push
ret
in
int3
cmp
xchg
popl
adc
sbbl
jne
xchg
sub
ss
sbb
outsl
inc
rcl
cmp
cmc
movsl
jnp
add
mov
jecxz
push
shrb
icebp
or
les
lea
sub
lods
or
cmp
imul
cmp
adc
pmaddwd
mov
jnp,pn
push
mul
ljmp
or
push
loop
inc
sub
mov
sub
outsl
xchg
pop
sub
popf
test
inc
adc
mov
pushf
cwtl
jnp
test
adcb
mov
mov
add
cmp
popa
and
mov
enter
xchg
arpl
sub
repz
push
xlat
adc
das
push
clc
bound
sub
mov
mov
xor
inc
shll
pop
mov
cld
or
movsb
inc
jb
ret
loope
es
mov
test
adc
ficoml
aas
cmp
jno
test
and
pop
xchg
insl
lods
mov
in
fs
mov
or
jle
fwait
jmp
or
sub
jg
push
fcomi
stos
mov
outsl
jl
xor
fcomi
jle
jle
hlt
dec
test
mov
sbb
pusha
sbb
cmp
movsl
repnz
test
push
xor
std
mov
orl
push
mov
pushf
cmpsb
mov
push
xchg
sbbl
xchg
arpl
pop
rclb
mov
xchg
fldcw
xor
mov
sti
inc
adcb
ds
mov
adc
adc
shll
jnp
addr16
rorl
inc
xor
ja
xchg
fucomi
or
sahf
mov
gs
jae
fadds
sbb
mull
cmp
jnp
sub
sti
icebp
and
lods
mov
or
ja
daa
push
aad
pop
or
inc
adc
jle,pn
in
or
or
and
popa
arpl
fldcw
arpl
mov
fidivl
add
loope
xchg
xor
lock
mov
cmp
pop
ret
push
test
addr16
pop
fdivrs
jno
lret
mov
sbb
xorb
je
sbb
cltd
hlt
sbb
push
aam
mov
sti
cmp
jmp
lock
ret
pop
xor
insl
in
and
jnp
sarb
fimuls
jle
dec
add
in
sbb
std
lds
data16
ret
pop
dec
in
imul
rcrl
and
arpl
mov
loope
sub
and
aad
inc
lret
mov
cmp
js
sbb
ret
insl
inc
cltd
cmp
ja
xchg
popf
movsl
pop
push
or
in
mov
fbld
lret
and
cmpsb
cmp
mov
loop
jmp
cs
jae
mov
test
pop
xor
xchg
or
shr
inc
fcos
aaa
push
push
xorl
jne
nop
pmaxub
xor
add
xor
clc
das
aas
xchg
pop
pop
inc
mov
ljmp
adc
push
dec
dec
sub
andb
and
lods
cwtl
ret
adc
xchg
pop
dec
inc
mov
inc
xor
cmc
add
xorb
sbbb
stos
flds
pop
fs
cs
pop
imul
adc
fists
xchg
pushf
adc
xchg
insb
out
push
push
fcompl
movsl
out
push
sub
mov
je
nop
push
in
push
cmp
loope
fyl2x
scas
stos
pop
enter
fbld
xchg
push
add
adc
inc
push
or
sub
mov
icebp
xchg
repnz
aad
into
sbb
lock
cmp
sahf
add
xor
out
sbb
adc
xor
cli
jecxz
daa
push
jo
push
xor
push
test
or
pop
scas
push
adc
gs
sub
jge
adc
iret
imul
dec
out
repz
or
sbb
cmp
shll
mov
or
xor
shl
je
xchg
jle
insl
into
cld
sbb
std
xor
or
adc
adc
stos
sub
jbe
leave
testl
or
mov
pop
xor
add
or
fbstp
jmp
and
ds
fsts
lcall
inc
negb
jns
loopne
in
pushf
mov
jecxz
fistl
mov
push
or
pop
inc
ficomps
aaa
xchg
insl
or
and
pusha
mov
cmp
fistl
je
or
xor
std
jae
rcll
in
cltd
pop
mov
sub
jne
dec
test
dec
push
repnz
daa
imul
je
mov
xor
int3
out
hlt
push
nop
or
mov
mov
loopne
xor
bound
push
jp
negl
sub
loop
pop
mov
movsl
hlt
ror
lds
into
leave
mov
lods
or
adc
xchg
cld
xchg
testb
mov
fistpl
push
inc
mov
popa
insl
aas
aas
push
enter
and
adc
fistpl
scas
jbe
lea
dec
ss
in
add
lock
xor
hlt
push
in
lcall
mov
out
inc
cmp
clc
mov
fs
jle
cld
or
cmpb
inc
imul
pop
out
into
lcall
or
jge
jmp
pop
ret
mov
or
aad
cld
les
xchg
test
inc
imul
fldl
nop
mov
rcr
mov
loope
mov
lods
cltd
pop
lret
movsl
xor
nop
shrb
loopne
sbb
repnz
mov
push
and
and
lds
cmp
test
rolb
scas
add
lret
mov
mov
lock
lret
xor
mov
insl
mov
inc
and
adc
cmpsl
mov
xchg
and
clc
mov
jno
jae
aam
rorl
jno
sbb
mov
into
cld
pop
xor
xor
lods
adc
pop
mov
mov
mov
cmpsl
mov
pop
dec
mov
add
mov
cwtl
out
popa
test
push
movsl
fildl
mov
gs
push
in
adc
out
sub
mov
sahf
std
pop
dec
add
inc
jp
add
mov
fdivrs
jecxz
sub
lods
shll
sbb
cli
inc
fcomip
aam
mov
sub
mov
pop
push
mov
cli
insb
aad
sbb
adc
loopne
inc
adc
xlat
test
js
js
lods
fstpl
lcall
ret
rcrb
fisttps
mov
lock
outsl
adc
shlb
jae
mov
mov
push
push
or
xchg
out
insb
mulb
std
or
out
cmp
fldl
xor
fisubl
cwtl
lahf
icebp
out
andl
lahf
adc
arpl
inc
push
sbb
sarb
js
or
das
adc
scas
cmp
xor
push
push
mov
fimuls
push
mov
jp
ss
pop
lahf
sbb
movsb
xchg
es
and
hlt
cmp
jbe
enter
dec
lock
push
int
ss
pushf
arpl
stos
ja
push
jecxz
dec
pop
push
or
sar
mov
cmpsb
aad
lods
add
jle
cs
arpl
fildl
xchg
ret
fdivs
xchg
stos
xor
dec
int3
add
idivb
xor
insl
loopne
out
icebp
jge
cmc
outsb
imulb
and
mov
icebp
inc
sarl
lods
and
push
jns
inc
sbb
jl
inc
and
pop
js
int
cwtl
push
test
or
test
jnp
popa
push
push
adc
outsl
mov
xor
push
cmp
pop
cmp
sbb
pop
cmp
mov
add
jge
lds
mov
arpl
enter
notb
mov
loop
testb
cmpsb
mov
loope
movsb
add
dec
mov
push
xchg
out
cwtl
dec
out
movsb
shrl
jb
loop
mov
pop
mov
mov
dec
xchg
cmp
mov
push
bnd
in
sub
pop
push
mov
or
ja
clc
cmc
stos
inc
mov
cs
mov
movb
and
pop
in
addl
imul
rcrb
hlt
ret
cmpsl
jo
movsl
fcmovnb
cmp
aad
or
cmp
xchg
arpl
imul
push
mov
das
aad
clc
lea
addl
popa
shr
or
add
jl
dec
pop
int3
ror
ljmp
sbb
jns
mov
fs
adc
or
enter
int3
mov
adc
mov
mov
fmulp
adc
mov
xchg
pop
stos
scas
jg
mov
jmp
test
ud2
les
mov
xchg
jno
repnz
gs
fstps
out
jecxz
gs
stc
sub
push
stos
xchg
or
fwait
inc
sub
fwait
ds
inc
int3
shl
in
sbb
nop
mov
xchg
imul
dec
adc
idivl
sti
cmp
into
sbb
dec
sbb
enter
inc
fwait
lds
adc
mov
mov
je
icebp
dec
xchg
or
jecxz
lahf
push
push
sahf
mov
push
lret
call
jne
ret
shlb
lods
cmc
shrl
push
addl
enter
jle
adc
or
sub
sbb
mov
sub
jle
aas
pop
out
mov
inc
mov
and
jg
iret
push
ss
push
nop
cmpb
push
adc
nop
mov
shlb
mov
adcl
inc
push
jo
divl
cli
lods
in
xchg
jmp
lods
div
dec
or
lods
jg
loop
lahf
fs
incl
cmpl
sbb
test
pop
cmp
decb
ret
dec
cld
cmp
int
cmp
into
mov
adc
mov
stos
xorb
dec
mov
cmpsl
push
push
cmpsb
pop
and
enter
divl
jl
testb
aaa
inc
cld
xor
xchg
sub
or
jno
lcall
sub
scas
mov
sub
movsb
jge
mov
into
sahf
insl
sub
lods
mov
aad
pop
mov
add
xchg
mov
mov
add
dec
inc
dec
xchg
sti
cmpsb
fstl
xchg
jle
adc
push
mov
pop
adc
pop
and
std
xor
sti
lcall
ffreep
push
and
in
daa
mov
jb
stos
inc
jnp
mov
jne
pop
mov
push
lods
adc
frstor
fwait
inc
mov
ds
clc
fwait
daa
fmull
push
sub
call
shr
faddl
dec
pop
adc
adc
mov
or
xlat
lret
sar
jmp
fwait
mov
pop
pop
dec
dec
jp
push
sbb
or
cmp
sub
fcmovu
lret
sti
ljmp
mov
dec
dec
jp
push
sbb
or
cmp
sub
fcmovu
leave
lret
ljmp
mov
pop
dec
dec
jae
outsb
outsl
sbb
adc
ds
sbb
ret
iret
jb
ret
fwait
lcall
pop
mov
sarb
sbb
xchg
xorb
push
repz
in
sarb
std
mov
scas
mov
push
insb
inc
jl
or
push
adc
cmp
int3
loopne
mov
mov
enter
jl
insb
inc
jl
arpl
sbb
insb
add
pop
adc
inc
inc
sbb
scas
mov
mov
adc
inc
aas
cmp
and
jne
pop
pop
cmp
int3
lods
mov
cltd
test
pop
dec
mov
fs
dec
push
out
scas
int
jne
and
sbb
sbb
push
mov
inc
sahf
lea
pusha
sbb
imul
iret
or
pushl
movsl
not
sarb
loope
cwtl
or
flds
inc
icebp
and
sub
or
int3
xor
mov
inc
jno
pusha
or
pop
mov
jecxz
les
outsl
psubusw
xor
mov
sub
sbb
dec
push
stos
add
sbb
jge
sar
ds
dec
lret
dec
pop
outsl
in
mov
inc
dec
fs
xchg
mov
mov
sub
mov
shrb
notb
pushf
nop
jbe
cmp
lret
es
xor
and
in
sub
push
cltd
sahf
xchg
fsubl
into
repz
sbb
or
sbb
arpl
jns
gs
mov
lea
scas
gs
pop
sub
or
cmp
dec
pop
dec
push
jns
inc
push
pushf
lcall
jecxz
mov
mov
push
insb
inc
jl
or
sbb
sub
cmp
int3
loopne
shr
sar
mov
mov
push
insb
inc
jl
or
sbb
sub
cmp
int3
inc
or
dec
add
jg
dec
mov
sbb
lods
outsb
les
mov
push
dec
cmp
dec
cwtl
sub
stc
aad
aas
xchg
mov
shl
jo
rcr
fs
adc
aaa
pop
cmc
push
fcmovbe
cmp
cmp
sbb
enter
mov
inc
fcmovb
mov
in
or
in
dec
movsl
push
stc
inc
imulb
xor
and
adc
dec
xor
pop
push
mov
push
pop
dec
ja
add
cmpsb
dec
add
jle
cli
add
std
add
in
popl
mov
mov
into
pop
outsb
push
dec
jbe
jbe
pop
in
outsb
cmc
jmp
addl
into
lcall
icebp
lds
mov
or
outsb
inc
dec
pop
pop
shlb
test
les
pop
andb
push
mov
pop
add
push
das
xchg
iret
xor
ss
jecxz
mov
out
pop
mov
daa
sbb
lret
fs
add
push
fstpt
add
mov
adc
rcrb
ja
cwtl
imul
shrl
scas
mov
das
adc
push
cmpsb
push
add
jl
add
adc
mov
xchg
lret
pop
imul
jmp
inc
std
scas
jns
movl
rclb
test
test
clc
loope
int3
mov
push
mov
js
cmp
or
and
rcrb
inc
decb
movsl
cmc
repnz
arpl
bnd
test
lret
stos
loopne
jo
fadd
mov
sbb
clc
or
fcmove
fdivrl
lods
rolb
mov
add
jle
xchg
dec
adc
mov
adcb
adc
leave
in
cmc
js
out
jo
push
mov
jae
ret
xor
push
dec
pop
xor
cmc
jb
xchg
mov
fsubrl
push
pop
push
push
mov
scas
or
push
sub
in
add
sub
fdivrl
adc
insl
aas
jnp
sbb
nop
pop
bound
push
pop
sub
imull
sbb
stos
test
test
aam
into
xor
xlat
cld
ret
xchg
sbb
cmp
jne
jns
out
and
cmp
sub
in
popf
fdivs
jb
adc
dec
iret
in
mov
sbb
addr16
popf
dec
push
outsb
lcall
mov
js
je
xor
daa
sbb
aam
jae
xchg
mov
adc
ret
movsl
adc
pop
jle
inc
jmp
push
jl
xchg
push
mov
enter
jnp
xchg
xlat
sub
lret
inc
jno
cwtl
cmp
ret
mov
rcll
daa
fidivs
addr16
jae
movsl
pop
or
or
into
and
mov
sbb
sbb
fildll
lods
loopne
and
jl
jecxz
push
xchg
and
mov
jg
dec
push
cmpsl
mov
sti
cmp
xchg
mov
mov
jno
jb
inc
stos
mov
shll
ljmp
mov
loopne
pop
lret
movsb
push
mov
insb
jl
jo
inc
in
jae
jns
push
stc
lret
lret
fxch
fwait
stos
js
sub
je
add
mov
int
fistpl
mov
mov
xchg
lahf
pop
xchg
adc
sub
inc
into
clc
dec
push
stos
adc
ffreep
in
dec
mov
pop
aad
ljmp
cmp
addr16
add
shlb
mov
sub
stos
es
xchg
mull
popf
mov
jbe
loope
jg
call
in
pusha
jnp
add
call
cmp
mov
pusha
sub
fsubrl
cmp
add
or
shl
testl
jle
popa
inc
addr16
ror
cltd
int
mov
sbb
xchg
sbb
jb
xor
jae
push
ret
loope
sub
mov
add
loop
popa
jp
repnz
mov
into
cmp
nop
rcr
leave
or
xchg
mov
push
into
popf
lods
push
ljmp
test
gs
sub
cwtl
jl
dec
loopne
or
mov
sahf
ret
movsl
add
test
push
cltd
xor
sbbb
dec
sarl
mov
shrl
shl
mov
jl
loop
push
xor
jge
fcmove
clc
aad
fwait
aad
loop
sti
rolb
test
mov
test
or
loope
aaa
xor
mov
xor
mov
mov
jo
xor
jno
push
stos
pop
dec
jp
jb
ds
andb
inc
cld
cld
ret
push
mov
mov
jmp
inc
nop
xchg
and
daa
outsb
inc
inc
jne
popa
push
and
add
pop
mov
bound
jl
xor
idivl
in
inc
repz
in
pop
jbe
loope
push
sbb
lahf
and
or
stc
int
mov
test
mov
fmull
push
enter
pop
in
xor
push
dec
mov
lods
jmp
xor
xchg
adc
out
sub
test
ret
mov
daa
sbb
iret
cmp
adc
dec
test
ss
in
xchg
js
sbb
mov
lea
or
fcomps
rcr
decb
xor
sub
andb
push
pop
addr16
pop
add
push
shr
mov
jmp
cmp
ficompl
pop
aam
sti
cmp
loope
mov
add
inc
jbe
fld
shr
mov
sbb
out
add
arpl
sarb
jecxz
shll
pop
insl
fwait
pop
bound
mov
lret
cmpsl
testl
sub
push
test
ds
xor
jbe
jmp
adc
mov
in
fstpl
out
sarb
lahf
mov
out
stos
aas
push
cmp
lods
outsl
pop
ss
pop
sti
mov
rorb
lcall
insb
cmp
fs
arpl
cltd
mov
xor
mov
dec
sbb
mov
movsb
mov
cmp
cmp
mov
repnz
jmp
notl
jl
test
mov
out
mov
mov
jle
or
pop
loopne
movsb
out
fildl
test
lock
mov
cmpsb
xor
inc
jle
test
pop
jno
mov
inc
push
sub
lock
push
xchg
xor
push
push
pushf
int3
ja
jne
xchg
in
notb
test
push
aad
test
mov
out
sti
nop
pop
stos
adc
and
lcall
icebp
lret
pop
cmpsl
fcmovnu
adc
xor
int3
stc
mov
int3
repz
lret
add
adc
mov
lods
scas
data16
mov
xchg
or
cwtl
les
adc
ja
mov
cwtl
dec
push
xchg
lret
mov
pop
jb
stos
iret
pop
jne
sub
mov
fwait
and
and
jle
and
mov
and
xchg
dec
xor
xor
test
xchg
pop
add
negb
fldenv
popa
lds
push
pop
inc
fmulp
or
lret
fucomi
mov
cltd
movsb
pop
es
in
xchg
jl
inc
in
inc
or
jnp
aas
push
test
stos
xor
stos
enter
mov
and
xor
mov
sbb
sub
aam
push
xchg
sbb
scas
mov
jl
stos
cmp
js
add
pop
xchg
mov
push
xor
adc
ja
shll
inc
bswap
add
sbb
inc
sti
add
xchg
daa
xchg
and
mov
or
dec
fnstcw
lds
xchg
push
popa
add
andb
and
pusha
lahf
outsl
pop
xor
dec
das
movsb
movsl
fldcw
jae
xor
xor
push
mov
jge
push
push
loopne
in
mov
mov
jae
cld
push
adc
xor
jmp
cltd
xchg
jl
jno
dec
insl
add
data16
out
dec
shlb
jnp
data16
mov
movsl
xor
loop
cld
add
scas
hlt
pop
cmpsb
out
pushw
xor
scas
xchg
aaa
xchg
push
dec
movsl
lret
push
mov
xlat
adc
and
mov
ljmp
loope
fwait
jp
das
pop
cmpsl
xchg
jbe
mov
xor
in
cwtl
jbe
ret
stos
push
adc
lcall
inc
sub
pusha
or
fdivrs
push
mov
mov
out
mov
sub
add
movl
hlt
mov
in
lea
aaa
mov
outsb
pop
in
xor
jno
mov
mov
jle
mov
std
ljmp
iret
jg
add
pop
cwtl
outsl
repnz
cld
add
jbe
inc
sub
xor
lock
fstpl
mov
inc
outsl
gs
sbb
xchg
jae
jnp
ss
decb
cmp
insb
pusha
mov
cwtl
iret
fsubl
xor
xchg
mov
mull
decb
push
rcrl
adc
or
jno
mov
jns
imul
fimull
adc
rcrb
out
jecxz
jp
lds
mov
xor
push
cli
pop
dec
out
push
hlt
js
mov
rcll
sbb
add
popf
add
jae
sub
xchg
cmc
dec
call
and
jecxz
shrb
xor
fwait
jge
shl
insb
push
or
lods
pop
sub
adc
imul
scas
or
scas
mov
fistl
pop
fidivs
filds
pusha
insb
es
es
add
and
or
mov
sub
inc
or
test
lahf
imul
mov
mov
mov
and
int3
lods
in
scas
mov
ficomps
mov
or
int3
insl
xlat
and
adc
or
hlt
add
bnd
push
xchg
jle
js
std
xchg
mov
sbb
js
jb
cld
mov
inc
and
scas
sbb
out
mov
adc
inc
outsb
adc
mov
dec
xchg
cmp
adc
repz
je
mov
out
mov
xchg
inc
stc
and
dec
dec
test
iret
in
adc
dec
daa
pop
pop
pop
arpl
and
mov
mov
cmc
shlb
fcmovnb
lods
or
jb
into
mov
mov
fmull
mov
adc
dec
fwait
cltd
sbb
inc
xor
cmp
or
insb
pop
lods
xor
inc
adc
divb
xchg
jbe
cmp
ljmp
mov
pop
roll
repz
ljmp
call
xchg
nop
mov
fldcw
mov
cmp
adc
in
aas
aas
cmp
dec
xchg
out
js
mov
xchg
das
mov
jnp
popa
aad
add
cmp
xor
cli
cmc
jge
and
mov
daa
inc
arpl
push
xor
xor
mov
shrl
jnp
fisubs
enter
xor
mov
jo
mov
arpl
mov
popf
test
jecxz
in
mov
ss
add
and
pop
and
outsl
adc
mov
pushf
aam
aad
imul
loop
adc
test
sbb
aas
in
fbstp
int3
loope
or
lods
xchg
scas
cmpb
sbb
je
xor
in
addl
xlat
inc
insb
adc
loopne
lods
insb
pop
or
mov
scas
sbb
xchg
call
push
mov
popa
push
popa
gs
pusha
xchg
in
ss
mov
scas
xor
repz
or
imul
inc
call
inc
inc
push
cmp
mov
fcomi
pop
test
imul
aam
and
jo
test
dec
sbb
xchg
insb
gs
decl
or
lahf
pop
dec
adc
sub
movsb
sbb
jno
testb
and
clc
sbb
bound
add
or
sub
aas
or
popf
push
mov
in
mov
and
pop
js
and
push
ja
fnstcw
dec
sub
pop
xchg
aaa
loope
ret
or
mov
mov
push
xchg
call
aam
mov
insb
pusha
mov
frstor
iret
xor
int3
push
aam
dec
fstps
orl
decb
test
dec
and
mov
and
cld
push
jb
dec
cwtl
jns
pmaddwd
pop
push
or
scas
push
sub
mov
or
mov
insl
sbb
dec
lds
jg
push
sti
sahf
inc
dec
mov
push
in
mov
sahf
xchg
mov
sub
mov
push
pop
clc
lret
out
push
scas
pop
stos
cmpsb
cmp
imul
sbb
test
sahf
insb
gs
add
insl
xor
rep
mov
sbb
fcoml
std
dec
into
cli
mov
inc
add
push
mov
push
insb
clc
cmp
leave
scas
in
hlt
clc
add
in
sarl
idiv
and
nop
push
std
out
jb
xchg
rcrl
mov
sahf
pop
testl
xchg
fistpll
inc
ss
gs
int
in
add
push
popa
les
popf
pop
out
jp
ss
and
mov
outsl
mov
mov
roll
xor
lea
add
mov
push
push
in
pop
aam
fsubrs
pop
out
daa
add
loop
ret
and
pandn
in
into
int
in
jg
mov
inc
lods
or
arpl
add
inc
repnz
arpl
in
fadds
or
add
repnz
mov
ljmp
sahf
or
cld
or
ret
insl
mov
pusha
jae
test
loope
and
sbb
xchg
pop
adc
xchg
outsl
lcall
out
popa
or
insl
inc
int3
fwait
mov
mov
cmpsb
inc
jmp
cmp
jmp
sub
mov
hlt
and
inc
pop
testb
adcb
inc
mov
fcomip
int3
push
int
inc
fs
jbe
cmpb
enter
pop
sbb
int
xchg
movsl
leave
jb
cmpl
jg
pop
pop
roll
fwait
xchg
mov
mov
out
jne
xchg
mov
test
mov
cmp
rolb
in
xor
cwtl
jmp
decb
push
inc
mov
lret
scas
xchg
pop
mov
lea
jb
lahf
sbb
pusha
movsl
adc
call
xchg
xor
test
ficoml
stos
fldt
nop
sub
rorl
insl
imul
hlt
fcoml
aad
add
xchg
int
mov
lret
lods
insl
dec
lret
call
push
mov
test
pop
xchg
aaa
ret
add
pop
lods
movsl
push
mov
lock
jle
icebp
inc
shrl
sarb
jl
rorl
daa
mov
icebp
sbb
xor
jns
data16
mov
sub
test
pop
ljmp
jp
cltd
jl
decl
xchg
mov
cmp
rolb
pop
mov
add
ret
call
loope
push
stc
jg
adc
pop
xchg
jmp
ja
cld
inc
mov
icebp
jnp
mov
or
ja
in
jmp
mov
and
dec
arpl
std
into
jecxz
mov
es
pushf
leave
les
movsb
loopne
clc
inc
movsl
inc
jo
push
push
loop
imul
adc
shl
jmp
cmp
jp
jecxz
xchg
shrl
cmpsl
cltd
cmp
inc
subb
xor
sub
or
std
insl
call
pop
data16
mov
sti
mov
ljmp
lock
fmuls
jnp
mov
std
pushf
es
outsl
cmp
and
sarl
test
aad
mov
fstps
mov
and
push
mov
les
xchg
pop
or
adc
push
jae
loope
xchg
cld
pop
enter
gs
into
fcom
adc
loope
jmp
mov
cld
pop
mov
out
dec
xchg
fldl
das
adc
push
jmp
in
iret
lcall
jg
jmp
stos
sarb
sub
callw
jecxz,pn
popf
in
xor
fwait
movsb
aad
jl
lea
sub
mov
faddp
movsl
mov
xchg
fiaddl
ret
xor
add
xchg
pop
add
and
xor
sbb
sbb
rolb
mov
xor
aam
int3
ret
jge
outsl
shll
jg
xchg
add
insb
xor
lahf
jnp
mov
or
cmc
fldcw
adc
cmpsl
or
jno
fstpt
jnp
ljmp
mov
rcll
fists
dec
jo
stos
fstpl
or
and
cmpl
inc
je
int
mov
mov
sub
sub
icebp
adc
mov
cmpsb
sbb
popa
cmpsl
inc
fsubl
iret
xor
sub
andb
sbb
push
test
movsl
arpl
mov
int
xchg
mov
and
cmp
sub
js
in
je
lcall
test
dec
mov
jb
rol
jecxz
mull
dec
stc
sub
xchg
mov
mov
dec
ja
lods
out
repnz
inc
adc
ret
inc
push
mov
sbb
cli
sti
test
ss
mov
lcall
in
sub
adc
mov
mov
daa
push
mov
daa
sbb
and
mov
mov
push
xor
popa
pop
cmp
and
mov
push
fbld
lea
xchg
or
mov
shl
in
shr
mov
mov
es
mov
out
das
xchg
sbb
mov
mov
out
cmp
cmp
xchg
dec
lods
shlb
or
lds
push
jle
rcll
mov
add
jg
iret
jp
jno
dec
cmpl
or
mov
cld
ss
jmp
mov
dec
push
mov
sbb
mov
test
xchg
shr
sub
mov
dec
and
inc
jns
mov
mov
push
jno
push
out
stc
subb
mov
test
shll
mov
jno
int
sarb
mov
and
add
pop
dec
aaa
dec
jge
fwait
int3
arpl
and
mov
mov
mov
pushl
arpl
fs
fcoml
loopne
lcall
lods
enter
aam
push
ret
fsubrp
cltd
sbbl
dec
fs
ret
aad
adc
dec
sbb
test
adc
cwtl
std
mov
cmp
mulb
into
cwtl
lret
imull
mov
ret
ja
mov
xchg
aas
xor
mov
mov
or
add
subb
xchg
ja
cmp
repz
ret
loop
clc
lods
loopne
in
xlat
fiadds
adc
push
pop
pop
mov
lcall
xchg
sub
scas
leave
xorb
sahf
sub
popf
mov
mov
popf
add
or
mov
add
icebp
int3
mov
xchg
insl
or
sbb
cmpsb
cmp
repnz
cwtl
repnz
std
adc
xchg
push
cmp
in
aas
fs
out
jnp
int3
fwait
lock
cmc
scas
lahf
and
movlps
popa
icebp
or
fsub
lcall
scas
mov
loope
arpl
loope
add
sbb
call
inc
imul
jae
lcall
inc
test
add
scas
fsubs
add
jnp
int3
jnp
in
adc
out
into
push
imull
xchg
cli
push
dec
jle
xchg
cmp
or
pushf
sub
test
inc
fwait
mov
push
ljmp
pop
push
sbb
xor
ror
outsb
inc
add
push
cs
xor
push
arpl
ret
dec
add
test
adc
mov
jo
mov
adc
outsb
icebp
jae
cli
jne
stc
movsl
sahf
jl
adc
xchg
and
xor
js
mov
add
insb
cmp
xlat
mov
pusha
aam
jmp
call
ljmp
pop
xor
lret
pop
mov
pop
pushf
dec
loop
popa
mov
jae
fxch
sbb
push
and
mov
mov
push
fisubrl
hlt
add
push
cli
into
orb
cmp
and
jmp
dec
imul
test
rcl
mov
mov
xor
mov
lret
add
pop
addr16
add
xchg
rclb
test
jo
pushf
push
xor
pop
sub
pop
test
cltd
mov
or
out
cmp
dec
adc
mov
fld
sti
inc
xorps
stos
dec
out
pop
cmpsb
pop
jp
cmc
xor
aad
les
mov
dec
popf
cwtl
pop
lret
pop
xchg
and
pop
sbb
out
sbb
push
push
or
mov
sti
testl
xchg
ret
mov
adc
xchg
ret
push
inc
fcoml
mov
mov
push
insb
inc
jl
or
sbb
sub
cmp
int3
loopne
shr
sar
mov
mov
push
insb
inc
jl
or
sbb
sub
cmp
int3
rclb
mov
mov
mov
or
sbb
or
cmp
int3
mov
std
mov
mov
nop
sub
mov
cli
insb
inc
or
test
out
sar
ret
fisubrl
loop
mov
ds
pop
add
add
pop
add
or
add
add
add
add
add
xor
add
mov
add
add
add
add
addl
add
add
nop
add
add
add
add
add
add
aas
add
add
add
add
inc
add
add
add
xor
xchg
add
add
add
add
inc
add
mov
rolb
das
add
add
jecxz
addl
add
add
add
add
add
cmp
stos
add
add
push
add
push
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
adc
push
add
push
addl
add
add
mov
add
add
add
add
add
add
push
add
add
mov
or
add
or
lea
pop
add
add
add
add
jo
sbb
add
push
add
mov
cmp
ret
add
add
into
add
dec
add
add
add
pop
add
adc
add
add
push
push
add
add
add
add
clc
add
add
add
add
add
add
aaa
add
add
add
add
add
push
and
jnp
rolb
add
lods
add
or
add
add
add
lea
pop
add
add
pop
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
arpl
sub
ja
push
add
sub
sub
push
add
add
push
sub
pop
add
add
add
adc
addl
add
add
add
ret
add
add
add
add
pop
add
adc
sub
imul
add
add
add
add
add
aas
add
add
add
add
add
push
add
std
add
add
fwait
add
add
xchg
add
add
add
add
add
push
arpl
hlt
add
add
add
add
add
inc
add
stos
add
add
add
add
add
add
add
add
fs
add
add
add
xor
add
cmp
roll
dec
add
add
add
mov
add
add
add
add
add
add
add
clc
add
nop
add
push
sub
mov
add
add
add
xor
pop
add
mov
hlt
add
add
add
sub
sub
adc
add
add
mov
add
sub
sub
pop
add
add
movsb
add
add
mov
add
xor
pop
add
add
push
inc
add
add
add
add
add
int3
outsl
divb
inc
ja
mov
aad
ror
fldenv
mov
jg
add
mov
les
mov
fisubrl
test
push
out
push
push
in
and
mov
test
aam
sub
mov
sub
adc
dec
sub
jmp
inc
push
fldl
adc
fildl
fdivs
stos
mov
in
daa
ret
movsl
or
movsb
cmp
xchg
aaa
ret
cld
adc
pop
dec
daa
xchg
mov
test
hlt
pop
mov
loopne
shrb
mov
xchg
mov
cld
dec
xchg
ret
pop
dec
leave
jl
leave
pop
or
push
cli
sub
adcb
test
cmc
adc
mov
mov
sub
out
inc
lcall
dec
imul
insb
pop
pop
fldenv
mov
cmp
push
out
sub
and
stos
dec
cmp
mov
dec
fistps
fists
mov
fidivl
into
jmp
nop
loope
jo
jg
pop
sbb
sahf
aam
xlat
dec
iret
jno
shrd
arpl
dec
mov
in
mov
sbb
gs
insb
mov
mov
cld
ret
test
mov
xchg
mov
iret
shlb
outsl
mov
stos
xor
jae
cmpsb
inc
sti
cli
adc
mov
cmp
cmp
sbb
mov
loop
sub
mull
pop
pop
in
dec
xchg
pop
test
imul
enter
rorb
shll
loopne
out
add
in
and
mov
out
rolb
in
sbb
mov
andl
mov
idivl
jmp
dec
dec
imul
rcrb
and
mov
mov
mov
dec
mov
sub
pop
push
leave
idiv
xchg
outsb
or
xchg
sahf
clc
out
rcl
bound
mov
pop
les
jno
cld
gs
das
hlt
jnp
add
pop
inc
fisttps
adc
push
xchg
jbe
cltd
addr16
jp
push
popa
nop
enter
mov
cld
push
and
movsl
push
das
sub
fisubrs
xor
or
xor
out
or
out
and
fdivs
iret
xchg
gs
mov
das
mov
shll
add
dec
pop
notl
xor
push
insl
xor
cmpsl
sbb
test
inc
or
adc
rorb
jle,pn
stos
adc
or
outsb
inc
mov
js
mov
dec
mov
push
dec
inc
sub
in
dec
jecxz
sbb
cltd
sub
sbb
mov
pop
xlat
mov
fiaddl
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
