call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
xchg
mov
out
xchg
xor
je
push
notl
jecxz
repz
sub
daa
mov
lds
mov
push
hlt
inc
add
adc
and
notl
xlat
je
test
xchg
daa
lds
mov
les
addr16
hlt
inc
add
adc
and
xor
inc
push
scas
fnsave
aaa
xchg
add
jbe
jne
and
add
and
adc
push
clc
je
lahf
push
inc
push
add
push
in
enter
mov
jg
push
mov
fs
jecxz
js
loop
insb
out
sub
cmp
enter
call
sub
in
fmull
sbb
push
ja
sbb
push
out
daa
add
push
dec
stc
jp
adc
xorl
adc
add
fadds
test
je
xchg
mov
movsl
call
xchg
hlt
test
cmp
popa
jmp
ja
and
les
push
je
in
adc
jo
divl
popa
add
lret
adc
scas
loop
push
movsb
mov
mov
jnp
inc
ja
sarl
mov
aam
in
cmc
sub
and
xor
inc
notl
xlat
je
test
xchg
movsb
adc
aam
in
hlt
jne
mov
enter
jmp
push
xor
in
je
push
lret
mov
fs
cwtl
or
icebp
push
loope
in
jmp
movsl
xor
push
stc
push
faddl
aaa
cmp
xor
les
inc
inc
sti
adc
add
xlat
je
test
xchg
daa
movsb
pop
mov
les
addr16
hlt
inc
add
adc
and
xor
inc
notl
xlat
je
test
xchg
daa
movsb
pop
mov
les
addr16
hlt
inc
add
adc
test
nop
pop
out
push
jle
clc
xchg
js
pop
daa
xchg
xchg
lds
push
movsb
mov
out
push
or
out
jg
push
push
push
jle
shll
js
data16
cmc
rol
cmpsl
xchg
repnz
and
std
inc
adc
lahf
jp
and
sarl
pop
cs
xor
sbb
push
cmp
pusha
out
adc
mov
stos
int3
xor
xor
mov
pop
jns
push
inc
or
sahf
sbb
fldenv
xchg
push
jecxz
jbe
dec
cmp
add
outsb
in
mov
dec
getsec
call
cld
lea
das
aas
int
ret
add
out
inc
repnz
push
xchg
outsl
mov
mov
mov
push
and
stos
int
outsl
jg
cmp
push
push
add
ret
cwtl
std
scas
mov
pop
int3
xor
and
inc
adc
push
movsl
push
call
push
ret
jle
pop
rcll
fiaddl
mov
xor
or
fdivrl
mov
inc
sti
xchg
push
testb
fadd
xchg
add
add
out
push
mov
call
loopne
faddp
aad
into
push
testb
idivb
xchg
mov
dec
jl
and
arpl
pop
bound
scas
xchg
mov
shlb
cmp
inc
mov
inc
sub
in
mov
iret
jecxz
std
xchg
add
sub
inc
bound
xor
dec
test
jg
dec
push
add
nop
mov
xchg
add
jne
int
xchg
iret
fsubrl
mov
inc
pusha
imul
add
xchg
aam
cmpsl
scas
lcall
cs
jnp
pop
add
or
stos
psubusb
pop
xchg
and
lahf
lret
or
mov
pop
mov
push
pop
mov
lods
mov
shrb
sub
das
inc
aam
repz
lea
jge
pop
push
mov
jb
out
shrb
loop
and
mov
inc
xor
xchg
xor
sbb
lods
jbe
enterw
push
push
xor
mov
cwtl
imul
or
push
mov
fdiv
xchg
sbb
xor
addr16
mov
out
imul
mov
lret
sahf
sub
aaa
je
xorb
mov
movsb
aaa
push
lahf
fwait
ja
fmull
mov
adc
popa
fidivs
cmp
xchg
test
mov
mov
popf
insb
add
push
and
mov
adc
or
les
xchg
cwtl
pushf
repnz
outsb
jge
cltd
cmp
rcrb
or
cmp
sub
jne
in
lods
mov
cmpsl
daa
arpl
in
mov
nop
movsb
repz
adc
call
push
orb
rcr
imul
fwait
enter
cmp
into
sbb
cmc
in
xlat
cmp
xlat
ret
ljmp
leave
cmp
push
xor
sub
in
adc
mov
shlb
sub
fildll
enter
sub
cmp
pop
inc
ss
daa
fs
xchg
xchg
leave
xor
xor
lods
or
push
in
das
push
js
xchg
cli
mov
cmp
ret
and
inc
add
pop
cmpsb
hlt
mov
out
push
ret
sbb
in
popa
mov
lret
mov
mov
jge
aaa
push
in
cli
adc
out
ss
jb
rcll
add
into
hlt
jl
int3
movsb
fbld
mov
sub
fwait
jb
loop
jle
dec
add
mov
cmpsb
iret
negl
lods
fsubrs
mov
dec
in
add
sub
mov
ror
or
addb
lods
push
push
andb
inc
ret
pop
es
imul
or
pop
cmc
inc
push
inc
push
in
mov
pop
js
das
push
enter
scas
packuswb
loop
movsb
cmp
jmp
into
mov
xorl
shrb
mov
popf
jmp
jle
mov
test
adc
popf
jnp
insl
aad
btr
xor
mov
inc
add
mov
mov
push
stc
push
add
pop
movsb
decl
adc
movb
in
movhlps
flds
add
cld
adc
push
add
aam
mov
cmp
mov
mov
pop
shr
jmp
fdivrs
sbb
xchg
cs
inc
stos
mov
in
frstor
xchg
pop
addr16
out
pop
ret
xor
aas
jnp
pop
dec
in
add
ja
repnz
xor
dec
cmp
adc
les
xchg
imul
jle
fs
popf
inc
test
pop
int
inc
stos
out
cld
mov
jns
dec
pop
aad
inc
push
rol
mov
mov
pmuludq
arpl
popa
push
shll
int3
pop
jne
call
add
loopne
or
rcll
ds
imul
push
xor
xlat
in
popf
adc
js
sti
je
bound
jp
shrb
adc
addr16
insb
movsl
pop
mov
mov
mov
xchg
nop
std
add
add
dec
out
cwtl
enter
push
dec
jg
push
scas
divb
mov
mov
mov
test
repz
xor
cltd
add
and
adc
mov
data16
rcll
push
dec
inc
shl
mov
mov
push
dec
out
cmpsl
shlb
in
into
mov
jbe
in
mov
lods
lea
mov
loopne
cmc
add
jg
hlt
std
mov
out
mov
out
out
or
ja
mov
inc
lea
imul
fstps
addr16
pop
inc
pop
xchg
adc
mov
dec
dec
mov
popf
jo
mov
rol
cltd
xchg
sub
cwtl
sbb
mov
cmp
aam
xor
repz
das
sbbb
lahf
sbb
gs
aam
jae
jnp
and
jmp
ja
dec
jecxz
mov
lock
ror
adc
and
xchg
fs
lock
push
mov
inc
es
cli
push
mov
mov
inc
ljmp
test
icebp
inc
cltd
test
push
test
ret
cmp
push
jle
popa
ds
jle
stos
lret
in
mov
jecxz
mov
pop
cmp
or
jne
sbb
xor
cltd
and
dec
sahf
mov
sub
cmp
inc
mov
inc
xchg
mov
sbb
push
mov
outsl
loope
jle
jp
popa
loop
and
std
je
hlt
fidivrl
cmc
mov
jnp
nop
in
xor
push
rep
xchg
sbb
inc
xchg
pavgw
cmp
mov
cltd
mov
push
add
and
mov
clc
imul
inc
out
mov
xchg
adc
shlb
mov
jecxz
std
jbe
out
xor
sbb
or
sbb
fs
mov
nop
mov
add
dec
inc
stos
int
hlt
mov
jbe
dec
dec
clc
mov
sub
xor
pop
push
hlt
roll
dec
shl
sbb
push
inc
add
stc
jecxz
cltd
xchg
xchg
out
sbb
mov
jae
in
fs
rcl
popa
xchg
ret
inc
dec
dec
mov
adc
pop
fdivs
mov
add
jbe
arpl
repnz
out
in
or
and
mov
push
xchg
lret
lcall
dec
sbb
out
sti
xchg
mov
test
mov
mov
xchg
adc
fstp
out
pop
cmp
push
das
fsts
mov
dec
add
pushf
imul
rol
fisubrs
mov
scas
jno
gs
jl
xchg
addb
xorl
add
int
fstpl
and
jp
jecxz
leave
enter
test
outsl
lcall
test
stos
push
xchg
hlt
xlat
xchg
cmp
sub
inc
inc
sbb
and
stos
jp
add
fwait
xchg
fwait
data16
push
jno
dec
adc
jl
outsb
inc
dec
jns
scas
lods
mov
inc
jns
push
clc
dec
lcall
jo
or
shrb
push
mov
mov
add
lea
roll
xrstor
xor
stos
out
ljmp
sub
push
jg
clc
dec
pop
gs
inc
in
sub
or
into
das
std
inc
jno
rorl
cmp
jp
xor
adc
lock
scas
and
xchg
shr
xor
sahf
pop
jae
sahf
shlb
jo
cmp
iret
into
mov
or
sahf
sub
fcomip
mov
repz
cld
fs
ret
mov
push
mov
lods
or
push
jle
pop
sbb
or
adc
sbb
outsb
mov
xor
cmp
aas
jbe
imul
and
sub
jnp
adc
add
sahf
subl
sub
adc
mov
or
xor
add
mov
imul
push
or
fistps
mov
adc
fcompl
mov
add
xlat
or
jmp
aam
xor
push
iret
lcall
lcall
jg
shll
mov
sub
jo
sub
sub
inc
addr16
and
ljmp
fmuls
or
pushl
jae
sub
inc
lock
cmp
cmp
lods
sbb
jne
lods
lods
outsb
xor
rorl
pushf
iret
fisttpl
or
popa
and
or
cmp
shrl
sbb
js
cmp
or
xchg
dec
sahf
fs
xchg
push
repnz
or
jle
iret
clc
sub
repz
jbe
cmp
gs
in
sub
sti
pushf
and
mov
jns
loope
je
pop
jmp
inc
fdivl
sbb
adc
ljmp
pop
sub
inc
lret
popf
int
xor
cmc
outsb
inc
jo
cld
mov
adc
test
adc
leave
push
xlat
bnd
popf
jmp
lret
xchg
xor
xchg
lock
mov
adc
test
sub
jecxz
push
sbb
mov
pop
and
pop
fwait
adc
fistps
inc
js
xor
iret
mov
in
ss
fcoml
dec
xchg
mov
sub
cmc
shlb
cmp
mov
mov
ja
movsb
daa
mov
int
jl
cwtl
mov
iret
hlt
inc
jnp
or
ljmp
dec
jb
addl
sub
push
and
xchg
cmp
and
cmp
fs
jbe
pop
cmp
icebp
mov
push
dec
sti
or
insb
inc
int
mov
mov
mov
sub
ljmp
mov
test
mov
sub
roll
rclb
xchg
enter
xor
negl
jmp
inc
inc
cmpsl
sub
movsb
stc
leave
mov
sub
pop
xchg
loope
sarb
fidivs
aaa
fsub
mov
adc
xchg
push
xor
popf
jle
aad
in
cmp
sub
mov
xor
fldl
sbb
jl
int3
fstpt
or
stc
sub
add
add
push
cmp
mov
or
cmp
test
shrb
inc
dec
sub
mov
mov
add
push
dec
outsl
arpl
sub
sub
icebp
and
jnp
lahf
loope
sbb
jne
pop
lock
fldl
cmp
cmp
adc
adcl
cmpb
lods
mov
les
mov
mov
xor
or
xchg
mulb
aad
cmp
dec
dec
mov
sub
jnp
push
pop
cltd
sub
xchg
nop
or
lea
push
in
out
sbb
dec
mov
mov
mov
call
into
mov
outsb
or
pop
cmc
stos
jne,pt
int
push
rep
cmpsl
hlt
or
orb
adc
xorl
fld
pop
xchg
mov
lret
pop
ljmp
aam
rorl
cmp
lcall
pop
inc
mov
loopne
push
cmp
cwtl
pusha
mov
mov
dec
hlt
enter
std
andb
ljmp
jp
jge
out
iret
push
imul
xor
test
ret
mov
push
jge
ja
mov
arpl
cltd
mov
dec
cli
rolb
inc
pop
stc
xchg
shlb
dec
xlat
xorb
xchg
adc
mov
cli
das
xchg
pop
and
pop
test
add
jne
jb
mov
or
movb
int3
bound
pop
jle
ret
or
je
leave
aaa
or
mov
sbb
pop
subb
test
adc
ficoms
mov
xchg
in
xor
in
mov
or
test
dec
dec
cmp
and
sbb
fwait
push
pop
scas
mov
imul
pop
inc
pop
lods
cmpsb
lock
add
mov
push
sub
addl
mov
mov
stos
push
mov
int3
std
pop
lcall
inc
lods
iret
std
push
orl
and
mov
rcrb
xchg
inc
inc
pushf
adc
ds
popa
jae
dec
ret
push
imul
movsl
pop
mov
popa
mov
mov
sub
shlb
mov
mov
inc
fucomp
aas
cmp
cmp
dec
imul
cmp
scas
imull
add
add
push
dec
add
pop
ja
mov
int3
aaa
pop
cmpsl
das
inc
in
push
push
pop
stos
or
add
jle
sub
mov
adc
dec
insl
or
movsb
in
clc
ror
push
mov
dec
and
xchg
loopne
enter
bound
je
frstor
insb
cmp
add
jae
mov
fidivrs
in
xor
movsb
push
cmp
jg
push
repz
les
aaa
push
adc
repz
jge
stos
and
add
mov
aad
jle
cmp
das
and
fisubrl
dec
stc
dec
xor
xlat
insb
xchg
xor
movsb
sbb
aad
mov
mov
cmp
fcmove
aas
mov
lods
add
into
movsl
in
int3
xchg
mov
fcmove
insb
jne
lcall
xchg
sub
inc
sti
push
mov
sub
sbb
shrb
mov
mov
sub
mov
mov
mov
enter
movsb
add
dec
jbe
lret
js
scas
mov
adc
test
mov
push
xchg
pop
mov
and
pop
xor
lods
es
mov
lods
cmp
ret
lret
jne
les
push
cmp
and
xchg
sbb
mov
mov
jp
cmp
push
cmp
repnz
jo
pop
in
jne
addr16
push
push
mov
jg
add
mov
xchg
mov
insl
jns
sub
shll
into
xchg
loope
mov
and
nop
out
cmp
mov
notb
pop
xchg
cmp
lahf
arpl
jae
aaa
adc
in
pusha
jl
xor
lcall
mov
dec
rcrb
xchg
jmp
in
adc
test
push
inc
or
das
inc
cwtl
inc
add
cmp
out
pop
dec
lea
call
inc
pop
movsl
sbb
cltd
out
call
nop
mov
scas
mov
cwtl
and
test
pop
xorl
mov
jno
push
mov
push
xor
cmp
pop
sub
jg
cli
test
cmpsl
pop
sub
aam
jae
or
int3
sbb
jnp
dec
bound
push
cli
xchg
das
push
inc
ret
movsl
shl
sbb
jl
mov
xlat
cmp
arpl
or
subb
pop
lea
jp
xchg
sbb
xorl
cmp
scas
mov
cmp
xchg
loop
pop
scas
mov
pop
popa
fisubl
xorb
int
inc
lret
mov
insb
cld
clc
mov
or
aam
inc
sub
sub
push
ss
cld
jnp
rcrb
mov
in
add
ds
fistpl
cs
leave
lret
jmp
jbe
xor
jge
pop
pop
pop
mov
push
add
ds
xor
out
std
push
stos
negl
add
push
sbb
and
or
push
sar
and
aam
xor
leave
out
jmp
jo
stos
xchg
and
call
lea
cmp
push
inc
into
test
cltd
push
mov
ret
jle
push
nop
movsl
test
inc
aas
mov
inc
mov
mov
xchg
lcall
stos
or
pop
movsl
mov
cmpsb
pop
dec
push
push
imul
cs
nop
push
adc
cmc
aam
pop
sbb
movsl
inc
bound
mov
mov
add
jae
testb
std
dec
sub
jnp
push
faddl
pop
fisubs
lret
es
pop
ljmp
dec
mov
popf
fstl
fisubl
pushf
jmp
inc
sub
add
push
imul
lds
add
popl
movsl
outsb
pop
leave
sub
outsb
test
lds
or
data16
mov
mov
lea
or
dec
mov
cmpsl
fwait
cmc
push
ss
insl
aad
or
or
xor
shlb
adc
or
jbe
inc
cmc
push
mov
jle
stc
roll
and
outsb
leave
mov
cmpsb
pop
orl
sub
scas
push
push
mov
sbb
cmpsl
js
fstl
lcall
test
lock
arpl
lds
jmp
push
ds
cmp
mov
lods
and
inc
mov
lahf
inc
jg
cmpsb
icebp
mov
mov
cmpsl
stc
nop
push
inc
sub
insb
add
fwait
dec
lret
adc
cmpsl
ret
dec
out
xchg
push
das
fwait
jno
mov
jp
mov
cmp
or
arpl
mov
jmp
add
je
int3
sub
std
xlat
lock
mov
arpl
mov
stc
loop
jno
push
and
push
add
in
movsl
mov
fidivrl
adc
sub
push
xchg
nop
adcb
and
pushf
push
mov
int
sbb
mov
xor
mov
cmpsl
jl
cmp
mov
mov
ret
mov
mov
xlat
sub
shll
repnz
add
pusha
jno
fcomp
push
pop
fcomps
jo
mov
cmp
inc
push
movsb
jb
push
sub
mov
mov
movsb
inc
mov
adc
or
xor
sbb
out
pop
mov
std
imul
pop
jg
inc
out
fdivl
in
mov
int3
cmp
sub
in
add
shrb
es
fcmovb
into
iretw
sbb
out
pop
imul
fcomip
lock
mov
scas
pop
lahf
in
mov
add
pop
mov
pop
mov
mov
lcall
outsb
repnz
or
out
bound
andb
or
or
add
sub
add
cs
lret
ss
roll
mov
test
or
xchg
mov
dec
js
sub
sbb
test
fsubrl
or
idivl
in
pop
sbb
lahf
negb
orl
into
xor
roll
in
movaps
xor
dec
decb
outsl
push
sub
scas
sbb
sbb
lcall
push
movsl
and
jl
outsl
stos
setno
push
push
sbb
cmpsb
xor
int
pop
xchg
jb
scas
sub
sub
sub
mov
insb
jo
fsubs
je
jo
es
int3
jb
inc
xor
pop
inc
lock
sbb
sub
mov
pop
pop
push
push
aas
push
ja
movsb
inc
sbb
add
lods
push
rorl
dec
scas
stc
cwtl
in
mov
push
aas
cmp
add
mov
jl
and
adc
sar
lods
aas
scas
or
mov
insb
out
jg
mov
insb
adc
push
mov
clc
in
pop
inc
mov
mov
sub
mov
xchg
mov
ljmp
cltd
xchg
inc
inc
ficompl
ja
loope
sbb
cmpsl
into
inc
xor
push
lcall
es
data16
pushf
lahf
mov
aas
mull
test
test
cmp
push
jnp
rorb
mov
dec
cmp
popw
and
ficoms
add
sbb
jne
mov
cmpsb
imul
lcall
into
loopne
and
xchg
addr16
xor
fwait
mov
xor
fistps
ficompl
add
sarl
pop
push
nop
push
cmp
roll
fwait
hlt
test
cmpl
into
in
fsubrs
pop
push
or
stc
icebp
out
xchg
fdivrl
sub
inc
addr16
adc
pop
pop
mov
sbb
mov
pop
mov
mov
xchg
out
xlat
je
test
xchg
daa
movsb
pop
mov
les
addr16
hlt
inc
add
adc
and
xor
inc
notl
xlat
je
test
xchg
daa
movsb
pop
mov
les
addr16
hlt
inc
add
adc
and
xor
inc
notl
shll
ss
and
aam
in
cmc
mov
and
notl
push
je
test
xchg
lea
pop
mov
mov
pop
pop
sbb
or
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
sub
sbb
cmp
mov
adc
ficoml
push
sub
sbb
dec
lds
mov
add
adc
lret
push
xor
add
push
lds
mov
cltd
push
aad
loop
ljmp
and
push
lds
insb
lock
sbb
cmpsb
inc
leave
add
pop
loop
sti
add
mov
lds
inc
cmc
jp
iret
dec
iret
pop
das
xor
add
std
and
jne
push
pop
push
test
push
lcall
add
ljmp
ficompl
ret
nop
ds
xchg
in
cmc
mov
pop
xor
mov
jne
xchg
inc
xor
push
jp
mov
xchg
cwtl
xchg
outsb
bound
pop
xchg
stos
aad
fidivrl
cli
push
adc
cli
gs
cld
fisubl
xchg
stos
js
mov
and
lret
je
and
jecxz
and
jge
push
dec
lds
mov
mov
adc
rolb
adc
pop
int3
outsl
les
sbb
pop
mov
stc
push
gs
xor
pop
fldenv
push
push
cmpsb
jp
dec
xchg
or
jmp
fildl
add
add
push
out
loopne
in
and
jp
dec
lds
stos
and
lcall
inc
ficoml
movsl
cmp
push
jp
dec
lds
stos
and
lcall
inc
ficoml
movsl
adc
push
push
adc
jbe
xchg
lahf
xor
ja
ret
scas
push
cmp
jb
fwait
iret
or
aas
xor
mov
pop
dec
push
dec
dec
movsb
mov
pop
dec
adcl
or
int
daa
fsubs
movsb
dec
cmp
std
rol
mov
pop
ds
adc
jb
rolb
or
sbb
ja
outsl
lcall
lods
lds
js
or
jmp
adc
int
sub
movsl
push
sbb
lods
and
in
ds
dec
dec
rcrl
mov
notrack
mov
mov
pop
or
je
adcb
out
cmp
imul
aaa
xor
loopne
lret
icebp
xchg
and
icebp
push
add
into
add
out
pop
jp
jmp
or
into
mov
adc
aad
bound
pop
pop
mov
mov
mov
xchg
or
scas
incl
dec
loop
mov
insb
mov
xchg
je
jns
add
cmpsl
scas
out
dec
pop
iret
push
stos
mov
icebp
xchg
ficompl
mul
cld
inc
mov
in
mov
mov
js
add
push
xlat
jle
inc
sbb
mov
xlat
push
rclb
into
jg
outsl
call
in
mov
int
mov
cmp
mov
nop
popl
mov
pop
outsl
xor
movsl
leave
xchg
imul
cmp
sarb
cmp
cwtl
punpckhdq
ja
adc
jg
xorb
pop
xchg
mov
in
jp
mov
add
fs
aad
andl
xor
cmpsb
sub
or
adc
sbb
aam
add
xor
jg
movsl
out
mov
fadds
cmp
add
xchg
daa
ljmp
pop
ja
lea
sub
lea
adc
inc
stc
ret
mov
ss
pop
dec
push
iret
pop
jno
enter
repz
hlt
mov
addl
inc
lods
js
adc
testl
inc
mov
call
pusha
nop
cli
add
mov
cwtl
lock
jg
pop
adc
out
insl
ljmp
xchg
mov
fcmove
add
test
shl
mov
pop
push
stos
sbb
xchg
adc
jge
std
data16
xchg
aad
loopne
movsb
cld
inc
xchg
push
dec
mov
or
addr16
mov
cmp
leave
dec
in
int
leave
movsb
fldcw
jg
lret
lahf
hlt
enter
negb
inc
movsb
push
or
xchg
sbb
fcompl
addr16
jne
cmpsb
and
shlb
aad
sub
mov
pop
aas
sbb
aam
pusha
pop
fcmovu
test
loop
ljmp
and
add
sbb
idivl
sub
insb
out
movsb
jnp
xchg
mov
xchg
or
push
adc
cmp
mov
out
xor
ss
xchg
mov
mov
sbb
mov
pushf
in
stc
imul
nop
test
xchg
push
mov
cltd
pop
dec
stos
sbb
insl
pusha
jo
test
mov
push
ja
adc
xlat
std
mov
xchg
adc
int
das
jae
icebp
sbb
push
or
pop
sub
push
adc
dec
lods
lret
or
popa
lea
clc
mov
lock
mov
out
in
push
lahf
cmp
sbb
sbb
and
das
adc
push
shlb
lret
mov
mov
aad
dec
and
cltd
ret
mov
insl
jle
sbb
cmp
inc
mov
es
pusha
jge
xchg
push
lcall
push
and
mov
pop
ljmp
out
mov
sub
xchg
pop
aas
je
adc
lea
xchg
lcall
inc
bound
push
add
cmp
test
sbb
nop
fwait
pop
ret
ljmp
fldt
idivl
ds
inc
lods
ret
mov
fwait
adc
push
jg
fwait
mov
fidivrl
mov
and
and
mov
xchg
pop
js
es
data16
stc
push
mov
fistl
mov
xchg
xor
inc
xor
and
sbb
push
push
fildl
and
bound
mov
inc
pushf
dec
pop
mov
jg
mul
in
shl
jle
and
sbb
aam
xchg
test
xchg
cli
in
mov
jl
jo
imul
mov
cmp
aas
fimuls
imul
aam
sbb
mov
sahf
test
dec
adc
stos
add
mov
mov
sti
lock
movsb
aad
or
inc
xchg
dec
push
adc
inc
call
sahf
inc
lahf
cltd
fbld
add
jo
out
filds
repnz
cltd
sub
adc
out
xor
lea
inc
pusha
stc
add
rcll
mov
push
aaa
and
push
mov
in
mov
int
jle
dec
std
sub
xlat
cld
js
shrb
add
popa
movsb
imul
xchg
cmc
pop
hlt
push
sarb
sbb
push
push
push
imul
stos
fldenv
adc
xor
xor
mov
out
iret
aaa
and
pop
dec
jnp
sub
inc
pop
and
mov
lock
stos
cli
xor
jae
out
push
loop
out
inc
cs
or
add
adc
dec
aad
out
lds
xlat
sbb
and
mov
xor
pop
sbb
repnz
xor
dec
ss
push
fwait
testb
inc
or
das
xchg
push
sbb
fisubrs
aaa
inc
mov
xchg
jno
sti
add
push
adc
iret
sbb
dec
test
dec
xor
icebp
test
je
popa
or
push
mov
pop
fiadds
lahf
sbb
ret
jo
fsubs
cltd
rclb
mov
rorl
jne
mov
addl
outsl
mov
pop
or
scas
cmp
pop
dec
pop
in
dec
imul
sbb
ror
popf
insl
imul
shll
xor
out
add
popa
sub
daa
cmp
mov
pop
fwait
push
pop
inc
fs
sbb
sub
xchg
sbb
xor
mov
es
cmp
repnz
push
test
fs
out
xlat
out
fisubl
mov
mov
pop
cmp
jb
inc
sbb
pop
pop
stc
fisttpll
push
jle
mov
inc
mov
call
movsl
add
adc
lahf
push
hlt
jge
enter
xchg
sub
mov
adc
cwtl
mov
fbld
mov
lock
pop
pushf
sbb
push
rorb
andb
ss
jmp
fistpll
add
jp
scas
and
daa
in
sahf
push
push
pop
jmp
mov
out
movsl
inc
testl
jg
lahf
adc
cmp
lods
pop
int
mov
sahf
adc
lds
andl
iret
imul
or
je
fldenv
mov
xchg
cmpsl
movsb
or
pop
jg
push
rcrb
add
mov
ja
loop
movsb
and
aam
lods
mov
jle
data16
dec
inc
push
cltd
cltd
jno
fimull
mov
idivb
mov
shr
movsb
adc
inc
jge
imul
inc
inc
addr16
mov
jp
xor
push
cmp
push
sbb
mov
iret
test
lods
jmp
fimull
ret
jp
mov
cli
push
sbb
sub
fsubrl
fcomps
cmp
xor
pop
hlt
xchg
movl
or
js
js
xor
std
push
mov
adc
je
dec
push
test
out
sahf
adc
stos
and
mov
loope
jne
xorb
xchg
mov
and
mov
mov
in
cmp
or
xor
add
mov
hlt
or
mov
jle
push
push
xor
add
lcall
stos
addl
pop
xchg
ljmp
out
inc
sub
cli
adc
or
test
sti
pop
cmc
cltd
add
shrb
cmp
loop
pop
dec
jp
test
adc
inc
sub
addr16
inc
add
mov
fsubr
cwtl
jb
xchg
ds
add
pop
pop
leave
mov
bound
rorl
out
push
pusha
orl
aad
cmp
cmp
xchg
push
mov
mov
jo
inc
insb
xchg
stos
fbld
test
sub
push
dec
insl
cltd
pop
mov
daa
subl
inc
es
aas
jae
pop
add
push
mov
sub
jmp
jae
pop
fmuls
jmp
movsl
mov
clc
ss
stc
adc
out
jne
push
sbb
xlat
lcall
and
int3
jmp
push
nop
xchg
scas
stos
mov
ffree
leave
mov
dec
insl
loopne
or
je
pop
sbb
ffreep
push
repnz
xor
pop
fisubrl
sub
push
test
shl
pop
sub
mov
int3
mov
fwait
dec
or
and
fs
or
add
lcall
mov
dec
mov
cltd
cmpb
data16
icebp
dec
lahf
sub
inc
lret
repnz
sbb
insb
xchg
shll
and
int
bound
or
jae
and
subl
mov
pushl
dec
dec
cmp
inc
mov
pop
jns
leave
push
pop
adc
js
icebp
outsl
lods
mov
sub
adc
and
hlt
xchg
inc
jnp
scas
mov
cli
fcoml
test
or
js
dec
nop
ret
fsubs
or
std
mov
xor
push
arpl
jge
nop
frstor
loopne
jl
mov
pop
pop
cmp
les
jl
rcrl
rorb
jb
jmp
movsl
xor
jmp
data16
xchg
mov
push
fiaddl
into
xchg
mov
adc
dec
aam
movsl
mov
jecxz
and
lea
out
lret
dec
mov
out
cmp
shrb
dec
mov
insl
fldcw
dec
scas
aam
push
pop
outsb
jl
sub
lods
iret
and
outsb
hlt
cmpsl
das
xlat
cmpsl
ljmp
icebp
dec
sbb
cmpsl
aaa
xor
repnz
dec
daa
or
fidivs
dec
stc
imul
mov
out
and
out
cmp
cmpsb
ret
addr16
int
ja
adc
xchg
push
dec
adc
fstl
xchg
mov
cmp
and
pop
jb
imul
test
subb
dec
stos
xlat
xor
add
addps
pop
ret
in
testl
mov
je
pop
mov
inc
mov
int3
and
and
test
sbb
out
addps
mov
fwait
cltd
cmpsb
cmp
pop
addr16
lahf
push
mov
mov
sbb
dec
es
pop
andl
jl
ret
lods
lret
cmp
cmpsl
mov
mov
ds
sbb
xlat
push
push
pop
adc
mov
mov
jnp
sub
cmp
shlb
pop
bound
cmp
xor
mov
lahf
or
ret
push
dec
lds
mov
mov
test
add
leave
addr16
incb
xchg
push
cmp
ret
pop
lock
sub
into
outsl
push
push
xchg
dec
out
push
cmp
movsb
adc
jnp
push
pop
aam
addr16
rolb
sbb
daa
cmp
jecxz
pop
sub
fdivp
mov
and
xchg
leave
movsb
mov
jmp
adc
cwtl
ds
shl
push
ja
jae
sbb
sbb
pusha
shlb
gs
cmpb
lock
jl
mov
fldenv
ja
mov
into
hlt
insl
add
fwait
jp
or
fs
mov
in
xor
sub
or
pop
outsl
sti
dec
inc
pop
push
lret
in
flds
push
pop
shll
out
andb
lods
mov
mov
inc
and
in
adc
push
add
stc
inc
xor
push
mov
fbstp
dec
es
and
cmp
mov
add
loope
stc
sub
fistps
jecxz
add
lahf
je
gs
xchg
xchg
div
fdivrl
cmp
movb
lods
adc
sub
mov
push
mov
les
sbb
insb
sbb
add
mov
das
mov
sub
sbb
stos
in
cmc
sub
pop
subl
outsb
stos
lods
cmp
out
iret
insb
mov
jg
mov
fs
cmp
pop
jne
rclb
fadds
daa
xchg
pop
xor
outsb
rol
in
cmp
adc
and
mov
dec
ss
inc
xacquire
rol
jno
int3
push
sbb
mov
push
fisubrs
xor
xchg
insl
pop
pop
jno
insl
ljmp
xchg
in
dec
mov
push
enter
sub
gs
mov
fcomp
loopne
adc
xor
jo
or
shll
lcall
setl
jg
cmpsb
and
repz
xor
mov
fcompl
out
bound
mov
jo
loope
imul
xor
das
dec
adc
push
sarl
ljmp
iret
push
add
int3
mov
jo
pop
inc
fldcw
mov
adc
in
insb
fildl
out
mov
pop
mov
int
ficoms
xor
cmp
xor
jnp
fwait
cltd
cmpsb
pop
or
jne
xchg
icebp
and
jle
inc
scas
or
mov
jle
adc
inc
test
cmp
jno
mov
loop
and
ljmp
in
ja
sti
mov
js
push
mov
push
jl
popf
roll
stc
and
rcrl
aam
pop
dec
notl
add
push
repnz
add
mov
adc
outsl
mov
scas
movsb
xor
aam
pop
cmpxchg
sarl
mov
mov
pop
add
sti
test
cmc
pop
or
test
aaa
xchg
cmp
mov
push
mov
sbb
adcb
stos
cld
fdivr
popa
jmp
insb
pushf
xor
sub
hlt
jmp
xlat
in
xor
xchg
mov
inc
xor
lods
pusha
sub
sub
in
nop
inc
ds
jns
cmpsb
mov
cmp
add
pusha
mov
sar
sub
push
mov
or
xor
cld
jge
push
mov
fnsave
orl
lahf
push
stos
mov
pop
sbb
xchg
ficompl
push
enter
imul
imulb
lret
rcll
push
es
js
inc
inc
xor
ja
shrb
int3
xchg
sbb
cli
cli
adc
leave
sub
or
xor
pop
ret
insb
push
mov
xchg
out
push
xor
pop
sbb
xor
cli
pop
pop
jmp
data16
xchg
push
test
jo
or
push
stos
mov
and
or
mov
loope
pop
jge
mov
mov
push
sbb
jecxz
scas
mov
push
lods
lea
int
in
ds
jae
push
aam
into
imul
dec
lret
mov
sbb
je
outsb
into
cmp
clc
inc
xchg
sub
or
xchg
jmp
hlt
das
dec
adcb
inc
sbb
popf
cwtl
and
jnp
ljmp
daa
jae
or
in
lret
sahf
fcoml
in
ja
push
sbb
jg
xor
ljmp
std
jnp
test
dec
in
out
mov
push
idivb
push
push
outsl
fs
cmp
xor
das
xor
in
push
mov
fcoml
jae
shlb
cli
insb
mov
push
loopne
ret
and
in
test
or
lret
fmull
fadds
daa
dec
es
gs
sbb
cmp
cwtl
mov
mov
aad
or
out
dec
pop
jg
sar
out
cmp
rorl
xlat
jl
mov
dec
push
imul
inc
popf
xchg
push
inc
cmp
cmpsl
sub
mov
data16
aas
std
sti
test
sub
into
popa
dec
and
idivl
gs
int
jl
sbb
dec
pop
mov
ret
les
je
add
gs
sub
xchg
push
xchg
shlb
cmp
xor
push
cmp
sbb
mov
int
cmp
mov
xor
pushf
jno
add
xor
xor
lahf
add
xor
pop
adc
je
and
out
mov
loopne
and
ret
inc
add
in
inc
fiaddl
sub
jne
insb
adc
push
mov
lds
xor
and
stc
and
lock
dec
out
push
lahf
pop
mov
and
sub
or
test
cmp
in
mov
out
outsl
cltd
sti
lret
fadds
dec
inc
fs
out
aam
cmp
jg
arpl
pop
hlt
cld
lahf
xchg
outsb
lock
mov
push
add
bound
jns
xor
leave
cmc
and
icebp
inc
sbb
mov
in
push
outsl
push
jecxz
lret
std
and
jno
or
or
divb
andnps
dec
loop
inc
cmc
int3
shll
mov
xlat
pop
pop
pop
push
cs
xor
into
pop
push
enter
mov
shll
xchg
inc
and
mov
jo
insl
cmc
jmp
inc
es
stos
push
arpl
or
xor
lret
jl
cs
mov
adc
ljmpw
xchg
rcll
sub
lds
jnp
cmp
push
fidivrl
sbb
xor
inc
aaa
sub
jp
out
stos
stos
push
or
cld
aam
rcrb
push
adc
cwtl
fdivrs
ja
xchg
dec
adc
ds
test
xchg
cltd
push
int
dec
mov
jnp
movb
add
fsubrl
lcall
xchg
ret
mov
int3
dec
call
pushf
pop
sub
adc
jae
pop
lods
int3
sbb
xchg
sub
test
ret
sbb
inc
jl
cmp
sbb
mov
sbb
inc
fimull
ss
lret
add
pushf
mov
xchg
pushl
pop
push
fnstcw
imul
inc
pop
fs
dec
mov
jns
mov
mov
push
xor
stos
xchg
arpl
push
adc
fsubp
xor
popf
stos
inc
test
xlat
pushf
mov
pcmpgtd
lret
lods
mov
mov
jge
xchg
adc
cmp
and
in
add
in
adc
daa
lods
push
cmpsb
insl
gs
and
and
dec
sbb
mov
push
sub
fdivs
sbb
mov
cmp
jle
and
rol
aaa
xlat
in
aaa
add
jecxz
pop
cmp
jbe
xor
mull
push
lahf
ret
lret
mov
push
test
mov
ljmp
test
out
and
xchg
outsb
jbe
jb
mov
sbb
sbb
mov
mov
xchg
aaa
add
push
pop
into
icebp
sahf
in
mov
xor
out
sbb
hlt
inc
jns
dec
pop
and
inc
mov
dec
xor
popf
push
xor
aam
nop
movsb
jge
adc
lea
fs
testl
cmp
or
inc
test
out
xorl
insb
cmp
popl
dec
push
out
add
mov
lret
add
cmp
adc
sub
mov
fstpt
aas
push
push
mov
pusha
sbb
dec
in
iret
test
push
sub
shll
mov
movsl
mov
filds
imul
js
inc
xchg
inc
inc
jmp
jnp
sahf
xchg
lahf
adc
ret
mov
mov
sub
pusha
xchg
repz
add
sarl
je
nop
push
pop
in
dec
out
shrl
mov
loopne
lahf
movsl
mov
mov
fimull
lcall
stc
push
sub
add
pop
inc
insb
xchg
shrb
clc
or
push
jb
xchg
jg
inc
jmp
push
test
pop
pop
clc
inc
sbb
imul
add
fsubrl
clc
scas
insl
mov
ja
push
add
jge
add
testb
int
xchg
out
mov
mov
js
dec
push
roll
test
int3
out
push
fs
adc
pop
jb
and
push
mov
lahf
xor
and
aam
shrb
movsb
in
rcl
mov
ret
inc
xchg
xor
mov
daa
mov
arpl
push
jo
mov
pop
mov
xor
ror
or
aad
jnp
loop
nop
js
loope
popa
lods
add
popf
loop
pop
sub
or
repz
inc
mov
and
repz
cmp
shll
push
jp
dec
lds
stos
and
lcall
inc
ficoml
movsl
cmp
push
jp
dec
lds
stos
and
lcall
inc
ficoml
movsl
cmp
push
jp
dec
lds
stos
and
lcall
inc
fcoms
movsl
cmp
push
vunpckhps
inc
lahf
and
jb
xor
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
pop
test
xchg
jp
push
adc
arpl
mov
lret
xor
and
inc
mov
mov
test
jp
push
sbb
or
cmp
sub
aam
ljmp
fs
je
popf
lret
mov
inc
int3
push
cld
shr
fiaddl
aaa
pushf
pop
mov
or
and
push
fstps
sbb
push
rcrl
ds
sub
jmp
and
inc
mov
fwait
or
inc
lods
jecxz
dec
mov
daa
adc
scas
or
aaa
ljmp
sbb
cmp
jp
ljmp
xlat
adc
add
loope
in
dec
fs
xor
fidivl
imul
aas
out
cmc
les
nop
sub
in
ljmp
mov
scas
fwait
push
filds
mov
test
shl
mov
sbb
lcall
inc
mov
fcomip
fistpll
loopne
pop
iret
ds
dec
bnd
in
movsb
and
sti
fucomi
lret
pop
insb
mov
xchg
dec
test
push
mov
les
cmp
xchg
in
sub
or
cmp
xchg
dec
mov
test
roll
jg
sub
mov
and
push
into
or
sbb
ret
xlat
mov
lcall
mov
inc
xchg
jmp
add
add
test
or
sub
pop
testl
hlt
fiaddl
adc
and
xor
inc
mov
stos
je
test
jp
push
sbb
or
cmp
sub
fiaddl
adc
and
xor
inc
mov
stos
je
test
mov
dec
gs
pop
sub
cltd
popf
jnp
fnstsw
xchg
aad
sbb
in
loope
imul
les
jg
inc
pop
add
and
cmp
imul
hlt
sbb
push
aaa
sti
flds
das
rcl
pushf
push
dec
sarb
jnp
xchg
rcrb
lret
cmp
sbb
jmp
push
xor
cld
scas
sbb
imul
mov
push
mulb
jbe
adc
decb
daa
mov
sub
and
or
jne
jmp
andb
lcall
movl
mov
pusha
les
pop
lods
leave
arpl
iret
into
dec
fnstsw
mov
mov
mov
xchg
xchg
jmp
pop
out
or
pop
icebp
loope
mov
jae
adc
out
add
mov
shl
jge
dec
aas
stc
fisttpl
cwtl
pop
ret
addr16
roll
cmp
out
mov
dec
mov
sub
cmpsb
loop
xchg
and
jns
mov
dec
icebp
xchg
and
xchg
sub
test
add
or
push
mov
and
ret
and
push
ss
xor
fstpl
xchg
sti
xor
fistps
sti
inc
mov
mov
push
xchg
mov
leave
pop
xchg
mov
loopne
les
adcw
push
mov
mov
mov
jnp
ret
bnd
xor
jmp
cli
aad
cmp
fildll
mov
testl
pop
add
mov
mov
ljmp
push
or
mov
adc
cld
pop
sub
push
mov
and
cmpsb
mov
ss
repnz
imul
repz
lret
aad
fwait
add
add
vmulss
adc
lahf
pop
xlat
mov
pop
or
loope
xchg
arpl
iret
das
repnz
dec
or
or
repz
mov
inc
sub
aad
cmpsl
sahf
jle
push
out
jecxz
in
cmp
adc
dec
imul
add
imul
out
push
aaa
ss
or
stc
mov
mov
jge
mov
mov
cmp
sbb
imul
fsubrs
mov
pop
jg
sub
xchg
pop
cmp
mov
xchg
das
fneni(8087
or
adc
mov
loop
repz
andl
insl
out
cmp
jbe
mov
jbe
lock
test
add
hlt
xchg
or
xor
outsb
aas
fcomps
out
adc
ds
mov
push
ljmp
sbb
dec
push
or
movsl
popa
mov
jae
or
cwtl
clc
sub
xor
jbe
dec
ss
sbb
nop
mov
rorb
aas
pushf
sub
jo
jmp
jb
mov
cld
sbb
rcrb
push
enter
xor
dec
or
insl
sbb
mov
or
mov
sub
sbb
cmp
mov
jae
push
loopne
stc
in
ljmp
mov
mov
pop
and
fidivl
lods
int3
ret
cmpsl
cli
movsl
data16
and
dec
pop
sahf
lock
lods
sbbl
repnz
push
in
sarl
stc
and
jg
je
or
jmp
lods
jne
das
cmp
iret
adc
sub
push
shrl
cltd
lret
jae
mov
adc
test
int
jl
loopne
xchg
push
add
aaa
or
cwtl
sarb
sti
inc
jnp
pop
mov
mov
jne
pop
push
lock
mov
lods
rcl
pusha
cmp
data16
ds
nop
dec
lcall
mov
loope
popa
ret
mov
mov
mov
lods
sub
addr16
or
test
xchg
hlt
add
jg
into
dec
scas
sti
sub
jns
cmp
adc
xor
ss
das
pop
aaa
and
pushl
fcmovnbe
das
shl
das
test
jp
xchg
or
xchg
sarl
jle
dec
inc
pop
xchg
dec
cmp
mov
in
testb
jae
mov
sub
popf
fsub
pushf
inc
sbb
mov
mov
int3
lahf
imul
hlt
sbb
popf
xchg
subl
stc
jp
stos
push
insb
aaa
push
dec
sbb
push
lods
aam
out
push
jae
xor
fs
data16
aas
jb
sub
mov
add
mov
cmp
int3
cmp
add
inc
pop
adcb
jecxz
cli
enter
mov
jno
mov
cmp
mov
movsb
jmp
mov
mov
test
ljmp
pop
cwtl
jle
sahf
subb
pop
jnp
int
je
inc
mov
mov
loop
fmuls
adc
cmc
gs
jp
iret
xor
mov
lret
adc
mov
dec
jnp
loope
fs
pop
in
dec
push
lret
add
sahf
inc
pushf
scas
cmpsl
add
les
push
push
mov
jo
add
movsl
rcrl
ds
mov
add
sub
loopne
or
setge
jne
adc
fstpt
mov
aad
dec
cltd
aas
inc
cmp
lds
dec
xchg
xorb
ja
xlat
leave
add
lcall
rcll
enter
inc
xchg
or
adc
arpl
push
push
int3
pop
push
push
mov
sbb
xor
or
jl
push
lock
scas
in
loopne
popf
push
outsb
iret
pop
scas
mov
jp
test
push
js
xchg
pop
stc
sbb
mov
repz
clc
dec
addb
add
movsl
mov
jecxz
nop
lods
add
insb
ss
ss
arpl
pop
cmpsb
mov
scas
mov
pop
add
cmc
lret
inc
stos
pushf
ficompl
xor
lcall
push
push
pusha
push
mov
dec
lahf
sub
mov
lahf
gs
adc
push
adc
orb
adc
adc
lods
aas
cmpl
xor
mov
outsb
dec
imull
roll
icebp
inc
call
out
in
dec
adc
pop
or
int
les
lcall
push
jle
scas
mov
xchg
sub
dec
fdivl
push
lea
push
test
or
js
addr16
cmpsl
fneni(8087
loope
movl
mov
pop
or
jae
sub
in
aad
pop
and
outsl
mov
xor
push
and
pop
out
mov
testb
iret
adc
cmpsb
lock
and
cld
mov
jge
sub
pop
and
lea
es
sbb
xchg
loopne
or
lret
rorl
test
das
je
push
inc
jb
ds
movsb
es
dec
scas
aaa
js
jmp
push
in
jle
adc
cltd
jno
enter
xchg
pop
adc
push
dec
mov
mov
add
mov
addr16
add
stc
aas
xor
iret
adc
es
dec
ret
xchg
dec
popf
into
fstpt
jns
add
mov
pop
pop
pop
xchg
aas
push
xchg
mov
cmp
pop
push
lds
add
addr16
sub
rol
mov
dec
andb
sbb
jb
stos
mov
sbb
dec
jg
cmpb
mov
jmp
and
ficompl
int
outsb
inc
ret
ds
adc
xchg
add
movsb
cmp
cltd
push
in
xchg
dec
or
pop
adc
shrb
adc
mov
pushf
mov
fdivr
push
das
scas
pop
xor
adc
sub
or
sbb
cmp
mov
test
sbb
icebp
or
and
xchg
sti
xor
ret
insl
fcmovnu
xchg
mov
push
in
cmp
js
sbb
push
cmp
jmp
dec
pop
push
xor
lret
pop
jb
cwtl
sbb
mov
arpl
mov
adc
out
push
mov
mov
ds
mov
xor
adc
jns
es
sbb
cmc
pusha
sbb
fsubs
sub
movsl
pop
mov
jle
xchg
xorb
les
jg
movsl
aam
sub
lahf
rcr
clc
sub
insb
clc
lret
icebp
enter
xchg
push
ss
loope
stos
xchg
fidivs
movsl
lock
pop
mov
fisubl
pop
std
lret
ds
out
ss
pop
repz
sub
loope
and
outsb
movsb
xor
shll
jbe
out
push
or
and
enter
inc
dec
decb
jns,pt
cli
in
ds
sub
sub
out
outsl
adc
cmp
xchg
mov
ljmp
popf
push
jle
xchg
stos
or
popf
popa
inc
cs
idivb
and
jp
leave
cmp
jmp
or
mov
out
je
jle
outsb
lcall
or
insl
nop
arpl
push
xor
in
mov
loopne
cmpsl
push
lds
xchg
mov
cmp
pop
cli
ljmp
mov
xchg
mov
fstpl
shlb
mov
xor
mov
repz
push
cmp
push
in
xor
xlat
add
subb
js
sub
les
scas
xchg
and
lods
jmp
jp
fucomi
clc
fnsave
es
jp
xchg
adc
adc
fstpl
inc
push
cmp
decb
clc
lods
or
mov
imul
ror
aas
mov
xchg
jne
movsl
sub
leave
mov
fisubs
sub
or
mov
popa
mov
scas
mov
and
outsl
aas
inc
xor
clc
mov
jae
shl
je
inc
push
int
mov
add
pop
push
rclb
inc
rcrb
aam
or
push
ds
pop
shll
cmp
or
xchg
shl
pop
push
lods
mov
pop
and
movsl
mov
fcomps
aam
aam
pop
subb
dec
adc
in
out
and
js
cmp
pop
fmul
jno
lret
ret
sbb
cmp
lcall
xor
fwait
inc
mov
dec
sahf
jle
xor
out
cli
insb
add
in
sub
out
cmpsl
icebp
mov
stos
lods
iret
cwtl
jge
add
jne
ja
xorl
dec
scas
das
cs
adc
cld
jns
jmp
mov
popa
dec
sbbl
pop
add
dec
adc
das
jno
jg
mov
mul
ret
out
dec
lock
push
mov
push
cmp
push
ja
cmp
fisubrl
fs
sub
stos
or
mov
mov
js
lret
insl
jns
sbb
idivl
push
mov
inc
or
jns
dec
repz
jp
rclb
sbb
hlt
pop
stos
sti
jbe
sub
movsb
test
mov
insl
pop
pop
nop
ret
fstl
cmp
roll
cwtl
stc
or
cwtl
sbb
addb
mov
out
sbbl
movsl
fistl
mov
shl
pop
sub
insl
mov
fstl
int3
and
pop
mov
xchg
cmp
mov
and
jl
cmp
imul
sub
in
mov
add
inc
test
add
inc
sbb
or
jo
and
cmpsb
mov
jmp
je
fs
loopne
jae
movsb
add
sbb
cmc
call
xchg
aam
adc
add
das
fstpl
pop
ret
or
xchg
add
lret
stos
jne
inc
sarb
ret
cmp
in
sbb
dec
loopne
pop
mov
push
mov
sub
leave
pusha
fwait
imull
cmpsb
test
insb
movsb
addr16
xor
push
adc
lret
adc
sbb
and
dec
or
fmuls
mov
repnz
or
jne
movsl
adc
addb
cmpb
cmp
loop
insl
mov
jb
imull
and
fcompl
mov
inc
push
jl
cmp
ret
mov
in
mov
xchg
addr16
lock
inc
outsb
loope
mov
sbb
fstl
popf
adc
pop
sub
pop
adc
ret
adcl
pop
sbb
bound
xchg
inc
fbld
das
mov
cmpsb
push
jecxz
or
pop
ds
mov
pushf
or
xchg
or
inc
fiadds
adc
sbb
imul
add
movsl
xor
das
in
cmpsb
inc
icebp
negl
ret
insl
xchg
and
rcl
mov
mov
push
mov
hlt
shll
add
fisttpl
sbb
fistpll
pop
push
scas
imul
pop
cwtl
stc
sahf
add
loope
or
out
xchg
mov
pop
mov
dec
outsl
cmp
test
xor
sub
fimull
inc
ds
out
int3
mov
sub
push
pop
or
push
dec
sub
inc
cmp
insb
out
lahf
add
imul
cs
rclb
sbb
int3
dec
add
jle
jmp
jmp
push
push
mov
lea
push
dec
cmp
cltd
sti
test
push
les
bound
movsb
stos
add
and
sbb
pop
or
mov
xor
xchg
cmp
sub
mov
jmp
shl
cs
mulb
mov
and
cmp
fisubrs
fdivr
push
xchg
fwait
mov
inc
sbb
outsb
jo
mov
loopne
repz
or
or
xor
dec
sub
test
imul
out
adcl
dec
or
hlt
pusha
and
adc
call
pop
mov
int3
inc
test
nop
mov
mov
cmp
sbb
mov
clc
mov
xchg
push
mov
mov
pusha
mov
mov
xchg
sbb
mov
les
add
pop
inc
stos
jb
das
cld
mov
insb
or
mov
outsb
mov
mov
icebp
push
mov
adc
add
test
pop
mov
loopne
enter
dec
sbb
jne
adc
jne
xchg
fimuls
inc
dec
repz
push
aas
in
data16
inc
fidivs
dec
xor
fsub
es
or
sub
sbb
cmp
mov
in
mov
adc
clc
pop
ret
sbbb
scas
sub
xchg
xor
xor
pop
lods
imul
push
mov
xor
lahf
insb
and
insl
add
cmpsl
mov
push
outsl
test
adc
out
xor
insb
adcb
jne
out
rorl
jno
xorb
mov
xor
es
sbb
jo
pushf
push
inc
mov
dec
nop
das
jb
cmpsl
mov
nop
inc
in
xchg
cwtl
jmp
mov
aam
mov
mov
xchg
insl
movsl
dec
sub
mov
cld
add
mov
or
roll
divps
mov
js
cltd
repz
inc
mov
popf
xchg
inc
mov
mov
mov
lods
das
sarl
adc
cld
repnz
mov
jl
pop
inc
jecxz
jl
sbb
iret
adc
shlb
inc
ss
lcall
push
adc
bound
mov
sub
xchg
cmp
sub
test
dec
and
dec
ret
call
push
rclb
lret
adc
daa
lret
std
rcll
icebp
and
mov
jns
dec
ret
dec
mov
pusha
sub
mov
inc
lock
pop
scas
lods
push
push
sbb
push
cmp
dec
inc
ss
pop
in
gs
mov
pop
mov
aas
mov
popf
test
pop
mov
iret
mov
gs
xor
pop
test
jo
jb
fs
in
push
sub
cmp
cmp
mov
inc
pop
mov
fisubl
test
int
xchg
dec
out
jne
sub
jle
lock
in
cld
or
xchg
fimuls
loop
clc
adc
add
jmp
add
cwtl
adc
mov
pop
jo
jne
xchg
inc
jp
jbe
out
jl
pop
push
jl
dec
jbe
jp
xor
call
shl
xchg
xchg
jnp
clc
mov
lahf
inc
call
mov
sub
or
inc
mov
dec
xor
mov
jl
fsubrs
mov
loope
aad
cmpsl
add
orb
les
push
lret
stos
cmp
stc
cmp
jne
mov
mov
fnstsw
sub
jo
imul
loop
insb
gs
repnz
mov
mov
pop
or
cli
js
sub
outsl
arpl
mov
inc
es
mov
loope
inc
lds
out
mov
xchg
sbb
sbb
xchg
add
and
outsb
add
rcl
xor
fadd
jb
nop
lods
cmp
repnz
adc
notl
xchg
mov
shl
int3
aam
std
jae
test
in
ja
sub
xchg
xor
gs
xchg
cmc
add
mov
pusha
dec
pop
jns
pop
stos
adc
xchg
mov
mov
pop
stos
mov
lods
mov
inc
pop
bsf
mov
push
in
mov
loop
adc
and
mov
into
jo
adc
test
xchg
or
and
out
call
push
lret
jb
cmp
jnp
xchg
sbb
rsqrtps
jbe
or
adc
popf
mov
xchg
aas
xchg
mov
dec
dec
xchg
aas
mov
xor
fmul
dec
pushl
push
jbe
adc
leave
sbb
std
sub
cmpsl
fmull
das
lcall
sbb
cmpsl
xor
faddp
rcl
mov
push
aas
xor
and
mov
adc
mov
sbbb
inc
insl
jecxz
mov
mov
orl
or
stc
stos
cmp
fdivp
or
sub
mov
iret
sub
sar
lahf
aam
dec
push
data16
mov
sbb
sahf
loope
jle
stos
scas
stos
pusha
jb
sub
dec
push
xor
push
icebp
sub
addr16
loope
ret
cmp
jle
mov
and
sbb
enter
push
outsb
stc
inc
sub
push
or
cmpsl
dec
inc
pushf
sub
insb
dec
adc
aas
or
xchg
dec
cmpsl
out
shrl
xor
push
popa
clc
hlt
or
xor
popa
or
rorb
ffreep
add
pop
je
or
adc
mov
hlt
xor
adc
push
xor
dec
iret
out
pop
pop
iret
bound
mov
dec
pop
jecxz
inc
sbb
es
mov
mov
mov
rorb
mov
xor
scas
sbb
aaa
pop
outsl
push
lahf
mov
mov
xorb
scas
fldcw
cltd
repz
mov
sti
test
and
dec
dec
popa
inc
nop
fidivl
fisubs
ljmp
fistpll
mov
rclb
and
adc
jmp
aad
mov
clc
addr16
pushf
ret
out
pop
or
les
mov
cs
mov
jno
or
std
aam
push
daa
xchg
jl
adc
pusha
mov
scas
ror
pop
sub
mov
pop
idivb
into
sbb
scas
jbe
imull
lret
loopne
jo
in
call
inc
jae
gs
movl
aaa
movsl
iret
xor
add
sarb
cli
es
pop
int
adc
aam
xchg
mov
in
lret
and
jae
fnsave
call
fsubp
mov
jbe
jmp
call
sub
jnp
lret
mov
sbb
add
shrb
and
jl
dec
test
jnp
mov
popa
fsts
push
cmp
push
mov
shll
mov
loope
cmp
push
xchg
das
lods
shlb
mov
mov
adc
shll
data16
je
outsb
div
push
stos
pusha
sarl
adc
test
xor
aaa
inc
lock
dec
mov
add
loope
xchg
and
cmp
mov
int3
adc
es
or
mov
scas
cmc
aaa
fists
mov
xchg
arpl
insl
xchg
stc
ss
mov
cltd
pop
sub
mov
and
adc
ja
mov
fld
jno
test
pop
or
fistpl
dec
add
cmp
jb
hlt
push
repnz
xchg
bound
aad
mov
mov
aas
int3
push
stc
in
stos
lret
mov
mov
mov
jns
lock
add
xchg
sti
inc
idivl
cmp
adc
push
cmp
push
pop
shlb
int
push
repz
cs
add
cmc
movsl
shlb
push
pop
sbb
sbb
adc
into
out
lahf
fs
aam
int3
mov
inc
imul
pop
movsl
jbe
pop
jns
enter
or
xchg
andb
cmp
sub
fiaddl
adc
and
xor
inc
mov
stos
je
test
jp
push
sbb
or
cmp
sub
fiaddl
adc
and
xor
inc
mov
stos
je
test
push
push
sbb
push
aam
in
hlt
fiadds
adc
and
xor
pusha
lcall
mov
sbb
cmp
stos
xor
add
mov
in
int3
add
inc
sbb
pop
in
cmc
aaa
dec
out
lret
sub
fwait
gs
mov
adc
test
daa
cmc
aaa
test
push
movsl
addr16
inc
test
xchg
lds
test
aas
cmc
test
dec
movsl
jg
insl
inc
fs
or
jne
add
mov
negl
push
cltd
mov
scas
stc
dec
mov
or
sbb
mov
push
jmp
sbb
lods
lea
push
mov
int3
xchg
test
mov
mov
mov
inc
adc
jb
mov
nop
loop
adcb
loopne
cs
fwait
inc
add
push
sbb
xlat
inc
sbb
pop
daa
cmc
pop
mov
aas
mov
enter
fwait
inc
pop
dec
cli
xchg
push
sub
aas
xor
xlat
fsubl
stos
es
lock
or
xchg
loopne
or
jne
xor
cmp
sub
es
jle
inc
jge
mov
pop
mov
adc
pop
cmpsl
push
xchg
cwtl
mov
or
aad
in
cmc
sub
movsl
jle
outsb
inc
lahf
push
gs
adc
xchg
test
pop
mov
pushf
test
out
rorl
sbb
xor
gs
test
jae
mov
push
cltd
xor
add
sbb
incb
shll
add
jnp
dec
mov
mov
inc
cltd
inc
leave
sub
ja
xchg
cmpsl
jne
add
out
test
daa
cmc
aaa
test
push
movsl
addr16
inc
xchg
cmpsl
jne
add
out
test
push
fisubl
jp
xor
inc
lahf
xor
fs
sub
cmpl
ja
lock
dec
fs
mov
stos
mov
jno
pop
xor
cmp
xor
dec
jbe
jbe
sbb
cmp
shrb
push
sub
icebp
iret
pop
mov
shrb
insl
imul
out
imul
adc
jg
inc
jecxz
and
and
add
data16
aaa
incl
mov
xor
mov
add
lock
insl
into
mov
push
stos
jnp
adc
iret
fstps
popf
mov
addr16
ret
add
fistps
icebp
pop
xchg
pop
test
mov
and
push
add
testb
js
movsl
stos
pop
add
or
xchg
xchg
test
cmpsl
jecxz
jb
je
jne
push
lods
rclb
push
lea
ret
out
clc
add
scas
jle
dec
call
xor
imul
andb
xlat
xchg
add
loopne
and
arpl
aad
dec
enter
xchg
cmp
inc
negl
and
cmp
fs
testl
jmp
fsubrp
mov
mov
fstpt
stc
lcall
pop
mov
xchg
rolb
ds
cld
rolb
dec
xchg
jmp
loope
outsl
into
jg
dec
mov
add
pusha
adc
shrb
js
mov
daa
jl
sbb
ret
xlat
adc
ds
push
out
setle
sbb
cmpsb
call
imul
xor
lret
xchg
das
push
lahf
push
push
add
jle
xlat
pushf
or
sub
loopne
adcl
push
cs
push
sub
jne
pop
and
mov
les
cmp
mov
mov
cmpl
pusha
in
shll
call
xor
sbb
sub
inc
push
jns
outsb
in
adc
mov
lock
lods
cmpsb
in
ja
xchg
leave
loopne
mov
gs
sub
adc
dec
test
push
ficomps
mov
test
sbb
mov
clc
push
jge
sub
adc
cmpsl
mov
cmp
insl
rcrl
push
pop
call
in
iret
or
xchg
je
dec
daa
pop
test
adc
sbb
gs
jmp
fnsave
data16
pop
int
aaa
jbe
mov
adc
jae
clc
push
scas
iret
push
je
adc
cmpsl
mov
sar
jo
outsl
repnz
pop
aaa
dec
jne
cmp
mov
in
std
adc
and
adc
test
cli
jae
addr16
xor
push
sbb
mov
cmpsb
mov
out
sahf
call
clc
jnp
pop
fsubr
mov
testl
xor
push
mov
mov
dec
xor
inc
repz
lret
fs
aad
fs
imull
stc
dec
lds
mov
rorl
in
dec
daa
mov
rdmsr
and
out
jl
daa
pop
xchg
xchg
leave
fmul
adc
outsb
ds
enter
insl
pop
sbb
xor
mov
scas
rorl
dec
shlb
lahf
stos
clc
stos
adc
in
xor
addl
pop
out
mov
sahf
xor
dec
sbb
fs
cmc
inc
push
sarb
pop
push
ja
and
mov
adc
in
sbb
jmp
enter
nop
push
push
push
ja
shrb
and
sarb
or
insl
cltd
rorb
loop
sarb
inc
xchg
daa
add
adc
sub
insb
and
movsl
dec
lahf
xor
test
pop
sub
loopne
ss
jg
inc
pop
push
adc
sbb
sub
js
in
lods
jae
mov
addr16
jne
jg
xor
pop
idivl
aad
loop
ret
shrb
push
sub
mov
idivb
dec
scas
imul
test
add
cmp
test
fmull
mov
inc
iret
sub
gs
nop
mov
insl
es
iret
js
jne
xchg
out
imul
fcoms
out
sbb
jge
mov
mov
and
cld
pop
xchg
mov
pop
loopne
daa
jo
or
xchg
dec
sbb
mov
adc
pop
pop
xchg
cmpsb
push
and
sbb
sub
dec
insb
add
cmp
adc
dec
adc
dec
js
mov
mov
inc
ss
inc
mov
lea
adc
cmc
rorb
mov
iret
cmc
xchg
jns
nop
pushf
insl
mov
mov
nop
sti
sub
jo
xchg
rclb
add
dec
ljmp
or
outsb
lret
pop
mov
mov
and
xor
fxsave
push
inc
mov
mov
pop
push
in
push
ja
ficomps
hlt
jb
outsl
imul
mov
pop
popa
or
push
mov
mov
mov
inc
movsb
xor
ja
dec
jmp
stos
arpl
mov
xchg
push
xchg
cmp
jbe
pop
mov
cmpsl
decb
cwtl
mov
test
loopne
add
popa
clc
jnp
pusha
xchg
or
push
test
mov
inc
jne
into
mov
mov
jl
pop
push
cld
nop
cmpsl
pop
ljmp
mov
aas
push
jl
out
dec
inc
daa
cmp
int
ror
lret
mov
dec
loopne
sbb
loope
jne
loop
cmpsb
fmull
repz
lea
lock
shrb
and
jnp
cmc
out
imul
or
pop
pop
push
sbb
ja
movsl
bound
mov
outsl
pop
cmp
inc
push
popf
xchg
xor
mov
das
jl
bound
pop
test
cmp
dec
mov
sbb
scas
xchg
adcb
roll
in
jbe
push
mov
adc
andl
and
or
or
ret
repnz
jne
test
in
aas
xlat
sub
mov
mov
fisttps
pop
shrl
mov
imulb
jle
sbb
addr16
mov
movsb
outsl
mov
shll
mov
add
notl
xchg
out
ljmp
dec
push
ret
push
and
jne
cmp
test
std
adc
pop
mov
mov
inc
aaa
cmpsl
cmp
dec
inc
call
fbld
cwtl
jne
cmc
mov
lods
int3
and
nop
popa
mov
pop
xchg
add
sar
repnz
pop
sub
lahf
adc
and
or
sbb
mov
push
out
mov
mov
sbb
pusha
ljmp
sahf
aad
test
adcl
push
or
push
ljmp
movsl
mov
cmp
lea
mov
sbb
fmuls
es
xchg
addr16
fcom
imul
add
out
mov
push
je
cmp
movsl
xchg
lods
add
das
in
sub
test
nop
push
pop
test
pop
stos
in
shrb
or
out
or
jecxz
sub
mov
and
xor
fstl
and
cmc
rolb
fdivrs
out
je
insb
dec
inc
shll
test
mov
ret
mov
push
dec
sbb
int
xchg
add
push
es
cmp
dec
mov
sub
test
lods
or
xchg
sahf
pop
rorl
cmp
outsl
lret
inc
ret
aas
jnp
and
xchg
lcall
adc
and
popa
repz
repz
mov
jmp
lret
mov
xor
cmp
push
ljmp
fcom
shl
ret
push
js
scas
lcall
jns
or
ds
lods
xlat
jp
imul
rol
lds
mov
lods
push
lods
rcr
mov
and
test
hlt
shrl
add
dec
xor
adc
insl
mov
incb
push
jl
sub
ja
shlb
push
imul
lea
jmp
pop
pop
or
push
xchg
inc
adc
sbb
notb
outsl
pushf
xchg
ljmp
imul
xor
scas
adc
xchg
dec
inc
jnp
sbb
mov
jecxz
inc
and
int
mov
xchg
push
movsb
mov
loop
in
jl
sbb
pop
and
adc
adc
lds
repz
cmp
pop
cmp
cmp
xchg
out
je
rorb
push
aaa
or
inc
inc
test
lea
push
jecxz
jns
mov
adc
call
cmp
or
adcl
fistl
add
jno
or
push
movsb
mov
lcall
dec
dec
aaa
outsb
mov
or
mov
sub
mov
or
shll
sahf
mov
andl
sub
mov
or
mov
add
xor
pop
movlps
mov
xor
int
das
into
cmpsb
bound
es
shlb
xor
insl
lret
xchg
inc
lcall
int3
cli
outsl
ljmp
mov
rcrl
fisubrl
xchg
add
mov
nop
or
shll
mov
nop
fwait
out
test
inc
pushl
xchg
test
cmp
ss
fs
decl
and
adcl
or
int
xchg
popa
outsl
dec
pop
mov
xor
adc
cmpsl
sub
shlb
cs
mov
lods
mov
push
aad
cmp
mov
push
aam
xlat
jg
rolb
adc
out
mov
pushf
pop
pop
daa
push
fs
push
dec
call
jge
sub
pop
call
gs
adc
xchg
cltd
lret
pop
xor
aam
jae
lock
mov
fidivs
and
xchg
cmp
jl
scas
inc
fadds
enter
jae
and
out
hlt
repz
mov
mov
pop
ficompl
es
jae
inc
sub
sub
mul
push
icebp
fimuls
fbstp
adc
roll
idivb
mov
lds
jbe,pn
push
dec
add
push
xchg
arpl
sahf
lcall
mov
mov
inc
xor
jb
cmpsl
shlb
sub
mov
jecxz
push
jbe
push
fsubs
test
adcb
sbb
xchg
pop
repnz
call
adc
cli
pop
or
sbb
dec
cmp
sub
aam
mov
out
ja
mov
jp
sub
jmp
mov
rorl
cmp
jecxz
imul
in
inc
pop
cmpsl
movsl
jnp
sub
insl
mov
je
mov
dec
nop
loopne
in
stos
sub
outsb
pop
pop
and
inc
cmp
mov
stos
in
push
out
fidivl
lret
rolb
dec
mov
mov
pop
in
mov
fwait
sti
or
jecxz
insb
pop
or
movsb
jnp
mov
je
xchg
sti
or
cltd
insl
sbb
jo
adc
outsb
sahf
shlb
iret
pop
mov
aam
decb
pusha
add
lds
adc
add
aas
jl
pushf
rorb
test
inc
push
xchg
or
fisttpll
mov
es
dec
inc
cmp
mov
xor
xchg
loope
mov
jg
xor
push
inc
outsb
mov
jns
jmp
push
mov
jecxz
and
xchg
movsl
lcall
cmp
xchg
mov
stc
mov
adc
outsb
loop
sub
cmp
push
pop
adc
cld
inc
insb
jg,pn
xor
nop
dec
pushl
out
push
cmp
cs
sub
cld
js
sub
lret
movsl
int3
cli
aad
roll
in
lock
push
adc
adc
ss
mov
mov
rol
and
sub
je
pop
das
fs
cmpsb
shll
sub
in
sbb
sub
popf
jl
pop
and
lods
cwtl
sub
gs
mov
leave
pop
adc
inc
movsl
icebp
pop
sub
pop
and
in
jle
xchg
mov
in
or
stos
loopne
fstpl
aas
orl
pop
sarb
inc
fistpll
insb
fcomps
inc
mov
insb
shrl
mov
stos
adc
lcall
pusha
das
shr
in
pushf
in
jle
push
das
movsb
mov
dec
mov
dec
inc
lret
adc
arpl
aaa
or
or
mov
in
xor
nop
sahf
mov
ds
push
shll
add
fisubs
xchg
adc
push
test
mov
not
inc
cmp
sahf
jmp
aad
out
push
les
iret
lods
sub
cmp
or
jno
hlt
or
imul
pop
inc
mov
pop
fsubrs
iret
adc
or
icebp
or
insl
icebp
add
jb
fwait
rcrb
sub
mov
pop
in
ss
mov
mov
int
pop
data16
adc
rcll
adc
mov
mov
xor
xor
dec
fdivrl
cmp
jmp
in
sub
or
aaa
mov
inc
mov
xchg
push
jno
andnps
into
adc
dec
jle
cmpsl
sub
dec
sub
fimuls
mov
test
hlt
rcr
sbb
dec
cmp
test
xchg
adc
xchg
xchg
pop
imul
cmp
arpl
xor
int
inc
lahf
data16
pushf
jbe
loop
jge
pop
in
stos
dec
movsb
xor
cli
push
dec
inc
jb
push
lret
imul
test
inc
hlt
loopne
ja
jbe
data16
xor
and
mov
adc
cs
xlat
pop
test
sahf
pop
jge
and
or
inc
add
mov
cmp
cli
push
jle
push
push
push
cmpsb
dec
sbb
adc
mov
sub
and
fdiv
cmp
adc
clc
or
nop
xchg
jl
sahf
outsl
sub
jno
mov
ss
mov
jne
sbb
leave
int
mov
lcall
pop
cltd
mov
xor
jmp
pop
mov
xor
and
sbb
cmp
cmp
test
fwait
loopne
ss
daa
and
arpl
dec
jns
pop
mov
pop
div
push
and
aad
mov
scas
dec
ljmp
inc
out
jp
jae
movsb
ja
mov
push
sti
push
call
dec
outsb
mov
mov
cmpsl
inc
pop
dec
jns
and
gs
loope
and
mov
in
adc
mov
imul
cli
outsb
push
nop
adc
cmpb
push
mov
inc
and
mov
mov
xor
add
inc
mov
sub
ret
jbe
adc
jo
or
sbb
jp
pop
cmp
jo
xchg
cwtl
fisubrs
mul
sar
push
mov
cmp
adc
xor
push
cmp
fdivrl
inc
cmp
cmp
les
sub
sub
shl
ret
aad
loope
mov
push
call
xchg
pushf
dec
idivl
imul
xlat
jecxz
mov
ss
xor
addl
xor
jmp
popf
gs
jnp
pop
cmc
and
push
dec
mov
cmc
movsb
in
inc
sbb
or
adc
in
hlt
pop
sbb
inc
mov
dec
dec
stos
outsb
mov
jmp
sub
xchg
sbb
and
cmpsl
push
xlat
add
mov
sti
adc
xchg
sub
sahf
mov
pop
pop
lock
add
cli
enter
daa
xchg
addr16
jbe
fwait
xchg
sbb
shrl
and
fdivrs
pop
insb
addr16
imul
cmp
or
mov
and
scas
fmull
push
or
jmp
xchg
inc
adc
out
adc
clc
dec
enter
outsb
lock
and
push
sbb
pop
pop
cmpl
fistpll
inc
shr
cmc
and
arpl
xchg
add
xchg
mov
in
sub
call
daa
xchg
rolb
popa
in
add
lahf
xchg
andl
push
mov
aas
dec
mov
mov
or
lahf
push
das
push
mov
lods
fdivrs
adc
lock
xchg
clc
mov
push
cwtl
sbb
add
mov
mov
sahf
mov
jbe
push
adc
mov
frstor
lea
nop
push
nop
jge
ret
mov
ret
mov
jl
xchg
cmp
sub
aad
addr16
xor
sbb
and
xchg
bound
sbb
adc
movsb
sbb
xlat
js
dec
out
int
out
xor
insl
scas
and
mov
jp
xor
jae
xchg
dec
push
and
mov
lds
cmpsb
dec
sbb
fcomps
add
cmp
xchg
fadds
ds
dec
imul
push
sbb
pop
fadds
cmpsb
iret
jge
jbe
mov
jl
dec
xor
daa
inc
lods
lret
or
sub
pop
cmc
adc
in
pop
mov
aas
insl
lret
pop
cld
or
and
xchg
dec
test
cli
std
std
mov
jo
add
aas
sub
imul
xchg
add
repnz
insl
cmpsb
mov
lods
pop
mov
clc
arpl
insb
lock
popa
sbb
rol
xchg
fiaddl
mov
mov
inc
add
inc
int
pop
icebp
mov
lds
addl
inc
repnz
fs
xchg
out
adc
mov
push
mov
pop
dec
sarl
dec
mov
mov
paddsw
lds
or
jge
and
dec
xchg
repnz
mov
mov
mov
cwtl
or
test
jb
ljmp
inc
adc
pop
push
mov
iret
cmc
imul
jl
adc
ficompl
test
js
loop
movsb
or
rolb
leave
lods
lock
mov
cmp
and
mov
sub
add
test
pop
push
jb
out
cli
pop
dec
pop
hlt
mov
sbb
jne
out
loop
sbb
add
or
and
cmp
rcrb
push
inc
xchg
sti
sbb
xor
insb
mov
std
push
in
mov
aad
mov
outsl
out
pop
dec
pop
ss
cmp
repnz
mov
mov
or
cld
fwait
mov
add
adc
xlat
ljmp
and
je
dec
imul
mov
leave
or
in
lret
scas
aas
pusha
stc
or
mov
into
mov
xorb
mov
cmpsl
pop
or
adc
mov
xchg
mov
jle
pop
clc
call
push
dec
ds
in
ds
addr16
adc
insl
cmp
clc
xchg
cmc
inc
mov
inc
or
mov
popa
subl
inc
cmp
in
fwait
mov
mov
ljmp
sbb
cli
ret
inc
das
and
pop
xchg
inc
xchg
in
xor
cmp
mov
xchg
std
push
and
mov
gs
or
mov
sarl
js
pusha
add
jo
fstpt
aas
jno
pop
xchg
rcrl
fisubrs
mov
pushf
push
push
mov
lods
adc
aad
sub
adc
ljmp
xchg
add
insb
adc
mov
cmpsb
mov
dec
xchg
cmp
pop
push
pop
hlt
or
mov
push
dec
mov
rclb
fpatan
faddl
pop
push
test
xlat
sarl
flds
adc
xchg
outsl
loop
sahf
mov
std
jb
jecxz
sbb
stos
dec
and
jp
or
lret
adc
xor
call
push
xchg
shrl
movb
or
in
aad
push
dec
dec
and
je
xchg
stos
cmp
dec
mov
das
xchg
sti
pop
xchg
cmp
dec
mov
or
repnz
lea
adc
mov
shl
mov
fidivl
pushf
pop
out
jno
loope
mov
hlt
mov
shlb
cmp
ret
xchg
xchg
inc
mov
ss
loopne
repz
push
inc
mov
sub
sub
sub
sub
jae
outsb
dec
fcmovnbe
xor
sbbl
xor
adc
ds
loope
fidivs
xchg
mov
cmp
loopne
add
in
fcmovbe
xchg
arpl
hlt
lcall
movsl
aam
cmp
lock
sbb
cmc
sub
les
mov
mov
jns
int3
bound
lods
in
in
mov
adc
lds
flds
xor
lods
arpl
lret
ret
sub
sub
dec
ret
xchg
pop
adc
test
lds
hlt
mov
xor
in
or
iret
cli
adc
scas
clc
jo
jno
cltd
and
and
dec
mov
nop
adc
jno
or
not
std
aad
inc
pop
sarb
cld
xor
xor
lret
mov
int3
lds
arpl
bound
outsl
or
and
push
dec
xchg
stos
mov
scas
mov
std
mov
mov
bound
pop
in
cmc
aaa
test
push
movsl
addr16
inc
xchg
cmpsl
jne
add
out
test
daa
cmc
aaa
test
push
movsl
addr16
inc
xchg
cmpsl
jne
add
out
test
daa
cmc
aaa
add
addr16
xchg
cmpsl
jne
add
out
test
daa
cmc
aaa
test
push
movsl
addr16
inc
xchg
iret
cmpsl
jne
jne
sub
inc
or
jae
arpl
push
xor
jg
inc
adc
mov
mov
shlb
addl
adc
push
xor
xor
pusha
adc
xor
jecxz
shll
mov
add
arpl
push
xor
xor
pusha
adc
xor
rcl
aad
shl
hlt
mov
add
and
pop
inc
dec
adc
mov
mov
mov
or
mov
in
and
jmp
bswap
movb
cmpsb
pushf
sbb
sbb
dec
cmpsl
xchg
mov
push
xchg
mov
outsb
dec
cmp
adc
loopne
push
movsl
test
mov
mov
add
aaa
inc
jecxz
aaa
adc
nop
scas
and
jns
std
jo
sbb
and
cltd
jnp
push
pop
xchg
xor
mov
sti
and
sub
nop
loopne
mov
cmp
call
add
fucomi
les
pusha
inc
loop
mov
sub
and
xor
xchg
repnz
ret
jae
arpl
push
xor
xor
pusha
adc
xor
jecxz
shll
mov
gs
and
jbe
and
push
hlt
push
lock
loop
mov
mov
lock
movb
fs
inc
ss
and
jp
addr16
mov
aaa
fnsave
in
addr16
adc
and
add
adc
xor
jecxz
shll
mov
add
arpl
push
xor
xor
pusha
adc
xor
jecxz
shll
mov
add
or
inc
mov
inc
xor
inc
js
xchg
frstor
fsubrl
inc
pop
sbb
xchg
and
test
cld
fadds
dec
pop
mov
pop
inc
jb
test
stos
add
cli
out
out
ljmp
iret
and
and
xor
mov
pop
rcll
mov
dec
addr16
js
es
aas
mov
push
cmp
lahf
add
inc
mov
xchg
mov
push
mov
les
jns
je
push
push
jb
and
push
or
push
nop
sbb
mov
cmp
test
loop
cmpsb
in
sbb
fistl
inc
push
test
mov
fidivrs
loop
daa
mov
mov
adc
lahf
xchg
dec
adc
mov
stos
jb
pop
jecxz
and
decl
mov
inc
in
outsl
pop
jo
aaa
loope
sub
pop
sub
stos
aad
in
out
push
shlb
and
out
mov
push
shlb
pop
out
test
xor
ds
mov
push
rorl
sbb
cmp
mov
cwtl
push
mov
push
cmc
jo
test
push
popf
mov
shll
fs
xlat
inc
xchg
jg
pop
sub
fcmovnbe
mov
adc
fwait
jne
add
das
jg
fisttps
or
push
jnp,pn
xchg
mov
fwait
adc
xlat
ss
adc
push
loop
mov
sti
scas
das
xchg
sahf
push
cwtl
ret
scas
jno
mov
divl
cmp
lahf
xchg
inc
adc
fstl
rcll
pop
inc
lds
mov
fwait
dec
jnp
outsl
cmp
les
mov
dec
inc
sub
or
push
pushf
ret
mov
jb
mov
mov
adc
pop
mov
test
sub
cmp
jb
loopne
shll
lcall
sbb
add
dec
pop
ret
fsubs
nop
lea
mov
test
mov
pop
hlt
mov
push
xlat
leave
movsl
xor
inc
sbb
jecxz
sar
xchg
sbb
dec
imul
mov
daa
repz
shrl
enter
dec
add
jg
testb
das
les
lea
push
out
in
mov
cmpsl
or
leave
mov
icebp
ret
fcmovnbe
das
repz
lods
xchg
mov
sub
leave
fistpll
cltd
stos
inc
xadd
cmp
or
mov
out
sub
add
push
mov
loope
pop
add
leave
mov
push
add
sti
push
inc
jno
sbb
mov
mov
dec
call
ljmp
inc
inc
aad
fisubrl
movsb
inc
mov
fisubs
sub
add
repnz
fwait
and
inc
test
sub
stos
es
les
fcoms
or
cwtl
cmp
aam
leave
rorl
mov
int3
add
lock
les
lods
addb
push
lret
les
mov
xchg
jecxz
push
fisubl
fucomip
outsb
jno
jno
jae
vandnps
xchg
sbb
test
lock
rcll
push
mov
xchg
xor
imul
mov
inc
mov
lcall
test
push
mov
jmp
les
scas
pop
pop
inc
stos
xor
mov
xor
or
addl
push
icebp
mov
jnp
lcall
pop
push
bnd
in
push
mov
or
mov
dec
leave
inc
xor
adc
sbb
xchg
lahf
push
lock
out
dec
nop
push
scas
push
int
jmp
mov
clc
test
fnstsw
cmpl
imul
xchg
xchg
clc
or
ja
push
into
xor
jg
xchg
mov
loopne
inc
jle
std
jmp
pop
or
leave
jp
icebp
aam
fsubrs
mov
std
rorb
cmpsb
shrl
ficoml
scas
imul
loopne
inc
xor
mov
mov
xor
mov
mov
and
adc
test
jne
jg
cld
push
jb
xor
popa
sub
inc
out
dec
jle
or
pop
test
shlb
out
push
lcall
or
shll
loopne
movsb
in
outsl
popa
sbb
jb
fwait
ss
xchg
and
add
xchg
fisttps
sti
or
xor
adc
daa
pop
or
mov
call
mov
rclb
cmp
dec
push
lods
xor
inc
leave
popa
add
inc
lcall
rcr
inc
dec
fmulp
cmp
add
out
wbinvd
fs
cmpb
outsb
lea
cmp
mov
sbb
fistpll
add
inc
decl
push
inc
xor
cmp
cmp
inc
pop
xchg
mov
arpl
xchg
fldl
leave
out
jge
push
pop
lods
pushf
stos
pop
xor
jb
lret
or
shlb
push
lcall
xchg
addr16
sub
js
jecxz
xlat
stos
inc
dec
cmp
cmp
aas
or
bnd
imul
xchg
dec
jecxz
fs
mov
mov
pop
xorb
pop
push
mov
movq
and
inc
push
popf
insb
adc
je
imull
xabort
ljmp
testl
push
movsb
fcomps
xchg
or
ss
cmc
iret
xor
push
enter
sub
mov
sbb
sub
dec
jle
shll
mov
bound
fs
mov
cmpsb
stos
add
and
sub
addl
stos
jg
movsl
pop
iret
stos
inc
fstpt
adc
add
cmp
aas
jle
fistps
dec
sbb
mov
mov
mov
repnz
ja
into
cmpsb
loop
cs
mov
aad
sbb
out
and
les
or
mov
imul
lock
ds
aam
mov
out
push
stos
addr16
pusha
lods
in
inc
leave
in
nop
add
popf
int
jg
push
adc
dec
push
mov
lea
jg
dec
and
shll
je
sbb
cmp
xchg
and
dec
es
ret
add
arpl
xlat
inc
int3
jmp
lret
push
jb
je
out
mov
dec
mov
mov
dec
jae
aas
iret
pop
inc
jnp
jmp
push
xchg
scas
or
add
lahf
cmp
jne
mov
inc
push
cwtl
mov
xor
jge
loopne
stos
nop
leave
scas
xchg
add
or
ljmp
mov
js
add
test
pop
add
rcr
cmp
mov
xchg
adc
aaa
add
lcall
cli
out
lret
push
mov
movsb
cmpsl
pushf
std
pop
ret
pop
ljmp
xlat
cli
or
pop
mov
movsl
into
aas
jnp
dec
cmc
jbe
sbb
push
cmp
pop
cmpsl
jo,pt
adc
pop
cmp
je
fucomp
nop
lret
cmp
xor
add
dec
or
lea
dec
push
mov
dec
popf
jne
push
pop
cltd
jnp
mov
adc
push
insb
test
cmp
bound
pushf
cmp
and
sub
or
iret
cmp
loop
sysexit
xlat
push
xor
das
cltd
mov
outsb
test
inc
mov
pushf
add
in
xchg
ficoms
movsb
loope
aad
sbb
ja
or
push
adcb
aaa
mov
inc
into
sbb
lods
sub
push
fadds
add
or
mov
jle
out
xor
pop
jne
fnstcw
jge
daa
sub
sbb
fiaddl
in
das
data16
jg
jbe
dec
push
xor
insl
lea
in
iret
pop
pop
decl
in
or
jns
sbbl
jg
inc
outsl
popf
daa
add
out
cmp
jmp
jmp
push
dec
pop
xor
lods
lret
xor
cltd
mov
mov
and
test
xchg
repnz
rclb
nop
sub
adc
loope
std
jmp
push
cltd
imul
repz
clc
popa
add
ficomps
jb
push
mov
xor
lret
or
xor
sti
jmp
ja
leave
jno
mov
dec
add
fimull
adc
cmp
adc
scas
mov
mov
dec
jle
push
push
push
cmp
and
movsl
inc
xchg
ljmp
popf
xchg
cld
fsubs
cli
es
pop
mov
add
cli
dec
push
in
pop
call
add
bound
je
dec
rcr
movsl
imul
adc
mov
adcl
jo
jmp
sub
aad
xor
pusha
cld
mov
inc
cltd
xchg
bnd
lods
fldl
sub
pop
inc
mov
dec
push
imulb
inc
iret
dec
lcall
fisttps
out
mov
mov
fsubr
fcmovb
mov
xchg
jbe
dec
mov
shlb
cmp
sbb
fistpll
xchg
xor
inc
cli
inc
shlb
inc
xor
xchg
xchg
push
out
cmp
add
sahf
daa
xchg
mov
in
jne
mov
scas
andl
xchg
xor
jge
push
in
jmp
sbb
adc
sbb
mov
mov
jge
test
stos
cmp
xchg
xchg
mov
imul
or
adc
adc
jnp
stos
adc
pop
xor
dec
jl
sub
sub
fwait
ret
push
mov
stc
push
cmc
lahf
js,pn
pop
adc
xchg
mov
jge
sub
xor
dec
bound
mov
xlat
or
das
dec
push
bound
jno
push
sub
fsubs
mov
pop
imull
mov
iret
add
mov
lock
jecxz
cs
fs
cs
sbbb
cmp
jle
lret
jg
jnp
pop
mov
sbb
ret
mov
imul
cmp
lea
push
fdivrl
jb
adc
xor
inc
pop
imul
mov
and
gs
sub
lcall
jbe
out
xchg
movswl
push
push
ret
and
bound
in
mov
nop
ret
setns
jae
pop
dec
loop
xor
ud1
add
xchg
fs
ljmp
push
mov
mov
ret
iret
dec
xchg
clc
fbstp
lods
xchg
or
xlat
sbb
ds
rcll
insb
xor
push
popa
mov
dec
pop
sub
inc
sbb
lcall
shll
adc
xor
inc
cs
cltd
roll
pop
idivl
cmp
insb
fwait
inc
and
dec
push
mov
dec
jl
sti
jmp
scas
ss
mov
lret
ret
dec
and
mov
push
cltd
les
loope
push
adc
push
fcompl
fstps
pop
inc
popf
fisubs
stos
or
jle
outsl
xor
icebp
push
sbb
cbtw
ja
push
insl
jo
enter
fs
test
mov
arpl
jns
ret
ret
popf
pop
jge
shlb
pushf
push
sti
xchg
dec
jmp
mov
fidivrs
adc
pop
cmp
pushf
int
fnstcw
bnd
jge
mov
or
test
mov
sub
pusha
in
ljmp
jno
mov
icebp
jle
imul
lods
fwait
jmp
pop
xor
or
dec
and
push
or
sahf
mov
jl
sub
xor
addr16
je
in
nop
es
insb
out
orb
xchg
ss
testb
rcr
imul
jle
sarl
xchg
mov
push
lahf
rolb
xchg
mov
dec
mov
imul
jge
jle
cmp
pop
pop
mov
lret
dec
add
fsub
and
dec
mov
jl
and
pop
or
and
sub
lock
add
test
pop
imul
inc
nop
jle
jb
or
inc
xchg
insl
outsl
and
sbb
dec
fs
fdivrl
pusha
pop
popf
fprem1
fwait
mov
sbb
aaa
jae
es
sbb
mov
lods
fidivrs
xchg
repz
dec
mov
jne
mov
jnp
sbb
in
pop
mov
into
mov
in
cmpsb
stc
sbb
call
test
and
out
mov
cmp
xor
negb
out
push
mov
adc
dec
lock
in
in
call
inc
ds
sbb
inc
ss
inc
sub
stc
add
add
pop
mov
shlb
stos
outsl
out
ljmp
aas
jmp
push
fistpll
mov
mov
cmp
mov
test
int
ljmp
push
rcl
orb
add
xor
fildll
fisttpll
inc
dec
mov
push
fisubrs
sub
je
jmp
sbb
dec
insl
nop
xor
sti
push
mov
das
es
and
adc
sbb
push
int
fdivrl
mov
pop
add
sub
sub
popa
push
out
test
jmp
arpl
dec
sti
jns
imulb
mov
dec
leave
mov
lcall
jo
jbe
ret
push
xchg
jbe
rol
imul
adc
and
je
jnp
mov
mov
sub
ret
stc
call
rclb
sahf
xchg
popf
pop
lea
jb
jmp
js
loopne
push
sbb
and
xor
mov
out
push
cs
stos
test
mov
cltd
lcall
repz
fidivl
push
js
jo
aas
in
in
lret
mov
push
xchg
shll
mov
jmp
pop
ror
imulb
sahf
mov
sub
mov
rolb
js
rcrl
sbb
cltd
mov
loop
imul
decb
sti
addl
jp
sti
push
mov
xchg
jg
movsb
outsb
std
sub
sbb
negl
fs
sbb
test
dec
lea
jecxz
je
adcl
and
xorl
cwtl
pushf
into
jg
sbbl
xor
lods
mov
lock
pop
inc
xor
mov
pop
jo
leave
sbb
push
fld
jno
inc
stc
mov
push
dec
loop
test
daa
sbb
mov
or
push
xchg
mov
mov
jge
aaa
mov
or
neg
testb
xor
es
sahf
cmp
imul
inc
xchg
lahf
hlt
inc
push
lea
pop
adcl
add
sub
test
mov
cmp
mov
mov
imul
adc
iret
mov
test
push
cmpb
dec
and
scas
adc
inc
sub
movsl
xchg
js
and
xchg
cmpsl
push
test
jg
bound
push
leave
testl
movsl
aas
insl
dec
xor
adc
mov
negl
test
jns
aaa
dec
in
loopne
add
imul
xchg
sub
stc
adc
or
jne
mov
dec
or
std
xor
ss
cmpsb
fs
mov
scas
adc
test
in
cmc
mov
cmp
std
push
leave
jle
daa
mov
rcrb
add
xchg
test
adc
cmp
lret
loopne
inc
push
dec
push
mov
fdivr
loope
fistpl
lock
pusha
push
mov
int
jg
lock
adc
push
mov
mov
push
rcr
xchg
jmp
call
std
repz
popa
imul
fs
lock
push
jle
inc
mov
test
out
mov
add
xor
xor
cmp
sub
fs
add
decb
xchg
loope
jmp
wbinvd
lret
adc
insl
call
sbb
mov
pop
mov
arpl
xchg
xor
idivb
or
mov
daa
or
xchg
pushf
mov
push
movb
mov
jecxz
jl
in
mov
dec
or
jp
pop
addr16
shl
add
adc
je
pandn
insl
lods
paddusb
dec
dec
and
fwait
aaa
mov
scas
imul
into
inc
arpl
in
das
xchg
sub
xorb
mov
sub
rep
pop
and
dec
pop
imul
push
das
cmp
cmpsl
loopne
ret
lods
push
inc
push
xlat
nop
push
dec
stos
xor
movsb
jl
adc
cmovle
mov
pop
pop
or
sbb
leave
fcomip
in
aam
mov
mov
pop
push
jns
fwait
mov
rcr
popa
out
adc
mov
push
adcl
sub
out
pop
lret
dec
mov
push
mov
je
in
mov
cmpb
ret
mov
popa
mov
xor
pop
je
repz
mov
addr16
mov
push
inc
imul
out
ljmp
pusha
jbe
leave
outsl
fiaddl
fsubrs
pushf
cld
cmp
aam
cmc
js
aam
xor
xor
out
scas
jo
jbe
sbb
inc
enter
pop
or
sbb
stos
pop
das
jnp
cmp
in
cmp
lcall
pop
and
int3
jge
sbb
add
jb
insb
jbe
mov
fwait
cwtl
adc
mov
lcall
insb
push
xlat
mov
movsl
push
mov
push
test
roll
cli
lds
push
or
loope
ror
sub
in
ss
lret
xchg
in
fld
sub
shlb
fsubl
adc
test
loop
xchg
stos
mov
stc
pop
sbb
les
outsb
mov
loopne
xchg
rcl
iret
insl
rcrb
ret
mov
in
fidivrl
mov
sarl
and
and
fidivs
pop
sti
sub
xlat
rclb
in
cltd
adc
loope
out
call
xor
xchg
addl
cmp
scas
ss
ficoml
jg
inc
icebp
mov
iret
es
loop
xchg
adc
aas
pop
into
push
mov
pop
push
lret
ret
jp
adc
push
push
mov
lock
cmp
xchg
jl
aaa
inc
filds
stc
movsb
enter
mov
addl
jns
and
xor
cld
or
push
dec
es
lods
movsb
xor
adc
adc
and
xor
jl
mov
pop
push
outsl
out
sub
and
push
or
pop
pop
aas
ljmp
jmp
dec
add
sbb
jmp
icebp
mov
fwait
lahf
jno
inc
test
je
iret
sub
lret
push
mov
pop
fdivrs
pop
pop
aad
es
xor
jb
mov
movsl
mov
push
jmp
shrb
in
jbe
shl
mov
sub
jg
ljmp
dec
xchg
sub
daa
pop
sub
stc
xchg
push
xchg
or
testb
dec
push
or
cmp
addr16
mov
cmpsb
inc
inc
movsl
mov
cmp
mov
add
addr16
fwait
mov
mov
push
out
addb
nop
sub
add
xchg
popa
push
out
cmpsl
in
dec
es
xchg
lret
xor
and
pop
fs
loopne
inc
sbb
mov
push
enter
out
inc
xchg
mov
cmpb
shrl
adc
out
xchg
sarb
imul
mov
arpl
sar
sbb
push
lods
out
mov
cmpsl
sub
xor
test
in
andl
scas
ss
imul
xchg
sbb
aad
pop
decl
push
sarl
adc
aaa
jmp
adc
sbb
mov
adc
mov
enter
loope
sub
mov
lods
or
and
nop
push
xor
icebp
dec
xor
les
ret
pop
and
int3
dec
lods
sub
sahf
pop
xchg
sub
xor
cli
arpl
bnd
shl
xor
js
xchg
cmp
fisubrl
subl
xor
adc
int
das
outsb
jb
fiaddl
dec
inc
inc
out
mov
aaa
mov
iret
mov
inc
test
and
out
les
cli
popf
mov
iret
ljmp
jae
and
lahf
xchg
fistps
outsl
xorl
ret
xor
xor
lods
leave
add
mov
and
cs
jmp
scas
adc
test
sahf
adc
icebp
lock
orl
dec
sbb
inc
push
shlb
arpl
ja
xchg
cltd
jo
ret
xor
dec
cld
mov
push
mov
fistps
movlps
mov
divb
and
jl
push
loopne
arpl
push
xor
xor
pusha
adc
xor
jecxz
shll
mov
add
arpl
push
xor
xor
pusha
adc
xor
jecxz
shll
mov
add
arpl
push
xor
xor
pusha
adc
xor
mov
shlb
addl
adc
push
xor
xor
loopne
lock
outsl
dec
or
mov
mov
pop
pop
sbb
push
nopl
cs
ds
push
daa
sub
jg
sahf
lahf
lods
scas
sahf
mov
out
out
lcall
nopl
push
das
ds
dec
dec
pop
pop
outsb
outsl
jle
test
jl
into
iret
out
lods
call
sysret
pop
ss
es
push
dec
inc
pop
jbe
imul
lret
lret
mov
jle
push
inc
bound
outsb
inc
mov
jnp
adc
addr16
push
cmp
out
cmp
cs
rorb
mov
inc
addr16
pusha
push
scas
mov
jb
mov
add
push
or
add
pop
mov
xchg
mov
pusha
outsl
inc
inc
xor
fwait
pop
inc
adc
jbe
sbb
pushf
into
jecxz
aas
imul
xchg
jle
mov
push
loop
dec
movsl
lea
scas
adc
jb
out
loope
ja
dec
rcrb
sahf
dec
jle
outsb
cld
xchg
enter
jg
and
push
jb
cltd
push
loopne
dec
mov
repz
rorb
cli
popa
lahf
push
mov
into
sbb
sti
dec
nopl
cs
sub
pop
dec
inc
pop
outsb
outsl
addr16
popl
mov
out
out
out
jge
jnp
dec
inc
pop
push
sub
xor
and
das
cli
ljmp
mov
in
fwait
mov
dec
das
cmp
cmp
xor
add
cmp
negl
shrb
mov
scas
addr16
sub
dec
inc
ds
ss
pop
pop
outsb
outsl
jle
mov
mov
fucomip
out
decl
nopl
cs
ds
dec
dec
pop
pop
outsb
outsl
jle
mov
mov
fucomip
out
decl
paddusw
popf
push
js
xorl
adc
mov
push
mov
cmp
cltd
push
insb
aaa
inc
or
pop
adc
dec
dec
sub
outsl
mov
sbb
jb
xor
cmp
adc
mov
loope
sub
xchg
mov
cmpsb
enter
int
dec
pop
loopne
pop
add
push
sbb
hlt
cmp
mov
sub
and
stc
shrb
jb
cld
sbb
xor
ret
xchg
xchg
mov
dec
or
dec
stc
and
fwait
ja
add
sarb
movswl
fsubl
mov
cltd
mov
mov
inc
push
cli
mov
and
sub
jo
sbb
adc
mov
pop
dec
mov
xchg
and
xchg
fwait
pop
push
sti
add
in
cmpsb
ret
push
gs
ret
xchg
scas
and
inc
inc
cmpsl
sub
cmp
add
xchg
lods
addb
out
mov
and
clc
movsb
leave
xchg
mov
stos
mov
inc
divb
inc
lock
fildll
and
ficoml
cli
in
add
and
adc
xchg
notb
or
adc
xchg
mov
inc
fcmovu
push
add
cltd
lods
ja
mov
in
repnz
push
adc
sbb
cmc
add
and
in
shr
dec
mov
push
icebp
dec
mov
scas
push
out
jl
ficoml
lods
lods
push
mov
sub
pop
mov
rol
mov
dec
in
andb
push
lods
dec
xchg
fwait
scas
add
jmp
fidivrs
sub
fdivl
mov
sahf
fidivrs
sub
xorl
xor
cwtl
sti
xchg
pusha
push
divb
xchg
mov
shll
lock
push
ret
fstps
out
and
mov
dec
adc
mov
scas
adc
and
inc
dec
mov
lcall
sbb
xor
mov
add
cmp
in
and
stc
rcrb
aaa
xchg
fisubs
mov
scas
xchg
out
inc
in
mov
xorl
push
pop
adc
xchg
jne
dec
jle
ss
cmp
into
icebp
cmp
repz
sti
mov
xchg
jae
inc
scas
pushf
sub
or
push
inc
xor
stos
xchg
aam
sbb
fiadds
xor
dec
mov
lahf
cmp
jns
cmp
popa
insb
cli
xlat
ret
movsl
or
sub
mov
movsl
xchg
pusha
or
and
xchg
adc
mov
or
lods
lds
fstp
xchg
and
mov
ss
cld
mov
cmp
int3
jne
mov
jno
ficoms
or
test
pop
cmp
xor
xchg
mov
test
or
dec
aas
push
pop
cmp
decb
pop
adc
arpl
adc
ja
into
aas
ljmp
pop
add
cmp
out
xchg
bound
sahf
xchg
hlt
cmpsb
pusha
fs
push
mov
pop
mov
sbb
repnz
out
mov
or
fstpt
pop
xor
cmp
cmp
pop
popa
mov
jno
jmp
cmp
out
sub
fwait
ret
sub
loopne
add
push
xchg
mov
js
dec
sub
add
sub
sbb
xchg
test
pop
sub
ljmp
inc
cli
lret
jne
adc
jg
push
cmp
adc
movsb
xchg
xchg
repz
test
enter
in
sbb
jp
addr16
fcoml
hlt
aam
repz
push
sub
xchg
out
cmp
push
in
aas
mov
imul
lods
mov
aam
gs
sti
xchg
sahf
fmull
test
inc
cmpsl
rcrb
iret
push
loope
push
orb
add
mov
testl
out
or
or
push
mov
add
pop
popf
mov
xor
inc
cmp
movsb
addb
pop
scas
xor
add
push
xchg
lds
inc
addl
inc
addr16
shlb
mov
fldl
es
push
xchg
decl
add
push
cld
mov
dec
cmp
in
in
inc
insl
inc
cmpsl
jbe
mov
add
jb
fcomp
daa
js
xor
imul
mov
dec
orb
stos
lcall
sahf
mov
icebp
add
mov
mov
sbb
adc
icebp
clc
shl
push
xchg
push
ljmp
and
loopne
inc
mov
pop
fwait
or
mov
xchg
jne
adc
insb
sbb
pop
fstpt
and
xchg
into
adc
jge
pop
cld
xchg
pop
cmpsb
cmpb
int3
xorl
fldenv
rclb
mov
jp
pop
mov
lea
sub
sbb
cmpsw
aam
cmp
cmp
mov
xchg
xor
jno
xchg
stos
dec
shll
jb
push
mov
cltd
testl
fdivrs
rclb
pop
xchg
cltd
jl
add
xor
dec
ja
je
mov
fstl
out
mov
dec
in
movsl
nop
jnp
lods
pop
xor
mov
and
clc
call
pop
mov
jp
fidivs
repnz
lret
clc
leave
cs
pop
mov
add
mov
pop
outsb
push
xchg
hlt
mov
in
mov
inc
cmpsl
popa
add
jge
inc
enter
dec
pop
pop
popa
push
sub
std
insl
add
dec
pusha
jg
jmp
pop
iret
adc
movsl
repnz
xchg
movsl
xchg
mov
shl
inc
out
movsl
pop
inc
adc
test
pop
lcall
jle
addr16
ret
add
fimuls
inc
ret
out
out
ficoml
bound
xchg
scas
cmpsb
popa
stc
cmp
cmpsl
mov
into
das
jge
test
sbb
sbb
mov
pop
out
mov
mov
sbb
cmovle
push
je
jl
jb
jbe
sub
dec
test
mov
add
pop
xchg
test
mov
imul
pop
stc
fnstenv
inc
jl
push
and
cmp
addr16
movsl
gs
xor
aaa
add
test
mov
leave
jl
pop
jnp
pmulhw
dec
addb
sbb
pop
sbb
mov
mov
pop
or
scas
or
clc
mov
adc
test
insl
xchg
dec
push
insl
mov
in
or
imul
push
je
inc
sbb
je
push
mov
bound
inc
fldcw
mov
inc
mov
lods
stc
lock
out
sbbb
dec
into
jle
ja
data16
mov
movsl
test
mov
cli
mov
dec
sub
popa
jno
in
dec
lret
testl
xchg
mov
sub
fstl
pop
pop
insb
nop
jb
xor
cmpsb
push
hlt
ja
mov
ret
sahf
clc
sub
movsl
pop
fwait
andb
hlt
rolb
sbb
stos
je
nop
in
jb
sahf
fcomip
and
cmp
mov
inc
push
push
or
aad
adc
test
ja
or
mov
inc
push
fsubrl
cmp
push
hlt
mov
or
xor
cmp
scas
add
cmpsb
jns
aam
jne
xor
mov
sbb
dec
data16
add
shrb
jns
aas
or
shll
lcall
stc
pop
scas
ficoms
fldenv
mov
repz
cli
push
xchg
bnd
test
sub
stos
and
popf
je
sbbl
push
add
sub
add
cmp
ds
loop
mov
push
mov
mov
cmp
pop
mov
inc
fldl
mov
in
imul
add
daa
insb
inc
jne
rorb
jbe
push
fdiv
cmp
add
fisubrl
cmc
lcall
aam
xor
clc
clc
and
or
pop
mov
jnp
repnz
mov
push
bound
test
pusha
rcrl
rcrb
mov
imull
cmp
sub
xlat
test
cwtl
mov
inc
inc
push
inc
push
dec
jnp
das
test
mov
and
mov
movsl
pop
sub
insb
out
jmp
das
jp
les
inc
fistpll
rol
add
sarl
xor
bound
cmpsl
push
push
dec
xchg
mov
pusha
xchg
jo
push
lret
push
pop
js
mov
mov
idivb
dec
sub
sub
arpl
mov
jns
int
cmp
cmp
push
js
mov
lret
xchg
mov
mov
ror
daa
dec
sub
stos
xchg
jmp
scas
xchg
inc
push
and
ret
dec
jno
mov
push
fnsave
lock
mov
cli
push
aad
ret
mov
pop
adc
mov
popf
out
iret
inc
and
push
mov
aam
xchg
sbbl
sub
pop
xchg
roll
out
sti
into
leave
stos
or
mov
lcall
movsb
dec
push
idivl
add
addr16
mov
inc
pusha
mov
sbb
loopne
add
mov
mov
jbe
mov
sub
inc
add
out
jle
adc
xchg
jne
xlat
push
or
mov
scas
push
jp
leave
aad
mov
leave
push
xor
loop
dec
and
loope
jnp
xor
clc
div
xorl
outsl
aam
mov
clc
xor
jmp
cmpsb
lret
push
mov
les
int
xchg
aaa
sbb
inc
addr16
fisubs
xchg
test
js
mov
xor
inc
fildl
aad
cld
add
cmp
push
call
enter
xor
fsubrl
rol
and
aas
inc
jne
daa
jno
xchg
mov
mov
js
arpl
fsubl
adc
fmuls
arpl
ret
push
pop
popf
push
jbe
mov
push
sub
add
jo
xchg
es
adc
jo
test
mov
mov
cmpb
cld
pop
inc
mov
stos
push
jp
decl
xchg
mov
fstpt
insl
sub
jmp
adc
xchg
add
std
hlt
adc
lock
push
mov
aad
cmp
ret
xor
mov
and
lock
pop
xchg
mov
inc
push
xchg
fwait
in
xor
cmpsb
or
inc
cmp
pusha
fidivrl
mov
pop
dec
or
pop
or
xchg
test
cli
dec
push
cmp
adc
dec
ja
and
lcall
addr16
xchg
dec
cmp
mov
push
outsb
adc
cs
mov
inc
mov
dec
xchg
and
sub
int
into
pop
sbb
jnp
sub
jle
sub
loope
leave
inc
sbb
negb
jmp
cmp
mov
enter
push
cmp
movsl
sahf
mov
lahf
jg
mov
xor
sbb
push
sti
add
cmp
ret
sub
popf
fadds
scas
push
out
inc
in
mov
imul
insb
cmp
cwtl
data16
push
push
sub
push
mov
js
test
outsb
push
gs
xor
test
stc
jne
call
in
lea
int
out
and
xor
int
dec
mov
dec
jmp
leave
out
movsl
xchg
cmp
lds
push
cmp
cmpsb
mov
cmpsl
or
out
xchg
cwtl
lods
mov
sbb
fdivl
repnz
outsb
sbb
in
mov
push
dec
jge
iret
enter
mov
lock
faddl
loope
and
adc
mov
jo
iret
mov
push
outsl
xchg
out
test
dec
push
dec
sub
xor
mov
test
js
dec
aad
pop
push
rclb
xchg
cmp
xor
stos
sbb
rorb
cmc
mov
xor
inc
dec
mov
imul
loopne
out
ds
shr
and
outsl
mov
xchg
push
pop
jae
fildl
mov
into
cmp
popf
add
pop
in
adc
add
fwait
inc
loop
cmp
jb
xor
ljmp
push
pusha
push
adc
shrl
jle
dec
push
cmp
fistps
movl
mov
mov
adc
int3
jnp
loope
xor
fld
dec
mov
outsl
sub
movsl
mov
sub
mov
sub
cwtl
jns
sub
in
push
xchg
cmp
sub
xchg
mov
and
popf
lea
je
xor
mov
frstor
inc
pop
imul
ljmp
test
clc
imul
or
jmp
stos
les
fmull
sbb
sbb
in
divl
add
cltd
add
sbb
stos
mov
mov
mov
int3
subb
movsl
fstpl
adcb
enter
inc
adc
das
incl
push
push
lods
scas
out
adc
test
mov
divb
mov
jo
shr
bnd
insl
test
pusha
push
jno
dec
mov
in
mov
mov
div
mov
lret
xchg
addr16
in
test
fdivl
cmpsb
test
outsb
lret
xchg
pop
orb
lds
cld
lods
xchg
jmp
movsl
pop
out
idivl
rcr
adc
push
xchg
inc
mov
lea
imul
push
movsl
jge
inc
push
enter
shrl
fisttps
std
mov
add
leave
lock
mov
loope
xchg
mov
data16
fisubrs
lret
push
in
mov
insb
sahf
sub
xchg
repnz
dec
out
or
inc
loop
cli
imul
icebp
xchg
mov
nop
mov
dec
mov
fisttps
outsb
inc
fcoms
mov
dec
scas
sub
jae
js
dec
xchg
pop
xor
xchg
out
repz
in
stos
iret
push
leave
cmp
mov
popa
movsb
stc
cltd
fs
cmpb
xchg
cltd
rolb
iret
or
xchg
add
pop
push
fwait
push
xor
adc
ficoms
jg
es
jnp
xchg
and
adcl
insl
scas
lods
outsl
fs
jmp
cltd
es
popf
aad
addb
or
mov
pop
fldt
scas
mov
in
jg
mov
int
mov
shlb
divb
xor
xlat
dec
inc
sub
or
fs
daa
in
xchg
cmp
xchg
sub
sahf
mov
xor
cmpsb
fmuls
out
test
add
push
jg
or
in
movsl
jnp
fsts
jo
inc
pop
fs
jmp
fidivrs
mov
loop
ds
mov
int3
xchg
push
dec
lods
je
add
and
sar
dec
xchg
popf
int3
cmp
sti
sub
sbb
loopne
mov
inc
xchg
mov
jo
inc
and
cs
retw
xchg
adc
clc
sbb
ret
jnp
pop
shrl
pop
jne
pop
xor
js
and
sbb
push
jmp
bswap
pop
inc
icebp
pop
xchg
ret
arpl
in
mov
shl
fs
dec
sub
sbb
shlb
outsb
mov
jg
xor
mov
gs
dec
mov
inc
and
cmp
push
adcl
and
inc
xchg
xchg
adc
movsb
add
dec
lahf
jle
loop
repnz
mov
jnp
adc
ja
adcb
bound
mov
pop
push
adc
sub
inc
leave
cmp
sbb
iret
loope
mov
test
lods
ss
or
jmp
mov
mov
fwait
mov
aam
out
xor
fwait
addr16
inc
fcmovnbe
push
lret
lods
inc
inc
inc
jmp
and
jno
jnp
mov
push
mov
sub
repz
pop
mov
scas
cmpsb
je
sub
push
sarl
dec
or
mov
popf
adc
inc
dec
add
rcll
sbb
lds
ficomps
sub
add
adc
jae
xor
mov
in
pop
ja
dec
icebp
xorb
sub
loope
adc
loopne
aas
gs
xchg
sti
fidivl
loope
fstpl
in
pushf
mov
ja
lret
loop
loop
mov
movsb
mov
add
je
push
xchg
mov
jge
pop
mov
orl
cmp
iret
daa
lret
outsl
xchg
jne
and
sbb
xchg
pop
js
pusha
fdivs
popa
sbb
adc
and
mov
mov
test
imul
aas
mov
cmp
imul
orb
test
js
mov
add
add
cmp
loop
test
stos
xor
scas
aas
stc
mov
insl
cmp
nop
inc
mov
sub
xchg
cli
pop
cmp
out
dec
shll
cmpsb
and
jg
fdivrl
scas
out
mov
push
jno
sub
pushf
xchg
jb
imulb
add
push
imul
gs
push
xchg
adc
iret
cmp
sub
xchg
pop
std
imul
clc
adc
cmp
dec
sbb
jl
enter
adc
dec
add
xlat
push
icebp
sbb
pop
in
aad
mov
out
pop
stos
mov
out
sbb
test
mov
xchg
ret
adcl
mov
jno
inc
mov
mov
jno
mov
cmp
xchg
cmc
clc
jmp
jmp
mov
jnp
mov
or
mov
pop
jo
ret
sbb
jae
mov
sub
add
lret
xchg
add
xor
xchg
movsl
pushf
jbe
mov
and
es
repnz
sbb
into
lahf
mov
iret
lods
push
mov
xor
jae
pop
cmp
push
cld
repz
pop
movsl
xorb
and
pop
mov
mov
mov
popa
adc
insl
dec
push
mov
mov
lods
ljmp
push
pop
or
pop
cmp
negl
inc
ds
cmp
pop
out
push
pop
sarl
fbstp
stos
testl
pop
mov
jl
lahf
push
adc
jnp
fisttps
inc
and
lret
fwait
push
cli
lret
or
jnp
jnp
shrb
icebp
pop
lock
lret
aam
xor
pop
pop
nop
jb
adc
ja
imulb
repz
rolb
xor
dec
lock
jl
movsl
add
inc
mov
or
arpl
add
movsb
sub
add
jne
movsb
add
lcall
in
shll
jmp
mov
das
add
sahf
add
pop
push
mov
xlat
adc
mov
arpl
outsb
inc
xor
call
mov
push
sbb
xchg
dec
out
cld
jmp
dec
fistps
mov
xor
ja
cmpsb
lret
insb
mov
sbb
cltd
filds
sub
inc
add
dec
mov
mov
rcll
outsl
lds
sub
nop
adc
xchg
outsb
test
stc
movsl
in
scas
in
cmpsb
jmp
mov
jmp
out
inc
or
cmp
imul
dec
sbb
jl
scas
pop
push
and
loop
xlat
inc
das
data16
push
ds
loopne
in
pop
jl
fisttpl
mov
push
mov
ss
gs
scas
movsl
fistl
repz
inc
xor
fwait
inc
in
addl
xchg
pop
ret
jmp
cmp
sahf
xchg
cmp
mov
cmp
outsl
negl
cmpsb
lret
xchg
xor
mov
xchg
add
sub
cmp
pop
fidivl
or
mov
je
jne
inc
daa
mov
cmp
jo
jle
inc
in
inc
sbb
mov
nop
sbb
iret
testl
xor
pop
jle
push
mov
rcll
loopne
sbb
adc
aaa
push
inc
xchg
xchg
orl
dec
xchg
and
dec
sbb
and
aas
imul
or
mov
movsb
dec
clc
xor
fwait
xchg
outsl
pop
lret
dec
sahf
mov
scas
inc
xchg
ret
xchg
test
mov
jle
repz
mov
push
icebp
mov
or
roll
js
jmp
mov
lock
adc
dec
dec
add
das
fs
pop
mov
insl
int3
and
shl
es
sub
stc
addr16
jne
sbb
xor
jp
aad
xlat
sub
sarb
dec
mov
leave
xchg
je
pop
and
add
loopne
xchg
push
shll
xchg
push
sub
loopne
pop
inc
rcr
lods
inc
cmp
repz
xor
or
xchg
daa
sub
enter
push
fadds
adc
push
push
xor
aad
ljmp
dec
adc
outsl
sub
push
dec
lea
inc
xchg
xorb
mov
repnz
fists
enter
je
mov
in
or
lea
aas
dec
dec
pop
pop
outsb
outsl
jle
mov
mov
fucomip
out
decl
nopl
cs
ds
dec
dec
pop
pop
outsb
outsl
jle
mov
mov
fucomip
out
decl
nopl
dec
dec
pop
fildll
jle
mov
sahf
lahf
stos
scas
mov
fucomip
out
iret
cmp
sub
sbb
ds
dec
dec
pop
pop
out
outsl
jg
popa
xor
mov
adc
add
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
seto
sub
cmp
dec
test
scas
dec
mov
jl
lods
xor
in
jo
pusha
push
mov
mov
insb
lock
mov
pushf
add
xor
in
jo
pusha
mov
out
cmpb
cmp
jb
jl
call
inc
fldenv
cmpsl
add
pusha
bound
push
dec
dec
push
pop
add
or
push
repz
ja
push
fcompl
loopne
loopne
lods
mov
fdivrl
loope
icebp
call
sub
inc
and
nop
or
jo
pushf
repnz
pop
inc
sub
test
dec
popa
fcmovbe
pushf
mov
push
cltd
jae
pop
popa
shrb
or
rcrl
sbb
and
xor
fcoml
in
mov
inc
repz
mov
aas
out
divl
lods
int3
stc
adc
jno
xor
adc
ret
sbb
gs
xor
and
mov
jmp
nop
dec
subb
mov
insb
lock
dec
adc
add
xor
fidivs
es
outsb
push
pop
testb
xor
mov
leave
pop
cmp
cltd
add
pop
mov
mull
lahf
sub
jmp
into
insb
lods
les
mov
test
jo
dec
les
pop
mov
jl
mov
pushf
add
faddl
jo
pusha
or
sbb
sub
cmp
dec
rcrb
lock
mov
pushf
add
faddl
jo
pusha
or
mov
jno
adc
ficomps
iret
imul
xor
dec
inc
testb
mov
mov
aaa
daa
pop
jnp
in
jmp
jnp
xchg
loop
sti
pop
lock
dec
cmp
gs
jnp
es
ljmp
pop
jo
out
incl
orb
fstpl
mulb
cmpsb
test
lds
jns
mov
jecxz
push
jne
lods
pop
sub
xchg
cmp
pop
in
je
repnz
mov
xor
out
aaa
add
sbb
fwait
adc
lahf
jge
or
ja
fwait
lcall
mov
cmp
push
fwait
test
jle
mov
leave
loop
popl
std
sub
fstps
shrb
lea
push
decl
push
inc
and
dec
xor
js
pop
inc
jae
fnstsw
inc
dec
sti
xor
jle
xchg
test
call
or
fs
add
mov
insl
insl
adc
push
mov
cmp
mov
test
fs
mov
sbb
sub
aas
mov
ret
jle
in
push
cltd
xchg
scas
loope
sahf
aaa
popf
out
jns
sbb
mov
fisttps
iret
fwait
ror
mov
into
lds
ss
decl
insb
movsb
mov
mov
dec
es
inc
xchg
or
lds
xor
sahf
inc
addr16
xor
jbe
dec
bound
loop
aam
xchg
and
pushf
jmp
into
inc
push
xchg
mov
xor
and
inc
repnz
xor
xor
daa
out
mov
lods
inc
pop
add
ds
jnp
inc
adc
mov
sbb
or
lods
jns
inc
xlat
push
and
insb
lock
pop
and
push
stos
iret
sbb
out
test
test
cmp
jle
add
fbstp
jae
and
sub
fwait
rcrl
nop
push
in
fwait
arpl
xor
lret
scas
ja
adc
inc
and
test
pusha
hlt
insl
sahf
and
jge
fsubs
push
fxch
sbb
sti
add
outsl
cmp
mov
cmpsl
ret
xchg
jmp
mov
push
pop
push
push
clc
pusha
mov
sub
dec
shll
inc
cmp
mov
lods
test
fs
test
cmp
dec
jns
dec
push
data16
xlat
dec
mov
cmc
in
or
aas
jb
and
hlt
insb
sbb
test
or
sti
outsl
aam
mov
sarb
movsb
outsb
leave
dec
sub
pop
loopne
xchg
xchg
jne
mov
push
xor
xchg
xor
sbb
add
in
cmpsb
faddl
adc
pop
mov
scas
test
bound
sub
hlt
push
cmp
sub
xlat
sbb
mov
dec
push
push
adc
add
movsl
je
or
ja
fdiv
std
daa
push
lcall
out
insb
push
out
push
mov
bound
jge
or
fisubrl
sbb
dec
mov
pop
xor
adc
rorb
push
mov
ret
pop
sbb
imul
adc
sahf
lret
mov
xchg
or
jl
dec
imul
hlt
inc
addl
xchg
iret
xor
push
add
ja
das
cmpsl
mov
sub
icebp
push
sbb
int3
mov
popl
mov
subl
lods
idivl
and
or
imul
int
jae
mov
xchg
sub
push
sub
lcall
into
dec
pushf
hlt
inc
arpl
push
fnstenv
rcll
pop
jae
dec
xor
outsb
movsb
inc
mov
daa
push
insb
mov
xchg
in
and
clc
bound
pop
das
cmc
xor
or
sub
push
clc
test
sub
sbb
sbb
and
mov
add
mov
je
mov
mov
push
mov
push
js
ja
adc
in
and
test
fistl
lock
mov
pop
je
push
mov
popf
adc
mov
lret
adc
xor
and
scas
lcall
lcall
pop
test
or
sti
out
mov
sub
dec
lahf
out
imul
sub
jne
movsl
cwtl
xchg
push
icebp
call
cmp
pop
xorl
sbb
int3
dec
xchg
sub
xorb
xchg
ljmp
in
loope
adc
cwtl
add
mov
xor
jns
mov
xchg
leave
lods
sbb
ljmp
mov
cmp
push
es
test
push
and
pop
jbe
aas
fidivrl
outsl
fisubrl
push
lock
int3
push
call
mov
mov
aas
mov
test
pop
push
movl
mov
rcrl
je
xor
mov
push
jg
iret
outsb
test
js
arpl
in
mov
nop
test
jg
cmpsb
out
out
mov
dec
push
test
psubsb
jb
inc
jnp
addr16
mov
push
mov
imul
shll
cmp
sbb
popa
lcall
filds
insb
lods
cs
idivl
int
shll
sub
rorb
mov
jge
jmp
loop
movsl
pop
or
pop
xor
push
push
js
sub
notb
sbb
push
mov
pop
xor
mov
ret
inc
movhps
xchg
iret
mov
xchg
lods
mov
stc
hlt
xchg
mov
sbb
add
xchg
jno
push
xchg
ja
daa
cmp
in
add
xor
lcall
mov
push
insb
inc
xchg
sbb
push
cltd
jo
popf
daa
out
enter
adc
std
ss
repz
push
sahf
hlt
loopne
or
jb
ja
inc
or
fcompl
xor
xchg
movntq
std
cmp
mov
mov
add
jmp
movsl
or
fstl
mov
sbb
push
lds
and
imul
adc
test
jbe
mov
cmp
es
les
push
fstpt
mov
pop
and
push
iret
mov
subb
cmp
divl
subb
cmpsb
pop
aad
mov
mov
jp
mov
pop
jmp
xchg
mov
lret
insl
mov
push
insl
scas
sti
adc
mov
daa
stos
sbb
dec
mov
dec
inc
loope
insl
adc
cltd
jp
jecxz
lahf
sbb
adc
fldt
data16
xchg
pop
mov
mov
inc
xchg
jne
mov
hlt
lret
mov
mov
aam
sbb
popf
test
jae
bound
or
or
push
dec
aam
add
mov
push
fadds
nop
sbb
fstps
sub
jae
adc
sbb
addr16
into
scas
flds
and
inc
pslld
cwtl
cli
mov
dec
shlb
inc
sbb
or
sti
xor
lods
ror
and
xchg
aam
add
fwait
cmp
and
rorl
int
negb
in
xor
mov
cmc
push
xchg
push
jmp
mov
daa
fildl
movsb
jp
and
fisttpl
and
fists
lret
add
pop
negl
lods
lock
mov
notl
mov
in
add
jo
pop
sbb
dec
shlb
gs
scas
and
aaa
mov
sub
mov
jno
inc
mov
push
fistpll
jmp
inc
or
inc
pop
pushf
push
inc
cltd
rcr
je
sub
push
mov
pop
add
jl
pop
int3
clc
rorb
sub
rcll
sbb
mov
inc
mov
and
mov
pusha
mov
push
sub
nop
mov
adc
es
mov
mov
lret
jb
decb
imul
rcr
les
in
push
sahf
mov
divb
xchg
in
test
out
scas
js
add
jmp
push
pop
repnz
out
mov
lcall
or
pushf
bound
inc
and
fdivl
mov
or
sbb
inc
lret
cmc
iret
sub
fidivl
in
cmp
mov
jnp
jl
and
inc
test
jns
into
js
stos
test
ljmp
or
loop
add
adc
adc
dec
dec
call
fstps
repz
sti
icebp
add
scas
aad
jmp
cmpsl
cmp
adc
out
jns
cld
testb
mov
inc
js
lods
and
push
dec
and
mov
xor
mov
mov
sarl
mov
adc
cmp
iret
rclb
dec
jmp
mov
popf
in
push
xchg
dec
sub
in
jmp
mov
into
mov
or
sbb
rol
in
jge
roll
sub
inc
lock
xor
dec
aaa
jg
jle
sti
mov
test
adc
jp
sbbb
out
push
push
ficoml
rolb
push
sbb
je
fs
aaa
ret
daa
lcall
aas
out
pop
xlat
loope
mov
in
fists
pushf
xor
push
add
sub
push
sub
sub
stos
in
sub
inc
add
lcall
inc
test
enter
sbb
lea
aaa
mov
nop
mov
stos
test
popf
ja
into
xchg
dec
mov
je
cltd
push
cmp
mov
test
movsl
js
scas
bound
lock
pop
and
sahf
test
lock
sbb
push
jge
fstps
xor
mov
orl
loope
add
data16
popf
and
cmpsl
mov
sahf
fisubl
adc
mov
cmc
jge
cmpsb
cld
sub
push
or
xchg
ljmp
cs
movsb
mov
push
ds
sbb
add
mov
outsl
xor
clc
xchg
divl
cmpsb
imul
repnz
out
leave
ret
xor
or
adc
push
les
pop
add
and
push
je
in
or
rcl
les
addr16
rclb
adc
xor
mov
notb
loop
mov
insl
out
jno
cmp
xchg
push
nop
stos
jmp
aas
mov
jb
mov
push
sbb
xchg
int
adc
fcoml
mov
add
mov
in
and
cwtl
inc
in
fnstenv
xchg
push
rorl
daa
mov
xchg
fs
jnp
jle
dec
and
mov
jle
and
sahf
cmc
iret
push
sti
ret
scas
fsubs
mov
xor
jmp
sbb
outsl
mov
dec
pop
xlat
mov
xor
xor
iret
out
addr16
xor
out
xor
popf
loop
and
cmpsb
cmpsl
mov
shl
and
imul
jnp
mov
jle
mov
hlt
adc
repnz
test
jnp
xchg
shlb
out
mov
adc
shrb
jno
ja
cltd
stc
adc
cld
sub
popf
jmp
and
popa
sub
js
sub
out
jae
fs
dec
add
popf
jmp
dec
rcll
lock
adc
iret
enter
js
dec
ret
out
and
ret
pop
cltd
dec
pushl
mov
mov
jb
stos
ret
adc
repnz
movsl
aad
pop
jb
andl
shll
jecxz
mov
dec
call
dec
fwait
fsubl
adc
enter
push
push
xor
aad
or
sbb
flds
test
sbb
fs
repnz
cmp
jge
sti
bound
jmp
mov
add
jp
xchg
mov
mov
test
dec
push
adcb
mov
in
outsl
leave
rcll
incl
enter
addl
jmp
mov
jmp
jle
sbb
idivb
imul
mov
cli
adc
xchg
test
mov
nop
bound
das
xor
sub
les
inc
push
movl
nop
rol
cmp
in
test
xchg
ror
bound
ror
or
sbb
or
and
push
stos
repz
lock
push
cmp
aaa
popf
insb
xchg
int
daa
inc
push
lahf
movsb
sbb
dec
icebp
push
cmpsb
or
pop
sub
test
xor
dec
pop
jbe
test
cmc
add
mov
lods
imul
adc
or
pop
cltd
xchg
cltd
and
divl
movsl
les
das
arpl
cli
xor
push
jnp
xlat
fisubrs
push
mov
imul
mov
jo
xchg
mov
fidivrs
data16
and
xor
cwtl
popf
out
call
xchg
adc
dec
test
mov
sbb
mov
aaa
pop
mov
mov
pop
sbb
xlat
mov
add
sbb
pushf
lea
sbb
and
cli
out
xchg
push
jno
mov
ss
lret
xor
push
jl
xchg
inc
jb
int
loop
dec
add
jg
enter
lea
adc
push
lea
mov
xor
call
cmp
jl
push
mov
inc
ljmp
in
push
add
imul
lea
xchg
inc
fcompl
enter
int3
aad
add
jnp
cmpsl
js
and
fisttpl
movsb
lcall
ds
push
add
push
movsb
pop
sub
out
pop
adc
in
daa
fildl
sub
pop
rolb
out
lcall
js
and
rcrl
shrl
pop
shlb
adc
les
ja
cltd
sbb
jg
pop
cwtl
cmpsl
sub
and
das
cmp
aaa
and
arpl
ljmp
inc
push
jle
mov
popf
lcall
fstpl
std
mov
pop
push
ret
int
sbb
push
add
pop
mulb
mov
pushf
push
mov
push
out
mov
mov
mov
cwtl
mov
in
dec
ret
cmpsl
adc
xchg
shll
cmp
fwait
sub
fldt
loop
push
lcall
jmp
in
ret
push
mov
subl
fwait
hlt
mov
insb
loope
xor
pop
lret
adc
xor
push
xor
adcl
push
and
xabort
inc
adc
pop
jg
sbb
cmp
xchg
add
cmpl
jnp
test
inc
mov
pop
dec
dec
std
jle
jecxz
sbb
xor
fwait
pop
mov
dec
mov
js
out
push
inc
mov
lods
inc
dec
in
cld
push
fucomip
mov
js
orb
addr16
aaa
xchg
lret
fs
iret
imulb
and
incb
sarl
dec
mov
call
imul
xchg
mov
es
mov
cmp
pop
mov
das
repz
and
inc
decl
stc
int
in
out
inc
jge
lods
jecxz
dec
ja
fcompl
add
test
sbb
add
loope
les
push
cli
jle
jo
pushf
scas
mov
std
xor
outsl
lods
mov
inc
mov
rcll
and
call
adc
int
negl
jp
out
aas
cmp
loop
push
or
dec
dec
ja
mov
inc
iret
lods
jmp
fs
sub
xor
mov
daa
gs
fcmovu
cmp
add
cmp
test
push
scas
push
push
pop
pusha
lret
pop
pop
ret
pop
std
insl
cmpsb
in
inc
rcll
sbb
add
jbe
ja
dec
in
cmc
cmp
inc
xlat
outsl
push
dec
ret
sarl
and
mov
and
push
popf
xor
xchg
jmp
into
cmp
shll
push
jmp
cld
rolb
xchg
loope
xor
aaa
xchg
scas
pushf
lock
std
aam
or
pop
nop
xor
enter
into
in
cwtl
shl
loop
dec
iret
xor
imul
jle
mov
add
jmp
mov
xchg
jle
fldt
bnd
jp
fdivs
inc
dec
negb
into
push
das
arpl
cld
jl
sti
cmc
mov
mov
fistps
xor
insl
inc
adc
inc
js
jnp
scas
fucomip
stos
arpl
pop
mov
xor
lods
pop
mov
lods
or
fcompp
imul
in
sbb
adc
rcr
xchg
jge
or
sbb
popa
add
mov
jno
dec
jmp
pop
cmpl
jmp
push
mov
push
int3
jg
push
or
jp
test
xchg
pusha
pop
dec
imul
insb
mov
hlt
add
sub
xor
mov
clc
or
shll
add
xchg
cmp
mov
lock
add
sbb
mov
mov
xchg
stos
cmp
jecxz
or
fdivrs
test
adc
xor
lret
push
lcall
push
movsl
loope
mov
xchg
push
mov
push
jno
or
xor
cmc
and
in
sub
stos
dec
xchg
scas
cmpsb
aas
ja
xor
push
add
inc
lahf
or
or
out
decb
out
out
xor
pop
arpl
fistl
push
loop
arpl
xor
sbb
pop
xchg
add
data16
mov
xor
and
daa
sbb
lret
push
sub
loopew
in
mov
sub
test
push
mov
xchg
dec
fwait
cmp
or
inc
test
gs
cmp
popa
mov
pop
movsl
cwtl
das
push
dec
lods
jb
adc
mov
fisubs
mov
sub
jbe
mov
in
imul
xor
lcall
pop
xlat
in
jmp
push
push
xor
dec
add
test
bound
add
mov
cmp
or
fisttpll
pop
stc
add
jb
mov
fmuls
cmc
jno
jno
jae
lcall
adc
popf
cmp
subb
dec
dec
xchg
mov
jg
cld
lods
jbe
fstps
sub
pop
or
test
mov
cs
mov
dec
sbbb
or
dec
imul
nop
mov
sbb
mov
lret
lcall
jbe
sub
pushf
icebp
ret
loope
cwtl
adc
and
jmp
sbb
fidivrs
mov
push
jae
push
loope
mov
add
jo
xlat
jbe
xchg
push
sbb
push
pop
fisubl
xor
and
jnp
clc
inc
outsb
lds
inc
inc
daa
pop
int
insb
jns
xorb
test
pop
pushf
nop
jle
cmp
popa
rolb
cmpsl
xchg
dec
pusha
pop
fldenv
leave
aas
nop
fwait
adc
add
sub
lods
adc
xchg
mov
sub
mov
repnz
stos
pop
cmp
pop
cld
mov
push
xchg
imul
cld
out
and
mov
movsl
in
mov
dec
int3
cmc
int3
leave
and
or
and
mov
fldl2t
sbb
pop
es
sahf
mov
push
adc
lahf
insb
xlat
and
out
sbb
inc
jecxz
popa
popf
ds
mov
or
adcl
push
xchg
cli
lret
sub
pop
mov
orl
mov
lahf
xor
adc
mov
sbb
scas
arpl
icebp
pop
pop
out
test
and
jp
nop
xchg
in
popl
addr16
xchg
pop
adc
outsb
lock
mov
push
leave
adc
xchg
xchg
pop
inc
mov
into
int3
xor
pop
imul
fiaddl
push
lea
add
push
fcoms
inc
sub
fcoms
sarl
jge
sbb
xor
in
xchg
cmp
sbb
push
mov
je
mov
loop
lcall
mov
mov
popa
inc
inc
cli
jne
arpl
xchg
and
jecxz
jecxz
jb
mov
ja
mov
stos
subb
cmp
and
add
repz
adc
fmull
pop
sub
xor
mov
xchg
mov
pop
inc
or
rcll
ljmp
xchg
inc
mov
inc
adc
sub
push
dec
rclb
repz
idiv
mov
imul
or
in
stos
pop
or
dec
jmp
sub
pop
cld
jg
clc
xlat
std
xor
push
inc
lret
xor
rep
push
loope
sub
and
or
ja
cmpsl
inc
rolb
iret
dec
lods
push
push
sub
mov
popf
mov
mov
jp
xor
mov
fnstenv
mov
mov
add
insb
sub
mov
mov
insb
lock
mov
pushf
add
faddl
jo
pusha
or
sbb
sub
cmp
dec
rcrb
lock
mov
pushf
add
faddl
jo
pusha
or
sub
dec
mov
mov
insb
icebp
mov
add
and
push
int3
inc
in
jo
pusha
sbb
sbb
dec
rorb
jo
pop
mov
arpl
mov
popl
lahf
pop
adc
jge
insl
pop
adc
fstpl
dec
pushf
std
dec
in
pop
popf
sub
ds
in
dec
cld
jge
insl
fcompl
mov
pop
mov
popf
inc
lea
jle
cld
jge
insl
ficomps
bound
pop
mov
ret
das
cmc
jnp
push
repz
sbb
in
dec
xchg
push
mov
or
inc
pop
outsl
pop
xor
rcrb
inc
addr16
in
mov
mov
int3
fcmovnu
sub
sub
and
dec
bound
push
xchg
movsl
in
stc
mov
in
inc
lcall
inc
sub
pop
fucom
cmpsl
stc
add
xchg
cmp
int3
insl
or
sub
in
or
in
fs
ja
arpl
xchg
jns
mov
mov
stc
cmp
lahf
push
pop
cmpsb
mov
stc
cmp
sub
int
xor
fs
adc
cmp
mov
fisttpll
aas
ret
pusha
lea
add
sub
lds
jge
insl
sbb
push
sub
mov
popf
add
jb
mov
or
jno
inc
rcrl
insb
stc
pushf
sub
cmp
inc
in
stc
dec
stc
jge
test
or
pop
ret
popa
cmp
or
sub
fnstenv
insl
lods
ja
mov
insb
mov
cmp
insb
int
std
dec
in
pop
popf
sub
cmp
or
sbb
in
dec
cld
jge
insl
fcompl
mov
jl
dec
in
pop
popf
sub
cmp
or
sbb
in
call
lock
xor
xor
mov
mov
notb
cmp
jl
xor
int
jle
mov
outsb
push
push
movsl
scas
sarl
divl
inc
xorb
in
dec
mov
mov
nop
sub
insl
fildll
mov
out
stos
popa
test
pop
inc
pop
shll
cmc
stos
add
aas
dec
xchg
or
mov
jmp
add
icebp
rcrl
xchg
dec
mov
cmpsl
xchg
lcall
dec
rcll
mov
movsl
aad
cmp
mull
fsubr
fidivl
sahf
jle
or
repnz
out
adc
scas
lret
pop
sbb
inc
and
inc
lahf
sub
push
fucomip
jb
repz
sub
aam
xchg
or
ljmp
and
inc
mov
ds
sbb
push
xor
ss
lret
xchg
pushf
out
imul
imul
daa
stc
std
pop
add
push
add
ljmp
lcall
cmp
int
rcr
push
dec
shll
inc
ss
inc
push
pusha
mov
mov
mov
fsubl
fildl
nop
subl
inc
stc
dec
call
outsl
dec
popf
mov
pop
add
stos
imulb
js
pop
sarb
dec
or
addr16
dec
mov
pop
jge
fcomps
push
cltd
loop
mov
lock
dec
popa
xchg
je
jecxz
push
lcall
nop
call
test
mov
push
push
popa
inc
xchg
jmp
aam
sarb
std
pop
xchg
xor
notb
pop
rcr
adc
rsqrtps
lcall
mov
mov
pop
mov
int
add
rorb
imul
pop
js
pusha
sub
xor
xchg
add
addr16
out
xchg
shll
mov
stos
outsl
mov
adc
daa
pushw
mov
and
jle
push
hlt
mov
outsl
cld
add
lock
and
inc
out
je
repnz
stos
repnz
sti
inc
xchg
pop
lret
pop
shll
out
sub
push
sbb
inc
adc
jp
mov
call
jns
pop
push
pushw
adc
subl
sbb
inc
mov
push
je
jae
clc
inc
mov
mov
outsb
lahf
push
xchg
outsl
icebp
pop
sub
push
es
cltd
ficoms
aas
loopne
ret
jne
gs
aaa
push
lea
push
sub
sti
push
in
imul
int
adc
mov
idivb
call
mov
stos
shrl
pop
mov
mov
loop
sub
add
push
lods
dec
pushf
add
call
adcb
shr
xchg
pop
jbe
addl
cmp
popa
and
jp
lret
push
movsb
inc
xchg
or
mov
push
into
sarl
adc
cmp
js
inc
push
and
push
fists
js
jne
sti
pop
sbb
or
dec
pop
ret
sbb
js
mov
sub
jmp
sbb
das
pusha
shrb
dec
iret
push
pop
stos
pop
sbbb
in
push
aad
jo
test
lret
or
incl
pop
ds
add
pop
mov
aam
lcall
loopne
iret
out
fwait
jle
lret
int3
dec
movsl
daa
insb
jb
or
call
scas
fisttps
xchg
repz
xor
adc
mov
jo
push
inc
cmpsl
mov
cmpsb
xor
inc
incl
lret
inc
leave
mov
popa
out
push
cltd
clc
aaa
fsubrl
xchg
adc
pmaxub
outsb
sbb
mov
rcll
hlt
xor
fistps
pop
movsl
mov
popf
ja
pop
dec
rcrl
les
inc
mov
test
jle
rcll
xchg
xchg
pop
pop
pop
or
stc
sub
leave
in
add
xor
cmpsb
pop
push
or
jmp
sbb
andl
mov
addr16
push
xor
and
scas
pop
sbb
pop
mov
or
pop
and
xor
xchg
ret
mov
mov
mov
add
call
jp
add
mov
enter
mov
mov
push
daa
btc
push
pushf
mov
jge
js
outsb
push
sbb
xor
movl
int3
movsb
outsb
xor
pop
dec
rclb
push
adc
fdivrl
push
aas
movb
mov
popa
or
mov
ret
pop
pushf
rclb
stos
cmp
addb
into
call
jb
sub
dec
mov
cmp
test
cmp
jmp
mov
or
lea
test
xchg
cmp
lods
divl
cli
fimuls
add
cltd
pop
cmp
shlb
inc
in
cld
mov
ljmp
ret
push
movsb
js
das
lods
sbb
cmp
jp
mov
mov
shrl
inc
out
enter
adc
fmull
daa
lcall
push
cld
cmp
sub
fldenv
nop
fiaddl
xchg
cmc
into
mov
mov
push
insb
add
sbb
push
aas
test
test
lret
dec
sbb
pop
inc
inc
adc
and
rclb
fwait
ret
jl
out
dec
dec
fldt
and
jg
test
xchg
mov
fucom
mov
jmp
int
lcall
fsubrl
int3
aad
flds
popw
adc
fucomp
push
cld
iret
daa
popa
mov
dec
imul
add
das
xor
adc
pusha
data16
mov
fcompl
sub
jae
movsl
or
sbb
stos
xchg
arpl
xor
data16
cmp
push
cwtl
mov
or
and
jne
lret
iret
fisubrl
js
cltd
push
jno
xor
adc
lahf
push
sub
and
inc
lret
fcomi
mov
jl
stos
rcl
sub
ret
sbb
push
adc
aas
and
sub
lea
cmpsl
push
sub
int
adc
mov
inc
lahf
adc
pop
dec
int3
popa
hlt
mov
hlt
jecxz
test
or
jbe
aaa
aaa
popa
sbb
ljmp
adc
push
mov
fdivl
fsubs
inc
xchg
jbe
dec
xor
inc
mov
dec
int
inc
cli
push
mov
dec
ja
testl
adc
test
inc
cmp
ud2
and
mov
cmpsl
cmpl
xlat
mov
and
mov
mov
mov
dec
mov
es
lds
dec
outsl
scas
pusha
and
adc
add
mov
hlt
mov
stc
push
dec
pop
xchg
sti
sub
xor
cwtl
inc
popf
decb
cmp
cmp
add
iret
mov
movsb
pop
std
and
leave
push
loop
ljmp
xchg
cmp
push
hlt
xchg
cmp
dec
push
xchg
pop
dec
loope
xchg
xchg
frstor
inc
pop
mov
mov
push
or
aaa
mov
mov
sub
jnp
in
mov
mov
inc
lcall
aad
mov
cltd
nop
xchg
lds
jmp
adc
bound
stos
sub
and
cmp
xchg
mov
mov
ret
ljmp
data16
fcmove
or
sarl
push
scas
aad
and
out
mov
arpl
nop
int
adc
ljmp
mov
jb
fimuls
fistl
rcll
xor
mov
or
jecxz
ret
push
in
lock
xorb
inc
incl
ss
add
lea
es
dec
or
orl
std
sarl
xchg
data16
mov
add
js
sbb
adc
sahf
adc
push
lods
pop
mov
xor
xorb
jmp
xor
pop
dec
adc
dec
cli
fwait
loope
jbe
inc
js
sbb
into
sbb
das
in
sbb
iret
repz
xor
or
arpl
xchg
inc
rcrb
mov
mov
mov
dec
incl
cmpsb
and
gs
leave
insl
pop
pop
scas
cmpsb
and
mov
mov
movb
mov
gs
adc
pop
pop
adc
adcb
pushf
and
lods
pop
outsb
shll
push
lcall
push
inc
fistl
xor
and
cmp
sub
gs
ja
loop
pop
inc
stc
mov
popa
pop
leave
sti
jo
bound
mov
or
mov
ret
mov
outsb
mov
fidivrl
inc
xor
jbe
and
clc
adc
inc
jle
xor
popf
mov
in
aaa
xorl
mov
mov
adc
cltd
fs
adc
mov
pop
mov
and
adc
mov
repnz
mov
xchg
push
xlat
mov
sti
sub
je
jne
xchg
loop
cmpsb
sbb
add
lods
das
jl
fcmovnbe
pop
dec
inc
fistl
nop
cld
xchg
test
or
mov
sahf
call
stos
test
and
cwtl
cmp
mov
pop
mov
push
ret
sbb
inc
cwtl
or
dec
pop
jbe
xor
jns
pop
rclb
inc
popf
ror
jge
movb
push
xchg
inc
mov
scas
orb
inc
subb
and
or
and
out
ss
fcmovnu
cmp
sbb
xor
push
and
add
fiadds
inc
mov
add
nop
and
test
jnp
ret
mov
lahf
leave
sbb
and
pop
mov
inc
in
dec
mov
jns
cli
cmpsl
push
cltd
cwtl
arpl
jae
mov
jae
nop
mov
loop
vpunpckhdq
mov
xchg
add
mov
inc
fdivrs
jge
repz
or
insl
mov
int
push
pop
add
xor
and
jb
not
inc
lret
pop
hlt
xor
push
jge
addb
das
push
lret
jno
sti
das
cld
fiaddl
jl
mov
sub
aad
push
mov
push
jp
scas
aaa
stc
and
or
or
xchg
xchg
fs
das
enter
aaa
cmp
fsubs
dec
jae
mov
lea
in
or
dec
adc
sahf
inc
scas
dec
jno
cs
inc
mov
push
adc
sub
or
sbb
sahf
aad
shr
jge
idivb
add
or
sbb
rolb
inc
in
outsb
gs
fisubs
xor
fxch
test
sahf
mov
add
push
repnz
sbb
xor
mov
pop
out
aad
adc
dec
dec
imul
lods
adc
pushf
std
enter
sub
pushf
or
out
jno
repnz
push
sub
xor
imull
cmp
out
adc
pop
loopne
push
inc
inc
lret
or
stos
rcrl
js
pop
notl
xor
adc
repnz
xor
sbbb
std
sub
jp
rcll
xchg
into
fiadds
push
mov
jne
push
jmp
gs
loopne
imul
mov
sarl
add
in
push
add
sub
and
adc
and
aas
leave
add
mov
test
xor
push
jne
orb
lcall
jg
loope
movsl
jl
fstl
mov
int
mov
sbbl
push
pop
out
rorb
push
pop
lahf
fwait
mov
sub
add
add
pop
fldl
cmc
ret
insl
cmp
test
inc
or
fsubrp
push
push
sub
add
data16
loop
cmc
stos
xor
sbb
es
mov
dec
pop
cmp
and
in
mov
rclb
add
push
adc
gs
cwtl
test
cmp
outsb
into
mov
inc
mov
xchg
inc
dec
push
fstps
outsb
mov
mov
mov
pop
mov
add
xorps
leave
adc
pop
add
sub
or
loopne
xor
movaps
fsubl
cmc
xorl
addr16
jmp
lea
mov
lods
pop
jg
xchg
adc
push
mov
subl
rep
mov
outsb
stos
arpl
xor
push
inc
mov
popa
jecxz
or
or
mov
add
sbb
pop
mov
sbb
mov
stos
decl
mov
roll
aaa
fcoms
adc
movsl
mov
sub
push
popl
push
ds
leave
pop
cmp
and
imul
mov
jb
ds
loope
sub
rcrl
fisttpll
test
mov
mov
xor
jno
or
or
jbe
out
cld
sub
cmp
in
push
pop
adc
scas
clc
test
xor
cmp
push
sti
cmp
hlt
pop
jl
xchg
or
pop
scas
dec
movsl
pop
test
test
xchg
inc
push
and
and
cs
xor
cmp
in
sbb
xchg
hlt
push
push
jbe
mov
jecxz
out
es
and
sub
out
inc
imul
fldcw
adc
pop
and
fisttps
rorl
aad
ret
dec
jae
mov
repnz
pop
test
cwtl
jg
adc
dec
or
dec
xchg
lods
lock
adc
xor
pop
gs
cmp
lahf
push
shr
out
out
bound
das
cmp
cmp
cs
xlat
mov
js,pn
call
inc
mov
movsb
mul
fsubr
cmpsb
xor
rorb
stos
push
add
fsts
add
dec
xchg
gs
adc
adc
cld
jbe
pop
scas
cmp
jge
and
pusha
fwait
lret
aas
into
fildll
jmp
xchg
flds
add
out
xor
push
into
out
popa
jp
loopne
mov
add
int
pop
push
cli
nop
icebp
data16
fwait
sahf
in
and
inc
cmc
fistl
jge
or
xor
mov
pop
iret
stos
fsts
insb
jl
inc
adc
push
stos
jge
or
loopne
pop
in
push
mov
loop
dec
nop
aas
loop
pushf
enter
pop
jg
xchg
lods
sub
xchg
mov
mov
pop
dec
jecxz
stc
push
out
jg
hlt
mov
hlt
mov
pop
cld
pop
jp
pop
hlt
adc
add
jmp
stos
dec
imul
in
push
xchg
push
jmp
jns
or
lods
cmp
gs
pop
mov
or
je
mov
test
or
or
pop
pop
fs
adc
inc
cmp
jecxz
cmp
pop
xlat
aas
ljmp
xchg
mov
jge
lret
mov
fisubrl
add
xchg
mov
sub
pop
arpl
cmc
adc
sbb
or
sti
rcr
mov
outsb
xor
jle
rcl
mov
cmpsb
mov
xlat
imul
ds
xorl
lods
rcr
shlb
push
fsubrs
out
add
mov
insl
popf
stos
cmp
arpl
testl
dec
jno
and
les
sbb
lods
sahf
das
ret
mov
pusha
pop
aaa
pop
add
int3
inc
movsb
ja
lcall
out
sub
scas
aaa
add
or
jae
movsl
cmc
sbb
push
mov
add
and
pop
adc
adc
aaa
mov
or
out
pop
cmc
out
divl
sbb
bswap
mov
movsb
pop
sbb
xor
outsb
out
add
out
lods
jl
mov
fneni(8087
sub
mov
insl
add
xchg
xor
int3
sub
lods
inc
sbb
xchg
loopne
sbb
cs
jnp
cwtl
out
sahf
out
sbb
push
or
shlb
and
push
mov
subb
test
in
sub
cmp
xchg
scas
cmpl
sub
popa
mov
sarb
jecxz
jge
lods
decl
mov
filds
push
popa
mov
xchg
add
sbb
xchg
dec
bound
mov
push
sub
mov
push
xchg
sbb
add
movhps
lds
xchg
ret
ss
addl
out
adc
int
pop
add
stos
jns
aas
mov
outsb
fcoms
jl
fwait
adc
pop
dec
lahf
xchg
fsubs
in
das
add
lret
adc
aad
pop
lock
fsub
repz
divb
loope
mov
jns
add
xchg
out
popf
cwtl
dec
dec
inc
xor
rcr
cmp
enter
ljmp
dec
mov
xor
and
std
in
imul
ds
adc
pushf
push
ds
popf
inc
roll
loopne
test
je
std
dec
ja
fidivrl
mov
andb
mov
jge
push
inc
fsubr
mov
test
add
mov
pop
popa
pushf
andb
mov
pop
in
imul
pop
roll
mov
in
pushf
iret
sub
arpl
clc
test
orl
out
jl
ret
in
push
lock
aas
mov
das
popf
and
iret
pushf
sbb
shlb
divl
push
lods
sub
cmc
jnp
mov
mov
les
xchg
in
insl
daa
xchg
ljmp
add
clc
xchg
sub
and
inc
jge
rcrl
pushf
sbb
mov
xor
xchg
dec
aad
push
and
cmp
xor
add
popa
lods
push
lock
xchg
push
dec
iret
int
jmp
scas
jbe
out
cs
inc
mov
jo
jge
jo
pop
inc
gs
push
cmc
sub
jnp
loope
mov
aas
or
add
dec
mov
mov
and
mov
movsl
fs
mov
add
mov
adcb
jb
insb
and
or
jae
push
popa
xor
cmp
inc
jno
cmpsl
xchg
pop
lds
mov
lods
ja
sbb
or
std
out
dec
adc
popf
cmp
testb
sbb
xchg
inc
and
cmp
push
mov
ret
addb
mov
mov
notl
sti
ror
loopne
add
push
jge
add
xchg
adc
add
out
jl
adcb
dec
pop
xor
lcall
std
push
in
int
xchg
divb
mov
push
sahf
mov
sub
cmp
mov
std
sub
les
sbb
movsl
shlb
jae
mov
pop
test
xlat
out
std
dec
scas
in
stos
loope
fidivrs
lcall
arpl
mov
aam
scas
lock
or
dec
jmp
enter
int3
adc
cmpb
pop
xor
movsl
insl
nop
in
in
ret
in
cmp
push
pop
test
in
inc
jno
shlb
dec
xchg
sahf
icebp
fwait
stos
and
add
ljmp
cmp
sub
in
mov
fdivs
dec
and
jns
inc
cmp
popa
arpl
rcrl
mov
jnp
out
imul
jae
mov
movsl
mov
fs
mov
shll
imul
dec
sub
cs
and
cli
ficoml
inc
lret
cltd
sbb
sbb
imul
mov
push
insl
stos
out
cltd
push
sub
cmpsl
cmc
cmp
sbb
cmp
push
hlt
lret
sarl
xorb
inc
ret
into
shrb
std
mov
cmpsl
lods
adc
in
xchg
repz
mov
mov
pop
sbb
adc
lret
add
lods
nop
and
inc
fisttpll
movsb
int
xchg
cmp
in
or
fldenv
add
lahf
call
cmc
dec
sbb
mov
xchg
test
sub
outsl
ret
jge
jl
in
inc
lods
dec
push
stos
cmp
fcoms
insl
cmp
lcall
in
cs
in
adc
jge
sub
lods
push
or
mov
adc
sahf
lret
xchg
in
aad
jmp
add
fwait
add
ret
jp
jmp
fcomp
sub
jae
cltd
dec
movsb
jmp
add
aad
das
imul
pop
mov
repz
cltd
leave
mov
lods
xor
out
sub
loop
cmpsl
jne
mov
inc
cli
sbb
push
into
movsb
scas
scas
cmp
mov
xchg
pusha
mov
mov
jle
out
xchg
test
test
add
add
call
inc
fmull
ds
mov
subl
ljmp
je
xor
ds
call
int3
jno
lret
bound
popa
xorb
out
iret
cmpl
pop
jns
xchg
loopne
sub
rol
mov
pop
add
rolb
mov
xchg
add
icebp
xchg
cmp
sub
imull
jp
call
cld
push
mov
or
pushf
std
dec
in
pop
popf
sub
cmp
or
sbb
in
dec
cld
jge
insl
fcompl
mov
jl
dec
in
pop
popf
sub
cmp
or
sbb
in
dec
mov
mov
fcompl
mov
jl
dec
in
pop
popf
sub
cmp
sub
sbb
in
dec
cld
jge
insl
fstpl
or
pushf
fstl
in
sub
movsb
add
jecxz
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
pop
clts
pop
or
push
ret
scas
js
or
or
add
add
inc
add
add
cwtl
add
add
add
add
add
stc
add
incb
das
add
add
sbb
xor
add
add
add
add
add
ljmp
add
add
add
add
add
dec
add
add
cmpsl
add
add
add
add
add
add
add
add
add
dec
add
push
filds
pop
add
add
add
mov
xor
fadds
fadds
xor
add
insl
add
add
add
add
add
add
add
add
mov
add
inc
add
add
add
add
add
add
add
add
add
push
add
add
mov
add
add
add
arpl
daa
add
add
gs
add
add
lret
add
add
add
add
incb
or
addb
add
add
add
add
add
add
dec
add
add
js
in
ja
sub
incl
pop
add
add
add
filds
js
xor
sub
and
dec
add
add
sub
incl
add
inc
add
add
dec
add
add
dec
add
add
repz
sbb
jl
filds
dec
add
add
addl
push
add
pop
add
add
add
add
add
cmp
adc
add
add
add
add
add
adc
incb
mov
add
add
add
pop
add
add
add
add
add
add
add
int
sub
sbb
incb
flds
nop
add
dec
add
cmp
jo
mov
in
add
add
add
dec
add
stos
add
add
mov
add
add
imul
add
add
add
testb
add
add
add
in
add
add
lret
add
add
das
add
or
add
add
add
add
js
mov
stos
add
popa
add
add
add
insl
add
add
add
stos
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
and
inc
add
inc
add
add
add
incb
cwtl
add
jnp
add
sub
mov
aam
pusha
add
add
add
mov
das
add
add
add
add
add
add
pusha
add
add
add
fadds
mov
add
add
add
add
add
pop
add
add
nop
add
add
add
add
add
add
add
sub
dec
add
jl
testl
pop
add
add
fadds
fadds
into
add
add
add
add
pop
add
in
add
jno
outsl
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
test
fsubp
dec
mov
flds
rorb
pop
dec
stos
js
mov
stos
lcall
or
mov
loope
lods
sbb
cmp
jns
iret
and
insl
xchg
pusha
sub
mov
jne
js
xchg
mov
xchg
mov
pop
aad
mov
xor
fbstp
in
aaa
outsb
aas
sbb
in
mov
push
je
movsl
addl
sub
lods
hlt
sub
cld
xchg
ja
xchg
push
icebp
push
jae
add
lods
mov
mov
loop
pop
insb
inc
push
adc
shr
and
lods
outsl
pop
scas
jno
lock
xor
stos
xor
mov
insl
mov
int
std
push
scas
xor
sbb
mov
call
fdivrl
lods
dec
iret
lret
xchg
stos
fs
xchg
pop
add
push
iret
or
mov
or
xor
inc
cmp
imul
cmpsb
mov
cmp
lahf
mov
leave
cmp
sub
sbb
or
jnp
cmp
pop
je
js
imulb
inc
mov
out
inc
sbb
sbb
fcomp
push
mov
push
inc
loope
add
mov
pop
test
sarb
pop
add
gs
cltd
std
stos
mov
popa
loop
insl
dec
pusha
cs
dec
js
and
ds
cmp
mov
pop
sub
jo
rolb
lock
mov
mov
cld
int
mov
lret
sbb
stos
in
fcmovu
repz
data16
fnstenv
cmp
xchg
sbb
xor
sahf
test
lcall
mov
fisubs
cwtl
fstps
cmp
add
je
loopne
in
lods
xor
std
add
jge
sarl
inc
xor
popl
int3
lea
push
sub
mov
clc
test
sbb
and
popf
pushf
mov
pop
cltd
notb
cmpsl
jle
repz
lds
jmp
jle
mov
xor
test
outsl
in
movsb
xchg
or
xorb
xor
add
dec
leave
aad
sbb
mov
fadd
sbb
insb
dec
pusha
and
jae
lock
pop
cwtl
sti
adc
call
aad
jmp
xchg
imul
ret
and
nop
cmp
int3
test
push
mov
jne
paddsb
push
stc
imul
fstpl
push
inc
jp
cmp
push
mov
mov
sub
shrb
cmp
lcall
ret
sub
lods
lret
and
cld
outsl
cmpsb
adc
fcomps
mov
daa
in
jg
adc
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
