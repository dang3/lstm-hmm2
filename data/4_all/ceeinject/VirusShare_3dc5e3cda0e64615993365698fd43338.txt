call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
jecxz
arpl
mov
addr16
repz
sub
sbb
or
pop
orl
arpl
xor
and
adc
add
repz
sub
jns
imul
cltd
inc
mov
stc
and
adc
add
repz
jecxz
mov
cmpsb
or
sub
or
add
adc
aas
add
call
and
xchg
pop
mov
rorb
andb
out
jmp
xor
sub
cltd
aad
roll
dec
or
pop
loop
pop
jnp
imulb
in
scas
test
dec
repz
mov
test
leave
or
cmpsb
dec
mov
arpl
xor
psubw
xor
cltd
jecxz
and
notb
lock
and
push
add
je
stc
sub
adc
add
and
cmp
mov
sub
pop
jl
mov
push
fstps
jmp
jmp
lds
xor
or
xchg
dec
sub
arpl
xor
and
adc
add
repz
sub
sbb
or
pop
orl
aam
jp
fisttps
test
mov
push
inc
mov
adc
adc
fcomi
sub
clc
and
daa
cltd
or
push
pushf
inc
adc
mov
dec
cmpsb
gs
push
rolb
ret
sub
daa
add
in
arpl
jb
and
adc
add
repz
sub
sbb
or
pop
orl
arpl
xor
and
adc
add
repz
sub
sbb
or
pop
orl
mov
adc
cmp
jmp
divl
push
inc
sahf
dec
mov
hlt
cmp
in
sub
insl
xchg
outsb
imul
sahf
repz
jecxz
add
fcompl
inc
sub
mov
xchg
lcall
add
mov
inc
dec
push
lret
int
cmp
xchg
push
nop
pop
jno
inc
pop
clc
mov
andb
sub
sub
jne
and
pushf
inc
pop
pop
sbbb
mov
int3
jae
or
cmp
inc
push
aas
sub
mov
iret
sub
out
xor
sbb
int3
inc
adc
mov
sbbb
sbb
out
scas
push
pop
add
or
mov
mov
or
out
xor
repz
add
je
mov
dec
push
out
xchg
loope
addr16
mov
dec
addr16
js
sbb
ret
cmpsl
test
test
shlb
jbe
outsb
mov
push
mov
test
daa
xchg
push
jno
roll
pop
loope
jmp
repz
push
xchg
movsb
and
ret
and
int3
mov
push
fcmovne
add
inc
and
mov
sub
js
movsb
add
aad
xor
test
daa
add
fs
lock
lahf
std
pushf
stc
cmp
dec
mov
xchg
std
lock
add
fsub
jo
scas
push
add
or
js
or
jle
jmp
data16
cltd
ds
cmp
mov
xchg
inc
bound
pushf
pop
sbb
test
sub
testb
cmp
pop
mov
cmp
popf
icebp
cld
lret
xor
push
cli
aaa
jle
es
enter
pop
mov
lcall
adc
in
imul
aas
cmp
test
or
dec
or
rolb
movsb
push
daa
xchg
int
fcomps
or
clc
out
fisttpl
mov
push
pop
lock
fstps
xchg
arpl
inc
jno
pop
cli
fs
outsb
dec
aam
ret
mov
popa
cmp
push
mov
inc
adc
cmpsb
sbb
imul
xchg
push
mov
xor
jle
jmp
bsr
fildll
scas
aas
cmp
push
inc
sbb
push
pop
xchg
fsts
lods
jge
or
loope
stc
idiv
aas
int3
ret
and
cmp
jbe
pop
xchg
loop
add
sbb
fmulp
dec
push
push
push
sbb
inc
cmp
lcall
sub
lods
inc
jge
push
mov
lods
jge
imul
test
loopne
lock
mov
lret
xor
out
xor
fsubrs
jg
int3
ret
jg
push
ss
ffree
lds
cmp
xchg
lcall
inc
popl
xchg
das
ret
cmpsl
popf
call
push
push
cli
adc
cmpsl
in
in
xchg
roll
call
cmpsl
inc
sti
push
xchg
or
fdivrp
stc
mov
xor
mov
cmpsb
jns
xor
or
or
dec
push
mov
mov
mov
push
cwtl
mov
rcl
aam
js
in
mov
inc
xor
cli
lahf
ffree
sbb
mov
sbb
jns
sahf
push
aad
sub
and
xchg
sti
inc
int3
js
dec
jp
inc
cmp
gs
push
jg
scas
push
nop
mov
lock
pop
lock
cmp
mov
cs
stos
test
iret
xchg
and
sbb
adc
jecxz
sbb
pop
orl
fisubrl
divl
shlb
mov
jno
popl
dec
test
jb
sub
mov
testl
or
jecxz
sar
int
addr16
pop
in
and
je
push
ret
shlb
and
mov
jb
cmp
mov
lcall
aaa
ficoms
loope
cli
inc
push
ror
add
push
xchg
push
cmpsb
daa
adc
push
lahf
mov
sbb
bound
repnz
imul
hlt
inc
loope
cs
mov
hlt
cmp
adc
sarb
jge
jecxz
pushf
cmp
push
add
les
xchg
insb
or
ret
or
xor
ret
mov
in
rcr
xor
scas
jmp
jo
jns
imul
dec
add
mov
lods
bswap
icebp
outsb
sbb
cli
jl
cwtl
add
push
add
sbb
insl
dec
je
shl
xchg
sbb
jns
push
xor
xor
xchg
jns
fstpl
sti
ret
mov
fidivrl
sbb
mov
fimuls
mov
fbstp
add
dec
mov
insb
pop
mov
enter
adc
imul
fstpl
mov
jp
in
push
cmp
sbb
leave
rclb
push
inc
lret
and
inc
mov
add
decb
mov
pushf
sub
scas
xor
dec
loopne
mov
jg
jle
movsb
push
out
adc
out
rol
cwtl
mov
mov
jg
sub
mov
pop
jnp
xchg
mov
hlt
cmp
xor
xchg
push
leave
adc
xchg
or
mov
cmp
idivl
inc
imul
cmpsl
pop
cltd
cvtdq2ps
push
mov
pushf
mov
scas
leave
mov
popf
lds
cs
jge
outsb
mov
fwait
push
mov
cmp
dec
push
xor
ud1
or
xlat
mov
iret
pop
lods
jb
cs
cld
dec
pop
fbstp
xor
xor
cwtl
push
mov
push
lea
dec
pop
fs
push
add
mov
stc
test
mov
add
sub
dec
sbb
fwait
inc
je
dec
mov
das
mov
clc
sub
add
test
sar
out
jecxz
sub
fsubrl
xchg
xor
cmpsb
mov
ljmp
rorb
out
in
scas
nop
mov
jae
jnp
data16
mov
shlb
xchg
movsb
iret
jae
xchg
dec
xor
mov
and
decb
jl
ret
flds
std
insl
jecxz
out
jmp
mov
mov
sbb
div
in
mov
jl
icebp
sub
sbb
scas
cmpsl
pop
rolb
sub
adc
or
xlat
ljmp
popa
outsb
filds
imul
adc
out
enter
loop
jae
sbb
das
in
aad
jb
xor
or
sahf
mov
jg
xchg
ficomps
dec
enter
popf
xor
mov
adc
and
fcomi
loop
das
hlt
or
cmpsl
jle
loop
sahf
dec
or
stos
repnz
jl
inc
mov
push
lods
xchg
pushf
mov
push
mov
pushf
mov
mov
mov
and
pop
fwait
and
add
sbb
sbb
pop
into
icebp
mov
mov
movsl
mov
mov
in
cmp
cs
out
iret
jo
nop
mov
sbb
xchg
sbb
stos
and
xor
and
or
sub
xor
movsb
aaa
push
and
mov
jns
aas
adc
pusha
shrl
or
shll
ja
lods
mov
dec
cmp
cmc
dec
inc
aad
pop
int3
add
fidivs
inc
cmp
cmpsb
loop
repz
fdivl
inc
xchg
daa
insb
ret
or
push
inc
das
mov
gs
xchg
lret
xor
add
adc
jg
test
imul
sbb
jge
sahf
fs
lds
push
adc
ffree
fldenv
hlt
cmc
cltd
call
repz
inc
shlb
add
dec
jb
call
scas
sub
test
stos
xor
adc
dec
sub
imul
adc
stc
jecxz
test
cmp
xor
sub
ss
dec
jns
mov
xlat
imul
pop
cmp
inc
add
orl
sub
lea
clc
test
mov
xchg
je
inc
adc
insb
dec
int
jno
xor
rcll
lea
hlt
adc
xchg
lret
test
push
imul
fbstp
inc
sub
pop
pop
mov
xchg
jl
fldl2e
out
and
lret
jnp
adc
out
pop
pop
inc
fdivrp
mov
fmuls
lock
imul
adc
andb
mov
sub
mov
or
ret
jne
ret
jmp
jae
mov
hlt
pop
testl
sahf
xchg
push
andb
popa
stc
stos
shrb
sti
ljmp
xor
jge
test
stos
xchg
push
jbe
jno
add
fstps
cltd
push
fisubs
xlat
insb
loop
sub
outsb
imul
add
inc
push
cmp
xor
dec
mov
shr
pop
mov
pop
and
xchg
pop
cmp
out
sub
in
xchg
and
loope
mov
gs
mov
sti
mov
xchg
icebp
inc
pop
cmp
in
iret
fnsave
jne
jb
inc
jbe
hlt
inc
mov
es
lds
push
mov
inc
rorl
int
mov
cmpsb
cmp
or
cmp
xchg
imull
int
cmpsl
fcom
or
hlt
sti
test
je
pop
mov
mov
and
lock
rclb
outsb
loopne
repz
push
mov
and
daa
mov
push
aaa
inc
divb
push
push
jl
loope
inc
and
push
push
and
adc
lea
mov
jmp
or
into
or
pop
jno
jge
pop
stc
xor
add
sub
add
mov
int3
lds
int
push
jmp
test
mov
cmp
fnstenv
shl
or
hlt
testl
icebp
push
add
aam
add
or
repz
cmp
daa
dec
mov
mov
xlat
pushf
mov
mov
push
ret
int3
je
daa
rcrl
and
pop
cmp
rcrl
and
adc
leave
push
pop
repz
inc
and
daa
mov
lea
fwait
cmp
lret
sahf
addr16
jnp
mov
insb
test
and
fs
pop
sub
sahf
mov
sbb
mov
cmc
lods
cmpsl
inc
sbb
jge
mov
test
xor
repz
cmp
lock
adc
imul
std
in
and
fidivs
dec
pop
inc
lods
mov
pop
dec
mov
data16
add
das
sbb
into
inc
add
cmp
dec
ds
iret
jl
xlat
push
mov
sbb
inc
iret
test
inc
cwtl
mov
dec
clc
pop
jmp
cld
cmpsl
lahf
cld
jmp
sti
das
pop
shll
cli
inc
jl
jne
nop
jmp
in
scas
dec
or
call
adc
or
adc
pop
or
jmp
push
push
ja
dec
nop
cltd
xlat
ret
mov
test
mov
jne
lcall
lds
mov
xor
or
xchg
fcmovne
lea
hlt
or
xchg
test
iret
inc
and
push
repz
fwait
xchg
pusha
lds
cmp
xor
je
xor
xor
cmp
fidivs
xchg
xchg
lret
cmp
cld
daa
add
repnz
enter
xchg
mov
iret
rclb
jne
std
mov
mov
ljmp
imul
inc
jecxz
call
je
xor
mov
mov
test
test
mov
loope
mov
push
mov
add
popf
sub
pop
and
mov
fistl
sahf
dec
and
test
jae
fimuls
lods
pop
das
jae
cmp
test
nop
fstl
push
xchg
dec
mov
dec
xchg
sub
xor
loop
arpl
push
ja
int
sbb
bound
pop
in
test
ss
out
movntq
popf
hlt
lea
mov
add
test
int
ds
out
enter
xor
ret
lock
pop
cmp
sub
in
loope
push
cmp
mov
fsts
sub
cmp
mov
mov
push
sbb
es
outsl
pushf
vpand
hlt
or
je
arpl
xor
cwtl
sub
loopne
add
xchg
shlb
lds
inc
mov
scas
pop
aad
xlat
xorl
cld
rcrb
mov
pop
lock
call
ljmp
sbb
pop
or
stos
bnd
fdivs
scas
mov
jnp
out
and
push
lea
xor
mov
mov
add
push
adc
pop
std
cltd
in
mov
out
add
test
test
cld
jmp
push
inc
xor
inc
sub
push
and
xchg
insb
cwtl
fcmovne
pop
dec
test
dec
sub
mov
inc
xchg
push
rorl
inc
inc
mov
shlb
dec
or
aam
xchg
xchg
lret
fldenv
mov
cmp
push
roll
decb
dec
je
push
stos
jne
sbb
push
dec
aas
sub
out
adc
xchg
stc
insb
cwtl
mov
jne
inc
cmpsb
in
lock
mov
sub
lretw
pop
push
fwait
into
dec
insb
insl
xor
jmp
xor
jg
xor
sub
inc
dec
leave
es
add
sub
dec
jo
cmp
xchg
xchg
jmp
inc
cmp
adc
mov
out
mov
fldt
xor
push
cld
or
and
jp
pop
lods
cmc
loop
dec
sti
and
xor
mov
cmpb
push
pop
out
adc
xchg
xorb
sub
or
mul
fisubrs
lahf
loope
dec
loop
push
lret
adcb
dec
fbstp
es
popf
add
cli
mov
call
xchg
mov
cmpsl
imul
push
or
pop
xlat
fmuls
push
fisttpl
push
shll
or
lret
loope
cmpsb
repz
xor
adc
push
btr
arpl
mov
fcomip
xchg
das
cmc
test
sbb
cwtl
jbe
mov
dec
sbb
xor
jmp
repnz
sbb
lcall
sub
jge
cmp
mov
ljmp
inc
sti
ror
inc
shlb
daa
das
push
mov
push
sahf
enter
movsb
loopne
mov
call
cmp
cmc
mov
mov
push
fs
aam
clc
mov
inc
clc
cmp
repz
sbb
sti
in
xor
push
or
jns
ret
mov
in
and
jg
mov
das
push
popf
imul
push
push
sti
mov
pop
inc
jo
sub
mov
mov
insl
inc
mul
jmp
std
cmp
cmpsb
jnp
push
fsub
xchg
andl
push
inc
xchg
in
out
iret
mov
adc
or
inc
push
sbb
cmpsb
negb
addr16
jno
in
les
out
cmpb
pop
fwait
xor
bound
repnz
mov
xchg
fmull
jmp
pusha
cwtl
sub
leave
jl
fstl
cltd
insb
dec
sti
jle
or
xchg
and
dec
inc
dec
scas
stc
push
pop
dec
mov
mov
int
or
inc
rcll
add
mov
das
adc
repz
pusha
xchg
fstl
mov
ss
aad
inc
imul
les
jge
imul
xor
les
es
inc
clc
int3
cltd
jmp
xchg
adcb
aas
lcall
repnz
ficompl
mov
outsl
insl
and
push
mov
stos
push
lcall
jge
sti
mov
enter
scas
xor
mov
lcall
inc
sbbl
nop
es
ret
push
push
push
xchg
sbb
mov
jmp
add
js
gs
push
xchg
lcall
jb
sub
push
add
sub
cltd
jge
iret
out
xlat
jge
loopne
or
pop
out
stos
pushf
hlt
movsl
push
adc
xchg
inc
mov
mov
fdivrs
fcomps
or
mov
push
inc
mov
or
inc
mov
js
ss
mov
mov
test
jge
mov
sub
xchg
cmpsb
adc
mov
xchg
inc
mov
cmpsl
cmp
cli
sub
fstpt
mov
scas
xor
sbb
mov
andb
or
dec
es
out
xor
push
lods
push
dec
rcll
idiv
std
and
dec
sbb
xlat
push
insb
fisubs
repz
sbb
jae
jnp
cmp
mov
out
fwait
mov
loope
dec
xchg
gs
sbb
mov
cmpsl
mov
mov
lahf
loopne
lcall
sbb
dec
fildl
mov
jno
xchg
jg
push
lods
ss
loopne
xchg
test
add
mov
out
sbb
decb
bound
jo
push
xor
pop
or
or
push
jbe
lock
or
jnp
daa
insb
test
push
stc
pop
mov
pushf
cmpsl
mov
mov
call
lods
dec
aaa
inc
pushf
test
xor
sub
mov
push
lods
fimuls
push
shrl
outsl
mov
lcall
pop
mov
gs
push
int3
and
jl
insb
das
inc
imul
fldt
aas
inc
inc
adc
jg
jecxz
imul
xchg
jmp
mov
ss
push
rcrb
lcall
mov
dec
lahf
fs
push
add
popa
gs
repz
loope
ret
mov
adc
movsb
scas
clc
mov
ljmp
xchg
aaa
imul
jbe
cmp
jge
sbb
imulb
stc
pop
add
outsb
icebp
iret
mov
pop
arpl
mov
inc
sar
cltd
dec
jp
push
pop
shl
into
push
and
xor
cmp
ljmp
jae
jne
aad
xor
stos
movsl
mov
xor
mov
jno
pop
xor
mov
insb
ljmp
stos
cmp
cmpsb
hlt
fs
movsb
xor
or
inc
ljmp
dec
add
adc
xlat
inc
bound
inc
mov
pcmpgtd
sbbb
movsl
jno
loopne
adc
fbld
loope
test
mov
or
rcrb
cmpsl
dec
mov
and
outsl
push
add
daa
dec
pop
rcll
lret
mov
dec
or
std
xor
subl
cmp
test
ficoms
inc
cld
jno
es
dec
cld
push
mov
arpl
and
sub
adc
mov
stos
and
cmp
mov
andl
and
sbb
sti
popf
mov
sbb
and
pop
sub
clc
mov
and
outsb
xor
aaa
xchg
xchg
add
leave
andl
cmc
push
fbstp
lods
fwait
jl
mov
mov
cmp
aas
inc
xor
push
push
out
lret
mov
rolb
push
pusha
push
add
push
jecxz
jno
xchg
into
les
bound
jge
xchg
call
xchg
int
rorl
fbstp
mov
pop
pop
imul
mov
push
js
cmp
pop
movsl
fisubrs
fdivrl
mov
and
mov
insl
xor
cmc
adc
xchg
js
dec
dec
and
push
adc
pusha
scas
and
mov
stos
fwait
xor
inc
mov
xchg
sbb
mov
aad
popf
out
sbb
jno
cwtl
adc
ret
adc
pusha
push
maxps
in
dec
xchg
filds
inc
and
jle
hlt
inc
aaa
pop
jnp
sub
out
pop
xor
out
mov
cmpsl
or
push
test
mov
fimuls
or
jno
add
xor
cmpsl
dec
mov
pop
fidivs
shlb
sbb
lods
pop
adc
dec
mov
dec
push
mov
cmp
xchg
push
je
mov
popf
rclb
movsl
cmp
and
xchg
mov
movsb
sub
pop
ja
push
cmp
jecxz
shl
or
cmc
je
and
push
jae
jmp
dec
xor
dec
cwtl
mov
cli
and
jmp
sbb
test
negl
sahf
jmp
lcall
pushf
lea
sub
sub
pop
jge
lahf
sbb
sub
cmpsb
popf
jge
adc
sbb
punpckldq
mov
mov
mov
xchg
stos
cld
jg
loop
pop
cmp
sbb
sub
push
xor
sub
add
cmp
jp
or
popf
add
inc
adc
nop
popf
mov
fdiv
int
sub
inc
xchg
mov
out
xchg
inc
lea
inc
xchg
inc
fcomps
inc
jns
bound
lock
lahf
sahf
add
dec
cwtl
mov
pushf
adc
loope
bound
mov
add
cwtl
cmpb
dec
adc
jecxz
andl
cld
out
sarl
rcrl
or
xor
and
adc
add
repz
sub
sbb
or
pop
orl
arpl
xor
and
adc
add
repz
sub
sbb
or
pop
orl
arpl
xor
and
adc
add
repz
sub
sbb
or
pop
orb
bound
xor
and
pop
add
repz
jecxz
jns
ret
jle
icebp
sub
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
bnd
push
mov
cmp
call
xor
add
rcrb
dec
mov
mov
or
bound
xor
add
rcrb
dec
mov
mov
or
inc
call
xor
push
push
ljmp
shlb
stos
sbb
ret
mov
lea
mov
nop
inc
dec
push
cs
mov
mov
push
into
adc
pop
lods
fnstcw
inc
inc
enter
and
and
mov
stc
pop
pop
fucom
int3
add
xor
xchg
add
repnz
vmovsd
cmp
lret
xchg
xor
and
test
shlb
push
ljmp
xchg
push
fnstsw
mov
cmp
mov
push
fbld
leave
or
mov
add
call
dec
sub
xor
enter
lods
jno
aad
add
rcrb
dec
mov
mov
or
call
xor
add
xchg
pop
subl
push
int
std
push
push
pop
add
pop
mov
jb
test
push
pop
cmpl
jo
dec
xlat
outsl
or
addb
ret
jnp
push
cmp
mov
or
call
xor
add
rcrb
dec
mov
mov
or
call
xor
add
dec
ljmp
ret
into
rcrl
mov
inc
das
or
cs
mov
nop
and
xchg
and
lret
enter
mov
aam
in
pop
mov
mov
fidivrs
jno
jbe
mov
out
pop
shlb
fistl
mov
hlt
movsl
ja
cmpsb
cwtl
and
xchg
jbe
xadd
aas
lock
loopne
scas
pop
ret
lret
ret
in
loopne
lret
mov
mov
mov
add
mov
xlat
pop
stc
jo
dec
adc
inc
lcall
mov
sbb
xchg
test
sbb
and
popa
js
popf
in
lea
xchg
int3
mov
adcb
pop
sbb
fs
inc
inc
iret
mov
cmpsb
xor
mov
jmp
and
cmp
push
cmp
dec
call
data16
and
push
ja
fsubr
test
mov
push
or
mov
mull
out
xor
pop
fistl
sbb
cmp
shlb
std
aam
decl
subl
test
nop
popf
adc
jp
movsl
xchg
les
mov
inc
jbe
int3
punpcklwd
push
xor
jge
out
imulb
add
mov
mov
mov
lock
das
jno
sbb
sti
pop
xor
add
stc
mov
pop
bound
xchg
cld
pop
or
cmp
scas
aas
ja
scas
aaa
aaa
xorb
andb
and
mov
aam
shll
xchg
pusha
lahf
or
mov
push
dec
in
js
inc
dec
jns
sbb
lret
lahf
xchg
mov
cs
pop
push
js
cmp
call
jl
aaa
adc
shll
in
cli
cli
scas
int
pusha
and
shll
cs
scas
shll
in
sub
pop
mov
and
mov
or
and
daa
ljmp
xchg
or
cld
mull
pop
mov
mov
popf
subl
xor
in
mov
sti
jb
adc
add
mov
sarl
cltd
test
xorb
in
arpl
push
int
loop
enter
std
dec
jg
stos
stos
mov
mov
daa
popa
fisttps
jno
loope
fs
and
test
out
jle
jbe
xchg
push
ds
mov
loope
icebp
push
and
cli
aaa
push
and
dec
ror
adc
mov
dec
test
in
jne
mov
dec
jp
jns
push
pop
popa
sarb
sbbl
rolb
sub
jle
xchg
xor
jl
insl
ror
or
pop
cld
stos
pop
cltd
push
pop
push
push
das
lods
cwtl
fwait
fwait
jbe
jmp
scas
sahf
inc
aad
or
adc
pop
pop
ficomps
add
jecxz
sti
cmp
cmp
rol
loope
test
das
loope
mov
popf
hlt
pop
mov
lcall
push
in
push
mov
aas
mov
sbb
add
lcall
fcoml
lret
mov
into
cmpsb
xor
and
testl
jg
ja
bound
dec
stos
scas
push
mov
es
add
movsb
lods
out
push
cli
dec
stos
adc
scas
pop
mov
mov
arpl
stos
cltd
addr16
in
and
cmp
xchg
adc
into
mov
or
dec
cmp
sub
jp
xchg
sub
add
je
mov
sub
mov
rcll
out
adc
pop
ljmp
sub
mov
dec
push
js
push
pop
sub
mov
sbb
mov
mov
stc
xor
or
je
sub
jmp
jmp
xchg
and
cmpsb
sub
lock
mov
in
in
lret
fwait
shrb
dec
and
xor
enter
lahf
out
int3
outsb
xor
imul
push
arpl
push
cwtl
cli
push
divb
cmpsl
sbbb
and
mov
imul
inc
cmpsb
adc
ljmp
and
popf
mov
add
mov
xlat
or
gs
sub
jl
sti
sarb
insb
mov
push
inc
ds
enter
push
repnz
pop
in
add
adc
leave
mov
and
nop
mov
loope
enter
cmpsb
xchg
or
jmp
xchg
mov
lret
andb
inc
int3
push
xchg
xchg
mov
hlt
inc
pop
dec
bound
lods
pop
out
mov
stc
mov
sub
dec
or
mov
popa
test
in
int
sbb
daa
jno
push
xlat
sbb
xor
pop
and
push
sbb
xchg
mov
clc
xor
insb
mov
push
dec
xchg
xchg
mov
push
sub
lret
hlt
xchg
cmp
aam
or
pusha
stos
jp
jmp
add
sahf
movl
stc
pop
dec
xchg
jecxz
mov
and
repnz
stc
sub
and
movntps
fsubrp
sbb
shll
test
xor
lock
dec
xchg
xor
inc
fistl
fsubrs
cld
loop
insl
inc
stc
out
xor
pop
out
lods
inc
push
add
fs
jno
subl
jle
push
xchg
mov
mov
mov
mov
mov
fsubl
and
or
loopne
lods
jb
or
xor
lock
inc
xor
xchg
push
lea
sbb
jp
imul
or
shrl
cmp
pop
xchg
mov
mov
mov
loop
mov
and
ljmp
lret
jns
fcomip
pop
push
cltd
jae
add
loopne
adc
pop
je
dec
stc
adc
mov
sti
xor
or
xchg
stos
stos
mov
xchg
or
pop
jbe
sbb
jns
mov
mov
pop
shrl
push
jb
dec
pop
push
push
pop
insb
pop
mov
sub
add
mov
add
push
lret
scas
ds
dec
cmp
sti
cs
hlt
xchg
call
push
iret
in
loop
sbb
dec
jl
xor
nop
adc
jns
xchg
inc
rcr
sbb
adc
xorl
add
inc
int3
push
inc
mov
dec
xor
lea
sub
lods
pop
xor
mov
stc
imul
std
mov
mov
xchg
fdivs
lret
push
xchg
cmc
xchg
mov
lock
adc
mov
pop
add
mov
push
push
cmpsl
out
cmp
lahf
and
or
xchg
cltd
cmp
test
fisttpll
inc
dec
jb
aas
add
adc
xchg
hlt
xchg
or
push
xor
out
lods
popa
and
inc
adc
mov
mov
nop
sub
push
lods
cmp
js
add
test
cmp
jne
cs
mov
cld
push
lahf
decb
das
jae
xchg
mov
scas
arpl
insl
stc
xor
dec
push
jae
dec
sti
dec
ljmp
xor
scas
cli
inc
xorb
push
mov
aam
test
aad
inc
dec
fdecstp
or
or
sub
or
mov
rolb
mov
test
aad
jae
xor
cmc
cld
or
fnsave
testb
aas
jecxz
clc
ja
xor
push
jmp
mov
xchg
mov
sbb
hlt
sub
sub
shlb
std
scas
fistl
mov
push
cmp
loope
int
pop
test
outsb
nop
add
sarb
inc
jns
push
jp
hlt
fimuls
seto
jge
mov
add
mov
jo
sti
pop
or
inc
adc
stc
out
jno
mov
mov
pop
cmpb
std
jg
jecxz
sub
daa
std
mov
adc
fistpl
add
push
mov
shl
jbe
loop
stc
inc
sub
dec
dec
out
repz
push
inc
pop
inc
aaa
es
les
shll
dec
adc
lcall
pop
mov
gs
mov
dec
ret
dec
daa
xchg
mov
fbstp
pop
sbb
les
nop
add
je
push
lret
jg
shr
or
push
jb
and
jp
aad
cmp
fnstsw
mov
add
lret
sbb
adc
xchg
into
shrb
xchg
imul
ljmp
popf
aam
hlt
mov
pop
add
shlb
jno
adc
dec
sbb
pushf
mov
notl
addr16
pusha
lea
pop
mov
inc
or
movsl
lds
gs
sub
hlt
aam
test
mov
mov
dec
frstor
xchg
push
and
and
gs
cmp
push
sahf
je
mov
mov
adc
mov
es
jge
clc
sub
dec
popa
sub
jb
fwait
aas
push
std
call
cmpsb
test
out
bound
mov
out
outsb
or
icebp
shr
mov
test
ret
clc
loope
sbb
aas
push
pushf
add
stos
cltd
and
xor
das
add
outsb
cli
jge
and
out
push
lret
mov
dec
test
push
mov
clc
jo
xor
xor
shll
dec
scas
rorl
movsl
cld
testb
push
mov
sub
loopne
cmp
gs
jle
jno
movsb
js
ret
js
cld
dec
imul
mov
pop
mov
clc
jg
xor
pop
push
outsb
pop
mov
pop
jle
mov
loopew
cmc
xchg
mov
mov
xor
xlat
scas
cmp
fstpt
movsl
pop
rcl
adc
aam
mov
popf
pushf
lahf
mov
aas
xor
lret
jp
leave
push
je
pop
enter
inc
mov
lods
rcrl
push
lock
es
pusha
ftst
push
add
inc
rcl
mov
in
outsl
inc
adc
iret
or
dec
lcall
jle
fwait
xchg
xlat
pop
xchg
stc
lcall
xchg
call
addl
loope
cs
fcmovbe
aas
mov
mov
mov
bound
mov
or
in
mov
inc
out
outsl
rcll
mov
sbb
lret
push
dec
out
dec
jno
enter
jle
and
dec
or
jp
pop
inc
or
out
jecxz
imul
add
sub
lcall
arpl
or
adc
lock
cmpsl
pop
mov
nop
mov
movsb
cmp
mov
push
insl
push
pop
es
imul
inc
lret
paddusb
jge
mov
dec
mov
jnp
push
sub
addr16
mov
ljmp
loope
mov
loopne
int
jle
push
mov
xor
lcall
fdivrl
fisttpll
or
pusha
faddl
jb
lret
adc
jecxz
mov
cmc
fwait
dec
sub
inc
fdivrl
xchg
push
mov
cmpsl
mov
adc
test
dec
lds
cli
xchg
mull
rcrb
addr16
mov
movsb
mov
or
and
xchg
stos
das
jmp
add
call
sub
sub
jo
mov
cmp
jp
lods
sub
ja
push
ds
mov
push
xchg
xchg
hlt
sahf
add
movsl
mov
push
call
xor
pop
ficompl
and
cmp
imul
insl
or
lcall
mov
cmp
mov
push
inc
xchg
popw
mov
mov
fdivs
outsb
cwtl
out
mov
cli
in
fdivrs
pop
repz
sbb
xor
mov
jecxz
std
push
or
ljmp
gs
adc
and
clc
rcr
xchg
push
aaa
adcl
ret
ljmp
sbb
daa
xor
movsl
adc
push
dec
mov
jb
adcl
iret
pop
andl
add
inc
mov
lods
sahf
mov
pop
bound
mov
cmp
scas
fimuls
fisttpll
js
and
pop
test
mov
adc
fisubs
loope
pop
outsb
mov
aas
pop
mov
sbb
sub
mov
cmp
aas
insb
sbb
cmc
jne
xchg
sub
lcall
mov
mov
testw
sahf
pop
xlat
sbb
mov
push
scas
cmpsb
fistpl
sbb
mov
cmpsl
in
scas
inc
pop
fsubr
roll
xchg
jge
imul
sti
push
movsb
test
pop
inc
and
xorl
inc
mov
bound
les
cs
inc
stc
imul
pushw
lock
mov
cmp
pop
pop
mov
or
ret
lock
repz
push
je
push
jno
iret
jno
xchg
pushf
cs
cwtl
adc
movsb
pop
cli
push
xor
sub
push
int
inc
xchg
pop
icebp
sti
leave
mov
lret
inc
mov
lock
and
int3
push
popf
iret
or
aad
adc
xor
jb
pop
mov
mov
inc
arpl
es
mov
add
mov
lds
add
loope
mov
out
hlt
or
lods
stc
into
push
or
aam
enter
or
aaa
gs
jl
push
xorb
and
jbe
add
mov
adc
rorb
lret
shrl
mov
les
std
pop
pop
sub
xchg
xor
jp
inc
cmp
div
inc
fnstsw
pop
xchg
cs
mov
faddl
stc
das
daa
cmp
out
dec
rclb
or
fcmovnb
dec
push
lea
mov
cmp
and
shll
in
push
sbb
scas
out
inc
mov
lds
xchg
std
je
in
loope
rclb
jl
insb
in
pop
cmpsb
test
adc
cs
les
push
lret
or
nop
pop
jge
jbe
cmpsl
mov
daa
mov
push
xor
inc
outsb
test
sahf
fldl
in
adc
xchg
lods
mov
sti
jle
cmp
cmp
sub
jne
js
mov
in
js
sub
jecxz
jle
dec
call
pop
push
jge
add
divl
push
les
adc
mov
jl
inc
jmp
sub
ds
mov
imul
repz
aaa
insb
mov
xchg
dec
jbe
mov
imul
or
jns
mov
mov
pusha
movsl
lcall
xchg
sub
sub
adc
in
in
int3
loope
movsb
mov
xor
jp
out
ja
jge
and
mov
repz
mov
orl
lock
adc
into
aad
adc
bound
ja
mov
jmp
mov
sub
aas
jae
rorl
jo
pop
fiaddl
cmp
dec
je
mov
jno
dec
adcl
and
xchg
jge
inc
call
push
lcall
lock
inc
push
sbb
xchg
jmp
mov
in
orb
flds
loopne
adc
adc
sub
je
jb
test
dec
xchg
and
js
mov
addr16
xchg
jmp
jl
je
or
cmp
push
xor
sahf
sbb
inc
cmpsl
or
ja
shr
lds
pop
je
xorl
jp
ja
arpl
push
push
mov
aad
adc
mov
gs
test
mov
push
mov
jg
adc
sub
and
jge
mov
mov
aas
or
fldln2
in
mov
orl
cltd
movsb
pop
data16
jle
pop
push
stos
hlt
movsl
push
std
sub
xor
negl
pop
mov
arpl
xor
les
dec
pop
jp
es
or
mov
sbb
out
js
push
and
outsb
nop
sub
push
add
push
mov
adc
sub
jp
stos
and
push
imul
xor
js
stos
pop
jno
addr16
push
or
cmpsl
cmp
push
sbb
push
mov
aas
dec
aam
lahf
fcmovu
dec
mov
ret
adc
mov
jmp
hlt
loopne
std
jl
push
outsl
aas
repz
cmp
popl
fcoml
in
jae
sarb
fistpll
cmpsl
mov
insb
scas
iret
out
mov
push
pop
lea
pop
mov
pop
pop
mov
add
add
mov
mov
stos
mov
sbb
mov
sahf
mov
sub
mov
xor
lret
add
fadd
incb
in
and
sub
es
and
sbb
rclb
shrb
sarl
fmull
mov
pushf
daa
paddsw
xchg
notb
ds
mov
insl
xchg
pop
clc
pop
insl
mov
ficomps
test
jecxz
test
adc
xor
cmp
fbstp
dec
adc
sbbb
xor
loopne
loop
jne
test
stc
mov
add
int
shr
sbb
xchg
pop
jb
fdivr
std
xor
aam
or
or
std
gs
ret
fwait
test
sub
xlat
adc
stos
out
les
mov
and
sub
push
cli
dec
cmp
pop
xor
popa
lea
inc
orl
repnz
outsl
add
aad
lret
divb
xor
jne
stc
aad
sti
mov
sbb
stc
frstor
pushf
mov
xor
and
sbb
subb
dec
cmp
sbb
fwait
sbb
jle
xor
dec
insb
ljmp
ss
scas
daa
stos
fldt
es
dec
repnz
mov
adc
xchg
fs
cli
push
inc
enter
mov
xor
pop
aad
mov
xor
lea
mov
testb
outsl
add
dec
test
dec
adcl
xchg
adc
aas
das
xchg
in
pop
xchg
imul
xchg
mull
into
mov
andl
ja
add
mov
push
ret
adc
lea
loopne
mov
fstpl
daa
mov
mov
cmp
in
ljmp
lret
arpl
xor
icebp
lcall
mov
pop
push
jge
jo
cmpsb
cwtl
xchg
dec
scas
out
xchg
mov
dec
dec
loopne
pop
cltd
cmp
ss
imul
clc
mov
outsl
loopne
sbbl
loope
xchg
cli
sbb
gs
xchg
mov
hlt
fsubl
pop
mov
pop
inc
push
adc
fdivs
xor
and
add
enter
cs
ret
mov
sbb
testb
cmp
outsl
push
in
arpl
test
jmp
jno
mov
rcrb
push
mov
enter
int
mov
sub
sbb
orb
fidivrl
push
je
mov
sbb
lds
outsl
mov
out
add
and
cmpsb
into
lret
fbld
jae
ljmp
fnstenv
sbb
adc
push
out
sahf
sbb
cmp
mov
adc
lcall
push
pop
jecxz
pop
movb
addb
in
push
cli
movsl
xchg
aaa
jne
xchg
mov
add
pusha
nop
mov
add
pop
inc
jns
push
scas
in
ds
lret
adc
ficoms
lret
mov
imul
push
hlt
sarb
inc
sahf
sti
pop
jb
je
sub
inc
lcall
fwait
sbb
fildl
cmpsl
xchg
out
push
aas
ret
imul
push
xchg
jl
out
cld
lods
pop
int3
sbb
hlt
aaa
mov
xchg
dec
scas
orb
cmpsb
shlb
int
mov
mov
xor
jg
test
lock
sub
xor
pop
lret
cmc
leave
rcrl
pop
fnstcw
jle
dec
mov
inc
jnp
add
dec
fdivl
pop
insl
inc
push
pop
jnp
in
loop
fwait
pusha
jecxz
xchg
pop
xlat
mov
data16
in
sarl
push
pop
aad
inc
xor
add
push
adc
pop
inc
cmp
pop
pop
inc
loopne
or
or
std
pop
adc
fstpt
clc
cmp
mov
push
es
das
loop
orb
aam
std
mov
dec
int
movsb
mov
ljmp
jns
lods
cmp
dec
or
clc
pusha
inc
cltd
cmp
sub
push
ljmp
xchg
jle
sahf
mov
mov
cmp
push
or
cli
dec
adc
mov
sub
aad
mov
lret
add
daa
push
push
mov
dec
fcompl
test
sbb
outsb
jg
cmp
popf
pop
xor
lods
xlat
mov
pop
pop
fisubrl
pusha
or
jns
pop
popa
int
inc
lret
mov
call
ret
cmp
or
call
xor
add
rcrb
dec
mov
mov
or
call
xor
add
rcr
ret
cmp
or
call
xor
add
rcrb
dec
mov
mov
or
fadds
inc
xor
ja
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
lret
xchg
fildl
aas
xlat
hlt
out
cwtl
mov
dec
test
or
ss
or
inc
cmp
lretw
xchg
fildl
mov
fwait
stos
idivb
push
imul
or
sub
jbe
data16
jecxz
xchg
add
idivb
and
or
je
ja
insb
adc
in
ret
fsubrs
push
jl
int
mov
insl
add
sbb
xrelease
mov
xchg
faddl
mov
jle
insb
into
push
jb
xchg
leave
test
pop
inc
or
xor
daa
inc
sbb
dec
fwait
pop
or
sub
movsb
pop
push
xor
test
cmp
and
lcall
ljmp
hlt
inc
sbb
fwait
push
push
jns
dec
sbb
out
dec
out
jmp
mov
repz
sub
lods
or
je
cltd
dec
pop
jl
outsl
mov
add
inc
sub
dec
inc
dec
push
sub
cltd
add
sti
cmpsb
pushf
mov
stos
mulb
push
jae
bound
adc
inc
xor
and
testl
xchg
dec
data16
pop
sbb
push
or
jle
pop
add
add
mov
out
fwait
subl
je,pt
push
cmp
jo
pop
adc
scas
xlat
mov
xchg
xchg
faddp
in
stos
idivb
push
imul
or
inc
sub
lretw
xchg
fildl
mov
fwait
stos
idivb
push
imul
or
inc
sub
lretw
xchg
hlt
scas
push
inc
test
push
sbb
xchg
lock
push
in
pop
repnz
je
aad
test
data16
test
or
enter
xchg
daa
jge
inc
cs
mov
lret
inc
mov
sub
sbb
dec
scas
ror
out
sarl
daa
out
je
dec
jl
adc
push
leave
and
out
mov
pop
ret
add
add
dec
fdivl
mov
mov
jmp
sub
movsb
out
test
addr16
fwait
xor
cmpsb
jo
jecxz
adc
sub
xchg
stos
enter
mov
loopne
or
add
mov
inc
inc
data16
into
adc
lods
insl
arpl
insl
popl
xor
mov
xor
and
xor
and
mov
std
int
fdivr
pop
cld
fists
les
pop
and
bound
sub
add
out
bound
pop
mov
repnz
push
ds
xor
and
sub
data16
jg
mov
sbb
loope
nop
inc
test
jecxz
ds
nop
ret
je
jns
mov
wrmsr
lods
xor
arpl
or
or
mov
mov
lret
cmp
scas
xchg
stos
push
mov
rep
lret
jbe
in
dec
mov
aad
jp
inc
dec
push
test
lock
push
xchg
mov
ja
or
pop
pop
jae
fcmove
adc
mov
popa
add
out
push
add
fidivs
loop
jnp
sbb
test
xchg
cs
ret
ljmp
cld
mov
pop
jmp
adc
les
xchg
fs
movsb
sahf
pop
mov
mov
jne
into
mov
lds
inc
add
mov
adc
cmp
jo
out
dec
cmp
pop
fldenv
movsb
aaa
std
iret
sub
pop
outsb
stc
mov
cltd
add
int3
mov
mov
fdivrs
jae
push
incl
and
jle
cmp
push
adc
mov
das
lods
test
rorb
pop
lret
add
dec
fnstenv
cmp
mov
jns
in
bound
xchg
lods
xchg
pop
mov
sti
add
cwtl
sub
jp
sub
int3
imul
mov
mov
mov
push
mov
or
cmp
and
sub
push
int3
lret
in
jns
sub
sbb
cld
push
fiaddl
xorl
das
jbe
je
dec
insb
imul
mov
jnp
jecxz
and
adc
cs
cmp
clc
lret
add
sub
xor
mov
addb
jmp
push
mov
and
xchg
jnp
fcomp
test
mov
pusha
pop
cli
jmp
pop
mov
clc
mov
rcll
and
push
sbb
movsl
outsb
mov
or
cld
es
data16
sbb
ret
ret
aaa
mov
xchg
lds
je
cmpb
inc
dec
xlat
sub
cmpsb
pushf
and
cmp
es
pop
cmp
imul
iret
test
aaa
jns
xchg
inc
push
vcvttss2si
daa
push
leave
ret
nop
cs
add
xchg
int3
in
cmp
inc
movsb
mov
xchg
sub
or
mov
pop
fs
fidivl
cwtl
sbb
dec
xchg
call
jle
adc
aas
pop
mov
and
mov
dec
dec
mov
jmp
sbb
jb
aam
ror
lds
xchg
pop
adc
xor
iret
sbb
test
xlat
faddp
mov
jge
xlat
xchg
repz
into
jmp
bound
mov
cmp
adc
lods
pusha
jmp
push
fs
add
imul
int
movsl
jg
xchg
jbe
aad
or
cwtl
imul
cwtl
sub
mov
data16
pop
fstps
movsb
inc
jo
rcl
dec
das
mov
fstp
aaa
stos
or
arpl
or
clc
mov
push
and
mov
and
sbb
jle
sbbb
jmp
in
mov
sub
bound
xor
push
rcll
je
dec
imull
mov
xor
jno
insb
stc
pop
outsb
enter
cwtl
outsl
iret
or
and
lds
in
in
adc
into
pop
cmp
dec
lret
adc
push
mov
jg
out
call
add
jbe
mov
out
cmpsl
push
or
xchg
and
cmp
jge
mov
dec
or
xlat
es
jecxz
sarb
imul
cmpsl
imul
mov
insl
shll
pop
fs
push
scas
lahf
xor
hlt
fdivp
mov
dec
inc
insl
push
int3
cmp
lds
insb
fcomp
or
test
push
sbb
pop
loopne
adc
popa
push
arpl
dec
rol
imul
xchg
mov
fidivrl
adc
mov
movsl
fcompl
out
sub
arpl
popa
fcompl
insl
sbbl
fst
mov
push
inc
mov
rolb
inc
adc
ud1
popf
rcrl
dec
jecxz
push
mov
or
andl
push
add
arpl
arpl
sbb
mov
push
lret
dec
ss
js
dec
cmpsl
cwtl
jecxz
ret
das
cmp
mov
pop
sbbl
lcall
lahf
mov
cmp
push
push
rcrb
push
or
mov
or
fsubrl
jne
xchg
scas
xchg
add
dec
add
popf
pop
and
or
fstpl
xchg
shlb
les
or
out
out
or
xor
fsts
jne
cmovs
out
jno
mov
loope
insl
bound
into
pop
jns
in
xor
stc
jbe
push
lods
arpl
add
imul
mov
xchg
ret
idivb
jo
mov
jno
push
mov
pusha
lock
mov
push
mov
pop
sub
into
dec
testb
jmp
or
imul
jo
aad
daa
dec
ja
adc
adc
sub
sarl
mov
out
lcall
dec
clc
shll
lods
jge
add
mov
in
mov
test
xchg
es
imul
inc
je
jb
dec
and
push
fsub
repz
push
out
cmp
dec
out
icebp
and
jb
xchg
enter
or
xchg
orb
add
mov
push
psubq
pop
add
repz
insl
mov
and
rorb
sub
test
sar
dec
push
gs
mov
rclb
hlt
lcall
mov
test
xchg
gs
cmp
push
leave
sbb
xchg
add
push
int
mov
in
dec
add
in
adc
sub
outsb
inc
call
insb
adc
negb
data16
jns
jg
mov
jnp
fwait
mov
sbb
repz
rclb
loopne
in
scas
cmpsb
loop
mov
xor
mov
ss
jle
ffreep
pop
stc
mov
jecxz
mov
jbe
clc
insl
in
repz
into
mov
sbbb
jp
jb
and
scas
stos
mov
sti
sarl
pop
pop
movsl
xchg
jb
mov
sarb
iret
ss
gs
outsb
leave
cmp
push
jl
adc
cli
popa
xchg
cmpsl
cmpb
jmp
clc
dec
orps
ret
xchg
fnop
xor
add
adc
adc
add
and
push
es
jb
jp
jo
outsl
fidivl
jnp
sub
fwait
into
xor
negb
add
in
lods
outsl
aam
xchg
adc
push
jp
cmp
loop
push
movsl
jno
xor
pop
je
scas
jp
jg
xchg
jecxz
xchg
in
cld
int
mov
adc
xchg
adc
xchg
popf
inc
jge
pushf
or
pushf
inc
stos
psrlq
int
inc
dec
leave
adc
in
jecxz
out
push
adc
ds
dec
je
ljmp
jle
mov
repz
pop
jne
mov
adc
sub
ljmp
cmp
ret
inc
push
cs
aam
xor
cmpsl
or
iret
loop
cmpsl
xchg
test
fmuls
mov
sub
out
rcrb
scas
dec
push
outsb
movsl
pop
loop
fmuls
and
and
xchg
pop
in
fcom
scas
out
cld
xor
push
scas
xchg
pop
pop
and
fdivs
mov
push
stc
jns
lret
inc
hlt
xchg
inc
shr
je
jo
mov
mov
add
add
push
sahf
andb
shl
mov
jb
outsl
loopne
mov
add
or
dec
in
xor
dec
test
sub
sbb
das
cltd
or
adc
jge
insb
inc
aaa
in
in
add
pop
call
in
mov
leave
or
inc
xor
inc
sub
iret
mov
lods
test
pop
dec
andb
shll
or
mov
pop
push
scas
cmpsb
movsb
icebp
out
cli
aaa
test
xor
jle
adc
cmp
ljmp
lds
cmp
cwtl
dec
or
scas
pop
dec
call
jnp
jg
ret
jle
xor
test
rclb
add
scas
into
data16
inc
xlat
pop
cmp
pop
shl
push
xor
pushf
sarb
fisubrs
cmp
loopne
cmc
xor
mov
add
push
mov
fld
and
jb
out
inc
cmp
mov
test
cmp
out
jmp
xchg
lret
lcall
inc
jnp
in
mov
lea
push
jae
jp
imulb
jge
xchg
pushf
push
mov
sub
cmpsb
xchg
ficoms
and
insl
lea
nop
cmpsl
cltd
cmpb
out
cmp
pushf
test
add
or
je
add
cli
sbb
aas
fisubrl
ficomps
loopne
sbb
jl
xlat
pop
mov
mov
shll
cltd
out
mov
loopne
mov
dec
add
and
push
push
cmp
mov
fs
inc
push
rcrb
fadd
aad
adc
stos
jecxz
decb
adc
lea
popf
nop
in
mov
pop
rorl
dec
push
fidivs
or
push
dec
inc
mov
pop
shll
jp
inc
decl
lds
rcr
pushf
push
cltd
int
inc
cs
loope
inc
je
mov
sti
mov
cli
addr16
jbe
jne
or
aas
and
push
lret
movsb
popf
test
mov
xchg
and
test
imul
ret
push
jb
testb
xor
push
popa
mov
add
sahf
mov
add
sbb
adc
clc
cli
push
leave
imul
nop
enter
sti
pushf
fisubrs
jno
mov
sbb
jbe
lods
loopne
icebp
hlt
sbb
out
in
cltd
pop
mov
jne
rcll
inc
andb
sub
sub
xchg
push
cmp
ja
sub
add
push
lock
cmpsb
sub
adc
maxps
jns
inc
push
sarb
call
and
hlt
pushf
inc
and
xor
lds
xchg
dec
test
ja
lahf
jae
sbb
inc
sbb
pop
pop
xorb
mov
out
jg
mov
repz
jns
gs
jnp
xor
repnz
pop
daa
les
std
or
mov
jl
insb
xor
or
stc
push
mov
cmpsl
mov
dec
mov
mov
mov
ret
add
push
and
fstps
sub
mov
dec
xchg
popa
shrb
sbb
lahf
adc
cltd
pop
loop
xchg
cmp
ja
call
pusha
sub
ss
imul
jbe
call
fs
and
testb
add
int3
aaa
mov
push
push
jae
fstps
lahf
shlb
mov
or
xor
les
out
mov
inc
fdivrs
jb
std
pop
cmp
dec
cmpsb
pop
popf
ret
xchg
jp
sub
and
or
pop
aad
sbb
fwait
aad
hlt
test
mov
or
cltd
inc
cs
jl
jae
mov
mov
jge
out
cld
jae
test
clc
das
or
cmp
into
aam
cwtl
sahf
push
popa
test
call
jns
jnp
out
stos
xchg
addb
or
insl
cmpsb
sub
pop
flds
mov
stos
pop
add
fstpt
push
lret
mov
sub
inc
adc
cmpsb
std
test
daa
mov
movsb
pop
xchg
xchg
mov
pop
cmp
mov
jbe
movsb
mov
mov
and
push
sbb
jne
imul
stos
pop
xchg
gs
mov
push
movsb
bound
ret
inc
lret
jb
dec
pop
dec
push
mov
xchg
mov
hlt
pop
fdivr
and
jge
out
icebp
xchg
xor
jecxz
xchg
pop
out
nop
sbb
add
jg
and
xchg
out
xlat
les
pop
rclb
lea
xchg
jg
imul
rcl
mov
stos
out
mov
cs
lods
fs
and
mov
inc
push
pop
push
xlat
sub
out
pxor
dec
cld
mov
adcb
in
stos
int3
lahf
dec
int
popf
out
jle
jp
mov
dec
pop
pop
sarb
push
fwait
pop
pop
sbb
insl
test
push
sbb
shll
fs
dec
xor
or
and
cld
les
pop
sti
mov
sub
mov
add
pushf
pop
std
orb
mov
fldenv
or
inc
sbb
xor
xor
mov
push
lock
mov
int3
jo
daa
xor
mov
dec
jb
mov
jle
ficoml
jle
jb
call
push
or
mov
inc
icebp
fisttps
inc
mov
ss
pop
pop
sbb
cld
jnp
add
sahf
jmp
lds
cmc
push
mov
pop
jecxz
fisubs
mov
insl
mov
loope
and
es
lods
pusha
fists
pop
or
xor
ljmp
insb
mov
or
cmpsb
jecxz
sbb
insb
stos
or
pop
jmp
jbe
push
jg
mov
mov
mov
lcall
call
cmc
mov
mov
or
lods
cmc
ljmp
inc
push
cli
fdivl
pop
movsl
mov
ficompl
and
sti
movsb
movsb
and
enter
dec
mov
mov
push
lret
xor
leave
mov
in
ret
add
push
cli
leave
movsb
mov
xchg
mov
in
clc
hlt
add
into
or
jl
fsubrs
push
mov
fdivrs
lret
popa
push
sub
mov
movsl
fstps
lea
bound
testl
adc
clc
fnstcw
and
cmp
js
mov
in
sub
lock
push
dec
popa
xchg
cli
mov
xor
push
loop
insl
dec
cmpb
mov
inc
cli
movsl
sbb
mov
or
push
call
mov
mov
cmp
xchg
xor
adc
mov
jl
sbb
and
or
mov
loop
push
aam
fdivrp
xor
push
mov
cmp
mov
dec
mov
jg
clc
lret
je
cs
push
or
pop
xchg
rol
xor
mov
pop
dec
das
lock
out
dec
andl
cmp
and
jo
lock
lret
cld
dec
pop
aas
jnp
scas
cs
inc
adc
lret
mov
push
cmp
jp
fwait
mov
pop
or
lahf
into
sub
outsb
gs
idivb
xchg
out
in
roll
and
sub
add
stc
je
mov
sbb
roll
or
sbb
jns
cmp
dec
lret
mov
jmp
out
inc
jmp
ja
insb
push
lret
pop
sub
xorl
nop
test
jbe
dec
fsubrl
or
add
jno,pt
lds
cmp
dec
mov
outsl
dec
mov
sbb
jb
jge
ficoml
push
jg
pop
pop
into
fsub
cld
ds
cmp
loop
insl
aam
push
jae
out
pop
loopne
cwtl
stos
dec
fidivrl
lcall
mov
dec
pushf
fisubl
aad
xchg
push
sarb
ret
dec
test
aaa
or
sub
mov
test
movsb
aad
dec
mov
cmp
dec
out
testb
leave
xchg
push
jge
pop
push
stos
stos
inc
test
or
cli
movsb
and
aas
pop
xchg
loopne
popa
xchg
push
gs
push
ss
or
dec
js
insb
inc
mov
leave
ret
sbb
out
aad
add
stc
addl
or
push
mov
push
mov
mov
clc
ds
pop
lods
stos
lock
mov
sbb
bswap
test
xchg
enter
lcall
dec
idivb
scas
mov
and
pop
add
inc
mov
lret
xchg
push
subb
loop
and
xchg
dec
das
shll
mov
xchg
js
movsb
cmpsb
pop
mov
jg,pt
leave
mov
add
sub
dec
scas
jbe
pop
fldenv
inc
mov
ljmp
adc
and
xchg
jnp
add
jmp
test
push
out
rorl
pop
jnp,pn
pop
pop
movsl
fsubrs
inc
mov
xor
push
popa
xchg
loop
ret
sti
pop
push
and
fs
ret
popfw
movsb
push
pop
pop
aas
mov
out
shll
loopne
sahf
or
and
xchg
cltd
push
call
mov
or
arpl
fwait
sti
mov
test
dec
loop
rorl
es
ljmp
adc
xor
in
movsl
imul
adc
push
mov
mov
imulb
das
sti
imul
roll
cld
jnp
insb
sbb
adc
push
push
arpl
lahf
push
pop
out
stos
divb
sarb
in
dec
push
sub
mov
mov
inc
inc
jo
mov
fwait
jne
pop
js
jbe
jmp
push
lods
rcrb
xchg
jb
mov
ret
push
push
push
subb
out
add
jno
fs
out
mov
lea
in
add
shl
mov
and
adc
mov
test
mov
sub
mov
mov
cltd
mov
mov
dec
mov
mov
lret
mov
pop
insb
test
fstps
loopne
stos
lods
pushf
ljmp
aam
inc
jb
pusha
push
xchg
icebp
imul
mov
ja
in
or
mov
test
iret
mov
aaa
repnz
xchg
push
in
dec
inc
lds
jo
ja
jl
add
enter
sub
popa
lods
sbb
ret
dec
arpl
xor
cli
mov
bound
scas
pop
test
outsl
aad
adc
movsb
jle
inc
xor
jnp
add
cmp
in
pop
imulb
dec
sub
lahf
pushf
decl
addr16
or
stos
stos
or
add
push
imul
popa
aaa
push
mov
fsubrs
cmpsl
test
jmp
in
inc
andb
inc
mov
mov
xchg
xchg
dec
test
out
add
movsb
int3
mov
aas
daa
sub
adc
inc
fsubl
or
hlt
mov
call
inc
sub
add
mov
sbb
ds
mov
mov
fldz
push
sbb
mov
mov
inc
xchg
jae
mov
pop
inc
stos
lcall
xchg
jge
add
mov
stos
pop
rclb
out
mov
dec
mov
add
adc
rorb
push
shrl
nop
loop
aaa
mov
xchg
repnz
aas
inc
cmp
insl
jno
dec
inc
int
mov
cmp
dec
repz
jg
out
mov
push
aas
imul
pusha
ja
fbstp
xchg
std
push
add
cmp
jecxz
mov
std
cmp
push
xchg
xchg
jns
or
mov
cmp
or
or
insb
jecxz
mov
sti
in
movsb
push
gs
jbe
mov
jle
sahf
aam
xor
mov
inc
mov
inc
or
dec
sub
jbe
fimull
outsb
and
add
in
je
xchg
and
mov
pop
pop
shlb
test
iret
push
scas
ret
push
into
or
in
fidivl
aaa
mov
jecxz
in
push
lahf
inc
push
mov
xchg
add
sub
fidivrs
sbb
xor
adcl
clc
inc
pushf
mov
push
and
fisttpll
xchg
jo
sahf
mov
pop
dec
mov
xor
inc
outsb
std
mov
in
test
dec
lods
push
jg
xchg
dec
jns
jp
adc
aad
jae
or
add
lahf
call
aad
adc
into
fidivrs
jbe
mov
mov
cmpsb
mov
fwait
stos
idivb
push
imul
or
inc
sub
lretw
xchg
fildl
mov
fwait
stos
idivb
push
imul
or
inc
sub
lretw
xchg
fildl
mov
fwait
stos
idivb
push
imul
or
inc
sub
lretw
xchg
flds
mov
fwait
sub
cmp
mov
movsb
lods
shll
push
jl
xchg
mov
sti
cltd
jmp
fildl
jbe
fsts
inc
adcl
pop
dec
cmp
or
fildl
push
mov
push
mov
out
pop
dec
sti
leave
sub
sti
hlt
jmp
fucomi
lret
push
mov
call
dec
xchg
aaa
cltd
dec
movsl
cmp
inc
fildll
gs
movsb
data16
sbb
xor
mov
sbb
movsb
dec
rolb
xchg
jg
outsb
cmp
bswap
mov
pusha
xchg
xor
inc
daa
stos
lret
jbe
xchg
out
cmpsb
movsb
scas
mov
les
xchg
stos
jcxz
fcompl
xor
push
adc
aas
jae
dec
mov
xchg
jle
or
mov
lret
out
pushf
es
jmp
movsl
repz
les
lds
or
loop
stos
jae
push
into
push
xchg
mov
out
add
push
xchg
or
cmpsb
adc
sbb
insb
jns
pop
mov
inc
mov
sub
fwait
sahf
movsb
cmp
imul
adc
data16
fcmovnb
lret
pop
mov
fmull
xor
dec
sahf
cmp
or
mov
add
fstps
outsl
mov
mov
xor
js
dec
negl
daa
cmpsl
jae
dec
out
add
push
cmpl
pop
mov
inc
cli
ja
jle
sahf
xor
xor
stos
ss
push
mov
jnp
imul
dec
cmp
or
fildl
push
mov
push
mov
jnp
imul
dec
cmp
or
inc
in
jp
mov
jl
or
pop
sahf
pop
mov
pop
cmpsb
lret
adc
stos
pop
loopne
fcos
rol
sbb
daa
jl
cmp
inc
dec
pop
mov
rclb
jo
mov
inc
into
add
xor
in
in
mov
lods
stos
pop
cmp
into
dec
hlt
es
stc
sbb
sub
mov
pushl
lahf
out
push
enter
push
test
aad
push
ljmp
xchg
data16
cld
es
mov
xlat
and
mov
sahf
leave
add
mov
fcmovne
leave
imul
dec
push
push
lea
xor
aam
xor
push
sbb
in
gs
push
sbb
popf
pusha
das
xor
jl
test
or
pop
inc
imul
or
pusha
nop
lret
xchg
lcall
xchg
in
pop
arpl
adc
das
push
ret
out
mov
imul
xchg
push
xchg
sbbw
jno
ss
push
pop
mov
xchg
fsubs
loope
xchg
sarb
mov
cmpsl
roll
lret
or
and
lret
add
mov
push
push
movsb
loop
enter
jo
jne
sbbb
shlb
aas
popf
lock
xor
sub
insb
test
fs
sbb
out
fwait
leave
faddl
repnz
ret
dec
mov
push
sub
pop
shrb
jp
jge
push
pop
enter
shlb
mov
ds
testl
xchg
adc
adc
push
fisubrs
addb
add
movl
es
ret
mov
int3
stc
adc
cmp
jg
cmp
aam
sub
push
mov
push
sbb
cmpsl
add
push
mov
push
inc
mov
addps
jle,pt
mov
std
or
jmp
hlt
xchg
je
mov
jmp
dec
mov
pop
mov
inc
div
pushf
repz
cmp
add
rcll
xchg
sahf
lahf
je
ljmp
sarb
push
jg
lret
push
cmp
jecxz
xchg
xchg
call
jae
sahf
lock
cmp
cmpsb
mov
negb
in
mov
push
clc
es
notb
in
adc
push
and
insl
rcl
in
mov
imul
stc
bound
call
dec
dec
adc
loopne
cltd
js
fs
insl
mov
pushf
xchg
movl
cmc
loope
insl
fimuls
add
push
cmp
mov
ss
arpl
gs
fistpl
mov
cmpsb
sbb
fidivs
xor
xlat
xor
enter
jmp
insb
arpl
ds
movsl
adc
mov
test
add
imul
pop
inc
mov
leave
xchg
pushf
pop
jmp
dec
or
xor
jecxz
in
xor
popf
notl
bound
adc
cli
stos
dec
ds
xlat
push
push
pop
fidivrs
int3
jns
test
aam
dec
dec
aas
or
sub
mov
fwait
xor
stos
sbb
mov
push
adc
mov
mov
mov
cmpsb
repz
aad
outsl
mov
fs
fisttpl
push
cmp
mov
inc
xor
aaa
ljmp
xchg
repz
je
sbb
sbb
sub
or
imulb
andb
jle
popf
sub
jae
jg
imul
test
ss
jo
insb
xor
sarl
mov
pop
push
pop
mov
dec
mov
loop
jge
xchg
push
cmp
pop
adc
xor
decb
loope
leave
out
adc
aad
scas
mov
mov
push
pop
popa
jecxz
sub
push
inc
or
movsl
sub
mov
ret
test
test
adcl
push
data16
ret
xor
pop
mov
iret
dec
and
and
adc
aam
pop
cmpsl
pushf
shr
xchg
mov
jo
cmp
subb
sahf
cmp
adc
push
call
jbe
mov
test
add
mov
gs
mov
adc
neg
in
xor
test
stos
cmp
and
sbb
push
pop
orb
enter
cmc
push
lods
mov
popf
inc
sbb
adc
pop
lock
cmp
mov
pop
cmc
mov
dec
incb
in
xchg
dec
cmp
push
movsl
ret
add
inc
jecxz
and
or
ret
lret
loopne
dec
outsl
pop
inc
cmpb
add
jne
dec
sahf
in
stos
adc
dec
out
sbb
loop
pushf
ss
mov
mov
pop
clc
lods
add
addl
push
dec
cmp
and
je,pt
mov
outsb
out
rcrl
out
ss
or
xchg
and
inc
je
cltd
mov
popa
xor
sbb
inc
cld
enter
mov
repnz
jno
jge
fidivl
fcoml
je
int3
movsb
push
rclb
cwtl
fldt
fsubl
daa
jnp
lods
test
mov
rclb
jns
mov
rcl
pop
or
cwtl
dec
rclb
les
mov
fwait
or
jnp
dec
lock
adc
pop
pop
sbb
xor
sbb
push
mov
pushf
outsl
rcrl
cmp
xor
sub
pop
clc
push
mov
mov
mov
gs
andl
inc
stc
fdivl
les
push
roll
pop
sub
push
insb
fldl
push
data16
pushf
mov
mov
xor
mov
jle
cli
pop
mov
out
movsb
aas
xor
inc
data16
xchg
mov
or
subl
pop
insb
aas
mov
ret
imul
jae
lds
inc
popf
lods
iret
mov
dec
std
ss
cli
sbb
push
mov
aam
testl
sub
loope
addr16
and
jae
adc
inc
lret
roll
sub
mov
wrmsr
fisttpll
push
mov
inc
popf
movsb
shlb
mov
xor
sub
into
sub
aaa
xchg
mov
ss
cld
lea
fistps
fs
imul
insb
add
cmp
adcl
mov
or
push
std
adc
push
mov
pop
sbb
cs
push
ret
cld
lret
xchg
lret
xchg
aad
sbb
das
test
xchg
out
jo
gs
mov
push
pusha
xor
aam
ficoml
sub
cltd
push
data16
cli
or
cmpsb
push
pop
loopne
xchg
sub
subb
pop
fistps
movsl
jmp
push
ss
xchg
ds
pusha
sbb
sti
movb
rorl
push
sub
fdivs
je
enter
in
inc
mov
or
das
pop
ljmp
invd
inc
push
in
mov
rorl
jmp
mov
cmpsb
ret
add
lcallw
mov
imul
mov
mov
bound
and
js
lret
fsubrp
jl
xchg
mov
repnz
dec
dec
inc
pop
lret
ret
push
and
das
mov
into
stc
mov
inc
xor
or
int3
loopne
or
movsl
inc
jns
or
mov
xchg
pop
int3
ret
shlb
test
push
pop
add
mov
mov
mov
scas
inc
dec
push
push
jbe
fwait
add
push
fdiv
add
pop
leave
cmp
inc
test
es
mov
and
pushf
and
and
xchg
cmp
loope
stc
mov
fstps
sahf
imul
iret
les
decl
inc
inc
push
pop
mov
call
in
not
lcall
push
xor
shlb
aaa
rolb
and
cli
insb
dec
loop
flds
jne
sub
cmp
out
lcall
sbb
in
xchg
mov
xchg
test
jl
xchg
push
mov
sbb
sti
sti
addr16
into
adc
call
pushf
cmp
adc
sub
xchg
mov
cltd
movsb
out
cltd
test
loope
xor
cmp
or
popa
cld
sti
mov
mov
shll
divb
out
dec
xor
cltd
pop
xor
mov
sub
xchg
nop
out
xor
add
fstl
out
insl
lret
push
inc
cmp
sti
sbb
pop
push
xor
xchg
inc
jmp
add
dec
sar
js
shl
jle
sub
add
xor
ja
jb
mov
jmp
ja
dec
jo
push
addl
inc
cld
lret
lret
repnz
hlt
push
xchg
jno
jno
cmp
ds
jb
and
lret
or
int
pop
rorb
scas
les
lods
pop
cmpsl
adc
test
out
test
test
sub
or
push
and
mov
inc
dec
sub
mov
andl
adc
ret
fistl
adc
mov
test
mov
xor
rcr
cmp
movsl
lret
pusha
scas
inc
inc
xchg
dec
or
aad
adc
inc
push
xchg
fcoms
ss
xor
push
jle
dec
mov
mov
push
pusha
hlt
add
lret
sbb
dec
out
sub
dec
cwtl
push
into
mov
jecxz
sarb
add
adc
into
jp
or
test
aas
pop
enter
repz
inc
test
jae
pop
insl
adc
cld
inc
sbb
inc
in
hlt
test
mov
sub
dec
scas
fwait
pop
push
push
out
daa
push
pop
push
cmp
cmpsl
sahf
sub
pop
fmul
mov
adc
sti
jno
in
out
inc
mov
shl
insl
popf
xchg
sbb
pop
mov
inc
fwait
pushf
test
push
sbb
xchg
stc
enter
or
inc
arpl
loop
test
bsf
or
cmc
or
es
adc
das
adc
mov
scas
rolb
ffree
insl
sbb
aad
insl
push
pop
lds
movsl
mov
iret
aam
lret
adc
insb
call
mov
lods
inc
rolb
iret
and
push
inc
mov
inc
inc
dec
shll
sti
fbstp
jnp
cwtl
push
mov
add
and
dec
mov
sbb
jb
mull
aas
and
pop
outsb
xor
mov
push
movsb
or
jns
sub
xor
cmpsb
push
adcl
fldenv
scas
in
xchg
leave
ret
mov
pusha
dec
sarb
test
test
lods
in
adc
sub
lock
dec
mov
icebp
push
pop
lahf
clc
mov
movsb
dec
lret
aam
leave
dec
push
add
cmp
mov
mov
fimull
add
cmp
divl
ss
aas
in
jg
into
pop
enter
mov
loopne
push
xchg
mov
sub
ss
fcmovu
inc
sub
mov
mov
xchg
mov
movsb
out
cli
shll
int3
sub
popf
pop
fiadds
pushf
aam
test
and
int3
push
sbb
push
dec
out
int3
loope
add
cmpsb
popa
mov
sub
cwtl
xor
ja
cmp
roll
xchg
out
cmpsb
das
scas
loop
push
adc
je
sub
jl
lods
iret
bound
js
aas
or
mov
xchg
pop
cltd
sub
sub
dec
in
xor
dec
jbe
xor
inc
jns
pop
fisubl
in
lock
test
nop
sub
scas
in
and
cmc
and
and
je
popf
daa
xchg
push
jne
push
pop
pop
cld
addr16
mov
leave
pop
movsl
lock
insb
sbbl
aad
leave
or
add
in
fwait
aam
loopne
mov
dec
cmp
xchg
ret
popf
jbe
je
mov
xor
or
or
jne
je
mov
jb
icebp
push
cmp
test
mov
cmp
test
ficoml
sbb
push
or
into
xchg
cld
xchg
pop
xchg
sbb
adc
mov
aas
outsl
aaa
pop
mov
test
fiadds
cltd
jge
jmp
out
rcll
fisubs
xchg
xor
or
cmpsb
daa
mov
xchg
lea
les
fcmovu
and
inc
in
lea
sbb
sbbl
popf
adc
or
data16
insb
int
sahf
mov
pop
mov
dec
inc
mov
push
push
push
add
jp
sbb
je
add
test
test
jns
icebp
sub
mov
fcmovu
fcomps
lods
cs
push
nop
cltd
fwait
and
dec
fiadds
testb
add
fcomps
xor
add
repz
mov
dec
stc
mov
scas
mov
mov
fidivrl
and
sbb
and
aad
cmp
push
adc
cld
decb
les
jb
rolb
xor
jnp
jge
dec
test
push
push
sbb
and
andb
dec
push
dec
outsb
push
mov
xor
scas
inc
sbb
imul
xor
mov
cs
mov
int3
pop
lret
outsl
mov
int
aas
add
rorb
ret
fwait
cltd
stos
push
pop
pop
test
inc
arpl
dec
movsl
test
dec
loop
imul
lods
lea
into
push
scas
jo
push
push
test
mov
pop
cmp
das
xor
mov
pusha
shl
sbb
pop
in
push
xchg
insl
test
sbb
ret
mov
pop
insb
scas
aam
mov
xchg
stos
sbb
inc
and
arpl
xchg
dec
add
fidivrs
mov
and
pinsrw
je
mov
sbb
jae
lods
cmp
adc
mov
adc
inc
ljmp
lea
inc
mov
xlat
cmp
jnp
fcmovb
jno
test
mov
xchg
cmp
rorl
jg
mov
out
mov
pop
push
xchg
push
push
cmpsb
add
ror
add
lcall
sbb
inc
and
xchg
pop
sub
mov
inc
scas
sbb
js
xchg
into
fptan
mov
pop
jno
aas
xchg
dec
ljmp
push
mov
call
pusha
aas
mov
fwait
test
push
mov
sbb
lods
inc
and
xor
sub
loope
pop
mov
dec
ds
fidivl
jnp
arpl
sbb
and
lcall
or
mov
xor
cmp
repz
cltd
mov
mov
jle
pushf
sub
or
or
xchg
lock
and
into
jbe
mov
push
cwtl
imul
jno
data16
dec
mov
loop
push
aad
cs
push
int
sub
mov
dec
jb
or
fistl
into
inc
arpl
mov
repz
mov
cmp
cmp
xlat
in
enter
xchg
cmp
mov
inc
test
sbb
fmuls
test
or
cmc
and
cmpsl
ds
inc
mov
and
ljmp
xchg
rol
pusha
pusha
mov
outsb
dec
or
loopne
cmp
mov
int3
call
stos
int
popf
into
and
lcall
cmp
mov
fwait
pop
pushf
mov
xlat
test
pusha
js
xor
jmp
sub
jl
mov
mov
sbb
xor
xor
fcmovnbe
add
or
mov
test
sbb
add
inc
out
mov
int3
mov
ljmp
aam
lock
cmp
dec
or
adc
cmp
je
sub
std
and
mov
pop
xchg
and
xor
psrld
lahf
outsb
movsb
mov
int3
ljmp
out
mov
dec
outsb
inc
and
adc
loop
mov
inc
dec
sub
mov
add
int3
dec
mov
das
std
mov
pop
push
call
pop
mov
sub
mov
mov
cmp
dec
inc
pop
dec
je
cmp
aas
test
mov
jno
add
movsl
cmc
movsl
mov
dec
shlb
adc
int3
inc
pop
dec
push
xchg
testb
jmp
xor
xor
push
int3
ficoms
iret
xchg
or
mov
jae
fsts
jno
xchg
xchg
push
fwait
mov
inc
and
pop
and
sbb
jbe
ds
scas
test
push
cmpsb
adcb
repz
imul
push
into
xor
or
imul
mov
cmp
lret
push
push
and
push
jno
push
dec
sahf
test
daa
cmp
repz
cmp
inc
dec
repnz
enter
in
sti
jecxz
mov
jns
mov
cmp
insl
stos
ret
sahf
cmp
imul
and
sbbl
xchg
sbb
in
gs
pop
movsl
andl
les
add
sbb
lahf
push
add
sti
pop
pusha
add
cmpsb
and
popa
cmp
dec
or
loop
jmp
mov
or
inc
cmp
pop
jbe
rcrb
mov
in
sub
pop
mov
xchg
stc
mov
sub
mov
or
fdiv
jae
and
iret
mov
aam
or
xchg
popf
movsl
div
cmp
push
sbb
sub
cmp
xchg
mov
and
push
add
inc
aad
es
inc
stc
mov
or
jo
sbb
cmp
in
imul
pushf
iret
xchg
aas
dec
das
pop
xchg
push
insl
ret
in
cmc
lret
ja
jge
add
adc
iret
loopne
lahf
pop
mov
dec
ret
adc
push
into
loop
std
dec
cli
sub
adc
lock
gs
pop
sbb
cld
hlt
cmpsl
mov
sbb
dec
jne
icebp
inc
imul
call
mov
imul
iret
popa
mov
ljmp
std
fpatan
je
mov
adc
sbb
jb
ficoms
aad
das
sub
call
push
outsb
hlt
aaa
sub
test
xchg
bound
jnp
cmp
sbb
dec
or
mov
mov
mov
jno
in
jecxz
je
sub
mov
or
pop
arpl
pop
mov
inc
repnz
sub
insb
idivl
pop
aas
cmp
into
jno
fstl
push
popl
mov
fwait
xor
jnp
fsub
xchg
push
and
jge
loop
jno
xchg
cli
push
xorb
dec
or
and
loop
movsl
jb
cmp
xor
or
push
adcb
xor
lahf
mov
xlat
faddl
andb
jb
pop
arpl
leave
and
addr16
adc
inc
popa
test
sbb
cmpsl
out
aas
xchg
xchg
mov
mov
ret
cwtl
std
push
or
jae
xchg
movsl
jb
stc
sti
add
stos
xor
and
repnz
pop
popf
cmpl
rsm
or
addr16
aam
addr16
aam
adc
mov
pop
xchg
push
stc
js
int
dec
out
adc
pop
jno
dec
dec
outsb
jne
adc
xlat
jl
lret
xchg
fs
outsb
lea
inc
dec
popl
cmp
decl
sbb
jb
push
int
fdivs
adc
testl
out
sub
jns
xchg
adc
gs
sub
fmull
push
mov
push
rol
fmull
sub
and
add
sbb
mov
push
inc
mov
iret
and
mov
mov
jbe
pop
pop
xlat
dec
outsb
xor
mov
imul
js
xor
push
cmp
fcompl
std
inc
repnz
insl
neg
jmp
jno
adc
decl
push
sahf
and
add
cmc
lods
shrl
loope
inc
les
stos
inc
sub
shll
mov
inc
xchg
and
dec
subl
daa
lods
andb
in
jp
cltd
out
jmp
and
lods
insb
inc
loope
and
mov
jp
jne
xchg
mov
cmpsl
cli
push
rol
push
fsubrs
lds
cmpsl
fstps
pop
cmp
inc
push
push
mov
pop
fdivl
push
shr
lods
lods
out
sbb
sarb
mov
popa
dec
jnp
push
jmp
iret
mov
in
cld
lcall
push
lock
sbb
repz
push
push
jle
hlt
aam
pop
std
repnz
jp
pop
fstps
lret
lret
scas
or
xchg
inc
xlat
std
cltd
shll
push
mov
pop
mov
fcmovnb
insl
sub
popa
cld
nop
fidivrl
adc
test
dec
mov
repz
xor
stos
and
fistps
sahf
sub
or
test
test
mov
fisubrl
sub
mov
jmp
gs
popa
jne
das
or
mov
loopne
cmpsb
ret
enter
mov
lret
xchg
inc
sub
mov
sub
push
mov
push
mov
jnp
imul
dec
cmp
or
fildl
push
mov
push
mov
jnp
imul
dec
cmp
or
pop
ds
push
cmp
stos
sahf
fwait
push
or
jnp
imul
dec
cmp
or
fildl
push
mov
xchg
pop
icebp
dec
mov
imul
int3
push
fistps
sub
cmp
dec
xchg
pop
add
xchg
outsl
lcall
das
ljmp
subl
cmp
push
push
dec
mov
push
mov
pop
fisubrl
ljmp
jge
daa
dec
xchg
jp
adc
mov
lret
sbb
fs
insl
mov
mov
jns
pop
mov
mov
or
insb
gs
repnz
dec
adc
sub
and
outsl
pop
jp
mov
xchg
xor
ljmp
test
popa
shlb
jae
lret
fisubs
sbb
jg
pop
cmp
out
add
or
adc
jo
lahf
push
stos
mov
jp
push
cmpl
xor
shl
iret
xlat
lds
pop
pop
and
xor
outsl
test
cmp
mov
xor
cmc
inc
in
pop
add
jo
jbe
push
sbb
lret
mov
andb
nop
xchg
xchg
cmp
out
scas
push
call
sbb
adc
enter
jne
inc
xchg
out
icebp
aaa
fistpl
mov
ljmp
jno
inc
sahf
pop
xchg
orb
pop
sahf
push
out
cli
or
ljmp
clc
pop
mov
jo
inc
jle
mov
inc
lods
push
faddl
lahf
pop
scas
push
jp
mov
outsl
stos
jg
bswap
pop
fisubrl
ljmp
out
sub
cmp
push
jp
mov
outsl
stos
jg
bswap
pop
fisubrl
ljmp
sub
sub
sbb
loopne
cmp
sub
popa
divb
jge
push
add
shr
out
push
push
mov
xchg
mov
shl
or
xchg
jbe
dec
ret
cld
daa
out
inc
in
scas
sti
push
or
inc
aaa
lret
pop
icebp
jbe
es
xchg
mulb
mov
push
pop
inc
aad
jne
jbe
dec
push
xchg
pop
xchg
cltd
sbb
xchg
cwtl
mov
lret
push
iret
pusha
in
xor
jbe
pop
test
in
xor
sbb
lahf
fidivrs
or
jo
jno
je
adc
sti
pop
lret
out
and
fcmovnbe
cli
adc
divb
shlb
or
fcomps
repz
stc
mov
or
pop
rcr
out
inc
inc
sbb
outsb
or
fcoms
sbbl
sbb
pop
ds
push
mov
test
fsubr
scas
adc
inc
fidivs
test
std
cld
cmc
nop
inc
in
loope
sbb
lods
jecxz
rorl
inc
mov
shl
out
das
aas
fucomi
je
add
lods
xchg
or
scas
je
mov
inc
inc
inc
xor
aas
pop
mov
stos
push
or
aaa
rcl
sbb
jne
mov
sbb
rcr
inc
bound
sbbb
pop
daa
lea
dec
sahf
nop
and
and
xchg
idivl
inc
push
xor
xchg
inc
cmp
loopne
or
popf
add
sbb
pop
out
mov
pop
scas
stc
or
cmp
pop
sbb
lods
push
or
pop
mov
pop
xchg
mov
mov
xchg
mov
es
loope
sti
lcall
cmpsl
xchg
pop
pop
leave
leave
mov
xchg
loopne
sbb
scas
and
int3
sbb
pushf
xchg
xlat
cmc
sub
add
lcall
mov
adc
jl
jl
mov
push
mov
adc
sar
cmp
mov
push
sar
aam
and
sti
addr16
xor
push
bound
sub
jp
cmp
sub
fs
sarl
mov
loope
out
cwtl
or
or
inc
add
inc
inc
cmp
push
jnp
push
adcl
call
gs
dec
cs
and
insb
jb
sbb
lods
mov
aam
call
xchg
push
jle
je
sub
leave
in
outsb
adc
or
mov
cmpsb
faddl
and
loopne
aaa
ret
mov
sahf
pop
xchg
cld
pop
cld
les
mov
ss
xchg
adc
xchg
add
leave
push
lcall
in
in
cwtl
jb
je
dec
jo
dec
xchg
or
add
insl
inc
mov
push
mov
addl
xchg
sub
ucomiss
adc
mov
jns
stos
dec
outsb
mov
inc
mov
cmpsb
icebp
adc
add
popa
xchg
or
sbb
xor
movsb
push
push
adc
or
xchg
sbbl
in
mov
adc
jp
pop
jnp
pop
jnp
fisubs
fiadds
cltd
xchg
aam
dec
mov
insl
test
insb
xchg
in
xor
mov
and
sbb
leave
stos
jmp
test
std
cmp
je
cmp
pop
rcrb
inc
push
cmpsb
stos
test
lea
iret
mov
push
test
iret
xchg
js
mov
imul
shr
cltd
insl
jp,pn
popf
shrb
data16
addr16
sti
and
jge
lods
pop
cld
pop
push
sti
cmp
icebp
or
inc
loopne
sbb
lahf
jmp
addr16
push
sub
es
nop
mov
insb
cmpsb
lret
add
inc
and
fisubrs
js
adc
lahf
inc
lcall
jbe
add
mov
mov
jp
push
jecxz
neg
pop
or
add
adc
fiaddl
xchg
adc
hlt
shl
adc
iret
fstl
push
push
sbb
xor
xchg
or
roll
mov
std
mov
jp
mov
aaa
and
ds
das
xor
cltd
cmpsb
in
sbb
fdiv
sbb
pop
mov
jns
jl
sub
mov
hlt
pop
fimuls
gs
lcall
xor
add
sarl
inc
cmp
cld
mov
cmp
lods
inc
cld
out
adc
orb
into
loop
fwait
mov
mov
mov
inc
lods
cltd
cmpsl
lahf
sbb
outsb
xchg
jp
out
fcomi
jmp
stos
dec
mov
es
bound
pop
xchg
int
sbb
cmpsl
adc
incl
cmp
push
push
rcrl
repz
cmpxchg8b
into
pop
sub
sbb
push
fbld
mov
jno
mov
push
pop
sarl
out
or
push
stos
push
data16
push
out
enter
in
insl
sub
cmp
in
stc
push
xchg
sbb
mov
test
mov
into
out
test
sub
fisttps
xchg
and
je
aas
ja
and
test
sahf
adc
xchg
idivl
xlat
imul
pop
out
push
das
mov
dec
or
mov
daa
jb
xor
popa
sub
sub
cs
pusha
sti
hlt
push
dec
insl
das
les
or
mov
xor
jns
add
sub
outsl
jecxz
leave
mov
xlat
enter
pop
cmp
or
adc
andnps
les
inc
mov
xchg
push
in
add
scas
movsb
std
mov
in
loop
xchg
pop
adc
and
sbb
xchg
test
jl
add
cs
mov
jle
xor
cld
push
pop
inc
in
lea
outsb
and
shlb
test
stos
enter
dec
cmpsb
shlb
xchg
loope
push
dec
jmp
cli
loope
in
jo
iret
dec
addl
stos
mov
and
pop
cmp
push
add
pop
repnz
push
inc
out
sub
out
or
xor
and
jl
push
inc
repnz
mov
xchg
mov
or
pop
pop
xchg
sub
stos
mov
sbb
lret
mov
daa
dec
pop
jb
in
loope
jmp
xorl
xchg
adc
enter
xchg
xchg
mul
push
movsb
jg
or
test
jbe
out
loope
xchg
dec
fdivl
mov
push
imul
jecxz
in
mov
daa
loop
in
adc
xor
lds
clc
lods
popf
inc
popa
sub
lea
movsb
dec
mov
ret
dec
js
out
andb
mov
and
sbb
sbb
lods
dec
xor
mov
insb
inc
in
inc
sti
sub
jp
dec
add
loop
leave
mov
sub
mov
and
sub
ds
mov
ljmp
cmp
pusha
or
stos
test
cmp
add
scas
xor
ljmp
push
mov
jge
out
jmp
jb
adc
and
cmc
mov
in
jmp
inc
and
lds
mov
gs
mov
cwtl
das
loop
popa
or
pop
lock
mov
cmpsb
scas
adc
daa
sti
stos
xor
push
int3
out
dec
test
popa
add
push
cld
cmp
pop
cli
add
leave
mov
fsts
mov
mov
xor
xchg
mov
jne
mov
ss
sarl
sarb
out
xchg
cmp
jno
aad
sbbl
inc
jbe
bound
mov
push
inc
inc
nop
lahf
rclb
sbb
mov
les
dec
leave
les
int
or
mov
sbb
cmp
aad
je
inc
push
or
aad
add
dec
arpl
inc
js
or
inc
and
rclb
jmp
int
iret
daa
or
fidivs
cli
add
sahf
cmpsb
xchg
jge
mov
leave
subl
sbb
fnsave
dec
fwait
ss
imul
sbb
jnp
ret
lods
cli
fidivl
xchg
inc
cltd
sub
jne
lahf
sbb
or
xchg
aam
push
xor
int
xchg
testb
ss
and
ds
mov
sbb
insl
xchg
push
mov
roll
and
sbb
test
fs
out
sbb
jmp
icebp
into
rcrl
jmp
std
sub
push
dec
lret
mov
mov
daa
pop
cmp
iret
mov
mov
lods
daa
inc
fsubrl
or
loop
je
jp
dec
jge
arpl
dec
inc
mov
adc
or
ss
lds
jecxz
lods
inc
xchg
dec
ret
xchg
pop
inc
dec
jo
cmp
les
aam
or
repnz
int
push
adc
pop
ret
movsb
mov
jp
pop
push
lret
jmp
in
sub
jbe
imul
xchg
pop
jg
ja
push
mov
mov
xorb
ja
cmpsb
sub
and
mov
push
and
lret
pop
xor
fnsave
xchg
push
sub
int3
xchg
aas
testl
std
iret
jecxz
xlat
sub
lds
mov
insb
dec
lods
movsl
les
hlt
mov
in
lret
adc
test
rorl
push
push
jecxz
push
lahf
cld
sub
scas
jnp
aas
imul
pop
fldt
sub
movsl
imul
sub
mov
aas
mov
inc
pop
fsts
iret
push
cmpsb
lret
mov
jp
cmp
pop
cmp
int
fidivl
das
jns
sub
data16
ret
dec
mov
push
mov
faddl
clc
in
xchg
cmc
dec
aam
aas
push
pop
rcr
enter
shll
ja
mov
shrb
mov
hlt
and
fdivrs
sbb
xor
add
sub
push
lahf
ret
movsb
hlt
xchg
mov
push
cmp
push
aas
mov
dec
shl
adc
jb
fistpl
and
cmp
lahf
mov
scas
inc
cmpsl
addr16
mov
xorl
xlat
arpl
pop
sbb
sub
sbb
pop
loope
inc
or
arpl
lcall
daa
cld
imul
xor
shll
inc
push
sub
push
add
dec
mov
mov
mov
mov
and
pop
jo
mov
mov
jl
and
add
mov
mov
movsl
iret
cvtdq2ps
pusha
xlat
xlat
sbb
dec
jae
cli
lcall
mov
or
ss
push
pushf
mov
fistpll
nop
inc
es
lods
push
ret
add
idivl
pushf
inc
mov
lods
gs
add
sahf
xorb
mov
dec
bound
cmp
mov
es
mov
add
pop
bound
mov
xor
idivl
or
cli
or
mov
int3
ret
es
and
xor
add
repz
xor
inc
and
sub
mov
loope
mov
dec
into
mov
sub
hlt
pop
cmp
imul
bnd
insl
fadds
add
cld
outsl
and
jo
or
mov
mov
jbe
int3
xorb
cmpsb
hlt
mov
push
test
fmuls
mov
mov
lea
xchg
pop
fstpt
inc
inc
movsb
inc
sub
lret
shll
xchg
cld
fldt
scas
xchg
mov
std
pop
push
ljmp
sbb
inc
arpl
jmp
les
imul
inc
rorl
and
movsl
inc
or
fbld
or
or
mov
xor
pop
lods
enter
stos
mov
pop
adc
inc
dec
inc
insl
rorb
xor
mov
scas
sti
inc
sbb
sub
jo
inc
adc
cmp
sahf
pop
scas
repnz
mov
aam
xor
cmp
hlt
xchg
es
sbb
and
inc
ret
xchg
lret
fdivl
repnz
sahf
shrb
sti
rsm
enter
mov
pop
mov
shlb
fsubl
and
sub
sbb
jo
ja
mov
xor
outsb
jp
subl
movsb
inc
in
jbe
mov
xchg
cld
ret
mov
pcmpgtw
pop
or
hlt
push
push
test
mov
add
fisubrl
orb
addr16
shrl
js
jne
addr16
lahf
jns
sbb
pop
pop
stos
test
js
sbb
adc
cs
push
mov
roll
mov
xorb
jp
das
movsl
arpl
fidivrl
dec
mov
xlat
jns
pop
fwait
nop
jge
xor
dec
sbb
xchg
adc
sti
jmp
ret
aad
and
inc
sbbb
pop
data16
cmp
adc
in
xchg
pop
pop
sti
aam
scas
jecxz
sbb
sbb
mov
scas
and
into
ret
cmpsb
sbb
xchg
sub
rcr
cli
mov
mov
std
mov
mov
lds
xor
lea
mov
mov
pop
sbb
rorb
push
mov
vmovdqa
dec
cmp
scas
push
aaa
stos
xchg
adc
fnstenv
push
ret
mov
in
mov
dec
fcoml
xchg
stos
push
and
adc
fs
jecxz,pn
add
inc
repz
and
inc
add
addl
xchg
lret
imul
jno
mull
inc
ds
mov
insb
inc
push
dec
mov
bound
sbb
lods
cmp
repnz
jno
js
push
push
cmp
mov
mov
sbb
ret
jnp
insl
mov
mov
negb
pop
mov
inc
pop
add
mov
cmp
ja
sub
movsb
mov
push
movsl
lods
lcall
or
cli
hlt
pop
dec
sbbb
hlt
or
test
cmc
xor
icebp
fsubr
sub
cli
xchg
cmpsb
push
es
out
xchg
aad
jo
lahf
cmp
pop
xchg
mov
faddp
mov
cmpsl
cmp
jno
push
pop
repz
dec
ljmp
xor
iret
not
add
cwtl
jnp
call
mov
cmc
test
push
mov
pop
lahf
push
jns
jg
rclb
xor
dec
jb
mov
jb
enter
in
or
sarl
pop
out
lret
cwtl
data16
mov
ret
mov
leave
leave
pop
ja
adc
sbb
pop
es
repz
mov
add
retw
jo
jae
jecxz
loop
sbb
in
ret
fmuls
stc
push
inc
cmp
sub
push
inc
hlt
xor
cmp
cli
mov
push
add
pop
repz
mov
pop
pop
imul
in
push
ja
jp
and
jb
xor
bnd
xor
jp
scas
ljmp
das
das
and
popa
addr16
pop
push
or
aas
and
call
push
push
xchg
sub
or
pop
xchg
mov
cmp
insl
add
push
dec
add
out
imul
pop
jnp
push
adc
mov
mov
dec
pop
in
push
xor
jne
jg
out
jb
xor
mov
repnz
mov
sub
xchg
sbbl
push
insl
cmp
mov
xchg
sbb
addr16
push
jbe
pop
sub
sti
push
push
xor
inc
xchg
cmp
pop
addr16
pop
or
cmp
js
and
jo
and
push
xchg
les
aad
pop
out
mov
inc
sbb
loope
in
mov
mov
fistpl
mov
shlb
rcll
bnd
add
xor
pop
bound
nop
mov
or
inc
fsubrs
ss
hlt
ljmp
ds
mov
mov
ret
jg
call
mov
mov
lcall
mov
imul
mov
pop
lcall
je
call
fwait
mov
scas
leave
mov
cmp
adc
je
je
push
cs
fimuls
movsl
lods
xchg
movsb
mov
mov
dec
fcompl
mov
push
sub
jb
jo
fidivl
push
in
cltd
adc
xchg
cmp
xchg
data16
push
mov
shrl
lret
xor
cmp
fildl
mov
int
xor
lea
pop
xor
fiaddl
loop
pusha
popf
fwait
pop
sbb
or
andl
cmp
sub
ljmp
xchg
popa
cwtl
inc
push
adc
dec
fwait
xchg
dec
ss
andb
fmuls
pop
rcl
xor
clc
lds
sbb
stc
cwtl
rorb
mov
aaa
leave
xchg
es
lcall
loop
push
ret
dec
add
mov
inc
popa
mov
mov
jg
mov
xchg
adc
push
xchg
sub
mov
or
mov
sahf
or
ret
ja
inc
movsl
xor
dec
xchg
inc
mov
push
inc
push
pop
aad
jl
cmp
and
call
jge
and
pop
dec
cmp
push
fwait
sbb
mov
scas
inc
dec
sti
in
test
cmc
mov
add
stc
dec
adc
aas
mov
adc
pop
nop
push
mov
xchg
and
fs
nop
cmp
ljmp
mov
mov
cmpsl
arpl
scas
mov
movzwl
and
movd
and
pop
ljmp
lret
and
mov
mov
and
xor
cmp
push
pop
lahf
stos
sahf
pop
mov
adc
aam
mov
jne
cld
push
mov
adc
std
dec
hlt
fwait
sub
add
enter
shrl
push
bound
pop
xchg
fsubr
sub
add
lcall
mov
or
lods
les
sbb
lds
iret
sahf
jl
fdivr
insl
into
ret
push
or
adc
cmp
dec
adc
cltd
push
jo
fldenv
pusha
in
fldcw
out
push
pop
pop
mov
or
loopne
adc
sbb
pop
inc
int3
push
pushf
sub
push
xor
jle
mov
fnsave
xlat
icebp
adc
cld
add
dec
add
out
dec
lock
dec
cwtl
jp
fwait
addr16
enter
cmp
add
jnp
daa
rclb
test
sahf
xlat
into
mov
push
lahf
inc
jns
hlt
cmp
dec
aad
movsl
xchg
add
push
cmc
cmp
fisttpl
rcll
or
pop
and
sub
push
mov
cli
popa
jmp
mov
or
mov
out
or
pop
mov
pop
and
sbb
out
fdivl
fists
xor
sti
mul
lods
fmulp
ljmp
fildll
movsl
mov
adc
push
call
enter
jo
sub
ret
adc
lret
mov
cmp
andb
mov
mov
clc
mov
cmp
and
adc
cmpsl
jecxz
lods
jg
pop
pop
sub
jmp
stos
pop
rorb
add
int3
mov
cmc
in
outsb
mov
pop
adc
clc
cmp
out
mov
cmp
xchg
pop
dec
push
dec
out
daa
adc
fnsave
out
xlat
xchg
add
jle
int
shll
or
mov
mov
lcall
jns
fnstcw
mov
mov
test
mov
xchg
cmpsl
fstpl
sub
cmp
adc
mov
push
mov
or
push
iret
les
sbb
mov
test
jmp
lahf
cmc
cmc
mov
not
inc
fldt
lret
scas
out
sub
js
pop
pop
add
xchg
das
in
mov
push
sti
and
and
add
fcmovu
xchg
in
pushf
sbbb
pop
or
inc
iret
inc
insl
jl
xchg
sub
adc
adc
sub
mov
jge
dec
mov
fsubrl
inc
test
fnstenv
lods
cli
fistl
xchg
xor
mov
in
sbb
addl
mov
stc
or
mov
xor
ljmp
test
push
lahf
mov
xchg
sub
movsb
cwtl
jecxz
sbb
jnp
mov
cmpsb
sbb
andl
les
sbb
pop
cmp
aam
or
mov
add
fdivl
mov
and
inc
ret
jbe
cmp
mov
adc
test
jb
adc
jl
push
push
loope
adc
mov
fcoms
mov
movsb
lret
decb
movsb
pop
movsb
and
sub
sbbl
aam
push
js
ror
or
fidivs
enter
and
lods
pop
mov
or
popa
push
pop
xchg
imul
pop
popa
or
lods
rorl
fbld
cmp
pop
js
mov
stc
lds
inc
dec
push
jge
adc
call
pop
jno
das
push
add
into
lahf
xchg
cld
sub
and
push
mov
mov
inc
loopne
pusha
inc
sbb
test
cmp
push
jp
mov
outsl
stos
jg
bswap
pop
fisubrl
ljmp
out
sub
cmp
push
jp
mov
outsl
stos
jg
bswap
pop
fisubrl
ljmp
xor
ds
dec
lahf
xor
mov
lahf
stos
jg
bswap
pminub
jecxz
push
fucomi
cmp
into
fistpll
dec
pop
scas
ljmp
lds
xchg
mov
mov
pop
rorl
enter
in
or
mov
ljmp
and
stc
jp
push
pop
rorl
mov
jb
cli
popa
ljmp
inc
stos
adc
popa
push
pop
pop
dec
mov
sbb
jno
or
stos
adc
jge
data16
jb
mov
shll
xor
das
xchg
xchg
addb
adc
mov
jmp
adc
aad
sub
iret
loope
pop
scas
mov
mov
mov
mov
nop
lcall
shll
inc
dec
cmp
shrb
xor
lcall
pop
xor
xchg
sbb
nop
jo
hlt
fs
mov
push
add
decb
or
dec
mov
mov
mov
xor
ret
stos
inc
lcall
cs
or
pop
loop
adc
mov
cltd
mov
mov
and
push
lcall
rcrl
dec
mov
in
xchg
sbb
or
ficompl
push
mov
gs
jle
sub
pop
aam
sbbb
andl
add
dec
iret
gs
icebp
pop
imul
fcoms
data16
jae
outsb
dec
mov
xchg
xor
sub
stos
fs
inc
in
shlb
mov
adc
sub
cli
popa
ljmp
and
icebp
jp
push
pop
rorl
mov
or
popa
ljmp
and
icebp
jp
add
sahf
mov
dec
into
in
xor
shlb
lcall
jle
mov
xor
out
and
or
jne
pop
dec
mov
fs
jecxz
loope
stc
sub
mov
ja
divl
xchg
aad
sub
inc
push
xchg
loop
mov
pop
cld
test
mov
stos
fcomi
stc
dec
repz
inc
icebp
xchg
lret
mov
fmuls
loop
inc
enter
fsub
adc
gs
fbld
imul
dec
mov
lods
sub
jo
lods
rcll
inc
stos
jno
dec
loope
jbe
add
cmp
ds
lret
mov
jo
fistps
sbb
pop
cld
sub
inc
push
les
mov
xchg
cltd
lods
rolb
cmp
push
pop
jecxz
mov
jb
shlb
jno
mov
cmp
movsb
adc
fldt
in
into
addl
sbb
repnz
and
jg
push
dec
mov
add
xor
sub
mov
pop
lods
fcomps
clc
dec
jl
mov
cmc
add
out
into
adc
shlb
push
or
jl
cld
push
sbb
inc
lock
xchg
cmpsl
test
lahf
out
jmp
pop
sub
inc
push
test
aam
push
mov
lahf
aad
adc
mov
adc
xlat
movsl
mov
sbb
mov
mov
inc
rcrl
das
adc
mov
mov
lcall
and
push
in
mov
das
or
pop
push
out
xchg
loop
xlat
adc
sub
movsb
mov
stos
cmp
adc
add
in
pop
mov
mov
shlb
mov
outsb
add
test
dec
ret
arpl
call
int
jnp
test
imul
les
pushf
popf
cmp
and
test
push
ffree
sub
aas
mov
dec
push
and
std
xchg
scas
sahf
scas
sub
xchg
int
add
out
outsb
sbb
loope
sbb
sahf
in
out
jae
fs
pop
and
js
or
mov
enter
cld
xchg
xor
repnz
jae
out
cmp
push
repz
cmp
fisttps
sub
stos
repnz
cmp
or
cli
in
mov
ja
mov
cmc
shl
cs
fwait
std
rcrl
pop
out
dec
rolb
push
xchg
lret
adc
lods
imul
pop
repnz
inc
outsl
faddl
outsb
xor
stc
clc
bnd
push
mov
imul
xchg
ror
mov
popa
arpl
xor
pop
mov
sub
sub
cmp
icebp
outsb
mov
enter
outsl
imul
scas
inc
xor
dec
mov
inc
push
mov
in
dec
xor
inc
jg
mov
pop
stos
push
pushf
xchg
cmpsl
in
pop
bound
icebp
adcb
dec
sahf
idivb
sub
cmp
jmp
divl
loop
jg
add
cmp
jo
and
popa
push
inc
cmc
lods
jge
push
aas
mov
outsl
xchg
ja
xchg
out
fistps
movsl
call
jge
test
mov
pop
and
add
lahf
or
pop
fistl
xchg
scas
dec
mov
cli
rclb
cmp
mov
or
jno
lock
dec
mov
add
mov
aas
xchg
addb
xor
cmp
dec
out
mov
mov
jecxz
sti
xchg
and
ret
dec
pop
jg
in
repz
jno
jmp
inc
or
mov
mov
push
ss
fisubl
mov
add
jae
dec
adc
jae
lahf
mov
popa
push
mov
mov
ret
cmp
mov
jle
ret
daa
push
and
xchg
xlat
jle
stos
push
ret
xchg
cmp
ljmp
adc
jne
call
js
sub
pop
add
dec
xchg
push
adc
arpl
mov
mov
and
jg
push
add
xchg
mov
xor
fbstp
pop
and
fwait
pop
jg
xchg
mov
je
push
aas
sbb
in
int3
add
jno
leave
xchg
mov
cmpb
and
test
or
sti
ret
mov
pop
inc
subl
sarb
shrl
jb
jl
sub
test
cmp
rol
sbb
dec
jns
adc
xchg
inc
pop
add
aad
shll
dec
cmpsl
or
xor
sbb
das
pop
sbb
aaa
scas
dec
pop
mov
push
mov
addr16
push
notb
cmp
clc
cltd
clc
mov
dec
cmp
push
dec
hlt
xchg
and
push
sbb
lret
mov
outsb
sub
movsb
outsb
pop
sub
push
jbe
inc
mov
cwtl
pusha
mov
pop
mov
sub
cltd
mov
cmp
in
mov
popa
enter
mov
stos
lea
imul
jo
and
dec
mov
jge
adc
mov
faddl
mov
pop
sbb
dec
jno
mov
lret
lds
mov
cmp
fcompl
scas
jb
mov
push
pop
das
sbb
das
push
dec
sahf
mov
into
mov
bound
and
adc
lods
ret
pop
jnp
ljmp
dec
fisubs
mov
fnstcw
pop
flds
mov
cld
mov
mov
mov
xchg
mov
mov
jge
fistps
pop
int
mov
push
or
xchg
adc
jmp
out
imul
or
add
sbbl
subl
xchg
scas
jb
jecxz
pop
jns
fisubrl
ds
mov
dec
jns
movsb
addl
pop
popa
shrb
push
or
repnz
dec
jnp
xor
push
cmpsb
subb
arpl
pop
sub
sbb
cmp
and
cmp
lret
dec
cli
fcompl
sbb
sbb
xorb
mov
push
dec
jle
cmp
and
sub
outsl
jae
jne
pusha
in
das
stos
dec
jbe
lods
xchg
nop
rcll
sub
adc
data16
shr
ret
stos
cmp
dec
enter
in
test
adc
rolb
rcll
daa
cli
pop
pop
vmread
adc
subb
pop
aad
iret
outsl
js
lock
mov
pop
adc
push
inc
mov
add
xchg
adc
jnp
repz
mov
int
add
lods
push
xlat
mov
sahf
ljmp
mov
cs
aaa
pop
lret
dec
add
sbb
add
mov
mov
push
jns
iret
lcall
adc
cwtl
add
outsb
dec
fs
jnp
int3
add
dec
mov
xchg
add
jns
xchg
jno
pushw
setge
push
pop
das
mull
inc
loop
mov
aad
mov
lods
cld
ds
and
iret
cmpb
lahf
dec
popf
rclb
xchg
sbb
xchg
xchg
leave
xor
lods
shrb
stos
sahf
push
sbb
pop
sbb
movsl
test
pop
add
aas
ss
shr
push
lds
repz
jae
add
jnp
push
jo
mov
fldenv
gs
fs
stc
or
jl
pop
arpl
sbb
pop
cld
cli
xchg
push
pop
or
mov
mov
push
sbb
loope
push
inc
pop
mov
pusha
jg
js
push
in
ret
cs
stos
jo
sahf
mov
jmp
nop
shlb
xchg
xchg
mov
xor
mov
stc
pop
femms
xorb
test
jecxz
es
cli
add
add
adc
lods
cmp
psubusb
adcl
jns
ljmp
stc
imul
add
add
pop
mov
pop
jnp
sahf
fcompl
mov
cmp
jbe
push
jp
mov
cmpsl
dec
adc
lods
fwait
mov
xchg
popa
movsl
adc
subl
mov
and
lock
cli
inc
and
mov
rcll
push
rorl
and
push
dec
test
call
aam
sahf
out
divb
xor
cmpsl
adc
aam
and
shlb
ds
lret
add
aaa
add
gs
aas
rcl
and
dec
gs
push
pushf
add
pop
loop
lret
arpl
shlb
inc
je
loopne,pn
or
ljmp
loope
loope
dec
or
inc
jb
xchg
fcomp
adc
insb
sarb
stos
fisubrl
shrb
pop
shrb
in
jle
push
les
cmp
push
mov
out
lods
add
push
arpl
dec
xor
or
ficomps
aam
sub
cld
and
mov
fisubrs
sub
fnclex
add
inc
fmull
sbb
mov
sarb
push
push
push
pop
mov
inc
sbb
inc
aaa
push
fcomps
sarb
popa
push
sti
rep
aas
aad
mov
cmp
jl
mov
scas
js
adc
jg
add
into
in
or
scas
sbb
mov
and
data16
mov
dec
or
mov
pushf
addb
pop
scas
push
cmpsb
std
mov
inc
add
cmp
dec
int3
out
and
add
push
pop
in
cmp
pop
or
xor
ficoml
sar
dec
das
xchg
add
xor
ficomps
push
sub
stos
mov
mov
dec
xor
in
add
jmp
sub
int3
dec
mov
pop
xor
or
gs
incb
stos
and
aad
insb
dec
mov
mov
mov
inc
ret
aad
sbb
arpl
dec
inc
sbb
add
adc
push
mov
negl
xchg
or
jge
repz
shll
pop
lahf
popf
test
mov
test
sbb
xchg
lods
mov
sbb
add
nop
sbb
adc
jne
jae
mov
mov
pusha
mov
icebp
xchg
fs
sub
adc
mov
pop
add
jb
fwait
xor
sbb
ret
sub
inc
mov
lock
ss
pop
ud1
adcl
and
xchg
das
add
sub
cmpsb
imul
mov
add
loop
pop
scas
add
rcrb
nop
xor
xor
orl
adc
push
jp
hlt
or
pop
cmp
setge
popf
imul
pop
jo
adc
sub
jp
xor
pop
std
cmp
cmp
pop
sub
cld
adc
jne
xchg
repz
jne
sahf
test
int
mov
push
cld
mov
repz
xchg
push
add
out
subl
mov
xchg
stos
aas
xchg
add
sbb
add
pop
fiadds
jecxz
aaa
es
outsl
sbb
inc
gs
cmpsb
mov
mov
test
iret
pop
popf
enter
mov
bound
xchg
dec
dec
push
neg
stos
ret
pop
xor
adc
lea
mov
cwtl
adc
xchg
lcall
push
dec
jl
jo
mov
jns
imul
xchg
test
sub
std
mov
scas
loope
in
xchg
gs
dec
cltd
jl
insb
insl
out
out
stos
push
int3
insl
push
jle
cltd
xor
fstpl
icebp
cwtl
mov
sub
xchg
xor
xchg
enter
ss
or
cmpsb
inc
xor
fildll
lods
fadds
push
sub
mov
jp
fiaddl
adc
cmp
faddl
inc
bound
mov
lret
xor
mov
push
das
inc
sbb
sub
lcall
xchg
jnp
xchg
popf
add
xor
jns
aas
fstpl
pusha
or
push
jecxz
leave
jo
xchg
xor
sbb
addr16
cmp
movsb
xor
inc
adc
pop
push
and
out
lcall
pop
pop
cli
jmp
sahf
pop
adc
inc
xor
gs
dec
push
insb
lods
or
jno
push
adc
dec
cmp
insb
pop
mov
xchg
icebp
jb
sbb
mov
mov
lods
adc
popa
test
imul
addr16
loope
leave
not
jno
pop
test
inc
loope
xchg
fsubl
pop
push
or
lret
cmp
pop
sar
ljmp
mov
cs
test
or
test
jno
lods
push
imul
adc
jae
or
push
pop
jno
daa
sbb
mov
push
mov
push
mov
es
int3
jbe
jecxz
adc
inc
mov
xor
cmp
shlb
dec
cmpsb
outsl
mov
push
ret
mov
movsl
clc
or
ljmp
inc
pop
jmp
les
dec
jno
in
dec
fs
loope
jbe
xchg
rorl
js
sub
push
mov
cld
jnp
pop
dec
adc
cmp
jne
and
cmp
das
add
je
sub
add
in
add
mov
xchg
mov
xchg
in
or
mov
lods
mov
divb
stos
or
mulb
aas
mul
addr16
data16
test
jae
adc
push
cld
movsl
subb
pusha
cli
scas
cltd
aam
cmp
xor
mov
adc
jae
adc
jnp
jns
clc
outsl
lret
hlt
in
push
push
sub
clc
das
add
pusha
data16
adc
rcr
outsb
sub
pop
xchg
ret
jno
stc
jecxz
popa
sbb
xchg
push
inc
xchg
loop
call
mov
dec
in
dec
cltd
jno
int3
jns
incl
adc
jne
insb
in
sbb
cmp
cmp
mov
or
mov
mov
sahf
jbe
and
sbbb
scas
lock
sbb
sub
adc
ljmp
cld
or
mov
es
inc
lds
sub
out
sbb
sti
shl
fiaddl
add
loop
and
or
push
xchg
test
inc
inc
stc
mov
mov
decb
xchg
add
jns
stc
test
inc
push
dec
pop
test
push
mov
aam
insl
out
out
jno
or
push
jg
adc
clc
mov
sti
or
js
lds
test
jmp
push
sub
jb
and
adc
imul
std
adc
in
jp
pop
orl
lods
ret
adc
push
jne
xchg
mov
dec
lcall
mov
adc
jl
mov
push
xchg
add
xchg
jg
das
rclb
push
imul
incl
gs
ljmp
push
jns
lcall
mov
and
mov
je
push
mov
sbb
orl
adc
sbb
cmp
mov
xor
inc
pop
es
xchg
xchg
leave
lock
test
or
mov
mov
cld
xor
jle
mov
ja
or
jg
or
jmp
xchg
leave
std
and
lcall
fdivs
mov
or
add
xor
in
cmp
in
jnp
mov
dec
push
stc
imulb
int3
push
and
lds
add
sarl
push
mov
imul
std
jmp
test
out
inc
icebp
rcl
sbb
push
lahf
push
cmp
sbb
arpl
ret
adc
xor
sub
cmp
fistl
mov
pop
les
pop
imul
pusha
cli
cli
nop
mov
fmull
movsl
ret
out
jge
cmp
lea
and
xchg
xor
and
fadd
scas
xchg
mov
add
or
mov
icebp
fsubp
fadds
push
and
in
xor
jmp
xchg
hlt
push
imul
sbb
movsl
adc
arpl
imul
lods
adc
lahf
xchg
inc
or
lea
cmp
pop
rclb
into
negl
out
push
test
sbbl
int3
cmpsb
faddl
test
fsubr
sbb
out
jmp
ja
insl
xor
mov
ficomps
pop
ja
sbb
cs
mov
mov
sbb
rorb
mov
xchg
movsb
into
pop
mov
jge
loop
xchg
fwait
mov
cmpsb
scas
loopne
jnp
pop
adc
into
cmp
push
inc
shrl
or
push
fnstsw
out
iret
scas
or
shlb
std
int
pop
ds
mov
cmp
push
xchg
or
lea
pop
xchg
xor
mov
movsb
xor
mov
cmp
or
ret
dec
jmp
aam
inc
adc
mov
sub
jecxz
push
jmp
or
mov
and
push
pop
xchg
jae
decl
stos
sarl
test
je
xchg
and
rclb
xlat
add
mov
loope
add
jnp
dec
aas
xor
and
sti
dec
rcrl
fwait
mov
jns
mov
outsl
pop
push
ljmp
pop
or
das
cmp
bound
push
pop
leave
loopew
mov
aad
push
lock
bndldx
xor
mov
fisubl
lods
inc
outsb
ds
dec
sbb
add
nop
dec
jbe
xlat
lret
lock
stos
bnd
ja
fildll
and
cmpsb
mov
xlat
out
mov
inc
and
inc
cmp
lock
pop
push
xchg
stc
imul
test
jno
mov
pop
in
jecxz
ja
adcb
cmp
fs
push
nop
pop
insb
and
push
xor
adc
jae
loope
repz
or
push
mov
sbb
inc
loope
popf
ljmp
ret
bnd
sbb
push
inc
ficoml
outsb
aad
xor
cmp
sub
in
aaa
lcall
aaa
sub
push
call
cmpsb
cwtl
rorb
jnp
stc
sbb
cmc
ffreep
stc
out
into
mov
call
vpsllq
out
aas
xchg
lock
in
push
push
inc
fcoml
adc
es
shlb
nop
sbb
xchg
lahf
leave
cli
push
fildll
jmp
xor
push
insl
adc
pusha
test
dec
xchg
mov
rcr
or
stc
cmp
push
js
int
xor
mov
test
adcb
push
fs
mov
int3
dec
sbb
jbe
leave
pop
ficoms
jnp
mov
loopne
out
fidivrs
and
les
les
into
add
adc
addb
jge
icebp
dec
mov
inc
cmp
mov
adc
ljmp
xlat
insb
or
mov
xor
stos
outsb
xor
je
mov
ja
repnz
shl
jo
push
scas
add
scas
mov
int
gs
insb
push
add
mov
cli
pop
aaa
testl
adc
adc
sub
dec
scas
or
add
rolb
cmc
or
lock
data16
fcompl
pop
data16
sbb
icebp
mov
scas
xor
pop
js
scas
dec
and
add
jg
inc
std
js
int3
push
arpl
fnstcw
gs
jne
and
mov
add
push
and
jae
xor
sbb
inc
sahf
iret
push
mov
mov
sbb
mov
shlb
int3
loope
ja
rcll
push
add
add
cli
push
scas
jecxz
cmpsb
lods
push
xchg
fs
dec
jmp
sbb
test
xorl
jae
xchg
push
inc
mov
pushf
or
mov
cmp
jae
mov
fs
lahf
mov
shll
push
loope
push
pop
sub
and
insl
jne
jne
inc
gs
sti
mov
mov
inc
xor
insb
sbb
lahf
sti
pusha
decl
maskmovq
testl
pop
jmp
dec
insl
fsubp
orb
jne
push
lret
dec
icebp
jb
popa
add
jno
minps
xor
inc
or
mov
dec
rorb
jno
iret
jl
xlat
std
xor
jbe
in
insb
enter
daa
jmp
test
dec
cmp
adc
mov
push
xor
js
test
mov
fidivs
mov
pop
or
pusha
ljmp
sahf
adc
adc
gs
insl
pop
out
add
push
gs
out
cwtl
insb
shl
dec
insl
dec
and
sub
sbbb
int3
mov
inc
push
imul
mov
out
test
push
adc
cltd
shlb
push
adcb
scas
add
push
pop
cmpsl
jl
call
or
sub
aas
dec
js
stc
sub
add
jmp
popa
mov
cltd
xchg
addr16
add
push
pop
fisttpll
cmp
or
popa
ljmp
and
icebp
jp
push
pop
rorl
mov
or
popa
ljmp
and
icebp
jp
push
pop
rorl
movsl
sub
cli
popa
ljmp
cmp
jmp
pop
jmp
sub
cli
sahf
inc
sti
fiaddl
inc
xor
jne
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
cli
sbb
neg
lret
xchg
fcos
enter
addr16
pop
push
dec
push
cmp
sub
sbb
or
cli
out
neg
lret
cmpsl
stos
mov
xchg
ja
addr16
push
cmp
sbb
or
cli
ljmp
mov
mov
sub
fs
push
dec
pop
push
push
fs
mov
ljmp
dec
stos
outsb
adc
jno
mov
inc
sbb
mov
cmp
xchg
sti
dec
dec
jno
push
mov
dec
inc
sub
or
inc
lahf
xlat
push
iret
push
lds
hlt
pop
add
popa
jo
cwtl
inc
mov
icebp
mov
jnp
loop
mov
sti
and
lcall
pop
mov
dec
out
xchg
push
xlat
cmpsl
insb
test
je
enter
jge
fistps
aaa
add
mov
dec
add
push
mov
sub
add
sub
popf
imul
add
sub
arpl
je
inc
sbb
bound
movsb
out
loopne
xlat
lret
cmpsl
stos
mov
sahf
mov
pop
pop
dec
dec
cmp
sub
sbb
or
addb
icebp
jecxz
jmp
cli
cmp
outsb
adc
cmp
inc
fs
pop
pop
jp
lahf
cwtl
testl
jecxz
sti
pop
push
push
adc
push
jle
push
cmpsb
mov
mov
xchg
ja
inc
dec
push
cmp
sub
sbb
or
cli
out
neg
lret
cmpsl
stos
mov
xchg
ja
inc
dec
push
cmp
sub
sbb
or
cli
out
jo
out
les
push
shlb
cmp
sbb
int
pop
mov
fwait
push
fldt
xchg
vpaddusb
dec
add
outsb
scas
je
sti
test
mov
mov
xor
enter
repnz
xchg
add
adc
lret
dec
xor
mov
in
scas
cwtl
inc
or
in
rol
jb
sub
mov
cs
pop
inc
ret
into
mov
jo
insl
fstpt
mov
adc
or
push
stos
jo
mov
mov
mov
lret
testb
push
mov
les
lret
add
add
lods
dec
pop
pop
sub
mov
cmp
pop
dec
inc
out
dec
lcall
insl
or
test
out
mov
inc
xchg
ret
jp
dec
sti
jmp
cmp
jmp
jbe
mov
sbb
lcall
aaa
lods
cmp
push
sbb
sbb
or
xor
adc
and
jo
out
dec
js
out
jae
mov
mov
jg
push
push
adc
and
shll
dec
in
or
jecxz
jp
mov
inc
xchg
out
and
lea
push
ss
xor
pop
mov
inc
pop
and
adc
int
popf
test
mov
mov
push
stc
jge
jl
mov
pushf
data16
xchg
jnp
mov
add
fstps
bound
popa
jae
sbb
jns
fwait
push
adc
and
mov
mov
int
les
push
je
popa
enter
orb
or
ret
rol
repnz
sub
sbb
mov
lock
mov
call
shr
pop
enter
jb
mov
pop
out
sub
cmpsl
pop
mov
std
dec
loope
push
lret
cld
mov
fwait
es
mov
bound
rep
mov
push
stc
dec
jb
roll
jo
scas
out
push
scas
testl
addl
pop
pop
sub
push
jbe
hlt
outsl
js
leave
adc
mov
pop
push
minps
daa
into
push
mov
int
push
movsl
push
adc
inc
or
lock
push
lds
ret
sub
jns
or
repz
sub
or
and
jo
std
or
fs
xlat
mov
loopne
mov
ret
fiadds
adc
or
das
in
xchg
or
ret
adc
sbb
pop
ds
cld
sbb
sbb
xor
mov
sub
lods
inc
test
mov
dec
add
mov
mov
pusha
stos
jle
pop
cltd
mov
fldt
xor
jmp
mov
sub
jbe
es
loop
cmp
jo
rcrl
ds
xor
sbb
pminub
rcll
add
mov
jnp
jnp
clc
les
mov
sbb
sub
mov
dec
test
lahf
test
movsl
jl
out
out
insb
test
arpl
lea
mov
loopne
add
jnp
jne
jge
inc
pop
lret
sbb
mov
inc
or
andl
sub
xchg
lds
pop
xlat
loope
lods
adc
lock
add
ret
mov
and
movsl
fnstsw
in
lods
xor
sub
es
mov
jp
enter
ret
sub
mov
test
xchg
repnz
cmp
inc
adc
sbb
hlt
cmp
sub
mov
and
sahf
pushf
pop
call
xor
lds
pop
mov
mov
shll
mov
pop
dec
mov
cmp
lods
mov
push
mov
and
aad
cmpsb
mov
flds
incb
adcb
out
arpl
mov
mov
out
push
push
sbb
lds
pop
cmp
andb
lea
adc
pusha
xchg
cmpsb
xchg
pop
dec
xlat
inc
insl
lds
adc
out
es
movl
mov
dec
jb
pop
sub
test
repnz
xchg
dec
add
mov
aaa
ret
add
gs
xchg
mov
push
jns
int
xor
xor
sub
jp
inc
jbe
imul
pop
jge
ret
sub
cwtl
lea
dec
int3
and
adc
mov
test
ljmp
mov
mov
inc
xchg
hlt
xor
rcr
pusha
inc
lahf
mov
pop
sub
insl
push
pop
mov
add
insb
push
mov
ljmp
lds
scas
out
xor
cli
add
mov
subl
push
divl
or
mov
cmp
inc
test
sub
movsl
int
pop
push
repnz
xchg
stos
inc
sbb
test
add
cmc
adc
dec
sbb
add
pusha
sbb
lret
stos
test
imull
mov
xor
or
test
add
arpl
sbb
inc
hlt
sub
xchg
daa
push
in
pop
xchg
mov
xchg
and
addr16
rorl
jne
jle
adc
pop
rcrl
mov
movsl
ficompl
mov
inc
shl
repz
popf
cmp
loope
shlb
add
fdivr
incl
sti
jo
cmpl
dec
or
adc
mov
fsubrs
rclb
and
mov
pop
push
mov
sub
xor
rorb
or
test
leave
push
fbstp
xor
lcall
pop
adc
mov
movsb
lock
xchg
outsl
and
jne
sahf
mov
test
lret
sub
xchg
jne
jne
imul
and
xor
jg
pop
test
gs
lahf
out
repz
sub
sbb
into
mov
sbb
adc
pop
pop
movsb
arpl
cmc
jmp
or
xchg
enter
and
add
in
sbbb
rcll
addl
mov
pop
jne
add
pop
loop
jmp
fiadds
out
pop
imul
push
push
fisubrs
sub
outsb
and
and
and
sti
xchg
hlt
mov
xor
add
jns
jo
shll
adc
js
mov
mov
xor
jb
out
inc
xchg
fcomps
dec
imul
aad
int
jecxz
sub
or
shlb
xorl
mov
out
enter
rcll
add
dec
add
cwtl
scas
sbb
inc
aas
adc
popf
pop
sub
or
sub
jae
scas
pusha
arpl
sbb
xor
out
xor
push
lret
xchg
xchg
movsl
cmp
mov
mov
popa
mov
mov
jle
add
inc
lahf
testl
push
dec
xchg
mov
int
call
shrl
dec
and
and
scas
mov
adc
sbb
movsb
mov
sahf
add
hlt
push
popa
orb
adc
pop
test
mov
mov
pusha
aas
int
imul
xorl
push
xor
dec
mov
sbb
push
inc
push
jnp
xchg
or
leave
jg
sbb
outsb
out
sub
mov
mov
mov
sarb
aad
sbb
dec
and
test
sti
ret
lea
sub
pop
xchg
aam
inc
int
gs
pop
xchg
push
push
addr16
sti
and
rorb
inc
cwtl
adc
xchg
cmc
test
push
inc
sahf
xchg
xor
call
pop
in
cmpsl
jle
loope
xchg
lret
dec
xor
add
lds
jg
movsb
add
lock
mov
add
pop
and
add
int3
mov
inc
rorl
ret
imul
divl
test
ja
mov
pop
mov
movsb
mov
lock
sbb
in
addl
cmp
inc
into
fsubs
sbbb
lock
jns
scas
lret
dec
data16
outsl
call
fimull
ds
dec
cwtl
enter
cmp
jns
arpl
add
dec
xor
pop
mov
aas
fsubrl
sbb
pusha
inc
orl
or
and
or
adc
xchg
jp
addb
or
lods
lea
pop
sub
test
popf
sarl
insb
cmp
mov
sub
out
fnstsw
xchg
and
mov
sahf
jnp
jb
pop
subl
aam
mov
sbb
lea
repz
jns
dec
jb
pop
sub
or
ffree
aaa
mov
or
in
pop
daa
js
mov
mov
push
xlat
ss
or
pop
push
pop
aam
leave
hlt
push
fmull
mov
sub
rcrl
adc
cmp
add
push
dec
ret
jge
in
sbb
xchg
xchg
mov
inc
and
repnz
iret
push
inc
push
ja
notb
pushl
jl
fsubl
dec
std
xchg
lods
jp
inc
mov
jmp
sbb
sbb
sahf
lds
adc
sub
pusha
lock
loopne
cli
cs
popf
jmp
xor
pop
xor
leave
nop
movsb
push
sbb
jbe
pop
and
lea
out
ljmp
lock
pop
daa
sbb
repz
pop
inc
pop
cli
orb
cmpsb
jnp
jl
mov
movsl
test
fidivl
jp
cli
outsb
test
movsl
popa
outsb
daa
outsb
mov
scas
mov
jmp
and
xchg
arpl
lcall
add
movsl
jg
mov
ret
inc
pushl
ljmp
mov
pop
jno
data16
je
sbb
sub
push
icebp
sbb
inc
xlat
in
mov
pop
pop
jp
jg
sbb
icebp
jbe
fcom
stos
or
adc
jnp
cmp
and
pop
test
idivl
push
dec
push
xchg
js
shrb
inc
adc
mov
repz
inc
push
std
xor
sub
xchg
push
daa
sbb
add
cmc
bound
inc
sbb
pop
loopne
insb
dec
adc
test
out
xor
in
jo
pop
es
in
inc
push
cmp
pop
out
ljmp
mov
pop
popa
jo
lcall
call
popf
sbb
popf
jo
data16
mov
push
pusha
test
sarb
mov
or
jne
sub
mov
jb
daa
sbb
inc
jge
or
adc
int
lahf
andb
lods
pushf
jne
bound
sbb
inc
xchg
xchg
jb
sahf
add
or
rcrl
psubsw
bound
insb
and
xchg
push
or
dec
idivl
cli
mov
dec
xlat
fmull
and
enter
fbstp
enter
and
sbb
inc
and
enter
mov
mov
jb
dec
enter
mov
ds
inc
fs
cltd
dec
mov
xchg
pop
rorl
jne
or
insb
xchg
mov
lock
sbbb
movsb
repz
jae
fmull
lret
push
add
push
jg
push
in
mov
in
dec
into
daa
push
pop
outsb
clc
push
aam
jp
hlt
jmp
jl
push
mov
mov
inc
and
sbb
pop
push
mov
lods
adc
or
in
mov
cmp
inc
loop
push
push
inc
mull
scas
push
dec
dec
les
fistps
rorb
mov
and
jno
xchg
sbb
push
fdiv
fsubrs
sbbl
lahf
xor
imul
stc
and
adc
in
inc
scas
jmp
sbb
filds
xor
ret
gs
enter
xchg
inc
mov
fstpl
outsl
lret
cmp
mov
cmp
ljmp
insb
pop
xor
ret
cmc
dec
test
arpl
push
pop
mov
mov
sub
cltd
push
adc
sbb
inc
mov
movsl
push
mov
cmpsb
and
pop
push
sub
mov
ss
xor
adc
dec
mov
sahf
push
mov
xchg
mov
imulb
xchg
aam
scas
mov
pop
sti
push
mov
das
ss
std
repnz
addb
xor
arpl
dec
ds
pop
add
jl
movsb
adc
xlat
inc
adc
pop
push
cmp
mov
fmull
sti
adc
add
mov
ret
fisubrs
xor
jecxz
dec
mov
and
cmp
test
xchg
mov
jo
into
in
subl
test
dec
mov
movsl
xor
or
jge
jnp
movsb
sbb
cmpsl
hlt
filds
hlt
add
inc
mov
insb
cld
aas
push
pushf
nop
sub
add
mov
outsl
cmc
shrl
fidivrl
xor
push
or
push
leave
jg
movsl
jae
loopne
and
lret
push
push
push
mov
out
sub
mov
add
je
dec
and
pop
cmc
ds
loopne
cmp
mov
and
orl
xor
and
mov
loopne
imull
fs
pop
sub
imul
jns
icebp
sub
decl
cld
sbbl
jno
push
and
out
jnp
scas
mov
cmc
faddl
push
test
push
push
insl
in
and
mov
sub
xlat
pushf
fldcw
mov
xor
or
and
test
xchg
push
rcrb
jmp
mov
mulb
iret
sahf
sbb
addr16
cmpsl
rorw
adc
pop
shlb
outsl
mov
outsl
andl
add
fbld
jo
rcl
jne
pop
xchg
notb
daa
xchg
or
andl
cmpsl
hlt
inc
push
int3
in
or
xchg
sbb
loope
fisttpll
addb
sbb
nop
push
daa
mov
mov
dec
jb
adc
dec
mov
xchg
insl
cwtl
mov
insb
and
iret
pop
mov
leave
gs
ret
sbb
xchg
stc
movsl
repnz
xor
aas
out
and
imul
sbb
or
and
push
mov
das
mov
mov
outsb
lcall
sub
dec
or
fbld
dec
bnd
lods
test
cmpb
mov
popf
test
pushf
shrl
jmp
cltd
cmp
or
mov
cld
pop
lods
push
movsb
jb
xchg
adc
mov
jl
adc
add
int3
and
pop
and
push
cmc
inc
fldenv
mov
arpl
or
adc
add
jl
pop
jl
mov
sti
push
dec
pop
ds
mov
mov
add
mov
adc
dec
mov
cwtl
lock
jmp
add
lret
imul
pavgb
pop
idiv
adc
push
es
and
bound
test
rcll
aam
mov
push
mov
ljmp
cwtl
and
lret
loop
sarb
pushf
js
out
mov
pushf
jp
mov
ljmp
int3
call
sub
sahf
fnstenv
and
sbb
cwtl
enter
aaa
and
subb
fldcw
and
cwtl
mov
call
int3
xchg
push
adc
pop
push
js,pt
sti
dec
mov
add
aas
inc
push
mov
add
inc
adc
lret
stos
inc
add
fsubrs
aas
adc
inc
lcall
xchg
or
add
test
cmp
or
push
sub
loope
or
dec
cmp
out
inc
outsb
xchg
or
rcl
sbb
dec
mov
dec
popa
jge
push
and
jns
push
sub
dec
ss
test
lret
and
or
sbb
mov
sti
in
shll
clc
daa
sarb
lds
std
push
stc
xchg
cs
xchg
or
inc
aas
std
scas
or
mov
testb
sarl
mov
jecxz
test
imul
mov
sub
cmc
out
dec
mulb
test
jmp
loope
and
sub
ljmp
and
pop
les
xor
cmpsb
shll
jb
mov
jbe
call
jo
sbb
cmpsb
adc
pop
popf
mov
jge
inc
rcl
mov
pop
push
bound
ljmp
push
fistpl
lret
ret
lods
rolb
push
cmp
xlat
fsubl
dec
rorl
pushf
and
xor
ffreep
scas
mov
int3
push
sbb
jb
clc
movsl
jo
enter
psubsw
dec
jns
xor
mov
mov
xor
jmp
loop
sbb
jnp
aam
je
gs
push
lock
fs
push
push
push
shrb
in
or
pushf
add
dec
imul
pop
jecxz
mov
xor
adc
rcl
ss
adc
mov
jns
xchg
out
int
iret
cmp
dec
dec
mov
cmp
and
rorl
inc
aas
scas
jmp
xor
fdivl
xchg
cmp
xor
push
xchg
jl
pop
jnp
gs
vpshufhw
xlat
popf
mov
push
mov
sbb
pop
lods
fisubrl
add
xchg
shll
xchg
out
flds
in
cmpsl
nop
add
add
movsb
loop
in
mov
mov
sbb
stos
lret
imull
out
inc
dec
adc
inc
ret
and
push
std
in
mov
push
pop
sbb
pushf
dec
xor
insl
and
ror
cmp
and
xor
mov
mov
lahf
mov
es
mov
bound
shll
test
dec
sbb
mov
arpl
jge
or
popf
or
pop
icebp
cld
sahf
jmp
cs
ljmp
and
ljmp
jo
loopne
stos
testl
xchg
loope
nop
mov
jb
dec
cmp
add
mov
aad
and
add
mov
testl
icebp
subb
test
mulb
adc
mov
test
imul
out
pop
int3
sti
dec
mov
mov
inc
cmp
out
inc
cld
adc
out
fimull
xor
push
sub
jl
push
lock
jg
fistpll
xchg
inc
mov
sub
push
in
sub
pop
hlt
cmp
and
lret
loope
and
sbb
cmp
mov
xchg
inc
es
inc
sahf
out
lds
add
xchg
cwtl
jae
pop
and
sub
shll
sbb
out
in
pop
cmp
jo
movb
loopne
gs
sub
xchg
push
mov
mov
shrl
push
popf
popf
lret
scas
jg
pop
dec
or
aaa
fists
push
xor
out
mov
sbb
aad
das
xor
stos
dec
inc
int3
rcr
cld
jne
or
push
and
xchg
add
ror
lahf
mov
dec
leave
xchg
pop
cwtl
adc
sub
fldl
int3
sahf
xchg
repnz
das
popa
jp
pop
clc
imul
cmc
sub
in
sbb
xor
add
mov
in
call
cmp
test
sbb
adc
pop
add
mov
lret
mov
or
mov
addb
rorb
test
mov
lock
push
sub
xchg
in
jns
pop
cmp
aad
and
repz
jne
cmp
rcrl
popa
cwtl
dec
cli
xlat
push
aas
lret
les
xor
movsl
lcall
add
dec
jl
inc
popa
sbb
sarl
subb
shlb
or
add
mov
shl
push
fidivl
adc
mov
push
adc
xchg
xchg
adc
pop
dec
xlat
mov
add
aad
push
jl
sub
mov
sbb
add
daa
xor
mov
push
pop
in
xchg
dec
inc
cmp
add
popa
out
imul
mov
stos
pop
pop
movsl
lods
add
add
cld
ficompl
test
mov
push
cmc
loopne
dec
outsl
xchg
out
ja
stc
adc
adc
push
pop
arpl
sbb
leave
pop
mov
cmp
stc
cmp
mov
int
sbb
push
xlat
add
popf
xor
push
dec
out
ficompl
paddusw
and
sub
bound
pop
push
std
movsb
test
mov
dec
xor
jb
aas
fstpt
imul
dec
inc
add
cmp
mov
imul
bound
std
dec
scas
idivb
lds
sbb
jnp
mov
out
sbb
add
xor
mov
cmp
cli
roll
cmpl
dec
lret
lods
jl
out
push
sti
in
ss
inc
jbe
js
inc
mov
sub
negl
inc
sub
inc
mov
mov
xlat
mov
xchg
ja
inc
dec
push
cmp
sub
sbb
or
cli
out
neg
lret
cmpsl
stos
mov
xchg
ja
inc
dec
push
cmp
sub
sbb
or
cli
out
neg
lret
cmpsl
stos
mov
xchg
ja
inc
dec
push
cmp
sub
sbb
or
cli
out
neg
lret
cmpsl
stos
mov
xchg
inc
dec
and
mov
call
cmp
push
inc
popf
cmp
insb
push
adc
mov
movsl
mov
stc
test
xchg
push
or
inc
sub
and
imul
lds
enter
jmp
insb
and
dec
inc
cmp
sub
cltd
in
aad
frstor
mov
cmp
sub
add
push
in
mov
dec
out
cli
bound
jno
jo
inc
lods
pop
xor
in
sbb
cmp
sahf
push
mov
mov
mov
or
movsb
sub
sahf
jmp
jne
insl
xchg
stc
or
jo
jmp
pop
scas
dec
push
imul
dec
fwait
in
cmc
jmp
add
leave
cmp
mov
mov
pop
and
lods
add
cmc
pop
pop
cltd
lcall
loopne
mov
pop
and
in
inc
imul
test
movsl
je
adc
stc
lcall
in
ret
add
inc
lea
inc
cmp
push
sbb
or
pop
ds
dec
and
jo
and
in
mov
mov
lock
push
insb
pop
pop
and
cmp
imul
lret
rol
mov
lods
mov
ljmp
pop
sub
sub
jno
daa
fwait
xchg
mov
mov
loop
loope
cmp
and
adc
push
dec
xor
cltd
in
cmc
mov
movsl
leave
mov
test
xchg
sbb
jne
inc
sub
and
imul
fldenv
jmp
pushaw
ret
jbe
gs
lret
xor
mov
cli
or
sahf
andb
jbe
enter
pop
xor
jp
mov
and
iret
inc
mov
adc
jbe
sarb
xchg
inc
mov
xchg
js
xchg
js
fadd
mov
pop
sub
or
aam
dec
rcr
and
aad
and
jno
lea
cmp
in
movsl
fnstsw
mov
sub
pop
enter
and
stc
cmc
xlat
push
fcoml
scas
iret
ret
mov
aas
add
sbb
icebp
xor
negb
popf
dec
popf
mov
shlb
sti
or
xor
xchg
lcall
sub
fmull
andl
in
scas
jg
inc
lret
test
add
popf
cmpsb
and
add
iret
jns
imul
mov
sar
or
shr
mov
sbbl
mov
cmc
add
enter
rcrl
fists
jae
pushf
pusha
or
nop
das
jl
add
pusha
inc
push
jmp
pop
stos
repz
sub
or
and
or
cmp
adc
scas
mov
repnz
adc
cmp
mov
out
int
sub
out
stc
dec
pop
adc
js
lret
scas
sahf
lea
add
sub
mov
push
arpl
push
cmp
scas
or
cmpb
ffreep
cmp
dec
cmp
push
fcomps
dec
bound
inc
lods
je
inc
dec
ret
aam
mov
add
add
cs
inc
cmp
dec
sbb
dec
pop
xor
mov
sbb
lcall
push
outsb
mulb
sbb
ss
mov
add
pushf
xor
xchg
int3
push
xchg
test
add
loop
sbb
jle
inc
movsb
pushf
or
fdivs
inc
adc
xchg
lods
or
mov
add
fdivrp
iret
mov
pusha
adc
pop
js
push
hlt
and
pop
push
ret
fadds
fsubs
adc
xlat
add
dec
cli
inc
out
push
xchg
pusha
ljmp
iret
movsb
les
out
loopne
cmpsb
daa
lret
sti
cld
lods
mov
xor
jno
xchg
xchg
fs
add
pushf
test
enter
rolb
je
jno
sub
dec
paddd
sbb
xchg
bound
lret
gs
or
in
sbb
data16
scas
ss
fdivrs
sub
outsb
rclb
lahf
fs
or
sbb
dec
push
pop
aaa
sarb
cmpsb
xor
aaa
pop
out
in
mov
aad
add
rcr
inc
popf
lods
adc
push
adc
add
and
roll
push
orb
sbb
cmp
lods
lret
inc
adc
dec
iret
imul
pop
and
xchg
mov
xchg
push
callw
int
xchg
pop
pop
insl
push
enter
and
inc
pusha
mov
lret
push
pop
pop
pop
sbb
test
idiv
lock
test
mov
sub
mov
dec
and
jno
jg
add
inc
dec
or
xchg
sub
popa
and
jg
lea
nop
and
int3
icebp
ficompl
imul
mov
jmp
mov
mov
xor
mov
jnp
jecxz
inc
fstpl
in
xchg
ror
adc
push
add
icebp
xor
pushf
fistps
or
cmc
xchg
add
stos
int
stos
pop
jge
xchg
sub
fsts
inc
mov
scas
mov
and
jno
push
pop
arpl
hlt
ja
cmp
cltd
pop
lret
sbb
stc
aam
into
sti
rcrb
pop
push
and
enter
in
pxor
push
lods
adc
stos
sbb
into
subl
xchg
jae
enter
lods
push
xchg
jae
xchg
jge
les
xor
fadds
and
pop
mov
subb
dec
jae
add
ss
pop
aaa
push
ljmp
mov
andb
shl
cmc
cmp
adc
iret
push
fcmovb
ret
dec
add
xchg
outsb
cmp
mov
cmp
push
mov
cmp
std
fldenv
mov
jmp
or
fistpl
hlt
ror
cld
mov
mov
add
add
xchg
mov
mov
fsts
andl
cmp
and
outsb
arpl
xor
push
dec
lock
push
jmp
outsb
fwait
xchg
lcall
or
loop
div
or
int
jp
nopl
enter
pusha
fiaddl
repnz
test
or
cld
jnp
xorb
aas
lret
lahf
insb
xlat
mov
or
pop
lcall
inc
js
adc
push
cmc
or
jbe
mov
int3
push
pop
std
std
or
dec
pop
jecxz
ljmp
negl
lock
inc
adc
pushf
out
xor
fwait
xor
outsb
jns
hlt
pop
push
icebp
sub
push
insb
in
inc
adc
lcall
add
dec
or
in
je
jge
inc
outsl
xchg
push
cwtl
xor
inc
jae
sbb
add
popf
fsubrl
cwtl
js
out
in
dec
in
xor
push
and
push
fwait
nop
test
scas
pop
mov
add
cld
int
add
push
mov
in
push
rcrb
dec
cmp
mov
fs
test
loop
rcl
mov
test
stos
jno
pop
pop
lret
adc
es
mov
and
stc
dec
leave
imul
pop
pushf
mov
xor
cli
test
test
pop
sbb
sub
mov
jbe
push
in
loop
mov
dec
pop
dec
test
int3
inc
je
loope
mov
stos
leave
add
repnz
push
inc
inc
jnp
add
push
add
jo
movsl
push
dec
mov
and
popf
mov
or
jl,pn
jl
mov
out
xchg
cmp
pop
jns
lock
fisubl
lret
mov
adc
pop
jecxz
leave
mov
ret
push
insb
or
sub
dec
mov
jne
xchg
and
insl
out
pop
stos
js
addr16
lcall
pushf
dec
pop
push
xor
sub
sbb
mov
sub
cmp
out
xor
inc
mov
and
add
imul
xchg
inc
rorl
dec
cmp
push
insb
out
dec
jo
dec
mov
inc
out
aam
adc
dec
addr16
out
hlt
cs
fidivs
xorl
mov
fiadds
inc
sbb
sub
jecxz
push
adc
enter
loope
and
ret
je
adc
push
lods
pop
mov
pusha
imul
xor
orps
mov
cmp
jno
loope
sub
cmc
xor
rcr
icebp
push
mov
cmp
cmp
nop
xor
cli
cltd
les
dec
push
in
xor
sub
push
xorb
stos
add
sbb
xchg
add
inc
ja
pop
dec
jno
int3
or
mov
negl
pop
cmp
jns
xor
push
lea
fnstsw
inc
xchg
data16
outsl
in
push
lahf
mov
bound
mov
loop
cmovbe
mov
push
xchg
sbb
mov
test
lcall
pusha
jecxz
es
ljmp
add
push
insl
xor
cmp
push
aad
rorl
test
pop
ret
pop
das
cmp
andl
and
icebp
jecxz
loop
inc
and
sub
std
fdivrs
cmpsb
cltd
shll
push
mov
ss
sub
mov
mov
inc
jb
lods
in
mov
or
fucom
or
xchg
mov
int3
das
xchg
dec
inc
fsts
jo
out
pusha
shrb
inc
dec
repz
jb
lods
movsb
ret
in
les
push
pop
jmp
xchg
or
pusha
and
push
das
inc
addl
adc
mov
outsb
leave
dec
xchg
addb
xchg
test
mov
test
int3
lock
lock
icebp
mov
scas
mov
push
mov
ret
pop
xchg
out
ret
out
sbb
sti
dec
dec
push
movl
mov
mov
push
cltd
mov
sbb
leave
dec
push
cli
cmp
pop
cmp
add
mov
adc
mov
cmc
mov
mov
movl
arpl
sub
ss
xor
sub
std
lods
inc
dec
movsb
in
lret
pushf
stos
or
adc
movl
pop
jno
jo
pop
jmp
and
dec
ror
dec
pop
push
lcall
inc
in
aaa
mov
pop
push
dec
mov
loopne,pt
pop
paddusb
mov
imul
jecxz
into
lahf
push
arpl
or
mov
mov
mov
in
aas
jecxz
cmpsl
mov
and
adc
jne
movaps
inc
push
ds
cmp
je
or
mov
movsl
loop
inc
aaa
inc
and
add
dec
xchg
test
lret
xchg
lret
fnstsw
dec
scas
stc
movsl
cmpsl
xchg
arpl
push
adc
stos
out
dec
inc
adc
mov
and
in
movq
movsl
rcr
sbb
aas
aam
pop
xchg
jmp
andnps
outsb
xor
or
push
push
das
lret
mov
loopne
pop
repz
out
pop
cld
subb
pop
je
in
shrl
dec
repnz
dec
add
jne
les
xor
loop
sub
and
jecxz
push
into
xchg
in
rorl
rorb
and
push
cltd
cmpxchg
jne
push
testb
add
xor
and
nop
pop
fwait
mov
repnz
xor
call
into
pop
out
decl
and
in
jnp
cld
xor
and
fwait
lcall
or
imul
adc
jp
pop
outsl
lret
gs
mov
flds
mov
jecxz
ss
cmp
ljmp
sub
xchg
or
cmp
sbbb
sti
cmpsl
cmp
mov
insl
mov
mov
adc
lret
aam
xchg
lods
test
push
push
mov
adc
jnp
jae
jns
adc
mov
test
xor
in
stos
lret
cmp
test
popa
inc
cmp
xor
inc
mov
out
xlat
movsl
mov
jle
sahf
test
xchg
xchg
add
mov
negb
or
add
xor
inc
push
stos
add
mov
outsl
mov
dec
mov
xor
inc
sub
loopne
insl
mov
aaa
addr16
daa
arpl
mov
test
cmp
pop
nop
dec
in
std
popf
xor
dec
flds
je
aas
loop
cwtl
jmp
sub
sbb
jbe
test
inc
push
and
in
pop
and
mov
mov
pop
inc
ret
jno
xchg
pop
lods
mov
sbb
fidivs
jl
xchg
pop
insl
xchg
stos
jo
mov
or
jae
ja,pt
mov
pop
popa
outsl
push
and
xchg
nop
int
daa
lock
test
enter
fdivs
cmp
int3
sub
xor
aad
stos
shrd
fwait
ret
hlt
out
repz
xor
stc
xchg
mov
test
in
add
pop
cmp
gs
fcomps
addb
cmp
imul
loop
mov
jp
inc
or
pop
lret
xchg
mov
push
clc
in
sub
inc
and
push
jmp
in
xchg
mov
sub
push
and
and
imul
adc
imul
xchg
sahf
pop
arpl
notb
mov
sub
inc
cmp
testb
xchg
add
rcr
enter
adc
inc
push
jg
push
ljmp
jbe
lcall
inc
test
movsl
add
fs
out
pop
js
out
pop
outsl
xor
lret
jg
mov
rclb
sbb
adc
pop
insl
stos
cmp
outsb
adc
pop
testb
jge
lahf
mov
jecxz
and
add
pop
insb
fwait
pop
xchg
mov
scas
push
mov
or
cld
cmp
lods
inc
push
stos
jl
jb
ja
pop
movsb
insb
mov
out
mov
mov
inc
and
cmpl
decl
push
mov
lret
popa
sub
and
fildll
cmp
das
or
fiaddl
shrb
push
or
sbb
imul
int3
xchg
mov
xchg
mov
fbld
inc
je
xor
push
fcompl
fcomi
in
outsl
jp
xor
xor
pushf
mov
lock
mov
add
popf
fimull
push
mov
inc
cltd
adc
add
in
sbb
push
or
mov
inc
or
xor
stos
arpl
cwtl
stos
mov
mov
push
cmp
lea
push
std
roll
js
daa
mov
sub
mov
fstl
out
in
shll
fdivs
inc
jl
hlt
mov
cli
jp
imul
dec
out
push
loopne
std
cmp
mov
cmp
pop
ss
pop
mov
std
cwtl
jnp
aam
popa
aaa
cmp
mov
mov
xchg
push
sbb
or
aam
adc
repz
sbb
fbld
dec
jbe
cmpsb
push
repz
xchg
in
mov
aaa
lea
pop
mov
outsl
push
xlat
push
mov
push
invd
in
fwait
xor
test
cwtl
lcall
pop
imul
xor
aam
push
movsl
push
sbb
jecxz
mov
cmpsl
outsb
pop
add
mov
ret
leave
cs
push
cmp
data16
in
and
and
xor
sbb
sbb
cmp
add
loope
jns
mov
fdiv
or
repnz
imul
inc
ficoms
in
aaa
pushf
shll
jle
insl
lods
stos
into
xchg
in
arpl
cmpsb
fisttps
bnd
pop
jge
sub
dec
in
or
xor
cmp
mov
outsl
pop
sub
mov
push
notl
fildll
adc
fimull
test
mov
std
fmuls
cmp
in
lock
push
cmpsl
repz
cmp
xchg
dec
imul
sbb
jae
mov
cmc
into
push
add
outsl
out
and
inc
push
dec
pop
enter
lahf
inc
jge
pop
inc
jge
xorb
fisttpll
xor
stos
push
xchg
sbb
and
pop
fmull
sbb
push
sbb
shr
out
mov
pop
push
jge
or
dec
pusha
dec
and
repz
arpl
add
nop
and
xchg
jne
ret
xchg
xor
add
inc
cld
dec
dec
fwait
inc
or
push
jae
push
out
sbb
push
push
jne
aam
xchg
ja
ljmp
popf
cmp
cmp
and
lret
push
subb
sarb
push
mov
aam
lcall
pop
inc
neg
cmpsl
scas
jb
into
into
adc
ss
xchg
or
push
or
scas
pop
aaa
aam
rcrl
scas
mov
mov
mov
popf
inc
add
cs
pop
fidivl
add
mov
lcall
insl
mov
or
cld
push
test
adc
stos
dec
rclb
mov
mov
ds
xor
push
addr16
stos
mov
popa
cmp
les
mov
outsl
movsl
rcrb
pushf
pusha
ficomps
outsl
and
sub
xor
lahf
lret
iret
and
jb
popf
jmp
add
popf
data16
dec
sub
ret
xor
cmp
and
push
jne
daa
test
adc
ret
mov
lds
roll
je
testl
or
inc
cmp
sti
ss
mull
lea
mov
cli
inc
fnstcw
cmp
inc
popf
test
dec
rcl
push
xor
shlb
jae
enter
sub
insb
push
insl
mov
mov
aas
mov
hlt
arpl
pop
gs
faddl
shrb
call
arpl
loopne
out
mov
aas
lea
or
fmuls
xchg
hlt
xchg
ret
and
sahf
mov
xchg
roll
inc
inc
xchg
es
xchg
and
xchg
movd
fiadds
mov
cmpsl
pop
lret
xchg
dec
cmpsl
inc
sub
mov
mov
dec
pop
pop
inc
daa
pop
mov
cmp
repz
std
sub
aaa
mov
inc
jecxz
jp
mov
mul
movsl
lock
aad
pop
addr16
jl
test
push
icebp
aas
imul
xor
pop
dec
jp
inc
test
orl
in
lahf
fimuls
idivb
lods
movsb
xor
into
pop
cld
push
add
mov
pop
or
das
pop
sub
adc
or
add
aad
fwait
adc
icebp
lret
fadd
cwtl
fs
pop
xchg
lcall
aad
stos
lahf
mulb
cwtl
ret
pop
jge
mov
cmp
cwtl
fldt
lret
les
cs
pop
je
push
mov
in
lcall
or
into
jno
pop
mov
pusha
cmc
shrb
add
sub
pop
movsb
dec
dec
dec
bound
xchg
cmp
into
rcll
mov
mov
aam
shlb
add
ds
hlt
imul
or
mov
icebp
lret
lea
or
cmp
mov
mov
cmp
imul
mov
sbb
mov
mov
cs
fchs
jno
insb
push
mov
aaa
or
or
cmp
cmp
xchg
leave
jno
sbb
scas
subb
xchg
es
out
and
js
lcall
pop
and
shl
push
mov
inc
jecxz
outsl
sub
test
sti
test
mov
test
outsl
iret
dec
in
inc
push
dec
stc
into
ds
jo
std
sti
and
lret
push
clc
call
and
inc
lret
lret
pusha
cld
xor
mov
mov
loop
shlb
jle
xor
subl
sbb
out
les
mov
not
and
push
sub
pop
inc
cld
inc
hlt
mov
cmp
outsb
sbb
xor
mov
fwait
in
in
dec
adc
enter
into
popf
call
cs
mov
and
scas
xor
pop
scas
mov
xchg
test
das
adc
sbb
enter
mov
jmp
mov
cltd
clc
pop
and
aad
filds
jl
jno
outsl
lea
push
xor
push
pop
jmp
sbb
lods
sub
and
dec
add
out
or
dec
cmp
sbb
enter
out
stc
or
cs
add
mov
add
and
ds
cltd
mov
jnp
pushl
in
aam
add
xchg
fxam
jg
clc
add
out
mov
dec
push
adc
pushw
mov
sbb
movsl
jne
mov
adc
jge
into
mov
adc
ret
and
repnz
loopne
cmpsb
pop
mov
les
inc
and
mov
daa
dec
inc
mov
repz
in
cmpsb
call
enterw
outsb
int3
pop
repnz
mov
add
xchg
cmp
mov
or
or
nop
lods
cld
pop
fcomip
lcall
hlt
lret
pop
lcall
jbe
lea
in
sub
sub
dec
xor
mov
pusha
and
stos
cmp
fisubl
pushf
cmp
icebp
fdivrs
cs
ret
push
jecxz
shrl
adc
cmpsb
mov
rcl
add
imul
xchg
xor
xchg
into
mov
push
mulb
mov
push
addr16
hlt
les
jl
in
pop
or
pop
push
xor
mov
or
adcb
mov
xor
in
xchg
es
lret
or
stos
gs
out
sbb
out
aas
adcb
fwait
addl
clc
push
jle
gs
in
pop
xor
push
fcomi
gs
mov
jg
mov
imulb
loope
scas
sub
stos
push
pop
or
dec
ret
mov
xchg
fbstp
xchg
xor
or
sbb
shrl
sub
adc
sbb
jo
sbb
dec
dec
mov
dec
xlat
enter
iret
jecxz
out
pop
jmp
sahf
fisubl
ja
push
sbb
sub
mov
cmp
mov
cs
mov
addl
jae,pn
xor
cmp
hlt
std
inc
xchg
gs
jp
repz
test
inc
das
repz
push
fwait
cmp
cli
lcall
sti
repz
repz
dec
shr
test
mov
lret
fdivl
inc
sub
and
imul
fldenv
jmp
jne
inc
sub
and
imul
fldenv
jmp
jne
inc
sub
and
imul
fldenv
fcoms
cmovno
push
pop
and
jmp
pop
adc
test
lret
push
ljmp
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
icebp
sbb
lret
into
hlt
cld
add
push
mov
push
or
pop
add
or
push
add
add
pop
add
add
add
add
add
inc
add
add
hlt
add
add
add
xchg
add
add
add
les
add
mov
or
cmp
in
flds
and
mov
popf
add
add
add
outsb
add
add
add
mov
adc
incl
enter
loope
adc
adc
rolb
into
add
test
and
scas
add
add
and
sbb
loopne
xor
add
int
adc
outsl
add
add
add
add
add
imul
lock
add
add
add
add
add
loope
adc
add
add
add
add
add
add
jno
incl
cmp
cmp
addl
xor
lahf
add
add
add
add
pop
add
cmp
lock
add
xchg
add
add
add
pop
add
add
jb
jns
das
add
cmpsb
add
add
add
push
add
add
add
add
outsb
add
add
add
adc
das
add
add
add
int
lock
cmp
add
mov
pop
add
add
add
inc
add
add
add
add
jge
xor
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addl
cmp
loope
dec
add
add
add
add
add
add
add
roll
lock
add
stc
add
add
lcall
add
add
pop
or
add
add
add
add
ds
add
dec
add
add
add
add
add
add
or
pop
add
add
add
add
add
xor
or
add
add
add
add
add
add
add
add
add
add
nop
add
add
imul
lock
add
push
add
xor
outsb
add
add
add
add
add
add
add
add
add
xchg
add
in
or
popl
iret
add
add
clc
add
add
add
push
add
add
aam
icebp
add
add
pop
add
outsb
add
add
pop
add
add
add
add
ja
xchg
add
add
bound
or
loope
mov
iret
add
inc
add
test
and
dec
add
jg
inc
add
add
or
add
add
add
adc
add
add
dec
add
jl
pop
add
add
scas
add
push
add
add
and
inc
add
add
add
imul
sub
xor
or
inc
add
add
add
adc
incl
mov
sub
addl
mov
jg
cmp
ss
add
add
pop
or
add
add
inc
add
add
or
lds
nop
add
add
add
add
fildl
hlt
add
add
jmp
add
add
add
adc
add
add
push
add
flds
outsb
add
add
add
icebp
add
les
jno
test
flds
lock
bound
adc
adc
add
xor
mov
xchg
add
adc
mov
add
movsb
xchg
lahf
jns
scas
jns
push
ss
out
js
pop
ljmp
jp
jp
js
out
cmp
std
jmp
mov
scas
push
dec
sarl
inc
mov
mov
pop
cmpsb
in
imul
xchg
int
dec
xor
push
fiadds
mov
xor
leave
cld
clc
clc
fstpt
push
jg
js
hlt
jmp
imul
adc
mov
divl
testl
jno
jne
inc
fsubl
sahf
jnp
icebp
test
inc
xor
push
jecxz
inc
push
jp
push
push
std
and
or
outsl
jp
ljmp
popa
inc
out
repnz
lock
mov
pop
and
mov
adc
movsl
ret
das
loop
add
adc
mov
test
cmc
or
mov
lret
jmp
inc
jp
dec
jns
bnd
popf
xchg
mov
sahf
in
js
push
call
adc
sti
and
insb
pop
pushf
aam
xchg
lds
and
mov
fldt
dec
mov
mov
adcl
and
stc
or
negl
js
mov
sahf
jbe
nop
scas
stos
xchg
adc
test
xchg
xchg
jae
sahf
mov
mov
leave
popf
lret
xlat
cmc
stc
or
clc
dec
int
mov
adc
mov
pop
bound
lcall
adc
rcll
movsb
ljmp
mov
mov
call
mov
icebp
cs
pop
inc
addr16
adc
xor
dec
daa
xor
daa
leave
aad
xchg
pop
mov
stos
mov
sub
lcall
fldt
add
push
adc
mov
sti
aad
xchg
repnz
lret
jb
or
xchg
test
in
nop
out
mov
ljmp
sti
nop
sub
push
imul
sub
fnstcw
in
pop
inc
push
push
lret
dec
mov
shlb
push
aam
sbb
shll
lret
mov
lods
loopne
cmp
jl
pushf
pop
and
cmp
cmp
lods
push
or
xchg
sbb
or
in
xchg
repz
inc
jle
mov
stos
repnz
rol
or
data16
push
xchg
repnz
and
aaa
cmpsl
fsubs
lods
fidivs
adc
pop
pop
arpl
push
cltd
sbb
cmp
cmp
push
and
ljmp
enter
dec
jp
pop
jp
leave
cmp
cmpsb
jno
lret
ret
imul
sarb
lret
loope
outsb
sub
sahf
aad
cmc
in
cmp
jns
jle
bound
jb
sti
icebp
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
