call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
mov
data16
push
mov
dec
mov
push
or
sbb
sub
cmp
dec
mov
sub
xchg
mov
ss
push
cld
jb
cli
sbb
pop
cmp
dec
les
xchg
jl
mov
jg
dec
mov
ds
push
cld
sbb
negb
and
aas
shlb
in
jmp
fbstp
into
and
pop
jmp
in
outsl
dec
sub
pop
jbe
in
pop
pop
xor
out
pop
aad
jmp
xor
mov
dec
clc
insl
data16
pop
or
xchg
mov
adc
divb
sarl
pop
or
popf
cltd
fisubrl
int3
adc
orl
sbb
mov
insb
imul
test
xlat
push
in
push
std
outsb
sbb
loopne
cmp
mov
shll
jae
movsb
adc
scas
pop
int3
xor
sbb
push
pop
sahf
jbe
aam
jns
jo
pop
inc
insb
xchg
adc
shlb
jbe
dec
mov
es
push
cld
pop
or
sbb
sub
cmp
dec
scas
pop
mov
lret
adc
xor
and
jp
arpl
sbb
dec
rclb
sub
xor
ljmp
fldcw
mov
mov
in
cld
xor
sbbb
insl
mov
les
or
in
clc
lds
mov
es
push
cld
push
or
sbb
sub
cmp
dec
mov
cmpsb
insb
xchg
jl
mov
data16
push
mov
es
push
cld
push
or
sbb
sub
cmp
dec
mov
cmpsb
insb
xchg
jl
mov
jne
rcrl
mov
outsl
imul
into
outsb
xchg
lds
lods
frstpm(287
mov
loope
cwtl
iret
mov
jmp
sahf
mov
inc
outsb
cs
jp
mov
lahf
std
jle
std
mov
xchg
insb
mov
mov
dec
inc
mov
pop
cmpsb
push
lods
adc
sub
sbb
out
jnp
in
inc
test
jecxz
aas
notb
lret
jmp
jns
dec
inc
ljmp
cmpsb
addr16
cmp
cmp
scas
mov
and
pop
jge
adc
test
sbb
mov
pop
into
out
lods
push
ds
aas
jmp
sbb
adc
jecxz
cmp
repnz
push
add
filds
outsb
iret
dec
jecxz
dec
daa
jnp
mov
sub
sbb
mov
push
dec
pop
outsl
jo
fcmovnbe
imul
insl
ds
testl
or
ss
xchg
dec
dec
dec
int
popa
cli
sbb
fldl
ljmp
mov
ljmp
mov
sarl
sub
cmpsb
push
push
sub
cmp
xchg
cmp
pop
arpl
hlt
aam
sbb
daa
sbb
xchg
mov
mov
mov
jg
cmp
arpl
jnp
and
mov
hlt
xor
cmpl
shlb
xchg
push
dec
ret
lods
fbld
pop
arpl
addr16
cmp
out
mov
lock
out
jmp
jns
sarb
inc
ljmp
imul
cmp
in
jle
sbb
push
push
mov
idivl
add
push
imull
leave
sbb
mov
bound
sbb
pop
xchg
mov
loop
xchg
sbb
or
xchg
xor
or
mov
push
cmp
sbb
imul
aas
ljmp
loop
out
int
fdivs
cmpsl
mov
or
jl
aam
sub
repnz
das
jmp
out
roll
cmp
mov
adc
jns
negl
pop
lcall
jo
mov
sbb
loop
ret
incl
push
lock
sub
mov
push
or
sbb
mov
imul
push
mov
jno
scas
pop
clc
iret
movsl
or
xchg
mov
mov
dec
mov
push
daa
mov
or
flds
outsb
in
sub
xor
lret
add
mov
jne
inc
test
daa
lock
pop
andb
inc
fldl2e
dec
in
aas
aam
sarb
adc
out
add
pop
fxtract
push
mov
ret
aas
mov
jne
lods
nop
push
lcall
and
mov
loop
jno
mov
push
lcall
imul
mov
hlt
jmp
dec
std
sbb
push
and
cmpl
xchg
iret
loop
and
xchg
cmp
mov
fs
mov
pushf
movsb
inc
jle
mov
seto
dec
jp
pop
fsubs
cltd
xor
aad
pop
lahf
in
fnstsw
jne
xor
fcom
push
add
inc
leave
in
fldl
or
ljmp
jge
cwtl
mull
pop
aas
and
pop
or
mov
fstps
xchg
shll
mov
and
push
mov
cld
xchg
ret
jb
adc
cmp
cltd
test
mov
jns
inc
add
mov
pushf
xchg
lahf
dec
xor
enter
aas
ret
mov
scas
adc
shlb
bound
xchg
ja
mov
jbe
xor
movsb
aaa
push
ret
sarl
aas
or
inc
leave
insb
sbb
mov
jmp
dec
mov
xchg
mov
push
pop
sub
mov
jb
pop
scas
aas
xchg
ja
pop
jbe
lret
lret
imul
dec
xor
mov
adc
pop
xor
bound
adc
jo
xchg
ss
cwtl
aam
fisttpl
test
xor
lret
stc
mov
jno
lods
pop
addr16
add
test
pop
xchg
out
inc
dec
jnp
insb
sahf
or
andb
mov
inc
scas
xchg
addb
outsb
loope
cmp
adc
insb
rorb
dec
hlt
in
mov
pop
arpl
std
movb
repz
bound
inc
pushf
movsl
sbb
or
fcomps
xchg
adc
xchg
test
jg
std
or
xlat
aas
or
mov
and
cli
add
fildll
mov
dec
mov
mov
aad
gs
imul
aaa
scas
cs
rcrl
sti
stos
cmp
stos
inc
push
sahf
sbbl
inc
int
inc
rorl
sarl
js
dec
jne
outsl
movsl
fisubl
cmp
jge
push
lahf
xorl
loopne
mov
xchg
gs
icebp
in
mov
cmp
out
dec
push
xchg
jl
jle
fwait
test
add
jns
adc
enter
push
mov
cld
push
in
xlat
imul
sbb
dec
mov
and
pop
push
xor
sub
test
je
movsb
fldl
xor
test
lods
icebp
mov
stos
or
push
jb
push
int
sub
cmp
sbb
jmp
add
adc
sub
pop
bound
subl
jb
enter
sbb
lahf
inc
fcmovbe
call
in
or
pop
sub
push
dec
dec
sbb
push
xchg
jmp
lret
fcompl
mov
xchg
dec
outsl
cltd
lods
mov
out
jae
and
dec
xchg
iret
add
adc
jno
pop
adc
adc
adc
loopne
jnp
and
repnz
push
shlb
ret
mov
js
ret
outsl
iret
aam
mov
xor
cmp
fs
clc
push
outsl
or
and
xor
push
sbb
clc
insb
jne
cwtl
pop
or
out
dec
in
les
dec
dec
movsb
test
enter
lret
mov
stos
sbb
dec
stos
inc
and
push
xchg
rcr
aas
rcr
jle
lret
inc
cmp
push
call
imul
test
jmp
arpl
sub
ret
pop
call
loopne
add
pop
xchg
sub
jae
add
and
dec
loop
stos
jne
sahf
in
cmp
mov
iret
cs
out
jne
call
fisubs
xchg
fadd
lods
inc
xchg
xchg
add
test
ret
mov
sti
xor
enter
adc
cwtl
add
jl
jbe
pop
sbb
xchg
pop
insl
ljmp
cld
fs
mov
pop
push
test
aas
cmp
jecxz
rcrb
pop
mov
pop
scas
mov
fimuls
inc
ja
mov
cmp
fs
mov
or
inc
addr16
fchs
popa
mov
sbbb
pop
std
jne
popa
mov
or
sbb
push
mov
dec
pop
dec
mov
xlat
add
int3
faddl
push
mov
pop
jns
in
xor
fldl
ljmp
inc
sbb
fldt
cmpsl
and
in
inc
push
pop
lret
test
test
aas
mov
cli
adc
ja
sbbb
lods
sbb
sbb
addr16
xor
loope
push
gs
push
sbb
arpl
cmp
setae
imull
or
ljmp
in
jbe
fcoml
mov
mov
into
dec
or
jbe
and
ljmp
lahf
js
pop
testb
xchg
push
cltd
sbb
xlat
hlt
loop
aas
lahf
mov
popa
popa
mov
mov
fmuls
hlt
setbe
cmpl
and
fdiv
sub
jns
cmpsl
mov
mov
push
lahf
pop
pop
jge
arpl
into
daa
popf
inc
pusha
jmp
xchg
dec
outsb
push
push
je
sbb
fs
cli
pop
ret
insb
imull
loop
add
outsb
sub
jge
rorb
cmpsb
mov
adc
jb
imul
or
mov
scas
xor
imul
stc
cmp
lcall
adc
es
adc
xor
cli
das
les
or
xor
jge
insb
sub
fwait
je
jge
pop
pop
jp
lret
jae,pn
nop
ja
add
push
push
cmpsl
inc
std
adc
cmp
mov
xchg
push
push
jae
sub
jge
ljmp
mov
mov
fiadds
stos
std
push
sbb
inc
daa
pusha
pop
mov
not
xchg
push
lds
pmaddwd
push
sahf
sti
adc
add
jb
jl
mov
fwait
rclb
xchg
jge
aam
inc
jbe
mov
es
push
push
adc
arpl
ret
je
jg
jb
cmpsl
sbb
mov
push
fdivs
jae
sahf
dec
sbb
push
pop
sbb
and
inc
loop
pop
dec
mov
int3
das
or
jns
cmpsb
enter
and
popa
js
fistpl
imul
repnz
repnz
popf
cwtl
clc
ss
std
pop
iret
ret
push
jmp
xor
or
add
clc
ret
and
int
lret
stos
addr16
fcoms
lds
adc
pop
fwait
bound
or
out
call
shl
ja
jno
cmp
subl
ret
adc
inc
adc
and
push
das
mov
bound
sbb
mov
shrb
sbb
dec
sbb
add
mov
scas
sbb
add
stc
mov
sbb
mov
jae
fwait
push
ficomps
pop
aam
mov
aad
mov
adc
popf
adc
stc
inc
loope
xchg
mov
cmp
xor
sub
sbb
mov
xor
mov
mov
fldenv
fs
pop
outsb
outsb
ret
add
mov
rcll
mov
mov
jns
outsb
xchg
xor
daa
out
jnp
pop
or
es
sub
sbb
mov
pop
adc
inc
mov
stos
dec
ficompl
push
mov
pushf
in
mov
pop
sbb
ficompl
scas
dec
lret
jg
in
xchg
mov
or
dec
inc
scas
scas
and
fs
xlat
or
mov
xor
sti
test
pop
sbb
lret
dec
adc
je
jnp
sbb
push
loopne
mov
add
das
out
xor
dec
movsl
clc
jb
clc
leave
jmp
mov
mov
fbld
cli
lods
in
nop
cmc
sub
ja
sub
xchg
pop
in
cmp
cmp
movsb
mov
movsb
icebp
rcll
roll
push
test
aas
pop
or
mov
adc
or
aad
xlat
push
cld
jle
adc
ret
ljmp
aad
cmp
sbb
mov
jmp
xchg
flds
lods
jbe
adcb
dec
sub
stc
pop
or
adc
adc
mov
pushf
and
mov
or
jb
fmull
cmp
mov
push
jp
adc
mov
into
jle
add
and
mov
aam
test
fsubp
adc
ljmp
xchg
fildl
mov
jle
fwait
xchg
and
and
add
dec
loop
dec
or
pushf
es
cmp
ret
test
gs
mov
lea
je
mov
rcll
dec
outsb
lret
jmp
rcr
mov
jne
adc
stc
or
cs
repz
jg
mov
sarl
jle
push
pushf
daa
pop
or
adc
pop
xchg
mov
dec
das
std
sarl
xor
mov
push
sub
jl
adc
ljmp
mov
and
lcall
call
push
and
fcoml
or
scas
fldlg2
gs
xlat
rcr
pusha
push
loope
in
add
sbb
cmc
addr16
and
inc
pusha
or
push
out
cwtl
xchg
lret
sbb
fistl
dec
nop
gs
jmp
pop
xchg
sti
shlb
fmull
inc
xor
ja
adc
icebp
sbb
sub
loope
push
and
outsl
dec
pop
jae
sub
leave
jmp
ds
xlat
push
sbb
iret
push
xor
arpl
test
aaa
movsb
divb
jge
push
jnp
out
mov
aad
out
inc
jecxz
fildll
shll
and
roll
xor
lea
push
popf
xor
lea
les
or
or
ss
sbb
pushf
cs
jne
idivb
jl
jg
test
and
rorl
push
les
mov
mov
push
lods
push
fnstenv
cmp
lea
inc
out
bound
xchg
pop
jge
jno
sbb
pop
bound
and
or
paddusw
mov
daa
add
clc
shlb
lea
push
lret
sub
cmp
clc
ror
jge
out
jbe
adc
mov
out
push
pop
pushf
enter
adc
mov
ja
les
xorl
les
loopew
push
inc
add
xchg
cmp
jecxz
xchg
mov
mov
dec
sub
test
mov
lret
in
xchg
daa
test
xor
push
or
inc
outsl
mov
popf
push
hlt
cmpb
negl
fcmove
repnz
imulb
sub
in
inc
loop
divb
xchg
dec
dec
roll
pop
jmp
in
cli
test
fisttps
mov
je
clc
in
sahf
rol
int
and
fld
cltd
dec
jo
popa
pop
test
cmp
outsb
ffree
mov
dec
int3
pop
xchg
mov
outsb
sbb
lock
repnz
fbstp
lret
out
fs
mov
and
dec
mov
cmp
fidivrl
mov
push
and
loopne
fcomip
addr16
add
fidivl
cmpsb
mov
adc
ret
add
mov
adc
stc
sbb
shrb
inc
add
mov
sbb
pop
fcoms
leave
fidivrl
sub
sub
inc
clc
mov
test
cmp
loopne
leave
sub
pop
ret
dec
into
jns
dec
sub
cmpsb
mov
push
lock
pop
movb
mov
dec
lahf
movsb
xor
mov
pushf
cmp
inc
cmc
aas
push
xor
out
sub
sahf
in
sahf
mov
inc
cmpsb
or
mov
mov
stos
add
push
mov
popa
inc
mov
mov
mov
xchg
inc
and
mov
jp
pop
fistpll
push
jno
movsb
fldcw
jns
lea
and
aas
inc
mov
push
sbb
cmp
fs
dec
push
push
fs
adc
sbb
xor
mov
push
cmp
push
xchg
test
xchg
cmp
sbb
sub
cmp
mov
hlt
jmp
or
xor
xorw
cmp
push
inc
cmp
pop
pop
xchg
outsl
lods
jmp
call
cmpsb
pushf
jge
cmp
add
adc
push
xchg
or
out
test
mov
mov
lods
mov
jnp
push
push
insl
mov
rol
sub
adc
daa
inc
mov
cwtl
arpl
cli
or
fwait
xor
ds
push
sub
cs
xlat
pop
xorb
jne
mov
add
inc
jne
mov
popa
ja
push
test
add
mov
or
fmull
clc
sti
sbb
xchg
pusha
imul
jle
mov
sub
xor
push
fsubl
cwtl
adc
daa
add
fwait
in
das
test
pop
push
xor
add
or
mov
xor
mov
sub
ret
inc
bound
gs
test
dec
aam
cmp
les
aas
lods
decb
scas
mov
add
xchg
jg
pushf
mov
popa
leave
jle
lock
std
mov
jg
aam
jmp
jo
xor
or
call
in
sub
test
dec
cmpsl
shrl
pusha
divl
popf
push
and
cs
outsl
aam
clc
xchg
mov
inc
test
jno
fisubrl
pop
int
or
in
aas
jg
add
adc
mov
push
and
sub
cltd
xchg
mov
rorl
ss
or
cmpsl
mov
popa
call
repz
test
dec
mov
shl
mov
popa
arpl
jmp
jae
enter
repz
cmp
mov
arpl
arpl
and
inc
xchg
cmpsl
sub
mov
in
xorl
xchg
xchg
fldl
movsl
lcall
sbb
mov
dec
fnstsw
mov
mov
dec
push
cmp
iret
push
stos
mov
std
sub
cs
gs
popa
mulps
and
iret
testb
rcr
and
fisttps
cmp
cmp
ja
cmpsl
std
or
push
mov
cmp
es
sbbl
jo
flds
outsb
enter
sub
pop
mov
inc
adcl
push
shlb
iret
mov
and
test
iret
adc
icebp
insb
jge
pop
fimuls
insl
sahf
dec
pop
jbe
pop
xchg
inc
roll
cli
dec
pusha
arpl
ret
mov
sbb
xor
push
lret
adcl
imul
mov
leave
mov
pop
inc
cmp
fstps
out
cwtl
sahf
xor
pop
in
pop
leave
jne
imul
fdiv
fwait
xchg
mov
mov
fnstenv
iret
addb
add
ss
cmp
dec
mov
jp
mov
mov
aam
js
ss
inc
sub
rorl
push
xchg
mov
jns
add
jbe
adc
scas
cmpsl
loop
cmpsl
pop
ds
es
dec
mov
rcrb
cmp
outsb
and
fnstsw
mov
inc
mov
push
sub
lock
fildll
ret
lret
sub
pop
jne
into
popf
sbb
cmp
out
lock
xchg
push
movsl
jne
fiadds
xlat
popf
loope
sbb
aas
je
inc
inc
lods
aas
shll
in
imul
sbb
rorl
pop
inc
in
mov
and
push
dec
push
dec
jecxz
rcrl
and
fimuls
shrb
jp
pushf
adc
rorl
sub
in
mov
inc
dec
xchg
movsb
addr16
jp
xor
mov
in
je
cmp
idiv
pushf
in
jns
mov
imul
jmp
call
test
cmp
xor
mov
repnz
or
ja
sti
sub
dec
pop
mov
xchg
in
mov
push
adc
cmc
cmpsb
sub
stos
cltd
push
fbld
mov
inc
mov
orb
push
or
push
ds
xor
mov
incl
and
xor
fnstcw
ljmp
call
add
jnp
push
ss
ds
stc
sbb
push
add
mov
mov
punpckhwd
icebp
mov
test
rclb
or
dec
push
aaa
push
aas
dec
jnp
aas
jl
hlt
icebp
mov
dec
cmpsl
ja
mov
sbb
in
stos
jmp
sbb
fwait
sbb
jmp
jmp
add
orl
xor
push
jecxz
pushf
lcall
xchg
test
ret
mov
movsb
xor
jne
pop
inc
daa
mull
shrl
push
movsl
inc
je
and
jg
sti
sub
push
cmpsb
cmp
das
repnz
movsl
inc
pop
iret
cli
js
mov
orl
mov
outsb
nop
inc
insb
adc
dec
and
dec
test
cmpsl
cmpsb
ret
xchg
xorl
insb
dec
dec
popa
push
adc
ret
mov
and
daa
rorb
sbb
shr
jnp
aas
sbb
scas
sbb
arpl
sub
or
pop
mov
movsl
daa
jl
adc
jp
lods
push
fdivrl
cmp
loope
mov
fadds
adc
and
jbe
jl
push
ret
icebp
bound
jmp
xor
jo
adc
mov
cmp
pop
or
sub
cmpsb
enter
imul
pop
fwait
inc
popf
pop
lahf
mov
subb
test
out
ss
mov
sbb
daa
and
push
dec
test
int
and
push
loop
mov
push
imul
ret
jbe
inc
dec
cmp
push
loope
fstpt
mov
in
dec
int
in
sub
aas
fdivrp
mov
fistpl
cmpsl
imull
ret
popa
xchg
imul
ja
mov
xchg
popf
pop
sarl
pop
dec
mov
test
xlat
mov
and
int
sub
lret
xchg
jmp
stc
mov
push
inc
dec
sub
pop
xchg
mov
push
mov
es
push
cld
push
or
sbb
sub
cmp
dec
mov
cmpsb
insb
xchg
jl
mov
data16
push
mov
es
push
cld
push
or
sbb
sub
cmp
dec
mov
cmpsb
insb
xchg
jl
mov
data16
push
mov
es
push
cld
push
or
sbb
sub
cmp
dec
mov
cmpsb
insb
xchg
jl
mov
bound
fsubl
in
push
cld
or
sbb
xchg
cmp
cmp
aam
xchg
jmp
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
testl
pop
jmp
jae
out
notl
cmpsb
dec
mov
xchg
jg
jg
ja
inc
scas
push
mov
pop
out
pop
lcall
xlat
aas
cmpsl
sub
jg
ja
inc
scas
push
mov
pop
out
pop
jmp
maskmovq
idivl
dec
mov
les
fiadds
cmpsl
or
or
ret
ja
or
pop
fisubrl
and
mov
jecxz
je
je
and
rclb
cli
xor
push
xor
fistpll
push
lea
jne
pop
or
sahf
rcrb
pop
pop
dec
add
xlat
outsl
loop,pn
jbe
dec
jge
js
cmpb
out
cmpsl
push
xchg
sub
rcrb
ja
add
shlb
addr16
sbb
out
pop
pop
div
xor
jmp
in
xchg
sbb
pusha
adc
inc
mov
inc
aas
xor
mov
orb
rcl
aas
hlt
sbb
dec
add
push
mov
adc
mov
cmp
jmp
jbe
mov
mov
pop
rcl
mov
xchg
cmpb
ja
inc
scas
push
mov
pop
out
pop
jmp
maskmovq
negl
das
xlat
aas
cmpsl
dec
mov
xchg
cmp
xor
sub
sbb
mov
inc
mov
jg
push
test
mov
sarl
sti
sbb
sbb
xor
xor
pop
faddl
push
lcall
lcall
sub
leave
xlat
or
int3
and
ja
data16
aaa
filds
out
pop
jmp
maskmovq
negl
das
xlat
aas
cmpsl
dec
mov
xchg
jg
ja
inc
scas
push
mov
pop
out
pop
jmp
maskmovq
negl
das
xlat
aas
cmpsl
dec
mov
xchg
jg
jb
lret
js
cmp
jne
jecxz
lock
scas
add
call
cltd
aam
pop
cmp
stc
push
adc
mov
xchg
add
and
fcomps
jns
lret
enter
and
dec
or
lahf
rcl
cld
test
fwait
sbb
das
ds
fadd
mov
pop
cli
fucom
adc
adc
dec
mov
cmp
insl
repnz
mov
mov
mov
or
mov
sbb
filds
sti
int
cmc
cmp
in
cmp
sahf
icebp
rcl
xor
push
push
mov
pushw
loope
add
push
and
rol
push
sbb
pop
test
filds
pop
lret
lcall
cmc
ds
sub
mov
loopne
test
mov
mov
sarb
aas
and
icebp
pushf
movsl
gs
std
mov
mov
jp
cmp
xorl
mov
cmpsl
mov
call
pop
dec
mov
or
xchg
inc
push
cmp
jp
xchg
and
lods
dec
push
and
dec
test
mov
lahf
pop
shrl
pop
jo
cs
addr16
out
hlt
xchg
testb
dec
das
mov
mov
outsl
add
and
fnstenv
add
fistps
daa
and
and
sbb
out
inc
cmp
adc
popa
pop
fcompl
jle
push
pushf
add
inc
jge
leave
inc
cltd
mov
into
rclb
aam
cmpsl
mov
fsubrl
add
mov
test
mov
sahf
fxch
ret
cmp
jmp
ds
out
js
xchg
mov
xchg
jp
aad
cld
bound
dec
movsl
pop
aad
xor
adc
shr
cmp
cmp
hlt
ficoms
mov
or
push
mov
push
insb
sbb
cmp
cmp
mov
inc
and
pusha
insb
lods
rolb
fisttps
mov
jbe
or
jns
sahf
inc
movsl
cmc
mov
dec
mov
or
stc
nop
mov
insb
and
pop
sti
fbstp
xchg
sbb
cmp
dec
xorb
sar
jno
inc
fs
mov
fisttpl
jle
sub
test
pop
cmp
and
icebp
pop
cmc
mov
xchg
aas
sub
xchg
insl
push
fdivrl
mov
negl
jg
add
gs
xchg
or
pop
push
faddl
cwtl
dec
pusha
outsl
xlat
movsb
sub
sbb
mov
adc
lcall
adc
repnz
movb
sub
xor
xor
push
icebp
pmullw
and
pop
cwtl
adc
movsl
ds
cmp
es
imul
pop
push
pop
jp
fnsave
fwait
lea
popf
push
pop
or
call
mov
aad
inc
icebp
repz
subb
sbb
pop
inc
dec
pop
outsl
les
popa
pusha
outsb
mov
mov
ds
cmovl
dec
pop
mov
jnp
jl
add
mov
xor
negb
lods
into
ret
pop
lahf
jns
out
mov
js
xor
roll
push
mov
aaa
scas
fsubrl
lods
dec
movsb
clc
das
insb
push
push
popf
mov
movsl
gs
add
cmp
out
or
iret
out
or
mov
nop
ss
int
inc
cli
cmp
sub
or
stos
sub
xchg
xorl
test
or
sbb
pop
mov
aas
mov
dec
sbbb
test
cmc
jl
mov
push
ficompl
lods
fistpll
lcall
jmp
adc
mov
sbb
les
sub
inc
jp
sbb
int
scas
or
adc
or
ficomps
daa
fwait
inc
xchg
xchg
dec
sub
xchg
and
call
cmp
lahf
cmp
mov
lret
lds
cltd
mov
out
subl
es
jno
add
cmpsb
outsl
lcall
stc
push
fst
or
outsb
sub
sub
in
stos
cwtl
inc
pop
adcl
sarb
or
xor
inc
sbb
leave
inc
lods
push
mov
sub
xchg
nop
inc
enter
insb
fs
rol
out
and
stc
rcrb
fcompl
inc
and
push
cmpsl
loopne
adc
dec
jbe
jns
repnz
xchg
ljmp
decl
negb
in
mov
push
nop
pop
adc
push
sub
jl
xor
fcomp
loop
std
stos
mov
aas
leave
fwait
cli
mov
and
scas
cmpsb
mov
jns
sahf
insb
cltd
mov
sti
rolb
out
sbb
add
pop
enter
add
jbe
sub
aam
push
pusha
jp
call
or
push
andl
call
sub
dec
stos
lods
test
push
cmp
repz
inc
dec
lock
movsb
inc
add
insb
xor
int
lea
cmp
int3
dec
idivl
sbbb
push
jns
sahf
addr16
les
xor
xor
mov
shlb
xchg
sbb
sub
jns
sbb
stos
sbbb
cld
sbb
js
aad
add
stos
loopne
fistpl
jo
adc
cmp
scas
mov
mov
mov
mov
xchg
mov
xchg
xchg
adcb
jbe
lret
or
daa
add
xchg
aad
not
xchg
nop
popf
pop
lret
mov
jmp
push
push
sub
dec
gs
in
mov
call
mov
shrb
repnz
into
xchg
test
adcb
in
in
push
fs
and
xchg
jle
ror
xchg
push
xchg
dec
xchg
pop
pop
sub
and
mov
sub
lds
dec
pop
jge
pop
sub
shlb
pop
cwtl
pop
sbb
fildl
cmp
enter
sbb
mov
je
xchg
adc
pusha
and
repz
adc
xor
mov
mov
add
loope
jge
repnz
xor
orb
xchg
js
xchg
inc
aam
push
cmc
add
clc
cmp
pcmpeqw
mov
insb
xchg
adc
sub
pushf
out
out
stos
pop
jbe
stos
mulb
imul
inc
mov
lret
pop
cli
push
or
sahf
mov
pop
push
lahf
cmc
sbb
or
lea
data16
xchg
shlb
sahf
test
adc
lcall
outsl
lcall
neg
and
sarl
iret
xchg
sbb
out
mov
xchg
push
jle
cmp
icebp
idivl
fdivl
sub
fwait
inc
ret
sbbl
rorb
clc
test
mov
xor
fists
adc
mov
jbe
cmc
cmc
inc
add
mov
jmp
dec
xchg
aaa
nop
mov
jmp
nopl
mov
sbb
pop
xchg
inc
mov
inc
pop
cmp
cld
xchg
pop
mov
pop
push
add
test
mov
in
fsubr
leave
aas
inc
cmp
mov
or
cmc
pusha
decl
pop
mov
jo
clc
pusha
cmpsl
inc
test
mov
mov
jae
cmc
adc
and
mov
int
sbb
jmp
xchg
hlt
stos
loope,pt
fisubrl
outsl
sbb
xor
jns
sbb
fdivrs
cmovnp
lret
lahf
lods
xchg
bound
out
lods
mov
dec
ss
dec
mov
jbe
movsb
sub
or
inc
aam
aam
fldenv
xor
lods
test
imul
mov
sub
inc
add
pop
xchg
out
pop
xchg
xchg
mov
sbb
aaa
les
std
add
fcompl
mov
cmp
pop
sbb
mov
les
add
push
fidivl
flds
add
repnz
ffreep
and
imul
push
inc
push
sarb
and
inc
sub
cmpsb
addr16
jecxz
out
in
jge
adc
add
inc
push
enter
cli
mov
test
ja
insl
repnz
and
in
dec
xor
fstpl
and
sub
add
insl
pusha
outsl
pushf
mov
jbe
xchg
call
scas
test
push
or
call
xchg
pushf
idiv
push
dec
xor
xchg
movsb
nop
nop
fcomp
lahf
out
jnp
arpl
sbb
and
mov
movsl
mov
mov
out
or
lds
ret
andb
je
sub
and
adc
sub
cmp
adc
push
icebp
mov
xchg
inc
xchg
push
fstpt
test
inc
loope
or
js
add
mov
xchg
pop
pop
adc
pop
adc
mov
cmp
cmpsl
jecxz
add
mov
mov
lret
and
fsubrp
push
xchg
out
ja
inc
adcl
mov
insl
lods
out
jns
ja
mov
shr
into
pop
ret
fwait
mov
fwait
inc
and
pop
fldl
xchg
inc
mov
xor
push
outsb
or
mov
jne
ret
gs
pop
stos
mov
push
mov
adc
sub
xlat
clc
xor
mov
push
test
add
jge
and
out
dec
and
dec
mov
mov
adc
nop
mov
iret
jnp
arpl
adc
mov
dec
inc
sbb
add
ret
mov
mov
ret
mov
addl
es
and
inc
lret
scas
and
jecxz
test
fdivr
sub
fsubrl
jle
lret
jl
inc
pop
sbb
sahf
adc
sub
mov
xlat
int3
push
fwait
inc
es
in
inc
inc
xor
filds
push
dec
push
xor
out
stos
movsl
fnclex
movsl
push
test
jl
xor
loope
rorb
dec
or
dec
test
iret
pop
pop
jne
mov
lret
or
fisttps
sbb
test
js
daa
pop
jbe
sbb
fdivrl
daa
outsb
roll
mov
xchg
sub
xchg
or
mov
fisttpll
mov
and
pop
fisubrs
jg
shlb
fimuls
pop
or
ficoml
add
and
or
lcall
in
xchg
test
xchg
mov
or
jae
mov
sbb
add
cmp
fs
js
ja
mov
xor
fwait
std
xchg
lcall
jae
out
lock
out
jns
mov
cs
dec
dec
mov
sub
fdiv
xor
mov
sub
movsl
ret
cmpsb
shlb
out
ljmp
dec
adc
mov
mov
mov
scas
jmp
in
cmc
mov
fs
add
fsubr
xorl
out
sbb
jno
gs
sub
sbb
xor
dec
inc
jb
jle
frstor
dec
sub
sbb
test
sbb
xchg
clc
push
jns
adc
test
adcl
sarb
mov
int
jns
mov
pop
fnstsw
xchg
and
xchg
adc
push
pop
out
int3
ret
jno
lahf
cmp
xchg
adc
int3
cli
ficompl
mov
sbb
jno
jg
negb
adc
ret
in
sbb
decb
mov
cmp
orl
call
mov
out
fmul
and
leave
enter
js
addr16
andb
push
dec
rolb
mov
push
jne
jle
testl
mov
and
jl
push
mov
mov
inc
add
adc
bound
xchg
adc
mov
daa
jae
call
xor
movsb
pop
mov
add
ret
inc
dec
xor
xor
stos
aaa
mov
jge
cmp
mov
mov
or
jp
or
push
data16
sub
cmp
add
jnp
push
xor
sub
xchg
inc
or
sub
lcall
dec
out
xor
pop
lret
out
das
insb
jge
test
xchg
cwtl
pusha
fdivp
mov
pop
push
in
add
mov
scas
in
fsubrp
cmpsb
sub
cmpsb
adc
dec
adc
gs
inc
and
cmp
jl
cmp
cmp
mov
xchg
popf
lds
sbbl
jmp
push
orl
cmp
xchg
inc
adc
pop
outsb
pop
cmp
movsl
mov
add
dec
push
pop
push
and
sub
stos
sbb
fbld
out
sbb
shlb
push
and
sahf
mov
mov
mull
xchg
popa
mov
hlt
js
lods
sahf
pop
cmp
or
sti
jp
inc
jnp
pop
push
aam
pop
lcall
mov
push
fmul
enter
xor
mov
in
fnstenv
dec
push
scas
pop
mov
bound
sbb
lcall
cltd
es
push
add
pushf
add
icebp
sbb
cmc
aam
les
mov
cmp
mov
jg
imul
pusha
jbe
pop
lret
repnz
sbb
test
adc
dec
sbb
dec
push
jp
inc
sub
cmp
aas
xlat
imul
pop
xor
lods
pop
mov
sti
pusha
sbb
mov
jb
sub
pop
ljmp
push
sub
jbe
inc
ljmp
in
leave
jns
add
popa
insb
cmpsb
xor
push
sub
pop
pusha
sub
pop
mov
rcll
sbb
xchg
adc
and
sub
mov
sbb
jo
fwait
mov
add
std
xchg
lock
mov
loope
fwait
or
into
sub
shl
dec
rcll
out
pop
fwait
cltd
push
mov
inc
hlt
sbb
shlb
or
and
fisubs
bound
cltd
lods
ds
pop
or
pop
and
pop
cmpsb
dec
sub
mov
lea
in
jl
les
mov
pushf
adc
xchg
test
fsts
mov
push
fcoml
xor
jmp
pop
push
push
sti
das
adc
adc
mov
cmpsl
inc
loopne
gs
loop
xor
fstpl
in
sub
xor
popa
ret
inc
push
adc
decb
xchg
inc
jmp
mov
adc
mov
mov
mov
loop
xor
lea
push
cli
mov
or
out
insl
sahf
sbb
jbe
std
mov
int
lea
jle
fstps
jo
es
push
adc
in
push
add
lret
fdivp
or
shl
insl
adc
adc
fldenv
push
dec
stc
xor
js
outsl
mov
test
jp
sbb
pop
aas
dec
xlat
clc
sub
sbb
repz
idiv
dec
jp
pop
lods
lock
mov
push
mov
fwait
sbb
cmp
inc
mov
loope
fldenv
mov
aad
negl
rcr
cmp
leave
insl
insb
add
dec
dec
cmp
cmp
xchg
jl
sti
cltd
ret
gs
push
xchg
lods
nop
stos
decb
hlt
and
inc
push
and
arpl
cmp
fdivrs
lods
mov
test
scas
incb
popa
and
mov
inc
dec
loopne
jnp
leave
cmpsb
imul
add
sahf
jecxz
ficoml
lcall
fiadds
adc
adc
mov
std
shll
sbb
xchg
test
sahf
stos
lods
sbbb
stc
sarl
repnz
mov
fistpl
andl
mov
out
xchg
sub
xor
add
dec
xchg
aaa
popf
lods
or
imul
push
insb
xchg
mov
push
ret
cmc
lcall
dec
pop
ficoml
out
out
call
js
adc
cmpsl
push
aam
mov
movsl
xor
jb
lods
sbb
cmp
inc
cmp
ljmp
ret
mov
mov
ljmp
mov
lea
inc
js
mov
sahf
pop
jbe
add
xchg
or
int3
cmpsb
pop
je
and
pop
mov
scas
pop
add
arpl
imul
inc
push
test
inc
push
cli
mov
sti
sub
outsl
dec
jbe
pop
or
loop
jo
test
cld
jp
ljmp
sbb
xchg
dec
lock
andl
push
and
sbb
and
pop
and
pop
push
adc
enter
adc
std
add
popa
mov
or
pop
enter
or
add
rclb
push
xchg
bound
jmp
inc
push
jo
dec
lea
sbb
pop
clc
cmp
pop
xchg
push
mov
add
cmp
int3
dec
xor
jle
dec
pop
pop
xor
jmp
dec
xlat
shrl
cltd
or
ror
sub
push
xchg
mov
cmpsb
and
ja
imul
xchg
add
mov
sbb
push
adc
dec
lods
test
or
scas
xchg
ljmp
jge
mov
insl
and
mov
cld
sub
fnstcw
or
push
add
leave
lea
cmp
mov
mov
or
cmp
pop
outsl
jae
out
in
popf
call
push
add
test
lahf
pop
fistps
dec
aad
les
test
sub
xor
test
ret
sti
out
pushf
hlt
addl
movsb
mov
and
or
xchg
xchg
ja
ret
or
movsb
idivb
push
lret
lea
push
dec
inc
loop
jns
and
sbb
bound
fildl
ja
mov
cli
mov
inc
lock
cltd
sub
pop
mov
add
dec
pop
mov
cmp
sbbl
scas
mov
aad
sbb
lret
shlb
inc
push
sti
cmp
jns
aas
push
add
push
push
xor
xchg
pop
imul
shrb
xlat
int3
dec
pushf
pop
pop
mov
adc
inc
adc
repnz
negl
xlat
pop
hlt
xlat
ds
inc
add
jno
mov
adc
shrb
out
jp
lock
jge
lock
jbe
cltd
pop
jmp
dec
jg
cmp
testl
jg
std
pushf
sbb
cmc
in
cs
sbb
outsb
pusha
xor
add
push
sbb
jmp
push
rorb
jnp
mov
int3
push
icebp
xor
and
push
xchg
jle
cmp
cmp
fsubr
bound
mov
xchg
scas
in
repnz
cmpb
jge
adcb
xchg
inc
lods
pop
sub
in
dec
jl
shlb
mov
add
mov
push
les
mov
cmpsl
ficomps
push
cvtps2pd
in
in
xor
lcall
out
add
push
dec
test
cmp
movsb
sti
sbb
or
inc
mov
fnsave
cs
and
gs
mov
aam
faddl
xor
lret
ret
inc
fidivl
inc
or
test
in
sarb
or
jbe
popa
mov
push
pop
jge
popf
pop
or
jecxz
out
popf
xchg
mov
pop
or
fs
daa
add
add
mov
cltd
cmp
cmp
into
jno
ret
mov
xchg
adc
movsl
cmpsb
popa
add
pop
mov
or
shrl
idivb
add
xchg
insb
xor
pop
xchg
add
outsb
insb
push
orl
and
je
add
jmp
or
mov
jno
out
cmc
xor
push
movsl
and
xchg
lcall
je
xchg
rcll
dec
ret
aad
mov
lea
or
dec
pop
mov
pop
rclb
outsb
aad
jo
mov
mov
and
mov
inc
mov
imul
fdiv
loop
mov
add
and
cwtl
iret
push
lret
mov
fidivl
pop
in
aas
xor
xorl
xor
call
movsl
add
pop
cli
hlt
adc
adc
lahf
xor
cmpsl
push
xchg
rcrb
popa
sbb
add
mov
or
mov
cs
cmpsl
push
pop
jnp
mov
xchg
fs
sbb
rcrl
movsb
lods
rorb
test
pop
push
adc
cwtl
jb
xor
out
test
jg
mov
mov
mov
pop
lods
roll
xchg
stos
int3
mov
clc
sbb
lcall
adc
mov
cmpsl
imul
fldenv
out
bnd
imul
cmp
pop
sbb
lods
mov
lds
jo
mov
cmpsl
rolb
iret
pop
fldenv
mov
inc
pop
repz
shrl
filds
out
pop
jmp
maskmovq
negl
das
xlat
aas
cmpsl
dec
mov
xchg
jg
ja
inc
scas
push
mov
pop
out
pop
jmp
maskmovq
negl
das
xlat
aas
cmpsl
dec
mov
xchg
jg
ja
inc
scas
push
mov
pop
out
pop
jmp
maskmovq
negl
das
xlat
aas
cmpsl
dec
mov
xchg
jg
jbe
inc
scas
push
mov
pop
out
pop
aas
out
divl
rol
aas
mov
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
lret
clc
jmp
gs
mov
xchg
cwtl
add
dec
jns
or
sbb
sub
sub
lods
call
stc
fmuls
mov
pop
or
pop
dec
inc
sbb
sub
sbb
sub
jnp
and
xchg
xchg
stc
test
mov
sbb
pop
sbb
bound
push
jge
sbb
mov
cltd
xor
xchg
inc
push
imul
mov
sbb
mov
dec
cmp
jmp
cmpsl
test
xor
mov
and
sti
sub
xchg
aaa
jmp
out
testb
andb
pop
std
jl
jns
sbb
pop
cmp
enter
sub
pusha
jbe
cltd
rclb
mov
sub
jge
movsb
imulb
sbb
sub
cmp
std
aam
leave
fwait
fs
jne
adc
and
fisubrl
cmp
dec
jnp
cmp
sbb
inc
call
out
jo
push
enter
push
lea
sub
sub
cmp
dec
stc
shrb
loope
test
out
ret
mov
inc
add
rcrb
cmp
mov
xor
fucom
mov
cmp
jnp
ja
inc
dec
pop
jns
lods
mov
std
loopne
cld
mov
hlt
cs
add
jo
jbe
inc
imul
mov
cltd
mov
dec
push
jns
or
sbb
sub
cmp
leave
call
stc
fmuls
mov
js
dec
jns
or
sbb
sub
cmp
leave
call
cmp
inc
xor
sbb
and
push
repnz
dec
std
sub
pushf
lahf
pop
test
inc
fidivrl
mov
and
movsl
test
rclb
loopne
fmull
push
add
les
jns
stc
not
sahf
aaa
out
sub
sahf
sub
repz
dec
shlb
bound
sti
push
xchg
test
mov
stos
mov
daa
jg
lods
lea
fnsave
and
dec
mov
imul
pop
cmp
jp
dec
mov
ljmp
mov
adc
test
ss
and
add
dec
ret
nop
fisubrl
or
adc
mulb
xor
push
fnsave
xchg
sub
rolb
inc
scas
cltd
pop
pop
inc
add
jl
jmp
jne
aaa
jae
aad
les
dec
xchg
inc
push
callw
test
mov
lods
nop
fimuls
push
pop
or
ljmp
jae
push
scas
sbb
inc
leave
xchg
jmp
or
fsincos
fidivs
pop
adc
daa
pop
pop
cs
mov
mov
mov
mov
pop
xchg
ret
xor
fiadds
mov
mov
adc
stos
fnsave
ljmp
jbe
ds
adc
mov
adc
lods
cmp
aaa
rolb
sbb
fldenv
xlat
jge
test
cmc
xor
push
adc
add
seto
jg
lret
iret
mov
sub
mov
sbb
push
call
and
pop
xchg
mov
mov
insl
mov
or
inc
push
xchg
cmpb
adc
lret
adc
mov
cwtl
loope
mov
add
lret
mov
sbbb
or
jecxz
dec
call
adc
imul
aas
mov
and
or
xor
adc
xchg
xlat
loop
lahf
lock
das
cmc
lahf
ret
int
jns
adc
sub
push
out
pop
add
and
ret
mov
hlt
inc
sub
pop
in
movsl
xor
sbb
jo
adc
fiaddl
sbb
add
mov
push
mov
lods
dec
iret
adc
std
pop
mov
sub
outsb
aaa
hlt
inc
test
fsubrp
into
xor
sbb
or
sti
call
imul
rcll
hlt
mov
movsb
iret
mov
out
add
jg
push
cmp
cmp
mov
xor
ja
mov
test
mov
dec
push
rol
stos
pop
inc
or
mov
leave
inc
xchg
repnz
call
les
fmul
push
int
add
xchg
rorl
xor
call
rcll
movb
pop
sbb
jmp
popa
dec
adc
dec
add
outsl
fisubrs
movsb
popf
or
cmpsb
mov
sub
mov
mov
pop
inc
out
aam
mov
jno
mov
ljmp
subb
shrb
push
xchg
sub
test
movsb
and
lods
dec
je
inc
jl
sar
pop
loope
sub
inc
and
or
mov
aas
push
mov
rolb
xchg
out
adc
popf
addr16
and
sbb
cwtl
imul
mov
jo
push
cmp
jno
sub
fnsave
push
adc
push
stos
inc
pop
add
sbb
jbe
or
xchg
jle
or
inc
jge
pop
sahf
lock
arpl
mov
das
mov
lret
andb
xchg
gs
jg
loop
or
scas
sti
stos
adc
fisubl
xor
fisttpll
dec
data16
jne
out
inc
in
call
ss
mov
and
fstps
cmp
push
out
jecxz
lcall
int3
mov
jg
xchg
xor
and
bound
icebp
jmp
xor
insl
dec
fs
sub
mov
das
insb
jae
js
sub
jns
mov
mov
fldenv
mov
cmpb
sub
pop
ja
repnz
cmpsb
mov
pop
sub
mov
jle
adc
mov
cld
les
bound
jae
push
or
subb
inc
or
mov
xor
add
dec
sbb
lock
sbb
cmpsb
add
jp
and
mov
xchg
iret
cmp
xor
cwtl
aad
fisttpll
shll
test
push
stos
add
push
jno
repnz
sbb
aas
aad
cmp
out
loop
lcall
jmp
sbb
hlt
pop
loope
jne
into
bound
gs
xchg
push
adc
jb
mov
vphsubdq
mov
aam
jns
mov
cmpsl
rolb
mov
ficoml
adc
xchg
out
pop
sbb
rcl
cli
ss
sbb
push
out
insb
scas
andb
cmp
mov
dec
call
pop
pop
add
jns
pop
sti
cmp
test
sbb
addr16
add
xchg
mov
mov
xor
lock
cmp
aad
repnz
xorl
and
outsb
mov
mov
int
and
jp
mov
sbb
ds
add
push
dec
mov
shrb
cmp
lods
mov
cmp
outsb
shrb
shl
cmp
push
inc
pop
push
xor
jmp
cmp
push
out
mov
mov
cmp
add
pop
insl
shl
inc
sbb
in
xor
lcall
orb
fdivrp
cs
pop
xchg
jg
and
mov
add
sarb
data16
mov
int
and
ret
inc
lods
pop
loop
cwtl
or
add
mov
dec
inc
int3
sbb
mov
push
test
mov
dec
cmpsl
lret
shlb
xor
rorb
jg
dec
mov
divl
xor
int3
mov
mov
fwait
aad
incl
cmpsl
jno
cmp
dec
add
or
dec
xor
fdivs
sub
jl
cld
jno
xor
sbb
mov
rcll
xor
or
mov
cmpsl
gs
dec
mov
push
or
ljmp
inc
les
lock
or
cmpsb
xor
cmpsl
xchg
int3
or
inc
xor
loope
sbbl
sbb
cmp
lret
aaa
mov
mov
dec
mov
cmp
lcall
sbb
or
or
jp
fcmovnbe
ret
xorl
pslld
push
adc
xor
outsl
movsl
adc
xchg
mov
mov
into
cmp
and
in
lret
in
cs
in
in
jge
push
leave
inc
ds
fldl
scas
mov
popa
mov
imul
pop
sti
sub
cmp
xchg
imul
or
and
jg
mov
data16
subb
push
testb
hlt
popa
insl
addl
or
sbb
shrl
mov
cmpsl
jp
ret
ucomiss
and
pop
loope
testl
sahf
inc
mov
mov
jnp
adcl
in
mov
inc
dec
subl
insb
cmp
push
and
nop
push
push
push
xchg
mov
ljmp
push
loop
lock
bound
std
ficoml
inc
fisubl
sbbl
mov
std
lds
push
mov
push
cmp
xchg
push
xchg
mov
popa
or
bound
movsl
xchg
xor
pop
nop
jns
pop
movsb
sub
repz
test
lods
jae
outsb
pusha
pop
lahf
push
mov
scas
pop
inc
mov
dec
dec
lahf
in
loope
inc
lds
push
lcall
outsl
or
inc
mov
or
push
jb
fs
insl
fiadds
lock
fwait
push
or
cwtl
jp
cmpl
outsl
pop
mov
scas
int3
push
jb
cmp
cmp
or
mov
push
lret
cli
cltd
das
inc
mov
sbb
sub
test
arpl
pusha
xchg
dec
xor
and
stos
test
sub
and
out
mov
aad
mov
xchg
pop
fistpll
aaa
insl
jne
jmp
lea
adc
pop
push
pop
mov
sbb
imul
cltd
xchg
add
icebp
xor
inc
xor
mov
add
fldenv
dec
sarb
sub
mov
sarl
adc
je
jecxz
xchg
dec
pushf
and
jb
les
pusha
xchg
pushf
fwait
js
in
into
aam
lds
addr16
test
ss
jp
pop
dec
fistps
cmpl
in
add
mov
cld
aaa
imul
inc
mov
std
and
xor
pop
aam
lcall
jae
into
xchg
pop
and
fisttpll
jge
inc
jl
lea
imul
mov
call
iret
insl
xchg
jns
jns
xor
arpl
pop
in
in
ja
mov
mov
movsb
jb
cmp
adc
sbb
dec
and
fwait
mov
sti
dec
sub
nop
cmpsb
rcrl
in
dec
cs
outsl
pop
fcomp
negb
inc
jne
test
int3
js
testb
sbb
mov
clc
jge
scas
dec
adc
ja
dec
and
xor
mov
notl
in
js
fsubs
addl
jo
pusha
rcll
clc
adc
int3
xor
xor
or
insl
add
jnp
cli
jae
subb
fcoml
nop
fisubrs
lods
insb
mov
cmp
cmp
mov
adc
xor
jmp
jmp
sub
jbe
mov
sbb
inc
cwtl
stos
sbb
mov
dec
sbb
or
outsl
push
das
je
sbbb
sbbl
loope
push
push
test
adc
mov
push
mov
jae
gs
inc
testl
cltd
jo
jle
rcrb
mov
cmp
mov
es
loope
fadds
push
lods
mov
cltd
mov
aas
sbb
xchg
fwait
mov
iret
xchg
sub
mov
scas
stos
or
pusha
and
in
pop
add
xchg
aad
stos
outsl
fidivrs
outsb
loop
and
outsb
or
jb
add
lock
notb
add
popa
popa
or
push
inc
scas
enter
xor
lods
stos
sbb
out
xchg
ja
test
repnz
mov
in
insl
aad
xchg
mov
insb
outsb
mov
leave
push
out
sahf
das
dec
rcr
adc
jns
add
shrl
adc
jp
int
cltd
test
subl
in
add
dec
cmc
out
out
aaa
xchg
andl
notb
sbb
cmpsl
lock
sar
leave
movsb
lods
lcall
pop
or
dec
dec
jecxz
dec
flds
testl
cmp
push
jns
adc
test
inc
mov
lods
shrl
dec
movsb
sbb
xchg
push
dec
inc
test
hlt
add
lods
aas
jbe
jae
andl
sbb
lahf
bound
test
mov
in
lcall
leave
int3
lock
or
sub
add
out
pop
mov
int3
pop
call
testb
sub
xor
pushf
sbb
add
pop
bound
rcll
divl
addb
fsubp
cmp
cmpsl
outsl
adc
xchg
in
stos
fisttps
lock
shrl
fsts
pop
mov
rclb
popa
and
jbe
or
jne
loop
mov
sti
adc
daa
mov
repnz
xlat
push
lret
iret
xchg
jecxz
mov
scas
test
mov
xchg
fwait
outsb
in
aaa
fsubp
call
rorb
fmull
push
or
inc
movsl
shlb
mov
inc
jp
mov
or
data16
popa
lods
or
push
cmp
repz
pop
inc
push
subl
cmpsl
xor
stc
xchg
test
xchg
sbb
sbbl
aaa
out
sub
inc
js
adc
cli
and
ret
jp
scas
mov
cli
in
adc
push
sbb
aam
scas
aaa
rcrl
fcmove
addr16
add
fmull
push
lcall
movsl
push
daa
mov
mov
insb
testl
jle
xchg
mov
xor
loop
xlat
movsl
out
ja
mov
sub
add
mov
xor
jo
mov
std
inc
mov
out
xchg
mov
add
outsl
mov
add
imul
pop
es
lods
fwait
sbb
xor
loopne
mov
mov
add
mov
call
sbb
sub
and
jg
loopne
push
mov
mov
add
or
xchg
pop
inc
leave
repz
test
paddw
loopne
lcall
test
leave
jl
cmpsl
mov
jg
test
fbld
mov
push
cmpsl
nop
xlat
es
add
inc
jge
lret
bound
dec
sbb
adc
lods
mov
mov
int
jge
or
int
and
enter
lods
ss
imul
mov
dec
negl
ret
testb
movsb
pop
lods
sbb
push
arpl
and
cmp
sbb
fidivrs
push
jmp
cmp
es
add
xor
movq
and
ja
mov
lret
mov
jmp
xchg
icebp
lods
cmp
pop
mov
popa
std
sbb
adc
sahf
lods
subl
push
es
jmp
cmp
mov
dec
outsl
or
mov
pushl
fdivr
pop
aaa
sbb
sbb
loope
mov
jmp
rclb
sbb
inc
loope
stos
insb
fisubrl
das
push
sub
fisttpll
inc
cmp
xor
jbe
cmovnp
in
mov
jno
xchg
jl
add
and
call
fcomp
in
mov
fsubrs
pop
mov
fcmove
arpl
sub
and
in
lock
mov
add
push
push
adc
mov
in
adc
xchg
add
inc
adc
mov
iret
movsl
fsubl
sbb
fisttps
inc
int
in
xor
in
jb
or
cmp
mov
rorl
mov
cltd
mov
loopne
test
mov
insl
pop
stc
insb
pop
mov
mov
and
in
cmc
sarl
push
dec
add
clc
pop
hlt
sbb
cli
jb
inc
or
mov
aaa
sub
push
js
pop
test
iret
xchg
inc
notb
clc
call
mov
push
mov
fcompl
add
xor
movsb
cmp
sbb
stc
repz
cmc
aaa
sub
repz
mov
enter
xor
xchg
adc
adc
push
in
xchg
loopne
add
clc
fdivp
ds
dec
test
mov
dec
addl
cmp
sbb
sbb
cwtl
pop
push
cli
push
jbe
lret
pop
scas
stos
sub
test
les
pop
hlt
mov
insl
lahf
push
inc
sub
mov
jmp
nop
jg
lret
jnp
arpl
and
dec
mov
pop
in
inc
push
aad
stos
pop
mov
jb
dec
adc
shlb
jmp
adc
cli
push
aaa
mov
jo
mov
dec
mov
clc
cwtl
fs
sbb
data16
notb
movsl
dec
jne
push
js
imul
cld
test
sub
ljmp
xor
mov
dec
xchg
or
push
shlb
xchg
mov
mov
cmp
out
push
flds
dec
mov
mov
sbb
xchg
mov
repz
pushf
repnz
push
or
lcall
cmp
xchg
ret
inc
sahf
jg
jns
aaa
xchg
dec
loope
cmp
test
stos
repz
test
cmpsl
mov
lds
or
add
outsb
push
out
or
loopne
fs
adc
mov
aas
lods
mov
cmp
xor
dec
lahf
movsb
push
xchg
pop
mov
out
and
hlt
jmp
dec
into
in
and
les
xor
sahf
mov
mov
or
outsb
fstpl
movsb
cmpsb
mov
movl
pop
in
sbb
iret
xchg
xlat
mov
adc
mov
in
in
addr16
into
repnz
jmp
popf
std
out
mov
sar
ss
in
push
cmp
insl
sub
mov
test
sbbl
aad
lods
mov
test
xlat
sub
or
mov
xlat
pop
call
sbb
sub
mov
mov
je
pop
cmp
jns
lods
lret
test
mov
cmp
xchg
pop
out
outsl
and
add
orb
sarl
mov
rorl
rclb
jno
and
push
or
lock
xchg
enter
js
push
mov
add
jmp
and
xchg
subl
testl
cs
push
cmp
lds
sub
and
int
mul
popf
fadd
pushf
shll
cmp
call
add
sub
dec
aaa
lds
cmpsb
int
stos
movsl
jge
ret
data16
add
cld
sbb
into
lahf
ljmp
imul
test
test
push
inc
ljmp
push
fwait
xor
xchg
mov
cs
jnp
dec
xlat
js
sarb
push
or
sub
testb
gs
aad
das
aas
popf
pop
inc
jnp
jb
sbb
sbb
adc
sub
add
xlat
sub
daa
aad
fwait
pop
cmp
push
insb
mov
mov
pop
repz
test
ficoms
shrb
pop
pop
pop
stos
ds
sub
lock
test
mov
mov
lds
mov
dec
mov
add
dec
gs
mov
lret
jbe
xor
or
and
push
shl
pushf
jle
dec
popa
dec
cmp
mov
adc
mov
push
xor
xor
xchg
bound
test
je
inc
sub
cmp
mov
mov
cmp
dec
das
xor
push
fcomi
sbb
push
and
nop
jno
pusha
jmp
sbb
jne
add
mov
inc
xorb
repnz
lds
mov
push
wrmsr
ret
and
iret
jae
mov
jecxz
mov
mov
jne
je
loope
dec
xadd
outsl
pop
sbb
push
add
clc
lret
jmp
cltd
pop
jge
js
popf
ret
pop
sbb
add
fildll
lahf
test
enter
in
das
hlt
movsl
adc
rcll
and
pop
xor
sbb
in
insl
or
sub
jge
js
mov
call
dec
inc
mov
pop
mov
test
aam
inc
scas
push
xor
pop
inc
repnz
fwait
test
pop
cli
mov
mov
lcall
rcr
daa
out
and
shl
rolb
roll
lds
push
jns
clc
clc
inc
movsl
movsb
stc
cmp
pop
cmpsl
xchg
xchg
jmp
out
xchg
outsb
shlb
xor
xor
outsl
cmp
xchg
xchg
or
addb
out
mov
aam
push
fstpt
bound
adc
mov
xchg
lret
xchg
in
stos
xchg
mov
add
sub
fs
pushf
lods
inc
and
fisubs
mov
dec
jl
out
clc
sbb
pop
rcr
lahf
mov
test
dec
mov
xor
int
fdivl
arpl
or
mov
lcall
mov
shll
push
fisubs
repz
cli
or
bound
rolb
inc
mov
jg
cmp
test
jno
adc
sbb
jl
stos
mov
xchg
movl
add
movsb
push
mov
push
cmovno
hlt
adc
add
je
out
jge
out
dec
dec
dec
nop
in
inc
mov
mov
enter
loopne
inc
insl
cmp
stc
lods
je
loop
cmpsl
jno
add
mov
jb
mov
mov
cmpsl
loopne
mov
mov
jo
mov
cmpl
lock
movsl
push
xchg
imul
int3
ret
cmp
push
fwait
sbb
mov
cld
gs
fs
mov
in
push
fcoml
fisttps
jmp
mov
mov
add
daa
hlt
jo
cmp
fiaddl
mov
mov
dec
fucomip
mov
push
sbb
push
lock
mov
ret
loop
mov
test
mov
je
jge
sahf
movb
hlt
push
mov
jmpw
sub
int
movsb
xchg
or
xchg
cmp
movsb
lret
push
sti
sub
fwait
jle
inc
stos
mov
xor
pop
jbe
sbb
out
cs
scas
movsb
stc
fmuls
mov
js
dec
jns
or
sbb
sub
cmp
leave
call
stc
fmuls
mov
js
dec
jns
or
sbb
sub
cmp
leave
call
stc
fcomps
test
adc
mov
js
dec
jns
or
or
sub
rcrl
fucomp
test
mov
mov
cmp
ret
dec
jns
jle
xchg
test
cwtl
test
mov
mov
or
sbb
sub
cmp
pop
pop
push
mov
mov
call
or
sbb
sub
cmp
pop
pop
push
mov
mov
call
or
cmp
pop
pop
dec
sbb
movntps
adc
cld
sti
stc
shrl
call
jae
shr
insl
and
aas
inc
lds
aas
daa
push
hlt
inc
cmp
adc
adc
mov
xchg
out
cmp
pop
xchg
ds
repnz
ret
mov
and
cmpsl
lods
mov
or
push
jmp
js
mov
mov
out
mov
cmp
clc
notl
fcomps
dec
pop
cmpsb
nop
jns
cld
sbb
xor
adc
jae
or
adc
mov
sbb
fcomps
push
pusha
adc
jecxz
push
adc
mov
fcom
push
sub
scas
push
cwtl
cwtl
test
mov
fsubr
call
sbb
sub
cmp
dec
dec
pop
pop
push
mov
fldz
test
mov
xchg
jge
pop
dec
jge
into
or
cmp
in
in
std
lret
int
mov
lods
cmpl
pop
mov
adc
out
int3
cwtl
shr
fcmovu
fisttpll
call
sbb
sub
cmp
dec
dec
pop
pop
push
mov
mov
call
or
sbb
sub
cmp
pop
pop
push
mov
lock
mov
addr16
pop
push
imul
sub
mov
pop
icebp
mov
jmp
out
clc
out
push
fwait
or
mov
lret
jle
dec
sahf
mov
cs
add
jae
mov
inc
push
mov
out
aas
ja
test
push
test
inc
sub
mov
insb
add
fucom
push
inc
cmc
rcll
fcmovnb
jns
iret
and
cwtl
mov
fidivl
loopne
stc
adc
cs
mov
movsl
inc
testb
mov
pop
int
push
lret
pop
andl
push
clc
jnp
cmp
rolb
push
jecxz
fidivl
test
sti
lock
loop
imul
popf
in
add
iret
or
add
and
add
cltd
int
imul
adc
inc
xchg
mov
inc
out
or
mov
cld
cmp
add
es
psrlq
mov
pusha
movl
mov
into
fidivl
push
inc
dec
sahf
mov
jne
aam
fisttpll
cltd
xorb
call
mov
movsb
mov
lock
add
dec
mov
inc
jbe
lret
mov
rorl
inc
sbb
pop
insl
xor
repnz
jb
push
mov
push
js
or
pop
out
das
cmp
aad
ds
test
addl
dec
mov
or
push
pop
fsubl
test
dec
or
push
add
arpl
and
jle
and
mov
in
add
mov
cmpsb
add
cmp
push
test
mov
adc
cmpsb
jne
imul
or
jno
mov
mov
call
xor
cmpsb
adc
loopne
lock
push
test
sub
aad
arpl
adc
jnp
fcmovbe
cltd
insb
mov
int3
jg
out
arpl
repnz
lcall
rcrl
pop
aad
pop
adc
pop
adc
stos
add
scas
mov
clc
mov
stos
jae
andl
fiaddl
gs
out
in
vsubps
pop
loope
cmpsb
jp
roll
cmp
adc
pop
and
ror
pop
xchg
lock
nop
rclb
xchg
xchg
sahf
repnz
repnz
push
add
loop
jno
mov
adcl
call
jmp
xchg
popaw
lcall
insl
in
cmp
aaa
mov
roll
lret
pop
sub
pop
je
add
add
pop
lcall
in
ret
fildl
push
sbb
outsl
lea
shl
pop
ret
inc
fcoms
pop
lds
push
in
or
cld
xchg
lds
dec
add
mov
jp
or
pop
xchg
xor
mov
test
jp
int
cmp
xor
jle
mov
mov
xlat
add
inc
jno
add
jno
mov
icebp
stos
mov
nop
dec
std
in
jb
or
pop
sub
push
dec
mov
sbb
sbb
push
ljmp
loopne
pop
cli
jae
mov
sarl
arpl
dec
fsubl
cmpsb
xchg
insl
aaa
mov
pop
inc
fcomi
inc
jge
cmpsb
loop
adc
jno
mov
pop
jbe
jecxz
mov
xchg
ljmp
in
out
fwait
loopne
das
and
mov
pop
dec
fcmovne
jp
fnsave
test
xchg
addr16
mov
outsb
loope
movsb
push
push
test
pop
jne
pushf
dec
mov
and
orb
jecxz
mov
insl
outsb
inc
stos
jns
cmc
mov
in
in
iret
jnp
outsb
mov
leave
pop
lret
add
mov
mov
loope
daa
stos
and
mov
xor
pop
shrl
mov
mov
dec
mov
xor
aaa
stc
sbb
mov
lahf
aam
sub
mov
add
notl
fs
scas
mov
js
mov
jl
jne
fsub
adc
add
lock
xor
rcr
pop
mov
les
lock
subb
mov
adc
xor
cs
or
int
pop
iret
and
daa
in
mov
ret
movsb
inc
ja
rcll
stc
scas
mov
popa
ret
sub
inc
pop
imul
mov
adc
adc
xchg
or
das
subl
movsl
arpl
add
jae
hlt
cmp
jecxz
push
sub
pusha
inc
xchg
pop
xor
ret
jb
dec
loop
mov
adc
jns
push
dec
mov
fldcw
sbbl
push
adc
push
xchg
arpl
sbb
dec
jle
inc
mov
cli
adc
mov
adc
rclb
jmp
ja
ret
test
test
sub
add
jb
call
imul
inc
shl
scas
mov
pop
cmc
sbb
es
bound
or
in
fmuls
orl
aad
cmpsl
adc
mov
pop
xchg
mov
jp
pop
add
and
sub
push
mov
cmp
push
add
jnp
sbb
inc
test
or
insl
mov
pop
ret
dec
test
imul
stos
push
xchg
xchg
scas
xchg
dec
leave
lcall
aad
mov
sbb
cld
xor
cwtd
jno
sub
xchg
fildll
jmp
or
cltd
mov
addl
shll
js
xchg
xchg
adc
addr16
xchg
mov
fnstcw
xchg
sbb
push
cmpl
fstpl
add
jne
aaa
mov
rclb
mov
jne
cmp
or
inc
xchg
idivb
jnp
dec
sub
mov
mov
push
inc
out
aaa
add
sbb
dec
adc
shll
cmp
mov
mov
sti
mov
inc
addl
xor
cmp
add
cmp
mov
or
adc
push
mov
push
in
cmc
test
loopne
mov
movsl
push
mov
pop
test
decb
xchg
insl
cmovne
enter
pop
sub
mulb
fidivs
adc
and
jnp
jl
mov
gs
test
pop
adc
cmp
clc
and
xor
mov
xchg
hlt
cmp
push
or
incb
stos
repz
mov
dec
adc
dec
in
jb
xor
jecxz
sbb
inc
ljmp
xchg
dec
push
shlb
enter
movsl
test
inc
lds
es
mov
lea
and
test
add
out
jne
xor
jl
push
ficoms
pop
or
dec
mov
jbe
fwait
inc
sti
adc
aam
les
mull
sar
push
inc
jbe
loope
sti
test
lds
arpl
inc
sbb
cmp
sbb
insl
arpl
mov
jno
dec
push
push
adc
lods
insb
cs
fdivrs
xchg
xor
int3
mov
jecxz
movsl
push
test
jno
and
mov
cmc
or
sub
lahf
pop
and
mov
push
pop
mov
inc
mov
dec
sti
push
hlt
and
xchg
movsb
ret
cmp
scas
js
pop
lds
dec
push
js
xor
shrw
lods
push
pop
fdivrs
sub
in
enter
in
sti
data16
jp
push
imul
xchg
fcomps
into
std
fldcw
inc
lret
xchg
repz
pop
cli
dec
js
pop
test
cmp
jns
int3
shrb
stos
mov
xchg
inc
popa
mov
mov
cmp
push
dec
adc
pushf
xchg
mov
mov
shl
mov
cmp
outsl
pmaxub
mov
xor
fs
xorb
and
jns
pop
test
pop
out
out
rcll
icebp
stos
int
mov
xchg
popf
loop
lret
xchg
std
jecxz
xor
gs
das
dec
rolb
pop
in
aas
fwait
loopne
jg
aam
out
fs
dec
pusha
mov
filds
inc
mov
stos
mov
push
add
outsb
nop
popf
cmp
or
sub
push
icebp
aaa
clc
in
mov
adc
or
or
or
xor
pop
cwtl
mov
ljmp
jno
inc
mov
mov
lcall
xor
ja
sbb
mov
jl
jmp
xor
mov
gs
stos
lahf
xor
scas
pop
jl
xchg
fisubrs
sbb
pop
ss
xor
outsb
lret
adc
orl
lret
enter
or
fistpll
loopne
push
sub
enter
insl
push
subl
repz
jmp
fninit
mov
adc
movsl
mov
add
cltd
es
stc
jb
xlat
mov
out
jns
push
adc
lahf
pop
xchg
out
fwait
pop
nop
pop
or
js
mov
pushf
sbb
pop
sub
mov
dec
dec
jl
insb
pop
mulb
addr16
shrl
lcall
aaa
jne
packssdw
push
sbb
inc
or
cmp
sub
subl
lods
mov
orl
pop
add
insl
shrl
ficompl
cs
mov
jmp
xchg
cmp
lods
pop
push
sub
xor
loop
lods
lret
popa
mov
ret
fs
and
sbb
std
in
testb
subl
lret
subb
les
xchg
mov
addl
fdivp
mov
rorb
mov
push
ret
orb
add
xchg
add
lods
mov
sub
out
scas
pop
fbld
test
sub
call
pop
lahf
sbb
stos
or
push
lahf
inc
pop
xor
out
push
jg
mov
nop
fsubrp
rclb
push
cld
mov
mov
test
dec
ss
jns
js
push
fsub
xor
xor
jnp
mov
aaa
test
scas
in
or
shlb
lret
mov
addr16
int3
inc
dec
sub
inc
mov
jnp
in
pop
and
xor
or
fstsw
outsb
lcall
mov
sbb
add
int3
scas
enter
add
dec
icebp
cmpsl
sub
fdivl
add
insl
lods
mov
xchg
sahf
push
inc
mov
pop
pop
xchg
aam
mov
cmpsl
or
outsb
cmp
ljmp
push
imul
cmp
scas
std
push
adc
pop
xor
ret
lock
cwtl
aam
hlt
les
int
add
xchg
stos
lcall
stos
mov
xchg
jle
xchg
sti
test
push
mov
scas
daa
push
leave
dec
cltd
pop
imul
xchg
sub
xchg
adc
sub
lahf
mov
dec
dec
pusha
dec
ja
dec
mov
iret
push
aad
dec
push
gs
lcall
push
fs
pop
in
leave
lock
clc
outsl
fisttpll
cs
adc
fcomps
inc
fs
push
xchg
push
or
and
sbb
mov
decl
ret
out
inc
inc
int3
test
jg
pop
dec
outsl
push
mov
inc
xor
mov
cmpsl
xor
mov
mov
decl
mov
test
pop
add
stos
adc
lahf
popf
xor
mov
cmp
jmp
imul
inc
sbb
lock
pop
xchg
out
pop
clc
xchg
add
add
aas
and
mov
pop
mov
cs
fwait
xor
mov
insl
aam
push
or
test
mov
pop
xchg
mov
pop
lret
push
lock
fidivs
add
fwait
mov
push
xor
cmp
cmpsb
int
jnp
jb
or
push
fcmovu
test
sahf
inc
arpl
nop
mov
cli
or
pushf
sbb
and
stc
in
mulb
scas
mov
xchg
in
or
jge
pop
in
sbb
aad
movsl
fsub
mov
push
pop
mov
push
sti
fstps
clc
or
and
xchg
and
inc
mov
and
std
test
sbb
or
movsb
incl
fimuls
push
cmc
or
xor
add
or
mov
loope
cld
mov
orl
and
cmp
mov
jb
lret
adc
notl
arpl
cmp
ret
daa
pushf
jns
insb
fwait
sbb
ret
stos
xchg
xchg
nop
movsl
imul
rcrb
enter
dec
ret
mov
cli
nop
sbb
movsl
cmc
push
loopne
adc
jb
outsb
jmp
std
xchg
addr16
in
into
subl
dec
mul
cld
and
pop
cmc
out
push
mov
mov
cmc
xchg
lds
cmp
lcall
jnp
inc
xchg
fisttpll
cwtl
xor
jge
mov
das
outsb
addr16
push
imul
mov
cwtl
inc
mov
xchg
inc
sbb
cmp
and
sub
jmp
in
jns
push
sbb
outsl
test
mov
xor
lcall
mov
xchg
test
outsb
mov
mov
enter
inc
sbb
xor
notb
jns
sub
loope
pusha
rcll
movl
cmp
mov
cmp
andb
insl
movsl
add
xor
xchg
clc
out
insb
xchg
mov
cmpsb
hlt
mov
shlb
sub
les
rorl
lgs
sbb
lock
sarb
xor
decl
xor
push
mov
xor
pop
lret
cmp
cmp
inc
test
test
push
adc
pop
std
lock
scas
sub
push
dec
mov
mov
mov
inc
sbb
jno
jle
mov
in
in
push
test
cmp
mov
lret
pop
push
fwait
mov
iret
pop
push
out
mov
mov
test
in
cltd
push
mov
sub
inc
xchg
xor
cmp
sbb
out
repnz
outsl
adc
pusha
mov
mov
popf
sub
jmp
lods
mov
loope
pop
orb
pop
jl
xor
inc
mov
dec
mov
lods
mov
dec
xlat
xor
jbe
dec
sbb
pop
arpl
or
add
push
stc
jp
stos
js
mov
jmp
dec
loop
cmp
call
mov
repz
daa
mov
test
sub
or
push
lods
mov
icebp
ret
mov
je
mov
scas
das
in
test
jo
dec
adc
and
outsl
popa
mov
push
mov
jo
or
or
xchg
rclb
mov
hlt
aas
mov
stc
shll
int3
cmpsl
jne
mov
mov
push
xchg
adc
in
arpl
out
mov
xor
sub
lods
sub
mov
jg
push
stos
jns
or
inc
ficomps
cmp
or
mov
push
jmp
int3
dec
push
idivb
loop
call
inc
xor
push
dec
push
jp
dec
lcall
ss
aas
push
dec
ret
pop
xchg
mov
adc
add
mov
push
xor
pop
repz
fidivl
les
jle
jno
js
lods
fiaddl
xor
repnz
stos
sub
lahf
aaa
inc
cld
jno
into
sub
push
xchg
mov
xchg
push
push
mov
or
pop
push
cli
sti
imul
jno
and
jo
outsb
xor
fsubp
dec
cld
mov
dec
jl
sbb
sub
fidivrl
push
decl
push
outsl
loopne
cmp
pop
fsts
iret
pop
test
insl
ds
jbe
mov
inc
clc
pop
adcl
cmpsb
fs
ret
xchg
in
add
push
pop
popa
push
loop
lock
orb
jo
pop
cmpsb
dec
and
push
nop
mov
ret
lods
push
sub
inc
scas
aad
jbe
loop
rorb
xchg
or
xchg
sbb
fisttps
out
arpl
push
push
mov
and
adc
fmuls
imul
adc
push
sub
inc
outsl
cmpl
xor
arpl
xchg
loope
nop
ljmp
insb
icebp
push
inc
pusha
mov
pop
dec
push
jg
divb
pop
cmp
mov
ret
test
inc
xor
xor
pop
fmull
mov
les
aam
push
sti
data16
ret
sbb
and
xchg
mov
iret
push
sub
jo
sbb
cmpb
pop
sbb
mov
cld
adcl
cmpsb
fucomip
sub
cli
dec
pmulhw
lahf
xor
add
in
loopne
pop
jbe
xchg
lret
cmpsl
add
fucom
data16
mov
sbb
fs
mov
andb
mov
out
in
pushf
pop
outsl
xchg
xchg
inc
adc
test
into
fwait
scas
jmp
mov
enter
fwait
sti
repz
adc
mov
addr16
or
push
fucomp
cwtl
xchg
sbb
pop
inc
dec
out
mull
push
jl
bound
aam
cld
loopne
pop
enter
jmp
fwait
xor
cmpsb
cltd
mov
pop
lods
outsb
pop
test
push
outsb
jno
jmp
jl
and
add
mov
sbb
inc
xchg
dec
mov
push
cmp
lea
sahf
nop
dec
int3
fadd
and
push
enter
arpl
test
mov
cmp
fidivrs
mov
test
in
mov
and
jb
cmpsb
cltd
sbb
inc
out
fwait
mov
das
leave
mov
lds
pop
daa
pop
xchg
ljmp
pop
cltd
pusha
and
aam
mov
mov
xchg
mov
and
jl
lahf
idivb
xchg
mov
mov
inc
add
cmp
andl
mov
xor
dec
fidivrl
fidivl
daa
mov
push
ljmp
sub
stc
jle
and
xor
cmp
and
jno
cmc
sbb
add
ror
dec
add
push
call
xchg
sub
lods
in
push
test
into
xchg
addl
sbb
stos
cmp
imul
out
pushf
and
xchg
inc
popf
aaa
dec
push
sub
inc
and
mov
scas
and
push
shlb
push
mov
int3
or
adcb
jg
xchg
sub
mov
mov
popf
icebp
popf
jmp
shrb
sub
movsl
jmp
mov
adcl
pop
je
leave
jmp
pop
cmp
sub
xchg
jge
out
mov
xor
push
adc
shll
mov
push
dec
stos
and
adc
popf
adc
out
imul
add
jg
pop
sbb
outsb
lods
add
nop
sbb
out
jbe
add
scas
xor
cmp
or
inc
adc
jae
jg
xchg
xchg
shll
loop
stos
inc
mov
or
mov
mov
ret
mov
pop
or
sub
fstps
pop
rorl
in
fstpt
inc
ss
fwait
out
inc
adc
outsb
cmc
out
or
shrb
mov
cmp
rcll
int3
adc
dec
or
mov
ror
scas
hlt
in
rcrl
in
and
and
cmc
xor
pop
mov
test
movsb
cld
mov
movsb
cvtdq2ps
pop
fs
ret
aaa
leave
int3
add
mov
es
mov
sub
jo
enter
adc
jg
hlt
lret
mov
mov
dec
ja
mov
xchg
clc
adcl
cltd
insl
pop
mov
mov
clc
gs
xchg
mov
lret
mov
lret
add
push
mov
fucomi
xchg
push
adc
pop
xchg
xor
or
das
mov
movsb
jns
out
cmpsb
aas
cwtl
push
idivl
stos
loopne
cltd
mov
dec
ficoml
or
stos
add
aad
push
rclb
and
mov
lods
lcall
xor
mov
loopne
jo
adc
mov
aad
cmc
pop
sub
gs
shll
inc
xor
xchg
inc
jb
adc
sbb
sbb
or
movsl
clc
ficoml
mov
mov
lods
pop
mov
rcll
fmuls
das
dec
or
pop
xchg
pop
lahf
and
lods
sahf
dec
arpl
cmpsb
lods
lret
and
push
rcrl
sub
pop
into
pop
mov
push
pop
imul
sub
cld
ds
loopne
sbb
xchg
and
aad
lret
data16
dec
aaa
jecxz
inc
sbb
sub
sbb
ret
inc
pop
leave
in
test
gs
cmpb
movsb
jno
jnp
sub
xchg
das
mov
mov
cwtl
and
ja
test
jno
aad
jmp
jle
idiv
xor
inc
imul
pusha
push
into
xor
enter
mov
jno
jns
lods
jb
sti
movsl
mov
mov
xchg
dec
in
cltd
and
into
insl
xor
ret
xchg
test
mov
call
or
sbb
sub
cmp
pop
pop
push
mov
mov
call
or
sbb
sub
cmp
pop
pop
push
mov
mov
call
or
sbb
sub
cmp
pop
pop
imul
cwtl
test
mov
fsubrs
js
testl
cmp
rcl
nop
xchg
addb
jae
arpl
xor
insl
cmc
jl
and
ja
inc
jecxz
loope
xchg
xor
mov
jae
arpl
xor
ret
inc
rcrl
daa
lock
push
pop
mov
mov
fildll
jp
or
cmp
push
stc
sbb
pop
in
pop
in
mov
movl
mov
inc
lods
push
loop
pop
mov
testl
mov
pushw
or
mov
cwtl
mov
add
pop
sub
push
daa
pop
mov
out
sbb
pop
fs
xor
or
push
iret
xor
add
fisubl
or
pop
dec
pop
mov
push
jae
push
pop
xor
fsubr
xorl
adc
jl
cmp
leave
mov
jp
dec
mov
sbbl
dec
arpl
addr16
mov
inc
mov
jecxz
sti
aaa
push
clc
mov
pop
subps
mov
pop
sub
scas
cwtl
sar
xlat
cmp
pop
repz
shlb
pop
mov
push
out
push
arpl
jns
adc
cmp
outsl
fistpl
dec
cli
aas
mov
xchg
sbb
ss
inc
mov
inc
shrl
pop
xchg
dec
addr16
xor
mov
into
mov
xchg
inc
test
cmpsl
lretw
pusha
mov
xchg
dec
and
adc
daa
loope
in
jno
jae
adcb
es
adc
add
shll
inc
repz
jecxz
xchg
aaa
addl
pop
mov
jae
arpl
xor
ret
inc
repz
jecxz
xchg
aaa
addl
pop
mov
js
movsb
jo
cs
test
aaa
test
jns
out
fsubr
arpl
ror
cli
test
addr16
outsb
sub
sbb
mov
mov
cmp
rcl
xor
outsl
xor
or
cltd
dec
pop
dec
fnstsw
scas
insb
jl
xchg
subl
fidivl
sbb
test
rcrb
outsl
xchg
es
sbb
inc
stos
mov
ficompl
repz
jmp
sahf
mov
add
pop
jne
aas
push
xchg
xchg
lds
dec
bound
and
mov
add
ss
out
test
or
adc
lret
push
pusha
pop
inc
and
outsb
mov
push
call
btc
ja
sbb
das
xor
mov
push
xor
mov
or
and
jo
cmp
mov
jle
sbb
test
out
and
imul
add
ss
add
xchg
daa
mov
pop
fwait
push
les
adc
in
sub
sarb
pushf
adc
fmuls
pop
xor
push
push
xor
and
mov
lea
jb
pop
add
sub
dec
insl
movsl
dec
sbb
xor
mov
out
jl
and
push
xchg
mov
cmp
adc
sti
jae
and
test
xor
jp
lods
movsb
in
mov
mov
ds
dec
fadd
and
repnz
test
outsb
mov
cmc
pop
mov
int
push
cmp
or
add
push
xchg
pop
es
mov
test
dec
mov
dec
rcrb
push
popa
fstl
cmp
andb
icebp
mov
cmp
and
cmpsl
pop
clc
sub
lods
xor
mov
fidivrs
scas
shr
les
dec
jne
cld
movsb
xchg
es
jl
mov
pushf
mov
pop
dec
punpckhdq
jmp
fisttps
inc
jns
or
dec
pop
hlt
scas
inc
xchg
dec
xor
cmc
mov
aad
push
in
or
and
xchg
lret
cwtl
or
jns
pop
mov
or
mov
shll
outsl
fldl
inc
pcmpeqw
mov
orb
jb
out
call
ret
dec
and
sbb
mov
das
and
cmp
cmp
lock
inc
and
or
inc
lcall
enter
inc
mov
filds
or
xchg
sbbb
loopne
xchg
fimuls
add
mov
jge
dec
push
xchg
rol
imul
pushf
pusha
mov
iret
inc
mov
cli
push
inc
pop
mov
icebp
shl
jge
fdivrs
icebp
outsb
in
xor
xor
cmp
mov
lret
add
inc
jmp
mov
fsubrp
push
fists
inc
cld
testl
lret
adcb
inc
jge
pop
jle
shll
cmpsb
enter
xlat
inc
cmp
aas
sub
stos
mov
jns
jae
in
addr16
jg
ljmp
outsl
jecxz
and
mov
jb
push
ret
rcl
pusha
out
inc
in
cmp
mov
dec
xchg
xor
add
fadds
add
xor
dec
outsl
sub
push
adc
dec
adc
test
and
arpl
push
clc
mov
xchg
lea
jne
and
inc
cli
leave
andl
inc
pop
fildl
mov
incb
dec
sub
pop
scas
repnz
lret
sub
addr16
dec
adcb
and
adc
mov
in
push
pop
jmp
inc
push
pop
jns
ret
outsb
mov
lds
inc
rcll
add
rdrand
sub
pop
add
mov
pop
pop
fsubs
loop
test
mov
inc
push
insl
mov
xor
jmp
iret
aas
mov
xor
push
xchg
fmuls
lahf
mov
and
mov
push
mov
pop
ffreep
push
jle
cld
lret
je
add
cwtl
popa
lds
scas
push
test
and
je
jmp
xchg
dec
arpl
loope
sbb
dec
aad
mov
jne
adc
adc
mov
cmp
sub
outsb
push
loope
mov
jno
dec
or
mov
pop
or
ja
test
jns
pop
mov
xlat
cmp
les
jb
xor
roll
aaa
loopne
mov
dec
int3
scas
and
stos
rclb
push
movsl
aad
xorl
cmpb
inc
cmpsl
push
xchg
push
adc
fwait
jbe
rcr
shrb
icebp
add
dec
jg
ja
mov
dec
push
fs
push
iret
mov
inc
add
cli
outsl
jbe
mov
mov
sbbl
pop
mov
mov
int3
push
iret
cmp
push
pop
inc
cs
ret
testb
and
leave
lea
mov
mov
decl
sub
adc
movsl
jl
adc
testl
inc
adc
xor
imul
xchg
and
fwait
into
pop
mov
pop
fcmovb
test
fs
shll
xchg
cmp
psrlw
call
sbb
inc
aas
jno
sahf
or
pop
loopne
and
inc
dec
jo
test
addr16
mov
jns
jo
dec
push
mov
arpl
mov
mov
jb
daa
fistl
imul
add
cli
rclb
dec
push
nop
mov
adc
pop
repz
xchg
fs
sub
pop
scas
test
pop
mov
sar
push
cmpsb
xchg
ret
sub
js
pop
push
xor
stos
jle
mov
xchg
dec
scas
and
mov
fisttpll
lcall
mov
rclb
jo
pusha
bound
or
mov
mov
aam
dec
dec
or
jmp
cmp
cmp
add
ja
sub
inc
out
js
mov
mov
jg
inc
andl
jo
popa
cmp
fdivl
pop
push
pop
mov
incl
cmp
mov
mov
into
jle
loop
pop
mov
int
add
cld
shrb
es
or
push
lcall
push
mov
mov
shll
call
lds
jmp
fistpll
add
fisubl
and
xchg
stos
enter
cmp
cmpsl
or
out
repnz
nop
jg
lahf
les
jmp
sub
shrb
sub
aad
out
mov
mov
psrlw
mov
cmp
sub
push
xchg
movsb
pop
ret
cmpl
jns
inc
cwtl
inc
sbb
ja
sub
mov
and
in
les
pop
mov
sub
mov
xor
adc
outsl
inc
std
cmp
test
lds
jmp
test
fstpt
dec
mov
stc
sti
mov
inc
dec
popf
sub
pop
test
jns
mov
jge
sarb
pop
mov
stos
lret
sbb
sarl
hlt
stos
adc
jge
mov
pcmpeqd
add
mov
xchg
popf
pop
das
mov
aam
inc
sbb
scas
pop
loopne
mov
mov
add
mov
push
pop
dec
repz
loopne
mov
mov
repz
aam
stos
jno
jae
cmc
mov
outsl
aam
repnz
and
add
out
mov
pop
push
mov
jmp
inc
lea
mov
int
add
and
rcrl
fwait
and
shrl
adc
mov
je
push
pop
xor
outsl
imul
out
mov
clc
out
cltd
adc
aaa
pop
dec
dec
xor
pop
adc
in
add
fidivrs
scas
sub
inc
jg
sti
ja
gs
inc
out
pop
or
das
shll
xor
or
rorl
mov
push
inc
mov
mov
push
daa
mov
ss
in
mov
xor
loope
lods
aam
popf
repz
sub
mov
imul
subl
or
mov
test
int
orb
sub
xor
repz
dec
mov
cld
fstl
sub
aad
mov
xchg
fcomp
or
es
clc
pusha
into
pop
ja
cmp
roll
xchg
out
in
fwait
dec
xchg
add
in
fsubs
xor
xorb
xor
and
sub
xchg
icebp
sahf
aad
dec
nop
scas
or
dec
xchg
sbb
xor
pop
and
xor
jo
xchg
shll
popa
aas
adc
pusha
xchg
mov
sbb
sub
out
ret
or
cmc
fistpll
lea
or
lods
ja
jbe
sti
mov
push
jne
std
ret
mov
cmp
cmp
fbld
sarl
aas
incl
pop
test
adc
ret
icebp
repz
push
js
lret
xchg
pop
xchg
ds
lret
std
xor
jl
in
out
movsb
mov
pop
push
add
jb
pop
sub
cmp
imul
sbb
mov
loope
mov
jp
add
mov
jmp
sti
xchg
lods
xchg
daa
pop
stc
repz
mov
xlat
lods
leave
arpl
in
pop
inc
mov
pusha
and
js
push
push
jl
dec
jg
call
jmp
mov
jae
popa
sub
dec
aad
fildl
pop
xchg
xorl
sbb
fs
add
mov
int3
popa
xor
jbe
aam
aam
insb
loopne
stos
lret
daa
pop
jp
pop
popa
gs
or
fmull
out
stos
mov
imul
aam
sub
push
sahf
shl
leave
bound
fbld
popf
cwtl
js
ror
fidivs
xchg
aas
cli
inc
mov
jno
cld
lea
pop
pop
shr
mov
sarb
sub
mov
mov
dec
or
sahf
xor
or
shr
outsl
test
clc
outsb
inc
out
cltd
inc
xchg
sbb
mov
popa
xacquire
bound
fdivs
das
out
pop
mov
xlat
jle
mov
cmp
push
jbe
lock
repnz
imul
into
or
mov
pusha
in
fisttpll
lret
dec
jbe
test
add
or
jno
scas
outsl
xchg
orl
cmpsb
rolb
or
xor
ficomps
jg
mov
out
les
fsubl
inc
dec
jmp
outsb
ds
mov
jo
sbb
movsl
lahf
leave
ret
popf
lds
ja
sti
cmc
hlt
pop
xchg
mov
inc
xor
imul
xor
lea
dec
lods
xor
cwtl
push
xchg
lret
xchg
dec
imull
pop
adc
or
jns
call
data16
adcb
add
push
cmpb
fwait
stc
adc
imulb
out
lds
cmp
xor
pop
lods
and
jecxz
add
incb
rcrl
push
stos
subb
shll
lods
int
lret
icebp
aam
scas
jns
iret
xchg
pop
push
mov
rcrl
mov
cltd
mov
xor
sbb
bound
out
and
rorl
cmpsl
bswap
lret
pop
pop
mov
xchg
mov
jmp
and
fnstcw
xor
out
cmp
test
dec
lret
decb
loop
sti
adc
mov
imul
mov
cmp
test
push
sti
push
incb
mov
fsubs
cmp
sbb
jbe
mov
cmp
jge
jbe
xor
arpl
xor
or
out
int3
cmp
test
xor
outsl
movsb
mov
cmp
cmpsb
lds
dec
cwtl
pop
dec
sbb
test
loop
sub
jecxz
push
loope
lret
add
dec
push
lcall
adc
sbb
inc
test
bnd
mov
movsl
mov
aam
or
jmp
mov
mov
mov
xchg
add
dec
inc
pop
jle
dec
hlt
dec
mov
push
fwait
lcall
movsl
jl
adc
ss
setb
add
xchg
inc
out
cmp
test
and
mov
pop
mov
repz
repnz
nop
xchg
jno
pop
cmp
sbb
push
mov
adc
mov
mov
pushf
jae
stos
fisubrl
stc
sbb
aam
repz
dec
imul
dec
pop
sbb
inc
imul
mov
bnd
mov
sbb
loopne
jae
outsl
mov
add
stos
push
mov
inc
add
xlat
and
test
test
mov
dec
stos
mov
sarb
cltd
arpl
mov
int3
shl
loop
xchg
mov
push
xchg
xor
pop
ljmp
add
ss
mov
adc
ss
addb
lods
inc
iret
lcall
sub
popa
dec
and
push
imull
inc
pop
push
mov
cs
bound
fwait
xchg
inc
mov
sbbb
cmpsb
nop
lea
adc
push
lret
sub
jmp
data16
add
loopne
pop
out
imul
bound
cmpsl
lds
test
ficoml
rolb
movsl
and
mov
push
cltd
in
cmp
repnz
mov
repnz
add
rcl
add
mov
jb
outsl
mov
pop
nop
in
dec
pop
xchg
ficoms
jmp
cltd
movsl
clc
ret
adc
xchg
lods
adc
inc
sti
lock
lret
int3
dec
push
xchg
inc
adc
push
call
cmpsl
cmp
aad
xor
pushf
cmp
mov
cltd
mov
loop
das
movsb
push
lahf
inc
lea
jp
inc
pop
sbb
hlt
xchg
scas
sbb
xor
adc
adc
scas
and
fmuls
xchg
sbb
jo
ljmp
jg
mov
dec
call
dec
cmp
aas
inc
iret
jecxz
push
push
cli
xchg
cld
dec
pop
bound
cmp
mov
or
cmp
ja
imul
pop
in
mov
clc
sub
mov
cltd
pop
repz
inc
lret
mov
jno
mov
xchg
cwtl
mov
subb
and
test
push
or
mov
mov
call
mov
ja
push
test
bound
cmpsb
add
pop
pop
and
imul
add
scas
gs
std
int
mov
xchg
out
ljmp
sub
outsb
push
rcrb
sub
test
comiss
inc
jns
js
dec
lret
or
xor
mov
stc
sub
fildl
shrl
inc
jg
xchg
sbb
mov
repnz
mov
rclb
nop
xchg
cs
xor
adc
mov
cmp
add
dec
je
jbe
adc
data16
iret
xchg
mov
jno
clc
lock
add
fs
std
jb
push
xchg
mov
call
adc
popa
jnp
or
or
dec
out
and
add
inc
das
mov
xchg
rcll
xor
jmp
xor
sbb
scas
jo
cli
xor
repnz
xchg
pop
xor
or
cli
mov
sub
fcmovnu
es
and
xor
std
xchg
lret
lcall
ror
pop
movsb
mov
lock
loopne
in
aad
sub
inc
push
insb
mov
paddd
inc
stos
aas
jle
mov
jae
imul
push
mov
jno
ficompl
pop
mov
xchg
inc
inc
dec
and
popf
fcoml
mov
fisubs
add
sub
or
sbb
rcrl
mov
sti
test
lods
loopne
out
stos
or
in
fs
stc
sbb
cs
fmulp
xorb
push
push
std
cmp
mov
jle
loop
add
test
aas
cmpsb
fldenv
adc
adc
xchg
dec
push
test
test
pushf
rorb
push
lods
or
push
push
sbb
aas
imul
nop
push
jg
pop
mov
hlt
scas
in
sbb
xchg
xchg
mov
sbb
sub
sub
out
clc
add
movsl
fdivrs
jmp
push
and
pop
add
sub
push
fwait
in
daa
adc
into
jne
adc
and
jmp
mov
loop
add
cmpsb
dec
mov
mov
popa
ret
mov
aam
insl
xchg
fimull
pop
sbb
add
mov
loop
mov
cld
inc
push
push
stc
stc
mov
mov
dec
inc
mov
out
icebp
daa
outsl
adc
rorl
cmp
xor
or
stos
xchg
negb
xor
add
jbe
adc
mov
stos
mov
inc
je
rcll
pushl
aas
inc
pop
fsubl
in
ljmp
add
imul
je
push
mov
ret
rcr
ja
mov
dec
or
repnz
jecxz
insb
or
mov
ret
outsl
jne
adcb
and
jg
in
mov
ljmp
adc
pop
insb
xchg
sahf
adc
hlt
and
fisubs
bound
jb
aad
push
mov
andb
fwait
push
out
aaa
test
dec
pop
jns
mov
and
movsl
aas
fcomip
inc
inc
pop
push
mulb
xor
sub
adc
mov
rcll
je
push
mov
jo
mov
int
test
xor
cmp
pop
fldl
rol
cltd
push
and
lods
mov
iret
or
jnp
push
out
xchg
fnstenv
dec
sub
fnstcw
and
xchg
lods
mov
ret
frstor
mov
ret
adc
lds
je
aam
dec
dec
jl
jb
mov
cmp
cmp
sbb
pop
and
inc
and
inc
ds
adc
pop
inc
or
pop
test
and
imul
pop
xor
push
jg
and
xorb
xchg
jle
ja
jl
dec
mov
mov
inc
out
fs
pop
ja
scas
jns
scas
cltd
push
and
negl
call
and
sub
das
gs
add
fiaddl
inc
lock
loop
jne
xchg
loop
inc
xchg
pop
cltd
int
sub
mov
imul
lea
dec
jmp
push
ss
insl
jno
jno
mov
es
jp
sahf
push
outsl
imulb
aas
jl
adc
jmp
xchg
fildl
inc
cmp
mov
jl
push
lahf
mov
sbb
lcall
jmp
mov
push
out
cld
jmp
add
repnz
mov
lcall
jmp
inc
and
pusha
rcrb
call
and
mov
xor
je
rep
mov
add
movsl
xchg
dec
jl
leave
jno
adc
stos
mov
cmp
mov
cmp
test
adc
rcrb
lcall
xchg
mov
jecxz
outsl
sub
jns
loopne
out
lea
js
repz
jp
js
out
fnstcw
das
out
push
mull
mov
jecxz
xchg
jge
xchg
lock
xchg
fsubrp
ret
je
cmpsl
lahf
cltd
xor
push
xchg
cmp
cmp
out
incb
push
scas
jns
push
cld
inc
or
pushf
out
pop
stos
cli
cmp
push
mov
adc
stos
enter
pop
cwtl
mov
xchg
stc
addr16
aaa
cs
repz
sbb
push
cs
icebp
ds
test
aaa
mov
cmpl
dec
sub
daa
jg
fisttpll
lea
test
into
adc
and
lcall
adc
mov
push
fsubrl
popf
jl
sub
aas
mov
adc
sub
xor
push
push
or
leave
sti
lahf
es
ljmp
cld
jo
jp
mov
push
ret
cli
cli
push
inc
fbstp
and
dec
push
aam
xchg
outsb
pop
sub
lcall
push
sti
mov
pushl
xor
pop
add
xor
ja
mov
roll
test
in
dec
scas
test
pop
or
pop
adc
jo
push
lods
or
mov
cwtl
and
fs
adc
in
add
adcb
lea
imul
pop
ffree
push
mov
dec
lret
or
sub
jae
in
inc
arpl
pop
sysexit
pop
mov
adc
lock
jae
shufps
sub
mov
jmp
lea
cmc
cmp
fidivs
jbe
stos
sbb
or
xorl
out
mov
jecxz
cwtl
imul
cmp
vpcomud
cmp
daa
mov
rorb
je
and
dec
adc
and
lea
int3
jecxz,pn
fsubs
jge
jno
xchg
hlt
pop
enter
and
mov
movsb
push
mov
ret
call
add
call
les
mov
or
out
leave
sub
adc
and
adc
cmp
ljmp
pushf
xlat
arpl
xor
ret
inc
repz
jecxz
xchg
aaa
addl
pop
mov
jae
arpl
xor
ret
inc
repz
jecxz
xchg
aaa
addl
pop
mov
jae
arpl
xor
ret
inc
repz
loop
xchg
addl
adc
inc
jae
arpl
xor
and
repz
xchg
push
sbb
pop
lcall
pop
mov
movsl
fcomp
lods
ljmp
sub
iret
ss
push
lcall
xchg
fiaddl
ljmp
data16
pop
push
dec
cmp
push
lcall
xchg
fiaddl
ljmp
data16
pop
imul
not
mov
pop
sbb
pop
out
aaa
test
scas
push
popf
inc
shll
test
int3
dec
or
pop
xchg
stos
bnd
cmc
mov
cltd
cmpsl
jmp
sub
cwtl
icebp
dec
xchg
sbb
mov
adc
jbe
cmpsb
xlat
inc
pop
jnp
push
test
jecxz
pop
or
xchg
lret
cmpsb
adc
mov
or
jmp
test
out
jp
jne
aas
sbb
fildl
imul
dec
stc
mov
test
out
or
jne
fsubrl
push
scas
je
cmp
mov
mov
dec
sub
mov
sbb
out
xchg
fiaddl
ljmp
data16
pop
push
dec
ss
add
rorl
lret
movsb
mov
jbe
push
insb
pop
cmp
cmp
pusha
sub
mov
ret
scas
into
hlt
ljmp
inc
pop
cmp
pop
pop
push
cmp
rorb
lret
cmpsb
ljmp
data16
pop
push
dec
ss
push
lcall
xchg
fiaddl
ljmp
data16
pop
push
dec
ss
push
lcall
push
test
and
ja
jne
pop
out
xchg
test
sub
scas
movl
mov
mov
push
push
into
xchg
push
or
push
push
ja
sahf
xorl
xchg
adc
or
xor
inc
ror
sbb
lods
adc
push
ror
pop
push
orl
dec
pop
jge
fsts
in
mov
or
imul
lea
mov
mov
popa
jmp
jmp
pop
push
int3
fwait
xchg
cmp
call
int3
dec
add
repnz
jno
loop
pushf
mov
push
lods
mov
mov
sbb
or
imul
push
outsl
push
bound
out
ja
jns
adc
push
out
leave
mov
aad
icebp
pop
push
iret
shrl
inc
xchg
sbb
xchg
or
lea
popf
lahf
mov
bound
das
adc
icebp
and
movsl
cmc
or
rcll
jecxz
jne
jl
js
mov
inc
or
out
test
jle
jge
add
loopne
inc
adc
pop
cwtl
std
mov
mov
jp
cwtl
xchg
bound
je
mov
in
clc
sbb
clc
sub
ret
mov
mov
adc
fnsave
mov
adc
add
add
xchg
cmpsl
test
and
push
out
test
in
and
movsb
insl
mov
adc
pop
sti
in
and
dec
bound
mov
mov
rolb
and
ffree
or
out
add
add
mov
mov
clc
aaa
mov
out
out
mov
sbb
fcmovnbe
adc
sbb
iret
bound
and
ret
nop
pop
out
fwait
add
enter
sbb
test
scas
out
test
repnz
or
jl
cs
cld
xchg
jmp
mov
fldenvs
stos
inc
mov
sub
xchg
jg
iret
push
xor
arpl
xor
lahf
nop
pusha
arpl
fmull
movsb
iret
sub
test
shlb
insb
popf
filds
fs
mov
adc
push
mov
xchg
dec
aad
cmpsl
xlat
fisttpll
sub
loope
jmp
cmp
mov
jmp
or
repnz
clc
mov
inc
cwtl
dec
and
jns
pop
mov
jbe
xlat
sub
iret
push
lea
movsb
int
push
aad
jne
negl
adc
fsubs
mov
fidivrl
add
pop
or
cmp
xor
fs
sbb
and
adc
gs
sbbb
mov
ss
je
inc
pop
jns
pop
xchg
mov
sub
and
pop
xorl
dec
inc
push
out
jbe
cmp
jae
dec
les
push
repnz
lahf
adcb
addr16
clc
sub
mov
in
repz
cmp
fcoms
push
jne
push
clc
sbb
cmp
rcrb
int3
push
and
fisubs
jg
jo
rol
pop
push
push
pop
and
mov
in
fwait
add
movsl
pop
in
nop
das
js
std
fidivl
and
xor
gs
pop
mov
ret
andb
ss
ficomps
lahf
stos
seta
inc
sbb
divb
xor
sub
das
pop
arpl
xchg
push
cli
jbe
mov
xor
stc
jne
push
gs
jne
stos
mov
push
lods
stos
sti
xchg
dec
sbb
mov
inc
sbb
mov
leave
std
push
push
dec
adc
cwtl
sahf
inc
mov
sbb
lahf
cld
mov
fsubr
adc
cs
cmp
push
inc
inc
fldl
outsb
mov
dec
ljmp
call
or
ljmp
mov
fsubl
inc
hlt
cli
shll
test
sbb
in
jmp
jne
jae
push
lahf
xchg
aad
dec
pusha
jbe
push
pop
pop
lods
add
pushf
loopne
xor
xlat
cltd
scas
or
shll
out
mov
mov
cmp
and
nop
bound
xor
out
xchg
cs
loop
in
xchg
jl
fmul
push
or
fdivr
aaa
pusha
add
cltd
mov
mov
movsl
dec
push
pop
adc
cld
mov
pop
and
daa
mov
xchg
or
mov
insb
cmpb
mov
test
test
add
mov
push
dec
cmc
leave
clc
ja
sub
mov
inc
cli
and
cmp
or
mov
cmp
adc
mov
mov
out
sub
push
mov
mov
mov
dec
dec
xor
bswap
dec
mov
mov
xchg
stos
mov
push
int3
ja
sub
dec
dec
cmpsb
imul
push
sbb
xchg
std
loop
push
push
sub
cmp
hlt
cmc
add
push
jle
mov
mov
add
addr16
shl
fsubl
in
aaa
test
inc
push
iret
scas
jle
push
cmpsl
cmp
imul
insb
push
test
stos
popl
insb
cld
outsl
loopne
inc
jle
arpl
adc
jno
lcall
sub
dec
and
sbb
xchg
setns
lret
add
adc
lds
inc
out
xor
jo
stc
cmc
clc
jl
roll
pop
fwait
adc
addr16
dec
lahf
js
cmc
cs
mov
cld
push
mov
loopne
push
push
sbb
mov
shlb
movsl
idivl
xchg
int
mov
psrad
mov
and
xchg
sahf
pop
add
mov
and
lcall
adcb
xchg
jne
add
neg
daa
sbb
jle
scas
cmpsb
push
aam
push
loopne
xchg
enter
and
jge
jno
push
push
shrl
or
dec
sbb
jp
push
jge
push
push
add
rcll
jmp
xor
sub
sbb
sub
test
inc
sub
adc
xor
cmp
jl
jge
stos
clc
adc
repz
sub
add
pop
mov
call
idiv
or
mov
mov
out
aaa
dec
divl
jl
add
cmp
inc
lret
mov
inc
jl
outsb
js
pop
sbb
ror
dec
jns
inc
int
cmp
repnz
mov
aam
sahf
mov
pop
fidivrs
push
inc
push
je
flds
popa
jbe
adc
adc
push
dec
hlt
mov
lds
insb
imul
into
cmp
jb
into
adc
movsb
jnp
sub
daa
and
ret
shrb
xor
push
out
bound
in
scas
inc
xor
pop
mov
add
ljmp
xchg
insl
adc
lods
jns
sbb
jnp
aas
out
mov
cmp
and
and
xchg
pop
aas
xor
fmul
repnz
loop
mov
lret
sub
add
movl
aad
mov
xchg
mov
and
jle
sbb
sahf
push
xchg
dec
mov
cld
or
sub
imul
jle
jb
pop
ss
or
push
adcl
cwtl
and
negl
stc
cmpsl
sbb
shl
enter
push
cld
jo
enter
out
andl
push
movsb
mov
xor
enter
add
add
fcmovbe
adc
adc
clc
imul
cmpsl
clc
cmpsb
pushf
inc
stc
sub
ret
jb
add
xlat
dec
adc
lcall
das
imul
push
mov
dec
out
jns
es
imul
fildl
int
add
xchg
aas
mov
rorl
arpl
sbbb
push
sub
mov
lret
cmpsl
scas
pop
sahf
dec
sbb
push
fidivrs
out
loop
imul
dec
dec
ret
adc
mov
arpl
mov
pushf
xor
jbe
mov
pop
jle
mov
das
xchg
jb
cmp
andl
imull
sub
iret
ss
icebp
adc
adc
test
dec
int
in
fldl
xchg
enter
dec
cmp
mov
aaa
push
pop
or
mov
sbb
jno
fists
mov
nop
add
add
jle
push
arpl
inc
sbb
fsts
aas
pop
std
int3
adc
jbe
or
mov
pop
jecxz
sbb
dec
pop
push
data16
out
ficomps
sub
in
xchg
push
adc
sbb
jecxz
cld
movsl
mov
int
sub
sbb
jle
scas
or
cli
scas
or
dec
jne
pop
sub
mov
iret
ja
or
adc
jno
mov
jp
ret
inc
sbbl
aaa
mov
jge
lret
outsb
iret
pop
cmp
sub
mov
iret
jns
xor
addr16
scas
int
pusha
push
iret
inc
add
jno
mov
jnp
add
jp
repnz
out
add
mov
nop
mov
mov
sub
sub
dec
scas
cmc
sarl
cmpsl
mov
jnp
push
cvtps2pd
mov
in
sahf
out
push
and
insb
jg
movsl
repnz
and
fbld
add
arpl
aam
cmp
mov
cs
cmpsl
lcall
test
fs
jbe
lds
in
dec
scas
jge
xor
fucomp
lods
mov
pop
mov
pop
inc
pop
fadds
mov
sub
sti
jns
lods
mov
cmpl
cmp
out
push
pop
mov
jns
lahf
aad
mov
orl
mov
dec
xchg
sub
mov
repz
or
pop
sbb
mov
ds
iret
jecxz
sbb
dec
inc
mov
jbe
jno
sub
ja
fdivr
into
in
test
xor
or
insl
popf
mov
xchg
xor
mov
ret
or
dec
jp
dec
iret
and
pushf
fnstenv
movsb
lret
sub
ljmp
in
mov
jp
rcrl
sub
mov
das
pop
push
adc
scas
sahf
lods
adc
filds
out
int3
push
stos
push
cld
imul
push
push
sub
push
jnp
add
push
mov
in
adc
movsb
jo
cld
in
dec
cwtl
std
push
and
mov
es
jle
imul
sbb
pusha
and
out
mov
push
in
dec
mov
loopne
pop
mov
dec
sbbb
outsb
dec
out
outsb
cmp
repz
aad
fwait
sbb
push
cmp
dec
fadd
out
jl
leave
jb
dec
fidivrl
mov
sti
sub
daa
sub
push
pop
icebp
cmp
popf
icebp
xlat
test
outsl
xor
repz
data16
leave
push
xchg
imul
ljmp
add
cmp
std
inc
loop
ret
mov
nop
ret
rorb
iret
or
jae
lcall
pop
and
add
cs
test
in
jg
sarb
inc
push
mov
fsubrl
js
jmp
mov
frstor
pop
mov
lds
out
pop
pop
push
pop
clc
fcoms
sbb
lods
and
push
nop
mov
jo
add
sub
imul
push
icebp
mov
out
stos
ds
inc
jb
add
mov
lods
and
sub
and
xchg
stc
dec
sahf
int
add
adc
in
loop
cmc
sub
cs
mov
ljmp
push
mov
or
in
sbb
shlb
add
gs
repnz
mov
gs
jp
mov
call
loop
jl
push
insb
or
adc
dec
jb
xchg
jle
add
push
fwait
mov
xor
push
dec
cwtl
dec
push
cli
addr16
push
sub
and
sbb
or
adc
jb
cmpl
das
ret
clc
insl
or
aas
adcb
arpl
dec
out
xor
jg
add
or
pextrw
mov
int
jne
jo
in
shrb
and
sbb
and
cmpsb
dec
sub
fs
mov
mov
mov
inc
cmc
xchg
xor
push
out
jmp
push
test
and
insl
mov
adc
mov
data16
jae
push
xchg
or
das
mov
pop
jae
cmp
clc
cmp
out
mov
imul
scas
inc
je
adc
sub
cmpsl
sbb
xor
mov
stc
adc
lock
in
fcoml
jle
insl
lcall
inc
rcl
dec
dec
dec
stc
dec
aaa
mov
pop
cli
adc
les
rcll
ficomps
cmpsb
mov
test
lds
inc
mov
jbe
jb
gs
imul
dec
mov
sbb
into
fcompp
mov
sbb
push
push
or
vpsrlq
mov
cmc
js
js
jge
into
sahf
xchg
mov
add
xchg
xchg
cmpsb
rcrl
jo
es
dec
inc
pop
sbb
mov
aaa
push
mov
ljmp
sbb
mov
adc
push
aaa
inc
psllw
aam
jo
xchg
rclb
or
mul
cmpsl
add
shll
out
inc
push
xchg
inc
jecxz
dec
stos
rcrl
adc
xchg
aas
mov
jb
insl
iret
jp
aas
inc
fdivl
rorl
ds
adc
addl
insb
mov
pop
push
cmp
push
lock
lret
shlb
inc
std
inc
dec
add
or
mov
pop
fwait
push
out
movsb
jb
in
mov
imul
cmpsb
add
test
sub
in
bound
push
fldt
xchg
add
and
jne
icebp
sub
stc
push
sti
fiadds
jbe
xor
stc
xchg
dec
test
fst
push
bound
or
repz
and
call
dec
ja
scas
cli
rcrb
insb
adc
pusha
rclb
mov
pop
out
dec
push
add
mov
xlat
popf
push
loop
leave
adc
shll
iret
cvtdq2ps
or
xor
shl
out
push
lea
in
jne
dec
mov
in
push
cmp
in
xchg
adc
stos
mov
out
dec
xchg
mov
xchg
push
xchg
lds
in
pop
cltd
add
insl
mov
fidivs
mov
mov
out
ss
out
pop
das
test
test
inc
dec
jl
mov
adc
ja
mov
add
je
shll
mov
fsubs
mul
sarl
movsb
sub
xchg
jmp
jno
cli
ret
sbb
cmpl
bound
leave
jnp
pop
addr16
jbe
popa
je
push
subl
sub
xor
in
fdivs
inc
jb
test
inc
pxor
pop
outsl
mov
jmp
mov
aad
and
jbe
cmp
icebp
adc
fsubs
icebp
lret
mov
mov
adc
stc
ffree
out
mov
mov
lods
es
adc
fcoml
sub
arpl
adc
pop
fmul
or
lahf
cmc
lret
in
mov
popf
jnp
lods
lahf
into
test
jns
push
xchg
scas
pop
mov
call
pushf
or
int
xchg
or
push
mov
and
out
stos
subl
sbb
ja
and
xchg
sti
cld
mov
fstpl
ljmp
jge
mov
ds
mov
xchg
pop
or
roll
dec
lcall
and
fistpl
xchg
rol
mov
xchg
call
icebp
mov
inc
or
xchg
in
dec
loop
arpl
lcall
sub
loop
or
pop
jmp
scas
pop
movsl
aam
adc
push
call
add
fsubr
popf
mov
pop
mov
jo
cwtl
sub
bound
out
mov
mov
cmc
push
inc
insb
inc
dec
sub
mov
mov
push
insb
pop
in
jmp
push
sarb
fdivrp
mov
adc
push
pusha
rorb
push
loop
adc
push
mov
sub
add
inc
popl
xor
and
inc
cltd
cli
jo
lods
repnz
into
dec
cmp
lea
adc
push
fptan
fwait
sbb
cld
mov
xor
mov
inc
pop
and
arpl
sub
mov
adc
js
mov
mov
push
and
mov
dec
les
ss
dec
xor
pop
mov
jbe
pop
mov
pop
jge
mov
push
lcall
mov
daa
jmp
arpl
divl
inc
fcmovu
xor
call
cmp
loope
inc
rcrb
cmp
cmp
sub
gs
xor
imul
rol
xchg
sub
pop
nop
es
push
clc
je
sub
addl
lret
push
lods
xchg
xchg
icebp
call
ds
popf
push
popf
dec
inc
push
mov
sub
push
lods
mov
sub
inc
in
lds
adc
mov
pop
movl
add
repz
sbb
insb
lret
xor
jbe
sbb
int
fucomi
jge
push
xchg
jno
mov
jne
and
pop
clc
mov
popf
cltd
mov
std
lock
pop
pop
pop
stos
js
xor
inc
mov
loope
aaa
xchg
test
fwait
nop
push
sbb
cli
push
mov
pop
inc
pop
fsubs
mov
adc
and
pop
sub
lock
fwait
push
lods
xchg
xor
rcrl
add
lock
mov
hlt
push
mov
in
cwtl
pusha
cmp
mov
sbb
push
sbb
jns
adc
les
jns
mov
xchg
and
add
arpl
pop
outsb
cmp
add
jl
lds
jecxz
mov
out
jns
clc
inc
sub
bound
out
movsb
pop
xor
or
adc
jno
std
jno
gs
mov
shrl
daa
nop
mov
xor
fwait
xor
cmc
pop
outsl
push
mov
cmpsb
pop
push
pop
pop
cmpsl
andl
popf
mov
outsb
jne
lret
out
dec
adc
cmpsb
add
addr16
xorb
sub
mov
div
ja
and
inc
xor
aad
inc
push
repnz
sbb
cltd
add
push
push
dec
adc
pop
sub
and
push
push
sarl
inc
xor
sub
add
lcall
fimull
lds
jbe
test
cwtl
mov
pop
push
fs
jmp
daa
nop
out
ret
pop
jl
mov
sbb
or
add
fidivl
adc
jge
xor
rep
mov
mov
add
nop
jns
mov
jecxz
xchg
or
incb
jge
push
das
xchg
in
out
adcb
xorl
test
inc
mov
jae
xorb
out
sbb
cmpsl
xor
sub
xor
out
icebp
dec
jne
inc
scas
pop
cmp
fcompl
call
js
and
mov
imul
stos
into
or
inc
rorl
xchg
pop
in
addr16
out
in
pop
outsb
rclb
fs
mov
add
ss
jno
mov
jo
push
imul
sbb
mov
mov
arpl
insb
icebp
ret
movsl
mov
ds
mov
mov
cli
jns
inc
fsubrs
mov
leave
scas
or
iret
test
xor
push
jl
in
mov
inc
xchg
push
psubd
lahf
fadds
test
mov
sub
ret
push
dec
pop
jecxz
arpl
pop
arpl
mov
mov
push
into
stos
fdiv
fldl
mov
push
push
out
lcall
inc
inc
repnz
sub
mov
dec
push
inc
cmp
cmp
fcmovnbe
es
sub
push
cltd
hlt
add
neg
adc
shlb
mov
and
lea
sbb
jns
jns
cld
repz
adc
jecxz
xor
scas
pop
push
mov
mov
add
jge
xchg
pop
jno
mov
xchg
xchg
add
loopne
icebp
or
lods
mov
popf
sub
inc
ja
fldenv
xor
adc
int
lock
sbb
gs
jne
in
cmp
sbb
or
imulb
cmp
sbb
push
aam
mov
faddl
int
adc
sbb
jle
sub
mov
pop
out
xlat
xchg
and
push
iret
loope
jno
leave
test
sahf
fs
push
xchg
pop
xchg
and
fsubrs
fdivs
xor
jecxz
addr16
ljmp
adc
subb
ret
mov
mov
repz
and
push
sub
sbb
es
aas
mov
xchg
loope
jmp
shlb
rcr
fiaddl
push
inc
mov
xlat
xchg
aas
fdivr
and
nop
enter
mov
dec
mov
fwait
sub
or
mov
pop
jo
xor
out
jnp
inc
pop
dec
xchg
scas
mov
mov
mov
xchg
mov
cmpsb
ljmp
data16
pop
push
dec
ss
push
lcall
xchg
fiaddl
ljmp
data16
pop
push
dec
ss
push
lcall
push
fiaddl
ljmp
data16
pop
push
dec
ss
push
lcall
xchg
fiaddl
ljmp
pop
data16
inc
test
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
cmc
loop
repnz
ret
div
sbb
push
inc
or
and
pop
add
mov
test
cwtl
ret
clc
mov
enter
sub
inc
or
and
pop
add
sub
push
ret
call
xorb
cmp
jle
imul
cmp
stc
loop
xchg
cmpsb
jae,pt
lods
jae
or
daa
pop
inc
addl
mov
mov
pushl
test
pop
dec
repz
adc
inc
jecxz
std
loop
mov
call
xor
cltd
cmp
xlat
mov
inc
notb
stos
std
pop
adc
sbb
ffree
stc
mov
lret
push
jnp
or
bound
mov
cmp
adc
das
pop
mov
add
daa
js
out
or
ljmp
cmp
ret
sub
mov
dec
xor
rcrb
push
std
sbb
loop
repnz
ret
clc
mov
jo
lret
jb
inc
push
push
sbb
jbe
pop
add
lret
and
test
xchg
xchg
int
repz
out
loop
push
imul
adc
dec
sub
emms
mov
ret
xchg
mov
daa
imul
or
pop
sub
mov
xchg
mov
cmpsb
mov
or
cmp
jb
inc
or
and
pop
add
mov
ret
clc
mov
enter
sub
inc
or
and
pop
add
mov
xor
add
lods
in
jnp
cltd
mov
sbb
adc
or
pusha
aaa
repz
jb
and
pop
incb
jo
ret
add
repnz
lahf
sbb
mov
ja
add
jno
vpsrad
cmpsb
stos
inc
cwtl
cmp
add
fdivrp
and
add
add
cltd
pusha
imul
lea
push
jge
push
iret
cwtl
xchg
mov
push
lahf
aad
xchg
mov
xor
aaa
push
jb
dec
inc
inc
sub
lock
addb
push
mov
notb
adc
fnstcw
mov
xor
adc
fcoml
inc
mov
mov
xor
and
add
xchg
inc
mov
pop
into
fucom
gs
pop
int3
sbb
xorl
mov
mov
iret
mov
and
cmp
cld
mov
push
dec
popa
cmc
insl
adc
jns
jle
dec
fs
or
inc
mov
or
mov
inc
loopne
sbb
inc
pop
sbb
jne
xchg
add
inc
repz
jp
xor
mov
mov
mov
mov
popf
rclb
jp
leave
add
jo
roll
popa
icebp
pop
xor
or
sub
sbb
sbb
mov
mov
fdivs
ljmp
out
sbb
jl
aam
fnstenv
cs
loop
jg
sub
and
outsb
icebp
rolb
hlt
or
xor
push
inc
clc
mov
mov
popa
incb
push
aad
pop
inc
pop
rolb
adc
jne
pop
jg
jl
dec
jl
loopne
xchg
pop
in
scas
or
adc
adc
dec
aaa
cld
leave
xchg
pop
jbe
mov
xchg
hlt
sub
or
mov
lret
xlat
ljmp
or
and
divb
loopne
push
pushf
in
adc
loop
or
cmp
add
sahf
rolb
in
cmpsl
xchg
nop
scas
icebp
enter
mov
xchg
inc
out
xor
sahf
repz
or
fmuls
pop
push
and
test
pop
mov
mov
push
pop
cltd
add
insb
mov
add
or
fisttps
cmp
stos
movsb
sbb
sub
mov
or
xchg
inc
idiv
icebp
call
daa
xchg
push
bnd
shrl
mov
sub
in
sub
adc
dec
xor
mov
inc
stos
pop
pop
jns,pt
or
cmc
out
outsl
mov
adcb
lea
lret
imul
das
sub
je
adc
aam
xchg
sbb
pop
arpl
iret
pop
out
add
ret
pop
dec
rcrb
stos
mov
inc
aaa
mov
add
outsb
mov
scas
movsl
cmp
fstpt
mov
pop
hlt
and
loop
mov
cltd
jecxz
pop
mov
movsl
dec
jb
mov
sahf
or
out
lods
adc
vaddsubpd
pop
cmp
and
imul
stos
or
jg
lea
sub
mov
and
inc
xchg
pop
add
dec
cmpsl
push
aas
mov
mov
pop
js
and
js
in
push
imull
test
test
push
push
fcmovu
mov
jge
ljmp
mov
lods
aaa
loope
cmp
mov
fwait
push
pop
push
jnp
icebp
int
add
inc
inc
sbb
fnstenv
jmp
stc
dec
mov
fwait
add
xchg
mov
sub
in
add
stc
pusha
cld
or
imul
adc
je
aam
sbb
xchg
cmc
das
fwait
jnp
jno
push
int
les
or
clc
rclb
xchg
dec
mov
shll
and
xchg
mov
gs
jge
pop
cmpsl
push
xchg
test
mov
test
push
hlt
add
and
xchg
adc
xor
fidivl
xor
jno
test
mov
daa
pop
fcmovbe
xchg
bound
pop
xchg
push
jg
dec
or
lcall
cmpsb
fildl
movsb
push
pop
das
sbb
fisubs
sbb
pusha
and
inc
mov
push
iret
and
inc
leave
outsb
fcompl
loopne
inc
push
dec
cmp
test
scas
inc
mov
cmpb
aas
inc
mov
es
add
stos
rcrl
inc
and
mov
pushf
jmp
push
jnp
jle
enter
rcrb
sub
lods
xchg
add
mov
je
nop
sub
fs
xorb
dec
jno
sub
inc
sub
jmp
dec
cmp
mov
bound
pop
pop
fmuls
dec
test
ret
loop
xor
js
inc
jmp
mov
inc
add
inc
in
dec
negl
inc
inc
outsl
lods
dec
loopne
stc
push
mov
lcall
ljmp
enter
xor
push
out
mov
fsts
push
jbe
push
fdivs
jmp
fwait
xor
xchg
outsl
sub
mov
sbb
or
loop
pop
std
ficompl
fildll
aad
incl
xchg
xor
movsb
stos
dec
addr16
test
mov
fwait
push
popa
xchg
dec
cld
das
pop
daa
pop
cmc
enter
popa
pop
mov
insb
and
push
test
lahf
pop
loop
add
in
fsubrs
and
or
mov
pop
pop
xchg
hlt
in
jl
iret
arpl
insl
jae
push
dec
mov
mov
aaa
mov
das
dec
dec
and
mov
mov
repnz
sbb
fs
stc
jg
dec
loope
lret
pop
cmpsl
loopew
call
pop
jecxz
repnz
xchg
cli
mov
fdivrl
rolb
sub
jno
ficomps
jmp
add
loop
mov
mov
mov
mov
jl
xor
jl
stos
rcr
or
lcall
test
jnp
xorb
gs
outsl
and
and
adc
daa
pop
iret
jge
ds
mov
push
scas
jne
adc
movnti
sahf
es
inc
xor
loopne
push
xchg
loop
pop
idivl
repnz
cmp
cmp
xchg
jmp
pop
jl
enter
inc
mov
test
mov
sar
call
sbb
lds
lods
mov
mov
aam
mov
and
xor
mov
out
jmp
push
call
sub
mov
rorl
adc
push
pop
enter
pushf
cmp
push
test
xlat
repnz
popf
jg
stos
xchg
or
mov
hlt
xlat
pop
xchg
mov
fs
outsb
sbb
sub
pop
sbb
es
mov
xchg
notl
fists
add
hlt
shlb
ljmp
gs
ret
sbb
test
out
scas
mov
out
movsl
ret
dec
in
mov
lret
out
ret
pop
fsubl
int3
sarl
push
int
inc
push
or
out
or
push
mov
mov
test
cmpsb
imul
sub
pop
inc
cmpsb
jns
dec
leave
je
inc
dec
cwtl
pop
jb
mov
nop
fwait
aaa
jbe
xor
cmp
mov
mov
addl
aam
mov
jmp
arpl
sub
ds
xchg
sbb
fildl
loopne
pop
mov
push
mov
lahf
pop
sbb
jb
sti
int3
adcb
mov
jo
cmp
mov
daa
out
jno
roll
sbb
ficoms
mov
in
dec
jbe
sahf
in
dec
jle
cmp
or
mov
push
jmp
jmp
mov
cmp
js
or
push
push
cmp
std
push
jae
fisubrl
int
pusha
and
inc
add
jp
ret
sbb
and
out
cld
ficoms
ljmp
xor
add
out
cltd
xchg
mov
mov
push
jb
stc
test
or
add
or
mov
rol
mov
ret
xor
pop
stos
enter
xchg
inc
and
mov
js
push
mov
cmpsl
xor
xor
call
add
fnstsw
mov
and
jge
cld
into
jmp
in
loope
lock
lahf
jnp
scas
lds
testl
push
enter
mov
sub
pop
and
dec
popa
jle
xchg
lret
inc
sbb
inc
repz
icebp
add
sti
in
and
outsl
js
cmp
xchg
cmpl
mov
std
int
scas
pop
sub
mov
mov
push
sbb
mov
std
aas
inc
sub
and
ljmp
or
cmpl
pop
xchg
loopne
mov
sbb
mov
sub
dec
clc
or
lods
mov
rcll
sarl
cmp
xor
inc
cmp
and
cmp
scas
sub
adc
jne
and
pop
faddp
or
andl
cmc
outsb
les
mov
pop
gs
mov
cmpsl
ret
xor
mov
lods
frstor
icebp
mov
jge
jno
test
icebp
rcrl
popf
sbb
xchg
cs
jp
into
jge
int3
ret
inc
jle
sti
add
repz
cmp
push
fistpll
roll
lods
xchg
or
in
jmp
and
call
xor
fistl
cmp
mov
daa
ret
ret
pop
push
lock
ss
xchg
mov
popf
cwtl
mov
xorl
test
sti
or
sbb
sbb
add
cmp
push
or
enter
test
inc
add
lahf
jnp
and
sub
mov
lods
shlb
and
cmpb
jle
push
loop
xor
lods
leave
sub
inc
sbb
or
add
test
jle
and
scas
xor
sub
sub
dec
lds
cltd
mov
push
mov
mov
xor
push
or
hlt
and
mov
notb
or
ljmp
sbbl
loopne
xchg
pushf
popf
sbb
xchg
testb
dec
cmp
gs
scas
pop
cli
mov
shl
pop
jae
sbb
popa
arpl
mov
lds
jns
loope
inc
cltd
mov
pop
mov
cmc
xlat
roll
and
or
pop
loopne
lock
mov
mov
push
jo
sub
hlt
mov
fs
les
pop
or
jb
not
mov
mov
rcr
nop
or
inc
sbbb
push
cmpsb
jae
mov
xacquire
dec
iret
pop
and
add
fldt
pushf
insb
in
sub
cmp
in
insl
sub
cmc
mov
xchg
test
sbb
pop
xor
sub
inc
mov
mov
sub
lds
jns
cld
cltd
pushf
xchg
sub
loopne
push
mov
push
loop
pusha
ljmp
mov
xchg
ret
cmp
and
cmpsl
ret
mov
push
movsl
or
dec
aad
xchg
loopne
push
pusha
mov
dec
sbb
mov
gs
scas
movsl
add
mov
cmp
imul
sub
mov
cmc
xor
pushf
shr
push
daa
inc
lds
lret
jns
test
das
sbb
mov
int3
mov
mov
aad
out
fcoms
sub
cs
inc
in
inc
dec
jae
aas
pop
pop
imul
scas
nop
ds
or
push
pop
cltd
cld
lods
shl
and
js
scas
js
or
inc
es
inc
int3
out
cltd
sub
test
mov
push
mov
inc
mov
ds
xchg
xchg
jp
xchg
jecxz
inc
loopne
fscale
lea
ret
jb
lcall
shl
ja
pusha
and
test
or
hlt
lea
out
adc
loope
pushf
mov
xor
ret
mov
pop
scas
mov
push
cwtl
aas
scas
inc
aam
fld
pop
push
mov
repz
push
cmp
cmp
push
and
adc
arpl
popf
pushf
mov
dec
loopne
inc
outsb
ljmp
pop
sub
sub
adc
leave
int
cld
ss
xorl
cli
jl
cmp
mov
push
repz
mov
jb
xchg
xor
add
adc
pop
jb
push
call
add
insl
cwtl
mov
ljmp
mov
jns
xchg
sbbl
cmpsl
push
ljmp
cmp
mov
add
out
jae
push
test
add
jae
sbb
dec
or
adc
fldenv
insb
add
popf
jmp
ja
stc
mov
pop
cmpsl
out
dec
ss
jmp
xchg
push
inc
dec
enter
mov
jne
jns
enter
mov
es
pop
setge
daa
je
fdivs
pushf
shrb
sub
mov
push
rorl
out
pop
mov
and
inc
push
dec
cmc
pop
out
in
jns
pop
fs
or
lret
mov
push
sti
jnp
mov
fsubrl
je
jp
or
rcl
add
das
xchg
xor
xchg
xchg
clc
mov
jecxz
adc
jo
cltd
std
pop
icebp
add
gs
dec
adc
dec
adc
or
bound
adc
push
fistpl
mov
movsb
push
imul
jb
xor
inc
sub
scas
repz
cmp
push
add
cmpl
jp
in
mov
dec
les
imul
into
sub
int3
sbb
cmp
scas
mov
repz
lcall
sub
popa
fwait
sti
hlt
xor
test
push
sbb
inc
push
and
repz
addr16
or
push
jmp
aaa
call
scas
subl
mov
loopne
sbb
sbb
mov
scas
push
adc
test
nop
lret
dec
cld
out
mov
cmpsl
mov
stos
data16
cmp
stos
sbb
cmp
ljmp
xor
icebp
test
add
shrb
ret
mov
mov
scas
lcall
mov
cmpsl
je
mov
loopne
push
and
push
sarl
dec
dec
imul
addl
dec
add
cmp
clc
aad
jmp
in
stc
add
cmpsb
je
push
mov
subl
ret
test
and
xchg
sbb
mov
inc
sub
cltd
lods
mov
scas
push
std
enter
inc
lods
int
popa
popf
jle
xor
mov
cwtl
fwait
daa
in
lahf
test
les
jno
add
mov
push
movsl
lea
inc
in
mov
cmp
xor
push
cmp
sarw
sti
jmp
outsl
xor
push
jb
xor
push
in
jne
mov
lret
cmp
push
xchg
fistps
xor
mov
sbb
or
lret
rcll
push
or
xor
std
sub
aam
sub
mov
or
dec
jne
repnz
jbe
lret
lea
outsl
mov
sbb
cmp
jp
adc
and
dec
or
test
je
jbe
jbe
stos
and
ss
clc
cmp
out
sarb
pusha
push
sub
dec
sub
pop
push
dec
mov
mov
sbb
cli
xchg
jb
cmp
cmp
insl
sub
push
test
xor
daa
stos
or
aad
cmp
push
or
mov
mov
xor
jns
and
pop
jp
testb
or
popf
cmpl
nop
mov
roll
fwait
sbb
subl
pop
into
pop
push
sub
hlt
xchg
lea
push
repz
dec
ljmp
jns
les
add
jns
cmp
xor
cmpb
or
shll
popf
sbb
or
loope
jb
loop
shl
je
xchg
bound
inc
leave
lods
cmpsl
dec
stos
cwtl
mov
test
cwtl
repnz
scas
divl
loopne
jle
mov
testb
mov
mov
jle
std
push
xchg
push
lds
or
stos
cmp
xor
mulb
jl
mov
ds
push
jecxz
movsb
xorl
sti
rcl
repnz
jbe
imul
or
sar
jbe
pusha
push
movsb
in
test
iret
bound
js
fsubrs
push
aam
mov
mov
int
out
pop
cmp
std
or
int
jns
and
js
mov
lds
sub
inc
or
pop
and
inc
notl
cmpsb
loope
dec
stos
jg
in
or
inc
mov
inc
jmp
loop
aam
mov
xor
int
in
cwtl
subl
imul
dec
test
add
arpl
jmp
in
ds
jg
xchg
jg
xor
or
lea
xor
mov
dec
pop
mov
outsl
pop
mov
xchg
jno
pusha
out
jle
and
loopne
adc
icebp
arpl
fdiv
mov
mov
repz
scas
jecxz
mov
push
in
jp
and
popa
adc
scas
inc
test
std
adc
repnz
or
lcall
in
aam
dec
pop
ss
ret
pusha
shrl
arpl
mov
test
dec
and
sub
sub
mov
jg
or
dec
cmp
jns
inc
jo
shll
lock
cs
adc
filds
dec
mov
dec
push
sub
adc
test
sbb
scas
mov
dec
jl
mov
cs
sahf
jb
in
rolb
pop
out
xchg
cmp
les
pop
pop
rcr
cli
pop
sub
mov
push
sub
icebp
push
out
aam
dec
dec
mov
insl
adc
sub
jp
test
mov
mov
aad
dec
cmp
in
mov
test
cld
inc
push
dec
loope
pop
cltd
std
adc
jae
and
push
xchg
rorb
mov
out
test
cli
les
mov
cmc
test
lods
and
pop
out
into
push
imulb
insb
clc
mov
adc
stos
popf
mov
jb
mov
mov
addb
lds
push
adc
out
push
int3
and
push
cmp
jns
aam
lock
addl
bound
xor
fldl
daa
std
cmp
dec
mov
mov
dec
cmp
js
adc
inc
pusha
pop
and
insb
push
fcoml
xchg
mov
push
sbb
or
jg
dec
inc
lret
andl
leave
fwait
hlt
pop
jbe
push
and
je
inc
pop
jle
xchg
dec
or
ret
jecxz
into
mov
xchg
sahf
mov
sbb
xor
dec
sbbl
mov
mov
push
lock
pop
xchg
lcall
sbb
leave
int
xchg
jl
cmp
es
outsl
rorb
inc
into
mov
into
lahf
adc
sbb
inc
outsl
sub
cmpsl
aam
js
gs
std
jecxz
xor
fnstcw
dec
test
clc
mov
cwtl
pop
push
adc
loop
or
out
dec
and
push
push
sarb
pop
xor
pop
loopne
ficomps
xor
xor
mov
pop
xor
subl
mov
mov
inc
in
fsubrs
push
mov
nop
pop
xor
addr16
insl
lret
dec
sub
js
call
add
mov
cmc
mov
or
cmp
insl
cmpsl
push
dec
jbe
popa
mov
mov
outsl
lret
sarl
shrb
fdivrp
xchg
xchg
xchg
ds
jmp
or
push
aaa
adc
or
xchg
lds
aaa
movb
out
scas
or
sarl
outsb
jge
hlt
sub
xchg
xchg
fs
sub
into
les
scas
cwtl
xor
cmc
push
xor
add
clc
mov
andl
xor
scas
jnp
imul
jmp
mov
loop
mulb
mov
scas
cmp
insb
sub
idivl
jne
sahf
jmp
aad
fildll
xchg
cmp
inc
or
ret
out
out
jge
cmc
je
cmpsl
out
inc
mov
adc
aam
pushf
popw
lods
dec
out
mov
lods
out
test
xor
pop
leave
ja
push
out
xchg
popa
cltd
mov
shlb
fwait
jne
adc
sahf
or
pmuludq
les
mov
dec
inc
adc
push
mov
outsb
outsl
mov
pusha
mov
aaa
rcrb
addr16
loope
in
in
aam
outsb
push
jmp
ds
pop
iret
jb
sbb
push
orl
fnstsw
ss
jae
es
jne
sub
gs
lret
lahf
outsb
test
sub
gs
mov
scas
ret
xchg
sar
mov
enter
sub
inc
or
and
pop
add
mov
ret
clc
mov
enter
sub
inc
or
and
pop
add
mov
ret
stc
mov
leave
xchg
cmp
sub
inc
or
js
jno
pop
add
mov
ret
clc
mov
dec
insl
cmp
or
cmpsl
std
mov
int
xchg
mov
cmpsl
xchg
xlat
mov
xlat
testb
xor
jae
mov
addr16
xorb
xchg
test
not
out
sbb
push
in
push
pop
inc
data16
addr16
mov
sahf
pusha
scas
or
lock
fisubrs
pop
ss
pop
ja
je
and
push
and
repnz
sti
vpavgw
stc
cmp
les
pop
in
mov
lret
in
and
push
gs
mov
adc
cmp
sub
cmp
leave
clc
fcmove
jmp
adc
fucomp
or
fiadds
jbe
sbb
pop
in
lcall
addr16
fdivr
test
add
inc
mov
cmpsb
push
xchg
sub
repnz
pop
push
out
and
jnp
shlb
jmp
test
js
out
imul
xchg
pop
out
pop
idivl
pop
adc
daa
idiv
sbb
jae
add
xchg
jecxz
push
push
dec
adc
call
shlb
xchg
push
push
and
cmp
xchg
neg
out
push
push
ss
mov
adc
cmp
pop
mov
jle
in
loop
sar
ret
ljmp
mov
inc
mov
cmp
and
adc
add
xchg
lock
shl
movsl
ljmp
mov
push
jb
push
xor
xor
pop
xor
inc
mov
sar
cmpsl
ljmp
out
pop
ss
es
push
daa
push
push
jbe
data16
addr16
xchg
mov
cmpsb
mov
cmpsl
xchg
test
not
out
pop
ss
es
push
daa
push
push
jbe
data16
addr16
xchg
mov
lock
jmp
push
dec
jg
stc
cmp
pop
leave
xchg
xchg
jmp
neg
jp
lret
pop
xchg
sub
push
lahf
into
add
inc
ljmp
inc
repz
jl
aas
imul
inc
sbb
pop
push
ljmp
jnp
adc
out
aam
and
pusha
fildll
mov
aaa
cwtl
into
adc
lcall
enter
movl
loopne
jmp
leave
jge
adc
ret
add
stc
and
mov
and
test
cld
jmp
cmp
lods
xchg
cmc
sub
dec
adc
loope
pop
andl
mov
jmp
dec
xor
les
or
cmp
xchg
neg
mov
imulb
decl
cmpb
call
dec
rolb
mov
pusha
scas
jecxz
xchg
enter
fmull
loope
adc
jp
fisttpl
mov
mov
add
ljmp
add
push
push
gs
or
test
jl
test
and
mov
push
mov
mov
fsubrp
das
cltd
jo
adc
dec
sbb
mov
add
int3
sub
push
pop
pop
inc
lock
es
inc
and
dec
rcrl
movsb
sub
shrl
mov
clc
outsb
inc
sahf
inc
fnstcw
test
mov
pop
cltd
call
sbb
popa
mov
clc
stos
xchg
jge
push
mov
cli
and
inc
mov
out
xor
sub
jmp
popa
or
ror
ficompl
push
push
push
repnz
xor
push
sub
ds
outsl
pop
xchg
xor
lahf
cld
add
pop
negl
ret
add
xchg
subl
popf
addr16
jb
push
pushf
out
jmp
sbb
mov
or
mov
and
popf
xchg
jge
sbb
push
data16
add
test
mov
dec
and
fidivs
pushf
push
sti
sub
out
push
jmp
xchg
lcall
dec
xlat
jge
lret
mov
mov
jno
push
jl
stos
clc
xchg
aad
fs
jmp
push
out
std
test
shrl
inc
mov
dec
or
push
mov
add
in
jmp
mov
xor
inc
pop
outsl
xlat
lret
addr16
adc
testl
push
sbb
fidivs
mov
ds
and
mov
xchg
push
inc
mov
movsl
xchg
sub
push
stc
xchg
dec
addr16
hlt
roll
insb
stos
std
push
aaa
add
std
sbb
aaa
dec
cwtl
jo
jl
test
cmp
in
mulb
cltd
jne
sub
pop
pop
loope
out
rclb
pusha
and
fstpt
in
shlb
pop
xor
pop
test
call
xchg
frstor
jno
adc
loopne
sub
lea
int3
cmp
std
or
notl
and
push
xchg
jb
sarl
sbb
adc
dec
in
pop
cmpsl
call
in
inc
fmuls
stos
out
cwtl
stos
xchg
imul
arpl
bound
dec
adcb
push
pushf
bnd
inc
iret
push
sbb
jns
js
jge
lea
hlt
mov
jmp
scas
mov
xchg
test
test
shlb
iret
mov
and
jae
hlt
gs
add
addr16
out
jae
sbb
push
jmp
adc
hlt
fidivs
cmc
xchg
stc
dec
add
sahf
cmp
push
inc
test
xor
mov
mov
insb
jb
mov
adc
xor
in
dec
xchg
mov
jmp
lds
lret
push
push
lods
nop
push
daa
loopne
lahf
push
ja
pop
pop
jge
xor
and
stos
loop
shlb
in
pop
shrl
sbb
mull
mov
xor
mov
push
jns
mov
cwtl
xchg
cmp
mov
or
icebp
adc
ficompl
in
shl
testb
shll
or
movsb
imul
divl
add
jne
xor
sbb
mov
mov
cmp
mov
xor
adc
jp
daa
mov
mov
adc
mov
push
dec
rcr
cmc
pop
lcall
mov
push
insl
out
out
mov
jno
mov
and
outsl
dec
mov
jle
cld
out
cld
das
push
int3
push
shlb
shrl
daa
xchg
mov
jp
dec
or
loope
add
sub
push
dec
push
inc
adc
mov
mov
jecxz
ljmp
xor
in
add
xchg
fimuls
or
sti
xor
loope
lea
mov
mov
and
jl
mov
and
jne
push
add
fmul
sbb
out
jno
in
jecxz
dec
in
sbb
dec
mov
stc
xlat
in
js
fs
das
arpl
add
lods
push
jecxz
xchg
sub
fldl
outsl
cltd
shll
jo
inc
das
aam
lock
scas
loop
mov
jo
xor
mov
clc
imul
in
inc
xor
and
cmp
cmc
mov
out
sahf
hlt
xlat
sbb
jg
bound
pop
cmp
ss
add
pop
mov
push
ret
lods
and
jae
decb
jl
imul
sbb
dec
js
int3
or
rclb
mov
std
and
aaa
mov
fdivrs
mov
push
pop
sti
jmp
cltd
mov
mov
imul
out
jg
cmp
mov
pop
test
mov
adc
or
mov
aaa
lds
jbe
push
in
scas
clc
cmp
iret
std
mov
xchg
test
push
mov
popa
movsb
inc
lret
pop
insl
jns
lock
rclb
mov
shlb
inc
push
sub
or
mov
sti
in
hlt
aas
adc
xor
inc
aaa
in
enter
pop
shl
out
and
outsb
fldcw
faddl
jno
jl
adc
sbb
leave
push
enter
xchg
pop
fs
outsb
push
xor
pop
or
clc
das
adc
fsubrl
xorl
test
add
pop
push
xchg
jp
les
iret
es
pop
xor
mov
mov
rclb
xlat
dec
movsb
inc
and
mov
div
ds
repz
mov
mov
repz
lock
stos
pop
andl
adc
cld
xchg
and
xchg
adc
ja
mov
daa
adc
ficoms
pop
and
call
ret
mov
in
cmp
inc
or
lcall
cmpps
gs
dec
fdivrl
aaa
add
push
pop
out
sti
mov
ror
push
push
mov
in
pop
aas
jge
push
cltd
or
or
leave
insb
cmp
mov
loop
hlt
fwait
push
fldt
fs
das
xor
cltd
push
nop
das
jl
lcall
inc
fs
jecxz
or
lods
sub
leave
loope
xchg
mov
aaa
or
arpl
test
jno
and
and
lret
push
push
pop
push
fsubl
cli
stos
jns
dec
sti
adcl
push
push
gs
push
xchg
jecxz
addr16
outsb
add
outsb
ret
fdivrl
hlt
cmp
into
or
cmpsl
pop
adc
sbb
lea
icebp
call
scas
xor
sbb
mov
sbb
xor
pop
push
pop
mov
roll
in
or
fs
fbld
rorl
daa
fwait
xchg
xchg
ds
add
sar
mov
dec
xor
pop
mov
pop
hlt
push
push
divl
mov
loop
fdivrp
sbb
pop
and
cmp
xor
loopne
pop
sub
in
mov
repz
icebp
push
decb
fisttpll
jp
cmp
or
mov
fidivrl
sub
xor
sub
hlt
cs
jbe
xor
repz
inc
or
addr16
mov
movsb
nop
sti
test
xor
cmp
dec
test
ret
jle
mov
add
dec
slwpcb
mov
adc
cmc
add
push
mov
lods
or
add
push
insl
jp
or
test
xchg
fdivrl
insb
mov
cs
mov
xchg
jmp
shlb
and
int3
push
call
pop
fcomps
jle
lods
and
out
insb
jae
xchg
mov
jns
mov
aam
fs
stos
pop
adc
cmp
sbb
xchg
out
nop
test
ds
mov
test
in
mov
xlat
lods
les
fldl
cwtl
sti
xor
jp
jmp
or
icebp
mov
jae
push
or
pop
movsl
das
jb
cmp
loop
out
lock
ffreep
pop
lods
cmpsb
aaa
pop
push
arpl
scas
in
mov
insb
test
jle
mov
sbb
mov
clc
add
lea
cli
or
rol
cmc
dec
repz
aaa
push
mov
mov
es
pop
jecxz
popa
sub
stos
push
insl
jo
inc
mov
pusha
pop
mov
mov
and
ss
sbb
xchg
jmp
lret
data16
repnz
mov
pop
mov
add
lods
stos
dec
hlt
lods
je
cltd
ret
in
jno
mov
xchg
jbe
dec
sarb
xor
icebp
dec
adcb
pop
add
mov
negb
or
fisubs
mov
mov
pop
cmpsl
push
addr16
in
popf
in
pusha
popa
je
outsb
mov
mov
add
sarb
hlt
sbb
xchg
mov
into
shlb
mov
mov
mov
fiadds
mov
push
shrl
into
pushf
mov
or
or
repz
out
xchg
mov
jb
pop
adcl
adc
mov
repz
shll
lea
mov
push
cmp
fwait
shl
fstl
rol
fimuls
adc
pop
sbb
push
movsl
outsl
repnz
adc
mov
iret
or
push
mov
mov
shll
pop
nop
sti
ror
xor
xor
push
cmpsb
mov
dec
pop
lods
cmp
pop
sbb
movsl
jg
insb
daa
sub
mov
insl
mov
inc
pop
push
cli
push
mov
popf
dec
ret
xor
pop
lds
jmp
dec
enter
orl
or
lods
pop
les
imul
and
fdiv
inc
cmp
mov
sti
xor
loopne
jno
repnz
mov
mov
jne
push
sbb
sub
cmp
ss
jne
push
in
fwait
jno
xchg
cmp
mov
ljmp
xchg
mov
imul
jbe
or
or
cld
movsl
push
lds
cld
sbb
in
mov
mov
push
out
add
mov
cli
movsl
add
daa
or
push
mov
xchg
sbb
add
movb
mov
adc
cmp
clc
jno
and
pop
inc
xchg
stos
inc
stos
cmp
negl
or
das
inc
mov
xor
sub
ljmp
cmpsb
fstps
dec
adc
out
cli
test
call
mov
lcall
push
xor
dec
and
cmc
push
xchg
sti
loope
in
or
add
loope
addr16
js
sbb
lods
cmp
dec
in
fcmovnb
in
dec
push
outsl
in
out
hlt
xor
clc
jp
pop
dec
pusha
mov
pop
fsubrp
push
lea
into
lods
push
int3
pop
fmuls
rorl
mov
test
mov
pop
movsl
fistl
mov
add
mov
sub
jl
mov
lret
or
daa
mov
jl
fwait
adc
popf
sbbb
enter
loope
loop
xor
inc
std
jle
popa
push
mov
loopne
movsb
test
mov
inc
ljmp
sbb
jl
addb
pop
sbb
or
push
int3
or
mov
mov
xchg
unpcklps
imul
icebp
xchg
sbb
lods
adc
test
mov
xchg
jo
xchg
loop
pop
mov
pop
mov
fldlg2
push
xchg
cmp
dec
cmc
xor
xchg
lahf
lret
sub
enter
andl
mov
int3
or
lcall
adc
adc
xor
mov
pop
fmull
add
jg
dec
in
subl
xor
js
lock
cmpsl
cld
mov
mov
ret
and
xchg
and
ret
shll
push
imul
cmp
xor
xlat
mov
or
imul
xchg
les
fists
out
pushf
scas
xor
fldcw
xchg
push
sbb
xchg
adc
stos
push
pop
jb
add
inc
aaa
test
inc
lods
ja
pop
push
scas
jb
leave
xor
push
inc
cwtl
sahf
jno
xchg
fisttpll
fldcw
mov
fs
xchg
jle
adc
pushf
aas
pop
out
xchg
pop
dec
jnp
xor
add
xchg
pushf
jnp
mov
loop
pop
notl
sti
das
andl
xchg
fnstsw
dec
push
lret
outsb
shl
mov
jmp
inc
push
mov
mov
or
sub
pusha
xchg
sbb
xchg
sbb
orl
scas
pop
jmp
pushf
sar
add
aam
test
lret
xchg
test
adcl
mov
int
or
ljmp
add
inc
addr16
shll
push
and
sub
inc
aam
loop
push
mov
stos
js
and
mov
pop
dec
xchg
mov
or
inc
xchg
lock
push
sub
aad
fldl
fstl
mov
sbb
stos
mov
insl
mov
fs
or
pop
fists
out
sub
fsubp
jp
cmc
push
aaa
prefetcht1
cmp
xlat
cmp
sbb
rolb
cmc
outsl
inc
xor
jmp
adc
add
sbb
mov
dec
stos
mov
jno
loop
inc
movsb
cld
ss
inc
xchg
nop
movaps
and
jmp
xchg
popf
jae
inc
xor
and
ja
cmp
aad
out
mov
pop
bound
stc
cmp
in
in
sbbb
jae
jecxz
cwtl
sti
das
int
mov
cmpsl
call
mov
xchg
int
ret
mov
movsb
adc
fdivrs
repnz
adc
in
adc
and
sub
mov
insl
ss
repnz
add
fstpt
fs
mov
and
sbb
and
or
add
lds
hlt
das
sbb
push
stos
cmp
xchg
sub
rcl
loope
jl
lcall
pop
out
and
or
jnp
enter
jl
xor
fmulp
shlb
mov
and
iret
ss
mov
lea
adc
loopne
mov
test
and
sub
fcmovnu
or
movb
repnz
test
fistps
push
add
jo
mov
js
mov
sbb
inc
aas
xchg
or
mov
cmpsb
push
lahf
scas
xchg
int3
addr16
psubq
mov
sbb
mov
leave
or
push
test
out
mov
clc
mov
sub
addb
mov
call
or
inc
movsl
aas
inc
mov
jbe
stos
xor
xchg
lea
shl
cmp
imul
ljmp
bound
negb
pop
and
xchg
insb
or
fdivs
scas
pop
inc
out
pop
cmp
les
sbb
sbb
mov
jb
loope
dec
das
idiv
adc
leave
fstl
push
pop
outsl
cmpsl
dec
clc
inc
int3
out
mov
out
sahf
inc
cltd
xor
xchg
fnstcw
gs
mov
mov
or
repz
sbb
aam
notl
cmc
mov
push
sbb
shlb
push
pushf
push
xchg
int
mov
sub
gs
pop
or
cmpsl
or
mov
xor
mov
lock
push
pop
mov
xchg
lds
jmp
addb
mulb
dec
fucom
out
dec
cltd
nop
xchg
sub
mov
add
sarl
pop
xchg
and
xchg
out
xor
aam
jnp
push
dec
clc
rcr
ror
lock
pop
sub
in
mov
jnp
add
jp
scas
aas
sahf
ljmp
sbb
fnsave
out
cmp
pop
push
fwait
test
sti
lods
sub
incl
ljmp
add
cmpsl
or
cs
repnz
mov
out
push
out
clc
mov
adc
hlt
and
sbb
push
lahf
cs
cmpsb
and
jns
and
or
cli
xchg
inc
mov
push
sub
loope
cmpsb
pop
pop
divb
rcrl
ret
out
add
aam
aam
jg
and
mov
mov
dec
mov
inc
cmpsl
insl
xchg
lds
adc
or
ret
lcall
or
fnsave
jb
adc
push
jns
push
pop
inc
outsl
hlt
orl
in
fnstsw
cmp
xor
lds
inc
and
hlt
addb
gs
outsb
xchg
or
xor
add
jle
in
sbb
xor
rorb
sbb
adc
daa
mov
cmp
inc
push
scas
rep
and
jmp
inc
xchg
clc
rcrl
sahf
mov
into
stos
ret
xchg
pop
subl
jbe
or
cmp
jb
clc
test
cwtl
ljmp
sti
call
add
addb
jb
pop
jl
and
jmp
scas
fwait
iret
jb
je
sub
xchg
jg
scas
push
test
insb
test
aas
loope
jg
sbb
mov
fcomps
add
mov
int
sbb
sbb
sahf
pop
cmc
nop
aaa
push
xchg
jp
push
test
daa
mov
je
roll
inc
lea
xor
mov
nop
mov
jmp
xchg
push
sahf
or
shlb
pmuludq
adc
adc
aaa
dec
xchg
mov
outsl
xchg
xor
mov
lods
mov
mov
push
dec
mov
rcrl
popf
xchg
mov
icebp
pop
fnstcw
out
mov
bound
dec
jg
cmp
cli
add
addr16
aad
jbe
lds
imul
popa
sub
pop
jle
xor
inc
sahf
clc
std
sti
xchg
dec
mov
mov
mov
mov
ja
mov
xlat
test
or
cwtl
roll
fcoml
mov
hlt
adc
arpl
and
jnp
jmp
lock
hlt
cmpsl
xchg
sbb
push
jns
sub
popl
sub
push
cs
mov
cmc
push
fistl
sbb
add
sbb
test
xchg
aam
aaa
gs
sbb
push
inc
pop
or
mov
leave
push
xor
outsl
inc
or
mov
push
sub
dec
ret
dec
mov
dec
aad
icebp
cwtl
xchg
popa
or
jmp
mov
ds
aam
xchg
lods
dec
push
lret
aaa
add
scas
sub
pop
scas
fcompl
fcmovnb
fcompl
arpl
cltd
rolb
xor
cli
out
or
xor
inc
add
pop
push
ds
leave
mov
decl
movsb
sbb
fldt
enter
xor
sub
daa
push
rolb
rcr
mov
addr16
mov
cmc
push
icebp
push
cmpsb
int3
sar
inc
mov
subl
xchg
aam
jae
and
imul
daa
add
push
cmpsb
orl
into
aad
sbbl
push
repnz
push
pop
stos
xor
iret
out
sub
mov
outsb
mov
jbe
adc
add
adc
int
mov
decb
pushf
pop
xor
aam
jbe
mov
scas
xchg
hlt
nop
stos
daa
push
xchg
cmovp
das
and
iret
movsl
leave
add
jmp
or
icebp
jmp
lods
aad
in
mov
sbb
push
add
in
cltd
lds
cltd
jl
push
mov
insb
pop
pusha
iret
mov
and
xchg
or
jle
loopne
cmp
or
in
fwait
xchg
dec
mov
call
or
jno
popf
jmp
es
movsb
or
incb
push
sub
mov
mov
adc
sub
je
dec
loope
xor
into
mov
outsb
fdivrp
pushf
inc
sbb
aaa
adc
mov
shlb
mov
fmuls
lods
and
scas
cmp
pusha
call
test
rorb
fldenv
adcl
and
inc
xchg
call
movsl
sbb
lahf
inc
adc
sbb
lds
mov
imul
pop
sbb
pop
stos
fwait
dec
hlt
mov
ret
push
jp
fisubs
fistps
and
popa
lret
cli
mov
dec
adc
out
in
push
stos
adc
popa
pop
fsubr
sbb
dec
lcall
leave
and
jmp
xor
jne
mov
mov
adc
lods
das
pop
xor
incb
testl
rcr
mov
aad
push
testl
add
mov
popf
xchg
pop
mov
mov
inc
pop
inc
xchg
outsb
cmp
mov
cmp
dec
icebp
push
std
inc
fistl
pop
gs
xor
jge
dec
scas
xor
or
testl
ss
push
pop
cltd
push
push
jnp
mov
int3
sbb
repnz
xchg
out
out
pop
ss
es
push
daa
push
push
jbe
data16
addr16
xchg
mov
cmpsb
mov
cmpsl
xchg
test
not
out
pop
ss
es
push
daa
push
push
jbe
data16
addr16
xchg
mov
test
mov
not
out
pop
aaa
pop
and
push
daa
xorps
data16
push
mov
xorl
out
push
addr16
call
push
daa
jno
push
iret
push
mov
cwtl
ds
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
mov
loop
sarl
pop
in
xchg
pop
or
add
add
add
add
flds
sub
add
add
mov
add
add
add
pop
add
sbb
stos
add
pop
add
add
add
add
add
add
add
add
push
add
add
add
pop
add
adc
push
add
add
xor
les
cmp
add
add
add
add
push
dec
add
add
add
loope
nop
add
add
add
add
add
add
fldl
xor
add
sub
add
movsb
add
outsb
add
add
add
add
fldl
or
push
in
add
lret
add
add
add
add
add
or
les
xor
jae
inc
add
add
add
add
mov
pop
add
add
xchg
add
lcall
add
xor
mov
add
add
pop
add
add
pop
add
add
add
add
iret
add
sbb
pop
add
add
add
fadds
cmp
test
loop
xor
push
add
add
add
add
add
add
and
add
iret
add
test
insb
add
add
ret
add
add
add
add
test
push
add
add
add
add
add
add
mov
add
add
add
cwtl
add
mov
xor
jns
xchg
add
add
add
adc
scas
add
add
add
fldl
cltd
add
sbb
pop
add
add
add
add
add
pop
add
add
add
xor
push
add
add
xchg
add
add
add
add
add
add
add
add
add
addl
add
fldl
daa
add
mov
xor
add
add
or
add
movsb
add
insl
add
add
add
add
int
add
pop
add
push
add
pop
add
fiaddl
stos
add
sbb
pop
add
add
add
movsb
add
add
add
add
add
test
nop
add
add
add
pop
add
fiaddl
nop
add
movsb
add
add
push
add
add
dec
add
lret
add
add
add
add
add
add
add
fadds
adc
pushf
add
add
push
add
aam
pop
add
addl
jle
xor
xor
aam
pop
add
add
add
add
add
add
add
add
out
add
add
jg
push
add
add
add
scas
add
add
add
add
data16
add
add
add
inc
add
fildl
add
add
add
movsb
add
add
add
pop
add
add
add
add
lret
add
add
xor
add
add
add
add
addl
mov
movsb
add
add
movsb
add
add
add
add
add
add
loop
fiaddl
jae
pop
add
or
add
sbb
addl
mov
push
mov
test
pop
je
mov
popa
das
insb
sti
mov
push
push
sbb
test
mov
xor
out
lahf
lods
mov
adc
icebp
movsb
outsl
mov
xchg
cli
daa
mov
repnz
xor
outsb
fwait
push
je
mov
test
lods
jo
xlat
push
mov
xchg
clc
cmc
lods
push
add
push
pop
mov
repz
call
xorl
push
loop
jge
ret
stc
inc
or
xchg
shlb
and
pop
pop
pop
movsl
hlt
jle
mov
lods
sarl
add
imul
jne
negb
lahf
and
jl
sbb
mov
rorb
outsb
adc
fwait
mov
arpl
push
mov
cmp
vmovaps
pop
pusha
cmpsb
xor
pop
shrd
pop
jmp
mov
sub
fs
add
cmp
mov
loop
ljmp
fcoml
push
xor
xchg
mov
and
fstp
stos
clc
xlat
scas
addl
jnp
ljmp
lea
imul
mov
clc
and
adcl
push
jo
std
lahf
call
mov
je
adc
in
pop
loope
or
or
icebp
fdivp
dec
fs
fnstenv
sub
mov
dec
nop
dec
aaa
testb
rcrl
pop
jnp
inc
cmp
cmp
cld
in
or
loop
cmp
movsl
push
mov
fstps
fs
xor
mov
adc
pop
pop
cmp
ja
sarl
movsl
pop
sub
sbb
decb
icebp
pop
fwait
xchg
lods
mov
repnz
divl
adc
test
sbb
ja
lods
mov
cmpsl
xor
lcall
mov
mov
push
inc
test
xchg
push
push
sub
jae
mov
lea
jg
andb
pop
add
int3
scas
inc
xchg
jae
mov
fldcw
dec
push
bt
push
popf
mov
mov
sbb
call
pop
ja
adcb
insb
push
or
pop
pop
cmp
lcall
xor
fbstp
xchg
outsb
push
ret
iret
jl
mov
ja
pop
push
shlb
gs
jp
pop
lods
sbb
lret
jno
dec
or
mov
dec
cmp
ds
jl
and
sbb
and
sub
dec
sub
xor
cmp
cmp
sub
push
cmc
adc
and
sbb
push
cmp
in
cmp
dec
xor
or
sbb
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
