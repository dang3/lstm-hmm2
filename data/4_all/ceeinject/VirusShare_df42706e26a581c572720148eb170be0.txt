adc
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
imul
gs
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
cmc
and
aad
lds
loopne
mov
jbe
addr16
pop
inc
aaa
xor
addr16
xchg
aad
lds
xchg
out
fnstenv
gs
push
das
inc
aaa
xor
addr16
push
aad
mull
lds
inc
xor
inc
and
adc
xor
insb
adc
hlt
lods
sarb
fs
ss
gs
fdivrl
cwtl
inc
cmp
test
push
sub
cmp
shlb
or
clc
call
bound
or
push
cmp
out
into
mov
sub
pop
pop
fisubrl
es
mov
stos
xchg
mov
mov
xchg
xchg
push
mov
pop
out
daa
test
sub
mov
mov
cwtl
mov
cmpsb
push
pusha
push
pop
cmp
hlt
test
imul
insl
inc
fadd
into
gs
add
push
sahf
mov
and
xchg
xchg
divb
push
and
icebp
das
pop
shrl
jbe
rorb
in
aad
lds
xchg
out
gs
gs
xor
jg
inc
nop
xchg
fcmovnbe
lret
xchg
add
addb
mov
cmp
jne
add
shll
xchg
out
test
mov
les
data16
jne
pop
ret
push
jl
outsl
add
hlt
in
xchg
lret
mov
xlat
xchg
out
divl
gs
push
daa
inc
aaa
xor
addr16
xchg
aad
lds
xchg
out
divl
gs
push
daa
inc
aaa
xor
addr16
rorl
pop
mov
sbb
dec
mov
push
sub
sub
mov
mov
mov
xor
push
loopne
je
fsubrs
stos
je
push
mov
push
clc
add
inc
in
int
ss
cmpsb
movsb
aam
xchg
cmp
adc
call
aaa
clc
sbb
mov
mov
cmp
out
movsb
cmpsb
push
jecxz
lahf
mov
cmpsb
mov
sbb
outsb
sub
jnp
insl
and
push
or
mov
loopne
pop
dec
mov
mov
sbb
sub
or
test
push
push
inc
cli
mov
mov
shlb
lcall
inc
dec
sbb
scas
mov
je
pop
sbb
xchg
mov
xchg
bound
push
lea
repnz
inc
fwait
lcall
adc
sbb
lods
sub
jle
loope
mov
jmp
into
xor
jl
fmuls
push
jnp
xchg
mov
fwait
mov
mov
or
jl
lahf
mov
flds
mov
negb
jo
and
dec
mov
cmp
fbstp
int3
ret
popf
add
lods
cmp
and
cmp
push
sub
fwait
inc
lods
notb
cmc
push
add
aaa
or
pop
lods
mov
pop
xor
leave
xchg
cmp
jb
imul
frstor
and
xchg
stos
jns
jp
mov
adc
dec
lret
out
cmpsb
pop
adc
aas
cmc
popw
dec
push
repz
jo
int
in
xchg
fidivrl
or
inc
hlt
sub
sub
ljmp
arpl
mov
jl
mov
in
and
lods
jae
adc
je
adc
stos
add
ljmp
mull
rclb
pop
das
imul
xchg
rorb
cmpsb
nop
andl
sbb
add
jns
jecxz
fcomp
jb
fimuls
push
adc
push
jb
mov
jmp
mov
inc
aam
push
cmpsl
js
cmp
cmp
and
jnp
rorl
push
pop
idivl
rcr
sbb
mov
xor
mov
xchg
cmpsb
adc
es
pop
addr16
test
cmp
adc
sbb
addr16
xorl
inc
fldcw
push
jge
cmp
pop
add
inc
xchg
pop
pop
loope
and
test
push
dec
jbe
out
neg
sbb
nop
adc
lahf
mov
out
jns
add
in
xchg
jno
mov
faddl
ficoms
int3
or
inc
jne
adc
clc
pop
adc
mov
cmc
lods
xchg
xchg
ja
push
dec
ds
sbb
push
sub
orl
icebp
sbb
mov
imul
push
fsts
inc
enter
sbb
imul
ror
into
and
cmp
inc
imul
loope
mov
movsl
lcall
xorl
lods
cmc
aam
cmp
enter
repz
data16
mov
mov
lahf
push
push
sbb
test
and
cmpsb
push
test
ret
mov
push
ljmp
mov
das
stos
pop
adc
lcall
push
lret
sbb
jae
outsb
enter
js
mov
or
and
pop
dec
insb
jge
scas
ljmp
ljmp
ljmp
daa
xchg
mov
lods
stos
adc
inc
cmp
dec
js
pop
cmpsl
cmpsl
adc
jne
xlat
mov
lods
sub
push
or
divb
or
push
or
rcr
sar
shrl
cs
xchg
cmp
repz
and
ret
gs
mov
push
inc
dec
or
xchg
jecxz
clc
addr16
int
cltd
push
dec
lahf
fsts
sub
and
lret
cmp
pop
ljmp
mov
aad
mov
jl
pop
popa
repnz
fnstenv
xorb
fimull
bound
push
fmull
inc
sbb
push
aas
dec
repnz
mov
mov
push
sarb
push
stc
repz
push
pop
fwait
push
nop
nop
push
and
lcall
cmp
into
cmovg
cmpsb
cmp
and
addr16
jae
lret
push
fistps
ret
out
sub
addl
adc
call
jb
cmp
lods
dec
mov
mov
call
inc
negl
adc
push
movsb
test
jecxz
sbb
imul
test
sbb
mov
popf
pop
lahf
ljmp
mov
adc
mov
in
jb
inc
jmp
push
xchg
mov
daa
clc
mov
cmc
setle
les
mov
or
xchg
dec
roll
test
xor
sar
jecxz
pop
mov
inc
ja
test
jo
popa
inc
pop
daa
int3
push
shlb
addr16
clc
enter
in
pop
mov
out
rcr
mov
jne
xchg
outsb
adc
fildl
cli
in
xchg
mov
add
mov
lock
jbe
cmpsb
mov
adc
or
mov
pusha
ds
js
rcrb
cmpsl
pusha
aam
mov
icebp
cmc
aam
mov
nop
sbb
inc
stos
std
adc
cmp
sbb
and
icebp
aaa
cmp
addr16
pop
daa
shll
inc
enter
and
jl
cmpsl
les
or
pop
fsub
inc
xchg
jnp
and
add
testl
fs
mov
jge
dec
xchg
cwtl
mov
mov
pop
push
stos
pop
loopne
push
movsl
sbb
adcl
cmpsl
mov
jns
pop
jg
push
mov
cs
sbb
pop
imul
popa
sbb
mov
lcall
sbb
lcall
enter
ljmp
divl
mov
stos
les
sub
adc
clc
dec
pand
dec
fnsave
fs
out
mov
int
push
test
fcoms
es
test
dec
std
int3
dec
test
movsl
call
loopne
shrb
sbb
rcrl
stos
lods
cld
jp
pop
pushf
or
jo
and
jno
xlat
lahf
or
repz
cs
sub
rolb
push
push
loopne
lods
pushf
imul
pusha
lea
sub
iret
mov
loop
repnz
add
sub
lods
mov
gs
or
jmp
mov
push
inc
nop
pop
rdtsc
repz
push
sub
push
xor
aaa
fwait
shl
inc
add
aaa
mov
jbe
cwtl
cmpsl
mov
pop
and
movsb
fmul
xchg
out
out
popa
je
sub
loope
lods
lcall
mov
dec
inc
lds
cwtl
xor
inc
jno
fnstsw
inc
enter
test
std
or
pop
subb
push
movsl
add
scas
xchg
sub
inc
hlt
int3
sahf
jne
mov
mov
sbb
lds
cmp
inc
and
xorl
jl
xchg
add
xchg
fimuls
aam
xor
fidivrl
fistps
in
xchg
sub
addb
pop
sub
ds
sbb
mov
iret
addl
fwait
jge
push
int3
dec
inc
inc
out
jo
sbb
lods
sbb
mov
pop
mov
ret
sub
sbb
gs
sahf
cld
lea
aad
pop
js
dec
dec
loope
inc
outsb
lret
sbb
push
jg
sub
sbb
stos
xchg
je
push
sbb
into
mov
leave
pusha
or
or
aam
jp
icebp
pop
gs
xlat
test
arpl
dec
outsb
mov
xor
jg
aaa
out
or
cmpsb
mov
cli
push
jne
test
mov
insb
imul
add
test
pop
jg
push
pop
mov
mov
mov
mov
mov
lcall
pop
insl
ret
sub
xor
dec
mov
sub
add
stos
cltd
sbb
stc
in
rcrl
or
sub
jmp
pop
popf
int
aas
sub
pop
dec
and
mov
enterw
mov
sbb
mov
aam
jg
or
je
sub
adc
out
mov
out
jp
jecxz
outsb
lcall
mov
lcall
js
jo
add
or
or
push
cmpsb
sub
data16
lret
es
mov
imul
lods
fists
push
aas
mov
inc
and
cmpsl
test
inc
inc
out
and
mov
enter
pop
adc
adc
repnz
fwait
cmp
pop
mov
xchg
les
jle
sbb
inc
pop
push
insb
roll
or
pop
icebp
pushf
stos
add
cmp
test
mov
cmp
cmp
lock
or
jno
adc
sbb
pop
or
and
add
orl
inc
adc
pop
call
mov
fcomps
jno
mov
js
sub
scas
sub
or
lcall
daa
push
jbe
es
jge
data16
or
dec
jne
jp
les
lcall
cmpsb
dec
adc
xor
cli
ficoml
fs
ret
jmp
mov
sbb
rcl
clc
outsl
int3
mov
or
xchg
stos
pop
enter
jnp
pop
or
push
mov
cmp
xchg
scas
cmp
aam
popa
push
jge
lea
test
sbb
cmp
lret
shl
jmp
and
mov
cmp
data16
mov
xchg
push
mov
cmp
bound
hlt
fisttpl
clc
cmp
cld
fdivr
arpl
mov
loope
mov
pop
int3
inc
mov
and
subl
pop
fadd
or
adc
rcl
xchg
scas
xchg
adc
aam
aas
sbb
out
lock
cmp
jg
push
mov
or
sarb
sbb
repz
mov
push
testb
daa
mov
into
mov
imul
fildl
mov
insl
sbb
or
mov
repz
out
dec
inc
xchg
out
je
scas
test
and
pop
jp
sub
negl
push
pop
dec
cmpb
test
jmp
ja
inc
popa
jbe
xchg
test
xor
dec
jle
push
lcall
jbe
stos
mul
cmc
jb
inc
mov
jmp
jecxz
mov
jecxz
cmpsl
jb
mov
vunpckhpd
outsb
push
lcall
mov
sub
add
push
loope
cmp
movsb
negl
xchg
pop
xor
and
xchg
fidivrl
push
mov
mov
push
loop
adc
sbb
push
movsl
mov
dec
fadd
icebp
js
inc
mov
out
and
adc
sub
mov
shlb
je
push
pop
sub
adc
mov
jnp
inc
rolb
xchg
enter
push
jae
adc
inc
add
dec
testb
sub
inc
and
and
cld
hlt
cwtl
cmp
and
and
cmp
jl
mov
addr16
idivb
jp
popf
cwtl
jle
inc
jecxz
mov
mov
sbb
and
dec
pop
jge
scas
mov
leave
jno
or
cmpl
bound
popf
mov
repz
sub
adc
out
xor
call
clc
xchg
imull
inc
sbb
rcrl
loope
xchg
bound
arpl
mov
sbb
arpl
adc
jae
test
out
mov
and
fstpt
aaa
shll
xor
movsb
test
int3
into
inc
mov
xlat
pusha
fistps
std
lret
punpckhbw
pop
ss
xchg
jge
and
test
insb
cmp
and
xchg
pop
xchg
xor
fldl
test
imull
pop
cltd
fdivrs
cs
xchg
mov
loop
push
shl
dec
xor
les
or
push
insl
ljmp
dec
push
stos
dec
fisttpll
repz
insl
icebp
push
pushf
ljmp
push
mov
mov
push
and
insl
jne
in
movsl
mov
and
xchg
fiaddl
pushf
repnz
inc
mov
add
xchg
fstpl
adc
dec
sub
into
out
ror
push
adc
int3
adc
fwait
in
mov
fdivrl
add
je
insl
push
cld
popf
popf
arpl
push
addr16
dec
stos
loope
test
out
xchg
jae
mov
outsb
mov
inc
inc
xchg
das
dec
push
loope
or
push
out
imul
cli
in
dec
cmp
push
dec
push
popa
cli
movsl
shlb
shr
cmp
xchg
pop
mov
pop
mov
aaa
sbb
test
pop
mov
vpunpcklbw
xchg
cmpb
rorl
call
test
pop
mov
lea
xchg
jne
int3
or
jnp
sahf
jno
hlt
adc
out
or
les
add
push
and
or
xor
ss
mov
pop
arpl
push
xchg
push
rcl
bound
dec
std
xorb
bound
inc
dec
sbb
mov
in
mov
fbstp
xchg
xchg
scas
jmp
or
jle
pushf
mov
decb
leave
clc
test
adc
aaa
int3
clc
sub
sbb
jns
cwtl
aad
andl
test
push
pop
jno
or
fwait
cmp
out
dec
lret
mov
loop
ret
stos
lods
xor
fstpt
icebp
jg
push
adc
mov
out
push
adc
mov
ds
lock
xchg
divl
fwait
push
adc
js
xor
enter
loopne
push
add
cli
clc
or
outsb
pusha
rcrb
aad
sbb
pop
sbb
fwait
dec
addb
fidivs
and
stos
fcompl
jecxz
dec
xor
add
or
shlb
ret
pop
adc
lock
mov
test
ud0
sub
daa
lds
ret
xchg
hlt
mov
xor
pop
and
fs
jb
das
jl
sub
mov
nop
mov
and
out
inc
fidivrs
cltd
cmp
or
add
pop
xor
movsb
mov
cli
sub
inc
ficomps
pop
ljmp
test
mov
aad
es
aam
xor
pop
jnp
stc
mov
repnz
pop
ffree
and
test
jmp
sbb
push
and
pop
shrb
cltd
fs
xchg
jnp
divb
cmp
pushf
mov
ds
popa
mov
jle
mov
stos
sbb
inc
cmp
mov
mov
and
icebp
or
subb
stos
mov
jno
out
in
push
call
sub
pop
lret
pushf
sub
mov
iret
aam
push
aad
sahf
jmp
shrl
lcall
cmp
xor
movsl
sbb
mov
pushl
ret
out
xor
push
jb
shrl
enter
jge
repz
dec
push
mov
pop
and
xor
and
scas
add
cmc
add
jo
dec
popl
test
rorb
lret
dec
mov
nop
dec
dec
popf
sub
mov
fnstcw
nop
es
pop
sub
fidivrs
cmpb
loopne
in
mov
mov
fcmovb
lds
sbb
inc
shr
lret
fs
pop
mov
jl
sub
frstor
dec
pop
xor
repnz
ljmp
repz
sub
mov
xchg
xor
ds
adc
fstps
sbb
jp
loop
loopne
push
fwait
scas
inc
aam
adc
loope
pop
ret
sarb
leave
jo
inc
incl
ret
outsb
ret
pop
push
xchg
or
ret
inc
add
mov
enter
mov
ret
shlb
lods
sub
cs
xchg
inc
sbb
fdivrl
shlb
cmp
sub
inc
hlt
mov
fistpll
adc
pop
shrb
rol
mov
in
inc
pop
test
sub
jge
ss
mov
xor
and
into
cmpb
fistps
dec
sbb
das
jae
lock
inc
arpl
rol
fwait
rorb
pushf
pop
sahf
test
rcrl
loop
aaa
loop
stos
mov
repz
pop
dec
je
outsl
sbb
or
adc
pop
leave
fwait
outsl
xor
std
rorl
or
and
push
or
fst
jne
out
test
int
push
into
push
xor
push
aam
sbb
and
cmpsb
push
nop
push
imul
push
mov
in
push
je
push
adc
push
mov
cmp
mov
lea
or
xor
xor
push
shl
mov
mov
cmp
ss
sbb
rclb
xchg
adc
xchg
xchg
loopne
shrb
sbb
jnp
adc
sahf
movsb
sbb
pop
sahf
mov
rolb
test
imul
hlt
dec
mov
and
xchg
mov
sub
sub
mov
das
sbb
or
mov
loope
shlb
scas
pop
jp
shll
mulb
cmpb
iret
adc
pop
lds
pop
daa
gs
lcall
mov
lods
mull
mov
dec
sbb
jnp
out
inc
and
insb
and
scas
sub
es
orb
mov
enter
shlb
div
repz
shrl
pusha
je
scas
inc
and
inc
scas
fmuls
and
mov
sbb
test
add
call
leave
jge
shl
adc
sbb
xchg
dec
lcall
mov
jae
rolb
xchg
inc
test
gs
scas
pop
and
aaa
sub
push
add
mov
push
add
lahf
and
xchg
cmp
sti
push
std
insl
mov
aaa
or
dec
ds
jmp
pop
sbb
add
xchg
jbe
imul
nop
dec
pop
sub
rcll
mov
popf
mov
daa
aam
stos
add
pop
hlt
xlat
sub
push
imull
es
add
or
push
loopne
imul
les
das
repnz
test
jl
push
sbb
lods
cmp
pop
scas
lcall
xor
ljmp
adc
ret
out
push
pop
mov
daa
arpl
sti
mov
mov
mov
inc
int3
addb
sti
xchg
lret
xchg
push
movsl
add
inc
sarb
pop
mov
cmp
insl
jae
sbb
roll
lret
nop
sbb
mov
push
enter
and
dec
xor
mov
sub
test
xchg
sub
scas
mov
fdivl
inc
dec
cmp
idiv
icebp
xor
lcall
mov
push
adc
push
pop
xor
pop
leave
repnz
sbb
jo
ds
test
mov
imul
mov
sbb
out
shll
je
popa
dec
hlt
pop
xchg
testl
insl
lret
mov
mov
lock
fbstp
jae
fstl
cmp
iret
lret
lods
jmp
jnp
ret
gs
xor
push
nop
icebp
scas
xor
xlat
mov
and
arpl
push
and
sub
push
dec
loop
dec
addr16
cmp
loopne
and
jne
push
adc
sbb
cmpsb
roll
aad
fsts
leave
and
cli
jmp
in
add
fiaddl
mov
cmp
pop
pop
jnp
mov
jle
je
mov
aas
add
cmc
sarb
iret
add
xchg
aas
bound
ljmp
aad
cmpsl
dec
sub
or
iret
testl
xor
xor
pusha
add
test
mov
pusha
xchg
mov
mov
jno
aam
xchg
repz
pop
cmp
std
fnstsw
adc
inc
popa
call
sahf
rorb
push
mov
dec
pop
pop
pop
xchg
divw
fdivl
adc
popa
lods
leave
mov
out
out
mov
lds
dec
loopne
aam
stos
pop
sub
clc
pop
icebp
push
sub
sub
mov
popf
cmp
xor
and
add
ret
in
popa
insb
cmp
mov
aaa
jmp
pop
adc
xchg
push
shrl
das
outsb
in
subb
ds
pop
xor
cld
cli
mov
ficomps
stc
add
scas
fs
js
inc
mov
or
inc
fisubrl
mov
repz
xchg
pop
add
mov
ret
js
stc
aam
inc
divl
arpl
cmp
sub
xchg
mov
test
fistl
mov
ret
pop
xchg
ljmp
inc
push
ss
les
loopne
mov
sbb
aas
jle
insl
mov
mov
es
insb
add
mov
and
jle
xchg
ljmp
xlat
xchg
out
divl
gs
push
daa
inc
aaa
xor
addr16
xchg
aad
lds
xchg
out
divl
gs
push
daa
inc
aaa
xor
addr16
cltd
aad
lds
xchg
jecxz
divl
adc
inc
ds
outsb
add
jae
inc
movsl
xlat
adc
clc
lcall
aas
lods
das
in
pop
std
andnps
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
add
inc
and
jmp
inc
jno
nopl
aas
negl
cmpsb
shlb
add
inc
and
es
ss
push
popa
push
adc
xor
mov
movsb
mov
xchg
xchg
icebp
add
inc
and
es
ss
push
popa
push
jno
adc
fbld
test
xchg
dec
adc
jb
push
out
sti
mov
je
add
insl
dec
cli
pop
cli
loop
rep
xlat
push
xchg
xor
sbb
mov
clc
jmp
jae
cmp
movsb
pop
shll
mov
inc
repz
lods
or
lahf
lea
mov
dec
idivb
lret
in
jecxz
xchg
cmp
sub
push
add
push
subl
imul
cmp
xor
shl
xor
rcll
jg
ss
push
jle
test
stos
mov
xchg
dec
rcl
xchg
adc
lahf
fnstsw
in
fimull
addl
dec
not
cmp
stos
add
inc
and
es
ss
push
popa
push
jno
xor
mov
shll
daa
add
push
es
inc
and
out
xchg
mov
repnz
shll
rclb
imul
adc
ss
pop
and
jecxz
jecxz
movsb
fadds
test
movsl
add
inc
sub
push
ss
push
popa
push
jno
xor
mov
shll
add
inc
and
es
ss
push
popa
push
jno
xor
mov
shll
add
fisttpl
neg
mov
shr
ss
xchg
xchg
pop
shr
data16
popf
shll
cmp
aam
es
jge
push
lcall
xorb
or
jne
loope
lods
leave
mov
cmp
pop
adc
nop
mov
or
jmp
stos
add
adc
outsl
jge
in
dec
jle
push
aad
scas
push
jecxz
jb
cmp
shll
sbb
xor
and
push
add
rcr
jg
add
push
mov
test
repnz
lea
cs
clc
fst
dec
shrb
addr16
adc
xor
hlt
dec
sti
add
test
into
aad
stc
cltd
push
pavgb
and
jl
or
cwtl
outsl
and
int
inc
xchg
loope
pop
std
fld
pop
ja
push
outsb
jns
xchg
cli
inc
add
xchg
pop
divl
inc
xor
and
xorl
int
lock
pop
cmp
push
iret
popf
jg
sub
pushf
jecxz
jmp
mov
pop
lret
ljmp
adc
mov
xlat
cmp
lcall
bound
movl
pop
data16
jl
sbb
pop
out
mov
out
xchg
mov
jge
push
sub
leave
or
shl
mov
js
sub
sub
popf
mov
inc
repz
ljmpw
xchg
dec
xchg
cmp
jb
pop
iret
jns
fildll
sub
or
lahf
inc
or
stc
les
mov
jmp
pop
rcrl
push
aas
dec
cmpsl
xchg
call
push
or
and
adc
out
xor
loop
sub
lods
daa
inc
movsb
adc
andl
or
pop
adc
out
lods
lea
adc
mov
sti
mov
push
lret
pop
test
push
xchg
mov
add
dec
pop
dec
mov
cmc
jbe
dec
mov
out
imul
lods
testl
cmp
dec
push
andps
mov
in
cmp
mov
aam
xor
sub
inc
leave
hlt
xchg
push
lods
lcall
bound
test
push
enter
dec
mov
sub
call
xor
jp
nop
in
sub
adc
jecxz
pop
pop
xlat
cwtl
jmp
sar
int
and
jnp
popf
xlat
ds
in
xor
clc
test
call
cmpsb
lds
das
addl
fsubr
fildll
aaa
stos
sbb
xchg
sbb
scas
jle
sbb
push
es
xchg
ljmp
cs
mov
int3
test
adc
cmp
pop
add
add
gs
add
jns
cmp
adc
aas
or
xor
jb
jb
daa
fidivrl
addr16
dec
adc
dec
aad
and
inc
xchg
test
pop
int3
mov
cld
mov
pop
sub
flds
push
aas
notb
and
dec
lods
cltd
or
dec
or
and
nop
mov
popf
out
in
lods
pop
fidivs
pushf
sub
adc
cmpsb
das
push
cmc
jb
cltd
jle
je
jl
dec
subl
std
sub
inc
xchg
adc
insl
or
hlt
lcall
in
mov
aam
scas
pop
outsl
imul
insb
cmc
xor
and
push
loopne
mov
mov
push
sub
cmc
push
leave
mov
aas
cmp
pop
or
aad
mov
inc
mov
add
mov
in
in
sarb
pop
sbb
insl
jne
shr
push
sbb
inc
mov
xor
jp
movsl
sub
or
pushl
nop
test
inc
ret
sti
in
mov
out
sbbb
sti
xlat
sbb
fists
mov
and
xor
xor
movsb
add
or
mov
mov
add
jno
mov
mov
pop
js
xchg
ret
aam
add
leave
sbb
gs
mov
orl
adcb
add
mov
pop
leave
daa
out
aam
pop
lods
insl
popa
das
xchg
lahf
and
xor
into
jno
js
add
or
xor
int
xchg
test
or
addr16
add
jmp
mov
inc
xlat
mov
push
out
inc
jno
mov
dec
incb
jb
sbb
pop
test
sti
dec
and
jge
aad
and
negl
mov
shrl
rorb
test
sub
pop
bound
push
and
jmp
jno
loop
cs
push
shlb
adc
cmp
sbb
cltd
repnz
repnz
mov
lods
repz
iret
or
sub
into
ja
xchg
adc
arpl
sbb
adc
adc
adc
mov
cwtl
sahf
insl
mov
mov
incl
mov
jge
xor
fldenv
data16
daa
or
loop
pop
push
pop
mov
jae
push
lea
jmp
jg
enter
insl
stos
rep
decb
pop
sub
pop
and
out
sbb
pushf
push
lock
clc
sbbl
sbb
mov
adcl
inc
bsf
aaa
mov
cmpsl
mov
pop
cmp
sub
orl
adc
push
push
inc
je
add
mov
add
push
mov
mov
mov
out
xchg
xchg
mov
in
aad
fildl
std
jl
iret
push
ja
ljmp
movsb
sbb
test
xchg
stos
cltd
mov
test
cld
inc
jmp
mov
xchg
or
hlt
adc
cmp
cmp
rcr
ret
test
mov
movsb
dec
fildll
mov
clc
out
fadds
jg
gs
xchg
cmp
lods
inc
out
addb
add
fstpl
hlt
sub
dec
mov
ja
inc
inc
jg
mov
outsb
pop
adc
mov
add
jecxz
pushf
sub
imul
pusha
jl
call
fucomp
or
mov
adc
push
popa
or
push
fstp
in
popa
jnp
jo
cmp
jle
iret
aam
ret
bound
xchg
mov
loopne
sbb
inc
int3
icebp
aas
dec
fdivr
inc
inc
pop
lea
es
lds
dec
fstpt
jne
lock
rclb
push
adc
popf
lret
stos
or
push
into
and
pop
pusha
loop
insb
dec
or
add
cltd
call
adc
bswap
adc
jbe
jp
rorb
sub
fidivl
push
pop
rclb
cmp
mov
sub
sub
jbe
inc
jg
in
jmp
cwtl
scas
ret
cmp
sbbb
sbb
fs
xor
out
xchg
daa
or
or
fldl
mov
and
pop
clc
cs
cmpsl
popa
add
pop
cmp
dec
notb
xchg
mov
pop
add
in
cli
sub
mov
mov
mov
xor
jns
dec
mov
adc
cmp
mov
mov
fs
ja
sahf
jg
mulb
inc
or
outsl
inc
cltd
xor
dec
adc
push
loope
mov
cld
push
es
mul
jle
lcall
xlat
lret
pop
test
jp
dec
jae
pop
addl
bound
add
xchg
sar
in
dec
jae,pn
icebp
or
gs
test
xchg
jp
mov
sub
inc
idiv
hlt
mov
rclb
jge
sbb
sbb
aam
inc
ds
lahf
add
xor
daa
push
and
aaa
jle
icebp
push
or
out
aad
jl
mov
daa
xchg
jno
popf
iret
lods
fwait
mov
adc
xchg
not
xchg
int3
ss
ret
push
cmpsb
xor
push
pop
push
mov
add
aas
cmc
adc
mov
jmp
inc
fdivrs
addr16
xchg
lods
je
sub
pop
adc
jo
mov
call
test
dec
rcrl
subb
lea
fnstcw
mov
mov
adc
nopl
in
pop
pop
push
out
fnstsw
jl
adc
loop
aas
nop
lea
pop
jecxz
test
pop
addr16
loope
aaa
pop
fdivp
push
cmc
mov
push
mov
cld
test
xchg
ret
in
gs
fstpl
mov
aas
es
inc
int
sub
repz
xchg
in
xchg
xor
lods
adc
imul
test
cmpsb
outsl
je
in
cmp
fst
out
mov
mov
int
push
and
push
int
inc
lret
jmp
cmp
jge
ss
jecxz
in
lahf
pop
pop
xor
repnz
ljmp
or
dec
imul
inc
mov
inc
xlat
ja
inc
lods
mov
sar
adc
std
arpl
or
iret
jno
jle
sti
mov
push
mov
inc
andb
inc
mov
push
push
lahf
pop
call
sub
clc
cmpsb
or
cmp
aad
mov
sbb
jge
push
dec
jbe
mov
loop
xor
das
xor
push
daa
adc
sbb
pop
and
loop
or
lahf
jmp
xlat
fxch
inc
lods
stos
stos
push
jo
test
jp
sti
jmp
lods
and
and
popa
pop
push
and
mov
push
decb
test
ja
lods
inc
xchg
sub
out
mov
sbb
pop
mov
sub
jb
fidivrs
xor
std
out
xor
lahf
sbb
xchg
call
xor
mov
out
sbb
les
je
ret
orl
dec
arpl
mov
sbb
or
dec
sub
aas
test
cmovl
mov
mov
popa
leave
jbe
sarb
jo
arpl
test
cmp
lea
fbld
jae
adcl
inc
push
xor
pop
or
cwtl
push
push
or
dec
dec
xchg
inc
cmp
mov
push
inc
mov
lods
lods
test
xchg
jbe
lcall
add
cmp
or
xchg
pop
je
ficompl
mov
icebp
addr16
lahf
das
mov
repz
jno
mov
jo
pusha
jecxz
pusha
shll
add
xchg
test
es
lea
imul
ja
jae
aaa
cmp
adc
aam
fnstcw
xchg
cmp
jno
rorb
adc
out
mov
jle
popa
mov
pop
pop
and
pop
push
sbb
sbb
mov
mov
addr16
test
lret
cld
and
fisttpll
push
pop
mov
lret
movl
cmp
test
popf
mov
jg
rolb
dec
lods
lahf
add
rolb
js
pushf
nop
data16
rcll
out
shrl
xor
cmp
or
push
jno
stos
dec
pop
aad
lret
mov
or
mov
sub
in
push
and
jbe
add
js
or
push
ljmp
call
dec
pop
in
mov
xchg
lea
nop
enter
jae
pop
cld
jmp
testb
adc
notb
aad
push
cmp
test
faddp
pushf
adc
cmp
cmp
nop
int
mov
add
bound
pop
ret
sahf
jge
icebp
adc
loop
notl
and
push
and
mov
cmp
mov
lcall
push
xlat
loope
adc
repnz
jle
sub
leave
rcrb
js
addr16
insl
xorl
and
cli
jge
add
mov
int3
sbb
mov
sbb
sbb
insl
xchg
xchg
sbb
stc
xor
or
jnp
cltd
lods
pop
out
cmp
test
lret
sbb
fcomps
fs
adc
aam
cmpl
std
lcall
cmpsb
lcall
fwait
pop
mov
push
xlat
mov
adc
mov
adc
xchg
adc
add
cli
dec
cmp
sub
jmp
or
mul
daa
xor
aam
scas
or
fistpl
jle
lcall
imul
insl
add
insb
mov
jns
mov
scas
dec
repnz
rcrb
pop
popf
jecxz
lea
rclb
sti
js
cmp
fistpll
cmc
cmp
sub
data16
or
sbb
dec
fincstp
pop
shll
mov
mov
aaa
lahf
call
cmc
or
setae
xchg
addr16
xchg
push
mov
jp
mov
or
mov
push
sbb
fwait
xchg
insb
pusha
test
mov
lods
aas
sbb
cmc
clc
pop
movsl
xchg
lahf
dec
fcoms
iret
stos
push
cmc
shlb
sbb
or
mov
mov
in
sar
pop
nop
xor
jmp
sbb
or
adc
cs
sub
int3
int
dec
or
xor
fsub
mov
ja
jns
xor
daa
aam
int3
xorb
orb
or
push
sbb
icebp
sbb
xchg
cli
clc
sbb
push
mov
push
insb
push
hlt
add
or
mov
std
sbb
inc
in
xlat
jle
popf
push
push
xchg
rcr
sti
cmp
fdivrs
cmp
dec
push
and
and
loopne
lods
and
push
xchg
xchg
repnz
pop
xor
xor
ficomps
push
add
mov
test
fdivs
rcrb
jno
lret
push
mov
es
decb
ret
stc
adc
loope
in
test
pop
hlt
popf
es
test
xchg
divb
pop
inc
or
aad
pop
sub
push
mov
mov
jmp
cmp
xchg
aas
push
icebp
lock
adc
push
mov
ds
ss
adc
fimuls
xor
daa
aad
mov
das
sbb
in
popa
jno
inc
rcl
enter
or
xchg
scas
or
fsts
outsl
call
push
xchg
and
jb
add
jg
popf
imul
sti
fndisi(8087
fisttpl
cli
xchg
aam
incl
lahf
mov
std
cld
lahf
or
stc
xor
mov
sti
jne
imul
insb
push
daa
jnp
sbb
lea
adc
xchg
aad
rep
montmul
cmpsb
inc
jecxz
in
mov
mov
dec
mov
jl
xchg
sub
jmp
mov
fmuls
test
stc
or
sub
pop
push
out
mov
enter
push
fucomi
jno
rorb
lods
xchg
add
or
jmp
lret
jbe
xor
xchg
sub
or
dec
or
repz
dec
in
push
pop
dec
pop
aam
bound
sti
insb
and
mov
xchg
jecxz
mov
scas
jl
mov
pop
insb
jo
mov
mov
adc
shrl
dec
popf
cmp
jnp
adc
lds
jg
sbb
into
mov
aad
adc
sub
stos
movsl
dec
std
mov
das
movsb
adc
ret
scas
mov
pop
call
int
cmp
lcall
adc
sti
mov
ljmp
jb
sub
std
lahf
stos
pop
sahf
adc
xor
mov
and
mov
rclb
add
cs
mov
ljmp
push
enter
addr16
cmp
icebp
daa
xor
jecxz
pop
xor
or
pop
test
lds
fildll
xchg
js
mov
or
xor
idiv
lcall
ljmp
mov
push
adc
and
adc
std
mov
cmp
in
int3
mov
fcmovb
push
imul
ret
xor
cwtl
addl
mov
mov
mov
mulb
sarl
loopne
mov
das
mov
notb
icebp
rcl
xchg
add
mov
xor
repnz
and
jns
push
roll
shl
and
inc
pusha
mov
scas
fistpl
aad
fwait
clc
xchg
sub
sbb
adc
inc
sbb
push
shlb
sub
jp
shrl
mov
je
adc
jne
call
cmp
add
rorl
in
les
pop
xor
adc
int
or
sub
in
notl
icebp
arpl
data16
ds
lods
outsb
sub
pop
jne
or
jnp
cmc
sbb
in
ljmp
les
pop
je
je
inc
imul
lods
data16
sar
mov
addr16
adc
je
add
adc
add
rorl
add
xor
ss
pop
inc
subb
mov
ds
hlt
lret
popf
mov
ds
xor
add
dec
mov
inc
cld
dec
jae
adc
mov
adc
jno
sbb
sub
lds
js
adc
insb
and
xchg
aam
xchg
pushf
or
popa
and
jo
movsl
fwait
popf
loop
roll
dec
stos
lahf
sub
enter
sbb
test
dec
adc
push
insb
repz
inc
pop
repnz
es
jae
pop
ss
mov
arpl
lods
mov
fidivl
mov
iret
add
mov
imul
int3
les
test
jmp
xor
push
cwtl
dec
add
pop
push
jbe
xor
movsl
cmp
fcomi
mov
test
nop
and
int3
adc
cmpsl
lock
ljmp
mov
imul
mov
sub
push
push
cmp
lret
movsl
rorl
jne
pop
lea
roll
mov
jno
lods
mov
fwait
adc
jmp
cmp
into
mov
push
cmp
scas
es
imul
es
cwtl
fisubrs
mov
and
mov
enter
mov
mov
rcrl
daa
jmp
ljmp
cmp
imul
jns
sahf
add
call
inc
loop
std
sub
aas
inc
mov
fimuls
or
dec
sub
jge
shll
shl
mov
das
sbbl
movsl
mov
mov
arpl
adc
cmp
add
xlat
loopne
sbb
inc
mov
fs
aam
sbb
xor
jae
addr16
jae
int3
add
cmc
xchg
or
fstl
push
es
and
push
divl
lock
pushf
shlb
adc
and
fwait
mov
inc
dec
outsl
lahf
cs
mov
test
loopw
xchg
rorl
inc
call
iret
cmpsb
repz
mov
ja
fdivrs
cmp
and
repnz
loopne
adc
fistpl
test
scas
inc
mov
push
and
iret
jg
jbe
cmp
sbb
lcall
pop
xor
sbb
es
fs
pop
int
scas
aam
push
sbb
push
and
loope
scas
xchg
pop
xchg
in
notb
lret
add
and
lret
xchg
aaa
xlat
adc
lret
dec
rcrb
data16
cmp
inc
mov
dec
push
push
out
adc
inc
imull
push
pushf
adc
daa
popf
inc
fs
sub
mov
mov
popf
ljmp
jecxz
nop
mov
dec
idivl
mov
sub
push
mov
pop
lods
test
adc
stos
popf
sbb
nop
fnstcw
gs
cmp
mov
leave
mov
xchg
das
arpl
repnz
sbb
dec
pop
cmp
lock
inc
dec
or
cmpsb
jmp
imul
pop
dec
popa
int
jg
shr
bound
sub
shl
or
or
sbb
and
cmp
lods
xchg
jmp
ss
inc
mov
scas
sbb
pop
aaa
jp
and
add
adc
xor
inc
xor
pop
sub
mov
sub
out
jb
jnp
notb
into
enter
jns
aaa
mov
in
cmpl
int3
addr16
or
mov
pushf
popf
in
mov
ret
cmc
push
inc
mov
mov
inc
adc
sti
imulb
cmp
cmp
xor
jmp
out
lea
xchg
loop
mov
iret
lret
out
mov
inc
push
call
add
mov
adc
push
fbld
mov
or
pop
mov
push
pop
push
jl
jle
test
or
mov
pop
adc
adc
in
push
fsubrs
dec
in
out
pop
in
mov
xchg
adc
stos
dec
out
das
xchg
pusha
mov
or
cs
into
and
add
ret
add
jbe
stos
stc
adc
pop
leave
cmp
test
inc
cmp
jp
dec
sbb
jp
lret
mov
cmp
movsb
mov
adcl
mov
insl
test
xchg
enter
add
addl
dec
mov
lods
xor
imul
out
je
jl
fsubs
or
clc
scas
push
push
insl
addb
xchg
xor
loop
and
stc
jmp
stos
bswap
pop
mov
mov
pop
and
inc
and
es
ss
push
popa
push
jno
xor
mov
shll
add
inc
and
es
ss
push
popa
push
jno
xor
mov
shll
add
adc
and
cmpsb
inc
ss
push
popa
xchg
jno
xor
mov
shll
add
inc
and
es
ss
push
popa
push
mov
xor
dec
negb
out
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
imulb
push
cltd
pushf
adcl
sub
cmp
or
sbb
dec
xchg
pop
test
inc
mov
es
push
sub
pop
cmpsl
or
sbb
or
mov
es
push
xor
sbb
sub
push
cmpsb
cmp
pop
push
test
push
enter
sbb
adc
xor
pop
xchg
inc
sbb
cmp
out
pop
data16
push
push
mov
arpl
lahf
or
pop
sbb
xchg
mov
outsb
or
icebp
ja
dec
jle
cmc
and
lea
cmpsb
nop
leave
sub
sbb
mov
mov
inc
mov
stc
out
push
es
xor
idivb
dec
inc
add
xchg
dec
mov
or
data16
call
push
pop
mov
subl
fprem1
jns
test
mov
aam
aas
jbe
int3
out
shll
pushf
je
mov
and
mov
pop
sbb
jl
mov
cmp
push
cltd
es
push
sub
cmp
or
sbb
dec
xchg
xor
xor
test
inc
xchg
mov
test
or
or
dec
loop
cmp
push
jmp
mov
outsb
fnstenv
mov
in
or
adc
sub
or
loopne
ljmp
ss
push
leave
push
sub
cmp
or
sbb
dec
xchg
pop
test
inc
mov
es
push
sub
cmp
or
sbb
dec
xchg
pop
test
lret
cmp
push
and
loop
icebp
lret
scas
addr16
nop
mov
cmpsl
lcall
mov
pusha
scas
aam
in
movsl
xchg
mov
lock
jno
mov
mov
mov
push
jo
dec
lock
or
lret
call
popa
lea
fwait
ret
and
xchg
ja
stos
sbb
jne
push
pop
or
add
mov
sbb
loope
fdivr
xchg
pop
mov
and
movsl
push
add
aas
add
repz
xchg
mulb
out
es
inc
and
sahf
pop
and
sub
push
in
pop
jle
mov
jb
ret
loopne
repnz
sahf
dec
loopne
xor
aaa
int
jne
or
scas
and
inc
cwtl
jb
mov
or
stos
push
or
cmp
dec
jge
pushf
inc
mov
int
add
push
jb
sub
xchg
sub
or
icebp
xor
xor
xor
sbb
cmp
dec
fcompl
enter
int3
cmp
imull
inc
inc
lret
ror
sti
stos
mov
cwtl
xor
jae
es
fwait
sub
mov
jnp
das
add
jl
and
xchg
add
aam
movsb
enter
and
mov
loope
pop
nop
inc
call
jns
pop
jp
add
lret
jg
push
stos
xor
pop
dec
xchg
xor
lret
pop
fistpl
add
pop
xor
adc
inc
mov
xchg
xchg
andl
dec
icebp
jae
sub
xchg
pop
cmp
adc
pop
xor
pushf
xor
or
popa
dec
roll
aaa
mov
outsb
mov
mov
aaa
xchg
add
adc
cmc
jge
aaa
out
aam
push
pop
xchg
pusha
cwtl
hlt
sbb
in
fs
mov
mov
sub
je
sub
mov
cvtsi2sd
fdivrl
iret
xchg
mov
stos
mov
and
mov
mov
in
mov
xor
dec
ja
pop
fstl
jnp
int
jecxz
aas
inc
or
and
orb
stc
add
jge
pop
pop
mov
pop
sub
add
xchg
mov
shll
lahf
lret
add
sub
bound
test
sahf
cmp
dec
imul
hlt
int3
xor
xchg
mov
popa
scas
xor
fstpl
test
pop
icebp
pop
rorb
nop
lock
push
cmp
hlt
cwtl
movsb
lods
aam
xchg
xchg
and
in
ja
inc
js
dec
adc
mov
mov
xlat
mov
adc
xchg
aad
rorl
aas
sub
jmp
loopne
cli
popf
mov
or
jp
xor
adc
icebp
and
sbb
in
xor
xchg
xlat
mov
mov
and
iret
out
mul
xchg
push
clc
mov
adc
aaa
pushf
cmp
notb
push
call
insb
aaa
repz
push
ljmp
push
test
movsl
inc
inc
stos
mov
push
dec
test
add
js
push
push
mov
imul
enter
lock
test
cld
sti
cwtl
int3
xlat
cwtl
sbb
mov
sbb
mov
mov
dec
dec
jecxz
mov
out
xor
pop
lcall
test
cltd
aas
aaa
push
sub
add
pop
mov
xchg
jno
add
pop
xor
mov
in
scas
jle
movb
pop
fistpl
xchg
call
inc
lock
pushf
loop
dec
repz
jge
idivb
test
or
js
gs
or
dec
sbb
popw
movsl
sub
mov
cs
xchg
mov
or
mov
fldt
insl
inc
mov
iret
enter
sub
rolb
jnp
mov
sub
and
nopl
test
inc
sbb
test
and
xor
fidivrs
ret
add
scas
scas
mov
outsl
fstpl
pushf
xchg
xlat
mov
pop
push
pushf
mov
imul
popf
sbb
and
sub
dec
sahf
lahf
jmp
push
dec
or
mov
mov
jo
inc
pop
mov
cmpsb
test
jo
andl
jns
popf
clc
pop
ja
push
mov
add
mov
call
cli
push
mov
test
lock
pop
push
dec
scas
jb
xor
and
mov
mov
fs
pop
fwait
mov
or
pushf
repnz
sbb
lcall
dec
push
add
and
aas
cmp
jl
add
dec
add
or
enter
test
in
push
cmp
sub
pop
loop
fstpt
aaa
divb
scas
xchg
dec
jle
cmp
adc
shlb
loop
sarl
push
push
lds
js
fs
adcl
push
idivl
insb
ss
sbb
xor
sbb
dec
dec
jmp
and
repnz
decb
push
test
shll
add
mov
xlat
cmp
and
jns
jae
cmp
sbb
mov
lret
dec
clc
test
test
int3
outsb
negl
xchg
jmp
dec
xchg
sbb
shl
dec
sbbl
inc
cmp
popa
stc
push
xchg
test
xor
fistps
jecxz
repnz
fcompl
pushf
mov
xor
imul
inc
push
mov
jmp
popf
pop
or
cmpsl
insl
fdiv
mov
pop
jg
xor
sbb
sub
cmc
fcmovnbe
cwtl
popa
outsb
sbb
aad
xchg
mov
inc
pop
test
cmp
cltd
fs
cmp
push
or
xchg
xor
or
pop
int3
std
loope
js
mov
test
jecxz
js
ret
and
pop
aad
fnsave
ljmp
pop
popa
test
and
cmpsb
outsl
out
ret
and
pushf
movb
jmp
xchg
jns
out
pop
in
ret
scas
pop
mov
or
ljmp
iret
int
fdivr
inc
mov
test
je
push
xchg
cmp
mov
cmpsb
push
cs
es
and
and
fiaddl
cmp
ficoms
xchg
test
add
es
add
adc
mov
adc
add
jmp
stc
push
fnsave
mov
sub
addl
mov
cli
and
je
sbb
or
xchg
push
stos
adcb
orb
aaa
stc
inc
cmpl
pop
mov
adc
mov
aaa
popa
ret
aam
sub
ss
cmp
cmp
imul
insl
fadds
dec
movsb
inc
sub
outsl
popf
test
mov
jne
mov
leave
or
test
push
jne
outsl
icebp
mov
mov
enter
xor
jg
xor
jecxz
or
sbb
pusha
notl
mov
ljmp
sbb
lcall
adc
sbb
mov
sti
and
adc
fwait
add
adc
pop
dec
pop
mov
sub
fmulp
push
dec
aaa
jo
movntq
mov
pop
dec
cmp
and
adc
or
enter
andb
shld
scas
int
mov
int3
fs
insb
repnz
gs
decb
mov
mov
or
xor
pop
popf
mov
inc
mov
fwait
xor
inc
mov
inc
std
shll
jp
dec
stc
push
in
sbb
jg
or
push
mov
ljmp
pushf
adc
push
cmp
in
and
mov
ret
bound
cmp
dec
or
test
ljmp
adc
adc
hlt
add
out
in
out
ret
inc
jnp
jecxz
inc
mov
or
lret
mov
ljmp
sbb
aam
mov
loop
sbb
dec
fcoml
into
insb
jae
mov
je
xchg
and
repnz
ljmp
ja
jb
inc
jg
out
lcall
dec
fsubl
data16
mov
pop
push
jb
and
negl
in
push
xor
xor
and
dec
pop
xchg
and
sbb
ret
fisttpl
push
js
pop
dec
jecxz
mov
es
lahf
insb
pop
rolb
mov
outsl
push
xchg
lods
mov
mov
push
xor
jl
out
je
scas
mov
test
dec
jmp
rcr
cli
jge
lea
std
loope
mov
loop
sbbl
outsl
push
mov
jg
icebp
lea
cs
mov
test
and
jecxz
dec
cli
mov
repnz
sbb
test
fldt
pop
in
jp
xor
jmp
jo
bound
lahf
ss
or
scas
jle
xchg
aad
mov
xor
xchg
aam
hlt
sub
ja
xchg
inc
jae
fsubs
sti
sbb
mov
inc
pop
and
mov
mov
sub
cmp
fucomp
sub
aas
push
mov
dec
dec
mov
lret
test
mov
enter
jb
decl
bnd
xchg
pop
or
jo
sub
mov
adc
xchg
clc
mov
in
sbb
jo
lock
testl
fsts
or
pop
adc
ffreep
lock
mov
sub
push
pushf
pusha
lock
add
imul
pop
hlt
xchg
dec
call
mov
mov
add
xchg
jne
adc
pop
or
nop
nop
fs
xor
sbb
lret
pop
xchg
pop
aas
orl
pushf
adc
and
adcl
sbb
lock
jecxz
outsb
mov
ss
cmp
sbb
loop
orl
jno
and
add
lds
stos
cld
stc
icebp
push
cmp
shrb
sub
icebp
outsl
cmp
leave
add
scas
fdivrl
je
lret
or
jg
std
mov
mov
jno
dec
xchg
lahf
xchg
js
push
shll
pop
xchg
cmp
push
mov
adc
xor
insl
das
decl
out
dec
add
xor
jp
in
les
fs
bound
shl
xchg
les
imul
inc
js
mov
enter
pop
sti
mov
dec
xchg
in
inc
adc
push
jle
sbb
loopne
push
out
je,pn
mov
jmp
jae
les
sbb
lods
cmpsb
addr16
adc
adc
movsb
aas
push
mov
xorb
xchg
cmp
das
test
xor
xor
popf
sbb
sarb
jbe
mov
aaa
and
aam
and
cmc
pop
inc
inc
data16
cwtl
iret
xchg
and
ret
mov
iret
xor
push
inc
dec
cmp
push
loop
lea
imul
and
scas
mov
int
out
and
xchg
push
imul
movsb
adc
xchg
pushl
mov
setl
jae
fnop
push
sub
int3
inc
shlb
sbb
sub
sti
push
std
stos
mov
fcmovnu
mov
mov
shll
xlat
jl
scas
cli
inc
loopne
push
push
mov
xor
push
xchg
rcll
or
test
and
aad
and
shlb
bound
aad
mov
xchg
pop
dec
jge
cmpsl
xlat
xchg
xchg
inc
popf
lcall
jmp
cmpsb
lea
ja
dec
pop
cli
sbb
outsl
mov
jmp
mov
mov
sbb
stc
fstl
into
and
xor
mov
xor
iret
rorl
or
push
aam
add
cld
mov
push
adc
jecxz
jb,pt
adc
in
add
cmp
int3
push
fidivl
ds
push
mov
testl
popa
lret
jl
fs
push
xor
clc
aam
mov
lea
push
xchg
jo
adc
es
stos
jg
lods
jmp
jp
mov
inc
xchg
jp
in
mov
shlb
pop
cld
pop
or
add
mov
das
es
mov
mov
insl
rclb
cwtl
or
fwait
xchg
loop
xor
repz
pop
mov
xlat
ds
jle
call
add
repnz
push
mov
int3
push
iret
cld
loopne
ljmp
cwtl
into
dec
pop
jecxz
mov
jno
xchg
xor
lahf
or
add
pop
bound
insb
std
push
xlat
daa
push
sbb
fimull
outsb
mov
shr
mov
xor
push
fwait
cwtl
mov
sti
mov
call
push
in
inc
add
sbb
mov
stos
sbb
jbe
lock
cwtl
sub
sbb
dec
stc
arpl
mov
and
in
cmpsl
or
stc
leave
adcl
push
jmp
test
adc
dec
sbb
push
lock
and
add
pop
mov
out
lret
lret
ret
fmuls
xchg
ffree
loope
in
xor
jecxz
aam
mov
loopne
inc
dec
jno
xchg
xor
movsb
xchg
sub
sbb
push
inc
jmp
insb
push
xchg
sub
mov
add
jmp
in
lret
jb
and
sti
imul
inc
ljmp
jns
imul
cmp
adc
sbb
pushl
xor
int3
fcom
movsl
fisubs
mov
popf
fcomps
or
inc
fwait
xchg
loopne
mov
adc
cmc
mov
push
cmpsl
push
push
or
int
and
xor
gs
adc
jbe
sub
sbb
mov
cmp
or
cmp
daa
or
int3
dec
cld
gs
push
stos
je
jb
lcall
inc
jl
cld
dec
imul
mov
lea
mov
mov
fldenv
aam
cwtl
and
fcmovne
pop
adc
mov
shlb
pop
fcmovne
sub
ret
cltd
jns
sarb
or
test
xor
inc
cmp
outsl
mov
push
mov
inc
dec
loopne
cmp
cmp
mov
dec
lcall
in
mov
adc
je
sub
push
nop
lret
mov
jns
inc
ret
out
push
add
pop
or
std
cmp
mov
or
inc
add
std
sahf
or
mov
mov
adc
jp
xor
aad
pop
rep
out
push
lret
pop
fs
dec
adc
std
divl
sbb
jnp
pop
xchg
xor
jp
sub
ss
je
adc
and
ljmp
sub
outsl
mov
icebp
cmp
xchg
std
sub
add
adc
mov
stos
mov
jmp
or
fwait
pop
and
lea
sahf
or
dec
sbb
pop
je
add
mov
outsl
jbe
xor
std
pop
jo
pop
sbbb
repz
mov
fnstcw
rorb
insb
or
insb
dec
inc
bound
push
stos
or
mov
ja
rcr
lock
adc
adc
loop
notl
pop
adc
jge
xchg
cmpsb
dec
push
mov
xor
fsubl
test
je
jnp
movsl
push
fsts
cmp
je
call
push
mov
sbb
lret
lret
movsl
int3
das
sahf
stos
jecxz
jmp
cld
into
and
sti
xchg
add
fisttpll
fimuls
xchg
test
fwait
mov
or
test
in
in
addr16
out
icebp
ja
add
xchg
xlat
cvtps2pd
repnz
fsub
adc
jo
or
dec
sbb
jns
xchg
dec
std
loope
adc
inc
mov
insl
mov
lret
jbe
add
testl
fists
rep
or
popf
mov
push
cmpsb
lcall
push
rclb
jo
out
cmp
xlat
push
cmp
sub
fidivrl
jb
negl
cmp
add
icebp
or
cmp
push
or
cmp
mov
inc
shlb
mov
mov
and
mov
test
mov
dec
xlat
cli
repnz
sarb
xlat
imul
sbb
push
popa
xchg
pop
inc
lods
mov
mov
xchg
add
rcll
xor
sti
cmp
insb
xchg
imul
insl
hlt
and
movsb
xchg
sbb
xor
sti
push
mov
scas
stos
in
loope
pop
cs
cmp
mov
repz
popl
imul
sub
lahf
das
mov
leave
sbb
adc
ja
inc
fistl
scas
push
je
jb
js
add
lahf
pusha
jmp
fcompl
cmp
mov
loope
xor
push
out
out
sub
sti
sbb
mov
arpl
cmpsb
mov
or
xor
lock
out
mov
je
cmpsl
pop
pop
clc
addr16
lret
shl
dec
shrl
ja
fiadds
call
outsl
imul
ret
into
sub
test
dec
divb
mov
ja
push
push
test
mov
add
inc
jno
scas
push
pop
jl
nop
imul
aaa
or
loopne
test
xchg
popa
or
mov
jne
fidivl
mov
jmp
sub
in
dec
xor
add
in
jg
push
lds
dec
dec
clc
sub
xor
and
add
dec
andl
icebp
push
repnz
push
out
cltd
in
mov
dec
inc
or
jge
xchg
cmp
lret
or
cmpb
inc
jecxz
fwait
dec
lods
add
lcall
pushf
push
bound
pop
imul
iret
iret
sbb
sar
cmp
adc
push
sub
cld
xor
out
xchg
cld
jle
push
jge
inc
gs
fwait
aaa
sahf
enter
lock
sete
mov
imul
mov
lahf
mov
jl
icebp
gs
test
clc
mov
mov
cmp
pop
xor
pop
scas
push
xchg
movsl
movsb
xchg
bound
mov
test
ja
arpl
movsl
and
std
ficoms
lea
mov
test
xchg
mov
jge
gs
sahf
daa
and
push
xor
push
dec
fldcw
test
leave
imul
sub
push
into
mov
je
push
inc
mov
repz
mov
dec
inc
mov
jnp
dec
ja
mov
fstps
bound
push
out
jno
mov
ficoms
xor
mov
cmp
adc
ret
push
and
aad
arpl
fnstsw
sub
sbb
mov
mov
ja
notb
daa
ret
rorb
jle
lods
pop
add
mov
jmp
add
pop
push
adc
movsl
repz
imul
add
cmp
lds
push
stos
sbb
stc
fxch
mov
pop
xorb
adc
addr16
aad
jno
sub
sbb
test
stc
jno
pop
scas
enter
adc
inc
xchg
lods
stc
dec
into
adc
lods
fstps
push
or
mov
push
roll
mov
fs
movsl
inc
lds
jmp
mov
xchg
outsl
pop
push
cmc
jl
dec
xchg
fld
fnstsw
ret
clc
push
mov
cmc
push
push
decb
aad
dec
or
sti
sub
xchg
jne
mov
scas
mov
pop
mov
dec
xor
lcall
push
sub
lahf
sub
and
mov
sub
icebp
fsubrl
add
fisubrs
fs
sub
mov
sbb
sub
sub
jge
out
push
scas
xchg
arpl
mov
insl
movsb
jmp
xchg
sbb
xor
rcl
adc
fcmove
xchg
sbb
roll
in
arpl
in
mov
ss
jecxz
fldt
mov
sub
iret
push
loop
cmp
cmp
and
sbb
mov
mov
cmpl
in
int3
cmp
pushf
mov
inc
mov
lods
insl
xor
lcall
jp
icebp
arpl
or
push
mov
mov
idivl
neg
mov
ja
rclb
mov
nop
sbb
push
popa
or
ljmp
mulb
pop
xor
lods
pop
lea
jecxz
mov
jg
mov
repz
outsl
cmp
jmp
and
mov
stos
or
icebp
lahf
out
js
add
mov
rcrl
rcrb
jo
lds
ret
xchg
xchg
pop
inc
aad
cmp
xchg
xor
in
push
jg
adc
imul
cmpsb
mov
in
test
es
jp
mov
dec
sbb
lcall
ds
pop
pop
xchg
test
into
add
inc
test
nop
adcl
mov
push
outsl
outsl
adcb
mov
push
pop
push
xchg
and
adc
inc
or
pop
adc
fcoml
inc
and
cmpsb
fdivl
mov
mov
arpl
stos
jnp
repz
movsb
mov
inc
ret
mov
mov
mov
mov
add
mov
into
inc
push
xchg
ss
mov
push
inc
xchg
shrb
mov
pop
rolb
cmc
mov
pop
cs
daa
stc
aas
sub
adc
xor
pop
insb
cmp
lret
xchg
mov
rclb
jmp
adc
add
es
push
sub
cmp
or
sbb
dec
xchg
pop
test
inc
mov
es
push
sub
cmp
or
sbb
dec
xchg
pop
test
inc
or
es
push
test
sbb
dec
xchg
pop
addr16
push
cltd
es
push
sub
xchg
insb
or
outsb
shl
xchg
imul
push
inc
push
and
call
xchg
cwtl
lds
push
pop
inc
push
adc
cmp
pushf
cmc
clc
in
xchg
cwtl
test
push
pop
inc
push
adc
cmp
fwait
test
in
sti
loope
rcl
movsl
add
xor
adc
mov
sbb
mov
leave
add
add
clc
insb
ret
pop
in
popf
fs
lcall
into
sub
gs
jge
ja
lea
test
inc
rcll
push
inc
or
enter
pop
lock
and
int
js
or
je
jno
adc
adc
enter
gs
sbb
lock
dec
mov
mov
mov
adc
sub
cmp
nop
and
clc
or
add
mov
cmc
mov
pusha
mov
lock
push
xlat
mov
cwtl
sub
in
push
jno
mov
pop
inc
push
adc
cmp
call
xchg
cwtl
test
cmp
xchg
or
jp
inc
dec
push
jns
mov
xchg
mov
clc
icebp
cld
in
aaa
in
rorb
sbb
sub
pop
cmp
test
cli
int3
ljmp
cmp
add
jns
or
add
enter
call
xchg
cwtl
test
push
pop
inc
push
adc
cmp
call
xchg
cwtl
test
push
std
push
roll
mov
xchg
bound
pop
mov
scas
stos
mov
imul
cmp
jl
mov
into
shlb
jo
std
stc
cmp
sub
je
ja
pop
ficoml
jge
data16
xor
xor
imul
xchg
xchg
dec
and
jb
mov
pop
int
inc
mov
push
mov
adc
lahf
adc
jne
xor
fbld
mov
jle
mov
les
fiaddl
mov
sar
lret
ficoms
inc
pop
pop
imul
mov
cltd
xchg
dec
cwtl
push
leave
dec
scas
jle
mov
jbe
mov
push
push
cmp
rcrl
dec
add
mov
mov
mov
jg
lds
inc
das
mov
loopne
push
sub
sbb
cli
inc
jae
retw
inc
imul
pop
mov
push
lret
xchg
mov
add
pop
data16
and
xlat
shlb
adc
cmp
add
jmp
adc
sub
daa
xchg
js
shll
repz
aad
jbe
jmp
cld
hlt
test
imul
aas
jb
mov
pop
in
shrl
lahf
paddsw
inc
call
leave
dec
cmp
loopne
xor
jmp
pusha
add
movsl
sbb
pop
mov
aam
mov
xchg
in
pop
icebp
or
adc
cli
lahf
cmp
sbb
or
jg
cmp
and
cmpb
xchg
out
inc
and
test
sub
fisubs
das
bnd
inc
je
mov
lcall
or
ljmp
out
inc
inc
into
cmpsb
push
sub
jle
shrb
sub
sbb
arpl
ficoms
je
addl
pop
or
pop
and
addr16
fnstcw
ret
and
and
push
jmp
nop
push
dec
into
adcl
mov
and
and
mov
and
jne
shrb
xchg
lret
iret
mov
push
test
or
aad
in
mov
adc
mov
pop
aas
or
pop
pop
or
pop
mov
lret
arpl
sub
sahf
cltd
repnz
movsb
mov
dec
and
mov
cmpsb
bound
jne
imul
hlt
sub
out
cmp
push
test
cmc
xchg
pop
pop
movsb
movsl
fs
mov
ljmp
adc
loopne
fisttpll
mov
mov
sub
lods
clc
nop
mov
mov
jmp
cmpsl
push
xor
decb
lds
vmread
stos
xorps
mov
cmp
pop
inc
push
dec
jno
add
lods
dec
js
adc
add
cltd
mov
or
lea
gs
addb
sub
xor
add
div
or
fnstcw
pop
xor
imul
testb
mov
scas
pop
andl
and
andl
ds
fs
lret
inc
std
fimull
call
or
nop
inc
fs
and
mov
ds
jno
es
mov
pop
insl
popf
daa
out
cmpl
jg
je
ret
cmc
sahf
push
pop
stc
cmp
fimull
scas
insb
push
cmp
js
dec
bound
mov
push
add
sbb
scas
jns
fstpt
movsl
stc
ss
add
fsubr
lds
cmp
mov
jbe
inc
push
add
dec
jecxz
push
sub
stos
dec
mov
int3
pop
lock
push
imul
jne
data16
jo
inc
insb
mov
or
mov
imul
adc
fwait
stc
jb
cmpb
insl
das
aad
loopne
jle
jbe
mov
add
or
sbb
lods
push
lods
adc
ret
jle
mov
dec
or
loop
mov
mov
mov
push
ss
push
loopne
lahf
add
xchg
clc
inc
and
lret
iret
push
mov
js
adc
inc
xchg
xchg
out
js
xchg
scas
dec
das
jg
addr16
mov
lods
xor
xchg
mov
dec
push
mov
in
jbe
scas
mov
outsb
xor
cmp
cmp
dec
push
push
sbb
mov
add
nop
aaa
imul
jne
out
in
xor
les
sub
jle
stos
icebp
jb
dec
notl
daa
out
push
add
xor
xor
xchg
sbb
cmp
scas
mov
jae
cmp
out
xor
add
pusha
imul
ret
lods
push
clc
inc
js
pop
lret
or
rcll
or
cmpsb
movb
jns
dec
mov
inc
pop
push
xchg
add
cltd
mov
mov
fs
and
lcall
out
push
lea
aam
rorb
pop
lds
adc
jne
test
push
jge
int
dec
mov
cld
pushf
pop
and
and
jo
orl
pop
std
and
sub
jl
add
leave
in
push
jle
lds
daa
lods
insb
lods
test
das
call
dec
cwtl
pop
out
lds
cli
leave
mov
sti
inc
xchg
daa
ss
cmp
adcl
add
in
push
or
pop
mov
stos
insb
cwtl
inc
popl
fldlg2
mov
jge
mov
popf
lock
xchg
jecxz
and
daa
sahf
cmp
incl
aad
mov
xchg
push
adc
rcll
popa
das
sub
ja
arpl
and
leave
and
aam
adc
scas
fsts
lea
js
fwait
inc
lret
bnd
mov
sti
pop
sqrtps
pop
ds
int
xor
stos
lods
hlt
dec
pop
fisttps
sbb
jae
stc
mov
cmp
jp
in
push
testb
adc
lds
ret
pop
dec
sub
sbb
and
xchg
movsb
xchg
push
imul
addr16
repz
cmp
pop
ret
ja
pop
mov
or
jnp
cmp
pop
mov
movb
jmp
sbb
idivb
adc
adc
and
pop
mov
and
ret
into
shll
inc
repnz
push
arpl
push
xchg
je
mov
mov
clc
es
xorl
sub
shr
sbb
xor
sub
aad
xchg
icebp
or
cmp
lock
mov
add
pop
addl
les
movsb
adc
sbb
pop
icebp
out
mov
sub
inc
push
pop
mov
adc
rolb
xchg
das
aad
or
add
mov
enter
xchg
or
sbb
jo
movsb
xchg
and
pop
mov
add
mov
sbb
and
sbb
pop
repnz
jbe
dec
push
lds
sti
jmp
jnp
or
test
push
or
pop
push
das
std
pop
es
mov
test
sbb
xor
sahf
push
mov
addr16
cmc
incl
into
aam
leave
imul
aas
push
mov
lods
rorb
push
mov
dec
fs
adcl
push
jb
fwait
xor
movsl
outsb
leave
jbe
push
subl
fnsave
dec
jne
loop
cmp
call
pop
xchg
mov
insb
cmpsl
mov
adc
inc
fists
es
pushf
push
push
dec
add
lret
shll
jl
mov
jns
mov
pop
scas
movsb
push
outsb
pop
stos
mov
pop
in
inc
xor
dec
les
lods
cmpsl
movsl
aad
repz
mov
outsb
mov
aam
in
jge
mov
out
std
ret
fwait
inc
fisttps
lahf
sbb
lea
fbstp
repnz
adc
add
mov
push
ret
fs
fs
mov
mov
xor
dec
mov
out
add
pop
scas
mov
add
imul
pop
scas
and
iret
ficoms
pop
sbb
mov
stos
mov
icebp
shlb
pop
int
test
ljmp
cmp
xor
in
mov
out
xchg
xchg
jo
mul
inc
dec
jecxz
sub
xchg
jp
sbb
sub
out
movswl
or
flds
cmpsb
imul
sbb
jns
addb
xchg
or
fwait
call
push
pop
inc
xor
rclb
inc
dec
cmp
sub
cmp
jbe
inc
xchg
dec
jno
mov
roll
sahf
push
and
mov
movsl
inc
xorb
pusha
cmc
inc
stos
push
das
out
inc
mov
sbb
jae
bound
push
loop
push
fcomp
inc
cmp
aaa
es
nop
inc
ret
jnp
mov
lahf
xchg
ljmp
xchg
sti
push
fimuls
and
xchg
test
dec
inc
push
inc
call
mov
jnp
test
mov
add
imul
push
sub
sbb
out
sbb
or
ss
popa
rclb
ret
push
xchg
loop
sub
push
adc
and
push
sub
dec
lds
clc
xchg
mov
jno
mov
push
inc
scas
je
mov
push
arpl
int
inc
mov
movsl
xchg
mov
xchg
mov
adc
es
lret
xchg
cmc
mov
loopne
movsb
pop
movsb
push
gs
shll
in
or
mov
out
sub
ret
lcall
xor
les
clc
mov
lea
mov
je
ss
repnz
cwtl
es
dec
pop
movsl
sub
aam
lret
cwtl
mov
mov
daa
mov
mov
xchg
push
mov
and
sub
xchg
dec
adc
ja
add
xchg
movsl
lods
or
cs
mov
mov
aad
sbb
mov
xlat
mov
sub
ja
lea
dec
addl
aad
imul
mov
call
xor
cmp
inc
aam
jg
xor
dec
test
mov
and
jge
sbb
fldenv
mov
sbb
lods
js
xchg
addb
mov
jnp
mov
lret
xor
lea
xlat
fisubs
out
aam
adcl
test
xchg
jnp
cmp
fsin
test
cmp
leave
repnz
and
lods
ret
push
ficoml
mov
push
nop
in
es
std
mov
ret
xorl
pop
push
insb
jne
or
imul
shl
lahf
sar
or
sti
in
sbb
inc
push
jge
cmp
dec
jge
popf
insl
cmp
sub
mov
imul
mov
test
push
xor
sub
sbb
call
sub
inc
mov
addr16
mov
test
test
cld
lahf
int
insb
add
xchg
pusha
test
adc
in
fstl
adc
push
in
test
pop
sbb
mov
inc
cwtl
stc
push
clc
or
rorb
cmp
outsb
aad
cmp
dec
xchg
lret
movsl
mov
dec
xchg
dec
pusha
push
js
cmp
pushf
in
push
sbb
and
mov
xchg
mov
sub
mov
rolb
xchg
scas
mov
mov
les
sub
movsl
hlt
insl
xor
cmp
and
cmp
fdivl
cmp
andb
xor
outsb
jp
mov
mov
int3
xchg
mov
inc
mov
xorb
repnz
ja
fwait
or
adc
adc
mov
xor
jge
into
dec
aas
push
sub
popf
pop
mov
push
outsb
arpl
mov
cld
filds
xchg
lret
fmul
jne
dec
xor
inc
jne
mov
std
iret
mov
sub
out
pop
nop
shrb
adc
xor
fs
xchg
filds
aad
xor
arpl
pop
xchg
cmp
rcrl
or
sbb
cmp
scas
mov
scas
adc
jmp
dec
add
fstpl
lds
sbb
lret
add
shll
push
das
sbb
ds
in
popf
lods
dec
iret
jmp
aad
cmp
dec
push
jmp
or
dec
fnstenv
das
lock
in
adc
outsl
jnp
xorl
sub
xchg
sub
push
fisttps
xor
enter
cmp
ja
loope
shlb
push
cltd
call
push
pop
sub
sub
repnz
push
sub
mov
aam
fsubrl
repz
mov
idivb
sbb
dec
sbb
rcl
roll
push
jns
and
xor
out
mov
adc
pop
movsl
mov
faddl
sti
xchg
xchg
push
pop
addb
adc
lret
daa
shrb
clc
cmp
in
jge
ret
add
gs
lods
sub
jmp
sahf
inc
mov
fbstp
lret
push
sub
fidivl
pop
xor
sbb
outsb
lods
fsts
ror
lods
sahf
insl
fwait
cmpsl
fs
cmc
dec
orb
cmp
loopne
jecxz
gs
add
inc
mov
mov
jno
icebp
insb
cmp
sbb
insb
shlb
mov
into
xchg
lds
movsl
push
ret
or
mov
lret
cmp
inc
or
pushl
ja
or
xor
std
frstor
mov
or
loopne
xchg
rol
inc
movsl
mov
imul
call
cwtl
enter
jnp
shlb
sbb
sub
mov
aaa
repnz
sbb
dec
push
jl
inc
testl
addr16
sbb
iret
mov
xchg
xchg
out
xor
mov
jmp
rcrb
add
inc
mov
pop
insl
loop
out
mov
xor
jge
jnp
mov
loop
adc
mov
mov
es
pop
add
loope
mov
divl
test
cmp
out
test
xor
xchg
inc
das
mov
cwtl
fsubrl
das
and
jo
fwait
sub
dec
inc
adc
movsl
mov
lea
cmc
jno
pop
inc
js
lcall
arpl
es
daa
jecxz
sbb
leave
mov
divb
jae
sbb
lods
mov
or
or
rorb
sub
or
ljmp
das
inc
out
fcomi
lods
xor
popf
mov
lcall
dec
mov
scas
cmp
dec
loopne
mov
mov
cli
sbb
stc
aaa
ficoml
pop
andl
ljmp
frstor
out
adc
adcb
in
loope
push
shlb
xchg
les
sbb
push
notb
gs
test
ret
dec
mov
test
or
xchg
icebp
sbb
mov
mov
sub
arpl
mov
or
pop
mov
rep
mov
mov
sub
adc
and
inc
shlb
jb
inc
push
mov
adc
ret
movsb
and
push
push
addr16
jo
int3
adc
enter
mov
mov
das
mov
xlat
out
ss
dec
cli
add
jg
push
mov
icebp
out
push
int
xor
inc
setl
outsb
cmp
push
sub
inc
push
iret
inc
aam
stos
stos
xor
iret
aam
ret
ret
in
cmpsl
js
popf
dec
xorb
xchg
out
and
mov
or
stos
dec
xchg
or
xor
popa
mov
aad
dec
jmp
or
stos
mov
or
and
repnz
inc
repnz
out
shll
xchg
ljmp
mov
ret
sbb
hlt
and
fnsave
insb
dec
adcb
sub
jb
jg
jl
icebp
push
dec
test
xchg
dec
inc
loope
jbe
add
icebp
sub
push
xchg
rolb
fsubrs
sub
push
or
out
add
inc
enter
ret
les
jmp
leave
pop
scas
mov
outsb
stc
push
leave
lahf
dec
int
outsl
cwtl
mov
xchg
int3
inc
dec
mov
decb
movsb
idivb
mov
dec
mov
push
or
insb
mov
mov
or
into
mov
mov
mov
pusha
mov
sbb
jns
xor
cmp
or
mov
into
les
dec
in
insl
sub
inc
cmpsl
cmp
dec
addb
iret
dec
pop
add
pop
pusha
sbb
cmpsb
sbb
pop
movsl
sbb
push
imul
lds
stos
data16
divb
divb
rclb
cmpsb
adc
dec
roll
xorl
int3
ss
mov
dec
mov
ljmp
cld
adc
add
push
lods
xor
push
sbb
xor
push
pop
add
insl
ret
addr16
xchg
inc
push
pop
mov
call
sbb
int3
push
mov
nop
pop
push
sub
jno
pop
stc
ficompl
and
outsl
and
mov
jl
test
xor
bound
pop
push
lea
cmp
cs
lock
mov
aaa
jnp
dec
pop
or
or
movsl
int3
and
movsb
jnp
sbb
sbb
shlb
enter
addr16
dec
inc
sbb
lahf
pusha
or
mov
testb
push
pop
jo
rolb
jns
add
loopne
into
inc
test
pop
jb
leave
fldenv
mov
addl
rcrl
test
dec
hlt
cmpb
cmp
notb
inc
add
dec
andl
lcall
sbb
inc
fwait
adc
jns
mov
ss
push
repz
jnp
jnp
icebp
lahf
negl
hlt
fldl
jns
xchg
insb
aam
sub
mov
inc
daa
jns
ds
pop
mov
ret
nop
mov
jg
adc
or
xchg
push
push
enter
sahf
dec
adc
push
cmp
inc
push
pop
dec
mov
inc
lret
jae
cmp
push
mov
xor
ljmp
jecxz
les
and
mov
or
mov
sub
into
xchg
push
fdivr
cmp
iret
dec
inc
aaa
or
or
push
jno
adc
fldt
incb
out
imul
dec
and
mov
in
daa
call
adc
clc
jnp
pusha
cltd
movsb
imul
ret
shr
in
and
jge
movsb
sub
mov
cmp
xor
pusha
mov
fmuls
aad
icebp
inc
adc
cmpsb
ret
sub
sub
and
xchg
cmp
sub
shrl
dec
in
add
mov
push
in
lods
jp
call
nop
cmpb
jne
imul
cld
cmpsl
fucomp
push
sbb
xchg
sub
push
adc
mov
fidivl
xchg
push
mov
popa
mull
jle
ja
aam
sarl
cmp
fsubs
pusha
fwait
orb
cwtl
pop
jmp
lea
fldenv
cmp
int
mov
cmpsb
subl
popa
dec
jbe
mov
inc
inc
test
mov
leave
lret
and
lcall
loope
lahf
cmpsl
pop
imul
add
out
rclb
clc
ret
inc
xchg
add
fsub
or
adc
mov
mov
fdivl
sub
dec
hlt
enter
jno
ror
inc
jle
push
mov
push
fisttpl
push
out
xchg
imull
in
lret
arpl
out
sub
push
fsubs
add
push
inc
lock
shr
xchg
es
movsl
pop
adc
mov
mov
and
or
pop
add
test
enter
mov
mov
aad
test
mov
adc
jle
jp
push
scas
scas
sbbl
xor
test
dec
loope
push
cmpsl
sub
jns
gs
enter
jo
dec
scas
mov
mov
test
mov
dec
jg
mov
sub
jne
or
jg,pt
xor
movsl
or
sahf
or
out
stos
sti
push
scas
jp
lret
incb
les
xor
rorb
adc
xor
push
popa
lret
aaa
out
or
lods
xchg
sub
pushf
lods
add
xlat
cmpsl
shlb
sub
adc
es
subb
sub
in
pop
mov
jbe
cltd
cmp
xor
cmp
mov
hlt
push
je
icebp
adc
mov
aaa
insl
pop
or
fwait
pop
jbe
stos
je
ja
sbb
and
and
rorb
cli
inc
push
sbb
jle
lcall
ret
xchg
frstor
leave
dec
cmp
arpl
mov
mov
or
xor
lea
loope
subb
aas
jl
test
in
mov
mov
jae
add
xchg
cwtl
out
lods
jns
fildll
mov
jmp
lcall
roll
movsl
mov
jecxz
sbb
cltd
inc
inc
cmp
je
rorb
jge
adc
decb
and
add
dec
cmp
sarb
test
xor
js
or
cmp
call
xchg
cwtl
test
push
pop
inc
push
adc
cmp
call
xchg
cwtl
test
push
pop
inc
push
adc
cmp
call
xchg
cwtl
test
push
pop
inc
push
adc
cmp
enter
inc
cmc
clc
xchg
lcall
inc
pop
insb
mov
pop
mov
mov
mov
stc
xor
mov
sbb
or
pop
jg
and
aas
jmp
out
cmp
sub
adc
lahf
dec
xlat
mov
xchg
adc
pop
leave
mov
fmull
cmpsl
imul
ret
cmp
lret
dec
icebp
mov
fnstcw
in
aad
xor
test
int3
pop
nop
rclb
ljmp
push
sub
and
add
mov
ret
sbb
dec
or
insl
push
jns
mov
xchg
mov
dec
out
jle
pop
sub
mov
inc
fistps
insb
cli
imul
pop
lea
pop
aas
call
out
call
dec
popf
and
push
jns
xchg
mov
dec
nop
int
stc
outsl
leave
ret
jno
pusha
test
jl
iret
out
or
ja
xchg
mov
cmp
and
mov
and
shrl
mov
sub
jp
loope
sbb
jns
cmp
mov
pop
mov
stc
inc
jmp
sub
sub
jns
imul
cltd
daa
mov
push
cmpb
popf
out
inc
lods
sub
cmp
or
and
pop
and
sbb
cmp
xchg
pop
movsl
cli
mov
lods
mov
push
iret
dec
cmpsl
insb
pop
shrb
pmaxub
add
adc
cs
in
jl
aas
jmp
out
cmp
sub
sbb
or
pop
lahf
dec
outsl
mov
pop
mov
stc
aas
jmp
out
cmp
sub
sbb
or
pop
lahf
dec
outsl
mov
lahf
dec
loopne
xlat
push
popa
push
mov
mov
pop
hlt
insb
xor
cmp
mov
push
jns
xor
jmp
dec
mov
pop
jle
lods
loopne
xor
adc
mov
xor
mov
leave
pop
pop
xchg
shll
sub
jae
stc
cld
dec
mov
and
cmp
sub
repz
inc
ret
das
mov
cs
les
popa
fldl
shlb
push
notb
and
jo
mov
fidivrl
out
in
xor
and
pusha
pop
outsl
shlb
cmp
or
mov
in
dec
adc
iret
pop
dec
xor
xorl
jb
adc
dec
sub
xchg
scas
jne
mov
loop
or
push
jb
into
ficoms
pop
xlat
pop
jo
loopne
and
clc
and
cmp
imul
jge
stos
adc
cwtl
int3
enter
add
loop
push
jne
dec
in
mov
gs
enter
mov
fidivrs
das
sbb
push
cs
push
movsl
or
loopne
jbe
in
xchg
mov
xchg
jmp
dec
pop
sbb
mov
adc
mov
test
in
fistpll
in
xor
pusha
test
cmp
fwait
xchg
mov
ja
fcomps
jmp
jl
jb
inc
mov
dec
inc
add
xchg
invd
jg
push
xlat
jl
or
mov
leave
mov
push
jnp
jge
add
or
frstor
xor
add
daa
and
cmpsb
mov
or
mov
fbld
jo
mov
in
dec
gs
pop
bound
mul
dec
sub
inc
cltd
das
sbb
sbb
stos
divb
mov
jmp
adc
add
pop
mov
inc
loop
and
arpl
jecxz
fildl
fbstp
scas
inc
sahf
nop
loope
arpl
out
insl
sbb
in
or
dec
hlt
cmp
loope
pop
js
mov
add
jmp
loop
and
pop
int3
lea
in
rcrb
inc
sbb
dec
adc
inc
ret
mov
in
sbb
inc
ret
aad
mov
ret
lcall
jp
negb
or
xchg
xor
insb
add
push
movsb
mov
je
add
aam
out
lcall
shrl
cmp
pushl
fdivrs
cmp
loop
shll
push
scas
clc
dec
cmp
sub
push
movsl
pop
jge
rcll
int
shl
mov
push
fsubrs
cmp
push
fisubrs
scas
lret
leave
add
sub
sbb
decl
jne
stos
jmp
lods
jbe
rolb
mull
nop
mov
cli
lock
mov
cs
lods
popa
popw
ds
addb
lret
mov
pushf
addr16
ja
es
xchg
push
adc
inc
and
clc
xor
push
add
mov
loopne
pop
jno
add
mov
push
ljmp
or
movsb
inc
push
xchg
jbe
lods
stos
call
dec
xor
ds
hlt
icebp
adc
adc
pop
movsb
test
bound
leave
movsl
imul
hlt
xchg
iret
aaa
push
dec
cli
push
add
pavgb
sarb
xchg
popa
jg
incl
je
lret
jns
imul
cmc
test
loopne
and
or
push
into
lods
mov
add
fdivl
loop
sti
mov
ss
mov
jo
out
mov
push
popf
or
jbe
dec
enter
inc
es
push
mov
sbb
lods
adc
pop
sub
push
adc
mov
cmpsb
pop
lret
mov
pop
in
xchg
push
imul
dec
das
js
dec
push
xlat
cmpsl
pop
mov
cmp
adc
iret
sti
shlb
push
xor
shl
addr16
out
inc
imul
inc
xor
data16
cmc
xor
add
adc
popa
loop
sub
xchg
test
hlt
mov
push
sub
add
cltd
and
movsb
cmp
pop
iret
xchg
mov
subb
cmpsl
in
std
add
mov
pop
push
test
mov
sbb
mov
test
mov
dec
loope
mov
inc
xlat
into
cmp
adc
and
add
loopne
test
leave
loop
imul
and
sahf
push
lahf
push
xorl
sbb
add
shlb
push
cld
sub
mov
jmp
sbb
test
out
jmp
stos
mov
mov
ljmp
dec
in
orl
movsb
out
stos
dec
add
mov
jmp
dec
outsb
lods
or
popa
ljmp
lds
xchg
inc
or
lds
push
clc
insb
mov
fnstcw
sbb
sbb
inc
cmp
push
insb
std
aad
subl
loopne
dec
jno
jecxz
test
jp
outsl
aam
enter
xor
lods
or
mov
fnstenv
jg
mov
add
mov
or
sub
incb
lahf
fcmovnu
or
add
inc
xor
loop
imul
mov
sbb
addr16
sub
sub
test
ds
or
clc
imul
clc
movsl
push
cmpsl
fcompl
pop
mov
dec
dec
testl
xlat
push
xor
data16
mov
shll
out
xchg
fs
push
psrad
enter
inc
loopne
pop
mov
rol
sahf
insb
ret
and
out
loopne
fidivs
jmp
stc
enter
dec
in
nop
popf
add
lcall
es
xor
jmp
lret
xor
pusha
int3
movsl
xchg
stos
sti
pop
mov
test
xor
mov
movsl
inc
sarl
and
cmc
pop
push
xor
cmp
test
pop
cmp
pushw
mov
ret
jne
adc
addl
mov
sub
ret
notb
mov
jl
hlt
push
lret
add
adc
sbb
adc
mov
pop
fdivrs
ds
shrl
cmp
dec
cmpsb
xor
test
movsl
push
imul
and
push
shr
rcrl
cld
addr16
movsl
jo
and
not
fstpl
adc
jae
add
xor
call
xlat
pop
daa
sbb
xor
sub
or
push
lahf
loope
adc
mov
add
lahf
push
sub
rorl
shrb
aas
mov
daa
sahf
mov
jnp
movsl
sbb
test
int3
sbbl
loop
fstps
test
fisubs
sub
mov
push
dec
jno
and
sub
int3
xchg
xchg
lea
stos
rolb
repnz
leave
and
jg
xor
aas
hlt
xor
mov
cmp
filds
mov
and
mov
push
and
sbb
jbe
push
cwtl
xor
pop
ljmp
test
das
sub
add
lea
mov
pop
fs
jmp
inc
sbb
jge
xchg
out
jnp
or
fwait
mov
inc
lcall
aaa
pop
adc
push
cmp
sbb
daa
cmp
push
sub
add
inc
fisubs
lods
or
mov
jno
mov
cmp
in
arpl
fisubrl
cld
scas
mov
dec
mov
cltd
sbbl
cwtl
push
loop
or
shll
push
aam
cmp
addr16
mov
movsb
imul
mov
test
out
or
xchg
lods
out
loop
fildl
fnstsw
jbe
jnp
ror
shl
jb
xlat
outsl
or
sahf
ja
xchg
repz
mov
rorb
inc
inc
scas
pop
icebp
in
push
fisubs
sahf
loope
and
js,pt
jns
out
jle
and
jecxz
cs
stos
pop
mov
dec
jmp
jb
je
movsl
dec
inc
xchg
xor
imul
pop
dec
xchg
sub
sub
lods
lahf
enter
inc
jg
sub
clc
or
adc
pop
inc
out
je
mov
iret
mov
adc
mov
pop
sbb
push
pop
pop
mov
daa
push
aad
pop
push
mov
pop
clc
jge
fisttps
rorb
inc
outsl
repz
loop
call
movsb
imul
or
adc
cmp
xchg
in
stos
lods
lods
fbstp
nop
push
mov
mul
push
pop
cld
mov
xchg
mov
push
lods
push
cmp
movsl
ja
mov
cmp
sbb
mov
or
push
inc
jp
fisttpl
sbb
or
jno
sub
sub
sub
insb
or
arpl
leave
fnstcw
mov
sub
cmp
and
inc
aaa
fsts
xchg
das
fistpl
test
sbb
inc
add
repz
sub
aaa
push
nop
push
pop
outsb
jno
stc
lcall
jae
mov
lcall
push
test
mov
mov
arpl
pop
and
js
cmp
ss
jmp
stc
pushf
push
nop
add
ljmp
pop
rcrl
push
in
and
mov
xchg
sub
ja
pop
pop
lret
subl
sbb
xor
jns
xchg
jp
xor
xor
mov
jne
dec
ljmp
jecxz
xchg
push
mov
mov
mov
jb
les
mov
ret
jge
int3
sbb
popf
adcb
mov
push
aam
ss
mov
adc
jns
xchg
xchg
adc
in
mov
add
dec
and
ljmp
push
inc
dec
das
push
jecxz
xor
stos
add
and
xchg
sub
mov
mov
mov
inc
aam
ljmp
ret
loopne
loope
mov
int
add
xchg
out
cmp
lret
pop
outsb
xchg
mov
outsb
or
xor
ds
xchg
cwtl
fs
sbb
imul
int
lods
xchg
sbbb
pop
ret
lods
sbb
pop
popf
les
out
or
sbb
mov
mov
jecxz
push
adcl
test
mov
lret
out
xchg
jl
xor
fsubs
je
lock
mov
cmp
mov
sbbl
pop
fbstp
push
imul
cmp
jns
cld
std
sarl
gs
roll
mov
xor
nop
cmp
sub
outsb
jmp
sub
andb
sti
sbb
sbb
adc
into
lcall
test
out
jmp
lock
out
fdivrl
loop
pop
sbb
push
inc
push
adc
pop
cmp
xlat
adc
fdivrs
lock
std
xchg
cmpsb
xchg
fstpt
push
dec
inc
mov
js
cmp
push
sbb
adcl
pop
adc
and
push
pop
push
test
mov
dec
and
rolb
adc
jge
fsubs
cmp
xor
sbb
push
test
orl
add
add
leave
push
xchg
pop
add
jns
mov
or
insl
mov
sbb
xorl
aam
jnp
enter
or
cltd
jno,pn
xchg
cltd
faddl
enter
in
mov
out
stc
mov
aam
loopne
push
mov
adc
mov
out
js
xor
pushf
sahf
repnz
enter
mov
or
mov
cmp
ret
jo
out
jg
div
ret
and
cli
sbb
pop
pop
add
mov
push
xchg
into
stos
mov
insl
loopne
xchg
out
jge
out
and
xchg
pop
out
popa
and
or
out
hlt
jecxz
mov
fldt
inc
mov
jo
cmp
dec
inc
jo
pop
jg
fidivs
and
jl
push
mov
and
jae
test
loop
jmp
xchg
repnz
xor
mov
mov
js
hlt
xor
call
clc
mov
outsl
adc
out
push
pop
sarl
aaa
push
jo
push
fnstcw
lea
sub
out
inc
pop
and
bound
jo
cmp
cmp
xor
xor
push
mov
xchg
lock
pop
nop
mov
jno
jge
daa
xchg
cmpb
out
sub
icebp
dec
lods
lods
aaa
mov
adc
int3
scas
orl
xchg
test
stos
test
push
divb
add
adc
stos
cs
jmp
xchg
ja
cmp
mov
je
inc
ljmp
mov
dec
xor
xchg
and
dec
or
mov
insl
push
aad
arpl
pop
or
push
add
or
ss
in
mov
dec
in
cmp
mov
lahf
add
jne
mov
lds
mov
mov
sub
push
mov
pushf
mov
loop
lcall
jbe
movsb
and
adc
lcall
pushf
std
fnstsw
lods
icebp
and
mov
mov
outsb
inc
pop
inc
xor
popf
mov
and
lcall
or
mov
push
rol
xchg
shlb
aas
lods
mov
push
mov
jmp
insb
ja
aaa
pop
fxch
lds
dec
push
lds
out
jp
add
jb
pop
mov
int
lahf
sbb
int3
adc
jmp
leave
jg
mov
mov
in
bound
rclb
jb
sub
or
les
mov
or
dec
jns
pusha
adc
jp
sbb
and
adc
push
adc
or
scas
into
and
mov
adc
pop
inc
cld
sub
repnz
mov
lcall
dec
add
std
int
xchg
adc
daa
cli
mov
cltd
or
jp
add
push
in
lock
inc
cwtl
mov
mov
xchg
in
test
nop
sbb
in
imul
cmpl
sti
cmpsl
inc
jl
or
scas
in
aam
dec
jl
insl
jle
out
push
movsb
mov
push
pop
mov
xor
mov
nop
push
out
push
push
inc
sbb
icebp
add
sbb
lea
pop
adcb
ret
cmp
call
imul
lods
dec
mov
cmp
stos
add
and
cmc
popl
popf
stos
cmpsl
rcll
in
and
fwait
add
cli
idiv
jmp
cwtl
pop
in
mov
imul
mov
inc
fildll
clc
into
bound
movsb
xor
mov
dec
aad
jmp
push
jge
lods
lahf
stos
add
mov
inc
insb
lret
aam
dec
pop
mov
stc
cmp
enter
jns
imul
jo
xchg
out
in
mov
pop
nop
jb
fwait
jae
addr16
loop
movsb
les
push
sub
pop
inc
lret
inc
out
sub
js
jmp
jmp
pop
fs
pop
inc
jge
loopne
xlat
pop
mov
into
inc
sbb
lds
inc
fwait
push
repz
push
lahf
out
adc
xor
jle
pushf
jecxz
scas
jge
loop
dec
and
stos
inc
popw
in
sub
or
lea
insb
loope
add
sub
insb
cmpsl
fdivrl
mov
fwait
or
sub
cmp
scas
xchg
push
in
in
and
shlb
sub
add
dec
sti
cltd
call
cmp
jne
xlat
lea
mov
ds
or
inc
cmp
inc
std
pop
enter
or
orl
into
dec
test
mov
mov
imul
add
insl
adc
xor
xor
popf
gs
mov
adc
sub
pop
cmp
cli
sahf
iret
in
stc
out
inc
aas
lods
pushf
lahf
or
test
mov
or
iret
scas
jecxz
push
lret
cmp
out
ljmp
sbb
lock
movb
push
pop
jle
mov
imul
int
shll
sbb
lock
and
mov
icebp
into
sub
stos
inc
dec
push
and
into
rcll
push
push
outsb
pop
test
cmpsb
sti
pop
mov
in
mov
ret
rorl
das
inc
adc
mov
push
insl
movsb
xchg
popa
sub
arpl
stc
iret
mov
cwtl
aas
push
mov
test
mov
fisttpl
xchg
mov
iret
in
rorb
int3
dec
in
in
lcall
in
out
add
cmpsb
fisubrs
or
loopne
inc
repz
push
enter
or
fdiv
sub
pop
push
ficompl
jae
in
push
jecxz
lret
lahf
sbb
subl
shlb
and
push
jecxz
push
xor
arpl
lock
dec
call
jmp
daa
cmp
movsl
stos
dec
or
sub
mov
jnp
jb
das
aad
push
mov
mov
dec
add
mov
loope
inc
cmc
mov
xchg
xor
fidivrl
mov
mov
ja
mov
das
jne
xchg
sbb
outsb
out
pusha
xlat
mov
mov
dec
sbbl
cmp
bound
adc
adc
mov
lret
in
push
js
mov
cmpsb
xchg
mov
mov
cmpsl
pop
loop
test
mov
orb
mov
daa
cltd
inc
cld
ret
fcoms
das
and
js
lcall
stos
cmpb
xlat
test
mov
jno
fs
fs
in
fnsave
std
in
add
cmp
pop
leave
pop
push
out
ljmp
inc
and
pop
insb
xchg
and
nop
sarb
mov
iret
mov
jo
aas
fidivrl
pop
sbb
repnz
mov
mov
push
in
mov
dec
rcr
or
add
fucomi
icebp
loopne
aad
mov
rol
lahf
and
and
add
sub
adc
inc
add
add
sti
xor
js
push
dec
inc
pop
leave
popa
mov
cmp
dec
in
js
cld
pop
mov
enter
xchg
mov
pop
das
or
or
jmp
pop
jbe
mov
gs
jg
xchg
inc
mov
shll
insl
push
das
mov
push
xlat
mov
dec
xor
loope
es
adc
test
pop
popf
push
dec
add
lret
mov
jmp
in
lock
mov
ret
mov
mov
and
xor
cmp
sti
add
push
push
iret
pop
stos
jnp
pop
dec
rclb
icebp
shll
xchg
lcall
in
push
in
and
pop
jmp
pushl
ds
mov
negl
or
test
xor
movsl
out
mov
cli
daa
fidivrl
cli
xchg
jo
push
sbb
pushf
jns
push
pop
cs
enter
push
rep
jnp
lods
mov
hlt
and
xchg
out
cmp
leave
or
add
sbb
mov
mov
adc
jne
cli
movsl
jp
cmp
and
movsb
lods
lods
in
add
push
mov
dec
sbb
dec
shlb
test
mov
xchg
add
add
mov
ss
jle
fmull
enter
or
push
xor
jns
in
aad
mov
lret
xor
push
pop
fsubl
jl
ss
inc
sti
sub
cmp
pushf
cmp
mov
ficoml
insb
std
mov
sbbl
adc
iret
add
mov
push
aas
push
mov
fnstsw
repz
adc
dec
pop
rcrl
lret
in
addr16
xchg
fistpll
and
xor
adc
dec
mov
sbb
cmp
sti
mov
cmpps
not
sbb
incb
pop
pop
push
insb
test
push
cmp
pop
jnp
cmpsl
jo
divl
xchg
mov
pop
enter
jno
dec
fdivrs
sub
dec
sbb
leave
pusha
xchg
and
and
mov
xchg
das
sub
mov
or
into
je
clc
jno
fcmovnu
imul
hlt
loopne
xchg
es
cwtl
jle
cmpl
int3
push
mov
push
ret
jnp
push
or
fiaddl
xchg
decb
sub
je
daa
clc
loopne
xchg
sbb
push
shr
rcr
and
jecxz
dec
das
fbld
shrb
cmc
sub
adc
lds
sbb
mov
and
jle
int
inc
in
jb
sahf
xor
cmp
xor
sub
dec
fld
mov
sbb
iret
jns
adc
bound
inc
mov
jmp
jno
leave
xchg
xchg
lcall
stos
aaa
or
test
das
stc
aas
jmp
out
cmp
sub
sbb
or
pop
lahf
dec
outsl
mov
pop
mov
stc
aas
jmp
out
cmp
sub
sbb
or
pop
lahf
dec
outsl
mov
pop
mov
leave
out
cmp
sub
sbb
or
pop
ja
jnp
and
das
stc
das
jmp
out
cmp
andl
jle
icebp
aaa
xchg
jo
pusha
mov
mov
pop
jge
insl
std
test
imul
in
in
std
popf
lea
mov
jge
insl
jge
or
sub
std
std
in
jecxz
popf
loop
popf
mov
fists
lds
add
adc
and
mov
hlt
loope
cli
mov
jge
sbb
dec
cmp
in
into
ss
mov
xchg
jno
adc
pushf
jecxz
mov
add
or
loope
insl
mov
lea
test
in
int
popf
pop
mov
dec
mov
mov
push
ficomps
and
mov
pop
lds
jo
lods
jno
mov
lea
mov
dec
or
ret
ret
int3
enter
bound
out
or
ds
clc
loop
adc
cmp
cld
sub
pushf
inc
mov
lods
loopne
jl
inc
loop
setle
insl
and
mov
adc
bound
dec
push
lods
jge
insl
ja
or
xor
les
sbb
std
hlt
mov
mov
lods
shll
pop
sub
sbb
jns
jb
inc
sub
cwtl
mov
call
fdivl
or
adc
cs
test
mov
mov
lret
int3
leave
cmp
and
adc
or
cmp
std
in
in
std
popf
lea
mov
jge
insl
jge
or
sub
in
in
std
popf
lea
mov
ret
push
jno
outsl
ds
jae
jbe
or
lock
out
cmpsl
inc
cli
mov
push
xchg
dec
fsts
or
or
test
outsb
mov
cmp
and
fidivl
push
inc
out
mov
sbb
adc
outsb
fwait
insl
lds
or
pop
ret
adc
nop
mov
mov
cmp
cli
bound
inc
jno
push
scas
push
xchg
popf
out
inc
pushf
jb
mov
mov
ds
sbbl
xchg
nop
notb
hlt
sub
mov
pop
cmpsl
adc
je
fyl2xp1
sbb
popa
ret
sub
btr
xchg
add
ja
inc
test
lds
in
movl
inc
mov
pop
jae
inc
push
fadds
adc
push
cmpsl
dec
jle
iret
add
pop
imul
pushl
divl
xchg
mov
inc
adc
jmp
xchg
sbb
xor
hlt
xor
fwait
test
jns
inc
add
lock
jae
gs
aas
in
inc
pushf
or
add
mov
inc
arpl
popl
pop
pop
mov
in
pop
cld
xchg
popa
dec
stc
int
inc
lds
mov
cmp
or
sbbl
cmpb
mov
aam
xor
dec
int3
filds
mov
shrl
aaa
or
insl
test
hlt
sbb
xchg
push
cmp
pop
sbb
sub
cmp
stc
das
stc
mov
scas
in
stc
sbb
dec
lods
xchg
cmp
nop
cli
pusha
sarb
nop
mov
pop
and
fcoml
test
enter
sbb
cmc
or
or
outsl
adc
shr
fnsave
pop
cli
fcom
fdivs
mov
shll
xor
xor
addr16
xor
ja
popf
pop
shl
jo
add
nop
lahf
and
out
or
dec
sub
dec
sti
sub
jle
push
adc
mov
movsl
lcall
ror
shlb
and
mov
int3
js
push
dec
loop
mov
or
movsb
xchg
fcmovu
hlt
mov
dec
pop
pop
add
inc
push
std
dec
cs
jge
sbb
push
sbb
inc
sbb
sub
xchg
movl
push
cli
mov
sub
jns
sub
lods
mov
fmuls
lahf
js
data16
aam
jb
mov
popa
lret
lods
rcrl
ja
shll
fimull
or
jnp
sbb
jbe
leave
int3
jecxz
pop
cmp
inc
mov
scas
or
cmpb
ja
jp
lods
pop
push
cmc
sbb
stos
mov
add
imul
cmpsl
mov
pusha
pop
lret
test
mov
dec
dec
inc
or
sbb
sbb
stc
mov
mov
daa
push
xor
jg
loope
and
cld
jae
jo
pop
lods
movb
loop
clc
movsb
js
daa
push
loopne
addb
mov
jg
clc
cmp
pop
enter
cmp
andps
sub
add
bound
mov
sbb
shl
cs
fisttps
movsl
xor
sub
or
push
jo
pop
sarl
xchg
movsb
or
jl
std
inc
mov
adc
test
push
lret
mov
xchg
sarb
pop
clc
xor
sub
lahf
cltd
ret
rcrb
jae
push
ljmp
jo
xchg
cmpsb
mov
xorl
cmp
outsb
movsb
ja
int
in
ds
sub
test
scas
pop
pop
cmp
jg
fcoml
sub
cmp
aas
cmp
mov
and
pusha
repz
pusha
fwait
push
ret
fidivs
jae
sub
cmp
push
push
jg
popa
pop
js
sub
jl
adc
bound
loop
fidivrs
add
xor
cwtl
cmp
add
xchg
xchg
imul
scas
ds
mov
push
mov
iret
pop
push
loop
in
ja
cld
xchg
or
push
decb
ret
dec
cwtl
shlb
addb
aad
jns
shlb
das
xchg
pop
aaa
mov
jmp
gs
mov
inc
jmp
cwtl
das
or
sbb
negl
xor
les
and
push
aaa
loopne
push
xchg
fwait
sbb
das
es
mov
pop
dec
jb
mov
jns
test
ret
fsubs
es
and
fwait
adcb
out
aam
xchg
nop
insb
ret
sti
jne
sahf
lds
lret
loopne
addr16
insl
xlat
rclb
and
push
jno
fstl
xchg
pop
mov
mov
sub
push
aas
adc
out
xor
and
sbb
negl
or
mov
out
mov
scas
jp
add
clc
aam
ss
xchg
mov
adc
inc
mov
shll
xor
adcl
es
push
repz
les
ja
or
cmpl
cmc
stos
xchg
or
lea
movsb
mov
insb
gs
push
imull
ljmp
ret
shll
sub
mov
and
mov
dec
ret
aas
mov
fldcw
leave
cmp
sbb
sub
in
lds
adc
hlt
xor
jae
dec
mov
xchg
and
rclb
ficomps
das
fadd
pop
ljmp
and
lds
dec
inc
push
push
data16
mov
pop
test
and
mov
cli
outsl
mov
dec
lret
inc
mov
pop
xchg
push
fldcw
fsubrs
push
add
fs
bound
aam
push
idivl
repz
pop
fdiv
lret
push
ret
cmpsb
push
add
arpl
in
cmpl
lahf
or
test
mov
cmp
ficoms
pop
lret
mov
push
dec
mov
push
mov
lock
sahf
pop
div
sbb
and
pop
stos
fidivrs
sub
pop
int3
xor
filds
nop
sahf
addl
lahf
jne
adc
push
cld
or
cmc
mov
xchg
mov
xor
jg
rolb
mov
js
das
mov
xor
sbb
std
and
test
sti
mov
test
ror
lock
int
stos
cmp
dec
bound
jb
daa
inc
jns
sub
fldl
sub
sarb
xor
mov
fsubrl
lea
das
mov
and
je
inc
mov
fisttpll
xchg
lock
scas
std
pop
push
test
sub
imul
jae
cmp
jno
dec
iret
test
aas
fiadds
xchg
ljmp
aas
sti
jnp
mov
mov
stos
hlt
movsb
mov
mov
sub
repz
aad
jbe
dec
pop
mov
mov
sbb
push
mov
mov
add
fwait
cmp
test
enter
mov
jmp
test
jle
mov
jl
mulb
arpl
sbb
and
lcall
mov
mov
mov
push
adc
pop
pusha
lcall
or
es
push
adc
lods
add
stos
and
inc
jnp
stos
test
mov
frstor
sti
ja
and
pop
mov
pushf
mov
mov
mov
fsqrt
js
fisubl
idiv
push
add
adc
push
jae
mov
add
stos
mov
cmpsb
dec
sarb
shl
push
xchg
hlt
fnstcw
vfnmsub213pd
add
movsb
dec
lods
popa
das
fstpt
adc
and
mov
into
mov
daa
xchg
movsl
xchg
and
test
inc
mov
mov
arpl
or
xor
or
arpl
inc
dec
xor
mov
leave
js
ror
inc
cwtl
jae
xchg
inc
cmpsb
jo
fdivs
mov
fstp
or
jbe
lods
jae
pop
fucomi
xchg
xor
aaa
sbb
push
cmp
popf
inc
lods
cmp
xchg
or
pop
jae
cmp
push
add
jb
test
shr
enter
inc
stos
out
out
mov
adc
iret
popf
arpl
daa
aaa
setle
adc
fwait
push
rsqrtps
and
xchg
insb
test
fcmove
cmp
jns
pop
int3
inc
push
in
xor
mov
adc
add
pop
into
nop
mov
push
and
repnz
repnz
lock
pop
stc
fsubrs
jmp
or
sahf
fwait
and
aaa
in
cmp
pushf
cld
mov
imul
and
mov
sbb
mov
pop
movsb
daa
or
and
cs
sbb
in
imul
push
xchg
lock
sbb
in
xor
or
xor
xor
push
test
mov
int
shlb
out
sbb
cmp
cmp
lods
lods
cli
pop
adc
fidivrl
pushl
out
ljmp
inc
ss
pusha
adc
sub
add
rolb
sbb
mov
les
inc
mov
ja
inc
xor
fdivrp
adc
mov
lret
jne
imul
push
pop
outsb
fcmovnbe
add
pusha
push
and
xchg
outsl
in
xchg
daa
jecxz
stos
out
outsb
dec
mov
mov
sub
cmp
ret
inc
cmp
into
xor
and
push
push
push
mov
pop
insl
sbb
pop
lock
mov
jno
sbb
sub
xchg
int3
mov
inc
xor
je
mov
dec
lret
push
ucomiss
cmc
pop
lods
jne
repz
jp
xchg
push
push
rcll
arpl
in
nop
mov
or
push
push
pop
imul
je
inc
iret
xchg
adc
stos
xchg
les
pop
cmpsl
or
cmp
add
adc
pop
lods
jl
in
ffreep
lcall
nop
mov
in
fcompl
pop
rcr
popf
lea
inc
test
ret
stc
or
mov
pop
ljmp
push
pop
jmp
mov
sub
repz
dec
jmp
pop
push
icebp
add
push
push
sarl
loopne
mov
int3
jnp
dec
mov
mov
pusha
push
xchg
pusha
daa
mov
sbb
test
mov
sbb
jne
jo
js
mov
les
enter
fs
sbb
adc
mov
incb
pop
push
xchg
push
and
lods
je
pusha
int3
sbb
insl
push
or
imul
xor
mov
or
cwtl
inc
iret
in
out
or
fistpl
mov
lret
pusha
cmp
loope
cwtl
adc
adc
test
and
add
push
clc
xchg
jns
shll
push
dec
xor
not
mov
or
daa
jno
lock
int3
inc
lods
mov
popa
ss
hlt
add
xchg
lods
lret
jmp
out
cmp
dec
sarl
lahf
jl
adc
xor
dec
inc
push
imul
dec
imul
sub
mov
cmp
test
in
mov
mov
mov
mov
push
mov
inc
dec
pop
lret
jg
mov
pushf
adc
icebp
mov
loope
fildll
sbb
inc
jns
pop
xor
hlt
xchg
mov
fsubr
and
rorl
pop
addr16
mov
sub
aad
adc
mov
xor
mov
iret
push
or
sbb
int3
icebp
mov
cmp
and
inc
mov
ret
mov
sub
and
pop
negl
inc
mov
push
push
push
add
sub
cmp
stc
test
ret
and
clc
mov
call
mov
mov
xchg
call
enter
ret
push
mov
cmpsl
push
repz
test
cmp
sbb
push
push
daa
pushf
test
cmpsl
pushl
push
jg
arpl
inc
sub
insb
push
popf
inc
stc
out
mov
out
pop
mov
mov
out
sbb
rcll
push
add
mov
add
add
sarl
or
inc
aad
pop
add
dec
sbb
lods
xchg
in
jb
lods
mov
xchg
cmp
js
pop
sub
outsl
jg
jns
mov
jo
das
cmc
cmp
mov
call
pop
cmp
insb
popa
jne
lods
pop
mov
push
call
loope
push
xchg
ret
outsl
sub
lahf
movsl
sbb
test
mov
lret
jb
jp
adc
xor
insl
xlat
dec
lcall
mov
and
pop
sbb
loope
inc
dec
repz
arpl
inc
sbb
xor
shlb
adc
filds
std
test
test
inc
push
rorb
lfs
neg
inc
push
jge
dec
sub
mov
mov
cmp
shlb
std
xchg
pop
mov
mov
pop
and
jmp
orb
fs
pop
bound
int
ds
push
xchg
adc
in
fcompl
loopne
or
lret
aaa
pop
mov
push
mov
out
cmc
mov
mov
xor
pop
out
mov
ja
fdivl
cmpb
mov
andl
mov
jmp
decb
mov
ja
push
iret
xor
ja
or
cld
cmp
stos
xchg
fdivrl
cmp
lar
ss
jne
xor
out
mov
pop
cmpsb
push
loop
orl
jmp
andl
sbb
frstor
inc
scas
aad
movsb
outsb
in
push
fdivrs
jne
ss
mov
xchg
cli
stos
pop
fisubs
ret
dec
mov
push
movsb
lock
ret
pop
xor
imul
xchg
cs
lahf
and
and
ret
sbb
repnz
pop
fnsetpm(287
aas
xor
adc
or
adc
jae
ret
in
cmp
lahf
out
xchg
aad
cli
fsubrl
xchg
sbb
mov
lahf
mov
sti
dec
fdivrl
outsl
mov
sub
cmp
dec
push
aam
push
jl
mov
fwait
cmp
mov
inc
mov
into
jecxz
and
push
lret
bound
scas
mov
pop
cmc
ds
push
push
out
pushl
xchg
mov
mov
icebp
loopne
lahf
mov
mov
lret
sub
add
mov
mov
daa
mov
lock
mov
scas
dec
pop
je
cs
in
mov
test
add
xchg
out
dec
test
test
or
std
cmc
cmp
mov
xor
bound
mov
mov
into
push
test
movb
scas
jne
cmp
js
in
and
mov
divb
add
fs
cwtl
stos
cwtl
cmp
jns
push
mov
jnp
jb
stc
xchg
test
rclb
insl
movsl
mov
mov
imul
push
lds
mov
out
xchg
mov
int3
icebp
addr16
sbb
sbb
jp
inc
push
cmc
inc
lds
add
dec
push
adc
cmc
les
push
xor
sub
testl
add
imul
les
mov
push
mov
ret
dec
gs
repz
mov
clc
rolb
andl
fcompl
cmp
loope
lahf
xor
mov
and
iret
xchg
cs
mov
insb
ffree
mov
shrb
aam
jns
jl
cwtl
out
enter
lds
imul
xchg
ficoml
cmp
stos
aad
xlat
ds
sub
sahf
xlat
mov
in
mov
mov
and
sti
pop
sbb
dec
clc
mov
sub
add
cltd
fwait
jns
sub
jmp
cmp
mov
mov
gs
leave
push
adc
scas
in
loopne
pop
xor
in
lock
mov
in
loope
in
fdivrl
pop
loop
movsl
mov
inc
xlat
daa
jmp
repnz
jne
popf
call
hlt
jns
daa
xchg
xlat
xor
in
mov
mov
mov
sub
fistpll
cmp
sub
fsubl
dec
lret
ss
push
or
ja
sub
add
pop
arpl
xlat
dec
cmovno
loop
fnstenv
sub
ss
inc
jp
mulb
call
in
or
push
stos
bound
pop
iret
and
inc
xor
jb
daa
lahf
out
stc
xchg
inc
stos
sbb
clc
and
mov
call
inc
push
out
add
lahf
loop
into
bound
xchg
loop
jle
es
call
test
add
sbb
aad
mov
push
testl
leave
push
sbb
inc
sbb
lahf
imul
mov
mov
pop
lods
lret
insl
and
std
hlt
pop
int3
je
loop
adc
xchg
add
in
push
scas
lea
xchg
xor
sbb
lods
lahf
xor
mov
mov
stos
das
fcoml
xchg
push
push
or
add
clc
lods
cmc
cmpsb
cmpsb
mov
bound
mov
push
sbbl
addr16
adc
pop
jge
call
mov
mov
popf
imul
lahf
or
aam
or
gs
icebp
movsb
and
in
xchg
or
cltd
jnp
jnp
push
imul
push
popf
popf
jg
enter
sub
mov
cs
sub
push
insl
xchg
and
in
bound
mov
loop
les
xchg
iret
sub
les
sbb
xchg
movsb
mov
shrl
jae
jae
popa
aas
pop
hlt
mov
adc
mov
xor
arpl
mov
push
dec
adc
pop
mov
mov
add
mov
mov
push
jmp
jbe
mov
jbe
int
pop
loope
and
leave
jge
pusha
sbb
sub
mov
xor
jmp
scas
fsubrl
cmovne
and
mov
mov
pop
hlt
shlb
int3
xchg
popa
or
jmp
hlt
jle
arpl
cmp
mov
in
stos
outsl
ja
es
in
lcall
pop
lock
imul
xchg
adc
dec
inc
and
das
shlb
sbb
popf
add
pop
out
xchg
int
push
or
aam
rcl
pop
sub
leave
rol
pop
faddl
test
jae
xor
jl
sarl
inc
popa
in
ljmp
mov
push
aad
movb
jno
xor
pop
dec
mov
int
xchg
je
sub
shlb
sahf
insb
jb
jne
add
sbb
jmp
sub
lahf
push
mov
fdivrs
in
fcmovu
push
into
shrl
test
pop
outsl
imul
pop
push
jo
lea
and
aam
lcall
and
out
cwtl
fisttpll
lea
dec
in
call
fsubrp
dec
js
sub
stc
sub
loope
mov
xchg
test
dec
jl
push
push
mov
loope
lock
iret
dec
out
jecxz
dec
ljmp
lret
vorps
push
movq
dec
sub
push
gs
jg
fs
jo
aam
mov
push
pop
in
push
jmp
and
xor
es
les
sbb
xor
dec
cmp
cmpsl
pop
ss
push
xor
dec
push
dec
push
das
lret
xor
out
inc
mov
aad
hlt
mov
mov
scas
cmp
popf
inc
push
mov
test
loopne
dec
orl
pop
and
aaa
mov
and
push
pop
add
push
mov
pusha
lea
pusha
mov
sub
mov
adc
pop
pop
push
push
lret
pushf
pop
orb
int3
xor
jmp
push
xlat
cmp
lcall
lods
pusha
ja
add
mov
xor
mov
mov
lock
imull
xchg
pusha
sub
andl
test
repnz
insb
mov
in
mov
push
aam
dec
and
enter
sub
cmp
mov
push
sarl
inc
inc
std
bound
stos
cwtl
xchg
push
ficoms
js
lret
adc
nop
pushl
popf
jae
xor
aaa
clc
dec
dec
nop
lahf
pop
neg
xor
mov
sti
cmpsl
pop
or
mov
data16
jg
das
sahf
xorl
outsl
add
add
xchg
inc
jbe
pop
mov
mov
dec
inc
stc
jle
cmc
imul
adc
xchg
sahf
addb
jmp
enter
cmp
jl
scas
cmpsl
xchg
and
std
enter
pop
inc
adc
sbb
repz
daa
mov
in
mov
add
sbb
sub
int
std
in
in
std
popf
lea
mov
jge
insl
jge
or
sub
in
in
std
popf
lea
mov
jge
insl
jge
or
sub
in
in
std
popf
lea
pop
dec
dec
pop
jl
insl
jl
or
lods
cmp
push
in
in
mov
add
push
inc
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
aad
xor
pop
test
sbb
inc
mov
or
cmp
sub
pop
mov
push
insl
mov
cmp
call
in
push
std
sub
pop
fisubrs
inc
or
inc
outsb
push
enter
aam
adc
sbb
xlat
pop
test
int
cld
adc
bswap
sbb
cld
sub
push
rorb
int3
sub
data16
fldenv
xchg
cmp
and
sub
aad
mov
mov
rcl
xchg
insb
test
ret
int
cmp
clc
stc
popf
in
enter
mov
imul
pop
js
sub
cmpsl
lods
lds
std
jge
sbb
ljmp
cmp
dec
push
insl
pop
xchg
out
inc
jne
inc
mov
dec
sarl
pop
in
cwtl
sub
stos
aad
and
popf
sbb
lea
or
int3
jge
adc
cmp
sub
fucomp
dec
fdivrs
jge
jp
dec
les
cmp
push
adc
in
cmc
loopne
ss
movsl
push
mov
ljmp
dec
mov
mov
pusha
jns
dec
xchg
push
shlb
decb
add
sub
test
popa
and
mov
iret
sub
call
enter
popf
push
enter
call
in
cmp
sub
pop
mov
push
insl
mov
cmp
call
in
cmp
sub
pop
mov
push
ljmp
cmpsl
dec
cwtl
mov
mov
ror
fildl
pop
mov
add
lret
xchg
cmp
dec
and
cmp
cmp
and
in
cmp
subl
loop
das
sti
sahf
push
in
mov
lcall
lret
jl
lock
stos
int
adc
in
std
and
and
lahf
jno
adc
pop
mov
fistl
push
mov
add
jge
es
popf
mov
cwtl
mov
cmp
mov
sti
js
int3
scas
push
pop
loope
push
pop
adcl
data16
add
aas
pop
int3
mov
mov
stc
inc
lock
xchg
icebp
sbb
stc
mov
call
inc
fwait
jno
scas
mov
sbb
dec
or
movsb
adc
push
clc
or
and
and
inc
cs
jge
insl
ljmp
out
stos
ljmp
lock
mov
fcomip
lret
std
dec
loope
push
sub
xchg
loope
aam
subb
frstor
lret
fs
xlat
bound
push
divl
pop
insl
js
aad
sbb
cmp
pop
mov
jl
sbb
jnp
scas
and
xchg
and
pop
lcall
inc
scas
ret
in
out
lahf
mov
dec
lret
xor
mov
in
imul
test
mov
cli
add
pop
enter
lods
into
rcr
pushf
jle
mov
or
ljmp
shll
aas
hlt
push
mov
push
fs
cmp
xchg
cmpsb
xchg
cmpsl
ds
adc
jbe
xchg
ljmp
inc
xchg
pop
das
mov
aam
mov
scas
pop
out
xchg
push
out
stos
enter
sub
ljmp
inc
mov
inc
pop
outsb
push
cmpsb
call
sub
cmp
outsl
adc
pushf
movsb
jbe
loopne
sbbl
pop
jns
jp
lods
into
mov
imul
lret
ja
dec
leave
aam
inc
mov
xchg
stc
pop
ret
xchg
sbb
xlat
and
fs
fs
mov
shlb
or
xor
push
daa
cwtl
cmp
xchg
mov
dec
mov
int
loop
jae
daa
adc
xchg
outsl
out
adc
cmp
mov
dec
scas
push
xorb
add
icebp
pop
aam
mov
in
or
pushf
inc
mov
adc
adc
jae
jns
dec
js
addr16
das
imul
jle
mov
aam
lret
popa
sub
inc
jne
stc
leave
fldcw
inc
arpl
call
pop
insl
sub
jle
bound
jb
cld
jecxz
jmp
push
cmp
push
into
popf
fistpll
andl
fwait
xchg
jl
jo
inc
cmp
loope
repnz
mov
mov
out
repnz
cmp
jle
outsl
shlb
mov
pushf
je
fstpt
inc
daa
icebp
enter
test
test
xchg
add
sti
imul
add
test
mov
pusha
sub
xchg
inc
insl
aam
pop
mov
ss
xchg
lock
cmp
ds
adc
push
ret
popa
add
sub
push
imul
ja
or
int
cmp
data16
ds
pop
mov
repz
out
cltd
push
jle
cmp
mov
ja
loop
das
imul
and
pop
roll
mov
dec
sbb
xor
pop
test
mov
clc
arpl
push
popa
ljmp
push
or
fcompp
cmc
les
les
pop
adc
add
jg
loop
or
repz
in
cmp
mov
mov
mov
mov
lret
inc
fsubs
aas
sbbb
pop
das
mov
jge
popf
cmp
pop
fildll
arpl
inc
sbb
imul
fs
jle
jns
repnz
jg
clc
cmp
jo
aad
lahf
cs
test
mov
pop
mov
mov
inc
fsubs
cmpsb
sar
rol
lahf
pop
sahf
and
outsb
or
stos
loop
stos
add
fwait
ljmp
imul
mov
cwtl
dec
test
icebp
sbb
lods
push
es
mov
das
lods
mov
paddsb
icebp
dec
and
sbb
outsb
jns,pt
popf
sub
sub
sbb
shl
lret
rcr
cmp
repnz
stc
add
iret
popf
or
fmull
hlt
sub
divl
xor
sub
push
rorb
repz
xor
pop
push
mull
js
shll
nop
pop
jl
jmp
fs
stos
lock
test
scas
jb
mov
mov
push
pushf
stos
aam
fimuls
out
stos
push
add
cmc
pop
mov
push
sbb
aas
in
daa
lret
shll
bound
push
iret
sti
push
jmp
add
pusha
mov
popf
cmp
mov
dec
jge
pop
or
push
inc
cmp
mov
xchg
jb
and
int3
sub
sbb
insb
fs
sti
sub
push
xor
jp
sub
mov
sbb
jge
mov
clc
shlb
hlt
repz
fmull
adc
dec
pusha
dec
fsubs
xchg
add
jle
cmpsb
in
xchg
fs
xchg
fcoml
incb
push
insl
das
stos
fsubrl
cwtl
jo
jb
dec
adc
dec
lret
fucomi
or
idiv
jle
data16
sbbl
inc
and
cltd
leave
or
cmp
lcall
jg
mov
push
cltd
dec
ja
out
add
jnp
xlat
push
pop
out
mov
push
loop
ret
stos
call
xor
add
jb
mov
sbb
xor
mov
jmp
sbb
inc
add
cmp
mov
test
mov
insl
aas
loope
in
aaa
out
pushf
cmpsb
or
ret
sbb
pop
pop
fsts
lods
loopne
mov
mov
daa
pop
push
outsl
in
pop
ret
and
mov
sub
insb
add
xchg
insb
sbb
xor
mov
je
fisubrl
rol
jb
xor
xchg
shlb
stc
or
aad
xchg
call
inc
pop
adc
decl
lods
mov
fdivs
jae
popa
dec
sbb
into
clc
ds
sti
ret
mov
xchg
and
push
xchg
popf
in
sub
sbb
fwait
std
mov
out
sbb
in
fwait
xchg
jae
add
adc
call
jo
sub
pop
jecxz
and
test
loope
push
xorl
xor
es
xchg
push
adc
cmp
xchg
mov
lods
mov
test
aad
ret
test
xlat
mov
call
add
mov
inc
dec
push
jp
and
inc
push
lret
mov
adc
outsb
mov
push
clc
jo
adc
int3
dec
jnp
aad
fidivl
js
fdiv
and
lea
push
or
dec
pop
adc
lock
test
xchg
or
jge
cwtl
xchg
dec
xor
push
add
jmp
cmpl
aad
filds
lock
add
jne
pop
push
xchg
loopne
jae
adc
adc
pop
stos
subb
popf
int3
add
cmc
into
cmpsb
dec
pop
jb
in
push
push
cmp
or
icebp
pop
rorb
push
cmp
cmpl
stos
popa
cmpsb
in
popa
inc
jp
into
pop
push
push
dec
test
pop
data16
jo
xor
jecxz
ret
mov
insb
pop
sbb
sbb
sub
mull
or
and
add
jmp
pop
loopne
mov
outsl
gs
mov
into
mov
mov
push
cmp
dec
or
test
inc
cmpsl
enter
jae
xchg
inc
sbb
inc
adc
add
xchg
outsb
lret
movsl
push
sbb
cmpl
mov
xchg
mov
add
push
pusha
mov
out
xlat
out
int
rcrl
sbb
iret
std
xor
jns
popa
loop
sbb
xor
xchg
rolb
pop
icebp
movsl
push
inc
mov
inc
xchg
and
pop
push
loop
pop
and
adc
dec
jae
inc
sub
pop
mov
sub
dec
mov
sbb
test
hlt
jge
push
in
inc
in
clc
mov
pop
xchg
pop
ret
popa
pop
xchg
and
mov
clc
divb
mov
xchg
imul
cmp
push
addr16
inc
ljmp
sbb
neg
loope
negb
add
mov
pop
stos
sub
movsl
gs
mov
adc
cmp
mov
jno
out
add
cli
cmp
xor
sti
test
jb
xchg
xorl
gs
adc
imul
shrb
shll
dec
dec
mov
mov
jge
lock
jge
jo
pop
mov
jg
shll
out
mov
jle
stos
sub
iret
fdivl
loope
mov
inc
mov
jl
xchg
js
sahf
dec
sub
mov
popa
pop
mov
xchg
fs
fists
inc
jecxz
mov
sub
push
mov
lds
rcr
sahf
outsb
add
mov
sahf
sub
jno
pusha
lds
push
gs
fcomp
push
cmc
jbe
mov
dec
add
movsb
out
aam
mov
into
sub
fistps
es
bound
jmp
inc
call
mov
cmp
pop
out
xor
jnp
sub
push
cmp
mov
rol
sub
inc
repnz
xor
dec
fmulp
push
lods
mov
imul
jecxz
sti
mov
push
cmpsl
outsl
push
adc
dec
add
mov
clc
pushf
mov
dec
xchg
std
bound
cmp
cmp
sarl
lcall
out
dec
ljmp
inc
mov
adc
xchg
int3
andl
jp
repnz
cmpsl
je
lret
stc
pop
inc
lock
aas
push
xchg
fwait
xchg
test
jnp
scas
jne
mov
jae
lret
jle
ret
aaa
jnp
mov
out
rol
in
add
jae
outsb
cmp
je
jle
jle
shlb
ljmp
int3
mov
insb
fdivrs
das
rcrb
push
adc
iret
in
fwait
cli
mov
ret
out
jl
jae
inc
rorb
pop
ja
leave
push
xchg
pop
cmp
cmpsl
notb
push
daa
jmp
mov
mov
dec
mov
outsb
add
repz
jbe
mov
test
or
das
fs
jo
sbb
cmp
cmp
mov
shrb
int
inc
shrb
push
adc
xlat
scas
pushf
mov
adc
pop
or
mov
mov
in
xor
push
xor
and
xchg
loopne
call
subb
ja
repnz
adc
addl
add
loopne
test
and
push
hlt
lret
pushl
xor
xorb
jbe
cmp
bound
cwtl
fcmovbe
fsubl
cmp
fldl
mov
push
pop
bound
insb
or
inc
mov
inc
dec
pop
ljmp
inc
dec
pusha
jns
mov
fwait
test
cmc
adc
lea
mov
jno
cltd
ret
loope
inc
ds
daa
xor
or
shlb
jo
xor
shlb
push
xchg
fiaddl
inc
jne
insb
scas
aas
mov
popa
jae
pushf
dec
clc
cmc
shr
outsb
cmp
shlb
out
add
gs
add
push
jb
lea
call
lar
lret
push
inc
fsubl
hlt
enter
add
cld
stc
pushf
je
out
fmull
xchg
add
repnz
lret
push
and
or
cmp
xchg
ja
jl
xor
insb
jp
lock
sbb
dec
push
ljmp
mov
popf
sub
push
mov
ljmp
test
rcrl
repnz
mov
ficompl
pusha
movsb
sub
jle
stc
in
pop
mov
cmpl
iret
ds
dec
arpl
cld
outsb
repz
sub
pushw
xlat
inc
js
loope
leave
pop
hlt
mov
icebp
jle
std
mov
or
mov
add
and
std
push
add
dec
fidivs
out
fs
cmp
scas
negl
stos
lea
pop
xchg
xor
mov
adc
xchg
cmp
cmp
scas
sub
jns
bound
push
add
mov
jg
or
bound
dec
ss
ret
adcl
ljmp
pop
into
dec
call
cwtl
dec
and
or
dec
cld
addl
push
les
daa
inc
push
fidivl
mov
popf
push
leave
mov
negl
int3
adc
shrl
push
xor
cltd
and
shlb
sub
push
inc
stc
push
es
xor
popf
push
sub
adc
mov
int
sahf
dec
in
dec
xor
daa
or
mov
jns
das
xor
push
aaa
jge
jns
addl
adc
pop
cmpsb
xor
lret
adc
adc
push
adc
fstpt
add
cld
call
fdivs
fisubrs
mov
mov
mov
insb
cmpsb
test
sbb
pop
or
cs
xor
cmp
arpl
ja
sbb
dec
sbb
insb
sub
cmp
xchg
data16
jmp
mov
pushf
lods
loop
fs
push
ss
mov
push
popa
out
insl
test
clc
ds
add
les
shrb
jmp
mov
out
dec
xchg
cs
push
or
jne
mov
insl
daa
fcompl
out
cmp
cltd
pop
divl
mov
pop
data16
fbld
mov
inc
inc
cmp
add
lea
cmpsb
fiaddl
cltd
mov
or
jae
loop
pop
add
adc
mov
xchg
imul
enter
mov
inc
lcall
jp
and
lret
jo
jmp
aam
pop
inc
add
mov
jl
push
mov
js
decl
sub
xlat
pop
push
mov
dec
cmp
je
cwtl
mov
pop
shll
lea
aas
out
std
jg
mov
jb
data16
xchg
std
adc
jnp
cmp
xchg
sbb
shl
cmp
lahf
shll
stos
fimuls
mov
jmp
repz
movsb
ljmp
xchg
jge
imul
adc
inc
sti
xchg
into
test
or
je
mov
cmp
scas
int3
in
and
pushf
mov
aaa
adc
xor
or
push
test
insl
clc
aad
sub
push
rorl
pop
adc
dec
inc
imul
fimuls
fcoms
cld
fs
jmp
and
hlt
sbb
stos
sarl
or
into
dec
xchg
jno
aaa
xchg
and
das
pop
fidivl
xchg
test
mov
push
mov
fstpt
pusha
mov
sbb
jle
xor
dec
xchg
mov
insb
outsb
loop
dec
pop
push
and
jb
outsb
movsb
cmpb
sub
arpl
push
xor
lods
add
andb
mov
nop
mov
enter
adcl
arpl
js
jl
lods
sahf
mov
cmove
or
jecxz
cmp
and
lret
xchg
test
jg
push
insb
fcomps
out
inc
cmp
sbb
pop
mov
out
xor
les
icebp
xchg
add
fsubrp
jne
inc
clc
pop
cmp
add
mov
sbb
and
push
jbe
in
cmc
nop
pop
pop
sub
ja
mov
sbb
rcr
shll
es
jl
or
sti
push
imul
in
mov
es
shll
fs
xor
fsubrl
push
mov
in
dec
sub
add
ljmp
cs
lock
adc
std
xchg
sbb
pushf
mov
inc
mov
jno
sar
jle
insb
and
adc
sbb
cmp
or
fildl
repz
cmc
inc
into
pop
in
xchg
pop
js
add
mov
sub
xor
and
inc
push
jnp
jp
push
popf
jl
mov
sub
pop
xor
inc
mov
add
pusha
sbb
jge
mov
mov
cmpsl
adc
inc
xchg
scas
pop
and
in
and
sbb
and
loope
mov
arpl
xor
ja
mov
xchg
aad
mov
das
pop
insl
cmpsb
xlat
mov
inc
inc
cmc
xor
xchg
pop
jp
int
scas
imul
mov
int
lock
pop
pop
dec
fst
insb
mov
out
or
xchg
les
daa
in
push
cmpps
mov
divl
jns
xor
mov
mov
fldpi
xor
fwait
cmp
jmp
lcall
xchg
sub
xor
adc
rclw
fldt
push
into
pop
ret
cmpsb
test
cmp
xor
xchg
insb
aam
xor
mov
aas
sbb
into
xchg
pop
loop
test
adc
stc
movsl
sub
mov
fsubs
pop
xchg
sub
stos
sbb
insb
xor
aad
mov
xor
insb
sub
jp
sub
fistps
jb
add
addr16
sti
push
lret
icebp
outsl
dec
jno
bound
icebp
sub
mov
lea
fwait
iret
gs
sub
xchg
push
fs
ds
cltd
stc
and
sbb
arpl
adc
aas
fcoms
mov
jns
pop
add
or
xor
jle
dec
ss
stc
call
xchg
pop
in
ljmp
js
adc
jmp
jp
mov
jecxz
daa
imul
pop
push
shll
mov
adc
shrl
push
or
push
push
mov
lahf
call
cmp
roll
add
std
mov
xchg
pandn
jl,pn
mov
dec
cwtl
mov
popf
or
sbb
insl
xchg
sahf
lock
rorl
inc
flds
cmp
sub
add
gs
mov
push
repnz
fimull
inc
movsb
popl
decb
push
popf
and
in
mov
fcom
adc
add
pop
mov
movsl
int3
cmc
cmpsl
mov
test
insb
test
lea
icebp
imul
dec
mov
in
fdivrl
jo
aas
aaa
loopne
xor
movb
out
fimull
and
mov
rorb
insl
pop
rep
dec
mov
adc
aam
push
imul
repnz
popa
mov
add
ficoml
mov
or
fs
xor
push
dec
test
mov
mov
icebp
xchg
mov
aas
cmpsb
repnz
addr16
dec
pushf
ds
xchg
xchg
jge
xchg
icebp
rolb
filds
mov
pop
push
lods
add
call
or
xchg
and
fcomps
test
call
sbb
jbe
stos
sbb
xchg
mov
mov
mov
mov
mov
push
and
shl
test
push
mov
push
mov
xchg
js
jecxz
adc
mov
cmp
enter
mov
push
cmpsl
adc
into
popa
leave
pop
dec
jle
imul
sub
mov
or
icebp
movsb
es
insb
pop
xchg
mov
adc
dec
push
sbb
push
push
add
insl
mov
insl
je
ror
sahf
sub
rclb
push
sub
xorb
jg
xlat
xor
mov
flds
sub
jge
and
lret
and
adc
scas
xor
les
sub
iret
xor
sub
adc
push
mov
dec
xor
mov
pop
mov
test
aad
sbb
inc
je
xor
lcall
inc
rclb
xchg
adc
pop
or
xor
scas
pop
clc
into
repz
xchg
adc
adc
leave
jbe
jbe
xor
pop
jnp
xchg
push
and
test
pop
push
jecxz
adc
push
js
into
push
pushf
dec
test
ficoms
pop
scas
into
int3
cltd
sub
cmp
testb
cltd
mov
pop
sti
sti
mov
int
enter
pop
enter
pop
and
insb
push
jecxz
push
mov
ret
jmp
mov
sub
mov
in
mov
mov
jge
nop
fnstsw
arpl
sub
in
mov
popl
je
mov
popa
add
jo
push
imul
std
into
cli
mov
pop
jp
pop
mov
mov
fmuls
out
mov
add
cmpsl
mov
movsb
and
mov
fsubl
insl
jl
mov
fdivrs
call
in
cmp
sub
pop
mov
push
insl
mov
cmp
call
in
cmp
sub
pop
mov
push
insl
test
test
fnstcw
jmp
in
xor
sub
pop
mov
pop
lea
pop
orb
fsubrs
sbb
testl
xor
xchg
jb
jmp
sti
jno
popa
fisttpl
adc
adc
dec
fwait
xchg
pop
sarl
rorl
shll
inc
sti
inc
lret
popa
fistl
stos
add
jnp
dec
and
pop
cmpb
or
loop
sarl
or
ss
xor
dec
ret
je
cmpsl
inc
mov
arpl
jp
push
cmp
cmp
pop
in
jge
mov
jmp
jno
ret
dec
shll
xchg
test
sbb
movsb
sub
sti
sub
fdivl
nop
cmp
mov
nop
and
jnp,pt
and
movsb
outsb
mov
sbbb
pop
xorl
adc
fcos
and
in
test
adc
sarb
mov
mov
scas
inc
imul
and
ds
mov
loop
sub
sahf
mov
inc
ds
push
lods
and
lret
add
adc
mov
movsb
push
add
sbb
jno
jbe
add
cmp
jmp
xor
sbb
jmp
mov
add
fidivl
out
movsl
add
jnp
dec
ds
dec
in
aam
les
addb
mov
outsl
cmc
pop
jmp
pop
rcrl
cs
pop
hlt
pop
repnz
insb
mov
sti
adc
popa
sahf
imul
sarl
loope
xchg
sub
sbb
inc
sti
jno
popa
fistl
stos
add
shrl
jnp
dec
loope
xchg
sub
sbb
sub
dec
or
and
test
repnz
rcpps
or
fidivl
clc
mov
cmp
pop
shrb
cmc
mov
stc
rcl
fs
fcoml
and
xchg
xchg
dec
push
sub
or
or
outsb
or
jbe
addr16
addl
jle
shlb
sbb
decl
lahf
xchg
jno
cmp
push
or
std
sbb
out
ror
movaps
mov
es
push
cmp
xor
hlt
pop
pop
xchg
cs
jns
mov
test
xor
adc
and
sub
das
pop
clc
pop
sete
lcall
add
aad
mov
mov
xchg
mov
insb
lahf
cmp
ret
push
xchg
out
sbb
dec
lock
sub
lock
bound
and
mov
push
pop
dec
or
add
inc
ficoms
sub
jbe
sarl
cmc
mov
and
mov
and
xlat
in
push
dec
div
imul
mov
into
enter
jb,pt
lods
sbb
jne
mov
lcall
pop
adc
test
call
shlb
out
xchg
sbb
sub
cmpsb
icebp
les
cwtl
loopne
cmc
or
add
inc
sahf
shll
or
sbb
jne
repz
pop
pop
jmp
aam
cmp
shll
lock
std
fwait
std
add
xor
mov
fists
mov
xchg
push
adc
das
jae
push
add
cli
das
ja
sbb
fdivrs
daa
mov
inc
lret
les
imul
xchg
lds
enter
pop
push
mov
mov
lcall
ret
cmp
add
int3
pop
test
fsubl
je
out
pop
add
dec
add
hlt
and
add
inc
or
or
out
ja
out
and
mov
push
dec
inc
ljmp
je
xchg
in
in
or
lods
xlat
mov
lret
xchg
add
dec
inc
adc
in
pop
cld
loop
gs
cwtl
cmp
and
cmpsl
jb
iret
jno
test
je
and
push
inc
cmpsb
inc
sbb
ret
aaa
jg
pop
push
popa
psubw
sti
push
out
ret
inc
inc
pop
repnz
out
je
lret
test
inc
je
inc
fbstp
mull
rcrb
iret
add
nop
xor
in
popf
repz
stos
mov
push
ror
mov
andb
fadd
sti
adc
xlat
sbb
push
jae
mov
inc
and
xchg
in
or
mov
sbb
lahf
cmp
arpl
cli
jmp
push
or
inc
inc
push
fmull
aam
add
pop
jns
outsl
popa
inc
jle
mov
mov
fdivl
aam
or
int3
mov
into
xchg
push
mov
or
insb
nop
test
mov
mov
ss
and
lret
incl
mov
icebp
adc
lds
cmp
mov
jo
xchg
push
pop
rclb
mov
pop
outsb
fwait
adc
pop
rcl
jl
cmc
sub
sbb
jge
xchg
out
js
leave
add
subl
push
inc
cmp
mov
test
repz
mov
fwait
jno
addr16
insl
test
dec
in
inc
inc
scas
add
cmpsb
stos
xor
test
in
outsb
or
sarl
add
dec
xchg
jbe
pusha
jl
sbb
das
aad
xchg
aaa
int3
ss
and
inc
inc
add
and
jo
inc
push
inc
push
out
add
lea
push
loopne
out
inc
cmp
das
pop
daa
and
push
imul
inc
dec
and
and
mov
fsubrp
data16
test
dec
fmull
xchg
dec
cmpsl
pop
mov
pop
pop
ficoml
jo
stos
pop
int
rolb
add
inc
aas
scas
adc
subb
cmp
pushf
and
nop
cwtl
and
bound
push
pop
inc
cmp
nop
mov
hlt
inc
cs
dec
adc
aas
adc
out
xchg
das
popf
add
lods
in
mov
pop
sub
pop
sub
arpl
add
call
jp
mov
mov
loop
sub
imul
sahf
scas
sti
mov
mov
je
xchg
daa
jne
jmp
jl
cwtl
in
sbb
out
xchg
mov
ret
stc
inc
and
fidivrl
ret
dec
or
mov
mov
movsb
jg
or
jle
pop
pop
dec
pop
inc
arpl
rcll
hlt
insl
in
jno
xor
sbb
mov
fisubrs
lock
and
ret
test
ja
cmpsl
mov
mov
cltd
mov
lahf
push
nop
test
inc
int3
loope
scas
cmp
inc
int3
ss
push
push
out
pop
ljmp
xchg
sti
lret
mov
sbb
pop
into
pop
pop
clc
mov
xor
pop
and
push
xchg
jo
cmpsl
inc
dec
inc
fdivrs
test
outsl
lret
sub
sti
lcall
ljmp
outsl
pop
pop
sub
jno
push
pop
push
or
aas
popf
push
lret
lcall
pop
pop
call
sub
mov
jae
xlat
sbb
dec
ret
xchg
imul
pop
mov
and
int3
push
aad
sub
out
das
jbe
shll
fwait
jg
dec
mov
loopne
jbe
ljmp
jnp
and
addl
subb
xor
sbb
or
xor
sub
pmaddwd
jp
dec
and
not
push
outsb
aaa
mov
rol
dec
sbb
mov
sub
push
icebp
xchg
ss
add
cwtl
mov
je
movsb
je
ljmp
in
in
xchg
in
fidivrs
inc
fimuls
enter
xchg
testb
movsl
insb
xchg
stos
sti
or
ja
mov
add
enter
fistpl
das
out
sti
daa
push
and
or
in
jle
adc
mov
test
adcl
push
aaa
xchg
sbb
cld
cmp
dec
mov
lock
rorb
xlat
aas
lds
cli
adc
cmpsl
dec
dec
add
fistpll
rcl
rcll
sub
rol
push
sub
stos
pop
pop
stos
lret
and
fidivl
sub
inc
adc
mov
jle
fisubl
cmp
mov
shll
sub
ss
rclb
loope
push
nop
testl
andb
push
or
dec
rclb
call
insl
push
push
fidivs
lods
sub
push
jp
xchg
cmc
in
push
mov
test
sbb
mov
lea
mov
cmc
stos
inc
sahf
out
std
mov
mov
cltd
fstl
lcall
ret
add
rorl
lcall
pop
loopne
loope
sub
sbb
out
ljmp
fwait
xchg
xchg
loop
gs
pop
sub
cmpb
dec
in
pop
ret
andl
and
dec
fcmovu
sarb
or
mov
fdivp
shlb
dec
push
ja
xchg
in
inc
aas
in
stc
xchg
xchg
and
cmpsl
mov
jmp
mov
xchg
icebp
imul
std
xchg
sub
xor
mov
scas
xchg
fwait
sbb
fcoms
pop
or
dec
rorb
sbb
or
test
loop
mov
and
cwtl
mov
outsb
push
cmp
inc
aas
notl
testl
jno
and
mov
stos
out
data16
cli
test
dec
lahf
push
imul
lret
nop
dec
push
sbb
mov
incb
xchg
call
mov
das
ret
fcomps
in
adc
mov
negb
xor
data16
lret
imul
push
dec
loop
stos
pop
movsb
or
test
stos
mov
pusha
enter
ljmp
jo
inc
push
arpl
push
xor
adc
shll
sbb
divb
pop
xor
aad
in
loopne
into
imul
mov
cmp
outsb
pop
add
inc
nop
ljmp
cmp
mov
scas
jnp
add
in
sbb
pushf
cltd
adc
sbb
dec
or
mov
jb
sahf
push
add
loop
mov
movsb
jbe
mov
adc
pop
shl
cmp
mov
mov
xorl
insl
pop
nop
js
mov
adc
sti
mov
test
pop
and
add
or
jle,pt
iret
pop
dec
sti
mov
sub
insl
push
pop
cmp
out
push
mov
adcl
cltd
test
fcoms
in
shr
stc
fcmove
iret
xlat
cmp
ds
mov
or
cli
hlt
dec
xchg
shrl
inc
adc
punpcklbw
mov
cld
mov
sarl
jle
adc
test
push
lds
mov
loopne
gs
xchg
paddsb
fisubl
jb
je
mov
fisttpl
xor
dec
in
mov
testl
es
jmp
inc
push
out
ja
subl
lds
mov
cltd
gs
sub
xchg
xchg
es
stc
rorw
pop
popa
xchg
sha1msg2
nop
out
mov
rcrl
scas
jecxz
jns
xchg
cmpsl
pop
mov
push
sti
inc
adc
fs
xor
sub
into
nop
and
xor
mov
fcom
mov
inc
push
push
imul
leave
push
sbb
pop
sbb
mov
add
cmpsb
int3
int
pop
cltd
add
mov
push
mov
out
loopne
mov
mov
xchg
or
mov
push
mov
push
popf
add
in
mov
jge
mov
pop
inc
xchg
xchg
stc
mov
arpl
sub
fsin
mov
dec
dec
sbb
add
nop
xchg
inc
clc
lret
xchg
pop
push
mov
mov
lea
data16
xor
mov
mov
dec
pop
adcl
ljmp
mov
lahf
pop
sbbl
xchg
test
mov
or
pop
aaa
fcom
in
pop
push
icebp
arpl
push
loopne
imul
dec
mov
mov
popa
push
test
pop
pop
sbb
adc
cltd
in
int
lods
fs
jo
ljmp
sub
js
jmp
test
add
lock
xor
cmpsl
repz
pop
mov
in
fildl
std
pop
test
in
dec
insb
sbb
in
jmp
subb
or
int
out
xchg
fsubrp
dec
outsb
pop
arpl
mov
cltd
into
cmc
orb
scas
dec
adcb
adc
movsb
int
pop
pop
jbe
leave
aad
hlt
dec
imul
xor
popa
mov
lds
mov
jge
adcl
xchg
cwtl
shr
and
push
inc
jg
mov
jge
inc
xchg
fs
push
mov
push
les
test
mov
std
inc
jbe
iret
mov
das
fwait
pop
mov
test
repnz
or
jae
mov
and
int3
ficompl
mov
aas
mov
in
sti
cwtl
pop
push
loope
movsb
jmp
xchg
adc
popf
rorb
sahf
insl
int3
adc
sub
mov
iret
xchg
dec
inc
sub
clc
xchg
in
jecxz
imul
es
jbe
jecxz
jnp
lret
ds
add
or
mov
pop
out
dec
inc
sub
push
ljmp
int
sti
adc
stc
or
push
gs
out
mov
mov
inc
add
xor
add
clc
jge
mov
ficompl
pop
and
insb
cmp
ljmp
lds
rolb
jp
scas
or
xchg
push
in
dec
sub
mov
leave
jmp
jb
lret
call
push
sbbl
cld
xor
ror
clc
dec
or
mov
adc
ss
ret
js
mov
sbb
fs
mov
dec
jg
mov
stos
fsubr
bound
lds
mov
inc
aaa
add
add
xchg
mov
push
and
andl
xor
jg
es
dec
adc
push
mov
add
outsl
mov
shl
aam
xor
mov
std
pop
aad
jmp
bound
aam
in
loopne
cs
out
dec
xchg
pop
lcall
mov
dec
flds
inc
adc
aaa
fmull
cmp
and
mov
lods
fs
adc
push
mov
add
jns
hlt
loope
mov
and
cld
popl
and
arpl
jp
in
cli
outsl
push
mov
dec
mov
cmpsl
pop
or
cmp
dec
xchg
cmpsb
lret
out
out
adc
int3
inc
stos
pop
stc
sub
and
jae
xchg
rcll
out
and
shrb
mov
add
in
dec
push
mov
notb
mov
mov
mov
mov
out
push
out
adcb
inc
lret
test
dec
inc
imull
add
push
sbb
movsb
filds
fs
and
push
lods
pushf
loop
call
xchg
xor
sti
mov
sbbl
xor
mov
les
xchg
icebp
add
add
loope
sub
pusha
out
sub
dec
dec
inc
out
adcb
push
push
clc
or
das
jmp
dec
aad
jg
pop
and
leave
shll
lret
stos
mov
in
daa
jbe,pt
loop
je
xor
pop
test
fisttpl
data16
mov
pop
mov
lock
inc
js
push
pop
aad
jle
jae
xchg
adc
sbb
repz
xlat
mov
dec
xor
les
jbe
jb
cmpsb
and
cmp
inc
out
and
cltd
pop
mov
andl
mov
je
lahf
jbe
or
add
add
push
push
stos
addl
or
lea
addl
push
aam
movsb
cmp
inc
jbe
out
out
insl
les
sub
jbe
xor
rcrl
push
leave
or
push
dec
mov
loope
sbb
enter
das
cli
shl
dec
push
sbb
sub
popa
xchg
stos
ret
call
or
sbb
mov
lcall
jmp
push
inc
inc
mov
in
and
push
mov
insl
xchg
sbb
movsl
fwait
mov
test
dec
lea
mov
incl
xchg
cld
xchg
or
mov
aam
pop
cmc
mov
or
xor
push
mov
pusha
mov
mov
dec
outsb
cmp
xchg
shrb
or
pusha
pop
mov
mov
push
stc
xchg
bound
jae
ficomps
sub
xor
sub
cmp
mov
data16
cmp
jecxz
dec
add
mov
test
xor
jmp
clc
div
ds
testl
pop
pop
xchg
fists
xchg
in
xchg
jns
cli
orb
adcb
add
dec
fs
sub
or
add
mov
lods
or
xchg
popf
lret
ds
push
imul
shl
ljmp
mov
fcoms
cwtl
mov
pop
cmp
addl
daa
int3
call
ja
jbe
ficompl
stc
pop
loopne
xchg
adc
into
mov
in
fidivrl
jp
mov
insl
icebp
and
sti
cld
xor
scas
popf
mull
jge,pn
std
push
movsl
jge
repnz
std
add
hlt
fwait
xor
aas
xchg
ds
or
nop
mov
fcoml
rcrb
testb
incl
add
xor
xor
les
popa
orb
lret
lods
push
bswap
fsubrs
cmp
mov
inc
jne
loopne
subl
mov
pusha
or
lock
loopne
addb
test
jbe
int3
and
xor
js
pusha
enter
andb
aaa
repz
movsl
mov
daa
cmp
jb
ret
scas
stos
pop
pop
aam
add
pop
push
fimuls
scas
aas
imul
pop
fs
ja
sbb
push
leave
lods
outsl
pushf
mov
fdivrl
call
daa
push
mov
mov
add
mov
pop
mov
add
fwait
lock
jge
insb
jle
pop
inc
dec
add
stos
add
xchg
cltd
jge
fcmovu
xor
sahf
xor
adc
add
sub
test
ja
push
in
movsl
in
xchg
xchg
push
mov
aaa
lods
jnp
test
cmp
fisubs
lcall
xlat
mov
into
dec
jno
shr
xor
rorl
ret
add
cli
mov
scas
adc
outsb
xchg
cmpsl
cmpl
lds
adc
in
mov
out
lods
dec
cwtl
xor
cmp
mov
jp
stc
or
mov
cwtl
aad
mov
mov
add
daa
pop
aad
movsb
xchg
pop
jnp
pop
xor
jae
cmp
xlat
sti
and
cli
cmpsl
lds
cmp
mov
in
add
test
mov
push
shlb
dec
pusha
cmc
cmpsb
inc
lds
pop
jo
push
sbb
inc
adc
out
dec
adc
add
cwtl
add
push
cmpl
movsb
movsl
and
fcmovb
test
test
push
scas
call
sub
cmp
inc
les
dec
pop
int3
adc
mov
sub
mov
mov
mov
lahf
adc
insb
and
inc
sbb
test
inc
xchg
fcomp
sub
xchg
leave
fidivrl
inc
ss
cmpsb
aaa
in
stc
or
shlb
jmp
inc
inc
lods
cmp
mov
les
popa
mov
inc
call
inc
inc
adc
add
sbb
mov
and
sbb
pusha
test
bt
and
lods
inc
push
mov
mov
push
dec
xchg
add
mov
jecxz
lcall
loopne
mov
push
or
shrl
push
addr16
cld
xor
or
xchg
sub
jecxz
movsl
jbe
pushf
ret
shlb
stos
bound
movsb
dec
xchg
imul
add
outsl
mov
cmpsl
cli
sti
in
adc
dec
pop
mov
jne
push
jnp
sub
or
mov
mov
or
and
jge
sbb
lods
insb
outsl
inc
push
outsb
icebp
lea
or
cmp
std
loope
pop
pushf
lods
aas
subb
jo
cmp
pop
mov
aam
jmp
leave
lods
pop
ret
adc
lcall
jne
fs
jl
cmp
jge
lcall
lcall
mov
xor
icebp
cli
repnz
test
fwait
in
xchg
mov
ljmp
orl
inc
jg
sub
ja
into
push
cmpsl
setg
pop
sub
push
mov
mov
loope
inc
pop
sub
xchg
sub
and
je
push
jbe
stos
in
or
cwtl
imul
cmp
jno
inc
jae,pn
aam
ljmp
adc
xchg
dec
mov
sub
mov
xor
sbb
pop
js
mov
mov
into
pop
je
scas
fwait
xor
int3
pop
int3
and
push
sub
in
jmp
movsb
in
jg
testl
mov
in
sub
or
js
in
xchg
pusha
jb
sub
mov
addl
mov
pop
adc
imul
mov
clc
adc
enter
ss
repz
fcomip
je
cmp
mov
mov
cmp
je
in
in
xchg
mov
or
shll
js
call
notl
sbb
mov
mov
icebp
fcmovne
mov
ficompl
or
out
mov
cmp
xchg
dec
mov
cmp
je
dec
inc
nop
sbb
fstp
xor
push
pop
or
int
xchg
push
cmc
sub
mov
pop
scas
xchg
sbb
pop
test
cmp
mov
das
xor
insl
xor
mov
mov
push
xchg
rcr
push
sub
xchg
fdivrl
pop
xchg
jle
ss
ljmp
dec
xchg
pop
mov
and
and
mov
jb
shl
add
out
push
xchg
dec
pop
mov
cmc
fisubl
push
dec
push
lods
or
dec
push
dec
dec
fcmovu
mov
decl
inc
adc
andb
loope
data16
out
imul
mov
dec
mov
adc
add
mov
leave
pop
fcomps
push
inc
iret
or
in
and
push
inc
cmp
incl
inc
cmp
ljmp
stos
stc
pop
mov
dec
xor
pop
int3
xor
mov
xor
push
push
xor
sti
xchg
lret
popa
fistl
stos
add
shrl
jnp
dec
loope
xchg
sub
sbb
inc
sti
jno
popa
fistl
stos
add
shrl
jnp
dec
loope
xchg
sub
sbb
inc
sti
jno
popa
fistl
stos
add
shrl
jnp
dec
loope
xchg
sub
pop
gs
jne
inc
iret
popa
fistl
stos
add
imul
pop
dec
loope
out
or
pop
fs
push
fs
imul
loop
mov
jo
cmpsb
pop
or
add
push
add
add
add
mov
add
popf
add
add
add
add
add
add
stos
add
and
add
add
add
add
add
jbe
dec
add
stos
add
flds
jns
add
dec
add
mov
out
add
add
add
dec
add
add
add
ret
add
add
add
add
add
add
add
dec
add
pop
add
fiaddl
and
adc
or
xchg
add
bound
mov
add
add
add
inc
add
add
add
pusha
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
cwtl
add
add
add
add
or
inc
add
add
addl
add
add
add
adc
xor
lods
add
add
push
add
add
push
add
add
add
add
add
add
add
dec
add
pusha
add
add
dec
add
add
add
insl
add
add
add
popa
add
or
xchg
add
add
add
out
add
add
xor
pusha
add
or
lea
flds
or
imul
jge
xor
pop
add
add
add
add
add
lea
lea
enter
les
add
inc
add
add
add
add
ss
add
add
and
xchg
add
scas
add
add
ds
add
filds
mov
add
add
add
add
add
lret
add
add
add
add
add
add
add
cmp
lea
pushf
add
sbb
push
add
add
add
add
add
mov
fwait
add
add
pop
add
adc
or
or
lea
push
add
cmp
or
or
imul
int3
add
push
add
add
add
sbb
sti
add
or
push
add
das
add
add
mov
add
add
add
push
add
int3
add
add
push
add
imul
add
ljmp
add
or
cmpsl
add
add
cltd
add
and
xchg
add
add
add
add
add
mov
add
push
add
inc
add
add
add
add
out
add
add
add
add
add
push
add
add
add
add
add
xchg
add
cmp
add
addl
xchg
add
inc
add
movsb
add
add
add
add
add
add
add
add
inc
add
into
add
add
add
add
cwtl
add
sbb
add
add
add
dec
add
add
add
add
and
fadds
or
sbb
add
add
add
add
add
add
add
xchg
add
add
inc
add
add
add
add
add
add
mov
mov
add
fimull
and
jge
test
dec
js
push
es
sbb
test
jge
adc
mov
mov
fwait
test
add
sbb
and
xor
lock
leave
lgs
nop
and
bnd
sbb
add
dec
mov
inc
leave
add
sbb
xchg
push
push
jnp
outsb
incl
fucomi
pushf
aad
pusha
and
das
sub
mov
fnstcw
inc
xor
or
or
jl
cltd
out
jg
dec
and
dec
je
jp
adc
dec
pop
int3
outsb
rcl
push
push
mov
mov
jb
testb
mov
out
das
adc
mov
push
lock
mov
pushf
callw
xor
cmp
mov
not
xchg
ljmp
inc
lods
jg
cwtl
mov
jo
jno
xchg
adc
pop
lret
or
in
ficoml
add
add
test
hlt
mov
es
sbb
scas
xor
je,pn
xorl
cmp
stos
xchg
xor
and
and
push
jl
lock
cwtl
fcoms
scas
inc
daa
xchg
mov
xchg
or
fxch
add
aas
repnz
pop
negb
sbb
int3
shl
andb
cmp
ljmp
cmp
sbb
push
fst
scas
lahf
loopne
stos
aad
rolb
rol
and
jg
gs
pop
sub
xor
fwait
xchg
mov
cmpsl
sub
push
mov
sub
jg
or
mov
push
shl
jg
call
stos
test
jne
fistl
pop
dec
add
cmp
xor
imul
xchg
es
loop
xchg
dec
sarb
push
jbe
jns
cmpsl
mov
sub
and
pop
jne
xchg
add
divb
pop
cld
or
jb
cmp
push
sbb
cld
mov
sti
jecxz
std
aad
cmpsl
enter
pop
add
sub
dec
adc
dec
cmpsb
leave
daa
inc
movb
imul
jp
ljmp
pop
mov
adc
sub
xchg
test
sbb
push
int3
imulb
jp
or
cmp
mov
sub
rclb
xchg
outsl
add
inc
cmp
jecxz
jge
pop
dec
mov
outsl
cmc
out
push
mov
std
dec
lods
ret
add
lds
mov
mov
sub
jge
scas
xchg
sbb
clc
aam
pop
out
inc
scas
sbb
hlt
xlat
hlt
stc
incl
push
ja
or
loope
sbb
shl
ror
mov
xchg
ss
sub
lahf
call
andl
call
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
