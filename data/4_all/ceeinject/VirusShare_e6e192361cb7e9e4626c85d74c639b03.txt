adcb
add
add
add
add
cwtl
in
popa
sahf
pop
data16
in
popa
inc
std
sub
js
dec
loop
push
fistpll
push
pop
xor
inc
and
xor
fidivs
out
sub
adc
jecxz
and
enter
stos
jno
adc
cmpsb
mov
pushfw
push
cmp
sub
scas
mov
int
mov
lds
sub
mov
sbb
fcomps
mov
mov
lret
jecxz
cwtl
mov
cmpsb
out
scas
sbb
jae
jmp
popa
and
movsl
sub
jecxz
fsubrl
imul
mov
xchg
roll
cwtl
mov
or
push
ss
mov
pusha
mov
call
xchg
mov
lea
lock
shll
lret
shl
xor
shll
ljmp
filds
jmp
iret
fld
aad
cli
loope
push
sahf
fs
mov
jbe
mov
push
xchg
cmp
cmc
inc
xor
xchg
jle
in
movsl
ret
adc
or
ret
sti
fistl
sbb
xor
push
lds
mov
ljmp
push
push
lea
in
cmp
xchg
mov
cmpsl
mov
out
dec
inc
pop
xchg
jb
mov
push
call
jns
sbb
ja
arpl
jmp
push
push
ljmp
sbb
outsl
imul
cmpsl
test
mov
jo
lds
xor
rorb
mov
push
popa
fs
inc
fidivrl
into
sbb
jecxz
cmp
xorl
push
inc
scas
popa
in
xor
or
sub
jno
icebp
mov
loop
adc
pop
shl
fxch
inc
xlat
pushf
mov
pushf
fistl
and
or
stos
loop
xchg
sub
ss
pop
jecxz
sbb
int3
ficoms
mov
inc
mov
mov
mov
push
dec
lret
dec
dec
stos
cmc
loop
fs
and
pop
out
orb
dec
mov
and
cmc
dec
push
fs
push
ds
lds
mov
mov
sbb
cwtl
sti
out
jns
adc
hlt
out
pop
mov
push
xchg
inc
lea
add
inc
lods
aam
mov
outsb
inc
jae
lcall
jno
pushf
pop
ficoms
sahf
cmp
daa
pop
push
adc
test
rclb
push
fwait
test
pop
out
das
adc
push
test
fcompl
cld
xor
fs
movsb
jg
adc
loop
sbb
leave
outsl
adc
jl
shld
inc
repz
sbb
jae
sub
xor
flds
icebp
jge
sbb
fstp
fmull
dec
mov
mov
cmp
xchg
mov
fsubrs
lods
jns
lock
mov
jge
mov
lret
mov
lcall
sbb
and
clc
test
loope
es
outsl
adc
mov
or
push
xchg
mov
js
mov
or
or
and
orl
adc
call
sub
js
les
sub
outsb
movsl
cwtl
out
in
jle
ja
push
dec
sbb
jge
fsts
dec
add
stos
adc
js
shrl
insl
enter
inc
sbb
mov
nop
imul
mov
pop
sbb
lods
pushl
outsl
adc
hlt
rclb
mov
movsb
frstor
mov
lds
insl
in
xor
adc
pop
dec
inc
adc
push
outsb
adc
push
cwtl
jge
add
mov
lods
orl
out
stos
call
sbb
or
sub
cmpsb
mov
jno
sti
fwait
ja
inc
sbbl
jge
cmpsl
sbb
lahf
xor
push
add
arpl
push
lods
loopne
and
jl
dec
xchg
mov
outsl
dec
popf
adcb
cmp
test
push
inc
or
xor
mov
test
dec
xlat
arpl
inc
subb
in
in
outsb
xchg
fiadds
push
cmp
sbb
mov
pop
push
inc
data16
xchg
dec
ja
cmpsb
out
and
xchg
ja
mov
mov
repz
stos
aam
stos
mov
hlt
in
dec
pusha
cmpsb
pushf
aaa
rorl
mov
sbb
sbb
hlt
sahf
xor
cmp
lret
mov
mov
add
ljmp
test
ds
aam
pop
in
pop
adc
inc
xchg
adc
iret
div
lds
mov
cmp
leave
aad
in
sub
rcll
clc
cld
cwtl
and
testl
stos
jg
jbe
ljmp
aas
push
out
xchg
mov
daa
movsb
or
aad
cmpsl
popa
pop
dec
jnp
push
xor
sub
cld
bound
or
jge
int3
test
loop
fildl
pusha
lahf
lahf
popa
lret
cmp
xor
insb
add
daa
mov
xlat
jno
nop
ds
gs
mov
ss
scas
lds
cmc
cmp
dec
jns
out
clc
bound
add
nop
repz
dec
pop
mov
adc
insb
insb
and
sbb
lds
push
xchg
inc
shlb
addl
outsb
jb
sbb
mov
push
fwait
bound
sbb
lock
fistl
mov
bound
les
enter
sbb
inc
loope
xchg
or
ljmp
dec
and
fsts
dec
lods
arpl
mov
pop
sub
sbb
jb
aas
push
fldenv
ret
pop
mov
jge
inc
dec
dec
cmp
ret
jb
scas
test
or
inc
vfrczps
mov
cmpsl
or
jnp
sarb
add
aad
pushf
push
and
xchg
in
adc
jns
sbb
popa
or
aad
sub
popa
sbb
jmp
mov
sub
push
dec
xchg
pusha
sbb
in
cs
daa
testb
adc
test
sahf
sbb
das
adc
lahf
cld
test
repnz
or
lcall
push
out
add
mov
scas
inc
lods
shrl
push
cs
or
mov
and
push
pop
stc
test
jl
enter
add
ljmp
xchg
pop
pop
mov
mov
stos
aad
subl
push
adc
add
insl
mov
fneni(8087
mov
jle
std
mov
loope
pop
pop
call
jecxz
or
pushf
jmp
and
adc
std
jge
and
or
out
dec
and
cld
repz
inc
jne
pop
hlt
mov
test
imul
sarb
add
push
xor
lret
mov
cmp
inc
adc
and
jne
int3
jae
jp
push
es
faddp
pop
inc
cmpl
xchg
cmp
push
push
sub
pop
pop
jbe
mov
mov
add
jle
fwait
jo
sbb
mov
add
fcoml
ret
mov
imul
outsb
js
inc
test
and
arpl
stos
inc
or
dec
push
js
imul
or
movsl
cmp
adc
mov
loop
cmp
rcll
mov
push
lret
inc
fisttpl
adc
cmp
ja
test
cs
cmpsl
xchg
test
adc
adc
ss
ja,pt
xchg
pop
pop
dec
repnz
mov
lods
xchg
sub
sub
xor
dec
rcl
movl
cmp
scas
mov
or
mov
mov
mov
hlt
sti
add
mov
cmpsb
cmc
mov
sbb
mulb
jo
dec
add
jns
sub
fmull
push
jno
fists
pop
jo
cmc
mov
mov
inc
sbb
les
adc
out
dec
xchg
fldcw
jl
fisttps
cpuid
ret
bound
lds
les
xor
fucomip
out
icebp
fsqrt
hlt
rcll
aas
mov
repnz
sarl
ds
orl
inc
mov
fdivrl
or
pop
les
int3
shlb
xor
push
pop
mov
jo
push
inc
jb
test
xchg
dec
push
pop
ds
inc
mov
insb
insl
pushf
lods
cmp
and
xchg
mov
scas
shl
xorl
inc
imul
adcb
sub
jle
cmc
into
xorl
test
popa
pop
xchg
movsl
jge
sub
add
mov
xor
mov
xor
jne
jp
jb
cli
lret
hlt
jns
mov
adc
jbe
xlat
xchg
cs
outsl
imul
pop
and
aam
fcmovnbe
pop
xor
pushf
jns
cli
out
mov
inc
popa
lcall
data16
in
mov
shl
inc
sbb
push
fwait
es
dec
mov
dec
mov
testl
lret
mov
pusha
lds
xor
ja
mov
addb
addb
fmul
jecxz
aas
xor
sub
pusha
and
cmp
mov
roll
dec
jmp
scas
push
fcomp
inc
cmp
lock
or
and
scas
or
insl
sbb
pop
push
xorb
xchg
or
or
popa
push
mov
cmp
cmc
stc
movsl
in
and
imul
jge
adc
and
rcll
pop
nop
movsl
lock
ds
loope
mov
inc
add
aas
mov
fidivl
or
lret
cmp
inc
or
bound
dec
repz
inc
mov
cmp
push
sarl
aam
jmp
mov
mov
test
xor
xrelease
mov
lds
lcall
out
sbb
daa
or
inc
xor
jmp
lea
in
inc
pop
flds
data16
cmp
fadds
xchg
adcl
jns
fisttps
dec
es
sti
lea
adc
sub
scas
subb
pop
scas
push
fwait
scas
movsl
fdivrs
inc
or
movsb
dec
ss
aas
out
filds
fdiv
out
ret
dec
insl
sbb
out
sbb
fcoms
enter
into
dec
out
bound
adc
sbb
fldenv
mov
mov
stos
in
push
pushf
sbb
mov
adc
cmp
ret
pop
pop
adc
testb
inc
or
cld
stos
arpl
jne
pop
mov
imul
leave
cmp
mov
adc
lret
mov
out
aaa
jg
cmp
jp
imul
testl
mov
subb
jp
fildl
pop
hlt
in
imul
cmp
push
xchg
in
pop
decl
xor
cwtl
cmpl
mov
movsl
push
mov
xor
rorl
sbbb
fnsave
dec
mov
inc
ffreep
inc
aas
lds
cmp
or
ret
mov
stos
imul
lods
test
cmp
addr16
sub
mov
add
scas
jo
outsb
iret
jle
sub
outsl
sub
or
dec
sub
daa
fdivs
cmp
pop
int3
jne
enter
lds
mov
and
adc
mov
dec
shll
cmpsb
jecxz
push
xchg
imul
ja
cmpsl
and
push
mov
ljmp
pop
data16
stc
cmp
fnstsw
xor
jmp
fsubrl
mov
in
push
in
add
mov
in
rorb
mov
fisttpll
pop
hlt
cmp
sarb
mov
mov
or
sarl
mov
aam
mov
xor
xor
dec
inc
test
xor
or
es
dec
jl
pusha
mov
mov
cmpsb
int3
sub
mov
mov
fdivr
mov
mov
cmp
inc
outsl
mov
imul
xchg
in
es
js
push
sbb
jmp
xchg
lret
push
xchg
test
xchg
sti
push
jle
jbe
scas
in
mov
jo
jns
sbb
jbe
push
std
pop
push
les
jne
pop
xlat
shlb
rcl
pop
test
repz
movsb
inc
sti
dec
adc
cmpsl
xor
out
jnp
push
adc
xchg
mov
add
outsl
xor
cs
sahf
mov
or
dec
pop
add
das
outsb
push
sbb
and
pop
xchg
push
cmc
push
cmc
hlt
repnz
dec
push
push
popa
stos
jle
decl
sub
mov
or
and
xor
ds
xor
or
mov
adc
pop
lea
and
sbb
and
add
xor
pop
leave
mov
mov
std
gs
add
in
cmpl
dec
nop
fcompp
jno
cmpsl
fldt
push
test
nop
daa
mov
add
cmp
add
jecxz
ret
bnd
shll
insl
xor
dec
subb
out
mov
mov
sub
and
push
jno
cmpsb
in
or
or
cmp
scas
mov
lret
push
ret
imul
xchg
int
pushf
pop
mov
or
push
mov
mov
pop
push
pop
into
mov
nop
adcl
cld
mov
push
ja
movsb
call
pop
hlt
cli
test
bound
lret
cld
sbbb
xchg
xchg
mov
testl
cmpsb
bound
push
cmc
mov
push
cmc
std
call
test
pop
sbb
push
push
push
add
xor
inc
mov
inc
das
out
mov
insb
fcompl
insb
pop
mov
adc
and
add
inc
sbb
mov
mov
fdivs
cli
add
mov
out
or
xor
jb
mov
aaa
jb
out
xor
cmovl
fucomi
mov
mov
mov
mov
xchg
cmp
jp
dec
lahf
int3
les
jbe
in
sti
sbb
out
adc
ss
cli
loope
popf
push
lahf
mov
scas
sub
xchg
movsb
imul
es
xchg
cs
pop
popf
dec
cltd
or
cltd
loopne
pop
pusha
lds
sbb
and
jb
stos
pop
xchg
sbb
inc
adc
xor
push
js
iret
xchg
jmp
inc
xor
fstl
into
bound
mov
fdivl
shl
rorb
test
jmp
and
xlat
push
ss
jecxz
adcb
cmp
mov
lods
clc
jg
jmp
push
out
shlb
xor
cmc
fldcw
mov
lods
lahf
cmc
cwtl
nop
bound
dec
push
pop
into
seta
pop
inc
jb
bound
repz
cld
mov
in
fcmovnbe
rolb
jo
inc
sbb
sub
mov
inc
aad
cltd
andl
test
inc
dec
jne
test
jbe
adc
pop
mov
mov
sbb
jp
adc
sbb
es
push
xchg
lods
inc
push
dec
sbb
jmp
sub
xor
push
fldt
aas
cmp
scas
xchg
or
sub
bound
cltd
adc
stc
out
sub
aaa
in
pop
bswap
jmp
jb
jne
lea
mov
rorl
xchg
int
fnsave
push
push
es
das
pop
ret
mov
xchg
fwait
add
jae
push
push
xor
and
inc
es
test
movsl
fstpt
gs
mov
lret
mov
and
shll
test
pop
adc
mov
lret
cmp
jle
dec
add
popa
sbb
xlat
shlb
sub
sti
inc
jae
xchg
hlt
imul
and
cwtl
add
cmp
in
adc
in
rcrl
scas
ja
lea
mov
and
icebp
mov
stc
xor
int3
dec
sbb
cmp
sub
jb
push
inc
shr
or
adc
mov
push
sahf
jne
cmp
fldt
mov
add
or
faddl
into
dec
inc
negb
mov
sahf
push
mov
cmp
mov
addr16
ss
sahf
stc
mov
les
cmpb
mov
xchg
les
jp
or
loopne
xor
sahf
xchg
clc
test
cmp
adc
mov
pop
xchg
aas
shll
imul
fstps
negl
repz
add
lret
push
mov
jno
or
xchg
lret
jae
mov
push
add
sahf
jbe
jb
rcrb
and
test
imul
loopne
sub
out
bound
sbb
ljmp
sti
dec
cmp
xchg
in
pop
mov
add
fcoml
lret
inc
out
dec
adc
das
jne
or
cld
sub
jp
lods
stos
dec
iret
aaa
loope
lea
jecxz
int
adcl
cmp
xchg
xor
cmp
dec
sub
or
mov
pop
std
icebp
cs
out
fisttps
xchg
and
pop
int
push
sahf
repnz
loope
out
jnp
cmp
scas
int3
fistl
mov
jmp
inc
enter
xchg
xchg
sbb
pop
sbb
popf
gs
outsb
mov
or
cltd
fs
mov
clc
ret
push
mov
test
sub
jle
add
jmp
and
outsl
enter
repz
sbb
pop
and
ror
testl
add
push
push
data16
in
pushf
ss
dec
pop
jnp
and
jg
mov
out
mov
lret
xor
clc
cwtl
pop
add
mov
or
mov
mov
test
lea
dec
loop
cmp
cwtl
loope
lcall
in
jmp
mov
jg
iret
insl
sbb
or
lea
push
inc
xchg
fs
mov
sarl
test
mov
scas
outsb
scas
aad
aas
divb
call
jnp
cltd
adc
rorl
pushl
imul
xchg
mov
pop
or
cmp
sub
mov
xchg
inc
mov
jg
xor
lock
repz
dec
dec
mov
cmp
pusha
jg
xor
repz
adc
cmpsl
inc
lret
iret
and
rcrl
push
sub
hlt
icebp
lcall
or
jne
enter
std
lret
inc
fildll
pusha
sbb
ds
insl
xchg
test
scas
mov
add
cmp
jle
xlat
scas
fcom
sbb
int3
jp
stc
loopne
icebp
lahf
adc
out
or
cmp
xor
push
dec
mov
add
jecxz
inc
outsl
popf
hlt
sub
sub
mov
cltd
or
neg
sbb
pop
subl
lcall
mov
adcb
out
and
jecxz
aam
sub
cwtl
je
leave
inc
in
xchg
mov
fisubrs
loopne
inc
movsb
ret
xchg
scas
jnp
xor
jg
clc
outsb
cltd
mov
inc
lods
mov
and
lret
mov
scas
movsl
mov
pop
scas
sbb
aaa
aaa
inc
add
and
cmc
test
sbb
cs
in
push
in
test
ja
inc
inc
lret
imul
add
mov
je
jmp
pop
rcl
hlt
and
jmp
out
jg
adc
out
xchg
data16
push
in
xor
mov
popa
cs
lret
sub
and
push
xor
loope
popf
das
pusha
pop
clc
push
xor
fmul
sub
ffree
push
mov
fbstp
in
fildl
ljmp
in
orb
insb
lcall
in
gs
and
sub
push
test
rcr
fs
mov
cwtl
cmp
scas
cmp
lret
mov
cli
stos
add
bound
daa
jmp
loop,pn
inc
scas
rorl
test
and
mov
sahf
add
mov
nop
push
repz
inc
addb
inc
and
xchg
fnsave
outsl
mov
popf
scas
bound
xor
mov
rclb
sbb
xchg
call
ljmp
fdivrl
lods
psrlq
adc
jnp
or
in
push
fwait
shll
pop
stos
decl
cmpl
in
hlt
xchg
pop
push
insl
adc
loope
jmp
push
ljmp
and
mov
inc
and
sub
or
mov
gs
cmc
iret
stc
movsb
lret
out
or
lcall
sbb
imul
pop
xor
shrl
cld
or
mov
and
arpl
dec
inc
jnp
inc
lods
add
loopne
sbb
push
lahf
mov
mov
cld
cli
pop
addb
fwait
inc
lret
mov
sbb
in
xchg
int
or
repz
xor
ljmp
jns
jge
jne
mov
in
dec
mov
aas
fimull
and
mov
xchg
inc
mov
je
ja
mov
lret
aam
pcmpeqw
fwait
jle
repnz
std
xchg
pop
jle
rcrb
inc
inc
mov
mov
test
pop
adc
int3
xlat
mov
clc
or
pop
lods
roll
in
mov
sbb
inc
ds
in
jne
add
test
jp
fiaddl
jl
push
int
lods
aam
mov
out
jmp
push
iret
xor
xchg
ds
push
cs
mov
fdiv
cmp
jg
push
dec
sbb
push
mov
ret
xlat
cmpsl
ss
mov
clc
cmpsb
lods
push
jp
jg
push
lcall
pop
xor
cmpsb
daa
xchg
enter
ja
jbe
mov
hlt
popa
jae
mov
fisubl
scas
sbb
mov
imul
pop
ud0
ret
cmp
cmc
ds
push
movsl
mov
inc
cli
mov
rclb
sbb
or
sub
fidivrl
mov
test
push
mov
testb
pop
int
mov
leave
inc
ret
je,pt
in
rcll
mov
hlt
ja
adc
xor
and
cmpsb
jnp
push
movsl
in
dec
xor
xchg
pop
js
je
dec
loope
mov
jmp
mov
sub
add
sbb
loopne
adc
inc
scas
mov
add
clc
or
sub
mov
loope
repz
mov
arpl
or
mov
adc
in
xor
adc
mov
lds
dec
dec
fcompl
jns
adc
pop
xchg
dec
stc
xor
sbb
sub
or
pop
out
cmp
out
pop
add
inc
mov
sub
fs
daa
pop
pop
push
daa
and
ljmp
addr16
and
push
es
rorb
lods
popa
fs
dec
mov
negl
ret
jmp
adc
sbb
orl
jnp
inc
or
test
outsb
scas
lret
pop
sar
mov
lret
push
jae
dec
and
enter
mov
add
dec
data16
xor
in
push
mov
cmp
adc
mov
jmp
cmp
pushw
sub
mov
enter
repnz
cmova
movsb
loopne
icebp
out
movsb
xlat
add
jb
sti
in
cwtl
sbb
mov
mov
push
inc
xor
cmp
loop
std
arpl
xlat
cltd
add
push
or
or
dec
mov
aad
mov
or
testb
in
sbb
xor
cmp
adc
es
mov
enter
mov
jbe
mov
mov
in
sub
xchg
fistps
mov
jg
xor
arpl
cmp
outsb
aaa
int3
inc
sbb
cmpb
xchg
dec
push
push
xor
mov
and
fisubrs
cmp
inc
pop
fidivs
repz
pushf
jg
out
xor
jg
daa
iret
shrb
mov
nop
mov
dec
jmp
out
test
push
fucomp
inc
stos
dec
mov
add
idivl
xchg
in
mov
iret
ja
lahf
ds
inc
xchg
pushf
cli
lods
lds
cs
scas
das
in
pusha
inc
inc
jnp
notb
add
dec
adc
adc
imul
or
xchg
pop
mov
leave
stc
cmpsb
mov
xchg
test
cmp
mov
scas
mov
add
or
shl
mov
xor
sarl
cld
mov
and
sub
xor
std
aas
xor
pop
mov
les
or
mov
sub
shlb
mov
std
sub
jp
fmuls
pop
test
sbb
push
mov
mov
fistl
ss
add
fisubrl
pmulhuw
fdivrl
lret
icebp
inc
imul
test
xor
repz
cmp
and
loop
and
dec
mov
jo
mov
jns
mov
aas
add
stos
ret
and
jge
notl
jle
bt
sbb
and
adc
outsb
out
sbb
mov
pusha
in
mov
jmp
sub
addl
scas
dec
jecxz
js
mov
or
mov
mov
or
das
mov
jle
sub
cli
mov
pop
ret
and
jnp
sahf
ret
push
inc
rcl
push
mov
or
out
movsb
jno
ficomps
mov
fdivrl
in
adc
add
cwtl
rol
mov
aam
xor
sub
inc
fisttpll
fwait
loop
and
js
dec
ret
int3
xor
push
imul
jne
and
adc
in
dec
jecxz
data16
out
xor
push
cmp
push
les
bswap
push
hlt
in
arpl
mov
mov
addr16
or
mov
in
les
inc
dec
dec
data16
xor
aas
lret
xor
add
neg
xchg
xchg
inc
inc
dec
cli
std
faddl
movsl
mov
push
cmp
dec
mov
mov
inc
shrb
dec
cmp
mov
push
sub
std
sub
sbb
inc
ja
fiadds
pop
mov
adc
flds
push
dec
dec
fnsave
adcl
loopne
mov
lods
scas
mov
push
aas
xchg
insb
out
fldt
cmp
dec
and
xor
scas
push
div
out
mov
test
xchg
mov
push
inc
cmp
jmp
mov
in
comiss
sbb
and
lea
int
shl
shrb
call
adc
sub
add
xor
call
fisttps
shll
das
fsubr
mov
and
and
adc
inc
add
cmc
adc
jne
cltd
std
notb
and
xor
stc
mov
insb
fsts
je
mov
int
sbb
inc
adc
lods
dec
mov
nop
mov
xchg
lretw
jae
push
or
test
je
addr16
push
sub
and
jno
add
sbb
mov
xor
mov
int
dec
loope
rcl
jb
xchg
adc
stc
inc
pop
sbb
imul
sbb
add
pop
insl
lret
movsl
fildll
in
mov
mov
scas
push
inc
mov
lcall
xor
test
mov
xlat
fimuls
cmpsb
popa
lret
out
sub
jae
in
sub
or
mov
jo
repz
filds
pop
out
dec
insb
cmc
mov
fdivrs
push
lahf
lock
jns
arpl
jg
cmp
cmp
pop
xchg
jb
or
aad
in
sub
push
cwtl
mov
lock
pop
sbb
xchg
push
data16
std
movsb
cmp
inc
int3
sub
scas
jl
pop
sbb
sub
ret
enter
add
mov
scas
pop
xchg
mov
add
icebp
dec
daa
ret
mov
insb
jmp
mov
icebp
lcall
call
popf
pop
insb
imul
adc
pushw
and
and
leave
mov
inc
mov
mov
sub
inc
ljmp
and
mov
adc
mov
pushf
xor
adc
les
orl
cmp
std
dec
push
mov
mov
test
gs
push
mov
repnz
scas
xchg
bound
lea
or
jg
ret
lods
xchg
icebp
mov
mov
enter
cmp
or
mov
jno
inc
xchg
lock
xor
jg
xor
out
cltd
int
jge
jbe
outsb
js
mov
dec
mov
or
add
add
pop
fldcw
cli
scas
push
pop
lods
sti
nop
or
push
pushf
lock
mov
inc
enter
cmp
pop
jge
cmp
lret
loop
jp
or
mov
add
dec
icebp
inc
ret
mov
lret
cmp
cs
das
push
push
jg
mov
rcll
add
loop
pop
pusha
cs
ja
repz
or
out
stc
clc
xchg
inc
mov
shll
aad
inc
jle
sbb
xchg
imull
jmp
mov
jle
xchg
lds
mov
lret
lock
cltd
and
insl
push
xchg
daa
add
out
gs
cmc
repz
popf
jo
mov
data16
mov
and
les
in
in
jno
inc
je
frstor
sub
fisttpll
movsl
mov
sarb
lds
jb
popa
inc
lahf
gs
add
sete
mov
ret
pop
dec
mov
xor
add
sub
push
mov
popf
iret
je
mov
push
nop
xlat
adc
in
or
xor
or
add
dec
cmp
mov
and
pop
lock
hlt
lods
cmc
dec
or
das
sub
dec
jg
pop
mov
mov
push
and
push
ret
push
sbb
popl
dec
push
repnz
jmp
imul
xchg
movsl
dec
pusha
dec
push
mov
push
sub
out
xchg
lock
lcall
or
das
sbb
mov
add
add
cmpl
cmp
sub
or
inc
fmul
xchg
push
mov
mov
imulb
int3
xchg
xchg
test
test
pop
jmp
ss
shrb
fstpt
cmp
mov
mov
inc
ficoml
jnp
movsl
sbb
mov
push
out
sub
push
insl
ds
dec
enter
test
in
divl
lods
jecxz
pusha
int
push
sub
sub
scas
xchg
bound
sub
mov
add
cmc
inc
xchg
stos
push
add
repz
mov
xor
inc
aam
out
and
add
in
in
xchg
jb
inc
adc
pusha
xor
cmp
push
push
push
inc
jo
les
lods
add
mov
movsl
in
ror
and
jge
ljmp
or
shlb
lods
cmpsb
sbb
test
or
mov
jl
mov
pushf
mov
xchg
aas
lret
mov
mov
cmp
mov
xchg
in
insb
jl
fildl
xchg
mov
out
lods
fcmovnu
pop
hlt
add
lods
dec
pop
shrl
test
adc
fdivl
xchg
or
aad
repnz
add
rcll
cld
ret
and
vandps
add
adc
enter
test
repz
ret
mov
mov
std
pop
in
jne
sbb
xchg
in
mov
adc
jmp
or
nop
mov
cmpsb
mov
lcall
movsb
popa
push
or
rorl
sbb
mov
imul
jb
push
sbb
inc
and
xchg
pop
mov
jae
and
pop
aaa
es
jge
jae
xor
pop
arpl
or
lahf
sbb
push
pop
ret
imul
cmp
pop
sub
loopne
fstps
mov
cmpl
adc
sbb
test
adc
sub
insl
sar
add
push
mov
xchg
xor
in
into
pop
push
test
xor
add
pop
push
outsl
stos
mov
inc
inc
sbb
outsl
in
mov
stos
outsl
jo
or
fwait
cmp
fmull
jg
imul
adc
pop
mov
in
sub
push
mov
test
inc
pusha
sub
aad
mov
sbb
pop
sub
push
addl
faddl
enter
dec
adcb
or
dec
mov
mov
or
sbb
fs
add
popf
inc
cmp
in
sub
js
loop
mov
xor
mov
mov
add
push
jl
mov
jecxz
push
jl
xlat
daa
ret
outsl
in
mov
mov
jb
gs
or
or
rclb
cmp
jbe
cmp
cld
cmpsb
pop
lods
out
popa
xor
dec
stc
pop
jl
dec
push
mov
or
and
inc
pop
out
sub
fbld
jbe
add
add
sub
jae
mov
mov
sbb
div
repnz
or
xchg
in
cmp
sub
int
push
arpl
imul
ljmp
icebp
cmp
popa
mov
xchg
adc
sbb
push
les
bound
cwtl
xor
xor
mov
sbb
bound
push
dec
push
ja
xchg
addr16
les
dec
adc
arpl
repz
ja
mov
xlat
cmp
and
push
sub
aaa
ljmp
aad
jno
movb
fiaddl
cmp
aaa
je
jge
adc
mov
lock
stc
lret
mov
mov
sbb
and
inc
sub
movsl
sub
aam
jns
push
out
enter
jbe
mov
cmpl
movsl
inc
push
fucom
imul
cmp
cmc
mov
jns
cmp
add
mov
popf
aad
push
ljmp
out
and
sbb
shll
mulb
idivb
mov
adc
adc
lea
xor
pop
mov
loop
and
dec
adc
fsubrs
leave
sbb
ds
mov
hlt
or
pop
stos
daa
xor
push
addr16
pusha
ljmp
push
fdivrl
out
mov
sti
push
test
push
adc
sbb
add
mov
imul
loopne
addl
mov
movsl
mov
mov
jmp
mov
fnsave
rcl
dec
ds
xor
mov
ret
push
mov
sub
add
inc
mov
push
inc
cmpsl
fmull
sub
pop
icebp
movsb
sbb
notb
pop
push
xchg
ss
fiadds
dec
outsl
xor
sub
jmp
je
mov
or
push
out
jp
jmp
lret
aad
int
je
outsb
pop
pop
adc
mov
sbb
mov
and
xchg
test
mov
scas
pushl
popf
aaa
inc
jns
fucomip
mov
jle
mov
addl
pop
es
xlat
mov
or
cmc
ds
stos
sbbl
mov
push
sub
sub
or
fstl
or
cltd
cli
call
jg
shrb
adc
xor
jno
inc
cmp
sub
push
or
aaa
mov
xor
dec
fcoms
clc
mov
ljmp
sbb
shll
daa
xlat
mov
jb
pop
or
sub
hlt
iret
out
leave
xor
aaa
popa
lea
pop
add
stos
pop
sub
pop
pop
xchg
xlat
addr16
add
mov
movsl
pop
stos
test
xor
mov
mov
stc
outsb
addl
adc
aaa
in
fistl
jmp
or
push
jnp
ja
fnstenv
lahf
mov
lock
add
das
bound
and
push
inc
mov
mov
sarl
jp
repnz
xchg
adc
xor
add
and
or
in
enter
adc
sub
cmc
test
pop
cli
pop
jp
xor
cwtl
insb
cs
add
pop
mov
sub
push
dec
sub
adc
add
scas
xchg
repnz
loopne
push
hlt
pop
push
mov
rolb
aam
or
dec
pop
mov
hlt
icebp
hlt
dec
mov
aam
icebp
fsubs
push
cmp
mov
stos
movsl
add
inc
lahf
cltd
sbb
aaa
outsl
ss
mov
pop
in
testl
pop
push
push
out
repz
xchg
cmp
outsb
push
pop
std
popl
xchg
dec
loope
mov
xor
mov
sbbb
dec
push
ds
xlat
push
fldl
lahf
or
shrl
faddl
mov
mov
cmp
popa
hlt
pop
outsl
sahf
icebp
gs
push
add
dec
dec
nop
adc
pop
fisttps
test
out
xor
xor
lret
xchg
sbb
ret
ds
lret
insb
push
jecxz
shrb
jbe
loopne
sub
xlat
aas
mov
push
xor
cmp
dec
leave
cwtl
mov
inc
out
aaa
test
cmc
pop
lret
mov
or
mov
sbb
xchg
adc
js
jae
int
outsl
outsl
jb
insw
into
inc
push
and
outsl
lock
aas
mov
cmc
push
into
out
pusha
mov
jge
fcmovne
fwait
mov
xor
popa
xlat
pop
cwtl
mov
or
cmpsb
pop
push
out
fbld
fcoml
inc
xchg
jl,pt
sub
movsb
cmp
push
add
inc
inc
xchg
push
subl
outsb
push
sbb
test
sbb
and
mov
jb
mov
cmp
cmc
test
pop
gs
mov
ja
loope
mov
and
or
xchg
add
ss
pop
adc
cmpsl
ja
cmc
xor
mov
add
dec
ljmp
out
mov
fnstenv
cld
mov
mov
test
or
aas
dec
aaa
sub
inc
dec
sub
or
bound
xchg
mov
sub
movsb
pusha
hlt
insb
xchg
lret
dec
sub
sbb
sti
lret
roll
fisubrs
jecxz
and
mov
lahf
loop
lret
and
dec
das
fs
sub
adc
adc
pushf
js
pop
repz
pop
cltd
das
insl
loope
mov
add
cwtl
inc
mov
cmp
cmp
pop
rcrb
imul
gs
adc
rorl
xchg
or
dec
push
pop
xor
sub
xor
std
mov
add
adc
sub
mov
xchg
pusha
mov
xchg
mov
mov
jmp
lcall
lds
jg
mov
sub
cmc
shlb
or
pushf
lods
jecxz
icebp
popf
sahf
mov
ja
and
pop
int3
sbb
jmp
adc
hlt
int3
loope
lret
loop
sbbl
scas
imul
cmp
xchg
inc
jne
inc
push
mov
cmp
sbb
dec
mov
sbb
shl
mov
xchg
and
inc
fstpl
das
je
push
adc
idivl
xchg
sbb
sbb
jecxz
pop
jmp
in
jmp
std
sarb
or
dec
add
xor
in
sti
into
nop
daa
jp
pop
sub
mov
jae
lret
push
cs
test
outsb
sub
cmp
pusha
xchg
add
cmp
mov
rcll
add
push
add
pop
ficoml
sbb
push
mov
mov
ja
mov
push
aas
mov
jmp
xchg
in
pop
xchg
push
scas
dec
jg
and
jne
xlat
mov
mov
push
cmp
inc
push
mov
add
popf
test
xor
push
je
movsb
pop
push
and
ficoml
mov
call
jl
hlt
xchg
or
jl
mov
jnp
sbb
jle
loopne
fnstenv
es
int
push
out
in
push
or
into
mov
push
jns
lret
mov
mov
aam
lcall
imul
adc
push
je
lea
jmp
ljmp
sahf
les
out
or
push
jmp
push
out
loop
mov
cmp
addr16
mov
in
cmp
push
inc
inc
sti
xchg
pop
jmp
shr
xor
jle
lds
sbb
fs
into
jns
pop
js
popa
fsub
cli
pop
push
popa
sub
je
rdmsr
aad
repz
add
jle
nop
pusha
repnz
add
pop
push
test
push
loop
dec
or
aad
aas
leave
sub
pusha
cmp
xchg
aad
xor
popf
and
fcomps
sbb
xlat
pop
adc
mov
pushf
push
and
adc
xor
push
dec
push
mov
sbb
pop
adc
aam
adc
dec
dec
add
pop
mov
inc
sbb
mulb
nop
pop
add
movsl
or
sti
inc
push
adc
lret
mul
pop
pop
gs
add
lock
push
loop
jmp
pop
in
adc
mov
mov
cltd
mov
lds
mov
les
popf
ret
adc
pop
inc
mov
cmc
sbb
sbbl
iret
bound
out
jecxz
pop
xor
or
cltd
movaps
xor
lea
mov
xchg
and
aad
pop
push
in
repz
lods
add
mov
repnz
in
sahf
les
xchg
lret
out
sbb
in
out
mov
je
sbb
aas
cmp
rclb
push
jle
out
mov
mov
mov
cwtl
xchg
ret
xor
sbb
push
xorb
cmp
in
inc
inc
mov
gs
dec
icebp
rcrl
cmp
or
pop
ja
pop
mov
pusha
xchg
insb
lret
mov
adc
repz
cmp
cmp
pop
scas
dec
xor
dec
pop
popa
cmp
std
mov
or
cmp
mov
inc
mov
pop
hlt
insl
rcll
push
flds
into
add
or
ljmp
out
and
jb
xor
jp
rcrl
mov
xlat
out
pop
or
scas
in
mov
dec
pushf
popa
lods
ja
cmp
adc
dec
mov
mov
push
jne
sub
jbe
fwait
push
cmpl
and
mov
insb
cmp
cmc
test
mov
mov
popa
loop
jb
push
loop
mov
cmp
dec
sub
mov
pop
add
inc
imul
subb
loope
dec
je
ljmp
loope
mov
testl
dec
xor
cmpsb
mov
inc
test
in
xor
addl
or
aaa
push
pop
into
repz
test
jb
dec
sub
in
out
xchg
das
push
adc
lahf
dec
xchg
es
mov
test
test
mov
sbb
vrcpss
inc
or
push
js
fsubp
add
lret
clc
in
push
dec
pop
sbb
mov
adc
xchg
inc
sbb
mov
loopne
dec
fcmovbe
push
mov
fs
cmp
subl
and
shrb
xchg
push
test
dec
mov
mov
lcall
lcall
push
cmpsl
and
cmp
in
pusha
add
sub
je
sbb
jne
adc
inc
mov
lret
rcll
or
add
mov
fs
jmp
ret
and
ficoml
adcb
mov
xchg
xchg
jae
ret
adc
sub
jmp
xchg
add
inc
jp
fst
adc
ret
adcb
int3
sarb
jmp
xor
xor
mov
xchg
and
in
dec
inc
mov
adc
jae
into
or
mov
jno
ljmp
xchg
lret
cmp
jae
xor
sbb
lock
cmp
aad
jnp
push
inc
mov
pop
mov
inc
lea
fs
icebp
testl
lret
mov
push
fildl
xor
and
dec
push
scas
pop
in
inc
mov
filds
mov
add
les
ds
cmp
mov
in
icebp
sbb
push
add
fsubrl
mov
hlt
cwtl
inc
popf
lods
dec
xor
push
mov
or
and
loop
cld
enter
lods
sbbb
jne
cmp
stc
mov
add
xchg
test
inc
mov
jg
mov
adc
cmp
test
imul
mov
lahf
mov
xchg
fs
ret
fwait
int
pop
adc
fwait
and
js
push
stos
ja
xchg
lret
xchg
aam
inc
push
cltd
mov
xor
dec
out
lock
xor
sbbl
lods
aaa
daa
iret
pop
aam
fs
add
dec
mov
daa
fildll
inc
adc
cmp
lds
inc
mov
cmp
dec
scas
push
mov
lret
mov
xchg
add
in
out
jne
movsb
sbb
mov
adcb
arpl
add
repnz
push
pop
jbe
pop
lea
imul
int3
sub
aaa
jo
test
movsb
mov
cwtl
in
pop
jae
xor
adc
xchg
mov
dec
cmp
adc
daa
daa
or
aaa
inc
cli
inc
sbb
mov
cmpb
push
dec
mov
pusha
test
lea
pop
inc
adc
jecxz
clc
dec
mov
mov
test
add
aas
fcomps
call
jnp
clc
sub
jne
lret
aaa
push
mov
call
into
movsb
pop
outsb
fs
jge
into
outsb
inc
in
pushf
popf
sub
and
loopne
dec
jbe
rclb
out
and
or
sbb
xor
nop
mov
jmp
jb
add
scas
xor
jp
xor
lret
pop
aas
and
hlt
sbb
fld
xchg
and
aad
jp
cld
ficompl
stos
aad
jae
inc
xor
repnz
adc
sub
aas
pop
mov
sbb
sbb
je
xchg
jno
jmp
add
je
push
sbb
arpl
daa
dec
xchg
mov
push
pushf
dec
mov
scas
pop
push
outsl
sub
jecxz
jle
in
call
jmp
test
ja
jmp
js
frndint
mov
out
movsb
lret
scas
shrb
xchg
cmp
dec
test
icebp
lret
dec
pusha
pop
mov
ja
adc
ss
out
clc
insl
pop
enter
into
and
or
lock
push
adc
popa
loop
jmp
aaa
dec
stos
repnz
adc
or
mov
outsl
leave
xor
jne
and
pop
sub
pusha
and
ret
jbe
push
test
xor
les
int3
mov
popa
mov
sbb
addb
loop
mov
hlt
leave
outsb
xor
jbe
or
adc
mov
or
push
push
mov
dec
sub
shrl
sub
push
sub
repnz
mov
push
push
fwait
sarb
dec
mov
mov
sub
cltd
add
mov
mov
jne
cmp
inc
xchg
jl
or
mov
mov
fadd
sub
mov
rcll
sti
push
dec
jmp
jge
xchg
or
mov
icebp
jnp
mov
inc
mov
mov
dec
mov
sub
xchg
pop
ja
out
mov
mov
pop
pusha
jbe
ljmp
jb
jmp
push
fdivs
push
pop
scas
fwait
push
and
sub
cmp
lock
sub
ror
daa
mov
jp
movsl
pop
mulb
and
xor
loopne
cltd
addr16
or
aad
push
xchg
std
iret
adc
xchg
cmp
mov
inc
popa
mov
test
in
cmp
cmpsb
adc
cmpsb
dec
xlat
in
rcll
and
and
mov
rcll
rcll
shll
or
lds
scas
cmp
mov
les
xchg
loop
inc
inc
mov
jns
ss
fidivs
sub
mov
sahf
mov
call
inc
inc
andb
outsb
push
mov
ret
fistl
xchg
push
insb
out
sti
fwait
and
dec
add
fidivrl
ret
insb
ja
sbb
lcall
dec
daa
loope
test
icebp
mov
mov
dec
mov
call
lret
mov
and
insb
sub
push
xor
aad
fwait
jo
fcoms
or
rclb
push
out
pop
xchg
cmpsb
jno
cmc
loope
outsl
gs
shlb
xchg
gs
cmp
insb
mov
cltd
aam
stos
xorb
cltd
lock
shlb
in
xor
ficomps
sti
jle
lret
mov
insb
xor
fwait
bound
push
mov
mov
cmp
xchg
cmp
call
xchg
aas
movsb
xor
ljmp
stos
mov
in
es
mov
ja
imul
jno
fcmove
mov
jno
les
mov
imulb
pop
push
mov
arpl
mov
aad
cltd
inc
push
xor
sub
sbb
adc
enter
add
not
mov
leave
sti
mov
add
outsb
pop
cmp
dec
outsb
stos
cmp
xor
mov
cs
js
push
mov
push
fdivrs
add
mov
sbbl
ljmp
and
mov
and
mov
adc
fwait
jb
xchg
mov
roll
push
jo
fldz
and
popa
mov
push
pop
jo
int3
xor
mov
outsb
aam
in
or
jecxz
cmp
into
enter
test
cmpsb
lahf
adc
mov
into
xor
add
or
sbbb
xorb
repnz
mov
popf
pop
test
and
xlat
jg
mov
pop
jnp
pusha
dec
mov
daa
and
or
jnp
push
test
adc
add
and
dec
stc
cld
pop
pop
and
push
xchg
fst
sarb
pop
data16
lcall
and
mov
xchg
add
ret
aaa
sbb
js
scas
push
pop
dec
imul
and
mov
sahf
lret
fildl
scas
adc
dec
and
mov
popa
test
xor
fwait
je
sbb
jb
loope
test
sbb
or
sub
mov
pushf
divb
sbb
mov
push
ret
sar
js
imulb
push
in
add
cwtl
jnp
or
pop
adc
add
sbb
pop
les
andb
in
cmc
add
jecxz
pop
mov
pop
add
fs
jmp
fstps
cltd
leave
cli
sahf
mov
loopne
lret
dec
cmp
ret
sahf
sbb
ret
adc
mov
jl
jnp
into
adc
jae
loopne
pop
jmp
inc
mov
mov
shll
imul
out
xor
inc
adc
jne
mov
cmp
les
dec
call
test
adc
repz
jle
jmp
mov
jno
or
jecxz
fidivl
sub
call
inc
ret
mov
or
fistl
jl
lret
xchg
ror
push
push
gs
loope
sbb
aaa
int
ror
out
ds
and
shl
jne
clc
into
xchg
sub
mov
loop
mov
es
xor
jmp
push
jg
pop
pop
sub
cmpsl
mov
dec
jmp
ss
rolb
mov
xchg
cmpsl
cltd
and
pop
adc
sub
adcb
enter
mov
inc
mov
mov
mov
push
push
adc
push
fsubr
jo
xor
dec
imulb
in
dec
test
divl
fidivrs
jno
stc
std
inc
and
fldl
call
test
enter
sub
clc
ds
test
aaa
loope
shl
scas
cmpsb
lods
xchg
mov
push
add
jns
test
inc
lcall
je
xor
xor
les
mov
sbb
xlat
std
cli
adc
sti
or
inc
cwtl
rcll
mov
sbb
and
shr
imul
inc
pop
mov
imul
cwtl
dec
mov
gs
dec
mov
jge
or
enter
outsl
fstps
pop
add
cs
inc
sbb
clc
sahf
xchg
sarb
rclb
aad
fisttpll
fnstenv
cmp
pop
fisttpll
push
jle
movsb
xor
pop
pop
js
shr
into
aam
cmp
push
test
mov
fsubrs
push
jne
mov
pop
jns
popf
push
cmp
xor
mov
mov
pop
jecxz
jnp
imull
int
insb
cmc
fildll
in
jecxz
je
inc
ficomps
sub
sbb
cmp
fidivs
push
test
fdivs
mov
and
jb
or
fwait
push
dec
test
xchg
or
pusha
jmp
add
add
les
sbb
inc
roll
pop
ret
add
sbb
in
sub
clc
movsl
xor
xlat
and
aad
mov
iret
and
test
mov
jl
adc
aad
jg
or
aaa
push
push
pop
xor
adc
sub
ss
adc
cmp
or
into
fwait
adc
and
nop
lea
xchg
scas
loope
mov
mov
cmp
outsb
inc
lods
fbld
pop
mov
icebp
data16
push
cmp
cmpsb
out
jo
cmpsb
sarb
movsl
inc
inc
push
cmp
mov
adc
sbb
adc
dec
lds
push
mov
ret
mov
pop
repnz
outsl
cmp
push
dec
inc
sub
sbb
sub
pop
mov
test
fcmovu
gs
inc
sbb
les
arpl
lret
iret
mov
xchg
mov
cmp
mov
fnstcw
lret
pop
mov
xchg
loopne
jbe
out
jne
mov
push
push
jbe
rcll
cld
push
movsb
push
or
cmpsl
jmp
jbe
in
inc
mov
lods
outsb
scas
arpl
add
cmc
cmpsl
and
inc
les
fidivs
ds
dec
inc
cmp
les
sub
sbb
inc
push
mov
sub
addr16
push
inc
stos
fistpl
xor
push
dec
daa
push
repnz
sbb
adc
jle
popf
dec
jecxz,pt
loope
sub
mov
sti
adc
repnz
add
or
aaa
xlat
loope
jp
scas
sbb
scas
push
jge
mov
fwait
gs
fnstcw
std
cmpsb
mov
jle
pop
pop
push
dec
sub
cli
into
int
jecxz
outsb
stos
or
and
push
stos
xor
sbb
bound
into
xchg
icebp
push
dec
in
mov
xchg
into
add
cmp
scas
stc
sbbl
add
xor
test
push
loopne
and
inc
fbstp
arpl
cmp
add
das
sbb
pop
adc
or
xlat
jg
sarl
mov
inc
dec
mov
std
es
sub
into
mov
adcl
stc
jnp
int3
adc
in
dec
dec
rol
rcrl
inc
dec
or
mov
lds
or
lods
ret
cs
adc
out
imulb
xchg
sti
hlt
or
loop
push
mov
adc
cmp
incl
mov
sbb
pushf
and
sub
in
ret
mov
loopne
subl
ljmp
jg
icebp
mov
sbbl
cmpsb
in
xchg
cmp
stc
sbb
xor
mov
xlat
cmpsb
and
dec
jmp
popf
fwait
outsb
sub
sbb
mov
xlat
xor
dec
int3
jl,pt
adcb
pop
out
mov
mov
jno
aam
adc
dec
fwait
sbbl
faddp
push
out
mov
cli
xor
mov
push
pop
inc
adc
into
mov
movsb
cmpsb
ljmp
pop
inc
int
fldenv
dec
clc
xor
and
add
pop
ljmp
mov
dec
xlat
mov
mov
add
in
fiaddl
sahf
dec
dec
xchg
testl
mov
loopne
mov
jnp
sub
pop
daa
divb
jb
fistl
add
in
in
jne
into
mov
mov
mov
lret
mov
sbb
in
mov
out
adc
lahf
aad
adcl
pop
xchg
test
jns
dec
loop
sub
pop
fists
inc
xchg
push
std
jns
std
jecxz
mov
ret
mov
sbb
les
loopne
adc
pop
lret
mov
clc
addr16
cmp
cltd
mov
adc
lds
stos
dec
xor
test
inc
xor
push
cmp
dec
dec
mov
mov
mov
arpl
adc
or
cmp
jle
mov
jns
dec
xor
mov
and
int
cltd
fcomp
lret
popw
sahf
pop
stc
int
cwtl
lods
xor
mov
adc
sbbb
mov
add
pop
mov
lahf
and
inc
push
jbe
jg
test
jb
sbb
push
mov
sti
lret
out
fidivrs
testl
idivl
mov
inc
add
imul
rolb
sub
sub
cmp
xchg
xor
jle
add
push
inc
sub
jbe
iret
push
mov
mull
sub
cmc
add
arpl
inc
in
dec
adc
std
push
int
add
ds
loope
jnp
push
icebp
arpl
mov
fnstcw
cmc
push
adc
jbe
je
jne
pusha
xchg
mov
aam
inc
pop
dec
push
stos
or
sbb
scas
popa
or
out
pop
xor
mov
push
lahf
inc
int3
das
jge
jo
mov
xorl
hlt
enter
inc
shrl
lret
mov
fnsave
mov
and
sub
push
iret
cmp
jmp
pop
sarl
add
mov
sub
mov
jp
mov
ss
mov
aas
pop
xchg
adc
movsb
fdiv
add
out
mov
ss
mov
out
inc
std
xor
arpl
arpl
cmpb
pushf
or
dec
and
int
and
bound
cmp
imul
hlt
sub
adc
cs
jns
xchg
leave
adc
lahf
inc
out
sti
test
push
or
insl
adc
jns
fsubl
leave
add
iret
outsl
popa
mov
ds
cltd
add
test
pop
mov
je
mov
mov
mov
sub
add
lds
sti
jno
lret
cmpsb
mov
inc
lahf
push
adc
hlt
adc
adc
dec
pusha
jbe
push
mov
repz
push
push
mov
test
icebp
xor
hlt
pop
push
imul
push
lret
sbb
fdivl
gs
or
cli
inc
push
js
es
sub
xchg
faddl
fs
mov
cmp
dec
inc
jb
or
xor
lret
xchg
inc
sahf
xchg
and
aad
add
push
xchg
cld
jno
sub
xchg
hlt
or
jo
xchg
and
pop
dec
pop
ljmp
sbb
movl
movsb
cltd
jmp
cld
test
std
out
adc
inc
xchg
and
mov
out
js
out
sub
and
out
or
data16
xor
xor
fwait
inc
sbb
fs
mov
cld
add
arpl
pop
xor
cmp
imulb
xor
or
hlt
mov
pop
test
xchg
sub
jmp
mov
std
lods
mov
mov
add
movsl
jae
jae
xor
push
cmc
xor
push
sbb
mov
lea
mov
into
pop
jecxz
or
mov
push
mov
or
jmp
mov
push
lods
aad
adc
mov
push
outsl
sub
bound
popf
adc
and
pop
in
pop
rorl
outsl
push
jp
push
xchg
scas
scas
mov
stc
sbb
sbb
dec
mov
push
or
ljmp
leave
lret
or
mov
call
and
jecxz
fisttps
call
pop
mov
lods
aaa
outsl
sub
mov
push
es
push
cmp
int
jmp
cli
mov
xor
outsl
loopne
xchg
xchg
mov
cs
xor
pop
rclb
testl
imul
xchg
les
cmp
sbb
jno
add
jmp
cmpsl
pop
out
ret
sub
pop
negl
push
loopne
in
insl
or
pop
outsl
jb
xchg
jae
inc
mov
mov
jo
mov
pop
jmp
call
lds
add
mov
inc
cmp
cmp
xor
mov
pop
repz
push
fnsetpm(287
pop
movsl
fnclex
add
lods
adc
mov
xor
mov
adc
jnp
cld
hlt
bound
or
stc
outsl
mov
inc
scas
push
xchg
xor
mov
test
mov
inc
sub
lret
idivl
jb
imul
fstpl
mov
jmp
cmp
mov
mov
popf
or
dec
lods
cmp
stos
and
xor
push
fisttps
cwtl
xor
mov
dec
push
out
xchg
nop
jl
jnp
mov
fstps
lret
sub
pop
clc
nop
add
out
das
gs
mov
dec
aaa
insl
sub
aad
sbb
cwtl
div
mov
sub
repnz
imul
mov
enter
jns
mov
xchg
sbb
test
pop
loope
pop
cmp
pop
jnp
fcoml
leave
pop
sbb
cmp
sbb
jle
scas
stc
pop
dec
adc
pop
xor
out
jle
push
jmp
cmp
mov
mov
inc
test
xchg
repz
pop
dec
sahf
aaa
cmp
and
inc
cmp
shl
in
inc
ss
out
sti
mov
pop
mov
sahf
pop
jnp
mov
xchg
insb
or
xor
lock
ljmp
addl
cmpsb
mov
add
dec
lea
imul
or
outsl
jge
sub
lds
xor
imul
fstl
cli
adc
out
mov
mov
dec
push
leave
push
push
aaa
repnz
sbb
inc
addr16
push
or
inc
aas
pop
sbb
fs
inc
repnz
adcl
ljmp
int
in
cltd
jge
and
lcall
scas
adc
dec
out
loope
xchg
mov
xorl
popf
shl
ret
sti
jns
xchg
mov
int
jmp
js
or
ret
mov
push
lcall
mov
and
or
mov
dec
xchg
xchg
rcr
or
out
aam
repz
cltd
fs
insl
push
xor
mov
jbe
jecxz
popf
test
repz
cld
hlt
repnz
fs
or
das
add
sti
push
mov
cmp
and
sub
mov
pop
mov
scas
test
xor
pusha
mov
mov
and
ret
cmp
mov
push
outsb
out
mov
inc
xlat
dec
clc
xor
pop
lock
test
bndldx
mov
dec
cld
adc
pop
dec
into
pop
lret
pusha
and
cmpsb
xor
inc
cmpsl
adc
jo
mov
mov
mov
cltd
rcrl
stc
incb
xchg
mov
bound
ficoms
subb
loopne
nop
inc
pop
aaa
aas
shrb
inc
sti
push
cltd
std
mov
gs
sub
sub
jge
mov
lods
push
dec
scas
aaa
add
sti
add
std
pop
push
int3
ss
testl
rcl
xchg
xor
sbb
mov
jae
inc
shrl
bound
es
add
push
dec
sub
adc
fcmovbe
xchg
daa
cwtl
hlt
cwtl
xlat
sbb
mov
mov
popf
icebp
xchg
jns
scas
dec
jmp
cwtl
mov
dec
mov
cmc
jmp
popf
xor
nop
or
fucompp
ret
adc
decb
mov
test
and
inc
pop
cwtl
hlt
call
lea
popa
loopne
adc
enter
out
sub
push
subb
dec
sbb
insb
call
out
push
icebp
out
push
and
push
fs
xor
or
insb
cmp
enter
vpaddusb
js
jnp
adc
loopne
lret
insb
arpl
jbe
sub
xor
cmp
jb
test
hlt
cmpsl
mov
push
cwtl
mov
hlt
and
push
mov
push
jo
dec
pushl
lret
push
xchg
and
cmp
bound
jl
stos
pusha
outsb
movsl
daa
jo
insb
gs
aad
test
mov
test
mov
imul
or
mov
cld
int3
or
hlt
add
push
ljmp
or
orb
sbb
data16
mov
add
hlt
mov
mov
xchg
mov
ror
es
fdivr
add
jge
imul
and
dec
mov
fdivrs
xchg
cmpsl
push
aam
adc
in
mov
inc
in
sub
xlat
jmp
insl
movsb
aaa
xchg
mov
dec
jle
arpl
push
xor
push
push
ret
movsb
or
iret
cs
faddp
fwait
test
xor
adc
imul
jmp
push
dec
xor
imul
pop
mov
test
mov
or
mov
mov
mov
adc
jnp
and
test
in
mov
pop
inc
cmp
push
cmp
in
test
lods
movsb
stos
mov
jmp
cmpsl
mov
mov
es
shll
fnstenv
pop
cmpsl
and
stos
push
push
ljmp
lret
and
or
sub
lds
push
negb
sahf
dec
int3
push
adc
cmp
call
int3
jb
sbb
mov
outsl
add
sbbl
adc
and
hlt
test
sbb
imul
jp
clc
scas
xor
push
hlt
cmp
cmpsb
dec
sarl
pusha
push
data16
mov
add
jp
frstor
pusha
cli
fsts
cwtl
cld
js
pop
mov
inc
dec
movsl
in
stos
jns
cmp
mov
mov
repz
mov
je
iret
lods
pop
jmp
jae
cld
pop
stos
ja
lcall
xor
cld
aam
mov
mov
xlat
mov
pop
and
lret
sbb
inc
jnp
fldt
into
sbbb
aad
cltd
fwait
xorb
stos
clc
cmp
sub
outsb
aam
cmpsb
ret
sub
rorb
xchg
push
je
jnp
stos
ss
shll
push
testb
out
ja
push
pop
add
fdivrs
xchg
and
mov
xchg
fldl
jno
int
inc
or
incl
sbb
xchg
nop
mov
push
dec
idivb
rcrl
pop
lock
xchg
rol
incl
outsb
mov
daa
iret
std
and
mov
mov
lds
ja
and
mov
sarl
add
inc
aas
sbb
sbb
push
shlb
add
jecxz
pop
cmc
xchg
sub
jmp
dec
or
shrw
sbbb
inc
cmpsl
add
bound
lcall
mov
insl
scas
cmp
int
iret
cli
push
mov
mov
sub
mov
enter
ret
or
xor
xor
push
mov
xor
insb
push
sub
addr16
dec
movsl
sahf
and
je
int
push
pushf
pop
into
adc
xlat
add
sbb
fisubs
xchg
push
out
stc
push
aas
pop
mov
push
xlat
flds
fld
add
mov
cmp
cmp
xor
xchg
fiadds
xor
ja
cmp
push
push
divb
mov
mov
call
xchg
pop
pop
scas
jno
push
dec
push
add
mov
fs
pop
cmp
andb
test
sti
clc
pop
sbb
push
sbb
in
mov
xchg
cmpsl
xchg
outsl
lret
jne
and
and
xlat
repz
inc
jo
repz
jecxz
mov
into
xor
adc
ret
cmp
inc
les
rclb
push
vpshufhw
dec
dec
pushf
ds
xchg
pop
aas
inc
xor
aad
or
popf
cmpsb
hlt
shrb
dec
int3
addb
ficompl
push
xor
sub
jo
enter
sbb
popa
jae
xor
lods
pop
and
imul
sti
adc
shrb
xor
fnstsw
cmp
loopne
cli
shrb
sbb
aad
xchg
pop
ja
add
test
scas
sub
sbb
scas
mov
cmp
add
adc
lods
pushf
lret
push
mov
xchg
mull
add
add
add
into
lahf
aaa
sti
push
sti
hlt
push
jnp
or
jnp
xchg
outsl
mov
push
outsl
jb
jne
inc
mov
push
mov
cmc
pop
and
sbb
cmc
and
and
and
mov
push
bound
dec
xchg
xchg
nop
inc
dec
push
add
lods
or
dec
shr
pushf
test
sub
loop
shl
idivb
pop
push
push
sbb
sahf
xor
enter
xchg
adc
mov
or
jge
cmpsb
int3
xor
push
sub
push
iret
and
mov
mov
inc
repz
pop
out
imul
add
or
fisttpl
jle
ss
cmp
jno
jns
popf
mov
fcoms
add
subb
add
shll
push
scas
test
cli
insb
test
clc
jg
call
fsubl
sahf
ljmp
test
pop
jns
fwait
mov
cwtl
fidivs
movsb
pop
inc
iret
mov
mov
rol
add
push
xor
imul
push
loope
pop
mov
arpl
rcl
sarb
xchg
lcall
xor
leave
loop
aas
and
sub
inc
out
lds
jge
loop
push
bnd
test
pop
sbb
cmp
cwtl
pusha
nop
lahf
fwait
jle
mov
lret
ffreep
xor
out
push
mov
adcb
and
fcomps
pop
movsl
push
lock
mov
inc
sub
bound
out
or
push
out
sbbl
sub
sti
les
add
enter
std
sbb
push
sti
sub
orb
shlb
mov
out
mov
test
ja
mov
cmc
fildll
mov
out
xchg
xchg
cmp
push
dec
cmp
mov
jg
or
loope
pop
xchg
ss
sub
ret
add
pusha
mov
lods
loope
mov
repz
inc
sbb
lret
xchg
rcrb
mov
bound
mov
xor
mov
insl
cmp
mov
stos
sub
mov
ljmp
in
daa
cltd
out
pop
aaa
movsb
push
push
mov
out
cmp
xchg
fsincos
nop
mov
frndint
add
cmp
daa
mov
mov
mov
loop
in
pop
dec
jns
test
negl
sub
mov
stos
dec
mov
jp
jle
daa
cmp
inc
leave
fbstp
mov
rclb
push
push
int
out
cmp
pop
cmp
stc
mov
mul
cwtl
inc
or
mov
aaa
icebp
out
mov
cli
int
xchg
bound
outsb
cmc
sub
lret
jp
sub
xor
dec
dec
testl
xor
push
mov
cmpsb
xchg
mov
xchg
xchg
or
hlt
adc
pop
lea
mov
and
xor
das
jnp
sahf
repz
repnz
adc
pop
inc
cltd
mov
mov
push
or
dec
mov
add
clc
or
push
addl
xor
inc
mov
or
test
gs
inc
jmp
shl
dec
or
xchg
push
push
mov
pop
sub
lods
pop
mov
test
sub
inc
xchg
pop
mov
pop
movsl
sbb
mov
loope
mov
cmp
or
mov
dec
xchg
push
imul
xchg
jno
dec
stc
leave
rorb
cmp
pop
push
dec
and
push
mov
in
sub
rcr
inc
mov
stc
inc
mov
mov
cmp
and
xchg
cmp
sahf
pop
pop
mov
mov
mov
stos
pusha
mov
mov
xor
jo
push
insb
push
gs
dec
int
jl
aad
mov
test
jo
sub
das
loop
jge
adc
push
fcoms
mov
cld
jg
insl
inc
sub
jnp
bound
arpl
dec
imul
call
aad
incl
dec
repz
xchg
xor
jmp
dec
ds
mov
fcompl
or
lea
or
mov
or
test
stos
je
je
jb
mov
and
out
and
mov
sub
mov
sub
gs
sbb
insb
and
or
cmp
cmp
sub
cltd
fisubrs
mulb
lods
fwait
mov
pop
dec
adc
repz
mov
dec
mov
fcos
nop
xchg
pop
sar
xchg
sbb
jo
fcoml
jecxz
push
fisubrs
rcll
lcall
nop
inc
repz
arpl
es
pop
jbe
cmpsl
into
lods
inc
lea
pop
test
xchg
push
les
and
sbb
popf
movb
mov
cmp
cli
movsb
lods
cld
adc
or
test
jg
in
xor
fistpll
icebp
es
stos
dec
and
push
dec
mov
add
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
mov
subb
cmp
mov
push
stos
push
add
scas
mov
or
lds
dec
or
imul
jae
scas
outsl
jb
sbb
pop
iret
jmp
sahf
adc
clc
mov
push
popa
leave
leave
rorb
in
xlat
cmpsb
arpl
add
lods
mov
bound
inc
jg
mull
ffree
jne
sbb
jo
repz
out
lods
fscale
int3
mov
pushfw
cld
into
out
stc
sbb
ret
pop
and
mov
push
sbb
dec
push
cmp
call
or
mov
fdivr
add
sub
push
out
call
pop
in
and
xor
sbb
scas
daa
adc
arpl
mov
jl
test
repnz
add
in
mov
cmp
mov
or
jge
and
dec
insl
dec
mov
out
nop
ss
frstor
pop
data16
nop
sub
rcr
ret
sbb
pop
sbb
shl
addr16
sub
rclb
jno
outsl
lods
cltd
mov
dec
xor
jbe
int3
add
and
mov
or
xor
xchg
test
sbb
jns
jmp
push
xor
mov
xor
mov
mov
orb
aam
or
pusha
icebp
sub
push
mov
repz
call
or
push
and
scas
scas
mov
out
fs
std
and
cmpl
inc
pop
pop
pushf
enter
or
jp
or
sbb
aam
jle
stos
neg
push
and
movsl
adc
and
sbb
in
sub
jb
mov
mov
int
push
ljmp
or
popl
mov
mov
incb
cmp
xchg
sub
adc
inc
sti
mov
cmovbe
enter
push
inc
and
adc
stc
xor
mov
mov
xchg
cmp
pop
in
dec
cld
jmp
or
jle
ret
bound
xchg
jge
je
sbb
stc
aaa
xchg
sbb
repnz
cmp
stc
or
dec
sbbb
decl
dec
or
pop
inc
ds
in
lods
mov
stc
lods
push
dec
les
cmp
inc
push
gs
roll
push
xchg
sbb
testl
push
aam
jl
std
in
cmc
daa
and
pop
mov
mov
cmp
or
jle
mov
pop
bsf
into
cld
xchg
outsl
sbb
js
mov
paddsb
out
ficoms
sub
int
xor
out
mov
jmp
pop
or
or
pop
rorl
cltd
fisubs
subl
idivl
pusha
lret
cmp
jl
fidivs
jmp
inc
rcl
cmpl
dec
xor
movsl
movsb
test
mov
cmpsb
insb
pop
and
mov
test
cmc
and
mov
inc
in
add
inc
mov
cmc
push
xchg
sub
into
arpl
call
jmp
aas
das
dec
jge
insb
out
mov
or
ljmp
inc
cli
outsl
pop
pop
mov
xor
pushf
ljmp
loope
outsl
scas
push
outsl
scas
inc
add
sub
pop
pop
jbe
dec
inc
ss
lcall
dec
mov
insl
mov
adc
or
pop
cmp
fisubrs
ficoml
add
loope
jne
leave
add
xor
sub
xchg
stos
cmpsl
xchg
jno
cld
push
sahf
pop
imul
cmpsb
jne
xchg
sub
jecxz
and
jle
jge
aaa
rcr
inc
sub
mov
sbb
and
cmp
lods
and
or
imul
cmp
cwtl
test
cs
sub
and
popf
loop
cmp
mov
adc
in
fistpl
xchg
xchg
pop
mov
jb
lahf
add
push
in
out
mov
lret
fwait
imul
daa
or
xchg
aaa
xchg
lds
jno
dec
jae
addb
pop
pop
xchg
mov
dec
fists
pop
xor
insl
pop
mov
adc
and
push
sub
pop
mov
ret
cmp
insl
push
push
dec
jle
or
pop
icebp
cli
mov
ficomps
jnp
clc
jo
in
mov
push
xchg
fcomps
push
scas
sarb
mov
pop
int
mov
jne
lock
dec
in
mov
or
cmpsl
enter
aad
jbe
pop
in
aas
cmpsl
inc
or
or
jnp
push
xor
loop
aam
dec
shrb
into
push
les
into
mov
aad
inc
adc
sbbb
fwait
mov
subl
pop
repz
jmp
test
stos
test
outsb
cmp
out
or
and
int
inc
adc
sbb
dec
xchg
adc
mov
cwtl
int
sahf
mov
testb
jbe
out
cmp
rol
push
mov
les
pop
pop
xchg
enter
es
pushf
into
dec
pop
sub
in
clc
rorb
dec
sbb
cmp
dec
and
jbe
pushf
jl
and
ss
repz
jbe
shrb
dec
xor
cwtl
mov
sarb
xchg
mov
cmpsb
outsl
and
inc
enter
lcall
or
or
xchg
xor
dec
dec
daa
mov
push
ljmp
jns
sahf
push
push
xchg
xchg
hlt
mov
aad
les
cmpsl
jne
mov
mov
adc
pop
xchg
lods
pop
loope
push
xor
and
scas
push
push
sbb
andb
xchg
push
fcomps
and
cltd
shll
lods
mov
xor
pop
mov
pop
jno
push
addr16
push
xchg
pop
xor
dec
inc
mov
jno
or
or
or
jp
mov
rcr
push
out
pop
nop
cmpb
jl
adc
and
clc
pop
shll
shr
sbb
loop
pop
dec
jmp
dec
out
mov
jp
stc
hlt
mov
inc
repnz
icebp
sub
or
call
mov
arpl
movsl
daa
loope
daa
lock
jo
mov
pop
jmp
jmp
push
cmp
and
call
and
daa
popa
mov
imul
lods
ds
popl
cmpsb
cwtl
xor
mov
jno
mov
js
fisubl
pop
inc
int3
lret
pop
fistpl
push
cmc
jns
and
movaps
lret
pop
cwtl
xor
mov
mov
xor
dec
arpl
imul
lret
xor
call
push
test
stos
fcompl
cmp
shl
out
mov
subl
loope
sbb
mov
addl
enter
movl
or
and
or
jl
call
jg,pn
mov
out
addb
adc
lock
jns
sub
push
xchg
sahf
lea
ss
push
xor
mov
sbb
dec
jb
outsl
cmp
mov
cmp
xchg
push
pushl
adc
sbb
cmp
or
ja
mov
pop
scas
jge
sub
inc
out
push
mov
cmp
adc
repz
inc
insb
xor
sub
add
jbe
xor
loope
cli
mov
je
jae
add
pop
std
mov
cwtl
nop
dec
mov
call
pop
testb
ds
xchg
jne
roll
lahf
jle
and
pop
push
pushl
in
subl
mov
or
dec
mov
mov
xor
xlat
mov
aaa
jns
js
testl
in
mov
sarb
jmp
mov
cmpsb
sbb
shll
push
jo
add
push
daa
movsl
mov
jb
mov
push
fisttps
fnsave
ss
sbb
sahf
shll
jle
and
or
and
xlat
jno
and
push
icebp
mov
xorl
jbe
xor
out
les
dec
pop
test
ret
sub
mov
cmpsb
sahf
stos
inc
jo
insb
aaa
leave
jne
mov
xchg
adc
xor
push
add
lret
push
je
push
andl
mov
xor
ret
inc
ja
push
pop
pop
lods
jo
std
scas
fisubrs
sub
xchg
pop
sub
test
add
testl
dec
sarb
loope
mov
cmpsl
push
mov
ljmp
mov
in
nop
and
repnz
cmp
mov
popf
pop
xchg
jno
mov
xchg
jae
jnp
fs
inc
arpl
out
inc
xchg
test
sub
icebp
insl
cmp
ljmp
lods
jnp
shl
aam
ficompl
and
mov
cmp
in
js
fs
out
push
fisubs
hlt
jae
cmpb
daa
stos
in
outsl
add
inc
fcompl
addb
cld
push
jbe
xchg
cli
cld
shl
insl
ss
jecxz
pop
pop
test
or
lcall
mov
xor
mov
mov
ret
popf
loopne
sarb
or
mov
stc
or
mov
fidivs
pop
mov
mov
cld
repnz
add
sarb
lcall
adc
inc
and
loope
fisubrs
xchg
int3
pop
sub
lret
ret
mov
adc
xor
leave
jmp
leave
adc
add
pop
xlat
in
push
into
outsl
and
jp
mov
dec
cli
into
les
jecxz
lcall
add
call
insl
push
pop
test
cwtl
icebp
clc
pop
imul
mov
mov
ret
dec
loop
lock
cmpsl
andb
popa
pop
dec
dec
sbb
jecxz
jg
iret
xor
mov
push
sbb
lret
jle
int3
leave
inc
and
pop
stos
xor
sysret
aam
pop
mov
ljmp
add
or
mov
push
cmp
lret
mov
rolb
pop
cmp
mov
add
push
mov
xchg
jae
ret
dec
mov
cltd
sub
mov
out
cmpsb
adc
jle,pn
jge
pop
add
sarb
sbb
mov
xor
sahf
cmp
fwait
and
mov
stos
jg
daa
push
or
pushf
push
push
lds
xchg
xchg
inc
sub
call
fcmovnbe
or
cmpb
into
or
add
jmp
loope
inc
xchg
in
fdivs
test
je
mov
adc
inc
sub
fnsave
fs
sbb
out
loopne
call
rol
add
out
dec
jae
test
rcll
popf
pop
sbb
clc
push
or
aam
nop
dec
or
mov
sbb
xchg
add
pop
xchg
jle
aaa
inc
or
popa
adc
push
mov
les
cmp
and
imul
rclb
or
or
repnz
in
mov
dec
push
scas
test
jae
out
sti
fstpl
outsl
add
lods
jns
sub
mov
daa
int3
adc
movsb
cwtl
test
scas
push
jp
mov
inc
leave
push
mov
imul
dec
mov
scas
mov
aas
push
lcall
mov
enter
dec
ror
cmp
fsubl
add
xchg
xchg
mov
sbb
sub
out
cmp
in
push
ror
imul
mov
xor
in
aad
loopne
sub
imul
xchg
mov
push
aas
in
or
mov
pop
scas
clc
pop
mov
cmpsl
mov
xchg
loop
mov
and
scas
sub
jns
insl
sbb
inc
push
icebp
outsl
das
jno
mov
add
mov
fs
jmp
push
jo
out
mov
aas
jmp
xor
testl
add
mov
fwait
hlt
mov
enter
adc
jbe
mov
mov
jns
mov
xchg
adc
sbb
movsl
fistpl
mov
pusha
jae
inc
sub
add
std
mov
jl
rcrl
movsl
dec
add
sarb
in
aas
push
push
fisttps
add
mov
clc
push
fcoms
jno
dec
gs
mov
or
xor
push
jo
add
je
and
ljmp
jle
test
mov
call
and
loopne
xchg
jge
js
cmp
inc
andl
adc
and
sub
jae
push
scas
mov
push
in
cltd
add
add
adc
dec
and
dec
xchg
lods
xchg
loop
js
mov
mov
dec
cmp
insb
cmpb
ja
add
cmp
ss
je
push
or
xor
cld
sub
sub
mov
inc
xchg
and
int3
loope
pop
mov
pop
and
pop
or
dec
or
out
syscall
enter
nop
sbb
addr16
pop
inc
pop
lcall
data16
sbb
and
into
and
or
lock
mov
nop
cmp
fisttps
mov
xchg
sub
sbb
int3
je
mov
jbe
orb
adc
stc
mov
pop
or
push
into
icebp
push
rolb
cltd
jp
inc
sbb
inc
xchg
popa
aaa
cli
leave
inc
adc
daa
xchg
add
mov
mov
pop
mov
mov
cmp
mov
cli
add
movsb
outsl
daa
mov
fists
faddp
xor
mov
mov
int
test
insb
or
jge
notl
enter
lahf
jecxz
cwtl
xchg
iret
xor
lcall
repz
mov
out
sbb
mov
jb
add
pop
scas
mov
inc
dec
int3
xor
mov
jae
push
xchg
pop
adc
dec
sahf
xor
and
xor
adc
test
inc
mov
sbbb
mov
cwtl
sarb
ljmp
jg
mov
sbb
adc
dec
mov
lret
out
test
push
xchg
lea
jno
leave
push
sbbl
into
je
aaa
pop
sahf
mov
aas
leave
pop
rorb
mov
xchg
icebp
loop,pn
mov
xchg
mov
loopne
dec
mov
push
mov
sbb
inc
or
and
movsb
in
mov
test
test
cmp
test
add
cmp
cmp
ja
jmp
push
outsb
mov
int3
push
pop
cmpsl
aad
xor
aam
addr16
shrl
and
dec
push
xor
or
jl
dec
and
fs
cld
jnp
lock
push
pop
adc
fs
idivb
mov
xchg
scas
xorl
add
adc
fwait
jge
cmpsb
xor
ljmp
gs
add
addl
je
xor
faddp
and
inc
mov
inc
adc
in
inc
sub
fcompl
pop
repnz
xor
outsl
ljmp
clc
add
xchg
add
je
test
cmpl
popf
mov
dec
movsb
dec
jecxz
xchg
jb
pop
int3
icebp
ljmp
repnz
pop
stc
and
jl
dec
ds
mov
xchg
leave
ss
xlat
pushf
xchg
orb
pop
pop
adc
jb
sub
loope,pn
stos
arpl
lahf
pop
ss
aam
xchg
jmp
or
xor
ds
push
cmpsb
das
dec
stc
jne
pushf
push
sub
shll
jo
sub
cmp
cltd
and
mov
dec
shrb
add
pop
mov
fsubl
mov
and
pusha
mov
mov
iret
fcoms
fildl
jno
jecxz
pop
shll
push
pop
lods
fdivp
dec
mov
sbb
add
mov
cmp
sub
sub
xlat
push
adc
cmp
stc
std
mov
or
and
mov
js
xchg
sbb
push
jno
push
mov
arpl
mov
aam
or
test
ja
stc
mov
jmp
add
adcl
idiv
inc
sub
jnp
popa
fcomip
mov
out
repz
jmp
aaa
aaa
idiv
js
std
pop
sub
pop
insl
fisubl
mov
xchg
ret
lods
mov
cmp
fiadds
in
cmp
and
aam
stos
xor
ret
ret
movsl
or
sbbb
jg
sbb
rclb
jecxz
sahf
fsubrl
into
fidivs
adcl
mov
cmp
not
in
adc
out
dec
xchg
js
fistl
daa
fmuls
jmp
jmp
and
xor
insb
xlat
sbb
clc
ss
lcall
insl
or
push
add
in
or
pop
sub
lret
cmc
in
add
jle
cmp
int
mov
dec
imul
cmc
shll
out
fs
pop
ret
adc
fldpi
scas
inc
jmp
into
insb
inc
cld
push
jp
mov
push
inc
add
xchg
into
mov
adc
mul
xor
idivb
repnz
inc
inc
out
mov
scas
add
fmuls
gs
movsl
shr
sahf
xchg
xchg
xchg
adc
sbb
jge
push
pop
push
and
test
xchg
ds
cmp
push
add
scas
xchg
xor
add
into
xchg
sbb
nop
mov
push
and
adc
xchg
call
fdivrs
inc
inc
insl
sti
out
popf
dec
out
aad
pushf
sahf
inc
repz
xlat
test
ss
jbe
xchg
fcomi
or
int
rcll
sub
cmp
loopne
push
into
out
dec
xor
push
cs
es
outsw
cmpsb
mov
inc
lcall
mov
pop
test
mov
repnz
out
lds
cmc
inc
mov
lret
test
daa
pop
mov
ficompl
cmp
pop
scas
scas
add
xchg
mov
pop
cmp
divl
pop
push
mov
out
mov
xor
stc
sahf
mov
mov
xchg
addr16
push
mov
or
shr
enter
pushf
xor
sar
dec
xor
aaa
cmc
push
iret
cmp
adc
sub
xchg
xchg
add
adcb
fucomi
lds
icebp
in
icebp
lahf
xchg
jmp
jmp
scas
add
in
ss
fnstenv
or
adc
adc
nop
xor
stc
int3
sbb
dec
lods
stc
mov
inc
jle
dec
sbb
inc
andl
lahf
sub
cmp
cmp
sub
push
sarb
gs
sub
or
xor
sub
mov
stos
mov
inc
mov
ds
push
inc
lods
or
jo
mov
pcmpgtb
fimull
pop
testb
rcrb
sub
mov
pop
mov
mov
xchg
call
adc
gs
fldl2e
inc
add
pop
mov
lcall
sbb
push
int3
cmc
mov
popf
mov
sahf
pushf
push
xchg
mov
push
sahf
ss
sbb
adc
in
shlb
ljmp
mov
cmp
clc
daa
xchg
pusha
lret
jno
mov
loop
imul
clc
stos
xor
mov
dec
fsub
je
inc
fdivs
sub
jae
roll
les
mov
lcall
mov
call
popa
lret
jns
inc
xor
xorb
or
fbstp
cmp
mov
mov
and
xor
sbb
jae
pop
mov
inc
cmc
or
lods
pop
out
sub
sbb
inc
xor
dec
mov
fidivrl
inc
testl
in
jbe
xchg
daa
jl
xlat
testl
lds
mov
cmp
hlt
mov
inc
aas
sub
pop
xor
mov
xor
sbb
jmp
xchg
mov
mov
out
xor
xor
lret
fiadds
jp
xchg
or
cmpsl
jg
pop
popw
dec
aad
add
adc
imulb
clc
adc
pop
mov
nop
push
cmp
out
cmpsl
and
lcall
lock
in
push
dec
in
movsb
js
adc
inc
leave
andb
bnd
jbe
inc
inc
in
xchg
jb
fldcw
inc
jbe
mov
cmpsb
je
jno
fs
adc
mov
stos
xor
mov
imul
push
push
leave
shl
inc
inc
shll
scas
hlt
bound
pop
in
mov
cmp
test
ss
sub
pop
cwtl
adcb
loopne
scas
mov
out
sub
mov
movsb
dec
mov
out
jae
and
adc
inc
lret
inc
xor
into
adc
cmp
stos
dec
mov
push
xor
xor
jno
insb
in
jge
mov
jmp
scas
and
cmc
push
dec
and
fwait
dec
call
cli
repnz
call
cli
lcall
and
or
cld
pusha
cmc
loop
pop
repnz
addl
xor
adc
fildl
lods
rcr
rcr
pop
addr16
pop
cmpsb
pop
loop
std
popf
jmp
cmpsl
pop
sub
add
cld
int3
js
dec
dec
lods
cld
stos
push
icebp
clc
cli
dec
mov
adc
sti
push
jo
jle
xchg
ror
vpaddb
stos
sub
push
mov
pop
shlb
outsl
fwait
pop
and
fcmovnb
and
push
lret
cmp
insl
fs
mov
out
addr16
xor
pop
fwait
mov
sub
imul
mov
dec
inc
pusha
je
pop
in
mov
and
gs
lcall
fdivl
scas
adc
daa
cmp
adc
jno
je
popa
shll
adc
div
mov
jnp
stos
and
int3
push
fldcw
and
cmp
into
push
jb
or
xchg
shll
xor
mov
popa
adc
mov
mov
push
lea
mov
testb
cmpl
mov
jecxz
mov
mov
mov
mov
inc
ret
in
dec
lret
dec
inc
ljmp
sub
or
dec
pop
or
mov
pop
xchg
dec
jmp
arpl
ret
xchg
push
in
push
sbbl
rorl
adcb
popf
sub
and
xchg
imul
dec
int
rcl
shll
mov
jne
xchg
mov
dec
mov
loope
inc
mov
xlat
lods
cmp
pop
stos
daa
lcall
pop
ret
jb
adc
jg
xchg
mov
lods
xor
shrb
inc
rcll
aas
dec
inc
sti
outsb
decl
movsb
mov
pop
adc
pusha
hlt
add
aam
popa
imul
add
fcmovne
pushl
mov
pushl
jno
cmp
cwtl
dec
cmpl
out
mov
loop
inc
add
subl
inc
and
sti
jle
xor
repnz
stc
ss
repz
push
mov
popa
dec
pop
sbb
pop
or
loopne
fs
pop
sbb
dec
ret
xchg
dec
les
ja
pusha
add
hlt
lahf
insb
jge
incl
mov
and
push
enter
and
sub
push
pop
pop
xor
stc
mov
xchg
loop
push
push
mov
mov
ret
or
xor
cld
pop
loop
sub
mov
fstl
test
cmpb
shrb
neg
cmpsl
scas
loop
adc
sbb
fdivr
repnz
out
aad
test
jle
imulb
mov
xor
dec
notb
adc
sbb
sahf
aas
jg
mov
loop
loop
push
adc
cwtl
pop
aaa
jl
xor
inc
in
pop
fs
mov
adc
lods
lret
sbb
not
and
adc
and
xchg
mov
adc
pop
ret
cmp
dec
inc
out
sarl
in
fwait
mov
and
stc
inc
adc
inc
mov
xchg
mov
call
jg
int
scas
jae
adc
and
out
or
mov
hlt
adc
bound
fcmovnu
iret
add
pushf
bound
lcall
dec
mov
cwtl
movsl
add
into
push
aam
movsl
test
dec
pop
into
sub
inc
adc
sub
pop
andl
jnp
ljmp
leave
sub
sub
jnp
int
add
mov
ret
mov
push
mov
xor
adc
inc
jge
dec
mov
xchg
leave
xchg
out
pop
xchg
loopne
stc
nop
cld
cmp
nop
mov
sbb
or
mov
subb
in
adc
add
imul
jns
bound
ljmp
fiaddl
outsl
dec
mov
divb
and
bnd
inc
cmp
rcll
jno
call
cltd
push
push
test
pushf
sbb
ret
shl
xchg
scas
jmp
lret
or
sarw
dec
jb
test
popf
mov
pushfw
push
inc
andw
fwait
mov
cmovo
and
jno
dec
pop
std
movsl
sub
in
inc
sub
lods
push
mov
jge
mov
shll
aaa
sti
fisubl
and
jmp
stos
je
iret
adc
inc
push
pop
popa
stos
cmp
ss
push
cld
fwait
imul
hlt
imul
dec
mov
xorl
rcrl
pop
iret
mov
pop
loop
xchg
mov
les
mov
cli
imul
sahf
ss
adc
popa
mov
xchg
outsl
xchg
mov
flds
mov
stc
outsb
sbb
push
mov
mov
xchg
xchg
sbb
or
mov
jmp
iret
hlt
xchg
inc
xor
sub
inc
ljmp
out
xlat
aaa
imull
and
daa
test
insb
imul
ffreep
iret
lret
mov
test
out
jb
xchg
inc
mov
ljmp
mov
and
inc
loop
dec
les
cmp
cmpsb
in
pop
and
mov
insl
aam
arpl
das
inc
popl
inc
nop
jle
lods
sbb
or
mov
loopne
scas
xchg
push
sbb
mov
pop
mov
mov
clc
ds
icebp
js
pusha
shrl
movsl
and
outsb
arpl
subb
ljmp
int3
mov
iret
mov
sub
add
out
loope
imul
xlat
xchg
xchg
inc
dec
jl
mov
mov
fstpl
movsb
ljmp
cmpsb
gs
or
sub
cmp
mov
mov
pop
mov
int3
iret
movsl
popf
into
push
aas
adc
insl
mov
fimuls
adc
test
pop
xchg
out
add
out
pop
push
mov
call
mov
repz
adc
stos
mov
cmp
mov
mov
sbb
test
bound
pop
or
pusha
in
fsubs
cmp
mov
inc
xor
mov
sub
mov
mov
xor
mov
lds
inc
sahf
jp
popf
call
jg
lds
sbb
jmp
add
enter
lahf
push
push
dec
jge
inc
lea
test
inc
xor
push
lcall
dec
scas
sti
testb
cltd
xor
int
push
lea
in
lahf
ss
out
testl
repz
in
xor
adc
aaa
cli
pop
sbbb
inc
inc
aas
outsl
aaa
xor
scas
fcom
outsl
out
outsl
mov
or
sub
dec
adc
mov
cld
or
stos
mov
add
fldcw
xor
or
in
idivl
push
aaa
push
pop
mov
loop
lods
inc
andl
add
je
mov
aas
neg
mov
aas
daa
lret
pop
adc
pop
out
jnp
pop
out
fs
or
std
and
dec
pop
jmp
mov
bound
mov
bnd
sbb
xchg
paddsw
dec
test
push
stos
push
pop
cmp
rorb
aam
call
pop
add
push
andb
add
dec
fs
repz
cwtl
jmp
daa
popf
sbb
xchg
jno
push
inc
sub
sub
cs
mov
mov
cmpsb
fdiv
dec
sarl
fidivs
insb
testl
imul
push
pop
fs
xor
ds
adc
jmp
int3
xchg
addb
sbb
xchg
jne
hlt
enter
xor
lcall
pop
and
add
mov
xchg
je
push
js
lret
ret
fnstcw
jg
sbb
movb
andb
test
and
push
andl
or
cmp
mov
xor
loope
dec
dec
cmp
aas
fistl
xchg
adc
xchg
mov
mov
sbb
loopne
push
jns
fdivs
jns
imul
into
cmp
xor
dec
dec
mov
add
popa
xor
cmp
pop
rorb
sbb
insb
test
or
jns
mov
fistpl
lock
aam
mov
insl
or
sub
ljmp
and
xor
push
inc
js
sbb
lods
jge
xor
mov
mov
add
in
and
adc
js
out
insb
out
push
adc
xlat
int3
mov
mov
das
aas
xchg
mov
xchg
sub
mov
icebp
sbb
in
push
fs
shlb
dec
xchg
imul
sub
jb
into
dec
in
or
lret
inc
push
sbb
cmp
xor
adc
mov
pop
ljmp
mov
push
loope
dec
jle
cmpsl
dec
sbb
enter
cmp
cmp
or
stc
mov
cmp
ret
mov
mov
jmp
test
mov
js
andl
shlb
orb
pop
aad
inc
cmc
jmp
mov
popf
addr16
arpl
sub
pop
ficoms
pop
inc
enter
das
dec
out
sar
xchg
loopne
or
mov
dec
in
test
aaa
mov
fs
push
inc
jecxz
jo
xchg
xlat
sbb
lcall
mov
jne
push
cmp
push
fisubl
dec
and
mov
push
add
stos
add
out
jl
movsl
gs
outsb
xor
jno
push
ds
pop
aaa
pop
out
aam
es
or
data16
add
fisttpl
add
and
shrb
jle
scas
ret
jp
mov
mov
sbb
mov
rcrl
jae
out
sub
xchg
xchg
mov
scas
aaa
stos
and
mov
jno
iret
cli
xor
in
mov
mov
stos
adc
jbe
dec
cmpsb
subb
cmc
jecxz
aad
xor
mov
pop
test
sub
dec
sbb
scas
stos
pop
lods
ja
test
das
or
addr16
add
jecxz
push
mov
fists
inc
hlt
testb
jno
out
jnp
push
mov
xchg
mov
pop
pushf
pop
insb
mov
out
pop
jmp
inc
sbb
in
adc
xchg
pop
mov
lcall
jnp
dec
add
adcb
imul
add
dec
dec
lock
out
mov
add
pop
xchg
into
mov
mov
mov
ret
pop
popf
push
in
dec
aam
push
dec
push
lret
push
int3
cli
mov
pop
jns
xchg
mov
mov
fistps
jae
dec
sbb
xchg
jmp
jo
loopne
sbb
aad
xchg
jne
and
adc
sub
push
stos
mov
je
pop
pusha
repnz
fdivs
add
xchg
dec
out
add
mov
lods
jns
mov
lods
dec
sbb
popf
add
adc
mov
cmp
mov
into
xor
push
inc
insb
push
vcvtsi2sdl
mov
xchg
fdivs
xor
mov
lcall
cmp
mov
dec
std
cmp
in
and
adc
mov
or
push
stos
repnz
inc
into
and
out
or
data16
ss
jnp
addl
jbe
ja
in
pop
nop
addr16
xor
inc
addr16
scas
push
add
push
pextrw
sahf
add
leave
pushf
fcompl
jbe
jno
fwait
scas
aam
inc
movsb
pop
adc
bndldx
xor
test
pop
mov
fidivl
popa
push
pushf
fwait
cld
dec
push
imul
jne
inc
cs
or
bound
or
jle
mov
cmp
jge
mov
in
enter
movsl
sub
clc
stos
icebp
or
movsl
scas
sub
cmp
icebp
cmpsb
ljmp
enter
jb
lret
cwtl
inc
dec
adc
in
xchg
mov
out
int3
mov
out
add
pop
sub
leave
jb
pop
jg
jb
mov
cmc
iret
es
popa
push
andl
xor
fidivs
add
test
int
fcomps
pop
int3
jle
sub
sahf
fldt
lret
icebp
sub
pop
loopne
sub
xchg
js
add
lea
dec
cmp
xchg
cmp
mov
dec
cli
pop
insb
cmp
das
jle
cli
push
fdivp
test
ljmp
pop
cmp
jmp
xorl
mov
mov
in
xorl
cmp
push
mov
mov
call
scas
ror
scas
ret
dec
leave
fs
insl
pusha
mov
xor
mov
rorl
mov
mov
stc
mov
sub
push
xor
push
dec
and
cmp
adc
aaa
rcrl
hlt
stc
fwait
xchg
inc
xchg
cmp
inc
cmp
xor
adc
mov
insl
mov
and
pusha
xor
adc
fistpll
add
mov
js
jae
mov
mov
sbb
inc
testb
push
add
test
insl
mov
notb
outsl
fs
mov
mov
stc
fmull
jns
mov
cltd
je
pop
outsl
leave
cmp
aam
pop
icebp
sub
cmovnp
dec
mov
mov
movsl
jmp
test
jbe
and
jae
mov
inc
shll
and
nop
xor
mov
pop
cs
movsl
pop
inc
sbb
ss
hlt
or
inc
pop
pop
fisttpll
mov
mov
aam
lds
and
iret
pop
or
adc
int
cli
fldl
adc
adc
loop
jge
bswap
push
sbb
or
and
inc
dec
shl
add
adc
pop
iret
push
js
push
xlat
sbb
dec
loopne
adc
add
lea
int3
loop
lods
pop
ficoml
cmpsl
dec
jbe
jge
in
mov
mov
outsl
ljmp
push
jo
lods
outsl
add
jle
push
jle
movsb
das
mov
data16
sub
xor
lods
mov
xchg
xchg
es
xor
movsb
inc
in
imul
mov
in
mov
xor
jbe
inc
aad
shll
ds
scas
lds
pop
mov
test
outsl
iret
adc
push
add
scas
push
xlat
sub
out
add
inc
test
sub
jg
insl
or
mov
jno
pcmpeqd
dec
cmpsb
rclb
in
inc
int3
jle
mov
jnp
push
mov
mov
mov
xchg
push
mov
sahf
je
or
inc
mov
pop
push
pop
lret
xor
fprem
xor
imul
cltd
sub
insb
push
or
insb
leave
fnsave
cmp
mov
cld
inc
imul
out
int3
sub
data16
inc
mov
iret
in
int
cmp
test
neg
sub
pop
mov
add
es
xlat
leave
adc
mov
loope
insl
fwait
pop
test
out
pop
jns
repnz
lds
loop
test
ljmp
pop
or
std
xchg
loopne
sbb
jmp
lods
jmp
test
adc
pop
mov
fst
mov
pop
fisubrl
push
outsl
pop
loop
add
push
mov
jl
sub
jb
pop
xor
mov
adc
mov
xchg
out
fcmovne
test
ja
add
ret
rolb
push
push
push
jmp
enter
jae
insb
jne
jmp
into
test
fwait
int3
rorl
sub
or
and
pop
repz
xorb
aad
sbb
pop
lea
arpl
aam
or
hlt
pop
or
xchg
and
push
cs
adc
insb
add
push
test
pop
jbe
es
sub
jmp
loop
cmp
mov
shrl
adc
xor
and
add
xor
gs
push
adc
jmp
push
jns
jmp
pop
mov
addb
push
mov
inc
insl
xor
jno
xchg
inc
sbb
cld
xor
xor
nop
aam
xlat
loope
sti
push
xchg
jnp
repnz
adc
inc
jl
add
out
xchg
shrb
fsubp
push
sub
mov
adc
pop
mov
faddl
int
mov
in
mov
sbb
mov
in
ret
cmpsb
maskmovq
mull
hlt
add
movsb
and
add
nop
dec
add
sbb
ljmp
sub
dec
stos
push
xor
nop
insb
push
xor
mov
push
and
sti
adc
pop
cmp
daa
decl
aas
mov
cmp
inc
jnp
or
mov
fucomi
xchg
repnz
popl
mov
shl
mov
shll
xchg
arpl
decb
pop
add
add
sub
lds
push
inc
clc
dec
loope
mov
lret
pop
out
loop
jg
adc
popf
jmp
xchg
loopne
lret
push
je
adc
aas
je
sbb
cmp
imul
push
dec
mov
push
out
mov
inc
pop
test
test
sbb
adc
shl
jecxz
negb
neg
inc
jns
testl
repnz
mov
je
pushf
push
dec
adc
dec
or
sub
mov
or
xlat
sbb
notl
in
sbb
clc
rcrl
cmp
inc
inc
adc
xor
icebp
popf
xchg
shll
xor
in
mov
add
sub
rorb
jne
fs
cmp
add
gs
jecxz
and
xchg
mov
jne
jmp
pop
sub
add
int3
and
fst
mov
daa
ja
fdivrl
mov
rclb
imul
dec
test
or
test
enter
jl
iret
faddp
loop
lods
jmp
iret
outsl
incb
into
dec
repnz
orl
jp
adc
mov
add
push
pusha
stos
sbb
mov
mov
insl
dec
cmp
xchg
test
sub
adc
mov
xchg
add
mov
lret
repz
dec
ficompl
mov
je
adc
daa
clc
daa
cmp
lods
ret
cmpsb
scas
push
cld
jp
sbb
or
rcr
add
xchg
rorb
fmull
xchg
cltd
addr16
xor
mov
and
movl
repnz
jmp
jnp
orl
pop
out
mov
movsb
sub
pop
fcomps
cltd
jae
inc
add
js
repz
jno
cmpsb
dec
inc
lds
insb
sub
cwtl
add
or
notl
hlt
xor
sub
sbb
addr16
scas
mov
push
les
pop
out
pop
cltd
fisttpl
outsb
mov
mov
sub
and
roll
sub
inc
pushf
push
daa
ret
iret
icebp
xchg
and
outsb
and
inc
push
sub
mov
aaa
cltd
icebp
ds
xor
push
pop
jge
outsb
in
inc
sbb
and
movsb
and
cmp
xor
xchg
jae
rclb
xor
movsl
inc
sbb
rcll
arpl
loop
ljmp
push
cmpsl
pop
mov
jbe
push
pop
out
je
adc
mov
ljmp
fcomip
repnz
push
repz
xchg
xchg
in
jl
add
xorl
xchg
lea
push
mov
mov
ljmp
push
inc
cmp
pop
adcb
inc
sbb
cli
movsl
xchg
xor
and
push
or
outsb
pop
faddp
jg
addr16
jno
out
xchg
int
adc
out
xchg
insl
jle
into
shlb
in
inc
scas
out
and
sbb
rcll
insb
out
sub
pushf
mov
es
sbb
adc
xor
mov
clc
lret
push
fs
cwtl
dec
sbb
popf
ret
int3
xor
outsb
jne
sub
add
inc
dec
call
cmp
xor
or
imul
mov
cmc
dec
pop
in
sbbb
xchg
dec
mov
and
in
lcall
inc
ja
sbb
out
insb
pop
and
in
push
xchg
out
cwtl
jmp
dec
in
xor
lods
nop
addl
aaa
sbb
sub
add
dec
in
daa
jno
cmp
or
imul
psubb
jmp
fnsave
pop
sbb
adc
lea
pop
test
iret
and
dec
pop
and
sub
sti
push
sbb
pop
push
mov
stos
or
and
addb
ret
and
mov
or
cmp
xchg
dec
or
fs
roll
mov
push
add
inc
adc
xchg
mov
push
adc
out
sbb
push
sub
icebp
gs
mov
sub
mov
loop
insl
test
push
sbb
dec
ret
ja
pop
int
sbb
xchg
cmp
ror
mov
leave
loopne
dec
loope
loopne
adc
push
dec
and
push
jecxz
xchg
ja
clc
jmp
sbb
cld
xor
cwtl
cmpsb
push
cld
push
jae
in
mov
mov
pusha
out
add
in
mov
or
sbbb
add
mov
jecxz
pushf
jge
hlt
add
aad
sbb
inc
cmp
pop
insl
add
fldl
inc
movsb
iret
test
daa
ds
movl
sbb
rol
jmp
or
leave
pop
orl
hlt
dec
lret
div
std
adc
icebp
popf
pop
div
xchg
cmp
mov
subl
pop
mov
aaa
cmp
aaa
std
mov
aaa
jecxz
lds
sbbl
cld
popa
add
sub
outsl
addb
rolb
adcl
and
add
enter
xor
mov
test
jns
pop
push
loopne
mov
cli
mov
icebp
fidivrs
adc
repz
adcl
or
movsl
pop
xor
jl
pop
pop
in
fs
push
test
mov
out
lcall
xor
out
mov
movsb
mov
dec
or
outsb
ret
inc
pop
mov
sarl
pop
add
cmpsl
in
pusha
nop
push
ret
pusha
push
mov
mov
pop
fildl
inc
nop
imul
sbb
or
pop
inc
shr
fnstenv
sub
fdivr
nop
mov
scas
mov
enter
push
fisubrs
jmp
cltd
aas
hlt
pop
testb
addr16
ljmp
cmc
sarb
test
cmp
push
push
sbb
jb
sbb
adc
mov
and
bound
mov
negb
in
shlb
pushf
pop
imul
add
shrb
cmp
mov
fs
rcll
jo
loope
notl
fnstenv
push
test
leave
adc
cmp
lret
test
sub
test
sub
pop
sar
jmp
daa
mov
adc
test
mov
inc
dec
mov
pop
pop
scas
xchg
push
pop
shr
enter
xchg
js
cmp
pop
lea
mov
push
jge
push
jp
mov
outsb
enter
cmp
leave
jl
inc
shrw
push
pop
xor
inc
out
ds
ja
ret
negb
in
xor
mov
dec
loope
inc
or
lea
scas
add
mov
mul
fistps
ss
and
add
movsb
stos
or
xlat
sub
cltd
push
fnstcw
arpl
data16
jae
sahf
ds
add
nop
loopne
lcall
mov
mov
testb
xchg
outsb
mov
jnp
sti
sbb
jge
xor
mov
sub
subl
mov
and
mov
or
loop
push
mov
es
sbb
sub
arpl
pop
adc
loop
inc
arpl
stos
dec
hlt
je
loope
fidivl
into
fdivs
xor
lcall
xlat
inc
mov
movsb
enter
outsl
or
mov
es
sub
mov
test
inc
in
loope
hlt
in
fs
xchg
xor
mov
lds
and
dec
or
ret
sub
or
xor
loope
popa
push
inc
clc
mov
out
add
roll
mov
add
jns
jmp
fs
sub
int
or
pop
jecxz
or
sub
sbb
mov
fs
popf
ret
cltd
xor
cmp
xchg
pop
gs
xchg
push
daa
xchg
push
dec
ficomps
xor
fidivrl
lret
pop
gs
xchg
mov
xchg
jg
mov
adc
fisttpl
out
int3
addr16
xchg
sub
xor
push
xacquire
dec
jl
stos
push
xchg
ss
popa
push
arpl
outsl
lea
jmp
cmp
push
aam
stos
add
int3
lds
push
test
mov
out
dec
xchg
sarl
sub
fnstenv
nop
or
ss
push
mov
xchg
add
xlat
imul
lahf
pop
pop
push
test
cld
push
pop
and
jl
xchg
xor
outsb
adcb
pop
or
sti
xchg
dec
mov
repz
push
mov
testb
mov
fildl
lret
imul
daa
aam
jecxz
lea
jl
jo
test
cmpsb
cmp
pop
sub
cli
imull
in
imul
or
gs
scas
and
lret
fistpl
addr16
sbb
repnz
mov
fcomps
in
cmpb
out
mov
dec
jbe
pop
js
push
jl
dec
mov
or
push
inc
inc
shlb
fdivl
pop
out
aam
popf
add
push
daa
clc
push
jge
out
mov
mov
ss
sub
je
nop
adc
mov
xor
rcll
mov
mov
int3
imul
lcall
add
jne
and
test
ret
ret
push
cmp
push
mov
sbb
lret
ja
ljmp
lock
mov
aaa
mov
cmp
arpl
cwtl
mov
inc
sarl
pop
cmp
or
out
test
xor
and
mov
mov
or
dec
push
out
sub
int3
outsl
mov
inc
cmp
mov
fistl
push
xchg
js
add
dec
out
mov
insb
cmp
inc
loope
dec
jg
loope
jnp
sub
xor
sbb
sbb
xor
cmc
mov
fstpl
in
dec
test
cmp
inc
xor
loope
xor
into
push
push
jmp
cmpsl
push
add
notl
dec
push
push
popa
xchg
popf
adc
js
aad
xor
xchg
inc
mov
aas
cmc
xlat
sub
nop
cmc
ret
jg
icebp
outsl
pop
rcll
and
rcl
rolb
int
inc
sbbb
fwait
cmpb
stos
xor
not
ja
insb
xchg
xchg
jmp
xchg
sbb
je
xor
outsb
sbb
sub
or
xchg
fcmovnbe
inc
cmc
mov
cld
mov
test
test
imul
int3
insb
out
popa
nop
lods
iret
and
insl
xor
test
in
cmc
subl
ret
aas
out
ret
push
push
in
test
sbb
out
psllq
add
int3
fdivs
popf
mov
daa
loope
lds
pop
lcall
in
popf
pop
mov
sub
sub
shrl
out
ds
cmpsb
push
adc
mov
jae
or
ret
cmp
arpl
push
and
xlat
pop
fnstsw
divb
sub
test
cli
dec
xchg
dec
sbb
les
adc
call
daa
add
scas
outsl
dec
ds
outsl
adc
fs
scas
mov
mov
stc
fcompl
iret
pop
sti
mov
jne
ds
int
cmc
add
mov
xchg
scas
call
insl
mov
pop
adc
enter
add
mov
ficoml
int
push
mov
xchg
xchg
pop
inc
sbb
jmp
stc
ds
dec
pop
xchg
fcomp
iret
push
movsb
adc
mov
lret
adc
jb
fsubr
insb
sub
stos
dec
add
push
lods
sbb
xchg
cmpsb
mov
pop
cmp
cmpsl
movsl
jg
loop
add
or
fisubrs
lds
lods
or
cmc
mov
mov
adcl
or
dec
cmp
ljmp
lods
xchg
les
jo
pop
sarl
es
xor
mov
add
cwtl
dec
loopne
fldenv
dec
pop
orb
int
xchg
pop
push
push
cmp
mov
xchg
mov
pop
inc
and
add
cmp
push
shlb
ds
mov
cmp
xor
sahf
or
hlt
pop
add
inc
sub
push
sti
popf
clc
jb
jno
cwtl
jle
sub
ret
cmp
fisubrs
stos
rcll
adc
ljmp
mov
cwtl
lret
shlb
push
addr16
std
push
repnz
and
push
xor
mov
adc
xor
mov
mov
pop
jl
shlb
mov
into
add
or
mov
and
sub
lods
adc
jo
mov
shr
ljmp
pop
roll
xor
fwait
xor
sub
call
push
mov
push
and
xor
jge
xchg
out
sub
sarl
sahf
cs
xor
mov
jo
popw
notb
inc
jo
test
pop
push
xor
push
es
sbb
dec
call
in
je
mov
aaa
sti
push
inc
lahf
xor
in
mov
lods
add
push
clc
xrelease
push
push
lret
jne
int
insb
and
xchg
adc
and
inc
andps
arpl
and
adc
xor
push
stc
cmp
and
inc
xchg
daa
cmp
or
and
aaa
xchg
loop
pop
fcompl
inc
mov
dec
iret
push
lock
inc
lds
les
mov
pop
xchg
inc
jb
jge
insb
dec
push
out
sti
iret
xchg
orb
jbe
push
adc
test
jp
and
gs
divb
jp
sbb
push
cmp
jecxz
cld
dec
aas
cmp
add
sub
nop
mov
cltd
pop
mov
adc
mov
xor
and
pop
inc
inc
adc
pop
fs
lcall
sti
xchg
sub
daa
lods
inc
jns
lcall
jnp
or
push
adc
in
add
adc
inc
cs
push
gs
stos
std
outsl
jb
loop
mov
push
xor
push
cmp
lds
mov
xchg
cltd
testb
jecxz
pop
test
mov
sub
inc
cs
les
ljmp
push
ret
adc
mov
outsb
cmp
adc
outsb
cmp
in
mov
sbb
push
pop
dec
shl
pop
xchg
xor
cmpsl
hlt
push
aad
xchg
je
jp
fsubs
lea
pop
popf
sub
inc
test
lret
sbb
in
lret
femms
and
adc
fldenv
aam
popf
cmp
pop
push
jae
sbb
jo
xchg
lock
jg
movsb
push
test
rcl
sti
fistps
xchg
int3
shrb
sub
jmp
push
xor
fcmove
in
sahf
gs
and
push
add
jp
xchg
cwtl
cmc
mov
inc
icebp
adc
push
clc
ljmp
mov
in
cmp
std
cmp
mov
popf
out
hlt
add
mov
lods
loop
pop
jns
inc
imul
pop
outsl
das
gs
cmp
aad
mov
nop
cmpsl
dec
mov
fwait
daa
addb
and
or
mov
mov
popa
repnz
enter
icebp
bound
loope
fistpl
andb
pop
jle
mov
push
shlb
dec
pop
mov
push
xchg
jle
ss
cltd
insl
je
jo
mov
push
push
andl
xchg
ficoml
mov
xchg
test
in
add
outsb
lcall
das
arpl
into
int
push
fiaddl
push
jns
mov
sbb
mov
fcoml
fcmovbe
js
scas
jb
or
ja
jo
ds
and
inc
inc
push
repz
repnz
push
movntq
jle
sbb
icebp
cmp
cmp
std
pop
or
in
or
fwait
stos
mov
or
rcrl
or
cmp
push
mov
out
pushf
mov
sbb
sbb
ss
push
inc
pop
sbb
mov
shrl
jae
jge
fstl
push
jnp
jbe
loope
jge
jb
adc
pop
and
xchg
popf
mov
rcrl
mov
add
add
in
stos
fsubl
add
out
mov
mov
dec
out
cli
jle
or
fcmovnb
fidivrl
xor
mov
stos
outsl
cltd
outsb
and
test
jle,pn
push
inc
push
fwait
sub
rclb
int
sub
scas
orl
adc
mov
out
and
mov
int
das
test
test
aam
aam
test
mov
scas
inc
iret
inc
adcb
pop
ja
xor
xchg
inc
ds
mov
xor
jae
push
xor
test
mov
shlb
out
shlb
dec
imul
mov
inc
inc
loope
push
ljmp
jnp
jb
adc
add
divb
fsubrs
leave
fdecstp
aas
cmpsb
jle
push
add
and
adc
push
pop
mov
xchg
add
sti
scas
and
std
loop
xlat
sub
mov
mov
rcrl
gs
inc
cmpl
bnd
out
jge
sbbl
lret
dec
daa
mov
xlat
xor
inc
xlat
int3
imul
cltd
xor
mov
cmc
jo
push
pop
in
imul
outsb
jo
or
repz
inc
bound
out
shll
pushf
mov
push
jp
sub
xor
adc
sub
sbb
mov
push
lahf
dec
or
mov
daa
pop
push
add
repnz
call
ret
je
jno
dec
aaa
sbb
sub
xor
lret
inc
push
jnp
or
or
lret
cmpsb
jae
push
mov
std
dec
mov
dec
in
fisubrs
push
arpl
cmp
ret
add
lcall
into
insb
sahf
xchg
jno
in
or
lods
jmp
xchg
fnstcw
insl
lods
test
data16
insb
call
mov
cmp
xor
pop
sub
push
push
pop
mov
jmp
cmp
fwait
insl
jno
stos
cmp
mov
into
stos
lods
adc
daa
inc
les
jecxz
and
pop
sahf
pop
cwtl
in
subb
adcb
inc
pusha
test
incl
popl
sub
add
pusha
cmp
rorl
adc
lea
fidivrs
les
mov
jmp
or
adc
fwait
sub
bound
jg
sbb
mov
fsts
pop
inc
les
dec
cmpb
in
inc
sub
in
adc
dec
and
jo
repz
stc
push
pop
sub
cld
popa
mov
cmp
loop
outsb
les
shlb
cltd
daa
stos
add
pop
lock
or
cmp
shl
xchg
sarl
xor
push
sub
xchg
or
mov
and
fs
or
into
loop
pop
xchg
and
jno
adc
out
xchg
push
lret
addr16
jmp
repnz
pop
mov
orl
sub
and
or
mov
add
insb
xor
and
rorb
fnstenv
inc
stc
call
es
test
xor
pop
push
mov
fdivs
xchg
cltd
popa
push
test
sbb
dec
icebp
loopne
loop
insb
xchg
pop
cld
pushf
iret
lods
dec
shr
jae
mov
pop
push
add
mov
pop
stos
sahf
pop
cmp
dec
push
hlt
pop
jecxz
sub
das
xor
shll
in
push
lcallw
subl
xchg
jns
xor
mov
test
les
inc
jbe
mov
pop
xchg
dec
enter
pop
sbb
xlat
enter
jmp
rol
pop
mov
repnz
push
jae
jle
pop
add
std
call
adc
fwait
or
frstor
jo
lret
ss
into
clc
or
ret
cmp
outsb
xchg
rolb
or
add
jo
add
inc
movsl
or
hlt
push
iret
scas
wbinvd
pop
sahf
dec
test
pop
cltd
adc
hlt
mov
fdivrs
incb
cmc
gs
scas
mov
addr16
out
test
add
inc
xorb
mov
lds
inc
rclb
imul
mov
sarl
shrl
daa
repnz
mov
lcall
mov
push
xchg
mov
jge
jb
add
das
pop
or
pop
test
jne
push
stos
shrb
dec
adc
jge
aam
pop
push
sarb
subb
mov
icebp
pop
fdivrs
clc
std
sbb
mov
mov
das
outsl
xor
je
enter
movsb
pop
ljmp
xor
lahf
pushf
push
or
jno
icebp
push
add
aam
iret
jns
jge
pop
ja
xlat
xchg
in
fsubrp
adc
sub
sbb
inc
pcmpeqd
push
add
repnz
and
add
ficoms
adc
sti
lods
inc
int
popf
stos
lret
mov
pop
xor
cld
hlt
mov
add
lret
xchg
rcrl
push
addr16
mov
jno
or
in
leave
incb
dec
jmp
sbbb
push
xor
mov
subb
mulb
test
jae
cmp
repnz
popf
ss
xorb
ja
cmp
cmp
out
add
mov
cs
mov
fnsave
xor
stos
cmp
hlt
mov
mov
bound
adc
fwait
jge
jmp
mov
xchg
cmp
icebp
scas
mov
xchg
adc
lcall
push
pop
sbb
fmull
test
mov
fwait
mov
imul
js
or
mov
push
fldlg2
cs
jae
iret
sub
and
mov
xchg
ret
lcall
mov
xor
dec
mov
sbb
or
and
push
dec
pop
jecxz
pop
or
ficomps
imul
xchg
mov
lock
sub
and
push
pop
pushf
mov
mov
jge
nop
clc
or
aad
xchg
aam
xchg
int
fnstenv
das
test
adc
inc
outsl
adc
out
xchg
ljmp
fsubs
cmpsb
push
push
fimuls
fisubl
sbb
bound
iret
sbb
xor
xchg
mov
inc
push
inc
out
imul
ret
sahf
xor
add
xor
loop
test
frstors
sbb
mov
testl
icebp
enter
pop
xlat
ja
mov
push
mov
divb
inc
sbb
mov
cmp
mov
clc
lds
jmp
push
jmp
xchg
push
dec
rcrl
mov
insb
js
sbb
imul
loop
addr16
idivb
mov
push
outsl
dec
cmc
add
roll
mov
sbb
stc
arpl
cs
jno
cmp
push
cli
mov
jo
inc
pop
popa
orl
orb
shrl
mov
pushf
rcrl
das
cmpsl
movsb
ljmp
cmp
xor
ss
iret
add
bnd
jg,pn
lahf
rcr
shlb
repnz
outsb
aad
shlb
jnp
pop
scas
jae
adc
fxch
movsl
testl
add
insb
cmpb
sub
in
and
push
cmc
xchg
xor
add
or
xchg
sti
cmpl
ret
loop
mov
loopne
loopne
and
xchg
pop
test
or
add
stos
scas
arpl
pop
mov
mov
sub
and
fmuls
mov
mov
stc
sti
fwait
cmp
repnz
test
fcmovu
and
out
cmp
das
jno
pop
movsb
jae
loopne
insb
fs
pop
sub
adc
rcrl
insl
inc
pop
ss
int
repz
push
lret
loop
in
fistpl
dec
xchg
scas
sbb
pop
repnz
push
popa
pop
mov
mov
ss
mov
mov
iret
imul
xor
lcall
cmpsl
push
cmp
mov
inc
out
lcall
aam
cmp
mov
push
cmc
cmp
mov
xorl
and
sub
cmp
sbb
jns
enter
sub
lock
jnp
pushf
pop
push
ss
sub
subl
dec
mov
aam
cli
ljmp
cs
ss
aas
into
xor
imul
dec
mov
mov
les
lods
xchg
add
inc
call
imul
loope
mov
outsl
cmp
outsl
mov
jl
jae
scas
sbb
rorb
sbb
jg
std
mov
sbb
inc
push
push
mov
int3
psrld
repnz
mov
push
dec
adc
shr
mov
inc
mov
jne
add
jle
mov
js
sub
push
ja
loope
cltd
add
sti
inc
fcoms
test
adc
rcrl
mov
adcb
cli
in
pushl
test
rcrl
dec
clc
ret
sbb
leave
mov
mov
loop
daa
inc
push
lret
inc
sub
add
xchg
mov
jl
test
insb
bnd
pushf
jle
mov
mov
pop
lea
test
negb
fst
iret
ds
mov
loop
imul
jb
sub
insb
repnz
jl
popf
test
xchg
or
inc
push
or
xor
in
push
cmp
mov
xor
dec
dec
inc
bound
xor
shrl
mov
dec
ret
in
sub
cmp
les
jmp
mov
jae
sbb
repnz
loope
pop
sbb
add
sbb
add
sbb
mov
cmp
pop
xchg
fsubrl
jg
cmp
mov
sub
mov
or
pop
test
mov
pop
daa
xchg
xchg
dec
psrlq
rorl
jne
scas
pop
mov
mov
test
xchg
mov
push
add
sub
loope
sbb
sbb
dec
into
test
mov
ss
adc
fs
xchg
push
mov
cwtl
jbe
aad
dec
adc
arpl
jbe
jmp
sub
jb
nop
ljmp
jnp
in
sub
pop
xchg
out
fldt
lret
outsl
out
push
int3
xlat
inc
out
adc
rol
pop
fdivs
jno
dec
or
fwait
cmp
push
loope
arpl
repz
dec
push
in
push
cmp
jns
fwait
xchg
gs
lcall
sub
xlat
inc
jp
cmpsl
jbe
loop
lock
shlb
popa
imul
push
xor
les
or
pop
sub
fiaddl
mov
adc
mov
mov
in
mov
js
mov
pop
mov
mov
lret
subl
nop
adcl
and
lea
sbb
jge
push
scas
mov
loop
mov
pop
jne
pop
mov
mov
xor
mov
or
xchg
addr16
rcll
lods
sti
mov
push
adc
loop
cmp
mov
or
adc
jo
inc
adc
repnz
dec
flds
adc
test
mov
or
fucomip
popa
in
scas
jbe
mov
cmp
in
mov
fs
flds
and
iret
rolb
cmpsl
push
xchg
xchg
aaa
adc
mov
and
out
fadd
cmp
dec
mov
into
cmp
push
xor
sub
xlat
je
mov
push
in
push
inc
test
and
push
push
jecxz
out
mov
fnstsw
pop
clc
jnp
xchg
lahf
jns
pop
aaa
cmp
sahf
xchg
lcall
adc
in
push
popa
cmp
push
sub
outsb
int
and
adc
xor
and
stos
lea
and
popa
pusha
andl
les
xor
xor
pop
sub
loop
sub
insl
lret
fwait
sub
xchg
popa
scas
push
mov
int3
mov
je
mov
and
fcmovne
nop
inc
sbb
pop
jne
jne
clc
adc
adc
loopne
xchg
mov
pop
and
gs
shl
test
ja
or
push
add
cld
fwait
aad
and
jne
sarl
xchg
inc
and
scas
fildll
repnz
jg
inc
sbb
jge
lret
cmp
fdivr
dec
cmp
mov
orb
or
scas
sahf
mov
mov
std
fstpt
mov
adc
inc
xchg
mov
addr16
inc
call
ds
and
rclb
out
outsl
push
add
sahf
enter
or
cmp
lea
dec
push
mov
dec
jae
xor
add
out
gs
adc
movb
lods
xchg
test
daa
push
daa
pushf
adc
js
popa
push
sbb
mov
add
insl
hlt
int3
jb
mov
sbb
and
aad
into
cmpb
loope
mov
and
filds
insb
adc
pusha
mov
mov
in
call
xchg
ja
cmp
les
in
mov
pushf
outsl
lock
test
jl
sti
pop
rclb
in
add
rorl
add
cvttps2pi
adc
out
add
or
jb
out
lret
push
int3
or
scas
fldcw
pop
mov
jb
pop
jae
cmc
dec
cmp
test
ret
ret
add
adc
dec
test
popa
fildll
loopne
loopne
dec
nopl
jbe
outsl
dec
frstor
jge
xor
stos
iret
or
xchg
push
pop
addr16
jbe
sahf
fcompl
mov
cmp
cs
dec
inc
mov
dec
or
mov
nop
jne
shll
pop
xchg
popl
ja
in
shlb
cli
sbb
mov
sbb
jns
mov
sub
jno
jae
sbb
shlb
bnd
mov
mov
push
jmp
dec
in
mov
cmp
int3
or
cmp
mov
push
pushf
rorb
sub
aad
sub
sbb
iret
ds
ds
popaw
lret
jo
stos
xor
push
insb
divl
fdivrs
dec
out
or
xlat
enter
xlat
push
sbb
sub
pop
inc
fcompl
testb
lds
hlt
je
or
out
ret
xor
cwtl
das
jb
les
or
test
shlb
popa
loope
popaw
mov
inc
adcb
push
insb
in
xchg
and
jmp
mov
addb
push
mov
shlb
add
fistpl
mov
mov
cli
scas
sbb
xchg
std
sub
cmp
test
decb
push
ljmp
jp
flds
sahf
mov
inc
inc
sub
arpl
pusha
fisubl
lds
push
push
fwait
mov
push
cmpsb
inc
ja
pop
sbb
test
pop
fwait
imul
adcl
in
in
jg
lcall
scas
mov
mov
sbbl
sbb
inc
pop
out
dec
decl
pop
movsb
mov
cmp
imul
lods
mov
arpl
mov
push
sbb
jg
lea
sbb
jo
dec
push
sub
ja
rorl
push
push
aas
cmp
dec
jp
pop
cwtl
movsl
xchg
jae
imul
imul
mov
sub
jmp
adcb
daa
pop
scas
push
stos
lret
jae
js
in
dec
negb
jne
loop
cmc
pop
jmp
xlat
sub
mov
mov
lea
add
and
das
pop
xchg
adc
cmp
pop
dec
in
out
fcompl
inc
mov
shrl
sbb
pop
cs
fcomps
pop
cmc
stos
lcall
fmuls
pop
jl
pop
xor
in
ljmp
mov
cli
loop
sbb
and
or
mov
cmp
ja
push
int3
xchg
xor
pop
std
repz
mov
jg
enter
stos
pop
pop
imul
mov
clc
jne
and
cld
xlat
pop
cmp
rcrl
push
movsl
leave
push
test
leave
iret
shlb
ja
adc
adc
jl
pop
jp
loopne
mov
sbb
insb
xchg
pop
loope
lods
sub
push
in
aaa
lock
sub
ss
mov
pop
sub
cmp
jg
lods
jge
popf
outsb
jne
cmc
xorb
mov
jg
push
xchg
lret
je
movsb
std
pop
jns
leave
mov
or
cmp
ror
popa
cmp
sub
pop
pusha
test
mov
sub
fnstcw
jecxz
sub
xor
scas
jo
jo
negl
or
mov
jmp
les
mov
les
pushf
mov
subb
je
adc
ljmp
push
stos
jp
fs
mov
and
fdivrl
sbb
into
jg
cltd
icebp
loope
jmp
mov
mov
jle
imulb
mov
mov
mov
xchg
jp
mov
and
jge
mov
pop
sbb
xor
in
sbb
dec
nop
adc
pop
pop
mov
jno
jecxz
dec
adc
pop
sbb
pop
shr
mov
fdivl
lret
lods
ror
out
insl
divl
in
das
or
mov
mov
adc
mov
xlat
movsb
dec
test
xlat
mov
scas
lahf
fsts
es
lods
aas
inc
fists
mov
xchg
lret
repz
add
idiv
cmpl
enter
lret
inc
mov
xchg
push
jne
dec
dec
cmp
add
lcall
flds
pushf
stc
mov
pop
mov
sub
mov
mov
xchg
subl
test
push
in
or
push
inc
fs
mov
cmp
mov
cld
movsb
mov
outsb
push
je
sahf
inc
jmp
popa
clc
and
or
push
cmp
add
cmp
and
mov
pop
ljmp
das
inc
fbld
cmpsl
rclb
cs
dec
mov
shll
or
jns
mov
ret
and
hlt
mov
pop
jne
pop
fsubp
cmp
adc
adc
sbb
inc
mov
cmpsb
pop
xchg
xchg
es
cmp
lcall
or
inc
mov
lcall
add
jnp
jbe
jecxz
dec
in
push
inc
lret
pushf
dec
push
adcl
jecxz
clc
jle
inc
mov
lahf
xchg
lods
jg
xor
and
sbb
xor
pop
sub
loopne
bound
mov
stos
stos
pop
ja
sbb
jecxz
jp
inc
sub
dec
lea
pop
cltd
mov
push
add
add
xor
dec
jnp
in
test
scas
lahf
into
fwait
arpl
ret
mov
dec
nop
aad
push
jmp
adc
sub
adc
fisubrl
fistps
jb
gs
int3
adc
xchg
dec
jb
adc
mov
xchg
xchg
ljmp
cvtps2pd
dec
push
or
sbb
cmp
inc
sub
inc
sbb
mov
add
sbb
lret
push
pop
std
sbb
push
mov
dec
cmpsb
je
testb
idivb
pop
jbe
les
testb
xor
inc
mov
pop
imul
pop
scas
mov
lcall
sub
lret
sbbb
inc
adc
nop
mov
roll
aad
inc
cli
ja
sbb
jb
jb
jle
and
loope
inc
jne
mov
mov
xchg
aas
outsl
in
jae
sbb
jb
or
xchg
sbb
negb
sarl
sbb
mov
mov
cmc
fbstp
dec
jg
mov
push
ds
mov
inc
jecxz
je
scas
jp
repnz
add
pop
mov
movsb
mov
inc
mov
shrl
andb
pushf
dec
cmpsl
pop
mov
aaa
mov
out
mov
jmp
inc
and
dec
dec
push
sub
ret
push
xchg
insl
arpl
test
pop
xchg
sbb
xchg
das
mov
and
pop
imul
adc
inc
dec
mov
dec
mov
mov
jnp
nop
xor
mov
aaa
mov
cmc
inc
mov
lock
roll
mov
pop
dec
and
xor
xor
mov
push
test
add
jge
sarl
jle
xor
adc
mov
arpl
jp
insb
xlat
mov
mov
and
mov
scas
cmp
jb
rol
in
dec
lret
shl
xchg
loopne
popf
imul
cmp
push
rcrb
js
in
ss
movsl
xor
outsb
xor
repz
xchg
add
test
sub
repz
in
lret
lods
adc
cwtl
cmc
outsl
mov
mov
pop
int3
dec
and
jns
add
lahf
cmc
mov
sbb
or
out
movsb
adc
lret
jge
cli
xchg
loop
pusha
mov
and
jp
inc
xlat
lret
subb
bound
jle
dec
and
or
pop
aas
sbb
mov
fwait
daa
jecxz
cli
jae
xor
sub
dec
jno
out
fidivl
mov
mov
testl
xor
fwait
inc
dec
movsl
mov
mov
mov
mov
push
or
je
insb
pop
mov
out
fsubl
stos
inc
inc
push
mov
fsub
lock
xchg
inc
call
in
jne
es
popl
xchg
clc
jne
xchg
jno
mov
cmovns
sahf
dec
mov
push
sub
jp
insl
imul
icebp
cmp
ss
xor
ficomps
mov
lret
mov
std
inc
lods
shlb
xchg
mov
cmp
pop
jg
or
aaa
ficompl
loope
sbb
dec
xor
cltd
popa
enter
sti
lds
out
and
aad
cli
sub
adc
push
mov
adc
xchg
rolb
inc
icebp
les
xlat
xor
stos
std
leave
mov
sub
push
push
aas
ret
imul
and
out
sarb
popa
rcrb
scas
mov
sub
cltd
sbb
fmuls
xchg
jo
addr16
or
in
lods
jnp
daa
fwait
inc
fiadds
jecxz
jne
mov
mov
inc
out
dec
dec
ret
add
aam
add
out
pop
cmpsl
and
cmp
das
imul
adc
push
push
or
mov
shll
mov
dec
arpl
add
mov
mov
cwtl
jmp
and
sarb
shrl
sbb
mov
dec
mov
cs
jb
inc
enter
movsb
inc
jnp
jmp
repz
lds
fildll
dec
mov
cltd
std
xchg
test
lock
push
call
es
mov
imul
jb
add
xor
cmp
in
mov
push
inc
xchg
fmuls
outsl
xchg
jns
nop
fnstsw
adc
ja
out
push
test
sbb
sahf
test
call
push
mov
and
sub
sub
pushf
in
and
lahf
das
btr
mov
sbb
js
dec
popf
rorl
enter
stos
mov
pop
jb
iret
imul
icebp
clc
int
sub
push
sub
sbbl
int
or
pusha
sub
cmp
dec
mov
insl
notl
test
or
or
insl
stos
mov
daa
inc
pop
aad
jae
cmp
insl
test
jno
lret
mov
nop
test
les
and
jo
outsb
add
inc
clc
xchg
test
pop
andl
inc
clc
lret
and
push
xlat
pop
scas
sbb
xor
xchg
ret
xchg
dec
les
mov
test
jge
or
jle
inc
mov
mov
mov
dec
cmc
orl
xor
pusha
dec
mov
mov
dec
xchg
insl
mov
inc
mov
fstpl
daa
ds
dec
jg
sub
mov
sub
mov
jmp
ficomps
iret
sub
adc
mov
mov
leave
push
sbb
mov
hlt
jp
in
cmp
pop
push
rcll
cli
pop
out
fcomp
int3
daa
add
in
mov
jo
int
sarb
imul
push
push
ja
jae
sbb
lea
or
sbbb
inc
or
inc
push
enter
cwtl
mov
rcr
scas
filds
mov
arpl
mov
push
sub
push
adc
adc
xor
stos
fiadds
xor
jne
negb
add
xchg
fildll
inc
ja
das
fimuls
mov
push
jmp
and
cwtl
xor
xchg
xlat
jnp
dec
and
mov
xlat
ret
sbb
cmc
mov
or
or
jb
jg
rorb
dec
push
push
sbb
xlat
fwait
ss
repnz
std
les
shll
hlt
loopne
bound
hlt
mov
mov
test
mov
cmp
cli
sbb
jno
mov
int3
cltd
sbb
and
bnd
clc
sub
add
out
mov
insb
xchg
ds
push
mov
out
cs
xchg
pop
and
cmpsl
lods
mov
mov
add
xor
mov
add
lds
xor
and
lea
cs
aam
and
sub
clc
jb
sbbb
pop
jg
icebp
mov
ja
test
push
or
add
lds
jne
je
aad
dec
popa
mov
jp
sbb
sub
push
lcall
adc
lods
cs
mov
in
xchg
xchg
jecxz
cld
imul
fnstcw
fmull
in
int
shll
inc
sbb
pushf
push
sahf
hlt
mov
and
fildll
sbb
or
lods
xchg
in
jns
int3
pop
cmp
mov
dec
dec
idivb
cmp
repnz
mov
cmp
lret
imul
pop
les
cmp
lcall
jl
mov
pop
inc
or
pop
jae
jae
js
dec
loope
pop
scas
adc
je
adc
in
inc
xchg
jnp
cmp
mov
cmp
jae
ds
xor
out
loopne
in
insl
xchg
aam
mov
das
xchg
rcrb
pusha
movsb
sahf
dec
sahf
cld
mull
jmp
xor
dec
loope
cmpsl
shll
xchg
not
jge
jmp
lods
and
loop
xlat
push
sub
mov
mov
rorb
add
add
enter
or
je
test
imul
mov
mov
mov
adc
push
push
or
push
into
cmp
int3
in
outsb
insl
xchg
xorl
add
mov
idivl
repnz
cwtl
mov
and
jl
pop
push
xor
fcomp
jle
lahf
les
pop
fildll
pop
loope
dec
mov
sub
xor
addr16
bts
pop
stos
cmp
xchg
cmp
cmpsl
test
popf
icebp
xchg
xor
cwtl
pop
jmp
das
jne
ret
loope
add
mov
rcrb
cltd
repnz
cmp
or
push
pop
daa
xchg
aaa
pop
cs
loop
mov
pop
mov
adc
or
pushf
sub
test
cwtl
xor
mov
scas
dec
out
mov
sbb
mov
mov
outsb
xlat
xor
addb
jae
pop
jo
in
add
stc
fcmovnb
std
xor
ja
inc
fimuls
jnp
push
jmp
inc
test
rcrl
mov
fisttpl
dec
test
xorl
or
push
lcall
mov
enter
or
icebp
js
std
xor
mov
jae
jle
jb
mov
orl
js
das
adc
in
ljmp
insb
pop
iret
aas
push
popf
mov
add
aaa
scas
nop
gs
mov
aam
inc
cmc
lods
fdivl
sub
repz
xchg
in
xchg
push
cmp
popa
mov
rcrb
lds
insl
pop
mov
fistpl
pop
push
bound
test
mov
out
or
mov
test
and
mov
in
and
add
loope
mov
cmp
xchg
ss
rorb
call
sarl
rorl
mov
fmuls
out
shr
mov
aas
in
les
push
and
daa
cmp
test
xlat
aaa
sbb
jecxz
jg
xor
jbe
orb
jge
popf
jb
dec
mov
outsl
and
mov
xchg
add
dec
sub
xor
bound
loope
jp
jne
jnp
cmp
lea
cwtl
cmp
shll
mov
jb
dec
push
mov
mov
jle
hlt
rcll
sub
jb
sahf
cmp
and
xchg
mov
dec
or
add
and
pusha
xlat
jl
push
xor
cmp
inc
xchg
sbb
jmp
fistpl
adc
popf
push
push
push
xchg
test
jbe
sti
iret
push
ss
cltd
jne
adc
int
roll
xchg
hlt
xchg
add
cmpl
sti
cmc
popa
add
cmp
xchg
inc
jmp
jg
mov
loopne
int
inc
daa
and
cmp
in
jnp
out
push
jne
xchg
inc
adc
aam
les
out
dec
xchg
cwtl
mov
mov
push
cmc
xchg
add
mov
pop
pop
adc
je
pop
jb
sbb
icebp
clc
and
pop
jne
fldl
data16
inc
mov
addl
inc
outsb
mov
push
and
popf
test
incb
int
movsl
adc
popf
ljmp
lret
inc
jl
or
push
and
mov
dec
rcrb
lret
jo
inc
mov
fists
sti
cli
out
dec
loopne
insb
cli
icebp
mov
loop
xor
jae
sub
sbb
mov
adcb
push
jle
dec
cmp
mov
jmp
test
ret
pop
cmp
sbb
adc
das
mov
fwait
add
and
movsl
cmp
sbb
scas
jecxz
add
push
in
sbbb
icebp
xchg
push
cltd
inc
jp
push
mov
sbb
stos
fwait
xor
mov
mov
or
addr16
cmp
adc
xchg
dec
jg
fidivs
in
std
mov
add
fidivs
add
pop
iret
call
pop
das
xor
adc
mov
lods
mov
jb
popa
push
sub
loope
cmp
pop
mov
inc
shl
movsl
lds
fadds
rcrl
jge
incb
mov
mov
jne
mov
cmpsl
and
fcompl
and
cs
pop
ljmp
pop
mov
jge
sbb
call
lahf
stos
push
fidivs
mov
fcoms
lret
ja
xlat
mov
fcomp
fidivrl
xor
out
inc
ret
loop
stos
xorb
and
fdivrl
lods
sahf
pop
mov
inc
cmp
repnz
sbb
push
rclb
loopne
in
inc
mov
ss
sbb
xchg
testb
movsb
mov
cmp
sbb
sbb
mov
aam
add
sbb
push
stos
dec
xchg
pop
cmp
and
push
int
dec
daa
push
cmp
adc
inc
xor
test
jnp
or
mov
sub
adc
xor
in
out
cmpsl
divl
pop
mov
xchg
jmp
mov
xor
stos
dec
and
fstl
jae
mov
sbb
mov
leave
std
subl
call
outsb
xchg
aad
daa
fndisi(8087
mov
das
or
ljmp
ror
cmpsb
icebp
mov
imul
xchg
mov
dec
xchg
and
cmp
and
insb
repz
jbe
pushf
adc
sub
repz
and
lods
into
fisubs
push
je
cmc
mov
xchg
mov
in
call
repnz
fistpl
hlt
inc
sbb
mov
aad
aad
dec
pop
idivb
test
lahf
push
mov
and
cmpsb
jb
mov
push
pop
aam
loope
push
out
mov
xor
lds
jl
dec
push
and
sub
in
movsb
xor
lock
fs
mov
lock
mov
repnz
ds
xchg
fldl
mov
imul
and
inc
push
movsb
push
push
pop
notl
movsb
fstpt
xchg
mov
xor
cwtl
insl
and
icebp
movsl
lods
mov
push
cmp
int
push
dec
cmc
cli
and
gs
xor
dec
inc
pop
pop
or
pop
dec
dec
jl
xor
out
rcrb
xlat
test
cld
movsl
in
pop
cld
pop
mov
test
or
or
mov
inc
ret
out
leave
jmp
jae
mov
inc
leave
fsubr
and
inc
cmc
inc
subb
xchg
dec
nop
fwait
inc
mov
mov
pushf
mov
lret
fistpl
mov
leave
cmc
mov
aas
addr16
cltd
or
test
dec
lock
insl
rcrb
loope
adc
cmp
fsubrl
aas
shll
aaa
pop
sbb
fwait
insl
stos
adc
inc
vmread
loop
imul
lock
jg
adc
xor
cmpsl
or
lods
inc
inc
mov
and
mov
sbb
cmpsl
iret
jmp
mov
sbb
stos
fwait
loopne
in
lea
push
pop
aaa
lock
iret
inc
push
or
fistpl
sbb
jp
sbb
sub
imul
cwtl
mov
push
add
je
cmp
ljmp
leave
sbb
inc
cmpsb
lahf
addl
rcrb
cwtl
popa
out
fisttps
movb
or
imul
iret
adc
and
pushf
shll
sub
insl
dec
sbb
pop
mov
mov
dec
sti
dec
aas
clc
jge
dec
xor
test
sbb
lods
aad
sar
adcl
xor
mov
stc
cli
nopl
leave
insb
or
xchg
data16
adc
xor
push
iret
dec
js
rep
gs
lock
test
mov
sbb
jle
imul
add
call
mov
mov
imul
jmp
lods
jmp
xlat
inc
sub
mov
xor
movsl
push
daa
int3
sbb
xchg
fildll
loope
mov
scas
jle
cmp
mov
cmpsb
jg
movsb
jbe
mov
in
jmp
cmp
mov
dec
orl
mov
das
ror
and
push
cmp
roll
loopne
xchg
xchg
in
pop
mov
hlt
out
pop
int
inc
iret
int
in
fimuls
and
je
aam
pop
inc
xchg
enter
push
add
xchg
mov
aam
fs
add
pushf
cltd
mov
addl
movsl
xchg
js
lea
cs
mov
ljmp
mov
outsl
push
xlat
lds
mov
adc
dec
sbb
out
sti
cmpsl
out
adc
xchg
cmp
sbb
xchg
mov
je
loope
rorb
enter
lcall
jae
addr16
in
and
inc
scas
ljmp
rclb
iret
divb
or
xor
pop
insb
push
ljmp
push
mov
dec
cld
outsb
fsubr
pop
repz
mov
push
dec
movsl
mov
sti
xor
fyl2xp1
push
cltd
fwait
lock
cmp
jno
inc
xchg
shl
shrl
add
sub
jns
lods
sub
fwait
mov
loopne
push
in
cmc
xchg
xchg
push
xchg
push
pop
or
or
not
push
out
outsb
int3
inc
dec
aam
inc
imul
lds
pop
rorl
arpl
cmp
mov
loop
mov
dec
rolb
lock
xchg
je
es
cmpsb
scas
and
jo
fdivl
and
shll
add
push
cli
leave
cmp
mov
aaa
fisttpll
xor
sub
push
jl
push
lods
popf
add
sub
xchg
call
cmp
jb
jb
enter
test
lds
cwtl
sub
mov
iret
or
test
xchg
or
call
nop
sub
mov
lret
stos
mov
leave
pop
fnsave
mov
fistpll
and
test
je
adc
pop
jbe
fisttpl
jge
sbb
cs
push
imul
mov
in
pop
outsb
adc
nop
fsubrl
aas
fstpl
xchg
pusha
adc
xchg
loop
cmp
pop
nop
stos
lods
jp
and
jmp
addr16
ljmp
scas
adc
inc
push
rcll
dec
pop
bound
jnp
ds
inc
cmc
int3
jb
jns
xchg
add
push
mov
mov
sub
imul
cmpsl
int
cmp
pop
xor
popf
jb
fwait
mov
xchg
das
loop
push
inc
mov
xor
cltd
clc
push
sub
int
mov
mov
or
pop
std
fidivs
cltd
fadd
loopne
xchg
arpl
int
push
add
mov
mov
cld
dec
inc
sahf
arpl
mov
nop
adc
lods
xchg
mov
call
xor
and
xchg
out
scas
rorb
dec
pop
loop
test
lock
jno
mov
xchg
rol
mov
hlt
jmp
das
push
push
pushl
fimuls
loopne
adc
scas
add
xor
jmp
or
out
movsb
dec
outsl
loopne
jbe
repz
mov
pop
cmp
outsb
and
inc
inc
pop
fldcw
dec
test
inc
and
pop
popf
mov
nop
sahf
xchg
adc
jmp
arpl
popf
inc
stos
inc
adc
addr16
popa
xor
ds
or
mov
sbb
pop
add
mov
aad
enter
sbb
adc
or
pop
add
outsl
cmp
jo
jg
cmc
xchg
and
cld
sub
in
xlat
jge
mov
push
es
cwtl
fdivl
data16
sahf
fnstcw
jns
mov
xchg
rcl
xor
sub
or
ret
ljmp
addr16
mov
int
jecxz
in
in
inc
daa
or
fcmovnu
cmpsb
jp
push
xchg
lock
jl
inc
push
pusha
mov
inc
out
pushf
jne
xchg
cmp
xorl
inc
hlt
jl
xchg
fistps
add
or
or
add
cld
jno
pop
int
scas
jle
mov
sub
jge
sub
sbb
ret
lds
sub
xor
jg
loop
adc
push
mov
or
ss
nop
sub
into
dec
mov
cmpsb
inc
shr
sbb
dec
icebp
sbb
or
stc
out
ss
mov
leave
dec
setns
pop
adc
dec
dec
mov
lea
xchg
add
daa
stc
sub
jae
inc
or
push
out
mov
push
and
mov
cmp
jno
fdivrp
mov
sbb
aas
xor
mov
push
xchg
sbb
cmp
mov
push
addr16
jge
in
fucomip
sbb
mov
insl
roll
mov
ja
push
adc
mov
mov
pop
push
andl
xchg
mov
xor
movsl
ret
mov
jbe
pop
add
lods
lock
inc
inc
pop
sahf
std
loopne
mov
mov
aad
rclb
xor
mov
fwait
mov
sub
lea
jp
pop
in
sbb
sub
scas
dec
fcoml
aam
mov
daa
adc
idiv
out
dec
pop
lret
testl
loopne
dec
cmp
ss
insl
sub
bound
mov
jns
cmp
add
repnz
dec
push
adc
leave
pop
push
std
stos
imul
inc
vcvtsd2si
mov
jg
movsb
sub
mov
dec
inc
pop
aam
jno
repz
adc
cmp
sbb
or
add
clc
pminub
outsb
xchg
insl
mov
cld
gs
jecxz
rcr
sbb
mov
outsb
pop
sbbl
push
stos
hlt
push
push
into
mov
mov
sbb
dec
pop
insb
add
ja
in
ss
pop
sub
or
subl
ret
pop
sbb
rclb
jbe
adc
les
cmp
xchg
out
cmp
ret
negl
loopne
into
mov
cld
sbb
daa
aaa
repz
movsl
and
and
dec
push
in
int
faddl
sbb
stc
push
push
and
sbb
sbb
mov
dec
inc
or
sti
lea
dec
push
mov
inc
shl
loopne
icebp
jbe
xorl
cwtl
push
or
cmc
stc
jns
outsl
repnz
inc
divb
cltd
push
lock
push
aaa
cs
and
cld
enter
add
test
cmpsw
int3
inc
mov
sub
ss
cmp
dec
outsl
out
push
int
icebp
add
add
cli
fldcw
bound
outsl
sbb
js
add
rolb
adc
push
dec
sub
inc
subb
movsb
out
xchg
stos
mov
jb
fcomps
in
sahf
mov
in
sbb
or
insl
jae
adc
pop
dec
and
sahf
inc
jg
push
cmpsl
xchg
clc
imul
popa
sub
sbb
mov
xchg
xor
jbe
xchg
xor
cmp
mov
cld
das
or
pop
stc
les
mov
inc
mov
rclb
aas
jp
jp
xlat
cltd
sbb
cmpsl
cmp
addb
mov
mov
aad
fidivrs
sub
hlt
pop
stc
push
lods
mov
nop
lea
mov
inc
fildll
loope
out
daa
and
adc
loop
jne
inc
push
shll
mov
pushf
cmp
mov
jae
xchg
pop
adc
gs
faddp
fwait
jno
pop
addr16
ss
jb
push
ss
insl
nop
fwait
pop
sbb
cmp
sti
adc
sbb
mov
add
pop
adc
in
mov
xor
test
sbb
data16
mov
mov
fildll
sbb
mov
dec
jno
aam
es
mov
addr16
pop
xor
shr
dec
inc
and
jo
mov
add
add
sahf
pop
mov
loope
fidivl
dec
sub
cmp
dec
test
lahf
mov
loope
add
test
dec
jg
outsb
ds
gs
adc
movsl
and
addb
and
push
and
pop
pop
gs
test
adc
pop
ljmp
arpl
ja
fsubrl
scas
sbb
cwtl
cli
clc
fmull
fmull
jg
push
xchg
xchg
outsb
stos
ss
out
rcrl
fs
or
lds
test
les
les
mov
pop
repz
in
lea
loope
test
and
jl
cmp
xchg
push
sbb
mov
sbb
sub
add
movsl
pushf
xchg
push
mov
mov
xchg
fiaddl
or
sti
data16
scas
cmpsl
pop
pop
cmc
xchg
inc
imul
pop
loop
xchg
and
pop
or
mov
and
fdivl
inc
cmp
inc
pop
pop
mov
xchg
inc
mov
in
push
cmpsl
cli
popf
sti
or
out
cld
pushf
cmp
in
push
mov
std
in
dec
and
scas
and
mov
jl
shrl
les
push
popf
jne
push
xchg
xchg
sbb
jp
insb
inc
sbb
int3
sub
inc
pandn
notl
sti
add
in
mov
insl
mov
aas
ret
loop
inc
std
jbe
mov
sub
rcl
add
cmc
std
pop
lock
sbb
cld
dec
xor
stc
movsb
outsl
push
orl
mov
push
or
shl
push
repnz
mov
push
mov
cltd
test
jno
and
test
int3
or
mov
push
loopne
or
test
idivl
popf
lret
adc
or
bt
stos
sbb
int3
mov
dec
cmp
popa
xchg
xchg
xchg
in
imul
std
jge
xor
sbb
in
fisttpl
dec
stc
clc
in
mov
idivl
lods
xor
lea
mov
mov
push
test
push
jmp
adc
cmc
fsubrl
out
adc
fistpll
insb
fdivrs
xchg
adc
push
fmul
jne
mov
jmp
inc
sbbb
cmp
mov
es
fsubs
dec
js
xchg
push
xchg
sbb
xor
adc
negb
push
xor
in
cmpb
mov
stos
xor
test
inc
jle
lds
lods
push
adc
fnstenv
cmc
ret
popf
shrl
add
stos
inc
xchg
mov
xchg
mov
movsl
pop
lcall
test
enter
lods
scas
fidivl
xchg
push
les
pop
sub
jns
dec
js
mov
popf
ja
xor
js
pop
pop
xlat
and
loope
add
inc
stos
daa
fdivl
mov
loope
cmp
add
ret
jle
adc
hlt
pop
sbb
push
dec
sbb
xchg
xor
rcll
gs
or
jecxz
or
mov
mov
mov
in
sbb
fs
sub
xchg
xchg
das
outsb
test
pop
push
xchg
test
xorl
sbb
inc
xor
mov
sbb
xchg
xchg
fwait
clc
jb
sub
mov
test
test
add
jle
fsub
lahf
je
aad
push
rcl
push
in
ljmp
fsubrs
cli
fisttpll
jl
mov
add
sbb
xor
call
in
imul
pop
pop
pop
sahf
xor
jmp
fdivl
mov
cmpl
mov
hlt
mov
add
xor
movsb
xchg
out
test
cmp
inc
je
scas
and
stc
cmp
push
repnz
int3
cmpsl
out
add
repz
add
lods
imul
jecxz
and
add
mov
je
mov
mov
in
inc
push
sbb
fwait
inc
mov
cli
add
mov
mov
lret
xor
adc
enter
dec
sbb
repnz
and
sub
mov
aad
jb
int3
inc
jae
ret
adc
xchg
pop
iret
enter
pusha
sbbl
and
dec
adc
adc
int3
dec
in
dec
lcall
int
popa
jne
push
push
inc
fisttpl
popf
jecxz
mov
push
test
movsb
adc
pop
sti
pop
or
rol
lahf
rcll
fbld
dec
mov
pop
jne
and
push
mov
mov
mov
fisttpll
mov
sub
xchg
inc
xlat
jns
xor
push
aad
cmpsb
negl
enter
jge
enter
add
mov
mov
pop
pop
dec
mov
addr16
push
repz
movsb
stc
push
cmpsb
adc
testl
push
push
inc
pop
mov
test
fsts
out
popf
add
add
or
or
mov
into
jb
jmp
and
fmulp
jge
inc
iret
and
xor
sbb
int
mov
cmp
jae
lcall
cwtl
fwait
and
sbb
stos
push
andl
mov
inc
daa
aas
push
push
jns
push
push
and
dec
mov
out
mov
in
inc
cmp
stos
fs
push
pushf
adc
cmp
mov
movsl
mov
orb
dec
xchg
push
push
subl
jl
aam
in
dec
sub
inc
and
in
cmc
gs
push
mov
and
pop
adcl
jo
loopne
pop
in
dec
mov
or
add
xor
push
shlb
mov
arpl
andl
repnz
or
lahf
cmp
out
leave
sub
lret
dec
mov
incl
sub
add
test
je
and
push
scas
and
xor
lret
pop
jns
popa
sbb
adc
mov
and
orb
aas
adc
arpl
in
sarb
mov
rcrb
jne
into
pusha
mov
cli
andl
adc
adc
inc
dec
mov
mov
icebp
mov
sbb
xor
rolb
dec
cmp
jmp
sahf
shll
sbb
fstpl
cmpb
add
ret
mov
add
fidivs
push
sub
daa
ficomps
mov
mov
rorl
mov
sub
mov
fwait
push
xor
out
stos
loop
inc
mov
cmpsl
add
das
test
jl
xor
add
mov
and
mov
xchg
jb
inc
adc
rdpmc
mov
test
out
adc
fcomps
int3
mov
fs
loope
daa
jbe
adc
outsl
xchg
sub
loopne
cmp
mov
and
subl
lret
push
pop
cmp
push
int3
fistl
aam
sbb
es
or
adc
sbb
mov
jmp
xchg
iret
pop
push
in
mov
lds
sbb
fsubrs
fmuls
jl
jp
cwtl
inc
pop
movsl
mov
xchg
gs
into
cmc
ss
jns
jne
ss
out
pop
add
scas
movsb
fnstsw
cmp
cli
add
mov
and
sbb
popf
mov
shl
mov
int3
push
jne
xchg
jp
adc
outsb
xor
stos
xor
mov
cld
ja
sbb
outsb
lea
test
mov
jns
out
inc
cmpsb
aas
push
or
sbb
repnz
mov
aam
lret
in
pusha
clc
push
rcrl
dec
arpl
rcrl
bound
mov
or
sub
add
iret
pop
push
inc
rcr
pop
mov
inc
jno
inc
cmp
cmpsb
pop
inc
ljmp
mov
xor
xor
test
movsl
push
mov
mov
sub
insb
or
out
orl
rorl
js
push
sbb
rorl
xchg
push
std
shlb
push
ficoml
ret
mov
rdrand
and
in
popf
icebp
or
insl
mov
movsb
test
or
cmp
mov
outsl
and
loopne
and
nop
aam
add
in
div
out
scas
xor
cltd
xchg
loop
cmp
addr16
inc
mov
test
imul
pop
stos
icebp
mov
out
sub
js
lret
iret
movsl
fwait
push
aam
loopne
sar
or
add
sbb
sub
jo
mov
movsb
inc
sub
enter
cmpb
leave
xor
sbb
sbb
loopne
cmpsb
mov
ja
loopne
and
cmpsl
rcll
repnz
mov
pop
cwtl
lock
stos
clc
cmp
pop
and
je
in
fnsave
xchg
pop
mov
inc
or
inc
cmp
inc
or
push
hlt
mov
movsl
fs
push
imul
cmpsl
mov
ret
inc
cld
mov
shlb
jmp
mov
xchg
cs
jnp
movsl
mov
inc
sbb
jns
ds
clc
pop
mov
fdivs
mov
in
xor
mov
cmp
jae
pop
pop
iret
xorb
cmpsl
sbb
sbb
fwait
sbb
lcall
push
jo
cmp
mov
stos
dec
std
lret
cmc
sbb
pop
jo
dec
orb
lds
mov
call
dec
lea
pushf
xlat
push
jnp
cmpsl
scas
ss
clc
jl
sub
xor
push
mov
insl
daa
test
popa
out
loop
dec
cmc
push
xor
das
lret
pushf
fwait
inc
add
push
outsb
in
icebp
loope
cmpsl
fs
je
cmpsb
inc
cs
aaa
in
loop
rorl
inc
or
popa
adc
scas
fcmovbe
icebp
mov
dec
xor
lods
leave
daa
adcb
dec
rcrl
repnz
mov
les
inc
xchg
arpl
shlb
mov
jg
loope
out
cwtl
fbstp
lahf
and
insb
mov
addr16
sub
mov
jb
sbb
scas
push
sbb
fs
int3
rorb
sub
or
icebp
add
out
test
or
mov
and
jp
xor
mov
fisubs
cltd
xchg
ret
sub
xchg
pop
in
jns
push
imul
cmp
test
repz
jno
clc
cmp
pop
and
in
pop
mov
shr
hlt
test
rcr
out
out
fcoms
mov
pop
xchg
and
cmp
and
in
les
mov
adc
xchg
add
pushf
cmpsb
sbb
mov
dec
inc
sub
movsb
inc
pop
pop
mov
ja
leave
movl
sbb
fstps
inc
pop
add
aaa
pop
mov
rcrb
lds
jno
pusha
mov
pop
jle
roll
inc
push
stos
cli
xchg
fwait
imul
mov
adc
and
mov
xchg
add
and
fisubs
xor
mov
dec
push
xchg
or
cmpsl
nop
mov
sahf
nop
mov
stc
add
mov
xchg
fisttpl
adc
shrb
imul
arpl
pushf
cmc
fisubl
push
sbb
sub
lock
jnp
lods
paddb
xchg
sub
or
sub
xorl
aaa
or
es
inc
inc
jecxz
xchg
sub
aam
es
push
adc
ja
pop
sub
cmp
xchg
js
mov
clc
jge
nop
hlt
fiadds
xchg
xor
push
push
or
dec
test
mov
ljmp
andb
jns
push
xor
add
pop
imul
stos
cs
aam
clc
sbb
dec
dec
sub
sbb
pop
js
xor
repnz
jmp
inc
sahf
dec
and
mov
jno
lock
out
mov
and
dec
fwait
xlat
xor
sbb
out
mov
push
dec
lret
push
inc
xlat
insb
lret
jge
fucom
xor
arpl
sahf
test
xchg
adc
rol
fimuls
out
jle
pop
loop
fldt
cmp
mov
sbbb
adc
add
jo
subb
add
push
inc
cmpsb
sub
adc
mov
fdivr
roll
and
add
ret
mov
xor
sub
test
inc
lock
les
or
push
add
jnp
mov
jp
repz
lea
lcall
fdivp
fbld
test
scas
push
decl
push
xor
and
bound
sub
xchg
or
fld
mov
and
mov
xor
sub
aas
mov
push
clc
dec
mov
jnp
mov
or
out
pushf
xor
ja
out
mov
test
jge
sbb
fisubl
leave
xchg
bound
jns
leave
lods
daa
scas
mov
in
mov
insb
xchg
or
into
pop
aaa
repz
push
xor
fidivrs
daa
or
fcoml
enter
loopne
rolb
loopne
xor
and
dec
mov
test
mov
cld
adc
pop
push
mov
pop
call
xchg
sbb
jo
xor
cwtl
add
cmp
clc
fisttpll
jnp
sbb
jl
in
fprem1
dec
sahf
popf
xstore-rng
cmpsl
pop
mov
cmc
and
dec
sub
mov
sahf
inc
imul
dec
andl
and
push
pop
adc
or
sahf
cs
xchg
sarb
nop
sbb
xchg
mov
pop
sub
sahf
mov
sub
arpl
sarb
scas
push
imul
xor
std
or
dec
ja
sarb
pusha
add
mov
sbb
adc
shrl
and
push
xor
add
sub
addb
push
fwait
mov
jl
and
repz
mov
dec
lock
imul
sub
scas
mov
cmp
push
mov
mov
push
mov
add
leave
mov
mov
add
sbb
fsubrs
into
push
js
in
scas
out
cwtl
adc
nop
xchg
mov
loopne
push
mov
popf
enter
add
dec
sbb
mov
xor
xchg
rep
pusha
cli
pop
xchg
aam
aam
xor
lret
or
push
addr16
pushf
jae,pt
pop
loop
inc
push
cmp
sbb
insb
lea
sti
cld
or
bound
ss
push
or
ret
sar
mov
mov
cmp
rcpps
mov
sti
icebp
sub
xchg
inc
addr16
adc
pop
shlb
xchg
xchg
sbb
pavgw
pop
popf
adcb
clc
ljmp
mov
scas
mov
das
outsb
push
add
push
int3
loope
mov
jmp
out
dec
xorl
ss
lret
in
inc
pop
xor
es
ret
mov
popf
cmp
jae
sbbl
cld
mov
insb
sub
jmp
mov
cmp
jne
sub
sbb
adc
outsl
lock
xchg
xlat
js
insb
adc
sbb
xchg
mov
stos
popf
mov
adc
jecxz
cmc
or
sbb
or
aad
sub
lret
cs
subl
in
adc
call
cli
mov
dec
je
repnz
dec
jnp
mov
and
pop
sbbl
sbb
xor
imul
pushf
cmp
pusha
mov
jg
pop
jnp
pop
out
dec
mov
stc
xchg
lock
jl
jno
dec
insl
pusha
push
xor
xchg
push
cs
int
je
sub
clc
cltd
lahf
dec
adc
lret
pop
add
cmc
add
xchg
aad
cmpsb
in
shll
pop
sub
or
repz
cmp
adc
mov
cmc
and
xchg
mov
add
je
pusha
flds
add
lcall
std
or
out
adc
or
test
pushl
jo
rorb
xchg
and
arpl
das
mov
stc
mov
int
pop
jmp
inc
lods
lds
xchg
pop
xchg
popf
push
or
enter
ja
cs
out
dec
cli
andl
in
sahf
orb
mov
popa
mov
js
mov
mov
je
jns
inc
mov
xor
inc
mov
outsl
sbb
or
das
stos
insl
lds
adc
andb
push
xor
adc
mov
in
mov
shl
jns
inc
sbbl
les
in
jbe
sub
lods
cmpl
inc
push
jb
fnstenv
xchg
add
or
repz
pop
lahf
movsl
cli
xchg
mov
js
rcr
inc
test
sbb
jg
xchg
mov
lret
add
fdivs
cmpsl
outsb
push
lea
add
dec
mov
mov
or
jo
js
jp
mov
adc
cs
cmovg
outsb
frstor
insl
int
mov
xor
mov
aad
fistl
mul
jmp
nop
and
test
das
mov
insl
or
lahf
cwtl
xor
icebp
or
cmp
mov
add
inc
push
lods
mov
incb
jecxz
adc
loopne
jmp
xor
mov
xchg
lahf
adc
sub
mov
xchg
push
mov
ret
xor
stc
add
lds
sahf
sub
inc
push
ljmp
cmp
dec
or
sbb
scas
jp
outsb
xchg
inc
add
cmp
mov
fstpl
sub
dec
inc
and
mov
sub
es
add
movsl
mov
mov
je
ja
into
lods
mov
lock
int
jp
cmp
mov
mov
pop
test
lds
ja
pop
out
imul
adc
cmp
fs
xor
jge
fstpl
mov
cmpsl
sub
xchg
and
lods
dec
rcrl
push
fcoms
mov
adcl
inc
lods
dec
adcl
xchg
pop
iret
scas
inc
inc
mov
or
decl
leave
cli
bswap
sub
test
jb
or
fistpl
add
and
add
fwait
xchg
out
or
repz
data16
hlt
and
in
mov
jg
lock
lcall
jae
cmp
pop
scas
fidivrl
repnz
push
cmp
pop
fsubs
lahf
add
jecxz
jbe
pop
adc
cmpsl
sbb
cwtl
push
jne
mov
arpl
dec
dec
push
push
pop
stos
pushf
nop
or
fwait
incl
jo
inc
jmp
xor
imul
notl
psllq
imul
sub
cwtl
jo
cltd
push
fadd
mov
mov
cmpb
push
loopne
inc
jae
dec
push
or
or
or
js
jbe
data16
jnp
aas
in
rcrb
inc
call
pusha
les
xor
xchg
repz
sub
and
rcrl
js
adc
push
enter
in
dec
add
mov
jp
adc
push
sub
enter
mov
push
mov
xchg
lret
add
mov
pop
mov
movsb
cmp
mov
xor
leave
sbb
xchg
loopne
sarb
loopne
xchg
shrb
mov
imul
pop
divb
dec
xchg
cltd
cli
cmpb
jae
addb
xor
dec
imul
xchg
dec
sti
inc
mov
nop
sbb
icebp
dec
sbb
jo
mov
or
call
addr16
in
into
in
inc
mov
sub
push
mov
ss
bt
jle
sub
outsb
gs
adc
jno
inc
je
and
and
decl
in
nop
dec
cmp
cltd
test
dec
int
data16
mov
mov
xchg
fwait
xlat
aaa
jae
mov
jbe
push
test
pushf
xchg
js
xor
inc
scas
int
jae
fcmove
cvtps2pi
dec
hlt
in
xlat
aam
jmp
dec
inc
xor
loop
cli
loope
sub
cmp
push
dec
and
adc
outsl
mov
mov
dec
push
and
call
push
sbb
mov
add
xchg
xchg
xchg
inc
out
iret
inc
pop
sub
out
lock
add
adc
out
jnp
cmp
pushf
and
shll
lods
jp
test
mov
sti
je
push
fdivs
push
into
popf
sbbb
ja
cmp
cmp
inc
pop
in
test
mov
daa
lahf
push
cmp
push
add
and
rol
adc
push
rol
fs
or
fst
lahf
int
pop
mov
roll
into
data16
jge
imul
icebp
cmp
mov
xrelease
xor
cmpsl
cmpb
cmp
pushf
loope
ss
in
subb
jo
repnz
stos
test
adc
xor
repnz
jmp
jmp
jl
adc
or
lods
lea
sarl
lret
fiadds
mov
cmp
xorl
jle
dec
push
fisubrs
dec
add
adc
addr16
addr16
imul
add
sub
sub
sub
xchg
mov
mov
ds
pop
sub
cmp
mov
loopne
pop
mov
jmp
dec
ljmp
cmpsb
sub
jmp
std
repnz
fistps
and
scas
fwait
dec
add
push
shll
gs
in
in
pushf
sarl
fbld
push
fs
fcoml
sbb
xchg
pop
mov
fs
sub
adc
cmp
mov
mov
push
adc
cmpsl
add
inc
inc
jle
and
fs
cmp
sbb
in
orb
es
push
loope
adcl
dec
jp
fidivl
or
add
jge
std
repz
and
rcr
clc
xchg
jmp
mov
add
out
sarb
data16
mov
mov
scas
shr
and
pop
pop
das
repz
and
cmp
mov
xchg
xchg
call
mov
or
jb
push
arpl
push
lods
imul
push
mov
mov
shl
dec
fcompl
xchg
xchg
pushf
dec
vpextrw
mov
sub
inc
and
push
das
sub
jle
mov
loopne
xor
xor
lock
add
adc
insl
lea
popa
lahf
popa
and
sahf
out
cld
push
lods
xor
adc
adc
pop
pop
movsb
repnz
cld
sbb
sbb
test
mov
subl
or
mov
data16
insl
pop
xchg
int3
fcompl
stos
out
hlt
ret
xchg
jo
jge
out
dec
dec
or
adc
roll
fsubr
cmc
fcompl
mov
pop
xchg
mov
pop
gs
push
sub
push
xchg
xchg
sbb
into
dec
fdivrs
adc
leave
fistl
mov
inc
mov
inc
jnp
or
xchg
cs
scas
xlat
xchg
stos
scas
sti
gs
insl
into
rorl
pushf
cltd
call
and
dec
jb
sbb
lahf
inc
mov
adc
inc
int
and
ret
mov
dec
lods
sbb
push
scas
cwtl
jo
inc
inc
xchg
pop
negb
sbb
addr16
stc
addr16
mov
mov
dec
enter
pop
push
or
jnp
add
inc
mov
test
xchg
mov
inc
leave
fnstenv
icebp
xchg
popf
imul
mov
adc
xor
je
ds
ss
xchg
inc
jne
fs
out
cwtl
ss
lods
bound
stc
or
or
int
jl
cmp
adc
mov
pusha
in
jl
repz
pop
jmp
sub
cmp
std
and
inc
xor
dec
dec
ret
fwait
aaa
cltd
es
push
fisubs
fsts
movsb
fstpl
bound
dec
popa
rclb
outsb
fbstp
push
mov
iret
sbb
mov
ljmp
sub
lods
cmpsb
xchg
loop
lahf
mov
or
insb
jns
adc
rcll
mov
pop
sub
loopne
pop
add
mov
js
orb
add
xor
xchg
mov
shl
sysenter
mov
sub
ljmp
sbb
mov
popa
je
adc
popa
add
cmp
add
xor
mov
outsb
mov
pop
dec
dec
xchg
and
aaa
mov
push
incl
mov
pop
pushf
cs
ret
xchg
hlt
rcll
cltd
jp
push
aam
mov
les
aaa
adc
dec
roll
cltd
clc
sub
jns
scas
mov
xchg
call
lret
add
mov
insb
in
adc
adc
mov
inc
jbe
in
inc
sbb
imul
mov
push
movsb
push
in
lods
xor
sbb
adc
inc
rolb
es
add
and
pop
adc
dec
hlt
movsb
fwait
popl
int3
dec
xchg
inc
outsb
stc
jne
stos
push
sub
xor
pop
xlat
shll
xorb
lods
dec
jnp
and
pop
push
mov
adc
out
ds
in
mov
outsl
dec
xchg
push
pop
scas
idivb
aad
add
sub
adc
push
out
faddl
iret
jno
leave
pop
pop
outsb
or
inc
test
and
add
sbb
in
lods
bound
jae
in
cmp
lods
xor
xor
pop
stos
jbe
mov
jecxz
and
push
rcr
push
es
pop
in
pop
xchg
out
iret
adc
imulb
adcl
cwtl
nop
sub
insb
xchg
popa
insb
fisubrs
cmp
testl
pop
lock
mov
scas
inc
or
sub
imul
sbb
jge
mov
arpl
loope
lahf
mov
add
dec
and
mov
xchg
add
les
in
or
adc
jns
cmp
sub
loopne
xchg
cmp
rcl
mov
lods
dec
add
cli
mov
and
mov
mov
mov
cli
xor
sbb
pop
sbb
xchg
orl
mov
testb
test
fmulp
and
aam
adc
mov
xor
leave
hlt
fdivs
mov
test
ds
aam
cmp
xorl
or
lret
xor
aad
lds
rolb
ret
cli
jns
push
inc
ja
and
jae
mov
sub
mov
push
sbb
mov
mov
cwtl
lds
sbb
dec
stc
fidivrs
pop
les
idivl
xor
mov
movsl
sub
in
ret
and
rcr
push
lcall
push
push
jne
sub
jnp
les
int3
push
loopne
sub
push
daa
cmp
loopew
bound
inc
repz
mov
mov
mov
mov
dec
mov
rclb
pop
loope
inc
roll
inc
aaa
in
jge
push
aad
imul
pusha
popf
dec
pop
sbb
ret
data16
dec
imul
into
adc
push
xchg
inc
cmp
ror
xor
pushf
mov
nop
das
mov
fs
imul
lock
mov
sub
test
lods
hlt
ss
test
in
bound
cmp
mov
enter
pop
rorb
negl
sbb
sub
aaa
xor
xchg
test
mov
hlt
pop
lcall
or
fsubrl
lret
pop
push
out
fwait
mov
jne
jno
and
fidivrs
dec
sbb
mov
mov
xchg
popa
shlb
das
jbe
test
ljmp
iret
in
adc
cmpsl
fisttpl
push
pop
ja
pop
mov
addr16
xor
lret
adc
dec
jp
push
sub
add
jmp
sbb
push
outsb
popa
cmpsb
arpl
adc
jo
add
inc
int
ds
subb
loop
std
movsl
sbb
inc
xor
xchg
sti
push
stos
arpl
decl
test
lret
imul
pop
imul
mov
nop
rclb
lahf
fwait
arpl
adc
loope
out
or
pop
dec
lahf
add
out
nop
dec
sbb
xor
adcb
sbb
xchg
xchg
xchg
xchg
rcll
lods
pop
fcompl
lods
and
push
xor
mov
push
jno
sahf
nop
out
std
jmp
aad
mov
loop
mov
insl
inc
ds
fistpll
hlt
shll
jno
sub
inc
mov
sahf
lods
and
adc
xchg
into
lods
jo
stos
sahf
xchg
fmull
push
stc
mov
sbb
stos
and
fdivrl
stos
jnp
sub
lret
in
adc
sub
push
inc
pop
jge
std
inc
popa
shrl
cltd
mov
xchg
js
add
nop
cmpsb
jg
jp
mov
xchg
out
push
dec
dec
jno
push
push
push
leave
mov
adc
or
std
jl
insl
add
cmpsb
cmp
mov
push
shrl
sub
dec
pop
xchg
dec
test
push
stos
push
roll
gs
call
or
insl
add
mov
adc
jo
mov
aas
leave
sti
cmc
xchg
mov
nop
push
iret
mov
mov
movsb
mov
nop
js
negl
pop
xchg
in
test
movsb
inc
and
ret
push
out
adc
sub
inc
and
add
repnz
xor
dec
sub
mov
inc
mov
sti
push
jl
push
pop
push
iret
xchg
fcoms
sbb
inc
adc
push
ss
pop
es
jle
insb
roll
fsubs
and
inc
cmp
jnp
ja
adc
xchg
test
sub
sbb
lods
push
sbb
pop
xor
addr16
sbb
mov
fidivs
imul
fwait
dec
xchg
push
xchg
and
sub
shl
push
fisubl
mov
jo
movsl
xchg
sub
xor
or
nop
pop
nop
cltd
xchg
sbb
adc
jecxz
nop
out
mov
or
push
sbb
xor
outsb
daa
es
and
adc
aaa
aas
push
or
out
push
out
fld
inc
cmp
xlat
aaa
push
test
lahf
mulb
jmp
inc
stos
pop
nop
lcall
xor
lea
add
test
sub
ret
sbbl
aam
aad
lcall
fwait
loop
fwait
jg
sbb
inc
dec
mov
pusha
fisttpll
orl
pop
sbb
mov
push
rcrb
out
push
push
mov
lret
outsb
adc
out
imul
cs
pushl
insb
xor
or
cmpsb
push
lcall
out
mov
je
adc
incl
xor
mov
inc
or
inc
sbb
lods
mov
inc
dec
xchg
pop
dec
dec
outsl
jg
and
jne
push
add
ja
ljmp
or
mov
lea
out
mov
adc
inc
mov
fmuls
pop
out
mov
xor
ljmp
pop
lret
jbe
cmp
popf
mov
sti
mov
mov
jle
xorb
mov
test
loop
out
test
popa
test
xchg
lret
xchg
xchg
mov
jp
aad
pop
shlb
pusha
rorb
jecxz
sub
ja
inc
jns
mull
cltd
xchg
pusha
sub
cmpsl
stc
hlt
and
daa
inc
aaa
aaa
cmp
mov
sti
or
imul
inc
fildl
dec
or
adc
idiv
cs
mov
xchg
push
dec
jbe
icebp
fcom
cld
stc
imul
fisubrl
cmp
xchg
pop
push
cmpsl
xor
push
ret
pusha
mov
adc
xor
xchg
cld
pop
pushf
mov
insl
dec
dec
movsb
movsl
cmp
addr16
mov
sarl
sub
mov
outsl
ret
jg
sub
orb
cmp
jbe
movsb
aaa
daa
movsb
mov
hlt
aad
cmpsb
xchg
bound
pop
sub
mov
sbb
and
arpl
mov
cmpsb
jns
jne
cmpsb
pusha
dec
mov
jae
jns
mov
adc
adc
sub
xor
clc
lea
xor
enter
aam
and
std
jg
dec
nop
pop
insb
subb
mov
and
lds
scas
lods
lea
mov
adc
cmpsl
push
ret
dec
adc
icebp
ret
lcall
fwait
sbb
xchg
popf
push
rcrb
xor
ret
mov
das
sub
jb
mov
jg
inc
nop
dec
adc
push
aaa
pop
lahf
mov
iret
das
dec
sub
pop
lret
orl
sub
clc
dec
inc
addr16
call
mov
cmc
enter
jle
or
js
sub
adc
mov
mov
and
xor
cltd
in
test
cwtl
and
cwtl
aas
add
add
mov
dec
mov
pop
das
adc
ret
cwtl
mov
loop
push
inc
and
pop
adc
pop
fisttpl
mov
xor
mov
orb
and
imul
lock
in
ret
cmp
xchg
mov
pop
scas
rol
cld
hlt
push
les
xchg
pop
adc
fst
out
xchg
call
hlt
movsl
xor
jnp
es
mov
mov
cmp
out
add
leave
add
clc
fidivrl
xor
jno
sahf
xchg
inc
add
adc
in
mov
jmp
cmp
loop
dec
or
sub
notb
sub
jno
mov
pop
dec
sub
and
imul
les
in
je
jecxz
lods
adc
dec
mov
enter
jg
leave
stos
pop
repnz
sub
push
inc
aam
push
inc
push
cmp
jb
negl
daa
cmp
scas
fwait
clc
push
pop
es
pop
lcall
adc
sub
scas
sbb
pop
lcall
jge
add
int
inc
jge
mov
ret
loope
je
inc
or
mov
xchg
ss
pop
inc
mov
fidivl
cmovle
mov
sub
cwtl
in
xchg
push
push
mov
mov
popf
rorl
sbb
sub
dec
imul
jmp
je
lock
out
mov
scas
scas
cli
add
mov
stc
push
aad
adc
push
add
cmp
xor
and
xor
mov
push
loop
sub
or
pop
out
call
leave
in
bound
int
out
call
shr
imul
cmp
out
push
add
insb
pop
push
and
sbb
insl
outsb
cli
push
and
imull
push
cs
clc
inc
ret
inc
jmp
lret
fisttpll
mov
ss
adc
mov
mov
mov
test
dec
and
dec
mov
cwtl
icebp
push
sub
push
cmpsl
je
mov
adc
jne
insb
or
sub
or
mov
xchg
cmp
mov
adc
inc
add
push
inc
fs
dec
adc
cmp
inc
jecxz
sbb
daa
outsb
out
and
or
cmc
xchg
cmpsb
cmp
pop
sub
mov
xor
out
mov
test
mov
shll
repz
sar
mov
aaa
bound
dec
jne
sti
sub
sbb
sahf
pop
outsb
adc
mov
movsl
mov
int3
jbe
add
push
arpl
in
in
loop
jg
and
and
sbb
cmpsl
or
sub
pop
dec
fldcw
jo
jp
xchg
pop
dec
xor
shll
mov
push
push
ja
sbb
loop
scas
mov
inc
sbb
adc
inc
mov
dec
enter
mov
mov
mov
mov
add
and
inc
fnstsw
test
popa
jl
and
pop
adc
imul
lea
ss
mov
or
or
aaa
ret
adc
cmpsl
mov
es
cmp
xchg
iret
out
push
cmpsb
or
pushf
lret
pop
popf
mov
shll
jbe
lock
ljmp
or
les
outsl
clc
fistl
es
stos
add
repnz
inc
push
ds
fdivs
cmp
movsb
and
pop
outsl
imul
jns
cli
cmp
push
adc
dec
loop
jne
movl
int
sub
ss
jge
or
inc
adc
mov
jno
sahf
xor
popa
movsl
shll
mov
mov
cmp
sbb
xor
lcall
sub
stc
in
stos
sub
loopne
fidivrl
mov
cmc
xlat
jno
jbe
inc
daa
jnp
ds
ja
pushf
pop
adc
outsb
fcoms
fsubl
insl
mov
xor
sbb
jne
ljmp
test
pop
inc
xchg
fwait
xlat
push
add
int
ret
or
jmp
mov
jg
fsts
add
inc
gs
or
pop
les
cwtl
int
push
xor
orb
xlat
lods
fwait
scas
outsl
mov
divb
sub
inc
mov
call
ss
cwtl
dec
data16
orb
jmp
into
shlb
je
popa
imul
fstpl
cs
pusha
pushf
ja
xchg
out
mov
xchg
stos
jne
jmp
stos
or
outsl
cmp
sbb
mov
imul
bound
mov
pop
dec
ficoms
je,pn
maxps
mov
iret
stc
and
enter
push
sub
add
sbb
std
stos
inc
bound
lret
xor
jae
sub
push
mov
in
add
loope
imul
or
sub
hlt
add
jmp
xor
sbb
nop
shlb
inc
inc
xchg
pop
ja
test
out
jo
mov
mov
push
sbb
insl
ja
dec
pop
push
add
pop
jp
insb
pop
adc
daa
divl
fs
and
xor
pushf
push
push
sti
mov
stos
movsb
cld
mov
xchg
je
pop
test
mov
cmpsb
jo
out
cltd
xchg
into
mov
adc
les
std
js
mov
jle
pop
fwait
push
pop
loopne
lods
xchg
adc
mov
mov
clc
cmp
push
xor
std
rcll
jns
addr16
leave
jp
lds
sbb
dec
adc
xor
cld
xchg
cld
lock
inc
in
push
inc
jbe
xor
and
mov
cmp
outsb
adc
pop
cmp
cmp
js
xchg
ss
sub
lahf
inc
jb
xchg
cmc
clc
jge
xor
jmp
sbb
push
dec
out
inc
fidivrs
das
and
and
inc
xchg
mov
sbb
test
inc
sahf
bound
push
and
lret
mov
nop
add
in
js
daa
sbb
adc
int3
popa
psrlw
jne
push
jnp
addl
and
push
push
sbb
cmp
xor
popa
push
jbe
cwtl
mov
popa
xchg
jne
or
icebp
and
pop
outsb
mov
push
fcomip
daa
push
dec
mov
cmpsl
lret
and
lds
arpl
icebp
xchg
dec
jbe
insl
xchg
pop
scas
adc
inc
fisttpll
lods
mov
aam
lahf
xchg
lea
adc
push
add
or
hlt
push
xor
pop
pushf
iret
mov
and
jbe
and
xchg
dec
loope
pop
outsb
xchg
cmc
sub
rcll
daa
fadds
jp
mov
dec
out
shll
xchg
cwtl
xchg
ja
mov
or
pop
and
pop
push
daa
leave
add
xchg
dec
xchg
subb
sbb
int3
add
mov
mov
ja
imul
cs
lods
xor
sbb
sbb
mov
add
mov
pop
xor
or
xchg
repz
inc
rclb
xor
aaa
fsubl
lods
xor
addr16
fldt
insb
sub
pop
gs
mov
xor
jbe
leave
imull
xchg
lock
push
sbb
je
sar
xchg
andb
push
inc
cmp
pop
sahf
xor
dec
loop
xor
or
mov
cmpsl
fstpl
push
lahf
jg
cmpsb
hlt
into
ds
or
sahf
test
xor
imul
and
int
pop
call
popa
int
xchg
mov
mov
sbb
into
adc
xor
orl
mov
push
nop
movsl
push
or
fisttps
mov
sub
mov
sub
es
or
out
xchg
inc
xchg
jne
loop
dec
ret
inc
inc
lcall
pop
push
cmpsb
add
fmuls
lock
cwtl
inc
lret
dec
insb
xchg
pop
mov
ja
sarl
mov
ja
jno
call
mov
jg
add
int3
dec
pop
mov
stos
push
jmp
hlt
pop
mov
repnz
jle
push
int
out
into
shlb
lods
pop
fbstp
adc
mov
inc
mov
mov
repz
mov
lea
inc
xlat
mov
repz
mov
mov
pop
jbe
cli
lahf
out
mov
fwait
xor
push
and
jecxz
and
sarb
dec
cwtl
imul
adc
nop
cmp
add
adc
adc
add
aaa
dec
outsl
and
leave
sbb
ret
bound
sub
in
and
push
std
lret
pop
lods
in
es
inc
ja
repz
aas
aad
jno
ja
aad
xor
inc
ret
das
mov
dec
mov
inc
iret
idiv
lods
mov
xchg
push
lret
aaa
or
js
mov
rcr
aaa
cli
xor
push
call
jmp
scas
jmp
scas
mov
ja
mov
inc
jmp
jmp
adc
add
cwtl
les
les
cmp
cmp
mov
std
les
push
adc
push
test
jecxz
mov
push
xor
call
pusha
push
xor
sub
stos
sub
adc
jb
in
xchg
pop
adc
fisubs
sbb
cld
cmp
push
jmp
sbb
jecxz
inc
nop
xchg
nop
pop
std
outsl
loopne
cmpb
in
jbe
shl
inc
and
cmpsb
imul
and
dec
shlb
and
sub
ja
cld
add
sbb
shrl
scas
push
dec
cmp
adc
and
add
outsl
mov
movsb
outsl
scas
test
popf
cmp
xchg
ja
mov
cmpsl
mov
jmp
add
sarb
out
les
adc
push
push
std
movsl
jg
xchg
sub
lds
pop
fiaddl
das
push
xchg
loope
sub
xchg
inc
inc
xor
fcomp
xor
jmp
in
mov
inc
mov
test
adc
lods
or
fisubrl
xor
fisubl
xor
jecxz
mov
aam
or
fnstcw
push
mov
inc
lcall
js
push
out
xchg
cmpsb
addl
sub
jmp
jns
aad
rcrb
xor
mov
das
push
inc
scas
ljmp
mov
xlat
xor
fnstcw
xchg
mov
push
fcmove
lea
fdivs
xchg
imul
ljmp
out
das
nop
mov
and
mov
pop
call
orl
loope
and
enter
imul
and
push
jo
mov
sbb
test
lock
pop
int3
roll
negl
dec
cmp
aaa
cs
push
cs
sub
sahf
cmp
das
jbe
inc
xchg
cmp
int
xlat
cmp
jmp
xchg
lret
fidivrs
sub
test
mov
xchg
inc
int3
pop
jne
imul
mov
xchg
mov
cmc
sbb
mov
fsubrp
push
xor
addr16
xlat
test
notl
repnz
push
in
and
sub
sahf
or
or
lret
pop
cmpsl
repz
adc
or
lods
hlt
or
mov
push
lock
xchg
xlat
les
cs
mov
movsl
fmulp
lret
mov
fcmovbe
push
and
inc
out
push
sbb
ds
xor
and
js
push
mov
jne
and
ljmp
pushw
xor
dec
jnp
repnz
jle
in
dec
and
out
das
jl
stc
mov
cmp
cwtl
mov
jb
xchg
jmp
dec
lods
call
xchg
jg
js
xor
pop
or
lods
dec
fnstenv
in
pop
push
jne
je
inc
sub
xor
call
or
test
testl
std
push
outsb
mov
add
jo
adcb
xchg
jo
jp
jl
cld
and
jl
aaa
or
xchg
mov
pop
ror
bswap
fildl
xor
std
dec
fidivrs
add
int3
test
fstl
xor
sub
cmp
mov
inc
jo
fists
xor
fimull
pop
andl
or
fwait
hlt
push
xchg
out
add
inc
inc
repz
ret
lock
xchg
dec
fs
cwtl
and
ljmp
aad
lea
das
scas
lret
shll
pop
fisttpl
iret
or
jo
jl
outsb
inc
enter
call
mov
add
sub
pop
fisttpl
das
cltd
mov
fisubs
lret
mov
sbb
fildl
ret
out
clc
pcmpeqb
mov
std
aam
data16
mov
pop
sahf
cmc
ficomps
pop
in
pop
jecxz
int3
adc
cmpsb
inc
out
mov
cmpsb
jg
sbb
outsl
sbb
into
mov
cmpsb
jns
add
dec
sbb
adc
sbb
push
jge
stos
scas
jae
int
pop
pop
sti
stos
mov
cli
or
dec
push
sbb
sahf
pop
test
jge
stc
sub
outsl
cmp
mov
hlt
cmp
rorb
popf
mov
push
icebp
mov
movsb
add
ror
popf
cs
sahf
insl
lret
mov
aam
sub
das
inc
daa
mov
bound
out
test
in
add
aad
outsb
out
ljmp
dec
fistps
xor
hlt
mov
sub
dec
dec
sub
fsubl
add
popf
pop
mov
int
jne
mov
ljmp
mov
cmp
mov
cld
test
jno
lds
pop
hlt
insb
adc
jl
mov
pop
inc
out
xlat
sub
jne
shl
outsb
lods
movsb
fcmovbe
xor
mov
jge
push
aas
inc
arpl
and
xor
xchg
test
js
mov
sbb
shll
adc
dec
call
sbb
cmp
xor
adc
push
dec
stos
sbb
cmp
icebp
xor
push
cmp
cli
push
push
sbb
cld
aam
inc
stc
jbe
jo
cltd
jg
imul
mov
data16
xchg
sub
jo
lods
xchg
out
jo
jl
sbb
hlt
inc
out
mov
in
jb
mov
add
lcall
test
andb
dec
stc
fwait
push
sub
cmpsb
cmpsl
add
pop
pop
popf
lock
adc
sub
aas
dec
dec
dec
int3
fmull
sub
flds
push
enter
adc
xor
xchg
adcl
pop
testb
xchg
adc
xor
push
test
sub
and
daa
mov
rep
mov
and
cmpsl
xchg
pop
lret
and
jbe
sbb
lock
mov
lret
adc
test
or
pop
in
mov
jmp
and
mov
sarl
sub
incl
mov
lcall
jp
xchg
pusha
cli
cmp
cmp
jge
out
adc
adc
stc
fisttps
xchg
push
scas
xchg
aas
mov
jo
sbb
pop
lea
ret
cld
add
into
nop
jno
popf
xor
roll
jmp
out
aas
jo
mov
js
addl
jne
sub
out
loopne
in
or
shll
sub
inc
lret
test
pslld
inc
xchg
shl
pop
daa
pop
xchg
xor
jge
mov
cli
pop
inc
adc
hlt
rorl
add
dec
cmp
and
jnp
xchg
int
cmp
lods
hlt
das
xchg
popf
or
sbb
xchg
mov
pop
sbb
xchg
cmc
lea
mov
xchg
xor
jns
mov
sub
in
outsl
lea
out
ss
mov
popf
jno
cmp
mov
aam
sub
fimuls
call
out
fnstenv
aas
mov
jae
popa
mov
jg
cmpsl
aas
add
sub
stos
stc
not
jno
sahf
push
icebp
add
fistpll
cmpsl
adc
sbb
pop
push
push
xchg
popa
mull
vpunpckhqdq
lret
pop
daa
add
dec
fsubrs
mov
mov
jb
fstps
pop
pushf
mov
jae
lahf
leave
mov
mov
adc
sbb
outsl
cmpsl
pushf
fdivs
sahf
arpl
ret
pop
scas
not
out
popf
push
stos
pop
sbb
cmp
mov
popf
dec
shl
repnz
jmp
mov
cltd
lret
pop
dec
xor
sahf
int3
pop
fdivrp
jle
cli
mov
orl
xchg
les
popf
test
jge
clc
mov
aaa
incl
movsl
fs
cmp
lock
cmpsl
sar
or
and
push
sti
gs
mov
das
or
xor
adc
mov
ja
mov
bound
fldl2e
inc
scas
pop
das
es
aad
sar
inc
and
fsubrp
test
cmpsb
int3
sbb
pop
sbbb
and
xlat
fcoml
mov
loop
stos
sub
mov
pop
mov
push
add
outsl
into
mov
fisubrs
pop
popa
fidivrl
push
pop
cmp
adc
jne
adc
cmp
test
ret
mov
and
jae
push
push
repz
jle
and
add
repz
dec
jns
fs
dec
adcb
cmpsl
and
out
and
or
jne
xor
mov
and
mov
mov
jb
cmp
outsb
cmp
or
pop
pop
mov
sub
leave
sahf
xlat
sbb
sbbb
es
fs
cmp
jmp
mov
test
push
aas
imul
ret
ljmp
push
xorb
cmc
js
inc
cmpb
jo
push
mov
xchg
push
cli
cmp
xchg
cmp
shl
popa
jb
bswap
cmp
or
in
cmp
lahf
mov
push
mov
or
jae
push
inc
cwtl
lea
adc
fidivrl
ds
test
pushf
stos
xor
pop
pop
testb
dec
mov
incl
dec
adc
repnz
cmp
dec
sbb
xchg
cmp
ret
or
mov
nop
fmull
cmpsl
ljmp
push
xor
in
or
aas
scas
pop
mov
leave
xor
sub
popf
and
xor
pop
inc
adc
mov
jge
jnp
inc
sbb
das
dec
push
je
xor
into
or
fcmovb
stos
xor
jg
mov
incb
adc
cmp
into
or
xor
push
movsb
ss
lods
ret
andb
in
sbb
mov
jne
stos
inc
cmp
add
and
lcall
or
cmp
mov
leave
stc
dec
push
xor
jmp
dec
lods
stos
xor
insl
pop
fnstcw
fcompl
mov
cld
clc
test
in
pop
adc
push
add
jp
pop
enter
sarb
adcb
iret
addl
outsl
add
jno
push
jno
into
mov
push
mov
or
popa
dec
pop
je
push
cmpsb
dec
ret
mov
fst
and
sbb
dec
push
inc
mov
inc
or
dec
jp
pushf
sbb
int3
mov
icebp
sarl
stc
arpl
mulb
lea
lock
pusha
stos
loope
sub
dec
or
sbb
addr16
xchg
fistpl
outsl
mov
test
sub
pop
ret
sub
pushf
fsubl
cmp
frstor
addb
inc
xchg
mov
mov
shrl
mov
cwtl
cmc
loopne
adc
cmpsl
dec
cmpsb
jnp
stc
fistpll
xchg
lret
mov
dec
lahf
bound
lahf
dec
or
push
cwtl
inc
shl
in
leave
gs
fcoms
cmp
add
insl
adc
shlb
into
pop
add
lods
mov
xor
mov
repz
xchg
mov
mov
adc
add
xor
xlat
aaa
outsb
out
pop
into
test
movsb
lds
out
fwait
dec
and
rclb
jb
sbbb
jb
ja
test
arpl
loop
pop
cmp
pop
insb
sbb
or
repz
mov
or
movsl
inc
and
scas
jge
mov
xor
mov
mov
inc
pop
mov
pop
inc
in
mov
dec
sub
push
or
and
pop
nop
jmp
cmc
cmpsl
fst
push
or
xchg
pop
int3
jg
inc
incl
sbb
inc
ss
add
cmp
movsb
insb
aam
in
cltd
adc
rcll
jecxz
lret
add
mov
mov
fldt
popf
mov
dec
js
dec
xor
push
inc
loop
adcl
push
icebp
sub
dec
sbb
ljmp
bound
addr16
pop
dec
dec
std
sbb
and
xchg
or
cli
dec
mov
jb
lret
cli
cmpsl
cmp
or
or
xchg
sbb
push
clc
jae
loopne
rorl
push
loope
add
shl
jecxz
scas
sub
sbb
js
in
inc
mov
loop
mov
push
inc
in
stc
mov
mov
push
sbb
push
clc
das
into
or
cmp
xchg
xor
sbbb
mov
in
pop
xor
jge
mov
add
or
sbb
push
insl
aad
sub
test
xor
addr16
sub
inc
adc
mov
iret
lret
lret
xlat
js
in
popa
add
and
scas
fwait
inc
dec
clc
dec
mov
sbb
ret
aad
fstps
dec
sub
sahf
loop
lcall
xlat
rclb
jge
rcr
test
loope
mov
sbb
int
pop
inc
lds
data16
subb
mov
pop
sub
cwtl
sarl
xchg
mov
pop
fidivrs
pop
stos
pop
sub
or
push
out
ret
js
lcall
les
shlb
pop
call
sbb
cmp
lcall
pusha
dec
xchg
fs
push
push
das
inc
mov
adc
jno
int3
push
or
insb
bound
ljmp
inc
sub
es
aam
sub
pop
push
xor
mov
outsl
add
mov
xor
jno
imul
fs
cmpsb
xor
inc
dec
popf
push
add
pop
sbb
add
sar
testl
or
dec
inc
pop
cmp
adc
test
int
inc
sub
xchg
dec
int
mov
cmp
mov
push
test
cli
pop
or
arpl
sbb
push
mov
lods
dec
filds
cmpsl
pop
xchg
int
xor
add
adc
or
sbb
aam
rclb
fnstenv
add
push
movsl
inc
leave
std
fwait
sub
bound
pop
insb
ret
pop
jne
fs
les
lret
int
les
xorl
ror
sub
dec
subb
clc
out
and
es
cmp
mov
jecxz
or
or
or
test
les
or
or
popa
push
popf
js
arpl
cltd
xchg
into
jg
jg
repz
les
loop
jle
jb
dec
shl
lods
cli
mov
fistpl
jbe
stos
and
inc
lods
xor
sub
push
and
int
and
cmpsb
cmpsb
fucomi
lods
mov
or
imul
pop
das
mov
mov
fs
dec
sbb
mov
mov
xor
jnp
pushf
aas
push
cmpb
pop
xor
jno
adc
cld
cmpsl
jle
loopne
xor
mov
arpl
jb
outsb
mov
je
xlat
test
mov
fisubs
int3
mov
inc
iret
mov
jae
add
mov
je
inc
adc
imul
mov
fildl
test
jb
push
fidivrl
pop
movsb
fdivs
fidivrs
add
or
push
push
or
loopne
push
or
dec
movsl
sbb
xlat
push
das
mov
lea
jle
jo
mov
mov
in
icebp
inc
or
and
mov
pop
cmp
cmp
int
paddusb
cmp
cmp
out
push
sbb
jnp
cmpsl
jbe
arpl
mov
cmp
or
es
adcb
jl
push
mov
or
sub
jecxz
adc
movsb
test
jnp
add
pusha
lea
pop
inc
jmp
out
pop
jmp
sti
scas
jmp
std
mov
push
sahf
adc
mov
pop
mov
into
insl
rorl
pop
and
sbb
inc
pop
faddl
mov
out
les
sti
lfs
repnz
mov
cs
lock
daa
int3
xor
pop
stos
xor
movsl
loopne
ret
andl
lahf
adc
lea
std
mov
imul
call
fildl
pop
ja
cs
mov
jnp
sbb
dec
in
cld
fwait
insb
jb
std
adc
lcall
pop
rcr
addr16
push
cs
pop
fisttpl
rclb
xchg
lret
add
xor
js
fwait
jo
pop
pop
inc
sarb
lahf
stc
cs
rcrl
and
jne
test
fnstsw
fistpll
sub
mov
add
idivb
mov
lea
imul
push
fsts
ja
sub
fs
mov
into
clc
lea
xchg
sti
rcrl
pop
scas
pop
aam
repz
mov
mov
test
inc
and
sbb
dec
push
mov
and
icebp
mov
adc
movsl
clc
sbb
rorb
inc
pop
call
xor
adc
insb
test
sub
testl
cwtl
sti
cmp
addr16
pop
subb
add
lahf
push
std
inc
jl
adc
mov
dec
pop
pusha
scas
adc
mov
les
jle
inc
pop
aad
sub
sub
in
lods
and
das
add
and
pop
lret
mov
sbb
mov
adc
insl
arpl
je
add
or
xor
or
sub
jmp
adc
lds
data16
fsubl
xchg
cmp
sti
rcrl
arpl
adc
in
in
pushf
xchg
cmc
decl
jbe
fucomp
rcrl
cld
add
or
sub
outsl
push
out
ret
pop
xchg
pop
fwait
movsb
sbb
xchg
addr16
adc
test
jecxz
mov
ficompl
inc
clc
fs
jecxz
sbb
mov
ljmp
jge
clc
stos
pop
dec
mov
push
xchg
repnz
mov
mov
mov
stc
outsb
roll
pop
lret
push
ror
xchg
aaa
data16
cmp
ss
adc
ss
jge
mov
dec
js
push
cmc
cmpsb
ret
and
mov
es
adc
call
int
stos
dec
in
icebp
outsb
jg
aam
ret
ja
test
sub
testl
or
mov
lods
outsb
add
fnstcw
jno
mov
lock
aad
lcall
ret
mov
hlt
cltd
in
jno
sub
xchg
ss
lock
fisubrs
sub
leave
mov
movsl
mov
and
lds
movsb
pop
stos
int3
dec
pop
pop
pop
mov
sub
add
cmpsl
mov
inc
aas
jg
sti
fwait
jns
sbbl
pop
adc
clc
push
pop
push
or
mov
je
push
outsb
pop
mov
mov
pop
inc
icebp
push
cs
or
loop
mov
fcmove
add
sub
push
inc
cmc
imul
arpl
iret
insb
dec
lods
dec
scas
je
cs
loop
nop
cmp
adc
pushf
cld
xchg
sbb
lret
stos
ret
sahf
jp
cmp
dec
push
faddl
fsubrs
cmp
sub
out
pusha
loope
stc
mov
add
inc
cmc
mov
mov
inc
xchg
jecxz
lods
lods
mov
mov
push
mov
inc
and
xor
xchg
mov
pop
xchg
and
addr16
xchg
pop
shrl
dec
adc
lock
fstpt
xlat
aam
mov
dec
xchg
ja
daa
jne
je
fists
cwtl
loope
bound
fwait
in
into
xchg
dec
bound
fcoms
cmp
xchg
xchg
dec
sbb
sub
jns
notl
inc
pop
xchg
es
lcall
mov
test
jle
jae
into
cmp
mov
adc
dec
pop
sbbl
hlt
nop
ror
js
jmp
std
int
dec
loopew
movsb
int3
movsb
je
in
stos
cltd
add
lods
outsb
push
arpl
pop
inc
add
js
cmpsl
loope
sbb
aas
bound
pop
pop
cmc
loope
mov
pop
das
js
xchg
lock
push
pop
fiaddl
lock
cs
out
sub
pushf
cmp
notl
sar
ret
mov
aad
movsb
pop
cld
cmp
int
inc
ljmp
fbstp
fs
push
cmp
mov
cmp
filds
lret
dec
movsl
jno
subb
cmpsb
xor
out
push
mov
faddp
jns
jns
inc
sub
fadds
inc
sahf
adc
mov
fsubs
aam
xlat
gs
sbb
jmp
loop
addl
jecxz
outsb
xor
fwait
js
adc
dec
movsb
enter
xor
cltd
out
data16
dec
pop
pushf
or
jecxz
pop
out
ficompl
add
add
jb
sub
add
mov
inc
lea
js
and
cwtl
cmp
ja
ja
lods
leave
out
sub
movsb
lock
stc
fisubrs
xchg
out
inc
ja
xor
jl
es
fdivrl
mov
push
ss
sbb
mov
pop
mov
into
popf
in
test
out
cmp
int
sub
mov
enter
mov
stos
sub
pop
mov
adc
xchg
shl
inc
sbb
sub
inc
add
fwait
hlt
lret
cmpsb
ljmp
aaa
sbb
dec
and
inc
jecxz
mov
mov
lahf
pop
push
sahf
push
mov
cmc
ds
fldcw
fcomps
out
popf
sbb
enter
xor
and
sti
ja
js
rorb
in
imul
sbb
pop
dec
push
les
and
xchg
adc
iret
xor
push
arpl
jns
or
mov
inc
pop
scas
jp
cmp
jo
sub
mov
push
faddl
out
cmpsl
gs
enter
popf
mov
xlat
or
xchg
cltd
scas
stos
mov
xchg
mov
call
mov
add
and
lret
push
je
mov
pop
sbb
sbb
int3
std
mov
dec
xchg
ret
negb
and
insb
enter
test
adc
push
sbb
push
xchg
dec
inc
lahf
inc
sub
inc
loop
imul
jno
xchg
leave
sub
in
lods
dec
mov
sub
mov
mov
enter
icebp
and
in
inc
push
mov
fs
pushf
loope
outsb
mov
or
xchg
adc
in
fsubrl
dec
imul
pop
repz
jl
cmp
stc
xchg
shlb
jo
sub
shrb
mov
loope
insb
imul
pop
ja
test
mov
xchg
mov
faddl
add
inc
xor
pop
add
shll
popf
dec
cmp
shl
imul
orl
push
les
lret
mov
pop
or
shlb
fldt
addr16
cli
jne
lods
gs
mov
mov
fmul
sub
xchg
and
ds
adc
leave
mov
inc
pop
rorl
sti
add
xchg
or
xchg
ljmp
in
ds
cwtl
dec
inc
mov
jl
pop
dec
fucomip
into
outsl
jmp
hlt
jne
ja
sub
mov
pushf
jns
jmp
in
jmp
jmp
jl
or
pop
bound
int
push
das
inc
push
cmp
mov
and
shl
and
sbb
xor
lock
idiv
int3
cltd
add
inc
and
add
leave
mov
dec
fildll
jg
pushf
orb
adc
cmpsl
xor
cmp
dec
imul
fistpll
roll
mov
mov
and
mov
loope
test
into
push
xchg
add
out
xchg
and
popa
jle
cmp
push
cmp
roll
sub
or
push
adc
push
adc
ret
and
stc
cs
stc
sbb
cmp
fsubr
mov
mov
pop
test
out
mov
pop
xchg
testl
push
push
dec
movsl
movsl
fs
mov
out
dec
cmpsl
jae
fwait
out
adc
filds
mov
push
cmp
jnp
popf
dec
inc
ja
and
fbstp
es
adc
shlb
scas
xor
cmpsb
sub
jmp
movsb
lahf
dec
test
mov
and
ficompl
mov
xchg
or
test
inc
mov
lods
and
jg
sbb
push
mov
arpl
loope
jae
dec
sbb
cli
movsl
jbe
repnz
ret
enter
sbbb
iret
scas
ficoml
shrb
scas
dec
cmp
imul
or
into
mov
ret
lret
and
pop
ret
fs
mov
cltd
iret
cmp
inc
out
aam
mov
loopne
lcall
repnz
cmc
loop
mov
or
cmp
sti
pop
jl
add
cmp
jbe
out
ds
fcmovbe
mulb
inc
ss
enter
arpl
movsl
lret
mov
inc
cmp
sbb
clc
or
adcb
cmc
adcb
push
sub
push
out
pushf
frstor
mov
cmp
stc
push
mov
mov
xchg
push
mov
mov
stos
rol
sbb
push
insb
out
fwait
daa
lds
mov
sbb
push
pusha
jnp
jo
les
outsl
pop
addr16
jne
mov
mov
mov
cmp
push
push
stos
add
les
dec
mov
lahf
movsl
nop
shlb
mov
test
das
scas
add
sahf
xor
imul
fldl
ljmp
add
adc
movsl
or
xlat
je
sub
sahf
pop
xor
mov
mov
mov
pop
insl
jecxz
xor
mov
pop
ds
fwait
mov
ret
enter
aad
fnstsw
outsb
movsl
shll
shrl
in
and
xor
xchg
dec
pop
jbe
lods
lahf
and
shll
sbb
fsts
das
push
lods
cmpxchg
push
jnp
lret
inc
lahf
nop
inc
test
je
ds
adc
add
adc
stc
pusha
mov
shl
orb
sub
mov
add
repnz
shll
cli
bound
pop
sbb
pop
ds
push
sbbl
orl
sub
mov
xacquire
mov
test
mov
dec
loop
in
push
mov
call
cli
mov
mov
cmp
mov
xor
adc
stos
add
push
in
cld
stc
out
fildll
das
push
jo
ds
lcall
sub
xorl
mov
lock
in
inc
rcl
cmpsl
and
loope
sbb
xor
data16
shlb
or
insb
mov
xor
jnp
sbb
sahf
or
xchg
fstl
dec
cmp
sti
cs
stos
inc
into
sbb
push
cld
pop
aam
sub
xor
nop
add
ds
mov
int3
mov
nop
xor
sub
lds
cmp
jno
inc
xor
loopne
xchg
mov
dec
mov
lds
data16
and
push
sbb
scas
les
dec
xchg
pop
xor
test
lret
fsub
jmp
xor
adc
cmp
jae
test
dec
mov
test
imul
movsl
or
push
fldl
cmpsl
adc
bound
adc
xlat
ljmp
push
lret
mov
jno
sti
mov
pop
int3
dec
fstpl
inc
and
sub
std
aaa
outsb
mov
rcrb
add
xor
fwait
pop
imul
mov
lds
mov
cmp
add
adc
ret
mov
movsl
arpl
call
xchg
ss
or
adc
repnz
ret
xor
inc
push
js
sub
test
xor
ret
int
ljmp
ret
cmpsl
and
addr16
push
and
hlt
shl
lock
adc
jbe
sbb
jnp
into
inc
push
xlat
movsb
mov
fldl
cmp
mov
fdivs
cs
stc
lea
mov
pop
dec
cmp
jecxz
lret
mov
cmp
xor
sbb
push
stc
push
orl
jp
adc
jl
mov
addl
xchg
dec
enter
adc
in
push
in
ds
enter
mov
push
add
pop
push
popa
xchg
mov
xor
scas
bound
adc
in
ja
jecxz
or
pop
inc
mov
sbb
push
mov
mov
in
loopne
dec
jo
sub
sub
repnz
stos
sbb
mov
pushf
mov
mov
ljmp
add
sub
push
mov
loope
jp
jno
aas
xchg
lods
xor
mov
pushf
stc
xor
addr16
push
gs
cltd
loope
jle
cmp
inc
xor
aam
rcrl
xor
loop
addr16
push
aas
outsb
hlt
cmp
xor
movsl
into
nop
mov
xor
ja
bnd
inc
pushf
movsb
and
cld
mov
cmp
dec
or
testb
jle
leave
fisubrl
lret
fiaddl
pop
fcompl
jp
add
lret
insb
stos
subl
adc
and
jne
pop
addr16
test
fldl
jo
push
xchg
shr
addr16
sub
adc
scas
jae
push
call
insb
inc
or
sub
fisubrl
not
xor
add
dec
loopne
cmp
fistps
ljmp
add
ret
mov
adc
je
push
or
pusha
andl
into
pop
mov
and
xchg
inc
xlat
test
xor
mov
fisttps
pop
mov
xchg
cmp
inc
cld
push
mov
add
aas
mov
std
xchg
faddl
xchg
aaa
loopne
dec
mov
cmp
xchg
icebp
pop
lret
jno
int
fwait
iret
fstpt
jae
dec
insb
scas
cmp
sahf
loope
dec
daa
into
bound
mov
cmp
jb
subb
jle
mov
add
sti
inc
fsubs
movsb
pusha
dec
es
stc
cltd
push
xor
es
sti
xchg
or
mov
push
or
lahf
adc
sub
add
jne
stos
adc
pop
test
sub
lods
jbe
out
inc
pop
test
loop
or
jmp
mov
fdivr
clc
sbb
outsb
mov
dec
lock
jae
arpl
hlt
add
add
or
sbb
add
xchg
adc
test
cmp
xchg
nop
pop
addl
inc
push
lahf
arpl
and
shr
mov
inc
ds
ja
push
pop
add
ja
add
pop
cli
std
xchg
insb
aaa
cmc
daa
mov
andl
inc
cmp
stos
test
ljmp
imul
jg
gs
or
out
and
push
jmp
daa
mov
scas
aad
fimuls
in
sahf
rclb
aaa
ficompl
pushf
sub
loopne
sub
push
int
insb
jno
js
push
or
mov
jl
call
fs
add
push
mov
in
mov
in
jns
aam
shlb
mov
negl
mov
jge
repz
jmp
test
sar
xchg
xor
and
stos
mov
jbe
test
cmp
dec
dec
icebp
or
popf
cs
jbe,pt
jnp
ret
jecxz
fld
jno
xchg
out
cmpl
jbe
leave
jbe
sbb
js
pusha
js
fildl
cmp
mov
cltd
dec
inc
push
lcall
mov
pop
adc
jecxz
mov
andl
add
fnstsw
or
bound
mov
sbb
sbb
dec
pop
bound
lea
clc
jno
pusha
lret
lods
mov
dec
pusha
inc
movsb
xor
movsl
not
mov
test
add
scas
mov
jnp
test
adc
pop
in
xchg
sbb
les
or
and
bound
push
pop
lods
int
popa
out
pusha
ret
cli
mov
jmp
out
iret
cltd
xor
std
and
add
jb
ret
sti
inc
xchg
bound
imulb
adc
nop
jmp
dec
xchg
inc
mov
insl
dec
cmp
jo
cmp
out
stos
cld
es
fdivrs
pop
or
xchg
xchg
loopne
push
pop
adc
add
mov
cmp
mov
or
pop
fbld
mov
inc
subl
push
loop
mov
cmc
mov
xor
mov
dec
xchg
xchg
stos
jnp
jp
sub
sbb
outsb
dec
repz
mov
ds
push
mov
pop
shlb
leave
add
iret
stc
sbb
lea
mov
dec
loope
imul
arpl
push
cmp
test
mov
or
andb
pop
and
or
outsb
add
iret
shrb
and
mov
and
insl
testl
sbb
push
arpl
sbb
inc
lcall
xor
stos
jmp
in
aas
aaa
int
rclb
cmp
xor
cmp
fwait
mov
xlat
mov
insl
adc
insl
jecxz
shlb
in
push
mov
inc
push
lock
pop
cmpsb
aam
mov
sbb
add
mov
es
aad
repz
mov
push
xor
cmp
or
test
fists
cltd
addr16
dec
mov
dec
xor
adc
sahf
xchg
jp
jb
je
aaa
push
pop
or
stos
imul
xorb
and
in
repz
xor
cs
push
movsl
pop
xchg
add
pusha
pop
push
pop
inc
sbb
or
and
inc
sub
hlt
pop
int
std
dec
sub
inc
jnp
dec
cmp
push
fdivl
jmp
insl
and
lret
sub
mov
push
ret
xchg
cmpsb
mov
and
imul
mov
xchg
cmp
pop
add
sub
sub
out
push
mov
jge
dec
sbb
in
aaa
and
enter
mov
lods
clc
dec
lods
lea
and
pop
sub
pop
xor
cwtl
insl
sbb
in
jp
ret
pop
push
mov
mov
push
mov
adc
loop
out
out
fcmove
cmpl
ljmp
or
or
movsl
xchg
ljmp
js
adc
or
rcrb
dec
clc
daa
shlb
jno
add
insl
cmpb
mov
jecxz
in
and
adc
lret
mov
ret
inc
add
pop
loop
stos
inc
pop
mov
lahf
lahf
addr16
leave
int3
cmpb
jl
jne
cmpsl
test
es
lods
sub
mov
inc
loop
push
fldenv
jle
repnz
idivb
in
inc
dec
out
fs
aam
stos
mov
or
push
fimuls
cmpsb
xchg
call
andl
shrl
int
inc
lock
arpl
ds
addr16
jp
xchg
xchg
xchg
dec
push
pop
popa
add
mov
mov
sbb
xor
lcall
scas
cmp
mov
push
mov
lods
mov
bnd
jb
push
fistpll
insb
push
popf
je
cld
inc
push
outsl
ljmp
pop
shlb
dec
mov
int
repnz
subl
push
dec
jnp
cli
call
or
andl
data16
sub
push
outsb
and
into
in
dec
loop
cltd
add
sbb
xchg
sub
cmp
ljmp
pop
push
cmpsb
minps
or
mov
mov
dec
mov
add
mov
loope
xchg
and
movsl
repnz
cmpsl
cmpsl
jmp
cmp
fistpll
pop
ret
push
aaa
sbb
out
adc
sbb
stc
mov
push
sub
sarb
mov
jbe
or
in
imul
orl
stos
shll
mov
push
or
mov
cmpsb
test
imul
test
lods
icebp
cmp
hlt
push
inc
adc
xor
pusha
mov
inc
loope
mov
aad
addl
adcb
pop
inc
sbb
add
mov
inc
movsl
mov
scas
sbb
in
lret
dec
push
pop
push
push
sub
cmc
inc
call
pop
mov
ret
ja
int3
pop
dec
mov
pop
dec
jmp
cmp
mov
jle
sub
mov
shrl
and
jo
es
or
mov
mov
xchg
out
jmp
push
xchg
stos
lahf
hlt
xor
jmp
mov
cmp
test
adc
adc
int
and
cld
xchg
cmpl
dec
aas
std
xchg
aas
or
mov
outsb
icebp
jmp
loop
lahf
divl
fdivs
mov
inc
arpl
aam
push
adc
pop
xchg
jle
pop
sti
add
cmp
mov
xchg
pop
sub
ret
add
outsl
sub
inc
mov
sbb
pop
jg
mov
movsb
enter
mov
mov
popa
push
jge
push
test
gs
adc
mov
adc
cmpsl
and
rcrl
jnp
or
cmp
fidivrs
inc
sub
cmp
mov
inc
adc
mov
mov
movsl
inc
xchg
sarb
jb
stc
cmpsl
ficoms
mov
xchg
clc
mov
mov
xchg
ret
or
ret
cmpsl
push
dec
cmpsb
inc
sbb
mov
sub
fdiv
sub
scas
addr16
insb
and
scas
mov
jg
movsb
rcr
or
adc
lods
in
pop
jl
mov
or
jno
das
xchg
cmp
addr16
daa
stos
push
push
inc
pop
add
fisttpl
pop
add
sarb
arpl
lret
mov
ljmp
mov
push
mov
dec
loope
shl
mov
jecxz
bound
or
sbb
sub
sbb
mov
sbb
cmp
outsl
lahf
push
dec
pop
je
ss
or
es
out
adc
out
sbb
adc
mov
push
xor
jl
lahf
fcomps
scas
jbe
jp
add
outsl
xchg
in
lcall
shl
adc
xchg
pop
jbe
jg
xchg
fistl
sub
inc
xor
aad
adc
push
mov
jmp
rclb
adc
mov
xchg
push
mov
xchg
inc
in
aaa
loop
sbb
call
or
sqrtps
jbe
cltd
add
imul
xchg
cli
das
movsl
aaa
mov
pushf
add
sub
pop
sbb
cmp
push
gs
adc
adc
popf
jecxz
pop
push
sub
push
mov
mov
inc
cs
push
inc
movsb
dec
imul
repnz
fcomps
mov
mov
pop
and
jp
mov
shlb
xorb
movsb
popf
sbb
pop
in
xor
shll
and
jmp
out
fs
or
add
mov
out
mov
scas
dec
dec
inc
jle
inc
adc
daa
xchg
ss
js
jnp
loopne
push
maskmovq
idivl
adc
push
xchg
push
xchg
cmpb
fstl
mov
mov
sbb
or
dec
and
ss
xchg
sti
jg
cmp
bound
gs
xchg
icebp
xor
push
and
pop
jno
sub
cmpl
decl
out
mov
jne
pop
mov
bound
or
mov
jae
mov
sahf
pop
gs
scas
xor
cmp
pop
add
cltd
pop
pop
lret
dec
inc
fnstenv
sbb
inc
and
mov
pop
stc
jb
dec
std
jns
xchg
sti
cmp
int3
push
fcoms
push
in
jg
xor
jge
lds
jl
fdivs
lds
fistpll
out
mov
cmpsb
pop
lahf
loop
xor
fisubrl
test
clc
adc
cmp
push
sub
enter
mov
cmp
hlt
adc
adc
icebp
shr
std
test
lahf
ret
lret
subl
dec
pop
mov
in
lcall
jecxz
ss
enter
test
cmp
repz
sbb
jne
es
cwtl
add
cltd
pop
mov
pusha
mov
pusha
jmp
push
inc
sti
test
push
imul
sbb
mov
fnsave
popf
push
sarb
adc
pop
xchg
sub
push
push
mov
loope
mov
test
cmp
movsb
dec
jae
movb
pmuludq
mov
and
pop
adc
clc
fs
xchg
das
out
or
sbb
jp
push
in
bound
push
idivl
out
mov
lds
mov
xchg
ret
sub
add
mov
fstps
lods
call
mov
mov
mov
cmp
das
jo
lock
pop
jmp
jecxz
push
adc
in
and
andl
movsb
fbstp
inc
into
lds
clc
pop
or
popa
stc
shr
aam
dec
push
aad
in
stc
jo
insb
mov
fs
sbb
pop
negb
insb
out
imul
and
scas
loopne
push
cmp
and
dec
rclb
sub
test
shlb
cmp
fsubs
push
pop
and
and
aad
sahf
xchg
into
cmpsl
scas
scas
lahf
mov
test
push
loopne
sahf
adc
and
cltd
jmp
xchg
mov
sbb
inc
aaa
lods
mov
fisubl
mov
pop
inc
push
adc
pop
hlt
out
andl
jp
into
jmp
cmp
adc
jo
dec
stos
sub
mov
idivb
jecxz
testl
clc
cmp
subl
int3
in
sub
push
and
sub
add
jge
xchg
pop
mov
fsub
xchg
das
or
mov
cmpl
outsb
mov
int
mov
cwtl
out
pushl
js
mov
adc
int
xchg
xchg
push
sti
int
jp
or
fwait
popf
push
push
outsl
ljmp
out
cmpb
add
or
mov
adcb
dec
rcrb
push
mov
in
or
and
adc
xlat
es
push
orl
xor
jae
mov
jb
pop
inc
pop
les
push
out
ffreep
or
xorl
loopne
lods
sbb
repnz
pop
xchg
push
xor
ret
gs
inc
arpl
sub
inc
test
je
mov
out
inc
data16
inc
daa
add
aad
push
divb
in
xchg
push
or
jp
pop
mov
ss
pop
arpl
jmp
stc
jmp
sbb
fmull
ja
sbb
inc
test
mov
cmp
shlb
mov
lods
xchg
adc
push
xchg
push
or
out
movsl
push
sti
cmpsb
hlt
pop
ljmp
jl
dec
jle
and
cmpsl
add
add
icebp
xchg
inc
pop
in
and
sub
es
into
add
fstps
aaa
cmp
xchg
or
stos
jp
or
sub
mov
rcr
int
cmp
adc
mov
cmp
pop
inc
imul
xorb
mov
xchg
push
and
stc
add
add
es
sbb
in
jnp
aaa
lods
aad
imul
or
js
fucomi
xor
sbb
push
jnp
adc
sbb
sbb
divb
test
fwait
sbb
mov
std
in
mov
dec
outsb
pop
loope
aad
mov
and
cmp
dec
jl
jno
dec
or
int3
push
ja
nop
loopne
jl
inc
mov
pop
sub
jne
shll
mov
fiadds
mov
push
call
rcll
mov
loopne
mov
nop
movsb
stc
insl
mov
mov
or
or
jmp
sbb
dec
pop
std
and
mov
out
or
testb
or
push
mov
fisubrs
mov
jecxz
lcall
dec
popf
xchg
jb
in
adc
sbb
ljmp
es
inc
enter
cmp
popf
cli
sub
mov
aam
std
push
out
ret
test
push
xchg
mov
cmp
fs
xchg
les
adc
ret
popf
or
xchg
outsl
test
lret
ljmp
add
mov
mov
test
sub
movsl
lods
pop
fwait
cmp
jmp
mov
mov
addr16
cmpsb
fidivl
fucom
mov
sub
inc
xchg
adc
xor
fisttpll
sbb
out
and
out
sarb
movl
lret
pushf
xlat
jb
mov
jb
cmp
sbb
and
call
push
iret
xchg
leave
stos
loopne
pop
scas
xchg
mov
call
dec
inc
pop
insl
add
xor
jae
push
js
ds
ljmp
push
jg
jge
and
in
sub
leave
fsubs
inc
push
push
popa
pushl
xchg
scas
xor
xchg
cld
popf
int3
aad
push
aas
or
stos
cmpsb
xchg
jbe
add
sbb
stc
push
cld
popf
jnp
jbe
xor
add
pushf
ficoml
or
mov
in
cmc
jmp
push
loopne
inc
ret
out
push
pop
arpl
icebp
cmp
push
jne
cwtl
jns
cli
stc
jbe
stc
sbb
sbb
pop
push
fisubl
idivb
pop
ret
sbb
jbe
adc
jge
cmp
mov
mov
xor
mov
mov
mov
pop
jns
fistps
pop
std
test
in
lret
jne
sbb
xor
xor
stos
cmp
xor
aas
mov
pop
movsb
jge
mov
sbb
fldt
stos
sbb
mov
lret
es
int3
aas
inc
pop
dec
movsl
and
les
sahf
js
out
pushf
loopne
mov
xchg
js
pop
loop
cwtl
or
inc
cmp
mov
jne
pop
sbb
popf
adc
mov
stos
push
int3
testb
clc
mov
test
sti
adc
xchg
repz
int
fadds
neg
stos
iret
pop
fisubrl
and
int
jnp
pushf
sbb
adc
repnz
pop
outsl
xchg
je
pop
mov
fisubrs
inc
aas
pop
insb
sub
cli
dec
enter
and
cmpsb
or
movsb
into
into
jg
or
fadd
adc
ror
test
pop
xchg
dec
xchg
stos
jne
mov
adc
xchg
xchg
xchg
imul
cmpsl
mov
fsub
decb
popa
daa
mov
and
ret
mov
das
jecxz
adc
xor
jmp
outsl
pop
mov
into
scas
pop
xor
xor
xor
outsl
mov
sbb
mov
imul
dec
les
inc
les
arpl
mov
fisubrl
jge
mov
mov
jp
pop
xchg
cmpsb
imul
inc
mov
test
loope
add
lock
shll
cli
in
xchg
sbb
fs
negl
sahf
pushf
cmp
fistpll
mov
and
sahf
and
repnz
outsb
jnp
xchg
dec
xchg
iret
mov
xor
test
jae
mov
stos
pop
popa
iret
adc
call
lock
cmpsb
dec
loopne
push
dec
push
aad
pop
mov
push
out
adc
in
ja
cmp
add
subb
jle
pop
push
push
sarl
cld
add
or
ret
push
sbb
int3
enter
jge
lret
pop
stos
movsl
or
fdivrs
xlat
jecxz
mov
in
js
in
cltd
cmpsb
fsub
nop
inc
dec
adc
push
idivb
icebp
jecxz
idiv
or
decb
ljmp
sti
sub
inc
lea
inc
sub
pop
xchg
mov
stos
mov
ja
lds
dec
clc
xchg
adc
stc
imul
mov
cld
lock
roll
pop
add
xor
loopne
fs
mov
adc
mov
pop
pop
outsl
test
daa
scas
aaa
mov
call
mov
push
bound
inc
adc
and
jp
aaa
cmp
jle
push
lods
pop
fs
and
mov
mov
xchg
sbb
cmp
loopne
shrb
sub
imul
mov
push
xchg
mov
fs
xchg
lret
dec
ds
mov
mov
fwait
xor
call
sub
push
in
xor
repz
push
cmpsb
mov
xor
pmaddwd
fsubrl
sbb
sub
sub
test
and
xor
mov
stos
iret
decb
lret
add
cli
xchg
adc
xor
rolb
ret
scas
les
xor
test
xchg
std
inc
arpl
mov
daa
pop
imul
imul
push
bound
fcomps
dec
addr16
test
fists
push
or
movsl
mov
sti
rcll
mov
pop
cmpsl
add
xchg
fmuls
or
push
xor
dec
incb
out
mov
aaa
daa
sahf
ss
cmp
jp
jle
or
xchg
pop
test
or
xor
ret
inc
pop
mov
filds
xor
and
dec
sub
mov
adc
mov
daa
rorb
xor
and
pop
call
jae
int3
ds
dec
int3
call
push
test
push
mov
push
stos
sbb
jns
xor
inc
add
mov
sub
cwtl
or
fistpl
fwait
pop
add
mov
fldcw
ret
pop
ret
mov
push
in
or
dec
sbb
mov
out
push
push
inc
les
bound
pop
mov
mov
push
jbe
pop
ja
sbb
mov
arpl
pushf
test
hlt
mov
sbb
js
fwait
inc
sub
jmp
jle
out
pop
mov
icebp
sbb
test
cmp
sub
xchg
cmp
pop
mov
sbb
pop
mov
bound
or
pop
inc
add
mov
lock
and
inc
push
gs
jge
sub
outsl
xchg
jno
pop
sub
push
cs
arpl
enter
push
int3
sub
insl
test
sbb
pusha
add
push
mulb
fnstsw
push
lcall
dec
add
sbb
mov
add
jge
pop
xchg
sub
in
xchg
cmpsb
mov
inc
pop
sbb
sub
imul
xchg
cmp
pop
inc
rclb
dec
fistpll
imul
pop
mov
lret
xchg
xor
out
or
sbb
ljmp
sahf
sbb
jb
pusha
sti
movq
outsb
fstpt
adc
aam
mov
mov
and
xchg
out
push
dec
popa
mov
jnp
pop
addb
clc
insb
sbb
cmp
dec
aaa
out
outsb
cltd
jne
lret
mov
test
xchg
add
sti
fldl
outsl
xor
mov
mov
inc
push
mov
pop
push
dec
sbb
js
mov
xor
test
sahf
add
pop
js
mov
mov
cmp
and
mov
pop
scas
repz
aad
call
aad
mov
fmulp
clc
rcll
and
jo
aam
ret
jge
sub
cmpsl
and
jg
mov
sub
sub
mov
leave
icebp
scas
or
and
es
push
pop
fwait
xchg
out
jp
jl
fildll
in
fcmovnb
inc
mov
inc
bound
or
sar
adc
mov
mov
add
add
repnz
push
or
jns
dec
add
pop
sbb
negb
adcl
cs
push
xor
mov
sub
mov
mov
in
lret
jbe
mov
mov
rcrl
mov
sti
sbb
mov
mulb
pop
mov
jno
sbb
jle
dec
sbbl
stos
es
jo
out
in
addl
cli
repnz
repz
mov
mov
xor
push
adc
inc
or
insl
or
and
scas
loop
js
adc
int
mov
imul
repz
mov
pop
lock
cmp
lods
sub
jns
lea
add
sbb
out
pop
push
decl
sti
inc
or
mov
in
or
pop
inc
pop
call
or
adc
adc
cmp
test
loop
push
fisubrl
subl
aaa
jl
cmp
cmp
popf
sub
inc
flds
mov
push
xor
jb
jg
pusha
or
dec
xlat
add
mov
out
mov
mov
int3
fwait
xchg
mov
mov
xor
and
pop
xchg
push
pop
mov
mov
fwait
mov
dec
scas
fcmovb
jns
divb
adc
xsaves
dec
add
push
inc
mov
rcrb
xor
lods
sub
dec
cs
lcall
clc
inc
sub
mov
pop
push
xlat
cmp
xchg
scas
jnp
andb
pusha
mov
adc
idiv
and
inc
push
inc
mov
popa
cmp
xor
cltd
nop
ja
xor
movsb
leave
stos
out
mov
mov
jae
lea
insl
pushf
mov
push
mov
xchg
xchg
insl
lret
mov
sbb
and
sbb
scas
test
xchg
or
push
shr
push
or
adc
jnp
push
adc
fimuls
pop
or
inc
push
in
aas
push
sub
jns
adc
mov
icebp
out
orl
sbb
sbb
cwtl
jg
enter
fsubrs
inc
ljmp
xchg
loop
and
fadd
jmp
sub
push
outsl
popa
push
pushf
ja
lahf
nop
sbb
sub
xlat
sbb
push
sub
fnstcw
mov
add
and
pop
stos
and
lock
jo
outsl
sbb
pop
leave
inc
lods
fidivs
lret
jbe
mov
xchg
mov
mov
cmp
sti
das
loop
dec
push
sub
fs
inc
dec
and
aad
test
outsb
cmp
outsl
aas
cwtl
pop
mov
loope
cmp
and
mov
pop
push
xor
adc
mov
dec
arpl
repz
shl
jo
shrb
dec
loope
xor
or
cltd
scas
mov
jmp
lahf
test
xor
icebp
cmpb
test
adc
mov
inc
pop
adc
mov
push
and
sbb
jns
adc
clc
fldenv
inc
mov
mov
mov
pop
bound
jl
push
cmc
addr16
cmp
cmpsb
pop
xchg
add
xchg
inc
add
daa
push
repnz
fwait
sub
mov
xor
cld
xchg
sub
jbe
in
or
add
add
mov
cwtl
out
mov
dec
leave
inc
cli
les
jmp
aas
lret
inc
std
das
idivb
sub
loope
pushf
out
orl
stos
into
stc
je
out
push
pop
ja
rclb
mov
dec
pushf
xchg
inc
out
subl
mov
movsl
jg
mov
sbb
pop
fidivl
jo
or
xchg
add
ljmp
jle
int3
xchg
out
cmc
cmpsb
push
stos
and
ja
jne
inc
imul
mov
xchg
xor
cmpl
rcll
ss
in
lods
or
xor
sti
jo
mov
push
cli
fisubs
adc
out
mov
mov
push
insb
fsubp
cltd
xchg
sbb
push
mov
lcall
sub
push
mov
cs
aaa
insl
test
pop
push
xchg
xor
or
dec
dec
jae
dec
pushf
and
sub
js
fmulp
jl
xlat
and
out
fcmovnu
cmpsb
ja
cs
or
push
or
and
fcmovb
jns
dec
mov
sbb
cmp
mov
out
sahf
inc
imul
shll
loope
and
insl
out
repnz
mov
xor
push
int
jle
xchg
fidivl
mov
sbb
sbb
cmpsl
aas
shl
mov
jbe
xor
and
das
inc
dec
movsl
imul
js
dec
jl
cmc
sbbl
xor
sub
jecxz
sub
or
sahf
mov
es
sti
shrl
mov
fsubrs
push
lods
popa
lods
jg
adc
mov
adc
jg
push
fdivp
mov
push
inc
ret
mov
xchg
dec
mov
mov
icebp
inc
fisttpll
stos
lcall
mov
xchg
mov
outsb
fimuls
imul
cmpsb
xor
es
mov
dec
pop
xor
lret
or
jl
outsl
loope
push
jbe
mov
shll
scas
test
and
sbb
shrd
and
xor
cmp
sub
lods
lds
cmc
push
test
mov
ja
xchg
movsl
outsb
shlb
popf
daa
pusha
pop
aas
push
and
xchg
notb
cmpsb
mov
movsb
es
sbb
adc
movsb
push
lods
mov
or
pop
daa
mov
pop
and
pop
movsl
clc
lea
lcall
enter
rclb
leave
sbb
or
bnd
xchg
pop
shll
cmpsb
push
pop
xor
lock
insl
sbb
repz
xchg
sti
mov
enter
jl
push
lea
popa
dec
call
push
addr16
xor
xor
loop
push
sbb
in
mov
inc
push
xchg
mov
inc
adc
mov
daa
jbe
push
rolb
loope
xchg
adc
cmp
jg
mov
insl
shl
ret
ds
daa
ficoml
push
sub
cmp
imul
cmp
push
xor
cli
mov
pop
inc
sub
push
jno
mov
ja
inc
adc
sahf
aas
jnp
dec
push
jg
add
jmp
loop
push
cwtl
inc
add
jae
popf
sub
xor
adc
ljmp
inc
test
mov
jns
fbstp
ljmp
mov
outsb
mov
notl
mul
pop
data16
push
sub
lret
xchg
push
out
or
xchg
test
jmp
push
cmp
into
xor
fists
inc
cmp
and
xor
repz
out
inc
add
daa
lds
and
xchg
fisubl
pop
jnp
test
leave
inc
ret
mov
popf
test
sub
in
rolb
mov
mov
div
mov
loope
imul
jae
mov
inc
or
jne
dec
push
mov
nop
dec
inc
incb
sbb
xchg
xor
mov
mov
cmpb
repz
ret
shr
xor
jnp
push
popa
jl
inc
inc
jecxz
or
cmp
aas
or
lret
hlt
xor
xchg
push
stos
xchg
and
sbb
aaa
inc
pop
cmp
jns
subl
sbb
adc
mov
cs
jae
idivb
inc
push
mov
in
lret
add
std
cmc
into
sub
jmp
xor
push
in
loope
adc
fldt
rol
lods
dec
push
je
outsb
ds
mov
cmp
adcl
mov
ss
mov
add
sarb
or
mov
xlat
cmp
sub
and
pminub
loop
cmp
fimull
cmc
ret
and
cmpsl
jnp
add
or
sbb
scas
jp
add
adc
mov
nop
mov
add
push
jns
mulb
inc
mov
xchg
data16
aad
std
push
scas
setns
incb
pop
aam
sbb
pop
add
pop
out
cli
lock
imul
mov
jne
sub
xor
loop
loope
jecxz
stos
add
test
mov
lcall
adc
ror
mov
dec
out
xchg
jb
adc
inc
dec
loop
push
dec
adc
out
nop
lea
lcall
cmp
xchg
push
fwait
aam
cmp
inc
in
mov
stos
imul
insb
mov
popf
cmp
subl
int3
mov
clc
shrl
xor
fsubrs
ljmp
xor
adc
xchg
mov
loope
inc
xchg
fcomip
and
rcr
sub
in
mov
in
les
out
decl
sbb
add
jle
cmp
sub
out
stos
ja
pop
fisubl
xor
push
out
cmp
push
leave
push
popa
lods
pop
add
jns
mov
imulb
sbb
test
and
sbb
dec
cmp
shl
cmpsb
pop
adc
jl
das
dec
jge
add
out
js
pop
xor
sbb
mov
mov
test
mov
pop
inc
dec
adc
xor
xor
mov
sub
lret
or
xchg
xchg
xchg
add
inc
cli
jge
aas
aam
inc
push
mov
in
jmp
jb
lods
into
stos
jmp
or
push
push
or
outsb
dec
xor
les
adc
shlb
test
fiadds
test
test
insb
sarb
lods
adc
ja
mov
xchg
mov
scas
xchg
cmp
jnp
pop
je
mov
lret
lahf
test
pop
push
cld
fcomps
sbb
lds
dec
je
push
inc
ss
shl
add
and
cld
bound
bound
iret
add
xchg
aam
and
dec
fsubr
stc
mov
ret
pusha
cmp
imul
out
inc
test
xchg
adc
sbb
bound
test
mov
push
push
incl
jge
fcmovbe
sub
aad
xlat
push
cmp
cmpsb
shlb
jae
jo
mov
cmc
into
dec
mov
js
ficompl
int3
cmpsb
ds
in
jecxz
int
fcmovbe
and
test
rorl
fwait
sub
or
aaa
icebp
dec
xchg
xchg
adc
mov
int3
imul
jle
push
sub
loop
lds
cmpsb
pop
dec
cwtl
outsb
adc
int3
repnz
std
sub
arpl
cwtl
adc
add
xor
xlat
movsb
nop
mov
push
insl
insb
jbe
lret
fstpl
inc
jo
pop
js
das
aad
inc
pop
fmuls
sub
sbb
imul
cli
mov
inc
int3
cmp
xchg
lods
mov
js
lods
in
xor
xor
adc
aas
lods
cmp
ffree
das
mov
push
and
mov
hlt
icebp
xor
popa
stos
push
cld
push
push
and
jge
fistpl
push
bound
rorl
adc
add
inc
lods
int
ret
fisubs
int3
mov
mov
ds
jg
dec
dec
bound
mov
cmp
mov
xchg
or
pop
insb
adc
je
add
jb
mov
repz
adc
and
je
enter
jo
stos
aas
mov
and
cmp
mov
pop
xchg
jb,pt
test
mov
inc
outsl
incl
outsb
in
mov
in
lods
out
loop
mov
rorl
mov
fwait
cwtl
movsb
push
rolb
mov
jp
jle
call
jmp
inc
fcomi
jb
movsb
pop
xchg
adc
adc
shlb
push
cmp
je
pop
pop
xor
icebp
sbb
or
sti
cmp
adc
lds
and
and
adc
xchg
sbb
adc
adc
push
mov
andb
cmp
ljmp
rol
add
adc
mov
fadds
xchg
test
cmp
and
icebp
push
inc
stos
pop
bound
mov
out
and
sub
icebp
mov
jb
loopne
xchg
sub
movsl
mov
inc
lret
push
xchg
jmp
jl
xor
add
gs
insl
mov
mov
fisubrl
jecxz
in
push
clc
mov
ja
jne
pop
testl
cmp
ret
mov
ret
dec
xchg
cmp
sub
adc
mov
ret
pop
xor
adc
movsb
xchg
mov
mov
pop
dec
scas
and
push
mov
imul
dec
cmpsl
mov
xchg
cmp
lret
test
mov
sub
pop
sub
mov
xchg
out
fstps
push
rcll
dec
dec
adc
test
filds
mov
inc
ljmp
mov
cmp
mov
jbe
out
add
filds
jae
dec
mov
aam
gs
cs
popa
lock
xchg
cmp
insl
aaa
sbb
ret
or
or
fnsave
je
xor
add
mov
xor
push
pop
and
outsb
leave
rcr
add
lcall
lret
lahf
sbb
mov
stos
pop
xchg
jnp
mov
mov
pop
xchg
mov
adc
cwtl
adcl
loopne
add
push
popa
xor
pop
xor
inc
cli
dec
pop
sbb
shrb
mov
mov
std
int3
pop
into
mov
adc
push
push
push
add
push
inc
movsl
jge
mov
cmp
in
or
scas
scas
lahf
ja
mov
mov
mov
sbb
in
inc
scas
es
aam
popa
dec
push
mov
fidivl
sti
xor
adc
lock
cmc
push
call
outsl
andl
pop
and
scas
inc
hlt
repz
mov
xchg
into
cmp
loopne
add
sub
jo
sbb
iret
adc
pop
dec
int
mov
dec
cmp
adc
bound
adc
cmpsb
jp
and
in
xchg
or
jp
jg
push
xchg
aad
xchg
sbb
cmovo
jae
aad
cmc
pop
dec
pushf
sbb
adc
mov
aam
xorb
xor
popf
sbb
pop
in
repz
lahf
jl
testb
mov
sbb
dec
cld
imul
mov
hlt
cmc
mov
adc
inc
ss
push
ret
loop
sub
and
les
rcll
jecxz
xchg
mov
mov
and
lahf
xchg
lret
out
mov
sbb
mov
pop
mov
sub
xchg
and
std
or
scas
inc
mov
and
repz
inc
or
xor
push
xchg
jecxz
movsb
fists
imul
dec
pop
rorb
pop
or
jge,pn
and
test
imul
das
ljmp
sbb
sarb
je
jle
push
inc
icebp
incb
cmp
sub
xchg
mov
hlt
push
jecxz
cmc
push
pop
aaa
mov
sbb
scas
inc
dec
repz
inc
nop
xor
fnstsw
sbb
mov
xor
enter
sub
xchg
mov
inc
mov
shl
add
mov
mov
xchg
pushf
daa
fnstcw
dec
pop
add
cld
pop
pop
pop
dec
imul
inc
xor
push
push
iret
mov
in
cwtl
pop
inc
lock
xor
push
add
js
test
ret
in
movsl
push
sbb
imul
mov
into
push
jl
mov
insb
push
ja
lock
pop
adc
push
or
inc
in
pushf
mov
adc
mov
add
sbb
mov
dec
in
lock
mov
sub
faddl
loopne
cli
mov
sub
stos
sbb
adc
call
lds
popa
popa
xor
push
xchg
jp
enter
and
mov
sahf
dec
push
jmp
cmpsl
cmp
adc
mov
addps
sbb
and
mov
sub
jnp
ja
mov
stos
dec
adc
pop
push
cli
in
pop
xor
mov
xchg
inc
roll
xlat
cli
fwait
dec
jecxz
xorl
inc
and
push
jne
xchg
mov
push
dec
inc
sub
mov
inc
jae
lds
loopne
out
jl
push
call
dec
and
out
std
inc
insl
int
shl
mov
pushf
sbb
insb
cld
test
mov
jbe
cmp
and
out
mov
xlat
dec
loopne
inc
cwtl
xchg
dec
scas
cmp
mov
ja
mov
inc
mov
add
test
pop
sbb
fcomip
mov
out
jns
inc
pop
pop
out
inc
scas
in
lret
pop
or
dec
mov
cli
in
sub
mov
sub
scas
lret
xchg
lods
in
repnz
xor
lcall
clc
mov
shld
xor
adc
xor
daa
xlat
inc
inc
popa
nop
pop
repz
mov
movsb
cs
cli
daa
xchg
adc
push
or
lahf
pop
jb
fcmovnb
imul
int
mov
jp
fisubl
inc
shl
fs
push
mov
xchg
xorl
lods
sub
cmp
clc
dec
test
cli
repz
cmp
lret
ja
mov
inc
sbb
inc
xchg
outsb
loopne
dec
cld
sbb
xor
fwait
out
loope
mov
push
stos
stos
dec
nop
or
mov
add
outsb
jbe
dec
cmpsb
iret
mov
pusha
inc
dec
xor
fwait
sub
bound
and
sub
cmp
xchg
add
mov
mov
sbb
daa
push
outsl
jns
dec
cmp
dec
push
jle
dec
inc
jb
xchg
adc
mov
test
lods
dec
or
out
fnsave
pop
inc
or
push
arpl
aad
push
sbb
cmp
jecxz
out
cmp
mov
addl
xchg
in
lods
or
jne
das
mov
lods
push
jo
rolb
imul
and
jecxz
jnp
cmp
imul
negl
sbb
adc
rol
test
popf
mov
jl
or
icebp
cmp
cmp
push
push
hlt
or
cmp
cmp
inc
jg
lods
cmpsl
jb
xchg
insb
jno
fincstp
jo
lahf
add
test
and
push
or
mov
es
pop
cmc
lods
push
and
and
test
mov
scas
sbb
cmp
stos
sub
rcl
ds
addr16
pop
ja
add
stos
daa
out
push
pop
in
inc
dec
pop
test
mov
outsl
jmp
lcall
inc
fwait
jb
cmp
test
movsl
push
ljmp
outsl
testb
xchg
jbe
dec
xor
push
cli
fcmovu
mov
and
aaa
inc
in
outsl
call
mov
subl
inc
add
stc
les
dec
inc
mov
mov
push
faddl
pop
pop
inc
loop
outsl
movsb
and
unpcklps
imul
sub
out
mov
leave
cwtl
xchg
mov
mov
ror
insb
mov
inc
and
xor
xchg
test
adc
mov
sbb
mov
aas
cmp
inc
jnp
push
mov
insl
and
sarl
out
adc
leave
shrl
inc
mov
rcl
das
stos
push
add
leave
inc
loopne
in
pop
out
push
jl
mov
jbe
sub
lret
dec
jl
push
and
inc
mov
sahf
cmpsb
cmp
inc
jp
adc
loope
ret
mulb
daa
add
mov
imul
push
or
popf
mov
pop
pusha
mov
and
aam
dec
sub
jl
dec
inc
das
mov
call
adc
sub
push
movsl
add
jnp
sbb
lahf
xor
fimuls
nop
cmp
daa
sbb
orb
popa
pop
int3
data16
call
mov
cmova
push
jne
mov
sahf
and
cmp
jecxz
fwait
pop
add
adc
cmp
cmp
push
mov
sarb
cmp
sbb
lcall
jmp
rol
mov
out
lods
jmp
stos
sub
rcll
iret
ljmp
xchg
push
mov
es
stos
dec
mov
push
cwtl
adc
aas
aaa
sbb
mov
push
sub
incb
cmpsb
jle
cmp
sub
pop
dec
popf
pop
rolb
int3
insb
lcall
pop
imul
leave
lods
je
inc
testl
xor
mov
aas
mov
test
pop
cmc
push
int
cmp
arpl
push
psrlq
push
lds
mov
push
out
sahf
sbb
add
or
inc
neg
jl
mov
mov
insl
scas
adc
cmp
mov
pop
add
push
pushf
cld
lea
pusha
fs
xchg
lret
test
jecxz
shlb
test
aam
jmp
pop
push
dec
mov
sub
inc
adc
mov
shlb
enter
add
sub
lret
pop
adc
xchg
adc
adc
out
mov
or
hlt
sbb
pop
dec
xchg
xor
stos
push
lods
push
cmpb
sti
in
out
mov
lcall
movl
mov
fstpt
stos
insb
push
jle
dec
xchg
cmp
aam
enter
add
push
xlat
aaa
xchg
rclb
cld
cmc
dec
cwtl
js
xor
pushf
add
mov
xchg
dec
subl
into
cmp
ds
test
cmpsb
jne
es
mov
aas
rolb
test
pop
dec
mov
outsl
push
dec
adc
mov
xchg
sahf
sub
jmp
cmp
in
fcom
rcrb
out
push
mov
adc
mov
mov
fsts
fisttps
push
call
jns
sbb
nop
jecxz
stc
lret
addl
lock
fbld
push
leave
add
imul
adc
scas
and
push
cmpb
fpatan
lods
sub
sub
xchg
mov
mov
mov
inc
scas
dec
mov
mov
xchg
js
xor
mov
pop
stc
dec
rcrb
jmp
mov
or
lahf
mov
add
out
sbbb
cmp
cltd
jl
jle
adc
mov
movsb
imul
cmpsl
mov
insl
and
dec
imul
mov
inc
and
mov
sub
adc
push
aam
or
in
jno
mov
fs
fsubs
dec
mov
or
mov
in
cmp
je
and
xor
jae
adc
js
or
aaa
daa
cmp
sub
shrl
xor
pop
scas
mov
push
mov
mov
pop
repnz
jge
sub
lahf
adc
jb
pop
mov
adc
iret
daa
xchg
outsl
fidivl
cs
cwtl
sub
cmpsb
popa
mov
push
adc
andb
sbb
pusha
fcoml
aam
pop
inc
adc
divl
jns
clc
sbb
out
sub
jo
shll
add
push
push
jne
repnz
push
dec
out
jl
rolb
lret
cmp
movsl
dec
data16
sbb
daa
cwtl
mov
pop
sub
add
add
insl
cmp
cs
and
fsub
out
scas
fidivs
xor
mov
jnp
mov
pushl
aam
ja
add
filds
xchg
push
adc
and
mov
pusha
sub
lret
adc
xchg
or
adc
ret
cwtl
dec
fwait
fwait
pop
pop
cmp
cmp
popa
movsb
cs
cmc
ljmp
lods
xor
es
movsl
dec
outsb
mov
not
sub
repz
sbb
arpl
sarb
ds
xor
push
test
mov
or
inc
and
loop
add
lods
cmp
or
sahf
cmp
scas
lock
es
in
sub
mov
je
mov
and
push
sbb
mov
loopne
jge
lods
lret
push
cltd
xchg
push
xor
orb
bswap
fs
jg
cli
mov
sub
or
inc
mov
in
lods
mov
jae
mov
push
mov
dec
aaa
sbb
lret
and
mov
repz
add
cmpsb
leave
das
int3
mov
push
scas
xchg
xchg
movaps
ds
das
jecxz
lods
add
aas
iret
xlat
jnp
inc
dec
outsl
xor
adc
dec
mov
pop
inc
xchg
lea
mov
cmc
push
mov
adcb
fsubr
js
cltd
push
imull
inc
icebp
rolb
jle
xor
dec
clc
push
lods
aas
test
test
repz
sub
inc
into
xchg
pop
jb
aaa
pop
pop
dec
shl
ds
push
or
mov
pusha
jmp
add
cmc
add
add
mov
arpl
jno
je
push
push
jle
push
pop
mov
sti
and
pop
mov
pop
mov
cmp
mov
mov
lods
ja
pop
mov
sahf
sub
mov
lahf
mov
xor
out
push
mov
ret
pop
fnstsw
adc
sbb
cmp
mov
in
mov
and
nop
ds
in
push
pop
in
in
mov
fs
in
or
popa
mov
mov
inc
les
mov
daa
xchg
or
inc
hlt
fstps
stos
push
test
sbb
pop
das
pop
les
lds
imul
pushf
aam
xor
scas
ds
inc
int
das
jmp
jne
hlt
jg
mov
mov
mov
inc
loopne
mov
cmp
or
iret
cmp
fstps
inc
dec
daa
inc
pushf
sarl
loope
jae
jge
outsl
and
push
adc
xor
decl
pop
insl
adc
repnz
insb
sbb
jns
aad
aaa
mov
mov
out
mov
inc
mov
call
icebp
adc
xchg
out
scas
or
or
xchg
push
lock
or
sub
insl
lea
mov
xor
jae
addl
sub
push
mov
idiv
ds
rcll
inc
xchg
pop
inc
inc
lds
mov
std
not
mov
pop
and
enter
cmp
cmpsb
repnz
rcll
mov
test
loope
nop
fdivp
ljmp
jo
imul
mov
mov
adc
sbb
pop
fnstsw
or
insb
test
add
jbe
mov
cmpsb
aaa
ja
in
mov
div
pushf
popf
pusha
xchg
sub
nop
sbb
sub
aaa
jmp
jns
and
mov
aaa
jmp
sbb
jnp
fdivs
arpl
rcl
adc
mov
lock
mov
pop
or
push
sub
xchg
jae
int3
add
add
lea
enter
repz
loopne
adc
popa
cmc
jecxz
xor
inc
rcr
data16
out
push
enter
pusha
mov
arpl
adc
mov
mov
cmpsl
jb
xchg
push
add
xchg
xchg
int
push
int3
inc
pop
mov
ss
aaa
pop
mov
or
stc
mov
jecxz
ret
fwait
int
dec
push
aas
and
add
jne
jbe
popf
xor
js
push
mov
lea
ret
aaa
in
iret
dec
jl
stos
movb
jo
lock
je
bound
mov
jmp
adc
jecxz
adc
rorb
and
jge
loop
sub
stc
ja
sbb
jbe
mov
mov
dec
sbb
add
mov
pop
xchg
enter
push
fldl
ret
iret
jno
lock
rorb
sti
daa
dec
clc
iret
aas
pop
cmp
je
or
subl
cwtl
hlt
dec
dec
lods
jmp
pop
push
adc
out
dec
insl
in
bnd
mov
outsl
xor
jmp
sbb
mov
in
lret
mov
xor
mov
sbb
lcall
jle
xchg
adc
dec
shll
inc
sub
in
add
ret
aad
mov
orl
pop
or
jecxz
xor
jle
jno
fabs
mov
movsb
mov
pop
shrb
mov
out
jmp
mov
pop
sbb
xchg
jns
jmp
cs
xor
ret
es
nop
aas
imul
and
mov
idivb
sub
outsl
sti
lahf
ljmp
mov
inc
dec
push
inc
jae
xchg
outsb
into
insb
sbb
leave
arpl
jl
rorb
xchg
shlb
dec
cmc
pop
loopne
lcall
mov
cli
mov
inc
leave
outsl
out
dec
jae
and
pop
push
jg
ja
int3
ret
mov
jno
pop
ljmp
adc
mov
dec
inc
cwtl
testl
adc
jnp
arpl
sbb
cmp
mov
adc
cmp
push
daa
mov
mov
jo
mov
sahf
pop
dec
cli
push
mov
xor
mov
xor
outsb
sbb
mov
xchg
sub
imul
das
cmpsb
and
aam
stc
fsub
gs
push
pop
imul
mov
ldmxcsr
into
mov
lods
repnz
je
jmp
sahf
add
scas
jg
mov
pop
dec
idiv
mov
inc
test
mov
cld
adc
clc
sub
mov
insb
sub
sbb
rcrl
arpl
sub
or
push
lret
dec
stc
cs
addb
xor
stos
sbb
adc
je
adc
shlb
stos
inc
sub
clts
add
lods
movsl
xchg
mov
aad
mov
pop
divb
mov
cmp
inc
mov
mov
inc
movups
cwtl
pop
imul
es
aam
scas
rcr
sub
addr16
rclb
mov
daa
mov
repnz
dec
jp
add
pop
jle
aam
scas
div
dec
sub
adc
mov
lcall
cmp
push
cmp
push
lock
push
xchg
mov
sub
out
shl
stc
or
add
je
pop
int
inc
push
mov
and
xchg
dec
mov
lea
hlt
pop
setbe
dec
lret
xor
stc
mov
cwtl
pushf
ljmp
jmp
mov
dec
push
rcrb
and
inc
fisubs
imulb
pushf
sbb
repnz
xor
orb
out
arpl
lea
xchg
mov
sbb
jmp
shr
mov
mov
inc
frstor
and
sarb
or
mov
sbb
out
dec
call
std
popf
sub
cmpsw
xlat
and
dec
add
popf
ljmp
mov
fwait
call
pusha
mov
mov
sarl
and
adc
inc
leave
mov
int
xchg
fists
inc
inc
scas
and
das
dec
mov
and
cltd
sbb
into
pop
cmpsb
lock
test
jae
clc
xlat
push
inc
jae
sti
cmp
pop
cmp
jns
dec
xchg
flds
dec
test
pusha
sbb
add
invd
pushf
jl
push
call
xor
ljmp
cmp
mov
shlb
pop
add
cmpsl
cwtl
jbe
inc
cld
adc
sbb
push
adc
clc
mov
push
mov
sar
fsubrs
fsts
xchg
xor
pop
insb
pusha
xor
popf
aad
mov
inc
int3
xchg
cmp
and
xor
jp
cli
jg
js
dec
lret
lret
fs
shll
cmp
fdivl
sahf
repnz
fcoms
mov
xor
mov
jl
push
sub
out
and
sub
aam
lcall
movsb
fnstsw
mov
cmp
lahf
add
ficoml
ljmp
ret
stc
add
and
lds
insb
pop
xor
sbbb
popf
or
daa
aam
shl
inc
shrl
ret
push
stos
cld
inc
xchg
sub
mov
xchg
pop
inc
or
push
mov
and
inc
jo
pop
aaa
bound
mov
add
cmp
adc
mov
and
push
ror
mov
flds
and
cmp
mov
insl
lret
xchg
push
add
xorl
stos
add
or
mov
shlb
mov
out
pushf
out
aaa
pop
mov
xchg
mov
cmp
cld
int3
orl
inc
aam
and
add
fucompp
add
and
push
push
push
ljmp
test
and
aaa
sub
jae
adc
fcmovb
mov
or
in
push
jns
je
mov
mov
cmp
mov
push
cli
loopne
daa
sbb
or
aad
andb
jae
mov
xchg
jb
sbb
pushf
jnp
cmp
push
dec
int
cmp
jns
lods
pop
out
out
pop
xor
mov
in
negb
popf
push
mov
movsl
sti
pushf
sub
add
sbb
popa
f2xm1
inc
or
inc
sarl
mov
or
test
aad
dec
mov
aam
test
js
jns
and
pop
mov
sti
push
rcrb
jns
dec
ja
dec
adc
ret
aad
das
push
out
clc
adc
out
sub
pop
imull
repnz
sub
movsl
xor
push
adc
frstor
lahf
ret
int3
mov
push
sahf
movsl
or
fmul
adc
adc
loopne
shr
cwtl
inc
xchg
inc
clc
test
icebp
mov
pusha
es
pop
fstpl
cld
clc
lds
loopne
push
out
xchg
pop
mov
clc
nop
and
dec
loop
movsb
mov
stos
addr16
cmp
repz
aas
pop
cmp
repnz
jge
jne
adc
mov
mov
in
jecxz
xchg
leave
rcrl
sbbl
lcall
mov
inc
mov
sbb
negl
popf
mov
mov
je
jmp
mov
in
mov
sbb
inc
push
pop
ja
fbld
mov
aaa
mov
aas
cmp
push
sahf
pusha
mov
in
xor
nop
xor
and
arpl
sub
dec
sub
add
arpl
clc
sub
out
xor
mov
and
adc
and
mov
repnz
lret
scas
pop
insl
push
mov
dec
mov
dec
cli
cmp
sub
inc
add
cli
loope
or
or
xor
data16
xor
mov
xchg
std
fsubrs
iret
outsb
push
rol
cld
test
adc
das
adc
dec
xor
push
cli
aam
inc
cwtl
leave
mov
sub
mov
or
aaa
xchg
sbb
gs
test
pop
stos
or
iret
or
and
loope
add
adc
pop
push
sbb
fildll
pop
mov
mov
mov
imul
push
add
stos
dec
imul
mov
adc
decl
ljmp
pop
clc
arpl
hlt
sbb
cli
nop
in
call
add
loope
mov
sub
test
sub
push
jle
mov
dec
mov
out
mov
inc
loopne
cmp
orl
push
lock
push
sbb
fistpll
je
mov
xchg
mov
pop
mov
lods
nop
mov
mov
pop
lock
sub
cmp
lds
add
xor
sbb
pop
ss
add
xor
jp
mov
jl
subb
mov
loopne
mov
mov
sub
js
xor
ja
dec
push
movsb
and
xchg
jl
int3
imul
ja
push
mov
in
or
leave
cmp
and
mov
pop
mov
testb
push
in
add
popf
arpl
arpl
ja
mov
dec
add
dec
bound
lods
in
jmp
pushf
mov
add
loope
das
cmc
adc
mov
inc
rolb
dec
jge
push
shll
scas
pop
xchg
fs
pop
add
popa
pusha
pop
pop
xor
icebp
or
and
es
js
out
jge
mov
sbb
bound
stos
jae
mov
sbb
rorl
decb
mov
dec
sbb
add
out
popf
mov
inc
in
cmp
addr16
repz
repnz
pop
in
sub
jne
mov
scas
adc
push
add
jl
pop
popf
loope
sub
std
jno
dec
fldln2
into
lods
pop
mov
cmp
jno
adc
out
les
js
cmp
and
pushf
test
inc
insb
testb
xor
jg
jo
movsb
push
sar
jg
add
in
mov
mov
imul
gs
stos
icebp
nop
fdiv
cmp
mov
ret
je
push
inc
loopne
adc
push
xchg
xor
data16
loope,pt
test
pop
inc
xchg
sub
outsl
jne
jle
je
arpl
inc
test
mov
repnz
iret
cltd
add
dec
shlb
in
aas
push
movsb
cltd
jnp
sub
dec
hlt
cmpl
sub
jae
pop
jecxz
lahf
mov
push
mov
xor
icebp
mov
mov
sub
sti
mov
idiv
jnp
cmp
aaa
scas
sbb
div
cwtl
lcall
fwait
imul
dec
gs
inc
orl
and
add
sbb
mov
xor
xor
push
sarl
mov
aad
movsl
sbb
push
aad
sti
xchg
and
adc
jle
mov
push
js
lods
push
or
push
fildl
dec
fwait
mov
pop
roll
jo
das
vxorps
add
fwait
cmp
nop
repnz
and
inc
out
sub
clc
repnz
addb
lahf
je
push
aas
pop
hlt
repnz
mov
call
test
push
je
inc
push
pop
ficomps
pop
or
cwtl
jo
orl
icebp
int3
sub
ret
adc
imull
cmp
daa
lret
xchg
pop
xchg
iret
cmp
mov
cli
fdivl
pushl
push
rorb
lret
aas
jmp
mov
pop
pop
push
lods
in
mov
or
inc
add
cmc
mov
inc
cmp
rcrb
in
push
repz
imul
ret
push
push
and
and
in
xchg
jecxz
adc
adc
sbb
aad
dec
and
dec
loop
dec
push
repz
vcmppd
mov
aaa
decb
les
jmp
mov
inc
cmc
push
sahf
mov
das
mov
cmp
or
xchg
das
jnp
pop
push
cmp
push
mov
movsb
lods
jl
sahf
dec
cmp
dec
add
lcall
mov
jno
jp
out
mov
mov
jae
fstp
out
rolb
movsl
je
add
jl
dec
rcll
jge
clc
hlt
aas
xor
cmp
fcoms
sub
or
push
cmp
pop
sti
subl
push
xor
loopne
pusha
int3
xchg
inc
mov
or
cmpsb
or
addr16
push
inc
jbe
popa
mov
inc
or
inc
cltd
stc
lret
or
and
push
dec
repnz
jo
sub
stos
xlat
jbe
and
inc
lock
mov
es
adc
test
ja
std
movsl
sub
mov
mov
xor
pusha
in
in
cmp
jnp
xchg
lea
out
pop
add
lods
test
jmp
arpl
jmp
xchg
or
hlt
or
push
icebp
jp
cmp
fadd
data16
jg
orb
je
mov
fldenv
push
add
cmp
hlt
mov
leave
jne
dec
lock
ret
push
jnp
sarl
xchg
push
or
dec
cli
in
outsb
popa
out
xchg
aas
scas
test
sbb
cltd
sbb
sbb
ljmp
sub
out
fcoms
jmp
sbb
imul
sub
or
lods
int
and
mov
ljmp
push
scas
mulb
rcll
jnp
mov
mov
clc
dec
ljmp
or
sub
and
clc
aas
jle
sub
cmp
jg
push
xor
testb
fildll
fwait
adc
lods
test
cmpsl
clc
lret
or
add
mov
sbb
jb
push
icebp
mov
mov
shl
dec
sub
outsb
lods
hlt
xchg
dec
mov
aad
inc
sbb
mov
add
sbb
jmp
mov
lret
adc
sbb
add
lret
fs
xchg
jmp
fwait
mov
adc
and
out
jg
xchg
xchg
and
adc
enter
xor
mov
and
mov
xor
xchg
insl
push
adc
bound
mov
addb
jmp
dec
sbb
cmpsl
xchg
stos
inc
sub
out
lods
loopne
test
dec
mov
inc
stos
fists
cmp
into
cs
test
and
shll
imul
cltd
jbe
jns
cltd
push
mov
mov
or
iret
sbb
adc
lcall
and
sti
test
jo
inc
mov
push
testl
xchg
add
add
outsl
dec
scas
dec
out
sub
mov
xchg
hlt
cmp
loop
sub
in
sub
dec
sub
clc
mov
dec
sarb
xor
sar
sbb
int3
or
je
dec
into
or
jmp
arpl
xchg
dec
out
pop
rcrl
jae
clc
jns
stos
negl
fsubrs
cwtl
or
jg
test
mov
gs
imul
mov
in
pop
inc
or
cmpl
js
cmp
adcb
cwtl
sbb
sbb
es
pop
xchg
pop
dec
inc
inc
xor
xchg
insb
add
in
dec
ret
fcmovnbe
pusha
sbb
movsl
out
cwtl
sub
test
adc
fwait
cld
popa
mov
int3
jne
test
out
sahf
cmpl
mov
add
hlt
cmp
aaa
mov
daa
mov
in
out
inc
cmp
fidivrl
cmp
inc
insl
inc
jl
sbb
dec
cmp
push
cs
lea
leave
gs
fidivrl
push
push
adc
sbb
cmp
pop
pusha
push
ror
sarl
dec
mov
xor
outsb
mov
mov
je
movsb
loop
imul
jg
jns
mov
cmpsl
stos
mov
xor
jno
push
mov
mov
mull
push
pop
ret
cwtl
sarb
mov
lahf
mov
inc
and
sbb
xchg
adc
mov
pop
sbb
shr
test
fmuls
inc
jecxz
jae
test
aas
push
inc
xor
and
clc
xchg
in
fwait
bound
aad
jg
rolb
loopne
testb
ljmp
in
aas
loop
stos
cmpsl
stos
outsb
int
call
stos
std
adc
xor
jnp
andb
data16
sbb
lretw
push
adc
xchg
movsb
cli
sub
jns
xor
mov
fildll
mov
mov
xor
push
cmp
xor
test
fsubl
push
jecxz
xchg
idivl
jns
stc
mov
xchg
cltd
mov
je
dec
iret
jmp
movsb
sub
dec
stos
sti
add
cmp
inc
jns
jmp
xchg
lret
jae
test
mov
stos
pop
nop
mov
jo
push
adc
loopne
stc
into
cltd
ret
xor
xor
sub
inc
jno
push
cmpb
push
leave
cmp
inc
mov
mov
bound
movsb
or
fwait
stos
loope
xchg
inc
xchg
or
pop
xor
cmp
in
adc
aam
cmpsl
test
xchg
cmp
es
inc
rorb
mov
push
enter
sti
or
jp
adc
adc
rorb
popa
inc
adc
fs
and
pop
sub
int
sub
in
divb
pop
in
mov
sahf
fdivs
cmp
pop
inc
into
jnp
jmp
pushf
mov
inc
or
cmp
lahf
fisubrs
inc
data16
xor
js
pop
ja
aad
adc
xchg
cmpsb
mov
push
or
pushf
decl
inc
orb
sub
pushf
push
inc
fimull
add
xor
test
xor
aas
enter
cmp
or
pop
sahf
jl
lret
shrb
es
stos
dec
shrb
ss
xchg
xchg
sub
sub
jmp
adc
data16
jno
lods
mov
loop,pt
icebp
xor
lahf
movsb
insl
push
adc
enter
fucomp
xchg
movsl
out
pop
mov
stos
popa
mov
and
xor
jbe,pn
int3
out
decb
push
jp
js
push
sarb
inc
iret
fidivl
daa
jne
or
cmpsl
pop
pop
call
dec
mov
xchg
pop
fisttpl
cmp
repz
xchg
leavew
and
mov
xor
or
jecxz
dec
mov
inc
push
hlt
daa
inc
jne
push
jns
sbb
out
pop
popa
mov
test
dec
iret
jle
das
lcall
dec
imul
mov
rcll
cli
mov
mov
xor
seta
ljmp
sbbb
mov
aas
xchg
and
addr16
push
cmp
push
mov
or
sbbl
jge
ret
js
out
sar
add
orb
jmp
ret
cmc
mov
dec
lcall
jp
xor
mov
or
push
into
push
xchg
pop
mov
out
pushf
add
xchg
push
and
or
add
test
imul
push
push
mov
pop
mov
inc
inc
jnp
repnz
stc
fs
cmp
in
ds
hlt
mov
xchg
movsb
loope
mov
test
jo
arpl
jbe
aaa
pop
pop
pop
jbe
stos
ss
repnz
aaa
push
and
cmp
mov
cmc
ret
jmp
mov
aaa
cmp
cwtl
fdiv
into
sti
mov
dec
dec
xor
jne
or
sbb
or
ljmp
lods
and
inc
jl
out
or
outsl
jne
xchg
sub
mov
pop
iret
cli
outsl
shll
movsl
and
adc
cmp
dec
pop
data16
shll
stos
inc
in
xor
out
jmp
or
pop
outsb
cmpsl
sub
ret
in
xchg
ds
mov
stos
clc
lahf
jbe
mov
cld
mov
sahf
fwait
mov
shlb
push
xchg
pusha
fsubl
jl
aaa
add
jp
pop
lods
stos
out
lods
or
fmull
jecxz
test
jne
cmpsl
jns
push
lahf
fwait
push
enter
xchg
jns
sub
jne
mov
mov
cmp
and
xor
int
sub
leave
adc
popa
jl
mov
or
dec
or
cltd
lods
push
or
sub
or
cmc
aas
test
adcb
xor
inc
stos
out
pop
jno
rorb
pop
inc
and
and
call
ja
jmp
popf
scas
mov
fs
and
cmp
dec
jno
bound
mov
cmp
sbb
imul
stc
xor
xchg
jge
movsb
into
lea
lahf
fiaddl
jp
lret
lock
or
in
mov
jb
loope
adc
mov
into
mov
ljmp
in
or
ret
ljmp
stc
test
mov
js
mov
mov
mov
ret
sbb
mov
or
aaa
push
pop
adc
jno
cld
into
and
xchg
stos
sub
movsl
aad
jo
xchg
fmuls
dec
nop
test
fwait
test
dec
pop
addr16
jne
cli
inc
aam
outsl
shrl
cmp
aaa
or
rolb
jne
test
pop
int3
rol
fists
or
test
jb
mov
and
mov
fsubs
popa
push
adc
mov
mov
pop
jnp
mov
stos
jp
sub
ds
aas
sarl
popa
dec
xlat
je
aas
cmp
gs
jno
add
jp
movsb
pop
movsb
shl
dec
xorl
and
out
xchg
mov
jle
int3
dec
dec
pop
push
and
cwtl
adc
jge
iret
aas
repnz
cmp
jnp
mov
mov
mov
inc
add
inc
mov
pop
pop
testb
jmp
xchg
roll
xor
inc
dec
xchg
ss
cs
cmpsb
icebp
add
dec
dec
dec
jbe
shrb
push
xor
repnz
pushf
xor
xor
out
out
xchg
jbe
int
jae
push
out
dec
fwait
out
decb
xchg
or
push
cmp
enter
out
int3
arpl
jmp
xor
jge
int3
and
enter
insl
jle
pop
inc
pop
out
aaa
jle
xchg
clc
cmp
pop
xor
mov
push
ljmp
stos
mov
idivb
cwtl
bound
fiaddl
jmp
cmp
vpcmpeqd
fidivs
and
mov
mov
outsl
sahf
or
pushf
dec
idivl
out
cs
cld
sub
call
out
or
mov
xor
leave
and
rorb
in
xchg
repz
pop
jg
jbe
xchg
sub
shl
fldt
insb
jmp
test
jge
outsl
fisubs
imul
insb
sahf
push
push
fcomip
iret
aaa
mov
xor
mov
ljmp
xchg
jne
inc
ljmp
imul
xchg
insl
sar
xor
das
das
push
cmp
jno
loope
and
xchg
int
rcrb
pop
int3
pop
lds
mov
lods
imul
sub
xchg
imul
cmpsb
push
mov
sub
cwtl
sahf
divb
pop
je
push
inc
pushf
cmp
mov
xor
inc
sbb
scas
movsl
adc
push
fcmovbe
add
jo
fnstcw
dec
inc
inc
aaa
loopne
cmp
adcb
and
in
ffree
nop
mov
fcmovne
adc
fdivs
rcrb
push
sbb
jmp
int3
xchg
lods
addr16
jb
mov
inc
pop
or
pop
cmp
dec
loopne
ret
mov
negl
lods
mov
xor
cmp
in
or
std
mov
xorl
je
cli
xchg
jg
and
jae
pop
dec
clc
test
fadd
push
pop
or
sub
ret
sub
mov
popf
xchg
ret
mov
sbb
in
and
cmp
push
nop
xchg
out
enter
pop
or
gs
xchg
sub
jmp
fmuls
fistps
jo
jecxz
sbb
enter
pop
lea
cli
push
xchg
jmp
int
adc
jg
jae
out
sarw
jge
mov
bound
sbb
call
cmpsb
jns
xchg
mov
inc
fsub
les
mov
adcb
iret
popf
jno
rcll
mov
pop
inc
pop
or
push
cs
mov
test
nop
dec
mov
inc
movsl
mov
cmp
inc
or
xlat
pushf
test
or
rcrb
sbbl
mov
add
pop
imull
lods
mov
hlt
leave
adc
in
or
je
daa
test
push
fstpt
leave
add
das
mov
jbe
pop
fs
mov
inc
hlt
out
out
mov
pop
testl
push
jmp
into
pop
mov
imul
push
in
dec
pop
inc
push
repnz
xor
addl
ljmp
mov
mov
xchg
fistl
push
cmp
sbb
cli
push
push
push
inc
ds
mov
arpl
js
inc
xor
shl
pop
mov
push
std
in
xchg
xchg
push
call
inc
in
mov
lahf
imulb
xlat
adc
insb
pop
sub
sbb
adc
pop
shrl
dec
push
flds
pusha
pop
dec
dec
sub
jne
jg
mov
mov
xchg
fistl
enter
call
fwait
inc
push
cs
cmp
jae
mov
or
xchg
inc
mov
popf
je
mov
mov
addr16
lock
mov
jb
adc
adc
jmp
outsb
aad
loop
lret
rolb
xor
push
sbb
cli
int3
adc
sti
inc
pop
imul
ret
rorl
xchg
dec
push
cmp
out
dec
roll
mov
mov
mov
cmc
add
fdivs
in
adc
dec
push
cmpsl
pop
rcrl
out
jg
sbb
mov
cmpsl
das
cmpsl
int
in
or
inc
and
sub
jle
dec
pop
stos
out
cmpsb
idivl
push
bound
sbbb
outsb
mov
sbb
adc
lret
inc
mov
ja
rolb
push
inc
outsl
sti
repnz
push
xchg
jnp
dec
mov
jle
mov
sbb
pop
rcll
push
daa
push
pop
adc
cmp
mov
js
adc
pop
xor
or
jbe
xor
inc
dec
push
pusha
xor
xchg
dec
or
mov
push
adc
stc
mov
or
fistps
filds
sbb
mov
inc
inc
xchg
nop
xor
push
addr16
aaa
and
into
addl
aaa
fdivs
mov
jecxz
ljmp
and
push
leave
fsubs
loope
adc
cmpsl
pop
mov
xchg
inc
jae
mov
inc
pop
std
les
adc
aas
jo
rsqrtps
dec
cli
pop
and
adc
adc
mov
call
and
andl
xchg
push
xor
iret
adc
push
fucom
test
les
mov
jecxz
cwtl
push
scas
mov
and
or
pop
popa
push
mov
xchg
outsb
aam
icebp
addr16
in
xorb
mov
and
add
enter
int
cltd
leave
jmp
sub
inc
pop
test
pop
sbb
inc
cltd
out
sub
adc
insb
xor
sub
push
or
mov
pop
cmpsb
ficoms
lahf
xchg
and
mov
loop
loope,pn
push
sti
xor
lea
mov
fxch
cmp
sub
push
sbb
sbb
in
aad
pop
cmp
test
bound
add
les
pop
cmpsb
mov
and
lods
sbb
pop
mov
dec
mov
adc
fsubrs
pop
mov
lods
test
lcall
lret
out
xchg
int3
mov
sbb
cmpsb
jle
das
mov
inc
cwtl
sbb
bound
sbb
xor
or
jg
fxch
adc
repz
jmp
jge
cli
scas
or
cmp
mov
fnsave
and
shlb
mov
js
rclb
inc
fcmovnu
loope
fcmovnb
fisubrl
mov
adcb
xchg
xchg
push
notl
pop
push
xchg
pop
fucom
fdivrl
mov
mov
ret
add
cli
fisubl
xchg
lds
xor
xchg
xor
insl
mov
call
mov
cli
sub
fsub
add
or
ss
insb
mov
xor
cmpsl
xchg
mov
mov
sub
daa
pop
in
movsb
xchg
push
mov
fildl
sbb
dec
in
out
add
ljmp
ljmp
pop
scas
shll
jl
jle
fldl
push
sub
push
lcall
ret
push
ss
xchg
or
ss
sub
inc
cmp
mov
pop
repnz
cmc
pop
mov
and
and
iret
sbb
pop
or
sub
shll
add
mov
jg
movsl
loope
dec
sbb
and
aam
cmp
cmpsb
pop
mov
mov
or
push
mov
pop
sbb
adc
jo
les
xor
aam
dec
stos
ss
jmp
mov
jae
test
in
movsl
mov
rcrb
add
push
jecxz
inc
mov
xchg
mov
ret
pop
orb
aas
mov
sbbl
ret
xchg
mov
fmuls
jecxz
movsl
cmp
xchg
sti
test
int
loopne
sub
jbe
mov
jmp
ss
push
jbe
out
in
pop
xor
les
hlt
push
int
cmp
mov
pop
xchg
addr16
jg
add
cwtl
fnsave
jb
out
hlt
mov
mov
jl
aad
leave
mov
dec
sub
mov
or
dec
loope
lret
xor
pop
cmp
mov
jno
ret
fadd
es
loop
sub
add
int
jecxz
or
dec
lret
mov
sti
cmp
mov
dec
dec
push
das
add
mov
push
push
adc
shl
cmp
fiadds
insb
fcoms
rclb
sbb
test
add
mov
lods
push
sti
test
jg
aaa
popa
xorb
ljmp
ret
sub
in
mov
out
pusha
jbe
sub
xchg
stos
and
loop
loope
push
popl
arpl
lea
mov
lock
aas
add
addr16
mov
out
mov
mov
mov
aam
fldenv
inc
inc
imulb
or
cmpl
adc
leave
jo
std
xchg
cli
mov
cmpl
test
clc
movsb
popf
xchg
xor
sbb
ret
scas
adc
popa
mov
addr16
mov
ret
into
lea
or
sub
xchg
adc
repnz
imull
mov
or
push
fwait
and
flds
movsb
pop
xor
add
inc
icebp
jp
xchg
xchg
or
jns
ss
test
aam
sti
xchg
or
mov
inc
xchg
pushf
iret
mov
lret
jp
subl
divl
adc
and
addr16
fstl
xor
push
pushf
outsb
sub
lcall
add
negl
ret
popf
xor
and
jns
ret
fdivrs
aas
mov
test
inc
scas
dec
stc
push
lea
sub
std
test
xor
loope
fs
lcall
push
pop
pusha
mov
add
pop
out
mov
rclb
fsub
imul
sarl
sub
repz
std
leave
icebp
sbb
push
imul
xor
sub
sub
aam
movsl
test
adc
incb
push
into
mov
inc
pop
notrack
fadd
scas
jge
out
sbbb
pop
xchg
hlt
mov
loope
fimull
add
out
cmp
cs
or
rcll
inc
lea
or
mov
daa
xchg
addr16
lahf
repz
cmp
pop
mov
push
outsl
lock
mov
sbb
mov
jmp
inc
adc
inc
int3
adc
mov
cmp
scas
int3
int3
aaa
arpl
sub
mov
mov
out
add
addr16
mov
pusha
lea
mov
mov
mov
jmp
lea
dec
jno
xchg
out
mov
aam
gs
and
bound
ds
adc
mov
insb
sarl
or
cs
inc
xchg
jb
imulb
mov
adc
mov
xor
pop
sti
and
add
or
and
push
nop
mov
ret
dec
adc
lea
sbb
inc
lahf
jl
xchg
mov
lods
cwtl
xchg
sub
xchg
mov
fsubs
and
out
sub
movsl
inc
pop
push
add
xor
ss
out
mov
adc
lea
ja
js
cmpsl
and
add
stc
push
bound
outsl
pusha
incl
mov
inc
xor
sub
shrl
mov
and
test
popf
rorl
mov
inc
mov
sub
xchg
stc
mov
ret
movsb
sarb
mov
cltd
adc
fadd
js
push
and
push
pop
xor
loopne
sub
and
lret
lea
cmpsb
jns
orb
cs
or
mov
ljmp
dec
out
scas
aaa
icebp
mov
stos
roll
jbe
jbe
adc
jmp
lds
insb
mov
push
mov
mov
jbe
addr16
jbe
and
ret
adc
push
rcrb
clc
psubb
movsb
mul
pop
and
sub
dec
mov
push
mov
jae
cmp
dec
and
and
outsl
repnz
prefetch
or
aaa
fsubs
mov
lods
rolb
jne
inc
mov
adc
or
sbb
xchg
pop
xor
add
add
add
add
pusha
add
andb
add
and
add
add
add
add
add
add
add
add
add
addb
sbbb
sbbb
add
clc
add
addb
add
add
add
add
add
add
add
or
add
add
add
add
in
add
add
add
add
add
or
add
clc
add
dec
imul
add
add
add
add
or
add
add
add
popa
add
mov
add
in
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
push
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
or
add
add
jo
add
pop
add
add
add
add
add
add
add
dec
add
cmp
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
je
jne
je
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
insb
gs
or
and
and
and
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
and
and
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outsb
outsw
ds
jae
gs
bound
add
sub
add
cmp
add
push
mov
add
add
add
loopne
add
add
add
lcall
add
loopne
add
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
jge
mov
xchg
fdivr
xchg
dec
shrl
and
jns
scas
test
adc
test
and
bound
or
dec
add
xor
pop
or
in
jb
jne
cmp
or
dec
stc
cmp
addr16
add
rolb
pop
push
mov
push
inc
fcmovbe
jecxz
xor
jge
cli
add
mov
add
mov
loopne
dec
dec
push
jne
add
inc
or
pop
pop
ror
jge
push
call
sbb
xor
mov
push
jecxz
rep
aaa
mov
push
test
pop
enter
jne
pusha
push
or
mov
add
loop
or
pushl
sub
lock
cmp
sbb
xor
pop
pop
pop
leave
ret
jb
and
adcb
loope
add
or
xchg
jae
and
orb
xor
or
loopne
xchg
ds
out
or
or
cmpl
jo
test
sub
xor
sub
cltd
subl
dec
aam
jmp
inc
fmull
add
inc
add
imul
add
pop
lea
lods
or
insb
lahf
in
inc
lock
push
call
or
sub
hlt
shll
nop
push
push
jne
and
addr16
mov
and
xchg
cmpsb
inc
pop
jne
sbb
inc
out
mov
or
repz
fadds
decl
int
xchg
adc
mov
fmuls
adc
je,pt
sub
jae
sbb
jmp
jo
and
xchg
test
jne
ss
into
adc
sub
lock
pushf
outsb
sub
xor
lock
adc
in
and
add
mov
cmp
cmpsb
or
inc
jmp
xor
pop
insl
sti
add
mov
cmp
push
mov
rol
ljmp
push
cmpsb
iret
lea
xchg
mov
lods
incb
mov
xor
pop
push
xor
or
wrmsr
dec
js
xor
mov
push
nop
xchg
jmp
sub
inc
mov
ror
shr
repz
fcmovnu
or
push
push
lea
push
push
rol
adc
subl
mov
clc
xor
lcall
cmpsb
push
ret
mov
movsb
mov
mov
push
inc
push
jae
inc
push
mov
jmp
loopne
xchg
dec
aas
inc
push
adc
jnp
leave
movsb
hlt
add
popf
rorl
mov
pop
or
mov
lea
push
push
jmp
cwtl
sub
je
subl
adc
pusha
cld
adc
js
jmp
and
inc
nop
stos
and
inc
pop
leave
push
and
fwait
fwait
std
fldcw
add
sbb
loope
std
in
or
rclb
imul
test
adc
dec
rcrb
xor
xor
mov
xchg
orl
or
mov
pusha
imulb
push
add
les
cs
jno
sbb
add
jmp
bound
test
or
xchg
inc
adc
pop
mov
sti
fadd
and
add
std
into
loopne
adc
lods
xchg
sbb
inc
mov
push
mov
jmp
repz
cs
push
add
add
xchg
mov
ds
sub
incb
sti
sub
dec
add
lods
outsl
sbb
sbb
sti
fwait
add
add
pop
aas
dec
push
mov
xchg
pushf
cmp
push
add
mov
xchg
xchg
insl
adc
mov
push
mov
mov
add
push
ljmp
or
lret
stc
es
adc
add
stos
packsswb
in
test
add
mov
sub
add
clc
rorl
call
jb
sub
fmuls
lea
sub
je
mov
inc
pushf
mov
aas
test
inc
adc
mov
jmp
dec
add
shrl
data16
or
outsb
lea
add
pushf
inc
mov
adc
loopne
jg
sti
push
jno
add
cmp
ja
test
repz
arpl
dec
hlt
mov
cmp
xchg
push
pushf
adcb
lea
jb
pop
aad
xchg
jb
mov
lock
rclb
enter
in
jne
mov
inc
add
cltd
push
sbb
add
adc
rcrl
inc
xchg
cltd
negl
cmp
loop
mov
push
pop
stc
and
sbb
push
push
call
xchg
push
cmp
cld
clc
cld
push
sti
inc
enter
fldcw
mov
orb
or
pop
mov
loope
jecxz
pop
pop
push
loopne
test
arpl
or
adc
mov
in
or
les
xor
imul
xor
push
es
adc
push
or
inc
push
test
cli
divl
or
cmp
andl
lods
and
adc
into
or
inc
xchg
sbb
xor
or
jne
aaa
adcb
cli
xchg
rcrb
sbb
mov
sbb
lods
cmp
jmp
and
adc
sbb
pop
sub
lea
inc
cld
add
sub
fcmovne
push
inc
pusha
jbe
cwtl
sub
lods
push
stos
add
nop
cmpl
je
dec
jae
inc
test
push
mov
cmp
mov
rep
cld
repnz
sub
add
xchg
outsl
jae
mov
jmp
sbb
mov
test
das
sbb
push
or
add
fimuls
repz
and
call
push
test
sub
imul
std
sti
dec
push
stc
adc
nop
add
xchg
fstps
pop
xor
rorb
dec
sub
lea
popf
xchg
inc
xchg
push
inc
notl
test
push
cmp
movzbl
or
add
push
mov
test
xor
mov
cmp
or
jnp
mov
icebp
or
jl
mov
push
add
loope
adc
jg
lea
push
dec
xor
jmp
sbb
sbb
pop
push
aas
and
ficoml
xor
rcrb
inc
pop
or
add
mov
jo
icebp
add
test
popa
mov
add
nop
add
or
pop
rclb
icebp
sub
and
cmpsb
dec
push
pop
pop
push
pop
pop
ret
and
call
jmp
adc
add
add
push
call
nop
or
ret
shl
sti
nop
xchg
in
add
je
push
mov
pop
inc
xchg
inc
add
pop
add
jmp
mov
ret
lods
push
jne
aaa
scas
leave
push
or
clc
dec
int3
pushfw
inc
xorb
cmp
je
movsb
ja
sarb
push
add
repnz
sub
pop
psubb
leave
bound
test
sub
xchg
in
data16
and
lods
loop
push
jg
jg
outsl
add
mov
jnp
mov
and
sti
loope
call
pop
jne
mov
and
pop
dec
xchg
shr
mov
jbe
jae
shll
adc
sbb
pop
xor
ret
jmp
test
pop
add
push
loop
push
sbb
pop
cmp
or
and
xor
mov
movzwl
test
jge
jne
xchg
or
cld
pop
inc
pop
adc
testb
cmp
jge
shlb
lmsw
sub
and
cli
incb
enter
sbb
cmp
ret
pop
pushf
or
rclb
les
push
add
jle
addb
pop
pop
dec
mov
xor
dec
pop
cmpsb
pop
popa
jmp
jg
push
mov
sub
ret
add
jbe
push
push
and
cmpsl
nop
cwtl
pop
mov
mov
dec
push
out
loope
in
xchg
pop
pop
fistpll
fimuls
int
ss
dec
es
push
sbb
dec
or
stc
add
movsl
add
push
jnp
inc
push
cli
cmp
sbb
lret
pop
shl
cmp
cmp
ret
add
adc
std
adc
push
lcall
push
push
sbb
mov
jge
jno
test
dec
cmp
enter
push
pop
xor
stc
mov
hlt
push
xchg
dec
or
cmp
test
mov
lret
push
in
mov
adcl
mov
mov
adc
lret
sbb
popa
jne
stc
jmp
inc
ficompl
add
outsb
loopne
sub
pop
jns
fcmove
or
xchg
sub
nop
add
jp
fwait
sub
cmp
pop
sbb
and
jae
call
dec
or
into
push
jle
test
and
add
push
push
push
call
sbb
mov
clc
dec
test
xchg
aad
or
addb
sbbl
mov
icebp
or
jno
adc
icebp
sbb
shlb
jle
popf
mov
ss
test
fsubr
inc
mov
push
adc
rcl
add
mov
adc
inc
mov
mov
jg
jno
or
and
jmp
mov
or
inc
cmpsl
data16
pop
push
inc
sbb
inc
sub
pop
outsl
dec
popa
stos
leave
add
lods
popf
inc
pushf
lods
jb
mov
stos
pusha
div
mov
icebp
mov
movsl
call
dec
or
push
adc
hlt
ret
dec
pop
xchg
or
sbb
and
inc
cmp
inc
dec
adc
jl
add
add
mov
push
loope
push
lea
divl
iret
aad
das
mov
pop
test
cmp
cmp
sub
mov
sbb
xchg
mov
adc
mov
inc
and
jmp
inc
adc
dec
scas
test
sbb
mov
lea
jmp
sti
xor
pop
pop
cmpsb
shrl
cmp
pop
subl
bound
adc
popa
je
pop
outsl
outsb
and
push
fsubr
adc
sti
and
add
test
fs
lea
repz
outsb
mov
ljmp
imul
dec
movl
sub
popa
insb
and
push
pushf
sub
xor
cmp
popa
jnp
push
inc
outsl
js
emms
jnp
sbb
data16
mov
aas
inc
js
je
push
nop
outsb
dec
or
dec
popa
outsb
fs
out
pop
dec
jo
adc
je
stos
mov
insb
sbb
jl
imul
mov
hlt
arpl
add
inc
fsubl
addr16
xor
inc
adc
inc
imul
mov
lods
dec
outsb
data16
insl
lea
push
jecxz
push
fs
rolb
jne
jns
sbb
mov
fildl
and
mov
notl
or
add
sub
xchg
or
lods
stos
enter
lds
lea
dec
xchg
cltd
xor
xor
jl
sbb
or
sbb
add
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
mov
add
jl
add
call
mov
inc
add
mov
add
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
pop
xor
cmp
jne
mov
push
push
mov
add
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
add
jl
inc
add
inc
add
add
add
popa
add
adc
add
movsb
add
aam
add
pop
into
add
jns
add
dec
mov
add
add
add
inc
mov
