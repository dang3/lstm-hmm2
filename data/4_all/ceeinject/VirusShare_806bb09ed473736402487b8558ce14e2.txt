call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
pop
fcoml
int3
and
xor
pop
popf
and
loop
inc
mov
sbb
icebp
sub
fcoml
int3
adc
xor
inc
pushf
push
mov
jno
mov
lds
insb
sarl
loope
icebp
sub
fmull
int3
cmp
sub
pop
pushf
dec
mov
data16
sbbl
out
pop
pushf
push
xchg
pop
cwtl
pop
jno
adc
lods
arpl
mov
push
xchg
sub
call
and
scas
add
dec
outsb
mov
cmpl
test
int3
adc
repz
rcll
jae
imul
jp
xchg
jecxz,pt
xor
ss
push
add
shr
mov
mov
mov
mov
sub
dec
sbb
sbb
xor
inc
loope
pop
xchg
arpl
popa
lods
mov
mov
imul
insb
push
or
loope
adc
outsb
inc
mov
pop
xorl
outsb
dec
pop
or
pop
add
rol
fcoml
int3
and
es
push
pushf
dec
mov
push
dec
mov
sbb
or
cmp
push
fdivl
mov
cmp
arpl
sbb
cmc
sub
push
shrl
fistps
dec
xchg
dec
add
xor
or
cmp
movsb
jns
lcall
and
cmp
jno
sbbl
rcrl
loope
icebp
sub
fcoml
int3
and
xor
inc
pushf
push
mov
jno
sbbl
rcrl
loope
icebp
sub
in
xchg
pop
sub
jge
fsubrp
sub
dec
loop
pop
push
xchg
in
xchg
or
and
mov
lret
push
push
xchg
xor
and
add
icebp
pop
mov
mov
mov
jge
sub
icebp
shll
insb
call
leave
add
mov
xor
mov
lcall
fldl
mov
fwait
add
push
out
dec
xchg
aaa
sbb
sbb
sbb
lods
adc
loop
sti
mov
cld
into
mov
sbb
mov
in
adc
in
or
dec
shrb
lret
adc
aaa
cwtl
outsl
adc
ffree
cmp
adc
mov
orb
lock
jecxz
sub
sbb
outsb
scas
cmpsl
enter
and
xchg
lock
das
add
add
cs
fsubs
or
cmp
in
mov
mov
ja
add
stos
pop
mov
xor
push
xchg
push
imul
mov
out
inc
lcall
push
mov
mov
xor
or
push
xchg
cmp
xor
sub
add
jno
lods
push
inc
mov
push
push
mov
mov
push
jmp
add
mov
push
xchg
jle
icebp
jecxz
pop
mov
mov
xchg
gs
pop
pop
sub
mov
pop
mov
dec
jae
jmp
fcmovnb
cld
xchg
push
rorb
mov
mov
sub
jbe,pt
popf
jo
je
insb
inc
ffreep
jb
scas
pusha
pop
sub
push
adc
ret
mov
into
movb
xchg
aam
xor
inc
xchg
adc
xchg
into
loope
push
or
daa
std
push
push
lock
leave
cmp
out
ss
push
push
es
sarl
mov
lods
sub
in
js
fs
aaa
shrb
outsl
lret
lds
insl
push
xchg
outsb
dec
push
je
xor
clc
mov
leave
xchg
and
push
pop
loope
mov
into
in
push
mov
mov
add
add
pop
and
or
xchg
repz
sarb
cmpsb
test
sub
fsubr
cltd
inc
dec
dec
mov
cltd
mov
add
imul
sub
jge
xchg
xchg
icebp
shll
fs
out
sbb
mov
stos
sbb
out
bt
out
test
sbb
insl
jmp
add
clc
sbb
adc
std
enter
cwtl
or
xchg
andb
cmc
sub
addr16
push
inc
daa
xchg
sbbb
into
in
mov
test
int3
pop
jl
in
imul
add
jp
dec
dec
jbe
loopne
sub
inc
sbb
xorb
jno
sbb
sbb
cmc
aas
call
sub
adcb
rcll
add
push
fnstcw
shll
sub
cs
mov
jbe
cmpsb
js
mov
cltd
mov
js
adc
cld
es
or
or
andb
insl
test
ljmp
sub
out
mov
aam
mov
lods
in
cmp
out
push
push
adc
daa
inc
scas
out
mov
cld
inc
out
fwait
mov
shlb
lods
out
adc
cwtl
aad
popa
sbb
lods
sbb
and
jle
adcl
shll
mov
mov
mov
add
or
push
stos
imul
mov
mov
shrb
jno
cmp
xor
cmp
push
aas
mov
pop
xchg
push
inc
xor
and
lods
clc
push
mov
out
mov
dec
sub
mov
sub
sbb
cmovbe
xlat
in
pop
dec
xchg
sbb
mov
jl
test
sbb
hlt
cwtl
or
shrb
shll
or
mov
out
pop
jp
adc
xor
add
mov
ss
pop
fnstcw
not
into
jecxz
inc
mov
enter
into
mov
cmpl
hlt
xchg
loop
lret
daa
cltd
cmpsb
xchg
lea
mov
outsl
push
test
pop
mov
repnz
enter
mov
ljmp
fbstp
dec
rolb
jo
out
dec
sub
push
sub
fiadds
xchg
jae
jmp
data16
inc
jmp
fidivrl
jbe
sti
cwtl
mov
daa
mov
pop
out
addr16
jge
fs
ja
scas
out
scas
sub
inc
not
adc
add
xchg
arpl
mov
push
imul
mov
mov
adc
jb
dec
or
pop
lods
push
jnp
insl
mov
movsb
xchg
mov
pop
push
or
cmp
mov
mov
pop
fsqrt
xchg
push
push
adc
xchg
xor
fs
sbb
pop
mov
push
dec
dec
sbb
ljmp
flds
xor
daa
shr
mov
cmp
jecxz
cmp
ret
mov
push
jb
iret
push
mov
adc
pushf
aas
push
push
mov
popf
jnp
repnz
cmp
aas
xchg
stc
push
xor
cmp
mov
nop
push
ja
dec
mov
imul
data16
mov
adc
aad
cmp
sbb
and
inc
out
movsb
ds
cmp
outsl
dec
pop
ja
icebp
lahf
inc
jns
or
lahf
dec
adc
adc
das
pop
mov
ja
or
and
mov
pop
add
sub
push
jecxz
mov
outsb
mov
popf
roll
nop
insl
fwait
mov
out
inc
push
icebp
add
cltd
mov
cmp
dec
jo
xchg
bound
push
inc
xchg
and
mov
sbb
mov
scas
add
lea
xor
sbb
sbb
cmc
adc
push
mov
sbbl
cmp
testb
movsb
mov
push
sahf
adc
es
and
out
fsubs
dec
mov
negl
dec
dec
fucomp
and
jmp
rcll
cmpsb
inc
inc
nop
mov
fsub
sbb
pop
xchg
or
cmp
jmp
mov
mov
xchg
shl
or
push
pop
ljmp
cmpsl
and
das
and
xchg
das
jl
pop
or
insl
push
mov
test
dec
jmp
cmpsl
pushf
popf
je
mov
pop
mov
insb
call
sbb
dec
xchg
xchg
js
out
jno
push
sub
stos
call
ret
push
idivb
inc
jne
push
loop
sub
adc
cwtl
imul
lods
sti
in
jo
add
nop
lret
outsb
xor
inc
mov
std
pusha
push
out
adc
pop
xchg
cmp
in
loop
xor
repnz
in
hlt
push
test
pop
std
pop
pop
loopne
adcl
aas
hlt
imul
mov
lcall
scas
pop
adc
jne
shlb
dec
jb
xchg
or
insb
dec
lret
sbb
mov
in
sub
lcall
xchg
inc
or
cld
push
xchg
fmull
cmpsl
cmp
test
mov
pop
aad
addr16
mov
outsl
lods
mov
pushf
xor
or
or
pop
aas
jp
mov
lock
or
dec
insb
cmp
inc
arpl
mov
inc
pop
nop
mov
xor
pop
pushl
push
lds
out
push
loope
xchg
nop
ror
push
dec
sbb
pop
jp
add
push
jae
mov
inc
mov
add
pop
push
xchg
mov
cmp
cmp
mov
jnp
cmpsl
add
aas
xchg
test
leave
jb
cld
cmp
out
popa
fdivrs
xchg
push
cld
xlat
jmp
ret
leave
test
pop
cmp
ss
jl
in
mov
shrl
popf
sub
pushf
das
mov
test
mov
mov
sub
push
iret
mov
popl
scas
das
pop
mov
mov
pusha
adc
jne
daa
jmp
sbbl
jl
rcrl
test
push
sbb
jecxz
roll
fnstcw
xor
sub
fimuls
jb
insb
cld
mov
pop
bnd
mull
sahf
clc
lahf
xchg
sub
mov
cs
push
jecxz
int
xor
xchg
clc
ds
sub
xchg
out
adc
cmc
gs
cmp
or
ja
rorb
jp
mov
sbb
test
gs
mov
cmp
clc
pop
loop
push
mov
xchg
mov
test
jl
dec
int
call
push
stos
adc
and
and
rcrb
pop
cmc
adc
sbb
lock
mov
lock
add
adc
xor
jno
inc
lods
push
fwait
pop
pop
hlt
dec
or
scas
inc
test
dec
js
mov
ds
je
addr16
sbb
cmp
xchg
in
iret
mov
sub
leave
mov
pop
mov
stc
and
ds
cmp
sub
mov
scas
mov
bound
sbb
daa
sbb
fwait
push
push
gs
lea
adc
or
ret
sbb
add
sub
subb
mov
scas
dec
push
outsb
shrl
clc
and
loopne
or
xchg
je
pop
cwtl
and
insl
adc
cmpsb
ljmp
or
fs
mov
cmp
push
aas
ss
inc
loopne
sti
inc
xchg
add
ss
in
or
or
jge
loopne
bound
pop
xor
mov
inc
insl
arpl
out
andb
mov
and
shll
das
cs
push
test
cld
jp
xor
lods
pop
negl
mov
jb
inc
or
out
fbld
sbb
push
push
pop
popf
and
aaa
cmpsb
adcl
jge
lds
push
in
inc
ljmp
ss
pop
mov
cmpsb
mov
sbb
aad
adc
mov
or
into
adc
in
out
or
pop
aaa
int
dec
dec
adc
cmpl
ret
mov
or
or
sbb
cmp
aad
ret
je
add
mov
inc
outsl
adc
lea
cmpl
or
pop
pop
dec
lods
icebp
fsubp
fists
neg
cwtl
inc
in
mov
addr16
inc
mov
sbb
mov
mov
push
insl
aas
lahf
fisttpl
mov
push
je
jno
or
shlb
fcomi
push
push
jo
mov
into
aad
je
lea
int3
test
jmp
push
int3
rcl
imul
jmp
lret
mov
enter
ja
mov
int
lea
cltd
int
jecxz
cmpsb
loop
loopne
hlt
pop
mov
mov
jo
in
sbb
adc
int
jno
xor
movsl
push
sbb
dec
ss
fdivrs
push
js
jp
jecxz
add
jl
dec
or
out
cmpsl
adc
movb
jmp
dec
sub
xor
xchg
orl
out
cld
mov
and
fsts
mov
mov
lods
test
sahf
ljmp
int3
and
dec
fwait
out
testb
mov
sub
mov
fistl
repnz
in
fisubrs
lds
mov
xor
or
jbe
aad
pop
add
inc
push
mov
imul
and
mov
cmc
xchg
xor
out
xchg
outsb
push
push
cmp
mov
inc
xor
divb
pop
cmp
sbb
pusha
push
popa
data16
mov
and
pop
adc
and
mov
or
pop
jp
cltd
mov
sbb
test
pop
adc
xor
ds
inc
stc
sub
sbb
iret
lods
jae
outsb
cmpsl
mov
and
inc
ljmp
jno
push
js
add
int3
dec
sahf
cmpxchg
mov
mov
out
cmp
pop
imul
inc
mov
jmp
popa
xchg
gs
mov
lcall
and
stos
xor
cmp
add
or
shll
fcmove
inc
jmp
cmpsl
dec
mov
xchg
dec
aad
out
xor
in
mov
dec
jg
and
mov
and
es
out
inc
sbb
sbb
lods
cmpsb
subb
and
lret
sarb
ljmp
ja
push
xor
aad
scas
popa
aam
jp
andb
jmp
ljmp
scas
pop
loop
inc
xor
cwtl
out
cmp
cmpb
jecxz
add
jne
mov
mov
push
pop
ljmpw
shl
ss
jg
adc
mov
bound
in
cli
movsl
shrl
hlt
add
ds
jo
cmc
mov
add
test
and
push
loop
cmp
stos
mov
push
dec
out
pushf
sbb
push
orl
scas
sahf
inc
cmp
xchg
xchg
movsl
outsb
or
adc
arpl
pop
sbb
loope
iret
mov
mov
push
int3
scas
mov
addr16
ret
lret
jae
sub
jo
jle
and
ret
scas
adc
jb
dec
mov
scas
jle
scas
mov
rcrb
aaa
lcall
xchg
scas
add
and
xchg
stos
mov
or
les
inc
pop
std
xchg
outsl
popf
leave
bnd
out
neg
outsb
out
mov
out
sbb
jmp
ficoms
js
adc
mov
inc
mov
mov
out
add
mov
mov
mov
in
call
stc
pop
xchg
jnp
cmp
push
pop
test
aad
out
andl
testb
fimuls
adc
test
lds
mov
pusha
and
js
ja
mov
repz
test
inc
sub
ret
test
stos
sbb
lods
inc
filds
jbe
out
mov
sub
dec
mov
adc
xchg
pushf
pushf
lock
out
xchg
fdivr
int
movsb
test
inc
push
mov
addr16
int3
xchg
inc
movsl
jo
mov
adc
mov
pop
stc
sub
frndint
cmc
cmp
pusha
or
sarl
jno
adc
adc
movsb
pop
les
sbb
dec
cmpsl
mov
mov
xchg
das
jmp
sbb
jbe
jmp
ss
pop
mov
add
sub
aam
fmulp
sbb
in
loop
or
or
nop
mov
hlt
mov
dec
mov
sub
sub
cltd
mov
sbb
and
ret
xchg
and
std
and
int
inc
mov
aas
lahf
jnp
lods
jg
dec
daa
push
and
jo
sahf
jb
dec
cmpsl
xor
cmp
pop
aad
dec
sub
insl
cs
mov
adc
lahf
push
imul
pop
mov
or
push
cld
pop
in
inc
scas
mov
cmp
inc
in
xchg
xor
or
imul
sbb
mov
inc
adc
testb
mov
cmp
push
dec
fs
and
imul
sub
jb
dec
pop
sub
nop
add
loop
out
cltd
ljmp
pop
inc
push
sub
sbb
adc
pop
mov
fwait
or
mov
pusha
or
and
lea
shll
cld
or
dec
xor
xor
js
or
xlat
jp
scas
fistpl
cmp
mov
mov
dec
cmpl
xchg
popf
aas
test
push
adc
xchg
sbb
cmp
cmpsb
mov
dec
mov
ds
push
jno
pop
stos
add
pusha
fs
mov
ror
movsb
leave
movsl
and
aam
ret
push
push
mov
add
sbb
outsb
xor
push
int3
fbld
daa
mov
xor
mov
loop
aam
dec
add
xchg
xor
mov
out
mov
adc
enter
pop
ret
jb
xor
scas
inc
xchg
hlt
cli
in
and
loopne
or
jecxz
mov
push
mov
mov
push
in
mov
adc
mov
jae
jo
repnz
lret
jns
cmc
xchg
push
out
mov
into
xchg
mov
addl
jp
sub
shl
rcr
mov
jmp
jb
xor
aas
enter
or
mov
push
dec
shrl
cmp
pop
mov
adc
cmp
rorb
dec
cmpsl
stos
sbb
dec
adc
pop
insb
dec
out
sbb
mov
jmp
lret
cmp
xor
add
rolb
mov
mov
es
inc
add
sub
mov
push
lods
inc
cmp
xchg
pushf
les
mov
cmp
adc
rclb
je
inc
mov
and
cmp
lret
out
xchg
daa
das
popf
jo
in
pushf
in
or
dec
jl
inc
dec
bound
mov
xchg
mov
pop
or
inc
mov
cmp
cmpxchg
push
add
stos
push
rcll
in
cmp
leave
sub
cmpsl
cmpsb
xchg
pop
push
es
cs
hlt
pop
or
mov
icebp
xorl
dec
ljmp
ret
xlat
test
adc
and
mov
or
mov
add
add
mov
aad
and
nop
loope
xchg
xchg
cmp
in
sub
aad
push
mov
add
or
ja
scas
stc
cmp
xor
pusha
cmp
js
aad
testb
cmp
jbe
and
vpmacsdql
cmpsl
test
out
inc
mov
popf
xchg
scas
xchg
or
fcoml
inc
imull
push
lret
mov
test
push
loop
orl
sti
xchg
pop
sbb
jl
or
jo
sub
and
add
nop
adc
and
add
mov
ss
lods
popf
push
lea
mov
fistpll
sti
scas
dec
xor
lahf
cmp
cmp
lret
mov
jl
jmp
and
mov
and
popf
cmpsl
js
xchg
dec
lcall
push
enter
imul
insb
scas
repz
jge
fimull
fwait
lods
push
xchg
gs
out
lcall
arpl
push
clc
xor
ljmp
fldl
enter
jne
rclb
jmp
cli
mov
aas
in
inc
jb
cmp
xchg
enter
addr16
mov
adc
mov
sbbl
call
lods
pop
jmp
movsl
das
out
lret
rolb
ret
mov
out
xchg
adc
mov
enter
call
sub
cltd
push
dec
sbb
lods
loope
clc
xchg
fisubrs
mov
dec
sub
and
push
ja
mov
decl
add
das
sbb
pop
sbb
insb
std
and
ds
push
mov
mov
add
loop
shl
xor
and
loopne
pop
test
jecxz
xchg
push
jge
ds
and
push
pop
xor
and
in
pop
lcall
notb
and
rcr
lock
dec
inc
jecxz
fwait
adc
xor
fcoml
push
lods
xchg
testl
mov
xor
mov
stc
shr
xchg
sbb
aam
in
cs
push
mov
in
lret
in
mov
inc
int
in
vpshlq
pop
outsl
push
xchg
test
lret
push
xchg
pop
sub
mov
ret
add
mov
adc
push
ja
pushl
dec
dec
mov
xor
add
dec
fnstenv
cs
idivb
mov
pop
stos
cmpsb
daa
xchg
data16
and
jmp
stc
dec
cmpb
das
inc
shll
sbb
dec
and
adc
fs
jg
xor
push
xor
or
add
shrl
and
stos
pop
push
fucomi
or
mov
push
sbb
mov
mov
scas
gs
cmp
jmp
push
mov
pusha
xor
xor
lods
lock
mov
les
cmpsb
cs
icebp
notb
xchg
and
cmp
out
dec
dec
and
push
stos
rclb
pop
jne
cmp
jno
mov
sbb
mov
cli
adc
jmp
and
mov
ret
xor
dec
divb
je
xlat
push
mov
cmp
cmc
lahf
std
punpckhwd
sti
xor
adc
and
jmp
scas
arpl
js
loop
fisubl
cmpsb
cmc
mov
xchg
test
mov
xchg
and
push
mov
xchg
in
inc
pushf
push
mov
jno
sbbl
rcrl
loope
icebp
sub
fcoml
int3
and
xor
inc
pushf
push
mov
jno
sbbl
rcrl
loope
icebp
sub
fcoml
int3
and
xor
inc
pushf
push
mov
jno
sbbl
rcrl
xor
cld
xor
inc
pushf
push
mov
mov
outsb
out
jl
sbb
ret
push
rcll
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
stc
pushf
jmp
lods
mov
into
mov
jp
imul
pop
sub
sbb
stc
pushf
jmp
lods
mov
cld
mov
pop
cmp
sub
sub
jl
insb
stc
test
xchg
fldenv
aam
in
idivb
dec
das
sub
pop
cmp
pop
cmp
pusha
add
fldenv
or
mov
inc
inc
push
cmp
mov
mov
adc
es
cld
mov
add
repnz
insb
mov
outsb
cmp
adc
pop
xchg
push
add
repz
push
jnp
push
iret
mov
sbb
or
push
int3
sarl
stc
mov
sub
ret
sbb
call
fcoml
rorb
repnz
pusha
sub
loope
cmpb
jae
inc
xor
inc
sbb
mov
js
popa
repz
ret
pop
test
jmp
jecxz
ss
push
and
std
cltd
mov
test
je
lods
fidivrs
push
mov
pushf
fldenv
test
cmc
jns
imul
inc
sub
or
pushf
mov
lahf
lods
notb
or
sub
or
mov
adc
cmc
popf
in
iret
mov
loop
fmull
push
imul
dec
dec
jo
arpl
sahf
pushf
jmp
jmp
cltd
cld
mov
jns
imul
pop
sub
or
jmp
lods
mov
cld
mov
jns
imul
pop
sub
or
mov
imul
repz
lock
jnp
lods
sbb
lret
lock
enter
xchg
das
loop
sub
or
fidivrl
mov
inc
stos
nop
repnz
cmpl
sbb
xchg
inc
outsl
push
mov
cmp
jecxz
stos
adc
push
arpl
mov
jecxz
xchg
dec
xlat
jecxz
popa
mov
out
stc
sbb
movsb
push
cwtl
js
or
pop
cmp
push
cmp
cld
lret
cld
sub
push
cmp
cs
pop
add
addr16
out
sub
rcll
pop
push
jg
imul
xor
stc
call
pop
cmpsl
and
addr16
pop
fistl
dec
mov
divl
movsb
cs
lahf
test
out
jo
cmp
cltd
das
lods
dec
xor
lods
jl
jb
rorb
pop
movsb
fnstenv
pop
add
pop
sbb
rcrb
test
push
insb
ja
int3
xchg
cs
and
pop
pop
mov
scas
stos
jb
dec
pop
leave
orb
inc
or
jb
pushl
jae
fldt
jno
int
outsl
stos
xchg
div
stos
mov
jne
add
test
cs
pop
cmp
adc
lret
aaa
loope
inc
mov
dec
fdivp
mov
insl
mul
mov
adc
sbb
dec
pop
les
into
test
stc
sbb
pop
hlt
add
shll
sbb
scas
inc
jbe
inc
mov
imul
std
dec
cmp
mov
xchg
inc
and
fdivrl
test
xchg
mov
jno
xchg
rorb
xchg
imul
xchg
mov
aas
fistl
and
popa
adc
adc
push
inc
xor
mov
cltd
outsl
test
dec
sbb
iret
jmp
mov
mov
in
pop
nop
fsubs
in
daa
ljmp
dec
mov
fldt
icebp
lcall
cli
imul
mov
popf
xor
adc
jae,pt
mov
lret
xchg
xor
test
push
inc
inc
mov
xorb
insl
les
stos
es
int
loope
insl
cmp
fwait
enter
cmp
cmpsl
jl
add
in
or
and
mov
ljmp
mov
xchg
cmp
pop
mov
mov
test
pop
inc
test
xchg
lods
ljmp
inc
iret
into
iret
mov
sub
sub
sub
repnz
add
stos
aaa
inc
jg
mov
mov
notl
loop
loopne
jns
adc
fcomps
sub
or
mov
sti
loope
sbb
jge
or
dec
mov
jmp
xor
in
xlat
stos
or
sbb
xor
xchg
jns
cmc
mov
ficoml
ret
pop
dec
mov
arpl
cmp
push
and
gs
mov
jns
pop
hlt
and
mov
push
fs
dec
js
push
fucomp
jns
inc
mov
mov
sahf
pop
xor
sbb
inc
ljmp
add
sub
dec
test
arpl
pusha
daa
xchg
fisubs
enter
xor
jno
test
int
int3
stc
pop
sbb
pop
inc
dec
xchg
dec
mull
mov
scas
dec
mov
fwait
in
outsl
add
outsl
ficoml
jae
jle
inc
cmp
shr
test
rclb
mov
icebp
push
cs
jne
xor
imul
test
dec
aaa
sbb
xchg
jg
mov
stc
mov
cmp
xor
rorl
inc
or
rcr
and
mov
jb
mulb
rolb
mov
sti
xchg
cmp
call
in
inc
push
test
jmp
mov
js
out
jno
ljmp
sbb
fstl
mov
ja
mov
sahf
repnz
dec
cmpsb
js
aaa
pop
mov
test
or
mov
dec
dec
xor
flds
add
cli
cltd
pop
and
inc
negl
lods
pusha
jbe
test
loop
jge
mov
cmp
xor
xlat
sub
inc
mov
aaa
cs
andb
xchg
pop
test
inc
sbb
nop
fcomi
dec
mov
push
adc
cmp
ret
xchg
mov
dec
ret
mov
adc
aam
aam
es
in
push
ss
scas
and
jge
aaa
scas
mov
adc
cmp
mov
cmp
mov
and
adc
cmp
xor
sti
aas
testl
xor
popf
xor
push
cwtl
inc
sarl
fisubrl
push
aas
xchg
int3
aam
fisubrl
xor
arpl
popf
add
xchg
dec
xor
cli
lds
scas
ret
push
push
jnp
pop
hlt
hlt
jp
shr
jmp
inc
cmp
add
idivb
cmp
cwtl
push
dec
pusha
decb
jmp
push
repnz
cld
adc
mov
movsb
inc
testl
inc
outsb
dec
movsb
pop
mov
xor
rclb
pop
scas
xor
inc
push
mov
add
cli
push
and
jp
push
xchg
rcr
inc
xchg
push
cmp
fs
stos
enter
lahf
lds
and
sahf
ds
subb
je
leave
icebp
sbb
rorb
iret
nop
bnd
xchg
xor
mov
addl
or
pop
fbld
push
es
adc
jbe
push
xorl
repz
and
cltd
inc
je
in
mov
add
push
mov
inc
pop
xchg
jae
add
mov
test
jne
xchg
and
mov
lds
add
mov
cs
int3
adc
insb
xchg
rol
and
xor
iret
or
unpckhps
sub
hlt
cwtl
inc
imul
jle
jmp
rcll
cltd
mov
jne
lahf
mov
sbb
sahf
dec
leave
test
cltd
mov
push
icebp
enter
mov
fistpl
in
jo
mov
aam
rcrb
out
add
mov
add
xlat
lret
pop
xlat
inc
aad
das
xchg
aaa
pop
xchg
mov
add
and
and
xor
fs
mov
fdivrp
push
push
or
pop
jns
js
cmp
inc
outsb
lods
or
lods
vmwrite
pop
hlt
ret
lods
movsb
and
div
push
aaa
xor
mov
pushf
add
das
loope
xor
mov
dec
cmpsl
data16
push
jnp
stos
pop
insl
pop
adc
jmp
loopne
lock
lock
inc
mov
adc
xchg
add
fadds
dec
enter
fdivl
xor
sbb
testl
pop
jmp
out
lods
push
pushf
xor
out
lock
mov
std
dec
ret
iret
js
mov
mov
jp
out
add
push
repnz
mov
fldl
cmp
std
push
or
jmp
sub
rorb
in
xchg
cmp
outsl
jns
jne
fwait
mov
pushf
pop
mov
pusha
sbb
inc
daa
decb
incl
dec
testl
inc
mov
add
pop
cmp
pop
enter
dec
loop
push
pop
xor
lea
cwtl
es
aad
mov
add
pop
je
call
in
sub
add
addl
sti
jecxz
xor
popf
pop
push
sub
iret
leave
jae
or
es
sbb
sbb
xor
add
mov
mov
les
rcrb
mov
jp
adc
pop
sub
mov
adcl
stos
cmp
dec
cmp
mov
xor
rcl
gs
shrl
lods
push
sbb
mov
int
sbb
fnsave
cwtl
repz
mov
and
dec
cmc
mov
mov
mov
mov
loop
add
xchg
xchg
arpl
mov
xchg
xor
outsb
ficomps
mov
jecxz
push
fcoml
or
mov
std
mov
insl
stc
mov
ror
add
cli
add
gs
fldcw
ffree
sbb
sar
test
stos
cli
loope
push
ds
call
push
dec
sub
adcb
aam
fwait
pusha
cmpl
cwtl
pop
and
adc
jb
ret
jle
popa
pop
movsb
inc
addr16
mov
in
ljmp
std
fldl
xchg
ret
sub
dec
gs
mov
test
ljmp
and
mov
push
add
andb
sub
insl
in
mov
cmp
out
add
scas
js
cltd
lods
mov
stos
in
ret
jmp
jnp
cmp
sub
out
lods
sub
jmp
inc
push
das
push
fmull
xchg
and
fs
sub
pop
push
lock
pop
mov
data16
xor
xchg
aas
mov
insb
cmovg
pop
les
test
repz
sub
out
shrb
or
mov
aas
lock
mov
cmp
ljmp
jmp
jb
add
daa
test
repnz
pop
mov
lea
xchg
sbb
and
push
sbb
clc
insb
mov
hlt
ljmp
pop
rorb
test
sub
inc
sub
adc
ret
in
idiv
imul
in
cmc
mov
dec
pop
lret
and
mov
dec
je
sub
loop
jp
ret
bswap
mov
push
push
mov
xchg
in
adc
and
cli
rclb
xchg
cmpsl
aaa
popa
sbb
xlat
cli
cmpsl
add
xlat
fsts
fdivrl
imul
xor
gs
mov
insl
push
cmp
jns
push
mov
lea
repz
mov
sbb
xchg
mov
rolb
imul
sub
insl
insl
fdivs
mov
push
repnz
push
adc
mov
or
sbbb
mov
std
les
scas
jmp
pop
mov
mov
xlat
setb
mov
dec
cmc
sahf
test
movsl
pop
xchg
xor
push
xor
pop
or
mov
or
cld
arpl
add
dec
pop
fsubr
or
repz
mov
clc
pop
xchg
cli
xorl
dec
add
xchg
out
pusha
iret
mov
pushl
mov
fimuls
ljmp
push
dec
cwtl
lds
scas
and
cs
mov
xchg
cmc
pop
leave
outsb
mov
cmpl
push
inc
push
jg
adc
ss
decb
and
add
data16
mov
xlat
outsb
push
ret
fbstp
pop
xchg
mov
mov
mov
push
stos
pushf
enter
repnz
push
bound
in
mov
mul
ret
les
pop
ljmp
lcall
jnp
xchg
int
mov
mov
dec
in
jmp
mov
flds
jle
mov
insb
xchg
pop
insl
xchg
outsl
scas
loop
mov
je
jmp
cmp
leave
lcall
pushf
fsubrs
pop
mov
das
imul
andb
push
add
cwtl
dec
sub
mov
mov
cmc
xor
stc
lea
mov
fstps
popf
jecxz
mov
out
aad
lods
add
loop
rcll
push
mov
cs
rorb
jne
dec
mov
mov
push
fmuls
mov
jbe
cmpsl
jmp
sub
push
js
ds
lods
je
shlb
dec
pop
shlb
outsb
push
scas
or
loop
rolb
pop
mov
ja
das
inc
les
mov
push
stc
cmp
fiadds
fists
fdivrs
std
push
std
sub
mov
enter
jns
jb
cwtl
cli
push
adc
popf
outsb
xor
ss
repz
dec
shl
pop
or
xor
and
popf
or
inc
scas
push
sub
sbb
insl
lock
jbe
dec
int3
mov
and
test
sbb
sbb
adc
stc
in
bound
pop
movb
lret
nop
add
gs
out
mov
popf
and
stos
addr16
mov
pop
test
call
lods
aad
cmpsb
mov
mov
ret
mov
shlb
in
mov
js
xchg
and
sub
repnz
bound
or
jno
push
or
test
sbb
mov
mov
jb
adc
sbb
jmp
xor
mov
xchg
js
dec
hlt
add
data16
nop
inc
fistpl
jle
lds
cs
out
cmc
jbe
push
sub
out
xchg
sar
test
xchg
push
jecxz
aad
mov
das
mov
enter
mov
hlt
and
adc
stos
sbb
cwtl
sbb
cmp
dec
cmp
add
xchg
cli
mov
lds
pop
dec
enter
jp
es
jbe
or
lcall
or
inc
out
jl
mov
fdivr
cmp
mov
pop
push
add
push
xchg
jmp
jno
cmp
aam
jl
pop
mov
std
jns
push
push
push
push
in
or
sbb
inc
scas
stos
xchg
loop
mov
scas
and
jmp
mov
push
dec
mov
insb
jmp
mov
add
sub
lcall
mov
lahf
jne
mov
in
mov
mov
adc
add
aad
insb
add
push
xor
cltd
xlat
and
xor
cmc
js
sbb
inc
fs
and
std
cltd
sbb
push
inc
leave
xchg
cmp
cli
in
sti
xor
test
cmpsl
pop
add
adc
xlat
add
movsl
lret
scas
fmuls
lret
rorb
push
and
loopne
jbe
push
cld
add
push
dec
jl
data16
adc
adc
sbb
nop
cmpsl
adc
lea
das
or
dec
xchg
loopne
xchg
cltd
jo
popa
scas
lret
inc
ret
xor
xchg
cmp
xchg
sbbl
out
je
cli
pop
inc
lret
rolb
pop
in
ja
es
insb
std
pop
mov
cmp
imul
addb
mov
pop
pop
xchg
in
or
xchg
xchg
pop
sub
mov
jg
adc
ret
adc
subb
lock
mov
lahf
adc
js
aas
sbb
pop
sub
dec
mov
xlat
jns
mov
mov
mov
sbb
jmp
fnstsw
lods
repz
fiaddl
fsubr
rclb
imul
or
pop
hlt
adc
mov
in
out
adc
popa
add
xlat
mov
out
and
xor
vmovups
ja
addl
cli
inc
fiadds
fs
aas
adc
jge
cmp
mov
inc
add
cmp
popa
pop
mov
outsl
xor
loop
push
add
test
or
pop
xchg
sub
xor
cltd
push
add
jle
mov
dec
sub
push
sbb
adc
jno
adc
dec
fldt
pop
stc
gs
ss
jmp
fstpt
das
adc
adc
arpl
cmp
and
test
aaa
stos
call
popf
out
pop
rcrb
shlb
fcmovnb
push
mov
cs
and
push
out
jecxz
test
pop
fnsave
mov
repz
aad
sbb
push
and
cmovg
inc
fisttpl
or
mov
add
arpl
pusha
jns
popa
stc
scas
enter
sbb
test
cwtl
jns
outsb
ja
test
or
mov
or
cli
iret
shrl
jecxz
movsb
adc
push
call
mov
stos
ret
out
pop
movsl
xor
cmp
dec
jno
xchg
nop
or
mov
sbb
and
out
fldt
xor
or
sub
insb
and
inc
fcomi
fadds
xor
aam
mov
xchg
add
xchg
enter
or
cwtl
xchg
adc
test
mov
lods
gs
mov
xor
fs
test
inc
xchg
rorl
out
popl
cmp
mov
mov
jae
testb
pop
es
pushf
out
sbb
push
popf
adcb
xchg
cmp
bound
mov
sbb
xchg
inc
inc
jmp
jmp
daa
sub
sbb
lea
pop
cmpsl
lock
jecxz
inc
scas
mov
xchg
or
push
aad
imul
arpl
xchg
clc
imul
mov
xor
jbe
xor
jne
push
cmp
dec
cmpsl
pop
xchg
loopne
sbb
pop
or
jecxz
mov
xchg
scas
in
ja
shlb
lret
aam
mov
pop
xchg
popf
pop
mov
add
pop
pop
std
mov
xchg
adc
jnp
adc
pop
inc
pop
outsl
ret
cmp
mov
jle
out
add
cmp
dec
xchg
ss
outsb
sbb
xchg
les
pop
movsl
push
test
lret
jnp
mov
xlat
int
xchg
mov
push
adc
mov
mov
push
aas
add
jno
sbbb
sbb
imul
lds
cmpsl
out
xchg
sbb
push
clc
jo
sahf
mov
xchg
ss
inc
sbb
xor
mov
add
pop
cld
add
cmpsb
int
fdivrl
scas
fadds
push
ffree
cltd
inc
jg
inc
shl
loopne
lock
adc
outsl
loop
lods
add
mov
push
dec
lcall
popf
pop
js
idivb
ja
mov
push
push
mov
dec
out
dec
enter
jae
cmp
xchg
sub
arpl
aam
call
or
jns
ljmp
outsb
adc
daa
or
lods
js
outsb
scas
repz
push
lods
bound
pop
into
insb
addb
iret
or
pop
xchg
jo
loop
scas
sbb
xchg
push
dec
out
das
gs
ja
cmp
clc
rcl
rcrb
ljmp
mov
fcompl
sbb
add
xchg
jle
lcall
pushf
dec
les
mov
or
lods
cltd
js
mov
mov
dec
sbb
sub
nop
in
lods
lahf
inc
xchg
data16
xor
sub
pop
test
shlb
xchg
les
shl
adc
loop
repz
mov
dec
test
xchg
jge
mov
dec
xchg
push
es
or
xlat
or
or
push
cmp
fucom
jno
es
movsb
xchg
loop
inc
lods
cmp
andl
fcomi
push
add
test
dec
hlt
cmp
mov
clc
cmp
popa
push
jmp
push
roll
pop
mov
cmp
inc
in
cvtpi2ps
insl
ret
int3
xchg
add
add
adc
fnstsw
shrb
scas
dec
pop
lock
fisttpl
fldlg2
das
pop
scas
movsb
xor
push
fwait
cmpsb
movsb
inc
mov
movsb
pusha
ret
sub
out
je
fwait
pop
jle
jb
repnz
xchg
push
xchg
ljmp
cmp
outsb
les
or
and
mov
js
scas
cmc
cld
mov
push
fdivs
mov
pop
insb
pop
out
das
movsb
ds
fdivl
dec
mov
push
xchg
aas
lock
jb
add
in
mov
sbb
pushf
imul
stc
push
sbb
add
add
and
jmp
inc
aad
jbe
inc
add
in
mov
jno
or
mov
adc
fsubp
out
and
into
add
jmp
adc
push
popf
xor
push
inc
leave
add
cli
lret
movl
and
in
mov
lahf
aaa
or
adc
sub
fiadds
lods
pop
cmp
ret
dec
les
mov
xchg
pop
jbe
add
mov
xorb
push
or
jb
mov
jnp
cmp
or
or
jne
fimuls
jne
es
nop
cmp
cmp
ja
int
shlb
adcb
lock
rcrl
adc
mov
lock
ret
ret
insl
xchg
rolb
out
jo
daa
or
test
add
xor
push
or
push
xchg
mov
sbb
es
push
aas
sbb
push
iret
outsb
inc
sti
jle
mov
xchg
bound
mov
cmc
sub
adc
ret
iret
xor
inc
sbb
pop
push
into
out
jno
mov
cmp
mov
cwtl
leave
in
fldenv
mov
inc
shrb
repnz
inc
shll
sbb
leave
pop
ret
cltd
insl
test
loop
inc
bound
dec
jbe
repnz
sahf
daa
mov
and
sub
add
cmpsl
loope
ret
popf
lea
insl
jle
ds
push
or
insl
pop
sub
es
adc
sar
and
lret
or
roll
dec
frstor
dec
jecxz
jo
and
loop
int
stos
adc
mov
push
fdiv
cmp
mov
out
inc
sar
movsl
mov
push
mov
xor
inc
mov
xchg
fcmovnbe
adc
inc
mov
mov
test
in
jns
imul
pop
sub
or
jmp
lods
mov
cld
mov
jns
imul
pop
sub
or
jmp
lods
mov
cld
mov
js
imul
pop
sub
or
cwtl
jmp
lods
mov
cld
or
sbb
cmpsb
repz
pop
dec
aam
xor
add
adc
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
dec
in
hlt
outsl
les
ret
xlat
inc
movsb
xor
je
inc
push
and
xor
add
adc
in
hlt
outsl
les
shld
das
test
in
iret
fbstp
call
lahf
xor
add
adc
in
hlt
outsl
les
shld
das
test
xchg
iret
fs
push
xorl
xor
fisubrl
adc
outsl
lods
adc
movb
scas
xchg
add
ds
popa
fisubl
mov
jl
cwtl
adcb
pop
xor
mov
sahf
xor
pop
mov
push
add
jo
sahf
std
clc
add
inc
pop
in
stc
push
lods
push
movsb
ja
ror
mov
out
sbb
loop
lret
lods
dec
mov
jg
sub
or
inc
fwait
pop
mov
rclb
sub
mov
xchg
sbbb
pop
cmp
daa
fwait
mov
push
adcb
pusha
xor
add
ljmp
hlt
xchg
int
in
jl
mov
rcrl
mov
adc
add
add
les
shld
das
test
xchg
iret
fbstp
call
lahf
xor
add
jge
loopne
mov
les
aam
shrl
ret
iret
sbb
xchg
mov
push
int3
jge
pop
sub
adc
bswap
pop
clc
push
in
insl
lock
das
mov
mov
xor
sub
adc
das
test
xchg
iret
fbstp
call
lahf
xor
add
adc
in
hlt
outsl
les
shld
das
test
xchg
iret
fbstp
call
lahf
xor
add
adc
in
pushf
repnz
icebp
rcrb
mov
add
xor
cli
out
mov
mov
js
push
jb
xchg
lds
popa
cmc
mov
jns
aaa
mov
pop
jg
cmp
cmp
or
push
stc
int3
mov
sahf
outsb
out
in
xchg
pop
xchg
jl
or
cli
and
pop
push
popa
repnz
mov
pop
lahf
jp
lock
popf
push
int
xchg
insl
jl
inc
mov
push
mov
xor
push
ljmp
sub
outsb
fnop
nop
push
cmpsb
ror
insb
push
xchg
fdivrp
inc
inc
fldt
leave
and
mov
sbb
scas
js
xchg
fs
fs
xchg
movsl
frstor
inc
mov
ds
adc
push
rcrl
cmp
mov
lea
daa
sub
imul
and
push
inc
arpl
mov
fnstcw
fisttpll
fimull
mov
dec
repz
repnz
das
lea
cld
ljmp
add
and
adc
push
jo
aad
je
lds
pop
sti
add
loop
mov
mov
mov
jg
cmc
add
inc
rcrl
ret
xor
ret
push
inc
daa
cmp
cmp
test
arpl
loop
lea
sbb
cmp
mov
add
in
mov
push
mov
std
mov
iret
jp
repz
repz
sbb
adc
and
adc
nop
xlat
popf
mov
insb
cli
jl
adc
test
jl
jnp
mov
sub
pop
daa
call
aad
xchg
pop
rcr
fisttpl
xchg
sub
jle
filds
adc
mov
mov
fldt
ja
in
xchg
lret
hlt
cmp
dec
orl
xchg
or
or
inc
addr16
inc
sub
jle
push
mov
or
cmp
mov
sahf
dec
xlat
dec
pop
mov
loope
rclb
neg
cmp
jle
and
int3
or
rcl
pop
mov
push
jl
fldenv
push
aad
hlt
pop
mov
in
popf
test
cmp
shrb
inc
movsb
pop
movsb
push
cmp
cmc
scas
neg
arpl
into
lahf
pop
lods
xchg
stc
call
add
add
dec
push
lods
imulb
std
in
and
icebp
jb
pop
popf
mov
out
arpl
mov
adc
xor
mov
and
xor
scas
xchg
pop
cmp
cltd
or
jae
inc
dec
or
pop
scas
mov
test
cmpsb
sbb
sbbl
adc
nop
cmc
adc
sarb
int
shlb
mov
test
push
pop
mov
mov
sub
jbe
cwtl
sub
cld
ja
aad
inc
pop
std
leave
test
imul
popa
es
outsb
cmp
adc
aas
imul
fadd
int
sbb
and
jmp
cli
xor
cltd
mov
or
push
les
hlt
ljmp
mov
jmp
aaa
mov
xchg
popf
jl
xor
cld
les
fistl
pop
enter
pop
decl
ja
xchg
inc
das
shll
jo
xor
stc
fsub
int
jecxz
dec
loopne
and
mov
out
and
jg
aad
jg
jo
xchg
jb
fists
cmp
ret
dec
adc
pop
or
mov
out
loop
push
in
add
jle
push
popf
mov
ja
push
roll
xor
mov
or
lds
out
int3
pop
add
cmp
cmc
mov
xor
roll
and
lret
push
or
shrb
repz
cmp
push
xor
inc
fimuls
fwait
dec
daa
push
bnd
repnz
and
mov
mov
loop
stos
sbbb
fwait
push
sbb
cmpsb
imul
repz
jbe
sbb
mov
mov
mov
fidivrs
dec
iret
jb
iret
push
aam
loope
mov
mov
mov
fucomip
pop
push
out
mov
or
scas
dec
mov
pop
jecxz
sub
dec
push
or
fnsave
fisubrl
aaa
insl
fmulp
jbe
ret
loop
dec
push
jo
jecxz
lods
rcrl
push
add
es
push
lcall
dec
push
and
ss
mov
fisttpll
lds
mov
popf
inc
sbb
add
dec
mov
dec
dec
inc
cld
mov
hlt
js
mulps
icebp
cs
mulb
out
adc
cmp
adc
adc
fdivr
xchg
gs
shl
pop
mov
pop
imull
mov
loopne
adc
scas
mov
xchg
xchg
inc
pop
loopne
mov
arpl
jp
pop
jae
popf
and
pop
jbe
leave
cwtl
pop
inc
in
mov
pop
lret
jle
rcrb
add
lea
cmp
in
cli
or
xor
jae
jl
insl
sbb
xor
xchg
xchg
push
dec
leave
pusha
pop
cli
or
or
mov
or
or
cmp
leave
stos
lcall
pop
push
cmp
lcall
imul
out
int3
pop
xlat
out
stos
mov
mov
dec
imul
lcall
jbe
xchg
ret
imul
mov
lods
mov
cld
in
add
divl
aam
rorb
pusha
mov
pop
jmp
cwtl
sub
fisubrs
mov
ja
out
xor
jmp
lods
adc
sahf
jg
movsb
and
pop
push
mov
jno
lcall
adc
scas
xchg
sbb
sbb
loopne
xchg
ret
and
jg
xor
xor
pop
nop
nop
sti
xor
mov
sahf
sub
adc
ja
dec
sahf
loope
lock
sbb
add
sbb
inc
jp
scas
out
pop
inc
mov
inc
insl
xor
fnsave
xor
dec
insl
pop
std
sahf
out
add
cwtl
incb
mov
mov
cmpsl
dec
cwtl
inc
jbe
test
adc
mov
inc
jmp
jno
push
fiadds
insb
push
add
mov
in
and
jne
cmpsl
jmp
xchg
jle
adc
or
gs
notl
iret
xchg
xchg
inc
xlat
push
rol
sub
loopne
mov
pop
addb
push
jmp
jnp
and
stc
jns
or
xchg
inc
scas
sbb
int3
sub
out
mov
into
arpl
mov
fsubrs
fcoms
popa
popa
clc
jbe
adc
neg
jns
xor
mov
cmpsl
addb
mov
cmp
jecxz
lds
pushf
xchg
movsl
jnp
into
les
xor
push
rcrb
mov
mov
into
ret
popf
adc
or
lret
hlt
cld
ljmp
mov
aaa
dec
ret
or
inc
scas
mov
pop
add
movsb
lock
dec
mov
enter
and
xchg
xlat
push
rcrl
mov
xchg
fnsave
loop
lcall
filds
adc
xchg
decl
mov
cmpsb
sbb
mov
popf
push
loopne
scas
sub
test
sbb
sar
mov
test
clc
aad
dec
adc
aad
fnsave
pop
test
and
inc
pop
test
in
gs
sbb
adc
test
in
dec
loope
sbb
lods
dec
sub
cmp
and
stos
xor
pop
mov
pop
push
and
push
xor
ja
jg
add
js
mov
imul
jl
popf
lahf
xorb
outsl
iret
divb
sbb
and
fiadds
pop
push
and
mov
add
jp
inc
jmp
and
test
nop
es
incl
mov
xor
jecxz
sub
jp
fsubp
jge
push
int3
les
xchg
adc
test
clc
nop
adc
xchg
push
insb
mov
aas
push
add
call
fwait
jne
push
push
cmpsb
push
inc
xor
sbb
pop
jbe
mov
xor
mov
pop
add
push
cmpsb
mov
rcrl
pusha
push
cmp
fwait
mov
into
loop
cmp
push
pop
mov
and
push
fistl
mov
cmp
fisubl
test
clc
xor
js
test
inc
adc
insl
sbb
xor
std
push
cmpsl
pop
out
in
mov
out
roll
mov
push
sub
and
add
gs
cli
mov
jns
rcrl
mov
xor
sbb
mov
xchg
out
cltd
scas
or
loope
xor
inc
pop
inc
icebp
inc
arpl
push
or
sahf
mov
sub
dec
in
or
movsl
xlat
out
mov
jecxz
xchg
fsubrs
add
aaa
pop
es
sub
pusha
cmp
xchg
aaa
leave
jbe
inc
dec
and
in
dec
pop
sahf
add
test
push
enter
cmp
leave
fadd
gs
xor
jge
add
icebp
jmp
pop
dec
out
mov
jns
ljmp
jmp
pop
push
dec
gs
aaa
sub
mov
add
das
jmp
mov
jecxz
dec
jmp
and
or
test
fs
aaa
movsb
scas
mov
pop
mov
xrelease
cmpsb
dec
mov
lcall
adc
dec
int3
pop
mov
leave
aaa
fucomip
mov
test
xor
jmp
imul
pop
mov
ret
ficomps
stos
mov
inc
push
pop
sti
sub
int3
cmc
fsubr
outsb
adc
mov
cmp
push
add
jae
pop
aad
mov
cltd
inc
imul
cmc
test
jbe
add
jnp
inc
mov
push
out
and
arpl
push
dec
sti
mov
cld
add
rorl
inc
fs
sbb
mov
ss
and
int
jle
jb
pop
adc
shr
leave
push
pop
push
shrb
xor
push
in
mov
popf
xchg
rclb
test
shlb
mov
adc
adc
inc
sub
xchg
jbe
push
sbb
jae
fs
mov
push
push
es
lods
stos
stos
orl
fxch
shrl
gs
jecxz
push
sub
mov
out
jne
mulb
add
push
lahf
out
mov
gs
movsl
push
rcrb
stc
cmp
test
jp
nop
jnp
aaa
xchg
mov
icebp
sub
or
nop
xchg
dec
pop
in
mov
aad
subl
icebp
pop
jnp
jne
mov
int
pusha
fwait
lret
fs
int3
pop
or
pop
mov
cmp
mov
jmp
into
faddl
inc
lret
jp
fsub
test
test
test
lret
inc
mov
andb
xor
imul
ljmp
or
mov
lret
add
fwait
adc
and
movsb
repnz
loopne
jg
adc
adc
xchg
into
sbb
jno
lahf
scas
and
ds
std
sub
in
xchg
and
and
mov
das
inc
pop
popa
jnp
inc
cmpsb
pop
pop
adc
pop
lds
pop
hlt
movl
sti
ds
and
xchg
cs
flds
jae
repz
and
mov
out
insl
arpl
adc
fcmovnbe
jmp
inc
mov
sbb
add
setno
ljmp
dec
pop
lock
add
fs
mov
adc
repz
xlat
jbe
push
xchg
push
xchg
sbb
sub
mov
push
test
out
jl
jle
inc
test
cs
xchg
movsl
repz
push
mov
nop
fldenv
mov
mov
ret
xchg
xor
enter
call
shll
sbb
fwait
ss
rorb
cltd
cmp
sbb
lret
cwtl
pusha
and
ret
cli
mov
sbb
xchg
pushf
mov
xchg
jns
adc
xchg
fnstcw
xor
lods
xchg
xor
xor
xchg
jb
inc
enter
xor
pusha
je
and
jl
into
mov
adc
mov
hlt
movsb
xchg
inc
scas
loopne
jbe
xlat
cmpsl
dec
xchg
out
sahf
setg
xchg
in
fstps
aad
lock
lret
xor
dec
loope
gs
into
hlt
cmp
cmp
dec
or
inc
or
and
dec
xlat
out
stos
out
dec
arpl
test
pop
dec
lret
xchg
repnz
int3
and
mov
inc
xor
test
outsb
insb
jmp
dec
aaa
imul
mov
call
repnz
add
pushf
sti
int3
movsb
or
jb
loope
inc
out
add
fsub
sub
in
jns
sub
add
jno
pop
outsb
outsb
mov
dec
fldl
jmp
dec
int
js
cmp
xchg
shll
and
dec
int3
mov
popf
adc
mov
cmp
push
adcb
mov
fucom
pop
fstpt
or
push
pop
adc
sahf
repz
inc
sub
fcoms
ljmp
cli
pop
sbb
add
push
cld
add
sti
inc
ret
and
mov
cwtl
jbe
cs
xchg
fs
cmc
mov
fcoml
or
xchg
push
int
push
cmp
sysret
mov
int3
jne
xor
setae
mov
jg
fldt
insl
fs
cltd
add
fsubs
sbbl
sub
fs
mov
push
inc
add
ffree
cltd
lods
and
rolb
adc
call
fidivl
into
inc
inc
js
cmp
push
iret
mov
clc
or
adc
insl
push
and
in
xor
outsb
hlt
adc
lret
mov
inc
stos
iret
addr16
lret
aaa
jecxz
jp
imul
dec
mov
call
pop
xchg
jo
and
mov
xchg
push
adc
xor
out
not
ja
mov
jns
lret
ljmp
fisubs
pop
mov
push
cmp
cmp
fs
cwtl
sarl
cmp
popf
pusha
push
or
xchg
rcl
inc
stos
mov
add
pop
or
adc
adcl
or
add
xchg
pop
xchg
adc
lret
shll
xor
mov
or
mov
test
fld
ds
adc
rep
jl
or
mov
das
inc
js
cmp
nop
push
flds
jmp
int
std
pop
mov
jb
repnz
nop
jno
stos
scas
cmp
outsl
mov
add
in
repnz
call
fnstenv
cwtl
xchg
pop
jns
dec
push
lea
xchg
dec
inc
sti
push
pushf
inc
scas
insb
push
lock
repnz
jl
mov
or
mov
adc
jbe
popf
std
clc
jb
push
inc
lods
jmp
sbbl
insb
outsl
stos
jmp
cmpsl
adc
mov
addr16
jge
inc
mov
test
je
negb
mov
sub
fwait
cmp
cmp
pushf
lods
add
ja
vrcpss
mov
adc
out
jecxz
mov
push
es
nop
mov
mov
jg
dec
mov
mov
pop
addr16
push
and
dec
jp
pop
fwait
xor
stos
dec
mov
jae
push
inc
cld
push
xor
sub
and
shr
out
ret
lods
or
adc
lods
mov
push
stc
or
mov
push
jo
stc
mov
enter
pop
aas
popf
test
mov
lods
xchg
xchg
push
cmp
cld
push
fdiv
and
pop
sarl
fstpl
rcll
cmp
sarb
inc
mov
ficompl
xor
pop
cmpsb
stos
inc
mov
lods
out
cmp
or
dec
push
int3
dec
ret
mov
cmp
aaa
out
add
inc
sub
mov
xchg
pushf
inc
mov
repnz
enter
test
jnp
or
add
pusha
das
cmp
loop
cmp
pop
mov
int3
nop
jecxz
inc
mov
inc
in
cwtl
pushf
jp
lcall
ds
aaa
shll
gs
sbb
or
cmp
pushf
lds
cwtl
push
xchg
xchg
and
sbb
inc
add
and
and
dec
xchg
cmc
mov
enter
outsb
jb
xchg
jl
xchg
std
mov
loopne
dec
cmp
mov
dec
xchg
add
int
mov
paddsb
mov
jbe
fstl
call
test
bnd
xchg
fisubl
pop
popa
mov
mov
cs
aas
xchg
ret
jb
sbb
cmpb
clc
iret
pop
pop
pop
mov
in
cld
ljmp
sub
lods
xchg
inc
in
loope
cmpsl
cmp
lret
xor
dec
out
jne
lea
or
lret
sbb
cmc
sub
cs
sahf
in
mov
fwait
mov
or
jnp
sub
in
sahf
jle
cld
es
or
into
jl
lock
mov
pop
mov
aam
jmp
dec
negl
mov
cltd
mov
cli
jecxz
push
test
enter
mov
stc
rolb
mov
pop
add
sub
push
out
mov
dec
mov
aas
imul
mov
xchg
sub
dec
xor
icebp
xor
mov
lret
jnp
aad
xor
fnsave
mov
mov
add
jns
sti
jae
mov
mov
jb
xor
add
adc
insl
inc
out
xchg
cld
push
inc
mov
push
fwait
int
gs
add
pop
aad
push
or
in
test
cmp
jl
push
test
out
out
outsb
push
rcrb
clc
stos
xor
add
inc
pushf
xchg
dec
add
fistl
ljmp
cmp
pop
cli
xchg
xchg
xlat
mov
jl
push
adc
adc
inc
jns
push
mov
pushf
pop
shlb
lods
les
mov
cmpsb
les
adc
push
scas
xchg
xlat
hlt
mov
int3
and
xchg
adc
sub
addr16
aaa
mov
stc
jns
mov
push
sar
in
push
xorb
pop
scas
cmpsl
mov
mov
jb
or
outsb
lcall
pop
adcb
cs
push
mov
je
jns
out
hlt
sub
add
bound
push
mov
cld
fldenv
rcrb
sub
pop
cmpsb
pop
fdivl
dec
jns
in
inc
sub
jnp
sub
imul
mov
es
push
repz
push
loope
aaa
and
xor
xchg
adc
mov
add
add
mov
lea
push
sbb
shll
adc
cltd
mov
fdiv
or
lahf
mov
push
je
in
push
jnp
add
push
adc
mov
fwait
subl
sbb
in
les
xchg
cwtl
inc
xchg
mov
push
mov
xor
xchg
test
jno
imul
mov
lds
ss
add
fs
sti
loop
mov
cmpsl
loop
fs
test
pop
movsl
ss
mov
cmp
push
call
sbb
addr16
nop
jmp
dec
inc
mov
or
xchg
inc
bnd
ret
pop
pop
and
cmp
gs
rcr
adc
repz
fsubs
push
test
in
ja,pt
divb
push
jb
hlt
dec
fistps
out
mov
pushf
hlt
jae
shll
fildll
out
movsl
push
idiv
dec
scas
adcl
cmc
out
dec
and
insl
std
stos
sub
ja
jmp
dec
sbb
js
fstpt
push
sbb
sahf
or
jae
push
ja
cmc
mov
sti
leave
jecxz
mov
aad
and
lahf
insl
inc
nop
xor
mov
cmp
test
aas
jnp
icebp
xor
push
into
or
mov
in
mov
jne
inc
enter
sbb
jno
divl
sub
ret
add
in
or
jno
rolb
mov
movsb
sbb
mov
mov
test
repz
mov
adc
pop
mov
ret
std
movsb
js
xor
adc
stos
jg
dec
call
fnstenv
mov
jmp
das
push
in
nop
sbb
inc
pop
clc
push
rol
adc
js
mov
mov
add
dec
or
fcomps
inc
adc
mov
adc
int
lods
lcall
js
aam
imul
sub
lahf
mov
mov
xor
jb
and
adc
out
ret
mov
fcoms
xchg
adc
fbstp
xor
and
jo
lret
inc
sub
sahf
jecxz
scas
jbe
add
add
je
les
sub
fisubs
sub
mov
sbb
fsts
lea
add
xchg
push
mov
outsb
les
shld
das
test
xchg
iret
fbstp
call
lahf
xor
add
adc
in
hlt
outsl
les
shld
das
test
xchg
iret
fbstp
call
lahf
xor
add
adc
in
hlt
out
les
movsb
pop
mov
test
je
inc
call
lahf
xor
add
adc
in
hlt
outsl
les
shld
das
test
xchg
iret
fs
inc
inc
jmp
ljmp
jmp
mov
out
cltd
mov
sahf
shl
ret
and
ja
adc
popa
pop
hlt
aaa
inc
daa
push
xlat
mov
out
xchg
loope
icebp
mov
cmpsl
rcll
inc
push
add
adc
popa
pop
jno
add
push
xlat
mov
out
xchg
loope
icebp
mov
cmpsl
rcll
inc
xor
fs
jns
dec
push
sahf
mov
xchg
rcl
xchg
cmp
pop
aad
mov
xor
pushf
cmpsb
pop
cli
mov
idivl
add
push
mov
push
xchg
mov
add
pushf
call
adc
add
stc
dec
mov
leave
insb
xchg
and
orl
mov
or
mov
mov
xor
loopne
icebp
dec
dec
iret
cs
cli
push
pop
cli
incb
jmp
mov
mov
popf
add
outsb
sub
mov
mov
cmpsb
push
inc
fnstsw
rcrl
mov
decl
out
push
dec
mov
xor
push
sub
adc
je
mov
push
dec
push
mov
out
xchg
loope
icebp
mov
cmpsl
rcll
inc
xor
adc
popa
pop
jno
inc
daa
cmp
call
into
icebp
rorb
inc
inc
adc
or
add
jae
jae
aam
mov
cmpsl
addl
shll
pop
inc
inc
ss
and
add
inc
and
add
jmp
xchg
mov
cmpsl
rcll
inc
xor
adc
popa
pop
jno
inc
daa
push
xlat
mov
out
xchg
loope
icebp
mov
cmpsl
rcll
inc
xor
adc
popa
pop
jno
inc
daa
push
xlat
mov
ret
dec
sub
mov
outsl
in
xor
je
aaa
mov
xor
dec
push
jbe
ror
fiadds
sub
fisubrs
cltd
adc
fs
dec
mov
mov
fs
arpl
sbb
dec
in
inc
mov
popa
push
dec
inc
popf
or
addl
leave
push
popf
pushf
in
xchg
in
xchg
and
subl
cmp
sti
or
hlt
insb
push
mov
push
shl
int
data16
add
pop
mov
jo
into
push
arpl
sub
sub
aam
cli
jge
dec
xchg
and
lahf
mov
fs
mov
in
mov
aam
jle
pop
std
fcoms
add
rol
cmp
jg
xor
fnsave
cld
pusha
jecxz
insl
int
dec
dec
cs
xchg
lds
and
iret
outsb
sub
mov
sbbb
sbb
pop
loopne
aad
in
pop
push
test
dec
pop
sub
push
and
jp
sub
xor
and
dec
sub
jbe
or
int3
or
xchg
ret
xorb
mov
lock
mov
and
adc
iret
sub
idivl
cwtl
lret
daa
pop
inc
cwtl
into
push
imulb
mov
mov
jae
sbb
int
mov
xlat
imul
xchg
sub
int
add
xor
lret
or
add
and
rorb
out
insb
or
add
fsubs
ds
or
scas
jb
arpl
hlt
sar
inc
adc
cwtl
test
xchg
icebp
in
mov
dec
mov
mov
aas
and
test
jle
sbb
rcrb
stos
les
jno
jmp
sarl
mov
lret
inc
pop
sub
jb
add
push
js
dec
clc
cmp
sbbb
test
add
mov
in
negb
dec
add
xor
jmp
xor
or
enter
loopne
negl
scas
mov
dec
pusha
into
lods
cmp
xchg
fiaddl
hlt
dec
sub
sbb
ret
loop
stc
sub
sti
mov
push
fs
movsb
push
sbb
push
mov
sbb
mov
xor
and
arpl
push
les
sbb
cmc
sbbl
xor
mov
enter
in
cmp
sar
mov
fiaddl
push
mov
scas
pop
xor
xor
inc
arpl
ss
fcomps
adc
arpl
insl
cmp
adc
mov
cmpsl
xor
sbb
xchg
and
pusha
psrad
mov
cmp
fiadds
or
lock
aas
push
push
scas
cmp
int
mov
xchg
ja
imul
mov
lea
xchg
push
mov
pop
xor
rclb
mov
inc
mov
repz
aad
fnstsw
dec
mov
in
add
jmp
aam
xchg
repz
mov
add
jbe
sbb
xchg
cmpsl
aam
xchg
fs
lahf
jns
add
push
or
in
adc
jne
cmp
aam
push
test
pop
mov
pop
pop
lds
sub
sbb
mov
mov
jno
popf
in
or
call
fcmovb
daa
mov
mov
rol
cld
pop
arpl
repz
and
gs
mov
hlt
sbb
xor
jae
push
xchg
pop
adc
orb
sub
mov
and
jmp
dec
outsl
xlat
iret
sub
sub
mov
aas
cmp
fstpl
mov
fstpt
lea
fdivs
sub
dec
je
cmp
repz
cmp
sbb
out
mov
fnstcw
aas
fs
push
aaa
mov
ret
fbld
pop
push
outsb
sbb
das
xchg
aad
jmp
mov
sub
lea
jl
test
test
add
mov
sbb
mov
out
or
ret
ss
loopne
in
dec
inc
addr16
xchg
sub
test
jl
jb
rcrl
sbb
out
aaa
sub
mov
push
push
xchg
call
imul
cli
call
push
lds
ret
outsb
dec
fisttpll
mov
in
dec
or
cmpsl
sbb
sbb
loop
dec
aaa
cmp
outsl
pop
out
ss
mov
lds
mov
mov
pop
jbe
cltd
insb
ret
jae
jns
jmp
insl
cmpsl
imul
add
pop
pop
mov
arpl
mov
leave
lahf
out
cmc
mov
mov
or
xchg
movsb
cmp
or
out
ret
push
cld
stos
cmc
push
xchg
adc
fstps
push
shlb
aaa
or
mov
fwait
lcall
jle
inc
test
mov
fidivl
out
jnp
dec
lock
mov
or
gs
mov
push
rorb
es
xor
movsl
push
out
cmp
and
js
adc
mov
xor
mov
adc
pop
inc
scas
ss
sbb
stos
push
jo
iret
lret
mov
lock
lahf
xorb
fstl
outsb
xchg
cmc
filds
xchg
jmp
lea
mov
aas
fidivrl
mov
push
push
aad
mov
mov
cwtl
sub
pop
bound
rcl
enter
jecxz
pushf
cld
jl
sbb
clc
inc
mov
cmpsl
mov
insb
push
push
mov
mov
notl
je
clc
push
adc
call
push
jns
ret
sarb
arpl
or
stc
adc
cli
cmp
adc
stc
bnd
cmp
lret
dec
and
jo
je
mov
lahf
scas
inc
mov
hlt
xor
es
addr16
adc
das
push
push
fs
gs
sub
bound
out
dec
aas
mov
addr16
push
nop
rolb
pusha
scas
or
jae
in
cltd
jbe,pt
pusha
scas
sbb
or
add
out
lods
xchg
mov
dec
clc
or
outsl
jg
mov
fsts
sub
getsec
loope
sub
xchg
jecxz
dec
enter
xchg
pop
push
or
subb
cmp
push
fcmovne
rorl
and
sub
push
adc
insb
mov
jmp
movsb
outsb
insl
pop
xchg
iret
data16
pusha
dec
add
hlt
or
cli
stc
push
inc
movsb
inc
shll
pop
cld
addr16
jno
adc
sbb
dec
pop
fdivs
xchg
dec
inc
xlat
data16
sbb
call
test
aad
pop
movsb
dec
sbb
rcll
notb
shrl
imul
std
sbb
inc
popa
dec
xchg
sbb
mov
and
lods
mov
scas
pop
push
xlat
adc
push
xchg
adcl
loope
xor
pushf
jp
push
xor
shlb
xchg
or
fsubs
mov
pop
jnp
or
dec
mov
not
sbb
lods
cmpsl
xchg
sbb
jno,pt
and
xor
pop
cmpsl
jb
pop
jg
fcmovnu
sub
jnp
cs
arpl
dec
and
push
pushf
fiadds
jl
push
sbb
test
popl
rcrb
outsl
inc
mov
sub
int
mov
dec
insb
mov
xchg
pop
shl
pop
ret
fsubrs
cmp
jg
jo
sbb
pop
sub
js
fs
mov
fs
jns
out
test
sub
and
pop
mov
sbb
sbb
push
mov
xchg
inc
jo
pop
pop
jo
add
roll
mov
adc
xchg
inc
or
cwtl
jle
pop
std
lock
mov
mov
mov
push
cld
inc
ljmp
stos
cmp
loope
js
outsl
or
movl
cmpsl
ss
mov
mov
fs
xchg
testl
loope
pop
xchg
sub
dec
cmc
ret
pop
bnd
jae
jne
int
popf
rorb
lods
xor
adcb
test
outsb
repz
sbb
push
jo
out
jp
pop
sti
imul
sub
mov
dec
rcr
and
sbb
inc
je
cs
cmc
push
add
fildl
popf
lea
mov
cmp
and
jnp
push
inc
test
pop
push
cs
loopne
mov
lods
pop
into
data16
aad
je
pop
jae
ljmp
mov
jle
mov
inc
jl
cs
xor
mov
arpl
mov
call
fnstsw
mull
iret
imul
adc
pop
lock
mov
add
mov
add
jl
repnz
jge,pn
sub
scas
sub
js
xchg
jae
pop
mov
mov
cltd
pop
fbld
add
mov
adc
outsl
jg
into
pmaxub
cld
inc
dec
sahf
cltd
xchg
xchg
jg
push
inc
loope
add
and
pop
mov
fidivrl
and
jo
xchg
push
ds
sbbl
jnp
sub
xor
jmp
popa
out
sti
mov
add
repnz
gs
call
xchg
mov
and
xlat
jne
push
js
sub
stos
fsubrl
mov
mov
cmpsb
loopne
push
xchg
jmp
loopne
arpl
mov
mov
cmpsb
jg
pop
adc
mov
inc
test
divps
push
loope
sbb
mov
inc
mov
mov
jp
jmp
xchg
rolb
mov
cwtl
cmp
mov
mov
lods
mov
jecxz
movb
les
mov
push
xor
aam
inc
and
sbb
pop
mov
sbb
and
sub
lcall
xchg
cwtl
xor
dec
jg
push
jl
or
pop
push
psubusw
xchg
adc
ret
jg
xchg
ds
jno
sbb
sarl
pop
sub
sbb
popa
cld
or
lods
pop
ja
sbbl
sarb
sub
push
mov
mov
ficomps
daa
nop
outsl
or
mov
cmp
dec
add
in
or
repz
enter
or
sbb
sub
icebp
fwait
loop
sti
jp
sahf
cmpsb
data16
pop
jnp
stos
arpl
stos
lock
ret
xor
out
mov
adc
test
mov
cmp
xchg
jecxz
cwtl
mov
out
rcr
sub
in
pop
add
mov
in
and
gs
out
jno
in
imul
test
aad
jp
xor
imul
mov
pop
es
mov
pop
cld
fs
pop
cmpsb
mov
sbb
sbb
in
outsb
xor
scas
jae
pop
cmp
sub
out
mov
lds
loopne
lea
aad
pop
cwtl
jb
dec
aam
orl
xchg
lock
mov
pop
mov
mov
push
movsb
iret
scas
push
ret
shl
ret
cmp
jge
xchg
aad
inc
jl
add
movsb
cmp
imul
test
je
daa
mov
push
inc
push
scas
lret
sub
jo
pop
and
out
out
ljmp
xchg
arpl
push
mov
sub
add
sub
mov
in
jg
cmc
test
mov
pop
cmp
adc
pop
sti
bound
lret
jmp
inc
mov
out
inc
insl
mov
sub
adc
xor
cltd
punpcklbw
cmc
das
cmp
adc
ds
inc
lcall
int
ret
outsl
in
dec
pushf
xlat
and
loopne
pop
dec
mov
aad
xor
fisubrl
push
sub
sub
cmpsl
dec
das
je
cmp
clc
add
push
mov
lock
push
ficoml
push
cltd
adc
jbe
pop
pop
insb
out
mov
inc
popa
mov
adc
jnp
ja
mov
sbb
ja,pt
les
jecxz
pop
mov
mov
xor
or
cmc
aam
mov
adc
dec
mov
in
sahf
clc
fbld
inc
pop
cli
and
stos
inc
and
push
adc
cmp
ss
push
xchg
test
rorl
subb
pop
dec
repnz
nop
adc
xor
mov
movsb
orl
lahf
jg
inc
jp
jp
jne,pt
and
outsl
cmc
and
ljmp
lret
loope
jle
pusha
and
fs
push
fldenv
or
fcompl
or
shl
push
enter
pop
push
adc
cmc
movsl
sbbb
shlb
cmp
cmp
test
or
stos
adc
sahf
divb
jl
push
jmp
jne
scas
dec
in
inc
push
dec
add
sbb
jnp
ja
push
jns
mov
xchg
ret
jl
add
repz
popa
cmc
sbb
lds
adc
fldcw
ret
inc
adc
sub
lods
fisttpll
sub
adc
subl
mov
sub
dec
ja
scas
dec
mov
jecxz
xor
sti
mov
pop
cwtl
mov
pusha
ss
ret
mov
icebp
xlat
xchg
add
and
xchg
lods
inc
xor
push
inc
rolb
cmp
xor
add
and
ret
adc
jno
inc
loope
push
movsb
jle
in
xor
es
cmp
xchg
insb
test
daa
mov
loopne
and
hlt
adc
mov
vmovlps
in
xchg
mov
sub
cltd
mov
add
inc
dec
scas
jg
scas
push
xlat
cmp
mov
pop
es
popa
or
sbb
and
in
sub
ret
xor
xchg
lahf
std
call
cmp
inc
dec
shll
push
mov
xchg
cmp
testb
mov
out
loopne
clc
int3
jae
out
cli
out
jae
dec
add
add
cmpsb
adc
sub
scas
notb
push
and
into
loop
hlt
into
pop
dec
jbe
lods
pop
dec
sahf
aad
pop
push
pop
stos
xchg
mov
mull
fistpl
stos
xor
cmp
mov
adc
pop
orl
js
mov
lds
mov
mov
dec
sbb
fldenv
xchg
xchg
das
add
fisubrl
mov
add
xchg
pop
outsl
lret
sub
xchg
xchg
out
jmp
dec
pop
pop
xor
shr
mov
dec
fidivrl
fcoml
pop
adc
cwtl
iret
mov
outsl
xor
jb
rcrl
push
mov
cmp
popa
add
outsl
and
iret
imul
xchg
daa
xchg
xor
fcompl
add
or
cs
mov
test
icebp
adc
mov
int
loopne
jns
dec
out
loopne
dec
imul
mov
adc
add
mov
enter
idivb
or
and
jecxz
jo
fsubs
lahf
hlt
popa
test
aas
iret
dec
xlat
xchg
arpl
insl
mov
adc
int
lock
jge
cld
xchg
add
mov
jae
sbb
clc
mov
mov
add
push
stos
mov
or
icebp
adc
outsl
test
fnstcw
jbe
mov
inc
in
mov
rorb
mov
aad
sbb
and
jno
ret
pop
mov
pop
adc
test
je
les
imulb
add
adc
jmp
push
lods
xor
sahf
mov
sahf
lcall
mov
cmp
xchg
insb
repz
roll
mov
jo
mov
adc
jns
dec
ljmp
hlt
mov
xor
lahf
sbb
sub
fistps
mov
mov
aaa
mov
mov
jb
cs
sbb
push
or
es
add
ret
add
std
dec
insb
scas
jnp
adc
pop
mov
pop
jae
test
mov
repz
add
pop
mov
daa
inc
mov
cmc
leave
cld
cmpsl
sahf
in
mov
push
pop
mov
out
and
xor
enter
stos
stos
pusha
add
mov
xchg
cmpsb
inc
hlt
fildl
enter
push
dec
repnz
call
scas
js
call
movsl
mov
lahf
iret
cld
mov
js
es
js
jl
les
data16
jne
dec
jae
ret
xchg
or
and
and
ja
jle
ss
adc
es
and
lock
std
jnp
add
push
loopne
xor
out
pop
inc
jle
jno
xor
push
adc
rcl
push
push
jno
jecxz
insb
subl
or
dec
scas
in
out
fisubs
mov
pop
jecxz
pop
xchg
repnz
mov
xor
adc
adc
ss
out
shll
inc
pop
jp
xchg
mov
ss
jne
add
decb
rcr
insl
add
inc
mov
sti
les
loopne
and
pop
std
iret
xchg
daa
out
jo
mov
inc
cmp
ljmp
or
pop
or
orb
stos
mov
lds
inc
push
pushf
cmp
cmp
mov
push
cltd
dec
cmp
sbb
dec
cmc
or
outsb
into
ss
inc
jbe
mov
mov
dec
sub
subb
dec
add
subl
repnz
xor
jo
cmp
xlat
insb
lret
in
jno
repz
pop
jmp
cmp
cli
scas
icebp
popa
push
bound
stc
adc
adc
jno
cmp
out
add
inc
cmp
loope
scas
out
push
mov
sbb
cmc
or
mov
cs
lcall
xchg
jb
xchg
loop
mov
mov
into
sub
xor
std
sub
mov
mov
aam
inc
mov
or
xchg
je
jecxz
add
sub
fmul
push
lock
popf
add
xor
mov
xlat
jle
and
pop
dec
pushf
dec
sbb
out
push
push
pop
xlat
lods
pop
jno
pop
add
scas
andl
dec
dec
pop
pop
imul
in
inc
mov
in
cmp
popf
pusha
pop
shl
daa
sub
push
out
or
popf
add
mov
cli
rolb
mov
daa
add
in
test
cmpsl
xchg
jae
hlt
dec
scas
pop
and
jl
mov
xor
sbb
rolb
rol
in
fldt
in
mov
repnz
jae
fstpl
dec
ljmp
int
in
jg
add
cmp
cwtl
xor
and
out
cmc
push
push
imul
lahf
ds
pop
lret
call
mov
imul
addr16
push
mov
subb
and
mov
out
roll
sarb
sub
xchg
sahf
or
jp
xchg
and
cs
inc
js
shll
data16
rol
xor
mov
dec
fwait
sbb
mov
sbb
xchg
and
inc
ja
and
std
shr
lret
outsl
sub
or
in
das
lods
ficomps
sbb
out
xchg
cmp
or
sbb
pop
mov
jle
mov
dec
insb
sbb
adc
cs
ljmp
pop
je
lods
dec
inc
mov
mov
out
into
mov
in
dec
or
mov
call
lods
inc
push
jae
clc
pushl
imul
mov
jg
out
cld
or
and
jle
adc
add
jge
fcomi
leave
das
lret
ret
mov
fsubl
icebp
fwait
lods
jo
xchg
cmpsb
js
movhps
mov
sub
sbb
sub
sbb
pushf
xchg
rcll
shll
jl
xchg
imul
enter
cltd
inc
dec
nop
and
lcall
ret
xor
outsb
mov
sbb
fadds
jecxz
das
imul
cwtl
lret
cmc
lret
dec
dec
add
and
ds
paddsb
bound
jbe
icebp
imul
leave
fs
sub
out
xchg
or
mov
push
test
imul
push
jae
popf
mov
ffree
pop
dec
jbe
cmp
mov
push
sbb
dec
aas
cwtl
xchg
sub
faddl
push
mov
mov
les
jo
fistpll
dec
pop
or
inc
pop
lret
sbb
sbb
je
sbb
add
and
test
push
mov
sub
fistps
ljmp
sbb
pop
stc
inc
shrb
rolb
outsb
push
bound
lods
push
mov
mov
jne
sub
mov
scas
dec
outsl
repz
mov
and
icebp
mov
cmpsl
rcll
inc
xor
adc
popa
pop
jno
inc
daa
push
xlat
mov
out
xchg
loope
icebp
mov
cmpsl
rcll
inc
xor
adc
popa
pop
jno
inc
daa
push
xlat
mov
out
xchg
loope
jno
shll
ja
adc
popa
pop
jno
inc
daa
push
xlat
mov
out
xchg
loope
icebp
mov
cmpsl
rcll
inc
fldl
addr16
jmp
fsubrs
xchg
xor
and
adcb
push
mov
inc
repnz
loop
adc
and
push
out
jb
push
ss
mov
jbe
retw
inc
loop
andb
imulb
jle
pushf
jp
dec
es
in
arpl
adc
xchg
loop
adc
ja
gs
leave
sub
xchg
and
loop
cs
add
sub
jecxz
sahf
notl
mov
inc
mov
rorb
mov
pop
repz
pop
cltd
sub
or
add
aam
jmp
inc
aas
stc
das
enter
aad
add
jno
cmpsb
adc
push
lret
mov
popf
es
loopne
pop
xchg
pop
xchg
shll
mov
pop
pop
ljmp
out
pop
jp
bound
push
xchg
inc
jne
mov
shl
mov
mov
push
adc
add
arpl
mov
push
repnz
jmpw
repnz
mov
sub
push
out
test
loop
adc
inc
push
mov
data16
inc
mov
inc
loop
cli
jno
or
subl
aam
jns
lret
add
xor
loop
into
pop
xchg
cmp
mov
aam
xlat
arpl
cmp
xchg
pop
mov
inc
mov
bound
inc
jb
bound
xchg
adcb
push
mov
push
repnz
loop
adc
and
push
out
jb
bound
xchg
adcb
push
mov
push
repnz
loop
adc
push
test
in
popa
movsb
sub
sub
push
jg
xchg
aam
or
xor
dec
data16
outsb
bound
cwtl
pop
pop
adc
int3
pop
pop
mov
sbb
test
loopne
mull
ja
in
pop
mov
xor
leave
pop
es
adc
push
mov
and
mull
incb
stc
leave
inc
out
adc
insl
xor
xchg
sub
mulb
adc
mov
adc
jecxz
jge
cmp
inc
bound
push
fiadds
pop
inc
mov
addr16
push
push
lods
sbb
in
jg
enter
xchg
jmp
fs
pushf
mov
data16
in
je
movsl
jp
push
frstor
in
test
pop
cmpsl
jge
testl
stos
rolb
mov
outsb
jne
jl
mov
test
mov
xor
mov
inc
push
test
cltd
pop
or
aaa
push
jae
imul
cmp
xchg
push
sub
push
test
cmpsl
mov
imul
jp
outsl
loope
cmpsb
add
les
mov
cli
in
in
push
sub
and
push
sub
xchg
mov
nop
leave
aas
out
xchg
sub
lods
js
adc
cwtl
mov
inc
das
outsl
popa
in
xchg
sbb
xchg
dec
iret
adc
adc
inc
cwtl
mov
inc
cmc
cmp
imul
shll
out
fldenv
adc
cltd
xor
jmp
jb
push
mov
pop
loop
dec
push
inc
jbe
pop
dec
jl
inc
sbb
add
push
xchg
lret
pop
in
fidivrs
push
clc
mov
inc
jo
lret
lods
sub
jo
adc
ret
int3
jl
into
or
and
ficoml
inc
test
das
sub
inc
pusha
sahf
inc
mov
out
cltd
testl
pop
and
xor
sub
ss
inc
or
lahf
out
testl
and
xlat
iret
mov
bnd
lods
push
bound
pop
fcmovu
xchg
mov
xchg
in
outsl
and
out
ja
ret
push
and
cmpsb
ds
push
and
in
shll
ja
xor
and
and
cmc
aas
fs
xchg
or
inc
jecxz
jne
popf
ds
incl
fnstcw
inc
mov
movsl
fstps
in
int
int3
sbb
mov
or
int3
pushf
jmp
pop
mov
out
mov
dec
mov
jmp
push
mov
cltd
addr16
dec
arpl
mov
mov
clc
das
push
lods
dec
int
test
pop
leave
push
test
mov
rcll
push
pop
lahf
jg
loope
sbb
sti
lea
xor
sbb
mov
jae
aad
enter
mov
loopne
dec
xor
int3
inc
les
test
cmp
ret
fcomps
jl
cli
lahf
loop
cmpsl
fs
test
mov
iret
jae
cmpsb
push
lods
pop
lock
cmp
mov
pop
out
pop
jnp
int3
sahf
pop
inc
int
lret
mov
sub
clc
mov
push
mov
dec
lcall
sub
mov
sti
inc
pushl
pop
mov
clc
scas
aas
and
jae
in
and
and
iret
pop
and
mov
dec
add
jnp
dec
int3
mov
mov
inc
aaa
jae
shlb
jae
pop
dec
push
dec
mov
sbb
insl
ret
mov
jmp
ficoms
jg
and
arpl
xchg
test
jo
sti
jmp
out
flds
xor
pop
test
xlat
push
out
lea
fwait
sarb
jbe
outsb
arpl
lret
sbb
inc
dec
dec
mov
jp
es
outsb
aad
mov
xor
leave
xchg
jecxz
int
sbb
dec
in
ret
mov
adc
cli
mov
dec
lods
sub
add
aam
lahf
clc
inc
loopne
mov
sbb
imul
ficoml
dec
and
sbb
and
xor
mov
add
jns
add
jb
xchg
les
mov
ret
xchg
xor
push
xor
pop
scas
loop
sar
jmp
pop
insb
push
mov
scas
mov
addr16
fidivrl
push
imul
fildl
jo
xchg
pop
mov
jle
arpl
imul
xchg
or
addr16
fimuls
dec
sub
ds
mov
fadd
xchg
aad
fucomp
cmp
cmc
lock
fistps
decl
push
jmp
pop
addb
inc
clc
mov
dec
mov
gs
test
and
xchg
loope
insl
dec
mov
jl
mov
push
dec
or
and
xor
adc
cmpsb
sbb
xchg
sahf
cmp
push
repnz
push
nop
aam
stos
mov
dec
cld
xorl
xor
add
hlt
gs
outsb
imul
shll
add
in
jnp
and
push
sbb
cmpsl
int
sub
and
out
shrl
xchg
dec
lock
lods
or
push
jmp
mov
lcall
cld
dec
pop
stos
scas
sarb
pop
jle
and
push
add
and
mov
icebp
mov
mov
mov
xchg
xor
std
fs
sbb
adc
loope
add
mov
push
into
in
dec
repz
icebp
mov
negb
xlat
jns
sub
andl
add
sarl
mov
iret
repz
cltd
dec
inc
fists
stos
mov
xchg
dec
jle
and
adc
aam
dec
mov
repz
mov
movsb
dec
push
jp
in
imul
stos
pop
mov
xchg
inc
sub
pusha
xchg
adc
aas
add
arpl
inc
gs
mov
mov
std
out
jno
lret
jns
add
and
mov
mov
in
mov
je
es
in
pusha
aad
push
pop
sti
call
rcll
jns
lret
push
jecxz
cmpsl
outsl
out
xor
inc
sbb
rclb
out
cmpsb
push
mov
lock
test
cmc
adc
push
cmpsl
xor
shll
xor
push
adc
neg
lahf
aam
clc
sbb
mov
push
and
jno
mov
jl
cmp
and
testb
outsb
push
popf
inc
jne
loope
clc
mov
dec
mov
test
ffreep
xor
sbbb
cld
jecxz
push
ja
mov
xchg
push
fcoms
dec
out
jns
jns
cld
incl
cld
call
mov
ret
ja
jno
mov
in
xchg
clc
sbb
es
inc
push
jno
xor
pop
dec
push
pushf
std
pop
cmp
testb
test
mov
rclb
gs
mov
xlat
ss
or
add
ret
imul
mov
sbb
mov
sub
cmp
or
out
vpmacssdqh
xchg
hlt
push
adc
out
in
sti
adc
mov
jbe
int3
and
cmp
sbb
neg
in
pushw
rclb
in
jecxz
jecxz
popf
jmp
lea
mov
sub
mov
jecxz
and
cmp
sar
jne
dec
ljmp
mov
in
cmc
fbld
xchg
jae
jge
outsb
dec
mov
inc
jecxz
scas
repz
adc
jne
icebp
testl
add
cli
fistpl
jmp
inc
mov
aad
sub
hlt
dec
std
testl
out
aam
mov
adc
test
pop
rcrb
fwait
stos
enter
pushf
pop
mov
push
mov
mov
push
lahf
es
jno
ja
cltd
and
pushf
scas
jb
xchg
push
lret
loop
pusha
jle
jmp
mov
cmp
pop
add
enter
cmp
js
in
lret
sbb
loope
add
popw
sub
mov
clc
push
lods
cmc
cmc
loop
sbb
stos
xchg
adc
pusha
push
cmpsb
test
pop
cmpsl
icebp
and
dec
mov
add
inc
popf
rcll
leave
lods
jmp
pop
jl
push
repnz
cmp
mov
pushf
out
lcall
mov
cs
mov
loope
movsb
jmp
adcl
xchg
push
popa
imul
inc
sti
sbb
pop
add
mov
pusha
out
int3
movsb
xchg
aaa
and
jne
adcl
pop
sti
outsl
jae
lcall
inc
sbb
fnstsw
cld
fmul
insb
inc
arpl
xlat
add
mov
scas
lret
data16
jne
in
jecxz
mov
ret
and
and
cmpsb
sub
push
loopne
hlt
add
test
bound
mov
ss
adc
add
mov
sbb
mov
pop
enter
sarb
add
scas
std
int3
sbb
jecxz
jb
loope
cmp
inc
mov
lahf
dec
leave
lret
mov
in
test
xor
or
mov
add
dec
stc
lods
mov
dec
test
call
std
mov
pop
je
icebp
test
mov
int3
sub
out
sbb
aas
adc
add
mov
bound
inc
lods
inc
fnstsw
mov
pop
jmp
fists
sub
inc
mov
idivb
in
push
lcall
add
push
dec
enter
hlt
hlt
les
outsl
popa
arpl
out
push
roll
cwtl
dec
or
mov
pushf
rcll
or
ficompl
mov
pusha
mov
dec
inc
lods
mov
aas
sub
decl
hlt
cmpsl
inc
pop
ret
push
cwtl
sub
daa
jp
shrl
xchg
pop
pop
std
mov
cmpsl
jne
inc
es
inc
jb
rorl
xor
lahf
jp
jp
int3
fs
divb
mov
bt
int3
repnz
xchg
mov
addr16
inc
xor
and
insl
mov
xchg
dec
out
adc
sti
sbb
inc
and
rorl
push
push
xlat
xchg
mov
inc
outsl
dec
inc
jmp
xor
loop
xchg
shlb
xchg
push
lods
fisttpl
inc
cli
adc
das
dec
push
stc
or
movsb
outsb
sarl
repz
add
mov
mov
xchg
push
sub
dec
fimull
xchg
fwait
xchg
mov
sbb
pop
xor
adc
cmp
loope
xchg
jmp
push
in
push
mov
jg
iret
xchg
or
add
cmp
int3
iret
lds
gs
push
daa
in
shrl
or
inc
sti
jnp
stos
imul
das
xchg
jo
add
push
dec
push
sub
mov
add
data16
xchg
mov
xchg
enter
jl
xor
adc
nop
rcl
fsubl
and
xorb
in
pop
out
cld
mov
outsb
repz
cmpsb
adc
cmpsb
pop
gs
xchg
loope
xor
imul
out
das
icebp
cs
sub
leave
in
mov
pop
popa
and
push
fmull
ds
jl
or
ret
push
daa
cmc
sub
les
daa
repz
mov
call
ss
pop
adc
xor
arpl
jle
test
adc
ja
ljmp
cmp
pop
mov
xor
fs
cmp
jne
in
xchg
mov
xchg
push
fisttpll
negl
sub
mov
data16
in
push
xor
add
mov
cmp
sub
dec
int3
je,pn
test
mov
rcrb
pop
xchg
jecxz
cmpsl
mov
sbb
loop
mov
xchg
mov
lret
sbb
jae
mov
jmp
test
out
push
rclb
push
ret
mov
mov
fidivs
lahf
mov
mov
cmp
fwait
push
add
dec
xchg
xchg
into
mov
or
push
jge
cmp
xchg
incb
test
fwait
xor
into
xor
mov
inc
outsl
stc
inc
mov
xor
jae
ret
pop
jecxz
mov
sub
gs
je
aaa
fistpl
std
test
inc
push
out
mov
lahf
mov
xor
mov
jl
gs
mov
mov
mov
cmpsl
xor
ret
push
inc
es
jnp
mov
sbb
jns
jl
or
adc
pop
aam
shlb
jae
fbld
push
jnp
xchg
mov
out
and
sub
sub
lea
ret
mov
mov
inc
xchg
inc
out
pusha
mov
push
je
xchg
xchg
jne
xchg
jne
movsb
sub
call
scas
jle
xchg
out
and
call
rolb
push
jle
push
xor
dec
outsb
shl
adc
loopne
rorl
fwait
mov
jg
das
stc
dec
pop
leave
lock
sbbl
call
cmp
jge
adcb
and
cmp
cmc
jp
stos
mov
inc
shll
popf
roll
lret
pop
mov
xor
pop
out
sbb
mov
bnd
inc
js
push
sub
aad
mov
mov
ss
mov
jo
jle
sub
add
imul
movsl
imull
sahf
lods
imul
jb
add
loop
adc
jo
and
out
pushf
mov
jnp
sub
les
test
fildll
pop
or
push
lcall
sbb
xor
xchg
pop
push
dec
pop
insb
fildll
popf
leave
stos
call
enter
xchg
into
cmpb
or
mov
mov
jae
push
movsb
mov
inc
mov
or
xchg
ret
std
add
mov
cmp
jae
adcl
inc
and
mov
jne
jns
sbb
sbb
dec
jge
sbb
sbb
shrb
lahf
mov
push
jmp
stos
xchg
lods
xchg
int3
pop
push
inc
push
cltd
je
dec
aaa
stos
pushl
cld
jle
mov
shll
mov
fsubrs
orb
scas
into
jg
xchg
dec
outsl
aaa
icebp
pop
mov
test
pop
jl
ja
inc
loop
lds
out
xchg
or
nop
or
jmp
xor
xchg
or
out
xor
pushf
jne
cwtl
jb
addr16
pop
sub
pop
mov
mov
cmp
push
and
gs
scas
jmp
mov
das
outsb
pop
lds
push
xchg
pop
pop
in
in
inc
xor
push
mov
test
jno
bnd
imul
int
xchg
push
cmc
add
outsl
cmpsl
movb
ds
aas
push
fisubrs
aas
xor
push
jae
sbb
mov
adc
push
jns
cmp
fiaddl
push
inc
jbe
cmpsl
stos
arpl
xchg
pop
mov
or
pushf
pushf
inc
lcall
cmpsl
pop
ja
sbb
fdiv
ja
adc
int3
lods
orb
or
clc
push
repnz
leave
fiaddl
mov
xchg
iret
addb
cs
mov
xor
pop
insl
popa
shlb
add
and
jnp
cwtl
movsb
pop
dec
scas
xchg
leave
mov
ja
xchg
mov
jo
mov
xor
cltd
insl
cmp
pop
push
jmp
ret
outsl
push
cmpsl
push
daa
jmp
outsl
adcb
into
and
loop
sub
xchg
sbb
mov
sti
xor
mov
fstp
and
mov
xor
orb
lret
adcb
add
and
flds
xor
adc
inc
pop
add
adcb
cmp
loopne
insl
test
pop
push
into
je
mov
call
mov
dec
std
push
jge
mov
adc
out
stos
cmp
cs
mov
mov
int3
pop
mov
inc
jno
jl
and
ret
int
sbb
stos
mov
shll
sbb
jbe
ror
jb
imul
stos
xchg
repz
ds
rol
mov
lock
push
call
inc
dec
stos
push
aam
ret
push
and
mov
pop
mov
pop
sti
ret
sbb
in
not
cmp
repnz
mov
push
pop
sbb
cmpb
xchg
add
inc
cmp
pop
cmpsl
lret
dec
popf
mov
scas
jmp
mov
mov
into
pop
sar
push
insb
ss
ss
movsb
outsb
push
dec
mov
jmp
imul
lret
and
shll
out
sti
dec
inc
or
adc
divb
mov
sub
push
mov
jne
xchg
out
fadd
adc
jnp
das
pop
je
or
fstpl
and
push
das
enter
pop
inc
filds
pop
xor
sbb
and
mov
lods
or
out
and
inc
aaa
pop
pop
add
ret
inc
dec
lock
mov
cmp
pusha
xchg
jns
lods
aas
lcall
mov
and
lret
push
lods
cld
insb
jg
sbb
loope
mov
out
jns
std
and
mov
fisttpl
popf
das
fistl
or
ljmp
out
push
mov
clc
dec
iret
or
popa
fucom
sub
leave
mov
and
jmp
push
mov
jp
sar
rcll
out
xor
lcall
or
les
stos
repz
clc
pop
cmp
movsl
push
and
sub
mov
push
in
push
cs
xor
int3
pop
imulb
pushf
pop
out
pop
fmull
pop
sahf
xchg
sbb
pop
adc
stos
pop
shll
adcb
adc
adc
cwtl
stc
mov
mov
rol
push
xor
cmp
xor
pop
icebp
lret
lods
mov
and
cmp
or
adc
in
stc
outsl
loop,pn
into
dec
cld
addr16
outsb
push
sbb
aad
add
push
cmp
xorl
mov
roll
mov
sbb
sbb
push
int
leave
pop
xchg
pop
pop
or
xchg
adc
pusha
cmpsl
inc
push
fwait
out
push
cli
cld
test
loopne
inc
lods
aas
movsb
lea
push
pop
test
add
lahf
pop
adcb
dec
pusha
outsb
adc
shll
mov
out
cmpsl
dec
ficomps
xchg
pop
adc
push
mov
lahf
and
mov
sub
cmp
push
sub
out
fisttps
andl
out
shrb
scas
pop
dec
pushf
dec
repnz
jnp
xor
pop
inc
ficoml
jbe
pop
stc
cmp
ffree
pop
stos
stos
hlt
push
mov
mov
jno
repnz
into
sahf
cwtl
xchg
test
mov
in
xor
test
inc
ret
sbbl
das
xor
decl
rorb
jmp
xchg
sbb
insb
movsl
cmp
jl
cmp
dec
xor
pop
sbb
jno
mov
lret
in
push
gs
scas
mov
inc
add
pop
dec
push
fiaddl
sub
ja
add
sub
mov
and
rorb
stos
jmp
mov
iret
bound
int
insl
mov
loope
das
movsb
movsb
in
aad
popa
mov
mov
xor
stos
pop
cltd
sub
mov
adc
test
mov
jo
daa
fists
xchg
out
mov
icebp
xor
rorb
dec
jmp
cld
push
leave
dec
dec
sbb
shll
pop
shll
push
mov
sbb
jecxz
aaa
int
jp
js
outsl
repz
loopne
test
push
inc
dec
or
pop
lret
xchg
adc
add
mov
aaa
shll
pop
and
mov
in
nop
sub
sub
test
inc
filds
lock
sub
fmulp
or
mov
jnp
aaa
mov
popf
out
daa
fstpt
clc
jne
int
jl
pxor
inc
inc
aaa
xlat
inc
js
addr16
inc
adc
iret
mov
xchg
dec
ja
xchg
push
cmpb
cmp
dec
lret
mov
sar
mov
sbb
sub
and
cmc
or
mov
mov
mov
bound
js
jb
jnp
push
or
cld
fsubr
pusha
int
sub
in
push
adc
and
pushf
test
in
clc
sti
sbb
sub
sub
ja
pop
pop
inc
orl
or
add
insl
int3
out
ds
jp
jns
test
mov
hlt
aad
popf
pop
jp
ret
mov
fbld
lret
mov
xchg
adc
outsb
int3
push
add
imul
loope
push
aas
push
push
sub
or
cli
jae
dec
fwait
rcr
imulb
aas
loopne
loop
mov
inc
in
xchg
sub
xor
dec
movsb
add
dec
pop
aaa
cmc
add
push
aaa
aam
mov
dec
xor
in
imul
in
cmp
rol
cmp
add
pop
xchg
notb
inc
jb
bound
xchg
adcb
push
mov
push
repnz
loop
adc
and
push
out
jb
bound
xchg
adcb
push
mov
push
repnz
loop
adc
and
push
out
jb
bound
dec
adcb
push
mov
push
rolb
mov
cmpsl
add
push
out
repnz
bound
insl
sub
out
cmp
push
addl
mov
push
inc
mov
repz
lds
cmc
and
xor
arpl
xchg
jne
gs
ret
add
repz
lds
cmc
and
xor
arpl
xchg
insl
mov
sbb
repz
cmp
popf
xor
push
bnd
subl
jne
adc
add
loop
push
pop
ds
jl
mov
mov
xchg
mov
or
cmp
sti
push
mov
sbb
lds
pop
inc
xchg
xchg
sbbl
ret
cmp
int
push
pusha
mov
movsl
jb
jl
xchg
mov
ret
lret
mov
rcr
int3
push
test
ds
movsl
push
add
jne
dec
ljmp
movsl
aad
add
hlt
fists
push
dec
bound
imul
lcall
sub
add
mov
movsl
jae
sbbl
gs
ret
adc
repz
add
adc
and
xor
arpl
inc
adc
adc
data16
arpl
aad
test
pop
xchg
loopne,pn
loope
push
cmp
and
sbb
add
repz
inc
mov
pop
xchg
sub
cmp
push
rcrl
xlat
or
shll
add
adc
and
xor
arpl
xchg
jne
gs
ret
add
repz
lds
cmc
and
xor
arpl
xchg
push
push
bound
lds
mov
hlt
sbb
jne
insl
roll
std
xchg
lret
fsubrs
push
mov
pop
jnp
xchg
dec
negl
sub
test
pushf
sar
xchg
fdivs
dec
pop
xor
jb
jno
scas
pop
int3
int
add
and
iret
inc
mov
sub
popf
fucompp
or
xor
scas
fiaddl
shrb
jecxz
mov
mov
jle
std
xchg
nop
es
sbb
pop
and
subl
orb
sub
stos
scas
or
leave
out
xor
ja
pop
dec
leave
lock
out
int
sbb
inc
sti
xchg
cmp
adc
sub
enter
loopne
cld
out
push
jns
sbb
mov
punpckldq
sub
push
add
sar
js
fsubrl
ljmp
lahf
cltd
sub
loopne
push
inc
clc
scas
ja
addr16
xchg
in
out
cwtl
xor
shrl
test
int
pop
xor
sti
test
das
insl
mov
lods
dec
cmpsb
aam
jg
stos
xchg
jae
mov
mov
cmp
sbb
in
cmp
lods
cltd
cmp
xchg
lods
push
adc
loopne
push
mov
test
mov
ss
sbb
arpl
pop
mov
cmp
or
aad
xor
repz
test
lock
popa
test
in
jmp
sub
mov
mov
pushf
xchg
fstl
mov
lcall
outsl
jg
inc
mov
out
pop
push
push
mov
cmc
data16
adc
pop
subl
lcall
xor
loop
push
push
cmp
xlat
fmull
cmp
dec
addr16
or
sbb
dec
arpl
sub
addr16
movsb
insl
fwait
xlat
lret
pop
sub
mov
movsl
and
outsl
test
jns
jecxz
bswap
out
push
xchg
jno
mov
inc
pop
xlat
pop
lcall
std
mov
xlat
push
fsubrl
sub
inc
hlt
jl
fnstsw
xchg
arpl
inc
out
and
fwait
adc
cltd
add
int
or
push
and
sub
cmp
dec
inc
int3
aam
into
mov
nop
idivb
inc
cltd
in
clc
push
out
rolb
and
mov
aaa
pop
add
fisubrs
nop
call
xchg
cmp
popf
jbe
out
or
and
sbb
adc
test
sbb
adc
push
pop
ljmp
in
test
xor
lcall
aas
pop
mov
test
adc
popa
push
adc
push
dec
push
cmpsl
dec
loopne
mov
inc
dec
and
loopne
movsb
insl
sub
xchg
mov
inc
add
outsl
rolb
inc
mov
xor
pop
in
std
aad
fisttps
cs
or
loopne
mov
out
push
les
lds
scas
test
loopne
pushf
jnp
imull
lahf
fs
push
addb
and
rcrb
mov
out
jno
insb
mov
push
sub
fmuls
je
xchg
cmp
dec
sarl
ds
mov
les
adc
daa
cli
push
push
cmc
xor
lret
jmp
add
icebp
imul
ja,pt
cmp
dec
mov
fucom
jb
or
pusha
out
out
pushf
sbb
in
loop
cli
aam
out
push
popa
jne
lret
xchg
xchg
jno
jmp
outsl
mov
roll
cmp
push
lahf
loopne
and
std
push
jmp
or
mov
sbbl
jnp
out
inc
xlat
cli
scas
jmp
mov
push
and
pop
sub
gs
test
jmp
int3
rcrl
xlat
mov
mov
pop
push
lock
jo
mov
jecxz
hlt
hlt
xor
aaa
mov
or
int
std
and
loop
or
pop
add
mov
xchg
mov
jmp
cmpsb
jmp
push
pop
movsl
lcall
dec
inc
sarl
insb
roll
push
or
xchg
outsl
xor
cwtl
pusha
jo
in
test
mov
ret
jp
popf
sbb
lret
xor
imul
mov
mov
ja
scas
ljmp
or
les
xchg
fidivs
imul
bound
jb
mov
mov
in
das
sbb
pop
dec
lret
in
or
inc
xchg
imul
not
bound
fidivs
cmp
xchg
push
or
insb
inc
lret
mov
das
sub
sarb
mov
outsl
cld
jae
xor
sti
dec
out
inc
and
or
jp
push
and
xchg
pushf
call
mov
push
fnstcw
popa
dec
sbb
rcrl
and
jnp
jbe
test
mov
out
or
push
lret
xlat
jno
cmpsl
sub
xor
test
dec
sbb
push
jns
les
dec
scas
fisubrs
inc
mov
add
mov
test
arpl
cltd
dec
mov
sub
xchg
lret
insl
xor
test
inc
ss
inc
imul
notb
inc
test
lods
mov
xchg
cmp
scas
outsl
test
loope
mov
adc
pop
cmp
icebp
and
xchg
aad
add
inc
add
adc
sbb
pop
clc
jns
lock
int
data16
mov
or
cmp
sti
cmc
scas
flds
jge
cmp
mov
hlt
loope
and
and
gs
lret
jg
xor
sbb
daa
in
push
push
inc
in
repz
cmp
push
out
andl
cmc
xor
add
dec
iret
cmp
sbb
mov
addl
lret
outsl
pop
mulb
xchg
dec
inc
pop
test
add
lret
adc
mov
lret
sbb
orb
mov
int3
sbb
xchg
ja
xchg
adc
arpl
ret
lahf
imul
cmp
call
lcall
mov
push
sub
sub
mov
ficoml
mov
inc
add
push
jb
jnp
aaa
xchg
and
rcrl
movsb
mov
ss
fsub
adc
sbb
xchg
jge
sbb
mov
ret
call
gs
inc
insb
aad
pop
mov
scas
int3
xchg
add
mov
sti
in
fldt
xchg
insl
cmpsl
sahf
rcll
pusha
cwtl
mov
inc
jg
xor
movsb
out
or
ret
cmpsb
mov
fcmovnb
adc
cmp
loopne
mov
xchg
shrl
int3
icebp
adc
add
and
sbb
jo
clc
sub
pusha
push
lds
mov
pop
rclb
xchg
iret
jp
pop
cmpsl
hlt
loope
cmovo
mov
cwtl
push
or
dec
fcmovnu
inc
loopne
add
sub
flds
iret
clc
js
sbb
mov
loopne
mov
inc
jp
adc
popf
das
and
pusha
shlb
call
xchg
jnp
in
aam
subb
sub
out
push
cmp
aam
mov
call
stos
cwtl
lahf
dec
mov
adc
ljmp
adcb
sub
dec
dec
pop
aad
or
push
nop
lret
inc
cmpb
mov
sbb
dec
sbb
sbb
iret
std
or
loopne
test
and
inc
cltd
addr16
ss
mov
adc
and
testl
cmp
jno
sub
fs
adc
imul
pop
scas
jnp
or
push
xchg
out
cmp
sbb
cmc
fadds
loopne
cmp
or
or
cmp
sti
xor
dec
lret
jl
call
pop
and
and
out
add
adc
mov
jnp
xor
mov
out
cmp
cmc
xor
test
cmp
sbb
pop
inc
sbb
js
xor
fwait
push
fs
adc
adc
std
and
push
mov
dec
push
xor
mov
sbb
ds
add
cmpsb
cmp
inc
dec
scas
orb
xor
dec
mov
icebp
inc
push
icebp
push
xchg
push
sahf
rorl
dec
cmpl
jg,pn
pop
lds
xchg
pcmpgtb
fcomps
imul
add
mov
pusha
jno
or
sahf
or
lahf
fisubrl
test
sub
lock
stos
sbb
icebp
lret
push
test
pusha
rol
andb
dec
test
push
arpl
pop
repnz
pop
sbb
daa
add
inc
push
sub
data16
xor
dec
pop
outsb
pop
data16
pop
cltd
sti
idivl
push
inc
push
addr16
pop
loope
xchg
xor
jae
cmp
in
outsb
mov
nop
xchg
add
push
fistpll
mov
and
outsl
dec
inc
gs
lret
push
scas
cmpsl
ds
das
nop
lea
jo,pt
inc
loopne
cmpsb
icebp
push
mov
pop
inc
pop
mov
xchg
xchg
ljmp
add
call
lock
mov
clc
mov
repz
sbb
push
lret
cmc
inc
sbb
mov
loop
mov
pop
rcll
xor
stos
ror
inc
daa
or
fwait
add
dec
mov
outsb
adc
pop
cmp
mov
sarl
xlat
repz
aas
or
jle
cmpl
push
inc
pop
pusha
pushf
mov
mov
xchg
fmull
mov
imul
and
lret
add
jnp
adc
out
push
jbe
mov
idivl
std
aad
and
sbb
sbb
jle
outsb
stc
xchg
cli
lods
out
std
mov
lret
cmpsb
adc
inc
shrb
add
mov
mov
loope
inc
sbb
out
out
pop
dec
incl
lock
adc
cltd
roll
mov
fists
mov
xchg
lcall
adc
sub
xor
jg
ja
ja
add
push
in
out
xor
push
cmp
lcall
mov
rolb
scas
xor
inc
inc
scas
lods
int3
sbb
sbb
add
dec
cvtpi2ps
in
es
fcom
mov
inc
dec
mov
in
adc
or
jno
in
push
call
pop
stc
lret
repnz
mov
rcll
imul
or
lahf
imul
pop
cmpl
pusha
addr16
out
jl
mov
out
aad
mov
cmp
leave
cmp
lds
imul
xchg
xor
cs
add
out
jnp
dec
inc
in
sbb
adc
bound
iret
jae
mov
xchg
cmp
push
ljmp
or
jl
stc
in
lods
outsl
mov
clc
pushf
scas
stc
lcall
xchg
sbbb
add
sbb
popa
repz
push
or
lahf
jo
call
lock
cmp
dec
out
pop
out
cmpsl
xchg
cmp
push
push
dec
sti
jp
inc
xlat
and
or
or
into
mov
push
and
fnstcw
dec
pushf
loope
jecxz
aas
addr16
hlt
add
sub
cmp
mov
aad
cli
shrl
lea
les
xlat
fwait
imul
adc
xchg
iret
popa
adc
in
int3
pop
stos
adc
insl
pop
rclb
test
loop
pop
lret
and
aas
xor
rcrl
jne
add
sub
cmp
sarl
test
mov
inc
jmp
push
pop
and
push
stos
sahf
cwtl
sbb
scas
int
fwait
movsl
pop
xchg
adc
jg
lock
push
mov
rolb
pop
les
jae
repnz
or
rcr
les
mov
mulb
hlt
lea
loope
rcll
mov
xor
jno
les
xchg
in
jp
sbb
push
outsb
dec
pop
inc
fldcw
sbb
test
ror
aad
iret
jbe
add
xor
pop
pushf
addl
push
scas
int3
daa
pop
out
push
sub
and
clc
mov
push
mov
xor
push
divb
shrb
ss
inc
addl
shl
push
inc
push
mov
dec
add
pusha
ds
jbe
lea
movsb
cmpsl
lahf
mov
pop
inc
jg
sub
sub
rcll
divl
ret
push
pop
stos
adc
js
add
or
inc
and
or
mov
or
push
xor
test
jne
adc
mov
les
add
imul
push
or
sub
incl
pushf
pop
mov
orl
ss
xchg
cmpsb
pop
jne
aam
xor
jle
pop
divb
gs
mov
nop
mov
add
pop
outsl
and
xchg
sub
inc
jg
xchg
or
sbb
adc
mov
push
jnp
push
insb
imul
ror
test
pop
loope
jne
jmp
mov
pop
adc
in
adc
ret
adc
loop
jne
xor
add
push
mov
lcall
mov
lods
aaa
sbb
sti
sub
pop
imul
hlt
xchg
shll
cmpsl
sbb
jg
mov
cwtl
sbb
mov
mov
cmp
xchg
mov
mov
stos
sub
mov
inc
pop
jecxz
outsl
jle
and
jmp
sbb
test
sbb
loopne
mov
push
in
mov
insl
cs
mov
sahf
sahf
out
orb
sarb
insl
mov
and
dec
shl
xchg
sbb
lock
sbb
nop
cwtl
and
decb
sahf
push
jo
jg
xor
nop
movsl
inc
in
iret
psubw
cli
jg
jns
je
popf
lea
sahf
push
inc
xor
adc
xchg
xchg
pop
mov
dec
inc
pop
outsl
push
jbe
mov
jno
xchg
in
cmp
push
imul
dec
fildll
stos
cmpsl
ss
adc
sub
je
xor
dec
out
cs
dec
mov
add
jmp
pmaxsw
ss
sarl
fsubrs
shlb
xchg
fnstenv
sbb
popa
push
jge
daa
pop
mov
pop
leave
inc
sub
aad
jb
push
lret
loop
popf
int3
sub
mov
test
pop
adc
mov
push
inc
addl
sub
rcrb
leave
jno
mov
imul
shlb
xchg
repz
pop
aad
lods
scas
imul
mov
jbe
fmuls
add
pop
dec
mov
std
or
inc
imul
add
adc
mov
test
sbb
rcl
addr16
shl
mov
mov
xorb
mov
les
repnz
leave
dec
inc
jecxz
adc
jb
push
adc
xchg
out
pop
and
ret
shrb
andb
call
cmpsb
cmp
int3
push
aad
test
sti
cmp
je
mov
aaa
xchg
test
cmc
clc
mov
push
imull
or
repz
and
into
test
ret
push
fistpl
sbb
pop
jle
in
fnstcw
mov
in
popf
mov
in
add
loopne
shrl
pop
iret
repnz
es
inc
fdivrl
les
orl
mov
or
repnz
gs
add
cmp
sahf
sarl
aaa
aaa
dec
xchg
push
out
lret
rol
or
std
rclb
push
test
arpl
inc
cmp
jns
fisubrs
pusha
lods
xchg
jbe
inc
popa
inc
dec
inc
and
or
jns
cmp
leave
scas
mov
and
lahf
pop
std
loope
dec
inc
cmp
icebp
add
loopne
adc
icebp
jge
mov
fs
stos
movsb
iret
shrl
int
aad
hlt
addl
fimuls
jmp
sub
leave
out
jle
das
fwait
rcrb
shlb
std
ss
add
aaa
pop
aaa
and
dec
test
jne
sarl
pop
adc
fnstsw
fdivs
mov
mov
outsb
push
mov
lock
loop
mov
sbb
nop
mov
repz
hlt
vpsubsw
pusha
outsb
insb
push
sub
cs
data16
imul
stos
pusha
push
jo
jmp
popf
jno
and
and
sub
in
xchg
gs
shlb
lcall
inc
std
cltd
subl
and
test
aad
pop
cli
or
pusha
aaa
mov
xchg
jne
fimuls
mov
mov
mov
cmp
pop
fucomi
daa
jmp
sub
mov
das
ds
enter
push
inc
push
lods
lds
push
mov
fidivrl
push
cmp
sbb
movsl
xchg
push
add
repz
sub
and
jnp
jno
mov
xchg
cmpsl
movb
inc
in
inc
pop
xor
jecxz
frstor
es
mov
aam
jns
cmp
adc
lahf
mov
aaa
push
sar
sub
xchg
out
ljmp
dec
int3
jg
inc
and
and
jo
lret
push
inc
bound
ret
inc
stc
lods
cmpsb
pop
imul
xor
repz
push
imulb
mov
mulb
push
scas
mov
mov
fdivrl
inc
lret
mov
push
imul
in
xor
or
outsl
leave
nop
xchg
mov
mov
mov
aas
xor
pop
stc
sub
rcrb
inc
lahf
call
shll
test
lds
sti
xor
adc
adcl
mov
pop
ljmp
cli
out
inc
dec
inc
push
pop
jmp
in
mull
popa
jno
les
fldl
jl
xlat
hlt
sub
jp
adc
or
jge
push
add
rcrb
and
ja
push
jbe
in
add
lods
xor
orl
js
push
mov
cltd
mov
in
and
cs
xchg
ljmp
mov
pop
int
mov
sub
sub
mov
jns
stos
addr16
pushf
jae
cltd
decb
sub
jnp
or
arpl
add
lret
cli
repz
aad
in
or
pop
mov
push
cld
mov
arpl
in
cltd
mov
jne
ret
inc
push
rolb
xchg
nop
lret
scas
mov
dec
lock
dec
mov
jne
push
xchg
sub
test
test
dec
adc
pop
and
dec
inc
lea
sub
dec
adc
ret
sbb
dec
push
sbb
dec
aam
mov
bound
and
mov
imul
cmp
das
sbb
jne
repnz
pusha
xor
jbe
push
fwait
or
arpl
sbb
adc
incb
mov
out
jns
imul
sbb
test
add
mov
mov
lahf
aad
fmul
clc
jge
and
sbb
lea
loop
pusha
dec
xchg
cmpsb
shll
mov
orl
loopne
xchg
mov
fldcw
inc
sbb
add
lret
jle
std
fcomp
loope
and
xchg
sbb
cs
inc
arpl
popa
hlt
lds
add
data16
dec
inc
mov
ljmp
dec
push
cmp
sub
scas
pop
cmp
jge
shll
pop
sti
pop
xchg
pop
flds
repz
test
push
sbb
mov
inc
xorl
ret
add
push
jl
mov
call
and
shrl
je
daa
in
mov
dec
lods
cmp
pop
mov
xchg
or
xchg
inc
paddb
pop
mull
mov
mov
cwtl
xchg
test
rcll
mov
jmp
cltd
les
pop
imul
xor
out
xchg
or
jmp
fdivs
mov
cmp
imul
clc
jecxz
pop
sub
daa
or
mov
addr16
stos
pop
push
in
ret
cli
sub
inc
mov
inc
push
jle
and
lahf
icebp
dec
add
inc
test
mov
mov
add
xor
lods
xchg
ja
jns
filds
jns
jb
addr16
rorb
call
xor
mov
mov
or
idivb
bound
ds
dec
rcll
enter
rclb
clc
mov
mov
mov
jb
leave
inc
add
das
xchg
jo
cmp
popa
cwtl
aam
cmp
pcmpeqw
dec
in
shlb
or
pop
sub
xchg
iret
mov
cmp
jb
and
stos
adc
inc
dec
out
repz
dec
lea
push
inc
fildl
cmp
fwait
or
fnstsw
lea
cli
aad
testl
adc
nop
insb
cmpsl
leave
daa
mov
push
nop
pop
xchg
mov
cmpsl
mov
cmp
into
fiaddl
lret
mov
outsb
inc
and
xor
jnp
sub
mov
call
test
loop
gs
mov
dec
jo
ficomps
mov
ret
scas
notb
jmp
adc
xchg
pop
sbb
cli
aas
aaa
mov
cmpsl
loopne
mov
push
clc
std
push
mov
push
fdivs
pop
and
add
lahf
pop
and
mov
movsl
rorb
js
mov
in
call
das
sbb
scas
aas
dec
cmp
roll
ljmp
cltd
mov
or
jg
cmp
sarl
lcall
xchg
jg
gs
ret
add
repz
lds
cmc
and
xor
arpl
xchg
jne
gs
ret
add
repz
lds
cmc
and
xor
arpl
xchg
jne
gs
ret
add
repz
lds
cmc
and
xor
arpl
xchg
je
gs
ret
add
or
cld
cmp
loop
or
mov
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
inc
into
push
and
jae
add
lsl
sbb
lods
jecxz
repz
mov
and
adc
add
popa
and
inc
ret
mov
mov
ret
xchg
xchg
xor
sub
sbb
dec
xor
push
lock
mov
xchg
sub
xchg
shrl
sbb
stc
iret
sbb
mov
sbb
lcall
idiv
sub
fstpt
dec
orw
je
mov
rorl
into
push
cmpsb
push
dec
gs
popa
sub
shll
sub
loope
das
pop
lahf
popa
cmp
xchg
lahf
xor
push
adc
ret
pop
addr16
jle
mov
mov
mov
out
out
loope
push
fwait
popf
test
mov
mov
cltd
xchg
insb
pop
sarl
shll
lret
cli
sbb
push
int3
lock
mov
test
xchg
push
mov
mov
sbb
add
sbb
jno
popa
and
pop
add
mov
cwtl
lret
jmp
mov
sub
pop
adc
add
xorps
sbb
les
mov
rcl
lods
push
dec
and
popa
adc
add
xor
add
cli
cmp
lret
movsb
das
jo
inc
add
je
sbb
xor
mov
mov
xor
loope
shll
and
jae
add
popa
and
inc
ret
mov
mov
xor
loope
shll
cmpsb
mov
dec
sti
add
in
xchg
test
sbbb
lea
mov
jp
adc
jbe
fildll
xchg
and
sbb
push
call
xchg
cmpsl
mov
cmp
mov
sub
mov
mov
adc
push
mov
push
sbb
pop
cwtl
add
les
in
pusha
je
cwtl
and
addr16
dec
scas
dec
mov
shll
pop
dec
lret
fmull
jecxz
popa
fcoml
testb
xchg
xorb
pop
cwtl
test
sar
movsb
shrb
rcrb
cltd
mov
pop
andl
cmp
sbb
or
cmp
shlb
inc
jecxz
mov
pop
cmc
sbb
lds
push
add
xor
or
cmp
xchg
push
and
cmp
cltd
xchg
aad
shll
and
inc
jno
mov
sahf
lea
daa
dec
int
mov
pop
loop
inc
mov
add
push
call
cmp
jmp
jnp
jb
add
sbb
xchg
push
cmp
mov
hlt
or
cmp
xchg
adc
mov
test
sbb
cmp
inc
cltd
xchg
or
xor
jns
xchg
jmp
push
loope
xchg
mov
jp
aad
movsb
push
pop
inc
hlt
push
ss
inc
lret
test
mov
xor
jg
insl
repnz
arpl
daa
scas
sbb
xor
insb
xlat
in
dec
jge
or
cmp
xchg
push
hlt
xor
ret
ret
insb
pop
mov
call
add
add
xchg
inc
lods
in
lret
sti
in
out
mov
std
lret
inc
xchg
je
jle
in
mov
adc
fdivl
inc
sbb
lods
jl
or
cmc
cli
in
mov
loop
xor
je
inc
push
mov
mov
push
ja
movsl
pop
out
jae
pop
out
rcrb
movsl
sub
push
aam
sbb
mov
xchg
stos
mov
fldcw
cmp
jge
ret
inc
xor
add
inc
ret
or
iret
pop
sbb
sahf
test
and
scas
jno
aas
shrb
lods
mov
lock
or
scas
cmpsb
lret
stos
mov
nop
out
fcmove
dec
jbe
push
loopne
jge
stc
inc
mov
repnz
jns
or
xchg
jl
push
pop
inc
vzeroall
and
in
incl
jg
sub
sub
loopne
xor
fwait
mov
ljmp
push
sti
push
and
push
or
mov
popf
and
jae
test
dec
imul
and
push
push
mov
push
popa
push
out
mov
fcmovu
adc
push
sub
push
adc
push
ficompl
lcall
mov
fnsave
insl
inc
sub
pop
popl
fs
jle
enter
pmullw
mov
stc
loopne
rclb
ss
pop
push
cmp
lret
loope
cmp
popl
dec
mov
and
inc
xor
jmp
jae
ret
iret
add
and
xor
push
add
js
dec
bound
insl
loope
push
inc
cli
ret
addr16
idivb
nop
stos
dec
leave
xor
mov
sbb
xchg
mov
inc
jecxz
mov
mov
add
fstps
jne
clc
dec
sarl
pusha
xor
lock
les
push
xor
inc
dec
ret
pop
sarl
leave
pop
pop
jb
add
or
cmp
out
in
inc
cmp
sbb
addr16
mov
sbb
pop
das
add
sub
cmp
adc
clc
push
jns
bound
loopne
jbe
ret
or
mov
jb
xor
cli
test
repz
add
repz
and
mov
inc
sbb
mov
cltd
pop
lea
mov
push
aaa
mov
push
inc
fsubrl
adc
bound
mov
pusha
jo
adc
nop
jne
bound
scas
std
jle
mov
cmp
ret
inc
push
mov
adc
stc
addr16
or
inc
add
pop
dec
xchg
mov
ds
fs
aad
in
int3
gs
dec
xor
pop
lret
testb
repz
sub
loope
push
or
and
pop
ds
cmp
sbb
mov
mov
xor
mov
xor
test
in
dec
outsl
adc
jmp
out
js
adc
int
clc
movsl
mov
push
sub
lret
jb
das
or
aam
xor
push
movsb
push
pop
push
xchg
cwtl
test
lcall
fmuls
lahf
mov
dec
ret
mov
push
in
cmp
sar
test
je
jno
jbe
mov
fisttps
pushf
lret
cmpsl
in
xlat
repnz
push
push
in
pushf
out
push
xorb
rolb
popf
jo
inc
rclb
or
pop
mov
lock
xor
iret
pop
cmpsl
ds
inc
mov
sub
shr
sbb
and
push
in
push
dec
adc
or
daa
aam
mov
out
cli
dec
push
xlat
icebp
xorl
inc
out
lds
mov
xor
cmpsb
inc
add
insb
dec
jnp
jl
adc
nop
xchg
mov
pop
aad
and
rcll
mov
loope
dec
dec
xchg
test
js
fstps
popa
rcll
sub
push
cltd
je
jl
das
jg
push
xchg
jp
cld
mov
call
pop
add
cmp
iret
popa
or
xchg
sahf
pop
in
jl
inc
xor
add
xor
ss
inc
daa
push
popa
das
shll
fistpll
cmc
das
je
out
cmp
sub
movsl
stos
fisttpl
dec
push
sbb
jb
dec
and
inc
or
and
push
add
repnz
mov
jg
add
les
xor
cmc
pop
adc
aas
jecxz
cmp
mov
pop
dec
arpl
pop
imul
jne
pop
xchg
in
pop
jp
mov
insl
popf
sbb
in
push
test
in
xchg
adc
in
push
dec
subb
inc
dec
jmp
cwtl
jae
cmp
punpckhdq
in
lods
aad
mov
sbb
aaa
inc
mov
aad
fnstenv
je
scas
ret
inc
inc
cwtl
lahf
and
loop
mov
xor
mov
addr16
js
dec
ja
cmp
test
movsl
movmskps
push
insl
sbb
in
pop
inc
enter
inc
inc
adc
sub
dec
lock
lds
inc
in
and
mov
lcall
je
ja
push
jnp
cmc
imul
xor
jns
mov
xor
cs
jnp
sbb
mov
fwait
xor
jnp
xor
popa
cmp
xor
ss
ret
clc
mov
push
call
rcrl
adc
mov
xchg
push
cmp
and
call
cmp
push
xchg
mov
push
dec
mov
or
xor
inc
add
inc
sbb
iret
inc
leave
add
or
and
and
out
xor
movsl
inc
cltd
mov
jg
aam
cs
push
mov
stos
js
int3
aam
xchg
and
adc
mov
add
cld
stc
leave
inc
sti
loope
icebp
add
in
fsubs
dec
addr16
cs
movsb
fimuls
cmp
imul
jcxz
pusha
lds
lods
ja
mov
cltd
add
daa
ljmp
fdivl
sbb
cmp
pmulhuw
in
incb
jmp
sub
jecxz
sbb
sbb
pop
icebp
dec
mov
add
stos
in
fidivl
inc
testb
sahf
fdivr
aas
and
test
loope
push
inc
push
ret
inc
shrb
icebp
lahf
add
out
or
xor
adc
mov
mov
jnp
xchg
mov
out
in
mov
rcr
jp
shrb
cltd
ds
xchg
aad
sbb
push
mov
test
xchg
push
les
lahf
add
sti
and
mov
push
aaa
int
popa
jle
pop
add
mov
xchg
aad
sbb
sub
or
cmpsb
std
inc
dec
lahf
iret
jne
lods
mov
fsub
xor
aas
into
loopne
sub
xor
insb
jns
fsubs
cmp
test
test
rcrb
jle
xchg
sbb
lcall
sub
aas
sub
mov
jl
stos
popf
movsl
aad
sbb
inc
push
mov
fwait
lea
mov
sub
xchg
ret
xchg
jg
lret
fiaddl
test
out
ljmp
adc
sbb
nop
push
push
jno
xchg
cmp
addb
jbe
es
xor
adc
mov
jb
sub
lret
enter
mov
xor
ds
lea
inc
or
push
cli
adc
loop
movsl
test
adc
sub
into
mov
stc
sbb
pop
mov
ljmp
jns
out
fcomps
rolb
and
hlt
push
daa
push
pop
push
loopne
movswl
lahf
mov
addr16
daa
cmp
out
or
aas
and
push
jnp
jp
jae
xchg
lcall
fdivs
push
aad
call
test
subb
push
shl
iret
out
cmp
xor
push
data16
pop
fadd
sbbb
jae
subb
test
inc
sbbb
outsl
dec
push
mov
sbb
out
fcomip
mov
sub
lahf
popf
mov
add
add
and
int
sbb
and
mov
xchg
sbb
xor
inc
dec
std
in
mov
in
adc
insb
in
and
push
jnp
mov
xor
sbb
jmp
in
or
or
mov
mov
jmp
sbb
xor
sbb
cmp
xorb
mov
mov
cmp
stos
mov
cmpsb
xor
ret
inc
rcll
mov
cmpsl
aam
pop
shlb
rcll
mov
mov
xor
add
mov
movsl
or
das
mov
fldt
cld
shrl
sub
push
fstpl
dec
shrb
in
rcll
sahf
sbb
mov
xchg
jg
leave
es
hlt
int
mov
fiadds
daa
fidivrs
js
int3
xlat
xor
or
dec
insl
test
repnz
vpaddd
push
int
dec
adc
fidivs
pushf
pop
dec
ret
clc
sub
push
dec
pop
push
mov
sub
cmpb
cmp
or
pop
adc
push
mulb
xor
and
pop
insb
mov
cmp
movsl
and
push
cwtl
mov
xor
ja
lcall
mov
icebp
jbe
and
adc
rep
jmp
outsb
or
sahf
loopne
jp
popa
mov
xchg
cli
fwait
or
ds
scas
fwait
ljmp
cmp
jmp
add
call
push
sub
mov
out
dec
mov
stos
xchg
adc
fdivrs
dec
jbe
scas
fildl
push
fstps
js
arpl
movsb
pop
xchg
shll
addr16
addb
mov
and
data16
mov
inc
loopne
cmp
pusha
pop
sub
xor
sti
ss
xor
dec
test
call
jecxz
lret
inc
ret
ja
jns
jecxz
out
mov
pushf
sub
xor
mov
pusha
push
insb
cli
cmp
in
dec
adc
dec
pop
mov
mov
fucom
fadds
pop
fsubr
mov
negb
dec
iret
xor
xchg
adc
lods
int3
sub
add
cld
out
cmpsb
mov
cmp
add
jbe
add
cwtl
mov
and
fstp
and
nop
mov
xchg
fisubl
seto
or
push
xadd
jnp
pop
iret
cmpsb
push
pop
sbb
sub
dec
aaa
push
in
mov
rorl
outsl
fcomps
std
jbe
shll
jmp
je
hlt
or
fs
leave
push
sub
xor
std
jbe
stos
sbb
jns
mov
cs
jbe
dec
adc
sbb
mov
and
insl
test
push
inc
aaa
add
pop
ret
test
jbe
test
out
int
sbb
or
mov
sub
scas
pop
push
daa
pop
push
mov
or
push
or
mov
cmp
xchg
cld
into
ret
adc
sub
lods
mov
jbe
xor
subl
jl
data16
mov
rcrb
das
push
adc
inc
mov
movsl
repz
push
xor
sbb
add
enter
add
pop
aas
dec
inc
popf
add
rol
sbb
ficomps
imul
push
mov
mov
jbe
mull
jmp
mov
pop
filds
dec
push
lret
sbb
shrl
xor
lds
add
cmp
adcl
jne
imul
data16
mov
xor
mov
mov
adc
xchg
jmp
and
in
cli
movsl
andl
adc
mov
pop
stos
cld
pop
mov
insl
cmp
psubusw
les
pop
add
pop
jb
das
mov
bound
sub
xchg
inc
sbb
insb
incb
lahf
jno
int3
mov
frstor
mov
scas
push
jge
popf
cmp
into
in
lds
or
dec
pop
out
shlb
fwait
adc
dec
cli
adcl
xchg
jns
sub
mov
inc
iret
mov
ljmp
or
pop
fwait
pusha
mov
or
loopne
mov
aad
jge
lods
xlat
xchg
test
and
addr16
mov
pop
fs
jmp
insb
xor
lahf
adc
bound
push
aas
outsb
lock
adc
cmpsl
dec
aam
adc
rorb
add
dec
jle
dec
cmp
sbb
imul
je
in
mov
adc
cmp
push
rsm
fisttps
in
sbb
loop
out
mov
in
inc
xor
jne
jge
test
push
jl
pusha
add
add
test
in
push
push
cmpsl
mov
inc
not
test
inc
or
mov
push
and
push
mov
mov
leave
nop
push
sbb
sbb
and
dec
xor
push
std
and
imul
arpl
js
ss
cmc
or
int
and
pop
sub
xchg
test
mov
cmp
fbld
push
mov
xchg
fldcw
sbb
mov
sbbl
imul
adc
sbb
pop
push
cmp
sbb
cmc
jmp
push
push
pop
lods
cmpsl
insb
daa
xor
sahf
es
aad
inc
scas
nop
or
lahf
xor
cmp
xchg
test
push
dec
cltd
and
inc
movsl
sbb
test
iret
and
enter
adc
out
test
dec
and
pop
mov
movntps
fistpl
mov
ret
aam
into
loope
out
popf
mov
pop
add
sub
repz
push
movsl
mov
sahf
aad
jno
pop
push
sbb
pop
pop
icebp
sbb
adc
clc
scas
sbb
mov
int3
add
lret
das
test
pop
xlat
jo
dec
fmull
scas
sbb
sti
sahf
popf
cmp
pop
sbb
jp
inc
cmpsl
mov
pop
add
mov
mov
cltd
lods
pop
out
sahf
pop
push
sahf
push
fs
xor
xchg
nop
lret
fsubrs
bound
mov
dec
mov
aas
push
mov
popf
cmp
jmp
insl
push
cltd
loop
adc
aad
xchg
push
adc
xor
daa
and
or
int3
dec
inc
mov
push
mov
ret
daa
push
adc
dec
in
pop
push
movsb
cmpb
xchg
mov
cs
stos
lea
jae
add
imul
xchg
add
xchg
sahf
lret
aam
out
mov
test
sub
imul
in
jl
je
outsb
push
call
add
cld
pop
loopne
cmpsb
test
dec
jmp
into
inc
repnz
sbb
push
dec
lret
jns
mov
inc
add
inc
lods
mov
bound
cmp
jnp
imul
fldcw
mov
sbb
push
jo
icebp
adc
std
mov
pop
subb
cs
dec
mov
orl
orl
mov
pop
cs
jecxz
insl
push
push
insb
mov
mov
dec
cmc
mov
repnz
push
sarb
dec
cmpl
shll
sbb
dec
mov
or
fwait
dec
dec
dec
mov
stos
gs
test
xchg
jg
out
ja
mov
push
inc
lock
mov
xchg
jnp
sub
mov
cltd
bound
xchg
add
daa
inc
dec
dec
stos
pop
cld
sbb
push
cmp
sbb
dec
dec
push
xchg
mov
movsl
inc
test
scas
out
dec
add
push
imul
out
mov
pusha
out
cmpsl
dec
push
push
push
cmp
orb
cmp
add
adc
jecxz
aam
or
imul
pop
xchg
sbb
std
mov
jg
mov
dec
or
aaa
popf
out
js
fisubrl
push
ret
mov
scas
out
sub
pop
cmc
repnz
fwait
ja
mov
and
adc
mov
int
je
cmp
addr16
movsb
xchg
add
sub
xchg
xor
insl
dec
adc
pop
shlb
enter
pop
fsts
or
std
xchg
bswap
mov
or
add
xlat
adc
sarb
pop
subb
outsl
sub
add
mov
divb
add
sbb
test
cs
insl
push
mov
dec
aam
xchg
shlb
cmpsb
cld
in
mov
jns
dec
dec
sub
or
insb
mov
jns
fs
imul
fcmovu
fisttpl
mov
xor
add
arpl
sub
xor
mov
sub
push
mov
cld
subl
sub
inc
dec
repz
sahf
sub
or
arpl
fstp
enter
pushf
jns
and
pop
aam
shlb
insl
pop
jp
mov
dec
je
adc
nop
push
sbb
jno
sarb
movsb
jae
decl
lods
mov
loopne
mov
test
mov
ss
pop
cli
dec
mov
push
imul
ja
lret
lods
scas
push
push
pop
inc
pop
out
in
mov
cmp
sub
xchg
cmp
in
mov
sbb
pop
scas
daa
ret
mov
cmpsl
lahf
fwait
adc
pop
sub
push
loop
mov
fcmovnb
nop
shlb
adc
and
icebp
mov
nop
clc
fwait
insl
repz
cwtl
out
xchg
fs
in
dec
sbb
cld
ret
shll
push
or
sahf
xor
push
pop
flds
xchg
ja
call
mov
push
icebp
push
lea
or
mov
push
cmp
push
jle
and
filds
or
sub
cmp
nop
sbb
aaa
test
inc
enter
xchg
cmp
cmp
cmp
dec
push
push
rorl
jge
dec
lcall
sbb
andb
mov
xchg
shrb
and
addr16
cli
jo
mov
mov
pop
inc
std
sbb
xchg
sbb
xlat
pusha
loop
arpl
cmp
rcrb
ljmp
jle
xchg
loope
aad
and
aaa
js
sarl
aas
inc
mov
and
dec
cmp
hlt
pop
loopne
push
enter
into
jmp
inc
push
int
es
dec
push
jns
test
pusha
repnz
or
stos
scas
sub
push
shl
hlt
inc
icebp
jb
mov
sub
sbb
shl
and
jge
xchg
int
outsb
cmp
shr
lods
sub
ss
inc
inc
mov
stos
js
ret
addr16
cmp
fistl
dec
ja
nop
push
imul
testb
jbe
jp
repz
jmp
cld
cmp
jne
xchg
pop
lods
sub
shll
leave
and
inc
sbb
in
mov
in
xor
sub
mov
or
int3
sahf
mov
aad
cld
pop
bnd
mov
mull
mov
push
test
aaa
lea
dec
xchg
stc
out
cmpsb
add
sub
cli
and
loope
mov
xorl
adc
adc
mov
sub
insb
jle
mov
bswap
adc
sbb
push
fwait
jg
decb
aas
push
pop
test
xchg
xchg
rorb
lcall
ljmp
cmovno
fdivrl
mov
repnz
ljmp
mov
stos
das
inc
int3
xchg
cli
push
out
inc
fcoml
and
or
adc
mov
xchg
adc
lods
xchg
mov
mov
adc
popa
mov
mov
test
and
das
je
aaa
jle
add
testl
push
xor
pop
stc
mov
shld
int3
aad
ja
nop
out
adc
mov
push
mov
xchg
and
jae
add
popa
and
inc
ret
mov
mov
xor
loope
shll
and
jae
add
popa
and
inc
ret
mov
mov
xor
loope
shll
and
adc
xchg
jno
popa
and
inc
ret
mov
mov
xor
loope
rcrb
push
xor
and
adc
add
popa
and
inc
ret
mov
or
repz
jns
push
pop
cs
ds
add
mov
jp
sub
push
jns
cmp
or
sbb
insb
jns
dec
stos
pop
mov
mov
jp
or
sbb
sub
adc
lret
daa
loop
cli
imul
pushf
pop
or
cmp
or
lret
outsl
mov
dec
fldenv
fsubrp
push
cltd
sbb
cmp
pop
bound
sbb
and
mov
cmp
or
push
cltd
mov
adc
loop
pop
lds
adc
call
idiv
and
mov
mov
mov
lret
lret
out
xchg
jns
mov
jge
dec
rcrl
int3
jp
push
push
sub
ljmp
sbb
jnp
pop
push
cmpsb
sub
inc
cmpsl
jbe
pop
test
cmp
jmp
jmp
or
or
stc
sub
sub
mov
stos
fs
add
dec
pop
and
rcrl
sbb
or
dec
rcrb
push
cmc
jp
or
test
lret
shr
pop
or
cmp
xor
xchg
mov
stos
pop
dec
js
add
pop
cmc
cmp
or
sbb
sbb
sbbb
movsl
inc
stos
or
stos
js
insb
mov
sbb
cmp
sbb
fstpt
mov
lods
inc
stc
sbb
sub
cmp
lret
or
sbb
imul
mov
jp
or
sbb
sub
cmp
lret
or
sbb
imul
jge
and
xchg
movsl
insl
xchg
adc
test
outsb
std
insb
ljmp
sbb
shrl
inc
sub
rcl
or
push
mov
jo
cltd
leave
call
fs
dec
repz
inc
push
cmp
xchg
and
out
in
xorl
xlat
clc
mov
xchg
jecxz
dec
xchg
lret
aam
mov
push
cltd
cmpsb
dec
call
ret
mov
iret
pop
iret
adc
jae
cli
mov
xchg
cmp
mov
out
les
sahf
xchg
cmc
lods
inc
out
inc
adc
mov
loopne
jne
gs
cmp
sbb
sbb
bound
shlb
sbb
popa
mov
xchg
xchg
icebp
jg
movsl
add
lds
sub
imul
pushf
xlat
int3
cltd
xor
xchg
jge
xor
dec
pop
mov
jmp
mov
repz
mov
movsl
cmp
scas
daa
fmuls
cs
fucomi
test
and
insb
out
push
sub
dec
lods
and
sbb
imul
jb
push
not
jne
lods
btr
cmpsb
int3
adc
adc
pusha
pop
jmp
inc
fwait
leave
addr16
mov
mov
rolb
mov
push
dec
and
and
bound
and
dec
pop
jp
inc
fcomps
movsl
pop
sub
ss
mov
cmp
shlb
sbb
out
test
lock
sbbl
mov
rcrl
aas
cltd
or
loop
arpl
xor
mov
insl
dec
pushf
repz
add
lcall
shlb
mov
leave
cmpsl
push
jecxz
gs
fsubl
sbb
sub
insl
stos
les
rolb
stc
inc
lock
push
pop
cs
xor
gs
xchg
cmp
fnstsw
movsl
icebp
mov
push
and
into
fldl
push
out
sbb
sbb
cmc
shr
fsubl
jmp
adc
dec
pushf
inc
mov
and
mov
push
daa
out
fwait
int
mov
imul
pop
or
out
sbb
push
pop
mov
pop
jb
add
repnz
pop
dec
and
scas
outsb
pop
dec
int3
das
adc
addr16
je
lret
inc
imul
aad
mov
aaa
cmc
addr16
cmpsl
dec
adc
xchg
fldenv
and
pop
sbb
mov
jbe
ss
push
outsl
mov
les
and
ret
fwait
cltd
mov
out
inc
jno
sbb
popf
insb
sbb
and
xchg
fimull
push
sub
int
push
cwtl
push
incb
rcll
sub
and
nop
mov
xchg
dec
imul
out
mov
mov
stc
fs
xchg
out
lcall
mov
xchg
sub
mov
fs
fsubrs
popa
sub
movswl
lods
add
lds
nop
jno
scas
aas
mov
std
pop
mov
push
xor
push
dec
sub
in
mov
btc
cld
ds
or
fdivs
mov
outsl
movsl
int3
ret
xchg
mov
pop
ficoms
inc
cmp
push
scas
lea
addr16
stos
out
jb
and
xchg
test
pusha
push
es
in
sub
popa
loop
outsl
notl
or
rorl
and
push
lods
mov
out
insl
adc
loope
push
shrb
lods
adc
pop
mov
aad
inc
jnp
xor
adc
or
push
cmp
cltd
and
ljmpw
pop
pop
test
das
repz
pushf
in
nop
test
sbb
push
subl
push
mov
sub
xchg
lods
add
out
stos
rorb
fidivl
cli
pop
xchg
jne
dec
shl
adc
js
jmp
pop
xor
nop
fwait
jae
jp
and
and
and
add
sbb
sub
ds
push
adc
outsb
mov
lods
mov
cmp
fwait
jle
inc
mov
sub
mov
jns
xchg
and
jbe
cli
push
cli
push
nop
sbb
xor
mov
js
mov
lahf
fcomps
mov
out
fisttpll
push
dec
xor
scas
fnstsw
push
pop
out
sbb
mov
stos
out
mov
lret
int
jne
imul
inc
popa
cmc
sahf
lret
xchg
je
inc
push
inc
movsl
aaa
add
lds
fst
pusha
cmp
mov
push
adc
mov
xor
push
fistpll
insl
push
adc
fstps
adc
sub
adc
ret
hlt
ljmp
ret
pop
nop
jmp
aad
test
jo
ret
pop
pop
cld
or
xchg
sbb
outsb
add
mov
xor
in
mov
mov
xchg
in
sti
test
pop
or
and
jg
push
sti
push
adc
mov
shr
in
fs
popa
dec
js
fiadds
es
sub
jmp
and
mov
inc
imul
xchg
mov
aam
pop
or
jecxz
mov
pop
sahf
push
push
arpl
push
mov
outsb
and
arpl
jl
sub
out
pop
cmpsb
cs
sbb
in
mov
test
sbb
outsl
fstl
leave
mov
cmp
mov
incb
pushf
pop
rcl
xor
xorl
fnstsw
pop
test
imul
add
add
outsb
enter
sti
shlb
inc
rcll
cmc
push
das
cmp
cli
pop
xchg
pop
xchg
push
pop
sbb
int
aaa
fdivl
push
push
leave
xchg
shl
pop
jl
pop
test
pop
and
fidivrl
enter
push
push
push
dec
leave
mov
jle
leave
mov
ret
cmp
or
xchg
dec
mov
xor
xor
aaa
das
add
sarb
xor
or
rorl
fsts
imul
sub
sbb
pop
loop
pop
push
mov
cmp
pop
mov
mov
pop
mov
xchg
or
pop
adc
stc
pop
popa
test
icebp
jge
cmp
or
add
pop
cmp
dec
imul
cmc
mov
jle
cmpsb
xchg
push
xlat
inc
mov
xor
decb
popa
mov
mov
shlb
rorb
subl
mov
fidivl
mov
inc
leave
aam
scas
gs
loop
loopne
daa
pusha
dec
std
insl
je
cmpsl
out
mov
cmp
cs
les
mov
shrl
aas
data16
xchg
icebp
repz
lock
gs
mov
xor
mov
jp
dec
ss
jle
sbb
mov
insb
imull
lcall
sub
push
lcall
cmp
mov
mov
lds
icebp
pop
ds
test
push
jecxz
test
lods
insl
fcoml
xchg
ss
mov
cmpsb
test
js
dec
add
sbb
pop
inc
jmp
push
or
hlt
or
pop
mov
fisubs
sbb
jmp
out
hlt
push
sbb
lcall
aam
pushf
loopne
add
pop
xor
jno
in
xchg
and
or
repnz
notl
outsb
pop
mov
shl
icebp
lcall
jmp
shll
aam
adc
out
adc
mov
ss
test
cmp
mov
mov
xchg
inc
or
mov
and
jae
push
fildl
out
arpl
sbb
mov
sub
aam
ds
mov
test
daa
dec
dec
jl
daa
mov
add
loope
lock
mov
push
test
mov
xchg
xchg
ljmp
lods
push
leave
cld
rcr
and
mov
jns
iret
fidivrl
fdivrs
pusha
adc
mov
cmp
lahf
icebp
adc
mov
and
pusha
stc
or
movsb
aam
rclb
or
das
pop
aam
sbb
bound
adcl
sub
adc
jb
xchg
xchg
xchg
or
add
mov
nop
xchg
dec
inc
pop
enter
out
lods
mulb
call
xlat
mov
and
pop
xor
sub
mov
dec
xor
ret
xor
inc
pop
or
sbb
xchg
add
ret
mov
jbe
test
inc
dec
pop
out
int
sub
outsl
mov
mov
mov
lods
sbb
lret
dec
loopne,pt
push
xchg
jl
sub
dec
adc
mov
and
vaddss
roll
dec
hlt
int
cmp
dec
cmp
popf
push
add
xchg
outsb
lcall
repnz
movsl
xchg
lock
enter
jae
inc
rolb
jnp
sti
jg
sub
ss
jo
sbb
add
pmaddwd
jb
and
fisubs
subl
fcompl
pop
mov
das
aaa
mov
jne
lahf
cs
mov
in
sub
jl
xor
stc
dec
adc
fldl2e
mov
aam
daa
pop
loopw
fwait
xchg
push
inc
push
mov
repz
leave
and
push
pop
pop
xorl
xor
mov
jmp
or
push
lcall
std
movsl
xchg
mov
loope
enter
int
fisttpll
in
xchg
pop
mov
lahf
fdivr
cltd
mov
movsb
mov
rorl
mov
mov
fsubrs
repz
push
fdiv
xchg
xor
fnstenv
add
shlb
xchg
enter
xchg
pop
ljmp
les
jg
and
lods
lcall
sar
pop
jge
pop
push
mov
jnp
lret
push
push
mov
mov
out
gs
ss
mov
test
nop
fmull
popf
xchg
adc
push
inc
push
add
call
notb
or
push
xchg
cld
fistl
les
xor
pop
mov
jo
cmp
xchg
ss
fs
rcrb
leave
xchg
testb
cltd
clc
mov
pop
int3
in
sub
fwait
data16
and
xchg
lret
jnp
icebp
enter
or
call
in
pop
sahf
lret
test
jnp
xchg
dec
and
push
scas
loopne
fdiv
es
in
sub
mov
stc
testb
sub
pop
and
jns
push
jb
dec
adc
sar
push
cld
cmp
cltd
dec
inc
fsts
ja
fidivrl
cld
mov
pop
mov
lahf
add
jg
and
fs
scas
add
popa
aas
xchg
pop
pop
popa
mov
call
and
inc
out
and
cwtl
aaa
int
push
pop
into
es
stc
inc
in
sbb
int3
into
mov
arpl
test
repnz
mov
push
dec
roll
xchg
mov
xor
push
push
adc
jmp
push
inc
bt
sbb
mov
lods
push
adc
call
scas
mov
cmp
sbb
pop
mov
lods
aad
inc
xor
test
fcompl
sub
test
and
push
repnz
pop
pop
stos
dec
pop
test
es
add
xlat
imul
inc
cld
jno
cwtl
adc
in
or
mov
cli
mov
mov
cwtl
lret
data16
out
adc
inc
arpl
repnz
out
sbb
sbb
rcl
jecxz
jge
jne
or
sbb
out
outsl
inc
and
cmp
dec
scas
rclb
stos
fcompl
fbld
dec
lret
and
je
sahf
jbe
into
jp
xchg
xor
dec
add
mov
mov
mov
adc
mov
cmpsb
sbb
jecxz
repz
cli
insb
lret
aam
mov
pop
inc
mov
push
into
cmp
and
xorb
movups
adc
xchg
inc
popf
pop
add
adcl
push
enter
xchg
dec
mov
outsl
pop
adc
sbb
in
or
sbbb
mov
mov
sub
ds
jge
mov
xchg
xor
test
mov
dec
je
or
xor
inc
jns
outsb
mov
out
adc
push
jge
fldl
stos
mov
xchg
mov
inc
add
shrb
mov
push
fwait
jl
repz
sbb
and
pop
popf
sub
and
cmc
aad
cmp
push
nop
cltd
ja
push
mov
xchg
out
fidivrs
jecxz
aam
xchg
lahf
mov
inc
pop
test
cmc
pop
jne
sbb
data16
and
sbb
pop
mov
out
pushf
ret
mov
mov
mov
fwait
popl
mov
pop
ret
mov
stos
aad
and
sub
fwait
inc
and
jp
push
mov
mov
jmp
cld
movl
loopne
jnp
sbb
in
dec
pushf
and
orb
sub
sub
test
pushf
inc
sti
outsb
arpl
jae
sbb
jns
add
jg
jle
fsubp
mov
add
push
pop
jb
jb
rdmsr
data16
test
movsl
dec
or
test
les
jl
sub
sbb
repnz
and
imul
pop
push
lods
xchg
jl
jp
sti
cmpsl
mov
adc
test
mov
cld
ja
lret
scas
in
jnp
and
xor
push
xchg
out
mov
lret
mov
add
movsl
sub
aad
popf
mov
push
in
into
xor
mov
aaa
pop
adc
mov
sub
outsl
push
je
push
sti
adc
add
cmp
add
xchg
cmp
pop
inc
pop
add
jb
or
xor
ret
fdivl
shll
dec
mov
lock
lock
shlb
adc
repnz
mov
jmp
call
into
std
mov
nop
pushf
enter
loopne
or
sbb
jle
insb
ficoml
push
mov
repnz
xor
pop
lea
or
pushf
dec
imul
loopne
cs
pop
inc
rcl
and
jo
jo
out
aad
jne
adc
ret
mov
mov
enter
xchg
pop
mov
jmp
mov
sbb
shll
sub
push
pop
fiadds
pop
addr16
aas
insl
movsl
rclb
popa
jp
movsb
aas
enter
adc
and
lock
dec
cmp
imul
stc
push
sub
or
cld
idiv
or
cmpsl
lcall
add
mov
sbb
dec
out
jbe
loop
std
aas
dec
sub
mov
rcr
pop
push
xor
cwtl
icebp
imul
sbb
cltd
divb
push
aaa
add
lret
mov
ret
pop
sub
cmp
outsb
fldl
movsl
xorl
aaa
dec
and
shlb
clc
cmp
jns
lcall
scas
and
xchg
insb
mov
xor
pop
sar
idivl
mov
nop
int
daa
sub
add
inc
scas
xchg
filds
cs
push
mov
pop
sub
stos
jle
lcall
sbb
dec
sti
xor
outsb
outsb
adc
mov
imul
dec
inc
jmp
cmp
push
sbb
ss
xlat
int3
test
and
and
test
pop
or
iret
call
mov
cmp
cltd
aas
cld
inc
cs
cmc
dec
jnp
lea
pop
adc
int3
pop
js
or
in
sahf
jp
push
sub
xchg
xchg
mov
mov
out
inc
inc
nop
fsubrp
sub
push
pusha
xor
mov
push
ret
sub
pop
popa
movsl
enter
mov
scas
subb
shlb
add
and
call
or
push
mov
call
divl
lock
mov
pop
push
fwait
out
xor
pop
inc
scas
adc
lret
pop
sbb
insl
in
aam
push
jno
xchg
sbb
orl
xlat
mov
sbb
xchg
pop
push
sub
push
addr16
mov
fstl
or
jl
inc
fidivrl
ret
lds
push
es
mov
and
mov
inc
repnz
mov
popf
xor
aad
mov
pusha
std
lcall
xchg
dec
push
add
cli
cs
neg
add
nop
cmpsw
mov
mov
mov
jne
mov
imul
jne
ficomps
mov
push
jo
push
sub
or
loope
dec
mov
and
stos
pop
pop
sub
ret
xor
mov
mov
fsubr
roll
mov
ss
push
shll
mov
icebp
xor
xor
and
cmpsl
jae
mov
lds
cltd
daa
movsl
mov
add
ret
nop
lcall
js
sub
outsl
stc
dec
sub
shll
mov
ficompl
xor
xlat
shr
js
inc
aas
lret
push
fstl
fs
inc
test
xchg
xchg
mov
sub
mov
call
clc
or
cmc
xor
fsub
cli
enter
cld
xor
xchg
xchg
imul
pop
cmp
adc
jnp
fbld
movsb
and
aas
rcl
popf
ljmp
add
mov
inc
out
adc
int
jg
aas
fcomp
inc
fsubrl
push
dec
pushf
and
test
mov
iret
loopne
test
mov
das
and
ret
mov
lea
je
arpl
push
pop
je
push
in
adc
pop
jmp
aad
aas
jmp
push
sbb
test
movsl
aas
lret
mov
jbe
push
scas
xor
stos
pop
ret
negl
sbb
xor
fists
mov
cwtl
repnz
pop
mov
or
roll
call
movsl
add
arpl
pop
rolb
sbb
iret
lret
xor
stos
fdivl
ds
lds
inc
jbe
hlt
dec
int
and
jno
mov
adc
sti
mov
insl
cmp
lock
xor
shlb
push
cltd
and
out
lods
sti
and
out
call
dec
aaa
in
add
push
pop
dec
nop
and
into
loopne
and
adc
cmpsl
sahf
and
xor
cmp
cmc
inc
inc
sar
fcomps
and
fstps
xor
lea
cmpsb
sarl
ret
add
cwtl
hlt
mov
dec
cmp
or
adc
pmaddwd
lods
mov
dec
outsl
inc
cmp
mov
lods
sbb
xorb
jecxz
fdivs
inc
aaa
or
in
sub
dec
testb
jnp
lahf
vmovupd
add
outsl
inc
fs
lret
mov
and
mov
mov
sbb
jns
and
jmp
inc
mov
scas
dec
and
cmp
xchg
push
or
cmp
cmp
int
push
divl
push
add
sbb
mov
rorl
xor
xchg
jmp
and
mov
adc
out
in
xchg
xor
add
scas
add
xchg
aad
sub
rcrb
mov
and
xlat
js
ja
out
inc
aad
dec
mov
push
mov
mov
jge
pop
test
pop
mov
popa
xchg
in
push
mov
insl
lcall
mov
sahf
out
pop
jg
or
or
leave
sarb
cmp
out
and
pop
dec
in
outsb
cwtl
jno
subl
xor
or
mov
mov
sub
jbe
or
fnstcw
roll
push
mov
imul
or
add
mov
lods
out
adc
lods
orb
cmp
aam
sub
or
jp
cmpsb
mov
pcmpeqb
xor
xchg
nop
sbb
adc
aas
ss
rorb
jno
and
mov
iret
lret
mov
xchg
jge
mov
jl
mov
sbb
sub
mov
mov
les
cmp
in
fstpl
testl
roll
push
or
mov
fs
push
es
fwait
aam
mov
jno
test
mov
pop
xchg
lea
imul
mov
scas
fldenv
out
push
out
mov
loope
dec
clc
jp
icebp
xchg
shlb
and
test
adc
cwtl
dec
mov
ja
scas
arpl
jns
mov
mov
mov
dec
or
or
scas
push
cmp
imul
imul
and
enter
rorl
mov
out
movsl
or
fldl
and
cmp
xor
call
cltd
enter
divl
add
mov
jne
cmpsl
push
push
ja
jno
arpl
movl
add
xchg
push
push
mov
jno
lahf
jb
jmp
mov
mov
in
arpl
es
js
push
mov
push
inc
and
add
shrb
out
in
leave
pop
or
imul
inc
enter
nop
sbb
cmpsl
aas
push
jbe
add
pushf
mov
js
stc
jmp
rcrl
add
rcrb
outsl
test
or
sbb
sub
cmp
lret
or
sbb
imul
mov
jp
or
sbb
sub
cmp
lret
or
sbb
imul
mov
jle
or
jno
fdivrs
sub
ljmp
dec
mov
xchg
mov
jmp
stos
pop
cli
sub
sbb
mov
cmpsb
ret
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
test
push
decl
xchg
out
push
cmp
scas
or
add
add
add
add
add
faddl
mov
mov
call
add
aad
addl
or
mov
faddl
push
add
add
add
add
cmp
add
add
add
cmp
add
addr16
add
add
add
add
mov
cmp
add
add
add
add
add
mov
inc
add
add
add
add
add
add
add
add
or
push
add
add
pop
add
add
add
sub
jg
faddl
leave
add
add
pushf
add
test
cmpsl
add
cmp
aad
add
adc
and
pushf
add
add
dec
add
add
mov
dec
add
add
add
add
add
adc
adc
aad
pop
add
add
add
add
add
add
add
add
add
inc
add
add
add
pop
add
add
testl
sbb
cltd
add
add
add
add
add
mov
roll
addl
add
add
push
add
testl
adc
test
and
pop
add
dec
add
add
add
add
add
add
add
add
mov
roll
xchg
add
add
adc
mov
add
add
mov
add
add
sbb
test
mov
add
add
mov
adc
push
add
adc
adc
xchg
add
dec
add
add
add
add
sti
add
add
add
add
add
add
add
add
add
cmp
mov
and
mov
add
push
add
add
add
add
arpl
and
push
sub
push
add
add
mov
add
add
push
add
add
push
add
add
adc
push
add
mov
cmp
add
add
add
add
mov
add
add
add
stos
add
add
add
add
add
add
add
adc
loop
and
mov
push
add
add
add
push
add
add
add
add
add
add
add
add
add
and
lcall
add
add
add
add
aad
adc
addl
scas
add
add
add
add
add
add
pop
add
add
add
add
mov
bound
push
add
add
inc
add
add
add
add
add
add
add
add
clc
add
add
add
add
add
add
add
add
adc
popa
add
add
inc
add
add
testl
add
testl
aas
add
add
add
push
push
add
loopne
adc
pop
add
add
add
add
add
add
add
add
push
add
add
add
adc
adc
dec
add
add
loopne
cmp
add
add
add
add
add
add
xchg
add
add
add
add
add
outsl
add
add
add
add
add
add
add
mov
scas
xor
inc
iret
mov
xor
mov
data16
aaa
jmp
int3
in
lods
lret
mov
jno
leave
cmp
stc
adc
in
outsb
xchg
cltd
and
outsb
ss
ss
xor
aam
mov
mov
inc
lods
cmpsl
stos
adc
push
not
lcall
dec
lret
and
mov
jo
rep
jns
xor
sub
add
push
rcll
outsl
fidivrl
jecxz
and
fsubrl
push
mov
iret
adc
cwtl
jl
sub
in
inc
push
in
mov
leave
push
sbb
mov
icebp
jno
mov
mov
movsb
and
scas
jecxz
fbld
mov
mov
les
mov
fdivrs
imul
clc
push
popf
incl
pushf
push
sub
jne
xorb
inc
sub
sub
and
push
es
stc
les
fildll
dec
xlat
mov
fdivs
sti
or
sbb
pop
and
sbb
mov
scas
sbbl
and
nop
jmp
sahf
mov
ret
stos
test
push
sbb
sar
push
mov
adc
cld
out
xchg
addl
and
aaa
flds
imul
fs
dec
add
push
jmp
iret
xor
xchg
jge
or
mov
dec
and
push
lds
ficompl
push
push
int
lret
push
mov
shl
add
sbb
sub
mov
testb
or
addr16
repz
fistpll
rclb
adc
shlb
ret
jns
out
sar
aad
sub
mov
adc
imul
or
xorl
cli
je
inc
mov
fildll
push
jns
dec
neg
sbb
into
dec
mov
loopne
rolb
loope
or
stos
hlt
test
jl
cmc
fldcw
mov
xchg
dec
xchg
out
add
jbe
sub
jp
jo
push
adc
push
inc
sbb
jmp
loop
fidivrl
xchg
pop
rolb
dec
ljmp
and
cltd
jnp
push
jecxz
cli
adcl
jbe
lds
insb
out
add
inc
pop
cmp
popf
inc
leave
lahf
lahf
pusha
adc
rcrb
sbb
inc
scas
lret
xor
sarb
out
or
cwtl
in
iret
js
outsl
adc
stos
pop
add
loop
adc
test
arpl
hlt
push
into
out
jae
shlb
pop
imul
dec
cli
lcall
adc
andb
mov
lret
dec
imul
xor
into
cmp
jnp
movsb
add
test
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
