call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
dec
sbb
or
cmp
sub
pop
lods
insb
ficoms
enter
dec
xchg
insb
lods
sbb
in
sub
fcompl
or
cmp
sub
pop
mov
lods
or
mov
mov
sub
fcompl
or
cmp
sub
pop
mov
lods
insb
pop
pushf
dec
scas
sbb
lcall
lods
push
int3
jl
outsl
mov
mov
fstpl
dec
jo
out
out
push
cwtl
mov
mov
sbb
push
lods
mov
ss
sub
mov
xor
aam
pop
or
int3
repz
jmp
adc
xorb
fldcw
sub
int3
lock
xchg
int3
sbb
sub
jp
pop
mov
mov
jae
jp
sub
int3
pop
sub
mov
in
and
xor
scas
ret
stc
and
mov
xor
cmp
dec
fdivrl
inc
int3
sbb
imul
imulb
mov
leave
loope
push
cld
sub
or
cmp
sub
pop
mov
lods
insb
pop
pushf
dec
mov
lods
sbb
or
cmp
sub
test
mov
jge
insl
fistps
jmp
sbb
xchg
adc
or
push
mov
xorl
mov
stc
pop
call
inc
push
stc
and
add
or
push
mov
xor
lahf
pop
int3
push
dec
mov
pushf
dec
mov
lods
sbb
or
cmp
sub
fcompl
or
cmp
sub
pop
mov
lods
insb
pop
pushf
dec
mov
lods
sbb
or
cmp
sub
fcompl
and
push
mov
iret
into
sub
dec
mov
jnp
mov
mov
xor
inc
add
xor
push
cld
cmp
stos
add
ja
dec
cmpsl
aad
pop
mov
je
sarl
ret
ret
and
xchg
mov
aam
aam
lret
or
fildl
pushf
mov
mov
adc
or
hlt
mov
int3
loop
in
mov
push
orb
fcoml
mov
and
cmpsl
push
addb
pop
dec
imul
cmp
stos
std
add
aad
inc
adc
xchg
fmulp
mov
aaa
push
sbb
pop
or
fs
mov
movsb
pop
scas
cmpsl
jo
sub
cmp
jmp
inc
pop
adc
cmc
inc
xchg
aaa
push
inc
pop
aaa
xchg
sahf
sbb
fsubr
xor
out
fbld
movsb
xchg
xlat
addr16
pop
ret
cmp
xchg
pop
jge
sub
sub
rcrl
inc
xor
mov
fs
cmp
jg
sbb
test
repnz
or
mov
mov
sub
mov
cli
xor
inc
or
sub
outsl
xchg
mov
jb
cld
jmp
js
jecxz
scas
movsb
pop
mov
dec
out
push
add
scas
push
loop
lahf
sub
movsl
pop
sets
stos
bound
mov
cmp
push
inc
pop
sbb
push
movsl
or
mov
ret
xchg
xchg
cmp
les
inc
or
mov
xor
jbe
cwtl
or
shll
jb
lahf
rorb
stc
fstps
out
lea
out
sbb
mov
and
and
dec
inc
popf
cmp
add
int3
in
lock
lods
fildll
lret
adcl
pop
fwait
imulb
mov
and
ds
mov
and
xor
mov
or
fsub
dec
adc
mov
hlt
jg
stos
adc
in
or
cmp
push
and
pop
pushf
pop
or
fnstcw
lds
mov
mov
loope
mov
xchg
lcall
push
xor
icebp
dec
xchg
ja
leave
mov
orl
dec
push
pop
adc
push
push
fincstp
adc
mov
sub
cmp
xchg
mov
mov
cmpsl
mov
push
jo
xchg
in
jmp
jecxz
pop
fnstcw
movsl
pop
mov
out
and
xchg
stos
fdivrp
rcrb
scas
out
pop
push
sub
shlb
aaa
shll
lcall
aad
cmp
jle
test
lret
ja
dec
push
hlt
frstor
add
mov
xchg
fadds
jmp
cmp
sub
xor
or
sub
jne
mov
push
adc
and
enter
or
imulb
sbb
mov
dec
inc
fstpt
jbe
jno
pop
push
pop
imul
jle
pop
pop
add
xchg
and
xchg
or
enter
popf
mov
ja
adc
hlt
insb
shlb
ret
pop
test
ds
popf
mov
adc
mov
and
or
cmp
call
popl
cmp
adc
bound
notl
daa
movsb
push
mov
cmp
xor
xor
mov
fwait
push
ficoml
mov
sbbl
sbb
ja
mov
cltd
inc
inc
sub
insb
iret
sub
mov
fnstsw
mov
dec
push
ds
xchg
pop
sbb
mov
ljmp
sbb
mov
lahf
cs
pop
jne
imul
push
push
cwtl
xchg
jae
jbe
add
mov
sbb
xor
in
clc
aaa
pusha
mov
orb
push
lret
push
stos
push
cmp
mov
or
out
shl
inc
scas
push
ljmp
sarl
lock
mov
repz
and
xor
cmp
mov
std
dec
ss
lret
rorb
xchg
cmp
sbb
push
or
xor
ja
push
mov
ret
gs
and
orb
fstpl
test
fidivs
mov
cli
jecxz
jae
pop
mov
mov
cmp
xchg
cs
movsl
adc
cmpsl
sub
jge
cmp
xchg
outsl
mov
nop
je
dec
loop
stos
push
jno
xchg
lds
mov
or
inc
fidivrl
jbe
pop
mov
stos
iret
repz
leave
inc
jge
pop
notb
and
stos
incb
cmp
xor
dec
add
int
add
sub
outsb
mov
dec
or
cmp
popf
lods
xchg
jl
mov
pop
jnp
push
jge
mov
test
xor
icebp
sbb
test
xor
xchg
cmp
jmp
sub
test
jle
fldenv
mov
mov
mov
aaa
mov
inc
sbb
push
jne
jle
or
iret
addl
addr16
sbb
jge
lahf
popf
popa
insl
scas
inc
inc
mov
xor
testl
lret
cmc
or
mov
xchg
cltd
push
out
sahf
and
lods
notl
push
cmp
mov
mov
nop
mov
inc
jbe
mov
insl
jecxz
sbb
cld
cmpsb
pop
sbb
lret
frstor
in
cwtl
hlt
push
fs
mov
mov
or
xchg
int3
stc
into
orl
push
bound
xorl
lret
jnp
sub
scas
add
and
mov
repnz
fucomi
jns
mov
movsb
int3
fdivs
cmp
dec
add
mov
pop
arpl
inc
sbb
or
and
test
mov
pop
push
jae
stos
leave
pop
xchg
mov
repz
and
dec
mov
mov
fisttps
jbe
cmp
xchg
pop
and
iret
add
out
jge
jecxz
and
push
mov
jno
mov
xor
xchg
fnstsw
rolw
dec
dec
sti
scas
push
inc
movb
or
enter
in
cmp
mov
lahf
pop
push
xor
cmc
scas
cmp
mov
dec
inc
push
pop
test
hlt
loop
jge
mov
loope
jmp
sbb
mov
lea
pop
cmp
test
into
cmp
jb
push
jg
imul
mov
lds
push
cs
sarl
scas
ret
adc
and
inc
jle
test
cmp
add
and
push
test
imul
xchg
adc
popf
and
pop
jno
pop
mov
movsb
and
jns
les
mov
aam
cli
dec
sub
xchg
rorb
or
cmpsl
scas
arpl
aad
fwait
or
xchg
add
or
aam
out
sarl
adc
pop
cmc
inc
pop
fxch
inc
int
popf
shll
sahf
sub
sbb
mov
dec
mov
fstps
sub
hlt
lds
loopne,pn
pop
jmp
lcall
cmp
fimull
mov
pop
push
pop
shl
cmpsl
adc
sahf
aas
mov
add
cmc
loope
cmp
pop
push
xor
sbb
insb
pop
cmp
mov
adc
jae
mov
leave
mov
xor
movsl
sub
push
shrl
cmp
add
lea
aas
lock
imul
add
mov
jbe
ja
dec
xor
or
das
lds
adc
inc
sbb
lahf
push
jl
fnstenv
cmpb
cli
out
dec
data16
add
xor
cmc
xor
dec
in
aas
push
int
xchg
negl
mov
fisubl
lret
dec
arpl
in
rol
sub
xor
out
mov
fisubrs
cs
sbb
jl
add
pop
mov
mov
sbb
or
push
adc
imul
orb
loop
sub
lods
pushf
mov
ja
loopne
dec
daa
icebp
les
clc
cmp
std
cmc
stos
aam
sbb
popf
sub
test
cs
jae
int3
out
or
dec
rorb
sub
push
dec
and
sub
and
shll
addr16
rcll
mov
shlb
pop
push
pushf
mov
mov
xchg
fsubr
subl
lea
fwait
push
or
lods
hlt
inc
mov
data16
xchg
dec
mov
enter
popa
stc
imul
ror
and
jns
int3
shlb
sbb
mov
das
xor
xchg
dec
fstl
in
lds
sbb
in
sbb
inc
rol
scas
mov
cmc
rol
addr16
and
adc
fst
daa
fucomi
push
add
mov
mov
lret
mov
out
das
das
je
pop
pushf
aam
push
and
std
push
mov
loop
aaa
mov
sbb
mov
in
sbb
popf
xchg
fisttps
dec
repnz
in
xor
aas
jno
xor
push
or
xor
mov
sahf
push
mov
cmp
xchg
pop
sbb
push
mov
cmp
ds
xor
outsl
xorb
popf
dec
add
pusha
insb
sbb
into
test
mov
sub
xor
arpl
push
fisubrs
cli
int3
mov
push
pop
add
dec
jno
mov
int
xor
movsl
in
adc
or
insl
jb
jbe
ret
jae
decb
cmpsl
jno
xor
push
sbb
ljmp
sub
xchg
adc
stos
outsb
in
dec
and
arpl
in
and
xor
adc
or
lret
int3
inc
push
lock
add
mov
out
sahf
lods
scas
jno
pop
xchg
hlt
out
push
int3
stos
mov
inc
es
dec
aam
mov
rcrb
lds
ljmp
and
inc
loope
xchg
data16
cmovl
mov
daa
aam
test
out
mov
mov
mul
bnd
imul
sub
cmp
cmp
cmp
jg
mov
push
mov
cmp
xchg
add
inc
data16
jne
dec
iret
rolb
pop
int
movsb
lcall
sarl
sti
push
add
adc
and
scas
mov
loopne
cmp
ja
pop
dec
pop
mov
inc
movsl
push
loop
gs
inc
push
jbe
nop
jecxz
popf
int3
insb
adc
xchg
cmpsb
or
fs
das
aam
mov
sarw
adc
cli
xor
push
mov
inc
sub
addr16
adc
repnz
cwtl
inc
fwait
int3
jo
inc
mov
pop
les
iret
cmc
sbb
sahf
xchg
inc
sti
sub
pop
icebp
ret
jnp
xchg
test
ficompl
pop
jb
into
inc
shrl
outsl
decw
xor
clc
test
lds
rcl
ret
aam
add
sub
out
cmpsl
out
out
inc
xchg
and
faddl
fmul
xchg
outsl
cmc
sub
lahf
jge
mov
out
jmp
pop
outsb
sarb
add
and
andb
inc
and
push
stos
lods
les
sbb
lret
cmp
iret
dec
inc
dec
adc
lods
or
stos
xchg
pop
cmp
pop
aam
fbld
lds
jb
movsl
mov
adcl
testb
push
xchg
sbb
and
jp
xor
mov
xchg
xor
mov
scas
mov
xchg
mulb
nop
in
std
test
mov
cld
jmp
jne
cli
mov
jp
sbb
aam
pop
pop
add
scas
rorb
inc
xchg
inc
into
stc
arpl
cld
cltd
xchg
test
insb
adc
dec
clc
add
xor
into
mov
pop
mov
sahf
sub
sbb
xlat
mull
push
and
and
repnz
and
and
hlt
mov
pop
mov
stc
xchg
out
push
fcomi
jnp
mov
or
fisubrl
jnp
aad
dec
aad
add
mul
data16
push
xchg
or
or
or
cli
sub
add
mov
sub
pop
cli
insl
cmc
push
les
and
scas
ja
push
aam
sbb
popf
arpl
in
cli
clc
dec
cmpl
mov
lret
aad
das
sahf
hlt
xor
xchg
pop
jg
pusha
out
jge
or
dec
adc
es
sub
jnp
shl
add
jge
add
jg
push
xor
arpl
add
sub
sbb
orb
daa
xchg
sub
sub
jbe
cmp
jne
lcall
lgdtl
cmp
jp
xchg
in
cmp
and
in
mov
int3
imul
call
mov
xchg
imul
mov
mov
pop
xor
mov
loope
fdivl
aam
stos
sbb
stos
and
and
out
leave
sahf
mov
fidivl
dec
lcall
xchg
js
ds
mov
push
ret
mov
pusha
adc
je
add
into
adc
push
ljmp
data16
dec
jno
sub
rclb
mov
dec
test
and
test
ss
cmp
shr
jg
push
sbb
je
add
jnp
sub
enter
out
cmpxchg
roll
push
lock
sbb
test
xchg
adc
aas
call
inc
sbb
out
jnp
mov
mov
in
pop
int
sbb
fs
popa
inc
or
lret
sub
test
add
inc
imul
jp
pop
out
cmp
arpl
in
test
test
cmpsl
addr16
cwtl
mov
and
adc
sahf
mov
push
pop
mov
pushf
daa
pop
cltd
out
mov
jno
scas
inc
sti
ffreep
mov
stos
movsl
rol
movl
jne
cli
in
sbb
jo
mov
mov
sti
insb
cmpsl
sti
pusha
or
ret
test
das
xor
xlat
xor
cmpsl
cmpsb
cwtl
ss
adc
dec
out
jno
jl
hlt
icebp
add
cltd
inc
push
and
dec
mov
jns
sar
icebp
inc
mov
popa
movsl
push
aas
rolb
or
fdivrl
movsb
cmc
mov
imul
rcll
sub
jo
data16
push
negl
mov
cmp
dec
dec
das
pop
mov
sbb
mov
sub
or
add
cmc
imul
xchg
mov
mov
pop
jbe
and
or
mov
out
nopl
cld
pop
loopne
bound
and
dec
addl
and
adc
mov
rcll
sbb
in
lds
adc
push
mov
adc
stos
cmpsb
mov
dec
ss
in
repnz
cmp
add
inc
test
rorw
sub
les
leave
xchg
ja
xchg
lret
or
adc
pop
xlat
or
add
push
mov
xor
and
fists
inc
mov
xor
dec
fistps
mov
sub
out
adc
shlb
lahf
shrb
insb
call
mov
call
in
mov
fdivp
pop
js
mov
add
popf
push
sub
fidivl
inc
pop
or
adcl
ret
sbb
pop
in
sbb
ljmp
and
push
loope
lahf
loop
pop
jge
xor
mov
fwait
mov
fmulp
dec
test
into
mov
add
lea
cmp
fnstcw
loope
cwtl
push
fcoml
xlat
adc
aad
inc
in
mov
sar
xchg
mov
and
mov
mov
mov
push
mov
push
and
hlt
jge
inc
fisubl
scas
cmpl
jns
and
in
add
mov
out
dec
mov
xor
pop
cld
sbb
dec
outsl
mov
ds
imul
aad
xchg
cli
jb
inc
pop
mov
bound
sahf
sub
xchg
pop
loop
or
jg
addr16
fcmovnbe
mov
cmp
sub
mov
pop
loopne
or
xchg
cmp
sbb
fdivl
lods
pop
std
lahf
jns
cmp
mov
iret
rclb
pop
jmp
push
xor
sub
xchg
pop
out
xor
ja
aad
lods
lods
fcoms
cli
enter
out
jl
jae
cmp
xchg
or
aas
lods
mov
addr16
sbb
push
pop
xchg
andb
lcall
xchg
aam
lods
mov
mov
jp
xor
push
adc
ss
outsl
mov
sbb
popa
inc
and
cmp
mov
ljmp
xchg
add
das
pop
call
push
push
clc
mov
out
jmp
imul
rol
in
sub
aaa
sti
push
pop
mov
inc
xor
popf
jmp
imul
or
push
add
stos
pushf
sub
pusha
adc
lcall
jecxz
adc
xchg
mov
sub
push
and
lock
lret
dec
stos
or
ficomps
xchg
lahf
jb
xchg
lods
cmc
inc
lock
jecxz
dec
jg
add
xchg
das
xchg
test
xor
xchg
pop
pop
cld
das
les
test
mov
gs
cmp
fidivrs
dec
ret
movsb
test
lds
arpl
add
pusha
imulb
cmpsl
test
mov
cli
xor
test
jmp
mov
dec
test
adc
or
fimull
adc
lahf
out
xor
sti
repz
push
scas
pop
cli
shlb
stos
das
or
lcall
or
fdiv
add
sub
mov
test
aad
xchg
jmp
xchg
out
movsl
fcomip
sbbl
test
in
mov
mov
jne
out
pop
push
js
in
aaa
xchg
in
pusha
push
stos
sahf
jmp
sbb
cmpsb
ret
addl
xchg
in
out
mov
xchg
pop
xlat
insl
push
testl
fiadds
lahf
inc
dec
or
icebp
incb
jo
aam
jle
push
es
arpl
xchg
or
or
or
mov
mov
sbb
lods
jg
cmp
mov
scas
mov
stos
mov
pusha
test
dec
jb
into
mov
arpl
in
mov
inc
and
jno
push
fwait
sub
mov
mov
pop
arpl
daa
jl
jle
push
stc
add
in
cmp
lock
pop
xchg
incb
andl
andb
xor
rcrb
jo
imul
out
es
or
push
mov
mov
ret
add
ret
jecxz
dec
cmp
and
into
and
je
in
add
mov
sub
lods
icebp
xchg
stc
aad
pop
xor
and
and
ror
mov
mov
dec
loop
movsl
xchg
adc
outsb
lret
insl
repnz
and
jne
sahf
nop
cld
and
int3
jp
pop
adc
add
iret
pcmpgtb
imul
mov
shlb
cmp
xchg
lret
loopne
and
idivb
xchg
mov
test
sub
ja
in
pop
fsts
push
adc
sbb
dec
xchg
arpl
inc
in
fstl
incl
mov
clc
sbb
out
sbb
sbb
in
push
add
int
cmp
lods
sbb
push
addr16
xchg
cwtl
testl
shlb
cmc
jmp
stc
add
dec
sub
loop
and
push
mov
xor
inc
lret
outsl
lock
testb
sbb
hlt
xor
jle
add
test
ljmp
pop
cmpsl
mov
fs
ja
loop
dec
mov
mov
inc
test
xchg
jecxz
dec
mov
xchg
pop
scas
dec
push
sbbl
hlt
rolb
stos
lret
and
mov
jae
jne
cmp
mov
ret
subb
imul
aaa
xchg
push
push
dec
cwtl
adc
adc
cmc
nop
popa
mov
jae
orb
and
or
sbb
pusha
push
movsl
and
xchg
clc
mov
push
mov
stos
loopne
mov
scas
sub
mov
in
push
and
cmp
pop
ficompl
mov
nop
sbb
sub
jmp
sub
xlat
dec
inc
push
push
enter
scas
loop
mov
bnd
cli
pop
adc
icebp
in
sub
loopne
mov
ret
or
rcl
in
imul
push
adc
jo
jae
push
iret
ja
xor
mov
add
repz
cwtl
jmp
pop
inc
lahf
dec
mov
outsb
push
test
sub
pop
mov
lods
insb
pop
pushf
dec
mov
lods
sbb
or
cmp
sub
fcompl
or
cmp
sub
pop
mov
lods
insb
pop
pushf
dec
mov
lods
sbb
or
cmp
sub
fcompl
or
cmp
sub
pop
mov
lods
insb
pop
pushf
dec
mov
lods
sbb
or
cmp
sub
or
cmp
sub
pop
mov
lods
lods
pop
pushf
dec
es
mov
test
ret
add
adc
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
inc
xchg
cmpsb
je
or
push
test
aam
in
hlt
test
push
movsb
data16
inc
xchg
cmpsb
je
add
adc
and
xor
les
aam
nop
es
test
xchg
push
movsb
data16
inc
xchg
cmpsb
je
add
adc
and
xor
les
aam
xchg
push
ficoml
adc
add
or
add
pop
into
push
mov
out
shrl
in
arpl
cmpsl
dec
lsl
iret
aad
push
xchg
cli
stc
xor
nop
push
das
out
ret
jb
jmp
jnp
sbbl
lods
int3
cld
mov
into
add
mov
sbb
data16
sbb
into
add
push
mov
mov
loope
gs
fimull
jmp
jp
cld
test
insb
mov
mov
testb
pop
pop
and
stc
sub
fnstcw
or
mov
sbb
mov
idiv
aad
fucomi
mov
inc
sbb
mov
mov
data16
xchg
cmpsb
je
add
adc
and
xor
les
aam
in
hlt
test
push
movsb
data16
add
adc
inc
mov
rclb
xchg
inc
loope
std
xor
pop
loopne
inc
jecxz
repz
adc
and
xor
mov
jne
push
loope
rclb
mov
sub
aam
roll
adc
and
xor
les
aam
in
hlt
test
push
movsb
data16
inc
xchg
cmpsb
je
add
adc
and
xor
les
aam
in
hlt
test
push
movsb
data16
inc
xchg
fisttps
je
mov
cmp
out
mov
push
or
fsubrl
add
cmp
out
mov
out
and
push
test
or
aad
or
dec
fistpl
lock
mov
repnz
or
jmp
in
push
jge
test
dec
je
jb
imul
std
xchg
hlt
fbld
inc
cmp
addr16
inc
rclb
test
cmc
lods
dec
pop
mov
lret
sbb
sbb
mov
in
loopne
pop
mov
ss
add
push
cmc
sbb
test
dec
and
aas
push
dec
sbbl
cmc
rol
mov
mov
mov
ficompl
mov
stc
bound
fstp
push
bound
and
mov
insl
adc
sub
or
lret
dec
bound
cs
ret
add
adc
xchg
lret
add
in
mov
xor
lret
adc
fcompl
dec
clc
dec
push
sarb
lahf
and
ja
gs
clc
into
cwtl
cmpsb
mov
std
sbb
mov
ds
mov
inc
and
lea
jno
adc
push
pop
lods
fsubr
or
enter
gs
outsl
sub
fwait
sub
sbb
fcmovbe
xlat
mov
repnz
jo
gs
div
sarl
push
or
sbb
and
popf
cmp
shrb
ds
and
mov
idiv
mov
mov
cmc
ret
adc
ljmp
mov
and
loop
mov
daa
mov
cmp
movntq
popf
int3
fcomps
xchg
cmp
clc
cmp
das
lock
and
fdiv
in
mov
repz
sbb
and
mov
xchg
add
xchg
fimuls
sub
cmp
push
mov
jle
gs
shlb
repnz
jl
or
fdivrp
insb
inc
mov
cmp
shlb
jge
hlt
cmp
shr
add
subb
ss
xchg
and
dec
ljmp
sub
push
xchg
cld
mov
popa
les
scas
adc
bound
and
daa
push
imul
aad
scas
adc
js
xor
mov
xchg
adc
sub
xchg
jg
cmpsb
xchg
jmp
arpl
sub
and
adc
and
and
inc
and
out
jno
hlt
jecxz
sub
jne
insb
fdivr
in
jne
outsl
hlt
popf
loopne
call
insb
mov
mov
movsl
ret
push
std
cld
mov
mov
divl
fnstcw
or
cltd
test
pop
add
mov
mov
mov
fnsave
shrb
rorl
imul
adc
xor
in
xor
push
xor
je
pop
pusha
sti
cmovl
xchg
arpl
mov
subb
cmp
mov
movsl
jns
sbb
jnp
test
lcall
sbb
push
in
and
inc
std
cli
sub
xchg
add
mov
jl
jecxz
sub
lret
jle
add
pop
in
push
inc
xorl
lcall
add
jno
mov
xchg
and
pop
popf
dec
sub
insl
jnp
fucomi
ret
inc
int3
mov
jne
stc
pop
bound
in
or
xchg
in
sub
jb
cmpl
jecxz
shll
mov
sbb
cmp
add
shl
jl
inc
std
sbb
cwtl
sub
mov
or
bound
shrl
or
inc
pushf
push
sub
ljmp
jge
enter
fadd
cmpsl
xchg
int
out
ret
ljmp
xor
rdpmc
jb
frstor
xor
mov
xor
cmp
sub
aam
jl
cs
outsb
or
aam
test
jg
add
xlat
push
mov
dec
cmpsb
negb
rcll
lcall
scas
fwait
ss
daa
imul
push
inc
add
xchg
scas
cmp
mov
push
addb
iret
scas
imul
pop
mov
out
daa
xor
mov
xor
int
xor
int
insl
mov
pop
sub
jne
xchg
cmpsb
dec
in
clc
mov
sbb
popa
and
arpl
xchg
xchg
cmpl
sub
mov
pushf
ret
inc
nop
add
inc
fstpl
repz
lret
loopne
sub
add
std
jmp
mov
pop
icebp
arpl
dec
inc
imul
in
sti
aas
push
call
mov
inc
inc
inc
and
jae
loopne
xchg
dec
push
addr16
jp
xor
iret
pop
jbe
clc
mov
mov
in
enter
pop
and
lods
shlb
xor
sub
shrl
pop
insl
inc
mov
daa
stos
repnz
sbb
or
das
subb
shl
sub
hlt
stos
cmp
stos
adc
out
fdivr
inc
repnz
addr16
les
adc
mov
sahf
in
cmpl
fsubrl
xor
jl
stc
orl
mov
test
test
loopne
mov
sub
mov
mov
icebp
adc
lahf
imul
cmc
ret
les
cmc
or
in
roll
loope
dec
shr
shlb
xor
sbb
inc
out
data16
inc
sbb
add
jae
lret
pusha
ret
jne
in
ss
scas
or
inc
add
xchg
in
dec
xor
sbb
push
fs
jg
xchg
xor
xorb
mov
popa
sbb
addr16
out
ja
pushf
lahf
xchg
into
cmp
das
fnsave
or
ja
imul
sbb
cmp
add
ss
rorl
dec
ljmp
push
push
mov
fstps
mov
xchg
arpl
dec
addr16
sbb
pop
in
imul
dec
mov
mov
das
mov
add
mov
pop
incb
lcall
and
dec
paddq
cmp
xchg
inc
mov
mov
lods
pop
add
cmp
in
adc
xchg
mov
adc
addr16
mov
sub
loopne
cwtl
test
xorb
aam
in
popa
jecxz
push
jb
dec
lret
out
sub
push
pop
scas
mov
arpl
dec
into
aad
jecxz
imul
jbe
dec
pop
fiadds
lods
jmp
lds
xor
out
jae
shrl
or
or
shlb
mov
adc
jb
into
push
movsb
push
pop
mov
and
dec
daa
lahf
loope
cmpsl
cmpsb
in
test
push
leave
sub
dec
jns
outsb
push
and
cmp
jge
dec
xor
test
adc
lahf
sbb
pop
pop
lcall
mov
push
mov
sbb
xor
jno
push
scas
adc
int3
cmp
mov
aam
aaa
pushf
popa
aad
jo
jno
sub
xor
or
dec
jmp
dec
leave
mov
xchg
outsb
mov
mov
mov
cs
and
jo
inc
jb
dec
xor
jbe
icebp
les
inc
lods
dec
aad
lock
inc
mov
sbb
mov
sbb
fwait
mov
xchg
out
inc
adc
sub
repz
fs
dec
test
mov
test
mov
sbb
cmpsb
cmp
push
lods
sbb
in
pop
enter
cmp
data16
movsb
or
jae
call
inc
flds
xor
and
or
sub
movl
shrl
insl
int3
add
iret
xorl
fs
dec
inc
jb
hlt
lds
xchg
imull
and
xchg
sub
or
bound
mov
and
jb
jno
sbb
mov
jbe
ja
cmpsl
xchg
imul
in
add
movsb
imul
pop
fisubl
xor
mov
cmp
clc
sbb
push
mov
adc
xchg
xchg
lahf
add
sub
xor
sahf
mov
mov
jge
push
in
je
out
aaa
sbb
push
push
out
repz
pop
clc
ja
scas
sbb
stc
popa
or
push
call
pop
call
or
ret
fdivrs
inc
dec
aaa
cmpsl
adc
std
insb
mov
loop
aaa
addb
imull
mov
lahf
dec
cmc
cmp
cmp
xchg
mov
adc
sar
leave
lods
out
inc
lods
jge
pop
and
xchg
jns
push
outsl
adc
shlb
sub
mov
js
fisttps
mov
mov
mov
dec
jns
inc
lret
sbb
cwtl
push
in
ret
adc
pop
imul
or
inc
gs
iret
inc
ret
stc
lret
nop
aaa
dec
daa
push
mov
xchg
lret
test
xchg
fistpll
out
xor
push
or
mov
ficoml
lcall
xor
or
incl
jecxz
imul
cmc
jne
divb
xchg
ficomps
testb
or
push
fnstenv
arpl
sbb
push
inc
hlt
aaa
push
repnz
dec
add
adc
mov
push
in
lcall
mov
jno
int3
xchg
jle
mov
clc
mov
xor
movsl
push
adc
xchg
dec
push
in
loope
mov
mov
add
in
mov
fs
cmp
jne
outsb
cmc
push
adc
sbb
mov
jl
jle
je
cmc
adcb
lcall
testl
jno
mov
je
inc
not
inc
stos
sub
shll
sbb
or
mov
in
hlt
aam
and
adc
in
int3
jecxz
push
out
pop
jmp
rorb
push
push
sub
add
scas
jg
inc
xchg
jmp
insb
mov
fdivl
loopne
and
jmp
dec
pop
in
es
fs
fldcw
or
mov
inc
test
and
xchg
inc
fldenv
data16
jmp
popa
sahf
lcall
pop
mov
ljmp
int
scas
sbb
and
movsl
mull
pop
popf
dec
fwait
cmp
sbb
out
test
out
pop
jae
sub
insl
jg
pop
popa
in
insb
adc
push
push
mov
in
or
fimuls
cmp
push
dec
aam
imul
or
cmp
sub
or
and
xchg
push
call
lcall
dec
add
mov
in
mov
in
mov
imul
xor
repnz
les
mov
mov
popa
cmp
push
mov
cmpl
mov
les
cmp
adc
int3
cmp
or
mov
sbb
adc
and
push
mov
mov
push
dec
dec
sbb
in
inc
lcall
cmpsb
add
or
mov
repnz
inc
fldt
and
aad
xor
sti
dec
jae
or
cmp
xor
cltd
mov
jmp
aaa
fidivs
xor
iret
jge
loopne
jge
fwait
mov
jmp
mov
addr16
mov
rcrl
shl
cmp
js
sub
aas
cmp
roll
xchg
lods
je
in
repnz
add
sub
inc
pusha
stc
stos
or
jg
pop
in
adc
mov
jbe
ds
xchg
in
lds
pop
inc
icebp
mov
ret
push
jnp
in
add
xchg
ss
and
pop
inc
cmovbe
or
mov
add
nop
arpl
sti
xchg
ljmp
fstl
imul
fcmovnbe
pop
int
std
and
and
std
loope
jnp
push
xor
xor
sarb
pop
dec
xor
dec
ja,pn
mov
add
adc
pop
xchg
inc
popa
jg
nop
iret
mov
push
xlat
pop
aaa
neg
add
sbb
stos
test
pop
lods
mov
bound
push
shll
sti
adc
push
jo
les
push
jmp
ljmp
and
imul
push
sti
movsb
imul
aaa
mov
mov
outsb
adc
gs
xchg
cmpsb
inc
ja
jg
jecxz
arpl
dec
or
push
mov
cmp
outsb
mov
jae
leave
nop
stos
cmp
xor
sub
sbb
lret
mov
test
lock
mov
push
idivb
mov
mov
cmp
mov
inc
sub
scas
push
cmp
sub
test
je
xor
inc
in
push
js
adc
dec
mov
lock
inc
and
enter
gs
popa
xchg
cmp
push
mov
mov
pop
and
sbb
xchg
fneni(8087
addr16
stos
into
mov
mov
or
int
mov
ljmp
dec
popa
data16
dec
cmpsb
cmpsb
pop
shl
or
jle,pt
adc
data16
inc
daa
sahf
inc
cld
leave
in
lahf
mov
les
xchg
jb
inc
fmuls
stos
jnp
jle
mov
xor
cmp
outsb
and
jbe
jp
add
dec
fs
add
push
pop
andl
fisttps
push
cmp
xchg
rclb
int3
lahf
icebp
clc
dec
fildll
mov
sbb
out
test
fbld
xor
test
pop
sub
dec
dec
sbb
in
mov
mov
and
adc
push
mov
xchg
mov
aas
xchg
dec
aaa
add
repz
inc
dec
leave
and
sbb
adc
shrb
ret
and
pushf
sub
sub
ja
adc
repz
mov
pop
add
movl
clc
mov
movsb
pop
cltd
jno
mov
popf
out
js
cli
stc
das
js
aaa
sub
je
in
add
or
adc
fiadds
xadd
ljmp
imul
mov
add
repnz
dec
mov
shll
popa
loope
pop
out
jl
xor
cmp
or
mov
xchg
mov
push
ss
pop
movsl
sarl
pop
imul
clc
sti
sub
shrb
outsl
cmpb
sub
aas
lods
jne
xchg
pop
repz
pop
orl
cmp
mov
mull
sahf
data16
shlb
test
leavew
ljmp
int
inc
pop
push
sbb
je
jbe
dec
cmpsb
mov
in
adc
popa
and
lahf
add
repz
imul
mov
jle
mov
sbb
fmuls
jbe
decb
xchg
pop
lcall
add
add
sarb
ljmp
pop
add
rclb
not
aaa
in
cmp
and
cmpsl
xchg
in
pop
sbb
jo
xor
push
sbb
jl
test
sub
and
jnp
or
dec
movsb
gs
inc
repz
sbb
xor
jg
and
xchg
out
repnz
pop
loope
dec
xor
add
jbe
push
out
inc
movsb
push
hlt
or
mov
add
pushf
enter
ret
mov
add
jge
xor
out
movsb
inc
sbb
xlat
sahf
daa
aaa
in
mov
insl
js
jmp
push
in
fcoms
jp
fldt
jge
fs
std
push
add
sub
dec
jbe
mov
mov
stos
roll
ja
scas
lret
orl
add
popf
popf
push
into
iret
dec
shll
jbe
addr16
jp
mov
orb
and
repz
nop
fwait
ret
leave
push
addr16
mov
jecxz
jne
test
push
xor
arpl
xor
jnp
jo
test
ja
stos
dec
jl
sub
mov
outsl
add
cmp
adc
jns
sbb
sbb
xchg
cmpsb
inc
int
mov
test
fcomip
repnz
rolb
ljmp
test
shll
push
fisubl
adc
stc
inc
xchg
js
movsl
push
sub
pop
push
and
jno
sbb
adc
jge
iret
lret
adc
out
lcall
imul
and
xor
push
js
insb
mov
movsl
push
add
into
fmull
shrl
lock
mov
aas
jbe
sar
loopne
inc
mov
ss
mov
inc
xchg
fldpi
jge
stos
iret
xchg
push
jns
adc
addr16
pop
mov
stos
push
add
and
call
or
mov
fmull
lret
cmp
ja
or
sub
jl
add
sub
push
lock
xchg
push
mov
call
fs
stos
xchg
push
leave
dec
fsubrs
ljmp
mov
adc
inc
xchg
sarl
cmp
mov
sbb
push
lret
fstl
ja
ret
call
sub
mov
std
push
fptan
stos
mov
dec
sti
loope
cmc
or
jp
mov
aam
mov
movsb
xchg
imul
imul
mov
xchg
push
inc
xorb
in
xor
xor
outsb
shlb
mov
mov
decl
and
mov
mov
dec
cmp
dec
mov
call
inc
add
outsb
lods
pop
lea
in
and
notb
test
xchg
add
push
cmpsl
fwait
insl
push
mov
popf
pop
mov
jo
out
stos
out
xlat
add
pop
pop
das
fildl
and
mov
lods
jle
dec
sbb
or
xor
mov
or
dec
and
test
daa
add
in
ret
imul
sub
pop
push
cmp
aad
dec
mov
dec
mov
sbb
or
fldl
in
mov
pop
in
ss
mov
xor
sub
in
aad
hlt
mov
bound
lods
mov
pop
ret
int
xchg
icebp
cmp
xor
push
sub
mov
mov
outsb
lods
xchg
imul
cld
mov
xchg
daa
push
lock
pop
mov
add
aad
jp
dec
and
push
pop
mov
sbb
mov
jecxz
jae
sbb
jecxz
inc
xchg
add
hlt
fwait
wrmsr
pop
push
lret
sbb
shrb
adc
gs
pop
ss
in
sbb
add
inc
fiaddl
mov
pop
mov
notl
dec
mov
jae
lret
scas
scas
xor
ja
cmp
xlat
test
xchg
test
scas
lahf
xlat
ret
push
mov
push
push
xchg
mov
dec
push
iret
mov
jmp
shrb
xchg
xchg
scas
insb
pop
push
test
mov
dec
jae
in
push
cwtl
xchg
popa
adc
jns
fstpt
icebp
or
rolb
dec
stc
aas
jo
pushf
lock
add
xor
out
cmp
xchg
js
bound
cmc
xor
cli
and
mov
ds
rorb
xor
aad
test
stos
icebp
add
jae
or
xchg
ljmp
xchg
xor
es
and
pop
mov
mov
leave
mov
push
test
add
push
jecxz
das
adc
xchg
sub
test
xor
arpl
out
xchg
push
inc
and
notl
adc
xchg
pop
shll
fsts
jbe
xchg
div
mov
jmp
insl
or
inc
dec
stos
or
gs
jns
mov
shll
lahf
pop
add
mov
pop
scas
add
mov
std
das
loopne
sbb
int3
add
inc
inc
sub
sub
xchg
mov
inc
lods
push
xor
sub
int
mov
pushf
jecxz
les
mov
sbb
xchg
mov
sub
add
mov
add
xchg
mov
xor
insl
or
or
cmp
lods
scas
pop
sub
test
push
aas
movsb
cmp
int3
cmp
mov
pop
pop
js
iret
insb
add
clc
stc
enter
adcl
dec
xchg
imul
dec
aam
inc
mov
stos
int3
rcr
dec
ret
cltd
jae
jo
adc
dec
and
inc
popf
xchg
push
mul
pcmpgtw
xor
lods
jge
dec
pop
push
ljmp
cmp
aaa
aas
ret
iret
cmp
movb
jge
loop
loope
cmp
push
push
cmp
push
xchg
or
push
mov
mov
ja
rclb
or
call
lcall
gs
jb
cwtl
subb
mov
adc
sub
insb
mov
xlat
dec
or
cmp
mov
imul
jmp
stc
fwait
js
jge
rorb
inc
pop
sbb
xchg
push
adc
dec
stc
jne
or
pop
sbb
std
dec
xchg
jmp
adc
and
xor
les
aam
in
hlt
test
push
movsb
data16
inc
xchg
cmpsb
je
add
adc
and
xor
les
aam
in
hlt
test
push
movsb
data16
inc
xchg
cmpsb
je
add
adc
and
xor
les
aam
in
hlt
test
push
movsb
data16
inc
xchg
cmpsb
je
add
adc
and
xor
les
aam
dec
es
inc
repz
sbb
pop
cltd
dec
mov
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
add
adc
and
xor
adc
jl
adcb
mov
icebp
repnz
loop
adc
add
xor
and
push
into
popa
jb
push
xchg
xchg
xchg
mov
sarl
loop
orb
cmp
dec
jle
pushf
jno
cwtl
dec
mov
in
leave
rol
test
loop
adc
and
ja
gs
leave
mov
xchg
push
sub
loop
rorb
mov
mov
pop
push
push
mov
add
mov
mov
rol
add
repz
outsl
adc
pop
shrb
ja
addb
jp
aam
jmp
cltd
aas
cmp
shl
ret
icebp
repnz
add
call
push
push
sub
insl
nop
rclb
sarl
push
pop
pushf
ljmp
dec
pop
sub
andl
jne
mov
push
jecxz
sbb
and
sbb
xor
jle
sbb
fmull
mov
loope
icebp
enterw
and
inc
inc
popa
test
loop
adc
inc
mov
dec
cmp
repnz
mov
je
inc
jno
or
es
sub
adc
aad
sarl
subl
inc
dec
push
inc
pop
sub
sbb
push
ret
aam
xlat
lock
mov
mov
inc
dec
bound
or
push
inc
popa
jb
bound
mov
mov
loope
icebp
loop
adc
add
xor
and
push
inc
popa
jb
bound
mov
mov
loope
icebp
loop
adc
aad
xchg
inc
push
sub
sub
sub
aam
or
mov
shrb
pushf
pop
jb
inc
jge
scas
xor
std
shl
mov
ret
mov
mov
movsl
mov
fcomip
inc
test
fdivrs
call
pop
sub
stos
cs
inc
pop
push
dec
ss
in
sbb
fidivs
mov
add
pop
jge
dec
stos
lret
mov
xchg
jmp
dec
push
lds
xor
ss
mov
lcall
add
cwtl
xchg
stos
loope
insl
testb
loope
out
pop
mov
stc
imul
adc
mov
sub
lods
pop
sti
push
xchg
les
cmc
sub
and
pop
ds
in
int3
mov
neg
dec
sbb
inc
stos
jb
sub
test
ja
sahf
ret
jmp
leave
lea
ljmp
nop/reserved
sar
mov
sbb
leave
movsb
push
and
add
jae
adc
and
xor
je
fidivrs
jg
int3
fdivrl
jo
sub
rorl
jae
out
leave
mov
stos
push
lock
push
jo
jl
ds
add
lahf
sub
cmp
lret
icebp
les
cs
fs
aas
cmc
adc
test
cmc
lds
mov
orb
insl
adc
mov
xor
or
sub
iret
hlt
mov
sbb
daa
xlat
jo
out
mov
sub
aaa
out
mov
fisubrl
mov
ds
decb
cmp
pop
mov
fsubs
push
incb
pusha
scas
cmpb
loop
imul
flds
and
mov
std
inc
insb
inc
rorl
dec
adc
mov
or
mov
xchg
adc
adc
mov
mov
or
add
adc
fs
negl
test
sbb
push
lds
rorl
divl
cmp
xchg
addr16
fisubs
mov
cmp
std
cmpsl
xlat
into
pop
dec
cmp
psubusw
sbb
sub
fidivs
lret
xor
dec
jno
pop
popa
or
imul
pop
cmpsl
test
push
repnz
out
jecxz
dec
inc
ret
pop
cli
xchg
push
outsl
fs
pushf
stos
das
js
icebp
ja
lods
ljmp
mul
int
loope
pop
adc
ret
cmc
movsl
pop
ficompl
mov
jb
fcomp
jge
call
movsl
icebp
in
pop
stos
ss
nop
push
push
and
xchg
mov
jl
pop
dec
scas
mov
test
pop
sub
imul
es
add
mov
xor
inc
aam
mov
dec
daa
mov
inc
push
cs
add
push
shll
les
mov
je
ljmp
inc
dec
jns
js
jg
fdivs
add
sahf
das
xchg
cmpsl
std
dec
mov
ss
add
push
push
subl
push
add
hlt
and
cltd
repnz
in
mov
sahf
popf
pop
sbb
jo
pop
ret
push
int3
push
add
mov
xor
inc
mov
jnp
pop
jl
sub
pop
pop
scas
jge
ret
pop
lret
popl
scas
sbb
inc
fisubrl
mov
repnz
ret
lahf
hlt
subl
jp
repz
faddl
fsubrl
rclb
inc
push
out
sbb
cmp
xchg
xchg
add
std
dec
pop
clc
mov
pop
subl
lds
pop
xor
imul
mov
inc
push
push
or
or
mov
pusha
lret
jmp
jne
hlt
sub
or
add
mov
lds
add
mov
ret
enter
sub
mov
add
or
pop
movsb
xchg
xchg
push
mov
push
xchg
cs
popa
mov
bound
xor
insb
dec
clc
scas
mov
push
jge
cmc
xor
repnz
push
call
jno
mov
aad
orb
addr16
hlt
loop
adc
and
xchg
dec
icebp
xchg
sub
mov
stos
mov
movsb
enter
jle
mov
push
gs
std
xor
adc
push
addb
testb
test
cmp
in
xchg
sub
inc
cmpsl
dec
mov
mov
insl
sbb
test
and
add
xchg
inc
cmp
fiadds
jno
adc
stos
call
loope
xorl
cwtl
pop
mov
cmp
subb
sub
inc
xchg
push
lds
pop
mov
inc
in
and
pop
adc
or
xchg
pusha
jb
pop
leave
scas
movsl
cmpsl
lret
aaa
in
pop
or
leave
cmp
out
es
inc
sbb
mov
sbb
and
insl
xor
setp
daa
adcb
mov
test
jge
mov
sub
or
ja
sbb
adc
ja
or
mov
imul
ret
fldt
inc
push
gs
xchg
outsb
gs
jns
jl
into
daa
xchg
push
lds
cld
rcll
push
add
xchg
in
fdivp
push
icebp
aad
scas
inc
sbb
adc
or
cmp
shrb
adc
xchg
insb
shl
aaa
mov
mov
imul
push
adc
mov
mov
int
adc
pop
xchg
push
sub
popf
stc
leave
xchg
imul
iret
pop
adc
scas
pop
mov
arpl
icebp
outsl
xchg
in
nop
dec
inc
lcall
push
in
fimuls
out
enter
ret
scas
mov
fsubrl
sub
hlt
out
mov
lods
movsl
and
nop
cmp
sub
nop
imul
jge
fsubrl
xlat
into
inc
addb
push
loop
sbb
fisubrs
or
cltd
ret
sub
xor
loopw
ret
jno
mov
mov
mov
stos
mov
gs
xchg
push
lcall
in
add
inc
cmp
push
jge
xorb
xlat
and
pushf
jnp
or
dec
iret
insl
out
je
xchg
push
ja
push
xor
bound
add
xchg
sahf
and
stos
inc
movsl
mov
mov
xchg
jge
or
or
enter
int3
mov
xor
inc
mov
xchg
inc
xchg
pop
sbb
xor
lret
mov
out
lea
ret
jae
pop
xchg
cld
cmp
fs
sub
and
iret
pop
sbb
aaa
jno
data16
pop
fst
adc
out
adc
sub
cs
int3
test
jl
cli
push
mov
sbb
mov
or
adc
movsl
shlb
jl
cmc
fs
mov
or
pop
push
dec
cmp
ds
mov
pushf
and
inc
mov
sub
mov
in
and
jns
popf
and
xor
imul
ss
push
lods
out
dec
sub
int
and
ss
dec
add
rorb
pop
in
ljmp
ljmp
and
ret
sub
in
add
xchg
jnp
das
pushf
hlt
fisubs
loope
scas
jmp
add
rcrb
in
jl
scas
jge
jb
fnstenv
into
into
hlt
fnstenv
scas
push
adc
mov
mov
xchg
mov
ret
mov
sub
sbb
shr
jg
sbb
jp
push
jbe
pop
shrb
js
jg
add
inc
ret
stc
test
push
clc
rorl
out
jmp
xor
pop
pop
leave
mov
cld
gs
ja
into
dec
jns
xor
enter
jle
push
into
loop
movsb
aaa
rorb
aas
mov
push
movsl
in
movsb
imul
jb
push
movsl
shrb
jb
jl
xchg
or
xor
and
xchg
fisttps
push
pushf
fmuls
xor
out
icebp
sub
jnp
mov
inc
gs
xor
cmp
in
inc
cmc
dec
adc
dec
cmp
jle
fst
cwtl
daa
mov
mov
or
or
lds
push
adc
xor
nop
push
into
lods
xchg
iret
mov
xor
scas
sbb
pop
in
xchg
jle
fsincos
inc
mov
jne
add
or
inc
nop
stos
int3
or
and
scas
and
lret
jne
mov
pop
cmpsb
mov
cmpsl
aad
inc
mov
pop
stos
pushf
jp
and
mov
in
push
add
xchg
mov
xor
mov
aaa
insb
xchg
aas
ret
sbb
mov
jp
aad
sub
rcl
sbb
iret
cmpsl
dec
and
bound
mov
cld
aad
fildll
ficompl
shrl
repz
mov
mov
js
lock
rorl
ds
inc
adc
flds
xor
mov
push
addr16
fmuls
push
insl
xchg
movl
stos
pop
adc
daa
loope
dec
gs
adc
ror
jecxz
lock
ret
dec
movsb
pop
or
sbb
push
ljmp
add
stos
rorl
rcrl
icebp
mov
cli
sub
sub
lock
insb
fiaddl
fdivs
lret
pop
jo
call
jl
test
cmpl
and
xor
or
and
in
lds
jns
jne
xchg
insb
iret
dec
sbb
push
test
jne
jmp
pop
or
ss
popf
dec
ret
outsb
aaa
push
fldcw
push
mov
inc
cwtl
das
jns
xor
inc
stos
loopne
lret
lods
add
mov
jp
mov
add
sahf
test
jns
jmp
mov
es
fsts
and
addr16
adc
push
test
sub
mov
and
insb
fwait
pop
jp
jne
jl
imul
loope
je
push
push
jae
or
xchg
sub
sub
dec
xlat
lds
sbb
sarl
les
adc
mov
xchg
pusha
inc
mov
ret
aaa
in
and
sti
mov
xor
xchg
mov
addl
inc
mov
scas
sti
into
ss
fwait
test
out
jp
mov
pop
pop
mov
xlat
sbbl
pusha
xchg
out
sti
push
lret
mov
test
or
jne
pop
sbb
es
int
faddp
inc
in
dec
fwait
inc
into
push
outsl
test
and
and
xchg
shll
mov
movsb
inc
mov
mov
jno
jecxz
dec
and
lcall
inc
pusha
mov
mov
jns
pop
orl
jg
lahf
pop
loope
loope
xchg
lods
or
jbe
mov
push
xor
movsb
mov
pop
sub
out
aas
xchg
sub
and
enter
bswap
test
pusha
push
scas
cmp
pop
and
mov
lret
xor
repz
sub
sub
xchg
in
shlb
sub
push
movsl
sub
mov
mov
adc
and
xor
xchg
in
sbb
and
inc
mov
fsubrs
cmp
scas
loopne
bound
jge
and
test
cmp
sub
in
cmp
and
scas
out
fidivrs
pop
jecxz
sarl
push
mov
xor
inc
push
je
mov
negb
subb
ss
out
or
fimull
sbb
add
decb
fiadds
das
lds
bound
test
adc
sbb
lods
mov
mov
sbb
cmp
lds
outsl
inc
xor
pop
pop
mov
lods
mov
push
adc
rcr
jns
loopne
fstpt
cmp
xchg
sub
pop
jg
pop
outsb
dec
sahf
xchg
lds
cmp
fsubs
fs
roll
jo
or
stos
adc
push
sub
test
popf
sub
or
lret
cmp
cli
mov
scas
lea
inc
arpl
out
int
inc
sbb
gs
stos
mov
or
xchg
mov
cmp
lds
pop
jge
mov
pop
xor
gs
lcall
outsb
push
jg
in
aad
arpl
dec
jno
mov
std
fisttpll
sub
andb
and
sti
mov
in
xor
dec
imul
mov
dec
out
dec
and
call
outsb
js
or
mov
dec
adc
cld
sti
pop
jo
jmp
aas
in
ret
notb
jmp
dec
adc
pop
add
orl
mov
lret
aad
fwait
push
cmp
mov
cmpb
mov
hlt
jle
xchg
imul
push
lcall
je
mov
scas
ljmp
pop
xchg
loop
fldenv
and
or
test
mov
int
jmp
sbb
inc
jbe
cmp
sub
jmp
sub
fdivr
mov
cld
and
xor
and
sub
cltd
pop
sahf
or
inc
jp
insl
sahf
shlb
fwait
cmp
dec
mov
mov
rorb
jecxz
xchg
inc
xchg
stos
mov
jecxz
dec
in
aaa
mov
jb
cltd
adc
out
pop
movsl
push
rorl
aaa
pop
cmp
mov
fwait
aad
call
add
mov
ret
push
push
fistl
inc
fisubl
jne
inc
rcrl
mov
xchg
fisttps
mov
jnp
nop
loop
nop
mov
hlt
push
and
mov
pop
inc
push
mov
repz
jb
jae
dec
or
sbb
jge
repnz
fstl
pop
inc
int3
cs
push
xorl
xor
add
and
add
lret
lea
rorb
fwait
shrl
pop
lock
shrl
in
sbb
fsubr
lahf
shll
rcl
pop
sar
int3
push
cwtl
mov
adc
sub
xor
pop
mov
push
jg
js
mov
insb
leave
xor
nop
cltd
jge
out
add
cmp
lahf
js
inc
xchg
pop
cmc
pop
mov
push
nop
inc
or
dec
gs
js
adc
jp
into
pop
jl
lahf
add
icebp
or
sub
sub
lret
or
jle
outsb
pop
inc
adc
stc
out
jnp
push
cmp
cltd
mov
mov
pop
sbb
xor
mov
out
mov
mov
mov
test
enter
loope
repz
jne
add
xchg
mov
repz
adc
data16
or
or
mov
xor
or
lods
xchg
sub
jmp
lea
xor
lret
outsb
push
inc
shl
out
push
rorl
inc
push
int3
pushf
sbb
test
nop
gs
hlt
dec
insl
mov
or
add
jp
dec
ds
aam
dec
xor
test
cmp
xor
mov
pop
xchg
sub
mov
scas
and
nop
xor
sub
ds
mov
lea
int
mov
incb
insb
addr16
sbb
inc
xorb
jns
add
xchg
sbb
bound
mov
fiadds
out
sub
lret
ret
add
push
adcl
inc
aad
jmp
dec
push
mov
cmp
aas
mov
or
sub
fwait
push
setb
xor
sub
in
js
sub
cwtl
inc
test
lock
mov
mov
loopne
mov
mov
sti
dec
mov
movsl
push
je
cs
and
out
ficomps
ds
mov
mov
pop
inc
cmp
call
jecxz
stc
ret
test
hlt
xor
jle
dec
sub
les
mov
fcompp
sbb
mov
cmpsb
xchg
ret
shl
popf
imul
mov
jo
cmpsl
adc
push
outsb
sub
xchg
pop
testl
int
jge
xlat
out
mov
aaa
icebp
in
daa
leave
pop
btc
inc
push
dec
jae
sbb
gs
and
inc
into
mov
cmp
or
sarb
mov
pop
andb
sub
mov
jne
enter
dec
xchg
or
jo
repz
mov
pop
loope
bound
aad
pop
cmpsb
mov
and
stos
rcrb
test
mov
pushf
sub
lods
sub
in
out
jle
int
imul
jp
faddl
sub
lahf
arpl
roll
sub
mov
sub
push
xchg
mov
std
adc
cwtl
es
call
jne
and
mov
leave
jecxz
mov
mov
pop
mov
add
mov
mov
iret
jnp
or
dec
addr16
sbb
mov
lock
mov
xlat
cmp
call
cmp
mov
mov
mov
rcll
xor
cmp
and
js
mov
jle
fsubrl
fimull
jg
fstp
cmc
lock
adc
inc
aam
jb
jge
inc
dec
lods
out
adc
cmpb
jnp
incb
pop
xchg
repnz
hlt
add
fwait
subb
in
cmpsb
call
or
cmpb
xchg
push
pop
xchg
inc
pop
cmpsl
jo
sub
mov
roll
mov
mov
xchg
mov
popf
stos
or
loope
cltd
inc
pop
sti
lret
mov
xor
mov
imul
sub
mov
and
sub
mov
push
lea
jb
pop
push
cwtl
lahf
xchg
insl
add
bound
fwait
mov
movsl
mov
adc
jge
and
pop
cmpl
pop
mov
mov
xor
iret
dec
pop
cmp
call
loop
movsb
mov
outsb
inc
inc
dec
stos
jge
adc
cmp
loope
lods
out
outsb
shrl
mov
jmp
gs
nop
cltd
cld
sbb
adc
test
jno
cli
repz
push
imul
or
mov
inc
pop
lds
and
ja
push
and
dec
les
scas
push
cmp
pop
aaa
adc
mov
cmp
data16
jl
jo
popf
lahf
and
mov
insb
dec
push
stos
andl
or
fidivl
jno
repz
out
jb
mov
mov
push
push
popa
mov
pop
fcomip
inc
cwtd
movsl
out
sbb
fwait
and
xor
dec
sbb
jg
in
push
push
cmpsl
add
jmp
or
pop
es
rorb
and
in
jmp
jge
xchg
fcmovu
jp
xchg
sub
mov
push
xchg
shl
xor
mov
and
adcl
rorb
cmpsb
aam
lods
mov
adc
imul
addr16
inc
mov
mov
sarb
push
sbb
das
jnp
fwait
setge
fs
mov
or
fcoms
xor
sbb
loopne
xchg
test
mov
test
loope
arpl
push
call
jle
mov
and
mov
loope
inc
push
aas
in
pop
popf
adc
nop
ja
jmp
jl
ret
fwait
test
xor
xor
int3
das
mov
sbb
adc
aam
lahf
push
jp
adcb
outsl
pop
fisubrl
das
loope
jecxz
imul
inc
mov
sub
and
sbb
sub
gs
sbb
push
push
popf
or
insl
sub
in
dec
mov
into
in
xchg
idivb
cmp
fdivr
scas
jb
jo
faddl
dec
ret
mull
and
mov
mov
cmpsl
dec
ljmp
repz
rcrl
cmp
push
mov
jb
sti
mov
push
mov
and
push
mov
inc
jae
push
pop
stos
add
out
imul
clc
ja
xor
inc
mov
inc
stc
push
xchg
dec
test
dec
or
or
cs
out
sbb
push
and
fnstsw
pop
xchg
mov
pop
sbb
es
mov
mov
cmp
jbe
dec
test
lods
lret
ror
andb
push
sbb
xor
jne
mov
adc
das
inc
xchg
and
roll
insl
inc
dec
sub
fisttps
sub
or
xchg
lods
pushf
jo
loop
fimuls
mov
push
mov
xor
jo
mov
les
repz
gs
push
jmp
xlat
lods
or
mov
jp
cmp
js,pt
mov
stos
int3
mov
dec
mov
pop
mov
fs
and
or
mov
and
inc
xchg
jmp
mov
sub
pop
add
inc
lcall
cli
cli
lds
std
pop
mov
adc
test
push
data16
xor
pop
pop
mov
push
inc
js
nop
out
imul
test
jns
movsb
add
pop
xor
inc
push
push
inc
popa
jb
bound
mov
mov
loope
icebp
loop
adc
add
xor
and
push
inc
popa
jb
bound
mov
mov
loope
icebp
loop
adc
dec
and
and
push
ljmp
xchg
andb
rol
loope
repz
adc
add
xor
and
push
inc
loope
icebp
bound
outsb
sub
mov
aad
pop
pop
cmp
stc
push
jmp
bound
pop
test
jp
imul
out
repnz
or
fnstenv
bound
xor
ret
dec
loop
loopne
sbbb
or
fldcw
jp
or
cmp
dec
loope
mov
cmp
pop
negb
pusha
int
push
mov
fsts
mov
ret
jb
add
mov
inc
push
testb
push
or
dec
dec
fistl
jnp
xor
int
ffree
sub
mov
outsb
repnz
dec
inc
pop
pop
push
into
subl
inc
cmpb
add
jg
sarb
cwtl
int3
sbb
lcall
mov
rcll
push
adc
inc
mov
mov
scas
sub
loope
xorb
lea
inc
rorb
dec
js
popa
cmp
imul
adc
jecxz
ss
cmp
mov
and
fidivs
jmp
bound
xor
ficompl
dec
sti
cmp
or
lahf
pop
popl
fcoml
arpl
pop
or
ret
or
mov
fnstsw
cmp
or
faddl
adc
cmpsb
push
cmpsl
and
dec
loopne
loop
xorb
sahf
push
jmp
daa
cld
and
and
imul
cmp
or
fnstenv
bound
xor
ret
dec
loop
xchg
sub
stc
push
mov
cmc
mov
imul
mov
mov
arpl
inc
and
dec
int3
xor
lret
leave
aas
negl
mov
outsb
das
es
rclb
or
pop
mov
pop
sahf
loopne
icebp
fwait
nop
into
sub
xchg
jle
xchg
or
mov
sbb
repnz
lds
sub
je
xor
or
in
push
cli
aad
repz
jl
and
cmp
bound
mov
xchg
adc
jno
popa
pop
leave
sbb
dec
jecxz
xorl
jg
jmp
push
test
sbb
ss
xchg
arpl
clc
outsl
mov
push
cmp
out
jle
inc
pop
mov
pop
aam
xor
add
cmpsl
dec
jno
push
cmc
shlb
mov
pop
mov
mov
xor
insb
out
sbb
jb
stos
mov
mov
clc
test
mov
cmp
or
shr
lret
nop
jl
or
lret
jp
jge
aas
repnz
std
notb
insw
fdivrl
cmpsb
or
in
cmpsl
hlt
or
imul
xchg
inc
jge
lds
add
lret
add
cmpsl
pop
pop
repnz
int3
xor
sub
sbb
mov
popa
cmp
mov
add
lock
xchg
sbbl
in
fwait
push
ja
push
sub
dec
es
dec
fsub
cmp
and
stc
aaa
jo
out
xor
jns
xor
popa
arpl
cmp
xchg
push
out
sbb
mov
lock
iret
push
arpl
adc
or
fs
data16
lcall
adc
pop
jmp
stos
bound
test
ljmp
adc
test
jne
test
lcall
jae
shl
inc
push
movsb
cmpsl
fsubl
mov
pop
xchg
push
mov
stc
xchg
leave
mov
jmp
xchg
icebp
movsb
sbb
shll
aad
push
xchg
dec
je
mov
int
fs
add
in
ret
outsl
call
xchg
repz
push
pushf
je
mov
div
cli
mull
dec
cmp
pop
add
pop
lret
out
loope
add
mov
mov
xchg
jo
shr
pop
mov
jmp
dec
xor
jge
mov
aam
fdivr
cli
pop
dec
repnz
loop
pop
inc
add
movsb
mov
out
xchg
push
adc
clc
push
ret
inc
jmp
jg
stos
enter
ret
addr16
inc
jnp
mov
fsubs
adc
sub
inc
scas
lret
jnp
stos
cmc
shlb
fdiv
sbb
int3
arpl
cld
test
in
cmpsl
pop
popa
xchg
jne
cltd
xor
jle
jb
lea
jo
pushf
pushf
jmp
repnz
call
rol
out
xchg
adc
je
sub
sbb
es
cmp
fs
movsl
inc
add
sub
pop
cmc
test
fidivrs
sti
cmp
lahf
in
jl
inc
or
and
cmp
test
jmp
cltd
ficoml
int
ret
cmp
testl
sub
aaa
repz
adc
add
iret
mov
aad
add
ficoms
lds
lods
xorl
add
or
movsb
test
fisubl
add
inc
ss
mov
testl
add
std
sub
sub
mov
addr16
inc
cmc
aam
lret
scas
jno
dec
mov
xor
xchg
inc
test
add
fstpt
pop
pop
push
sbb
fbstp
loopne
fucomi
aam
mov
cmp
enter
add
cli
in
and
pmullw
sub
hlt
mov
lahf
cmp
dec
lcall
lods
ljmp
mov
rolb
xchg
adc
push
out
jns
sub
out
or
int3
cmp
cmp
popl
enter
adc
pop
dec
push
psubb
mov
inc
fmull
mov
add
lahf
jne
mov
pushw
sbb
loope
fstl
add
dec
inc
stos
std
sbb
mull
lods
inc
int3
inc
add
adc
fidivl
cmp
std
xchg
or
int
push
mov
mov
dec
xor
mov
add
cmpsl
test
in
gs
ret
push
sbb
mov
mov
and
sbb
ss
sbb
sbb
popa
or
add
pop
lds
mov
bound
aam
jb
stos
sbb
or
mov
adc
mov
fwait
std
test
xor
push
pop
lock
jbe
dec
inc
mov
lods
and
subb
cmp
cld
std
or
and
shr
cmpsb
icebp
cmp
push
inc
and
or
movsl
aad
scas
pop
int3
cs
pusha
add
lods
xchg
stc
and
in
adc
mov
push
mov
inc
pop
fs
and
fdivrs
stos
sbb
and
cmpsb
mov
mov
test
mov
test
int3
cmc
loop
les
mov
into
lcall
shrb
cmpsl
cmpsl
js
jnp
or
lock
add
adc
jb
adc
imul
sbb
mov
dec
ja
xor
push
shrl
rcrb
xchg
gs
mov
out
outsb
or
jmp
adc
xor
sbb
cwtl
inc
jb
push
mov
pop
dec
mov
fcoms
fdivl
loopne
dec
leave
sahf
loop
mov
or
test
push
out
loope
pop
dec
mov
jle
xchg
sbbb
push
mov
testl
loop
sub
ficompl
movsb
inc
mov
les
and
fmul
aaa
cld
pop
movsl
and
adc
cmpl
pop
mov
mov
sbb
imul
xchg
fcoms
mull
mov
sahf
mov
stos
cmp
jp
add
xchg
or
icebp
sbbl
cmp
xchg
testb
je
push
int3
lock
mov
aas
sub
lret
test
jmp
jle
rcrl
in
rcrb
cmc
add
testb
and
push
jbe
jp
rcrl
loopne
pusha
mov
sub
sub
test
pop
inc
cltd
push
mov
aad
mov
in
pop
inc
jmp
lcall
aam
cmp
mov
xor
inc
insb
nop
xchg
enter
jbe
push
daa
arpl
lds
inc
punpcklwd
and
repnz
fmull
inc
inc
shl
jle
jmp
inc
out
mov
mov
pop
xchg
push
leave
mov
movsb
adc
mov
mov
cmovl
mov
js
pop
outsl
loopne
inc
call
xlat
inc
out
mov
and
push
adc
mov
ljmp
mov
fs
or
mov
adc
loopne
outsl
add
push
filds
fidivrl
cmp
push
sbb
inc
fwait
pop
mov
and
mov
add
jge
stc
push
jo
xor
fstps
jnp
pop
lods
mov
rcrl
fcmovb
push
mov
inc
cmpsl
clc
xor
jecxz
std
inc
out
leave
int3
lahf
insb
inc
push
xor
lret
add
or
test
mov
and
or
sub
ret
mov
aam
and
push
push
insb
pop
xchg
sub
pop
add
aam
pop
xchg
push
pusha
fwait
mov
fnstcw
dec
adc
pop
rcrb
sbb
daa
es
cld
sub
inc
mov
jo
sub
data16
add
out
xlat
enter
loop
mov
jno
inc
lods
packssdw
mov
push
adc
cmp
daa
cltd
fcomps
push
loop
adc
xchg
push
out
inc
inc
dec
ja
or
jecxz
lahf
xlat
ss
fsubrs
arpl
xchg
mov
inc
mov
adc
mov
sbb
sahf
cltd
xor
push
scas
jbe
aaa
push
out
add
pop
xor
and
jo
sbb
push
repz
mov
jl
jne
mov
inc
addr16
pop
je
pop
cld
dec
insb
mov
fistpll
inc
mov
xor
xchg
test
int3
outsb
add
adc
or
fdivrs
pop
repz
dec
push
lds
mov
adc
cmp
loope
and
adc
rcrb
cmp
add
or
idivb
movsl
dec
mov
and
mov
and
pop
sub
out
adc
xlat
pop
xlat
sub
repnz
sub
mov
test
inc
push
daa
stos
sarb
lahf
fcompl
frstor
dec
nop
popf
pop
test
push
ds
cs
popa
repnz
ja
adcl
xor
mov
gs
int
sti
jg
xchg
mov
cmp
loope
and
test
hlt
mov
adc
cmpsb
sub
ret
xor
outsw
and
adc
mov
or
ss
mov
mov
mov
fwait
cli
or
pop
cmp
in
bound
pop
mov
ljmp
enter
ss
jp
ret
lds
adc
test
stos
lret
cmpsl
pop
mov
dec
add
rcrl
jge
lahf
and
stc
or
jns
cmp
dec
dec
lea
dec
lcall
mov
fimull
push
fistps
nop
subb
rcrl
mov
call
pop
insb
mov
jmp
dec
mov
lock
and
in
ss
jmp
inc
test
mov
fistpll
inc
mov
sub
xor
shrb
stos
sbb
and
cmp
sbb
fadds
shl
rorl
out
test
test
popa
push
in
dec
jns
xchg
loop
push
mov
xor
mov
jbe
int3
push
pushf
cmc
int
inc
mov
pop
ret
lds
icebp
pop
and
or
xor
dec
sar
out
sub
ss
or
cmpsl
push
fsubp
push
iret
xchg
xchg
mov
sbb
xor
negl
push
repnz
xrelease
divb
js
and
jo
movsb
mov
mov
jp
add
jno
ja
test
leave
out
add
push
xor
jbe
stc
dec
ljmp
mov
in
inc
dec
imul
addb
bound
lods
push
ret
test
jae
clc
push
test
ss
jle
pop
mov
mov
mov
push
outsb
inc
pop
adc
and
cwtl
arpl
add
mov
jns
sti
hlt
cwtl
inc
arpl
lcall
xchg
mov
cltd
imul
jne
sub
call
mov
hlt
adc
dec
fwait
mov
sbb
rol
xor
add
jle
mov
in
rcrl
sub
ret
cmp
sbb
aas
cmpsb
call
xchg
testl
cli
adc
mov
jbe
push
jecxz
pop
fimull
sbb
add
movsl
rol
rcrl
ljmp
jmp
fwait
sarb
inc
js
dec
xor
mov
les
arpl
rcll
les
cmp
test
inc
cmp
cld
test
aaa
sub
hlt
cmp
dec
loope
xchg
movsl
cwtl
xor
dec
int3
pop
inc
adc
movsb
and
sbb
ljmp
and
ja
sub
push
rcl
and
sub
mov
mov
xlat
pop
xlat
scas
mov
in
stos
sti
pop
jmp
rcrb
mov
bound
jo
or
inc
sarl
repz
jecxz
mov
scas
repz
sbb
adc
out
sub
std
scas
jg
sbb
pop
mov
mov
inc
pop
mov
test
orb
ficoml
arpl
jle
stos
and
aad
enter
ss
daa
xchg
dec
and
shlb
fstps
xorb
fwait
xor
lret
inc
pop
jb
and
adc
add
jl
lea
rcrl
stc
adc
lods
andb
mov
ljmp
dec
aad
xchg
push
mov
lret
dec
pop
in
in
cmpsl
ret
push
mov
aaa
jno
lahf
cs
stos
add
aas
addb
subl
jbe
inc
test
inc
mov
pop
aam
rol
scas
in
and
xchg
or
fdivr
or
add
dec
cld
mov
sbb
jge
test
out
das
cmp
or
mov
out
sub
lds
in
pop
insb
sub
ret
stos
cmpb
insb
or
insb
sub
jge
sbb
lds
cmpsb
adc
cmpl
mov
movsb
inc
xchg
mov
fsubrl
subb
iret
xor
dec
outsl
addl
mov
mov
mov
cmp
and
lsl
pop
mov
aas
inc
stc
or
or
std
rcr
arpl
mov
movb
jp
xchg
fs
sub
pop
jo
xor
mov
cwtl
xor
lahf
mov
adc
dec
lods
mov
adc
clc
aaa
inc
adc
dec
jbe
xchg
jl
adc
mov
iret
sub
push
jmp
sbb
adc
pop
clc
and
mov
jne
or
or
add
push
jno
rcrb
inc
cmc
test
pop
or
cltd
pop
pop
lock
sbb
add
imul
add
sub
push
cmpsl
leave
adcl
mov
add
rcrl
inc
or
pop
lahf
pop
inc
cmp
push
or
sbb
movsl
loope
xchg
push
xor
xchg
shl
sarb
xor
in
xchg
sbb
ret
add
xchg
sub
pop
cld
lret
or
jb
aas
inc
aad
sub
jno
iret
fldl
pop
cmpsl
mov
iret
push
repnz
out
cwtl
in
pop
in
jbe
push
in
popa
popa
mov
and
add
xchg
push
sbb
je
jne
aas
mov
stos
xchg
inc
push
mov
sbb
adc
imul
inc
xchg
push
aam
dec
and
in
aad
cs
aas
test
out
pop
pop
sub
pop
sub
ror
out
pop
mov
lret
mov
inc
out
inc
adc
lods
xchg
lahf
bnd
imul
fistps
lock
lahf
mov
in
and
or
jge
enter
frndint
cmpsb
insb
pop
and
and
repz
data16
sub
and
aas
pushw
sbb
pop
lahf
add
mov
sbb
mov
jg
js
sbb
mov
xchg
and
xor
xchg
xchg
xchg
dec
push
enter
addl
xchg
dec
xor
pop
and
dec
mov
mov
ds
iret
jbe
adc
orb
push
subb
in
jmp
xor
sub
insb
out
pop
pop
xchg
shrb
xor
push
push
inc
sbb
jbe
imul
aaa
lret
mov
fistps
or
mov
fsts
push
daa
cmp
add
xor
cmp
adc
shll
fsub
jne
out
outsl
mov
inc
fiaddl
mov
push
test
and
dec
inc
sbb
outsl
movsl
gs
movsl
outsl
cltd
dec
adc
sbb
movsb
inc
popf
sub
insl
loopne
adc
adc
cli
push
xchg
daa
stos
xlat
mov
enter
mov
dec
pextrw
je
pop
fwait
mov
mov
adc
jp
jo
push
sub
rorl
sub
lods
and
lret
fsubrs
je
and
outsl
mov
fmull
jae
out
lcall
lcall
daa
xchg
cmpb
mov
imul
pop
xchg
or
mov
sbb
cs
ljmp
mov
mov
cmp
jg
lods
ja
inc
popa
popf
pop
insl
xchg
push
aad
cmp
imul
jnp
add
and
push
mov
daa
lods
or
pop
test
int
sahf
pushf
sub
aas
mov
subb
mov
mov
mov
rcrl
and
lea
std
sbb
jmp
sub
or
mov
xchg
push
cmp
pop
leave
mov
pop
kxnorb
dec
test
lds
nop
scas
sahf
fwait
das
pop
lods
inc
dec
jp
fs
cmpsb
std
xchg
nop
lods
sbb
dec
cmc
sbb
jl
or
in
les
adc
mov
mov
aaa
jne
mov
add
jmp
je
in
inc
sub
xchg
faddl
insl
cs
fsubrp
movsb
adc
stos
jb
stc
scas
add
test
push
shll
and
movsl
cmp
repz
sarl
fisubrs
cmp
out
movsl
dec
jnp
pop
sub
fs
xor
mov
fistps
mov
jnp
fisttpll
sbb
inc
mov
loopne
mov
mov
pop
ljmp
iret
jo
lods
dec
pop
std
shll
and
mov
bound
push
lret
out
dec
fwait
das
sub
push
jmp
mov
sub
inc
and
inc
pop
rcll
sub
ficompl
xchg
mov
jge
fwait
popa
adc
pushf
fwait
repz
cwtl
pop
xchg
mov
push
push
arpl
jge
mov
xlat
add
mov
jo
mov
dec
mov
cmp
jp
sti
js
ja
arpl
lods
pop
dec
jmp
push
xchg
fnstcw
bound
xchg
loope
imul
lahf
pushf
or
lds
fstcw
xchg
sbb
js
vpsrlw
out
jno
in
movsl
out
pop
push
mov
dec
mov
ljmp
cltd
int
daa
jne
mov
lret
sub
lods
sub
jge
sbbb
notl
adc
test
inc
jecxz
mov
mov
mov
call
pusha
mov
outsb
sbb
add
testb
bound
sub
aam
loopne
cmp
mov
push
mov
xor
dec
xchg
dec
jge
repz
pop
jecxz
dec
mov
sbbb
out
add
add
sbb
inc
jae
test
pop
sbb
std
out
jle
mov
in
lcall
cmp
rolb
push
xchg
pop
mov
fdivrs
adc
mov
pop
inc
insl
mull
rcrb
dec
aad
xor
daa
ss
stos
and
inc
stc
or
push
mov
arpl
sti
xor
insl
movsb
xor
mov
adc
test
push
or
repz
and
adc
es
jp
leave
jns
int
cltd
push
in
int
repnz
or
pop
cmp
mov
popf
pop
and
mov
cmpsb
add
imul
push
xor
or
lock
inc
mov
fstps
cld
inc
adc
sti
loopne
mov
int3
adc
cmpsl
or
loop
or
emms
fucomip
sub
push
add
pop
mov
dec
popf
lret
fcomp
jge
aad
enter
add
lret
pusha
xchg
sub
sub
rorb
cmp
inc
in
loope
push
xor
xlat
xor
dec
pop
jmp
xchg
repz
mov
addr16
push
jle
ljmp
movsl
hlt
vmovdqu
inc
and
and
aas
movd
pop
xchg
pop
mov
imul
adc
sbb
push
fwait
cmp
add
decb
jecxz
in
sbb
add
and
loop
sub
mov
jecxz
pop
movsb
cmp
scas
xlat
push
rclb
push
fwait
testb
movsl
test
mov
pop
cld
cwtl
mov
dec
enter
mov
jns
xor
sub
shl
cmc
xchg
test
sub
sub
lret
or
test
stos
pop
scas
push
pop
mov
mov
hlt
mov
out
clc
in
cmpl
jns
xchg
inc
fwait
adc
aas
jecxz
das
test
adc
xchg
mov
cwtl
aas
out
cmc
ss
pop
pop
fisubrs
mov
enter
pop
mov
ret
in
or
push
add
pop
cmp
out
fs
sarb
les
scas
mov
xchg
mov
adc
jle
jp
imul
idivl
out
pop
sbb
pop
cmp
xor
repnz
sbb
test
scas
in
pop
sbb
insb
mov
push
je
movsl
cmp
scas
lret
lock
bound
test
out
sbb
outsl
and
mov
rcrl
ret
in
aaa
dec
shrb
fs
dec
addr16
and
sbb
push
or
jmp
pop
add
int
inc
int3
sub
fwait
das
fs
insb
mov
cmc
adc
iret
or
adc
jl
cld
pop
cmpsl
inc
out
leave
bound
xor
ret
dec
loop
xchg
sub
stc
push
jmp
bound
xor
ret
dec
loop
xchg
sub
stc
push
jmp
bound
xor
ret
dec
out
xchg
sub
stc
push
jmp
bound
xor
loop
rclb
xchg
dec
sbb
fisttpll
pop
add
jle
push
jb
sub
adcb
mov
scas
jecxz
jecxz
adc
add
jle
push
push
push
inc
jae,pn
arpl
xchg
fiadds
into
mov
adc
or
adc
pop
xor
jns
jo
mov
in
in
lods
cli
movsl
loop
and
adc
inc
pop
test
mov
adc
or
cmp
mov
out
mov
sahf
mov
cmp
stos
imul
mov
scas
repz
scas
mov
sbb
add
or
inc
sti
paddd
sahf
ret
fcmovnb
or
xchg
inc
add
jae
adc
ds
iret
ret
fidivrs
add
sahf
cmp
jns
mov
int3
jecxz
bnd
mov
out
push
pop
sub
mov
dec
push
repz
mov
ret
jecxz
xor
mov
std
xchg
ficoml
add
mov
adc
and
ljmp
jp
mov
stos
into
mov
pushf
repz
add
xor
and
jo
pop
pop
ds
into
cli
sti
mov
fwait
int3
cld
mov
fisttpl
sbb
pop
and
fistl
imul
ljmp
mull
incl
rsqrtps
inc
jae,pn
arpl
xchg
fiadds
mov
sahf
ret
scas
repz
add
jle
push
push
push
inc
jae,pn
arpl
xchg
fiadds
mov
sahf
ret
scas
repz
test
mulb
inc
iret
pushf
mov
cmp
scas
adc
sbb
daa
mov
subl
sbb
movsb
add
xor
test
lods
mov
dec
iret
data16
ljmp
popf
jb
mov
or
jns
mov
dec
and
dec
dec
ljmp
dec
out
lahf
ljmp
xchg
adc
out
ret
mov
mov
jbe
loop
lcall
fstpt
mov
push
sub
xor
les
push
scas
sahf
test
sub
ret
clc
lahf
xor
sub
mov
test
xchg
mov
out
sub
mov
lret
mov
insl
cmp
aaa
repnz
push
iret
jmp
mov
adc
push
lahf
mov
in
test
adc
stos
nop
jae
xchg
sti
fisubrs
sub
inc
jg
bound
dec
jmp
xlat
xor
xchg
sbb
xor
cmp
push
cltd
mov
repz
inc
out
mov
mov
arpl
and
arpl
enter
push
cltd
sub
jmp
loopne
push
pop
pop
bound
push
test
ds
nop
add
and
jae
in
inc
cmpsb
shll
or
mov
sub
test
ljmp
and
sbb
je
dec
jo
jns
inc
shlb
cwtl
adc
bound
sub
inc
add
ror
add
pop
push
inc
negb
pushl
adc
mov
push
fsub
ss
testl
lret
push
mov
and
imul
mov
sub
jmp
xchg
outsb
aad
inc
jbe
fs
xchg
arpl
mov
dec
stos
sahf
ficompl
xchg
aaa
sub
adc
mov
divb
adc
cli
lcall
inc
lods
test
and
sbb
adc
cmpsl
mov
jmp
jmp
mov
pop
mov
movsl
push
push
loopne
stc
push
les
jmp
xor
dec
cmpsb
aaa
dec
cmpsb
mov
push
push
xrelease
popa
xchg
lcall
test
in
adc
mov
sqrtps
xchg
mov
push
test
dec
in
mov
stos
dec
xchg
icebp
xchg
es
jnp
aas
movsl
lcall
das
daa
dec
mov
aas
jnp
cmp
xchg
fs
push
enter
lock
mov
mov
inc
sahf
sbb
outsb
push
bound
out
mov
cmpsl
bound
popf
adc
and
sub
pop
xor
outsl
sti
test
xor
loope
in
out
sar
mov
push
jecxz
pop
inc
scas
xchg
xchg
imul
mov
cmp
or
adc
mov
push
cli
cmp
pop
mov
in
in
gs
loopne
out
mov
scas
xchg
mov
lahf
lret
repz
xor
pop
fadds
out
jmp
pop
fimuls
arpl
test
js
popa
lock
jbe
push
xor
clc
pop
mov
cmp
enter
fcompl
and
mov
jecxz
jno
pop
jne
push
int
test
rolb
xor
adc
andl
imul
mov
out
pop
in
int3
test
clc
mov
mov
inc
push
pop
dec
mov
sbb
mov
dec
or
sub
mov
adc
rcr
test
rcr
and
xchg
stos
lds
push
es
bnd
decb
xchg
pop
sbb
fsts
xor
cmpsl
lahf
cld
sarl
xor
mov
push
pop
scas
adc
ja
adc
scas
dec
jmp
xor
sbbl
jo
ljmp
or
sub
in
das
dec
cltd
jp
mov
jne
mov
mov
je
pushf
fldl
xor
aas
adc
lods
int
xchg
inc
test
aam
cmpsb
xor
and
not
mov
inc
ljmp
mov
dec
jmp
rolb
lea
fldenv
xchg
mov
mov
jb
insb
cmpl
lea
inc
aam
pop
push
insl
mov
movsl
sub
icebp
or
pop
and
mov
jl
sbb
xor
movsl
pmaddwd
in
jp
xor
fwait
pop
clc
add
in
xor
sarb
sbb
sbb
mov
cmpsb
in
in
movsl
stc
cltd
push
xor
xchg
rorl
outsl
xor
mov
and
mov
adc
arpl
fistpll
add
rcrb
mov
cwtl
mov
loope
in
outsb
xor
stos
push
in
jecxz
adc
push
arpl
bound
adc
jg
push
cmp
movb
push
sub
out
xchg
loopne
sbb
repz
in
add
push
mov
inc
je
aas
mov
idivb
lcall
insl
add
dec
das
aas
xor
xchg
out
xor
stc
dec
inc
jae
push
imul
pop
pusha
pop
mov
mulb
cld
js
incb
inc
mov
push
adc
inc
jmp
mov
sub
mov
push
nop
mov
pop
pop
in
cltd
flds
adc
addr16
push
adc
pop
js
cltd
pop
lock
cmp
push
test
stc
inc
sub
dec
fbstp
insb
cmp
stc
mov
cmpsl
insl
lahf
imul
test
pop
jae
and
cmp
fisubl
add
mov
fdivl
xor
mov
lret
lods
lret
mov
cltd
ljmp
mov
test
inc
push
mov
ds
js
outsb
xorb
aam
xchg
mov
inc
dec
es
or
adc
fcmovnb
cld
subb
scas
add
mov
aam
xlat
sbb
andl
jne
mov
dec
push
jno
movsl
ret
xor
xor
add
mov
lods
mov
cmp
or
std
fsubrl
and
or
sub
mov
pop
xor
mov
push
push
or
push
scas
cmp
xchg
pop
popf
xchg
push
movsl
sub
push
mov
es
jle
hlt
push
aam
test
imul
and
or
mov
xchg
mov
scas
add
das
sbb
bound
push
fistpll
xchg
xlat
inc
cwtl
stc
inc
jl
into
cmp
jns
jb
mov
stc
add
jge
orb
pop
mov
dec
sarb
dec
pop
add
and
dec
clc
add
sbb
jno
sub
shrb
sbb
out
lock
xchg
rorb
movsb
in
nop
add
lret
das
lcall
cwtl
add
sub
arpl
ss
mov
dec
mov
adc
fwait
ret
sbb
cmp
loopne
or
call
int3
push
xor
dec
bts
out
jmp
int
push
lea
mov
ljmp
mov
push
shl
shl
leave
adcl
out
out
sbbb
out
adc
inc
stos
dec
xor
push
stos
and
lock
lret
or
mov
inc
clc
int
and
sbb
dec
icebp
jb
xchg
int3
sub
insl
add
jnp
repnz
daa
nop
mov
dec
mov
push
add
inc
inc
push
inc
mov
into
aas
sub
aaa
stc
add
subl
push
mov
and
add
lret
std
decb
adcl
pop
addl
std
out
cwtl
ffreep
add
test
and
pop
and
insl
daa
fidivrl
push
jmp
push
push
mov
push
mov
mov
inc
push
mov
shl
aas
js
push
and
leave
mov
jns
arpl
mov
jle
subl
movsl
xor
xor
data16
adc
xor
mov
jmp
sbb
data16
movsb
or
sarl
in
adc
in
cwtl
int3
call
test
dec
dec
test
cwtl
scas
dec
xchg
mov
or
lock
leave
out
inc
or
cli
es
loopne
xchg
incl
out
add
xchg
or
dec
add
xor
fmull
jne
cmc
fidivrs
lahf
and
scas
sub
out
mov
out
dec
dec
shlb
or
inc
lea
jmp
add
fwait
jns
push
dec
fstpl
test
ljmp
enter
shll
xor
xor
adc
int3
in
hlt
ss
mov
add
enter
std
icebp
add
dec
rcrb
fbstp
adc
sbb
lods
subl
push
cmp
mov
xchg
xor
out
push
push
rcl
mov
inc
ds
xor
lahf
aad
add
int3
rorl
push
jge
push
out
push
cmp
mov
cmp
dec
icebp
xor
mov
push
mov
aam
lods
fidivrl
and
lahf
cmp
frstor
pop
sbb
lcall
adc
jbe
outsb
mov
push
mov
mov
out
inc
lea
push
nop
stos
cmp
push
mov
pop
push
sbb
mov
shll
jp
jp
call
cmpsl
cli
outsb
aad
mov
xor
in
push
popa
and
pushf
xor
xor
mov
sahf
call
ds
cltd
test
mov
test
arpl
mov
data16
stc
xchg
push
icebp
mov
cmpsl
imul
dec
dec
xor
mov
mov
jnp
dec
adc
call
cwtl
jmp
adc
xchg
xor
cld
mov
mov
loop
xchg
ljmp
sub
cmp
adc
js
movsb
pop
lcall
es
adc
mov
jmp
mov
in
fldpi
jno
xchg
fs
inc
aaa
lods
lods
jmp
adc
pop
and
pop
xor
enter
or
and
adc
xchg
mov
mov
cmp
das
pmulhw
or
mov
icebp
nop
and
lret
jbe
mov
loop
js
cli
jp
movl
test
fimull
test
int
lock
call
fcoml
push
std
jbe
sti
xor
push
nop
push
mov
add
sub
cmp
mov
xchg
and
cmpsb
or
notl
in
mov
jno
adc
pop
sbb
xchg
mov
xlat
push
std
pop
out
aaa
das
and
popa
cmp
and
mov
loope
xor
push
popa
sbb
push
aad
loop
lods
jne
scas
push
push
or
dec
stos
adc
jbe
mov
inc
imul
pop
mov
inc
popa
outsl
addr16
sbb
cs
jb
int
adc
mov
add
iret
pop
and
stos
mov
inc
jae
jb
jb
and
ss
adc
js
aaa
push
push
inc
xor
outsl
pop
popa
adc
cli
xchg
leave
mov
test
sub
sahf
pop
ss
xchg
jp
test
insl
aaa
movsl
movsb
outsb
add
mov
fwait
sbb
inc
sub
scas
dec
popa
inc
loop
rolb
inc
sub
push
mov
cmp
in
outsb
test
push
xchg
add
jg
movsl
lret
lret
test
insb
lret
sbb
in
or
jle
iret
mov
in
mov
pop
cmpsl
xor
lock
mov
push
mov
push
xchg
lret
xlat
cmpb
jecxz
popf
jp
or
jge
mov
cmp
rorb
cmpsb
adc
and
inc
popa
mov
repz
inc
popf
outsl
sarl
add
cmpsb
xchg
and
popf
adc
jecxz
mov
inc
aad
js
cs
mov
cmp
jl
add
adc
mov
or
test
mov
push
add
jl
pushf
loope
popf
addr16
push
inc
fbld
icebp
mov
lods
int
addr16
ss
int
mov
push
add
jecxz
mov
push
push
jae
adc
sbb
rolb
cmp
push
mov
imul
push
inc
mov
mov
sub
pop
adc
call
add
das
jmp
and
pop
ror
loopne
sbb
push
scas
addr16
jp
or
out
sub
movsb
jmp
imul
jns
adc
leave
xor
cmp
pop
scas
mov
je
mov
xor
scas
sbb
cs
xchg
pop
in
inc
add
push
mov
lods
ja
stc
jns
rclb
insb
add
push
roll
rol
xor
add
insl
test
test
push
outsl
mov
mov
cmpl
cmpl
xchg
jle
jns
cmpsl
push
lcall
mov
sub
or
cwtl
test
rcll
pop
or
nop
push
aas
mov
cmpsl
mov
lods
int3
adc
popa
jbe
push
mov
outsl
or
xchg
dec
aad
mov
lret
hlt
mov
sub
push
pop
outsb
pop
mov
xchg
mull
mov
arpl
pusha
into
jns
fisubs
aaa
cmp
scas
loop
aad
popa
xlat
mov
or
loope
push
or
xchg
outsb
cmp
jecxz
into
sbb
enter
sbb
rorb
mov
mov
popl
les
mov
sbb
insb
sub
jb
mov
adc
inc
xor
jl
xchg
call
add
inc
jl
mov
mov
push
ficoms
adc
or
fdivl
add
and
push
cmc
sti
sbb
scas
jns
sti
stos
and
data16
iret
add
shlw
pop
ljmp
and
xor
outsl
out
repz
push
mov
out
ljmp
jp
icebp
push
xor
sub
cmp
rcr
inc
jg
jp
daa
xor
mov
cld
fisttpll
mov
lahf
cld
pusha
pop
mov
sub
sub
xlat
test
mov
inc
cmp
imul
cmp
lea
sbb
xchg
clc
push
adc
test
sbb
xchg
mov
andb
pushf
lock
andl
xor
repz
jl
out
xchg
mov
out
sbb
cmp
fisubs
xor
iret
xchg
add
stos
lods
add
lahf
fbstp
test
mov
ret
cmp
fcoml
mov
jbe
push
add
int
mov
mov
mov
sarl
sbb
add
push
xchg
cmp
add
xor
sbb
pop
push
sub
xchg
ret
fwait
pop
loope
cmp
pop
add
sub
sbb
push
fidivl
pop
data16
xchg
sar
dec
fdivr
stos
xchg
movsb
mov
push
inc
loopne
scas
push
xor
hlt
mov
sub
mov
lcall
cli
cmpsl
call
mov
fisubrl
das
jecxz
fs
je
add
xchg
mov
add
add
fwait
xor
cmpsl
jl
push
ds
stos
jnp
insl
push
mov
cmp
jecxz
shl
push
push
mov
xor
inc
fs
and
imul
out
inc
shlb
aaa
mov
into
sbb
sbb
aas
addr16
and
lods
sub
or
pop
daa
repnz
fs
enter
mov
das
aaa
int
hlt
lea
out
adc
sub
xlat
sub
pop
mov
sarb
adc
push
xchg
push
or
hlt
xor
jbe
mov
mov
inc
push
mov
xor
or
mov
ret
sbb
sti
and
xchg
incl
dec
addr16
sbb
and
mov
mov
adc
xchg
xchg
lcall
sub
mov
cmpsl
out
xor
rcl
and
mov
push
mov
sub
std
ficoml
lret
dec
popa
xchg
mov
push
mov
and
jbe
mov
pop
xchg
or
mov
fbstp
imul
lds
imul
adc
cmovne
xchg
dec
cmc
add
incl
subb
je
xor
adc
fwait
test
xchg
lods
cltd
iret
daa
mov
sbb
stc
les
outsb
sahf
cmp
clc
xchg
out
dec
scas
jle
sbb
fs
sbb
pusha
cmp
lahf
test
jle
pop
push
jne
mov
adc
fldenv
into
jns
in
pop
insb
in
adc
loope
adc
out
lret
rolb
popa
pop
adc
mov
pop
xor
ret
notb
xchg
jnp
xchg
ljmp
jmp
sti
dec
xor
fdivs
mov
mov
decb
pop
lds
in
pop
rcl
rcl
xchg
addr16
inc
lods
mov
inc
sbbl
adc
xor
lret
and
mov
stos
mov
xor
call
aaa
inc
mov
or
push
hlt
sub
jb
sbb
push
dec
add
xlat
mov
inc
dec
insl
iret
mov
cmp
xor
mov
add
cmp
inc
mov
data16
push
sbb
ds
xchg
dec
push
fidivl
push
or
js
iret
and
lods
pop
pop
dec
push
xor
int
ss
mov
jmp
sti
xchg
das
adc
or
cmp
mov
adc
push
daa
push
mov
sub
pushf
sbbl
dec
sub
test
ds
jecxz
sub
mov
jae
push
push
fdivl
adc
mov
movsl
out
rcrl
cmc
mov
stos
idivl
mov
imul
cmp
aaa
pusha
fdivrl
dec
mov
push
push
jns
xor
mov
movsl
iret
inc
mov
sbb
popa
and
jecxz
addr16
addr16
mov
stc
add
clc
pop
sub
add
dec
int
pushl
adc
aam
stos
mov
push
and
cmp
cmpsb
addr16
imul
sub
stc
fdiv
mov
rorl
inc
push
pushf
imul
testl
push
aas
bound
in
outsb
out
dec
mov
ljmp
inc
adc
mov
jge
cld
jge
aad
pop
jb
adc
push
jbe
in
arpl
mov
mov
mov
ja
loope
mov
leave
mov
and
dec
ds
cmpsl
inc
rorl
and
dec
inc
add
pop
mov
leave
fisubl
jb
fs
idivl
scas
pop
fnsave
out
mov
outsb
sub
inc
pop
or
cmp
push
sbb
ja
xlat
popa
loop
and
jnp
pop
rcl
fdivrp
gs
in
shlb
mov
scas
jae
lods
cmpl
mov
insl
inc
push
inc
adc
or
fwait
xchg
sahf
jecxz
sahf
loop
test
mov
imulb
loop
push
add
mov
movsb
xchg
jne
ja
cltd
inc
sbb
sub
sub
fldl
or
and
xchg
mov
push
inc
std
mov
or
lock
mov
lods
jns
shlb
mov
sub
test
mov
loop
dec
push
ss
mov
sub
lret
push
jne
retw
jo
out
mov
push
xchg
xor
mov
mov
andl
orb
or
mov
mov
mov
dec
cltd
dec
jle
dec
jmp
push
mov
lahf
mov
adcb
inc
hlt
in
and
icebp
mov
adc
mov
lea
cmpsl
pop
and
dec
jl
adc
addb
and
push
sbb
leave
fdivrl
mov
jp
shlb
cmpsl
imul
addb
cmp
dec
xchg
insb
xchg
arpl
imul
mov
enter
sub
xchg
adc
jns
leave
and
je
adc
dec
jns
mov
out
cmp
jns
xor
int
sar
mov
ja
loop
adc
ds
mov
sbb
inc
sub
mov
cmp
fisttps
out
and
sub
pop
push
jge
push
addr16
std
cli
mov
pop
fs
pusha
rclb
xchg
xor
jge
sub
imul
cmc
ret
dec
mov
dec
fs
add
fdivrl
push
push
push
inc
jae,pn
arpl
xchg
fiadds
mov
sahf
ret
scas
repz
add
jle
push
push
push
inc
jae,pn
arpl
xchg
fiadds
mov
sahf
ret
scas
repz
add
xor
sahf
push
push
inc
jae,pn
arpl
xchg
fiadds
mov
mov
scas
repnz
jecxz
adc
add
pop
and
push
push
inc
jae,pn
arpl
xchg
and
inc
mov
aam
pop
push
cmp
or
sbb
mov
mov
test
cmp
sub
sbb
or
sub
jns
cmpl
fldpi
jmp
cmp
sub
sbb
or
cmp
dec
push
mov
jg
fsincos
xchg
jmp
fildl
lret
or
pop
or
add
dec
enter
in
dec
addr16
cmp
cli
sub
daa
sbb
sbb
mov
rorb
test
xor
es
xlat
jge
lea
rorb
int3
mov
hlt
mov
scas
mov
insb
cmp
inc
lods
test
popf
fadd
dec
dec
sti
out
push
lret
mov
aam
lcall
stos
aam
in
lahf
enter
call
or
cmp
hlt
les
pop
cmp
push
es
push
dec
jns
ss
pop
adc
and
popf
leave
jle
sub
out
cmp
pop
or
or
cltd
push
push
lcall
insb
adc
dec
icebp
vmovaps
cmp
int3
test
sub
imul
fwait
aad
leave
sti
popf
jmp
fildl
sti
cmp
or
jnp
imul
or
in
fst
int
xchg
lods
stos
cli
mov
pop
inc
jns
pop
and
aaa
adc
cli
adc
out
fwait
jb
mov
mov
lret
xor
inc
dec
dec
push
cmp
cmp
sbb
cmp
clc
decl
stc
lret
or
sbb
sub
cmp
dec
jnp
imul
dec
mov
mov
jmp
lret
or
sbb
sub
cmp
dec
jnp
imul
dec
mov
out
test
mov
mov
out
push
inc
out
fstl
cmp
stos
lret
enter
imul
sbb
mov
shrb
jmp
inc
xchg
test
jle
sub
into
fidivrl
mov
lock
mov
xchg
lret
scas
lock
add
inc
jge
jmp
loope
mov
sbb
fdiv
rcrb
add
jnp
pop
fisubl
pop
dec
push
pop
push
or
pop
sub
adc
addb
fsubl
ss
movsb
mov
stos
inc
fmuls
inc
xchg
cli
mov
std
xor
cld
jg
adc
pushf
push
jb
mov
int3
and
bound
mov
xlat
fs
inc
mov
add
sub
inc
cltd
insb
jbe
sbb
push
or
and
mov
cmp
in
cmc
shlb
xchg
fimull
daa
or
push
sub
stos
push
js
das
es
and
jmp
scas
movl
mov
stc
in
xor
sbb
insb
pushf
and
lock
hlt
and
cmp
nop
push
pop
adc
xchg
faddl
dec
mov
sbb
leave
movsb
sbb
jecxz
add
inc
mov
sbb
out
inc
sbb
dec
mov
and
in
shll
pop
xchg
fldt
imul
mov
bound
aam
pushf
xchg
sbb
cld
dec
or
mov
cmp
and
or
xlat
pop
cs
xor
xor
sub
inc
out
lods
inc
mov
dec
xchg
add
mov
mov
jbe
mov
pop
imul
sbb
xor
dec
ljmp
push
out
sbb
jne
rcl
inc
adc
adc
test
mov
xchg
xor
test
in
fwait
and
mov
sub
icebp
inc
gs
gs
cs
mov
aaa
push
repz
setl
rorb
pop
mov
insl
scas
call
enter
mov
push
sti
hlt
sbb
lods
lea
xor
inc
cs
jl
nop
pop
ret
inc
lods
lea
out
or
cltd
push
imul
xor
push
mov
lods
sbb
xor
enter
pusha
sub
xchg
out
mov
popa
jmp
adc
mov
cltd
insl
xchg
or
pop
aas
sbb
xor
pop
inc
ja
lods
add
scas
insl
and
inc
fsts
dec
jo
ds
std
sub
pop
lcall
xchg
push
jnp
mov
negb
mov
nop
mov
jecxz
scas
addl
add
add
arpl
mov
test
shl
cmp
xchg
jl
ljmp
sub
adc
insb
cmp
dec
push
pop
ss
adc
in
xchg
mov
sub
fldenv
mov
in
jno
sbb
loop
arpl
jne
dec
in
cmp
fcoml
in
pop
mov
mov
adc
in
xchg
fnsave
sbb
imul
fwait
mov
fisttps
pop
loope
mov
jb
mov
ljmp
and
pop
xor
mov
mov
lock
lcall
iret
jp
pop
shll
mov
jl
ja
sbbl
into
push
dec
mov
xchg
jecxz
popf
lods
rcl
mov
incl
lds
or
je
mov
outsb
cmp
outsl
pushf
sub
shlb
stc
enter
ss
pop
mov
dec
xchg
xor
aaa
clc
bswap
adc
negl
iret
dec
rol
test
cltd
pop
adc
lret
push
sub
std
rcrl
lahf
out
clc
cld
subb
pop
sub
jo
dec
xchg
loope
jl
mov
aam
insb
add
push
mov
mov
scas
xor
push
cwtl
mov
ficompl
mov
push
sub
fimuls
adc
cmp
mov
or
int
outsb
jne
pushf
scas
movsl
fstpt
jno
push
xorb
std
cmp
xor
subl
callw
sbb
add
and
mov
nop
jp
push
or
out
dec
jns
ret
out
push
idivb
insl
mov
sub
mov
jne
sti
push
pop
mov
test
sub
sub
mov
int3
or
mov
mov
pop
stos
out
test
cmp
xor
daa
ljmp
sbb
and
xchg
int3
cmpsb
fistl
popa
movsb
imul
or
push
xchg
es
int
rcrl
clc
fsubr
imul
lret
retw
and
cmp
je
outsb
cmp
xchg
ljmp
int
xchg
lods
decb
cmp
xchg
lods
sahf
cmpsl
clc
cmp
movsl
jmp
pop
jb
ret
cltd
lods
test
aas
iret
fs
adc
jno
mov
addb
sbb
jl
aaa
inc
sar
push
or
mov
sub
jmp
popa
adc
mov
icebp
and
test
ret
or
sbb
inc
inc
ss
sbb
mov
jns
clc
ja
loop
push
adc
pop
jmp
jmp
lods
mov
mov
ljmp
test
icebp
add
lcall
mov
adcl
sbb
push
pop
cmp
lret
add
xchg
outsl
test
add
mov
push
xor
aad
sbb
cli
adc
std
cmpb
lods
sbb
aaa
push
jns
xor
insb
gs
or
les
pusha
arpl
insb
jne
mov
rcl
sub
fistl
jne
vmwrite
adc
pop
sub
mov
mov
xor
sub
mov
push
and
mov
pop
push
mov
sahf
pusha
int
ss
adc
cmp
cmpps
mov
mov
mov
pop
in
popf
shl
andl
sub
adc
adc
cwtl
jmp
movsl
lea
dec
jb
mov
inc
pop
fsubs
lret
js
sahf
jo
push
xchg
mov
les
into
insl
mov
push
repnz
push
ret
pop
xor
push
pop
jl
xchg
cmc
fildll
inc
or
and
xchg
lock
mov
enter
lahf
insb
inc
adcb
cmpb
jmp
pop
loope
or
pop
sbb
je
xchg
in
push
or
insw
pop
inc
inc
sbb
dec
push
int3
daa
push
mov
push
sahf
adc
out
jmp
out
rorl
adc
les
test
dec
ret
insb
test
out
ja
sbb
aas
out
inc
call
in
or
xlat
xor
mov
lcall
outsl
sub
adc
sub
mov
sub
mov
aas
mov
cli
test
and
push
aaa
jb
inc
sub
mov
nop
imul
incl
mov
inc
jbe
or
push
insl
lds
aas
lret
stc
jle
sub
daa
mov
xchg
lcall
mov
mov
jp
mov
rclb
cmpsl
mov
into
fdivl
xor
mov
shrl
fisubs
lahf
sahf
jnp
hlt
and
jg
ficompl
sub
xor
jno
repz
rcrb
pop
mov
stc
dec
dec
mov
lds
jmp
pushf
and
cmp
cmpsl
test
add
mov
sahf
push
mov
xchg
xchg
lods
adc
fs
mov
in
mov
mov
dec
pushf
gs
xor
jg
cmpl
mov
adc
sub
lock
fldenv
xchg
shll
or
aad
adcb
adc
subw
dec
std
add
enter
and
stos
mov
test
push
or
jmp
out
stc
jmp
sub
cmp
shll
popa
stc
sub
push
fbld
sahf
mov
lret
sahf
popa
cmpsl
fnsave
pop
imul
cmpsb
dec
imul
bound
cli
xchg
jbe
mov
cli
shlb
stos
or
int
xchg
inc
sti
push
push
jae
inc
mov
mov
aad
aad
cli
pop
jno
fadd
push
cld
sbb
push
pop
push
mov
cmp
lret
and
xlat
je
fs
sbb
mov
add
add
mov
cld
cmc
push
sbb
popa
aaa
jp
into
dec
stos
xchg
dec
aas
lret
lods
rcrb
lods
jo
push
aaa
movsl
or
push
jo
in
les
mov
inc
in
shrl
add
jbe
loopne
lret
inc
lods
shl
enter
sub
js
test
bound
or
scas
xchg
mov
pop
xor
fldenv
adc
int3
mov
or
xor
xchg
inc
ja
fmuls
push
adc
outsl
out
xor
cmpsb
in
popa
aam
sti
sahf
test
add
push
pop
and
jb
ret
outsb
into
ret
push
pop
iret
cmp
inc
cmp
push
pop
aaa
ljmp
inc
lds
adc
pop
push
mov
jle
sbb
jmp
dec
inc
fdivl
ret
sahf
daa
into
mov
movb
pop
arpl
pop
sahf
scas
sbb
enter
cmpsl
xor
jecxz
dec
add
js
scas
mov
lock
lock
sbb
je
push
call
and
daa
cli
das
divl
pop
enter
adc
adc
test
movsb
push
int
data16
mov
jmp
roll
jns
xchg
aaa
lock
out
mov
dec
mov
pop
mov
fsub
stos
inc
push
cmp
into
call
out
or
sub
mov
push
out
fwait
cld
sub
std
push
in
orb
push
aad
mov
push
jecxz
xor
std
ret
int3
fidivrl
iret
sbb
and
mov
decl
ss
icebp
pop
daa
and
and
out
idiv
rolb
jg
scas
push
sub
xchg
sub
inc
mov
xchg
push
rclb
push
jle
lret
xor
addr16
xor
jg
test
enter
sbb
pop
xrelease
pushf
mov
push
push
mov
sbb
loop
data16
out
leave
mov
inc
mov
sbbl
xchg
loope
adc
insb
jecxz
add
ret
jnp
cmp
arpl
xor
ja
inc
xchg
mov
in
cmp
jo
xchg
icebp
sub
jns
add
cmpsb
xor
in
mov
mov
and
mov
enter
adc
inc
and
outsb
lcall
sbb
push
mov
mov
movsb
jo
and
daa
es
lock
mov
outsl
jg
cmp
jle
sub
pushl
xor
mov
pop
fnstenv
cmpsb
sti
std
sub
lds
mov
insb
xor
xchg
or
pop
data16
in
insb
jmp
dec
sub
out
aad
addr16
jns
into
sbb
inc
dec
add
sbb
jecxz
enter
test
decb
jo
mov
lock
lcall
mov
xor
mov
loop
mov
dec
and
loope
xchg
xor
mov
push
adc
shlb
out
movsl
sub
inc
mov
icebp
lcall
adc
inc
push
jbe
mov
or
in
and
data16
repnz
push
dec
jo
enter
sub
sahf
hlt
and
scas
inc
mov
mov
push
pop
mov
push
cmpsl
mov
into
testl
cmp
into
mov
mov
nop
loope
lods
movsb
push
out
fidivrs
mov
arpl
xchg
xor
push
rclb
jp
pop
nop
mov
rorl
call
push
call
in
bound
pop
push
cmpsl
fsubl
out
lcall
sbb
xchg
lods
adc
rorl
jge
jge
imulb
mov
inc
fmuls
stos
mov
mov
or
or
mov
add
fistps
pop
or
dec
jo
bound
jbe
mov
subb
sub
push
fsubr
inc
inc
pushf
dec
jae,pn
mov
scas
cmpsb
adc
repz
lcall
dec
push
ror
addr16
pop
mov
mov
imul
or
mov
mov
and
mov
push
stos
imul
mov
jp
sub
add
pop
mulb
pop
jnp
jecxz
pushf
xchg
add
lcall
xor
mov
xor
mov
dec
sub
sub
jmp
mov
in
push
cli
insb
pop
fldl
push
test
sub
cwtl
mov
les
mov
cmpsb
add
push
daa
adc
shrl
insl
xlat
cmc
hlt
adc
test
pop
dec
xchg
jp
pop
fsubl
mov
mov
sti
iret
push
xchg
jg
add
mov
push
aaa
xchg
pop
outsl
fsubrl
sub
out
add
test
xchg
mov
test
mov
in
jb
ss
jmp
outsb
or
mov
mov
ds
mov
add
clc
or
in
mov
add
or
mov
xchg
dec
mov
rol
add
xor
ret
push
push
mov
and
test
ret
push
in
rorl
sbb
jmp
cmp
movsl
push
xchg
cmpsb
imul
lret
xor
cmp
inc
mov
jmp
push
sahf
sahf
daa
sub
xlat
andb
push
clc
loop
movsl
inc
xor
fwait
dec
movsb
sarb
jne
inc
mov
mov
and
fmuls
loop
xor
out
movb
add
jecxz
adc
repnz
js
cs
push
lcall
neg
cmc
or
ror
sub
ja
int
push
push
cwtl
clc
jae
push
mov
jl
pop
repnz
inc
lds
fs
insl
mov
push
into
sbb
arpl
pushf
adc
sbb
mov
jmp
adc
pop
and
mov
adc
sbbb
rorb
notl
and
loopne
cmpsl
sub
bound
mov
xchg
sbb
fs
mov
jb
popa
inc
pop
xorb
jnp
in
outsl
clc
ja
stos
enter
pop
clc
mov
test
xchg
outsb
jae
int3
out
and
pop
xor
hlt
clc
and
mov
stos
and
test
pusha
stos
frstor
out
mov
jne
iret
icebp
dec
jl
sub
xor
inc
into
int
push
pop
andb
dec
inc
scas
mov
xlat
push
xor
stos
stos
neg
daa
push
lret
jo
mov
sarl
xchg
inc
cmpsb
adc
arpl
sub
adc
clc
pop
xchg
xchg
or
pusha
test
jp
loope
ds
or
sub
test
push
and
and
add
inc
push
sub
push
insb
dec
cmp
fdivs
and
pop
and
pop
jne
pop
sub
mov
in
movsl
push
jne
jae
nop
pop
cld
add
sub
or
dec
xor
jb
pop
popl
mov
fsubs
inc
add
jg
and
mull
push
test
cmp
xor
rorb
xor
jne
scas
ror
jle
pop
fsubl
test
dec
add
cmc
insb
cmp
and
push
push
cmpsl
mov
push
cmp
dec
lock
jae
ljmp
xor
push
jl
mov
aam
cmpl
sbb
in
mov
jne
outsb
pop
push
and
call
xchg
cmpsl
pop
cmp
aaa
xor
add
or
sbb
cld
push
and
pop
testb
lcall
sbbb
fidivl
and
out
shr
xor
repnz
jae
jb
icebp
je
cwtl
push
push
mov
push
and
fldt
out
xchg
pop
lock
jne
xchg
adc
pop
shlb
fistpll
leave
fists
sarb
mov
jecxz
mov
mov
push
add
push
push
loope
dec
jae
jae
or
adc
pusha
cmp
scas
popf
xchg
popf
or
dec
lahf
and
inc
mov
std
or
cmp
adc
mov
xchg
push
ss
stc
inc
cwtl
inc
addr16
cs
mov
or
ljmp
dec
sahf
aad
cmp
push
cmp
insl
jae
push
andl
and
pop
repz
pop
rolb
psraw
cltd
js
les
sub
pop
movsl
loop
jbe
iret
push
rcrb
cmp
inc
rol
pop
xor
sub
and
mov
xor
test
push
push
imul
jno
adc
cmp
ja
push
ror
xor
and
aam
std
cmp
xchg
mov
insl
mov
js
fnsave
and
adc
push
addr16
xchg
scas
sti
mov
jp
dec
rcll
xor
or
lret
pop
stos
xor
es
lods
sbb
cmp
mov
pop
lahf
sbb
add
cmpsl
xor
jno
sbbb
pop
test
je
mov
arpl
es
lret
jecxz
adc
xor
mov
aaa
push
mov
insl
push
mov
icebp
push
stc
sbb
in
daa
scas
xor
and
fptan
out
and
std
or
cmpsl
inc
add
ss
pop
cmpsb
inc
inc
mov
push
xor
xchg
mov
push
js
imul
cmp
jo
adc
sar
xchg
inc
mov
add
push
or
xor
xor
cs
push
mov
mov
test
filds
and
adc
push
xchg
movsb
push
xchg
insl
xor
negb
stos
cs
scas
jecxz
enter
and
adc
pushl
shll
int
nop
mov
push
xor
repz
jmp
pop
test
inc
clc
push
lahf
push
push
dec
fldl
lret
cs
dec
or
xchg
in
aaa
push
mov
std
fisubrl
lahf
jge
inc
repnz
mov
dec
mov
repz
xor
cmp
hlt
pop
xchg
or
arpl
mov
xchg
and
inc
dec
sbb
push
in
hlt
cmp
push
push
add
pop
adc
mov
int3
test
jb
jecxz
push
aam
pop
imul
adc
inc
xor
inc
imul
xor
lcall
loopne
mov
xchg
daa
pop
jnp
and
push
inc
mov
fistl
add
jmp
fmull
jl
and
xor
lahf
out
pop
cmpsb
push
andb
fwait
mov
stos
scas
inc
jmp
fmul
xor
mov
pop
pushf
test
mov
leave
adc
lahf
adc
fnstenv
mov
and
adc
push
mov
cli
push
out
push
mov
xor
inc
repz
xor
push
stc
mov
daa
mov
xchg
insb
rcrl
sub
add
daa
push
inc
mov
mov
xchg
push
xchg
loop
adcb
imull
push
and
inc
mov
add
outsl
jbe
mov
leave
lret
aam
fcoms
push
call
movups
sbb
jns
mov
hlt
bound
sub
sub
clc
mov
mov
add
mov
test
cmpsl
xchg
inc
orb
xchg
nop
push
addb
loopne
loope
aas
andl
inc
xchg
je
int3
jno
xlat
nop
cltd
mov
mov
shrl
idivb
dec
inc
out
fiaddl
jmp
cwtl
inc
mov
outsb
insb
jg
cld
mov
mov
sbbb
mov
imul
pop
mov
pop
mov
out
cmpsb
adc
xchg
xor
stc
roll
stos
jb
jecxz
dec
insb
lods
aaa
push
jmp
inc
push
jne
xor
xchg
test
std
mov
jnp
xor
bound
es
lret
pusha
ss
mov
fcoms
sbb
xchg
mov
jns
cltd
sub
notl
xlat
pop
lret
xor
cmp
loopne
lods
loopne
stos
stc
sub
out
mov
mov
xor
jbe
repnz
cld
push
cld
xchg
jp
iret
xor
mov
cmpsl
fmull
xchg
jno
das
test
lea
mov
out
push
pop
add
clc
aad
jns
arpl
pop
dec
mov
pop
sbb
cli
push
push
push
lods
fs
fsubl
add
in
aas
lea
dec
imul
lcall
jmp
cmp
sub
sbb
or
pop
imul
dec
mov
mov
jmp
lret
or
sbb
sub
cmp
dec
jnp
imul
dec
mov
mov
jmp
lret
or
sbb
imul
dec
xchg
mov
xchg
imul
jns
or
out
sbbl
jl
repz
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
push
test
gs
fadds
das
sub
cmp
or
sbb
dec
movsl
pop
push
test
gs
adc
leave
and
pop
cmc
or
sbb
test
or
mov
adc
leave
and
cmp
sub
push
sarb
pop
or
or
fsubrl
mov
ds
fnsave
and
shrl
mov
cmp
out
lcall
iret
fcomps
or
sbb
sbb
or
jle
cmc
sahf
fs
mov
aam
cmc
leave
and
mov
push
mov
gs
xor
adc
mov
and
push
or
lds
stos
dec
movsl
inc
xchg
or
dec
call
pusha
pop
cmp
negb
test
mov
aam
aas
mov
pusha
xlat
pushf
divl
and
cmp
sbb
sbb
jl
mov
cltd
test
gs
adc
leave
and
cmp
or
sbb
dec
movsl
xor
xor
adc
xchg
mov
dec
mov
pop
xchg
or
sbb
test
or
adc
mov
xchg
dec
imull
jbe
or
adc
sub
or
loopne
ljmp
add
sub
cmp
or
sbb
dec
movsl
pop
push
test
gs
adc
leave
and
cmp
or
sbb
dec
movsl
pop
push
test
dec
fsubrp
and
rcrb
mov
nop
adc
scas
jge
mov
pushf
lahf
scas
push
mov
dec
fiaddl
jbe
jno
xchg
hlt
jb
repz
xor
hlt
call
sahf
lock
mov
push
xchg
adc
sub
sub
mov
dec
mov
inc
mov
mov
test
sbb
pop
jp
adc
inc
push
sub
sti
add
les
pop
add
sbb
add
aas
mov
mov
cs
push
sti
fisubrs
sub
add
pop
adc
and
rol
loopne
jmp
aam
cld
lods
enter
mov
nop
in
mov
push
pop
xor
lock
mov
out
mov
cmp
shrl
lds
xorb
pop
out
pop
pop
popf
mov
ljmp
jne
leave
adc
fsubrl
outsl
adc
lahf
pusha
jecxz
test
in
xor
cmpb
mov
rcrl
lea
and
cli
fistps
sbb
xchg
call
xchg
addr16
cmpsl
push
inc
sbb
ret
jno
mov
ljmp
lret
mov
loop
and
mov
int3
xlat
repnz
out
xchg
add
xchg
xchg
adcl
push
das
cmc
not
xor
and
push
repz
aam
imul
mov
xchg
jl
popf
rolb
aad
iret
test
push
cmpsl
cmc
sbb
call
dec
xchg
inc
movsl
test
adc
sub
out
lds
popa
xchg
mov
ret
adc
aad
xchg
sar
xor
mov
repz
hlt
in
cmpsl
xchg
push
pushf
mov
out
sub
dec
or
push
push
insb
mov
push
lahf
in
ljmp
jge
dec
and
arpl
subl
add
int3
push
addr16
mov
mov
or
inc
cwtl
sub
pop
adc
inc
dec
add
xor
inc
call
and
cmp
sbb
mov
aas
adc
lods
aam
sbb
leave
addr16
flds
mov
lahf
aam
outsl
pop
mov
mov
mov
and
out
or
ss
imul
repnz
pop
sbb
cmpsb
push
jno
shll
scas
lret
aaa
lret
icebp
pop
sar
cli
bound
xor
movsb
outsb
mov
mov
popf
mov
shll
push
cmp
pop
xor
push
sbb
inc
mov
mov
mov
bound
push
push
aad
mov
subb
in
xor
push
push
xor
cs
sbb
xchg
or
xchg
push
rcl
ret
cld
sub
inc
repz
lods
lods
sbb
xchg
add
in
jg
mov
std
lods
mov
mov
xchg
inc
aaa
dec
xchg
movsb
not
mov
mov
fdivl
xor
push
mov
js
sub
addl
ss
xor
je
cs
int3
cmpsb
loop
out
rorl
lret
or
pop
ljmp
xor
jmp
fistl
pop
sub
les
mov
sbb
pusha
outsb
inc
sub
adc
pop
ds
jmp
xor
cmp
push
add
push
mov
clc
stos
out
adc
mov
lahf
adc
adc
jecxz
or
jnp
mov
xchg
fstpt
int3
cli
pushf
ja
xor
cmp
sub
imul
or
addb
xchg
loop
jo
jp
dec
dec
stos
pop
push
inc
addr16
out
test
or
mov
fidivrl
jno
fsubrs
push
add
aad
movsb
pop
cmp
sbb
add
pop
movsb
sub
out
js
jmp
imul
dec
loopne
mov
pop
cmp
push
std
andl
addb
repz
push
xchg
mov
stos
lods
out
xor
out
loope
icebp
xor
lds
dec
js
int3
out
movsb
aas
insb
rcrl
scas
loope
pop
mov
lock
adc
dec
push
add
xchg
jo
mov
xchg
addr16
or
fdivs
mov
inc
add
movsb
sbb
mov
pop
sti
fnstcw
decl
jp
arpl
xchg
fldcw
push
xchg
sub
mov
jecxz
ret
cmpsb
out
adc
add
insb
pop
add
push
dec
movsl
and
fisttps
and
lea
popa
icebp
fwait
jmp
jmp
xchg
mov
adcb
adc
pop
popl
data16
adc
mov
and
inc
inc
adc
push
mov
addr16
jns
cltd
js
push
fcmovnu
lcall
mov
cltd
jbe
ss
test
iret
sub
dec
add
xor
sbb
mov
or
fcomi
mov
imul
fisttps
js
mov
fisttpll
outsl
out
or
and
iret
dec
xchg
aam
jg
loope
stos
fisubl
add
enter
pop
scas
leave
fsubrl
add
test
push
pop
push
mov
mov
push
push
push
test
pop
lds
or
aas
loope
mov
outsb
aas
ds
jmp
aad
arpl
cmp
je
popa
push
mov
es
mov
pop
insl
add
mov
fidivl
out
ret
scas
xchg
neg
add
push
lock
cmp
push
ret
in
xor
scas
mov
mov
imul
cmpsb
movsb
inc
inc
mov
mov
lock
adc
test
mov
je
sti
mov
and
ljmp
jl,pn
adc
sbb
int
xchg
or
xor
out
shrd
jg
and
or
pop
dec
cmp
enter
sti
movsw
or
test
fmulp
pop
shr
mov
xchg
dec
push
dec
bound
dec
gs
jmp
jb
repz
data16
cltd
aas
sub
imul
mov
insl
int3
lahf
add
in
cli
and
leave
aaa
sub
or
jb
xchg
test
xlat
inc
and
mov
sbb
dec
out
xchg
mov
cmp
adc
aad
mov
lods
add
mov
xor
xchg
xchg
sub
jbe
xor
rcr
push
int3
inc
imul
enter
fists
xor
and
push
shll
jl
push
jmp
clc
outsl
sbb
shl
dec
dec
sbbl
add
xchg
push
add
sbb
mov
xchg
in
pop
sar
rcrl
mov
popf
repz
inc
push
pop
xchg
dec
jg
imul
shll
or
fnsave
das
shrb
rcll
insb
out
jmp
dec
inc
inc
xchg
mov
sub
jns
fadd
xchg
cli
add
adc
jne
ret
daa
cli
jb
cld
xor
repnz
dec
aam
push
xchg
ljmp
mov
mov
add
popa
jl
ds
stc
aas
aad
ss
mov
push
call
pop
mov
push
in
fwait
imul
mov
add
test
aad
dec
negb
adc
sbbb
in
fisttpll
sub
int3
pop
test
es
call
push
push
inc
stc
xchg
and
das
adc
stc
shl
jbe
mov
pop
aaa
mov
mov
fs
icebp
sub
mov
mov
inc
dec
adc
push
shlb
pop
mov
xchg
mov
dec
rorl
push
xor
inc
sub
mov
sbb
mov
sbb
xchg
push
fildll
lods
inc
xor
mov
lock
and
ljmp
mov
push
cmp
cmp
sbb
ss
insl
mov
sbb
inc
daa
xor
in
mov
xchg
dec
or
les
pop
sti
sub
int
push
sbb
adc
test
push
push
sub
sbb
push
dec
add
and
mov
lock
out
mov
in
xchg
sbb
xchg
in
out
mov
iret
icebp
pop
arpl
jns
stc
subl
xchg
push
and
loopne
in
and
push
movsb
push
fnstenv
dec
pop
lret
hlt
or
out
repnz
add
xor
xlat
fsubrl
xor
lret
adc
xor
add
sub
pusha
sbb
pop
cmpsl
jge
xor
sti
dec
aam
adc
ja
cmp
mov
fsubl
mov
inc
dec
jecxz
dec
sbbb
lea
xor
enter
aad
popf
fdivp
iret
mov
frstor
cld
add
insb
call
sbb
mov
cmc
fmull
mov
xchg
push
jne
idiv
mov
or
ss
cmp
dec
xchg
or
or
shll
sbb
xchg
dec
das
stos
mov
xor
ljmp
out
jmp
or
jmp
lods
pop
je
xor
and
push
insb
sbb
lahf
mov
mov
repz
push
adc
push
cmp
dec
mov
and
add
pop
std
mov
add
push
mov
dec
dec
sbbl
xchg
testl
xchg
xlat
rcrb
pop
adc
vandnps
inc
stc
movsl
insl
mov
and
daa
xorb
dec
inc
jle
and
in
fidivs
sub
movsb
adc
push
gs
das
or
nop
inc
scas
dec
sti
lret
sbb
popa
pop
jp
imul
jmp
cmp
mov
dec
inc
scas
or
push
and
in
in
inc
push
pop
cmp
jecxz
aas
fcoms
call
out
inc
mov
shrb
xchg
stos
cs
clc
sbbb
cs
sti
stos
cmp
fsubl
mov
icebp
aaa
mov
xor
aam
int3
ja
call
lods
shll
jbe
test
sub
mov
cmp
mov
jle
mov
and
movsl
popa
nop
add
ja
std
xchg
xchg
shrl
mov
sahf
mov
test
test
dec
xchg
jb
inc
sub
dec
jnp
xchg
popa
xchg
imul
push
repnz
jbe
cld
pop
or
cmpsl
pop
inc
insb
push
cmc
dec
jo
pop
xor
hlt
inc
aam
xchg
xchg
outsb
jb
or
xor
sub
cmp
cmp
in
std
and
lret
sbb
adc
mov
decb
mov
cmp
cmpb
aas
ret
mov
jae
rcrl
or
pop
cmp
jne
inc
adc
ljmp
out
jp
out
inc
dec
and
in
pop
inc
fdivrl
insl
pop
xor
lret
jle
shr
lock
std
add
inc
xchg
xlat
jnp
jle
add
jl
inc
push
testb
fstps
mov
cmpsb
mulb
mov
test
and
xchg
test
or
test
pop
ret
pop
jne
lods
add
sti
stc
push
adc
les
pop
arpl
cli
cmp
lods
xor
or
clc
lods
mov
shlb
adc
push
dec
outsb
insl
pop
shrb
data16
decl
mov
cmp
icebp
jbe,pn
mov
lcall
dec
sti
enter
or
dec
sti
adc
js
mov
sbb
fisttpll
jbe
add
fs
ds
ja
pop
arpl
and
jns
add
je
jmp
ret
mov
xlat
add
dec
mov
mov
push
pop
jg
pushf
mov
mov
mov
mov
push
imull
xor
mov
mov
psllw
dec
cmpsb
addr16
incb
mov
sarb
push
mov
xor
and
adc
add
sub
xor
popf
jge
jp
push
addr16
rol
adc
loope
jle
inc
cmovae
xchg
ljmp
jae
xor
clc
add
inc
cmc
in
decl
jp
pushf
ficoms
lods
jmp
inc
inc
sub
mov
mov
cs
mov
and
popf
jecxz
push
xor
push
xchg
cli
ds
sbb
add
dec
std
bound
and
shl
lea
push
pop
xchg
and
fldenv
sbb
inc
add
aam
sti
sbb
cmpsb
scas
push
dec
add
cmp
mov
or
sbb
addr16
shrl
push
fisttpll
push
loope
sub
jae
mov
mov
call
jbe
xadd
push
arpl
repnz
int3
xor
mov
cltd
mov
push
aad
mov
or
sub
ja
jns
enter
jne
in
fildl
push
dec
loop
incl
cmpsl
mov
out
or
cmp
jge
inc
pushf
negb
cs
fcompl
inc
mov
push
sub
scas
jmp
mov
jg
repz
in
lock
test
mov
clc
mov
mov
dec
pop
add
adc
jl
xchg
jae
in
out
bnd
sub
jl
sbb
xchg
pop
jno
icebp
sub
inc
xor
jnp
hlt
mov
icebp
mov
popa
js
xor
sbb
sub
rcrb
mov
adc
test
push
cmp
inc
test
pop
and
enter
xchg
mov
outsb
add
pop
ss
mov
popf
adc
xchg
cmpsb
popf
loopne
imul
dec
ret
push
jb
mov
lods
jbe
sbb
stos
adc
cmpsb
sbb
out
ljmp
xor
ficoms
rcr
shrb
loope
xchg
dec
addr16
lods
dec
mov
mov
mov
pusha
mov
xchg
jg
repz
jle
xchg
rorl
arpl
mov
stos
xlat
and
xchg
inc
iret
js
enter
ss
xchg
push
push
lcall
shlb
and
adc
lock
add
jle
adc
les
xchg
sarb
ficoms
mov
popa
ljmp
xor
lods
add
inc
enter
add
je
push
repnz
pushf
arpl
jb
or
sbb
rcrb
mov
inc
xchg
in
ss
enter
cli
or
je
xor
sub
test
mov
add
pop
bound
fcos
les
nop
adc
pop
push
adc
enter
mov
js
jmp
xor
xchg
fwait
xchg
jbe
push
cmpsb
inc
lahf
shr
fcmovne
rcrb
ficoml
push
xchg
and
int3
in
inc
inc
xor
pop
sti
add
mov
sti
ljmp
or
insl
nopl
popf
jne
cmp
push
adc
add
inc
adc
jbe
cmp
shrl
fdivl
sahf
jl
pushf
test
xchg
mov
bound
sub
xor
xchg
popa
dec
mov
rol
jae
xchg
test
sub
lahf
je
cmpsb
in
xor
inc
aad
dec
dec
adc
stc
dec
add
pop
movsl
ds
dec
ret
enter
sub
aam
dec
dec
pop
andb
jns
xchg
movsb
inc
push
faddl
mov
sarb
dec
push
mov
pop
xchg
out
lcall
movsl
stc
push
movb
jne
int
sub
or
mov
inc
inc
inc
pop
jb
test
cmp
jecxz
stc
leave
adcl
sub
xor
in
xor
adc
cmp
fstl
arpl
fwait
mov
mov
stos
ljmp
lahf
stc
enter
movsl
ljmp
adcl
inc
and
lcall
daa
jno
adc
stos
mov
inc
mov
lahf
push
jae
test
cmp
lods
pop
sahf
push
insl
imulb
aas
add
dec
jno
add
mov
adc
push
pop
sub
dec
cmc
es
xor
jo
sbb
loop
ds
or
mov
test
iret
iret
cmp
pop
sub
mov
jl
jno
int
pop
cltd
dec
xchg
in
insl
cmp
push
mov
fcompl
pop
test
fwait
xchg
sbb
add
movaps
in
dec
mov
or
inc
movsl
jb
pop
mov
and
inc
scas
mov
adc
push
add
sub
shll
jns
fmull
add
fisttps
mov
repz
gs
scas
xchg
dec
add
cmp
insb
xchg
aas
sbb
dec
test
test
mov
std
dec
pop
pop
inc
shll
cmp
sub
pop
lods
sub
dec
outsl
enter
and
lods
mov
cmpsb
xchg
clc
iret
icebp
sbb
mov
lods
sub
sub
repz
rcr
into
bound
xchg
insb
xor
pop
out
xchg
mov
cltd
add
xor
sub
test
push
pop
fidivs
into
jp
mov
pop
subl
fmull
dec
xor
mov
cltd
dec
andb
xlat
jnp
dec
sbb
or
or
insb
and
insl
ret
lea
mov
imul
stos
cmp
stos
testb
ja
test
or
xor
pop
aas
inc
dec
stc
test
daa
pop
stos
lock
popa
fsubrp
adc
pushf
test
pop
inc
jbe
ljmp
or
push
xchg
leave
inc
inc
jno
sbb
fcomps
add
sti
nop
xchg
aas
pop
mov
xlat
lods
push
aam
dec
lahf
cmpsl
in
push
fisubs
dec
jne
in
add
jle
fisttpl
sub
in
lods
dec
mov
pushf
fcmovb
test
fs
pop
mov
out
dec
sub
int
divb
inc
or
xchg
lret
imul
fwait
test
mov
mov
rcr
outsb
hlt
adc
ljmp
mov
pop
or
pop
cwtl
rcrb
call
icebp
cmpb
jb
orl
fmuls
rcrb
sbb
sub
mov
imul
jb
inc
pop
or
mov
out
test
out
in
push
leave
sub
ja
int3
cmp
xor
cmpsl
adc
leave
sti
aas
pop
jecxz
mov
inc
cmp
adc
push
fistps
imul
mov
mov
pop
adc
lock
cld
fdivr
movsl
jmp
lock
je
addr16
lret
dec
push
scas
mov
cmp
or
sbb
sbb
add
into
push
mov
adc
lods
mov
add
mov
lret
scas
imul
jmp
cmp
rorb
mov
fadds
cmp
insl
in
pop
push
cmp
insl
mov
dec
jnp
jp
sbb
xchg
push
jne
sbb
lds
jle
pop
sbb
or
jg
pop
ljmp
inc
dec
scas
sbb
test
cmp
lock
cmp
stos
fbstp
xchg
push
lds
leave
push
lret
ds
cld
bound
roll
inc
fwait
adcb
and
daa
ss
out
es
imul
lds
inc
ja
aam
dec
arpl
movsl
sar
jmp
adcb
das
out
shrl
andl
repnz
mov
dec
test
adc
mov
loopnew
adc
in
aaa
test
xor
mov
popa
in
ret
in
in
xchg
push
and
jle
sub
leave
dec
iret
push
push
pop
scas
add
test
xchg
sarl
add
int
push
das
aam
mov
stos
and
addr16
or
mov
add
es
xor
push
jns
dec
test
sub
clc
xchg
enter
stos
adc
fucom
or
sbb
cwtl
gs
adc
mov
sahf
icebp
imul
mov
xor
sti
pop
mov
jmp
pop
mov
shlb
mov
int3
loop
imul
loope
enter
mov
addl
incb
push
jb
aas
test
jo
add
push
cld
xor
int
xor
sbb
adc
xor
mov
sub
aas
mov
pop
subb
cmc
lock
inc
gs
mov
sti
daa
mov
in
mov
fidivl
inc
cmp
lretw
in
adc
psadbw
movsl
mov
adc
inc
pushf
sub
aas
out
mov
lahf
and
push
in
jno
jo
sahf
jne
fdivl
gs
or
mov
mov
and
mov
sbb
push
aad
inc
ret
mov
ror
outsl
imull
loopw
cmp
jle
mov
push
cltd
push
mov
xchg
lret
ret
cmpsb
xchg
loope
test
dec
ss
call
lret
adcl
jo
test
hlt
dec
mov
loop
mov
adc
leave
and
cmp
or
sbb
dec
movsl
pop
push
test
gs
adc
leave
and
cmp
or
sbb
dec
movsl
pop
push
test
gs
xchg
jmp
movsl
test
in
xchg
imul
mov
adc
leave
and
xchg
pop
or
outsb
in
cmc
xchg
mov
cmpsb
pushf
inc
adc
pusha
divb
and
jno
add
adc
add
lock
test
mov
push
pusha
divb
add
push
dec
rclb
call
pop
nop
mov
iret
xchg
cli
out
push
lahf
xor
add
pop
repz
pop
notb
pop
aam
add
adc
punpckhdq
xchg
mov
scas
das
scas
mov
ljmp
inc
pop
xchg
out
out
inc
adc
jg
aas
test
mov
lret
std
dec
sub
or
in
xchg
jmp
inc
shrl
stc
jae
insb
mov
push
inc
push
push
fs
mov
loopne
mov
popw
sub
adcl
int3
es
sub
xor
mov
cmpsb
int3
dec
jecxz
xchg
jbe
lods
ljmp
es
jnp
cmp
jecxz
push
popf
xor
ss
call
fiaddl
int3
jo
adc
jo
add
pop
rorb
loop
int3
push
mov
das
xorb
xchg
sbb
movsl
sti
jge
push
adcl
inc
sbb
inc
aam
fld
push
push
adcl
sbb
push
clc
inc
lret
add
movsl
and
gs
push
lds
ret
scas
xor
mov
or
sbb
dec
xchg
adc
rclb
loopne
lock
adcb
mov
push
out
divb
add
xor
push
shlb
jbe
push
adcb
mov
adc
sahf
test
mov
punpckhbw
inc
fs
clc
fwait
leave
lea
arpl
nop
call
jbe
into
adcl
lds
pop
ss
arpl
cld
insb
fsubl
cmp
ljmp
stc
iret
pop
es
fsubp
pop
xor
repz
add
fistpl
outsl
testb
je
dec
cmp
add
push
lea
mov
repnz
push
jge
jno
mov
mov
out
xlat
jbe
stos
pushf
jecxz
sbb
shl
jno
dec
or
and
push
smsw
xchg
jg
sub
test
jns
mov
adc
popa
and
movsb
sahf
or
xlat
mov
xchg
adc
jns
imul
incb
jbe
add
btc
xorb
add
das
rcrb
lahf
sub
push
xchg
lock
mov
mov
js
mov
mov
popa
daa
push
jo
repz
sub
xor
lods
xor
jne
addl
sbb
mov
mov
push
sbb
mov
popa
js
lret
fidivrl
ss
imul
adc
je
cmp
mov
add
push
push
shll
push
mov
jmp
xchg
shrb
jo
mov
jge
xchg
scas
in
inc
xchg
orl
lcall
sbb
nop
popa
icebp
jae
das
mov
adc
inc
out
lahf
lods
push
cmpsl
cmpsb
leave
sub
xchg
icebp
lret
lcall
in
ret
rcr
lahf
mov
hlt
or
adc
out
xorl
lcall
cmpsb
es
fnstsw
call
inc
jnp
sub
fcompl
cmp
mov
test
push
repnz
push
and
in
sbb
push
ret
stos
clc
push
jp
dec
jp
and
mov
mov
lds
clc
add
movsl
xor
cmp
add
jb
imul
fcmovbe
rcr
cmpsl
add
int
lds
sub
sbb
mov
test
jae
dec
or
leave
or
push
ret
test
mov
adc
mov
xchg
dec
jns
mov
loope
mov
rclb
push
ljmp
jl
cmp
pop
jecxz
out
in
andl
insb
insl
add
push
push
inc
test
ficoms
add
pop
jg
dec
xor
push
loop
in
sub
lds
sbb
push
enter
test
push
arpl
dec
sbb
ret
push
pop
lea
movsl
lods
jmp
stos
ror
movl
mov
xchg
jecxz
repz
in
pop
pop
loope
dec
mov
xlat
pop
imul
jae
in
dec
push
and
or
adc
sbb
das
leave
or
cmc
mov
xchg
daa
stos
push
jg
cmp
stc
bound
jo
insl
ror
sbb
pop
ret
lds
adc
cmp
inc
xor
cmp
es
cmpsl
fdiv
push
inc
in
pop
les
lods
jmp
and
push
cmp
imul
repnz
lods
insb
inc
mov
add
pop
push
inc
mov
popa
jl
hlt
or
in
loope
testl
test
adc
mov
arpl
pop
jge
call
and
idivb
xor
adc
in
adc
or
scas
mov
xor
push
xchg
mov
push
pop
push
loop
jp
inc
sub
imulb
add
int3
sub
add
icebp
inc
loop
ja
dec
aaa
fistps
xor
leave
ljmp
and
ret
cmpb
mov
sub
ds
jge
mov
cltd
popa
mov
cmpsl
or
sti
shrb
in
shrl
push
sbb
mov
insl
cld
add
push
lds
sbb
movsb
pop
pop
mov
mov
cmpsb
xchg
imul
push
push
mov
xor
cmpsb
or
sub
sbb
in
scas
rcrb
in
cmp
xchg
cmp
jmp
rclb
fisubrs
inc
fbld
adc
push
mov
movsl
adc
xchg
inc
test
into
fldt
icebp
dec
xlat
push
add
jae
push
lods
inc
ret
std
add
add
js
xchg
sahf
dec
mov
fistps
ret
dec
movl
mov
test
mov
xchg
decb
xlat
stos
cs
cmp
loope
fcomp
cmp
sub
sub
xchg
into
push
imul
ljmp
loopne
dec
or
scas
mov
xlat
cmp
pop
out
cmc
divl
mov
das
jmp
pop
add
std
cmpsb
jae
in
lcall
inc
jg
loop
pop
and
pop
movsl
pop
xchg
in
call
cmp
sub
stos
dec
lcall
ficoms
mov
cmp
les
push
xchg
inc
lods
push
add
stc
mov
sub
mov
in
mov
mov
or
sbb
inc
int
stos
stos
lcall
fists
xchg
pop
les
pop
sub
mov
ret
roll
lock
imul
imul
pop
ficomps
add
int
movsb
cmc
hlt
mov
and
insb
mov
sbb
lods
adc
and
jnp
repz
lds
icebp
and
out
pop
jbe
xchg
in
sub
or
ficomps
and
bswap
mov
ret
xor
pop
jae
adc
mov
ljmp
leave
mov
push
movsbl
mov
xchg
sbb
push
cmpl
inc
pop
imul
insl
push
mov
ficompl
bound
cltd
pushf
cmp
cmp
inc
imul
fsts
gs
push
sti
mov
adc
mov
inc
xchg
stos
and
xchg
dec
addb
icebp
xor
cwtl
xor
inc
jno
sbb
mov
mov
sub
lcall
pop
pushf
jmp
adc
cmp
or
sbb
int
leave
pop
popa
push
mul
jmp
cmp
ret
into
or
jnp
sarb
sarl
cmp
mov
sahf
add
mov
aas
cmp
lods
stos
mov
xor
shlb
das
adc
insl
scas
mov
cmc
add
add
mov
and
ficoml
rclb
leave
pop
out
push
mov
pop
std
lret
into
sub
jle
dec
push
roll
inc
xchg
repz
rcrl
jmp
enter
xor
pop
xchg
pusha
imul
stc
jg
jns
lcall
jnp
jle
int
mov
jge
sbb
jl,pn
pop
mov
inc
stos
bound
pop
cmpsb
cwtl
cmp
pop
xor
rorl
das
scas
inc
scas
in
repnz
faddl
lods
repnz
mov
xor
xor
hlt
lds
jp
cmp
lds
jl
cmp
cmp
xchg
push
inc
hlt
mov
add
fdivrs
out
jne
mov
sbb
inc
stos
jge
dec
jns
or
cmp
add
aam
hlt
aas
int3
mov
es
data16
sar
bnd
ljmp
dec
dec
mov
and
sbb
sbb
popw
lods
cmp
insb
outsl
add
xchg
jle
aaa
mov
pop
sbb
dec
js,pn
cmp
lods
insb
js
or
jmp
jb
adc
leave
mov
in
lcall
cld
pop
sub
out
and
xchg
das
fdivl
mov
shlb
test
movsb
fadds
and
fcoml
fnstcw
cld
fiaddl
mov
in
dec
inc
test
lret
jnp
xor
mov
xchg
xchg
or
jp
xor
ljmp
push
mov
pop
lock
push
lea
lfs
lds
and
ret
int
test
das
popf
push
cmp
mov
dec
xchg
pushf
movsl
imul
xchg
add
xchg
push
into
insl
add
inc
adc
push
adc
xor
xchg
push
push
mov
adc
out
mov
mov
and
jecxz
xor
dec
adc
imul
or
rolb
decb
fisttpll
cmp
pop
pop
cmp
jp
fistpll
adc
jmp
and
mov
fucomp
add
stc
jbe
mov
push
test
shr
pusha
pop
scas
aad
mov
adc
icebp
jecxz
adc
dec
fwait
xchg
bound
jmp
pop
ficoml
push
jp
and
fnstsw
xchg
mov
ret
sub
clc
jge
adc
pop
jle
stos
push
cmp
add
xchg
xchg
mov
pop
test
mov
and
xchg
int3
loopne
inc
push
out
leave
stos
lds
mov
fcomi
pop
mov
das
dec
pop
jnp
clc
dec
dec
dec
and
and
adc
push
lods
and
movsb
dec
xchg
pop
mov
cmp
and
aaa
arpl
in
test
call
ds
shll
mov
lock
popf
xchg
lods
int
add
jp
sub
dec
dec
ret
lods
cmc
inc
sbb
call
add
inc
nop
outsb
xchg
add
inc
xchg
ss
fmul
jo
jmp
ret
cmp
adc
scas
shrb
loopne
and
dec
jmp
outsl
lods
fsubs
mov
or
loopne
data16
in
sbb
out
sub
sub
scas
dec
out
pop
fiadds
ljmp
mov
dec
xor
inc
and
push
pop
cmpl
ja
ficoms
movsb
pop
cmc
movntq
int3
cmpsb
popf
mov
or
clc
sahf
push
ret
pop
xor
push
xchg
jnp
push
test
xlat
mov
cmp
lcall
popa
mov
aaa
ja
sbb
mov
adc
jmp
popf
xchg
xchg
jmp
cltd
sbb
repz
imul
or
xor
loop
pop
push
cli
cs
icebp
ret
jge
hlt
push
ficoml
daa
add
out
add
jge
into
xor
gs
mull
test
cmp
mov
sbb
testl
repnz
enter
cmp
fiadds
xchg
push
dec
fwait
repnz
lret
pop
jnp
dec
jg
inc
nop
js
xchg
leave
js
xor
aas
push
sbb
ja
cli
cmp
mov
into
loopne
xchg
sub
pop
xchg
add
cmp
mov
mov
cwtl
mov
addr16
lret
sub
pushf
scas
roll
sahf
lret
pop
ja
cmpsl
sub
in
sub
and
and
nop
push
jp
dec
mov
or
pushf
mov
lret
loop
clc
push
xor
dec
sbb
out
mov
push
mov
enter
add
leave
xor
dec
inc
out
pop
and
pop
mov
mov
inc
mov
sub
adc
mov
sub
add
inc
adc
sti
pop
adc
sub
add
imul
jnp
ficompl
in
mov
or
shlb
add
mov
jg
xor
lods
jl
in
call
cmc
ret
insb
and
loop
xchg
aad
out
dec
call
repz
subb
adc
mov
lret
lahf
mov
push
cmp
mov
add
pushf
sahf
out
xor
inc
mov
jge
hlt
cmc
push
pusha
jle
jg
xchg
shlb
dec
mov
loope
mov
loopne
scas
not
mov
mov
scas
mov
int3
enter
xchg
pop
insb
mov
inc
aam
push
repnz
mov
outsl
add
jno
pop
pushf
pop
mov
inc
mov
rsm
adc
subl
movsb
fidivl
int3
out
and
and
fisttpl
push
shrl
jmp
or
or
scas
mov
fisubs
mov
inc
xor
and
xlat
inc
negl
sub
sbb
pop
cmpb
es
in
orb
push
and
or
pop
sub
repz
daa
popf
in
aaa
repnz
divl
fsub
or
shr
adc
inc
testb
cmp
sub
ds
jno
dec
out
hlt
flds
jecxz
xor
inc
aad
stos
mov
push
xlat
fsubrl
pop
psubsw
push
rol
xor
outsl
push
jo
loop
mov
cmp
adc
xchg
dec
iret
mov
lahf
pop
movsb
fdivrl
hlt
dec
or
and
fcmovbe
inc
clc
test
pop
or
xchg
int
pop
lret
and
and
les
inc
cmpl
mov
mov
popa
inc
pushf
sbb
inc
mov
push
xchg
fdivrs
test
pop
movsb
lea
mov
push
das
je
xchg
dec
xor
push
and
jae
sub
add
and
ss
jl
cmp
add
cwtl
mov
add
pop
fcoms
cltd
inc
ja
push
adc
cmp
xchg
add
add
push
ds
add
imul
pop
jns
adc
nop
lock
cwtl
cmc
push
cmp
cmc
pop
fwait
mov
int3
std
push
adc
dec
or
imul
femms
js
add
loop
or
dec
subb
adc
imul
stos
daa
adc
rolb
add
push
pop
out
pop
or
leave
js
stos
mov
push
sbb
inc
shl
sbb
cltd
repnz
pop
push
stos
push
mov
cmpsl
into
lahf
aas
in
pop
cmp
and
sti
mov
lret
neg
cmp
push
mov
cmp
jmp
psllw
cld
mov
xchg
push
mov
mov
dec
adc
imul
mov
xchg
push
jmp
ret
adc
mov
std
sbb
orl
lock
push
popf
stos
hlt
sub
and
stos
or
push
arpl
add
popa
lods
xor
gs
mulb
fwait
and
sti
data16
add
into
jg
jae
loope
sub
push
mov
dec
jae
ljmp
outsl
lcall
pop
push
add
movsb
notb
inc
or
popl
je
mov
arpl
pop
mov
mov
pop
jecxz
push
popf
pop
jbe
pop
dec
inc
jle
imul
andb
jmp
adc
pop
inc
shlb
lods
inc
or
cmpsb
mov
jle
movsl
and
mov
mov
shlb
sbb
lret
mov
xlat
icebp
jg
xor
or
aad
das
ljmp
fs
dec
int3
mov
aam
or
dec
invd
jmp
lods
xchg
cmpsl
lcall
inc
jno
in
sub
dec
insl
es
addl
sbb
push
je
loop
and
adc
inc
dec
mov
xchg
lret
popl
mov
xlat
pop
clc
mov
divl
repz
stc
inc
notb
icebp
insl
pandn
std
ret
daa
and
loope
cld
lds
jmp
pop
jecxz
pushf
xchg
shl
mov
shrb
cmc
scas
dec
pop
popf
sbb
xor
dec
fwait
pop
fisubrl
dec
lea
pop
xor
sub
in
cmpsb
pusha
fisubrs
add
jl
insl
repz
mov
push
jo
faddp
lret
popf
enter
in
and
sub
hlt
push
cli
mulb
sbb
adc
pop
sub
xor
hlt
dec
ds
xchg
call
inc
out
mov
test
add
cmp
out
push
adc
fisubrl
jbe
cli
ja
lea
and
out
and
and
inc
stos
stc
jp
lcall
push
outsl
iret
subl
mov
ret
mov
push
inc
mov
mov
jne
rorb
hlt
or
popa
push
mov
hlt
cmp
cld
inc
fucomi
movsb
into
mov
dec
mov
mov
sub
shlb
mov
es
or
cmp
jb
stos
test
add
adc
push
cli
pop
push
hlt
fwait
inc
sbb
inc
arpl
cmp
mov
popa
push
push
push
fstpl
mov
js
lcall
arpl
cli
mov
cmp
sbb
mov
mov
mov
ljmp
je
xchg
js
mov
xor
xor
lahf
mov
mov
fsin
xor
inc
mov
fwait
icebp
mov
or
stos
ret
cwtl
ja
lret
jecxz
push
push
clc
xchg
in
in
divl
push
mov
or
fidivrs
cmp
xorl
sub
sbb
sbb
gs
scas
leave
mov
and
inc
scas
std
push
cmc
mov
mov
ljmp
ret
mov
or
inc
movsb
xchg
jmp
fsubl
lea
loopne
sbb
or
mov
int
sti
outsl
into
pop
stc
push
vmovd
mov
cmp
jne
cltd
mov
and
xor
test
xor
push
pop
in
jae
les
mov
push
jae
push
dec
shrl
inc
enter
ret
out
push
loop
lret
shrl
mov
jecxz
pop
push
popa
or
dec
cmp
sti
int3
pop
and
out
xor
push
dec
lret
push
filds
and
scas
mov
lret
pop
aas
mov
dec
clc
outsb
mov
xchg
jp
adc
add
lret
lock
mov
fwait
ds
adc
insb
mov
jmp
es
xchg
push
rcl
or
cmp
sahf
push
xlat
pop
add
push
xor
arpl
adc
fs
rorb
rep
jne
jns
cltd
loop
mov
mov
mov
js
and
sbb
cmc
js
loop,pn
in
inc
incl
pop
rclb
sbb
push
mov
fldcw
cld
add
mov
aas
inc
mov
and
fistpll
clc
ds
push
jae
test
and
aaa
fisttpl
cmp
adc
jge
test
gs
dec
mov
je
pop
mov
push
dec
dec
lds
mov
pop
sub
sub
sbb
repz
aas
and
lret
testb
das
jo
icebp
xor
push
mov
test
rol
push
shl
es
sub
and
xchg
mov
inc
data16
xor
fmulp
movsb
ret
mov
out
jmp
rorl
ds
mov
ficomps
loope
ljmp
mov
mov
cmp
add
adc
pop
fucom
rolb
nop
cmp
or
cmp
in
dec
fdivp
add
fbld
test
aas
xor
jo
or
add
or
and
dec
inc
and
xor
mov
xchg
mov
gs
test
lods
mov
incl
std
and
js
lods
lret
pop
fimuls
cld
sbb
and
inc
filds
mov
cltd
cwtl
out
cmp
push
inc
mov
xlat
in
rolb
push
testl
in
in
shrl
add
push
jo
aas
add
ret
mov
daa
sub
lret
inc
dec
rcrl
jl
sahf
nop
mov
and
jne
and
push
xchg
mov
or
or
jle
and
adc
fnstcw
test
mov
call
subl
jp
dec
inc
leave
je
repnz
or
sbb
push
loope
push
jne
in
jae
jp
sub
mov
xchg
dec
cmpsl
imul
arpl
popl
sub
and
lret
repnz
aaa
data16
adc
test
fsts
pop
and
repnz
push
push
add
insl
push
std
dec
mov
adc
fidivrl
imul
jne
add
mov
sub
push
loop
movsb
pop
test
push
push
shrl
pop
push
iret
movsl
xor
mov
mov
jbe
and
mov
push
ret
sub
add
aam
cmp
jbe
xchg
mov
test
jp
jo
jno
push
jb
sti
sarb
jnp
dec
mov
shll
lock
cld
mov
ret
adc
cmp
mov
pushf
pop
cld
mov
and
or
and
inc
jae
adc
popa
mov
sub
mov
std
loopne
pop
cmp
xchg
cltd
repz
into
cmp
lcall
fs
fs
rcrb
push
shll
sub
inc
mov
mov
loope
hlt
lods
pusha
stc
std
push
lock
cmp
sub
cmpsl
lsl
stos
repnz
cmpsl
hlt
cmp
in
inc
sub
aad
push
xor
aaa
xchg
adc
ljmp
push
add
decb
mov
jo
add
xor
push
shlb
jbe
push
adcb
mov
push
out
divb
add
xor
push
shlb
jbe
push
adcb
mov
pop
out
divb
xchg
jnp
and
xor
push
aam
loopne
stc
push
test
nop
es
loop
rolb
adc
mov
test
xchg
sahf
call
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
mov
fiadds
add
push
dec
pop
push
lea
push
mov
push
or
add
add
add
add
jecxz
faddl
mov
mov
inc
add
mov
add
add
add
or
push
add
add
add
add
and
dec
add
add
dec
add
add
push
add
add
add
add
add
dec
add
add
add
add
add
mov
add
add
add
sub
dec
add
add
add
add
add
add
outsb
add
add
add
add
or
mov
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
outsb
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
sub
mov
and
adc
dec
add
inc
add
or
jne
push
add
ltr
add
add
sbb
aad
push
add
add
add
add
add
mov
add
add
add
mov
test
mov
add
add
add
add
add
add
add
add
add
add
add
add
adc
arpl
jne
add
sbb
jae
dec
add
add
add
add
add
add
add
add
pop
add
add
add
and
test
add
add
add
add
add
add
add
add
add
add
add
add
test
test
or
push
add
sub
and
push
add
add
or
and
add
add
or
fldl
adc
dec
add
add
add
add
add
dec
add
lldt
add
xor
movl
sbb
mov
add
add
add
fiadds
movsl
add
add
imul
add
push
add
add
add
add
add
add
add
jle
mov
add
add
xchg
movl
add
add
jne
xlat
add
mov
add
add
add
verw
add
add
add
add
add
into
add
add
add
add
add
sub
repz
add
add
aaa
add
add
add
add
fiaddl
dec
add
lods
push
adc
add
push
pop
int
cwtl
add
add
add
add
add
add
add
add
add
add
fiadds
sbb
add
add
add
add
test
push
add
das
add
add
add
add
add
add
add
mov
movsb
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
adc
add
add
pop
add
add
add
add
sbb
adc
arpl
addb
add
add
add
add
add
add
xor
add
add
add
add
add
fmull
mov
add
daa
adc
test
imul
loope
or
push
mov
test
jl
leave
and
aaa
rcrb
pop
push
fwait
mov
shll
sbb
add
and
insb
call
fwait
sbb
lods
test
inc
xchg
adc
cli
popl
sub
push
aaa
test
and
repz
cmc
mov
xchg
mov
xor
jno
jbe
and
shll
add
jo
sub
in
fs
cmp
pop
in
xchg
aad
jle
mov
sbb
pop
push
ljmp
ds
test
movsl
jno
mov
jmp
xchg
cwtl
lock
jecxz
aad
stos
jb
sahf
xchg
or
mov
fneni(8087
xor
lods
sub
cmc
dec
into
lods
mov
movsb
pop
or
pop
dec
lea
subl
add
stc
ficomps
push
test
aad
ret
push
cmp
mov
and
lea
stc
dec
lcall
mov
add
leave
adc
out
popa
sub
xchg
nop
leave
fs
xchg
fnstsw
scas
cld
cmc
fwait
dec
inc
pop
inc
jo
shl
cmp
das
popa
cltd
mov
xchg
inc
in
lods
and
xor
xor
mov
mov
pop
cli
arpl
stos
jbe
imul
aam
xchg
imul
jns
cmp
cwtl
icebp
or
mov
aaa
pusha
out
dec
pop
or
dec
es
movsb
ss
pop
xchg
pop
push
pop
scas
pop
cli
repz
adc
pop
pop
push
jp
adc
push
ret
jno
sub
jne
jnp
jae
mov
das
fs
loop
jp
fmuls
dec
cltd
dec
add
inc
cmp
and
out
inc
xchg
popa
mov
push
loope
roll
xchg
cld
movsl
xchg
inc
out
shlb
and
cmp
inc
and
ret
dec
leave
sarl
dec
xor
test
sub
fsts
ljmp
push
mov
xchg
dec
enter
rclb
mov
cmp
idivb
jbe
iret
test
ret
fistpl
sub
xor
popf
pop
ret
push
pop
add
aaa
sub
adc
push
stos
sub
insb
push
mov
sbb
inc
sar
add
mov
sarb
outsl
outsb
lock
mov
mov
rolb
insl
clc
fsubs
mov
sbb
inc
dec
fucomp
loope
rcl
loop
or
push
pop
mov
repnz
sbb
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
