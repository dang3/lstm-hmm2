call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
lods
and
lret
sti
imul
jmp
dec
push
jnp
imul
or
cmp
sub
lret
out
jmp
fwait
cmpsb
pop
xchg
mov
imul
test
je
or
jnp
sub
dec
dec
into
push
fsubrp
scas
cmpsl
mov
mov
test
cmp
sbb
dec
imul
outsl
sub
mov
add
pop
sahf
icebp
lahf
mov
fiaddl
notb
fcmovbe
mov
pop
ja
sti
dec
jmp
test
sbb
cli
cmp
into
lahf
loope
cmpsl
mov
sbb
cltd
into
push
idivb
or
neg
ss
push
xchg
fwait
mov
jle
xchg
push
sbb
sbb
push
shr
js
into
sbb
out
data16
xchg
cltd
pop
inc
mov
daa
or
sbb
jbe
ljmp
jbe
lods
push
mov
and
sbb
hlt
idivb
push
scas
ss
cmp
jg
loope
fwait
mov
sub
jle
dec
imul
aaa
ds
cmp
inc
test
mov
in
shr
into
add
sub
pop
je
jg
jp
dec
negb
into
ret
mov
je
sbb
xor
dec
push
inc
pop
push
inc
lahf
aam
mov
mov
jmp
stos
jbe
dec
push
jnp
imul
or
cmp
sub
lret
sti
jmp
fwait
cmpsb
mov
pop
dec
push
jnp
imul
or
cmp
sub
cltd
add
loopne
fwait
adc
rorl
stos
pop
mov
jl
push
mov
jge
es
rcl
push
testb
or
mov
scas
mov
and
xchg
mov
rcl
xchg
jnp
stos
int3
sub
jl
cmp
mov
leave
cmp
mov
rorb
stos
popa
inc
cmp
jmp
mov
jg
out
fildl
xchg
lahf
divl
aas
pop
ficompl
data16
test
mov
out
cli
aas
add
pop
pop
imul
jg
in
int
xchg
xor
dec
or
jmp
imul
push
adc
popf
mov
or
repnz
push
and
xor
mov
scas
jp
mov
int
imul
mov
mov
hlt
jg
pop
cmpsl
mov
nop
and
ja
test
scas
sub
push
aad
adc
addr16
loopne
mov
lock
adcb
add
dec
xchg
fnsave
ss
mov
jnp
dec
inc
loopne
repnz
shrl
lahf
add
mov
rcl
lea
add
out
mov
dec
mov
test
xchg
sub
add
add
and
xor
pop
out
lahf
adc
jbe
fst
xor
jbe
mov
mov
fisubs
adc
xor
mov
cmpsl
cltd
cmpsl
or
aaa
iret
test
mov
mov
ret
pop
je
cli
mov
stos
sbb
dec
outsb
cmp
push
mov
loope
xor
inc
adc
popf
mov
mov
ret
and
add
pop
inc
jmp
jle
fwait
mov
xor
imul
into
lcall
and
dec
flds
pusha
enter
pop
cs
cmp
or
into
fmull
mov
arpl
fidivs
mov
inc
shrb
push
push
mov
sub
jne
xor
sbb
fldcw
out
and
aas
mov
adc
mov
sub
cmp
or
nop
dec
enter
in
sbb
sub
mov
cli
negl
xchg
addr16
jmp
fnstcw
mov
ds
sbb
jne
jp
rol
or
mov
scas
mov
dec
pop
into
sub
xor
scas
mov
fmuls
pop
add
pop
mov
vcvtps2dq
xlat
jl
xchg
nop
xchg
insb
push
push
das
lahf
inc
or
mov
adc
mov
loop
scas
adc
shl
sub
xor
xor
xor
mov
cwtl
outsb
xor
out
inc
ret
sarl
frstor
mov
xor
inc
cmp
jg
roll
xor
inc
int3
in
loopne
gs
mov
add
mov
or
cmpb
in
scas
add
shlb
pop
mov
sbb
mov
js
lock
mov
popf
ljmp
stc
lock
xchg
mov
lock
push
jns
mov
and
rorl
lods
aad
popl
mov
iret
ss
mov
loop
sub
adc
adc
or
inc
mov
lods
int3
sbb
or
outsl
add
push
dec
add
stc
mov
xor
adc
int3
pop
sbb
dec
push
adc
add
out
insb
or
ss
xchg
enter
in
mov
fxam
jl
insb
cld
ja
lcall
jbe
pop
dec
rcl
fs
mov
fidivl
iret
lock
push
into
cwtl
mov
fisubrl
mov
dec
lea
dec
sbb
or
inc
add
mov
inc
mov
out
push
ds
xchg
loopne
adc
mov
ss
jmp
and
add
test
jg
pop
xchg
push
xchg
xor
and
jecxz
sbb
jns
mov
pop
jb
adc
push
test
jp
sub
inc
stos
and
add
mov
mov
or
roll
xchg
jne
rorl
cmpsl
ss
pop
jmp
push
stos
jno
in
add
lea
ja
test
jb
mov
shrl
outsb
dec
enter
iret
jne
adc
out
jle
cltd
repz
sbb
dec
sub
in
sub
and
fucomip
cmpsb
mov
push
mov
insb
rcrl
cmp
loopne
sub
sbb
adc
pop
out
test
out
cmpl
pop
inc
xchg
mov
xor
das
inc
dec
jg
test
cli
mov
movsl
int3
sub
mov
je
fstps
cmp
out
push
mov
pop
daa
loope
pop
adcl
insl
or
lahf
lret
jecxz
inc
jae
lock
cmp
push
adc
inc
pop
and
sub
xchg
cwtl
iret
filds
and
das
repz
mov
xchg
rcrl
nop
mov
mov
fwait
xchg
pop
insl
ret
js
aaa
jo
movsb
sub
lea
mov
mov
sbb
movsl
arpl
ret
cli
inc
ja
dec
shlb
fwait
xchg
mov
arpl
xchg
aam
adcl
movsl
in
rolb
pusha
push
sub
popf
sti
mov
int3
cltd
ja
fwait
arpl
test
jp
push
add
add
lods
repz
lret
in
xchg
insb
cmp
es
push
sub
int3
xor
outsl
and
and
enter
push
sub
cmp
arpl
inc
gs
jnp
adc
dec
movsl
add
mulps
push
int3
shll
ret
pop
and
mov
jp
ss
in
jo
push
sub
in
xchg
sti
jp
adc
lods
psrlq
loopne
mov
mov
test
xchg
outsb
mov
pusha
xchg
cmp
cmc
lds
lods
pop
and
xlat
lret
adc
rcrl
push
hlt
inc
addb
aaa
mov
fwait
outsb
int3
fildll
push
jmp
scas
and
adc
cli
mov
cmpl
stos
fs
pop
cmp
mov
cmp
ljmp
jne
movsl
jle
sub
jmp
cmp
out
in
vpsubq
popa
fnstcw
scas
shll
out
pop
out
sbb
out
cs
lret
test
mov
out
fsubr
loopne
xchg
enter
mov
mov
lret
fsubrs
stc
jp
test
xor
iret
shrb
int
cmpsb
add
ret
jle
jno
fcompl
out
cmp
xchg
mov
jbe
mov
imul
sti
pop
lods
pop
mov
xchg
scas
out
fisttpl
xor
xor
iret
and
mov
cmp
les
or
icebp
test
es
loop
pop
lds
shl
int
xorl
fwait
mov
dec
aad
xor
sti
mov
push
lods
adc
push
lock
push
bound
mov
push
iret
nop
loopne
or
xchg
dec
imul
lods
insl
or
inc
xchg
movsl
add
data16
jno
loope
mov
sbb
andb
xchg
xor
add
movb
pop
nop
mov
je
sub
xchg
aaa
push
ret
ja
push
testl
jb
std
icebp
fadd
push
cmp
jno
pop
bound
xchg
push
mov
movsb
cld
mov
movsl
mov
cmp
push
outsb
ret
lahf
movsl
or
out
push
cltd
jg
aad
out
in
add
push
mov
jb
pop
nop
call
xchg
add
mov
aad
mov
adc
mov
cli
out
ret
adc
test
sbb
ss
or
nop
popl
xor
mov
lea
bound
adc
in
xchg
pop
popa
lea
push
inc
fld
insl
scas
addb
data16
push
fldcw
cmp
sbb
jmp
pop
ret
pop
sub
fildll
sbb
dec
test
cmp
stos
popf
cmp
mov
nop
mov
mov
fidivrs
xor
xchg
sub
push
dec
mov
mov
jno
movsb
add
mov
rclb
cld
scas
test
ret
or
adc
inc
ret
xchg
in
das
inc
sbb
sub
lock
mov
adc
lahf
outsb
out
mov
stos
addr16
ljmp
pusha
xor
mov
fldcw
mov
imul
cmp
jae
dec
mov
cmc
rolb
bound
lcall
mov
mov
mov
mov
inc
add
push
cmp
jge
ss
pop
mov
inc
outsb
aas
pop
cmc
and
xor
ja
fidivl
xor
call
scas
lock
push
push
lcall
roll
dec
in
les
sub
mov
and
popf
movsb
jl
test
in
fistl
sbb
sub
xchg
lods
imulb
inc
aas
pop
jnp
xchg
push
mov
pop
clc
pop
sarl
or
adc
mov
ja
addr16
into
call
mov
dec
fnstenv
loope
cmp
popl
scas
imul
or
add
mov
mov
scas
stos
ret
stos
in
fld
ret
movsl
adc
movsb
stos
jle
jo
cmp
mov
push
lods
jno
ja
inc
jle
inc
test
stc
int3
mov
cs
in
mov
int3
std
fcomps
and
jno
mov
pop
inc
int3
lahf
sbb
fdivr
lds
jae
pop
sub
push
dec
push
cmpsb
insl
mov
out
sbb
dec
rcrl
mov
inc
lahf
jb
mov
pop
stos
inc
test
out
clc
fwait
bound
jecxz
out
push
push
in
lahf
loope
insl
lea
addr16
push
xchg
or
and
pushf
adc
jge
test
jge
nop
mov
sbb
arpl
fs
je
adc
or
dec
jb
insb
or
lret
cwtl
xchg
nop
sub
pop
lods
test
xor
outsb
pushf
add
dec
push
sahf
xor
enter
enter
out
mov
sbb
jmp
lock
mov
cmpsb
cli
or
pop
cs
iret
mov
cmpsb
xchg
jmp
ljmp
mov
jle
mov
inc
add
and
mov
cmp
test
lret
addr16
shr
mov
int3
cmpsb
mov
xchg
mov
cmp
adc
es
push
mov
xchg
rolb
dec
mov
shrl
xchg
test
mov
xor
aam
cltd
xor
mov
xchg
sbb
popf
jmp
cmp
lock
pop
cmp
mov
lahf
jns
fdivrp
in
pop
je
sbb
mov
aad
into
add
out
lcall
idivb
test
push
test
mov
iret
or
popf
mov
out
sub
mov
pop
xchg
lds
add
subl
mov
stc
cmp
cs
icebp
fisttpl
dec
push
xchg
jmp
jge
pop
pop
shlb
xor
pop
pop
mov
mov
push
in
fsts
add
or
xchg
jbe
icebp
clc
sbb
movsl
imul
adc
and
jnp
push
ficomps
shlb
cli
jp
and
xor
mov
aam
mov
cmp
cltd
shl
test
xchg
inc
pop
mov
jecxz
shr
mov
icebp
test
into
push
push
aaa
aas
mov
shlb
rcl
and
shll
and
push
int3
adcb
ljmp
jp
sbb
mov
nop
inc
mov
jmp
mov
xorl
lea
addr16
sub
std
sub
mov
jno
daa
mov
int3
outsb
aaa
mov
or
mov
sub
xchg
aad
outsb
ljmp
push
dec
divl
mov
and
and
xor
jecxz
push
mov
mov
add
into
sub
repnz
mov
mov
jecxz
lahf
inc
mov
mov
cmp
dec
xor
cmp
cs
push
pop
movsb
jg
sahf
pop
outsl
and
mov
aam
xor
push
and
xchg
push
into
push
lds
push
loopne
and
pop
pop
inc
sub
and
cmp
call
out
icebp
into
and
adc
cmp
inc
movsb
and
aam
jl
xor
sbb
out
in
mov
cmp
cld
dec
and
cmp
in
into
or
mov
shrb
fidivrl
out
mov
xor
sbb
testb
jecxz
arpl
push
daa
outsl
aas
xchg
lcall
scas
pop
push
xor
sbb
mov
jmp
int3
sub
call
xor
out
cwtl
lret
xchg
iretw
ja
testb
mov
mov
jno
pop
jbe
mov
in
pop
pop
std
fs
mov
ret
cmpsl
les
xchg
jg
xchg
mov
dec
lods
fmul
rcr
shrb
dec
xchg
ljmp
push
into
movsb
and
les
pop
addr16
mov
nop
sbb
ljmp
pop
cmp
pop
or
jae
imul
jno
lods
les
mov
das
push
lcall
cwtl
loop
xchg
lret
inc
leave
outsl
das
imul
cmp
xchg
int3
add
xor
dec
cmp
iret
lret
sub
push
and
mov
dec
andl
fcmovb
adc
cld
mov
jne
add
xchg
imul
add
pop
sbb
lods
mov
mov
ds
cmpsl
inc
and
clc
and
sub
lds
iret
clc
mov
push
jmp
mov
fs
cmpsb
mov
sub
mov
inc
stc
adc
fwait
lods
js
xor
mov
cmp
dec
jae
inc
out
dec
int
dec
fistps
adc
jae
sahf
cmp
aad
cmpsb
push
jl
mov
lock
out
arpl
lods
and
mov
sbb
out
mov
sub
xchg
cmc
cmpsl
adc
imul
jo
addr16
push
loopne
push
or
pop
push
xchg
adc
cmp
and
add
data16
xor
push
push
std
dec
mov
push
lret
inc
mov
push
xor
add
outsb
jle
imul
mov
pushl
push
ret
fwait
int3
jg
movsb
mov
cmp
aas
out
dec
hlt
outsb
shll
out
std
dec
or
repz
add
js
jp
jne
push
lret
jp
cmp
imul
xor
or
int3
or
cltd
mov
mov
divl
cwtl
lods
add
mov
repnz
ds
push
add
mov
popf
lret
mov
mov
les
lret
iret
gs
mov
push
sbb
fdivrl
fldt
cli
mov
or
cmpsl
pop
fidivrl
sbb
pop
popl
out
out
cmpsb
xor
and
push
xchg
movsl
out
cmp
cli
shlb
sub
aam
lds
jmp
in
or
push
bound
in
hlt
std
cmp
or
dec
push
fdivrs
and
xchg
jmp
sbb
loope
jb
hlt
rcll
sahf
add
pop
xlat
jge
fnstcw
gs
push
dec
stos
mov
jno
cli
sahf
popf
xchg
es
mov
fisubl
xchg
pop
inc
popf
mov
and
push
outsl
std
xchg
add
pop
dec
clc
inc
aaa
mov
cld
sub
jb
stc
inc
ss
in
int3
aas
dec
fdivrp
stos
jecxz
and
arpl
enter
mov
dec
fdiv
and
or
mov
dec
sub
sbb
inc
sub
idivb
lods
xchg
ljmp
xlat
stos
or
inc
jbe
loope
movsb
js
pop
and
xchg
mov
dec
js
pop
out
std
pop
cwtl
out
arpl
out
imul
dec
sub
add
out
mov
lds
int
pmullw
cli
add
adc
cmp
nop
rorl
inc
in
and
pop
cmpsl
xchg
push
push
xchg
scas
dec
movsb
dec
fldl
sti
shll
push
mov
iret
and
sub
xchg
or
ficoml
sub
or
sbb
sub
add
outsl
mov
sub
mov
stos
mov
int
sub
add
inc
lea
not
push
or
mov
shll
xor
sbbb
bndldx
daa
loop
mov
cwtl
std
je
movsl
pop
in
push
test
mov
cltd
jbe
sub
cmp
popa
cwtl
adc
inc
pop
out
and
adc
sbb
fldl
mov
mov
xchg
jne
pop
sub
sahf
inc
stos
adc
lods
pop
push
test
pop
and
test
aad
fiaddl
cmp
das
dec
je
or
pusha
dec
sbb
imul
mov
out
push
and
push
push
cmp
into
jbe
out
jno
jb
xchg
les
mov
xor
xor
enter
cli
mov
and
cmp
mov
fndisi(8087
add
dec
pushf
fsubp
lcall
add
out
push
sbb
and
into
dec
scas
rol
sub
dec
test
sbb
imul
mov
sbbl
shrl
xchg
sbb
fbld
lret
add
push
pop
dec
dec
xorl
sbb
lods
cmp
leave
nop
mov
repz
jecxz
xchg
lds
or
cmpsl
push
jge
xchg
scas
movsb
pushf
in
mov
pop
mov
fcom
lock
enter
pop
sbb
push
lret
mov
insl
or
jbe
in
into
ljmp
xor
rcrb
ljmp
push
cmpsb
stos
aam
pop
jmp
pop
in
mov
test
push
pop
cmpsb
roll
mov
or
shr
xor
inc
ja
xchg
cmp
jge
jo
mov
cmp
movsb
push
jecxz
sbb
jl
xlat
mov
mov
cmp
xchg
sbb
mov
jae
outsl
mov
arpl
dec
mov
mov
fsts
ja
adc
negl
mov
sub
shrl
bound
cmc
out
div
lahf
and
outsl
clc
fsubrs
mov
sbb
push
test
stos
cmp
push
ss
or
clc
loopne
or
sbb
and
mov
stos
jne
mov
fstpt
and
scas
xchg
fnsave
stc
aad
adcl
leave
in
lods
call
cmpb
and
mov
adc
dec
test
into
push
inc
lahf
push
push
push
scas
sub
mov
rclb
dec
movzwl
or
push
add
push
das
mov
mov
sub
add
lods
and
repnz
xor
loopne
cmp
divb
dec
mov
push
or
lea
or
mov
adc
scas
mov
fldpi
mov
jp
ret
inc
arpl
in
mov
and
out
clc
ljmp
sub
inc
into
xchg
dec
lcall
xchg
pop
xor
mov
sbb
ljmp
data16
pop
mov
inc
outsb
mov
ret
mov
pop
outsb
sbb
inc
bound
aaa
push
ljmp
xlat
jno
dec
add
inc
push
and
jge
mov
sub
jecxz
mov
fistpll
adc
cmp
inc
inc
mov
and
bound
jo
pop
mov
jp
int
js
inc
and
gs
ret
fcmovnbe
xor
fyl2xp1
mov
jg
not
or
ja
mov
adc
mov
mov
mov
cmpsl
jbe
inc
mov
aas
in
xor
fwait
xchg
imul
jae
andl
push
and
cmpsl
mov
call
pop
in
cld
pop
sub
jle
scas
lods
dec
xor
cmp
shll
sbb
mov
pushf
jne
inc
cmp
inc
dec
imul
negl
jge
mov
mov
nop
nop
mov
leave
dec
sbb
cmp
inc
and
movsl
jne
lea
xor
xchg
push
dec
dec
mov
sti
inc
inc
movsl
aam
push
aas
cwtl
lods
pop
subb
mov
jbe
xor
cmp
mov
ljmp
lcall
mov
ret
add
mul
push
xchg
mov
and
daa
sbb
ret
push
or
movl
popa
and
sub
stos
mov
aam
psrlq
push
jno
mov
fdivl
mov
and
fwait
sub
insb
dec
sbb
out
imul
imul
xchg
mov
scas
loopne
ds
sbb
call
fwait
lret
fists
cmpsb
mov
pop
dec
push
jnp
imul
or
cmp
sub
lret
sti
jmp
fwait
cmpsb
mov
pop
dec
push
jnp
imul
or
cmp
sub
adc
jmp
fwait
cmpsb
and
andl
jnp
imul
and
push
sbb
sub
fcmovnbe
lret
loopne
ljmp
push
stos
mov
sbb
xchg
scas
hlt
jmp
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
cwtl
jge,pn
cmc
push
in
fwait
and
sbb
add
mov
adc
add
lds
cmc
push
in
xchg
outsb
test
dec
movsl
es
mov
adc
into
and
jae,pt
and
test
jle
dec
pop
pop
push
scas
sub
xor
mov
in
mov
xchg
push
push
dec
sarb
cmpsb
aad
dec
inc
lret
jp
out
out
stos
inc
out
jo
adc
fnstcw
mov
push
insb
fwait
lds
sti
sahf
inc
and
mov
cli
nop
out
xchg
aaa
mov
test
test
aad
cmc
fs
mov
mov
into
ljmp
xchg
imul
xchg
int
jg
and
mov
or
add
fcmovu
push
pop
cmp
pop
and
div
and
jle
push
adc
lcall
push
and
lds
sbb
mov
inc
pop
sbb
jbe
mov
into
xor
ds
push
mov
xchg
outsb
sarl
sbb
mov
jne
sbb
xor
sub
push
sti
or
pop
cmpsb
or
or
add
and
lods
imul
dec
dec
pop
mov
cs
cld
add
xor
daa
cmp
add
adc
or
data16
cwtl
fs
push
jbe
jl
jnp
inc
test
dec
movsl
pop
push
scas
inc
mov
adc
into
and
ds
push
in
xchg
outsb
test
dec
movsl
pop
push
scas
inc
mov
adc
into
and
push
pop
jecxz
sbb
xchg
aad
rcrl
hlt
and
xorl
xchg
out
pop
sbb
fsubl
mov
cs
leave
shrb
mov
sub
scas
outsb
jae
cltd
in
mov
xor
and
and
and
lods
in
cmp
dec
jno
into
lcall
mov
shlb
test
mov
les
push
test
jo
push
mov
test
imul
jnp
xor
mov
adc
jecxz
mov
push
add
xchg
das
adc
pop
dec
inc
fsubrs
fadds
loopne
stc
mull
lds
add
stc
add
leave
cmp
mov
data16
inc
cld
fldenv
push
enter
arpl
imul
scas
fdivs
rcll
imul
sti
xor
xchg
xor
mov
leave
mov
shlb
mov
sbb
mov
and
and
mov
xor
and
mov
adc
testb
scas
jnp
or
mov
xor
lahf
pop
nop
cmp
repnz
outsb
mov
mov
add
push
and
popl
outsl
or
mov
jns
mov
ja
jae
mov
pusha
mov
fmulp
adc
inc
sub
lods
repnz
sub
mov
inc
dec
loop
xchg
add
inc
mov
imul
mov
insb
scas
in
loope
fwait
mov
in
jge
dec
std
sub
jecxz
mov
cs
xchg
sub
outsb
lds
pop
testl
and
dec
outsb
xchg
sbb
aas
ret
sarb
mov
mov
outsb
jmp
rolb
data16
fsubs
jnp
ficomps
icebp
test
mov
add
adcl
ds
dec
ja
fildl
lods
std
add
or
push
inc
mov
xor
popa
ffreep
out
xor
cmp
into
scas
mov
loop
jno
sar
cmp
xor
xor
pusha
pop
lret
mov
jp
adc
les
flds
loope
ret
dec
pop
jmp
call
pop
cmp
xor
popa
pop
sbb
hlt
fisttpl
xor
adc
mov
xchg
and
ljmp
xchg
mov
lahf
cld
insb
out
push
mov
push
xchg
ja
int
xchg
lcall
and
dec
mov
adc
in
xchg
leave
sti
dec
adc
pop
insb
addb
inc
jo
aam
lods
ja
rcll
add
adc
push
sub
pop
cmpsb
mov
mov
popf
adc
xor
loop
dec
bound
ljmp
push
testl
sbb
or
and
stos
mov
shll
pop
pop
jecxz
pop
dec
mov
pop
xchg
popa
sbb
movsl
sbb
or
clc
mov
cltd
bound
push
sbb
aas
hlt
mov
and
inc
xchg
xorb
pop
and
sti
ja
xlat
sbb
out
inc
cmp
iret
or
daa
cld
into
inc
lods
mov
insb
rcrl
xor
cmc
ret
mov
mov
push
cmpl
cwtl
cmc
mov
cli
push
rcll
sbb
mov
sub
lods
dec
pop
add
mov
cmpsb
call
jmp
pop
ret
loopne
lret
bound
sbb
in
cmp
inc
inc
jbe
insl
xor
mov
ljmp
jne
in
ja
inc
or
sub
aad
mov
loopne
adc
push
mov
pop
mov
andb
shlb
out
loop
loope
mov
sub
rcrl
dec
xlat
push
test
rcl
std
add
xchg
and
scas
ds
jl
in
mov
push
cwtl
std
ss
cmp
fmuls
pop
cmpsb
mov
jb
sub
dec
iret
inc
fstpl
clc
push
sub
mov
push
insl
fldl
pop
repnz
inc
insb
mov
xor
cli
inc
xchg
aas
pop
pusha
lahf
lahf
movsl
jo
jb
sbb
fs
mov
movsb
test
mull
dec
sti
aad
cmp
iret
push
insb
push
push
pop
insl
lods
and
mov
sbb
mov
leave
sub
jae
ss
fdivrl
xor
jne
pop
xor
nop
inc
test
add
aas
call
dec
cld
pushf
jp
stc
jae
outsb
push
jae
sbb
mov
movb
push
cmpsl
mov
pop
xchg
mov
into
mov
xchg
xor
inc
adc
daa
mov
xchg
sti
pop
lods
call
jmp
in
xlat
out
adc
mov
xor
mov
fs
inc
jle
or
cmp
jbe
aas
dec
mov
sahf
loope,pt
and
dec
insl
inc
clc
xchg
ljmp
jnp
push
jne
outsb
jecxz
in
mov
fisubrs
loope
mov
jnp
xor
les
std
mov
pusha
call
or
inc
and
and
lods
jne
fbstp
fsts
mov
sbb
mov
test
add
add
mov
xchg
push
and
inc
pop
jbe
lcall
push
cwtl
dec
outsb
in
test
mov
add
adc
inc
jl
movsb
loop
adc
sbb
pop
push
das
push
outsl
jnp
mov
repnz
push
mov
cmp
push
push
dec
fildll
loope
addr16
adc
ficoml
mov
loope
xchg
js
mov
fbstp
pop
adc
nop
jl
push
pop
into
inc
scas
pushf
pop
mov
adc
outsb
or
sbb
cmpsb
cltd
dec
stc
popa
insl
jno
rcll
shrl
xlat
cmp
insl
mov
add
jbe
push
adc
mov
in
sbb
imul
leave
cmp
sbb
sahf
pop
mov
out
mov
mov
xor
cmp
cmpsb
out
pushf
out
repz
cmp
cmpsb
push
scas
jg
mov
inc
insl
add
jno
aas
push
dec
and
fwait
pop
adcl
sbb
scas
dec
pop
xor
sbb
addb
outsb
fwait
stc
scas
inc
push
inc
push
mov
pop
inc
jge
inc
pop
gs
sub
pop
mov
jmp
pop
stos
enter
fwait
adc
push
jno
insl
dec
das
pop
jle
pop
mov
ds
and
cwtl
mov
adc
aam
add
data16
or
xor
adc
pusha
push
iret
ds
addb
xchg
nop
ja
out
dec
leave
mov
outsb
xor
push
mov
ret
subl
pop
data16
repz
outsl
or
sarb
and
enter
and
es
leave
das
ret
inc
ret
div
shl
add
stos
pushl
jbe
xchg
testl
push
sub
mov
fdivr
mov
cmp
flds
lret
cwtl
pop
jno
pushf
cli
push
sbb
pushf
aaa
out
fmull
ss
fwait
cltd
aad
xchg
mov
mov
sub
fistpl
mov
int3
inc
les
subl
leave
sbb
and
out
push
push
sbb
adc
repz
push
aad
das
aaa
data16
jle
jmp
add
leave
fwait
cmpsl
lahf
hlt
jl
subl
xor
ret
bnd
sub
jbe
pop
mov
add
push
les
mov
test
fstps
mov
and
cmpsb
clc
pusha
outsl
out
lea
dec
and
sub
popf
xchg
add
fists
fsubrp
cmp
mov
mov
pop
sbbl
iret
sub
xchg
inc
rclb
dec
jo
je
add
pop
les
in
test
punpckhdq
sbb
push
cld
popf
sbb
jne
inc
push
sbb
add
addr16
pop
in
popf
in
insb
lret
rorl
mov
ja
sub
pop
mov
lcall
stos
mov
pop
push
orb
stos
pop
push
out
push
sbb
add
mov
insl
mov
popf
cld
jb
and
mov
push
std
jb
push
push
adc
ja
xchg
testb
adc
lcall
or
push
loopne
dec
out
mov
adc
mov
into
pop
popa
or
scas
cli
int3
jl
add
int3
sbb
push
enter
stos
pop
mov
mov
cmc
inc
pushf
add
xor
cs
repz
cwtl
jg
push
fcomp
sbb
pop
jbe
movsl
jns
negb
xchg
mov
sbb
inc
mov
pop
pop
cmp
mov
in
add
jg
sub
pop
insb
xchg
mov
sahf
mulb
cs
bound
out
lock
inc
addr16
pop
popf
sub
fnstsw
addb
sbb
ds
sub
in
inc
lods
iret
loop
lock
out
dec
sub
sbb
ret
pop
lods
arpl
andl
test
xchg
out
push
out
or
and
adcb
fstps
and
rorb
xchg
lea
xor
adc
out
pusha
dec
insb
lods
push
sub
push
adc
mov
inc
jecxz
or
sbb
ja
cmpsl
pop
aas
mov
repnz
mov
test
or
mov
xchg
data16
inc
dec
bound
in
mov
push
or
scas
jecxz
xchg
ret
mov
inc
sar
xchg
mov
pop
das
sbb
dec
js
xor
mov
inc
ret
dec
rcrb
sbb
sahf
jns
jno
adc
gs
out
dec
xorb
clc
xlat
fnstsw
adc
adc
mov
jne
fimuls
pop
sbb
cmp
mov
xor
aas
cmc
es
or
lcall
lea
cmp
push
dec
lret
loopne
mov
fs
lods
ss
sbb
lock
pop
dec
and
aas
sbb
pop
xor
mov
pop
fs
jbe
sub
ljmp
dec
fucom
lret
pop
aam
push
ror
pop
jg
int3
stos
in
push
push
and
fldl
sub
and
and
push
xchg
inc
xor
stc
adc
call
and
test
std
cmp
jg
pop
cmp
icebp
lock
fnstenv
or
and
mov
adc
lret
pop
mov
sub
pop
xor
cmc
push
mov
pop
adc
cmp
int
pop
aam
nop
cwtl
fldl
jnp
jae
loop
je
sahf
xor
in
pushf
arpl
mov
cmpsb
jle
mov
add
dec
lret
adc
fs
push
add
jo
push
mov
jg
popa
mov
movsl
mov
sub
mov
aad
mov
mov
sub
xchg
and
stc
mov
xor
pop
inc
and
dec
pop
adc
lods
cld
in
icebp
stos
mov
pop
mov
add
inc
nop
movsb
int
mov
jle
lret
jne
in
pushf
mov
mov
mov
scas
dec
enter
jge
arpl
and
sub
cs
push
outsb
sub
ret
and
or
sbb
jmp
out
dec
jbe
adc
jne
mov
and
mov
mov
cmc
je
mov
adc
jae
add
lcall
jge
jb
cmpsl
pop
in
inc
mov
adc
aam
jp
sub
sar
popf
rolb
cli
push
or
insl
inc
or
and
aas
mov
xchg
aam
add
int3
push
negl
fimuls
daa
pop
cwtl
aad
xchg
jg
or
inc
ja
in
in
sub
pop
adc
in
cwtl
push
outsb
dec
repnz
add
test
movsl
icebp
add
icebp
mov
test
adc
inc
jb
jecxz
jno
sub
adc
aam
mov
aas
imul
dec
cmp
insl
out
fwait
sbb
or
xchg
les
jmp
inc
jo
mov
jbe
sub
lds
in
cmp
mov
rcl
cmp
mov
or
mov
sub
adc
mov
lret
mov
mov
push
aad
push
fsubr
mov
je
aaa
cmp
ret
out
add
and
jl
cmp
movsl
push
lahf
xor
mov
rcll
test
jno
and
jbe
jno
bound
xor
jmp
pop
es
jge
lcall
aad
outsb
pop
iret
mov
inc
cmc
imul
sub
xor
cltd
dec
add
push
inc
je
nop
out
fldenv
test
sbb
aam
dec
jmp
dec
mov
jno
xchg
iret
pop
jl
dec
subl
xor
add
lds
mov
mov
sbb
das
xor
clc
loope
fisubl
inc
je
jg
jbe
stc
repz
inc
daa
xchg
mov
cmp
inc
lds
outsb
cmp
test
mov
lds
hlt
sub
les
jle
cmpl
or
ret
cmp
xchg
mov
mov
mov
ja
outsl
mov
cmpsb
lahf
lea
lds
outsl
jmp
adc
xor
into
jno
out
lea
arpl
sbb
sbb
or
mov
jns
lods
dec
sbb
cltd
jl
xchg
movsl
cmc
push
adc
push
fcoms
negb
outsl
aaa
lahf
scas
sbb
call
adc
mov
mov
ret
cwtl
pop
clc
sbb
pop
inc
inc
pusha
jae
push
xchg
loope
mov
push
cmp
in
add
jle
or
mov
jmp
cmp
test
push
pusha
sbb
jmp
add
jp
ds
sub
push
push
mov
lea
fsubr
mov
or
sbb
pushf
pop
mov
jo
dec
sbb
into
mov
xchg
sti
adc
mov
imul
xor
dec
push
jb
hlt
jp
mov
sub
jae
fldenv
rep
pop
leave
fcomps
int
stos
mov
and
cmc
jp
gs
test
das
or
pop
mov
inc
minps
adc
dec
flds
pop
movsl
inc
mov
cmc
dec
pop
push
jg
xor
push
addl
addr16
xor
push
js
cmp
or
xchg
sub
cld
mov
add
loope
mov
lret
outsb
push
push
push
and
stos
mov
out
xchg
xchg
in
pop
loope
sbb
divl
loopne
icebp
inc
xchg
fwait
dec
sub
jns
sbbl
lods
pop
push
xchg
out
jl
cmp
push
jno
dec
mov
adc
mov
inc
mov
test
pop
out
ror
pusha
daa
sub
mov
flds
mov
sub
test
pop
in
mov
dec
sbb
leave
aaa
stc
iret
jg
jns
mov
test
test
aad
js
leave
imul
das
mov
or
clc
xchg
pop
ss
int3
in
pop
sub
cmpsb
mov
test
push
popa
mov
in
negb
xor
pop
xchg
xchg
aam
filds
and
lods
dec
push
xor
or
fmull
testb
insl
mov
cmp
mov
mov
xchg
addr16
sub
scas
lret
xor
je
pushf
rcl
xor
in
mov
idivb
add
push
or
cmp
sbb
mov
dec
or
arpl
subl
mov
out
divl
iret
lds
shr
fldl
mov
mov
jnp
jge
cmp
inc
xlat
int
mov
jns
mov
loope
fsubrs
mov
inc
mov
inc
xchg
mov
mov
movsb
xor
xor
in
or
lds
mov
jb
add
lea
xchg
mov
mov
pop
repnz
cmpsb
sub
rcr
mov
mov
jno
mov
scas
sub
xchg
sti
sub
stos
test
cmp
in
sbb
test
pop
mov
push
cmp
arpl
add
pop
fldt
mov
lcall
mov
clc
pusha
xchg
arpl
and
jl
cmp
shll
mov
sbb
jbe
mov
mov
jo
dec
insb
inc
popf
xchg
mov
jne
add
add
pop
daa
xor
mov
in
movsb
mov
jl
push
cmp
sub
jmp
mov
pop
roll
adc
gs
pop
rclb
lods
in
and
loopne
dec
mov
pop
hlt
stos
mov
jb
icebp
ret
mov
add
bound
and
rorb
hlt
sbb
dec
adc
pop
cld
xchg
cmp
adc
or
mov
jl
inc
pop
jl
sub
je
lcall
decl
loopne
xor
andl
mov
xchg
jno
ficoml
adc
cwtl
out
gs
nop
xchg
push
xchg
rcl
add
dec
fnstsw
testb
mov
out
jno
push
pop
cli
cmp
mov
jb
inc
in
loope
or
inc
sub
jmp
rcr
movsl
lret
jnp
xor
loopne
mov
mov
dec
test
fadds
call
loope
mov
jmp
fsubp
cmpb
jns
lahf
sub
fcomip
cmp
xchg
fs
sti
lret
cmp
dec
add
and
out
xchg
hlt
inc
test
imul
lock
adc
and
in
mov
cmpsb
shlb
shll
fisubrs
inc
shl
dec
and
dec
out
std
xor
xchg
pop
into
push
movsb
xor
out
xor
test
mov
cmc
sub
js
cwtl
stos
push
pop
negb
pop
mov
jl
ja
out
nop
jno
mov
aaa
jmp
mov
inc
and
push
out
enter
in
aad
stos
fadds
gs
push
mov
imul
lods
iret
add
adc
pop
loopne
adc
scas
xor
movsb
jo
jge
add
cmc
xchg
aas
outsl
shll
orb
cmc
xchg
test
movsl
push
imul
pusha
loopne
xor
push
jle
adc
jns
jge
cmp
jns
repz
push
sbb
sbb
and
push
shlb
adc
or
test
jmp
sub
sbb
xchg
test
jb
sub
sahf
dec
cmp
mov
and
je
mov
or
push
xor
jge
mov
inc
call
sti
popa
sti
jge
out
ret
hlt
cltd
sub
mov
mov
cli
mov
mov
clc
mov
cld
jle
sub
daa
into
jp
test
stos
shlb
adc
cmc
in
pop
out
or
xor
fiadds
push
cmc
add
and
jl
shr
aaa
and
sub
dec
lret
xchg
mov
outsl
jg
jmp
mov
pop
test
fstpt
sub
adcb
les
lea
inc
lret
or
loop
je
sbb
jmp
pop
ds
and
mov
rclb
inc
out
mov
lret
or
xor
pop
mov
mov
mov
or
daa
test
xor
or
shrb
popa
scas
test
test
or
ss
lahf
stos
dec
out
fs
or
xor
add
aas
ret
inc
scas
outsb
in
inc
xchg
push
aad
repnz
jle
push
adc
subl
popa
mov
inc
movsb
shlb
cwtl
inc
leave
inc
addb
or
sub
ss
stos
outsl
pop
loopne
out
int3
pop
xchg
pushf
push
mov
mov
jle
mov
and
pop
lret
add
cwtl
notl
inc
or
lods
and
jl
inc
mov
aam
mov
sbb
imul
sub
int
sub
test
sbb
mov
cmp
push
imul
mov
dec
test
jmp
in
adcb
cltd
rorl
add
mov
into
jp
rclb
negl
sti
inc
pop
cld
stc
pop
add
jne
arpl
imul
enter
jmp
rcrl
push
mov
mov
rcl
das
xchg
mov
sub
mov
cmp
mov
jp
subb
sti
mov
cmp
andl
xlat
insl
push
jne
movsb
adc
lahf
int3
pop
push
adc
sarb
inc
mov
and
cs
inc
cmp
cwtl
jne
adc
cmc
xchg
fs
pop
sahf
pop
fsubrl
ret
sbb
mov
push
pop
push
gs
outsl
andps
cs
push
pop
mov
mov
mov
insb
in
mov
cmpsl
out
add
pop
cmpsl
add
fucom
mov
inc
cmpsl
xchg
push
cmc
add
cld
jecxz
xor
cmp
add
cltd
mov
jns
loopne
jb
outsl
dec
pop
sub
stc
push
xchg
outsb
test
dec
movsl
pop
push
scas
inc
mov
adc
into
and
ds
push
in
xchg
outsb
test
dec
movsl
pop
push
scas
inc
mov
adc
into
and
ds
in
xchg
outsb
cmpl
scas
inc
mov
adc
into
adc
jge,pt
int
xchg
outsb
xchg
jle
dec
and
adc
mov
bound
add
xor
and
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
lds
inc
add
and
sbb
aad
lds
xchg
rolb
push
adc
je
and
jb
push
aad
lds
xchg
mov
movsl
loop
or
jne
cmp
push
js
xchg
lds
negb
lret
pop
inc
jb
push
xor
or
push
lea
iret
cli
mov
mov
loop
cs
add
enter
and
adc
or
mov
loop
pop
push
add
rorb
add
adc
push
aas
aad
xchg
andb
inc
jnp
repnz
xchg
dec
inc
std
push
int
jno
push
sub
push
and
jl
dec
or
inc
movsl
or
mov
push
std
xchg
or
or
dec
in
shr
shlb
mov
inc
jbe
lret
cmc
fmul
out
jae
xor
cli
adc
orb
loope
test
mov
movsb
in
add
and
jb
jnp
xchg
lds
xchg
lret
mov
movsl
jecxz
adc
jo
push
sub
push
pusha
and
inc
pop
mov
mov
loope
leave
rcr
rorl
add
dec
jo
popa
or
push
pop
push
xchg
test
xlat
andb
xchg
mov
add
push
inc
addr16
popa
add
aad
lds
xchg
rolb
loop
adc
jne
and
jb
aad
lds
xchg
rolb
loop
adc
clc
mov
and
push
faddl
sarl
or
xchg
and
add
icebp
xchg
in
lods
in
inc
addr16
jmp
pop
add
out
cltd
int3
pusha
adc
dec
pop
gs
pop
jmp
in
jne
jle
xchg
scas
pop
jne
push
jmp
add
mov
outsb
cld
xor
mov
mov
ret
lcall
hlt
aad
sub
mov
xchg
xchg
jb
sti
popf
out
xchg
imul
adc
stos
out
mov
iret
lea
or
mov
arpl
xchg
fdivr
rorb
in
sub
popa
sbb
cs
sbb
daa
movsb
xchg
mov
rclb
pusha
lock
ljmp
inc
mov
add
jmp
adcl
and
push
pop
or
cmpsl
sub
add
mov
call
dec
lds
inc
and
sahf
fld
mov
int
scas
out
mov
insb
aaa
leave
dec
add
sbb
hlt
dec
cmpsb
sub
leave
or
daa
js
popa
mov
sbb
ret
bound
and
lods
xor
mov
nop
rcll
out
in
mov
gs
dec
incl
mov
and
xchg
das
ljmp
int
mov
adc
decl
in
pop
and
sub
aas
push
insb
and
clc
int
loope
pop
cmp
nop
xor
into
xor
les
xchg
test
dec
cmpl
popa
and
cld
scas
mov
imul
xchg
stos
clc
mov
xchg
add
out
setge
mov
fmulp
sbb
mov
iret
adc
cmp
push
mov
pop
jl
or
orb
xchg
sti
and
test
push
test
inc
mov
std
or
xchg
xchg
mov
mov
movsb
pop
popf
lahf
ljmp
jle
push
jo
shr
cmpsb
mov
push
pop
jle
out
adc
stc
stc
in
sub
dec
aaa
out
sub
or
and
and
in
push
cli
addr16
lret
pop
push
imul
xchg
add
jmp
mov
sbb
jp
cmp
dec
cld
cmp
xchg
inc
dec
mov
mov
mov
lods
or
mov
jge
cmp
repnz
adc
sub
inc
sbb
lea
inc
ljmp
add
aam
xor
arpl
imul
sbb
pop
mov
mov
cmpl
cmp
mov
loop
js
mov
adc
into
xlat
test
cmp
add
outsb
rcr
xchg
cmpsb
popf
les
leave
shll
les
sbb
jns
mov
xchg
or
fwait
lahf
outsb
pushf
icebp
mov
xchg
cwtl
jno
in
xor
outsb
out
test
pop
add
sahf
loope
cmc
arpl
dec
stos
mov
fistl
lcall
inc
sti
in
sbb
cmp
push
push
loopne
lods
stos
mov
or
sub
aam
mov
repz
ficoms
roll
data16
cmp
loope
iret
push
movsb
outsl
xor
add
xor
push
sub
pop
repnz
ds
movsb
lods
or
xchg
bound
push
in
or
in
push
push
in
jno
int
cmp
fs
or
fiadds
xchg
das
xchg
sub
mov
pop
js
jmp
or
aad
or
int
popa
inc
cmp
dec
push
lods
mov
sbbb
and
adc
mov
cmp
int
dec
xor
adc
sub
mov
outsb
popf
cli
loope
add
dec
mov
fcom
xor
jae
aaa
sub
ficompl
sti
inc
push
jnp
clc
jg
xchg
rol
jb
push
push
fdivr
and
push
stc
xor
dec
xchg
sub
scas
mov
adc
lea
shll
push
repz
or
es
sti
stos
jo
mov
sbb
mov
cltd
pop
mov
sub
cli
cmp
cmp
cmp
fcoml
inc
xchg
xchg
mov
lea
push
into
in
aam
push
clc
shl
sub
sbb
in
adc
pop
inc
sbb
dec
ret
xchg
mov
mov
push
outsb
loopne
daa
jg
pshufw
adc
or
cmc
test
push
inc
jne
cmpsl
outsl
cld
int3
jbe
aaa
lahf
imul
adc
jp
insb
movb
inc
mov
movl
lods
out
mov
test
std
jg
pusha
add
sub
imul
out
sub
lods
sahf
scas
enter
sub
mov
aad
sbb
mov
add
push
sub
push
shrl
ss
int3
and
subw
das
xor
mov
inc
adc
xlat
xor
jl
test
mov
or
inc
int3
mov
add
xlat
mov
dec
inc
shr
xchg
jns
fwait
movsl
into
jle
in
push
or
sahf
mov
mov
pop
ret
js
es
movsl
adc
mov
mov
mov
mov
inc
pop
ds
sbb
push
lret
xchg
push
mov
pop
inc
and
inc
dec
xor
push
adc
pop
dec
stos
sub
and
aad
sahf
jge
cmpb
fs
test
das
loope
adc
mov
push
xchg
and
ret
mov
ret
mov
sub
mov
jp
inc
cs
test
push
and
jge
cld
shll
lcall
mov
fidivs
jmp
pushf
and
in
outsb
loop
ret
out
pop
adcb
cmp
add
pop
bound
mov
xchg
popf
cbtw
popf
hlt
push
sbb
repz
es
scas
cmp
sub
lods
aas
cmp
cmp
push
dec
cmp
test
cmpsb
rclb
adc
lahf
arpl
xor
mov
ret
pop
push
pop
push
mov
imul
shl
inc
stos
push
movsb
cmp
dec
loopne
rorl
cmc
add
xchg
jle
adc
mov
sbb
dec
and
pop
ret
pusha
jmp
inc
das
jo
sub
or
iret
adc
sti
insl
jmp
shll
outsl
or
pop
inc
jbe
fwait
das
mov
fs
aas
insl
and
andl
cld
roll
sub
adc
or
push
inc
inc
mov
mov
cmpsb
movsb
inc
jnp
mov
pop
xchg
pop
mov
push
sti
xchg
and
rcr
out
frstor
adc
jbe
mov
mov
test
cmpsl
icebp
clc
xchg
call
dec
jl
cmp
jb
jecxz
jae
jbe
jb
push
xchg
test
divb
adc
clc
adc
push
and
inc
enter
and
stos
sarb
push
mov
fsub
aad
fidivrl
dec
cmp
nop
std
outsl
lods
pop
lods
lea
fs
push
cmp
popa
or
jl
mov
out
int3
scas
in
xor
jmp
adc
jle
push
cmp
xchg
mov
jle
ret
mov
jmp
jne
lcall
xchg
add
push
into
jnp
pop
shlb
mov
mov
or
sbb
push
out
push
mov
test
outsb
shl
mov
dec
scas
xchg
adc
xchg
dec
jbe,pt
inc
push
pop
jmp
mov
decb
xchg
ficoms
movsb
mov
bnd
repnz
mov
data16
xchg
mov
or
mov
lods
pop
scas
mov
outsl
xchg
cwtl
pop
cltd
mov
divps
push
mov
cmp
addr16
fucompp
popw
xchg
jae
fadds
out
das
mov
mov
gs
sbb
lea
cwtl
mov
add
mov
xor
pusha
and
dec
add
outsl
data16
test
fldt
js
adc
sub
shl
shl
inc
and
jb
xchg
mov
aas
sbb
mov
jmp
je
mov
push
lea
mov
leave
jg
and
jl
outsl
mov
mov
data16
xchg
and
das
roll
mov
dec
inc
sub
xrelease
pop
addl
sub
mull
repz
and
dec
sub
in
das
sbb
stos
or
jo
pop
out
aas
mov
outsl
and
sbb
das
pop
mov
pop
adc
das
outsb
mov
aam
rorb
movsb
pop
mov
sbb
cwtl
popf
push
inc
mov
xchg
rorb
xchg
int
and
sahf
out
aaa
mov
sbb
gs
jnp
pop
inc
popf
push
adc
dec
sub
fwait
inc
push
xchg
add
movsl
sbb
cmp
popa
sub
sahf
in
sbb
sub
in
js
mov
push
xchg
mov
nop
mov
mov
cmp
adc
int3
xor
mov
pop
rcrb
cmp
movsb
cmp
test
nop
jge
push
inc
add
fldcw
cltd
cmp
pop
push
andl
in
sbb
xchg
xchg
loop
mov
pusha
push
pushf
gs
and
sti
lcall
pop
pop
ljmp
pusha
mov
test
ss
dec
push
cltd
lock
arpl
hlt
jnp
addr16
popf
clc
push
je
arpl
and
lret
in
and
or
add
xchg
shrl
lock
mov
push
xor
push
cmp
test
and
insb
xlat
mov
cmp
repnz
xor
cli
xor
decb
loop
or
aam
js
shl
pusha
jmp
pop
mov
cli
mov
xchg
sbb
insb
repnz
or
sbb
sub
pop
inc
lret
or
and
scas
jg
dec
jp
cmp
repz
jae
inc
push
mov
hlt
rolb
jno
mov
in
loopne
ds
add
jb
adc
cld
jg
lret
test
pop
cmp
insl
mov
ljmp
and
fsubs
cmc
fcoms
insl
jo
xor
add
lea
jg
inc
xchg
sub
add
cmc
lahf
jnp
pop
cld
pop
ret
imul
or
sbb
aam
and
mov
cmp
and
mov
rorl
jle
mov
outsb
daa
push
or
bound
cmpsb
or
mov
adc
int3
frstor
in
fwait
stos
out
test
add
out
fdivs
test
repnz
lods
cwtl
mov
push
shrb
dec
sahf
icebp
scas
std
pop
jge
dec
inc
sub
cmp
and
aad
mov
hlt
inc
xchg
sahf
loope
mov
pop
inc
dec
dec
inc
scas
push
dec
push
repz
rcr
insb
aas
adc
out
or
test
xchg
mov
and
sbb
rolb
stc
flds
or
sbb
inc
stos
xlat
aam
jg
mov
xor
jg
push
pop
pop
push
dec
dec
sbb
addr16
and
das
or
fs
xchg
js
adc
dec
test
push
mov
test
fdivr
xchg
notl
nop
fildl
fsub
movl
jg
adc
jno
test
aad
and
add
push
bound
stos
dec
pop
lret
sbb
pop
push
shlb
pushf
lret
sub
or
test
dec
insb
mov
push
adc
ljmp
cmp
dec
xchg
add
cmpsl
sub
fistpll
movsl
xor
fdivr
sub
inc
mov
cwtl
cmpsb
jge
repnz
mov
mov
mov
sbb
fsubrs
into
movsb
xor
mov
xor
les
outsb
push
add
inc
orb
pop
lods
and
cmp
xchg
mov
sbb
mov
push
scas
inc
movsb
jl
mov
jecxz
sub
ja
aad
cs
sub
leave
adc
fcmove
das
icebp
jno
jmp
outsl
test
or
push
sub
mov
sub
popf
ror
rclb
mov
test
pop
shlb
cmp
movsb
cmpsl
sub
cmp
push
lcall
rorl
test
inc
inc
xor
ficoml
orl
leave
out
loopne
jl
pop
mov
cmp
icebp
pop
mov
sti
dec
jb
xor
ljmp
nop
cmp
hlt
fnstsw
pop
and
aam
xor
inc
pop
cs
lock
adc
out
fsubrl
cmpl
cmpsb
mov
cmp
ret
sbb
pop
into
ror
xor
nop
inc
add
test
lcall
outsl
push
lret
aam
nop
pop
and
jle
stos
mov
sub
outsb
adc
adc
jno
hlt
push
cmpsl
jp
mov
stos
sub
fwait
cs
jb
sub
fcmovne
inc
mov
aad
cmp
pusha
lahf
mov
cmp
in
orl
xchg
sbb
lret
jge
sub
movsb
sbb
add
addr16
inc
cmpb
stos
jne
or
mov
sub
cmovns
fcomip
in
inc
aas
xor
xor
je
inc
pop
cmp
cmpsb
pop
mov
out
xor
fnstsw
shll
lahf
mov
lea
test
cmpsb
push
mov
stos
bound
loope
jns
insl
int
mov
pop
xchg
xlat
sub
jb
outsb
dec
ja
fnstsw
idivb
lret
cmp
fisubrs
mov
lods
out
push
pushf
scas
inc
mov
ss
cmpsb
adc
out
imul
popa
fidivrl
insb
test
fs
xchg
inc
pop
iret
stos
icebp
pop
aaa
push
fildll
int
mov
sub
fcoms
pop
sub
aam
das
adc
mov
jne
push
pop
in
jnp
cs
sub
xchg
xchg
dec
bound
cmp
test
sub
pop
sub
outsl
andnps
ds
stos
inc
pop
mov
int
sti
mov
shl
movsl
ja
add
lahf
dec
cmp
xlat
dec
mov
lds
push
xchg
push
ja
xchg
and
cmpsb
lods
sbb
mov
lock
cltd
mov
cmpsb
jae
push
rcrl
lcall
jb
ss
xchg
pusha
push
in
or
xor
cmp
mov
dec
ss
cmpb
mov
mov
jb
inc
pusha
inc
sub
idivb
mov
test
les
ljmp
sahf
mov
add
jbe
sbb
cs
ja
sbb
adc
hlt
fmul
xchg
out
pop
mov
icebp
int3
jmp
sbbl
adc
test
es
lcall
cvttps2pi
mov
rcll
sub
je
mov
add
jl
jl
mov
jnp
addb
ja
movsb
jne
ret
or
movsl
in
or
mov
cmpsb
insb
push
inc
push
adc
sbb
les
adc
inc
mov
pop
arpl
in
mov
pop
pop
mov
pop
jno
out
mov
inc
or
adc
inc
mov
sti
repz
cmc
mov
loope
jmp
sub
inc
xor
dec
jae
std
xor
mov
stos
aas
div
sub
mov
jl
pop
mov
nop
gs
or
inc
jmp
mov
cmp
inc
ror
mov
mov
dec
push
xorb
cmp
mov
mov
or
sbb
pusha
xlat
and
inc
aaa
andl
xchg
test
daa
pop
fstpl
jl
add
gs
mov
pusha
jp
inc
stos
imul
cmp
pop
mov
mov
pop
cmp
xor
and
xchg
lret
sbb
xchg
pop
xchg
pop
jecxz
dec
mov
or
xor
rcrb
gs
jg
xor
outsb
adc
dec
pop
dec
je
inc
push
and
add
testl
movsb
int
push
push
in
xor
mov
test
nop
mov
rcll
lret
xor
add
in
decb
popf
aas
lds
outsb
dec
pop
cmpsl
or
push
cwtl
repnz
pushf
mov
out
in
sub
cmp
sub
rolb
sub
pop
inc
daa
call
add
jl
and
pushf
pop
aas
jp
filds
jo
pop
adc
jae
lock
adc
aas
gs
sub
push
mov
push
ret
imulb
jle
ret
and
arpl
or
ja
ds
inc
pushf
clc
mov
or
mov
dec
stos
sbbb
adc
mov
dec
ds
je
cli
outsb
push
sub
jno
sub
out
pop
push
shrl
mov
mov
je
xchg
js
mov
aad
add
adc
das
aaa
test
movsb
pop
sarl
js
push
cmpsb
inc
and
pop
sub
pop
push
roll
stc
or
out
pusha
and
inc
or
jge
fcoml
sbb
out
push
in
adc
mov
or
mov
jmp
cmpsl
lds
mov
out
shr
xchg
adc
addr16
mov
lcall
sahf
adc
inc
std
insb
movsl
sbb
je
lret
mov
inc
stos
ljmp
out
pop
loope
in
loop
jae
xchg
adc
lahf
lods
pop
nop
xorl
in
inc
aad
es
mov
mov
test
fimuls
out
push
push
dec
outsl
xchg
out
fsubl
jge
test
inc
dec
adc
mov
mov
stc
sub
sub
cmp
int
jns
cmp
pop
add
inc
mov
pop
add
add
outsb
insl
iret
and
push
mov
popf
and
mov
sbb
sbb
shrb
or
xlat
ret
xchg
arpl
or
cld
test
add
mov
sub
idivl
cmpsl
xchg
subb
addl
xchg
insl
fidivrs
inc
sahf
jnp
pop
mov
xor
mov
aas
gs
pop
add
mov
jb
pop
hlt
inc
jnp
insb
leave
and
push
pop
or
jge
jns
sub
enterw
push
pop
nop
hlt
mov
shlb
fisubrl
xchg
dec
into
cli
test
lret
or
mov
das
jbe
subl
push
es
hlt
mov
mov
jl
xchg
push
jnp
cld
inc
sub
cmpsl
stc
mov
jbe
jecxz
icebp
add
andl
add
scas
jecxz
push
add
mov
mov
mov
dec
les
sbb
inc
cmp
and
inc
and
leave
sahf
push
fnstenv
sarl
sub
pop
sahf
movsb
mov
xlat
cmp
inc
mov
sub
mov
std
loope
cld
cli
sti
gs
mov
js
cmp
cmp
mov
sub
bnd
adc
xchg
in
pusha
jns
pop
ret
push
cmpsb
inc
dec
scas
cmp
mov
mov
enter
dec
jecxz
loopne
popa
es
xchg
and
and
rcrb
fwait
sbbb
and
pushf
xlat
inc
repnz
repnz
push
fs
add
ljmp
jle
xchg
cmp
and
outsb
xchg
movsb
xor
cmpsb
jbe
sbb
xchg
cwtl
pop
pop
adc
inc
xchg
sbb
lea
pop
and
dec
xchg
repnz
adc
pop
fyl2x
daa
jp
adc
pop
push
inc
xchg
fidivrl
dec
cmc
pop
mov
cmp
jns
mov
and
add
jge
pop
les
ret
addb
mov
mov
jne
sarb
xchg
adc
rcl
sbb
imul
add
gs
enter
push
sbb
in
xchg
out
mov
push
inc
repnz
mov
mov
cmp
or
cmpsb
das
imul
out
or
gs
popa
sub
or
adc
test
repnz
pop
jns
pushf
sub
or
sub
js
lea
daa
mov
push
xor
jo
enter
mov
ds
aas
leave
call
lods
xchg
mov
inc
xor
add
mov
stos
loopne
arpl
adc
insb
mov
xor
fldcw
lcall
ja
mov
je
add
sub
dec
fcmovnb
lods
outsb
scas
out
movaps
inc
cli
fwait
lds
cmp
mov
scas
es
jb
sub
ja
ja
stos
push
sbb
stos
in
mov
and
push
dec
xchg
jp
sub
xor
setg
sub
sbb
and
lcall
cwtl
and
fistps
enter
add
xchg
xchg
mov
mov
adc
mov
jmp
cmp
rcl
sbb
data16
loop
sti
shlb
sbb
imul
sub
dec
ficoml
mov
pop
rcrl
lock
loope
out
sbb
mov
mov
cld
cmpsl
shll
and
lret
pushf
fwait
outsb
push
or
dec
mov
popa
es
mov
bound
or
hlt
frstor
xor
pop
js
in
xor
adc
jb
aad
lds
xchg
rolb
loop
adc
jne
and
jb
aad
lds
xchg
rolb
loop
adc
jne
and
jb
aad
lds
xchg
rolb
out
push
inc
push
je
and
jb
mov
pop
mov
aad
pop
or
popf
cmp
movsb
mov
sbb
mov
xor
and
push
ljmp
xchg
sub
aam
les
dec
in
adc
add
xor
and
push
ljmp
xchg
sub
aam
les
dec
in
sub
and
push
test
scas
adc
sbb
dec
mov
loope
push
divl
push
adc
jae
push
scas
pushf
mov
into
lods
jb
mov
pop
test
cmp
das
fs
and
lea
push
and
inc
jg
icebp
sbbl
shl
adc
mov
xor
stos
push
xchg
ja
mov
cmp
test
or
fistps
das
adc
fildl
mov
inc
lds
lret
cmc
pop
and
push
lss
cld
add
test
jne
xor
adc
jl
mov
sarl
aas
dec
popa
in
jmp
adc
stos
stos
addr16
popa
dec
notb
movsb
jp
push
pop
hlt
dec
in
adc
add
xor
and
push
ljmp
stc
pop
push
jae
arpl
jp
sbb
mov
pop
repnz
sti
cmp
cmp
pop
aad
into
jg
data16
das
ljmp
sti
push
sti
cmp
pop
les
lock
data16
mov
dec
in
adc
add
xor
and
push
ljmp
xchg
sub
aam
les
dec
in
adc
add
xor
and
push
ljmp
xchg
setno
adc
mov
mov
rcrb
fwait
push
or
mov
adc
push
test
sub
jle
andl
jnp
movsl
and
xor
mov
mov
add
popf
js
mov
fbstp
int
push
test
in
lea
sub
push
xchg
xchg
mov
je
fiaddl
mov
pop
jle
sarb
nop
popa
pop
and
xchg
cmc
inc
dec
movsb
xor
aam
out
jns
icebp
add
mov
adc
jp
fistpll
out
in
or
cmp
aad
test
mov
adc
mov
clc
cmp
cmc
and
jecxz
aad
or
stc
cmp
dec
mov
out
mov
mov
mov
shll
or
cmp
imul
jno
sub
je
mov
pop
movsl
test
cli
sub
lock
cld
cs
dec
or
cld
pop
jae
sarb
daa
dec
sbb
sub
jl
loopne
shrl
jmp
and
sbb
pop
outsb
addr16
push
jb
lea
mov
xorb
mov
add
lods
adc
xor
pop
movsl
into
sub
addr16
dec
imul
loop
pop
xor
xchg
sahf
std
popf
pop
movsb
hlt
js
test
lds
repz
xchg
mov
jge
in
fldcw
dec
cltd
repnz
popf
push
xor
in
inc
int3
mov
ljmp
stc
test
sub
rcrb
cmp
or
and
or
andb
dec
dec
call
sub
icebp
icebp
sub
sbb
xchg
int
test
fbld
jge
enter
lcall
and
jns
lret
stos
push
sarl
xchg
jmp
jge
sahf
adc
int
sbb
xor
inc
pop
lahf
fsub
in
and
popf
nop
jns
jnp
test
arpl
roll
cmpsl
hlt
call
xchg
xlat
sbbl
scas
mov
add
into
icebp
adc
mov
jae
test
or
and
dec
stos
cld
jne
pop
cld
lock
cmp
insb
adc
addl
sbb
cltd
sub
arpl
pushf
in
cmp
stos
sbb
cmpsl
insl
test
mov
mov
add
cltd
mov
cmp
xchg
adc
lret
loop
cmp
mov
dec
sub
ljmp
push
jmp
inc
int
bound
push
test
lock
xchg
xor
in
cmp
push
enter
push
loop
pop
sti
in
shl
lea
adc
and
pop
push
out
sub
jne
filds
fcoml
add
push
mov
sti
and
pop
in
ss
push
sbb
int
pop
sbb
jmp
daa
dec
mov
daa
in
pop
jle,pn
mov
xchg
cmp
test
sbb
add
popf
jmp
popa
mov
xchg
mov
push
insb
sbb
sub
test
int
jb
idivl
xor
mov
push
out
xor
popa
nop
sti
xor
lea
push
cmpsl
sbb
fcomi
xor
mov
xor
pushf
inc
dec
mov
mov
adc
imul
bound
pop
test
xchg
std
xor
adc
addr16
and
insb
adc
mov
icebp
push
daa
arpl
mov
jbe
daa
ret
loope
cs
aad
pop
xchg
jo
xchg
xlat
fxam
das
jg
loopne
adc
add
pop
xchg
push
call
aas
notl
mov
jns
adc
push
std
mov
xchg
sub
insl
lds
jmp
cmp
pop
adc
sahf
repz
mov
int
jmp
lods
popa
and
mov
cltd
push
lea
xchg
in
jmp
push
imul
arpl
jmp
inc
mov
mov
addb
xchg
inc
mov
subl
ds
push
pop
ss
lea
test
popf
daa
js
mov
fadds
cmp
add
xchg
pop
pop
enter
movsb
hlt
in
bound
ror
push
scas
ljmp
stc
push
fisubs
mov
sbb
lock
inc
adc
lahf
xchg
xchg
or
xchg
add
and
inc
mov
sbb
in
icebp
test
xor
mov
in
mov
mov
xorl
sbb
orl
arpl
mov
lcall
test
and
xchg
insb
xchg
jns
push
pop
aaa
filds
push
leave
cmpsw
fildll
or
ss
cmp
mulb
aad
dec
dec
outsb
push
inc
or
pop
insb
xchg
mov
jp
xchg
mov
push
xor
dec
int
push
mov
sarb
ud1
ret
roll
mov
push
ds
push
push
aas
mov
sahf
movsl
jg
data16
enter
mov
lahf
adc
mov
cli
cmp
loopne
pop
inc
ret
inc
loope
xchg
dec
sub
lock
int
xchg
adc
inc
jb
fcoml
sbb
mov
dec
lock
add
push
or
insb
jne
fldl
pop
mov
les
dec
iret
fisubl
jbe
add
xor
xchg
cmpsb
inc
pop
inc
sbbl
pop
mov
mov
sbb
pop
pop
cmpsl
je
nopl
push
faddl
out
push
mov
dec
jb
xor
into
inc
test
jmp
pop
outsl
sahf
clc
cmp
and
ss
lods
mov
push
jnp
loop
js
pop
cmpsl
pushl
movsl
dec
test
ja
sub
dec
or
punpckhwd
out
push
inc
stos
sahf
mov
jp
pop
cwtl
hlt
push
cmp
push
test
mov
fisttpl
mov
ljmp
and
lock
xchg
imul
xchg
loopne
lock
cld
out
cs
or
lret
add
gs
mov
mov
mov
mov
mov
in
je
fs
sub
sub
addr16
mov
icebp
inc
xor
js
scas
or
xchg
and
lock
nop
rcll
out
cld
mov
cwtl
and
jmp
fs
sbb
push
xor
mov
mov
lret
jle
dec
sub
mov
pop
jmp
in
pop
jge
push
or
mov
gs
jnp
mov
mov
mov
dec
icebp
push
inc
cmp
sbb
inc
inc
repz
test
sbb
mov
fcomps
mov
out
pop
mov
hlt
std
inc
fidivl
inc
push
lea
fnstsw
push
xchg
cmp
cmp
mov
xchg
xchg
lahf
mov
pushf
ficoml
insb
jo
sub
xchg
loop
fptan
aam
and
imul
cwtl
out
or
push
sub
pop
lods
int3
xchg
add
dec
or
jl
push
outsb
in
dec
adc
push
add
movsl
sbb
sbb
push
and
imulb
inc
fsubrs
nop
js
out
push
lock
in
jle
fdivrl
xchg
xchg
aaa
cmp
xchg
loope
pop
and
gs
xor
cmp
jae
hlt
push
adc
xchg
dec
xchg
lds
sub
inc
push
mov
aad
hlt
sbb
add
pop
pop
lds
mov
sbb
int3
fucomip
push
in
xchg
mov
cmp
push
cli
stc
mov
mov
inc
add
stc
or
pop
dec
lods
loopne
pop
inc
xlat
mov
outsl
sub
int3
and
cmpsl
outsl
arpl
add
mov
into
push
repnz
mov
or
inc
jb
jae
push
int
adc
lahf
xlat
dec
gs
cwtl
mov
mov
jne
jp
icebp
mov
int
push
lahf
pusha
rcrb
cmp
mov
insb
popa
clc
pop
jae
lock
scas
test
xchg
fwait
sub
push
arpl
push
pop
negb
pushf
pop
cltd
sbb
std
inc
jecxz
mov
cli
push
int3
sbb
xchg
lret
dec
mov
pop
call
and
push
cltd
pop
jle
fistl
mov
dec
jle
leave
mov
lods
fisttps
jo
adc
movsl
out
arpl
mov
dec
scas
xchg
imul
sub
lea
imul
mov
insb
mov
or
ds
mov
sub
lret
xchg
aad
push
imul
inc
push
nop
mov
sub
pop
xchg
or
iret
jb
mov
mov
fnstcw
cli
xchg
inc
fucomi
mov
and
dec
mov
ja
hlt
sbb
push
cmp
jecxz
cli
rcll
dec
lret
mov
je
shl
mov
xchg
ret
sub
or
cld
or
dec
int3
pop
xor
or
icebp
data16
popl
cmp
out
jbe
icebp
inc
movsl
mov
pushf
pop
ret
dec
pop
sub
xor
xchg
mov
mov
adc
sarb
inc
mov
sbb
sub
les
cmp
leave
pop
mov
cwtl
jmp
sbb
fnstenv
jle
loopne
cmp
or
dec
pushf
nop
loope
frstor
sbb
pop
mov
inc
into
xor
cmp
sbb
xor
or
add
cld
xor
sbb
sbb
xor
xor
mov
sbb
xchg
mov
out
insl
stc
into
mov
inc
mov
scas
cmp
imul
shll
jae
mov
jecxz
xor
inc
sub
leave
inc
push
push
pop
xor
scas
aaa
out
mov
push
and
xchg
mov
push
push
mov
inc
inc
or
xor
pop
dec
std
dec
into
cmovne
in
rolb
lcall
nop
sbb
mov
push
or
fsubs
shlb
dec
in
mov
je
adc
bound
inc
mov
cmc
popf
hlt
lret
jg
add
sub
push
leave
and
jmp
je
je
aaa
xor
mov
mov
test
roll
je
stos
lahf
mov
push
sbb
ret
roll
mov
cwtl
adc
fwait
and
iret
xor
sti
adc
pop
xchg
fsubrl
into
adc
fdivs
push
std
sub
mov
mov
out
popfw
out
enter
je
sub
mov
jge
enter
movsl
cmp
pop
mov
push
inc
cs
stos
iret
inc
test
and
testl
test
lods
and
daa
div
pop
enter
jge
rcl
jp
sub
fcoms
das
xor
jle
ss
fdivrl
xchg
jns
cli
out
and
sahf
cld
rorl
mov
or
icebp
or
jnp
cmp
or
inc
mov
sti
push
leave
jno
sbb
dec
movsl
pop
cmp
loopne
sub
dec
frstor
int3
lcall
inc
mov
arpl
test
insl
mov
shlb
cltd
sarb
jg
jle
repnz
and
imul
xchg
icebp
add
and
push
xor
lods
ljmp
mov
arpl
lcall
lcall
stos
pop
pop
or
dec
pop
in
arpl
dec
jne
jbe
xor
mov
js,pn
and
xor
insl
cmpsl
aas
stos
or
mov
shlb
add
bound
xor
inc
enter
sub
jne
inc
xchg
pushf
mov
addl
push
sub
jae
scas
adc
fidivrs
adc
or
adc
push
int
jb
xlat
ja
aas
pop
stos
xor
xchg
rcrb
in
sub
sbb
imul
mov
push
jnp
xchg
cmp
and
popf
lods
pop
pop
loop
and
addr16
movsb
sarb
ret
mov
and
xlat
fmul
dec
mov
test
push
pop
popf
incl
push
mov
loop
or
in
jmp
test
mov
xor
out
mov
sbb
lods
xor
fxch
cli
lock
dec
adc
sub
lods
xor
call
stos
pop
pop
dec
ljmp
jne
ss
adc
bound
sarl
pop
jbe
les
mov
rcrb
cmp
pop
add
shll
int
adc
mov
or
jne
or
out
jmp
mov
in
jb
gs
jae
adc
push
das
xchg
lods
adc
pop
adc
lret
mov
test
je
loopne
stos
mov
xor
push
push
push
ficoml
lock
xlat
icebp
pop
push
jle
fucom
pop
es
pop
mov
in
jge
movsb
stc
test
jl
outsl
repz
cmpsl
and
jl
xchg
sarb
ret
aam
sahf
scas
in
sbb
or
in
push
lock
add
testl
sbb
testl
adc
notl
mov
ret
inc
cmp
pushf
push
stc
ds
inc
fsts
cmp
push
mov
and
and
or
or
jg
and
mov
in
and
stos
sbb
lds
scas
fiadds
js
xchg
mov
das
adc
aas
xor
adcb
fwait
ljmp
sbb
push
and
test
lcall
or
jne
push
out
sbb
addr16
mov
outsl
lods
or
and
mov
enter
mov
fdivrs
mov
fldl
or
and
adc
pop
les
push
jp
xchg
jle
insb
call
outsb
xchg
aaa
mov
mov
adc
popf
ja
fwait
xor
xor
jmp
dec
inc
cld
dec
cli
ljmp
insl
lea
inc
aaa
jne
prefetcht1
cltd
gs
int
dec
mov
mov
out
jno
jmp
ds
jbe
outsb
fsubrs
sub
scas
outsb
in
loop
cli
mov
sbb
jns
mov
pop
push
pop
or
push
rcrb
sbb
sbb
daa
mov
sbb
mov
inc
mov
insb
mov
bound
sbb
adc
std
cmp
das
sub
and
xor
mov
cld
xchg
push
sub
ljmpw
aaa
xchg
dec
fcmovnu
jno
andl
jl
jle
sub
mov
sbb
mov
loop
sbb
cltd
sub
add
mov
aad
insl
pop
jp
pop
sub
paddsb
sub
in
scas
test
xor
ret
mov
and
outsb
or
pop
dec
xor
adcb
pop
in
sbb
int
adc
call
sub
pop
mov
lea
or
inc
or
cwtl
cmp
jg
xchg
les
xchg
jnp
aas
cmp
push
mov
mov
ficomps
and
pusha
xlat
cmp
jge
inc
rorb
inc
addr16
fwait
das
jo
mov
scas
push
mov
add
dec
cmp
aaa
fdivr
mov
pop
sub
cwtl
mov
xor
push
mov
cmp
mov
inc
mov
mov
xchg
inc
aam
xchg
in
or
sahf
or
add
jne
stos
stos
popa
lret
sub
bound
movsb
in
stos
fld
popa
xchg
shlb
mov
mov
mov
jge
stos
dec
mov
pop
in
lea
shrb
mov
pop
leave
lret
push
test
mov
jp
test
lods
mov
push
pop
mov
mov
fs
outsl
jne
dec
orb
sti
push
push
movsl
xchg
shl
shr
shlb
jae
sub
jae
mov
imul
ljmp
test
sbb
add
pop
pushf
pop
ds
cmpsl
pop
sbb
jnp
movsl
inc
aaa
and
mov
pop
arpl
rcrb
test
jne
test
jmp
pop
cs
iret
arpl
xor
fstps
loope
add
push
push
and
pop
jns
and
jecxz
cmp
inc
es
mov
sbbl
fwait
dec
outsl
cmp
cmpsb
std
inc
pop
add
dec
mov
es
repz
mov
psubsb
jp
arpl
pusha
popf
aad
dec
orl
in
stos
sbb
scas
push
xchg
cs
sub
xchg
aas
ljmp
clc
sbb
fst
mov
jne
cmp
adc
cmp
push
js
outsl
js
pop
fcompl
popf
dec
push
rcrl
add
pop
push
inc
mov
into
mov
aaa
lds
fisttpl
out
test
icebp
sub
push
pop
and
movsl
xchg
xor
mov
dec
clc
orl
and
ret
mov
lods
out
mov
mov
mov
sub
pop
push
mov
test
pop
pop
mov
xor
push
loopne
les
add
popf
out
add
addl
sbb
mov
add
popa
push
cmpsb
in
mov
jb
popa
dec
pop
das
fbld
push
sub
mov
mov
jae
jmp
stc
add
loopne
pop
outsl
and
inc
scas
and
rol
and
rorl
jl
subb
pop
or
test
in
push
add
sbb
and
mov
rcrl
mov
cwtl
in
cmc
jne
popf
mov
fmull
cmp
out
mov
shrb
int3
call
shr
lds
and
sbb
loop
push
mov
pop
push
cmp
adc
fldenv
xor
outsb
sbb
mov
cli
jecxz
pop
jo
fiadds
dec
inc
mov
leave
pushf
rolb
cmp
mov
and
sub
inc
xchg
movsb
repz
stos
xchg
mov
adc
lock
add
movsb
pop
fildl
xchg
and
pusha
dec
ja
leave
or
sbb
cltd
push
cmp
das
jno
cmp
std
jb
cmp
lea
sub
push
jle
movsl
fiadds
loop
jecxz
dec
push
aas
inc
scas
inc
cmpsb
loope
aas
xor
add
push
outsb
xchg
jae
ret
mov
mov
mulb
pop
xor
cmp
movsb
lods
imul
dec
push
in
ss
jle
popf
xchg
enter
adc
dec
ret
jl
in
or
jne
push
push
add
fimuls
sub
clc
inc
xor
lods
jecxz
fiaddl
cli
shrl
xorb
and
sbb
jo
cld
sub
xor
cmc
mov
ret
cmp
daa
out
pop
fbstp
mov
inc
pop
pop
inc
icebp
cmp
push
push
jnp
add
mov
das
fs
push
inc
inc
in
lock
and
roll
mov
jecxz
and
jnp
inc
fiaddl
call
mov
or
or
adc
dec
inc
stc
sub
sbb
arpl
es
mov
push
sub
sub
lret
outsb
int
sahf
rcrb
iret
lds
cwtl
call
sbb
faddp
test
add
es
cmovbe
jnp
scas
fabs
fidivs
mov
or
add
decb
cltd
jl
clc
iret
push
push
mov
mov
cmpsb
push
push
out
test
jecxz
or
pop
clc
out
push
add
fildl
mov
push
stos
cmp
adc
dec
xchg
and
or
mov
int
mov
andb
xchg
mov
nop
icebp
and
cmp
mov
xor
sti
setge
sub
jle
les
add
xchg
std
or
shll
lds
fistpl
sub
push
xor
test
aam
stos
sub
cmp
sbb
push
ss
mov
mov
loop
fsub
add
and
sbb
arpl
sub
hlt
pusha
xchg
imul
stc
and
loop
shrl
jno
shlb
sub
xor
test
nop
push
in
into
inc
std
inc
jle
add
jp
mov
shll
add
push
and
mov
js
icebp
fs
out
mov
inc
add
iret
das
cmp
inc
xchg
sub
xchg
lock
test
mov
push
in
and
add
call
mov
mov
dec
dec
insb
dec
into
fadds
jecxz
ds
movl
movsb
jb
add
fbld
push
xchg
pusha
dec
sub
cmpsb
jge
call
fidivs
loop
push
fcoml
inc
add
pop
iret
sbb
mov
sbb
movsb
sub
das
pushf
xor
scas
mov
je
lcall
mov
pop
jge
test
xchg
xor
add
in
outsl
ja
xor
outsb
clc
flds
aaa
cmp
je
orb
add
test
sbb
push
pop
hlt
dec
in
adc
add
xor
and
push
ljmp
xchg
sub
aam
les
dec
in
adc
add
xor
and
push
ljmp
nop
stos
test
aam
les
lret
adc
add
cli
push
ljmp
xchg
sub
aam
inc
pop
je
sbb
xor
push
mov
lcall
push
fiadds
jae
arpl
adc
ret
outsb
repz
push
xchg
push
push
cs
mov
xorb
mov
sahf
add
rcrl
psllq
dec
xchg
push
subl
mov
jl
arpl
xor
ret
push
xchg
sbb
gs
insb
in
jp
bound
out
sbb
xor
jmp
insl
lret
xor
push
or
mov
and
outsb
adc
push
cld
and
sub
repnz
inc
outsl
jecxz,pn
repnz
fwait
push
fwait
test
cmova
iret
sbb
pop
cmp
xor
push
xchg
pop
inc
out
add
adc
rorb
adc
adc
fmull
pop
scas
ljmp
jl
dec
ds
arpl
es
xchg
outsb
or
and
push
jg
dec
xor
xor
inc
mov
jno
ja
push
inc
mov
jge
pop
ret
out
mov
addl
mov
out
jae
arpl
out
scas
xor
and
repz
jecxz
xchg
adc
sbb
ds
lods
inc
lcall
add
jge
jae
mov
mov
fwait
sbb
inc
mov
loop
push
mov
adc
pop
sti
addr16
inc
jmp
sub
push
mov
jno
inc
jg
mov
sbb
add
rcrl
outsb
repz
push
xchg
push
subl
mov
out
jae
arpl
xor
ret
outsb
repz
push
xchg
push
subl
mov
sub
ds
fbstp
rorb
daa
xor
es
pusha
cli
xchg
lds
push
mov
in
xor
call
pop
xchg
aam
add
ret
dec
ljmp
sub
adc
test
adc
jns
jl
fiadds
cwtl
in
call
xlat
jp
pop
and
mov
or
adc
sbb
push
push
test
cwtl
cs
in
add
pop
int
xchg
repnz
push
sbb
leave
lods
out
imul
and
dec
es
cmp
add
sti
mov
lret
pop
mov
in
outsb
mov
fldt
in
insb
or
dec
push
fisttps
stos
and
es
mov
sbb
in
adc
add
stos
mov
aam
add
mov
cli
ljmp
or
out
cmp
mov
adc
mov
es
cs
push
cmp
shrb
sbb
jbe
rorb
dec
mov
inc
repz
xchg
test
dec
stos
std
mov
insb
lds
inc
jae
inc
in
lods
xchg
lock
xor
fdivrl
std
decl
push
rcrl
inc
and
inc
insb
rcll
sbb
mulb
push
xor
lret
jecxz
inc
xor
sbb
mov
lock
cmc
mov
pop
sbb
cld
movsl
dec
sub
pop
mov
das
xchg
enter
add
out
sti
pop
rolb
jns
pop
jge
and
mov
addr16
mov
or
sub
add
mov
es
cmp
xor
pop
adc
ret
cwtl
fsubrl
mov
dec
cs
and
dec
test
mov
cltd
push
fwait
cmc
xor
ja
push
subb
rcr
add
movsb
and
mov
jne
js
shlb
push
and
mov
icebp
add
mov
aam
call
cmp
and
sbb
jb
fwait
and
mov
sahf
rcll
push
test
xchg
or
dec
fnstcw
negb
lahf
xchg
daa
int
inc
dec
jbe
adc
inc
jge
popf
pop
or
test
or
or
cmc
adc
gs
and
or
bound
imul
mov
pop
add
adc
cmp
and
add
xchg
cmpsb
pop
in
xchg
xor
mov
rorb
ljmp
notl
xlat
mov
std
lds
imul
push
cmc
push
stc
inc
fldl
jg
outsb
or
pop
inc
cmc
xchg
xor
adc
stc
mov
testl
inc
inc
inc
mov
aaa
imul
cmpb
jle
aaa
jmp
and
test
push
pusha
mov
inc
push
xor
xchg
mov
imul
int
or
inc
add
imulb
xor
mov
xor
mov
lret
and
loop
cmp
ljmp
adc
xchg
sahf
mov
sbb
imul
pusha
add
iret
jae
adc
inc
cmpl
fiaddl
add
out
dec
shlb
test
repz
xchg
xchg
test
jmp
int3
jbe
loope
and
popa
hlt
jecxz
subl
mov
push
add
les
inc
out
repz
inc
dec
inc
cmpsl
aad
std
in
nop
or
and
test
lods
loope
push
stc
jg
xchg
add
lea
or
fdivs
sub
pop
adc
aaa
data16
insb
pop
xor
aas
lods
xchg
mov
jmp
pop
push
pop
mov
pop
dec
push
dec
jl
aad
pushf
jns
adc
jle
cmp
inc
xchg
cltd
xchg
aas
nop
adc
cwtl
push
mov
inc
stos
push
push
das
sbb
push
lods
sahf
or
aam
out
jl
push
adc
aam
xchg
popf
imul
out
jmp
sahf
cli
repnz
fsubl
call
mov
inc
popa
into
cltd
push
push
jp
stos
pop
fsubrl
add
jle
jge
leave
mov
iret
push
sub
pushf
adc
dec
add
mov
inc
mov
fiaddl
jno
inc
push
cltd
sub
and
jmp
sbb
adcl
sbbb
pop
frstor
andl
push
rcrb
mov
int3
in
das
add
arpl
lds
inc
fnstcw
mov
dec
pop
mov
lret
and
lret
push
fildl
mov
ljmp
jo
pop
arpl
cmc
sub
pop
xor
and
jb
jg
enter
iret
cmp
out
pop
outsb
cmpsl
xor
inc
in
daa
pushf
pop
xor
mov
push
jg
and
cmp
ficoms
adc
jnp
fadd
adc
iret
xchg
inc
js
xchg
sbb
sub
out
jg
mov
mov
mov
loop
pop
push
dec
inc
jl
cmp
stc
gs
ss
mov
inc
jns
dec
mov
int3
call
push
dec
ljmp
loope
sbb
cld
out
inc
imul
jae
fsts
mov
jo
repnz
ret
rorl
arpl
push
xchg
inc
movb
jne
xchg
out
sub
shlb
test
lods
push
cmpb
xchg
stc
pusha
lahf
cmp
inc
test
mov
xchg
jno
fcomp
sub
les
or
mov
xchg
mov
loopne
data16
std
call
pusha
imul
mov
test
inc
es
sub
ss
push
aam
rcl
ret
xor
cmpsb
in
loop
and
jp
push
fwait
outsl
xchg
add
insb
mov
jg
hlt
loope
je
sbb
sub
cmpsb
int3
bound
sub
clc
clc
sbb
jo
cwtl
sbb
test
add
mov
xor
je
sbb
pop
ja
scas
mov
fdivl
add
scas
fld
sub
shll
adc
mov
fildl
mov
fsubl
in
std
pop
ljmp
das
dec
mov
lock
mov
add
and
xchg
in
hlt
rolb
or
mov
xlat
push
test
sub
lret
mov
push
out
repnz
cmpsl
push
jne
cwtl
gs
ss
test
popa
int3
add
mov
sbb
aaa
fstps
das
dec
xor
mov
fists
mov
adc
loope
loope
xchg
scas
dec
inc
push
loope
xchg
js
mov
dec
icebp
scas
xchg
add
adc
int3
in
xlat
arpl
mov
fimull
mov
in
cmp
sub
inc
mov
dec
inc
jg
aam
push
cmp
sub
cld
pop
sub
pop
inc
mov
ret
sub
aaa
mov
or
mov
xchg
lret
test
mov
out
test
mov
cmp
shl
out
test
and
sub
mov
js
and
cmp
dec
sub
mov
add
mov
push
or
push
inc
mov
imul
jnp
pop
sub
inc
xor
enter
mov
mov
dec
pop
bound
mov
jnp
fnstcw
sbb
out
imul
pop
sbb
mov
ss
jno
es
xchg
adc
adc
shlb
repz
js
hlt
sbb
push
sub
xchg
rcl
outsb
add
fmuls
push
popf
push
jl
movsb
push
lcall
stc
sub
ja
add
loop
out
pop
jne
rolb
in
scas
pop
mov
mov
inc
outsb
loop
mov
out
dec
cmp
sbb
adc
lock
repnz
js
fisubrl
int
lods
jns
jle
adc
dec
lods
movsl
push
jecxz
sub
inc
int
int3
das
adc
mov
jbe
cld
fmull
cmp
icebp
in
loop
dec
test
push
or
add
mov
fwait
mov
pop
push
or
ljmp
aad
inc
nop
sbb
xchg
sub
cs
pusha
pusha
add
sub
stos
les
loope
jns
dec
mov
clc
or
ja
add
mov
insl
and
pop
or
xchg
or
addr16
fnstenv
scas
call
add
inc
jbe
movsb
cmpsl
add
imul
jp
pop
fwait
rolb
cmp
sub
shrl
cld
nop
xchg
inc
mov
xchg
jbe
add
lds
popa
je
out
push
sub
dec
test
mov
adc
pop
mov
lods
fbld
xlat
adc
fsts
pop
jb
mov
jbe
shrb
cmpsl
mov
out
out
std
ss
stc
testl
popl
mov
or
aad
scas
ljmp
or
shlb
push
push
ja
fbstp
or
pop
push
cmp
repz
add
pop
or
stc
jbe
enter
and
outsl
es
mov
movb
shrl
mov
repnz
add
xchg
pushf
cmp
mov
add
adc
mov
xor
lock
sub
popf
sub
xchg
xchg
mov
mov
dec
cmp
gs
rcr
stos
lds
into
dec
jno
jb
lods
xor
xchg
popf
cmp
cmpl
xor
int3
push
inc
mov
repz
jl
dec
inc
mov
lret
or
int
scas
xchg
or
jb
cmpsb
pop
adc
std
push
out
pop
adc
das
push
push
lret
rorb
flds
mov
push
in
call
into
call
sbb
das
inc
imul
pop
and
inc
xchg
fwait
dec
and
daa
aad
mov
push
into
shll
push
pop
loop
lods
xchg
leave
sbb
mov
sbb
icebp
mov
adc
cli
cmp
ficomps
dec
xchg
inc
inc
adc
pop
ffree
scas
push
or
sub
fildl
idivl
adc
lahf
cmp
xchg
and
adc
mov
and
push
lods
imul
and
pop
mov
popa
jp
imul
adc
mov
not
popf
dec
mov
cmp
add
mov
mov
inc
fsubs
dec
add
shrb
jp
or
fwait
movsl
add
subb
and
jmp
or
adc
iret
leave
sub
mov
jbe
jp
mov
bound
sbb
ljmp
xadd
addl
mov
mov
adc
inc
mov
adc
dec
lret
fdivr
or
imul
adc
xchg
sub
cmc
adc
dec
rcrl
addr16
sub
mov
stc
repnz
adc
mov
push
cmovbe
add
inc
out
lods
mov
jp
pop
jbe
ja
popa
sub
sbb
or
loopne
xchg
pop
push
adc
inc
xchg
jl
push
rclw
mov
and
push
inc
int
jg
xor
xchg
and
inc
bnd
lea
xor
imul
inc
mov
dec
notl
adc
in
pushf
sbb
xchg
mov
lea
lret
sti
add
cs
ja
repnz
dec
test
dec
rcll
mov
cli
ss
xchg
cmp
lcall
pop
pop
imul
stc
sbb
push
xchg
adc
dec
xor
in
shll
enter
xchg
testb
sbb
fstps
jns
push
and
lods
sub
scas
aaa
or
mov
jns
rcll
ss
in
jmp
pop
mov
clc
pop
mov
dec
mov
mov
xchg
xor
xchg
insl
inc
into
aam
sub
imul
dec
out
push
mov
inc
xchg
hlt
inc
sbb
dec
out
es
xchg
repnz
sbb
push
dec
jbe
nop
xchg
pop
add
xchg
bound
or
rcrl
dec
jle
sub
mov
rol
out
movsb
addr16
lock
rorb
pop
pop
stos
fnstenv
outsb
sub
and
dec
es
mov
into
pop
xor
insb
adc
lds
xchg
sub
out
inc
sub
mov
push
xor
xchg
emms
pop
je
arpl
outsl
scas
pushf
addr16
out
insb
adc
scas
push
adcl
cli
out
ds
mov
or
dec
dec
add
mov
cs
ss
inc
add
roll
mov
jecxz
push
decl
ss
add
jno
fstps
push
insl
or
lcall
sub
outsb
push
add
sub
mov
mov
out
in
push
mov
xchg
aam
add
sbb
lret
adc
movsl
ret
sbb
inc
sahf
shlb
mov
pop
sbbb
sub
stc
jb
rcrb
and
mov
sbb
jecxz
xor
mov
call
inc
mov
test
mov
xor
xchg
scas
adc
fs
pop
iret
adc
test
sahf
mov
and
or
inc
push
int
sub
outsb
dec
pop
movsl
lret
or
add
out
mov
pop
imul
cmp
sub
lret
enter
jmp
icebp
push
fnstsw
sub
push
jo
mov
icebp
roll
sub
cwtl
fisubrs
enter
cmp
hlt
jl
subb
pop
dec
pop
jge
call
repz
sbb
pop
inc
inc
and
push
or
mov
jge
dec
mov
jmp
mov
push
mov
mov
shll
mov
inc
pop
les
push
cmpsl
cltd
aam
mov
or
and
pop
mov
filds
inc
popa
fsubrl
out
dec
mov
adc
fiaddl
mov
pop
sub
inc
jno
inc
sbbl
ud0
cpuid
loop
sub
xlat
add
xor
or
imul
ljmp
loope
xor
cmp
pop
nop
orl
inc
repz
aaa
in
and
sbb
xchg
xchg
jl
fistpll
insl
ss
aad
addr16
outsb
sbb
adc
loopne
mov
inc
lock
xor
jne
outsb
je
add
mov
cmpsb
dec
jl
aas
pop
mov
or
push
sbb
mov
mov
es
xchg
push
jp
lret
xchg
adc
push
orl
cli
adc
call
mov
and
push
inc
xor
adc
cmpsb
push
jb
sub
push
lods
pop
mov
push
shl
jb
cmpsl
sub
fistl
bound
xchg
or
lea
push
xchg
jne
outsb
xchg
jg
cmp
insl
jae
movsb
jae
jno
mov
add
sbb
cmp
popf
loop
jb
sbb
aaa
mov
or
pushf
pusha
jns
out
xorl
mov
cld
pop
test
es
in
mov
negl
jbe
push
pop
xchg
pusha
mov
fcomps
ret
or
dec
cmc
and
scas
sbb
cmp
xchg
cmp
aam
xor
xor
ss
and
mov
push
sbb
sbb
xchg
adc
inc
pop
sahf
add
sub
mov
gs
negb
stos
jl
mov
sbb
dec
sarl
dec
ret
cmp
stos
lahf
jne
add
add
scas
push
mov
andl
sub
adc
popf
adc
cmpsl
imul
subb
cmp
xor
ret
jns
mov
leave
es
jp
pop
sbb
scas
test
adc
std
push
cmp
pop
fwait
outsl
jno
loope
inc
dec
xchg
add
xchg
jge
lds
into
int
ljmp
push
pop
pop
or
divb
nop
push
jbe
cmp
cltd
ds
push
jns,pn
push
cs
cs
in
xchg
fs
out
rol
xchg
mov
sub
lahf
push
in
xor
loopne
dec
or
sbb
rcr
push
test
push
ficomps
test
stos
sar
mov
dec
adc
mov
mov
mov
outsb
jecxz
enter
cli
aaa
push
sub
mov
aam
das
cld
imul
repnz
pop
push
jmp
push
mov
push
aam
sbb
jecxz
jge
clc
test
cmp
push
es
enter
test
push
data16
std
push
push
push
loopne
addl
jbe
mov
and
mov
call
in
insb
lret
lea
fimull
bound
aas
sub
and
or
mov
js
jbe
jnp
dec
subl
aam
sub
pop
stc
lahf
push
test
jecxz
xor
sub
lret
sbb
push
and
and
xchg
and
or
gs
sub
mov
pop
inc
mov
les
adc
inc
pop
and
inc
retw
enterw
push
adc
out
aas
dec
pop
add
cmp
adc
lods
mov
repnz
dec
or
push
inc
sbb
add
mov
mov
push
xchg
dec
or
ss
add
push
jno
push
push
ret
iret
insl
sub
ss
lods
popa
sub
cmp
mov
lret
sbb
xchg
mov
mov
stos
je
ficoml
call
lock
hlt
lock
int3
jle
xor
sarl
std
push
pushf
add
push
imul
lcall
fdiv
xchg
aad
jae
push
aas
jo
push
pop
dec
sub
inc
or
and
sbb
sub
ret
sarb
insl
lds
inc
in
cmp
fwait
add
lods
adc
daa
mov
fsubr
push
dec
mov
call
cmp
inc
mov
loop
mov
in
outsl
mov
in
adc
mov
ret
mov
in
xchg
js
jge
mov
insl
mov
dec
sbb
sub
pop
jg
movsl
mov
in
sub
push
cmc
mov
sbb
lret
push
shlb
movsb
adc
and
out
mov
xchg
fbld
inc
gs
bswap
cmp
or
icebp
jb
jb
adc
add
out
push
and
loopne
insl
mov
dec
pusha
cld
leave
sub
jno
outsl
addr16
lret
mov
xor
mov
mov
pop
or
in
ror
sub
sahf
adc
dec
jno
push
mull
out
xor
outsl
les
mov
adc
sub
cld
dec
xor
cmpsl
jge
inc
xchg
xchg
mov
cmpsb
sub
pop
push
icebp
imul
sbb
addr16
sub
movsl
jle
add
adc
pop
mov
mov
insl
sbb
and
outsl
adc
sbb
daa
movsb
mov
push
xor
add
mov
adc
push
sub
adc
aaa
pop
add
fwait
dec
addb
jp
data16
or
clc
fidivrs
movsl
pop
dec
cmp
and
cmp
repz
dec
stc
add
into
pop
sub
mov
stos
daa
jae
mov
push
repnz
pusha
push
mull
adc
mov
cmpsb
xor
mov
add
and
xchg
cmovle
cld
test
or
and
mov
iret
mov
inc
xchg
xor
orb
mov
inc
divl
push
gs
jle
xchg
jge
or
je
xor
and
pop
inc
jno
inc
adc
push
xchg
sub
push
sbb
repz
std
out
push
in
xor
push
inc
mov
or
xchg
xchg
out
sub
addr16
mov
jmp
jmp
cmp
ret
fmul
xchg
sbb
sub
xor
xlat
sbb
mov
xlat
cmp
dec
push
xchg
mov
pop
test
cs
aaa
xor
adc
xchg
pusha
mov
sbb
in
and
push
push
push
test
cmc
dec
loop
push
mov
mov
test
add
dec
into
fcoms
add
add
or
fdivrs
mov
xor
and
jae
adc
mov
push
push
je
jmp
add
xchg
inc
sub
add
loopne
sub
shr
xlat
push
popf
cmc
xor
jbe
sub
scas
ja
mov
sbb
push
sbb
stc
pop
sub
loopne
or
je
movsb
mov
xor
popa
jbe
gs
xor
jae
arpl
xor
ret
outsb
repz
push
xchg
push
subl
mov
out
jae
arpl
xor
ret
outsb
repz
push
xchg
push
subl
mov
mov
arpl
adc
and
pop
ret
sahf
repz
push
xchg
push
subl
mov
mov
fisubs
adc
and
mov
xchg
jns
xchg
jl
dec
rcrl
test
mov
movsb
in
aad
in
lcall
mov
push
lret
fs
test
mov
movsb
pop
aam
les
push
add
xor
clc
inc
clc
je
add
movsb
inc
aam
les
push
daa
out
rorb
adc
adc
addr16
cmp
pop
rorl
dec
sub
xchg
jae
xor
outsl
rcr
leave
xor
mov
mov
inc
ficoms
std
jl
outsb
sbb
lret
push
xor
int3
pop
xor
lret
data16
arpl
das
test
iret
adc
add
fsubrs
call
xchg
icebp
mov
dec
les
call
push
mov
jae
call
jnp
dec
enter
push
sub
jmp
adc
pop
enter
clc
test
int
xchg
jg
xlat
lods
cmpsl
fwait
dec
dec
mov
insl
addr16
add
inc
clc
fistpl
je
fwait
rcll
movsb
dec
aam
les
jno
adcl
and
push
rolb
call
std
pop
cmc
pop
in
xchg
cs
xchg
push
sbb
fsubs
lods
add
clc
imul
xor
dec
cmpl
in
jbe
push
jmp
rorb
aad
xlat
push
roll
adc
dec
les
push
add
xor
and
push
enter
call
test
mov
movsb
pop
aam
les
push
add
xor
and
push
enter
call
lods
xchg
pop
arpl
sub
mov
enter
mov
and
pushf
das
mov
xchg
int
jmpw
xorb
xchg
repnz
xor
dec
adc
xchg
xchg
add
cmp
outsb
and
movsb
test
mov
lock
clc
mov
mov
out
outsl
insb
inc
fdivrs
sub
sbb
adc
mov
cli
sti
pop
pop
mov
sar
xor
lods
cld
mov
popa
inc
xchg
push
lea
sahf
sub
xlat
arpl
in
adc
jae
jns
push
push
out
jnp
mov
roll
icebp
sbb
sbb
pop
and
inc
cmpsl
pop
jge
adc
lea
sub
mov
bound
cmp
pop
ljmp
adc
stc
sbbb
push
aad
daa
ss
mov
mov
or
ljmp
fstl
enter
test
sub
cs
mov
daa
and
std
jb
lret
mov
adc
push
dec
mov
dec
test
testl
jl
xchg
adc
fisubs
loope
arpl
in
jbe
out
scas
cmp
scas
mov
mov
stc
les
dec
push
fs
shlb
cld
and
lods
sbb
das
sub
sar
lods
dec
in
push
loopne
dec
cmp
aaa
add
push
add
or
sbb
insl
inc
jmp
fisttpl
bound
push
enter
jp
stc
cltd
jo
rcrl
in
inc
jnp
cmp
add
inc
mov
hlt
cmp
js
pop
xor
fnstenv
arpl
nop
or
pop
pop
in
xchg
and
daa
mov
into
in
cmpsb
out
xchg
inc
sbb
jge
call
cmp
lods
arpl
inc
and
sti
movsl
repnz
xor
loopne
fldcw
int3
cmp
xor
pop
fstps
in
lods
test
or
dec
push
mov
int3
and
adc
sarl
push
push
lods
mov
inc
lock
hlt
lahf
inc
xor
fldcw
repz
mov
add
jmp
fisttpl
xor
jae
or
cmp
sbb
aad
pop
movl
dec
dec
mov
jns
out
in
shll
lods
clc
sub
xchg
imul
pop
sti
jmp
sbb
out
mov
in
ljmp
stos
jae
xchg
lret
mov
xor
or
ds
push
sbb
lahf
in
mov
push
add
std
cmp
mov
cs
pop
rorl
jmp
lock
bound
jne
mov
mov
ds
les
mov
xchg
sbb
aad
mov
and
outsl
push
mov
inc
or
xchg
jp
gs
out
inc
mov
xor
inc
xlat
popa
out
sub
sahf
dec
push
pop
adc
dec
add
cld
inc
inc
dec
int
mov
or
incb
cltd
ss
data16
scas
dec
imul
fs
mov
into
sbb
add
mov
add
jno
sub
cwtl
inc
ret
out
leave
inc
sbb
mov
mov
hlt
pop
pop
out
push
xchg
int3
dec
fnstenv
pop
cld
sbb
out
and
inc
jbe
mov
push
adc
xor
cmpsb
sbb
aam
xor
sub
xchg
inc
jbe
ja
adcl
daa
cwtl
or
push
mov
and
add
test
dec
xor
and
jg
fnstcw
loope
mov
xchg
sub
iret
int
cmpb
xlat
pop
test
leave
and
cmpsl
add
repnz
repnz
mov
pusha
or
andb
cmp
loop
scas
sarb
scas
xchg
dec
and
insl
jns
xor
and
cmp
in
sub
dec
cmpb
mov
int
xchg
orl
dec
jo
mov
adcb
rcrb
mov
pop
pop
push
mov
iret
dec
and
pop
mov
test
pop
or
test
sub
jne
movl
fs
xchg
mov
fsubl
mov
int
test
mov
cmp
jne
adc
inc
pop
in
ret
xchg
xchg
addr16
jle
cmp
xchg
xor
or
sbb
pop
icebp
int
xor
ret
rclb
inc
test
inc
test
ljmp
pushf
mov
xchg
dec
and
pop
mov
adc
mov
pop
cmp
pop
ret
cmp
xchg
div
mov
xchg
adc
push
jge
js
jl
in
cmp
mov
arpl
cmc
and
das
jbe
dec
pusha
add
pop
mov
jo
hlt
sbb
adc
inc
mov
mov
and
sub
jmp
pushf
pop
outsb
mov
pop
add
dec
add
in
xor
insl
cmp
lret
bound
in
cltd
push
movsb
push
mov
xor
hlt
psubb
outsb
iret
jno
xchg
fsubrs
fs
nop
cli
sub
inc
and
mov
pushf
xor
push
aam
mov
ficoms
mov
dec
aad
jecxz
or
inc
loop
sub
aad
outsb
cmp
cmp
into
xchg
cltd
rorb
pop
movsb
inc
add
adc
mov
aas
addr16
pop
adc
push
adc
aaa
push
or
in
or
ds
popa
sbb
xchg
adc
and
aaa
repnz
jmp
jb
sbb
lods
sub
dec
inc
sbb
int3
xchg
or
adc
adc
fwait
mov
lret
subl
mov
lods
or
es
and
mov
mov
push
push
dec
jge
xor
pop
xchg
iret
mov
dec
fildll
out
inc
mov
lods
rorb
or
mov
bnd
repz
loopne
mov
jp
std
inc
push
adc
xor
cltd
addr16
dec
int
push
mov
sub
push
pop
fwait
sub
mov
arpl
mov
xchg
aad
dec
add
lock
or
xor
imul
inc
addl
jp
ret
mov
and
mov
push
dec
jg
xchg
shll
sub
xchg
cld
shrb
mov
or
ret
je
mov
and
jecxz
mov
je
push
cs
aaa
out
push
outsl
out
repnz
out
shrb
std
jno
pusha
inc
ss
xchg
enter
push
push
cs
ror
inc
mov
cmp
out
jnp
dec
adc
cmp
gs
dec
lcall
or
mov
inc
and
in
and
aam
xchg
out
sahf
faddl
mov
xchg
xchg
mov
push
shlb
lea
out
cwtl
ljmp
mov
mov
xor
mov
jle
pop
dec
dec
lock
or
jbe
daa
call
int
add
adcl
popa
and
mov
ret
out
bound
cmp
rorb
mov
cmpsl
jle
mov
lcall
movsb
adc
mov
ficoml
test
or
addr16
sbb
dec
and
lret
sar
fsubl
push
nop
lret
incb
pusha
xor
adc
stos
cmp
fs
dec
outsb
add
imull
dec
mov
pop
and
mov
lods
mov
arpl
cld
mov
jmp
out
icebp
test
adc
dec
inc
sbb
pop
rorb
and
jmp
pop
sbb
enter
jecxz
pop
ja
and
outsl
mov
sub
or
pop
xchg
cmp
shll
mov
mov
orl
push
pop
out
jno
or
aas
and
movsl
imul
std
mov
cltd
push
cmp
and
mov
cmc
add
sbb
xor
je
adc
xchg
es
ja
adc
mov
push
stos
in
inc
push
mov
ja
cli
icebp
gs
pop
cli
add
adc
cmc
les
mov
and
iret
sub
add
or
jle
icebp
popf
mov
cmp
enter
cwtl
and
aas
aas
test
jmp
daa
mov
cwtl
int3
dec
cli
push
mov
xor
imul
incb
mov
jp
je
jl
push
movl
inc
inc
and
inc
mov
scas
and
inc
ja
xchg
mov
lret
mov
jmp
ljmp
push
sbb
ret
pushf
jp
out
loope
mov
cmp
repz
sub
xor
xor
orb
and
xchg
popa
rolb
sbb
inc
sub
dec
aam
adc
xor
rclb
jno
stos
jae
mov
out
divl
aaa
push
pop
daa
mov
mov
out
pop
sub
dec
sub
push
adcb
imulb
push
add
cmp
pop
fwait
sbb
mov
push
mov
negb
adcb
ja
push
jns
inc
sbb
imul
movl
aad
fnsave
inc
xchg
adc
mov
push
into
sbb
jecxz
ds
adc
shll
cmp
pop
or
or
fsubp
aas
mov
add
mov
push
push
rclb
test
ret
cmp
test
in
push
xor
movsl
jns
pushf
pop
dec
adc
sub
jno
cmp
aad
ljmp
imul
jmp
test
jl
inc
pop
hlt
ret
test
or
das
std
into
fsubl
or
bound
insl
cmpsl
bnd
and
push
sub
hlt
pop
movsb
ret
jne
stos
and
imul
inc
dec
jae
jae
outsb
mov
push
cmp
ret
lods
or
out
fs
mov
cmp
sub
lcall
lcall
mov
notl
inc
push
xchg
aad
mov
fdivrs
ret
je
pop
cs
test
ret
xchg
imul
negl
repz
int3
push
and
add
fs
ds
mov
fcmovnbe
out
loope
inc
ja
push
add
aas
or
cld
inc
xor
fstpl
add
fstpl
pushf
inc
das
xor
lea
shll
sub
inc
enter
pop
loopne
add
pop
inc
inc
mov
and
sub
pop
nop
xchg
repz
push
test
xchg
pop
aas
or
mov
clc
mul
scas
mov
mov
mov
add
ret
insb
push
call
data16
shr
xor
ss
mov
lret
add
rcl
cmpsl
in
mov
lock
mov
sub
jmp
lret
fdivs
aas
sbb
imul
xor
cwtl
addb
xor
xlat
jae
mov
aaa
fldt
dec
fists
pop
out
cltd
sahf
mov
aad
stos
stc
dec
sub
frstpm(287
shrb
mov
or
mov
or
and
lds
rcr
push
leave
xor
add
push
outsb
mov
cmp
daa
das
pushl
fcomp
add
and
bound
jg
adcb
mov
shlb
adc
mov
leave
cmp
xor
xlat
test
inc
fimull
xchg
cs
xchg
rolb
mov
pop
adc
fmulp
enter
cld
insl
adc
pop
ljmp
add
out
pop
mov
sbb
lock
ja
xchg
cli
xlat
ficoml
and
cmp
jns
fwait
pop
add
jnp
mov
lds
js
push
sahf
sarb
pop
jno
imul
push
ret
inc
out
jmp
jmp
mov
jmp
insl
rorb
add
mov
js
mov
outsb
stc
cmp
and
pop
xor
aad
xorl
inc
add
mov
dec
ret
enter
std
jnp
inc
mov
sub
dec
xor
jae
push
sub
push
push
sub
fdivrl
or
lret
mov
jno
out
push
or
dec
mov
out
mov
mov
jg
add
arpl
adc
rcrb
inc
xchg
push
cs
xor
sbb
dec
iret
xorl
aaa
mov
std
or
push
cmp
test
js
jg
mov
adc
mov
pushf
xchg
js
push
loope
adc
in
loopne
mov
inc
stc
iret
dec
test
pop
fs
faddl
rclb
mov
aam
mov
pop
gs
in
loope
or
sbb
insb
ljmp
into
dec
hlt
orl
mov
cmp
push
fistpll
iret
inc
xor
ret
lcall
push
lock
out
cmpsb
mov
fistl
or
or
rorb
vpsllvd
int
das
popa
or
push
mov
dec
movsl
repz
loop
ja
rolb
ret
push
fsubl
jl
xchg
rclb
push
neg
dec
fidivrs
movsb
addr16
jne
xor
cltd
xor
push
mov
scas
adc
pop
loope
xor
das
inc
pop
int3
test
pop
lret
pop
push
push
and
lret
in
xchg
dec
shlb
jmp
pop
jns
daa
jno
and
sub
cmp
hlt
lret
add
jmp
lock
stos
rclb
sbb
les
cltd
ror
fldenv
aam
icebp
xor
test
mov
jge
imul
and
sub
je
aam
dec
push
lea
aaa
fsubrl
imul
jg
jbe
xchg
leave
or
jmp
subb
push
mov
fs
mov
sub
shrb
and
popf
push
jmp
loop
movsb
outsb
pop
mov
mov
pop
les
cmp
dec
sbb
hlt
jmp
mov
loope
dec
jl
into
push
gs
sub
pop
icebp
and
out
cmp
nop
push
dec
inc
hlt
js
setp
sub
xchg
push
mov
out
adc
adc
aad
into
popa
cmp
int3
xor
push
pop
jo
ret
pop
mov
test
aam
sub
mov
or
jle
mov
add
push
xchg
inc
imul
mov
addr16
movsl
adc
or
xchg
xchg
jbe
imul
mov
jno
mov
jnp
loopne
in
or
ja
pop
popf
xchg
push
add
popa
pop
int
sub
test
aam
or
push
scas
bound
cmp
das
leave
push
jg
xor
out
mov
arpl
mov
cld
dec
sub
jge
mov
cs
daa
jmp
fistl
mov
mov
leave
jnp
pop
sbb
mov
cli
cs
pop
mov
ds
dec
xchg
dec
leave
mov
sbb
sub
or
cmp
push
shrl
lcall
push
dec
xchg
xchg
orl
mov
push
dec
or
negl
jbe
jg
cmpsl
loopne
aam
andb
or
stos
in
sbb
repnz
mov
imul
mov
mov
mov
hlt
mov
sbb
or
arpl
ret
loope
mov
xor
sub
mov
xor
xor
dec
out
mov
or
mov
mov
mov
xor
push
out
outsb
cmpsl
and
and
cs
movsl
cmp
int
or
mov
nop
rcll
test
roll
dec
pushf
out
sub
sbb
cmc
call
pop
std
add
sbb
sar
and
adc
mov
lahf
lods
or
sub
cmp
or
outsb
cmc
pop
adc
cmc
lods
ret
sbb
push
mov
lret
pop
jge
in
scas
in
loopne
add
cmp
jle
popf
jmp
ljmp
or
sbb
lcall
aad
ljmp
stc
jne
nop
mov
fs
das
cmpb
out
xchg
cmp
aad
and
push
cmp
pop
inc
icebp
lods
pop
push
incb
clc
dec
in
sbb
jp
stos
pop
xor
mov
xchg
das
sahf
sbb
sub
ret
negl
jb
jo
xor
pushf
dec
in
hlt
jle
bound
mov
int
iret
lret
xor
dec
sbb
aam
sbb
push
jle
scas
lea
int
mov
jns
test
jno
sub
jnp
stos
stos
lret
out
inc
jno
jnp
movsl
dec
loope
addr16
fisubs
mov
dec
out
popa
mov
in
mov
add
xor
jmp
ds
jo
jle
xchg
movsb
paddusw
pop
cmp
mov
js
jle
and
fstpl
inc
xor
ljmp
or
clc
mov
jae
pop
and
xor
xchg
shl
push
in
leave
adc
movsb
fnstcw
xchg
xchg
adc
sub
dec
test
rcrl
in
in
dec
in
pop
lar
cmc
inc
popf
jle
leave
dec
xchg
jne
xchg
lea
lods
pop
xchg
sbb
sbb
mov
xchg
pop
dec
and
cmp
loope
leave
mov
and
dec
xor
and
sub
mov
jo
iret
out
dec
and
inc
filds
pop
push
or
nop
dec
jno
and
and
or
shlb
adc
dec
hlt
or
adc
cmp
iret
sbb
and
lods
stc
sub
cmpsb
jl
xchg
cmpb
stos
es
out
movsl
and
adc
dec
cmp
mov
dec
imul
ds
jb
cmp
test
or
insl
xchg
fcoms
sbb
cs
scas
or
shrb
les
int3
lock
cmp
sar
jecxz
scas
push
imul
inc
roll
enter
stos
mov
pop
pop
pushl
mov
inc
cwtl
mov
dec
inc
sbb
out
aaa
mov
ret
into
pop
mov
ljmp
xlat
cwtl
cli
sub
jne
dec
fldcw
ret
insb
cli
cmc
mov
cli
pop
push
jae
mov
dec
sub
dec
mov
cmp
addb
out
test
inc
jbe
jmp
push
xor
jnp,pn
or
push
into
pop
popa
push
dec
jbe
adc
out
popa
xchg
or
scas
test
lret
push
cmp
leave
imul
imul
jns
ret
ret
lret
mov
lret
or
cmpsl
lock
insb
adc
test
jbe
or
jnp
test
inc
dec
lock
insl
popf
sub
mov
cmp
data16
lods
scas
xchg
jno
xchg
jns
sub
xor
mov
cmp
cltd
fsqrt
pusha
push
add
rolb
call
pop
xor
bound
mov
sbb
inc
cmp
test
xchg
pop
xor
fstl
into
rcrl
fsubrl
psllq
std
or
push
adc
jnp
js
cmpl
xchg
and
and
std
stos
movsb
add
sti
daa
fiadds
mov
sub
orb
push
gs
jno
add
add
outsl
push
push
xchg
mov
and
insb
shr
nop
push
push
sahf
mov
cld
pop
xor
ljmp
lahf
into
add
das
out
xor
ljmp
pop
insb
cmp
lret
lock
mov
movsb
mov
and
pushf
push
js
iret
int
lods
lds
jecxz
sbb
mov
cs
lds
jno
xor
idiv
sub
cmp
fdiv
or
add
mov
into
and
add
das
ljmp
mov
nop
cmp
add
jl
rcl
cmp
mov
mov
bound
or
out
loope
popa
cld
mov
testb
push
xchg
in
mov
out
jbe
mov
pop
jbe
leave
push
jl
mov
pop
sbb
ss
in
mov
xchg
cmp
mov
mov
push
js
subl
adc
cli
pop
movl
jl
sarb
fwait
cmp
fimull
pop
lods
pop
cmp
dec
cwtl
js
jne
sbb
test
mov
add
jno
bound
push
out
lcall
push
inc
cmc
push
clc
xchg
and
lods
leave
jne
ja
mov
sbb
enter
lods
lock
ljmp
clc
lret
mov
xor
les
push
add
xor
and
push
enter
call
test
mov
movsb
pop
aam
les
push
add
xor
and
push
enter
call
test
mov
movsb
pop
aam
les
push
add
xor
and
push
leave
inc
clc
je
sbb
movsb
pop
aam
clc
hlt
call
scas
adc
push
scas
faddl
pop
mov
fwait
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
loop
repnz
ret
fs
xor
lahf
and
aam
enter
out
xchg
xor
push
repnz
ret
mov
xor
and
jb
inc
aam
in
divl
push
add
inc
ret
jge
or
xchg
bound
push
xor
inc
ljmp
xchg
sub
lods
sti
in
imul
push
mov
jg
mov
push
or
cwtl
mov
mov
ljmp
in
in
adc
rcll
jmp
test
fwait
add
inc
pusha
add
inc
int
fcoml
add
dec
xlat
popa
and
movsb
loop
aad
add
lret
fldt
xchg
test
cmp
xor
ds
into
mov
ja
inc
mov
test
xchg
clc
jle
sbb
iret
mov
in
cld
mov
std
mov
pop
ficomps
movsb
clc
je
scas
mov
cmp
es
subb
loope
hlt
mov
icebp
lds
mov
push
repnz
ret
jle
adc
add
sub
jb
inc
in
push
std
and
rolb
xchg
movl
dec
adc
pop
mov
leave
xchg
sub
inc
mov
addr16
ss
push
xlat
dec
adc
push
cmpsl
aad
push
jmp
fdivrs
test
mov
out
mov
xorb
aam
les
push
in
xchg
xor
push
repnz
ret
mov
xor
and
aam
les
push
in
xchg
xor
push
xchg
ret
pop
push
lods
ja
sub
rorb
mov
call
ds
mov
mov
push
es
mov
sarl
mov
ret
jbe
inc
add
ljmp
sarb
mov
loop
xlat
jno
pop
shll
xchg
icebp
stc
push
ja
push
rcrb
paddw
and
mov
dec
inc
in
addr16
out
cmp
sbb
mov
int
aaa
icebp
push
xchg
push
test
mov
movsl
fisttpll
and
or
jne
mov
mov
lea
mov
pop
or
icebp
das
sarl
inc
pop
out
pop
mov
imul
inc
test
sbb
repz
push
add
pusha
sbb
adc
rcrb
mov
je
stos
mov
movsl
outsl
lcall
fwait
clc
push
pushf
inc
inc
cwtl
sbb
and
jmp
jl
push
adc
addl
jb
or
sbbl
aam
pop
mov
sti
stos
sub
pop
push
xlat
push
mov
push
bound
push
push
mov
mov
repz
jns
cmp
int3
cmpsl
mov
adc
mov
leave
in
into
adc
cwtl
in
pop
jb
dec
movsb
mov
icebp
popf
sbb
rcl
xchg
aam
dec
xor
cmp
imul
push
ret
mov
mov
cld
adc
repz
dec
mov
mov
aaa
mov
jge
fldl
pop
pop
popf
jl
jecxz
xchg
je
sbb
rclb
insl
int3
sahf
pusha
adc
scas
bound
sub
xchg
rcl
sbb
jnp
xchg
inc
jne
pusha
ja
pusha
add
mov
out
add
dec
push
sub
jl,pn
scas
xor
cli
scas
sti
add
push
int3
shll
xor
inc
fcmovnu
dec
loopne
daa
pop
mov
pop
xor
jle
icebp
inc
xor
cltd
inc
inc
dec
or
mov
out
dec
fwait
pop
stc
sub
enter
jp
dec
sti
fwait
or
std
data16
cmp
dec
sub
jo
cli
pop
mov
adc
cmp
sub
cltd
repnz
xor
jbe
rclb
jnp
cmp
jae
xor
xchg
fcmove
notl
push
jne
and
hlt
rclb
xlat
gs
lock
daa
dec
inc
xchg
cmc
lret
cmpsb
dec
push
dec
inc
jae
clc
dec
push
mov
loope
add
loopne
and
aaa
and
cmp
mov
stos
data16
inc
rcrl
mov
enter
adc
adc
bound
inc
or
movsb
data16
leave
scas
hlt
std
aam
mov
call
aad
fbstp
xchg
push
arpl
mov
jg
sbb
inc
push
xor
mov
adc
jo
mov
cmp
mov
push
imul
in
addb
sub
cmp
cmc
pop
inc
mov
fstl
lret
push
popf
xchg
out
dec
out
andl
sbb
pop
jne
mov
sbb
xor
lcall
aas
mov
fsts
jle
pop
add
ja
fiadds
pop
xor
xor
jnp
aam
inc
movsl
and
push
pusha
pop
xchg
imul
sbb
pushf
in
sub
fdivs
dec
lods
and
push
xchg
inc
jmp
test
push
test
ja
mov
push
and
into
ljmp
xchg
jg
push
out
xchg
insl
scas
lods
es
mov
add
and
jge
push
mov
xlat
outsl
lcall
fsts
hlt
test
mov
xor
mov
adc
pop
and
mov
imul
iret
mov
in
cmp
cmp
repnz
cmp
mov
decb
adc
aaa
sbb
sbb
mov
data16
jae
push
je
adc
sarl
in
mov
xchg
mul
adc
imulb
imulb
into
cmp
cltd
push
jb
jne
sub
ljmp
add
xor
pushf
test
mov
ret
shl
pop
loopne
mov
push
mov
insb
out
dec
out
sub
aam
or
pop
mov
jg
lds
add
mov
xor
repz
into
ficomps
jns
cmp
pop
xlat
orb
sbb
enter
or
test
lahf
rorl
ficomps
pop
add
jmp
xchg
sbb
jnp
fisubl
cmp
dec
rcll
fisttpl
jae
and
mov
adcl
sub
or
loopne
jae
mov
or
dec
insb
fisttpll
cmp
filds
cltd
push
or
rorl
lahf
mov
xchg
mov
xchg
cmp
repz
dec
cmp
jg
sbb
push
mov
ljmp
xchg
outsb
mov
mov
das
jne
and
ret
mov
fidivrs
jp
mov
mov
or
mov
inc
dec
sub
das
out
dec
add
movsl
and
pop
lea
fisubrs
lods
sub
mov
mov
lret
loopne
and
jnp
in
jg
inc
xor
mov
mov
add
dec
sbb
jp
push
cmp
or
xchg
xor
loopne
adc
inc
bound
fstl
adc
pop
shr
adc
fnstenv
push
icebp
mov
adc
pop
sbb
add
jno
add
lods
ret
cmp
std
insb
std
mov
fisttpll
adc
sbbl
pusha
mov
jmp
jo
dec
pop
enter
and
push
xor
fildll
je
push
pop
xor
pop
ja
mov
lret
jg
sub
or
addr16
fcos
or
mov
xorb
mov
lods
xchg
and
or
adc
je
out
add
in
push
ret
jecxz
sbb
cs
dec
and
and
pusha
fildll
fucom
mov
mov
jge
sub
pusha
pop
rcrb
jne
sub
movsb
mov
mov
lcall
adc
faddl
and
inc
pop
push
jns
repnz
in
repnz
inc
in
xor
test
adcl
push
jo
cltd
lahf
movsb
cmp
jae
sbb
aas
pop
out
mov
clc
aaa
add
pop
push
or
pop
push
inc
jmp
mov
lahf
rol
xchg
sbb
mov
jae
lods
adc
add
std
inc
data16
cmc
push
push
in
stos
cmp
cmp
cmc
mov
mov
push
adc
or
mov
shr
sub
aaa
inc
adc
in
jnp
xor
jecxz
cmpsl
faddl
int
sub
cmp
es
jmp
mov
inc
fcmovu
mov
mov
mov
pop
push
sbb
inc
mov
aad
outsl
or
outsl
bound
cmpsb
xchg
dec
in
jbe
sahf
adc
jmp
les
rolb
and
mov
fmulp
loop
gs
movsb
mov
xchg
or
pop
mov
imull
inc
or
jb
inc
fwait
lahf
mov
idivb
rclb
jmp
jae
push
dec
adc
xchg
call
lods
xchg
or
jno
push
fists
bound
inc
cmpsl
faddl
andb
sbb
cmp
stc
adc
inc
mov
pop
outsb
jge
rcrl
add
xlat
fildll
std
dec
arpl
push
addr16
xor
jns
and
pop
xor
xchg
insb
jle
push
lds
sub
lret
lret
mov
add
lea
xchg
mov
enter
shlb
or
mov
and
test
cmp
stos
imul
mov
inc
mov
in
vsubps
test
push
cmp
fldcw
test
cmp
dec
xor
mov
fiaddl
aaa
mov
add
fmull
loopne
in
jmp
sbb
outsb
jnp
cmp
push
ret
sub
test
test
pop
lds
sar
jo
sub
dec
imul
pusha
add
fwait
leave
iret
mov
mov
jge
sub
ss
cmp
xchg
xchg
jnp
lds
leave
pop
repz
loope
nop
mov
and
lahf
imul
inc
in
ficoml
or
movsb
repz
pop
pushf
mov
aaa
cmc
popa
ja
mov
jmp
xchg
inc
xlat
mov
shll
xor
rcrl
setae
push
les
inc
ja
in
lret
popa
push
das
and
lcall
out
and
mov
mov
sarb
addb
push
inc
push
fisubrs
pop
ror
rorl
xor
inc
out
adc
or
mov
mov
sbb
cltd
pop
mov
test
out
or
sub
push
mov
xbegin
les
adc
mov
test
sbb
aad
ret
cld
repz
fcompl
or
and
jmp
in
xor
add
enter
jne
lods
push
jbe
mov
ja
out
fcmove
and
pusha
push
adcl
sub
add
test
mov
sbb
push
xor
pop
popf
jp
adc
sarb
ret
xor
test
insb
sahf
xor
ficoms
xchg
sbb
mov
bound
pusha
pop
scas
jae
xchg
xchg
pusha
fadds
lret
or
xchg
addr16
adc
lea
out
pusha
cmp
push
add
in
call
push
or
fwait
mov
dec
push
push
xor
cmp
push
movsb
or
push
or
loope
xchg
fcomps
jge
insb
inc
xor
dec
cmp
lea
lcall
dec
adc
inc
or
aaa
cmpsl
xchg
xchg
mov
mov
int
mov
aad
cmp
nop
mull
and
lret
test
cmp
push
mov
insb
loop
and
jne
inc
xchg
outsb
in
inc
jle
mov
mov
int
inc
ljmp
fists
pop
insb
aad
add
jecxz
aas
or
mov
cmp
or
and
push
rorb
jecxz
sub
xchg
cld
lea
dec
in
bound
lods
mov
adcl
hlt
xchg
insl
outsb
xorl
cmp
out
stc
jecxz
or
dec
mov
push
pop
icebp
sbb
incb
add
dec
adc
outsl
lret
ret
mov
mov
test
arpl
scas
dec
leave
push
ljmp
push
sbb
subb
outsl
or
cmpsb
aad
iret
push
insb
movl
push
jge
sub
dec
mov
dec
jo
inc
rclb
add
cmp
and
dec
mov
inc
sub
dec
outsb
adc
push
mov
inc
mov
sub
adc
notl
adc
popf
in
xor
loope
pop
sub
jo
clc
mov
rcll
cltd
enter
sbb
ret
lcall
mov
cmpsl
push
lcall
push
stc
and
push
sbb
push
push
cmp
xchg
lahf
pop
sub
cs
and
aam
int3
mov
lahf
outsb
pop
pop
sub
inc
cmpsl
xor
jl
push
imul
out
popa
fwait
shr
mov
jp
adc
pop
test
stos
aam
sub
cli
outsb
mov
sub
pop
in
cmp
adc
push
mov
pop
add
in
xchg
or
imul
mov
ljmp
jp
add
popf
aam
das
mov
cmp
xor
dec
lret
mov
pop
xlat
lods
and
inc
lods
jo
or
sub
push
fwait
pop
add
mov
aam
adc
rorb
inc
cmp
adc
jae
popf
repz
ret
loope
movsb
push
mov
push
jmp
test
or
xchg
push
jmp
inc
cmp
jge
pop
mov
popl
pop
push
outsb
cmc
or
loop
xchg
into
inc
sti
mov
sub
cld
mov
push
mov
cmp
cwtl
push
orb
out
stc
lock
out
xchg
dec
mov
fidivrl
cmc
int3
rcrl
adc
aas
or
es
push
cmc
mov
dec
xchg
lret
pop
sahf
mov
leave
jno
mull
adc
test
lahf
mov
hlt
push
test
lahf
lds
lret
cmp
icebp
and
repnz
pop
or
jnp
add
push
mov
pusha
mov
xlat
aad
sub
scas
push
out
in
push
ficomps
xorb
mov
sub
mov
test
xchg
enter
in
add
mov
jns
cmp
push
scas
push
jno
dec
call
out
cmp
and
icebp
aaa
or
mov
testb
lods
or
ret
out
lret
jmp
xlat
lcall
adcl
mov
repnz
in
popl
xchg
pop
gs
movsl
jbe
shlb
std
and
mov
dec
js
or
or
xchg
hlt
out
jnp
sub
aad
ss
add
xor
mov
mov
cmc
call
dec
mov
add
lods
push
mov
add
mov
lds
sub
lock
sbb
mov
cmp
and
imul
pop
mov
les
int
popf
jne
and
push
dec
push
test
inc
mov
sbb
stc
bound
adc
outsb
and
push
fs
cltd
or
imul
ja
test
add
push
call
xchg
dec
adc
iret
decb
dec
mov
xchg
mov
xchg
test
jo
pop
add
jae
lahf
sub
xchg
mov
repnz
ljmp
sub
cltd
push
into
arpl
mov
fists
push
xchg
jb
cmp
sbbb
lahf
repz
in
dec
push
mov
ficoml
and
push
jecxz
pop
ja
mov
aas
aaa
shl
and
in
addr16
push
int
aam
popf
in
mov
jno
mov
add
call
lods
sub
push
ror
sub
jae
mov
mov
push
xchg
jp
push
sbbl
incb
push
push
xor
xchg
mov
in
inc
call
sahf
xor
int3
stc
adc
xchg
adc
out
mov
mov
ja
fstl
and
jl
outsb
js
in
or
sub
mov
icebp
pop
lea
jle
xchg
scas
mov
ss
xchg
push
in
mov
out
imul
sub
sub
and
xchg
test
fidivl
int
pop
jp
adc
and
mov
sahf
inc
push
rorb
sub
scas
outsb
sti
xor
mov
inc
mov
inc
add
add
mov
fcomps
orb
inc
jno
adc
and
xor
ss
insl
mov
mov
cmp
sbb
nop
or
stos
jge
sarb
in
mov
scas
xchg
mov
fisttpl
sbb
lcall
lock
push
adc
xor
mov
js
sub
or
sti
stc
push
xor
and
fisubrs
in
and
ja
out
add
dec
repz
dec
xchg
jnp
fistpl
jge
pop
cld
inc
add
sti
xor
xor
gs
das
adc
stos
sub
scas
and
lret
hlt
adc
mov
mov
insl
xchg
fidivrl
insb
xchg
inc
sub
fisubrl
outsl
mov
push
call
xlat
jae
mov
xchg
xchg
ds
or
sbb
movsl
pop
in
es
fcompl
movl
fmulp
rcll
shrb
lock
cwtl
in
icebp
in
push
test
pop
lods
lock
add
repnz
and
repnz
xchg
jne
sbb
pop
fcoml
ret
add
lock
xchg
shrl
pop
daa
and
in
fsubs
fidivl
mov
mov
jo
sub
sub
dec
loopne
lock
test
dec
inc
sub
je
fistpll
mov
lcall
loope
and
mov
sub
jne
push
test
push
xchg
add
push
bound
mov
mov
adc
or
jge
and
jg
add
xchg
pop
sub
pop
mov
jge
cmp
cwtl
sti
adc
cmp
pop
cmp
adc
out
insb
mov
cld
sahf
jno
sbb
inc
js
push
lods
imul
jns
insb
pop
rcll
addb
xor
mov
daa
insl
inc
and
push
or
cmp
lock
mov
mov
xor
sub
lahf
inc
xor
and
cmp
push
bound
add
lcall
adc
shlb
and
insb
pushf
cmpsl
lahf
add
cmpsl
popa
pop
mov
sub
jg
sahf
add
add
aam
in
imull
add
sbb
cld
cmpsb
jb
jns
ss
lret
repz
dec
adc
shrb
mov
stos
push
fsub
int
jmp
scas
insb
jae
aad
cld
sub
jo
mov
push
mov
pushf
sbb
je
das
pop
or
lret
lods
sub
adcl
mov
loopne
stos
inc
jmp
xchg
movsl
mov
xor
loope
sub
jecxz
rcll
test
pop
insb
xor
push
mov
and
jp
adc
aad
mov
mov
fndisi(8087
lahf
mov
imul
push
adc
mov
push
lret
dec
sbb
or
jl
mov
test
inc
lea
rorb
stos
adc
xor
aam
addl
in
lcall
and
loope
imul
ljmp
cmp
sub
pop
lds
rolb
or
jns
jno
cmp
mov
imul
xchg
in
adc
repnz
or
jge
jb
jnp
test
lock
dec
ljmp
lds
xchg
jo
xor
mov
notl
mov
or
outsl
in
lods
inc
js
xor
mov
jae
rcrb
icebp
xchg
bnd
sbb
testl
movsb
push
ds
inc
sub
pop
push
xchg
push
imul
psubusw
adc
fisttpl
mov
stos
es
cmc
shrl
out
sub
call
push
int3
cwtl
and
sub
jb
movsl
in
cmp
jo
or
pop
mov
mov
sub
inc
add
pop
je
insb
pop
pop
push
xchg
aam
dec
aaa
movsb
clc
test
jnp
jmp
mov
jle
xor
jae
sub
mov
fwait
push
push
scas
dec
repz
adc
insl
cmp
xchg
add
cmp
xorl
mov
inc
test
jbe
loop
pop
mov
adc
nop
cmp
add
arpl
outsl
or
call
dec
mov
xchg
sub
pop
sbb
cmp
jp
or
stos
int3
aad
push
cmp
dec
fbld
xor
mov
mov
call
xchg
shrl
mov
enter
push
stc
jl
inc
push
sti
outsl
outsb
loopne
cmc
xchg
jle
and
les
rorb
movsl
inc
stos
sbb
orl
add
mov
nop
ljmp
out
cmc
xchg
cmp
lcall
sub
push
in
sbb
add
inc
pop
ds
pop
inc
iret
arpl
cs
cli
push
mov
push
xchg
mov
jne
in
adc
dec
jnp
mov
push
jns
jle
mov
hlt
adc
inc
sbb
daa
mov
into
mov
push
adc
sti
stc
lret
shlb
mov
dec
mov
inc
sub
addr16
rcrl
cmp
sti
out
test
cmp
jg
call
dec
rorb
cmc
mov
cmp
sbb
add
mov
sub
negl
data16
and
or
loopne,pn
pusha
inc
popf
mov
sub
jecxz
sbb
cmpsl
xor
xchg
cwtl
les
mov
stos
insb
pop
faddp
jns
jno
xor
xchg
dec
insl
and
adc
sbb
or
push
dec
push
mov
lods
add
push
into
inc
xchg
push
adc
int3
sub
notl
adc
std
sbb
movsb
rorl
pop
xchg
sarl
add
loope
cld
adc
out
mov
inc
sbb
pushf
xchg
inc
imul
aaa
push
cmp
add
in
shlb
pushf
mov
cmp
jns
loopne
aas
fsubrl
pusha
inc
std
fwait
shlb
mov
xorb
aam
les
push
in
xchg
xor
push
repnz
ret
mov
xor
and
aam
les
push
in
xchg
xor
push
repnz
ret
mov
xor
and
aam
les
push
in
xchg
xor
push
repnz
ret
mov
xor
and
aam
outsb
call
sbb
jnp
dec
ljmp
sbb
or
jl
mov
dec
std
pop
add
mov
fwait
sub
js
push
or
cmp
imul
enter
out
stos
cmpb
jmp
sti
jp
mov
adc
mov
jl
imul
ja
xchg
pusha
fildl
mov
xor
push
jecxz
push
in
daa
cmp
pop
insb
ss
insl
pop
jecxz
cmpsl
or
push
cmpsb
addr16
mov
push
test
arpl
clc
xchg
xchg
lret
test
adc
mov
push
jbe
or
adc
or
bswap
cmp
or
insb
lret
pop
adc
cmp
sbb
imul
mov
out
out
aad
in
divl
shrb
cltd
cli
mov
fwait
out
cmp
js
xchg
pop
std
mov
mov
fdivs
aaa
sbb
pop
jmp
clc
rorl
loop
nop
pop
lods
imul
aad
fwait
or
js
push
or
cmp
sarb
cmp
inc
into
je
cmpsl
fstl
cmovp
pop
fmuls
push
jmp
mov
das
mov
sti
imul
lea
mov
jmp
sti
jnp
fstps
jle
cs
call
loop
dec
ret
fs
xor
push
or
cmp
imul
enter
sub
js
push
or
cmp
imul
enter
jle
gs
out
pop
ja
push
icebp
in
imull
or
ret
push
stos
and
fsubrl
adc
ret
lods
mov
cmp
push
into
call
mov
cmp
sub
xor
inc
inc
sub
movsb
loope
xchg
xchg
sahf
loopne
jb
vmovaps
xchg
jge
mov
stos
adc
sti
aam
je
fcomip
push
mov
sbb
push
add
and
pop
sbb
jge
pop
mov
nop
mov
pop
add
jo
js
sbb
sbb
adc
ljmp
stos
push
dec
outsl
adc
mov
call
in
mov
dec
cmpl
pop
cmp
jae
inc
or
movsl
mov
shr
lret
jl
das
idivl
jge
call
stos
lret
inc
cmp
jne
push
sbb
in
sarl
adc
shll
mov
inc
js
sbb
xor
xor
lods
test
popf
loope
arpl
pop
xor
push
flds
add
inc
push
arpl
xchg
pextrw
scas
imull
aam
push
dec
mov
sbb
push
test
test
lock
pop
push
xchg
pushf
imul
lock
jno
jno
test
sub
out
push
outsb
adc
mov
insb
dec
fnstcw
call
pop
push
lods
in
ljmp
outsl
push
adc
xchg
pop
aam
pop
jle
pop
mov
xchg
insb
mov
loope
imulb
cmp
orb
xor
pop
jle
mov
mov
cmp
and
aam
dec
cmpsl
mov
mov
fdivr
fidivs
loope
inc
sbb
hlt
bound
in
push
and
pop
cmc
mov
lods
test
pop
push
or
push
das
xchg
das
je
das
insb
cmpb
dec
fstps
or
movsl
test
dec
mov
mov
iret
lock
testb
test
hlt
inc
dec
push
xor
mov
dec
sahf
cmpsb
dec
aaa
cwtl
mov
dec
or
and
pushf
pop
loopne
dec
stc
ficomps
je
cmc
ret
je
mov
jge
push
fwait
loop
ret
jp
pop
nop
lret
stc
lods
outsl
lock
scas
sbb
or
testb
js
leave
mov
bound
cld
xor
mov
loope
dec
adc
gs
inc
inc
mov
out
incb
add
dec
int
mov
push
mov
lock
scas
dec
inc
cmp
inc
push
push
out
pop
mov
aam
hlt
ret
iret
xor
insl
push
fistps
mov
mov
enter
xchg
pop
outsl
aam
enter
cltd
stos
xor
in
inc
cltd
adc
sub
add
scas
popa
int
fstpt
mov
add
adc
lock
or
dec
jo
ja
jle
sub
decb
add
lret
repz
inc
test
lcall
cmpsl
test
cmp
enter
scas
or
sbb
aas
jbe
clc
mov
dec
sbbl
push
add
shrb
mov
mov
lret
aam
arpl
adc
outsl
cmpb
xchg
pop
cs
mov
jge
sbb
and
fsubp
out
rorb
fidivs
enter
mov
xchg
lds
mov
xchg
scas
mov
cltd
pop
inc
pop
in
xor
fmuls
and
mov
pop
sbb
sub
xchg
or
sbb
jno
sbb
sbb
test
aas
sub
fstpl
lahf
push
xchg
in
test
xchg
fwait
cmpsb
xchg
repnz
js
push
dec
sbb
data16
mov
mov
ljmp
mov
xor
pop
sbb
stc
std
dec
sub
jp
fnsetpm(287
es
popl
bnd
mov
xchg
mov
pop
fldcw
mov
jo
cmp
inc
mov
xorl
test
or
cltd
mov
mov
or
stc
cmp
cli
pop
scas
movsb
test
xchg
and
rorb
jle
push
dec
sbb
ljmp
rcrb
sbb
mov
and
stos
ds
add
ror
cltd
mov
stos
arpl
mov
nop
ss
sub
fadd
lret
inc
aad
loope
shlb
or
dec
aad
aas
or
inc
push
les
scas
pushf
inc
iret
popf
dec
adc
das
test
xor
jnp
add
lahf
imul
inc
shr
mov
nop
jecxz
dec
dec
xchg
pusha
shll
xor
or
pushf
aam
rcl
xor
jmp
mov
adc
and
sbb
leave
and
jle
mov
mov
arpl
jnp
push
jmp
adc
call
and
push
clc
mov
pop
xchg
xchg
pop
jp
jns
mov
rcr
mov
imul
add
icebp
cmc
test
push
dec
mov
sbb
dec
nop
xor
dec
shrb
inc
in
add
je
dec
xchg
mov
daa
daa
ljmp
arpl
adc
or
popa
cs
in
push
flds
idivb
inc
subl
mov
inc
jo
cmp
adc
bound
pop
test
imul
pop
mov
flds
and
call
adc
mov
sub
lret
test
out
daa
loope
rcl
push
outsb
pop
and
xlat
mov
sti
pop
inc
lods
pop
dec
shll
and
test
js
mov
mov
imul
cmp
pop
lea
mov
rorb
or
inc
popa
ficompl
imul
movsl
push
push
cmp
imul
push
in
inc
push
sub
in
aaa
cmp
push
cld
adc
mov
in
je
cltd
adc
push
xchg
sbb
mov
dec
cmp
fwait
sbb
jno
xor
sub
stos
popa
xchg
and
push
push
sub
xor
sbb
out
xor
in
clc
dec
sub
fiadds
push
push
imul
adc
imul
and
insb
mov
sbb
dec
movsl
mov
ja
pusha
mov
imul
sub
outsb
enter
ss
xlat
in
jge
mov
call
call
pop
lahf
sti
fwait
dec
imul
inc
sti
mov
notl
push
and
push
jae
adc
or
push
lcall
mov
ljmp
adcb
fdiv
add
dec
cmp
jo
mov
nop
lods
es
mov
sub
mov
push
dec
xchg
pop
orb
xlat
xor
fsubrs
mov
mov
sbb
xlat
fwait
and
enterw
mov
and
fidivrl
movsl
stos
mov
and
or
leave
insb
fnsave
pop
xchg
fistl
in
jno
sarl
pop
arpl
mov
mov
enter
adc
in
fwait
pop
cld
ud1
lret
arpl
add
push
aaa
inc
lahf
roll
imul
movsb
or
in
cli
lea
inc
push
xchg
dec
andl
sbb
testl
xor
ret
insl
xchg
cmp
insl
push
push
fcompl
int
sbb
incb
mov
imul
jl
cmc
pop
pop
leave
jne
inc
je
jo
dec
dec
ljmp
pop
push
mov
xchg
or
iret
dec
jno
mov
out
pop
mov
int3
ja
dec
mov
dec
inc
xchg
or
push
test
fildll
hlt
pop
test
add
push
add
fxtract
je
aam
dec
mov
cmp
push
push
add
sub
mov
ljmp
mov
jb
scas
and
rorl
add
dec
mov
cmp
sub
shrl
fsubrl
xchg
cltd
push
and
xor
adc
adcb
or
pop
icebp
nop
not
jo
lcall
mov
sub
mov
pop
and
fwait
sar
sarb
add
imul
push
test
mov
add
mov
testl
stc
jb
scas
pushf
jnp
gs
mov
enter
dec
cmp
insl
sbb
mov
pop
sub
fadds
mov
mov
push
sarb
aaa
cmp
jbe
popa
mov
mov
inc
ret
fwait
imul
add
pop
mov
mov
pop
ret
cmp
sbb
xchg
cmp
adc
pop
test
pop
movsb
test
cmp
dec
mov
cmc
popa
and
or
xor
data16
cmp
xchg
mov
inc
lret
inc
aas
aaa
clc
push
pop
jae
lods
push
mov
shrb
dec
pop
enter
fcoms
push
jbe
out
mov
dec
dec
daa
jae
mov
dec
inc
es
iret
sub
adc
inc
sbb
xchg
movsb
lods
or
sbb
jo
decb
setno
ljmp
mov
cmpsb
fisubl
outsl
daa
sahf
mov
mov
mov
fwait
jno
or
fidivl
fwait
or
stos
xchg
adc
ffree
stos
jle
sbb
push
movsb
mov
pop
jns
hlt
ficompl
js
lds
and
pop
stos
jne
outsb
fmull
cmpsb
shlb
pop
out
push
pop
mov
insl
daa
sub
lock
testl
adc
xchg
or
sbb
fldcw
in
mov
mov
cmpsb
in
jns
xchg
shlb
or
adc
mov
inc
cmp
add
cmp
in
mov
dec
insb
jmp
inc
jg
mov
les
pop
cmpsb
jae
xor
and
or
sub
mov
mov
loop
test
ficoms
adc
jno
aam
mov
sub
ret
cmp
outsl
out
bnd
icebp
inc
mov
enter
in
push
icebp
sub
ss
jnp
adc
or
ja
jge
flds
insb
jne
jmp
xchg
lahf
les
call
inc
xchg
jl
inc
mov
test
cmp
xchg
bound
aad
dec
pop
call
dec
sbb
mov
test
enter
scas
data16
bound
and
pusha
popa
out
pop
push
pop
xlat
loop
or
xchg
push
add
mov
repnz
dec
inc
rcl
inc
movhps
inc
fs
sbb
mov
cmpb
stos
idivl
add
mov
aaa
jg
stos
fbld
pop
xchg
xchg
ja
sbb
dec
cwtl
sub
and
mov
in
ss
lods
subb
or
push
dec
insb
cmp
add
bound
and
sti
arpl
imul
jg
mov
and
std
and
jo
enter
dec
cmp
dec
mov
dec
stos
leave
sbb
push
pop
fildll
xchg
fisubs
adc
idivl
scas
jns
test
out
addr16
scas
add
loop
cltd
inc
xchg
mov
mov
scas
sbb
add
mov
sub
out
sti
cld
lret
mov
xchg
out
lods
xor
adcl
or
mov
push
add
pop
cmpb
push
loope
or
mov
iret
test
sub
nop
or
pop
pop
mov
insb
cmp
in
cmp
push
xchg
cmpsb
xchg
aas
dec
dec
mov
les
xchg
packssdw
repz
fbstp
gs
push
push
jno
jno
fbld
out
out
dec
and
cmc
or
mov
ret
mov
ret
mov
lods
jne
pop
sub
mov
sbb
jl
jecxz
test
cmpsl
jns
aas
inc
in
pop
mov
mov
arpl
sub
mov
and
push
xchg
decl
cmp
pop
dec
std
sub
mov
pop
xchg
inc
mov
int3
xor
ja
mov
mov
xlat
cmc
push
xor
pop
gs
cmpl
cld
push
mov
pushf
pop
jo
pushf
fsubl
sub
add
pop
push
jp
test
inc
xchg
xchg
popa
popf
pop
jo
sub
mov
cld
cmp
xchg
jnp
in
fucom
cmp
sub
mov
movsl
mov
stc
xchg
xchg
mov
lcall
pop
popa
or
sbb
pop
sbb
lcall
cmpl
repz
pop
cltd
sbbb
test
imul
mov
or
outsl
lahf
shll
xor
sub
xor
pop
notl
pusha
imul
cmp
push
cli
inc
mov
call
adc
jns
repz
cmpsl
ja
mov
mov
sbb
loopne
and
or
mov
or
jno
and
push
nop
cmp
mov
out
inc
cli
inc
xor
pop
mov
sbb
sub
ficomps
addr16
dec
pop
out
fsubs
xchg
push
lock
es
aas
gs
mov
outsb
jmp
adc
or
push
fimull
stos
jno
dec
cmp
clc
mov
pop
push
decl
jae
popa
cltd
mov
xor
inc
inc
gs
out
push
and
inc
dec
mov
pop
scas
jb
leave
or
sbb
jb
insb
shlb
dec
xchg
fisubs
pop
or
ret
push
sub
mov
rcrl
mov
jns
dec
jecxz
add
clc
dec
call
jno
in
cmp
jne
pop
add
sub
jge,pn
xor
dec
xor
sbb
or
stc
sbb
cwtl
and
cli
push
jnp
mov
in
xchg
xor
sub
lock
arpl
mov
add
scas
pusha
arpl
xor
hlt
inc
cwtl
fldl
in
adc
fs
rcrl
or
add
inc
loopne
negb
lret
pushf
xchg
fdivs
out
test
sbb
and
mov
mov
xlat
fbstp
mov
ret
sub
add
mov
pop
pop
fcoml
test
nop
push
sbb
in
mov
jno
jp
and
inc
push
mov
lock
insb
cli
ja
jo
cmpsl
sarb
jle
mov
das
cmp
daa
jae
push
and
mov
out
jg
push
cli
rclb
push
loope
xchg
push
adc
push
dec
sbb
jmp
sub
leave
aaa
addr16
push
les
inc
jecxz
cmp
ret
mov
lea
xchg
mov
sbb
in
sbb
fs
inc
xchg
iret
jp
cmp
jp
jae
daa
dec
popf
mov
mov
repnz
jne
and
insl
ror
mov
scas
push
push
fstp
fsubp
js
fstl
in
test
add
add
addr16
lods
jg
imul
lds
out
adc
fcmovb
jns
sbb
imul
jae
mov
mov
mov
icebp
lock
xchg
mov
adc
xor
push
sub
loope,pn
loope
xor
jo
add
loope
lock
push
pop
push
pop
dec
movd
jp
pop
loopne
xor
scas
add
lods
pop
cmpsb
mov
ja
stos
mov
cmp
jp
fdiv
sub
lds
in
rorl
adc
rolb
stos
sar
adc
inc
loope
lods
or
hlt
fstp
std
dec
jle
scas
xchg
sahf
in
sbb
repz
int3
or
pop
xchg
push
jb
sbb
sub
xor
inc
mov
dec
xor
aam
stc
les
cmpsl
int
inc
lcall
popf
xchg
adc
xlat
movsl
into
inc
sbb
inc
inc
inc
or
sub
add
cwtl
rcrl
dec
fs
add
xchg
mov
push
xor
add
js
test
loop
in
sar
insb
push
push
mov
scas
push
lret
dec
xor
xor
mov
xchg
sub
pop
mov
adc
and
push
in
jg
sub
mov
jb
mov
cwtl
lret
cmp
fldcw
ret
insb
mov
sub
ds
and
mov
xchg
fwait
mov
movsb
xchg
cs
lods
ja
cwtl
mov
and
xchg
push
loope
stos
sub
xorl
addr16
jno
or
or
push
mov
push
or
imul
mov
mov
fs
mov
adc
outsl
pop
fcoms
or
and
aaa
aad
cmp
int
push
mov
sub
sbb
xchg
loop
scas
inc
sbb
enter
rorl
mov
cmp
xor
insb
mov
cmp
lds
cmc
aaa
popf
mov
inc
repz
push
scas
adc
jne
fmuls
jmp
iret
jecxz
cmp
movsl
aam
add
sub
cmp
cltd
inc
xor
sub
jo
mov
xor
idiv
ja
xchg
jae
mov
sub
dec
mov
mov
push
lahf
imul
cld
inc
stos
sbb
ret
repz
push
or
loop
ds
lret
out
pop
test
pop
out
cmpsb
jo
dec
add
jno
repz
pop
or
call
rorl
addr16
or
inc
lret
jno
xor
and
mov
lcall
and
cmpsl
lret
or
ljmp
push
scas
inc
mov
lea
xor
push
push
push
mov
sub
mov
inc
pushf
adc
pop
sbb
por
nop
out
mov
mov
jnp
idivl
andb
fstpt
adc
mov
push
xor
insb
cmp
unpcklps
sub
push
js
shr
push
loope
add
es
lock
pop
xchg
loope
pcmpgtd
stc
push
push
insb
pop
add
pop
setnp
inc
into
rcll
pop
adcl
cli
subl
jnp
pop
push
imul
mov
xchg
and
sub
scas
sbb
mov
add
cmc
loop
ljmp
stos
pop
cmp
sahf
or
xor
jns
addr16
fcoml
cmp
xor
jne
fidivs
push
push
sti
add
sbb
cwtl
mov
pop
into
mov
aam
fnstsw
cmp
leave
sub
insl
les
pop
das
pop
push
mov
xchg
and
push
mov
lret
repnz
decb
popa
or
xchg
lea
sbb
outsl
fidivrs
xchg
push
mov
sub
scas
pop
lods
pushf
dec
clc
ljmp
hlt
inc
push
mov
pop
jl
rorl
xor
add
lods
pushl
push
jg
sti
aaa
in
sub
adc
popa
cmp
fimull
popf
sub
lahf
sub
out
jp
jecxz
inc
adc
dec
int
ja
in
xchg
inc
in
mov
push
fwait
add
push
test
cmpsl
add
mov
sub
jnp
es
push
or
adcb
fwait
icebp
inc
sti
lods
push
inc
jne
sbb
std
lods
rcr
test
xchg
jg
xchg
xchg
mov
adc
mov
mov
fdivrs
and
ljmp
dec
out
sub
and
testb
fst
les
icebp
or
ror
pop
adc
lret
jg
pop
cmp
test
jnp
js
jae
lahf
aad
dec
scas
inc
cmc
jge
jnp
daa
lea
in
push
lock
cmpsb
shl
xchg
lret
lret
test
jle
movsb
pop
adcl
mov
pushf
pop
xchg
lret
test
adc
dec
jns
cmpsb
xor
xchg
jp
adc
dec
int
dec
xchg
lock
pop
jmp
sbb
cmpsl
jg
sbbb
popa
jne
lds
xlat
mov
fisttps
lds
pushf
adc
fadds
cmp
gs
mov
xor
lcall
jmp
xor
mov
leave
adc
insl
out
repnz
jmp
xor
out
orl
pushf
jmp
mov
jmp
sbb
push
jne
mov
cld
push
inc
outsl
add
cltd
xchg
in
sbb
and
js
xlat
pop
test
les
adc
into
enter
jnp
sub
ficoms
pushf
mov
mov
inc
inc
movsl
stos
not
jb
sti
lds
sbb
mov
pop
sbb
stos
cwtl
rcr
adc
mov
inc
ficompl
lcall
mov
sarb
lret
sub
sbb
fidivrl
xor
test
outsb
mov
jno
inc
sbb
cmpsb
push
clc
cmp
mov
pop
push
in
adc
jnp
adc
or
int3
nop
mov
int
mov
xchg
sbb
xchg
sub
xor
clc
pop
into
adc
lcall
test
sbb
pop
insb
dec
jnp
rolb
inc
pop
adc
or
js
push
or
cmp
imul
enter
sub
js
push
or
cmp
imul
enter
es
add
add
pop
sti
dec
or
cmp
imul
sub
fcompl
dec
lret
js
push
or
add
adc
xchg
mov
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
aad
push
mov
sbb
sahf
and
add
add
add
add
add
pop
add
or
cmp
flds
xor
xor
lds
addb
add
add
add
add
enter
flds
test
imul
pop
add
add
add
sbb
mov
imul
add
add
sbb
adc
mov
stos
add
add
add
add
add
add
add
add
repz
inc
add
sldt
add
add
add
add
add
add
add
add
add
mov
add
add
or
add
pop
add
add
add
addb
or
pop
add
add
add
add
add
add
add
lea
pusha
add
add
mov
xchg
add
add
add
or
insb
add
add
push
xor
stos
add
add
add
add
push
mov
add
add
add
add
xor
mov
mov
test
and
add
pushf
add
add
jl
mov
sbb
add
xor
pop
add
add
gs
add
add
add
add
or
mov
bound
xchg
add
add
add
add
add
movsl
add
scas
add
add
add
add
add
jnp
ljmp
add
xchg
add
add
add
or
leave
add
add
add
add
add
add
add
add
test
cmc
add
add
add
add
adc
dec
add
add
pop
add
add
add
push
add
add
add
add
or
xor
lds
enter
insb
add
add
add
jp
push
add
add
add
add
aas
add
add
add
dec
add
add
xchg
add
inc
add
add
add
add
cltd
add
add
cltd
add
add
xor
jb
sub
addb
add
add
add
add
aad
mov
sbb
sbb
push
add
or
addb
add
add
pop
add
add
add
add
add
add
add
cmpsb
add
add
add
add
add
add
xor
add
add
sub
xchg
add
add
add
add
add
add
add
add
add
popl
or
sub
jno
dec
add
add
add
or
jbe
je
je
roll
add
lds
movsb
add
mov
add
add
add
add
pop
add
add
jns
xchg
jno
add
add
xchg
add
and
iret
add
add
add
add
add
add
add
add
add
jno
jno
xor
add
addl
add
add
add
add
add
adc
add
add
add
jg
or
inc
add
add
add
add
jo
pushf
add
dec
add
movsb
add
add
add
add
add
add
lret
add
add
add
add
add
cmpb
and
xor
ret
push
aam
aad
cli
scas
jmp
movl
leave
fcoml
add
dec
xchg
ja
icebp
sub
xor
mov
sti
mov
sti
xor
mov
das
fistl
out
cmpsb
adc
xchg
mov
inc
sbb
adc
call
or
mov
sti
mov
sbb
bound
or
xchg
sub
jle
xchg
and
pop
mov
jmp
out
lret
pop
cmp
mov
mov
mov
mov
nop
sarl
inc
add
jns
jle
int3
repz
mov
arpl
pop
xchg
movb
jae
cs
nop
fldcw
sub
mov
icebp
jle
iret
into
and
mov
call
jl
mov
or
cmpsl
cwtl
out
pop
push
outsl
pop
mov
loop
gs
mov
into
arpl
mov
dec
or
jle
jns
aad
xchg
push
js
mov
cmp
scas
jmp
bound
shrl
add
jl
and
mov
lcall
or
loope
js
rorl
jbe
adc
and
out
mov
test
popf
and
sub
cmp
mov
nop
cmp
jmp
push
in
pop
fbstp
aad
sbb
mov
test
sti
jmp
dec
inc
aas
and
call
mov
mov
or
sub
loopne
jo
inc
data16
fsubp
call
loop
repnz
in
add
repz
lea
decb
or
xor
pop
cmp
cli
cmpsb
stos
mov
cwtl
leave
mov
arpl
jge,pt
andl
xchg
shr
stos
sarl
dec
cli
cs
lds
stc
movsb
enter
ret
xor
les
mov
mov
add
fs
addr16
cmc
inc
lret
push
sub
xchg
mov
adc
pop
lret
popf
adc
dec
cmp
loop
inc
scas
js
fisubrl
hlt
fsubrs
outsb
insl
mov
jmp
in
and
int
xor
xchg
sbb
scas
scas
dec
inc
cmpsb
or
clc
arpl
dec
xor
outsb
bound
lock
push
and
outsl
cmp
fnsave
out
rorb
push
xchg
inc
pop
out
jnp
dec
mov
sbb
cmp
aaa
pop
mov
sub
inc
ja
adc
inc
mov
pop
cmc
adc
push
arpl
or
lods
push
mov
rcll
aad
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
