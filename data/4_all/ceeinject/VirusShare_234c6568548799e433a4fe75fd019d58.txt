call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
movsb
fucomi
lret
fdivrp
into
jmp
iret
fucom
mov
pop
outsb
dec
pop
jnp
imul
outsb
dec
push
cmp
sub
fucomi
lret
out
sti
into
jmp
fwait
scas
mov
pop
outsb
dec
cmp
imul
das
or
cmp
sub
fcomi
lret
sti
jmp
fwait
mov
xchg
gs
xor
cmp
dec
arpl
pop
sub
mov
mov
push
dec
lods
mov
xchg
push
xchg
jnp
cmp
sbb
rcll
mov
loop
shll
fsubrp
ficoms
arpl
outsb
mov
mov
mov
fstpt
repnz
sbb
lock
scas
add
xchg
mov
jle
stos
rcrl
cmp
dec
ds
inc
lcall
push
mov
dec
push
adc
push
inc
adc
xchg
outsb
je
inc
sahf
std
jbe
xchg
dec
dec
xchg
xchg
shrl
dec
xchg
cmp
jnp
pop
out
xor
push
and
andl
cs
sub
fucomi
lret
fdivrp
fldpi
scas
fwait
mov
sahf
mov
jbe
inc
jnp
imul
or
cmp
insl
lea
stos
lods
ret
lret
jecxz
or
outsb
and
dec
jb
mov
out
cmpl
aam
stos
jl
outsb
daa
sbb
pop
outsb
dec
push
inc
xchg
mov
mov
imull
stos
jle
outsb
dec
pop
jnp
imul
or
cmp
sub
fucomi
lret
fdivrp
into
jmp
fwait
scas
mov
pop
outsb
dec
pop
jnp
imul
or
cmp
sub
fldt
cmp
in
aad
inc
sbb
sub
adc
mov
sbb
cmp
aad
je
xor
movsb
iret
mov
sub
clc
call
mov
out
mov
and
mul
ja
mov
repz
and
jae
imul
mov
jb
cltd
aam
ret
mov
and
mov
push
rcrl
hlt
pop
adc
adc
popa
jecxz
ret
lret
cmp
data16
push
inc
cmp
mov
or
xlat
in
sarb
add
fistpll
idivb
xchg
mov
cmp
sub
test
inc
movsl
cmp
loopne
push
aaa
sub
rclb
push
inc
add
loop
aaa
jb
adc
pop
push
mov
inc
icebp
ljmp
inc
push
xor
das
repnz
xchg
pop
push
push
cld
outsl
stc
dec
pusha
adc
in
pop
lea
add
sbb
testl
and
repnz
mov
inc
jns
adc
dec
movsl
and
dec
jp
movsb
dec
add
jnp
nop
unpckhps
sub
mov
pop
and
pushf
dec
jnp
jl
dec
insl
leave
pushf
xchg
sub
pop
mov
lret
push
mov
sbb
add
nop
push
repz
dec
mov
xchg
mov
call
mov
out
movsl
sbb
int
xor
in
shll
stos
sbb
xchg
mov
in
scas
or
stc
insl
xchg
in
dec
pop
adc
ja
fstp
mov
pop
out
xchg
ss
lock
dec
add
xchg
pop
push
dec
mov
mov
sarl
cltd
xor
sarb
jo
repnz
jg
mov
sub
push
stos
int
mov
lret
bound
adc
cmp
orb
or
rol
inc
xchg
in
inc
jne
pop
test
pop
ljmp
cmp
ret
mov
mov
mov
cmpsb
or
decl
decb
add
dec
xchg
adc
sahf
fisttpll
push
push
mov
jns
aas
fs
push
cmp
jp
lret
push
nop
xor
addb
imul
or
in
push
mov
sbb
int
lret
mov
add
imul
stc
in
push
cmp
loop
and
scas
sub
sub
scas
pop
movsl
std
lahf
jnp
rcrl
push
or
lret
lahf
mov
jo
and
push
sub
loop
mov
sbb
arpl
jno,pt
lret
mov
xchg
mov
jp
or
aad
sahf
push
fldl
frstor
ss
je
repz
inc
outsl
xor
std
dec
sti
lcall
rcl
sub
scas
jecxz,pt
stc
mov
xchg
mov
enter
xchg
test
mul
dec
push
or
aaa
xchg
mov
jg
pushf
stos
xchg
pop
dec
and
jecxz
imul
push
int3
inc
push
lahf
mov
push
out
out
mov
jo
and
dec
fucomp
mov
imul
mov
aam
mov
sti
adc
cmp
mov
mov
inc
ja
fadd
sub
pop
repz
mov
dec
sbb
xor
push
lcall
jbe
in
cwtl
enter
mov
jl
jae
jae
xchg
xor
repnz
add
das
dec
in
dec
fstpl
ljmp
stc
xchg
pusha
add
les
inc
adc
enter
mov
xor
sub
lahf
mov
repz
mov
lea
sbb
xor
mov
lods
jnp
or
pop
and
add
aad
cmpb
mov
jo
push
mov
inc
xor
or
pop
ja
adc
faddl
orb
inc
sbb
dec
adc
lret
mov
int
nop
or
dec
inc
dec
shr
in
push
sub
xor
pop
rorl
xchg
sub
adc
popl
das
stos
gs
add
lock
in
mov
jl
in
insl
inc
inc
pop
mov
pop
push
jmp
mov
leave
inc
mov
lods
cltd
rorl
mov
aas
aam
push
mov
and
jb
and
lods
jle
jp
adc
sti
sbb
leave
push
or
xor
sahf
sub
dec
pop
cmp
xor
dec
icebp
xchg
and
mov
mov
loop
icebp
sahf
imul
mov
test
jae
dec
inc
push
push
push
mov
cmp
sbb
xchg
cli
fimuls
pop
insb
stc
bound
js
adc
pusha
pop
pop
in
inc
mov
xchg
stc
cli
test
push
je
lods
lds
jl
sbb
andl
xchg
popl
sbb
sub
mov
jmp
jle
sub
mov
dec
xor
leave
ret
cmp
cld
out
and
pop
ja
mov
sub
mov
push
stos
bnd
filds
cmc
cwtl
stos
loop
imull
popf
aad
insl
push
lods
aas
test
int
adc
jl
rorb
adc
xchg
imul
cmc
xchg
jmp
mov
inc
dec
out
gs
and
adc
cmp
xor
push
or
jo
jp
scas
push
inc
imul
out
jo
mov
fstl
adc
fcmovu
push
popa
add
xchg
add
pop
rcl
inc
out
fisttps
pop
cmp
in
pop
adc
add
jmp
enter
and
sahf
dec
xchg
pop
movsb
mov
dec
fsubrl
dec
pop
sub
imul
or
push
add
out
rclb
ljmp
pop
sub
call
sub
mov
dec
out
daa
cmp
xor
out
pop
inc
pop
xor
imul
pop
dec
cli
sub
sub
in
and
test
cmp
mov
lods
pop
cmp
js
adc
push
lcall
imul
ljmp
lock
outsb
pushf
scas
insb
out
pop
push
add
mov
movsb
inc
mov
sbb
push
dec
fnstsw
fistps
loopne
jge
xor
mov
lock
out
mov
add
outsl
stos
idiv
aam
fistps
cmp
scas
add
or
push
or
sub
mov
dec
jne
dec
and
mov
loop
scas
dec
mov
mov
mov
xchg
or
lahf
pop
aas
pop
dec
std
icebp
mov
ret
ja
jg
xchg
rol
cmpsl
in
lock
nop
xor
sbb
imull
xlat
add
sahf
pop
int3
lods
pop
cwtl
cmp
xchg
or
lret
xchg
xchg
push
in
add
sbb
fidivl
inc
sbb
fsub
fdivr
out
or
inc
ds
pop
or
inc
lahf
sub
andl
movb
pop
push
add
imul
rolb
push
dec
or
pop
popf
cmp
sub
mov
rorl
inc
stos
or
lods
ds
adc
xchg
icebp
push
shrl
std
sbb
in
lea
nop
out
adc
loop
movl
clc
int3
jcxz
cmpsb
mov
pop
sub
repz
xor
mov
movsl
xchg
or
push
jmp
xor
rolb
xchg
dec
mov
xchg
lea
std
sbb
mov
xchg
cvtps2pd
pushf
fisubrs
mov
data16
leave
mov
adc
cmp
cmp
out
dec
mov
inc
ljmp
sub
push
xchg
cmp
mov
pop
ret
and
mov
pop
push
mov
inc
xchg
jnp
fstps
stos
xchg
inc
xchg
push
adc
dec
or
mov
mov
mov
decl
fwait
cmp
jge
cmp
incl
sub
aas
mov
pop
outsl
push
cmpsb
inc
clc
stos
stos
xchg
daa
lods
les
add
mov
jmp
xor
out
ror
popa
cmp
daa
out
jo
icebp
mov
push
xor
shl
push
push
test
loop
mov
call
imul
adc
push
int
stos
cltd
mov
push
imul
sub
add
pushf
cld
mov
sbb
fwait
jecxz
data16
cld
cmp
and
fs
mov
js
inc
maskmovq
testl
inc
imul
loop
scas
xor
mov
mov
inc
pop
inc
and
fwait
and
popf
leave
into
test
or
jg
ja
stos
cmp
fsubs
jecxz
ja
add
xchg
pushf
movsl
imul
clc
xchg
rcrl
pop
mov
test
pop
pop
shlb
mov
and
jmp
jle
adc
ret
clc
das
mov
xchg
repz
xchg
ss
sbb
fbstp
mov
lea
fsubl
addr16
mov
fs
mov
cmpsb
and
add
iret
and
lods
xor
push
ja
inc
stos
icebp
add
lcall
aam
nop
test
mov
push
movsl
pop
sbb
inc
imulb
pop
lret
and
das
out
lea
les
xchg
mov
or
xor
add
sbb
and
leave
stc
test
push
ja
nop
cmp
scas
dec
jno
rolb
out
inc
sbb
ret
cmpsb
jnp
mov
jmp
dec
mov
xchg
and
cltd
xchg
sub
xchg
js
xlat
xchg
inc
rcrl
mov
pop
add
in
pop
and
stc
xchg
mov
stos
ret
push
push
aas
jle
addr16
int
sub
loop
lret
and
push
jb
loopne
or
sbb
and
test
mov
scas
repnz
xchg
xor
pop
mov
ret
fnstenv
sub
imul
mov
cli
fisttpl
xorl
fnsave
inc
pop
mov
xor
fsts
fisttpl
xor
das
push
push
and
xchg
add
repnz
jp
inc
imul
add
dec
pushw
xchg
aam
or
push
fiaddl
out
pop
jns
mov
test
outsl
int
xchg
aam
dec
pushf
loopne
jecxz
push
mov
adc
xchg
cli
scas
xlat
and
or
sub
xor
push
mov
mov
adc
xor
and
push
xchg
ljmp
cmpb
pop
das
or
push
xchg
sbb
sbb
push
xchg
mov
repnz
or
insl
mov
arpl
daa
sub
push
sub
sub
xlat
pop
arpl
sbb
mov
sbb
xchg
push
xor
cmpsl
jae
daa
in
jo
das
jle
loope
push
jmp
jmp
cmp
lods
lea
jp
jns
and
lcall
lret
inc
aaa
aad
mov
push
sub
dec
mov
pop
loop
sahf
add
mov
cli
repnz
xchg
cmp
and
sub
mov
xchg
push
xchg
fmull
sbb
jmp
enter
iret
aad
sar
enter
shl
fwait
pop
out
or
std
sbb
inc
rol
imul
insl
in
add
jle
lock
mov
mov
push
lods
test
push
inc
and
push
xor
mov
out
sbb
testl
scas
xchg
adc
repz
add
mov
ret
test
insb
pop
movsl
pop
pop
inc
mov
cmpsb
push
push
aad
out
jne
dec
imul
repz
mov
cmpb
push
shl
push
orl
fisubs
adc
pop
addl
or
inc
mov
push
push
js
sbb
ficoms
and
testl
out
ss
nop
sub
je
flds
gs
ds
and
adc
xchg
popa
loopne
jg
jg
cmp
sbb
dec
out
mov
pop
cmp
pop
lds
jg
popa
scas
mov
and
imul
mov
ret
gs
popa
test
jge
or
push
popa
lods
sub
pop
jp
pop
xor
pop
pop
sub
mov
cmpsl
push
pop
fisttpl
imul
pop
and
repz
testl
mov
imul
push
jg
pop
sub
jnp
lock
mov
rolb
shrl
mov
jmp
adc
and
mov
and
hlt
stc
loopne
test
faddl
fcoms
sbb
mov
mov
push
and
sahf
inc
dec
or
int
loope
hlt
outsl
scas
and
test
rcrb
add
lods
cmc
lahf
inc
lcall
push
push
int3
pop
bound
cmpsb
outsb
js
adc
xor
stos
adc
jae
arpl
jbe
jae
jns
sub
ret
xchg
dec
cmpl
pop
jns
je
fcomp
lret
mov
jns
dec
repnz
scas
nop
jae
popa
mov
pop
and
fsubl
or
xadd
push
xor
mov
out
inc
push
out
fistl
sbb
push
adc
dec
aas
and
ret
shrl
mov
and
add
je
mov
lahf
rclb
mov
leave
fistps
mov
jbe
sbb
pop
jae
cmp
popa
inc
frstor
stos
dec
les
lret
in
stos
sahf
out
out
mov
cmp
les
into
inc
int3
push
mov
add
sub
or
in
jl
or
jne
dec
inc
das
mov
lock
xchg
pop
pop
movw
mov
idivl
adc
push
jmp
fadds
jo
loopne
or
stos
test
imul
xorb
test
ja
xlat
sbb
fists
cmpl
pop
push
dec
push
int
stos
jp
cmp
js
jbe
test
cld
scas
mov
lret
mov
test
ficomps
insb
add
pusha
mov
out
jae
mov
xrelease
jp
mov
sahf
and
pop
and
xor
jbe
popa
test
cmp
jae
adc
push
mov
outsl
pop
inc
lcall
mov
sub
movsl
cmove
test
pushf
mov
xlat
mov
ljmp
jl
sbb
es
mov
aam
jns
mov
and
iret
jnp
repz
cmp
xchg
aaa
jle
jnp
popa
pop
je
loop
shll
add
mov
jmp
test
cmp
test
fstps
aad
ret
xchg
imul
out
mov
mov
aaa
add
scas
xchg
inc
jl
int
mov
clc
es
shll
lods
jnp
stos
in
jmp
int
and
xchg
inc
sbb
hlt
fs
int3
add
outsb
jns
pop
push
mov
mov
mov
shlb
pop
cld
es
leave
pop
inc
mov
dec
in
das
lds
pop
mov
or
bound
daa
jno
cmp
mov
push
sarb
xchg
popl
cli
in
mov
addb
fwait
and
cmp
sub
enter
adc
mov
xor
ss
sub
or
adc
xlat
and
out
jbe
xchg
hlt
fistl
movsl
int
push
jnp
scas
popa
mov
push
js
jmp
or
jne
add
pop
adc
fistpll
testl
adc
in
sbb
sarb
mov
jns
sahf
sub
push
mov
test
add
jno
xchg
jnp
insb
adc
add
int3
ss
pop
lods
lret
sahf
test
mov
mov
adc
jo
add
pop
std
push
cmc
pop
mov
fstpl
stos
sub
sub
out
jnp
pop
les
sahf
rcr
sub
stos
xlat
cli
lret
mov
sbb
inc
inc
jl
mov
scas
lds
add
loopne
lcall
xchg
push
fsubl
push
push
cmpsl
stos
imul
les
bound
fidivs
pop
lea
add
xor
mov
ljmp
inc
mov
mov
scas
push
lea
imulb
arpl
add
pop
test
dec
mov
adc
stos
lahf
out
xor
push
jns
adc
xchg
aam
pop
mov
push
mov
sub
xchg
push
adc
xor
sub
adc
sti
cli
cmp
into
dec
mov
cmp
dec
mov
jg
into
pop
cmpsb
pop
adc
lret
sbbb
push
ljmp
outsb
insl
aad
lret
sbb
fadds
test
cmp
mov
notb
movl
xor
xchg
jbe
lea
pop
add
cli
in
jbe
dec
pop
mov
inc
ljmp
lock
cmp
cmp
idivl
movl
push
sbb
std
rolb
in
aaa
jmp
inc
xchg
cmpsl
mov
mov
std
inc
hlt
xchg
push
and
dec
add
in
mov
fisubs
dec
nop
ja
and
outsl
xchg
aad
cltd
inc
cmp
pop
enter
xchg
fiaddl
add
addr16
mov
and
icebp
popa
aas
int
jno
pop
vpmulhw
push
scas
xchg
mov
pop
xchg
xchg
push
sub
pop
out
jb
aad
lahf
push
jb
dec
nop
out
decl
jmp
adc
push
test
jg
xchg
insl
adc
mov
push
jae
dec
inc
pandn
imul
dec
fstpl
ja
fldenv
mov
or
scas
sub
mov
push
je
cmp
push
add
adc
xor
ss
iret
mov
je
adcb
add
das
aad
iret
push
or
pop
out
adc
bound
cmp
xlat
or
sar
cmpsl
std
xor
mov
xlat
rcll
mov
sub
pop
outsb
mov
sbb
out
lods
add
mov
and
cmp
sbb
xchg
les
jns
ljmp
ss
jle
cwtl
push
mov
popa
hlt
cli
lahf
bound
scas
sub
test
add
enter
sub
jecxz
sub
sbb
push
outsl
test
fwait
cwtl
lock
std
push
imul
adc
cmp
enter
mov
jb
sahf
sub
adc
pop
out
iret
ret
movsb
pushf
in
insb
cmp
nop
mov
mov
bound
outsb
fxch
push
pop
mov
push
pushf
dec
sbb
xchg
add
sub
aad
dec
inc
adc
dec
scas
inc
xor
sub
pop
insb
mov
fistpl
push
into
inc
or
jnp
insb
lds
push
cwtl
xchg
mov
outsb
fistpl
and
testb
cmpsb
mov
and
ds
test
inc
mov
iret
cltd
lock
add
aaa
loope
or
jnp
clc
in
mov
xor
lahf
dec
adc
mov
loope
test
loopne
mov
add
sbb
cld
mov
aad
insl
xchg
add
lret
mov
mov
xchg
or
and
add
stc
pop
and
mov
aaa
xchg
popf
cli
out
fmull
inc
mov
std
xor
data16
sbb
fidivl
imul
sarb
repnz
cmp
or
out
cmp
fidivrl
or
mov
shrb
scas
sub
pusha
fiaddl
mov
fwait
ds
xchg
push
out
fldt
stc
dec
cmpsb
xor
mov
jecxz
push
xor
das
incl
dec
dec
fdivrs
test
and
xor
jmp
fisttps
adc
jnp
sbb
add
je
adc
jecxz
ljmp
push
lret
mov
jg
lds
pop
loope
cmp
lahf
pop
sahf
sbb
fistpll
sti
sbb
add
test
sbb
adc
mov
xor
stc
xchg
sbbl
jecxz
ret
inc
inc
lret
sbb
mov
xchg
mov
cmp
outsb
mov
andl
mov
fnstsw
xor
sahf
je
inc
cmp
push
icebp
jnp
ja
cmp
push
xor
and
aam
mov
dec
iret
cmpsb
cs
stos
addr16
imul
lea
adc
jno
or
ds
push
pusha
rcr
rcl
ret
mov
sti
xchg
loop
rorl
ljmp
sub
dec
push
mov
and
adc
push
fists
notb
xor
int3
xchg
dec
adc
and
xchg
adc
jbe
and
leave
push
cs
pop
adc
pop
push
jecxz
std
lahf
pop
clc
inc
inc
push
sahf
ret
stos
mov
mov
dec
aas
rolb
cmp
mov
rorl
mov
inc
hlt
sub
mov
push
push
sub
inc
adc
xchg
test
popa
iret
mov
push
pop
ret
mov
and
shrb
mov
sbb
out
imul
imul
lret
xchg
into
jmp
fwait
scas
mov
pop
outsb
dec
pop
jnp
imul
or
cmp
sub
fucomi
lret
fdivrp
into
jmp
fwait
scas
mov
pop
outsb
dec
pop
jnp
imul
or
cmp
sub
fucomip
lret
fdivrp
into
ljmp
mov
pop
jnp
imul
sub
push
cmp
sub
fcmovnu
lret
call
fwait
scas
or
cmp
push
andl
hlt
loope
icebp
aam
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
or
sbb
sub
cmp
std
cwtl
ss
sbb
je
mov
gs
cmp
sub
or
or
stc
sbb
sub
cmp
dec
mov
jns
cltd
jnp
imul
sbb
or
loopne
jmp
push
mov
jns
nop
lcall
leave
js
inc
mov
scas
or
jbe
sub
pop
jo
pop
mov
loop
pop
loope
rcl
adc
mov
xor
in
adc
add
mov
push
dec
inc
dec
cltd
mov
push
inc
testb
outsb
fiaddl
fdivrp
test
xor
leave
sub
or
test
sbb
imul
mov
bound
xchg
or
inc
push
and
mov
test
dec
dec
xor
movsb
push
sbb
mul
idiv
or
movb
sbbl
mov
adc
aam
jmp
pop
jmp
stc
add
sub
cmp
pop
mov
pusha
nop
nop
popa
xorl
and
ds
insl
gs
jl
dec
fmuls
cmp
aas
and
jns
mov
cmc
adc
or
es
push
mov
cmpw
dec
int3
and
std
sub
lret
or
dec
mov
lahf
jne
insb
insb
mov
push
mov
imul
mov
sub
sbb
or
stc
sbb
sub
cmp
dec
mov
jns
mov
imul
sbb
or
stc
outsb
xchg
clc
dec
fisubl
and
flds
inc
shll
mov
xchg
pop
in
ds
clc
xchg
sbbl
jne
pop
movsb
out
adc
out
repz
pop
sub
nop
mov
sbb
and
call
xchg
sbb
cmp
push
inc
cmpsb
lahf
adc
pop
dec
adc
xchg
icebp
lods
int3
sahf
lods
add
stos
jp
mov
add
insb
jns
xchg
xchg
mov
in
aaa
roll
push
mov
xor
movsb
in
arpl
and
popa
mov
clc
adc
mov
outsl
aaa
dec
jg
mov
xchg
das
push
jne
dec
pop
jg
ds
mov
sub
addr16
adcl
dec
addr16
inc
xor
std
gs
add
mov
push
sbb
mov
or
push
dec
push
jno
mov
mov
or
jns
mov
fcom
pop
repz
jmp
sub
mov
data16
pop
and
cmp
shll
fisttps
insb
mov
xor
cwtl
cld
add
xor
sub
xchg
scas
in
and
stc
xor
mov
xor
out
sbb
mov
clc
mov
mov
cmp
lods
cmp
lock
mov
push
mov
mov
ss
rol
sub
pop
rol
leave
pop
cmp
and
addr16
sbb
in
adc
add
out
sbb
dec
int
rcrb
cmc
mov
push
adc
lret
xchg
push
rorb
jnp
pop
mov
lock
lods
popf
das
mov
pop
mov
pop
mov
sbb
sub
flds
cmp
lret
pop
ds
sbb
enter
sub
in
bound
and
fcmovbe
mov
xchg
popf
stos
aam
adc
testl
ret
sbb
outsl
cmp
dec
cli
inc
and
xorl
fildl
cmp
pusha
ficomps
faddl
dec
add
sbb
mov
jns
or
test
adc
aad
fdivs
push
inc
pop
loopne
mov
mov
mov
xor
mov
arpl
loop
pop
loopne
lds
aad
inc
jecxz
subl
scas
dec
or
jbe
cmp
fcomps
xchg
pop
cmp
add
out
aaa
nop
xchg
pushf
push
nop
test
loope
xlat
addr16
into
mov
or
jecxz
sbb
xchg
add
aam
shlb
mov
mov
aas
bound
inc
pop
insb
sbb
inc
pop
out
or
sti
shl
sub
nop
enter
fisubrl
sbb
or
push
orl
ret
jmp
pop
mov
aas
pop
push
sub
je
mov
outsl
jl
xchg
adc
enter
shlb
mov
jno
mov
jnp
pop
stc
popa
sbb
int
leave
xlat
xor
arpl
aaa
sbb
int3
xor
stos
popa
xchg
fcomp
push
shll
pop
xlat
test
or
xor
shlb
repnz
fucomip
pop
sub
xchg
pop
jl
add
and
dec
adc
decl
scas
dec
mov
pop
out
jne
ret
fcmovbe
cwtl
stos
sbb
push
movsl
out
or
popf
jecxz
repz
out
icebp
test
add
jno
aas
sar
inc
out
and
out
shlb
inc
push
jge
arpl
dec
ficomps
jne
xor
mov
inc
rclb
dec
cmp
add
add
cld
lea
push
adc
das
jb
nop
lea
mov
xor
arpl
fs
jecxz
mov
mov
xchg
adc
add
gs
pusha
cld
gs
xchg
sarb
inc
sahf
jno
out
pop
std
imul
jp
mov
or
into
data16
jle
mov
mov
mov
mov
xchg
jno
push
cmp
loop
scas
lcall
aas
aaa
int
add
xor
pusha
sub
xor
test
mov
stos
gs
lds
jae
mov
push
ftst
stos
jg
xorl
or
push
cld
jne
xor
xor
jmp
mov
xchg
push
in
jp,pn
cmpsb
rclb
jno
and
mov
outsb
movsb
mov
shll
inc
mov
sbb
jp
jae
test
dec
inc
sub
pop
sbb
sub
and
lcall
ss
stos
or
dec
xor
sti
inc
int
push
iret
sbb
and
and
jg
movsb
std
add
clc
sub
mov
xchg
fisubs
jae
shl
fwait
xor
daa
out
xor
inc
push
int3
and
sub
push
push
iret
and
xchg
cmp
inc
jmp
add
dec
xchg
test
xchg
out
ss
xchg
andb
lcall
mov
gs
aam
fildl
pop
mov
push
aas
push
aas
mov
dec
mov
and
scas
xlat
mov
inc
push
or
stc
xlat
das
and
in
mov
das
out
mov
iret
or
imul
sub
pop
iret
pop
mov
xchg
mov
cmp
out
push
dec
gs
jo
in
scas
roll
jg
mov
mov
mov
sar
mov
sub
jbe
mov
imul
inc
cmp
and
lahf
mov
movsb
rcrl
sub
aam
das
adc
ds
pop
je
subb
xor
dec
sub
punpckldq
adc
test
add
and
cmc
lock
inc
mov
add
adc
stos
add
mov
sbb
sub
add
xchg
stos
mov
std
xor
inc
call
ja
adc
stos
or
jb
jmp
int
push
cld
mov
lret
sbb
cltd
ret
sub
scas
and
jns
std
out
scas
outsb
add
repnz
pusha
mov
mov
icebp
mov
int3
xor
cmp
xchg
movsl
cmp
out
pop
mov
js
push
repnz
cmp
pop
lret
inc
bound
or
pop
jbe
push
ja
xchg
or
mov
adc
lds
lahf
clc
stos
xor
adc
repz
les
mov
inc
lahf
and
das
pop
in
popf
pop
test
lahf
inc
aaa
sti
xchg
push
fmull
push
clc
test
movsl
popa
cmp
xor
pushf
std
mov
dec
orb
in
pop
adc
dec
jnp
ror
lods
push
pop
lret
enter
sbb
dec
insb
mov
jp
out
mov
cmp
dec
add
inc
jo
xchg
adc
xor
adc
lcall
jge
lods
xchg
cld
xchg
fistpll
stos
push
outsb
push
lods
push
mov
jns
jecxz
jp
aas
leave
xchg
cmp
xchg
or
pop
xor
xchg
add
cmc
dec
jmp
inc
pop
pop
and
cmpsb
dec
lods
or
mov
jl
add
into
fmull
jp
pop
cmpsb
inc
rcll
sub
fildll
hlt
lcall
call
xchg
push
adc
jae
das
in
clc
lret
sub
jns
and
or
cmp
cmp
mov
ficompl
xchg
dec
fists
xor
scas
loopne
rol
inc
adc
adc
xchg
cltd
roll
mov
xchg
lea
testl
sarl
push
mov
mov
ds
dec
gs
jl
or
and
or
xchg
lock
inc
aaa
lret
xor
pop
or
inc
mov
test
ret
mov
inc
or
sbbb
cmp
inc
into
pop
sarl
ljmp
stc
push
mov
adc
or
cmp
pop
mov
cli
inc
scas
fucomp
neg
cmpsl
int3
movsb
cmp
int
cmc
jl
and
lret
and
aad
stos
or
mov
lret
jb
and
lret
push
xor
outsl
inc
jne
sub
lret
cltd
iret
lcall
aaa
jle
mov
outsl
mov
xchg
cmp
sub
pop
pop
add
sbb
sbb
jge
xor
dec
push
dec
and
jge
add
in
xor
dec
add
xor
stc
aas
inc
mov
mov
movlps
mul
jae
xchg
sub
lahf
xlat
dec
or
dec
out
and
jae
in
dec
sbb
xorb
mov
lods
xchg
xchg
xchg
sbb
in
jnp
ret
lods
or
or
jbe
xchg
pop
movsb
test
cmpsb
mov
xor
pop
mov
wbinvd
gs
sbb
movsb
imul
imul
mov
adc
lcall
les
dec
popf
jb
imul
cmpsb
inc
lea
cmp
es
and
xor
aaa
cmp
nop
loopne
push
xchg
xchg
cld
and
or
and
call
cwtl
push
bound
adc
sub
jnp
test
mov
jp
or
lcall
nopl
lock
and
jge
stc
outsl
in
add
test
push
lahf
das
sub
xchg
loop
mov
adc
sarl
push
sub
inc
aad
add
xchg
mov
inc
and
out
adc
lahf
xorl
adc
dec
jb
test
fimull
cmpb
or
pop
bound
jae
inc
data16
xchg
aaa
and
daa
adc
mov
pop
add
aam
into
pop
adc
mov
or
addb
add
aaa
dec
ret
sbb
sbb
dec
add
push
fldt
xchg
jp
loope
fst
dec
clc
adc
out
orb
inc
mov
pop
mov
pushf
cld
movsb
adc
test
mov
lret
push
out
adc
mov
enter
cmp
xchg
fst
fwait
test
and
xchg
out
out
int3
add
adc
in
add
xchg
xlat
jae,pn
add
jne
mov
sub
xor
push
loop
fists
pop
xchg
das
mov
sbb
jge
out
push
or
mov
pop
rcrl
aad
loope
test
inc
clc
lret
mov
mov
push
sub
lock
xor
xchg
pusha
out
fcoms
sub
scas
roll
push
mov
or
push
dec
aaa
lods
cmp
inc
add
leave
cmp
lods
out
push
and
lahf
xchg
arpl
jb
jl
es
mov
mov
and
pop
mov
movb
sar
insl
dec
xchg
mov
jne
cmp
sub
push
jge
arpl
cmpsl
mov
outsb
mov
aas
addr16
add
mov
loope
jnp
jno
xor
repnz
movsb
pop
push
fwait
lods
flds
mov
xchg
mov
call
mov
adc
jne
ja
push
in
xor
xchg
mov
mov
jg
cld
jmp
pop
cs
flds
inc
jge
adc
fistl
dec
outsb
aas
or
sub
ljmp
xchg
fs
dec
outsb
push
sbb
add
decb
das
int3
mov
push
sub
sbb
push
pop
jnp
and
in
or
mov
mov
or
push
push
xchg
dec
imul
inc
sahf
in
cmp
sbb
add
add
test
jb
adc
outsl
push
mov
nop
daa
sub
pop
lods
ror
out
push
aas
jl
mov
mov
sub
imul
sbb
push
xor
cmp
cmp
dec
das
icebp
aaa
sti
or
enter
fidivs
xchg
jp
rcl
push
mov
les
pop
adc
push
movsl
mov
mov
pusha
lret
pop
or
sub
shll
test
xchg
es
or
cmp
ss
jg
fnsave
pop
xlat
mov
add
pop
repnz
xchg
test
sbb
pop
aad
cmp
cmp
xchg
pop
std
orb
out
in
or
mov
sti
mov
dec
add
sbb
mov
or
pop
push
jge
das
add
cmp
outsl
lret
sbb
and
je
and
repnz
cmp
adcb
out
and
dec
adc
negl
push
mov
jb
stos
popf
mov
mov
stos
sbb
dec
and
xchg
rorl
or
mov
inc
jecxz
sbb
push
leave
push
or
ret
jmp
jns
test
sbb
fwait
add
inc
inc
add
loop
inc
cmp
sbb
sbb
mov
xor
pop
jg
icebp
fists
adc
insl
ljmp
shrb
jp
fadd
movsb
lods
add
inc
or
subb
fsubrs
insl
adc
lods
dec
leave
bound
test
fwait
push
mov
xchg
mov
cmp
cli
pop
add
and
cli
popa
popf
add
adc
add
cmp
mov
mov
mov
xor
inc
sbb
pop
sub
into
loope
popf
out
xor
xor
xchg
jbe
stos
loop
movsb
jmp
subl
fcomps
push
fildll
data16
xchg
das
in
or
out
inc
mov
jmp
xor
sbb
xchg
or
jg
or
ss
mov
sbb
shlb
enter
into
pusha
lahf
add
loop
dec
mov
pushf
pop
cwtl
pop
mov
rolb
xchg
shlb
xchg
xor
enter
push
mov
push
test
fstpt
xchg
shl
lret
xchg
push
dec
pop
dec
aad
fadd
insl
scas
cmp
pop
dec
mov
push
mov
xor
sub
out
std
mov
adc
arpl
jmp
pop
xchg
add
fwait
daa
mov
rorl
fwait
stos
mov
or
mov
add
adc
mov
ja
jae
lods
ss
dec
jecxz
aam
sahf
fcmovb
jg
mov
pop
mulb
and
jmp
nop
enter
dec
fcmovne
push
data16
lods
fwait
dec
fisttps
jo
or
lods
mov
lods
testl
and
daa
popf
sbbl
jl
sub
pop
pop
add
sbb
std
jg
aam
cmpl
inc
push
add
popf
adc
rolb
mov
pushf
mov
sbb
imul
adc
jle
inc
pop
mov
in
fcmovb
ja
add
and
lods
sbb
andl
pop
out
mov
push
mov
mov
push
call
pop
or
inc
in
sbb
jl
ja
xor
cmp
jae
or
shll
xorl
xchg
movsb
pop
out
adc
xchg
sbb
fadds
aaa
mov
cltd
aas
dec
fmul
cmp
gs
mov
ss
mov
test
movsl
filds
jo
daa
sub
dec
in
dec
or
stos
mov
push
lds
rorl
movsb
add
int
add
xlat
sub
rcrb
pop
test
leave
sbb
inc
sbb
imul
cs
or
sub
insw
pop
repz
lods
popf
decl
jl
rcll
enter
roll
cmpsb
pusha
out
fisttpl
movsb
jmp
push
bound
pop
inc
xchg
xor
mov
jle
adc
dec
nop
shl
mov
mov
lock
jno
jb
xor
mov
sti
rcl
cmp
pop
adc
xchg
adc
mov
cmp
mov
movl
push
sbb
sti
enter
mov
jmp
pop
pop
xchg
rdmsr
roll
aad
mov
mov
cmc
push
sbb
mov
mov
sub
cmp
test
lods
jnp
mov
in
xchg
xchg
outsb
aad
sbb
cmp
mov
add
pop
insl
add
sbb
mov
mov
jmp
fcmovu
loop
out
push
cltd
je
push
push
loopne
sub
add
lds
popa
shlb
mov
loop
data16
push
jg
call
popa
mov
lds
inc
xchg
je
cmp
or
frstor
and
mov
jnp
int
sbb
fnstsw
es
dec
or
pop
or
jb
pusha
jle
pop
in
fsubrs
push
sbb
out
call
mov
push
ds
sub
cmp
into
xchg
mov
pop
or
or
movsl
arpl
sbb
mov
repnz
daa
xchg
cli
out
enter
push
jle
cmpsb
and
mov
shlb
in
fs
cld
ficoml
pop
mov
and
lret
jns
movsl
stos
jecxz
push
xchg
adc
test
cli
xor
rcll
adc
rcrw
pop
pop
cmp
inc
dec
inc
cld
repnz
mov
stos
adc
mov
les
adc
fcomps
sub
daa
clc
es
mov
jb
ss
or
cwtl
cmp
push
xchg
inc
test
mov
xchg
test
fnstcw
sti
lcall
jge
dec
arpl
add
std
int3
sub
sbbl
loopne
inc
das
outsl
fistl
cli
xchg
popf
pusha
mov
mov
dec
mov
inc
add
movsb
fbld
addb
xor
xor
mov
jmp
pop
dec
fldt
xchg
imul
stos
mov
stos
jle
inc
lods
mov
push
pop
jb
mov
jl
push
mov
lcall
je
sbb
push
out
push
fbld
pop
mov
jno
fisubrl
fcomps
lcall
jge
call
sarb
mov
dec
jle
inc
mov
jl
mov
pop
cmpsb
inc
or
lock
repnz
pop
lcall
mov
jg
add
inc
movsl
pop
mov
mov
pop
dec
pop
jnp
jbe
rorl
fsubr
xor
or
out
inc
fnstcw
pop
mov
fldt
pop
inc
or
subl
and
loope
pop
gs
sbb
jo
fdivrl
xchg
sbb
sbb
cmpsl
mov
jbe
ret
fwait
lahf
sub
mov
or
sbb
stos
and
add
ljmp
shl
pop
pop
lahf
mov
hlt
cmp
cmp
jae
mov
aaa
loopne
push
jb
mov
cmp
lret
es
jl
int
add
xlat
andl
push
cmpsb
lods
push
and
or
mov
mov
fs
inc
mov
pop
popf
dec
push
pop
icebp
cmpsl
lds
ja
je
and
sbb
gs
inc
es
lcall
mov
sbb
leave
xchg
push
cmp
push
enter
scas
daa
cmp
sbbb
fistps
popa
add
cld
popf
adc
jbe
lods
jge
flds
jne
jae
adc
rclb
sub
stc
xchg
lcall
inc
imull
dec
jmp
push
std
fs
cwtl
icebp
xor
mov
cmp
push
pop
aad
mov
xor
jnp
mov
shl
loop
or
inc
fistps
sub
push
push
pusha
test
mov
jae
add
or
push
push
sbb
incb
nop
inc
push
or
movsb
out
mov
mov
leave
fs
adc
cltd
call
cmc
fidivs
sub
test
in
into
sti
mov
mov
mov
ljmp
adc
cmpsl
fcompl
sbb
mov
repz
jne
ja
adc
leave
out
pop
push
mov
pop
jns
pusha
fistl
adc
xchg
jae
hlt
sbb
push
sbb
xchg
inc
inc
dec
push
scas
jo
inc
mov
add
fcmovbe
ret
sarl
ret
loopne
test
sub
jge
ret
dec
add
xchg
adc
leavew
cld
dec
xchg
movsl
incb
cmp
sub
nop
out
xchg
mov
jle
lret
ret
push
imul
sbbl
popf
mov
push
sub
jns
xchg
push
add
mov
xorl
add
push
lahf
sbb
lret
mov
leave
cmp
test
inc
out
xchg
jae
jns
mov
imul
or
stos
jle
adc
mov
addb
stc
mov
add
push
mov
push
push
es
and
cmp
in
jne
push
mov
addr16
pop
subl
pop
sti
dec
sbb
sub
es
orb
pop
jecxz
iret
stc
hlt
push
fldcw
pop
mov
pushf
mov
popa
inc
fld
cmp
ja
jg
xor
pop
sti
notb
fimuls
mov
dec
mov
test
cmpsl
outsb
rol
xor
inc
pop
add
push
orb
lea
jbe
cltd
jo
das
push
imul
ss
dec
mov
jns
mov
imul
sbb
or
stc
sbb
sub
cmp
dec
mov
jns
mov
imul
sbb
or
stc
sbb
sub
cmp
dec
mov
jns
mov
imul
sbb
or
stc
sbb
sub
cmp
dec
mov
stc
mov
retw
add
ds
out
notb
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
pushf
xchg
sub
cmp
div
jl
push
pop
sbb
mov
pushf
call
int
or
sbb
sub
cmp
sbb
clc
pushf
enter
enter
test
fdivr
mov
sbb
sub
cmp
dec
add
adc
idivb
daa
pushf
mov
xchg
mov
int3
in
xchg
mov
push
pusha
sub
jl
xchg
add
rorb
sbb
mov
inc
dec
and
pop
repz
jns
add
dec
cmp
out
or
frstor
cmc
mov
fdivs
mov
add
mov
insl
and
dec
imul
out
or
cli
push
inc
inc
jb
sbb
outsl
pop
mov
js
dec
shl
dec
cmp
mov
jl
pushf
pop
pop
mov
sub
push
cld
jo
fcomi
insl
jecxz
jg
sub
movsb
sbb
insl
insb
adc
stos
jmp
enter
test
hlt
mov
mov
stos
xchg
pop
mov
sbb
xor
mov
cwtl
std
or
js
cwtl
sub
cmp
dec
cmp
ret
mov
lods
enter
xchg
fcoml
cwtl
cld
out
sub
inc
sbb
cmovl
inc
sub
insl
in
lods
ret
lods
fsubs
sbb
pop
sub
je
sub
sbb
ficomps
fldcw
mov
xor
dec
or
or
sbb
clc
pushf
call
int3
mov
cld
mov
sbb
sub
cmp
dec
cmp
sbb
clc
pushf
call
int3
mov
cld
mov
sbb
aas
mov
mov
cmp
subb
loope
int
mov
jmp
loopne
mov
clc
add
es
data16
mov
test
test
shl
inc
or
test
sub
pushf
pop
cmp
lea
dec
sub
in
sti
mov
sub
bound
dec
adc
mov
xchg
cmp
out
flds
xor
push
or
xchg
push
cmp
inc
rorl
cli
push
ljmp
shrl
add
arpl
f2xm1
lret
pop
push
repnz
jle
push
stos
cmp
dec
pusha
mov
insb
ret
fcmovbe
shlb
xchg
xchg
negb
repz
lret
imul
pop
xor
cltd
popf
add
sarl
mov
inc
cmp
add
cmp
outsb
mov
mov
loop
int3
push
mov
mov
sub
pop
cmpsb
loopne
sbb
sub
pop
add
mov
shll
mov
cmp
fsin
femms
sbb
inc
cmp
repz
mov
ss
iret
push
jbe
pop
mov
cmpsb
adc
jmp
cmpsb
cmp
push
sarl
adcb
ret
icebp
loop
pushf
int3
outsl
nop
setns
stc
fists
lds
push
popf
in
sub
cmp
jp
lods
sub
dec
or
xor
inc
sbb
jp
in
mov
mov
rcll
dec
insb
fisttps
out
cmp
lret
push
pop
push
adc
lods
cmc
pop
int
or
pop
inc
hlt
lock
mov
mov
pop
or
add
ja
push
testb
adc
movsb
sub
je
lahf
add
mov
frstor
sbb
jge
bound
or
or
repz
sti
dec
jmp
cmc
jno
and
stos
jge
into
fidivrs
in
sbb
sub
pop
pop
or
scas
or
jne
dec
adc
push
mov
push
fistl
popa
pop
hlt
cmpsl
popa
or
fimuls
sbb
dec
add
mov
jecxz
mov
lret
cmp
push
repz
hlt
fdivl
test
iret
or
shlb
mov
jle
inc
into
call
out
repz
pop
sub
dec
push
mov
sub
xor
add
cwtl
and
clc
and
mov
repz
pop
push
int
jge
daa
pop
mov
ficompl
outsl
xchg
xchg
leave
mov
pop
jl
dec
lds
cld
cmp
in
xor
movsb
jo
out
and
clc
js
xchg
js
lods
sub
lods
pop
divb
xor
add
mov
mov
xor
pop
push
inc
pop
jle
negl
xor
sub
pop
rcr
jg
cmpsl
and
pop
or
xor
mov
push
and
or
xor
jecxz
decl
push
js
jae
xchg
xor
cmp
mov
fwait
divw
psrld
add
in
popa
inc
sar
mov
lods
push
inc
mov
bound
clc
es
sub
mov
popf
addl
adc
mov
shlb
sbb
adc
push
in
sbb
push
bnd
cmp
jl
or
mov
call
rolb
cmp
das
lcall
cltd
addl
jecxz
shrl
xchg
mov
test
pop
aaa
sub
jle
cmp
adc
xchg
sti
scas
ret
push
movsl
pop
pop
testb
rep
add
test
loop
push
push
inc
mov
in
fdivs
adc
mov
mov
adc
mov
sbb
ret
mov
sahf
push
ret
mull
mov
mov
push
jl
mov
push
jl
shlb
int3
and
sub
lds
cld
nop
push
cmpsb
cmp
bound
push
add
xchg
aaa
les
cmp
push
adc
ret
sub
jne
lea
push
loopne
int3
bound
bound
inc
adc
pop
pop
ja
sub
mov
push
nop
fcoms
cmpsl
bound
movsb
ds
jmp
test
test
out
mov
outsl
cmpsb
into
jecxz
aas
cmp
cmc
sub
xchg
dec
js
loop
sbb
cmpsl
out
pop
cwtl
movl
dec
inc
idivb
xor
cwtl
xchg
cmp
lret
stc
cmp
push
movsb
loop
pop
dec
cmp
insb
mov
mov
ljmp
jg
cmpb
dec
cmc
pusha
movsl
push
or
lret
fiadds
mov
dec
mov
call
cmpsb
jmp
jo
jecxz
hlt
mov
sub
fwait
and
das
mov
xchg
aad
jp
mov
jp
fildll
repnz
stc
ret
mov
and
lock
push
mov
push
les
or
mov
ss
in
mov
xor
cmp
lret
mov
lahf
mov
add
dec
or
cwtl
cltd
or
gs
icebp
mov
xor
jb
ljmp
or
cmpl
sbb
iret
gs
or
adc
movsl
clc
popa
fimuls
cmpsl
in
and
mov
test
mov
fldcw
sub
fstpl
sbbl
lcall
je
xlat
inc
stos
scas
and
fiaddl
adc
push
sub
jmp
mov
mov
jp
jb
subl
dec
into
adc
cmp
in
mov
call
push
xchg
cld
xor
sbb
or
and
add
pop
repnz
out
insl
icebp
icebp
gs
push
fstps
inc
sahf
or
and
fistpll
lcall
icebp
js
insb
jle
adc
enter
adc
out
jg
push
cmpsb
jb
pslld
scas
or
or
cmpl
push
xor
stc
inc
sub
xchg
jno
mov
mov
sub
cmova
mov
lret
pop
pop
sbb
into
int3
mov
mov
cmp
and
and
lcall
mov
add
mov
push
cmc
sub
xchg
ds
insl
shll
jnp
dec
addl
jle
push
cmp
sub
push
push
aas
jp
mov
ja
mov
shll
push
mov
cmp
scas
sub
mov
mov
adcl
pop
lret
out
cmp
std
push
push
in
lcall
sub
adc
insb
and
popa
gs
cmc
jnp
jecxz
neg
push
jbe
ss
and
push
lcall
jnp
fdivrs
lret
mov
call
jle
mov
inc
inc
stos
shr
int3
into
inc
mov
jmp
xchg
lds
or
xchg
xlat
ja
outsl
mov
addr16
mov
shll
in
cld
mov
stc
push
mov
or
adcb
test
mov
xchg
movhps
sub
bound
dec
sub
test
and
lds
push
js
mov
pop
std
push
sbb
cli
stos
sub
push
push
popa
inc
adc
ljmp
sahf
push
in
ret
repz
das
std
enter
js
or
sub
mov
inc
push
jb
pusha
clc
mov
out
mov
addr16
cld
enter
inc
mov
lock
mov
sbb
ss
xchg
pop
mov
outsl
cltd
xor
xchg
mov
fadds
xor
jbe
inc
sub
push
imul
daa
mov
inc
cmpsl
sbb
push
sbb
xor
in
jb
add
cmp
inc
and
in
clc
notb
mov
insb
psllw
imul
movsl
sub
lret
shlb
repnz
pop
and
test
sahf
je
xor
scas
imul
and
mov
mov
and
push
jmp
adc
dec
dec
xor
lods
sti
scas
push
mov
or
sahf
sub
mov
mov
pop
pop
addr16
cmp
loopne
inc
sub
jo
jmp
or
lods
gs
loop
xchg
mov
adc
dec
mov
add
and
shl
das
mov
ds
sbb
mov
mov
mov
sbbb
cmp
mov
incl
push
popf
lahf
cmpsl
push
mov
jmp
adc
lret
movsb
mov
mov
jp
insb
out
loop
mov
out
xchg
mov
add
xor
testb
popf
cs
push
adc
and
dec
xlat
loope
test
pop
mov
push
mov
sub
lret
cli
cmp
xchg
es
dec
sbb
subl
lods
daa
sbb
push
sub
mull
lret
cmp
adcl
and
jb
mov
movsb
testl
cltd
xor
or
cld
fcomps
lcall
xor
popa
mov
lea
mov
mov
out
push
stos
sub
mov
iret
mov
lea
std
in
dec
jp
mov
push
jl
jb
test
je
test
fwait
ljmp
outsb
push
sub
or
stc
lock
stos
icebp
hlt
pop
in
aaa
test
jo
add
xor
xchg
bound
push
cmp
cmp
xlat
dec
fdivrp
push
leave
popa
subb
hlt
loope
fistl
inc
sbb
dec
and
fwait
inc
pop
cmp
shr
pop
outsb
push
aad
xchg
add
mov
lahf
cwtl
sub
enter
or
test
pushf
hlt
std
mov
adc
ret
cwtl
imul
add
inc
mov
sbb
sub
cmp
xor
push
repnz
lret
ss
rorl
mov
inc
inc
ljmp
rcll
hlt
in
enter
and
out
xorb
aas
sysenter
int3
out
inc
popl
fmull
dec
or
pop
inc
lods
cmc
adc
mov
sub
mov
xor
rcr
xor
or
sbb
sub
movsb
or
mov
jns
jge
push
daa
cmp
dec
dec
bound
je
pop
mov
xor
enter
cmpsl
hlt
push
sub
pop
push
pop
and
movsb
jmp
mov
or
fldcw
adc
cwtl
popa
jmp
cmp
sbb
rcr
cmc
fwait
mov
push
dec
sbb
push
pop
cmpsb
sti
not
les
nop
push
dec
call
ja
data16
fsubl
mov
xchg
dec
adc
push
repz
jbe
add
mov
jmp
addr16
arpl
mov
jb
subl
loop
outsb
arpl
jecxz
loop
enter
sbb
sbb
or
sarb
or
mov
pop
jp
mov
cmpsl
popf
test
and
or
jecxz
pusha
mov
push
clc
sub
jp
in
push
std
pushf
cmp
pop
popf
lods
jno
adc
out
lea
push
loope
mov
scas
les
daa
cmp
shl
fwait
cmp
mov
out
sbb
punpcklwd
mov
sbb
and
push
addr16
jp,pt
sbb
shlb
mov
mov
xchg
daa
fadds
inc
push
jp
outsl
rolb
out
cmp
dec
repnz
jnp
jno
outsb
loope
mov
push
sti
dec
les
lea
mov
cmpsl
mov
xchg
adc
mov
pop
push
jne
ss
xchg
add
mov
pop
jne
shlb
sti
dec
add
cmovp
jg
jns
pop
cmp
jne
sbb
push
sub
dec
pop
repnz
ds
popa
and
loop
test
cmpsl
pop
popl
gs
add
adc
push
pop
dec
mov
sbb
adc
cmp
ret
mov
and
cmp
gs
fildl
add
xchg
stos
cltd
xchg
ret
mov
lea
sub
mov
and
xlat
and
stc
mov
adcl
mov
xchg
inc
scas
popf
inc
lret
dec
pop
cmc
fwait
add
fisubs
jo
stos
mov
scas
pop
insb
cmp
jbe
xchg
in
xchg
fldl
push
mov
cmp
push
sub
xor
mov
jp
enter
sti
mov
movsb
push
fwait
aad
mov
lods
sbb
and
cmpl
push
rolb
mov
push
jb
dec
mov
fisubl
xor
sbb
sbb
pop
sub
cmp
sti
loop
jns
mov
ja
xchg
lods
push
push
sub
lods
insb
cmp
cltd
addl
xchg
sub
int
and
pushf
adc
inc
movsb
movsb
dec
mov
and
stos
fld
push
jmp
sbb
jg
test
rclb
mov
mov
inc
data16
sub
xor
xor
xlat
hlt
daa
sub
inc
adc
insl
ret
pop
cmc
popa
mov
jg
adc
add
js
mov
outsl
pop
filds
test
pop
lcall
xor
out
fnstsw
mov
daa
xchg
mov
out
mov
in
fwait
mov
rcll
cmp
push
sub
push
xchg
int3
and
dec
rcrl
addb
ret
enter
pop
imul
dec
ja
mov
fisttpl
or
shll
inc
das
jb
lock
cmpb
addl
lcall
out
xchg
xor
sbb
or
inc
push
mov
jmp
loop
xor
inc
icebp
icebp
mov
push
lods
outsl
rcrl
js
and
addr16
popa
push
jmp
imul
arpl
jae
fnstcw
push
push
xor
adc
repnz
lods
sahf
mov
outsb
add
xchg
mov
sub
or
mov
lahf
setge
pop
xor
or
lret
mov
sub
and
xchg
repz
fs
xchg
xchg
sub
dec
or
sbb
push
cmp
and
mov
jo
mov
aad
iret
jne
in
add
pop
ja
gs
cmp
mov
int3
push
iret
nop
ret
or
repnz
cld
stos
pusha
in
xchg
loopne
mov
ljmp
xchg
push
sub
insb
jo
lcall
mov
shlb
movsb
loope
fxch
adc
cmp
out
inc
mov
in
cwtl
push
dec
iret
jl
outsb
jns
cmp
lea
pop
sub
cmp
std
dec
leave
fs
cld
push
jns
push
sub
pop
lret
mov
in
cltd
add
movsb
fistl
mov
jno
dec
lods
sahf
jmp
cmc
cmp
inc
sbbb
lcall
mov
enter
ljmp
push
xchg
push
add
lret
mov
lret
cmp
or
out
xchg
and
iret
sub
cmp
cwtl
jns
lcall
dec
clc
and
mov
pop
mov
fldcw
bnd
mov
ss
jnp
pop
pop
std
jns
xor
sbb
daa
enter
ret
sub
les
pop
mov
es
push
cmc
mov
mov
sub
imul
and
mov
gs
aad
mov
push
ss
clc
cmp
rorl
ljmp
dec
adc
or
mov
adc
xlat
int
add
pop
fstpt
sub
rorb
shrb
popf
add
dec
enter
call
movsb
fwait
repz
jne
cld
addl
imul
ja
pop
push
add
ret
clc
lcall
dec
jl
mov
je
in
add
das
mov
and
and
roll
stos
mov
pop
and
adc
inc
jmp
xor
push
test
aad
pop
xchg
pushf
negb
ljmp
lods
dec
negl
ret
cwtl
inc
mov
sub
loopne
adc
or
mov
xchg
pop
xchg
jnp
push
es
pop
xchg
sti
outsl
xchg
sbb
int3
inc
mov
inc
adc
js
popf
iret
pop
add
mov
mov
pop
sub
sbb
pop
or
test
into
push
or
sub
bnd
mov
xor
xchg
mov
leave
fldt
lods
inc
push
andl
xor
add
adc
xor
pop
push
dec
pop
jno
insb
mov
fstl
jns
das
push
js
cmp
adc
cmpsb
scas
sub
aas
and
jmp
xchg
cmp
jne
xor
leave
out
sti
add
loop
iret
dec
mov
and
mov
and
xchg
fstps
sub
xor
lods
mov
and
and
shr
aaa
cmpsb
insb
lods
mov
push
or
xlat
shll
jmp
in
mov
jmp
fprem
add
mov
jne
aad
fwait
sarb
dec
sub
lock
stos
xor
xchg
mov
cltd
shrl
out
mov
fmull
cmp
cmp
or
ficoms
sbb
daa
cmpsl
enter
ds
mov
push
pop
loopne
push
test
cmp
test
xlat
mov
jmp
jbe
ds
out
sub
xchg
out
mov
xor
adc
mov
in
iret
pop
rcrb
jmp
xor
push
test
push
aad
mov
inc
ds
lds
ljmp
out
adc
fisubs
add
jbe
add
call
pop
mov
xchg
fdivs
lock
or
or
mov
fcompl
mov
mov
sub
add
inc
fisttps
bnd
inc
lods
sub
in
out
mov
push
pop
push
or
xor
mov
in
adc
insl
cmp
mov
nop
clc
mov
testb
sub
fists
insl
dec
mov
mov
jge
fldenv
mov
nop
les
mov
out
dec
push
pop
push
dec
outsl
shll
loop
data16
ds
pop
push
scas
test
lds
jbe
bound
push
inc
insb
push
fsubl
xchg
xchg
adc
xor
jae
mov
pop
sahf
cmp
flds
pop
pop
fwait
sarb
pop
mov
xchg
popf
in
push
lret
mov
push
fcomps
int
aam
les
sbb
js
fwait
add
fadds
pop
lds
mov
ljmp
ss
js
in
add
xlat
rolb
push
adc
in
jnp
outsl
cmc
gs
sbb
push
push
push
or
cmc
push
pop
xchg
xor
and
xor
fisttps
xchg
insl
fwait
jb
stos
repnz
bound
aas
pop
xor
repz
aam
outsl
ret
sti
xor
xchg
in
xor
xchg
testb
sub
push
sub
jp
jne
push
sbb
sbb
xchg
xor
pushf
xor
xchg
jmp
andb
cli
insb
sub
out
addr16
jne
add
push
mov
push
adc
mov
cmpxchg
xchg
ss
sub
dec
jecxz
call
xorl
add
sbb
repnz
mov
and
pop
pusha
xor
xchg
test
pop
push
pusha
push
out
cmp
jbe
xchg
adc
jle
mov
cmp
clc
mov
inc
in
mov
add
inc
push
into
dec
arpl
push
pop
insb
xor
popf
jae
xor
fldenv
es
sbb
insb
icebp
dec
push
loop
mov
insb
lods
adc
xor
push
sbb
jge
push
adc
adc
jge
aam
aas
stc
inc
inc
mov
jl
jle
or
pushf
outsl
push
mov
add
or
js
pop
sub
or
lcall
jb
pop
inc
fildl
adc
daa
out
pop
inc
xchg
gs
out
insl
loope
fdivr
pop
adc
dec
xlat
xchg
lahf
jno
mov
xchg
inc
sub
pushf
fsubs
sub
and
sub
cmpsl
outsb
add
pop
mov
out
mov
cmc
sub
sub
pop
aas
inc
push
pop
mov
adc
shlb
loop
or
test
in
mov
jnp
sti
and
adc
fdiv
push
sbb
cmp
jecxz
ss
lcall
mov
pop
push
mov
xchg
clc
ja
xchg
pop
popf
scas
jecxz
xchg
ret
call
out
lret
fcomi
sbbb
adc
mov
cld
out
lahf
sub
fwait
pop
cmc
xchg
and
xchg
push
mov
int3
into
jl
mov
test
inc
push
ja
cmp
sbb
fstp
push
sbbl
and
jae
pcmpeqd
subb
mov
and
pop
mov
jp
and
dec
push
adc
dec
aad
shl
fucomp
movsl
fiadds
out
pop
sbb
cltd
and
fiadds
xchg
jecxz
cmpb
mov
imul
pop
test
lahf
pop
les
lods
loop
in
aam
push
and
mov
pop
adc
push
dec
cmp
sbb
clc
pushf
call
int3
mov
cld
mov
sbb
sub
cmp
dec
cmp
sbb
clc
pushf
call
int3
mov
cld
mov
sbb
sub
cmp
dec
cmp
sbb
and
int3
mov
std
mov
pop
cmp
dec
cmp
cwtl
jl
mov
pushf
inc
push
fdivrs
adc
ja
call
fdivr
in
test
cwtl
jae
iret
js
dec
addps
outsl
cmp
pop
sbb
call
fdivr
test
mov
aas
push
addps
inc
outsl
cmp
dec
sbb
call
push
fsub
test
mov
pop
push
push
adc
sbb
imul
jecxz
lahf
mov
out
mov
js
sbb
inc
addl
inc
push
mov
or
test
cmp
leave
sbb
xchg
sub
icebp
pop
or
cmc
ljmp
cmp
jnp
int
ds
cmc
or
invd
outsl
cmp
jae
arpl
arpl
and
iret
ds
das
xchg
sub
pop
add
inc
pushf
mov
push
add
xor
inc
mov
pop
mov
pop
cmp
cmp
insl
xor
fdivs
add
cli
fisttpll
sub
xchg
mov
dec
repnz
pop
or
call
fcomps
test
mov
stc
push
aas
pop
aaa
sub
insl
or
in
fnstsw
nop
int
shrl
adc
sub
add
jno
push
repnz
lret
lods
out
fcoms
loope
cld
pop
and
pop
sbb
push
inc
add
ss
push
ja
lods
ret
mov
mov
out
mov
aas
push
addps
outsl
cmp
dec
sbb
enter
test
mov
aas
push
addps
outsl
cmp
dec
sbb
and
pop
push
mov
insl
ficoml
fsub
jl
and
loop
mov
inc
inc
or
das
push
adc
insb
add
hlt
lahf
push
xchg
sbb
je
in
xchg
loopne
aaa
das
int3
xor
pop
imul
mov
jb
or
div
cltd
std
shl
mov
adc
inc
mov
mov
dec
push
xchg
cmc
push
insb
dec
xchg
pop
leave
sub
mov
hlt
mov
fidivl
xchg
pop
sar
cmp
dec
inc
push
or
aam
jnp
aad
into
in
das
or
dec
in
pop
sub
and
ja
loop
jb
daa
jmp
das
addr16
cli
xor
mov
xchg
ss
shll
xchg
jle
mov
lock
adc
sti
push
fs
pusha
pop
aaa
lea
mov
pop
jge
cmpsb
cmpsb
sbb
mov
jmp
std
and
mov
rcll
mov
stc
push
mov
xchg
test
xlat
xchg
insb
mov
jbe
mov
lea
and
out
dec
aam
aaa
dec
repnz
or
mov
mov
sub
mov
std
pusha
xchg
adc
and
cmp
xor
leave
insl
sti
rorl
xchg
adc
mov
ljmp
mov
test
gs
jno
mov
lds
xor
and
add
adc
add
push
dec
mov
adc
jecxz
xchg
nop
rcrl
stos
lea
cmpb
push
mov
js
cltd
lcall
out
dec
in
pop
sbb
pop
test
sbb
lea
sbb
jmp
or
rcrb
pop
jnp
std
xor
push
movsb
dec
xor
or
fdivl
icebp
push
call
xchg
fisubrl
sub
add
jg
inc
mov
mov
jle
int
cmpsl
outsl
popf
lds
inc
call
scas
jo
out
push
nop
mov
mov
cmp
mov
icebp
push
sub
mov
inc
cltd
popf
mov
nop
mov
imul
stos
dec
jo
lods
push
adc
outsb
pop
scas
inc
mov
jecxz
push
sbb
xchg
or
aas
movsl
dec
rclb
repz
add
jecxz
push
adc
adc
out
mov
inc
mov
mov
call
int
fisttpll
inc
add
adc
fimuls
stos
scas
daa
xchg
xor
out
and
sbb
lahf
outsb
repz
fsubrs
in
mov
fsts
lds
cld
sub
ret
or
les
jle
js
ja
repnz
dec
or
les
sbb
push
aaa
or
inc
orl
mov
movsb
inc
popa
jg
sub
mov
lahf
outsl
stos
mov
mov
sub
push
out
mov
insb
jge
popf
ljmp
add
outsb
push
enter
pop
call
popa
aad
sub
sub
sub
clc
loopne
into
xor
rcl
xor
sbb
xor
lret
pop
pop
repnz
and
cli
sub
jmp
xor
inc
mov
iret
inc
mov
cltd
mov
jae
pop
mov
addb
sub
sub
mov
or
fdivr
mov
icebp
inc
call
ret
lcall
sbb
ficoml
aad
cmp
imul
jbe
push
sahf
jo
cltd
mov
cmpsb
in
loope
lds
xchg
add
jmp
push
lods
gs
mov
adc
pop
inc
mov
movb
adc
sbbl
lds
push
das
xchg
dec
jl
inc
mov
jno
adc
mov
roll
imul
jmp
stos
or
sbb
shrb
adc
ljmp
test
mov
or
and
or
movsl
mov
mov
mov
pop
xchg
rorl
cmp
cmpb
daa
jge
push
fs
mov
test
orl
mov
lods
flds
into
xchg
cmp
shll
fidivl
push
push
push
pop
inc
lds
data16
bound
sbb
iret
in
push
mov
pusha
lods
jmp
idivb
out
lret
out
cmp
pop
jg
xchg
lcall
jge
nop
repz
cld
shrl
arpl
dec
inc
out
pop
test
mov
mov
outsb
popf
inc
pop
in
add
fwait
mov
lock
hlt
push
mov
mov
push
imul
or
or
dec
aad
popf
test
cld
add
int3
xlat
das
jp
add
inc
sub
add
int
and
inc
mov
adc
adc
loopne
ret
faddl
test
jg
cmp
inc
mov
sbb
aad
cmp
jl
in
mov
pop
cmp
test
sub
xchg
movsl
lahf
jae
test
mov
add
push
mov
sbb
adcb
xchg
mov
loopne
jno
add
push
arpl
adcl
ds
or
idivb
insl
fsubrs
and
jae
pop
loop
clc
je
das
fiadds
or
pusha
inc
inc
ret
fs
jne
lahf
out
popf
gs
int3
xchg
lea
push
sub
push
ffree
icebp
rorb
ret
jl
xlat
in
xchg
mov
sbb
pop
adc
pop
popf
in
pop
mov
fnstenv
call
inc
insb
rcll
ret
sub
jns
inc
lahf
xlat
daa
add
je
or
mov
jne
jl
mulb
add
pop
repz
pop
jmp
fisttpll
inc
add
or
aad
or
insl
mov
add
out
or
lods
dec
and
cs
ja
cmp
push
roll
jge
scas
or
inc
adc
push
movsl
test
inc
fildl
mov
push
bound
incl
popa
xchg
popf
mov
es
sbb
jb
push
ss
aam
xlat
jnp
pushf
inc
icebp
in
mov
and
mov
mov
sub
push
lcall
pop
cltd
test
inc
test
sarb
sub
test
jno
aad
std
push
leave
sub
stos
jp
test
gs
pop
cli
and
dec
push
es
icebp
in
mov
mov
nop
mov
jmp
imul
mov
pusha
push
mov
xor
loopne
push
jmp
lods
lea
iret
lret
pop
lock
ja
in
mov
sbb
adc
jmp
shll
mov
push
mov
xor
sub
lcall
nop
fcompl
sysenter
sub
dec
insb
fnstsw
push
mov
pop
outsb
pop
frstor
or
mov
sbb
and
mov
int3
sub
out
jmp
iret
iret
dec
ljmp
push
xlat
stos
cs
test
xchg
fdiv
sub
pop
icebp
pop
xor
js
pusha
scas
dec
xchg
into
in
jmp
add
out
rorl
xchg
repnz
pushf
inc
sub
inc
mov
xchg
addr16
les
xor
or
pop
pop
decb
mov
sbb
add
repz
into
pushf
or
adc
mov
sub
filds
or
add
in
popf
mov
xor
and
push
sbb
mov
lea
rol
sbb
lods
dec
js
in
fmuls
jge
adc
lock
add
lea
cwtl
jmp
fs
and
shrl
scas
sarb
and
inc
ljmp
pop
jb
pop
mov
adc
fdiv
aas
xchg
ds
adc
shll
loop
or
aas
popf
cli
stc
pop
out
or
xchg
push
ja
daa
or
pop
cwtl
pop
push
sub
lcall
lcallw
fisubs
adc
dec
cmp
repz
in
ret
xchg
addr16
test
sahf
popf
lahf
ja
push
fwait
sub
mov
dec
dec
fldl
leave
mov
in
pop
sbb
xlat
daa
xor
mov
push
std
mov
in
push
daa
dec
in
out
bound
sahf
les
mov
xchg
lock
add
sbb
xor
sbb
add
imul
insl
jno
scas
mov
int3
pop
mov
pop
jae
jmp
pop
pop
pop
or
in
stos
mov
or
mov
in
lcall
scas
xchg
sbb
mov
stc
jno
cmp
push
imull
xchg
inc
int3
stos
int
dec
hlt
js
jmp
lret
nop
fstpt
popf
lahf
xor
stc
repnz
push
or
xchg
push
call
sbbl
cmp
inc
inc
xor
cmp
cmp
inc
in
out
popf
mov
insl
push
leave
in
dec
shrb
sub
mov
xchg
adc
cmpsb
or
sbbl
inc
add
add
xor
or
lret
jo
and
push
andl
mov
pop
xor
insb
rorb
mov
xor
xorb
rorl
pop
es
inc
mov
inc
sbb
out
or
test
sub
xchg
in
cli
jne
jmp
adc
xor
movsb
sub
negw
pop
and
dec
push
lcall
arpl
mov
hlt
add
test
lea
and
add
jge
sub
aad
or
add
dec
cmp
aam
mov
movsb
add
mov
call
lock
hlt
adc
sarb
es
pop
sbb
je
aaa
sbb
popf
push
daa
inc
xchg
or
popl
pop
mov
pop
add
sti
lds
bound
enter
and
mov
lcall
mov
into
pop
inc
cli
out
repnz
push
lahf
popa
push
jae
push
test
and
xor
lahf
add
add
push
jl
or
dec
sub
xor
lods
imul
adc
jle
xor
daa
ficoml
push
adc
push
insb
notb
flds
xchg
xorb
rorl
ret
ret
jle
scas
pop
and
stos
and
loopne
rclb
xchg
push
xchg
dec
aaa
add
dec
shrb
mov
aaa
mov
movsb
nop
mov
imul
lahf
fsubrp
xor
cmpsb
cmp
cld
dec
pop
pop
movsb
and
mov
mov
sub
jb
pop
in
or
adc
in
and
jne
test
sub
lret
bound
ljmp
jmp
idivl
mov
mov
filds
dec
pop
inc
lock
inc
dec
or
sbb
xor
xor
push
cs
or
movsl
lahf
pop
push
cmp
gs
mov
add
leave
shrb
and
cwtl
negl
arpl
dec
pop
bound
inc
sub
ja
rcll
pop
pop
out
xor
enter
inc
ja,pn
push
cli
sbb
arpl
add
or
clc
popf
scas
push
loopne
movsl
hlt
pop
decl
mov
mov
cltd
jge
in
mov
jmp
xor
mov
jo
jg
les
adc
pop
push
push
dec
sti
andb
push
xor
fwait
inc
ficoml
je
movsl
or
mov
xchg
and
jne
sbb
inc
nop
dec
fwait
sub
jno
fidivs
cmp
cmp
mov
sbb
gs
pop
jb
ljmp
mov
pop
mov
mov
repnz
push
scas
jb
adc
push
mov
adc
jno
mov
push
mov
clc
pusha
aaa
mov
xchg
jbe
aas
pop
and
pop
aad
sub
push
jg
popa
lods
in
pop
mull
lock
inc
out
icebp
adc
out
cld
mov
or
push
dec
test
subb
and
sahf
push
jo
xor
and
dec
mov
cmp
xor
xlat
xchg
ds
or
push
stc
test
push
sub
adc
imul
mul
push
lret
call
movsl
out
outsl
xchg
push
test
int
movl
mov
add
fninit
js
mov
add
xor
out
arpl
enter
int
ret
loop
pop
inc
xchg
loopne
inc
sub
insb
and
cmp
mov
dec
cld
or
pop
cmp
negl
fnstcw
frstor
bound
int3
jge
loop
in
mov
cli
mov
fdivrl
in
xor
xchg
popa
pop
das
jnp
dec
pop
leave
push
aaa
in
mov
or
xor
jge
in
pushf
loop
mov
cmp
pushf
dec
icebp
bound
bound
fwait
xorl
xor
ret
mov
xchg
ficoml
mov
cltd
sbb
push
cmpl
mov
bound
or
in
arpl
pop
mov
call
fcmovnu
fstl
xchg
aaa
dec
test
fsts
xchg
rorb
aaa
add
cwtl
cmp
xor
es
aad
sub
dec
addr16
dec
xchg
xchg
ljmp
ret
push
stc
or
mov
int
adc
push
inc
inc
adc
arpl
dec
fnsave
movsl
jo
test
aam
mov
iret
cmp
xchg
jp
adc
mov
xor
ret
or
xor
cmp
pusha
inc
xchg
inc
icebp
pop
jnp
loop
pop
jnp
aam
addr16
jge
pop
mov
xchg
xor
lar
sbb
aaa
out
cmpsb
stos
mov
lcall
loope
mov
outsl
pop
push
inc
out
cmp
icebp
pop
pop
cmpxchg
inc
pop
negb
adc
ss
fistpll
pop
cmc
xchg
ret
push
ja
lds
mov
shll
inc
dec
xchg
lea
fcompl
push
push
aam
loope
outsl
outsb
adc
pop
mov
mov
push
lcall
stos
lret
xchg
out
test
xchg
dec
aaa
lds
or
or
mov
pop
sub
push
stos
cmc
pop
and
stc
int3
popf
push
xchg
pop
mov
jnp
pushl
pop
dec
fsubrl
mov
int3
insb
mov
jecxz
and
sub
js
mov
push
cmp
jmp
insl
insb
inc
pop
scas
fiadds
pop
or
jg
adc
xchg
mov
xchg
xchg
push
jnp
int3
adc
scas
fstpl
adc
xor
fisttpll
movsb
movsl
dec
mov
push
in
xchg
lret
pop
add
test
sub
sbb
decl
cli
test
insb
pop
and
add
out
jno
or
mov
push
or
jg
sbb
or
push
or
das
push
push
imul
cli
add
xor
fcoml
mov
iret
xchg
and
mov
or
add
xchg
push
notl
out
push
aam
mov
mov
call
imul
pop
and
pop
sbb
pop
inc
xchg
loope
mov
scas
adcl
hlt
popf
jb
into
and
add
sub
xchg
cmpsb
mov
mov
out
mov
push
pop
dec
mov
arpl
shl
scas
sub
sbb
dec
sbb
push
imul
lds
add
into
mov
fistl
fcoml
imul
inc
cmp
jno
xchg
stos
dec
arpl
lahf
xchg
and
sub
adc
or
ljmp
loopne
jno
movsb
movsb
xchg
pcmpeqd
mov
bound
cmpl
or
xrelease
xchg
imul
cs
rorl
and
push
cwtl
cmpsb
adc
jae,pn
movsl
mov
push
cwtl
imul
and
pop
push
fildl
sub
or
jno
scas
inc
push
sbb
sar
or
outsb
nop
push
mov
push
mov
push
int
ljmp
sbb
jle
sbb
outsl
js
shrl
mov
out
inc
in
sbb
cs
inc
xchg
xchg
sbb
pusha
mov
das
fs
cmp
jns
dec
mov
push
imul
xchg
subb
cmp
popf
pop
xor
push
ljmp
leave
les
lock
in
out
mov
push
push
xchg
inc
sub
xchg
repz
or
lcall
sti
inc
sti
and
ja
dec
fnstsw
lods
inc
dec
and
ret
xchg
icebp
loopne
je
cmp
dec
add
scas
std
orl
or
push
imul
push
aaa
imul
fisubl
adc
fmul
dec
adc
icebp
jbe
adc
cmp
push
push
xor
cld
jmp
imull
or
push
sbb
mov
xchg
mov
cltd
mov
mov
add
roll
clc
scas
add
insl
adc
pop
adc
pushf
insl
push
loop
push
or
lea
pop
cmp
cld
sbb
or
sub
and
inc
jns
jne
ja
jl
gs
popf
mov
mov
sarb
mov
cmp
enter
cmp
loop
sub
fs
pop
fstp
push
outsl
cmp
and
aad
jge
inc
enter
pop
cltd
push
pop
out
bound
and
cltd
in
pop
stos
jb
and
rcrb
in
pop
lahf
stc
push
pop
and
mov
jbe
push
shll
cmp
xchg
adc
out
jnp
adc
rcrl
jmp
cltd
pop
jne
mov
rcll
fcompl
in
sbb
push
aas
inc
cmp
lods
adc
jne
adc
fcoms
cmpsb
into
pop
xchg
ret
push
ljmp
xchg
iret
outsb
jb
cmpsl
cwtl
pop
sti
pop
jl
imul
cld
sub
imul
insb
ljmp
sbb
rcl
jnp
push
dec
daa
mov
or
jg
mov
jne
aad
mov
test
mov
cmpsl
mov
adc
in
cmpsb
enter
jnp
mov
sbb
mov
insb
jae
imul
test
negb
pop
inc
add
pushf
mov
dec
outsb
inc
mov
push
popf
pop
mov
clc
clc
mov
pop
cmp
out
out
das
fldenv
sbb
imul
jbe
in
xchg
xchg
xor
push
pop
mov
sbb
pop
mov
jp
sub
ret
push
mov
outsb
xor
js
insb
push
das
cmp
cmc
ljmp
jge
jns
ret
push
jg
imul
cld
das
mov
and
mov
and
push
pop
scas
sbb
ja
scas
cli
pop
lret
and
sbb
lods
movsl
je
call
mov
push
and
push
stos
dec
rolb
movsb
repnz
mov
int3
jb
add
es
pop
xor
jle
inc
mov
push
push
cli
fcmovnb
add
ds
adc
mov
xchg
in
inc
ret
outsl
loopne
or
sub
inc
out
loop
icebp
out
fcmovnu
test
pusha
inc
test
movl
xchg
outsb
cmp
push
mov
inc
imul
loop
in
dec
push
inc
jmp
sbb
dec
jno
mov
jae
addr16
inc
sub
add
mov
pop
mov
pushf
or
push
sbb
pop
xlat
and
pop
dec
inc
ljmp
xchg
mov
push
ds
sbb
ret
rorl
dec
es
cmp
repnz
jg
adc
jge
inc
xchg
rorl
cmp
push
dec
mov
jg
add
lods
insb
adc
stos
xor
jmp
les
mov
dec
sbb
fnstsw
mov
jno
jge
cmpsb
ljmp
rol
jne
aad
imul
cld
pusha
xchg
inc
iret
add
cltd
adc
add
add
sub
cltd
mulb
add
in
neg
pop
imul
dec
xchg
ss
enter
test
fsubp
outsl
mov
dec
fs
outsb
mov
xor
into
mov
pop
js
xor
sub
or
testb
cmpsl
and
mov
ds
jge
sbb
aam
xchg
lcall
nop
out
inc
movsl
sti
loopne
pop
test
clc
pop
cltd
fwait
mov
nop
pop
lock
pop
adc
pop
sti
std
gs
int3
fmuls
repnz
push
in
cmpsl
scas
call
mov
xlat
nop
inc
mov
addb
dec
sub
or
sti
xor
dec
je
sahf
add
lea
out
ja
das
sbb
cli
dec
lcall
out
daa
lret
lods
mov
movsb
xchg
xor
pop
add
loope
or
jb
test
popf
xor
jne
fs
inc
das
test
inc
jmp
loop
jbe
mov
push
adc
out
lea
inc
xchg
cld
jnp
clc
fmul
fdivr
test
mov
aas
push
addps
outsl
cmp
dec
sbb
enter
test
mov
aas
push
addps
outsl
cmp
dec
sbb
enter
test
mov
aas
push
addps
jg
pop
or
clc
fdivr
test
mov
aas
push
comiss
mov
mov
xor
and
adc
add
jg
adc
es
mov
mov
cwtl
icebp
jmp
rcr
sub
cmp
or
sbb
popa
js
dec
inc
cmp
in
sbbl
xor
and
adc
add
jno
popa
js
dec
inc
pop
mov
mov
negb
lods
scas
scas
js
and
pop
jae
xor
popa
xchg
fimull
pop
jae
jnp
pop
rcl
sarl
icebp
lea
sbb
sub
xchg
pop
js
cmc
pop
shlb
sbb
add
push
clc
hlt
mov
leave
cmp
fildll
and
scas
fwait
mov
lret
mov
push
pop
push
adc
movsl
and
jno
jno
scas
inc
sub
sbb
cmpsl
sbb
sarl
push
jnp
cmp
push
sbb
mov
ja
cwtl
jl
jecxz
xor
sbb
push
mov
adc
ret
loope
lret
mov
int
loopne
ror
test
cmp
or
sbb
popa
js
dec
inc
pop
mov
mov
cwtl
icebp
call
rcrl
dec
fs
sbb
sub
movsl
mov
xchg
pushf
mov
xor
inc
inc
fs
sub
jbe
int
lret
lret
mov
mov
imul
jno
popa
js
dec
inc
pop
mov
mov
cwtl
icebp
call
rcr
sub
cmp
or
sbb
popa
js
dec
inc
pop
mov
mov
cwtl
icebp
call
rcr
sub
stos
popf
int
call
mov
rorl
mov
adc
arpl
add
jp
imul
mov
inc
inc
std
add
pushl
and
cld
paddq
clc
pop
or
je
jo
enter
xchg
mull
dec
rorl
dec
movsb
sbb
lea
lods
xor
mov
pop
and
out
and
lock
mov
out
roll
out
imul
push
rcrb
icebp
and
ret
mov
stos
icebp
popf
popf
sti
adc
outsl
dec
mov
xchg
lods
sbb
popf
and
ss
imul
push
das
roll
dec
inc
xchg
addr16
xchg
pop
xchg
xlat
xor
push
sub
iret
cmp
pop
sbb
or
xchg
lahf
or
cmp
pop
popa
fcoms
out
jns
test
pop
lahf
sbb
inc
adcb
sbb
lods
aas
pop
adc
in
sbb
cld
push
cmc
rclb
cld
aad
rolb
xchg
dec
xchg
add
fsubrl
xchg
mov
lds
adc
xchg
jl
lahf
divl
dec
push
mov
jp
xchg
outsl
inc
lret
jb
sbb
inc
dec
dec
push
pop
incl
and
ljmp
adc
fwait
in
cmp
jns
shr
in
push
lods
loope
mov
push
jle
mov
dec
mov
sti
add
scas
and
pop
pop
jo
sub
add
or
subl
les
adc
arpl
mov
mov
mov
in
push
mov
pop
fadds
pop
cmp
jo
push
and
dec
mov
sub
test
pusha
sti
ds
fsubs
jbe
fisttps
add
jns
insb
and
dec
imul
mov
add
pop
fcmovne
push
add
test
or
cmpsb
flds
adc
out
cmpsb
nop
das
mov
jb
pop
sbb
ss
and
mov
pop
jne
xchg
aaa
mov
pushf
add
pop
lods
and
xchg
rcr
ficompl
jge
adc
imul
lods
xlat
cmp
add
and
sbb
pop
call
test
mov
mov
pushf
in
nop
pop
jecxz
aas
mov
push
sbb
jle
pop
scas
sub
test
test
outsb
lods
scas
xor
leave
dec
pop
mov
push
add
les
aam
jle
cmp
push
mov
and
cli
inc
sub
hlt
adc
mov
dec
dec
inc
push
mov
ror
movsl
jl
or
jno
popa
dec
xchg
adc
rcrb
orps
aam
push
xchg
mov
sbb
xchg
sbb
xchg
xor
sbb
cmp
mov
adc
and
repnz
ja
loopne
jnp
mov
jmp
jecxz
test
cld
jnp
loope
es
shl
jp
jle
lock
mov
jmp
mov
arpl
mov
push
sahf
pop
jno
xchg
mov
cmpsb
pop
daa
filds
pop
inc
sti
ja
inc
fdivrs
adc
inc
sub
pusha
push
int3
dec
ljmp
dec
adc
int
ss
push
lods
stos
ret
loopne
fwait
adc
enter
cmp
fsubrl
movsl
loop
dec
lahf
mov
pushf
or
loope
lahf
popa
test
dec
and
in
sub
sahf
dec
mov
xchg
or
inc
nop
es
data16
fyl2x
imul
xchg
sub
pushf
popl
in
ds
jae
cmpsl
sbb
mov
pop
pop
popa
in
inc
ja
mov
int3
neg
mov
test
shlb
add
outsl
mov
sbb
ret
test
cs
jecxz
xchg
or
jnp
lret
rolb
adcb
imull
ret
idivl
das
shll
imul
cli
mov
mov
mov
xchg
xchg
jno
xchg
push
fdivrp
jbe
je
repnz
pop
push
adc
cltd
jne
mov
in
lret
and
and
sbb
loopne
imul
mov
inc
sbb
inc
cmp
cmpsb
loopne
xchg
imul
ss
mov
rcll
mov
imul
xor
sub
sub
fwait
mov
push
lds
and
pop
mov
jno
and
inc
int
mov
sub
shrb
push
outsb
pop
adc
inc
and
dec
push
or
xchg
xor
test
outsb
ja
inc
mov
xor
pop
sbb
out
loopne
cmpb
ficoms
movsl
decb
pop
sbb
mov
push
aas
sub
dec
mov
mov
adc
xor
sub
push
add
std
ljmp
imul
aad
jbe
daa
xor
mov
dec
mov
jecxz
jge
nop
xchg
ret
cmpsl
xor
inc
jbe
dec
cltd
fmull
daa
outsl
inc
xchg
mov
loopne
sub
mov
imul
das
int3
in
jnp
cld
inc
mov
loop
test
ds
mov
bsr
xchg
or
pop
aad
ret
dec
pop
outsl
dec
adc
sub
jg
pop
loope,pn
push
dec
or
adc
pop
push
add
cs
push
sarl
add
pushf
je
add
in
imulb
sub
mov
daa
repnz
xchg
push
push
lods
xchg
pop
rorb
lods
hlt
jg
icebp
fsubs
adc
in
fdivrl
js
daa
pusha
xchg
outsl
sbb
xchg
pop
call
mov
lcall
mov
inc
ss
or
mov
in
mov
ds
sub
sub
fadds
dec
add
test
ror
push
mov
jp
xchg
sbb
and
test
mov
lcall
scas
test
push
adc
adcb
pop
mov
jecxz
mov
or
xorl
push
push
push
scas
mov
dec
loope
jae
mov
lahf
jb
fwait
sbb
and
clflush
outsl
pop
into
popf
xor
jle
sahf
jecxz
cltd
jg
repnz
lock
xlat
mov
cmp
rorl
shlb
and
cmp
xor
js
add
lret
cs
cmp
orb
jmp
arpl
and
insb
push
aaa
lds
inc
jb
out
in
gs
aam
ss
fmul
addb
into
dec
or
add
mov
jl
or
popa
pop
insb
lret
xchg
xchg
xchg
out
or
mov
call
lret
mov
pop
adc
ss
push
sbbb
out
in
pop
fldl
popa
push
sbb
pop
push
inc
mov
sub
stos
movl
outsl
mov
test
stos
jbe
sbb
inc
jnp
ds
insb
and
jg
daa
outsl
vunpckhps
or
push
sub
cwtl
mov
fidivs
js
pop
pushf
adc
fwait
lahf
jl
push
dec
idiv
xor
fadds
ljmp
xchg
push
mov
insb
data16
jnp
inc
mov
scas
xchg
sbb
in
aaa
pop
fimull
cld
and
xchg
cmpsb
dec
les
xchg
test
push
imul
mov
sbb
xchg
mov
mov
aad
sbb
aad
mov
dec
mov
repz
jge
mov
xchg
push
call
cli
sarb
mov
cmc
push
push
push
inc
outsl
or
lret
mov
cmc
outsl
and
jns
or
push
cmpsb
sub
push
mov
fs
in
imul
sbb
incl
into
out
fcmovb
and
ror
xchg
jmp
xchg
sahf
jbe
xchg
mov
or
in
cmp
fisttpl
jne
xchg
sbb
jbe
pop
test
adc
dec
flds
pop
jae
es
scas
xlat
push
push
orb
xchg
lcall
push
shlb
stos
in
mov
pop
inc
scas
mov
and
mov
pop
sbb
or
arpl
or
or
in
hlt
xor
loop
push
bound
inc
aad
adc
scas
sbb
and
sahf
scas
test
xor
pop
jge
hlt
out
jmp
cmpsl
pop
in
divl
pop
rorb
popa
in
pop
das
or
inc
adc
fnstenv
or
push
sbb
dec
stos
and
fmuls
loope
test
ret
outsb
movb
imul
add
cmp
lea
xlat
jbe
cmpsb
call
mov
imul
xchg
sarb
or
and
mov
lea
pop
hlt
clc
lret
mov
jb
cmp
imul
adc
adc
mov
cltd
lea
inc
sbb
push
lcall
inc
push
mov
je
mov
jne
inc
fimull
fs
or
repz
cltd
mov
lods
cmp
jge
xlat
fldcw
sbb
into
sub
sbb
lcall
jge
mov
jne
xchg
mov
mov
stos
xchg
xchg
paddsb
shlb
xchg
shr
jmp
dec
adc
lods
loope
mov
orl
jo
adcb
mov
inc
fadd
jmp
push
cmp
or
neg
lret
shlb
or
lds
scas
or
ljmp
mov
stc
test
aad
ret
jb
mov
mov
out
sub
cmpsl
fmull
push
add
mov
int3
pushf
mov
rorb
mov
cwtl
shlb
pop
shrb
bnd
fs
mov
stos
shrl
or
dec
nop
daa
push
and
inc
dec
mov
dec
or
rorl
cs
dec
fstpl
mov
mov
mov
cmp
push
cmpsl
not
out
mov
jno
out
fmull
js
dec
and
loope
fisubrs
and
imul
jp
add
hlt
pop
shl
out
dec
and
test
ret
push
sbb
sub
in
popf
sbb
loopne
add
out
rcrl
pop
mov
add
sub
popf
out
je
stos
loope
int3
jge
mov
repnz
pop
movsl
xor
or
popa
dec
mov
test
popf
adc
pop
and
push
das
or
ja
daa
inc
cmp
xlat
push
outsl
mov
fstpl
mov
dec
movsb
shl
stc
pop
out
pop
mov
lods
daa
and
mov
je
jb
pop
inc
mov
add
loop
fs
stc
cmp
daa
test
xlat
daa
int
bound
dec
out
push
dec
mov
xor
lock
cmp
mov
xor
out
pop
pop
ret
dec
adc
movsb
rolb
pop
lods
mov
cld
addr16
mov
lock
or
or
mov
aad
flds
adc
movsl
fcompl
hlt
pusha
lahf
inc
xor
mov
iret
add
pop
add
push
push
mov
into
test
repnz
lahf
mov
inc
mov
ljmp
test
mov
fwait
mov
loopne
addr16
popa
andb
leave
lcall
shrl
lock
mov
repz
ljmp
ds
vunpckhpd
jne
cld
xchg
test
dec
movsb
add
sarb
lahf
xchg
mov
daa
push
movsb
out
test
adc
mov
inc
push
out
mov
hlt
xchg
ss
ret
adc
aad
out
adc
mov
dec
addr16
dec
dec
cmpsl
push
stc
pop
add
mov
adc
pop
es
or
aas
add
cmpsl
mov
lods
insb
sub
scas
push
push
aas
mov
xor
in
iret
inc
xor
mov
pop
xchg
or
xchg
sbb
in
cmpsl
leave
mov
ret
jno
or
lahf
xor
add
jl
add
clc
adc
dec
std
cltd
movsl
push
dec
outsb
xor
lods
ret
adc
xor
daa
push
sbb
jl
fs
lea
insl
iret
adc
inc
mov
push
sbb
sub
sub
imul
aam
push
testb
xchg
lcall
pop
xchg
and
into
cwtl
scas
and
mov
fimull
aas
jecxz
jnp
out
sub
xor
sub
ret
pop
lahf
push
push
xchg
loopne
xor
sub
aaa
lods
mov
dec
add
mov
data16
and
std
dec
mov
repnz
mov
or
xor
flds
repz
mov
xchg
arpl
fadd
mov
add
and
cmpsl
mov
and
xchg
fwait
or
jmp
fisttpl
inc
cld
xchg
jno
movsb
jne
arpl
adc
rcl
lods
pop
mov
push
cmp
imul
xchg
roll
dec
and
dec
add
repnz
jl
add
jbe
inc
pop
fisttps
xchg
and
inc
xor
cld
mov
mov
adc
jno
mov
add
mov
in
xchg
sub
insl
xchg
es
enter
jne
xchg
cmp
test
mov
test
movsb
push
jl
add
sub
jge
bound
cmp
add
pop
xchg
stc
push
aam
lcall
fwait
mov
pushf
xor
sbb
js
test
cmp
enter
cld
inc
fistpl
ret
or
pop
add
std
mov
ljmp
popf
pop
daa
adcl
adc
rcl
iret
leave
mov
push
lods
es
data16
rolb
jmp
ret
cs
cwtl
xchg
inc
dec
add
inc
xor
or
sub
jb
stc
leave
push
push
adc
fidivs
repnz
sahf
pushf
jnp
pop
push
lea
push
in
push
xchg
ja
out
push
add
std
cwtl
pop
push
adc
add
loop
addr16
mov
in
iret
das
cltd
dec
mov
js
outsb
jb
pop
addl
cmpsl
push
cmpsl
xchg
or
jo
repz
cmp
dec
fs
fsubrl
frstor
xchg
daa
push
in
pop
insb
dec
cld
lcall
pushf
stos
or
xchg
repz
aaa
nop
iret
imul
cmp
inc
cmp
imull
shll
jmp
inc
mov
leave
cwtl
cs
and
or
or
sbb
sbb
shrb
nop
or
andb
insb
xlat
lret
imul
adc
mov
xlat
cmpb
pop
jmp
xchg
mov
xchg
mov
shrl
xor
lods
add
mov
jecxz
inc
hlt
xchg
cs
pop
repnz
std
xchg
push
xor
sbb
xchg
scas
mov
jbe
mov
inc
dec
xchg
adc
sbb
fiadds
cltd
out
loope
adc
mov
dec
add
xlat
fwait
pop
repz
push
lods
mov
xor
int3
inc
mov
adc
sarl
icebp
lcall
aam
sbb
das
out
shlb
lret
jle
out
aam
leave
shlb
push
aam
sub
mov
sub
jp
and
xchg
test
out
cmc
lret
push
into
lret
sbb
pop
les
into
insb
ss
adcb
sbb
cwtl
xchg
fisttpl
pop
mov
and
or
cmp
and
out
leave
test
insl
push
adc
mov
stos
ret
cmpsl
jne
push
call
icebp
push
enter
mov
test
sbbb
push
xchg
jae
and
lock
xor
in
mov
aam
pop
inc
aam
outsb
stos
xlat
lcall
ficoms
inc
testl
or
call
into
adc
mov
dec
xchg
stos
std
sbb
scas
imul
ffree
scas
movsb
mov
dec
jge
mov
inc
mov
test
roll
out
sahf
daa
dec
pop
mov
loop
in
lock
and
pusha
mov
lret
xchg
shlb
ss
pop
orb
seta
xor
or
movsl
repz
cmp
xor
gs
out
jo
cmp
mov
filds
lock
push
leave
xor
jmp
fisttps
mov
mov
testl
mov
inc
jl
lret
and
mov
pusha
xchg
mov
enter
lds
out
push
insl
scas
xor
xor
sti
inc
testb
imul
adc
pop
mov
inc
pop
push
loop
jle
enter
aam
dec
mov
sbb
and
out
movl
cmc
mov
mov
mov
movsb
lret
and
lret
pop
mov
cmp
mov
add
shlb
adc
jnp
js
jle
mov
insl
push
xor
orb
rcll
imul
push
fs
mov
adcb
loopne
mull
mov
inc
add
cmp
mov
test
push
test
cltd
inc
push
in
jne
ss
clc
pop
leave
mov
jno
sahf
dec
adc
ja
test
inc
or
lret
enter
inc
out
add
ljmp
xor
out
je
stos
and
xlat
pop
pop
lods
and
cs
sbbb
lret
sbb
adc
repnz
and
cmp
out
cmpsb
mov
cli
lcall
or
fsubp
sub
cmp
nop
xor
mov
sar
sub
sbb
loop
hlt
and
jge
inc
xchg
or
inc
fnstenv
scas
arpl
mov
inc
adc
cmc
frstor
mov
adc
mov
push
insb
out
jb
mov
xchg
aaa
adc
je
outsb
cmp
mov
pushf
stc
nop
pop
dec
in
add
sbb
movsb
xchg
int3
mov
adc
xlat
pop
pop
loopne
mov
push
jae
add
scas
test
sbb
adc
gs
js
dec
popa
nop
push
dec
bound
mov
jg
pop
aaa
jne
in
mov
push
inc
insb
loopne
in
pop
adc
mov
int3
mov
rcll
aas
pop
shrb
inc
push
or
jb
shrl
movsl
lds
xchg
mov
mov
xor
out
pop
leave
add
dec
dec
push
aam
jmp
cmp
ljmp
lods
icebp
xor
jns
and
fbld
and
cmpsl
mov
shll
mov
inc
pop
xchg
pop
jl
xchg
jle
test
shl
mov
sub
cmp
out
sub
pop
mov
pop
xlat
inc
and
cmp
in
dec
data16
addr16
pop
xchg
fistl
mov
clc
mov
stos
jbe
mov
call
out
mov
iret
xchg
shr
into
js
push
mov
inc
add
xchg
sbb
xor
out
add
push
xor
xor
or
aas
pop
rorb
jo
hlt
loop
insl
shrl
sbb
addps
dec
mov
and
add
cli
xor
xchg
mov
pushf
imul
or
ret
aam
lds
sub
aad
xor
xor
adcb
sub
lea
lods
xchg
xor
test
test
and
inc
cltd
movsl
jae
or
lret
sahf
repnz
sub
xchg
loop
adc
mov
movsl
xchg
cwtl
or
sbb
mov
cmpsl
mov
cmp
mov
int3
xchg
sub
int
jnp
stos
sub
in
mov
hlt
loope
inc
fdiv
jno
aad
adc
mov
xchg
pusha
dec
ret
sub
and
fidivl
push
into
sbb
and
dec
sub
lods
xchg
enter
cmp
xor
sbbl
cmp
loop
in
orb
hlt
xchg
test
mov
je
fcmovnu
int3
jb
insl
sub
arpl
jg
pop
xchg
jmp
shlb
xor
adc
rcrb
call
mov
insl
xor
and
hlt
mov
mov
pop
shlb
mov
adc
int
mov
adc
iret
inc
shrb
xor
jbe
stos
or
scas
xor
sbb
cmp
or
jle
cvtps2pi
pop
in
ljmp
and
adc
adcb
testb
push
mov
push
mov
mov
rolb
sbb
outsb
pop
adc
cmpsb
mov
cmp
xor
jo
leave
cmp
push
xchg
push
jnp
cli
xchg
push
add
add
popa
sarb
lea
jne
daa
loopne
push
jae
inc
testl
aas
mulb
xchg
pop
in
in
fsubrs
mov
mov
cwtl
cmpsb
jo
fldcw
jae
dec
cltd
cli
dec
pushf
insl
sbb
mov
sahf
pusha
pop
in
mov
mov
add
jno
popa
js
dec
inc
pop
mov
mov
cwtl
icebp
call
rcr
sub
cmp
or
sbb
popa
js
dec
inc
pop
mov
mov
cwtl
icebp
call
rcr
sub
cmp
or
sbb
popa
js
dec
inc
pop
mov
mov
cwtl
icebp
call
rcr
sub
cmp
or
sbb
popa
js
dec
inc
cwtl
mov
mov
out
xchg
pop
cs
ds
adc
and
pop
shrl
xchg
aad
or
push
shrl
add
push
roll
jno
popa
iret
xchg
adc
and
jg
inc
icebp
jno
popa
adc
add
sub
xlat
push
loope
mov
popa
rcll
push
mov
daa
test
popl
xor
dec
les
jb
and
lcall
xchg
mov
pop
xchg
mov
vdivss
push
pushf
push
insb
out
add
dec
into
pop
jno
inc
rcrb
cli
insb
sub
stc
or
ss
xor
cli
add
mov
mov
popa
filds
movsl
loope
adc
and
hlt
xor
sbb
add
dec
into
lret
and
inc
or
out
inc
loope
rorl
or
inc
shl
and
jns
xlat
push
xor
cmpb
push
mov
outsb
jle
les
xor
andl
dec
out
dec
cmpl
popa
or
sbb
and
jno
popa
jae
adc
sbb
icebp
imul
out
pop
fisttpll
push
je
lods
adc
push
in
mov
flds
push
shrl
add
fs
push
ret
push
addl
cwtl
xor
hlt
jo
je
arpl
inc
popf
adc
adc
popa
pop
fisttpll
sbb
icebp
popa
loope
adc
and
push
roll
loope
adc
and
jno
popa
loope
adc
and
push
roll
loope
adc
push
dec
scas
mov
enter
fsubp
pop
mov
mov
cwtl
mov
mov
cli
and
ljmp
mov
sub
push
xor
shll
in
inc
inc
cltd
outsb
pop
outsl
rorl
and
jnp
sub
mov
jb
ljmp
sti
mov
xor
dec
fldenv
push
cmpsl
push
shll
push
mov
rorl
stos
xchg
jnp
xor
cmp
push
stc
out
pop
push
jl
divl
fsubl
ror
sbb
mov
cmpsl
loopne
xchg
iret
jmp
lds
call
cltd
pop
jo
data16
cmpsb
inc
add
lcall
xchg
add
cltd
aad
hlt
cmp
ljmp
mov
push
cmpsl
mov
or
sub
pusha
in
mov
data16
mov
jg
cmp
lret
loope
inc
xor
and
push
push
sbb
pop
dec
lock
mov
dec
jge
mov
cmc
hlt
or
xchg
add
decl
fwait
mov
dec
jge
mov
movsb
movsb
push
les
mov
orb
add
or
or
or
mov
lods
arpl
out
in
out
add
jle
je
movsl
adcb
shrl
js
or
mov
add
jb
jnp
sbb
push
fs
and
adc
dec
mov
int
stos
and
xor
jmp
mov
and
cmc
adc
mov
pop
cmpsb
mov
and
push
sub
inc
out
cmp
sbbl
aad
adc
scas
shlb
mov
push
or
jmp
ljmp
and
mov
in
mov
sub
hlt
aas
add
jno
cmpsl
das
push
or
and
in
popa
imul
mov
or
push
jg
mov
lahf
or
xor
out
dec
mov
pushf
aaa
xchg
and
data16
push
lds
push
inc
pop
sbb
jae
sub
and
sbb
pop
jns
adc
int3
mov
pop
push
inc
adc
cwtl
and
inc
orb
dec
mov
and
lahf
int3
mov
push
and
pop
jnp
or
jecxz
adc
xchg
dec
out
adcb
mov
shl
lret
sarl
mov
mov
ds
subb
pop
daa
push
cltd
adc
ja
ja
inc
es
daa
hlt
push
mov
les
pop
subl
jge
sub
in
sahf
xchg
lcall
pop
xchg
addl
add
sub
fwait
or
xlat
lock
movsb
scas
out
les
cmc
jg
or
jle
xor
or
mov
lock
jne
ja
sub
xor
daa
pop
adc
clc
int3
mov
dec
fstpt
push
ja
mov
add
push
dec
aaa
fldl
repnz
aaa
lock
cwtl
inc
lret
test
loop
inc
jae
jns
ja
inc
lahf
outsb
sub
inc
and
jb
int
movsl
cli
jnp
adc
fidivrs
mov
lods
add
and
dec
push
iret
add
jae
mov
sbb
jo
push
adc
dec
mov
xchg
cmp
lret
xlat
xor
andl
xor
lret
inc
adc
fcmovbe
push
out
bound
xor
cwtl
xor
mull
in
lahf
jge
and
mov
adcl
mov
js
lods
jns
ljmp
loope
cld
negl
and
mov
js
loope
enter
test
dec
mov
jp
pop
and
xor
shrl
add
arpl
aaa
cmpsb
subb
mov
cmp
adc
cwtl
out
jecxz
out
repnz
or
decb
stos
cmp
xchg
rcrb
push
ljmp
icebp
push
adc
cmpsb
jno
flds
push
jnp
cmp
pushf
mov
popf
pop
hlt
cmp
cmp
shll
repnz
inc
jp
movsb
or
sub
lods
add
xchg
push
xor
fcoms
mov
loopne
xor
icebp
das
add
inc
or
insb
fwait
xchg
adc
mov
imul
mov
fisubrl
gs
lods
pop
cmp
leave
add
mov
lret
mov
outsb
cltd
and
mov
push
add
jae
popf
int
adc
cmpsl
mov
gs
inc
xchg
pop
sub
div
jg
cmp
mov
pusha
inc
in
lret
and
xorl
mov
pop
stos
push
xor
mov
cmp
xor
leave
inc
test
mov
aad
shrl
cltd
fwait
enter
xor
push
jo
int
dec
roll
add
bound
test
ret
mov
enter
sub
scas
xchg
add
or
in
leave
cmp
movhps
cmp
xlat
loope
cld
sbb
sbb
shrl
mov
pop
cmpsb
daa
mov
cmp
rclb
xchg
lret
andl
xchg
or
pop
sbb
icebp
cmp
mov
cwtl
sub
clc
scas
jg
cmpsb
decl
lods
push
mov
pop
cmp
outsl
sti
sub
test
inc
mov
cli
inc
out
mov
js
popa
rcrb
ja
imul
jne
cmp
ret
ret
or
xchg
popl
enter
jge
pop
mov
mov
mov
pop
loope
idivl
xor
and
mov
jmp
es
in
add
or
mov
leave
inc
adc
pushf
insb
inc
mov
repnz
out
dec
mov
lods
punpckhbw
xor
mov
outsl
sahf
lcall
cli
sub
jbe
sub
mov
pop
mov
adc
jnp
xchg
js
gs
xlat
xor
and
xchg
sbbb
or
mov
dec
and
add
push
mov
mov
pop
mov
ret
fisubl
xor
add
daa
fwait
clc
mov
pop
and
pop
popf
dec
and
inc
jmp
push
inc
jle
inc
push
xchg
call
frstor
and
mov
in
mov
push
bound
loop
ficomps
das
testl
push
jge
div
iret
and
mov
dec
and
xchg
loope
cli
dec
jne
into
pusha
sub
mov
push
sar
jle
adc
cmpsl
movsl
add
aas
push
pop
fisubs
icebp
sbb
sub
mov
lcall
push
fwait
or
mov
mov
loope
lret
push
filds
sbb
fisttpl
mov
push
bnd
subb
lods
xchg
sub
jmp
dec
ficompl
mov
adc
adc
pop
movsl
push
pop
sub
mov
pop
dec
cmc
ds
ja
inc
push
loopne
mov
mov
cmpsl
pop
ror
cmp
rcll
inc
jl
and
jbe
sahf
mov
dec
pop
adc
cmpsl
fimuls
loop
cwtl
xor
popa
daa
in
inc
std
or
dec
mov
sbb
loope
or
xchg
adcb
or
cmpsb
xlat
or
pop
adc
fs
adc
test
jmp
cwtl
push
je
data16
inc
shl
lahf
mov
mov
push
dec
mov
pop
lahf
jne
cmp
add
inc
cs
cld
call
nop
xchg
adc
mov
sarb
popf
dec
decl
lods
and
int3
lahf
and
dec
mov
mov
inc
lds
xlat
clc
es
popa
inc
test
punpckhbw
sbb
push
mov
dec
xchg
fisttpl
stc
gs
sub
or
subb
cmpsb
bound
sub
xor
fprem1
call
xor
jg
divl
testl
pop
inc
in
sbb
mov
ret
loope
int3
imul
sarl
xor
mov
out
bound
mov
fimuls
cmpsl
mov
adc
adc
mov
repnz
cmc
mov
je
pop
popa
push
mov
dec
in
jno
fdivrl
fldt
mov
push
sbb
mov
inc
sahf
cmpsb
notl
out
inc
shll
adc
lods
xchg
fdivs
jno
int3
mov
mov
mov
stc
add
jo
dec
push
mov
movsl
popf
or
inc
jge
adc
mov
mov
enter
daa
sbb
rorl
push
leave
lahf
ss
in
arpl
adcb
out
idivb
shl
push
inc
into
lahf
mov
mov
cmc
mov
js
addb
cmpsb
mov
test
jo
movsb
sbb
ss
jns
jge
and
mov
xlat
push
leave
addb
cwtl
std
and
mov
sub
sbbb
rcrb
adc
into
test
mov
enter
xchg
mov
jmp
nop
in
sbb
data16
adc
push
shr
mov
mov
fsts
repz
shll
popf
dec
rorl
dec
sbb
sbb
aaa
movsb
sar
in
out
adc
js
jmp
bound
sub
jge
daa
lcall
aaa
jp
cmp
call
mov
add
mov
inc
das
inc
cmp
inc
test
pop
sti
int3
pop
stos
dec
sar
fcomps
js
sub
sbb
jns
pop
cmp
xor
sub
stc
out
js
adc
pop
ljmp
push
cltd
xor
ja
adc
stos
add
aad
inc
mov
cmp
iret
addb
push
add
xchg
aaa
push
dec
ja
test
neg
xchg
ret
loope
adc
cmp
xor
jae
fdivp
mov
dec
loop
mov
lahf
aas
push
mov
and
pop
push
cmc
push
jge
mov
dec
inc
sub
dec
add
or
pop
cmp
jae
sub
mov
add
xor
jno
jg
mov
jno
cltd
int
jno
jle
push
fcompl
stos
loopne
push
pop
pop
inc
pushf
jbe
test
dec
add
lea
mov
scas
data16
loop
shrl
nop
iret
loopne
push
ret
dec
xorb
and
push
cmp
imul
fistl
jo
lret
sub
sub
leave
sbb
mov
jns
faddp
xorl
js
repz
lahf
jns
push
adc
hlt
in
out
popf
in
cwtl
shrl
push
jne
sbb
adc
sbb
repz
dec
inc
shll
pop
push
mov
add
ja
addr16
sahf
and
aaa
xchg
insl
imul
adc
xor
adc
xchg
fwait
jns
outsb
cs
sbb
outsl
imul
enter
stos
inc
jo
loopne
lock
int
sbb
dec
sub
mov
fbstp
and
lods
mov
scas
sti
sub
sub
push
test
lds
adc
xor
cmp
in
jge
bswap
jmp
fs
xor
mov
shll
daa
into
hlt
mov
push
stc
test
loope
in
ss
push
cmp
lock
test
adc
jecxz
int3
aam
sub
stos
inc
jp
aam
loopne
vcvtss2si
xor
jo
fs
xchg
ret
inc
adc
daa
les
jle
add
and
and
xor
xor
mov
loope
repz
push
std
push
in
xchg
mov
mov
lret
popa
mov
cmpsb
add
inc
imul
mov
and
subb
lret
fs
xchg
sub
adc
lods
aas
xchg
dec
sub
mov
imul
rcl
mov
les
mov
mov
mov
and
aas
cltd
or
add
sbb
push
mov
xchg
shl
mov
incl
pop
adc
mov
gs
cwtl
mov
popf
ja
test
cmp
lret
xchg
lock
adc
lret
mov
hlt
inc
imul
push
fwait
jae
cmp
mov
push
lods
int3
sbb
xor
dec
mov
push
daa
inc
xlat
adc
jne
int
loop
test
sub
cmp
cmc
insb
roll
sub
test
inc
cmp
cs
sbb
test
mov
scas
in
mov
movb
or
mov
faddl
xor
testl
jno
xor
mov
mov
cld
lret
dec
push
sub
dec
adc
push
divb
stos
mov
mov
cmpsb
or
stos
add
lds
fs
and
lods
into
xchg
pop
ljmp
cmpsb
mov
test
pop
mov
add
inc
std
movsb
cli
mov
mov
sub
sahf
mov
or
popa
sub
jp
inc
pop
clc
imul
mov
outsl
push
das
and
dec
out
and
cmp
lods
mov
roll
mov
push
divb
aas
inc
out
push
mov
jns
lods
std
arpl
inc
cmc
outsl
loopne
mov
adc
nop
push
test
jbe
mov
cmp
adc
scas
xor
rolb
xor
jno
aad
aaa
xor
cmpsb
push
mov
out
aad
cmp
loop
arpl
das
jmp
xchg
addb
cmp
or
ret
add
pop
aam
nop
pop
enter
and
and
add
add
mov
pop
sbb
jmp
ss
lret
repnz
arpl
mov
jle
dec
jge
push
aas
lret
xchg
arpl
ss
adc
adc
aas
icebp
inc
into
xlat
push
in
add
ljmp
out
pop
aas
mov
nop
xlat
fcoms
jge
dec
test
aas
hlt
addr16
inc
fisubrl
sti
sub
jbe
lea
add
add
out
add
test
jne
mov
addr16
cmp
sbb
aam
fcomps
sti
mov
xor
dec
and
dec
out
pop
xchg
inc
mov
add
mov
dec
fiaddl
sub
int3
jnp
pop
lret
or
inc
adc
mov
pop
sub
dec
fwait
aad
cld
sub
push
pushf
inc
loop
pop
jb
adc
std
fwait
ja
push
daa
stos
pusha
pop
mov
fnstenv
sub
scas
xchg
scas
push
sub
pop
pop
xor
mov
mov
pusha
es
adc
std
hlt
or
mov
and
push
sbb
lcall
sub
push
lods
popf
test
pop
enter
imul
pop
or
les
sub
ret
subb
inc
xchg
push
loopne
mov
testl
push
movsb
and
jbe
pop
adc
callw
pop
push
mov
xor
subl
mov
inc
cld
les
adc
jle
jno
mov
cld
cltd
cltd
sub
mov
imul
aam
pop
es
cltd
ja
mov
push
rcll
jno
scas
test
pop
push
ja
mov
stos
adc
loopne
xor
or
fwait
loopne
jo
mov
jne
subb
sti
or
andl
cmp
mov
ljmp
jecxz
mov
mov
mov
dec
mov
pop
jno
insl
cmc
aas
movsl
pop
jmp
lock
and
pop
stos
movsb
dec
gs
push
or
jnp
outsl
repz
xchg
icebp
and
sbb
push
ret
lret
jb
bound
ds
adc
or
ja
xchg
or
lcall
jl
cld
sbb
push
adc
sahf
push
fistps
inc
shrb
inc
and
fisttpl
pushf
popf
decb
jp
std
fiaddl
arpl
stos
pop
mov
nop
push
fistl
xor
in
cmp
xchg
cmp
rorb
xchg
xor
cmp
pop
and
mov
or
or
mov
xor
or
insb
mov
cs
mov
fs
inc
imul
loope
push
outsb
lcall
xchg
loopne
fildll
out
add
and
outsb
aam
xchg
daa
pop
or
sahf
push
insl
mov
int3
mov
jmp
pushf
sub
rol
mov
test
xchg
inc
push
jge
dec
add
ret
popl
cmpsb
inc
addr16
jmp
arpl
jmp
not
xchg
outsb
call
out
add
push
sbb
jo
mov
inc
popa
bound
addb
in
sub
and
outsl
mov
shr
add
out
mov
jb
stos
mov
movsb
shr
dec
pop
add
mov
pop
addl
push
add
leave
les
add
cmp
mov
orb
inc
adc
xchg
cmp
ds
mov
aam
and
and
jmp
pushl
bnd
mov
xor
jp
stos
pop
and
push
dec
mov
popf
xchg
cs
mov
cmp
add
shr
ljmp
stos
nop
jle
aas
xchg
and
add
mov
mov
jne
ret
add
repnz
pop
in
fcompl
rcl
lds
stc
dec
ret
dec
fs
notl
shufps
rcrl
sbb
cmpsb
mov
push
xchg
push
sub
cmp
and
in
dec
in
xchg
lock
stos
cmp
xchg
dec
inc
sub
jne
movsb
clc
mov
hlt
jmp
mov
pop
pusha
xor
nop
cmp
and
or
outsb
sub
dec
push
xchg
sbb
andl
in
popa
cmp
ljmp
push
mov
and
repz
mov
lahf
jle
sahf
out
rorb
insb
js
popf
mov
jno
lock
cmp
mov
sub
out
andl
pop
and
out
jb
or
gs
add
imul
sbb
pop
test
lods
dec
push
insl
fs
incb
inc
inc
icebp
mov
mov
xlat
xchg
and
jle
or
sub
push
xor
aam
repnz
shlb
mov
xor
jae
or
xor
divl
cld
push
scas
mov
push
pop
gs
lods
lcall
xchg
stc
scas
into
inc
xor
sbb
inc
movsb
nop
in
cli
pop
fucomp
aas
hlt
jge
adc
jmp
test
and
adc
push
mov
clc
nop
mov
pusha
cltd
mov
push
imul
jnp
and
mov
enter
mov
sub
aaa
adc
dec
or
pop
dec
lret
and
test
out
inc
out
pushf
and
call
cmp
stos
mov
out
fmuls
repz
in
aaa
push
out
daa
jnp
out
repz
fcoms
jp
repz
in
scas
sbb
pavgb
inc
mov
pusha
or
out
ficoml
push
pop
mov
dec
cs
mov
jle
xor
jbe
mov
enter
ljmp
leave
push
bound
imul
loop
out
popf
pop
mov
jl
cmc
popf
jno
js
out
cmc
dec
out
loop
cmp
jecxz
ss
stos
inc
cltd
pop
std
pop
mov
adc
mov
das
fcoms
mov
xor
mov
jns
std
aas
sub
xlat
xchg
sub
inc
mov
fistl
cmp
fimuls
shlb
addr16
arpl
xlat
adc
inc
outsl
aam
lcall
lret
or
data16
gs
pop
scas
lds
jg
lods
jmp
imul
imul
and
es
out
arpl
insb
jb
int
dec
outsb
cld
fnstsw
mov
cmpsb
es
jg
sarl
adc
test
dec
jnp
mov
xor
pop
int
pushl
pop
lods
ret
push
xchg
mov
shlb
movsb
and
mov
outsb
fwait
test
jmp
push
mov
inc
cli
mov
or
inc
pop
imul
mov
mov
sub
cmp
cmp
adc
popf
movsl
pop
mov
sbbl
js
push
pusha
pop
fs
cmc
push
mov
pop
fldcw
jb
xor
sub
repnz
mov
cltd
sub
sahf
pop
add
ret
push
subb
push
dec
lcall
insl
xchg
mov
mov
cmp
cmp
js
fwait
push
fwait
int
loop
xchg
int3
cmpsl
cmpsl
fs
lock
adc
or
popf
mov
lods
add
int
jle
pop
iret
outsl
icebp
pop
movsl
push
push
pop
scas
out
pop
enter
xorl
roll
jno
popa
loope
adc
and
push
roll
loope
adc
and
jno
popa
loope
adc
and
push
roll
loope
adc
and
jno
loope
xchg
adc
sub
push
roll
loope
adc
xor
loope
roll
jno
popa
and
xor
cmp
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
xor
and
adc
add
jns
pop
or
mov
cmpsb
nop
xchg
addb
rol
and
adc
add
jo
pusha
push
push
inc
inc
mov
mov
xchg
mul
out
xchg
rol
and
adc
add
jo
pusha
push
push
inc
inc
mov
andl
mov
mov
ss
jns
jns
push
jg
aaa
test
sub
add
imul
xchg
pusha
fbld
jo
pusha
cltd
lods
push
test
or
sub
or
xchg
xor
loope
push
sti
mov
lcall
pop
adcb
icebp
imull
push
sub
dec
xor
pop
movsl
rcr
pop
push
sbb
or
inc
mov
jno
jg
mov
sub
arpl
movsl
fsts
ja
jae
inc
lret
lds
imul
sbb
sub
dec
or
fcomp
sub
lcall
jmp
hlt
and
test
ljmp
ret
repz
adc
add
jo
pusha
push
push
inc
inc
mov
mov
xchg
mul
out
shrb
jg
outsl
adc
sbb
push
rcl
shl
inc
shlb
xchg
mov
mov
inc
ss
and
push
inc
je
sub
adc
into
shr
testl
xchg
push
jg
jne
jle
arpl
push
inc
inc
mov
mov
xchg
mul
out
rol
and
adc
add
jo
pusha
push
push
inc
inc
mov
mov
xchg
mul
out
rol
ss
outsl
lea
fiaddl
sub
addb
jae
scas
paddsw
add
jno
mov
mov
pop
dec
jle
ret
les
push
mov
adc
loope
jmp
sub
or
popf
es
xchg
je
xor
rolb
scas
das
add
lret
test
dec
js
lret
inc
nop
les
ja
xor
pop
adc
xor
mov
iret
adc
test
jnp
xor
aam
insl
loopne
out
xchg
cmp
push
rcrl
sarl
xchg
inc
addr16
xor
mov
add
mov
daa
mov
ror
shl
push
daa
rclb
scas
adc
sub
sti
aaa
out
mov
or
dec
in
jno
mov
inc
int3
repnz
inc
js
jb
cmc
cmp
jns
jae
pop
mov
lret
sub
shlb
test
fadds
shlb
ss
xchg
outsb
bound
add
sbb
lret
jle
inc
hlt
iret
loop
xchg
inc
xchg
std
cmp
imul
inc
xor
mov
wbinvd
mov
lds
xlat
cmp
out
das
popf
push
out
mov
cmp
xchg
rcll
cmp
mov
rclb
bound
lock
push
lds
inc
mov
push
xor
inc
inc
xor
and
dec
pop
mov
cmpsl
add
and
inc
stos
lods
fisttps
pop
mov
xlat
cli
in
xchg
xor
jmp
inc
xchg
test
pop
test
xor
mov
sahf
popf
jnp
adc
call
addr16
pop
mov
orb
sbb
sbb
xor
test
idivl
aad
dec
or
daa
jg
das
cmp
scas
fidivs
xlat
xchg
pop
icebp
sbb
in
jg
mov
cld
cmpb
cmp
test
aaa
inc
push
add
adc
call
sub
push
mov
sti
arpl
pop
xor
outsb
pop
push
lods
sub
out
popa
jo
lea
loopne
data16
jg
dec
aas
mov
sub
repz
jle
iret
js
or
je
dec
xchg
icebp
js
and
lods
lea
pop
insb
adc
gs
add
sbb
in
push
in
add
xor
inc
push
cmp
mov
and
mov
sbb
clc
xchg
xorb
mov
stos
mov
insb
push
adc
sub
cmp
inc
or
mov
mov
jl
inc
outsb
xchg
or
dec
mov
pusha
out
xor
jb
or
pop
push
fmuls
mov
arpl
lea
data16
stos
xchg
pushl
sbb
xor
adc
mov
daa
bound
jecxz
mov
mov
inc
mov
push
ljmp
dec
push
fidivs
pop
out
prefetch
or
dec
dec
cmp
inc
and
ret
imul
inc
jle
in
inc
test
xchg
jmp
xchg
ret
or
xor
scas
sbb
mov
loope
scas
aad
clc
into
fnstsw
test
test
repnz
jo
jae
mov
stc
xchg
mov
movsb
cmp
cwtl
mov
dec
fdivp
mov
adc
push
add
add
in
pop
mov
push
xchg
cmpsb
fcomip
enter
mov
and
and
mov
scas
inc
std
lahf
add
sbb
adc
iret
stos
aas
insl
paddusb
push
xchg
mov
scas
int3
jb
loope
sbb
repz
mov
mov
popf
cmpsl
test
mov
lods
lods
ror
pop
repnz
nop
xchg
rolb
out
mov
outsb
mov
mov
lock
and
aam
sbb
mov
dec
in
mul
hlt
loop
sbb
ljmp
xchg
cmp
pop
push
ja
vucomisd
std
movsl
push
aaa
pusha
mov
push
ror
fildll
adcl
inc
cs
cmp
cmp
sub
sbb
je
fsts
cs
xchg
in
icebp
pop
jl
xchg
adc
in
out
test
and
sub
out
adc
mov
add
loopne
mov
mov
sub
pushf
push
les
xchg
cmp
mov
gs
xor
or
cmp
adc
icebp
jle
jecxz
scas
mov
inc
arpl
adc
scas
aas
xor
fdivl
aas
sbb
call
popf
adc
ss
lock
and
pop
sbb
push
xor
sbbl
popf
mov
mov
xchg
sarl
jo
rol
fs
and
push
imul
ds
es
imul
jecxz
test
roll
xchg
lock
fcoms
les
sub
adcl
pop
fwait
xor
fildl
sub
int3
adc
mov
cmp
jnp
std
std
notb
mov
out
mov
xchg
popf
push
xchg
xchg
outsb
mov
incb
cmpsl
add
add
icebp
aas
inc
ss
test
adc
lcall
mov
in
sub
lds
loopne
inc
lcall
pop
add
test
adc
mov
mov
jae
lods
dec
push
outsb
xlat
es
aam
mov
pop
and
pop
fwait
out
aad
idiv
imul
daa
push
jecxz
mov
aas
fwait
lahf
push
mov
push
sub
jbe
adc
std
xor
sbb
pop
sbb
mov
fiadds
imul
jecxz
dec
jns
mov
mov
jbe
push
push
popa
xchg
sti
lcall
jg
test
fstl
pop
or
pop
insb
lret
outsb
add
inc
lcall
pop
jo
and
scas
dec
mov
js
pop
fucomp
popf
mov
into
ficompl
cwtl
jl
clc
mov
jns
xchg
mov
xor
and
pop
imul
mov
outsb
dec
aam
lods
mov
add
add
shl
movsl
cltd
out
iret
lahf
movsb
cs
mov
mov
push
insb
dec
lock
push
ss
xchg
out
test
cmp
push
adc
mov
adc
daa
mov
add
gs
and
jp
xor
imul
int
aam
std
inc
mov
std
push
mov
pusha
in
cs
xchg
xor
mov
sub
dec
pop
imul
into
into
in
jns
stos
add
out
incb
out
sub
push
pushf
ss
lea
mov
rorl
adc
sub
and
dec
push
and
in
adc
into
adc
adc
sbb
mov
or
pop
adc
and
push
mov
lds
popa
jecxz
xchg
loopne
mov
add
xchg
cmp
repz
adc
mov
iret
in
das
sahf
aaa
test
jmp
inc
loop,pn
mov
or
aad
ldmxcsr
cmpsb
pop
into
or
sbb
adc
mov
aad
test
test
or
fs
shll
pop
adc
ljmp
push
cmp
jne
lods
loopne
add
jne
sub
mov
xor
add
nop
repnz
adc
sub
popl
fs
mov
mov
lret
mov
insb
cli
int3
hlt
out
xor
pop
pop
xchg
sarl
shr
or
test
ret
adc
jb
ret
fisttpl
imul
xchg
pusha
cmp
cmpsl
xor
iret
in
inc
test
rorb
pop
and
jmp
aam
ja
xorb
stc
leave
clc
xchg
std
sarl
sub
testb
pop
out
test
in
add
imul
xor
mov
mov
daa
lock
add
bound
add
movq
mov
outsb
shlb
out
sbb
add
loop
scas
fwait
and
push
popa
dec
scas
imul
dec
or
xlat
sbb
fcompp
fwait
mov
sahf
add
lret
aad
test
pushf
mov
loopne
lret
insl
mov
movsl
jecxz
pop
fcmovnb
xor
xchg
sub
and
dec
stos
cs
pop
or
cmp
fiaddl
repz
mov
sarb
fcompl
sub
mov
movsb
and
pop
jg
lcall
push
pop
insl
xor
jge
cmp
cli
xor
sub
aaa
inc
dec
mov
das
lcall
es
mov
cli
inc
lea
adc
ret
lea
or
stc
enter
xchg
sub
ss
shufps
iret
xchg
mov
scas
loope
lods
frstor
fsubrs
cmpsl
push
push
inc
ror
nop
xchg
mov
xchg
lods
imull
adc
vpshuflw
mov
mov
inc
mov
rclb
and
repz
mov
and
fstpl
pusha
pop
fldcw
stc
inc
cwtl
push
jl
out
add
out
repnz
jp
mov
in
mov
mov
cs
mov
sbb
test
das
cmp
cmp
rcll
sub
shrl
pop
pop
sbb
insl
repz
pop
xchg
arpl
test
jmp
mov
in
xor
stos
sbb
popf
dec
mov
inc
mov
lret
nop
mov
stos
pop
stos
sahf
inc
jle
lret
test
outsl
rclb
lcall
dec
jle
xrelease
xchg
dec
add
aam
mov
mov
imul
mov
pop
jle
aam
jge
aad
ljmp
scas
sbb
lret
lods
sbbl
insb
cmpsl
rcrl
orb
dec
popa
int3
outsb
cwtl
ret
scas
pop
jmp
mov
out
test
out
pop
push
xchg
jbe
shr
popa
fists
cli
adc
inc
or
xchg
cmp
ss
push
add
and
cmp
add
cmp
cmp
and
imul
dec
jge
pushf
cmpsl
dec
xor
stos
sahf
cmp
jg
fimuls
cmpb
repnz
data16
cs
xor
cwtl
aad
dec
sub
sbb
sar
fsubrs
xchg
add
insl
fists
in
dec
enter
pop
cmp
ret
add
mulb
jns
mov
or
stc
or
xchg
arpl
orb
fisubrl
push
jg
sub
add
xchg
sti
xor
lods
inc
push
fmuls
loop
lcall
xchg
fimull
xchg
cli
lcall
mov
fcom
sarl
in
in
ret
or
jo
mov
push
push
mov
test
and
adc
mov
sub
mov
jecxz
xlat
sub
push
rorb
fistpl
sti
ret
rol
dec
jmp
rclb
into
scas
or
push
cli
imul
lahf
insl
jno
jb
aad
std
pop
clc
pop
enter
out
sub
adc
imul
xchg
add
adc
mov
or
enter
and
in
xor
das
lods
aad
stc
xor
dec
aaa
std
inc
push
xor
inc
cmc
testb
push
cmpsl
jnp
cmpsb
and
lret
fdivrl
or
xor
cli
sub
mov
pop
test
je
cmp
adc
push
cmp
sahf
pop
lret
inc
out
call
cs
cmc
jge
repz
bound
mov
rolb
dec
popa
push
jns
adc
data16
insb
inc
int
in
cmp
mov
jae
and
inc
out
aad
push
cltd
frstor
jns
addb
movsb
adc
sbb
sub
into
enter
xor
cmp
sub
roll
roll
lahf
fdivrl
loop
fistpll
loopne
xor
rol
xchg
mov
jne
ficoms
lfs
ds
in
das
lock
add
xchg
imul
adc
and
dec
stos
pop
and
fs
jge
pop
es
sbb
sbb
or
inc
mov
jbe
scas
loope
lcall
xchg
dec
and
bound
inc
inc
fsubs
push
call
sbb
mov
jnp
test
scas
stos
inc
imul
inc
shlb
ljmp
mov
test
mov
in
push
stc
scas
add
add
fcmovnu
xchg
mov
inc
in
roll
movsb
shlb
in
xchg
push
xor
lods
xchg
add
push
inc
mov
cmpsb
inc
add
test
mov
jns
dec
cld
nop
enter
rorb
sub
xor
xor
es
repz
sub
movsl
mov
xor
lock
or
clc
and
jne
mov
lock
jecxz
and
mov
fmull
pop
dec
inc
dec
lods
icebp
mov
adc
stos
pop
sub
lret
es
mov
xor
cltd
fidivrl
sbb
sub
fabs
push
shr
sbb
and
mov
xlat
popf
ja
dec
mov
xor
mov
leave
sbb
cmpsb
cmpsb
insb
mov
cmp
mov
stos
pop
fsubrs
jb
dec
pop
push
inc
sub
popf
push
dec
in
sarb
xchg
cmp
cmp
jg
aam
je
arpl
cli
adc
cmc
jmp
stc
push
cmp
add
gs
cli
int3
sub
cmc
rclb
mov
cli
add
and
push
and
xchg
xor
push
adc
sahf
inc
outsb
mov
stc
in
mov
xchg
jg
out
fsubrl
jb
jecxz
dec
cmc
adc
stos
or
push
and
lock
mov
dec
sarb
decb
clc
andb
std
aad
enter
in
sub
mov
int3
xor
push
jg
xchg
sahf
nop
xchg
sbb
sbb
mov
test
mov
cmp
cmp
nop
sbb
bound
out
xchg
xor
xor
movl
jb
lret
lods
adc
insl
scas
loope
adc
lods
cmp
in
inc
imul
popa
scas
and
cs
out
xchg
mov
out
xor
cwtl
push
adcl
sub
or
mov
cltd
andb
sub
lret
cld
cld
data16
push
lods
mov
gs
dec
sbb
loopne
cmp
push
cltd
or
and
xchg
sbb
stc
inc
mov
movsl
inc
ret
rcrl
xchg
cmp
icebp
push
add
lcall
lock
lcall
mov
push
aad
int3
dec
lds
cmpsb
out
jge
dec
xor
in
mov
pushf
cmpps
cmp
mov
add
mov
sub
ds
jnp
or
xchg
lds
sbb
cmpl
and
rcrl
jb
and
mov
inc
mov
inc
lods
dec
cmp
sub
sub
repz
jle
imull
xor
and
add
xorl
or
push
adc
repz
push
or
aad
rorl
mov
jbe
je
jno
gs
mov
pop
movsl
fwait
in
push
xchg
sarb
lock
fwait
lret
cmp
cmp
aad
movsl
mov
stc
adc
mov
mov
dec
pop
xchg
pop
push
jmp
sub
insl
adc
andb
shr
ljmp
jnp
pop
shl
bound
adcl
add
cmp
in
in
fwait
pop
lods
daa
push
jns
ja
push
xchg
xor
ljmp
sbb
loopw
jo
add
inc
out
ss
add
idivb
in
imul
ljmp
ss
cmpsb
adc
add
xchg
mov
mov
jp
xchg
outsb
cmc
cmp
dec
sub
dec
mov
mov
or
hlt
pusha
sbb
xchg
jne
cmc
sbb
xchg
pop
cmp
sbb
dec
xor
mov
jns
push
ret
fimull
outsl
dec
mov
ljmp
dec
jae
or
fcmovnb
mov
mov
pop
fs
bound
sub
push
sbb
inc
cmp
sbb
shld
dec
xor
adc
jl
xchg
pop
mov
inc
fs
cwtl
mov
sbb
in
pop
testl
movsl
ja
sub
lret
call
lea
dec
pushf
test
or
jl
aad
lock
mov
rcll
pop
sbb
out
adcb
shl
mulb
out
mov
ds
movnti
jmp
jle
sbb
lds
cmp
push
pop
push
cmp
or
dec
cltd
ja
inc
mov
mov
jle
sbb
jo
adc
aaa
push
rcr
stc
inc
call
loop
jae
cmpsb
in
call
mov
cmp
cmpsl
mov
xor
and
mov
aam
outsb
loopne
sbb
std
jno
cmp
lret
insb
dec
jb
aaa
stc
loope
fistl
xor
and
jmp
cmc
jae
xchg
es
gs
mov
inc
sbb
in
mov
add
outsl
flds
aaa
subl
add
movsb
stc
mov
cmp
xor
into
mov
cmc
gs
cld
fs
adc
shlb
dec
or
fmuls
sub
xchg
fstps
pop
xchg
loopne
sbb
popa
jecxz
lods
popf
xchg
sub
jge
jle
inc
movsb
ds
and
add
dec
mov
outsb
repnz
dec
adc
insl
cmc
mov
stos
xchg
dec
and
xor
pushf
mov
fdiv
jae
xor
leave
fiaddl
mov
out
in
pop
pushf
inc
push
mov
dec
rclb
fimuls
mov
cmp
fdivrl
cmpsl
cmp
sub
aas
cmp
mov
ret
xor
sti
mov
nop
adcb
ja
popf
sub
inc
inc
movsl
fwait
or
mov
pop
insb
insl
mulb
add
inc
imul
arpl
out
shl
cwtl
out
sbb
std
mov
xchg
lods
dec
gs
cmp
test
mov
sub
or
nop
sbb
inc
cmp
pop
push
jo
fildl
lock
sahf
push
mov
mov
mov
add
pop
inc
push
insb
add
dec
dec
rorl
mov
bound
jbe
mov
add
cmp
cltd
sbb
inc
aas
mov
mov
add
mov
push
mov
mov
lahf
test
xor
cmc
sbbl
in
icebp
push
inc
and
popf
or
push
cmp
outsb
repnz
ret
mov
dec
pusha
mov
imul
das
jbe
popf
outsl
std
or
ss
inc
adc
inc
xor
add
jl
shl
sub
mov
adc
pop
cltd
mov
sbb
pop
xor
dec
mov
fwait
sbb
mov
cmp
fld
pop
fisubrl
sbb
xor
mov
dec
sti
popf
xchg
xchg
loop
pop
pop
sub
pop
xor
jo
jecxz
cmp
cmp
sbb
sahf
shll
mov
andb
fcoms
in
mov
test
jg
mov
imul
inc
pop
out
imulb
in
xor
loop
xor
gs
sub
adcb
adc
push
inc
push
adc
pop
not
data16
pop
push
adc
mov
rcrb
mov
pop
xor
loope
hlt
into
mov
cs
or
fidivrs
sub
cmp
cmpsb
mov
insb
std
popa
xor
push
pop
or
jno
push
pop
cs
outsb
adc
scas
int
cmp
fsubrs
cmpsl
or
add
jae
mov
pop
push
mov
dec
mov
in
stos
roll
xor
inc
stos
cmpsl
gs
int3
pop
mov
mov
mov
push
jle
and
xchg
loop
mov
inc
sbb
daa
pop
in
pop
repz
repz
xor
push
dec
dec
fiaddl
jecxz
daa
cld
je
lret
cmp
test
jecxz
int3
hlt
or
sub
cmpb
mov
xchg
mov
jge
mov
or
push
adc
loop
xchg
ja
cli
inc
cwtl
xor
mov
push
imul
push
dec
ret
sub
jns
ror
aas
adc
lcall
mov
cmpsl
leave
outsb
jecxz
jae
js
mov
mov
insl
ja
rclb
rclb
out
sbb
lods
push
daa
or
xchg
mov
ret
lcall
cmpsb
or
and
int
aam
repz
test
dec
in
loopne
cmp
pop
mov
jecxz
push
lods
dec
pop
mov
dec
enter
out
push
cmp
enter
add
or
sbb
jbe
shll
xor
push
scas
repz
xchg
xchg
dec
scas
xchg
imul
pushf
sub
sub
mov
data16
test
or
mov
movsl
divb
icebp
cwtl
xchg
mov
inc
int
aad
pop
jmp
stc
cs
jb
sbb
das
push
add
jo
pusha
push
push
inc
inc
mov
mov
xchg
mul
out
rol
and
adc
add
jo
pusha
push
push
inc
inc
mov
mov
xchg
mul
out
rol
and
jo
popa
out
push
inc
inc
mov
mov
xchg
mul
out
rol
and
adc
add
jo
pusha
data16
inc
dec
mov
or
xchg
xor
jle
sbb
sub
cmp
fsub
int3
outsb
cld
jle
add
loope
aad
lods
sahf
imul
jl
sbb
subl
pop
int3
outsb
cld
jle
push
pushf
push
pushf
cs
fimuls
insb
mov
push
scas
cmp
sub
call
test
add
outsl
mov
ret
dec
int
seto
sub
pop
dec
sub
inc
std
xchg
add
js
outsl
push
in
xchg
ret
push
inc
fmull
inc
push
cmc
idivl
inc
mov
mov
sub
xchg
or
das
int3
xor
push
inc
dec
cmpsl
outsb
iret
mov
pop
outsl
cmpsl
pop
popl
icebp
mov
adc
add
pop
cmp
imul
add
mov
das
enter
mov
add
add
pushf
mov
pop
mov
cwtl
icebp
pop
popf
stc
push
jbe
push
mov
std
aad
push
sahf
sbb
outsl
lret
test
xchg
add
adcw
sub
xor
es
cmp
or
in
jmp
scas
sub
pop
fsubrl
adc
push
pushf
pop
mov
mov
dec
push
ss
out
add
adc
fisubrl
sub
imul
rcrb
scas
xor
or
jns
push
ficoml
inc
dec
mov
movsl
sub
jg
inc
enter
sub
outsb
std
insb
sti
or
pop
lcall
fsubrl
push
cwtl
aas
test
cs
fimuls
insb
mov
or
cmp
sub
fcompl
outsb
cld
jle
push
pushf
push
mov
mov
fimuls
insb
mov
or
cmp
sub
fcompl
out
inc
pop
jno
dec
jb
mov
lds
leave
and
sbb
or
and
xchg
dec
fsubrs
mov
imul
sbb
mov
pop
sbb
sarl
mov
mov
popf
rclb
xor
cltd
mov
mov
mov
std
shll
push
jo
inc
inc
sbb
mov
mov
jae
call
sbb
push
lods
push
and
movsb
dec
sbb
ficomps
sub
add
cli
push
and
pop
add
mov
stc
sbb
mov
shr
pop
insb
mov
fdiv
push
xor
cmpsl
icebp
adc
pop
push
ficoml
mov
dec
push
stos
fnstenv
cmp
jmp
adc
lret
mov
jo
mov
out
cli
jnp
or
xchg
or
mov
cmp
iret
xchg
pop
hlt
xchg
pop
jg
not
jg
imul
sub
sub
lds
out
gs
pop
mov
ret
mov
les
mov
je
out
inc
rcll
pop
cmpsb
imul
inc
add
push
js
adc
fildl
in
push
xchg
lcall
fsubrs
and
mov
clc
arpl
cmpsl
js
cmp
dec
lea
and
cmc
jb
push
or
pop
lea
mov
bnd
cltd
mov
lcall
mov
addl
sbb
mov
sub
push
lcall
jbe
pop
mov
int
mov
rcrl
test
in
jbe
sbb
jp
jl
ja
jmp
repz
or
test
repnz
mov
data16
lods
repz
dec
and
mov
stos
lret
fistpl
test
mov
stos
insl
test
sbbb
imul
push
in
clc
mov
fs
fwait
mov
seto
movsb
test
out
inc
or
mov
jo
jns
clc
test
or
sub
shll
xorb
add
mov
cmpsl
sarb
nop
les
lods
add
sbb
rcl
lods
push
nop
mov
push
repz
mov
fldcw
push
outsl
mov
rol
sbb
daa
pop
mov
in
or
adcl
imul
loopne
movsl
mov
push
pop
dec
fiadds
sbb
push
dec
lock
pop
xor
cmp
push
aam
jns
mov
daa
aam
dec
std
fistpl
jge
shrb
daa
jb
jae
jge
pop
push
es
adc
mov
jmp
sub
sahf
rolb
je
push
mov
notl
mov
insl
jge
cmp
sbb
jge
cltd
cmc
scas
mov
sub
inc
and
ja
mov
mov
repz
stc
mov
fisttps
es
xlat
and
cs
xor
mov
sbb
lea
sbb
push
addl
ficomps
mov
mov
sub
sbb
lds
jg
push
cmp
jo
jg
dec
mov
shrl
in
pushf
jle
add
dec
inc
or
or
outsl
sbb
lret
xchg
mov
nop
mov
div
or
std
fadds
repz
jle
mov
or
pop
stc
dec
cmp
xchg
mov
or
bound
leave
push
lds
mov
outsb
mov
insb
xor
arpl
fmull
dec
sub
roll
call
jne
popa
test
xlat
repnz
push
test
in
cmc
lds
cs
out
fdivrp
pop
lahf
pop
ss
inc
dec
js
call
mov
cwtl
je
or
sub
lahf
inc
lock
sti
push
jecxz
out
outsl
fdivrp
pushf
sarb
inc
cmc
inc
xor
xor
dec
sbb
imull
sbb
loop
test
mov
outsl
push
adc
insb
orl
sahf
pop
dec
mov
cwtl
loop
fstp
inc
loop
pop
inc
pop
jge
lret
inc
cmp
push
jecxz
orl
ljmp
fildll
xchg
sbb
mov
movsb
push
mov
je
pop
int
xchg
push
shll
sub
add
test
xchg
cld
mov
inc
push
movsl
out
int
mov
jo
scas
xchg
xor
mov
cmp
pop
test
jge
sub
push
out
pusha
pop
ds
push
xorl
add
push
sbb
and
xor
loop
in
and
clc
test
and
lahf
in
imul
adc
std
mov
outsl
addr16
out
jmp
mov
mov
sub
pushf
sbb
push
xchg
inc
push
fsubrp
jecxz
pop
xchg
jb
xor
loope
cmp
jae
rorb
add
sub
ljmp
imul
xor
adc
mov
inc
cld
mov
push
pop
les
dec
sbb
add
bound
jmp
mov
movsb
xchg
addr16
ljmp
mov
push
add
int3
xor
es
sbb
add
lret
ds
insl
dec
js
jns
mov
cmp
aas
mov
mov
mov
adc
mov
or
push
nop
xor
fnsave
popf
push
jnp
adc
jnp
pusha
pop
aas
loopne
xlat
mov
mov
pop
xor
rcrl
andl
mov
add
xor
rorb
sbb
clc
sub
or
sbb
jb
cmp
mov
scas
xor
rcll
addr16
sbb
mov
roll
xlat
mov
addr16
pop
sbb
sahf
sahf
nop
ficomps
mov
adcl
inc
out
mov
adc
fildll
mov
out
and
gs
inc
out
sti
xchg
mov
cmpb
orb
and
jecxz
sti
pop
jg
test
cmp
inc
call
out
mov
shrb
xchg
mov
dec
out
push
pop
ret
inc
push
xchg
into
xor
xchg
dec
mov
jg
xchg
cld
adc
fstp
ja
sbb
les
mov
in
cltd
mov
jl
push
cmp
loop
add
pop
je
jo
add
fscale
push
xchg
scas
subl
enter
mull
mov
test
sub
ss
jmp
cltd
cmpsb
cwtl
fildl
adc
sbb
mov
pop
test
addr16
mov
lods
cs
inc
push
aam
lods
leave
fdivp
test
or
stos
mov
xchg
lods
je
fcmovnbe
faddp
inc
xchg
mov
sub
js
adc
movsl
jno
sbb
dec
adc
jne
stos
into
xor
cmp
fidivrl
and
cmp
daa
or
into
sbb
leave
inc
mov
push
sbb
int3
call
fsubl
in
mov
mov
fs
xlat
scas
mov
jae
mov
push
daa
mov
fsubl
rorl
ret
xchg
and
jmp
and
sub
cmp
mov
and
push
mov
out
rcrl
push
and
dec
inc
sar
cli
mov
stc
mov
pop
mov
aad
jo
add
ror
fadd
or
fcmovu
mov
add
lock
cmp
aam
jo
push
pop
mov
sahf
jecxz
test
sub
hlt
jnp
pop
or
cmp
adcl
and
push
sub
pop
xor
cltd
mov
sbb
popf
test
popf
xor
xchg
mov
or
push
stos
adcb
and
cvtpi2ps
adc
mov
mov
leave
nop
mov
add
fcomps
or
push
adc
jl
cmpsb
add
jge
sub
and
or
xor
shlb
sub
pop
mov
cmp
jge
aam
mov
mov
fstpl
repnz
out
jg
mov
inc
jae
lods
mov
push
imul
test
mov
inc
push
or
pop
addr16
push
shrb
sbb
jns
ret
sbb
push
lahf
adc
xor
mov
inc
sbb
in
cmc
mov
mov
out
shlb
jb
or
cmp
jl
mov
outsl
loope
sub
shrl
mov
sub
dec
adc
lret
into
aad
and
aad
dec
mov
xorl
adc
mov
dec
inc
test
dec
aad
fstpt
lods
jge
vcvtdq2ps
jnp
mov
xchg
in
out
jnp
push
in
jno
out
mov
push
int3
neg
mov
push
push
lock
sub
jno
pop
fwait
testl
loopne
or
add
popf
dec
inc
lcall
sub
mov
push
aas
jg
stos
xchg
jmp
nop
cmovg
pop
xchg
movsb
push
and
sarl
sbb
and
testl
or
push
dec
repnz
push
call
pop
enter
nop
inc
data16
xchg
in
les
push
sbb
pop
jbe
out
and
add
jmp
ljmp
out
shrb
test
xorl
jb
lock
sub
sti
dec
mov
arpl
or
or
push
push
in
lcall
adc
inc
out
and
mov
scas
fimull
push
inc
fldt
dec
out
jmp
ss
mov
cmp
xor
rcr
stos
fisubl
js
xor
pop
fs
adc
loopne
xchg
cltd
jge
rcr
and
test
dec
jbe
loopne
out
xchg
jne
xchg
jge
add
xor
mov
std
test
mov
leave
out
jne
loopne
jbe
dec
xor
repnz
insb
notl
inc
ret
std
stc
enter
mov
pop
shrl
lds
in
pop
cltd
lret
ja
loop
in
out
sub
jne
call
push
and
push
dec
out
jae
sti
cld
lea
ds
addl
mov
xor
fwait
sbb
pop
arpl
rcrb
jmp
lahf
ljmp
or
or
lret
mov
push
movsb
loop
addr16
push
sub
jl
jne
leave
mov
or
gs
or
cwtl
push
pop
lock
cmp
xlat
hlt
fisubrs
push
mov
stos
test
jecxz
mov
test
cmpsb
arpl
mov
pushf
stos
push
in
and
fisttpl
mov
unpcklps
cs
test
imul
lret
pinsrw
ret
and
in
jle
pop
loope
and
add
cmp
ss
mov
shl
mov
inc
fnsave
cwtl
call
orb
fcomip
outsb
lret
call
mov
mov
mov
cmp
jmp
jg
adc
stos
inc
mov
into
jmp
pop
in
mov
push
inc
ror
sbb
rorb
mov
int3
jl
scas
mov
loope
xchg
push
dec
loop
mov
popa
lahf
dec
cmp
fisubrl
jp
pusha
push
sub
inc
xlat
pop
and
pop
adc
sbb
mov
sub
or
das
out
jmp
ficompl
in
daa
int3
lret
inc
ja
push
or
mov
std
ret
xchg
cmp
jge
aam
and
or
loop
cld
scas
mov
insl
sbb
insl
leave
in
movsb
xor
fucom
xor
aam
cmc
xor
es
aaa
dec
mov
mov
push
cwtl
dec
jl
mov
mov
sti
adc
xor
mov
std
mov
push
mov
xor
mov
nop
xchg
rcrw
or
jb
insb
jl
pushf
xchg
pop
jle
fwait
repz
pop
out
xor
ror
data16
dec
xor
mov
hlt
das
test
bound
imul
pop
lcall
adc
fsubl
mov
lods
jo
lret
shrb
pop
or
mov
xor
and
mov
testb
imul
in
xor
int3
lcall
mov
pop
pushf
jl
in
in
dec
mov
iret
out
out
call
test
jmp
add
stc
mov
jge
pop
or
cmp
cmp
test
test
andl
out
call
adc
mov
ljmp
loop
movsb
leave
sbb
popa
dec
lahf
pop
sub
mov
and
ret
ljmp
push
mov
and
fcoml
das
imul
xor
js
arpl
imul
nop
mov
add
rcrl
jnp
subl
push
jb
scas
adc
lock
int
dec
cmpsl
sbb
loope
sub
push
cmp
data16
flds
pop
ret
jb
pusha
orb
aam
mov
push
or
cmp
and
ss
pop
jbe
add
or
inc
xchg
hlt
pop
xchg
negl
dec
das
cmc
daa
inc
outsb
rcr
pop
pop
test
pop
and
leave
ret
xor
xorl
dec
push
add
andl
xor
add
mov
jmp
jmp
jl
push
mov
pop
out
adc
mov
jmp
or
outsl
or
jno
mov
jle
push
push
mov
insb
add
and
mov
add
ja
scas
jns
idivl
mov
push
stos
inc
nop
inc
push
push
sub
pop
cltd
ret
dec
leave
push
das
push
lods
cld
stos
mov
movsb
dec
sub
ficomps
push
dec
das
dec
push
decb
call
movsl
test
je
xlat
jmp
add
dec
aas
arpl
cmp
push
sbb
and
xor
sub
shlb
popf
xor
adc
mov
inc
push
mov
xchg
push
inc
pop
loope
enter
jae
add
gs
or
xchg
cltd
rcll
stos
sub
lods
insb
pop
sub
jns
stos
xchg
push
or
sbb
sti
cs
nop
lret
stos
cmp
pop
int
ljmp
ds
outsl
jl
pop
hlt
scas
lds
sbbb
xchg
and
sbb
or
inc
push
inc
jno
outsl
mov
scas
push
push
sbb
stos
js
xchg
outsl
outsb
cmp
add
and
leave
adcb
sub
and
xchg
pop
cmp
inc
movsb
mov
and
cmp
push
mov
push
mov
adc
pop
mov
xchg
cmp
cmpsb
pusha
jp
hlt
sarb
sub
add
mov
int3
gs
enter
mov
int3
pop
mov
jo
mov
inc
inc
jbe
and
xchg
mov
sbb
mov
push
mov
dec
imul
out
into
jnp
xchg
adc
mov
stos
or
faddl
stc
sub
xchg
add
cs
dec
inc
push
xchg
fildl
adc
shll
xor
test
or
push
sub
jo
cmp
inc
cs
subl
and
gs
pop
nop
mov
ficomps
cli
xorb
dec
mov
mov
dec
test
movsl
fbld
or
scas
rcll
std
push
imul
pop
jmp
mov
mov
aas
dec
xchg
dec
faddl
jae
mov
xchg
adc
push
adc
mov
pushw
sub
inc
xchg
push
and
mov
movzbl
in
mov
insb
out
std
sub
sbb
xchg
bound
nop
inc
mov
nop
lcall
int
cmp
leave
test
les
jne
movsb
dec
lods
popf
push
mov
jo
and
push
dec
cmp
inc
loop
push
pop
scas
jnp
loopne
lea
push
shr
jp
cmpsl
adc
xor
xor
dec
jno
push
pop
and
pop
push
adc
mov
mov
and
adc
add
sub
das
inc
pop
scas
fimuls
cmc
out
pop
adc
cli
mov
jmp
test
ror
les
mull
pop
imul
aam
pushf
sbb
pop
adc
inc
notl
lcall
cmp
dec
jecxz
cld
adc
or
pop
loop
inc
arpl
xor
lea
cmpb
or
sbb
in
sbb
divb
sbb
xchg
push
jge
dec
sub
je
std
push
push
mov
shrb
inc
mov
jl
in
xchg
mov
xchg
adc
scas
pop
lods
xor
mov
jp
inc
lahf
ror
sbb
sub
pop
push
xor
imul
es
fs
das
mov
fs
hlt
arpl
inc
inc
sub
mov
ret
sbb
js
pop
lahf
inc
pusha
sbb
mov
jbe
fucompp
test
arpl
call
gs
movb
dec
mov
mov
lds
mov
inc
push
dec
push
xchg
imul
dec
adc
push
aam
push
mov
sahf
ljmp
mov
out
sub
sub
mov
mov
cmp
stos
icebp
lcall
xchg
xchg
or
inc
jb
cmp
fstps
xlat
dec
or
lret
lea
and
xor
fucomi
push
cmp
popf
cmpsl
mov
jno
or
enter
into
imul
movsb
and
cld
sbb
xchg
add
inc
dec
popa
push
fs
mov
testl
das
mov
lahf
xor
pop
adc
dec
xor
rorl
lea
lock
push
ja,pn
and
inc
mov
sub
aas
in
pop
int
bound
adc
inc
xchg
arpl
jmp
push
push
sbb
popf
imulb
stos
sbb
into
fwait
divb
lea
adc
dec
ret
out
and
shll
int3
and
cmp
aas
fwait
addl
loopne
sub
xchg
test
or
test
into
popf
lock
pop
mov
xor
sub
mov
mov
loope
jl
push
outsb
mov
scas
mov
cmpsb
adc
xchg
test
fdivrs
or
je
mov
ds
sub
rorb
es
sbb
mov
and
jbe
pop
adc
bts
or
adc
push
xor
push
pop
push
scas
jne
shrb
ss
cmp
jnp
mov
inc
into
lock
xchg
xchg
addr16
pop
aas
les
mov
seto
xor
push
pop
es
into
mov
addr16
mov
dec
cwtl
fwait
jge
out
stos
and
in
arpl
stc
out
sbb
loope
cmp
xor
stos
es
push
in
dec
xchg
test
lods
xor
stos
test
repnz
jmp
adc
or
or
jl
push
outsb
push
dec
pop
inc
jno
dec
fidivrs
pop
jg
testb
rcl
add
movsb
xor
rcrb
push
aad
xchg
sub
and
dec
fwait
and
repnz
fnsave
push
popa
push
cmp
ret
add
and
stos
cmp
cmp
dec
push
mov
dec
pop
mov
in
and
jns
addr16
repz
mov
mov
sbb
cmp
jne
dec
cwtl
es
jno
imul
out
jno
shll
or
pop
lret
ljmp
push
inc
push
inc
test
push
mov
cmpsl
sbb
addr16
push
call
test
clc
cld
nop
sbb
repnz
dec
cmp
pop
mov
sub
jg
in
and
inc
sub
and
das
sbb
dec
fidivrl
std
jge
imul
leave
outsl
push
fnop
lcall
xchg
test
std
lds
adc
lea
mull
sub
test
mov
mov
jne
sub
push
push
push
add
or
xor
adc
outsb
sbb
mov
mov
mov
shl
or
icebp
mov
sbb
int3
push
mov
lret
mov
insb
sub
jge
xchg
dec
nop
pop
jns
add
xchg
adc
push
mov
jg
adc
sbb
lock
mov
cmpsl
adc
sbb
mov
outsl
call
lods
sub
loope
dec
andl
xchg
in
sub
or
jle
frstor
testb
cld
in
inc
dec
add
lret
stos
ljmp
and
jmp
or
loop
movsb
test
lahf
out
jge
mov
in
push
pushf
push
mov
mov
fimuls
insb
mov
or
cmp
sub
fcompl
outsb
cld
jle
push
pushf
push
mov
mov
fimuls
insb
mov
or
cmp
sub
fcompl
jle
jle
setl
mov
mov
fimuls
cli
push
stos
cmp
enter
in
push
pushf
push
mov
mov
and
inc
jl
sbb
xchg
push
jae
inc
inc
push
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
dec
decl
xor
aad
jecxz
hlt
aad
or
add
push
or
pop
pop
add
add
add
add
add
add
add
fldl
stos
add
testb
add
lret
add
dec
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
fldl
lea
jo
adc
add
add
add
add
add
add
add
add
in
mov
add
add
add
add
add
add
cmp
push
add
add
add
add
add
add
inc
add
add
add
add
add
roll
xor
test
inc
add
add
add
add
add
pop
add
add
mov
add
in
and
inc
add
add
add
add
add
add
add
pop
add
push
add
add
add
add
add
add
add
outsb
add
add
push
add
add
pop
add
add
add
pop
add
add
test
popf
add
loope
dec
add
add
inc
add
add
add
sbb
add
push
add
scas
add
jo
inc
add
add
add
add
add
add
push
add
add
fiaddl
mov
add
add
imul
add
add
add
add
add
add
add
or
mov
add
aam
data16
add
add
add
inc
add
add
add
add
test
jbe
mov
add
mov
push
add
jns
pop
add
add
add
add
add
add
add
mov
add
fiadds
mov
add
cmp
add
cmp
add
add
add
add
add
pusha
add
add
addb
add
test
fwait
add
add
add
add
inc
add
add
addb
add
jge
pop
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
loope
jge
jg
hlt
add
add
inc
add
add
add
add
push
add
sub
rolb
add
add
add
add
sbb
add
add
add
add
add
add
movsl
add
add
jo
rolb
add
add
sbb
pop
add
add
bound
xchg
add
jg
push
add
test
xchg
add
add
or
test
jmp
add
pop
add
sub
mov
add
add
pop
add
add
add
sbb
inc
add
add
add
add
add
add
add
add
add
add
sub
dec
add
pop
add
add
add
add
add
add
cmp
jbe
roll
add
add
add
insb
add
add
add
roll
add
add
add
dec
add
add
add
add
add
add
add
jne
mov
insl
mov
arpl
fwait
ss
mov
adc
call
xchg
or
sub
data16
ss
fisubrs
lret
test
sahf
bound
inc
lcall
adc
repz
ss
mov
mov
sbb
cmp
mov
data16
mov
jns
xor
add
dec
movsb
jbe
cmp
xor
and
mov
in
xchg
je
cmp
cli
aad
insl
adc
pushf
mov
fs
sbb
stos
movl
jb
hlt
pop
or
sub
loopne
sbb
je
mov
aam
insb
pop
shrl
dec
test
stos
mov
movsb
ffreep
and
cli
ret
lret
or
jl,pt
dec
out
sahf
imul
lds
xor
sti
orb
and
or
or
sysret
sub
mov
push
movsb
js
inc
pop
ja
hlt
fstpt
xor
add
popa
push
inc
lds
pop
push
mov
jg
sbb
pop
ret
fwait
inc
push
scas
or
mov
shll
lcall
fisubrs
cli
cmpsb
mov
push
sub
outsb
xchg
inc
rcrl
aam
dec
jns
mov
jp
mov
je
sub
lods
mov
add
sub
mov
stc
ret
dec
fs
add
mov
sub
push
jnp
andl
nop
pop
inc
or
scas
repnz
mov
cs
scas
loop
jl
incl
cmp
adc
sub
jecxz
hlt
cmc
mov
pop
jmp
lock
in
pusha
insb
push
adc
xor
movsl
jne
cmp
or
pop
dec
push
mov
push
pop
pop
daa
sub
sub
sub
lods
xchg
lcall
repz
mov
add
pop
mov
imul
push
icebp
jmp
clc
mov
pop
sbb
jne
and
cwtl
enter
std
and
mov
out
ljmp
test
mov
mov
jg
sahf
push
daa
adc
inc
sahf
cmp
sbb
fildll
jnp
push
mov
cmpsb
pop
cld
xlat
sbb
ljmp
das
stos
push
daa
aam
push
inc
fcmovne
sbb
xchg
and
sbb
repz
loope
jno
imull
push
mov
nop
cmp
outsl
jb
ljmp
movsb
inc
inc
xchg
pop
int3
bound
jmp
mov
mov
imul
adc
insb
pop
mov
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
