call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
dec
in
cmc
outsb
lds
add
xchg
into
fcmovnu
jg
inc
push
mov
xor
adc
pop
cmc
outsb
lds
push
movsl
push
mov
test
lock
fidivs
inc
push
mov
xor
dec
in
cmc
outsb
lds
push
movsl
push
mov
test
xchg
into
ficoms
and
cmp
arpl
imul
test
or
dec
pop
push
pop
movsl
xchg
nop
or
add
es
lods
push
add
cli
rol
in
in
scas
repz
and
lcall
jne
mov
jnp
jno
mov
mov
aad
cmpsb
pop
notb
push
call
rclb
gs
adc
stos
ficoml
or
mov
or
loopne
sar
orl
push
mov
lea
into
cltd
into
mov
fcom
jo
not
scas
jo
adc
add
inc
fdivs
aam
xchg
ficomps
ja
add
and
mov
data16
jnp
ljmp
sahf
gs
push
xor
gs
add
pop
cmc
outsb
lds
push
movsl
push
mov
test
xchg
into
fidivs
inc
push
mov
mov
mov
test
xchg
loopne
loope
adc
xchg
and
ljmp
cltd
lea
mov
out
lock
mov
scas
and
mov
daa
movsb
cmp
push
xchg
push
mov
test
xchg
into
fidivs
inc
push
mov
mov
cmc
outsb
lds
push
movsl
push
mov
test
xchg
into
fidivs
inc
push
mov
mov
fst
stos
pop
adc
push
mov
xchg
shlb
jno
jne
imul
pop
inc
das
pop
outsl
mov
xlat
testl
add
jb
adcb
cmpsl
test
test
add
add
loopne
js
sbb
pop
adc
dec
xor
out
cs
pop
adc
out
pop
repz
fbstp
es
dec
sbb
pop
scas
jb
dec
arpl
stos
cmp
testl
rclb
pop
mov
and
jno
out
cmp
outsb
lea
adc
dec
adc
add
cmc
xor
sub
sbb
clc
jle
fiadds
push
ds
mov
aam
mov
or
xor
call
xchg
xchg
call
mov
mov
imul
aam
xchg
imul
mov
ficomps
stc
mov
pop
or
daa
loopne
les
dec
xchg
addr16
cmpxchg
sbb
iret
jns
and
jne
cwtl
inc
lahf
mov
mov
or
adc
inc
mov
lcall
mov
jo
repz
data16
cld
fists
dec
dec
mov
jge
cltd
es
and
push
lods
inc
idiv
sbb
mov
sub
dec
pop
mov
xchg
push
repz
popa
cmpsl
xchg
outsb
jp
sbb
add
jb
inc
mov
cmpb
cs
mov
add
mov
iret
push
div
ret
mov
cli
cmp
and
or
leave
popa
rcl
pop
xchg
jmp
xorb
inc
jge
mov
mov
lret
adc
dec
lret
mov
pop
jle
jo
in
sti
ljmp
lock
pop
add
stc
jae
aas
jbe
movsb
aas
push
add
cltd
mov
and
scas
jge
std
mov
inc
fmuls
cmpsb
jbe
int
loop
inc
push
sub
push
aaa
cli
lods
ffree
sub
pushl
loope
popa
push
repnz
sub
dec
jae
and
imul
add
mov
sbb
ficomps
das
lods
pop
lcall
sub
test
negb
pop
jns
stos
jb
stc
cltd
mov
scas
push
mov
cld
cld
lret
inc
add
pop
and
push
in
ret
lds
ja
mov
jmp
pop
cli
and
fsub
mov
xor
cmpsb
rep
mov
lods
rcr
pop
inc
xor
stos
cmp
add
mov
mov
fsubr
cmpsb
adc
mov
cld
mov
daa
xor
dec
insl
je
scas
jns
pop
or
cwtl
in
mov
subl
sub
adc
aaa
jl
andl
test
lods
adc
push
lret
cmpsb
aaa
dec
shr
xchg
imul
lea
shll
shl
test
cli
add
fstpt
inc
inc
lcall
cmpb
xor
ds
stos
mov
scas
inc
stc
in
xlat
sti
sub
in
and
mov
repz
xchg
sbb
xor
cltd
jo
pop
test
and
push
shlb
pop
loop
pop
dec
fwait
into
cli
jg
clc
out
sub
or
aaa
pop
lret
sarb
lods
jecxz
ret
adc
mov
mov
sbb
lea
out
and
test
mov
cmp
or
push
enter
pop
mov
mov
pop
pop
push
insl
cmp
mov
lcall
loopne
pop
lea
ljmp
cmpsl
xchg
das
cmp
and
pushf
jmp
or
into
push
ret
lea
dec
stc
in
xchg
xor
cmp
ljmp
and
adc
pop
hlt
lods
push
cmp
inc
int3
dec
fldenv
mov
jmp
mov
xor
daa
dec
adc
dec
cmpsl
scas
pop
mov
test
xlat
push
sub
icebp
popa
and
addr16
xor
loop
inc
add
daa
test
jecxz
mov
jmp
test
sti
jno
dec
into
aas
mov
mov
mov
out
cmp
mov
or
xchg
pop
fcompl
cmp
mov
mov
or
jecxz
stos
pop
xor
dec
dec
fcoml
jne
inc
dec
sub
aad
mov
icebp
mov
add
xchg
repz
aad
stos
inc
fnstenv
mov
nop
mov
repnz
push
mov
push
popf
add
lea
sbb
cmc
cmpsl
scas
adc
mov
cmc
lcall
sbb
insb
mov
out
js
pushl
push
lods
movsl
repz
aam
fdivs
ljmp
lea
sbb
stc
sbb
lcall
sbb
enter
or
cs
xor
adcb
iret
in
stos
mov
scas
mov
enter
mov
lds
stos
popa
mov
lcall
push
and
jmp
mov
sub
std
rorl
mov
mov
add
imul
cmp
pop
js
dec
adc
bound
xor
hlt
inc
mov
pop
or
pushf
xor
loop
shl
adc
cmp
sbb
jbe
or
and
push
outsl
pop
mov
out
aas
cmp
push
sahf
ss
sbb
push
ljmp
xor
sti
mov
cmp
nop
fwait
inc
repz
adc
sub
jmp
cmp
jle
jb
popf
lods
or
pushf
push
jg
popf
outsb
mov
shrb
mov
aad
inc
iret
xor
les
pushf
jb
adc
insl
loop
lock
pop
sahf
in
or
mov
xchg
das
ret
mov
push
imul
mov
push
push
aam
stos
lock
dec
add
negl
popf
jl
fimull
xor
xor
mov
scas
mov
or
adc
pop
dec
dec
mov
ret
inc
ja
or
shrb
xchg
jnp
or
mov
adc
sub
or
jnp
test
fwait
xor
inc
add
fmuls
mov
lods
sub
jo
ljmp
mov
jbe
sbb
sbb
or
or
sbb
leave
inc
xor
div
jo
ds
bound
xchg
mov
sbb
ljmp
neg
cmpsb
mov
push
jl
adc
sub
jb
mov
fstpl
sbb
pop
mov
sub
idiv
dec
cmp
jb
inc
jg
mov
pop
add
sbb
repnz
add
data16
xlat
xor
lea
cmp
inc
je
mov
les
jmp
popf
cs
fmull
lods
sbb
loop
pop
inc
xchg
repz
stos
cs
mov
stos
lcall
pop
mov
push
xchg
ficompl
mov
mov
fwait
or
addl
mov
pop
leave
sbb
xchg
andb
icebp
std
and
sbb
sub
fcoml
jge
jb
fwait
daa
xor
sub
clc
pop
mov
fdivrs
aad
adc
fdivl
mov
test
mov
cld
es
sbb
popf
roll
pop
incb
mov
aaa
into
cmc
sub
sti
xchg
pop
inc
cld
fs
or
fsubrp
addr16
inc
jle
jmp
addb
mov
and
mov
lea
lods
sarl
mov
loop
sbb
addr16
andb
lcall
test
imul
popa
jg
test
add
or
jns
std
jne
mov
mov
jb
sub
add
out
imul
in
add
daa
sbbb
das
inc
mov
and
pushf
adc
xor
mov
test
iret
push
jge
aas
inc
xchg
fs
ds
inc
sbb
sub
xchg
ficomps
pop
sbb
js
negb
pop
and
adc
aaa
fisttpll
mov
std
andl
dec
sbb
aas
stos
or
jnp
cmp
dec
mov
test
mov
jmp
mov
push
test
jmp
dec
inc
mov
mov
jb
mov
test
jb
jmp
push
scas
jmp
pushf
mov
sbb
fdivrs
jl
push
sbbl
add
leave
mov
aad
push
call
div
bound
addr16
push
xor
mov
lods
dec
dec
inc
sub
in
sub
stc
mov
ficoml
mov
jo
mov
rcl
fbld
mov
hlt
xchg
add
ret
mov
scas
lock
iret
lock
jmp
into
pusha
pushf
loop
cs
sbb
lahf
cltd
lea
dec
and
push
sbb
pop
lretw
pop
fidivrs
mov
pop
or
adc
incb
loopne
in
inc
stos
loop
jg
jo
mov
and
sub
mov
add
ffreep
jp
outsb
push
aam
jne
sahf
and
pop
fnstsw
mov
and
icebp
adc
xor
fildl
or
dec
jb
gs
and
dec
cmp
jo
cmpsl
rclb
lods
xlat
js
imul
mov
push
mov
cli
ret
cld
jae
sbb
ret
dec
addl
call
sbb
in
jno
adc
cmp
inc
cs
xor
adc
arpl
sbb
sbb
lods
and
lret
or
int3
aaa
in
xor
push
and
shlb
and
in
jl
jp
pop
iret
cmp
push
mov
push
push
fcoml
arpl
push
add
mov
and
pop
add
mov
inc
stc
ljmp
shlb
jg
dec
shrl
mov
push
add
lock
lret
sub
mov
ret
inc
adc
je
pop
jecxz
enter
sahf
mov
mov
inc
jge
rorl
bound
pusha
mov
mov
adc
dec
jmp
mov
hlt
notb
xor
jo
dec
fxch
xor
pusha
push
add
jmp
je
jl
add
mov
inc
in
loope
icebp
mov
dec
lock
addr16
aam
lret
loope
in
sbb
movsl
sti
xor
xchg
fimuls
ds
out
fisttpl
stos
cwtl
rolb
std
das
icebp
mov
mov
iret
pop
cmp
xorl
mov
insb
lret
mov
cmp
cli
jmp
ljmp
add
mov
pop
inc
pusha
shl
bound
xchg
and
cmc
mov
jne
pop
in
push
push
push
loop
mov
jbe
loope
lahf
aaa
sub
jb
hlt
add
daa
cmpsb
mov
aad
xchg
subl
enter
add
mov
fstpl
insl
xchg
enter
xchg
mov
inc
mov
rol
pushf
and
sbb
std
test
mov
aam
es
pop
jp
into
adc
fisttps
mov
cmp
xor
sbb
cltd
adc
mov
das
inc
mov
inc
lds
test
jmp
test
pop
loop
inc
jl
mov
and
ret
cmpb
mov
int3
and
mov
mov
js
sbb
sub
adc
loop
xchg
icebp
sub
nop
sarb
sbb
mov
popf
add
js
pop
push
inc
mov
mov
outsb
dec
adc
inc
mov
add
push
insl
int3
loop
mov
test
pusha
cmp
adc
cli
lcall
jp
push
sbb
cltd
leave
sub
mov
popf
sbb
dec
xchg
dec
nop
lahf
push
out
sbb
adc
mov
ret
iret
dec
cmpsb
mov
movsb
and
dec
mov
enter
inc
and
lods
cmp
push
ss
or
bnd
push
insl
int
dec
mov
xor
loopne
lret
pop
xor
addr16
shrb
add
sub
lds
jecxz
add
fidivl
sbb
lods
addr16
js
pop
insb
lds
jno
mov
imul
pop
mov
jle
lcall
lret
or
mov
js
rcll
mov
in
xchg
aaa
and
cld
jg
xor
mov
fwait
xchg
lret
cli
loope
daa
sbb
rorb
popf
cltd
jl
push
dec
and
hlt
cmp
test
add
mov
mov
jp
mov
out
incl
mov
lods
mov
inc
push
cmc
loopne
mov
cmp
dec
out
cltd
mov
cmpsl
sbb
mov
mov
pusha
xchg
imul
outsl
lahf
jnp
cld
adc
ret
loope
adc
fsubl
lods
ljmp
jnp
daa
mov
dec
xor
sbb
xor
xchg
adc
outsb
cld
mov
hlt
sub
add
add
xchg
rcr
sbb
mov
aaa
lret
int3
pop
cld
in
mov
stc
insb
adc
dec
rclb
mov
pop
outsl
loope
inc
rol
pop
mov
lds
xchg
xrelease
pop
mov
dec
mov
jge
add
jne
jl
mov
xchg
inc
shrb
push
fdivl
and
and
xchg
pop
pop
testb
sti
dec
movsb
pop
pop
mov
enter
ljmp
out
lock
aas
rcrb
cs
mov
xchg
push
pop
jecxz
bound
pop
rcl
mov
pop
pop
into
add
mov
and
mov
adc
push
aaa
xor
cmp
dec
out
fisubl
stos
pop
pop
jge
sbb
xchg
jp,pn
mov
es
push
pop
subb
mov
xchg
jne
enter
pop
lcall
out
add
lods
insl
mov
bswap
push
iret
loop
xchg
ljmp
xchg
pop
das
inc
mov
int
and
pop
adc
and
dec
and
pusha
leave
pusha
push
js
inc
adc
rcrl
adc
dec
stc
ljmp
push
cmp
pop
pop
push
loop
inc
xchg
das
hlt
and
inc
sarl
cmp
jb
cmp
stc
shll
arpl
sub
push
lret
jecxz
adc
ss
jns
and
xchg
push
pop
fstl
out
sbb
adc
xor
insl
les
push
leave
add
test
and
stc
mov
sbb
dec
push
cmp
mov
mov
and
lods
js
push
push
pminsw
mov
dec
cmpsl
and
add
jg
fsts
xor
xor
jbe
inc
test
push
cmp
in
jle
jle
jge
shlb
jle
xlat
rcll
test
add
inc
daa
xchg
fcompl
dec
or
pop
dec
xchg
xor
mov
aad
dec
clc
fisttpl
or
push
xchg
ret
dec
jp
jo
or
ss
repz
mov
ds
enter
fsubl
fiaddl
sub
in
cli
test
mov
clc
pusha
inc
sahf
jecxz
mov
into
fbstp
shrl
mov
jl
icebp
out
cmpsl
enter
aaa
pusha
pop
dec
sbbb
aam
push
xor
inc
pop
test
sub
jnp
push
in
nop
mov
icebp
repz
adc
aad
fisttps
faddl
mov
int3
sbb
iret
sub
jp
iret
mov
js
pop
jbe
and
insl
inc
add
mov
ficomps
inc
or
movsb
cld
call
loope
int
outsl
sub
jnp
gs
xchg
sub
lods
cli
jns
test
dec
jl
inc
mov
pop
mov
xor
leave
cmp
or
or
orl
push
call
and
imul
adc
push
pop
std
fdivp
or
aaa
inc
mov
xor
xor
imul
in
imull
pop
imul
push
jnp
jae
fbstp
cmp
outsl
mov
lds
in
dec
push
dec
int3
pop
fwait
xchg
cmpsl
adc
sarb
push
icebp
mov
int3
ds
xor
cld
adc
cwtl
cwtl
seto
das
pop
adc
test
mov
xlat
gs
push
subl
xchg
push
addb
mov
ljmp
dec
cmpsb
cmpb
inc
xor
xchg
test
movsl
aaa
shll
inc
insl
incl
and
fcompl
inc
ds
stos
sub
push
or
and
mov
cmp
je
and
push
jbe
in
dec
js
pop
adc
cmp
das
clc
jne
cwtl
stos
andl
lret
arpl
scas
push
icebp
call
dec
pushl
inc
mov
inc
mov
in
jo
pop
movsb
mov
cmp
dec
xchg
xchg
pop
mov
jmp
jae
xchg
dec
sbb
inc
int3
in
das
push
xchg
xchg
xchg
cli
pop
dec
jnp
outsb
inc
and
test
int
push
pop
mov
movb
and
int3
ret
movb
mov
sbb
and
std
or
popf
cmc
call
movl
cmpsb
push
and
cmpb
mov
popa
jne
jae
jns
rcl
mov
jbe
into
ret
and
hlt
pop
or
out
fstp
int3
xor
test
inc
enter
fcmovne
cmp
xchg
push
inc
mov
xchg
pop
fistps
xorl
out
cmp
es
adc
push
ja
outsb
inc
jp
jg
mov
outsl
adc
aad
mov
insl
dec
mov
insb
dec
mov
fldt
addr16
add
dec
icebp
in
push
push
aad
iret
cltd
adc
shll
clc
mov
movsb
inc
push
adc
ja
jmp
aaa
xchg
pop
fadds
lret
popa
or
leave
sub
push
xchg
jno
sbb
in
dec
pop
shlb
ljmp
sub
add
test
jecxz
push
hlt
mov
out
loopne
gs
or
adc
pop
xchg
sarb
pop
subl
lods
jne
push
cmp
pop
push
or
sub
sub
dec
jae
movsl
in
sbb
jl
pop
out
push
dec
roll
sbb
jo
xor
test
sbb
test
je
adc
aam
pop
fsubr
bound
in
push
cltd
push
loopne
iret
lahf
cwtl
popf
inc
fistpl
pop
add
rcrb
aad
dec
cmpsb
loope
mov
mov
lods
insb
inc
inc
dec
cmp
int
jns
in
xor
xlat
mov
rcrl
inc
cmp
sbb
jnp
fistps
pop
cmp
js
sbb
xchg
add
sti
push
jb
call
outsb
jge
pop
call
hlt
pushf
arpl
push
ds
xor
rcll
aaa
movsl
lcall
imul
jo
mov
scas
adcb
xchg
adc
inc
cmp
xchg
das
push
dec
add
das
nop
adc
mov
push
sbb
cli
and
cmpsl
adc
sub
mov
sti
cmpsb
or
add
decl
adc
jo
jo
and
pop
push
aad
mov
jg
pop
dec
dec
xor
adc
rcll
mov
sbb
push
mov
lock
fcmove
xchg
cmp
rcr
jp,pt
mov
es
mov
and
roll
xchg
test
adc
jp
xchg
lahf
xor
pusha
xor
fwait
adc
and
lahf
cmp
jge
iret
ror
jne
fs
mov
inc
add
loop
and
rcrb
dec
pushf
push
je
std
xchg
and
mov
pusha
xor
push
movsl
pop
or
xchg
popf
cmp
and
cli
mov
dec
repnz
sbb
cmp
and
xchg
sub
jno
incl
jnp
dec
xchg
sbb
repnz
jae
les
scas
mov
stc
xorl
lss
in
cmp
xchg
mov
adc
jno
sarl
imul
cmp
data16
xchg
and
aaa
sub
and
stos
push
stos
js
data16
outsb
data16
push
cmp
xor
ss
ret
insl
xlat
pop
mov
repnz
shrb
push
inc
dec
xchg
dec
and
inc
sbb
push
mov
xor
cmc
push
mov
dec
scas
or
add
out
jge
out
inc
imul
mov
rorl
push
fwait
out
stos
xor
mov
mov
inc
inc
push
add
jb
cmp
sub
xchg
insb
add
aad
fistps
sub
xor
adc
aad
lret
lods
addr16
ss
roll
push
dec
in
repz
mov
iret
hlt
push
sub
jae
mov
cwtl
sub
jp
jl
ja
cwtl
stos
stc
arpl
sub
sahf
cmc
das
lds
push
movsl
push
mov
test
xchg
into
fidivs
inc
push
mov
mov
cmc
outsb
lds
push
movsl
push
mov
test
xchg
into
fidivs
inc
push
mov
mov
cmc
outsb
lds
push
movsl
push
mov
test
xchg
into
fidivs
inc
push
mov
mov
cmc
outsb
lds
push
movsl
push
mov
test
push
into
gs
inc
inc
and
lods
push
lret
inc
ljmp
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
pusha
mov
movsb
or
mov
xor
std
jp
and
adc
add
je
fs
fldl
cmp
test
jge
dec
aam
mov
mov
sbb
inc
divl
test
xor
les
data16
gs
mov
aaa
insb
sbb
test
aam
loope
pop
pop
dec
sahf
xlat
mov
jl
xor
sbb
out
sub
enter
hlt
andb
fxch
sub
jbe
push
push
push
adc
or
cld
or
cmp
gs
in
bound
jb
arpl
jo
roll
xorb
shrl
in
mov
out
fistpl
je
lcall
shl
fisttpll
xchg
jl
insl
or
in
push
push
daa
std
fs
push
test
test
cmp
loopne
test
fsubl
mov
popf
adc
std
aaa
mov
push
mov
movsb
or
hlt
cmp
dec
aam
les
das
and
adc
add
je
fs
mov
in
xchg
jae
add
cmp
int3
dec
cld
and
test
xchg
add
shll
test
sbb
and
cld
pop
call
sbb
sub
push
in
jge
pop
loope
fidivrl
dec
aam
les
adc
add
je
fs
fldl
cmp
test
jge
dec
aam
les
adc
add
je
fs
fldl
stc
int3
movsl
jns
inc
and
cmp
stos
push
inc
popa
jns
outsb
out
out
outsb
add
test
cli
push
int3
hlt
clc
mov
loop
jo
bound
or
cmp
mov
pop
and
mov
push
js
aas
pop
in
clc
xchg
out
and
mov
pop
jae
arpl
jns
mov
repz
inc
scas
jp
adc
das
jp
add
mov
xor
adc
pusha
inc
repz
out
mov
dec
cmpsl
add
mov
arpl
sti
test
push
push
lret
daa
inc
add
sbb
add
test
lods
push
ja
dec
lcall
jne
pusha
add
int3
fisubl
das
fcoms
rcrb
add
mov
sbb
sahf
stos
xchg
out
mov
add
test
sbb
subl
leave
mov
or
shlb
mov
icebp
or
jns
in
mov
push
sti
bound
jmp
pop
jae
or
in
jne
or
add
aas
jno
lock
hlt
jmp
out
and
cmpsb
dec
jae
xlat
sub
pop
mov
push
andl
dec
je
mov
cs
push
jecxz
adcl
outsl
popa
lea
adc
int
cmc
pop
cmp
xor
stc
add
fnstcw
in
repnz
int3
fidivl
pop
outsb
ss
mov
imul
sbb
push
push
xchg
movsb
jno
mov
xchg
lods
pop
rcl
push
sub
cmpl
push
mov
sbb
mov
push
test
sub
sub
inc
test
sub
sub
mov
adc
jmp
xchg
cmp
jmp
lea
mov
decb
lods
sti
into
xchg
jae
mov
lock
into
add
adc
dec
sbb
sbb
das
sarb
repnz
repz
cmc
in
xchg
cwtl
push
jns
dec
xchg
jle
jge
or
sbb
xchg
push
add
or
xchg
jp
pop
jo
pop
dec
mov
test
aas
cmpsl
daa
xchg
pushl
mov
and
test
push
mov
int3
pop
movb
push
shrl
fsubrs
cmc
mov
adc
aas
pusha
mov
shlb
jo
jmp
xor
xchg
or
mov
mov
fcmovu
popa
inc
movsl
test
jmp
inc
fidivrs
xor
sub
ss
js
popa
jecxz
or
les
dec
dec
jmp
lret
mov
int
gs
cwtl
adc
fcoms
dec
pushaw
mov
out
inc
mov
cli
arpl
jne
dec
cli
or
int3
dec
je
outsb
ss
fdiv
sbbb
repnz
jp
sub
add
mov
pusha
aaa
xchg
enter
xchg
mov
fst
aam
push
stos
pop
or
test
cmp
xchg
and
out
test
dec
aad
jl
sbb
cmpsl
in
jecxz
inc
repz
jo
rol
sbb
loope
sub
les
push
and
cwtl
fistl
testb
mov
out
ss
sbb
dec
push
push
inc
cli
popf
lahf
xchg
addr16
jl
pop
pusha
test
mov
sbb
sarl
in
je
cld
cli
imul
scas
jge
jae
jg
mov
imul
cmpsb
imul
adc
sbb
jnp
mov
mov
or
shrb
xchg
mov
mov
int3
das
jge
sub
inc
and
sub
int
dec
inc
repnz
push
leave
cltd
add
andl
gs
sub
hlt
test
movzbl
lea
js
imul
in
subl
sub
and
push
sub
push
mov
xchg
lahf
mov
iret
dec
or
iret
daa
sarl
sub
xchg
jmp
cwtl
jle
xchg
xchg
mov
int3
mov
xor
add
sub
jb
mov
cltd
and
loop
or
lcall
and
push
jle
scas
inc
inc
mov
repnz
inc
fs
popa
stos
decb
sub
lret
add
mov
push
das
xor
cmp
adc
or
std
aas
popa
pushl
cwtl
push
push
inc
iret
sub
jmp
aaa
adc
mov
mov
paddb
mov
and
aam
pop
mov
popa
push
mov
mov
xchg
sbb
mov
aaa
data16
in
or
xchg
and
mov
int3
pop
mov
lods
xchg
inc
mov
or
rcl
and
std
nop
divl
add
roll
jnp
and
je
jns
push
dec
adc
cli
jo
iret
pop
inc
ljmp
imul
dec
push
into
push
jecxz
mov
xchg
pusha
inc
pslld
mov
in
inc
inc
ucomiss
mov
mov
dec
sub
mov
es
or
mov
dec
cld
sub
sbb
adc
fistps
pop
stos
adc
inc
mov
outsb
mov
or
hlt
cwtl
inc
or
es
out
out
aas
in
jmp
push
cli
or
in
movsb
sub
into
fchs
xor
sbb
cmp
or
mov
cmpsb
lcall
cmp
or
adc
imul
fildl
mov
cmp
sbb
loop
daa
xchg
jmp
push
pushf
sub
lea
pop
nop
lcall
add
call
pop
incl
rclb
aam
iret
test
shrl
cld
sbb
ret
mov
push
lret
andb
pop
cmp
std
cmc
xor
sub
sbb
sbb
jbe
inc
xchg
ds
jmp
inc
mov
lfs
jmp
xchg
ret
inc
mov
jmp
lcall
push
mov
out
jge
icebp
push
sub
sub
push
pop
xor
sub
sub
inc
das
loop
xchg
insl
into
js
mov
sub
inc
pop
xchg
je
sub
int3
dec
rclb
sbb
arpl
hlt
negl
addr16
xchg
test
das
xchg
les
es
fs
adc
arpl
push
pop
cmpsl
sahf
xor
bound
push
test
dec
or
scas
es
mov
inc
popf
iret
mov
push
pop
sti
and
mov
movsl
in
cmp
lock
or
andb
iret
and
mov
or
ret
sbb
js
in
into
out
push
mov
insl
jmp
leave
adc
mov
aas
xchg
les
stos
xchg
or
push
mov
mov
int
jbe
sbb
push
jbe
mov
into
jae
and
mov
inc
jbe
dec
mov
aas
movsl
mov
xor
bound
jne
push
mov
sahf
dec
lcall
or
and
push
ret
pop
test
jl
lods
dec
dec
test
sbb
sahf
xchg
pop
int3
push
cmp
int
insl
jae
outsl
jno
pushf
out
mov
adc
sub
or
jmp
bound
mov
sbb
ja
jbe
inc
jo
in
aam
clc
jns
test
out
in
add
cmp
push
mov
mov
push
and
outsl
push
pop
shrb
ffree
cmpsl
mov
cmp
mov
xchg
mov
fcomip
mov
mov
ja
push
ljmp
fisubs
adc
cwtl
inc
sub
inc
inc
testb
dec
adc
inc
cmp
aas
test
push
xor
pop
add
in
pushf
xchg
pop
pop
cltd
out
jle
mov
jp
xchg
mov
or
in
sub
lret
loopne
aas
sub
jp
mov
stos
mov
cmp
test
subl
lcall
test
xor
push
and
mov
inc
decl
nop
push
mov
out
popf
out
sub
xchg
pop
lds
lret
cwtl
pusha
mov
jecxz
xchg
rcr
ljmp
lea
outsb
mov
cmc
fidivs
popf
mov
mov
ljmp
cmc
add
int3
pop
mov
add
into
std
sbb
cmpb
sbb
insb
pop
jg
xor
cld
pop
mov
cmc
jo
pop
xor
and
lds
loop
or
and
outsl
mov
cmp
nop
loope
enter
in
push
push
iret
insb
and
test
dec
cmc
xor
mov
sub
popa
add
mov
daa
inc
sarl
nop
cmc
in
leave
addr16
clc
inc
cmp
adc
repz
sbb
int3
movl
sbb
scas
mov
test
test
and
xor
and
lret
loopne
sbb
test
mov
sub
outsl
mov
cmpsl
and
into
les
pop
pop
pop
sbb
or
mov
jbe
mov
cmp
mov
mov
inc
fnsave
push
pop
fcmovnb
in
inc
dec
loop
sub
aam
aas
push
pop
lret
mov
loop
cmp
inc
xchg
dec
push
fdivs
repnz
add
and
adc
ret
arpl
out
jo
popf
enter
and
ss
lret
jns
push
icebp
lock
stc
inc
lret
jb
xor
push
clc
adc
shrb
mov
xor
xor
fimuls
mov
ja
sti
sti
iret
incl
ret
cmp
cmp
push
xor
pop
into
lahf
add
inc
inc
inc
popl
jmp
add
ss
xlat
push
adc
mov
fistpll
mov
imul
in
sbb
rcrl
pop
jns
and
ss
jp
lods
lcall
sbb
andl
sub
xchg
cmpl
orb
jp
das
loopne
xor
arpl
sub
jae
mov
xchg
jp
mov
aad
sub
jnp
or
xor
stos
mov
shl
andb
inc
jbe
fsubs
js
pop
pop
test
fsubrs
daa
outsb
pop
and
aas
add
cmp
popf
jbe
loope
scas
or
or
lods
cwtl
out
sahf
ja
xchg
xchg
inc
xor
scas
or
and
mov
hlt
adc
mov
push
fcoms
dec
lcall
cltd
sub
das
sbb
int3
fst
aam
jno
arpl
ret
xor
idiv
dec
in
inc
ja
dec
or
sbb
jmp
lahf
nop
ljmp
jae
sbb
aas
mov
fs
lods
sub
xchg
lea
lods
into
das
xor
outsb
shrb
mov
testl
data16
jbe
and
int3
repz
sub
cltd
std
mov
fwait
pop
jle
and
fimuls
xchg
push
pop
pop
xchg
cld
outsb
xchg
enter
sub
pop
enter
push
adcl
insl
data16
in
orb
add
ljmp
idiv
cs
sub
inc
daa
clc
pop
push
push
add
jp
xchg
lods
inc
lods
or
cmpsl
and
ret
and
and
lock
pop
rclb
rolb
jns
sti
push
jno
sti
add
in
pop
dec
jae
outsb
out
cmp
fmuls
shll
jno
pop
push
mov
xchg
popf
popa
shlb
jb
mov
imul
push
int
xchg
test
addr16
dec
push
nop
jno
shll
roll
pop
xchg
sbb
add
pop
test
arpl
inc
test
and
mov
fnstenv
sub
adc
sub
push
pop
dec
add
cmp
inc
push
into
mov
cwtl
and
xchg
leave
aam
movsl
cmp
sub
xchg
jl
and
mov
cmp
call
mov
jge
jmp
xchg
imul
sti
lret
cmp
push
mov
xorb
bound
sahf
ljmp
inc
mov
icebp
insl
or
out
and
sti
in
dec
jg
jno
pop
jge
je
mov
pop
loop
mov
shlb
xchg
or
lods
loopne
sbb
lret
test
mov
adc
jge
dec
inc
fimull
mov
addl
pop
jb
push
lcall
jbe
pop
loopne
loopne
sub
incl
inc
dec
repnz
lea
sti
add
jne
negl
cmp
daa
icebp
inc
push
cmpsb
push
fs
pop
push
mov
dec
fsub
loopne
aaa
loope
cwtl
fsubp
addl
out
pop
data16
aam
pop
push
push
das
pop
int3
mov
bound
cmc
xor
xchg
pop
fwait
scas
push
push
bswap
xchg
enter
cltd
in
push
repnz
jg
adc
jae
and
xor
scas
mov
dec
mov
call
notb
lret
int3
mov
push
xor
xor
xor
dec
nop
cmpsl
int
daa
lods
xchg
ljmp
lds
and
xlat
out
outsb
mov
adc
and
or
shlb
faddl
xchg
pop
inc
xchg
lods
sbb
sbb
pminub
stos
add
dec
xchg
lds
pop
mov
pop
call
xchg
mov
ja
mov
stc
cmp
jecxz
arpl
xchg
push
pop
into
push
das
fstp
mov
clc
or
inc
dec
lock
mov
jmp
aad
pop
lds
stos
ds
insb
frstor
loop
lds
add
lock
lods
lods
jbe
dec
popa
cwtl
inc
and
inc
mov
sub
mov
push
cmpsl
gs
in
push
jge,pn
dec
ljmp
std
or
jp
inc
les
cmpsl
lods
addr16
idivb
jle
aad
push
lcall
adc
inc
ss
ror
lcall
push
xchg
in
mov
insl
dec
sbb
ss
xchg
add
shl
es
lret
dec
push
das
sub
or
insl
inc
imul
int3
gs
addr16
or
fwait
je
ret
and
outsb
mov
pusha
adc
loopne
push
mov
and
or
and
out
lret
ss
jns
imul
pop
cmp
sbb
test
xorb
push
jp
loop
xchg
dec
push
mov
stos
fcmovu
xor
pop
divps
sub
or
mov
out
pop
xchg
sub
add
imul
dec
add
push
mov
jmp
inc
pop
out
or
outsl
bound
pop
lahf
mov
sbb
loope
jecxz
lcall
mov
aam
ss
xor
adc
adc
lock
fisubrs
pminub
daa
dec
in
je
pop
pop
xor
fists
cmp
les
xlat
mov
repnz
xchg
cltd
sub
arpl
adc
sub
cwtl
stos
cmp
mov
stos
dec
popa
sub
sub
mov
les
popl
add
out
fwait
jl
add
push
and
sub
add
mov
frstor
rolb
pop
inc
sbb
clc
jbe
aas
add
push
int3
or
xchg
jno
iret
xchg
jo
jae
inc
sbb
in
sqrtps
mov
mov
lds
inc
jb
bound
hlt
pop
add
jb
inc
arpl
rolb
movsb
mov
repz
or
mov
sub
repz
xchg
js
cld
jmp
aam
clc
xor
push
xchg
andl
loope
insb
inc
cli
rolb
cmp
inc
nop
add
sub
cmc
mov
push
cs
into
jnp
int
dec
jle
cmp
lret
adc
xorb
xor
fs
cs
gs
test
in
scas
gs
pop
jns
sub
rcrb
aas
jp
jl
jl
jne
popf
jl
or
mov
std
jbe
outsl
and
sub
ds
out
rorb
rcr
add
decb
data16
rcl
push
push
rcrb
cli
or
or
jg
xchg
lds
sarb
pop
mov
lret
hlt
dec
rclb
sarl
fcmovu
cmp
imul
daa
js
fdivrs
int
ljmp
stc
xchg
jmp
add
outsb
xchg
in
pop
and
sbb
mov
pop
int3
jmp
fldt
sub
pop
popf
dec
hlt
lret
test
jg
mov
cmp
loop
push
lea
imul
insl
insl
repz
les
xor
mov
inc
ljmp
ljmp
sbb
lea
fwait
clc
ds
pop
bound
inc
loopne
push
cmp
pushf
fdivl
sbb
adc
pop
xor
lret
add
popa
ret
je
outsb
outsb
dec
mull
shl
push
cltd
push
popa
ret
mov
mov
out
xor
cs
mov
addr16
jecxz
dec
jbe
cli
loope
sbb
jge
sub
fldenv
outsb
push
push
loope
lret
fadds
shl
jb
xchg
push
dec
push
jmp
inc
fwait
fwait
leave
fwait
mov
lcall
imul
repnz
bound
and
lock
push
push
icebp
lea
mov
out
xor
pop
int3
lahf
push
add
sbb
sbb
lret
cmp
mov
scas
scas
jo
sub
push
mov
add
mov
ja
inc
cmp
dec
dec
in
xchg
daa
pusha
lahf
int
and
xlat
mov
pop
mov
adc
shrl
sarb
call
mov
add
in
xor
mov
jg
and
pop
jns
add
cwtl
xor
push
into
jb
jge
and
and
lcall
shl
push
adc
bound
inc
outsb
sub
push
testb
stc
loope
aad
lea
mov
xor
aas
sub
and
pop
dec
out
push
cmp
and
fldt
jmp
push
in
gs
sub
sub
inc
push
fstps
and
push
jae
cmp
fistps
xor
fistps
lret
scas
iret
xchg
sbb
ret
dec
cmpsb
jnp
inc
inc
add
and
daa
pop
xchg
xor
mov
js
in
lahf
pop
mov
into
test
xor
jmp
test
jp
outsl
jmp
stos
pop
dec
mov
mov
adc
shrl
cmp
dec
imul
loop
jo
shlb
mov
out
add
div
dec
dec
dec
push
adc
jge
cmp
sub
enter
push
repz
add
adc
mov
daa
sar
inc
daa
clc
stos
dec
add
fisttpl
dec
mov
mov
add
ret
cmp
push
xchg
dec
jbe
fdivrp
sub
stos
pop
test
pushf
insb
stos
dec
stos
sahf
frstor
push
xchg
mov
aad
mov
pop
push
fistpl
sub
mov
jae
adc
xor
inc
pop
cmp
pop
fs
mov
and
jmp
xchg
movsl
add
sub
or
pop
bound
or
imul
xchg
dec
xor
cmc
das
add
das
mov
add
adc
xchg
test
add
mov
cmpl
xchg
pop
ret
jecxz
stos
or
enter
mov
cltd
and
xor
sahf
das
cmp
sbb
push
cmp
push
dec
test
mov
fnstcw
xchg
mov
ret
add
std
push
and
inc
mov
dec
lret
and
or
rorb
out
imul
lods
stos
pop
add
push
pusha
dec
inc
dec
jg
stc
fwait
jge
dec
pop
push
xor
pop
cmpsl
dec
sbb
je
or
scas
movb
insb
shl
inc
jecxz
mov
adc
mov
sub
aam
lret
out
pusha
loopne
imulb
and
data16
nop
or
inc
stc
or
loopne
mov
mov
out
mov
adc
in
dec
cmp
lcall
add
pop
fidivl
imul
daa
inc
fs
adc
cmp
in
mov
pop
pop
cmp
push
jecxz
push
jno
decb
mov
sub
iret
xor
lea
or
pop
or
jnp
jecxz
or
ss
imul
mov
mov
cmp
in
push
and
sbb
leave
jbe
daa
loopne
xchg
rol
xor
cmp
popf
xor
mov
mov
and
inc
das
adc
pop
repnz
xchg
add
and
sub
pusha
push
mov
dec
repnz
xlat
out
sbb
testb
imul
ljmp
add
aam
les
adc
add
je
fs
fldl
cmp
test
jge
dec
aam
les
adc
add
je
fs
fldl
movsb
sbb
hlt
jns
dec
aam
les
adc
add
je
fs
push
in
inc
xor
xchg
xor
in
aam
les
adc
jae
cld
jne
xor
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
add
xor
adc
xchg
sbb
dec
rcl
repnz
jp
mov
lcall
push
lret
jb
xchg
push
xchg
sbb
cmp
pop
loop
bnd
xchg
or
pop
rorl
jp
jb
fwait
or
dec
ret
cs
jge
and
inc
fstl
add
mov
shrb
sub
ljmp
xchg
ret
add
mov
push
sub
adc
mov
lds
lcall
rcrl
icebp
jmp
or
lcall
jecxz
push
aas
add
add
push
push
jmp
popf
sahf
jae
or
xchg
in
aad
mov
jbe
fildll
repnz
setg
push
ror
mov
loop
xchg
xor
in
rolb
cmp
dec
sbb
jne
out
gs
int
mov
jmp
stos
jge
pop
jo
aad
lds
push
or
push
lret
ljmp
mov
push
lret
jo
jnp
mov
inc
iret
inc
fbstp
enter
xchg
andb
shrl
pop
ret
pop
nop
add
jae
dec
flds
cs
bound
idivl
dec
repz
cmp
push
mov
dec
into
pop
decl
stc
push
fisubl
jb
orb
sbb
dec
rcrb
push
jp
mov
lcall
push
fisubl
jb
orb
sbb
dec
rcrb
push
jp
mov
mov
pusha
and
in
xchg
shl
dec
xor
cltd
stos
daa
pushf
mov
mov
inc
in
pusha
daa
mov
inc
mov
ret
pop
repz
mov
in
lret
jl
imul
mov
inc
jae
dec
fldcw
or
mov
jmp
jno
lock
jb
jecxz
lret
movsb
xor
fdivr
mov
cmp
or
push
cwtl
ljmp
add
lcall
inc
cmc
mov
xchg
dec
add
hlt
push
addr16
jns,pn
cs
lods
in
inc
cmp
cmpsb
mov
cmp
lcall
or
push
pusha
test
xchg
jns
cmp
lcall
jmp
in
je
icebp
push
out
fistps
addr16
imul
inc
mov
push
fldt
loopne
xchg
and
cmpsl
sub
sarb
or
shll
sub
sub
mov
popa
xor
jg
push
lret
fisubrl
sub
cs
sub
xchg
pop
xchg
push
cli
int3
xor
dec
mov
push
fcoml
xor
mov
aam
jb
mov
je
scas
pusha
jo
sub
or
mov
sbb
push
jl
scas
rclb
cmp
sub
rep
std
mov
sub
sbb
cs
dec
push
cltd
fs
dec
mov
in
mov
mov
lcall
adc
jecxz
fiadds
ss
push
das
stos
and
sbb
int3
jmp
aaa
es
or
leave
fwait
lcall
jbe
cmpsb
add
push
ret
dec
or
mov
scas
adc
iret
pop
push
mov
adc
out
cmpsb
shll
sub
adc
jl
adc
jge
inc
cmp
in
push
mov
popf
hlt
les
or
adc
lods
scas
rolb
add
popf
mov
xchg
inc
imul
idivb
scas
mov
loopne
in
jnp
jmp
xor
sbb
ss
cld
add
pop
xchg
cmc
data16
xor
xlat
mov
dec
sbb
add
imul
xor
loope
cmp
gs
out
jecxz
pop
in
mov
jns
inc
dec
test
ljmp
fbld
adc
movsl
push
int3
insb
lahf
test
popa
pusha
xor
rsqrtps
pop
test
fs
je
stos
mov
or
adc
and
mov
xor
mov
data16
pop
scas
pusha
dec
and
insb
cmp
dec
idivl
test
loope
mulb
jne
jb
fldl
int
jno
and
insb
movsb
and
ds
popf
mov
sub
test
pop
imul
hlt
addr16
cmp
je
stos
push
lds
xchg
adc
icebp
ljmp
ss
inc
imul
inc
add
lods
pusha
call
lods
adc
pop
mov
dec
lods
sub
pop
out
jbe
scas
and
loope
inc
mov
out
mov
or
cwtl
jp
fnstenv
in
inc
cmc
pop
je
leave
mov
cmp
cmp
int
jg
and
fistpll
xlat
lock
outsl
repz
jb
es
sub
rcrl
adc
lods
mov
inc
popa
out
nop
inc
in
dec
cmp
in
shl
cmpsb
daa
out
add
push
fsubr
jle
lret
test
sahf
or
mov
bound
mov
or
add
or
inc
xor
cli
sahf
jo
inc
cmp
adcb
test
lods
dec
mov
bound
movsl
ret
cld
and
movsb
mov
in
mov
jns
out
xchg
push
inc
dec
add
les
leave
cmp
dec
js
push
xor
out
fiadds
aam
aas
gs
dec
inc
sarl
iret
mov
jmp
add
stos
fbld
in
ret
adc
push
frstor
loopne
pop
inc
dec
shlb
ret
into
xchg
pop
xchg
jae
and
ja
in
sarl
insl
movsl
mov
mov
mov
adc
dec
jle
fildl
clc
out
mov
cmp
movsb
lret
stos
test
xchg
jno
js
add
inc
pop
ja
stos
jbe
dec
cmc
jae
scas
stos
pusha
cmp
or
imul
imul
mov
push
dec
js
mov
icebp
lcall
pop
jp
xor
shll
aad
clc
pop
push
out
mov
add
bound
jmp
jle
sbb
xor
push
jecxz
out
xchg
sbb
lcall
lock
push
fcmovne
mov
jmp
mov
gs
push
mov
mov
std
mov
call
or
shlb
jne
stc
cmpsb
inc
sti
dec
xchg
mov
push
inc
lods
dec
lahf
mul
or
add
cmp
outsl
test
aaa
push
std
jnp
mov
bnd
add
or
push
dec
jns
inc
repz
es
dec
enter
out
xchg
push
adc
adc
jae
add
dec
sbbb
arpl
or
movsl
mov
test
jl
hlt
cmp
pop
ds
jb
add
imul
aam
xchg
push
js
lahf
adc
test
xchg
stos
mov
mov
addb
cli
cltd
jl
test
fmull
aad
mov
repz
dec
xchg
sub
js
jle
imul
int3
or
xchg
cld
sti
xchg
std
cmc
jle
hlt
idivb
or
mov
mov
fcmovne
and
lret
mov
insb
testl
jb
cli
dec
inc
das
loope
and
inc
lock
xchg
pop
inc
lcall
fxch
icebp
jp
pop
lds
out
in
insb
sub
mov
leave
jmp
add
out
sub
dec
push
and
test
lcall
stos
adc
cmpsl
mov
nop
cld
sub
add
sar
pop
addl
adc
fnsave
inc
and
jp
jnp
loopne
xor
xor
js
mov
lock
insl
arpl
push
mov
or
xor
loope
and
mov
sbb
rorb
stos
pop
or
cmpsb
aaa
gs
jne
add
cmp
popa
sahf
js
int3
sarb
adc
or
fsubs
jl
cmpsl
enter
sub
or
test
push
mov
test
icebp
scas
pop
movsb
gs
inc
cmp
inc
insl
shlb
int3
jnp
jmp
xor
push
cmp
xor
icebp
jbe
xchg
mov
mov
mov
popa
xlat
imul
xor
movsb
sbb
or
pop
push
xor
es
nop
out
loop
xor
insb
aas
dec
jg
or
jmp
push
bswap
cmc
repnz
rcll
inc
push
mov
xchg
sbb
mov
push
into
xchg
in
cmc
inc
test
xor
and
adc
push
xchg
jmp
and
mov
cmp
por
push
enter
stos
xchg
mov
lds
imul
lods
inc
hlt
shll
and
jecxz
lret
jo
push
addb
fadds
les
add
xor
imul
jno
xchg
inc
fwait
jg
rorb
xlat
sub
pushf
pop
adc
lods
cwtl
adc
pop
push
mov
test
mov
bound
fcompl
loope
cltd
jmp
mov
shl
pop
testb
inc
movsb
mov
out
fsubrp
lcall
mov
add
mov
stos
or
mov
cmp
push
xor
nop
lret
adc
aas
add
sbbl
mov
inc
ljmp
xchg
dec
in
mov
add
ds
xlat
fwait
mov
dec
int3
lahf
inc
mov
sbb
lea
in
bound
mov
out
nop
xchg
push
in
test
dec
push
call
hlt
outsb
ret
pop
cltd
adc
and
pop
jbe
mov
add
int3
cmp
sbb
es
std
pushf
faddl
sub
lret
mov
stos
fists
cwtl
movsb
enter
pop
gs
pop
int3
pop
add
mov
leave
sbbl
daa
fdivr
lret
xor
in
popa
popa
dec
sbb
mov
lea
pop
xchg
cwtl
pop
inc
cmp
sub
out
push
mov
push
das
out
add
ds
mov
imul
repz
sbb
dec
les
jge
rorb
jnp
and
mov
arpl
sub
dec
sub
and
push
popa
and
out
inc
pop
mov
ror
mov
fwait
mov
or
and
ficoms
or
sbb
je
mov
adc
mov
aad
aas
add
xor
popf
fdivl
sbb
sbb
jbe
push
adc
or
mov
xor
jl
sub
sar
dec
jle
sub
and
add
leave
jle
fldl
into
cmp
test
cmp
mov
push
jae
out
into
mov
push
int3
lea
loopne
add
mov
scas
mov
jle
mov
loop
mov
in
adc
sub
cmc
pop
outsl
fstpl
or
gs
push
adc
jmp
pop
testb
insl
lds
int
xchg
add
cmp
ds
insl
jle
add
add
flds
xchg
cmpsb
jae
movsb
inc
pop
mov
cmpsb
into
adc
jge
data16
sti
xchg
mov
subl
jae
cmp
add
jecxz
in
push
xchg
pop
ja
int
mov
pushl
cmc
mov
adc
cltd
inc
sbb
inc
cmc
and
add
xchg
enter
mov
jbe
int
xor
xchg
sti
push
jo
add
push
jne
jl
adc
cltd
mov
jge
mov
popf
xchg
decb
push
push
enter
cmpsl
cmp
shlb
lods
cmp
adc
sub
js
and
jno
push
loopne
adc
es
popf
icebp
dec
loopne
in
cmpsb
xor
jb,pn
shrl
sbb
cltd
cmp
sub
jl
mov
out
clc
dec
dec
in
sbb
mov
int3
js
aas
ret
jcxz
in
pop
xchg
push
pop
daa
pushf
inc
jbe
mov
sti
nop
mov
adc
jne
fwait
jmp
pushf
inc
xor
cmpsl
adc
es
xor
pop
cmp
je
mov
stos
and
insb
mov
das
scas
pop
mov
loopne
xor
popf
mov
xchg
push
cmp
push
push
stos
sub
nop
adc
sti
clc
push
mov
mov
fstl
xor
add
or
jb
popa
daa
jnp
shll
pop
pop
jb
cmp
adc
push
fisubs
loope
test
ljmp
fldcw
ficoml
adc
jp
xchg
ds
adc
iret
ja
cli
adcl
ror
pop
subb
pop
xor
sub
mov
dec
aam
or
hlt
pop
in
mov
dec
cmp
out
mov
mov
rcrb
mov
cmovs
jnp
popf
or
fs
iret
stos
lret
pop
jle
xchg
repnz
fs
or
add
jnp
sbb
cld
pop
movsb
mov
jp
dec
dec
push
mov
cmp
cmp
sahf
and
mov
xchg
es
lock
sub
sbb
jbe
sbb
out
dec
out
pop
in
xchg
out
adc
cli
cli
push
mov
jns
jle
push
outsl
and
fwait
test
dec
jmp
jno
lahf
stc
pusha
mov
insb
dec
pop
mov
jp
notb
ja
mov
cmp
sub
lret
lods
adc
rclb
adc
clc
mov
inc
mov
push
hlt
and
push
mov
fnstenv
fidivl
mov
pop
lds
in
loopne
clc
fisubrs
rorl
mov
pop
xor
cs
sbb
push
adc
decl
inc
mov
lods
cltd
subb
pop
rcrl
les
cmp
push
mov
pop
lds
sub
push
mov
sbb
inc
pop
orb
mov
fdivrs
dec
jnp
into
adc
nop
popf
dec
mov
jmp
mov
mov
enter
sub
xchg
aas
into
jnp
orb
mulb
mov
andb
cwtl
mov
repnz
js
out
add
fadds
out
pop
jae
ljmp
insb
xchg
push
push
jp
fmuls
sub
pop
pop
mov
mov
mov
popa
xchg
dec
sbb
dec
insl
dec
inc
lret
xor
and
fistpl
xchg
mov
loope
xchg
leave
mov
cli
int
pop
add
and
imul
inc
mov
xchg
mov
mov
inc
xchg
jge
mov
mov
mov
cmovae
or
xchg
inc
int
dec
pop
xchg
cmpsl
xlat
mov
fs
aas
jne
je
mov
cmp
ds
ret
shrl
test
xchg
int3
mov
ljmp
sbb
inc
movsb
pop
test
xor
stos
sbb
shll
test
xchg
cwtl
imul
mov
jmp
xchg
push
cmp
mov
hlt
dec
adc
mov
mov
fwait
pop
fisubrs
mov
dec
nop
ljmp
xchg
and
pop
sbb
mov
sbb
icebp
sbb
or
inc
outsl
outsl
test
aas
dec
or
fstpt
jecxz
in
mov
in
pop
imul
aas
roll
jg
push
mov
xchg
shll
fildl
aam
shrl
js
psadbw
cli
sbb
cmp
in
xchg
filds
hlt
ds
nop
mov
add
mov
stos
fwait
push
inc
inc
aaa
and
fists
lahf
pop
add
adc
pop
lahf
inc
dec
aaa
add
xchg
int3
and
push
xor
testb
sbb
lea
jb
js
dec
cmp
add
das
add
scas
pop
imul
insl
inc
gs
cmp
cld
xchg
cwtl
insb
adc
push
lds
adc
fdivs
xchg
arpl
mov
sbb
dec
lock
mov
push
mov
xchg
ficoml
push
iret
pushf
mov
and
xor
mov
xchg
mov
or
sbbl
cmp
xlat
out
adc
xchg
dec
fisubrl
fwait
adc
inc
jg
mov
lcall
addr16
pop
stos
insl
shl
aas
pop
mov
das
push
cmp
and
xlat
jl
movsl
in
xchg
sub
ss
loope
out
xchg
inc
adc
add
pop
es
lret
aam
mov
xor
call
daa
subl
add
nop
pop
mov
int3
jo
imul
sub
push
ret
fdivl
dec
icebp
mov
adc
or
sbb
mov
sbb
call
lret
lret
fwait
call
sbb
add
jnp
lret
dec
add
sub
sbb
pop
mov
mov
clc
xor
jns
insl
sbb
push
lahf
or
enter
push
and
push
es
jne
mov
mov
addr16
iret
push
jp
jns
scas
ss
jbe
and
xor
mov
push
aad
add
pop
in
and
pushf
lea
xor
test
outsb
xor
xchg
xor
sub
data16
loop
xorl
adc
sbb
push
cmp
mov
clc
loop
pop
lcall
roll
cmpsl
adc
push
lahf
mov
test
aam
in
dec
js
add
inc
inc
jmp
popf
bound
cmp
push
push
fs
fimull
nop
inc
clc
sbb
fimuls
and
fsubp
icebp
enter
movsl
insl
jb
mov
mov
push
push
int
mov
leave
stc
xchg
shrl
cmp
xchg
inc
and
pop
push
pop
push
cmp
xor
adc
push
pop
pop
push
jg
mov
clc
push
in
sbb
and
dec
inc
dec
cld
cmp
push
cs
push
cwtl
mov
add
pop
dec
inc
testb
push
fbld
adc
popf
sbb
leave
add
pop
cmp
or
mov
popa
push
fbstp
jnp
and
inc
or
inc
cmp
mov
jae
ds
cwtl
cmpsb
pop
lret
lods
fs
jno
dec
mov
stos
push
inc
or
add
dec
test
mov
dec
mov
xlat
popf
adc
mov
xchg
sub
add
ds
insl
dec
push
sti
mov
mov
fisubs
fwait
mov
aaa
xchg
ja,pn
push
sub
imul
aaa
cmp
jno
movsl
int
cmp
jb
sub
xchg
repz
aam
pop
or
arpl
sub
scas
fldenv
inc
pop
loop
pusha
push
sbb
sbb
fwait
in
clc
dec
pop
add
add
sbb
xor
mov
mov
cmp
in
cmp
pop
cli
shl
not
jge
mov
outsl
jl
icebp
xor
or
lods
mov
xor
mov
out
cltd
arpl
mov
or
pusha
pusha
dec
jl
test
pop
push
push
mov
push
push
or
jecxz
xchg
dec
sahf
in
push
sub
xor
jb
mov
sar
outsl
mov
sbb
jecxz
or
xchg
aaa
jmp
push
push
jae
xchg
xchg
iret
stos
sbb
inc
test
lret
sub
lcall
jb
push
shlb
pop
cs
or
mov
sbb
iret
mov
adc
movsb
add
or
pop
sub
mov
mov
ljmp
int3
xor
add
cmp
pop
mov
fcomps
lods
push
pushf
scas
cmp
addr16
adcl
int3
ds
arpl
push
mov
clc
adc
cld
mov
fisubl
inc
popa
ret
js
aad
jae
xor
inc
gs
cmp
jmp
daa
ss
lock
fldl
mov
ss
test
aaa
inc
mov
cld
out
mov
in
xor
ds
jae
push
daa
xchg
movsb
roll
xchg
dec
hlt
sbb
sub
mov
dec
sub
fstps
push
and
fdivrs
xor
jge
push
loop
add
sbb
xchg
pop
mov
data16
jg
rorb
fwait
jge
jno
outsb
mov
pop
pop
or
cltd
adc
in
int
dec
and
push
testb
cltd
sbb
decl
and
out
test
and
lahf
xchg
push
out
orl
test
sub
sahf
mov
loope
test
mov
cli
xchg
je
fsubl
xor
std
pop
mov
xchg
jo
shl
pop
jle
cs
mov
movsb
mov
inc
test
mov
cmc
sbb
fcomip
adc
jg
and
and
and
xor
mov
jo
mov
inc
ret
movzwl
insl
data16
pop
js
leave
out
fs
dec
adc
shll
loop
sbb
push
testl
lds
push
inc
pop
cltd
inc
sbb
loope
scas
xchg
pop
sub
out
mov
cwtl
or
pop
and
aam
jns
shr
cmp
xor
ja
ja
xchg
cmc
dec
add
sbbl
jns
xorb
push
mov
or
pusha
ds
cli
les
ds
jle
dec
pop
sbb
mov
mov
movsb
imul
pop
sub
cld
sbb
imul
xchg
mov
jp
sub
leave
fmuls
cmp
mov
adc
fcompl
jle
pushf
mov
imul
sub
mov
cmp
adc
arpl
out
dec
pop
push
jl
pop
lret
jbe
pop
cmp
addr16
xlat
add
addl
xchg
test
jbe
mov
test
cltd
sbb
call
out
fisttpll
xor
lds
lret
inc
xor
lea
xchg
push
xchg
test
mov
stos
lods
enter
arpl
loop
push
inc
push
outsb
or
lret
sub
sbb
in
and
or
cvtpi2ps
cmp
scas
call
iret
nop
push
lods
sbb
pop
adc
fs
adc
push
sbb
add
push
das
mov
nop
aad
xchg
dec
cmp
int
addr16
xchg
dec
push
dec
imul
push
dec
ds
insb
pop
pop
add
mov
shrb
imulb
in
add
in
insl
push
frstor
leave
sti
cmp
or
push
shll
stos
xor
ljmp
mov
dec
rcrb
push
jp
mov
lcall
push
fisubl
jb
orb
sbb
dec
rcrb
push
jp
mov
lcall
push
fisubl
jb
orb
sbb
dec
rcrl
outsb
lock
mov
sahf
and
push
ljmp
or
mov
mov
pop
and
mov
lret
movsl
mov
aam
aas
push
jbe
pop
push
cmp
push
sbb
or
in
ljmp
mov
mov
jp
push
pop
cmp
ljmp
repz
ret
ret
mov
xchg
popf
cmpb
inc
ss
ds
adc
pop
arpl
mov
ljmp
inc
push
arpl
loope
icebp
xchg
dec
cmpsb
or
rcl
adc
add
mov
jge
push
inc
push
inc
adc
pop
inc
pop
xchg
xchg
adc
or
mov
xchg
jbe
out
xchg
mov
lds
outsl
cmp
mov
inc
ljmp
mov
cmp
test
push
movsl
mov
and
sbb
adc
cmp
mov
mov
lcall
cmovp
inc
sub
sbb
ljmp
nop
and
mov
pop
test
outsb
movsl
pop
dec
dec
cli
jns
dec
cli
cmc
or
cmp
ljmp
stos
mov
lcall
bound
push
inc
and
xor
mov
scas
fcmovnu
cld
aam
out
testl
pop
and
push
inc
dec
imul
ljmp
fld
mov
out
iret
idivb
push
pop
ds
sbb
pop
push
push
or
stos
fcomps
ret
mov
jp
push
pop
dec
dec
pop
cmp
sub
sbb
or
cli
ljmp
mov
mov
jp
dec
dec
pop
cmp
sub
sbb
or
cli
ljmp
xchg
xchg
xchg
and
cld
sbb
movsb
sarb
push
lcall
mov
mov
push
fistl
aam
arpl
jmp
out
cltd
daa
add
mov
mov
jns
pop
mov
cmp
xchg
fisubl
pop
or
outsb
lret
pop
aad
push
stc
sbb
jns
rolb
mov
mov
mov
pop
lret
lret
add
or
adc
inc
out
js
enter
mov
and
sbb
jl
xchg
lds
add
in
push
and
pusha
jbe
sub
or
jmp
jae
movsb
out
aam
or
mov
xchg
shll
pop
mov
dec
in
in
aad
inc
into
fwait
push
pop
push
push
adc
adc
rcll
and
in
inc
xchg
mov
rorb
fdivrl
and
mov
insb
push
or
jmp
push
loopne
push
outsb
mov
jmp
cmp
xlat
mov
mov
or
jg
inc
jl
mov
sbb
outsb
scas
or
cmp
in
xchg
insb
and
ss
or
jns
inc
cmp
jle
movsl
jl
lods
pop
insl
icebp
out
arpl
sahf
cli
ds
pop
movsl
dec
push
leave
inc
push
jns
fbstp
mov
push
cs
mov
lahf
rol
icebp
sti
in
mov
or
xor
xor
mov
inc
jbe
pop
popa
inc
cltd
mov
cmpsb
sub
lcall
dec
push
xor
xor
jno
rorl
sahf
mov
arpl
inc
in
inc
test
out
xchg
shrb
jl
stc
mov
mov
xchg
mov
aad
or
ret
cmc
mov
pop
cwtl
fwait
sbb
and
and
pop
sub
fstpl
sahf
ja
mov
arpl
addr16
mov
test
js
inc
mov
out
jbe
inc
inc
cmp
mov
add
in
inc
enter
in
adc
adc
lahf
insl
push
sti
jle
or
fldlg2
xor
jmp
outsl
cmpsb
fists
inc
shll
jecxz
push
ret
mov
test
lret
inc
fdivr
mov
xchg
out
fcoml
andl
lds
push
fwait
inc
xor
dec
rcl
dec
or
push
loop
push
mov
pop
mov
lock
dec
das
rorb
add
inc
or
adc
test
adc
test
jmp
dec
movsb
xor
stc
pop
push
inc
sbb
pop
jp
cmp
add
out
insl
inc
daa
xchg
cbtw
cmp
push
push
into
push
insb
xchg
or
mov
ss
mov
mov
in
sahf
popa
std
adc
lods
nop
cmp
push
add
in
mov
adcb
inc
mov
mov
imul
insb
pop
cmp
inc
xor
mov
repz
mov
subl
mov
mov
movsb
lret
mov
jmp
cli
cmp
push
push
pop
sub
in
pushf
jno
outsl
lea
bound
fs
xchg
xchg
mov
mov
insb
xor
aas
add
xchg
cmp
jp
mov
sbb
repnz
xlat
xlat
or
lret
stc
adc
int3
xchg
adc
push
fiaddl
fdivs
jmp
xchg
sbbb
lcall
jge
mov
ret
icebp
pop
stc
out
icebp
outsb
add
jge
fldcw
lea
cs
aam
arpl
push
inc
dec
cmpsl
jl
mov
lret
out
or
jo
cmp
stc
mov
enter
mov
hlt
inc
data16
or
jge
pop
test
sahf
lock
xchg
xor
adc
lock
add
fistpl
xchg
xor
out
push
push
push
jo
fsubrs
popf
sti
cld
ljmp
ret
sbb
mov
repz
pop
mov
lods
mov
dec
rorb
xchg
jmp
mov
test
ds
mov
mov
jo
fildl
cld
cli
mov
lret
mov
cmpsl
aad
mov
aam
popa
out
xchg
fisttpl
out
imul
cmp
mov
xchg
stos
and
pop
adcl
scas
fs
testl
std
repz
stos
sbb
ljmp
shlb
ja
lock
imul
loop
rorl
in
into
mov
jmp
aad
mov
call
ret
bound
sbb
and
xchg
pop
cltd
sti
sti
ret
pushf
cmp
push
or
inc
pop
pop
add
mov
cmp
cmpb
fs
mov
out
sub
mov
shlb
je
inc
pop
ret
insb
icebp
idivl
mul
mov
pop
fadd
pushf
mov
and
out
push
xchg
loopne
dec
and
pop
pop
dec
pusha
cmpsl
mov
push
lods
addl
mov
jo
in
out
jne
push
mov
scas
pusha
fldenv
arpl
test
in
shlb
push
dec
inc
out
cld
jb
divb
data16
or
or
adc
cmp
lret
enter
je
mov
inc
ret
xchg
inc
add
dec
cmp
iret
jne
movl
pop
and
sbb
inc
xchg
test
scas
inc
fisubs
adc
xchg
sarb
mov
out
jp
out
mov
pop
jno
cmp
mov
jns
sarb
pop
addb
jnp
push
daa
rclb
cltd
fadds
ret
xor
fiadds
mov
or
and
loopne
clc
dec
cmp
jmp
int
je
faddl
das
add
xchg
shlb
addr16
es
fimuls
andb
dec
jbe
cmpsb
ljmp
add
out
mov
mov
imul
adc
jmp
movsb
xchg
cmp
cmp
mov
sub
cmp
shrl
add
pop
test
mov
imul
inc
shlb
sbbl
mov
dec
push
or
das
in
shrl
rcll
fs
cmp
lods
ljmp
clc
iret
popf
push
loopne
mov
leave
lea
movsl
mov
mov
pop
and
push
mov
jnp
enter
addr16
xor
mov
pop
pop
loop
adc
sub
jecxz
ss
in
dec
mov
adc
jg
inc
mov
jmp
cltd
adc
mov
add
cld
aam
mov
push
and
outsb
mov
sahf
decb
rclb
lds
scas
mov
lcall
inc
mov
jp
notb
lds
cld
sbb
xlat
jecxz
mov
imul
mov
push
cmpsb
xchg
push
and
pop
mov
adc
shrb
mov
gs
loope
iret
out
inc
lods
xchg
fisubl
shr
in
add
int3
mov
daa
sbb
jmp
cmpsl
and
loop
mov
and
pusha
sbb
xchg
or
cli
dec
inc
mov
ret
in
in
mov
jo
fbld
xchg
fistpll
mov
cltd
loopne
imul
pop
aas
hlt
shlb
pop
rorb
arpl
arpl
fs
int
daa
das
lret
or
ja
shlb
inc
dec
cltd
cli
inc
mov
push
fisubrs
or
sti
inc
std
mov
loop
push
add
dec
push
out
scas
and
dec
and
cmp
push
lea
je
push
ja
jecxz
sbb
lahf
sub
sub
iret
test
and
repz
js
push
add
daa
dec
into
dec
inc
out
call
out
push
lods
jl
xchg
push
inc
sti
mov
shlb
out
addb
fimuls
inc
repnz
into
sub
inc
jae
mov
mov
jns
inc
mov
mov
jbe
iret
lea
in
jp
adc
inc
iret
or
xchg
dec
gs
push
loopne
in
xor
dec
in
adc
pop
and
jno
outsl
jle
cli
xorl
xor
mov
mov
in
jge
add
sub
ret
nop
jno
imul
enter
xchg
push
and
adc
pop
push
pop
inc
int
popf
mov
jae
daa
cmc
js
adcb
out
mov
aas
jne
xor
pop
outsl
and
jle
lret
test
outsb
stos
in
into
mov
lahf
xlat
pop
sbb
shrd
popa
out
dec
dec
jb
scas
or
cmc
stc
or
arpl
dec
sbb
dec
shr
int
psubw
stc
add
sub
and
cmc
lcall
push
outsl
ss
inc
pop
enter
mov
popa
mov
push
push
orb
push
adc
or
fmuls
out
cmp
arpl
or
jge
aad
in
lahf
pop
int
mov
xor
lahf
or
xor
int
lods
inc
push
insb
add
inc
adc
mov
dec
fs
icebp
mov
ret
mov
out
inc
sarb
sti
pop
ret
icebp
jg
sbb
stos
pusha
and
ret
add
stc
dec
leave
frstpm(287
mov
mov
out
je
rol
sbb
cmp
jb
or
scas
stos
call
fs
into
mov
sahf
out
pop
std
cmpsb
inc
clc
ja
or
sbb
mov
xchg
sti
or
or
les
sbb
cmpsl
popf
daa
cwtl
movsb
add
jno
sub
fdivs
xchg
imul
scas
scas
sbb
inc
leave
fwait
or
fsts
jnp
cmp
int
push
scas
pop
lret
jmp
and
pop
fiadds
lods
leave
add
sbb
mov
ja
xor
sub
mov
push
push
push
test
push
cmpsb
jno
mov
inc
sbb
lret
jmp
pop
ss
xchg
sbb
aas
rorl
and
lahf
push
pop
cmc
push
ret
sahf
and
pop
mov
xor
imul
cmpl
cmp
mov
popf
push
cwtl
jge
mov
aas
jo
cmpb
insb
pop
and
shl
mov
mov
ficomps
cmpb
repz
sub
inc
ret
int
push
add
jae
xor
jl
pusha
fadds
sbb
and
out
dec
jae
jnp
loop
mov
xchg
addr16
scas
bound
popa
bound
loop
lea
lret
in
mov
push
sub
or
test
dec
sub
jmp
pop
aad
in
jp
xchg
cmp
adc
or
and
call
inc
mov
fwait
cmp
mov
std
lods
pushf
sub
jb
mov
pop
or
and
xchg
stc
add
movsl
imul
push
dec
mov
movsb
pop
sbb
test
xor
in
test
xor
fcmove
outsb
test
jecxz
fs
push
push
xor
xlat
outsl
inc
sub
dec
mov
call
mov
push
pusha
clc
jnp
insl
xor
dec
mov
xchg
sbb
mov
dec
jl
dec
dec
add
mov
stos
cli
les
mov
sbb
mov
adc
out
add
fwait
sub
hlt
aaa
push
clc
stos
inc
xor
cmp
out
loopne
adc
inc
stos
and
cmp
bound
inc
repz
loop
cmp
mov
cmp
mov
xchg
in
push
inc
mov
sarb
mov
popa
rorl
sahf
jl
lret
push
lea
sbb
pop
dec
negl
and
cmc
fcompl
sbb
rol
or
loop
mov
aad
dec
adc
sub
cmp
dec
xor
push
cltd
mov
and
add
pop
dec
fdivrs
mov
push
lahf
add
mov
pop
js
rcl
fcomi
mov
daa
push
add
lret
mov
push
add
pop
scas
ss
dec
mov
or
and
lock
shll
sbb
pop
pop
mov
aaa
rclb
mov
dec
cmpsl
pop
negl
push
repz
ror
xchg
mov
les
cmc
jp
cli
lods
mull
movsl
jecxz
push
jbe
stc
sbb
in
inc
scas
clc
adc
push
sahf
xor
outsl
pop
cwtl
push
addr16
lods
sbb
stc
xor
inc
mov
movsb
mov
into
bound
stos
pop
rcll
xor
push
fcompl
ds
int3
pop
mov
push
das
dec
cmpb
sbb
push
movsl
push
mov
neg
sbb
in
add
push
into
dec
movsl
arpl
aaa
or
shlb
and
jmp
jmp
jo
pop
lret
in
in
dec
out
pop
xor
out
mov
xor
lods
pop
je
imul
in
mov
sub
xor
insl
sbb
xchg
nop
dec
mov
adc
imul
rcll
and
outsl
fldcw
rcrl
sub
push
loopne
pop
push
divl
jmp
addb
aaa
cmp
iret
adc
pop
pop
jp
mov
pop
mov
push
out
push
out
mov
out
pop
pop
lcall
lret
cmp
das
stos
and
leave
inc
aaa
aaa
xchg
or
call
mov
loop
mov
loop
andl
fs
add
push
lahf
inc
inc
lods
scas
or
pop
and
mov
dec
push
pop
enter
imull
push
mov
xchg
dec
push
jne
cmpsl
inc
sub
mov
in
pop
test
out
and
int3
add
clc
cli
jns
mov
ja
pop
jge
mov
sahf
cli
sbb
jno
xchg
mov
sub
aas
xor
sub
mov
repz
int
dec
and
call
shl
jnp
arpl
mov
jno
xchg
push
push
gs
test
xor
movsb
icebp
push
aad
stos
in
lods
mov
and
push
xchg
test
into
xchg
fxch
xor
mov
push
push
dec
dec
dec
in
mov
jle
imul
insb
sub
mov
sbb
out
add
loopne
movntq
or
xchg
jbe
bound
dec
mov
je
jg
daa
sub
xor
gs
adc
pop
jg
sub
popf
das
inc
aas
outsl
sar
pusha
js
and
push
jnp
sahf
push
cmpsl
pop
sub
nop
mov
jno
push
pop
iret
mov
xchg
rcrl
mov
pusha
add
stc
jecxz
js
loopne
fdivrl
push
and
fcmovnu
add
ja
test
pop
dec
rolb
jp
adc
imul
and
pop
jle
je
adc
out
cmp
insb
incb
dec
call
call
lret
mov
in
addr16
pop
sbb
or
rcll
aaa
sub
outsl
and
add
icebp
rcrl
mov
cmp
les
push
dec
int3
pushf
shll
mov
jno
ret
xsha1
cmpsb
or
push
adc
repz
xchg
inc
add
push
bound
lret
mov
out
sbb
mov
push
lods
adc
das
iret
adc
push
pop
add
nop
vsubss
les
mov
mov
mov
es
lods
sbbl
ss
testb
lcall
ja
jmp
pop
dec
test
lret
fsub
add
out
mov
dec
je
lcall
imul
fstp
xor
movsl
nop
xchg
test
in
cmp
or
xchg
enter
leave
mov
push
aaa
cmp
pushf
inc
imul
orl
cmpl
fistps
stos
mov
mov
mov
in
es
add
jae
mov
subb
and
cmp
in
push
pusha
sarl
ret
dec
ficoml
in
inc
pop
pop
mov
lret
add
imul
pop
addr16
out
add
cmp
xor
inc
pop
gs
pushf
dec
repnz
mov
jo
or
mov
icebp
ficomps
int
inc
xorb
pop
lret
sub
sub
cmp
xchg
sbb
jno
push
mov
out
lods
negb
fdivrl
addr16
addb
xchg
add
adc
push
cwtl
sarl
hlt
pop
popf
adcl
shll
jo
and
int3
insb
ret
sub
mov
sahf
jns
ds
xor
cmp
gs
aaa
jo
mov
out
sbb
ja
scas
cmpsb
flds
fisubrs
sbb
and
adc
loop
jnp
hlt
pop
xor
ret
test
mov
xchg
cmp
adc
mov
jmp
test
cld
push
aam
lret
xor
into
flds
mov
scas
cli
bound
sarb
movsl
pop
mov
insl
rorl
pop
mov
mov
loopne
loop
xlat
sahf
mov
xor
mov
adcb
pop
push
test
xchg
dec
fwait
nop
daa
push
add
je
loopne
push
mov
insb
sbb
mov
jno
mov
daa
stc
mov
aaa
div
sub
rcrl
jmp
mov
xchg
bswap
sti
std
out
ffree
je
push
ret
pop
push
cmp
dec
pop
jno
sahf
repz
stos
aam
sarl
fwait
pusha
cltd
mov
mov
scas
ss
daa
ret
pushf
repnz
and
iret
or
aas
mov
cmp
icebp
rep
or
jns
les
stos
inc
in
dec
into
imul
lock
adc
pop
mov
ds
dec
mov
leave
testb
or
out
xor
xchg
sbb
cmp
add
inc
ljmp
dec
sbb
dec
mov
loop
add
ficoms
xchg
pop
outsb
dec
cmp
lods
add
lds
icebp
cmpsb
iret
mov
movsl
mov
in
or
je
pop
xor
frstor
push
adc
mov
fbstp
xchg
mov
lahf
mov
insl
sub
sub
nop
fwait
es
add
insl
jne
adc
shlb
fwait
pop
dec
fidivl
fwait
pop
mov
push
or
les
imul
lock
cmp
pop
cmp
shlb
fistpll
roll
iret
cs
rcr
pop
scas
push
lret
pop
lcall
repnz
add
cmp
ret
jl
and
cwtl
faddp
jb
ret
cs
pop
cmpsl
aad
xchg
or
movsl
mov
in
push
ljmp
dec
sub
inc
mov
adc
in
add
mov
inc
scas
push
sbb
out
adc
push
dec
xchg
sahf
cs
sbb
faddl
ror
sbb
jl
nop
cmp
push
add
negl
mov
inc
dec
lock
addl
ret
xchg
cmp
cmp
xchg
cld
cmp
xor
sbb
lods
mov
or
lahf
lock
mov
loop
xchg
leave
mov
les
mov
lods
jbe
clc
leave
jecxz
mov
lds
cmpl
movsb
sub
dec
cltd
lea
jl
aas
decb
mov
jo
or
mov
mov
add
push
into
negl
dec
add
ficompl
mov
adc
test
inc
sbb
and
ja
daa
push
addr16
add
add
add
lret
in
sahf
bound
cmp
push
movsl
xor
nop
stos
xchg
lret
filds
popa
outsb
in
cld
sbb
clc
lret
lcall
mov
mov
jg
outsb
push
jmp
pop
nop
pop
js
dec
mov
lret
daa
dec
fadd
xor
data16
mov
stos
out
adc
ret
or
in
pop
xor
add
mov
dec
xlat
inc
jg
fbstp
dec
push
and
xor
std
jmp
add
inc
and
inc
jmp
lret
mov
inc
dec
popf
nop
or
test
mov
xlat
push
das
ret
dec
mov
dec
or
leave
aam
fwait
jge
outsb
dec
test
cmpl
sub
sar
jae
ds
push
and
mov
arpl
shrb
inc
aas
ljmp
aas
out
cmp
pop
hlt
push
addr16
stos
jbe
add
dec
sbb
xor
in
fiadds
mov
out
pop
call
jecxz
xor
aam
insb
pusha
icebp
mov
dec
adc
decb
stc
shrb
int
icebp
into
sub
fadds
imul
inc
addr16
push
je
jge
loope
movsl
fstps
jge
out
test
addr16
lret
xchg
dec
jbe
and
negl
imul
jno
sub
and
push
out
or
imul
jbe
ja
mov
fisttps
mov
cmpsb
mov
ds
add
adc
cmp
in
dec
and
call
cmc
mov
lea
int
std
mov
clc
xor
mov
bound
jnp
cmp
scas
iret
lods
rolb
dec
das
push
cli
bound
stos
mov
jp
push
pop
dec
dec
pop
cmp
sub
sbb
or
cli
ljmp
mov
mov
jp
dec
dec
pop
cmp
sub
sbb
or
cli
ljmp
mov
mov
jp
dec
dec
pop
cmp
cmp
or
sbb
ljmp
mov
mov
lcall
dec
sub
in
cmc
in
add
test
ja
lret
mov
jp
push
pop
add
sub
or
test
hlt
mov
xor
and
adc
add
mov
sub
or
test
hlt
xchg
xchg
aam
les
js
add
je
or
outsb
sub
jmp
rolb
outsl
and
xchg
push
jns
rcrb
and
cld
jno
sti
enter
or
cmp
leave
pop
mov
pop
mov
gs
in
lods
out
xchg
shl
jg
xchg
xchg
pop
cmp
add
jo
adc
and
sbb
xor
inc
sbb
test
mov
les
test
mov
cmp
dec
out
inc
add
dec
lods
sahf
in
push
xchg
orl
daa
imul
push
push
lret
ss
push
sub
les
jp
add
movsl
sub
and
jmp
mov
movsb
sbb
in
aam
les
xor
and
adc
add
je
rclb
fs
test
ljmp
xchg
lds
cmp
das
adc
jl
jne
fs
aaa
pop
add
mov
call
cltd
lods
hlt
xchg
out
pop
jne
push
aas
add
jne
or
jnp
popa
shrl
test
aam
les
adc
add
je
sub
or
test
hlt
mov
les
adc
add
je
sub
or
stos
out
and
mov
les
roll
add
cmp
loopne
pop
adc
mov
loope
push
out
cmp
sub
mov
mov
xor
mov
in
leave
or
ljmp
stc
call
ljmp
jg
mov
call
movsl
aaa
test
jnp
mov
cltd
adc
mov
sub
fistpll
and
das
add
stos
lret
dec
push
jno
sub
dec
inc
pusha
mov
push
sbb
push
pusha
xor
mov
rep
xor
ljmp
inc
mov
and
iret
pop
add
sti
mov
mov
mov
sahf
icebp
into
aam
stos
in
inc
sub
sub
push
inc
sbb
inc
cltd
inc
pop
cmpsb
xchg
fdiv
ret
lock
inc
jmp
jne
push
cltd
ret
mulb
dec
mov
imul
rcll
mov
mov
and
xor
sbb
sub
lahf
scas
add
sub
cmp
testb
inc
xorb
mov
xlat
inc
push
mov
jp
mov
outsl
fidivrl
aam
add
ja
outsl
adc
aad
js
sbb
dec
mov
sub
sbb
jns
outsb
jmp
cmp
push
add
mov
push
lods
ds
enter
nop
mov
imul
inc
or
std
pop
stc
push
sbb
imul
pop
xor
and
out
mov
stos
fcoml
testb
ljmp
or
dec
jle
pop
cli
enter
ss
or
in
mov
das
mov
sbb
les
lock
nop
es
xchg
shrb
arpl
mov
repz
rclb
pop
push
cmp
into
and
imul
dec
xchg
mov
addl
leave
pop
sub
adc
push
cmp
mov
inc
in
aas
rclb
stc
clc
pop
pop
mov
sarb
and
xchg
or
call
jae
arpl
push
mov
jle
mov
and
and
lret
mov
out
mov
xchg
addb
ss
add
lret
inc
test
fdiv
dec
push
rcl
and
shrl
pop
ret
jecxz
jae
nop
xor
sub
mov
adc
lock
add
inc
jp
nop
xchg
or
fsts
fisubrl
lods
pop
sbb
inc
or
dec
or
push
add
inc
xor
dec
ret
cs
ret
jl
jmp
test
add
inc
or
lods
js
mov
jle
leave
imul
pop
pusha
ret
cmp
int3
push
loope
adc
adc
and
mov
or
dec
inc
lret
aaa
shll
ja
dec
fcompl
bound
pop
mov
adc
jge
lods
gs
bound
jl
insl
pop
loope
mov
push
lods
fisubrl
sub
adc
test
jg
xchg
mov
pop
or
add
aad
pop
test
imul
mov
mov
inc
fsubrp
ret
stos
add
bound
pop
cli
mov
aam
and
add
test
sbb
rcll
pop
push
xor
push
daa
or
jns
sbb
jb
jmp
push
adc
jp
pop
hlt
test
cmpsb
pop
pop
test
test
mov
lods
sub
sbb
imul
cli
push
mov
jns
test
stos
into
aam
out
mov
inc
ds
pop
pop
arpl
repz
nop
mov
mov
faddl
push
pop
scas
in
mov
pop
or
cld
xor
pop
inc
jnp
sbb
jecxz
dec
mov
test
pop
sbb
scas
lds
orl
cmp
jnp
test
test
enter
push
mov
test
xor
lods
stc
pop
ss
pop
out
jno
cmpsb
pop
test
shll
insb
mov
mov
mov
dec
popa
inc
dec
push
mov
cmpsb
test
xor
roll
pop
xorb
push
in
push
js
sub
lods
imul
push
pusha
pusha
mov
rcl
shrb
sbb
xor
xchg
cwtl
xor
fisttps
inc
pop
add
sbb
mov
add
arpl
loop
adc
or
push
outsl
push
jmp
fwait
rcl
int3
pop
adc
sub
es
pop
mov
das
xchg
dec
or
inc
sarl
mov
xchg
daa
out
in
clc
sahf
lret
sbb
xchg
push
sub
movsl
in
outsl
in
pop
std
mov
dec
add
push
cmp
mov
sarb
cwtl
ss
pop
jne
fistpll
fdivrs
and
imul
cmp
adc
jns
jns
in
sahf
leave
and
es
call
adc
mov
loope
cmpsl
jo
sub
jbe
insl
or
in
pop
cld
inc
cmp
jg
and
adc
sarb
jp
sub
insl
in
out
or
xchg
cli
shll
or
imul
jno
add
pop
movsl
div
mov
daa
rcrl
xchg
mov
in
mov
hlt
sahf
orl
pop
xor
das
roll
sub
sub
addl
cmpsl
inc
xor
shll
fwait
cmp
jmp
inc
cli
jbe
or
mov
and
dec
xchg
aam
mov
pop
push
dec
outsl
jns
popf
movsl
dec
push
inc
int
stc
sub
push
and
sbb
push
cmp
add
xlat
repz
mov
adc
cs
pop
test
fisttpl
ljmp
mov
cmp
jmp
mov
lret
or
cs
sbb
sub
jb
xor
inc
jno
cmp
xchg
inc
mov
in
loopne
fsubrs
out
sub
leave
lock
gs
outsl
adc
in
pop
cmp
enter
hlt
lods
cld
punpcklbw
mov
push
test
in
pop
push
ss
sbb
and
fimuls
add
mull
jmp
out
sarl
jmp
stos
adc
imul
into
imul
lret
daa
jp
dec
mov
push
test
jge
movsb
std
and
pusha
imul
cmp
movsl
jge
ja
ljmp
es
ds
int3
enter
sbb
cld
jge
or
arpl
sub
in
ja
shlb
ror
stos
insb
dec
lret
outsb
out
popf
xor
jge
mov
das
mov
loope
sub
ja
mov
test
rcrb
mov
sub
call
push
jmp
pop
mov
loope
sbb
rcr
inc
mov
outsb
out
jge
notb
mov
inc
xor
cltd
je
sbb
or
inc
or
popf
rorl
or
add
xchg
rcrl
sub
push
push
inc
inc
testl
data16
sahf
xchg
adc
mov
xor
push
hlt
insb
add
sbb
arpl
cmpl
pop
push
sarl
mov
xlat
xor
sbb
pushf
xchg
loope
cmc
sahf
mov
ret
mov
mov
jg
add
push
cmp
cltd
and
aas
cwtl
or
scas
scas
pusha
lods
jbe
clc
mov
fistl
or
fs
sub
scas
xorl
mov
mov
lods
nop
ds
cmp
test
dec
daa
test
ret
popa
xchg
cmp
adc
outsb
xor
push
sar
fwait
xchg
inc
std
call
mov
aaa
popa
test
fs
lds
dec
add
cmpsb
arpl
cmpsl
inc
jbe
fcoms
repz
mov
daa
js
aas
lret
add
movsb
mov
out
pop
pop
cltd
ss
add
daa
xchg
idivb
inc
shr
loop
repnz
push
or
icebp
test
mov
aam
adc
push
inc
pop
or
xchg
cmp
xor
test
test
inc
mov
dec
mov
out
pushf
jecxz
cwtl
lret
or
cltd
stos
mov
sub
sbb
or
mov
popf
scas
mov
pop
adc
xchg
dec
shlb
mov
jns
or
xchg
push
data16
pop
fidivl
cwtl
jne
daa
adc
in
mov
fwait
push
or
jmp
dec
fadd
lods
cmp
jmp
fbstp
inc
jae
jne
xlat
sbb
leave
jecxz
pop
mov
push
push
inc
sbb
cli
addb
cmpsl
push
xchg
shl
loopne
fldenv
stos
fldenv
mov
jmp
mov
insl
add
test
xchg
jnp
cld
out
je
xchg
roll
dec
dec
xchg
cmpsl
mov
lahf
cs
dec
ja
and
push
push
xchg
add
xchg
ds
loop
js
jecxz
cmp
sub
jle
adc
jb
dec
lods
xchg
mov
jbe
push
sbb
sbb
out
pop
mov
push
addr16
adc
cs
sub
lea
imul
xor
fdivs
nop
mov
mov
xor
in
mov
inc
mov
adc
imul
enter
popf
gs
loop
pop
cmpsl
xor
and
out
sahf
push
pop
and
xchg
enter
test
sub
sarl
push
or
mov
or
push
add
jecxz
mov
mov
pushf
mul
push
mov
dec
outsb
jle
aaa
mov
dec
dec
nop
lods
or
cmpsl
sbb
jae
ret
je
in
pushf
mov
repz
pop
add
stc
jle
inc
arpl
or
lcall
lods
mov
mov
xchg
dec
xchg
or
add
dec
mov
dec
es
aaa
repz
ljmp
inc
xchg
xor
dec
repnz
push
into
fmuls
jmp
lret
jno
lret
cmp
fprem1
jmp
mulb
in
lods
xchg
sub
add
adc
mov
lock
xor
ljmp
inc
sti
in
xor
ja
ja
jae
add
cmp
repnz
add
loope
push
iret
lods
shr
in
shll
dec
push
js
jle
mov
mov
jbe
in
mov
mov
fsubrl
inc
xchg
sub
or
rorl
add
aad
fdiv
add
or
test
and
loop
or
jle
aam
in
dec
and
xchg
ret
dec
or
out
outsb
fdivrs
es
push
or
sbb
stc
push
cmp
lahf
and
fadds
lret
push
push
adc
mov
cmpsb
aas
ljmp
jo
mov
mov
cwtl
or
xor
popa
sub
add
dec
ret
cmp
mov
pop
mov
into
xor
sub
push
sbb
push
mov
inc
das
sbb
inc
in
inc
cmc
pop
jecxz
int
adcl
and
mov
mov
or
sub
lret
je
fwait
mov
or
sbb
sbb
aaa
sbb
dec
push
pop
sbb
fisubrl
mov
loopne
mov
mov
les
sbb
mov
pop
std
push
sub
sub
mov
xchg
mov
fmull
ss
lcall
je
xchg
and
popf
outsb
inc
dec
popa
cmpsb
shrl
jmp
push
mov
cmc
ljmp
jae
mov
idiv
stos
pushf
bnd
inc
outsl
data16
ja
ret
ret
and
rcrb
or
jle
jae
das
fucomp
mov
adc
adc
add
xchg
inc
jecxz
popa
cli
or
repnz
ret
das
mov
fdivrs
cld
daa
jbe
lds
aaa
dec
mov
jo
lods
pop
sbb
int
out
mov
aam
fldenv
fcmovnbe
push
lods
jb
cmp
mov
lds
or
addr16
sarb
pop
in
push
repnz
ret
inc
jg
je
or
xor
add
scas
xchg
imul
mov
adc
rorl
push
inc
push
adc
and
icebp
or
lods
dec
push
test
sti
fdivs
mov
mov
sbb
daa
push
test
repz
cld
stos
sbb
jns
add
iret
push
mov
cwtl
sbb
test
lret
cmp
or
out
mov
or
imul
and
aam
loop
cmp
adcb
dec
mov
roll
or
adcl
gs
adc
shll
pop
clc
into
push
mov
push
adcl
shll
jl
xlat
ds
mov
mov
sub
mov
test
leave
push
jbe
je
push
mov
pop
and
das
dec
js
cwtl
in
inc
je
call
div
loop
cmp
or
ss
mov
push
push
sbb
call
and
jns
xor
xchg
sbb
push
ror
dec
push
and
sbb
rcl
test
cld
ret
outsb
mov
rcl
ret
mov
lcall
aad
mov
inc
inc
jns
dec
enter
clc
into
icebp
fldcw
das
sbb
outsl
leave
sti
aaa
push
mov
sub
nop
pop
in
inc
bswap
daa
add
pop
cmp
lcall
add
adc
fwait
cmp
out
test
pop
dec
pop
or
sub
cmpsb
clc
adc
js
jbe
adc
adc
sbb
out
fnstsw
dec
lcall
xor
xchg
dec
std
xor
ficoms
mov
add
andb
or
ss
push
or
dec
xchg
repnz
jo
jne
mov
add
in
aas
pop
sbb
or
jne
adc
xchg
pop
jb
and
jp
add
dec
lret
cmpb
jno
ret
xor
push
push
je
adcb
mov
pusha
mov
xchg
sbb
xor
rcl
dec
testb
stc
fidivl
push
pop
jno
movsl
lahf
or
and
les
fwait
mov
mov
sub
dec
pop
jns
add
sub
mov
adc
or
sbb
and
ds
inc
mov
jmp
lcall
xor
and
call
pop
outsl
xchg
inc
jle
les
mov
shll
call
add
ret
das
add
cmp
pop
cmpsb
dec
scas
int3
les
pop
loopne
dec
xchg
popa
dec
pop
mov
dec
out
les
push
pop
push
in
mov
mov
add
repnz
cli
into
and
xor
out
pop
xor
lods
imul
sbb
nop
rcll
or
cmpsl
push
or
mov
sub
and
cmpl
xor
shll
sbb
and
sbbb
jle
or
test
repnz
inc
rcll
popf
or
ret
adc
frstor
bound
pop
psraw
fsubp
sbb
jnp
faddl
and
shrb
and
stc
ja
lock
lret
xchg
pop
cli
mov
adc
pushf
lea
add
das
dec
jg
fdiv
inc
mov
fisttps
mov
imul
add
addl
or
gs
hlt
inc
push
xchg
xchg
cmp
in
add
leave
out
fs
or
lock
in
popf
or
push
cld
adc
xchg
in
shrb
cmp
mov
cmpsb
xor
adc
inc
pop
movsb
fadds
outsb
lods
add
inc
mov
mov
nop
popf
insb
inc
cwtl
sub
jg
dec
bnd
jmp
lods
inc
jnp
jno
jmp
into
ficoms
stos
addl
and
mov
cmp
dec
xchg
mov
scas
mov
jp
pushf
and
or
pop
sub
push
std
jg
xor
mov
mov
stos
mov
xchg
jnp
push
cmp
out
dec
int3
mov
pop
es
mov
cmp
mov
adc
pusha
shr
jl
or
mov
dec
sub
repz
dec
pop
les
sbb
sub
pop
push
out
loop
add
sahf
dec
mov
aam
mov
inc
shrb
push
adc
mov
mov
fiaddl
pop
and
cmc
insl
mov
dec
fnstcw
mov
cmp
addr16
icebp
pushf
adc
and
lods
xor
gs
dec
mov
pop
sbb
mov
ficoms
and
ficoms
push
lcall
mov
push
negl
inc
inc
cmc
inc
push
pop
fwait
iret
ficomps
xlat
adc
pop
cs
xchg
cld
lock
outsb
dec
into
push
sbb
mov
pop
leave
stos
xlat
insb
aas
mov
xlat
in
int
stc
ljmp
and
mov
sub
data16
cmp
jge
xchg
sub
stos
pop
push
xor
adc
jo
add
in
mov
mov
test
testl
int3
imul
cmpsb
test
push
mov
lods
pop
mov
lds
mov
icebp
mov
clc
pushf
sarl
mov
mov
jns
test
and
pop
andl
or
in
shll
jnp
sbb
cmp
int3
sub
in
sbb
xchg
cmp
and
push
add
daa
pop
es
pop
push
cmp
jmp
dec
mov
cmp
jg
mov
mov
lods
outsb
xor
adc
mov
clc
push
sbb
repz
xlat
mov
lods
xorl
sbb
cmpb
push
das
aam
incl
dec
xor
orb
jns
lock
fcmovbe
fadd
adc
jno
jl
lcall
push
mov
out
cmp
or
jle
mov
pop
dec
xor
cmp
cs
repz
inc
lock
nop
jo
pop
cltd
adc
mov
pop
mov
imul
add
inc
lret
inc
sub
cwtl
sti
pop
pop
movsl
std
cwtl
lahf
push
pop
push
inc
rol
xchg
fildll
sbb
xchg
mov
mov
out
dec
repz
mov
addr16
test
inc
sub
cmp
dec
jg
lahf
repnz
outsl
jnp
xchg
xor
adc
sbb
jnp
xchg
testb
loopne
push
push
fldenv
je
mov
sbb
insl
fucom
test
mov
adc
loop
or
adc
jno
addr16
enter
inc
mov
sti
std
lret
xor
clc
popa
aam
int3
pop
add
xchg
sbb
mov
outsl
dec
repz
jns
subb
and
add
mov
ficomps
inc
sbb
movsb
and
fimuls
cli
xor
je
cmp
testl
cmp
jmp
jnp
fidivs
mov
xor
xchg
mov
sahf
into
push
or
mov
sbb
xchg
mov
lcall
add
js
shr
push
mov
lcall
idivb
xor
in
enter
xor
or
out
push
sub
es
mov
pop
div
pop
xlat
mov
sub
mov
cmpsl
insb
scas
sbb
lret
insl
inc
mov
pop
xchg
push
sbb
xchg
mov
add
sbb
push
cmp
sub
mov
fdivs
inc
jge
dec
sbb
and
ds
sub
xchg
ror
ds
lahf
lea
jle
dec
loop
out
movsb
cld
mov
dec
into
cmpl
divl
stos
jne
dec
mov
cmc
iret
pop
sbb
inc
mov
or
idivb
pop
lret
jg
aas
rorl
ss
xchg
xchg
xor
push
pop
add
jg
mov
sub
data16
jnp
inc
push
mov
pushw
out
stc
insl
pop
inc
xor
xchg
jecxz
sub
test
xor
xor
lock
addr16
out
scas
pop
out
rol
mov
adc
roll
mov
insb
or
inc
inc
loop
js
cs
push
xor
int
fidivs
adc
mov
pop
lock
and
out
mov
cli
pushf
inc
or
dec
fstps
test
jae
imulb
addr16
fwait
sbb
addr16
mov
fs
inc
loopne
dec
or
or
and
xchg
mov
pop
pop
mov
push
arpl
pushf
dec
mov
add
mov
sbb
pop
cli
dec
jb
xor
push
dec
fneni(8087
in
std
jle
repz
inc
enter
test
mov
jl
xor
loopne
push
push
push
fcmovnbe
fmuls
pop
repz
cld
shll
data16
jp
push
jp
mov
mov
sub
cli
loopne
dec
jae
ds
ja
gs
dec
and
push
out
ss
ret
xchg
test
lods
loop
lea
jecxz
mov
mov
test
int3
cmp
movsb
jmp
mov
cmp
out
dec
xor
dec
or
scas
cld
cmp
cwtl
or
lcall
loope
imul
xchg
mov
lret
in
aam
les
adc
add
je
sub
or
test
hlt
mov
les
adc
add
je
sub
or
test
je
in
aam
inc
mov
and
adc
add
je
sub
or
test
hlt
mov
les
mov
mov
aad
in
cmc
aas
es
ss
push
movhps
or
sub
push
mov
xchg
jae
iret
aas
es
ss
push
movhps
outsl
jbe
inc
dec
push
mov
xchg
neg
test
aas
es
ss
push
movhps
outsl
jbe
inc
dec
push
mov
loop
xchg
jmp
cmpsb
dec
es
imul
mov
les
cmp
jb
fs
into
mov
jo
mov
pusha
bnd
mov
dec
and
xchg
test
out
sbb
jle
and
icebp
inc
jp
jmp
cmpsl
xchg
push
adc
popl
imul
fs
cmp
pop
aas
xor
mov
lret
pop
addr16
jbe
leave
dec
test
jle
jo
scas
mov
or
cmp
stos
leave
lcall
arpl
pop
cmpsl
loope
jns
push
scas
imulb
and
iret
pop
add
lock
push
adc
sti
sti
xor
clc
shr
mov
xchg
in
sbb
mov
xlat
cld
es
ss
push
movhps
outsl
jbe
inc
dec
push
mov
xchg
neg
iret
mov
pop
outsl
dec
jg
or
jbe
or
push
iret
ret
lret
out
lret
xchg
xchg
dec
es
xor
push
dec
sbb
and
sbb
or
fmulp
ret
loop
stc
or
movsl
xchg
das
gs
outsb
push
cmp
jbe
inc
dec
push
mov
xchg
neg
iret
aas
es
ss
push
movhps
outsl
jbe
inc
dec
push
mov
xchg
neg
iret
aas
es
jg
mov
push
scas
stos
popf
lret
rclb
mov
adc
jle
movsb
sub
stos
sar
addb
push
std
js
cltd
push
nop
xchg
sbb
es
sub
mov
jmp
pusha
jbe
popf
pop
xchg
adc
shll
mov
cmp
insl
adc
pop
sub
ljmp
mov
adc
inc
jp
es
ficoms
cmp
loope
cltd
fadds
es
into
iret
adc
aam
sbb
inc
mov
push
mov
or
lods
sbb
jge
fidivrs
jb
mov
mov
sar
int
xor
negl
sbb
pop
les
cli
jl
or
mov
iret
ljmp
outsl
out
dec
cmp
sub
repnz
in
dec
sarb
dec
sbb
ds
jb,pn
notb
nop
inc
dec
aaa
push
mov
cmp
and
out
push
jp
xor
movsl
je
xchg
sub
xor
sbb
loope
loopne
bound
xchg
xor
or
cltd
leave
dec
add
icebp
push
in
adc
mov
cltd
popa
in
mov
jne
fwait
stos
sbb
fsubrp
ss
mov
jae
or
ror
orl
nop
dec
cmpsb
jge
test
or
adc
dec
outsl
jns
scas
arpl
out
jnp
push
or
cmp
fcom
jne
cmp
mov
cmp
aad
aas
dec
mov
adc
adc
mov
cwtl
std
push
sbb
adc
outsb
jbe
lss
movsl
xor
popa
dec
inc
push
mov
dec
sbb
xchg
cmp
cld
xrelease
adc
imul
mov
movsl
and
sub
xlat
fucom
xchg
fidivs
jecxz
mov
xchg
xchg
jne
xchg
cwtl
or
jo
adc
push
leave
xchg
int3
jg
jmp
inc
push
es
mov
out
stos
mov
ljmp
aad
add
in
inc
int
adc
enter
pop
jl
sub
jb
imul
orb
jns
xchg
xchg
push
es
mov
adc
test
adc
dec
bound
pop
jae
inc
mov
out
mov
jl
mov
mov
sub
cmp
cmp
push
jbe
mov
notl
and
pop
push
mov
notb
data16
divl
mov
cwtl
fsubrp
xor
adc
mov
jne
cs
lds
popf
les
fidivrl
ja
jbe
xor
mov
xchg
ds
pop
mov
xchg
and
fstps
test
xchg
ljmp
sub
pushf
mov
test
xlat
icebp
rolb
xchg
das
hlt
push
sub
in
lret
xor
adc
repz
mov
or
jno
sbb
push
pushf
in
and
nop
mov
adc
jae
or
mov
push
enter
adc
mov
xchg
jecxz
xchg
mov
add
or
inc
sti
test
or
adc
call
jge
lods
jmp
loopw
jnp
jmp
push
pop
xchg
mov
inc
fmuls
in
mov
cwtl
gs
push
jbe
das
inc
mov
jge
notb
fildl
test
inc
cmp
add
jecxz
xchg
push
icebp
icebp
rcll
fistl
popf
bndldx
adc
cmp
jns
imul
jle
push
jns
cmc
xor
jle
sbb
enter
ss
fwait
lahf
xchg
flds
adcl
xorb
test
ret
stos
fs
mov
xchg
add
cmp
loopne
jnp
pop
sbb
das
pop
imul
icebp
cmp
aas
rcr
fs
adc
and
xor
insb
cmpsl
jecxz
bound
ds
jge
xchg
cmpsb
test
mov
adc
pop
mov
sti
and
lret
adc
jnp
ret
push
call
mov
jge
mov
dec
out
adc
xchg
cmp
and
into
adc
andl
lret
sub
inc
test
aam
fcoml
ret
stos
cmp
xor
jbe
mov
das
daa
and
pop
dec
inc
xchg
push
hlt
out
shll
shr
pop
sub
mov
repz
adcb
fsubp
stos
pop
sbb
jnp
shll
sub
notl
jae
xchg
fistps
add
cli
outsb
hlt
mov
leave
mov
and
push
xor
and
xor
jns
decb
in
in
fs
lods
cmp
in
repz
shr
popf
out
orb
lds
dec
repnz
in
pushf
cmp
mov
xchg
incb
mov
insb
pop
xor
push
jnp
aaa
ljmp
jne
mov
adc
xchg
push
les
or
ror
imul
push
cmpsb
inc
ficoml
inc
test
jb
inc
mov
loop
scas
pop
jle
xor
hlt
mov
gs
sarb
sti
outsl
aad
mov
mov
shl
cmp
dec
xchg
sub
xchg
ja
fdivrl
inc
xchg
and
mov
add
or
clc
or
in
imul
mov
mov
out
sbb
stc
cmp
in
pop
or
jl
mov
or
push
pop
sbb
pop
lfs
imul
pop
lahf
imul
pop
popw
outsb
push
inc
popf
insb
jp
pushf
out
inc
pop
jmp
xor
fidivrs
test
sub
and
sbb
sbbl
shll
sub
int3
inc
out
adc
stc
fcom
pop
aaa
loop
test
dec
sbb
sub
sbb
mov
xchg
xchg
push
mov
push
or
cs
outsl
orb
mov
dec
mov
ret
bound
sub
sub
or
push
or
cmp
lods
jnp
sub
insb
inc
je
in
es
inc
addr16
push
stos
cltd
mov
arpl
neg
lcall
add
push
paddq
or
popf
dec
addr16
ljmp
aam
sbb
pop
mov
pop
push
mov
test
sub
into
sbb
fldt
xor
loope
jmp
sbb
mov
push
ja
mov
jecxz
push
xchg
dec
jbe
arpl
or
sub
stc
in
dec
sub
pop
pusha
sub
addr16
in
or
mov
dec
std
sahf
pop
mov
cmp
arpl
stos
fidivs
mov
xchg
ja
outsb
sub
mov
sarb
sbb
rclb
test
test
pop
addl
push
push
stos
jp
out
loop
sub
xor
in
dec
test
int
push
cmp
or
mov
lods
cmp
movsb
mov
iret
or
ret
iret
pop
nop
push
cli
imul
push
push
and
push
mov
mov
and
nop
jmp
jns
adc
sub
or
sub
mov
add
add
sub
sub
and
mov
push
jp
add
add
mov
outsb
adc
daa
and
sbbl
test
movsb
dec
sbb
cwtl
add
daa
dec
pop
and
push
cmpsl
pop
orb
xchg
in
pop
cmpsl
sbb
push
adc
dec
ret
in
fsubl
jo
ret
jb
test
mov
hlt
sbb
or
push
sub
cmp
adc
cmp
std
shlb
or
add
aad
or
inc
sub
push
mov
add
lds
repnz
outsb
mov
incb
out
icebp
repz
xor
clc
orl
mov
jne
add
aas
sbb
aas
cmp
mov
mov
jmp
push
pop
daa
scas
or
mov
inc
lcall
mov
cmp
ljmp
cmp
mov
jmp
push
cmpsb
mov
fistl
jle
loope
stos
fdiv
idivb
xchg
cmp
and
flds
scas
add
jl
sbb
adc
test
mov
cltd
fs
jbe
divb
cmp
mov
fs
lahf
xor
call
clc
iret
sub
jb
repz
movsb
lret
ds
xchg
xor
insb
leave
orb
and
aaa
call
cmp
adc
jae
jns
pop
push
repnz
nop
push
mov
movaps
stos
and
inc
sub
xchg
cmpsb
push
aad
push
mov
push
fistpll
mov
in
sub
xchg
les
mov
lcall
shrl
adc
fwait
cmp
lea
jmp
shlb
push
xor
scas
xchg
adc
ficoml
sub
mov
loope
repz
dec
jp
jecxz
ljmp
movsb
fdivr
push
and
pop
jb
push
mov
jo
sub
and
aaa
pusha
outsl
adc
xor
adcb
pop
lret
cmpsl
movsl
shll
fldcw
or
jo
frstor
jmp
enter
xor
push
push
sub
scas
out
push
arpl
loope
jge
in
loope
dec
push
repnz
jbe
mov
sbb
mov
ja
jno
jecxz
sbb
xchg
ljmp
es
test
xchg
xchg
adc
insl
and
or
inc
fabs
test
jp
mov
sub
jg
iret
jle
imul
inc
imul
inc
into
xchg
sbb
or
push
sub
sub
and
sub
sub
cwtl
int
aas
hlt
pop
sub
dec
add
xor
jle
xor
cwtl
push
out
sar
scas
and
out
fisubs
inc
dec
imul
fmull
sbb
push
xor
sub
int
insl
cmpsl
stos
push
mov
xorl
push
lods
xchg
adc
and
gs
adc
data16
icebp
and
add
ret
cmc
pop
inc
scas
mov
lahf
xchg
mov
loope
mov
in
sub
push
jge
jnp
push
sahf
lret
xchg
out
faddp
jmp
push
inc
or
add
fmuls
fdivr
pop
xlat
xor
sahf
int3
pop
shlb
adc
push
xor
and
mov
pop
inc
nop
and
icebp
repnz
stos
and
mov
addr16
mov
sbb
std
call
jmp
pusha
pop
fsubrs
jns
mov
and
cmp
sub
mov
out
or
mov
or
addr16
cmp
in
xchg
lret
bswap
xchg
jno
adc
push
xor
mov
fwait
std
jb
jle
pop
mov
pop
lock
fiadds
sbb
xor
aam
aas
insb
daa
pop
nop/reserved
jo
hlt
and
xchg
mov
dec
test
js
mov
repnz
mov
add
cld
shrb
enter
xlat
sub
inc
lret
jae
add
inc
scas
ret
jge
cmpsb
jo
notb
sub
jmp
leave
inc
pop
cli
shll
xchg
call
cltd
jns
imul
icebp
xchg
iret
test
push
xor
hlt
jnp
fidivl
imul
sub
daa
dec
daa
outsb
add
mov
jp
in
out
pop
les
cli
sti
cmc
fildl
or
in
mov
test
pop
lret
fbld
and
fidivrl
dec
cmp
cmc
and
sub
fwait
push
imul
std
fsub
sub
sub
xor
sub
sub
popa
mov
jp
fcompl
pop
repnz
aad
mov
out
mov
xchg
pop
mov
mov
add
xor
jmp
xchg
pop
lahf
iret
xor
fs
mov
sbb
pop
sbb
cmp
add
adc
adc
or
jae
sbb
xchg
sub
addr16
mov
dec
data16
sub
mov
call
ss
xor
sub
out
inc
loop
xchg
jne
arpl
jmp
fnstenv
out
hlt
pusha
push
gs
in
mov
pop
mov
add
aad
out
dec
and
arpl
fs
dec
incb
xor
add
outsb
ss
fsubl
nop
and
jb
ret
ds
jp
and
mov
xchg
adc
mov
insb
test
mov
out
xchg
xor
pop
push
jp
cmpsl
icebp
sub
enter
decl
out
stc
xchg
mov
pusha
cwtl
cmp
mov
push
rorb
test
adc
xor
mov
push
jae
iret
push
xor
lock
mov
pcmpgtd
jge
in
popa
cmp
dec
mov
gs
or
adc
adc
mov
xor
mov
fistps
nop
clc
xlat
cmp
sub
cmp
fmul
push
mov
jecxz
mov
xchg
nop
aaa
xor
sub
dec
call
mov
test
sbb
mull
and
lea
test
dec
sub
mov
pop
leave
arpl
mov
jnp
xor
lods
or
jo
mov
rorl
fstl
and
adc
filds
aam
in
jmp
adc
test
push
mov
dec
add
mov
xchg
je
rol
int
inc
loopne
xchg
sub
mov
into
in
add
xchg
insl
dec
adc
das
xchg
jecxz
xchg
test
lret
in
ja
cmp
push
clc
mov
stos
mov
push
inc
not
adc
sbb
push
imul
push
lods
push
mov
push
inc
jnp
push
or
and
dec
lret
adc
insl
das
add
add
xchg
add
pop
insl
fidivrs
js
mov
jl
inc
jmp
cmp
push
jecxz
add
jbe
add
inc
cmp
jb
jb
sub
cmp
std
dec
out
mov
mov
loopne
shl
aas
inc
mull
cmp
pop
aam
push
mov
add
out
inc
pop
lods
popf
mov
pop
mull
jl
mov
and
pop
jmp
xchg
pop
adc
xchg
xor
lds
mov
add
sahf
xlat
out
ret
fbld
cmp
add
mov
mov
pop
lahf
scas
mov
ds
fdivrl
jo
dec
push
cltd
leave
repz
cli
adc
push
sbb
call
pop
rorb
ffreep
rcll
or
test
push
add
mov
sub
cld
lods
ds
xchg
push
imul
aas
orb
push
bound
mov
daa
stos
mov
and
add
movsl
jb
fwait
mov
out
dec
xor
iret
mov
cmc
pop
sub
add
pop
int
add
jle
push
mov
push
xor
addl
inc
pop
mov
test
mov
pop
jb
adc
sar
loop
int3
mov
mov
sbb
roll
test
lcall
fisttpl
stos
sbb
fstpt
pop
xchg
shll
mov
push
ror
dec
mov
rcr
lock
dec
pop
adc
test
sbb
sbb
jae
cmp
dec
mov
cmp
mov
call
jl
rcll
sahf
rol
in
lcall
inc
fistps
jno
scas
js
ds
sahf
xor
popf
test
cmp
loopne
popa
fnstenv
ds
cmp
je
push
jnp
add
prefetcht2
pop
jb
pop
mov
mov
pop
sub
and
adc
inc
pop
mov
sub
fsts
call
fxch
andb
dec
dec
pop
xchg
fs
mov
push
mov
push
mov
jbe
fisubrl
mov
nop
mov
mov
out
test
xchg
xor
fcmove
xor
sub
lock
jg
sbb
andl
rorb
dec
xor
sub
bound
jmp
rolb
adc
rcrb
jne
lcall
lret
xor
jmp
lea
mov
fistpll
lea
leave
adc
xor
inc
adc
lahf
enter
xchg
jle
fsubrl
lret
cmp
stos
adc
subl
stos
or
or
pop
jmp
xor
lds
cmpsb
fisubrs
pop
test
push
fucomi
sbb
arpl
jge
out
xor
out
ljmp
push
rolb
mov
mov
and
into
push
pop
adc
xchg
das
lods
ret
insb
add
mov
push
cmpsb
mov
ds
add
mov
jecxz
pop
adc
pop
aas
test
xchg
xor
lahf
mov
push
subb
mov
jns
insl
dec
add
add
repnz
in
mov
xchg
mov
dec
cli
test
shlb
pop
cmc
cltd
xchg
mov
push
hlt
pop
arpl
out
call
adc
lcall
or
dec
pop
loop
add
ss
dec
xchg
lcall
shll
imul
pop
sub
jl
fnstcw
out
mov
inc
and
xor
inc
in
sti
enter
lods
jno
ficompl
sub
les
cmpsl
lods
xlat
ss
mov
cwtl
push
pop
pop
and
xor
and
push
inc
adc
in
outsb
ja
rclb
and
pop
in
clc
pop
iret
pop
mov
sub
mov
lahf
enter
adc
incb
xorb
in
lret
dec
mov
scas
and
xlat
mov
cli
and
lods
pop
test
fwait
jle
adc
jmp
push
aad
repz
or
mov
imull
pop
or
imul
seta
sub
cwtl
push
push
cmc
sbb
mov
rorb
dec
daa
mov
jno
icebp
cltd
dec
rcrl
addr16
ret
shrb
sub
add
or
sub
mov
mov
lcall
mov
stc
les
mov
pop
js
fisubrs
stos
mov
dec
out
adc
jns
jb
xchg
shl
sbb
mov
mov
test
test
inc
fwait
cmpsb
mov
mov
mov
xor
add
xchg
ljmp
cmp
dec
mov
mov
inc
xor
add
mov
xor
imul
insl
mov
test
xlat
xchg
ja
aaa
dec
push
xchg
inc
xchg
std
js
sbb
pop
mov
sbb
mov
test
push
mov
sbb
mov
cltd
jmp
mov
dec
cmpsl
les
iret
or
jge
rcrb
je
adc
and
or
popa
je
idiv
ss
sti
xchg
in
notl
ret
cmp
addr16
xlat
lods
test
inc
call
mov
rorl
dec
xchg
sub
xor
push
jl
mov
jp
add
nop
and
push
or
pushf
jge
insl
adc
rclb
sarl
push
sub
imul
inc
mov
dec
or
cmp
fnsave
jmp
push
mov
lret
inc
xchg
jns
inc
mov
jle
cmp
enter
clc
xchg
cmp
stc
push
mov
cmp
mov
push
adc
push
and
shrb
popa
or
lea
je,pt
xor
jne
adc
sti
outsb
fldl
jle
mov
repnz
pop
js
lods
loope
out
nop
sarb
mov
xor
arpl
pushf
and
and
aam
add
icebp
or
mov
jge
mov
push
push
lret
andl
inc
jno
mov
outsl
inc
loope
dec
ljmp
jp
call
sbb
dec
sahf
dec
fisttpl
testb
xchg
inc
lcall
jo
jne
fsubrs
or
stos
fldenv
call
sarb
sub
shl
movsb
push
cwtl
mov
mov
shl
test
and
jmp
fdivrl
enter
push
clc
adc
out
cmpsb
fdivl
mov
dec
cmp
aad
in
inc
mov
loope
dec
xor
cwtl
jp
outsl
nop
sbbb
and
pop
arpl
insl
repz
mov
jns
xchg
shlb
lret
add
mov
das
ss
ljmp
xchg
and
test
jge
aam
xlat
nop
mov
scas
cmp
push
sarb
or
mov
jbe
fucomp
dec
mov
loopne
daa
mov
hlt
inc
lcall
mov
outsl
push
pop
pop
sbb
rorb
aad
mov
cmp
cmp
fmull
mov
push
mov
inc
xchg
jmp
mov
or
stos
inc
sub
xchg
fldcw
es
movhps
outsl
jbe
inc
dec
push
mov
xchg
neg
iret
aas
es
ss
push
movhps
outsl
jbe
inc
dec
push
mov
xchg
neg
iret
aas
es
mov
xchg
push
jg
outsb
negb
dec
push
mov
xchg
neg
iret
aas
es
ss
push
movhps
outsl
jbe
inc
iret
push
inc
cmpsb
push
sbb
xchg
or
cmp
sub
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
lret
lcall
mov
xchg
ljmp
js
or
or
jp
push
lcall
mov
cwtl
lret
mov
or
cmp
dec
pop
sbb
jp
push
lcall
xchg
lret
mov
push
add
sub
push
jl
fs
lcall
mov
or
xchg
or
push
imul
cmc
jge
pop
sbb
and
and
push
and
xor
mov
cmp
sub
xchg
ss
popf
pop
popf
dec
out
movb
inc
mov
ficompl
jge
js
sbb
jns
test
adc
mov
or
fistpl
mov
in
les
sbb
test
dec
aaa
pop
aad
enter
je
adc
push
cmp
jnp
cmp
pop
inc
jb
mov
jno
push
xor
sbb
mov
test
cmp
lcall
insb
lret
push
ljmp
dec
sub
adc
jp
sub
imull
in
out
testb
jbe
arpl
aaa
jbe
inc
clc
pop
jne
mov
std
in
xchg
in
ljmp
add
xor
jns
movsb
lret
mov
stos
mov
lret
mov
or
js
or
dec
sub
push
lcall
mov
cwtl
lret
mov
or
js
or
dec
sub
push
lcall
inc
pop
jo
lods
sbb
popa
push
insb
xchg
je
sbb
mov
imul
lahf
xchg
and
and
je
aas
mov
xchg
cld
xor
push
movsb
fcoms
push
jo
pop
in
es
xor
add
cmpsl
fildl
and
sbb
mov
rcrb
das
out
mov
mov
push
aam
call
mov
cli
insb
jmp
movsl
aad
cmp
mov
mov
push
mov
aaa
mov
loopne
xor
mov
xchg
sbb
ljmp
out
adc
out
lods
jo
dec
mov
and
add
les
dec
std
push
add
adc
mov
lods
jle
rcrl
pop
lock
mov
test
cs
push
dec
or
nop
and
xor
ja
test
or
bound
jmp
shl
mov
push
addr16
and
in
test
pop
sahf
sahf
mov
insb
jge
jo
mov
dec
jnp
mov
push
nop
mov
mov
rclb
cmp
fsub
sbb
rep
xorl
dec
pusha
push
mov
mov
cmpsl
push
movsb
subb
imul
std
and
cli
jb
pusha
inc
or
lcall
movsb
cltd
push
or
and
cmc
pop
icebp
xchg
rcrb
or
mov
cmp
mov
or
fcmovnbe
fcoml
leave
into
int
lock
jp
fisubl
pop
push
adc
cs
cmp
pop
mov
pop
insl
jle
inc
sub
jl
jmp
sbb
and
or
mov
inc
jp
aas
jnp
and
mov
push
aas
push
repz
adc
xchg
lret
cmc
mov
sub
frstor
cmp
scas
sub
ss
or
inc
sar
sub
adc
sub
xlat
out
jo
push
iret
jne
mov
mov
cmp
js
sub
xchg
xchg
das
icebp
nop
mov
mov
xchg
sub
pop
cwtl
je
jae
xorl
jo
pop
dec
push
imul
enter
adc
cmpsl
push
in
inc
jo
add
mov
mov
mov
add
bound
scas
lret
mov
data16
ret
sub
rorb
jo
xor
mov
cld
or
xchg
cmpsb
loopne
aas
outsb
sub
pop
mov
mov
push
out
fstpl
jno
or
adc
fwait
inc
insb
call
add
push
lods
push
dec
stos
lds
xlat
faddl
and
jns
jmp
and
insb
mov
iret
pop
addl
dec
mov
jg
sahf
mov
xlat
inc
fisttpll
mov
cmp
gs
loope
jno
mov
inc
add
mov
fstpt
outsl
push
addr16
cwtl
inc
sbb
mov
pop
popa
or
cmpl
jo
les
xrelease
addr16
pop
jmp
sub
mov
or
pop
in
cmpsb
xchg
fsts
lock
das
cmp
inc
shl
jp
jae
enter
outsl
dec
test
xor
in
insb
test
sbb
aas
sahf
fsub
mov
and
mov
xor
ret
xor
test
push
jb
dec
flds
cmp
hlt
jmp
xor
adc
add
movsl
out
imul
mov
sahf
and
pop
mov
xor
rcrl
nop
data16
jl
imul
aad
jg
adc
push
daa
mov
sbb
add
jl
sbb
mov
jb
mov
adcb
enter
in
mov
inc
and
in
out
aam
mov
mov
push
cmp
mov
loop
jbe
sub
icebp
loopne
mov
mov
loope
cli
mov
js
cmp
pop
or
push
ja
les
lock
vminss
push
lds
popa
imul
call
inc
fildll
mov
ss
and
xor
mov
bound
push
xor
icebp
dec
pop
xor
mov
pushf
gs
lcall
sbb
mov
test
pop
loop
stos
xor
jne
dec
into
arpl
jle
sub
les
cli
jl
fistps
add
pusha
xchg
jne
cmp
pop
es
lea
xchg
js
and
mov
push
iret
pop
bound
push
sbbb
data16
push
xlat
imul
out
mov
mov
pop
inc
mov
cwtl
jnp
rcrb
push
xchg
mov
add
mov
mov
jmp
cmp
jl
testb
fnstenv
arpl
ret
adc
jo
jmp
test
arpl
sub
rcl
lds
lret
pop
mov
and
sbb
mov
xchg
mov
ficoms
aad
leave
fsubs
jae
push
mov
jmp
aam
ds
loop
mov
mov
loope
mov
scas
sbb
dec
arpl
or
int
imul
into
push
fstpt
and
sti
subb
sbb
out
lods
push
and
popf
mov
add
call
pop
pop
jecxz
fiadds
pusha
rcr
nop
sub
xchg
jns
jne
push
testb
repnz
dec
pop
sbb
xchg
sub
push
lea
sbbb
int3
lea
ror
xchg
imul
fs
inc
in
pop
jno
dec
jmp
xor
jl
lret
mov
pop
xlat
pop
notl
inc
in
in
test
popl
arpl
inc
xor
inc
pop
adc
push
push
jns
xchg
dec
and
jecxz
jmp
xlat
or
inc
xlat
pop
mov
loope
test
xchg
sbb
cmpxchg
rcrb
and
rol
ret
in
jno
adc
adcl
movsb
sbb
cmc
xchg
jno
push
xchg
neg
xor
and
testl
inc
cmp
mov
and
std
dec
pop
sbb
insl
cmpsb
mov
inc
jge
jl
ja
mov
inc
aas
sti
mov
out
in
ds
cmp
insb
xchg
jnp
adc
sub
add
fwait
inc
ret
and
cmpsl
xor
fwait
roll
into
imul
pusha
enter
bound
or
sub
sbb
cltd
cltd
data16
es
test
xlat
pop
mov
adc
pop
in
mov
or
pop
fxch
inc
lret
nop
ret
xchg
sub
xchg
sub
rorl
dec
ficoml
xor
xor
imul
pop
pop
test
jb
or
enter
pop
addr16
cmp
arpl
lret
pop
xorl
add
fwait
popf
call
jne
pop
push
xchg
add
stos
mov
sub
or
push
out
ja
dec
xchg
bound
dec
mov
addr16
or
push
jb
dec
adc
out
mov
lret
popa
and
mov
js
mul
std
sti
adc
addr16
jp
mov
sti
shl
inc
mov
adc
xor
pop
dec
popa
mov
xlat
push
pop
sbb
insl
fs
cld
xor
mov
sub
push
xchg
push
les
xchg
insb
lods
mov
and
or
filds
cmp
ret
pop
mov
adc
or
xchg
into
ljmp
loope
sub
adc
pop
add
arpl
xchg
icebp
data16
jmp
and
call
mov
jg
xor
xchg
sarl
adcb
adc
adc
std
fcomps
mov
inc
mov
ret
cmpsl
push
adc
callw
mov
cld
cmp
add
ret
popa
testb
or
test
mov
cmp
das
mov
inc
dec
inc
ljmp
adc
or
push
loope
scas
xor
jmp
pop
jmp
mov
repnz
cmp
or
loopne
sbb
nop
inc
pop
out
out
mov
mov
aaa
stc
stc
or
fisttpll
in
out
arpl
jmp
imul
or
dec
adc
daa
jno
gs
rclb
imul
xchg
ss
int3
dec
ja
lcall
sbb
inc
inc
or
push
mov
cmpl
pop
or
divb
ds
das
pop
add
or
sub
lods
or
lods
mov
outsb
repnz
inc
or
sahf
jns
mov
mov
movsb
dec
adc
and
es
lret
lret
xchg
jns
movsl
flds
outsb
lahf
pop
rcll
and
push
ljmp
nop
jns
jae
movsb
aad
mov
insb
arpl
xchg
xor
sbb
aad
add
or
clc
into
add
push
adc
cmp
andl
push
cmp
cmp
dec
mov
adc
test
push
pushf
call
test
dec
test
dec
mov
push
jb
cmpsl
insb
dec
or
inc
mov
out
xchg
sbb
pop
add
jg
inc
arpl
pop
int3
outsl
iret
mov
jmp
movsl
dec
or
scas
adc
mov
test
inc
shll
inc
and
dec
inc
push
push
out
mov
test
pop
xor
ficompl
in
or
sbb
fwait
mov
xchg
stos
jp
mov
or
mov
inc
and
push
aam
cltd
and
adc
dec
imul
mov
test
filds
mov
mov
mov
dec
int3
out
push
add
js
push
add
cmp
in
push
or
adc
or
fwait
imul
cmp
cli
inc
mov
add
pop
and
dec
pop
dec
xchg
ficoms
xorb
addb
add
xor
pop
mov
in
mov
cld
lcall
cwtl
mov
in
fsubrs
jns
cmc
fidivrl
jle
rorl
mov
xor
mov
inc
dec
pop
mov
or
push
aas
insl
jo
cltd
add
les
rclb
rorb
mov
out
jae
out
cmp
or
sti
pop
cmpsl
sbb
push
adc
or
add
out
daa
fdivrp
adc
xchg
lcall
imul
das
pop
jns
sub
or
addr16
mov
inc
push
movsl
or
outsb
outsl
insl
adc
cmp
and
mov
jnp
outsl
iret
add
xor
dec
arpl
in
fsubs
pop
sahf
sub
lcall
cmpsb
inc
mov
and
fcompp
inc
ds
pop
dec
mov
pushl
mov
test
lret
icebp
aaa
dec
sbb
in
push
sbb
stos
adc
jecxz
xchg
in
rol
pop
xor
pop
mov
fbstp
and
imull
dec
xchg
addr16
sahf
mov
adc
in
pop
push
ljmp
iret
or
fucom
repnz
ret
stos
jne
cmpb
sub
add
and
cltd
xor
hlt
leave
cs
and
int3
or
mov
xor
lahf
outsl
sbb
dec
or
test
and
cmp
js
xor
jp
inc
inc
add
mov
mov
subl
in
fsubr
mov
vcmpss
mov
or
out
sub
int3
push
fstpt
loopne
sub
rcrl
nop
mov
sub
out
and
not
int3
mov
and
aaa
xchg
aas
push
das
enter
sbb
push
repnz
bound
out
daa
std
insb
inc
inc
out
inc
sbb
pop
in
ljmp
int
jecxz
dec
scas
call
test
push
sbb
lods
add
sahf
insl
mov
ret
and
cs
xchg
int
xor
es
icebp
push
mov
xchg
dec
adc
stos
dec
xchg
xor
dec
imul
fsubrl
subb
adc
repz
arpl
inc
xchg
int
test
int3
pop
pop
stos
mov
add
and
mov
inc
sbb
cmp
inc
cmp
and
mov
cmp
adc
jbe
jl
mov
cmp
imul
loopne
aad
out
in
aad
add
or
fwait
popf
lods
mov
jmp
xchg
mov
cmpsl
std
insl
pop
roll
xchg
insl
in
add
lea
inc
cmpsl
xchg
arpl
pop
push
stos
mov
loopne
jecxz
xor
repnz
push
movsl
stos
adc
lock
aas
xor
sub
jo
jg
popf
xchg
sbb
scas
mov
clc
je
adc
lods
sbb
push
cmp
out
inc
sarb
cmc
jl
inc
push
mov
daa
jns
sbb
shl
jmp
mov
inc
push
fldl
popf
jno
inc
or
or
les
cmp
cmp
shlb
inc
inc
dec
xlat
sarb
sub
movsl
stc
shlb
mov
xchg
add
jbe
movsb
xchg
push
and
mov
imul
mov
add
repz
sbb
popf
pusha
lods
jp
popf
cmp
jp
mov
or
cmc
aam
push
jg
sub
add
or
push
jno
dec
pop
xor
mov
imul
je
xchg
rcrl
cwtl
std
inc
dec
jno
cwtl
popf
mov
mov
js
push
jne
jne
bound
imul
pop
pop
add
cwtl
fstps
add
je
mov
mov
popf
and
test
mov
inc
push
xor
aaa
mov
repnz
sub
sbb
sbb
imul
mov
xor
flds
push
mov
es
test
aaa
lods
scas
pop
sbb
lea
bound
fistpl
enter
divb
jle
out
push
test
add
jmp
jno
dec
mov
adc
mov
stc
inc
jae
xor
sti
push
sub
fldt
sbb
or
xchg
in
xorl
adc
jge
jg
push
into
xor
hlt
add
int3
cmp
mov
into
fidivs
lods
adc
jnp
and
imul
fdivrp
insl
das
adc
rcrl
push
imul
jmp
imul
test
xchg
lcall
sti
ret
scas
jmp
sbb
dec
imul
push
xchg
mov
inc
pop
sbb
dec
lret
jae
mov
rorl
jno
add
andb
fs
js
pmuludq
adc
push
mov
shlb
or
cmp
cmp
and
xchg
xchg
mov
dec
jmp
cmp
add
sar
aaa
punpckhdq
aam
jle
cli
jecxz
mov
and
std
push
xor
push
scas
jb
int
xchg
add
xchg
mov
lock
mov
mov
sahf
pop
cmpsl
jmp
or
jbe
mov
mov
jae
call
push
add
js
cmp
in
in
xor
fsubs
ds
mov
mov
lea
into
mov
loopne
sub
xchg
add
addr16
push
js
lods
mov
xor
push
adc
nop
daa
movl
pop
fildll
xor
loopne
bswap
decl
repz
or
ret
push
lret
push
cmp
movsb
dec
dec
shl
notb
pop
adc
xor
and
outsb
js
leave
inc
push
imul
sbb
popf
hlt
xchg
and
test
out
and
aas
bound
xor
ljmp
add
sbb
popa
sub
je
cmp
fisubrl
rcrb
cmp
ds
xchg
pop
neg
call
fwait
dec
fidivrl
mov
cwtl
fdivl
movq
scas
rcrb
fs
cltd
stos
roll
xchg
cmc
mov
add
or
fwait
xchg
push
ds
xor
cmp
cmp
or
ja
ret
inc
fwait
cmpsb
cmpsb
mov
xor
clc
sti
push
scas
out
lahf
pop
pop
mov
jle
push
lret
cmp
fdivl
cvtps2pi
js
rorb
stos
mov
pop
cld
cmp
out
lret
negb
xor
add
mov
xor
ljmp
fidivs
iret
icebp
jg
dec
int
scas
and
sbb
cmp
jmp
cmpb
stos
mov
out
lods
jno
jg
pop
int3
js
movsl
mov
add
pop
and
loop
cmp
push
cmp
daa
sub
sbb
enter
xchg
in
test
push
add
daa
pop
mov
gs
sbbb
sub
and
int
sub
fmuls
sahf
push
int3
jle
jl
jo
push
cmp
adcb
aad
movsl
andb
xchg
push
std
cltd
popa
je
xor
xchg
lahf
pop
mov
mov
and
ds
je
jl
cmp
aaa
pusha
sbb
and
repnz
xchg
sub
xor
rcrl
push
xlat
xchg
rolb
mov
xchg
cwtl
leave
ds
clc
dec
add
mov
psrlw
fs
out
push
sub
mov
je
and
insb
movsl
mov
push
jbe
mov
or
adc
or
dec
pop
clc
push
sub
adc
mov
sahf
fdivl
cmovge
fadd
add
hlt
test
xor
inc
and
mov
sub
xor
inc
movsl
adc
aas
ds
cs
clc
hlt
sub
pop
imul
xchg
test
mov
das
stos
test
cmp
fisubrs
lea
shlb
ret
pusha
inc
icebp
cmp
arpl
test
xchg
dec
out
mov
dec
daa
ret
jne
mov
mov
jle
add
cmpsl
add
push
push
and
xchg
arpl
push
pusha
jmp
push
xchg
aas
jecxz
jecxz
jo
shll
outsl
and
add
mov
loopne
mov
stos
pop
ret
cmp
div
xor
push
cld
cmc
into
or
pop
pop
jmp
loopne
orb
scas
ret
insl
sbb
pop
push
lds
repz
push
int3
mov
test
add
jno
dec
pushl
jb
dec
dec
test
push
movsb
adc
push
mov
js
icebp
mov
inc
xor
sub
cmpsl
jb
fsubrs
dec
and
and
out
mov
lret
fldt
filds
mov
or
lcall
movsl
pop
popl
or
jge
outsb
adc
sub
xchg
ja
stc
out
aam
sbb
mov
xor
mov
cmc
jp
push
fs
testb
xor
push
adc
sbb
push
push
mov
push
adc
cmp
and
sub
ja
aad
repz
js
pop
loopne
jnp
add
mov
dec
xchg
outsl
mov
pushf
xor
mov
enter
jmp
test
jns
or
loop
or
push
pop
mov
loop
int3
filds
aam
inc
add
jno
xchg
enter
fdivr
lods
mov
mov
push
cmp
inc
repz
pop
out
bound
mov
xor
dec
aad
xlat
shrb
mov
stc
sub
mov
scas
mov
loope
scas
mov
mov
xchg
sbb
lods
push
sarl
outsl
gs
adc
out
inc
inc
in
cmp
jp
fnsave
pop
sarb
shrb
test
mov
pop
jne
mov
imull
fwait
sarb
jg
push
sub
xchg
jnp
mov
sub
dec
shll
sub
je
add
insl
pop
fcoms
daa
jo
shlb
pop
data16
xor
shl
sbb
sub
nop
ret
mov
mov
mov
mov
mov
test
mov
sub
scas
std
jmp
inc
jle
arpl
cli
jae
add
ret
loop
rcrb
aad
xor
add
ret
xlat
and
and
pop
mov
int
jno
lods
xor
int
or
cmpsl
pop
mov
hlt
btr
inc
movsb
xor
sbb
mov
sahf
cmpsb
dec
pop
movsl
mov
bound
and
inc
or
fs
lods
mov
xor
and
jmp
out
ret
mov
bound
test
mov
pop
cmc
adc
mov
jb
push
mov
jo
stos
cmc
lcall
cs
scas
das
jno
sub
xor
sarl
mov
push
stc
fsubs
arpl
test
cmovb
ret
xchg
mov
mov
mov
xor
imul
add
fnstsw
jns
dec
aas
cmpl
repnz
jl
adc
aaa
and
mov
aad
or
repz
outsl
pop
cmp
pop
icebp
mov
xchg
and
loope
movsb
cmp
das
jecxz
xor
mov
into
sub
add
mov
cwtl
lret
mov
or
js
or
dec
sub
push
lcall
mov
cwtl
lret
mov
or
js
or
dec
sub
push
sahf
call
stos
sbb
cwtl
lret
js
dec
sbb
cwtl
cmp
or
dec
sub
push
lcall
mov
mov
jp
adc
ret
pop
jg
nop
mov
test
xchg
xchg
nop
in
shll
loopne
hlt
xchg
in
cmp
gs
popf
out
out
push
mov
es
push
loopne
lock
data16
xchg
and
adc
dec
jo
inc
out
push
push
push
jbe
sbb
out
rolb
jbe
data16
and
bound
xor
icebp
jp
jbe
fucomp
or
stos
test
mov
mov
insl
sbb
mov
hlt
outsl
push
cmc
dec
jnp
aas
adc
jecxz
jns
out
ljmp
inc
sub
das
dec
push
sbb
cmp
inc
pusha
push
or
or
xor
mov
add
push
xchg
mov
mov
test
nop
push
hlt
push
xchg
add
xchg
dec
adc
jne
std
out
in
sub
jbe
dec
gs
outsl
mov
add
incb
repz
cmpsb
loopne
or
fucomp
pop
push
dec
mov
scas
mov
mov
push
pusha
ret
sub
or
xor
dec
sub
nop
ss
es
push
loopne
lock
inc
xchg
and
sub
pop
sahf
negb
bound
inc
fistps
push
popf
xor
xor
fldenv
mov
fwait
xor
cmp
inc
testb
cld
xor
push
jecxz
inc
jmp
into
push
ret
and
and
sub
in
push
cld
pop
lods
inc
lock
data16
add
jo
inc
out
push
mov
es
push
loopne
lock
data16
add
jo
inc
out
push
mov
je
and
imul
test
xchg
or
mov
mov
pop
loope
pop
stos
orl
cli
mov
icebp
cli
jno
mov
fcmovnbe
icebp
inc
lea
cmp
sbb
cmpb
fildll
push
out
or
mov
loop
fistpl
or
cli
fisttpll
dec
cli
lcall
pop
call
popa
inc
bound
push
std
sub
adc
ss
bound
dec
sub
popf
fsubr
sub
xor
or
push
pop
jmp
xchg
andl
add
outsl
fdivrl
stos
mov
xchg
push
sarl
nop
pop
fistl
pop
repnz
cwtl
stos
mov
jge
add
pop
int
inc
pop
testb
jle
push
pop
xchg
sar
mov
stc
xchg
into
repz
sub
mov
adc
xor
jae
insl
cwtl
add
cwtl
fsubrp
xor
dec
std
lds
call
clc
add
dec
jae
popf
idivb
pushf
into
rorb
andb
pop
add
leave
pop
mov
xchg
aas
jecxz
orl
adc
push
stos
aam
mov
pop
lahf
mov
mov
inc
cmp
mov
xor
push
stc
mov
insl
movsl
test
inc
pop
ljmp
popa
push
add
mov
daa
es
lock
movsb
repz
popa
out
xor
rep
sub
xchg
pop
fmull
add
in
dec
cmpsl
adc
rcll
xor
cli
push
xchg
das
inc
lock
movsl
inc
inc
sbb
lods
jecxz
dec
stc
cmpsl
sub
push
push
and
in
cmp
test
jle
cmc
jb
js,pt
sub
in
scas
jle
mov
mov
loopw
cmpsb
cmp
xchg
inc
xlat
int
ret
xchg
mov
arpl
xchg
xchg
adcw
jae
mov
insl
cmc
jecxz
lret
and
add
inc
inc
mov
shrb
lds
pop
iret
mov
imul
inc
jge
sub
rorl
leave
int
gs
int
xor
pop
or
jmp
das
and
xchg
xchg
aas
sbb
or
aas
push
jecxz
push
ret
loopne
mov
loopne
pop
jp
dec
xor
cmpb
sub
xchg
jmp
lret
mov
fwait
push
aam
test
mov
ror
xchg
jae
clc
inc
jne
cmc
mov
in
xor
fnstcw
jne
addr16
push
mov
xor
hlt
addr16
test
mov
clc
std
outsb
fs
sub
and
arpl
sti
cli
cwtl
rol
and
mov
fwait
subb
mov
push
push
lods
push
cltd
xchg
or
das
les
adc
mov
aas
mov
xadd
inc
bndstx
mov
shlb
and
push
je
push
sbbl
stos
outsl
stos
loope
sarl
adc
adc
leave
pop
jb
pop
mov
cwtl
hlt
rcrb
out
sbb
sbb
faddl
mov
jno
or
mov
xchg
fiaddl
push
push
dec
push
xor
loop
pop
sub
and
dec
out
ret
mov
sub
pushf
sti
jbe
and
scas
pushf
cmp
jmp
add
imul
clc
fisttpll
pop
push
stos
push
cmp
fadd
pushf
outsb
enter
or
icebp
cwtl
imul
cmpb
cmp
or
dec
push
mov
inc
push
cmc
imul
jnp
mov
iret
lods
pop
add
loop
sahf
addr16
mov
push
inc
cmp
lret
adc
scas
fiaddl
lock
sbb
xchg
mov
sbb
jp
cli
xor
incl
jl
lods
test
gs
mov
bound
dec
hlt
ret
mov
repnz
sbb
fidivl
shll
into
xchg
mov
cmp
inc
jo
insl
movsb
and
shr
adc
lods
adc
fwait
add
pop
jbe
jno
mov
movsl
inc
dec
stos
cld
cwtl
adc
xchg
imul
pop
loope
jmp
jne
jno
insl
lea
and
cmp
sbb
mov
faddl
push
add
int3
popf
mulb
int3
in
jb
mov
js
stos
stos
xchg
outsb
andl
lods
int
pop
lahf
test
ja
cli
cld
cwtl
popf
mov
insb
and
jg
pop
scas
mov
jns
or
ret
hlt
into
xor
sub
jne
jnp
outsl
mov
pop
mov
mov
sbb
sub
gs
hlt
lock
pusha
xlat
in
pop
dec
jo
jne
scas
inc
xchg
mov
or
and
icebp
push
xchg
loop
lods
mov
rcl
jge
cmc
and
add
fimull
and
fsubr
or
negl
and
int
mov
mov
enter
insb
mov
and
xor
sbb
test
sub
jne
ljmp
movb
gs
push
shlb
jbe
xchg
pop
cmp
lahf
pop
clc
cmpsl
je
scas
mov
mov
test
stc
idiv
sbb
xorb
in
xchg
inc
jns
in
and
adc
or
mov
punpckldq
aas
inc
dec
mov
arpl
pushf
cmp
pushf
pop
inc
fst
ja
int3
push
cs
mov
data16
stos
std
dec
inc
inc
push
jne
test
cltd
test
cmpsl
and
or
ljmp
sbb
mov
and
ja
out
and
sub
cmpsl
sub
and
or
ss
mov
lds
jp
xchg
lods
rcll
push
mov
add
cld
push
test
pop
xchg
inc
in
mov
and
xor
fs
mov
pop
jp
loop
pop
rol
data16
sbb
cmc
aas
in
inc
sbb
fdivrp
jg
jb
dec
ret
loop
add
shr
jnp
jg
stos
push
dec
xor
das
popa
and
mov
fidivrl
movb
sub
lret
cmpsl
and
mov
mov
arpl
insl
sub
xchg
jns
idivl
jle
sub
repz
xchg
and
mov
jle
imul
xlat
mov
mov
sbb
repz
mov
imul
sub
push
and
into
dec
cli
hlt
push
pop
insb
jo
hlt
nop
xchg
arpl
rclb
fdivr
sbb
iret
enter
aaa
test
push
mov
shl
push
out
fst
mov
pop
cmc
lret
les
out
dec
cmp
xchg
sar
xor
loopnew
shl
and
std
test
dec
jl
mov
sub
arpl
or
mov
mov
mov
movsl
fdivrl
cmp
lret
sub
cwtl
movsl
add
mov
jb
fmull
mov
insb
push
and
cltd
mov
out
bound
cltd
cmpsl
mov
add
cwtl
lretw
lcall
les
stc
or
mov
jne
and
adc
mov
notl
aaa
fldcw
std
sbb
and
xorb
cmp
aam
js
test
enter
ja
jno
imul
lret
mov
or
in
ss
xor
dec
mov
insl
or
inc
rcrl
mov
lahf
call
in
jmp
imul
in
fdivrl
cwtl
stc
fistpl
or
fnstsw
lret
add
insl
out
gs
mov
sbb
jmp
ret
jo
fdivl
stos
fs
pop
jb
movsl
shl
adc
negb
mov
popa
jge
inc
scas
mov
sahf
and
ljmp
lods
out
xor
inc
lock
xchg
jmp
adc
cmp
test
jbe
insb
test
mov
call
scas
pop
pop
xchg
loopne
lcall
out
cs
mov
xchg
aam
leave
loop
jns
enter
flds
test
jmp
fbld
jle
push
pop
jb
cltd
loopne
mov
insb
popa
lea
jecxz
cmc
ja
sub
test
jnp
nop
pop
rcrl
jno
imul
ret
in
insl
flds
jl
loopne
fadds
xchg
dec
mov
and
mov
stc
inc
pop
sbb
hlt
inc
push
push
out
mov
jae
pop
enter
jg
hlt
scas
dec
xchg
lea
clc
push
fcmovbe
and
and
repz
mov
fstpl
mov
pop
out
add
push
sub
add
jg
int3
adc
arpl
icebp
push
icebp
std
mov
pop
adc
push
mov
fs
and
mov
test
les
clc
mov
lea
jbe
testl
cmp
mov
and
outsb
adcl
loop
mov
or
sti
popa
shlb
movl
sbb
jae
xor
adc
iret
orl
enter
in
mov
test
jge
mov
rcrl
fnstsw
mov
jmp
sub
inc
sub
jp
push
jns
inc
ss
cmc
scas
pop
cmp
inc
jge
shl
sbb
test
movsb
mov
int3
jecxz
push
cmp
ret
aam
sbb
xchg
pop
imul
push
inc
shlb
das
inc
call
gs
scas
mov
xchg
test
enter
aaa
sbb
inc
imulb
xor
and
sub
out
in
pop
pop
cmpsb
fsub
js
xchg
clc
hlt
mov
add
jnp
outsl
mov
ds
jg
jmp
mov
pop
or
sbb
jns
add
mov
cmpl
outsb
cmp
push
sbb
loop
mov
add
lret
sub
pop
pop
pop
es
cmpb
push
inc
nop
push
lcall
xor
mov
jo
popa
inc
fisubrl
mov
test
xchg
cli
xor
cmpsb
in
test
fisubrl
push
xchg
inc
lods
cwtl
xor
mov
sbbb
mov
cld
cmp
sub
mov
subl
mov
pop
and
bound
lds
xchg
cmp
daa
test
aad
dec
ss
pop
popa
fcmovb
in
cmc
mov
add
int
cli
lcall
push
jge
into
dec
fwait
inc
in
xlat
sbb
xor
shll
in
cmpsb
xor
inc
mov
dec
push
fists
jae
sbb
or
jns
in
mov
mov
mov
sub
sbb
filds
or
call
xor
popf
xchg
aam
jg
mov
das
push
pushf
add
out
dec
and
leave
imul
inc
cmc
iret
dec
and
insb
and
fildl
sahf
mov
xor
or
push
mov
add
cwtl
push
inc
in
sti
iret
lret
fcmovnu
fsub
adc
lds
out
or
mov
lods
mov
sbb
mov
cmpsl
and
out
inc
jp
ficompl
stos
fwait
dec
inc
dec
out
lret
xor
push
push
int3
xor
pop
and
or
lcall
jne
inc
shlb
outsb
jo
pop
aaa
mov
mov
sub
mov
mov
dec
and
mov
cmp
adc
and
faddp
cmp
xchg
and
js
filds
sbb
data16
mov
lods
pop
inc
mov
in
fimull
pop
loope
test
movsb
cmpxchg
mov
sarl
fimull
sbb
pop
pop
stc
and
lcall
inc
enter
shr
aas
pop
popf
in
cmp
repz
insb
dec
mov
sbb
flds
push
sbb
sbb
adc
popa
pop
add
and
jle
imul
ja
jb
push
jb
out
sahf
dec
out
inc
add
insb
inc
loop
adc
and
lds
jp
sbb
cmpsl
sub
xchg
mov
mov
lcall
cmp
lock
mov
sub
or
push
std
pop
cmpsl
pxor
cwtl
sub
mov
loop
mov
sbb
push
lcall
popa
int
cmp
mov
jne
pop
ret
cmp
scas
shll
fadds
inc
jne
aam
je
push
out
pop
dec
push
daa
pushf
xchg
sbb
setne
push
int
loopne
out
nop
jnp
loop
mov
mov
ja
shr
lret
arpl
sbb
mov
adc
push
popf
xchg
test
insb
jg,pt
xchg
fistps
mov
in
push
sub
mov
das
mov
mov
fistl
jle
dec
mov
sbb
out
pop
pop
jb
xchg
mov
stc
inc
adc
jb
or
cli
int3
mov
fldenv
push
and
lds
add
lock
mov
pop
xor
movsb
push
pushf
lahf
jecxz
sub
jb
arpl
cld
mov
pop
test
mov
bound
push
jge
lcall
sbb
add
dec
and
negb
pop
sbb
xor
nop
add
lcall
es
dec
les
mov
ljmp
push
cltd
out
rcr
nop
mov
shrl
in
pop
aam
ret
mov
std
repnz
xor
push
not
lcall
fstl
cmp
aad
jg
ljmp
and
add
xchg
cmpsl
pusha
push
ret
data16
ja
mov
push
stc
sub
mov
add
mov
aam
fidivrs
aas
fs
das
rorb
out
or
rorl
int3
fildl
jle
and
outsl
push
jae
dec
mov
loop
in
add
push
adc
pop
push
xor
and
lea
fdivl
xchg
iret
mov
std
mov
sbb
add
sub
aaa
sbb
outsl
adc
inc
or
mov
xchg
push
les
add
lcall
imul
ud0
out
jmp
mov
lock
push
mov
mov
imul
outsb
jg
jg
mov
loope
cmpsb
inc
jg
xor
shr
mov
lret
push
fcomp
cld
jae
push
inc
shrb
xor
inc
jnp
mov
mov
shl
pushf
push
in
stc
fstps
xor
push
scas
inc
rorb
dec
adc
rcll
or
aaa
lahf
std
inc
movsl
sub
cwtl
andl
into
cmp
loopne
push
hlt
cld
mov
jbe
mov
cltd
adc
dec
mov
sub
add
clc
push
push
mov
mov
xor
je
pusha
int
jae
cmp
jecxz
or
pusha
in
jecxz,pt
inc
push
sbb
mov
nop
xor
int
and
loop
out
add
or
pop
push
jnp
aas
jle
push
mov
fisttpl
and
sub
mov
push
xor
push
xor
inc
subl
mov
jb
cmp
pop
hlt
dec
icebp
test
mov
mov
cld
ret
fwait
pop
sbb
push
leave
aas
mov
test
cmc
sbb
xor
add
add
arpl
sbb
jnp
flds
arpl
add
inc
cmc
inc
xor
adc
cmp
rcll
rclb
jns
int3
push
pop
loope
gs
add
or
push
dec
fsubrp
mov
orl
test
not
ljmp
shll
jno
out
inc
sub
pusha
mov
and
loop
mov
push
mov
fbstp
out
and
aaa
pop
out
xchg
jle
scas
loope
test
push
inc
loop
and
inc
push
xor
jne
add
mov
insl
pop
fsubl
jns
iret
xchg
mov
popa
movl
inc
mov
xor
mov
mov
ja
movsb
pop
mov
or
push
mov
outsl
push
jb
in
xchg
iret
or
cmp
pushf
sub
cmp
rcr
push
imul
mov
cmp
lret
in
add
cmp
aam
aam
gs
push
cmp
arpl
inc
icebp
sub
jno
and
mov
jle
insb
dec
mov
stc
fs
mov
or
add
mov
push
jb
sub
dec
mov
push
cs
cmp
xorl
mov
fucom
or
pop
lcall
lcall
mov
stos
mov
out
sbb
mov
and
mov
movb
stos
jle
lods
cwtl
mov
inc
push
xor
mov
dec
cmp
xor
or
data16
push
add
xor
xchg
mov
out
int
and
sbb
mov
jae
jecxz
xlat
mov
cltd
sbb
mov
add
fiadds
popa
jb
int3
int3
pop
ret
stos
xchg
push
add
mov
adc
pop
test
mov
repz
fildll
xor
rcrl
test
cmp
rcrb
adc
ret
mov
jle
pop
int
insl
aam
dec
lds
vmovhpd
adc
xchg
dec
pusha
xchg
imul
pushf
sbb
leave
and
add
mov
test
cmp
add
bnd
lds
pushf
xor
enter
dec
sbb
lods
jne
std
aas
cmp
cmpsb
jl
out
icebp
push
fwait
push
dec
out
sub
ja
popl
andl
xchg
mov
enter
fwait
or
fwait
sbb
jecxz
fistpl
mov
push
lret
movsb
fsubs
ret
call
and
int3
js
prefetch
xchg
lods
stc
icebp
repz
xchg
sbb
adc
aam
dec
mov
sub
cwtl
cmp
divb
jle
inc
sub
jmp
fldl
ljmp
or
std
subl
les
stos
dec
test
icebp
sbb
std
mov
jge
sbb
mov
inc
dec
aas
enter
jp
jnp
aad
fstpt
scas
sti
xor
inc
in
mov
pop
pop
shll
dec
mov
add
in
mov
cmp
push
dec
mov
testb
cmp
adc
loop
mov
call
divl
movsl
cs
push
add
lahf
add
shrl
lret
mov
fistpl
fwait
push
sahf
iret
cltd
fwait
cmp
cmc
in
jns
adc
leave
mov
loopne
shrl
xchg
daa
enter
fcomip
stc
add
mov
popa
inc
ficoms
mov
or
jnp
pop
sub
adc
daa
clc
and
jmp
mov
js
pop
jnp
js
mov
in
pop
sub
inc
flds
mov
daa
inc
lret
js
imul
ss
mov
popa
lock
call
lret
mov
xchg
push
push
scas
push
je
adc
push
adc
or
outsb
xchg
repz
rorb
push
pop
push
mov
stos
mov
bound
gs
xchg
mov
xchg
sub
mov
dec
lds
fimull
push
push
mov
pushf
outsl
adc
ret
cmp
push
cmpsb
push
stos
iret
xor
and
fistpll
test
scas
xchg
jbe
fs
std
xorb
ljmp
mov
push
ret
scas
adc
movsb
popa
or
sub
mov
adc
int
fnsave
push
push
sub
call
divb
dec
dec
outsl
xchg
sbb
outsb
xchg
inc
sbb
dec
loop
push
push
negl
insb
repnz
gs
xchg
sbb
cmp
bound
push
test
popa
adc
shlb
adc
arpl
dec
inc
addr16
loopne
aam
popf
dec
jno
adc
mov
mov
dec
in
imul
repz
adc
mov
add
hlt
jge
ja
push
push
jmp
fiadds
outsl
in
pushf
cmp
inc
mov
jo
lds
push
cmp
xlat
shrb
jno
inc
dec
enter
sub
mov
sub
or
subb
and
iret
popa
mov
addl
es
je
mov
push
mov
jmp
int3
enter
std
dec
bound
or
and
cld
push
ss
sub
leave
out
insb
and
xlat
add
sarb
pop
mov
loope
jmp
bound
rcl
rcrb
inc
test
or
hlt
jnp
dec
scas
push
out
xchg
sbb
movsb
xchg
and
push
push
sar
xor
test
repz
js
fdivl
mov
fsubs
jge
mov
es
aam
push
int3
nop
imul
nop
push
loopne
lock
data16
add
jo
inc
out
push
mov
es
push
loopne
lock
data16
add
jo
inc
out
push
movsb
push
mov
push
loopne
fwait
jbe
data16
add
jo
dec
out
pop
inc
pop
push
aaa
fs
inc
lock
data16
add
or
cmp
sub
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
sub
pop
cmp
mul
xchg
sub
add
add
add
add
add
add
add
mov
mov
adc
or
jbe
aaa
add
dec
add
add
add
outsb
add
add
add
add
or
add
enter
push
add
add
add
or
test
add
add
inc
add
add
mov
or
add
mov
adc
add
add
add
add
add
add
add
add
cmp
xchg
add
add
add
add
add
add
nop
add
arpl
xor
outsb
add
add
add
add
ret
add
add
add
add
add
movsb
add
add
add
add
add
add
add
add
gs
add
add
add
add
or
add
in
outsb
add
add
lds
aas
add
add
add
add
add
add
add
add
or
imul
add
mov
add
add
add
add
add
add
add
lods
add
add
add
add
add
add
add
add
fiaddl
cmp
add
add
add
add
xchg
add
add
adc
cmp
adc
mov
add
add
add
add
scas
add
add
add
add
add
add
mov
push
add
add
add
add
add
addb
add
add
add
cmp
add
add
int
inc
add
add
add
sub
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
xchg
add
add
out
jae
adc
push
add
add
addb
add
cmp
add
add
add
add
add
add
add
add
faddl
inc
add
add
adc
faddl
test
add
addl
lea
push
add
add
add
add
add
add
add
dec
add
add
inc
add
add
dec
add
add
add
add
incl
repz
add
add
add
add
incl
outsb
add
ss
add
add
add
add
add
or
xor
push
add
add
add
add
add
add
add
add
adc
inc
add
add
add
add
add
scas
add
add
add
add
add
add
add
pop
add
add
inc
add
add
add
xchg
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ss
add
test
add
pop
add
add
add
rolb
out
std
add
add
cli
int
data16
lods
fnstenv
es
daa
sbb
add
shlb
repnz
scas
cli
and
ret
or
sub
mov
jno
mov
arpl
test
lea
push
test
data16
push
jg
mov
loopne
inc
jl
xchg
outsl
stos
push
dec
adc
mov
es
clc
sbb
call
daa
rcrb
jge
xor
xchg
bound
stos
aaa
mov
mov
xchg
mov
adc
inc
xor
cmc
in
jno
push
lds
rclb
xor
push
testb
cmp
addr16
push
dec
mov
jbe
and
mov
lock
mov
push
adc
or
xor
cmpsb
movsb
jle
adc
gs
pop
and
mov
mov
xchg
aaa
sahf
pop
mov
inc
or
inc
dec
scas
aas
jmp
sbb
push
aas
aas
std
jb
jl
xchg
into
es
std
lea
cmp
add
xchg
dec
out
and
push
push
cmp
xchg
repnz
aaa
cwtl
sbb
mov
inc
or
jno
mov
ficoml
stos
pop
je
lods
cmp
xchg
mov
dec
inc
xchg
lock
bound
xchg
out
push
mov
sub
dec
nop
out
sub
pop
push
pop
add
adc
xor
dec
or
and
stos
iret
fldz
xchg
scas
dec
xor
jno
testl
push
repnz
jmp
into
push
push
shrl
lea
or
mov
nop
push
pop
add
sbb
sbb
fdivr
xor
js
dec
fstps
xchg
xchg
jae
into
push
xor
sub
jae
pop
enter
mov
jb
mov
in
mov
inc
dec
push
cmp
movsb
jno
inc
mov
loopne
dec
lret
into
xor
pop
pop
push
daa
mov
scas
divb
in
mov
ds
in
iret
add
push
test
pushf
aas
adc
inc
xchg
out
mov
int
hlt
repz
divl
in
lret
and
push
fwait
seta
mov
out
pop
xchg
in
sub
cli
lods
push
add
lret
mov
das
jno
cmp
fsubp
push
std
test
mov
pop
mov
stc
das
push
mov
mov
mov
bound
leave
aas
enter
fs
dec
jle
aad
enter
dec
pop
sbb
mov
out
push
das
cmp
mov
mov
dec
pop
cmp
mov
repnz
mov
pop
add
mov
loop
xor
ja
jns
push
mov
cmp
sub
sbb
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
