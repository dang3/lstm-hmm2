sbbb
xchg
pop
add
mov
pop
add
add
sbb
add
adc
add
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
dec
aaa
add
lea
pop
ds
repnz
push
imul
cmp
jo
and
pop
arpl
pop
outsl
outsl
push
cmp
inc
outsb
jnp
pop
and
add
push
gs
inc
cmp
jg
aaa
add
aaa
add
cld
addr16
lcall
out
movsb
int
out
stos
fwait
add
or
jge
fs
cltd
fwait
or
jge
jb
xchg
fwait
or
sbb
or
and
mov
jmp
or
adc
out
ss
or
add
popf
out
sbb
cwtl
out
sbb
push
push
pop
dec
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
or
xor
in
imul
pop
dec
aaa
add
dec
add
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
ja
pop
pop
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
xor
add
add
ja
pop
dec
daa
add
aaa
add
daa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
dec
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
xor
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
pop
add
dec
add
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
dec
aaa
pusha
xor
sub
add
or
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
es
je
dec
aaa
add
aaa
add
add
aaa
add
add
aaa
add
aaa
add
add
aaa
add
cmp
jb
dec
aaa
add
aaa
add
add
aaa
add
add
aaa
add
aaa
add
aaa
add
dec
aaa
inc
inc
cmp
insb
cld
sub
add
aaa
add
xor
add
xor
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
adc
rorl
jns
test
adc
fadds
add
pop
jecxz
aas
inc
and
xor
pop
or
mov
push
adc
dec
hlt
loop
iret
incl
inc
inc
pop
jmp
dec
lcall
rolb
aaa
add
mov
shl
aaa
push
test
mov
pop
es
push
int3
ss
ljmp
jns
pop
idivl
jb
or
out
sbb
add
and
cld
sbb
adc
fimuls
lret
mov
and
xlat
pop
decl
push
mov
fbld
inc
push
sarb
dec
ss
incl
add
mov
jne
sbb
push
fwait
vhaddps
jb
rolb
decl
inc
add
add
inc
pop
sarb
cld
sbb
mov
inc
mov
or
add
xor
push
stos
and
fimull
aaa
xor
xchg
mov
pushw
stos
and
or
lea
scas
addr16
icebp
dec
pop
add
stos
lret
inc
pop
stos
and
aaa
test
scas
mov
push
mov
lret
sbb
adc
add
jmp
stos
push
mov
add
dec
mov
ret
loopne
lret
mov
inc
loope
dec
decl
shrb
inc
jecxz
aas
push
stos
inc
or
stos
data16
mov
rolb
mov
enter
jb
loopne
decl
inc
enter
jbe
dec
mov
cwtl
cmp
push
and
mov
sbb
xor
adc
rclb
push
jae
dec
ljmp
inc
inc
pop
std
pop
mov
stos
and
lahf
or
xor
data16
lret
popa
or
mov
pop
inc
pop
dec
enter
mov
add
add
add
add
aaa
push
pause
jno
pop
int
sbb
or
dec
mov
arpl
add
jb
inc
pop
pop
repz
outsb
and
sub
std
arpl
std
adc
je
sbb
sbb
bound
sbb
pop
dec
pop
pop
mov
pop
imul
xor
cmp
mov
outsb
push
test
push
pop
bound
sti
gs
xor
push
jno
pop
jo
xor
push
cmpl
pop
popa
mov
push
sub
push
xor
push
xor
add
xor
pop
push
inc
std
pop
inc
inc
adc
xor
mov
xcrypt-ecb
incl
cli
pop
outsl
cs
push
xor
push
add
push
add
icebp
push
pop
pusha
or
movsl
enter
iret
add
pop
push
mov
pop
pusha
lea
push
std
pop
push
mov
pusha
push
add
xor
push
add
jno
popa
push
xor
push
xor
push
xor
jle
dec
fistps
fisubs
dec
push
xor
push
xor
pusha
push
xor
pusha
push
xor
push
lcall
push
pop
add
or
call
add
add
add
cmpsb
enter
xchg
pop
dec
pop
push
icebp
es
inc
or
inc
push
or
std
xor
add
arpl
lcall
pop
pop
pusha
mov
cmpsb
enter
pusha
push
lcall
add
mov
pusha
push
xor
push
repz
cld
lret
cmp
pop
inc
mov
pop
push
test
push
xor
cmpsb
enter
inc
push
push
xor
push
xor
push
std
popa
push
jmp
add
xor
push
xor
jb
dec
fbld
cmpsb
enter
add
aaa
add
addr16
icebp
xor
rcll
jne
lcall
sbb
jae
mov
ja
dec
xor
pop
lcall
push
std
pop
push
sub
dec
lods
cld
pop
outsb
jno
pusha
push
sbbl
jge
mov
ja
dec
xor
push
sbb
adc
movsl
enter
aaa
add
addr16
push
xor
aaa
std
pop
jg
or
add
pop
push
xor
push
jae
int3
jl
addr16
add
pop
add
pusha
push
icebp
xor
icebp
sbb
push
xor
xor
imul
addb
lcall
adcl
xor
mov
pop
jne
sbb
std
pop
push
jno
pop
imul
pop
mov
mov
push
push
xor
inc
push
pusha
push
xor
stc
pop
dec
inc
push
pop
loopne
or
call
fmuls
pop
jne
sbb
std
pop
push
icebp
xor
jl
pop
xor
dec
sbb
pop
pusha
movsb
enter
pop
jne
sbb
sti
pop
push
mov
fs
shll
push
mov
insl
inc
pop
mov
sti
adc
add
mov
xchg
cld
pusha
push
xor
push
xor
push
mov
pop
push
sti
pop
dec
jno
mov
or
push
ret
aaa
int3
dec
cld
pusha
push
xor
push
xor
push
xor
xor
xor
dec
xor
je
dec
fcomip
xchg
mov
popa
push
icebp
es
sub
pop
pop
xor
cld
pop
push
das
arpl
xor
pop
lcall
push
lods
xor
xor
push
sti
pusha
push
xor
push
xor
int
adc
repz
movsb
xor
jne
pop
data16
bound
xor
popf
xor
add
lahf
xor
push
ret
mov
dec
cli
pop
jge
xor
push
and
cli
pop
imul
xor
pop
xor
push
xorl
incl
push
push
xor
add
pop
imul
sub
into
xor
push
xor
push
xor
js
dec
filds
mov
pop
data16
pop
pusha
mov
pop
outsb
adcl
pop
push
jno
pop
push
xorl
push
jno
pusha
push
xor
push
xor
push
xor
jbe
dec
fisttps
shll
add
add
add
sbbl
stc
pop
jne
sub
pop
add
pop
jne
clc
popa
push
icebp
or
add
inc
inc
pop
mov
stc
mov
pusha
push
xor
push
stc
popa
push
stc
pop
jne
push
pop
or
sub
pop
mov
stc
and
mov
mov
xor
push
xor
push
lods
xor
push
xor
push
xor
push
xor
push
jno
pop
data16
pop
adc
dec
inc
pop
mov
stc
les
pop
outsb
push
xor
push
xor
push
xor
push
xor
jbe
add
add
pop
outsb
icebp
and
arpl
xor
push
xor
push
xor
sbb
push
push
mov
aaa
add
addr16
mov
pop
outsb
rcll
inc
rcll
push
xor
mov
pop
outsl
scas
xor
push
cmc
pop
push
xor
push
xor
push
add
jmp
clc
pusha
push
xor
push
sub
pop
push
xor
push
xor
push
xor
sbb
add
into
aaa
add
addr16
negl
adc
icebp
xor
and
pop
imul
mov
pop
mov
add
clc
pop
lahf
pop
push
lods
xor
push
xor
push
mov
pop
dec
cmpsb
negl
adc
pop
dec
mov
pop
andb
fiaddl
pusha
push
jno
pop
imul
clc
pop
inc
xchg
pop
imul
pop
dec
xor
pop
add
or
call
loopne
pop
loopne
dec
mov
pop
xor
sbb
jmp
or
push
jl
pop
loopne
or
push
mov
lahf
loop
pop
ja
sub
ret
dec
dec
inc
pop
xor
je
dec
xchg
dec
add
movsl
or
incl
sti
mov
insb
inc
pop
xor
je
dec
xchg
loopne
or
ljmp
sti
jae
gs
pop
xor
je
dec
xchg
mov
sti
inc
ljmp
adc
jb
inc
pop
cli
inc
stos
inc
inc
pop
stc
xchg
pop
or
jb
inc
pop
cli
repz
xchg
adcb
aaa
incl
xlat
inc
pop
cli
repz
test
jb
inc
pop
cli
ret
sub
pop
xor
pop
lcall
ljmp
cli
subl
add
add
add
pop
xor
pop
lcall
incl
cli
mov
xor
sbb
shrb
xor
mov
pop
xor
pop
sbb
inc
cmp
aaa
incl
stos
mov
pop
stc
xchg
and
or
jmp
xlat
inc
pop
cli
add
outsb
inc
pop
stc
xchg
mov
outsb
jb
inc
pop
cli
mov
dec
inc
pop
notl
incl
xlat
inc
pop
cli
mov
jge
pop
notl
ljmp
xlat
inc
pop
cli
subl
inc
pop
notl
incl
add
xlat
inc
pop
cli
inc
lret
pop
fists
pop
sbb
mov
lods
jne
decl
dec
mov
mov
ljmp
dec
mov
insb
jne
decl
dec
xchg
push
movsl
or
jmp
iret
out
push
test
loope
fistl
jbe
mov
addr16
lcall
inc
pop
notl
ljmp
dec
add
out
adc
mov
add
and
or
push
std
popa
push
cld
pusha
mov
sub
hlt
add
pop
inc
inc
repz
push
or
push
pop
dec
add
bound
lds
fcompl
aaa
push
cli
fisubs
lcall
icebp
push
pop
push
roll
push
fmulp
adc
push
cli
fiadds
lcall
pop
int
insb
mov
mov
add
pop
push
into
adc
mov
cmpl
add
pop
or
into
adc
pop
dec
aaa
push
sub
mov
aaa
push
cmp
dec
aaa
add
ret
dec
dec
aaa
add
add
mov
jg
jbe
push
and
add
mov
or
push
out
adc
dec
aaa
ja
mov
outsl
dec
aaa
add
or
push
mov
js
pop
cltd
and
sti
or
mov
xlat
inc
pop
and
loop
dec
popa
decl
and
loope
dec
popa
decl
and
push
inc
sub
pop
cltd
and
fwait
sti
jne
or
pop
pusha
push
or
decl
inc
inc
pop
and
push
add
bound
cltd
and
sbb
jbe
or
pop
pusha
push
or
incl
add
inc
inc
pop
and
lcall
enter
gs
pop
and
and
adc
xorl
idiv
xchg
fs
mov
xor
pop
dec
fs
mov
xchg
push
sbb
add
mov
outsb
stos
insb
inc
pop
add
adc
pop
mov
xor
push
xchg
pop
pop
aas
sbb
adc
jl
pop
aas
sbb
fcoms
ja
aaa
push
jbe
pop
cmp
fs
test
xor
pop
dec
fs
mov
xchg
push
add
lcall
incl
insb
inc
pop
add
adc
pop
mov
jno
fs
in
pop
pop
aas
lcall
add
pop
pop
aas
sbb
fsubs
ja
mov
add
push
sbb
es
xchg
xor
mov
inc
mov
repz
fistps
xchg
enter
push
ja
dec
pop
sbb
dec
enter
jbe
mov
dec
inc
pop
xchg
add
aaa
decl
gs
pop
leave
or
movsl
or
add
cli
or
add
push
or
inc
pop
mov
pop
sar
or
push
inc
mov
pop
mov
mov
push
push
sub
or
jne
and
and
or
push
jae
ret
jl
repz
bound
inc
pop
and
loop
dec
pop
add
aaa
ljmp
and
loope
dec
pop
add
aaa
loop
dec
pop
and
and
and
leave
or
xchg
or
push
mov
push
or
inc
pop
xchg
and
or
push
jae
js
add
pop
and
push
sbb
adc
xorb
aas
sbb
adc
and
jl
dec
pop
mov
outsb
inc
xlat
inc
pop
and
adc
add
pusha
inc
pop
xchg
and
or
push
push
outsl
dec
lcall
inc
pop
xchg
and
push
cld
adc
mov
pop
add
imul
or
push
and
push
and
insb
and
push
and
inc
and
andl
push
xor
pop
sub
sub
pop
jne
adc
add
xor
pop
sub
bound
add
pop
jae
push
pop
outsl
icebp
addr16
wbinvd
aaa
push
xorl
fs
pause
pop
dec
aaa
push
and
lcall
jmp
xlat
inc
pop
and
add
add
in
inc
inc
pop
sti
push
mov
or
aas
loopne
dec
pop
pushf
cli
or
push
hlt
jl
cmp
and
jbe
and
sbb
mov
xchg
inc
xchg
xor
or
jmp
xchg
loop
or
and
or
push
sub
ja
sbb
adc
add
icebp
inc
pusha
mov
insb
cmp
loopne
dec
pop
inc
jecxz
aaa
ljmp
xlat
inc
pop
lds
xor
or
push
mov
aaa
add
dec
mov
sub
lea
mov
add
inc
jbe
sti
inc
xor
testl
aas
sbbl
addr16
fadds
adc
dec
addr16
add
loop
pop
cmp
add
stos
push
inc
pop
mull
data16
xlat
inc
pop
cli
adc
add
push
add
dec
incl
jge
pop
std
add
arpl
std
adc
test
arpl
cltd
pusha
push
sub
idivl
dec
incl
inc
inc
pop
clc
adc
sarb
aaa
pop
xchg
out
imul
mov
mov
inc
inc
aaa
add
nop
cmc
adc
mov
mov
inc
mov
xor
lds
rorb
cmp
pop
push
cld
jbe
lds
rorb
daa
sub
adcb
jne
lret
push
adc
push
inc
imul
cmp
mov
mov
jbe
add
out
xchg
dec
mov
shll
jae
adc
cld
adc
aaa
add
lret
aas
ss
dec
ret
jno
xchg
add
jns
sar
cmp
adc
add
mov
arpl
cmp
popa
lret
dec
adc
cmp
add
sbb
loop
daa
mov
cmp
sbb
ljmp
shll
test
mov
jmp
mov
ss
pop
lret
repz
in
cmp
dec
ret
add
jb
xchg
shll
add
pop
addb
inc
jae
sub
popl
stc
push
adcl
mov
add
add
mov
ds
adc
add
mov
ss
out
xor
jmp
enter
insl
ret
loopne
adc
hlt
mov
jns
loop
mov
adc
xchg
xor
iret
add
push
lea
cld
cmc
adc
leave
or
inc
pusha
ljmp
fbstp
xor
jno
add
loop
add
add
mov
push
hlt
je
stc
arpl
jp
inc
push
leave
repz
add
repz
rclb
adc
or
ja
pop
lea
fs
push
mov
repz
mov
mov
xor
pop
and
ljmp
leave
repz
add
test
pop
cmp
adc
pop
jmp
outsl
mov
dec
enter
popa
and
test
mov
enter
inc
sub
repz
adc
decl
pop
imul
inc
leave
add
adc
pop
mov
loop
sbb
sub
jo
jae
enter
repz
test
mov
out
cmp
push
adc
dec
popa
push
xor
inc
sub
enter
inc
sub
pop
jmp
jmp
rcrb
xchg
pop
mov
popa
push
loopne
imul
shll
cmc
mov
cmpsb
mov
in
shl
mov
xchg
mov
cld
loop
mov
inc
mov
or
add
cmc
mov
lea
pop
testb
inc
adc
add
mov
jb
loop
add
inc
dec
xor
pop
mov
xor
pop
pop
psrad
mov
in
or
add
out
jp
and
jp
das
aad
jne
cld
inc
not
adc
cmp
inc
add
adc
mov
mov
or
fs
pop
dec
jbe
mov
mov
mov
or
jno
pop
inc
cmp
add
aam
add
xor
sbb
xor
dec
jae
adc
testb
les
loopne
mov
pop
sarl
inc
mov
loopne
dec
lea
roll
mov
push
jno
inc
es
push
or
or
mov
es
inc
rorb
jg
mov
jb
loop
or
and
pop
mov
and
pop
dec
aaa
add
pop
pop
lea
popf
mov
sub
push
sbb
jo
cmp
add
push
jnp
cmpsb
inc
xor
push
movq
aad
aaa
add
jp
loopne
sbb
add
dec
xchg
aad
sbb
push
ja
lcall
add
shlb
loop
outsl
cmp
and
dec
mov
sbb
inc
and
mov
dec
cmc
cmp
and
push
mov
pop
shll
add
inc
cmc
jbe
xor
inc
adcb
js
dec
add
cltd
fwait
aad
addr16
mov
mov
fsubr
xor
je
dec
add
cmc
mov
and
jb
loop
mov
mov
or
jne
rorl
loop
mov
rorl
mov
sbb
nop
in
rclb
mov
cs
lcall
rcl
testb
mov
xor
push
mov
dec
dec
xlat
adc
xor
add
loope
jg
xchg
es
mov
shlb
inc
mov
adc
aas
mov
jae
inc
aaa
add
cmp
mov
add
iret
jmp
xor
loopne
pop
sarl
notb
adc
mov
out
mov
inc
pop
sarl
rorb
xor
cld
inc
mov
lret
mov
inc
add
sub
sbb
bound
pop
mov
mov
nop
or
cmp
xor
sarb
loopne
or
sbb
in
lock
add
sub
outsb
addb
mov
adc
jg
popf
sar
mov
or
inc
sbb
jnp
lods
or
lret
mov
js
or
daa
iret
add
mov
inc
push
pop
pmaxub
jb
fmuls
sbb
movq
push
data16
daa
push
mov
cmp
push
add
push
pop
sti
inc
dec
pop
std
xchg
jno
xor
and
fmuls
mov
cld
pop
sbb
jne
lock
test
in
sbb
sbbl
mov
jne
lock
sbb
push
push
lret
push
mov
push
enter
ss
lock
test
adcl
decl
mov
jle
cmp
cli
add
sbb
pop
fadds
jb
fadds
jne
lock
popf
bound
fwait
dec
insb
ljmp
andl
and
scas
iret
fistl
push
clc
pop
sbb
jne
lock
dec
aaa
add
cld
push
decl
shll
fimuls
outsl
jmp
sub
push
or
mov
jne
ret
add
enter
inc
sbb
add
pop
repnz
hlt
sbb
push
je
es
fmuls
jb
mov
testl
pop
iret
add
jb
fadds
pandn
aaa
add
inc
cld
or
push
sbb
adc
jae
xor
or
add
lock
addr16
fmuls
jb
and
divl
iret
jb
fadds
jne
aas
call
cld
pushf
sti
push
ljmp
sbb
push
push
lock
arpl
inc
pop
outsl
jae
pushf
or
sbb
or
jmp
int
cld
daa
lock
arpl
cmp
clc
cmp
cli
fwait
dec
fmull
fadds
popa
mov
movl
jbe
andl
andb
pop
adc
lock
aaa
add
push
adc
xchg
dec
xor
pop
dec
mov
add
push
adc
pushf
dec
iret
repnz
rcrb
das
mov
pop
mov
inc
addr16
add
aad
sbb
adc
mov
jb
rorb
pop
mov
inc
sbb
xchg
jne
mov
mov
mov
jb
loopne
cmp
xchg
fwait
dec
mov
mov
jle
mov
cmpl
push
mov
icebp
or
jg
jb
aam
in
rorb
daa
and
mov
mov
jo
rol
push
mov
pop
dec
aaa
mov
xchg
sbb
lret
pop
adc
lea
cmp
xchg
cmp
mov
je
mov
dec
sbb
loopne
sub
sbb
fsubrs
mov
mov
cld
add
sarl
test
sbb
rclb
dec
addl
add
add
add
mov
fwait
xlat
or
mov
sbbl
cmp
inc
testb
push
mov
dec
pop
fmull
lods
adc
sub
sbb
sahf
pop
ja
pop
add
jp
rorb
mov
or
and
dec
jg
inc
decl
in
mov
dec
pop
fmull
add
sbb
je
lret
push
sbb
jae
mov
jg
clc
loopne
in
push
sbb
mov
arpl
sbb
gs
jmp
ja
cmp
add
add
add
aas
sar
push
xor
pop
shll
xor
jp
loopne
sbb
rcrb
pop
cmp
cs
pop
mov
leave
cmpb
pop
push
dec
push
hlt
adc
xchg
bound
jb
ja
sahf
pop
inc
cmc
rolb
cs
fwait
jge
sbb
mov
mov
jp
jecxz
jbe
loope
mov
insl
arpl
sbb
arpl
lods
comiss
jno
mov
cs
sbb
das
mov
ja
mulb
mov
cs
sbb
sbb
jbe
mov
add
add
add
mov
mov
dec
mov
mov
jge
lock
aas
xorl
clc
cmp
sahf
cmpb
or
jne
xor
iret
mov
mov
mov
cld
rcrb
mov
jns
ja
roll
pop
test
cld
loopne
sbb
rolb
jb
sarl
dec
mov
mov
dec
aaa
mov
inc
sbb
adc
roll
lret
inc
pop
inc
divb
sar
sahf
pop
lret
jl
inc
inc
shrb
shlb
add
add
add
mul
pop
das
imulb
sub
inc
sbb
cmc
into
add
xchg
sbb
loop
mov
or
add
mov
mov
je
iret
jge
xor
filds
nop
mov
xchg
lock
pop
dec
aaa
add
test
mov
inc
lock
jae
int3
inc
pop
aas
pushl
iret
testb
iret
out
sarl
enter
ja
iret
inc
clc
pop
test
sub
cmp
inc
das
lock
mov
inc
rclb
inc
add
add
hlt
mov
iret
dec
and
jae
mov
fdivrs
psubusw
rol
inc
prefetch
fdivrs
imul
arpl
xor
sbb
sbb
adc
lcall
negb
dec
jne
lds
fdivrs
mov
xor
sbb
sbb
arpl
xor
pop
negb
push
add
js
imul
push
cmp
ja
cltd
dec
sbbl
sbb
xor
pop
negb
push
add
cmp
add
add
add
imul
push
cmp
ja
sbb
sbb
bound
xor
pop
negb
dec
jne
mov
jns
lock
call
cmp
mov
subb
aaa
inc
adc
fistpl
lcall
loopne
cmp
sub
mov
pop
dec
aaa
and
xorb
bound
xor
lds
loop
cmp
jb
xor
dec
imul
inc
cmp
fisttps
mov
push
rorb
aas
ret
rorb
loopne
aas
cmpl
mov
lcall
incl
inc
je
enter
enter
inc
or
call
or
mov
pop
sbb
mov
push
mov
dec
or
shll
leave
cmpsb
inc
add
fwait
popa
movb
dec
mov
imul
sti
dec
aaa
add
dec
push
push
dec
sti
xor
imul
adc
add
mov
mov
fwait
cmp
in
add
adc
add
pextrw
adc
jne
les
movsl
adc
add
les
movsl
adc
add
les
add
dec
les
add
dec
les
in
aas
add
adc
add
adc
pextrw
adc
cmc
dec
les
movsl
adc
add
dec
les
movsl
adc
add
dec
les
add
dec
les
add
dec
les
lods
lret
adc
ja
jbe
test
dec
xor
sbb
dec
push
jge
sub
mov
rorl
add
add
add
les
inc
inc
mov
cmp
enter
mul
dec
inc
icebp
pop
test
hlt
jmp
cs
cmp
add
cs
call
xchg
mov
and
sub
mov
sbb
mov
inc
mov
or
xchg
sub
or
roll
sarb
mov
push
enter
mov
les
negl
loopne
pop
cwtl
sbb
je
inc
mov
out
mov
je
leave
dec
and
adc
scas
inc
add
popa
push
inc
jmp
jmp
outsb
jmp
jne
and
jmp
add
mov
xchg
adc
push
loopne
adc
mov
enter
ds
adc
xchg
pop
dec
aaa
mov
push
jle
cmp
sbb
dec
mov
and
dec
lock
aas
cltd
sbb
pop
loopne
push
jne
sub
sbbl
lock
loopne
jmp
ret
loopne
sub
mov
pop
dec
aaa
add
or
fwait
pop
cmp
pop
dec
mov
or
xchg
sub
add
pop
add
add
dec
aaa
and
mov
xor
jae
mov
mov
cmp
repnz
bound
mov
arpl
lods
jae
xor
mov
daa
adcl
xor
add
inc
mov
add
aaa
xor
mov
pusha
xor
rclb
pop
xor
iret
add
std
jnp
mov
aaa
add
xor
dec
pop
add
mov
xchg
adc
loopne
mov
in
and
push
dec
add
xor
jmp
shl
mov
jae
add
or
add
fs
or
and
or
adcl
pop
and
pop
add
dec
adc
mov
jge
dec
inc
sbb
popf
push
mov
popf
dec
mov
ret
imul
les
rorl
daa
mov
ret
shl
xor
addr16
je
in
push
mov
enter
ja
loop
cmp
rorb
hlt
push
loopne
adc
add
js
add
cwtl
lret
pop
idivb
adc
and
dec
outsb
xor
xor
fcomi
ds
inc
add
fwait
lea
sbb
mov
shlb
sbb
ss
in
push
stos
jno
add
push
add
fwait
dec
sbb
dec
adc
xor
adc
mov
xchg
inc
add
xchg
inc
inc
aas
xchg
add
je
xor
inc
inc
push
loopne
cmp
push
ds
int
adc
xor
gs
orl
xor
add
jl
cmp
jmp
enter
ja
jo
pop
adc
pmuludq
arpl
cmp
std
cmp
popa
lret
dec
adc
mov
arpl
sbbl
jg
pop
std
cmp
sahf
mov
pop
sbb
push
aas
cwtl
jge
lret
dec
sub
fiadds
inc
or
xlat
inc
pop
pop
mov
pop
ret
jb
andb
dec
outsl
ret
jno
push
push
cmp
ret
iret
mov
sbb
jne
bound
add
pop
dec
mov
pop
dec
dec
sbb
xchg
inc
cmc
cmp
or
ljmpw
in
push
sbb
xchg
enter
mov
pop
cmc
cmp
lods
add
mov
mov
ret
fdiv
ds
fadds
test
or
mov
jne
bound
jne
adc
fwait
hlt
adc
incl
inc
fbld
adc
divl
ret
jp
rclb
sarl
xor
loop
faddl
sar
cmp
sbb
mov
add
pop
sbb
test
jmp
out
lret
divl
mov
fistps
enter
jp
sbb
rol
divl
mov
filds
enter
jp
lcall
jne
mov
fildll
insl
enter
divl
sarl
pop
cmp
jp
xor
rolb
push
sar
cmp
and
fistl
mov
pop
add
ds
fadds
xor
or
ds
add
mov
insb
aaa
add
inc
mov
dec
mov
mov
sub
inc
cs
dec
mov
jne
leave
pushl
leave
jp
xchg
fbstp
pop
push
pop
lret
paddusw
aaa
add
fmull
loopne
iret
mov
sar
lret
inc
aaa
add
std
into
cmp
hlt
xor
dec
and
loopne
sub
mov
enter
movsl
std
or
mov
push
test
dec
pusha
push
add
jmp
repz
jb
jne
mov
add
add
add
jo
rorb
xchg
jne
lret
pop
incl
fucomi
add
das
sbbb
xor
cmove
add
xchg
dec
hlt
pop
cmc
cmp
arpl
mov
pop
imul
test
xor
dec
mov
pop
adc
mov
mov
mov
adc
jns
out
roll
jns
call
push
scas
xor
pop
shll
xchg
call
sbb
sbb
ret
cmp
popa
xor
je
in
sub
inc
add
pop
shll
cwtl
adc
in
fcomps
push
and
dec
or
mov
jne
loopne
pop
subb
pop
add
push
test
aaa
inc
mov
repz
mov
fcomps
fsubrl
push
sbb
fucomip
push
push
pop
mov
divl
jp
cld
jne
xorl
inc
pop
sbb
lret
cltd
fsubrl
andl
aaa
mov
lret
add
fidivs
mov
mov
cli
aaa
mov
leave
call
xor
lret
cli
add
aaa
addl
ljmp
test
gs
aaa
inc
push
lret
add
sbb
xor
repz
aaa
xor
leave
lcall
outsb
test
fidivs
mov
stc
jne
jno
hlt
push
aaa
repz
leave
fmul
repz
mov
loop
lret
mov
test
std
mov
outsb
pop
mov
rcr
lret
mov
dec
jb
std
mov
pop
fimuls
lret
xchg
jmp
jb
cld
fs
inc
add
lea
add
jb
cld
cmp
outsb
pop
fimuls
lret
jp
jmp
cld
adc
outsb
pop
mov
rcr
lret
jle
ljmp
mov
pop
fimuls
lret
andb
jb
cld
les
pop
mov
loop
lret
xchg
insb
jb
cld
pushf
outsb
pop
fimuls
lret
bound
inc
jb
cld
je
outsb
pop
mov
rcr
lret
xchg
mov
cld
pop
int
add
mov
je
and
test
mov
add
jmp
shrl
ficomps
sbb
lea
enter
fs
add
lret
in
lret
fsubs
je
lret
jp
aam
les
dec
push
inc
pusha
fsub
sub
das
add
jne
shrb
pusha
pop
inc
add
xchg
add
jne
addr16
xchg
arpl
fmuls
xor
push
push
faddl
adc
ficomps
fsub
push
add
inc
enter
ljmp
enterw
mov
pop
fidivs
andl
sbb
pop
mov
push
rorb
aas
add
add
dec
inc
jp
pop
adc
dec
jp
dec
andl
jae
mov
push
pop
roll
rorb
arpl
divl
xor
push
xchg
gs
mov
cmovle
in
inc
mov
inc
dec
inc
sbb
add
push
inc
mov
decl
adc
popa
ss
leave
jp
xor
dec
cld
pop
fildll
mov
push
pop
adc
xlat
inc
test
scas
mov
je
sarl
loop
mov
pop
adc
aas
push
mov
testl
add
add
add
pop
lcall
pusha
push
or
pop
mov
loop
lea
jecxz
call
dec
xchg
mov
aaa
and
bswap
mov
ret
or
std
add
nop
pop
inc
add
popf
and
dec
pop
pushf
inc
pop
mov
inc
pop
faddp
mov
iret
popa
dec
movsb
sti
pop
push
lods
shll
movsb
aad
js
aad
sub
dec
jns
test
cld
aam
add
fmuls
mov
pop
adc
stc
mov
mov
add
push
pusha
xor
mov
mov
jno
pop
or
push
or
xor
arpl
arpl
pushl
in
xor
or
pusha
enter
mov
cmpsl
dec
mov
adc
cmp
pop
dec
inc
add
insb
lea
jb
cli
in
outsb
pop
mov
fmuls
decl
stc
mov
mov
fmuls
jmp
fdivr
xchg
bound
mov
fmuls
call
add
xor
lock
iret
or
dec
pop
cltd
mov
jb
stos
popa
add
pop
fs
mov
cmpsl
dec
mov
and
jb
mov
call
mov
mov
popl
lret
cld
jne
cmp
and
inc
daa
cmp
jne
hlt
lods
pop
fiadds
aas
push
les
ffreep
ret
pop
adc
divl
cld
pushl
cmp
pop
push
roll
inc
add
ret
push
push
jmp
jb
stc
fs
outsb
pop
mov
fcoms
jne
add
jb
orb
je
pop
jb
arpl
xor
add
inc
push
cli
add
into
decl
mov
xchg
lret
hlt
je
test
xlat
cmp
inc
add
insb
mov
dec
ss
push
aas
push
les
ret
pusha
enter
divl
cld
call
pop
dec
mov
cmp
add
push
aas
mov
ss
add
hlt
pop
or
negl
fbld
fidivrl
push
xor
add
dec
movsl
roll
jo
inc
add
and
cmpsb
push
add
mov
push
xchg
xchg
cmpsb
shll
cmp
xlat
cmp
add
mov
pop
fwait
cmp
sbb
push
enter
mov
es
dec
outsb
mov
mov
pop
cwtl
shll
pop
rcrl
dec
cmpsb
adc
repnz
jecxz
mov
pop
cld
callw
aaa
add
xchg
idiv
cmp
bound
loopne
aas
data16
lea
xchg
push
mov
imul
loope
call
jb
jne
jp
jge
jmp
add
jno
data16
mov
lret
xlat
pop
pop
mov
push
push
add
cmp
add
push
lcall
loope
cli
push
mov
pop
enter
ja
loopne
iret
mov
pop
inc
and
dec
mov
push
pop
mov
and
pop
lret
pop
dec
aaa
add
movsb
ja
pop
dec
aaa
push
rcr
adc
pop
inc
sub
test
inc
xlat
js
stc
inc
mov
add
adc
pop
add
add
jne
or
xchg
inc
idivb
pop
cltd
inc
aaa
push
and
into
lea
add
xor
test
mov
mov
pop
iret
addb
aaa
mov
divl
fidivrs
dec
aaa
pop
fsubs
pop
or
es
cld
pop
pop
mov
jecxz
aaa
add
xor
mov
push
xor
pop
stc
mov
add
dec
aaa
adcl
dec
in
into
ja
pop
dec
mov
pmaxub
xor
pop
leave
dec
add
aad
push
ret
sbb
dec
add
orl
cs
mov
lods
aad
lea
mov
add
jb
add
dec
mov
jl
jno
pop
shll
loop
add
std
shlb
enter
dec
mov
add
and
pop
dec
mov
add
sub
pop
dec
mov
add
adc
pop
dec
mov
add
sbb
pop
dec
fsubrl
dec
frstor
push
repz
call
outsl
xor
test
sti
les
mov
adc
pop
add
or
push
in
add
mov
add
cli
mov
aaa
jae
into
pushl
in
or
add
jb
or
jb
or
call
fadds
cmp
pop
inc
aaa
add
xor
pop
iret
xor
pop
inc
hlt
sbb
fists
pop
dec
mov
push
popl
push
dec
aaa
jmp
in
aam
call
rorb
xor
add
incl
pop
add
jb
cmc
mov
pop
jb
daa
dec
enter
cmp
mov
cmp
pop
int
cld
sub
fiadds
add
pop
add
jo
add
and
cmp
aaa
push
cmp
add
movl
jne
int
add
addr16
andl
inc
push
jge
iret
das
xchg
inc
lock
mov
or
push
add
add
insl
test
loopne
push
sub
dec
outsb
pop
fimuls
int3
inc
pop
add
cmc
jbe
aaa
pop
add
divl
loop
sti
sbb
call
and
mov
pop
dec
mov
lea
dec
sbb
push
mov
push
inc
popf
lock
pop
mov
test
mov
jmp
and
cs
icebp
inc
adc
add
inc
adc
add
pop
inc
psubusb
je
int
or
mov
push
fistps
mov
popa
adc
jecxz
int
cltd
mov
add
mov
mov
arpl
cmpb
cmpl
mov
pop
inc
lock
add
aaa
add
jnp
pop
fadd
cmp
pop
dec
pop
or
aaa
je
lret
mov
add
addl
pop
dec
sbbb
mov
add
or
xor
mov
add
pop
dec
mov
call
iret
push
enter
jecxz
into
or
jecxz
loop
out
decl
xlat
inc
pop
ret
jb
loopne
xlat
mov
cmp
sbb
aaa
mov
sub
and
xor
pop
sarl
sub
mov
pop
dec
aaa
mov
or
mov
ret
loope
xor
roll
push
xchg
mov
jne
icebp
add
call
add
prefetch
aas
add
or
ret
sbbl
add
add
add
or
fcomi
jmp
rcr
pmulhw
push
add
cmpl
jno
mov
pop
lret
fmuls
mov
push
mov
lea
cmp
ret
loop
inc
loopne
in
shll
loop
inc
loopne
cmp
rcr
mov
push
loop
ret
call
mov
leave
pop
add
mov
and
dec
aaa
test
sbb
mov
dec
cmp
arpl
pmulhw
xor
loop
inc
loope
jns
cmp
add
fmuls
ret
call
loop
daa
add
mov
xchg
inc
dec
aaa
add
int3
add
sbb
dec
dec
dec
testb
add
in
stc
xor
cmp
lret
add
aaa
sar
cmp
sbb
or
sti
fisubrs
loop
das
add
mov
add
rolb
bound
lock
adc
test
aaa
add
mov
mov
rcrb
movsl
loopne
rorl
pop
arpl
sti
jl
popl
pop
dec
aaa
mov
inc
xor
pop
cmc
add
push
aam
dec
aaa
adcl
xor
in
fisubl
add
dec
xchg
sub
aaa
xor
ret
lods
mov
dec
or
push
inc
adc
sti
or
xor
inc
or
pusha
incl
inc
pop
inc
orb
int
pandn
icebp
mov
into
das
das
dec
push
andl
jne
pop
fwait
cmp
call
inc
mov
clc
or
mov
dec
enter
fisubs
dec
aaa
xor
in
mov
incl
add
enter
pop
lcall
mov
outsl
out
add
jne
mov
push
push
enter
cs
into
pop
lret
mov
orb
sarl
sbb
push
test
mov
ja
cmp
push
cmc
out
lret
add
loopne
xor
leave
push
pop
mov
repz
pop
lret
add
push
xchg
ljmp
inc
pop
int
dec
inc
pop
add
mov
incl
inc
pop
lds
jl
cli
pop
add
add
hlt
push
rcrb
in
arpl
pusha
mov
mov
mov
inc
mov
add
pop
iret
mov
mov
sbb
pop
aas
mov
or
sub
ret
sub
inc
aas
and
aaa
add
negl
or
cmp
push
int3
movsb
add
mov
push
inc
cmp
rolb
cmp
arpl
jo
loopne
iret
mov
vmovntps
xor
mov
pusha
ljmp
enter
aaa
mov
cmp
add
mov
enter
add
rolb
lret
mov
les
loop
cmp
push
lds
fadds
xor
cltd
add
add
cltd
int3
dec
adc
jb
out
cmp
fmul
add
lea
ret
jb
xor
xor
pop
aas
addl
or
mov
dec
aaa
add
sub
iret
dec
aaa
add
add
mov
adc
jp
test
ds
pop
dec
jb
fadds
cmp
push
inc
add
inc
shl
inc
mov
mov
ds
rcrl
test
cmp
sbb
inc
arpl
jb
push
cwtl
aas
mov
bound
inc
push
shll
xor
pop
dec
fidivs
dec
enter
rol
pop
cmpl
mov
add
or
pop
dec
aaa
add
pusha
push
dec
rol
aad
mov
mov
aas
jmp
int
pop
dec
xor
pop
xchg
pop
dec
aaa
jmp
fmul
into
add
add
mov
add
add
add
add
cld
ds
aaa
lcall
push
in
push
add
mov
arpl
inc
arpl
jb
leave
js
add
lcall
loopne
aas
add
shl
sahf
inc
cmp
push
shll
aas
pop
dec
aaa
add
adc
xlat
shll
pop
shll
xchg
aaa
mov
inc
mov
imul
mov
xlat
or
ds
jb
push
shll
aas
jb
shll
lret
push
cmp
lcall
or
pop
add
fisttpl
or
inc
mov
add
cmp
fsubrs
mov
ret
je
adc
xor
pop
dec
fisubs
dec
enter
mov
pop
dec
aaa
mov
mov
enter
dec
clc
pop
cmp
aaa
mov
dec
cmp
fsub
add
jb
pushf
push
lret
sbbl
aas
mov
inc
push
inc
push
fsub
mov
xchg
sbb
inc
pop
sarl
cmp
out
cmp
aas
pop
inc
aaa
add
js
rorb
jb
add
jo
inc
push
rolb
sbb
sbb
jb
loopne
movl
or
jo
mov
inc
out
dec
add
cmp
test
dec
mov
or
inc
sub
inc
mov
inc
adc
jns
shrb
inc
sbb
adc
mov
sbb
fimuls
mov
popa
push
jae
jmp
xor
add
mov
dec
movntq
pop
cmc
dec
inc
inc
mov
mov
out
dec
mov
pop
cmp
and
sub
out
push
pop
cmc
dec
lock
add
mov
jmp
mov
cmp
cld
movb
ret
les
mov
pop
jg
push
push
or
jg
xor
stos
dec
jl
cmp
decl
aaa
add
divl
mov
inc
push
rolb
pop
mov
or
iret
pop
mov
add
push
aad
sub
or
shlb
pop
xor
mov
enter
mov
xor
push
cmp
or
faddl
sbb
ja
add
loop
ret
cmp
jb
inc
mov
in
mov
fmull
rclb
xor
push
ds
push
into
mov
pop
dec
mov
dec
dec
mov
inc
adc
adc
rorb
int
pop
rcl
sti
inc
dec
pop
rorb
mov
sbb
mov
mov
aad
sub
xor
xchg
push
popa
push
shlb
enter
cmp
movsl
inc
rorb
mov
or
nop
sub
cmpsb
adc
pop
dec
add
aaa
sbb
dec
pop
std
xor
add
aaa
add
aaa
jmp
dec
inc
adc
push
inc
or
mov
or
lcall
rcrl
movsl
lahf
fbstp
test
les
pusha
xor
shll
loopne
aas
mov
js
loopne
lret
mov
je
mov
imul
aam
lock
aaa
add
dec
fidivrs
jne
aaa
hlt
insl
mov
stos
mov
add
sbb
aaa
xchg
sbb
sbb
aaa
xchg
mov
push
shlb
mov
das
fwait
popa
mov
push
mov
jge
shrl
shlb
inc
aaa
shll
loop
aas
mov
shll
loop
iret
cmp
mov
mov
jmp
sarl
inc
adc
dec
jmp
xor
inc
dec
mov
and
mov
mov
shrb
loopne
sbb
shlb
inc
push
shll
loop
add
xor
fiaddl
imul
shlb
fs
mov
adc
add
aaa
pmovmskb
xor
pop
push
addl
mov
inc
in
push
aas
inc
fmuls
cmp
mov
mov
pop
rclb
mov
pop
sbb
addl
mov
mov
aaa
dec
dec
xchg
adcl
aas
rol
lock
bound
add
aaa
mov
leave
idiv
icebp
inc
ficomps
enter
xor
pop
mov
cli
add
pusha
lea
lea
lea
sub
incl
and
sar
cmpsb
sub
jne
xor
fisttpl
jo
or
test
aaa
add
mov
add
mov
add
xor
pop
dec
fsubp
push
dec
aaa
xorl
xor
push
push
mov
pop
lcall
or
dec
add
mov
add
dec
mov
xor
aaa
add
add
addl
push
xchg
lret
sarl
push
jb
cwtl
cmc
or
xchg
cmp
loopne
aas
mov
inc
enter
ficoms
push
adc
test
mov
add
xor
shlb
loop
aas
cmp
dec
outsl
jmp
iret
jo
les
sub
fsubrs
xor
pop
dec
mov
scas
dec
cmp
adc
test
dec
aaa
add
xchg
sbb
stos
mov
mov
je
shll
call
shll
inc
dec
sbb
loop
movl
loopne
iret
push
test
jo
xor
lcall
js
loop
daa
mov
shll
inc
or
or
jmp
aas
mov
pushf
mov
add
mov
or
das
pop
mov
sub
xor
stos
shlb
fadd
movl
pop
dec
mov
cld
fsubrs
cmp
ss
hlt
int
mov
hlt
mov
clc
inc
adc
pop
aad
hlt
jb
lret
add
into
repnz
and
inc
push
push
mov
pop
dec
aaa
jmp
rorb
dec
cld
pop
push
mov
pop
dec
aaa
prefetchw
imul
mov
xlat
or
push
je
lcall
add
add
add
push
or
enter
mov
mov
push
mov
pop
dec
aaa
shll
loopne
int
sbb
pop
dec
pop
add
lds
add
aaa
push
sub
pop
decl
jo
fimuls
cmp
scas
aas
push
fsubrs
aas
add
xor
pop
dec
fmull
mov
jmp
int
cld
pop
push
mov
pop
dec
aaa
syscall
dec
mov
dec
dec
enter
xlat
or
push
je
lcall
add
and
jno
rorb
clc
add
push
dec
imulb
dec
mov
push
shll
mov
cmpl
imul
push
lret
testb
aas
jb
xor
mov
inc
les
sarl
fsubs
add
aas
cmpl
jb
xchg
enter
js
mov
push
mov
inc
or
dec
xor
pop
dec
fists
aas
enter
mov
repnz
pop
imul
pop
dec
ficomps
pop
dec
aaa
mov
mov
jne
pop
dec
cmp
fsubs
lret
sarl
push
add
bound
cwtl
lret
jno
push
xorl
stc
aam
pop
imul
and
mov
sarl
rclb
sbb
lods
aas
mov
jno
or
xchg
mov
jno,pt
mov
aaa
add
int3
adc
inc
pop
pop
adc
xor
sbb
leave
fadds
pxor
mov
add
jns
jo
mov
ja
cmp
clc
and
imul
dec
sbb
or
dec
aas
mov
andl
push
in
add
push
sarl
test
sub
cmp
mov
mov
xchg
mov
shl
rol
mov
insb
leave
pop
xor
pop
dec
aaa
mov
cmp
jo
cmp
fdivrs
mov
pop
dec
mov
pop
dec
aaa
mov
faddl
sub
mov
mov
cmp
mov
add
adc
jmp
fsubrs
sub
pop
dec
push
inc
push
dec
mov
adc
inc
mov
outsl
dec
pusha
incl
fwait
add
mov
dec
jmp
mov
jbe
sar
rol
mov
mov
pop
dec
aaa
push
xchg
xchg
or
aaa
push
cmp
add
fistpll
scas
cmp
sbbl
testb
mov
enter
inc
aam
mov
dec
fbstp
push
mov
dec
mov
pop
dec
enter
jo
and
pop
incl
xor
pop
dec
mov
adc
test
mov
iret
jno
rolb
xor
cmpl
push
inc
mov
add
add
add
add
adc
pushl
pmaxub
adc
enter
mov
test
mov
mov
ds
or
test
pop
add
js
loop
cmp
inc
jg
jae
outsl
testb
mov
andl
cmp
fsubs
mov
into
or
cli
hlt
cmp
or
cmp
mov
shll
loopne
cmp
pop
dec
fiadds
mov
lods
cmp
push
push
dec
aaa
add
add
add
add
das
add
xor
stc
test
enter
out
je
lock
bound
add
aaa
jmp
into
dec
hlt
dec
shlb
int
enter
pusha
and
xchg
lock
bound
add
ret
jmp
adc
cmp
test
push
aas
lds
adc
add
lock
push
or
inc
pop
ret
jo
rorb
mov
add
or
ss
arpl
jno
add
daa
push
rclb
enter
and
xor
fdivs
out
push
pop
dec
aaa
add
add
mov
xor
rclb
enter
add
inc
jae
xor
ret
js
rolb
mov
add
add
psrld
dec
push
lds
loop
add
fs
jmp
adc
or
aaa
push
and
clc
int3
cmp
xchg
pop
mov
cli
pop
mov
loopne
mov
scas
sbb
mov
into
and
aaa
adc
adc
mov
fisttpl
xor
sbb
or
test
add
aaa
add
dec
aaa
add
mov
sbb
int3
pop
cmpsb
inc
mov
sbb
dec
mov
or
pop
dec
enter
jp
pop
ret
jo
or
test
dec
aaa
add
mov
dec
les
mov
mov
dec
mov
add
sub
lcall
lret
adcb
lock
arpl
xchg
add
mov
add
or
cmp
popa
lock
arpl
mov
pop
dec
lock
aaa
add
xor
add
pop
dec
aaa
mov
inc
mov
mov
inc
sbbl
lcall
add
cmp
rorb
mov
or
adc
dec
fidivrs
pop
dec
aaa
negb
push
cmp
icebp
inc
lock
add
and
add
mov
dec
pop
fbstp
ss
repnz
xor
jo
loop
mov
add
and
add
mov
xchg
sti
fdivs
add
jo
fiadds
add
add
add
xor
xor
fistpll
adc
leave
dec
or
mov
aaa
add
incl
pop
dec
lock
aaa
add
mov
test
dec
aaa
mov
inc
mov
shrd
loopne
ret
jne
loopne
sub
push
ror
pop
inc
aaa
add
jo
fimuls
cmp
inc
jg
xchg
inc
mov
or
mov
sar
ss
push
shll
dec
mov
add
mov
je
sarl
int3
mov
mov
add
jo
lcall
inc
inc
xor
aaa
or
aaa
mov
xchg
loop
xor
movsl
inc
mov
or
mov
lcall
jle
loopne
or
push
inc
mov
pop
dec
aaa
mov
ss
rorb
add
mov
cmp
inc
mov
std
xor
push
xchg
push
mov
rorb
dec
aaa
add
mov
test
push
jg
sbb
mov
mul
inc
shll
mov
add
call
lret
pop
inc
aaa
add
jo
fimuls
inc
ret
loopne
jg
sbb
inc
orl
cmp
dec
push
mov
mov
add
mov
je
mov
aas
mov
mov
aas
add
xor
mov
or
add
sbb
into
pop
inc
xor
loop
xor
in
mov
or
mov
lcall
jle
loop
pop
pop
dec
aaa
add
xor
jmp
mov
mov
add
mov
das
je
mov
cmpl
enter
sub
pop
ds
add
testl
movsl
lret
xor
fiadds
aaa
inc
nop
mov
in
cmpsl
mov
adc
xchg
mov
mov
mov
mov
pop
mov
xor
daa
mov
mov
mov
mov
push
mov
push
out
adc
dec
popa
mov
scas
mov
out
dec
add
orb
jl
popf
pusha
push
inc
dec
aad
dec
adc
outsb
cmp
add
xor
xchg
scas
pop
add
enter
mov
dec
mov
jo
cwtl
fbld
xor
pop
xchg
divb
imul
cmp
aam
outsb
pop
or
rorb
addr16
ret
xor
ljmp
xor
lods
mov
call
and
mov
push
jnp
enter
divb
imul
inc
or
lods
pop
add
dec
inc
pop
sbb
dec
cltd
sbb
enter
addr16
add
add
xlat
incl
outsb
test
mov
mov
lcall
adcb
pop
dec
mov
fistpll
das
enter
divb
imul
mov
cmp
or
or
inc
push
pushf
test
insb
das
enter
bound
popa
call
mov
fdivl
fisttpl
add
mov
mov
shll
xchg
cmp
out
ds
add
adc
mov
xor
and
in
add
outsb
mov
xchg
push
je
or
dec
data16
test
mov
push
xchg
imul
das
inc
popa
call
xor
add
hlt
bswap
ljmp
dec
outsb
pop
sub
imul
or
add
nop
xor
rcl
jmp
orb
jl
inc
pusha
call
cmpb
or
xchg
fbld
imulb
mov
addr16
pop
cltd
lock
pusha
push
ret
sub
pop
cmpb
daa
xor
add
add
pop
dec
outsb
mov
inc
mov
cld
loop
mov
dec
inc
or
and
dec
outsb
push
xchg
pop
dec
aaa
mov
mov
lods
jbe
dec
scas
ret
push
bswap
or
mov
ret
js
loop
das
cmp
mov
lea
mov
ret
push
jmp
xchg
mov
inc
lock
sbb
add
outsl
inc
rolb
mov
xor
mov
xor
mov
mov
add
faddl
roll
add
addl
enter
orl
ds
js
jbe
xchg
mov
addr16
addr16
mov
dec
push
outsl
shll
or
loopne
aas
pextrw
dec
mov
cmp
push
repz
push
sub
xchg
xchg
inc
call
mov
mov
arpl
inc
arpl
xchg
aas
jl
or
adc
hlt
push
loopne
push
rclb
mov
cld
push
adc
popf
dec
aaa
mov
inc
or
out
inc
pop
lcall
popa
mov
add
lods
or
into
inc
pop
lcall
pop
pushf
mov
dec
mov
jne
ja
jmp
loopne
cmp
cmpsl
sarl
add
loop
and
lods
and
fst
xor
mov
push
mov
arpl
test
dec
aaa
add
subl
cmp
mov
pusha
add
xor
add
mov
cmp
dec
addr16
test
enter
mov
fs
insl
add
enter
ss
cmp
fistps
push
sub
add
adcl
mov
pop
pop
mov
pop
dec
aaa
add
lret
pop
aad
mov
sahf
push
xorl
test
mov
cmp
adc
add
jmp
cmpl
dec
cmp
push
inc
nop
dec
mov
dec
mov
and
aaa
dec
mov
pop
xor
push
inc
js
loop
xor
mov
cld
add
dec
fs
lahf
push
mov
gs
aad
xor
iret
jbe
add
js
rcll
mov
mov
imul
decl
movsl
sub
sub
push
jle
jae
adc
test
add
shlb
rorb
repnz
xchg
test
ds
dec
loopne
and
pop
dec
faddl
daa
mov
inc
mov
add
dec
addr16
shrb
enter
jno
and
addr16
inc
test
add
lret
dec
clc
pop
shll
loopne
imul
je
lret
dec
clc
pop
popf
add
add
aam
leave
inc
lret
dec
clc
pop
popf
adc
cld
inc
add
xor
andl
outsb
jmp
shll
or
popf
dec
ss
shll
add
mov
adcl
aaa
add
mov
pushf
add
popa
call
sbbb
dec
aaa
jmp
xlat
inc
pop
shl
lea
mov
adc
xor
clc
dec
fbstp
add
inc
push
add
inc
pop
and
add
int
jne
jle
aad
aad
pop
in
addl
push
inc
pop
add
dec
pop
add
decl
xlat
inc
pop
lret
into
dec
dec
popl
pop
dec
xor
adc
mov
filds
es
mov
mov
inc
imul
push
repz
int
cld
shll
notl
inc
mull
orb
pop
dec
faddl
pop
subl
out
outsb
sbb
mov
mov
pop
dec
aaa
add
jb
inc
pop
pop
repnz
cli
xor
pop
leave
mov
pop
dec
add
aaa
add
shrl
push
add
lds
mov
push
dec
aaa
add
add
mov
xor
add
mov
pop
dec
aaa
mov
xor
jo
loopne
ljmp
mov
cld
popf
aas
ljmp
and
mov
js
fsubl
add
sti
or
cmpsl
daa
push
mov
call
ljmp
adc
mov
dec
adc
sbb
mov
dec
aaa
add
xor
pop
shlb
jmpw
jns
ss
lret
incl
add
adcl
mov
les
xor
pushl
js
sub
mov
aam
inc
pop
push
dec
aaa
test
aaa
add
cmc
xor
pop
push
testl
dec
dec
int3
add
ret
add
dec
add
sahf
aas
ljmp
xchg
loope
and
pop
iret
mov
push
dec
aaa
andl
cmp
inc
mov
filds
and
jmp
and
call
mov
xor
sarl
dec
icebp
mov
call
and
add
add
add
add
je
mov
pop
dec
aaa
add
incl
cmp
inc
sahf
and
je
lods
mov
addr16
push
adcl
jne
ja
add
lea
ss
enter
fdivrp
pop
dec
aaa
xor
aaa
add
test
add
addb
push
push
cmp
push
adcl
push
mov
into
pop
into
dec
mov
mov
test
scas
es
add
or
data16
inc
add
fwait
test
iret
outsb
sbb
pop
jecxz
pop
xor
test
aaa
add
xchg
mov
add
mov
add
mov
pop
dec
aaa
push
or
and
jp
aaa
adc
pop
jp
call
fadds
sub
insb
jns
mov
dec
aaa
add
testb
dec
pop
add
ja
cmp
pavgb
int3
dec
mov
dec
mov
add
add
jno
xor
push
mov
xchg
add
push
andl
inc
and
mov
pop
dec
aaa
pop
dec
inc
push
cmp
adc
pop
push
mov
lods
and
data16
cld
add
or
decl
incb
pop
dec
addr16
fimuls
add
mov
incl
inc
pop
int
enter
push
lods
xor
in
and
sub
enter
aaa
add
adc
enter
ss
pop
dec
push
mov
outsb
dec
fs
adc
inc
pop
dec
aaa
mov
mov
decl
pop
add
mov
enter
mov
add
dec
lret
xchg
daa
pop
mov
pop
push
mov
inc
mov
mov
loopne
dec
mov
out
mov
in
inc
pop
push
inc
mov
pop
dec
xor
imul
test
aaa
add
addr16
xlat
dec
xor
pop
xor
fnstenv
test
int
test
dec
aaa
push
in
mov
inc
pop
lret
mov
push
dec
aaa
add
enter
and
mov
jmp
sub
movsb
push
mov
lea
addb
dec
add
mov
popl
mov
rol
sbb
enter
add
dec
std
jmp
inc
enter
xor
lock
es
pop
negl
mov
mov
repz
add
jnp
pop
dec
fisttps
dec
aaa
pop
rclb
mov
cld
pop
std
je
sbb
out
mov
pop
sar
cmp
dec
sar
decl
push
fists
nop
sbb
jbe
or
ficoms
push
loopne
test
xor
pop
addl
add
pop
or
and
add
lock
aaa
add
cltd
xor
ds
aaa
add
sbb
xor
xchg
decl
sbb
daa
ret
xchg
fimull
inc
popl
pop
dec
aaa
jmp
leave
push
add
popl
pop
push
aaa
jmp
sbb
xor
cs
decl
dec
fbld
sbb
mov
push
or
add
je
ss
enter
fbstp
pop
aaa
hlt
push
rcrb
inc
or
dec
aaa
add
push
aas
lcall
add
add
add
fcomps
je
loop
add
fsubr
lods
iret
aas
add
or
enter
jbe
ficoms
push
rorb
add
xor
pop
andl
cli
bound
inc
pop
subl
shrb
mov
addr16
inc
or
insl
insl
data16
mov
pop
adc
push
loopne
add
fs
aas
andl
add
pop
hlt
xor
ss
mull
dec
jle
mov
and
in
dec
push
mov
push
mov
jno
push
sbb
movsl
jge
or
push
add
loopne
mov
dec
push
mov
test
popf
xor
mov
jmp
mov
decl
mov
pushl
hlt
cmp
add
repz
xor
or
cs
ficoml
iret
inc
or
mov
mov
push
mov
and
or
dec
aaa
add
adc
add
inc
pop
fcoms
sbbl
popa
xorl
out
push
leave
pop
lods
lahf
aas
pop
movsb
ja
cmp
negl
aaa
add
and
repnz
mov
pop
int
or
les
mov
nop
rclb
lea
pop
dec
aaa
add
inc
or
sub
xchg
sbb
test
ja
mov
adc
mov
nop
jl
mov
nop
inc
je
add
je
add
jae
add
mov
inc
pop
ret
rorl
mov
add
adc
and
int3
or
and
dec
insb
inc
pop
jge
cmp
mov
inc
pop
or
add
nop
adcl
int
dec
lock
movsl
les
add
mov
nop
js
mov
pop
or
add
add
adc
adcl
and
dec
insb
inc
pop
jge
jo
ja
xorl
jnp
ja
xorl
sub
add
jne
add
jne
add
jne
add
mov
in
mov
call
loop
mov
lock
mov
hlt
rorb
mov
cld
loop
mov
add
aaa
add
mov
mov
add
ja
inc
jae
add
ja
rorb
add
hlt
nop
loope
mov
pop
cld
add
nop
loope
mov
mov
push
add
dec
mov
mov
outsl
add
mov
pop
movsb
add
nop
into
popf
push
cld
out
push
cld
in
xor
pop
dec
inc
and
and
stc
arpl
pushl
xchg
pop
sbb
jmp
imul
jge
loopne
lea
pop
dec
aaa
addl
xor
mov
jb
add
mov
ja
xor
add
add
ja
rorl
add
and
shll
mov
pop
leave
int
mov
leave
repz
enter
push
pop
jge
loope
xor
or
outsl
add
mov
inc
pop
leave
fadds
fsubs
inc
mov
outsb
mov
nop
rorl
add
mov
inc
pop
or
add
lea
addl
int
push
enter
adc
enter
push
pop
jge
cmpsl
jbe
add
jbe
add
jbe
add
xchg
jbe
add
jne
add
jne
add
lea
sbb
lea
sbb
lea
adc
lea
adc
lea
or
lea
or
lea
add
dec
mov
add
mov
mov
add
ja
add
ja
add
lea
pop
pushf
add
nop
loope
xor
xchg
inc
mov
leave
sbb
jge
loope
xor
xchg
inc
mov
add
lea
pop
xchg
add
nop
add
loope
xor
pushf
inc
mov
add
mov
mov
mov
leave
cwtl
mov
xorw
aaa
push
lret
push
pushf
popf
cmp
push
inc
pop
dec
aaa
mov
sbb
sbb
lret
je
and
or
out
dec
aaa
mov
or
sbb
jbe
inc
mov
inc
or
sbb
fcoms
lcall
call
xchg
push
cld
pop
jl
mov
rorb
push
sub
repz
add
outsb
pop
xchg
mov
mov
enter
aaa
add
xchg
roll
es
enter
cmp
cvtdq2ps
ret
and
xchg
jne
pop
adc
fs
aaa
test
aas
aaa
add
sbb
adc
stos
and
or
dec
mov
sbb
hlt
mov
pop
add
vpsubsb
aaa
add
adc
fwait
dec
mov
add
emms
add
ljmp
loopne
popa
mov
or
and
mov
call
movsl
xchg
add
dec
popa
call
add
xor
lock
cs
add
adc
outsl
js
jne
vpsubsb
aaa
add
mov
add
vandnps
sbb
cmp
scas
inc
fildll
dec
aaa
pop
fimuls
inc
nopl
aaa
add
add
notb
or
dec
mov
mov
jne
int
dec
sbb
aaa
add
ficoms
enter
jbe
mov
sub
pop
jae
lea
push
fisttps
scas
cmp
out
ret
push
orl
pop
mov
pop
xorb
add
push
jae
sub
in
ret
inc
or
dec
inc
and
inc
fists
dec
aaa
pop
fsubs
sub
pop
dec
outsb
mov
adc
cld
and
add
mov
sbb
hlt
push
and
push
pop
dec
outsb
ret
loopne
bound
push
lret
enter
xchg
add
fs
rorb
loopne
dec
mov
pop
mov
pop
xchg
das
call
icebp
das
cmp
push
jae
sub
pop
jno
mov
fcoms
ss
add
push
ret
lock
pop
testl
dec
inc
or
movd
or
pop
cmp
pop
lar
aaa
incl
out
test
jo
add
inc
xor
ficompl
fwait
xchg
cmp
xchg
push
enter
aaa
add
pop
fistps
dec
aaa
mov
outsl
mov
push
jae
sub
pop
jno
dec
pusha
dec
aaa
pop
ds
add
negl
or
int3
daa
cli
int3
pop
cli
int3
rolb
adc
pusha
add
add
rolb
cmc
adc
shl
repnz
fs
ss
loopne
adc
les
xor
and
daa
add
or
jno
or
imul
cmp
std
je
cmp
mov
shl
xor
mov
movsb
mov
out
cmp
sub
jne
mov
subb
jne
movsb
mov
pop
xchg
and
pop
fwait
mov
sub
insb
pop
sbb
out
jmp
cli
int3
daa
cli
int3
pop
cli
int3
add
shlb
or
jge
add
testl
jg
mov
inc
xor
cli
pop
dec
aaa
add
cmp
cmp
pop
xchg
xor
popf
addr16
add
int
addl
loope
xchg
cmp
mov
das
sbbl
mov
or
or
mov
add
sar
cmp
jmp
lock
push
ret
sbb
mov
pop
xchg
rorl
shlb
pop
mov
push
mov
cmp
outsb
dec
aaa
add
xor
add
aaa
add
jno
loopne
cmp
lahf
or
pop
mov
jno
add
or
mov
in
or
push
add
mov
add
xchg
lret
sahf
adc
popa
fwait
dec
pop
add
inc
adc
jne
and
inc
push
mov
lret
ds
cmp
shrb
xor
aaa
add
aaa
push
loopne
mov
arpl
push
mov
addr16
or
inc
cld
lods
xchg
and
cs
jne
or
andl
add
pop
repnz
test
pop
sbb
mov
push
rcrb
cmp
inc
sbb
incl
push
cmp
and
lods
push
pop
add
daa
ljmp
repnz
cmp
bound
mov
dec
or
dec
aaa
add
jnp
mov
mov
push
mov
jmp
fsubrs
add
aaa
mov
into
xchg
out
xor
das
mov
out
mov
call
push
idivb
add
fsubrs
add
outsb
iret
add
outsb
lret
add
outsb
ret
mov
dec
aaa
add
mov
lea
dec
aaa
add
incl
pop
dec
aaa
mov
aad
adc
mov
call
ror
mov
pop
dec
mov
int3
sub
jno
les
enter
outsb
cmpl
aaa
subl
aaa
je
outsb
mov
add
dec
mov
shlb
add
fmull
loopne
out
fs
aad
enter
mov
in
stos
fwait
lret
mov
cmp
add
inc
or
jno
rorb
inc
adc
lea
fwait
cs
add
fwait
repz
jmp
je
mov
shll
fdivrl
mov
push
enter
aaa
decl
mov
adc
aaa
add
push
pop
mov
push
mov
aas
dec
inc
or
jle
enter
aaa
push
je
push
aad
cld
or
add
fbld
pop
mov
shrl
loopne
sub
push
or
test
add
pusha
mov
sarl
or
mov
mov
push
inc
add
pop
sarl
sbb
pop
xor
rclb
add
pop
lret
enter
enter
imul
push
push
aaa
jge
shlb
sbb
bound
ja
inc
les
repnz
pop
dec
mov
add
adc
mov
mov
push
sarb
mov
mov
and
aaa
add
mov
call
loop
scas
add
mov
add
add
add
add
hlt
mov
lahf
mov
add
mov
pop
dec
aaa
jmp
sarl
cmp
push
inc
or
mov
test
or
or
jae
sbb
pop
roll
xor
inc
adc
sbb
pop
sarl
loop
scas
add
imul
dec
mov
add
push
mov
je
shl
adcl
push
xor
aaa
add
xchg
xor
rolb
mov
enter
xor
call
mov
mov
add
loopne
cmp
inc
mov
inc
xchg
push
inc
pop
sarl
rorb
aaa
add
jno
fimuls
aaa
add
inc
sbb
fs
mov
dec
aaa
add
or
ret
mov
xor
out
adc
outsb
adc
pushf
pusha
mov
iret
fisubs
sub
lock
filds
enter
jno
aaa
cmpsl
add
hlt
push
aaa
add
add
aaa
lea
cmp
aas
cmp
fwait
mov
sub
aaa
xor
add
add
pushf
lret
ljmp
lea
push
mov
sbb
jns
mov
cmp
pop
dec
aaa
pop
pushf
mov
imul
cmc
mov
xchg
add
xor
mov
add
aaa
add
repnz
pop
jle
pop
pop
inc
push
inc
pop
repnz
adc
add
sarb
push
loop
incl
xlat
inc
pop
jo
pop
rolb
add
inc
xor
pop
mov
jne
test
mov
pop
dec
ja
or
add
mov
pop
dec
aaa
xchg
shrb
add
ret
fwait
dec
cmp
cmp
ss
pop
push
mov
jmp
roll
dec
and
xor
pop
mov
pop
sbb
mov
fistpll
fwait
ja
push
repnz
mov
inc
aaa
add
lahf
lret
call
or
add
add
aaa
pop
jae
add
pop
lods
push
sbbl
es
aaa
mov
jae
add
pop
idivb
je
call
mov
dec
mov
add
scas
push
pop
or
adc
add
fs
mov
icebp
je
lcall
add
add
imul
mov
faddl
inc
push
outsb
push
sub
aaa
call
loop
xlat
cmp
out
push
or
int
pop
dec
fbld
jno
aaa
mov
push
aad
mov
push
addr16
orl
ret
shlb
mov
int3
dec
in
jne
push
xor
add
lret
dec
lock
daa
add
lcall
jno
add
fwait
or
jb
std
inc
pushl
repnz
adc
hlt
call
ret
dec
push
sti
int3
sub
push
divl
sarl
dec
shll
push
cmp
imull
es
testl
sar
mov
dec
out
sbb
decb
scas
cmp
xor
in
shll
sbb
or
jne
imull
rol
idivl
shll
imul
add
jl
cmp
jl
cmp
nop
sbb
aas
pop
sub
aaa
push
add
add
addb
or
and
fcomp
and
mov
sar
mov
rol
push
loopne
mov
inc
dec
aaa
add
sarl
pop
sbb
ja
pop
shrl
push
sbb
ja
pop
rorl
dec
fwait
mov
iretw
push
dec
inc
lcall
inc
pop
fs
add
xor
aaa
data16
daa
ja
lcall
inc
pop
fidivs
add
xchg
mov
loopne
xor
into
xchg
mov
loopne
add
cld
movsb
std
out
add
pop
dec
add
test
lock
bound
rcrb
add
xchg
sub
and
cmp
sbb
lcall
jmp
mov
fwait
dec
xchg
test
mov
push
repnz
push
std
and
aas
pushl
in
dec
loopne
dec
mov
add
aas
push
repnz
pop
dec
outsb
push
lods
push
dec
loopne
dec
incl
xlat
inc
pop
adc
push
loopne
mov
push
rorl
add
shlb
mov
dec
mov
adc
iret
stos
add
aaa
pop
imul
push
imul
dec
pop
push
jnp
cmp
cmp
movsb
inc
push
setl
pusha
and
dec
pop
dec
cmp
mov
test
pop
imul
dec
pop
jle
cmp
mov
dec
imul
jnp
pusha
xor
int
sbbb
in
add
inc
mov
push
mov
mov
ficompl
jge
mov
add
or
pop
scas
mov
iret
add
jno
mov
sbb
fsubr
aaa
xor
das
std
cltd
loopne
add
addb
out
aaa
int
and
in
sub
jge
xchg
into
fsubr
inc
mov
push
sbb
test
fadds
mov
je
iret
imul
mov
out
push
out
xor
jo
mov
in
loopne
mov
bnd
movsb
rolb
jne
repz
sbbl
inc
or
jl
mov
xchg
add
dec
in
daa
sub
add
cli
mov
lds
add
jne
lds
rolb
fiadds
call
jmp
repz
jno
loopne
lret
mov
mov
pop
cwtl
cmp
push
jbe
ret
add
push
cld
pop
jo
sub
dec
aaa
add
mov
mov
xor
pop
or
es
aaa
add
or
mov
in
adc
xor
mov
call
sbb
push
loopne
mov
jae
notl
mov
mov
add
add
add
add
pop
loopne
add
pop
sub
push
mov
jge
push
out
cmp
psubw
jno
rclb
mov
add
cmp
push
repnz
divb
add
inc
push
jae
enter
divb
testl
add
call
clc
ds
pop
cmp
ret
shl
popa
mov
jno
push
lret
add
pop
jle
inc
fdiv
sbb
jle
fdiv
and
pop
xchg
or
pop
xchg
hlt
add
inc
dec
outsb
cmp
add
lret
testb
or
in
jl
aaa
test
cmp
cwtl
lret
testb
cmp
push
jbe
jae
cmp
pop
ret
jns
sub
or
in
pop
loopne
cmp
imull
jb
jo
ja
insb
loop
incl
add
aaa
add
mov
pop
dec
mov
inc
cmp
jmp
pop
cmpsl
jns
sar
mov
jne
cmp
inc
sub
mov
loopne
popa
mov
mov
jne
pop
jge
sbbl
inc
or
mov
cmp
mov
pop
jg
add
push
loop
add
outsb
mov
test
push
loop
or
outsb
mov
out
out
inc
outsl
test
add
mov
je
cmc
inc
or
movl
push
cmc
add
aaa
ljmp
xlat
inc
pop
shr
and
jnp
ds
pop
jle
push
add
and
rorb
aam
mov
pandn
aaa
or
dec
aaa
jmp
push
pusha
xor
xchg
add
or
push
inc
mov
je
add
aaa
or
dec
aaa
mov
dec
hlt
mov
in
mov
push
inc
push
pusha
aaa
movntq
pop
add
aaa
push
sub
mov
jl
mov
test
jg
pop
sbb
testl
xchg
hlt
mov
fwait
pusha
xor
mov
inc
lcall
inc
pop
dec
inc
push
fimuls
clc
mov
xchg
cvtdq2ps
xor
or
call
add
jno
lea
ja
sbb
icebp
add
dec
add
jo
mov
nop
cmp
add
add
fwait
mov
adc
je
add
pushf
fildll
hlt
movl
arpl
mov
sub
mov
outsl
inc
mov
push
dec
inc
add
repz
xchg
inc
mov
arpl
push
push
loopne
mov
lds
pop
mov
ret
icebp
inc
pop
enter
call
sub
outsl
mov
in
add
and
inc
lcall
add
sub
sbb
aaa
add
repz
adc
pop
add
sarb
dec
std
into
xor
dec
mov
sbb
lock
pop
xchg
mov
psllq
leave
call
or
or
dec
aaa
xor
loop
add
outsb
mov
testb
dec
dec
aaa
push
sbbl
pop
xchg
outsb
test
aad
pushl
push
outsb
repnz
pop
shrl
inc
mov
call
mov
repnz
incl
aaa
add
jno
xor
pop
or
and
incl
hlt
mov
xchg
mov
add
push
fidivs
repnz
sub
inc
adc
loop
dec
icebp
insl
test
loop
adc
outsb
jmp
and
decb
ljmp
pop
push
mov
pop
stos
sub
dec
dec
jmp
lds
xor
aaa
adc
sbbl
or
leave
in
rcrb
fiaddl
push
lds
test
inc
or
vmovntps
or
add
pop
dec
aaa
add
mov
aaa
mov
ret
jns
lds
sldt
ficomps
sbb
lds
mov
idivb
clc
rclb
rol
ja
roll
inc
add
xor
and
dec
push
ja
mov
fdiv
push
jae
ret
cld
shll
mov
jecxz
xchg
mov
bound
mov
dec
mov
lea
sub
add
inc
inc
push
loopne
aas
and
ret
arpl
loopne
xor
iret
shrl
cmp
arpl
arpl
sarb
mov
add
add
add
add
add
lret
int3
aas
add
ret
imul
push
divb
test
dec
aaa
add
jne
mov
icebp
cmc
sti
pop
or
adcb
add
sysenter
dec
xor
in
xor
mov
dec
mov
pop
loopne
cmp
push
jne
mov
fdiv
push
jae
ret
sti
shr
mul
and
jb
pop
dec
xor
ret
jns
jp
fcompl
out
xlat
sarl
mov
add
leave
dec
pop
inc
inc
push
loopne
aas
and
inc
mov
or
xorb
add
sbb
ret
inc
add
cmpb
movsl
inc
mov
mov
dec
inc
or
cmp
jg
lea
mov
or
mov
mov
ret
inc
or
jl
cmp
jle
add
jg
lcall
and
mov
dec
dec
inc
push
loopne
mov
pop
dec
mov
mov
jns
push
push
mov
pop
dec
mov
mov
mov
or
sbb
jne
mov
aaa
add
sbb
mov
mov
add
aaa
add
sbb
fbstp
ds
xchg
mov
jb
pop
shll
inc
cmp
mov
testb
adc
add
cmp
mov
mov
bound
inc
pop
dec
mul
dec
dec
jg
lock
mov
pop
cltd
decw
mov
mov
rorl
add
sbb
or
inc
xchg
rcrb
mov
mov
pop
mov
add
movsl
mov
add
sbb
mov
je
or
daa
andb
push
add
add
dec
mov
push
jmp
gs
aaa
ljmp
enter
je
pop
jmp
adc
enter
jbe
int3
push
push
loopne
dec
mov
add
sbb
pop
adc
push
sub
out
es
sub
fildll
dec
dec
aaa
mov
inc
mov
pop
jmp
sbb
mov
cmp
je
pop
je
cmpl
jne
clc
and
jno
clc
sbb
rorl
fmuls
inc
mov
xchg
mov
add
add
add
inc
lcall
and
add
aaa
jmp
inc
pop
das
lock
aaa
imul
and
xor
fmuls
das
sbbl
xchg
sbb
mov
imul
jne
add
jbe
pop
pusha
aas
jmp
outsb
jne
pop
jmp
aaa
mov
adc
ret
dec
pop
add
aaa
add
pusha
incl
inc
pop
shll
push
adc
add
daa
push
cld
pop
dec
inc
lcall
add
lds
loop,pt
xor
push
inc
mov
pop
aad
adc
add
push
enter
imul
mov
mov
push
mov
mov
cmp
mov
lea
ret
add
xor
pop
dec
mov
add
or
fwait
push
mov
or
aad
push
sbb
aaa
add
dec
aaa
push
add
stos
loopne
dec
mov
outsb
push
mov
in
repnz
xchg
pop
pop
aaa
add
jle
cmp
pusha
je
xchg
xor
shll
mov
mov
mov
mov
aaa
add
add
aaa
mov
cmpsb
cld
je
mov
pop
dec
mov
call
dec
dec
aaa
add
mov
out
inc
inc
dec
iret
add
mov
add
mov
lea
shll
fsubrs
inc
pop
sbb
inc
shlb
aaa
mov
or
mov
bound
mov
rclb
in
lods
cld
adc
pop
add
out
mov
xchg
aas
mov
cmp
pop
daa
push
loopne
cmp
add
fcoms
and
jno
mov
add
mov
add
jns
loopne
lret
xorl
dec
cmp
shll
mov
push
mov
negb
dec
cmp
pop
add
push
xlat
or
pop
dec
mov
add
sarl
fsub
pop
jbe
je
pop
loop
iret
mov
or
push
pop
je
pop
dec
aaa
sbb
push
jae
sti
fisttpl
pop
dec
rcl
xchg
rclb
sbbl
jecxz
loopne
iret
lea
sub
add
add
xchg
aas
and
shll
loop
xor
push
rorl
loopne
daa
sub
addr16
add
add
mov
or
in
dec
into
xchg
push
cld
fsub
pop
jbe
jo
pop
rolb
mov
add
xorl
cmp
add
xorl
and
pop
pop
and
out
mov
dec
push
dec
xor
add
dec
aaa
add
clc
fisttpl
add
fimuls
fsubl
add
mov
add
jecxz
rclb
mov
add
ja
add
add
clc
fmull
dec
shll
rclb
lret
mov
jp
lock
pop
shll
lea
add
imul
and
add
add
mov
adc
xchg
mov
out
jne
or
add
shrl
loop
lret
orl
imul
fmulp
add
inc
cld
sbb
add
xor
in
jbe
jo
pop
loopne
xor
adc
inc
inc
add
add
enter
mov
je
dec
rcl
xchg
and
xchg
aas
and
sub
ficoms
adc
add
cmp
or
xor
arpl
aas
add
pop
xor
push
roll
loopne
daa
add
or
add
enter
pop
aas
iret
jns
push
mov
mov
add
xorb
adc
pop
push
iret
jnp
add
jo
aas
jne
sarb
pop
sarb
popf
or
cmp
addb
aaa
jne
iret
clc
mov
mov
mov
lea
mov
push
or
aaa
jne
iret
js
cld
dec
aaa
add
std
xlat
mov
iret
mov
pop
dec
aaa
add
nop
xlat
mov
sub
cmp
mov
jb
out
sbb
insb
leave
sbb
push
loopne
mov
stos
sbbl
mov
adc
inc
sub
dec
int
lock
fs
fsub
add
push
push
sub
cmp
loope
out
fmuls
mov
jnp
cld
ljmp
fsub
ljmp
mov
pop
aad
jmp
aad
add
and
push
xor
cmp
pop
arpl
out
jne
aad
sbb
mov
jmp
aad
add
and
push
jecxz
leave
or
cmp
pop
arpl
out
jne
cmc
cmp
popa
int
adc
jle
cmp
push
push
mov
mov
pop
cmc
cmp
jne
int
adc
jle
cmp
add
in
jmp
add
jne
sbb
jmp
mov
or
and
insl
mov
mov
adcl
in
cmp
mov
mov
push
and
pop
dec
mov
dec
ret
sub
or
ss
push
aaa
add
jle
shlb
adc
xchg
sub
or
mov
add
or
jmp
shll
rclb
leave
push
dec
aaa
add
int
inc
pop
dec
aaa
mov
test
js
add
inc
adc
int
les
aaa
and
repz
and
mov
stc
pop
sarl
sahf
fidivrl
dec
fcomp
pop
mov
loop
add
imul
pop
dec
aaa
mov
inc
or
arpl
andl
jge
shl
roll
pop
test
mov
mov
shrl
pop
loopne
jne
sarl
loopne
aas
and
sbb
rorb
repnz
mov
sarl
leave
psrad
jne
shrl
add
rorb
faddl
loopne
aas
subl
mov
rorl
loopne
xor
push
dec
mov
pop
dec
aaa
mov
mov
add
nop
aas
mov
inc
mov
add
jnp
mov
inc
or
push
push
imul
fcomp
push
mov
inc
xor
lret
pop
push
cmp
pop
dec
aaa
adc
in
bound
mov
add
clc
xlat
mov
test
sub
pop
cmp
mov
dec
sti
pushf
add
jecxz
bound
mov
add
add
add
add
aaa
add
js
or
clc
fmuls
test
jns
ficoms
inc
or
dec
mov
add
mov
mov
fidivl
rcr
mov
mov
jp
jg
inc
hlt
loopne
mov
test
cli
jae
pop
push
and
or
movb
or
jns
rclb
inc
push
jnp
pop
and
sti
int3
sbbl
inc
pop
enterw
aaa
add
xchg
adc
outsb
adc
outsb
adc
xor
arpl
test
push
inc
pop
repnz
shlb
ljmp
loop
inc
add
scas
add
movsl
fcmovnb
call
test
lea
ficoml
pop
dec
aaa
add
sarb
add
aaa
pop
or
imul
push
sti
int3
daa
push
sti
int3
pop
push
sti
int3
rcr
popa
mov
ficompl
mov
imul
dec
pusha
mov
jb
pop
add
pop
dec
aaa
add
pop
daa
xor
inc
or
adc
cmp
repz
call
into
js
loopne
aas
add
xlat
pushl
xor
lds
add
mov
call
and
add
in
fcomp
enter
jge
inc
insb
mov
les
lea
fidivrl
test
pop
and
pop
dec
icebp
inc
and
mov
lahf
mov
loopne
iret
mov
into
into
decb
dec
inc
and
push
mov
in
pop
cmp
sub
call
loopne
cmp
mov
call
loopne
ret
pop
add
or
inc
pop
in
mov
inc
mov
clc
pop
pop
loopne
and
pop
pop
pop
push
add
inc
insl
sbb
pop
int
add
or
sarb
push
jl
adc
fmuls
fistpll
dec
aaa
mov
pop
and
add
mov
pop
dec
mov
clc
loop
cmp
dec
inc
mov
xor
filds
mov
mov
dec
clc
xor
fcomip
lods
fadd
mov
fidivrl
call
mov
jmp
or
into
call
sub
add
sub
push
xlat
jmp
xlat
add
popa
mov
jl
pop
push
andb
adc
cmp
mov
mov
divb
inc
dec
aaa
mov
nop
popa
call
xorb
pop
int
je
xlat
add
loop
sub
jcxz
xorl
sbb
add
mov
pop
cltd
dec
aaa
mov
mov
cmp
aaa
mov
push
or
jle
mov
aas
add
popa
mov
jnp
pop
push
cmpb
dec
mov
or
or
or
stos
loop
sub
add
add
add
pop
dec
mov
clc
pop
add
add
or
aam
xor
loop
sub
dec
mov
dec
jecxz
cmpl
jo
add
lock
add
add
lret
dec
or
cmp
xlat
inc
add
mov
ljmp
mov
dec
mov
out
popl
mov
ret
loopne
popa
mov
jge
icebp
xor
pushl
xor
or
lcall
mov
add
rol
sbb
outsl
std
fwait
dec
fbstp
dec
aaa
pop
sbb
push
shl
pusha
mov
loop
call
aad
add
inc
arpl
pop
sub
aad
mov
dec
mov
mov
inc
mov
bound
shlb
lods
ss
aaa
mull
mov
push
dec
mov
push
or
mov
inc
pop
loop
adc
dec
enter
jne
loopne
mov
adc
dec
mov
mull
add
mov
inc
push
leave
into
add
pop
pusha
call
rcl
mov
clc
dec
orb
ret
pop
xor
cmp
lret
call
add
add
add
aas
das
aaa
add
jae
rorb
mov
jb
jp
jne
loope
and
or
lcall
call
mov
sbbl
adc
mov
push
xor
and
pop
jno
add
mov
mov
pop
negl
outsl
inc
loopne
pusha
push
pusha
pop
call
rcr
pusha
call
fmuls
cmp
clc
dec
mov
pop
int
jne
pusha
das
pop
add
pop
negl
pusha
cmp
xor
jae
lret
jl
add
push
add
mov
outsl
dec
enter
into
pop
shrl
sahf
out
out
inc
dec
aam
incl
add
mov
sti
sub
repz
sbb
jne
loop
incl
mov
fcoms
shlb
idivl
jae
pop
jne
mov
jl
in
les
inc
sbb
lcall
inc
shld
jo
rorb
add
sbb
xor
jl
in
fsub
push
mov
inc
popa
push
icebp
inc
outsb
mov
out
xlat
repz
test
clc
rolb
lret
pop
fimuls
inc
or
dec
aas
je
or
pop
mov
push
or
decl
shll
movsb
sti
mov
leave
sbb
mov
ja
in
test
pusha
jmp
inc
pop
roll
mov
dec
mov
ret
dec
aaa
add
rcll
pop
dec
inc
add
or
sub
hlt
mov
xor
pop
roll
sbb
add
add
mov
call
ret
shll
add
out
pop
ds
loopne
popa
mov
bound
add
adc
fimuls
inc
adc
pop
jp
adc
fimuls
inc
add
or
mov
jbe
in
aam
aas
call
and
inc
or
sti
push
loop
out
movsb
shrb
xor
outsb
test
pop
cwtl
push
rcr
pusha
mov
divb
out
popf
inc
or
push
pop
pop
mov
mov
push
rclb
xor
in
test
push
daa
mov
std
je
iret
in
adc
pop
fistpl
or
cmp
add
add
add
pop
dec
inc
sbb
loop
sub
outsb
test
inc
enter
jne
and
lds
pop
dec
pop
pop
mov
jmp
call
jne
pushf
mov
add
leave
pushl
loope
dec
lock
xchg
inc
pop
loop
call
cmp
pop
jno
sbb
loop
sub
outsb
test
push
cmp
fs
adc
mov
xor
insl
hlt
push
bound
sbb
into
push
loop
out
fmul
insl
cmpl
xor
add
add
add
add
sbb
dec
icebp
add
mov
add
test
mov
fmuls
pop
lds
xor
adcl
pop
jno
clc
rorb
pop
push
dec
decl
loop
adc
outsb
mov
inc
fsub
dec
rorl
pop
ret
inc
fsubl
inc
push
add
add
xor
shlb
add
xor
aaa
add
rcr
sub
aaa
mov
mov
inc
pop
loop
adc
mov
sbbl
fists
dec
dec
aaa
sbbl
mov
xor
push
ljmp
push
repnz
mov
in
mov
push
mov
loop
decb
push
add
inc
pop
loop
sub
insl
sahf
into
enter
ficomps
pop
dec
aaa
orl
sub
xchg
mov
push
loop
in
in
int3
insl
ljmp
fmulp
xor
dec
inc
or
inc
filds
cwtl
loope
clc
lods
int3
repz
pop
add
fadds
push
loopne
add
pop
add
dec
enter
cltd
pop
int3
mov
insl
hlt
push
pusha
aaa
push
loop
cmp
mov
addr16
pop
add
dec
pop
add
mov
repnz
rol
add
daa
add
push
repz
lret
je
or
dec
aaa
push
rep
sub
pop
je
inc
xchg
push
ret
sbb
fists
ret
pop
and
pop
je
mov
lret
cmpl
and
adc
inc
pop
insb
hlt
mov
in
or
mov
inc
popa
push
sub
add
loop
lret
cmp
jbe
add
lcall
cld
fmul
pop
jb
mov
add
pop
add
leave
sbb
pop
jno
clc
pop
cmp
push
loop
cs
dec
outsb
test
push
cmp
pop
dec
cmp
into
lret
dec
cmp
xorb
and
pop
dec
fs
and
mov
pop
dec
mov
dec
data16
push
add
dec
aaa
adcl
aaa
mov
lods
xor
push
ja
inc
pop
dec
enter
jbe
fimuls
add
xor
pop
xor
add
popa
call
fmuls
cmp
sbb
addr16
mov
fbstp
lahf
pop
popa
call
sbb
mov
jg
orps
lea
add
fdivrs
pop
nop
pop
add
outsb
jo
pop
xor
add
dec
sbb
sub
filds
cs
aaa
sbbl
add
or
mov
sbb
addr16
xor
pop
add
xor
add
repnz
mov
test
popa
push
lods
mov
sbb
outsl
aad
cld
cld
jge
inc
or
push
add
test
mov
dec
iret
divb
popa
push
and
dec
aaa
adcl
aaa
push
or
subb
dec
mov
addr16
push
enter
or
mov
int
jmp
push
iret
push
into
jge
inc
mov
aaa
incl
dec
outsb
push
cmp
decl
xlat
inc
pop
daa
imul
dec
sbb
pop
and
pop
mov
sub
dec
outsb
test
sub
pop
dec
inc
push
jae
add
sbb
lcall
add
aaa
call
adc
hlt
push
loopne
mov
pop
rorl
rolb
mov
push
imul
push
xor
out
fwait
mov
lea
dec
cmpsl
pop
inc
xor
inc
jo
cmc
push
dec
inc
jnp
cmp
jp
pinsrw
dec
inc
jo
mov
xor
jg
cmp
add
mov
mov
lret
loop
lret
mov
jp
sub
lret
mov
sbb
movb
adc
mov
sbb
cmp
sbb
sub
incl
add
lea
mov
push
mov
je
dec
jb
inc
mov
mov
sarl
sahf
push
fsubrl
inc
cmpsb
mov
imul
lock
jns
sub
mov
or
pop
daa
add
jb
push
orl
fmuls
mov
pop
sbb
push
shlb
addr16
mov
test
out
push
das
dec
jbe
loopne
push
pop
ss
pop
mov
notl
ficoml
mov
jbe
xorl
ljmp
add
pop
xor
xor
call
lods
daa
cmc
add
rol
push
shlb
aas
mov
mov
add
sarl
inc
mov
fmuls
push
and
fimuls
mov
mov
test
ds
push
dec
inc
in
inc
inc
add
mov
testl
les
outsl
shlb
loopne
mov
inc
jnp
das
cmp
into
outsl
fbstp
sti
fidivl
add
add
fidivrs
aaa
call
fadds
cmpsl
add
aaa
jle
mov
push
pop
dec
xor
push
ja
pop
sbb
daa
push
rep
ret
fmul
dec
adc
and
mov
pop
dec
dec
push
dec
add
or
inc
mov
in
cmp
pop
dec
cmpsl
add
enter
lret
add
and
enter
or
push
inc
xor
add
aaa
add
mov
loopne
iret
ja
pop
xchg
mov
xchg
xor
jns
dec
inc
adc
pop
dec
aaa
add
add
add
add
add
or
ss
ds
push
cld
pop
scas
sub
data16
sub
sbb
push
call
loopne
daa
mov
push
mov
in
fucomi
inc
scas
ret
jmp
or
outsl
ds
mov
add
ss
call
cwtl
into
imul
cmpsb
push
aaa
add
add
jle
mov
or
pop
dec
aaa
jmp
mov
jae
stos
inc
cmp
inc
daa
add
lret
int
pop
and
sub
and
add
sub
sbb
aaa
es
mov
xor
ret
push
xor
sbb
rorl
mov
pcmpeqb
loopne
imul
aad
add
mov
fsubs
lret
add
cltd
in
cmp
jno
xor
lcall
arpl
cmp
out
mov
mov
fsubp
push
dec
aaa
int3
rol
popa
mov
aad
or
dec
popa
mov
xor
fadds
add
mov
or
jne
mov
add
xor
pop
mov
cwtl
aam
push
shrb
jne
mov
cvtdq2ps
movsb
push
dec
aaa
xor
xorl
inc
insb
dec
dec
push
or
mov
sbb
or
mov
inc
add
mov
iret
sarl
mov
or
sub
pop
dec
jb
stos
mov
std
add
mov
dec
popa
adc
pop
mov
xchg
mov
mov
jl
and
mov
aaa
call
mov
cmp
pop
lret
mov
add
add
add
aaa
add
inc
fildll
aaa
cmp
ss
fmuls
cmp
pop
mov
or
dec
mov
push
sarl
call
pop
xor
push
add
decl
in
mov
shrl
fsubs
add
push
lret
mov
int
les
mov
fmul
mov
out
call
loopne
mov
inc
mov
or
mov
add
add
call
sar
mov
ret
aaa
mov
pop
add
mov
add
daa
lret
add
pop
mov
sbb
cmp
push
sub
and
loop
lcall
repnz
pop
roll
je
jno
rep
leave
push
mov
or
mov
dec
dec
aaa
add
inc
adc
aas
cmp
pop
dec
dec
push
fs
ja
rorb
push
shrl
fsubs
xlat
add
pop
xlat
cmp
mov
add
nop
dec
inc
xor
aas
jg
shll
rorb
out
stos
adc
add
mov
imul
in
add
push
cld
pop
roll
sbb
lret
sbb
mov
pop
dec
fists
dec
aaa
mov
mov
xlat
jmp
rorb
shlb
aas
mov
sahf
mov
fdivs
and
out
dec
aaa
mov
xchg
mov
add
sarl
loop
mov
ds
cmp
out
pop
mov
dec
dec
inc
cmp
add
cmp
iret
dec
or
push
xlat
sub
add
fdivrs
mov
aas
dec
inc
sbb
pushl
add
add
add
add
je
mov
adc
hlt
mov
cmp
popa
jbe
repz
xlat
call
ja
mov
cmpsb
mov
add
nop
aaa
test
dec
aaa
add
aas
pandn
add
jle
push
nop
inc
or
dec
aaa
add
aaa
test
dec
aaa
add
dec
mov
js
int
xor
popa
cld
mov
inc
inc
sarb
inc
jge
aaa
pop
xchg
fbstp
popa
call
mov
mov
push
aad
pop
dec
mov
mov
sbb
add
out
mov
mov
add
dec
adc
add
ljmp
bound
xchg
jge
aaa
pop
add
testb
out
add
popa
call
and
mov
fs
lods
add
enter
jno
pop
cmp
push
inc
fisubrs
add
repnz
cmp
add
iret
mov
pop
dec
mov
jl
xchg
ds
xor
or
call
mov
sub
ja
add
outsb
test
aas
arpl
fs
mov
arpl
mov
sbb
adc
or
add
add
add
add
dec
mov
push
movsl
or
add
adc
push
jae
adc
pop
adc
fwait
ds
in
fcomip
ds
aaa
pop
mov
dec
push
xor
adc
xchg
sbb
mov
call
adc
lret
and
mov
mov
loopne
fucomip
clc
inc
aaa
add
fidivs
addl
call
loopne
daa
negl
aaa
add
cmp
fmull
loopne
aas
mov
inc
mov
gs
dec
mov
incl
inc
mov
add
add
add
add
filds
mov
jg
dec
add
icebp
dec
mov
ja
mov
insl
pop
stos
mov
sbb
mov
aas
push
and
das
call
mov
incl
call
adc
lret
hlt
mov
call
sbb
sbb
push
call
pop
xchg
cmpl
aaa
je
mov
sbb
and
jne
mov
mov
imul
and
inc
or
dec
popa
jmp
mov
and
mov
out
pop
enter
add
fildll
xchg
dec
pop
add
aaa
inc
push
ja
scas
pop
mov
or
add
push
sbb
aas
call
fmuls
xor
mov
imul
negl
push
sarb
adcl
dec
aaa
push
mov
das
add
mov
das
ja
ficoml
ror
add
dec
add
pop
arpl
loopne
push
jne
mov
and
dec
pop
enter
inc
or
mov
mov
push
iret
testb
add
shll
pop
rorl
xor
fbstp
push
mov
inc
negl
popa
jmp
pusha
call
shlb
repnz
bswap
jae
sbb
aas
or
jne
adc
mov
add
mov
je
lret
pop
aas
sbb
add
aas
adc
jne
mov
and
dec
enter
inc
adc
aas
daa
dec
inc
fbstp
scas
push
mov
dec
mov
cld
rorb
lret
adcl
inc
adc
nop
pop
lods
adc
ret
shlb
add
add
add
out
enter
push
cmp
push
das
mov
dec
aaa
push
sub
jno
pop
xor
aas
jmp
sarl
mov
mov
mov
add
orb
scas
cmp
or
sub
jb
out
xor
pop
leave
dec
adc
push
add
inc
dec
aaa
add
or
cmp
aas
and
sbb
aas
or
pop
xlat
sub
add
dec
sbb
inc
mov
pop
dec
aaa
call
fdiv
mov
pandn
xor
pop
mov
mov
add
add
cmp
aaa
add
lret
pop
dec
pop
add
push
adc
pop
adc
fwait
cmp
aaa
add
inc
fdivs
add
push
inc
dec
outsl
hlt
je
jne
add
push
push
cmp
int
aaa
jne
mov
fbld
pop
dec
aaa
xor
add
inc
jl
push
xor
pop
mov
aaa
call
cld
cmp
xor
rolb
inc
mov
incl
ja
cmp
mov
mov
cld
outsb
or
call
fisttps
repz
dec
jecxz
jmp
add
incl
inc
fbld
pop
adc
inc
add
dec
mov
cmc
push
mov
sub
or
lea
mov
aas
mov
bound
test
dec
aaa
add
xor
add
add
mov
je
outsl
push
add
es
xor
pop
dec
aaa
mov
mov
push
dec
cmp
out
rcll
pop
push
movsb
aaa
iret
jmp
push
call
fadds
jno
add
inc
pop
rorl
fcomp
add
jno
and
fimull
add
lds
rolb
ret
mov
idivb
lds
rorb
cmp
loop
fildl
lea
add
push
xlat
call
fadds
sub
ret
push
jae
in
inc
pop
dec
mov
jno
dec
int
call
jae
inc
and
push
ret
decl
push
inc
mov
jne
mov
sbb
out
pop
popa
mov
cmp
mov
inc
mov
ja
add
jno
fadds
call
sub
aaa
je
and
push
xor
lcall
outsb
adcb
add
das
and
imul
pushf
pop
dec
aaa
mov
jmp
add
popa
call
and
testb
int3
add
addr16
dec
fistps
dec
aaa
call
loop
mov
dec
push
dec
aaa
xor
aaa
mov
pop
mov
add
faddl
dec
xor
call
xor
push
sbb
jne
scas
inc
or
add
sar
lret
repnz
sub
ret
mov
call
or
addl
dec
sbb
aas
mov
in
jmp
enter
inc
clc
sub
daa
incl
popa
call
fadds
aaa
add
icebp
mov
je
mov
push
mov
in
add
mov
mov
pop
shl
cmpsb
mov
add
lods
popa
mov
popa
push
inc
jmp
add
mov
dec
aaa
add
pop
das
mov
pop
xlat
mov
pop
mov
xor
dec
jno
je
lret
int3
es
dec
mov
imul
in
push
mov
and
mov
pop
dec
aaa
negb
inc
push
je
leave
dec
add
cmp
aaa
addl
aaa
jne
pop
enter
and
out
fbstp
xchg
pop
fsubrl
xor
add
pop
mov
cli
jp
movsb
sbb
dec
inc
push
bound
xor
xor
add
xor
mov
in
push
cmp
enter
inc
sbb
lods
inc
adc
ss
incl
add
ljmpw
dec
enter
inc
sbb
adc
ss
es
enter
ffreep
nop
lods
movl
push
mov
push
fs
sbb
xor
dec
xchg
mov
iret
imul
pop
mov
aaa
incl
aaa
aas
mov
mov
add
movsbl
inc
jbe
lea
aaa
test
ss
repz
call
adc
test
aaa
push
mov
dec
mov
daa
inc
enter
add
out
push
inc
mov
ret
add
xchg
push
loopne
pusha
jmp
push
inc
pop
mov
aaa
ljmp
jmp
mov
cmp
and
jne
ss
shlb
aaa
add
arpl
push
cld
push
lahf
loopne
dec
mov
data16
popa
call
add
je
and
ljmp
xlat
inc
pop
arpl
mov
or
or
ljmp
inc
pop
mov
add
stos
pusha
incl
add
add
and
shlb
add
or
call
mov
pusha
pop
ss
add
nop
push
inc
pop
int
incl
pop
jo
pop
mov
push
test
cmp
push
inc
pop
int
incl
ljmp
inc
pop
int
and
aaa
inc
jmp
jmp
jbe
sub
decl
popa
jmp
inc
pop
iret
divb
add
mov
rorb
rorl
scas
lcall
add
add
xor
pop
enter
and
xlat
dec
jbe
mov
sub
or
ljmp
shll
push
cld
push
sar
or
mov
pop
dec
aaa
mov
icebp
xchg
dec
aaa
add
nop
mov
pop
dec
aaa
inc
pushf
maxps
data16
fldt
jmp
test
lret
incb
aaa
add
push
fbstp
test
pop
shlb
lret
mov
push
mov
jne
jmp
mov
insb
inc
loopne
add
lock
daa
test
sbb
and
pop
dec
filds
cmpsl
mov
xchg
or
in
add
push
mov
fcmovu
cmpsl
insl
ret
loopne
pusha
push
int3
cmp
enter
jbe
loopne
ficoms
mov
movb
dec
aaa
add
dec
fisttps
mov
outsb
test
or
sbb
xor
inc
mov
decl
rcr
mov
mov
popa
call
xchg
add
adc
fcoms
xor
loop
fmull
movsl
mov
leave
add
insl
xor
stos
add
jbe
mov
lock
sbb
push
repz
movb
mov
ljmp
hlt
push
xor
inc
mov
mov
push
mov
pop
into
into
add
mov
je
cli
ficoms
rorb
sbb
inc
sar
decl
inc
iret
divb
fidivrs
cmpsb
pop
loopne
or
xor
call
mov
je
cli
ficomps
cmpsb
pop
loopne
jae
sbb
xor
cli
std
faddl
mov
je
cli
fiadds
add
or
cmp
daa
dec
addr16
add
cmp
pushf
add
xor
push
cld
pop
rorl
movsl
inc
sbb
aaa
test
inc
pop
push
xor
dec
incl
inc
aas
movsb
pushl
pop
add
pop
or
aam
lcall
lock
pop
dec
aaa
add
dec
insb
fisubs
sbb
cs
fcoml
cmp
sub
sbbl
push
cmpsb
enter
ficomps
pop
dec
aaa
push
mov
add
call
mov
push
xor
call
adc
cmp
or
mov
xchg
pop
or
push
cmp
lahf
loopne
dec
mov
cmpsb
dec
popa
call
or
test
mov
pop
dec
aaa
mov
xlat
inc
pop
xor
add
xor
add
or
aam
pop
enter
push
clc
jbe
inc
pop
mov
jbe
add
push
inc
sbb
fsubs
inc
sbb
mov
inc
pop
out
inc
sbb
push
fsubs
inc
add
sbb
je
or
adc
aaa
add
dec
mov
outsb
xchg
mov
outsl
or
cli
xchg
inc
pop
mov
sub
aaa
mov
jo
pop
out
inc
lcall
add
into
call
add
enter
jbe
sub
mov
pop
dec
aaa
call
lods
pop
pop
inc
sbb
adc
jbe
inc
pop
out
inc
sbb
add
pop
jo
pop
out
inc
sbb
repz
mov
jo
pop
in
push
inc
lcall
add
add
add
jecxz
mov
xchg
xor
or
call
mov
andl
sub
call
pop
jbe
fsubs
and
pop
dec
pop
add
cmc
cmp
pop
aad
pop
and
shlb
xor
movsb
push
pop
inc
sbb
or
jp
rorb
pop
add
mov
jecxz
sbb
dec
push
mov
jbe
push
mov
sti
inc
mov
hlt
push
xor
mov
mov
incl
add
or
sbb
and
sub
hlt
mov
out
inc
out
fdivl
fbld
mov
lret
aam
jl
mov
lods
jns
mov
mov
out
sbb
dec
fistpll
dec
bound
pop
mov
cli
je
insl
test
popf
decl
or
mov
mov
dec
pushl
cli
push
xor
lcall
xchg
cmp
cli
int3
scas
rcr
sub
fs
loopne
cmp
mov
or
or
fsubrp
jle
aaa
push
and
out
adc
or
mov
pop
dec
aaa
add
inc
mov
pop
dec
aaa
push
jae
adc
pop
std
insl
pop
mov
lahf
popa
mov
jno
rorb
cmp
je
js
dec
inc
and
or
cmp
cmpsl
xor
sub
add
dec
dec
ja
pop
adc
ljmp
mov
push
dec
pop
sbb
or
incl
inc
pop
pop
test
shrb
and
sahf
mov
test
imull
push
pop
jbe
and
dec
or
xchg
arpl
inc
push
cmp
fmuls
cld
jb
xor
or
mov
enter
cmp
inc
mov
rcr
inc
or
add
mov
inc
add
add
lret
add
push
dec
add
fwait
mov
add
mov
pop
dec
mov
pop
dec
aaa
mov
sarl
rorb
mov
inc
mov
arpl
mov
push
pop
add
rorl
xor
or
add
mov
pop
adc
dec
mov
cmp
mov
add
aas
add
lcall
or
jns
loop
dec
mov
dec
outsb
int3
add
pop
ds
xchg
es
pop
dec
fcompl
mov
ds
xchg
es
pop
dec
fmull
mov
ds
xchg
es
pop
dec
fdivrl
mov
ds
adc
dec
fsubrl
outsb
iret
add
es
pop
dec
fcompl
dec
int
add
es
pop
dec
fmull
cs
fwait
push
xor
adc
dec
enter
aas
ljmp
add
cmpl
mov
inc
mov
sti
push
sbbl
inc
add
pop
dec
orb
int
fs
push
test
push
sub
fsubs
incb
loopne
jbe
mov
push
andl
cmp
push
lcall
or
add
enter
sub
lods
pop
dec
aaa
data16
popa
call
aaa
add
dec
addb
xor
repz
dec
aaa
mov
add
pop
lcall
push
push
adc
jbe
rolb
add
mov
or
pop
pop
add
sub
pop
dec
outsb
pop
rolb
rorb
pusha
push
sub
mov
dec
fs
notl
cli
push
jae
xor
pop
repnz
lea
lea
dec
inc
mov
pusha
addr16
lcall
cmpl
inc
pop
dec
mov
pop
xchg
xor
add
fmuls
aaa
add
aaa
xor
hlt
imul
xor
repz
repz
fmul
adc
sbb
aaa
add
add
mov
cmpsb
gs
push
inc
mov
pop
pop
dec
aaa
add
je,pt
lds
fmuls
aas
add
pop
push
xorl
inc
adc
pop
cmp
xchg
iret
in
mov
or
pop
iret
shlb
or
dec
orb
or
adc
or
fcoms
mov
push
pop
mov
and
mov
add
pop
pop
in
xchg
cmp
test
loope
data16
mov
bound
aas
inc
sbb
in
push
cmp
test
je,pt
lds
fmuls
aas
add
pop
enter
outsl
xor
or
adcl
push
and
push
rol
sbb
ss
lds
mov
or
roll
add
dec
xchg
or
shl
lret
roll
movsb
aaa
dec
fisubs
insl
data16
jno
int3
dec
mov
dec
movsl
aaa
mov
xor
add
add
add
add
outsb
push
push
scas
sbb
push
je
xor
mov
cmp
lea
xor
dec
jno
je
ja
or
imul
dec
add
cmc
sarb
popf
xchg
xor
inc
xchg
mov
dec
mov
pop
adc
ficoml
sti
pusha
push
orl
pop
fdivs
lcall
push
jne
jle
lcall
add
push
mov
pop
roll
sbb
aaa
cmp
das
push
sbb
dec
mov
push
or
imul
subl
add
incl
mov
je
aas
call
enter
xchg
inc
jae
xor
mov
leave
orb
add
xchg
iret
shlb
cld
mov
cmp
loopne
ficomps
add
xchg
jle
mov
repz
add
mov
add
add
sub
xchg
pusha
jmp
inc
pop
rol
mov
pop
negl
sub
push
cmove
cmc
push
aas
jne
or
inc
inc
inc
repnz
mov
sbb
out
push
or
pop
dec
mov
jne
cld
adc
rorb
push
test
mov
dec
mov
inc
pop
and
add
jbe
repz
push
pop
enter
mov
adc
pushf
push
lret
dec
xchg
push
and
pop
and
dec
outsb
pop
jo
aaa
test
aaa
add
dec
mov
pop
ret
add
fimull
aaa
rorl
add
push
sbb
andl
inc
pop
inc
mov
and
mov
popa
mov
push
rorl
or
add
mov
add
pop
dec
mov
pop
leave
cmc
add
aaa
cmp
sbb
push
adc
add
jno
xor
aaa
add
push
mov
cmp
or
aaa
add
xchg
out
inc
mov
lahf
imul
pop
call
xor
mov
pop
cld
mov
lea
jne
loop
mov
or
add
lds
jmp
mov
pop
lcall
sub
add
sub
adcb
adc
fsubrs
ltr
mov
add
push
loope
sbb
in
sahf
stos
or
add
fildl
rclb
sbb
gs
and
xorl
enter
xor
arpl
loopne
dec
mov
pop
push
mov
shll
out
mov
push
pop
pop
mov
aaa
mov
dec
mov
push
fimuls
cmp
pop
xor
pop
rep
test
inc
mov
pop
dec
aaa
lcall
or
push
jge
push
movsb
xor
mov
cmc
dec
add
xor
pop
int3
jne
loopne
mov
les
cmp
ret
nop
inc
push
fildl
xor
pop
lret
mov
es
pop
divb
movsl
cmp
cwtl
add
fsubs
mov
xchg
adc
loopne
mov
fs
je
pop
push
or
aaa
loopne
dec
mov
iret
push
mov
add
into
add
or
or
xchg
xor
lret
arpl
xchg
cvtdq2ps
inc
dec
cli
ficomps
divb
jo
lock
mov
pop
or
push
int
lcall
int
add
pushl
ret
lret
movsb
ss
sbb
rolb
mov
cld
jge
fadds
lcall
mov
cmpsb
pop
lcall
jae
ret
das
test
pop
xor
add
nop
inc
icebp
jl
repz
mov
jecxz
jbe
movsb
ret
into
cmp
pop
out
adc
or
dec
cltd
addr16
cwtl
ret
push
rcrb
push
xor
dec
mov
mov
mov
cmpsl
dec
fs
faddl
roll
shll
add
add
mov
pop
inc
rcl
pop
add
push
add
xor
fwait
dec
mov
clc
inc
xor
add
xor
jecxz
fwait
dec
add
and
lret
loopne
dec
add
out
push
or
iret
loopne
dec
mov
lock
mov
or
pop
ret
lock
pop
xor
dec
rcl
push
sbb
sbb
pop
add
mov
pop
dec
hlt
mov
aas
mov
push
mov
xorl
push
xor
add
pop
lret
cmp
lret
dec
fs
mov
push
cli
ficomps
fidivs
decl
mov
push
mov
pop
lret
leave
repnz
sbb
in
mov
jmp
mov
mov
call
scas
loop
mov
mov
call
iret
cli
std
pushf
lea
out
xchg
leave
decl
push
mov
data16
repnz
lea
mov
leave
call
lods
jg
mov
ds
mov
test
add
add
aaa
mov
mov
mov
mov
mov
call
out
cld
in
pop
add
mov
test
dec
aaa
add
sar
mov
test
mov
loopne
dec
mov
ljmp
lea
jl
or
test
push
aas
push
mov
insl
push
push
ss
loopne
dec
ljmp
xlat
inc
pop
mov
imul
rol
call
mov
decl
jge
pop
mov
insl
test
add
pop
xor
hlt
stos
pop
add
jmp
imul
loopne
popa
mov
cli
jge
pop
in
repz
and
sbb
dec
mov
decl
ds
and
jp
aaa
mov
cmpsb
fldt
loopne
fisttpl
push
stos
add
push
xor
add
cmp
mov
xor
add
adc
and
cmp
aaa
xorl
enter
mov
xlat
cld
mov
mov
hlt
mov
mul
adc
call
loopne
add
insl
test
adc
cmp
jge
pop
adc
push
mov
fwait
loopne
dec
mov
add
arpl
dec
inc
add
add
incl
cmpb
loopne
popa
mov
pop
xor
aaa
dec
push
enter
pop
leave
inc
mov
test
adc
push
push
jle
pop
add
push
sbb
fwait
loopne
dec
mov
add
arpl
dec
inc
add
xchg
mov
int
ljmp
mov
ret
loopne
popa
mov
mov
mov
gs
add
subb
add
mov
bound
cmp
xor
aaa
jbe
and
adc
out
fiadds
pop
dec
or
movlps
in
mov
push
aad
adcl
rcl
addr16
sahf
cli
int3
daa
xchg
cli
int3
pop
xchg
cli
int3
mov
ficoml
aad
or
push
daa
mov
lcall
xor
aaa
add
xorb
pop
dec
inc
pop
fadds
sbbl
aaa
je
and
mov
mov
fs
leave
pop
or
ds
add
fimuls
pushf
dec
aaa
add
and
jb
mov
pop
int
add
or
xor
movsl
insb
sub
aaa
nop
rclb
aaa
addl
or
push
add
mov
test
lods
jbe
sub
mov
nop
sbb
mov
nop
xor
jbe
xor
mov
inc
pop
shrb
rcll
xor
inc
pop
lret
lock
xor
test
and
mov
jge
js
mov
inc
pop
mov
add
adcl
int
jmp
mov
nop
js
mov
add
add
add
add
dec
mov
pop
mov
add
mov
mov
lods
and
mov
jge
shrb
add
stos
jbe
shrl
jbe
jae
jbe
imul
add
or
mov
call
loopne
mov
in
rorb
mov
hlt
loop
mov
clc
rorb
mov
cld
dec
mov
add
iret
pushl
andb
stos
jbe
daa
stos
jbe
adc
add
jbe
rorb
aas
pop
mov
pause
loope
mov
pop
pushf
xchg
pause
loope
mov
mov
push
add
dec
mov
mov
mov
add
pop
add
pause
into
incb
cld
test
inc
and
jae
cmpl
stc
arpl
cmp
push
fbld
fwait
dec
mov
and
dec
xchg
inc
pop
xlat
jge
loopne
mov
pop
dec
aaa
andl
inc
or
imul
test
cs
nop
add
jg
jbe
jecxz
jbe
stos
lods
jbe
rorl
xor
stos
shrl
fdivs
shll
int
sub
and
sbb
add
or
stos
shrl
rorl
xor
inc
pop
leave
fadds
fdivs
bound
mov
xchg
cld
push
das
mov
nop
rorl
and
shrl
loope
xor
inc
pop
mov
add
or
addl
int
push
enter
or
mov
sbb
add
jbe
lods
jbe
lods
add
jbe
lods
jbe
ja
jbe
xchg
jbe
sbb
jbe
rorb
mov
sbb
push
mov
sbb
push
mov
adc
push
mov
adc
push
mov
or
or
mov
add
or
mov
add
inc
iret
aas
frstor
fwait
dec
mov
add
jbe
jae
jbe
fildll
pop
jl
pause
loope
xor
adc
mov
leave
cwtl
aam
add
or
adc
mov
add
add
or
pop
xor
pause
loope
xor
sbb
mov
add
or
mov
mov
leave
cwtl
xchg
cli
int3
test
pusha
mov
and
mov
push
ret
inc
xchg
inc
pop
out
xor
mov
cmp
aas
shlb
aaa
add
mov
pop
push
aad
and
cmp
mov
int
or
roll
fidivs
inc
lea
mov
jle
fadds
pop
add
aaa
mov
push
dec
dec
add
aaa
mov
rorb
aaa
add
push
push
dec
aaa
add
repnz
adc
or
push
pop
dec
aaa
mov
cmp
mov
call
mov
pop
sbb
stc
cmp
imul
inc
jb
call
xorb
jg
mov
add
dec
aaa
add
popa
mov
es
mov
inc
sbb
cli
decl
xor
adc
xchg
dec
push
pop
dec
bound
sbb
add
sub
shll
add
aam
mov
cmc
push
jb
push
pop
dec
add
push
pushf
add
adc
popa
mov
sbb
jno
pop
add
nop
inc
pop
sbb
filds
aaa
pop
test
push
xchg
pop
and
sbb
incl
and
jno
cmp
push
aaa
int3
lahf
mov
int3
sarb
mov
or
or
rcrb
mov
xorl
cmc
xlat
xor
dec
push
cmp
shl
pop
sbb
cli
int3
pop
mov
int3
sarb
mov
roll
add
loopne
or
and
inc
outsl
sbb
clc
xor
or
mov
imulb
mov
or
addl
inc
int3
jb
or
rolb
negl
and
cli
int3
cmpsl
cli
int3
lahf
cli
int3
sarb
mov
enter
jbe
add
dec
inc
pop
out
add
aaa
push
fsubrs
push
movsl
adc
aaa
xor
iret
jno
mov
add
mov
cld
pop
dec
aaa
add
jb
cld
jge
les
divb
xchg
jno
ss
aaa
inc
pop
sbb
pop
or
call
fadds
or
dec
jne
cmpl
call
cmp
pop
dec
aaa
pop
sbb
insb
mov
hlt
mov
outsb
mov
rcrb
inc
aaa
add
dec
mov
mov
jl
pushl
testl
pop
and
mov
rcrl
rol
push
shrb
dec
push
sbb
lea
mov
ja
jb
ret
pop
push
sub
sbb
add
adc
pushl
shl
cmp
jno
mov
or
cwtl
cmc
xor
js
sti
out
mov
lcall
pop
loop
mov
shlb
int3
daa
cli
int3
pop
cli
int3
rorb
adc
mov
add
inc
and
dec
mov
pop
divb
cmc
add
aaa
jne
inc
aaa
add
mov
add
xchg
and
dec
aaa
add
dec
mov
mov
rcrl
add
inc
call
add
add
add
loopne
lret
test
notb
test
out
push
sahf
add
enter
stc
lea
jnp
dec
jg
sbb
sbb
jne
rorb
repz
inc
sbb
sbb
jne
rorb
repz
repnz
sbb
jnp
push
jb
in
jp
cmpl
mov
mov
je
test
lea
or
mov
data16
daa
pop
push
or
cs
add
jb
mov
jp
decl
jp
pop
fsub
xor
xchg
add
add
fs
call
inc
out
idiv
dec
mov
push
xor
hlt
pushl
hlt
int3
pop
xchg
int3
rcrb
adc
push
adc
or
xor
pop
dec
inc
cmp
dec
or
shrb
popa
pop
call
or
sub
repz
or
or
dec
inc
adc
mov
sbbl
mov
nop
inc
mov
loopne
mov
add
inc
sbb
dec
mov
pop
xor
jne
int
add
inc
fsubl
add
inc
movsb
mov
xor
sbb
add
mov
scas
nop
or
pop
push
or
decb
mov
or
call
dec
mov
cmp
mov
sbb
aam
ss
pop
dec
aaa
push
sub
pusha
push
mov
sar
int3
repnz
add
xor
or
add
xor
orl
incl
fildll
js
pop
loop
xlat
cmp
mov
inc
in
dec
mov
cld
cmp
cs
add
dec
loopne
pop
fs
sbb
dec
inc
lcall
add
add
add
adc
sarb
repz
push
mov
jmp
adc
pop
add
pop
cmc
call
adc
mov
and
lds
test
aaa
ljmp
stos
in
ja
pop
adc
jb
pop
imul
ja
jno
mov
stos
push
dec
sbb
push
out
add
mov
mov
mov
inc
jbe
lea
addr16
inc
mov
add
xor
jb
loop
or
add
inc
add
pop
cmp
pop
add
sbb
push
add
pushl
mov
shrb
inc
pop
bound
jbe
jmp
hlt
rorb
push
lret
lret
or
inc
adc
and
divb
divb
divb
divb
bound
jbe
clc
loop
out
test
adcl
frstor
dec
aaa
mov
cli
ljmp
movsb
push
mov
decl
movb
adc
das
leave
fiadds
outsl
and
aas
bound
mov
gs
aaa
add
sbb
add
popf
jle
fmuls
pop
dec
sbb
push
gs
dec
sbb
adc
aaa
jmp
mov
dec
sbb
insb
adc
aaa
push
outsb
xor
call
rorb
xlat
pop
mov
cmp
jne
loopne
call
push
psrlq
fistpll
pop
sub
lret
or
mov
push
xor
loopne
push
mov
sahf
mov
or
or
pushf
or
mov
aaa
adcl
loopne
pop
sbb
dec
lahf
sarb
sub
cmp
inc
pop
dec
std
cmp
xchg
dec
sbb
add
mov
adc
jno
inc
nop
fimuls
je
mov
jno
sbb
pop
aaa
add
lret
or
pop
enter
fcompl
loopne
aas
mov
mov
testl
or
pop
enter
mov
arpl
cmp
mov
inc
add
dec
mov
push
adcl
out
adc
add
cmpl
insb
xchg
add
mov
inc
xchg
je
or
pop
sbb
mov
dec
lcall
mov
ficoml
sbb
call
fsubr
lret
xor
dec
lcall
mov
aaa
push
fcompl
sbb
clc
jb
test
aaa
add
cmp
loopne
dec
pop
les
aaa
push
movsb
fwait
mov
dec
into
and
pop
dec
addr16
pushf
dec
adc
int
inc
pop
jae
push
jae
aam
pop
mov
and
inc
jbe
movsb
lods
mov
stos
loop
add
out
add
xor
sbb
sub
jno
pop
mov
divb
pop
add
dec
pusha
decl
jno
pop
clc
fidivrl
pop
stos
cmpsb
dec
sbb
ret
inc
add
sbb
daa
or
dec
insl
lcall
mov
incl
shlb
je
jno
test
jb
push
mov
xor
rol
roll
inc
or
add
aaa
jmp
stos
mov
ret
xchg
add
addr16
mov
jno
mov
dec
xchg
mov
cmc
and
movsl
aam
les
mov
inc
inc
enter
out
push
outsb
xor
mov
aam
xchg
adc
jne
jno
or
idivb
out
insl
rolb
adc
push
loopne
mov
fldt
inc
mov
ja
bound
mov
jge
push
push
test
fs
add
incl
repnz
mov
cmp
cmc
es
cmc
xor
add
or
sub
jne
xor
je
les
mov
jno
mov
jnp
sti
cs
mov
call
mov
rcrb
pop
cwtl
ret
push
loopne
arpl
cmc
xor
cmc
cmp
cmp
mov
nop
or
das
mov
push
fildll
adc
push
test
pop
icebp
hlt
outsb
mov
inc
ret
lock
xor
inc
mov
push
imul
jne
ret
stos
lret
mov
add
lock
les
push
or
nop
cmc
sub
jnp
sbb
inc
mov
lret
pop
inc
js
pop
outsl
jns
out
or
mov
int3
jne
leave
dec
adc
clc
aaa
mov
push
xor
xchg
arpl
sub
mov
lcall
adc
loop
mov
ljmp
inc
popa
xor
xor
jl
leave
int
gs
pop
mull
mov
shlb
push
test
aaa
mov
or
popa
sub
movsl
mov
decl
test
push
pop
dec
aaa
call
add
fadds
push
push
loopne
add
sbb
dec
or
xor
sbb
hlt
mov
in
test
mov
mov
adc
or
add
mov
dec
aaa
cmp
imulb
arpl
insb
mov
mov
add
hlt
je
xor
jne
sbb
lret
incl
bound
adc
outsb
pop
loopne
addb
dec
or
das
push
push
sbb
pop
addr16
mov
imul
adc
mov
dec
aaa
call
pop
mov
add
xchg
imul
mov
dec
aaa
cmp
divl
push
cmc
jbe
fldl
leave
add
addr16
rol
cli
add
mov
adc
fists
imul
aad
add
lock
ret
push
fwait
inc
imul
jb
fadds
add
das
cmp
pop
push
push
cwtl
iret
dec
aaa
add
cmp
mov
aaa
add
adc
mov
aas
push
pop
dec
aaa
add
dec
inc
adc
inc
or
add
cmpsl
aas
push
sbb
lahf
pushl
pop
mov
je
xor
jne
sbb
shrb
fadds
inc
sub
push
pop
and
push
mov
push
popa
mov
inc
pop
adc
loopne
xchg
pop
dec
mov
cmova
movsl
mov
aaa
test
xchg
mov
add
mov
stos
imul
add
divb
fimuls
addr16
sahf
push
xor
pop
dec
mov
adc
cmp
add
je
cli
fsub
lret
push
mov
je
cli
fmuls
inc
rcl
loop
pop
dec
xor
andb
pop
hlt
mov
dec
or
imul
add
add
add
loopne
fcompl
divb
loopne
mov
pop
dec
mov
dec
decl
aad
mov
dec
aaa
test
fidivs
push
sbb
mov
add
mov
stos
imul
inc
arpl
add
dec
clc
sbb
jbe
addr16
mov
add
add
add
add
mov
sub
addl
je
aad
add
mov
or
sbbl
loopne
fdivrl
add
addl
dec
jmp
mov
inc
aaa
fimuls
push
cmp
push
loop
ffreep
inc
push
inc
sbb
push
inc
pminub
ss
std
add
insl
mov
hlt
xor
mov
mov
rol
fsubl
jbe
addr16
mov
test
mov
dec
ficoms
xor
jb
add
movsb
addr16
jne
hlt
push
call
and
lock
cwtl
hlt
cmp
test
incl
lret
push
cld
pop
aad
insb
loopne
xchg
aaa
lcall
mov
push
xor
pop
dec
fadd
mov
fildll
loopne
rol
ss
xor
pop
ficoms
add
pop
fdivs
je
adc
sub
aaa
add
dec
hlt
mov
cwtl
mov
hlt
mov
xor
fimuls
sub
jb
lods
add
jl
add
fs
decb
shl
ds
push
mul
imul
int
pushf
stos
lock
mov
xlat
jo
adcb
inc
dec
mov
neg
int3
sub
pop
dec
mov
pop
dec
aaa
mov
mov
testl
sub
mov
aaa
xor
std
mov
decl
gs
add
aas
daa
loope
dec
mov
pop
dec
aaa
test
dec
aaa
xor
fs
lcall
and
jb
shlb
add
gs
mov
xor
popf
inc
pusha
lcall
paddsw
enter
rcrl
enter
push
push
repz
fwait
push
enter
shlb
inc
fisttps
enter
mov
shll
dec
dec
addr16
into
into
lret
fs
lock
push
dec
mov
ljmp
pop
gs
pop
jmp
push
fs
fmuls
xor
inc
cld
push
into
int
xor
pushw
aaa
add
add
and
pop
repnz
mov
mov
or
rol
fidivrs
sbbb
xor
fisubs
jmp
pop
cmc
add
mov
pop
inc
pop
mov
dec
lret
cld
mov
mov
add
ds
xlat
dec
sub
pop
dec
aaa
inc
push
mov
cld
mov
add
cmpsl
jmp
leave
xor
sar
push
arpl
call
int
sbb
or
insb
and
pop
sub
push
cmp
jmp
int3
sbb
add
pop
mov
lret
jecxz
faddl
sbb
xchg
inc
ret
lret
pop
mov
call
subb
pop
jb
ret
movsb
jle
mov
dec
mov
or
sub
dec
iret
aas
push
icebp
sub
push
loopne
fisubs
mov
add
pop
fsub
lret
fstps
scas
or
sbb
ljmp
inc
pop
divb
lret
enter
aaa
je
clc
fimuls
popa
pop
cli
orb
add
pop
shrl
rclb
out
cmp
dec
mov
adc
pushf
pop
lret
pushf
popa
call
adc
jne
hlt
cmp
jp
call
lea
mov
push
popa
mov
jo
pop
divb
jb
fldl
inc
push
aad
insb
loop
mov
add
dec
or
sti
sbb
cmp
or
ficoms
inc
jne
jb
cld
hlt
pusha
mov
cmp
or
and
mov
jbe
ficoms
inc
jne
jb
mov
mov
or
add
add
add
add
es
or
pop
dec
fmull
rclb
push
rorb
xor
or
aad
push
shrb
in
imul
fldt
out
cmp
sub
popa
inc
push
sbb
mov
dec
add
enter
jbe
inc
std
lret
sarl
fsubr
inc
std
add
mov
out
and
push
sahf
jge
pop
dec
aaa
add
and
or
jmp
lret
enter
mov
add
inc
mov
dec
add
fadd
push
std
lret
shll
fsubr
inc
std
add
loopne
imul
rol
push
shrb
in
cmp
add
loop
lret
push
sar
cmp
aam
push
inc
out
ljmp
into
xor
pusha
inc
push
loopne
fidivs
maxps
xor
jno
add
mov
cmp
dec
mov
pop
dec
aaa
lcall
data16
mov
inc
out
pop
fdivrp
pop
dec
cmp
pop
pop
dec
cmp
xchg
out
push
test
loope
dec
mov
fs
add
mov
incl
inc
pop
testb
sbb
add
add
xor
inc
push
hlt
callw
ljmp
je
pop
dec
mov
or
neg
paddusw
add
dec
out
pop
dec
mov
pop
dec
aaa
lea
mov
test
xchg
jo
push
xchg
std
jmp
inc
dec
add
jae
or
pop
mov
data16
pop
icebp
std
xor
xlat
lret
inc
pop
roll
xorb
inc
pop
divb
cmpl
imul
ljmp
aas
cmp
and
fmull
add
add
add
sahf
push
jno
fistpl
aaa
jne
roll
add
xlat
adcl
mov
mov
dec
add
or
add
aaa
call
xor
dec
iret
jae
out
sarb
sbb
data16
jbe
rcrb
jbe
sbb
inc
repz
ficoms
pop
jmp
fisttpl
or
in
push
jo
fcmovnu
movl
dec
pop
mov
add
mov
arpl
jle
xor
jae
xor
int3
lcall
jae
loop
ds
roll
dec
mov
mov
shl
sar
add
cmp
es
mov
fldt
sbb
test
pop
fcoms
addr16
push
stos
call
bound
inc
pop
jb
mov
jnp
fimuls
pop
mov
dec
faddl
iret
addr16
into
pop
jmp
add
cmp
dec
aaa
add
sub
call
add
jmp
filds
add
mov
ja
iret
lret
repz
pop
inc
or
mov
outsb
mov
push
rcrb
add
pop
dec
mov
push
sbb
shrb
mov
aaa
sbb
pop
sub
mov
sbb
mov
inc
pop
pop
fcomip
sbb
outsl
add
xor
mov
aaa
add
add
pop
or
sub
mov
daa
dec
mov
dec
lcall
dec
lcall
dec
lcall
and
dec
adc
jp
imul
or
mov
pop
or
call
mov
dec
dec
or
rol
add
out
sbb
jmp
sbb
or
pop
dec
aaa
jge
les
add
ret
sbb
jmp
pop
add
nop
or
ljmp
inc
pop
iret
divb
stos
out
cmp
or
je
cli
fsubrp
mov
ss
cmp
xchg
jno
cmc
pop
incl
dec
aaa
add
push
push
bound
ret
shrb
clc
ficoms
add
fisubrs
push
ret
popf
xchg
jmp
mov
pop
xor
push
push
jbe
pop
mov
add
add
add
fcoms
cmp
dec
in
call
mov
xor
or
add
aaa
xor
mov
xorl
test
add
loop
lret
negb
or
dec
popa
je
in
call
andb
fcoml
rorb
push
ret
aad
inc
icebp
rolb
inc
mov
pop
dec
aaa
mov
push
lcall
mov
jb
incl
mov
rorl
iret
mov
push
mov
gs
incl
add
mov
push
data16
lods
idiv
sbb
push
mov
xchg
leave
decl
mov
or
call
fdivl
lea
push
lcall
xor
mov
push
call
or
push
shll
jno
jmp
xchg
call
movl
out
push
std
insb
push
pop
add
and
pop
or
call
iret
sbb
cmp
adc
fmulp
push
std
and
incw
inc
add
pop
loopne
call
pop
xchg
int3
cmpsb
rcr
std
popa
push
loopne
push
ds
cs
push
ret
rolb
adc
or
push
pop
dec
aaa
mov
daa
sbb
sbb
call
rcrl
cli
push
push
loopne
adc
ds
add
repnz
shll
ret
xor
pop
dec
aaa
add
stc
pusha
push
loopne
adc
mov
pop
mov
mov
out
xor
mov
sbb
push
out
adc
test
add
add
add
add
mov
pop
arpl
inc
or
push
je
leave
dec
and
push
inc
push
jo
adc
sarl
rolb
cmp
push
cmp
aaa
mov
cltd
ds
rorb
add
jg
lahf
xor
aaa
add
mov
push
repz
rolb
add
mov
pop
pop
mov
frstor
mov
adc
outsb
dec
popl
pop
dec
aaa
ret
mov
mov
pop
or
jmp
mull
cmpsl
push
jbe
rolb
adc
add
mov
dec
mov
push
add
imul
jp
mov
ds
and
jnp
pop
loopne
cmp
test
sub
lea
imul
cmp
sbbl
mov
pop
sbb
inc
pop
dec
mov
pop
pop
loop
adc
push
jne
xor
data16
fdivs
sbb
call
add
int3
cltd
inc
fists
rolb
icebp
rclb
mov
inc
push
mov
ja
fiadds
add
add
add
inc
testb
roll
cmp
push
or
call
shl
test
fistpll
xor
add
inc
or
pop
inc
or
bound
and
insl
jmp
fmuls
pop
sbbl
xor
mov
mov
sti
inc
mov
pop
dec
aaa
push
dec
dec
arpl
imul
aaa
test
dec
aaa
add
pop
sbbl
inc
dec
sub
xchg
fadds
xor
add
add
mov
or
iret
sub
leave
dec
mov
jne
bound
push
arpl
sbb
xlat
push
stos
fisubrs
arpl
dec
in
add
outsb
dec
add
xchg
ret
inc
or
xchg
xor
mov
incl
push
and
or
mov
or
daa
sub
sub
sub
jne
popa
enter
arpl
push
push
fwait
les
adcl
lcall
add
mov
cmp
xor
pop
inc
add
add
add
add
add
psubusb
mov
dec
enter
jbe
adc
xchg
loopne
dec
mov
jne
ret
imul
mov
les
dec
aaa
test
aaa
add
dec
inc
sub
bound
mov
insl
test
dec
call
push
int
jne
ret
outsb
push
xlat
inc
pop
cli
ficomps
loop
fcompl
dec
aaa
test
dec
aaa
add
fwait
decl
loopne
loop
add
aaa
add
mov
cmpsb
dec
jno
mov
jmp
je
pop
dec
and
add
add
add
sti
or
mov
movsl
adc
and
or
je
clc
fimuls
movsl
dec
pop
mov
fmuls
jbe
neg
clc
push
dec
pop
mov
fwait
pushl
aaa
xor
dec
repz
or
incl
push
je
mov
loopne
dec
addr16
loop
outsb
mov
in
pop
bound
cmp
insl
ret
loopne
popa
mov
ret
fimuls
adcl
das
push
repz
loopne
popa
mov
hlt
mov
add
pmovmskb
xor
add
push
stos
inc
dec
inc
or
dec
inc
or
push
stos
jmp
stos
call
stos
incl
stos
pushl
call
fs
call
push
aam
call
inc
aam
call
xor
sbb
es
jmp
push
call
adc
add
imulb
sub
push
scas
push
rorl
call
in
or
push
scas
fadds
ffreep
out
incl
fistpll
add
add
add
xlat
dec
jmp
dec
jmp
dec
incl
dec
incl
dec
jmp
icebp
ficoms
in
fimuls
and
inc
out
jp
dec
jmp
dec
jmp
dec
incl
dec
incl
dec
jmp
ficoms
dec
jmp
fimuls
dec
movl
mov
stos
pushl
aaa
call
pushf
xchg
mov
es
dec
add
dec
mov
sub
dec
aaa
add
stos
lcall
xchg
pop
dec
aaa
call
inc
xchg
scas
add
rorb
jmp
lods
add
xlat
fwait
sbb
mov
dec
aaa
add
stos
incl
andb
in
xchg
sahf
add
rorb
lahf
sbb
push
rcrb
mov
mov
das
adc
xchg
or
fwait
xchg
dec
insl
mov
or
add
inc
addr16
adc
cmp
add
add
add
sbb
pop
lods
xor
pop
cmpsb
or
rcll
mov
inc
mov
xchg
push
addr16
mov
dec
idivl
mov
imul
pop
add
inc
push
addr16
and
jge
jo
out
cmp
or
pop
fwait
pushf
dec
popa
mov
xchg
sqrtps
pop
in
call
aad
and
dec
out
sbb
pop
or
xor
lds
xor
push
insl
call
call
aad
push
push
lcall
push
xlat
jo
rorl
shrb
ret
xchg
add
xor
mov
add
or
mov
divl
std
add
and
cmp
pop
xchg
or
ljmp
aad
push
sub
rdmsr
sbb
ret
mov
or
sarb
mov
push
push
movsl
inc
sub
test
mov
jno
pop
xor
outsb
jbe
inc
pop
lret
mov
add
add
add
add
jmp
dec
lcall
inc
pop
lret
mov
add
add
pop
into
incb
pop
dec
mov
call
push
inc
add
mov
ja
loop
pop
mov
xlat
inc
pop
jnp
cmp
push
push
je
daa
shufps
jne
aad
lds
aaa
add
and
test
dec
aaa
add
inc
jg
jle
inc
pop
push
add
pop
dec
aaa
ja
xor
push
pop
dec
mov
inc
or
dec
repz
pop
dec
rclb
mov
mov
add
cwtl
mov
in
pop
lret
testl
das
mov
add
lcall
pushf
inc
mov
incl
pop
jne
mov
incl
fimuls
dec
adc
push
or
or
loope
dec
mov
push
lcall
xchg
inc
popa
jmp
jns
cmp
dec
mov
inc
sarl
cmpsl
pop
jne
sarl
mov
inc
dec
sbb
pop
cmp
clc
in
cmp
sbb
jg
push
bound
sub
jne
lcall
add
pop
dec
mov
fmuls
and
test
jecxz
push
push
jne
inc
dec
adc
jne
inc
sub
mov
lret
pushf
iret
or
inc
pop
loopne
mov
aaa
movsl
gs
rclb
jns
sub
icebp
ret
rolb
das
leave
rcll
adc
das
lea
inc
incl
inc
dec
and
mov
jne
inc
dec
adc
mov
fmuls
cmp
je
fsubrs
hlt
int3
adc
hlt
int3
lahf
adc
add
rcll
or
or
mov
push
xlat
jo
roll
ror
mov
add
das
leave
mov
push
mov
loope
xor
cmpsl
push
mov
add
mov
lea
movsb
lock
rolb
mov
rcll
jb
inc
pop
ja
mov
pop
outsl
mov
andl
adcl
push
inc
dec
cmp
pop
xchg
adc
fimuls
dec
or
test
dec
sbb
adc
sbb
clc
repz
jno
pop
dec
aaa
add
add
fs
push
jl
xchg
sbbb
arpl
mov
adc
or
sahf
pop
inc
add
popa
jno
pop
mov
add
add
push
into
fwait
add
mov
int3
pop
dec
aaa
mov
inc
add
mov
ja
loop
pop
mov
xlat
inc
pop
ja
cmp
outsb
push
mov
jne
aad
lds
aaa
add
inc
dec
and
clc
and
aaa
test
dec
aaa
add
lea
mov
testl
inc
insb
push
add
add
pop
dec
aaa
ja
xor
add
mov
push
or
repz
pop
dec
rclb
mov
ss
in
inc
popa
cmp
mov
pop
pop
in
pop
int
or
xchg
jmp
shll
lahf
lret
pandn
jne
inc
dec
adc
mov
push
inc
dec
and
fiaddl
pop
dec
mov
sub
js
or
jne
inc
dec
or
enter
cmp
push
mov
negl
dec
dec
sub
and
xlat
stc
aaa
add
je
pop
rcrl
jne
add
dec
sbb
xor
outsb
push
repnz
add
bnd
mov
xor
inc
cmp
iret
jnp
arpl
add
dec
dec
push
mov
cmp
pop
aad
cmp
push
hlt
add
std
or
loop
incl
test
je
or
fnsave
dec
aaa
sbbl
mov
xor
testb
mov
hlt
and
xor
cmpsb
push
adc
or
fwait
add
mov
push
mov
notrack
jne
aas
dec
clc
test
add
sub
mov
inc
outsb
call
adc
dec
hlt
ret
idivl
clc
add
popa
add
mov
xchg
fs
popf
das
jne
sarl
inc
arpl
mov
rorb
jne
xor
add
pusha
mov
mov
xor
xor
add
add
dec
mov
push
test
je
stos
aas
dec
adc
sub
add
sti
sbb
test
cmp
mov
mov
fwait
push
dec
push
incl
jne
aas
out
mov
inc
add
add
cs
or
mov
aaa
add
add
xchg
sub
fmuls
xor
in
push
iret
icebp
pop
dec
aaa
mov
ret
push
aas
int3
daa
dec
aaa
adcl
sbb
ds
cmp
mov
pop
pop
in
pop
leave
testl
dec
cmp
jne
lcall
fadds
xor
inc
outsl
ljmp
jne
cmp
das
jmp
or
mov
and
push
inc
jne
lcall
xchg
pop
add
mov
shlb
add
into
ficoms
sbb
xchg
iret
xchg
insb
cmp
jne
cmp
sub
into
pop
jne
cmp
adc
fwait
dec
mov
bound
dec
hlt
add
lods
decl
mov
or
jl
outsl
inc
addr16
adc
lea
addr16
xor
je
mov
rorb
cmp
leave
cwtl
rol
push
loopne
mov
or
mov
call
xchg
mov
lea
cmp
jne
cmp
and
out
popa
jne
cmp
xor
xor
fadds
sbb
add
add
add
into
cmp
je
fsubrs
mov
xchg
shrl
mov
jmp
dec
aaa
adcl
fs
sarb
insl
mov
rcrl
mov
dec
adc
iret
call
rcrb
add
pop
dec
aaa
ja
iret
jl
ror
out
add
ss
mov
das
rcrl
das
lea
xor
push
push
sbb
pop
dec
aaa
push
jae
aaa
add
pusha
test
push
push
add
test
inc
push
dec
pusha
jmp
ja
mov
dec
js
xchg
xor
and
add
sub
stos
inc
mov
pop
lcall
sahf
xor
stos
xor
cli
hlt
cmp
jne
cmpb
mov
lret
push
jo
jbe
jmp
dec
mov
data16
fstpt
dec
stos
pop
jo
sahf
lock
cmpsl
or
hlt
int3
sub
jae
push
outsl
out
cmpl
rcll
roll
xchg
add
dec
push
sub
into
fadds
pop
or
leave
push
or
iret
dec
aaa
add
cmp
aaa
into
rcll
sbb
xor
cmp
bswap
das
mov
add
dec
aaa
add
inc
ds
mov
pop
lret
pop
mov
mov
ret
sarb
insl
mov
int
or
bound
inc
pop
jge
mov
ss
push
out
lret
push
add
add
dec
or
pop
pop
loope
dec
mov
enter
lea
aaa
jmp
pop
rolb
leave
sbb
push
shlb
rdmsr
lcall
mov
ret
jl
loopne
sub
mov
mov
mov
inc
jl
sub
mov
push
add
mov
mov
xor
fistps
or
mov
and
xchg
pop
mov
dec
sub
fimuls
dec
pop
fdivs
mov
sbbl
test
and
jne
ret
dec
fcompl
jmp
pop
dec
aaa
xorl
fucomip
daa
push
call
cmp
push
aas
inc
pop
fidivrl
enter
dec
push
into
mov
add
push
call
rorb
add
dec
jb
add
outsb
push
mov
adc
lods
mov
cmp
add
jmp
call
and
je
mov
sbbl
cmp
aaa
mov
addr16
cmp
fucomi
jg
fmuls
cmpsb
push
jne
movsb
cmp
xchg
rcr
or
xchg
repz
and
test
dec
sbb
mov
jne
aaa
sub
test
sub
pop
loopne
jae
sbb
jge
mov
outsb
push
xchg
mov
xor
test
cmp
add
iret
std
xchg
pop
add
jl
and
dec
sub
dec
in
xor
add
scas
inc
jne
and
and
popa
mov
mov
incl
les
incl
xor
xlat
lea
addr16
add
cld
mov
rclb
cwtl
rol
shlb
mov
jmp
inc
mov
mov
sub
pushf
xor
dec
or
xor
mov
inc
cmp
cmpsb
ljmp
push
or
incb
inc
dec
aaa
add
jmp
dec
leave
sti
adc
add
mov
add
dec
mov
das
leave
push
jo
jns
jmp
bound
inc
adc
mov
addl
je
mov
and
jle
leave
subb
mov
mov
lahf
das
push
mov
ret
pushl
xor
dec
shrl
int
aaa
mov
mov
je
shlb
orb
ds
cmp
push
lret
into
inc
mov
xchg
mov
aaa
mov
xor
mov
add
mov
add
add
mov
sti
dec
mov
xor
pop
dec
shlb
dec
add
inc
add
inc
incb
inc
aaa
add
sbb
push
pop
daa
add
rorb
fdivs
sub
lret
cs
mov
pop
mov
add
xchg
dec
add
shlb
sar
out
add
jg
je
xor
cld
repnz
sbb
or
xorl
rcrb
inc
or
add
dec
xor
mov
mov
hlt
bnd
shlb
fmuls
icebp
cmp
test
or
ret
jb
add
sbb
push
pop
aaa
jne
mov
das
jne
movl
inc
mov
pop
rclb
add
push
jle
shl
pushl
add
dec
popl
out
je
loopne
mov
cmp
pop
lret
fimuls
dec
sub
and
popf
sub
into
inc
inc
dec
incb
jns
aaa
add
xor
prefetchw
pop
bswap
or
loop
ret
mov
dec
mov
int
pop
add
into
pop
lret
inc
clc
pop
mov
mov
ss
inc
cmpsl
and
mov
xor
scas
mov
inc
xchg
push
jo
jge
pop
or
lock
shlb
insl
mov
notl
mov
inc
ds
jne
jae
cwtl
xchg
mov
jne
mov
rolb
mov
xchg
std
sbb
mov
int3
pop
repz
stos
mov
out
sbb
cmp
and
pop
cmp
jmp
add
loopne
popa
xchg
loopne
mov
jg
adc
test
ror
lahf
std
repz
push
vxorps
add
lock
lds
scas
xor
cmp
xor
rorl
daa
push
or
or
adcl
out
dec
add
les
jno
dec
push
jno
dec
add
add
cmpsb
inc
mov
xor
jne
je
icebp
cld
das
dec
add
adc
leave
sbb
repz
ud0
int3
cmpsl
repz
lahf
repz
mov
pop
cwtl
mov
aaa
add
cmpsb
sbb
push
inc
push
mov
fmuls
loopne
sbb
mov
add
dec
adc
pop
je
add
je
lock
aaa
cli
add
aaa
jne
inc
fists
or
jecxz
cwtl
xor
loopne
xchg
sub
ret
into
xor
dec
movl
fdivrs
xor
std
sbbl
mov
andl
mov
add
dec
or
daa
cmp
pop
lret
sbb
or
je
divl
fidivl
rclb
inc
or
or
sub
and
gs
into
mov
pop
sbb
jns
lods
lea
mov
pop
add
pushf
xchg
cli
lea
or
and
sbb
call
mov
mov
aas
inc
mov
dec
shll
add
mov
mov
js
repnz
test
aam
imul
jns
rolb
mov
mov
cmp
call
sbb
sbb
cmp
mov
jmp
pop
dec
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
inc
cmp
fldl
add
add
inc
cmp
pop
dec
cmp
gs
cmp
push
dec
cmp
xor
add
dec
cmp
cmpsl
dec
cmp
mov
dec
cmp
aad
cmp
roll
add
inc
cmp
out
inc
cmp
sbb
add
dec
cmp
or
add
cmp
pop
dec
cmp
sub
add
dec
cmp
rorl
add
dec
cmp
stc
dec
cmp
cmc
dec
cmp
fwait
dec
cmp
ret
dec
cmp
pop
push
add
cmp
dec
push
add
push
add
push
add
imul
add
imul
add
add
imul
sub
imul
inc
imul
pop
imul
add
cmp
imul
add
imul
add
imul
add
push
add
imul
add
cmp
pop
insb
cmp
imul
insb
cmp
add
sub
loope
cmp
leave
insb
cmp
lds
xchg
insb
cmp
insb
cmp
jnp
cmp
imul
insl
imul
subl
subl
pop
dec
aaa
add
add
dec
aaa
add
aaa
add
aaa
add
aaa
add
ja
ja
xchg
mov
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
push
add
dec
push
add
dec
add
aaa
add
xchg
jp
sub
inc
add
dec
push
add
aaa
add
dec
push
add
dec
dec
add
dec
aaa
add
dec
pop
add
dec
push
add
dec
pop
add
dec
dec
add
dec
pop
add
dec
push
add
dec
dec
add
push
add
dec
add
aaa
add
dec
push
add
add
dec
push
add
aaa
add
push
add
dec
push
add
dec
add
pop
add
dec
pop
add
aaa
add
dec
aaa
add
mov
outsl
push
lcall
cmp
outsb
pop
dec
aaa
add
sahf
pop
data16
xchg
pop
gs
dec
aaa
add
mov
jne
lods
push
arpl
mov
insl
mov
stos
dec
popa
jnp
dec
jb
cwtl
aaa
add
mov
mov
aaa
add
push
cmp
insb
cwtl
aaa
add
dec
cmp
aaa
add
scas
push
arpl
mov
outsb
cmp
aaa
add
sub
add
js
cld
daa
js
pop
sub
daa
sub
sbb
js
aaa
sub
aas
sub
pop
sub
mov
js
pop
dec
aaa
add
aaa
add
aaa
add
add
add
aaa
add
add
aaa
add
dec
aaa
add
inc
aaa
add
dec
aaa
add
push
aaa
add
inc
aaa
add
arpl
add
mov
cmp
pop
dec
aaa
add
dec
add
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
push
aaa
add
dec
aaa
add
dec
aaa
add
add
aaa
add
dec
aaa
add
aaa
add
push
aaa
add
dec
aaa
add
dec
aaa
add
aaa
add
push
aaa
add
dec
aaa
add
aaa
add
push
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
add
aaa
add
dec
aaa
add
dec
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
push
aaa
add
dec
aaa
add
dec
aaa
add
aaa
add
push
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
dec
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
push
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
dec
add
aaa
add
aaa
add
push
aaa
add
dec
aaa
add
dec
aaa
add
aaa
add
push
aaa
add
dec
aaa
add
aaa
add
push
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
aaa
add
dec
aaa
add
dec
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
push
aaa
add
dec
aaa
add
add
add
aaa
add
push
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
inc
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
push
aaa
add
inc
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
push
aaa
add
dec
aaa
add
dec
aaa
add
aaa
add
push
aaa
add
dec
aaa
add
add
aaa
add
push
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
inc
aaa
add
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
aaa
add
dec
aaa
add
inc
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
push
aaa
add
dec
aaa
add
dec
aaa
add
aaa
add
push
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
aaa
add
dec
aaa
add
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
inc
aaa
add
aaa
add
aaa
add
push
aaa
add
aaa
add
dec
aaa
add
inc
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
push
aaa
add
dec
aaa
add
dec
aaa
add
aaa
add
push
aaa
add
push
aaa
add
push
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
push
aaa
add
inc
aaa
add
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
aaa
add
dec
aaa
add
inc
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
push
aaa
add
dec
aaa
add
dec
aaa
add
aaa
add
push
aaa
add
push
aaa
add
push
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
push
aaa
add
inc
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
push
aaa
add
add
dec
aaa
add
inc
aaa
add
add
aaa
add
dec
aaa
add
aaa
add
push
aaa
add
dec
aaa
add
dec
aaa
add
aaa
add
push
aaa
add
dec
aaa
add
aaa
add
push
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
inc
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
aaa
add
dec
aaa
add
inc
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
add
aaa
add
inc
aaa
add
dec
aaa
add
dec
aaa
add
aaa
add
inc
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
push
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
inc
aaa
add
aaa
add
push
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
inc
aaa
add
dec
aaa
add
dec
aaa
add
add
aaa
add
inc
aaa
add
dec
aaa
add
aaa
add
inc
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
push
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
aaa
add
dec
aaa
add
push
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
inc
aaa
add
dec
aaa
add
dec
aaa
add
aaa
add
inc
aaa
add
dec
aaa
add
aaa
add
dec
add
aaa
add
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
dec
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
inc
aaa
add
dec
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
inc
aaa
add
dec
aaa
add
aaa
add
aaa
add
inc
aaa
add
dec
aaa
add
aaa
add
inc
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
add
dec
aaa
add
aaa
add
dec
aaa
add
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
aaa
add
dec
aaa
add
dec
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
inc
aaa
add
dec
aaa
add
aaa
add
aaa
add
inc
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
dec
aaa
add
aaa
add
add
aaa
add
aaa
add
aaa
add
add
dec
aaa
add
dec
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
dec
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
inc
aaa
add
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
add
aaa
add
dec
aaa
add
add
dec
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
inc
aaa
add
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
inc
aaa
add
dec
aaa
add
dec
aaa
add
add
aaa
add
dec
aaa
add
aaa
add
add
add
add
add
add
aaa
add
dec
aaa
add
dec
aaa
add
aaa
add
inc
aaa
add
dec
aaa
add
aaa
add
inc
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
aaa
add
dec
aaa
add
dec
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
inc
aaa
add
dec
aaa
add
dec
aaa
add
aaa
add
add
inc
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
dec
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
inc
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
inc
aaa
add
dec
aaa
add
dec
aaa
add
aaa
add
inc
aaa
add
dec
aaa
add
aaa
add
inc
add
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
aaa
add
dec
aaa
add
dec
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
inc
aaa
add
dec
aaa
add
dec
aaa
add
aaa
add
inc
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
add
aaa
add
dec
aaa
add
inc
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
inc
aaa
add
inc
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
inc
aaa
add
dec
aaa
add
dec
aaa
add
aaa
add
inc
aaa
add
dec
aaa
add
aaa
add
inc
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
inc
aaa
add
add
aaa
add
dec
add
aaa
add
aaa
add
aaa
add
aaa
add
dec
aaa
add
inc
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
inc
aaa
add
dec
aaa
add
dec
aaa
add
aaa
add
inc
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
inc
aaa
add
aaa
add
aaa
add
inc
aaa
add
aaa
add
dec
aaa
add
inc
aaa
add
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
inc
aaa
add
dec
aaa
add
dec
aaa
add
aaa
add
inc
aaa
add
inc
aaa
add
inc
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
inc
aaa
add
inc
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
aaa
add
dec
aaa
add
inc
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
inc
add
aaa
add
dec
aaa
add
dec
aaa
add
aaa
add
inc
aaa
add
inc
aaa
add
inc
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
inc
aaa
add
inc
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
inc
aaa
add
dec
aaa
add
inc
aaa
add
add
aaa
add
dec
aaa
add
aaa
add
inc
aaa
add
dec
aaa
add
dec
aaa
add
aaa
add
add
aaa
add
dec
aaa
add
aaa
add
inc
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
inc
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
aaa
add
dec
aaa
add
inc
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
push
aaa
add
dec
aaa
add
dec
aaa
add
aaa
add
push
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
push
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
push
aaa
add
aaa
add
push
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
push
aaa
add
dec
aaa
add
dec
aaa
add
aaa
add
push
aaa
add
dec
aaa
add
aaa
add
push
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
add
push
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
aaa
add
dec
aaa
add
push
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
push
aaa
add
dec
aaa
add
dec
aaa
add
aaa
add
push
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
dec
aaa
add
aaa
add
aaa
add
dec
aaa
add
add
aaa
add
aaa
add
push
aaa
add
dec
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
push
aaa
add
aaa
add
dec
aaa
add
aaa
add
push
aaa
add
dec
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
aaa
add
dec
aaa
add
dec
aaa
add
dec
aaa
add
add
aaa
add
dec
aaa
add
aaa
add
push
aaa
add
aaa
add
dec
aaa
add
aaa
add
push
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
dec
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
dec
aaa
add
dec
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
add
aaa
add
dec
aaa
add
dec
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
add
aaa
add
aaa
add
aaa
add
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
mov
add
dec
aaa
add
dec
aaa
add
dec
aaa
add
sub
add
dec
aaa
add
add
add
add
add
add
aaa
add
dec
aaa
add
push
add
dec
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
add
dec
aaa
add
aaa
add
dec
aaa
add
push
add
dec
aaa
add
dec
aaa
add
dec
aaa
add
cmp
add
dec
aaa
add
dec
aaa
add
dec
aaa
add
push
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
push
xchg
cmp
adc
inc
insb
jp
jb
imul
cs
or
and
dec
cmp
sbb
gs
sub
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
aaa
add
aaa
add
add
aaa
add
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
dec
aaa
add
dec
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
dec
aaa
add
dec
aaa
add
dec
aaa
add
dec
aaa
add
dec
aaa
add
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
cmp
ja
imul
push
push
push
pop
fdiv
push
jo
cmpsl
pop
jmp
dec
shl
push
mov
jecxz
gs
loopne
and
xchg
inc
mov
jle
das
jg
lret
nop
mov
sub
repz
push
loop
inc
out
insl
mov
ljmp
mov
addl
pop
mov
cmp
cli
out
add
das
lea
pop
push
dec
mov
jns
mov
adc
cmp
cmpsb
lds
xor
mov
lods
adc
lods
js
fbstp
out
out
xchg
dec
in
faddl
cmp
loopne
xchg
dec
in
fistpl
out
out
cmc
mov
js
mov
aam
iret
dec
movsl
test
arpl
cmp
leave
and
aaa
icebp
xor
dec
mov
mov
pop
rcrl
pop
mov
mov
jbe
jns
add
sub
cwtl
jno
in
out
loop
mov
add
push
in
lahf
push
adc
js
add
pmullw
xor
jg
cmp
pop
xchg
pop
sahf
pop
out
pushf
push
imul
pop
test
loopne
insb
mov
cmp
sbb
das
addb
gs
jecxz
adc
mov
mov
cmp
pop
in
mov
jbe
mov
jmp
xor
dec
popf
fwait
mov
dec
dec
andl
scas
out
test
fistpll
mov
jecxz
inc
adc
sbb
add
add
add
add
stos
mov
cmp
cmp
add
xor
xchg
jnp
push
add
xor
jle
dec
push
call
push
pop
mov
gs
repz
sub
shl
mov
mov
mov
inc
mov
and
add
add
in
lea
loope
mov
in
ljmp
loop
fcomps
jae
inc
pop
jecxz
xor
xchg
inc
fs
or
pusha
or
in
clc
xor
stos
xlat
jge,pt
add
lods
das
xchg
or
pop
mull
jo
subb
push
outsb
lea
sti
and
mov
test
test
cmp
cwtl
mov
xchg
stos
in
dec
fucomi
mov
sub
out
stos
outsl
adc
lahf
andl
inc
mov
and
pop
push
xor
sti
jae
inc
cwtl
out
filds
pop
pop
test
enter
mov
inc
out
pop
lret
jno
pop
mov
test
dec
push
into
jle
int3
pop
popl
add
mov
insb
xor
inc
inc
test
push
mov
out
ret
call
sub
test
pop
or
fwait
jne
pop
in
out
push
jne
fistl
push
xor
outsb
jb,pt
lahf
aaa
add
addr16
loop
and
or
jmp
in
out
jl
pop
jecxz
das
sbb
xchg
mov
loope
es
test
cmp
outsl
movsb
lea
mov
xor
add
add
add
add
aam
popl
notb
xchg
add
xor
das
leave
cmp
mov
pop
cmpsl
movsb
pop
push
rclb
lea
cmpb
and
scas
scas
nop
in
fscale
inc
out
mov
fbstp
or
fsubp
add
inc
jb
mov
ja
test
mov
mov
test
and
cmp
mov
jb
in
fsubrl
inc
jo
mov
jg
les
dec
pop
out
push
sub
xor
adc
cmp
pop
outsl
jp,pt
gs
outsl
pop
fs
fs
insl
inc
imul
insb
ds
je
jns
je
outsl
pop
add
jnp
jb
jg
jae
ja
insl
pop
repnz
repnz
pop
insb
mov
ja
je
insl
pop
add
jp
cmpsl
insl
pop
insb
mov
pop
jb
pushw
insb
jle
pop
je
sub
jle
aaa
add
jb
jge
jae
js
bound
pop
insb
jb
pop
jb
pushw
insb
ss
je
sub
ss
aaa
add
gs
je
sub
add
sub
outsb
cmp
je
insl
pop
and
dec
push
hlt
jge
jae
dec
aaa
add
fs
outsl
idivb
gs
pop
fs
popa
mov
js
gs
dec
aaa
add
jl
jb
jge
jae
js
bound
ja
popa
jge
pop
and
dec
aaa
add
popa
pop
and
dec
imul
addr16
bound
arpl
pop
add
fs
popa
inc
popa
pop
and
popa
dec
je
fs
gs
push
decb
add
sahf
aaa
add
adc
add
pop
dec
aaa
add
adc
add
aaa
add
dec
push
add
aaa
add
dec
arpl
pop
dec
aaa
add
arpl
jns
dec
and
push
addr16
bound
jb
jp
popa
outsl
dec
aaa
add
push
and
push
jns
pop
pop
outsb
cmp
dec
and
pop
xor
popa
sub
jae
bound
dec
add
pusha
dec
popa
das
arpl
or
jb
gs
mull
imul
pop
outsb
cld
jne
jae
dec
aaa
add
pop
dec
popa
out
bound
mov
add
sub
lret
addr16
add
jl
arpl
imul
mov
pop
imul
add
jl
arpl
pop
jb
insl
dec
gs
aaa
add
dec
popa
inc
arpl
inc
arpl
xor
pop
jae
je
add
pusha
push
outsb
cmp
push
and
popa
push
jo
addr16
jae
popa
push
and
dec
push
ss
dec
add
dec
dec
add
aaa
add
dec
dec
add
dec
dec
add
dec
add
aaa
add
cmp
pop
dec
aaa
add
dec
aaa
add
aaa
inc
inc
pop
add
mov
inc
xlat
xchg
cwtl
loop
or
movsb
mov
sub
jae
fcomps
clc
pop
push
cmp
pop
dec
aaa
add
dec
aaa
inc
dec
xchg
out
and
addr16
leave
ja
mov
push
dec
aaa
add
aaa
add
dec
aaa
inc
stc
push
push
outsl
clc
push
aaa
add
pop
js
jb
ja
hlt
jb
add
das
js
sbb
add
jae
add
jb
add
ja
and
pop
mov
outsl
jne
aaa
add
pop
js
add
push
jae
add
push
loopne
dec
aaa
add
aaa
add
aaa
add
aaa
add
stos
sbb
aaa
add
aaa
add
pop
dec
inc
and
push
sub
or
add
dec
dec
add
dec
push
add
dec
pop
add
dec
adc
add
dec
aaa
add
je
je
pop
pop
and
sub
add
aaa
add
sub
pop
dec
or
test
jne
cmp
jb
js
or
aaa
add
jl
imul
add
xor
xor
add
add
add
add
inc
xor
pop
push
arpl
jbe
outsl
cmp
sub
addr16
popa
add
addr16
jo
sub
cmp
popa
ljmp
dec
push
jmp
pop
pop
and
arpl
mov
pop
pop
outsl
leave
js
arpl
lcall
mov
imul
jp
inc
insb
jb
pop
je
pop
push
daa
push
jp
jb
sub
cmp
data16
pop
insl
xor
pop
and
pop
pop
outsl
sub
je
pop
push
cs
inc
aaa
add
add
aaa
add
xor
xor
xor
negb
je
jbe
and
js
and
cltd
jo
cmp
fs
pop
pop
je
popa
dec
and
push
dec
jb
pop
pop
and
gs
arpl
and
push
je
imul
jl
xor
dec
and
pop
imul
sub
cmp
and
pop
pop
jns
jne
and
jp
insb
xor
je
pop
push
cmp
pop
insl
hlt
jbe
and
pusha
push
gs
jno
add
je
gs
jb
jbe
insb
out
push
data16
pop
insb
mov
imul
xchg
insl
stos
popa
push
gs
pop
dec
sub
fs
outsb
js
push
outsl
jne
pop
jb
pop
pop
popa
cmp
xorb
pop
push
jae
js
arpl
dec
and
pop
dec
pop
push
and
pop
push
dec
cmp
cs
inc
aaa
add
xor
xor
xor
cmp
outsl
push
arpl
or
arpl
sub
jmp
push
push
les
jae
outsb
add
push
push
aaa
add
aaa
add
push
xor
mov
inc
je
pop
push
and
imul
outsl
pop
je
outsl
pop
inc
mov
insl
je
pop
and
pop
outsb
jnp
push
arpl
cmp
push
xor
and
js
imul
sub
cmp
and
js
jns
pop
dec
and
pop
inc
insb
repnz
pop
je
js
cs
aaa
add
and
xor
push
xor
jnp
push
je
jae
imul
fs
fs
aaa
add
push
xor
push
popa
jns
pop
and
jae
imul
dec
gs
xor
pop
dec
aaa
add
push
xor
jnp
push
outsl
inc
jno
and
pop
pop
arpl
sub
sub
push
outsl
and
push
and
js
je
imul
imul
ja
or
aaa
add
and
xor
js
je
insl
push
outsl
outsl
dec
and
pop
pop
arpl
sub
mov
push
and
imul
jl
xor
pop
dec
aaa
add
push
xor
add
add
add
cmp
jb
sub
imul
jne
imul
js
arpl
jbe
or
or
pop
xor
xor
cmp
outsl
push
outsl
dec
and
pop
pop
arpl
sub
jmp
insb
aas
imul
popa
push
je
pop
pop
bound
dec
aaa
add
push
xor
mov
ja
outsl
mov
and
push
jae
jbe
and
dec
imul
aaa
add
push
xor
push
pop
pop
arpl
add
pop
and
insl
pop
jo
insl
dec
jb
pop
xor
pop
dec
aaa
add
and
xor
sub
add
arpl
insl
pop
and
pop
push
je
pop
dec
jb
push
pop
imul
jb
pop
xor
pop
dec
aaa
add
push
xor
jnp
push
outsl
cmpsb
insl
dec
and
sub
mov
dec
push
cmp
je
push
xor
push
push
imul
pop
popa
dec
pop
push
imul
je
push
ds
dec
sub
fs
dec
gs
dec
outsb
add
push
cmp
and
outsl
dec
insl
bnd
je
sub
cmp
and
jae
jne
pop
dec
jne
jbe
ja
arpl
popa
enter
les
mov
outsl
pop
popa
stos
pop
push
imul
push
jae
pop
dec
jo
jne
je
pop
pop
popa
jle
pop
outsl
imul
pop
imul
dec
imul
aaa
add
sbb
xor
xor
jnp
push
outsl
push
insl
dec
and
pop
pop
arpl
sub
or
pop
outsb
in
jb
outsl
std
jbe
add
push
xor
or
xor
je
je
insl
push
outsl
imul
pop
pop
arpl
sub
mov
push
test
or
test
push
xor
jp
push
outsb
jl
inc
outsl
jb
dec
and
inc
jo
pop
dec
and
jae
fs
xor
pop
dec
aaa
add
jno
jb
push
push
cvtpi2pd
or
insb
cmp
dec
outsb
out
jo
cmp
dec
jns
dec
aaa
add
aaa
add
adc
outsl
add
mov
pop
insl
jnp
pop
insl
mov
dec
outsb
mov
push
ja
and
add
jne
and
sub
or
imul
int3
ja
ja
js
popa
into
ja
in
ja
cmp
and
bound
sub
outsl
xor
je
outsl
ljmp
add
or
add
dec
jl
or
add
dec
jae
sub
add
dec
jae
pop
dec
aaa
add
addr16
ret
gs
outsb
dec
inc
test
outsb
add
dec
push
jbe
insl
popa
ja
pop
add
push
insl
popa
jg
pop
add
outsb
push
arpl
aaa
add
aaa
add
aaa
rclb
add
aaa
add
aaa
rcrb
add
aaa
add
dec
aaa
rclb
add
aaa
add
dec
aaa
shlb
add
aaa
add
dec
aaa
rclb
add
aaa
add
dec
aaa
rclb
add
aaa
add
dec
aaa
shlb
add
aaa
add
dec
aaa
shlb
add
aaa
add
dec
aaa
rclb
add
aaa
add
dec
aaa
rolb
push
dec
aaa
add
aaa
add
aaa
add
dec
push
dec
jno
gs
pop
outsb
imul
pop
je
jno
add
dec
push
or
dec
stc
jae
arpl
xchg
push
data16
pop
push
popa
out
jb
outsb
sbb
add
dec
dec
cli
pop
dec
inc
mov
jp
jo
pop
aaa
add
push
jbe
ja
outsb
mov
gs
jae
addr16
inc
jl
js
scas
jnp
push
dec
sbb
inc
cmpsl
mov
add
aaa
add
cmp
dec
or
xor
push
adc
sub
cmp
add
sbb
and
inc
and
sbb
sub
sub
adc
xor
xor
or
sbb
cmp
and
cmp
and
inc
sbb
dec
mov
nop
jbe
stos
jl
push
cmpsb
js
pop
xchg
test
mov
pop
fs
pop
push
jle
push
jo
pop
dec
je
pop
dec
js
fs
jl
pusha
inc
add
dec
aaa
add
mov
dec
outsb
pop
je
sub
xor
je
mov
cmp
jb
dec
aaa
add
push
popa
sub
dec
add
popa
add
or
jns
xchg
pop
push
jo
outsb
dec
daa
pop
dec
aaa
add
mov
imulb
jp
mov
pop
dec
popa
ret
add
pop
jae
sub
mov
addr16
arpl
pop
pop
popa
xchg
cmp
jo
sub
push
push
push
jb
dec
aaa
add
push
arpl
outsb
pop
jae
imul
sub
dec
addr16
fs
dec
popa
sub
add
outsl
pop
outsb
cmp
cmp
pop
insl
dec
and
insb
inc
jns
imul
clc
push
push
jb
jae
add
jmp
and
pop
arpl
insl
dec
and
push
pop
outsl
stos
arpl
arpl
pop
je
pop
pop
imul
dec
aaa
add
pop
arpl
dec
and
inc
jns
imul
cmp
jb
jae
gs
imul
and
inc
outsb
cmp
arpl
dec
adc
and
dec
je
push
pop
je
push
pop
data16
pop
daa
pop
dec
aaa
add
gs
outsb
cli
outsb
push
arpl
push
imul
pusha
pop
jb
fs
jb
add
aaa
add
gs
je
pop
pop
jbe
imul
subb
outsl
insl
push
dec
jb
addr16
outsl
imul
pop
je
pop
push
add
gs
and
pop
je
pop
pop
arpl
inc
and
imul
pop
dec
arpl
imul
push
pop
jb
push
push
jb
dec
aaa
add
insb
pop
outsb
cli
bound
push
pop
arpl
push
and
fs
je
push
pop
je
pop
pop
imul
imul
dec
aaa
add
arpl
push
pop
arpl
imul
pop
add
dec
arpl
push
pop
jb
push
push
jb
dec
aaa
add
push
popa
js
push
gs
push
pop
fs
pop
je
jg
and
outsb
push
jae
pop
pop
daa
pop
dec
aaa
add
pop
push
popa
cmp
gs
insl
pop
je
sub
in
push
dec
jb
and
add
push
outsb
repnz
out
insl
dec
imul
pop
pop
sahf
dec
aaa
add
pop
ja
ja
add
popw
jbe
pop
pop
bound
pop
arpl
je
pop
pop
je
pop
pop
arpl
dec
jne
outsl
push
add
add
push
arpl
popw
jbe
pop
pop
bound
outsl
push
add
jl
push
and
add
outsl
add
pop
pop
je
pop
pop
je
pop
push
imul
insb
push
jo
sub
add
insb
dec
outsl
jmp
pop
dec
jb
xor
add
outsl
pop
je
pop
pop
jbe
imul
insl
push
outsb
test
dec
jne
pop
push
jb
arpl
mov
outsl
mov
aaa
add
dec
and
pop
je
pop
pop
fs
dec
jb
insl
dec
outsl
dec
sub
ss
pop
je
pop
push
add
outsl
dec
and
add
add
add
add
cmp
pop
arpl
dec
je
pop
pop
je
pop
pop
imul
imul
sti
pop
push
jb
pop
pop
insb
cmp
jae
gs
arpl
sub
das
aaa
add
addr16
and
sub
lods
pop
dec
jb
imul
sub
jle
pop
je
pop
push
add
pop
arpl
dec
and
dec
je
pop
pop
je
pop
pop
imul
dec
daa
pop
dec
aaa
add
pusha
pop
arpl
addr16
and
addr16
jae
pop
dec
arpl
addr16
and
pop
pop
jb
add
pop
push
jb
dec
aaa
add
pop
pop
popa
ljmp
and
insb
push
gs
push
addr16
pop
jae
pop
dec
arpl
addr16
daa
pop
dec
aaa
add
pop
push
je
imul
pop
dec
jne
pop
push
jb
imul
pop
dec
gs
aaa
add
pop
arpl
dec
and
push
gs
push
addr16
pop
jae
pop
dec
arpl
dec
daa
pop
dec
aaa
add
pusha
pop
popa
sub
fs
dec
jb
imul
das
aaa
add
pop
dec
jb
addr16
daa
pop
dec
aaa
add
gs
arpl
gs
jae
push
add
pop
jne
pop
pop
daa
pop
dec
aaa
add
gs
daa
pop
dec
aaa
add
pushw
add
push
aaa
add
pop
je
push
aaa
add
pop
aaa
add
push
add
lea
add
aaa
add
add
pop
aaa
add
aaa
add
push
aaa
add
dec
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
dec
aaa
add
dec
aaa
add
aaa
add
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
dec
aaa
add
adc
add
push
jb
dec
aaa
add
pop
aaa
add
dec
aaa
add
aaa
add
aaa
add
pop
insb
ds
pop
add
pop
ja
dec
aaa
add
push
addr16
outsb
pop
add
dec
imul
je
je
sbb
add
pop
insb
scas
dec
aaa
add
pop
popa
mov
aaa
add
push
jg
aaa
add
add
add
add
dec
je
addr16
insb
xchg
add
pop
insb
pop
dec
aaa
add
pop
fs
add
pop
popa
dec
insl
pop
sub
aaa
add
aaa
add
inc
js
mov
js
stos
inc
js
lahf
inc
js
ret
inc
js
movl
add
inc
js
iret
inc
js
mov
dec
js
cmovge
sti
dec
js
fisttpl
mov
js
fistpll
js
lahf
inc
js
jnp
js
xchg
inc
js
popl
add
inc
js
addl
jg
js
addl
add
das
inc
js
sub
add
inc
js
adc
add
inc
js
sbb
add
js
arpl
add
js
dec
inc
js
aaa
inc
js
xor
add
inc
js
cmp
add
js
inc
inc
js
outsl
inc
js
imul
inc
js
push
inc
js
pop
inc
js
pop
inc
js
daa
inc
js
and
cmove
or
testl
add
inc
js
sti
inc
js
pop
inc
js
or
lahf
inc
js
cmove
or
jecxz
js
out
js
xor
add
add
add
js
jae
js
xchg
inc
js
mov
inc
js
roll
add
inc
js
cmovb
das
inc
js
imul
pop
inc
js
inc
dec
js
inc
dec
js
aas
dec
js
sbb
add
dec
js
out
dec
js
testl
add
js
inc
dec
js
dec
dec
js
add
add
inc
js
push
dec
js
xor
add
js
pop
dec
js
mov
in
ja
pop
dec
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
pop
add
pop
add
dec
pop
add
dec
pop
add
dec
xor
add
cmp
add
dec
pop
add
dec
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
add
dec
daa
add
daa
add
daa
add
daa
add
daa
add
daa
add
daa
add
dec
mov
add
dec
mov
add
dec
mov
add
daa
add
daa
add
mov
add
dec
mov
add
cmp
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
pop
dec
daa
add
daa
add
daa
add
mov
add
dec
mov
add
cmp
pop
dec
add
cmp
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
pop
dec
daa
add
daa
add
pop
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
pop
add
pop
add
dec
pop
add
dec
pop
add
dec
pop
add
dec
sldt
sldt
pop
add
dec
pop
add
dec
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
outsl
add
daa
add
daa
add
daa
add
daa
add
daa
add
daa
add
daa
add
mov
add
dec
mov
add
dec
mov
add
daa
add
daa
add
daa
add
dec
mov
add
dec
mov
add
cmp
add
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
dec
dec
daa
add
daa
add
daa
add
dec
mov
add
dec
mov
add
cmp
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
dec
dec
daa
add
daa
add
pop
add
pop
add
dec
pop
add
dec
pop
add
dec
pop
add
dec
pop
add
dec
pop
add
dec
pop
add
dec
pop
add
dec
pop
add
pop
add
add
pop
add
pop
add
pop
add
pop
add
pop
add
outsl
add
daa
add
daa
add
daa
add
daa
add
daa
add
daa
add
daa
add
daa
add
sub
outsl
dec
daa
add
daa
add
daa
add
daa
add
daa
add
daa
add
cmp
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
imul
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
add
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
imul
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
pop
dec
aaa
add
enter
int3
mov
mov
aam
lret
fsubrs
xchg
ret
loopne
fwait
mov
jmp
mov
repz
stos
out
notl
mov
decl
mov
sbb
adc
iret
or
add
add
add
roll
mov
loope
jmp
mov
fucom
mov
shr
scas
mov
out
stos
mov
int
mov
mov
add
cmp
or
xor
adc
sub
sbb
addr16
and
sbb
sub
adc
xor
or
cmp
add
arpl
pop
addr16
push
imul
outsl
imul
jae
aas
dec
ja
inc
inc
pop
jg
gs
cmp
pop
arpl
das
pop
add
xor
push
imul
push
outsl
sub
dec
jae
aas
dec
ja
inc
inc
jnp
inc
inc
jg
lret
xlat
into
mov
mov
mov
lret
fisubrl
xchg
ret
loop
fwait
mov
jmp
popf
cmpsl
repz
xchg
stos
out
cmc
xchg
scas
jmp
mov
jecxz
cmpb
mov
ret
pop
mov
adc
cmc
iret
or
in
xlat
add
in
mov
lods
fucom
mov
shr
scas
mov
out
stos
mov
int
mov
lds
add
fcmovne
mov
xchg
shll
lret
fldcw
xchg
ret
loope
fwait
mov
call
popf
cmpsl
repz
stos
out
hlt
xchg
scas
jmp
mov
jecxz
cmpb
mov
ret
pop
std
adc
cmc
iret
or
in
xlat
add
in
mov
lods
fucom
mov
shr
scas
mov
out
stos
mov
int
mov
dec
cmp
push
dec
cmp
or
xor
adc
add
sub
sbb
gs
and
sbb
sub
adc
xor
or
cmp
add
inc
xchg
pop
jge
xchg
adc
pcmpeqw
sbb
xchg
insl
push
andl
pop
jg
gs
cmp
jns
pop
pop
jge
adc
jno
pcmpeqw
sbb
pop
pop
insl
push
add
popa
jnp
aas
inc
jg
lret
mov
xchg
shll
lret
fldt
xchg
ret
jecxz
fwait
mov
ljmp
repz
xchg
stos
out
out
xchg
scas
jmp
mov
jecxz
cmpb
mov
ret
pop
xchg
adc
cmc
iret
or
in
xlat
add
in
mov
cmpsb
fucom
mov
shr
scas
scas
aad
stos
mov
int
mov
mov
add
orl
dec
aaa
add
and
je
push
movhps
pop
jns
inc
inc
add
outsl
inc
jns
dec
aaa
add
or
pop
gs
pop
jb
dec
aaa
add
add
sub
jb
dec
aaa
add
dec
add
sub
aaa
add
xor
aaa
add
xor
aaa
add
xor
aaa
add
cmp
das
dec
aaa
add
sub
add
add
sub
pop
dec
aaa
add
sub
cli
cmp
pop
and
dec
add
inc
add
xor
push
add
cmp
cmpsb
sub
xchg
and
push
add
es
jns
dec
add
aaa
add
inc
aaa
add
xor
es
jns
dec
aaa
add
pop
popa
xor
add
xor
inc
add
das
push
fs
inc
aaa
add
xor
aaa
add
sub
adc
xor
and
pop
add
aaa
push
add
aaa
add
sub
jne
adc
dec
inc
mov
push
xchg
add
sub
or
sahf
sub
outsb
sub
jne
or
daa
inc
dec
cmp
jne
dec
push
pop
arpl
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
js
stos
push
js
push
dec
aaa
add
aaa
add
aaa
add
aaa
add
js
scas
push
js
pop
dec
aaa
add
aaa
add
aaa
add
js
imul
push
js
pop
dec
aaa
add
dec
aaa
add
aaa
add
aaa
add
dec
aaa
add
push
add
js
sub
add
aaa
add
aaa
add
lcall
aaa
add
dec
aaa
add
dec
aaa
add
aaa
add
aaa
add
push
js
out
js
pop
dec
aaa
add
aaa
add
aaa
add
aaa
add
push
js
pop
dec
aaa
add
aaa
add
aaa
add
jne
add
push
js
pop
dec
aaa
add
aaa
add
aaa
add
push
js
pop
push
js
pop
dec
aaa
add
js
pop
dec
aaa
add
aaa
add
aaa
add
dec
aaa
add
dec
aaa
add
add
aaa
add
aaa
add
js
mov
add
aaa
add
aaa
add
aaa
add
push
js
iret
push
js
pop
dec
aaa
add
jne
add
aaa
add
aaa
add
mov
aaa
add
push
js
pop
dec
aaa
add
aaa
add
sub
add
daa
aaa
add
aaa
add
aaa
add
mov
add
dec
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
call
dec
stos
sbb
aaa
add
popa
js
pop
dec
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
dec
aaa
add
mov
aaa
add
mov
aaa
add
pop
ja
pop
dec
aaa
add
dec
aaa
add
dec
aaa
add
js
ja
js
pop
dec
aaa
add
js
pop
dec
aaa
add
lcall
aaa
add
aaa
add
ja
pop
dec
aaa
add
dec
aaa
add
lcall
aaa
add
aaa
add
ja
and
dec
aaa
add
mov
pop
dec
aaa
add
dec
aaa
add
pop
ja
pop
dec
aaa
add
mov
aaa
add
mov
aaa
add
mov
ja
movsl
das
ja
lods
mov
ja
imull
ja
xchg
mov
aaa
add
dec
aaa
add
decl
ja
xor
dec
aaa
add
lcall
aaa
add
mov
aaa
add
dec
aaa
add
ja
pop
dec
aaa
add
dec
aaa
add
mov
aaa
add
mov
lcall
aaa
add
add
ja
pop
dec
aaa
add
mov
lcall
aaa
add
dec
aaa
add
dec
aaa
add
add
aaa
add
dec
aaa
add
dec
aaa
add
lcall
aaa
add
leave
ja
pop
dec
aaa
add
lcall
aaa
add
mov
lcall
aaa
add
dec
aaa
add
int3
ja
pop
dec
aaa
add
int
add
dec
aaa
add
mov
lcall
aaa
add
mov
lcall
shlb
sbb
add
aaa
add
aaa
add
add
mov
lcall
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
push
js
cmp
sbb
aaa
add
push
js
pop
dec
aaa
add
push
js
pop
dec
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
dec
aaa
add
mov
lcall
aaa
add
mov
lcall
aaa
add
ja
pop
dec
aaa
add
int
add
mov
lcall
aaa
add
dec
aaa
add
shlb
shlb
dec
add
aaa
add
dec
aaa
add
dec
aaa
add
jp
ja
shlb
dec
aaa
add
add
aaa
add
js
pop
dec
aaa
add
push
js
pop
dec
aaa
add
jg
add
aaa
add
mov
lcall
aaa
add
aaa
add
les
pop
dec
aaa
add
mov
lcall
aaa
add
dec
aaa
add
dec
aaa
add
mov
lcall
aaa
add
lcall
aaa
add
dec
aaa
add
incl
add
aaa
add
fidivs
dec
mov
lcall
aaa
add
fidivs
xor
dec
aaa
add
mov
lcall
aaa
add
fdivl
mov
dec
aaa
add
mov
lcall
aaa
add
mov
lcall
aaa
add
mov
push
fdivl
lock
pop
dec
aaa
add
dec
aaa
add
mov
lcall
aaa
add
aam
add
aam
add
aaa
add
lcall
aaa
add
dec
aaa
add
pushl
ja
je
ja
pop
dec
aaa
add
add
add
add
add
lcall
aaa
add
mov
lcall
aaa
add
loop
add
ja
pop
dec
aaa
add
mov
lcall
aaa
add
mov
lcall
aaa
add
mov
lcall
aaa
add
loope
add
aaa
add
dec
aaa
add
dec
aaa
add
dec
aaa
add
dec
aaa
add
lcall
aaa
add
dec
aaa
add
lcall
aaa
add
fbstp
pop
dec
aaa
add
dec
aaa
add
mov
lcall
aaa
add
dec
aaa
add
add
dec
aaa
add
mov
lcall
aaa
add
mov
lcall
aaa
add
mov
lcall
aaa
add
ja
pop
dec
aaa
add
dec
aaa
add
dec
aaa
add
dec
aaa
add
repz
pop
dec
aaa
add
lcall
aaa
add
dec
aaa
add
lcall
aaa
add
lock
lret
dec
cmp
pop
dec
aaa
add
aaa
add
stos
aaa
add
dec
cmp
pop
dec
aaa
add
aaa
add
cmp
xor
aaa
add
aaa
add
add
aaa
add
aaa
add
aaa
add
dec
cmp
std
dec
cmp
dec
cmp
rorl
lods
dec
cmp
pop
push
cmp
gs
cmp
jno
cmp
xor
add
cmp
daa
push
cmp
sti
dec
cmp
jmp
cmp
aad
cmp
repz
cmp
cmc
push
cmp
sqrtps
add
push
cmp
adc
add
push
cmp
push
dec
cmp
aas
dec
cmp
dec
dec
cmp
mov
dec
cmp
rorl
add
dec
cmp
mov
dec
cmp
sbb
add
dec
cmp
pop
push
add
cmp
insl
push
add
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
cmp
addr16
add
cmp
jno
cmp
jae
cmp
xchg
add
imul
add
push
cmp
ret
push
cmp
pop
imul
add
cmp
cmp
insb
cmp
and
and
dec
insb
cmp
loope
cmp
jmp
imul
xchg
imul
scas
imul
jnp
cmp
mov
add
add
cmp
dec
imul
inc
imul
and
add
aaa
add
dec
cmp
pop
dec
aaa
add
dec
jnp
scas
daa
dec
gs
and
test
add
push
pop
inc
ss
imul
aaa
add
sbb
addr16
push
inc
jb
pop
arpl
dec
jns
dec
pop
add
sbb
push
gs
lea
cmp
aas
daa
push
push
pop
dec
sahf
add
cmp
clc
sub
pop
dec
xchg
cmp
clc
cmp
pop
dec
dec
add
dec
push
aaa
dec
imul
add
pop
fs
and
mov
dec
pop
add
pop
inc
mov
dec
mov
aaa
add
call
xchg
pop
dec
jp
pop
insb
jbe
aaa
add
dec
jle
addr16
push
jae
pop
dec
jb
cmp
add
je
das
ss
inc
xor
pop
push
cmp
push
fs
sub
add
daa
dec
inc
add
pop
push
hlt
and
divb
aaa
add
dec
jp
imulb
dec
gs
dec
jp
cwtl
push
push
jae
add
mov
inc
imul
and
add
add
add
aaa
add
push
test
pop
insl
scas
and
sbb
ja
imul
aaa
add
dec
jae
js
push
inc
jb
pop
push
jb
pop
push
inc
add
insb
ss
push
insl
ds
inc
add
and
sbb
pop
jb
sbb
ss
inc
and
pop
add
dec
jp
imulb
dec
gs
and
clc
xor
aaa
add
add
testb
je
and
and
popl
xchg
and
dec
gs
and
inc
push
pop
dec
fiaddl
test
dec
inc
jb
pop
push
add
jb
pop
add
inc
outsb
jb
ss
inc
jb
pop
add
decb
xor
push
insb
pop
dec
das
add
jb
sbb
data16
insb
push
push
sbb
xor
push
insb
pop
dec
cwtl
add
and
pop
gs
dec
movsb
add
and
push
outsl
clc
dec
test
push
lds
push
outsb
mov
add
pushf
das
dec
push
sub
scas
sbb
mov
outsb
add
imul
push
outsb
jp
pop
push
mov
pop
mov
jle
outsl
or
push
je
sbb
arpl
dec
add
add
add
add
add
sub
aaa
das
pop
inc
inc
sub
push
outsb
adc
sbb
add
push
ud0
aaa
pop
insb
sub
inc
je
cmp
add
dec
gs
sbb
pop
addr16
addr16
sbb
cmpsb
add
sbb
popa
scas
das
aaa
add
dec
popa
jg
dec
gs
test
xchg
das
push
outsl
das
jp
sbbb
arpl
push
js
push
outsl
inc
dec
add
das
pop
jbe
or
pop
popa
inc
std
pop
arpl
xor
add
pop
dec
loopne
push
cmp
or
pop
popa
idiv
pop
arpl
xor
pop
dec
imul
push
inc
out
xor
fwait
add
sub
pop
add
sbb
sub
xor
pop
dec
rolb
sub
dec
insb
jbe
pop
outsb
jg
pop
push
pop
dec
sbb
ss
imul
push
and
sub
arpl
sbb
orb
sti
dec
and
push
fs
sub
jle
unpckhps
push
ss
inc
repnz
add
pop
inc
pop
dec
or
ss
inc
sbb
pop
add
or
mov
aaa
add
sti
pop
je
sub
mov
ss
inc
mov
jo
sub
push
gs
push
arpl
push
gs
aaa
add
dec
push
dec
push
pop
jae
or
aaa
add
dec
jle
das
or
sub
dec
cmp
jo
pop
dec
addl
cmp
or
push
arpl
sub
inc
sub
sub
je
dec
int3
add
dec
insb
add
mov
push
insb
mov
std
add
das
jl
lods
xor
lods
aaa
pop
outsb
stc
dec
jb
xor
jae
dec
clc
add
push
jb
xor
gs
push
imul
add
jle
dec
or
sub
daa
xor
add
iret
add
das
dec
dec
cmp
insb
decb
push
jne
sbb
jle
pop
or
insb
std
aas
jo
dec
add
sbb
dec
push
out
dec
je
sbb
mov
js
scas
dec
push
push
mov
aaa
pop
outsb
mov
add
add
add
add
cmpsb
xor
mov
add
push
inc
insb
pop
push
je
dec
xchg
add
dec
gs
push
addr16
sub
adc
adc
jle
inc
stc
aas
jae
das
push
push
inc
aaa
pop
inc
sub
insb
decb
decb
add
xor
je
sub
add
jp
add
push
arpl
xor
push
outsl
in
or
test
push
outsb
cwtl
xor
dec
popf
add
xor
pop
dec
bound
pushf
sub
push
data16
add
add
jle
add
outsl
adc
cli
add
dec
jo
test
push
imul
cli
push
addr16
iret
add
pop
insb
adc
xor
aaa
add
jle
maskmovq
testl
add
pop
inc
pop
dec
ja
sbb
dec
push
out
push
outsb
cld
std
aas
jo
cli
add
dec
jae
sahf
sub
iret
sbb
mov
aaa
add
dec
jae
sahf
sub
scas
sbb
mov
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
call
sahf
xchg
arpl
adc
lea
mov
shlb
popa
roll
cltd
xor
lods
outsb
mov
rcrb
sbb
cmpsb
sbb
sbb
pushf
add
inc
xor
scas
inc
mov
popf
movsl
les
loopne
loop
pop
cmp
lds
cmp
xchg
xchg
lock
push
pop
jbe
mov
data16
push
or
sahf
fldt
fiaddl
or
add
sldt
or
movsb
out
fcoms
mov
clc
lea
scas
pop
testb
divps
aam
dec
push
cmp
mov
push
and
scas
add
setbe
xchg
leave
icebp
scas
push
push
idiv
sbb
mov
add
jns,pn
jg
in
inc
adc
mov
push
mov
iret
inc
sbbb
scas
cltd
daa
dec
adc
and
push
and
dec
xchg
mov
sub
je
push
shl
jo
inc
imull
add
add
cmp
lods
mov
or
sbb
movsl
idiv
pushf
imul
lods
dec
pop
adc
push
std
push
mov
inc
cmp
and
cmp
filds
push
divb
and
xor
pop
mov
push
mov
cmc
subl
xchg
scas
dec
hlt
sbb
xchg
mov
in
xor
fisttpll
sub
lods
sub
scas
ss
sub
add
mov
xor
sbb
xor
add
mov
test
inc
aaa
je
cmp
dec
mov
out
push
pop
inc
and
into
add
pop
sahf
je
scas
insb
inc
push
lods
push
jns
jg
sahf
push
xor
mov
adc
adc
mov
lds
xchg
add
out
xor
leave
ja
sbbl
dec
dec
aaa
add
inc
xchg
ja
mov
dec
aaa
add
js
mov
cs
outsl
js
dec
je
or
mov
dec
aaa
add
js
add
jbe
pop
imul
outsl
insl
or
aas
or
pop
dec
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
dec
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
dec
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
ja
dec
xchg
ja
add
aaa
add
adc
movsb
and
lods
or
into
leave
ja
pop
dec
aaa
add
aaa
add
dec
js
arpl
add
add
dec
aaa
add
dec
aaa
add
dec
js
dec
dec
aaa
add
dec
aaa
add
dec
js
imul
add
aaa
add
js
inc
dec
aaa
add
dec
aaa
add
dec
aaa
add
dec
js
push
dec
aaa
add
dec
js
inc
dec
aaa
add
dec
js
jne
aaa
add
js
fs
aaa
add
xchg
ja
jnp
aaa
add
xchg
ja
jp
aaa
add
xchg
ja
cmp
add
cwtl
ja
orl
and
aaa
add
cwtl
ja
add
popa
dec
aaa
add
dec
aaa
add
cwtl
ja
les
add
xchg
ja
dec
xchg
ja
adc
aaa
add
js
stc
sub
notb
pop
or
push
outsl
in
or
decl
ja
insb
xchg
jmp
lcall
aaa
add
aaa
add
aaa
add
aaa
add
add
dec
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
aaa
add
aaa
add
aaa
add
ja
pop
dec
aaa
add
aaa
add
aaa
add
ja
aam
add
ja
lods
aam
add
ja
cld
shll
hlt
shll
in
shll
filds
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
pop
js
pop
dec
aaa
add
aaa
add
aaa
add
pop
js
pop
dec
aaa
add
aaa
add
aaa
add
pop
js
pop
dec
aaa
add
aaa
add
aaa
add
pop
js
pop
dec
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
push
js
pop
dec
aaa
add
aaa
add
inc
js
push
cmp
jecxz
js
imul
xchg
pop
add
js
pop
dec
aaa
add
pop
js
or
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
daa
adc
daa
adc
daa
adc
daa
adc
daa
adc
daa
adc
daa
adc
aaa
add
pop
and
pop
and
pop
and
add
pop
and
pop
and
pop
and
pop
and
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
pop
clc
and
push
push
push
push
outsb
cld
sbb
call
adc
pop
dec
aaa
add
js
cwtl
push
jl
xchg
add
mov
cli
addr16
mov
imul
pop
pop
pop
dec
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
daa
adc
daa
adc
daa
adc
daa
adc
daa
adc
daa
adc
daa
adc
aaa
add
pop
and
pop
and
pop
and
pop
and
pop
and
pop
and
push
and
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
pop
arpl
and
repz
out
sbb
add
lret
sbb
adc
inc
add
aaa
add
jns
xchg
add
jno
std
je
stos
stc
push
push
mov
dec
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
dec
cmp
mov
int3
inc
cmpb
add
aaa
add
test
aaa
add
scas
aaa
add
aaa
add
jmp
aaa
add
or
add
lods
loope
cmp
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
xchg
add
aaa
add
dec
aaa
add
dec
aaa
add
lods
loope
cmp
add
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
xchg
add
aaa
add
mov
add
aaa
add
stos
ret
stos
bound
pop
dec
aaa
add
aaa
add
aaa
add
aaa
add
xchg
add
aaa
add
or
add
dec
aaa
add
movsb
fidivrl
data16
movsb
or
pop
dec
aaa
add
aaa
add
aaa
add
aaa
add
cmp
mov
add
aaa
add
dec
stos
sbb
aaa
add
aaa
add
aaa
add
push
js
add
fsts
add
aaa
add
pop
js
out
pop
js
add
add
pop
js
sti
pop
js
mov
pop
js
jmp
js
rcrl
add
pop
js
out
pop
js
add
add
pop
js
pop
pop
js
stos
pop
js
lahf
pop
js
xchg
pop
js
xchg
pop
js
fwait
pop
js
outsl
pop
js
arpl
add
js
dec
pop
js
aas
pop
js
xor
add
pop
js
push
pop
js
dec
pop
js
push
pop
js
pop
pop
js
sbb
add
pop
js
lret
pop
js
mov
js
xchg
pop
js
xchg
add
xchg
pop
js
fistps
add
pop
js
pop
js
mov
js
out
js
jecxz
js
bound
add
aaa
add
aaa
add
js
jge
aaa
add
inc
js
imul
js
dec
adc
dec
adc
dec
adc
imul
js
imul
js
je
inc
jg
add
js
fldl
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
cli
add
aaa
add
dec
aaa
add
sbb
add
pop
dec
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
dec
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
js
sub
je
lcall
aaa
add
aaa
add
lcall
add
aaa
add
aaa
add
lcall
aaa
add
aaa
add
dec
aaa
add
dec
aaa
add
dec
aaa
add
dec
aaa
add
dec
aaa
add
aaa
add
dec
aaa
add
dec
aaa
add
add
jne
aaa
add
dec
aaa
add
add
dec
aaa
add
dec
aaa
add
dec
aaa
add
aaa
add
aaa
add
dec
aaa
add
dec
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
cmp
pop
dec
aaa
cmpb
aaa
adcb
add
dec
aaa
sbbb
add
aaa
add
aaa
add
cmp
loope
aaa
add
dec
aaa
add
dec
aaa
add
dec
aaa
sbbb
add
aaa
add
aaa
add
cmp
pop
dec
aaa
add
dec
aaa
sbbb
add
aaa
add
aaa
add
add
cmp
push
inc
aaa
add
dec
aaa
add
aaa
add
aaa
add
cmp
bound
add
dec
aaa
add
aaa
add
aaa
add
cmp
push
inc
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
cmp
bound
add
dec
aaa
add
cmp
shrb
aaa
add
aaa
add
cmp
add
inc
aaa
add
aaa
add
cmp
lods
dec
aaa
add
dec
aaa
add
stc
cmp
and
add
dec
aaa
add
add
add
dec
jp
sbb
js
testb
inc
movsb
scas
jb
xchg
gs
imulb
testb
pop
dec
xchg
inc
int
inc
js
testb
out
lcall
push
test
jge
lods
js
push
jg
shrl
cmp
cltd
dec
movb
pop
stos
jbe
rorl
add
push
push
loopnew
xchg
xchg
pop
push
mov
mov
dec
adc
std
add
inc
add
inc
icebp
pop
lods
inc
mov
fwait
xchg
sub
insl
sbb
sahf
add
push
sbb
and
sub
push
lea
pop
push
add
pop
inc
cld
lea
lret
aas
sbb
cmp
mulb
sbb
ret
ja
stc
push
push
cld
das
xlat
dec
in
cli
sub
push
mov
movsb
lods
sahf
cmpsl
popa
mov
inc
cs
inc
les
testb
xchg
data16
sti
dec
insl
imul
in
fisubl
inc
xlat
adc
das
or
rcrl
add
stos
push
lcall
add
add
push
pusha
inc
incl
pop
push
xor
xchg
enter
lods
sub
data16
xor
mov
dec
int
in
divl
and
call
cli
aad
test
into
pop
jbe
mov
daa
xor
xchg
cmp
add
dec
xor
outsl
cmp
push
subb
js
jno
scas
repnz
rcrb
decl
test
inc
lret
jp
xchg
xor
hlt
loopne
xchg
sbb
jbe
xchg
iret
aad
call
test
add
dec
lcall
scas
lods
push
cwtl
shlb
enter
mov
add
mov
xor
lea
hlt
enter
es
shrl
mov
outsl
push
push
fisubrl
xor
cmp
dec
sbbl
mov
imul
jae
xchg
stos
xchg
ret
sub
cmp
xchg
cmp
pop
das
push
sbb
mov
test
pop
scas
dec
add
add
cli
xchg
push
add
cmpsb
sbb
dec
mov
movsl
stos
notb
and
xchg
test
dec
das
int3
sbb
sbb
dec
movsb
xchg
repz
mov
dec
pop
jo
int3
popf
mov
sub
incl
hlt
mov
or
adc
push
dec
hlt
ficoms
pop
cld
pop
cs
push
ljmp
flds
cs
movsb
xor
outsb
cmpb
mov
pop
test
add
xchg
inc
xchg
iret
decb
dec
or
lods
jb
xlat
imul
in
or
add
add
add
add
xor
imul
cmpl
int3
outsl
es
or
inc
imul
mov
inc
add
popf
addr16
mov
xchg
aam
push
stos
or
mov
sub
lret
inc
inc
clc
or
sub
pop
mov
push
jecxz
inc
add
or
or
ret
movsl
leave
xchg
out
lods
mov
icebp
push
push
lret
inc
and
sbb
cltd
add
jnp
scas
pop
test
fsubrl
mov
add
jle
xor
cmp
sub
mov
outsl
pop
mov
xchg
jno
jae
test
mov
inc
in
cmp
fidivl
sub
cld
sahf
dec
aas
jo
sub
loopne
stos
nop
imul
add
cmp
nop
mov
jmp
xchg
mov
ret
iret
sbb
icebp
lahf
loop
add
repnz
jle
int3
dec
scas
mov
xor
jae
rol
stos
jb
jns
enter
cmp
stos
pop
xchg
cltd
push
repnz
cmp
add
sbb
mov
daa
sbb
aam
jb
push
push
shrl
add
ficompl
icebp
cmp
rcrb
arpl
shlb
add
ds
adc
push
pop
lcall
lcall
icebp
push
fistl
and
scas
pop
aas
adc
mov
arpl
ss
test
xchg
mov
mov
cmp
iret
sbb
add
fs
or
divl
shrb
dec
aam
jmp
lahf
add
decb
out
sub
add
xor
lock
xchg
jno
fwait
fadds
les
aam
in
xchg
xor
adc
cs
retw
dec
xor
lock
aaa
mov
iret
ljmp
inc
mov
icebp
mov
addr16
xor
nop
test
out
icebp
enter
insb
std
lods
inc
mov
push
loope
loop
add
aas
push
fnstenv
push
and
mov
in
lods
cmc
pop
and
mov
dec
jno
push
inc
cmc
jmp
sub
aaa
pop
movsl
dec
mov
mov
push
push
pop
in
inc
mov
pop
mov
push
addr16
pop
push
push
shr
jp
gs
pop
sbb
sbb
mov
filds
pop
inc
leave
xor
fs
std
sub
xchg
add
xchg
mov
and
sub
addr16
jno
push
mov
rcrl
dec
fdivs
xor
popa
jo
or
xchg
or
lahf
xorb
sub
dec
push
xor
aad
fistpl
aad
test
push
add
psrlw
cmp
jl
sub
pop
and
xchg
pop
add
mov
cs
jmp
xchg
pop
movsb
mov
mov
or
cmp
pop
adc
leave
addl
dec
icebp
ret
addr16
jmp
xchg
les
aaa
imul
xchg
popa
pop
pushf
push
pushf
test
and
jns
ss
fwait
mov
dec
dec
lahf
bnd
popf
sbb
dec
adc
dec
out
mov
imul
cltd
test
jnp
or
add
add
add
add
sti
mov
sbb
dec
sbb
test
cld
out
push
sbb
sub
loope
mov
push
xchg
loop
aad
cmp
mov
ret
cli
pop
add
sbb
add
mov
jmp
fmuls
es
sbbb
adc
sub
lret
ds
sub
xor
cmc
test
or
add
mov
push
test
adc
sub
in
dec
sarl
in
adc
aas
test
fwait
add
int3
les
sarb
mov
rol
lahf
pop
push
fwait
dec
or
insl
push
xor
sub
adc
dec
roll
lds
mov
stos
inc
imul
mov
sub
les
das
mov
cmc
and
add
or
les
movsl
psubw
cmpsl
xor
pop
call
imul
es
lahf
mov
repz
rcr
jb
push
call
pop
and
scas
repz
jecxz
jmp
je
rorl
add
stos
pop
popa
xchg
addr16
in
xchg
sub
pop
mov
sub
sub
dec
das
lahf
add
add
test
cwtl
enter
sub
push
lret
pop
sbb
xchg
insb
dec
inc
jbe
xor
mov
stos
scas
mov
data16
fcmovnu
and
popl
dec
mov
sahf
ljmp
and
loope
xchg
pusha
je
pop
ret
sub
and
adcl
xor
and
ficompl
pop
roll
repz
loopne
sub
dec
call
mov
add
add
add
add
add
icebp
sub
xor
adc
xchg
add
cwtl
mov
pop
in
pusha
ret
adc
cmp
jne
imul
repz
jnp
sbbb
mov
imul
rorb
lods
in
je
mov
inc
js
mov
push
and
in
jg
popf
insl
negb
xorl
dec
cli
mov
or
inc
hlt
pop
add
jl
push
lret
inc
stos
jnp
jo
jecxz
scas
add
fwait
or
jnp
push
lock
mov
add
add
add
add
or
out
cmp
out
or
aad
dec
push
or
cmp
test
jmp
mov
mov
popa
pushf
mov
sbb
mov
lds
sub
sbb
dec
fmuls
jp
pop
shlb
jg
mov
mov
or
fcmovnb
fchs
push
fucomp
pop
shlb
loopne
jnp
pop
push
mov
sbb
xacquire
aam
pop
xor
cmc
movsl
fisubs
call
inc
fimull
inc
std
adcl
add
comiss
ret
mov
sarl
scas
xchg
jmp
push
aam
mov
daa
test
inc
ss
bound
cwtl
dec
jmp
std
pop
add
and
data16
bsr
inc
loop
jmp
cmp
xchg
je
ja
pop
and
cli
arpl
lcall
add
sub
mov
push
xchg
sbb
or
scas
mov
test
mov
popa
sub
fists
mov
mov
ds
daa
dec
cld
lret
adc
mov
rcr
jmp
mov
dec
add
ja
inc
xor
mov
mov
insl
stos
in
cltd
pop
jg
cmp
imulb
mov
aas
movsb
adc
xor
repz
jecxz
xor
lea
lret
daa
roll
sti
lret
push
cmp
adc
movsb
mov
dec
sahf
out
cmpsl
or
xchg
sbb
ficomps
sarb
inc
adc
gs
push
bound
cs
fs
sub
shl
and
sub
jo
cmp
stc
jl
xor
push
jns
loope
xor
pop
mov
mov
arpl
arpl
push
push
ljmp
sbb
or
int
dec
fstps
loop
and
adc
scas
cmp
mov
add
in
push
push
mov
mov
scas
sbb
cmp
mov
jle
and
lcall
sbb
jg
lds
or
push
jns
xchg
mov
adc
sbb
nop
shl
loope
jge
add
push
scas
and
test
pusha
sbb
pop
lret
fdivrs
std
xchg
fs
sub
add
outsb
push
jg
inc
enter
sbb
icebp
add
fwait
mov
adc
and
decl
xor
popf
outsl
mov
mov
addr16
push
mov
fsub
pushf
mov
ret
add
lods
cmpsb
inc
xor
sub
lds
daa
outsb
cmc
pop
in
push
fxch
xor
insb
jno
das
jo
je
sbb
test
popa
inc
inc
outsl
fwait
push
aas
sbb
inc
xlat
ja
mov
inc
mov
aam
sub
fists
cwtl
rolb
add
int
mov
test
pop
in
push
outsb
in
loope
out
cwtl
jae
jo
decl
sub
lea
jl
in
call
xchg
jno
les
iret
fbld
loopne
fistpll
cmp
mov
mov
sub
test
cmp
aas
out
lret
jmp
fcmovbe
push
mov
loopne
stc
fucom
lret
lods
mov
mov
mov
jmp
out
dec
xchg
pop
filds
cmp
and
push
lods
mov
add
add
pop
sub
sahf
sbb
das
fisubs
mov
jge
pushf
mov
cmp
cld
or
in
adc
xchg
std
or
repz
or
loope
mov
pop
jns
sbb
pop
mov
lea
xchg
dec
in
mov
pop
xor
pop
aas
out
and
mov
and
orb
lcall
jg
cltd
mov
dec
sti
sti
mov
sbb
xor
xchg
cmp
movsl
nop
lahf
xorb
and
add
inc
or
test
xorl
mov
mov
cmp
cltd
lods
push
sarl
sub
cld
in
out
cmpb
jns
sbb
cltd
loop
clc
mov
aaa
pop
sarb
mov
call
sbb
das
cmpsb
test
add
or
shrb
jecxz
jl
mov
and
hlt
sahf
mov
xlat
xchg
mov
nop
rcrl
xchg
or
sbb
lods
pop
mov
mov
jg
insb
add
or
shr
cmp
add
xor
or
enter
sbb
or
shrb
imul
jl
xor
cmp
sbb
jne
loopne
aaa
fwait
dec
or
subl
and
sti
fmull
in
cmp
iret
adc
jecxz
xchg
mov
push
into
fcoms
sti
ljmp
pop
jl
pop
ss
add
test
mov
add
rorl
mov
subb
ja
add
cltd
pop
mov
les
add
add
add
add
std
push
pop
sbb
and
jb
xlat
sti
pop
jae
fisubl
scas
mov
push
sub
or
xor
test
xchg
cmp
testl
inc
lds
loope
outsb
test
fadds
popf
divb
out
dec
push
xchg
fsub
xchg
in
test
aad
cs
inc
mov
or
js
test
data16
mov
mov
movsb
mov
out
xchg
stc
ret
mov
jmp
loope
jmp
sbb
sbbb
add
mov
outsb
push
add
push
aam
cmpl
scas
call
sbb
lea
test
xor
movsl
jle
dec
stos
xchg
xor
pop
mov
xchg
imul
fs
dec
fiadds
out
jg
dec
or
test
cmp
xchg
fadd
lahf
push
xor
sbb
out
xor
icebp
jo
lret
lods
sbb
cld
adc
cmpsl
lret
out
jo
inc
enter
loope
and
mov
jns
pop
mov
jl
add
popf
sbb
in
or
jbe
or
rorb
mov
outsl
mov
pop
cmpsb
xchg
jge
stos
ss
xor
std
pop
rep
icebp
cmp
rorl
shl
int
scas
or
mov
test
dec
or
arpl
inc
fwait
jo
jbe
pop
mov
psrld
scas
iret
scas
jp
xorb
cltd
fildl
jg
mov
jecxz
cmp
inc
repz
insb
adc
ds
daa
int
ja
popf
add
mov
jge
mov
mov
jo
sub
cmp
iret
push
inc
or
movsb
mov
stos
in
fsts
sbb
fldlg2
test
out
rcrb
repz
xchg
mov
inc
sbb
sbb
sub
and
jle
out
jmp
mov
aas
jp
icebp
aas
sbb
mov
aas
imulb
aas
mov
hlt
xchg
push
xchg
mov
js
or
je
popl
test
iret
push
mov
addr16
testl
rclb
ret
ljmp
jp
inc
lds
clc
seto
sbb
mov
in
je
loopne
test
push
int3
pusha
add
mov
cwtl
push
mov
or
xchg
xor
fsubrp
and
ss
push
inc
xchg
pop
addr16
mov
enter
mov
and
fs
lahf
adc
shll
dec
mov
mov
out
add
adc
cltd
cmpsl
xchg
aas
jo
stc
test
adc
mov
add
mov
xchg
cmp
sub
inc
ja
aaa
adc
push
fs
inc
add
lea
jle
cltd
pop
cltd
xlat
mov
sahf
fs
push
cmp
in
or
aad
sbb
mov
dec
xchg
pop
mov
mov
cmpsl
pop
aas
in
test
jg
movsl
popf
jbe
ljmp
mov
int
rcrl
sub
mov
lret
test
in
pop
jle
push
addr16
pushl
cli
in
in
or
push
push
clc
insb
mov
mov
stos
das
add
push
cmc
nop
jle
and
and
imul
out
or
mov
dec
add
push
adc
adc
push
pop
adc
gs
lea
jno
fs
fucompp
push
jnp
orb
mov
pop
push
pop
ljmp
loop
pusha
arpl
pusha
ficoms
je
mov
cmpsl
xor
adc
popf
push
notl
pop
xchg
cltd
jge
out
mov
in
pop
adc
mov
dec
icebp
pop
dec
sbb
mov
add
les
xchg
mov
add
add
add
mov
pop
popa
shrb
pusha
fisubs
imul
xlat
cli
stos
cwtl
sbb
pop
xchg
lcall
pusha
sbb
cli
mov
adc
into
sub
aaa
mov
out
pop
sub
mov
ret
sub
inc
and
loope
jnp
xchg
mov
das
lds
xchg
push
int3
stos
and
in
push
jnp
sub
outsl
inc
xchg
imull
lahf
fiaddl
sub
call
or
ficoms
cmpsb
shrb
add
adc
les
outsl
enter
add
add
add
add
jno
mov
repz
cmp
mov
out
stos
loopne,pn
in
sbb
add
xchg
and
sub
in
iret
sti
leave
enter
lret
pop
and
pop
push
jmp
inc
outsb
inc
mov
lea
fmuls
loop
stos
cmp
cltd
jg
jnp
int3
fwait
cld
jl
lret
mov
push
dec
pop
fidivrs
call
sbb
arpl
imul
add
inc
out
mov
mov
nop
and
lock
mov
push
cld
test
xchg
mov
out
xchg
xlat
repnz
idivb
leave
je
cli
mov
sti
lds
jg
xchg
pop
mov
inc
push
jmp
mov
dec
or
loope
scas
lock
lcall
mov
xor
mov
or
cs
fiaddl
out
push
dec
jne
or
inc
inc
jmp
xchg
ljmp
into
es
jl
mov
aas
mov
shrb
push
pop
popf
pushf
xchg
daa
pop
pop
cld
cli
dec
out
dec
dec
pop
xlat
xchg
addr16
scas
xchg
add
stc
mov
xchg
fmul
and
decb
adcl
int3
out
pop
dec
and
lahf
inc
into
in
in
iret
sbb
pop
mov
mov
adc
jle
lahf
push
xchg
and
and
fsubrs
ss
lret
add
adc
inc
adc
ss
mov
push
testl
inc
sbb
pop
inc
xchg
mov
rcrb
push
lds
int
fsubs
in
popa
or
pop
divb
test
pop
push
dec
push
jmp
add
add
add
add
ret
das
in
add
dec
int
in
out
bound
in
xchg
xor
enter
pop
scas
aas
scas
mov
psubd
inc
fistl
and
mov
faddl
cs
pop
data16
pop
movsb
in
xor
sti
out
mov
jg
or
add
insb
cmpsl
loopne
pop
fimull
push
ret
lahf
push
or
xlat
or
add
hlt
cmp
sti
stos
fwait
push
sub
mov
mov
add
shrb
push
push
shl
cmp
pop
mov
test
in
lock
xchg
pop
mov
xchg
loop
es
fildll
js
clc
xlat
pop
in
in
cmp
addr16
xchg
addb
call
sahf
xchg
inc
xlat
bound
std
insb
cltd
mov
fldcw
test
repnz
inc
repnz
iret
popa
xchg
loopne
loope
fldt
jp
scas
shlb
shr
mov
and
xor
fisubrl
sbbl
mov
not
sub
add
push
sbb
push
lea
push
jmp
mov
sub
jle
pop
push
push
inc
jae
orb
or
inc
out
icebp
fdivp
sbb
pop
mov
or
test
decl
xor
inc
mov
lret
aad
movsb
pop
push
or
push
and
loop
add
aad
les
cmp
xlat
push
xchg
pop
ja
frstor
lea
push
jno
push
mov
push
add
dec
jnp,pn
outsb
mov
inc
insl
fnsave
add
mov
push
es
push
gs
jle
rcrb
testl
rcll
pop
or
jp
xchg
jl
mov
jne
fstpl
adc
in
mov
es
mov
xchg
and
xchg
pop
jae
mov
push
test
aas
outsb
popa
sub
pop
stc
cmpsb
jle
shlb
push
cmp
pusha
mov
aaa
jmp
mov
in
sar
sbb
pop
test
add
in
loop
pop
scas
jnp
dec
std
leave
push
das
xchg
sbb
add
add
add
push
jno
and
sahf
dec
leave
es
mov
cwtl
cmp
into
mov
inc
add
adcl
aaa
in
jns
push
mov
and
cmp
popa
push
cmpsl
inc
jge
add
int
sbbl
cmpsl
mov
push
aam
test
add
pop
mov
lret
mov
lcall
xchg
adc
inc
pop
pop
enter
mov
push
in
mov
and
ja
jecxz
add
ret
fisubrs
and
jecxz
inc
dec
inc
add
mov
fsts
sahf
sbb
xor
mov
xchg
push
pop
add
enter
lods
pop
inc
jo
fnstenv
dec
dec
inc
out
mov
mov
popl
cmpsl
rorl
lock
mov
mov
adc
andb
cmp
leave
loopne
jecxz
mov
or
iret
dec
mov
push
and
iret
cmp
inc
jne
lret
jle
push
xchg
into
inc
jnp
sub
and
pushf
in
inc
shlb
add
add
add
dec
sbb
or
fsubl
fmuls
inc
push
cmpl
cmp
pop
push
xchg
push
mov
xor
push
ljmp
lret
xchg
mov
shll
test
int
pusha
push
bound
pop
sub
jns
int3
ljmp
fistps
mov
add
mov
jbe
aaa
mov
inc
inc
mov
scas
add
imul
jo
sub
mov
push
xchg
sub
ret
add
add
xor
push
fdivr
mov
and
dec
imull
jo
mov
repz
movsb
mov
fsubr
sbb
cmp
rclb
inc
adc
arpl
push
jo
and
inc
and
cmp
aam
mov
add
leave
into
xor
inc
push
imul
pop
out
cli
jmp
or
adc
push
dec
das
adc
out
sbb
loope
inc
pop
xchg
push
xor
popa
push
mov
in
jge
and
push
xchg
faddl
add
insb
xchg
jmp
in
into
push
jecxz
adc
add
and
jl
mov
data16
sub
jo
or
andb
fcomi
adc
shll
mov
add
xchg
adc
in
mov
sbb
add
shll
xacquire
fidivs
adc
cwtl
cli
cmp
xor
loope
scas
stos
leave
in
in
dec
ret
add
fnsave
mov
add
add
add
add
or
idiv
jmp
jo
push
add
lea
out
cltd
fidivrl
test
inc
addr16
push
loop
in
cmp
mov
addr16
dec
mov
imul
sti
pop
repnz
cltd
sbb
out
pusha
cmpsl
popa
and
stc
push
xor
mov
scas
sbb
sbb
mov
xchg
lcall
in
sub
insl
ret
cmpsb
aas
pushw
sti
mov
push
rcrl
xchg
je
mov
aaa
xor
shrl
push
out
and
in
add
mov
idiv
lret
int3
scas
repz
out
xchg
push
cmpl
push
add
jg
jo
mov
ret
mov
out
xchg
xor
sarl
push
leave
mov
or
jno
push
repz
loop
add
jno
in
pushf
stos
test
out
sub
and
sbb
jno
sub
ret
add
xchg
mov
sbb
dec
lahf
loopne
leave
pop
sbb
adc
ja
mov
inc
lahf
es
jbe
mov
add
mov
cli
mov
jmp
pop
cmp
insl
or
lret
jo
inc
cmp
mov
push
jb
mov
lahf
jno
sahf
push
xchg
xlat
and
cmp
sub
mov
sub
or
inc
inc
lods
popa
mov
mov
sbb
adc
mov
mov
cmpsl
inc
xchg
loop
daa
frstor
lock
jns
arpl
cmp
or
push
sarl
ss
sub
out
ficoms
add
pop
pop
outsb
xchg
dec
mov
dec
inc
repnz
stos
sti
dec
cmp
mov
mov
and
dec
sbb
jne
repz
inc
mov
enter
sub
pop
ja
lret
add
ds
js
dec
push
push
mov
test
inc
pop
cltd
test
cs
mov
mov
xor
jge
xchg
jbe
dec
cwtl
enter
push
pop
mov
enter
push
xorb
mov
cli
adc
loop
xor
add
inc
dec
loop
popf
scas
orl
or
daa
insl
push
outsl
dec
xchg
push
cltd
aaa
mov
xchg
sub
lret
outsl
jge
notl
inc
mov
jge
sub
scas
stos
push
aad
out
sbb
mov
loop
dec
cwtl
div
loope
sbb
loopne
ds
mov
stos
std
xchg
insb
jns
bound
xlat
aam
in
xchg
sbb
dec
mov
mov
test
sub
std
std
mov
add
sub
xor
dec
hlt
xlat
sbb
add
out
mov
inc
jb
out
add
sbb
test
cmp
jecxz
or
or
pop
inc
jns
xorb
daa
inc
pop
imul
arpl
ror
cmpsb
jo
push
pop
mov
clc
mov
test
jae
lods
xor
loope
adc
loop
out
xchg
xor
in
pop
push
cmpsb
mov
inc
sbb
push
inc
push
push
repz
sub
sub
pop
ja
adc
add
je
nop
data16
and
add
loopne
pop
add
mov
ja
adc
mov
mov
in
sbb
pop
pop
mov
jecxz
in
sub
and
mov
mov
popf
insb
repnz
adc
jb
bound
adc
xchg
mov
arpl
int
jle
repz
call
cmp
adc
negb
gs
loop
mov
pop
mov
pop
push
scas
or
jbe
jmp
ss
dec
repz
mov
idiv
in
push
movsb
seto
call
call
aad
inc
out
sub
gs
nop
mov
js
pop
scas
clc
fistpll
add
lret
push
mov
in
mov
hlt
and
shrb
jmp
and
mov
fisttps
inc
rcl
mov
fisubs
cld
negb
jae
in
ljmp
mov
inc
push
in
push
leave
jmp
mov
mov
movsb
pop
sub
lret
and
je
add
into
jnp
scas
js
add
aad
lods
mov
push
jo
fstpt
mov
cmpsl
cmp
outsb
adc
mov
dec
or
cmpsl
rol
jne
mov
lcall
test
inc
cmc
sbb
mov
push
and
js
jp
ss
repnz
jno
push
fwait
dec
cmp
cmp
cld
xlat
inc
xchg
sbb
rcll
les
mov
stos
push
int
lahf
sbb
push
sbb
dec
inc
loop
sahf
cmp
sbb
repz
subb
in
and
add
inc
pusha
adc
mov
or
or
stos
sub
xchg
xor
cli
jno
movsl
adc
lods
or
in
pop
lods
jo
int3
mull
in
repnz
sub
sub
cmpl
aas
bound
cmp
cmp
cli
imul
daa
loop
sahf
jecxz
out
push
jmp
push
xchg
les
xchg
adc
cmpsb
mov
xchg
add
push
fmulp
xor
xor
lock
loopne
lret
es
mov
add
mov
cmp
aaa
sbb
outsb
mov
cltd
and
sbbb
movsl
jns
push
popf
cs
dec
cmp
dec
out
leave
fmull
rcrl
mov
mov
push
mov
aas
rorb
in
fwait
in
sub
inc
outsb
sbb
mov
clc
dec
mov
or
push
push
add
sbb
orl
mov
pop
xchg
fnstsw
loopne
mov
mov
testb
int3
pop
mov
add
insl
adc
dec
add
pop
push
push
les
push
pop
pop
xorl
and
lock
push
ror
add
mov
ds
and
dec
and
lods
adc
mov
mov
shlb
mov
jno
ljmp
nop
sti
jnp
jmp
jmp
mov
pop
xchg
and
test
xchg
popa
ljmp
bound
fs
in
adc
or
test
imul
xor
and
xor
cmp
es
xchg
add
in
cmc
aas
push
push
out
lods
xlat
ja
pop
orl
insb
xor
mov
xchg
cmpsl
lock
lock
jl
mov
sbb
jmp
inc
rorl
adc
adc
push
mov
rclb
sub
je
subl
push
push
push
scas
stos
jl
mov
movsb
xchg
lcall
sbb
mov
adc
mov
fiadds
jp
mov
popa
or
mov
add
add
add
push
jp
sbb
mov
rcrb
leave
lcall
icebp
or
je
call
mov
outsl
out
pop
leave
cmp
test
clc
cmp
pop
mull
ret
cs
push
mov
pop
or
fisubrs
lds
mov
repz
pop
pop
pushf
and
fwait
lcall
mov
js,pn
dec
bound
repnz
mov
ja
mov
out
push
das
mov
out
mul
jp
sub
inc
lods
add
orb
negl
and
sarl
and
mul
push
adc
lods
push
push
fstpt
fistps
leave
arpl
test
inc
xlat
pop
jge
adc
sahf
adc
xorl
xor
inc
add
mov
xchg
add
lret
mov
xlat
call
pop
out
jb
jns
clc
xor
mov
add
loop
call
or
mov
jecxz
xor
mov
push
jae
sti
push
out
outsb
xchg
add
or
test
movsb
xor
loope
loopne
out
int
mov
xchg
lds
mov
pop
dec
imul
cmp
repz
pop
icebp
out
sbb
sbb
cmp
pop
push
orl
gs
iret
lods
cs
int3
cli
fimull
jg
add
lods
stos
mov
gs
icebp
mov
mov
push
enter
mov
mov
aam
or
loopne
repz
fldenv
iret
sbb
add
mov
inc
fisttpl
stos
jb
sub
inc
pop
aas
movb
aad
mov
repnz
pop
ret
jmp
pop
mov
and
add
push
jle
sbb
call
xchg
int3
xor
or
lods
xor
es
in
and
ljmp
push
dec
or
jno
int3
adc
mov
pop
add
sub
push
pop
xor
lahf
push
push
pop
jmp
jae
cmc
out
fsubl
xor
mov
add
lret
gs
xchg
popf
daa
es
mov
xorl
sbb
arpl
lcall
jno
lods
enter
or
lds
rolb
fildl
mov
jno
sub
fistpll
rcll
xchg
sub
dec
mov
in
ret
mov
mov
xlat
push
and
mov
aaa
fadd
in
out
inc
ret
pop
fwait
cld
jns
imul
adc
test
mov
mov
fstpt
inc
iret
ljmp
and
xor
cmpsl
in
popf
sub
jmp
shrb
add
add
add
add
adc
fs
sub
or
stc
mov
inc
lahf
adc
xchg
out
sub
cwtl
lock
fsubrs
call
aas
dec
les
test
jae
adc
push
popf
fcmovb
xchg
jge
aad
push
push
testl
fwait
lds
sbb
sbb
fiadds
ss
inc
in
adc
insl
iret
stc
negl
lock
ss
mov
jl
mov
lret
popf
lea
mov
mov
aaa
ja
out
xor
add
fidivl
repz
das
xchg
les
ror
cmc
xor
cltd
loope
xor
and
iret
jmp
sbb
arpl
lcall
imul
imul
inc
out
cld
call
mov
stos
jb
cvtdq2ps
xchg
mov
adc
jne
hlt
test
push
rclb
inc
jg
jbe
xchg
test
stos
fisubrs
xlat
ret
xchg
inc
sbb
or
add
lea
dec
sub
cli
pop
pop
pop
sarb
test
pop
adc
cmp
mov
dec
loope
out
cmp
pop
pop
test
mov
fimuls
je
sbb
cmpl
pushl
ficoml
cwtl
xlat
cmp
or
stos
push
ds
push
out
arpl
fimuls
jae
mov
mov
mov
pop
test
iret
xchg
into
sbb
xchg
popf
popf
int
or
aas
pop
mov
dec
sub
sbb
icebp
pop
testb
movsb
push
mov
add
dec
sub
ljmp
mov
popf
mov
ja
cmc
inc
pop
jg
aas
pushf
xor
test
push
in
mov
fucomp
dec
inc
ljmp
pop
mov
sbb
push
test
jae
add
iret
inc
cmpsl
es
loopne
fs
in
test
jg
scas
lcall
xchg
pop
or
or
mov
mov
aam
outsl
mov
call
jne
cli
test
or
mov
or
add
add
add
add
jbe
jle
lock
lea
jb
dec
mov
dec
ret
imul
jg
daa
int
cmp
loope
movsl
pop
jne
mov
lcall
xchg
inc
xor
lods
xor
iret
test
int3
sbb
fimuls
mov
ja
cmp
addr16
mov
mov
mov
cli
mov
lods
lods
in
sub
push
rcrl
fdiv
and
jmp
pop
lods
mov
pop
add
call
or
inc
xchg
pop
mov
add
or
inc
movsb
xorb
jle
and
add
mov
pop
hlt
push
mov
popa
cwtl
mov
push
into
fsubrs
mov
sbb
jp
out
sahf
mov
and
mov
and
sub
leave
pop
mov
cli
out
fbld
pop
scas
ficoml
sub
pop
xor
push
inc
enter
rep
out
push
fcomps
mov
divb
sarl
push
inc
add
and
les
add
push
scas
addb
jecxz
and
scas
adc
mov
adc
jbe
std
pop
jbe
mov
nop
xchg
mov
aas
sbb
mov
push
pop
arpl
dec
xchg
mov
ds
incl
fdivs
jo
dec
stos
jnp
das
out
ret
fwait
sub
jg
mov
push
stos
sub
pop
stc
js
push
cmp
cmpsl
add
or
sub
push
test
mov
sub
data16
add
jnp
jl
int3
mov
lods
pop
lods
xchg
xchg
adc
aad
xchg
outsb
cmpl
xbegin
pop
stc
decl
pop
shrb
mov
negl
adc
mov
mov
push
and
add
xchg
pop
ret
pop
mov
js
xchg
aaa
int3
cmpsb
inc
mov
mov
mov
mov
or
mov
scas
push
movl
xor
jnp
mov
push
jb
in
mov
inc
insl
fcomps
add
add
add
add
shrl
or
xor
mov
insl
popa
sbbb
pop
lea
cmc
int
dec
inc
sti
jbe
ret
movb
mov
mov
popa
adc
mov
mov
sbb
xchg
repz
aam
popa
aaa
push
inc
call
ja
fsub
push
pop
dec
aaa
or
imul
sub
mov
insl
pop
add
cltd
aam
jae
leave
or
data16
sbb
out
lea
sti
sbb
or
jnp
dec
in
rcr
lock
mov
add
sbb
outsl
pop
testb
fcompl
pop
jmp
cmp
repz
inc
nop
or
pop
or
lea
roll
mov
mov
inc
mov
sahf
shrb
push
leave
lret
add
imul
xchg
jmp
aas
xchg
or
and
es
cwtl
ror
data16
mov
sub
das
rorb
pop
ljmp
insb
lods
inc
or
stc
fildl
loopne
xor
aas
mov
jns
jo
add
xor
dec
aas
gs
xchg
fptan
incl
iret
add
or
push
sbb
popf
adc
cwtl
psrld
test
fadds
pusha
push
add
mov
addb
addr16
ja
dec
insl
out
sbb
and
das
cli
es
mov
fwait
cwtl
push
add
ss
adc
mov
fstpt
xlat
push
push
mov
mov
lods
add
rorb
fs
lock
xchg
fstp
sub
data16
sbb
ja
ret
or
add
add
add
dec
rcll
out
add
aad
pop
jg
pop
pop
cmp
mov
sahf
enter
call
push
ja
scas
enter
jnp
push
nop
push
ljmp
loopne
icebp
leave
push
cld
int
mov
sahf
repnz
shll
cs
dec
inc
aad
cld
jmp
xor
ss
pop
xor
mov
push
dec
rolb
jbe
dec
std
xchg
popa
cli
test
xor
pop
push
mov
shll
mov
js
ret
cmp
adc
hlt
xor
lret
jo
jle
add
dec
dec
sbb
fdivp
xchg
pop
mov
sub
xchg
mov
pop
sub
leave
xchg
jae
cmp
xor
jle
hlt
or
pop
jmp
mov
in
mov
outsl
xchg
loope
aaa
xchg
es
loopne
push
sub
mov
add
push
js
andl
fwait
sbb
fcomi
lahf
in
leave
hlt
out
dec
xchg
in
xchg
jle
xorb
in
imul
xchg
mov
inc
dec
pushf
adc
sub
cmp
outsl
push
int3
or
mov
inc
and
jno
add
push
out
mov
push
add
sarb
imulb
test
adc
push
push
dec
adc
add
pop
jbe
mov
andb
loope
inc
add
sbb
mov
jl
into
push
jl
repz
out
dec
inc
sub
or
dec
mov
sbb
mov
mov
pop
adc
int3
je
cmp
add
lods
call
adcb
lret
or
aas
rorl
test
jmp
repnz
sarl
inc
or
push
cltd
les
es
ja,pt
or
daa
pop
and
push
jbe
and
mov
mov
sub
pop
fwait
cmpb
bound
shll
loopne
cmpsl
push
gs
jae
inc
sbb
fdivr
movsb
js
push
push
dec
mov
or
cwtl
js
or
sbb
mov
ja
mov
lcall
jp
inc
in
xchg
sti
or
add
add
out
sub
test
filds
in
adc
and
andb
jge
pop
push
fwait
loopne
mov
and
test
add
jge
xchg
dec
das
lcall
cmc
into
je
push
mov
imul
xor
push
das
call
nop
mov
inc
cmp
mov
ljmp
movl
sarb
pop
outsl
and
mov
insb
push
in
pop
aaa
fwait
insb
stc
push
loope
pop
pop
loopne
shll
dec
out
sarb
in
add
fisttps
mov
or
shll
sub
push
adc
je
add
pusha
ret
xlat
mov
and
add
and
andb
xor
aaa
xchg
std
mov
jnp
inc
jp
inc
add
sbb
xchg
jmp
lcall
push
in
stc
aas
sub
jecxz
inc
in
movsb
mov
cmpl
sub
std
sbb
push
xor
hlt
mov
mov
aad
and
subl
loopne
fiaddl
add
sti
dec
jmp
sarl
jle
xchg
mov
mov
fsubrs
test
mov
jle
lahf
lea
xchg
dec
or
mov
mov
add
js
xchg
pop
test
enter
push
mov
and
in
arpl
dec
mov
cmp
outsb
mov
lods
sahf
sbb
or
dec
sysenter
shlb
lock
xchg
loop
mov
std
hlt
xlat
cltd
imul
jg
jno
aad
insb
jmp
jp
add
orl
rolb
out
xor
dec
cwtl
stos
mov
mov
ja
je
jo
mov
sbb
mov
loope
lock
xchg
in
sbb
cs
lahf
jbe
mov
ret
pop
adc
ret
add
mov
int
xchg
inc
jbe
mov
pop
outsl
in
add
sbb
ret
push
addr16
jnp
fwait
gs
ljmp
mov
dec
inc
hlt
out
fildl
sub
adc
cli
aad
daa
das
stos
add
xor
cmpl
pop
imul
inc
je
stos
cmc
and
roll
inc
lock
mov
xorl
inc
pop
test
pop
sbb
divb
mov
xchg
std
sbb
cld
cmp
push
rcrl
arpl
repz
je
cmpsl
inc
and
mov
pop
sbb
movsl
fcmove
jne
das
jno
stos
sub
or
mov
mov
stc
sbb
dec
push
loopne
std
xor
lods
in
add
push
aad
movsl
or
add
mov
push
clc
cmp
or
push
sub
sbb
nop
inc
mov
mov
push
mov
add
xor
mov
stos
lahf
inc
call
inc
lea
sub
out
jge
jns
outsb
adc
xchg
cmp
xchg
sub
insl
in
loopnew
xlat
push
ja
xor
ja
int
dec
cmpsl
int3
popf
in
sub
mov
out
fstps
and
popf
gs
imul
xchg
ja
lods
xchg
and
push
subb
push
nop
testb
and
and
lret
xchg
push
xchg
cmpsl
cmpsl
fwait
inc
xor
push
subl
mov
repz
push
ret
push
pop
aad
dec
hlt
or
cmp
lcall
or
add
arpl
sbb
xchg
lock
xlat
jae
mov
adc
outsl
sbb
stc
push
jmp
addr16
sbb
add
sub
sub
jno
sub
int3
cmp
insb
sbb
rcr
add
mov
sub
dec
jno
call
xor
or
lea
lods
cmp
cmp
add
inc
lds
cltd
xchg
paddb
call
ljmp
fildl
xchg
les
cmpsb
push
cmp
jo
pushf
sub
insb
out
xchg
stos
mov
ss
mov
jecxz
inc
mov
call
push
inc
cmp
dec
jno,pt
fsubs
aas
aam
mov
lahf
xchg
mov
push
aas
inc
andl
add
xlat
push
cwtl
inc
dec
rclb
adcl
xchg
jge
and
cltd
loopne
pusha
push
jo
or
or
inc
jle
out
movsl
sbb
cmpsb
inc
insl
in
subl
addr16
sti
repz
roll
lea
and
aad
xchg
inc
xchg
aas
mov
int
cmp
xchg
mov
stos
fwait
inc
repz
int3
inc
out
test
add
not
inc
xchg
sbb
pop
leave
push
add
or
js
jg
fsubl
fucom
add
sub
leave
inc
jg
gs
mov
mov
and
jp
aaa
push
lea
outsl
pop
mov
inc
cwtl
sub
fistpll
popf
adc
jle
movsl
je
std
pushf
test
jmp
mov
and
stos
lcall
cmp
stc
mov
xchg
packssdw
scas
es
inc
jecxz
dec
aam
or
or
popa
pusha
push
cmp
insb
not
ja
jno
mov
insb
mov
mov
mov
add
xchg
cs
pop
sub
add
mov
dec
jle
mov
stc
ficoml
jb
das
sub
mov
sbb
xor
dec
rsqrtps
jo
or
lods
imul
lcall
fyl2xp1
iret
or
adc
bound
add
pop
test
cltd
test
icebp
mov
imul
mov
mov
push
inc
push
and
aaa
xor
test
ljmp
mov
ss
into
icebp
call
imul
add
add
add
aas
out
jl
clc
sub
dec
repnz
mov
or
inc
outsb
mov
mov
dec
out
aas
pop
mov
sbb
movsl
pop
jg
push
aas
cmpsb
dec
xchg
mov
adc
dec
sub
pushf
lods
out
jbe
insl
into
sub
lahf
test
xor
lahf
clc
mov
ficoml
jns
lods
decl
call
adc
and
out
bound
or
pop
cmc
in
mov
lods
xchg
cmpsb
ret
pop
xchg
and
add
enter
in
mov
ljmp
shr
mov
dec
sbbb
icebp
add
sbbb
cltd
and
iret
sbb
mov
xchg
das
and
sbb
push
mov
lods
mov
xor
repz
mov
in
pop
pop
lret
ret
mov
subl
mov
mov
iret
enter
mov
add
loop
les
call
mov
rcrl
push
xchg
mov
hlt
add
insb
jge
sub
loope
dec
ljmp
js
ss
fmuls
jmp
sub
sarl
push
popf
dec
popa
xchg
shr
push
insb
push
mov
popf
sti
mov
test
add
sbb
cmpsl
cs
rcl
stos
iret
mov
jb
add
arpl
sub
sbb
mov
test
jmp
jnp
adc
or
ja
jae
leave
shlb
sbb
addr16
dec
lods
adc
xchg
or
and
pop
sub
roll
add
push
ret
pop
mov
out
jb
ja
popf
fs
mov
sbb
cmpsb
lds
push
roll
pop
lret
pop
mov
jns
jno
je
push
notb
jne
cmp
mov
xchg
cltd
es
scas
or
les
jmp
mov
mov
leave
push
mov
add
bound
add
insb
adc
dec
loopne
cmp
pop
push
shlb
pushf
cmp
pop
stc
mov
cmpsl
pushl
xor
enter
jno
mov
lods
push
add
add
add
andl
inc
rcll
push
je
enter
fwait
sbb
or
push
lahf
mov
xchg
mov
insb
fisttpll
mov
dec
mov
loopne
adc
sysexit
ret
cmp
scas
cmpsl
push
jecxz
fdivl
jl
clc
adc
inc
jmp
pushf
jmp
mulb
in
ficompl
shrb
sub
test
pop
push
pop
sbb
call
or
nop
in
push
pop
dec
ds
and
in
dec
mov
mov
add
mov
push
mov
cli
adc
loopne
xchg
imul
push
push
push
mov
lahf
sbb
sti
in
inc
xchg
je
sti
cmp
mov
sbb
inc
and
iret
fstpl
aaa
jnp
mov
imul
dec
sub
sti
lock
jl
jp
sub
bound
mov
ljmp
aaa
repz
push
push
mov
icebp
add
stos
test
and
repz
jbe
lahf
fildl
ds
les
sbb
cwtl
push
jb
call
add
add
add
add
sbb
push
insl
and
outsl
xchg
push
mov
pop
cmpsb
stos
xor
cs
push
cmp
and
ret
cmp
cmp
bound
scas
stc
cli
and
leave
movsl
aas
dec
mov
into
stos
push
pop
add
sub
sbb
sub
mov
mov
test
stos
sub
adc
jg
or
cmpsb
mov
fwait
sarl
sbb
arpl
pop
xor
dec
cltd
aaa
fldcw
push
hlt
add
pop
sahf
xlat
jp
add
sub
ret
pop
shl
push
or
mov
cld
push
and
aas
imul
push
add
stos
mov
inc
pop
mov
adc
or
adc
iret
call
dec
lahf
cmp
negb
dec
movsb
dec
roll
out
mov
dec
xor
sbb
nop
aam
or
sub
inc
add
scas
lahf
dec
push
lcall
dec
cli
push
and
lahf
dec
test
dec
movaps
cmp
xchg
pop
dec
mov
imul
add
add
jne
ja
xchg
notl
mov
mov
pushfw
xchg
push
daa
test
pop
pop
cs
clc
pop
sub
aas
xchg
ss
mov
mov
cmpsl
mov
mov
sub
and
ss
xor
rorl
mov
test
cmpsl
sti
or
pop
je
push
cld
lcall
lahf
sbb
push
loope
mov
aam
stos
mov
in
and
shr
jcxz
xchg
outsb
mov
jmp
negl
push
cmp
add
mov
push
pusha
adc
aas
cmc
cmp
aaa
inc
lods
sahf
inc
add
adc
enter
dec
push
test
jl
or
sbb
aad
das
push
push
mov
out
test
sub
addr16
pop
jl
test
dec
popa
mov
jl
push
xor
sbb
sbb
loopne
push
cwtl
rcl
test
lods
scas
inc
mov
add
shll
jb
xor
loopne
iret
mov
es
icebp
add
pop
imul
jg
sbb
das
js
mov
push
lods
pop
pop
jge
fisttpl
add
mov
ret
into
sbb
ljmp
xchg
mov
jg
jl
aas
mov
sbb
jb
adc
loope
lods
dec
les
ss
pop
inc
ljmp
popf
push
cmp
sub
outsb
dec
cmp
xor
cltd
pop
in
lds
adc
cmp
push
mov
jmp
mov
in
jae
push
push
adc
dec
add
xchg
jnp
mov
mov
mov
pusha
rcrb
inc
sbb
adc
stos
dec
int
clc
arpl
ret
xchg
aas
and
dec
ljmp
xorb
xor
sbb
xchg
pop
clc
and
inc
pop
mov
ja
frstor
or
cmp
mov
sub
add
sbb
ret
lret
out
test
fdivrs
rorb
lahf
xchg
push
xlat
ja
cmp
mov
mov
add
add
add
add
nop
inc
aad
or
insb
dec
adc
jmp
and
pop
js
enter
cltd
orb
out
or
inc
xor
rsm
rcll
mov
jb
sbb
add
sti
inc
cli
in
aad
cmp
xlat
and
sbb
push
or
pop
les
cmc
roll
add
adc
and
sub
cmpsl
jno
cmp
mov
ljmp
rclb
popa
and
arpl
add
push
aad
fcomps
pusha
pop
push
mov
in
jns
and
ja
pop
xchg
or
mov
inc
add
pop
adcl
fwait
sbb
rorl
les
imul
jne
sub
add
adc
inc
call
pushf
in
xor
dec
subl
imul
mov
movsl
cmp
and
mov
adc
or
jns
rcll
dec
neg
gs
addb
dec
js
jns
sub
sub
outsb
xor
adc
cmp
fldcw
push
in
bound
into
push
out
arpl
inc
push
push
adc
aam
movzwl
sahf
pop
fildl
test
push
push
lret
cmpsl
les
and
repnz
in
sbb
cmp
fwait
pusha
sub
push
imul
inc
arpl
push
inc
stos
xchg
push
inc
adc
push
jbe
mov
rolb
jo
adc
ret
repnz
fsts
add
shr
add
lock
jle
xchg
aaa
out
and
pop
inc
rclb
iret
roll
stos
jg
pop
cmp
xchg
enter
lods
jmp
adc
jl
xchg
lods
dec
arpl
jl
cmp
jl
inc
sbb
rcrl
or
shr
push
pop
imul
imul
xchg
inc
ret
xchg
ja
out
inc
std
lcall
lret
sbb
xchg
lock
das
imul
fsts
loop
xchg
xor
sbb
push
push
ljmp
jp
addl
int3
stos
andl
sarb
in
or
pop
ss
sub
push
push
inc
xchg
lahf
or
mov
or
fcomp
mov
stc
in
sbb
pop
xchg
outsl
lret
mov
mov
pop
mov
leave
mov
or
dec
mov
jge
fxch
lds
adc
ljmp
lret
cmpsl
test
packssdw
xchg
aaa
jle
rclb
ss
lahf
lds
out
push
jmp
push
push
into
xchg
inc
mov
fdivrl
lock
cmp
cmc
mov
int3
faddl
cs
fcmovnu
int3
pop
es
das
jmp
inc
outsb
inc
mov
lcall
mov
mov
dec
cs
lret
sti
jb
xchg
dec
pop
negl
aaa
jecxz
and
daa
cs
push
cs
repnz
movzwl
ljmp
mov
xor
nop
push
das
testb
mov
pop
fwait
lret
sub
mov
push
cs
xor
ret
and
and
cmpsl
ret
imul
fucomi
add
scas
scas
push
xchg
adc
push
and
mov
xor
std
xchg
push
popl
adc
bnd
je
lahf
sub
test
fcomps
xor
mov
pop
push
int
movsb
and
add
lret
xor
adc
je
shll
cmpb
outsb
adc
lret
cmpsb
push
imul
mov
adcl
xchg
mov
mov
hlt
out
sbb
shrb
gs
xorb
push
and
add
xor
aas
leave
jecxz
gs
movsl
xchg
subb
mov
mov
lock
inc
out
xor
aaa
cmpsl
andb
pop
inc
mov
ljmp
imul
mov
test
push
fstps
inc
adc
mov
outsl
mov
fisubrl
fnsave
push
xor
cwtl
pop
loopne
add
mov
out
popa
aad
popa
push
test
pop
das
dec
pop
sub
push
in
sbb
add
sub
add
lock
lds
push
in
cmpb
push
or
test
fdivrl
push
adc
add
das
pop
stos
xchg
sbb
sahf
aam
mov
stos
mov
outsb
push
push
xchg
mov
stc
fdivrl
dec
push
inc
mov
xlat
mov
adc
iret
pop
test
or
jae
jg
and
jge
jmp
subl
pushf
sbb
mov
push
or
push
outsl
cmpb
dec
mov
mov
push
les
test
pop
add
pushf
pop
sub
sti
aam
aas
mov
xor
push
clc
lods
cmp
xor
scas
movsl
insb
fbld
addr16
fistpll
add
insb
or
loop
fldl
in
stos
in
xlat
add
mov
mov
dec
jmp
dec
sbb
dec
mov
add
mov
dec
jmp
ficoml
daa
jl
dec
lcall
lds
cli
push
gs
test
adc
addr16
cld
fisubrs
jge
inc
mov
lods
ret
mov
aaa
in
pop
dec
cld
mov
fiadds
dec
sub
and
and
fnstenv
or
xor
out
jno
je
fiadds
movl
or
ret
aad
mov
jae
mull
pop
mov
add
adc
ret
insl
cmp
movsl
xorb
sbb
pshufw
sysenter
inc
cltd
in
nop
icebp
addr16
pushl
lcall
vmwrite
lea
xchg
pusha
jae
es
testl
jo
cmp
lret
jl
aas
test
add
scas
test
add
xchg
out
lret
ds
nop
cmpsl
aaa
hlt
pop
data16
hlt
out
jne
ret
mulb
rorb
pop
adc
xor
push
test
mov
stc
negl
and
mov
testl
jae
push
iret
repz
out
rcll
leave
sub
and
mov
push
loopne
inc
js
mov
gs
inc
push
xlat
xlat
cli
outsb
out
test
call
insb
aam
pop
cli
inc
subl
jb
adc
lahf
push
repz
dec
add
mov
cmp
mov
fwait
dec
lea
test
movb
lret
cmp
int
testb
mov
pop
cmp
pushf
jp
jmp
add
mov
imul
and
mov
out
or
out
add
scas
std
nop
mov
jl
mov
and
sbb
in
or
inc
aad
out
mov
out
push
inc
mov
cmp
xor
jne
clc
adc
lea
outsl
mov
stos
push
add
les
das
sub
divl
enter
sbb
movsbl
loope
dec
lea
mov
scas
add
sub
cmp
fildl
in
cmpsb
cmp
or
test
lods
jge
pushf
or
data16
out
mov
les
and
and
or
xchg
cld
out
loope
inc
mov
inc
pop
aas
dec
cmpsb
add
mov
mov
push
mov
mov
repz
es
push
add
add
add
add
scas
cltd
sbb
xchg
lret
jb
inc
add
cmp
mov
cmp
and
mov
mov
test
mov
push
fidivrs
mov
jl
sbb
add
mov
je
fsubrl
mov
movsl
out
repnz
addr16
aad
xchg
incb
push
out
jb
mov
stos
dec
adc
xor
cmp
lcall
in
pop
cmp
mov
imull
cli
and
stc
adc
cmc
cmc
push
push
outsl
add
call
dec
data16
popa
lods
add
mov
cmc
inc
aas
mov
rorl
xchg
test
add
mov
cld
jge
rcrb
insb
or
pushf
arpl
enter
out
ljmp
xchg
and
movsl
sahf
sahf
push
lahf
adc
cs
movsl
fwait
push
push
pop
outsl
mov
stc
fwait
jg
pusha
xchg
mov
xor
cmpsl
fidivrl
ret
xchg
pusha
and
push
dec
into
call
lock
push
mov
add
je
in
mov
xchg
fucom
in
xor
dec
fcmovnb
into
mov
orb
das
inc
inc
inc
loop
mov
daa
xor
daa
sete
xor
jmp
test
cltd
sub
stc
xlat
test
mov
dec
push
ret
stos
pop
andl
jg
add
mov
sbb
mov
xor
xor
lcall
pop
dec
dec
mov
add
loop
mov
push
xor
cli
dec
sbb
inc
push
jg
push
xorl
dec
add
inc
adc
or
push
repz
int
in
lods
movups
jge
and
loop
add
dec
mov
jle
add
or
daa
ja
xchg
add
in
arpl
loopne
push
ret
mov
ret
subb
mov
pop
loop
xlat
mov
cmp
add
xchg
aas
loop
and
pop
or
sbb
cmp
mov
and
xor
mov
push
sti
pusha
xor
jbe
add
ret
mov
cmp
imul
sub
imul
inc
loop
daa
lea
int
lds
mov
int
nop
jae
shlb
in
xor
xchg
addb
adc
or
add
mov
cmp
dec
inc
cmpsb
mov
or
sti
add
push
out
xchg
sti
lds
xor
mov
aas
fbstp
xchg
mov
rcll
add
movsb
add
hlt
mov
shr
xchg
popa
rcr
lret
sbb
pop
loope
insb
cmpsb
out
sbb
scas
jmp
mov
sti
xor
and
iret
pop
ficoms
sub
stos
cmpsl
sbb
cmp
shrl
mov
repnz
dec
sti
jle
nop
hlt
repz
repz
call
inc
add
xor
arpl
es
imul
mov
orb
mov
pop
pushf
push
insb
loope
and
inc
mov
adc
add
jbe
jl
mov
dec
jb
cwtl
mov
xchg
dec
fdivl
xor
mov
pop
or
ror
dec
popf
pop
xor
sub
cmc
addr16
fsub
and
fstpt
negl
jno,pt
sbb
bound
or
push
loop
and
pop
dec
jns
jnp
dec
stos
pop
cmc
loop
push
xchg
pop
test
js
jnp
ja
mov
test
xor
outsb
push
lahf
and
fidivl
push
or
cmpsl
scas
sti
sti
mov
aad
daa
jo
cmp
add
movb
icebp
or
fildll
mov
hlt
sub
mov
daa
or
loop
mov
int
pop
mov
dec
or
into
sbb
dec
cmc
mov
gs
ret
xchg
xor
and
xor
cmp
and
mov
lret
leave
lahf
daa
adc
shll
in
loopne
jnp
mov
mov
lods
bound
mov
popf
mov
mov
mov
adc
mov
iret
in
lret
pop
daa
add
in
xchg
ss
rcl
int3
mov
subl
inc
xchg
pushf
enter
test
xor
lods
jb
push
andl
sub
stos
ljmp
cmp
out
dec
cld
adc
pop
pop
xchg
lods
mov
loop
pop
imul
es
mov
stos
aas
test
mov
sub
clc
pop
repz
aas
mov
mov
js
pop
and
mov
adc
cmc
cmp
mov
add
loope
xorb
dec
jae
pop
movsb
rcrb
pop
sub
mov
fs
push
das
mov
outsl
adc
gs
bound
mov
jae
es
push
test
inc
push
fstps
and
out
pop
in
insb
test
scas
pop
xchg
addb
jns
mov
adc
movsl
test
jle
std
push
sub
or
loopne
aad
xchg
or
cmp
push
pusha
xor
scas
mov
dec
daa
xor
pop
sbb
add
ret
pop
cmpsb
mov
ja
nop
sarl
jge
mov
into
cmp
in
inc
sbb
stc
cmp
add
shrb
outsb
stos
scas
fdivs
scas
arpl
loop
popa
xchg
into
jo
lret
push
dec
cli
and
pusha
xorb
pop
mov
or
xor
pop
xchg
je
movsb
adc
dec
repnz
mov
ja
es
cwtl
stc
decl
sub
loopne
adc
es
std
leave
xchg
or
push
jae
lahf
loop
add
sahf
je
fnstcw
sbb
neg
nop
and
lcall
mov
rclb
mov
orl
in
addr16
xor
sbb
testb
mov
das
pushf
dec
out
lret
push
jg
dec
jb
inc
xor
fsubl
add
stc
mov
cmp
bound
jl
jae
scas
sbbl
pop
in
pop
loop
jecxz
jl
cld
cmp
mov
out
pop
adc
pop
insb
pushf
ret
movsl
jbe
add
roll
fidivl
add
add
sbb
iret
jo
add
push
xorl
sub
lock
inc
adc
test
jg
fisubrs
inc
test
xor
push
jecxz
ror
jg
enter
clc
mov
adc
clc
sub
test
das
loop
cltd
cltd
push
cli
stos
daa
sbb
imul
loop
jnp
mov
inc
test
repnz
or
sahf
cld
jno
rcll
lock
arpl
xchg
mov
jl
fcmovnb
push
mov
or
in
add
pop
cmc
adc
xchg
xchg
mov
lcall
inc
in
jl
cmp
pop
ficoml
sub
out
cltd
aam
xchg
adc
std
clc
and
mov
sub
adc
scas
fdivp
xchg
or
fistpl
movsb
push
push
and
ds
lods
cs
xor
xor
adc
pop
cltd
push
push
pop
mov
repnz
movl
lret
sub
mov
ret
and
enter
jb
int3
adc
mov
inc
and
subl
cltd
xchg
jle
xor
xchg
sub
sub
fisubl
sbb
pusha
push
sub
cmp
cwtl
xchg
xor
daa
test
ja
cwtl
push
fstp
adc
inc
fsts
mov
xchg
jp
mov
sahf
push
jle
push
xchg
lods
jp
sbb
sbb
inc
cs
stos
inc
fnstcw
int
popf
mov
pusha
pop
mov
sub
nop
or
mov
push
test
cmp
add
add
add
add
popf
fsubrp
add
push
pop
in
jns
imul
mov
aam
outsl
mov
mov
cwtl
lods
sbb
add
loopne
inc
or
push
xlat
fidivl
bound
push
call
outsb
ret
enter
inc
ret
mov
stos
adc
mov
js
lods
fidivrs
sub
push
xchg
mov
mov
mov
mov
js
aam
mov
pushl
enter
inc
das
fbld
add
ffreep
push
sub
repnz
nop
xchg
cmp
in
and
mov
imul
fdivrp
fildl
ja
push
sub
jmp
cmp
jg
shrb
stc
icebp
fimuls
sbb
out
dec
push
movsb
jmp
jmp
push
notl
dec
dec
xorl
mov
insl
push
bound
add
lret
mov
addr16
in
inc
data16
cltd
lods
mov
add
lcall
mov
test
mov
or
call
inc
cli
popl
mov
pop
lahf
sub
pusha
rorb
pop
push
mov
pop
mov
mov
dec
adc
in
fsts
loop
arpl
jmp
cli
xchg
bound
cmc
sub
scas
inc
xor
and
clc
shll
jne
mov
in
mov
mov
into
xor
icebp
push
and
loopne
scas
xor
movsl
xchg
cli
decl
pop
shrb
sti
scas
sbb
test
adc
stos
je
xchg
es
imulb
mov
xchg
insb
aam
ds
ret
and
add
sub
jg
test
pop
sbb
in
add
or
add
test
cmpsb
ds
jbe
cmp
and
pop
pop
mov
jns
enter
rcl
iret
gs
arpl
and
mov
out
xlat
adc
js
lret
push
xchg
lahf
jmp
jb
jg
jb
leave
pop
test
xchg
adc
pop
inc
cwtl
ret
push
cmpsl
outsl
xor
into
add
and
pop
xor
loop
or
shlb
jmp
add
in
mov
in
or
dec
loop
pusha
mov
mov
add
inc
enter
xchg
mov
mov
imul
adc
stos
sub
pop
pop
jp
shr
imul
pop
repz
adc
cltd
push
test
hlt
mov
pop
inc
cmc
cli
lods
stos
daa
imul
in
addr16
std
or
xor
jl
nop
jbe
ljmp
popa
fsts
inc
lods
adc
rcr
popf
js
mov
adc
pop
cltd
add
cmp
jecxz
sbb
and
sub
lock
leave
push
movsb
dec
mov
movsb
repz
clc
jns
into
adc
jns
out
outsl
in
sbb
jbe
ss
jo
mov
loopne
pop
and
ja
imul
and
leave
and
lods
pop
icebp
fiaddl
sub
sbb
sub
pop
and
jle
sbb
test
dec
sti
in
or
xchg
ficoml
ja
int
cmp
push
das
js
xor
add
sahf
pop
bound
mov
add
mov
mov
outsb
bound
jae
pop
andl
int
in
mov
or
mov
stos
sbb
loope
and
cmpsb
popa
xor
fidivrs
or
into
mov
shll
cmp
aad
mov
aas
jge
sub
xor
mov
jns
pop
add
insl
andl
inc
fcmove
and
ret
subb
fsubr
std
lcall
loopne
jle
cwtl
js
dec
add
cwtl
insl
mov
sub
addr16
jg
dec
push
sub
mov
push
stos
sbb
add
sub
lods
shrl
xchg
and
out
ss
adc
jle
in
xor
aam
push
icebp
int
insb
xchg
pop
aam
cli
in
into
dec
pusha
fidivrs
inc
out
in
loop
insl
nop
push
insl
jp
pusha
fidivs
subb
push
push
mov
or
outsb
cmp
ja
es
aam
stos
sbb
icebp
xchg
cmp
jb
cs
jbe
iret
add
dec
cmp
add
in
cmp
sub
pop
aaa
dec
loope
pop
sahf
enter
jno
cmpsb
or
and
rcrb
in
out
sbb
lret
fsubl
or
fdivrl
xor
js
insl
sub
fdivs
pusha
pop
pop
pushf
iret
push
sub
inc
das
pop
mov
ret
or
or
or
lock
and
and
jmp
outsl
mov
mov
dec
fwait
dec
pop
loop
rorb
dec
pop
insl
add
orl
add
add
add
add
xor
popf
ljmp
jne
inc
shrl
pushf
addr16
push
inc
xchg
std
aam
xchg
sbb
sahf
sub
dec
or
xor
arpl
enter
xor
sub
xor
shl
cmp
test
fcmovbe
push
push
add
fwait
or
movsl
cmp
in
out
movsb
xor
decb
outsb
push
insb
aad
add
add
fnsave
aad
and
testb
dec
aaa
bound
idiv
xor
or
fdivrl
adc
mov
inc
arpl
or
add
add
add
imul
in
pop
mov
mov
out
xorb
mov
adcl
mov
seta
adc
push
int
or
mov
das
pop
js
inc
xchg
in
sbb
stos
in
mov
xchg
cli
lcall
gs
push
stos
insl
push
sbb
test
pop
xor
bound
fistl
imul
cwtl
sar
packssdw
mov
lret
fpatan
dec
into
pop
cltd
push
mov
mov
push
jle
add
sub
xchg
sub
rclb
stos
cmp
imul
negl
fwait
jl
push
lea
mov
in
sub
inc
popf
lret
mov
add
outsb
std
cmp
das
ss
fimull
test
mov
dec
scas
adc
adc
and
sub
aam
add
xor
psubsw
fistpll
inc
ret
call
mov
scas
pop
insl
sbb
dec
lret
mov
cmpsb
cmp
scas
mov
shlb
adc
mov
inc
out
xchg
jb
call
mov
mov
std
imul
pop
leave
jne
call
mov
mov
dec
mov
dec
or
rorb
inc
jp
pop
inc
dec
in
hlt
loop
cmp
mov
xorl
jno
mov
addr16
jns
jl
add
mov
dec
aad
adc
mov
pop
out
mov
test
call
add
data16
xchg
push
pop
hlt
mov
mov
lahf
and
mov
mov
cmpsl
aaa
in
insl
daa
mov
adc
arpl
cmc
jbe
insl
mov
and
jl
xor
inc
xor
cmpsb
imul
mov
mov
xchg
popa
mov
adc
insl
mov
or
icebp
add
dec
leave
mov
mov
xchg
mov
movsb
jbe
pop
jle
jne
sub
adc
xchg
out
insb
lahf
out
xchg
cld
lahf
add
lret
mov
fistl
or
inc
js
aad
testb
rcr
jge
aad
call
es
pextrw
ficoml
xor
mov
dec
mov
je
scas
push
inc
cmp
imul
or
mul
mov
mov
loopne
fst
loopne
pop
push
push
dec
sub
sub
nop
adc
mov
cs
push
fisttps
push
add
xchg
mov
inc
lods
push
xchg
jmp
cs
xchg
imul
rolb
add
push
out
inc
out
fmul
jp
filds
imul
daa
daa
hlt
push
mov
mov
mov
hlt
hlt
sub
fstps
cmpsb
out
cmp
lock
sub
mov
jo
dec
sub
dec
push
jg
scas
dec
mov
cmp
icebp
lahf
inc
sbb
cmc
jne
jbe
jg
push
cwtl
pop
loope
call
sbb
in
in
ss
or
jne
add
inc
fnsave
mov
jle
pop
dec
loopne
rol
mov
add
add
add
jecxz
push
cwtl
out
add
aad
int3
loop
or
mov
std
mov
jno
aam
pop
pop
out
ss
mov
hlt
cli
push
int3
and
xor
jle
rcll
add
scas
inc
add
in
scas
push
jecxz
out
mov
push
sahf
lods
pop
stc
jle
stos
dec
mov
push
hlt
add
inc
lds
aaa
jle
mov
jmp
mov
pop
jae
sub
insl
test
mov
lret
mov
insb
add
mov
push
mov
and
sub
pop
test
dec
stos
cli
add
lds
xchg
test
mov
std
cmp
fs
sarb
in
xor
cmp
mov
push
pusha
or
lock
dec
xchg
loop
mov
in
aaa
and
lret
lcall
jle
mov
cmpsl
pop
aas
sarb
push
dec
les
adc
pop
dec
ja
dec
pop
or
and
xor
add
xor
out
xor
js
loope
sbb
add
xchg
movsl
dec
movsl
mov
popa
sbb
ss
xor
cmp
lds
outsb
sbb
int
cmp
cmc
dec
and
dec
adc
sub
cmp
out
out
data16
test
push
adc
pop
sbb
and
pop
shl
addr16
xor
outsb
jbe
mov
cmp
cmp
add
add
repz
es
ss
in
mov
bound
mov
dec
outsl
xchg
cmpsb
xor
and
mov
ljmp
jge
add
out
shll
cmp
stc
sbb
icebp
ja
in
adc
jbe
jne
cmpsl
pop
pop
push
leave
popf
mov
sub
jbe
and
push
sbb
cmpsb
mov
and
test
sbb
dec
jae
repnz
insb
xchg
dec
jno
sti
call
xor
sub
pushf
cmc
dec
ss
push
movsl
xor
std
les
out
push
add
mulb
dec
or
in
scas
out
dec
jge
lahf
mov
hlt
cltd
bnd
mov
add
leave
adc
and
jne
out
cmc
mov
loop
bound
jmp
add
sub
or
xor
jns
gs
out
push
aad
jne
sbb
popa
bound
imul
pop
sub
jbe
jbe
aaa
jae
daa
loopne
js
inc
jg
xchg
sbb
mov
outsb
xlat
aam
pushf
jg
into
fisttps
mov
or
push
outsl
xor
mov
sub
je
insb
hlt
and
mov
inc
jnp
jmp
mov
fcoml
add
test
mov
dec
aas
pushf
imul
adc
xor
push
ficompl
lea
pop
leave
cmpsl
movaps
sbb
and
scas
les
out
fidivl
mov
jne
push
insl
cmp
out
mov
das
adc
fistl
or
mov
cmp
mov
dec
ss
fildl
fwait
mov
pop
fcmovb
mulb
pop
mov
dec
icebp
cmp
lcall
pushf
xchg
pop
add
add
jge
adc
cmpsb
icebp
pop
sub
lods
xor
je
mov
clc
pop
adc
addr16
dec
shrb
in
mov
ficoml
mov
xlat
sbb
test
div
inc
loopne
sbb
mov
inc
or
add
or
sarb
dec
scas
cld
mov
inc
dec
fprem1
in
ret
roll
or
push
in
mov
adcl
nop
mov
aaa
scas
imul
xchg
xchg
aad
and
shrl
dec
rorb
lods
adc
pop
add
fmuls
scas
sub
xor
lods
push
sar
cld
push
loope
push
add
cmp
cmpsl
mov
mov
adc
repnz
scas
out
mov
mov
cmpsl
mov
arpl
pop
sub
cmp
movsb
and
cmpsl
xchg
inc
aas
lahf
fsubr
aad
pop
mov
inc
outsl
inc
stos
or
adc
dec
sbb
mov
fbstp
scas
add
aam
sti
add
sbb
cld
es
shll
dec
xchg
mov
inc
cmpsb
sub
add
scas
insb
fldcw
mov
cmpsb
sub
jge
mov
les
sbb
sti
int
lods
jle
lock
pop
and
fwait
lea
into
lock
dec
xchg
pop
sub
mov
clc
push
shlb
mov
jbe
lahf
or
or
pop
rcll
adc
lock
data16
ljmp
push
cmc
or
scas
add
popf
xchg
adc
xor
dec
adc
add
add
pusha
in
mov
repnz
cmp
ja
mov
aas
enter
leave
loope
jmp
outsl
enter
jp
lds
imul
stc
jp
icebp
bound
xlat
clc
cmpsb
xor
sbb
out
daa
mov
jb
scas
jns
push
subl
pop
pop
rorl
mov
mov
xlat
out
lret
hlt
jp
ret
out
mov
cmc
cmp
ljmp
repz
jmp
pop
sub
mov
insl
dec
xor
nop
stos
js
enter
push
add
xchg
push
inc
mov
sbb
rep
dec
xchg
mov
ret
push
mov
out
mov
adc
sub
pop
insb
adc
cmp
pop
addr16
fwait
jo
adc
imul
add
cli
addr16
loope
lea
add
sub
and
pop
in
loopne
mov
push
fprem
in
inc
int3
xchg
loopne
movsb
nop
inc
push
jns
mov
xor
pop
addr16
mov
dec
mov
adc
add
sub
movsb
jl
mov
pop
sub
outsl
lahf
rorl
stos
icebp
pop
and
and
leave
or
xchg
dec
inc
cltd
addr16
cs
andl
imul
jmp
mov
data16
cmp
cld
imul
adc
jecxz
jns
mov
xchg
mov
cltd
jns
ds
pop
cmpsb
pop
jecxz,pn
nop
jnp
mov
mov
cmp
cs
or
mov
inc
popf
pusha
pop
mov
cmp
ret
jp
mov
retw
sub
xor
les
in
pushf
mov
cld
div
das
fdivrp
and
fbld
pushf
sti
insb
ret
scas
pop
sub
out
into
xor
inc
push
rcrl
adc
repnz
push
xor
out
mov
xchg
popa
pop
das
mov
xchg
add
or
add
jne
rcr
mov
adc
push
cmp
sbb
shlb
loop
push
and
mov
in
mov
hlt
mov
imul
cwtl
add
and
jmp
fmull
arpl
pop
push
cmpl
sarl
scas
jl
pop
das
push
pop
mov
adc
movb
out
jl
bound
mov
add
pop
loope
sub
mov
jge
movsl
jne
xchg
popa
das
in
leave
adc
insb
add
xchg
fsts
sbb
loopne
xlat
out
mov
inc
dec
aas
cmpsb
sub
xchg
adc
mov
outsb
mov
adc
inc
test
sub
repz
or
mov
add
xchg
sub
cmpsb
jne
lds
lahf
push
rolb
adc
xchg
jne
xor
cmp
xchg
push
inc
outsl
mov
dec
pusha
int
movsl
bound
mov
lret
and
jecxz
lret
out
insb
dec
arpl
xchg
scas
call
mov
bnd
sarb
lcall
mov
movsb
pop
test
cli
imul
sar
mov
in
cltd
pop
jnp
push
scas
adc
push
insl
mov
lods
sbb
jecxz
mov
push
xorl
add
add
add
add
lock
inc
lahf
notb
out
test
xor
cld
dec
js
pop
sarb
roll
mov
mov
pusha
xchg
iret
dec
and
xor
dec
pop
sub
pop
in
jb
mov
or
push
sbbl
rcl
mov
fmuls
xchg
jo
hlt
jecxz
sub
jnp
push
jno
sbb
cmc
or
out
mov
ds
jbe
aas
pop
adc
cmp
inc
lret
sbb
push
je
mov
add
or
add
mov
xchg
out
call
pop
fidivs
xchg
mov
ret
fwait
lahf
pusha
pextrw
mov
and
sub
xchg
pusha
int
in
or
or
inc
flds
and
clc
mov
lret
add
lods
movsl
imul
cmp
sbb
xor
jae
adc
mov
xchg
jle
int3
mov
or
test
fbstp
xorl
dec
xchg
pop
add
cmp
popa
insb
in
jo
pop
and
in
jmp
mov
fmull
std
mov
sar
sbb
lahf
icebp
les
push
cmpsl
jl
sbb
or
pop
gs
scas
mov
arpl
mov
jecxz
fbld
aaa
loope
sbb
icebp
fwait
mov
cmp
pusha
jecxz
adcl
sbbb
in
hlt
sbb
mov
nop
mov
mov
stos
mov
popf
jae
and
cld
dec
mov
movsl
dec
cs
push
push
add
test
sti
imul
cmpsb
sub
lock
adc
ret
cmpsb
fisttpll
mov
sarb
inc
dec
insl
mov
loope
cmp
xlat
mulb
mov
xor
xor
ret
loop
mov
inc
and
int
mov
mov
jno
gs
push
xchg
lret
idivb
shl
icebp
mov
pop
imulb
int
les
cs
rcll
and
idivl
jge
push
or
mov
sub
push
out
ss
add
fbld
mov
xor
cld
push
ficoms
idivb
dec
mov
fisubl
movl
cmp
clc
les
fsubl
shr
cli
mov
ret
sub
inc
lcall
xchg
mov
fildll
mov
sub
sbb
inc
cld
and
jg
cmpsb
enter
stos
cmpsl
lret
pop
dec
push
xchg
fs
xchg
jl
push
outsb
lods
jmp
push
jmp
inc
push
aas
mov
mov
push
aam
addl
jb
mov
idivl
push
pop
enter
xchg
imul
popa
or
sbb
lods
inc
gs
xor
or
and
and
ss
shll
stos
icebp
jp
sub
or
mov
xchg
xchg
loopne
lret
insl
rcrl
sbb
mov
loopne
sarb
pusha
fidivrl
jnp,pn
cmp
into
lods
lret
push
push
sub
mov
aas
jnp
lret
mov
and
in
lods
andl
mov
dec
test
sbb
add
jle
fstpt
sbb
and
cli
jo
add
out
dec
push
imul
pop
inc
iret
cltd
push
cmc
rorl
mov
shrb
or
jl
call
dec
fldt
out
xor
scas
jne
roll
inc
fwait
outsb
jno
stc
xor
lret
xchg
bnd
add
int
das
out
jl
xlat
and
pop
aas
add
ficompl
mov
in
sbb
and
mov
insb
add
imul
lds
jge
xchg
imul
int
sbb
mov
cmp
add
aam
adc
xchg
lea
cmpsl
out
sbb
lock
mov
push
jne
aaa
clc
xlat
lret
xor
movsl
sub
xchg
add
rcrb
pushf
mov
test
push
cld
inc
and
stos
adc
test
push
sbb
stos
sub
sbb
push
inc
repz
movb
sbb
push
icebp
loopne
mov
mov
mov
icebp
fildl
bound
outsb
daa
mov
add
mov
push
loop
mov
aam
js
and
sub
into
outsb
jnp
mov
jne
jg
repnz
fidivrl
mov
popa
dec
xchg
mov
lods
sbb
sar
mov
jae
fldcw
xchg
ficomps
sub
sbb
scas
mov
add
loopne
icebp
mov
adc
fimuls
insl
leave
int3
outsl
cmpsl
push
and
push
hlt
aas
mov
or
cmp
mov
stc
out
xor
sti
add
mov
clc
ljmp
es
fimuls
mov
stos
push
call
loope
cltd
lds
je
lods
and
mov
mov
sahf
mov
out
outsb
pop
dec
dec
cld
stos
sarl
stos
mov
shr
clc
test
mov
or
mov
xchg
jge
push
cs
hlt
ds
lods
inc
sbb
xchg
xor
scas
inc
aam
cmp
push
sti
hlt
dec
mov
and
add
mov
or
sbb
fwait
inc
aaa
scas
pushf
cli
xchg
rorl
jecxz
ret
test
xchg
std
pop
adc
jge
rcl
xchg
push
xor
mov
sahf
and
inc
sahf
dec
outsb
dec
or
jbe
pop
lret
lret
sub
fcmovbe
rclb
out
test
sub
or
mov
aaa
imul
sub
call
mov
out
adc
int3
leave
nop
sahf
and
scas
daa
icebp
mov
inc
aad
mov
mov
lahf
cmp
add
add
add
add
inc
hlt
add
or
mov
push
lock
jecxz
adc
loopne
sub
xor
pop
popf
sti
mov
lods
mov
mov
xchg
lods
xchg
or
out
pop
in
jb
lret
sahf
leave
addr16
push
and
stos
inc
cmp
daa
pop
std
fbld
jge
adc
xchg
inc
jne
push
bound
xor
test
vucomiss
lods
mulps
stc
fucom
mov
sub
mov
shlb
jae
mov
fdivrs
add
jg
inc
rcrb
in
sbb
mov
call
outsb
pusha
xchg
sbb
repz
sbb
or
repnz
pop
out
or
pop
and
pusha
movsl
or
pop
mov
sub
pop
pop
mov
xor
pop
subb
test
test
arpl
xchg
fmul
dec
and
pop
fdivp
cmp
scas
clc
in
test
sbb
gs
and
iret
mov
or
pop
insl
fadd
mov
mov
xor
pop
imul
add
sbb
in
mov
popa
cmpsl
lahf
dec
dec
fistps
fisttpl
out
pop
inc
nop
cmc
mov
push
jnp
xchg
in
stos
mov
aaa
fs
loope
push
out
inc
sbb
aaa
outsb
sbb
out
mov
sub
lea
stos
adc
jmp
and
add
jnp
adc
es
xchg
les
push
dec
or
push
lods
xchg
cld
sub
frstor
push
mov
lret
jnp
clc
test
adc
stc
in
fists
add
bound
lcall
lcall
and
sbb
push
enter
nop
lret
dec
dec
faddl
push
loopne
in
lcall
cmp
sbb
xor
inc
mov
shll
dec
mov
fistpl
call
inc
cmpl
sub
in
dec
jnp
pop
xchg
dec
loopne
pusha
pop
loop
jmp
shll
movsb
lds
ljmp
loope
mov
lahf
mov
dec
ss
pop
add
mov
add
mov
dec
hlt
loope
sbb
lcall
and
movsb
mov
adc
adc
cmc
aad
or
nop
pop
sbb
xlat
test
ja
sahf
ja
pop
clc
push
mov
bnd
xor
adc
pop
adc
adc
clc
sub
loop
mov
sub
lods
pop
push
sub
push
sub
mov
lock
xchg
sub
mov
mov
repz
xor
in
mov
ljmp
jae
adc
outsl
pop
add
jle
pop
aas
outsb
and
mov
leave
jmp
loopne
xchg
sbb
dec
add
cmpsl
xchg
movsb
outsl
and
enter
lret
jle
sub
cmc
sahf
stos
stos
out
mov
mov
enter
sbb
fdivp
arpl
cmp
leave
mov
insb
mov
jl
jne
xchg
lret
xchg
jnp
lods
xor
push
or
inc
mov
stos
imul
je
cmpsl
jnp
mov
out
mov
or
lret
popa
mov
dec
sarb
cmpsl
inc
sti
mov
mov
lret
and
rolb
add
adc
into
lds
repnz
cld
icebp
enter
xor
add
pop
push
and
dec
pop
jnp
or
lret
mov
fnstcw
sbb
cmc
inc
jo
xchg
mov
lahf
inc
xchg
leave
lea
outsb
scas
pop
add
lret
scas
dec
test
jmp
cmp
das
jno
lods
jno
cmp
out
int3
mov
fwait
push
inc
nop
jg
loopne
or
mov
adc
ljmp
xor
fwait
add
pushf
mov
sub
bound
adc
and
loop
cmpsl
xchg
jbe
push
dec
and
ret
mov
movsb
xor
pushf
popa
mov
or
and
cmp
xchg
mov
jmp
xchg
out
icebp
shll
aam
sbb
push
adc
and
call
push
dec
or
xorb
dec
pop
push
push
aas
mov
add
add
add
add
pushl
loop
pop
add
inc
std
int3
lock
inc
pop
ss
inc
ret
pop
xchg
mov
inc
push
dec
inc
inc
jne
pusha
insl
ret
test
inc
cwtl
jbe
inc
push
or
jne
or
sub
sub
mov
das
ds
std
fsubr
mov
cmp
xor
jp
in
sub
data16
push
test
pop
inc
stc
xchg
push
mov
xor
ret
xchg
loope
and
cmp
xchg
pop
adc
clc
retw
dec
or
xchg
add
test
add
mov
fsubr
in
push
add
mov
jmp
jne
stos
inc
xlat
nop
cmp
pop
add
pusha
cmp
dec
jns
mov
or
mov
ja
xchg
jnp
imul
or
push
dec
cwtl
pop
outsl
imull
sub
cmc
fistps
xor
push
jge
mov
rolb
adc
and
rol
pop
std
test
sbb
cmp
repz
and
inc
jecxz
lahf
push
test
mov
add
lds
pop
push
mov
ljmp
in
sbb
xor
mov
pop
mov
add
adc
sub
jbe
cmp
sub
push
mov
testl
pop
outsb
mov
movsl
jecxz
add
aam
mov
xchg
call
je
jl
xchg
fstp
rcrl
jns
movsb
mov
filds
je
dec
test
push
cld
sbb
leave
int
mov
fcmovnb
or
dec
arpl
add
enter
in
gs
lock
cltd
push
cmp
jbe
jae
iret
cmc
fisttps
fdivl
in
lret
dec
jmp
mov
inc
icebp
orl
dec
imul
pop
lret
push
or
or
mov
aad
pop
xor
std
xchg
or
sbb
popa
aas
mov
inc
mov
stos
jmp
cwtl
sub
div
lods
movsl
mov
sahf
outsl
imul
cwtl
loop
adc
daa
scas
dec
xor
aad
imul
cmpsl
idiv
push
pop
call
mov
cmp
mov
pop
mov
nop
stos
clc
jmp
ret
mov
mov
mov
sub
cwtl
and
aaa
out
xlat
jecxz
in
sti
mov
jg
sub
movb
jns
and
mov
sbb
push
test
fcompl
fiadds
fwait
daa
sarl
insl
xchg
popa
fs
cmp
insb
addr16
out
xchg
sub
and
imul
sub
lahf
mov
lods
mov
ss
xor
mov
dec
cmp
repz
jle
add
scas
dec
test
lods
add
cmp
scas
push
inc
hlt
int
into
pop
xchg
in
sub
xchg
and
outsb
mov
shr
lock
das
aad
pcmpgtw
out
stos
push
and
inc
xchg
out
add
dec
aaa
mov
sub
lock
out
notb
cmp
push
jecxz
xor
movsl
mov
mov
scas
adcl
bnd
orl
sub
or
and
and
test
data16
add
xchg
enter
mov
xlat
sbbl
int3
push
jno
and
rorl
pop
sbb
ffreep
sbb
sbb
xchg
les
loopne
movsl
inc
xchg
cmpsl
and
mov
jno
xchg
sarl
pop
shrl
and
jmp
into
pop
adcl
or
call
out
push
jle
adc
sub
shlb
xchg
cli
cmp
pop
xchg
testl
aas
inc
int
lods
fwait
sbb
mov
add
add
add
outsb
idivb
daa
idiv
insl
add
xchg
mov
into
inc
mov
sub
xchg
test
pop
in
lock
pop
in
dec
ja
pusha
icebp
add
jae
out
jae
ret
les
dec
push
xchg
mov
ss
mov
lds
pop
xor
into
push
add
test
imulb
pop
sbb
xchg
pop
sbb
jnp
jbe
notb
cmp
and
incl
testl
jl
sub
add
aas
push
fimuls
jecxz
xchg
dec
inc
jno
lret
add
data16
add
jno
dec
out
sub
or
test
add
cmp
out
xor
mov
js
test
xor
pop
dec
xchg
cli
shlb
sbb
mov
dec
push
in
dec
rorl
sbb
jg
jp
outsl
std
mov
rolb
cld
test
test
and
push
or
sbb
stos
pop
dec
mov
xor
dec
adc
mov
mov
out
fstps
jp
repz
mov
aad
adc
dec
adc
add
jne
cmp
cmp
mov
sbb
mov
lcall
and
iret
imul
or
and
andl
stos
enter
pushl
adc
test
push
iret
pushf
aas
push
dec
jl
jo
jns
sub
imul
xor
repz
jo
cld
addb
cmp
dec
add
cmp
jle
and
push
mov
rclb
cmc
das
adc
int
out
lods
bound
int3
scas
and
and
sbb
pop
cld
lret
add
shlb
mov
add
pop
push
sahf
test
pop
and
je
mov
lret
adc
jg
repnz
out
test
push
push
lods
and
xor
dec
mov
cmpsl
ss
aas
sbb
xor
shll
aaa
pop
cmpsl
lret
jnp
data16
xor
lds
lods
enter
outsl
scas
xor
lock
sub
fnstsw
les
sti
pusha
cld
push
ljmp
cmp
add
sub
inc
push
cltd
js
pop
or
test
cmp
ds
mov
mov
iret
pop
adc
loop
popf
push
push
fisttpl
out
mov
popa
mov
pop
fnsave
cli
and
push
rcll
shll
cmp
in
jg
xor
sbb
mov
call
mull
add
or
and
mov
fcoml
mov
gs
incl
add
je
mov
in
mov
test
jge
lahf
mov
fbstp
es
jno
out
icebp
and
sbb
pop
fcoml
pop
or
mov
xlat
xor
dec
hlt
xchg
rcrl
push
or
out
rcl
add
xchg
dec
xchg
fcoms
jmp
xchg
pop
loopne
inc
xor
in
xlat
push
mov
fsubl
sub
adcl
push
and
jbe
addr16
out
pop
xchg
pop
loope
or
fsts
jecxz
inc
outsb
incl
add
inc
sbb
jle
test
les
out
push
jnp
ss
mov
insl
outsb
adc
fimuls
in
cmp
sub
xchg
dec
movsl
sbb
in
mov
bound
inc
pop
out
adc
test
aaa
jb
subl
sahf
fstpl
ja
fldl
orl
popf
add
mov
in
xchg
push
js
pusha
mov
push
negb
sbb
std
jp
les
mov
push
lds
cmp
stos
dec
add
out
sarb
add
pop
clc
mov
es
repz
pop
scas
xor
sub
push
into
adc
xor
rolb
xchg
add
pop
bnd
adc
cltd
jg
in
push
in
fdivs
mov
test
mov
push
sub
mov
cld
pop
mov
sbb
add
or
xchg
nop
data16
cmp
ss
fisubrl
xchg
movsl
mov
aas
ret
stc
mov
cmc
subb
push
jno
push
jle
cld
in
int3
xchg
rorl
add
adc
ss
jb
sub
xchg
jne
fucomp
sub
sbb
jge
jmp
or
ret
jno
push
aaa
jge
ljmp
out
mov
int
mov
push
mov
lds
jecxz
movsb
sub
sbb
cwtl
mov
or
repnz
sbb
nop
pop
leave
xor
mov
shrb
pop
fists
aam
gs
in
test
cltd
jmp
out
and
movsl
pop
fisubrl
xor
add
jne
cmc
ficoms
aad
in
loop
dec
lcall
jne
add
out
xchg
fdivp
cmc
xor
subl
mov
push
fimuls
cmpb
shlb
adc
outsl
gs
pop
dec
and
je
addl
mov
xchg
mov
incl
cmp
mov
mov
lret
cwtl
xchg
mov
scas
adc
in
inc
gs
push
push
lods
xchg
pop
xor
fs
inc
cmc
jle
dec
or
xor
add
xlat
cmp
add
in
stc
xchg
mov
xchg
cmp
lods
cmp
fs
pop
mov
lods
mov
aad
rorl
mov
adc
or
cmp
add
pop
insl
sahf
js
out
lret
xchg
adc
and
jns
test
ret
cmc
cmp
icebp
out
cmp
js
movsb
std
jb
jae
adc
call
adc
mov
ljmp
xchg
idivb
js
sbb
push
mov
add
add
add
test
lret
mov
cmpsb
push
negl
cmpsb
mov
loopne
sub
pop
push
pop
jge
mov
cmc
xchg
loop
inc
xor
mov
clc
nop
sbbb
sub
sub
sub
jmp
mov
stos
les
std
fists
pop
adc
inc
push
iret
mov
jne
insl
cmp
fldenv
in
or
outsl
iret
adc
mov
outsl
stc
mov
sub
jle
lcall
mov
iret
adc
lcall
add
add
add
ss
jecxz
popf
in
jne
popf
sub
outsb
jno
or
pushf
repz
shld
and
aad
sbb
fisubrs
bound
and
xchg
in
inc
push
adc
cmc
aad
outsl
xor
mov
stc
adc
jge
xor
dec
fsub
xchg
sbb
mov
lret
int3
jge
or
mov
jns
push
cmp
orl
rcll
daa
cmc
jge
popf
jo
inc
das
xchg
nop
xchg
cmpsl
daa
dec
sub
sub
sbb
lods
or
add
movl
add
add
add
pop
xor
insb
ffreep
or
int
int
dec
inc
lds
dec
fxch
sub
cmp
push
and
cmpsb
dec
dec
ret
test
into
adc
sti
dec
mov
aam
adc
pop
add
dec
mov
das
data16
std
push
xchg
ljmp
adc
or
dec
fsubrl
mov
inc
inc
sbb
push
scas
enter
pop
push
xlat
icebp
int
stos
dec
clc
mov
imul
add
jp
sub
mov
test
lahf
add
cmpsl
ljmp
dec
mov
lods
pop
subl
insl
mov
sbb
imul
pop
cmc
arpl
scas
push
or
sub
push
jmp
mov
popa
push
test
pop
fistpll
cmp
mov
push
imul
sub
arpl
bound
je
mov
fnstcw
cltd
stos
sub
outsb
andb
outsl
imul
in
jnp
lock
lret
push
push
mov
pop
dec
lret
add
bound
mov
mov
popf
xchg
sbb
push
in
out
inc
imul
fs
sahf
mov
and
adc
mov
jb
adc
icebp
and
mov
jp
test
or
sub
les
outsl
push
push
jnp
frstor
add
in
and
mov
icebp
or
xchg
int
or
movsb
fcmovu
inc
xor
in
and
shll
adc
cmp
rol
lods
out
stos
cmp
popf
shl
sbb
sbb
sub
popf
cld
pop
sbb
push
rol
jge
mov
sub
lcall
add
add
mov
or
sub
je
ficompl
insb
mov
xchg
push
repnz
xchg
jge
adc
loope
mov
push
enter
sbb
js
test
stc
jl
lret
aas
dec
mov
test
das
aam
cs
jbe
test
adc
jb
aas
repnz
leave
sub
pushf
divl
lods
xchg
fisttps
push
jne
rolb
lods
inc
mov
sbb
rcr
mov
adc
fstpl
pop
enter
cmp
mov
add
push
fisubl
push
mov
dec
mov
out
inc
cli
cld
out
xchg
out
cs
fcoml
mov
and
adc
jno
jo
inc
pushf
dec
pop
js
push
mov
inc
std
xor
addl
xchg
insb
gs
add
cmp
dec
mov
mov
jl
enter
data16
and
dec
fucom
test
xor
jg
and
mov
inc
pop
cmp
jp
dec
cltd
icebp
std
sbb
cmpsl
adc
add
insl
cmpsb
ret
insb
pop
mov
lods
subl
int
bound
aam
int
fisttpl
xchg
jns
imul
push
adc
mov
lret
mov
out
dec
and
dec
data16
sahf
imul
xchg
in
inc
stos
cli
sbb
or
mov
mov
sbb
bound
and
sbb
ficoms
mov
jge
cli
adc
loop
lods
jne
pusha
into
loopne
test
ss
xchg
adc
sti
xchg
jo
push
xchg
movsb
adc
adc
add
add
add
add
ja
js
or
sbb
and
rorb
mov
lret
xchg
adc
jge
std
pop
in
cmpsb
or
add
loopne
test
xchg
sub
out
push
mov
lcall
push
sub
xchg
jmp
pop
or
ss
or
adc
cmc
jbe
nop
in
xchg
ret
enter
fucomip
scas
popf
fistl
shr
dec
cmp
outsb
pop
int
insb
inc
dec
add
add
dec
int
or
notl
adc
add
cmpb
push
lret
mov
clc
mov
je
cmp
mov
add
mov
cmp
js
bnd
lock
xor
scas
xchg
ss
clc
js
xchg
rcr
pop
in
cli
icebp
adc
mov
enter
sarb
pop
cwtl
jb
lea
fidivs
adc
es
pop
and
bound
mov
dec
adc
pop
ja
jle
inc
and
in
les
scas
adc
andb
jmp
adc
add
bound
imul
cmc
adc
jnp
pop
pop
adc
add
push
fdivrp
lock
push
mov
inc
cmp
xor
push
mov
inc
xor
ds
sbb
inc
ja
aas
dec
and
mov
dec
push
movsb
mov
cmp
mov
jecxz
add
jecxz
orl
pop
or
and
test
pop
cmpl
cli
andb
adc
xor
jecxz
ret
fisubrl
add
add
add
add
insl
dec
stos
pop
xor
mov
test
sbb
sub
sahf
icebp
xchg
sbb
sub
xor
jl
imul
movb
popf
test
push
sbb
lcall
fimuls
mov
popf
dec
and
add
cmp
rcll
inc
sbb
adc
lods
cmpsl
mov
cmp
push
nop
inc
xorl
repnz
pop
in
mov
rclb
adcb
push
or
dec
stos
mov
repz
imul
and
cmp
jle
sbb
add
insb
add
and
inc
in
cltd
dec
in
inc
jmp
jo
pop
mov
insl
icebp
xchg
jbe
sub
sbb
mov
xchg
loope
cmc
nop
loopne
pop
dec
ret
mov
or
xchg
mov
cmp
lds
push
inc
push
rclb
das
inc
outsl
popf
add
shrb
in
mov
test
out
xor
iret
push
mov
push
pop
xor
in
ja
xor
sbbb
cmc
ret
dec
xchg
xchg
leave
aas
xor
push
add
jnp
jb
mov
insb
mov
mov
dec
cmp
cmp
pop
cmp
mov
adc
xchg
arpl
nopl
cmp
enter
and
xor
add
stos
pop
mov
mov
outsl
sbb
xor
cmp
outsl
test
jp
push
add
les
cmp
and
mov
push
xor
jmp
xchg
cmp
push
or
adc
push
xchg
outsb
add
cli
cld
fcmovne
pushf
movsb
jmp
out
add
js
mov
mov
cs
cmp
scas
dec
aaa
outsb
lods
dec
cmp
test
jne
mov
xchg
sbb
add
loope
inc
es
mov
mov
inc
inc
clc
and
jmp
pusha
test
fbld
je
inc
dec
jp
dec
fnsetpm(287
ja
push
sub
sahf
mov
das
ljmp
mov
nop
sahf
push
in
je
jb
mov
push
aam
inc
mov
cmpsl
inc
inc
nop
cmp
stos
mov
cmp
hlt
push
jb
add
roll
cmpsb
or
sbb
mov
and
iret
insb
lret
and
mov
jg
popf
mov
dec
arpl
pop
push
jle
cmp
insl
jmp
je
pop
sahf
push
cmpsl
int
test
dec
cmp
shll
std
frstor
xchg
pop
lods
inc
dec
cli
popa
dec
std
lods
mov
cmpsl
stos
cmp
dec
dec
mov
pop
and
cmc
fisubrs
adc
divb
cmpsl
and
dec
jo
icebp
mov
adc
sarb
add
out
xchg
sub
add
cmp
inc
or
frstor
push
lds
pop
push
dec
in
jnp
cmp
jmp
ret
mov
xor
aas
in
sbbb
test
lea
sbbl
out
sarl
hlt
push
add
jl
fists
sub
push
and
mov
cwtl
sti
call
test
and
cmp
mov
aaa
sub
xor
clc
lret
fsubl
add
add
add
add
pmaddwd
mov
pop
push
mov
inc
jbe
mov
stos
lret
in
aad
shlb
or
xchg
das
push
imul
or
inc
sbb
push
add
inc
sti
rorb
jno
xor
xchg
sbb
jl
or
mov
int
dec
das
hlt
mov
dec
fmull
lret
push
popf
dec
insl
stc
sbb
mulb
rorl
orb
add
or
into
leave
int3
or
insl
push
int
lods
ss
add
out
test
sbb
fidivrl
pop
aaa
fs
push
cmp
dec
add
in
imul
test
in
mov
out
in
int
rclb
in
mov
push
jp
mov
js
popf
jns
or
sbb
subb
xor
mov
mov
dec
mov
push
les
pop
scas
or
cmp
inc
xor
fs
insl
mov
lret
ds
gs
add
or
xlat
sub
sub
dec
fsubrs
add
adc
dec
dec
popf
xchg
adc
cmp
and
pop
js
dec
inc
cwtl
fsubl
push
add
xchg
mov
cli
inc
mov
out
xchg
ds
jb
sub
fwait
xchg
jmp
inc
outsb
leave
cmp
dec
cltd
cli
jnp
loopne
sti
push
and
cmp
je
inc
dec
push
out
pop
cmp
das
push
and
add
call
inc
xchg
lcall
add
jns
jecxz
mov
dec
mov
add
jb
dec
or
dec
pop
ds
bnd
and
lods
bound
outsb
icebp
and
push
shl
sub
lcall
xchg
cmp
mov
add
xorb
ljmp
stos
loope
add
sti
rcrb
or
sarl
out
je
cli
fs
pop
or
push
dec
or
and
or
push
pop
pop
xor
out
xor
sbb
jmp
std
dec
add
xor
add
jae
xor
sbb
mov
mov
sub
fnsave
incl
xchg
dec
aas
xor
das
mov
repz
add
sti
sti
jo
sti
mov
inc
in
cmp
mov
inc
test
cld
shrl
in
loope
dec
mov
mov
fwait
push
jecxz
pushf
loopne
mov
lea
imul
stos
popf
lea
mov
sbb
fcomps
cwtl
lret
fcomps
dec
cmpsl
sbb
out
xchg
ffree
pop
dec
in
or
push
add
cmp
add
xchg
mov
rolb
mov
cmp
push
adc
pop
sbb
pushw
fbstp
imul
adc
jmp
mov
cmpl
and
sahf
or
pop
leave
into
add
xchg
sbb
xor
outsb
iret
jmp
lods
out
xor
sbb
rolb
jp
adc
sub
mov
sub
andb
sub
pop
mov
sar
push
out
out
sbb
push
push
mov
jo
outsb
cmovne
lret
dec
push
push
lret
sub
loopne
inc
popf
insb
adc
pop
movsb
xlat
jbe
xor
xchg
or
cltd
dec
insb
insl
addr16
sub
xchg
adc
fildll
or
leave
and
fbld
pop
mov
or
imulb
xor
repnz
add
testb
rolb
int3
pop
push
nop
shrb
cmpsl
xchg
pusha
sub
push
daa
sbbb
lods
pop
movl
add
add
add
dec
outsb
sahf
pop
xor
dec
sbb
cld
xchg
and
push
shrl
or
mov
lcall
addl
pop
clc
or
mov
dec
dec
movsb
mov
mov
dec
nop
pop
push
pop
js
adcb
cmp
pop
xchg
push
ffreep
xor
fstl
jne
cmp
dec
aaa
mov
mov
or
dec
ljmp
fisttps
pushf
mov
aad
popf
mov
sahf
mov
enter
fwait
or
add
add
add
add
clc
jnp
nop
stc
std
repz
cmp
cmp
bound
int3
dec
adc
jge
xor
sbb
mov
lods
lret
sub
sahf
sti
mov
rcll
rolb
push
mov
push
lea
movsl
filds
dec
es
iret
fs
mov
cwtl
push
lea
or
sbb
jle
hlt
mov
and
xor
mov
jl
in
call
inc
dec
mov
xor
add
add
nop
push
jae
movsb
movsl
sbb
ds
rcrb
sbb
xchg
xlat
int3
mov
mov
mov
or
repz
imul
fisubrs
jmp
xlat
inc
fisubrl
test
shlb
cltd
mov
dec
sub
mov
xor
enter
mov
adc
hlt
xor
aad
ffreep
cmpl
dec
lret
fwait
dec
test
pop
fwait
mov
and
cmpsb
push
mov
mov
aaa
imul
arpl
ret
mov
rcrl
bound
add
xchg
lods
fnsave
mov
push
cmp
or
inc
mov
mov
sbb
stos
cmpl
repz
scas
and
test
jp
bound
add
lret
leave
adc
js
pop
out
testb
outsl
pusha
inc
imull
push
xchg
push
in
sarl
test
test
jo
fildll
nop
jbe
jne
lahf
push
inc
ds
xor
jge
aaa
lods
jg
and
add
pop
out
add
xchg
in
hlt
xchg
ret
repz
jae
xchg
outsl
jp
repnz
xor
push
loop
mov
inc
shll
fiadds
je
movb
and
mov
notb
das
xchg
stc
push
pop
in
cwtl
rcrl
pop
test
push
rorb
into
add
sub
fildl
mov
mov
sbb
cld
ret
outsb
push
lods
mov
imul
js
xchg
inc
mov
add
mov
clc
insl
pop
rorl
pop
aaa
aaa
and
call
dec
mov
jb
mov
jae
int
stos
cmpsl
jmp
cwtl
fidivl
insb
add
data16
pop
pop
dec
out
aam
insb
mov
pop
sub
inc
int
js
pop
sbb
in
pop
stos
insl
jge
xchg
sub
mov
mov
ja
das
mov
into
adc
ljmp
cmp
out
rcl
cmpb
adc
sbb
out
jnp
jecxz
xor
adc
mov
sbb
loop
call
sbb
stos
lods
subl
xchg
pop
orl
cmp
adc
hlt
cmp
push
bound
out
std
cmpb
dec
pop
mov
stos
das
or
push
int
mov
mov
cmp
cmpsl
ror
movsb
fisttpl
loop
insb
add
jmp
sub
sub
inc
out
shrb
adc
pop
xchg
mov
jmp
into
push
or
lcall
loope
pop
fimull
or
sahf
jno
inc
add
cmc
sti
out
pop
fstps
mov
mov
leave
mov
pop
push
adc
inc
aas
out
lret
aad
pusha
shll
sub
fisubrs
or
pop
lods
mov
sbb
daa
adc
dec
mov
mov
popf
mov
dec
jns
inc
mov
xor
cmpb
lahf
dec
leave
push
out
mov
cmpsb
nop
mov
cmpsl
popf
push
fnstcw
jge
fldenv
cmp
aad
int
add
add
lcall
pop
out
lcall
es
and
pop
stos
lds
adc
mov
aaa
into
add
xlat
bound
fwait
ds
mov
inc
out
jo
and
mov
ficoml
fwait
scas
jbe
or
mov
xor
loopne
mov
test
mov
push
mov
sbb
insl
jl
and
mov
aad
or
mov
iret
jo
jbe
jo
jae
inc
mov
pushf
sahf
cmpsl
hlt
jae
cmp
mov
push
mov
insl
mov
add
add
add
shl
adc
push
inc
add
sub
imul
push
inc
inc
popf
and
lods
shl
adc
or
inc
shrb
jge
xchg
cltd
cmpl
cmp
mov
hlt
shll
shll
mov
mov
jo
adc
mov
sbbl
push
rcrb
adc
in
cmpsl
mov
js
cmp
out
ljmp
pop
xor
enter
add
pop
clc
out
fldl
cmp
mov
ds
push
je
push
std
sub
add
add
imul
ror
sbb
dec
js
in
loopne
dec
sbb
clc
mov
sbb
in
sbb
jmp
sbb
enter
cmp
inc
and
lods
in
and
add
fdiv
fdivr
data16
ficomps
lock
sub
bound
int
jecxz
push
add
mov
mov
add
add
add
mov
sub
aad
aaa
sbb
decl
fstpl
cmp
push
sahf
xchg
jbe
xlat
jnp
je
sti
shll
les
std
mov
fmul
outsb
mov
jecxz
inc
jne
inc
out
sbb
subl
jecxz
mov
add
mov
pop
adc
mov
xor
into
mov
out
jb
test
cmp
fs
int
inc
or
sbb
bound
pop
repz
js
imulb
push
mov
cmp
mov
add
xor
aad
xchg
inc
scas
xchg
stc
push
je
add
pop
hlt
pop
hlt
sbb
daa
jne
pushf
ss
popf
mov
leave
adc
dec
mov
sub
adc
push
int3
lods
pop
shrb
add
in
and
insb
lods
ss
divb
inc
cmpsl
adc
and
push
bound
loopne
and
lds
xchg
xchg
push
xor
add
ds
out
xchg
in
push
jne
nop
sti
inc
hlt
lret
in
mov
pop
pop
mov
or
call
add
icebp
or
dec
orl
sbb
inc
pusha
outsb
sub
cld
inc
add
mov
stos
loopne
test
dec
cs
js
lods
sub
out
js
out
mov
push
add
and
add
mov
lock
sbb
sub
hlt
push
mov
push
js
inc
or
out
les
bound
mov
int
fs
loope
in
jb
ljmp
pop
js
int3
cmp
add
aaa
test
adc
and
dec
push
xlat
icebp
mov
shlb
sti
and
stc
jnp
shl
cmp
insb
pop
push
repnz
sub
cmp
xchg
lock
cmp
cmp
push
test
testb
pop
iret
lahf
push
push
adc
das
mov
cmp
sbb
dec
into
pop
test
popf
fnstsw
mov
pop
clc
jecxz
ja
push
xchg
rcrb
push
cmp
dec
aas
jne
push
loop
dec
lods
lods
and
in
add
mov
dec
sub
fnstenv
xor
into
add
jno
out
mov
in
pushf
popf
mov
and
leave
cmp
call
pop
inc
movsl
scas
cmc
add
cltd
leave
add
push
rorb
pop
lahf
dec
repz
mov
enter
lret
xor
cmc
push
pop
sub
xchg
data16
out
fimuls
bound
sbb
mov
push
shll
jns
inc
movsb
data16
inc
jbe
repnz
push
adc
mov
add
add
add
sub
xchg
aaa
or
jge
sbb
lock
xor
ja
mov
subl
incb
jns
jl
scas
or
xchg
shll
sub
or
out
jae
sub
xchg
sub
movsl
pop
push
inc
das
fisubl
pop
cmp
mov
outsb
stos
pop
cld
mov
and
push
pushf
sub
xor
stos
sub
and
aaa
fwait
dec
inc
dec
pop
repnz
mull
lret
mov
push
jns
jle
mov
add
dec
sbb
dec
fidivrs
xor
xchg
push
lahf
push
and
sarl
test
adc
leave
lods
add
add
adc
out
add
les
and
xchg
or
mov
std
fldl
test
mov
in
daa
mov
cmp
imul
adc
fwait
mov
xor
and
mov
and
loope
arpl
jmp
sbb
lret
mov
add
push
aaa
cmp
dec
add
insl
add
mov
mov
je
dec
lods
ja
mov
lods
xor
nop
and
mov
sub
lods
imul
xchg
fucomi
add
jl
pop
leave
arpl
fisubrs
cwtl
rcrb
aad
jne
mov
lcall
xchg
cwtl
sub
in
pop
fdivl
mov
pmulhuw
shll
pop
imul
scas
ljmp
out
jg
popa
lahf
or
inc
loope
arpl
mov
rcll
rorl
add
fs
or
and
push
jp
xor
fisttps
dec
mov
leave
ds
les
push
jl
pop
dec
insl
inc
arpl
cld
dec
out
test
mov
push
pop
jecxz
and
movsl
push
es
jb
push
push
enter
adc
xor
cmp
decb
sub
hlt
out
xchg
or
out
push
sbb
push
jns
dec
andb
xchg
mov
sub
jae
mov
xor
repz
dec
jo
add
popf
aad
pop
pop
jecxz
mov
mov
adc
xchg
add
rolb
push
data16
xor
push
bound
and
jle
mov
push
mov
cmpb
pop
leave
das
cmpsl
in
mov
std
fisttpll
adc
loopne
jo
cmpb
adc
xor
jmp
lock
daa
lahf
loop
push
push
nop
leave
shll
jbe
sbb
fdivl
cwtl
sub
fistpl
das
arpl
add
push
adc
push
mov
and
mov
jle
or
adc
adc
inc
test
sarl
cmp
jnp
sbb
mov
das
xchg
mov
and
repz
push
jae
scas
scas
inc
sarl
fnsave
bnd
out
fsubr
sub
or
xchg
adc
hlt
push
movsl
dec
lcall
xchg
xchg
xchg
fldl
arpl
push
xchg
lret
or
into
testb
inc
nop
dec
push
mov
add
add
add
add
pop
in
in
pusha
sbb
fildll
imulb
ds
pop
push
mulb
mov
cmpsb
outsl
fcomps
addb
mov
mov
adc
mov
sbb
dec
lds
mov
xor
ja
fwait
mov
xchg
mov
setno
lret
adc
lret
in
mov
inc
ja
cwtl
addr16
and
lock
and
inc
and
jns
nop
cmc
mov
stc
cmp
add
rolb
cmpl
jmp
or
xchg
data16
stos
leave
pop
test
pop
mov
cmp
pushf
mov
pop
mov
hlt
fnstsw
fwait
dec
push
mov
scas
in
sbb
mov
inc
mov
mov
xor
andl
ljmp
addr16
dec
and
mov
cmc
negb
in
fimuls
clc
xlat
xchg
stc
fildl
adc
shrl
into
pop
fs
push
add
adcl
lods
sub
ja
icebp
mov
cmovbe
addl
lret
xchg
adc
stos
stc
jl
int3
adc
pushw
cwtl
inc
popa
in
dec
lahf
add
inc
xchg
add
sti
nop
push
lcall
in
inc
std
frstpm(287
sub
in
dec
push
pop
mov
movsb
mov
inc
inc
dec
cltd
into
inc
shll
push
xor
mov
sub
mov
shlb
adc
ja
sti
orl
push
aaa
loop
movl
add
add
add
mov
xchg
jno
sub
icebp
sbb
pop
cwtl
dec
repnz
cmpb
out
imul
inc
xor
mov
sub
lods
and
stos
push
popf
cmp
sub
jmp
rcll
stos
inc
or
pop
sub
xchg
addr16
xlat
mov
out
rclb
fcoml
and
dec
cmp
pop
fwait
dec
xchg
jae
cmpsl
insb
adc
lock
pop
lock
xchg
mov
dec
cld
in
inc
inc
adc
pop
dec
add
push
sbb
jl
sub
add
add
add
fs
inc
out
jmp
mov
mov
test
dec
cld
out
lret
ret
inc
lock
sbb
lahf
ja
sbb
out
out
out
jne
cmp
push
lret
imul
cmp
ljmp
xor
xor
out
sbb
dec
in
xchg
adc
pop
sbbl
repz
cld
js
mov
inc
cmp
sbb
cmpsb
xchg
std
clc
inc
xchg
mov
mov
std
clc
popf
shlb
adc
test
inc
mov
add
repz
pushf
push
aad
rcr
mov
lcall
mov
jge
jne
mov
fprem1
sarl
jne
fdecstp
inc
xchg
js
push
test
lret
ret
fwait
ljmp
mov
gs
out
mov
insb
test
inc
adc
add
call
mov
mov
cmp
mov
sub
fdivl
cmp
movsl
xchg
dec
ds
iret
jne
mov
adc
mov
jnp
and
les
jmp
sub
dec
pop
pop
pop
add
jle
jne
pop
scas
dec
mov
dec
stc
ljmp
scas
dec
call
cmp
vcmpps
js
mov
data16
push
insl
shll
jecxz
int3
inc
push
jne
pop
push
pop
xor
sub
fdivr
sbb
incl
dec
sub
inc
xchg
jecxz
ret
repz
jmp
cwtl
lods
fisttpl
orl
aam
xchg
jmp
xor
cmc
call
out
push
es
jb
pop
loope
pop
andl
add
add
add
and
in
inc
lea
cs
add
scas
ret
mov
mov
mov
push
push
mov
push
ljmp
add
cmp
enter
cli
mov
bound
xchg
ja
hlt
jl
xor
in
enter
inc
js
ret
ljmp
ret
out
leave
sub
loope
xor
loopne
ficomps
pop
pushf
jg
fistl
aad
arpl
sar
jg
cmc
and
enter
xchg
push
sub
add
add
add
add
and
push
push
pop
or
xchg
add
xor
stos
xorl
cmpsl
repz
inc
pop
jp
aad
and
iret
repz
jo
fs
shl
adc
ret
mov
es
mov
push
ja
fwait
in
in
divb
int3
xor
outsl
mov
movsb
jge
loopne
add
mov
or
xchg
es
and
push
sub
or
iret
ret
xchg
rclb
sbb
mov
mov
les
add
add
add
iret
shlb
mov
and
ljmp
test
outsl
mov
and
jno
jo
pop
cmp
loopne
add
std
add
js
sbb
cmpsl
adc
xlat
bnd
mov
fcmovbe
xchg
sahf
loop
xchg
sahf
jb,pn
cmpsl
adc
cmpsl
sub
mov
jne
mov
xchg
adc
stos
cmp
es
aas
mov
dec
xchg
or
mov
dec
bound
dec
sub
out
push
subl
mov
stos
xor
mov
inc
iret
movsl
data16
pop
and
push
adc
add
rcrb
hlt
push
lock
mov
dec
cs
cmp
push
outsl
call
jg
pop
jnp
and
or
jmp
pop
dec
or
pop
pop
imul
cmc
out
sub
das
sbb
mov
sahf
inc
aad
pop
lcall
pop
push
imul
xchg
xchg
pop
pop
or
jle
jns
je
movl
cld
rclb
out
aam
cmpsb
jne
dec
xorl
mov
jnp
mov
ret
mov
cltd
jg
add
sub
inc
add
and
decb
push
mov
sbb
and
imul
cmp
cmc
jmp
popf
int3
mov
cwtl
js
sub
lea
xchg
adc
or
mov
out
push
lret
dec
mov
push
ficompl
pop
inc
or
add
mov
adcl
test
lea
add
in
lds
rclb
fadds
xorb
mov
aam
popa
pop
mov
pop
pop
call
add
dec
push
mov
roll
jge
jmp
xor
jns
mov
lea
mov
jle
inc
mov
pop
rorb
ja
xor
fs
fwait
add
test
out
adc
lcall
aam
or
jl
push
xor
push
inc
push
cs
scas
cmpsb
inc
mov
and
loopne
sbb
push
lods
fs
das
das
std
hlt
gs
pop
movl
jle
sbb
leave
jmp
jno
xchg
mov
ss
add
add
lods
movsl
and
pop
mov
mov
cmpb
stos
dec
cld
pusha
adc
stos
pusha
fiadds
pushf
idivb
ss
pop
sub
mov
dec
in
sbb
mov
add
cld
or
mov
push
loopne
mov
push
in
pusha
xchg
and
jo
mov
mov
dec
dec
mov
xchg
and
lret
ds
and
pop
stc
and
adc
jae
xor
pop
fidivrl
icebp
loopne
add
sub
das
push
sbb
xchg
or
int3
xorl
dec
jne
ret
les
inc
cwtl
fcoml
aas
addr16
shlb
or
mov
pop
popf
push
mov
je
loope
insl
out
mov
and
mov
mov
imul
mov
lods
jno
adc
fdivs
xchg
cli
shl
add
fstpt
xor
pop
push
add
scas
mov
andb
push
or
add
imul
xchg
lret
dec
and
ja
lahf
push
push
push
push
ret
mov
lods
daa
inc
sbb
loope
mov
add
push
clc
gs
and
rcrl
stc
pop
add
fdivrl
leave
movsb
sbb
jg
and
nop
hlt
movzwl
shlb
xchg
fcoms
repz
imul
dec
stos
movsl
int3
js
fiaddl
mov
leave
add
jb
or
push
adc
mov
xor
mov
cwtl
add
mov
xor
notl
test
hlt
fcomi
hlt
push
fisttpl
pop
sub
inc
add
pop
xchg
notb
into
jns
and
repnz
jge
out
cmpsl
lcall
fildll
lret
xchg
neg
mov
inc
xchg
fisubrl
sub
inc
repnz
mov
cs
push
es
mov
les
inc
mov
stos
sub
aas
mov
push
adc
dec
add
test
or
out
cmc
test
xchg
and
add
mov
aas
mov
int3
out
dec
xchg
sbb
in
push
out
xchg
shrl
jne
mov
bound
fwait
or
add
or
sub
fs
mov
pop
scas
lea
imul
xchg
lods
cld
cmp
cmp
test
or
mov
mov
jecxz
les
jo
movsl
xor
inc
rcll
xchg
js
cmp
adc
dec
shll
ja
lret
jle
addr16
int
mov
imul
add
int3
lret
xchg
int
sub
iret
inc
jecxz
fiaddl
adc
sbb
das
test
insb
sbb
inc
xchg
xor
mov
inc
arpl
lds
call
pop
inc
aas
push
cmpsl
xchg
mov
mov
orl
cmp
or
push
aad
mov
jnp
nop
xchg
ds
roll
in
lods
jbe
sbb
ret
das
andl
mov
jmp
push
push
call
iret
dec
in
sbb
test
jmp
mov
inc
stos
jns
adc
dec
incl
add
jbe
push
imul
pop
and
out
daa
inc
and
sub
xchg
cmc
movsb
pop
cmp
fs
jo
add
add
sar
mov
push
pushf
mov
mov
subb
icebp
aaa
inc
rolb
and
insl
vorps
mov
push
imul
dec
les
xorb
pop
mov
jns
push
sarb
arpl
fisttpll
lea
add
jo
and
movntps
push
and
cmpb
popf
imul
pop
in
out
mov
movb
orb
imul
jbe
push
out
cmp
inc
xchg
or
mov
pop
or
cli
xor
les
jecxz
xor
in
test
and
push
aam
xchg
inc
pop
push
ss
dec
mov
pop
mov
lods
add
dec
push
pop
cmp
xchg
jg
and
xlat
aad
add
push
jne
sub
iret
icebp
cmp
es
mov
mov
mov
outsb
pop
mov
cltd
pop
loopne
stc
add
push
add
or
lahf
mov
fcompl
xchg
decb
fcmovb
test
jg
adc
popf
mov
dec
jecxz
add
cld
addr16
mov
add
jle
pop
mov
pushf
push
ljmp
mov
call
xlat
jne
sti
addr16
cmp
mov
sbb
mov
push
ds
cld
pop
out
jge
sbb
sbb
jbe
pop
mov
ljmp
scas
iretw
stos
sub
adc
insb
mov
gs
xchg
fisttps
scas
jg
dec
or
jecxz
test
inc
fwait
jne
lret
push
inc
or
push
pop
mov
idivl
stc
and
or
mov
push
add
testb
or
or
add
and
pop
shlb
cs
sbb
hlt
jo
push
imul
add
jo
frstor
leave
and
outsl
pop
add
cmp
inc
loop
rol
pusha
add
push
popf
mov
fldl
ficoml
je
idivl
addb
shrl
fistps
subl
mov
testl
lret
cmp
cmpsb
or
jnp
push
dec
bnd
test
xchg
into
mov
dec
fcompl
pop
mov
int
push
xchg
inc
xor
fisttpll
test
out
inc
mov
add
jnp
xor
shll
sbb
push
push
jbe
xchg
adc
sub
bound
jns
sahf
push
ret
das
das
xchg
shlb
popf
dec
aas
mov
imul
add
test
into
ds
jns
or
cmp
dec
pop
jge
jo
mov
fstl
mov
ret
sbb
pop
mov
xor
rclb
into
push
jle
test
xchg
js
rcr
jne
repnz
les
dec
sub
cmpsb
aas
push
or
push
dec
cltd
mov
adc
mov
add
add
add
aam
inc
rolb
add
and
and
es
fisubrl
lds
pop
mov
dec
mov
lods
sub
push
pop
loop
loopne
add
mov
mov
test
push
bound
sbb
inc
iret
pop
jnp
cmp
mov
loop
and
mov
or
push
dec
sub
adc
mov
aas
insb
mov
repnz
sub
jmp
or
lods
stos
inc
add
or
mov
or
mov
into
dec
mov
out
out
xchg
pop
mov
call
mov
mov
fidivs
cmpsl
mov
or
mov
sbb
xchg
and
loopne
sahf
xor
and
in
jg
push
daa
mov
xchg
jae
mov
push
mov
jmp
ret
adcb
and
or
loop
dec
pop
add
movsl
dec
pop
call
dec
adc
lea
xchg
jle
mov
pop
add
adc
fisubs
pop
jle
mov
movsl
jbe
movsb
xor
es
imul
inc
popf
inc
icebp
cli
fistl
sbb
xor
shlb
js
pop
sub
push
push
fcmovb
aam
shrl
stc
jecxz
in
shll
push
jg
rolb
in
sub
sbb
or
push
sbb
adc
add
push
adc
out
xchg
mov
cs
addr16
hlt
inc
addl
jne
xchg
lock
dec
hlt
jmp
ja
add
dec
xor
int
jae
cltd
dec
bound
and
sub
std
lret
inc
push
out
xor
call
jnp
push
sahf
push
dec
or
or
cmp
xor
mov
jg
push
push
xchg
or
mov
dec
insb
dec
stos
bound
mulb
and
mov
dec
adc
faddl
test
cmp
dec
es
mov
cmp
push
jle
clc
sub
hlt
test
and
add
adc
mov
ss
popa
sbb
push
mov
pop
stc
leave
mov
or
dec
outsb
jbe
mov
inc
outsl
in
pop
shll
ljmp
nop
cwtl
int3
pusha
push
sbb
daa
sub
int3
mov
mov
jmp
xor
and
out
cld
mov
push
jmp
jbe
outsl
xorb
add
sub
scas
adc
push
movsl
popf
pop
xchg
jbe
inc
aam
shrb
adc
adc
mov
loopne
lahf
outsb
loopne
ljmp
insl
jne
dec
xchg
cmc
mov
inc
xor
das
mov
cmp
mov
sbb
or
cmp
sbb
and
push
bound
fnsave
imul
mov
idivl
ret
inc
lcall
clc
and
xchg
or
iret
lods
out
aaa
into
testb
int
in
into
imul
push
int
in
into
test
outsb
cmp
aaa
mov
dec
shlb
stos
push
fdivrs
sbb
imulb
ss
lea
into
sub
aaa
add
into
testb
mov
imulb
mov
adc
pusha
mov
mov
pusha
inc
xor
bound
jl
subb
lock
lcall
push
lods
xchg
jge
test
push
cmpsl
mov
std
into
cltd
dec
les
cmp
loope
dec
cmp
ds
push
pop
add
addr16
incb
inc
movsb
push
in
mov
int
repz
lods
inc
rcrl
rcrl
js
les
shlb
jecxz
sbb
mov
add
add
add
add
and
je
adcb
mov
cmp
add
inc
mov
stos
nop
dec
sti
test
jge
sbbb
sbb
sahf
fnstsw
loop
xor
aam
push
mov
jmp
or
lcall
cs
pop
mov
out
into
pop
dec
dec
xor
dec
std
mov
rcl
xorb
sub
add
enter
fst
add
enter
out
cmp
into
dec
jae
mov
mov
pop
fs
ja
add
add
mov
cmovo
inc
aas
mov
xor
sbb
xchg
push
mov
push
mov
out
test
mov
push
push
pop
mov
mov
and
adc
subb
cld
scas
mov
lahf
cmp
int
adc
mov
inc
scas
loopne
and
mov
xor
jb
mov
lods
arpl
lcall
add
cmp
cmc
shll
iret
sub
rcl
jmp
cmp
repz
scas
pop
jecxz
xor
add
jbe
movsb
or
adcl
jp
or
sub
pusha
mov
xchg
xorb
fldcw
jmp
cmpsl
hlt
mov
xchg
sahf
outsl
addb
cld
mov
jl
jb
mov
repz
cs
lret
aam
and
and
je
pop
dec
jno
and
push
cmpsl
imul
sub
fs
loop
mov
cmp
stos
push
pop
sbb
mov
lret
insb
push
dec
lods
inc
and
push
add
into
movsl
outsl
add
lock
add
into
jns
xorb
mov
inc
jmp
xchg
xor
cli
int3
insb
sbb
jne
dec
hlt
or
ret
cmp
mov
test
dec
mov
mul
add
outsb
fstl
pop
or
inc
lea
mov
dec
mov
cli
aam
push
jo
push
cmp
aas
pop
sbb
xor
test
in
mov
or
int
pop
fistpl
xor
loopne
scas
jmp
sahf
fmuls
movsl
mov
cmp
push
dec
adc
add
add
rcr
xor
rcrb
sbb
lahf
pinsrw
fadd
dec
gs
mov
ret
cmc
rcl
movsb
adc
push
mov
dec
push
sbb
cmp
and
pop
iret
and
jae
shll
or
and
push
xchg
mov
xchg
jmp
or
rorb
fsubrl
imulb
outsb
pop
cs
push
or
mov
in
jg
pop
ss
lods
bound
xchg
push
jno
in
ret
or
mov
add
pop
ss
sub
pushf
push
or
jno
or
out
sub
pop
push
inc
iret
hlt
cli
shrl
push
mov
lods
adc
fnstcw
into
in
js
in
sub
cltd
pop
outsl
cmp
pop
push
xchg
loope
xchg
out
lret
adc
out
notl
lret
pop
movsl
adc
sub
mov
arpl
pop
pusha
mov
fildl
sub
jbe
cli
mov
and
test
inc
inc
ret
rcrl
xor
sbbb
idivb
leave
add
mov
arpl
xor
cmp
mov
sahf
insl
or
movsl
mov
xor
lods
adc
rol
ficoms
push
in
push
sub
insl
mov
jg
lds
xchg
mov
xchg
dec
mov
lahf
adc
add
outsl
and
push
rorl
roll
cmp
adc
shrl
push
in
frstor
fldt
fs
mov
test
fadds
mov
int3
dec
mov
stc
sub
add
adc
in
push
cmpsl
xlat
clc
inc
mov
push
out
xor
cmp
je
mov
jae
xchg
cmpsb
jae
push
push
jbe,pn
jmp
xchg
stos
inc
sbb
dec
arpl
dec
and
icebp
into
in
into
insb
sub
pop
lock
bound
and
jmp
cmp
cmpsb
insb
lea
lods
imul
push
ret
rorl
sbb
es
and
and
call
mov
in
gs
scas
lret
jb
xchg
inc
dec
adc
mov
sbb
add
fwait
jmp
or
lods
cmp
rcrl
lods
mov
push
movsl
nop
xor
mov
lock
mov
add
pop
addr16
ret
outsb
das
ret
mov
adc
rorb
test
mov
les
ljmp
jne
jmp
mov
and
jo
leave
in
daa
das
jge
cmp
xchg
dec
sbb
pop
mov
mov
loope
push
aam
mov
xchg
movsb
push
pushf
aam
clc
mov
fistpll
push
mov
fstpl
add
out
dec
jl
loope
or
jecxz
mov
and
xchg
dec
fcompl
mov
or
dec
mov
int3
rol
negl
add
cmp
and
xchg
pop
daa
dec
inc
mov
aam
lods
and
xchg
leave
pop
data16
imul
mov
fcoms
jle
mov
cmp
loope
pop
sub
ret
inc
adc
jmp
adc
cli
adc
xor
and
pushf
addr16
pushf
aad
add
and
and
scas
pop
pushf
mul
mov
xlat
pop
xor
adc
jmp
add
popf
adc
int
xchg
cmp
mov
push
jno
inc
or
sub
jmp
insl
add
negb
out
pop
cmp
fistps
push
cltd
outsb
aaa
test
sahf
mov
pop
rcll
pop
cs
aas
dec
sahf
cmp
in
negl
out
push
adc
stos
imul
mov
fists
rcl
fsubr
lods
pop
inc
ret
enter
sub
cmp
dec
xorb
shll
stos
mov
add
testb
jle
call
and
xor
imul
ret
imul
adc
ret
inc
fistpll
push
sti
bndstx
inc
and
or
or
adc
clc
pop
adc
or
sbb
popa
aad
lahf
gs
mov
mov
movsl
push
iret
movsl
shll
push
and
adc
addr16
mov
lahf
ds
push
das
ja
push
sbb
dec
jp
fstps
or
add
inc
sahf
xchg
and
pop
adc
add
add
add
cmc
js
push
cld
mov
data16
das
in
imul
mov
shll
in
pop
nop
mov
sub
fmuls
xcrypt-cbc
cmpsl
push
xchg
jmp
add
repz
or
lea
out
cmp
pop
dec
movsl
push
inc
jae
adc
adc
pop
lock
in
in
mov
hlt
adc
add
xorb
cmp
and
sbb
notl
inc
dec
jnp
or
js
add
inc
push
jmp
and
sti
and
add
scas
pop
fdivrs
mov
dec
gs
mov
mov
or
idivb
xchg
xchg
scas
aaa
mov
mov
imul
cs
jp
fnstcw
lods
mov
dec
push
mov
stos
psubusb
mov
loopne
les
jno
push
mov
cmpsl
pop
bnd
cwtl
cs
xor
mov
lcall
jnp
int3
push
call
ds
ds
push
mov
imul
je
sti
mov
lret
rolb
push
data16
cli
inc
xchg
dec
in
orb
scas
jmp
js
mov
lret
out
mov
pop
push
in
dec
lret
pop
xor
mov
xor
xor
and
loop
mov
pop
cmp
bound
mov
je
sbb
sub
adc
pop
lods
dec
rcll
push
jo
aaa
insl
lret
jmp
fstps
fscale
cmp
aam
arpl
std
xchg
aas
fs
lcall
dec
jbe
inc
push
rcrl
lret
addr16
shll
cmp
rolb
xor
add
add
add
add
inc
addb
inc
or
enter
sarl
in
mulb
sub
enter
push
lods
test
addb
adc
daa
je
lods
inc
jb
jne
mov
lret
cmpsb
decb
pop
sub
shr
mov
int3
scas
push
push
aad
sub
xor
out
push
mov
in
dec
pop
pop
jnp
mov
loope
add
mov
cmpsl
shr
loop
sub
rclb
inc
push
sub
pop
out
cld
sahf
mov
cmp
dec
clc
sub
fs
xchg
add
mov
or
pop
stc
pusha
and
in
out
scas
mov
cmp
fcomps
jns
inc
dec
int3
into
mov
mov
jae
inc
rol
mov
jmp
xchg
inc
sbb
ret
adc
jg
movsb
adc
sbb
inc
fldt
orb
test
aaa
sub
lahf
pop
loopne
repnz
lahf
mov
cmc
mov
add
jmp
in
lods
and
js
and
imul
ret
inc
fistl
or
pop
sbbl
fisttps
test
nop
cmp
add
add
sbb
fs
rcll
dec
xor
jno
sub
push
push
inc
stc
jno
sub
aas
test
push
mov
pop
scas
pop
jne
xchg
and
inc
mov
xchg
push
mov
jg
lods
pop
jl
sbb
mov
inc
hlt
push
popa
int3
push
pop
or
mov
jno
fstps
inc
jl
adc
add
cmp
inc
pop
xor
cmp
jg
das
inc
addr16
sub
dec
ficoml
xor
xor
adc
sahf
mov
xor
outsb
mov
add
add
add
inc
dec
lods
mov
outsl
fsubs
ftst
push
push
addr16
mov
inc
and
pusha
adc
repnz
xor
xor
push
add
mov
push
sbb
inc
cmp
ret
imul
test
sahf
mov
inc
sbbl
bnd
xor
push
test
movsl
xor
and
and
lahf
dec
jb
out
dec
push
or
out
cmc
inc
sbb
cwtl
sbb
mov
add
nop
insb
pop
jl
std
iret
data16
xlat
or
movsl
aas
mov
dec
mov
outsl
into
dec
mov
jge
icebp
aas
int3
cmp
jnp
int3
out
sbb
add
repz
movb
add
orl
daa
stc
js
adc
inc
push
test
add
stos
movsl
cmp
inc
mov
rcr
and
dec
cld
inc
jnp
sbb
push
inc
pusha
sarb
dec
out
jge
or
inc
sub
push
add
cmp
frstor
mov
add
or
add
call
push
mov
addr16
hlt
dec
fldl
pop
add
std
outsb
popf
leavew
imul
dec
lret
movsl
out
ljmp
jecxz
pop
sahf
jb
enter
shrb
xchg
push
add
pop
popa
push
push
pop
sub
dec
movsl
dec
das
dec
dec
fimull
lret
dec
cmp
xchg
mov
mov
test
aam
xchg
dec
pop
jmp
lods
pop
jmp
popa
add
and
in
mov
scas
aaa
sar
pop
fsubs
inc
pop
out
add
pop
dec
stc
xor
ljmp
add
add
push
insl
in
negb
pop
idivb
push
mov
mov
xor
jle
bnd
repz
call
inc
test
jge
dec
xor
popa
jae
and
push
ret
fbld
jae
push
lds
lahf
xorl
test
dec
imul
enter
ss
mov
mov
dec
imul
pop
roll
cmp
enter
sahf
adc
test
in
sub
push
in
aam
loop
add
sbb
push
add
push
lret
inc
pop
fisubrs
dec
pushf
xor
cmp
loop
je
jno
sub
data16
cmp
push
imul
jne
adc
std
dec
jg
add
pop
push
fisttpl
cmp
inc
repz
sbb
dec
cmpsl
outsb
out
les
mov
add
or
sbb
popf
mov
jle
inc
test
daa
pop
stos
cli
or
rorl
add
sbb
les
inc
dec
xchg
arpl
and
push
mov
cmp
sbb
clc
icebp
jno
aam
push
fistpll
pop
pop
sub
cmp
roll
mov
jl
addr16
daa
jmp
sub
dec
sub
mov
fidivs
dec
je
or
in
ficoms
push
xchg
cld
aad
cmp
dec
gs
add
jbe
sbb
jnp
push
leave
sbb
push
movsl
jecxz
ficompl
pcmpgtw
dec
inc
add
jl
pusha
add
add
add
add
pop
sbb
inc
aaa
sub
and
sti
popa
ret
jle
fisubs
pop
bound
pop
out
outsb
shl
out
mov
pusha
mov
out
out
mov
adc
int
out
ss
test
pushf
push
lret
adc
dec
shll
repz
sub
pop
sub
push
or
repz
je
adc
repnz
stc
sbb
repnz
test
into
insb
push
ljmp
dec
and
aam
pushf
or
cs
sti
xor
leave
lcall
xchg
test
loopne
loopne
mov
sbb
icebp
into
mov
cmpsb
or
shr
push
ss
push
cmp
test
jle
cmp
stc
fwait
stos
jp
jno
and
test
es
jmp
insb
stos
xchg
sub
lcall
pop
push
cltd
jge
idivb
inc
sti
jne
loopne
shrl
imull
jo
dec
test
pop
push
sbb
cmp
int3
inc
loopne
add
in
lock
xor
das
lds
dec
pop
ljmp
pop
cld
cmp
add
push
popa
mov
cmp
loop
jg
cmpsb
xor
lods
jbe
mov
mov
and
dec
push
fsubs
push
aam
xor
cltd
mov
into
lods
mov
lods
and
pop
mov
xlat
push
adc
test
paddsw
add
lcall
hlt
idivl
push
imul
loope
fidivrl
jmp
leave
aam
or
xchg
gs
mov
data16
mov
add
xor
mov
data16
or
mov
inc
sbb
add
daa
pop
cwtl
out
adc
mov
xchg
iret
or
negl
xor
rorb
inc
cmpsb
psubsb
mov
pushf
mov
push
xchg
imul
jns
cmp
test
lret
ret
sub
aad
or
jne
int3
mov
imul
sub
test
push
pop
mov
aaa
push
sub
insl
repz
xor
mov
cwtl
nop
mov
add
or
aam
xchg
dec
sub
loop
call
lock
fs
add
cmp
adc
dec
push
loope
imul
xchg
int
ds
mov
ror
sarb
and
std
adc
and
rcll
call
jo
inc
in
testb
movsb
jns
aas
out
mov
pop
nop
jl
iret
pop
fisubrl
fsqrt
sub
xabort
jnp
popa
pushf
js
addb
mov
sar
int3
adc
xor
pop
add
js
mov
inc
inc
imul
mov
les
in
jns
insb
pusha
push
cmpsb
jg
test
fcoml
lret
mov
push
cmp
subl
ret
cmp
rorl
push
jecxz
inc
or
jl
jae,pt
adc
mov
xlat
pop
jnp
je
xchg
clc
mov
pop
mov
mov
push
inc
fisubl
out
nop
sar
xchg
aam
loop
cwtl
jecxz
addr16
mov
arpl
mov
popf
in
push
int3
std
out
mov
cltd
add
fistps
xchg
mov
imul
push
pop
inc
into
dec
int
xor
push
jg
insl
sub
aaa
fldt
in
cmp
out
leave
xlat
sahf
push
repz
test
out
mov
cmp
cmpsb
out
iret
test
jg
and
push
test
cs
sarb
ja
fildll
xlat
xchg
push
fldl2t
imul
mov
loopne
nop
sub
stos
jbe
jmp
fisubs
daa
push
stos
into
mov
or
mov
int
bound
add
mov
cmp
add
add
out
idivl
jmp
xchg
xchg
enter
xchg
cmpsl
sbb
lcall
ss
sahf
loop
repz
mov
in
jmp
lock
stos
jbe
jmp
add
dec
and
lods
pop
adc
dec
testb
xchg
cmc
jo
aaa
push
push
mov
in
xchg
inc
mov
or
ds
dec
aam
test
mov
hlt
cmp
add
sarl
orb
sbb
leave
adc
shlb
loop
ret
mov
scas
adc
lahf
jl
in
push
sub
pop
insb
sahf
sahf
pop
imulb
adc
sysret
xor
mov
in
cmp
pop
outsl
cmc
and
je
mov
clc
pop
repnz
enter
ror
enter
fs
aaa
mov
sub
add
into
mov
and
imul
stc
dec
push
pop
adc
adc
int3
data16
rcrl
arpl
lods
cmp
xchg
xchg
add
loope
dec
inc
lds
addb
iret
mov
fidivrs
adc
lods
ret
test
sbb
cld
std
rorl
cli
out
insb
es
adc
push
xchg
testl
fadd
insb
pop
push
mov
mov
xchg
jle
pop
lahf
lahf
mov
cmp
loope
sub
hlt
mov
repz
inc
das
in
cmp
jbe
rorl
inc
mov
dec
pop
dec
mov
test
push
repz
out
sbb
jne
fidivs
aas
mov
pop
add
add
mov
rorl
cmpsl
xchg
jbe
jecxz
outsl
scas
filds
dec
jae
or
push
pusha
and
ja
xchg
push
roll
and
lret
cltd
or
adc
iret
xor
mov
adc
in
mov
je
mov
jbe
jecxz
jo
sarb
xor
push
lcall
xor
add
mov
mov
pusha
fnop
inc
cltd
xlat
jp
adc
cltd
xor
pop
pop
xchg
xchg
jb
mov
push
fidivrs
es
push
mov
add
mov
push
es
pop
or
cwtl
sbb
xchg
mov
loope
add
add
or
mov
pop
out
repz
std
adc
mov
add
sub
ja
sbb
rorl
pop
mov
lock
popa
cmp
push
cltd
nop
fisubl
cmp
sbb
in
hlt
movhps
in
ljmp
aaa
jno
movsl
notl
es
scas
sbb
adc
jge
add
inc
xchg
inc
scas
fidivl
mov
mov
add
lods
in
push
imul
mov
pop
jne
pop
insb
sbb
push
aaa
fcmovnu
pushw
fucomi
imul
inc
xor
xor
xchg
mov
loop
mulb
repz
loope
je
mov
and
stc
imulb
cltd
movsl
inc
clc
sub
in
adc
out
les
pushf
adc
or
enter
sbb
inc
push
jle
in
pop
lods
rcl
xchg
incl
add
push
push
dec
pop
dec
push
filds
into
sub
jbe
add
fndisi(8087
data16
push
jge
lcall
and
sti
je
out
out
jmp
aad
dec
push
sub
dec
stc
adc
add
sti
mov
loope
or
movsl
ds
repnz
mov
jne
pushf
inc
pop
xchg
adc
icebp
sub
test
jmp
outsb
ficoms
sub
sub
sbb
enter
es
or
fnstenv
push
mov
add
cli
out
enter
mov
or
cmpsb
loope
insb
sbb
xchg
jne
lret
and
fcomps
hlt
out
mov
xor
and
mov
add
mov
fwait
jno
sti
adc
xor
adc
add
and
jo
negb
jg
push
cmpsl
push
dec
jge
in
out
xor
mov
adc
cmp
aam
push
or
mov
imul
jne
into
stos
stc
daa
fs
mov
add
icebp
aas
addl
mov
sbb
mov
pop
jmp
iret
sub
inc
das
xchg
sbb
inc
dec
mov
ds
and
aad
add
mov
test
gs
xor
data16
add
fisttpl
and
sbb
enter
fsts
cmp
xchg
xor
or
xor
lock
mov
pop
jecxz
test
adc
xchg
jge
sahf
and
cmp
call
mov
mov
mov
add
faddl
mov
jne
ficomps
idiv
dec
dec
or
add
cmpsb
les
stos
mov
fisubrs
je
inc
ftst
loopne
add
push
pop
iret
add
adc
sub
bound
xchg
dec
cmpsb
mov
jae
jbe,pn
call
cltd
fdivr
xchg
je
adc
sub
divl
stc
loop
xor
imulb
out
in
mov
ljmp
cmpsl
adc
pop
inc
lock
loope
pushf
outsl
xchg
cmp
add
mov
push
push
ljmp
ret
aam
and
push
test
nop
js
mov
dec
out
and
add
xor
cwtl
mov
fsubrl
sarb
jge
jae
push
sub
dec
adc
push
aam
loop
jno
movsb
pop
push
push
jmp
mov
in
jg
push
adc
add
push
pushf
in
test
mov
outsb
push
push
cmpsb
jae
pop
ret
fildl
mov
pop
inc
addr16
pop
jge
orb
cmpsl
loopne
add
insb
loope
sub
push
adc
cli
mov
mov
int
jae
pop
sub
sarl
movsb
add
shll
adc
daa
adc
js
add
jbe
sub
daa
mov
or
mov
in
loopne
and
mov
lock
in
insb
aad
adc
mov
inc
test
imul
sub
lahf
dec
rcrb
in
sbb
jnp
scas
mov
pushf
push
fwait
aaa
sbb
cld
inc
aam
lahf
xchg
das
dec
inc
ljmp
add
xchg
mov
adc
inc
dec
sbb
imul
mov
testb
mov
sub
mov
test
and
mov
and
sub
or
jno
pop
push
cs
add
fs
ljmp
outsb
shl
adc
push
sub
addl
push
repnz
sti
cmc
in
jns
in
mov
push
jp
xchg
cld
dec
push
or
imul
mov
mov
add
mov
add
mov
lods
popf
sahf
cmp
movsl
cld
mov
mov
bound
addl
mov
stos
jae
xchg
inc
cmp
dec
imul
inc
iret
sub
adc
mov
mov
fsubl
stos
mov
push
inc
aad
mov
out
enter
or
mov
mov
push
fdivs
cli
push
mov
aaa
ret
xlat
sarb
daa
clc
ror
adc
pop
push
js
daa
clc
aam
adcb
shll
and
xchg
repnz
push
scas
mov
fldenv
mov
sti
addr16
push
mov
push
xchg
sbb
adc
jb
mov
xchg
mov
outsb
xchg
dec
mov
or
outsb
sub
cmp
out
rorb
mov
repz
sbb
subb
cli
adc
mov
inc
adc
clc
loop
inc
pusha
jno
test
loopne
pop
testl
push
rcl
scas
push
inc
stos
pop
jae
mov
pop
fists
into
movsl
int
add
scas
movb
popa
rol
inc
cli
xchg
xor
adcl
fsub
cmpsb
inc
int3
fcompl
jo
pop
or
cmovo
dec
clc
and
idiv
cwtl
outsl
inc
cwtl
inc
gs
js
xchg
cmp
sub
mov
mov
mov
jo
or
push
popf
push
notb
push
mov
fstl
push
subl
push
paddd
cltd
sbb
pop
jmp
lock
cmpsb
out
jne
push
mov
enter
repz
mov
shll
add
add
fldcw
and
gs
mov
popa
fisttps
mov
fwait
testl
insb
fldt
inc
mov
sub
xlat
lock
sti
mov
js
sbb
jo
adc
sub
push
gs
cmp
dec
mov
nop
cld
push
outsb
cmp
push
cmp
dec
out
out
cld
add
inc
xor
and
jns
leave
sbb
mov
xorl
lcall
out
sbb
lods
ljmp
pusha
add
dec
popa
lods
nop
imul
jnp
mov
jb
popf
lock
sbb
or
mov
shrl
mov
mov
fnstcw
jge
cmpsb
outsb
sahf
outsb
addb
dec
mov
and
stos
mov
repnz
lods
lcall
mov
mov
cmp
imul
xor
adcl
incl
jno
or
and
test
inc
hlt
mov
fcomps
aad
push
push
cld
jnp
add
adc
push
add
fisttpll
adc
mov
sub
push
outsl
popa
xchg
test
sub
dec
pop
test
repnz
mov
mov
xchg
jo
jns
das
fidivs
xchg
cltd
mov
adc
dec
xor
push
out
jg
loope
imul
push
adc
jo
jnp
es
fscale
stc
cmc
aaa
enter
insl
mov
add
cmpsl
aad
aad
or
inc
or
repz
cld
into
fdivrl
lret
fstps
push
add
mov
xchg
pop
sbb
add
icebp
jb
repnz
sbb
add
cmp
mov
je
ljmp
loope
push
inc
ret
mov
cmp
in
fiaddl
nop
cmpsb
loop
nopl
leave
int3
mov
jp
jecxz
jnp
push
pop
stos
mov
in
adc
in
mov
popa
mov
mov
xchg
push
inc
xchg
in
jmp
jg
lock
jg
ljmp
adc
mov
add
and
cmpsl
daa
cmpsl
lret
fstl
lcall
xchg
pop
into
xchg
jg
adc
sub
inc
xor
adc
add
sub
xchg
and
cmc
in
sub
nop
inc
mov
xor
roll
loopne
ret
mov
lahf
fcoml
es
inc
pushf
insl
les
adc
cli
sub
and
and
add
movsb
adc
cmp
loop
sub
mov
mov
mov
add
scas
sahf
lds
mov
adc
mov
dec
jno
sub
xchg
inc
icebp
inc
stos
pop
mov
push
aad
inc
jge
inc
stc
push
push
mov
imul
jnp
scas
cmp
pop
sti
sub
xchg
cmp
sub
fisubs
jnp
test
jno
xor
movsb
mov
mov
sbb
xor
inc
ss
mov
or
ret
sub
shrb
pop
jle
daa
inc
dec
incl
dec
mov
jbe
mov
mov
add
or
pop
sbb
loopne
outsb
aam
in
out
jmp
mov
roll
loopne
jnp
ret
pop
hlt
mov
adc
push
jle
mov
cmpsl
add
inc
fmuls
aas
fmull
adc
jo
add
mov
arpl
divb
movsb
jg
imul
sti
lods
cmp
aad
jg
adc
jns
mov
adc
cmp
push
xchg
shrl
dec
adc
nop
fsubs
in
mov
add
lret
push
push
ficompl
cmp
in
inc
sbb
push
inc
aaa
cmp
cmc
inc
xor
cmp
pop
dec
and
sbb
xchg
sarb
sbb
xchg
lahf
aaa
adc
cmp
mov
pop
jbe
mov
sahf
out
mov
xchg
mov
pop
pop
pop
sub
and
aas
push
sub
push
cmpsb
or
sbb
cmp
js
xchg
inc
or
addb
push
dec
loope
xchg
je
rol
jns
jge
xchg
cltd
or
mov
lahf
and
mov
nop
or
add
add
and
sarl
inc
jo
popa
pop
pop
cmp
outsb
stos
mov
popa
aam
add
loopne
js
push
sub
and
add
and
inc
push
ret
mov
out
ret
inc
fmul
lahf
pop
cmp
popa
stc
cmp
sbb
rcll
mov
mov
std
xchg
ret
mov
jnp
and
xchg
mov
mov
lret
jbe
pop
fmuls
test
gs
cld
add
fcmovu
cmp
inc
sub
mov
jp
mov
add
in
scas
inc
popf
mov
out
or
lods
jmp
cwtl
add
pop
xor
cmpb
decl
scas
mov
mov
mov
push
mov
dec
and
sbb
sub
ret
rcrl
inc
mov
arpl
sbb
loope
pop
xchg
subb
jge
jae
sbbl
pop
notl
ds
xlat
bound
dec
push
int
push
arpl
fildll
add
jg
outsb
insl
scas
popl
xchg
and
clc
add
mov
sub
pop
outsb
pop
xchg
sti
jmp
pop
cmp
cmp
shll
scas
mov
cmpsl
mov
scas
test
repnz
mov
push
mov
push
inc
test
rcr
mov
test
cli
cmpsl
or
inc
les
loope
mov
loope
ljmp
das
roll
mov
mov
mov
pop
test
mov
jno
int3
adc
add
sub
and
pop
mov
out
popf
aam
sti
fadd
sbb
insl
sbb
aas
je
loop
lods
mov
scas
aad
je
mov
les
fisubs
test
cmp
xorb
pop
stos
mov
data16
lahf
mov
push
push
adc
dec
shl
add
andl
sbb
les
push
jg
jp
icebp
out
xlat
int
or
rcl
mov
sbb
cmpsl
out
xor
mov
add
inc
sbb
loop
add
inc
mov
loop
imul
xor
add
pop
cmp
loopne
inc
or
inc
pusha
xor
shll
push
xchg
cmpb
cltd
sbb
fbstp
popa
stc
xchg
and
outsb
mov
push
shl
xchg
outsb
push
mov
scas
int
loop
jle
add
cmc
nop
test
push
push
into
or
lods
push
or
ss
mov
cmp
icebp
insl
pop
and
fbstp
add
or
dec
mov
mov
adc
loop
mov
jle
sub
jle
or
jae
mov
in
fdivs
xchg
mov
cmpsb
add
dec
mov
movsl
adc
test
mov
adc
je
mov
cmp
sarl
inc
daa
inc
cmpsb
test
stc
and
sub
mov
mov
mov
jnp
in
jne
mov
mov
xchg
mov
out
adc
jne
xchg
add
js
xchg
xlat
pop
mov
cmpl
std
xlat
pushf
orb
cwtl
aam
call
jl
sbb
push
out
fidivrs
mov
push
and
pop
dec
rsm
dec
and
xchg
enter
mov
enter
arpl
xor
sbb
addr16
lods
fwait
gs
inc
insb
push
lcall
mov
pop
sbb
mov
sbb
mov
push
mov
stos
add
ja
jo
cmp
dec
and
add
add
sbb
leave
loop
inc
add
fs
les
test
mov
xchg
fistpll
jno
cmc
sar
hlt
and
mov
test
cli
jbe
aam
and
xchg
xor
inc
and
mov
mov
shl
enter
fstps
aam
idiv
fwait
jo
cltd
xchg
mov
rcrb
aaa
jmp
sbb
fmul
lret
addr16
out
dec
std
sbb
cmp
mov
aam
adc
cmp
neg
cmp
icebp
pop
adc
testb
add
fisubs
push
test
mov
sbb
aam
pop
setne
pushf
add
insb
or
push
pop
mov
int3
jecxz
xchg
xchg
je
cltd
xchg
movsb
inc
imul
sbb
in
mov
and
in
in
fcom
dec
icebp
pop
daa
xor
sbb
push
cmp
add
insb
cmp
std
cmp
stc
int3
lea
xchg
jns
mov
shlb
or
xorb
hlt
pop
ficomps
mov
push
in
ffree
inc
push
xor
dec
add
xchg
test
movsl
pop
call
pop
mov
data16
push
popf
aam
dec
add
dec
dec
or
wbinvd
jo
ret
aas
mov
insl
mov
or
addb
shl
pop
sbb
out
xchg
xor
mov
cmp
imul
adc
jp
pop
mov
jge
arpl
mov
jl
imul
test
pop
jns
rcrb
stos
xchg
in
xor
std
rorb
pop
lods
adc
data16
or
and
add
add
add
add
push
dec
fsubl
test
in
iret
sbb
scas
sahf
push
dec
pop
push
push
dec
jecxz
push
ss
daa
adc
mov
or
movsb
push
adc
add
cmp
inc
cmc
push
sahf
fs
cmc
pushf
jb
pop
rcrl
loop
pop
mov
out
inc
dec
sub
mov
int
lock
xchg
pop
xchg
das
out
scas
adc
xchg
xchg
stos
inc
push
rorl
pop
loop
fcmovbe
jp
and
push
sub
mov
pop
or
cmp
out
dec
scas
sbb
add
popf
pop
inc
add
fsub
test
outsl
dec
bound
mov
scas
mov
mov
xor
jbe
cmc
mov
dec
cli
mov
mov
fldt
dec
jns
mov
push
inc
pop
or
movsb
mov
cmc
inc
je
stos
aaa
sbb
dec
cmpsb
out
dec
aas
cmp
pushf
or
idivb
in
push
jne
jo
js
jo
and
xlat
mov
leave
adc
outsl
inc
rcll
xor
xchg
xchg
push
inc
orb
push
fwait
outsl
sub
add
add
add
add
xchg
jbe
nop
lret
xor
mov
fists
cmp
inc
cmp
sbb
stos
or
movsl
popa
and
js
sub
int
and
mov
xor
cltd
mov
imul
dec
mov
dec
stc
gs
and
mov
dec
lods
ret
pushf
add
test
xor
cmp
mov
jmp
inc
cs
in
movsb
add
fildll
int
xchg
cltd
push
xchg
or
jo
subb
call
mov
sub
mov
aad
add
in
fwait
das
fstp
shll
dec
hlt
repnz
test
aad
lret
cs
sub
in
jmp
jl
xor
mov
inc
mov
cmpsb
insl
mov
js
lea
mov
adc
mov
pop
add
gs
sbb
clc
and
push
cmp
stos
and
out
jecxz
lds
addr16
mov
lcall
in
push
int
or
aam
test
movsl
mov
cmp
cld
jmp
in
xor
or
add
xorl
dec
jae
mov
fsts
sub
sti
popf
in
mov
sahf
cmp
out
gs
int
dec
cld
aad
aad
inc
jae
mov
sub
xor
es
ljmp
inc
jmp
aam
outsl
or
and
mov
stos
stos
mov
or
fnstcw
add
xchg
in
jmp
sbbl
xlat
push
insb
xchg
jnp
sbb
lcall
mov
xchg
dec
in
add
add
add
popf
jecxz
test
test
jecxz
mov
data16
aam
call
lret
loopne
adc
push
push
pop
mov
jno
movsb
pushf
push
pop
in
mov
stc
cld
inc
test
xlat
loopne
adcb
xchg
lret
dec
sub
loopne
or
adc
push
lock
std
dec
jmp
push
jbe
jmp
pop
mov
lahf
lock
jo
jne
xchg
test
push
jp
mov
pushf
addr16
jg
cltd
mov
mov
sub
xchg
add
xchg
mov
cmp
cmpsb
in
aam
push
jb
lods
pop
sbb
adc
icebp
icebp
xlat
decb
add
aaa
xchg
ret
xchg
xchg
out
rolb
negl
jmp
jge
inc
adc
jae
add
fidivs
mov
add
mov
push
xlat
cld
add
je
insb
xchg
or
and
or
cmpsb
cmc
lret
aad
aam
mov
and
mov
lds
jne
mov
jl
pop
add
pop
fldcw
sub
pushf
sbb
lea
add
testl
data16
xchg
sub
sahf
loope
testb
outsb
mov
dec
lret
pop
jbe
and
inc
xchg
out
push
xchg
pop
shlb
jns
sbb
cli
shrb
and
das
jmp
dec
add
lret
inc
xlat
jb
xor
xchg
mov
jno
in
les
testb
lea
inc
push
nop
fdivrs
sbb
sbb
mov
clc
push
incb
leave
jle
cltd
mov
mov
add
add
add
add
push
shl
adc
mov
iret
int3
outsl
test
repz
xlat
or
stos
or
shrb
mov
push
jge
and
sbb
pop
xchg
mov
ljmp
jno
mov
mov
adc
dec
ret
lods
popf
dec
sarl
stc
into
ror
push
xchg
sub
xor
sbb
jmp
cmp
xchg
add
out
mov
push
iret
sahf
lret
mov
stos
xlat
stos
jl
jl
loope
rclb
add
add
add
add
add
popf
aam
dec
mov
cmpsl
mov
je
lods
pop
std
test
mov
xchg
mov
inc
movsl
cs
aam
mov
repz
insb
movsb
adc
cmc
js
mov
hlt
repnz
dec
xchg
int
dec
dec
pop
cld
push
dec
lods
mov
jns
push
cld
xor
add
jle
pop
daa
cmp
adc
add
or
pop
mov
popl
in
pop
add
addr16
je
mov
or
pusha
movl
int3
push
push
pop
scas
add
fwait
ljmp
jecxz
lock
push
xchg
jnp
test
mov
arpl
rcll
iret
mov
pop
loop
in
xchg
pushf
sbb
lcall
jns
stc
mov
mov
sub
add
adc
jmp
mov
xchg
xor
dec
pushf
shlb
orb
mov
xorb
cmpsb
aas
pop
xor
xchg
test
pop
jl
mov
enter
xorb
pop
xchg
push
lahf
and
xchg
xchg
xlat
xchg
add
xor
adc
imul
sub
and
lock
aam
inc
das
cmp
pop
negl
mov
adc
mov
js
cmp
stc
je
xor
enter
es
sub
mov
cli
fcomp
bound
adc
mov
fsts
test
mov
mov
ja
rorl
ljmp
movsb
sahf
daa
jecxz
mov
mov
cs
sub
sub
cli
add
xchg
mov
sub
fadd
mov
adc
out
xchg
cmp
sbbb
or
dec
movl
test
fimull
int
cmc
jp
mov
jne
or
adc
lds
jmp
ret
aas
loopne
ja
int3
pop
cmpsl
mov
sti
xorl
xor
pusha
add
jbe
call
pop
cld
data16
pop
cmp
cmpl
sarl
inc
clc
stos
test
add
add
add
add
je
dec
jge
hlt
cmp
lods
mov
xor
sahf
popa
mov
hlt
lret
mov
jno
ds
mov
inc
sbb
cmp
cmp
or
aas
push
mov
mov
int3
ret
es
lret
out
or
test
mov
mov
adc
jmp
fsubs
lahf
arpl
jbe
mov
ljmp
into
jnp
js
pop
add
in
gs
pop
mov
sbb
cmp
add
mov
xchg
in
data16
push
insb
into
pop
push
fs
adc
in
push
jmp
fimuls
in
xchg
cmp
fdiv
loop
dec
push
mov
cmp
cmp
imul
push
repnz
jno
lret
jmp
in
sti
mov
mov
and
adc
in
neg
inc
cmp
notb
das
push
sbb
roll
jne
lods
inc
jo
xchg
adc
int3
loope
xchg
xor
divb
pusha
push
lret
sar
mov
push
add
xchg
rclb
fcom
call
jae
stc
mov
jp
and
dec
push
sti
xchg
mov
repnz
loopne
cmp
roll
js
jmp
cmc
cmp
leave
inc
mov
outsb
push
jno
add
mov
push
mov
fmuls
test
popf
and
jl
sbb
sub
fnstcw
outsb
push
test
pop
popf
xor
movsb
xor
sub
dec
push
outsl
icebp
pushl
clc
sbb
pushf
mov
add
add
add
cmp
xchg
sahf
dec
gs
jnp
mov
pop
icebp
inc
cmp
divb
adc
pop
fsubl
adc
sub
cmp
sub
mov
ss
cli
in
adc
int
dec
push
sysexit
fsts
or
mov
or
cmp
loop
test
testl
stos
int3
cmp
mov
mov
push
push
push
pop
int3
inc
push
cmp
outsb
aad
std
fidivrs
inc
push
popa
add
jecxz
mov
add
xor
push
adc
or
ljmp
xor
jmp
addr16
pop
repnz
gs
pop
adc
mov
or
dec
popa
inc
and
mov
sub
inc
shl
popf
lock
lock
sbb
pop
test
sub
int
fistpl
scas
out
push
pop
dec
push
movsb
enter
mov
cld
scas
out
imul
xor
sub
arpl
dec
mov
daa
stos
jnp
rol
xor
mov
nop
add
mov
jns
inc
cmc
aas
out
cmp
mov
shll
test
sbb
stc
in
dec
sub
lods
jno
dec
xchg
push
jo
push
stc
movsb
aam
xchg
sub
hlt
jmp
adc
or
loop
lcall
arpl
jecxz
xlat
call
pop
loop
jge
xchg
sahf
scas
fnsave
push
push
lock
xchg
sbbb
lcall
in
hlt
out
sbb
rcl
add
pop
push
jg
push
push
dec
lea
neg
or
xor
sub
out
xor
jbe
mov
push
sbb
outsb
push
rcll
pop
or
outsl
sbb
pop
mov
js
inc
jle
aam
js
aas
and
jmp
lods
cmpl
xchg
jne
xchg
push
ficoml
and
ds
push
loopne
push
aas
or
pusha
jmp
jo
hlt
jge
out
int
fcmovnbe
xchg
int
inc
xor
insb
je
sbb
add
add
add
add
jbe
add
jno
mov
cld
cmp
out
cs
mov
call
int3
stos
scas
cmp
addr16
fdivr
jecxz
stc
outsl
jg
sbbb
and
or
out
es
pop
xorl
clc
in
imul
cmp
xchg
int
xor
leave
scas
jl
hlt
mov
ja
or
sub
xchg
xchg
cmp
xchg
int3
mov
xor
aas
jnp
int
les
loop
ja
push
add
loope
xor
add
xchg
jle
in
iret
or
cld
shll
mov
hlt
dec
into
sbb
push
ret
shl
push
mov
mov
arpl
lods
xor
sbb
dec
mov
jne
cmp
aaa
push
mov
mov
test
cwtl
mov
pusha
xor
and
xor
lods
lea
sarb
cmp
dec
lock
insb
mov
mov
cld
mov
mov
jecxz
push
or
in
add
out
xchg
xchg
cmpsb
cmpsl
jp
es
loopne
imul
push
mov
pop
adc
daa
and
adc
adc
jno
jmp
loope
fstpt
mov
out
and
add
and
test
rcrl
fs
push
push
cli
mov
mov
dec
lods
test
pop
or
and
dec
pop
push
cmp
xchg
adc
cmp
int3
lahf
sbb
imul
out
int3
xchg
pushf
rcrl
clc
movsl
sbb
or
mov
add
jb
mov
call
push
sahf
xchg
mov
xor
inc
nop
outsb
and
mov
cmp
mov
pop
nop
jecxz
jmp
in
test
push
xor
insl
stos
bound
call
out
out
movsl
and
mov
mov
lock
push
mov
and
aas
dec
pop
pop
jge
iret
fstps
test
cmp
cs
les
clc
icebp
and
or
pop
add
sbb
or
mov
pop
adc
leave
ja
loopne
pushf
pop
fisubl
jmp
inc
jbe
xor
pop
ja
shrb
and
insl
cmpb
ret
jne
divb
xchg
enter
pop
cmp
mov
std
icebp
add
nop
stos
push
lahf
call
jbe
cmp
cltd
fisttpll
jmp
out
xchg
dec
jne
cltd
decl
jge
out
lock
adc
mov
lcall
lret
sbb
mov
add
ds
and
cmp
mov
pop
es
imull
stc
pop
leave
scas
cmp
mov
xchg
mov
iret
mov
xlat
add
lods
pop
les
sub
je
jnp
test
mov
inc
or
cwtl
push
pop
pop
lcall
lea
cmp
adc
jl
dec
in
bound
sti
xor
push
push
xchg
pop
push
shrl
dec
jge
ljmp
xchg
jl
shll
pop
pop
lock
mov
or
add
add
add
add
repz
xor
cmpsb
sub
popf
jo
xchg
nop
mov
xchg
mov
cltd
push
dec
mov
add
outsb
pop
pop
xchg
imul
int
inc
ja
test
clc
loopne
mov
push
lret
cli
pop
popa
xchg
bound
jmp
cmpsb
ljmp
jge
jno
nop
push
addr16
call
scas
icebp
insb
mov
nop
ss
out
loope
test
inc
mov
jnp
or
insl
hlt
ror
repnz
lret
xor
dec
pop
lret
or
popf
add
fimuls
sbb
aam
xchg
shr
mov
push
call
fwait
pop
out
out
outsb
lods
fwait
xor
pop
filds
mov
push
xchg
sti
pushf
fsubrp
add
push
pushf
or
stos
andb
dec
outsl
sbb
ss
and
test
jp
outsl
or
in
outsl
jp
ja
lock
mov
xchg
out
sbbl
xlat
mov
popa
inc
in
or
jge
cmpsl
mov
inc
dec
repz
xchg
iret
out
lret
roll
add
mov
mov
in
adc
in
dec
loope
fdivr
mov
and
neg
and
push
sahf
sbb
mov
daa
push
repz
add
out
leave
cmp
push
int
mov
mov
imul
push
sbb
scas
jns
bound
jno
sub
cmp
pop
dec
dec
dec
data16
ss
lock
movsl
push
aad
rclb
jns
orl
inc
aad
lds
jmp
push
sub
pop
add
scas
sar
add
movsl
popa
mov
pop
push
push
xchg
out
adc
pop
mov
insl
fwait
leave
and
cmp
stos
xchg
es
xor
pusha
in
cld
mov
mov
inc
sti
movd
insb
pushf
pop
test
push
push
xor
or
adc
cmp
cmc
cltd
dec
scas
lds
mov
or
sub
or
shlb
pop
out
cmp
out
sahf
sub
int
add
scas
fnstsw
mov
aam
xor
cmp
pop
push
jmp
add
imul
cmpsb
lods
insb
sbb
dec
xor
xor
or
test
cmpsl
adc
sti
cmp
repz
outsl
jno
gs
testb
jg
test
sbb
push
int3
in
pop
sub
xchg
inc
leave
xor
test
lods
mov
jb
mov
jae
jmp
xchg
jg
mov
dec
adc
popl
jl
adc
mov
or
aad
push
pop
aaa
adc
pop
jp
ljmp
cltd
out
clc
add
inc
sti
stos
sti
ja
pop
sub
icebp
or
and
add
xchg
ficomps
into
cmpl
sti
mov
dec
daa
adc
inc
adc
rorb
pop
mov
pop
stc
jnp
inc
sub
and
pop
fiaddl
mov
push
leave
setle
insl
insl
addr16
xor
or
cmp
push
aaa
decb
hlt
repnz
sti
test
cmp
xor
and
inc
andl
xchg
add
and
out
icebp
gs
bound
push
in
andl
xor
or
rcrb
dec
out
cmp
xchg
dec
xchg
jl
fstpl
movsl
push
jnp
test
push
fs
push
push
lret
repnz
loope
in
ret
pop
jp
std
pop
cmp
xchg
inc
js
jnp
push
xor
cmpsl
insw
test
mov
jl
adc
imul
xchg
mov
cmc
mov
cmp
mov
or
adc
add
mov
mov
popf
fisubrl
mov
ret
aam
cmp
sahf
xchg
cmpsb
jb
insl
dec
push
mov
lock
stos
lret
jb
xchg
and
decl
shll
sar
jp
les
xor
enter
jmp
inc
jnp
nop
cmp
mov
bnd
aam
dec
jmp
clc
jae
js
cli
bnd
or
sbb
inc
jge
inc
sbb
loopne
clc
push
xor
xchg
add
dec
jl
and
and
rorl
dec
sub
repz
es
inc
aaa
fwait
cmp
rcrl
mov
ret
fs
or
in
addr16
xor
sbb
ret
sub
insl
push
adc
adc
ret
fdivrs
sbb
pmaddwd
lods
sbb
outsb
mov
push
js
sti
pushf
xor
sbbl
or
stc
mov
enter
xchg
inc
jns
iret
bound
add
add
add
add
xor
cmpb
jmp
inc
push
and
ljmp
shl
mov
push
mov
mov
mov
pop
out
mov
aad
dec
ret
movsl
add
jo
iret
movsb
sti
lea
stos
out
dec
lods
cmp
push
outsb
je
insb
movsl
inc
mov
and
or
enter
test
dec
inc
cmp
push
shr
stc
push
dec
hlt
push
sahf
and
in
pop
fxch
dec
lods
mov
mov
add
add
add
add
stos
pop
and
sti
ljmp
pop
pusha
inc
gs
insb
push
testb
stos
das
ret
cmp
adc
mov
pop
cmpsb
lods
pop
mov
and
popa
and
push
xchg
xchg
fcmovb
push
sbb
ret
icebp
inc
dec
mov
push
push
fnstcw
test
pop
xor
jp
insl
sti
adc
fimuls
aas
or
pusha
sbb
mov
je
in
ljmp
jmp
mov
jge
ret
sub
ja
ret
sarb
jmp
xchg
push
sbb
pop
add
in
adc
jecxz
leave
inc
sti
and
xor
pop
insb
push
pushf
cmp
sahf
mov
fildll
jo
lods
imul
sbb
add
ret
clc
es
dec
cltd
or
shl
dec
aad
pop
inc
mov
jge
mov
lret
adc
cmpl
inc
rcl
pop
cmpsl
aas
adc
je
xor
sbb
cld
dec
or
icebp
and
xor
pop
sub
jl
jae
and
les
add
ds
negb
jb
out
in
rcl
stc
fsubr
ja
or
lods
stos
xchg
push
mov
nop
mov
sub
sti
aam
fiadds
hlt
xor
push
mov
xor
xchg
mov
mov
shr
pop
xchg
fcmovb
cmp
shlb
pop
jae
sbb
fistps
in
dec
leave
into
sbb
movb
push
jo
mov
dec
aam
and
sbb
jb
mov
add
add
add
add
sahf
imul
cltd
dec
mov
stos
andl
sahf
je
push
clc
mov
divl
xchg
sub
ljmp
xchg
xor
dec
out
sub
adcl
lcall
xchg
cmc
cwtl
lods
pop
test
cmp
mov
repnz
push
add
or
pop
loop
mov
into
xchg
adc
outsb
out
cmpsl
test
insl
jge
stos
fidivrs
pop
sbb
iret
add
jl
cmc
int3
jl
movsl
insl
cmp
or
fnstenv
cmp
xchg
push
adc
dec
inc
out
out
shl
scas
stc
cmpsl
push
in
shrb
sub
inc
and
lds
fsub
test
jns
adc
call
xchg
dec
and
out
scas
inc
in
hlt
inc
addr16
mov
xchg
mov
call
pop
call
flds
je
out
pop
xor
iret
ficoms
lret
pop
lcall
jns
lret
aas
add
xchg
sahf
mov
aam
add
dec
test
mov
sti
in
idivb
and
push
jmp
push
xor
loopne
hlt
je
xchg
push
out
roll
mov
mov
mov
popa
clc
mov
cmp
sbb
adc
or
and
xor
and
cwtl
push
popa
or
or
bound
sbb
pop
mov
cwtl
je
dec
repnz
cmp
xor
iret
ret
mov
jp
mov
add
out
cmpsb
fwait
out
fnstenv
or
out
dec
leave
jmp
ljmp
inc
ffreep
jnp
rcr
pop
ljmp
push
insb
decl
popa
inc
iret
and
mov
jbe
cmp
inc
daa
add
shlb
push
jle
sbb
xor
mov
cmp
leave
fnstsw
fidivl
subb
lds
jp
jp
ja
add
push
ficoml
and
xor
mov
das
cmp
inc
add
das
addl
add
add
add
add
les
or
arpl
jp
xlat
movb
mov
cs
test
inc
adc
fiaddl
loope
pop
xor
mov
inc
cmpl
mov
dec
or
cmp
outsl
mov
call
and
push
jp
mov
aaa
jnp
ret
bound
lock
cmpl
cltd
push
jmp
lods
lret
in
ficoms
inc
and
and
enter
imul
arpl
inc
fmuls
mov
add
jg
jecxz
xor
test
popa
dec
xor
out
icebp
sahf
scas
jo
rcrb
mov
and
xlat
xor
mov
xchg
das
sbb
adc
js
jns
in
outsb
mov
jecxz
shll
or
push
mov
inc
addl
cs
sub
aas
and
fidivl
xor
std
pop
pop
scas
mov
jg
cli
mov
jb
jle
xchg
push
inc
in
test
sbb
push
adc
nop
roll
add
jo
mov
mov
jo
mov
inc
es
adc
shl
bound
out
mov
add
adc
in
push
or
enter
cmp
int
cmc
into
inc
mov
into
sbb
aam
pop
cmp
inc
xchg
pop
in
int3
cmc
inc
repz
pop
adc
pop
pop
push
adc
out
orb
fdivrs
ss
popa
mov
pop
stos
shll
imull
in
loopne
xchg
jecxz
lcall
nop
add
lret
mov
add
fwait
dec
cmp
repnz
cmp
scas
je
cmpsb
sbb
sub
cwtl
dec
pop
jle
jecxz
clc
fcmovnbe
out
shl
pushf
sbb
sub
stos
and
addr16
std
ficoml
push
jp
imul
popf
andl
xor
imul
mov
icebp
mov
hlt
jmp
push
out
push
test
xor
pop
xor
nop
cmp
fnsave
outsl
lods
jo
xchg
mov
sub
incl
xchg
in
pusha
jge
sub
sub
popa
sarb
add
xchg
jg
pusha
rol
aaa
add
ror
push
ror
in
ror
inc
ror
in
ror
addl
int
lds
sbb
mov
int
movsl
ror
lods
rorb
ror
adc
sarb
and
xorb
imull
push
stc
gs
test
arpl
js
orb
idivb
xor
test
cmp
lea
jge
movsl
shrb
mov
shrl
mov
into
cltd
dec
les
cmp
jbe
repnz
dec
cmp
mov
sbb
pop
add
addr16
xchg
xchg
pop
push
mov
mov
dec
and
std
notb
inc
push
lods
inc
notb
inc
clc
add
fs
mov
jnp
sub
loopne
sub
outsl
xchg
push
in
dec
add
mov
sub
xchg
and
lahf
pushf
mov
insl
or
xchg
out
aad
push
in
and
lea
stos
lea
push
aam
imul
out
dec
std
add
rcl
add
inc
cmp
test
or
fstpl
ja
ja
xor
add
sarb
cmp
aam
mov
adc
cmp
adc
xchg
ficoml
ds
pushf
int
add
out
pop
xor
mov
test
das
cmp
mull
jmp
xor
dec
jb
jecxz
xor
pop
fisttpl
xor
mov
push
mov
out
ret
mov
daa
nop
add
fwait
jae
lret
addr16
xor
jle
lcall
add
add
add
or
sbb
sub
lods
xlat
or
sub
js
jg
daa
xlat
ret
sbb
fs
icebp
lcall
test
xor
inc
lods
rol
cmpsl
mov
cmp
mov
push
xchg
push
sub
sub
add
mov
subl
lods
les
add
and
fadds
mov
push
or
loopne
or
fisubs
cltd
lds
dec
xchg
jl
imul
inc
std
mov
add
add
and
lods
pop
mov
das
sbb
popf
std
jbe
add
outsl
cmp
cmpxchg
lret
cmp
out
cmpsl
popa
dec
clc
pop
pop
xor
test
jae
jecxz
cmpsl
daa
cmc
into
sub
ret
std
stc
push
jle
cmc
in
jbe
rcrl
or
mov
dec
ret
adc
fnstenv
mulb
mov
int
lea
testb
shl
mov
shl
out
and
push
mov
int
dec
jge
add
testb
imulb
sub
mov
push
insl
xchg
cmp
inc
aaa
pop
push
inc
and
dec
outsl
jge
adc
and
adc
insl
cmp
data16
dec
push
cmp
cmp
add
push
pop
and
xor
cmp
jb
aaa
dec
dec
cmc
sub
and
sbb
and
jae
and
cli
adc
daa
dec
outsl
enter
jbe
push
insl
subl
or
insl
inc
xor
jnp
pop
cmp
sub
mov
dec
jns
inc
xor
cmp
and
jbe
gs
pop
jae
sub
dec
imul
xor
jnp
pop
and
pop
and
pop
jno
sub
jp
ds
dec
je
and
cmp
cmp
pop
jbe
and
outsb
outsb
in
and
jmp
or
divb
dec
cmp
enter
xchg
gs
jae
daa
pop
inc
mov
pop
jne
and
daa
dec
xchg
or
push
and
push
das
mov
inc
jne
cmp
add
dec
imul
dec
ds
pop
and
add
dec
daa
pop
jne
and
jne
xor
jnp
adc
sub
dec
je
and
push
aas
xor
sub
push
pop
insb
add
inc
or
jnp
and
jl
add
jbe
pop
add
stos
or
mov
sbb
xchg
add
mov
jnp
mov
sbb
xchg
add
stos
or
mov
sbb
xchg
add
mov
jnp
mov
sbb
xchg
add
sub
jnp
and
jl
and
jbe
add
pop
add
or
jnp
and
jl
add
jbe
pop
add
sub
jnp
and
jl
and
jbe
pop
add
or
jnp
and
jl
add
jbe
pop
add
stos
or
mov
sbb
xchg
add
mov
jnp
mov
sbb
xchg
add
stos
or
mov
sbb
xchg
add
mov
jnp
mov
sbb
xchg
add
sub
jnp
and
jl
and
jbe
pop
add
or
jnp
and
jl
add
jbe
pop
add
sub
add
jnp
and
jl
and
jbe
pop
add
or
jnp
and
jl
add
jbe
pop
add
stos
or
mov
sbb
xchg
add
mov
jnp
mov
sbb
xchg
add
stos
or
mov
sbb
xchg
add
mov
jnp
mov
sbb
xchg
add
sub
jnp
and
jl
and
jbe
pop
add
or
jnp
and
jl
add
jbe
pop
add
sub
jnp
and
jl
and
jbe
pop
add
or
jnp
and
jl
add
add
jbe
pop
add
stos
or
mov
sbb
xchg
add
mov
jnp
mov
sbb
xchg
add
stos
or
mov
sbb
xchg
add
mov
jnp
mov
sbb
xchg
add
sub
jnp
and
jnp
and
jbe
pop
add
or
jnp
and
jnp
pop
pop
aaa
add
aaa
add
jns
and
inc
xor
jp
xor
xor
and
sub
xor
jnp
xor
jp
xor
jnp
xor
sub
popa
js
add
xor
adc
xchg
jns
xor
js
xor
js
xor
jbe
xor
jbe
xor
jbe
xor
ja
xor
shll
xor
xchg
je
ss
jae
ss
and
sbb
aaa
xor
je
aaa
je
aaa
out
je
aaa
int3
je
aaa
xchg
je
aaa
scas
je
aaa
pushf
je
aaa
test
outsb
je
cmp
cmp
cmp
adc
mov
aaa
test
cmp
jb
cmp
jb
cmp
stos
cmp
add
jb
cmp
jb
cmp
jae
cmp
jae
cmp
fidivrl
out
jb
cmp
jb
cmp
sub
arpl
cmp
cmp
add
cmp
jno
cmp
jno
cmp
sbb
inc
jo
cmp
jb
or
cmp
outsl
dec
cmp
outsl
dec
cmp
outsl
mov
cmp
outsl
lahf
cmp
outsl
lcall
jo
cmp
jo
cmp
daa
cmp
pop
cmp
outsl
jp
outsl
pop
cmp
outsl
dec
cmp
add
mov
aam
mov
out
outsb
cltd
cmp
outsl
xchg
push
outsl
cmpb
outsb
cld
cmp
fdivrs
mov
sarb
mov
outsb
xor
outsb
and
cmp
outsb
or
cmp
outsb
je
add
cmp
insl
push
cmp
dec
cmp
mov
data16
out
sahf
cmp
data16
cmp
xchg
in
idivw
addr16
adc
inc
addr16
xchg
addr16
test
arpl
fs
cmp
clc
mov
cld
test
pushf
addr16
lahf
addr16
add
add
add
add
xor
inc
push
pop
ds
push
aaa
add
aaa
add
dec
aaa
add
pop
mov
pop
sub
into
pop
cwtl
xor
daa
pop
aaa
ss
pusha
movsw
pusha
cltd
and
aaa
fbld
cmp
inc
cmp
bound
cmp
arpl
cmp
data16
cmp
pop
cmp
dec
push
mov
add
aaa
add
pusha
adc
hlt
call
cmp
cmp
fidivrl
data16
add
add
add
add
ds
push
aaa
add
dec
aaa
add
lods
xor
pop
test
fs
shlb
pop
cmp
push
pop
xor
push
pop
sub
fs
and
clc
pop
cmp
pusha
cli
ss
out
aaa
aam
cwtl
cmp
bound
fs
cmp
fs
cmp
fs
dec
arpl
cmp
cmpl
hlt
cmp
mov
fdivrl
test
int3
cmp
pop
push
ss
dec
aaa
add
pop
scas
xor
pusha
cmp
and
pusha
and
add
add
add
add
pop
dec
aaa
daa
pop
daa
cmp
popa
test
daa
bound
cmp
cmp
cmp
pop
cmp
jb
mov
repz
cmp
arpl
cmp
xor
dec
arpl
fisubl
cmp
bound
cmp
or
add
data16
adc
cmp
mov
cmp
gs
cmp
gs
shlb
stos
fs
cmp
push
fs
ds
fs
or
aas
arpl
add
aas
mov
aas
pop
sub
add
dec
aaa
add
pop
adc
clc
pop
shlb
pop
dec
xor
pop
fbstp
pop
jnp
sbbb
aam
lods
xor
or
pop
pop
ss
cmpsb
aaa
in
mov
aaa
cld
pop
lea
out
sti
aaa
nop
pop
jmp
aaa
sbbl
sbbl
dec
bound
cmp
sbb
inc
bound
cmp
arpl
mov
bound
cmp
pusha
loop
pop
popa
xor
ret
popa
inc
cmp
popa
out
cmp
popa
add
cmp
pop
cmp
add
cmp
gs
cmp
data16
cmp
cmp
xor
les
pop
sbb
add
pop
pop
xor
mov
xor
pop
xchg
xor
pop
icebp
xor
pop
lret
xor
pop
sbb
sub
xor
pop
js
push
pop
imul
pop
push
xor
pop
mov
xor
pop
lcall
pop
jecxz
ss
imul
inc
pop
push
ss
cmp
arpl
dec
pusha
sbb
daa
pusha
imul
pusha
add
lock
add
fcompl
cmp
xchg
cmp
data16
cmp
xor
mull
cmp
cmp
pop
fs
daa
fs
mov
imul
arpl
aas
inc
arpl
aas
xchg
aas
mov
arpl
xlat
bound
aas
and
lret
xchg
add
pop
sbb
dec
pop
or
test
cmp
push
adc
xor
pop
xchg
xor
pop
cmp
popa
pop
or
and
inc
xor
push
pushf
xor
pop
loop
scas
push
ss
add
jecxz
pop
pop
shlb
pop
xlat
cmp
dec
cmp
mov
aaa
add
aaa
add
dec
aaa
add
pop
test
xchg
xor
xor
sbb
jne
add
mov
xor
pop
inc
xor
pop
stos
xor
pop
pushf
xor
pop
xorl
pop
out
sub
fidivl
or
push
pop
xor
xor
pop
js
mov
rcrl
lds
insl
pop
sbb
sbb
xor
push
sbb
push
pop
xor
push
lea
push
in
xor
push
push
xor
push
add
lds
push
and
das
push
xor
push
js
mov
push
pop
xor
rclb
xor
add
xor
or
jecxz
pop
push
cmp
insl
pop
add
fstl
ss
pop
pop
aaa
jecxz
cmp
cmp
popa
pop
cmp
arpl
or
cmp
pop
cmp
gs
cmp
fs
cmp
pop
addr16
pop
mov
cmp
pop
and
aad
pushf
cmp
add
andl
ds
pusha
lock
ds
pop
sbb
aas
cltd
pop
jne
test
pop
stos
aas
mov
aaa
add
aaa
add
aaa
add
mov
xor
pop
shll
pop
add
dec
pop
inc
xor
pop
xorb
pop
jmp
xor
push
xor
pop
jg
fcompl
cmpsl
pop
out
cmpsl
pop
ret
pop
jbe
adc
xor
pop
imul
pop
arpl
sti
pop
pop
xor
pop
xorl
pop
sbb
xor
push
pop
xor
push
push
xor
push
add
nop
xor
push
push
shll
push
lret
xor
push
ret
xor
push
jno
stos
push
imul
push
out
xor
mov
push
aaa
mov
jne
xor
fs
cmp
arpl
ja
or
clc
bound
shll
cmp
cmp
dec
pop
sub
pop
and
fstpl
cmp
pop
sbb
and
pop
pop
cmp
call
pop
xchg
cmp
or
cmp
and
ds
pop
pop
fistpl
hlt
pop
lret
add
aaa
add
pop
das
xor
pop
inc
xor
pop
pop
xor
pop
std
xor
pop
mov
lods
pop
cmp
xor
adcb
test
push
jae
cli
push
push
ss
push
stc
ss
push
fidivl
test
xor
push
lcall
fnstsw
push
arpl
frstor
cmp
std
cmp
arpl
cmp
add
push
pusha
jne
xchg
cmp
lret
cmp
pusha
jp
mov
cmp
pop
sarl
pop
add
icebp
cmp
dec
pop
sti
ds
pop
aad
dec
pop
jp
and
aas
lds
pop
mov
add
dec
aaa
add
pop
sti
xor
pop
xor
dec
pop
pop
xor
push
lahf
xor
pop
out
xor
push
popf
xor
fidivs
push
mov
xor
mov
xor
add
aaa
inc
cmp
jge
je
mov
sbbb
sub
sbb
rcrb
add
aaa
add
aaa
add
xor
fs
aaa
add
aaa
add
add
aaa
add
pop
xor
pop
pop
xor
pop
mov
jmp
stos
xor
pop
mov
xor
pop
xchg
xor
aaa
add
dec
aaa
add
sbb
mov
cmp
pop
pop
cmp
or
add
push
inc
xor
cmp
push
pop
xor
imul
push
pop
and
cmp
cmp
pop
adc
sub
cmp
pop
jnp
adc
cmp
pop
imul
pop
arpl
cmp
cmp
pop
push
cmp
pop
dec
cmp
pop
inc
cmp
pop
mov
cmp
pop
add
stos
cmp
pop
mov
cmp
pop
mov
adc
cmp
push
sti
cmp
push
repz
push
jmp
adc
cmp
push
fstpt
xor
cmp
push
lret
cmp
push
ret
cmp
cmp
push
xor
push
sub
push
and
push
sbb
push
adc
push
or
push
add
push
jnp
adc
cmp
push
imul
arpl
push
pop
cmp
push
push
cmp
push
dec
cmp
push
inc
cmp
cmp
add
pusha
pushl
sti
pop
pop
ss
inc
shll
lcall
add
adc
sub
ss
pusha
lret
xor
aaa
push
popa
getsec
ja
add
fwait
popa
jnp
cmpsl
popa
pop
aaa
mov
xchg
repz
aaa
add
cmp
xor
cmp
cmp
push
pop
cmp
aas
cmp
push
mov
cmp
push
pop
cmp
push
outsl
cmp
push
pop
cmp
push
aas
cmp
push
xlat
cmp
push
das
cmp
push
push
cmp
push
jnp
pop
push
push
cmp
push
mov
add
cmp
push
out
aaa
push
cmp
daa
cmp
push
cmp
add
cmp
push
daa
cmp
push
aaa
add
add
dec
aaa
add
pop
or
mov
inc
pop
pop
xor
daa
pop
imul
pop
dec
xor
out
stos
xor
negl
xor
cmpsl
pop
jmp
scas
pop
sbbl
ss
pusha
lahf
ss
pusha
xchg
ss
ss
pusha
xchg
pop
pusha
jg
jnp
pop
aaa
fwait
pop
addr16
mov
pop
stos
aaa
ret
pop
mov
aaa
pop
fistpll
notl
cmp
push
lret
cmp
push
ret
cmp
add
cmp
dec
push
sub
jnp
sbb
mov
cmp
sbb
cmp
or
cmp
sti
push
pop
cmp
or
cmp
fistl
jecxz
mov
lret
push
stos
cmp
or
cmp
sbb
cmp
or
cmp
iret
push
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
int3
int3
int3
int3
int3
int3
push
mov
mov
and
pop
ret
int3
int3
int3
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
movb
mov
movb
mov
push
mov
push
call
add
mov
mov
push
mov
push
mov
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
jmp
mov
add
mov
mov
cmp
jae
movl
mov
add
movzbl
mov
mov
add
movzbl
cmp
je
mov
jmp
movl
jmp
xor
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
mov
lea
mov
mov
mov
mov
pop
ret
push
mov
sub
movl
mov
mov
lea
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
movb
mov
add
mov
mov
cmpl
je
mov
cmpl
je
cmpl
je
mov
mov
add
mov
mov
cmpl
je
mov
mov
sub
shr
mov
mov
add
mov
movl
jmp
mov
add
mov
mov
cmp
jae
mov
mov
movzwl
sar
cmp
jne
movl
mov
mov
movzwl
push
call
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
add
mov
mov
push
call
add
mov
cmpl
je
mov
add
mov
mov
cmpl
je
mov
mov
add
push
call
mov
mov
cmpl
je
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
add
mov
movl
mov
cmpl
je
mov
cmpl
je
movl
mov
cmpl
je
mov
mov
and
je
mov
mov
and
push
mov
push
call
add
mov
mov
jmp
mov
mov
mov
lea
push
mov
push
call
add
mov
mov
cmpl
je
mov
mov
mov
mov
mov
add
mov
mov
add
mov
jmp
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movb
movb
movb
movb
movb
movb
movb
mov
movb
mov
movb
lea
push
call
mov
mov
push
mov
push
call
add
mov
mov
push
mov
push
mov
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
xor
movb
xor
xor
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
je
cmpl
jne
xor
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
cmp
jne
xor
jmp
jmp
xor
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
movl
mov
movb
mov
movb
mov
push
mov
push
call
add
mov
push
mov
push
mov
mov
push
push
call
mov
cmpl
jne
mov
jmp
mov
mov
mov
mov
push
mov
push
mov
push
call
add
mov
sub
mov
mov
push
mov
push
call
add
mov
add
mov
xor
xor
dec
xor
add
inc
xor
xor
dec
mov
inc
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpl
jne
push
call
add
jmp
jmp
xor
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
cmpb
je
cmpb
je
jmp
pop
pop
mov
pop
ret
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
movb
mov
movb
mov
mov
mov
mov
push
mov
push
call
push
call
mov
lea
push
push
push
call
cmpl
je
movl
mov
and
je
movl
jmp
movl
cmpl
jne
movl
lea
push
push
push
call
cmpl
jne
xor
jmp
push
call
mov
mov
mov
mov
movb
mov
movb
mov
movb
mov
movb
mov
push
mov
push
call
mov
cmpl
jne
push
call
mov
mov
movb
mov
movb
mov
movb
mov
movb
mov
push
mov
push
call
mov
mov
mov
mov
mov
add
mov
mov
mov
movl
mov
push
call
mov
mov
mov
movl
mov
movb
mov
movb
mov
mov
mov
lea
push
push
push
call
cmpl
jne
int
xor
jmp
mov
mov
mov
mov
mov
mov
push
mov
push
call
mov
push
push
push
push
push
push
push
call
mov
cmpl
je
xor
jmp
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
cmp
jae
mov
jmp
jmp
mov
mov
pop
ret
int3
push
mov
sub
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
add
mov
mov
movzwl
mov
lea
mov
mov
movb
mov
push
mov
push
call
add
mov
push
push
mov
push
push
call
mov
mov
mov
push
mov
push
mov
push
call
add
movl
jmp
mov
add
mov
mov
movzwl
cmp
jae
mov
mov
mov
mov
mov
cmpl
je
mov
cmpl
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
xor
divl
mov
imul
push
mov
mov
add
push
mov
mov
add
push
call
add
mov
add
mov
jmp
mov
push
call
add
movl
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
push
mov
push
call
add
mov
cmpl
jne
mov
push
call
cmpl
jne
push
push
mov
push
mov
mov
push
call
mov
jmp
push
push
mov
push
push
call
mov
cmpl
jne
push
push
mov
push
push
call
mov
mov
mov
sub
mov
mov
push
mov
push
call
add
mov
mov
mov
mov
add
mov
mov
mov
push
mov
push
mov
push
call
add
mov
mov
add
mov
cmpl
jne
mov
push
mov
push
mov
push
call
add
mov
push
call
add
jmp
mov
movb
mov
push
mov
push
call
add
mov
mov
push
mov
mov
add
push
mov
push
call
add
mov
mov
add
mov
lea
push
push
push
mov
push
call
call
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
pop
pop
pop
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
call
add
mov
mov
push
push
mov
push
call
mov
pop
ret
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
xor
mov
mov
movl
movl
movl
push
call
add
test
jne
mov
jmp
push
mov
push
call
add
mov
call
mov
call
mov
cmpl
je
xor
jmp
mov
push
call
add
mov
mov
push
call
add
mov
mov
movb
mov
movb
mov
push
call
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
cmpl
je
movl
jmp
mov
add
mov
mov
cmp
jae
cmpl
je
mov
add
mov
add
mov
add
mov
cmpl
je
mov
push
call
add
cmpl
je
mov
add
mov
xor
mov
add
mov
jmp
mov
mov
xor
mov
xor
mov
movl
call
mov
lea
mov
mov
sub
mov
mov
push
call
add
mov
push
call
test
jne
xor
jmp
mov
add
cmpl
je
mov
mov
call
mov
push
ret
xor
mov
pop
ret
int3
pop
pop
add
mov
add
add
add
sbbb
xchg
pop
add
mov
pop
add
add
add
and
inc
gs
jb
arpl
fs
jae
add
icebp
add
fs
imul
add
hlt
add
fs
imul
add
out
inc
gs
popa
jae
inc
jb
outsl
jb
add
push
dec
inc
dec
xor
cs
insb
