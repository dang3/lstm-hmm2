call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
gs
in
aad
lds
not
loope
jne
gs
xor
and
add
xchg
in
aam
lds
xchg
cmc
test
xor
inc
and
adc
xchg
in
aad
lds
xchg
cmc
test
jne
gs
and
dec
adc
out
int3
cltd
fstl
shrb
outsb
hlt
mulb
pop
cld
adc
cmp
mov
inc
decb
or
mov
stos
inc
pop
std
lock
add
cli
or
enter
fimull
xchg
in
fcmovu
movsb
mov
push
push
lock
inc
xor
jne
inc
in
xchg
lock
fnsave
shl
mov
mov
mov
jne
test
gs
aad
jbe
add
loope
aad
in
sub
lods
dec
xchg
lahf
test
sbb
lret
pushw
dec
inc
nop
jne
fwait
or
movsl
inc
in
aam
or
mov
push
and
enter
and
jo
xchg
in
aad
lds
xchg
cmc
test
jne
gs
xor
jne
or
xchg
mov
movsl
divb
loopne
sbb
push
and
push
imul
stos
lock
loopne
rorb
mov
pop
or
and
cmp
inc
and
or
in
hlt
sti
movsl
lds
adc
inc
and
adc
xchg
in
aad
lds
xchg
cmc
test
jne
gs
xor
jne
gs
xchg
loopne
pop
pop
xchg
addr16
mov
jno
cld
cmp
jne
inc
xor
jb
or
mov
nopl
mov
sub
scas
xchg
xor
ret
sub
dec
jmp
add
xlat
fisubrl
mov
push
leave
mov
inc
int3
jl
out
mov
cmp
adc
shlb
bound
sub
movsl
rcrb
in
pop
cld
fs
popf
add
xchg
adc
sahf
dec
icebp
mov
xor
sub
or
xchg
loop
mov
lret
fsubl
adc
test
addb
adc
xlat
jb
and
in
mov
pop
test
jo
mov
fnsave
inc
xlat
lahf
mov
inc
sub
in
jbe
rcpps
js,pt
movzbl
mov
xchg
sarb
add
mov
pop
rcrb
pusha
lds
shlb
mov
mov
fs
jne
or
adc
sbb
cmp
add
test
imul
enter
pop
movsb
scas
adc
popa
dec
rclb
cli
test
es
inc
lds
int
out
adc
int
shll
fidivs
pop
insb
movaps
stc
negl
sti
loope
xbegin
xchg
into
imul
lock
cmpsl
inc
lds
mov
and
data16
popf
mov
cli
push
pop
xchg
mov
scas
mov
out
iret
ficomps
loopne
inc
stos
sbb
dec
mov
sti
jecxz
movsb
and
and
adc
shrb
inc
ret
xor
leave
std
and
pop
cmc
loopne
ficoml
and
xchg
lea
jge
pop
lahf
xor
push
xor
mov
enter
arpl
sahf
por
mov
adc
jge
mov
jae
xor
fildll
pop
adc
insl
popa
les
sbbb
sbb
and
aas
push
pushf
fs
pop
popa
repz
mov
cmp
xlat
add
push
out
mov
adc
inc
add
push
add
pop
pop
mov
loop
es
sbb
sub
inc
fdivs
cmp
aam
cltd
mov
jmp
cmc
mov
loop
xor
lock
test
cmpsl
or
add
das
ss
sub
and
or
je
pusha
fsubrs
or
in
dec
data16
cs
hlt
and
insl
push
or
mov
jp
jg
out
fstp
sbb
mov
cmp
outsl
dec
imul
lock
fcompp
xchg
ficomps
and
ret
dec
lret
fdivrs
cvtpi2ps
xlat
repz
sete
push
lahf
xchg
push
dec
imul
insl
out
test
push
push
and
sbb
loopne
or
and
iret
testl
jbe
icebp
and
mov
inc
clc
movsb
in
push
cmp
lahf
out
add
outsb
or
inc
cwtl
cmp
lods
test
dec
or
mov
mov
repnz
lahf
cmp
fidivrl
test
xchg
cmpsb
xchg
rolb
inc
rcrl
test
enter
mov
ficoml
lea
faddl
dec
repnz
scas
lods
clc
dec
lods
xchg
mov
mov
inc
jae
mov
andb
pop
and
daa
mov
out
push
sub
out
mov
adc
out
and
adc
lods
jb
jp
and
and
mov
inc
jns
inc
cmp
loop
jbe
mov
adc
mov
int3
fidivrs
or
outsb
popf
push
cltd
pop
and
stos
add
cltd
aaa
out
mov
sub
mov
fcoml
or
test
ret
outsl
xor
divl
lcall
loope
xor
rol
sub
mov
adc
dec
test
int
lret
addr16
push
pop
incl
aam
imul
lds
cs
or
jg
in
mov
adc
push
repz
dec
mov
jnp
inc
xchg
sbb
movlps
xchg
das
jno
int
add
icebp
mov
repz
insb
and
aaa
ds
inc
cltd
mov
mov
jns
cltd
dec
js
mov
cwtl
insb
mov
aaa
pop
jg
int3
mov
inc
cltd
dec
adc
mov
cmp
xor
push
fwait
sti
rclb
fisubl
sahf
aas
fs
mov
pop
mov
mov
stos
xchg
mov
push
xchg
std
sbb
dec
jb
in
adc
je
in
popf
testl
mov
repz
inc
arpl
add
es
stos
dec
xchg
ss
pop
outsl
add
and
jg
movsb
jmp
dec
or
cmpsb
or
push
in
add
inc
cmpsl
dec
in
sub
pushf
out
pop
xor
sub
ret
fsubp
mov
fcmovb
mov
fdivl
ret
pusha
and
mov
dec
leave
mov
sti
pop
and
mov
mov
xlat
out
cld
stc
int
repz
add
lret
adc
js
popa
popa
popw
mov
outsb
rorl
std
and
fisubs
adc
add
and
js
dec
ds
jnp
push
sub
jne
arpl
sahf
ss
daa
nop
subb
stos
fwait
int3
scas
adc
daa
lds
sub
daa
jo
fcomi
aaa
lods
sbb
sub
push
adc
imul
xchg
add
pop
sub
sbb
push
pop
or
sahf
push
xor
scas
xor
lret
push
cmp
clc
mov
lds
das
sbb
inc
aad
loopne
jmp
or
mov
inc
lret
push
xchg
jle
arpl
inc
sub
adc
sbb
inc
daa
sub
mov
test
jno
dec
shl
pop
add
xchg
jge
adc
pop
jecxz
inc
cld
repnz
stos
sahf
xor
ficoms
inc
push
call
push
sub
sbb
cmp
clc
xchg
push
xor
jge
fchs
jge
mov
sbb
mov
inc
test
push
cwtl
mov
cmpsl
sub
push
ret
or
sub
jmp
mov
sbb
arpl
outsb
imul
notl
call
repnz
stos
int
push
rcrb
int3
aaa
loopne
imul
xchg
add
jns
iret
out
lock
jns
adc
inc
mov
js
pop
mov
dec
and
outsl
rclb
scas
cmp
sub
xchg
js
xchg
mov
and
movb
mov
pop
jb
xchg
enter
insb
cmp
xchg
mov
pop
arpl
and
adc
dec
repnz
icebp
mov
push
sub
or
cs
or
cwtl
mov
rcrb
into
cmp
cs
or
ficoml
out
mov
pop
cmp
and
push
das
inc
inc
pop
xor
shl
fnstcw
mov
mov
dec
xor
push
lahf
and
out
fsubs
pushf
pop
xchg
jne
ret
dec
sbb
push
xchg
mov
mov
movl
test
daa
addl
mov
jmp
mov
mov
fcmovnbe
cmpsb
push
and
and
or
iret
pop
cld
pushf
idivb
mov
mov
and
push
add
gs
sahf
ss
lcall
outsb
pushf
ss
rol
add
popa
or
out
das
dec
mov
cmc
sub
fldenv
pop
push
push
aam
push
fs
aad
fcom
mov
xor
push
cmp
mov
push
addr16
push
xlat
scas
dec
test
je
push
and
add
xchg
mov
inc
mov
aaa
insb
addr16
or
dec
jp
dec
push
sbb
jle
hlt
mov
test
fcomps
call
jp
sub
or
jnp
push
pop
and
das
popa
push
dec
fs
jno
dec
mov
xchg
dec
das
and
mov
push
lods
les
iret
test
popl
rorb
test
mov
push
mov
sub
dec
mov
scas
mov
push
xor
dec
jle
mov
gs
adc
test
ret
popf
movsb
dec
popf
jnp
cmpsb
rclb
lret
ss
leave
or
insl
sbb
les
dec
shlb
pop
lret
movb
inc
cmc
cmp
fcomi
fs
faddl
test
mov
push
mov
push
inc
inc
dec
sbb
push
mov
add
dec
mov
mov
mov
mov
jno
cmpsl
les
xchg
pop
je
mov
adc
fnstenv
stos
test
push
jne
iret
stos
testb
push
and
iret
nop
xchg
mov
aaa
mov
cmpsb
ret
daa
xor
dec
decb
sub
mov
dec
dec
mov
jmp
es
mov
sbb
jb
xor
cld
fisubrl
cmp
mov
and
add
aas
mov
pop
jnp
cmp
inc
push
addr16
mov
into
pop
cld
push
lods
xchg
cmpsl
test
imulb
clc
sbb
call
std
out
in
cwtl
or
jl
jmp
or
imul
inc
scas
out
dec
outsb
out
sahf
fsub
mov
add
int3
dec
ret
cmpsb
popf
jge
cmp
lock
cli
inc
loop
fiaddl
fwait
xchg
sub
sub
movsb
and
and
lcall
push
daa
mov
push
ret
jl
bound
pop
jb
xchg
fadds
mov
orb
cld
dec
scas
dec
sahf
xchg
push
mov
mov
mov
hlt
push
popa
in
daa
pop
loope
jb
cmp
mov
out
outsb
jle
inc
inc
test
pop
int
sub
subl
loope
or
jns
and
pop
sbb
sub
inc
divl
cld
push
lahf
and
ljmp
ret
xchg
pop
mov
inc
pusha
int3
ficoms
pop
mov
or
mov
add
sub
cmp
dec
push
or
cltd
or
loope
mov
ret
mov
cmp
jecxz
cmpsb
push
mov
aam
adc
xchg
fadds
scas
mov
mov
aas
sbb
xchg
lea
inc
add
cld
dec
push
cltd
andl
adc
in
cmpsl
inc
lds
repz
aas
inc
mov
adc
cmp
sbb
mov
iret
mov
fucomp
mov
mov
lds
xor
test
xlat
mov
inc
cwtl
mov
stos
jne
sub
sbb
sub
in
or
addr16
jmp
cmp
mov
sti
add
cmp
push
out
loope
loope
sbbb
fidivs
pop
into
pop
cmpsb
add
mov
mov
cmp
ss
in
mov
mov
lock
out
and
xor
fistps
scas
cmp
imull
inc
jl
outsb
aaa
adc
adc
lods
mov
lahf
jl
xchg
push
pop
push
arpl
xchg
hlt
mov
pop
sbb
mov
pop
roll
dec
mov
pop
mov
sbb
test
or
or
pusha
pop
sub
xchg
sti
or
enter
pop
mov
push
js
xor
sbb
aas
fistpl
fstpt
aas
mov
xor
rcrb
in
rclb
fisubrl
mov
pop
jne
sbb
dec
cmp
test
aad
cmpsl
popa
sub
cmp
and
stc
movsb
add
jge,pt
popf
lock
stos
out
movsl
inc
es
fwait
cmp
je
and
lcall
adc
mov
cwtl
push
pop
inc
scas
addb
adc
inc
jb
xor
push
mov
sbb
mov
movsl
xor
pop
addr16
pop
lahf
stos
fdivl
imul
adcl
test
scas
mov
jnp
pop
scas
stos
mov
xchg
mov
pop
sub
push
jp
add
xor
pusha
rol
sub
xor
outsl
mov
shlb
mov
shl
in
mov
or
xchg
in
mov
jae
pop
sub
ja
jg
incl
mov
in
xchg
scas
mov
sub
nop
lds
mov
xlat
add
or
fnstcw
pop
xchg
out
test
arpl
mov
add
and
push
or
dec
cld
test
sbb
jg
bound
dec
or
xor
inc
pop
les
ss
pop
xor
or
lret
int
and
adc
mulb
aas
mov
je
lret
loope
jle
add
out
insl
mov
add
xlat
mov
pop
loopne
cmc
and
mov
xor
fwait
cld
xchg
loop
int
lea
or
pop
xchg
adc
fmull
outsb
pop
int
shl
in
pop
sub
mov
mov
cltd
bnd
in
and
std
jno
cld
push
ss
cs
ret
mov
mov
pop
ret
xchg
sub
push
dec
pop
mov
out
aaa
fists
lcall
xlat
push
out
mov
loop
loop
or
add
sbb
inc
jnp
fnstenv
xchg
inc
add
cld
push
je
subb
sbb
mov
mov
lea
popf
push
lods
ljmp
in
mov
out
mov
adc
mov
mov
sbb
aas
adc
push
mov
icebp
add
pop
iret
pop
cmp
loop
pushf
mov
aam
mov
mov
in
jg
xor
je
test
movsl
dec
cld
ja
movsb
push
gs
outsl
cs
sub
pop
pusha
inc
xchg
fcmovb
fwait
pop
sbb
stos
add
andl
stos
test
add
mov
imul
ds
mov
leave
pusha
add
xchg
lahf
inc
test
test
mov
xchg
adcb
dec
jmp
sbb
dec
cmp
jge
or
push
mov
jle
outsl
imull
cld
push
cld
popa
pop
in
mov
imul
into
shr
cltd
gs
mov
inc
hlt
aaa
and
sub
mov
shrb
leave
push
sub
xchg
fisttps
mov
jno
js
xor
hlt
mov
lcall
cmp
xor
mov
mov
xor
fldenv
loop
loop
test
pop
mov
daa
or
mov
sub
enter
lods
mov
lea
xlat
jecxz
pop
mov
jno
daa
popa
push
xchg
out
mov
jbe
out
stos
pusha
cld
push
lret
call
les
imul
cld
cltd
and
and
pop
leave
cld
loope
aas
jns
lret
push
std
sbb
mov
jbe
popf
xchg
ficoms
outsl
clc
arpl
fmull
jno
testb
lods
mov
xchg
out
cmp
inc
xorl
nop
pop
pop
movsb
add
je
mov
mov
mov
jmp
dec
fs
fcmovnu
sbbb
repnz
ficoms
or
xchg
jae
jbe
aam
xchg
cmc
push
adcl
insb
pop
cld
mov
dec
mov
jbe
push
push
pushf
fiaddl
xor
loope
pusha
aam
lret
bound
lcall
xor
push
adc
xor
mov
test
xchg
cltd
xchg
pop
pop
dec
push
loop
add
jae
inc
mov
mov
xor
cmp
popa
bound
dec
mov
cmp
imul
mov
xchg
adc
inc
and
xor
push
in
push
fildll
out
xor
and
mov
mov
cmp
jns
sbb
sbb
jns
push
ds
dec
mov
je
divl
scas
repz
sbb
cmc
cltd
jecxz
jl
cli
sahf
rcl
aad
mov
and
out
and
call
imul
mov
or
pop
jo
mov
arpl
dec
cmp
add
cmpsl
outsb
xchg
stc
mov
roll
mov
cmp
mov
loopne
and
iret
dec
fucom
add
test
xor
stos
xchg
pop
and
mov
loope
scas
pop
or
imulb
mov
stos
pop
mov
mov
out
inc
mov
push
mov
sbb
push
adc
lods
lcall
and
clc
mov
pop
xlat
outsb
push
aaa
adc
jb
cmp
int3
fwait
adc
jl
insl
cmp
mov
iret
loope
mov
sbb
mov
pushf
sub
pop
sbb
pop
xchg
dec
sbb
fdivrp
pushf
jp
test
pushf
test
or
jl
lret
cmpl
and
pop
pop
addr16
jmp
and
xor
es
nop
bound
bound
xchg
aam
push
test
inc
pop
fldl
addl
rorb
mov
mov
std
xchg
out
xchg
sub
and
mov
sbb
mov
inc
sub
dec
rorl
pop
push
repz
sarl
and
cmp
bound
mov
dec
popf
push
pop
shlb
arpl
pop
shl
outsb
lock
xchg
mov
stos
nop
loope
aaa
insl
dec
test
ja
shll
jl
sub
or
cwtl
mov
mov
pop
add
ret
ljmp
dec
xchg
mov
test
dec
pop
loopne
ret
push
fcoml
sub
or
xor
xchg
int
out
int
sti
add
mov
mov
sahf
cwtl
inc
adc
ret
fidivrs
mov
shl
jle
repz
scas
mov
sub
es
ss
outsb
gs
mov
mull
je
sbb
mov
xor
popf
cmp
push
hlt
xor
xchg
inc
lods
hlt
test
jmp
cmp
cltd
sub
cmpsl
jmp
lea
jb
push
mov
cwtl
mov
adc
into
and
test
divl
jp
sti
rcll
sahf
jle
or
sarl
mov
pop
mov
lahf
cmp
sbb
mov
std
stos
out
add
adc
push
cmpsl
add
es
cmp
sbb
fisttps
mov
outsb
loope
jo
xor
aas
and
dec
lock
jge
in
out
in
mov
add
stc
ss
ret
leave
add
andb
arpl
pusha
mov
mov
fidivl
xchg
adc
aad
jae
cltd
in
pop
or
imul
add
and
leave
push
fnstenv
sub
je
add
rol
addb
and
jns
push
dec
cmpsl
or
aad
pop
les
int
mov
inc
bound
adc
pushf
xchg
loopne
jbe
sahf
or
or
repz
mov
sbb
push
inc
sbb
sbb
leave
lea
mov
loopne
push
rorb
cli
push
movsb
jp
xchg
int3
sbb
adc
xchg
dec
sub
mov
cwtl
xchg
mov
lds
dec
lret
mov
dec
das
add
dec
pusha
pop
cmp
pop
int3
dec
push
dec
push
sub
adc
jns
scas
mov
push
pop
jp
ds
sub
flds
mov
out
dec
bound
sahf
mov
pop
addr16
or
stos
xor
jne
lock
or
jo
mov
popf
lods
jbe
xor
or
adc
adcb
add
sahf
fcomps
jae
lahf
jge
mov
add
jnp
into
and
stos
jb
das
adc
pop
icebp
fimuls
ficoml
stos
fxch
cmp
je
lret
cmpsl
inc
and
jl
xchg
jle
int3
nop
push
mov
add
addr16
scas
fstpl
cli
test
jp
loope
push
repz
pop
insl
lods
add
xchg
mov
xor
lea
scas
iret
hlt
adc
xor
push
inc
jecxz
mov
cmp
xor
sahf
fsubrl
mov
dec
mov
outsl
pop
lcall
sbb
jmp
pop
rclb
adc
add
pop
enter
mov
xor
xchg
inc
loope
and
inc
call
add
test
lea
stos
dec
in
movsl
push
xchg
shrb
hlt
rolb
in
pop
insb
push
mov
xor
add
outsl
bswap
fcomps
push
cmp
or
sub
dec
xchg
xor
rclb
xchg
mov
add
pop
addb
scas
add
and
aas
sub
push
mov
pop
loope
or
fbld
xchg
arpl
out
xchg
mov
movsl
lds
adc
inc
and
adc
xchg
in
aad
lds
xchg
cmc
test
jne
gs
xor
jne
gs
xchg
in
aad
lds
xchg
cmc
test
jne
gs
xor
jne
gs
xchg
in
aam
lds
xchg
cmc
test
jne
gs
pushl
lods
mov
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
sbb
or
cmp
sub
out
imul
lcall
cwtl
fucomi
leave
stc
jmp
jmp
sbb
or
cmp
sub
pop
push
imul
mov
clc
sti
enter
sub
cmp
or
sbb
push
js
dec
imul
test
in
shl
fldt
mov
dec
cmp
jge
rorb
mov
sub
xor
repz
popa
lret
aaa
ficompl
sub
sub
xchg
xchg
jno
dec
cmc
inc
rcrb
mov
push
lea
jo
mov
cmp
clc
enter
cwtl
and
stos
fwait
int3
test
mov
fistl
aaa
sti
inc
jmp
sbb
cmovle
push
adc
mov
sbb
jo
jmp
dec
call
lret
adc
sbb
lods
mov
mov
sti
cmp
jno
jl,pn
aam
movsb
daa
dec
repz
arpl
fs
mov
sahf
stc
cwtl
test
enter
sub
cmp
or
sbb
js
dec
jb
subb
cwtl
ret
call
jmp
ja
outsb
inc
pop
dec
pop
pop
sub
sub
sub
fsub
mov
fistpl
mov
push
inc
pop
jnp
sub
jnp
cmp
int
lret
ljmp
lods
mov
imul
pusha
adc
js
dec
imul
mov
fucomi
lret
clc
sti
enter
sub
cmp
or
sbb
dec
js
dec
imul
mov
fucomi
lret
clc
sti
enter
sub
test
fbstp
popf
sub
jns
scas
mov
push
cli
mov
and
test
add
repz
push
shr
push
fimuls
mov
sub
inc
aas
sbb
int3
push
jno
imul
mov
adc
insb
aaa
xor
push
aad
xchg
test
cmp
or
cmp
or
pop
popa
dec
insb
jne
ror
jecxz
push
pushf
xchg
sub
add
xor
daa
rcl
scas
insb
mov
xor
sub
mov
jmp
xchg
or
pop
aad
mov
fidivl
adc
cmp
pop
sbb
arpl
out
div
xchg
or
or
inc
push
adc
movsl
frstor
enter
xchg
mov
and
int
sti
jb
sbb
push
mov
cmp
outsl
mov
mov
or
ss
movsb
xchg
sti
loope
cmp
adc
fldl2e
aad
pop
cmp
mov
sbb
cmp
into
add
outsb
xchg
jae
mov
mov
es
mov
std
push
adc
sbb
mov
testl
push
xchg
cli
out
cmpsb
inc
shll
andb
mov
adc
test
es
jb
xchg
push
push
sbb
sarl
xchg
cltd
xlat
loopne
loop
cmp
jl
push
sub
repnz
add
lods
movsb
add
leave
mov
add
pop
push
mov
cmpsb
scas
fwait
sbb
out
dec
dec
push
enter
iret
jns
adc
mov
gs
or
xorl
lret
jae
fsubrl
aam
mov
xchg
adc
je
loopne
cld
popa
adc
sahf
fsubrs
enter
fisubl
cmp
cmpsl
js
pop
add
sbb
xchg
xchg
sbbl
push
xlat
mov
xor
lods
das
cmp
jp
inc
inc
dec
sbb
adc
insb
adc
and
popf
nop
mov
pop
xchg
jmp
cmp
inc
dec
std
or
dec
out
out
lret
mov
repnz
stos
lds
xchg
aas
push
outsl
sub
adc
movsl
and
in
mov
sahf
push
leave
mov
iret
int3
inc
or
int
rcrb
aaa
xor
test
fdivr
mov
bound
fwait
sub
rolb
cmp
sarl
arpl
fsubs
jg
andb
leave
xchg
test
out
adc
jno
push
xchg
ficoms
pop
inc
or
test
inc
cld
mov
push
scas
icebp
xor
nop
setnp
hlt
xchg
ret
repz
sbb
push
addr16
addl
fildll
movsl
or
cltd
adc
lods
fwait
cmp
into
stc
dec
push
sbb
dec
outsl
rcll
lcall
inc
mov
imul
popf
or
xchg
call
cmpsb
out
icebp
inc
std
mov
outsb
clc
and
mov
lds
jle
ds
push
aaa
jp
jb
or
dec
cmp
add
adc
inc
shlb
int3
jnp
inc
pusha
mov
push
inc
sbb
sub
mov
mov
push
or
and
add
inc
inc
sbb
nop
push
pop
loopne
push
mov
jb
push
push
cltd
out
fsubrs
outsl
testl
aas
test
sbb
orb
outsb
dec
lock
adc
fwait
mov
sub
shl
clc
and
xor
loope
mov
mov
lret
fidivs
roll
int
pushf
pop
insl
add
incb
jp
loop
addr16
jp
iret
or
jo
mov
and
cmc
out
les
sub
pop
push
imul
data16
pushf
clc
pop
push
cmpb
rcr
jne
mov
sbb
pop
mov
sub
stc
cmp
cmp
pop
pop
in
mov
or
mov
mov
cmp
and
and
sub
out
pushf
imul
hlt
lahf
popf
xchg
mov
fidivs
add
sbb
scas
xor
xchg
and
fs
mov
arpl
push
jnp
mov
jae
xchg
std
push
mov
shll
inc
and
or
hlt
imul
lods
mov
cmp
and
xor
loop
or
cmp
push
subl
push
test
adc
ss
cmp
adc
inc
cmp
cmp
push
cld
adc
add
xor
imul
mov
pop
shrl
or
push
insb
sub
insb
call
mov
xor
xchg
jmp
push
mov
cmpsl
addr16
fwait
pop
mov
jecxz
jbe
in
pushl
pop
sbb
pusha
dec
cmp
mov
pop
inc
mov
sti
mov
mov
lret
or
cmc
rcll
and
scas
jnp
mov
sbb
in
jge
xchg
hlt
ret
pop
mov
dec
inc
mov
lds
inc
repz
fists
ret
ret
ficomps
xor
jae
outsl
pop
scas
sbb
jne
cmpsb
into
mov
cli
arpl
inc
ret
stos
in
sub
in
mov
lea
xor
imul
imull
into
or
fwait
mov
lahf
mov
push
sbb
popa
xlat
lea
lret
xchg
popa
jo
loop
and
lock
aas
cmpsl
shr
sub
mov
inc
add
mov
jg
push
or
roll
or
out
cmp
test
imul
fs
lcall
fsubrp
lret
pop
repnz
xchg
outsl
add
leave
push
test
mov
or
ja
mov
ss
scas
mov
mov
fisubrl
xor
xor
xchg
jmp
cmp
cld
pop
jmp
pop
mov
and
cld
push
sub
or
and
mov
xor
lret
out
or
out
jo
aam
and
outsb
pop
fstpl
mov
or
ret
fstp
jne
push
mov
push
scas
lea
lret
outsl
push
or
xchg
xor
aad
sub
stos
jnp
push
dec
rcrl
or
inc
lret
xorl
add
jg
in
into
adc
pop
adc
jns
pop
int
mov
or
jge
dec
mov
push
mov
cmc
jns
and
repz
outsl
outsl
dec
pusha
mov
lds
and
mov
ret
or
in
int3
and
out
stc
add
clc
fstpl
mov
mov
cmp
xchg
rcrl
dec
inc
lods
pop
pop
out
or
stc
jecxz
lock
jmp
add
mov
test
fldt
inc
movsb
mov
jb
stc
notl
rorl
test
mov
ja
icebp
es
lods
fisubrl
repnz
adc
lcall
fs
cmpb
stc
fiaddl
rcll
and
popa
jge
fiaddl
rcll
pop
imul
or
sub
lods
add
dec
outsb
out
sub
in
stc
ja
and
cli
sub
popa
in
fisttpl
andl
and
aam
mov
mov
pop
xchg
jmp
adc
sbb
mov
daa
rol
inc
stos
mov
sbb
mov
icebp
fimuls
mov
cli
sti
aaa
pushf
mov
cmpsb
mov
loopne
clc
ja
push
popa
out
iret
mov
jns
sahf
add
pop
sbb
jo
decl
mov
hlt
popf
dec
fcoms
xor
add
subb
mov
mov
mov
cld
fcmovnu
lock
in
sbb
adc
inc
mov
sbb
insb
mov
in
cmp
mov
jae
mov
subl
cld
lahf
fiaddl
leave
cltd
lds
int
es
push
jae
pop
mov
add
repz
push
xor
fadds
cmpsb
add
xchg
repz
push
addr16
adc
push
sbb
xchg
or
jns
enter
adc
jge
call
xor
sahf
out
xor
pushf
arpl
adc
mov
cld
mov
aad
psraw
and
in
pop
mov
mov
std
in
pop
xor
sbb
mov
xor
push
jge
jecxz
mov
or
jae
movsl
popf
aas
mov
mov
xlat
scas
insl
arpl
in
jp
mov
adc
pop
adc
add
insb
loop
stos
in
cmp
adc
inc
jge
push
add
mov
push
dec
aaa
insl
sub
imul
rclb
xchg
add
aaa
aad
and
mov
inc
add
jmp
imul
pop
stos
cld
aas
jge
insb
mov
sbb
outsb
pop
adc
or
std
inc
mov
std
cmp
fcompl
pop
inc
shlb
or
ror
mov
loop
fsubrs
data16
xor
rcll
lret
fisubrs
pop
int3
xor
leave
mov
xchg
mov
or
sbb
icebp
test
inc
push
push
lcall
test
jp
pop
orl
push
out
popf
mov
jmp
ret
fs
cwtl
add
jecxz
ss
popf
pop
lcall
cmp
cmp
icebp
int3
fwait
mov
jbe
and
shll
daa
pusha
sbb
cmp
push
in
jmp
pop
addr16
in
jl
pop
test
cmc
lods
adc
xchg
icebp
iret
mov
loope
repnz
int
aad
div
lock
push
outsb
icebp
shr
lret
sti
into
xchg
jle,pn
add
in
gs
popf
mov
xchg
cwtl
pop
mov
dec
pop
jle
xchg
inc
and
imul
repnz
ret
adc
ds
fstpt
out
dec
outsb
inc
pop
cld
push
and
in
mov
push
xor
int
pop
scas
daa
cmp
out
mov
movsb
sub
inc
xchg
sub
arpl
inc
ds
fwait
inc
mov
cld
inc
leave
das
fdivl
sub
in
jo
xor
lret
shll
andl
adc
jbe
jecxz
mov
mov
cwtl
popf
stos
pop
ret
fcmovne
or
int3
sub
cld
and
mov
dec
xor
aam
lret
fwait
inc
adc
or
add
pusha
and
inc
lret
push
or
cmp
sub
ds
mov
sub
in
int3
jae
gs
fldl
sti
cmp
iret
insb
out
imul
pop
cmp
ljmp
or
dec
stos
xor
stc
mov
pop
jp
sbb
jns
cmpsl
push
aaa
ror
mov
push
mov
dec
jecxz
movl
gs
lds
notl
ljmp
sbb
clc
push
into
xor
insb
outsl
lds
and
js
call
dec
out
and
xor
mov
addr16
scas
sub
rcrl
int
fldl
jp
sbb
ret
adc
stos
das
mov
xor
mov
cmpl
fimuls
and
pop
pop
hlt
addr16
ret
stc
pop
das
stc
cmpsb
xor
dec
or
or
lret
push
mov
subl
lea
jae
mulb
mov
leave
add
bnd
jle
insl
pop
xor
and
inc
push
ljmp
mov
repnz
inc
test
jge
rorl
in
insb
inc
xchg
call
mov
xor
inc
test
xor
stos
dec
ljmp
ficoms
shr
cld
add
mov
and
cwtl
push
loopne
jae
cli
shl
into
lahf
add
data16
cli
mov
inc
mov
fldt
mov
add
pop
jmp
mov
push
cmc
adc
xor
mov
xchg
inc
sub
fsubl
clc
adc
dec
int
fdivl
fdivrs
lret
aaa
inc
cmp
aam
sbb
lret
testl
bound
fiadds
mov
ds
iret
cmp
mov
lahf
pop
test
nop
rorl
enter
and
daa
into
and
int3
xor
fdivrp
es
sub
mov
pusha
push
cmc
adc
lret
les
jge
dec
xor
es
rorl
mov
cmpsl
fldl
sub
mov
and
enter
xchg
cld
idivb
cs
movsl
cs
sbb
jnp
jmp
xchg
inc
ficoml
pop
push
test
repnz
cmp
out
punpckhbw
rcl
movsl
fistpll
mov
cmp
mov
cmc
add
mov
xchg
inc
cmp
mov
leave
xchg
bound
les
xchg
dec
mov
insb
xor
lods
arpl
push
jge
and
lods
xor
dec
pop
push
int3
hlt
or
inc
aad
inc
test
stos
mov
sub
daa
jns
rolb
cmpsb
or
mov
mov
jge
xor
cmp
and
aaa
mov
mov
push
inc
push
popa
mov
mov
lea
dec
lahf
rorl
adc
cltd
aas
testl
cwtl
jbe
push
push
sahf
addr16
daa
data16
mov
fcomps
push
out
into
in
out
push
in
push
jnp
les
push
push
adc
test
push
mov
inc
push
rcrb
fwait
pusha
inc
mov
adc
add
ret
fucom
pop
mov
clc
imul
sub
int3
out
add
mulb
leave
out
daa
mov
and
pop
in
dec
test
movsb
test
cmc
dec
enter
inc
xchg
pop
push
fisubrl
test
mov
cmc
mov
xchg
add
loop
pop
mov
dec
jg
frstor
inc
inc
sbb
inc
mov
imul
xchg
mov
in
hlt
inc
insl
dec
push
rcrl
out
test
lea
dec
mov
ror
pushf
push
push
push
mov
aam
call
scas
adcb
scas
jecxz
dec
sbb
add
adc
and
push
out
movsb
aaa
sahf
xor
aam
jns
fadds
rcr
inc
cwtl
dec
gs
sub
mov
mov
ret
adc
push
sbb
cmp
cmp
mov
stos
cli
push
sbb
or
adc
div
int
fbstp
aaa
push
lods
int
scas
dec
je
out
adc
mov
mov
mull
inc
in
push
jmp
mov
pusha
lret
pop
out
add
clc
sub
loopne
jno
mov
leave
rcl
and
adc
stos
cmpsl
jg
inc
ljmp
dec
cmp
push
sahf
dec
cmp
or
in
test
in
iret
mov
scas
inc
push
xchg
cmp
shlb
popf
cmp
test
lahf
inc
mov
pop
or
mov
loopne
mov
adc
jg
sbb
jmp
mov
pop
addl
outsl
adc
cmpsl
pop
outsl
imulb
pop
xchg
mov
inc
add
pop
mov
inc
sarb
cld
sahf
ja
sti
or
dec
leave
pop
push
dec
cli
lcall
pop
pusha
int3
lcall
flds
dec
sahf
cltd
int
sbb
ret
push
mov
mov
ds
pop
sub
repnz
out
push
cmc
imul
mov
mov
sbb
stos
dec
cltd
dec
ss
mov
mov
mov
inc
shl
or
pushf
jl
daa
mov
popl
and
dec
ret
or
pop
xchg
inc
out
jmp
jecxz
dec
cwtl
stos
pop
push
jp
mov
repnz
das
inc
cltd
repz
mov
cli
dec
cmp
sub
outsl
xchg
add
mov
es
inc
xchg
cltd
xor
cmp
pop
insb
cmc
inc
mov
int3
add
jge
lock
int
loope
leave
mov
jp
sbb
lcall
call
sub
call
inc
lods
ja
push
clc
add
xor
leave
rcl
sbb
das
stos
cmp
pop
jbe
fildll
popf
stc
mov
gs
lahf
fidivl
jb
outsl
or
xor
or
fistl
push
insl
push
xchg
xchg
rcl
mov
push
mov
stos
cmp
mov
leave
or
push
xor
jno
push
subl
jl
or
or
fwait
adc
sub
jecxz
jae
loope
shlb
mov
ret
jne
repnz
repz
nop
rcrb
or
or
sub
scas
mov
mov
ss
sbb
cmp
loope
lret
xorl
push
enter
xor
pcmpgtb
and
arpl
stc
push
sbb
lods
das
and
or
bound
lret
cs
jbe
pop
push
adc
ret
mov
arpl
hlt
ret
dec
cmp
and
jb
or
sarb
push
fucomi
cmpsb
xor
repz
aas
sbb
mov
loope
inc
cld
loopne
loope
pop
sbb
lret
pop
pop
cmpb
fdivrl
and
inc
roll
or
test
aas
orl
out
fnstsw
pop
aaa
rcrl
or
mov
dec
int3
loop
add
lcall
popf
inc
cmp
sbb
cmp
mov
fisttpl
xor
pusha
loope
popa
data16
xchg
xor
xchg
jo
push
add
inc
hlt
mov
jge
sub
mov
fdivl
xchg
pop
pop
pop
iret
adcb
movsl
out
dec
mov
test
xchg
je
xchg
add
mov
aas
jo
add
stos
out
cli
sbb
push
jae
stos
orb
jmp
lods
jo
orl
adcb
cmc
jae
or
outsb
dec
lods
mov
push
mov
dec
jge
mov
stos
ret
dec
ja
subb
xchg
inc
and
xchg
xor
pop
vdivsd
or
sbb
sbb
mov
minps
xor
test
cmp
lods
adc
sub
subl
ret
xchg
repnz
lds
xchg
sbb
dec
add
or
add
sub
test
enter
add
lds
mov
out
cmc
out
jnp
inc
fnstsw
test
repnz
mov
cmc
pop
lock
scas
adc
ja
inc
lods
push
push
insb
fldcw
pop
test
fdivrs
mov
push
sbb
imul
sbbb
mov
xchg
cmp
jle
jb
cli
shlb
fdivrs
lods
pop
pop
lods
xchg
sti
push
sbb
fcoml
adc
test
xor
xchg
lret
js
ret
call
mov
mov
push
out
repnz
jb
inc
pop
mov
repnz
leave
in
dec
int3
mov
lea
gs
sub
ds
dec
lea
aaa
nop
sbb
jne
aad
cmpsb
sbb
xor
pop
inc
xor
xchg
mov
iret
xor
cmpsb
adc
xchg
test
jae
cli
sbb
lret
std
aas
push
xchg
cmp
sarl
and
fxtract
fisubl
push
fsubrs
dec
inc
mov
ret
negb
pushf
enter
dec
scas
mov
fwait
scas
xor
sti
lahf
jg
mov
pop
movsb
xchg
inc
mov
mov
add
in
daa
jae
lea
repz
insb
nop
icebp
xchg
mov
test
hlt
loopne
cmp
add
mov
pushf
addr16
psllq
ds
jp
andb
inc
push
xchg
xor
lods
std
ret
insl
mov
xchg
xor
frstor
xchg
lret
cmp
arpl
inc
data16
push
inc
adc
scas
std
lds
mov
jmp
rorb
jp
push
lahf
mov
adc
in
dec
stos
dec
lahf
or
outsl
jecxz
adc
adc
xchg
push
sub
cmpsb
clc
fwait
push
mov
dec
xchg
dec
in
jno
aas
mov
into
imul
adc
adc
push
jmp
loope
hlt
aaa
pop
int
call
inc
jg
movsb
adc
adc
aad
xchg
xchg
loopne
sub
ficoml
out
out
fwait
dec
lea
stc
push
xchg
outsb
arpl
cmpsb
frstor
fwait
xchg
inc
lds
lret
jge
aas
mov
fdivrs
jno
sti
fldl
imul
mov
int3
lock
and
add
test
xchg
pusha
rcll
sbb
mov
in
push
pop
das
loope
dec
dec
fmuls
sbbb
mov
sbb
push
jo
fsts
xchg
aaa
xchg
fwait
popf
push
fsts
or
outsb
fcmovnu
cmpsl
inc
daa
sbbb
mov
jnp
xchg
sahf
std
push
mov
bound
or
jecxz
mov
inc
and
inc
dec
test
cmpb
or
sbb
dec
js
dec
imul
mov
fucomi
lret
clc
sti
enter
sub
cmp
or
sbb
dec
js
dec
imul
mov
fucomi
lret
clc
sti
enter
sub
cmp
or
sbb
dec
js
dec
imul
mov
fucomi
lret
enter
sub
cmp
or
sbb
dec
js
dec
jmp
fs
adc
mov
pop
add
adc
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
in
cltd
std
mov
mov
int
call
sbb
dec
cmp
sub
jns
imul
mov
mov
jmp
cmp
pop
sub
jns
imul
mov
mov
jmp
ds
jae
inc
or
inc
sbb
imul
mov
or
cmp
jle
pop
sub
mov
cmp
cmp
xchg
imul
movsb
push
imul
cltd
sub
or
jecxz
adc
dec
push
lods
inc
lock
jae
insl
fsts
divl
pop
mov
push
data16
mov
fsubrs
mov
rol
rorl
push
sbb
add
jne
outsl
in
push
fnstenv
mov
pop
mov
js
cmp
sbb
jno
mov
jl
jb
push
insb
cmp
cmp
cmp
or
cltd
std
mov
mov
mov
jmp
dec
cmp
sub
jns
das
stos
hlt
xchg
pop
test
mov
mov
pushf
fcompl
cs
xor
xor
xor
dec
or
fmuls
jmp
shl
lea
jg
or
sbb
imul
test
cltd
std
movsb
int
stc
popf
jmp
dec
cmp
sub
jns
imul
mov
mov
jmp
dec
cmp
sub
jns
imul
dec
stc
js
sbb
fbstp
adcb
bound
outsl
movsb
ja
sbb
mov
out
rcrb
jmp
lods
dec
dec
test
xchg
mov
js
inc
repz
jo
mov
push
movl
adc
std
add
cmp
data16
jb
or
inc
adc
fisubs
out
jns
or
inc
jl
stc
cmovge
scas
aad
push
movsb
dec
mov
mov
in
jno
xchg
cld
ja
push
inc
gs
add
add
xlat
and
pop
pop
and
sbb
imul
fwait
scas
cltd
shlb
mov
push
fidivl
rcl
aaa
subl
mov
sbb
mov
sub
mov
jp
inc
cwtl
push
daa
sub
pop
mov
imulb
dec
xor
and
xchg
pop
push
dec
das
jns
pop
cmp
outsb
pop
pop
mov
in
insl
lock
xor
data16
cmp
pusha
cli
cmpsb
pushf
out
cmpsl
inc
sub
lds
imul
cmpsl
rclb
clc
addr16
testl
jns
addb
mov
fsub
frstor
loop
stos
js
loop
xor
js
out
test
movsb
stos
sbbl
iret
mov
outsb
push
fstpl
sbb
and
gs
scas
cmc
clc
jmp
pop
imul
add
sbb
pop
cmp
inc
cmpsl
xor
jp
stos
decb
jle
daa
leave
sbb
mov
pop
out
adc
lods
cmpl
add
sti
aaa
dec
call
out
fbld
cmp
inc
or
mov
jno
pop
leave
fildl
mov
and
int
inc
push
dec
loop
arpl
out
mov
data16
lret
or
imul
je
and
lds
and
pop
push
mov
scas
push
jp
js
sbb
sbb
loop
aas
mov
repnz
ss
sahf
bound
hlt
popa
fcmovu
cmp
pop
aas
dec
stos
int3
jp
inc
les
mov
jp
cli
out
mov
cmp
jbe
aam
pusha
push
inc
sub
cltd
cli
xchg
js
cmp
push
pop
mov
mov
mov
mov
iret
sbb
inc
imul
imul
fldl
jl
nop
or
pop
fistps
jnp
into
ret
inc
jmp
repnz
or
mov
sub
mov
mov
push
sbb
xor
daa
xor
cli
rcll
add
in
notl
inc
lahf
mov
loope
loop
bound
icebp
dec
add
cmp
sbb
sbb
mov
das
or
sti
lcall
shl
mov
jl
out
int3
rcrb
jbe
pop
sbb
sbb
aam
or
mov
aas
sub
adc
xor
shlb
adc
daa
in
movsl
ss
je
adc
mov
and
mov
std
pop
mov
dec
jmp
mov
add
aaa
lods
popa
sbb
js
and
dec
outsl
int
pop
das
xchg
push
xlat
lock
cmpsl
mov
rclb
mov
sti
test
mov
in
push
daa
out
or
sbbl
fs
cmpsb
das
ds
pop
mov
in
pop
rol
inc
jne
fcmovnb
shlb
jo
jmp
cmpsb
mov
mov
and
insb
cmpsb
stos
cmp
jg
sahf
mov
imull
arpl
push
mov
mov
movsb
int
int
shl
and
adc
fadd
cmp
out
repz
ss
in
jne
cmpsb
insl
je
fcmovne
aaa
les
out
mov
xchg
xchg
xor
rolb
mov
mov
mov
dec
add
xlat
sbbb
sbb
outsl
in
cmpsb
repz
jmp
adc
es
ss
mov
pop
insb
push
outsb
ss
out
pop
push
pop
pusha
jnp
mov
pushaw
pop
enter
outsb
cld
pusha
mov
je
push
mov
adc
scas
push
imul
jno
mov
fdivl
sbb
pop
pop
mov
jno
pop
cs
sub
inc
adc
push
pop
xchg
push
mov
in
outsl
mov
std
dec
in
add
fdivrs
stos
int3
pop
adc
loop
xor
and
jno
and
push
xor
dec
xor
int3
loop
das
mov
jmp
pop
pop
gs
fstcw
adc
adc
mov
xchg
fwait
add
mov
outsl
popa
xchg
mov
dec
jle
jg
test
xchg
mulps
call
aam
sha1rnds4
push
out
loop
push
addr16
lahf
lahf
xor
popf
add
shl
jnp
and
and
jge
and
push
jle
cltd
roll
ret
mov
add
incl
mov
iret
or
mov
inc
adc
lea
jmp
pop
mov
and
xchg
lods
loopne
inc
fmuls
pop
mov
xor
in
sbb
sbbb
aam
dec
jl
lcall
es
cmp
sbb
jp
mov
loopne
xor
dec
rcrl
jp
movsb
xchg
push
pop
lcall
sub
mov
dec
test
sbb
cmp
daa
out
lods
jl
jne
cmp
sub
jmp
cld
lret
idivb
jmp
mov
imul
pop
je
cmpsl
add
adc
adc
inc
es
xor
shr
dec
dec
mov
push
aaa
mov
xchg
cmc
adc
push
hlt
bndstx
xor
fists
or
lret
add
xchg
stc
loope
push
shlb
xor
push
icebp
fucom
dec
fdivrl
sub
sarb
xlat
xchg
push
cld
aaa
xorl
cmp
mov
push
xchg
lods
mov
sbb
mul
jp
jmp
xor
mov
jecxz
cs
movsb
lods
add
sahf
std
mov
or
std
stos
dec
xor
adc
jno
jmp
aas
add
mov
cltd
sub
out
jl
lret
pop
pop
jmp
xchg
cmp
ror
sub
imulb
xor
adc
in
test
imul
or
and
xlat
in
mov
test
jp
push
mov
call
inc
sub
cmc
or
dec
cmpsb
add
pusha
mov
or
pop
push
add
or
ja
jl
call
cmp
xor
add
daa
add
clc
mov
loopne
sbb
cmp
xchg
test
pushf
test
repz
xor
daa
inc
pop
xlat
mov
fbstp
mov
and
lods
add
sarb
push
mov
orb
test
add
mov
mov
xchg
mov
or
push
scas
popf
mov
bound
out
xchg
mov
outsl
dec
inc
mov
leave
adcl
mov
cmpsb
cmp
lods
and
mov
jge
cmp
mov
incl
inc
or
inc
popf
sub
pop
xchg
push
push
sbb
clc
roll
ljmp
adc
push
sbb
orl
mov
in
mov
push
mov
inc
jecxz
out
rol
std
mov
sbb
push
or
aas
adc
and
lock
cmp
xchg
popf
cmpsb
int3
decl
addr16
ds
mov
inc
ret
loopne
fisubrs
pop
cmpsb
sti
sub
lcall
inc
mov
xchg
mov
lret
cmp
pmaddwd
rcl
jbe
outsb
lds
ret
mov
sbb
shr
addr16
add
xchg
add
jnp,pt
push
adc
adc
dec
or
cmc
inc
cmc
jle
cli
gs
movsb
lods
jae
test
mov
scas
mov
pop
xchg
jecxz
mov
jmp
mov
mov
aad
mov
in
pop
imul
into
mov
call
adc
dec
es
in
arpl
cs
leave
push
cwtl
ds
jmp
shr
mov
enter
mov
fwait
dec
inc
push
sbb
sbb
in
dec
dec
test
mov
push
lahf
mov
and
clc
sarl
mov
push
and
lea
cmp
loopne
mov
add
inc
dec
push
mov
shrl
dec
lock
scas
popa
sarb
jp
xchg
faddl
dec
mov
xor
dec
xchg
mov
popf
and
loopne
mov
mov
sub
inc
xchg
mov
mov
pop
scas
fisttpll
jns
icebp
hlt
ss
pop
andb
mov
cmpb
out
insb
and
mov
jbe
mov
adc
clc
dec
dec
rol
rol
push
jg
jnp
dec
pusha
stc
sar
push
mov
imul
or
icebp
pop
das
das
in
in
dec
mov
es
rclb
std
dec
and
mov
js
lret
in
add
add
test
xor
lock
mov
add
adc
fstpl
adc
mov
rorb
mov
sub
adc
aas
push
cmpb
xor
mov
loop
call
jecxz
imul
cmp
inc
mov
xchg
push
faddp
cld
pop
inc
and
je
mov
or
dec
sub
xchg
scas
and
push
test
push
lcall
scas
int3
pop
xor
popf
movsl
xchg
pusha
add
push
dec
ret
dec
mov
imul
std
lahf
leave
mov
mov
cwtl
inc
or
sahf
pop
jmp
cmp
gs
jmp
ret
cmp
mov
in
add
je
jno
orl
jo
and
icebp
lcall
shr
ljmp
jns
fistpl
xchg
jns
in
rcrb
and
pop
mov
mov
add
jl
test
pop
fsubrl
aad
pop
lods
xor
or
pop
scas
pop
push
movups
lods
mov
xchg
ljmp
add
jae
sbb
xchg
subl
mov
push
iret
out
push
xchg
mov
push
jge
pop
roll
pop
sub
call
psubw
mov
cmp
mov
aas
or
sarb
popf
std
iret
scas
or
popa
mov
aam
jo
add
add
rcl
or
mov
fnclex
movsb
lods
mov
arpl
and
jle
mov
ds
push
stos
out
push
push
popa
inc
mov
gs
lcall
push
and
dec
dec
insl
sub
imul
and
aaa
xlat
enter
mov
inc
sub
les
hlt
jb
mov
mov
add
dec
add
shlb
dec
mov
jbe
or
stos
pop
stos
add
movb
hlt
fwait
cli
shll
adc
ss
mov
fisttpll
sub
cmp
cld
push
add
inc
out
leave
add
lock
fcos
sbbb
and
adc
xor
pop
jne
and
dec
mov
imul
pop
jl
add
les
pop
fstpl
mov
sub
cmc
or
in
stos
stos
sbb
sub
gs
out
pop
add
stc
scas
pop
push
mov
aaa
push
rcr
sub
sub
aam
andb
std
sub
sub
les
add
and
xchg
je
jge
std
pop
test
std
cmp
enter
lods
jo
xlat
add
adc
iret
cmp
sarb
mov
mov
icebp
fiadds
lods
mov
pop
test
push
adc
cmc
xchg
lret
leave
gs
xchg
or
xchg
daa
lods
xchg
xlat
adc
push
leave
div
cltd
adc
idivl
mov
test
cmpsb
dec
inc
jnp
test
divl
mov
pop
mov
mov
jno
in
in
ret
shl
xchg
push
cli
jmp
push
xor
push
xchg
push
mov
sti
hlt
sub
bound
loope
adc
aam
or
data16
pop
loop
mov
loope
nop
dec
mov
jg
mov
fidivrs
xchg
mov
aam
fistl
popf
xchg
mov
cmc
dec
mov
add
out
lods
loopne
push
insl
scas
lret
shlb
rolb
mov
test
and
jg
in
lea
in
or
pusha
loop
cmpsl
cmpsl
mov
fists
jns
mov
mov
gs
test
push
add
int3
outsb
int3
cli
lahf
aad
add
mov
aam
sar
xor
cmpsb
pop
adc
xchg
pop
daa
pop
push
bound
insb
lret
mov
add
out
dec
fiadds
cltd
mov
addr16
cmc
cltd
bound
aad
cld
inc
imul
fidivrl
push
pop
out
push
rcrl
inc
icebp
jp
das
in
test
rcr
ficoms
xlat
dec
arpl
aaa
inc
mov
cmp
cli
pop
add
mov
cmp
ja
jno
adc
jge
scas
mov
inc
das
fists
ss
call
mov
cmpsl
jbe
loopne
jns
lds
loopne
mov
inc
leave
or
and
aad
sub
sub
stc
dec
arpl
mov
pop
or
cmp
cmp
or
and
dec
icebp
std
and
adc
lods
mov
lret
sbb
scas
mov
stc
mov
loopne
adcb
xchg
inc
scas
dec
or
call
xlat
movsl
jno
jge
xchg
dec
or
cwtl
and
ret
ds
dec
jae
in
scas
pop
push
jle
mov
cmp
jo,pn
mov
push
mov
int
daa
inc
pushf
sub
hlt
fistl
or
jp
jns
sub
mov
mov
ret
ja
cmp
cmpl
test
inc
push
mov
inc
add
mov
flds
jns
ljmp
pop
mov
xchg
push
dec
mov
adcl
jmp
or
leave
js
and
mov
add
out
sbb
out
pusha
push
pop
jns
insl
out
jns
adc
scas
add
dec
mov
fs
pop
js
cmp
hlt
imul
mov
inc
mov
push
mov
or
outsb
addr16
int3
les
in
out
cwtl
cmpsb
leave
sahf
repz
dec
cmp
andb
lret
dec
cmp
lahf
inc
lds
repnz
fiadds
jl
xchg
cmpsb
sub
imul
cmc
add
and
cmpb
clc
sub
inc
push
push
mov
fwait
cmp
hlt
ss
xchg
cmp
mov
sahf
mov
inc
aad
leave
cli
test
ds
sti
in
fnclex
inc
outsl
mov
dec
into
es
rorl
add
push
or
leave
mov
jo
sar
jne
cwtl
inc
push
sbb
in
ljmp
sub
aaa
movsl
xchg
adc
fimull
shll
add
iret
cmp
mov
mov
es
std
jno
stos
push
push
adc
add
fdivl
adc
test
adc
push
adc
cltd
clc
repz
and
mov
cmpsl
mov
call
insb
adc
dec
daa
fisubrs
xor
sub
out
or
jno
adc
cmp
push
insb
out
ljmp
pusha
pop
cmp
daa
nop
xor
pop
pop
mov
stos
ret
cltd
inc
mov
bound
jne
fnstenv
cmp
pop
nop
mov
int3
and
lahf
cs
dec
clc
sbb
inc
sub
xchg
adc
mov
mov
fisttpl
add
leave
mov
jns
fwait
out
test
lret
dec
xchg
xchg
add
hlt
mov
call
aam
add
and
push
xor
das
scas
mov
rol
mov
push
xor
mov
adc
gs
jo
add
lock
pop
adc
xor
ret
jb
or
bound
lods
and
jle
push
orb
add
jl
stos
sarl
hlt
scas
push
xchg
jg,pt
cmp
sub
out
insl
cmp
mov
je
pushf
fs
fs
cmp
mov
ljmp
test
popf
andb
sub
lret
sarb
jnp
ja
insb
test
leave
xchg
mov
test
rorl
orl
push
xlat
add
lret
insl
adc
pop
das
scas
cmp
fsts
or
bound
inc
out
mov
dec
or
gs
jg
cmp
pushf
sub
pop
pop
and
mov
push
in
repnz
adc
or
imul
cwtl
imul
pop
mov
mov
aaa
scas
insl
xchg
bound
enter
inc
mov
or
jp
stos
or
add
outsb
shrl
push
sbb
and
insb
fld
jle
repz
mov
or
and
fnstenv
xchg
mov
dec
cmp
fs
cltd
xchg
mov
or
pop
jmp
inc
mov
ds
mov
subl
jns
mov
fistpll
and
out
mov
imul
pop
adc
out
into
lds
mov
push
xor
mov
mov
xchg
shll
push
adc
lahf
stos
sbb
or
xlat
sub
cmp
mov
aam
ret
mov
xor
mov
xchg
inc
sub
sbb
mov
jo
ja
mov
xchg
fistl
pop
mov
mov
aaa
in
and
sbb
lock
or
gs
adc
out
jmp
pop
ljmp
fisubrl
paddq
in
or
pop
lods
sbb
cwtl
adc
add
inc
dec
mov
mov
lods
rolb
icebp
xor
sbb
jl
dec
cmp
jg
enter
in
mov
cwtl
je
fnsave
dec
xchg
push
adc
imul
jbe
std
scas
mul
inc
push
mov
lea
in
jns
das
xlat
sbb
cld
push
sub
sbb
mov
pop
sub
aaa
and
hlt
push
repnz
ficoml
fnstcw
sub
icebp
icebp
stc
js
fs
testb
icebp
and
push
sub
or
push
dec
popf
inc
js
loop
or
adc
cmp
mov
dec
fdivrp
cmc
outsl
fiadds
sub
mov
daa
fidivs
push
cmp
das
mov
aaa
mov
std
js
rorb
orl
xchg
test
sbb
jbe
popa
cmpsb
fsubrl
das
js
jl
mov
scas
mov
mov
sub
push
inc
outsl
scas
nop
cmpb
out
inc
cs
sub
sbb
pop
xchg
pusha
mov
adc
loop
cmpsb
adc
data16
or
sbb
scas
xchg
cmc
xchg
pop
xor
scas
lock
pop
xchg
jae
xor
outsb
mov
icebp
jge
sbb
lcall
cli
jnp
clc
dec
mov
and
aaa
int3
adc
mov
idivl
lods
push
lock
sbb
push
xor
sbb
idivb
add
sub
int3
adc
jno
hlt
jns
lcall
aam
out
jno
add
mov
mov
out
loope
adc
std
push
and
dec
cmp
dec
add
scas
jae
add
and
stos
pop
mov
cltd
sub
push
out
and
mov
sbb
xor
data16
dec
fbld
sub
mulb
out
lea
sub
jle
shrl
sbb
addr16
stos
mov
pop
xchg
sbb
dec
aaa
pop
loope
xchg
push
cmp
scas
in
nop
mov
jne
xchg
or
sub
jl
jl
std
and
scas
dec
mov
mov
inc
and
lods
pop
scas
aas
xchg
int
xor
xor
push
ja
lcall
mov
into
ret
ljmp
cli
adc
fiaddl
xchg
or
cmpsl
lret
sti
stc
shll
push
hlt
or
xchg
mov
out
ja
pop
clc
ficompl
in
mov
inc
insl
pop
cmp
or
stc
and
in
xchg
mov
cmpsl
stos
inc
fcoms
inc
xchg
sbb
addr16
lds
data16
pop
call
pop
push
lods
cwtl
inc
aaa
xor
cmpsl
stc
jo
mov
mov
push
jl
inc
dec
xchg
shrb
test
bound
jecxz
or
push
pop
js
dec
daa
pushf
mov
shll
xchg
ja
cmp
ficoms
and
add
dec
and
scas
jne
repnz
sub
sbb
jmp
mov
pop
dec
add
aad
in
rolb
mov
inc
mov
push
and
popf
stos
sbb
jne
dec
mov
mov
mov
jmp
dec
cmp
sub
jns
imul
mov
mov
jmp
dec
cmp
sub
jns
imul
mov
mov
jmp
dec
cmp
sub
jns
imul
mov
mov
push
insl
out
mov
pop
shll
xchg
adc
sahf
mov
xor
push
decb
fidivrl
data16
cmpsb
push
jle
jmp
pop
testb
push
scas
pop
sahf
mov
inc
out
jbe
data16
xchg
xchg
push
cmpsb
push
xchg
jle
outsb
negb
dec
scas
mov
decb
push
xchg
movsl
fidivrs
push
mov
sub
dec
js
dec
icebp
ss
dec
fists
inc
or
shll
sub
repnz
loop
cli
call
mov
adc
fsubr
mov
repnz
pop
pop
subl
lcall
out
mov
lahf
jae
aas
jle
push
and
ret
xchg
mov
jg
scas
mov
outsb
sub
test
push
xor
loope
pop
sub
xchg
mull
or
sbb
sti
std
lret
in
dec
mov
add
into
xchg
outsb
xchg
push
mov
fwait
push
aaa
clc
fdivs
mov
movsl
dec
subb
push
push
cvtdq2ps
test
dec
mov
mov
faddp
into
push
ds
rcrb
push
sahf
jle
outsb
les
daa
jg
je
inc
negl
cmp
data16
xchg
pop
aad
shll
dec
movsb
pop
test
lahf
pop
orl
mov
inc
cld
aas
mov
mov
inc
aam
mov
fisubs
sbb
cmpsl
push
jp
push
push
divb
add
fisubs
xchg
xchg
mov
cmpsb
push
jle
outsb
negb
dec
push
mov
mov
inc
out
jbe
data16
xchg
xchg
mov
cmpsb
push
jle
outsb
negb
dec
push
mov
out
cltd
xor
or
fdivl
aad
lret
dec
lea
imul
inc
xchg
pop
inc
ret
push
mov
fisttpll
std
in
push
xchg
inc
cltd
pop
mov
gs
loopne
push
mov
xor
sbb
pop
xor
xchg
idivb
push
xor
and
sub
cmpsl
dec
dec
fwait
test
sbb
mov
inc
fadds
aaa
xchg
stc
insl
psubusb
std
int
mov
scas
jl
es
xor
dec
or
in
sahf
mov
add
cmp
jne
sub
enter
inc
mov
adc
jl
inc
jne
orl
xchg
and
mov
insl
mov
lret
imul
mov
cltd
fucomp
sub
fldenv
mov
xor
xor
or
sbb
mov
fsub
cwtl
out
dec
daa
mov
popf
out
add
adc
add
stc
and
mov
push
pop
cs
jge
popa
inc
fcompl
xchg
push
jmpw
pop
mov
repnz
xor
fld
pop
push
ljmp
pop
xchg
mov
mov
call
mov
pop
aam
mov
lock
stos
fnsave
aad
xor
sbb
push
imul
nop
add
lret
pushf
inc
xor
cltd
dec
mov
sti
outsb
sarl
mov
lret
jp
test
mov
aas
xchg
inc
fwait
push
xor
push
in
imul
push
jo
cmc
lods
lcall
mov
sub
mov
xchg
jnp
pop
ja
sub
lods
mov
jnp
int3
or
mov
rclb
icebp
rcll
ss
das
pushf
dec
mov
aaa
mov
loope
and
sbb
jmp
push
xor
je
dec
mov
cmp
push
cmp
xchg
pop
or
scas
push
fbld
idivl
inc
test
pushf
ret
out
push
pop
insl
lods
repnz
add
testb
xor
jo
pop
xor
fwait
loope
pop
push
data16
mov
mov
mov
sbb
mov
jmp
call
sahf
js
sbb
movsb
xor
cmpsl
or
mov
mov
push
sbb
jmp
xchg
pop
jecxz
jg
lahf
mov
jns
xor
xor
pop
jle
adc
sub
sub
mov
mov
lods
nop
mov
inc
pop
jne
xchg
pop
call
addr16
xchg
inc
push
jecxz
cmp
adc
jb
sti
pop
mov
pop
in
jge
ja
dec
jg
out
mov
sbb
arpl
jge
or
cwtl
jecxz
adc
repz
ds
xor
jge
loopne
in
js
jge
loop
and
test
jle
and
pusha
xor
pop
mov
mov
call
xor
mov
aad
arpl
orl
xchg
int
lret
fld
cmp
sbb
cli
imul
lock
fucom
jnp
pop
jae
clc
sbb
add
aaa
sub
test
cmp
inc
scas
js
sbb
ret
dec
fsubrs
add
fwait
xlat
inc
ja
xchg
in
hlt
mov
sbb
sahf
cmp
loopne
mov
clc
out
jae,pt
adc
or
rep
hlt
sub
inc
dec
sahf
push
shlb
cmpb
in
mov
dec
add
stc
mov
mov
rcll
insb
or
lret
xchg
and
and
ds
dec
or
jns
mov
outsb
sbb
clc
cmp
cld
mov
pop
js
fs
mov
cmc
sbb
dec
mov
testl
push
mov
sbb
lret
fisttps
xchg
lcall
fsubrs
scas
push
adc
push
sti
or
aad
loop
xor
add
lret
or
or
out
repz
mov
sbb
jle
mov
stc
clc
adc
jb
sbb
and
ret
jne
lds
push
shlb
fsub
test
imul
test
and
mov
cmc
pop
and
les
test
rorl
data16
sub
inc
add
pop
adc
cmp
test
push
and
sbb
ret
mov
cmp
dec
inc
push
fs
xor
fdiv
cmp
cld
xor
mov
in
loope
adcb
insb
sub
mov
das
ja
xchg
ja
push
outsb
cmp
pop
fistps
cmp
stc
imul
lods
and
aad
loop
jge
add
and
outsl
cld
es
popa
cmp
dec
popa
cmc
outsl
arpl
fwait
add
adc
mov
out
enter
test
mov
movsl
adc
mov
rcl
fcoms
cli
lahf
push
lret
sarb
pop
mov
aam
setge
icebp
adc
daa
xor
es
outsl
add
and
mov
andl
das
cs
add
pushf
js
xchg
mov
push
or
pop
iret
fistpl
xlat
or
xor
pop
push
add
jae
or
test
pop
and
fwait
mov
in
int
movsl
adc
sbb
mov
xchg
repnz
pop
aas
push
pop
xchg
sub
xchg
jne
sub
mov
mov
and
add
and
inc
test
lds
inc
iret
or
pop
xor
xchg
xor
icebp
push
ret
ret
jns
push
cmp
push
dec
xchg
fsubrl
xchg
pop
cmpsl
mov
popf
jae
test
ja
out
cmc
mov
mov
add
cmpsb
and
inc
loope
sar
das
sub
in
pusha
cltd
insl
notb
dec
mov
jno
out
shlb
pop
repnz
sbb
xor
cmp
rcll
lret
and
push
pop
pop
out
pop
test
xchg
push
pop
inc
mov
push
rcl
pop
mov
cli
and
xor
and
shrb
or
sahf
dec
sub
fwait
int
jmp
pushl
loop
js
lret
pop
outsb
ss
jl
dec
xchg
dec
repnz
adc
outsb
mov
add
movsb
std
js,pt
call
xchg
movsb
test
shrl
cmp
ret
and
dec
imul
mov
in
pop
cmp
arpl
cmc
push
int3
lcall
and
loop
iret
xor
fsubs
xchg
push
xor
imul
fmuls
cmp
lods
push
lret
jo
push
inc
loopne
dec
repnz
adc
mov
jns
rolb
cmp
push
add
out
in
fs
vpunpckhqdq
mov
push
inc
push
or
cmp
mov
adc
adc
mov
pop
test
mov
loop
or
bound
rclb
fs
inc
insl
int
inc
aas
and
insb
not
dec
mov
test
vmwrite
movsl
push
xchg
fstpl
or
into
int3
mov
jge
int
cmp
mov
jg
cmpsl
rcl
cmp
int3
dec
ret
leave
lret
mov
dec
mov
scas
enter
inc
cmpsb
pop
bound
jge
xor
enter
cltd
mov
fcoms
bound
jle
dec
fidivl
je
ljmp
lret
sub
in
icebp
push
mov
dec
fs
es
clc
clc
icebp
andb
inc
mov
mov
adc
mov
int3
movsl
ficoml
mov
pmaddwd
mov
pop
gs
in
push
jbe
xchg
fld
adc
addr16
lret
pop
mov
std
mov
jns
loop
lret
popf
dec
lahf
xchg
dec
fidivrs
rorl
cmp
repz
imul
and
push
lods
jle
cmp
add
dec
sti
push
nop
loop
int
mov
clc
xchg
mov
inc
lahf
push
dec
jl
aad
mov
lret
mov
xor
mov
cld
out
nop
push
lock
fwait
inc
inc
add
xchg
int3
stos
jns
mov
inc
fwait
adc
push
outsl
jmp
out
add
subl
or
cmp
shl
std
mov
addb
and
lahf
adc
cmp
and
popa
add
gs
leave
dec
les
or
xchg
lea
dec
insl
push
lea
dec
test
add
fcom
pop
jg
shrb
or
out
shlb
dec
adc
push
mov
sub
lds
in
mov
xchg
mov
aad
add
xchg
lahf
xchg
xlat
jne
xor
pop
add
mov
das
test
pushf
cwtl
lods
dec
push
mov
push
dec
sbbl
rcrb
cltd
cmp
mov
jbe
push
xchg
cli
jecxz
inc
add
mov
lods
mov
adcb
add
mov
je
sbb
ret
lahf
fisttps
in
or
cwtl
pop
data16
ja
jge
movzbl
scas
lods
mov
inc
mov
and
pop
incb
dec
inc
dec
mov
cmpsb
loope
jmp
mov
scas
push
xchg
mov
lcall
ss
les
mov
mov
xor
sbb
insl
cmp
push
sub
push
inc
in
xchg
shlb
or
lock
std
aam
jo
sbb
sarl
pop
add
fldt
repnz
xor
out
inc
pusha
xchg
sarb
xchg
jo
or
jbe
inc
inc
mov
lds
aaa
ret
sbb
popf
pop
pop
fistpl
clc
pop
in
mov
loopne
mov
add
out
mov
push
and
cmc
mov
mov
xchg
stc
mov
lahf
xchg
inc
test
or
loopne
sub
daa
pop
inc
insb
jb
ret
ja
xchg
mov
stos
mov
cmp
pop
movsl
call
addr16
mov
in
push
mov
jl
dec
sub
add
mov
cmp
push
cmovs
and
sbb
inc
lock
popf
out
dec
clc
jle
xor
bound
leave
sub
fwait
lods
es
add
frstor
ud0
jb
cs
sbb
pop
mov
mov
stos
push
or
leave
inc
cmc
xchg
fwait
dec
push
cmpsl
iret
test
scas
sti
addr16
cli
pop
push
mov
sub
sub
fisubl
cmp
les
pop
insl
jmp
insb
xchg
mov
movsb
in
push
iret
shrb
shrl
aam
das
jp
dec
sub
rcrl
aaa
inc
imul
arpl
dec
or
movsb
add
inc
push
mov
enter
movb
sti
fisubl
xchg
dec
sahf
jle
in
inc
inc
xchg
pop
negb
inc
lret
sahf
and
into
xor
adc
fimuls
cmpsl
leave
fbld
cmpsb
cmpsl
cmpsl
pop
xchg
sbb
lods
loopne
inc
dec
js,pt
leave
inc
shlb
enter
or
or
je
lea
dec
sbb
dec
lods
xchg
stos
dec
pop
or
add
pop
leave
ljmp
inc
dec
pop
dec
ds
out
loope
gs
pusha
pop
testl
lock
sub
mov
or
push
mov
testl
pop
outsb
mov
imul
out
popa
xlat
jo
int3
sar
mov
pop
pusha
fisttpll
aam
movsl
pop
mov
adc
cmovs
or
pop
sub
push
sbb
ljmp
mov
std
rcrl
sbb
fxch
divb
and
cmpsb
fdecstp
pop
out
rcll
dec
mov
sbb
ret
lods
xchg
pop
movsb
jns
mov
cmpl
mov
mov
inc
test
pop
mov
push
sbb
sar
vmwrite
dec
fists
aas
inc
repz
jg
popa
loope
mov
xchg
xor
popa
lcall
xor
mov
les
xlat
loope
or
sti
dec
cmp
xor
mov
loop
mov
or
sub
dec
xor
or
inc
sahf
scas
mov
cld
or
pop
jae
dec
cltd
scas
sub
scas
js
dec
movsb
cmpsl
mov
lea
int
push
push
popa
cmp
cmc
int3
icebp
lock
push
or
test
mov
mov
push
or
pop
mov
push
mov
aaa
sub
mov
stos
outsb
rcll
mov
mov
xor
mov
jecxz
daa
push
pop
enter
push
jns
pop
jmp
jns
push
cmp
repnz
push
inc
xchg
and
mov
mov
iret
mov
jnp
xor
sbb
cltd
lock
cwtl
rcr
andl
lods
lret
mull
dec
jg
push
fs
mov
or
pop
shl
sahf
jno
jno
scas
push
fisubs
loop
scas
nop
sbb
pop
in
das
imul
aad
aad
jge
out
js
lahf
enter
mov
test
jg
repz
push
nop
xchg
inc
test
and
sub
je
inc
jecxz
lret
int3
pushf
dec
in
fiadds
rcrb
pop
xchg
in
mov
xchg
out
pushf
sub
mov
das
hlt
inc
mov
pop
jle
xchg
add
or
mov
call
inc
test
fwait
add
cltd
jmp
or
xchg
ja
call
in
inc
jb
inc
in
cmp
aad
push
mov
or
nop
sub
push
push
out
out
pop
inc
cwtl
sub
mov
add
enter
push
mov
sbb
dec
loope
pop
xor
incl
cltd
dec
push
fdivl
xor
xchg
imulb
daa
add
pusha
mov
push
dec
cwtl
push
xorb
sub
in
and
dec
add
call
lcall
imul
aas
js
lods
xor
xchg
daa
mov
mov
xchg
sub
rorl
xchg
push
test
out
stc
jne
mov
sub
fcmove
test
mov
mov
dec
out
addr16
cli
mov
mov
lret
adc
in
idivl
or
fisttpll
sbb
pusha
sub
nop
pop
xchg
push
adc
nop
loop
fisubrl
fsubr
ret
jmp
test
rorl
jbe
inc
push
mov
fbld
push
arpl
jg
xchg
outsb
cmp
pop
xor
mov
lods
or
sbb
int3
fmull
insl
pusha
int
mov
or
mov
mov
xchg
in
aas
jb
mov
in
pop
inc
xchg
mov
cmpsl
in
in
pop
push
push
test
enter
xchg
enter
movsl
push
sahf
xor
mov
inc
ret
jge
test
pop
adc
pop
push
test
xorb
fstps
inc
add
loope
dec
js
sub
insb
cmp
js
jg
adc
cmp
aas
orb
rcrl
das
mov
sub
or
push
enter
cltd
or
xor
pop
leave
test
add
inc
cmpsb
popf
flds
add
xor
mov
mov
and
mov
inc
loope
xchg
dec
push
sbb
adc
test
inc
lock
jl
ss
mov
hlt
add
lret
or
les
mov
cmp
ss
shll
dec
lret
data16
xor
lea
testl
sahf
jne
cmpsb
cs
jp
test
adc
sti
dec
pushf
cmp
inc
nop
mov
scas
shlb
cmc
rolb
shlb
xchg
xor
push
clc
fisubrl
aas
pop
xchg
cmp
js
gs
jl
push
push
pop
scas
and
test
inc
cli
push
sub
dec
popa
rorl
out
into
add
cwtl
add
test
rcl
enter
xorl
xchg
mov
mov
sbb
mov
dec
or
mov
imul
sbb
movsl
bound
jo
adc
cmpl
cli
das
push
lcall
or
adc
int
inc
lret
xor
mov
dec
and
push
inc
jns
and
lods
mov
cmp
dec
fldl
out
pop
push
adc
pop
out
xchg
fisubrl
out
push
jno
cmpsb
and
and
lcall
and
mov
xchg
rcr
shrb
jb
ss
fwait
add
fisttpl
dec
pop
dec
daa
fcomip
mov
addr16
mov
call
mov
stc
std
scas
test
cmpsl
inc
shll
sbb
push
fsubl
lock
int
or
mov
xorps
push
xchg
add
xchg
hlt
lock
cmp
lock
hlt
nop
movsb
popa
jnp
cmp
adc
mov
out
cmpsl
jl
adc
sarl
sbb
add
fdivp
in
fildl
and
dec
mov
into
in
daa
cmpsb
and
sub
push
add
ljmp
inc
and
or
sbb
mov
jge
mov
xchg
lcall
push
popf
fwait
mov
mov
test
lea
addb
mov
mov
pop
insl
popf
mov
jne
inc
into
cmp
nop
cld
mov
sub
xor
xor
shrl
jle
daa
scas
mov
adc
add
xchg
dec
lahf
sbb
mov
pop
in
xor
xchg
push
or
mov
inc
adc
push
nop
sub
mov
movsb
in
je
ja
fbstp
cmp
or
outsl
sti
sub
gs
subb
ja
scas
sahf
fprem1
sbb
push
sub
mov
sub
xor
cmc
adc
jae
cld
xchg
scas
ja
sti
nop
aaa
sub
xchg
cmp
cmp
movsb
repz
sub
lsl
inc
mov
push
inc
test
inc
in
xchg
fisubrs
pop
inc
fistpl
leave
push
dec
mov
mov
dec
jae
leave
int
lahf
dec
pop
fs
push
push
leave
bound
cmp
in
pushf
mov
push
or
xchg
sbb
pop
cmp
dec
lods
stos
ja
add
jb
cmp
mov
cmp
bound
cld
adc
xor
lds
jbe
push
mov
lods
dec
sub
aam
mov
xchg
ss
gs
mov
push
sbbl
shl
inc
insl
stos
adc
in
mov
sahf
adc
dec
in
inc
cmc
sbb
add
pop
cs
fdivrs
push
stos
mov
out
adc
jbe
pop
iret
push
lahf
mov
leave
xchg
fs
repnz
adc
inc
je
or
inc
pusha
inc
or
mov
adc
adc
dec
cmp
imul
das
cmp
inc
call
jg
mov
cmpsb
jae
mov
sub
add
stos
or
pop
sbb
add
movsb
adc
movsl
cmp
xchg
mov
js
shll
xchg
sahf
gs
dec
lahf
cwtl
clc
push
outsl
add
stc
ds
je
ljmp
xchg
mov
adcb
mov
jl
arpl
pop
xchg
and
push
or
or
in
pop
xchg
cli
in
and
int
pcmpeqw
ja
jg
or
mov
add
cmp
fs
imul
inc
sbb
jne
mov
stos
cld
cli
sub
jo
jae
jp
or
fidivrl
jns
xor
icebp
or
fidivs
data16
mov
add
ret
push
jmp
adc
dec
aas
out
aas
leave
sbb
pusha
adc
xchg
stos
sbb
jae
lahf
mov
in
int3
repz
ja
arpl
xchg
adc
or
js
pop
and
mov
sbb
adc
sarl
sbb
inc
movsl
xchg
scas
jb
fsts
pop
jmp
aad
in
movsl
or
dec
imul
mov
les
js
and
mov
sub
sub
repnz
lcall
scas
dec
or
xorb
adc
xchg
mov
cmpb
jp
popa
and
cwtl
inc
daa
scas
sub
xchg
hlt
and
xor
test
fisttpll
lahf
mov
lret
cmp
into
mov
repz
dec
movsl
cmpsl
push
add
cmc
rorl
fldenv
mov
sbb
xor
dec
rorb
cs
mov
scas
push
stos
andb
test
mov
or
addl
or
loop
cmp
ljmp
shr
les
ret
out
sti
test
and
push
les
addl
fildl
xor
daa
mov
mov
xchg
mov
pop
outsl
adc
bound
push
inc
frstor
push
out
enter
insl
or
lcall
cld
fdiv
or
cs
push
sbbb
fwait
imul
jecxz
cmc
lret
lahf
jge
imulb
rclb
push
dec
xor
inc
jg
sbb
inc
ja
scas
rcl
mov
mov
scas
jno
mov
inc
out
jbe
data16
xchg
xchg
mov
cmpsb
push
jle
outsb
negb
dec
push
mov
mov
inc
out
jbe
data16
xchg
xchg
mov
cmpsb
push
jle
outsb
negb
dec
push
mov
es
incb
jbe
cmpsb
into
xchg
mov
cmpsb
push
jle
outsb
negb
dec
add
push
mov
push
out
jbe
out
xchg
jns,pt
sbb
cmpsb
jns
testb
mov
fwait
stos
into
mov
lret
dec
outsb
sbb
dec
sbb
sbb
push
jnp
pushf
out
fwait
fwait
into
mov
xor
mov
ljmp
stc
pop
dec
inc
pop
imul
xchg
jl
mov
mov
xor
in
xchg
mov
sbb
fs
push
sbb
push
sti
out
fwait
nop
out
aad
ret
cltd
daa
xor
lock
jecxz
loop
xlat
push
aas
shlb
inc
mov
out
stos
xchg
stos
bound
and
sbb
xor
ret
cs
ss
imull
or
xchg
notb
loop
jns
test
fiaddl
or
in
jnp
shll
mov
out
dec
fidivs
data16
scas
into
add
popa
aas
xchg
jae
sub
mov
sub
xchg
dec
imul
push
repnz
iret
pop
fwait
mov
sti
sti
xchg
sahf
add
cmp
jge
aas
out
and
cs
inc
in
ss
jmp
shlb
outsb
in
aam
cmp
das
dec
rorl
fwait
push
stos
dec
lods
aam
scas
sarl
call
and
push
add
imul
jo
mov
fcomip
scas
fidivl
sti
jg
sbb
pop
cmp
daa
inc
aas
dec
push
dec
push
jg
stos
fwait
mov
mov
loopne
repnz
sbb
outsb
sub
jle,pn
jb
outsl
jnp
loop
test
mov
jmp
sti
sahf
or
jle
dec
cmp
cs
imul
push
mov
fwait
stos
into
mov
mov
or
jle
dec
cmp
cs
imul
push
mov
pop
sub
insl
shl
in
negl
and
sub
testl
pusha
mov
decl
mov
mov
push
xchg
int3
sub
push
sub
ljmp
stos
and
aas
lcall
adc
sub
adc
lea
add
ljmp
gs
decl
xchg
xchg
stc
dec
lock
mov
je
jl
iret
or
dec
adc
ret
inc
add
adc
mov
dec
pop
mov
sub
int
callw
push
push
sbb
jns
mov
cs
cmp
xor
mov
shlb
into
incb
mov
call
int3
lret
jns
fidivrs
test
cwtl
push
inc
scas
out
pop
or
pop
sub
pop
orl
mov
add
enter
sti
nop
cmp
jns
pop
cmpsl
repz
jb
hlt
cmpsl
cmp
adc
js
mov
scas
inc
movsl
jmp
push
sahf
jns
push
sub
push
es
lock
testl
scas
pop
sbbb
nop
mov
fistl
imul
orb
and
pop
arpl
xor
inc
mov
adc
int
lret
lea
xchg
cmp
out
cwtl
mov
add
xchg
roll
cmp
enter
scas
cmp
jb
sahf
xchg
and
mov
pusha
popa
pop
jo
mov
mov
jmp
inc
adc
lea
or
cmp
mov
inc
mov
mov
adc
hlt
cmpsb
out
pop
out
sahf
lds
addr16
test
and
inc
popf
jle
jno
sub
xchg
testl
loop
clc
add
jle
fidivrl
aas
sbb
sub
aad
ss
test
xlat
insb
ss
bound
popl
insl
jle
fidivs
push
sub
popa
sbb
iret
iret
mov
enter
mov
test
cmp
lods
or
inc
fadds
xor
fwait
ret
sbb
rorl
xchg
jg
push
das
inc
jmp
sbb
inc
jno
xor
add
jge
fsubrl
cmp
cmc
jecxz
aam
inc
mov
ja
ds
pop
cmp
pop
sti
iret
cmp
rcl
dec
scas
cmp
ja
outsb
sbbb
mov
add
mov
das
or
push
pusha
in
fs
inc
adc
xchg
ds
les
sub
lret
mov
loop
or
cs
mov
xor
lret
xchg
sbb
and
call
and
and
lahf
lea
sbb
xchg
and
pop
repnz
pop
cmp
jae
mov
mov
jmp
lea
jp
fiadds
push
ljmp
mov
call
pushf
adc
sbb
adc
fs
es
ss
add
inc
pop
jle
jmp
jb
push
rorl
pop
mov
pop
lods
jl
jno
cs
inc
jns
jecxz
div
cmp
loope
jl
adc
sbb
les
push
sub
movsl
and
xchg
repz
pushf
stc
adc
xor
mov
pushf
fs
add
cmp
mov
into
mov
test
sub
dec
xor
push
add
mov
insb
int3
mov
xor
sub
out
clc
or
and
xor
ret
popf
and
lcall
std
or
cmp
jle
sub
in
fsubs
jge
icebp
int3
add
iret
sub
jl
das
xchg
or
lds
int3
into
inc
pop
push
imul
mov
and
xor
add
sbb
fisttpll
pop
ror
lds
pop
xor
popf
sti
or
dec
mov
xlat
and
add
sbb
and
ljmp
shrb
xchg
lods
push
scas
cld
xchg
incb
push
adc
pop
aam
and
aam
push
mov
mov
jp
adc
mull
lea
mov
int
or
xlat
sbb
pushf
mov
mov
rcll
in
aas
ljmp
cmpsl
dec
sbb
sti
test
cmp
arpl
ret
inc
mov
xor
outsb
loopne
mov
or
xchg
fdivrl
dec
outsb
xor
add
cmp
xchg
cmpsb
rcl
pop
dec
xchg
in
int3
inc
shrl
add
dec
add
jecxz
cmp
sub
pop
loope
fsin
xorb
lcall
sbb
popa
mov
loop
icebp
cmc
test
push
jg
mov
sub
push
dec
sub
jne
ficompl
jl
push
and
add
subb
cmovns
clc
popa
jnp
and
pop
pusha
pop
adc
cmp
adcl
js
cmp
or
sbbl
push
mov
pop
in
dec
pushl
jne
jne
rcr
sub
mov
xor
sbb
ficomps
mov
arpl
nop
push
mov
into
dec
cld
xor
fsubl
xor
jbe
inc
adc
movsl
sbb
and
mov
out
xor
push
loope
jge
sub
cmp
addr16
xchg
ret
fwait
xor
dec
das
or
sub
fiaddl
es
cmp
xchg
aad
and
mov
cmpsl
mov
out
sbb
cmp
and
xor
push
shr
jmp
loope
xchg
ds
sub
mov
out
jae
mov
inc
les
and
ja
movsb
lret
fldl
sub
mov
jb
bound
scas
test
cwtl
mov
cmc
and
jmp
sub
fnsave
mov
mov
pop
ljmp
inc
push
jb
sub
lahf
iret
aas
in
cli
bound
inc
jle
mulb
add
push
repz
les
push
and
dec
imul
fdivl
cmp
std
lods
movsl
adc
loopne
int3
gs
aaa
mov
jno
pop
mov
pop
out
shl
mov
mov
xchg
jb
xchg
push
push
xor
stc
and
push
or
shl
sbb
inc
sub
out
and
bound
mov
pushf
fidivl
xchg
xchg
and
lahf
jae
mov
jecxz
or
scas
dec
es
mov
xchg
fdivrl
arpl
sub
pop
xor
lods
mov
scas
lgs
dec
stos
insl
or
mov
arpl
je
mov
movsl
sbb
and
addl
cltd
jno
or
fs
lea
jne
dec
push
fimuls
cmpl
lods
jo
push
popa
mov
inc
and
sub
sbb
movzbl
dec
pop
stc
adc
cwtl
clc
arpl
xchg
sub
aad
inc
lods
lods
inc
mov
xlat
push
and
in
push
movsl
enter
cltd
xchg
adc
jno
cwtl
mov
dec
dec
ret
cli
fs
dec
dec
rcrb
imul
outsl
fs
jmp
lock
in
sarb
sbbb
shrl
lret
fwait
roll
stos
push
pop
pop
mov
jmp
loope
mov
sti
sti
xchg
adc
add
hlt
sti
stc
mov
push
cmpsb
insb
cmc
orb
js
and
cltd
push
mov
add
inc
or
outsb
mov
push
subl
int
ss
fimuls
dec
jp
loopne
pop
mov
loope
mov
inc
lret
aad
adc
mov
or
lds
fbld
outsb
int
scas
xlat
pop
mov
movsb
jecxz
push
loope
mov
xlat
js
inc
lcallw
push
adc
push
adc
jne
or
xchg
rcrb
das
xchg
test
popl
adcl
sbb
ljmp
mov
scas
leave
mov
imul
lock
jno
jle
or
repz
xor
dec
arpl
nop
fcmovb
mov
dec
sbb
fidivl
arpl
and
scas
rcll
into
loop
xchg
sarl
jb
inc
cli
fbstp
insb
gs
negb
insl
les
sub
movsb
out
mov
inc
sub
sbb
jo
cmp
mov
test
arpl
jno
xchg
mov
enter
fildll
inc
push
mov
test
nop
pusha
mov
sub
pushf
rcrb
xorb
inc
mov
and
jns
adc
movsl
mov
inc
mov
sub
ror
enter
aad
dec
aaa
add
inc
jne
je
je
jle
sub
sarl
rcrl
inc
inc
pop
outsb
mov
mov
loope
aaa
cld
xlat
sub
das
jmp
cltd
push
icebp
mov
cmp
mov
jb
dec
sub
cmpsl
mov
sub
test
xchg
or
adc
lahf
jp
pop
div
mov
je
mov
push
sub
add
mov
push
sar
mov
out
add
and
scas
into
xchg
rcll
jns
ds
jl
lods
push
or
pop
cmc
dec
pop
scas
jmp
call
aam
daa
jne
push
mov
and
xchg
jo
ds
jle
daa
les
sbb
xchg
sahf
adc
sti
pop
adc
mov
push
cmc
dec
or
cmpsb
ret
dec
inc
dec
push
mov
cmp
mov
bound
cwtl
dec
shr
sbb
jl
pop
xchg
ss
pop
xlat
jnp
fsubrl
mov
ljmp
hlt
rcr
stc
mov
lock
test
adc
jle
dec
pop
add
loopne
push
cltd
inc
mov
push
jne
push
inc
pop
xor
sbb
dec
xor
xchg
lods
pop
mov
cmp
jae
imul
pop
pop
and
push
xor
mov
in
mov
xlat
les
lret
mov
fadd
add
hlt
pop
out
ljmp
out
jo
xchg
jo
dec
lock
inc
in
lahf
fimull
pop
mov
lods
xchg
shrl
ds
dec
xchg
iretw
add
gs
in
stos
es
enter
out
dec
test
cmp
sarb
addr16
cltd
mul
mov
lret
pop
and
sub
fwait
cmp
pop
pop
daa
daa
xor
lret
jmp
add
inc
mov
inc
or
jl
imul
mov
scas
push
scas
push
push
fstps
aad
hlt
loope
in
sarl
dec
hlt
xchg
sbb
cmpsl
loope
cmp
pop
xor
or
pop
aad
sbb
negb
sti
dec
adc
out
sbb
mov
outsl
push
push
jo
xor
inc
dec
scas
js
xchg
mov
les
pop
push
rcl
pusha
pop
push
scas
or
movsl
mov
jl
fimuls
add
ror
xchg
push
jl
popf
fcomps
fwait
mov
js
sub
pop
std
xor
fdiv
out
lods
fs
xchg
lds
or
imul
cmp
inc
xor
fbstp
ja
jo
out
in
shl
outsl
imul
push
insb
xchg
cmp
xchg
cmp
das
push
aaa
clc
mov
call
movsl
outsb
cmp
mov
inc
in
outsb
xor
pusha
inc
minps
sbb
adc
loopne
mov
and
addb
sub
cmp
or
dec
fnstsw
loop
popf
mov
aas
test
mov
mov
or
ret
xchg
mov
pop
cmc
dec
push
mov
repnz
xchg
repz
rcrb
stc
inc
cmp
lock
push
das
std
add
sbb
mov
pushf
loope
mov
inc
xchg
mov
add
xchg
inc
dec
scas
outsb
jl
jmp
sbb
loope
sub
aaa
ja
fs
das
add
int
stos
inc
aaa
je
dec
add
out
rcr
cmp
jmp
and
pop
sbb
imul
jmp
ja
pop
mov
int3
xor
loopne
lods
push
push
repz
scas
pushf
xchg
push
sbbb
pop
mov
roll
adc
in
dec
xlat
rorl
rolb
jle
enter
movsl
ds
rcl
sub
cmp
testb
sbb
repnz
testb
cs
in
cmp
test
inc
cli
imul
lahf
rcrl
xor
mov
cmp
mov
jno
push
jge
push
adc
sub
fs
and
or
nop
mov
fisubs
pop
sub
push
arpl
stos
int3
or
pop
xchg
push
xchg
mov
pop
adc
leave
js
inc
inc
sub
cmp
and
out
gs
jo
ret
mov
xor
ss
scas
scas
dec
jg
subb
xor
jg
repnz
cmpsl
cmp
pop
je
cltd
sti
jo
cmpsb
push
fstl
mov
and
mov
mov
xchg
repnz
push
out
std
xchg
int
cmp
mov
push
js
dec
ljmp
lea
outsl
lret
pop
or
arpl
stc
outsl
out
push
sbb
ljmp
sbb
stos
mov
ret
insb
or
adc
iret
test
sub
mov
pop
sbb
sub
pop
mov
hlt
xchg
mov
shll
add
ja
lcall
mov
cmp
ret
mov
lret
xor
mov
cmp
xchg
scas
je
pop
stos
lea
stos
mov
cld
call
fcompl
cmc
fiaddl
bound
bound
and
stc
cmp
adc
sub
scas
in
loope
insb
out
aad
addr16
add
pop
les
in
dec
rsm
jo
ret
pop
inc
pop
roll
fidivl
ja
lret
fisubs
xor
push
jns
hlt
xchg
lods
aad
in
aam
and
mov
fbld
loopne
cltd
dec
loope
movl
sbb
xchg
loop
cmp
ret
cmp
mov
sbb
adc
cmp
outsb
push
and
xor
add
push
pop
sub
mov
add
mov
fisttpll
sub
jl
jge
fistl
out
out
out
push
sub
jg
inc
fs
sbb
pop
jge
cli
pop
mov
aaa
negb
dec
popf
and
cmp
push
sub
mov
jp
ljmp
push
dec
xor
daa
adcl
sub
sub
int
shld
insb
jmp
ljmp
adc
push
sahf
sbb
jmp
cld
pushf
subl
sbb
outsl
push
cmc
sti
inc
push
daa
push
outsl
lock
shlb
or
dec
sti
inc
sbb
mov
daa
pop
mov
js
mov
out
lods
push
lods
and
jbe
pop
xlat
fbld
jp
leave
aam
int3
dec
fsubl
inc
push
loop
dec
in
in
ja
stos
nop
xchg
inc
mov
rorl
popf
pushf
loope
fdivr
push
cltd
outsl
mov
inc
push
xor
jmp
push
jmp
test
and
sbb
les
in
loop
cltd
stos
orl
test
push
dec
aaa
push
jne
push
sub
cmpsb
jle
gs
push
jb
push
sbb
cmc
inc
scas
push
cltd
scas
enter
lret
in
mov
push
aad
je
test
push
movsb
xchg
stos
add
mov
fdivs
lea
test
inc
data16
sub
js
data16
dec
sti
push
dec
bound
add
mov
sbb
add
xchg
cmp
dec
repz
cmpsl
nop
cmp
adc
inc
xchg
and
icebp
out
int
cmc
sub
pop
pop
mov
cwtl
sub
jnp
roll
push
mov
add
xor
dec
push
jno
repz
push
jmp
fnsave
or
jg
jbe
dec
xor
cli
sub
pop
add
jnp
jle
cmp
hlt
out
call
ds
and
mov
outsl
imul
movsl
jmp
mov
xor
pop
mov
push
mov
mov
sub
leave
xchg
sbb
loop
push
mov
mov
xchg
in
and
pop
lret
dec
test
fsubs
ljmp
pop
xchg
push
les
inc
repz
movsb
pushf
iret
jno
push
cmp
add
loope
fwait
test
call
or
xorl
and
insl
mov
arpl
notb
xor
ljmp
push
xor
fs
out
jg
push
mov
adc
or
mov
sahf
daa
push
add
sarb
dec
xchg
adcl
inc
jmp
pop
out
sbb
test
stos
cltd
sub
outsl
fdivrl
loope
xor
in
pop
inc
sub
addr16
xor
mov
and
xchg
mov
mov
push
jl
mov
pop
jb
scas
imul
or
inc
dec
addl
iret
das
xchg
dec
test
ret
xchg
cmp
cmp
sbb
jne
push
and
loope
and
jae
ret
and
xchg
xor
shrl
cmp
lods
sbb
or
or
ret
push
leave
addb
pop
and
xor
push
add
sub
adc
rcll
cmp
loop
les
dec
outsb
cmp
lock
daa
and
mov
mull
jp
xor
js
imul
dec
jle
sti
cmp
scas
lret
lods
fs
and
add
int3
mov
and
das
lock
stos
pop
cmp
xchg
mov
ss
bound
xchg
xchg
xor
fst
ret
fs
ret
orl
popf
mov
or
xor
jnp
push
add
mov
xor
adc
xchg
iret
mov
xor
iret
mov
mov
rcll
add
std
mov
fabs
push
push
sub
pop
adc
aaa
sub
addr16
addb
cmc
mov
sub
enter
dec
cmp
imul
jo
aaa
imul
stos
ret
jnp
dec
loope
mov
into
es
cmp
sti
sbb
rcrl
xor
dec
xchg
es
lret
ljmp
xchg
stos
cwtl
stos
pop
stc
cmp
lods
sahf
stc
lock
repnz
mov
push
lahf
or
out
inc
jge
xor
fidivl
mov
insl
mov
rep
cmp
in
add
mov
pop
dec
add
adc
std
sbb
jbe
flds
js
or
test
mov
imulb
aas
int
xor
out
imul
out
add
xchg
and
rclb
add
sub
arpl
sbb
sub
add
add
adc
outsl
mov
mov
xchg
mov
scas
in
stos
bound
mov
out
mov
mov
idivl
scas
push
jle
dec
adc
push
aad
dec
dec
adc
adc
sbb
outsb
sub
or
mov
and
or
mov
cmp
dec
pop
fcomip
xlat
fsubl
daa
pop
pusha
out
inc
imull
inc
mov
mov
lret
fcomp
out
aam
enter
arpl
add
pop
imul
xchg
lods
test
jle
out
or
ljmp
ja
pop
icebp
cmc
jo
stos
scas
sbb
ret
imull
inc
lcall
xor
pop
mov
je
bound
mov
dec
pusha
and
dec
jl
nop
mov
add
stos
daa
xor
imul
push
push
mov
lret
scas
cli
xlat
je
faddl
cmp
or
shlb
test
jne
inc
xchg
xor
lock
pop
popw
jle
mov
mov
push
lcall
sub
mov
push
inc
pop
shlb
and
pop
sub
mov
xchg
and
fwait
adc
ja
sub
or
cs
cmpsb
fistl
pop
inc
adc
mov
clc
cmp
scas
cli
sub
js
cli
sub
xor
cs
sbb
dec
mov
mov
adc
jecxz
adc
xchg
pop
repnz
pop
add
mov
bound
push
fsubrs
rorl
and
insl
out
xchg
stos
outsb
sar
rcr
in
int
inc
inc
rcrb
stos
mov
sub
jge
insl
xlat
sub
dec
pop
cwtl
inc
imul
je
cmpsl
push
fcom
sbb
sahf
fisubl
daa
adc
sbb
and
and
int
inc
rcl
sub
push
jmp
inc
adc
fstl
pop
pop
inc
push
jno
das
jne
mov
jns
inc
andl
and
xlat
or
sbb
sub
scas
fstpt
or
jle
dec
cmp
cs
imul
push
mov
fwait
stos
into
mov
mov
or
jle
dec
cmp
cs
imul
push
mov
fwait
mov
mov
fmulp
scas
fistl
jmp
sti
sahf
or
cmp
cs
imul
push
mov
into
mov
mov
hlt
xchg
in
orl
rcll
test
cmc
xchg
stos
mov
adc
or
and
es
inc
push
fs
fs
cmpsb
test
aam
hlt
in
push
es
adc
and
aaa
xchg
push
je
fs
cmpsb
test
int
in
testl
sub
and
fs
shr
aas
cmp
and
lahf
xor
jb
mov
inc
aas
dec
sub
pop
or
cmp
jle
insb
lret
xchg
mov
and
shll
add
out
scas
add
adcb
ss
jb
push
mov
mov
xor
cmpsb
test
mov
xchg
shl
repz
lods
sbb
aam
fisttpl
jae
dec
lods
inc
gs
jns
scas
hlt
out
push
movsb
and
cltd
jo
xchg
jno
and
cmp
leave
push
je
fwait
dec
fwait
pop
fs
mov
outsl
xor
adc
pop
into
imul
cs
pop
jmp
adc
cmpsb
xchg
xchg
movsb
xchg
in
std
ss
sbb
sub
push
push
je
add
icebp
rolb
adcb
jge
jl
popa
jle
ja
popw
xor
in
ret
test
ljmp
nop
xchg
mov
ja
adc
push
addr16
or
cmp
xor
rcl
cmpsb
loope
aad
sarl
hlt
in
adc
add
xor
and
push
inc
push
je
fs
cmpsb
test
aam
hlt
in
adc
add
xor
and
push
inc
push
je
fs
addl
xchg
test
mov
inc
adcb
adc
cs
insl
xchg
sahf
sub
mov
sarl
lret
mov
pusha
jge
imul
mov
cmp
jmp
lods
lret
notb
in
sarb
or
sbb
push
stos
adc
stc
aaa
dec
jb
repnz
movsl
jge
xchg
pushf
test
sub
std
dec
dec
jae
jmp
add
adc
loopne
int
divl
mov
cli
sbb
mov
adc
lret
cmp
outsl
add
test
inc
in
pop
les
pop
lods
lahf
mov
push
dec
inc
movsb
jo
jg
repz
sub
add
push
cmp
mov
pop
push
je
ja
jbe
mov
lcall
scas
dec
loope
xchg
or
add
xor
stos
cwtl
pop
ja
push
xor
mov
jae
iret
int3
ja
movsl
out
push
stos
movsl
sub
or
cmpsl
cld
movsb
add
pop
mov
push
stc
arpl
add
ret
icebp
out
sbb
add
xlat
test
sbbb
ljmp
cli
insl
jp
mov
mov
pop
mov
sahf
jns
pop
loopne
icebp
mov
test
mov
mov
in
repnz
xchg
sbbb
lods
and
hlt
add
inc
xchg
xor
jae
enter
sub
ss
jo
add
insb
adc
cmp
pushl
xchg
scas
lds
ret
fsubrl
addl
jns
cli
lods
dec
imul
xchg
jno
arpl
jmp
mov
dec
and
call
fldcw
in
sbb
rol
dec
push
pop
or
cmc
push
jno
pop
cs
mov
push
push
adc
push
sbb
cmp
icebp
sbb
sbb
sbb
mov
out
sbb
add
mov
push
ja
cmp
lahf
lds
push
and
mov
and
inc
in
fadd
out
mov
shll
pop
imul
sub
rcrl
ljmp
fbstp
jb
lock
pop
or
cmp
push
ret
ret
test
cwtl
fnstenv
dec
out
add
push
or
outsl
imul
rcrl
xlat
or
scas
ds
sahf
mov
jne
aad
iret
jo
ja
jl
add
jns
mov
fcomps
push
lahf
sahf
aad
loope
scas
mov
shll
sbb
lret
out
das
add
xor
or
xchg
je
xchg
xchg
fs
repz
pushf
adc
jns
fistps
xor
cmpsl
pop
add
jmp
mov
flds
movsl
mov
push
sub
push
dec
fimuls
arpl
xchg
cmc
xor
test
jmp
sub
xchg
je
cmp
nop
imul
jg
jp
scas
in
loop
or
or
cwtl
rep
cmp
xor
push
mov
notl
inc
push
pop
pop
xlat
dec
sub
addr16
sarl
movsl
cmpsl
push
sahf
popa
sbb
xor
xor
xchg
stc
push
mov
insl
jns
dec
adc
repnz
cmp
pop
push
xchg
mov
js
jp
popf
and
test
pop
xchg
lret
push
popf
les
push
int
movsb
outsl
aaa
imul
inc
or
nop
pop
testl
inc
scas
sahf
jo
dec
inc
pop
sub
pop
xor
mov
call
mov
dec
jge
pop
int
mov
cld
and
jle
jp
ja
xchg
inc
dec
xor
mov
add
or
fwait
xorb
and
mov
shr
into
jb
xchg
push
loope
jle
out
add
hlt
gs
jnp
adc
fstps
mov
jnp
imulb
xor
in
arpl
jp
or
call
enter
shlb
punpckhdq
aad
jns
adc
pop
push
inc
and
test
das
push
mov
jmp
std
cmpb
inc
insl
in
scas
inc
movsl
sub
aad
imul
dec
pushf
add
ret
ficoml
add
adc
jl
es
frstor
in
cmp
aad
pop
pop
das
mov
daa
xchg
leave
stos
js
or
xor
cmc
dec
xchg
jecxz
sarl
loop
int
cmp
and
cmpsb
dec
sbb
test
cli
dec
dec
adc
dec
push
cli
adc
push
js
inc
jp
testb
ja
sub
ret
push
sbb
mov
sbb
ja
lods
lret
jmp
push
mov
cmpsb
lret
and
lds
cmp
adc
dec
int
cmp
shlb
mov
fiadds
dec
jle
test
repz
outsl
call
cmpsl
sub
or
lret
mov
scas
leave
xchg
inc
cmc
and
shrb
pop
pop
mov
lahf
fsubrl
mov
repz
jae
mov
xchg
loop
fisttps
mov
addr16
rolb
and
cmp
jnp
push
fs
testb
pop
popf
push
in
js
lret
add
xor
aaa
lods
scas
test
pusha
xchg
mov
add
mov
sarb
dec
fstpl
adc
cmp
pop
out
cmpb
sub
push
lds
leave
lcall
mov
xchg
cmpsl
test
mov
fldenv
shll
shll
adc
outsb
adc
cli
sarb
adc
xchg
add
ljmp
cli
rorb
imul
daa
test
fsubs
rclb
xlat
out
testl
rorb
movsb
aad
sub
bound
loop
sbb
sbb
cmp
aas
sub
push
orb
ja
lahf
jnp
lret
mov
ja
jmp
out
pop
xchg
lods
pop
push
mov
and
lods
sbb
pushf
adc
leave
xchg
in
mov
movsl
dec
add
adc
fadds
fs
fsubp
sub
fildl
cmp
shll
push
adc
ja
sub
jne
pop
inc
fs
and
lea
adc
test
jmp
enter
mov
pushl
fnstenv
clc
fisubl
jne
xchg
push
dec
daa
imul
cli
mov
push
adc
push
or
popf
sbb
mov
mov
pop
pop
sbb
dec
jae
mov
mov
adc
xchg
cli
xor
add
sarb
sbb
mov
in
test
jo
insb
push
adc
data16
mov
ficomps
and
pop
in
or
add
mov
out
add
xchg
fadd
adc
or
popf
sbb
add
out
jb
jmp
lods
add
inc
push
fstps
mov
orl
cltd
sbb
mulb
xlat
out
pusha
xlat
sub
push
rorb
ljmp
push
repnz
mov
mov
scas
fistpll
pushf
sub
rcl
sub
or
sbb
dec
jns
mov
xor
test
pop
pop
arpl
cwtl
lahf
xchg
sti
push
test
out
mov
and
jl
pop
push
sbbb
movsl
ljmp
pop
add
fwait
test
in
scas
fwait
sub
dec
xchg
push
sub
cmp
stc
dec
incl
jae
inc
js
cmp
mov
cltd
arpl
push
sti
fwait
cmpb
ror
add
sub
lods
fwait
fwait
loope
fdivl
xor
stc
dec
js
add
daa
jae
sbb
and
sarb
or
dec
lods
jnp
ljmp
and
push
cwtl
push
jecxz
iret
dec
dec
sub
fstp
lcall
xor
outsl
insb
rol
and
pop
mov
push
sbb
pop
pop
fwait
je
in
cmpsl
shrl
xchg
jb
jae
insb
aad
inc
aas
adc
jae
mov
fldt
in
sbb
cli
mov
push
lea
pop
ffreep
pushf
mov
mov
out
dec
add
mov
and
mov
pushl
lea
add
sbb
add
jae
adc
push
mov
mov
out
xor
sbb
cltd
add
cmpsl
cmc
in
mov
jnp
lea
out
cltd
dec
addr16
bound
lret
addr16
arpl
fs
adc
dec
jl
loopne
jecxz
fiadds
mov
mov
lods
je
in
cmp
push
sub
aad
pop
stos
lock
xor
aas
or
add
mov
adc
xor
shlb
and
or
das
sbb
loope
mov
mov
pop
insl
cmpsl
xchg
and
cmp
mov
adc
mov
xor
inc
or
jae
push
cmp
mov
add
push
mov
ljmp
daa
ljmp
sbb
pop
mov
add
cld
cltd
out
into
dec
mov
mov
in
pop
js
xchg
cmp
movsb
out
pop
sub
sub
add
pop
inc
xor
mov
fiaddl
push
xor
fmuls
xchg
mov
out
sub
cmp
out
mov
adc
push
and
xor
aad
cli
test
xchg
xor
sub
xor
icebp
dec
out
rclb
ja
sti
aaa
in
cmpsb
cmc
jl
dec
sbb
out
data16
mov
ja
push
outsl
dec
ss
push
and
clc
pop
mov
ret
iret
iret
jle
test
mov
arpl
les
or
aaa
jg
in
add
xchg
mov
lret
mov
add
jno
jns
repnz
idivb
sarb
std
aaa
sub
dec
and
xchg
pushl
sbbb
mov
bound
stos
gs
xchg
nop
sti
shlb
clc
in
push
add
fwait
jl
xchg
orb
daa
comiss
sbb
mov
xchg
outsb
inc
clc
jno
scas
push
in
outsb
daa
mov
enter
xchg
int3
xchg
icebp
icebp
pop
add
stos
ret
add
jp
jg
or
pop
jne
repnz
mov
sbb
mov
cmp
and
lods
nop
pop
repz
and
adc
movsb
rcrb
xchg
icebp
push
scas
push
fs
jns
and
test
jo
adc
and
out
mov
jle
out
adc
xchg
add
iret
lods
xchg
ret
repz
jp
and
push
mov
nop
jge
test
inc
pop
xor
mov
sbbl
es
pop
jne
loope
divl
sbb
and
popf
and
cltd
jne
jns
cs
mov
stos
xchg
or
mov
rorl
pop
clc
push
add
and
or
push
cmc
loop
addr16
mov
inc
repnz
leave
and
mov
scas
xchg
cmp
mov
call
sbb
mov
pop
xchg
dec
sbb
aaa
mov
mov
pop
lock
mov
xor
arpl
jl
fldl
in
fstps
pop
xchg
or
enter
hlt
and
mov
js
or
xchg
xor
sbb
por
lods
inc
in
push
xchg
sarb
fs
mov
hlt
mov
jmp
push
out
xchg
sbbb
sub
mov
sbb
sub
lods
nop
cwtl
pop
push
aaa
push
mov
jo
dec
sbb
pop
jmp
xchg
mov
sub
mov
andl
cwtl
and
jl
xchg
push
cmp
sti
mov
inc
jecxz
fcoml
nop
push
insl
arpl
cltd
xchg
cs
mov
jns
dec
pop
aaa
loop
test
xchg
xchg
add
or
cmpsl
cmp
dec
mov
inc
fidivrl
mov
or
mov
cltd
ljmp
sahf
jp
xor
or
ljmp
xchg
xlat
mov
mov
ja
xor
int
inc
les
dec
jecxz
lock
lds
adc
mov
fcomip
scas
lcall
call
push
xor
push
add
push
sbb
jnp
sbb
push
mov
jl
mov
jge
out
dec
fsubl
mov
fcmovu
and
sub
out
subb
xlat
push
daa
mov
jecxz
test
das
ds
fmull
insb
popf
xor
dec
add
mov
xchg
add
mov
stos
das
mov
mov
shrl
in
imul
pop
or
pop
or
mov
xor
cmp
mov
fidivl
mov
xchg
mov
mov
aas
xor
push
mov
adc
add
das
daa
push
adc
mov
mov
inc
stc
mov
sarb
aaa
fdivl
push
aad
mov
xchg
xor
mov
mov
mov
cmpsl
cmp
cmp
aam
ffreep
js
fildll
xor
mov
mov
fdivrl
repz
adc
sbb
cmp
outsb
xchg
push
cmp
mov
daa
and
jp
ret
adc
dec
movsb
fwait
dec
loop
in
addb
pop
inc
movsb
out
or
jns
fistpll
mov
loopne
pop
cmp
xor
stos
mov
add
ljmp
xor
arpl
aad
stos
jecxz
popf
sbb
sub
adc
cltd
cltd
xchg
data16
ja
or
cmp
das
jne
inc
xor
and
jge
sub
cmpsb
stos
jecxz
fsubrl
mov
cmp
or
and
pop
push
or
rolb
and
icebp
and
push
jecxz
add
xchg
pop
cmpsb
lods
push
fidivrs
mov
bound
je
cltd
cltd
mov
int
pop
aaa
sbb
adc
cmp
outsl
out
push
jle
js
push
mov
mov
mov
mov
popf
enter
orl
movsb
xchg
mov
jae
std
insb
shlb
outsl
xchg
aam
add
inc
leave
or
adc
lods
gs
jns
stos
xchg
dec
lods
test
push
in
outsb
xchg
cli
and
push
repnz
cmpsb
inc
push
test
scas
pop
rorl
xchg
icebp
adc
in
sbb
cmpsl
pop
cmp
cmp
mov
sbb
fmuls
mov
add
push
movsl
lret
push
cli
mov
into
inc
scas
xchg
orb
mov
mov
pusha
inc
mov
std
nop
ret
cmpsb
ds
fcoml
inc
shrb
subb
int3
stos
add
loopne
sub
jmp
cwtl
test
mov
push
mov
push
pop
lret
int3
shll
imul
dec
jae
pop
mov
inc
push
sti
fnsave
aaa
add
mov
movsl
mov
inc
cmpsb
insb
scas
cmp
js
jb
sahf
push
ja
cltd
js
movsl
push
popf
and
dec
push
fyl2x
icebp
popf
les
mov
sub
insl
mov
aas
and
push
fisttps
cmc
push
xchg
mov
mov
cmp
ret
mov
test
divb
jecxz
mov
adc
stc
jns
jnp
dec
mov
popa
push
loop
mov
pop
mov
ss
jp
pushf
cwtl
jle
dec
pop
sub
jbe
jle
inc
mov
dec
unpcklps
add
or
shr
pop
dec
test
mov
push
adc
imul
int
mov
mov
lret
add
incb
cmp
mov
sbb
sahf
movsb
dec
in
fsubl
popf
pusha
push
mov
imul
arpl
pop
sbb
sbb
push
dec
add
mov
test
leave
adc
imul
jbe
leave
dec
loopne
sub
pop
jno
dec
sub
mov
out
mov
into
in
aad
sub
push
test
outsl
ret
adc
push
js
fimull
mov
jmp
loopne
sub
test
pop
push
push
aad
adc
dec
hlt
or
inc
pop
mov
rcll
sarb
clc
iret
notl
xchg
adc
aam
mov
or
test
insb
lods
cs
sub
cmp
push
ds
push
sbb
inc
lahf
iret
icebp
into
xchg
mov
mov
mov
rcr
cmp
ja
iret
jecxz
cmp
xchg
notl
lea
imul
iret
rcll
pushf
fmul
data16
mov
inc
dec
push
add
int
adc
sqrtps
shrd
orl
filds
push
ja
push
pop
pop
mov
icebp
mov
fnop
data16
repnz
pusha
cli
push
sub
fs
in
int3
pop
out
cmp
mov
lea
adc
scas
push
xchg
in
xor
loopne
dec
xlat
test
xchg
in
sbb
jmp
and
fcoml
arpl
cmc
mov
dec
cmp
dec
aad
fwait
bound
pop
imul
pop
xor
mov
mov
incb
sub
sub
adc
fwait
xor
and
ja
arpl
call
cmp
xchg
push
jno
aaa
out
jae
fbld
lds
stos
repz
call
xor
pop
shl
adcb
or
shl
iret
or
out
shrb
inc
repnz
in
lcall
inc
adc
push
test
mov
mov
sar
xchg
call
shlb
nop
enter
mov
jno
sbb
cli
mov
adc
pushf
arpl
dec
and
adc
cmpl
fbstp
pop
inc
into
jle
fistps
fdivs
sub
out
push
sbb
add
ljmp
and
pop
mov
sub
jmp
jle
cmp
gs
xor
adc
sub
cmp
ljmp
sahf
popa
inc
int
inc
cmc
ja
mov
test
adc
add
sbb
push
in
andb
cs
and
es
outsb
and
mov
mov
dec
push
and
mov
mov
pop
pop
push
lret
imul
stc
dec
aaa
out
mov
cmp
cmp
sbb
inc
push
into
sub
xchg
ss
repnz
sub
inc
sbb
std
push
ljmp
frstor
out
ds
mov
stos
sarb
in
roll
sbb
push
stos
mov
mov
daa
pushf
mov
int3
xchg
mov
addb
push
cmpsb
jb
inc
jp
orl
mov
push
sub
mov
sbbb
jns
add
adc
scas
jmp
pop
cmpsl
inc
sub
or
mov
das
add
cwtl
push
inc
aad
jae
out
and
test
ret
fdivs
adc
addr16
addr16
icebp
outsl
cmpb
push
pop
push
push
mov
xchg
stc
xchg
mov
cld
xchg
fnstsw
pop
xor
sbb
popa
jp
das
jl
addr16
push
cmc
outsl
popf
test
jno
xchg
dec
inc
stos
mov
xchg
scas
aam
xor
inc
cwtl
int3
fucom
mov
push
sbb
xor
fs
dec
inc
insl
mov
sti
xchg
idiv
ret
sub
jnp
pushf
int
inc
test
test
fwait
js
cmp
loopne
and
pop
cmp
mov
lods
call
jo
jp
mov
loopne
data16
ret
shlb
xlat
popf
push
outsb
jne
or
sbb
out
cli
pop
shl
mov
and
int
fsubl
nop
mov
ret
out
insb
ljmp
adc
push
and
dec
loope
jge
subl
aaa
lea
jbe
pushf
in
dec
push
in
jbe
test
adc
ds
movsl
push
test
xlat
sti
sti
xchg
inc
pop
aad
xchg
or
clc
lahf
gs
pushf
mov
je
int3
mov
jl
cmp
xchg
jg
jbe
and
arpl
mov
adc
mov
cli
das
hlt
inc
jae
ss
add
mov
cmp
pop
mov
push
test
std
ja
in
ljmp
jae
pop
movsb
mov
lea
aas
cmpb
loopne
or
and
ret
mov
push
xorl
repz
int
xchg
imul
add
fistl
jb
pop
lret
test
push
idivb
pop
mov
aaa
jmp
adc
push
xor
test
ja
mov
jo
pop
sbb
iret
dec
mov
imulb
mov
xchg
fnsave
pop
jbe
fnstcw
enter
sub
shrb
or
push
inc
stos
pop
das
push
setns
cmp
and
mov
mov
js
cwtl
push
in
adc
loope
pop
or
mov
cmpsl
mov
emms
sbb
or
fsubs
mov
add
sub
pop
add
aam
hlt
in
adc
add
xor
and
push
inc
push
je
fs
cmpsb
test
aam
hlt
in
adc
add
xor
and
push
inc
push
je
fs
test
mov
movsb
jbe
out
hlt
inc
in
adc
add
xor
and
push
jne
fs
cmpsb
test
aam
hlt
in
adc
scas
mov
fcoml
mov
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
push
into
inc
fidivs
sbb
gs
das
mov
bnd
outsb
xchg
push
adcb
into
inc
fidivs
adc
and
rolb
pop
repnz
loop
xchg
jl
sbb
mov
jb
out
xchg
add
rorb
jge
pop
xchg
xchg
inc
icebp
push
pop
lret
push
andb
jb
or
push
sbb
jge
testb
pop
shl
inc
mov
out
scas
adc
add
push
lret
mov
mov
lds
inc
in
repz
lods
push
sub
inc
add
jge
insb
dec
xlat
pop
loop
adcl
jnp
nop
and
mov
mov
and
and
sbb
fwait
dec
shrl
add
and
adc
jmp
cmpsb
test
mov
ret
push
dec
jge
mov
dec
push
popf
je
add
cmp
xchg
xchg
mov
jne
mov
into
jb
adc
and
bnd
addr16
push
addb
xor
aas
aaa
into
and
mov
pop
ret
mov
push
sbb
ret
sbb
inc
rclb
cmpsl
ss
popf
and
ja
mov
cmp
jle
push
fisttpl
dec
xor
mov
mov
xor
ret
outsb
loop
xchg
push
sbbb
mov
fidivs
adc
and
repnz
loop
xchg
push
sbbb
mov
int
imul
mov
int
mov
mov
xor
clc
jp
inc
sti
cmc
ret
fdivl
gs
xchg
adc
dec
out
or
es
mov
test
inc
paddusw
cmp
rcl
pop
push
ficompl
sub
push
sbb
mov
push
imul
mov
dec
test
xchg
test
outsb
push
pop
loopne
and
mov
xchg
mov
sbb
and
popa
test
daa
fxch
sub
add
mov
sti
pop
cmp
and
daa
adc
xchg
sti
sub
fidivl
sbb
ljmp
sbb
subb
adc
jp
cmpsl
pop
jmp
xchg
cmpsl
bound
rcll
jmp
jnp
dec
xor
mov
mov
push
lret
mov
dec
lea
iret
fsubl
mov
mov
push
mov
in
movsl
pop
imul
rclb
adc
jmp
jp
test
inc
jp
inc
push
and
sbbl
pop
icebp
dec
movsb
jns
or
push
lret
xor
pop
push
es
lds
dec
test
icebp
lock
js
jmp
xchg
int
xor
cmp
loopne
adc
jmp
jae
gs
addl
lds
fs
ret
inc
notl
test
pop
into
test
xchg
dec
imul
cmc
jle
fidivs
in
cld
sub
mov
out
xchg
pop
test
fwait
push
sub
inc
lcall
fwait
cmp
rcr
dec
pop
std
push
mov
push
xchg
test
aam
iret
cmp
inc
mov
les
cmp
stos
outsb
push
mov
fcomps
push
fsts
cmpsl
fstps
jl
inc
and
jbe
dec
loope
lahf
pushf
aad
pop
scas
clc
sti
ss
sub
mov
add
in
push
ret
jp
push
xor
xlat
mov
sbb
stos
sbb
pop
js
and
jg
lcall
add
jmp
xorl
jb
inc
lcall
lahf
and
sub
and
in
xchg
sti
iret
orl
push
mov
inc
cmp
add
cmp
push
imul
das
int
fcoms
mov
and
ds
push
sbb
aas
aaa
hlt
jle
xor
lock
hlt
adc
push
sbb
js
pop
and
mov
sub
notl
inc
inc
jbe
popa
icebp
out
dec
fnstsw
cmp
xchg
loopne
leave
sbb
mov
mov
add
jnp
or
js
jecxz
shl
and
xchg
lods
hlt
mov
fidivs
popa
sbb
pop
jle
stos
mov
dec
jge
aam
dec
iret
jnp
subl
push
gs
sar
add
notl
push
mov
or
and
aam
fstpt
sbb
mov
test
iret
push
add
enter
add
jne
dec
xchg
repnz
stos
cmp
ds
push
pop
lds
loopne
inc
lock
adc
dec
fstpt
sbb
out
cmpsb
or
lea
scas
mov
insl
inc
fwait
pop
xchg
sub
cmp
add
cmp
pop
je
mov
push
insb
adcb
jl
pop
sbb
or
xchg
dec
mov
xchg
test
lods
add
mov
jbe
and
mov
cmp
aad
cmp
sbb
pusha
xchg
loopne
loopne
push
cwtl
push
out
push
cld
sub
insb
push
sbb
movsb
or
sahf
xlat
mov
sahf
jno
or
sub
xchg
into
and
loopne
or
push
mov
sub
dec
loop
mov
test
fcomps
dec
sub
mov
xorl
sar
mov
mov
mov
cmp
popa
dec
pop
jmp
in
test
sub
das
inc
dec
pop
mov
rcrl
out
repnz
jl
mov
fistpll
out
cltd
lret
dec
out
mov
pop
pop
sub
cmp
sub
jmp
fiaddl
mov
outsb
cmpsb
ret
outsl
loopne
dec
scas
mov
pop
daa
inc
sahf
sub
xchg
hlt
lahf
dec
jno
fldcw
outsl
clc
jge
or
lret
aaa
lret
push
daa
test
pop
fiadds
mov
or
jbe
sti
dec
pop
popa
insb
pop
lea
pusha
pop
les
iret
jmp
adc
loopne
outsl
inc
hlt
push
jno
sarb
cltd
cmpb
mov
or
inc
adc
repnz
cmp
mov
fldcw
pop
arpl
leave
dec
mov
sbb
jns
jl
pop
fsub
xorb
cmp
jnp
call
mov
pop
wrmsr
jns
data16
push
dec
idivl
push
xlat
lock
or
mov
add
scas
push
cmp
mov
out
push
stc
pop
jge
adc
mov
sbb
scas
push
fldz
and
pusha
jle
aam
xor
xchg
inc
mov
lret
incl
mov
rorl
jnp
adc
push
adc
sbb
cmp
and
test
iret
mov
das
cld
fsubrp
xchg
repnz
cwtl
adc
jp
mov
jnp
sub
xorb
jne
bound
mov
or
jp
add
push
in
lret
adcb
inc
inc
push
mov
jb
sub
cmp
mov
cmpsl
pop
and
sub
cmpsl
adc
aas
lea
out
fcoms
inc
dec
pop
adc
cli
out
std
cmp
or
sbb
cwtl
inc
sub
movsl
add
jmp
push
outsl
insb
rclb
imul
shlb
xchg
ficompl
lock
test
dec
add
pop
loop
pushf
movsb
mov
cmp
sub
cmp
fwait
lcall
imul
dec
or
add
push
mov
push
push
shr
rcl
xchg
dec
imul
mov
fldl
inc
sub
mov
push
stc
cmp
sub
sbb
pushf
lahf
add
xor
pop
es
jns
daa
sub
xchg
add
mov
and
pusha
repz
stc
fwait
sub
add
mov
sub
lcall
das
test
xor
push
sub
pop
xchg
in
jbe
push
mov
mov
xlat
push
jg
and
push
dec
aaa
fcmovu
ljmp
xchg
pop
fbstp
out
mov
pop
cli
cmp
and
sbb
loope
jae
mov
cmpsb
sbb
testb
int3
or
adcb
call
js
repz
bswap
insl
xchg
dec
sub
mov
iret
jnp
push
popa
loopne
inc
fisubs
push
dec
mov
sub
ret
mov
or
sub
lods
imul
cmp
push
sub
sti
push
mov
aad
adc
cmc
add
xorb
fwait
jb
adc
jle
call
or
out
inc
cmp
arpl
scas
or
shlb
sub
and
lds
loop
dec
inc
jnp
rcr
inc
pop
push
imul
dec
adc
and
shlb
jp
hlt
push
and
mov
nop
pop
add
dec
mov
lods
call
out
scas
mov
lret
xchg
arpl
sbb
mov
insl
push
push
cmpsl
std
cmp
daa
mov
insb
sub
hlt
sbb
mov
dec
cmp
add
lock
pop
shrb
jl
je
pushf
xchg
and
pop
dec
lcall
mov
and
fcmovu
pusha
dec
add
push
mov
icebp
mov
notl
cwtl
mov
adc
jae
and
mov
jmp
pop
hlt
jg
sub
sarl
in
daa
nop
inc
out
loop
sbb
xor
sub
dec
or
scas
lods
int
aas
mov
adc
adcl
pop
daa
shlb
outsl
adcl
xchg
xor
pop
jno
inc
sbb
and
fbld
inc
mov
mov
lcall
data16
repz
ljmp
xor
cmp
dec
cltd
aad
sbb
lea
jne
cmp
js
xor
jbe
hlt
xor
mov
or
stos
outsb
mov
sbb
inc
enter
mov
pop
in
jge
lret
fwait
jle
sbb
push
adc
mov
or
sti
fmull
mov
scas
fidivs
mov
pop
mov
aam
fmul
pop
mov
and
pop
cld
sahf
cmp
lock
and
cmp
or
xor
jl
sub
sub
xchg
pop
or
or
aam
pop
or
mov
ljmp
pusha
mov
das
arpl
ljmp
insl
or
jb
jnp
mov
hlt
enter
adc
sub
repz
ljmp
mov
or
sub
xchg
icebp
xchg
in
inc
mov
sub
sbb
mov
xlat
mov
pushf
stos
sti
das
lahf
cwtl
xchg
mov
je
mov
xor
hlt
lods
in
insb
cmp
xor
test
loopne
mov
cli
ds
sub
iret
popa
inc
add
out
or
cmpsl
sahf
mov
das
or
idivb
aaa
ss
push
ja
fdivrp
scas
loop
aas
aam
ret
mov
pop
outsb
inc
or
xchg
sub
test
jnp
push
mov
in
jmp
push
xor
dec
xor
add
sbbl
les
ja
inc
mov
clc
in
xchg
test
inc
cmp
mov
out
sbb
pop
mov
ja
push
testl
inc
ljmp
mov
xchg
xor
pop
or
sub
lock
popf
dec
aad
adc
sbb
inc
outsb
push
rolb
inc
aam
aam
dec
movsl
xor
push
jo
in
jge
pop
scas
jg
lods
fmull
sub
aam
sbb
outsb
adc
add
add
pop
xchg
inc
ljmp
add
sbb
mov
inc
out
inc
and
rorb
cmp
inc
dec
imul
ret
pop
lcall
and
rorl
pop
push
pop
mov
outsl
fisubrs
outsl
repz
pop
sahf
repnz
and
cs
sbb
arpl
adc
in
scas
pop
inc
xor
push
jbe
xchg
cld
jae
pop
psrad
mov
call
push
push
xor
mull
mov
adc
inc
sarb
lret
and
adc
andl
push
fnsave
cs
imul
mov
xchg
jno
sub
push
out
sub
daa
push
sub
mov
mov
push
out
pop
jno
nop
mov
dec
push
and
sbb
jno
scas
add
iret
in
inc
xor
sbb
xor
js
push
clc
out
pusha
ret
mov
out
and
mov
sbb
mulb
imul
data16
mov
stos
jb
repz
mov
lret
jno
sbb
push
and
je
mov
xchg
movsl
or
sahf
hlt
jae
cmp
xchg
cwtl
call
outsl
mov
aas
outsb
adc
xchg
adc
movsl
xchg
xchg
mov
or
enter
int
dec
inc
shrb
cmp
ljmp
loop
loopne
push
mov
ret
out
insl
or
or
xor
sti
outsl
sbb
dec
fidivs
mov
inc
pushf
mov
or
lock
mov
mov
xorl
sub
ds
sub
mov
adc
mov
push
xor
test
ds
cs
fprem1
mov
jne
ret
jne
scas
cltd
pop
pop
repnz
sbb
xchg
call
xchg
pop
cmpsl
and
sub
in
xor
fbld
lds
and
rcrl
rol
or
push
test
ds
fldpi
push
adc
fs
jg
aad
mov
sbb
repz
mov
pop
stos
cmp
inc
cmpsb
adc
push
adc
or
xlat
aas
jne
lods
and
es
scas
push
leave
decb
aaa
jne
dec
popf
imul
repz
in
push
popa
lret
dec
sahf
xchg
dec
xchg
mov
sahf
ds
in
aad
add
cmpl
test
out
and
cmp
xor
mov
scas
push
mov
loop
add
and
and
push
fs
mov
adc
mov
shlb
xchg
cmpsl
or
mov
mov
ret
adc
inc
xchg
push
leave
imul
adc
movsb
adc
xchg
fcompl
fisttps
push
push
es
cwtl
pop
shlb
stos
into
in
sub
adc
xchg
mov
les
push
and
test
cli
cmp
mov
adc
dec
push
mov
push
addl
sbb
mov
or
daa
sub
add
loopne
mov
and
push
cmp
mov
inc
idiv
loope
gs
push
xchg
jb
mov
push
bound
loopne
xchg
mov
dec
imul
fisttps
push
push
mov
insl
jns
dec
mov
rcrb
ror
mov
mov
test
cmpsl
mov
push
out
adcb
lock
dec
aad
or
xor
mov
mov
sbb
pop
fisubrl
fdivr
xor
adc
jb
subb
xchg
in
test
sub
pushf
jns
or
cltd
add
sub
pop
or
pop
mov
js
mov
imul
inc
mov
out
mov
dec
add
fimull
pop
xchg
mov
fucomip
jns
adc
addr16
andb
fdivrs
or
dec
iret
jmp
mov
mov
mov
sub
fnstsw
jae
dec
stc
and
dec
adc
mov
mov
cmpsb
xor
test
mov
jecxz
xchg
cmpl
mov
scas
adc
rorb
cld
xchg
pop
es
and
fdivl
mov
rorl
and
push
call
lret
es
out
divb
subb
add
jge
mov
jo
adc
out
lahf
imul
lret
into
jbe
pop
inc
loop
cltd
into
pop
ret
aam
adcl
scas
mov
cli
mov
ss
nop
ret
or
rol
add
sbbb
mov
rcl
push
push
shll
xor
sub
mov
enter
loop
jecxz
push
push
or
mov
mov
xchg
mov
mov
imul
testb
leave
dec
iret
or
lds
test
fcoml
ss
cmpb
bound
mov
and
mov
enter
gs
xor
addl
dec
xchg
mov
shll
dec
mov
pushf
loope
inc
in
push
cmpsb
loope
movb
loop
xchg
scas
xlat
pop
lea
push
hlt
adc
mov
mov
or
jo
adc
icebp
sub
mov
sub
mov
xchg
pop
sub
aaa
call
xchg
and
imul
mov
aam
inc
push
in
pushl
push
mov
or
aad
icebp
mov
je
inc
test
add
jnp
cmc
push
sbb
xor
xchg
stos
sbb
test
dec
insl
dec
inc
loope
outsb
push
jae
loopne
in
movsb
imul
cmpb
xchg
test
or
sub
xor
mov
loope
mov
lret
ret
pop
xlat
xchg
jl
es
in
das
fwait
mov
pop
stos
ret
mov
inc
cmp
or
mov
pushf
cltd
adc
rcl
cmc
xor
push
hlt
sub
sahf
lods
imul
mov
notb
sti
hlt
xchg
mov
icebp
sub
les
addr16
fwait
lret
mov
insl
mov
inc
je
jmp
sti
movsb
or
cwtl
arpl
cltd
pop
frstor
push
jp
mov
inc
xor
pop
pusha
inc
xchg
ret
xchg
popf
or
or
mov
icebp
xchg
int3
push
je
js
or
addr16
mov
sub
push
fnstcw
push
xchg
movsl
jbe
jb
out
jmp
fbld
mov
into
jg
rorb
popf
xchg
jnp
mulb
sbb
mov
decl
push
mov
shrl
repz
dec
adc
stos
jns
and
out
repz
popa
mov
mov
dec
sti
push
mov
movsb
js
out
out
mov
mov
mov
outsl
daa
das
mov
xor
mov
and
xor
sarb
ret
cmp
xchg
outsl
push
lods
inc
lods
scas
gs
push
inc
pop
xchg
shll
push
pop
jo
xchg
add
sub
movsl
dec
sbb
sbb
pushf
in
bound
adc
sbb
mov
push
pop
test
xor
sub
xchg
sbb
push
js
mov
xorps
push
es
cmpsl
add
out
mov
outsb
push
cld
cmpsl
xchg
sub
inc
inc
add
or
and
out
lcall
sub
fiadds
pop
pop
scas
xor
mov
ljmp
xor
lcall
xchg
les
sub
push
hlt
daa
inc
sbb
sbb
push
mov
ljmp
mov
jae
imull
adc
or
adc
cmpsb
or
adc
mov
shrl
dec
ja
jg
nop
mov
vcvtpd2psx
scas
push
mov
pop
xchg
push
mov
dec
push
add
push
nop
cmp
pushf
pop
imul
xor
cmp
adc
mov
int3
imul
sbb
and
mov
sub
mov
pop
jg
mov
lock
cmpsl
sarl
out
add
pop
pop
out
fbld
cmp
mov
mov
rorl
test
xor
cmp
inc
sbb
cmpsl
sbb
insl
pop
lret
out
add
ds
daa
xor
pop
cmp
lock
subl
inc
pop
pop
dec
je
cs
shl
stos
pop
adc
js
cmp
cmp
add
push
pop
mov
pop
jmp
loop
test
pop
cmp
iret
sub
icebp
fistpl
mov
fsubrs
ds
mov
and
adc
jmp
fnsave
hlt
inc
adc
dec
inc
gs
fistpl
stc
sub
lds
pop
inc
mov
and
sub
push
cmp
lock
and
int3
xchg
cs
add
adc
stos
sar
cmp
incl
imul
negb
jne
jge
arpl
pop
leave
pushf
push
mov
fidivrl
sbb
into
ret
sahf
pop
push
idivb
jno
xchg
fdivrl
pop
jae
push
mov
into
adcl
je
push
shlb
ret
outsb
ljmp
test
push
lds
or
mov
stc
cmp
mov
iret
and
mov
mov
cmp
pop
pop
and
jbe
push
loopne
sbb
add
cs
gs
adc
jns
cmp
push
pop
xchg
ret
mov
adcb
add
mov
dec
movsl
pop
shrb
es
ljmp
roll
aam
mov
lds
or
les
sub
aad
lods
push
int
push
and
int
inc
popf
jmp
sub
jmp
inc
push
sar
and
rol
daa
adc
mov
stc
shl
hlt
xchg
push
push
out
cmpsb
clc
xor
mov
sbb
outsb
divl
bound
adc
jle
popa
sar
mov
cli
jns
inc
lcall
mov
pop
call
adc
enter
in
rcll
hlt
inc
add
repnz
psrld
cmc
dec
bound
jmp
jmp
inc
xchg
shr
repnz
xlat
adc
icebp
sub
repz
dec
sub
push
xor
lds
insb
push
mov
arpl
sbb
addb
adc
mov
add
fcomp
and
scas
sub
or
jo
add
and
xchg
adc
mov
dec
lret
xor
sub
inc
or
jecxz
adc
cs
sahf
dec
iret
loope
insl
mov
mov
jmp
xor
cmp
sbb
cmp
lods
imul
mov
pusha
xor
mov
xchg
ret
xor
push
in
mov
pop
sbb
jecxz
in
rorl
fimuls
adc
and
repnz
loop
xchg
push
sbbb
mov
fidivs
adc
and
repnz
loop
xchg
push
sbbb
mov
fidivs
adc
and
repnz
jecxz
xchg
push
sbbb
sub
fidivl
adc
mov
hlt
pop
outsb
loop
in
or
push
pop
inc
popa
adc
inc
or
sbb
bound
and
push
xor
mov
mov
int3
lock
and
cmp
or
sbb
insb
push
jl
dec
jo
dec
cld
nop
mov
mov
int3
lock
divb
ficoml
pusha
xor
pusha
jp
push
lods
nop
shlb
int3
andl
insl
push
sbb
dec
arpl
out
cmp
lahf
sbb
dec
aaa
or
stos
and
imul
inc
xchg
fistpll
fcomps
jae
ja
imul
push
lods
jl
sub
or
pushf
shl
mov
fs
xchg
inc
nop
jae
bound
and
aas
and
daa
imul
dec
and
xorl
pop
in
mov
dec
arpl
and
int
fists
mov
pushf
insb
mov
xlat
jae
lahf
push
pop
mov
test
push
inc
mov
mov
add
rorb
mov
int3
mov
pushf
cmp
or
jo
insb
push
cmp
jo
repnz
nop
sub
pushf
mov
loop
int3
call
dec
outsl
dec
pop
jb
add
or
int
std
lock
xchg
scas
mov
push
mov
dec
inc
xlat
dec
add
sbb
push
xchg
icebp
std
cmc
jmp
lahf
cltd
sarb
pavgb
dec
sub
inc
dec
jo
pusha
lods
nop
mov
mov
int3
lock
sub
cmp
or
sbb
insb
push
jl
dec
jo
pusha
lods
nop
mov
mov
int3
lock
sub
clc
push
movsb
dec
inc
into
and
adc
fnstcw
pop
out
fisttps
xor
outsl
jnp
test
jl
pop
mov
out
fst
sbb
mov
adc
lret
cmpsl
in
or
mov
aam
sub
sahf
mov
mov
mov
jle
stos
push
lahf
iretw
cmp
fwait
dec
jg
mov
mov
test
or
add
xchg
cmp
rol
xchg
std
dec
dec
and
rorb
lods
mov
adc
iret
ret
dec
dec
jl
iret
pop
cmp
xor
ltr
push
xchg
inc
movsb
pop
add
mov
add
out
icebp
cmp
add
ret
mov
das
sbb
inc
lgs
std
cltd
mov
cli
adc
cld
cmpsl
or
test
cwtl
sbb
pushf
mov
cmp
inc
dec
movsb
ds
ljmp
sub
in
pop
or
dec
ja
pop
insb
adc
scas
icebp
jno
aaa
idivl
imul
jnp
mov
inc
mov
rcrl
sub
pop
loopne
aas
shll
jne
mov
stos
je
jge
aas
pop
adc
dec
sbb
adc
inc
lds
pop
add
jo
sbbb
call
leave
cmp
gs
push
add
adc
out
push
hlt
leave
and
cld
in
cmp
push
sbb
lds
dec
push
pop
sub
xlat
in
push
jge
push
mov
les
jbe
sbb
add
fs
jne
jge
orb
jo
stos
lahf
inc
xchg
loopne
jne
inc
adc
mov
dec
jbe
call
fldt
icebp
stc
pop
fnstcw
adc
ret
and
sahf
adcb
cmp
inc
mov
mov
dec
sbb
dec
aam
jl
cmp
xchg
and
stos
rol
outsb
mov
cmpsl
fisttps
fcoml
mov
out
ret
xchg
mov
sbbb
inc
and
dec
xchg
into
jl
in
int
mov
dec
movsb
add
imul
mov
imul
mov
pop
test
sbb
nop
pop
mov
pop
or
add
sbb
cmp
jecxz
fcmovu
mov
ja
jb
mov
nop
inc
fwait
jbe
shl
mov
push
pop
push
std
xor
cmc
out
fists
cmp
pop
cmp
cmp
sbb
out
cmp
jnp
dec
cld
arpl
lret
iret
dec
add
mov
push
lahf
je
ret
jnp
lock
mov
jo
inc
mov
xchg
out
enter
bound
push
cli
enter
ds
mov
push
jmp
pop
and
mov
sub
pop
jo
inc
or
rclb
stos
frstor
loopne
pop
push
cld
sub
cmc
shlb
mov
mov
mov
test
mov
mov
mov
push
mov
or
pop
sub
test
sahf
sti
sbb
mov
pop
mov
ret
dec
js
rolb
bound
inc
mov
adc
mov
pop
addr16
sub
mov
xchg
lea
push
jmp
int3
movsb
in
push
scas
adc
fisttpl
mov
push
dec
daa
aad
jno
clc
sbb
dec
adc
fsubs
cmp
aaa
dec
mov
mov
fwait
dec
push
cwtl
repz
cs
push
jns
or
push
pop
inc
jp
xchg
out
add
ja
addr16
rcll
jge
pop
lret
lret
mov
popf
adc
ljmp
iret
test
and
add
shlb
mov
inc
xor
imul
jmp
outsb
bound
xchg
sbb
addl
mov
push
pusha
mov
inc
ds
sub
adc
add
mov
and
cmp
and
add
lcall
mov
jmp
leave
cld
mov
mov
adc
jg
adc
rorb
xchg
mov
bound
call
cld
das
push
push
mov
or
mov
dec
xor
cmpsl
mov
in
adc
sub
loopne
cs
cwtl
repnz
mov
sarl
loop
in
jl
ljmp
jno
ss
inc
in
mov
das
mov
mov
fmuls
lods
loope
out
adc
push
push
insl
jne
dec
jb
xchg
mov
psrld
xchg
pop
daa
incl
fcom
shrb
filds
jmp
and
inc
mov
adc
push
sbb
mov
sub
mov
dec
bound
and
cmp
and
mov
xchg
int
and
fmuls
and
push
movsl
mov
pop
cmp
sub
mov
inc
ret
push
and
in
or
pushf
imul
bound
loop
rorl
scas
sbb
add
aas
call
and
jl
lds
bound
dec
loopne
fiaddl
push
das
movups
xor
insb
cwtl
ljmp
mov
hlt
push
or
out
out
xchg
js
mov
aad
scas
test
mov
xor
jp
jnp
out
int
lock
xchg
adc
cmp
jecxz
frstor
push
icebp
lahf
mov
fildl
xor
imul
call
jnp
inc
push
push
in
dec
dec
sarb
xlat
adc
lret
push
into
nop
subl
aam
rcrb
adc
int3
mov
pusha
or
or
mov
imul
lret
mov
loop
mov
call
out
movsl
sub
dec
test
mov
incl
repz
pop
pop
repnz
ret
popf
scas
sets
mov
xor
repnz
adc
out
cmp
pop
jg
pop
scas
or
and
mov
pop
lods
cs
cmp
sbb
mov
sbb
mov
repnz
ja
in
data16
jne
es
dec
sub
add
cld
dec
dec
aas
mov
add
pop
push
stos
mov
lahf
shll
push
in
push
dec
jo
out
xor
std
push
jg
xor
clc
mov
adc
out
or
leave
xchg
das
dec
and
in
clc
ss
ret
fimull
pop
pop
cmp
outsb
xor
test
mov
aas
sahf
push
sbb
jbe
xchg
sub
xor
lret
inc
in
xchg
fucomip
js
mov
inc
push
mov
xlat
push
dec
xor
pop
inc
out
and
mov
xchg
push
insb
out
xor
mov
loopne
mov
ss
shl
add
into
and
scas
pop
dec
dec
add
mov
add
push
lcall
xchg
clc
push
sahf
pop
sbb
cmc
outsb
scas
and
push
fcmovnb
lahf
mov
xchg
je
movsb
gs
xchg
and
into
ret
cmpsb
add
mov
fisubl
push
sub
test
in
pop
mov
pushf
xor
mov
push
add
or
cmp
mov
lea
xchg
pusha
in
cmp
daa
cmp
scas
pop
movsb
xchg
loope
or
adc
jno
xchg
cmp
pop
mov
or
lods
pushl
mov
mov
jnp
lea
imull
std
loope
jge
sub
and
jmp
mov
add
push
jo
and
popa
in
cmpb
out
in
push
test
pop
lods
mov
fadds
and
clc
cmp
insb
sub
imul
lea
pop
sti
sahf
push
jp
and
popa
push
mov
jmp
xor
pop
mov
cmp
mov
cli
repz
and
mov
dec
fadds
xlat
insb
out
int
add
hlt
repz
imulb
pop
xor
or
mov
cmp
xor
mov
jp
jno
sbb
repz
in
pop
icebp
fldt
cs
enter
leave
or
sbb
mov
in
daa
jge
shll
jg
adc
fldt
rorl
xlat
push
mov
out
adc
aad
hlt
sahf
scas
inc
arpl
mov
mov
in
jnp
shrl
cmp
lret
xchg
xchg
jg
dec
lds
insl
jge
in
pop
scas
add
in
cltd
icebp
sti
in
lret
mov
sahf
push
jp
clc
sahf
mov
cltd
sarb
xor
aam
jb
and
dec
mov
lcall
divl
inc
sahf
mov
and
xor
sub
bound
out
sub
add
data16
xlat
dec
pop
cmp
add
push
push
outsb
divl
rolb
push
outsl
xor
addr16
sbb
mov
dec
test
imulb
lods
dec
es
adc
dec
lret
pop
mov
jno
adc
fwait
xor
inc
inc
cmp
pop
hlt
mov
arpl
inc
xlat
push
and
in
das
cli
xor
mov
adc
or
cmp
pop
out
mov
mov
mov
sub
xchg
daa
xchg
loope
daa
ret
cmpb
and
hlt
loop
out
or
and
mov
and
leave
test
pop
cmpsb
xchg
mov
sbb
gs
jge
xchg
push
sub
inc
sbb
dec
inc
insl
sbb
jge
xchg
and
cmc
loop
addr16
jg
xchg
pop
sti
adc
xchg
pushf
dec
arpl
insb
xchg
cmpsl
add
ficoml
std
adc
pop
lods
xchg
es
cmp
scas
jmp
lcall
mov
push
or
or
dec
ss
orb
inc
mov
add
inc
adc
mov
nop
add
mov
jo
mov
out
mov
les
mov
dec
sbb
ljmp
imul
and
enter
xchg
pop
orb
jne
push
jmp
jg
and
mov
inc
adc
pusha
jmp
mov
adc
mov
mov
or
push
out
mov
xchg
test
negl
and
lods
pop
mov
jle
lea
ret
leave
ss
and
xchg
repnz
std
mov
xchg
jnp
jp
xor
jno
fnstenv
test
push
jg
and
ljmp
adc
xor
push
cmp
dec
pop
daa
imul
sbb
xchg
mov
sbb
and
fsubrl
scas
push
cld
adc
aam
movsl
ds
std
mov
loopne
push
mov
gs
sti
inc
xchg
iret
dec
jne
pushf
repnz
cld
push
and
add
pop
inc
stos
loop
xchg
stos
ja
aam
mov
loope
in
out
dec
dec
lret
sti
add
sar
adc
add
bound
out
outsb
mov
inc
fadd
sahf
cli
adc
dec
cmc
lahf
lcall
and
ss
add
push
dec
jns
push
adc
push
cmp
push
fdivs
mov
lret
movsb
push
aaa
mov
movsl
dec
push
jae
ffreep
pop
cli
daa
push
movsl
orb
mov
pop
sbb
mov
repnz
fldt
jl
sbb
jne
sbb
mov
mov
js
pop
mov
and
stos
adc
sub
cmc
divl
and
call
enter
sbb
icebp
sti
inc
cmc
xchg
mov
and
lock
adc
mov
ds
mov
pop
mov
push
pusha
shl
leave
cmp
cltd
push
adc
dec
sbb
cmc
mov
push
mov
xor
pop
inc
inc
cmpsl
loope
pop
in
fcomp
test
sbb
push
pop
mov
movsl
pop
pop
add
filds
int
and
jecxz
push
lahf
xchg
pop
orl
mov
adc
add
cwtl
sbb
inc
mov
push
cli
sbb
jns
mov
loop
stos
test
inc
push
pop
scas
dec
or
mov
mov
pop
push
test
test
ret
mov
sub
lcall
fildll
jno
jecxz
add
sahf
insb
xchg
add
cli
pop
or
mov
jp
jmp
jno
lds
lea
fcmovb
sub
and
in
adc
loope
xchg
push
mov
in
jg
cmc
addb
mov
aam
dec
inc
int3
cmc
push
out
mov
mov
inc
je
mov
test
add
addr16
lock
retw
xor
and
xchg
jb
ljmp
jns
sub
push
sbb
sbb
cld
cmpl
dec
ljmp
dec
sbb
jp
add
push
mov
sub
jo
sbb
xor
fbld
dec
lods
roll
and
dec
add
pop
and
fiadds
out
jo
pop
ficompl
pop
or
outsb
or
inc
ret
inc
xchg
xlat
roll
sub
ja
enter
xlat
mov
jle
push
adc
lods
stc
or
mov
in
xor
cld
pop
addl
dec
jmp
rcrl
add
add
pop
sbbl
fnstsw
mov
sub
xchg
sbb
jp
cmpsb
aas
fcmovnb
imul
das
int3
sahf
cld
sarl
fsubrl
mov
and
in
aad
int
mov
xor
add
adc
les
jb
push
loope
arpl
mov
cmpb
mov
sbb
in
int3
lret
jb
push
push
mov
pop
push
and
jecxz
fisttpll
add
jns
and
je
rcl
ret
aas
popf
jns
mov
std
sub
jmp
pop
pusha
test
or
out
outsl
subl
pop
adc
lods
pop
sbb
les
gs
out
dec
js
cmp
or
and
pop
add
rcll
add
popf
sahf
mov
in
pop
jp
cmpb
test
ljmp
shlb
pop
mov
shl
aad
xchg
and
js
cmp
cwtl
xor
cmp
mov
ret
cmp
mov
ja
sahf
sahf
fcoms
loopne
out
insl
push
inc
subl
xlat
sub
jb
dec
mov
orl
mov
shr
xor
std
or
stos
jns
xchg
mov
outsl
mov
mov
mov
mov
adc
ret
scas
pop
cmc
leave
pop
xchg
fldcw
outsb
xchg
or
add
fistl
xchg
lret
adc
xor
repz
sbb
mov
push
mov
cmc
mov
leave
and
enter
xchg
andps
xor
dec
ret
sbb
stos
inc
sub
fs
jl
cmp
push
pop
repz
pop
mov
insb
out
pusha
out
jb
inc
mov
pusha
mov
jmp
cmc
sbb
fnstsw
data16
jbe
dec
pushf
inc
sub
inc
adc
push
mov
lea
flds
pop
xor
jae
out
mov
in
cmp
shlb
je
loop
bound
mov
pop
mov
push
xchg
fsubl
imul
cmp
in
push
pop
push
in
loopne
dec
iret
dec
scas
iret
jg
shl
daa
push
mov
lahf
cmp
inc
test
cmpsb
shrb
jl
pop
test
cli
pop
mov
xchg
mov
leave
mov
jns
xor
jecxz
std
pop
dec
dec
repz
pop
xchg
jbe
jnp
fimuls
sarb
icebp
dec
aaa
xchg
cmp
xor
out
sub
push
mov
push
sbb
inc
mov
sbb
std
push
hlt
mov
and
in
iret
ljmp
xor
and
arpl
rcr
and
out
mov
push
push
add
or
sbb
pusha
pop
scas
ret
jle
jnp
push
xor
pop
ss
pop
add
pop
mov
ds
movsb
add
mov
pop
and
imul
dec
push
mov
adc
leave
push
xor
inc
fcomip
jbe
sahf
mov
mov
jle
decl
xchg
repz
jns
xor
jnp
sbb
cmp
sub
and
or
das
in
xchg
mov
mov
push
cmp
pop
nop
push
xlat
notl
loope
jecxz
iret
dec
add
in
cmpsb
rorb
ret
enter
daa
cmpsl
insb
add
dec
push
enter
in
imull
mov
xor
bound
mov
cwtl
adc
sbb
nop
sbbb
mov
push
jnp
dec
adc
inc
hlt
popa
scas
push
adc
cltd
dec
dec
insl
mov
cmp
xor
pop
mov
inc
outsl
scas
js
mov
inc
imul
popa
sub
inc
sahf
and
mov
pushl
dec
std
xor
adc
loop
dec
loopne
addr16
push
inc
add
lods
rcrl
aas
lcallw
xor
mov
adc
mov
fidivrl
imul
loopne
and
mov
arpl
xor
pop
adcb
xor
cmp
lds
imul
jmp
pop
lcall
and
dec
iret
loop
xchg
sahf
pop
loope
ljmp
mov
je
pop
inc
test
nop
cmp
mov
mov
jl
aam
push
xchg
mov
jmp
into
push
mov
xor
inc
adc
mul
aas
xor
ficoms
jl
and
lcall
gs
mov
pextrw
lcall
pop
inc
and
into
les
push
xlat
pop
psubw
out
xchg
ljmp
mov
jae
fmul
mov
inc
sbb
ja
inc
xchg
adc
sub
xchg
push
pop
movsb
jns
adc
jge
cmc
and
dec
mov
mov
adc
mov
mov
leave
pop
mov
andb
fnsetpm(287
push
sbb
test
jns
sbb
ret
in
push
dec
movsl
pop
cmp
jl
xchg
mov
push
or
mov
sar
repz
adc
fildll
add
enter
add
mov
loopne
outsb
jp
jnp
je
inc
and
lods
xor
shlb
repnz
or
outsb
pop
xchg
aam
and
xor
push
xchg
mov
ja
jecxz
add
cmp
add
mov
or
push
lods
dec
jns
rcrl
sub
out
stos
mov
iret
lahf
in
xchg
xor
lahf
out
stos
xchg
pusha
cmp
dec
js
adc
out
mov
cmp
fcmovnbe
and
je
insl
dec
gs
and
lahf
sbb
rorl
and
or
shll
mov
lea
test
xchg
cmp
mov
jb
xor
mov
sbb
push
pop
xchg
mov
repnz
movsb
out
jae
dec
xor
adc
xchg
outsl
cmc
stos
jb
clc
jg
lea
dec
lea
push
testb
dec
and
add
aad
out
fistl
mov
pop
int3
jo
push
xchg
mov
sarl
push
sub
dec
or
test
mov
inc
jno
fldt
adc
dec
xor
and
hlt
push
adc
adc
rcll
sbb
mov
mov
pop
cli
mov
inc
adc
out
inc
add
popa
cld
hlt
xchg
sbb
movsl
in
pop
and
add
les
lret
pop
scas
daa
jmp
xchg
adc
push
stos
mov
call
pop
pop
fcoms
add
jl
fucomi
mov
mov
xor
loope
bound
outsl
enter
sar
pop
rorl
or
pop
pop
and
cmp
fsubrs
pop
mov
or
or
js
outsl
cmp
or
stos
pop
mov
sub
movsl
repnz
and
pusha
cli
or
adc
fs
xor
lret
inc
in
sub
pop
dec
mov
daa
adc
rolb
sar
mov
jl
nop
xchg
stos
xchg
add
out
pop
fimuls
pop
sbb
mov
dec
fstpl
push
or
cwtl
insb
mov
jne
mov
add
ss
ljmp
mov
push
dec
fcompl
cmpsl
pop
fsubrl
adc
add
xor
cmp
pop
push
cmp
out
loop
lock
dec
repnz
pop
mov
or
inc
decb
xlat
lcall
jle
test
insl
lods
sub
rcr
mov
iret
and
jl
sub
jl
call
ret
cmpsl
scas
pop
movsl
xchg
lock
cmp
dec
xchg
notl
jecxz
add
dec
pop
cltd
lds
insl
sub
nop
bound
sub
lahf
push
enter
mov
inc
adc
imul
xchg
jo
xlat
mov
add
repnz
add
push
jl
dec
jo
pusha
lods
nop
mov
mov
int3
lock
sub
cmp
or
sbb
insb
push
jl
dec
jo
pusha
lods
nop
mov
mov
int3
lock
sub
aas
push
sbb
sbb
insl
push
js
dec
je
pusha
test
mov
test
enter
xor
adc
test
xor
insb
push
insb
inc
dec
lock
es
xlat
fwait
test
mov
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
sub
imul
adc
push
mov
and
or
pop
push
or
add
add
add
add
ljmp
add
add
add
add
add
add
dec
add
adc
and
call
add
and
addl
jbe
popl
xchg
add
add
add
add
add
cmp
dec
add
add
add
add
push
fiaddl
add
add
add
test
push
add
add
addb
add
add
or
sbb
stos
add
add
add
cltd
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
sti
add
push
arpl
add
add
add
add
xor
sti
add
add
push
sbb
outsb
add
add
add
add
adc
push
add
fiaddl
sbb
add
add
add
add
jb
xor
add
and
jecxz
dec
add
add
add
push
movsb
add
add
add
add
add
add
nop
add
dec
push
add
xchg
mov
and
jle
xor
ja
push
add
pusha
add
add
add
dec
push
nop
add
add
add
add
add
add
add
stc
add
add
test
add
add
stos
add
add
add
add
add
add
add
add
add
add
add
add
adc
mov
add
add
add
add
push
add
add
pop
add
add
add
add
add
add
add
stos
add
add
add
add
add
stos
add
js
mov
stos
add
add
add
fwait
add
add
xor
add
add
popa
add
add
add
add
add
add
jbe
push
add
adc
adc
xchg
add
add
add
add
add
add
addb
add
add
add
add
add
or
popl
addl
pop
add
sub
add
add
push
xchg
add
add
add
jae
mov
sub
xchg
add
add
add
add
add
mov
lds
mov
add
add
add
add
add
add
add
add
add
sbb
add
add
jae
and
pushf
add
add
add
add
add
hlt
add
addl
jl
stos
add
add
add
add
add
add
add
add
add
sbb
xor
loope
cwtl
add
add
add
add
add
add
add
add
add
mov
stos
add
add
add
add
add
sbb
popl
and
push
add
add
add
add
add
mov
add
push
add
adc
aad
dec
push
nop
add
add
add
add
sbb
jg
repz
jle
fistl
enter
into
mov
cmp
repz
or
mov
fdivl
stos
xchg
push
arpl
popf
push
dec
daa
or
test
lds
pop
sub
or
mov
iret
push
out
xchg
adc
mov
and
inc
mov
or
push
imul
or
pushf
mov
sub
jmp
and
lcall
push
add
pop
cmp
add
arpl
or
cld
mov
and
in
fildll
js
push
sub
dec
incl
sbb
mov
ret
or
xchg
mov
dec
pop
ret
loope
add
movsl
sar
mov
test
cmp
dec
pop
jnp
pop
inc
cwtl
sbb
jae
push
cmp
insl
in
int
dec
mov
clc
imul
mov
mov
or
gs
dec
shll
pop
pop
sub
push
cmp
mov
loopne
rcrb
mov
jl
hlt
xlat
inc
mov
push
lret
shll
mov
in
xchg
xor
stos
ret
test
imull
push
dec
loope
mov
sbb
adc
es
inc
jae
rcll
push
push
bound
or
dec
orb
push
xchg
mov
inc
adc
jmp
sbb
outsb
sarb
nop
and
mov
loopne
add
lea
add
pop
push
jb
mov
jmp
push
stc
inc
ds
inc
fs
les
out
pusha
test
jno
mov
sub
jle
imul
mov
jle
shlb
fisubrs
push
xor
sti
test
mov
mov
fldcw
mov
repz
mov
cwtl
lahf
aad
push
dec
jmp
roll
sahf
push
and
push
cltd
icebp
aad
sbb
std
mov
push
cli
outsl
add
dec
leave
imul
push
add
insl
or
stc
xor
insl
fnstsw
lahf
xor
loope
cld
hlt
add
into
ss
in
push
adc
and
add
inc
push
pop
lret
daa
fimuls
mov
xchg
fucomp
adc
xlat
pop
insl
sub
rcr
subl
notl
inc
pop
push
mov
mov
xchg
add
or
cs
push
cmpb
and
or
or
or
mov
cmc
xor
sbb
outsb
out
fisubrl
xchg
outsb
stos
or
sbb
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
