call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
sub
data16
test
sub
imul
aam
out
mov
out
xchg
inc
xchg
movsl
data16
test
ss
cmc
push
lds
lods
cld
and
add
mov
cmpsl
jne
inc
xchg
movsl
jg
dec
test
das
in
cmc
push
lds
aad
and
mov
cltd
xor
and
sub
es
data16
sbb
sub
and
push
inc
pop
int3
sub
and
sahf
into
mov
jbe
jmp
push
fsts
icebp
in
jo
int
fistpll
push
sbb
sub
lret
jno
gs
mov
sti
movsl
mov
test
add
push
xor
sbb
dec
jo
jne
rolb
loopne
xchg
mov
int
adc
hlt
scas
push
sub
fimull
cmc
xor
mov
dec
outsl
push
xchg
rcrl
sbb
out
push
scas
push
cmc
ficompl
jns
cli
adc
cmpsl
jne
inc
jle
xchg
and
sbb
lods
cmp
or
sub
movl
jbe
xchg
movsl
data16
test
es
cmc
push
lds
aad
and
fists
xchg
inc
lahf
cmp
mov
and
adc
imul
pusha
test
fisubl
ret
cmp
sbb
data16
loopne
xchg
inc
mov
jp
inc
mov
outsb
out
xchg
push
mov
rorl
aad
out
xchg
pop
loope
std
xor
inc
lock
lret
es
push
lds
aad
and
adc
xchg
inc
xchg
movsl
data16
test
ss
cmc
push
lds
aad
and
adc
xchg
inc
xchg
movsl
movsl
fisttpll
push
or
test
int3
xchg
scas
sub
jo
mov
sub
les
sub
cltd
fs
sbb
int
jmp
pop
sbb
and
jns
jb
stos
testl
dec
mov
adc
cmp
and
xor
mov
mov
inc
das
clc
out
pop
push
es
mulb
cltd
mov
jmp
rcrb
lods
pop
mov
xor
jbe
pop
lcall
aad
out
mov
inc
push
out
push
mov
jo
jl
leave
cmp
fsub
cmp
add
dec
jns
js
gs
xchg
and
add
xchg
stos
shl
fldenv
mov
inc
sbb
adc
mov
dec
pop
cwtl
mov
sbb
jo
mov
popf
stos
pop
inc
push
pop
in
cmp
mov
or
repnz
pop
xlat
stos
dec
xchg
inc
dec
jne
dec
pusha
add
call
mov
lds
mov
clc
add
or
sub
pop
test
addr16
ss
fisttpll
inc
repnz
rolb
push
sbbb
pusha
add
push
push
sbb
aam
adc
cmp
pop
ret
ljmp
ljmp
push
lahf
rcrb
jae
cmp
bound
pop
sahf
out
movsl
fimuls
sub
xor
jl
out
dec
fidivrl
loope
in
dec
imul
xor
inc
inc
xor
out
scas
mov
add
jge
jae
leave
and
cmpsb
popf
sbb
xchg
cmp
push
dec
imul
cmpsl
adc
pop
ret
mov
pop
int3
fnstsw
movsb
fdivl
fstl
sbb
sbb
xor
jae
push
aad
pop
pop
fnsave
sub
imul
mov
sub
and
or
jecxz
push
push
je
pop
repz
push
testl
sbb
cmp
movsb
lock
pushf
dec
adc
push
pop
lock
sub
int3
mov
xor
xchg
push
aaa
shll
xor
jae
sbb
pushf
out
mov
mov
in
inc
clc
orb
xlat
lds
mov
jbe
lret
mov
mov
xor
xchg
leave
push
jns
mov
mov
jb
inc
pop
stos
cmp
mov
cli
push
or
push
sarb
xchg
mov
or
mov
xor
cld
sbb
lds
stc
or
sarl
adc
or
mov
mov
shrl
ja
addr16
cmp
movsb
push
shl
imul
aad
pop
mov
xor
mov
push
in
in
out
mov
ficomps
aam
mov
stos
adc
pop
push
popl
fists
std
insl
inc
cltd
push
fdivrl
outsb
movsb
aad
add
pop
enter
pop
fs
lret
or
arpl
jo
cmp
loopne
adc
rolb
in
ss
test
aad
pop
daa
jno
jl
fsubs
out
push
test
cli
jmp
and
fs
ljmp
sub
lds
jno
xchg
cwtl
int3
sub
mov
into
pop
rorb
xor
inc
dec
outsb
xchg
cld
xchg
and
dec
adc
pop
lahf
jmp
push
sub
loopne
adc
and
iret
cmc
repz
aad
lods
repnz
xor
push
rorb
imul
pop
xlat
pop
je
ret
adc
inc
mov
mov
sub
in
adc
sub
jo
mov
add
int3
mov
aad
xor
test
push
jecxz
popf
or
push
or
nop
jp
jge
and
lds
imul
xchg
xchg
xchg
adc
mov
or
mov
std
into
fcmovu
ja
inc
stos
test
xlat
lock
sbb
xchg
pop
xchg
cmp
mov
andl
outsl
jbe
jmp
ljmp
adc
popa
clc
in
pop
cs
les
imul
xor
push
test
and
insl
mov
bound
std
ds
sub
sbb
or
dec
jns
into
and
in
jne
xabort
cltd
xchg
imul
ret
sub
mov
gs
dec
jno
pop
lret
pop
int3
and
fistpl
mov
mov
into
push
clc
adc
mov
out
mov
add
fwait
stos
imul
jb
sub
sub
ror
ss
sti
gs
repnz
sub
push
ror
push
ljmp
push
xor
and
jae
xor
fs
lea
ds
add
rorb
arpl
fwait
dec
push
pusha
sbb
cmp
out
push
xchg
push
dec
sub
or
jns
hlt
sbb
mov
inc
lea
pop
adcl
mov
fld
jg
bound
xchg
jo
mov
inc
xchg
dec
dec
movsb
cmp
jae
leave
lea
popf
inc
cmpsb
repz
scas
loope
arpl
xchg
stos
cmpsb
iret
push
scas
jnp
fidivrl
sbb
add
cld
enter
dec
addr16
out
mov
xchg
scas
sbb
jae
fstps
sub
les
sbb
fwait
add
int
test
pop
pop
or
imul
pop
add
xchg
pop
pop
xchg
negl
repnz
and
pop
pop
mov
push
pop
movsb
mov
mov
nop
gs
ja
imul
adc
mov
jne
xchg
test
mov
xor
jno
cltd
add
into
jmp
sub
jle
pop
fdivs
fsubrs
xchg
pop
mov
enter
movsl
dec
push
jecxz
sti
cwtl
cltd
pop
out
xlat
popw
or
mov
and
bound
popa
cwtl
lods
hlt
cld
into
shll
pop
and
fwait
cltd
js
leave
mov
mov
popf
sbb
or
sub
mov
add
popa
inc
sub
cld
sbb
inc
adc
pusha
xchg
cmp
fsubrs
push
xor
das
fadds
pop
lods
xchg
rorl
mov
fdivr
enter
dec
into
hlt
and
add
dec
lods
lock
cmp
fidivl
test
mov
shll
pop
imul
lods
fcoms
lcall
out
adc
add
repz
dec
sub
jbe
rolb
xchg
pop
pop
aam
adc
jo
mov
imul
sub
shrb
push
lret
es
je
dec
scas
pop
rolb
stos
mov
cmp
and
pop
scas
fldl
xor
push
decb
mov
jge
lea
mov
pop
or
adc
and
imul
cli
or
stc
dec
push
pop
pop
push
xchg
jp
mov
fiaddl
scas
mov
out
inc
adcb
cwtl
adcb
cmp
push
xchg
sbb
stos
adc
cmp
out
inc
push
sbb
mov
dec
cmp
jnp
and
ljmp
jb
adc
aam
lods
push
xchg
pop
or
in
lods
mov
fimuls
inc
xchg
jo
jne
fstpl
sub
mov
lret
push
mov
mov
sbb
and
push
cltd
mov
imul
xchg
fwait
jecxz
cmp
dec
xor
and
sub
sub
jle
fwait
es
mov
enter
inc
out
push
cmp
shll
inc
sub
into
sbb
xchg
xchg
rclb
jmp
or
cwtl
mov
je
nop
lea
cltd
pop
out
mov
mov
push
jle
xchg
jmp
push
insb
loop
fidivl
xchg
fs
mov
push
and
popf
pop
mov
ret
ret
sbb
xchg
leave
fcomps
dec
push
add
xchg
push
adc
int
sahf
les
xchg
jmp
and
js
xor
in
shl
adc
xlat
xchg
inc
das
call
imul
push
mov
rol
mov
or
sbb
bound
xchg
je
xchg
sbb
js
sbb
jns
loope
pop
cmpsb
popf
hlt
xor
das
leave
filds
insb
aad
stos
mov
sbb
push
xor
sub
xor
das
jecxz
mov
mov
icebp
loop
push
push
loopne
loop
jno
pop
cmp
xor
fxch
test
fadds
addr16
ret
ds
cmpsl
dec
pop
and
dec
xor
mov
scas
mov
fcoms
sbb
dec
fcomps
stos
xor
sbbl
or
subl
insb
push
mov
es
or
cmp
pop
rorl
mov
adc
dec
sti
pop
in
xor
bound
jmp
stos
ljmp
and
dec
cmpsl
ror
cmc
sub
or
mov
xor
popf
mov
adc
push
out
dec
push
push
sarb
lds
xchg
movsb
sbb
mov
add
push
sbb
cli
vinsertf128
lcall
insl
xor
clc
stc
ds
roll
stos
cmp
ss
loopne
sbb
lret
test
dec
jl
data16
test
stos
jno
jne
shlb
clc
test
xchg
adc
repz
test
or
push
xor
pop
jbe
push
in
in
js
popa
outsb
jmp
push
insb
in
jle
mov
sub
adc
cltd
inc
xlat
popf
je
sbb
dec
mov
fisubl
cs
cltd
loopne
daa
ror
push
and
dec
push
out
push
rcrl
mov
js
xorb
idivb
scas
jne
cmp
xchg
sti
int3
xchg
sbb
mov
popf
out
add
into
scas
mov
inc
xor
sub
aas
lea
jb
pop
shr
pop
jae
inc
scas
or
stos
and
mov
and
push
stos
push
stos
push
xor
pmaddwd
out
push
inc
aaa
xor
push
loopne
mov
movsl
ret
push
adc
mov
faddl
sbb
mov
enter
jno
fs
pop
push
mov
add
inc
imul
fs
mov
mov
out
rol
jb
jmp
sbb
jbe
out
mov
and
mov
insb
cmp
call
push
or
les
jne
xor
xchg
push
arpl
mov
sbb
lret
mov
add
adc
jmp
mov
add
sbb
rcrl
sbb
insl
into
xor
xchg
sbb
popa
insl
xor
fstpl
in
daa
es
mov
xchg
je
jnp
mov
xchg
push
les
lods
inc
sub
inc
sub
jl
adc
add
pop
adcb
xorb
fs
or
jnp
adc
adc
daa
gs
jp
dec
push
inc
das
mov
int3
lock
push
mov
fsub
vmovaps
and
mov
imul
js
mov
in
ss
cmp
scas
xchg
scas
xorb
xor
xorl
xor
in
jb
cmpsl
jo
in
cli
lret
sub
jmp
frstor
or
dec
lret
testb
out
inc
sub
mov
xlat
in
add
es
and
out
int3
cs
mov
cmpsl
insl
das
mov
sbb
adc
sub
xor
shl
out
sub
push
scas
sbb
rep
ss
jecxz
pusha
ja
jmp
mov
scas
jl
sub
mov
mov
movsl
xchg
xchg
std
pop
push
mov
add
push
cs
sub
imul
loopne
sar
pop
xchg
test
bound
jbe
lods
sbb
inc
add
dec
push
dec
push
dec
mov
push
jmp
push
mov
jnp
pop
clc
popf
enter
xchg
xchg
add
and
in
fsubs
lret
mov
cmp
ja
daa
bound
inc
sub
das
mov
gs
pop
dec
mov
inc
mov
mov
es
jmp
fnstsw
adc
cs
stos
push
jae
jp
das
mov
clc
mov
mov
sub
mov
push
sub
mov
jp
daa
pop
in
out
xor
mov
sbb
shrb
imul
push
iret
push
or
sbbl
pop
test
ds
fisubs
pushf
xor
inc
idivb
mov
and
xchg
cwtl
das
dec
xchg
xchg
outsb
in
test
sub
xor
and
mov
pop
jae
les
adc
inc
mov
test
and
inc
inc
or
sbb
ficoml
icebp
push
cmp
js
ret
adc
fistpll
addl
test
mov
sti
ljmp
arpl
xor
ds
rclb
cltd
push
scas
or
mov
pop
inc
dec
push
popa
push
sbb
and
sbb
iret
lds
outsb
xchg
not
cmpl
lret
or
push
lret
mov
pop
cmp
gs
pop
clc
aaa
inc
int3
icebp
pop
lret
or
mov
popa
jle
pushl
jp
adc
pushf
ja
mov
xor
xchg
rcl
jmp
xchg
ja
popl
stc
int3
pop
insb
movzwl
inc
push
cmp
jmp
adc
push
mov
jp
sub
loop
sbb
xor
ja
pop
je
pop
sbb
gs
jecxz
aaa
scas
and
push
bound
push
cltd
clc
lea
sbb
repz
jnp
xchg
mov
fidivs
cltd
mov
in
fcmovbe
push
jge
mov
cmp
aad
mov
or
push
insb
push
ficomps
insl
lret
mov
and
push
cmp
mov
xchg
mov
call
out
outsl
std
vmovapd
cbtw
sbb
push
mov
inc
hlt
shll
mov
fsubl
addr16
fsubrs
loop
mov
gs
mov
clc
fidivrl
clc
dec
adc
inc
fildll
scas
jg
sti
outsb
adc
pop
out
sbb
cld
out
ss
fs
cmpsl
sub
loope
cmp
movsl
cmp
nop
push
and
aas
clc
movsl
jno
in
lret
das
push
xchg
outsb
lods
imul
push
outsb
sub
cmc
cmpsl
mov
arpl
xchg
test
sbb
cs
push
js
loope
ret
arpl
nop
loopne
xchg
scas
lret
jp
ljmp
mov
in
loopne
mov
into
adc
jmp
scas
push
pop
cmp
out
and
enter
sar
pop
push
xchg
orl
xor
xchg
pop
movsb
inc
dec
fiaddl
cmp
mov
out
or
mov
ljmp
ljmp
pop
inc
push
or
cmp
push
out
mov
sub
cmpsb
loopne
nop
repz
xchg
dec
movsl
xor
mov
sti
fcomip
shl
adc
loop
std
push
and
jl
jo
or
cmp
cmp
out
out
inc
ss
es
jge
pushf
pop
push
and
jbe
lret
rcll
sbb
aam
sub
and
add
cmp
pop
or
mov
cwtl
or
in
or
jbe
adc
cmpsb
imul
loopne
xorb
mov
sbb
add
and
inc
repnz
jae
int
shll
mov
sbb
sub
xor
dec
cwtl
adc
mov
pop
imul
test
inc
jle
adc
add
daa
clc
arpl
xchg
stc
jg
jnp
jb
stos
cmp
and
push
mov
test
movsl
sub
push
or
mov
sub
add
nopl
roll
clc
outsl
roll
mov
xlat
dec
pop
xchg
test
icebp
gs
les
add
popa
ds
int3
xor
sbb
sub
call
or
adc
sbb
xlat
or
test
cmp
xchg
mov
and
int
push
mov
ficomps
jns
pop
cwtl
fcomp
leave
mov
sbb
cmpl
icebp
sbb
xchg
dec
mov
pop
add
mov
jne
inc
lret
mov
cwtl
mov
inc
jne,pn
scas
movhps
xor
loopne
stc
jnp
ja
les
lahf
xchg
cmp
inc
int3
lcall
sub
lahf
dec
fldl
mov
xchg
aam
pop
mov
ljmp
add
xlat
mov
sub
xor
push
in
adc
sahf
adc
jge
mov
or
mov
scas
out
or
movsb
push
leave
notb
mov
test
das
inc
movsb
pop
inc
adc
test
pushf
mov
mov
mov
inc
clc
xchg
mov
xchg
adc
inc
popa
adc
and
xchg
mov
cmc
add
and
dec
pushw
push
cmp
inc
imul
xor
xchg
popf
adc
cmp
clc
test
and
push
idivb
sbb
aam
sbb
sub
repnz
mov
pop
xchg
iret
je
adc
dec
scas
add
pop
dec
jg
out
gs
inc
das
inc
mov
push
lods
mov
frstor
mov
test
fdivs
jno
sbb
cmp
push
jne
mov
sbb
add
and
mov
fdivrl
push
sbb
mov
inc
ret
mov
mov
aam
into
mov
pop
sbb
xor
inc
jne
lret
outsl
xchg
cmp
inc
inc
jbe
adc
std
and
sub
push
add
mov
cmp
scas
dec
xor
push
leave
ss
pop
sub
mov
sarb
dec
inc
inc
inc
mov
inc
dec
int3
pop
sbb
lea
cmp
xchg
fnsave
and
outsb
adc
in
es
movsl
xor
xchg
test
out
outsl
mov
dec
sbb
jno
adc
out
cmp
hlt
push
jl
sub
dec
inc
push
sbb
sbb
lea
inc
xchg
xchg
cltd
or
sub
popa
lahf
jns
mov
aaa
loopne
stos
adc
push
cmp
mov
ret
aam
or
mov
push
sbb
iret
inc
xchg
cmp
ret
andb
leave
lret
dec
mov
sub
ret
int3
in
push
out
push
aam
dec
loopw
mov
stc
arpl
or
js
out
pop
in
pop
inc
adc
or
jg
xor
mov
dec
push
inc
mov
stc
arpl
xchg
pushf
std
mov
lret
adc
xchg
jnp
jo
xor
push
std
shr
push
addr16
nop
cld
popf
iret
and
into
test
cmc
loope
enter
push
or
jp
fs
push
push
pop
subl
cmc
sbb
push
mov
jae
pop
sub
pop
icebp
sub
stos
or
sub
das
push
icebp
mov
cmp
fdivs
pop
sub
or
lcall
dec
or
jg
sahf
test
mov
sbb
sbb
mov
pop
dec
push
incb
nop
into
inc
or
sbb
stos
repnz
mov
das
push
adc
test
std
insb
sub
sahf
aas
push
imul
dec
push
xchg
mov
lods
mov
xor
mov
mov
je
test
fdivrl
mov
idiv
mov
add
xchg
or
adc
fildll
cmp
mov
test
js
mov
dec
xchg
jecxz
movsl
popf
in
xor
ja
adc
sahf
stos
inc
fdivs
in
xchg
inc
lods
mov
sub
stc
nop
xor
stos
cmp
jl
test
dec
dec
xor
sub
imul
insl
mov
mov
jnp
cmp
shll
push
repz
xor
mov
add
lds
xchg
adc
push
sub
mov
mov
repnz
leave
ret
inc
pop
test
dec
negl
pop
dec
sti
aas
inc
sub
lret
fwait
mov
ret
pushf
in
xchg
cld
out
xchg
call
xor
dec
mov
jmp
xchg
test
xchg
pop
adc
and
jns
xlat
and
xchg
into
pop
pop
cmp
gs
in
mov
cmc
subl
and
xor
imul
int3
mov
push
les
dec
out
insl
dec
jbe
cmc
mov
mov
pop
jnp
inc
cmc
or
mov
inc
bound
ret
leave
js
leave
dec
mov
sbb
lods
add
aad
push
pop
or
loopne
outsl
mov
inc
outsb
push
ja
nop
rorb
lock
out
push
xor
test
dec
pop
jbe
aam
mov
cmp
out
adc
arpl
es
push
lds
aad
and
adc
xchg
inc
xchg
movsl
data16
test
ss
cmc
push
lds
aad
and
adc
xchg
inc
xchg
movsl
data16
test
ss
cmc
push
lds
aad
and
adc
xchg
inc
mov
inc
movsl
push
mov
test
ss
cmc
xchg
lds
lahf
jl
imul
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
scas
in
mov
fucom
adc
mov
jl
pop
push
dec
outsb
sub
pop
sbb
mov
sahf
fucomp
lods
lods
into
fsubrp
cs
jge,pt
dec
push
pop
outsb
pop
jle
dec
or
mov
movsl
into
xchg
fiadds
jge
xor
push
bound
jb
mov
in
mov
inc
outsb
and
xor
dec
dec
pop
in
outsb
mov
repnz
fs
les
fnstsw
lds
fcoms
fwait
mov
dec
std
mov
xchg
inc
push
xorb
xor
cs
push
jge
daa
je
into
mov
test
or
mov
mov
lods
out
lods
xor
mov
lea
addl
push
mov
push
push
cmpsb
test
iret
test
cmc
ds
ret
mov
in
das
jl
scas
pop
dec
cwtl
push
adc
push
push
daa
aas
sbb
mov
jle
push
pop
divb
jg
dec
sbb
cli
mov
fucomp
lods
mov
cs
ds
push
push
inc
outsb
xor
pop
sbb
in
xlat
jmp
sti
mov
stos
loope
clc
outsl
add
jge
dec
jb
or
aas
or
jno
test
xchg
fidivrs
xchg
repz
stc
fisubrs
dec
sub
or
cmp
in
out
lahf
cwtl
out
sahf
mov
cs
jge,pt
dec
push
pop
outsb
sub
pop
sbb
mov
sahf
fucomp
lods
mov
cs
jge,pt
dec
push
pop
outsb
sub
pop
sbb
xor
es
and
roll
push
dec
or
fmul
decb
fldenv
leave
cmpsl
bound
leave
push
and
xchg
and
dec
iret
or
in
imul
or
in
jae
cli
add
or
test
mov
sahf
icebp
mov
push
frstor
inc
xchg
scas
pop
shlb
sub
icebp
cmp
dec
xchg
jge
lods
imul
mov
inc
fistpll
push
push
cwtl
inc
mov
mov
pop
xor
popa
jl
xor
call
dec
iret
pop
gs
daa
idiv
jmp
cmp
jmp
fisubrs
pop
fisubs
fcmovnb
cmp
jecxz
movsb
call
sbb
mov
sbb
lock
fiadds
mov
mov
in
lret
pop
repnz
mov
loop
sahf
push
jmp
divl
mov
push
jnp
add
cmpsl
sbb
xorl
inc
fildl
cld
into
in
call
sbb
les
sbb
xchg
stos
push
push
mov
fsubs
xor
lods
insl
xchg
mov
jmp
adc
lock
sar
mov
cmpb
adc
test
inc
dec
sbb
ret
pop
or
xchg
add
cmp
std
das
push
add
scas
jb
xor
out
or
nop
sub
or
mov
jle
jg
leave
in
mov
pop
mov
cmpsb
cmp
xchg
cmp
call
push
jns
test
fwait
xchg
adcl
jne
mov
sub
jns
add
pop
icebp
dec
ret
mov
inc
xlat
push
clc
add
scas
loopne
dec
push
xchg
fiaddl
mov
mov
pushf
lret
jl
gs
lods
cs
push
sub
add
dec
dec
add
mov
jl
mov
ficoml
lds
jno
cmpsb
jmp
dec
aas
notb
aam
pop
pop
sti
sbb
jnp
out
fsubl
inc
je
cwtl
xchg
movsl
aas
cmp
cmpsl
jb
xor
ret
arpl
mov
jmp
xchg
loopne
push
shll
out
aad
int3
inc
jnp
pop
loop
es
sbbl
add
jne
lret
sub
inc
lock
out
xchg
dec
hlt
xorl
test
arpl
out
push
mov
mov
jmp
xor
cs
and
and
push
add
or
faddl
pushl
xchg
adc
out
je
lret
or
push
mov
jns
mov
js
or
dec
jecxz
mov
lods
int
gs
and
and
movsl
mov
push
cmp
mov
add
cld
jl
in
lret
test
add
sub
xor
std
pop
push
rcrb
mov
aaa
pop
mov
dec
lods
cmp
loop
fs
cmp
cmp
shr
lods
adc
push
enter
outsl
sahf
inc
inc
and
mov
imul
push
jne
aaa
cld
daa
test
mov
jb
xor
popa
push
fdivrp
in
lds
adc
and
les
je
std
xchg
outsb
inc
push
jb
lock
ljmp
inc
mov
add
popf
mov
popa
movsl
scas
test
repnz
or
mov
inc
fwait
aas
test
jo
int
xor
mov
mov
out
sbb
pop
sbb
push
add
pop
cmp
imul
out
inc
push
les
frstpm(287
add
insl
sbb
mov
popf
or
jnp
or
movsb
sub
lods
pop
adc
sahf
leave
lcall
out
pop
adc
mov
popa
mov
cmp
mov
dec
lret
fwait
pop
inc
cmp
pushl
push
xchg
lret
insb
jae
lret
jne
and
iret
daa
cli
xlat
pop
and
cmc
adc
mov
sbb
adc
mov
std
std
movsb
ss
jp
orl
push
push
adc
fcomps
and
mov
test
stos
ljmp
push
pushf
daa
mov
push
stos
or
jp
sub
mov
lret
fcomps
cwtl
lods
dec
push
and
rcr
cmpsl
nop
cmp
sarb
daa
or
out
stos
push
andl
cmp
repz
adc
jp
test
sbb
push
dec
xor
lods
xchg
fwait
or
sbb
scas
mov
sbb
aam
add
ss
sub
daa
aaa
inc
sbb
leave
sub
xchg
in
scas
out
jo
imul
xor
test
iret
dec
jp
sub
mov
fst
cld
jmp
cmp
adc
fisubs
lret
add
xlat
mov
xor
fildll
aaa
mov
jnp
cmp
dec
pop
jne
cmc
ret
popf
insb
dec
jmp
test
cltd
sub
das
enter
std
hlt
jle
das
inc
add
test
mov
lods
pop
xchg
sbb
pop
mov
mulb
mov
mov
cltd
xor
mov
divb
popf
adcb
xor
dec
cmc
fldcw
fisttpl
aad
push
push
jb
aaa
arpl
push
push
into
xchg
jne
repnz
mov
sub
scas
jmp
leave
push
sub
inc
decl
fstpl
imul
rolb
jo
push
ror
mulb
int
mov
inc
dec
dec
mov
inc
test
js
int
lcall
push
icebp
push
pushf
mov
sar
das
loop
cmpb
repnz
aam
xor
mov
scas
mov
cmp
mov
pop
insl
test
sub
cmpsb
add
push
cmp
sub
fcomps
popa
add
daa
inc
sbb
pop
shr
test
push
lahf
pop
dec
stos
mov
mov
or
dec
rclb
shrb
js
jnp
cli
mul
orl
mov
popf
movsl
movsb
lods
and
leave
aaa
lahf
gs
pop
aas
in
rcrl
icebp
lods
clc
out
insl
or
pop
cmp
sarl
arpl
sbb
mov
dec
and
push
loop
fists
xchg
movsb
jo
sbb
aad
js
call
mov
push
sarb
push
out
addr16
shrb
movsb
lock
fdivrl
cmp
inc
iret
je
fildll
xor
inc
cli
pop
jg
cli
mov
push
arpl
fwait
shlb
adc
into
pop
mov
scas
adc
in
sbb
xchg
jge
or
mov
or
imul
xchg
push
mov
jno
ret
mov
mov
push
and
pop
push
mov
xor
aam
loop
inc
cmc
sbb
fisttps
dec
mov
stc
mov
fidivrs
push
cmc
push
sbb
loopne
in
inc
bound
inc
jo
cmp
arpl
cmpsl
add
ss
rorb
cmpsl
pop
dec
mov
push
insb
fists
pop
lock
jno
jns
es
pushl
fsub
in
cmc
faddp
sub
movsb
daa
into
mov
imul
clc
xorb
mov
cmp
sub
popa
daa
jns
fdiv
dec
mov
sbb
pop
pusha
adc
sbb
rcrl
pop
test
aas
popf
push
stos
dec
mov
inc
jb
xor
push
lods
and
adc
xor
pop
jecxz
in
lods
pop
or
iret
nop
out
inc
lret
sbb
inc
nop
or
and
aaa
nop
push
repz
cmp
mov
xor
mov
cmc
or
adc
lcall
mov
push
leave
sbb
aas
sbbl
std
inc
xchg
sahf
mov
sub
mov
lods
mov
loop
cld
pop
and
stc
add
pop
xchg
aad
popa
xor
bound
int3
in
mov
mov
arpl
push
sbb
iret
js
push
cmp
ljmp
pop
fbstp
adc
pop
shlb
imul
xlat
es
sbb
dec
shl
mov
divb
inc
enter
push
dec
out
in
sbb
shrb
inc
dec
sub
int3
aam
push
test
stos
scas
inc
mov
jl
xchg
addr16
loop
inc
cltd
sbb
repnz
icebp
inc
std
rclb
push
imul
imul
or
or
adc
cmp
xchg
jmp
aam
std
lret
and
push
ret
jne
clflush
sbb
rclb
ss
mov
sbb
or
mov
pop
in
cmc
dec
sbb
call
xlat
jmp
int
push
jbe
mov
cmp
stos
cmp
loope
push
xchg
icebp
test
and
mov
mov
push
add
jecxz
xchg
add
fildll
xor
sahf
repz
loopne
sbb
pushf
shrb
icebp
sarb
pop
inc
jecxz
mov
js
les
cmp
in
add
lret
add
fnsave
or
push
xor
pushl
add
sbb
daa
ss
sbb
sbb
mov
jle
les
nop
jecxz
jmp
and
ret
jbe
ret
fnsave
sbb
dec
xchg
cltd
pop
pop
sbb
outsb
stos
inc
cld
cmpsl
test
mov
xchg
and
test
scas
cmc
cwtl
sahf
popa
inc
in
imul
mov
sub
mov
cmpb
mov
xor
ja
xchg
das
jmp
xor
xchg
sub
imul
sbb
push
mov
out
cmp
and
xchg
imul
pop
into
scas
jecxz
cmp
push
pop
popa
ja
and
sub
loope
push
jmp
fisubs
and
cld
or
lea
insl
stc
mov
cmp
ja
inc
int
sbb
in
cwtl
lock
xchg
mov
nop
test
ffree
or
xor
in
push
jo
gs
jb
xor
mov
adc
push
int3
ficompl
jp
inc
mov
and
jmp
cltd
mov
lds
mov
shrl
and
dec
ja
fcoml
and
push
jne
jle
dec
cwtl
dec
inc
dec
mov
or
pop
sub
xchg
in
sub
cmp
mov
mov
stos
inc
xor
iret
pop
cmp
mov
sahf
stos
push
lcall
push
lods
ret
fcoms
xchg
mov
pop
push
sbb
notl
imull
shr
pop
fstl
or
fldcw
insb
dec
mov
mov
ret
dec
jmp
mov
shll
negb
ljmp
lcall
lock
aaa
pop
and
add
mov
into
and
push
lcall
sub
xchg
out
dec
push
xor
push
iret
dec
movsb
pop
out
dec
pop
fcomp
jns
fbstp
inc
pop
push
cmp
xor
lock
cmpsb
add
jno
inc
loop
int
insl
inc
insl
push
mov
mov
pushf
jle
or
test
inc
dec
jns
lea
add
cli
rol
popl
dec
mov
jne
and
ret
cld
jle
insl
inc
jno,pt
fs
sub
lock
lea
push
lret
jmp
int3
pop
pop
or
lcall
xlat
mov
and
outsb
test
call
cmp
fwait
dec
cli
jbe
mov
inc
mov
mov
lock
cwtl
sarl
and
out
dec
adc
incl
xor
and
std
mov
jne
mov
fstpt
int3
leave
mov
mov
add
pop
mov
loope
popl
fdivrs
xchg
test
stos
sbb
mov
dec
ja
mov
mov
loope
xchg
cli
cmp
push
test
neg
clc
insl
mov
pop
or
jg
adc
push
lock
sub
push
dec
outsl
hlt
xor
lea
rcll
cld
push
jmp
mov
pop
push
jl
cs
and
dec
mov
gs
mov
fwait
jp
pop
sbb
subl
lods
push
add
dec
shl
mov
std
std
in
shr
adc
cli
movsb
mov
int3
add
mov
push
dec
and
add
popa
stc
sbb
mov
xor
xchg
and
ljmp
xor
cmp
jo
arpl
add
or
pop
push
inc
adc
imul
bound
fidivrs
sahf
cli
jle
test
ja
or
mov
hlt
mov
push
xchg
adc
mov
ss
aaa
mov
sub
bnd
scas
aam
sti
mov
pop
or
fsts
clc
mov
loopne
filds
mov
scas
or
je
mov
mov
xchg
mul
jmp
xor
fsubrl
add
mov
add
sti
dec
mov
push
cmp
xchg
je
mov
pop
sahf
adcb
rolb
imul
repz
add
and
xor
stc
mov
mov
inc
and
enter
gs
mov
push
popf
mov
push
fs
dec
jle
lret
loop
mov
jns
jno
movsb
gs
bsr
pop
leave
jp
mov
lds
fldenv
push
push
pop
sahf
add
and
ret
mov
ja
cld
xchg
andb
bound
mov
jne
or
cmpsb
cmc
movsb
gs
repnz
mov
push
out
or
or
les
aam
lahf
jnp
std
lahf
insl
rol
fcoms
fwait
jo
inc
pop
lea
mov
loopne
inc
cmpsb
std
out
dec
fstpl
push
adc
cld
jae
inc
insb
cmc
popf
jmp
sub
js
dec
fld
mov
jmp
or
mov
sbb
mov
mov
or
cmp
inc
sbb
je
jnp
pop
pop
movsb
inc
pusha
inc
adc
push
rclb
xchg
mov
fisttpl
insl
fwait
js
push
push
push
inc
xchg
out
cmp
jmp
in
out
sub
negb
jnp
dec
adc
fldl
mov
inc
loopne
aad
aaa
dec
call
sbb
xchg
adc
aad
mov
in
icebp
out
lock
mov
scas
mov
in
loope
inc
cmpsb
jge
aas
test
out
movsb
not
fdivr
inc
scas
orl
jb
aaa
les
jp
in
rcrl
push
int
sti
pop
fmul
gs
iret
jp
jae
rcrb
mov
and
fdivrs
sbb
cmp
je
out
pop
leave
leave
fwait
inc
inc
xchg
repnz
xor
lods
sbb
popa
mov
mov
xchg
lods
int3
and
aam
dec
sub
fidivrs
cld
mov
jbe
int3
dec
push
xor
or
mov
dec
in
cmc
filds
push
and
dec
jp
mov
push
pushf
mov
ret
nop
mov
jb
inc
lahf
sbb
es
call
mov
loopne
sub
push
out
pop
pop
in
jmp
aas
cmc
push
out
push
in
ds
mov
aad
ss
or
rcrl
add
inc
in
inc
mov
and
ljmp
lea
cmpl
mov
enter
in
rcl
and
pop
gs
sub
mov
cmp
push
mov
add
enter
xlat
filds
cmc
jl
and
jmp
pop
das
or
jne
mov
mov
pop
neg
pop
js
test
or
sti
call
and
rcr
mov
iret
ret
dec
xor
pop
ss
ret
sub
mov
aas
test
dec
cmp
push
lods
cmp
pop
loope
mov
inc
xchg
ret
or
out
cwtl
jmp
jae
imul
pop
inc
cld
add
mov
inc
pop
mov
cli
cltd
sbb
mov
adc
or
xchg
sahf
rcl
inc
cmp
sti
mov
test
mov
aad
sub
std
sti
pop
subl
mov
inc
inc
stos
scas
cmp
pop
insl
xchg
jno
aaa
leave
jge
sti
out
arpl
shr
mov
shll
mov
cmc
jl
cmpsl
nop
push
mov
cmp
ret
icebp
mov
mov
fwait
rep
adcl
mov
ret
dec
mov
repz
xchg
fisubs
sub
sub
sub
popf
out
loopne
or
sub
jp
data16
xor
mov
cmp
loop
mov
or
inc
add
pop
inc
jp
jo
inc
mov
add
adc
call
aaa
jmp
clc
rcrb
icebp
jo
stos
xchg
pop
mul
mov
out
add
es
push
lock
xchg
xorl
fldt
out
popa
mov
push
xchg
pop
stos
ret
xchg
xor
cmp
mov
mov
inc
pop
lret
and
adc
and
mov
dec
xchg
je
push
lcall
push
shlb
add
les
or
stc
inc
in
inc
cmp
outsl
jl
int
into
mov
cmpsb
insb
or
mov
cld
mov
jns
xor
nop
sti
sahf
dec
outsl
shrb
jnp
push
and
xchg
xchg
arpl
mov
add
fwait
cli
add
repz
je
mov
ds
addr16
repz
xchg
jbe
push
mov
popa
xor
pusha
int3
xchg
sti
in
popf
shlb
imul
repnz
cli
or
mov
push
or
add
je
lcall
pop
jnp
cs
jnp
jmp
loopne
cmpsb
mov
xchg
mov
movsl
and
sti
cmc
dec
mov
cmp
mov
xor
out
scas
in
push
arpl
mov
pop
lret
pop
andl
lods
mov
scas
mov
push
jb
aam
mov
fldl
xor
jmp
mov
ljmp
notb
cltd
mov
xor
ss
movsl
stc
cmpsl
push
xchg
and
stos
ret
aaa
push
jb
add
push
xor
in
js
add
into
js
xchg
xlat
or
mov
lods
out
jne
mov
aaa
jle
sub
jg
cmp
iret
jo
stos
in
ret
fucomip
inc
jl
movsl
cmpsb
mov
jno
hlt
rcl
pop
or
stc
dec
mov
shll
jnp
dec
js
test
subb
mov
mov
les
sar
fstpt
fcmovb
mov
push
inc
fmull
push
cltd
xor
pop
loope
inc
or
lahf
int
xchg
daa
jae
mov
and
cmp
pop
sbb
mov
sar
jne
test
lds
jne
lods
push
loop
outsb
push
outsb
cmp
or
lret
in
mov
sbb
cmp
loope
fnstsw
sbb
sahf
cmp
pusha
inc
lea
and
dec
add
daa
pop
jne
out
xchg
cmp
loopne
xchg
push
lea
cwtl
movsl
pop
or
ja
int
cmpsb
pop
adc
xchg
mov
cmp
shlb
lret
sti
sub
pop
pandn
int
arpl
push
int
rcrb
test
or
jae
lods
divl
add
scas
cs
and
call
pushf
sbb
adc
push
rorl
imul
loop
fs
mov
cmpsb
xchg
out
and
ror
in
rcrl
pop
popf
inc
cmpsb
xor
pop
mov
popa
or
jno
out
mov
dec
addb
popf
sub
bound
dec
scas
push
testl
sbb
cmp
push
scas
stos
pop
mov
pop
fdivrl
add
mov
mov
enter
mov
sbb
xor
and
mov
pop
pop
and
dec
cs
pusha
sub
fcom
sti
cmc
adc
mov
push
xchg
rcrl
pusha
push
imul
mov
test
mov
divl
mov
add
lds
push
scas
daa
aaa
icebp
clc
mov
jecxz
pop
mov
adc
cmc
push
jns
xchg
std
mov
push
cmp
jbe
fdiv
add
mov
fldt
loope
inc
popa
and
push
xchg
jp
mov
fdivrl
inc
fwait
inc
mov
aam
mov
stos
pop
sahf
and
inc
popa
jmp
lock
sbb
xor
jge
or
push
je
mov
sbb
jge
mov
inc
and
int
xor
lods
test
xor
mov
ret
lds
push
cmp
fmull
dec
sub
fs
aas
mov
push
inc
xchg
sub
fiadds
jmp
mov
lock
in
test
les
stc
std
xor
pop
out
sbb
sahf
and
int3
std
cmp
mov
out
stos
pop
jb
in
adc
movsl
or
jnp
mov
xchg
xchg
int3
lock
xor
rcrl
repz
mov
mov
ja
loopne
pop
cmp
jns
rclb
aad
xchg
pusha
and
jns
in
and
push
lods
mov
cs
jge,pt
dec
push
pop
outsb
sub
pop
sbb
mov
sahf
fucomp
lods
mov
cs
jge,pt
dec
push
pop
outsb
sub
pop
sbb
mov
sahf
fucomp
lods
mov
cs
jge,pt
dec
push
pop
outsb
sub
pop
sbb
leave
sahf
fucomp
lods
mov
cs
xlat
movsb
dec
push
sub
movsl
testb
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
inc
test
cld
arpl
popf
push
in
ds
shr
aaa
jecxz
repz
imul
mov
add
adc
and
xor
ret
sub
cmp
add
sbb
inc
xchg
jl
dec
mov
inc
or
arpl
jae
add
adc
sub
pop
xchg
insl
xchg
outsb
cmpl
sbb
fidivrl
aaa
call
sbb
or
inc
add
or
hlt
testl
mov
pop
scas
scas
lods
jg
clc
mov
stc
adc
xor
and
pop
rcrb
xchg
and
loop
mov
aad
insb
push
add
add
jge
sub
or
sbb
inc
lods
je
mov
clc
in
int3
jp
xor
test
or
sarl
icebp
pop
mov
and
jp
inc
out
mov
fbstp
std
fisttps
fldt
in
js
roll
adc
pop
mov
jg
stos
inc
pop
stc
mov
cwtl
ja
jg
insb
adc
cltd
jbe
add
cmp
andb
pushf
arpl
jae
add
adc
and
xor
sub
xchg
jecxz
repz
push
mov
lods
xor
and
dec
jl
dec
mov
mov
nop
test
rclb
cmp
xor
add
xor
mov
movsw
jbe
mov
mov
sahf
pop
repz
and
jl
sub
das
and
push
pop
and
mov
xor
ret
sub
cmp
or
sbb
insb
xchg
jl
dec
mov
inc
lods
push
mov
add
adc
and
xor
ret
sub
cmp
or
sbb
insb
xchg
jl
dec
mov
inc
lods
xor
icebp
or
rorl
lods
jecxz
arpl
inc
fcompl
mov
ret
jne
fldcw
push
sub
dec
xchg
xchg
pushf
into
loope
jge
fwait
ljmp
fcoml
pushf
mov
inc
push
in
jo
sub
insl
fcomps
mov
cmp
sub
pop
ror
rorb
loope
cmpxchg8b
in
int3
pop
pop
push
insb
imulb
daa
shrb
iret
sbb
mov
mov
lea
es
mov
fnstcw
mov
xchg
sub
mov
daa
xor
sub
mov
sbb
push
aam
and
lock
xchg
mov
dec
jno
mov
fdivrp
repnz
xchg
dec
fs
pushf
sbb
xchg
test
adcl
sbb
jo
cmc
cmpsl
pop
xlat
mov
mov
push
or
inc
loope
divb
dec
jno
lods
fwait
loope
push
mov
mov
sbb
stos
popf
sub
fwait
push
btc
jo
xchg
scas
mov
cs
push
xor
push
inc
jns
xor
xor
int
mov
mov
or
mov
outsb
push
and
pop
stos
jl
lcall
mov
cmp
xor
leave
or
push
mov
int3
push
std
dec
xchg
cli
scas
xchg
in
jb
out
mov
arpl
adc
rcl
pop
test
jl
push
sub
xchg
cltd
and
push
test
lods
add
cltd
icebp
movsl
push
cld
adc
mov
dec
push
sbb
xchg
repnz
cmp
jo
or
jne
adcl
lds
aam
jns
xchg
aaa
es
jg
and
clc
sahf
adcl
lods
inc
mov
lds
sbb
add
sbb
xchg
mov
xor
out
pop
sbb
jecxz
adc
push
hlt
mov
movsl
flds
adc
ljmp
pop
lret
dec
push
cld
inc
addr16
inc
xor
inc
dec
mov
cli
cmp
sbb
cld
sbb
push
in
adc
arpl
inc
push
or
sub
xor
lret
movsb
cmc
adc
and
lods
mov
arpl
jge
test
movsl
sub
sbb
xchg
jbe
mov
ja
inc
or
int
shrl
jns
xchg
xchg
hlt
cmp
clc
repz
loop
out
notl
mov
mov
add
std
out
and
xlat
enter
xlat
ret
cmp
xor
cmp
ret
outsb
pop
cwtl
push
xor
sub
dec
jecxz
xlat
rolb
mov
aam
pop
sub
and
in
aaa
xlat
inc
js
scas
push
sbb
ljmp
jecxz
cmpsl
jae
jo
jne
scas
push
push
sarb
dec
out
hlt
cmp
das
mov
inc
or
cmc
add
popa
loopne
mov
sub
fcmovb
xchg
sbb
rcrl
imul
dec
sub
lcall
cmp
sbb
adc
rolb
xor
push
adc
push
in
cmp
cwtl
xchg
outsb
mov
lret
jbe
cmc
jmp
jnp
mov
push
sbb
sub
mov
jle
mov
xlat
or
jb
inc
push
mov
lods
fsub
js
pusha
xchg
jmp
popf
hlt
js
and
addr16
mov
push
jle
push
ficomps
mov
ljmp
dec
repnz
fs
sbb
mov
fldl
sbb
lret
xor
into
jmp
cmc
cmpsl
test
insl
mov
scas
jns
sub
xor
out
jle
lea
lahf
shlb
push
jo
rorl
mov
pop
stc
pushf
jmp
sub
xor
pusha
pop
mov
subl
xchg
mov
sbb
lds
je
jecxz
cmpsb
in
push
int3
cmp
xchg
bound
add
push
rcll
fstl
rorb
xchg
inc
mov
cli
jo
loop
cmp
push
add
sub
repnz
lcall
xchg
pop
pop
fdivl
int
lods
pop
push
daa
rcrl
jmp
pop
sbb
add
xor
push
cmpsl
mov
pop
jae
inc
addr16
xchg
mov
sbb
xor
clc
add
pop
jmp
aas
mov
mov
insb
test
in
push
jb
stc
inc
cmpsl
outsb
sbb
dec
cli
push
daa
jno
les
push
cld
dec
mov
and
mov
loopne
sbb
cmp
je
imul
pop
arpl
xor
xchg
adc
out
xchg
push
mov
xor
decl
aam
xlat
outsb
or
sbb
sbbl
inc
rorl
out
ret
sarl
andb
push
xchg
ret
or
xchg
mov
mov
addr16
repz
sub
iret
push
xor
subb
fidivrs
lcall
lcall
mov
loopne
das
rolb
ds
test
pop
mov
aad
jle
and
lock
mov
mov
inc
xchg
lcall
call
xor
ljmp
cmp
popf
xlat
cltd
inc
cmp
push
ret
fdivl
cld
xor
sbb
xchg
js
push
add
push
sub
stos
mov
xchg
mov
lods
mov
mov
and
dec
push
push
dec
lods
aaa
cli
and
jle
cwtl
dec
mov
xor
and
and
sub
or
popf
adc
mov
out
fldl
and
pop
nop
es
xor
loope
shll
sbb
stos
outsl
mov
push
jnp
cli
in
mov
addb
das
and
int3
fisttpl
rcrb
popf
insb
xchg
into
adc
jae
fistpll
imul
sbb
int3
jl
neg
loop
rcrb
mov
xchg
or
loope
movsb
jne
in
test
jp
rolb
loopne
sub
addr16
xor
mov
add
loope
xchg
shlb
push
fisttps
shrl
sar
add
jae
lock
add
xor
in
or
push
mov
push
fcmovbe
cli
leave
imul
xor
sarl
add
inc
xchg
jae
jecxz
cwtl
add
push
or
mov
insb
push
adcl
in
sbb
cwtl
nop
repz
push
sub
loope
stos
inc
sub
sarb
cmpsl
stos
mov
cmp
adc
int3
lea
push
fwait
and
adc
sub
adc
mov
or
xchg
push
dec
xchg
cltd
daa
js
mov
jno
cmp
lock
cmp
xchg
xchg
enter
dec
mov
or
stos
in
std
dec
insl
push
lcall
int
aaa
scas
sub
inc
xor
mov
es
xchg
aad
fwait
mov
jmp
out
movsl
cmp
popf
orb
data16
push
fdiv
aas
inc
mov
scas
dec
cmp
cmp
out
nop
add
xor
cmp
test
inc
lods
adc
je
sbb
inc
cmpb
xor
iret
mov
sbb
xchg
fwait
subb
orb
pop
sbb
jp
or
lds
or
loopne
cs
pop
sbb
pop
push
xlat
lea
sub
ljmp
int
icebp
push
sbb
cmp
push
jns
inc
pop
rcrb
sbb
repz
shl
aad
sbb
mov
lods
hlt
shl
ficomps
ss
ds
mov
call
js
push
add
pusha
pop
lret
jnp
fstl
mov
jnp
mov
xor
add
lds
fidivl
add
mov
add
shlb
pop
push
cmp
sub
ja
or
cmp
pop
xor
mov
inc
fwait
cmp
stos
stos
std
add
xor
stos
push
in
in
xor
sbb
ja
mov
testl
rcrb
sub
aam
stc
movsl
dec
pusha
inc
movl
xchg
js
xchg
adc
out
in
or
mov
ss
mov
pop
lret
in
test
movsb
outsb
stos
adc
jg
in
pop
mov
imul
testl
adc
pop
lahf
jbe
adc
es
fdivs
loop
cmpsb
popa
andb
movsl
inc
or
inc
sbb
jmp
xchg
adc
shrl
and
mov
loopne
cwtl
lds
jo
pop
xor
mov
inc
outsl
enter
test
sbb
xlat
pop
mov
mov
loope
sti
arpl
xor
ret
in
mov
arpl
fstpt
lods
stos
dec
mov
mov
pusha
and
xchg
dec
test
cmp
jmp
jecxz
je
push
dec
inc
xor
stc
movsb
add
outsl
test
add
xor
jp
popf
mov
lahf
mov
mov
imul
les
mov
pop
push
jmp
int
pop
jp
sub
inc
cli
idivl
int3
xchg
out
sub
fiaddl
out
enter
xchg
mov
loop
push
fidivs
rorb
sbb
cmp
jb
push
arpl
lock
popa
rorl
cmp
jo
push
insl
and
shll
lret
repz
xchg
pushf
mov
pop
cmpsb
in
or
jg
inc
or
cmp
sbb
out
dec
jg
mov
xor
jns
xchg
out
xor
pop
pop
jae
mov
mov
in
pushf
sarl
lret
jnp
clc
idivl
test
fs
sti
jl
outsb
sbb
add
mov
cmc
xor
xor
testb
inc
cli
mov
sbb
stc
mov
repz
xor
fwait
sti
cld
sti
clc
push
fcmovu
jp
loop
aad
push
icebp
clc
cmp
leave
xor
lods
push
xchg
jle
loopne
fcomps
ret
xchg
shl
add
out
call
je
es
cmp
stos
jns
jno
dec
aas
push
repz
ja
pop
fld
inc
mov
ret
stos
lea
add
inc
adc
sbb
push
dec
mov
cli
pop
adc
cmp
movsl
inc
jge
movsb
push
popa
pop
call
fstpl
inc
scas
lcall
popa
in
outsb
jo
push
sub
outsl
lcall
xor
stc
xor
mov
out
push
lds
jmp
outsb
jp
inc
dec
inc
pop
test
fisubs
mov
aam
push
push
in
cmpsl
mov
adc
jne
mov
or
mov
dec
jns
xchg
jge
inc
and
fidivs
movsl
cmpsl
jbe
bound
leave
xchg
jb
xchg
add
mov
pop
mov
dec
jb
cwtl
add
pop
mov
push
mov
cmp
dec
je
sub
mov
or
subb
push
mov
dec
mov
gs
push
dec
orb
jnp
cmpsl
mov
jmp
cmp
inc
sbb
cmp
add
sbb
shlb
lock
sub
mov
daa
leave
stos
add
test
mov
cmp
adc
inc
std
mov
inc
add
xor
and
dec
xchg
add
jg
imul
sub
pop
xor
movsl
dec
repz
sti
adc
mov
add
shl
mov
xchg
inc
outsb
jge
fs
push
lcall
call
mov
pop
pop
sub
fistpl
dec
adc
pop
loopne
xchg
mov
xor
xchg
push
push
xor
xchg
jbe
mov
gs
push
enter
push
push
in
test
cmp
ja
pop
xor
stos
ljmp
mov
es
out
jmp
jnp
je
mov
or
bound
ret
push
dec
pop
pop
sub
inc
icebp
repz
lods
jge
cmp
mov
xchg
push
pop
sbb
cmpsl
pop
fisttpl
adc
dec
fildl
or
jb
aaa
ret
jmp
or
xor
cmp
sub
mov
ror
negl
icebp
mov
mov
std
mov
mov
jo
xor
and
xchg
xchg
cmp
lret
push
or
out
fwait
or
pushf
lahf
cli
mov
jne
lods
jl
dec
fistpll
js
outsl
setno
mov
jmp
test
mov
xor
and
push
mov
xchg
push
js
mov
fldcw
ficoms
les
mov
jg
adc
test
outsl
aad
movsb
aam
mov
push
xor
das
mov
jno
adc
icebp
add
fidivl
scas
or
shrl
jp
int3
imul
data16
inc
fmull
cmpsb
lods
sbb
lret
and
mov
jno
jle
test
xor
out
push
mov
lock
xchg
out
bound
in
push
ret
call
imul
mov
out
icebp
or
dec
test
lea
sbb
pop
mov
sbb
stc
sub
out
cmc
dec
pop
cmp
lret
push
das
jb
inc
pop
pushl
stos
xchg
cmp
pop
invd
pushf
lret
sarb
cmp
jb
stc
in
jb
sbb
push
mov
push
mov
iret
ljmp
jp
cmc
xchg
cmp
test
or
shlb
adc
and
sub
rcr
ret
mov
push
cmp
push
mov
out
fnstcw
ficoml
sbbl
je
icebp
mov
lret
add
xchg
outsb
and
outsb
out
daa
inc
xor
xchg
sbb
aas
int3
mov
xchg
cld
sub
repnz
push
je
fwait
popa
add
mov
jno
jecxz
js
jmp
mov
fstps
mov
inc
pop
mov
push
loope
mov
mov
repz
pop
inc
xchg
fisubs
adc
push
stos
idivb
addr16
aam
and
test
push
pop
out
mov
orl
jns
mov
and
ret
test
ss
adc
out
sbb
xchg
lds
lea
mov
lea
adc
mov
pop
xor
aas
jno
cmp
enter
rorb
lahf
or
aam
mov
ja
jle
dec
fsubs
mov
leave
pop
js
sbb
mov
repnz
push
cld
push
jno
mov
mov
aas
add
sbb
inc
out
insb
jg
sbb
xchg
pop
xchg
push
test
imul
jo
test
sub
pusha
inc
incl
mov
lret
dec
push
sti
ljmp
mov
adc
lods
mov
sbb
cld
hlt
jo
mov
jo
xchg
push
cltd
stos
inc
push
ljmp
pop
lahf
sbb
jns
inc
mov
mov
mov
inc
pusha
leave
data16
movsl
inc
and
mov
movsl
insb
ljmp
xor
bound
negb
shrl
mov
jb
cmpsl
inc
xor
movsb
inc
nop
xor
ja,pt
and
mov
shl
test
dec
stos
cli
cmp
mov
rolb
mov
pusha
jbe
lahf
pop
and
cmpsb
xchg
and
jmp
test
dec
sbb
xor
fisubrs
or
mov
dec
xor
mov
dec
pop
daa
std
jo
xor
xor
xchg
andb
lret
inc
dec
jno
xlat
dec
testb
xchg
fscale
stc
aas
dec
rcrb
mov
fucomip
aas
xor
popf
inc
aam
or
cs
dec
push
push
test
loope
inc
add
out
subl
mov
sbb
popl
jae
pop
pusha
jl
push
fs
aaa
lret
xchg
aad
dec
or
push
out
dec
mov
adc
jns
rolb
lock
xchg
pop
lcall
add
call
fistl
sbb
flds
mov
ds
sbbb
jo
mov
sbb
ret
and
lahf
loope
fimull
test
loop
sub
add
das
xchg
loopne
daa
or
repz
fistps
mov
test
sahf
test
mov
mov
fwait
pop
mull
lea
clc
jb
sbb
repz
jl
sbb
push
cmc
mov
inc
test
pop
pushf
cmp
sarb
mov
into
fcomps
call
lret
and
imul
sbb
mov
cwtl
jge
insb
sbb
fsubrs
inc
cmovle
mov
stos
mov
stc
cmp
cmp
lods
lret
dec
sbb
pop
sbb
xchg
shrb
mov
jae
call
cs
ret
into
pop
inc
ja
aas
loopne
stos
or
xchg
lcall
cmp
xchg
jge
ss
cmpsb
repz
xchg
mov
int3
lds
sahf
lods
inc
pop
fbld
sahf
out
adc
stc
inc
push
add
leave
mov
xor
cmpb
sarl
repnz
xor
aaa
mov
ficoml
popa
js
insb
and
jae
movb
shrl
xor
lea
fdivrl
mov
fwait
pop
and
mov
call
or
ss
xor
mov
adc
xor
rorb
cmp
xor
mov
cmpsb
adc
add
inc
sub
jb
jne
dec
push
cmpxchg
addr16
imul
mov
and
insl
cmpsl
adc
push
add
lds
dec
mov
mov
pop
jmp
jno
les
insl
cli
gs
jnp
test
lahf
pop
daa
cld
movsb
jb
cmp
dec
adc
jmp
pop
cmp
int
test
hlt
adc
lahf
push
xchg
mov
mov
mov
xchg
jnp
xchg
leave
cmc
das
xchg
push
push
iret
adc
lods
jecxz
clc
push
cmpsb
pop
mov
bound
stos
mov
stos
xor
mov
es
test
fdivr
xlat
pop
sbb
xchg
dec
cli
adc
pop
outsl
fnstsw
loope,pn
jg
mov
stc
loope
insb
imul
adc
jge
popf
pop
into
ficomps
test
adc
mov
loopne
outsl
lahf
cli
sti
fcmove
jo
dec
xchg
jne
insb
les
xor
adc
push
push
push
nop
push
mov
outsb
push
push
cwtl
lahf
xorb
out
fwait
push
jae
fxch
add
or
jecxz
sti
divb
inc
push
sub
push
cltd
loope
jmp
pop
popf
add
jge
sbb
fwait
fcmove
mov
imul
and
ret
test
xchg
mov
pop
js
mov
dec
pusha
outsb
mov
adc
popa
cwtl
das
hlt
dec
cmp
jg
pop
or
adc
das
xlat
and
lret
sub
fmull
push
pop
dec
pop
mov
outsb
cld
out
xchg
jecxz
jb
pop
movsl
out
cs
movsl
jbe
in
ljmp
xor
jecxz
mov
inc
fdivr
sbb
lcall
mov
popf
or
dec
movsb
cmp
jb
loope
pop
pop
or
mov
add
popl
push
jnp
cltd
push
push
loope
fsubrs
mov
sti
nop
aaa
add
or
cmpsb
lcall
cmp
loope
xacquire
fadds
inc
and
pop
push
divl
jge
sbb
cld
out
jne
leave
repnz
iret
int
imul
mull
sbb
lea
lret
dec
push
cmc
test
jns
cld
mov
dec
out
or
ljmp
adc
popa
adc
fldcw
pop
and
mov
out
stos
push
add
test
mov
mov
mov
ret
ja
jns
iret
pushf
je
lret
vpcmpeqw
loope
sbb
popa
lea
test
xchg
test
mov
mov
out
mov
stos
pop
rcll
sub
or
adc
sbb
hlt
aaa
or
fwait
or
mov
add
jge
out
mov
jmp
and
arpl
mov
adc
cmc
dec
cmp
in
ret
fimuls
repz
push
stos
js
sti
mov
inc
daa
mov
inc
fadd
push
les
jmp
test
and
mov
in
push
dec
cmp
call
mov
repnz
push
cmpsb
adc
jp
outsb
adc
lcall
mov
push
mov
cld
dec
jmp
mov
mov
push
push
push
enter
mov
nop
mov
jle
dec
popa
adc
push
out
or
sbb
mov
sub
sarb
cld
mov
add
adc
and
xor
ret
sub
cmp
or
sbb
insb
xchg
jl
dec
mov
inc
lods
push
mov
add
adc
and
xor
ret
sub
cmp
or
sbb
insb
xchg
jl
dec
mov
inc
test
mov
xchg
jae
add
adc
ret
cmp
or
adc
mov
dec
push
pop
arpl
faddl
in
adc
mov
shrl
dec
or
imul
sbb
xor
and
dec
mov
fistpll
mov
ret
push
xor
and
adc
add
dec
popa
jg
jg
sti
mov
mov
fcomip
iret
outsl
call
out
mov
xor
add
das
add
sbb
arpl
outsl
inc
daa
and
sub
iret
scas
cmp
sub
push
dec
dec
jo
and
or
daa
xor
mov
int
out
fcmovnb
iret
push
pop
xor
pusha
shll
out
jnp
imul
leave
sub
icebp
repnz
pop
jb
bound
mov
jb
mov
popa
mov
cmpsb
lret
lods
push
mov
fmull
mov
das
mov
or
xchg
push
push
inc
jae
mov
addl
repz
mov
sub
cmp
int3
mov
jb
pushf
jle
outsl
adc
orb
xor
and
inc
cmpsb
je
fs
aas
pusha
mov
aas
aam
add
and
xchg
mov
mov
mov
pusha
add
or
in
fistpl
shlb
pushf
jg
insb
mov
pop
scas
mov
repz
decl
dec
inc
fnstenv
pop
dec
pop
pop
inc
fwait
dec
push
outsl
sub
lret
rcl
lods
mov
mov
cmpsb
pop
jne
pop
addr16
push
sbb
pop
push
adc
and
imul
loop
repnz
cmpsb
mov
stos
rorb
mov
pop
jne
jbe
fs
das
push
xor
sub
in
in
ret
cld
loopne
xchg
iret
jecxz
shr
ret
pop
xor
and
adc
add
dec
arpl
outsl
inc
lahf
mov
mov
fcomip
iret
jecxz
shr
ret
pop
xor
and
adc
add
dec
arpl
outsl
inc
lahf
mov
je
xor
adc
rclb
cld
dec
pop
jne
test
cmpsb
leave
xor
xchg
popa
stc
or
and
leave
sbb
mov
dec
int
push
adc
ds
mov
imul
loopne
outsl
cmpsb
insl
cmpsb
push
xchg
add
inc
mov
aas
popf
cmp
in
iret
outsl
std
mov
mov
hlt
or
inc
je
add
cmp
xchg
cmp
xchg
ss
sub
mov
scas
push
pop
pop
pushf
jge
xor
jp
sbb
std
and
cmp
mov
pop
repnz
adc
aad
imul
sub
push
cmpsb
int3
lahf
adc
mov
rolb
lahf
shl
leave
adc
pop
pusha
lret
jecxz
or
xchg
dec
arpl
mov
daa
mov
js
cmp
mov
icebp
iret
mov
or
addr16
arpl
mov
cmc
push
add
test
lret
loope
mov
iret
or
call
shl
inc
lds
dec
mov
js
push
outsb
adc
inc
pop
mov
outsb
mov
rorl
test
pop
imul
cmp
jne
dec
or
rcr
cmc
int3
aas
sub
pop
fstpt
subb
xchg
cmp
xchg
inc
sub
hlt
ljmp
pop
cmc
bound
fidivrl
popa
xor
ljmp
sub
call
xacquire
mov
popa
ret
sahf
sub
bnd
pop
shrl
lock
jg
mov
sahf
dec
mov
mov
ret
imul
leave
cmp
addl
xchg
data16
xchg
outsb
enter
mov
inc
mov
xchg
inc
jnp
jne
fcompl
addr16
loop
pop
insl
push
out
cwtl
pushf
add
and
or
arpl
push
testl
mov
push
aam
out
ja
fimull
lea
sarl
dec
fwait
mov
icebp
bound
icebp
adcl
dec
sbb
jo
sbb
pop
not
ja
shll
adc
fcmovne
ja
mov
arpl
lea
in
adc
jnp
js
jbe
push
mov
pop
imul
add
add
sub
loopne
lret
and
and
ljmp
mov
xchg
inc
xchg
sub
insl
lret
and
pop
inc
inc
xchg
int3
mov
popf
cmp
int3
aam
int
scas
dec
dec
nop
sub
pop
pusha
lds
scas
pop
nop
cld
in
daa
cmpsl
repnz
mov
xchg
pop
into
test
dec
sub
les
call
inc
fnstcw
sbb
sbb
insb
sub
xchg
push
in
lods
cmc
xor
cmpsb
add
clc
popf
cmpsl
dec
cs
sbb
mov
leave
or
fildll
dec
icebp
fbld
cwtl
xor
pop
jae
cmp
or
jmp
rorl
mov
xchg
cmpb
adc
push
add
dec
sbb
sub
mov
adc
inc
std
arpl
adc
mulb
js
sbb
out
cmpsb
inc
inc
shr
adc
mov
lret
dec
lcall
divl
mov
sub
lret
enter
out
ds
shrl
dec
pop
sbb
mov
idivl
gs
outsl
mov
mov
xchg
lret
mov
outsl
data16
sbb
in
fiaddl
or
mov
loopne
cmp
dec
jnp
iret
es
hlt
mov
mov
mov
out
repnz
sbb
inc
aam
pop
mov
jl
test
in
enter
mov
clc
jp
enter
arpl
sbb
mov
dec
add
and
mov
jbe
jg
outsb
push
xchg
jo
xor
jno
add
adc
adc
jmp
mov
lret
adc
inc
enter
or
xchg
orb
shll
sub
sahf
cli
mov
push
lods
xor
fidivl
es
shll
test
mov
pop
xor
hlt
scas
arpl
inc
xor
hlt
push
insb
hlt
mov
subb
add
jo
push
add
push
mov
test
loopne
ret
xor
xor
push
cmpsb
lret
or
ror
rolb
and
jp
fsubrl
inc
cmpb
dec
add
cmp
and
insb
loop
push
ret
mov
cmp
sub
sub
mov
imul
push
insb
mov
movsb
out
je
mov
ss
pop
js
mov
adc
mov
or
nop
and
add
lock
mov
inc
sub
jecxz
inc
flds
push
js
iret
std
nop
mov
sar
inc
jle
bound
je
pop
jo
fstpt
mov
xor
cs
add
cwtl
xchg
addr16
push
shrl
xchg
inc
and
mov
add
enter
scas
aas
cmp
cmovs
or
jecxz
repz
out
test
xor
cwtl
mov
cmp
cld
mov
mov
stos
out
dec
popf
cmp
jns
jmp
xchg
cmp
dec
jae
pop
iret
cmp
push
scas
mov
mov
xorb
adc
imulb
lcall
outsl
add
aad
movsb
push
dec
vsubsd
test
js
imul
pop
cld
clc
imul
bound
stc
lock
pop
sub
pop
bound
insb
clc
outsl
ja
shrb
ret
nop
cmp
push
shrl
int
sub
add
outsl
call
sahf
cmpsl
mov
mov
data16
xchg
jp
add
adc
dec
lea
stos
stos
aas
fsts
mov
cmp
xor
lds
sub
add
pop
xor
sbb
test
xor
sbb
insb
add
lods
add
add
adc
mov
imul
test
jns
push
sti
dec
pop
pop
push
and
ror
fildll
mov
sti
mov
push
icebp
pop
out
adc
xchg
dec
mov
cmp
xchg
push
call
mov
daa
mov
aad
or
mov
pop
out
jg
repz
and
out
andl
push
jecxz
mov
stos
push
mov
jmp
out
out
push
aad
sub
pop
dec
dec
cmp
lret
les
xchg
nop
je
xchg
xchg
pop
cmc
mov
rcl
xlat
mov
add
insl
scas
inc
sar
sub
fidivs
xlat
mov
or
push
xor
mov
pop
xchg
aad
test
negb
jle
xchg
xlat
out
sbb
mov
addr16
push
iret
sahf
loope
cmp
dec
xor
imul
out
js
xchg
in
or
repz
shrl
mov
or
dec
lds
int
test
sbb
cltd
dec
or
lret
mov
mov
mov
cmp
psrad
test
jno
adc
sbb
notb
inc
lea
mov
inc
movb
jb
fldl
ss
lods
jp
adc
cmp
mov
mov
xchg
jl
pop
push
add
add
cld
jmp
push
adc
outsl
jge
push
loope
add
jg
add
mov
imul
push
sbb
icebp
frstor
sbb
cmpsb
ret
mov
addr16
mov
testl
jp
leave
or
fldt
jge
scas
jno
dec
cli
les
push
jl
pop
flds
aad
dec
pop
push
pop
jno
pop
movsb
orl
push
xor
lods
bound
nop
mov
sti
in
bound
add
jns
mov
xor
or
sbb
rolb
into
stos
iret
rorb
pushf
dec
sbb
movsb
and
add
xchg
sbb
ljmp
or
adc
imul
aam
sub
or
cwtl
xchg
xchg
jl
inc
xor
push
shrb
push
lcall
fs
das
out
and
mov
adcb
cmp
test
xor
sbb
mov
popf
fsubrp
mov
jp
pop
dec
mov
nop
inc
mov
jp
or
mov
cmc
les
mov
sub
shll
pop
mov
pop
push
add
sbb
cmp
icebp
repnz
fcoms
adc
ds
jl
subl
gs
sub
int3
js
insb
frstor
xor
push
cld
jecxz
mov
mov
or
icebp
push
sub
sbb
inc
add
dec
and
and
push
out
jnp
jns
dec
push
ds
enter
bound
push
dec
rcll
mov
mov
pop
adc
mov
and
push
nop
xchg
pop
mov
jl
dec
call
cmpsl
pop
push
xorb
cmc
jae
adc
aad
in
pop
icebp
mov
adc
in
sub
xchg
loopne
inc
int3
je
push
movsb
dec
outsb
out
ja
jp
push
mov
out
int
popa
cmp
pop
arpl
or
clc
fwait
mov
jg
aam
xor
cmp
mov
out
addl
cmp
sbb
subl
mov
xor
pop
pop
mov
rorl
iret
fsubl
or
iret
ret
mov
outsb
fdivl
jecxz
cmp
push
cmp
in
adc
js
data16
jecxz
push
inc
mov
lcall
push
pop
shll
hlt
or
xor
fs
xchg
fcoml
imul
jl
notl
push
push
jb
insb
gs
jle
push
icebp
fwait
and
xor
or
sbb
ficompl
xchg
xchg
mov
adc
jecxz
xchg
out
fxtract
les
or
ljmp
mov
fwait
jae
lret
scas
adc
jl
fidivrs
and
inc
xor
scas
test
push
int3
add
add
xor
push
inc
leave
pusha
dec
dec
mov
push
insb
fdivl
scas
pextrw
push
insl
ret
or
shll
aam
imul
mov
int
enter
lahf
jno
and
loope
xchg
lahf
cmp
shrl
in
out
leave
mov
mov
pop
add
sub
leave
rcrb
sbb
mov
das
mov
lcall
push
lods
cmp
xor
mov
mov
out
pop
mov
pop
mov
jb,pn
imulb
sub
roll
sub
sbb
stos
inc
jne
fwait
mov
sti
inc
or
je
fldt
mov
notl
xor
cltd
jnp
dec
dec
sub
dec
cmp
fscale
in
out
negl
cmp
sub
xchg
push
lahf
jb
mov
in
push
mov
and
push
sbbl
pop
sti
inc
push
mov
xchg
mov
cmp
aaa
iret
sahf
pop
adc
push
xor
push
out
mov
mov
cwtl
xchg
add
mov
in
aaa
add
and
lret
cmpsb
add
mov
repnz
cli
or
subb
sub
cmp
out
xor
xlat
je
push
ror
in
pop
cmp
xchg
or
rcll
cmc
cmp
push
ret
sti
and
out
or
repz
mov
lods
mov
outsb
mov
inc
push
jg
shr
in
jae,pn
sbb
push
ds
push
lahf
call
mov
in
xorb
cli
ljmp
fprem1
mov
dec
inc
sti
call
sbbl
xchg
xor
cwtl
mov
sub
inc
fisttpll
or
mov
ss
sub
cmp
cmp
pop
dec
addr16
nop
dec
jns
mov
in
ficoml
mov
or
popa
jge
add
cmc
xchg
data16
loopne
popf
scas
push
jb
ja
mov
pop
pop
rorb
insb
add
xor
das
out
cmp
sbb
mov
sbb
or
out
xor
imul
es
rorb
xchg
outsl
fadds
ret
mov
push
aam
push
ds
xchg
gs
or
fs
sub
push
adc
push
arpl
mov
adc
xchg
xchg
ljmp
and
inc
jecxz
mov
xchg
pop
mov
mov
aas
jo
fld
int3
aam
mov
ret
test
inc
mov
mov
inc
in
xor
lock
dec
mov
adc
int3
push
fistl
arpl
or
dec
leave
insl
rolb
into
push
mov
mov
inc
push
pop
gs
loopne
bswap
js
pop
xchg
xlat
mov
inc
jae
bswap
mov
pop
mov
mov
addl
std
in
push
fdivl
push
into
sub
stos
outsl
inc
stc
fbstp
in
sbb
add
or
incb
leave
cltd
les
jmp
mov
add
jl
in
mov
xchg
mov
lret
or
and
idivb
pop
xor
inc
sbb
sub
inc
nop
cli
scas
ss
dec
addr16
roll
test
pop
push
adc
outsb
sbb
pop
loopne
mov
imul
js
gs
fs
mov
jo
mov
sti
sbb
outsl
leave
ja
test
jo
inc
sarb
adc
movsl
mov
dec
ljmp
adcb
hlt
fxch
in
scas
cwtl
lcall
inc
loop
loop
push
test
loope
inc
mov
mov
push
insb
ss
fdivrs
pop
in
jnp
and
push
mov
xchg
mov
mov
out
test
inc
and
pusha
int
mov
inc
inc
jl
inc
out
jbe
xlat
ret
xor
xor
jne
stos
data16
test
sbb
adc
or
loop
jecxz
sub
jnp
idivl
xchg
clc
mov
sbb
pop
xchg
mov
jmp
bound
jnp
scas
dec
popf
cmp
sub
cltd
mov
cmp
jmp
push
xchg
jne
dec
mov
leave
push
je,pt
jnp
sti
mov
test
xor
out
cmp
cli
and
aad
cmp
repz
enter
aam
jmp
lods
cwtl
xchg
and
clc
insb
dec
cmp
mov
lcall
bound
out
dec
jmp
ja
mov
sub
ja
xchg
inc
imul
or
shl
outsb
lods
jb
jb
jle
add
pop
imul
fbld
sub
adc
cmp
add
push
or
outsl
mov
fldenv
cmpsl
test
mov
sub
scas
test
sbb
cmp
into
insl
push
and
jmp
mov
sahf
sub
test
ds
xchg
fadd
fimuls
pusha
adc
push
sbb
and
mov
movsl
pop
repz
ljmp
xor
lds
repnz
pop
ljmp
push
clc
add
scas
cmpb
out
jecxz
rcrb
and
rclb
xor
faddp
sub
stc
inc
jbe
mov
adc
int
clc
adc
ficompl
aad
outsl
popf
fdivp
aaa
repz
cld
loop
cmpb
insl
fildl
in
lret
dec
sub
mov
icebp
xchg
jae
movb
test
lcall
in
iret
enter
rcl
add
shr
inc
push
mov
sbb
pop
aad
scas
les
and
pop
mov
ljmp
mov
push
push
insb
stc
and
inc
imulb
addr16
sbb
add
clc
mov
push
mov
in
push
aaa
push
push
js
cmp
push
or
xchg
inc
dec
push
dec
add
and
dec
into
inc
jno
add
outsb
sarl
mov
and
xchg
roll
add
xchg
jns
adc
and
jnp
enter
fisttps
nop
pop
and
inc
daa
xor
inc
cltd
push
adc
xchg
adcl
dec
pop
mov
and
mov
sub
enter
adc
out
or
loope
dec
mov
imul
pop
fwait
ret
xchg
vpcomud
jns
sub
and
test
mov
stc
loop
sub
std
xchg
scas
movsb
adc
sahf
or
loopne
add
mov
xor
and
adc
ror
stos
repz
jo
lock
xchg
pushf
adc
idivb
mov
lcall
scas
add
aam
call
loopew
mov
xor
loope
mov
and
push
inc
jnp
ss
xchg
jo
and
and
bound
push
push
xchg
mov
adc
icebp
andb
adc
in
jo
adc
bound
sub
cmc
inc
jne
shlb
int3
cmpsl
pop
or
jbe
outsl
fistps
insb
test
cmp
insb
faddl
cmp
lock
fldl
lahf
pushf
xchg
sub
push
imul
pop
nop
in
and
aaa
jmp
add
mov
sti
and
mov
xchg
push
cmpsl
sub
cmp
bsr
enter
jg
push
xor
inc
pop
dec
lods
push
sub
push
std
mov
out
cwtl
xor
adc
movsb
push
test
sub
stos
pop
aam
adc
mov
pusha
adc
popf
jmp
ja
aaa
add
mov
pop
loop
mov
lahf
aaa
imul
dec
mov
xchg
inc
aad
push
lods
popf
test
aad
push
pop
test
loopne
mov
push
lret
mov
push
cltd
lods
dec
gs
push
xor
adc
mov
or
movsl
add
mov
sub
mov
sbb
out
jno
ret
sub
enter
insb
cli
test
xor
or
pop
loope
or
mov
test
pmaxsw
xor
sub
test
ret
popa
jne
sbb
out
push
mov
sub
aaa
xor
stc
pop
or
mov
pop
mov
or
adc
ret
imul
ret
add
xchg
sub
aas
cltd
mov
jl
sar
mov
outsl
sahf
xchg
cmpsb
pop
cmp
cmpb
fldenv
imul
adc
xor
push
jmp
in
jo
stos
xchg
dec
sbb
xor
dec
xor
cmc
push
lahf
out
xor
pusha
mov
aaa
fnstcw
mov
cmp
push
cmp
out
mov
stos
or
out
or
mov
inc
inc
inc
push
cmp
in
bound
pop
jne
inc
cli
lods
inc
into
and
inc
dec
pop
movsb
dec
lret
mov
xor
movsb
mov
test
push
pop
mov
mov
mov
gs
outsb
jmp
inc
add
psubsw
sbb
cwtl
xor
inc
sarl
inc
cmpsb
inc
out
xor
pusha
fcoms
aas
inc
cmp
repnz
addr16
cmp
lea
addr16
sahf
lea
popa
popa
int
xor
add
jno
xchg
push
cmp
jne
lea
mov
add
cli
inc
jmp
add
mov
stos
push
outsl
jle
xchg
icebp
ljmp
and
add
lret
pushf
mov
loop
add
mov
std
es
push
sbb
pusha
jmp
dec
lret
jle
mov
lods
jo
lcall
loope
in
or
jp
adc
dec
out
rclb
push
ret
sbb
aas
jmp
das
stos
movsl
les
pop
pop
mov
cmpsl
les
push
and
xchg
das
inc
cmpsl
mov
xor
nop
outsb
nop
or
cmpsb
imul
xor
sahf
icebp
mov
or
sbb
and
inc
iret
imull
fwait
mov
add
aam
gs
call
jge
sbb
lret
in
in
popa
cltd
faddl
dec
fwait
xor
pop
push
mov
test
hlt
mov
int
push
fistl
mov
aaa
out
fs
xchg
push
add
lock
xlat
add
dec
outsl
stc
dec
ret
scas
pushf
and
and
fwait
in
ret
ljmp
shrb
incb
sub
getsec
popl
pop
pusha
or
push
out
lds
in
and
mov
xor
dec
sarb
add
pop
adc
mov
add
fwait
jge
adc
inc
scas
scas
adc
int3
xor
mov
mov
fcmovu
icebp
inc
into
and
fdivrs
test
mov
ja
cmpxchg
pop
xchg
sahf
addr16
mov
xor
lret
cltd
fadd
sbb
les
mov
stos
push
push
sbb
insl
xchg
jle
sbb
mov
neg
jb
fcomps
lods
and
mov
or
das
loopne
fcoml
popf
je
nop
sarl
mov
and
rol
lods
stos
orb
loope
mov
push
mov
les
clc
ljmp
jecxz
shr
ret
pop
xor
and
adc
add
dec
arpl
outsl
inc
lahf
mov
mov
fcomip
iret
jecxz
shr
ret
pop
xor
and
adc
add
dec
arpl
outsl
inc
lahf
mov
jmp
jmp
orl
dec
call
das
ret
pop
jmp
and
adc
add
pop
arpl
xchg
mov
mov
fcomip
call
ret
pop
int3
lock
sti
pushf
subb
sub
jle
data16
or
sbb
mov
cwtl
fisubrs
mov
sbb
scas
clc
mov
sub
jle
push
pop
push
push
into
cwtl
mov
enter
call
dec
sbb
outsb
cmp
push
pop
push
push
cbtw
fmulp
mov
stos
lret
mov
enter
js
sbb
add
ret
leave
js
xchg
hlt
dec
cmp
push
fwait
cmpsl
mov
dec
adc
pop
sbb
orl
or
and
out
xor
jb
incb
out
lea
sbb
pop
adc
iret
jecxz
or
and
cs
add
sbb
push
mov
fisttpll
mov
je
mov
pop
mov
adc
sub
mov
push
repnz
scas
out
jnp
sub
or
js
loopne
in
mov
adc
bound
pop
xor
fcomps
mov
test
nop
xchg
nop
pop
mov
xor
pop
jmp
dec
sbb
outsb
cmp
push
pop
push
push
into
cwtl
fisubrs
mov
sahf
call
and
pop
jbe
or
push
das
pusha
sbb
stos
movl
mov
push
dec
pop
pop
pop
outsb
jo
sub
pop
add
fidivl
fstl
mov
pop
ss
or
pop
push
push
into
cwtl
fisubrs
mov
sahf
call
dec
sbb
outsb
cmp
push
pop
push
push
into
cwtl
fisubrs
mov
sahf
call
dec
sbb
cmp
ret
sbb
clc
lahf
sub
subb
in
leave
jge
fwait
neg
pop
push
pop
inc
popa
lret
movsl
xchg
outsl
daa
cmc
in
push
mov
arpl
xor
mov
push
jge
xor
or
stos
cmpsl
jnp
into
xor
pop
inc
pop
js
roll
dec
imul
push
add
sbb
out
pusha
lahf
hlt
push
cmc
cmp
out
aaa
jae
imul
lahf
xor
sbb
mov
aaa
mov
sti
sub
hlt
cwtl
push
mov
into
fldenv
dec
nop
push
pop
add
ret
jbe
mov
adc
andl
mov
into
push
rcr
out
int3
adc
xor
push
mov
mov
sbb
mov
ss
push
or
dec
push
loop
leave
mov
jmp
fidivrs
loop
fadds
fwait
ret
adc
xor
popf
js
int3
clc
xchg
lret
xor
push
jbe
gs
jns
sub
out
lret
sbb
jb
jmp
aam
jg
dec
sbb
or
lcall
jmp
push
jbe
popf
test
jl
mov
cwtl
cmc
adc
pop
out
out
fstl
mov
js
cmp
mov
filds
sub
out
stos
dec
mov
fistl
cmp
cmc
fwait
sti
dec
jmp
mov
jne
pop
push
inc
popf
test
sbb
inc
popa
inc
mov
mov
dec
cs
std
mov
mov
outsb
jb
rcll
stc
loope
repz
xor
jge
fcomps
fdivl
dec
xchg
lgs
andb
into
into
xchg
stc
insb
or
cs
xor
mov
jo
add
jmp
dec
or
std
cmp
add
adcb
fiaddl
jno
gs
lods
add
sub
inc
or
xchg
stos
dec
pop
sbb
out
in
enter
and
call
negl
outsb
jl
sbbb
nop
push
push
xor
std
cli
add
iret
pop
push
jae
pushf
clc
sub
sbb
lock
mov
mov
inc
xchg
push
mov
push
mov
adc
movsl
adc
inc
fidivrs
aam
call
ret
mov
adc
es
scas
int
pushf
xchg
xchg
inc
arpl
popa
testb
test
ds
incb
xchg
sub
movsl
test
aam
mov
in
gs
stos
xchg
imul
pop
jbe
jmp
sbb
sahf
rcrl
xor
and
loopne
pusha
mov
fsub
push
sub
jp
dec
sbbb
cmp
hlt
cmp
in
xchg
push
sub
fcompl
mov
or
push
pop
call
xchg
inc
push
add
dec
add
aam
aad
sub
adc
adc
add
into
rorl
int3
stos
jae
stos
jne
xchg
mov
cld
pop
pop
xchg
repz
pushf
mov
or
add
lock
ror
pushf
cmp
cs
loop
cmp
cs
and
aaa
push
xor
adc
push
repz
mov
cmp
inc
ss
ret
mov
lds
leave
inc
jmp
aaa
jg
mov
and
inc
ret
scas
xchg
xchg
mov
call
sub
mov
out
push
mov
xchg
in
daa
insl
es
add
xor
sub
out
add
je
pop
sub
xchg
jmp
sub
data16
daa
adc
dec
adc
or
inc
orb
adc
popa
cmp
mov
jno
leave
popf
sbb
test
mov
mov
frstor
xor
xor
pop
daa
inc
clc
xor
mov
test
inc
dec
adc
sub
add
loop
mov
inc
inc
sub
push
xor
lea
nop
dec
and
mov
lock
int3
push
shlb
or
xchg
out
adc
push
int3
icebp
aad
cmp
add
sub
mov
in
pop
xor
mov
int3
and
scas
inc
lret
xor
sub
inc
dec
loope
shl
iret
inc
cli
lds
enter
cltd
mov
adc
fsubr
sbb
xorl
imul
clc
insl
push
adc
sar
stos
dec
inc
or
add
inc
ljmp
inc
lea
adc
inc
add
daa
jmp
ret
mov
popa
scas
xor
ret
sub
sbb
mov
decb
loopne
pop
shrb
out
pop
mov
jns
icebp
aas
xchg
cmpsb
push
movsb
out
adc
mov
sbb
mov
adc
sbb
aas
xor
xor
rcrl
lods
push
fs
mov
lahf
xor
cmp
xorb
adc
sbb
push
addr16
push
insl
push
idivb
adc
shlb
xchg
sbb
or
stc
and
loope
adc
gs
in
fiaddl
xor
cs
xlat
mov
loopne
mov
sbb
outsl
ret
jbe
xchg
xor
sarb
fnstsw
lock
je
insb
jge
lea
mov
pop
sub
movsb
js
data16
xchg
push
lds
lods
or
mov
cli
dec
or
test
in
loopne
leave
push
and
jae
or
and
adcb
mov
pushf
inc
int3
xchg
test
adc
aad
mov
in
sub
lods
aaa
pop
lcall
sti
mov
adc
adc
test
ljmp
sub
nop
or
jg
negb
insl
jecxz
push
mov
mov
mov
and
sbb
pop
nop
dec
test
out
cmp
loop
scas
std
cmp
and
mov
out
cmp
dec
test
lods
mov
mulb
rorb
mov
leave
std
clc
and
jge
jbe
shlb
or
leave
or
cli
inc
sar
xchg
outsl
mov
add
jno
mov
sbb
daa
jecxz
mov
push
push
jge
mov
shlb
out
add
int
ss
cmp
dec
pop
aaa
int3
pop
out
push
test
xorl
adc
pop
pop
jno
shlb
sbb
or
popf
jle
xchg
imul
hlt
xchg
daa
mov
sbb
add
cltd
xor
hlt
cmp
mov
loope
push
ret
sbb
ret
xor
roll
aaa
out
and
ds
cwtl
push
int3
iret
or
dec
and
popf
sub
cltd
addr16
cmpl
das
xor
xchg
mov
jae
mov
mov
adc
adc
jb
test
xorb
or
not
or
stos
fildl
and
dec
hlt
stos
ss
aaa
push
and
inc
mov
test
pusha
xor
daa
dec
ja
jmp
mov
inc
hlt
imul
fisubrs
jp
loopne
cs
mov
mov
jle
inc
es
and
push
aam
shrb
shrb
insb
push
or
mov
xor
jns
stc
dec
lods
test
mov
cli
les
and
pushf
adc
sbb
jle
or
xor
hlt
sbb
loope
push
pop
fdivrp
popa
lret
mov
inc
pusha
leave
sbb
mov
sahf
gs
pop
mov
xor
push
push
mov
add
jp
xchg
or
mov
roll
add
repz
xchg
add
or
aam
lea
setno
les
out
xor
iret
mov
mov
push
pop
adc
xchg
lods
xchg
gs
daa
inc
test
test
jne
addr16
mov
cmc
xchg
inc
and
stos
mov
push
jbe
shl
mov
jmp
push
push
push
pusha
das
pusha
imul
arpl
out
sti
cwtl
mov
or
pop
dec
xor
push
ficoms
mov
lcall
or
push
in
popa
adc
xchg
and
inc
in
leave
mov
add
das
push
arpl
push
lret
aas
dec
add
mov
das
add
add
call
dec
cli
clc
and
pusha
movsl
xchg
xchg
pop
inc
push
and
push
mov
pop
sub
cltd
testb
shrl
std
pop
push
not
testl
pop
test
loope
jnp
adc
pop
mov
and
incb
dec
test
repz
mov
in
stc
pop
lcall
aad
loop
pop
push
ljmp
sbb
dec
pop
lea
pushf
dec
jno
add
in
jle
or
pop
push
rolb
jl
inc
aam
repz
insl
outsb
mov
cltd
ss
stos
push
sbb
rorl
jae
or
test
cmp
inc
mov
xchg
xor
or
popa
push
stos
push
rclb
pushf
cmpsb
in
outsb
inc
cmc
cld
jp
or
jmp
sub
dec
add
cmp
aam
repnz
mov
jl
hlt
out
xchg
xchg
or
pop
lret
outsl
out
repz
repz
cmpsl
mov
lds
in
and
fisubs
mov
pop
in
sub
push
mov
ja
adc
sub
jg
mov
dec
repnz
mov
out
adc
lods
jmp
add
iret
or
sbb
pop
fwait
scas
loope
sub
xchg
cmp
jno
pop
cltd
sbb
push
hlt
xchg
and
out
packsswb
aaa
and
repnz
cmc
rcrl
push
inc
nop
fsubrs
add
pop
push
in
dec
aam
popa
push
or
pop
add
stos
aam
out
sarl
sbb
inc
mov
dec
movsl
jp
pusha
pushf
jno
insl
shll
adc
out
mov
in
lcall
xor
mov
sbb
pop
dec
mov
push
stc
fsts
pop
rcr
data16
mov
test
cwtl
or
mov
fstpl
mov
add
mov
mov
cltd
iret
pop
mov
cs
fidivrs
rolb
and
test
cmp
or
inc
sub
push
jb
sbb
enter
dec
pop
jge
sbb
xorb
mov
stc
test
push
lcall
push
sbb
adc
xchg
jg
xchg
mov
xchg
xor
loope
mov
in
mov
lods
fisubrl
sbb
mov
push
jge
cs
arpl
push
repz
loopne
sbb
and
fwait
shlb
fstpl
movsl
sahf
adc
xchg
ret
lods
popa
enter
pop
sbb
ret
mov
test
and
repnz
rclb
sub
sub
sub
dec
and
push
fwait
stos
pushf
popl
push
cmp
add
sarb
arpl
addr16
ja
sub
add
test
je
pop
sbb
xchg
fcmovu
pushf
repnz
repnz
sbbl
mov
fstl
lahf
add
pop
je
or
lds
fs
pusha
addl
fs
ret
dec
pop
gs
sbb
out
std
jmp
pop
adc
jae
shlb
and
dec
xchg
jae
das
xchg
loop
dec
sub
xor
add
inc
pop
add
stos
int
mov
cmp
cmp
xor
add
mov
xor
sub
add
popf
inc
sti
or
xchg
gs
in
lret
push
add
inc
ret
mov
and
add
cmc
stos
andl
inc
ja
leave
mov
pushl
outsb
inc
sub
cli
lret
fisttps
pop
push
mov
mov
xor
scas
xlat
lret
clc
sub
add
sbb
stos
outsb
and
cmpb
popa
inc
lahf
xchg
push
and
add
das
stos
and
cmp
addr16
das
jo
xchg
out
cmp
mov
push
cmovge
sbb
cmp
cmp
cmp
jecxz
ja
out
and
xor
dec
cmp
std
mov
add
loope
cld
xor
add
adc
incl
xchg
jnp
movsb
jp
test
mov
mov
mov
jb
in
mov
loopne
out
cmp
push
push
subl
mov
enter
mov
xorl
jne
out
mov
adc
jle
sbb
leave
cli
insl
mov
cmp
push
mov
negl
sub
push
sbb
push
mov
jne
dec
inc
add
sti
dec
pop
inc
popa
dec
cmpsl
ficoms
scas
aaa
dec
jge
out
jmp
test
popf
nop
into
or
iret
arpl
clc
cmp
mov
adc
cmp
xchg
cltd
ret
pushf
repz
mov
rcl
lods
hlt
or
lret
mov
nop
mov
int3
out
rorl
adc
cmp
leave
cmpb
hlt
bound
push
xchg
jae
call
call
insl
sbb
dec
jl
and
cltd
cmpsl
xchg
adc
ret
repnz
push
arpl
cmp
and
int3
call
dec
fcmovbe
subb
jg
sbb
int3
out
frstor
movsb
std
ljmp
mov
leave
loopne
mov
sub
xchg
repz
cltd
cltd
daa
adc
repnz
shrb
sub
mov
es
aas
dec
adc
lcall
std
repnz
sub
pop
xchg
jns
cmp
jl
xor
xlat
mov
add
shr
sbb
sbb
ja
and
out
lcall
push
sbb
hlt
sti
in
mov
mov
pop
fdivrp
push
mov
and
or
out
pop
push
sbb
jbe
pop
das
ret
iret
mov
or
mov
xchg
lret
or
jns
adc
hlt
std
sbb
popa
mov
push
jno
adc
ficomps
cmc
jge
daa
cmp
inc
call
xchg
push
mov
xor
aam
jge
mov
jmp
sti
pop
ds
inc
out
pushf
pop
add
cltd
adc
pop
add
insb
xchg
cmp
mov
sbb
dec
lods
hlt
mov
std
arpl
imul
movsl
pop
xlat
cmp
sub
cwtl
dec
or
or
out
jne
and
sbb
pop
add
sti
pushf
lods
int
ds
mov
into
fdivr
loop
jae
cmp
adc
arpl
divl
add
imul
or
mov
cs
pop
push
pop
mov
dec
rorb
hlt
mov
or
sbb
adc
push
cld
xor
ja
sarl
sbb
push
lret
ror
jo
sbb
inc
sti
mov
imul
outsb
or
leave
pop
or
sti
add
test
mov
jne
nop
push
aas
aaa
lds
les
xor
daa
arpl
rcrl
mov
imul
mov
pop
or
notl
clc
pop
test
test
bound
out
dec
iret
outsb
and
adc
pop
lahf
and
inc
rcrl
jmp
cmp
lahf
mov
cmp
jecxz
cmp
or
bound
out
pop
xchg
imul
dec
jl
and
cmc
cmp
xchg
imul
xchg
pop
push
xor
je
dec
ret
cmp
insl
das
inc
lds
mov
pop
push
xchg
xchg
sbb
frstor
and
dec
jb
les
adc
adcb
mov
lods
pop
mov
es
daa
bound
sbb
push
je
ds
out
jg
dec
inc
test
movsb
xchg
mov
inc
xlat
sub
repz
enter
jb
mov
jge
je
rolb
pop
xchg
mov
stos
inc
cld
setns
stos
sub
cld
cmp
loope
rorb
sub
dec
jae
xchg
jmp
lods
addb
mov
adc
pop
mov
push
mov
or
adc
and
daa
mov
add
mov
push
cltd
ds
aaa
jae
test
xor
into
sti
aas
sub
or
and
repnz
leave
les
mov
inc
mov
cmpsl
repz
dec
aaa
push
xchg
data16
aam
mov
push
int3
fcoms
test
out
ja
f2xm1
sub
lea
xor
pop
and
dec
mov
cmpsb
clc
adc
fbld
fstpl
sub
mov
lret
xchg
pop
insb
push
jmp
jle
inc
es
sub
mov
in
iret
inc
inc
and
adc
xchg
pushl
notb
pop
in
jl
movsl
sub
das
push
shll
testl
cmp
xchg
inc
xor
cmp
and
mov
in
jmp
dec
sbb
into
push
push
ljmp
test
popa
sub
mov
and
and
jae
lods
jecxz
fldenv
cmp
rep
xor
nop
pop
jns
iret
sub
scas
mov
pop
add
jo
gs
test
test
inc
push
ljmp
jl
fbstp
fs
cs
jne
xlat
pop
add
movsl
xor
push
rcr
ffreep
fmuls
int3
jle
out
sbb
push
int
inc
xchg
in
xor
fcoms
lahf
lods
mov
aaa
jmp
sahf
xor
stos
inc
mov
mov
or
inc
loope
out
popf
ds
fmull
sub
adc
dec
cmp
pop
or
sbb
cmpsl
insl
in
addr16
frstor
cld
sub
push
imul
movb
pop
sbb
in
cmp
aaa
cli
mov
mov
pop
adc
adc
and
push
pushf
mov
shr
mov
sub
sub
pop
je
push
test
cmpsb
icebp
push
pop
mov
ficoml
out
aaa
mov
lea
jl
push
sbb
pop
inc
fcoms
adc
add
dec
outsb
movsb
and
test
bound
inc
sub
mov
mov
pusha
imull
test
or
sub
loope
and
scas
xchg
fnstenv
cld
inc
fsubs
enter
bound
mov
sbb
mov
nop
clc
call
dec
movsl
inc
in
and
mov
sti
cmp
stos
dec
push
dec
mov
push
inc
mov
sbb
cmp
sbbb
icebp
loopne
and
cmp
pop
std
js
addr16
cmp
xchg
sub
sti
out
and
sarb
or
sbb
mov
into
or
out
mov
inc
outsl
out
arpl
pop
test
je
push
push
xor
movsb
jns
cli
fstl
in
je
mov
jecxz
xchg
cmp
dec
fwait
ret
xchg
lcall
test
call
jl
aam
xor
adc
fdivrl
int3
les
das
xchg
fistps
cld
sahf
fistl
jb
orl
mov
ret
add
bound
jae
imul
push
xchg
xchg
push
lds
aam
cmp
cmp
fdivr
test
imul
pop
outsl
lock
inc
sub
gs
aaa
mov
mov
mov
clc
nop
scas
ljmp
cmpsb
inc
mov
adc
xchg
popa
pop
popf
mov
adc
jnp
fistpll
push
mov
xchg
fcompl
sub
rcr
inc
pop
push
lods
add
and
imul
mov
mov
cmp
dec
sbb
and
flds
sub
pop
mov
push
add
push
lahf
xor
lahf
cmc
mov
and
test
scas
xchg
adc
cmp
mov
adc
repz
cmp
pop
xchg
loop
pop
or
mov
cmp
dec
ret
test
nop
xchg
ret
ret
mov
xor
pop
mov
test
cmpsl
std
inc
jl
fwait
xchg
adc
cmp
cltd
push
mov
or
daa
idivb
je
fists
fs
mov
cli
xor
dec
fdivrl
lcall
lea
cmp
inc
mov
push
dec
add
push
and
dec
shrb
and
or
mov
adc
adc
jno
subl
fs
mov
sub
arpl
xor
imul
mov
popa
jge
and
mov
mov
rorl
push
out
push
out
add
inc
xchg
pop
cli
cmp
fnstcw
sbb
xchg
scas
or
ret
and
ficoms
les
xchg
repz
ror
popf
lcall
mov
dec
pmulhuw
jecxz
xlat
push
add
aad
mov
mov
aad
adc
push
pop
cmpsb
outsb
cmp
push
pop
push
push
into
cwtl
fisubrs
mov
sahf
call
dec
sbb
outsb
cmp
push
pop
push
push
into
cwtl
fisubrs
mov
sahf
call
dec
sbb
sub
cmp
push
pop
sahf
push
dec
cwtl
fisubrs
mov
sahf
call
dec
sbb
outsb
cmp
push
pop
push
push
into
cwtl
je
out
mov
popa
pop
push
pop
inc
push
movl
shrl
inc
hlt
sub
hlt
addr16
xchg
pop
xchg
daa
movsb
aaa
push
movl
xchg
xor
and
les
push
hlt
addr16
daa
movsb
aaa
dec
pop
xlat
insb
out
testl
jns
or
push
jmp
call
sub
inc
inc
add
cmc
movsb
jecxz
push
pop
aas
add
mov
iret
insb
lods
xchg
aad
mov
or
jg
push
push
cli
in
aaa
or
jbe
xchg
pushf
mov
pop
lret
stos
sarb
fwait
xlat
rolb
addl
mov
pop
js
mov
movsb
ss
cmp
out
jecxz
xchg
out
je
inc
rcrl
inc
aas
fldenv
stc
xor
jns
aam
aam
add
fwait
adc
insb
iret
test
es
mov
out
sub
push
xchg
insb
sub
sub
mov
sar
xlat
jecxz
xor
je
testl
cmpsl
cmp
push
in
addr16
ja
pop
pushf
pop
scas
daa
movsb
jno
stos
and
mov
jns
and
aam
test
xchg
sbbb
push
outsb
movsl
leave
push
cmp
adc
js
add
xor
ja
xchg
add
sbb
rcrb
sub
pop
jmp
xchg
xor
and
aam
les
addr16
xchg
pop
test
mov
movsb
aaa
push
movl
xchg
xor
and
aam
les
addr16
xchg
pop
test
mov
movsb
aaa
push
imul
adc
xorw
leave
cmc
pop
test
outsl
sub
inc
cld
lret
fwait
adc
pop
cld
mov
rclb
xchg
lret
cmpsl
mov
xchg
and
add
cmc
xor
pushf
fwait
dec
ds
stos
mov
add
sarb
cld
or
xchg
out
push
mov
loope
xchg
dec
aaa
add
dec
xor
xor
cmc
fldt
mov
or
mov
sbb
dec
jnp
xor
xor
adc
adc
cmp
mov
mov
lret
jb
xchg
sti
aas
movsl
hlt
jp
loop
add
jle
mov
out
lds
ret
and
lods
mov
pop
cwtl
cmp
dec
sub
add
ficompl
cltd
ror
xchg
push
xor
lods
mov
or
adc
cli
popa
mov
sub
stc
sub
bound
dec
aaa
or
pop
jge
sbbb
mov
and
mov
push
sahf
or
ljmp
mov
mov
int3
jmp
xor
sahf
lahf
sub
push
adcl
iret
out
jg
movsl
jnp
mov
ficomps
jp
add
jns
mov
jg
mov
je
dec
push
push
cmpb
repnz
fstpt
gs
lods
roll
xchg
aad
js
xchg
jns
pop
adc
cli
cmp
mov
sub
inc
xchg
jg
xor
inc
jb
lcall
lea
idivl
negl
push
inc
imulb
mov
scas
jo
jns
inc
mov
roll
cs
imul
push
popf
les
inc
popf
aad
outsl
jecxz
cmp
mov
xchg
and
mov
loope
stc
cmp
push
adc
pop
sbb
call
mov
lock
dec
mov
ljmp
pop
inc
or
jle
inc
sbb
adc
push
mov
xor
inc
xor
std
repz
mov
nop
jnp
push
sahf
movsb
jge
jl
ror
out
or
shr
jns
fdivr
mov
mov
cmp
pushl
mov
pop
push
and
xor
pop
faddp
popf
insb
imul
or
add
cmp
add
mov
cmp
fdivrl
mov
mov
add
clc
loopne
loope
lds
out
mov
addr16
xchg
mov
xchg
sub
push
mov
pop
inc
dec
fstl
mov
call
or
lds
pop
cmp
sub
add
aas
sub
fisubl
ror
xchg
lock
sbb
xchg
dec
mov
push
cmc
enter
mov
cli
xchg
daa
xchg
in
cmc
aas
mulb
lcall
jmp
inc
mov
jg
insb
xchg
mov
mov
pop
cmp
mov
push
xchg
jmp
out
pop
jnp
push
in
lfs
lock
adcb
add
jo
fcoml
leave
xchg
in
dec
out
pop
ljmp
add
add
loope
cli
icebp
xlat
out
aad
cmp
hlt
cmpsb
divl
movsb
xor
int
movsl
or
iret
adc
aas
imul
inc
or
sar
mov
add
adc
arpl
out
sub
adc
ja
cmp
add
in
lds
rorl
sub
jnp
push
mov
stc
xchg
arpl
data16
test
orl
jle
push
jae
std
dec
iret
movsb
cmpsb
in
adc
push
mov
pop
inc
dec
jg
sub
out
fcoms
sarb
fwait
jnp
cmpsb
adc
ret
lcall
push
jg
mov
int
shl
cmp
int3
add
dec
test
lcall
push
aas
xchg
loope
sub
nop
mov
and
push
jge
push
adc
mov
test
jo
mov
mov
dec
hlt
outsb
shr
or
into
push
in
xchg
adc
adc
add
jmp
mov
clc
dec
add
addr16
cmpsl
jne
les
dec
push
sbb
sub
add
adc
sub
or
fisubs
cs
and
pop
loop
mov
sbb
mov
xor
pop
daa
pop
sub
cmp
int3
adc
decb
in
out
filds
jmp
test
jg
popf
pusha
xchg
mov
jge
jne
pop
rorb
jmp
insb
add
mov
xchg
sbb
mov
cs
mov
mov
jle
pusha
jns
xchg
shlb
lds
imul
cs
jb
jb
daa
cmp
pop
pop
mov
cmp
or
sub
imul
sbb
sbb
lods
inc
rcrl
dec
daa
xchg
enter
cs
pop
fwait
push
bound
cwtl
sbbl
sbb
lods
sbb
shl
ret
xchg
adc
stos
cmc
jns
out
clc
inc
cli
hlt
or
les
les
in
outsb
in
addr16
cwtl
addr16
jnp
pop
mov
jl
aas
jg
fs
dec
in
mov
in
push
jle
rcll
cwtl
adc
xchg
jno
adc
int3
fmull
jbe
jo
jae
push
test
pop
in
add
stc
push
cmp
mov
inc
out
fdiv
fisubl
mov
lds
add
nop
adc
out
fucomi
andb
fildl
cmp
add
cwtl
adc
mov
sbb
xchg
xchg
out
jle
pusha
cltd
outsb
xor
or
test
repz
fcoms
add
xchg
inc
jge
into
mov
push
jl
push
bnd
xchg
out
inc
sbb
xor
inc
jp
imul
dec
enter
or
xor
push
movsb
inc
clc
mov
out
push
fisttps
bound
cmp
dec
cmpsl
ljmp
addr16
mov
jbe
pop
sub
lods
out
xor
mov
and
adc
or
sbb
loop
sahf
lret
jae
xor
sti
push
sbbl
jne
sbb
adc
pop
and
addr16
jo
dec
push
cltd
and
xchg
and
rol
sub
aad
rclb
mov
add
jbe
xchg
sub
into
and
daa
push
bound
roll
inc
arpl
adc
shlb
xor
leave
dec
mov
test
xor
pop
pop
xorps
movsb
push
pop
es
mov
cmp
aas
add
gs
mov
divb
push
movsb
clc
scas
sub
mov
movsl
cmp
xchg
jl
jle
cmp
call
iret
mov
pop
lods
loopne
fs
data16
sbbl
pusha
jmp
nop
xchg
fmuls
inc
cwtl
movsl
mov
daa
cli
sbb
jno
xchg
outsb
sarl
adc
insl
out
pop
xlat
pop
xlat
jne
pop
jne
ja
mov
cs
push
add
imul
out
aas
loopne
test
xchg
push
sbb
rol
movsl
jg
rolb
add
aas
das
stc
xor
adc
dec
stc
add
into
xor
insl
test
mov
push
cli
mov
jl
xor
cmpsl
inc
mov
in
in
push
push
fnsave
pop
push
fistpl
and
sub
popa
pop
mov
mov
sub
push
pushf
loope
outsl
jg
data16
je
pop
outsl
mov
sbb
mov
stos
shll
rorb
loope
sbb
push
push
adc
call
into
jle
mov
loope
imul
jmp
or
and
icebp
mov
pop
icebp
cs
pop
icebp
or
fsub
adc
xor
ss
mov
jb
cwtl
dec
lock
push
mov
or
ffreep
mov
movq
arpl
xchg
cmp
fcmove
mov
inc
sar
mov
pop
adc
loopne
int3
in
test
cwtl
lods
adc
fs
cmp
xor
cwtl
hlt
add
xor
pop
inc
adc
pop
decb
insl
jecxz
mov
push
push
cmpsb
sti
mov
pop
ja
es
push
shr
cmp
aaa
test
ljmp
mov
fwait
scas
das
loop
pop
dec
sub
jnp
sbb
inc
js
mov
or
cs
pop
mov
dec
fs
xor
push
scas
sub
imul
shll
clc
aad
pop
fstps
and
daa
xchg
cmp
and
pop
push
sbb
lahf
out
mov
loope
loope
hlt
adc
adc
call
jl
fstl
cmp
and
fistl
jecxz
push
lcall
sbb
dec
sbb
mov
icebp
mov
imul
push
sbb
pop
jbe
filds
add
xchg
mov
mov
aas
push
pop
jb
cmc
je
in
or
mov
cmc
fwait
lods
pop
notb
outsl
int3
sub
repnz
jne
pop
cmp
imul
test
cli
dec
push
or
lahf
shlb
das
mov
das
test
lret
test
jecxz
xor
jg
imul
inc
push
pop
popa
cmp
das
cli
loopne
out
mov
jnp
push
mulb
in
fidivrs
dec
icebp
movsb
andb
ja
xchg
sbb
pop
loope
les
lcall
dec
mov
pop
sti
and
xchg
enter
mov
fwait
out
pop
int
testl
mov
jo
push
loop
cmpb
xchg
ds
adc
sbb
test
lds
addr16
push
or
xor
pusha
cli
movsl
es
mov
mulb
pop
mov
mov
jmp
push
jb
movhps
aam
lds
je
out
fcomps
js
sbb
mov
leave
jb
jge
sbb
lds
mov
hlt
dec
cmp
add
sahf
out
shlb
fwait
pusha
add
out
mov
inc
hlt
scas
cmp
repz
jns
shr
fwait
fwait
mov
inc
inc
scas
jo
gs
vmovhpd
xorb
subb
sti
mov
mov
push
inc
test
push
sbb
idivb
adc
adc
arpl
xor
popf
test
sahf
shr
ds
clc
xchg
in
pop
out
mov
out
xor
add
ss
pop
enter
aaa
into
cmpsl
adc
test
dec
sub
mov
test
xorb
cmpsl
pop
stos
ret
enter
pop
in
mov
pop
in
jne
pop
lret
adc
imul
jno
cmp
jne
sbbb
cwtl
call
xor
neg
sbb
aas
or
loope
mov
stos
adc
sarb
push
adc
jg
faddl
idivb
xor
shrb
xchg
mov
into
outsb
pop
and
add
fwait
and
cmp
cmp
out
cmp
sub
sub
clc
adc
cmp
mov
add
inc
pop
fdivl
and
xchg
inc
adc
mov
int
scas
out
sbb
testb
movsb
enter
dec
ret
outsb
push
or
rolb
pusha
jno
cmp
enter
stos
pop
pop
xchg
cwtl
mov
jb
jecxz
out
outsb
inc
loope
loope
sub
xor
sub
push
pop
xor
xor
mov
movsb
xchg
jbe
movsb
xchg
imulb
xchg
jg
or
mov
rcrl
cmp
fs
jbe
and
sbb
sub
xchg
nop
and
fwait
arpl
sbb
jbe
push
xchg
lea
aas
lret
iret
cmc
shrl
ljmp
ljmp
loopne
push
push
cmpsl
repz
enter
enter
movb
cmp
std
adc
inc
or
push
xchg
test
idiv
cmpl
fisttpl
iret
cmp
xchg
xor
fisttpl
and
in
sub
ja
es
xor
xchg
das
notb
cmp
or
add
repz
sub
add
pop
shll
movsb
scas
scas
jnp
add
pop
sub
pusha
aam
jbe
or
fcompl
repz
cmp
pop
lods
adc
lahf
inc
mov
or
mov
dec
imul
mov
pop
inc
arpl
xchg
iret
add
jno
negb
fs
int3
enter
push
addr16
imul
adc
stc
xchg
xchg
or
test
cmpsb
andl
mov
int3
pop
in
and
fwait
mov
imul
xor
mov
jns
fnstsw
xor
test
dec
repnz
sub
jns
jne
inc
int
pop
in
test
mov
cmpb
aaa
test
loopne
xchg
mov
mov
or
add
lods
imul
dec
loope
cmc
rorl
fwait
int
sub
repz
aas
stos
scas
rorb
xchg
scas
ljmp
fs
cwtl
dec
out
xor
push
sbb
sub
inc
cwtl
fwait
jbe
and
imul
data16
or
divb
test
mov
fdivp
and
adc
aad
adc
jl
mov
into
sub
fldl
xchg
pop
sbb
jp
int3
mov
jbe
test
dec
hlt
pop
test
mov
lcall
push
lock
inc
cmp
cmp
jl
mov
add
jl
pushf
addr16
dec
icebp
pop
in
sub
mov
sub
mov
insl
std
movsl
in
nop
mov
lock
pop
pop
adc
dec
cmp
or
inc
loope
arpl
pop
add
cmp
dec
repnz
dec
mov
fstl
fnsave
in
dec
das
jle
std
and
cli
mov
cwtl
or
cmc
push
loopne
cld
push
xchg
lock
and
push
popa
or
push
repnz
jg
lahf
push
std
cmpsb
mov
or
divl
lcall
stc
or
inc
jp
pop
xchg
inc
es
out
in
cmp
mov
xchg
out
cmp
stos
xchg
cmp
test
adc
jbe
out
push
adc
mov
inc
fnstenv
movsl
xchg
mov
fs
addr16
fisubl
dec
dec
sbb
dec
pop
addl
aam
add
notl
pop
int3
jbe
push
sti
les
push
cmc
xchg
leave
std
mov
aas
push
leave
lock
lret
or
sub
jne
fnstcw
nop
cmp
mov
fwait
push
xchg
jo
dec
not
xor
dec
push
fdivrl
lcall
cli
lock
pop
mov
test
fsubl
push
popf
adc
cld
push
jbe
fstpl
or
fadd
mov
dec
sbb
mov
add
js
xor
mov
shl
mov
add
mov
pop
add
jno
mov
insb
lret
jp
test
push
sbb
rclb
jp
and
xor
jne
mov
repnz
pop
dec
rcl
ret
inc
cmp
xchg
subl
mov
in
push
into
out
testb
mov
fwait
cwtl
jl
popa
cmpsl
pop
inc
fs
popf
add
pushf
mov
dec
test
insl
and
xor
in
jp
add
jle
scas
std
testl
cmp
pop
push
mov
lret
mov
imul
repz
xor
or
fisubs
add
gs
lods
mov
xor
rcrb
sbb
outsb
jge
pop
xor
std
sbb
icebp
sbb
push
outsb
xchg
popf
pop
pop
outsb
int3
inc
dec
lahf
cmp
lods
jp
push
movsl
outsl
in
mov
push
les
cmp
popa
xchg
loope
mov
pushf
pop
dec
inc
adc
jl
je
jecxz
mov
loopne
es
add
add
cmp
mov
pop
lret
jmp
sahf
jmp
jae
sub
fisttpll
imul
push
mov
in
in
cmp
rorb
pop
inc
inc
shrb
popa
jae
xor
arpl
aam
daa
pop
dec
mov
pop
mov
sbbl
xor
inc
inc
les
dec
or
push
mov
adc
icebp
pop
cmpsl
jg
mov
sti
sub
imul
cld
bound
pop
cmpsb
cmp
fdivrs
cmp
mov
gs
popf
inc
mov
shll
testl
imul
ja
sti
imul
sub
call
dec
add
out
pusha
es
dec
dec
and
cmp
pop
addb
push
sahf
shll
adc
cmp
in
cltd
lods
psubd
xor
add
add
inc
fwait
xchg
cs
aaa
cmpsl
call
ret
sbb
lahf
mov
push
cmp
ret
push
jnp
test
out
xor
xor
sub
adc
clc
ficoml
ljmp
adc
mov
sbb
cld
adc
das
lret
push
mov
inc
test
xor
shr
push
inc
arpl
cld
dec
call
adc
and
aad
cmp
bnd
xor
gs
pop
push
mov
out
in
mov
movsl
in
ljmp
pop
stos
dec
out
sbb
icebp
lods
cld
pop
pop
loop
dec
jecxz
cmpsb
idivb
fnstenv
dec
push
pop
sub
mov
orb
add
sub
js
xchg
mov
mov
leave
mov
or
in
add
pop
aaa
add
xor
and
push
sub
cwtl
push
into
jle
testb
jmp
test
aas
call
fstpt
and
jp
data16
mov
mov
xor
xor
xchg
test
xchg
and
mov
push
and
cs
jmp
or
out
daa
inc
cmp
sti
xor
or
mov
sub
dec
cmp
fdivrl
mov
pop
dec
fcomp
add
mov
sub
xor
in
dec
fsts
sbb
lods
out
icebp
out
add
ja
add
into
rcll
or
push
enter
out
dec
repnz
stos
aas
shll
fwait
stos
mov
nop
xchg
mov
sub
outsb
mov
je
fwait
mov
dec
daa
jns
add
les
xchg
mov
leave
sub
xor
jg
enter
cmp
cs
fbld
andb
push
xor
mov
mov
cmpsb
adc
mov
fsubl
movsb
push
int3
and
pop
jmp
roll
inc
mov
in
xor
mov
lods
loop
fnstcw
ficompl
inc
mov
pop
inc
push
adcb
mov
cwtl
fidivs
dec
jg
or
xchg
int
xor
movsb
sbb
cmpsb
mov
jae
mov
or
and
sbbl
push
sub
pusha
cmpsb
lahf
mov
fsubrl
push
cltd
or
test
hlt
lods
sbb
dec
jp
in
mov
inc
mov
push
push
fmull
fcmovu
orb
mov
jmp
les
xor
pop
jo
inc
and
sahf
jbe,pn
dec
xor
loope
cltd
and
aad
cld
nop
arpl
jle
push
dec
insb
imul
dec
mov
out
push
mov
out
inc
jmp
inc
mov
aad
je
fldenv
xchg
xchg
out
add
bound
stos
imul
js
push
or
add
xchg
dec
ja
aaa
cmp
jp
or
mov
std
andl
in
shrl
fsts
mov
jl
mov
cmpsl
inc
push
sub
add
rorl
xchg
sbb
lods
mov
jg
pop
repz
pop
and
outsl
test
adc
push
push
or
shld
adc
je
lods
mul
dec
fwait
sub
mov
mov
stos
jle
sti
add
out
loopne
add
inc
pop
fiaddl
sbb
inc
cmp
lret
incl
xchg
jecxz
jbe
dec
cmp
jmp
in
push
das
shlb
xor
nopl
stos
mov
pusha
les
jecxz
into
add
mov
pop
mov
jb
push
shlb
nop
push
shlb
xor
inc
lock
inc
fwait
out
shrl
mov
pop
stc
ja
mov
push
les
fidivl
lock
ds
rcr
jle
cmpsb
xor
push
mov
pop
dec
call
mov
push
sti
mov
jle
dec
out
ret
and
mov
mov
push
lahf
scas
jmp
movmskps
sbb
test
icebp
rclb
cmc
fnstcw
ret
cli
pusha
bnd
in
in
add
dec
js
js
arpl
outsl
testl
jl
orl
test
cmp
inc
mov
jbe
or
lcall
cmp
sahf
jg
loopne
cmp
and
orl
int3
mov
std
sbb
and
adc
clc
ljmp
stos
xchg
cmc
inc
outsl
add
push
cmp
inc
push
lock
incl
sbb
out
pop
jl
punpckldq
push
mov
call
cmp
ret
pop
mov
popa
mov
cmp
shrb
sbb
jle
notl
add
xor
and
aam
les
addr16
xchg
pop
test
mov
movsb
aaa
push
movl
xchg
xor
and
aam
les
addr16
xchg
pop
test
mov
movsb
aaa
push
ret
inc
xlat
je
notb
add
xor
and
aam
les
addr16
xchg
push
test
mov
cmpsb
aaa
push
movl
push
xchg
mov
movsb
dec
sub
in
jecxz
or
dec
fcomps
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
cmpsl
push
mov
xchg
test
daa
sub
xor
imul
cmpsl
test
xchg
cltd
out
idiv
leave
xlat
fldenv
sub
cmp
sub
sbb
dec
push
pop
cmpsl
mov
mov
out
mul
rcl
ret
daa
lret
imul
sub
pop
xor
cmp
test
sti
adc
push
jl
int3
push
das
sbb
clc
mov
or
xor
mov
add
hlt
cmp
fildl
push
pop
cmp
push
fisubrl
call
sub
dec
ficoml
push
mov
std
insb
mov
mov
pop
mov
pushf
aaa
jns
jns
mov
pop
cmpsl
stc
mov
in
mov
cmp
xlat
es
jns
stc
jmp
aaa
xchg
ret
bound
pop
xchg
push
pop
addr16
jns
leave
testl
orb
add
cmpsb
pop
cmpsb
dec
pop
inc
mov
and
repz
push
jo
sub
aaa
cmp
or
mov
dec
imul
and
idiv
rcl
shlb
aaa
and
adc
add
ja
inc
dec
push
cmp
out
mov
cwtl
out
test
daa
inc
push
inc
pop
pop
outsl
jbe
add
sub
adc
rcl
mov
out
mov
mov
push
pop
add
sbb
push
sub
mov
call
test
stc
leave
xlat
fldenv
sub
cmp
or
sbb
ja
inc
dec
push
pop
cmpsl
test
xchg
cltd
out
idiv
leave
xlat
fldenv
sub
cmp
or
sbb
ja
inc
dec
push
pop
cmpsl
test
mov
pushf
sub
and
push
mov
cs
xchg
fs
sti
daa
insl
rolb
sub
sub
test
lcall
xchg
popf
sub
cmc
add
push
gs
leave
pop
rcrb
scas
enter
out
mov
push
xchg
cli
clc
or
ficompl
icebp
aas
mov
movsl
mov
push
mov
test
jnp
scas
and
notb
cmp
jmp
lods
jmp
and
sub
stos
cmc
xchg
js
stc
add
sbb
sbb
adc
dec
ja
pop
or
movsw
add
imul
inc
and
in
sub
cmovo
test
loopne
ja
mov
mov
or
out
pop
dec
out
std
mov
scas
xchg
out
aas
imul
lods
jbe
push
aaa
push
sbb
in
adc
in
cmovp
xchg
pop
icebp
out
fwait
cmp
loopne
scas
repz
rol
jp
lods
xor
dec
filds
dec
adc
mov
movsl
lods
push
cmp
outsb
cmc
ret
xor
mov
test
aaa
pusha
ja
push
outsb
icebp
dec
in
loopne
lods
jae
dec
mov
fs
test
mulb
movsb
dec
xor
out
push
mov
jae
lahf
shrb
lcall
xchg
ret
push
inc
shll
dec
fistpll
in
fisttpll
sbb
add
mov
push
cmpl
fldenv
sbb
sbb
mov
sbb
sub
rorb
cmp
xchg
cs
mov
jge
std
and
imul
sub
dec
push
cmp
jg
lods
aas
aas
push
dec
jno
adc
mov
pop
mov
mov
lds
jbe
inc
fwait
jb
sahf
jl
mov
add
sbb
imul
xchg
mov
je
test
sub
outsl
fnsave
add
lock
fiaddl
imul
jecxz
xorl
adc
pop
sahf
jmp
in
jge
jne
ret
nop
shl
push
fs
in
add
fs
or
clc
dec
jg
cli
or
je
in
sub
ret
xchg
pop
mov
inc
inc
push
mov
or
sti
rolb
sub
rcrl
inc
stos
shrb
cmp
jle
dec
jp
push
adc
aam
mov
xor
pop
push
ficoml
test
jae
adc
clc
sub
stos
lods
fcmovne
aad
out
adc
or
sbb
outsl
test
lcall
outsl
test
and
xchg
jge
nop
inc
inc
cld
jo
xchg
bound
cmp
loope
cs
lds
xor
mov
pop
arpl
push
pop
aaa
jmp
xchg
neg
test
scas
data16
rorb
pop
jp
movsb
and
sti
sub
xor
and
lret
push
aas
jp
jno
push
pushf
mov
mov
jmp
pop
js
lret
dec
fisubl
or
cltd
push
cmpsb
loopne
sbb
cs
inc
rcll
popf
xor
ficompl
cltd
xor
cmpsl
adc
jns
movsb
xor
aam
pushf
sbb
and
jbe
sbbl
arpl
fnsave
jb
andb
jo
fiaddl
jo
int3
dec
movsl
inc
lock
lock
insb
popf
daa
in
sub
pop
add
es
pop
mov
push
fs
sub
and
xchg
xchg
lock
es
add
ja
cmp
push
push
pushf
fisubs
pop
filds
cmpb
or
xor
mov
or
mov
jp
idivb
pop
cwtl
aas
pushf
sub
sub
sbb
loope
and
xchg
sub
sub
mov
push
sub
add
jp
push
lods
rorb
shll
push
adc
sbb
insl
xchg
push
mov
push
adc
lods
push
stc
cmp
push
in
and
add
lahf
test
dec
mov
mov
pop
jmp
push
sbb
add
lds
fcomi
in
xor
scas
pop
and
ret
fcompl
mov
mov
jns
inc
cmpsb
rcrb
pop
mov
and
push
int
outsl
jmp
push
ret
gs
xor
push
inc
mov
mov
mov
pop
ljmp
repz
gs
sub
fisubrl
mov
adc
xchg
in
popf
cmc
push
cmpsl
push
bound
push
pop
int3
mov
adc
shr
enter
aaa
mov
jecxz
int3
ljmp
aas
lods
push
btc
pushf
loopne
mov
sbbb
mov
lcall
pop
cmpsb
mov
inc
stc
inc
cmp
jmp
cli
xlat
or
cmp
add
pop
sti
aad
scas
push
inc
push
daa
add
lods
lea
adc
shll
fadds
and
adc
test
js
call
hlt
lret
in
mov
scas
jns
into
mov
mov
cmp
neg
jno
pop
lods
cmp
lods
in
imul
das
push
inc
fs
mov
sub
cmp
mov
daa
mov
pop
fbstp
sub
pop
dec
cltd
xchg
inc
sti
les
inc
jge
shr
orl
mov
inc
out
mov
fisttpll
stmxcsr
fnstenv
mov
icebp
or
ret
lea
or
push
aam
lret
roll
int
jne
mov
xchg
out
sub
aas
jmp
mov
test
das
add
aad
dec
or
sbb
jno
xor
popa
shrb
stos
into
dec
mov
and
jge
mov
sbb
cmp
mov
cmpb
pop
sbb
push
clc
add
cmpsl
inc
mov
mov
mov
add
bound
out
xchg
jle
into
stos
mov
popf
xor
dec
sbb
ss
rol
and
sbb
sub
or
sub
ja
and
mov
push
mov
push
adc
push
and
xchg
or
test
or
mov
pushf
int
in
sbb
push
leave
sbb
lock
pop
cld
je
fimull
sbb
fimuls
inc
mov
in
insb
push
xor
and
ljmp
aam
push
lods
cmc
call
cs
ja
leave
and
mov
clc
sbb
mov
mov
paddq
lods
jecxz
sub
mov
ds
cli
and
pop
pushf
mov
pop
mov
pusha
adc
or
and
mov
fdivs
sub
xchg
incl
add
movsl
dec
lods
sbb
in
pop
or
mov
jmp
cmpsb
xlat
lods
dec
outsb
mov
outsb
or
lea
stos
scas
and
adc
movsl
and
mov
xor
mov
inc
into
xchg
pop
fldt
das
lret
ds
mov
jno
xchg
xor
ja
dec
inc
sub
pop
rorb
xor
cltd
xor
addr16
sar
inc
ja
mov
xchg
mov
lods
xor
push
ret
arpl
shlb
adc
test
jg
xor
pop
pop
mov
cmp
or
adc
cmpsb
popf
or
movsb
inc
stc
jnp
jo
fwait
xor
cmp
cmp
dec
xchg
fildl
cmp
aad
fs
mov
out
pop
mov
cli
dec
cld
enter
das
dec
in
push
sbbl
aad
dec
stos
std
movsl
das
mov
pop
jns
aas
iret
pop
pop
ret
jnp
icebp
rorb
xchg
aad
mov
dec
pop
mov
in
pushf
mov
jmp
pop
dec
mov
inc
imul
adc
mov
or
mov
cmp
cli
mov
js
xcrypt-ecb
cmpsl
dec
mov
repz
fs
push
cmpsb
rol
mov
bound
call
clc
lret
fs
push
lret
ret
repz
push
rorb
jb
adc
pop
add
js
int
gs
dec
std
shll
fidivs
push
movsb
mov
pop
or
lret
arpl
and
push
mov
mov
movsl
fildll
adc
sub
lods
out
adc
cmp
jecxz
cmp
data16
in
mov
data16
cwtl
les
jmp
pop
pop
xchg
outsl
jae
mov
cmovb
cmp
cmp
mov
mov
lea
adc
fldl
mov
test
jb
push
xlat
into
icebp
xchg
sub
repnz
inc
aam
mov
and
sbb
popf
lds
push
adc
push
pop
test
std
inc
test
ja
cld
mov
mov
iret
pop
aam
and
data16
pop
mov
mov
sub
cs
loope
or
movsl
jb
cmp
cltd
out
pop
or
jb
mov
xor
mov
mov
sub
jae
jo
jmp
orl
jmp
and
aam
fcomps
fcoml
sub
mov
mov
popa
add
pop
dec
pop
test
xor
mov
loope
mov
mov
scas
xchg
and
jl
mulb
jno
js
movsl
out
lds
int
add
sub
xchg
shll
xchg
xor
in
cmp
subl
jmp
btr
fdivr
call
jecxz
out
and
jl
cmpsb
in
or
or
pushf
dec
movsl
pop
bound
and
daa
std
fcompl
dec
xchg
cli
test
sub
fnstcw
xchg
mov
pop
xor
dec
jecxz
pop
add
aaa
inc
jne
push
push
andl
dec
xchg
mov
xchg
inc
push
mov
aam
pop
loop
and
andb
clc
mov
bound
push
adc
push
ss
push
jb
addr16
xor
cli
add
mov
into
dec
outsb
loope
cmp
mov
and
stos
sbb
push
jge
scas
insb
popa
stc
mov
testb
cmc
and
fcmovbe
test
les
pop
pop
xchg
rol
xchg
fisubrs
push
push
das
hlt
mov
divb
not
imul
incl
adc
push
mov
sbb
xchg
mov
pushf
jnp
imulb
jno
mov
or
int
mov
sub
or
arpl
mov
call
jae
jne
subl
pop
test
pop
mov
xchg
popa
dec
fadds
test
mov
mov
dec
insl
test
and
fs
mov
dec
scas
and
jp
xor
xor
pop
ljmp
mov
iret
jmp
js
aaa
nop
pusha
fcoms
dec
out
push
add
dec
adc
loope
mov
adc
xor
in
jmp
test
cmc
fisttpl
popf
dec
adc
into
push
lods
fdiv
out
sub
xchg
and
sub
jo
pop
fnstenv
push
or
xchg
rcrb
iret
mov
das
roll
lret
jo
lods
das
xorl
dec
mov
syscall
mov
les
fistl
fisttpl
xchg
add
xchg
lods
jg
pop
pop
inc
jne
into
leave
dec
inc
adc
lret
pop
cltd
and
jns
dec
dec
scas
dec
aaa
dec
push
jl
xchg
inc
xchg
test
ret
test
jae
xlat
enter
inc
cmp
push
dec
sub
jnp
cs
ds
jae
sub
xor
cld
iret
clc
mov
mov
pop
std
mov
adc
pushf
jge
pop
test
in
outsb
inc
push
test
clc
popa
mov
fisubrl
jg
iret
xlat
lea
call
mov
lret
test
xchg
mov
fdiv
dec
imul
add
cmpsl
sub
push
les
popa
and
divb
or
push
add
data16
fcoml
xchg
fwait
aas
or
out
pop
mov
popf
fdiv
ret
jae
flds
rcrl
mov
fldenv
lcall
xchg
andl
xacquire
shll
bound
out
and
addr16
jl
dec
rorb
pop
push
adc
mov
adc
cwtl
sarb
dec
inc
sbb
daa
push
push
push
xchg
and
aas
and
lods
cltd
adc
bound
aas
and
loope
pushw
add
push
dec
push
push
or
pop
scas
mov
push
fs
rorb
adc
dec
or
arpl
dec
lret
adc
lea
push
xchg
repz
cld
cmp
int
shll
push
mov
sar
mov
xchg
into
hlt
out
xlat
test
xchg
push
fidivrs
jl
adc
push
pop
mov
mov
adc
mov
outsl
sub
int
push
xchg
or
andl
inc
mov
jnp
lret
call
in
mov
stc
mov
sahf
jno
add
sbb
das
mov
pop
scas
add
push
call
out
in
pop
lcall
shll
inc
dec
mov
cmp
gs
mov
add
lea
insb
cltd
fsubrl
mov
ss
int3
dec
add
mov
in
mov
inc
lods
cwtl
int3
sbb
orb
mov
insb
sbb
sbb
dec
int
add
faddl
stos
mov
pushf
mov
arpl
push
mov
sbbl
pushf
in
adc
cld
and
fiaddl
sahf
data16
shlb
add
jl
adc
pop
loopne
jle
xor
mov
es
sub
mov
js
mov
test
xchg
int3
fnstsw
cmpl
int
xchg
test
cmp
jns
dec
scas
cmpsb
movsl
repz
mov
pop
mov
xchg
xchg
lods
das
loop
popa
mov
ss
fimull
mov
or
shlb
aaa
inc
mov
mov
leave
fstl
jmp
push
icebp
les
orl
mov
push
sbb
je
repz
cwtl
cmp
jle
and
aad
lcall
clc
push
cmp
sub
std
loop
pop
cltd
adc
test
cmpsl
push
lret
xchg
dec
inc
jnp
xor
cmpl
outsb
cmp
das
movsl
outsl
and
mov
jo,pt
in
cld
pop
loopne
subb
add
push
mov
adc
jne
push
stos
shl
aad
test
in
sahf
add
out
sahf
adc
and
adc
dec
outsl
sahf
and
dec
jle
mov
aaa
push
xchg
in
add
dec
popa
test
push
mov
fimull
jbe
inc
dec
testl
inc
push
inc
arpl
data16
push
xchg
pop
dec
sub
mov
jecxz
adc
filds
into
out
jae
aaa
sbb
dec
repnz
pop
jge
jo
mov
loope
les
pop
jmp
test
jo
sarl
xchg
test
pushf
cmp
mov
mov
jnp
dec
or
add
mov
ljmp
pop
scas
mov
insb
inc
adc
fmul
jno
dec
mov
jae
mov
imul
test
insb
cwtl
call
sbb
mov
nop
push
roll
cli
mov
add
sbb
out
cmp
test
stc
fwait
xlat
aam
lock
adc
push
add
stc
lds
push
jg
out
cwtl
pop
scas
jne
jne
rorl
sub
ficoml
cwtl
icebp
mov
ret
push
or
xchg
xor
int3
fstpl
adc
mov
pushf
mov
mov
push
scas
hlt
xor
jae
pusha
sub
arpl
fnstcw
movsb
shlb
pop
or
mov
arpl
mov
push
shrb
push
cmp
lret
imul
shll
clc
pushl
stos
ss
cltd
mull
ljmp
das
jg
lea
lahf
mov
out
adc
sub
lret
rcll
shll
pushf
xchg
mov
sbb
pop
test
mov
je
push
and
add
arpl
cld
ljmp
sub
inc
rcrb
ja
cwtl
jg
int
lret
arpl
mov
clc
mov
push
xchg
aas
jl
xor
xor
in
pop
mov
dec
push
cmp
add
shlb
imul
callw
cmp
dec
mov
add
test
and
jle
out
pop
insb
je
mov
cmp
mov
je
gs
shr
sti
xchg
fstpl
jno
lahf
gs
fistl
lds
push
scas
out
in
inc
ror
pusha
inc
xchg
out
mov
shrw
or
push
xor
cmpsl
dec
jge
xchg
add
sahf
xchg
mov
push
cmp
aad
xchg
pop
or
cmc
sbb
nop
mov
cmpsl
cmp
mov
jecxz
mov
out
xor
ja
mov
xchg
bound
push
iret
dec
sbb
xchg
lock
sbb
cmp
test
sub
data16
cmpsl
pop
les
jbe
lret
popa
repz
and
adc
xchg
jg
out
aad
add
mov
insl
lea
dec
outsb
inc
mov
fs
rorb
mov
fiadds
loopne
jnp
xor
sbb
pop
pop
mov
pop
mov
cmp
mov
push
lea
bnd
jge
mov
cltd
push
pushf
sbb
push
in
movq
cmpsl
adc
or
js
adc
test
xchg
jbe
ds
aas
bound
iret
xchg
in
rol
inc
out
mov
mov
push
pop
ret
dec
imul
cltd
jo
enter
mov
and
fisubrs
adc
pop
jno
int3
sbb
pushf
mov
xchg
dec
jnp
jmp
mov
sub
or
cmp
fs
rcrl
or
inc
jbe
out
jae
mov
dec
pop
repnz
ficompl
mov
les
repz
rorb
es
jmp
mov
fwait
andl
pop
enter
ja
push
adc
dec
imul
pushf
push
or
pop
add
sti
lds
jecxz
sbb
data16
dec
jns
div
adc
icebp
mov
push
ja
xchg
cmp
mov
mov
aam
push
sub
mov
fwait
xchg
aas
xchg
add
mov
mov
hlt
rcl
into
andb
js
push
clc
das
sub
call
neg
dec
inc
je
ficoml
dec
mov
add
cmp
adc
sub
lods
scas
ja
xlat
xor
fs
mov
sti
mov
pop
ja
lea
fistl
xchg
mov
jg
lea
aaa
or
jne
popa
mov
loope
daa
icebp
push
cmp
jns
fbstp
add
sub
call
mov
pop
std
dec
call
jl
mov
jne
jb
mov
inc
jp
xor
imul
bound
stos
xchg
mov
shr
push
jno
scas
out
js
mov
lock
cmp
cmp
mov
mov
daa
das
dec
pop
mov
js
push
jno
fcompl
insb
std
fs
pop
adc
and
fisttpll
ds
jl
add
in
and
sarl
sbb
lahf
ficompl
je
insb
adc
int3
or
ja
addl
add
mov
sub
xchg
xor
dec
push
dec
scas
int3
sub
push
loop
imul
and
adc
test
mov
and
push
and
jno
cmp
imul
sbb
cmp
and
pop
adc
dec
adc
jb
or
mov
push
popa
add
clc
pusha
stc
pop
out
pushl
adc
push
push
jge
cmp
imul
js
dec
pop
sbb
stc
inc
lcall
mov
jne
pop
xchg
inc
imul
and
jae
mov
push
nop
mov
cld
sub
push
call
lds
mov
sub
push
sbb
int
clc
dec
cmp
sarl
cmp
jmp
pop
mov
test
test
lock
mov
mov
jg
or
dec
jge
cmp
push
addr16
and
cmp
mov
push
hlt
clts
adc
aaa
and
dec
movsl
and
cld
push
mov
stos
mov
popf
inc
sub
ds
lcall
ljmp
popf
cmp
xor
cmpsl
mov
insl
outsl
xchg
mov
xlat
cwtl
mov
out
idiv
leave
xlat
fldenv
sub
cmp
or
sbb
ja
inc
dec
push
pop
cmpsl
test
xchg
cltd
out
idiv
leave
xlat
fldenv
sub
cmp
or
sbb
ja
inc
dec
push
pop
cmpsl
test
xchg
cltd
addr16
push
fldenv
sub
cmp
or
sbb
ja
inc
dec
push
pop
cmpsl
test
xchg
cltd
out
idiv
leave
xlat
fldenv
sub
xchg
lods
or
outsb
pop
loope
xchg
mov
cmpsb
popf
xchg
js
lock
mov
les
inc
or
pusha
and
arpl
arpl
xchg
rolb
roll
xchg
adc
pop
xor
adc
fs
xor
arpl
xchg
inc
xorl
mov
pushf
repz
jecxz
adc
push
push
add
adc
push
adc
fnstsw
repz
xchg
sbb
sub
lock
jg
jmp
lret
fiaddl
jne
adc
enter
rol
dec
fwait
jnp
imul
int3
mov
xchg
inc
xchg
sbb
adc
lock
pusha
sbb
cwtl
and
adc
fsubr
lods
lea
jg
xchg
push
mov
cmc
xchg
sarb
mov
mov
cld
pusha
cmc
lahf
cmpsb
popf
inc
add
push
push
cmp
scas
outsl
pop
add
mov
adc
int3
arpl
jecxz
add
sbb
push
lret
prefetch
sbb
jns
push
adc
fcoml
jae
pushf
jecxz
rolb
rol
ret
mov
sbb
mov
xor
jo
push
inc
xor
and
mov
mov
xchg
cmc
mov
xchg
rcll
pusha
add
daa
outsb
add
add
sar
dec
out
mov
sub
stc
nop
loope
fsubl
jno
push
or
arpl
gs
push
popa
aaa
mov
mov
ret
mov
mov
add
pusha
and
push
add
jae
arpl
xchg
rolb
roll
jecxz
adc
jo
pusha
and
push
add
jae
arpl
xchg
add
pop
fdivrl
inc
shlb
sbb
test
xchg
sub
xchg
test
arpl
orl
pushf
outsl
mov
outsl
push
add
dec
scas
sahf
fimuls
dec
popa
add
mov
cli
icebp
pop
mov
xchg
repz
das
jle
das
sbb
add
scas
ret
ja
popf
add
dec
cmc
shr
ss
in
aad
popa
roll
push
push
cmpsb
inc
repnz
popf
or
add
or
into
pop
mov
ljmp
pop
jge
mul
popa
sarl
sbb
inc
sti
cmc
stos
mov
mov
push
or
icebp
pop
sbb
cmp
dec
mov
push
xchg
add
popa
xor
xchg
dec
mov
into
adc
lods
cmc
pop
inc
subl
jb
mov
cmp
and
dec
sahf
or
aad
out
mov
adc
push
hlt
out
fprem
test
outsb
nop
data16
in
cmp
jbe
and
cmp
cmp
jp
mov
mov
int
les
xchg
pusha
cmpsb
fldl
xchg
insb
ds
les
and
repz
or
jp
xchg
or
mov
lds
lock
ljmp
out
mov
mov
xchg
cmp
stos
pop
jmp
push
cvtps2pd
leave
cltd
pop
xchg
fisttpl
push
jmp
mov
push
aam
lock
sbb
mov
inc
mov
lret
mov
dec
push
xchg
call
in
cmp
inc
or
pop
sub
test
adc
inc
sub
mov
pushf
je
inc
lea
call
or
into
iret
shlb
mov
movsb
or
xor
push
bnd
notl
and
push
inc
jno
inc
les
fbstp
inc
mov
sbb
push
push
fimuls
test
add
popf
subb
jge
mov
movsl
xchg
or
lods
or
dec
push
aam
cvtps2pi
mov
adc
dec
imul
jne
addr16
nop
loope
push
popa
in
test
jge
shlb
repz
and
sbb
xlat
cmpsb
and
cwtl
je
lahf
call
add
cmp
ds
orw
bound
out
sbbl
fldenv
xor
cmp
mov
xchg
jp
dec
lods
roll
adc
out
or
loop
xlat
cmpsb
jl
add
icebp
xchg
mov
fdivrs
outsb
add
and
adc
jp
jne
cli
push
push
and
sbb
mov
cmova
cmpsl
je
pop
jne
aaa
in
aad
jmp
mov
xchg
add
ret
inc
xchg
xchg
imul
add
pop
daa
ljmp
lret
nop
pop
adc
lods
ds
mov
loop
push
and
hlt
insl
adc
les
fdivl
xchg
push
sub
stos
push
test
movsb
cmpsl
lret
adc
lret
cmc
rorb
std
xchg
sbb
sahf
fmulp
orb
sbb
push
rorl
in
lods
out
pop
cmpsb
scas
into
aaa
add
test
inc
lea
add
xchg
mov
mov
repnz
jae
inc
and
dec
aas
adc
loope
je,pt
jp
pop
es
mov
xchg
fldcw
sarb
and
ljmp
icebp
test
sbb
jmp
jp
inc
cwtl
pop
movsl
xor
insl
push
jle
adc
addl
in
frstor
cltd
push
push
cld
jae
jge
dec
iret
jmp
fwait
xor
cmc
push
cmpsb
xor
cmp
push
cltd
pop
int
sbb
sub
int3
xchg
add
call
adc
sbb
xchg
ror
jne
scas
and
xchg
pop
js
mov
fldz
mov
repnz
and
push
aas
pop
push
push
mov
mov
cmpsl
inc
loop
jge
cmp
and
mov
xor
lods
out
mov
out
sub
mov
imul
dec
pushf
inc
das
sub
jl
jns
adc
pop
fldenv
jl
mov
and
xchg
adc
pop
sbb
xor
dec
shl
int3
aaa
mov
inc
sub
dec
xchg
fisttpl
les
push
shll
sub
sub
orl
jl
testl
int3
js
jge
repnz
loopne
cltd
enter
pop
movsb
cli
outsl
jl
imul
dec
add
dec
sub
mov
out
les
ja
iret
aam
scas
ficoms
xchg
mulb
into
adc
jmp
loop
cli
sub
jns
inc
repz
lods
dec
pop
in
sub
test
dec
scas
xchg
lahf
nop
push
pop
lahf
cmpsb
test
pop
test
xchg
mov
dec
or
pop
adc
jg
pop
cwtl
shlb
pop
cmc
movsb
rol
xchg
out
ss
repz
pop
bnd
mov
adc
das
pusha
testl
xchg
adcb
icebp
adc
sbb
shrl
mov
pop
mov
outsl
fnstsw
cmc
scas
mov
sub
add
xor
movsb
andb
pop
lock
jl,pn
daa
xchg
or
inc
sbb
pop
jg
cmpsb
mull
jne
xchg
and
js
aad
xor
movsl
jge
inc
mov
iret
jnp
mov
jne
fisubs
stc
push
in
popf
lock
cmp
dec
ret
add
push
dec
adc
scas
dec
mov
mov
iret
pop
push
add
lret
push
iret
dec
andl
mov
in
inc
test
sbb
mov
and
das
add
test
movsb
cmpsl
decl
and
sub
jle
stc
push
add
loop
repz
aam
mov
and
addr16
add
je
rcl
testl
or
rcl
fdivl
sbb
stc
lock
dec
arpl
popa
subl
jmp
or
outsl
in
and
push
incl
ss
scas
adc
xor
mov
adc
jecxz
push
or
mov
lods
loope
adc
test
pop
jmp
psubw
gs
pop
les
imul
scas
cld
into
out
out
movsl
or
xor
or
in
xor
xchg
sub
aad
jbe
sbb
mov
inc
pop
test
mov
pop
popf
popf
fisttpll
stc
or
loope
or
xorb
cs
pushf
ds
std
fsubrl
cs
test
decb
repnz
jnp
cmp
and
aad
sub
and
dec
or
mov
mov
in
test
ss
ljmp
push
test
aad
cmc
add
ja
lret
imul
mov
lods
aas
ret
fsubs
pop
fldl
aas
mov
cmpsb
ret
sbb
ret
mov
les
daa
es
add
ret
jecxz
in
mov
repnz
inc
xchg
dec
cmp
sbb
mov
xchg
mov
fxam
and
test
scas
cltd
cs
or
rcr
dec
and
ds
dec
sbb
ja
xchg
xor
push
int3
fwait
in
in
int
je
popf
inc
ljmp
jae
ljmp
cmp
inc
subl
inc
jle,pt
xchg
cld
xchg
sarl
push
jl
or
shrb
stos
dec
decl
lock
mov
cltd
xchg
div
dec
jmp
fsubl
sbb
outsl
ljmp
push
mov
jbe
jle
xor
mov
icebp
imul
and
cltd
ret
pop
lods
mov
inc
cmpsb
fwait
sbb
lods
mov
mov
cs
rcll
mov
jns
shrb
and
scas
std
sbb
mov
sbb
clc
sbb
sub
or
movsl
cli
out
lcall
mov
rol
in
pop
push
push
xchg
dec
xchg
push
hlt
and
sahf
lret
jle
push
cmp
cwtl
imul
xor
xchg
mov
sti
mov
in
inc
adc
fldcw
push
mov
xchg
clc
push
jmp
leave
jo
cltd
imul
cmp
sti
adc
add
xchg
sbb
push
pop
pop
dec
dec
popa
jle
add
pop
subb
out
pop
and
mov
fadd
rep
sarb
mov
fsub
stos
adc
add
fcmove
pop
sti
mov
dec
iret
lock
push
in
fs
xchg
dec
adc
xor
push
es
push
jno
sbb
aam
pop
loope
call
or
popf
mov
add
insb
pop
adc
mov
mov
addr16
fwait
or
fchs
xchg
mov
xor
jno
fincstp
subl
ja
out
pop
dec
enter
rcrl
or
xlat
sti
nop
loopne
pop
dec
fsubs
dec
nop
xor
xor
add
fstps
xchg
fwait
lock
les
or
cltd
add
inc
das
popa
xor
mov
call
dec
ja
jle
cmp
addr16
adc
add
stc
cltd
std
adc
adc
insl
jp
test
filds
add
xchg
addr16
mov
xor
insl
rolb
icebp
lods
lea
dec
xchg
inc
cld
adc
mov
mov
icebp
add
inc
dec
icebp
sbb
scas
sbb
adc
push
or
test
in
mov
jo
xor
inc
in
pop
sbb
jbe
rcl
in
and
mov
mov
xrelease
adc
push
jl
sbb
add
push
ficomps
fidivrl
sbb
xchg
shlb
inc
pop
xchg
push
or
push
movsl
je
xchg
xchg
daa
stos
and
pop
int3
imul
adc
std
pop
xor
roll
dec
sbb
xchg
pop
mov
cmp
sbb
push
dec
push
xchg
mov
inc
jecxz
dec
mov
adc
pop
or
insl
call
jmp
stos
mov
push
mov
mov
test
jecxz
lods
jmp
in
mov
sbb
iret
das
cld
aaa
sub
sti
stc
add
xchg
and
sbb
in
mov
iret
cld
add
rcrb
movsl
out
jnp
int3
mov
insl
mov
scas
out
fwait
and
cld
int3
adc
push
push
or
xchg
mov
je
ljmp
mov
inc
mov
mov
loopne
les
dec
mov
cwtl
outsb
sub
test
inc
inc
js
sbb
scas
leave
fisttpll
lods
iret
sub
or
push
xchg
mov
push
insb
jg
add
sbbl
pop
mov
loopne
lds
rclb
jecxz
mov
aas
mov
jne
cli
clc
and
shr
hlt
ds
pop
in
xor
inc
popl
je
push
xchg
cltd
xchg
inc
cld
call
fnstenv
stc
ret
imul
inc
or
rcr
or
movups
das
push
xchg
imul
jle
jo
pop
jns
out
jnp
stc
into
add
sbbb
ds
lret
adc
sub
dec
inc
mov
sbb
xchg
arpl
sbb
push
ljmp
pop
sbb
inc
mov
mov
addr16
mov
cmp
push
jns
pusha
ret
shlb
pop
add
iret
pop
int3
inc
push
das
cmc
dec
xchg
sub
test
fndisi(8087
movsl
imul
xchg
faddp
xor
dec
pop
sbb
push
jl
dec
loope
xchg
les
clc
fwait
leave
in
cs
test
lds
sbb
fxch
repnz
xor
negl
sub
mul
aam
pop
sbb
fcmove
adc
jns
movsb
push
add
aaa
popf
sbbb
push
xor
dec
push
push
sub
out
inc
lahf
dec
inc
jnp
not
inc
cmpsb
cmpsb
ret
sbb
jo
test
sub
and
ret
push
mov
dec
dec
pop
add
mov
das
ja
adc
ret
and
jle
add
test
imul
test
fidivrl
call
dec
aaa
push
stos
popf
xchg
pop
out
mov
mov
cmc
mov
stos
push
jmp
cmpsb
hlt
cmp
push
jo
test
jle
adcb
mov
pop
pop
mov
pop
add
addb
inc
out
adc
repnz
arpl
xlat
mov
sbb
cmp
pop
clc
jl
icebp
aas
in
jne
push
dec
sahf
popf
leave
imul
popa
call
jle
lret
lea
shrb
or
shrb
or
insl
cs
mov
lcall
sahf
push
and
jnp
arpl
dec
les
imul
nop
pop
push
icebp
and
fsubrp
lret
mov
or
lahf
inc
cld
and
aas
imul
jbe
jle
out
mov
sbb
sbb
out
inc
inc
pop
or
add
pop
test
cli
jno
fidivs
sub
xlat
dec
loope
xor
flds
add
pop
les
mov
addl
ret
cmc
pushf
xor
adc
nop
push
sbb
jns
mov
lock
repz
jecxz
sbb
adc
or
sarb
dec
cmc
xchg
daa
jmp
popa
dec
jbe
pop
cs
aam
pop
mov
pop
xor
mov
jecxz
inc
sbb
out
mov
pop
fs
push
ds
repz
dec
push
xor
int3
pop
cwtl
or
lret
clc
mov
loope
push
fldenv
dec
cmc
mov
xor
sahf
mov
xchg
icebp
adc
dec
in
xchg
pop
mov
cld
dec
scas
fstps
adc
add
popf
push
cld
sbb
bound
lea
sbb
or
xchg
sub
stos
add
rcll
pop
popa
pop
imul
mov
dec
les
sbbb
cmp
outsl
decl
cli
cmp
cmc
mov
in
repz
repz
test
loopne
rcrb
mov
int
shl
lods
aas
adc
or
lret
dec
ljmp
fwait
pop
adcb
dec
push
scas
sbbl
fs
or
cmpsb
push
hlt
lahf
insl
into
pop
stos
jmp
jmp
rorb
movsl
xor
cmp
subl
push
lret
cmp
push
icebp
sub
pop
xchg
cmc
bound
or
loope
mov
push
shll
sahf
push
pop
xchg
jnp
addl
outsb
mov
enter
cmp
xchg
or
testb
xor
pusha
push
add
mov
int
cmp
mov
testb
push
cmp
insl
and
sub
enter
jbe
fs
int3
jle
inc
int3
imul
xor
movsb
cltd
xchg
lods
xchg
dec
jnp
mov
enter
stos
jle
outsl
sub
mov
ja
xorb
int3
movsl
push
repz
pop
mov
add
cltd
lcall
rcr
mov
in
ficoml
ret
lock
adc
push
adc
lock
test
roll
or
push
dec
insb
add
mov
inc
adc
and
adc
popl
jl
arpl
inc
pusha
fstpt
xor
mov
test
adc
sbb
jnp
jnp
push
cmpsb
lods
loope
mov
jbe
jecxz
dec
cmp
frstor
aas
add
in
sbb
xchg
mov
fmul
mov
mov
cwtl
adc
fldcw
inc
popa
or
jmp
aas
pusha
lahf
xchg
or
shlb
out
add
adc
stos
scas
sub
push
adc
pushf
mov
int3
cmpsl
ljmp
fsubrs
jp
lcall
inc
addr16
mov
and
js
lret
pop
aad
rorb
imul
lods
sub
ret
push
aam
fdecstp
in
add
sub
sub
fisubrl
dec
jecxz
dec
xchg
movsl
lcall
pop
lods
sub
out
mov
lods
aam
sbb
gs
cwtl
or
push
das
push
into
push
push
mov
iret
mov
ficomps
push
cmpsb
rcr
call
sub
pop
jae
xchg
repz
test
sub
mov
ror
stos
mov
mov
inc
cmp
push
data16
and
sub
cmp
lods
divl
inc
cmp
fidivrl
loopne
dec
das
xchg
jns
fs
mov
mov
clc
adcb
mov
cmp
in
push
adc
pop
push
mov
loopne
stos
hlt
scas
lcall
jle
repnz
jno
pusha
dec
cs
bound
pop
pop
adc
stos
test
shrl
mov
mov
ret
dec
aas
add
sub
in
movsl
add
aam
cltd
cmc
push
dec
xchg
inc
dec
jg
aaa
out
mov
pop
cld
sbb
inc
xlat
jo
mov
mov
jno
js
cmpsl
inc
std
push
mov
negl
cmp
pop
push
mov
push
xor
dec
pop
mov
xor
mov
mov
movsl
push
add
pop
iret
jl
test
xor
pop
ljmp
popf
bnd
mov
sahf
add
inc
or
add
aas
and
mov
in
mov
sbb
nop
inc
js
je
addr16
syscall
and
or
inc
sub
adc
sub
scas
jbe
push
add
cmpsb
pop
xchg
pop
dec
mov
out
fmulp
sub
out
dec
mov
fnstcw
mov
pop
cmpsb
arpl
cltd
inc
addb
or
jo
fdivl
sub
fdivl
icebp
scas
push
mov
sahf
mov
js
dec
jne
xchg
push
and
mov
fdivr
mov
bound
jbe
mov
or
arpl
orb
aaa
cwtl
daa
aam
fldcw
mov
inc
xor
mov
inc
pop
push
fwait
les
hlt
jmp
lahf
test
lods
aas
dec
aaa
mov
mov
xor
outsb
adc
or
xor
push
int
mov
push
cmp
mov
cmovle
shlb
lock
repnz
aaa
cmp
sbb
mov
xlat
aam
mov
lds
pop
hlt
les
mov
xorb
sbb
popa
enter
inc
pop
mov
and
mov
and
fs
jo
dec
pusha
push
aad
sub
and
push
dec
mov
mov
xor
cmp
and
les
adcl
scas
pushf
add
xchg
outsl
xchg
xor
sub
in
push
or
mov
xchg
cld
jb
lahf
sub
lret
and
movsl
shr
dec
mov
dec
rolb
sahf
xor
sahf
jb
outsl
pop
stos
outsl
cli
xchg
dec
scas
leave
bound
mov
clc
pop
sahf
inc
adc
nop
mov
leave
jp
repz
cmp
jnp
push
dec
lods
js,pt
outsb
int3
arpl
lock
insl
ficoms
inc
daa
andb
fwait
rorb
cwtl
fwait
ret
inc
jns
cmp
mov
sbb
add
loope
mov
ja
ljmp
push
adc
cmp
adc
cwtl
fisttpl
jns
test
mov
inc
sti
lods
mov
add
xor
mov
pop
lods
ljmp
xor
sub
sti
dec
jp
es
mov
imul
mov
mov
sub
sti
jne
mov
ret
mov
dec
jmp
test
cli
dec
or
pop
aad
shll
jmp
and
test
cmp
test
push
adcb
faddl
popf
mov
jp
bound
dec
int
sbb
jns
pop
adc
mov
dec
cltd
push
sbb
add
js
in
mulb
outsw
xchg
lret
pushf
and
rol
jb
cmp
std
push
sbb
rol
je
clc
or
inc
mov
pop
out
cwtl
testl
scas
dec
sub
mov
adc
xor
jp
xchg
xor
jno
cs
sbb
sub
jl
and
lds
push
fsubrl
imul
loope
mov
add
cmp
inc
xlat
push
int
pushf
jo
jg
xorl
cltd
in
sahf
imul
aad
arpl
jo
push
xchg
push
sbbl
fisubs
je
cltd
mov
add
ljmp
ret
adc
inc
inc
ret
adc
jl
test
xchg
lret
sbb
mov
testl
mov
add
sub
xor
std
js
and
clc
and
jge
pushf
negb
daa
mov
fnstenv
cmpsl
jnp
fs
in
add
lar
push
loope
xor
nop
jle
sbb
jg
insb
pop
bound
cld
mov
mov
mov
add
pusha
and
push
add
jae
arpl
xchg
rolb
roll
jecxz
adc
jo
pusha
and
push
add
jae
arpl
xchg
ret
and
loopne
xchg
roll
push
adc
jns
and
push
sbb
jae
arpl
xchg
in
cmpl
mov
mov
and
push
adc
push
fisttpl
mov
pushf
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
shlb
lods
fwait
push
inc
mov
mov
add
pop
add
or
add
push
add
xchg
mov
add
add
mov
dec
add
add
xchg
pop
add
add
and
add
sbb
sahf
add
add
add
pop
add
add
pop
add
add
add
add
add
add
add
lcall
add
mov
push
add
add
inc
add
xchg
add
add
add
add
add
add
add
add
mov
mov
sahf
add
xchg
add
add
jl
pop
add
add
xchg
add
add
add
sub
add
add
add
add
push
ret
add
add
jg
mov
mov
daa
add
add
add
add
add
add
add
add
roll
add
roll
add
add
add
add
add
add
add
add
add
sahf
add
add
add
push
add
add
add
add
add
add
add
push
add
jne
cltd
add
pop
add
push
add
add
add
add
add
xchg
add
add
add
add
add
add
sbb
add
add
add
imul
add
add
pop
add
add
inc
add
add
add
add
add
add
add
cmp
xchg
mov
rolb
add
add
add
add
add
add
or
add
add
fildl
inc
add
add
add
or
add
fwait
add
dec
add
stos
add
add
add
lea
scas
add
add
add
xchg
add
add
add
add
sbb
xor
imul
or
add
sbb
scas
add
add
add
add
dec
add
add
mov
aad
sub
add
add
ltr
add
add
add
add
add
add
add
add
add
add
jl
outsl
add
jmp
add
add
add
add
add
inc
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
roll
add
add
add
je
in
fadds
ret
add
add
add
add
add
add
add
add
add
fwait
add
sub
pushf
add
dec
add
add
add
add
add
add
stc
add
push
add
add
add
add
pop
add
lret
add
add
pop
add
add
add
add
xor
loop
mov
xchg
xor
fisttps
xor
dec
jo
jae
add
loope
jl
push
outsl
pop
ljmp
xchg
xchg
into
jle
js
sahf
xchg
push
add
mov
aas
out
sti
xchg
es
test
sub
mov
push
dec
dec
cmp
addr16
xchg
ss
adc
fbld
test
push
ret
shll
pop
xchg
lcall
sbb
adc
adcb
fcoml
xor
or
scas
test
arpl
dec
scas
pop
cmpsl
lock
call
xor
mov
scas
pop
out
cmp
and
int3
sbbl
mov
jnp
mov
jp
popa
pushf
shll
sbb
inc
cmc
stc
lods
jne
icebp
inc
adc
fdivrs
pop
jbe
pop
mov
movsl
inc
jb
ds
cli
pop
inc
sub
adc
xchg
dec
mov
xchg
inc
add
js
ss
pop
dec
jnp
and
test
sarb
mov
sbb
lds
or
daa
jg
shll
testl
inc
pop
ja
lret
jl
lret
mov
xor
dec
fwait
mov
daa
lret
mov
lock
or
scas
jo
push
dec
test
out
mov
jmp
in
pusha
aas
adc
ret
lock
rcrl
sub
adc
and
clc
pop
mov
xor
pop
div
aam
jns
adc
inc
out
inc
scas
dec
adc
jae
test
push
cmpsb
scas
xor
rorl
ret
jne
lock
xchg
mov
sahf
nop
xchg
les
and
in
cmp
pop
jmp
pop
bound
int3
cmp
dec
cmpsb
notl
lods
xchg
cmpsb
iret
rcrl
or
pop
mov
cmp
sbb
and
add
mov
dec
push
lods
mov
sahf
fildl
clc
rclb
lcall
lcall
out
scas
xchg
or
int3
pop
jmp
mov
jb
fwait
jo
inc
pushl
and
adc
sub
cmpsl
lds
and
sub
push
scas
sub
add
std
es
daa
scas
das
out
shlb
mov
dec
lret
adc
inc
adc
xlat
in
mov
cmp
xor
xor
mov
daa
mov
xchg
xchg
jnp
das
dec
popa
data16
incb
mov
add
push
jae
outsb
cld
je
mov
adc
adc
xor
lcall
pop
add
xor
inc
lret
mov
sub
cmp
cmp
int
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
