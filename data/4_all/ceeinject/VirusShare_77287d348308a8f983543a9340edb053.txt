call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
sub
bound
inc
insl
das
pop
shl
ret
loop
xchg
in
cmp
int
fstl
inc
cmp
adc
jge
dec
and
repnz
in
popf
xchg
xorl
cmp
or
jge
dec
and
lods
loope
lods
lcall
stos
out
mov
sub
sbb
repz
in
push
dec
cmp
jnp
mov
in
push
xchg
adc
mov
cwtl
cmp
clc
mov
mov
push
fldpi
inc
push
cwtl
sbb
ret
xor
int
mov
addr16
shll
std
mov
sti
cmp
int
clc
jle
mov
mov
sbb
into
add
and
or
add
mov
insl
lcall
nop
in
in
hlt
jg
sarb
push
add
repz
cltd
push
cmp
int
and
sbb
add
sub
jne
mov
in
shrl
fwait
sub
bound
xor
pop
lret
lods
fidivrl
mov
lcall
sub
jl
or
fs
or
or
aam
mov
xchg
scas
out
shlb
sbb
add
xor
and
cmp
fisubs
cld
les
jne,pn
jg
js
inc
add
dec
and
lods
ret
loop
xchg
in
cmp
int
fstl
inc
cmp
adc
jge
dec
and
lods
ret
loop
xchg
in
cmp
int
fstl
insl
push
int
adc
jle
pusha
xchg
xor
out
repz
andb
int
clc
imul
int3
mov
xor
test
setae
ret
xchg
movsb
mov
shlb
or
xor
xor
in
dec
ret
mov
mov
std
or
fwait
aas
jg
insl
cli
subl
rclb
push
xor
inc
shrl
mov
mov
mov
mov
sbb
outsb
sbb
insb
daa
add
mov
push
je
mov
sarb
test
repnz
sub
cmpsl
sub
inc
fbstp
lcall
xor
pushf
stc
sti
pushf
add
jnp,pn
imul
icebp
push
daa
cld
cmp
ss
or
jecxz
inc
out
and
aaa
add
mov
idivb
adc
out
fdecstp
jecxz
rorb
mov
out
in
rcrl
cmpsl
imul
or
sahf
jmp
xlat
cmp
and
repnz
xor
jp
lahf
inc
inc
xor
xchg
mov
in
jle
mov
cmp
sti
and
fnstsw
mov
mov
and
ja
mov
adc
xor
movsl
leave
lahf
mov
inc
dec
clc
std
mov
insb
mov
push
add
ds
push
or
mull
mov
jns
push
ficoms
add
fsts
lret
insb
xchg
sub
sarb
jle
sub
pop
lods
mov
or
adc
ss
into
loope
or
dec
push
ja
jl
sub
out
jbe
int3
loope
lods
jb
push
sub
vpmaxsw
jno
loopne
rcll
test
dec
icebp
xchg
dec
dec
sbb
dec
shll
adc
in
cmp
cld
ret
mov
xchg
pop
int
xchg
addr16
mov
sub
xchg
dec
push
lds
fwait
cmp
pop
das
fwait
rcrl
adc
dec
loopne,pn
out
and
out
bound
jne
xor
pushw
mov
cmp
push
sub
push
inc
sti
fistl
test
mov
mov
mov
xchg
pand
pushf
cwtl
add
popa
pop
lea
fcmovb
punpckhbw
pop
pop
add
test
dec
fmulp
sub
lret
add
mov
pusha
mov
mov
jmp
popf
pop
mov
outsl
out
in
outsl
loope
inc
mov
nop
jnp
in
xor
imul
xchg
inc
negb
mov
shlb
sub
clc
lcall
lock
push
out
fs
arpl
out
cmpsb
mov
test
test
sbb
mov
leave
test
mov
sub
rorb
and
add
pop
inc
int3
or
adc
dec
lret
ds
jnp
call
call
jne
popf
loopne
mov
stc
mov
inc
or
inc
mov
hlt
jmp
in
pop
sti
aas
andl
dec
jnp
mov
xor
jge
pop
adc
aam
xor
dec
lret
jbe
mov
testb
mov
push
ds
sub
jb
push
or
mov
stc
xchg
ret
mov
mov
pop
sti
and
inc
xchg
popa
mov
adc
call
sub
jp
mov
xchg
and
jmp
or
xchg
pop
sub
sti
sbbl
mov
lahf
stos
rorl
jmp
inc
jbe
xchg
dec
adc
pushf
inc
stos
jle
and
in
adc
ljmp
jecxz
outsb
iret
jns
rcrb
aaa
mov
cltd
sbb
mov
dec
adc
or
nop
pop
mov
adc
pop
movsb
cmp
dec
xor
mov
sub
je
push
ret
outsl
stc
sub
fisubl
sbb
xchg
push
push
and
aas
cmpl
repz
cmp
jns
sbb
lret
in
fdivrl
sti
pop
lret
mov
xor
insl
jge
lcall
jmp
and
in
push
xchg
add
ret
push
or
mov
dec
fisubs
push
lea
dec
adc
lahf
xchg
pop
sub
sti
push
and
mov
jnp
xchg
cli
imul
xor
int3
push
or
gs
ljmp
push
jae
sub
adc
push
inc
xor
pop
add
fildll
test
or
cmp
arpl
inc
lret
mov
xchg
mov
pop
jb
mov
xor
mov
fidivrs
push
dec
pop
sbb
fisubrs
fiadds
dec
and
iret
pop
andl
xchg
pusha
cmp
shr
stos
pop
lods
and
out
pop
inc
lods
mov
mov
pushf
ja
xor
cmp
push
push
push
mov
stc
mov
in
cmp
out
xchg
xchg
sar
std
jge
addb
stos
lret
cli
jne
pushf
or
fiadds
sub
js
fnstsw
pushf
lcall
dec
sub
cmp
test
dec
pushw
mov
inc
cmp
arpl
mov
rolb
pop
aaa
insb
mov
xchg
in
jmp
imul
jecxz
sbb
pop
xor
leave
mov
xor
pop
mov
ret
and
pushf
inc
sbb
jge
push
xchg
push
arpl
and
xor
testb
orb
adc
or
test
pop
repnz
out
lea
push
inc
xor
ja
push
test
sub
lds
sub
inc
shl
lods
lods
es
in
jmp
ret
push
cmp
sbb
fildl
imul
xor
cmp
push
leave
stos
mov
and
sub
or
mov
mov
int3
scas
lahf
out
fnsave
cmp
add
lret
adc
adc
in
mov
push
add
mov
push
sub
push
repnz
jno,pn
addb
or
mov
pop
inc
cwtl
jne
pop
cmp
sub
popa
sbb
repz
leave
mov
out
sbb
mov
lock
sarb
pushf
inc
jmp
out
inc
imul
dec
mov
icebp
dec
outsl
aaa
mov
fldenv
fwait
xchg
lods
sbb
jb
sbb
test
inc
inc
popl
lods
inc
xchg
iret
xor
stos
hlt
pop
mov
dec
mov
ret
imul
xchg
scas
ficompl
dec
les
nop
xchg
adc
pop
mov
fwait
test
test
push
aas
iret
sbb
ficomps
pop
call
popf
int
ss
jnp
ds
or
outsb
sti
jmp
je
xlat
pop
jp
sti
inc
mov
ret
cmp
popf
ret
int3
inc
dec
loopne
lods
lock
or
daa
pop
aaa
jle
xor
jbe
ds
adc
jns
cwtl
into
outsb
xchg
cli
push
dec
jnp
sbb
mov
out
nop
sbb
mov
mov
shll
imul
sbb
xchg
push
jno
into
inc
add
mov
repnz
aas
and
jae
adc
xor
outsb
sbb
inc
int
mov
push
mov
xchg
cltd
add
and
adc
xchg
sbb
xchg
cmp
bound
in
cmp
mov
or
push
cmc
into
mov
cmp
sub
mov
xchg
sbb
xchg
sub
repnz
leave
push
call
scas
push
push
insl
sbb
push
mov
das
and
imulb
cmp
outsl
and
cmp
add
push
test
xor
popf
or
pop
fiadds
pop
jp
icebp
in
in
scas
push
jo
mov
imul
fidivl
pop
mov
or
frstor
mov
das
sbb
push
or
rcrl
pushf
lock
inc
xchg
aas
movsl
pop
xchg
bound
rcl
rcll
lahf
inc
sahf
push
sub
lahf
fwait
idivb
jmp
push
jbe
std
push
xor
dec
mov
mov
adc
fisubrs
push
cmp
lcall
dec
daa
int3
out
cmp
inc
lods
mov
cmp
movsl
fisubs
addr16
in
fildll
repnz
addl
iret
mov
aaa
lods
test
xchg
add
push
push
aas
or
fisttps
xchg
adc
movsl
stos
in
dec
sbb
test
or
insb
adc
ficomps
sbb
and
mov
fcomps
cmc
roll
add
loope
setbe
or
bound
enter
lock
mov
into
mov
and
cmc
pushf
mov
sti
push
rorl
test
pmuludq
inc
std
lcall
and
sbb
negb
test
push
sbbl
mov
movsb
push
and
into
and
push
out
mov
cmp
fsubr
sbbl
mov
adc
jge
dec
test
rcrl
lcall
mov
les
dec
int
push
rorl
mov
pusha
movsl
inc
lret
jle
cs
mov
dec
fistps
aad
mov
dec
lods
incl
aas
mov
pop
aaa
outsb
or
cmp
adc
jle
arpl
movsl
pop
add
xchg
fldl
jnp
outsl
popf
and
mov
dec
add
repz
cmpsb
loope
fucomi
aad
push
fidivrl
inc
xor
fsts
pusha
sahf
mov
aam
push
popa
test
movaps
and
dec
mov
out
addr16
lods
push
or
xor
psllw
cmpsb
fs
imul
pop
mov
movsb
mov
or
mov
xchg
rcll
in
dec
cmp
pop
out
mov
jl
std
lds
test
in
xor
les
rorb
push
callw
ja
push
test
mov
jo
lea
push
fs
les
lret
push
inc
mov
pop
aas
hlt
insb
lret
sbb
and
or
adc
hlt
xor
or
add
rcrl
pop
mov
add
cmpb
xchg
aam
dec
or
fwait
push
stos
les
fidivs
icebp
test
mov
mov
sbb
sub
int3
dec
std
cmp
add
mov
xor
mov
sbb
jae
stos
sbb
jae
jmp
or
and
jge
pop
cmc
in
sub
ss
je
add
sbb
gs
arpl
inc
pop
push
add
push
shlb
push
jbe
enter
bound
or
out
jae
or
sub
cmp
roll
mov
outsl
movsl
xor
inc
inc
xor
cmpsb
out
sbb
negb
outsb
jb
int
ret
iret
jbe
pop
push
push
cmp
jno
les
popf
mov
and
call
iret
inc
nop
and
lret
sbb
shll
addl
movsl
sbb
cld
aam
lock
mov
pusha
cmp
add
test
jno
inc
imul
push
push
call
and
add
jp
in
xchg
rorb
cmpsb
les
out
in
push
xor
arpl
in
push
push
xchg
jle
mov
push
and
push
insb
xor
cmpsl
lea
xchg
add
data16
inc
mov
sbb
xchg
mov
cmp
sbb
add
jmp
mov
xor
shrl
xor
leave
jo
roll
test
jle
xchg
pop
shr
int
mov
add
push
jge
xlat
imul
popf
lods
add
imul
fisttpll
lods
andb
jg
movsl
cmpsb
cmp
movsl
das
jno
jl
int
sbb
test
push
in
jl
test
aas
mov
or
icebp
cmp
xorb
imul
jnp
add
shr
lret
mov
jbe
push
or
mov
xchg
mov
stc
insl
daa
xchg
fiaddl
fwait
inc
mov
add
mov
shl
xchg
cmp
nop
pop
pop
into
jmp
inc
out
adc
ja
add
out
imul
or
add
out
push
out
pop
inc
jp
ds
mov
stos
outsb
mov
and
cli
pop
clc
mov
mov
xchg
cmpl
xchg
imul
jo
pop
jne
jb
xor
jl
cwtl
clc
mov
xorl
and
je
add
aam
leave
inc
loop
movsl
call
test
inc
adc
inc
push
repnz
test
mov
lret
pop
sbb
mov
sbb
cmc
mov
xchg
aas
dec
jp
es
mov
orb
imul
add
stos
data16
mov
jge
test
fldt
push
dec
mov
mov
sub
repnz
mov
xchg
cmp
ljmp
fimuls
jns
pop
push
push
xor
lds
and
or
mov
sti
push
push
inc
gs
call
into
push
ja
ffree
aaa
sub
shlb
mov
or
insl
push
into
cwtl
add
mov
or
cli
add
sub
inc
push
push
xchg
xchg
sbb
call
sub
or
mov
or
mov
mov
aaa
outsb
sti
addl
rorb
nop
dec
insl
fcomip
lods
cmp
in
lahf
fnstsw
lcall
movsl
mov
push
jne
sub
mov
and
or
xchg
sbb
sahf
sti
shlb
push
pop
push
adc
ds
dec
sbb
jp
mov
mov
in
icebp
pop
push
mov
jmp
or
or
cmp
out
adc
in
std
jns
call
mov
ds
mov
hlt
xchg
scas
cmp
outsb
cmp
sub
iret
popa
movsl
mov
sar
add
cmp
add
mov
lcall
jmp
xchg
stc
sbb
in
sub
adc
insb
out
adc
orb
or
lret
aad
add
mov
test
or
adc
mov
xchg
inc
cltd
xor
outsl
inc
and
aaa
lock
enter
add
sahf
cmp
pop
adc
push
test
jecxz
movsb
and
not
lods
insl
xlat
hlt
mov
out
enter
push
inc
adc
mov
add
pusha
adc
mov
stc
orb
or
mov
push
add
test
scas
push
or
loop
xor
shlb
mov
pop
dec
sub
adc
cmpb
cmc
jne
dec
stos
lret
lods
pop
std
and
rol
or
push
sbb
add
nop
ret
pushf
push
fdiv
add
cld
sbb
push
xchg
nop
imul
ffreep
or
and
inc
in
and
cwtl
ret
and
bound
movsb
jo
mov
lds
in
adc
scas
mov
stos
mov
imul
pop
jmp
xchg
jae
clc
push
cltd
mov
xchg
sbb
daa
dec
and
lret
dec
xchg
dec
in
sbb
ljmp
sub
stos
imul
push
out
and
push
jecxz
movsl
int3
int
lock
ficoml
imul
push
and
push
inc
loop
cltd
idivb
cmp
mov
or
mov
jg
push
icebp
inc
inc
xor
and
inc
cwtl
stc
add
xchg
mov
jge
jmp
push
sbb
push
mov
dec
popf
mov
js
jecxz
loop
stos
add
dec
data16
add
adc
pop
pushf
mov
cmp
enter
add
fiaddl
or
jns
xchg
mov
and
or
out
jbe
push
dec
mov
call
xchg
cmpsl
divl
les
into
ss
mov
dec
lret
mov
dec
hlt
outsl
imul
ss
das
aas
fisubrl
push
mov
xchg
inc
pusha
and
data16
lcall
into
pop
adc
cltd
inc
pop
les
mov
sub
nop
mov
jecxz
xor
add
dec
adc
adc
stos
add
push
mov
push
jl
leave
adc
into
jle
xor
lahf
fcoml
dec
stc
lods
stos
fistps
ljmp
roll
xor
popf
jp
sbb
sbb
test
pushf
sub
fs
in
and
lahf
mov
jne
cmp
add
jb
out
pop
icebp
outsl
icebp
in
mov
lds
adc
test
cmp
push
mov
arpl
pop
mov
cmp
inc
cmp
cltd
je
lret
fisubl
les
das
or
movsb
sub
iret
pop
lods
iret
clc
lret
negl
mov
jo
push
sbb
jmp
ret
xorl
stos
test
mov
adc
sbb
mov
test
and
sub
pop
or
pop
push
dec
popa
xor
ss
sti
cs
sahf
inc
cmp
fisttps
sbb
xchg
inc
push
fidivl
sarb
dec
mov
adc
xchg
xchg
xor
int
pop
and
fwait
pop
xchg
xlat
dec
push
fdivrl
mov
jl
or
push
clc
push
ljmp
mov
cmpsb
add
test
pop
ud2
xorb
out
popa
in
sbb
adc
dec
push
daa
cld
jecxz
dec
idivb
aam
pusha
fnstsw
fistpll
jns
loop
dec
sbb
xchg
mov
outsl
enter
cld
mov
imul
aaa
dec
enter
pop
adc
shrl
inc
arpl
outsl
fldl
loop
xchg
or
pop
and
dec
sbb
inc
arpl
jmp
test
test
lods
gs
test
or
insb
mov
mov
adc
les
js
jo
out
ds
outsl
add
push
cwtl
popf
dec
ret
sub
inc
cmp
sbb
stc
xorb
or
jg
je
add
sbb
aam
fstps
or
mov
pop
dec
int
js
cs
mov
fmul
cmp
movb
rcll
movsb
pop
mov
xchg
mov
outsb
cmpsb
push
mov
jp
xchg
leave
scas
fwait
pop
sub
sbb
jns
mov
fdivrl
pop
inc
jno
inc
cld
in
pop
xor
cmp
xchg
and
jg
lods
je
pop
call
in
mov
imul
lds
cmp
stos
jne
repz
adc
adc
imulb
ds
and
and
dec
push
adc
pop
pop
je
pusha
dec
movsb
test
fbstp
cmpsb
loope
jns
pusha
adc
shlb
mov
jnp
add
cwtl
cltd
mov
jo
addl
xor
outsl
adc
popf
pushf
sub
testl
outsb
fistl
faddl
into
push
pop
andb
mov
pushf
sbb
outsb
mov
adc
ficoms
and
adc
inc
in
arpl
dec
jnp
adc
in
cmp
dec
push
inc
lds
pop
jp
cli
cld
fcompl
imul
imul
sub
xchg
mov
test
sahf
or
xor
lea
outsl
call
stos
int
cmp
addr16
out
and
test
xor
mov
fdivs
pusha
mov
dec
testb
xchg
stos
sbb
lods
lods
pop
loop
sub
sti
out
xchg
xor
rcrb
dec
mov
push
dec
scas
xchg
cwtl
sub
popa
pusha
js
jno
pop
lret
jbe
adc
add
cld
es
sbb
jl
jae
or
jl
dec
pop
mov
mov
pop
cmp
mov
sub
mov
je
ja
push
xlat
lcall
gs
xchg
or
mov
out
pop
dec
imul
into
pusha
dec
stos
fimull
pop
leave
pop
out
add
hlt
mov
pop
cmp
adc
add
jnp
dec
lds
in
gs
fdivrl
or
data16
in
inc
enter
in
fcoml
xchg
scas
ljmp
ja
xchg
sbb
fs
stos
call
sub
insl
ror
push
sbb
mov
iret
out
and
jnp
idivl
dec
push
stc
subl
in
pop
sbb
rorl
push
pop
xchg
imul
jecxz
and
popa
inc
fsubl
aad
mov
mov
test
or
jecxz
or
popa
jae
lret
movsl
push
jge
outsl
fstps
aam
mov
lret
mov
sbb
jne
dec
xchg
adc
popa
mov
ret
rolb
xchg
imul
mov
jmp
lods
outsb
out
mov
ret
mov
clc
lcall
movsb
mov
fnstsw
popf
mov
loopne
fs
cmp
push
mov
fisubrs
push
aam
cld
push
sbb
and
ja
sar
dec
mov
sub
imul
das
bound
sub
mov
int
hlt
lods
cwtl
inc
mov
mov
out
cld
jbe
inc
inc
push
xor
jno
sarb
adc
jge
dec
and
lods
ret
loop
xchg
in
cmp
int
fstl
inc
cmp
adc
jge
dec
and
lods
ret
loop
xchg
in
cmp
int
fstl
inc
cmp
adc
jge
dec
and
lods
ret
loop
xchg
in
cmp
int
fstl
inc
cmp
adc
jge
dec
mov
pop
pop
loop
in
or
dec
xor
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
pushf
test
shl
mov
aam
les
cmp
sub
pop
inc
dec
mov
pushf
orb
ror
cld
loopne
ficomps
or
dec
sub
pop
outsb
dec
push
jl
insb
jo
mov
cmp
cld
ljmp
dec
inc
add
adc
xor
add
repz
pushf
iret
int3
sub
pop
xor
mov
out
hlt
bound
xlat
cwtl
pop
pop
icebp
lahf
sub
pop
xorl
dec
aam
dec
not
dec
pop
negl
sbb
ljmp
pusha
mov
jmp
cmp
je
and
subb
sbb
data16
and
cld
mov
lods
sbb
nop
lret
mov
aam
loopne
and
mov
or
mov
lahf
outsb
or
push
clc
insl
pop
xchg
dec
addr16
sar
and
or
and
inc
sub
movsl
rcl
dec
inc
pushf
xor
arpl
outsl
sti
aad
pusha
and
or
icebp
dec
push
inc
imulb
pusha
sub
jl
add
ret
mov
aam
mov
ror
cld
loopne
bound
or
cmp
sub
pop
jl
mov
fiaddl
leave
fdivl
xchg
lods
mov
inc
or
test
cmp
and
sbb
ror
fcompl
mov
ret
jns
push
gs
imul
push
add
call
mov
sar
loopne
lock
or
cmp
sub
pop
inc
dec
push
jl
insb
jo
orb
ror
cld
loopne
lock
or
cmp
sub
pop
inc
dec
push
jl
insb
jo
subb
pop
fisttpll
flds
repz
jne
jnp
scas
mov
movsb
aad
std
jmp
cmp
scas
inc
pop
mov
xchg
and
fdivl
pop
add
add
add
dec
or
lods
jno
sub
sbb
push
fcmovne
dec
test
mov
sbb
cld
add
cltd
lea
cs
cmp
xor
sar
jns
xchg
sbb
mov
cmp
stc
roll
pop
ja
lods
rcrl
pop
mov
int
mov
mov
push
xor
adc
jge
call
pop
adc
or
cld
pop
or
inc
loope
adc
arpl
fldcw
or
push
inc
push
jge
mov
push
ret
pusha
mov
push
mov
enter
ds
add
fcompp
loopne
jne
mul
loopne
pop
and
and
sar
test
outsb
in
insl
xchg
outsb
pop
stc
dec
adc
mov
sbb
inc
inc
lret
jbe
pop
mov
mov
sbb
loopne
pop
movsb
fcoms
mov
sub
jae
scas
or
xor
pop
sbb
mov
add
addr16
mov
testl
cmpsb
add
push
jbe
test
stos
cmpsl
cmp
subb
ret
sub
pop
or
test
mov
sbb
jbe
pop
mov
outsl
xchg
add
cwtl
xchg
add
push
mov
ja
dec
or
jg
ret
sub
inc
xchg
aam
dec
mov
movsb
sub
sbb
cmp
jbe
mov
lahf
push
cltd
hlt
cmp
ds
jge
mov
jns
adc
loopne
cld
cmp
dec
mov
aaa
jbe
add
imul
or
dec
lock
movsl
lock
insb
push
adc
push
add
cld
push
lds
mov
stos
fidivl
setns
ficompl
pop
jp
cmpb
fiadds
dec
hlt
sub
in
popa
add
xlat
mov
lods
or
and
push
adc
out
ljmp
es
popl
and
cs
mov
jg
push
lss
movl
mov
jo,pt
inc
rcll
movsb
gs
pop
cmpsb
push
hlt
std
xchg
mov
inc
xlat
sbb
stos
or
out
and
or
outsb
cmp
xor
dec
or
adc
enter
push
xchg
add
mov
or
enter
into
and
pop
or
das
jno
push
gs
lock
sub
decl
lahf
fdivrp
dec
imulb
pop
in
sbb
repz
cs
mov
nop
dec
fisubrl
ss
inc
lods
out
mov
pop
xchg
mov
and
pop
dec
xlat
shrb
dec
dec
iret
loope
adcl
fadd
mov
mov
and
aas
outsl
fwait
scas
in
shr
pop
adc
dec
mov
pop
cmp
inc
dec
jp
loope
in
lods
jl
jmp
push
loope
cmp
cwtl
inc
push
dec
mov
dec
lds
ss
pop
lret
mov
mov
lcall
push
xchg
dec
sbb
pop
inc
dec
dec
mov
out
mov
adc
movsl
addr16
into
repnz
push
xor
adc
sub
push
push
shl
testb
mov
sbb
dec
fcmovnb
test
cmp
loopne
iret
adc
cmp
inc
and
add
icebp
inc
test
test
nop
aam
sub
cmp
and
fistpll
push
dec
out
test
jecxz
mov
pop
jg
and
ds
push
ds
divl
je
into
jl
mov
or
add
sbb
sbb
fcompl
cmp
lds
aaa
and
mov
pop
loope
or
fmul
stos
sbb
pop
mov
xor
adc
and
popf
sbbb
fimull
inc
add
pop
and
mov
int3
sub
je
das
xchg
pop
out
push
out
das
das
scas
sbb
xchg
lret
in
adc
inc
push
cmpsl
mov
mov
xchg
scas
add
push
xchg
sub
xchg
addr16
lret
aaa
and
pop
pop
shlb
mov
pop
lret
adc
dec
fs
lret
fs
popf
inc
fucom
pop
and
push
jle
fmull
ja
pusha
inc
push
mov
inc
xchg
pop
mov
add
push
add
cmpsl
lods
aaa
fwait
jae
leave
je
push
mov
sbb
lret
clc
lret
fistps
xlat
fldcw
sarb
popf
or
mov
outsb
ret
and
push
mov
mov
xchg
gs
jne
jbe
inc
lds
or
xchg
orl
lret
mov
mov
ss
cmp
push
repnz
mov
scas
push
xor
sbb
popa
in
ja
cwtl
icebp
fimull
dec
pop
in
cwtl
das
in
xchg
jle
jnp
iret
vprotb
or
insl
stos
insl
sub
jae
sub
adc
ja
push
fwait
mov
sbb
mov
ret
aam
int
mov
ret
ret
sbb
outsl
mov
in
test
adc
jmp
lret
mov
adc
imul
cmc
int3
cmp
frstors
sub
rclb
sbb
cmp
pop
pop
aaa
mov
add
shll
lock
sub
pop
js
js
cmp
stos
lea
cmp
sub
ljmp
xor
out
cmpsl
scas
popf
in
test
push
cwtl
pop
int
adc
adc
xor
xor
jae
dec
push
fnsave
pusha
fisubl
addl
loop
inc
fwait
jmp
pop
or
sbb
cmp
sub
das
or
xchg
dec
outsl
out
int
repnz
push
mov
decl
lcall
ljmp
mov
pop
jecxz
test
and
sub
sbb
pop
mov
mov
shr
shlb
iret
enter
ret
mov
lcall
pop
into
jg
pop
jb
repnz
je
mov
sti
out
subl
leave
adc
xchg
or
stos
inc
into
sbb
mov
mov
fwait
push
je
les
ret
sbb
stc
movsb
dec
ja
or
add
jg
xchg
mov
inc
jbe
cmpsb
dec
sbb
cmp
adc
inc
scas
jb
cmp
test
inc
add
mov
mov
mov
ljmp
inc
pop
and
jae
mov
cmp
inc
adc
pop
jp
in
hlt
or
popl
dec
mov
cltd
outsl
sbb
imul
pop
mov
mov
fnstenv
mov
loop
mov
push
pushf
cltd
test
jno
mov
push
inc
pop
into
je
push
cltd
cmp
sbb
js
pusha
jne
outsl
insl
xor
sti
addl
lret
ja
ljmp
ss
andb
xchg
iret
stos
insb
jno
out
xor
push
lcall
mov
lods
xor
sbb
mov
mov
and
push
or
adc
cmpsl
stc
ja
rol
hlt
enter
adc
jl
mov
or
push
jns
js
stos
dec
fwait
cmp
fbld
sub
pushf
push
pop
loope
jle
or
xlat
lcall
lahf
fs
pop
jnp
mov
add
inc
adc
pop
mov
adc
into
add
rclb
jp
mov
push
int
lods
jl
les
loop
stos
pop
or
jmp
mov
cs
les
out
xor
xchg
push
scas
xchg
das
sbb
jnp
sbb
dec
std
test
pop
inc
out
test
pop
test
stos
dec
or
push
pop
fcmove
jl
nop
mov
test
mov
cs
xor
push
cmp
and
les
pusha
ret
outsb
icebp
adc
pop
pusha
lret
push
ret
jns
mov
aad
ret
test
pop
xchg
or
icebp
push
test
dec
fxch
outsl
or
mov
push
xchg
insl
jne
lret
pop
xor
adc
mov
cmp
or
and
cmp
std
in
adc
rcrl
jne
mov
icebp
js
loopne
roll
leave
sub
xor
inc
jns
xor
jge
dec
cmp
imul
sbb
add
xchg
mov
mov
fcoms
jmp
inc
mov
xchg
xchg
adc
or
dec
mov
push
xchg
push
movsl
fadd
xor
mov
lcall
adc
stc
dec
arpl
and
jb
ljmp
jecxz
std
test
push
and
pop
pop
xchg
loop
mov
inc
repz
and
rcrl
xchg
ret
mov
mov
jb
push
aad
push
stos
lods
ss
popa
gs
xchg
mov
sub
dec
cmpl
out
and
decl
dec
notl
das
push
push
cmc
outsb
cmpsl
and
adc
js
movl
loope
push
decb
out
mov
scas
idivl
pop
jecxz
cmp
add
stos
out
sbb
push
out
xcrypt-ofb
cmpsl
test
int
or
pop
daa
cs
pop
cmp
xchg
jbe
add
mov
sbb
jg
ja
mov
and
push
push
dec
movb
xchg
lret
test
neg
adc
pop
push
and
jae
test
lret
lods
in
mov
in
mov
mov
xlat
leave
dec
pop
in
stos
loopne
sub
push
sub
lret
cmp
test
loope
mov
cmpsl
inc
dec
push
sbb
fdivrl
rclb
lods
andl
add
xor
inc
icebp
lret
dec
sbb
fistl
or
mov
fwait
inc
popa
or
adc
pop
aad
out
add
mov
ljmp
int
popa
mov
addr16
and
rolb
imul
fbld
jl
sub
xchg
daa
mov
cld
xchg
pop
sbb
mov
rclb
adc
cwtl
jmp
repz
fiaddl
jp
pop
pop
lock
aam
int
adc
xchg
subb
jle
lahf
into
push
mov
imul
pop
pop
ljmp
test
dec
cmpsb
mov
dec
ret
mov
push
push
mov
fisttps
outsl
mov
lcall
pop
mov
pop
cli
hlt
pop
fnstenv
dec
stos
sub
or
dec
dec
xchg
add
mov
flds
or
sub
jae
leave
cmp
pushf
cmc
pop
jmp
in
fisttps
add
subl
jne
cmpsl
shlb
jno
xchg
cmpb
ljmp
dec
cmpsl
push
es
push
cmp
pop
mov
outsl
jecxz
mov
das
jmp
cmpsl
or
sbb
ja
mov
mov
mov
ss
xor
and
in
mov
adc
aad
lret
jecxz
inc
ljmp
mov
stos
dec
mov
push
testb
mov
jmp
lods
cs
dec
jecxz
clc
jo
outsb
out
cs
adc
fadds
loopne
ljmp
hlt
xchg
fistps
int3
sub
bound
out
lods
insl
mov
out
jb
sub
out
test
rcrl
negl
xlat
sti
pop
sbb
mov
mov
mov
dec
mov
and
shll
insb
or
int3
mov
ljmp
mov
insb
outsb
push
ja
rclb
xchg
cmp
jmp
add
mov
jg
sub
xor
sbb
imul
mov
adc
dec
notb
mov
or
cli
sbb
add
sub
xlat
inc
mov
ss
pop
mov
xor
adc
mov
mov
mov
mov
fists
fidivl
and
inc
out
movsb
cmp
sub
out
jae
or
sbb
sbb
mov
cmp
pusha
pop
xorb
sbb
hlt
inc
jp
mov
add
sbb
test
xchg
jb
lock
add
popa
mov
cmp
dec
mov
sbb
subl
pop
and
bound
leave
mov
and
in
add
mov
xchg
pusha
mov
pop
loope
push
jbe
sbb
push
jo
shrb
imul
and
add
aad
mov
jns
in
jb
mov
inc
sbb
pop
lock
ror
cmp
fstl
inc
mov
lcall
mov
xchg
mov
xor
inc
bound
sbb
in
mov
test
lret
push
inc
sbb
jns
shl
xchg
push
into
shlb
sbb
int
pop
sub
xchg
sub
add
dec
pop
pop
pushf
dec
pop
cwtl
imul
lret
jns
cmpsl
jg
gs
jnp
cli
fimuls
adc
push
dec
push
movsb
cmp
push
dec
in
flds
inc
in
mov
sbb
lea
dec
jnp
jae
and
lret
cs
ss
mov
jbe
mov
mov
iret
stc
shrl
or
outsb
ss
pusha
mov
jnp
repz
lret
icebp
aas
or
gs
icebp
imul
sbb
fbld
mov
xor
cmp
testl
repz
lret
int
popa
iretw
jle
sub
jecxz
icebp
xchg
xchg
inc
or
mov
aas
jmp
pop
add
insb
xor
and
testl
sub
sti
int
adc
pushf
gs
xchg
into
jbe
dec
rolb
out
negl
inc
mov
xchg
xchg
ret
dec
sarb
dec
mov
std
pop
and
xor
pop
loopne
jne
in
out
mov
cmpsb
ja
inc
or
clc
push
jns
xchg
pop
fimull
gs
lcall
rolb
cmp
out
std
fcmovb
and
popa
lahf
xor
and
fdivs
mov
jg
mov
or
mov
dec
cmp
sbb
inc
scas
or
xlat
shll
cld
inc
push
ds
xchg
and
push
jle
addr16
mov
hlt
daa
outsl
data16
mov
mov
pop
cmp
push
xchg
xorb
rorl
or
js
clc
ja
cmp
pop
or
lret
test
test
movsb
jecxz
rcrb
jg
jns
pop
xchg
add
mov
test
inc
cmpb
out
pop
push
xchg
mov
popa
popf
cmpsl
cs
into
in
addr16
loop
push
mov
lret
sbb
push
ja
das
sub
imul
inc
xor
mov
lea
clc
das
mov
mov
ljmp
sub
das
test
mov
mov
xchg
imul
and
loopne
mov
scas
cmp
rcll
pop
jbe
or
add
sbb
xchg
rcrb
out
gs
jno
mov
sahf
mov
mov
fisubrs
lcall
jns
xlat
insl
and
ja
mov
out
lods
jl
sbbl
mov
int3
cmpsb
xchg
pop
jbe
push
cmp
jbe
mov
loopne
inc
mov
ss
xchg
fistps
aaa
andl
stc
stos
pop
push
mov
out
xor
mov
inc
mov
mov
cmp
and
ror
or
mov
imul
addr16
nop
aam
cltd
add
jo
adc
pop
in
movsl
aaa
dec
test
aam
insl
xchg
arpl
adc
dec
les
dec
xor
orl
jnp
test
ss
and
gs
sarl
mov
ljmp
addr16
out
sub
inc
fs
pop
cmp
insl
xor
push
adc
mov
adc
push
or
loop
mov
sub
ud1
and
xor
sub
pop
sub
out
jl
inc
lock
mov
cld
xchg
cmp
cmp
out
push
subb
fiadds
scas
scas
mov
into
rorb
repz
and
sub
xchg
clc
fbld
jle
orb
call
imul
test
adc
cmp
xlat
jb
mov
inc
mov
xor
fcmovbe
pop
push
push
jg
aas
movsb
test
jmp
jbe
fbstp
ret
mov
stos
add
push
jle
push
mov
cmp
pop
test
cs
lods
xchg
xchg
and
daa
ffreep
sub
pushf
lea
int
push
addr16
mov
popf
leave
pop
or
and
lds
sbb
in
push
pop
xor
cmp
mov
popf
ret
sbb
fsin
popf
jl
fisttpll
lret
mov
scas
jle
pop
inc
jecxz
pop
mov
call
aad
mov
out
andl
mov
mov
xlat
lods
and
add
inc
jge
dec
rcrb
or
dec
push
push
mov
and
enter
idivb
nop
push
mov
cmp
outsl
dec
pop
mov
inc
int
out
pusha
addr16
cli
out
push
lods
sub
mov
pop
fisubl
fucomi
lcall
repz
pusha
inc
dec
xor
in
sahf
jo
in
in
stos
lds
jbe
enter
fcmovnu
cltd
insl
lods
test
sbb
in
pop
xor
or
cmpsb
inc
rolb
iret
mov
aas
adc
call
fnstcw
fdivrl
cmp
movsb
and
cmpsl
mov
mov
xlat
cs
xchg
pop
and
pusha
int
mov
and
les
inc
es
iret
sub
xchg
mov
mov
cmp
adc
mov
sbb
arpl
fcmovne
or
xchg
clc
push
push
scas
xchg
adc
mov
push
flds
out
test
in
push
sarl
fcomp
cwtl
xchg
xchg
div
and
inc
addr16
pop
testb
push
push
enter
and
push
stos
and
mov
jge
xchg
scas
out
dec
adc
call
lret
add
pushf
xchg
test
stc
nop
mov
pop
popf
push
rcr
cmp
jl
push
sbb
inc
ret
das
add
arpl
add
cmp
sbb
and
dec
push
js
outsb
andb
xchg
testl
jg
fcmovnb
wbinvd
cmpsb
cmp
mov
sbb
icebp
imul
into
and
test
and
and
leave
hlt
enter
inc
into
push
aam
mov
dec
test
and
and
in
mul
loope
cmp
push
jbe
lea
pop
or
dec
das
shrl
push
sub
out
jecxz
mov
or
cmpsb
pop
fisubrs
aaa
addr16
fsubrl
sub
daa
cmp
imul
lock
decb
mov
imul
stos
cwtl
or
mov
xchg
adc
fcmovu
test
sub
sub
pushf
enter
push
outsb
add
xor
sbb
sub
test
in
or
mov
sub
icebp
xchg
mov
sub
lret
les
mov
insl
and
mov
push
push
aam
enter
adc
call
data16
add
loopne
movsl
js
add
cld
test
sbb
inc
out
cli
cltd
popa
and
mov
cmpsl
das
fsubrl
cmp
insb
loop
add
sub
jge
mov
sub
mov
imul
push
sti
in
mov
mov
sbb
mov
loop
dec
cmp
jg
add
or
mov
jecxz
pop
push
mov
hlt
dec
push
adc
fidivl
rcrb
mov
movsb
push
sbb
mov
xor
adc
flds
jecxz
out
pop
xchg
dec
sbb
inc
dec
mov
lahf
cltd
sbb
adc
jg
push
pop
mov
xor
rorl
xchg
inc
cmp
cld
aam
stos
cmc
sub
sbb
sahf
lea
pop
lods
mov
mov
mov
push
inc
inc
ss
mov
popf
nop
add
int3
sar
loopne
lock
or
cmp
sub
pop
inc
dec
push
jl
insb
jo
orb
ror
cld
loopne
lock
or
cmp
sub
pop
inc
dec
push
jl
insb
jo
test
fadd
int3
mov
sbb
or
cmp
sub
pop
inc
dec
push
jl
insb
xchg
pushf
mov
lods
lock
int3
sar
pusha
in
xor
or
xchg
and
sub
les
sbbl
or
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
sub
lods
pushf
into
mov
inc
scas
int3
sahf
mov
shrb
sbb
das
insl
aas
dec
push
dec
push
mov
into
mov
cld
scas
in
mov
cmp
sub
jge
or
jl
insb
ds
push
dec
push
mov
into
mov
cld
scas
in
mov
cmp
sub
jge
imul
jl
and
mov
fdivrl
daa
lcall
adc
clc
dec
or
fucompp
out
and
jmp
mov
mov
addl
xchg
gs
mov
dec
cmp
lods
ds
sbb
sbb
jecxz
jo
push
mov
jg
dec
repz
filds
lods
jmp
cld
scas
sarb
xchg
ljmp
ds
fimuls
push
inc
cs
add
xor
push
int3
sahf
push
xchg
pop
imul
das
jge
fldenv
incb
call
sbb
and
and
or
ret
outsb
cli
jp
cmp
outsb
pop
push
dec
loope
out
lods
pushf
into
mov
cld
scas
in
mov
cmp
sub
sbb
or
jl
insb
ds
push
dec
pop
enter
lock
lahf
mov
jmp
ljmp
push
jns
jl
jnp
sub
call
in
mov
mov
outsb
or
sub
aaa
dec
pop
test
imul
scas
subb
pushf
in
mov
cmp
sub
sbb
or
jl
insb
ds
push
dec
push
mov
into
mov
cld
scas
in
mov
cmp
sub
sbb
or
jl
insb
ds
push
dec
push
mov
mov
out
scas
fnstcw
jp
jle
pusha
lahf
cmp
mov
cmp
mov
cs
mov
jp
imul
lods
test
xchg
xchg
test
ret
scas
stos
notrack
cwtl
jg
inc
xchg
test
sbb
and
aam
push
cmc
add
cli
xor
jae
add
jno
pop
out
in
jmp
loopne
sub
stos
out
xchg
and
cmc
dec
repz
pop
adc
in
test
repz
cwtl
or
pop
mov
add
cmp
pop
inc
and
lea
hlt
push
jne
insb
test
push
xchg
xlat
add
iret
mov
sbb
rclb
shrb
jnp
std
adcl
sbb
adc
xor
pop
imull
jge
fiaddl
js
sbb
xchg
jne
pushf
int3
fstpl
std
add
cmpsb
cs
call
in
or
mov
addl
mov
ljmp
sahf
js
std
mov
mov
adc
dec
orb
pop
into
es
and
icebp
pop
adc
cmpsb
nop
add
filds
fimull
mov
sbb
arpl
or
mov
push
ljmp
icebp
or
fisubs
lock
jo
insb
pop
and
jg
lret
popa
es
xor
dec
out
ds
or
or
clc
lcall
test
or
mov
and
mov
popa
fdivl
jp
pop
pop
dec
mov
xchg
lds
jle
loopne
pop
shll
inc
sbb
dec
push
imulb
out
fidivrl
in
mov
xor
insb
shll
cmp
sub
std
push
ret
jle
iret
test
adc
jl
or
xchg
add
ret
mov
jbe
sub
enter
xlat
sbb
mov
and
cmp
mov
add
pushf
xchg
out
pop
jl
pop
mov
sahf
jne
mov
sbb
imul
or
clc
into
pop
decb
fsubp
mov
mov
movsl
in
or
les
push
mov
mov
or
push
mov
xor
or
dec
push
loop
popf
lea
stc
mov
push
jg
push
clc
pop
mov
push
jl
fdivs
gs
std
dec
pop
mov
aam
dec
and
pop
das
es
insl
jbe
iret
rcll
js
lea
add
hlt
cmp
jmp
sub
das
xlat
mov
iret
stos
out
inc
cli
jno
es
pop
in
push
fs
jae
push
cmpsl
shlb
cwtl
dec
xchg
mov
call
inc
mov
or
arpl
xchg
dec
mov
sti
imul
push
xor
daa
in
jle
jns
jge
ja
ljmp
sub
movb
jge
jle
pusha
inc
xchg
sbb
lods
sbb
mov
bswap
xor
jl
lds
pop
inc
in
jmp
scas
mov
inc
xor
adcb
sarb
pop
js,pn
or
xor
imulb
leave
das
inc
dec
sbb
pusha
int
fistps
test
movsl
aas
orb
dec
lret
ss
mov
enter
fsubrs
sub
in
ret
out
push
pop
add
sbb
xor
int3
or
mov
arpl
leave
scas
fldt
imul
push
pop
stos
xorb
jae
xchg
loopne
daa
mov
pop
push
inc
dec
push
pushl
in
push
test
mov
lds
or
cmp
call
or
or
adc
dec
mov
js
xor
mov
adc
xor
mov
mov
lret
aam
shrb
jbe
push
sub
inc
cs
aam
or
in
cmpsl
mov
hlt
cmp
call
mov
test
scas
ret
scas
jo
fsubp
cmp
dec
and
inc
cmp
adc
xchg
test
aad
mov
dec
cmp
into
mov
mov
adc
in
leave
and
mov
sbb
les
shlb
enter
mov
jmp
cmp
mov
xchg
lcall
imul
scas
call
insl
test
insl
pushf
lret
mov
or
xor
scas
or
out
int
xor
in
inc
daa
mov
mov
or
adc
sub
lock
pushf
add
inc
dec
xchg
insl
insb
scas
das
cmp
punpckhbw
popa
stos
xchg
ljmp
int3
std
stos
jbe
orb
loop
mov
je
pop
popa
mov
fwait
sub
les
add
fnstenv
jmp
xor
lods
xor
pop
out
xor
pop
inc
xlat
mov
cmpsl
fadd
test
xor
aaa
mov
jge
fdivl
lahf
das
fidivl
sub
inc
dec
jl
les
inc
sub
out
sbb
push
mov
lret
sub
test
adc
out
mov
push
stos
or
and
unpcklps
je
int3
and
xchg
jns
cmpsl
aam
push
push
xor
and
aas
loopne
jmp
inc
mov
sbb
popa
pop
movsb
xor
adc
pop
cmp
lds
out
fnstenv
xchg
sbb
insl
mov
mov
dec
and
xor
mov
xor
fcmovne
std
jle
or
sarb
mov
fisttpll
jne
pop
pushf
shrb
pop
adc
dec
lret
aaa
add
jbe
ja
clc
mov
mov
mov
and
cli
add
mov
inc
mov
ret
jle
icebp
cmpsb
mov
mov
push
in
jns
or
mov
mov
decb
int3
or
js
push
dec
pop
xchg
mov
adc
push
sbb
sub
repnz
and
sahf
add
xchg
xor
mov
jbe
push
cmpsl
pop
jno
mov
rcl
aaa
outsb
or
rcl
sbb
mov
sar
and
push
ja
mov
mov
insb
les
outsb
jno
lret
shl
mov
mov
mov
xor
mov
mov
push
dec
test
mov
es
out
cltd
outsb
outsl
mov
xor
out
in
mov
push
test
es
adc
mov
in
mov
aam
ret
scas
mov
ljmp
stos
hlt
inc
insb
sub
aad
gs
dec
push
cld
xor
adc
repnz
or
stos
sti
loop
jp
pop
push
lea
mov
pop
not
add
jl
xlat
subl
jae
mov
insb
stos
js
sbb
xor
shll
mov
loopne
lock
cmpl
sbb
pop
fimuls
clc
sbbl
sbb
pusha
lret
jno
mov
push
xchg
lods
and
sub
out
or
cmovo
clc
xlat
sbb
fdivl
dec
xor
lahf
add
lahf
int3
notl
cmc
ja
mov
loop
rol
xchg
fs
ret
jle
cmp
xchg
adcl
jns
shl
pop
dec
jmp
adc
mov
data16
add
stos
jnp
jb
pushf
push
push
call
nop
repz
mov
sbb
test
lea
jl
inc
enter
and
mov
mov
adc
push
xchg
jle
jbe
subl
cli
sbb
mov
sahf
aam
cmpsl
lahf
cmpsl
negb
mov
inc
mov
xlat
add
xor
mov
fisttpll
jecxz
sbb
mov
lods
rcl
pushl
xchg
outsl
push
jnp
fildll
setns
outsb
test
or
inc
xor
insl
movsl
dec
enter
jo
sbb
ds
ret
mov
into
push
sub
pop
mov
lock
shl
into
sbbb
call
dec
ja
add
lds
mov
jecxz
mov
mov
push
mov
ds
jae
aas
pop
mov
xchg
pushf
xchg
lahf
test
mov
add
dec
or
push
xlat
js
and
jecxz
mov
push
cmpsb
jg
sbb
adc
lret
mov
fisubrs
cld
subl
jge
inc
into
rcrb
mov
jo
mov
rclb
jecxz
pusha
mov
cwtl
stos
pop
dec
mov
jecxz
cmp
jno
adc
iret
push
cmc
sbb
push
sub
daa
xchg
jo
mov
int3
orl
ss
mov
push
subl
bound
movaps
js
repz
lds
and
add
sarb
movsb
add
adc
repz
sahf
stc
push
sub
out
and
mov
int
movsl
adc
push
pusha
adc
mov
ss
sub
mov
aad
xor
push
insl
stc
adc
test
inc
mov
jbe
int
movsb
xor
xor
xchg
cld
jbe
stos
or
adc
negb
xlat
icebp
icebp
hlt
mov
push
add
ret
idiv
roll
test
lahf
inc
and
pop
lea
sub
cmp
outsb
stc
and
dec
jmp
mov
and
adc
add
push
push
sub
stos
notb
mov
xor
popf
scas
add
test
dec
push
loope
add
mov
std
out
pop
add
enter
sbb
xchg
jnp
arpl
or
imul
test
push
pop
out
fs
jne
or
ljmp
or
iret
xchg
pop
test
mov
aad
sti
add
pop
hlt
xor
push
sub
inc
xchg
inc
sub
jbe
or
jl
dec
stos
jle
xchg
pop
cmpsl
icebp
repnz
jno
cli
mov
jae
adc
inc
incl
dec
aam
mov
cltd
scas
pop
adc
xchg
push
les
in
test
test
aad
outsl
test
and
out
test
cli
dec
adc
shlb
aam
push
aam
lahf
data16
addr16
mov
cmp
jns
jmp
out
mov
hlt
cmp
mov
add
out
push
mov
clc
insl
xor
addr16
xchg
stos
ret
call
fidivl
aad
adc
outsb
popf
and
push
cmp
adc
or
inc
das
xchg
fcomps
es
lock
mov
frstor
push
das
mov
and
sub
outsl
mov
sbbl
in
jmp
xchg
in
sbb
int3
push
dec
jmp
test
cltd
fcmove
popa
adc
aaa
lea
sub
mov
xchg
not
lock
dec
inc
pop
xchg
mov
iret
gs
les
loop
mov
push
jno
dec
push
cltd
jb
aam
xor
push
mov
pop
or
rorb
int3
addl
jns
sbb
jno
out
push
loopne
jo
arpl
pushf
lods
pusha
mov
sbb
mov
sub
insl
mov
inc
pop
push
add
outsb
push
mov
sbb
add
out
inc
mov
insl
inc
mov
or
jle
ficomps
adc
out
outsb
or
dec
out
into
push
mov
repz
in
out
push
fmul
idivl
icebp
and
inc
pop
pop
inc
rcr
cmp
sub
gs
mov
lock
popa
pop
nop
pop
mov
cltd
jl
mov
and
cmpsb
fistpl
mov
std
loopne
mov
mov
lock
in
leave
addr16
xchg
jp
jg
push
ss
jmp
scas
outsb
jae
mov
xor
icebp
popf
in
into
out
aad
fnstsw
cmpsl
jae
inc
pop
jb
push
aas
cwtl
movsl
or
iret
jp
scas
pop
add
js
cltd
fiaddl
fs
loopne
outsb
rcrl
cld
adc
fbstp
adc
jl
incb
xchg
or
mov
push
das
jae
jg
test
lea
xchg
pop
pushf
lret
adc
imulb
xchg
ss
xchg
hlt
inc
or
xchg
pop
std
cmp
sub
cmp
int3
dec
and
adcl
loope
loope
dec
dec
js
or
jg
pop
jp
lods
lock
es
lds
cmp
repz
cmp
push
cmp
cmp
cmp
pop
nop
int
dec
mov
aaa
mov
enter
pop
sub
sub
mov
insb
sub
fwait
dec
mov
into
stc
sub
test
loopne
hlt
scas
sbb
fdivs
test
mov
enter
pop
daa
pop
aam
sbb
xor
mov
mov
mov
aad
mov
or
mov
mov
stc
sbb
or
xor
jle
mov
test
xchg
daa
dec
push
and
xorb
push
in
mov
sarb
aad
mov
outsl
int
ret
cmp
mov
fidivrs
sbb
mov
and
push
out
rorl
ret
xlat
sbb
and
adc
mov
dec
call
pushf
aam
inc
dec
das
and
push
push
sub
stc
sub
lret
mov
subl
xor
pop
mov
xlat
xchg
fiaddl
test
out
mov
cmp
dec
push
xchg
movsd
mov
gs
jbe
jo
test
xor
std
pop
and
fisubrl
icebp
int3
push
inc
jne
rolb
pop
rcll
and
push
inc
movsb
cmp
les
add
jecxz
push
test
pop
lea
xor
or
imul
enter
mov
call
dec
movsl
add
cmp
xor
xchg
jo
jne
and
adc
inc
xor
jo
jge
sarb
mov
jne
rolb
test
cmpsl
popa
cmp
or
inc
int3
add
fists
sbb
dec
jge
movsl
pop
mov
inc
mov
stos
adc
mov
adc
mov
cltd
clc
ss
pop
adc
xchg
mov
pop
sbb
repnz
push
jle
pop
aam
fbld
sub
push
mov
add
mov
filds
test
lods
xchg
adc
sbbl
push
je
dec
or
cmp
xchg
pop
mov
push
cmp
xchg
sahf
push
mull
xchg
mov
push
pop
mov
ss
lret
sbb
lret
aad
aad
mov
je
pop
shrb
add
pop
sbb
into
lret
in
cwtl
call
inc
pop
pop
pop
cmc
ret
scas
std
fcmovnu
xor
and
call
sbb
movsl
repnz
imulb
insl
cmp
sub
cmp
cmp
dec
dec
shlb
sbb
ljmp
inc
in
aam
js
lea
mov
pop
pop
inc
stos
jmp
jns
lcall
mov
repnz
or
inc
xlat
test
mov
mov
add
pushf
sbb
sbb
mov
insb
fs
arpl
xor
jle
dec
xor
imul
sahf
hlt
test
je
and
sub
stos
sbb
pusha
pop
decb
les
fisttpll
outsl
inc
cmpsb
push
jb
and
and
cltd
push
jge
cmpsb
pushf
mov
sbb
aam
cltd
dec
mov
shlb
mov
fists
mov
mov
mov
push
push
inc
xchg
ss
scas
repnz
mov
dec
loopne
sbb
xchg
push
hlt
lds
dec
lcall
iret
jge
sbb
test
xchg
pop
cmp
and
mov
add
cwtl
lcall
ljmp
test
or
sub
fbld
mov
test
push
rcr
aas
test
fisttps
mov
cmpsb
stos
jbe
test
cwtl
rol
pop
and
rcll
shl
jbe
lock
in
jmp
mov
ljmp
sbb
in
fsubrl
xor
sahf
cmp
xor
pusha
loopne
inc
dec
cmp
dec
and
adc
jle
pop
lcall
mov
mov
imul
aam
inc
mov
out
mov
pop
stos
nop
pop
jo
jb
or
std
sub
adc
outsb
rol
cmp
mov
sbb
push
notb
pop
data16
add
in
test
stc
or
push
push
les
frstor
fisubl
outsb
pop
test
cmc
dec
mov
int3
repz
popf
mov
push
or
fidivrs
icebp
jns
jg
imul
fstpl
das
insb
cmp
pop
fisubl
test
jp
jge
icebp
iret
xchg
sub
add
in
roll
jo
add
out
push
add
out
add
push
data16
pop
push
push
push
sub
xor
mov
out
ljmp
adc
mov
jl
movsb
sub
movsb
testb
mov
insb
inc
pushf
in
hlt
loope
hlt
outsb
xor
hlt
mov
xor
std
push
fsub
sti
xor
jbe
adcb
stos
mov
mov
xchg
rcll
out
loope
lods
mov
hlt
and
inc
cltd
enter
jbe
call
mov
jno
testl
dec
dec
fmul
xchg
push
cwtl
add
popf
stc
sbb
shll
cmpsl
jne
xchg
loopne
mov
and
fdivl
jge
push
push
sahf
mov
int3
inc
cmp
test
sbb
cltd
cmp
push
loopne
sahf
out
cmp
jae
scas
out
mov
movsl
xor
adc
and
fimuls
lods
lret
cs
imul
test
add
sbb
ficompl
rorb
fcomps
call
popa
stos
sbb
push
jo
dec
jne
cmp
push
lahf
adc
in
or
lock
fchs
inc
pop
jne
data16
mov
xchg
outsl
enter
xor
lcall
aam
pop
or
xor
adc
sub
scas
out
test
mov
lods
push
mov
inc
imul
into
inc
cld
xchg
add
jae
popf
movsb
xor
cmp
in
sahf
push
scas
add
and
dec
imul
out
ljmp
ficoml
inc
lea
cmpsl
scas
jb
inc
xlat
push
stos
rcrb
inc
xlat
loop
jp
adc
fnstenv
js
adc
lock
dec
sub
sbb
pop
adc
clc
fistps
inc
or
sbb
pop
and
xor
adc
lds
add
xchg
xchg
pusha
mov
and
popf
insl
rolb
push
mov
pop
ss
mov
insb
leave
add
daa
mov
add
enter
inc
sarl
inc
jne
es
xchg
popa
dec
and
mov
loopne
imul
inc
xorb
fsts
sub
push
cmp
add
jne
inc
sub
ficoms
icebp
cmp
mov
lea
pop
cmp
inc
jmp
inc
pop
or
fsincos
and
sbb
add
cmp
daa
sbb
movsl
das
hlt
out
or
cmp
jae
sub
sbb
cmp
jmp
std
cltd
jnp
arpl
fldcw
test
jmp
or
jbe
jle
push
push
pop
mov
cmp
mov
inc
jo
xor
mov
xchg
mov
ret
movsb
jecxz
cld
push
repnz
ficompl
xchg
mov
and
add
xor
adc
ds
int
imul
das
out
or
inc
pop
cli
and
popl
clc
cmp
imul
push
pop
cmp
add
test
loopne
aas
pushf
scas
inc
push
xor
sub
ds
into
mov
lret
lahf
cmpsb
es
out
fldln2
test
inc
add
cld
inc
loop
mov
cmc
adc
imul
mov
and
roll
or
mov
jmp
jmp
add
xchg
stos
xchg
sub
lahf
lahf
leave
arpl
popa
mov
push
xchg
out
fdivrs
adc
xchg
xor
mov
enter
adc
push
push
cli
sbb
sahf
mov
adc
xchg
sub
arpl
mov
and
mov
mov
xchg
fisubrl
push
pop
mov
mov
test
aaa
rcr
dec
js
pushf
xor
dec
and
mov
jl
sbb
pop
arpl
clc
xor
cmpsl
jmp
push
cmp
xor
push
add
jle
cmp
ds
mov
cmpsb
insl
cltd
in
je
pop
loopne
mov
dec
addb
cs
loopne
mov
sub
sbb
stos
arpl
push
sbb
mov
rcrl
stos
test
fisubrl
dec
lret
cmpsl
sbb
popw
dec
inc
xchg
mov
adc
xchg
sahf
repnz
dec
pushf
notb
pop
fcomps
je
nop
insl
lret
aam
mov
dec
es
or
push
nop
fistl
inc
and
mov
test
adc
fstps
sub
in
lret
cltd
push
into
mov
cld
scas
in
mov
cmp
sub
sbb
or
jl
insb
ds
push
dec
push
mov
into
mov
cld
scas
in
mov
cmp
sub
sbb
or
jl
insb
ds
push
dec
push
mov
into
mov
cld
scas
in
mov
cmp
sub
sbb
or
jl
insb
ds
push
dec
push
mov
into
mov
cld
scas
in
mov
cmp
sub
mov
or
or
mov
ficomps
int
std
cmp
sub
adc
mov
insl
mov
cmp
sbb
or
pop
lea
jp
push
pop
xchg
dec
mov
insl
stos
pop
test
enter
ljmp
xor
push
mov
lcall
jbe
jg
imul
test
xchg
lea
sbb
and
or
xchg
xor
xor
mov
or
xchg
stos
cmp
xchg
push
loop
push
xchg
cmp
xchg
jne
ror
popa
mov
sahf
aaa
or
insl
push
or
cli
adc
sbb
add
pop
lea
push
lods
out
pop
jp
je
inc
xchg
daa
loop
or
cli
and
jo
popa
lcall
jge
into
jne
inc
sub
pop
fmuls
outsl
and
push
jle
ret
shlb
jnp
cmp
dec
loopne
inc
cltd
push
nop
repnz
sub
or
in
sub
cmc
dec
mov
lcall
push
ret
pavgb
js
pop
xchg
dec
repnz
jecxz
leave
push
lods
minps
push
mov
mov
arpl
push
xchg
dec
xchg
dec
mov
pop
call
pop
cmp
pop
out
jge
adc
lret
insb
sahf
mov
mov
outsl
into
imul
mov
insl
stos
sbb
cli
sub
or
cmp
sub
jp
push
lcall
sbb
cli
sub
sbb
mov
gs
mov
jne
add
std
subb
or
mov
or
push
or
mov
mov
in
pop
aas
xchg
repnz
fwait
cmpsb
scas
stc
sarb
decb
dec
push
jle
stos
out
sub
pop
dec
in
push
xchg
shll
or
or
sbb
xor
rclb
imul
inc
dec
in
push
faddl
xchg
scas
or
mov
aaa
cld
push
xchg
jl
fistpl
add
and
fnstenv
sbb
jmp
sahf
call
shll
inc
jnp
stos
xchg
mov
mov
mov
outsb
out
fwait
pop
cmp
mov
lcall
fcomp
mov
aaa
rcl
adc
or
sub
inc
sub
jg
ljmp
pushf
adc
adc
or
pop
add
pop
mov
jecxz
clc
jbe
adc
loope
mov
mov
rorb
adc
arpl
mov
fisttps
xchg
and
shrb
imul
push
pop
lds
es
adcl
sti
test
fcoml
ss
repz
mov
idiv
insb
xor
ficomps
addl
nop
cwtl
fs
and
fsts
dec
cmc
insl
insb
hlt
ret
mov
mov
shrb
xchg
bound
mov
inc
sub
cmpsl
mov
ljmp
fmul
sarb
lea
bnd
push
cmp
lcall
das
divl
inc
cwtl
jae
jecxz
aas
test
jb
jbe
xor
orl
fnstcw
and
push
mov
scas
or
cwtl
jge
lret
mov
mov
adc
add
mov
ret
sbbb
xchg
sahf
and
pushf
and
rdmsr
leave
int3
inc
jecxz
inc
inc
cltd
sub
inc
enter
mov
add
mov
pushf
rcrb
int
mov
mov
inc
cmp
xorl
loop
cmp
sahf
add
lods
sbb
push
lods
add
incb
loop
mov
inc
cmp
fiadds
sti
jg,pn
imul
jo
icebp
mov
dec
pop
pop
xchg
push
dec
or
cmp
xchg
punpcklbw
push
lods
lret
mov
loopne
stos
or
mov
ss
repz
jge
adc
xor
xchg
addr16
xchg
loopne
push
xchg
push
and
out
dec
adc
sar
imul
pop
xor
or
sub
lods
sahf
inc
loope
mov
stos
add
ss
mov
enter
or
mov
mov
add
sarb
jno
lods
data16
into
mov
mov
mov
repz
push
sub
or
lahf
adc
mov
mov
andb
xor
inc
sub
xchg
sbb
test
dec
dec
inc
mov
and
jae
inc
sbb
dec
mov
int
fldenv
dec
mov
or
jmp
xchg
aad
pushf
adc
decb
in
push
jmp
dec
xor
lea
cmc
adc
push
sub
lods
push
inc
cltd
loope
dec
jle
push
xchg
sti
aas
hlt
dec
loop
mov
jmp
daa
or
mov
sbb
adc
sbb
inc
sbb
and
movsb
arpl
shrb
sub
pop
fistps
inc
cmp
xchg
sub
sub
aad
push
sub
mov
jae
outsl
mov
pop
mov
repz
jbe
mov
sbb
mov
jne
dec
cli
imul
mov
jmp
mov
stc
mov
daa
pop
insb
push
push
or
mov
lea
int3
jb
mov
test
gs
mov
fidivrs
dec
dec
mov
jle
mov
lods
ds
pushf
xchg
xor
push
loopne
sbb
xor
add
fcmovne
insb
cmp
jo
sub
das
movsl
mov
inc
or
jnp
test
mov
sbb
mov
stos
dec
fstl
int3
lods
or
and
xchg
and
pop
aad
push
fdivrs
movsl
scas
daa
push
rclb
imulb
mov
cmp
cld
fisubl
stos
jae
lods
or
div
negl
das
js
jne
adc
mov
dec
jge
mov
ret
xchg
sub
popf
push
inc
sub
out
mov
mov
insb
push
jmp
das
push
jp
andb
pop
jbe
faddl
lea
int3
mov
ret
mov
pop
mov
int3
jp
repnz
rcrl
adc
movsb
bound
mov
push
ror
jno
jne
adc
fisttpll
cmp
mov
lock
xchg
adc
or
andps
push
jb
nop
data16
ror
in
int
xchg
test
lret
inc
pop
jg
sub
or
mov
test
negl
outsl
pop
xchg
sub
roll
dec
mov
pop
dec
xchg
rcll
push
in
adc
adc
sbb
fsubs
out
leave
imul
loop
cmp
mov
adc
or
xor
xlat
sbb
int3
lods
mov
in
xchg
sub
fldl
inc
push
test
lret
add
fcoms
jge
mov
out
sub
pop
pop
std
push
and
ret
or
sbb
into
notb
pushf
addr16
shrl
xlat
inc
cli
add
test
mov
mov
test
sbb
jmp
sbbl
sub
bound
add
scas
or
insb
push
push
jo
hlt
out
adc
lods
xor
test
jno
push
lcall
loopne
and
adc
out
pushf
or
xchg
leave
aad
xor
mov
rcrb
and
repnz
or
notl
jo
mov
cli
es
pop
icebp
subb
leave
aam
das
inc
mov
pop
inc
mov
and
sub
daa
pop
incl
into
add
lcall
xchg
xchg
out
push
dec
insb
scas
or
fdivrl
clc
lock
dec
cltd
int3
dec
imul
mov
or
movsb
xchg
adc
mov
push
lea
add
inc
and
inc
rcll
push
pusha
ret
xchg
pop
or
push
adc
or
aaa
push
xor
lcall
les
popf
sarb
pop
cmp
movsl
rcrl
icebp
addl
mov
push
or
pop
pop
mov
lods
leave
out
sub
mov
dec
xor
cwtl
dec
jmp
std
push
or
jle
ficoml
sti
adc
repnz
and
fwait
or
add
xchg
cmpsl
addl
lds
inc
inc
lds
mov
sbb
fistl
jl
jns
jo
inc
lods
sub
mov
jp
out
dec
ret
shl
pop
int
cs
mov
add
or
jnp
imul
dec
xor
lahf
js
mov
in
sub
out
jecxz
sarb
jb
popl
cmc
nop
push
or
push
loope
insb
and
xor
sbb
adc
dec
decl
push
cmp
popf
jb
inc
repz
scas
sarb
mov
jg
rolb
cltd
push
scas
and
sbb
mov
inc
dec
jle
loopne
imul
outsb
cmc
cmc
test
add
xor
xchg
pop
mov
jp
fnsave
das
pusha
mov
mov
xorb
je
dec
mov
pop
mov
ss
sbb
outsw
in
mov
xor
aam
jo
aad
pusha
cmpsl
xor
sbb
or
sbb
push
xchg
sti
xchg
add
adc
xor
cld
cmpsb
shlb
and
and
dec
lock
adc
je
lcall
loopne
fdivrp
ja
subb
es
bound
or
in
sub
int
sbb
lret
xor
xchg
in
dec
hlt
jmp
icebp
mov
bnd
dec
jle
inc
outsl
sbb
mov
jmp
fistpl
out
jno
sub
bnd
aas
mov
ret
mov
ja
xor
xor
xlat
cltd
sub
pop
adc
and
and
cli
mov
inc
and
mov
mov
inc
and
pop
jg
xlat
out
pop
jo
push
inc
adc
sub
xchg
clc
adcl
cmp
cli
jl
pop
ret
outsb
mov
cmp
call
mov
jnp
and
xchg
pop
pop
mov
mov
test
xchg
movsb
int
jmp
mov
pop
fcomps
imul
and
push
int3
stc
and
test
mov
insb
insl
lret
loop
and
nop
sti
sbb
js
inc
add
cmp
mov
stos
adc
fsub
mov
sbb
int
xchg
inc
loope
adc
lcall
mov
icebp
push
lock
mov
dec
inc
ljmp
mov
ss
mov
lea
lea
xor
xor
pop
data16
aam
sbb
pop
mov
cmp
stos
in
mov
adc
mov
clc
scas
adc
iret
roll
cmp
adc
clc
xor
dec
push
mov
fcompl
lods
and
mov
cmp
inc
imul
push
lret
ret
push
insb
outsb
sbb
test
rorb
dec
ds
jb
dec
adc
fsub
jnp
sub
mov
imul
lea
push
xchg
xchg
mov
pop
or
cwtl
in
dec
jno
addr16
jns
andb
cmc
and
in
push
je
and
inc
je
jp
jns
call
dec
adc
dec
adc
mov
or
push
iret
sub
jecxz
aas
jno
sar
and
mov
int
mov
push
ljmp
push
jbe
jno
lea
cltd
insl
daa
inc
inc
fstl
jnp
mov
xor
fcompl
mov
mov
sti
lret
nop
and
in
jl
sub
sahf
add
dec
pop
xchg
gs
push
sub
cld
pop
lret
or
mov
dec
sbbb
cmp
movsb
or
pop
loope
cltd
and
loopne
test
jecxz
repz
pop
into
les
pop
and
fwait
jmp
pop
xchg
and
sub
cli
arpl
loope
push
add
xchg
fadds
dec
enter
lcall
mov
pop
dec
bound
push
aas
or
xchg
or
insb
leave
jb
loope
in
ja
jo
jnp
sub
mov
add
ror
movsb
andb
mov
test
push
movsl
lods
cltd
or
xor
stos
aam
testl
mov
stos
push
or
retw
jmp
ret
mov
fidivl
lret
ss
ljmp
lea
cmp
scas
gs
stos
loope
or
cmp
and
sbbb
cmp
std
and
xchg
ret
jge
clc
jmp
sub
out
mov
jmp
enter
pop
adc
adc
add
and
and
int
inc
lret
or
leave
xor
stc
fimuls
popf
mov
and
and
adc
push
inc
push
xchg
cld
fidivrs
stos
pop
mov
mov
xor
fisttps
loop
xchg
mov
in
jbe
mov
or
push
in
add
sbb
xchg
mov
cmc
push
pop
out
dec
push
add
loope
enter
bswap
xchg
cli
cltd
inc
sub
popf
xchg
ret
and
or
pop
in
mov
dec
shl
icebp
mov
lret
jae
mov
mov
fistpl
xchg
loop
lds
std
pushf
frstor
dec
and
aas
fiadds
xchg
pop
inc
in
jmp
push
dec
loope
xlat
les
pop
lahf
mov
or
xchg
adc
cltd
stos
ljmp
int
aas
and
pusha
outsl
add
push
mov
inc
cld
mov
loop
inc
mov
or
in
add
mov
cmp
sbb
fiadds
cmp
outsl
outsb
xchg
stos
test
pop
cmp
lcall
and
push
push
pushl
inc
sbb
inc
jmp
jae
sbb
pop
cmc
int3
inc
in
fmulp
xchg
lock
adc
push
cmp
stos
cwtl
inc
mull
cli
in
and
add
mov
mov
add
dec
mov
jae
pop
in
mov
sub
lret
mov
aas
mov
ja
stos
jo
add
push
sahf
addr16
inc
jmp
xchg
xchg
lea
pop
push
jo
popa
stos
push
push
push
imul
mov
cmp
sbb
mov
inc
push
add
mov
inc
jnp
iret
inc
add
insb
mov
stos
adc
aad
dec
sahf
lds
subl
insb
jmp
fmulp
mov
out
rcrl
shl
pushf
sub
jge
leave
push
int3
hlt
stos
pop
inc
shll
sbb
lods
or
mov
jg
cltd
mov
in
aaa
mov
iret
cld
inc
out
adc
adc
nop
jp
jge
and
or
pop
add
jmp
pop
call
icebp
jle
mov
movsb
ds
mov
fs
push
inc
mov
mov
mov
xor
fadds
aas
mov
sbb
stos
fisubl
sbb
fs
and
call
push
test
loopne
lds
mov
inc
call
xor
stos
sub
cmpsb
cmp
inc
or
cmpsb
repz
dec
xor
jnp
aad
push
mov
pop
push
cmp
cmp
add
ja
add
mov
fisubl
and
bound
or
out
mov
push
fwait
jmp
test
push
dec
fildll
pop
push
loope
les
ret
xor
mov
mull
and
sbb
jnp
mov
je
and
and
sub
lahf
inc
gs
mov
jns
movsb
inc
jno
rorl
inc
lret
bound
sti
ret
mov
movsl
mov
out
mov
jnp
jae
dec
xchg
fwait
es
lock
mov
leave
push
jle
mov
dec
xor
aas
jb
mov
call
fld
lret
repnz
fsubp
mov
in
mov
inc
test
mov
pop
jnp
mov
shlb
dec
sbb
mov
negb
leave
dec
pop
push
pushf
dec
xlat
push
cmpsl
icebp
fcmovb
test
xchg
or
pushw
push
jg
push
cmpsl
lret
in
addb
adc
dec
cmpl
mov
rolb
icebp
mov
mov
mov
mov
cmp
ret
push
cmp
adc
cmp
call
xor
rolb
lcall
aaa
push
jmp
mul
ss
jb
out
stos
sbb
ja
sub
push
arpl
rcl
pusha
sbb
mov
mov
xchg
leave
int3
sbb
inc
pop
xlat
pop
adc
jle
sub
sbb
pop
inc
js
jns
or
mov
iret
sbb
mov
or
in
xor
xor
mov
fdivrs
push
mov
pop
cmp
sbb
or
sub
mov
sbbb
rcrb
out
not
loope
mov
loop
rcrl
leave
adc
mov
inc
add
push
fnstcw
lods
femms
std
rclb
push
leave
add
dec
mov
inc
shrb
test
push
mov
or
mov
pusha
mov
xchg
imul
mull
push
ja
into
in
mov
out
push
adc
add
or
cmp
and
inc
jo
fistpl
rcrb
mov
int3
cs
cmpsb
pop
sbbl
push
push
add
adc
sbb
das
dec
dec
loop
dec
xchg
mov
xlat
js
inc
test
and
mov
inc
adc
sub
mov
jg
sti
xor
aad
xchg
adc
lock
ds
and
sub
in
jecxz
mov
clc
sbbl
and
cmp
dec
or
fnsave
dec
xor
nop
ljmp
in
fmull
jp
inc
and
inc
insb
cwtl
sbb
add
arpl
push
mov
add
fs
add
sbb
imul
insl
inc
ret
sub
scas
and
dec
jns
dec
es
mov
adc
lret
les
mov
fsubp
xor
subl
icebp
std
in
push
mov
push
mov
mov
shll
add
sub
icebp
or
and
movq
mov
sbb
push
ljmp
mov
inc
ljmp
aad
inc
ds
sub
lcall
cwtl
les
es
int
sub
add
call
clc
or
enter
mov
loope
or
call
leave
stos
mov
push
insl
repnz
xchg
repnz
int
sbbb
aas
push
xchg
stos
and
ja
lds
push
adc
pop
lcall
arpl
xlat
stc
out
stos
push
ljmp
std
mov
push
or
inc
lods
lret
pop
stc
add
mov
push
jo
cs
mov
xor
out
push
data16
and
decb
bound
dec
lret
sbb
xor
outsl
pop
mov
jae
sbb
xlat
stos
xchg
clc
pop
into
xchg
cmpsb
push
insb
out
dec
push
popf
jno
nop
sbb
or
pcmpeqw
or
dec
lods
and
jge
push
mov
mov
fistps
push
test
popa
mov
and
mov
shlb
stc
xor
and
xchg
add
push
shl
inc
scas
or
cmpsb
add
xchg
stc
ret
mov
cmc
enter
inc
jb
cmp
xchg
test
stos
lret
pop
into
xlat
push
cmpsb
fadd
add
mov
jae
fnstenv
sbb
nop
xchg
cltd
push
mov
clc
xor
iret
repz
stos
rcl
sahf
cld
in
xor
loope
mov
push
leave
xor
sbb
inc
push
cmp
xor
adc
mov
negb
push
leave
imul
jmp
pop
push
xor
xchg
pop
dec
dec
subb
inc
das
adc
pop
mov
test
out
mov
fcoms
pushf
cmc
outsl
mov
ficomps
and
inc
daa
sbb
mov
inc
cld
push
ljmp
in
fnsave
sbb
cmpl
leave
insl
fldl
fimuls
cmc
clc
dec
aam
addr16
adc
add
cs
iret
xchg
inc
insb
cwtl
out
jmp
mov
testb
gs
jp
popa
sbb
out
mov
or
inc
add
into
pusha
aaa
fistps
jl
xchg
es
sub
cmp
add
push
and
cmp
cmp
push
test
rorb
shl
testl
pop
sahf
inc
dec
push
mov
imul
cmp
mov
adc
push
stos
mov
insl
xor
mov
inc
sbb
inc
push
aas
lahf
mov
xchg
insb
inc
pushf
or
pop
lret
bound
xor
loop
inc
push
xchg
pop
or
mov
mov
sub
xchg
and
outsb
or
fstpt
cmp
hlt
icebp
sbb
pop
inc
insb
sbb
sbb
icebp
xchg
jge
or
inc
xor
inc
pop
mov
mov
cmp
dec
insb
clc
jae
pop
pop
je
dec
stos
pop
std
or
sbb
jle
mov
inc
dec
dec
fs
push
lock
fidivrs
test
mov
inc
imul
pop
shl
arpl
xchg
cmp
pop
mov
dec
cmp
and
xchg
sahf
outsb
adc
ficoms
rorl
and
idivl
mov
xchg
sub
js
fcomip
pop
stos
xor
maxps
pop
loopne
ret
popf
and
adc
fiadds
cltd
bound
into
dec
test
les
dec
jmp
xchg
cltd
adc
fdivr
ret
fidivrl
stos
imul
adc
ret
cltd
xor
int
enter
shrb
repz
stos
int3
les
push
cmpsl
das
loope
ja
xlat
mov
call
int3
push
mov
inc
xchg
cli
xor
pop
or
and
xlat
mov
push
cmp
mov
scas
sub
push
pop
jae
xor
push
or
and
and
mov
pop
lea
jp
push
lcall
sbb
cli
sub
or
cmp
sub
jp
push
lcall
sbb
cli
sub
or
pop
lea
jp
push
lcall
sbb
inc
out
leave
push
xchg
push
cmpsl
ds
popf
pop
popf
dec
mov
lcall
push
test
ret
rorb
aam
fpatan
xchg
cmp
jo
add
push
jns
imul
mov
test
nop
stc
mov
or
pusha
jmp
pop
add
jns
imul
mov
adc
loope
mov
jle
or
adc
jbe
add
or
xor
rorb
roll
push
lret
push
loop
icebp
add
sub
stos
data16
cltd
enter
icebp
mov
outsl
or
xor
pusha
and
in
push
fwait
xchg
and
int3
adc
mov
lock
imul
icebp
xor
xor
imul
and
fildll
rcrl
and
cld
sbb
loopne
jae
inc
cmp
sbb
fiadds
sub
fisttpll
jmp
add
sub
enter
and
sub
loope
test
xchg
sbb
xor
sub
lcall
cltd
xor
mov
mov
adc
stc
mov
adc
pusha
xor
add
jns
jo
ljmp
mov
out
movsb
sar
lds
dec
push
inc
push
xor
mov
mov
lods
in
mov
sbb
pop
sbb
outsl
cmp
push
imul
xchg
test
nop
stc
mov
or
pusha
sub
add
jns
imul
mov
or
stc
mov
or
pusha
sub
add
jns
imul
loopne
shll
inc
in
inc
divl
xchg
cmp
ss
stc
inc
je
les
mov
xlat
dec
mov
xchg
cltd
shll
in
mov
pop
iret
repnz
xchg
or
cmc
xchg
mov
outsb
ret
es
pop
xor
sub
push
and
andb
repnz
out
hlt
shlb
cmp
push
jne
cmpsl
icebp
or
xor
ja
scas
paddsb
mov
lret
lret
movl
push
mov
arpl
icebp
xor
sbb
adc
test
push
lods
or
in
or
mov
data16
sbb
mov
test
dec
or
insl
mov
ss
icebp
ficoms
jecxz
scas
pusha
lret
stc
cmc
ja
add
pop
mov
dec
out
dec
xor
lods
sub
inc
int3
shrl
cmc
and
cmpsb
push
bound
mov
pop
dec
js
inc
xchg
arpl
inc
out
in
pop
xchg
idivl
mov
pop
shlb
or
inc
call
movsb
incl
jno
xor
jno
test
scas
lret
repz
xchg
xor
arpl
adc
cmp
hlt
scas
mov
sbbl
stc
enter
hlt
xorl
fnsave
xor
push
mov
pop
mov
lods
fistl
sbb
cmc
jmp
jg
mov
sbb
pop
or
inc
pop
das
fsubl
fistps
inc
pop
repz
fisubl
data16
lods
outsl
xlat
sub
push
jne
rolb
jge
fidivl
push
sbb
cmp
sub
out
jns
push
in
mov
jle
pop
mov
call
adc
pop
loop
jnp
adc
xchg
dec
mov
mov
rcl
or
cmpsl
jg
sub
xchg
pop
inc
cmp
popa
mov
aaa
stos
or
aad
sub
aam
adc
test
into
xchg
add
add
mov
aad
dec
adc
jmp
insb
xor
gs
xchg
push
adc
add
insb
out
adc
xchg
inc
adc
push
adc
jb
pushf
mov
push
jmp
xchg
movsl
aaa
aam
ss
cmp
jecxz
fiadds
pop
pusha
xchg
jg
fistps
aam
aad
dec
lods
xor
fsubrp
in
pop
mov
cmp
mov
mov
sarl
adc
loopne
movsb
xchg
stos
cmpsl
xlat
sbb
ror
xlat
sub
mov
add
inc
xchg
rol
mov
cmp
int
clc
xor
lods
xchg
lds
sub
lock
jne
mov
pop
fmull
pop
test
inc
mov
insb
mov
bound
push
jmp
xor
inc
testl
les
out
jp
test
jbe
mov
jb
mov
fisubs
xchg
sbb
sbb
rcrl
hlt
repz
mov
test
sbb
dec
cltd
cmp
ja
out
test
adc
sub
inc
decl
jp
nop
xor
enter
jo
jno
pop
sahf
das
push
adc
fnstsw
dec
mov
mov
jge
in
xchg
int
leave
mov
loope
je
daa
add
psllw
pop
xor
jg
inc
jnp
addr16
mov
dec
sub
sbb
cmp
outsl
fnstcw
add
rol
fimuls
scas
scas
xlat
sub
cld
call
aam
inc
rclb
xchg
add
cmpsb
jp
inc
loop
mov
inc
leave
mov
roll
inc
mov
jle
add
in
fstl
mov
out
dec
fistl
lods
ficoml
and
add
mov
xor
or
xorb
cld
rcll
fildll
adc
push
out
ljmp
mov
addr16
je
and
cmp
push
pop
lods
test
sub
sbb
pop
xchg
lcall
cltd
iret
in
aam
xchg
test
nop
and
sahf
and
xor
fsubr
xchg
cmpsb
cli
or
sbb
fdivr
enter
or
push
and
lahf
or
repnz
loopne
int3
addr16
das
lods
testl
jns
in
fcoml
dec
mov
inc
dec
cmp
sub
push
pop
mov
in
mov
in
loope
adc
sub
ret
push
adcb
inc
and
pusha
cmp
mov
or
lea
xchg
sub
addr16
movsb
int3
in
pusha
int3
out
fsubs
sbb
stc
nop
out
ja
scas
lods
pusha
fadds
cld
pop
filds
popf
wbinvd
hlt
lods
adc
cmp
or
mov
push
mov
test
mov
in
shlb
jnp
jb
jo
fneni(8087
aam
lahf
shrb
jmp
imul
out
sbb
fsubrl
sbb
or
scas
in
or
test
or
pop
daa
push
mov
mov
sub
xchg
shll
out
mov
test
and
divps
mov
dec
xor
decb
xor
mov
aam
fsubrl
mov
and
xchg
dec
lcall
jb
sub
jo
or
into
lock
cmpl
xor
shlb
int3
mov
or
lock
lds
js
cmc
dec
jb
inc
push
fcoms
lods
pop
sub
mulb
out
jnp
lahf
mov
pop
insl
xorb
hlt
mov
pop
scas
mov
sbb
adc
dec
xchg
xor
or
in
test
dec
or
xor
inc
or
dec
int
cmpsb
add
scas
in
push
pop
sahf
sti
mov
push
push
jae
pop
or
push
mov
idivl
call
pop
xor
xor
sub
adc
js
xchg
cmpl
xchg
or
pusha
cwtl
push
mov
pushf
push
repz
inc
aas
sub
mov
cli
ror
fstpl
push
jae
rcll
jbe
repnz
rorb
xchg
pop
mov
pop
xchg
movsbl
push
aaa
scas
stos
adc
mov
or
shrl
jge
jne
jl
sarb
lcall
jb
mov
mov
xor
ret
call
cltd
test
mov
and
adc
adc
loopne
dec
xor
xor
mov
and
mov
pop
inc
adc
fdivrp
scas
fldl
ja
es
popf
movsl
mov
enter
mov
mov
push
out
popa
ds
jae
sti
xchg
insb
sbb
repnz
fnstsw
cmc
mov
icebp
in
nop
addl
dec
ret
out
aas
mov
xchg
int3
div
pop
push
jbe
jle
adc
cmp
in
scas
sbb
scas
inc
mov
pop
ljmp
pop
pop
scas
call
mov
and
mov
lock
push
mov
or
dec
add
mov
xor
jo
sbb
inc
mov
xor
clc
cmpsb
cmp
cmpsb
testb
scas
aas
jb
jmp
addr16
sub
lret
inc
push
es
xor
xchg
jg
sti
mov
mov
jne
hlt
ret
mov
fsts
xorb
cmpsb
push
xor
movsl
in
imul
loop
lods
out
xchg
clc
adc
lea
push
movsb
and
test
ljmp
lock
inc
xor
pop
push
and
mov
xchg
out
or
mov
xor
add
mov
mov
pop
adc
ret
adc
outsb
test
bound
mov
bound
cmp
adc
mov
dec
mov
test
insl
adc
jo
dec
in
and
popf
mov
in
jne
xchg
mov
xor
daa
mov
add
xor
into
push
inc
and
subb
adc
out
pushf
cmpsb
outsb
pop
int
fldcw
cmc
js
mov
aam
shrb
je
push
repnz
mov
nop
add
rcrb
test
dec
jae
pusha
gs
shrl
mov
mov
js
jbe
add
jb
xchg
andb
bound
pop
gs
sbb
jg
stc
adc
xor
xchg
lcall
aad
ss
mov
and
out
pop
add
jecxz
lret
mov
in
mov
dec
mov
shlb
sub
xchg
sub
arpl
add
insb
push
mov
frstor
cmp
jnp
gs
pop
jno
sub
jne
push
movsl
test
inc
notb
mov
maxps
stos
inc
icebp
jne
ds
test
fisttpll
pop
ret
jnp
in
or
mov
ljmp
repnz
or
add
repz
mov
out
std
es
mov
inc
sub
test
dec
inc
add
jns
sbb
inc
jnp
jmp
mov
mov
lea
push
jge
pop
xchg
call
sarl
orb
cmp
jp
test
or
ja
mov
imul
nop
mov
jge
adc
lea
je
pop
mov
aas
jge
mov
rorl
sub
push
jne
push
scas
cli
outsb
aaa
loop
clc
lahf
xor
scas
test
cld
addb
cld
fdivrs
in
dec
arpl
fldt
ret
fnsave
fwait
insl
cmp
iret
shl
xchg
cmp
movsb
stc
push
bound
pusha
cmc
push
sbb
add
jmp
call
adc
xchg
adc
fists
cmp
or
push
and
pop
pop
imul
add
cli
cwtl
sbb
add
push
push
arpl
push
xchg
outsl
out
xorb
dec
push
shrb
fidivrl
dec
sub
or
stos
je
pop
stos
sti
mov
or
out
syscall
mov
pop
mov
cmp
aas
stos
addr16
jb
in
outsl
sbb
mov
or
adcl
add
xchg
adc
out
fidivs
movsl
add
std
rcll
inc
inc
mov
loop
mov
paddd
les
fidivl
repnz
fisubl
pop
call
add
out
sub
jns
jl
testb
jle
pop
push
ss
pop
popa
clc
das
jbe
pushf
mov
rcrb
shll
or
push
push
dec
jge
add
or
jle
scas
dec
sub
adcl
test
out
loopne
xchg
mov
mov
or
sahf
dec
mov
inc
sahf
add
inc
mov
mov
ds
test
fcomps
adc
mov
push
aaa
test
xor
js
or
je
adc
test
lret
shll
pop
xchg
popf
aaa
subb
lock
pop
fcompl
mov
push
fisttpl
jmp
mov
es
bound
arpl
xor
insb
daa
mov
enter
out
adc
mov
fstl
ret
lods
push
loope
jecxz
cmc
pop
push
addb
in
dec
int3
mov
lds
mov
addr16
lds
dec
dec
sbb
fsts
dec
insl
popf
daa
pop
flds
adc
fwait
movsl
ds
push
pop
push
test
decb
mov
push
sahf
in
sbb
cmc
rcrl
mov
lds
fidivrs
das
aaa
in
mov
mov
pop
test
mov
loope
and
lea
test
add
dec
dec
loop
loope
lcall
ds
sbb
mov
lds
pop
inc
or
xadd
daa
sub
ret
mov
repnz
lods
movsl
cmp
and
gs
dec
sub
mov
movsb
lds
dec
and
push
and
outsl
fidivrs
or
cmpsl
aam
mov
mov
xchg
jno
add
aam
decl
adc
imul
das
lea
dec
lahf
lods
xor
je
loope
cmp
movsl
push
lea
inc
lock
lcall
roll
pop
sub
fdivp
rorb
jmp
push
ficoms
rcll
adc
xchg
sahf
sbb
pop
pusha
jo
jg
xlat
and
push
pop
popa
sti
mov
test
add
outsb
cs
add
jge
cld
loop
lahf
hlt
dec
push
jg
jl
xor
mov
aad
pop
loop
and
mov
cmp
push
scas
rorb
mov
lds
fbstp
mov
and
int3
and
ds
mov
scas
xchg
dec
jg
mov
cmc
adc
hlt
inc
popf
int
scas
lahf
push
pop
test
std
push
ret
dec
jge
and
cmp
mov
adc
or
push
iret
mov
xor
leave
hlt
mov
cmpsl
dec
add
subl
sub
jns
dec
fsubrl
dec
lods
je
mov
in
ret
mov
lret
and
inc
outsl
pop
and
push
lock
data16
mov
icebp
pusha
out
inc
jge
jmp
inc
mov
and
dec
faddl
or
lds
add
mov
lcall
mov
xor
ret
and
dec
roll
sarb
lcall
inc
repz
xchg
sub
mov
movsb
arpl
add
imulb
imul
and
mov
xlat
mov
je
mov
mov
mov
mov
mov
push
and
fwait
jns
jb
or
fs
roll
out
and
dec
test
lcall
pushf
mov
xor
movsl
in
pop
imul
cvtpi2ps
and
repnz
fisttpl
loope
faddl
xchg
lods
ss
sub
cli
or
mov
shlb
or
nop
arpl
ficoms
popa
cltd
and
push
test
fcmovnu
and
sbb
aad
pusha
ss
lock
cld
hlt
add
pop
scas
dec
jo
sarb
and
mov
js
sbb
into
roll
into
xchg
fcomps
add
jb
xor
sub
je
mov
imul
into
inc
mov
dec
cmpsb
popa
sbb
mov
loope
push
and
loope
mov
imul
fs
stos
test
repnz
fwait
adc
sub
lock
push
mov
repz
cld
fstp
je
push
loope
dec
ja
pop
mull
lods
loop
push
jl
mov
or
int3
fcomip
sub
cmc
stos
adcl
cmp
movsb
ja
mov
out
gs
in
cmp
push
lret
pushf
pop
cld
aam
sub
sbb
mov
or
mov
inc
loope
xchg
or
mov
movsl
cmpsl
pushf
mov
mov
pop
cwtl
shrb
inc
mov
popf
sub
mov
cmp
ret
pusha
hlt
lcall
je
imull
xor
imul
ljmp
and
mov
repnz
int3
pop
es
sbb
xlat
in
sti
xchg
adc
pop
clc
pop
mov
xor
shlb
in
dec
in
jge
aad
xchg
xchg
subl
sti
insl
hlt
shrl
stos
out
fwait
cmc
jmp
dec
push
lods
jmp
pushf
cmp
stos
xchg
rorb
or
addl
sbbb
xchg
mov
sahf
sbb
mov
sub
mov
and
loope
scas
in
jne
or
enter
pusha
adc
pop
push
mov
out
test
and
stos
iret
jmp
clc
in
mov
xor
sub
ret
push
mov
sub
mov
andb
test
push
push
push
insb
fnstcw
divl
je
ss
xor
sub
xor
loop
push
lea
leave
jns
insb
pop
mov
inc
xchg
ja
fs
fstps
mov
adc
lock
scas
cli
fs
out
stos
lahf
mov
jbe
inc
jecxz
loopne
dec
lahf
insb
xor
mov
xchg
cld
push
xchg
bound
pop
adc
repz
xchg
mov
push
lahf
xchg
outsb
outsb
in
push
pop
dec
sti
sbb
test
dec
scas
call
adc
mov
mov
and
aad
rcrl
aad
mov
jmp
jle
pusha
daa
dec
push
xchg
call
insb
sub
xchg
xchg
in
add
jge
leave
aad
push
push
inc
cmp
adc
push
jae
and
out
test
das
ds
or
mov
add
sub
sbb
dec
out
pop
outsb
xor
mov
test
fcomi
cmp
getsec
fwait
mov
hlt
cmpb
inc
mov
mov
or
and
shl
mov
mov
add
jno
push
push
cmp
mov
stos
adc
fs
pop
iret
dec
push
mov
imul
sub
push
out
mov
sar
push
pop
push
mov
out
or
jp
cvtdq2ps
pop
in
pop
or
clc
pop
mov
aam
pop
pop
testl
xor
jmp
push
out
pop
jno
mov
push
data16
dec
testl
pop
jae
lods
jle
dec
pop
in
es
movsb
pop
fs
inc
loope
or
mov
movsb
mov
rcrb
jp
jl
fucompp
div
sbb
or
shrb
adc
mov
rcrl
repnz
into
nop
dec
shlb
push
sbb
push
pop
mov
lods
mov
sub
mov
pusha
pusha
pop
les
cltd
cld
ficoms
cmp
jbe
call
xor
hlt
mov
mov
test
push
je
outsb
cmpsb
leave
mov
subl
loop
out
in
xor
xlat
sbbb
mov
ret
add
repz
fdivl
stc
add
cmp
jae
rorb
xchg
jb
test
in
cmp
cmp
add
jno
inc
sbb
sub
loopne
test
loope
in
shlb
int
fs
add
cmp
inc
lock
frstor
mov
xchg
bound
fwait
pop
mov
shrb
add
sub
ss
mov
test
jge
xlat
fcomip
pop
sub
call
test
sub
cmpsb
hlt
ret
out
cmp
out
fstpl
push
xchg
aas
add
inc
sub
mov
mov
adc
aad
lods
aaa
push
fstl
mov
imul
jmp
lods
test
adc
les
cmp
add
mov
std
sti
dec
mov
roll
adc
xor
pusha
add
repz
mov
or
out
loopne
scas
xchg
pop
cmp
sti
cmpsb
lea
insb
jg
lcall
inc
sub
sub
inc
pop
pop
pop
orl
cmpsl
or
ficompl
sub
lock
mov
in
push
ja
stos
ficoms
clc
cmp
mov
aaa
and
and
test
lock
dec
pop
and
pop
call
je
shll
mov
out
mov
push
loop
push
movsl
aas
mov
jae
in
jecxz
xor
adc
call
push
out
cli
imul
jne
mov
sarl
pop
and
mull
sub
and
aas
dec
test
add
lret
and
xor
push
rcrb
inc
ret
ret
movsl
mov
jae
and
cmc
pop
mov
pop
movsb
jns
lea
scas
jge
das
mov
pop
dec
fiaddl
cld
inc
xchg
push
push
add
bound
shll
pop
xor
fs
cmp
push
dec
nop
cmpsb
popa
loop
lret
cmp
pop
jecxz
nop
xchg
ja
mov
xchg
in
cmpsb
out
stos
mov
je
sbb
aam
incl
test
cmpl
jg
pop
nop
mov
jle
pop
push
loope
or
or
xor
or
jnp
out
pop
jno
mov
mov
jg
lcall
adc
lret
ret
pop
xchg
xor
outsl
mov
mov
ja
fadd
jmp
jge
xlat
or
dec
pop
es
hlt
dec
adc
sub
fdivrp
loopne
fisubl
jb
mov
xlat
lret
sbb
mov
mov
push
iret
cmpsl
xor
and
jnp
lret
rorl
out
jo
insb
add
mov
push
das
mov
jmp
jbe
push
dec
dec
cmpsb
sbb
adc
jo
loope
mov
dec
pop
xchg
fmuls
xor
add
mov
mov
sbb
pop
xchg
push
aas
in
jno
fwait
sbb
pop
aam
addb
pop
andb
sbb
insl
mov
xchg
cmp
and
test
nop
stc
mov
or
pusha
sub
add
jns
imul
mov
or
stc
mov
or
pusha
sub
add
jns
imul
mov
or
stc
mov
or
pusha
sub
add
jns
pop
xor
loopne
hlt
flds
imul
pusha
sub
cs
out
xchg
xchg
iret
mov
fisttps
shlb
sub
pop
or
aas
imul
ljmp
iret
sti
mov
lret
cmp
bndstx
dec
mov
pop
dec
btc
stos
out
fisttps
scas
fistpl
or
cmp
dec
jnp
add
cs
and
mov
mov
sahf
xor
dec
rolb
mov
in
xchg
or
lret
movsb
or
dec
int
test
je
add
jmp
and
xchg
scas
nop
in
hlt
ret
push
or
pop
jmp
mov
mov
push
fists
nop
sbb
push
out
loopne,pt
xchg
adc
scas
pop
adc
jo
movsb
scas
add
mov
sub
fsub
jle
inc
pop
dec
adc
je
mov
mov
cmp
das
xchg
rorl
loopne
addb
adc
add
cmp
sbb
push
ljmp
in
and
sub
call
ja
stos
out
fisttps
scas
fistpl
sub
pop
or
aas
imul
pop
dec
data16
nop
fucomip
repnz
cmpsb
sti
rcrl
fistpll
sbb
sbb
jae
jp
imul
dec
fdivrp
into
in
mov
mov
pop
jp
sbb
or
jp
add
pop
fidivs
out
mov
jmp
fistpl
sub
pop
or
aas
imul
pop
dec
btc
stos
out
fisttps
scas
fistpl
sub
pop
or
aas
imul
pop
dec
btc
mov
add
loope
dec
dec
popf
sbb
sbb
xor
mov
mov
fldl
fsubs
cmc
ffree
and
leave
push
fidivl
aad
clc
aam
cmp
sub
repz
push
out
cmpb
mov
inc
iret
pusha
mov
sahf
jo
pop
arpl
or
sarb
mov
insb
cmp
inc
std
pop
push
imul
enter
fimull
cwtl
hlt
and
flds
dec
ret
mov
sbb
in
pop
ror
jle
dec
mov
je
mov
gs
sub
inc
mov
out
pop
mov
adc
inc
enter
out
data16
lock
fnsave
push
or
fwait
or
or
cwtl
push
cmp
sti
xor
mov
dec
call
insb
dec
or
sub
sub
cmp
jle
lahf
cli
aaa
lret
cmp
mov
mov
lods
inc
sbbb
jecxz
idivb
cmp
ret
pop
push
mov
add
and
and
repz
mov
adc
orb
mov
dec
mov
mov
pop
popa
pop
add
jns
iret
mov
nop
sub
call
scas
pop
sar
lea
fistpl
lods
popf
fcoms
sbb
push
sub
or
testb
loopne
pop
xchg
sub
mov
adc
sbb
push
dec
fimuls
pop
loop
das
mov
xchg
mov
aaa
gs
into
jbe
jp
mov
adc
in
add
aas
mov
sub
push
sub
shr
out
mov
insb
sub
ret
dec
test
mov
pop
pushf
add
push
cwtl
lock
or
mov
add
stos
mov
test
mov
outsb
insl
sarl
adc
pop
adc
out
lea
cmp
call
icebp
lds
sub
mov
cmp
dec
rol
popf
popf
dec
lock
das
push
inc
std
pop
cmovle
lea
mov
mov
push
mov
add
pop
into
int3
and
dec
mov
inc
iret
xchg
inc
jno
jle
cmpsl
outsb
mov
push
cmpsb
dec
outsb
fnop
fsincos
xor
fldenv
test
pop
push
and
xlat
popa
jbe
jmp
pop
jno
aam
andl
mov
sbb
std
int
pop
xchg
or
cmpsb
ss
popf
mov
cmp
lods
push
mov
mov
xchg
out
pop
pop
loop
xorb
aas
pop
repz
rolb
leave
sahf
pop
mov
ds
xchg
xchg
and
popa
sti
inc
lock
push
adcl
adc
das
cmpsb
gs
in
dec
arpl
cmp
fisubl
adc
dec
sbb
test
xchg
std
js
scas
fdivl
pop
fimuls
rcl
test
mov
or
xor
in
out
cwtl
das
jle
les
jecxz
aam
xor
push
lret
inc
hlt
adc
rorb
out
dec
xchg
dec
js
imull
mov
int3
xchg
or
orb
or
fidivrs
add
push
sub
mov
mov
fists
sub
jns
jne
repz
sub
jecxz
sub
pop
fldenv
push
scas
popa
mov
out
es
fstpt
rcrb
gs
push
xor
out
je
outsl
add
stc
push
sbb
movsb
pop
mov
fs
ret
scas
loop
inc
and
lea
or
mov
mov
test
je
pop
adc
sub
sbb
cmp
jb
add
pop
sbb
sbb
add
insb
cs
xchg
xor
mov
sti
sti
fcomip
adc
int3
pop
add
jle
sbb
pop
inc
cmp
into
xchg
push
into
aaa
rcll
aas
lds
sti
cmc
mov
adc
jecxz
mov
inc
pop
mov
aaa
xchg
push
sbb
inc
cmpsl
mov
push
lock
xchg
push
fistl
push
jb
jg
sbb
lods
or
xchg
add
dec
xchg
cld
sbb
mov
out
push
xlat
jge
fisubrs
jge
ret
cmp
fcomip
sahf
push
add
cld
sbb
sub
jb
mov
xchg
lock
imul
cmp
ret
lahf
out
ja
std
lcall
pop
pusha
mov
gs
int
push
pop
lds
jb
inc
push
jecxz
or
cmp
dec
or
pop
sbb
cmpsb
mov
mov
cli
mov
cmp
inc
sbb
push
xchg
xor
inc
rdmsr
add
add
pop
nop
loop
inc
xor
lahf
sub
adc
imul
inc
mov
jne
testl
or
add
mov
xor
sub
imul
lds
jae
stos
xchg
dec
cmc
fnsave
xchg
pop
xchg
roll
pop
xor
mov
loope
push
sub
xchg
test
lea
push
mov
out
push
repz
lods
js
push
sub
pop
shlb
jne
lahf
addr16
clc
dec
xor
int
or
loopne
dec
stc
cmp
sti
js
inc
inc
pop
fmuls
scas
ret
xchg
xchg
jae
mov
adc
in
xchg
xchg
lcall
push
pop
out
leave
imul
hlt
mov
dec
out
daa
imul
and
sbb
lcall
and
out
fwait
into
in
jb
adc
inc
outsb
xlat
or
icebp
and
cli
push
and
iret
icebp
fs
or
imul
cmp
mov
pop
push
fcoml
hlt
jle
push
sub
cli
sub
mov
mov
cld
sub
out
mov
pop
sbbb
inc
or
push
out
cmc
pop
test
stos
pusha
mov
dec
jg
pushf
xor
int
ret
adc
testb
jne
loop
xchg
test
sbb
push
xchg
mov
mov
push
lods
and
push
push
add
bound
add
dec
mov
xchg
cmpsb
fs
add
mov
and
and
shll
lcall
in
dec
push
lods
jae
or
jns
mov
imul
xchg
popf
mov
movsb
inc
out
inc
bound
icebp
push
pop
stc
lcall
inc
or
dec
dec
test
addb
movsl
mov
dec
xor
pusha
ret
outsl
xchg
cli
mov
add
pop
xlat
cs
subb
mov
hlt
pop
push
push
mov
sub
mov
xchg
pop
cltd
adc
fmull
or
dec
pushf
push
inc
andl
lds
popa
or
cmp
sub
sarl
aas
mov
mov
inc
pop
inc
loopne
jg
mov
popa
test
and
xchg
flds
lret
pusha
test
addr16
aas
lret
lret
cmp
push
jmp
ds
mov
push
sub
pop
xchg
js
xor
aas
inc
std
ss
mov
clc
cmp
fstpl
pop
bound
arpl
js
shrb
mov
arpl
add
dec
and
pop
aas
imul
imul
xchg
lahf
cld
lds
sbb
stos
jg
lahf
call
pop
mov
dec
out
fsubl
test
popf
loop,pt
mov
test
jbe
sahf
or
jb
mov
out
aad
notb
mov
mov
xor
fstpt
add
mov
out
jo
cmc
fimuls
loop
fistl
or
mov
and
jp
sbb
xchg
mov
add
or
mov
jo
cmp
cmp
loopne
mov
int3
cmpl
out
sub
mov
or
gs
inc
orl
iret
jo
mov
icebp
push
enter
js
out
mov
daa
inc
fxch
dec
cmc
aad
aam
xor
push
xchg
inc
add
fs
adc
pop
pop
inc
inc
gs
nop
mov
mov
sub
out
fs
pop
jmp
pop
movsl
ljmp
sbb
das
test
movsl
push
test
add
mov
mul
pop
and
in
test
shlb
add
fdivs
imul
in
mov
dec
inc
cli
pop
mov
add
xor
decb
aad
sbb
sahf
enter
lcall
mov
fwait
out
pop
sbb
daa
shlb
and
fsubp
xchg
aad
mov
mov
addl
das
cmc
dec
mov
jecxz
or
inc
mov
add
jno
add
cmpsl
imul
pop
loope
xor
push
or
pop
and
add
xchg
scas
scas
bound
mov
in
arpl
mov
xorl
and
push
sub
ret
popa
scas
call
popa
push
ret
loopne
loop
add
jbe
ljmp
out
mov
cmp
add
into
mov
cs
inc
jecxz
mov
aas
add
sbb
test
add
fcoml
pop
mov
jbe
lcall
pop
aaa
push
pop
xchg
icebp
out
inc
push
jg
dec
out
dec
fs
scas
imul
push
out
or
fidivl
xchg
test
std
frstor
xor
pop
mov
or
add
mov
clc
and
ficoms
mov
xchg
insl
jge
outsl
shrb
push
mov
push
lahf
sbb
cmp
xchg
fdiv
cs
ja
lcall
orb
jge
fcomp
into
orb
das
fidivl
sbb
and
rcl
sti
mov
push
divl
rclb
pushf
pop
adc
inc
inc
int3
push
dec
pusha
pop
mov
rcrl
mov
aaa
mov
mulb
imul
inc
ds
les
addr16
cli
adc
outsb
outsl
xor
cmp
aas
or
xchg
loop
adc
or
les
push
rcrb
shll
in
jae
push
push
pop
cmpsl
loope
pop
push
pop
or
in
movsb
roll
jb
cmp
adc
ljmp
adc
les
clc
imul
mov
adc
adc
cmpsb
pop
test
out
lods
inc
xchg
pop
cmp
mov
fldenv
pop
cmp
loop
jne
stos
sbb
fadds
jne
push
adc
cmpsl
scas
fs
aas
push
xor
lods
or
push
mov
dec
jo
and
leave
outsl
dec
pop
mov
stc
mov
jnp
cmp
jge
jnp
enter
adc
sub
mov
dec
xlat
es
insl
lds
scas
lret
inc
and
jge
push
mov
mov
dec
push
addr16
cmova
xchg
push
xchg
fs
daa
ret
out
jae
test
test
lods
xor
lcall
xchg
sub
movb
and
lods
push
pusha
addr16
aaa
push
lea
sti
mov
jne
dec
pop
out
mov
pop
jmp
xchg
negb
imul
movsl
shl
mov
sbb
popf
xchg
mov
inc
jne
xchg
cld
divl
cmp
mov
int
movsl
lret
cmp
pop
filds
and
pop
dec
insb
jo
mov
jne
cwtl
mov
dec
ror
inc
or
mov
loop
xlat
push
push
mov
dec
stos
imul
daa
add
wbinvd
mov
jae
ret
xor
jp
lds
cmp
bound
sbb
test
jl
ficoml
mov
daa
push
ret
mov
test
insl
xchg
jmp
inc
loop
loope
aas
fsts
into
or
jns
inc
dec
mov
loope
in
push
mov
mov
adc
and
gs
xor
lret
pop
outsb
pop
lods
cmp
mov
call
pop
add
and
jae
fdivp
out
cltd
pop
lret
pusha
jle
xor
bnd
ss
and
fucomp
cltd
bound
and
das
dec
mov
incl
clc
repnz
loope
or
or
push
scas
call
dec
mov
and
add
mov
sbb
inc
repnz
and
add
addr16
xchg
inc
mov
xor
loope
movsb
push
cwtl
and
jmp
push
cmp
or
sub
xchg
push
push
ja
dec
lahf
pop
nop
mov
loopne
fwait
cmpsl
fldcw
and
in
das
enter
add
add
imul
call
or
sub
add
and
pop
popf
popf
dec
mov
pop
or
push
and
test
scas
inc
mov
aam
add
mov
xchg
mov
cwtl
adc
adc
push
push
imul
ficomps
rcll
dec
sub
or
daa
cmpsb
sub
iret
repnz
mov
dec
cmp
inc
push
addl
adcl
mov
pusha
mov
xchg
scas
and
and
pop
inc
push
sarb
movsl
push
adc
cwtl
xchg
out
dec
sbbl
add
mov
adc
leave
pop
loope
test
adc
mov
mov
push
mov
cwtl
mov
mov
int
rolb
xor
fnstcw
stos
loope
movsl
dec
inc
xchg
movsb
xchg
mov
pop
clc
and
into
push
cs
or
shrb
cmp
jo
jl
push
inc
xchg
outsl
xlat
sbb
movsb
adc
xor
test
in
inc
sbb
fs
xchg
cmp
fcoms
sbb
addl
inc
int3
aam
sub
pop
jb
test
and
jnp
xor
xor
add
mov
xlat
xchg
xchg
stc
decl
sbb
decb
fisubs
repnz
leave
or
jl
xchg
xchg
push
xchg
mov
adc
add
adc
inc
sbb
adc
mov
mov
es
pusha
stos
mov
pop
movb
rorb
xor
push
mov
cmp
test
add
or
out
lea
mov
push
add
nop
inc
fldenv
sbb
outsl
push
xchg
mov
mov
xchg
pop
fwait
pop
sahf
mov
mov
roll
mov
jecxz
add
mov
jb
jg
je
fwait
ja
ljmp
aam
jge
je
push
jmp
or
scas
inc
sub
inc
movsl
pop
jmp
add
stos
push
sti
scas
dec
xor
mov
xor
scas
xor
insl
inc
ss
adc
cmp
inc
mov
jp
add
adc
jne
fdiv
push
sub
js
scas
ret
sub
mov
xchg
inc
inc
xor
xchg
and
cwtl
fs
rcrl
cmp
fisttpl
decl
xchg
lahf
sbb
adc
add
pop
out
jb
adc
outsb
jbe
pop
adc
rorb
push
pop
mov
ja
pop
or
xchg
cli
cmp
mov
outsl
movsl
mov
sub
adc
icebp
cmp
add
push
xor
mov
xchg
push
ljmp
cltd
popa
mov
rolb
xchg
dec
aas
lods
dec
inc
test
xchg
adc
jb
pop
jmp
inc
add
cwtl
sbb
xlat
sub
inc
xor
sti
adc
cmpsb
or
icebp
mov
xchg
cmp
mov
popa
push
sub
and
cmp
mov
rdmsr
lds
xlat
mov
in
cwtl
into
ljmp
mov
out
sahf
nop
inc
jmp
loop
pop
sbb
adc
add
mov
fistpl
fstpt
dec
popf
in
and
push
ret
and
test
cmp
cs
je
enter
sub
call
add
cld
pop
aas
in
push
sub
jp
and
push
or
pusha
fsubrs
or
mov
cmp
pop
std
mov
pop
stc
dec
sbb
inc
add
jecxz
sub
je
int3
lods
movzwl
dec
fwait
and
inc
xor
inc
mov
xchg
stos
and
mov
aas
push
ds
sub
rclb
mov
push
sbb
test
out
jo
jbe
mov
mov
fbld
ret
mov
call
sahf
fcoms
dec
scas
sbb
jg
andb
scas
js
cmpsb
jo
pusha
mov
xchg
push
aas
rcl
ret
xchg
icebp
mov
rcrb
testb
push
imul
int3
mov
in
pushf
pusha
push
pop
or
pop
push
xor
mov
clc
les
sbb
fmuls
xor
mov
ss
andl
mov
je
cld
sbb
jno
pusha
lret
mov
and
ret
addr16
xchg
dec
loopne
mov
jo
sbb
xorb
test
or
int
dec
add
cmp
nop
mov
dec
adc
mov
loope
lds
arpl
push
stos
xor
mov
sbb
mov
shl
mov
dec
mov
jbe
jp
aad
cmp
mov
aas
cmp
out
roll
mov
pop
mov
movsl
adc
pushw
xchg
ret
mov
mov
inc
cmpsl
imul
mov
ss
sbb
sbb
sti
inc
xor
jno
mov
divb
out
insl
mov
jb
test
pop
pop
mov
paddd
push
lock
cmp
js
enter
cmp
insl
sbb
lahf
fwait
cmp
shl
ss
inc
enter
std
stos
ds
jge
data16
aas
in
enter
push
inc
les
mov
dec
dec
adc
sahf
mov
push
ret
cld
adc
push
mov
xor
shlb
lds
data16
add
test
push
xor
scas
dec
sbb
fwait
pop
jb
mov
stos
add
js
pop
mov
cmpsb
mov
test
fs
jle
fildll
pop
cmc
inc
adc
fstl
mov
jnp
cmp
sbb
mov
sbb
jl
fcomps
jmp
pop
arpl
lock
fcoms
mov
xlat
mov
and
adc
fistl
and
push
mov
cmp
xor
in
mov
ljmp
push
cmc
xorl
and
cmp
fwait
jge
lods
add
hlt
jle
lcall
rcrl
mov
jmp
aas
ret
loope
and
in
sti
lods
dec
adc
sub
out
cld
inc
sbb
adc
outsb
cmovne
and
ret
adc
inc
xor
push
test
push
hlt
xchg
cmp
jbe
scas
push
push
dec
popf
ja
mov
mov
sub
dec
and
fs
je
ret
test
nop
scas
mov
cmpl
imul
xchg
mov
enter
fmul
fildl
lds
nop
xchg
adc
mov
adc
cmp
ret
shl
fsubl
xor
pop
outsl
lea
mov
je
das
mov
mov
dec
push
adc
inc
out
insl
mov
mov
fs
dec
adc
aaa
lods
mov
fnstenv
data16
fldl
data16
repnz
xchg
jae
or
add
sbb
cmovne
pop
rclb
sbb
std
mov
pushf
sahf
sbb
jne
lds
pop
dec
and
push
nop
cmp
mov
repz
jne
or
jle
je
xchg
cwtl
aad
mov
mov
mov
cltd
sbbl
loop
data16
jecxz
sbb
sub
push
push
test
jnp
jo
xchg
testl
imul
or
xchg
fiaddl
dec
stos
call
lds
insl
ret
xchg
stos
mov
iret
sbb
int3
pop
cwtl
mov
dec
enter
xor
push
cmc
enter
lahf
hlt
lea
or
or
inc
dec
out
inc
xor
clc
icebp
or
mov
cmc
jmp
mov
jo
fdivs
setno
dec
fnstcw
mov
shll
fwait
bound
repnz
push
pop
mov
leave
cmc
xor
cmp
outsb
js
test
popl
dec
insb
call
sub
nop
icebp
lock
and
clc
in
ds
jmp
rcrl
jno
lds
negb
pop
mov
inc
lods
cmp
mov
out
dec
mov
sbb
loop
mov
aam
mov
lods
pop
push
addl
ljmp
faddl
shl
xchg
jae
aad
jp
and
out
sbb
or
mov
andl
mov
cmp
cwtl
xchg
push
xchg
cmp
jp
test
out
jmp
repz
and
mov
cmp
inc
movsb
xchg
rorb
pushf
scas
push
pop
dec
out
lcall
scas
fistpl
sub
pop
or
aas
imul
pop
dec
btc
stos
out
fisttps
scas
fistpl
sub
pop
or
aas
imul
pop
dec
btc
sub
pop
mov
jnp
jmp
fistpl
sub
pop
or
aas
imul
pop
dec
btc
stos
out
fisttps
scas
fistpl
sub
mov
or
or
cmp
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
add
xor
add
pop
adc
loope
std
mov
mov
lock
add
jno
inc
xor
and
pusha
add
and
icebp
mov
ret
loopne
lock
add
jno
pop
xor
cmp
pusha
sbb
addb
lret
shlb
fbld
popa
jno
and
pop
call
dec
push
jp
lds
lea
jge
lret
out
xor
leave
int
inc
stos
push
iret
pushf
mov
sbb
dec
rcll
andl
xor
stos
jne
std
ds
mov
xor
mov
jg
xchg
add
aaa
jno
inc
aaa
popa
sub
scas
icebp
cmp
out
jo
sbb
cs
repnz
or
push
pop
xchg
nop
movsl
mov
jo
pushf
push
sti
adc
test
rcll
xor
xchg
sbb
lcall
pusha
pushf
loopne
in
aam
shll
les
jle
add
push
xor
and
pusha
sbb
cmp
jmp
sarb
cmc
gs
jno
inc
jbe
and
insl
hlt
jl
mov
mov
xchg
cmc
mov
test
fs
xor
and
gs
nop
fnsave
mov
mov
lcall
and
add
add
and
icebp
mov
mov
lock
add
jno
inc
xor
and
pusha
add
and
icebp
mov
mov
lock
add
idivb
sbb
push
xor
inc
lcall
loope
fsubrl
inc
jle
pop
add
mov
pop
cmp
into
out
jge
orl
subl
subl
mov
pop
in
add
les
imul
adc
xor
add
lock
out
xor
daa
mov
jno
pop
jge
aas
xorl
fisubl
fsubr
out
test
push
mov
xor
addr16
mov
push
scas
lock
or
aas
or
push
mov
xchg
mov
stos
or
mov
loope
and
lods
mov
in
nop
mov
push
xlat
nop
fmuls
stos
pop
mov
add
sub
js
xchg
clc
add
fstpl
stc
mov
subb
ret
push
mov
xor
nop
fwait
xchg
push
inc
mov
dec
inc
out
sbb
lret
cmp
dec
jo
pop
xor
fwait
xchg
inc
inc
popa
out
push
test
push
adc
xor
add
loop
mov
shll
jp
lods
int
mov
pop
mov
rcll
hlt
mov
in
out
and
int3
and
mov
inc
leave
mov
popa
lods
dec
and
aam
fisttps
ja
lods
inc
pop
ror
lods
adc
sub
add
or
mov
sub
pop
bound
sbb
cld
cmpsl
jo
loop
lea
pop
outsb
shll
inc
sar
sub
push
xchg
fwait
add
dec
mov
cmpb
shll
pop
and
fwait
mov
add
sub
ja
mov
or
loope
jle
addr16
not
repz
pop
and
repz
pop
pop
xor
and
shlb
aam
push
inc
scas
sbb
lods
fnstenv
mov
and
push
bnd
ret
jl
jge
push
mov
sub
lods
push
sbb
lods
ret
call
jge
push
call
subl
lock
xor
sbbl
fidivrl
inc
cmp
mov
pop
ja
call
pushf
cld
cwtl
mov
and
outsb
in
push
test
int
jge
lods
cmp
insl
xchg
xchg
fbstp
mov
or
mov
lea
inc
in
or
dec
and
jno
pop
cmp
xchg
loope
cmpsl
mov
cmp
push
jne
xchg
xor
xlat
and
call
repz
mov
adc
dec
sub
fcmove
wrmsr
fdivs
push
es
mov
fsubs
sbbb
push
stos
cmovb
std
mov
sbb
pop
push
clc
out
dec
int3
push
push
sbb
sub
xchg
or
icebp
lret
xchg
mov
xchg
lock
cmp
lock
mov
pop
xor
adc
out
in
dec
push
fidivrl
sub
lock
insb
js
pop
push
rorb
mov
fsubl
push
pushf
aaa
aam
pop
shl
out
jae
cmp
push
or
xchg
or
test
dec
xchg
jb
jnp
pmulhw
and
sub
subb
cwtl
inc
pusha
out
or
xor
pop
add
cmp
push
mov
gs
jae
push
cli
in
sub
std
mov
sbb
dec
jbe
cld
lock
mov
xchg
mov
das
mov
dec
jb
inc
mov
fs
fistl
add
rclb
das
lods
stos
jns
hlt
in
xchg
data16
ljmp
pop
cmp
out
bound
in
dec
out
mov
jo
cmp
shll
mov
jo
rcl
add
jo
int
sbb
sub
subb
dec
push
or
jecxz
addb
adc
lds
repz
jae
in
sbb
add
lods
outsb
hlt
lahf
add
pushf
sub
mov
ror
or
xchg
xor
cmp
out
and
mov
cwtl
insl
aad
mov
es
and
in
mov
negl
mov
fwait
enter
and
dec
rorb
or
sbb
dec
cmp
subb
mov
mov
nop
jge
ss
arpl
popf
ss
inc
outsb
xchg
les
in
add
les
push
std
push
lahf
sbb
std
jl
daa
cld
ljmp
insb
lcall
fisttpll
push
dec
mov
lret
aad
imul
ss
out
movsb
test
push
fisubrs
adc
std
cmp
or
mov
inc
fdivrs
push
mov
decl
mov
enter
or
pushf
sub
iret
decl
sti
shrb
jae
mov
movsb
aam
inc
aam
sbbb
test
push
popf
inc
pop
xchg
dec
fcomps
repnz
cmp
data16
xchg
xchg
sub
clc
das
sahf
fmuls
xor
mov
fs
mov
pop
fistps
adc
xor
xchg
and
push
ljmp
imul
and
xchg
shl
fisubrs
or
adc
xor
aas
cli
inc
xchg
aad
sub
jge
dec
inc
mov
leave
push
dec
and
sbb
pop
push
scas
inc
loope
scas
das
mov
mov
fldl
xchg
fs
push
add
jmp
orb
jbe
or
push
and
mov
mov
pop
fsubl
push
stos
mov
movsb
add
es
inc
sub
out
sub
or
cmp
idivb
stos
push
enter
jmp
cmp
adc
adcb
sbb
sub
jge
stos
pop
in
add
push
scas
das
repz
mov
mov
aad
repnz
int3
mov
sub
ret
mov
je
cmp
rcrl
lds
cmp
loop
sub
test
dec
push
adcb
fwait
shrl
add
loope
cmp
lret
repz
inc
mov
into
fnsave
mov
push
cs
int3
fidivs
jecxz
insb
push
sbb
out
adc
daa
or
ja
or
pushf
xor
jno
jle
ret
rcl
adc
js
movsl
shrl
loop
adc
inc
jmp
jae
adc
pop
cli
sbb
stos
sbb
inc
xor
xchg
cmp
cmc
cmp
or
cmp
out
movsl
lret
bound
in
pop
and
pusha
mov
sti
test
push
iret
andb
mov
ja
sbb
mov
or
lahf
bound
pop
incl
sbb
addr16
movsb
data16
out
inc
fldl
ja
push
xchg
aam
push
pop
dec
mov
pop
clc
jbe
mov
xchg
movhps
adc
mov
into
mov
mov
or
add
jp
es
and
cmp
les
pusha
aas
and
jo
mov
es
cmp
lret
nop
dec
mov
ss
mov
inc
sbb
pop
je
sub
dec
pop
enter
sbb
mov
pop
ficomps
jbe
jae
test
jbe
xlat
stc
dec
xor
pop
lds
dec
sti
rep
fwait
sbb
test
fs
push
mov
in
sub
das
lret
mull
outsb
scas
pop
adc
cmp
shl
cmp
dec
cmpsb
movsb
out
push
movsl
xchg
sbb
shlb
testb
mov
dec
dec
push
mov
test
in
sahf
and
adc
scas
test
and
std
test
push
notb
jl
inc
adc
test
sub
push
jbe
loopne
adc
sarb
push
jecxz
mov
pushf
sahf
andb
lods
push
testl
aam
cmp
cmp
add
push
mov
or
fwait
sub
jecxz
cld
pop
and
dec
iret
add
mov
shll
icebp
dec
shrl
inc
or
test
push
sub
adc
push
fadds
cmp
pop
scas
xchg
sub
test
jns
out
shr
test
push
in
sub
and
cmp
xor
push
pop
shlb
rorl
std
xchg
test
mov
cmp
loope
daa
lds
aam
divb
pop
xchg
mov
pop
sub
dec
jmp
rorb
scas
data16
sar
js
aaa
or
loop
ss
pop
jle
repz
pop
pusha
pop
cmp
inc
int
jnp
into
mov
jno
ss
repnz
dec
adc
push
add
adc
pusha
insl
mov
lds
or
xchg
out
jne
xchg
dec
repz
lret
jmp
or
mov
add
mov
push
jge
push
jns
data16
sbb
bound
xchg
sbb
test
inc
pop
notb
loopne
adc
dec
enter
movl
push
outsl
push
push
mov
jne
aam
xchg
push
mov
push
jns
cmc
mov
adc
sub
mov
pop
xor
cmp
inc
addb
out
mov
arpl
pop
fwait
xchg
xchg
mov
lds
jg
push
add
mov
int
push
dec
inc
adc
dec
inc
sub
ss
es
fcompl
insb
lret
add
pop
nop
cs
pop
xor
mov
mov
mov
test
rcl
add
jl
sbb
out
inc
mov
lea
lods
pop
aas
dec
mov
pop
pop
or
push
out
arpl
adc
dec
icebp
or
push
xlat
into
sbb
jo
repz
enter
sahf
jb
nop
arpl
out
and
sbb
sub
mov
fs
test
js
daa
int3
gs
adc
imul
mov
add
sub
insl
push
sbb
xchg
cmp
inc
and
frstor
gs
jge
sbb
adc
ds
hlt
add
jp
xor
sbbb
jb
mov
sbb
pop
xor
cmp
jg
fldt
inc
testb
ds
dec
lods
jecxz
mov
into
jbe
hlt
icebp
mov
aaa
outsl
lret
ja
dec
xor
shlb
mov
xor
js
inc
gs
fimuls
insb
or
inc
inc
pop
dec
fwait
mov
mov
mov
sbb
pop
push
sub
je
rorl
out
in
outsl
and
adc
push
loope
pushf
in
mov
inc
iret
out
roll
int
sub
dec
inc
call
xchg
or
and
shll
lret
xchg
jns
int3
outsb
out
leave
cmc
push
out
arpl
inc
dec
test
dec
popf
lret
or
outsb
inc
push
repz
cmp
jecxz
jbe
outsb
mov
mov
and
adc
cmc
arpl
sbb
clc
ret
cmpsl
mov
dec
in
lret
arpl
mov
xchg
in
fldt
scas
and
and
mov
mov
popa
cmp
jge
xor
lret
clc
fmulp
push
aas
rolb
and
loopne
adc
jne
adc
aad
insl
andb
adc
stos
outsl
adc
push
lea
rolb
in
mov
jae
hlt
xor
adc
adc
and
cmpl
mov
pop
lea
xchg
mov
add
imul
mov
dec
and
js
inc
cmp
mov
cwtl
pop
js
jl
xlat
arpl
outsb
ljmp
mull
cmc
xor
mov
cld
loop
cltd
cmp
push
enter
add
jl
mov
jmp
bound
mov
nop
mov
repnz
std
and
test
mov
push
test
sbb
push
fists
fwait
inc
or
lahf
repz
jns
and
cwtl
scas
sbb
or
sub
aaa
push
std
xlat
mov
mov
mov
shll
cmpsl
gs
sbb
lret
repnz
push
pop
into
flds
popa
testb
js
sbb
xchg
or
iret
cs
adc
aas
inc
sbb
mov
outsl
fucom
pop
mov
mov
arpl
arpl
pop
cs
popf
inc
divl
inc
nop
fisttpll
mov
or
into
cmp
shlb
jae
dec
sbb
repz
inc
bound
cwtl
stos
test
jb
xchg
mov
fwait
add
aad
test
pop
test
scas
cmp
ret
push
clc
lea
in
jmp
bound
ret
mov
jnp
sti
xor
dec
cmpsb
xchg
into
arpl
pop
mov
pusha
push
in
jo
mov
jno
mov
test
mov
test
sub
jp
fisttpll
mov
cwtl
push
xlat
fwait
mov
mov
loope,pn
xor
cld
fstpl
test
dec
mov
xor
mov
lea
push
sub
in
xor
mov
cmp
jge
in
bound
sub
test
xchg
test
mov
cmpsl
sbb
adc
repz
es
movsl
push
mov
arpl
bound
push
xchg
cmp
mov
mov
popa
pop
jmp
inc
xchg
arpl
sbb
std
in
add
cmp
sbb
inc
push
je
mull
mov
lock
movsb
into
bound
loopne
adc
sub
faddl
pushf
xor
outsl
or
and
fnsave
lea
jle
mov
or
sbb
sahf
sbb
rcr
ljmp
push
sub
lea
xchg
aam
bnd
cmp
outsl
xor
ret
cld
test
icebp
pop
dec
jno
testb
mov
inc
inc
and
into
jecxz
fcompl
pop
push
aas
in
pop
jne
xlat
into
jmp
cmp
lods
push
pop
xor
scas
jle
cmp
popa
test
lock
pop
fimuls
inc
inc
and
test
mov
mov
and
fsubl
or
push
adc
hlt
int3
xchg
fs
inc
jo
and
sub
mov
xchg
pushf
aaa
es
push
inc
scas
scas
mov
jp
fwait
pop
dec
popa
mov
xlat
arpl
outsl
mov
adc
or
scas
xor
fnstenv
adcb
mov
pop
mov
add
ds
jno
or
std
ja
stos
and
out
sbb
out
mov
xor
jg
mov
add
std
fcomip
cli
stc
inc
and
mov
xchg
or
popf
push
or
scas
xchg
add
dec
addr16
addr16
shll
daa
popf
mov
dec
push
hlt
js
mov
ljmp
enter
sarb
jg
and
push
mov
inc
cwtl
dec
popf
iret
icebp
add
ljmp
mov
clc
lock
add
pop
mov
jle
sub
lea
pop
sbb
jns
clc
cmp
fdivrl
ljmp
mov
cmpsl
das
addr16
aaa
cli
fdiv
push
int3
in
jns
call
daa
fadd
out
mov
dec
push
dec
movsb
loop
push
sub
daa
imul
dec
adcl
ljmp
push
xchg
roll
fldt
jl
in
sub
ret
inc
or
inc
and
fsts
aam
inc
leave
cmp
cmp
mov
pusha
sub
mov
addr16
movl
sbb
cmpb
lock
mov
push
rolb
insl
imul
dec
mov
das
cld
add
addr16
nop
cmp
test
and
scas
add
inc
insl
inc
movsb
xchg
cld
cmp
push
loope
mov
push
iret
repz
idivl
jge
movsb
lret
jo
adc
jp
adc
stc
shl
pop
and
cmp
sub
aad
xor
adc
mov
fwait
loop
mulb
das
nop
test
enter
imul
lds
xor
fcoms
test
sbb
inc
mov
add
add
mov
je
addr16
xor
fstpt
mov
call
sbb
orb
adc
push
out
adc
lock
out
pop
addr16
test
mov
adc
or
movsl
cmp
arpl
icebp
mov
jge
shrl
adc
xchg
xor
or
cmp
fs
or
lret
adc
xlat
sarl
rolb
xor
pop
into
mov
das
dec
mov
jo
pop
push
sbb
insl
mov
popa
xchg
inc
fwait
data16
cmp
nop
sub
sbb
add
and
mov
xor
dec
gs
sub
lcall
orb
mov
push
rclb
push
or
fsubrs
jo
add
cmp
jge
or
imul
arpl
shrl
xchg
imul
and
pop
jo
fidivs
scas
mov
sarl
int3
movb
dec
sbb
rcrb
mov
mov
out
std
push
psllq
sub
push
in
cmpsb
xlat
outsl
inc
cmp
out
mov
aam
aam
fcos
call
jecxz
and
inc
les
sub
fsubl
mov
jno
mov
mov
push
adc
mov
xor
jb
sahf
jo
mov
push
pusha
js
aaa
lods
jle
mov
push
fldcw
cmp
test
mov
cmp
nop
js
pop
loopne
leave
movl
xlat
int
insb
mov
or
jb
loope
push
or
push
out
aas
loop
pop
jmp
adc
xchg
out
in
sbb
or
and
arpl
xor
cmp
test
inc
cld
and
jb
jmp
jbe
mov
mov
pop
dec
test
inc
sub
cmp
xchg
mov
pcmpeqb
leave
sub
scas
lock
xor
push
pop
fsts
fldenv
adc
mov
push
cmp
mov
stc
hlt
and
lcall
call
pop
rorl
mov
cltd
insl
xchg
xchg
ja
imull
push
out
hlt
scas
test
cmp
lock
faddp
cmp
xchg
dec
inc
ficoms
dec
loopne
xchg
jg
popa
inc
xchg
mov
jp
in
xchg
ret
repz
or
outsl
pop
nop
push
repnz
lds
add
cmp
test
es
movsl
loop
punpcklbw
pop
mov
cs
or
or
adc
jae
stc
mov
sbb
daa
lds
mov
sub
jae
jne
add
es
xchg
cmp
mov
rclb
sbb
jns
jae
roll
in
fwait
insb
adc
inc
loope
or
xchg
mov
sbb
int3
jmp
nop
in
inc
cld
fdiv
push
push
xor
and
inc
cs
push
sbb
fidivrs
sti
repnz
or
aaa
or
xor
adcl
dec
enter
subb
in
jmp
lahf
or
or
negl
in
scas
jb
je
stc
leave
push
inc
out
fimuls
scas
inc
aaa
mov
std
adc
rcl
or
shll
jbe
cmpb
sub
cmp
adc
hlt
aam
add
lds
xchg
add
stos
nop
jnp
fstps
mov
out
and
mov
mov
out
out
scas
dec
mov
and
push
jp
or
stc
inc
xchg
push
ret
and
incl
rol
mov
fbstp
pop
xor
dec
inc
mov
jo
bnd
xor
cwtl
inc
xchg
push
mov
inc
fsubs
test
arpl
lret
out
std
and
inc
mov
push
jae
mov
jbe
stos
je
and
pop
jb
lock
xchg
jb
ss
test
in
pop
sbb
dec
sbb
jae
in
dec
mov
pop
mov
jmp
or
dec
sbbl
add
dec
std
cmp
and
ds
loopne
cmovb
adc
sti
jbe
cmp
mov
stos
jnp
loop
add
fs
hlt
pop
les
and
mov
inc
cmp
dec
jg
sub
xchg
cwtl
cmpsb
imull
xorb
dec
leave
stc
test
jo
in
lret
xchg
mov
mov
push
divl
xchg
mov
dec
aaa
jno
fbstp
test
ds
fdivl
ret
enter
xchg
lods
or
rol
shrb
jbe
mov
gs
cltd
inc
pushf
fyl2x
inc
mov
dec
mov
fdivrs
out
or
xchg
pop
push
aaa
mov
and
addr16
sbb
sti
test
test
cli
or
pop
cld
lds
push
loop
xchg
xor
and
pusha
add
and
icebp
mov
mov
lock
add
jno
inc
xor
and
pusha
add
and
icebp
mov
mov
lock
add
jno
inc
xor
and
pusha
add
and
mov
shlb
xchg
add
jno
inc
xor
and
loopne
lock
outsl
pop
or
mov
mov
pop
dec
sbb
outsb
or
xchg
cmpsb
jne
or
jl
push
mov
aad
in
cmc
addb
movsl
data16
dec
xchg
cmpsb
jne
add
out
adcb
cmc
test
icebp
push
movsl
es
lahf
adc
xchg
jecxz
mov
adc
or
out
jne
jns
inc
movsl
adc
aas
rclb
jbe
xchg
and
add
mov
push
pop
and
ss
jbe
mov
test
dec
or
cld
or
ljmp
and
inc
sbb
add
xchg
and
cmp
adc
mov
fs
push
inc
or
xchg
sbb
sbb
cmpsb
ljmp
mov
push
add
ljmp
stc
xchg
adc
lret
xchg
test
rclb
xor
loop
xchg
popa
out
jge
add
loope
ss
xchg
push
cmc
ja
mov
inc
push
sub
sub
or
fprem1
add
test
jbe
push
data16
mov
and
addb
ss
in
mov
aaa
aam
xchg
and
sbb
ss
push
xchg
movsb
inc
xchg
push
mov
xchg
pop
in
sub
and
daa
repnz
inc
ret
fst
and
mov
in
mov
std
arpl
notb
lock
pop
hlt
sbb
adc
mov
xor
push
in
cmc
test
push
movsl
data16
inc
xchg
cmpsb
jne
add
out
test
aad
in
cmc
test
push
movsl
data16
inc
xchg
lcall
push
mov
ret
pushf
adc
inc
lret
stos
es
and
sub
stos
out
push
mov
out
push
stos
dec
jg
pusha
pop
adc
adc
mov
mov
out
xchg
and
test
outsb
xchg
mov
xlat
int
loope
inc
jne
in
negl
scas
lds
xor
pop
jo
pop
mov
cmpsl
cmp
dec
int3
lret
pop
add
add
sub
xchg
add
aam
out
adc
mov
sarl
fnsave
mov
cmp
pop
push
add
jecxz
in
subl
inc
add
pusha
mov
dec
iret
sub
nop
popa
pusha
jbe
mov
gs
adc
push
inc
xor
rorb
repnz
dec
repz
push
or
sub
sbb
mov
decb
mov
repz
mov
ret
pop
test
cmc
mov
push
loopne
test
loop
adcb
jno
mov
jno
mov
mov
add
push
xor
popf
cmpsb
xchg
enter
pop
inc
roll
inc
fidivrs
scas
aas
lcall
pop
xchg
sbb
jle
insb
push
shlb
xor
ds
sub
xor
sbbb
sub
dec
sbb
pop
jmp
and
sbb
shl
mov
dec
and
pop
fsubr
frstor
add
int3
test
mov
lods
icebp
xor
shlb
push
mov
loopne
fiadds
lcall
cmpsb
pop
ja
addr16
sub
movsb
push
lcall
xchg
outsl
shrl
xor
rcll
pop
rcr
aas
andl
shrl
sub
cmp
xor
out
sbb
out
es
xchg
sbb
repz
sti
rorl
jmp
subb
movsb
outsb
or
dec
sub
adc
pushf
stc
push
dec
mov
cmp
clc
mov
es
insb
inc
jno
jmp
out
test
mov
pop
sub
lods
mov
fwait
scas
stos
out
int
push
ljmp
inc
imul
adc
dec
inc
aam
jne
jg
adc
rclb
jle
test
sarl
pop
inc
scas
popl
push
push
push
push
or
mov
sub
inc
dec
mov
stos
out
movsl
cmpsb
xor
xchg
pusha
mov
test
or
add
mov
rcrb
mov
cmp
or
adc
jle
push
movsb
pusha
sbb
jo
push
inc
push
clc
les
sti
leave
shlb
push
rclb
mov
mov
cs
aad
mov
cwtl
inc
xor
and
dec
adc
xchg
or
pop
and
test
jne
dec
or
mov
pushf
insl
adc
lret
jecxz
shrl
dec
dec
pop
scas
in
ljmp
jmp
fisttps
in
push
xchg
mov
jo
pushf
loopne
pop
cltd
cmp
cmpl
test
fnstcw
ret
jbe
jle
mov
lds
mov
fdivrl
mov
jecxz
ds
movsb
inc
in
scas
sbb
out
or
dec
test
ja
gs
and
or
inc
xchg
or
lret
daa
stos
je
aam
scas
pop
ss
xor
fidivl
out
std
clc
sbb
cmp
mov
xchg
and
xlat
sti
jge
mov
xchg
jno
mov
push
fildl
ss
add
rclb
mov
inc
xor
sysexit
xchg
cltd
fdivl
jne
or
je
jae
xchg
loopne
push
ljmp
and
cmpsb
mov
pop
cwtl
xor
sub
jmp
jmp
mov
fdivp
sub
lea
mov
ret
mov
or
hlt
std
or
mov
stos
dec
fwait
xorb
loopne
nop
pop
lret
mov
push
out
lret
pusha
fiaddl
inc
pop
inc
jne
pushf
test
sbb
jecxz
addr16
add
mov
lea
pop
call
adc
nop
and
push
std
or
xchg
add
jno
push
js
or
clc
or
push
pop
shufps
popa
add
outsb
mov
fimull
add
add
pop
and
call
divb
mov
inc
out
jle
cmp
gs
loop
repnz
push
and
xchg
mov
add
cltd
push
adc
test
mov
rcrl
stc
xor
dec
dec
mov
addr16
sahf
in
add
scas
test
ret
push
fsubl
gs
mov
lcall
cwtl
fsubrp
jle
push
add
aad
scas
sub
outsl
daa
mull
in
sahf
stos
fs
notl
inc
aad
add
and
jp
popf
in
xchg
lods
lcall
adc
addr16
sbb
movsb
test
cmp
ret
mov
and
add
sbb
mov
sub
jo
dec
push
es
jnp
aam
mov
or
pusha
clc
mov
xor
cmpsb
mov
aas
in
adc
iret
mov
push
mov
fdivs
lods
and
add
cltd
into
inc
jae
bound
adc
andl
mull
fnstenv
jl
daa
gs
ret
adc
mov
lcallw
shlb
lcall
flds
dec
int3
cmp
pop
shl
push
mov
roll
ret
mov
clc
hlt
int
jno
cmp
sub
jg
test
or
mov
xor
sub
cmp
xor
daa
sub
movb
mov
fnstenv
pop
and
mov
cmp
push
pop
sbb
pop
jmp
leave
jo
mov
jecxz
inc
xor
sbb
or
push
mov
jne
mov
inc
arpl
sbb
pushf
je
jle
loop
lea
xchg
out
xor
pop
js
cli
test
inc
mov
add
dec
sti
cmp
xor
mov
mov
xchg
xor
dec
push
lods
mov
mov
std
xchg
subl
shlb
sbb
fisubrs
xor
out
sbb
aad
or
lahf
dec
xchg
mov
shll
dec
fistpll
leave
scas
enter
xchg
lcall
testb
in
push
data16
pop
les
pushf
std
jbe
rolb
loop
test
jg
loop
aaa
xchg
push
mov
mov
xchg
pop
dec
mov
out
lcall
mov
loopne
insl
mov
inc
sbb
push
fstpt
sub
into
and
inc
faddl
add
ficomps
jecxz
or
push
loopne
and
xchg
push
push
and
and
scas
lahf
xor
add
and
pop
cmp
push
inc
or
jbe
dec
add
xchg
shr
or
lods
sub
enter
mov
rorl
outsl
lahf
cmp
xor
sub
out
adc
in
mov
mov
mov
xlat
test
or
mov
xchg
lret
pusha
popf
into
in
and
jmp
dec
les
ds
fwait
push
jbe
xor
dec
arpl
sbb
bnd
add
xor
mov
mov
push
cmp
insb
xchg
clc
mov
out
xchg
mov
cmc
xor
test
mov
test
ljmp
dec
test
cs
mov
pop
jge
mov
fs
sub
fdivr
jb
jbe
sub
cltd
sub
sbbl
rep
jmp
clc
hlt
fcomi
push
cmc
stc
clc
es
push
and
adc
mov
outsb
test
nop
mov
scas
mov
jns
push
mov
or
daa
int
or
dec
dec
fstl
mov
aam
movb
mov
int
gs
or
xor
cmp
mov
imul
dec
fmulp
dec
ffreep
in
jge
push
mov
jle
mov
hlt
push
inc
push
into
pop
ds
test
cltd
and
dec
cli
insb
mov
lods
loop
ds
daa
mov
pusha
xor
sub
sbb
or
enter
decb
inc
nop
jbe
cli
mov
xchg
ja
test
cwtl
mov
ds
push
cmp
rcll
jmp
rorb
dec
sti
scas
jge
lds
cmpsl
daa
rcl
sub
dec
push
sahf
test
or
insb
arpl
test
lock
loopew
lods
sbb
cmp
mov
mov
jb
icebp
mov
ret
mov
adc
testl
xchg
jb
iret
adc
scas
mov
das
mov
pop
mov
mov
popf
les
out
push
jmp
fistl
xchg
sbb
popf
dec
int3
mov
and
xchg
mov
fisubl
sub
cld
adc
sub
xchg
add
into
dec
stos
adc
testb
pop
push
adc
out
dec
push
lods
sbb
mov
or
imul
pop
push
lods
xor
out
shlb
jl
pop
ret
mov
or
je
gs
int
sbb
pop
jle
cld
adc
nop
lret
cs
sarb
insb
ja
inc
scas
dec
mov
mov
fbld
lret
add
inc
mov
je
pop
aad
fdivrs
lods
or
fdiv
and
jbe
pop
das
xor
fcomp
add
sub
pop
sarb
mov
dec
xor
shlb
subb
and
pushf
imul
lea
and
and
pop
cmp
stos
mov
jle
aas
das
pop
leave
repz
subl
mov
ret
int3
cmc
mov
xor
inc
shl
cmp
ret
cltd
push
lds
repnz
or
cmpl
push
pop
gs
adcl
and
in
add
mov
dec
inc
loop
and
sub
sub
push
js
pcmpeqd
mov
add
aad
fstl
stos
add
push
sbb
dec
fldenv
sub
fiadds
add
mov
rclb
push
jae
popa
icebp
push
sbb
and
lfs
inc
pushf
jmp
es
pop
cwtl
test
bound
pop
mov
sub
ret
xlat
fdivs
cmp
imul
lcall
stc
sbb
imul
add
sbb
push
push
mov
data16
xchg
test
mov
aaa
push
cmpsb
inc
shlb
xor
sub
ficoml
mov
mov
pop
pop
scas
enter
aaa
mov
and
ljmp
fwait
adc
std
add
adc
or
popf
pop
cli
pop
aaa
jnp
data16
iret
push
stos
aam
jge
jns
xchg
jecxz
insb
or
rorl
push
jp
arpl
inc
xor
xchg
insb
negl
and
push
or
add
ljmp
pusha
mov
shlb
enter
aad
pop
push
pushl
dec
pop
in
mov
dec
int
test
sbbl
imul
cmp
pop
inc
mov
cwtl
aaa
jle
stc
dec
enter
jb
mov
cmp
push
pop
and
inc
mov
mov
repz
and
jp
push
mov
lahf
clc
shl
in
jno
mov
push
sbb
imulb
jo
lods
cs
jge
xchg
add
xlat
inc
shll
and
insb
lcall
js
divl
lods
aad
in
rcrl
xrelease
jbe
testb
cmp
fwait
jb
clc
jns
repnz
mov
mov
push
sbb
cwtl
lds
mov
fwait
or
and
cltd
dec
dec
popa
das
sub
pop
popa
mov
jmp
out
mov
popa
imul
dec
repnz
pop
push
jbe
stos
add
inc
push
jns,pt
pop
out
mov
fst
mov
or
fstpt
loopne
nop
and
int3
mov
lods
xor
jge
jge
arpl
mov
add
pop
sbb
nop
cwtl
sbb
sub
inc
or
loope
xchg
cld
xchg
movsl
popf
pop
addr16
and
xchg
sub
sbb
ret
sar
mov
add
iret
xchg
sub
sarb
jl
mov
dec
or
shll
xchg
das
ret
js
or
fldt
xchg
mov
loope
out
sbb
scas
adc
enter
jecxz
dec
aam
inc
inc
pop
pop
push
mov
outsl
shlb
ss
shrb
daa
nop
jno
pop
pop
push
dec
fsubr
mov
inc
rolb
outsl
xchg
dec
push
and
loope
mov
rclb
cwtl
aam
in
jge
rcrl
adc
in
fists
mov
push
xchg
cmp
cmp
mov
push
or
insl
not
repnz
cmp
nop
cmp
outsl
cmp
or
mov
mov
mov
pop
mov
fistpl
jb
mov
icebp
cmp
aad
unpcklps
int
jno
mov
incl
sub
push
outsl
sbb
hlt
roll
inc
mov
dec
dec
push
push
sbb
dec
pop
pop
jne
int3
push
icebp
negb
xor
ljmp
dec
sub
int
xor
add
test
mov
enter
mov
or
fcmove
mov
dec
pop
stc
call
sbb
or
int3
mov
inc
subl
bound
mov
cmc
addr16
shll
adc
je
push
movb
test
into
add
movsl
int3
imull
out
xchg
mov
or
scas
fldl
ss
mov
push
and
pushl
jl
in
xchg
aaa
subb
or
adc
cmp
movsb
in
lock
nop
ja
outsl
push
mov
movsl
xor
mov
adc
insl
lods
outsl
scas
and
in
filds
cmp
sub
sti
daa
fwait
pushf
scas
jle
pushl
push
adc
inc
add
cmp
adc
lods
shll
sub
jo
jns
sahf
cmp
in
es
cmp
pop
gs
ss
int3
sub
in
mov
jp
xchg
roll
aad
jge
int3
outsb
inc
int
imul
or
lods
cmp
jns
mov
ret
sahf
aas
js
add
addr16
jp
lods
scas
and
lods
jle
sub
pop
ja
xchg
sbb
lcall
push
sbb
inc
out
test
iret
jmp
int
mov
scas
inc
xor
sub
out
add
or
ljmp
push
and
imul
repz
sbb
jge
rcll
loop
cmpsb
sub
bound
movsb
movsl
mov
daa
lret
lahf
cmp
in
mov
ljmp
jp
xchg
pusha
icebp
inc
jb
push
fnstsw
pop
das
dec
test
or
xlat
add
das
add
shlb
js
fs
outsb
jns
mov
sub
stc
inc
inc
cwtl
fadds
push
mov
cld
adc
jb
ss
jae
adc
xor
pop
mov
cld
ja
sub
pop
pop
sti
lock
into
mov
lret
add
add
pop
push
pop
lea
out
outsl
mov
pusha
mov
dec
mov
sub
or
or
and
repnz
pop
pop
mull
rolb
push
lret
inc
lahf
test
adc
in
xor
mov
and
dec
call
ljmp
mov
test
andps
int
inc
cmpsl
popf
jmp
fsubrl
int
in
pop
sbb
inc
lahf
jg
ret
nop
jecxz
cwtl
dec
sbb
mov
cmpsl
lcall
mov
std
out
iret
loopne
and
inc
lds
out
fildl
movsb
loopne
xchg
jb
ds
push
fucomp
cs
pop
jmp
outsl
cmc
xor
adc
in
mov
push
subl
pusha
cli
fildll
sbb
test
pop
add
or
dec
sbbl
dec
pop
and
sbb
add
jmp
mov
mov
fnstcw
sahf
cmpsl
shll
pop
shll
outsb
jns
shrl
cmp
lcall
mov
hlt
cmp
es
mov
std
lock
xlat
mov
mov
xor
pop
xchg
sbb
call
enter
stos
lret
jecxz
push
jecxz
sub
dec
inc
xor
xor
or
xchg
jnp
popa
mov
fsubrs
cmp
cmp
or
faddl
out
sub
xchg
out
push
call
inc
daa
aam
cmpb
ficompl
sbb
xor
xchg
je
fidivrs
jle
fs
or
dec
into
adc
aad
ds
cltd
stc
mov
movsl
cltd
mov
xchg
dec
cmp
lods
xor
dec
fsubrl
cmp
imul
sub
bound
push
shll
push
fldenv
andl
mov
lret
cs
mov
adc
mov
clts
and
xor
insb
pop
ss
daa
in
and
aas
shlb
incb
sub
push
sub
and
daa
push
rcrl
loope
nop
jge
imul
push
xchg
cmp
cmc
frstor
movsl
xchg
dec
pop
popl
jno
lahf
and
or
dec
fnstcw
inc
fs
or
sub
xor
loop
or
xor
outsl
arpl
cmpsb
jp
loope
sahf
xchg
fmull
loop
jne
mov
adc
push
and
pop
jp
popa
pop
and
mov
lock
addr16
int3
xor
mov
add
and
pop
mov
test
add
mov
sbb
mov
add
jo
push
and
int3
dec
mov
and
xchg
andb
psubb
add
xor
ljmp
loop
xchg
hlt
jae
in
mov
xchg
mov
out
adc
pop
dec
aaa
bound
mov
aaa
lea
inc
dec
roll
push
mov
mov
and
push
or
faddl
add
xchg
ds
jl
cmpsl
aaa
into
mov
xor
mov
dec
daa
adc
cmp
cmp
and
pop
mov
mov
add
xchg
jbe
dec
cmp
sub
lcall
es
pop
dec
repnz
ret
pusha
scas
sti
push
add
js
pop
adc
add
or
mov
jl
shll
ljmp
mov
mov
push
or
xchg
push
test
jmp
mov
adc
sbb
cltd
fucomp
cwtl
mov
sbb
sub
and
jl
das
gs
test
lcall
pop
and
fdiv
xchg
sub
cmp
or
jo
out
jns
sbb
pop
or
fnstcw
mov
bound
sub
cmp
pushf
xor
xchg
jo
xchg
add
push
bound
imull
add
pop
push
pop
cmp
mov
loopne
daa
fbstp
pop
cwtl
or
je
pop
mov
hlt
mov
cmp
stos
insl
je
dec
iret
std
jp
mov
ficoms
lahf
and
movsl
test
popf
jl
fldl
mov
faddl
ljmp
ret
and
or
cmc
aaa
mov
and
lea
mov
sbb
in
or
mov
cld
enter
mov
add
int
shrl
ja
dec
add
jecxz
jns
into
jle
fsubp
adc
nop
sub
cwtl
iret
hlt
in
jb
jo
push
es
aaa
mov
mov
sub
aaa
sbb
in
flds
repz
outsb
nop
pop
xchg
in
iret
pop
push
jl
das
shll
sbb
inc
repz
lds
xchg
adc
popa
lock
mov
push
jg
lock
lahf
jecxz
lods
xchg
aas
fwait
movsl
lods
inc
mov
test
aam
lods
test
push
testb
das
insl
cmpl
dec
mov
add
cltd
xchg
shrb
fld
cld
adc
lods
xlat
inc
sarb
mov
lcall
addr16
cmp
sbb
in
test
mov
rcrl
xor
cmp
pop
lds
add
lods
adc
out
sbb
outsl
dec
adc
mov
and
sahf
pop
dec
orl
insb
push
sar
jl
add
or
pop
lret
push
popf
cmp
lret
add
mov
scas
jne
sub
out
loop
mov
shr
mov
jnp
arpl
iret
aas
mov
cmp
stos
or
push
out
imul
push
xchg
xchg
lret
add
out
test
aad
in
cmc
test
push
movsl
data16
inc
xchg
cmpsb
jne
add
out
test
aad
in
cmc
test
push
movsl
data16
inc
xchg
jne
jne
add
adc
out
test
aad
in
es
test
push
mov
xchg
in
cmpsb
pop
mov
movb
mov
repnz
sbb
mov
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
inc
cwtl
mov
mov
mov
or
pop
push
add
add
pop
add
add
add
add
add
push
inc
add
add
add
add
add
add
and
cltd
add
add
add
push
add
add
jne
fiaddl
jbe
sbb
inc
add
add
addb
add
sbb
add
add
add
add
add
xchg
add
insb
add
data16
add
add
jge
int3
add
add
add
add
add
add
dec
add
add
add
add
add
add
fiaddl
insl
add
push
add
add
add
add
add
adc
jg
pop
add
add
insl
add
add
jge
adc
jl
lcall
add
add
add
add
xchg
add
add
add
add
add
insl
add
add
add
jmp
add
add
add
jo
mov
add
dec
add
add
add
add
add
add
add
add
add
insl
add
add
aaa
add
inc
add
add
jmp
add
inc
add
jle
outsl
add
add
add
add
add
mov
dec
add
lods
add
mov
push
add
add
cmp
add
add
inc
add
add
add
insl
add
add
add
add
add
add
xchg
add
add
jb
jae
or
xchg
add
add
add
jo
insl
add
cwtl
add
add
add
sbb
jl
adc
pop
add
scas
add
adc
repz
add
push
adc
and
lldt
add
add
xchg
add
lret
add
insl
add
add
add
jnp
adc
inc
add
jmp
add
xor
faddl
popa
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
insl
add
cwtl
add
add
add
add
add
add
add
add
add
add
and
or
pop
add
stos
add
add
add
add
add
jno
xor
inc
add
add
add
add
add
add
jmp
add
add
imul
insl
add
aaa
add
add
add
add
add
or
push
add
add
ljmp
add
jnp
bound
cmp
pushf
add
xchg
add
add
add
jnp
xor
out
incl
or
faddl
jle
aaa
add
insl
add
add
cltd
add
add
adc
inc
add
imul
jno
insl
add
add
stc
add
add
or
cmc
add
insl
add
add
add
add
push
add
add
add
popl
in
add
adc
inc
add
add
pop
add
add
add
add
add
add
add
add
inc
add
add
add
add
sahf
add
add
fiaddl
cltd
add
add
add
add
add
add
incl
icebp
add
add
sbb
add
add
add
ltr
add
push
add
add
add
add
adc
xor
mov
mov
cmpsb
mov
cmp
ficoms
mov
and
sub
lcall
int3
sub
bnd
sub
and
fdiv
int3
sbb
in
sub
shr
lea
imul
dec
pop
leave
cld
fwait
add
mov
push
repz
scas
out
popa
or
push
cmc
jae
in
movsb
in
popf
and
lcall
xchg
outsb
jae
xor
call
test
pop
and
mov
std
fsubr
icebp
icebp
mov
shlb
adc
cmp
lcall
push
testb
pop
ljmp
loop
sbb
adc
in
cld
jge
mov
sarl
pop
addr16
inc
jae
and
dec
jae
out
imul
imul
jo
inc
scas
loop
sub
ret
into
roll
xor
loop
in
sbb
inc
mov
push
sbb
leave
ret
pop
stc
out
in
nop
cli
and
mov
xor
pop
ljmp
cmpsl
xchg
cmpl
fnstenv
xchg
cltd
dec
jle
sub
pop
ret
adc
std
add
hlt
xlat
add
sub
pop
idivb
add
adc
movsl
arpl
addb
xorb
lahf
sbb
test
or
or
or
ret
adc
sub
mov
pop
ret
or
dec
ss
cld
sbb
mov
mov
push
popf
mov
or
or
movl
out
ret
push
cmp
jbe,pn
mov
cwtl
rcrl
in
int3
sub
stos
jp
jno
xchg
shrl
jge
adc
xchg
mov
cmpb
sahf
xchg
pop
pop
ds
int
ret
jmp
aaa
inc
repnz
cltd
inc
xchg
fdecstp
pushf
lods
cltd
push
mov
imul
mov
inc
lcall
inc
mov
mov
bound
mov
repz
mov
jne
mov
add
sbb
xor
loope
movsl
jnp
mov
adc
xchg
sbb
jnp
shll
sti
sbb
sti
ds
out
xor
jo
fildl
push
jns
cmp
sbb
xor
push
mov
dec
shll
push
sub
lods
cmp
inc
mov
imul
lock
push
xchg
xor
jns
xlat
sbb
add
adc
jl
add
or
pop
sub
mov
inc
jl
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
