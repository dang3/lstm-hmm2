call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
mov
testb
xchg
xchg
xchg
rcll
and
je
inc
adc
arpl
ss
es
shll
xchg
xchg
jecxz
jg
ret
cmpsb
cmpsl
pop
and
adc
movsb
adc
or
jae
add
push
iret
xor
mov
sub
xchg
fistps
lret
push
cld
dec
push
sbb
cmp
sbb
dec
push
cmpsb
mov
mov
sahf
aam
js
fistps
lods
and
push
bound
sub
neg
imulb
push
loop
cmovbe
mov
add
inc
stos
ficomps
mov
cltd
and
fdivs
mov
mov
mov
jae
and
push
arpl
mov
mov
xchg
fwait
pop
cmp
arpl
cmp
xchg
bound
jbe
iret
add
mov
pop
scas
rclb
mov
lret
mov
pop
jo
and
adc
fisubrs
xchg
imul
orl
mov
addr16
bound
mov
inc
xlat
push
mov
icebp
cltd
xchg
pushf
repz
mov
cmc
outsb
adc
push
dec
push
mov
inc
aas
cmp
xchg
rolb
mov
lret
mov
gs
jbe
ja
jp
or
pop
push
add
out
repnz
loop
mov
mov
rcr
jecxz
push
inc
inc
xor
je
xor
inc
and
cmp
shl
lock
xchg
rcll
inc
xor
adc
arpl
jae
inc
es
mov
out
xchg
jecxz
repz
cmpsb
rcll
inc
xor
adc
arpl
jae
inc
es
mov
mov
or
xor
mov
cmp
mov
dec
add
mov
andl
xchg
cmp
adc
mov
sub
or
and
xor
pop
jo
scas
adc
jnp
nop
xchg
inc
and
mov
or
bound
mov
loope
pop
shlb
jle
lds
mov
bound
mov
jmp
sbb
fldenv
loopne
jbe
loop
in
bound
add
mov
lret
inc
mov
pop
fdivl
sbb
mov
inc
popf
inc
dec
mov
idivb
in
sbb
cli
inc
filds
xchg
pushf
imul
pop
movsl
sub
sub
daa
inc
push
inc
xor
cmp
pop
push
xlat
sarl
or
test
cmp
pop
inc
sbb
and
dec
movl
nop
pop
xchg
mov
inc
inc
ds
jp
fwait
cmp
in
mov
pop
test
push
testb
shlb
insb
and
inc
push
test
inc
outsb
jecxz
cwtl
sbb
lods
and
enter
push
daa
mov
int
clc
and
push
sbb
fwait
inc
gs
std
fidivrs
leave
push
pop
sub
iret
add
out
or
cld
lds
shlb
sbb
jo
jge
test
mov
mull
sub
ret
mov
push
jecxz
frstor
xchg
push
rclb
mov
mov
sbb
inc
arpl
jnp
cmp
mov
daa
jne
mov
or
xor
test
xor
ljmp
lret
test
add
xchg
mov
sbb
dec
scas
out
scas
xor
xlat
add
push
outsb
sti
sub
mov
gs
out
xchg
pop
aad
leave
das
fidivrs
orb
fs
adc
mov
inc
xchg
popf
sahf
xchg
pop
cmp
cmp
loopne
out
jb
popa
int3
sbb
push
repz
jl
aad
inc
xchg
cmpsb
jmp
es
lahf
xchg
sub
sub
in
jb
arpl
jb
cwtl
iret
movsb
jns
ja
mov
mov
imul
mov
pushf
jb
sbb
mov
rclb
enter
cs
cmp
movsl
daa
decb
loopne
mov
out
andl
sbb
inc
pop
mov
mov
and
adc
ja
stc
push
rcrb
fstps
adc
xchg
es
es
jno
xchg
inc
sti
xchg
jb
popf
dec
jmp
push
cmp
loope
push
jl
imul
xor
icebp
sbb
inc
ret
les
adc
xor
mov
inc
icebp
jne
cmp
or
lret
pusha
jp
lods
mov
add
int3
xchg
xchg
in
fdivrs
inc
lcall
mov
out
jb
nop
and
loope
jno
std
jne
iret
inc
pop
xchg
roll
push
sub
jmp
cmp
lahf
orb
sbb
mov
mov
jns
mov
push
cs
mov
hlt
xchg
adc
inc
popf
clc
push
jecxz
sbb
inc
sub
loop
xchg
sti
xchg
test
stos
cmp
or
jmp
popf
cmc
fbstp
icebp
or
mov
mov
mov
push
cwtl
mov
mov
ret
or
and
nop
dec
sbb
mov
mov
lock
sbb
sti
int
sub
insb
cmp
xor
popf
stos
mov
js
loope
jb
lcall
lret
lret
dec
arpl
les
das
lock
mov
sbb
stos
mov
ja
xlat
dec
mov
out
lcall
clc
imul
clc
pop
cld
xor
arpl
shll
push
add
mov
and
sub
jns
add
mov
sti
ret
nop
or
fs
or
test
out
push
xchg
inc
xor
xchg
xor
jnp
lret
adc
or
jnp
lds
cmp
push
xor
mov
adc
insb
jmp
mov
pop
loop
pop
das
mov
je
mov
lea
push
and
mov
cmp
les
xchg
inc
push
mov
in
das
lea
jle
call
or
lret
pop
pop
lods
clc
std
push
push
scas
adc
ret
jle
push
xlat
sbb
test
mov
sbb
xor
adc
and
fcoms
and
inc
sbb
test
jb
out
and
add
movsb
ds
fsub
pushf
jecxz
pop
dec
mov
test
inc
mov
std
mov
scas
fisubs
sbb
in
lahf
into
pop
aad
pop
push
push
movsl
xchg
cmpsl
push
int3
aad
jns
rclb
jge
and
and
jecxz
rclb
cmp
inc
loope
fmull
movzwl
inc
sbb
mov
cmp
xchg
cmp
cmc
xchg
notb
outsb
jl
push
repz
mov
in
mov
mov
mov
add
clc
mov
fbld
out
xor
jae
insb
jecxz
popa
leave
mov
mov
mov
xor
adc
fwait
mov
sub
xor
cwtl
data16
sbb
add
cld
nop
inc
inc
arpl
cmpb
pop
add
das
cmp
mov
cmp
cwtl
in
dec
jo
rcll
cmp
stc
clc
cmp
mov
mov
and
rcrl
aas
push
jns
mov
dec
xchg
mov
outsb
pcmpgtw
clc
push
mov
lret
cmpsb
or
out
push
jge
ljmp
mov
in
imul
lret
pop
lods
xor
push
jl
adc
lds
mov
mov
loope
inc
sub
call
test
or
jmp
sbb
les
lds
xor
in
ja
and
mov
xor
out
xchg
in
imul
fcmovb
shl
jle
jp
sub
or
jae
xchg
sbb
rcr
jbe
xchg
or
sub
add
pop
mov
xor
inc
addr16
pushf
fdivl
pop
dec
les
addb
es
jg
push
and
sarb
jle
cs
jns
xor
cmc
xor
aas
in
rcll
lahf
and
incb
push
push
add
jnp
mov
sub
ficoml
ud0
sbb
pushf
dec
mov
cltd
mov
mov
pushf
gs
sbb
jle
pushf
lahf
mov
xor
mov
xchg
xor
sub
and
mov
mov
xchg
leave
jns
shll
pop
into
rcl
divl
pop
jp
ret
lods
int
cltd
insb
jmp
mov
xchg
leave
aam
imul
jg
sub
scas
insl
mov
insb
cmp
inc
roll
out
fisubl
xchg
inc
sahf
mov
imul
mov
lahf
mov
xchg
nop
push
and
ja,pt
mov
pop
clc
add
xor
cltd
ds
cltd
sti
ficoms
mov
xchg
icebp
sub
cmp
push
pop
sbb
mov
push
leave
xor
out
ljmp
push
fstps
dec
and
sub
pushf
into
add
cmc
fsubl
and
insb
push
or
inc
and
xchg
out
lods
bound
jne
jbe
std
push
cmc
jbe
ror
jbe
or
pop
rolb
adc
pop
jbe
orl
dec
nop
in
stc
das
movl
push
and
jl
dec
sbb
xchg
test
pushf
mov
push
pop
nop
mov
cmp
jnp
cs
in
aam
cmp
jg
lods
lods
dec
sbb
cwtl
out
jmp
int3
add
and
jecxz
ja
inc
mov
in
shll
imul
xor
adc
jl
mov
push
je
sub
mov
cld
inc
xor
dec
push
ss
mov
adc
leave
mov
das
cmp
mov
cmp
test
mov
add
push
push
xor
pop
mov
outsb
hlt
out
cmpsl
inc
in
rorl
loope
clc
out
jnp
movsb
mov
adc
and
inc
int3
loop
lock
pushf
push
shrl
mov
xor
and
inc
cmc
cmpsl
cmp
or
add
sti
aam
imul
lods
inc
in
stos
xor
mov
sub
dec
jo
scas
mov
cwtl
xchg
lock
or
arpl
mov
inc
mov
rolb
adc
sub
cmp
jo
aas
push
stc
stos
test
jmp
stc
test
adc
in
jbe
jp
or
jmp
adc
mov
imul
fwait
jbe
sbb
movsb
outsl
movsb
sbb
mov
test
neg
inc
rorl
roll
jmp
sbb
adc
aam
and
out
mov
sti
shrl
cltd
xorl
aas
fidivrs
cli
pop
push
pop
lds
push
sub
fsubrl
mov
cmp
loop
adc
jle
insb
addr16
sbb
hlt
sub
loop
lds
popa
sbb
cld
lods
je
mov
jp
sarb
movsl
or
lahf
leave
and
inc
scas
xchg
add
pop
fists
push
sti
xchg
fisubs
add
push
clc
sbb
or
push
push
mov
je
scas
std
jmp
jmp
in
mov
cmp
data16
movb
in
in
in
arpl
out
scas
jbe
dec
and
adc
pop
stos
icebp
mov
popa
xor
and
add
in
lret
push
add
sub
enter
mov
dec
inc
mov
xchg
xor
cmc
cmp
cmpb
dec
add
dec
or
lcall
hlt
cli
mov
in
adc
stc
push
inc
cmp
jp
xchg
outsl
aaa
fisttpll
aam
dec
cld
dec
test
fisubrl
das
addb
cld
leave
lahf
sub
ljmp
lret
or
fisubrs
movsl
movsl
je
mov
sbb
fisubl
mov
sub
stc
xchg
mov
xchg
fiaddl
test
pop
out
cmpsb
test
jbe
xchg
test
pop
iret
xchg
idivl
popa
mov
dec
out
cwtl
cmpsl
or
jmp
ret
pop
jp
xor
cmp
xchg
bound
adc
cltd
lea
xchg
lret
add
jno
sbb
negb
arpl
test
xor
mov
sub
xlat
cmpsb
out
loope
loop
daa
dec
adc
pushf
scas
mov
shlb
and
fs
fidivl
push
out
inc
xchg
ret
out
dec
or
pushf
sub
dec
sbb
lds
lock
dec
cs
popa
jnp
lds
mov
xchg
cwtl
dec
push
jg
xchg
icebp
adc
jmp
mov
ss
mov
adc
enter
addr16
pop
int3
or
mov
mov
pop
push
xor
dec
lds
mov
inc
jo
lahf
push
out
test
add
pop
dec
sbb
adc
lea
add
ret
mov
push
mov
call
push
jnp
fdivrs
sbb
push
das
stc
mov
repz
add
es
mov
lret
call
and
lods
sub
and
pop
cmpsb
pop
add
out
fadd
mov
mov
xchg
cmp
mov
push
xchg
pop
mov
jnp
push
arpl
mov
into
rclb
adc
and
mov
jg
xor
outsb
stc
shlb
push
xchg
ja
jo
stos
lods
inc
or
xchg
pop
mov
out
mov
imul
mov
pop
or
iret
mov
sbb
adc
pop
jne
nop
mov
in
je
dec
mov
xchg
mov
insl
cld
mov
addr16
leave
out
lds
test
sub
pop
xor
rorl
push
mov
mov
mov
vphaddbd
sbb
icebp
test
in
adc
rcl
stc
data16
outsb
lods
lods
inc
movsl
ret
arpl
inc
in
lods
pop
xchg
mov
fiadds
ja
pop
shl
xor
dec
or
and
pop
push
adc
cli
sahf
sub
xor
cmpsl
mov
cmp
mov
push
stos
pop
push
fcmovu
xor
repnz
leave
pop
sbb
iret
dec
out
or
fsubrl
jb
les
xchg
cwtl
pusha
lahf
inc
mov
gs
dec
inc
call
xchg
jbe
or
xchg
leave
push
add
enter
and
fnstsw
loop
inc
jp
addl
cmp
rcl
jb
pop
push
pop
cli
popa
je
jno
loop
adc
gs
insb
loopne
push
dec
mov
mov
fwait
push
and
ret
jbe
icebp
into
sub
mov
sbb
daa
fs
rcrb
shlb
push
inc
sub
xor
hlt
les
cltd
andl
sti
movsb
or
pushf
push
mov
dec
daa
jg
xchg
out
arpl
imul
add
mov
pop
push
cwtl
loopne
cmp
jae
rclb
mov
jns
je
fnsave
add
in
int
mov
repz
addr16
imul
lock
xor
cmp
sub
mov
addr16
test
pusha
fbstp
leave
cli
hlt
in
sbb
aad
jecxz
push
aas
out
push
xchg
sahf
loopne
dec
jno
in
inc
pop
pop
fwait
jae
repnz
jns
or
dec
cli
push
aaa
xchg
les
cmp
xchg
int3
clc
and
or
lret
pop
cmpsb
stc
add
fstl
cmp
ret
mov
adc
movsl
pop
mov
mov
sbb
push
mov
xchg
dec
xchg
stos
push
fiaddl
cmpsl
xchg
xchg
gs
ret
int
int
or
and
shr
push
cmp
arpl
fistpll
push
mov
mov
xchg
popf
fistpl
sub
loope
ss
icebp
cmpsb
outsl
call
xor
ss
push
cmp
cmp
loope
in
cmp
inc
mov
add
push
lret
cmc
dec
jae
sbb
cmp
push
je
cmpsl
lcall
jnp
ret
push
fcomps
mov
jp
aas
pop
or
scas
les
push
outsl
cmp
pop
pusha
repnz
xor
imul
dec
push
stc
inc
fcom
cmp
fidivl
inc
lock
sbb
sarw
cwtl
hlt
pop
aaa
push
nop
insb
xchg
jns
mov
cmp
mov
out
and
ja
push
out
xchg
inc
mov
xchg
xor
sbb
lock
xchg
push
dec
in
adc
mov
loope
sub
sbb
repnz
xor
lods
fcoms
jmp
sub
push
lods
repz
gs
xor
jne
imul
mov
pop
xor
xchg
jmp
pop
push
pop
shlb
sub
adc
lret
outsb
adc
fistpll
je
rolb
inc
xor
mov
or
outsl
fstpt
ja
stc
out
jge
and
popa
pop
xor
negl
xchg
andb
fcmovnbe
repz
mov
or
ret
ljmp
loop
cld
xchg
pop
xchg
movsb
xchg
cmp
and
xchg
movsb
enter
dec
xchg
les
ljmp
inc
add
sbb
les
xchg
aas
xor
pop
in
stc
pushf
loop
xchg
xor
fnstcw
mov
aaa
fildl
jmp
push
dec
fstps
inc
call
mov
or
cld
mov
xchg
loope
and
push
call
xchg
inc
ret
nop
outsb
xor
setg
or
cwtl
pop
xor
xorl
mov
outsl
adc
and
jne
push
daa
pop
dec
test
int3
cmp
pop
push
inc
push
jae
clc
adc
mov
popa
test
pop
mov
and
dec
fldl
add
add
xchg
push
ss
inc
xor
sub
mov
mov
jbe
push
add
lret
test
xchg
cmp
mov
fiaddl
dec
cmc
pop
call
js
je
lds
sub
jno
push
inc
js
into
out
jb
shr
pop
in
scas
icebp
cmp
mov
pop
xchg
or
pusha
pusha
jmp
lret
out
aaa
scas
inc
and
xor
rorb
outsl
pop
mov
aad
lret
dec
ret
insl
subl
mov
incl
or
into
aaa
or
xchg
sub
cmpb
out
ds
lret
xor
push
hlt
lahf
pop
adc
test
jb
xchg
fcomps
adc
sbb
pop
or
subl
aas
dec
loope
jecxz
fsubrl
jns
mov
dec
sub
adc
mov
int
push
loopne
ljmp
sub
flds
mov
inc
xor
mov
imul
sahf
lret
jp
shrl
xchg
adc
and
loopne
int
cmp
leave
mov
push
inc
push
hlt
in
lret
add
mov
popf
dec
dec
lcall
pop
inc
add
sbb
adc
add
push
jo
scas
repz
outsb
andb
andl
shrl
mov
push
dec
pop
dec
sahf
jb
into
mov
in
xor
adc
jne
mov
jp
jp
pop
movsl
push
push
add
mov
fstl
lcall
mov
dec
push
aas
mov
jge
jnp
xchg
pusha
mov
sbbl
push
mov
jo
rorb
call
lret
push
shrl
js
pop
xor
adcb
and
in
mov
mov
clc
inc
inc
jp
icebp
ljmp
push
jle
fsubrl
jmp
xchg
pop
cmpsb
sub
dec
lret
scas
jg
inc
ficoml
aam
mov
shlb
jb
inc
mull
test
adc
fs
xor
mov
mov
jno
pop
lock
insb
bound
mov
jp
int3
pop
stos
imull
or
cmp
ror
stos
repnz
pop
xchg
jnp
lods
aas
cmp
lcall
popf
aaa
ret
js
mov
subb
loop
mov
sub
pop
mov
das
movsl
pop
sbb
test
dec
add
sbb
jecxz
fwait
jge
push
xor
mov
push
sub
popf
lods
cli
xchg
dec
jg,pt
int
jge
stos
insb
fstl
mov
xchg
aas
push
mov
push
push
mov
dec
out
int
jecxz
jmp
jg
inc
in
xchg
xchg
mov
repnz
adc
cmpsb
mov
sub
sbb
cmp
adc
fisttps
xor
xchg
loop
xor
jae
sbb
lret
imul
shl
mov
mov
adc
icebp
xor
and
shlb
sti
xchg
sti
and
xchg
xchg
xchg
clc
cmpsl
fidivs
js
push
popf
subb
push
cmpsw
xchg
rorb
fs
mov
cs
or
gs
cs
jp
fisttpl
mov
mov
shlb
insl
stos
jle
or
lcall
push
dec
aas
dec
ss
push
pop
xchg
cs
and
xchg
xchg
test
mov
xor
inc
fldl
or
push
or
dec
lock
xor
daa
cwtl
insb
jo
insl
bound
cli
push
push
test
std
outsb
shll
xchg
aad
lcall
add
adc
lock
mov
test
push
xor
movsl
ret
in
inc
inc
ret
xchg
and
dec
cwtl
jl
and
cmc
push
pop
add
and
in
xlat
dec
push
dec
repnz
jp
fsubr
in
push
inc
jmp
aas
imul
stos
dec
sub
outsb
fwait
add
xchg
lds
sarb
test
push
cmp
imul
lret
js
adc
push
arpl
ds
jl
mov
out
mov
mov
adc
adc
ja
xor
incb
sub
push
xchg
push
inc
pop
fwait
mov
jo
adc
in
dec
and
fnstcw
lds
lcall
add
jbe
sub
leavew
lea
incl
mov
es
add
test
test
xchg
ja
jb
lahf
jle
mov
pop
gs
inc
sub
jae
data16
pop
inc
or
insb
adc
fisttpll
rorl
or
dec
test
pop
call
aas
xchg
xchg
stos
mov
cmp
hlt
les
dec
push
test
test
jo
aam
inc
mov
in
mov
add
inc
mov
out
out
xchg
jecxz
repz
cmpsb
rcll
inc
xor
adc
arpl
jae
inc
es
mov
out
xchg
jecxz
repz
cmpsb
rcll
inc
xor
adc
arpl
jae
inc
es
mov
out
xchg
jecxz
pop
mov
cmpsb
rcll
inc
xor
adc
arpl
jae
arpl
push
loop
repnz
and
xchg
jecxz
repz
shrl
add
popa
jmp
mov
mov
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
and
aaa
roll
jecxz
repz
addr16
jns
jmp
push
pop
xchg
jno
add
adc
xor
xor
aaa
shrl
pop
repz
mov
mov
out
xchg
jae
pusha
test
lahf
fcmovb
rcll
lcall
ret
mov
bnd
inc
test
jne
xor
jnp
pop
xchg
jle
arpl
popf
cmp
test
fsubs
and
ret
push
xchg
cmovns
imull
sub
cmp
ret
mov
sbb
sub
cmp
push
jb
add
dec
xlat
fs
icebp
mov
xchg
fists
adc
fucomp
xor
xchg
pop
shl
jecxz
ret
cwtl
mov
push
dec
cmpsb
adc
mov
push
imul
test
cmp
daa
sbb
adc
repz
xchg
shlb
imul
aas
and
int3
fmul
stos
xor
jecxz
cmp
cltd
bound
xchg
inc
mov
push
jbe
arpl
movsb
data16
and
les
repz
jmp
inc
mov
sub
push
sbb
add
and
push
dec
cmpsb
inc
shll
outsl
repnz
sbb
xor
push
fisubs
ss
outsb
cltd
inc
scas
and
shll
jbe
push
lock
sarb
xor
jno
jl
dec
xchg
push
dec
sbbb
addb
ja
inc
mov
mov
xchg
jae
add
adc
and
xor
ret
aaa
roll
jecxz
repz
mov
mov
xchg
jae
add
adc
and
xor
ret
xchg
push
loopne
mov
cmc
pop
into
aad
cmp
jmp
adc
push
push
jno
test
loope
pop
int3
mov
aas
iret
jo
push
daa
xchg
and
or
stos
pushf
adc
adc
inc
ja
jge
mov
and
adc
inc
mov
push
push
inc
sbb
mov
pop
push
aaa
mov
or
pop
ret
inc
lock
jbe
mov
cmp
fwait
or
and
and
or
mov
mov
aad
mov
pop
jmp
jl
cwtl
pop
rcll
je
nop
pusha
bound
jge
in
aam
mov
negb
mov
cmpsb
outsb
imul
imull
int3
out
cld
jns
push
jge
pusha
sub
roll
cli
lret
mov
arpl
pop
test
cli
loope
push
and
addr16
das
push
pop
mov
xor
in
pop
aam
cmp
mov
xchg
jl
cmp
sbb
mov
scas
inc
mov
or
loopne
lcall
push
sub
sub
movsb
test
je
lahf
bound
daa
mov
inc
pop
sub
jecxz
and
push
shll
mov
repz
test
inc
addb
sbb
shll
and
inc
or
int3
mov
pop
dec
loope
dec
mov
stc
lods
jge
xchg
in
aaa
jnp
and
xor
sahf
mov
ret
lock
sub
leave
in
stc
mov
pop
mov
inc
test
xchg
dec
cli
inc
js
sub
jge
dec
cmp
cmc
into
mov
sub
inc
insb
fidivrs
leave
daa
out
sbb
sti
sbb
fldcw
out
mov
sbb
out
jl
mov
mov
cld
and
jo
cmp
gs
adc
mov
and
adc
pop
sub
push
outsl
adc
inc
loopne
or
test
pop
and
addr16
dec
hlt
sahf
aas
mov
jno
add
or
loopne
sub
repz
push
dec
stc
loopne
ljmp
jge
dec
or
into
sahf
cmpsb
adc
decb
xor
adc
mov
pop
fidivrl
mov
add
into
jge
fcoml
je
fistl
pusha
stc
std
xor
mov
es
pop
jno
inc
cmpsl
out
cltd
and
leave
loope
cmc
pop
cmc
loopne
mov
add
or
xchg
dec
jmp
pop
sbb
fdivrl
jmp
sub
inc
push
stos
mov
arpl
icebp
push
in
mov
pop
bound
imulb
out
sbb
cli
fwait
lods
mov
xor
inc
pop
addb
mov
pop
push
mov
pop
js
test
pop
dec
insl
movsb
xchg
icebp
push
adc
xor
push
sti
mov
nop
adc
arpl
lods
std
fdivs
xchg
jp
pop
mov
and
xchg
inc
or
xor
cmp
dec
dec
inc
mov
lods
int3
leave
sub
jb
or
sbb
dec
xor
cmp
inc
jmp
adc
das
stos
and
ss
jecxz
pusha
mov
jp
mov
incl
mov
enter
xor
lret
or
xchg
mov
xor
sub
inc
add
ret
jmp
cli
jno
add
popf
jns
test
jecxz
push
test
mov
sbb
and
lods
cmp
jns
inc
test
push
aam
xorb
cmp
mov
shrl
cmp
mov
add
ror
xorb
movb
mov
cmp
ret
nop
xchg
or
or
mov
xchg
call
jno
inc
mov
scas
or
inc
popa
xor
push
pop
add
cwtl
mov
int3
repz
shll
push
fldenv
pop
das
jg
cli
jle
or
mov
push
mov
ss
in
mov
sbb
faddl
push
add
movsb
xchg
pop
jl
imul
repnz
inc
and
sbb
lcall
xor
repnz
bound
sahf
xor
mov
out
push
ja
filds
repnz
sbb
push
ds
cwtl
pop
mov
fisubl
push
in
aas
jecxz
jge
dec
ret
dec
shll
jecxz
insl
popa
pop
and
push
in
mov
adc
and
lods
sbb
ficompl
cmc
cmp
dec
adc
mov
inc
dec
sub
jecxz
add
popf
mov
aaa
add
mov
cmp
xchg
cmp
cld
sub
in
or
push
movsb
inc
lret
out
sbb
fdiv
test
test
adc
or
mov
lret
in
popa
lea
push
or
leave
sub
inc
sbb
clc
inc
mov
out
xor
and
int
xor
dec
sbb
out
sub
dec
push
fnstenv
xor
in
decb
fistps
in
inc
dec
sysexit
push
sahf
sbb
pop
adc
loope
or
inc
sub
push
push
cmp
jo
int3
sarb
cmp
fdivrp
movsb
jns
je
sbb
roll
enter
mov
push
out
int
mov
fists
bound
and
dec
mov
mov
ds
adc
mov
mov
xchg
xchg
pop
mov
out
mov
xchg
jo
adc
adc
mov
sbb
push
aam
and
adc
outsb
loope
insb
dec
out
sub
lret
xor
in
dec
jnp
ds
fbstp
pop
mov
mov
cltd
cmc
aas
sbb
cmp
jae
push
jns
pop
movsl
fnstenv
fnsave
jb
clc
enter
leave
pusha
add
add
test
cmpsl
out
inc
int3
js
xchg
xchg
das
stos
push
div
push
pop
in
mov
push
xchg
jae
or
hlt
jns
dec
push
popf
and
xchg
frstor
xchg
loopne
mov
jo
inc
inc
or
imul
cs
pop
rorb
out
adc
mov
or
mov
fdivrl
out
call
mov
std
xor
cmp
sbb
xor
cmp
lock
outsl
pop
xchg
loope
push
xchg
push
insb
mulb
sbb
aad
mulb
and
out
cmp
jns
ds
sbb
repnz
ret
jb
frstor
dec
dec
scas
adc
shlb
or
jmp
pop
push
ds
ffreep
mov
fisubrl
aad
out
jb
int3
aas
sub
xchg
and
push
cld
inc
xchg
mov
shrb
jb
jno
insl
jae
pop
mov
jg
inc
and
and
mov
jge
sbb
jb
add
in
cltd
mov
movsl
fxch
sbb
cltd
rorl
cmp
mov
outsl
adc
push
lcall
adc
xchg
aam
mov
xchg
imul
addr16
push
sub
or
inc
mov
jl
sub
test
rcl
divl
pop
pop
in
fiaddl
push
mov
cmp
lods
fcmove
xor
ret
dec
xchg
mov
mov
cmp
dec
mov
xchg
sbb
repnz
icebp
fistpl
add
sti
sub
in
mov
jnp
fwait
inc
push
dec
imull
add
test
cltd
mov
mov
stc
rolb
and
or
shll
cltd
jle
push
mov
dec
int3
cmpsl
cmc
repz
rorl
pop
and
jb
dec
mov
adc
je
mov
sub
pop
rol
pop
inc
xchg
pop
sahf
aaa
push
scas
jb
icebp
mov
stos
xor
loope
scas
fdivs
or
nop
push
enter
jle
ja
or
sbb
push
jb
hlt
sbb
ds
mov
call
and
mov
add
int
sarb
jl
fdivs
jo
ror
fsubl
jg
pop
ljmp
mov
stc
lea
sbb
or
push
cmpsb
mov
gs
fistps
fadds
stc
dec
or
push
and
xorb
addr16
add
lcall
inc
jp
cld
fnstcw
aas
out
cmp
xchg
leave
add
push
push
inc
cmp
mov
repz
and
int
icebp
dec
cmp
dec
xor
mov
mov
mov
push
adc
inc
mov
cmp
scas
ja
aad
xorl
aam
mov
dec
mov
mov
and
xchg
dec
pushf
xchg
bnd
test
daa
mov
xlat
mov
scas
cmp
or
or
jns
mov
push
dec
aas
push
mov
inc
pop
scas
sbb
ret
ffree
xor
cltd
xor
dec
xor
adc
fdivl
stc
xchg
sbb
hlt
mov
and
sbb
movl
ret
cmp
mov
stc
mov
repnz
dec
shlb
cwtl
xchg
es
mov
hlt
or
adc
cli
mov
sbb
inc
dec
adc
loop
sub
aas
shlb
push
and
cs
pop
test
out
jbe
cmp
xchg
rol
pop
rcll
sub
popf
sub
mov
sub
xor
test
js
dec
std
mov
pushl
adc
pop
cld
inc
jns
adc
fsubs
or
pop
out
ret
push
test
pop
sbb
into
mov
jbe
jge
sub
aam
sar
xorl
sub
loope
daa
mov
movsl
adc
into
fadds
cmp
adc
push
cmp
scas
test
sub
lret
out
hlt
cltd
out
jg
fsubrs
test
push
push
and
fcmovu
cmp
xor
mul
stos
inc
daa
in
das
imul
push
adcb
hlt
pop
mov
xor
push
not
cmp
xchg
xorl
push
repz
cli
lods
cmp
adc
aam
inc
mov
mov
sti
addr16
cli
sti
jo
mov
stc
arpl
into
rcl
daa
and
movsb
inc
out
stc
jge
cltd
rep
fimuls
mov
xchg
in
es
jbe
iret
jo
fwait
mov
rcrl
jns
test
shrl
add
xchg
leave
sarb
orl
outsb
movsl
dec
jb
outsb
mov
ss
or
in
out
jns
adc
sbb
fnstcw
popf
dec
mov
and
inc
insb
pusha
inc
mov
and
xchg
jmp
ljmp
or
nop
lahf
sub
outsl
insb
cmp
add
aaa
xor
das
and
fdivs
dec
lret
aam
jp
push
movsb
adc
sbb
imul
sbb
lods
sbbl
out
inc
mov
nop
cmp
and
and
test
scas
dec
ja
das
in
and
push
es
xor
pop
rclb
jb
jnp
scas
and
push
jl
mov
cli
ror
add
mov
and
aam
cmp
dec
cwtl
push
push
cld
into
add
xchg
and
insl
push
pop
push
rcrl
push
or
stc
xchg
jmp
hlt
imul
out
inc
fstpt
out
push
cmp
iret
mov
dec
push
fildl
pop
push
jne
negb
mov
pop
mov
scas
sti
pop
xlat
inc
mov
cs
fisubrl
andb
fistl
jnp
pop
data16
pop
jecxz
sti
pcmpgtb
fsts
subb
and
outsl
test
dec
jle
adc
or
push
ljmp
add
imulb
jp
mov
rcr
cmp
mov
jbe
lret
movsl
lock
jecxz
stos
pop
in
test
leave
cltd
sbb
or
jnp
lcall
in
sbbl
ficoml
mov
jnp
je
pop
inc
fisttpll
shl
dec
pop
out
pusha
pop
sub
xchg
iret
out
les
mov
push
dec
add
jmp
sbb
jp
loop
movsl
lahf
mov
incl
test
push
rorl
testb
stc
xchg
jecxz
aaa
cmp
loop
ret
mov
push
push
ret
xor
aad
ljmp
sub
out
rclb
in
xor
in
inc
cmpsb
sub
js
jecxz
arpl
out
addl
add
lahf
xchg
pop
cmpsb
mov
xlat
adc
mov
into
cmp
sub
mov
xor
mov
popf
pop
aaa
cmp
movsl
fwait
mov
cs
mov
adc
mov
insl
sti
dec
xor
lcall
addr16
rolb
jae
divb
in
outsl
in
fistpl
lods
sbb
and
rorl
pop
push
lahf
in
xor
test
or
lock
jb,pn
mov
or
in
jmp
xchg
repz
movsl
pushf
mov
and
xlat
add
aam
adc
mov
jb
push
stc
sub
sub
arpl
decb
xlat
int
sub
hlt
pusha
xor
movl
ret
pop
cmpxchg
and
shlb
stos
jb
mov
nop
jno
fs
sbb
jnp
xorl
sbb
outsl
lahf
mov
or
jg
out
add
rcrl
aam
imul
push
test
insb
cwtl
icebp
sbb
lret
lock
orb
pop
push
adcb
in
mov
movsl
mov
hlt
xchg
andb
and
ss
push
or
adc
mov
lahf
mov
pop
arpl
dec
sbbb
fcom
lds
lcall
inc
adc
jno
fmuls
lock
jmp
aas
fwait
inc
xor
popf
insl
ljmp
aam
sub
mov
mov
sub
mov
jbe
xchg
cmp
out
push
and
mov
mov
mov
repnz
push
ljmp
pop
movsl
cld
sub
lret
xor
dec
call
mov
sbb
sahf
jb
and
pop
dec
jecxz
repz
in
inc
dec
push
pop
lods
and
push
xor
pop
jns
addl
jbe
outsl
inc
jns
test
pop
add
push
leave
test
or
cmp
into
int3
js
inc
add
adc
lahf
mov
int
xchg
icebp
mov
dec
ljmp
pop
or
push
cmp
cmp
or
sbb
loopne
xlat
cmp
xchg
sub
mov
mov
jne
movsb
mov
ja
jmp
push
lret
push
fstpt
jnp
pop
je
in
nop
movsl
mov
cld
mov
and
sbb
adc
sbb
mov
mov
jp
repz
aas
addr16
shlb
clc
mov
jnp
rol
ret
sbb
xlat
and
shll
cli
mov
fsubl
sbb
fwait
dec
out
dec
add
jns
loopne
popf
jne
gs
shr
jecxz
lods
cli
fistpll
mov
jb
cmp
jnp
stos
cmp
enter
adc
inc
inc
stos
push
cltd
enter
in
ss
mov
jb
loop
xchg
push
push
jns
movsl
sbb
cmp
js
jmp
aas
test
jmp
adc
cmp
xchg
dec
shl
xlat
addr16
and
fcmovnbe
enter
sub
ja
cwtl
adc
push
enter
mov
sahf
fstp
cli
stc
out
inc
sub
mov
pop
pop
mov
cmp
mov
push
je
in
jmp
jns
addr16
or
notb
stc
insb
enter
pop
jbe
dec
inc
mov
cmp
mov
xchg
mov
jb
fidivs
lock
popa
pop
push
fimull
mov
push
in
scas
nop
or
inc
adc
pop
loope
pushf
dec
cwtl
dec
push
data16
mov
mov
fwait
movl
cmc
dec
jle
stos
adc
stc
dec
adc
push
or
xor
pop
cmp
scas
enter
ds
repz
cltd
or
int3
or
jnp
pop
icebp
dec
test
mov
push
fcoms
mov
or
ret
ljmp
inc
dec
adc
ret
push
int3
rcll
sti
in
jns
jbe
cmp
out
push
add
sub
or
dec
sub
push
movsb
lods
outsl
push
imul
xor
gs
aam
dec
inc
cwtl
jmp
out
icebp
dec
repz
in
repnz
imul
adc
iret
call
mov
push
cmp
aam
lea
mov
mov
jl
loopne
idiv
mov
cmp
or
inc
jl
std
dec
push
mov
movsb
mov
jle
rol
adc
pusha
outsl
pop
adc
inc
int3
addb
adc
hlt
jge
aaa
fildl
cmp
inc
fidivrs
fstpt
shrl
repz
lods
test
shlb
fcmovnu
cld
inc
rcrb
addr16
sbb
jle
cli
adc
outsl
mov
stos
lods
daa
in
sub
sbb
push
aam
sub
mov
jge
mov
mov
jl
shl
repnz
jnp
push
in
and
sbb
dec
dec
callw
movsb
pop
movb
jle
or
jnp
lock
xrelease
jb
scas
shl
adc
jle
jb
cmpsb
jbe
mov
mov
cmp
into
pop
in
or
dec
lahf
arpl
sbb
cmpsb
test
push
loopne
mov
or
inc
int3
mov
mov
push
pop
psubb
jns
dec
out
cld
push
jle
dec
fisubrl
mov
inc
xchg
test
adc
mov
les
xchg
ja
mov
imul
jle
cwtl
and
scas
lcall
testb
aam
push
pop
ljmp
aaa
out
and
hlt
mov
hlt
pusha
mov
shlb
mov
xor
hlt
pushf
push
and
push
sbb
jne
mov
mov
xor
or
ss
pop
add
es
popa
sub
and
inc
jne
add
cld
inc
addr16
xchg
repz
scas
xor
js
cmp
fwait
lods
imul
xor
movsl
mov
sti
insl
jae
popa
add
inc
sub
cli
sub
and
pop
pop
popa
ss
jecxz
js
fistl
int3
mov
sub
shr
and
jo
movsb
pop
addr16
and
xchg
push
pop
sub
stc
cld
and
push
mov
ret
lds
int
sti
push
iret
imul
mov
repz
dec
cwtl
push
ret
xor
or
inc
add
xor
or
push
aad
lret
pop
xlat
sbb
adc
popa
in
scas
test
ret
cwtl
jb
test
pop
pushf
and
jae
jnp
stos
leave
mov
sarb
loop
sahf
inc
mov
in
pushl
sahf
cmp
orb
mov
mov
out
repnz
cmpsb
movsl
lahf
mov
inc
jmp
insb
jg
and
js
pusha
out
aad
mov
or
imul
fdivs
in
mov
int3
dec
les
cmpsb
sub
pop
push
add
jo
jns
xor
inc
insb
aad
mov
negl
aas
sub
jp
sbb
rcr
push
and
jmp
aam
inc
jae
inc
aad
gs
pop
or
sub
stos
dec
cli
fidivs
leave
movsl
cs
popl
jo
mov
std
push
cmp
rcr
decl
lods
adc
mov
ret
fwait
test
add
or
lahf
out
es
mov
and
mov
ja
int
push
cli
cmp
les
aas
incb
xor
imul
push
inc
lods
loopne
mov
push
test
dec
dec
dec
mov
push
movsl
cmp
lock
mov
jmp
shll
adc
nop
cmc
push
xchg
dec
mov
imul
jb
mov
ret
adc
rolb
jns
shlb
sbb
push
aas
mov
lret
and
sbb
icebp
or
jecxz
rolb
xor
stc
popf
cmpb
cmp
push
inc
jb
mov
mov
test
dec
dec
mov
mov
in
cmp
leave
leave
aaa
mov
xor
xlat
xchg
add
xor
movsb
push
stos
add
adc
mov
mov
cmpl
scas
mov
das
filds
xor
sti
jmp
in
mov
pinsrw
fiaddl
lds
xor
pop
jne
lea
pushf
je
ret
sarl
add
sbb
clc
push
mov
push
xchg
xor
mov
loope
arpl
adcl
imul
fldt
je
int3
ja
ficompl
pop
jne
imul
popf
pop
dec
and
push
daa
cmovae
or
lea
repz
mov
mov
xchg
jae
add
adc
and
xor
ret
aaa
roll
jecxz
repz
mov
mov
xchg
jae
add
adc
and
xor
ret
pop
shll
pop
repz
mov
ja
xchg
jb
add
adc
and
xor
ret
imul
jecxz
repz
mov
dec
stc
sub
mov
cmp
sub
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
push
or
jno
popa
cmp
pop
jno
push
dec
inc
jnp
icebp
stos
loope
xchg
lret
sbb
push
or
jno
popa
cmp
dec
add
imul
rorl
loope
xchg
cmpsl
sbb
push
or
jno
popa
cmp
dec
add
imul
rorl
iret
lahf
loop
incl
inc
push
add
cmp
add
loopne
lock
out
cmp
ret
sbb
loope
ficompl
xchg
test
mov
cmp
jno
out
fs
fildll
xchg
adc
or
push
mov
inc
adc
dec
cwtl
iret
cs
stos
push
push
repnz
xor
or
aam
popa
inc
adc
inc
aas
pop
add
insb
adc
adc
add
shll
jl
pop
outsl
lret
jmp
cli
scas
jg
dec
sbb
mov
ret
or
xor
and
je
xlat
loope
push
fistl
mov
scas
mov
cmp
xchg
into
arpl
enter
scas
lods
lret
orb
or
jno
popa
cmp
dec
add
imul
rorl
loope
xchg
lret
sbb
pop
movaps
sub
jge
dec
xor
das
nop
repnz
hlt
mov
mov
push
outsb
xor
dec
add
push
daa
insl
pop
xor
and
mov
ret
loop
clc
movsb
fdivp
movsl
aad
ret
mov
and
pop
adc
pop
xor
jnp
mov
fwait
icebp
stos
loope
xchg
lret
sbb
push
or
jno
popa
cmp
dec
add
imul
rorl
loope
xchg
lret
sbb
push
or
jae
movb
aas
lods
mov
in
cmp
jmp
ficomps
adc
cmp
mov
mov
and
insb
fnstsw
lock
mov
fwait
out
int
cmp
orl
mov
xchg
cmp
ljmp
dec
cli
loope
mov
test
ret
dec
lahf
sahf
dec
pop
sahf
cmp
dec
insl
add
cmp
mov
mov
jo
and
addl
call
push
mov
push
sbb
sahf
cmpsl
dec
dec
and
inc
pop
call
push
push
clc
inc
cmpb
pop
insb
xlat
lret
mov
pushf
nop
sub
std
xor
mov
test
test
sub
outsl
cmp
push
idivb
xchg
jno
roll
jns
adc
mov
push
and
mov
aas
push
ja
out
xor
test
dec
arpl
subl
adc
cmp
aas
cmpsl
inc
dec
dec
xor
inc
xor
fs
mov
push
ss
test
fdivs
sub
int
call
fidivs
jno
inc
inc
jg
shrb
mov
int
jge,pn
hlt
inc
outsb
sbb
xchg
pop
cmp
xchg
sub
aaa
sahf
ret
jg
jo
push
insb
daa
lret
icebp
mov
adc
cmp
loop
pusha
out
xlat
test
mov
ds
inc
mov
mov
pop
orb
popa
cld
jl
inc
movsl
cli
mov
leave
inc
psrlq
loope
cltd
sub
or
push
jp
hlt
and
lret
mov
cld
and
sbb
daa
mov
mov
repnz
dec
pushf
outsl
icebp
test
inc
xor
cmp
pushf
pop
fisubrs
lret
loopne
clc
rcrl
lods
push
in
dec
push
sahf
test
daa
sub
popf
gs
pop
pop
in
gs
loop
pop
hlt
inc
scas
icebp
push
test
xor
daa
insb
add
jp
addr16
and
or
and
mov
lcall
adc
mov
fs
jno
mov
or
lock
lea
daa
and
lods
cmpsl
outsb
mov
sbb
addr16
rcrl
lret
outsb
in
inc
mov
inc
icebp
and
xor
xchg
cmp
fstpl
and
loopne
les
inc
pop
sub
xor
mov
xchg
pop
lahf
inc
add
jb
pop
push
xchg
loopne
out
add
or
jae
sbb
mov
cmp
cli
ljmp
dec
lods
pop
ja
test
push
xor
fisubrl
fbld
dec
jmp
adcb
cs
cmpsl
mov
aaa
shll
insb
into
or
xor
outsl
cmp
pop
loope
add
aas
mov
dec
and
cmp
jp
in
mov
adc
push
cmpsl
sbb
push
xchg
cmp
insb
nop
lcall
aaa
mov
xor
gs
ds
leave
out
insb
inc
inc
lahf
icebp
cmp
rcll
fwait
push
or
xor
pop
je
arpl
cmp
data16
xor
jo
add
loop
ret
ja
cmp
fwait
and
adc
insl
jno
mov
fs
pop
insl
cmp
pop
lret
mov
in
loop
inc
loop
jp
les
xchg
jbe
pop
mov
lods
cmp
cmp
dec
inc
nop
push
push
cmp
and
leave
sbb
pop
jecxz
fsubp
dec
mov
rol
jne
ljmp
aas
mov
ret
cmpsb
mov
stos
out
ficoml
xor
fwait
xchg
lods
loope
xchg
jp
mov
mov
xor
fiadds
mov
and
test
outsb
movsb
test
jbe
and
ret
cld
cltd
popa
lock
mov
inc
push
into
and
nop
cmpsb
cmovs
inc
push
inc
sahf
push
or
ja
or
out
repz
stos
jg
mov
mov
shlb
and
add
test
add
push
pop
sti
imul
xor
push
fsubrs
scas
leave
insl
xchg
in
push
test
addr16
pop
add
push
data16
cmp
mulb
dec
cmp
loope
adc
xchg
clc
out
mov
cltd
popa
out
jns
pop
cltd
fdivrs
push
and
adc
mov
push
mov
dec
mov
dec
push
mov
sti
inc
fisubrl
jmp
cltd
and
mov
popf
outsl
in
mov
out
xor
and
ss
xchg
test
scas
stc
std
push
enter
xor
insl
pop
add
stc
jecxz
scas
cltd
loope
sbb
test
jno
mov
js
pushf
loop
insb
int3
dec
sub
add
leave
sbb
pop
cmp
mov
mov
pop
push
pushf
sbb
mov
pop
jb
dec
mov
sbb
jb
push
enter
sub
jnp
mov
mov
cld
lea
pop
inc
dec
dec
iret
arpl
pusha
cli
push
sbb
inc
outsb
xor
cmp
or
add
aam
clc
mov
mov
jl
aas
dec
lock
and
and
nop
jecxz
xacquire
call
jmp
sbbl
mov
cmp
rorl
push
insl
nop
push
jnp
dec
test
jp
stc
lcall
cmc
cmpsl
jo
cmpl
aad
cmpsl
cmp
and
jp
cmp
jg
shl
xchg
sbb
flds
fs
repnz
push
and
push
gs
dec
mov
mov
rol
stos
push
insl
shrb
pop
push
outsb
or
rorl
or
mov
and
mov
mov
lods
leave
cltd
int
and
mov
ficoms
les
jecxz
pushl
jns
cmp
aam
lea
arpl
lcall
ja
dec
je
bound
add
inc
add
sbb
add
hlt
sub
fisttpll
outsb
fidivrs
sub
lcall
and
enter
xchg
sahf
add
rorb
mov
xchg
xor
mov
fisttpl
aam
addr16
gs
call
jbe
xchg
jae
mov
inc
and
mov
mov
cmp
xchg
ficoms
lods
arpl
movsb
out
jle
mov
cli
ljmpw
cltd
mov
out
xchg
mov
jo
xchg
ljmp
xchg
jecxz
les
and
aas
insb
mov
insl
xchg
adc
lods
aas
pop
pop
or
jmp
adc
cmpsb
aas
lret
out
push
imul
cmp
push
loop
pop
xor
push
popa
add
out
fsubrl
fwait
pop
xchg
imul
arpl
pop
cs
int3
xchg
push
adc
rol
cli
and
cmc
rol
sbb
subb
fdivs
not
push
sti
inc
aas
and
movsl
or
fbld
push
fisttpll
jb
add
adc
ja
sub
jp
popa
push
mov
mov
aam
fdiv
xor
push
adc
pop
nop
les
leave
outsl
jnp
push
pusha
mov
sub
jo
cld
push
loopne
mov
bound
pop
js
push
cmpsl
repz
push
je
es
loope
push
ljmp
add
insl
add
xchg
cmp
in
pop
mov
popa
and
sbb
mov
jo
fsubs
shl
sbb
call
mov
mov
jp
subl
or
arpl
and
xor
xorl
mov
in
rclb
nop
add
xor
nop
mov
fmull
aam
cmp
jg
sub
push
mov
negb
jmp
adc
sub
call
test
cmp
xor
inc
cmp
and
push
ficomps
jl
dec
adc
sbbl
rolb
movb
mov
scas
inc
push
mov
jg
shrb
sbb
data16
fcompl
jb
pop
cmpl
mov
mov
rcl
sub
or
loop
mov
inc
in
mov
cmp
nop
add
pop
stos
out
fisubrl
out
add
lock
lret
and
daa
add
aaa
mov
xchg
lds
fcmovnbe
and
or
enter
mov
daa
mov
in
jb
or
cli
or
std
bound
lcall
mov
adc
data16
mov
jle
xchg
pop
push
rolb
ret
xchg
aad
cmp
and
aad
mov
xor
paddw
scas
jecxz
cmpsb
or
out
out
jbe
jno
lods
sbb
sbb
jp
in
pop
jns
bound
mov
call
shll
cmp
out
xchg
push
xchg
push
out
lret
cmpsb
into
inc
mov
repnz
pop
inc
jbe
xor
and
inc
sub
out
push
iret
and
mov
in
cmp
and
repz
enter
fdivrs
int3
push
clc
pop
dec
cmpsb
repz
jnp
mov
lods
imul
mov
push
xlat
sti
add
sub
rdmsr
mov
jns
lcall
cmc
sarl
imul
dec
add
cmpl
rorb
dec
or
andl
dec
push
mov
push
rcrb
mov
hlt
xlat
ss
decl
enter
rcr
add
negl
add
mov
lcall
lcall
cmp
lock
mov
addr16
or
lods
fistps
loopne
mov
jo
cmpsb
out
xchg
cli
aam
lret
inc
or
xchg
dec
mov
dec
cld
inc
pushf
rclb
pop
mov
push
inc
push
mov
insb
les
int
jb
adc
dec
cmp
adc
and
sbb
leave
push
push
scas
aam
filds
push
xor
je
mov
jo
test
sbb
adc
mov
inc
jcxz
push
xchg
or
int3
inc
imulb
and
outsl
lret
cmp
cmp
dec
std
and
ljmp
scas
flds
cmpsl
sbb
mov
lods
adc
and
dec
push
mov
not
xor
fdivrs
or
mov
mov
fstps
xor
ffreep
not
int
popl
pop
or
jb
enter
iret
mov
sbb
rcll
int3
out
fisubrs
xor
in
or
arpl
xlat
or
int
jo
rolb
push
aad
shr
loope
sub
repnz
push
cwtl
jns
push
mov
sbb
clc
adc
pop
xchg
out
leave
fstps
push
mov
jae
stos
pop
mov
lds
mov
loopne
cmp
jmp
fcoml
cmpb
mov
loope
insb
mov
dec
outsb
jg
lods
sahf
mov
aam
or
mov
in
mov
cs
inc
scas
adcl
mov
inc
push
sbb
lock
cmp
sbb
out
imul
cltd
xor
dec
or
jge
add
cmp
lret
add
out
popf
testl
and
sti
mov
mov
ret
add
addr16
pop
jo
fwait
aas
jne
cmp
jns
xor
cwtl
pop
xor
jbe
sub
mov
rorb
lds
fcmovnbe
dec
push
mov
mov
pop
leave
fdiv
cltd
adc
cld
pop
mov
add
movsl
pop
leave
or
outsb
je
nop
mov
daa
jmp
dec
inc
jo
ja
or
sbb
xchg
iret
fsts
cmp
push
inc
ljmp
mov
inc
inc
cmp
inc
mov
aas
arpl
loopne
adc
sub
rcrl
outsl
pusha
jg
in
les
xchg
lock
inc
decb
pushf
insl
iret
dec
test
mov
daa
pusha
xor
mov
xchg
popf
dec
loop
fcmovnbe
pop
or
loope
popa
inc
ret
pop
pop
add
scas
inc
and
or
mov
std
adc
lret
mov
out
inc
or
imul
jl
lods
jge
aam
sub
addr16
fnstcw
push
sbb
sub
dec
sub
sbb
pop
loopne
out
inc
mov
mov
mov
cmpsb
adc
sub
mov
movhps
rolb
sbb
mov
jecxz
xchg
call
and
xchg
repnz
push
adc
iret
adc
mov
jle
lods
aaa
out
xchg
jmp
icebp
add
int
jns
adc
jnp
lahf
cmp
or
movsl
sub
int3
cwtl
xor
out
mov
sbb
ja
lea
dec
sub
mov
and
sbb
push
ljmp
and
mov
pushf
in
fdivp
loopne
xlat
dec
shll
push
xchg
loop
dec
mov
lahf
sub
sub
sub
jb
jmp
orl
je
xchg
dec
fwait
sbb
add
jbe
mov
jo
dec
jecxz
mov
scas
mov
jnp
sub
divl
fists
mov
icebp
or
adc
sbb
push
mov
dec
loopw
or
and
and
pop
push
enter
add
out
mov
pop
std
add
mov
push
jno
into
dec
fidivs
jl
mov
cmpsl
dec
add
repnz
cmp
outsb
loopne
mov
xor
les
xor
jecxz
int3
aas
sbb
mov
xchg
fdivs
and
push
dec
jg
jb
mov
fldl
mov
mov
mov
int3
inc
ss
iret
xchg
pop
lods
sti
mov
mov
xchg
mov
je
je
sti
push
shll
inc
sub
push
mov
cmpsb
imul
and
and
out
stc
lret
add
out
jle
push
and
xlat
les
push
mov
fsubl
add
mov
pop
xchg
jnp
lea
cwtd
fs
sub
in
test
nop
arpl
mov
dec
pop
and
push
sbb
pop
lahf
pop
fldcw
mov
lock
out
nop
cmp
pop
cmp
out
or
push
mov
push
pop
popf
mov
in
rol
jns
iret
mov
les
mov
cwtl
and
mov
mov
lods
int
outsb
dec
fwait
xchg
fcmovne
stc
sahf
push
dec
mov
adc
add
xor
xor
in
inc
incl
dec
mov
xor
leave
jo
aas
xchg
es
imul
jno
inc
test
ret
xchg
lea
add
iret
pop
pop
lahf
ja
jbe
fcmovnu
repz
jno
test
inc
cmp
lds
mulb
popf
in
push
shlb
testb
and
xor
gs
xor
inc
mov
jg
lcall
negb
loopne,pn
or
push
add
jae
loop
add
add
cltd
popa
inc
icebp
aaa
daa
ret
inc
xchg
sub
mov
idivl
fcompl
int
fs
test
ja
xor
mov
jmp
negl
pop
pop
aad
xorl
flds
push
test
xchg
sub
fisttps
imul
cmp
xchg
mov
jne
mov
hlt
pusha
mov
sbb
xor
nop
sbb
sub
cld
cmp
pop
adc
popa
cmp
out
xchg
push
mov
outsb
and
mov
inc
inc
xor
test
add
push
scas
mov
into
mov
add
cmp
cmp
inc
cmp
mov
inc
or
mov
cmp
jnp
add
pusha
add
dec
push
loopne
push
and
sub
js
clc
notb
fisubl
std
mov
pop
adc
and
sub
dec
push
pop
leave
xlat
xchg
sub
push
or
jno
lcall
lcall
lea
push
push
lahf
and
adc
dec
cmp
xor
mov
push
xorb
pop
xor
inc
cmp
pop
push
xchg
lcall
jp
cmp
cmpsl
cmpsl
pop
imul
sti
ret
add
push
aaa
push
jmp
cmp
repnz
push
add
mov
mov
push
xor
mov
jp
ret
pop
shll
adc
test
jo
inc
lret
mov
or
addr16
ja
fstpt
cwtl
insb
shll
into
negb
push
addr16
push
stos
addb
cli
adc
adc
data16
jns
xor
out
pop
jle
ja
dec
out
cmc
mov
cmp
pop
lds
call
push
das
jbe
mov
xchg
fidivrl
cmc
clc
loopne
into
jp
cli
addr16
xor
or
push
ss
pop
and
pop
fsts
jb
add
fistps
cs
jnp
into
cmpsb
push
ljmp
mov
mov
mov
dec
mov
cmp
rorl
lds
out
jb
adc
sbb
push
xor
repnz
sbb
popf
loop
or
or
inc
sbb
pop
or
popa
and
lods
lods
or
test
pop
lea
dec
mov
loop
sbb
xor
out
mov
pop
jp
pop
pop
daa
dec
sarb
loope
notb
jge
push
shl
je
cwtl
cmpsl
pop
inc
jecxz
outsl
fwait
jae
mov
movb
mov
subb
sbb
sahf
adc
test
adc
out
and
movsb
or
xchg
jl
sub
and
aaa
scas
pop
ss
or
mov
pushf
fdivs
xchg
push
frstor
lret
sbb
and
push
sti
xchg
adc
mov
cmpsl
ja
into
push
mov
pop
shlb
movsb
dec
shlb
loope
mov
mov
fnstcw
adc
push
stc
stos
mov
mov
xor
cs
jnp
push
dec
scas
outsl
fs
or
cmpsb
xor
mov
pop
lcall
sarl
nop
call
pop
call
fs
or
test
pop
imul
mov
test
xorl
pop
mov
repz
gs
leave
fisubrl
std
xchg
lahf
mov
or
hlt
lret
push
and
cmpsl
dec
cmp
data16
xchg
jnp
loope
mov
cmp
sub
xor
mov
jnp
mov
adc
daa
mov
iret
xchg
das
leave
dec
adc
push
mov
insl
test
xor
jecxz
sub
mov
jecxz
jge
push
inc
xor
das
fs
inc
stos
pop
lret
gs
imul
mov
sub
jns
aam
aaa
push
mov
and
dec
inc
inc
arpl
aad
add
and
sti
roll
lret
movsl
mov
sub
outsb
or
adc
cs
sbb
mov
xchg
mov
xlat
fisubrs
and
adc
pusha
add
mov
jg
or
sub
push
mov
mov
and
test
into
out
dec
jmp
int
adc
outsl
mov
int3
fstl
xchg
mov
dec
arpl
es
sti
push
sub
sbb
movsl
inc
shll
aad
and
stos
xor
pop
mov
popa
jmp
ret
rorb
test
ljmp
pop
sti
leave
test
jle
push
and
stos
mov
daa
data16
or
jae
shll
int
enter
push
sbb
mov
sub
xor
in
jbe
cld
cld
add
mov
pop
sarl
in
enter
dec
mov
gs
and
loope
sub
fisttps
adc
enter
xchg
mov
pusha
enter
mov
in
adc
mov
test
mov
mov
in
addr16
pop
out
loope
add
jbe
mov
mov
or
jmp
xor
popf
jb
add
out
out
movsb
test
dec
push
xchg
fdivs
pop
lcall
jo
sbb
xor
ljmp
dec
testl
pop
fldt
shl
mov
and
sbb
dec
push
enter
ret
aad
xor
push
mov
adc
std
jns
popf
cwtl
sahf
test
enter
movsb
das
sahf
int
fisttpl
mulb
mov
mov
mov
inc
xor
pop
sbb
pop
mov
xchg
nop
lea
jno
mov
loopne
insb
shlb
cmpl
push
mov
into
test
xor
out
mov
shll
addl
cmpsl
loope
bound
mov
sub
adc
or
push
jmp
aad
add
js
std
stos
mov
inc
or
pop
lcall
movsl
test
int3
push
fxch
cld
pushf
sbbl
sub
adc
pop
xor
jnp
mov
fwait
icebp
stos
loope
xchg
lret
sbb
push
or
jno
popa
cmp
dec
add
imul
rorl
loope
xchg
lret
sbb
push
or
jno
popa
cmp
dec
add
imul
rorl
loope
xchg
lret
sbb
push
or
jno
popa
cmp
dec
add
imul
rorl
loope
out
or
adc
add
jg
sub
sbb
das
cs
aas
loopne
jmp
lret
outsl
mov
pop
mov
pop
lahf
dec
out
cmp
sub
sbb
and
psrlq
lret
outsl
xchg
dec
stos
dec
fwait
pop
mov
roll
xlat
adc
cmp
sti
sbb
push
mov
adc
adc
or
aas
shrb
mov
cwtl
sbb
test
cltd
inc
and
jle
xchg
outsb
shrb
inc
test
das
and
in
hlt
stos
add
pop
repz
fwait
aas
scas
outsl
hlt
dec
adc
xor
mov
inc
jmp
push
js
sar
ficoml
push
dec
dec
pop
dec
scas
jnp
imul
dec
adc
sbb
fcmovnu
xchg
loopne
nop
scas
jg
les
ljmp
jg
adc
out
sbb
imull
fdivr
mov
xchg
sarl
mov
dec
push
inc
test
enter
adc
cmp
xlat
or
test
mov
sub
sub
dec
ja
loope
mull
dec
clc
cmp
sub
sbb
cltd
ss
daa
inc
pop
flds
divl
addr16
push
sbbl
jnp
add
aaa
jmp
pushf
sahf
cltd
inc
subb
das
mov
jnp
outsl
cld
sbb
cmp
cmp
out
daa
subl
iret
jb
cmp
sahf
jns
adc
cmp
cmp
lret
mov
aaa
mull
cmpsl
ja
sub
sbb
or
sti
aas
jmp
fistpl
lret
outsl
mov
pop
mov
pop
lahf
dec
out
cmp
sub
sbb
or
sti
aas
jmp
fistpl
lret
outsl
mov
pop
mov
es
movsl
sbbl
mov
xor
mov
xchg
jecxz
add
pop
sub
pop
ret
xor
adcb
ret
push
imul
pop
sbb
aas
push
xchg
and
pop
mov
jnp
pop
insl
sub
jnp
std
jecxz
jge
fdivrs
loopne
cmpsb
in
jnp
pop
imul
xor
js
cwtl
jnp
pop
fucom
inc
inc
mov
lock
adc
in
jmp
and
adc
scas
sub
test
mov
xchg
insl
fs
mull
dec
js
inc
fdivr
mov
inc
sahf
lock
bound
mov
or
push
pop
daa
jmp
xor
push
je
or
pop
popa
nop
pop
ret
in
aam
mov
scas
jp
cli
push
add
stos
out
fs
sub
loopne
pushl
in
bound
test
data16
cmp
jle
mov
mov
cmc
add
mov
adc
xchg
mov
mov
xor
push
or
pushf
sbb
imul
jae
cmpsb
notb
inc
int3
rclb
dec
mov
xchg
fimull
aam
lret
and
dec
xor
sbb
inc
int
es
test
and
xchg
push
add
loope
or
popf
ljmp
fnstsw
sahf
xlat
icebp
jl
or
cli
inc
adc
pop
xchg
mov
or
fdivr
push
inc
mov
in
into
popf
adc
push
push
cli
add
into
xchg
stos
enter
xlat
sahf
and
push
or
insl
cmp
ss
ds
es
jmp
mov
pop
jl
fcomps
cli
mov
inc
rolb
int
and
add
dec
loope
out
jg
ljmp
pop
push
jo
adc
pop
add
mov
loopne
rdtsc
aad
pop
xchg
and
xchg
enter
pcmpgtd
je
add
mov
std
pop
loop
dec
test
mov
inc
or
lcall
inc
rcl
nop
cmpsl
sbb
lret
pop
add
sbbb
mov
sbb
lods
jbe
inc
jge
jae
or
lcall
loopne
fxch
outsl
xlat
inc
in
mov
inc
inc
aam
imul
jl
into
outsl
dec
sbb
xlat
rclb
push
int3
pop
xlat
mov
rorb
stos
cmpsb
xchg
inc
pushf
mov
popf
mov
dec
sarb
adc
out
jecxz
cmp
js
cmp
lods
test
xchg
ljmp
push
lods
push
mov
arpl
insl
sub
push
mov
xchg
dec
and
xchg
daa
pushf
cs
inc
arpl
xchg
pop
adc
mov
adcl
pop
cmp
or
clc
dec
jnp
mov
je
hlt
or
ss
in
test
jbe
movb
xchg
sbb
jl
inc
cmp
shll
loope
aas
movsb
or
adc
jns
lret
or
or
cmpsb
mov
xor
icebp
cs
outsb
mov
lcall
push
arpl
add
pop
push
hlt
bound
testl
inc
gs
inc
push
mov
fisubl
rcrb
fdivp
mov
arpl
lcall
nop
pop
fisttps
jbe
lcall
das
dec
sbb
cltd
fwait
jle
ret
out
je
add
aaa
mov
xor
lcall
and
pop
mov
dec
imul
shl
pushf
xor
adc
outsb
add
movsl
xor
sarb
sub
popa
vunpcklps
xchg
jl
daa
or
mov
outsl
and
lret
dec
dec
xchg
xlat
push
les
mov
sahf
cmp
add
cmp
push
sbb
jnp
sub
inc
out
sub
sub
jae
daa
mov
popf
popf
sbbl
jg
movsl
cwtl
std
dec
ss
mov
xor
dec
push
jp
dec
jae
mov
in
js
scas
cmp
cli
sub
movsl
add
mov
mov
les
add
popa
push
mov
pop
scas
jg
pop
bound
test
das
flds
pop
dec
push
lahf
loope
xchg
jns
adc
dec
movsb
sbb
add
or
sarl
out
push
dec
daa
mov
test
pop
adc
loope
jle
push
popa
aas
popf
lock
or
mov
add
movsl
leave
les
test
addl
sahf
sbb
xor
adc
shl
stos
rcl
xor
iret
jecxz
push
dec
rcr
jb
lahf
aas
fstpl
mov
gs
jg
add
pop
inc
out
add
cmp
mov
lock
cmp
xor
test
push
int
popf
xlat
sub
inc
aaa
fs
outsb
pop
std
jp
xor
mov
rcrb
mov
call
fisubs
inc
lock
mov
mov
arpl
je
sbb
outsb
xlat
fiadds
sahf
xchg
sub
jg
xchg
lods
into
mov
pop
pop
repnz
fistl
or
xlat
mov
orb
imulb
jg
test
pop
in
fldenv
in
in
out
sbb
ret
pop
jmp
rclb
lods
cmp
xchg
inc
jne
fs
inc
xorl
aam
or
sti
and
dec
push
sbb
in
test
in
cmc
jge
cmp
and
stos
pop
aam
cmpsb
addl
std
sbb
or
pop
jae
or
cmc
sbb
aad
cmp
cmc
xchg
loopne
cmp
mov
jnp
lcall
fucomip
inc
xchg
cmp
pop
lcall
inc
movsb
movzwl
ja
mov
and
int
insb
idivb
pop
and
push
lcall
pop
dec
and
xchg
jbe
in
push
enter
enter
loopne
or
movsb
push
push
mov
mov
sub
pushf
xchg
sub
mov
hlt
or
out
imul
inc
pop
and
xor
push
sbb
jae
adc
pop
test
jp
mov
xor
xchg
dec
xchg
mov
jbe
adc
andb
test
leave
pop
aas
mov
rep
ss
outsl
decl
cmp
cld
push
inc
adc
arpl
add
dec
out
mov
das
xchg
mov
jne
in
dec
pop
repz
loop
cmp
pop
mov
or
add
cmp
add
sbb
or
sub
or
xlat
cmpsl
ja
out
and
xor
sub
jg
clc
out
push
std
pop
pop
pop
fdivrp
jge
cld
mov
stos
jmp
mov
push
imul
leave
cmp
nop
mov
outsl
sbbl
call
test
pushf
scas
cmc
sub
mov
rorb
dec
inc
ret
test
jae
add
das
mov
dec
xchg
jbe
mulb
movsl
inc
mov
add
inc
adc
xor
pop
and
mov
dec
sub
pop
cmp
lcall
mov
out
in
cmc
add
sarb
push
sbb
mov
mov
sbb
cmpsb
inc
mov
popa
popa
fs
pop
cmp
rcll
xlat
ret
fidivl
stc
fmull
dec
sub
out
das
or
shll
cmp
les
int3
inc
mov
jno
add
pushf
bound
mov
dec
out
test
pop
stos
cld
out
test
cld
mov
cmpsl
stos
mov
inc
into
cmpsb
jmp
out
push
inc
ljmp
mov
and
in
int
dec
xchg
jl
adc
test
das
mov
cmp
jg
leave
mov
dec
cmc
popf
mov
or
pop
adc
jecxz
test
mov
jb
inc
dec
or
lock
sub
push
arpl
into
iret
xchg
cmpsb
or
shlb
aas
cmp
data16
push
dec
mov
or
fadds
out
mov
rcrl
xor
movsl
imul
clc
mov
std
cli
jns
and
push
push
lods
mov
inc
das
iret
popf
sbb
iret
cmpsb
adc
pop
jecxz
xchg
int
addb
test
sbb
mov
mov
push
pop
cs
jecxz
cltd
dec
outsb
cmpsb
mov
mov
stos
rolb
in
lds
or
pop
sbb
or
sti
xchg
sub
in
jmp
cmpsb
or
or
dec
ret
inc
mov
mov
xchg
mov
dec
and
fnstcw
cmp
dec
mov
popa
inc
leave
xchg
fsubrl
clc
jns
or
mov
mov
ret
enter
pop
in
loopne
int3
pop
lods
test
sahf
adc
enter
stc
dec
sahf
xchg
fmul
cmp
jmp
fisttpll
xchg
sub
mov
arpl
dec
adc
and
lods
je
test
fwait
or
inc
mov
xchg
mov
pusha
int
dec
or
xor
push
push
sbb
int3
insl
mov
sub
out
and
hlt
rcl
sub
out
rol
outsb
imul
idivl
sahf
cmpsl
sarl
imul
inc
mov
adc
test
jae
lock
imulb
mov
incl
inc
int
sub
sbb
movsb
push
sti
pop
mov
cwtl
sub
jmp
sub
stos
sub
jl
in
sbb
fnsave
call
rclb
or
lcall
outsl
xchg
addr16
cld
daa
loopne
cltd
mov
or
iret
jg
add
pop
call
std
lcall
dec
rorb
mov
test
push
roll
shll
imul
mov
mov
push
test
mov
es
insb
mov
xchg
fiaddl
jle
fs
xchg
push
inc
xor
test
pop
and
fwait
mov
mov
movsl
arpl
out
xorl
js
jae
jbe
mov
mov
mov
jo
int3
std
inc
xchg
push
movsb
subb
ljmp
sub
mov
sahf
jecxz
mov
gs
sbb
xor
cmp
adc
sbb
dec
out
rol
or
xchg
mov
mov
adc
je
mov
pop
xlat
xlat
push
jg
repnz
xchg
mov
pop
into
imul
inc
and
or
dec
call
push
ds
and
mov
jae
xor
test
stos
test
pop
pop
jmp
leave
cwtl
jnp
test
push
je
les
aas
push
adc
in
add
imul
mov
loop
xor
or
xchg
outsb
scas
lock
mov
into
data16
es
jne
lods
addb
arpl
adc
or
mov
jl
xor
testb
cs
test
and
sbb
jmp
xor
push
jg
mov
aas
or
inc
adc
jge,pt
fistpll
es
inc
and
pop
imul
inc
dec
mov
pop
jnp
mov
mov
sar
sbb
clc
push
ljmp
xchg
cld
add
sbb
xor
cli
xor
jno
jg
sbb
loop
mov
into
popf
fstpl
cmp
push
cmpl
loopne
mov
adc
clc
mov
and
jle
mov
dec
lea
lds
jae
adc
subb
pop
outsl
daa
fwait
aas
call
adcl
out
arpl
push
mov
mov
mov
mov
pop
ret
lahf
xchg
loopne
lcall
pop
outsl
les
stos
repnz
cmp
cmc
dec
fimuls
mov
jbe
dec
cmc
aad
xchg
das
loopne
mov
push
lret
stos
aad
aam
fidivrl
pop
lret
push
jnp
adc
cmpsb
fs
jb
filds
shlb
pop
and
mov
jnp
add
andl
or
aad
in
ret
lock
sbb
in
and
popa
jno
sbbl
in
popf
xor
sbb
ret
enter
push
nop
negb
out
lock
add
ss
xchg
shlb
inc
popa
mov
in
adc
xchg
gs
xchg
mov
xor
jb
inc
xchg
ljmp
lods
call
lock
je
outsb
test
xor
lcall
pushl
dec
sub
out
cmp
mov
mov
xchg
fdivs
jle
xchg
loopne
xor
into
not
sbb
jo
mov
jo
jl
in
addb
rolb
inc
jb
push
jg,pt
outsl
pop
xchg
and
sub
leave
dec
sbb
movsl
sar
jbe
aaa
cltd
insl
xchg
xor
cmp
ffree
and
cmc
adc
out
add
xor
xchg
test
test
ljmp
cltd
ficoms
push
iret
jnp
sbb
mov
dec
fucompp
test
test
jns
loope
mov
fwait
scas
sub
pop
cmp
leave
cmpsb
pushf
push
cmp
adc
mov
roll
imul
mov
mov
jp
pop
fsubl
sub
add
cs
int3
xor
lock
lahf
mov
adc
fadds
push
add
call
and
gs
aam
push
call
xchg
adc
cmpsl
roll
xor
iret
fs
subl
jae
cmp
pop
mov
popf
mov
pushf
sbb
lahf
push
les
ss
mov
movsbl
ja
out
out
fwait
cmp
data16
push
out
dec
dec
addl
xchg
negb
push
sbb
std
int
lcall
insl
push
dec
inc
sub
mov
repnz
xor
sbb
dec
pop
xchg
mov
out
inc
jo
push
xor
adc
not
jno
aas
sub
inc
or
mov
shll
adc
lret
cli
or
lods
scas
jb
js
in
test
out
pop
es
or
mov
pop
cmp
iret
fsts
daa
push
aas
inc
adcb
push
mov
and
pop
cli
cmpsl
shlb
fcmovnb
and
xchg
xor
lea
daa
push
mov
int3
pop
or
int3
int
dec
test
sbb
loopne
sbb
jl,pt
scas
pop
hlt
enter
inc
lret
add
mov
sub
pop
cli
ret
dec
or
push
rorl
test
or
daa
outsl
movsb
xchg
int
dec
sub
test
call
lock
orb
jmp
sti
adc
insl
out
xor
lret
pop
loopne
out
adc
aam
les
or
cmp
add
mov
sar
popf
push
sub
pop
loope
scas
dec
and
jp
mov
les
out
xor
xchg
int
data16
les
bound
inc
sbb
jns
lea
inc
testb
andb
push
pusha
adc
in
int3
mov
and
inc
popl
and
pop
shr
pop
cmp
xchg
or
and
ss
inc
dec
flds
mov
mov
jb
xor
and
nop
fs
jecxz
rcr
sbb
cmpsl
ja
les
or
sbb
daa
xchg
dec
shrl
jl
pop
mov
scas
popf
scas
push
mov
sti
mov
mov
mov
xchg
pusha
outsl
lds
jnp
test
jb
pop
jne
repnz
mov
inc
pop
cld
sbb
xchg
xchg
clc
jg
enter
sub
incb
rcrb
loopnew
or
pop
out
loope
mov
dec
jle
cmp
pop
int
shl
stos
cld
stos
mov
inc
sbb
rcl
xor
loope
cmpsb
cmp
fistpll
mov
push
jno
lds
call
jmp
or
push
xchg
loope
add
pop
shll
adc
mov
jns
data16
jecxz
arpl
daa
mov
subb
loopne
cmpsb
or
cmc
popf
fnstsw
cmp
and
cmp
insl
out
xor
je
pop
pop
lret
push
pop
jns
jno
sub
pop
hlt
or
push
imul
int3
sbb
aaa
xchg
push
xor
push
andl
lcall
mov
push
cmp
add
lret
imul
lods
sub
stc
fadds
mov
mov
mov
jg
cmp
or
pop
jbe
inc
xchg
punpcklwd
and
stos
movsb
lahf
inc
push
fdivrl
and
push
or
mov
mov
or
lods
or
mov
pop
jmp
subl
lret
fwait
testb
xchg
add
ror
sarb
mov
sub
push
mov
mov
push
sbb
test
ss
sbb
sti
jae
cld
inc
xchg
pop
pusha
mov
and
and
sub
scas
rol
fisttps
mov
or
cmp
cmp
cld
push
jo
mov
inc
adc
aad
loop
xor
in
stos
or
stos
dec
div
xorl
lods
mov
arpl
bound
popf
lahf
sub
repz
mov
insb
fcmovbe
jl
push
inc
loop
cmpsl
add
adc
fnstsw
sub
mov
push
test
roll
and
dec
sarb
imul
mov
and
xor
filds
cmc
sbb
scas
scas
cmp
cmp
cmp
pop
add
int3
sbb
xor
xor
mov
cmp
and
and
aam
ds
mov
enter
movsb
cmpsb
imul
rcr
jecxz
adc
outsb
xchg
mov
lahf
loopne
jo
cmp
jg
xchg
fsubrs
ljmp
adc
adc
sahf
fwait
sbb
sbbl
std
inc
dec
in
cmp
jnp
stos
and
lds
inc
lret
cmp
sub
cld
xchg
test
aad
adcb
inc
andb
sarl
in
and
jge
mov
push
lret
adc
jae
lret
pop
cwtl
enter
lods
or
push
cld
dec
lea
sbb
loopne
lret
lea
imul
pop
int
stos
popf
or
push
dec
out
and
push
sbb
mov
xor
fsubrl
and
and
lret
pushf
and
pop
insb
mov
mov
xor
sub
jb
inc
shlb
push
cmp
adcb
bound
jbe
fwait
and
ret
movsb
xchg
js
mov
negl
or
xor
mov
roll
add
stc
pop
pop
adc
test
aad
fisubrs
data16
mov
test
push
pusha
cmp
cwtl
int
jb
lea
bound
sbb
xchg
pushf
jg
in
sbb
iret
inc
jae
ljmp
sarb
aas
mov
push
or
inc
leave
or
imul
pop
out
push
lret
shll
jecxz
jnp
sub
or
push
cmp
add
int
inc
push
orl
test
push
roll
fwait
sub
jns
cmpsl
sbb
ret
out
jne
and
int
ds
jp
roll
sbb
lret
aaa
or
lea
enter
insb
lea
xchg
adc
repz
scas
mov
add
ljmp
iretw
outsl
negl
ffreep
and
dec
push
adc
leave
mov
nop
jmp
mov
pop
xchg
sbb
xchg
aad
ret
lods
inc
jns
das
cmp
adc
lods
push
fisubs
call
or
xor
popf
cmp
orl
cmp
and
sub
inc
nop
jmp
sbb
mov
cmp
pop
inc
scas
sarb
cmp
push
test
push
out
cmp
cmp
mov
jb
sarl
test
push
add
jp
addr16
and
ljmp
push
xor
notb
pop
sti
shlb
loopne
dec
xchg
cmc
das
sub
or
sbb
pop
clc
dec
mov
cmp
fcmovnu
cmp
jl
fstpt
xor
scas
push
shlb
negb
mov
mov
repnz
dec
cmc
call
mov
icebp
sysenter
sub
negl
fwait
roll
lods
shll
adc
movsb
mov
xlat
mov
in
inc
cmpsb
adc
push
fisubl
icebp
mov
roll
inc
mov
dec
mov
sbb
adc
inc
xor
mov
cmp
push
jg
repz
in
sbb
test
int3
ja
sbb
cltd
lcall
aad
rolb
idivl
xor
icebp
jge
sub
jg
cltd
aaa
inc
sahf
lea
push
push
fbstp
aad
xchg
movsb
sarl
push
lea
or
pop
pop
imul
cmp
mov
dec
scas
pushf
sub
out
aad
das
aad
jno
pop
fwait
push
or
out
adc
jmp
and
sub
les
add
pusha
and
test
dec
out
cmp
sub
sbb
or
sti
aas
jmp
fistpl
lret
outsl
mov
pop
mov
pop
lahf
dec
out
cmp
sub
sbb
or
sti
aas
jmp
fistpl
lret
outsl
mov
pop
mov
inc
lahf
dec
out
cmp
inc
iret
pop
fisttps
das
cli
aas
out
pand
ret
jle
dec
xchg
pop
outsl
scas
lahf
mov
or
cmp
sub
pop
lret
rolb
inc
movsl
fistpl
mov
mov
mov
stos
call
inc
icebp
xchg
mov
lret
pop
sub
js
or
pop
cmp
mov
clc
mov
fidivrl
sub
js
or
jl
sub
dec
adc
ds
cwtl
jecxz
repnz
inc
rorb
xor
push
arpl
jg
xor
dec
and
lods
decl
sub
pop
addr16
repz
sbbb
movsl
or
les
jno
fmuls
cmp
int3
lds
cmc
lea
mov
stos
mov
cwtl
es
js
add
rcr
adcb
jo
cmc
neg
xchg
rcr
pop
addr16
lods
scas
mov
aam
in
xchg
movsl
pop
dec
aas
and
ja
sbb
mov
or
xchg
loop
mov
js
jp
or
dec
inc
fcomp
pop
bound
add
fildl
mov
mov
cmc
lea
mov
sub
fdivrs
mov
fsubr
test
add
mov
add
push
inc
pop
dec
mov
call
mov
push
sbb
cmp
sbb
pop
jbe
pop
xor
push
ret
scas
jmp
stc
movsb
les
sbb
jg
or
jge
pop
cmp
jmp
cwtl
mov
ljmp
pop
sub
js
or
push
pop
cmp
mov
clc
mov
fidivrl
sub
js
or
push
pop
cmp
mov
cmpsl
mov
jno
je
adc
aad
mov
cmpsl
pop
pushf
mov
mov
hlt
test
int3
adc
push
push
pop
sbb
xlat
push
into
fdivs
pop
or
push
ss
adc
out
cs
mov
lahf
xchg
addb
fimuls
ljmpw
mov
xorb
repnz
mov
and
jg
scas
xchg
push
add
jno
and
jnp
cmpsl
fwait
leave
cmp
dec
xchg
iret
and
push
ds
loopne
fldt
jns
jecxz
loop
xchg
or
outsl
xorb
xchg
fsts
and
adc
dec
sti
sub
mov
rorb
lret
xchg
jne
inc
xor
pushf
add
mov
push
fwait
inc
test
push
pop
jb
adc
mov
imul
mov
add
inc
imul
test
mov
mov
adc
scas
ret
dec
divb
mov
push
push
pop
sbb
or
mov
leave
push
xchg
lds
inc
imul
and
inc
and
xchg
mov
cwtl
cmpsl
pop
iret
dec
enter
sbb
stc
mov
or
fisubrs
cmp
add
push
cmc
leave
sub
pop
add
pop
loop
in
lret
or
shll
jmp
movsb
loopne
scas
scas
mov
push
enter
mov
addr16
jmp
sub
push
sahf
push
sub
jns
xlat
jp
inc
cmc
inc
in
in
add
cmpsl
lods
lret
cmp
clc
ret
push
push
push
cmp
jo
jbe
mov
sub
inc
sub
cmp
out
testl
test
bswap
cmp
push
adc
jns
lock
pusha
in
xlat
sbb
dec
lock
sub
or
sub
hlt
test
sbb
das
and
xlat
imul
imul
pop
mov
dec
inc
rcr
mov
adc
cmpsb
jae
sahf
mov
int
sbb
cmpsl
inc
mov
lods
iret
jl
popa
fiaddl
nop
mulb
shl
mov
lock
popf
out
jnp
out
outsb
decb
outsl
inc
shl
lods
jg
xchg
push
jae
hlt
jb
xchg
push
loop
push
leave
sbb
jge,pt
cltd
cli
xor
cmp
sbb
mov
dec
std
cmc
fstpl
mov
push
fwait
inc
enter
fldl
out
mov
imul
test
repnz
mov
lods
mov
mov
pop
or
jae
cmp
incb
das
sub
dec
lods
push
flds
cmpsl
jae
sub
imul
jmp
jo
pop
cmpsb
out
fbstp
fistpl
xor
dec
sbb
sbb
lods
call
pusha
test
lcall
popa
xchg
fnsave
into
addr16
push
in
fnstenv
mov
jp
out
push
test
jg
mov
or
cli
jmp
mov
push
int
lcall
mov
mov
loop
adc
ss
outsb
push
imul
shrl
and
xlat
xchg
std
push
ja
fwait
pop
std
push
dec
scas
or
test
cmp
add
inc
hlt
inc
iret
mov
jmp
sbb
xchg
push
cmc
icebp
sub
stos
nop
mov
push
aad
in
aaa
cmc
aam
jl
push
or
pushf
lock
in
sti
jbe
xchg
push
lcall
jecxz
adc
pop
dec
leave
pop
cmp
ja
inc
pop
jp
xchg
je
mov
addb
jmp
mov
push
sbb
pushf
imul
xor
leave
popa
pop
insb
and
stos
cmp
scas
insb
lock
and
lahf
stos
cmp
mov
mov
and
xor
fildll
cmp
lret
sbb
testl
pop
push
jl
rcrb
inc
sub
mov
xor
in
mov
mov
scas
sub
inc
push
push
push
xchg
inc
dec
or
push
mov
add
shrb
loopne
test
ljmp
fldt
sbb
or
mov
imul
sbb
mov
rcrl
js
and
pop
sbb
in
fdivr
fnstsw
rcll
or
xlat
int3
xchg
orl
xchg
shlb
and
mov
push
faddp
out
lret
jb
hlt
test
sbb
inc
and
jmp
push
scas
xchg
or
inc
fwait
dec
ss
push
or
jb
jb
mov
and
ljmp
aam
fsubr
inc
pop
sbbl
jbe
scas
mov
add
ja
jbe
mov
call
jo
sbb
mov
add
fcoml
or
in
pop
pop
inc
pop
pop
stos
cmp
imul
xor
popf
xlat
cmpsb
imul
pop
fmuls
pop
scas
addr16
adc
jmp
lret
in
xchg
int3
mov
push
jge
add
mov
bound
js
add
scas
insb
pop
cmp
enter
lds
cmp
subb
mov
testb
ret
adc
rolb
dec
sbb
loop
and
jo
out
dec
dec
movsl
mov
flds
fcom
dec
jae
cmpsb
or
pop
xchg
cmp
pusha
pop
cmp
adc
ds
cmpl
lods
enter
pushf
fmull
sub
mov
mov
xchg
aam
pop
push
xor
cmp
push
mov
adc
adc
sub
dec
xchg
xorb
out
ret
push
pop
mov
xor
aad
xor
cmpsb
cmp
fisubrl
pop
xchg
jbe
jl
push
loope
pushf
push
adc
inc
dec
cmp
mov
pop
mov
pop
mov
lods
inc
loopne
jmp
lcall
or
rcl
mov
xor
fnstcw
imul
cld
rorl
outsb
test
add
out
jno
pop
pop
push
sbb
call
and
cmp
rcll
fidivs
adc
stos
testb
in
iret
imul
insl
mov
xor
xchg
dec
mov
negl
or
or
xchg
in
enter
xor
rolb
mov
or
cmp
xor
jne
call
out
cltd
sbb
dec
orl
push
xor
jns,pn
pop
imul
sbb
fs
out
mov
sub
test
sbb
lods
loop
add
fdivl
in
call
hlt
iret
fwait
cmpsb
sbb
xor
cmpsb
dec
xchg
sbb
push
sub
into
repz
sbb
jns
cmp
insb
cld
insl
hlt
pop
roll
mov
jnp
insb
and
sbb
cmp
mov
call
aam
jecxz
xor
mov
iret
pop
pushf
insb
mov
pop
leave
adc
pop
clc
inc
adc
jbe
sub
gs
mov
clc
andl
inc
cltd
xor
add
mov
repnz
sub
testb
popf
mov
dec
xchg
dec
mov
xchg
mov
mov
dec
bound
negb
xlat
call
lahf
lret
sub
or
mov
inc
inc
dec
mov
push
and
fnsave
icebp
dec
clc
cs
adc
mov
pop
jbe
data16
xchg
push
outsb
cmp
sbb
pop
sub
in
lds
movsl
mov
dec
sbb
nop
jmp
mov
or
xchg
adcb
dec
push
and
mov
mov
mov
aad
xor
jo
mov
test
arpl
flds
mov
sbbl
or
adc
inc
push
jne
test
movsb
cwtl
js
popf
data16
pop
push
and
push
push
adc
mov
or
test
in
jle
push
fs
test
push
iret
jp
sub
mov
lret
jnp
iret
data16
mov
pop
std
inc
mov
data16
les
pop
dec
mov
jmp
pop
push
ret
mov
or
adc
mov
decb
mov
inc
int
sub
xchg
stc
xchg
test
out
aad
cmpsl
xchg
push
dec
mov
addr16
jns
hlt
adc
push
or
mov
and
stos
test
mov
mov
nop
daa
adc
mov
cmp
sub
in
std
push
mov
ret
icebp
dec
ljmp
insb
outsb
ja
xchg
loop
popa
jne
mov
mov
mov
loop
dec
dec
popa
jbe
adc
dec
outsl
xchg
or
jp
or
popf
push
out
mov
mov
fsubs
mov
sbb
add
or
inc
inc
fidivrs
pop
icebp
cs
xchg
push
clc
pushf
sar
sbb
mov
adc
arpl
aad
push
out
push
pop
pop
dec
xchg
xchg
pop
aad
pop
sub
dec
es
lods
add
outsb
outsl
test
and
sbb
loope
test
jns
mov
xor
outsb
dec
and
push
push
lret
xor
stos
or
std
aam
inc
push
test
mov
xchg
sub
sub
int3
cmovb
lret
push
out
movsb
icebp
leave
jne
lock
int
or
lea
sahf
jmp
gs
mov
mov
mov
jl
es
stos
mov
lret
pop
add
mov
std
popf
shll
inc
jmp
data16
and
addr16
iret
nop
mov
out
push
dec
cmpsb
xchg
and
int3
inc
pop
push
sub
das
mov
into
lea
sub
scas
gs
aam
add
fistpl
sbbl
mov
xchg
subl
push
add
xor
xchg
repnz
mov
cmp
int3
cmp
adc
cmpl
push
test
xor
stc
add
loop
xchg
pop
hlt
sbb
mov
lods
dec
aas
push
pop
pop
lock
pop
sbb
inc
sub
fstpl
scas
cmp
sub
insb
jns
xor
fnstenv
add
sub
pushf
pop
int3
rorl
movsl
cmpsb
jle
push
iret
ja
rorl
daa
and
leave
xlat
dec
out
cmc
mov
jp
lret
xor
sarl
sub
test
bound
mov
xor
push
cs
push
mov
out
ljmp
stos
fldcw
arpl
xchg
lea
mov
aas
data16
or
outsl
mov
scas
ret
adc
int
movsb
dec
xor
cli
pop
loop
cld
subl
shlb
ret
push
pusha
cli
std
aaa
pop
lret
xchg
mov
ds
xlat
inc
push
or
add
pushf
push
or
ficoml
into
jmp
mull
les
mov
cmp
jmp
sub
shlb
negb
popf
out
ret
pop
mov
jne
shl
cmp
sub
push
sub
mov
jg
push
in
dec
rcll
stos
pop
aad
mov
mov
mov
add
daa
dec
in
sub
xor
das
cmp
add
push
jnp
xlat
lock
mov
sub
and
add
xor
test
cltd
xor
aaa
add
or
mov
jmp
mov
dec
daa
and
es
out
xchg
jbe
push
pop
movsb
into
fnstsw
lods
or
cwtl
paddb
jae
sti
jge
std
dec
mov
mov
adc
sbb
leave
mov
scas
xor
jbe
dec
fprem1
dec
pcmpeqw
add
dec
arpl
cld
rclb
adc
push
rorb
pop
mov
xchg
xchg
push
mov
xchg
imul
inc
in
cli
and
rorb
pop
call
out
stos
jnp
jo
xor
sbbb
aaa
ret
data16
or
filds
test
adc
cmp
sbb
es
mov
jns
xchg
mov
out
xchg
rorl
ret
bound
insl
addr16
lea
cltd
mov
xor
jne
sbb
mov
ficoml
sbb
inc
dec
inc
push
dec
aam
loop
in
add
or
aam
mov
xor
xor
xor
jne
cmp
loope,pt
and
js
pop
xor
fcoms
les
adc
insl
je
xor
pushf
outsb
jbe
push
das
leave
pop
sub
repnz
cmpsb
mov
repz
push
dec
xchg
push
sahf
or
pop
shrb
je
and
das
and
fmul
mov
adc
sub
cs
cmpsb
dec
dec
jno
mov
js
push
cwtl
pop
push
faddl
mov
push
pop
jbe
ficoml
pop
push
mov
stc
je
movsb
cmp
out
jbe
mov
outsb
dec
mov
in
adc
push
and
and
outsl
xlat
adc
pop
out
out
mov
lock
inc
sbb
dec
daa
and
shr
js
jnp
add
cmp
scas
aaa
mov
pop
sbb
push
ss
lods
jl
ret
sbb
in
push
mov
aad
xor
stos
pop
loopne
sub
addr16
xor
incl
orb
hlt
xchg
arpl
inc
mov
and
xorb
insl
inc
aad
pop
inc
cmp
and
lret
xchg
adc
xor
ret
outsl
int3
stos
dec
sub
and
icebp
loope
fmulp
in
or
dec
out
push
mov
in
sahf
dec
or
adc
add
imul
mov
dec
inc
clc
mov
jge
add
call
imul
out
in
jle
pop
outsb
hlt
je
xchg
push
mov
sbb
sub
add
sbb
movsb
loopne
stc
lret
jo
scas
in
rcrb
hlt
lods
aaa
test
mov
adc
dec
fstpt
xchg
cmp
inc
es
xor
jo
loopne
shlb
dec
dec
xlat
jne
mov
imul
mov
and
adcb
xlat
xchg
mov
aas
jle
pushf
push
out
outsb
adc
les
pop
jbe
and
movsb
ret
and
mov
or
mov
push
xor
fildll
push
lcall
les
repz
ja
or
sbb
mov
add
in
mov
lds
mov
shl
mov
xor
daa
insb
jae
clc
mov
cld
jmp
fidivrl
sbb
icebp
cmp
mov
xor
fnstenv
add
jnp
sub
syscall
pop
pop
ret
mov
daa
inc
add
mov
pop
mov
dec
pop
sti
outsl
lret
les
mov
mov
pop
fwait
pop
push
mov
loope
mov
push
pop
sub
xlat
call
sbbl
jb
loope
aad
jns
int
xor
add
push
out
dec
roll
shr
fidivl
mov
inc
inc
mov
or
scas
push
fnstenv
rcr
lea
movsl
dec
aad
stc
inc
std
sbb
and
pop
or
sbb
adc
mov
cltd
adc
repnz
icebp
out
mov
loope
cmp
push
push
rcl
in
push
test
imul
in
lret
insl
fs
rorb
mov
fwait
xchg
mov
fildll
jb
push
push
sbb
repnz
mov
pop
push
pop
or
fisubrs
rcll
jne
dec
pushaw
sbb
pop
lret
add
cmp
xor
pop
lods
xor
inc
dec
fcoms
ljmp
vpandn
js
je
outsl
pop
jp
and
lret
dec
mov
fldt
in
add
fnsave
daa
jo
adc
inc
dec
dec
xchg
inc
das
jge
stos
shrl
js
loope
xchg
xchg
testl
jno
mov
in
mov
inc
stos
xchg
cld
stos
mov
inc
in
pop
adc
sbb
mov
sub
jbe
push
andb
fldt
or
call
test
dec
mov
mov
rcrl
push
mov
sub
test
mov
fistpll
repz
gs
das
lcall
stos
stos
adc
inc
or
mov
out
lock
lret
dec
xchg
jns
ja
sbb
xchg
test
push
test
sub
leave
ret
adc
ret
sbb
sbb
xchg
sub
sub
in
fcomps
mov
pop
loopne
push
js
or
and
out
aas
or
fcom
jno
mov
mov
insb
mov
hlt
pop
pop
rclb
cmp
sub
push
xlat
mov
fwait
lret
fucomip
xor
dec
mov
pop
lods
mov
sub
xchg
bound
jp
push
insl
fistpl
fldl
sub
jns
rcpps
xchg
sarb
pop
gs
add
lcall
push
je
inc
das
loop
mov
or
jae
jecxz
xchg
adc
mov
sub
push
negl
pop
pushf
and
loopne
push
andb
rcl
addr16
mov
popa
jle
test
cmp
jmp
lea
xchg
popf
or
lcall
iret
iret
lods
pop
or
cmp
dec
sub
push
mov
fwait
add
xor
xchg
jbe
ss
and
popa
jns
loopne
scas
lret
dec
xor
push
shlb
xchg
or
clc
mov
dec
xor
inc
subb
mov
xchg
mov
int
in
fst
ficompl
xor
test
pop
icebp
inc
or
mov
jns
adc
fldenv
push
adc
mov
test
pop
aas
inc
and
mov
test
and
ficoml
ds
dec
data16
imull
xlat
leave
cmc
sarl
add
jne
push
lret
add
or
ds
imul
dec
mov
dec
fisttpl
insb
mov
xor
or
insb
in
pop
mov
push
push
add
pop
fiaddl
mov
inc
cmp
add
xchg
inc
pop
in
mov
int3
or
in
xchg
jae
aaa
pop
mov
pop
mov
fdivrs
das
ret
mov
call
pop
fstpt
mov
sbb
jp
popa
int
stc
and
rcrl
mov
cmp
pop
xchg
in
rcll
sbb
mov
pop
rcll
test
xchg
dec
addb
add
mov
dec
fs
mov
repz
and
xchg
popa
jp
adc
dec
test
test
lods
cmp
cmp
in
cwtl
sti
cmc
mov
mov
mov
addb
addr16
pop
cmp
add
dec
cmp
stos
mov
into
test
jmp
rclb
insb
fcoml
popf
aam
imul
dec
add
jmp
mov
and
divb
aad
daa
add
cli
sbb
dec
inc
lcall
adc
mov
dec
xor
ss
mov
or
in
push
in
sarb
dec
das
add
adc
xchg
mov
test
mov
nop
lods
and
lods
pop
mov
ds
push
xchg
or
loopne
jbe
jae
or
sbb
dec
lahf
jne
jno
add
xlat
xchg
and
xchg
nop
filds
pop
out
push
out
cmc
lea
xor
jb
and
or
icebp
jl
sbb
sbb
fdivs
in
outsl
nop
sahf
dec
push
movl
sbbl
rclb
rolb
insb
loopne
adc
jle
mov
sub
fnstenv
inc
adc
push
cmp
popf
inc
pop
mov
cli
jo
jmp
sti
add
test
iret
lods
mov
in
mov
lahf
dec
xorl
pushf
movzwl
jl
stc
jb
sub
xlat
fcomps
and
mov
xchg
and
aaa
pop
in
or
cmc
test
movsl
lock
jle
jo
and
testb
in
cmpl
imul
mov
jmp
mov
dec
inc
sub
mov
ljmp
jl
sahf
dec
add
mov
and
add
js
add
jp
or
or
pop
loopne
or
sub
or
push
cmpsl
and
dec
dec
daa
lods
pop
pop
mov
icebp
js
outsb
and
test
inc
sahf
cltd
data16
push
lds
xchg
dec
or
sbb
aam
imul
dec
push
jle
in
mov
icebp
mov
cs
popa
call
or
repz
cld
pop
shr
jmp
adc
lcall
xlat
sbb
and
sahf
out
int3
fnstenv
xor
popf
lcall
test
mov
sub
js
or
push
pop
cmp
mov
clc
mov
fidivrl
sub
js
or
push
pop
cmp
mov
clc
mov
fidivrl
sub
jl
or
push
pop
or
mov
rorb
test
cmp
dec
cmp
jge
repnz
adc
dec
addr16
ja
inc
jns
les
pop
inc
daa
xor
leave
out
imul
xbegin
xor
addr16
ja
inc
jns
or
sbb
sub
cmp
leave
out
xchg
jmp
cmpsl
cltd
mov
lds
ja
inc
jns
or
sbb
sub
cmp
leave
dec
cli
testl
cmc
xlat
xchg
push
addr16
push
shl
aam
ffree
adc
xchg
cmp
pusha
fdivrl
mov
divl
movsb
sbb
xlat
add
push
xor
pop
or
movb
jbe
cwtl
pop
xlat
xor
sbb
push
outsb
mov
cmp
inc
addr16
leave
sbb
sub
cmpsb
in
int3
js
push
dec
jb
hlt
add
or
lods
mov
call
pop
cmp
dec
sub
sbb
ret
push
sbb
stos
adc
sbb
pop
fidivl
mov
mov
push
jmp
movsb
jb
negl
xlat
rcl
fnstenv
cmp
imul
aaa
sub
cmp
leave
out
imul
stc
xlat
mov
mov
ja
adc
or
aaa
dec
dec
cmp
cmpb
cltd
lret
sub
cmp
or
adc
push
push
jo
pop
lods
lahf
mov
mov
neg
sub
pop
and
das
adc
aaa
sub
cmp
leave
out
imul
stc
xlat
mov
mov
ja
inc
jns
or
sbb
sub
cmp
leave
out
imul
stc
xlat
mov
mov
ds
cmc
push
adc
jmp
mov
jns
sarl
pop
rclb
push
call
pop
xor
xchg
and
cmp
mov
rcll
push
andb
and
outsl
cltd
cs
in
xchg
cltd
out
sahf
push
xchg
push
lret
scas
sub
cmp
jle
push
icebp
mov
decb
jmp
icebp
cmp
int
and
jno
push
mov
movsb
pop
xchg
and
lock
sarb
dec
ret
lahf
loopne
inc
aas
mov
and
rsm
mov
out
xor
mov
lret
test
xor
test
bnd
jb
fdivrl
or
xchg
outsb
dec
xchg
sbb
inc
gs
jns
add
iret
lret
add
jg
int
dec
in
adc
sarl
aas
adc
dec
adc
fdivr
lods
cmp
int3
push
inc
sub
cmp
xor
or
jno
sbb
jecxz
xchg
ds
fsubrl
inc
push
xchg
lds
daa
add
jne
push
inc
repnz
mov
dec
jns
push
fadds
mov
and
popf
stc
add
fcompl
mov
subl
mov
scas
or
bound
out
adc
lcall
push
mov
das
dec
inc
aaa
out
fimuls
cmpsb
mov
jnp
scas
or
cmp
movsb
push
dec
shll
popa
out
push
lock
xor
es
hlt
mov
push
movsb
jb
sub
rcrl
jg
push
mov
cltd
std
jnp
mov
scas
cmc
fisttpl
jo
cmpl
jno
bnd
push
out
inc
mov
mov
and
and
mov
test
pop
push
rcll
mov
stos
mov
cld
int
rcrl
dec
xor
imul
cltd
addr16
and
push
cld
sbb
rorb
push
roll
inc
xor
pushf
paddsw
xchg
mov
mov
lods
jecxz
add
out
into
jnp
in
add
cld
or
insl
lret
out
cmpsb
std
xor
in
dec
mul
jecxz
mov
push
and
fwait
mov
ljmp
dec
xchg
pop
les
ljmp
adc
push
into
inc
lret
movsl
fadds
pop
mov
jg
inc
test
xchg
scas
out
shl
pop
mov
push
in
jmp
or
inc
js
cmp
test
xchg
icebp
imul
or
sbb
xchg
clc
icebp
adc
dec
mov
push
pop
push
pop
fistpl
mov
loop
movsl
mov
mov
lock
lahf
or
pop
repz
aaa
cmovb
lea
mov
flds
inc
ss
mov
dec
xchg
sbb
roll
mov
adc
inc
sub
dec
cwtl
je
sbb
paddusb
int
cltd
int3
ret
dec
or
or
in
stc
inc
cmp
repz
mov
cmp
js
ss
loopne
cmp
lahf
dec
imul
inc
fsubl
pop
inc
xchg
push
mov
loop
mov
mov
mov
cwtl
mov
ljmp
test
mov
bound
outsb
xchg
or
adc
add
stc
dec
cmp
insl
cli
sarl
outsl
sub
xchg
sbb
stc
or
inc
jmp
mov
cltd
jecxz
jns
fcoms
lea
xor
mov
lods
insb
in
imul
cmp
movsb
sti
mov
inc
xor
inc
sbbb
sub
xor
fiadds
cmp
push
sub
es
clc
push
lds
stc
outsb
pop
imul
xchg
fildll
aaa
insl
jno
sbb
xor
test
cld
test
movsb
test
icebp
jmp
fiadds
int
add
cmp
jecxz
mov
fstl
pop
outsl
and
jg
sbb
mov
xor
sub
jno
scas
and
or
in
es
out
xor
add
mov
add
mov
aaa
push
xorb
gs
sarl
mov
cmp
push
insl
fmuls
js
push
popl
aam
lds
mov
or
lock
and
gs
insb
clc
enter
lret
jmp
mov
dec
mov
xchg
xor
xor
scas
enter
or
jge
inc
ret
add
out
mov
adc
mov
das
push
rcrb
rorb
push
ja
sub
out
in
push
fsubr
shl
push
popa
dec
sbb
jl
fsubrl
inc
lcall
les
cmpsb
outsb
cmp
stos
jmp
jo
imul
out
out
decb
inc
mov
sarl
mov
add
cmp
or
jbe
sbb
call
cmp
mov
rcrl
xchg
ljmp
je
cld
and
cmc
inc
daa
xlat
add
cwtl
arpl
movsl
jmp
xchg
pop
sub
cld
fldcw
clc
fwait
pop
xor
scas
in
sub
aaa
xchg
in
dec
scas
inc
inc
sbb
inc
adc
std
pop
lret
jmp
and
add
push
mov
out
jne
aam
mov
mov
ljmp
mov
mov
rol
adc
lds
mov
js
add
push
cmp
xor
xchg
loope
jne
xlat
mov
cmp
stos
jne
je
jp
test
lret
outsl
jge
ret
and
std
mov
or
out
shrb
add
idivl
mov
pop
xor
fs
lret
adc
ficomps
mov
sub
jae
mov
scas
cmp
loope
loopne
orl
daa
push
sbb
dec
dec
test
clc
xchg
inc
jbe
stos
mov
sar
cmp
cwtl
das
push
adc
stc
or
mov
call
or
mov
bound
and
adc
addb
jp
rclb
lret
andb
inc
ret
cmp
iret
xor
lret
mov
loope
stos
je
jnp
push
jecxz
rol
xchg
mov
ror
sahf
push
in
cltd
push
cmc
inc
mov
cmpsl
and
mov
sub
lods
dec
xor
pop
mov
sbb
sahf
sahf
xor
adc
imull
or
adc
xchg
out
loopne
cmp
xor
jecxz
addl
scas
enter
repz
scas
aam
nop
or
sbb
sub
xchg
fsubrp
push
mov
sbbl
mov
shlb
or
dec
pop
pop
mov
xchg
pop
inc
or
aas
inc
roll
jecxz
add
shl
sti
pop
cmp
jle
bound
ret
mov
movsb
jne
popa
lods
hlt
ret
mov
xlat
jo
jnp
mov
into
rclb
iret
subb
dec
sbb
jge
repnz
es
int3
mov
xor
imul
fisttpll
jge
xor
aaa
lahf
xor
fildl
xlat
cmpsl
mov
pop
mov
in
pop
pop
rol
negb
xor
rcll
ja
nop
add
adc
es
js
xor
jno
dec
mov
sarl
jne
sbb
stc
testb
lods
test
cli
mov
pop
bts
sub
xor
repz
stos
std
movsb
mov
lret
enter
jle
out
loop
ret
orl
dec
out
lds
xchg
mov
nop
adc
push
inc
fisttpl
sbb
scas
adc
and
and
out
fsubs
mov
dec
fadd
fcmovnbe
in
push
sahf
xchg
and
insb
bnd
js
and
and
lret
test
sahf
dec
orl
and
aam
pop
sbb
inc
or
and
push
je
adc
insl
insl
leave
push
fisubrl
in
jnp
js
sub
add
jl
adc
cmp
pop
popf
and
add
shrl
pusha
das
daa
add
cmp
mov
pop
mov
ljmp
subb
loopne
inc
out
mov
add
mov
or
rcll
cmpsl
inc
sbb
fisubrs
dec
call
pop
arpl
add
mov
faddp
cli
pop
add
pop
ret
mov
add
inc
mov
test
sub
mov
mov
hlt
mov
push
mov
xorl
push
or
mov
sbb
jmp
dec
and
pop
mov
shll
pop
daa
sbb
imul
scas
cmpsb
inc
inc
sub
or
pop
lahf
dec
inc
sahf
aam
add
mov
sbb
cmp
dec
hlt
pop
int
sbb
lds
jmp
dec
into
ret
fdivl
mov
imul
ret
cmpl
or
push
movsl
scas
iret
call
sbb
xchg
insb
js
jo
push
pop
dec
or
arpl
test
fsubrs
test
mov
jg
mov
inc
pushl
mov
add
fisubs
mov
test
ja
xor
out
mov
mov
add
inc
pop
cmpsl
jg
push
push
stos
adc
and
std
pop
cmp
pop
mov
data16
sbb
mov
add
out
lahf
cld
popf
fwait
test
cld
sarl
and
add
and
xorb
mov
test
jge
sbb
xchg
pop
lret
adc
je
jmp
out
xchg
call
andl
cmp
xor
sub
mov
cmc
sbb
mov
insl
push
insl
and
mov
dec
or
out
and
es
mov
ds
xor
pushf
sub
push
int3
in
aam
xor
int3
sti
roll
ret
xchg
mov
push
push
cmp
cmp
imul
cmp
lret
fs
data16
push
mov
xor
pop
loopne
insb
ss
pop
add
lea
cld
xrelease
push
sub
sub
mov
mov
lret
movsb
jb
sti
cmp
fidivrs
imul
and
jae
inc
movsb
inc
mov
xchg
push
jl
jns
add
shll
repnz
in
test
xlat
inc
jbe
rorb
mov
mov
movsb
iret
mov
xor
adc
inc
inc
xor
and
sahf
pop
dec
push
repnz
lock
dec
je
shrb
clc
les
adc
addr16
fs
and
or
mov
inc
xchg
nop
data16
leave
test
sbb
mov
lcall
sub
ja
sub
cmp
aas
lcall
adc
xchg
enter
je
lret
lcall
scas
add
add
mov
addr16
sub
inc
fisttpll
cwtl
or
les
fadd
sar
push
lds
add
fwait
jno
mov
cmpsb
loopne
dec
shrb
push
add
push
jne
out
lods
adc
hlt
inc
or
aam
test
cmp
adc
arpl
mov
mov
mov
out
jmp
fdivs
cmp
dec
stc
iret
mov
clc
push
xor
sbb
fists
mov
int
sti
pusha
int
inc
icebp
fstl
or
inc
lea
cmpl
in
jge
lret
outsb
fsub
testb
push
cltd
or
sub
mov
inc
repz
fimull
dec
push
in
mov
iret
xor
sbb
and
stos
ljmp
aas
or
sub
adc
repnz
js
push
sub
pushf
cltd
jl
testl
or
dec
ffreep
ljmp
dec
push
lcall
mov
or
cmp
mov
aad
dec
push
out
fadds
xlat
add
loope
pop
sub
insb
sbb
movsb
roll
lahf
mov
push
cmp
loopne
xchg
lods
jae
xlat
lret
and
aam
jg
cmp
xor
divl
outsb
out
cld
and
repnz
inc
mov
xchg
pop
jle
sub
orl
out
pusha
jne
xor
sub
mov
out
in
inc
and
xorb
adc
mov
rolb
sub
mov
mov
xchg
loope
jnp
fdiv
push
movsl
jp
sbb
cmpb
push
push
pushf
mov
jge
and
pop
push
mov
rclb
jnp
aas
pop
or
inc
pop
sbb
pop
clc
into
push
mov
adc
or
xlat
inc
and
scas
adc
in
nop
xlat
rorl
mov
dec
in
push
or
xchg
int3
cmpsb
jecxz
icebp
insb
push
push
adc
gs
fadds
pop
inc
movsb
push
xchg
setne
jbe
inc
sti
adc
mov
das
test
loopne
adc
ret
stos
out
inc
mov
push
pop
repz
mov
shlb
mov
ja
jne
push
lock
cmpsb
ds
xor
jae
jg
mov
outsb
cmp
and
jmp
int
sbb
add
mov
inc
rcr
mov
pop
mov
xor
xorl
sbb
mov
aaa
push
and
mov
dec
xor
ret
les
out
xchg
lock
jmp
mov
xchg
pop
lds
out
add
in
out
and
jne
int3
pop
call
jmp
mov
cmp
push
jo
jl
jmp
push
lock
pushf
jge
clc
data16
rorl
aam
xchg
add
leave
cld
shll
and
jno
dec
ja
test
inc
mov
xchg
push
pop
ret
or
mov
inc
push
mov
xor
pushf
ja
lret
and
mov
sub
mov
dec
test
xchg
movsl
stos
dec
push
icebp
dec
idiv
and
jb
push
insl
hlt
roll
pop
sub
mov
mov
enter
xor
andl
in
cltd
scas
lock
lret
notb
dec
mov
cmc
cmp
mov
fidivrs
aaa
in
ja
adc
mov
cmp
sub
lahf
in
outsb
sbbl
aam
js
imul
mov
ficoml
in
lcall
cwtl
faddl
push
jge
fcoms
stos
dec
adc
cld
jmp
lahf
les
loope
jg
add
cmp
or
adc
add
inc
loop
test
mov
mov
test
je
jns
dec
ss
mov
push
imul
es
imulb
fwait
dec
adc
adc
xor
lods
in
cmp
jg
loopne
inc
outsb
sub
lahf
lea
loop
inc
inc
test
jle
mov
push
int
or
aaa
dec
add
xor
push
mov
inc
adc
cld
mov
and
jns
rep
xor
or
sbb
sub
push
insb
inc
push
xor
test
stc
cmpsb
push
or
fwait
sbb
out
push
cmp
mov
icebp
mov
cmp
jnp
jnp
mov
jecxz
testb
sbb
xor
fcomi
leave
rcr
movsb
sbb
mov
pop
mov
enter
mov
loope
stc
out
test
and
cmpsl
adc
push
out
cmpsb
dec
mov
xor
ds
mov
sbb
xchg
fucom
mov
clc
lods
add
and
xor
hlt
jb
pop
jo
mov
pop
lret
lock
mov
inc
cwtl
in
aas
add
in
xchg
insl
mov
push
icebp
mov
inc
or
xor
outsb
les
mov
push
xchg
pop
js
jmp
fists
xor
ret
ss
mov
mov
jge
mov
add
fsts
pop
aaa
idivb
push
sub
cmp
adc
repnz
xchg
leave
xor
jnp
sbb
in
test
fs
fcomp
sahf
or
in
push
add
jecxz
icebp
iret
enter
or
jg
int
sub
adc
insb
movsb
or
push
pop
addr16
or
dec
xor
jne
mov
scas
lret
xor
sbb
mov
lods
or
pop
mov
push
lods
mov
jnp
fdivl
and
fistl
call
sbb
jbe
fs
xchg
rorl
aam
jle
daa
out
cltd
insb
mov
lret
popf
mov
dec
cmpl
jne
xor
xchg
mov
je
mov
mov
push
jno
ds
popf
mov
iret
add
mov
pop
dec
leave
push
stos
mov
std
xchg
pop
or
adc
imul
push
xchg
fnstenv
aam
jae
lds
test
xchg
mov
dec
xchg
pop
mov
vmovq
inc
fidivrl
call
mov
inc
cmp
inc
jnp
popf
loope
jbe
ret
adc
pusha
mov
add
es
push
adc
test
cmp
orb
js
sub
xor
add
xor
jmp
es
cld
addr16
jnp
pop
mov
rorb
imul
pop
std
fwait
sbb
idivl
pop
lcall
les
pop
jbe
call
mov
js
push
imul
push
pushf
cmp
or
xbegin
das
arpl
fisubs
roll
mov
mov
rol
xor
pop
sahf
pop
cmp
in
mov
jo
popf
sahf
push
cmp
shr
push
push
jnp
faddl
enter
pop
scas
mov
fstl
add
pop
sub
pop
pop
jge
leave
push
and
mov
mov
jnp
sti
fldenv
mov
ss
sbb
in
jne
pop
pop
cmp
jmp
psraw
add
jl
mov
arpl
imul
cmp
xchg
movsl
mov
jo
dec
sbb
xor
mov
call
mov
shlb
sub
clc
ss
icebp
adc
rcr
and
mov
imul
sbb
xchg
push
lock
xchg
mov
loopne
rolb
dec
jg
lret
leave
icebp
pop
jmp
pop
push
js
pop
bound
xchg
pop
dec
xchg
mov
mov
arpl
andb
mov
ja
push
popf
addr16
pop
arpl
ja
inc
clc
push
sbb
movb
sbb
mov
inc
fnstcw
jp
dec
xchg
cmpsb
or
push
dec
sbb
enter
fstl
icebp
xchg
xchg
mov
iret
movsl
test
cmpsl
pop
shr
jno
daa
inc
cmp
test
hlt
stc
pop
out
mov
mov
push
ss
jo
inc
and
or
lcall
aas
js
sarl
dec
rcl
cmp
dec
pop
and
ret
mov
aad
das
loop
popl
ds
dec
inc
ja
sbb
cmp
js
sbb
addr16
addr16
cld
add
loope
sbb
pop
je
add
cld
fwait
cld
movsb
mov
mov
pop
in
mov
insb
mov
sbb
clc
int3
jl
cltd
popf
hlt
add
add
insb
pushl
leave
push
mov
jbe,pn
ljmp
push
lock
js
xor
cmp
aas
insb
testb
mov
aas
outsb
fwait
jge
ret
push
push
xchg
ret
pop
mov
xor
dec
dec
dec
fcomi
and
cli
pop
sub
xchg
ret
cmp
ds
add
decb
cli
sbb
daa
insb
inc
and
popa
pop
iret
cmpsb
loope
data16
push
mov
mov
lods
leave
adc
xchg
and
add
sub
aam
jns
dec
xchg
out
fsubrl
dec
out
add
shlb
and
mov
shll
imul
jle
xchg
mov
into
xchg
jno
pop
push
pushf
lock
sbb
add
mov
andb
roll
sbb
push
mov
out
jbe
addb
pop
mov
or
out
jg
incl
sbb
out
push
adcl
sub
out
std
gs
jp
mov
xor
test
xchg
filds
dec
add
loop
adc
sbb
add
std
rcll
push
loopne
cmp
push
shlb
call
xchg
popa
pop
jae
imul
xor
addr16
or
push
xor
dec
cmpsb
jo
les
cmpsb
dec
dec
dec
dec
hlt
xchg
outsl
jns
aam
repnz
ss
mov
sub
fwait
push
push
ss
sub
in
or
fdivrl
dec
or
adc
hlt
incb
cmc
lods
cwtl
mov
loop
in
dec
ss
xor
rcll
or
test
mov
sub
jno
ja
inc
jns
or
sbb
sub
cmp
leave
out
imul
stc
xlat
mov
mov
ja
inc
jns
or
sbb
sub
cmp
leave
out
imul
stc
xlat
mov
mov
imul
jns
mov
sbb
leave
addr16
jmp
cmpsl
cltd
mov
xchg
ja
inc
jns
or
sbb
sub
cmp
leave
out
pop
inc
stc
mov
fnstcw
push
in
mov
add
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
nop
lds
cmc
cmpsl
sti
test
in
mov
inc
add
and
add
pusha
xor
mov
mov
xchg
lock
loopne
adc
push
xor
jne
add
pusha
xor
mov
mov
xchg
lock
loopne
adc
or
inc
jne
push
xor
inc
or
mov
leave
sbb
inc
xchg
push
sbb
sub
cmp
and
add
int
scas
daa
cld
jl
jg
dec
hlt
pop
or
jge
push
test
lea
pop
lds
es
ljmp
rclb
push
cmp
adc
mov
add
pusha
xor
cmp
loope
test
test
jbe
inc
rcrl
inc
inc
mov
jmp
ret
pop
add
or
test
push
pop
imul
add
push
mov
int
push
and
lods
inc
js
mov
pop
cmp
dec
xchg
push
outsb
lock
inc
inc
shlb
mov
adc
mov
bound
mov
mov
xchg
lock
loopne
adc
push
xor
jne
add
pusha
jae
test
push
mulb
scas
aam
shlb
gs
or
push
adc
test
lahf
shl
loope
mov
mov
bound
cmp
and
cmpsl
push
jp
push
or
xchg
andb
jmp
loopne
adc
push
xor
jne
add
pusha
xor
mov
mov
xchg
lock
loopne
adc
push
xor
jne
add
pusha
xor
sub
inc
xor
mov
ds
xor
jno
dec
aam
mov
cmpsl
or
adc
and
add
into
imul
je
loope
cmp
lods
lods
and
xchg
loopew
and
xchg
push
mov
shl
jns
push
imul
pop
mov
sbb
rcl
cltd
shlb
cld
dec
jg
out
in
sbb
inc
aad
adc
out
push
pop
and
inc
fdivrs
cmp
ret
shr
xchg
adcl
ds
inc
or
or
pop
outsb
dec
gs
les
lret
shll
sbb
pop
lcall
sbb
mov
jg
popa
push
inc
mov
jge
loope
loop
or
sahf
fldcw
imul
xor
jg
scas
lcall
push
lret
popa
sbb
adcb
ds
cmp
dec
xchg
lock
xor
arpl
add
cmp
stos
push
xor
push
mov
clc
add
lcall
rcl
hlt
mov
inc
repz
fwait
aaa
cmp
pop
lret
sbb
iret
and
dec
scas
sarb
fistpl
mov
call
mov
in
dec
into
inc
fsubrl
sbb
pusha
sbb
mov
ffree
into
popf
mov
pusha
sahf
imul
or
xor
pop
outsb
and
inc
xor
lds
into
movsl
or
jle
mov
gs
in
xchg
push
sbb
lret
out
sarl
sbb
jo
inc
lds
nop
movsb
test
xchg
leave
pop
fsub
aas
daa
push
scas
movsb
dec
mov
inc
gs
fld
ljmp
loop
add
aas
ret
sbb
cmpsb
push
or
in
dec
nop
loop
mov
test
shl
scas
mov
jecxz
xchg
cmpsl
and
cmpsb
sub
movsl
inc
push
mov
inc
add
and
xchg
loopne
scas
rcl
cmp
fs
icebp
mov
test
mov
xchg
add
mul
xor
pop
jno
mov
cwtl
sahf
or
subl
arpl
pop
inc
or
cmpsb
mov
or
xchg
out
mov
repz
jge
arpl
movsb
xor
mov
and
sarl
cwtl
add
lcall
andl
pop
mov
xchg
aas
sub
out
pop
enter
mov
das
call
add
jno
and
negl
jp
dec
dec
and
jo
push
nop
cmp
xchg
push
dec
not
push
xchg
arpl
dec
scas
mov
sarb
movsb
mov
cltd
and
js
xchg
add
jmp
pop
push
jns
mov
js
roll
push
ss
mov
aaa
mov
or
loope
dec
mov
or
dec
test
or
jge
leave
push
xchg
aad
pop
sub
dec
adc
xor
movlps
lods
dec
jnp
imul
in
jl
aaa
pop
sbb
insl
sub
fwait
test
jge
les
add
sub
sbb
lea
rclb
shl
cs
pop
mov
arpl
push
xchg
shll
push
orb
add
adc
ret
xlat
ja
inc
and
daa
jl
dec
rorb
test
xchg
pop
fwait
loope
push
sahf
mov
push
dec
mov
xchg
sysret
fdivl
or
pushf
add
mov
jnp
xor
test
mov
and
iret
mov
add
enter
mov
jne
loop
push
xlat
dec
sbb
mov
inc
adc
and
jne
inc
adc
add
aam
mov
roll
jnp
sub
dec
pop
outsl
test
insb
or
and
or
adc
popl
sbb
xor
inc
loope
mov
test
test
or
jge
pop
mov
add
sub
sar
loop
pop
test
add
xchg
lcall
push
xor
or
mov
mov
add
inc
xchg
mov
movl
fiadds
dec
dec
lret
add
cmp
mov
or
sbb
es
out
and
loope
cmp
mov
mov
lea
sbb
cmp
hlt
iret
and
push
mov
in
push
dec
faddl
loope
aam
dec
cli
dec
push
std
and
adc
insb
sub
in
repz
sub
jbe
scas
or
inc
mov
in
popa
dec
rorb
mov
jle
rorb
iret
arpl
push
cwtl
lret
mov
les
scas
fwait
loopne
lret
test
fimuls
mov
gs
mov
sbb
adc
mov
cmpsl
je
outsl
dec
push
push
adc
test
ljmp
mov
repz
inc
aam
ds
cmc
xchg
sbb
sub
dec
mov
jl
es
sub
mov
loop
or
add
adc
scas
ljmp
add
xchg
fs
enter
add
mov
mov
jle
push
push
push
aam
sbb
es
mov
mov
sbb
pop
sar
mov
test
pop
addr16
pop
adc
lds
notl
mov
inc
mov
cmp
rcrl
xorb
pop
lea
lcall
icebp
popf
and
ret
xchg
hlt
jo
mov
cli
popa
int
mov
sub
ret
gs
or
sbb
je
mov
cld
outsb
call
dec
push
mov
jmp
mov
jp
push
rorl
xor
mov
cmp
pslld
rolw
inc
subb
lock
je
rorl
push
xchg
inc
cld
fbstp
or
lret
fldl2t
push
loop
fstl
mov
xchg
and
andb
fdivl
lret
sub
push
pusha
jnp
jne
fcomps
or
testb
add
insb
mov
mov
scas
and
push
int
cmp
mov
inc
lea
dec
adcb
enter
dec
mov
out
mov
lahf
test
loopne
and
scas
lcall
pop
adc
pushf
jmp
xchg
std
das
pop
incb
cmp
mov
shll
das
dec
and
inc
and
jno
cmp
shlb
jb
cmp
cld
mov
and
jno
stos
mov
pop
outsl
and
jecxz
jae
lock
cltd
es
jnp
mov
inc
cltd
mov
pop
movsb
sub
sub
push
fcoml
faddl
sub
fistps
inc
rorb
iret
inc
js
push
inc
stc
push
mov
or
int
lods
iret
inc
or
pop
pop
add
aam
add
add
xchg
stc
pop
add
cmp
adc
data16
jo
sub
jecxz
lret
mov
das
outsl
pop
mov
push
jp
push
jg
add
inc
aam
repz
dec
jae
in
divb
sbb
js
jno
stc
andl
out
sub
shll
fcompl
mov
xor
shlb
cmp
push
pop
movsl
sbb
and
xor
push
int
dec
adc
movsw
sub
movsl
push
jg
stos
icebp
pop
add
mov
stos
cmpb
out
leave
adc
mov
cmp
test
inc
nop
fcmovnb
lods
pop
xor
roll
lock
sti
sbbb
gs
or
test
jns
xor
xchg
sub
push
dec
je
pop
pop
add
and
lods
pop
stos
push
jb
stos
sub
out
jg
xor
insb
fnstsw
xor
mov
mov
mov
push
bound
ficoml
mov
xchg
adc
cmp
mov
xchg
adc
mov
pop
loop
mulb
push
mov
and
dec
cltd
cmc
imul
insl
fs
push
stos
aaa
sbb
dec
mov
fildl
inc
push
bound
dec
ret
mov
mov
jmp
add
cmpsb
mov
adc
lcall
cli
jns
sahf
xchg
mov
fisubs
scas
out
clc
inc
jp
and
jbe
add
push
and
mov
in
push
push
xorl
lds
mov
loopne
xor
push
add
jge
dec
dec
sub
mov
je
loope
push
sbb
fwait
and
aad
jge
add
pop
jns
cmp
mov
es
adc
xchg
mov
bound
icebp
push
xor
lret
mov
mov
les
dec
cmp
jnp
jns
jmp
or
movsb
or
push
fisubrs
xchg
sbb
xchg
cmp
mov
push
loopne
cli
sbb
movsb
pop
jle
mov
jecxz
mov
adcl
adcl
iret
mov
mov
test
cmpsl
mov
jg
inc
loope
push
inc
iret
add
mov
cmpsb
mov
jge
outsl
pop
cmp
aas
jne
inc
mov
insb
sub
push
jno
cmp
inc
mov
add
push
loope
adcl
sbb
inc
shr
jle
dec
out
aaa
insb
dec
mov
insl
inc
adc
or
fists
aas
pop
gs
sti
aad
out
mov
jmp
jmp
mov
and
sub
sub
and
pop
fadds
pushf
out
or
sbb
mov
inc
movsl
loope
add
insl
int3
xchg
mov
repz
mov
ret
outsb
data16
pop
ss
mov
mov
lcall
xor
in
jo
fiaddl
stc
adc
scas
andb
pushf
adc
add
cld
gs
cli
mov
jp
pop
dec
sub
in
shlb
ss
adc
pop
push
rol
add
push
inc
stc
in
adc
roll
nop
pop
and
cld
or
sbbb
inc
inc
mov
loopne
mov
jb
inc
pop
scas
jp
jp
fwait
xchg
rcl
jb
sti
sub
sbb
jne
fwait
xchg
mov
xchg
sub
mov
cmp
mov
int
mov
lock
not
fwait
into
mov
lret
bound
stos
or
dec
idiv
fstpl
hlt
je
cmc
in
cmp
bound
les
pop
lcall
movsb
stos
clc
adc
sahf
pop
jae
sar
mov
gs
inc
loop
mov
fiaddl
into
mov
xlat
mov
jmp
lret
xor
repnz
or
sub
jae
adc
xchg
enter
ljmp
xchg
add
mov
inc
aas
aad
mov
dec
shlb
outsl
pop
int
out
rcrb
fisttps
aad
pop
insl
mov
pop
nop
push
jp
shr
push
xchg
and
push
ficoms
jge
pop
mov
pop
sbb
xlat
test
das
ljmp
mov
pusha
mov
jp
or
sbb
scas
enter
int3
push
mov
jmp
xor
mov
mov
and
adc
arpl
sbb
mov
fldl
add
pusha
shlb
daa
mov
jb
pop
bound
sbb
pop
sub
int
mov
mov
jae
mov
cmp
and
fldcw
dec
pop
ljmp
mov
lahf
lods
jmp
add
sub
int
out
das
sbb
push
dec
js
daa
shlb
out
dec
cmp
push
rorb
das
mov
popa
sub
loopne
push
push
jge
xor
in
mov
inc
dec
addr16
mov
das
jg
mov
sub
xor
iret
xor
stos
outsl
dec
or
fdivs
jl
sbb
mov
sub
adc
push
sbb
int
sub
mov
dec
xor
cmp
xchg
add
movsl
sti
gs
shll
add
outsl
push
movsb
mov
pushf
jns
testl
pushf
adc
fstp
or
jle
jno
movsb
ficoms
jg
test
pop
inc
or
fwait
or
out
subl
dec
pop
mov
mov
aas
loopne
movsb
in
mov
pop
and
testl
imul
outsl
std
xchg
fdivrl
pop
inc
pusha
addr16
lcall
xchg
rorl
ret
adc
mov
mov
jb
out
adc
popf
fidivs
cld
add
adc
add
cli
xor
cli
movsb
mov
test
iret
ret
pop
popa
scas
call
ret
sbb
mov
inc
xchg
xlat
jge
fnstcw
xor
and
mov
push
mov
test
pop
push
cmpsb
push
arpl
xchg
arpl
jl
sbbb
xchg
inc
jg
xlat
dec
add
mov
sahf
repz
call
sbb
jno
shl
and
shll
jg
push
fisubs
sub
push
adc
mov
into
fcompl
push
jge
popa
fnstenv
xor
dec
jp
mov
out
mov
shlb
push
in
js
nop
mov
ret
data16
xchg
mov
inc
mov
xchg
ret
and
mov
daa
and
mov
pop
mov
lock
jmp
sbb
push
or
int
int
xchg
ret
mov
iret
cwtl
lret
push
push
mov
adc
xchg
jge
mov
mov
into
pop
stos
sub
pop
push
push
in
xchg
negl
iret
pop
nop
mov
adc
aam
jns
mov
pusha
inc
adc
pop
movsb
push
sbb
push
xor
imul
xchg
ret
popf
lcall
push
shlb
jnp
rol
jnp
and
into
stos
dec
mov
loope
push
movsl
mov
xor
pop
cmp
mov
test
clc
ds
sub
sbb
shll
icebp
cmp
hlt
inc
mov
mov
xchg
rclb
stc
sbb
pop
or
add
stos
js
sarl
jns
xorl
sub
mov
add
mov
cmp
push
mov
dec
push
aaa
addps
lret
push
gs
mov
mov
adc
es
mov
xor
sbb
or
add
mov
int
adc
ret
inc
inc
add
fnsave
and
xchg
pop
pop
sub
mov
fwait
mov
push
jmp
movsl
ds
cmp
movsl
fdivs
shlb
push
int3
pop
cmp
in
test
dec
mov
adc
and
jno
insl
mov
and
mov
xchg
mov
roll
pop
xchg
xchg
inc
loopne
mov
js
cmp
leave
pop
loopne
push
push
and
sbb
iret
pop
sbb
sti
jmp
inc
psubw
push
mov
xor
cli
in
or
push
inc
leave
cli
jae
xchg
sbb
dec
test
inc
movsl
xchg
adc
cmpsb
lds
les
adc
ds
add
sub
adc
or
add
xchg
cltd
dec
mov
sub
lret
sub
notl
cmpsb
movsb
or
js
xchg
mov
push
out
push
insb
iret
lret
and
imul
jg
cmp
imull
outsl
fnstcw
fistl
imul
sbb
mov
out
leave
ret
imul
in
or
push
xchg
push
xor
xor
mov
adc
or
pop
cld
or
shrl
aas
aaa
xchg
repnz
aad
loopne
jne
mov
jecxz
stos
ror
sti
stc
idivb
or
and
lcall
mov
xchg
xor
sti
jge
in
push
cmp
mov
jle
arpl
das
jns
xor
ljmp
rcrl
xor
push
add
adc
xor
mov
and
shrl
in
or
outsb
adc
and
cli
jno
xor
or
int3
xor
mov
dec
lods
mov
mov
ret
pop
or
jns
ljmp
xor
jl
adc
out
orb
fcomps
out
stc
xchg
xor
fcoml
cmp
shrl
mov
jmp
push
test
push
pop
div
inc
push
cs
test
mov
mov
in
shr
popa
fs
nop
aam
dec
iret
insl
dec
xor
inc
cld
lods
icebp
or
cli
out
push
xchg
in
dec
adc
dec
inc
add
dec
inc
or
arpl
scas
jl
cld
cmc
fsts
xchg
adc
lcall
scas
jp
lea
ret
dec
lock
adc
xchg
mov
xchg
outsl
cld
fisttpl
clc
dec
dec
loope
adc
loope
lods
push
jmp
cmp
fs
pop
adc
movl
hlt
testl
cli
xchg
aad
mov
dec
sti
and
jae
mov
cmp
shll
dec
mov
cltd
leave
je
add
js
test
pop
inc
xchg
fmul
ja
stos
inc
jae
pop
adc
divb
mov
lret
pop
popf
insl
xor
sbb
fdivr
mov
out
loop
out
daa
jo
mov
mov
dec
int
scas
andb
xor
or
jmp
sbb
aaa
jbe
js
sub
add
mov
pop
cmp
xchg
scas
out
jmp
loop
push
xor
mov
inc
mov
movsb
ret
cmp
jne
cmp
add
mov
push
mov
cmp
test
cmp
sbb
or
push
movsl
shl
ja
rorb
inc
popa
xchg
icebp
fnstcw
fwait
dec
dec
pusha
repnz
sar
into
fcomps
sahf
xchg
outsb
sub
sti
jg,pt
int
sbb
fs
jp
adc
aaa
push
pusha
shlb
das
pop
scas
sti
lsl
dec
mov
cmp
add
mov
push
jl
in
loope
scas
jb
clc
inc
xchg
movb
dec
sub
lds
rcll
mov
or
imul
clc
mov
xchg
and
lods
into
movsl
adc
sub
out
lods
mov
mov
lods
daa
fwait
pusha
push
mov
xor
and
jg
dec
cwtl
push
imul
fnstsw
cmc
inc
xor
push
jp
cmpsb
or
push
aam
cmp
enter
into
in
mov
sbb
xchg
cwtl
dec
cmp
outsl
and
push
loope
push
dec
fmul
rclb
xchg
repz
push
pop
imul
repz
nop
ret
xorl
fsubrs
push
push
push
test
out
jge
shll
or
imul
clc
pop
outsb
pop
push
subb
imul
std
stos
das
and
cmpsl
xchg
divl
pop
mov
mov
xchg
sbb
aas
pop
std
xchg
sar
mov
dec
dec
inc
mov
pop
and
adc
lret
sub
mov
shll
std
fs
test
jnp
jge
fwait
add
mov
pop
or
push
iret
and
jle
mov
jg
stc
lds
mov
dec
faddl
cltd
in
inc
xor
rcr
rcll
sbbl
jecxz
mov
pop
sub
cmp
and
imul
mov
mov
push
xchg
jl
inc
int
jnp
sbb
xor
lods
mov
loopne
int3
and
mov
loope
aam
fldt
mov
rorl
lock
rcl
lods
je
rclb
sub
lret
shrb
sub
fs
idiv
rorb
adc
push
sub
mov
insl
pop
sub
xchg
mov
aaa
push
ds
imul
fsubr
ret
add
pop
in
and
mov
jmp
push
sti
mov
xor
push
dec
push
xlat
cli
into
xor
xchg
js
lahf
scas
in
and
nop
adc
push
mov
sbb
ret
repz
cmp
xor
out
mov
inc
test
pop
jg
ret
lret
leave
ret
push
push
adc
mov
sub
push
sarl
and
daa
xorl
add
lods
aas
iret
mov
les
push
mov
test
and
sbb
xor
push
fwait
mov
in
shrb
fwait
inc
dec
mov
sub
cmp
cmp
push
mov
sbb
xchg
pop
ds
int
repnz
imul
xchg
sbb
inc
pop
jbe
mov
std
int
ret
push
dec
xor
movsb
xchg
ljmp
mov
popa
xchg
xcrypt-ctr
cmpsl
cmp
adc
outsb
daa
inc
lcall
iret
scas
lahf
inc
jo
pop
adc
dec
rcr
fsubrl
xchg
ljmp
lods
mov
cli
rcrl
jbe
pop
mov
mov
mov
xchg
cwtl
cmp
pusha
fnsave
adc
enter
pop
cs
fwait
das
iret
cmp
mov
out
loop
fcom
in
cmc
rolb
loopne
adc
push
xor
jne
add
pusha
xor
mov
mov
xchg
lock
loopne
adc
push
xor
jne
add
pusha
xor
mov
mov
xchg
lock
loopne
adc
push
xor
jne
add
adc
nop
lds
icebp
rolb
pusha
dec
out
mov
and
daa
enter
cwtl
lret
cmp
inc
sbb
es
pop
sub
pop
test
cltd
xlat
call
xchg
fsts
or
push
imul
pop
jb
out
imul
cltd
xlat
jmp
xchg
xchg
sub
ja
inc
sbb
daa
jns
dec
pop
pop
pop
test
mov
nop
jmp
loop
loopne
sub
pop
inc
adc
xor
popf
pop
fdivs
fs
pushf
in
insl
ret
push
push
jl
mov
jl
pop
fisubrl
jbe
ret
sub
fdiv
inc
or
cmp
adc
push
in
sarl
lods
ja
mov
xchg
js
insl
push
stc
ret
aam
out
neg
shll
pop
cmp
out
ljmp
imul
pop
idivl
add
or
rcll
pop
mov
jno
dec
push
pop
pop
rcrl
loop
cmp
cmpsl
dec
out
es
cmp
stc
pushf
pop
mov
mov
push
out
repz
mov
sub
xchg
push
or
push
imul
pop
pop
test
cltd
xlat
jmp
xchg
rcrl
jge
gs
push
push
sub
inc
push
bound
rcll
cmpsl
popf
shll
bnd
jp
jge
push
xor
fs
cmp
adc
icebp
mov
mov
cltd
loop
ret
pop
es
and
and
das
sub
pop
pop
test
cltd
xlat
jmp
xchg
xchg
sub
ja
inc
sbb
daa
jns
dec
pop
pop
pop
test
cltd
xlat
jmp
xchg
xchg
sub
pop
test
dec
nop
sbb
jb
cmp
repz
mov
add
les
xchg
out
in
cmp
mov
sti
pop
jnp
sarl
cmp
cmpsb
fldenv
pop
das
lds
inc
ficoml
popf
daa
sbb
ffreep
iret
aad
inc
and
outsb
lret
pop
imul
cmc
xchg
call
dec
push
pop
lea
cmp
sub
mov
add
jns
in
out
pop
xchg
sbb
mov
xor
xchg
out
pop
fwait
mov
xor
xor
cmc
rol
out
push
es
cmp
lret
outsl
cli
fucomip
cli
test
test
rclb
push
jmp
out
pop
popl
ficomps
and
push
pop
mov
stc
pop
mov
or
xchg
sub
pop
test
inc
lahf
adc
daa
outsl
mov
pop
or
out
insb
adc
sbb
xchg
jp
lret
sbb
push
mov
jb
mov
sbb
ficomps
sbb
or
and
aas
mov
das
in
ljmp
out
ljmp
xor
jnp
dec
mov
and
inc
clc
popf
pop
sbb
js
and
push
xchg
test
lock
dec
cmp
lret
rol
mov
or
push
add
outsb
inc
and
push
xchg
adc
fs
push
movsb
orb
xor
mov
push
sbbb
mov
xor
call
mov
call
mov
adc
add
lret
mov
sub
mov
push
fcomi
or
cmp
mov
ffreep
mov
xchg
dec
mov
fcompl
insl
dec
inc
stc
or
out
in
addr16
clc
and
xor
mov
hlt
jno
mov
mov
iret
sub
push
mov
jo
ret
dec
fadds
stos
out
mov
sahf
aad
into
pop
lret
sbb
jl
fdivs
les
cmpsb
xchg
into
xor
push
push
jnp
popa
ljmp
sbb
arpl
je
or
insl
imul
pop
out
sbbb
and
mov
push
cmp
mov
cmpsl
mov
pop
pushf
pop
rorl
adc
sarl
mov
jl
add
cltd
or
iret
push
cld
adcb
cs
jle
int
and
lret
mov
shlb
push
inc
jl
xchg
mull
sub
ds
addb
push
pop
xchg
out
scas
fcmovne
mov
scas
out
movsl
pop
bound
adc
inc
mov
iret
push
loopne
pop
fnstenv
mov
sahf
dec
sahf
nop
stos
int
stc
lcall
mov
cmp
dec
xchg
shl
aam
sbb
fildl
add
dec
mov
push
dec
rorl
aam
xchg
inc
lods
orl
jl
out
mov
cmp
push
push
xor
ja
or
push
add
pop
imul
xchg
int3
mov
je
lods
adc
add
incl
push
pop
inc
mov
arpl
dec
fcomp
das
pop
inc
push
cmp
pop
mov
cmc
sub
cmp
push
ja
jmp
stc
xchg
xor
mov
popa
jbe
test
xchg
push
jns
cld
jno
clc
xor
movsl
push
sbbl
xor
mov
xor
cmc
mov
and
out
mov
adc
ja
cmc
xchg
push
xchg
pop
orb
sub
fimull
sub
mov
adc
add
into
test
and
mov
mov
jns
jo
mov
dec
cwtl
inc
adc
xchg
inc
lcall
sub
je
add
rclb
sbb
sub
xchg
push
fldcw
adc
inc
adc
out
stos
stos
popa
aaa
mov
xchg
inc
adc
divb
pop
mov
addb
scas
lds
sbb
mov
mov
add
in
lret
out
sub
test
loop
dec
cld
addb
cltd
lock
inc
js
neg
scas
aam
jno
xor
sbb
insl
pop
mov
add
sbb
std
mov
in
ret
pop
shrb
mov
scas
cmp
xor
sbb
pusha
jbe
and
adc
gs
daa
xor
ror
cmpsb
in
int
inc
and
xchg
ffreep
sub
idivb
repnz
inc
and
inc
xchg
cmp
xchg
pop
stos
inc
in
cwtl
push
js
mov
xor
push
push
ret
sahf
sub
stos
aas
icebp
xchg
push
cmp
insb
add
popf
sbbb
lret
sbb
test
jb
outsl
cmp
lea
jmp
add
enter
jnp
jle
adc
enter
stos
repz
loopne
aaa
sbb
jmp
jmp
or
idiv
aad
loop
fsubrl
arpl
cmp
or
pop
outsb
and
jns
sub
xlat
insl
mov
pop
dec
das
fldt
ret
lea
nop
loop
stc
or
mov
lret
cmp
lods
xchg
or
inc
ficomps
xchg
pusha
in
int
ja
dec
ds
loop
loopne
cmp
sbb
mov
pop
jg
add
insl
sbb
loop
movsb
adcb
cld
fsubrl
mov
pop
ss
dec
mov
out
cltd
dec
push
stos
mov
sub
mov
add
out
adc
pop
sbbb
fistpll
push
cs
pop
lock
lock
lods
mov
sub
mov
lret
mov
sub
adc
leave
jae
cmp
in
jmp
dec
sub
pop
repnz
popa
xor
lea
loop
push
out
mov
sbb
jge
mov
xor
mov
jmp
adc
fnstsw
lahf
inc
inc
hlt
xchg
imul
cmp
les
mov
mov
sub
or
icebp
nop
cli
jp
int3
jge
das
shrb
adc
jmp
dec
out
int3
sub
or
rorl
dec
xchg
lcall
insl
pop
movsl
and
outsl
incb
mov
xchg
mov
fistpl
and
add
sti
mov
rcl
or
inc
dec
sbb
or
xor
inc
mov
dec
or
aaa
sub
or
mov
jmp
fidivrl
test
leave
sahf
outsb
jns
std
dec
xor
mov
arpl
les
or
bound
pop
push
mov
fdivrs
out
out
inc
popf
test
xor
hlt
sub
add
test
pop
lcall
lea
ret
je
push
or
and
jmp
sub
cltd
mov
cmp
orb
imul
push
push
sti
movsl
es
insb
ja
cwtl
popa
gs
mov
pop
xchg
hlt
dec
enter
mov
xchg
fmulp
pop
mov
cmp
and
cmpsb
inc
aad
shlb
pop
add
fcmovnb
out
aaa
xlat
mov
inc
xchg
jno
fnstsw
lock
jmp
add
inc
dec
adc
addb
fnsave
jl
sbb
push
lret
sub
mov
inc
fwait
fwait
sbb
mov
roll
push
or
clc
into
enter
pop
fmull
pop
jmp
loop
ljmp
inc
and
loopne
lret
xor
sbb
push
in
test
mov
clc
imul
sub
cs
sahf
jp
das
jne
cs
popa
cwtl
xchg
push
jnp
jmp
testb
adc
mov
ljmp
shlb
fdivr
aad
cmp
ljmp
addr16
or
movsb
jbe
inc
push
pusha
stos
sub
loopne
mov
sbb
fptan
jg
cmp
jb
in
inc
or
aaa
mov
push
mov
sbb
sub
aam
adc
mov
xchg
pop
out
out
add
cmpsb
testl
xor
mov
gs
jle
cmp
test
mov
mov
jecxz
cltd
push
mov
or
push
ficoms
dec
jmp
add
ret
hlt
sbb
cmc
xchg
jb
sbb
sub
fnop
pop
mov
push
ja
lcall
ret
loopne
xor
inc
push
sbb
dec
pop
loope
sbb
mov
stos
add
dec
daa
mov
arpl
push
orb
push
jmp
cmp
inc
xchg
adc
and
loope
push
or
arpl
lahf
mov
ret
mov
or
and
jo
fadd
stos
ret
mov
repnz
cmp
lahf
inc
into
and
push
ret
hlt
lahf
or
xchg
dec
out
cltd
and
cmpsl
addb
dec
sbb
test
dec
ljmp
loope
daa
inc
aam
mov
mov
loope
add
mov
subb
mov
pushf
lret
ljmp
mov
call
ror
xor
push
lret
adc
sbb
push
lret
inc
xchg
loope
shrb
lods
iret
jae
dec
cs
push
xchg
div
mov
dec
push
mov
scas
mov
push
jmp
test
fstps
ficompl
xchg
xchg
mov
enter
aad
mov
lret
pop
adc
cltd
mov
mov
cmc
out
sbb
jl
clc
lret
shl
sti
insb
cli
xor
add
pop
pop
je
pop
lods
pop
lret
mov
fsub
movsl
ja
pop
insb
mov
mov
loop
ja
in
fcmove
cli
or
ret
mov
repz
xchg
fwait
mov
scas
add
loope
or
mov
lret
scas
xor
adc
mov
insl
or
or
push
xchg
jno
jne
dec
sbb
xor
jg
arpl
cmpsl
xor
js
dec
mov
insb
xchg
push
in
sbb
push
inc
inc
cld
sub
sbb
sub
in
adc
test
dec
dec
iret
insb
jecxz
inc
push
add
mov
std
repz
fdivrl
popa
xor
adc
inc
dec
scas
outsb
incl
dec
cmp
loop
and
pop
loope
sub
jmp
sub
adc
push
lahf
pop
lea
xlat
dec
mov
inc
jbe
fsub
bound
sarb
add
mov
add
mov
subb
loop
inc
lock
notl
pop
or
xchg
sarb
sbb
cmpsl
lds
mov
or
ljmp
test
adc
fstps
loope
lret
sbb
mov
das
arpl
clc
adc
ljmp
das
out
imul
std
mov
add
nop
int
loopne
aam
mov
push
dec
mov
inc
in
notl
jb
inc
mov
mov
pop
push
and
and
je
clc
aas
lcall
call
mov
sbb
lods
mov
out
sbb
dec
loop
fcos
sbb
jmp
jns
push
xchg
loop
or
jge
sahf
call
jne
xchg
test
dec
das
push
push
jns
ss
sub
in
daa
sub
dec
mov
mov
pop
and
dec
inc
xchg
arpl
sbb
fdivrl
push
pusha
lret
arpl
mov
sarl
cmpsl
inc
lret
cmp
pop
pop
sub
add
mov
or
xlat
outsb
movhps
mov
push
in
dec
lods
insb
jne
call
jecxz
add
sub
hlt
shlb
jge
jl
icebp
pop
jecxz
xor
dec
clc
cs
cmc
ds
jle
aas
push
popf
mov
out
mov
stos
bound
add
inc
in
cmp
clc
push
shll
dec
mov
inc
push
add
mov
fadd
xor
arpl
inc
outsl
dec
mov
cltd
mov
and
sub
mov
push
jns
insb
sbb
imul
push
adc
cltd
sub
mov
mov
lahf
and
or
mov
std
iret
int
dec
imul
xor
cwtl
push
add
xor
sub
lds
jnp
movzwl
adc
xchg
daa
adc
mov
cltd
out
mov
inc
sahf
jp
testl
lret
and
and
mov
xchg
mov
sarl
pop
push
add
shlb
jns
les
negl
mov
fsubs
into
int
jmp
cmc
test
sub
shr
popf
jle
aam
xor
cmpsb
mov
fmuls
js
fsubl
out
shl
rorb
shr
fistl
push
sub
mov
adc
cmpsb
add
inc
mov
mov
stc
adcl
into
sbb
inc
into
lcall
lcall
cmpsb
cmp
mov
inc
inc
and
lahf
and
scas
xor
fiaddl
loop
mov
out
mov
sbb
xchg
mov
mov
or
sub
loope
clc
bound
out
or
lahf
roll
mov
cmp
roll
mov
adc
shll
subb
cmc
stc
xchg
mov
xchg
or
and
test
aam
cwtl
mov
sbb
mov
lods
push
cltd
xchg
xchg
push
popf
cmp
xchg
xchg
cs
jmp
add
mov
out
cmpsl
cs
sbb
pop
cmpsl
imul
dec
in
add
movsb
lock
not
test
imul
shll
jge
and
cwtl
jnp
cmp
add
cmpsl
daa
adc
in
outsl
pop
test
cmpsb
jo
pop
and
push
push
out
adcl
cmpsb
inc
inc
mov
sbb
js
pop
hlt
xchg
add
or
xchg
pop
cmp
jno
sub
or
sbb
cmp
push
cmpsl
sbb
push
sti
stc
daa
fmulp
xchg
adc
loopne
insl
jnp
and
test
test
ds
cmp
stos
fbld
outsb
and
mov
cli
or
xorb
add
pop
fisttps
inc
and
movsb
push
addr16
iret
or
adc
and
inc
adc
scas
imul
mov
mov
or
fucom
fbstp
bound
push
push
pushf
outsb
mov
imul
add
das
mov
mov
pushf
jo
sub
mov
mov
push
jae
out
push
push
dec
mov
or
lods
xorb
inc
fxtract
iret
movsb
hlt
pop
lret
mov
xor
pop
clc
or
mov
mov
cs
cwtl
test
iret
xchg
decb
stos
jl
bound
push
mov
sbb
fwait
inc
std
xor
mov
outsl
mov
xlat
or
dec
mov
xchg
push
scas
testl
aam
and
xor
pusha
testl
rclb
fistpl
loopne
rorb
lea
jle
xor
cs
mov
pop
inc
bound
popl
outsl
xchg
mov
or
loope
pop
movsl
fistpll
test
add
inc
cmc
and
loopne
mov
mov
sub
clc
roll
fbld
sbb
jbe
mov
std
xchg
pop
call
lock
add
mov
jg
cltd
loopne
or
popf
enter
pop
sub
pop
test
sbb
xchg
lea
jmp
add
fcomps
mov
ror
push
pop
outsb
pop
push
outsl
repnz
imul
sub
cs
imul
pop
cmp
push
sarb
insl
pop
adc
iret
jbe
cmp
jns
mov
pop
dec
xor
or
xchg
xchg
aam
lds
aad
cmp
dec
test
mov
mov
push
mov
jmp
lea
addr16
fcmove
out
ror
adc
cmp
add
lahf
jo
xchg
sbb
jg
loope
sub
addb
movsb
in
insl
les
cli
iret
dec
dec
loopne
mov
divb
sar
rorb
and
bnd
push
adcl
jb
int
and
shrb
inc
mov
or
fidivl
xchg
cmc
lcall
dec
sub
outsb
lock
lock
aaa
shlb
sub
scas
push
mov
dec
stos
and
daa
adc
pop
adc
ds
je
sub
jl
dec
lds
lods
and
mov
test
clc
jge
fbld
bound
ret
jl
sub
mov
cmp
or
xor
lret
lret
in
daa
flds
and
cwtl
insb
rclb
mov
xor
mov
xor
push
shr
stc
inc
push
mov
dec
cmp
sbb
push
mov
xchg
clc
xchg
pop
rclb
test
xor
lret
cmp
jge
dec
sub
cmpsb
sbb
sub
movsl
stc
in
cs
push
sub
jno
cmp
loop
push
fiadds
fs
sub
pop
adc
push
pop
test
add
jle
stos
pop
ret
push
push
mov
movsl
xor
jo
shll
inc
mov
pop
test
fwait
cmp
lods
adcb
xlat
cmp
or
scas
sbb
pop
lds
cs
mov
in
or
call
das
es
jb
mov
push
mov
and
lcall
inc
pop
cmpsl
jne
xor
xlat
pop
in
jecxz
dec
leave
pop
mov
bound
xor
ja
adcb
je
insl
pop
pop
sub
xor
add
inc
cs
aad
xchg
pop
int
dec
cmpsb
fwait
call
fs
hlt
icebp
aaa
lcall
movsb
add
movsb
adc
in
std
arpl
add
mov
jmp
push
push
iret
pusha
sbb
fisttps
repnz
ljmp
sbb
hlt
stos
sub
mov
mov
stos
testl
jmp
sub
jnp
or
jmp
sti
lret
mov
xchg
sbb
jnp
dec
popf
dec
cmp
in
mov
adc
cmp
inc
test
scas
inc
rcrw
cmpb
aaa
sbb
adc
sbb
or
mov
in
and
lret
dec
pop
sub
shr
pop
adc
mov
es
pop
cmpsl
push
sub
and
inc
inc
xchg
and
subb
push
ret
jmp
jp
push
dec
fadd
fidivrl
scas
mov
cmpb
fldlg2
sahf
lods
push
adc
pop
jge
out
jg
testb
jecxz
outsl
adc
test
adc
imul
xchg
outsl
or
gs
jecxz
xchg
stos
gs
or
orb
mov
push
mov
add
mov
mov
arpl
pop
inc
iret
je
mov
mov
rcrb
cli
daa
mov
addr16
cs
jle
fisubl
or
es
bnd
mov
shll
push
push
nop
lcall
cmpsb
lods
scas
sahf
cmp
push
fcom
mov
rcll
fwait
adc
or
mov
sub
push
ret
xchg
in
test
fwait
sti
inc
scas
xchg
pop
mov
push
push
mov
out
or
fstpl
ret
adc
scas
ret
sbb
filds
mov
test
inc
xlat
shll
sbb
add
repnz
cmp
sub
int3
add
jmp
pushf
inc
adc
lods
or
jne
in
cmp
mov
or
inc
out
sbb
mov
cmp
in
std
dec
js,pt
movsl
mov
aaa
mov
stos
mov
xchg
xor
mov
adc
push
cltd
in
dec
mov
pop
lret
inc
push
stc
xchg
sub
sbb
jae
jae
fdivrp
cli
in
jno
mov
inc
push
roll
xorl
dec
loopew
xlat
fildl
popl
mov
mov
pop
mov
stc
inc
cli
out
vmulsd
jns
sub
int
dec
pop
and
aas
pop
inc
fsubl
into
add
mov
out
mov
repz
mov
add
ret
fdivr
push
jecxz
inc
enter
fadd
das
shrl
out
xchg
mov
inc
mov
cmp
clc
out
adc
std
dec
cmp
in
dec
cmpsl
lds
or
fildll
fists
scas
jae
lret
cmp
xchg
inc
clc
jmp
mov
hlt
add
into
ret
adc
sub
movsb
jl,pt
sbb
adc
int
push
adc
jmp
cltd
lret
inc
cltd
push
dec
or
or
xor
leave
mov
cmc
xchg
and
pushl
mov
cwtl
aam
adc
mov
xor
pushl
xchg
mov
dec
mov
adc
sbb
daa
jns
dec
pop
pop
pop
test
cltd
xlat
jmp
xchg
xchg
sub
ja
inc
sbb
daa
jns
dec
pop
pop
pop
test
cltd
xlat
jmp
xchg
xchg
sub
ja
inc
sbb
daa
jns
dec
pop
pop
pop
test
cltd
xlat
jmp
xchg
xchg
sub
ja
inc
sbb
daa
jns
dec
pop
pop
xlat
test
cltd
mov
ss
push
in
adc
inc
lock
add
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
enter
and
insl
add
add
add
add
push
add
or
add
pop
push
pop
add
add
add
add
jle
clc
add
add
add
add
add
add
add
pop
add
add
jb
jle
xchg
add
add
push
scas
add
add
add
add
add
mov
sahf
add
add
add
add
add
add
add
mov
and
int3
add
aaa
add
add
add
add
add
aas
add
mov
add
add
add
mov
add
add
add
add
add
add
add
push
add
add
add
or
add
and
add
or
lcall
add
sub
xor
mov
add
add
add
add
add
mov
inc
add
add
push
add
add
popf
add
add
pop
add
arpl
cmpsb
add
add
add
add
add
add
add
add
jne
cmp
xchg
add
add
jmp
add
cmp
outsl
add
push
add
add
add
cmp
mov
add
add
add
add
imul
jne
and
jmp
add
add
popa
add
add
add
inc
add
pop
add
add
add
add
mov
add
mov
mov
add
add
add
pusha
add
insb
add
add
add
add
add
add
push
add
pop
add
add
push
or
add
sub
jbe
stos
add
add
add
add
dec
add
add
push
add
mov
add
roll
outsl
add
xchg
mov
add
add
add
add
add
add
add
add
add
mov
add
add
push
add
add
add
add
add
push
add
add
add
cmpsl
add
pop
add
add
add
add
add
add
sub
pop
add
rolb
xor
pop
add
outsl
add
xchg
add
add
addl
addb
add
add
add
add
add
cmp
jnp
jne
inc
add
loopne
xor
push
add
add
add
add
add
add
add
clc
add
add
add
add
pop
add
add
add
add
mov
sbb
add
add
add
add
add
roll
add
add
add
add
add
add
add
cld
add
add
or
add
add
add
push
add
js
inc
add
add
add
inc
add
add
push
and
cmp
push
add
adc
and
mov
lret
add
add
add
add
add
add
and
or
xor
int3
add
add
jecxz
sbb
add
nop
add
add
add
add
add
add
add
push
add
movb
add
add
add
add
arpl
add
or
cmp
push
or
add
mov
daa
add
xor
push
add
add
add
add
jno
push
add
popf
add
add
add
lret
sbb
jmp
test
xchg
xchg
mov
fidivrl
lea
and
adc
fildll
push
clc
testb
outsl
pop
scas
and
cmp
imul
stos
sbb
in
rorb
mov
jp
jp
dec
and
bound
lcall
pop
lock
mov
loopne
popa
lret
and
rcrb
pop
lock
ficoml
outsb
into
xlat
js
outsb
and
inc
cld
leave
sahf
je,pn
iret
push
fidivrs
mov
mov
mov
in
cmpsl
pop
or
push
mov
nop
xor
dec
mov
sbb
out
xchg
call
cld
clc
or
ja
xchg
mov
or
mov
into
cmpsb
mov
add
ficoml
in
call
ret
inc
pop
inc
sahf
adc
ret
fs
and
mov
mov
mov
pop
popa
arpl
in
mov
xor
add
jg
imul
std
push
mov
fisttps
jmp
pop
cwtl
xchg
imul
jmp
repnz
iret
cmp
lock
aaa
mov
shll
jns
pushf
mov
lcall
scas
push
loop
adc
cmp
sbb
das
jp
jmp
cmc
rol
aaa
aas
add
fcmovnu
adc
cmp
push
icebp
pop
arpl
mov
dec
in
push
call
mov
jecxz
and
dec
fistpll
pop
inc
test
aaa
push
lcall
gs
push
push
into
jp
fcoml
lcall
mov
inc
imul
outsb
sub
jno
push
ljmp
or
in
pop
insb
pop
dec
scas
adc
shlb
xchg
cmp
xlat
jno
inc
mov
mov
insl
pop
in
fucomip
xor
test
pop
cltd
mov
inc
jnp
or
sti
sub
inc
seta
lock
ja
mov
mov
les
adc
nop
outsb
out
push
lcall
xchg
mov
ret
inc
iret
lock
cmp
movsl
in
mov
sbb
mov
inc
pop
sbbl
adc
pop
jp
inc
clc
mov
dec
jecxz
mov
pushf
dec
mov
jl
sbb
jle
jp
mov
lock
and
xchg
ja
cmp
lock
jecxz
inc
xchg
fwait
js
iret
jbe
add
pop
jg
in
push
cmp
xlat
push
enter
insb
aad
jae
in
mov
and
mov
pop
push
mov
int3
out
or
test
bound
dec
inc
stos
rcl
sbb
sar
sbb
xchg
xor
in
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
