adc
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
imul
gs
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
sbb
jmp
ja
addr16
outsb
int
mov
addb
out
xchg
xor
add
inc
loop
shlb
pop
mov
mov
xchg
add
push
out
xchg
xor
and
repnz
loop
shlb
mov
xlat
fisubrl
inc
mov
fisttpl
pusha
aam
push
repnz
pushf
jne
inc
xor
xchg
in
les
pop
insb
dec
cmc
ret
sbb
bound
out
cmp
sbb
mov
popf
or
iret
adc
into
ss
sub
stos
push
lock
out
lahf
aas
jbe
inc
rcrb
outsb
xchg
cmp
push
in
clc
mov
out
popa
or
xor
push
mov
mov
ret
push
out
sbb
sbb
frstor
adc
cmp
jae
outsl
add
mov
andb
out
rorb
mov
das
mov
fisubs
pop
aas
testb
adc
xchg
repnz
mov
fs
loop
rorb
ret
inc
mov
and
push
stc
inc
divl
cltd
and
popf
xor
xor
jb
and
inc
shlb
cmp
push
ret
adc
inc
push
repnz
loopne
shrb
pop
in
sub
xchg
xchg
xor
dec
ret
push
and
mov
pop
mov
xlat
jb
notl
inc
xchg
xor
add
inc
loop
shlb
pop
mov
mov
xlat
jb
notl
inc
xchg
xor
add
subl
jle
push
push
in
inc
inc
xchg
nop
jbe
ror
cmp
fsubs
sbb
loopne
mov
in
or
mov
pop
out
popf
clc
jle
inc
inc
adc
adc
and
lods
inc
jecxz
add
add
cld
inc
dec
pop
insb
in
js
push
cmp
dec
mov
xchg
fcmove
or
mov
out
stc
test
push
call
gs
daa
mov
push
xorb
push
sbb
xor
sub
mov
adc
jmp
cmp
jp
add
push
jg
aam
hlt
adc
in
xchg
push
fmuls
cli
jmp
ds
fistps
xchg
jmp
lea
mov
lock
xor
iret
and
inc
stc
inc
lret
mov
test
loope
sub
sbb
xor
inc
lret
sahf
roll
jle
mov
xlat
pop
scas
cmc
dec
cli
test
adc
and
fcmove
idivb
mul
popl
add
mov
or
ljmp
mov
sub
loope
sub
cltd
mov
push
repnz
or
out
out
mov
jecxz
loop
xchg
ljmp
sbbl
ret
es
pop
std
push
sbb
cmp
sarl
mov
pusha
shll
and
inc
mov
dec
mov
mov
dec
sar
fs
inc
rcrl
jnp
lds
test
xor
push
clc
push
test
cmp
lds
push
fistl
mov
mov
pop
hlt
imul
and
cld
ret
test
mov
mov
mov
inc
roll
push
pop
lds
fildll
stos
mov
loop,pt
push
inc
and
add
mov
xchg
mov
fmuls
and
lods
sbb
sbb
cli
xor
or
iret
mov
cltd
out
inc
inc
cltd
aaa
push
xchg
xchg
mov
or
popa
and
dec
push
xchg
insb
test
inc
push
jg
sbb
test
pop
add
inc
lret
in
cmc
decl
mov
stos
adc
pusha
mov
ret
pop
enter
sbb
sbb
push
push
jnp
inc
mov
repz
ljmp
std
mov
aam
sub
outsl
int3
mov
popa
nop
sub
pop
pop
mov
adc
push
cmp
insl
jo
xor
outsb
cmp
push
mov
fistl
dec
mov
inc
popa
test
sbb
adc
ja
inc
mov
ret
and
lret
sub
daa
xor
inc
mov
add
ret
rorb
lret
sbb
push
jno
je
mov
cmp
lret
pop
aad
cltd
lods
ret
cmp
mov
faddl
iret
mov
fcoml
aaa
mov
push
test
mov
test
loop
xchg
sbb
mov
add
jecxz
adc
in
jge
pop
insl
out
xchg
push
inc
dec
mov
mov
and
fldt
add
jns
in
sub
or
loope
mov
sbb
leave
sbb
imul
incb
movsb
imul
dec
repnz
outsb
and
mov
loopne
jno
push
into
push
out
mov
sahf
and
loope
jne
mov
add
notl
sub
mov
fldenv
int3
push
add
inc
dec
sahf
pop
push
mov
mov
push
push
and
fs
shll
sub
cltd
mov
pop
fmuls
iret
orl
jns
dec
dec
sbb
add
dec
push
repnz
push
xor
fisubrl
hlt
xchg
mov
pop
xchg
pushf
ror
pop
loopne
imul
scas
and
fs
ret
xchg
repnz
shll
cld
loopne
out
cmp
popf
outsl
or
adc
sbbl
jns
xor
adc
ja
je
inc
xor
xor
insb
mov
dec
adc
aas
xor
lock
fdivrp
jmp
dec
xlat
stos
xlat
aaa
mov
jbe
sub
fildll
or
pop
jb
repnz
push
ret
mov
or
out
inc
bnd
dec
test
push
xchg
inc
das
int3
sarb
inc
stos
ljmp
loopne
movl
add
sbb
sub
iret
or
ret
cs
lock
in
aam
xchg
lcall
loop
push
or
movsb
sahf
lahf
leave
dec
rcl
mov
inc
xchg
dec
mov
xor
xchg
std
push
cmp
mov
xchg
add
sbb
into
mov
sbbl
pop
push
mov
add
mov
in
add
and
cmpsb
in
outsl
xor
cmp
xchg
test
jg
dec
sub
push
mov
fisttps
popa
jg
jle
jp
add
outsb
das
mov
mov
cmp
inc
sbb
into
mov
es
imul
cs
jp
sbb
ja
fldl
aaa
cmc
insb
cmp
xchg
jl
pushf
dec
mov
pop
icebp
mov
outsb
enter
dec
pop
dec
shl
in
aad
subl
sub
mov
loopne
shl
ret
mov
push
jmp
and
sbb
sub
repnz
jmp
stos
push
lcall
fildll
jge
adc
mov
sbb
hlt
mov
loop
lret
ret
in
addr16
xor
insb
or
xor
rcrb
inc
rol
rolb
xchg
push
rol
or
jge
test
mov
mov
lret
xchg
mov
xor
jmp
scas
fadd
sbb
int
movsl
cmpsb
scas
pop
adc
setno
adc
push
cmp
ficoms
sub
stos
inc
neg
inc
gs
push
push
mov
fimuls
fmull
aaa
scas
and
fisttpll
or
mov
rcl
jb
pop
jl
mov
or
int3
ret
add
lcall
ja
inc
mov
dec
int
push
test
xchg
das
sar
fldt
mov
push
and
cltd
lods
ss
lahf
ljmp
dec
dec
inc
add
shlb
mov
or
inc
sub
sbb
loopne
pop
es
jg
fisttpl
mov
mov
dec
negb
mov
orl
push
sbb
stos
mov
mov
sub
xchg
inc
mov
faddl
rcl
mov
inc
mov
test
and
test
mov
or
and
xchg
xchg
cmp
pop
bound
imul
pop
das
in
jmp
lcall
pop
ret
dec
lock
push
mov
jns
mov
inc
push
and
ret
xor
imul
pusha
sub
clc
shl
fsts
sbb
cmp
adc
mov
iret
ds
adc
ja
cmp
pusha
mov
mull
repnz
adc
xlat
in
sbb
bound
cltd
xor
mov
jg
stos
and
pop
sub
inc
rcrb
nop
xchg
fsubrl
insb
repz
insl
sbb
jno
and
inc
dec
cli
int
fistl
std
cmc
jns
sbb
test
mov
and
lods
out
in
repz
je
xor
xchg
divb
cli
inc
mov
je
lret
mov
push
mov
mov
aam
lret
dec
jp
adc
sti
cmp
sub
leave
in
imul
addr16
pop
mov
in
push
adc
cmp
fnsave
mov
loop
jne
jae
jns
adc
stc
out
adc
sbb
mov
sub
loop
in
xor
cltd
xchg
and
test
orl
aad
push
mov
lods
in
movsl
sbb
jle
mov
mov
ja
xchg
lret
stos
jae
stc
add
jno
and
sub
dec
mov
cmp
inc
push
insl
cld
xor
lds
fiadds
cmp
pop
in
leave
leave
sub
ret
dec
mov
push
dec
mov
mov
leave
gs
mov
jns
cli
aaa
push
cmpsl
dec
inc
mov
dec
jnp
lret
pop
add
loope
gs
into
cmp
popf
stc
jle
fs
dec
jbe
ja
cld
cltd
pop
in
mov
jbe
add
sub
outsl
rolb
int3
call
pop
ss
fisubrl
daa
orl
mov
shll
xlat
dec
mov
rcr
daa
push
mov
mov
or
xchg
popf
add
into
adc
push
sahf
push
sub
jecxz
mov
imul
jb
mov
and
jns
sub
push
mov
mov
mov
sti
jmp
sub
aad
icebp
mov
movsw
or
xchg
mov
mov
sub
mov
ret
adc
lods
xchg
mov
push
sbb
fwait
mov
jnp
pop
loope
sti
ret
leave
mov
insb
in
lock
mov
movsl
ljmp
imul
mov
jo
nop
and
ret
enter
out
sarb
xchg
xchg
mov
dec
loop
fstps
inc
xor
fistl
pop
repnz
mov
and
xchg
imul
lret
fcmovbe
push
or
or
lret
fimull
pushf
xchg
and
inc
pop
sti
sbb
and
lret
aas
aam
std
stos
sti
cwtl
outsl
mov
adc
adc
mov
push
arpl
negb
pop
push
out
xor
lea
add
outsl
clc
pop
repnz
cltd
scas
mov
jge
lds
fstpt
shlb
inc
add
decl
inc
mov
gs
dec
ss
in
jmp
lret
orb
xchg
dec
mov
daa
push
sbb
mov
daa
and
xor
xor
push
pusha
xor
cmp
ret
or
repz
iret
xor
mov
aas
loopne
into
sti
xor
jp
loop
adc
popf
jns
add
inc
sbb
dec
push
nop
push
xor
xor
adcb
daa
jg
inc
adc
aad
cmc
loop
xor
cmp
adc
jmp
sbb
mov
jecxz
sub
sti
jecxz
mov
out
repz
les
dec
mov
xchg
cmp
xor
adcl
xor
inc
clc
ret
mov
stos
or
mov
cs
mov
xor
in
dec
into
lret
pop
lret
cs
jo
lcall
fisubrl
inc
jp
lahf
mov
jl
pop
les
inc
dec
hlt
push
stos
sbb
push
mov
out
test
xchg
sbb
jle
and
xlat
data16
pop
mov
sub
sbbl
pushf
xor
movsl
test
fcomps
push
pop
dec
mov
jmp
je
or
aam
lds
dec
push
outsl
pop
cmp
dec
fwait
or
call
subb
aad
mov
ds
fstps
cmp
sbb
fnstenv
hlt
orb
rorb
es
xor
or
cpuid
inc
sbb
mov
dec
mov
fidivs
inc
push
inc
inc
mov
imul
jmp
sti
lods
mov
push
add
mov
dec
sub
cmpsb
iret
cmc
mov
cmc
mov
inc
inc
pusha
rcll
jge
outsl
aaa
test
jnp
pop
xor
xchg
lea
jb
mov
jmp
add
iret
jb
inc
out
lods
and
scas
push
sti
outsl
fildll
and
pop
jp
pop
pop
push
jmp
orl
ss
push
add
xchg
test
js
inc
jns
mov
lahf
or
repz
out
cmp
pop
sahf
xchg
xor
or
jecxz
std
sbb
push
xor
std
xor
push
push
inc
sub
js
mov
scas
cs
lock
mov
cmpsb
sbb
hlt
push
scas
mov
jecxz
adc
jno
sub
lcall
pusha
daa
negl
sub
flds
leave
popf
insb
cld
jnp
aas
mov
cmp
xchg
ja
shll
hlt
push
hlt
test
cmpsb
and
bnd
icebp
xchg
mov
in
jmp
mov
mov
inc
enter
xlat
dec
pop
jae
sbb
pop
testl
shrd
push
adc
jg
loopne
mov
jge
mov
sub
sub
or
enter
test
or
sbb
push
ja
mov
sbb
in
cld
movsb
push
adc
jbe
jl
in
repz
jecxz
rol
jg
sbb
aad
push
sar
fdivrs
inc
adcb
pop
adc
arpl
jmp
inc
xor
pop
ret
add
popf
sub
outsb
out
test
xchg
cmp
test
jae
add
jo
dec
add
outsl
mov
sub
dec
out
add
mov
ret
dec
cmc
mov
jmp
popl
cli
mov
jge
int
pop
mov
je
roll
data16
adc
inc
out
clc
je
and
ljmp
lods
in
sti
pop
jg
loop
outsb
lea
aad
pop
and
jle
fwait
cmp
mov
lahf
jnp
mov
lret
shrl
dec
add
jecxz
mov
mov
lods
test
in
pop
sti
pop
dec
fldpi
out
popf
add
aam
test
xor
ret
jne
jl
es
or
ret
test
adc
repz
cwtl
roll
jne
cmc
test
icebp
aaa
out
cmp
ljmp
or
and
lods
sbb
lods
sti
pop
add
inc
sub
paddsw
enter
jg
cmp
rclb
lret
jg
jbe
in
out
std
adc
jbe
mov
or
push
dec
shlb
mov
jle
scas
xchg
pop
pop
cld
or
shr
pcmpeqd
imul
cli
add
je
push
rcl
call
push
lret
ja
shl
daa
add
jg
push
mov
inc
push
repz
push
inc
push
add
jae
pusha
push
enter
xor
lods
dec
adc
pop
int3
and
push
dec
imul
xor
sbb
or
cmp
sub
lods
cltd
ss
sub
cmp
push
mov
pop
xchg
sub
push
shrb
icebp
or
sbb
hlt
ja
dec
mov
fs
adc
rcl
movsb
cmc
hlt
shrb
sub
stc
ss
and
cmp
inc
sbb
or
adc
movsb
lcall
in
or
push
xchg
pop
insb
sub
xor
movsb
out
sahf
icebp
out
daa
inc
movaps
mov
gs
movsb
or
mov
ljmp
push
in
sub
dec
lock
add
push
rcrl
in
arpl
jb
sbb
sbb
cmp
and
adc
sbb
pop
xchg
dec
cmp
mov
adc
add
stc
sbb
inc
jne
movsl
ds
jb
add
pop
push
cmc
pop
lods
stc
hlt
adc
test
or
sbb
scas
push
push
pushf
mov
inc
sahf
cmp
pop
mov
and
ljmp
andl
nop
lcall
cld
leave
or
mov
test
mov
sbb
stos
loopne
popw
lahf
into
fld
into
cmpl
mov
push
inc
jp
imul
add
fwait
cli
or
fnstenv
call
xor
mov
in
movsb
xor
and
scas
mov
add
push
lahf
cmc
cwtl
fisubl
sub
inc
lods
les
imul
xor
popa
das
xchg
lods
aam
pop
or
int
jno
aaa
jp
mov
loope
cmp
dec
dec
pop
add
imul
testb
lcall
negl
xchg
pop
in
pop
mov
add
pusha
clc
imul
js
adc
mov
or
jno
imul
pushf
aam
push
imul
cwtl
pop
add
fs
push
mov
es
add
dec
jp,pn
mov
adc
and
data16
pop
mov
push
and
mov
lret
fnstcw
add
scas
and
pop
add
gs
lret
adc
mov
shrl
adcb
mov
iret
mov
out
dec
cmp
call
sbb
sbb
add
out
lcall
and
sub
loopne
mov
or
and
or
add
sub
outsb
mov
leave
repnz
out
mov
xor
and
jo
xlat
ds
fildll
mov
sbb
or
out
xor
addr16
jmp
es
sub
out
adc
and
int3
mov
repnz
ja
mov
and
mov
cld
inc
std
dec
adc
mov
lcall
pusha
call
jmp
or
mov
pop
jno
sbb
add
inc
and
loopne
hlt
adc
push
xor
jne
or
loopne
cltd
inc
leave
cmc
jmp
and
movsl
or
push
stc
cli
inc
dec
jmp
adc
mov
aam
adc
ret
andb
pop
in
jg
call
cmp
xor
sub
push
dec
insl
push
and
nop
push
and
add
pop
stc
mov
push
das
dec
sahf
mov
inc
mov
lret
inc
push
mov
lods
pop
mov
mov
leave
data16
dec
out
into
push
cmpsb
xchg
lds
lcall
sub
add
fsubrs
jge
fst
cmp
jno
push
lret
cmpsl
and
lret
aas
dec
xor
xchg
and
jbe
mov
inc
and
sbb
nop
loop
leave
and
ret
orb
fs
cli
in
ss
addl
mov
mov
sub
dec
mov
aad
imul
push
push
movsb
les
shr
jge
jo
mov
gs
jecxz
stc
popa
mov
movsb
mov
add
cmpsl
jb
jnp
sub
sbb
or
stos
jl
cmpsl
repnz
xchg
cmp
loope
xchg
sahf
popf
data16
int3
into
fwait
mov
popf
inc
xor
sbb
int
sbb
adc
adc
fcompl
in
mov
enter
in
mov
lret
insb
jmp
sub
pop
sub
mov
xchg
push
push
sub
xor
inc
add
pop
mov
shrl
sbb
inc
or
aad
jmp
inc
rcrb
push
push
xchg
int
mov
ljmp
shll
cwtl
xchg
adc
clc
mov
mov
mov
xor
push
sub
cmp
andl
lds
mov
adc
imul
jecxz
fistpl
mov
mov
out
nop
cmp
xchg
shlb
data16
outsl
ret
cld
imul
pop
negl
das
mov
outsb
rorl
add
mov
push
int3
aad
jne
push
adc
adc
jmp
xchg
je
mov
loopne
rorl
popf
xor
xchg
dec
add
sub
outsb
stos
push
mov
xchg
sahf
outsl
fwait
xchg
mov
addr16
xor
fnstenv
fiadds
xor
push
gs
jge
cmpsb
leave
jb
or
lret
dec
jge
ljmp
pusha
and
getsec
enter
inc
push
je
dec
ss
mov
mov
notb
popf
sbb
and
sbb
pop
ljmp
xor
sbbl
js
imul
pop
popa
repnz
mov
out
inc
insl
xor
jg
ljmp
in
jl
dec
lods
jge
dec
divb
lret
mov
es
lret
ret
mov
ss
jno
test
dec
inc
push
inc
insb
stc
out
dec
test
inc
mov
pop
mov
jmp
cltd
outsl
or
test
repz
aaa
loope
mov
outsl
inc
xlat
pmulhw
cltd
push
test
clc
cmpsl
in
sbb
std
ljmp
lcall
cmpsl
and
jns
lock
in
xor
xlat
in
out
dec
mov
mov
rcrl
dec
mov
mov
out
mov
add
xor
xchg
addl
push
rep
and
add
adc
arpl
push
inc
incb
mov
xor
popf
xlat
js
pop
push
push
dec
rolb
dec
cld
cmpsl
outsl
push
rcl
ficomps
nop
jne
dec
out
xchg
mov
fsts
lods
call
ss
pop
pop
adc
cld
or
repnz
cltd
mov
xchg
in
fsubs
jge
lret
sub
mov
imul
fdivrl
pop
adc
sbb
or
cmc
gs
xor
jmp
out
loop
sarb
pop
mov
mov
xlat
jb
notl
inc
xchg
xor
add
inc
loop
shlb
pop
mov
mov
xlat
jb
notl
inc
xchg
xor
add
inc
bound
addr16
add
aaa
xchg
es
push
jecxz
xchg
xor
add
imul
rorb
pop
mov
mov
xlat
jb
enter
xor
dec
in
pop
std
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
fsubrl
jle
dec
mov
fnstcw
push
pop
cltd
push
inc
out
push
and
push
fiadds
push
data16
xchg
outsb
xchg
jle
dec
mov
cs
ds
negb
or
push
incb
hlt
fiadds
push
mov
lahf
outsb
jle
dec
scas
pop
fildll
iret
decb
loope
push
rcrb
fisubrs
sbb
adc
outsb
xchg
or
sub
mov
call
paddw
repnz
stos
out
into
fimull
outsb
add
sbb
cmpsb
pop
cmpsb
mov
push
add
push
iret
push
jmp
outsb
add
or
test
mov
xlat
mov
or
lahf
add
jmp
push
mov
jno
lahf
push
xchg
xchg
dec
cmp
cs
out
dec
xor
jle
xor
ret
std
add
mov
lcall
push
shl
out
push
stos
jmp
in
in
push
sti
jmp
mov
data16
xchg
dec
cmp
jnp
pop
cmp
stc
adc
out
fxch
aaa
fiadds
fwait
jbe
inc
outsb
xchg
jle
dec
mov
ds
out
push
pop
out
push
ds
das
ficomps
dec
mov
cmc
add
lods
ret
or
sbb
imul
push
mov
xor
add
sti
xchg
xchg
xor
dec
mov
mov
mov
push
add
push
xchg
arpl
and
lock
movsb
or
cmp
ds
negb
push
out
push
es
fiadds
push
mov
xchg
jle
dec
mov
cs
ds
negb
push
out
push
es
fiadds
push
mov
xchg
imul
fimuls
pop
pop
scas
pusha
sub
gs
xchg
add
imul
dec
dec
mov
dec
je
addl
push
pop
movsb
xchg
sub
xchg
or
not
out
inc
ljmp
je
mov
adc
jae
adc
mov
mov
daa
movsb
jne
lds
divl
ljmp
cwtl
xchg
push
push
cmp
add
and
xchg
adc
mov
adc
or
outsl
xchg
cld
subl
cwtl
out
jbe
inc
sbb
aam
sti
sbb
sti
cli
ret
popa
jnp
pop
shl
ret
inc
jge
add
sub
cmp
cmp
icebp
and
hlt
cwtl
push
push
mov
lds
xor
sub
adc
test
adc
mov
and
and
bound
aas
imul
out
test
push
sahf
cld
iret
push
xor
xchg
xchg
mov
push
push
push
and
hlt
lcall
lret
mov
adc
loopne
loop
sbb
sub
shll
sub
rcrb
in
frstor
mov
imul
or
arpl
lret
pop
xchg
in
jbe
and
push
ljmp
xor
adc
sbb
pop
xor
mov
stc
jbe
faddl
push
into
stc
std
shll
or
or
data16
cmp
loopne
sub
iret
stc
cmp
dec
ds
hlt
adc
stc
mov
aam
lods
ret
outsb
cmp
sbb
pop
dec
lods
sub
in
fsubl
or
jno
inc
or
das
adcb
jno
lea
cmc
fstl
cs
mov
movsb
push
shl
cmpsl
scas
inc
loope
in
jb
dec
pop
xchg
push
call
call
imul
mov
mov
subb
fwait
test
sub
mov
jb
hlt
jb
xchg
cmp
repz
cmpb
adc
in
pop
lret
lock
sbb
sub
xchg
jb
imul
mov
inc
fldcw
dec
mov
inc
adcl
fisttps
int3
fildll
xchg
sub
mov
cltd
xchg
stos
call
popa
jae
push
rcrl
xor
pop
sub
pushf
push
cld
repnz
dec
sbb
pop
sahf
cmp
repz
mov
jae
aaa
xor
mov
pushf
ljmp
mov
cmc
pop
aam
or
xlat
pusha
leave
popa
out
ret
in
dec
pop
das
adc
insl
jbe
mov
addr16
or
ret
popf
add
add
pop
daa
sub
aam
add
fildl
pop
and
inc
ds
xor
jp
push
scas
mov
icebp
jg
cmpsl
and
cmpsl
out
cld
data16
fstpt
xchg
lds
shrb
ljmp
pop
rcll
xor
push
adc
adc
mov
inc
pop
adc
aam
pop
imul
mov
sbbl
sub
add
test
jno
frndint
xor
loope
lcall
jnp
in
cmp
dec
lret
inc
xchg
jecxz
dec
dec
adc
iret
jb
adc
shrb
xor
add
aad
xor
push
mov
rorl
rclb
xor
sbb
or
dec
xchg
or
lea
rorb
cmp
fucomip
add
fists
fs
cmp
arpl
xor
jmp
dec
loope
jno
or
mov
enter
and
scas
outsl
int3
jecxz
add
and
out
lods
mov
adc
and
cltd
push
insl
mov
cmp
pushl
and
setge
add
mov
out
loop
mov
sub
daa
xchg
test
fsubs
ss
lcall
movsl
sbb
mov
cmp
ja
push
inc
jne
xor
cmp
pop
or
rclb
sbb
jne
dec
stc
enter
mov
adc
daa
jl
sbb
or
popa
lcall
pusha
xchg
sbb
jge
jno
and
dec
pop
pop
scas
cmp
lds
xchg
sbb
sbb
pop
xor
dec
sub
mov
cmp
loope
ljmp
add
mov
sub
in
xor
aas
jns
stc
mov
and
rcll
push
and
add
jo
or
test
nop
jmp
pushf
push
mov
mov
pop
jno
arpl
aam
jmp
ja
pop
ljmp
sbb
mov
ss
jnp
dec
repz
xor
btr
add
ja
adc
xor
mov
pop
xchg
inc
adc
sbb
fsubs
in
adc
cmp
sbb
sbb
cmpsl
jae
xchg
cmp
lock
push
mov
jne
xchg
arpl
or
aaa
inc
jecxz
in
cmpsb
movsl
push
hlt
sbb
add
test
xor
cltd
jge
insb
push
inc
pop
bound
or
into
xchg
and
movsb
jne
sbb
addr16
nop
sub
jmp
aaa
jo
lods
imul
inc
add
mov
les
loope
in
fcmovu
jae
adc
inc
or
js
das
push
out
out
loope
mov
ficomps
shl
add
dec
mov
clc
out
xchg
xor
fistpl
rcl
push
lret
imul
xchg
and
and
lcall
sarl
sub
test
jmp
rorl
icebp
test
xor
push
ret
sbb
mov
inc
xor
jmp
lret
adc
or
or
mov
or
idivl
pop
pop
xchg
lcall
out
push
mov
lret
add
scas
fldt
push
pop
outsb
test
mov
test
or
add
inc
das
hlt
xor
dec
lds
pop
dec
inc
inc
pop
cmpl
mov
sub
outsb
imul
movsb
push
mov
jns
jecxz
inc
mov
pop
push
inc
lods
imul
pop
into
jne
enter
and
mov
push
fwait
les
and
lahf
dec
and
inc
sbb
and
popa
in
xchg
mov
andl
jne
sub
mov
lds
out
or
pop
mov
orl
xor
inc
rolb
lret
add
shll
jo
push
pop
mov
arpl
mov
clc
or
rcrb
dec
mov
rcl
loope
cmpsb
xchg
loopne
ds
or
lcall
sarl
cmp
add
adc
inc
or
jge
scas
aas
leave
sahf
jns
in
icebp
sub
inc
mov
scas
lock
ljmp
jle
lods
jbe
push
jns
sbb
rcrb
xor
mov
sub
xor
jmp
add
xor
cltd
pop
push
and
jne
cld
add
dec
pshufw
scas
addr16
sbb
cmp
outsl
scas
jno
bnd
gs
or
imul
stos
sbb
jl
dec
and
daa
xorl
dec
cs
ret
xchg
stos
jp
or
xor
ret
cmp
xchg
loope
or
je
push
jbe
push
inc
out
push
pop
lods
dec
jmp
mov
mov
cwtl
mov
mov
icebp
aaa
das
hlt
hlt
sahf
addl
adc
xchg
call
and
inc
sub
sub
fwait
lahf
mov
out
cmpsl
and
clc
int3
rcrb
popa
negb
push
int3
loop
lahf
addr16
pop
aaa
dec
push
inc
push
adc
inc
mov
ljmp
push
out
es
xchg
bound
add
xchg
add
std
mov
pushf
dec
imul
mov
fstl
add
xchg
adc
mov
ret
dec
dec
mov
and
mov
jae
sbb
mov
repz
mov
stos
aas
mov
push
or
cmpsb
cmpb
or
in
jmp
mov
aad
fldl
pop
jg
and
sub
nop
jecxz
or
scas
movl
mov
and
cmc
jnp
clc
inc
cmp
sub
mov
jb
out
sub
sub
in
cmp
mov
imul
repz
int
loopne
push
mov
push
lea
dec
loop
dec
icebp
dec
imul
pop
jge
xor
insb
sbb
xchg
xchg
push
popa
movb
dec
int3
mov
cmp
jl
cld
dec
inc
fs
and
lret
aam
imul
or
jbe
dec
scas
pop
popa
mov
xor
add
stos
lcall
jge
lea
lret
loope
sarb
inc
es
loopne
loope
enter
xchg
and
mov
movsl
inc
and
dec
add
in
and
sbb
push
in
ljmp
jbe
xor
cmp
je
and
pop
and
inc
rorl
pop
pop
ror
push
addr16
inc
xor
and
ficoms
imul
divb
sub
sbb
jne
adc
inc
sbb
les
push
mov
dec
ret
fnstcw
in
jl
cmpsl
ljmp
xchg
inc
adc
add
mov
push
cmp
sbb
aad
mov
mov
jmp
xchg
fsubl
fstpt
pop
xchg
punpcklwd
mov
fdivr
pop
dec
add
test
mov
xlat
mov
loope
inc
sub
push
add
add
inc
gs
repz
xor
aad
ret
shrl
inc
sbb
movsb
xchg
ljmp
adc
aad
lea
add
cli
jno
loopne
aas
cmp
cmpsl
cmp
aad
xchg
push
xchg
sbb
mov
nop
sub
push
mov
dec
jmp
addr16
scas
test
iret
push
push
xchg
jle
ret
jne
jo
movsl
push
std
inc
sahf
not
cmp
aaa
lods
pop
mov
cmp
push
cmp
call
nop
sub
sub
or
xlat
mov
cld
ss
jo
stc
pop
xor
movsb
xor
orl
cmp
nop
jge
mov
add
lcall
aam
mov
cmp
jae
aad
xor
mov
fnsave
mov
push
push
ret
aaa
xor
push
pop
aam
xchg
mov
test
in
jno
das
cmc
lock
cmpsb
data16
movsl
mov
icebp
repnz
inc
mov
xlat
lret
and
cmp
cmp
cmp
cld
jb
clc
push
jle
xchg
sti
leave
jmp
outsl
mov
pop
dec
jns
mov
jp
mov
int3
into
and
jmp
add
scas
mov
jnp
or
cmpsb
dec
mov
push
mov
mov
stos
mov
imul
dec
or
jno
rcr
ret
movsl
sub
push
pushf
add
scas
jnp
sub
outsb
mov
inc
cmp
sub
not
ja
sub
push
lret
mov
adc
cmp
mov
push
rcll
or
sbb
push
jbe
mov
stos
fistps
cmp
mov
popf
xchg
rdtsc
fsubrs
or
into
aaa
rorb
aad
add
jge
es
push
pop
push
cmp
lea
lea
lods
pop
and
add
or
xchg
pop
mov
sbb
and
or
in
sub
jl
fisubrs
jp
stos
daa
mov
pop
jp
ja
enter
xchg
lahf
lcall
mov
sahf
cmp
sti
inc
adc
arpl
fmull
inc
fldenv
lahf
pop
pop
enter
sbb
std
jl
or
imul
sbb
mov
pop
add
movsl
push
negl
inc
daa
repz
leave
and
mov
stos
xor
test
stos
lret
cwtl
sbb
loope
pop
shrb
cwtl
insl
cmc
lods
sbb
mov
adc
jns
pop
mov
mov
sbb
loop
inc
test
lods
xor
cmc
dec
jl
out
daa
mov
inc
pushf
insl
adc
dec
mov
push
ret
lret
jg
loopne
lret
sbb
pop
loop
jle
lret
int
mov
fisubrs
mov
and
mov
ds
repnz
mov
sub
dec
xchg
jp
xchg
sub
add
pop
outsb
shlb
into
cmp
xchg
fcom
sub
jge
or
mov
pusha
out
and
outsl
out
mov
push
add
jno
jle
loope
sub
pop
outsb
sub
sahf
push
push
add
fucomi
nop
inc
pop
daa
cmp
inc
or
sub
pop
jbe
cltd
pop
mov
insb
leave
mov
loop
out
jmp
scas
adc
jnp
cli
push
int3
inc
test
fiaddl
cld
pop
in
popf
int
xchg
sbb
push
mov
dec
jno
fldt
test
mov
out
or
ret
ds
adc
mov
fisubrl
cmp
jmp
jb
les
and
std
add
cmp
jge
mov
flds
mov
jns
or
adc
or
and
xchg
mov
cld
mov
stos
lret
out
add
loopne
jg
insb
mov
adc
mov
push
test
jns
push
mov
int
xchg
jl
das
push
sar
pop
pop
cmp
mov
rolb
call
push
mov
mov
xchg
fnstsw
inc
push
adc
xchg
aas
test
fnsave
add
lret
or
scas
cmpsb
lods
repnz
fstl
pop
xor
call
fcomip
loopne
clc
or
shrb
jo
or
leave
mov
adc
jne
mov
xor
mov
or
aaa
mov
std
rorb
mov
lret
lock
fisttpl
ret
jle
sti
cwtl
mov
cli
dec
push
sub
sbb
xor
js
daa
mov
sub
aad
loop
fdiv
lret
jmp
loopne
and
sub
movl
into
lret
scas
sub
jmp
in
stos
pop
mov
push
jae
jmp
jns
push
mov
xorl
aam
loopne
lods
js
loope
out
sbb
cmp
adc
push
pop
imul
xchg
and
dec
aaa
cmp
daa
sahf
ds
loop
xor
push
add
mov
pop
mov
push
call
dec
test
stc
mov
fsub
cmp
jne
popa
inc
insb
icebp
pop
std
test
loopne
sub
popf
icebp
aam
mov
mov
push
testb
dec
lret
adc
shlb
test
add
mov
std
mov
jmp
inc
mov
sbb
push
inc
fcoms
push
jbe
pop
mov
inc
ret
and
sbb
addr16
mov
scas
or
mov
mov
mov
stos
sbb
xor
scas
aas
xor
inc
mov
ficoml
imulb
mov
cwtl
dec
addr16
bswap
insl
pop
add
fmulp
aaa
rclb
out
jne
mov
xchg
add
scas
pop
cmp
ja
cld
and
push
dec
fcomps
inc
xor
pop
xor
mov
shr
insb
aam
mov
and
in
roll
jmp
mov
cs
pop
popa
and
mov
mov
push
out
enter
jmp
inc
xorb
inc
into
xchg
dec
mov
jae
insl
int3
mov
jbe
lods
loope
mov
aas
pop
in
and
sub
adc
mov
mov
adc
lock
mov
ss
adc
inc
xchg
lahf
xchg
pop
mov
mov
mov
xchg
jl
cld
add
lret
inc
jge
or
sub
jl
fidivrs
or
ficoml
mov
bound
or
daa
pop
mov
testb
cmpsb
and
xor
in
stos
rorl
mov
or
out
js
lds
or
notl
loopne
xchg
push
inc
mov
lods
cmp
add
dec
mov
int3
fmulp
cwtl
adc
mov
cmpsl
cwtl
sbb
inc
dec
out
insb
mov
xor
pop
stos
jnp
out
adc
xor
test
jne
sub
fcompl
into
rolb
imul
lahf
cmp
sbb
push
arpl
jle
cwtl
sub
hlt
pop
dec
xchg
cmp
lods
mov
push
aam
fistps
push
mov
imul
and
into
sahf
cmp
and
out
dec
cmp
test
mov
xor
sti
or
push
lret
aas
xchg
xor
sbb
jg
nop
pop
and
sub
or
outsb
push
pop
cltd
add
and
fcmovb
in
cmp
mov
insb
xchg
inc
dec
add
push
clc
xchg
mov
test
cmp
daa
loopne
xchg
or
aam
add
mov
sbb
add
insb
pop
das
add
les
dec
xchg
iret
jle
sbb
ljmp
or
movsl
jmp
xchg
jecxz
out
negl
mov
ja
fmull
ret
jp
jle
in
add
push
pop
dec
adcb
lds
inc
aaa
add
sub
aaa
adc
xchg
shll
adc
test
rolb
xor
xchg
leave
jae
pop
stc
insb
mov
enter
iret
sbb
cmp
mov
jl
xor
outsb
fildll
jl
gs
mov
jle
adc
iret
test
xchg
inc
mov
pop
int
mov
mov
adc
or
outsb
jae
icebp
ret
or
or
shrl
aaa
leave
push
mov
fwait
mov
shrb
sahf
bound
lcall
adc
ss
cwtl
roll
push
out
insl
push
out
cld
mov
push
aam
and
icebp
cmp
or
pop
adc
call
shrb
ds
popf
loop
cmp
xchg
stc
inc
dec
jmp
cmp
xor
insl
fiadds
into
cld
or
xor
movsl
xchg
aad
inc
adc
lcall
and
jne
enter
mov
cmpsl
scas
hlt
xchg
imul
loopne
aam
mov
xor
icebp
dec
lods
sbb
pop
cmpsl
push
mov
hlt
ret
pop
inc
mov
shr
les
cld
mov
sahf
int
cmp
xchg
sarb
pop
popa
mov
int
cmp
lret
repz
sbb
sub
lret
sahf
sarb
mov
jmp
cwtl
lods
aaa
inc
jg
mov
fisubs
ljmp
mov
fidivrs
mov
leave
mov
xchg
or
xchg
push
lea
fs
inc
int3
push
add
mov
jo
add
in
cwtl
loop
subl
in
add
push
shlb
or
xchg
jbe
mov
mov
jbe
jbe
loope
in
or
jmp
movsb
mov
jge
stos
dec
call
test
sbb
jmp
mov
xchg
outsb
daa
and
add
int3
cmpsb
add
fdivl
test
lds
mov
jle
adc
inc
mov
es
jbe
xlat
add
dec
imul
movsl
hlt
cmp
insl
into
ret
jno
push
or
add
inc
pop
xor
out
in
xchg
pop
pinsrw
mov
inc
xor
push
push
add
sbb
mov
pop
xchg
cmpsb
out
sub
pusha
sbb
jno
xchg
and
dec
ljmp
icebp
mov
sbb
or
and
popa
dec
out
nop
lods
pop
xchg
aaa
shrl
xor
adc
pop
test
push
test
add
push
push
add
xor
in
jb
pop
dec
cmpsb
sbbl
stc
mov
dec
mov
lds
or
jl
int
cli
clc
daa
jmp
mov
mov
dec
movb
and
into
shll
leave
pop
insl
int3
fldcw
sarl
mov
jmp
outsb
out
sbb
xchg
lock
jno
inc
cmp
jl
testb
jg
xor
push
push
aaa
es
xor
daa
mov
jbe
sbb
in
je
mov
out
push
and
daa
push
pop
mov
insl
xor
xor
js
imul
scas
insl
insb
insl
and
jns
insb
sbb
in
xchg
subl
adc
push
add
call
mov
add
insl
int3
decl
jp
out
dec
popa
push
aam
jae
fldt
mov
jg
inc
data16
sbb
std
push
push
inc
enter
sub
push
pop
inc
push
and
dec
sub
cmp
std
dec
inc
hlt
dec
mov
mov
mov
cs
ds
negb
push
out
push
es
fiadds
push
mov
xchg
jle
dec
mov
cs
ds
negb
push
out
push
es
fiadds
push
mov
xchg
jle
dec
mov
cs
ds
negb
push
out
push
jmp
into
fiadds
push
mov
mov
mov
pop
cs
mov
stc
adc
push
mov
ss
cltd
jno
popa
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
insb
nop
in
sbb
int3
mov
cltd
call
add
dec
xor
jo
pusha
cld
nop
in
sbb
int3
mov
pushf
lock
xor
and
sbb
or
cld
mov
cltd
fsubrl
lods
fcomps
insb
and
pop
inc
xor
add
mov
in
lock
aad
aaa
sbb
std
lret
push
xor
and
test
lret
dec
popl
or
mov
stc
pop
or
xchg
incb
xor
push
adc
hlt
cwtl
jns
in
jmp
subl
pop
ret
stc
mov
or
filds
jo
and
cld
dec
and
mov
test
pop
iret
movsb
lods
fsubrl
or
push
jo
adc
push
adc
adc
sbb
or
dec
cltd
outsl
push
inc
push
cltd
and
in
outsl
in
hlt
push
dec
dec
sub
gs
dec
mov
js
push
iret
rcr
js
mov
mov
test
lods
rcrb
sbb
cmp
sub
sbb
or
mov
add
ror
mov
adc
fiadds
xor
inc
dec
xor
js
mov
ret
test
fnop
enter
hlt
shrb
add
push
sub
ja
pop
inc
dec
pop
adc
nop
ret
aam
in
jecxz
rcrb
add
and
sub
sbb
or
cld
nop
in
sbb
int3
mov
pushf
lock
jl
insb
add
and
sub
sbb
or
cld
nop
jmp
mov
out
js,pt
imul
ja
mov
test
fwait
jg
incb
adcl
fisttps
adc
subb
xor
movsb
icebp
aad
jecxz
test
or
mov
mov
ret
mov
inc
sub
in
push
popf
jp
and
sbb
daa
lds
clc
inc
adc
popa
jne
sbb
pop
mov
cltd
dec
cld
push
lods
pop
adc
fs
push
aas
cli
jmp
adc
add
jp
jns
inc
mov
movsb
pop
xorb
pop
dec
test
push
xchg
pop
rolb
sbb
push
jae
cmp
fcmovnbe
push
inc
mov
and
jp
clc
imul
test
adc
punpckhbw
mov
ret
das
inc
inc
inc
nop
subl
inc
sub
xchg
mov
lcall
inc
leave
adc
mov
cmp
jl
add
push
mov
stc
mov
jg
jmp
lods
or
pop
sahf
rolb
addb
add
cmpl
xor
sarl
out
gs
mov
cli
xor
test
nop
cmp
ret
xor
xlat
cmc
xor
nop
push
cli
aad
push
int3
lahf
test
std
ret
std
pop
push
and
inc
mov
bound
push
fnstenv
clc
scas
jne
cld
mov
inc
sahf
cltd
in
jge
sbb
aaa
nop
push
lret
ss
push
lret
adc
je
xchg
mov
mov
test
xlat
shrb
push
push
mov
scas
xchg
sub
or
and
lcall
cmc
xchg
dec
or
sti
xchg
incb
inc
je
hlt
bound
sbb
loope
hlt
pop
inc
das
push
mov
add
sti
add
imul
push
cmp
mov
movsb
sbb
repnz
ror
sbb
aaa
rclb
pop
mov
out
movsb
mov
bound
arpl
cmp
lahf
scas
mov
inc
or
dec
mov
cmp
outsl
out
xchg
mov
stos
out
data16
mov
stc
data16
jbe
das
and
jns
pop
xor
insb
lods
stos
icebp
sahf
mov
lods
incb
fnstsw
lock
inc
and
in
push
stos
int
and
and
roll
push
push
jnp
shlb
iret
or
fwait
push
movsb
adc
sbb
or
out
imul
xor
mov
xor
subl
js
and
mov
adc
adc
mov
loopne
loope
sti
sub
inc
mov
dec
xchg
pop
in
bound
daa
sbb
cwtl
cmp
pop
lcall
sbb
js
or
push
cld
outsl
js
sbb
repnz
xor
js
push
dec
into
jno
or
push
ja
mov
xorl
sbbb
mov
push
insl
sbb
push
pop
iret
call
lods
mov
data16
jo
enter
hlt
xchg
pop
inc
and
gs
or
jp
mov
push
adc
fdivrp
adc
mov
cs
dec
bound
xor
aaa
pop
adcb
sahf
out
and
or
dec
rclb
ljmp
jb
inc
std
jmp
cmp
mov
jbe
pop
int3
jae
and
scas
sbb
jl
dec
or
scas
lahf
xchg
lahf
lret
sbb
mov
push
cmp
repnz
mov
gs
filds
mov
push
or
fldcw
and
popa
add
in
sahf
ret
xchg
neg
sti
loope
add
pop
push
movb
movsb
icebp
popa
mov
stos
out
xor
mov
mov
aas
and
and
inc
mov
and
cld
jne
cmc
jo
jb
cli
or
sub
push
aas
sbb
inc
inc
fidivrs
or
jb
gs
push
and
adc
loope
inc
dec
test
mov
cmp
xchg
adc
dec
insl
ljmp
nop
in
dec
inc
stc
in
jnp
outsl
movsb
js
call
sbb
mov
addr16
mov
cmpsl
nop
adc
mov
pop
jmp
adc
jo
call
push
sbb
push
pushf
outsl
xchg
out
addps
lcall
dec
movsb
xchg
jns
movsl
out
inc
mov
andb
adc
mov
aad
fadd
mov
jl
mov
insb
adc
ss
out
xchg
in
mov
lods
aaa
psubb
or
pop
dec
test
test
sub
aaa
repz
jp
jb
cld
jnp
sbb
push
aaa
mov
movsb
cmp
xchg
xor
pop
jp
pop
repz
jle
int3
mov
jbe,pn
push
les
mov
mov
test
jae
pop
cmpsl
les
push
xchg
scas
xor
ds
sbb
add
inc
cmp
clc
iret
in
stc
inc
jl
jb
es
loop
mov
pop
js
mov
fcompl
pop
fimull
cs
jne
out
inc
test
sbb
ss
jp
cmpsl
ror
cwtl
jecxz
roll
mulb
out
scas
dec
mov
xchg
fisubrl
les
add
and
mov
mov
mov
jmp
lds
jae
pop
pop
sbb
jne
dec
das
jg
cld
insb
mov
in
or
dec
cmpb
xchg
jl
sarl
pop
xorl
lcall
and
add
mov
icebp
addr16
jns
cmp
mov
gs
and
fs
cmc
lods
orl
and
mov
xor
loope
pop
mov
pop
xchg
pop
push
xorb
loop
loopne
movsl
mov
push
mov
cmpsb
out
adcl
lcall
xchg
lret
loopne
push
fisttpl
les
push
inc
jge
sbb
inc
push
sbb
test
dec
and
fmull
adc
xchg
pusha
shl
test
cmp
test
add
push
inc
xchg
jbe
jae
and
scas
cmpsb
pushf
inc
adc
add
and
xor
dec
mov
dec
dec
adcb
mov
xor
out
das
lds
cwtl
inc
js
and
pop
je
sub
push
jae
sbb
dec
jecxz
nop
inc
inc
xchg
push
jge
insb
inc
shlb
scas
lcall
scas
icebp
loope
jno
lods
sbb
popf
pop
mov
mov
iret
jg
or
dec
aaa
dec
fs
into
mov
inc
xchg
mov
cmp
sub
lcall
hlt
shl
fwait
and
cli
pcmpgtw
les
mov
test
jmp
iret
adc
outsl
loopne
in
cmp
xchg
jno
test
jg
arpl
lahf
cmpsl
cltd
cmpb
iret
mov
int
sbb
xor
dec
jb
mov
mov
or
into
cmpsb
dec
pusha
mov
mov
aas
fsub
loopne
lahf
jne
fwait
in
loope
out
arpl
repnz
jbe
pop
push
pop
sbb
loope
gs
stos
je
xorl
cs
lahf
xchg
sbb
mov
adc
xor
out
stc
sbb
repz
fisubrs
mov
mov
cmpsb
ds
xchg
stos
testl
add
jle
mov
adc
xor
pushl
cwtl
mul
repz
xchg
pop
sahf
vpcmpgtw
xchg
jbe
mov
es
push
in
sub
add
add
mov
out
pop
leave
mov
or
inc
sar
loopne
cwtl
jl
pop
pusha
cmp
pop
std
aam
leave
adc
sub
mov
mov
xor
mov
jmp
in
add
mov
orb
jg
pop
pop
xor
cmp
mov
adc
popf
push
inc
cmp
fwait
scas
shrl
inc
sbb
or
stos
mov
fwait
push
ret
mov
test
pop
mov
dec
sub
and
test
rorl
mov
inc
pushf
and
pop
mov
add
cltd
cld
jns
out
out
lcall
push
mov
add
fs
lret
sti
push
dec
jle
jae
mov
jno
insl
mov
test
in
or
cmpsb
cld
int
push
call
cmpsb
push
xor
add
cmp
pop
sub
dec
notb
cmpsl
pop
iret
imul
lods
mov
jmp
cmp
cmp
push
decb
inc
out
jmp
jmp
jbe
sub
mov
stos
push
sub
jg
add
and
rclb
cmpsb
sub
cmp
and
pop
mov
nop
rcrb
push
fs
cmp
scas
push
jmp
or
mov
xor
inc
pusha
js
add
stos
leave
push
iret
jmp
fnstcw
inc
adc
pop
mov
fs
inc
pop
jne
xchg
je
dec
inc
nop
ret
add
outsl
int3
and
xchg
and
push
in
enter
sbb
cmpl
shrl
in
pop
shl
or
lods
sub
mov
data16
scas
aas
stos
jne
jecxz
inc
dec
pop
out
std
mov
jnp
inc
sub
fnstcw
sub
jae
add
push
jnp
push
ja
dec
mov
repz
jmp
sarl
push
inc
pushf
mov
mov
ljmp
mov
out
cwtl
xchg
cld
add
icebp
mov
les
sbb
pop
xchg
push
cltd
inc
nop
pusha
mov
nop
lds
mov
lret
std
lods
mov
dec
neg
fidivl
mov
dec
into
icebp
sub
xlat
xor
shl
lcallw
push
jo
mov
lods
movsb
inc
add
pop
int3
cmpsb
pop
dec
lret
or
pop
adc
js
lods
mov
aam
push
fsubp
jge
in
pop
ljmp
in
test
gs
xchg
fisttps
push
and
adc
or
push
and
dec
jae
or
inc
js
daa
paddsb
sbb
dec
sub
cmp
add
or
daa
cmp
xor
test
scas
lahf
fistps
and
lret
pop
ret
cmc
mov
pop
fwait
push
adc
jns
pop
xchg
adc
cmp
std
push
push
mov
lret
mov
mov
jne
nop
xlat
cmp
mov
ss
and
jmp
adc
jb
nop
adc
push
mov
out
push
sub
push
mov
hlt
iret
aaa
aad
pop
fwait
xor
fcmovu
mov
pop
lcall
lret
mov
icebp
mov
xor
pop
mov
out
jnp
jo
mov
adc
popa
clc
or
dec
shlb
mov
stc
sbb
mov
cmp
scas
inc
mov
rep
lahf
cmp
push
outsb
popa
mov
ret
rorb
jb
bound
pop
ljmp
imul
push
add
rcrb
lcall
stc
mov
push
nop
nop
dec
shrl
push
xor
jns
mov
in
orb
jns
jle
pop
mov
clc
cld
leave
pop
ficompl
sbb
stos
mov
inc
xchg
in
jecxz
ja
mov
pop
and
dec
xlat
pop
sar
fnstsw
aas
xchg
out
repz
push
movsb
addb
scas
into
fsubrs
jns
inc
pop
ja
mov
cmpsb
jo
and
cld
out
xor
pusha
dec
stos
mov
cmp
in
cmp
lret
dec
stos
xor
mov
sbb
shlb
add
fs
sbb
rcr
adc
mov
or
ss
ja
insl
xchg
and
insb
sbb
xor
in
les
pmullw
imul
rol
dec
xchg
stc
add
out
rclb
nop
lret
jmp
or
inc
icebp
scas
xchg
sub
mov
scas
lret
idivl
insb
jnp
mov
cltd
imull
in
shrb
outsb
mov
mov
sbb
shrl
out
mov
rclb
xorl
psadbw
adc
out
jmp
inc
cmp
jb
lods
js
into
xor
lea
push
fidivl
pop
sbb
popf
add
in
xchg
or
and
ljmp
pusha
sub
inc
les
mov
repz
mov
shlb
movsl
out
aam
fld
jge
xcrypt-ofb
cmpsl
sub
incb
in
lret
je
imul
scas
ja
pop
js
js
dec
jb
repz
xchg
cmp
cld
into
xchg
pop
test
adc
pop
pop
lods
add
cmp
push
fwait
pop
sahf
fldenv
or
scas
inc
dec
or
sarb
mov
pop
psubusb
mov
aam
subb
dec
aaa
test
push
jmp
je
popa
sub
adc
in
repz
aam
hlt
or
idiv
and
mov
push
xchg
lods
test
jo
mov
jecxz
jnp
cmp
rclb
sbb
out
xor
fdivr
int3
adc
xchg
push
popf
pop
into
daa
or
mov
lea
mov
and
sbb
xchg
sub
sarl
test
pop
insl
gs
push
or
imul
out
xlat
rcrl
fists
loopne
into
mov
jle
sub
push
jnp
jns
idivb
iret
and
fsubl
test
mov
xchg
sub
test
cmc
xchg
jle
orl
xor
and
cli
jae
aaa
or
int
xchg
mov
sbb
and
cmp
inc
stos
sti
xchg
sahf
xchg
dec
mov
int3
pushf
leave
pop
out
ret
cld
jmp
lret
or
pop
std
notl
int3
andl
roll
cmp
fnstsw
inc
xor
push
lcall
dec
lods
adc
aas
rcll
in
jle
cmp
jno
adc
push
out
jns
addr16
xchg
shlb
xchg
push
inc
mov
mov
lea
ljmp
xchg
cltd
cmc
jo
or
cli
outsb
mov
outsb
scas
xchg
sub
testl
es
push
jns
scas
push
nop
fwait
lods
nop
dec
test
or
out
add
aaa
xchg
or
scas
inc
dec
pusha
add
mov
add
enter
sbb
stos
pop
or
fcomp
cli
std
in
mov
xchg
mov
and
push
push
mov
lcall
cmp
xlat
mov
shrl
fnstcw
lds
enter
int
sub
fcoms
in
mov
loopne
mov
stc
jbe
xorb
data16
sbb
aaa
mov
pop
in
das
add
cmp
sub
push
push
mov
call
les
mov
lods
push
sub
push
or
sbb
hlt
je
inc
push
sub
fstpl
mov
cmp
sub
mov
mov
dec
sbb
int3
repz
andl
inc
lret
cmpsl
xchg
add
insb
inc
xchg
pmaddwd
cli
and
cmpsb
test
xorb
push
and
push
mov
jbe
sti
inc
daa
cmp
jbe
sbb
ss
mov
mov
xor
jno,pn
cs
push
sahf
ljmp
bnd
inc
xor
dec
lods
orb
imul
jo
mov
sub
xchg
rolb
sub
mov
mov
push
sub
les
or
xchg
push
in
test
jns
add
mov
and
cmp
or
mov
test
mov
sub
cmp
aaa
aaa
mov
mov
fdiv
push
pop
ret
fs
aaa
jge
push
jge
xor
inc
xchg
aaa
sbb
sub
dec
mov
inc
jbe
mov
enter
inc
mov
mov
jmp
and
icebp
lcall
es
push
xchg
sbb
and
add
mov
sub
sub
in
dec
mov
frstor
dec
popf
mov
mov
jno
dec
enter
imul
repz
sti
xor
test
ja
adc
sbb
push
pop
pop
imul
sbb
test
lret
and
jge
cmp
pop
cmpsl
popa
cltd
arpl
loope
push
lods
out
outsl
add
mov
ss
popa
clc
mov
push
push
je,pt
pop
imul
ja
jl
sbb
jbe
out
mov
call
xor
sbb
mov
cmc
jns
inc
cmp
cld
mov
add
adc
sbb
mov
push
ja
inc
cmp
xor
xchg
bound
xchg
sub
mov
in
jno
repnz
cs
ret
sub
jecxz
pop
fcmovne
jne
mov
pop
cltd
jge
mov
sub
imul
clc
mov
mov
push
ljmp
or
pop
lret
aam
sub
dec
popf
xor
aaa
mov
test
mov
jg
mov
jl
xor
pop
mov
sti
cmc
xchg
xchg
repnz
ret
jne
or
or
xchg
test
or
or
mov
mov
fistpl
dec
xchg
mov
adc
fimuls
pop
outsl
push
lret
gs
cmp
imul
lods
sub
scas
inc
popa
enter
ss
inc
inc
pusha
push
icebp
push
test
clc
jae
imul
test
add
sbb
or
cmpsb
bound
cmp
ljmp
push
mov
out
and
xchg
insb
xchg
and
push
push
repnz
test
in
add
cmc
shrb
bound
xchg
mov
add
cli
arpl
jns
pop
xchg
pop
cmp
popf
mov
dec
xor
pop
cmp
testl
add
sbb
or
cmp
inc
stos
cmpsb
sbb
insl
das
xchg
adc
jmp
lds
cmpsb
sbb
out
mov
mov
pop
call
out
mov
das
pop
icebp
xor
lds
xchg
pop
rclb
inc
push
ficompl
inc
pop
cmc
ds
or
repnz
add
sub
mov
fcompl
loopne
cmp
mov
jno
push
fsubs
scas
or
push
jmp
rorb
xchg
lods
pop
outsb
push
das
mov
jl
jo
xchg
push
mov
int
orb
out
adc
or
xchg
popa
pop
xor
pop
cld
divl
fs
pop
ret
movsb
and
adc
pop
xchg
inc
sub
dec
mov
mov
fucomp
xchg
stos
inc
dec
push
xchg
out
xor
je
and
xor
sbb
scas
dec
push
gs
sbb
test
cwtl
rcrl
or
in
xor
in
imul
cs
stc
clc
ss
scas
lahf
push
or
xor
pop
cmpsb
lea
mov
push
mov
jmp
out
jecxz
aam
aaa
test
scas
lock
mov
pop
xchg
and
fdivl
and
add
push
jp
data16
movsb
push
jb
lret
pushf
inc
imul
adc
xlat
pop
clc
hlt
bound
cmc
or
sti
cwtl
cmp
mov
or
mov
movsl
xor
sub
or
xchg
test
sbbl
xchg
je
iret
push
lds
addr16
sub
cmpsb
insl
jl
sub
jp
fst
or
ss
adc
nop
or
movsl
push
push
outsl
or
scas
rcrb
cld
popa
int
idivb
jge
je
or
jne
mov
mov
push
or
xor
mov
add
lods
cmp
inc
into
in
mov
stc
shll
mov
push
loopne
scas
jns
dec
lods
je
rol
jmp
fisubrs
push
movsb
pusha
xor
push
or
cmp
mov
dec
adc
and
xchg
repz
push
mov
mov
aas
xor
and
mov
push
fists
or
xchg
fcomps
in
jle
xchg
ret
in
in
inc
int3
dec
mov
lahf
daa
sbb
cmp
xchg
outsl
pop
or
stos
jle
pusha
sahf
dec
cmc
stc
dec
push
pop
sbb
cmpsb
mov
nop
xor
and
iret
mov
add
pop
jae
push
add
lods
dec
mov
mov
jg
sub
mov
pop
cld
sbb
mov
inc
lcall
arpl
dec
nop
sub
mov
bt
mov
cmp
in
jns
in
inc
pop
adc
pop
cmc
nop
add
xchg
mov
lods
das
add
xor
add
pop
lret
mov
js
insl
outsl
ja
sub
int
or
mov
repz
ss
mov
pop
and
adcb
int3
mov
pushf
lock
jl
insb
add
and
sub
sbb
or
cld
nop
in
sbb
int3
mov
pushf
lock
jl
insb
add
and
sub
sbb
or
cld
nop
in
sbb
int3
mov
pushf
lock
jl
insb
add
and
push
sub
sbb
or
test
mov
mov
pushf
lock
jl
insb
stos
divb
dec
push
dec
fsubs
lods
stc
mov
mov
mov
jbe
xchg
xchg
or
sbb
insb
jl
dec
out
imulb
pushf
ss
inc
cld
fcmove
data16
sub
cmp
or
sbb
insb
test
pop
imulb
pushf
xor
jp
push
mov
outsb
sub
pop
cmc
jl
jns
insb
xchg
movswl
xchg
xor
js
push
cmc
arpl
jno
frstor
jp
scas
in
pop
sub
fs
loope
negl
mov
inc
pop
jae
popa
mov
inc
cld
stos
xor
xor
nop
mov
jecxz
cmp
jl
sbb
or
adc
cmp
sbb
rolb
sbb
cltd
cmp
not
iret
es
out
fwait
push
dec
ss
mov
fmull
in
xchg
jecxz
cmp
jl
mov
xlat
movsl
call
cmp
or
mov
fcoml
xor
jbe
aad
xchg
xchg
cld
xlat
mov
pop
or
aaa
arpl
add
push
xchg
cld
pop
jbe
mov
das
sub
push
mov
cmp
inc
cld
push
int3
mov
cmp
or
sbb
insb
ljmp
leave
push
fists
lret
sbb
addps
pop
rcrb
rcrb
ljmp
xchg
fiaddl
push
out
inc
fstl
mov
mov
mov
cltd
sbb
pop
shlb
rcrl
xchg
popf
lret
push
mov
push
test
data16
xchg
or
sbb
insb
jl
dec
out
imulb
pushf
ss
inc
cld
push
int3
data16
xchg
or
sbb
insb
jl
dec
out
imulb
jecxz
cmp
push
jne
cmp
lahf
inc
out
xor
jno
inc
movsb
dec
jo
in
hlt
mov
je
mov
ds
shll
mov
adc
out
dec
out
jmp
cmc
xor
pop
dec
pop
dec
mov
jb
xor
sbb
sub
movsl
div
sub
fdivrs
js
mov
les
push
adc
dec
mov
lret
leave
sub
inc
xlat
lds
iret
repz
lahf
stc
lods
fildll
into
insl
xchg
xor
fistps
fimuls
xchg
xchg
test
in
push
sub
mov
inc
adc
sarl
loop
pop
inc
dec
or
adc
lcall
mov
sbb
lods
fdivp
fwait
call
clts
shll
adcl
sub
xchg
out
inc
js
push
inc
int3
push
xchg
es
mov
jnp
jno
cmp
inc
loope
ficoms
pop
insl
inc
and
rorb
dec
jmp
insl
push
xchg
pop
add
jmp
sub
adc
mov
mov
and
mov
loopne
mov
mov
fidivl
and
mov
call
add
mov
mov
aaa
pusha
cmpsl
xor
lret
imul
repnz
daa
mov
cwtl
sti
push
mov
push
adc
sbb
pushf
and
fdivl
cmp
pop
sub
inc
call
int
fidivrl
ds
dec
fcoml
xchg
cltd
lahf
gs
pop
pusha
loopne
test
pop
imul
outsb
ss
hlt
and
pop
div
xchg
mov
gs
in
in
jecxz
ret
stc
dec
sbb
stos
inc
mov
aad
push
cmp
std
cld
gs
icebp
std
mov
jb
push
cmp
jmp
mov
les
test
outsb
mov
repz
sub
mov
push
adc
add
das
inc
clc
iret
std
mov
testb
and
in
cmpsb
js
or
jl
addr16
jl
pop
nop
dec
inc
std
sbbl
shll
cmp
sub
icebp
pop
test
popa
fildll
and
mov
mov
sub
jns
sbb
jle
xchg
das
or
inc
mov
mov
dec
push
ret
call
jae
lock
sbb
xchg
cmp
and
repnz
inc
cmp
cwtl
shlb
or
fstp
out
lret
dec
push
ficomps
mov
scas
rcl
mov
dec
mov
fstpl
add
xor
ret
jo
cmpsl
clc
lret
mov
scas
xchg
mov
pop
mov
movsb
pop
or
fwait
pop
mov
sbb
and
mov
xor
inc
fs
jmp
ret
mov
mov
fwait
mov
sbb
xchg
rorl
mov
xor
aam
cltd
test
inc
sbb
xchg
insb
test
stc
outsl
int3
in
popf
jns
cmp
fisubl
dec
stos
mov
ficompl
popf
mov
faddp
mov
fimull
movsl
test
fimull
test
int3
outsb
lcall
shl
cmp
in
cmp
imul
lret
sarl
cmp
xor
fisttps
stos
aaa
xor
sti
pop
test
ljmp
jp
ret
push
xor
jle
scas
out
dec
insb
lahf
loopne
fdivrs
push
sahf
les
ja
cmp
test
jbe
lods
pop
cmpsb
mov
gs
mov
mov
mov
cld
pop
add
inc
cld
stc
stos
or
jbe
inc
stc
jnp
and
aam
fwait
jmp
fisubrl
test
bswap
insl
fidivrs
andl
sub
or
mov
adcb
mov
xchg
inc
rorb
inc
xlat
sub
mov
mov
xor
and
int
adc
push
and
sub
pop
inc
inc
mov
daa
mov
and
ficomps
and
imul
aas
push
adc
sarl
dec
jp
lahf
fnstcw
mov
push
add
jns
lock
int3
jle
and
les
push
push
std
sti
adc
mov
popa
add
jno
das
outsl
sub
bound
mov
inc
mov
jne
testb
stos
ds
out
cmpsl
mov
or
test
subb
aad
mov
pop
or
or
mov
pop
sbb
or
and
and
imul
xchg
mov
cmp
xor
sysret
push
jl
mov
ret
cld
inc
dec
mov
push
push
pop
in
gs
push
movsl
shrl
mov
push
sub
sub
aas
enter
aaa
sub
pop
mov
stos
imul
dec
movsb
mov
adc
jp
xchg
iret
mov
xchg
dec
ja
subb
insl
das
push
pop
je
iret
cmp
stos
and
loopne
push
push
out
fwait
out
and
mov
das
stos
inc
xchg
jne
xchg
loopne
xchg
stos
movsl
cltd
inc
jp
sub
popa
sub
dec
mov
mov
insb
sbb
xor
iret
jle
and
aam
cltd
sahf
sbb
add
sub
ja
push
xchg
adc
jnp
pushf
lcall
sbb
jno
cwtl
ds
pop
and
lods
leave
push
rorb
lods
aad
xchg
shll
jl
aas
stos
xor
and
adc
je
enter
and
mov
in
out
rclb
lahf
add
cmp
cmp
fstpt
cmc
dec
rcrb
cmp
mov
add
mov
aaa
cmp
xchg
sar
ficompl
xlat
dec
mov
jnp
sub
mov
xchg
push
add
scas
push
add
inc
dec
sbb
lahf
scas
xchg
push
int
pop
iret
or
push
jle
das
ja
pushf
jo
hlt
sub
imul
jmp
and
mov
pop
add
popa
lods
scas
cmp
movsl
push
dec
xchg
hlt
add
into
cs
push
adc
mov
push
add
sub
mov
add
push
loope
shrb
cs
js
push
mov
jae
dec
decb
lahf
mov
fisttpll
ljmp
ret
notb
push
or
rorl
mov
jb
mov
xchg
lods
cmp
adc
adc
jmp
push
mov
adc
rclb
fcomps
push
sub
jns
mov
push
scas
mov
jecxz
in
lea
and
jg
sub
dec
iret
cmp
gs
movsb
xor
into
loop
jge
mov
sahf
xor
test
add
in
icebp
xchg
inc
data16
xchg
cmpsl
xchg
and
mov
out
mov
push
sbb
and
shlb
out
xor
lcall
inc
gs
sbb
ja
fmull
addr16
xor
sbb
push
fildll
push
xor
es
push
mov
int
xchg
ret
sbb
xchg
sti
cld
jp
mulb
adc
jbe
repz
out
adc
mov
fldenv
test
pop
mov
addr16
clc
clc
jae
shr
or
push
into
pop
cmc
jle
stos
imul
xor
aas
push
loop
xor
sub
jnp
pop
inc
xor
ficompl
mov
in
daa
push
sbb
loopne
xor
je
and
xchg
inc
sarl
push
inc
pop
scas
xchg
loopne
xor
fwait
dec
and
or
fs
xchg
out
inc
or
cwtl
jp
loope
pusha
lcall
inc
push
jecxz
pop
out
jle
daa
dec
jg
ret
or
int3
addl
lcall
sbb
fwait
xor
lcall
cltd
stc
mov
lahf
cli
imul
add
jecxz
jle
dec
or
stc
ficoml
sbb
push
pop
mov
xchg
ret
inc
inc
in
mov
pushf
rorb
or
hlt
dec
xor
and
lahf
in
push
movsb
xorb
fisttpll
daa
orl
jmp
gs
popf
pop
pop
call
sub
hlt
sbb
out
push
cmp
mov
cmp
out
ljmp
and
mov
sub
icebp
adc
pop
cmp
adc
hlt
xor
cmpsl
daa
ja
insl
and
mov
pop
jmp
jge
jns
outsl
push
les
jle
fsubl
shrb
stc
inc
mov
pop
jne
addb
out
jb
cltd
lock
pusha
out
fdivl
sbb
dec
xor
test
loope
add
sub
push
int
or
push
cmc
add
mov
inc
ss
lods
lods
mov
and
mov
mov
pop
xor
push
cmpsb
insl
jb
xor
xchg
push
push
lret
loope
and
sahf
shrb
stc
pop
aas
xchg
movsl
jbe
jl
fsubs
in
es
xor
ljmp
mov
or
arpl
js
or
arpl
lret
or
adc
xchg
mov
mov
sbb
cmpb
nop
mov
out
inc
push
add
ss
enter
adcl
sub
mov
xchg
mov
cmp
fisubrs
push
mov
int
rcr
sub
push
or
cmpsb
movsb
pop
mov
js
les
pop
fstl
jno
cli
xchg
iret
and
xchg
decl
add
lahf
mov
sub
mov
mov
aas
xlat
fistl
mov
jmp
add
sub
hlt
xchg
shlb
outsb
pop
mov
or
jns
jle
pusha
or
xchg
aad
nop
test
xor
cli
into
sub
sahf
and
repnz
cs
sbb
pushf
mov
mov
or
hlt
xchg
mov
xchg
inc
jg
cmp
xor
inc
cmpsl
lahf
ds
cmpsb
inc
mov
sahf
push
clc
pop
push
and
int3
in
fists
dec
sbb
movsb
cmp
xchg
pop
ja
inc
addr16
mov
cwtl
sbb
popa
bound
stos
imul
jns
out
push
sub
jmp
adc
pop
pop
or
aam
decl
xchg
ljmp
gs
xchg
lret
cmp
push
aaa
call
xlat
add
and
movsb
or
cs
mov
xor
cld
push
pop
inc
addr16
adc
sbb
jecxz
xchg
push
roll
push
push
mov
in
mov
cmp
repz
sti
fsubr
repnz
inc
xchg
mov
adc
inc
pop
out
imul
pushf
fiaddl
mov
add
jg
stc
jge
push
cld
lods
sti
pop
popf
pop
push
popa
push
pop
sbb
sub
cs
outsl
enter
inc
sub
xorb
cltd
scas
ret
repz
shll
outsb
adc
ret
or
dec
loope
push
dec
int
fildll
jnp
dec
lahf
sub
mov
jne
jp
test
pusha
xor
pop
mov
sti
test
cmc
xchg
mov
adc
movb
mov
leave
loope
jne
es
sub
dec
enter
xor
fbstp
xchg
mov
imul
setb
shlb
adc
add
mov
inc
int3
or
shrl
jns
jnp
mov
push
repnz
lea
imulb
inc
insl
dec
add
inc
int
mov
or
dec
or
xchg
dec
mov
pop
sbb
stc
inc
daa
jl
roll
sbb
pop
andb
lock
push
popf
mov
adc
out
jmp
pop
shrl
mov
lods
ja
adc
insb
sub
pop
inc
data16
jg
negb
inc
jg
aaa
or
aad
call
add
ret
jp
sub
mov
jmp
mov
push
fimuls
into
cmp
mov
adc
sbb
ljmp
or
xor
add
loope
int
nop
or
sbb
pop
adc
in
lods
inc
and
xor
cmp
pop
xlat
xchg
pop
xchg
sub
push
ss
movsl
out
mov
jp
lods
scas
roll
aam
not
xlat
pop
fcompl
sbbl
push
clc
or
mov
outsl
loop
pop
call
aaa
jp
jp
jnp
daa
pop
xor
or
das
adc
xor
bound
inc
jbe
adc
pop
push
push
mov
sarb
sahf
mov
cld
scas
dec
push
sbb
cmpsb
or
mov
movsb
cmp
sti
fiaddl
aas
dec
mov
lret
inc
sbb
ror
outsb
mov
jno
xchg
bound
repnz
dec
sub
jl
pop
cli
jl
out
dec
loopne
sbb
ret
jo
andl
push
mov
clc
outsb
inc
xchg
cltd
shlb
jno
fildll
xchg
and
loopne
test
sub
sbb
int3
orl
in
add
jns
in
insl
add
bound
stos
jg
jns
popa
mov
test
clc
and
push
add
xchg
sub
in
inc
or
dec
xor
out
test
push
mov
dec
cld
cmp
or
mov
adc
pushf
je
mov
inc
adc
loopne
test
cmp
dec
cld
push
jle
arpl
ljmp
loope
mov
das
or
out
pop
sbb
ljmp
adc
or
fs
inc
push
scas
push
pop
pop
add
xor
outsb
enter
addr16
jg
sarl
cmpsb
xor
int
pop
jmp
stos
mov
nop
add
push
gs
in
mov
xor
lahf
mov
xchg
xor
dec
rolb
mov
cmpsb
into
pop
push
outsl
nop
and
movsl
call
xor
rcrl
or
inc
jbe
insb
int
mov
add
push
and
lret
nop
cld
sarb
mov
les
cmp
aad
inc
mov
out
sub
xchg
mov
pushf
pop
cmpl
push
shll
mov
pop
pop
pop
inc
sub
sbb
add
ror
sub
xchg
pop
hlt
cli
jmp
sbb
xorl
jmp
xorb
std
inc
adc
movsl
mov
jno
rorl
movl
mov
push
mov
sub
fdivp
mov
pop
mov
sub
xchg
push
mov
iret
fistl
cmc
lock
inc
jecxz
sbb
xchg
push
push
and
mov
cli
sbb
mov
pusha
pusha
ja
fildll
pop
fsub
push
idivl
mov
insl
stos
push
addr16
out
push
pop
fisttps
jne
push
in
in
or
fwait
pop
aas
pop
aam
mov
cmpsb
inc
xorb
mov
aaa
xchg
sbb
cmpsb
push
test
cmp
pusha
in
addb
or
adc
pop
mov
idivl
mov
cmp
lods
into
mov
adc
mov
arpl
mov
add
inc
pop
imul
icebp
popf
inc
mov
or
fbstp
ret
jmp
sti
inc
leave
jno
sti
jp
hlt
int
icebp
and
add
fnsave
bound
mov
jb
mov
data16
sbb
xchg
pop
fs
or
std
and
jae
jno
xor
jbe
cmp
mov
mov
add
incb
adc
aam
int
and
cltd
pop
cmp
loopne
lcall
jg
pop
mov
jecxz
cmp
mov
clc
adc
inc
popa
and
and
hlt
mov
lret
popa
fwait
xor
jl
mov
out
lock
mov
loope
add
mov
fiadds
xchg
aaa
jns
add
pop
add
mov
mov
and
nop
mov
imul
out
and
cwtl
dec
mov
mov
fnsetpm(287
xchg
push
sbb
xor
subl
lret
cmpsl
mov
insb
popa
jae
cmp
sub
adc
and
std
dec
ds
cmpsb
xchg
sbb
adc
lahf
shl
imul
push
mov
mov
and
imul
mov
nop
ljmp
lcall
or
popa
adc
into
xor
scas
xchg
outsl
pop
add
push
or
fidivrs
adc
in
mov
dec
addl
inc
mov
dec
sti
test
mov
pcmpeqd
pop
dec
loope
jl
fs
mov
out
and
jns
rclb
pop
or
in
es
xchg
sbb
js
inc
insl
popf
mov
xchg
ss
pop
dec
mov
adc
stos
subb
mov
or
shrl
sahf
or
xchg
sbb
sub
int3
insb
sbb
xchg
or
movsl
jp
inc
mov
push
lret
dec
in
lods
fwait
pop
lods
mov
movsl
rcrb
and
xchg
insb
push
int3
mov
fst
loopne
dec
in
dec
sub
loope
cli
daa
gs
aam
mov
and
bound
and
xor
adc
xor
cld
pop
ja
adc
daa
sub
pop
stos
mov
fsubrl
popa
fs
cmp
or
jle
xor
mov
dec
les
outsb
in
jle
mov
xchg
fcmovnb
xor
fimuls
xchg
aad
testl
flds
xor
aad
les
push
cmp
dec
jl
cmc
sarl
fsub
lret
stc
lds
or
in
add
test
mov
out
add
xchg
shrb
ja
or
or
out
mov
or
mov
lds
icebp
fiadds
sub
gs
pop
mov
movsb
push
movsl
mov
mov
mov
and
jae
imull
sbb
sub
xor
mov
mov
sub
mov
or
sahf
sbb
aaa
inc
adc
leave
xchg
test
ficoml
lcall
leave
ret
mov
sbb
imul
movsb
push
dec
or
test
dec
testb
or
xchg
add
mov
lcall
xor
lods
or
xchg
mov
push
xchg
ljmp
aad
imul
push
add
pushf
orl
xor
xlat
shlb
xchg
lcall
xchg
mov
js
repz
stos
dec
arpl
mov
pop
jns
in
xchg
mov
cwtl
out
sbb
fadd
js
insl
ja
aas
test
test
push
push
inc
stc
lods
add
scas
sti
jno
push
push
xor
mov
fwait
xor
mov
popa
loope
inc
inc
jbe
and
xor
dec
and
lret
iret
pop
jg
lret
jbe
mov
or
push
je
iret
ljmp
jge
add
xlat
add
inc
js
adc
f2xm1
fcmovnu
xchg
enter
test
movsb
xorb
jns
shll
mov
inc
fidivrl
or
xchg
inc
ds
pop
or
imul
add
adc
rcl
sahf
pop
shll
mov
clc
loop
or
in
out
or
mov
jmp
pushl
jmp
shll
mov
jbe
dec
int
jns
or
aam
mov
jne
pop
mov
xor
and
or
sbb
push
add
int3
icebp
scas
mov
fsubs
xlat
gs
shrl
xchg
inc
sub
in
and
add
push
ret
sbb
ja
call
vmovlps
test
popf
push
repnz
dec
stc
shll
inc
xchg
mov
mov
adc
loope
popa
je
xchg
pop
jp
sub
jg
jle
stos
test
enter
ss
sbb
cmc
mov
shlb
or
push
fwait
dec
rep
jecxz
inc
lcall
lods
mov
or
out
pushf
dec
scas
push
cltd
sbb
add
aas
mov
test
adc
dec
adc
pushf
out
fldl
mov
leave
bound
fmulp
hlt
jecxz
push
popf
cmpsl
in
or
je
adc
popa
xor
jp
arpl
inc
sbb
push
fwait
and
gs
sub
mov
dec
dec
xor
mov
jns,pn
cmp
add
jmp
push
or
lods
out
pop
xchg
xor
mov
xchg
loope
hlt
imul
jecxz
adc
pop
push
mov
mov
enter
mov
in
cmpsb
pusha
ja
xor
ljmp
cmp
out
notl
sub
push
mov
dec
and
or
cmp
or
daa
lods
and
inc
jecxz
sahf
ja
cs
jge
sub
fdivs
sbb
shl
jmp
cltd
nop
jno
or
push
push
mov
pushf
ss
inc
cld
push
int3
data16
xchg
or
sbb
insb
jl
dec
out
imulb
pushf
ss
inc
cld
push
int3
data16
xchg
or
sbb
insb
jl
dec
out
imulb
pushf
ss
inc
std
dec
data16
pop
cmp
or
sbb
dec
pop
imulb
pushf
aaa
in
inc
cld
push
dec
out
jbe
jns
cmp
cmpsb
sbb
sbb
sub
icebp
inc
shll
adc
adc
inc
icebp
push
loope
xchg
xor
loope
icebp
inc
shll
mov
xor
roll
loope
std
add
clc
push
call
popa
mov
xor
loop
subl
and
pop
pop
filds
mov
sahf
or
sbb
add
mov
mov
aam
xchg
fnstcw
and
pusha
add
leave
mov
adc
sub
movsl
pop
ds
xchg
and
mov
lock
push
or
bound
xor
je
xchg
mov
test
addl
adc
or
ss
mov
add
nop
fucomip
jo,pn
je
scas
add
xchg
xor
mov
jl
dec
and
in
pop
cltd
test
add
mov
inc
push
mov
cmp
aam
int3
xchg
and
mov
jb
cltd
fs
sar
cmp
add
fs
add
call
popa
mov
mov
and
imul
cmp
adc
lea
add
xlat
push
popa
test
shlb
xor
in
enter
xor
and
adc
popa
int
mov
sbbl
mov
and
pop
xorb
into
test
mov
add
shll
inc
icebp
push
loope
xchg
xor
loope
icebp
inc
shll
mov
xor
roll
loope
xchg
xor
loope
fisubrs
jle
mov
out
cmpl
pop
lods
mov
test
dec
add
jg
lea
rcrb
adc
push
rcrb
loopne
jp
ret
test
repz
stos
or
jl
mov
ljmp
adc
jmp
sub
xchg
add
pop
dec
mov
lods
xchg
stos
push
ja
je
push
fs
cs
das
inc
add
add
fldenv
dec
xchg
sbb
pop
xor
jne
sub
pop
sbb
out
mov
push
cmpsb
or
mov
ja
call
fists
dec
or
jae
test
mov
dec
push
cs
jle
dec
mov
cmpsb
pushf
push
jnp
add
adc
pop
adc
cmpsb
cmp
mov
out
and
insb
data16
gs
mov
mov
enter
push
daa
pop
es
push
stos
mov
aam
jbe
fidivs
insb
fldt
scas
repnz
movb
adc
mov
call
sub
cmp
iret
or
cmc
into
cld
and
jo
push
sti
rolb
xor
mov
cmp
sub
bound
mov
push
xchg
add
fwait
jg
stc
inc
mov
rcr
cmp
xchg
loope
sbb
cwtl
jle
pop
adc
or
das
in
clc
dec
jo
push
fidivs
shr
add
rorb
xchg
in
jg
cmp
dec
push
push
sub
xor
data16
mov
sub
aad
inc
lock
add
and
aam
sbb
in
dec
imul
inc
divl
sub
nop
sub
sbb
test
pusha
in
js
addr16
cmpsl
and
sti
fsubrp
cmpsb
loopne
pop
scas
test
cmp
adc
xor
sbb
bound
xchg
and
mov
pop
cmp
jmp
mov
pop
add
inc
and
ret
sbb
or
adc
jb
sahf
roll
sub
in
out
andl
xchg
xor
int3
insb
xor
sbb
test
das
xchg
sbb
ret
outsl
xchg
fistpll
mov
cmp
pop
pushf
std
mov
out
mov
jecxz
inc
sbb
pop
jge
mov
sbb
mov
dec
iret
test
lret
jge
mov
insl
mov
fldt
or
test
cli
sub
xchg
out
or
mov
xorb
imull
cltd
push
and
rclb
inc
adc
mov
loopne
xlat
pop
stos
cmp
cmp
inc
mov
bound
sub
shl
mov
sub
test
push
push
dec
cmpsb
mov
dec
xor
in
ret
cmpsl
ds
lea
pop
add
push
int3
push
jns
loop
iret
sub
mov
call
insl
aaa
orb
jae
lods
testb
cmpsl
add
in
sub
sbb
outsb
xor
data16
adcl
out
xchg
fadd
inc
jmp
jp
mov
cmp
push
loopne
push
or
cmc
cmp
popf
jmp
mov
addr16
push
dec
lahf
movsb
pop
sbb
jge
test
push
pop
sarb
bnd
ds
fs
jl
test
lock
ret
dec
sbb
add
in
dec
filds
pop
sbb
flds
mov
loop
sarb
in
inc
push
scas
push
out
fidivrs
imul
mov
mov
mov
ljmp
cmp
sahf
fcoms
inc
xchg
xlat
xchg
mov
inc
xchg
fimull
xchg
mov
or
mov
subl
idivl
loope
sti
xor
inc
and
xchg
cmp
sbb
loopne
loop
jg
mov
mov
lret
filds
sub
out
sub
add
cmp
mov
and
pop
cmp
mov
movsl
test
imul
pop
cmp
popf
ss
shl
jg
fwait
mov
loope
cli
enter
or
loopne
int3
adc
arpl
push
dec
les
inc
mov
ljmp
stos
xchg
sbb
and
mov
sub
pop
mov
inc
jp
mov
cs
xchg
outsl
jbe
clc
sbb
ret
xor
insb
sbb
and
call
jg
pop
fcomps
dec
in
outsb
push
movnti
dec
insl
ja
lock
dec
sub
adc
lea
mov
xor
outsl
std
out
insl
stos
jnp
mov
cmp
adc
jge
popa
stc
and
or
mov
sbbb
adc
fwait
mov
lods
cmp
out
fcmovbe
pop
movsl
mov
popf
xchg
pop
mov
mov
out
rolb
dec
sub
mov
mov
call
push
mov
pop
cwtl
push
mov
fsubl
push
mov
xorb
sbb
sahf
push
in
mov
mov
fs
subl
sub
jl
xor
fdivr
push
call
enter
push
pop
popa
shlb
test
mov
fs
mov
push
bound
repnz
sbb
in
icebp
out
rorb
sahf
jle
cli
aaa
adc
or
test
fbstp
or
ret
inc
sub
mov
pop
aad
cmpsb
in
cltd
mov
jo
testb
inc
ds
scas
sbb
mov
xor
dec
cmc
aad
es
jnp
aas
add
aam
rorb
push
scas
cmpsl
xor
loope
pop
jnp
mov
jnp
sbb
mov
imul
loope
and
icebp
lret
adc
inc
in
adc
mov
aas
lock
cmp
push
in
incb
jl
ffree
out
sbb
insb
dec
data16
add
call
mov
sub
jle
inc
hlt
sbb
mov
jl
bound
dec
adc
lahf
test
sbb
loop
adc
daa
call
push
inc
jp
mov
push
or
mov
jg
cmpsl
xorb
mov
pop
push
xor
and
cmp
rcrl
cs
decl
jmp
dec
sbb
imul
dec
pop
mov
fstps
xor
fmul
ret
mov
repnz
mov
pop
xchg
repz
fucomi
cmc
pop
into
mov
mov
inc
xchg
lods
clc
mov
or
dec
test
repz
xchg
push
add
mov
daa
and
mov
adc
fmul
inc
add
xor
push
mov
outsl
shr
add
or
aas
inc
sub
sbb
inc
add
fwait
pop
inc
js
mov
cli
xchg
pop
movsl
cs
add
fidivrl
imul
loop
insl
push
push
ret
push
movsl
ljmp
fnstenv
test
jne
hlt
test
jecxz
js
xor
add
stc
inc
jl
add
inc
mov
adc
pop
mov
or
mov
lds
inc
mov
ds
jle
sub
roll
cmp
hlt
int3
test
in
inc
in
aaa
and
jge
pop
int3
xor
sub
or
and
jbe
dec
mov
push
outsl
out
and
mov
lcall
jg
lods
movsl
pusha
sbb
add
adc
inc
ja
in
icebp
adc
gs
dec
int3
sbb
aam
and
cli
jge
in
add
jmp
xchg
push
pop
stc
mov
adc
aas
sar
or
data16
sbb
aaa
pusha
loop
std
inc
sub
or
inc
iret
sbb
jg
or
ja
ja
xor
in
loopw
imul
add
int3
push
bound
leave
and
ret
inc
xor
aam
xchg
and
adc
mov
ret
sbb
and
jne
or
movsb
cs
or
rcl
cmp
rol
clc
pop
dec
inc
ds
or
mov
ret
xor
sbb
addb
xor
add
adc
push
xor
leave
adc
push
dec
adc
leave
add
add
add
in
sti
sti
mov
push
xchg
and
push
add
cmc
xor
mov
inc
sbb
cmpsl
lods
lock
mov
jnp
in
sub
sarb
nop
cld
stos
in
mov
pop
aam
xor
pop
cmp
mov
ret
push
sbbl
push
mov
js
xor
int
stos
lods
jecxz
insl
orb
jmp
stc
xor
xchg
xor
gs
sbb
jge
clc
enter
imul
arpl
xchg
loopne
mov
cmp
lcall
mov
xor
outsb
add
xor
inc
pushl
cld
adc
sahf
insl
test
sbb
lock
fsubl
loope
mov
xor
mov
pop
xor
fwait
leave
jb
ror
xchg
push
es
les
xchg
fs
stos
bound
daa
mov
popw
stos
insl
push
sub
rorb
xchg
ficoms
dec
cmc
mov
cld
jmp
test
mov
call
adc
mov
nop
lret
arpl
roll
test
dec
adc
dec
add
lret
dec
mov
sbbb
pop
adc
jmp
fsubrl
push
stos
pop
or
gs
lea
sub
jge
adc
push
xchg
inc
addb
pop
lahf
add
ss
arpl
jg
shlb
mov
push
inc
push
out
mov
bound
lret
iret
fcompl
or
sbb
sbb
bnd
inc
pushf
push
cld
in
sub
arpl
test
jg
lcall
sbb
hlt
sar
sbb
cmp
outsl
sbb
lahf
push
xchg
bound
inc
sub
ss
push
dec
rcrl
es
lock
std
add
mov
push
repz
fwait
test
aaa
sti
adc
int3
insl
ss
xchg
cmp
inc
es
inc
adc
enter
ss
stos
mov
push
test
mov
int3
test
imul
mov
cmp
dec
test
ss
sbb
dec
shl
inc
cwtl
mov
push
add
inc
adc
in
push
mov
cmp
push
hlt
push
imul
fimuls
jns
lret
adc
pushf
mov
cmp
sub
arpl
xchg
adc
and
out
adc
addl
pop
stos
pop
sbb
sti
rcrb
pop
aas
xchg
push
lods
into
xchg
pushfw
out
xor
rcrl
lret
aas
shlb
lds
xor
and
cmc
mov
cs
les
stos
sub
insb
aad
dec
xor
repnz
mov
aas
pop
pop
stc
dec
cltd
js
in
shll
movsb
cmpsl
pop
pop
mov
je
and
jno
pop
adc
adcl
dec
mov
dec
and
outsb
mov
and
jmp
fsubl
pop
jae,pn
lcall
mov
int
push
cmpl
ret
sub
sbb
pushf
cwtl
fs
lret
fistl
mov
pop
inc
lcall
in
mov
out
inc
jae
jmp
iret
roll
into
sub
ss
pop
and
addr16
stos
adc
xor
or
jmp
xchg
mul
mov
push
mov
pop
fstpt
mov
sub
lahf
lds
dec
outsb
cmp
popa
mov
pop
insl
pop
pop
rol
mov
iret
out
outsl
dec
fdivl
push
les
inc
test
stos
fdivrl
sbb
cmc
mov
je
imul
cmpsb
dec
leave
add
lahf
adc
mov
stos
lods
xchg
pop
sbb
enter
adc
pop
mov
jg
fcomps
jns
pop
ss
inc
xor
inc
mov
jnp
push
repz
mov
sbb
xchg
ficomps
scas
sarl
mov
dec
xlat
rolb
cmp
popa
addb
mov
cmpsl
lret
les
xlat
out
add
or
xchg
dec
mov
sbb
pop
push
insb
je
call
ficoml
push
lods
jmp
jae
adc
lods
jge
rorb
lods
lret
decb
fidivrs
loope
addb
outsb
cmp
test
aas
cmp
pop
icebp
mov
lods
add
pop
inc
pusha
fldcw
cli
jb
fldcw
pop
pop
fistpl
mov
xchg
nop
bound
popa
mov
addb
int3
inc
subl
popa
fsubs
ja
incb
adc
stc
push
cmp
sub
add
imul
out
test
ss
push
mov
xor
ffree
jmp
hlt
pop
sub
mov
xor
repnz
push
push
or
dec
sbb
outsl
mov
imul
das
pop
adc
jnp
outsb
scas
in
sbb
dec
into
xor
cmc
xchg
cmp
popl
cmp
into
out
js
arpl
jl
outsb
rorl
outsb
imul
popa
push
or
lock
lds
scas
fdivl
fs
testl
or
call
pop
pop
adc
push
jo
jecxz
adc
fs
shlb
in
pop
mov
imul
xchg
xchg
ret
dec
sbb
jg
push
mov
mov
mov
xor
das
fs
fldt
mov
into
fsts
adc
fbld
push
mov
xlat
in
jmp
cltd
cmpsb
jae
les
or
xchg
cmp
push
and
lret
stc
das
ja
sub
jo
mov
pop
data16
sub
mov
cmovne
jb
test
es
shr
jg
stos
stc
test
out
mov
idivb
jnp
std
cmpsl
dec
add
inc
mov
repnz
test
inc
std
lahf
add
pusha
xchg
rorl
push
push
loopne
imul
and
xor
addr16
dec
mov
in
mov
mov
push
decb
sub
dec
adc
lret
jl
lea
pushf
cltd
sub
mov
add
ja
in
lods
pop
inc
adc
cmp
loope
xchg
dec
mov
inc
cwtl
or
mov
addl
dec
adc
jg
xor
test
xchg
mov
pop
jmp
testb
popf
dec
sti
test
imul
jmp
adc
or
popf
insl
fldt
jns
pop
lea
mov
repnz
test
mov
push
push
mov
push
lock
icebp
sub
cltd
movsl
jbe
aaa
lahf
inc
js
adc
dec
dec
add
add
daa
cmp
cmpsb
cmp
movsl
mov
pop
cli
je
mov
fs
das
jp
jmp
sub
dec
cmp
ficoms
lods
repz
pop
and
jl
clc
xchg
push
pcmpeqb
lock
xor
inc
shll
movsb
jle
sbb
mov
sub
or
pusha
cmp
adc
and
adc
js
jne
popf
imul
push
frstor
rcrl
mov
lret
repnz
sub
cmp
mov
adc
pop
dec
call
aam
pop
stos
jo
dec
mov
mov
std
outsb
or
movsb
mov
and
repnz
cltd
mov
jl
and
mov
push
jne
mov
cli
adc
je
lock
aas
fs
or
xchg
idivl
dec
shlb
shrl
das
jbe
jnp
jbe
xchg
test
jb
shrb
stos
call
push
iret
fildll
test
negl
incl
add
inc
outsl
dec
sbb
mull
mov
inc
sarb
test
lahf
ljmp
arpl
les
imul
cmp
test
mov
dec
and
div
rolb
jp
xchg
ss
mov
lea
pop
adcl
enter
mov
popf
sarl
aas
mov
add
dec
mov
dec
or
mov
ror
orb
outsl
xchg
lds
ja
test
push
lods
das
xor
sub
aas
dec
jb
mov
imul
push
lea
dec
push
and
inc
daa
sbb
pop
dec
adc
mov
and
insl
smsw
dec
mov
jecxz
xchg
call
mov
cmc
add
adc
inc
pop
push
adc
loop
pushf
repz
ficoml
mov
mov
jne
scas
repz
jl
mov
push
test
dec
iret
mov
jno
jl
sbb
add
repnz
inc
outsb
or
or
stc
sahf
xor
loop
or
sbb
repnz
je
add
aam
jp
pop
leave
jae
mov
fiadds
push
ss
xlat
rolb
outsl
jbe
jmp
rcrl
shrl
stc
test
and
jbe
daa
rorl
mov
mov
fs
fcomp
fcomps
sbb
jle
sbb
int3
add
add
cmc
sub
mov
add
push
popf
loopne
ljmp
pushf
xchg
inc
fbld
dec
or
sahf
add
jae
sbb
inc
fs
subl
mov
or
iret
xor
cmpsb
pop
push
mov
jbe
jle
xchg
xor
jb
push
dec
xchg
add
std
cmp
fxch
mov
mov
cmc
xlat
ficoms
into
dec
testb
push
shlb
rcl
pop
addr16
mov
push
in
and
xchg
dec
and
or
push
ja
xor
add
imul
fcoml
pop
add
movsl
ja
cwtl
mov
add
fwait
daa
jae
xchg
pop
mov
push
shrb
mov
add
or
dec
and
mov
dec
jae
fstl
dec
pop
and
pop
adcl
pushl
fdivrl
dec
xor
cs
test
adc
push
sti
icebp
outsl
jmp
lods
in
jp
push
mov
pop
add
jge
ljmp
fidivrl
xor
inc
xor
fstpl
pop
jmp
stc
dec
fcomps
fstps
int
movsb
dec
xchg
mov
popf
cli
inc
mov
xor
push
cmp
ds
mov
mov
int3
jecxz
lods
cmc
cltd
cmp
push
push
cwtl
sbb
negb
shll
repnz
inc
jnp
orb
arpl
out
in
and
movsl
mov
mov
mov
jg
shlb
push
jae
sbb
push
mov
push
dec
push
xor
pop
add
loopne
popa
call
popa
mov
insl
imul
inc
mull
adc
inc
adc
inc
or
dec
sbb
mov
aam
sbb
ss
andl
pop
roll
mov
or
mov
pop
gs
mov
mov
inc
js
xor
fxch
cwtl
mov
aam
fisttpl
int3
mov
dec
inc
mov
fcmovnbe
mov
subb
sbb
push
mov
add
lock
in
test
xchg
ret
mov
cmp
incb
pop
roll
pop
inc
mov
es
in
ds
push
xor
repz
out
xor
movhps
mov
scas
cld
cli
out
mov
subl
add
push
test
and
mov
ret
mov
fnstenv
in
fsubrl
stos
das
sbb
cmp
stos
aaa
stos
mov
inc
cltd
int
nop
ret
and
cmpsb
aas
andb
stos
dec
sar
mov
leave
push
pop
lea
sub
pop
dec
sbb
std
and
pop
aad
ljmp
ja,pn
inc
cwtl
fwait
mov
mov
inc
call
mov
push
mov
xchg
repnz
out
rol
daa
push
test
ret
or
mov
enter
mov
mov
jb
loope
sbb
mov
dec
adc
pop
fiaddl
inc
push
lods
int
xchg
adc
test
cmp
xchg
push
ss
pop
cmp
hlt
out
cmpsl
insl
pop
sbb
mov
sub
inc
test
es
jo
mov
pushf
sbb
and
and
fyl2xp1
add
mov
fsubs
ja
fimuls
sbb
sahf
fcmovnbe
cmp
adc
jae
push
pop
add
add
mov
fdiv
cli
sbb
rclb
sahf
push
pop
mov
adc
pop
dec
and
test
pop
popa
ret
xor
ljmp
les
sarl
add
scas
or
scas
inc
test
jns
pushf
jmp
int
int
mov
push
arpl
push
adc
xor
cmp
fisttpl
jbe
and
mov
pop
loop
adc
pop
inc
fldcw
lock
pop
add
mov
stos
jmp
mov
inc
sub
xchg
mov
mov
ret
push
xchg
vshufps
movsl
imul
pop
int3
xor
add
mov
fwait
icebp
jb
cmp
cli
pop
inc
lret
jno
popa
mov
xor
roll
loope
xchg
xor
loope
icebp
inc
shll
mov
xor
roll
loope
xchg
xor
loope
icebp
inc
shll
mov
xor
roll
loope
xchg
xor
loope
repz
shlb
mov
xor
and
icebp
push
xchg
push
sbb
pop
pop
imul
dec
outsb
pop
adc
jle
pop
gs
sbb
push
into
icebp
dec
out
fistpl
fwait
scas
fwait
pop
imul
dec
outsb
pop
push
sub
cmp
or
jle
jmp
sti
mov
out
fistpl
mov
jnp
dec
outsb
pop
push
sub
cmp
or
sbb
jmp
fmuls
in
in
out
out
shr
daa
dec
or
xchg
push
aam
or
push
sbb
adc
ss
mov
into
xor
aad
repnz
mov
sub
loopne
jae
imul
mov
push
lret
lds
inc
popw
cmc
inc
rol
fcomp
jmp
cli
add
test
push
pop
xchg
push
outsb
push
sbb
dec
outsb
or
or
rolb
sti
ficoms
fiadds
or
out
mov
stos
cmp
mov
das
sbb
adc
out
out
xor
fistl
clc
mov
mov
cmc
mov
fs
mov
andl
and
mov
add
jnp
dec
outsb
pop
push
sub
cmp
or
sbb
jmp
sti
dec
out
fistpl
mov
add
or
sbb
inc
dec
pop
outsb
outsl
outsl
lahf
fwait
lret
cwtl
subb
stc
cli
pop
pop
cmp
add
cmp
bound
pop
cs
mov
into
fisubrl
aaa
sub
sub
outsl
and
sbb
cmp
or
sbb
jmp
sti
dec
out
fistpl
mov
jnp
dec
outsb
pop
push
sub
cmp
or
sbb
jmp
sti
dec
out
fistpl
mov
push
lds
pushf
fisubs
pushl
mov
aas
sarb
aaa
popa
adc
repnz
push
mov
hlt
adcb
addl
or
pop
js
rcl
lret
out
ret
in
xchg
aas
cli
sti
ss
jbe
xchg
out
and
out
pop
add
xchg
stos
and
icebp
pop
pop
dec
or
push
mov
push
sti
repz
or
jne
push
leave
cmp
adc
mov
adc
xor
ss
mov
xchg
xchg
or
movsb
xchg
out
inc
add
pop
pop
insl
or
push
mov
sbb
lcall
leave
xchg
rcrb
or
push
mov
das
mov
mov
jo
adc
dec
mov
and
sbb
mov
notl
mov
leave
jl
inc
ds
mov
cs
xor
push
rorl
ret
rcrb
pop
clc
int3
mov
nop
xchg
add
xchg
loopne
in
bound
nop
push
pop
cmp
add
push
dec
pop
or
popf
sti
mov
fnsave
mov
insb
push
gs
fistps
aaa
subl
pop
arpl
or
adc
mov
out
es
int
jmp
xchg
fwait
cld
dec
dec
pop
mov
xor
out
cwtl
mov
sub
pop
and
inc
inc
daa
push
cmpl
movsl
leave
add
xor
mov
rcll
repz
lock
push
stos
scas
movsl
jl
sub
cld
ja
and
lahf
dec
push
mov
and
sahf
dec
or
addl
mov
jnp
mov
and
arpl
je
loope
shl
adc
addb
sub
leave
std
stos
adc
test
out
aaa
push
ljmp
addb
roll
mov
add
mov
xor
into
cmpsb
fidivs
into
jl
js
cmp
inc
push
and
int
int
sbb
push
xchg
cmp
push
sbb
pushf
in
jge
dec
add
xchg
or
push
mov
dec
lods
sti
hlt
sahf
mov
cmp
mov
sub
and
addb
in
lods
jns
mov
mov
add
mov
dec
stc
imul
push
loopne
mov
adc
cmc
push
jp
mov
fisttpl
xchg
ret
mov
daa
xchg
and
in
or
inc
es
and
mov
pop
or
sub
cmpsb
popf
pop
stc
rol
jo
std
loopne
out
out
jae
aas
jl
cmp
std
dec
stc
lock
enter
sub
jp
jmp
cmp
mov
imul
sbb
test
loopne
pop
mov
imull
inc
test
mov
push
mov
adc
aaa
stc
mov
push
aam
orb
inc
sbb
in
adc
fs
push
idiv
cli
and
fcom
jmp
add
and
push
aam
lcall
inc
sub
or
mov
sbb
ret
mov
aas
in
lea
xchg
mov
push
sub
and
cs
or
daa
mov
mov
mov
and
aaa
mov
sbb
imul
hlt
mov
xor
cmp
cs
dec
arpl
mov
cmpsb
dec
cltd
repz
cmp
jnp
ljmp
scas
sbb
sub
mov
or
xor
xchg
stos
jmp
arpl
fildl
stc
aaa
cmpl
inc
hlt
jnp
mov
inc
mov
fiadds
lea
or
jecxz
in
xor
sbb
and
ljmp
popa
scas
mov
pushf
cmp
xor
cmp
rolb
mov
imul
dec
sbb
adc
jb
cwtl
and
hlt
xor
shr
inc
outsl
out
or
in
gs
mov
xchg
xchg
ljmp
pop
psrld
addr16
mov
enter
imul
push
jns
dec
and
movsl
adc
mov
xor
orb
cmpsl
jp
ljmp
rorl
push
fimuls
and
xor
jge
daa
fdivrs
in
shl
add
scas
cmp
pop
and
xor
sbb
cmp
filds
dec
inc
pop
bound
ror
outsl
jg
shr
aas
mov
rclb
cmp
test
imul
mov
push
les
pop
inc
je
pop
jno
mov
rcrb
sbb
fmull
pop
push
out
shr
popa
mov
rcrb
push
mov
lret
in
mov
push
imul
pop
scas
cmpsb
es
sub
sub
jo
fstl
rolb
aam
cld
mov
cmp
icebp
pop
lcall
shlb
lock
pop
sbb
je
jle
push
mov
mov
pop
dec
andl
clc
lods
lods
aaa
xor
mov
mov
and
aas
sahf
loop
cwtl
mov
test
sbb
in
int3
xchg
movsl
mov
add
dec
push
call
xchg
outsl
fndisi(8087
outsl
stos
inc
mov
jl
lcall
test
ja
mov
jbe
outsb
int
aad
shl
pop
pop
rol
orl
sub
mov
add
lods
sub
mov
mov
out
sbb
sbb
cld
mov
sub
test
and
fcomi
iret
dec
addr16
outsb
jmp
xchg
std
inc
dec
hlt
mov
jmp
or
sti
addr16
pop
ja
das
popf
push
pop
imul
mov
jmp
imul
les
push
cli
or
push
testb
add
cmp
xor
call
aaa
pop
mov
lahf
push
dec
xor
xchg
adc
dec
sbb
loope
cmp
out
lods
sbb
cmp
mov
in
add
filds
pop
jno
ficoml
cld
fimuls
add
or
addr16
or
iret
cmp
andl
cmp
call
jae
adc
mov
insb
pop
sbb
or
lahf
ljmp
loope
mov
push
mov
mov
add
outsb
and
idiv
adc
xchg
rcrb
jnp
shll
icebp
rorl
adc
bound
push
xchg
add
inc
sahf
inc
sub
mov
mov
inc
mov
or
xlat
pop
and
sub
mov
insb
in
mov
fwait
adc
fidivl
push
movsb
sbb
add
iret
pop
xchg
sub
out
add
adc
ret
jle
clc
mov
mov
mov
sbb
pop
rorl
int3
push
push
pop
outsl
inc
cmp
dec
xchg
js
pop
popf
in
cs
push
sbb
lds
adc
fsin
xchg
dec
pusha
nop
bsf
stc
mov
mov
lahf
es
inc
cs
dec
jnp
add
jno
cmp
psubsb
inc
xchg
sbb
lods
fstpt
sub
xor
dec
roll
push
je
rcl
imul
xor
call
xchg
aas
fcoms
jl
inc
ficompl
in
pop
sbb
int
iret
push
pcmpeqw
sbb
jb
mov
out
movb
outsl
push
xchg
jmp
push
pop
sahf
loop
negl
dec
inc
adc
mov
dec
sub
mov
fdivrl
addr16
push
jnp
ret
es
fwait
out
push
rclb
insl
fdivrl
lods
sub
adc
loop
movd
xor
sub
out
lock
dec
jne,pn
shlb
dec
cld
cld
dec
movsb
cld
xchg
jl
jnp
jle
xchg
jmp
dec
nop
aas
add
test
call
mov
fstps
fldenv
mov
ljmp
das
sbb
pop
xchg
popf
mov
sub
shl
insl
inc
fs
or
xlat
sbb
push
int
scas
xor
outsl
dec
test
je
les
es
mov
scas
addr16
lret
sbb
jno
jg
mov
or
outsl
out
arpl
dec
fldt
jns
and
sahf
jmp
push
inc
gs
out
push
xlat
inc
jnp
or
dec
lock
xchg
popf
mov
sti
es
mov
adc
mov
out
imul
sahf
mov
mov
dec
rcrb
or
pop
or
pusha
push
jmp
push
rcrb
popf
int
sub
xchg
jl
jmp
pop
clc
cmp
xor
shlb
addb
inc
jae
push
stos
mov
in
call
adc
stos
sub
adcl
push
popa
jmp
test
sarl
shlb
pop
sbb
pop
fisttps
sti
sub
addl
data16
andl
nop
or
or
mov
in
loop
lock
andb
add
push
or
pop
adc
cli
icebp
je
inc
fcos
mov
push
popf
jns
fisubs
arpl
mov
xor
fwait
in
dec
pop
data16
lock
test
sub
add
shrb
xor
jbe
cmp
pop
pop
jb
adc
push
push
jo
pop
out
bound
shrb
mov
xchg
cmp
mov
pop
in
out
pushf
xchg
dec
fsubrl
xchg
sub
dec
hlt
dec
pop
stc
or
mov
add
pop
out
xchg
sahf
xor
sub
inc
and
in
and
shrb
dec
cmp
cmp
loopne
adcl
jne
fnstsw
shrl
aad
je
in
fdivrs
jge
popf
pop
dec
repnz
cwtl
jbe
push
inc
jge
xchg
jecxz
pusha
cmp
dec
push
js
jne
add
bound
imul
jne
pop
mov
fistpll
mov
sarl
movsl
inc
mov
testl
fsts
mov
out
shrb
sbb
push
or
mov
and
popf
push
mov
test
jns
pop
insb
push
xor
xchg
sbb
xchg
jg
mov
ret
push
xchg
cmp
jo
mov
ret
insl
inc
xlat
les
jbe
add
sbb
ret
and
pop
sbb
ds
or
mov
std
push
leave
or
in
sub
inc
mov
xlat
dec
mov
data16
in
and
enter
int
pop
inc
test
add
add
add
jne
fists
test
mov
sti
stos
dec
cld
bound
invlpg
jae
lret
add
movb
add
repz
in
jb
and
icebp
and
mov
add
jo
mov
jbe
pusha
movsb
call
mov
enter
dec
out
divb
mov
xchg
push
xchg
mov
jno
add
pop
dec
mov
es
shll
pop
push
mov
loopne
stos
cmpl
cltd
aam
mov
xor
cmp
pop
jge
xchg
movsl
lock
in
mov
sti
mov
or
pop
ret
cltd
dec
push
fcoms
mov
push
jbe
popl
jae
insb
push
popa
insb
jg
shll
or
in
xor
cs
stos
out
rorb
cmp
test
outsl
sbb
jno
test
mov
cmpsb
dec
sub
addr16
xor
xchg
and
push
cmp
and
push
ret
das
iret
cmpl
push
fsubp
mov
sub
fldcw
test
push
add
ja
sbb
sahf
cmp
loopne
push
xchg
add
mov
adc
lret
int
mov
push
pop
xor
mov
addr16
test
outsl
or
rorl
sahf
push
sbb
mov
call
sbb
or
jmp
leave
insl
lods
mov
in
mov
lahf
dec
lock
add
lock
push
push
pop
mov
and
ljmp
push
js
lret
xor
cmpsl
jmp
test
out
dec
mov
out
lret
mov
fldenv
in
mov
jno
test
push
mov
push
fcoms
inc
jne
int3
inc
iret
movsb
cli
jno
jecxz
xlat
das
and
in
mov
repnz
or
push
lret
sbb
dec
out
daa
pop
push
lret
inc
das
mov
xchg
int
popf
lods
js
movsl
in
pop
adc
cmp
aad
xchg
or
lods
and
leave
mov
xlat
popf
lods
push
mov
popf
lret
xor
sub
push
xor
mov
fwait
shll
add
push
add
clc
cltd
call
jp
sub
loope
xchg
mov
jo
sub
sub
sbb
and
add
add
pushl
rcrb
push
fadd
into
jmp
push
dec
mov
jl
shll
push
mov
and
lret
dec
push
mov
aad
xrelease
xchg
fld
in
mov
mov
dec
movsb
sbb
jge
mov
pop
ljmp
fdivl
pop
orl
loopne
inc
sub
inc
daa
jle
je
cmc
pop
sub
adc
add
xor
or
lahf
lods
shrb
mov
mov
pop
into
or
and
test
or
ret
pop
sub
dec
push
ret
adc
sub
insb
jno
sbb
into
mov
lahf
dec
lods
and
xlat
out
mov
mov
movsl
inc
adc
add
inc
adc
or
into
stos
cmpsb
leave
xchg
scas
insl
repz
xor
in
insb
loop
mov
mov
xor
sbb
int3
repnz
add
push
stos
out
into
rcrb
cmp
fldenv
fistps
jno
sarb
stos
mov
and
mov
test
sbb
icebp
pop
jo
mov
mov
testb
cs
outsb
or
add
mov
fsubl
not
pop
jnp
xchg
movsb
dec
or
sub
xor
stos
adc
fidivl
in
or
ret
sbb
loopne
das
bound
mov
push
popf
mov
adc
pop
mov
in
mov
out
adc
icebp
js
or
mov
fldcw
lods
push
insl
fwait
lock
test
fnstcw
mov
fstp
out
loope
in
dec
in
stos
inc
ja
xor
repz
cmp
push
lret
enter
pusha
vpmacssdd
int
xchg
bound
mov
or
adc
push
test
add
rcr
pushf
arpl
and
fs
pop
pop
jp
sub
dec
sti
fistps
mov
test
dec
lahf
sub
xor
movsb
and
push
xchg
push
sub
movsb
jns
dec
adc
int3
je
lcall
adc
icebp
pop
or
and
and
dec
xor
bound
inc
iret
icebp
cltd
jno
lock
pusha
push
pushf
cmpsb
loop
pop
xor
arpl
adc
mov
pop
enter
cmp
ds
jge
lret
sahf
mov
add
inc
mov
out
xor
daa
fstps
cmpsl
repnz
addl
cmp
mov
or
and
sub
call
popa
ljmp
mov
dec
cmp
xorl
sbb
ret
shr
lods
pop
int
cli
in
dec
fmul
test
iret
test
mov
mov
cmp
int
sbb
jmp
dec
sahf
xchg
push
inc
sub
clc
call
lods
fldenv
stc
scas
sti
test
fdivl
jg
pop
subl
loopne
test
icebp
sbb
repz
lret
fs
fldenv
fists
iret
mov
xchg
cld
jno
arpl
stos
mov
adc
jne
jle
insb
dec
jno
or
imul
fwait
sub
nop
push
xor
sahf
call
lods
adc
aaa
jmp
sbb
cli
cwtl
push
sbb
loop
lahf
shll
push
cmp
in
push
add
sbb
mov
dec
loopne
fsubs
call
int
pushf
ffree
mov
pop
lods
inc
sbb
fwait
lods
addr16
fstps
xchg
je
cmc
jl
adc
cmp
cld
fidivs
popa
dec
jae
sahf
pop
loop
icebp
mov
dec
cmp
into
mov
sar
test
leave
jmp
cltd
lret
jne
mov
mov
aad
cmpl
mov
lock
scas
and
inc
mov
add
clc
pavgb
repnz
loopne
push
pop
add
mov
shll
mov
mov
roll
cmpsb
js
fldt
cmc
jecxz
test
xor
or
sbb
call
push
xchg
xchg
std
getsec
pop
ret
mov
inc
aam
fdivl
lret
sti
push
mov
sub
idivb
mov
movl
je
push
sub
xor
cli
mov
stc
fs
xlat
sub
addb
imul
mov
mov
mov
push
ret
push
xor
adc
push
and
lods
sbb
loope
xchg
in
inc
xlat
into
sahf
and
imul
cmp
test
popa
loopne
mov
mov
inc
jne
sbbl
dec
into
or
xlat
stos
push
cs
hlt
shr
jae
ret
or
xlat
test
add
lret
sbb
int
add
sub
outsb
sbb
adc
or
ficompl
xchg
mov
fldl
jecxz
stos
ja
push
pop
or
bound
aaa
mov
ds
adc
mov
mov
xchg
icebp
popa
mov
mov
aad
pop
add
aam
xchg
jp
mov
and
inc
pop
mov
xlat
or
out
mov
mov
shrl
pop
fs
std
lds
jmp
pop
ja
insl
jecxz
lods
mov
addr16
fucomip
inc
and
mov
xor
loope
push
mov
dec
lea
repnz
cmp
test
mov
xchg
sarl
and
or
jp
mov
ret
push
xchg
inc
xor
push
pop
js
repnz
push
mov
loope
inc
jmp
jbe
cs
xor
repz
hlt
ret
mov
fmul
push
jecxz
inc
jae
ret
sub
dec
lcall
fcmovnb
ja
sbb
lret
bound
jg
adc
movsl
jb
out
jle
mov
aad
sar
je
sbb
lods
inc
sbb
push
jle
jge
mov
cltd
push
daa
es
aam
outsl
mov
adc
and
push
push
push
movsb
pop
xchg
pop
ljmp
push
nop
mov
nop
or
filds
mov
push
scas
inc
call
sub
jbe
or
scas
stos
aaa
adc
gs
dec
sbb
cwtl
mov
cmpsl
sub
cmp
xchg
mov
jns
inc
mov
into
dec
jno
fisubrl
stos
add
popa
and
sbb
cmpsb
addr16
ss
pop
jbe
in
push
bound
xor
or
jnp
xchg
and
scas
ret
xor
mov
dec
insl
jno
and
jmp
sbb
ret
je
shll
inc
mov
adc
std
out
xchg
push
xchg
dec
mov
or
fsqrt
cmp
aas
mov
adcb
cmp
fs
arpl
mov
aam
jmp
pop
sub
outsl
xor
rcr
popa
or
repnz
minps
loopne
loop
or
stos
mov
adc
cmpsb
pop
add
pushl
pop
cli
jne
lret
shrl
in
xor
divb
inc
lods
outsb
xchg
lods
pop
push
imul
bound
lock
or
gs
lock
xlat
push
iret
push
pusha
mov
loopne
aam
nop
pop
cld
out
lret
mov
subl
pop
iret
mov
std
sbb
pop
dec
jne
jb
mov
movsb
mov
mov
jns
or
das
mov
mov
mov
lret
aad
adc
lods
and
mov
inc
lcall
stc
inc
or
loope
adc
push
imul
iret
js
cmp
mov
and
inc
ss
mov
or
int
and
nop
lea
cmpl
pop
mov
lahf
jne
sub
data16
sahf
mov
cltd
jnp
iret
and
lcall
jl
mov
aaa
push
pop
push
fdivs
call
in
push
dec
test
add
stc
mov
cli
out
jecxz,pn
out
push
test
shll
xchg
xchg
cmc
int3
scas
fisttps
je
in
dec
outsl
stc
outsb
ja
dec
xchg
fs
or
int3
pop
sti
out
xchg
scas
psubw
mov
popf
or
pusha
aaa
add
out
fstpt
push
icebp
imul
mov
addr16
xchg
stos
dec
aaa
in
push
and
and
jle
out
cmp
mov
andl
std
xchg
scas
mov
dec
addr16
sbb
pop
ret
out
push
jmp
add
lret
xchg
and
sbb
shl
mov
push
pop
cmp
pop
jl
and
mov
jne
jno
jnp
dec
outsb
pop
push
sub
cmp
or
sbb
jmp
sti
dec
out
fistpl
mov
jnp
dec
outsb
pop
push
sub
cmp
or
sbb
jmp
sti
dec
out
fistpl
mov
jnp
dec
outsb
pop
push
sub
cmp
or
sbb
jmp
sti
dec
out
fistpl
mov
jnp
dec
outsb
pop
push
sub
cmp
or
fcmovnu
jmp
push
push
lret
out
lods
jmp
je
fs
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
push
jns
dec
es
sub
cmp
sub
jbe
xchg
lcall
mov
testb
pop
sub
push
or
jbe
test
xchg
test
fnstenv
mov
cltd
not
pop
mov
fstpt
subl
pop
jle
insb
lea
lods
mov
xchg
mov
pop
push
xor
mov
sar
xor
xchg
mov
mov
lods
test
push
leave
scas
fmul
pop
int
test
in
xchg
pop
push
lea
mov
mov
inc
in
mov
mov
cmp
cmp
dec
push
loopne
js
add
sub
fcompl
fnstenv
mov
sbb
push
lods
es
cmp
call
inc
daa
dec
push
xchg
mov
pushf
xchg
je,pt
imul
mov
xorb
ja
or
leave
jecxz
mov
scas
mov
or
cmpsl
std
jl
mov
pop
sub
fiaddl
sub
mov
xor
das
add
pop
sub
inc
inc
push
or
outsl
das
sahf
arpl
loope
mov
mov
arpl
push
cmp
adc
jge
sbb
jmp
repz
test
out
fwait
and
sbb
cmp
xor
pop
fs
add
ljmp
cmc
shlb
xchg
add
inc
or
sub
push
or
jbe
xchg
xchg
leave
cmpsb
fnstenv
mov
cltd
imulb
jns
dec
es
sub
push
or
jbe
xchg
xchg
leave
cmpsb
fnstenv
mov
cltd
imulb
fists
out
shll
fidivrl
adc
std
stos
sub
mov
push
lret
aas
cli
inc
cli
mov
adcb
lock
stos
push
inc
sbbb
test
inc
iret
dec
pop
or
cld
lods
mov
adc
out
shll
xchg
stc
and
xchg
jae
or
and
jo
fmuls
enter
sub
cmp
xor
push
nop
aaa
and
pop
fildl
push
jp
fdivs
icebp
jnp
fst
out
mov
push
lds
mov
mov
cmp
aas
mov
ja
xor
adc
addr16
cltd
cmp
in
mov
mov
sub
or
daa
jns
add
ja
icebp
in
mov
shll
add
xchg
pop
mov
and
mov
jecxz
mov
outsl
cmc
mov
cmp
pop
mov
mov
lds
mov
pushf
and
lret
int3
das
in
loope
loope
jp
xchg
arpl
lods
cwtl
out
push
jge
jae
mov
stos
pop
arpl
sbb
mov
push
test
mov
test
mov
push
fwait
daa
ret
sub
lds
js
inc
push
push
or
jg
movsl
movsl
dec
popf
pusha
inc
cmp
jae
jg
aaa
adc
addr16
imul
hlt
xor
mov
cmc
ss
jmp
cmp
call
pop
and
push
xchg
and
shl
mov
mov
mov
and
add
test
inc
les
sbb
nop
sbb
insb
inc
cli
mov
imul
mov
js
push
push
into
fiadds
loopne
stos
repnz
movsb
loope
sbb
lods
xorl
jg
mov
addb
mov
mov
pop
xchg
fistpll
mov
push
inc
inc
sbb
fmull
hlt
xchg
push
inc
mov
cwtl
lods
int3
xor
xchg
clc
pop
ret
insl
int3
cmp
inc
xor
dec
sub
jnp
inc
cwtl
pushf
push
xor
int3
mov
mov
stc
test
jne
iret
loope
addr16
mov
sbb
sbb
jmp
mov
xchg
pop
shll
lret
sub
cmp
jle
les
xchg
and
inc
add
movsl
inc
add
imul
mov
xchg
dec
dec
jmp
cmp
add
stos
leave
push
dec
adc
adc
bound
fists
pop
loopne
loope,pn
popa
ret
xchg
lahf
lds
mov
mov
adc
aas
pop
push
push
lret
in
insb
out
imul
dec
mov
pop
sbb
enter
popa
iret
call
jnp
in
inc
mov
sub
add
xchg
pop
cmp
pop
sahf
jl
xor
or
test
leave
dec
or
inc
xchg
mov
int
and
subb
xchg
push
mov
and
add
jbe
push
nop
movsb
clc
loopne
stos
test
ret
mov
and
bound
and
out
bound
mov
aaa
pop
addl
pop
pop
push
stc
xchg
cmc
xor
in
pop
ja
pop
adc
pop
hlt
arpl
pop
inc
mov
mov
pop
pop
mov
dec
or
mov
lods
lgs
scas
mov
hlt
or
push
mov
or
or
scas
stos
das
and
movsb
out
mov
xor
repnz
nop
bnd
loopne
inc
icebp
cmp
xchg
inc
mov
aad
lock
cmp
sub
xor
scas
push
enter
test
and
lds
pop
push
insb
cmp
and
pop
push
or
and
adc
pop
nop
cmc
mov
cmp
pop
and
or
inc
icebp
loope
mov
std
ss
fistpl
push
and
insb
data16
loopne
scas
add
push
pop
stos
aaa
xchg
sub
dec
inc
xor
lock
fildll
bound
xlat
out
ret
mov
rcll
das
and
jbe
push
pop
cmp
pop
iret
cmp
leave
cld
orl
mov
pop
test
and
cwtl
out
idivl
test
lret
test
xchg
clc
cmpsb
jae
and
and
xchg
shrl
stos
mov
icebp
and
outsb
sahf
add
mov
outsb
loope
and
or
sub
ret
cmp
fiadds
lahf
icebp
nop
adc
xor
mov
repz
les
inc
rclb
gs
adc
pop
je
or
lcall
das
xchg
aaa
mov
mov
or
dec
stc
repz
nop
sbb
cld
and
mov
jl
dec
pop
out
scas
out
out
imul
notb
test
cmpsl
dec
xor
icebp
test
adc
in
out
lods
push
fidivl
movsl
icebp
setns
aas
jl
inc
sub
jns
jp
std
cmp
test
sarl
push
dec
in
and
mov
ret
divl
cmp
pop
stos
aas
shll
adcl
loopne
lea
dec
sti
cwtl
into
lcall
sub
mov
lock
mov
push
fdivrs
xchg
test
in
adc
mov
movsb
sti
ss
push
pop
ret
outsl
js
pop
jae
xchg
push
ret
pop
inc
je
mov
gs
sbb
jb
add
push
mov
mulb
inc
fwait
xchg
dec
dec
in
adc
dec
lds
or
inc
nop
stc
or
in
cmc
mov
pop
and
push
les
js
ljmp
dec
in
rorl
ja
mov
popa
insb
sub
sub
jg
loopne
or
aaa
outsl
add
push
in
testl
sub
and
inc
stc
daa
loop
popf
bound
pop
add
push
popf
jo
movsl
nop
add
mov
adc
lret
out
test
cli
jns
jne
mov
nop
mov
mov
out
imul
pop
rorl
das
stos
fldcw
popa
adc
pop
mov
loope
jle
aas
or
jns
add
and
jne
scas
mov
arpl
pop
cs
fsubl
iret
js
es
sbb
inc
lret
xor
fisubl
movl
mov
pushl
pusha
dec
mov
xchg
in
xchg
ljmp
imul
pop
adc
adcl
lds
test
mov
xchg
inc
pusha
xchg
xchg
into
pushf
or
push
dec
inc
imul
xchg
mov
idivl
push
fs
mov
andl
cmpsl
and
test
ljmp
ja
les
jns
push
shll
xor
popa
mov
xchg
loope
leave
or
in
imul
insb
add
ja
sub
sub
sti
mov
vshufps
dec
sti
push
movsl
inc
pop
mov
pop
test
pushf
cmp
sub
mov
outsb
cmp
lea
cmp
add
scas
sbb
in
sub
lahf
jg
mov
pusha
mov
les
loopne
inc
inc
add
popf
fwait
insb
fsubrs
ret
mov
add
mov
outsl
xchg
or
cmp
out
jecxz
adc
rorl
data16
into
movsl
into
testb
mov
shlb
lret
in
lods
das
fdivrl
push
jmp
push
test
mov
icebp
out
insb
jb
dec
mov
fwait
sub
jle
mov
mov
cltd
fcompl
push
inc
fstl
in
into
mov
mov
ds
in
enter
mov
push
fs
sarb
fistps
imul
stos
or
jl
les
popf
rcrb
sub
pop
shll
movsl
pop
xchg
aam
movq
daa
popf
add
jne
xor
inc
mov
push
and
push
cmp
mov
shll
sub
movsl
sbb
out
scas
subl
mov
popa
movb
int
lahf
fidivs
pop
out
js
lea
cmp
pop
popf
loopne
push
push
stos
scas
lea
aam
lahf
sbb
lcall
pop
push
ficompl
adc
add
add
sub
push
push
pusha
sti
outsl
push
adc
sbb
loop
scas
rolb
push
outsb
movsl
fwait
int3
adc
fimuls
out
xorl
dec
xchg
xchg
jmp
jns
mov
adc
lods
dec
call
jo
cs
addb
scas
jo
push
test
sbb
cmpsb
push
add
xor
sbb
hlt
sti
cmp
adc
xchg
pop
cs
clc
test
cld
pop
cmpsb
in
loope
addr16
xchg
jb
dec
in
imul
test
ror
ret
or
rclb
or
mulb
aad
in
fstp
dec
jbe
mov
sub
sbbl
sbb
jne
jp
daa
fstps
stc
int
jns
jne
lcall
mov
mov
adc
mov
xor
mov
scas
xor
add
push
jl
mov
jmp
add
dec
rorb
movsb
mov
leave
and
and
movsl
fisttpl
pop
xchg
test
adc
dec
clc
add
cmpl
xor
jno
add
lcall
add
sti
push
and
loope
stos
or
das
out
data16
mov
into
stos
pop
sub
dec
incl
push
daa
sti
mov
xor
aaa
xor
sbb
mov
inc
shlb
or
iret
jl
scas
idivb
icebp
sub
loopne
xor
push
mov
ja
ret
mov
shlb
cld
push
shll
dec
sbb
jecxz
adc
cmpsb
sbb
cli
cmc
adc
movsl
out
lods
outsl
adc
adc
or
sbb
gs
xchg
inc
in
push
lds
or
sub
mov
scas
test
icebp
mov
stc
scas
jb
movsb
out
xchg
mov
adc
lds
push
mov
fsubp
sarl
stc
stos
insl
cs
outsb
dec
xor
dec
shrb
and
pop
mov
loopne
imul
shll
inc
adc
adc
in
adc
cli
mov
mov
imul
adc
pop
sbb
in
and
mov
jl
enter
jnp
scas
push
xor
stos
mov
adc
add
adc
xlat
mov
fs
pop
ja
popa
data16
inc
dec
dec
sbb
adc
cmp
outsl
push
loop
adc
out
mov
push
xchg
mov
iret
out
jno
cmp
dec
sbb
sbb
mov
dec
or
ja
pop
xchg
cmp
sub
mov
pop
xor
inc
cld
xchg
stc
popa
or
push
aas
or
outsb
adc
in
xchg
mov
test
and
mov
aad
in
rorb
jle
jecxz
stc
test
jo
jno
mov
pop
xchg
arpl
std
aam
xor
pushf
sbb
lahf
mov
loope
gs
cmp
pop
mov
push
out
xor
rcr
insb
xlat
or
cwtl
xor
je
fbstp
leave
sbb
inc
fistpll
push
ljmp
je
out
fs
fisttpll
imul
iret
pop
fwait
aad
xchg
mov
jbe
cmp
pushf
dec
cld
fisubl
enter
xchg
sbb
xchg
dec
lahf
mov
pop
inc
lahf
sbb
lcall
es
xchg
xor
push
sub
fistl
mov
mov
fiadds
cmp
add
xchg
mov
xlat
inc
js
push
add
es
mov
sahf
cmp
mov
sbb
lods
fwait
pop
fs
xor
fwait
adc
in
adc
imul
cmpb
in
mov
xor
add
adc
or
jns
and
out
mov
aaa
inc
mov
sub
les
idivl
adc
lds
mov
fmull
js
aad
idivb
mov
sub
ret
in
sub
and
sbb
jno
jo
rcrl
xchg
adc
sub
mov
aaa
jns
nop
out
mov
sysret
mov
adc
or
push
sti
lcall
test
cmp
into
hlt
jnp
loopne
scas
pop
xchg
cwtl
mov
into
test
sub
mov
cmp
sbb
data16
fcoms
data16
push
or
push
push
setae
inc
js
xchg
pop
and
sbb
sbb
insb
sbb
in
cmpsb
jmp
pop
xchg
arpl
jle
cmc
insl
jae
jns
imul
push
dec
jae
movl
popf
std
pop
sahf
jo
fstps
ds
or
mov
popa
cmpsl
or
push
xor
fildll
push
sub
adc
push
pop
dec
sahf
mov
jns
add
cld
inc
dec
xchg
jno
inc
xlat
out
andl
je
lahf
add
or
pop
test
jmp
fdiv
in
fbld
xchg
sbb
push
addr16
cwtl
mov
jns
daa
inc
jns
adc
movsl
dec
add
fimuls
inc
adc
jnp
inc
fstps
cmp
popf
ja
dec
test
sbb
mov
jge
xchg
dec
fadd
orl
aas
scas
adc
mov
add
adc
or
and
sub
pop
jecxz
xor
dec
add
push
scas
or
mov
repz
popa
pop
push
push
and
fimuls
mov
fcmovne
enter
lret
test
je
fdivp
xchg
cmp
push
jmp
push
add
jl
fcompl
leave
hlt
ljmp
mov
ljmp
sub
sbb
repz
stos
and
mov
test
add
lcall
subl
push
in
inc
add
xchg
adc
popf
sub
or
ret
and
push
xchg
nop
xor
jae
push
ret
insb
inc
jbe
pop
std
pop
cli
xor
nop
sub
ret
ds
push
add
leave
mov
jp
inc
hlt
fsub
es
push
add
clc
aad
pusha
andb
stos
out
lret
jmp
gs
fisubrl
xor
mov
pop
sarb
bound
es
daa
sub
in
or
leave
jle
jno
pushf
inc
pop
push
cmp
lret
pop
inc
loopne
sub
push
pop
push
sahf
sahf
fildll
loopne
cltd
rolb
pop
jmp
jne
mov
push
inc
lods
cmpsb
leave
adc
xchg
mov
xchg
fisubs
mov
cmp
add
jnp
jge
mov
or
push
dec
sub
push
movsl
and
mov
das
testb
ss
mov
inc
sub
inc
pop
mov
dec
rcrl
outsl
xchg
or
sbbl
cmp
ret
jo
or
add
cli
repz
add
lahf
pop
push
fnstenv
test
lahf
mov
push
mov
lahf
loop
push
dec
mul
cmpsl
ret
and
dec
add
cs
sub
imull
or
imul
inc
or
jl
addr16
std
xlat
hlt
sub
movsl
dec
out
movsl
sub
shrb
pop
pop
mov
shl
jne
jecxz
nop
inc
mov
scas
or
aaa
mov
or
stc
loope
pop
ja
inc
std
sbb
pop
aaa
mov
xor
test
mov
pop
out
cmpsl
add
and
cmp
pop
loop
in
imulb
xor
inc
xchg
lods
mov
adc
dec
cmp
lea
sub
les
or
add
pusha
xor
mov
mov
sbb
pop
push
jo
or
push
sub
stos
lahf
xchg
daa
sarl
dec
xor
add
mov
xor
lcall
lret
cmp
pushf
rorb
push
mov
mov
pop
out
jg
ror
aam
mov
mov
hlt
and
lods
xchg
repnz
cld
movsl
adc
pop
gs
xchg
add
jbe
test
xchg
in
test
jp
jl
mov
mov
repz
dec
das
imul
cmpl
push
jne
dec
mov
jecxz
lcall
push
std
fdivrp
mov
leave
jae
jge
scas
push
sub
test
inc
add
push
fwait
jecxz
in
rorl
lea
or
daa
jbe
clc
xor
cs
sub
push
adc
mov
mov
out
dec
mov
popa
push
dec
ffree
test
pop
subl
and
pushf
cmp
rcll
push
gs
push
inc
cmp
in
lret
push
push
pop
sbb
cs
xlat
sbb
mov
sarl
adc
out
nop
sbb
out
fwait
sbb
je
test
adc
xlat
adc
test
addl
inc
imul
mov
inc
pop
ja
mov
pop
rcrb
pop
scas
mov
xchg
je
add
pop
loopne
sub
stos
fisubrl
add
push
or
fmul
sub
arpl
and
mov
in
cmpsb
sub
cmc
xchg
jle
mov
inc
jecxz
inc
repnz
je
pop
jecxz
lock
jns
or
pop
pop
insb
push
in
mov
mov
fcom
sbb
in
pusha
std
sbb
add
shr
pop
fsts
sti
gs
pop
hlt
xchg
ss
aam
pop
mov
notl
lret
pop
pop
xor
cmc
sub
ffree
xchg
and
add
std
fwait
lds
hlt
movsb
mov
nop
adc
adc
scas
jo
out
lock
mov
out
insl
pop
call
mov
out
sahf
xor
push
jo
in
mov
loopne
adc
cwtl
push
cmp
dec
sub
adc
push
shll
addr16
xchg
sti
das
mov
cs
movsb
jl
jae
xor
imul
outsl
jne
xor
push
cmc
push
dec
mov
outsb
in
aam
cmpsb
cmp
mov
cmc
add
jb
mov
out
jge
mov
testl
add
mov
das
outsl
sub
and
stc
shll
jmp
scas
or
push
add
call
inc
jl
mov
nop
imull
insb
loopne
cmp
lods
pop
mov
lea
loope
inc
adc
sbb
jecxz
popf
jne
sub
daa
icebp
cmpsb
ljmp
add
subb
mov
xor
subl
and
sbb
jae
sbb
add
push
rcll
jecxz
cmpsb
mov
adc
mov
aad
xchg
mov
es
xchg
out
sbb
add
pop
mov
add
sub
push
fs
jl
or
xchg
and
arpl
imul
jge
ret
test
fcmovne
xchg
les
adc
jns
inc
movsl
pop
int3
sti
add
mov
stos
inc
scas
dec
add
out
dec
pop
ljmp
xor
xor
add
sub
dec
mov
ja
sbb
scas
rcrl
lcall
xor
in
mov
lcall
call
and
xchg
inc
push
fldl
add
or
cli
test
in
push
push
sub
pop
cmp
fwait
push
adcb
cmpsl
push
pop
cmp
sarl
mov
jne
lret
pop
and
dec
push
jno
pop
aaa
add
and
lahf
lcall
or
mov
mov
or
int
mov
cmp
and
out
push
sub
sub
pop
xchg
enter
loope
mov
cli
push
std
mov
jne
fiaddl
cmpb
xchg
pop
sbb
in
test
flds
cmpsl
xor
pop
inc
xor
daa
mov
mov
xchg
and
push
lds
pop
xchg
gs
paddw
mov
popf
push
aam
gs
sbb
in
outsb
gs
ret
inc
lock
ret
push
addr16
mov
icebp
jmp
test
roll
dec
cmpsl
xchg
ds
cmp
nop
jp
pop
dec
mov
imul
into
add
adc
dec
lcall
mov
add
add
xchg
arpl
and
in
and
sbbl
push
shll
xlat
call
outsl
jno
sbb
cld
pop
cmpsl
test
mov
push
inc
jg
or
jno
adc
sub
in
int
orb
lcall
je
adc
bound
mov
push
jmp
sbbb
lret
dec
mov
rorb
sub
ja
push
or
jne
scas
cmpb
sbb
sub
jns
fistps
nop
and
pushf
loopne
mov
pop
sub
push
or
jbe
xchg
xchg
leave
cmpsb
fnstenv
mov
cltd
imulb
jns
dec
es
sub
push
or
jbe
xchg
xchg
leave
cmpsb
fnstenv
mov
cltd
imulb
dec
push
sub
pop
ss
fnstenvs
xchg
xchg
cmp
test
idivb
and
sub
push
or
jbe
xchg
cmp
cmpsb
fld
fimuls
sub
or
out
adc
mov
jnp
subl
rcl
loope
icebp
sbb
ljmp
inc
stos
push
mov
subl
pop
add
cmp
or
sbb
dec
adc
push
xor
xorb
push
pop
int
mov
sarl
xchg
js
jle
scas
jne
and
fiaddl
or
test
or
test
xchg
ss
cmc
push
dec
jmp
into
and
lahf
jne
gs
adc
pop
mov
or
aas
shlb
cmpl
xchg
inc
sub
inc
and
ljmp
push
dec
jno
xchg
fldcw
add
adc
dec
into
xor
mov
in
jno
or
adc
pop
mov
pop
ds
xchg
mov
cmc
les
cmp
pop
shll
and
loop
xor
imul
stos
xchg
inc
cs
mov
lock
cld
adc
mov
dec
in
cli
jno
cmp
pop
pushf
cltd
xor
out
jo
adc
and
push
mov
subl
rclw
aam
adc
sub
gs
dec
cmpsb
pop
mov
mov
add
sub
or
insl
rcll
jle
jae
lods
je
inc
mov
adc
sbb
and
mov
gs
imul
mov
out
mov
subl
pop
shrl
cmp
or
sbb
ljmp
inc
stos
push
mov
subl
pop
shrl
cmp
or
sbb
ljmp
mov
and
add
int3
mov
pusha
cltd
pop
insl
mov
push
sub
clc
loop
xor
es
xor
repz
sbb
lods
std
add
aaa
inc
shrb
dec
rolb
cmp
clc
lods
or
push
inc
das
std
gs
lods
inc
push
or
xchg
cmp
stos
push
lcall
jl
jnp
loopne
mov
stos
movsbl
xor
mov
push
xor
push
jmp
xor
cmp
mov
lret
or
ja
or
mov
in
xorl
and
fs
xor
sbbb
jecxz
pop
xchg
mov
movsl
inc
xor
xchg
test
dec
sub
popf
push
xlat
movsb
imul
jp
mov
mov
mov
icebp
mov
pop
imul
stc
add
lods
lret
jle
in
addb
cld
test
lods
data16
xchg
add
mov
mov
sbb
inc
adc
ja
pushf
insl
int
push
leave
or
int3
cli
enter
xchg
xor
or
jnp
lds
movsb
sub
nop
jg
xlat
fcomps
js
xlat
inc
jecxz
and
inc
pop
fmuls
add
testl
adc
in
jecxz
fisubs
mov
cli
xor
xor
xchg
hlt
lcall
in
cmp
cmp
bound
int
scas
mov
rep
out
push
or
cmp
push
lods
dec
push
pushf
push
push
mov
adc
sbb
bound
into
cmp
mov
lock
xor
dec
pop
cmc
stc
fldt
dec
mov
addr16
outsb
iret
sub
shr
push
andb
iret
add
jae
or
push
mov
rorb
daa
mov
out
out
cld
outsl
jp
clc
les
inc
mov
out
adc
adc
and
test
mov
cmp
mov
cmp
xlat
orb
pop
adcb
pusha
jb
dec
sti
mov
xchg
inc
and
xor
es
ret
sar
mov
mov
outsl
cmp
dec
jnp
imul
jnp
negb
pop
andl
aas
cmp
push
jge
or
pop
shrb
push
push
loop
adc
mov
mov
daa
jl
jp
aaa
movsb
lahf
stos
sub
and
stos
sub
cmp
shl
mov
jmp
add
cmp
lcall
mov
test
xor
add
dec
push
pop
lods
add
in
outsl
cmp
push
pop
pop
add
lret
inc
add
gs
jp
ret
cmpsl
add
push
or
lods
cmpsl
adc
sub
mov
testb
push
mov
loope
test
push
les
cmp
adc
fwait
cmp
loope
sub
shrl
jo
sbb
aad
jp
mov
or
inc
add
pop
xlat
pop
or
les
add
dec
xor
jg
or
push
lcall
cmpsb
dec
ds
cmpsl
in
pop
dec
ja
push
test
jmp
iret
inc
mov
lods
in
lods
es
pop
xchg
inc
inc
adc
mov
popf
and
xchg
jge
test
push
inc
pop
pop
aam
cwtl
jle
aas
addr16
dec
out
sub
dec
lods
cmp
cmc
shl
imul
push
cld
pushf
jmp
lret
iret
push
push
aaa
sbb
add
dec
adcb
pop
and
out
mov
dec
popf
inc
sub
mov
jge
push
rcll
call
addr16
push
roll
cmp
jo
cld
movsl
scas
and
cmp
pop
js
pop
mov
inc
jle
add
add
xchg
aaa
imul
lods
xlat
es
lea
in
inc
scas
scas
cmc
mov
pop
dec
lahf
mov
xchg
lods
sub
adc
cmpsl
mov
jle
cmp
xor
inc
and
aas
outsb
push
jns
jl
sub
inc
clc
add
in
mov
ss
nop
mov
push
and
jp
sbb
stos
je
cltd
insb
lods
fiaddl
outsl
mov
and
dec
pop
sbb
mov
movsl
in
mov
jmp
pop
pop
sbb
jns
xchg
lea
jl
in
dec
fcoml
xor
pushf
xchg
mov
cltd
sbb
sbb
insl
add
and
mov
dec
addr16
sbb
cld
mov
nop
bound
into
test
dec
int
lahf
xor
jecxz
stos
or
ljmp
repnz
mov
cltd
addb
xlat
mov
or
sarl
lcall
into
cmp
xor
or
mov
dec
fisttps
jnp
pop
mov
test
mov
mov
nop
jle
dec
daa
dec
cmp
lahf
cmp
or
cltd
incb
mov
pop
inc
sahf
in
mov
push
sbb
mov
push
flds
and
cmpsl
mov
mov
shrl
popa
mov
test
je
sbb
ds
mov
outsb
fidivs
inc
xchg
clc
popa
es
push
sub
shl
outsl
outsb
aas
xor
push
addr16
test
aas
stos
add
sbb
lock
inc
jg
xchg
pop
mov
mov
cwtl
mov
jl
push
mov
sub
es
xchg
fsubrs
jge
and
pop
cmc
adc
daa
or
mov
jmp
push
jbe
sub
stos
pop
pop
adc
jle
mov
jnp
outsb
std
add
scas
daa
movsl
fsubp
lods
dec
mov
outsb
mov
cmpsl
lahf
enter
xchg
jbe
test
push
and
in
sbb
jmp
scas
mov
aaa
fstsw
cmpb
inc
mov
and
data16
sbb
dec
cmp
push
sbb
xchg
das
mov
test
mov
sub
addb
mov
adc
ror
push
xchg
push
icebp
push
lret
mov
jb
or
imul
notl
popa
fmulp
inc
hlt
popa
mov
ja
mov
lea
lods
pusha
mov
push
repz
add
sbb
cmp
xchg
sbb
cmp
cmp
and
jnp
mov
add
mov
aad
lds
pusha
mov
xchg
xchg
sub
out
jo
dec
sbb
adc
mov
add
or
dec
pop
pop
mov
mov
push
jl
dec
cmc
adc
rol
repnz
xlat
das
add
in
jmp
jecxz
stos
pop
in
enter
push
inc
hlt
movsl
xchg
cltd
aaa
push
jp
shr
hlt
mov
repz
pop
mov
jp
cld
adc
shlb
jle
shlb
loop
test
shl
inc
popf
es
cltd
mov
mov
stos
jle
subb
testb
jl
scas
push
mov
push
enter
push
jno
sbb
pop
lods
dec
and
insl
cmc
pop
sahf
adc
xchg
mul
mov
je
das
jle
std
ljmp
mov
stc
mov
xchg
pusha
ror
pop
mov
test
pop
inc
push
sub
andb
outsb
mov
sbb
mov
jmp
mov
ret
fnstenv
clc
fs
pop
movb
adc
jno
out
ds
push
dec
inc
add
cwtl
pop
dec
sbb
pop
in
dec
adc
fwait
or
mov
mov
gs
call
pop
xor
jbe
addr16
test
imul
lret
lea
ror
shlb
aam
shrl
mov
std
jae
add
imul
jle
mov
in
aaa
shr
push
ficompl
xchg
xor
inc
mov
scas
xorb
les
pcmpeqb
cwtl
das
in
inc
jmp
loope
cmp
movsb
inc
pop
ret
cmp
je
cmp
inc
cmp
mov
and
add
lret
xchg
fistpl
fdivl
data16
outsl
dec
hlt
loope
fbld
xchg
ss
rorl
pop
mov
sub
ret
subl
rcrb
mov
mov
adc
popa
pop
pop
popf
aaa
ret
mov
fwait
popf
addr16
push
popf
add
in
jp
fwait
daa
fsubrl
cmpsb
stc
mov
adcb
push
push
push
imul
sub
jns
ror
fiadds
sbb
inc
push
adc
nop
and
addb
fdiv
or
pop
sub
les
add
fbstp
dec
inc
enter
hlt
cmp
je
pop
and
mov
add
dec
js
pop
add
mov
jns
test
pop
call
imul
shr
adc
xor
movsl
jns
add
je
clc
push
insl
and
xchg
icebp
mov
and
inc
inc
or
ljmp
xchg
add
mov
in
mov
mov
xor
sub
sbb
xor
mov
cmp
js
ljmp
or
mov
sbb
xor
inc
xor
adc
loop
xchg
push
xchg
add
nop
add
pusha
sub
loop
test
nop
out
xchg
dec
adcb
cmpsl
and
leave
xchg
mov
daa
mov
jecxz
or
jbe
jle
inc
mov
sub
cmc
mov
mov
sbb
push
dec
xchg
scas
test
adc
scas
push
add
xor
dec
lods
aam
push
imul
lods
pop
push
lahf
sub
add
int3
pop
add
rorb
jno
aad
in
xchg
enter
imul
mov
mov
jb
imul
jg
lods
or
movsl
pop
pop
dec
jmp
pop
xchg
push
fcomi
fcoml
sbb
mov
mov
jns
cmp
aad
lret
lea
mov
shlb
and
out
mov
sub
loop
int3
out
out
mov
xchg
lds
and
fdivl
int
adc
stos
or
fidivl
and
mov
es
jge
adc
cmp
add
outsb
push
stos
inc
loopne
paddusw
aas
push
sahf
in
ss
xchg
adc
mov
fisttpll
pushl
aad
pop
and
loop
or
pop
lods
jb
aas
fwait
popa
push
dec
lcall
loopne
outsl
mov
pop
daa
mov
ficomps
jb
gs
mov
std
cs
mov
jmp
add
imul
mov
fmull
dec
mov
stos
jmp
scas
in
sbbl
push
int
nop
fnsave
push
loope
xor
pop
pop
dec
leave
lods
flds
orl
sbb
movb
mov
loope
xor
xchg
jb
pop
psubb
push
arpl
sti
xchg
adc
cmc
xchg
fs
shlb
mov
daa
mov
mov
mov
aas
outsl
push
xor
popf
mov
dec
shlb
push
addr16
sbb
xor
call
or
rcll
cltd
push
push
in
add
mov
push
adc
sub
inc
dec
push
iret
lock
jmp
mov
fnstenv
mov
or
xor
push
mov
inc
dec
icebp
aas
insb
sub
mov
mov
or
imul
push
mov
mov
pop
pop
rol
mov
fisubl
fs
jp
enter
add
jp
adc
cmp
mov
imul
cli
xchg
mov
shlb
inc
add
cwtl
cmp
test
stos
adc
aas
or
imul
popf
jp
xchg
jo
gs
mov
pop
bound
in
popf
int3
sbb
scas
or
or
add
out
xor
adc
jnp
inc
mov
cmp
jge
push
lret
popa
cmc
mov
push
dec
xlat
movsl
jmp
pop
add
mov
insb
in
jl
leave
mov
push
fst
in
add
sub
shll
ret
out
mov
push
pop
icebp
aad
inc
sahf
pop
sub
lret
in
rorb
mov
pop
jns
sbb
inc
xor
cmp
xchg
mov
ret
and
xchg
add
adcb
hlt
inc
in
lods
sbb
sub
xor
xchg
cmc
dec
cmc
cltd
push
lret
mov
ret
xor
leave
loopne
pop
lods
fcom
adc
mov
push
movsl
mov
fisttpl
out
cmpsb
pop
aaa
cmp
cmp
pop
fsts
lret
dec
push
iret
in
push
fsubl
imul
cmpsb
push
repnz
push
cltd
push
xchg
imulb
adc
aas
push
jbe
xchg
lret
xor
mov
in
aaa
sub
loop
scas
out
inc
sub
xor
cmp
add
loopne
bound
lcall
push
ret
inc
addl
mov
dec
pusha
push
test
push
jo
out
jne
jbe
orl
mov
iret
lret
or
cltd
add
in
lock
hlt
mov
adc
sub
push
rcll
mov
daa
icebp
pop
xchg
adc
jo
ss
ljmp
xchg
push
mov
outsl
js
adc
enter
inc
mov
ret
out
lcall
dec
or
outsb
add
jb
leave
test
mov
push
adc
pop
sbb
mov
test
stc
fwait
pusha
xchg
fdivs
out
shr
add
arpl
outsb
push
jbe
jge
mov
jmp
out
into
or
sub
jns
popf
and
popa
jecxz
popf
scas
mov
dec
sbb
cltd
test
or
adc
ret
mov
cmp
sbb
inc
xor
stc
mov
int3
cs
add
or
ds
cmpsl
dec
xorb
push
out
lahf
mov
es
sbb
fnstsw
push
jne
adc
cmpsb
insl
cmc
sahf
insb
je
in
ret
das
negl
insl
dec
sub
sysret
push
push
mov
cmp
jle
push
mov
inc
sbb
push
ret
pop
jo
fwait
adc
test
mov
and
add
enter
sub
push
clc
jbe
sub
imul
add
mov
test
lret
sbb
daa
xchg
lahf
xor
lret
jne
sbb
lar
in
sub
adc
dec
cmpb
inc
call
xchg
pop
incl
fcmovu
pop
inc
loopne
pop
pusha
repnz
cmpsb
mov
rorl
jp
sbbb
imul
inc
jl
pushf
repnz
mov
xor
out
xchg
ret
cld
sbb
jl
loop
mov
add
dec
enter
dec
lea
pushf
aaa
sbb
jno
or
mov
sub
jg
pushf
xchg
addr16
xorl
add
mov
add
lea
rcl
shr
xor
xorb
rcrb
dec
xchg
xor
sbb
jo
sub
and
cmp
fs
or
add
arpl
iret
add
xchg
sub
mov
sub
mov
movsl
aaa
adc
mov
stos
lret
jge
dec
cmpsb
and
inc
out
dec
inc
push
push
fwait
in
push
adc
add
push
xor
test
shr
and
or
sbb
in
cmp
in
insb
into
dec
push
or
and
loope
push
xor
mov
cmp
and
sbb
jp
sbb
in
hlt
aam
nop
dec
test
aam
rcll
cmp
ljmp
mov
pop
xlat
iret
mov
inc
test
pop
mov
xchg
mov
sub
add
mov
push
hlt
enter
je
call
sub
xor
and
cmp
sbb
mov
cmpsl
out
jbe
mov
out
or
inc
cltd
push
shll
adc
mov
xor
push
xor
jnp
inc
pop
pop
leave
and
mov
pop
xor
or
and
ljmp
dec
push
push
idivb
cmc
dec
out
mov
js
scas
xlat
hlt
call
and
dec
sti
jns
out
dec
adc
cmp
jle
fcoml
dec
pop
mov
xchg
sub
cwtl
icebp
stos
mov
mov
add
rcl
push
test
imul
jns
scas
inc
xchg
adc
mov
push
dec
sbb
xchg
lock
sbb
les
les
pop
icebp
pop
add
mov
out
jo
mov
push
sbb
jecxz
int
int
mov
ds
call
jecxz
cmp
xor
jne
popf
lahf
jp
lcall
lea
test
ss
jle
js
inc
xchg
mov
call
push
loope
ret
pop
pop
and
dec
push
aaa
pop
leave
rcll
popf
int
fdivr
das
test
xchg
xchg
cmp
cmpsb
enter
movsl
sbb
cs
call
orl
xchg
add
or
xchg
or
cwtl
cmp
adc
cmp
mov
shrb
lea
adc
lock
or
lahf
clc
into
int
insb
mov
mov
mov
inc
jo
sub
jne
aam
and
lods
dec
xor
lret
sub
mov
mov
jns
fimull
xchg
adc
mov
mov
xor
int
mov
cmp
cmpsl
out
or
loopne
sahf
jle
movsl
jge
mov
lcall
shll
into
repz
lds
mov
push
in
popf
cmp
mov
out
push
and
jecxz
mov
jge
aad
push
and
add
dec
mov
mov
mov
scas
push
out
test
and
adc
cmp
ljmp
ja
idiv
cmpsl
out
rcrl
data16
fdivrs
test
outsb
in
and
fsubr
enter
cmc
add
or
inc
push
jne
pushl
or
dec
sbb
sub
les
jns
daa
xchg
test
jb
lds
das
faddl
cmp
sbb
out
xor
std
rcr
and
push
gs
stc
jno
mov
test
add
test
dec
jne
testb
add
add
out
aas
add
mov
xor
jo
hlt
bound
jnp
pop
xchg
rcl
xlat
sub
sbb
jg
push
sub
das
les
aam
xchg
push
or
push
bound
push
rclb
mov
sar
mov
les
in
jmp
xchg
xchg
jge
sbb
mov
in
jecxz
sbb
dec
cmp
into
xor
xchg
leave
push
push
ret
mov
dec
mov
push
cmp
outsb
jecxz
sahf
pop
bound
pop
mov
mov
jb
sbb
mov
aam
dec
insl
push
pushf
cmp
aaa
xchg
sbb
push
inc
inc
add
cmp
or
stc
mov
in
adc
loopne
nop
inc
fsubp
or
test
cmp
cmpsl
repnz
pop
int3
push
int3
xor
sti
pop
mov
aam
push
sbb
clc
testl
aam
add
insb
pushf
lret
lahf
dec
sbb
pop
jno
in
xchg
inc
int3
cmc
stos
ss
aam
and
movsl
movsb
cmpl
nop
add
pop
ds
jo
je
and
or
push
movsb
inc
jle
mov
ret
jl
push
cs
jno
es
jle
cltd
sub
inc
popa
mov
fdivrl
outsl
cs
cmp
and
xchg
xchg
cmp
es
test
mov
fwait
mov
loopne
add
add
lahf
inc
out
xlat
mov
je
aam
in
fldenv
les
push
push
daa
mov
lock
push
xor
sbb
mov
cld
xor
loop
xor
ror
xor
dec
mov
pop
inc
mov
dec
mov
shrl
jns
ret
push
cwtl
pushf
stos
sbb
sub
sub
out
and
adc
jbe
outsb
push
gs
fisttps
mov
imul
addl
adcl
lret
pop
lds
arpl
inc
adc
cmp
pop
gs
mov
xchg
sbb
push
shll
mov
insl
adc
sub
jg
sbb
cmp
push
push
ds
lock
loop
pushf
ja
xorb
icebp
je
or
cmp
lods
pop
out
xchg
push
sbb
js
cltd
sub
jo
or
das
mov
scas
into
sti
mov
out
out
adc
dec
sbb
add
inc
xchg
sti
sub
insb
jae
jg
in
push
loop
out
jecxz
fistpl
push
jle
sbb
and
add
inc
xchg
insl
iret
fwait
push
and
or
sbb
push
xchg
sbb
mov
int3
mov
lret
push
outsb
lret
outsb
fs
call
test
xchg
idiv
sbb
cltd
cmpsb
mov
xchg
inc
sahf
adc
mov
adc
pop
fdivl
je
and
xor
inc
stos
push
mov
subl
pop
shrl
cmp
or
sbb
ljmp
inc
stos
push
mov
subl
pop
shrl
cmp
or
sbb
out
xchg
hlt
mov
stos
push
shll
icebp
lcall
mov
shrl
cmp
add
incb
push
adc
and
xor
popa
or
adcl
mov
bound
pop
insl
in
push
loop
popa
pop
or
pusha
std
add
add
pop
add
push
add
jmp
add
in
add
les
movsb
add
add
add
push
add
add
add
add
add
in
rolb
outsl
add
add
add
add
add
mov
add
rolb
pop
add
add
add
add
add
add
add
test
repnz
add
add
add
add
mov
add
add
and
add
add
add
testb
add
add
pop
add
add
sub
fadds
inc
add
add
add
outsl
add
loopne
dec
add
add
add
add
pushf
add
insb
add
outsl
add
add
add
add
add
cmp
es
add
add
add
add
add
add
add
add
add
add
add
add
add
jns
bound
bound
rolb
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
data16
add
add
add
xchg
add
mov
push
add
dec
add
imul
add
add
add
pop
add
add
add
out
add
cltd
add
mov
adc
adc
mov
add
add
add
add
mov
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
push
add
add
add
incl
pop
add
add
add
add
add
add
iret
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
faddl
mov
add
add
add
aaa
add
push
add
add
lret
add
add
add
add
add
push
add
add
insb
add
add
add
jl
cmpsl
add
add
add
pop
add
roll
add
add
add
add
add
add
add
add
aas
add
add
dec
add
add
add
add
add
add
add
add
imul
sbb
and
rolb
add
add
fldl
les
xchg
add
jl
roll
in
inc
add
inc
add
add
roll
push
add
add
add
test
cmpsl
add
add
add
add
add
mov
cmp
popa
add
add
add
les
sub
cmp
add
add
add
add
sub
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
aaa
add
add
add
add
add
add
add
add
mov
rolb
add
add
add
add
daa
inc
out
cmp
repnz
rcll
les
push
inc
fwait
repnz
mov
inc
cmc
cmpsl
mov
dec
add
cmpsb
fwait
out
and
mov
dec
popa
es
xlat
xchg
cmp
iret
mov
push
std
pop
outsb
icebp
mov
mov
scas
insb
dec
jbe
fists
loop
mov
shlb
je
cltd
pop
jle
repnz
sub
in
xchg
imul
fstp
and
out
bound
ljmp
js
push
jne
jecxz
or
testl
jl
sub
test
inc
and
pop
fcompl
inc
jne
lods
push
sbb
movsl
dec
mov
add
sub
fnsave
enter
into
xor
mov
dec
inc
rcrl
mov
add
je
push
stos
ret
aam
in
addr16
stos
or
into
fmul
rcr
in
lods
mov
jg
repnz
xchg
ljmp
div
cld
repz
jb
fcoms
cmp
dec
movsl
inc
inc
shlb
in
daa
xlat
pushf
inc
subl
ret
pop
xor
les
pop
jnp
cs
std
cmp
mov
push
negl
or
subb
sbb
in
add
adc
out
call
sub
lea
jp
lods
imul
xchg
mov
add
jns
cmp
jp
add
jle
mov
add
faddl
repnz
lods
inc
pop
jb
add
loope
lock
rcll
mov
sbb
popf
mov
pop
shll
pop
test
adc
imul
movsb
insl
stos
xchg
adc
std
sbb
adc
mov
loope
add
cli
imul
and
adc
push
sbb
jnp
popa
cmc
testl
repnz
cmp
in
fsubrl
mov
jbe
and
popf
xchg
call
test
pop
adc
add
mov
pop
repz
cmp
add
dec
mov
pop
fnstsw
daa
notl
int3
loope
ljmp
into
cltd
pushw
jns
jge
xchg
and
sti
xor
addb
enter
sub
add
fsubp
xchg
add
sti
test
xchg
cmp
mov
mov
sahf
sub
and
and
fisttpll
push
mov
rcl
stos
inc
shrl
ljmp
repnz
nop
movl
inc
sbb
lcall
enter
jle
stc
fiadds
adc
cltd
push
and
outsb
xor
into
xchg
xchg
in
jno
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
