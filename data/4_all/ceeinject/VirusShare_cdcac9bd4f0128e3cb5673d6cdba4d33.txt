call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
in
hlt
add
xor
and
sbb
bound
jbe
inc
mov
mov
add
adc
in
hlt
add
xor
and
xchg
pop
fs
je
inc
mov
mov
add
adc
in
hlt
add
xor
and
xchg
bound
mov
and
inc
sahf
inc
xchg
jge
nop
pop
xchg
jb
popa
mov
lods
outsl
jno
lods
adc
dec
jmp
mov
or
or
cmp
scas
movsb
inc
mov
js
jl
fadds
stos
mov
ret
push
dec
inc
mov
add
in
pop
data16
lret
mov
push
mov
pop
and
jg
cs
rcll
pop
daa
shll
dec
inc
fnstsw
adcb
daa
je
xor
cld
xchg
std
inc
int
das
pop
fsts
gs
jl
leave
dec
fbld
sti
lcall
decb
leave
and
test
and
ds
rol
xchg
ret
repnz
sbb
les
aam
movsb
push
mov
test
bound
addb
and
xor
add
adc
adcl
xchg
arpl
adc
adc
adc
adc
mov
andb
subb
xchg
inc
rcll
pop
shll
lock
push
lock
jle
adcl
adcb
loope
mov
test
bound
addb
and
xor
add
adc
in
hlt
add
xor
and
xchg
bound
addb
and
xor
add
adc
in
xchg
sub
stos
in
cmpsl
inc
rcl
or
jnp
cmp
mov
test
jo
add
pminsw
data16
fcoms
sarl
addl
sar
ss
xor
push
lods
xchg
push
pushf
sub
rclb
bound
ss
rorb
xlat
imul
stos
notl
push
enter
xchg
int
hlt
cwtl
sbb
mov
js
fsubs
adc
mov
mov
add
cmp
mov
adc
fnstsw
ret
lret
push
push
outsb
popf
dec
lods
pop
mov
cmc
pop
js
lds
inc
rcrl
cmc
js
idiv
push
jbe
iret
push
aam
jl
iret
and
arpl
int
lea
in
jl
xchg
mov
in
fcoms
sahf
notl
pop
mov
out
fmuls
add
dec
dec
mov
push
fsts
add
leave
xchg
mov
into
dec
xlat
sahf
icebp
fimull
cmp
pushf
ljmp
clc
sub
icebp
mov
nop
sub
push
mov
mov
xchg
mov
imul
or
dec
mov
cli
call
cmp
rcll
mov
lods
mov
push
pusha
and
stos
mov
aam
fs
adc
loop
sub
xchg
or
mov
test
add
loopne
push
ds
adc
movsb
pop
jmp
pushf
sub
cmpsb
pushf
pop
pop
out
cmc
xor
dec
sbb
adc
adc
pop
mov
or
mov
and
sar
xor
and
and
mov
loope
fsubr
shll
std
add
in
ja
dec
shrl
cltd
mov
inc
xchg
push
or
adc
mov
add
pop
and
frstpm(287
xlat
push
pop
shll
jecxz
push
cmp
not
push
imul
aad
fldenv
shrd
loop
add
mov
movsl
lods
into
cli
ficompl
aaa
mov
sbb
sarl
xchg
sbb
fmulp
mov
jno
xchg
aas
dec
addl
inc
ror
push
add
es
mov
and
push
movsl
bound
sbbb
jge
mov
lods
jmp
dec
mov
popf
lea
adc
loope
rcll
cmp
push
iret
cli
cmpsl
sbb
sbb
scas
dec
repnz
cmpsl
push
mov
sub
inc
dec
push
xchg
jmp
imul
adc
push
fsubl
pop
inc
imul
pushf
xchg
cwtl
push
lods
xchg
xor
aam
mov
mov
jecxz
pop
cmp
xchg
loop
mov
ret
mov
sub
push
push
ror
ds
in
xchg
mov
dec
lret
mov
es
mov
mov
loopne
lods
jecxz
and
add
xchg
sub
cmp
sarl
out
cmpb
test
push
jge
test
fcompl
mov
mov
add
cmp
mov
mov
pop
nop
arpl
pusha
adc
pop
nop
ret
test
sub
fldl
rcr
pop
scas
sub
testl
inc
xchg
andl
or
gs
loope
js
lods
call
sub
mov
loope
daa
cmp
inc
push
jns
mov
adc
pop
test
aam
insl
xor
int3
mov
outsl
xchg
scas
jnp
imul
dec
loope
xchg
das
xchg
out
xchg
mov
cmp
mov
repnz
dec
and
dec
cmp
jl
xor
mov
jae
sbb
push
dec
inc
cwtl
filds
push
sbb
cmp
dec
fsubrs
call
add
dec
adc
push
adc
sub
aam
aam
stc
mov
shll
fs
jnp
insl
leave
mov
sbb
int
imul
mov
sub
pop
movsb
jge
aaa
je
aad
ja
les
mov
popa
push
and
std
sbb
shlb
and
cld
push
adc
es
xorb
sub
sarl
push
push
movb
add
sahf
ret
jp
and
dec
testl
sbbl
insb
pop
jnp
nop
int3
or
int3
in
leave
push
push
pop
mov
push
cmp
inc
dec
ret
pop
push
push
insl
cmpsb
aas
or
ret
icebp
sbb
pop
scas
add
aas
cmpsl
shlb
xorl
jnp
fnstcw
mov
in
mov
jbe
push
mov
and
test
xchg
mov
nop
fs
cmp
fldcw
xchg
in
push
gs
imul
xor
das
mov
dec
cmpsl
ljmp
scas
outsb
aaa
cmp
xchg
shlb
cld
fwait
lcall
inc
add
sbb
adc
addr16
es
fidivl
add
xchg
add
int3
js
jge
add
or
mov
lret
push
inc
inc
not
push
inc
lods
arpl
push
jae
xor
cs
add
xchg
ja
loopne
mov
add
xor
nop
cltd
push
ja
or
outsl
inc
test
xor
mov
push
nop
mov
xchg
cwtl
faddp
and
or
int
sbbl
cmp
pop
rol
push
loop
sbb
adc
out
pop
or
and
rcrl
popa
dec
out
shrb
pop
mov
push
push
sahf
loope
outsl
jne
jmp
sbb
ss
sbb
outsl
push
push
ljmp
cmp
mov
lcall
in
mov
sbb
pop
ds
and
bnd
cmp
sub
or
rorb
inc
jb
sete
out
jmp
popf
jb
shrl
fnstcw
add
mov
shll
int
cmp
movsl
pop
mov
in
inc
scas
out
call
mov
fwait
and
add
jae
pop
add
inc
sbb
dec
pop
imul
inc
test
mov
mov
lret
fldt
mov
add
es
iret
xchg
fs
ret
subl
jne
lea
hlt
cmpsl
mov
loopne
bound
dec
xor
sub
and
push
iret
xchg
xchg
rcrb
lds
in
lret
daa
xor
jecxz
fsub
push
aam
out
ret
or
cs
mov
dec
lahf
and
dec
ljmp
or
fdiv
nop
repnz
movsb
push
repnz
lods
sub
fsts
movsl
pop
push
and
es
bound
dec
and
sub
fimull
cwtl
nop
xchg
dec
push
and
aaa
out
out
jnp
scas
adc
stc
aad
xlat
insb
or
xor
icebp
lds
mov
push
lods
mov
pop
stc
cmpsl
xchg
ss
jae
repnz
sbbb
mov
sbb
pop
in
cmpsl
mov
jmp
or
xlat
fiaddl
dec
inc
inc
and
fldt
add
pop
adc
test
pop
pop
sub
sbb
gs
insl
imul
mov
divb
iret
or
mov
pop
dec
xor
xchg
pop
add
adc
push
in
rolb
inc
cmpsb
sub
popf
adc
sarl
cmp
dec
insb
inc
aas
push
shll
jnp
lret
aam
mov
xorb
es
pop
cwtl
jae
pop
loop
fmull
cs
mov
cs
push
xor
pop
push
shr
mov
jb
pop
leave
mov
arpl
mov
orb
int
hlt
push
push
arpl
push
into
loope
push
iret
push
mov
lret
dec
aam
js
pop
stos
mov
adc
decb
cli
add
xchg
mov
lds
shlb
xor
scas
pop
les
xlat
dec
push
dec
sbb
mov
cmp
aam
pop
mov
sbb
jns
add
cmc
stos
out
pop
xchg
sbbl
cmp
mov
roll
jle
jb
pop
data16
pop
dec
or
dec
and
mov
push
inc
push
and
in
mov
push
hlt
push
and
push
mull
mov
scas
cmc
and
dec
jno
lods
fisubrl
ret
mov
dec
cwtl
das
scas
sbb
insl
int3
add
insl
mov
scas
ret
jg
xor
repz
jg
pusha
jle
adc
jg
sti
jg
ljmp
jecxz
mov
scas
pop
and
jno
cs
les
popf
vmread
push
mov
leave
hlt
mov
addr16
jns
push
sub
or
lcall
scas
sub
sbb
push
cmp
xchg
shrb
shll
ss
iret
adc
add
fcomps
mov
add
insl
shrl
sub
mov
adc
fcmovb
xor
dec
mov
jg,pt
sbb
out
popf
mov
jae
mov
jge
cltd
std
sti
mov
dec
push
adc
jo
roll
jmp
pop
mov
int3
add
mov
cmpsl
and
jp
dec
sbbb
test
jge
lcall
imul
xlat
mov
xor
add
ja
outsl
scas
push
js
push
nop
insb
loope
dec
imul
xchg
pop
jne
aaa
and
subb
push
xor
fistpl
test
sub
and
out
jnp
jo
mov
roll
mov
cmc
fadds
jns
sub
lods
fildll
in
andl
add
mov
repz
jmp
lret
and
pushf
mov
daa
xor
call
xlat
cmp
mov
imul
mov
fsubr
outsb
into
sbb
aas
jo
cltd
leave
in
pop
imul
out
loope
data16
push
testb
hlt
rclb
call
mov
clc
add
loopne
push
push
or
aaa
les
adc
sub
int
mov
js
pop
mov
xor
cmpsb
ss
leave
aad
cmp
mov
adc
mov
cltd
xchg
mov
push
mov
mov
push
inc
sub
call
aas
and
pop
ss
mov
push
aaa
pop
nop
pop
push
movsb
dec
gs
fnstsw
aaa
and
hlt
jae
ds
ret
out
jne
mov
lahf
pop
pop
cmp
sbb
repnz
inc
frndint
add
inc
push
scas
inc
fisubs
xor
in
mov
add
pop
mov
scas
lcall
mov
sbb
cltd
sbb
loope
mov
jl
mov
fsubl
mov
xchg
lods
pop
rolb
jns
loope
pop
cltd
push
or
fadd
mull
jge
ss
push
sti
push
aam
jae
sub
aam
gs
imul
orb
or
aaa
ret
mov
mov
lea
popf
and
repz
hlt
xchg
jne
ds
repz
add
xchg
les
dec
and
aas
mov
orb
jno
and
aad
mov
movsl
movsl
icebp
push
mov
cmp
push
mov
lcall
orl
enter
mov
ja
lds
movb
xor
out
lods
stos
ss
mov
in
xor
bound
jle
xor
jge
loope
dec
xor
movsb
cmp
jnp
mov
mov
cmp
mov
daa
fcomps
add
cwtl
add
in
mov
nop
cmp
push
scas
cmc
mov
jb
sbb
leave
sub
outsb
mov
mov
pop
jl
sbb
add
jle
icebp
movsb
inc
rcll
inc
xor
daa
inc
or
enter
push
popf
inc
in
cmpsl
andl
or
shll
inc
cmpsl
sub
loopne
fistpll
and
fisubs
mov
push
ds
mov
stos
xor
mov
sub
icebp
xchg
sub
pop
das
dec
add
mov
cs
aad
xchg
sbb
pop
adc
sbb
sbb
pop
out
mov
inc
cmp
push
xchg
jb
mov
in
sub
dec
movsb
das
cmc
arpl
in
push
and
test
push
inc
cwtl
inc
rorl
rorl
fisubs
or
repz
inc
jmp
pop
cmc
cmpsb
xchg
mov
aam
lds
jne
push
mov
std
push
outsb
addb
subl
lcall
push
cmpsl
pop
push
pusha
std
dec
jbe
add
or
push
xchg
sub
dec
push
dec
adc
jae
dec
test
and
xchg
cli
cmp
mov
fsts
lods
iret
adc
insl
push
lea
lret
inc
repnz
or
and
aad
mov
jno
add
sub
xor
inc
dec
shll
cmc
shll
or
dec
repz
push
lock
insb
pop
pop
jecxz
test
addr16
sbb
repz
cmpsb
mov
jb
cltd
dec
in
lret
repnz
cltd
jns
pop
in
mov
movsl
inc
rcll
inc
rclb
cmpsl
pushf
mov
imul
adcl
std
sbb
scas
mov
dec
pop
dec
xchg
push
movsl
fwait
cmp
and
fisttpll
shlb
cmp
fwait
lds
sub
or
nop
xor
test
test
or
sbb
xchg
push
push
jle
icebp
push
sub
add
into
lahf
inc
gs
mov
in
sbb
out
mov
daa
pop
push
popa
sbb
adc
pop
stc
sbb
inc
and
xor
mull
mov
daa
gs
mull
or
pop
xor
mov
lods
stc
push
addr16
add
loopne
sub
cmp
mov
daa
push
mov
push
mov
and
sahf
or
mov
jno
pop
aaa
and
and
testl
loope
cltd
pop
dec
and
shll
scas
ljmp
xchg
ss
ljmp
push
and
insl
test
push
fdivrl
or
lea
mov
jns
rorb
xor
sub
in
mov
push
das
xor
test
lcall
clc
xor
imul
repz
fcomi
cmp
outsl
cmp
push
scas
call
sbb
or
lods
popa
rcrl
dec
add
pusha
int
adc
mov
adc
jle
mov
sbb
ficoml
bnd
daa
popf
or
pop
xchg
out
mov
les
xor
push
push
stos
imulb
rcr
outsl
xchg
ss
scas
jp
mov
jno
pop
cmpsl
jb
sub
ljmp
cmp
add
sbb
push
pop
pop
popa
add
xchg
mov
int
add
jecxz
pop
pop
and
or
js
sub
mov
mov
add
mov
sbb
xor
push
jge
pushf
test
xchg
dec
xor
cmc
test
pop
jb
int3
jmp
rol
and
inc
push
dec
jmp
sub
mov
add
mov
mov
std
out
fnsetpm(287
mov
pop
dec
rcll
jns
dec
or
push
mov
dec
data16
sbb
push
fsubrs
pop
and
mov
cmp
shrl
cltd
add
aam
jge
or
sub
es
adc
lds
push
cmpsb
push
push
mov
and
ja
fwait
pop
xchg
imul
inc
cmp
jae
es
mov
jb
mov
push
xchg
and
xorl
sarl
or
out
jo
add
pop
mov
xchg
xor
int3
ret
or
outsb
les
lahf
call
loop
int
aam
sbbw
sbb
into
or
or
push
jne
xchg
pop
pop
push
push
cmp
pushf
inc
jno
pop
insl
movsl
insb
divb
mov
repz
daa
out
imull
sub
push
movsb
adc
mov
stos
jne
jno
pop
push
insl
in
lock
mov
dec
adc
mov
mov
sbb
push
repnz
pushf
adc
in
mov
xchg
test
adc
pusha
test
hlt
cld
pop
sub
jg
cs
cwtl
mov
add
scas
mov
sbb
xor
pop
jl
lods
movsl
lret
push
push
out
mov
jg
notb
leave
mov
je
dec
mov
xchg
sbb
sub
daa
fsubrs
cmp
pop
push
imul
es
jmp
mov
mov
adcl
mov
mov
cmpsb
aaa
xchg
jns
mov
lods
cmp
cmpsb
rclb
xchg
daa
stc
inc
xor
movsb
pop
or
insl
stc
arpl
mov
cmp
adc
mov
dec
enter
insl
sub
addb
sub
mov
xchg
sbb
nop
sub
push
xchg
sbb
adc
inc
and
hlt
mov
std
dec
push
pop
jb
pop
popf
xchg
mov
mov
iret
sahf
and
and
call
adc
cld
clc
or
aaa
out
cmp
cli
pop
out
bound
xchg
xlat
cmp
xchg
repz
pop
jo
arpl
pop
shlw
xor
outsl
stc
sti
jecxz
and
pusha
jnp
cwtl
mov
xchg
das
mov
cwtl
cvttps2pi
adc
in
testb
xor
xchg
adc
int3
inc
pusha
out
roll
adc
and
adcl
pop
xchg
inc
fcom
imul
out
jecxz
xchg
mov
inc
out
inc
rcrb
pop
dec
pop
scas
cmc
add
push
jmp
daa
xchg
inc
mov
pop
mov
ss
in
call
mov
mov
mov
mov
cmp
xor
xor
adc
and
out
dec
mov
fimull
rcr
cmpsl
loopne
adc
pusha
inc
cmp
or
and
pop
mov
fnsave
cmp
push
xchg
rol
fmul
stc
sti
movsb
mov
sti
mov
push
shrl
mov
cmpsb
jecxz
dec
xchg
or
mov
rorb
mov
repz
imul
js
jge
cld
add
int3
orb
mov
xchg
jb
out
out
pop
aaa
sti
and
mov
stos
mov
js
std
xchg
lods
inc
bound
ret
xorb
sub
popa
btc
sub
ds
sbb
repnz
int
or
and
add
lods
out
pop
pop
pushf
cmp
out
xchg
mov
mov
push
int3
jecxz
fcmovnbe
sahf
add
ss
fwait
stos
dec
out
aad
jp
out
pop
or
add
call
testb
adc
mov
mov
add
clc
jl
pop
mov
inc
icebp
push
aaa
in
mov
inc
fwait
iret
dec
dec
adc
mov
sub
ss
pusha
cli
mov
pop
stc
xchg
cld
rcll
stos
inc
mov
pop
sbb
sbb
mov
dec
xchg
or
push
mov
mov
sub
xchg
pop
dec
xchg
mov
jne
outsl
push
and
call
lcall
out
push
and
test
test
add
mov
push
cmp
leave
int3
dec
sarb
mov
mov
imul
cmp
or
fs
push
push
daa
subb
cmp
insl
xor
ds
cmp
sbb
repnz
mov
popf
pusha
adc
push
sbbb
and
jno
call
and
cmpsb
int
es
andb
pop
insl
push
xchg
inc
jmp
rclb
daa
sahf
or
lahf
or
loope
cmp
outsl
data16
push
aas
sub
mov
push
lahf
mov
cmp
loope
lcall
sub
push
or
in
xchg
jno
cmpsb
sbb
adc
sti
es
sbb
sbb
inc
or
sbb
mov
shlb
sbb
push
les
stc
or
incl
decb
adc
cmp
jge
int
popa
in
test
inc
add
outsb
inc
xor
mov
mov
ja
fcomps
pavgw
jnp
cmp
call
cmp
incl
push
lods
lea
push
pop
fst
in
gs
rcrl
and
lret
xor
ds
and
lret
ret
push
mov
xorb
popf
jmp
aam
repnz
rclb
xchg
addl
adc
hlt
mov
xor
bound
roll
aad
mov
imul
popa
in
pop
into
sbb
mov
test
scas
jecxz
imul
repnz
test
adc
dec
aad
xor
popl
add
pop
push
and
dec
mov
adc
jecxz
adc
lahf
imul
imul
adc
fcoms
movsb
pop
xchg
iret
xchg
rcrl
xchg
cli
clc
out
jnp
ficoml
je
jns
scas
ret
loope
lods
out
int
and
bound
sti
xor
and
xchg
bound
addb
and
xor
add
adc
in
hlt
add
xor
and
xchg
bound
addb
and
xor
add
adc
in
hlt
add
xor
and
xchg
bound
je
inc
mov
mov
add
adc
add
xor
and
adc
fwait
xchg
mov
out
mov
aad
pop
mov
sbb
in
sbb
jne
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
dec
pop
pop
call
cltd
imul
lret
js
fs
cli
dec
mov
fwait
sub
clc
pop
call
or
cmp
jmp
sti
dec
dec
pop
fwait
clc
stos
sbb
call
or
cmp
xchg
hlt
inc
fimuls
or
aas
subl
nop
jno
push
ret
dec
stos
repz
bound
iret
rcr
adc
in
push
add
test
xor
push
aad
movb
clc
pop
adcb
dec
je
lcall
pop
push
outsl
insb
xchg
lods
sub
test
in
gs
std
cmp
fldt
out
into
out
or
pop
call
sub
push
push
inc
sub
adc
imul
sub
mov
sub
sbb
jle
and
lea
sbb
movsl
sti
sbb
or
sub
cmpsb
mov
sub
rcrl
imul
out
out
sbb
enter
mov
cmp
jmp
sti
push
mov
fwait
aas
stos
sbb
call
or
imul
lret
adc
daa
mov
jnp
sbb
gs
push
test
int
lret
pop
lcall
mov
jmp
dec
cmc
inc
je
insl
cs
pop
mov
sub
fldt
pop
sti
dec
mov
fwait
sub
clc
pop
call
or
cmp
jmp
sti
dec
mov
fwait
sub
clc
jle
idiv
push
fcomi
test
int
and
pusha
mov
rol
inc
cmovb
add
mov
fcomi
sub
std
lcall
mov
fwait
pop
or
sbbb
ficompl
or
or
mov
das
and
mov
out
pop
icebp
into
shlb
mov
stc
mov
and
ja
inc
jae
ljmp
cmp
mov
cmpsl
cli
mov
mov
cmp
pushf
loop
loop
or
pop
add
outsl
test
lods
jg
jne
sahf
icebp
iret
pusha
xchg
jne
outsb
and
dec
mov
push
pop
rcll
bound
ja
das
and
and
daa
inc
inc
xchg
mov
stc
es
loope
push
std
inc
and
popf
add
lret
add
aaa
pop
mov
xor
jnp
cmp
xor
jnp
into
add
mov
mov
inc
rcrb
and
into
add
xor
mov
in
movsb
sarb
mov
aas
scas
mov
test
mov
insb
in
xchg
les
jae
mov
jmp
sar
add
adc
inc
mov
adc
mov
outsl
movsb
repnz
mov
xor
ljmp
int
leave
gs
sbb
sub
leave
sub
inc
mov
xor
or
push
sub
cmp
andb
outsl
xchg
add
xchg
push
push
push
add
scas
cmp
repz
xchg
icebp
xchg
sti
sahf
cli
cmp
sub
mov
or
addr16
adc
fsts
aam
lods
inc
div
sub
mov
cs
lret
mov
mov
inc
test
jl
sub
pop
outsb
rcrb
ficoms
popf
fidivl
xor
inc
dec
ret
sbb
dec
and
cmp
dec
ss
test
sub
pop
dec
sub
in
sub
push
pop
xchg
inc
mov
call
jne
das
aas
mov
sbb
xor
add
andb
nop
mov
cwtl
mov
jmp
dec
push
dec
lods
and
cs
insl
movl
inc
test
jmp
jo
je
inc
adc
ds
pop
repz
cld
mov
into
pop
ljmp
les
lret
inc
adc
sbb
add
movsb
mov
mov
in
dec
shrb
adc
movb
or
cmp
xor
mov
pop
cmc
add
insl
outsl
lea
inc
dec
daa
push
insl
dec
cmp
test
mov
mov
sbb
das
inc
arpl
push
mov
cld
bound
lods
jle
jae
xor
shll
jae
pop
scas
mov
sti
cli
dec
mov
push
mov
pop
je
fwait
cmpsl
test
jmp
loope
mov
dec
ds
enter
sub
shrb
leave
leave
adc
outsl
and
add
imul
scas
fimull
mov
jmp
lret
mov
pop
pop
in
jns
mov
dec
dec
out
test
sub
int3
popf
fwait
cmp
xchg
and
jge
push
ljmp
jne
inc
pop
xchg
cs
adc
adc
pop
mov
lods
adc
inc
or
dec
or
movsl
outsl
jle
lods
in
push
mov
scas
outsl
xor
or
mov
dec
mov
filds
cs
mov
mov
stc
push
pop
cld
inc
push
or
inc
xor
sub
inc
mov
and
jge
dec
or
loopne
in
mov
inc
jg
loopne
mov
xrstors
lds
push
add
iret
lds
and
lock
add
push
pop
icebp
sahf
xor
jmp
push
arpl
jl
xchg
cmc
movsl
insb
cmp
cmp
mov
gs
gs
loope
mov
lret
cmp
mull
jo
pop
js
lods
jae
jl
ficompl
adc
int3
mov
and
fadd
jnp
pop
into
add
loopne
inc
out
hlt
imul
mov
dec
daa
in
je
cmp
pop
cmp
stos
add
inc
aam
pop
or
xchg
push
sbb
mov
adc
fimull
pop
out
cmpsl
js
int
cmp
fbstp
cltd
sbb
addl
scas
clc
repnz
pop
call
bound
adc
and
or
movzwl
rclb
mov
mov
push
jo
mov
pop
mov
mov
es
scas
cmpsb
imul
dec
in
test
adc
cmp
pusha
loope
xchg
xor
loopne
nop
int
sbb
pop
fs
testb
push
ret
mov
addb
je
and
imul
xchg
push
xchg
lods
les
lods
imul
imul
jle
cltd
out
es
loop
repz
xlat
or
mov
iret
adc
pop
test
push
inc
jbe
mov
sbb
rolb
jg
cmpsb
pop
mov
push
loopne
imul
lahf
out
ljmp
add
aas
js
lea
shll
loope
inc
aas
jg
mov
in
or
js,pt
aaa
in
sarb
xchg
adc
into
mov
or
or
jg
sub
movsb
jecxz
or
xchg
testb
mov
mov
jbe
xor
call
push
jl
xchg
test
cmp
sbb
in
pop
sahf
jl
fisttpl
xor
inc
lock
shrl
sub
pop
cmp
pop
loop
push
cld
adc
out
cmc
mov
mov
jbe
pusha
sbb
mov
xor
jmp
andl
adc
cmc
popf
mov
fcoml
decl
movsl
push
xor
pop
mov
dec
std
in
dec
nop
fldcw
mov
clc
adc
adc
dec
sub
push
int
cmc
xchg
imul
xlat
negb
jecxz
pop
ficoml
inc
sbb
sti
lea
and
fnstcw
jl
push
filds
mov
xchg
pop
add
ljmp
pop
dec
in
xor
add
cmp
int3
test
test
jae
pop
hlt
call
ss
xchg
dec
jb
jmp
and
lret
jmp
mov
adc
lahf
iret
push
cld
pop
cwtl
push
and
and
repnz
mov
loop
pop
jp
lret
jge
adc
jae
or
divl
add
pop
repz
jle
dec
cmp
inc
xchg
jb
push
and
leave
insl
sarb
cs
mov
fmuls
inc
scas
sti
test
ds
push
mov
ret
pop
cltd
repz
and
mov
mov
gs
xchg
int3
sbb
popa
mov
ja
add
aas
ja
imulb
pminsw
notb
leave
xchg
js
dec
fsub
in
out
push
sbb
lahf
insb
cltd
push
mov
and
int3
sbb
mov
adc
pop
shrl
sti
jbe
or
js
je
sub
stc
mov
fsubrs
rcll
lahf
dec
pusha
out
nop
arpl
cmp
xor
cltd
and
pop
add
dec
sbb
data16
mov
cmp
loopne
aas
into
or
sbb
dec
inc
push
arpl
xchg
mov
jg
test
sbb
arpl
aad
add
stc
mov
mov
mov
sbb
cmp
lahf
jg
sbb
rorb
xchg
imull
dec
loope
adc
test
cmp
iret
in
cmp
jg
inc
pop
movsl
pop
nop
cmp
data16
mov
sbb
decl
loope
in
test
lcall
mov
out
gs
insl
xchg
add
cmp
in
out
mov
jo
out
aaa
sub
jmp
cmpsb
inc
shrb
xor
inc
sysexit
sbb
ret
push
hlt
lock
out
add
xchg
pushf
mov
ljmp
ljmp
test
dec
ret
or
and
xor
je
mov
cld
mov
jmp
or
adc
aas
dec
sub
and
mov
pop
shlb
sub
lods
hlt
xlat
xchg
push
and
push
push
and
cmp
jo
xchg
das
xchg
inc
fdiv
daa
jae
sbb
xlat
js
out
pop
sbb
push
imul
data16
inc
das
xchg
xor
test
out
popf
inc
js
jl
fucomp
fstpl
negl
pop
loop
mov
icebp
fiaddl
arpl
ret
xlat
loop
mov
sbb
mov
xor
push
adc
pop
add
in
loop
clc
es
sti
nop
jmp
jae
sahf
mov
adc
xor
add
and
and
mov
xor
clc
nop
xchg
sbb
sbb
popf
cld
mov
lods
jecxz
and
outsl
cmp
dec
data16
imul
add
movsb
clc
jle
popa
ret
pop
add
repz
popf
jbe
push
pop
sti
movsb
ljmp
cmp
xchg
cli
or
inc
xchg
shl
pop
adc
lds
out
lret
scas
push
inc
push
sbb
cmpsl
ljmp
jecxz
test
pop
mov
das
pop
sub
mov
lock
rcll
fdiv
jb
popa
sarl
ja
push
into
push
mov
fildll
dec
push
inc
inc
dec
shll
jecxz
hlt
jecxz
popa
xchg
adc
jge
inc
daa
adc
cmp
out
adc
cwtl
lret
mov
push
scas
insb
mov
cmp
cld
xchg
xchg
sbb
int3
xor
outsl
inc
es
dec
lret
pop
add
mov
mov
mov
add
aam
scas
mov
mov
cs
xchg
lahf
mov
fisttpl
pop
or
rorl
mov
imul
dec
aas
test
pushf
jg
push
pusha
add
test
xchg
sub
xor
dec
cli
out
cmpl
aas
push
mov
mov
push
test
out
inc
adc
mov
in
jmp
dec
push
inc
mov
pop
xchg
out
in
xchg
fldl
jecxz
data16
sahf
rorb
inc
pop
imul
xchg
enter
mov
fwait
cmp
cld
adc
test
lahf
adc
pop
addb
aas
or
xchg
or
fiadds
cmp
mov
sub
loopne
ljmp
sub
push
xchg
dec
pop
sub
cmp
mov
mov
lret
stos
sub
repnz
sbb
and
cltd
ss
xor
mov
dec
mov
pop
scas
ss
xor
outsl
adc
cld
clc
sub
xchg
fwait
sbb
mov
push
add
movsl
or
and
imul
and
ss
push
int
jecxz
shl
aad
cmp
pop
cmp
jecxz
ljmp
sbb
or
jns
shll
xchg
fdivrs
jg
jo
pop
or
leave
jo
sub
fiadds
inc
mov
shll
add
mov
lock
mov
mov
xchg
popf
mul
mov
in
xchg
out
je
cld
insb
xchg
scas
dec
popa
xor
mov
stos
aas
push
sub
rolb
ja
xor
and
mov
cs
mov
stc
icebp
sbb
push
add
mov
ds
cli
xor
push
daa
arpl
pop
mov
adc
scas
test
cld
fs
xchg
js
push
sarl
cs
push
mov
lea
jmpw
orps
mov
je
in
icebp
ja
cmc
out
add
flds
cmp
push
fldpi
test
arpl
add
pop
or
movsb
pop
xor
mov
inc
dec
imul
das
pop
xchg
push
pushf
inc
cmp
jle
push
scas
xor
add
pop
enter
sahf
dec
pop
int
inc
iret
mov
sbb
and
xor
clc
adc
popf
lea
repnz
sbb
int3
dec
cld
pusha
insl
enter
repz
aad
lea
mov
adc
or
jl
call
mov
icebp
push
pop
mov
jns
jo
cld
pop
lea
lods
push
sahf
repz
es
fildll
jecxz
pop
shlb
mov
fiadds
fwait
mov
mov
dec
xchg
mov
outsl
push
xchg
inc
mov
in
sti
xchg
lods
or
pop
push
push
cwtl
out
arpl
push
or
loope
movsb
dec
addb
add
push
adc
fisubrl
jb
inc
out
jne
pop
mov
inc
mov
sahf
add
xchg
lods
push
mov
sarb
sbb
add
mov
hlt
repz
xchg
scas
mov
ffreep
xchg
adc
aas
jmp
scas
mov
lahf
les
das
and
sub
lahf
jl
mov
lret
ss
push
and
pop
or
jno
test
out
inc
out
add
dec
std
add
adc
mov
mov
lods
fnstenv
aam
es
mov
inc
into
frstor
xchg
inc
les
xor
push
push
enter
or
in
loop
or
pop
popa
mov
or
xor
jno
adc
pop
in
jg
or
sti
aas
jmp
test
sbb
testb
loopne
adc
push
test
nop
mov
pusha
or
adc
es
shll
imul
cmp
clc
rcrb
sti
ja
ret
fstpl
xor
fmull
cmp
out
loop
mov
lahf
inc
into
cmp
adc
cltd
sub
xchg
loop
rcl
pop
in
inc
out
cmp
jle
dec
push
mov
lock
mov
fisubrs
in
mov
jb
call
daa
push
xchg
pop
out
xor
icebp
pop
pop
jne
int3
xor
lret
inc
stc
outsb
pop
jle
movsb
lock
int3
and
cwtl
xchg
in
dec
dec
out
cld
ret
push
mov
mov
or
lods
xchg
fidivrs
repnz
mov
repnz
push
jnp
scas
jno
and
add
xchg
stc
ret
scas
das
push
sbb
or
in
stc
mov
fwait
test
sbb
jp
insl
jbe
jne
jns
mov
inc
push
sub
lahf
push
lock
jmp
rcr
add
inc
and
adc
movsl
push
add
sbb
fwait
fwait
test
add
jmp
cmp
pop
lods
adc
sbb
lcall
inc
pop
mov
rorl
mov
cs
sbb
dec
fists
pop
cs
outsl
bnd
and
xlat
mov
push
pop
lret
stos
mov
lods
xor
lods
mov
aas
add
test
mov
xchg
out
ss
cmp
mov
lock
mov
nop
nop
inc
mov
jmp
lods
mov
sbb
outsl
dec
pusha
xor
scas
jnp
in
fcmovnbe
push
insb
adc
cmpb
cmp
push
xchg
int3
scas
xchg
and
mov
inc
inc
out
push
lds
sbb
divps
adc
sub
jg
adc
xchg
cltd
xchg
loop
jle
sbb
notl
and
push
dec
imul
xchg
cwtl
iret
dec
and
icebp
jo
sti
pop
clc
push
sub
in
inc
lock
and
mov
inc
mov
imul
in
push
lods
push
xchg
lahf
sbb
adc
test
aam
pop
test
or
xchg
sub
sbb
or
test
push
mov
test
dec
movsb
rcll
mov
fdivp
mov
sub
xchg
cmp
push
inc
jecxz
into
sub
cwtl
ret
dec
adcb
aaa
ljmp
xchg
clc
pop
push
leave
mov
lods
xor
mov
and
sbb
dec
mov
daa
scas
sbb
daa
loop
pushf
xchg
push
dec
pop
jmp
push
aaa
mov
mov
repz
sbb
mov
sub
popf
xor
faddp
mov
inc
add
lods
out
xchg
js
xor
test
pop
dec
mov
jecxz
cmpsl
sbb
clc
adc
into
stos
stc
pusha
add
out
push
in
dec
rclb
rcrb
pop
or
lcall
pop
push
jae
pop
xorl
mov
cmp
xchg
xor
jbe
sbb
xor
cmpsl
cli
push
out
pop
pop
xchg
je
cmpb
cmp
in
cmpsl
shlb
and
dec
aad
mov
push
xchg
mov
and
cmp
lods
sbb
push
xor
add
fstl
inc
lods
lcall
test
adc
in
fcomip
aam
sub
lahf
orb
sar
cmc
out
test
rorl
js
jmp
mov
stc
push
ret
cmc
pop
pop
not
scas
inc
addr16
bound
lcall
ret
mov
mov
movsb
nop
push
stos
sbb
pop
out
sbb
push
aam
add
xchg
sahf
push
hlt
imul
mov
enter
mov
lret
adc
cmp
sahf
leave
add
xchg
das
and
pusha
cld
ja
sbb
dec
push
dec
dec
aad
inc
adc
lods
dec
in
and
arpl
ret
cmpsl
or
mov
inc
pop
fwait
add
mov
jmp
push
notl
mov
ds
loopne
pushf
bound
clc
nop
xor
pop
xchg
sub
sbb
push
not
outsb
xor
mov
test
dec
pop
or
push
fs
lahf
movsl
push
mov
xor
repz
insb
mov
mov
xchg
inc
pop
jg
mov
cmp
pop
shll
or
push
cmp
vpmovmskb
add
xorb
mov
cld
jnp
fbstp
test
mov
xor
gs
mov
into
mov
mov
lahf
je
mov
push
inc
test
in
mov
and
push
out
jae
pop
gs
insl
add
mov
pop
addr16
pushl
pop
push
pop
out
shlb
inc
xor
jno
rolb
adc
cmp
loop
sarb
xchg
nop
ljmp
int
or
daa
ljmp
in
arpl
iret
orb
cltd
mov
out
movsl
mov
mov
cwtl
push
call
xchg
enter
pop
mov
cmp
pusha
mov
xchg
cmc
cmp
or
into
pop
cld
jmp
mov
push
inc
lds
call
mov
and
xchg
mov
arpl
fwait
and
mov
cld
dec
arpl
daa
adc
into
pop
into
mov
mov
stos
push
cltd
mov
es
lahf
sbbb
cmp
mov
or
sti
int
es
in
mov
mov
movsl
mov
jb
pop
outsb
scas
jecxz
inc
sahf
mov
lret
pop
cmpsb
push
sub
std
and
jg
mov
mov
test
jle
rorl
andb
sbb
cmpb
dec
push
add
in
cmpsl
enter
lods
xchg
in
inc
dec
enter
aas
in
add
cmc
fidivrs
inc
xor
imulb
inc
xor
into
decb
hlt
dec
nop
adc
insl
in
sub
enter
sbb
pop
jno
test
movsb
jmp
outsb
mov
push
nop
rorb
push
mov
jb
es
sbb
fisttpll
aam
xchg
int
push
lods
fidivs
cmpsb
xor
ds
daa
loope
xor
cmpsb
mov
inc
je
std
cmp
aas
mov
rcrb
sub
and
sub
data16
das
fstps
jbe
sahf
mov
add
mov
add
push
cld
mov
add
push
icebp
sub
fwait
rcrl
sar
inc
jb
in
xlat
pop
cmp
sbb
jge
jp
xchg
add
mov
sahf
in
aas
je
sub
xchg
cs
subl
push
mov
test
jne
and
adc
enter
out
cltd
jb
sub
pop
jmp
into
pop
xchg
sub
dec
in
fs
cmp
data16
call
loope
fbstp
cmp
mov
push
aam
cli
cmp
pushf
aad
mov
sbb
cmc
addr16
aad
outsl
je
addb
flds
push
aaa
insl
pop
arpl
test
sbb
mov
hlt
cmpsb
push
jg
and
push
outsb
mov
lods
popf
sub
mov
add
adc
je
sub
push
stc
in
je,pn
sbb
mov
mov
rcr
push
pop
add
xor
sti
add
fistpll
mov
mov
xchg
sbb
mov
pop
jmp
lret
cmp
aas
xchg
lock
popa
mov
int
test
xor
cwtl
lret
mov
insl
dec
xchg
arpl
mov
shll
adc
cmp
and
cld
in
push
pusha
push
push
jecxz
out
out
sub
gs
repnz
aad
mov
push
or
clc
pop
jne
inc
jecxz
test
pop
jo
hlt
insl
sub
sub
fisubrs
push
jnp
or
cmp
jmp
sti
dec
mov
fwait
sub
clc
pop
call
or
cmp
jmp
sti
dec
mov
fwait
sub
clc
fucomi
jmp
jnp
mov
mov
push
mov
fwait
sub
clc
pop
call
or
cmp
inc
pop
sti
aas
sti
mov
xlat
lret
notl
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
mov
sahf
mov
out
icebp
fidivrs
jl
dec
push
pop
push
sub
sti
or
sbb
in
cld
mov
lods
out
mov
fidivrs
jl
bound
pop
push
sub
pop
jle
or
pop
ss
jl
dec
mov
sahf
mov
into
fisubrs
sub
push
or
pusha
adc
outsl
pop
lods
scas
fsub
mov
stos
iret
daa
sub
sbb
pop
mov
ss
pop
xlat
fwait
imull
sub
ds
call
inc
add
movb
test
push
xchg
bsf
in
lods
int3
jns
repnz
int
clc
mov
mov
mov
mov
test
inc
mov
lea
and
das
push
pop
icebp
mov
sbbl
dec
add
or
push
out
aas
jmp
fcmovnbe
pop
lods
shrb
mov
pop
jle
sbbb
imul
jns
and
gs
pop
test
dec
push
pop
pop
test
pop
or
fildll
mov
lods
out
clc
decb
out
ds
push
inc
push
dec
outsb
and
dec
js
sahf
rorl
ret
lahf
cmp
or
cmp
rsqrtps
in
scas
je
mov
fstpl
push
push
cmp
jno
or
pop
push
sahf
out
in
mov
out
mov
fisubrs
ds
push
pop
push
sub
cmp
or
sbb
in
scas
cld
mov
lods
out
mov
fisubrs
ds
push
pop
push
sub
cmp
or
sbb
in
scas
cmp
fs
fchs
and
inc
in
mov
sbb
int3
int
imul
jnp
cmp
add
dec
adc
or
bound
inc
jns
push
cs
sub
outsb
jecxz
lret
lahf
lock
adc
ja
jmp
test
movb
add
jmp
outsb
test
dec
inc
leave
fdivl
mulb
cld
xor
add
jecxz
lock
dec
pop
fpatan
adc
pop
shll
push
mov
popa
and
and
cmp
sbb
cmp
jb
push
or
testb
rcll
data16
outsb
loopne
lods
fcmovnbe
inc
push
aam
int
fldenv
or
jns
data16
data16
mov
sub
inc
into
adcb
ret
mov
dec
sti
in
ret
shlb
mov
push
xchg
fildll
clc
dec
mov
rcrl
sbb
lcall
bound
and
pop
sbb
loop
bound
mov
es
mov
daa
and
pushf
adc
fldl
cmpsb
shlb
out
repz
int
mov
pop
in
or
std
add
or
jae
sub
sbb
test
cmp
inc
lret
ljmp
mov
mov
lahf
sub
xorl
lds
lock
mov
push
iret
jle
sbb
idiv
cmp
divl
add
mov
dec
fiaddl
push
jecxz
cmp
sbb
int
pop
imul
inc
int
sbb
incl
es
mov
xchg
lcall
out
push
cld
and
cmpsb
mov
push
ds
bound
notl
jo
push
std
mov
mov
jmp
and
mov
xchg
repnz
cmp
and
dec
cmpsl
lds
mov
or
stos
imul
fcomi
mov
std
cmp
repz
add
pop
mov
int3
lock
adc
dec
inc
cwtl
sub
pop
sub
sti
iret
push
aas
nop
je
jns
imul
fsubrl
mov
and
jns
movsl
mov
adc
or
push
aad
sbb
inc
dec
dec
in
rcr
jmp
inc
cli
pop
lret
add
jno
imul
js
inc
cwtl
hlt
fucomip
div
xor
movsl
sub
sub
and
jne
xor
in
or
movsl
ss
out
xchg
cmp
xchg
jb
mov
adc
jae
mov
in
mov
dec
add
or
jmp
mov
repz
mov
pushf
mov
adc
push
mov
xchg
jbe
and
cmpsl
mov
cli
lds
jl
pop
test
daa
jbe
dec
xchg
call
outsl
mov
xchg
xor
shrl
lcall
popa
into
xchg
cmp
pop
pop
inc
mov
pop
int3
fildl
clc
ja
pop
sbb
cld
cmpsl
xchg
int
mov
outsl
cmp
imul
and
out
fldcw
stos
notb
cmp
inc
cwtl
xchg
sbb
outsb
adcl
push
outsl
inc
mov
daa
shl
sarl
cmp
xchg
jmp
pop
cmpsl
outsl
lret
lods
dec
aas
xchg
adc
mov
notb
insl
lods
bnd
gs
pop
fidivrl
int
adc
je
adc
insb
dec
cmp
mov
or
dec
add
test
add
imul
lods
push
lret
icebp
sbb
stos
mov
push
mov
std
dec
fnstsw
dec
hlt
or
jbe
jo
mov
sub
xchg
pop
mov
or
or
jns
out
sarb
jp
gs
dec
call
in
jne
add
mov
jnp
test
adc
jg,pt
adcb
sarl
cmc
add
shlb
xchg
scas
inc
insl
fstps
adcb
and
outsb
fidivl
sti
sub
fcmovu
pop
mov
mov
cli
loopne
js
icebp
test
scas
mov
out
out
enter
ljmp
das
xchg
mov
stc
inc
aam
hlt
cli
inc
and
sub
stos
mov
sub
faddl
stos
add
ljmp
adc
mov
cmp
fisttpll
push
and
sti
imul
gs
rcl
lcall
or
or
fsubl
mov
addb
and
loop
and
outsb
mov
dec
loopne
xor
into
enter
mov
rcll
sub
or
sub
ljmp
mov
xor
fwait
dec
sub
movntps
push
fists
adc
mov
xchg
int3
xchg
mov
push
mov
mov
mov
and
pop
dec
insb
xor
push
and
lahf
insb
mov
pop
mov
orl
inc
pushf
imul
adc
jo
push
mov
clc
dec
mov
loope
and
mov
dec
icebp
imul
lcall
icebp
repnz
int3
scas
test
pusha
cwtl
pop
stos
push
test
xor
xor
xchg
cmp
inc
push
sub
pop
mov
aas
dec
sbbl
lcall
mov
ret
lret
pop
cs
call
hlt
in
jg
add
int3
lds
dec
fiadds
jae
push
ss
movsb
test
repnz
out
add
test
inc
add
inc
aad
outsl
or
pop
sub
sbb
dec
cmp
movsb
mov
iret
pusha
lret
inc
mov
push
aaa
popa
xchg
push
rcrl
adc
inc
pop
push
jne
and
push
push
inc
insl
fstps
int3
frstor
xchg
adc
dec
lret
lret
mov
push
xchg
fwait
xchg
inc
addl
xchg
in
fldpi
xchg
sub
pop
call
loope
les
test
push
sbb
cs
loope
add
mov
mov
xor
sub
scas
inc
adc
in
outsb
outsb
out
xor
dec
pop
insb
nop
aam
mov
ljmp
and
push
push
lret
ja
insb
pop
mov
mov
lea
lahf
jmp
fadds
pushf
into
adc
scas
test
das
and
mov
mov
notl
ret
enter
cltd
je
in
push
inc
sub
dec
aam
stos
adc
data16
out
popf
cli
int
insb
pop
mov
in
xor
repnz
sbb
sub
scas
cwtl
loopne
jmp
xlat
sbb
push
repz
sbb
ja
push
push
or
inc
dec
adc
xchg
test
arpl
int
fimull
out
dec
mov
mov
ljmp
in
xchg
repz
mov
rcrb
mov
loop
mov
inc
push
ja
xchg
in
rcrl
clc
or
pusha
out
out
scas
fld
dec
cs
lds
sub
jnp
xchg
loope
test
push
mov
dec
pop
loope
sbbb
in
push
xor
rorb
xchg
cmp
cmp
jae
jnp
or
scas
xchg
mov
ret
sbb
pop
add
jb
mov
cmc
pusha
shll
aam
mov
dec
xor
ds
pusha
es
lcall
inc
inc
ljmp
push
adc
stos
and
inc
add
icebp
addr16
xchg
sub
lret
in
sbb
pop
aad
xor
push
jp
iret
dec
mov
sub
repnz
or
fisubrl
je
in
inc
cltd
adc
aaa
mov
imul
xchg
mov
pusha
filds
xchg
lea
imul
clc
adc
vshufpd
xor
xchg
fistl
pushf
shrl
xchg
mov
stc
imul
dec
and
into
pop
aaa
das
test
mov
mov
sar
xchg
jecxz
dec
push
push
leave
cmpb
es
xchg
cltd
jbe
imul
jns
push
jecxz
add
xchg
mov
dec
push
aas
lcall
adc
shlb
repz
inc
mov
pop
jne
inc
dec
push
pushf
cmp
inc
mov
push
ret
scas
mov
icebp
jnp
push
in
in
xchg
inc
push
and
or
int3
and
pop
mov
lds
push
sti
les
mov
push
push
ret
inc
mov
ret
xor
xor
and
pop
iret
cld
mov
fstl
cmp
stos
js
fbld
jge
cmp
popa
mov
pop
icebp
dec
sbb
add
mov
push
jae
int3
pop
sub
cli
pusha
push
test
fwait
ds
mov
xchg
cmpsl
mov
dec
xchg
add
cld
test
pop
jns
aad
jle
push
adc
pop
into
les
adc
push
xor
mov
and
inc
enterw
fldenv
ror
fs
push
mov
xor
mov
out
or
fdivl
movsb
push
push
sub
and
fs
push
test
jbe
mov
mov
mov
adc
adc
out
loopne
shlb
ret
cmpsb
iret
popa
in
push
repnz
and
jns
xor
loopne
out
mov
fildl
sbb
cmp
test
fiaddl
or
pop
push
inc
icebp
cmp
cmp
jnp
pop
arpl
mov
inc
ss
or
out
xor
jg
outsb
outsl
in
ss
aam
push
sahf
dec
pop
push
adc
pop
cmp
mov
call
ljmp
movsl
mov
push
mov
icebp
divl
cmp
insl
ret
iret
and
rclb
imul
aam
pusha
int3
push
or
xor
xchg
push
call
shrl
mov
popf
sbbb
mulb
aaa
cld
jg
pusha
mov
mov
lret
loope
je
cmpsb
sbbb
ret
push
ds
and
sub
jae
push
sbb
mov
lea
push
ret
mov
popa
mov
decb
out
inc
cltd
push
xor
sbb
enter
scas
mov
int
insl
jmp
rorb
mov
cmc
add
or
push
cmp
dec
mov
and
arpl
and
mov
sbb
imul
xchg
mov
lahf
inc
ss
hlt
icebp
repnz
mov
test
leave
iret
xchg
jp
cld
notl
dec
push
push
lcall
sti
mov
cld
stos
stc
rcll
xchg
cmp
xor
shlb
push
shlb
jns
inc
sub
mov
and
jp
nop
inc
add
mov
sbb
and
out
mov
mov
bnd
les
push
clc
or
mov
jecxz
and
out
aad
xor
loope
pop
xchg
notb
subb
gs
pop
sarl
pop
adc
imul
mov
jne
es
fwait
adcl
mov
dec
add
idivb
dec
push
or
cmp
aaa
mov
mov
mov
fdivl
cmpsl
push
cli
pop
fmuls
xchg
cmp
rorb
and
sbb
movsb
scas
lock
jno
dec
xchg
outsb
lock
fdivrs
mov
push
jnp
dec
push
mov
lock
jecxz
arpl
daa
mov
and
pop
mov
adc
aaa
dec
inc
or
jmp
push
cmpsb
mov
mov
aam
dec
xchg
dec
push
and
ret
mov
sbb
testb
into
clc
mov
pusha
mov
js
push
scas
sarl
shll
scas
jecxz
popa
pop
add
push
sub
stos
ret
imulb
xor
dec
fsts
mov
pop
rorb
jbe
jno
int
mov
dec
outsl
loop
xchg
icebp
jl
nop
jb
aam
lahf
test
rcrl
sbb
and
sahf
addr16
imul
es
outsl
sbb
bound
cmpsb
dec
lea
dec
cltd
inc
sbb
inc
ljmp
aad
dec
mov
inc
sub
push
inc
sub
add
lock
mov
xchg
mov
jbe
jl
loopne
mov
and
insb
push
js
jmp
xor
pushf
cwtl
outsb
mov
mov
rorb
and
sub
xchg
fcomps
xchg
cld
nop
lods
push
decb
lret
testl
sti
stos
xor
shll
push
dec
hlt
les
je
pushf
xor
aad
add
sbb
movsl
adc
cmc
dec
inc
dec
leave
ss
jns
pop
cmp
lods
sahf
mov
and
popa
xchg
mov
fucom
pop
jb
fildll
stos
mov
adc
jmp
into
xor
cmp
pushf
in
les
inc
adc
pop
cld
xor
and
mov
fnstcw
pop
push
aad
in
or
cmp
xor
ftst
lret
xor
les
pop
data16
sbb
out
lcall
jns
inc
pop
jge
ret
inc
mov
aad
jne
sub
fldl
mov
cmp
imul
out
xchg
es
out
push
xchg
sub
xor
mov
lret
xor
dec
ds
or
shl
dec
push
cmpsl
fsubs
pop
push
add
pusha
jno
call
dec
scas
add
sbb
pop
out
lahf
add
dec
xchg
cmc
mov
rol
lds
add
sub
inc
or
or
loop
mov
fdivrs
jl
std
ret
dec
jecxz
sub
cli
mov
cs
mov
cmp
mov
lock
sbb
mov
pusha
fstp
fwait
icebp
ds
fcompl
and
hlt
pop
jg
or
shlb
lret
xlat
mov
sbb
or
divl
cwtl
pop
and
pop
mov
outsl
das
imul
ret
fdiv
inc
lods
push
stc
into
dec
and
cmp
jo
jbe
jbe
les
aaa
xchg
cmp
popa
les
test
jmp
pushf
stos
scas
out
adc
add
iret
loope
mull
stos
xchg
imul
outsl
push
mov
adc
adc
push
aad
xchg
cmp
push
jl
out
int
or
cmp
pop
lods
fst
sub
or
xor
icebp
roll
or
cmp
push
lds
mov
repz
add
cmp
or
lret
adc
lret
sub
push
adc
jno
sub
rcrl
mov
and
inc
fildl
js
and
mov
ret
cld
iretw
mov
negl
inc
les
cmp
xor
xor
xchg
out
xchg
mov
xor
js
push
test
jb
sub
clc
les
seta
mov
ja
sub
iret
pop
rolb
inc
ja
pop
xlat
scas
bound
push
jo
sub
push
pop
adc
cs
fwait
cmp
mov
xor
xor
sub
imul
addb
xchg
insb
inc
mov
mov
jnp
in
stos
push
mov
fcoms
mov
xchg
sbb
out
sbb
fwait
das
pop
aam
popa
lcall
xor
adc
in
and
mov
jns
dec
jb
push
call
mov
out
ds
lea
pop
jecxz
add
test
fadds
push
clc
lods
cli
fwait
lcall
imul
cmp
mov
jbe
add
int3
imul
jg
out
dec
lcall
mov
scas
pop
jl
andb
int
imul
les
out
and
js
cltd
loopne
pushf
jno
mov
dec
jle
and
mov
loopne
into
mov
sahf
dec
adc
test
dec
rcrl
in
icebp
test
jge
cmc
and
popa
sub
dec
mov
cltd
and
cld
int3
sbb
push
loopne
cmp
ja
rcll
inc
imul
hlt
lea
aad
and
cmpsb
ljmp
and
fs
pop
inc
cmp
fs
xchg
mov
inc
push
mov
in
dec
add
outsb
inc
fwait
pop
decl
fidivrl
lahf
icebp
stos
nop
mov
mov
xor
xchg
sbb
cwtl
push
out
outsl
jmp
jp
dec
cmp
leave
testb
in
cmp
lods
or
ja
mov
pop
sub
loope
stos
int
inc
movzwl
or
mov
mov
and
xor
or
ret
pop
add
adc
rolb
push
inc
cmc
sbb
movsl
lods
leave
xchg
sub
sahf
push
and
mov
nop
outsb
es
int3
stc
jmp
ss
jge
mov
sbb
pop
clc
xchg
repz
fmuls
enter
xor
push
scas
ja
vdivsd
arpl
dec
ret
mov
shrl
outsl
mov
and
add
push
leave
cs
inc
and
es
adc
sahf
adc
movb
mov
push
jb
imul
fidivs
pop
mov
sbb
popa
cmpsb
ja
sbb
cmp
or
xchg
rcr
imul
push
popa
push
sbb
sbb
jp
fisubrs
inc
scas
mov
pop
ds
sbbb
test
loopne
mov
in
adc
fisttpl
dec
jno
inc
xchg
jecxz
daa
cld
inc
xor
test
scas
shll
sbb
or
loopne
js
outsl
out
icebp
pop
sbb
push
mov
and
das
bnd
mov
test
sub
jne
decl
movsl
out
pop
mov
mov
stos
adc
sub
in
push
rorl
inc
xorb
inc
repnz
lcall
in
xchg
insb
in
jge
sbb
pop
pop
arpl
push
insb
xchg
pop
sub
lods
cwtl
cmp
bound
inc
gs
pusha
gs
movsl
pop
cld
sar
dec
xor
adcl
cmp
jmp
inc
inc
adc
in
scas
and
add
stos
xor
add
out
orb
inc
out
xor
js
xchg
xchg
test
repz
add
push
xchg
inc
lahf
add
mov
and
popa
xchg
push
repnz
mov
lcall
mov
fldcw
mov
pop
adc
out
xor
fisubrs
jmp
adc
xchg
stos
cmp
js
mov
or
adc
in
mov
inc
xlat
add
aam
nop
xchg
mov
adc
mov
or
fscale
dec
loopne
sbb
add
inc
push
sub
sbb
add
sbb
ret
stos
mov
push
dec
cmp
mov
pop
adc
dec
mov
add
cli
nop
int3
outsb
mov
adc
add
xchg
push
out
dec
cli
imul
fadds
mov
xchg
aad
les
dec
lret
mov
shlb
jae
aaa
cmp
mov
push
push
dec
add
push
pop
xchg
cmp
inc
push
cmc
add
pop
xchg
xchg
gs
lahf
push
and
dec
jo
or
pop
mov
add
shl
xchg
cmp
std
rorb
nop
inc
pop
dec
jp
or
mov
in
jmp
cmp
pop
scas
je
setne
in
lea
scas
add
in
dec
xchg
pop
sbb
lret
lods
jmp
sub
int3
fisubl
popf
out
mov
out
jo
pop
in
mov
mov
xor
mov
decb
test
outsb
pop
pop
ret
adc
stc
rcl
add
sbb
jns
in
setae
jae
mov
loopne
xor
shlb
add
adc
fstpl
xchg
push
sti
adc
cmc
in
fbld
lea
push
aaa
jns
and
jnp
daa
or
mov
loop
lds
sub
jnp
cmc
mov
add
mov
and
push
insl
push
pushf
ss
jmp
dec
mov
dec
das
gs
or
js
mov
dec
pop
rorb
or
push
outsl
test
insb
mov
xlat
addb
dec
push
push
push
insl
sarl
xchg
inc
dec
jle
pop
dec
cld
and
add
push
mov
mov
out
std
lea
dec
mulb
lods
pop
decb
pop
fldenv
shrl
out
cmc
mov
fwait
inc
leave
loopne
lahf
ljmp
inc
add
jge
bound
add
cmp
and
pop
roll
ret
inc
xchg
fwait
push
loopne
jne
mov
out
sbb
pusha
or
xor
lret
inc
arpl
inc
cli
and
push
xchg
xchg
icebp
push
sub
jne
mov
leave
add
sbb
inc
dec
jo
sbb
test
outsb
adc
scas
dec
ret
jae
test
and
dec
cmp
lods
out
mov
fisubrs
ds
push
pop
push
sub
cmp
or
sbb
in
scas
cld
mov
lods
out
mov
fisubrs
ds
push
pop
push
sub
cmp
or
sbb
in
scas
fmull
fcompl
mov
popf
fisubrs
jl
inc
push
pop
push
sub
and
pop
hlt
scas
sarb
lods
out
lods
decb
adcl
mov
repz
mov
std
outsl
in
jg
pop
std
jno
jl
aas
pop
iret
dec
fistpll
insl
lcall
scas
sub
pop
std
outsl
in
jg
jge
aas
pop
iret
dec
fisttps
out
insl
lcall
scas
sub
pop
std
outsl
in
jg
jge
aas
pop
icebp
dec
orl
inc
pushl
outsb
sti
jae
inc
mov
mov
lahf
xchg
fidivs
sub
fcompl
out
ds
mov
jbe
inc
jno
or
xorb
pop
aaa
stos
jb
mov
loop
sbb
scas
roll
pop
inc
mov
pop
pushf
xchg
shrb
mov
sub
aas
mov
push
in
mov
mov
imul
lds
cld
pop
lret
dec
add
fsubl
cmp
sarb
andb
xchg
mov
mov
int3
nop
inc
pminub
scas
cmp
and
cmc
cmpsl
mov
les
in
mov
test
sub
and
imul
int
std
outsl
in
jg
jge
aas
pop
iret
dec
fistpll
insl
lcall
scas
sub
mov
pusha
les
dec
in
dec
sbb
dec
mov
addl
out
sub
mov
sub
push
xor
mov
cmp
sub
dec
fisubrl
sub
lea
mov
iret
dec
fistpll
insl
lcall
scas
sub
pop
std
outsl
in
jg
jge
aas
pop
iret
dec
fistpll
insl
lcall
scas
sub
dec
inc
popf
leave
scas
inc
lret
add
mov
xor
cmp
out
mov
mov
cld
pop
mov
outsl
add
cmc
in
push
popf
push
mov
jmp
ds
fistps
jge
sub
test
ret
pop
adc
call
sarb
push
arpl
repnz
xor
ljmp
loope
in
pop
sbb
fsubl
mov
dec
stos
mov
je
fildll
pop
hlt
or
mov
repz
insb
roll
adc
cs
jmp
push
xchg
test
stos
mov
shll
adcb
addr16
idivb
ret
clc
cld
sub
sbb
dec
int3
out
adc
popf
fs
mov
enter
in
fs
rcll
mov
adc
stos
inc
int3
or
push
dec
movsl
js
and
sub
xor
pop
push
lret
icebp
jp
imul
inc
adc
add
mov
addb
fwait
adc
and
add
outsb
mov
out
push
xchg
je
movsl
mov
dec
or
cmpsl
mov
jmp
dec
sub
push
jb
adc
loop
mov
data16
sub
insb
outsb
fs
jge
inc
mov
stc
or
rorb
mov
or
sbb
and
mov
push
lods
outsl
adc
fcomi
or
shll
stos
ret
lcall
and
adc
cmpsb
mov
or
les
bound
jg
or
pop
cmp
pop
mov
and
jnp
icebp
or
jo
mov
inc
sbb
mov
addb
aaa
add
mov
xor
add
jp
xchg
add
ret
dec
std
lea
fstpl
xor
loop
in
mov
mov
pop
in
les
xor
or
and
imul
push
mov
jp
xchg
mov
int3
out
cmp
push
hlt
mov
in
push
inc
nop
fnstenv
or
and
mov
inc
sub
cmp
mov
dec
add
push
xchg
xor
mov
setle
xchg
in
test
int3
es
loopne
repz
push
gs
xor
out
push
and
insb
pop
and
sti
imul
push
cmp
addr16
dec
outsb
mov
push
dec
clc
mov
push
adc
pop
mov
sbb
mov
sub
xchg
cltd
in
movsb
insb
dec
pop
mov
mov
fwait
mov
mov
test
hlt
cmp
xchg
inc
mov
arpl
les
pop
jecxz
std
in
sbb
insl
jne
dec
xchg
enter
pusha
out
mov
push
sbb
sub
xchg
add
gs
les
pop
inc
cmpsl
mov
loopne
mov
xlat
mov
xlat
mov
lock
ret
pop
jbe
mov
test
and
out
and
mov
pop
fs
movsb
inc
add
push
lahf
movsb
cmp
push
lret
mov
xchg
adc
push
pop
sbb
inc
adc
dec
xlat
hlt
dec
xchg
out
ja
cwtl
add
bnd
insl
push
sbb
cmpsl
gs
dec
push
cmc
rcrb
pusha
adc
jg
cmp
je
sbb
jg
xlat
xor
cmpsb
xor
or
adc
or
shl
and
pop
push
xchg
and
xchg
and
imul
pushf
cmp
ds
inc
cli
andl
inc
outsb
int3
cld
xorb
ljmp
cmp
pop
xor
add
add
neg
lret
divb
xchg
adc
and
sbb
jno
js
imull
dec
addb
mov
jp
fldl
fbstp
sti
sbb
jl
lcall
pop
cltd
iret
sbb
inc
pop
hlt
inc
mov
xor
sbb
inc
pop
fisubrl
dec
popf
std
mov
push
mov
xor
sbb
enter
hlt
xchg
cmp
fildll
jecxz
jge
arpl
movsb
out
mov
add
sub
or
aam
pop
inc
lret
mov
jp
cs
ret
sub
jns
mov
fld
fldenv
xor
neg
sub
sbb
or
fstpt
das
push
xchg
rol
std
ss
lahf
jns
icebp
cmp
xor
test
ret
or
int
adc
inc
clc
sub
push
ds
jb
sub
ret
lahf
rep
rcl
mov
test
das
and
xchg
jbe
loop
add
adc
inc
pusha
jl
cltd
pop
aaa
pop
jne
fadds
jb
mov
lahf
lods
dec
fldt
cmp
jmp
jge
imull
pop
xor
dec
cwtl
and
ljmp
mov
cmpsb
idivl
and
ds
and
js
sub
mov
daa
xlat
gs
add
rol
or
ret
daa
pop
pop
push
xor
cltd
mov
mov
cwtl
cmp
call
pop
inc
ret
and
sbb
sub
ja
ret
or
ss
sub
xor
xchg
lds
cli
ja
xchg
femms
jp
test
das
scas
aam
pop
and
jge
and
jmp
adc
or
xor
cltd
cmp
js
decb
popa
fs
jae
sbb
aaa
notl
daa
adc
jns
cmpsb
popa
or
inc
pop
or
add
mov
lock
push
xchg
pop
sbb
cs
ja
push
inc
push
sbb
inc
jecxz
stos
dec
push
inc
cmp
mov
and
inc
mov
imul
negl
mov
xlat
cli
pop
sahf
stc
pop
imul
test
lret
sbb
mov
test
hlt
jle
inc
cmc
sbb
xchg
xor
inc
inc
leave
test
dec
xchg
lret
dec
pop
or
lcall
or
jecxz
and
mov
adc
pop
dec
sub
in
daa
xor
or
xchg
test
sti
mov
in
dec
outsl
fcompl
adcb
in
psubw
cli
push
lds
sbb
imul
jno
es
shll
inc
jp
or
scas
sbb
in
fistl
mov
add
add
mov
icebp
js
cmpsl
mov
pusha
mov
xchg
cld
dec
jno
repz
xchg
mov
sbb
push
pop
in
shr
pushf
xor
mov
xor
lcall
rorl
pushf
push
je
mov
outsl
aaa
leave
pop
rcll
add
jmp
mov
addr16
inc
sub
outsl
fs
pop
mov
test
mov
cmp
sbb
pushf
dec
fs
xor
fsubr
mov
aad
test
loopne
or
out
add
cmp
sbb
fwait
jne
and
ficoms
rol
nop
test
loope
fisubl
hlt
xchg
jnp
push
fsts
lea
test
sub
lahf
jno
xor
test
into
mov
stos
fbld
mov
mov
ss
push
xchg
mov
scas
dec
mov
lock
xchg
clc
out
mov
cmp
or
inc
scas
dec
or
lahf
adc
cld
sub
lahf
xor
jbe
xor
pop
popa
xchg
xchg
xor
aaa
es
dec
inc
push
scas
bnd
add
pop
xor
cwtl
cld
insb
rol
rolb
fwait
mov
push
data16
mov
popf
jbe
cmp
or
movsl
sub
scas
testl
outsb
dec
jo
or
int3
sub
dec
and
add
sub
scas
out
pop
sbb
push
inc
add
dec
and
lret
in
and
jmp
jl
adc
push
push
add
mov
and
pop
imul
pop
sbb
push
fimuls
inc
mov
pop
pushf
xchg
jb
push
in
testl
sbb
fistpll
and
and
and
aad
inc
addr16
mov
outsl
and
dec
xor
adc
mov
call
inc
or
push
nop
dec
adc
jo
jae
jecxz
dec
int3
test
jae
sar
inc
pop
dec
sub
ss
pop
sub
push
test
and
jp
lahf
push
lea
push
xor
and
popf
lods
or
jne
xor
mov
dec
dec
mov
movsb
pop
mov
cmp
ja
in
rcrb
popa
mov
ds
fnstcw
lods
push
div
jnp
xchg
movsl
in
adc
xlat
lods
test
cmp
adc
insl
sub
or
repnz
enter
sahf
into
xchg
addr16
ja
or
fbstp
add
test
jne
in
movsl
xchg
repnz
addr16
jge
or
push
mov
or
and
push
cmp
repnz
outsb
dec
jns
test
cmpsb
into
xor
fisubs
push
pop
jg
lret
adc
jno
cld
inc
push
xor
ret
insl
cwtl
mov
test
jp
ss
es
in
xchg
dec
stc
xchg
fimull
dec
add
pop
movsb
addr16
lcall
test
cli
stos
mov
clc
pop
lods
nop
iret
pop
mov
outsb
and
rol
jmp
inc
and
adc
add
icebp
mov
lcall
icebp
outsb
mov
add
lea
jl
and
mov
inc
popl
aas
out
sub
xchg
movsl
or
mov
lret
jae
mov
pop
push
adc
pop
out
or
cmpsb
je
mov
mov
add
rclb
push
mov
adc
inc
xor
les
mov
mov
fcoml
scas
dec
add
lahf
or
inc
jecxz
push
aaa
pop
fidivs
fadds
or
jecxz
sbb
loop
jb
enter
adc
and
dec
lahf
sub
stc
js
iret
and
or
jp
rclb
dec
and
cwtl
pop
or
lcall
mov
jecxz
sti
cmp
dec
adc
inc
fidivl
and
jp
sub
fnstcw
nop
jb
sub
in
add
scas
jnp
adc
xchg
add
pop
sub
xchg
mov
leave
xchg
and
pop
mov
jge
mov
push
ja
mov
mov
push
push
inc
int
pop
mov
cli
and
dec
or
dec
shrl
pop
lret
inc
repz
cmp
push
sarb
sbb
pop
jg
mov
inc
aad
adcb
jg
dec
mov
sbb
xor
loope
out
fimull
shlb
sub
fstl
push
push
aam
push
in
mov
iret
arpl
arpl
shll
mov
sbb
arpl
ja
gs
adc
and
xchg
mov
cli
mov
xor
cmp
xchg
aas
push
test
std
xor
inc
andb
rolb
pop
xchg
mov
out
imul
add
stos
add
jnp
adc
jecxz
outsl
movsb
rdmsr
jae
add
pextrw
mov
lods
stc
lock
test
mov
mov
xor
gs
mov
in
pop
cld
scas
mov
cmp
xor
mov
sahf
push
adc
daa
clc
mov
sbb
cmc
cwtl
dec
mov
jno
and
cld
ror
mov
and
mov
and
mov
loope
or
fldl
test
fbld
fists
shll
cwtl
inc
scas
scas
shll
sbb
std
cmp
add
call
lea
cmc
mov
sub
lea
add
mov
dec
js
jo
shll
lods
dec
cmp
fistps
aad
testl
mov
nop
lods
fldenv
fstpl
leave
outsb
fisubl
pop
aaa
lret
mov
ret
hlt
mov
aas
loopne
jg
mov
repnz
cmpsl
clc
pop
add
sti
and
pop
mov
out
pop
int
xchg
loope
out
loope
pushf
dec
inc
enter
mov
cmpsl
or
testl
dec
xor
cmpsl
xchg
dec
iret
test
clc
mov
lods
rcl
or
stos
andl
stos
pop
pop
mov
js
pop
jns
sahf
push
or
mov
or
stos
push
xor
out
repz
sub
iret
iret
daa
xchg
add
mov
out
jo
imul
out
clc
shrl
jnp
bound
cli
mov
inc
stos
xor
test
mov
or
inc
imul
or
dec
and
in
or
mov
data16
push
mov
int
insl
rorl
je
jae
jno
repnz
or
mov
int3
fistpll
movsl
pop
subl
jg
xchg
jle
mov
orb
lock
in
add
add
pop
loop
shl
inc
push
pop
dec
push
or
xor
adc
inc
fistpll
mov
ss
in
pop
mov
in
push
scas
jne
add
mov
cs
icebp
int3
and
cwtl
js
adc
loopne
sbb
popf
cwtl
jge
dec
mull
cmp
lret
jl
aam
inc
pop
xchg
cmp
inc
sbb
enter
mov
prefetch
pop
lahf
push
add
and
test
push
insb
dec
jno
inc
in
aam
daa
add
fimull
xor
clc
movsb
inc
or
test
in
bswap
insb
rol
gs
outsl
imul
out
cwtl
fsubrl
sub
and
mov
or
out
push
test
mov
mov
lahf
roll
xchg
fmuls
adc
loope
dec
sub
jmp
test
and
adc
push
outsl
pop
dec
mov
jae
divl
cltd
inc
fisubrl
pop
xchg
mov
rcr
clc
xchg
pop
inc
and
add
imul
gs
cs
pop
shrb
dec
nop
mov
andb
xor
insl
push
je
stc
cmp
xchg
shrd
fbstp
jp
cmp
setne
int3
cmpsb
push
pop
lahf
aas
inc
ret
inc
or
add
test
repnz
das
sbb
jo
adc
push
jae
jmp
test
inc
ja
pusha
jle
mov
lods
adc
mov
adc
stc
push
ret
rcll
arpl
and
add
fisubrl
test
into
xchg
push
imul
scas
stos
cmpsb
shll
xchg
iret
sbb
std
repz
nop
sub
scas
sbb
dec
fucomp
daa
sahf
cmp
fmull
cli
ja
lds
adc
cmp
cmp
sub
push
and
repnz
push
repnz
mov
pop
mov
adc
mov
add
and
or
es
mov
aas
jae
test
push
rcrb
lock
inc
sbb
xchg
bound
mul
cli
dec
mov
mov
adcb
jge
iret
sbb
mov
insb
cmp
sub
add
jmp
loope
test
fiaddl
adc
in
sbb
push
es
test
loopne
cmp
cwtl
pop
sub
es
test
sub
aam
addb
pop
std
addr16
adcb
xchg
fldcw
xchg
xor
mov
jae
dec
mov
rcr
adc
add
pushl
and
sbbb
ss
xor
leave
data16
jp
clc
jl
bound
sbb
lahf
mov
popa
mov
sub
movsb
xchg
sbb
dec
jnp
inc
out
movsl
sub
in
fbld
fadd
jle
cmp
aaa
xor
push
jne
xlat
mov
out
into
lods
lock
lret
or
sub
js
fnstsw
sbb
mov
ljmp
mov
xorb
rolb
push
mov
push
scas
jl
loop
daa
fiaddl
push
or
jno
dec
xchg
sbb
dec
mov
clc
mov
fwait
je
jge
icebp
sbb
or
imul
and
lock
out
pusha
sbbl
add
add
int
es
cmp
dec
cli
rcrl
test
movsb
inc
enter
and
outsl
mov
cld
jae
lret
mov
out
and
sub
insb
mov
daa
insb
repz
cmpsb
push
xor
icebp
sub
fnstenv
js
jno
xchg
cmp
xor
testl
imul
or
rorw
faddl
xchg
ljmp
sub
jge
ja
pop
das
cmp
push
mov
leave
xor
push
inc
je
jmp
fs
fs
bswap
pusha
or
cs
dec
ret
cmp
cmp
jno
out
rcr
mov
pop
dec
mov
clc
outsb
stos
push
jmp
inc
sub
decb
xor
das
jle
cmp
popa
mov
out
pusha
cli
sub
cld
jmp
mov
gs
mov
fcmovbe
ret
push
fucomi
lcall
fnsave
ss
aaa
loop
rcrb
aam
and
lods
test
push
in
sbb
push
adc
sahf
adc
lds
push
jns
add
arpl
shrb
xor
ficoml
rclb
cs
inc
push
inc
popa
xor
int3
mov
gs
lcall
jle
or
cmp
in
push
inc
imul
pop
add
int
rcll
mov
push
stos
movsl
push
adc
outsl
dec
or
xlat
and
cwtl
add
mov
push
lea
loop
sahf
push
sbb
sbb
push
test
loopne
das
sbb
lds
daa
cwtl
out
push
mov
in
xchg
out
jl
xor
movb
push
mov
sahf
call
sub
cmpsb
adc
sar
xor
popa
mov
cmp
and
or
mov
adc
push
inc
xchg
lret
mov
add
popf
popa
fimuls
mov
fidivs
stc
lcall
add
mov
cs
mov
sahf
test
inc
test
in
mov
adc
sbb
dec
mov
ja
pop
int3
sub
dec
cwtl
jmp
push
hlt
push
cmp
xchg
mov
inc
pop
pop
dec
notb
sbb
jnp
pop
jo
std
mov
pop
xor
inc
out
mov
sbb
add
out
in
scas
shll
lcall
jg
int3
dec
mov
aad
popf
insb
sahf
ret
pop
leave
lret
pushf
pushf
push
xchg
lods
scas
out
push
sub
rorl
adc
pop
out
add
add
scas
cmovl
jl
mov
test
loopne
jl
test
jg,pn
jo
insl
or
int3
cmpsl
pavgb
int3
inc
js
xor
push
sbb
jae
dec
outsb
xchg
test
das
in
jg
test
insl
push
movsl
jns
dec
out
in
dec
lcall
mov
mov
jae
push
leave
push
inc
mov
push
mov
into
jle
in
push
push
jnp
sub
xor
loopne
mov
add
imul
nopl
clc
xlat
sarb
sbb
xchg
mov
stc
dec
dec
push
mov
loope
clc
mov
push
movsb
xchg
cld
inc
and
xor
repz
mov
insb
imul
mov
rolb
rol
dec
das
fwait
dec
dec
or
jno
call
dec
daa
data16
fidivrs
into
push
dec
out
add
or
shlb
call
jne
sarb
movsl
cmp
out
rcrl
add
sbb
pop
enter
mov
pop
lea
xor
lcall
xor
repnz
and
fnstcw
in
test
lods
fldl
int
fidivl
insb
fwait
xor
jns
lock
mov
pextrw
stos
pop
fcoms
and
mov
xor
out
popf
cld
cmp
push
sti
sbb
mov
and
adc
dec
rolb
mov
test
lods
or
test
iret
mov
andb
xchg
pop
add
mov
jae
sub
mov
add
pop
xchg
in
imul
cmp
in
imul
ret
and
jno
lcall
fstpt
inc
jnp
rorl
inc
shrb
imul
jns
mov
sti
mov
fmulp
lret
jnp
lock
xor
icebp
mov
or
hlt
or
and
or
adcb
jge
bound
int
mov
push
daa
lods
rcll
or
dec
pop
sbb
inc
lods
test
call
sbb
cmpsl
mov
fwait
jne
xchg
loop
or
pop
jb
stos
outsl
pusha
jnp
pop
scas
lahf
xchg
or
ret
int
jno
pop
cmp
push
hlt
lods
add
sbb
dec
sarb
int3
fdivrl
and
fnstenv
pop
inc
outsb
in
jg
jge
aas
pop
iret
dec
fistpll
insl
lcall
scas
sub
pop
std
outsl
in
jg
jge
aas
pop
iret
dec
fistpll
insl
lcall
scas
sub
pop
std
outsl
in
jle
jge
aas
pop
iret
dec
fidivrs
insl
lcall
scas
sub
pop
std
outsl
in
jnp
jge
rcrb
jne
out
insl
mov
test
push
rolb
mov
cltd
or
or
in
pop
sbb
dec
clc
pop
enter
dec
mov
cltd
fs
js
dec
jmp
mov
cmp
imul
cltd
lcall
fsts
pop
stc
int3
or
pop
sbbl
or
je
or
jno
insb
jmp
jae
out
ljmp
lods
or
dec
int3
loop
es
fcmovb
adc
leave
clc
pop
vpmullw
pop
jge
out
cmp
pop
pop
dec
movsb
nop
enter
mov
jge
push
mov
inc
sbb
pop
mov
imul
in
in
hlt
int3
push
mov
xchg
push
fdivs
idivb
fsts
dec
clc
cmpsl
leave
arpl
js
std
xor
xor
inc
lock
ret
adc
mov
cmp
fnstsw
xor
xchg
or
adc
mov
xchg
adc
sbb
gs
stos
or
imul
cltd
or
add
dec
jmp
and
sub
pop
cli
imul
fdivrs
mov
cmp
pop
lods
test
jmp
in
dec
std
dec
lcall
aaa
gs
pop
cld
jp
jns
add
or
pusha
mov
pop
xchg
daa
xchg
pop
mov
int
shrl
dec
fdivrl
out
pop
stc
test
mov
cmp
dec
clc
pop
enter
sub
sbb
dec
jmp
mov
cmp
dec
clc
pop
enter
sub
fdivrs
mov
cli
mov
jmp
mov
jne
sbb
adc
jle
outsb
test
jecxz
jmp
clc
popa
das
decb
lea
add
mov
xor
es
daa
sti
in
out
dec
cmp
adc
int
mov
pop
mov
add
xchg
jns
mov
dec
pop
pop
xchg
xchg
cmp
aad
push
cmp
pushf
cltd
into
push
inc
xlat
fistl
insl
lods
jmp
popf
in
lahf
lods
fnstcw
mov
stc
or
push
jmp
fisubrs
into
push
jge
pop
sub
fnstsw
outsl
cmp
sbb
cmp
adc
lock
jne
sub
lds
fwait
lret
fdiv
aaa
jmp
mov
call
sbb
ret
pop
mov
sub
lret
jnp
mov
adc
mov
lods
nop
popa
sbb
addl
xchg
ficomps
daa
push
adc
pushf
sar
sub
and
inc
cmc
shr
dec
pusha
jb
pop
loopne
loope
aas
repz
rol
ljmp
adc
mov
mov
outsl
movsb
mov
in
push
mov
or
lret
xchg
mov
icebp
add
imul
push
sub
mov
cmp
sbb
out
adc
mov
lahf
pop
clts
std
and
and
psraw
fs
je
clc
pop
call
sub
pop
out
sbb
pop
mov
dec
data16
mov
cli
dec
mov
mov
andl
loop
imulb
shl
cli
cmp
arpl
mov
adc
out
mov
ds
mov
xchg
xor
sub
and
mov
push
sbb
call
mov
and
xor
out
es
mov
mov
sarl
scas
cs
test
fadds
mov
and
sub
popa
pop
cmp
mov
jbe
data16
push
iret
lods
add
ds
inc
cmpsl
loope
daa
push
mov
xchg
cmp
cmp
push
mov
lahf
xchg
subb
adc
in
jne
mov
shrl
sbb
ret
out
ror
sub
jbe
jo
stos
mov
into
jns
or
dec
or
fnstcw
cmpsb
movsl
push
dec
mov
jge
jae
pop
in
bound
mov
and
nop
xchg
lods
xor
repz
cmp
xlat
mov
pop
pop
sbb
lahf
xor
add
mov
mov
adc
push
test
cwtl
cmp
push
inc
xchg
pop
orb
rcrb
aam
jne
sub
cmp
sub
xor
mov
push
data16
inc
cmp
jmp
or
inc
pusha
mov
or
int3
sti
mov
or
sbbl
std
xchg
fldcw
jmp
inc
or
push
mov
push
and
in
push
push
rclb
sbb
lahf
ja
xchg
or
testb
les
xchg
mov
mov
xchg
inc
cld
pop
dec
cmp
adc
adc
push
mov
lds
loope
roll
and
jp
cmp
adc
pushf
pop
mov
push
pop
pop
push
icebp
push
fimull
dec
fcoms
shl
inc
test
faddl
pop
push
rorb
sub
pop
scas
push
fimull
lods
test
adc
lahf
js
or
xchg
and
cmpsl
std
jae
push
sub
rdmsr
push
iret
pop
lret
and
popa
cmp
fcomi
jno
lahf
xchg
imul
push
lahf
data16
call
test
flds
sbb
or
dec
adc
inc
das
lods
clc
mov
xchg
jl
jns
pop
sti
test
mov
jecxz
inc
ret
insb
and
ds
jnp
addr16
and
mov
xchg
pop
lret
insb
pop
lods
xor
dec
fildl
jmp
pop
clc
push
dec
gs
fwait
leave
add
test
push
xor
mov
sarl
in
xor
mov
push
jl
sub
mov
fcmovnb
pop
mov
gs
adc
inc
rolb
inc
xor
push
sbb
add
inc
aas
xor
sub
inc
cmp
or
loopne
fs
into
or
fsubrs
rorb
repnz
lods
in
pop
rcr
and
mov
push
in
sbb
xchg
jle
cs
push
mov
cli
lahf
cmp
xchg
jg
stos
sbb
decl
mov
push
jnp
arpl
and
ljmp
mov
xor
in
jae
mov
dec
pop
mul
mov
pop
popa
jno
cwtl
ja,pt
icebp
stc
xchg
and
leave
xchg
push
add
clc
mov
xchg
sbb
imul
idivb
ja
mov
adc
push
xchg
sbb
inc
lahf
add
int3
mov
in
rcl
out
add
out
loopne
sub
mov
pushf
popa
sahf
inc
or
pop
int3
hlt
sti
mov
dec
subl
pop
xor
ja
cmpsl
fistpll
in
rorb
pop
sbb
cmp
sub
and
dec
adc
popl
mov
popa
test
and
mov
ljmp
pop
mov
icebp
sbbb
inc
xor
shlb
cmc
push
fisubrl
sub
add
pop
ds
sarb
in
sub
loop
mov
adc
xor
dec
jl
dec
sub
jb
dec
fidivl
sti
cmp
sbb
cs
test
fucomip
lret
add
scas
pop
adc
dec
mov
dec
dec
test
mov
outsl
adc
sub
inc
mov
sarl
inc
repz
lahf
mov
out
lret
xchg
push
in
movsb
jb
loop
ss
jns
fsub
push
repz
pop
int3
out
std
imul
mov
and
pushf
xor
inc
mov
jecxz
scas
aas
adc
mov
inc
inc
pminub
cmp
cmpsl
cmp
test
cmp
mov
and
push
jecxz
into
test
jecxz
mov
xor
mov
add
xchg
sbb
fcompl
mov
mulb
push
sub
nop
dec
scas
adc
sub
sbb
pop
mov
lods
dec
div
lret
or
or
imul
nop
stos
mov
adc
mov
mov
sarl
fcoms
add
mov
stos
jle
fcoml
or
mov
mov
xor
mov
das
mov
adc
sub
test
or
push
jg
sbb
mov
or
ret
repnz
push
mov
sub
mov
xchg
inc
loopne
lea
repnz
mov
mov
xchg
fsts
movsl
idiv
out
fadds
lcall
out
stc
mov
push
pop
fldl
lret
push
inc
cli
shlb
ficoml
movsl
lods
and
fmuls
test
icebp
adc
cmpsl
mov
mov
push
add
cmpsb
xchg
mov
mov
icebp
xchg
xchg
push
dec
outsb
pop
in
sub
pop
shlb
xor
xor
call
js
dec
xor
mov
lret
std
sbb
mov
adcl
lret
mov
pop
mov
add
jle
cs
fdiv
xchg
xchg
mov
adc
sub
mov
ret
ret
frstor
ja
xor
mov
sbb
leave
shrb
mov
imul
mov
and
pop
xchg
sbb
sbb
mov
addr16
or
push
movsb
aam
sahf
adc
pop
lcall
lock
loope
mov
fmulp
sub
cmovp
in
jmp
push
inc
rcll
sub
jmp
lret
jb
ret
push
mov
leave
push
sti
mov
mov
hlt
nop
ret
sbb
sbb
push
mov
dec
ljmp
lcall
jno
fldt
push
and
clc
ljmp
or
cmp
les
repz
or
popa
andl
dec
sbb
dec
fidivl
stc
test
js
ljmp
adc
popa
mov
movl
cltd
xchg
mov
fs
xchg
lods
lret
dec
inc
sbbb
pop
icebp
enter
xchg
fildl
pop
iret
mov
add
cmpsb
push
shlb
rorl
fwait
or
jecxz
push
sub
mov
mov
out
das
sahf
loop
jns
inc
mov
mov
cmc
adc
mov
dec
sbb
cmc
movsb
pusha
jno
lcall
jg
mov
imul
and
das
xchg
mov
mov
je
mov
jae
sbb
pop
add
int3
fdivs
sbb
aaa
into
mov
add
adc
jbe
fildll
sbb
movsl
ljmp
xorb
lods
aad
and
jmp
test
test
scas
jnp
mov
enter
out
sub
xchg
dec
popf
shl
mov
mov
inc
ja
int3
loopne
dec
fwait
add
pop
rclb
pushf
and
pop
sub
cmp
loop
scas
fidivl
xchg
aad
xor
xchg
lock
sub
mov
add
sbb
jp
pop
movsb
push
xchg
mov
mov
es
fs
pusha
xor
pcmpeqd
xor
xchg
mov
jns
sbb
mov
fwait
cmpl
xchg
ficompl
int
sub
daa
sbb
lret
scas
cmpsl
and
mov
popf
jns
add
dec
popa
cmp
clc
lahf
add
cmc
pop
sbb
and
sahf
inc
arpl
jo
xor
mov
jp
and
jns
xchg
sbb
cld
daa
dec
cmp
enter
add
dec
stos
xchg
push
lds
insb
inc
cmp
jmp
push
jb
xor
popf
shll
lods
mov
cltd
fwait
mov
call
fldcw
shrb
popf
outsb
jnp
ja
iret
push
xchg
repz
loope
xchg
fdivrl
leave
int
mov
jmp
popf
add
insl
icebp
dec
xlat
gs
xchg
sub
pusha
scas
call
mov
dec
adcl
gs
dec
cmp
ds
pop
lahf
push
cld
shll
dec
cmpsb
dec
insl
popa
cmp
mov
ret
ja
push
lea
mov
std
inc
inc
cmc
mov
or
test
idivl
mov
push
out
mov
inc
outsb
xor
xchg
std
pop
leave
fwait
pop
mov
dec
and
enter
lahf
push
sbb
adc
in
fstl
inc
pop
pop
mov
lcall
aam
clc
stos
arpl
mov
repnz
cld
xchg
or
xlat
mov
pop
cmc
jno
into
mov
sub
cmpsb
idivl
xchg
fs
xor
je
pop
mov
out
mov
push
sbb
xchg
xchg
jmp
faddl
hlt
aam
push
ffreep
xchg
push
repz
loopne
std
sub
pop
xor
arpl
int3
lahf
or
pop
repnz
lcall
dec
jg
xchg
cmp
add
stos
outsb
and
sarl
lods
mov
mov
mov
mov
cmp
bound
dec
add
jns
stc
sub
dec
test
nop
mov
clc
add
sbb
adc
xchg
cltd
or
or
jle
pop
sbb
mov
push
pop
jbe
pop
mov
jg
add
sub
add
shll
mov
ljmp
mov
test
or
sbb
lock
cmp
adc
and
imul
mov
mov
cli
jge
lods
fistpll
out
pop
sti
xor
sub
adc
and
andl
mov
add
out
mov
incb
neg
mov
out
jmp
outsb
push
jnp
negl
les
xchg
cli
pop
pop
stos
jo
inc
xchg
jmp
lret
xor
or
xchg
pop
fwait
stos
mov
in
fidivl
jae
sarb
daa
add
outsb
pushf
push
mov
in
mov
mov
mov
add
out
or
hlt
fdivp
mov
test
nop
mov
daa
mov
in
std
fiadds
add
add
shll
fwait
dec
movsb
pop
cld
rcrb
sti
pushf
sub
ja
aad
sbb
sub
fxtract
add
fidivl
xchg
shlb
sub
push
shlb
int3
add
ret
cltd
lods
int
push
jo
xchg
xchg
sub
and
jbe
arpl
je
jae
add
adc
push
aad
sbb
jns
add
jns
pushf
paddd
adc
inc
mull
jecxz
cmpsb
test
in
xor
push
adc
lahf
inc
test
call
sbb
sbb
adc
hlt
out
xchg
jl
arpl
push
and
ficomps
mov
jmp
in
mov
adc
arpl
bound
add
iret
lods
fwait
add
addb
xor
loope
mov
test
pop
mov
es
int3
sbb
insb
mov
gs
rolb
mov
scas
jbe
fistpll
add
jo
push
popa
or
fcoml
js
xchg
cmpsl
out
or
pop
adc
cmp
adc
out
sarl
xlat
jl
adc
in
cmpsl
mov
add
adc
aas
lods
call
subl
sub
shll
mov
in
jns
stc
in
cld
rorl
aaa
pushf
adc
cmp
mov
test
mov
or
jp
sbb
jge
imul
lock
fists
sbb
mov
add
lock
sbb
ljmp
cmp
pop
pop
sub
imul
mov
clc
dec
sbbb
ret
cmp
pop
mov
pop
fsubl
lock
out
imul
inc
or
and
cwtl
popa
jmp
or
mov
std
inc
jno
jge
jmp
inc
cmp
repnz
lret
jle
pop
lds
lcall
aaa
pusha
outsb
jo
cld
iret
outsl
incl
aas
xor
xor
sbb
lahf
cld
sbb
cmpsl
lcall
daa
arpl
fxch
xor
inc
pushf
fdivrl
fnstsw
dec
pusha
ds
not
push
in
lret
sbb
xchg
int
and
jl
push
mov
cmp
mov
nop
adc
lods
xlat
jno
mov
pop
out
or
notb
cld
fcomps
push
mov
imul
lret
ss
mov
mov
and
xlat
sbb
int
or
and
sbb
cmp
lea
jae
pop
cs
jle
fistpl
int
orb
adc
testb
mov
stc
mov
mov
xchg
mov
ss
ret
sti
std
in
add
jecxz
addl
aad
lds
mov
cmpsb
jle
jae
in
arpl
push
sbb
mov
outsb
lahf
inc
pop
xchg
and
mov
cmc
insl
jno
sub
jg
and
add
enter
scas
out
xorl
pop
fstp
int
add
mov
in
inc
mov
and
add
fisttpl
sub
int3
rcrl
mov
popf
rcrl
mov
bound
pop
mov
addr16
cmp
push
jecxz
jp
scas
add
into
iret
or
push
test
jbe
addl
mov
pushf
aaa
mov
out
loopne
je
and
push
add
scas
xchg
sbb
js
scas
sahf
mov
adc
inc
mov
mov
mov
xor
nop
cmpsb
clc
call
movsb
dec
rolb
std
data16
add
xor
mov
push
push
jmp
xchg
data16
jcxz
sub
cmpsl
xor
and
rorl
mov
mov
push
sub
push
pop
mov
pop
hlt
es
push
sub
dec
dec
mov
leave
jbe
ljmp
orb
lret
push
cmpsb
push
sub
sahf
jno
mov
inc
notb
xchg
push
enter
cmp
sub
add
xor
add
mov
push
mov
cmp
mov
clc
addr16
outsl
push
inc
or
push
cmc
outsl
sti
add
or
rep
add
mov
test
arpl
pushf
stos
mov
rcll
loope
imul
xchg
out
add
fstpt
lods
dec
adc
jne
adc
lahf
cmpb
sub
stos
mov
outsb
ret
mov
out
mov
scas
in
xchg
inc
push
sub
dec
enter
add
xlat
into
sbb
jne
fstl
mov
push
std
pop
test
sbb
movsl
mov
cld
pop
adc
or
sub
pop
dec
gs
jne
enter
movsb
insl
pop
pop
dec
xor
dec
inc
das
or
fimuls
and
std
mov
mov
pop
cs
out
push
int3
push
sbb
or
pop
insl
test
jmp
scas
xor
mov
add
insb
push
stos
mov
test
shrl
aad
and
fldl
sbb
jl
sbb
fwait
mov
mov
jns
or
inc
cli
adc
mov
push
cmp
out
cmp
and
jae
iret
int
pop
pop
fildll
jp
ds
mov
pop
lret
clc
push
call
int
xchg
cmpsb
ss
mov
push
stc
dec
adc
pop
push
shr
xchg
mov
dec
mov
or
mov
daa
or
outsb
or
ja
or
sbb
push
cmp
fsubrl
sub
pop
jg
adc
lcall
mov
adc
or
sarl
stc
adc
mov
push
xor
imul
or
lahf
je
das
scas
cmpsb
rcrl
push
pop
mov
jle
push
dec
mov
inc
lret
mov
jg
leave
mov
adc
call
jmp
daa
mov
cld
cltd
cmp
xchg
mov
mov
rcrl
jge
iret
clc
xchg
xchg
ret
std
test
in
jecxz
js
adc
into
cmp
cmp
jnp
lea
lds
pop
loop
add
pop
xchg
lcall
daa
dec
and
divb
sub
loop
sbb
push
mov
scas
xchg
ffreep
or
lock
mov
or
addr16
sub
mov
sub
sub
mov
icebp
ljmp
sbb
sub
mov
dec
lods
jb
cmp
rol
dec
push
sub
jns
sub
movsl
cmp
mov
lcall
insl
aad
jle
xchg
fwait
push
fs
pop
daa
inc
cmp
mov
dec
insl
mov
repnz
std
test
push
jnp
je
jnp
xchg
and
ret
cmp
out
pop
inc
ds
pop
cmp
fistl
or
sub
pushf
pop
setle
fdivp
sti
mov
into
push
or
and
subb
push
inc
lahf
cmp
enter
int3
push
sbb
mov
dec
ss
stos
shlb
mov
mov
pop
sbb
inc
xlat
mov
push
and
mov
dec
sbb
test
loopne
push
mov
xchg
xlat
mov
stos
faddl
jp,pt
dec
pop
rcll
jbe
in
pop
jl
addr16
dec
int
jae
insl
sbbl
rolb
xor
inc
adc
xor
mov
jle
mov
ds
adc
mov
ret
js
es
jg
and
xorb
test
pushf
mov
inc
rcrl
jne
adc
mov
popf
fimuls
dec
xchg
outsb
push
subl
sbb
or
insb
xor
ret
xchg
push
xor
nop
pop
mov
add
mov
push
pop
aaa
cmp
push
pop
in
fsubs
mov
stos
pop
push
sar
movsl
aas
movaps
gs
popf
repz
mov
icebp
loop
push
jno
pop
adc
push
mov
adc
lods
lcall
xchg
push
inc
jns
inc
and
push
sub
and
xchg
aad
sti
call
adc
mov
cwtl
dec
push
outsb
jle
jo
ss
pop
add
sbb
lds
loopne
lock
lret
leave
loop
jbe
aam
jl
cld
mov
inc
imul
xor
rorb
std
jb
sbb
lods
push
add
and
dec
test
js
dec
jmp
mov
cmp
dec
clc
pop
enter
sub
sbb
dec
jmp
mov
cmp
dec
clc
pop
enter
sub
sbb
dec
jmp
mov
cmp
dec
call
jns
mov
test
push
stc
test
inc
mov
sub
cmpsb
aaa
xchg
daa
xchg
mov
rcr
adc
sahf
shr
mov
jle
dec
jo
push
das
and
push
adc
loopne
lock
rcr
scas
mov
sahf
mov
das
dec
pop
push
cs
xor
add
adc
inc
ss
pop
fisubs
mov
jle
das
and
and
push
push
jb,pn
je
movsb
mov
xchg
mov
jne
lods
push
out
jmp
popl
btc
clc
stos
cmp
call
xor
mov
cmp
jmp
sbb
roll
shll
out
imul
and
jo
lret
outsb
popa
cs
sbb
scas
nop
sar
int3
aam
xlat
sub
lock
les
shrb
inc
sahf
sbb
dec
mov
insl
mov
adc
add
inc
xchg
mov
mov
insb
push
inc
or
push
mov
push
and
push
pop
decb
inc
mov
add
jbe
jbe
pop
xchg
xchg
xor
cmp
jne,pt
in
pop
jp
insb
ror
mov
shrb
sbbb
dec
inc
pop
insb
cs
fimuls
sbb
and
lods
nop
mov
leave
cmc
sti
xlat
push
and
add
in
xor
jb
arpl
mov
mov
mov
mov
out
cmp
adc
outsl
dec
xor
add
xchg
rclb
lods
lods
mov
mov
jle
dec
inc
pop
push
and
xor
add
adc
loopne
lock
rcr
scas
mov
sahf
nop
outsb
pusha
jle
dec
inc
pop
push
and
xor
add
adc
loopne
cmpsb
inc
mov
mov
cld
sub
jns
daa
or
roll
les
imul
ljmp
sahf
push
push
jle
ss
ds
dec
lret
pop
ret
mov
pop
dec
and
jae
arpl
mov
insb
jmp
aad
jg
or
pop
sbbl
ss
int3
std
push
jle
xchg
sub
popf
dec
out
mov
sti
pop
insb
das
pop
inc
lds
andl
je
sub
push
fstps
mov
imul
sbb
ljmp
std
sub
aas
mov
arpl
push
xlat
pop
stos
cwtl
mov
jne
lock
xor
in
mov
push
std
dec
or
pop
iret
mov
inc
imul
dec
jl
stc
adcb
or
ds
mov
cmp
mov
mov
inc
lock
jmp
repz
repnz
sub
dec
jl
sarl
mov
cld
jecxz
cltd
aam
cwtl
dec
dec
and
or
leave
aaa
xchg
loopne
sub
push
sub
loop
jb
xchg
ret
mov
rcrb
iret
clc
dec
std
into
jmp
jne
ljmp
cmp
xlat
lret
dec
clc
jecxz
lock
int3
test
mov
fcmovnbe
out
sahf
sets
or
mov
mov
sbb
shrl
jns
aaa
into
and
push
popf
lea
in
clc
inc
xor
xchg
mov
pop
mov
push
repnz
rcrb
push
cmp
sbb
loope
dec
imul
test
rorl
mov
push
inc
in
fwait
push
int
ds
xchg
adc
out
sub
or
xor
jo
mov
jae
rolb
push
or
arpl
repnz
push
push
push
inc
inc
stos
dec
mov
sbb
sub
cmp
pop
xchg
hlt
clc
test
sbb
mov
jae
inc
mov
pop
mov
movsl
jae
lret
test
loopnew
or
dec
jbe
xchg
lret
int3
insb
push
sub
out
cltd
loope
lcall
mov
int3
cmp
out
mov
mov
cmc
cmovl
fadds
fs
mov
iret
lea
out
pop
pop
xlat
xchg
sbb
push
nop
mov
decb
inc
jecxz
inc
adc
pop
sub
cmp
jl
pop
jl
add
lods
in
outsl
ret
je
sarb
cmp
je
sub
and
jmp
lret
push
ret
sub
dec
pop
cwtl
and
lods
daa
xor
mov
shrb
mov
push
fwait
and
sti
mov
ret
cs
cmp
xchg
xchg
inc
xchg
mov
sub
aas
dec
pop
daa
cmpsl
adc
xchg
lds
out
popa
dec
aaa
add
sarb
add
pop
repnz
fwait
add
int3
lods
repnz
adc
cmp
stos
mov
mov
or
jl
lods
inc
lods
cmp
xchg
fistl
add
sub
lahf
movsl
ja
loope
mov
pop
xchg
push
mov
push
orb
mov
repnz
sbb
jbe
iret
lods
dec
icebp
sub
xchg
iret
xchg
or
jmp
add
and
cltd
cs
sub
jb
and
xchg
ds
or
xchg
inc
pop
xor
pop
cmpsl
push
pushf
add
outsb
and
cmpsb
mov
adc
inc
cmpsl
dec
jmp
lods
pop
daa
cld
call
mov
xchg
stos
and
adc
xchg
out
mov
dec
cmp
mov
adc
sbb
inc
sbb
mov
mov
ss
dec
pop
cmpsl
inc
push
leave
repnz
cmp
pop
idivl
cmpsb
cmpsb
roll
push
movsb
ds
xchg
mov
test
sub
adc
loope
daa
sub
mov
in
jmp
xchg
xchg
pop
dec
mov
hlt
pop
dec
dec
mov
nop
cwtl
push
mov
adc
fldt
pop
cmp
inc
call
leave
aad
dec
scas
popf
fnstsw
sub
jb
pushf
mov
insl
mov
in
pop
add
dec
mov
fucomip
mov
sbb
mov
pop
mov
pop
insl
out
outsb
fildll
into
push
lea
aad
pop
adc
ds
adc
add
in
cmpsb
jne
adc
dec
vmovaps
mov
into
punpckhwd
xchg
jae
arpl
add
aas
fbld
mov
jae
push
xchg
loop
lahf
xor
outsb
adc
es
fdivp
arpl
cmpsb
stos
test
int
jo
aaa
nop
daa
mov
decb
sub
sbb
mov
repnz
pop
outsb
orb
setnp
inc
sbb
outsl
sbb
lods
inc
das
mov
mov
fildl
movsb
std
pop
cmp
pop
fs
dec
mov
aad
cmp
adc
xor
inc
sub
cs
xor
xchg
mov
sti
pusha
inc
mov
dec
sub
jge
cmpsb
enter
add
movsl
cli
mov
mov
rcll
fucomip
inc
mov
sbb
ljmp
shlb
push
daa
nop
pop
sbb
outsb
jnp
mov
lea
mov
fdivrs
xchg
add
dec
sub
fisttpll
sti
mov
notl
lahf
jl
xor
sbb
xchg
inc
push
test
das
cmpsb
and
sbb
inc
shl
pop
repz
roll
push
insb
rcl
or
pop
cmp
gs
aad
mov
jp
les
push
mov
movsl
mov
fldenv
lahf
rcrb
add
repz
icebp
jg
sub
and
xor
xchg
int
push
mov
ret
jo
jae
stos
sbbl
or
call
mov
popa
adc
and
lea
mov
jge
inc
outsl
push
xchg
cltd
into
int3
or
mov
mov
xchg
arpl
and
xchg
add
jecxz
push
mov
inc
or
cwtl
rolb
lcall
pop
mov
push
and
scas
jnp
xor
sub
or
sbb
test
add
test
rcll
mov
aaa
jl
sbb
pop
rcrl
rcll
lret
repnz
inc
xlat
rol
pop
insl
mov
inc
jge
push
aad
jne
insl
repnz
subl
aam
add
mov
hlt
cltd
cmc
loop
adc
hlt
sahf
adc
test
jnp
xchg
aas
pop
sbb
pop
adc
cmpsl
pushf
mov
movsb
loopne
mov
ljmp
cmp
paddb
scas
fcmovnu
pop
jle
cmp
jl
or
imul
jns
push
jg
call
aaa
jge
addr16
into
sub
enter
xor
lahf
or
cs
push
jmp
mov
push
pop
les
aas
mov
xchg
adc
mov
jle
repz
stos
test
sub
push
push
sahf
mov
loopne
adc
or
je
sub
mov
ret
bound
sub
lret
fstpl
subl
push
sbb
inc
push
push
in
pusha
mov
sbb
cmp
pop
shlb
sbb
std
add
call
xchg
jecxz
and
sub
cmp
or
mov
jmp
pop
gs
es
vpunpckhbw
jmp
add
jle
imul
xchg
and
les
repz
cmp
xor
dec
lahf
enter
jecxz
out
ljmp
in
mov
mov
or
js
mov
mov
adc
sub
xor
adc
int
clc
adc
sbb
andps
aas
stos
dec
leave
adc
dec
insb
cltd
sti
mov
sub
jmp
sbb
ret
xor
into
mov
jl
adc
adc
jle
into
mov
mov
das
pop
push
jp
push
cmp
cmc
test
jb
imull
dec
mov
sub
sbb
add
xlat
popa
pop
sahf
lock
xchg
mov
mov
jmp
push
xchg
mov
dec
in
stc
shll
sub
mov
or
inc
sbb
test
ds
bound
push
daa
xchg
out
or
sbb
jae
sub
ja
ljmp
test
add
xchg
fimull
xor
mulb
push
pop
mov
dec
mov
pop
xor
or
hlt
dec
mov
push
in
stos
push
add
icebp
test
mov
fchs
mov
lret
push
xlat
notb
sbb
adc
adc
dec
sbb
mov
ss
cli
es
test
ss
jne
push
mov
shrb
cmp
xchg
adc
cmpsl
mov
mov
push
mov
outsl
bound
dec
push
jne
pop
push
enter
push
stos
adc
fists
xchg
push
mov
cld
sbb
push
icebp
addb
sub
inc
or
mov
aad
shll
xchg
xor
icebp
xor
fs
test
pop
mov
scas
fwait
mov
jmp
movb
cld
jecxz
xchg
push
pushf
scas
rcrb
jle
jns
int
mov
pop
mov
push
xor
aas
and
adc
lock
mov
in
bound
xchg
push
dec
pop
lds
mov
mov
ret
popa
mov
cli
or
cld
scas
push
pop
adc
add
cs
cs
mov
test
inc
xchg
pop
fnsave
loopne
in
push
jns
inc
insb
int3
fidivl
jnp
inc
mov
clc
mov
cmp
jno
movsb
add
cs
mov
jo
jle
adc
mov
or
int3
call
rolb
icebp
mov
stos
inc
adc
scas
add
inc
repz
jno
in
aam
mov
daa
inc
sub
mov
data16
adc
pop
ds
add
and
push
fiaddl
or
rorb
jp
inc
jp
jno
or
adcb
cmp
push
jo
xchg
enter
jne
ret
lods
scas
insl
test
cmp
jnp
mov
xor
loop
cmpsb
adc
int3
cmc
aam
dec
push
test
cmp
xor
inc
and
mov
xchg
out
stos
mov
sbb
cmpsl
xchg
arpl
sbb
ret
test
sti
fsubl
pop
int3
push
mov
in
cmp
jmp
mov
jbe
dec
pusha
fs
and
jno
lcall
push
insb
mov
stc
mov
jns
dec
xor
jecxz
fists
fiaddl
add
cltd
repnz
pop
enter
mov
mov
pop
and
leave
fs
cmp
dec
daa
jb
dec
andl
sbb
stos
sub
xchg
xchg
rcrb
add
fsts
loope
mov
int
les
mov
or
lret
dec
push
out
and
mov
sbb
addb
sub
xor
mov
push
mov
add
jbe
adc
gs
cld
out
push
or
test
jmp
popl
iret
sub
loopne
cmpsb
in
aas
notl
add
mov
stos
loopne
sbb
es
fs
pop
addr16
int3
mov
or
neg
mov
js
pushw
mov
adc
pop
sbb
pop
rorl
xchg
mov
int3
test
outsb
subl
mov
lcall
pop
int
mov
hlt
push
adc
jnp
xchg
push
loop
cmp
es
sbb
fsubr
or
mov
fcompl
and
and
ljmp
jp
aam
and
shr
sub
rcr
mov
and
mov
cmp
push
cmpsl
sarl
mov
xchg
sub
pop
xchg
cmp
push
sub
fidivl
cmp
inc
int3
cmc
sub
in
cltd
mov
je
imul
and
push
push
movsl
xchg
xor
jge
xchg
adc
cltd
popa
lock
je
mov
xor
or
push
mov
repz
push
jns
cmp
decb
insl
dec
inc
xchg
mov
push
pop
xlat
cmp
ss
popa
pop
xchg
icebp
push
das
jmp
lahf
inc
nop
dec
aam
xchg
cmpsl
or
ss
pop
addb
jge
fdivrl
and
into
sbb
arpl
dec
dec
jecxz
test
mov
lock
sub
lret
dec
adc
push
stos
repz
divb
or
push
jp
lea
xchg
nop
mov
xchg
jl
jge
inc
scas
jecxz
lahf
das
flds
mov
pop
lods
or
stc
mov
mov
fsubrl
pop
add
testl
in
add
filds
les
inc
sahf
lret
adcl
pop
mov
push
repz
mov
adc
or
rcrb
aad
dec
data16
shl
mov
insb
rclb
or
cmpb
sbb
repnz
xchg
imul
push
add
dec
mov
jle
mov
pop
dec
push
cmp
shr
out
cmp
mov
or
imul
fs
xor
mov
mov
repz
pop
or
xchg
lret
xor
xchg
test
inc
sbb
sub
fadds
push
add
loop
shl
jae
cmc
shll
scas
fldl
xchg
insb
mov
or
or
or
leave
cs
sahf
pop
xchg
repz
inc
add
xor
outsb
outsb
sub
add
and
add
pop
xorb
in
aas
inc
mov
dec
fldcw
pop
lods
mov
daa
mov
push
dec
mov
out
xchg
cmp
xchg
lods
inc
mov
jne
idivb
fcoml
repnz
pop
movsl
lret
fsubrl
out
test
and
add
add
std
and
je
arpl
daa
leave
aad
nop
sahf
push
stos
and
xlat
push
in
imul
or
jge
dec
xchg
hlt
mov
fistps
jmp
lods
int3
loop
dec
iret
into
mov
iret
inc
dec
sub
mov
adc
and
xorl
add
jne
addb
xlat
sub
negb
and
test
ficompl
add
jae
pushf
jno
jns
push
popf
enter
lea
in
push
lods
jae
lods
dec
xchg
subl
push
pop
adc
fsts
jge
mov
jae
fsts
jl
sbb
lock
or
int3
aas
imul
push
xchg
fmuls
fcomps
or
lret
mov
pop
ds
fsubl
ss
xchg
mov
adc
sbb
aam
cmp
std
shlb
mov
stos
insb
xchg
mov
jb
cmp
stos
je,pn
dec
xor
mov
dec
ficompl
aaa
shrb
mov
mov
cmp
push
aad
xchg
test
aaa
scas
rorl
xchg
mov
jo
mov
mov
ja
or
lcall
test
add
xor
add
lahf
cmp
dec
cmpsl
and
fwait
jae
mov
mov
leave
outsb
push
xchg
rcll
aam
or
lret
lret
mov
add
test
mov
nop
inc
mov
inc
popf
int3
dec
mov
inc
stc
xor
ret
movsb
lcall
mov
pusha
ja
mov
mov
dec
cmpl
xor
popf
jnp
mov
lret
daa
lea
mov
aaa
std
xor
out
imul
mov
dec
sbb
out
cs
aas
xchg
nop
cmpsb
push
inc
loope
sbb
dec
cmp
popf
sub
fldcw
imul
dec
leave
push
cld
mov
and
adc
outsl
dec
sub
lret
adc
roll
sbb
imul
cltd
loop
cltd
or
sahf
push
adc
mov
and
data16
repnz
jb
jae
cli
inc
sahf
mov
les
add
fstpt
xchg
mov
mov
fsubr
into
pop
xchg
lods
mov
and
in
aad
pushf
pop
ja
push
out
mov
std
pop
repnz
int3
lock
fwait
lods
inc
fxam
pop
hlt
outsb
mov
mov
fsubl
push
mov
xor
jge
xchg
addr16
loop
icebp
dec
push
pop
push
add
fidivrs
xor
bound
xor
xchg
sub
adc
push
pop
outsl
cwtl
cmp
mov
and
leave
mov
repnz
in
inc
mov
push
jnp
cmpl
stc
and
push
aad
and
jae
sti
les
rorl
add
push
xor
or
shrb
or
stos
out
xchg
movsl
cmp
and
adc
jmp
mov
push
aam
stos
pop
daa
or
push
outsl
jo
pop
sar
jmp
jnp
lcall
mov
dec
pop
sub
pop
dec
idivl
iret
in
fdivrp
mov
cmc
push
cmp
loop
push
mov
loopne
lods
adc
jnp
lret
cld
jg
xor
push
mov
cmpsl
lahf
lods
test
pop
stos
xor
hlt
jg
jp
fisubrs
dec
mov
mov
ljmp
stos
xchg
push
pop
out
cmp
movl
xchg
dec
xchg
insl
or
fnstenv
jmp
in
iret
cmp
xchg
leave
sub
fiadds
xor
jl
xchg
jecxz
mov
fisubl
insb
mov
fstl
scas
fldenv
mov
sbb
dec
lock
test
cltd
rep
add
cmc
sub
inc
mov
push
lcall
or
mov
addl
push
add
add
icebp
repnz
insl
dec
js
shr
fisttpll
lret
or
loopne
dec
aas
je
cmp
fisubrl
push
inc
add
aaa
mov
daa
nop
xor
add
icebp
jl
call
push
cmp
push
xchg
leave
and
or
mov
or
xchg
in
pop
fists
push
or
repz
js
orb
pop
js
std
cmp
testl
pop
push
repz
movsl
mov
sbb
xchg
cmp
fistps
mov
imul
jl
pop
cwtl
mov
and
push
push
xor
add
mov
ret
lahf
and
movsl
inc
xchg
cs
xor
leave
sbb
lret
mov
out
lahf
je
stc
test
stos
mov
ljmp
shlb
jae
xchg
cmp
push
mov
js
sbb
lret
dec
sub
add
xchg
mov
daa
stos
bswap
push
and
dec
xor
jmp
ret
jns
movsl
xchg
sub
je
inc
fwait
sbbb
mov
sub
xchg
cmp
pop
pop
arpl
xchg
adc
push
adc
mov
das
iret
jl
xchg
sbb
cmpsb
push
pop
cmp
push
cmpsl
jno
cltd
popa
cs
negb
out
mov
ds
in
inc
ljmp
mov
and
out
addb
lods
arpl
push
in
inc
out
ljmp
dec
jp
sub
pushf
ret
push
xchg
addr16
mov
pushf
in
mov
outsb
adc
sti
gs
pop
outsl
sub
mov
nop
xor
fcomps
push
gs
outsl
jbe
popa
cmp
imul
and
cmp
scas
cmpl
jns
mov
xchg
jno
and
mov
push
out
in
inc
addr16
jns
pushf
sbb
dec
sbb
scas
mov
call
subl
or
inc
push
xchg
cmpsb
and
and
mov
adc
cli
add
cmp
loope
movsl
jge
repnz
cld
cmp
mov
mov
dec
or
sub
mov
das
xchg
jmp
lods
xor
mov
dec
inc
adc
fs
push
and
dec
shrb
popw
cmc
pop
popa
xor
roll
verw
lods
add
xchg
push
mov
lret
jg
mov
in
mov
repz
sbb
popf
inc
pop
push
or
ds
xchg
test
or
jg
repnz
pop
iret
xor
push
enter
fucom
sbb
jne
push
nop
nop
xchg
jmp
jmp
push
fucom
jmp
push
fxch
jno
xor
insl
xor
add
aas
sub
iret
jl
leave
push
push
sar
das
sbb
or
xchg
das
repnz
scas
mov
cmp
enter
adc
mov
repnz
cwtl
pop
mov
popf
mov
clc
mov
fisubs
std
movsl
cmp
xor
pop
cmpsb
sarb
pop
iret
mov
push
cmpsb
xchg
insl
push
pop
imul
aas
jle
stos
fcomps
subl
xlat
gs
pop
mov
mov
push
scas
push
add
xchg
xchg
fisttpll
lea
leave
jg
jle
xlat
jp
iret
imul
mov
mov
js
sub
inc
mov
add
int
and
lock
scas
mov
sahf
nop
outsb
pusha
jle
dec
inc
pop
push
and
xor
add
adc
loopne
lock
rcr
scas
mov
sahf
nop
outsb
pusha
jle
dec
inc
pop
push
and
xor
add
adc
in
dec
fcomp
aam
mov
sahf
nop
outsb
popa
jle
dec
inc
pop
pop
cs
xor
or
hlt
out
add
adc
and
nop
scas
mov
sahf
push
outsb
lahf
jle
in
pop
daa
pop
pop
mov
icebp
js
push
in
mov
add
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
pop
imul
aaa
mov
and
sbb
movsl
add
adc
add
xor
and
push
lds
je
fs
xchg
pop
test
mov
movsb
push
aam
dec
ja
addr16
xchg
and
xor
and
cmp
inc
divl
fs
push
push
test
sbb
cmpsb
dec
call
addr16
mov
movsb
addr16
add
fs
push
icebp
add
inc
dec
mov
mov
mov
fildll
cmp
out
fwait
sbb
inc
cmp
mov
cmpsb
adc
scas
push
dec
pop
pop
xor
push
xlat
xchg
jne
jmp
les
ret
cld
cld
push
cmpsl
outsl
rcrb
test
divl
xchg
movsb
add
aam
lods
mov
sbb
xchg
pop
fsubrs
push
mov
inc
orl
cmpl
inc
inc
adc
repz
and
pop
movl
push
out
jo
fcomps
test
insb
lret
cmp
push
xchg
mov
ficoms
scas
inc
aam
les
jle
mov
mov
mov
jnp
bound
mov
adcl
dec
xlat
cmp
add
pop
aad
cmpl
lcall
mov
out
xlat
add
or
ret
pop
in
pop
mov
les
addr16
adc
add
xor
and
push
movl
pop
test
mov
movsb
push
aam
les
addr16
adc
add
xor
and
push
movl
sub
pop
push
mov
dec
and
scas
mov
insb
pop
push
mov
push
mov
mov
lds
xor
xor
xor
add
mov
lods
jb
int3
andl
ljmp
enter
mov
stos
frstor
popf
cld
insl
mov
fwait
dec
mov
out
jae
add
sbb
shlb
mov
ja
sarb
cmp
outsb
es
xchg
test
xor
xchg
popf
std
jae
xor
test
lods
cmp
fisubrl
sahf
mov
aad
cli
mov
or
xchg
int3
mov
xchg
mov
and
and
loop
xor
inc
pop
mov
hlt
inc
imul
lock
pop
push
mov
pop
push
ljmp
icebp
dec
cmpsb
push
rcll
xchg
jae
outsl
movsl
pusha
hlt
push
jl
adc
xlat
jmp
sti
loop
test
xchg
inc
leave
pop
nop
enter
std
dec
pop
or
test
jle
cld
outsb
loop
pop
inc
cmp
mov
fimuls
dec
in
add
das
jns
and
adc
pushf
movsl
lea
sbb
test
adc
pop
adc
dec
mov
pop
push
in
mov
jmp
jae
stos
data16
shr
inc
sbb
sbbb
lods
sub
movsb
dec
outsb
lods
and
jmp
inc
ds
inc
mov
mov
mov
ljmp
or
dec
lret
popf
lods
inc
mov
dec
mov
mov
std
rcrl
dec
jae
mov
js
les
pop
push
nop
jle
sub
mov
aad
fstl
pop
int3
cli
stos
add
add
push
mov
mov
fiaddl
jmp
push
je
xor
cmpsb
stos
stc
int
jg
aad
inc
ds
mov
inc
jns
push
adc
cmp
cmp
adc
add
push
sbb
or
movswl
bound
sub
inc
int3
inc
and
jo
das
push
roll
mov
outsl
lods
and
push
jecxz
pop
push
push
xchg
loopne
rcl
ja
pop
std
hlt
jae
xchg
repz
iret
xor
loop
sarb
rcr
push
mov
add
aam
sbb
pinsrw
cltd
mov
cmp
inc
cmp
mov
and
in
pop
jns
jns
notl
xor
std
push
fstl
lds
leave
cmp
pop
hlt
dec
fstps
imull
xchg
xchg
sub
pop
inc
jle
jp
mov
mov
lcall
popf
ds
lods
sub
ja
cmpsl
lds
pushf
scas
mov
jmp
push
aaa
adc
jg
add
out
stc
call
hlt
and
mov
loop
in
jne
stos
inc
push
sbb
ret
and
mov
loopne
jge
cmpsb
icebp
dec
fisubl
sbb
mov
mov
nop
enter
cmp
and
add
out
rcrl
lea
or
xor
jb
mov
dec
aas
loopne
out
sbb
inc
test
and
or
mov
fstl
mov
inc
xchg
pop
inc
jbe
lret
push
jg
sbb
std
inc
aam
mov
push
cmp
pop
mov
cmp
xor
mov
in
lds
cmc
testb
sub
lahf
pop
repz
bnd
pop
out
cli
xor
dec
xchg
push
iret
sti
test
sbb
fcomps
mov
lds
cmp
icebp
or
aaa
ljmp
stc
or
inc
cmp
idiv
pop
push
scas
lods
cld
xchg
outsb
popf
clc
mov
or
mov
imul
incl
aam
movsb
or
push
clc
les
pop
mov
jecxz
inc
mov
aam
roll
stos
or
in
pop
insl
in
cmp
lds
orl
jl
xlat
pop
sub
push
orb
push
mov
sbb
scas
adc
std
and
sahf
aaa
in
dec
xchg
test
mov
xchg
jmp
mov
add
pop
je
sub
dec
fdivr
pop
or
xor
icebp
adc
out
inc
lea
lods
pop
fwait
iret
or
cmp
fdivs
push
add
iret
jl
andb
inc
xchg
xchg
mov
inc
nop
xorb
sbb
pushaw
mov
sbb
cmpsl
gs
xor
scas
and
fbstp
cmpl
shll
psubusb
ljmp
sbb
xchg
fwait
andb
jmp
cmp
lods
or
sbb
test
negb
loope
cld
mov
inc
into
icebp
lcall
ja
cmp
xor
mov
lret
xlat
ret
jmp
adc
addr16
pop
mov
mov
push
lret
jmp
jns
mov
les
popf
push
jno
mov
jl
dec
mov
push
inc
fnsave
sbb
dec
popa
add
jo
jne
mov
and
jo
add
cwtl
and
dec
pop
sti
inc
cs
mov
jl
pop
daa
xor
mov
shll
pop
mov
sub
cmp
xchg
mov
test
pop
push
je
and
mov
movsl
cli
cmp
ja
and
xor
mov
dec
mov
xlat
fsubr
pop
icebp
loopne
mov
rcrb
mov
mov
inc
and
push
mov
xchg
dec
je
xlat
mov
add
out
lcall
sbb
xchg
add
pop
mov
and
jmp
or
and
aam
call
inc
and
leave
ja
xor
pop
in
pusha
mov
idivb
and
sarb
mov
xchg
pop
jecxz
jecxz
and
scas
xchg
dec
test
xchg
push
repz
pushf
xor
and
pop
lcall
push
inc
cmp
les
fcomi
jge
fidivl
je
cmp
iret
xchg
add
testb
pop
insb
sbb
mov
mov
add
adc
cwtl
cmp
rcl
dec
dec
dec
loop
adc
cli
inc
lea
and
popf
mov
adcl
lea
xchg
adc
xor
jle
les
add
mov
sti
inc
in
and
jg
comiss
sbb
jne
lahf
andl
enter
out
insl
inc
jne
sub
cmp
xchg
xor
push
jns
flds
les
or
rolb
arpl
ss
add
adc
sarb
negl
add
clc
arpl
pop
xchg
mov
jbe
sub
lahf
inc
jne
xchg
cmp
push
xchg
bnd
and
push
push
nop
stc
xor
cltd
push
pop
cmp
mov
js
sbb
ficomps
mov
fs
stc
mov
clc
sub
imul
cmp
rorl
jge
jo
cmp
xcrypt-cbc
cmpsl
push
addl
mov
test
cld
enter
add
lock
gs
loop
imul
pop
stos
cwtl
fbld
sbb
aad
or
sub
iret
cmc
lea
mov
adc
adc
jae
mov
sbb
lods
xlat
pop
popf
popf
inc
and
jnp
loopne
xor
out
adc
addr16
xchg
mov
adc
outsb
imul
test
jmp
jg
orl
sti
push
popf
addr16
or
pop
mov
xchg
cmp
in
jl
arpl
ret
xchg
jecxz
das
scas
insb
je
stos
dec
jo
add
cmp
ljmp
jno
leave
movsb
stos
sub
js
mov
fistpl
mov
adcb
in
mov
aaa
ds
dec
cltd
push
fdivrl
aaa
or
push
cmc
add
fdiv
and
xor
or
orb
ljmp
fidivrs
xchg
cs
in
dec
lock
add
pop
sahf
xchg
loopne
scas
pop
nop
jle
jne
mov
inc
mov
xchg
insl
fildl
add
mov
div
dec
mov
test
sub
inc
push
enter
shlb
sub
lea
dec
into
lea
push
out
pushf
gs
or
movsb
or
das
xchg
and
push
xchg
xchg
sti
pushf
jg
xor
cli
xor
xchg
mov
scas
inc
and
push
lods
cmp
fists
stos
pop
leave
adc
and
cmp
sbb
outsb
xchg
push
std
add
lahf
jge
push
jo
aas
and
bound
std
arpl
pushf
jecxz
in
fs
imul
xchg
fs
and
pusha
mov
push
sahf
je
push
xchg
push
xchg
gs
xchg
jge
xchg
or
add
push
xchg
or
shlb
imul
daa
inc
ficoml
lret
addb
and
sbb
mov
mov
jno
pop
cli
cmpsl
cmpb
mov
cmpsl
les
jne
cmp
jle
fmull
mov
xchg
pusha
xchg
dec
outsl
pop
cwtl
inc
mov
add
lidtl
add
mov
mov
out
pop
das
sti
aad
cld
das
hlt
sub
in
and
cwtl
xor
sbb
leave
lret
mov
in
jnp
or
adc
add
mov
jmp
dec
jne
aam
or
adc
lock
dec
or
aam
and
incb
jb
xlat
add
nop
ja
ret
mov
or
or
lods
pushl
jae
cltd
jns
xlat
loopne
in
loope
mov
fiadds
stos
cmp
outsb
push
fldt
or
xor
test
nop
push
popf
aaa
flds
pusha
dec
mov
movsl
push
fdivl
sbb
dec
jo
push
das
sbb
sbb
lds
and
sub
push
dec
movsb
xchg
adc
dec
xor
sbb
inc
daa
dec
sbb
pop
adc
ss
jge
xor
mov
ds
adc
mov
mov
fsubrs
stos
cmp
ljmp
lret
push
ror
int
sub
jns
cmp
stos
mov
cmpb
aam
enter
ret
mov
out
cld
push
and
dec
xlat
icebp
fcompl
ljmp
int3
and
in
cld
adc
pusha
fldt
mov
enter
dec
mov
sub
lods
pop
clc
bound
and
cmpsb
sbb
mov
fildll
push
stos
mov
cmp
sbb
sub
push
xchg
stc
dec
mov
insb
jno
js
rorl
mov
add
mov
pop
mov
jl
push
jae
les
dec
mov
inc
sbb
std
xor
pop
mov
daa
repnz
fidivl
dec
xchg
mov
add
inc
sbb
outsb
pop
imul
fldl
cld
or
daa
out
inc
dec
or
push
or
and
mov
je
pop
and
jne
pop
jb
inc
mov
je
fldcw
icebp
sub
xor
repz
es
out
jnp
mov
and
jne
jb
xchg
icebp
dec
xchg
jge
jae
xor
push
adc
leave
pop
int
dec
ss
jno
and
cmc
jmp
jl
push
push
es
sub
lock
push
in
js
imul
add
inc
mov
scas
mov
push
in
jg
jno
movsl
lods
push
dec
mov
xchg
xlat
test
jmp
xor
mov
xchg
mov
cwtl
inc
mov
repz
push
mov
pop
arpl
pop
das
jns
loopne
jbe
es
lret
cmpsl
clc
faddl
dec
inc
pop
test
ss
mov
add
iret
mov
jbe
sti
pop
sbb
jge
push
out
adc
fldt
int
pusha
scas
jne
and
xchg
aad
aam
ds
loope
mov
jno
sti
stc
pop
frndint
es
orb
xor
fs
or
jecxz
mov
xchg
popa
pusha
gs
test
inc
push
push
push
cmp
adc
fsubrs
out
orb
jmp
ror
xor
adc
lds
add
xor
jle
pop
popf
fcmovnbe
cmp
push
aad
mov
mov
out
or
fcmovnb
and
incb
jl
inc
add
inc
push
push
or
dec
cmp
xchg
sub
add
imul
mov
mov
loope
jmp
es
add
sbb
mov
inc
unpcklps
adcb
mov
sub
flds
dec
adc
hlt
or
in
xor
mov
xor
pop
xchg
xchg
cmpsb
pop
cmp
or
cwtl
andb
or
push
adc
aam
adc
lret
aaa
mov
cmp
mov
add
sbb
aas
xor
sub
or
inc
cwtl
movsb
sti
adc
pop
mov
mov
or
jbe
or
data16
loop
cwtl
movsb
inc
scas
aas
icebp
or
and
xchg
loope
mov
and
xchg
pop
jo
push
out
dec
mov
sti
jno
lods
out
cld
mov
icebp
ss
imul
push
arpl
mov
jl
xchg
hlt
shlb
in
imul
popa
sbb
or
mov
mov
leave
mov
and
push
cmpsb
or
cmc
mov
fwait
leave
add
loope
mov
in
stos
xchg
xor
std
sub
not
push
fs
outsb
sub
and
outsb
jno
imul
shrb
pop
and
mov
insl
test
xchg
pop
adc
cmp
dec
cs
pop
jo
pop
add
cmc
in
pop
jo
js
mov
xor
inc
mov
lret
repz
movsl
pusha
push
push
movsb
sti
int
out
int
inc
push
pop
cmp
cmp
xchg
imulb
cmp
cmpsl
or
ja
jl
daa
xchg
or
aam
fsts
pop
cmp
insl
lds
push
fisubrl
jbe
sub
cmp
incb
xlat
mov
ror
lock
fs
lcall
xchg
ret
xor
cli
pop
int3
jp
or
xchg
test
shrl
adc
xchg
or
das
js
loopne
popf
stos
jnp
cld
aas
mov
std
lods
sbb
xor
or
jecxz
test
call
outsb
xchg
std
xlat
stos
inc
loopne
sub
jle
xchg
and
scas
lds
cs
test
push
iret
sbb
push
cmpsb
sbb
nop
imul
sub
addr16
push
insl
pop
gs
out
mov
mov
cmp
int
test
ljmp
dec
jo
call
in
and
sbb
mov
pop
dec
pop
fidivl
gs
pop
fwait
stc
fisubrl
ret
ss
cli
sub
pop
cmp
test
mov
popf
pop
and
xchg
push
sub
fnstenv
in
outsb
rcll
jae
cmp
pop
mov
js
push
stos
dec
insb
sub
lods
mov
fwait
sbb
and
lcall
test
mov
data16
adc
adc
test
cld
and
lret
dec
or
mov
dec
add
lcall
loopne
mov
loope
pop
jne
in
shr
cli
push
scas
aas
aas
mov
pop
pushl
jns
push
icebp
mov
hlt
rcrb
push
out
sub
cltd
mov
scas
ds
stc
or
daa
pop
fsub
jbe
nop
pop
out
adc
int
push
add
xor
sbb
pusha
dec
outsb
jb
cmp
pop
sub
mov
addr16
sub
mov
cmp
xor
sar
scas
or
loop
xchg
nop
popf
movsl
cwtl
aad
push
or
insb
adc
outsb
mov
sahf
aad
imul
add
mov
les
push
mov
sbb
or
lods
aam
je
and
dec
out
enter
in
or
movsb
mov
movsl
xchg
xchg
sbb
pop
cwtl
pop
stos
and
mov
lahf
xor
xor
sbb
mov
pop
mov
cmp
arpl
cltd
mov
test
movb
data16
repnz
call
inc
mov
loopne
ja
adc
repz
cmp
cmp
pushf
jge
xor
movsl
xchg
clc
pop
push
arpl
dec
out
flds
das
pop
adc
sbb
loopne
mov
mov
int3
fisttpl
pop
mov
or
pop
sar
adc
xchg
jp
icebp
ret
pop
pushf
mov
cmp
sbbl
add
fs
mov
pop
fcomp
xor
jmp
int
push
bound
cmpl
add
lods
clc
gs
mov
fidivrl
lods
push
int3
push
pop
pop
aam
das
pusha
jae
ret
mov
xor
jo
mov
shrl
outsb
lea
mov
xor
sbb
icebp
cmp
inc
inc
jbe
aas
pushf
cwtl
mov
push
mov
pop
sbb
fadds
add
dec
sbb
icebp
lcall
and
push
push
xchg
cwtl
lods
xor
mov
cli
cld
jns
xchg
ja
aad
subb
ret
push
dec
enter
xor
pop
xor
das
shrb
int3
add
out
adc
xlat
mov
iret
xor
lds
mov
dec
push
add
ds
cmovp
inc
in
jge
stos
jbe
leave
xor
aas
lds
imulb
add
dec
lock
mov
std
out
data16
or
jp
inc
rcrl
push
sbb
iret
sahf
sub
nop
mov
int3
insb
cltd
mov
iret
inc
jns
push
mov
push
lock
dec
mov
mov
stos
pop
inc
xlat
pop
nop
ja
frstpm(287
mov
dec
mov
ret
mov
cmp
addr16
xchg
rcll
test
div
lods
fwait
test
pop
popa
ror
pop
and
loope
fwait
xlat
in
mov
fdivrl
repz
jns
nop
mov
sbb
js
dec
dec
ljmp
pop
push
int3
cmpsl
cmp
cs
cmp
repz
push
pop
scas
inc
jno
in
mov
out
fwait
pop
pushf
dec
xor
add
cmp
das
sbb
out
add
jmp
loop
loopne
sub
nop
je
testl
repnz
or
ljmp
stos
testl
fsub
mov
add
mov
popl
push
push
mov
xchg
out
xorb
cmpsb
jno
cmp
sub
add
jno
fs
sbbl
fcom
mov
pop
outsl
pop
jl
ja
popf
mov
xor
push
push
dec
xor
jae
pop
iret
push
ficoms
cmc
fdivl
icebp
clc
adcl
mov
fnsave
push
cld
test
loopne
fisttpll
les
js
aam
jle
jg
std
mov
repz
dec
add
inc
or
mov
add
xchg
mov
jle
out
or
stos
out
stc
iret
xchg
out
ds
add
pop
scas
ds
mov
inc
jns
inc
xor
test
insb
jne
mov
xor
jg
jae
inc
in
roll
dec
call
aam
cmp
lret
push
repnz
mov
mov
xor
mov
fcompp
add
and
cmp
out
mov
test
jns
mov
es
enter
cwtl
inc
push
mov
call
mov
out
jge
insl
outsl
push
test
xchg
sub
and
xlat
xchg
fldl
rcrl
aaa
mov
cmpsl
or
vpsllw
fidivs
cmpsb
mov
outsl
pop
rcll
lock
or
imul
add
and
fstl
insl
cld
adc
mov
add
clc
lock
repz
mov
jg
repz
or
xchg
test
xchg
xchg
sub
lods
adc
mov
insb
test
insl
hlt
mov
cmp
cli
xchg
pusha
xchg
in
bound
mov
es
jg
sahf
test
popf
daa
push
or
mov
xor
mov
lds
xchg
lret
jge
mov
int
sbb
sbb
lcall
aad
les
rcrl
push
add
fistpl
or
and
and
and
sub
loopne
notl
jecxz
lods
iret
mov
les
push
mov
xchg
jp
jns
fs
inc
push
push
or
dec
or
shll
jge
shrb
and
setae
lea
mov
jno
pop
imul
adcb
fadd
mov
xor
mov
in
je
add
mov
cmp
aam
les
addr16
adc
add
xor
and
push
movl
pop
test
mov
movsb
push
aam
les
addr16
adc
add
xor
and
push
movl
pop
int3
aaa
int3
daa
movsb
push
aam
insb
ja
addr16
int3
xchg
xor
and
push
movb
fs
xchg
add
movsl
push
aam
divl
push
xor
push
mov
mov
fwait
sub
inc
mov
xor
jecxz
sarl
sub
push
arpl
xor
and
adc
add
sub
cmp
push
jp
dec
mov
mov
or
adc
repz
cmp
pop
out
sub
sbb
pop
add
arpl
pop
int
fistpll
add
sbb
or
pop
or
sbb
sub
cmp
mov
rcrl
mov
adc
push
call
jecxz
lret
negl
sub
into
movaps
push
jg
push
cmp
arpl
sbb
and
add
sbb
addl
dec
in
out
cmp
cmp
mov
enter
ss
jge
call
lahf
mov
je
fst
xchg
push
xchg
or
aaa
int3
arpl
jecxz
add
adc
rol
sbbl
cmp
xchg
ja
in
sbb
into
xor
jmp
sbb
sub
ret
pusha
mov
jae
cmpl
arpl
and
cmp
adc
sbb
ljmp
and
jb
jns
mov
ljmp
dec
mov
xchg
sbb
sub
out
jae
arpl
fildl
inc
enter
pushf
inc
lret
jecxz
xchg
dec
mov
cmp
pop
jecxz
orl
push
cwtl
ss
inc
std
dec
sti
and
adc
add
repz
sbb
sub
cmp
push
arpl
xor
and
adc
add
repz
sbb
sub
cmp
push
mov
mov
lods
es
out
xchg
nop
in
xor
outsl
ud1
fwait
sahf
and
out
mov
pop
dec
shrl
fs
lcall
adc
jb
imul
jg
ret
test
push
call
mov
mov
cwtl
xchg
mov
sub
pop
and
dec
cltd
xor
adc
inc
jl
or
sub
pop
sahf
inc
arpl
inc
out
jae
sbb
pop
push
sbb
pop
les
dec
adc
mov
icebp
aaa
lds
sub
jb
leave
jl
cmp
outsl
out
clc
out
aam
or
and
and
cmpsl
jb
mov
pop
xlat
rcll
inc
mov
jb
data16
int3
out
push
or
push
xor
inc
cmp
movl
jb
xor
pop
pop
mov
mov
jo
push
jle
clc
pop
repz
pop
loop
push
lock
mov
ljmp
jecxz
inc
and
cmpsb
xor
testb
out
mov
iret
icebp
les
orl
jg
ret
aas
stos
and
subb
lcall
jmp
or
or
jae
and
adc
popf
cmp
mov
sub
cmc
pop
push
dec
sub
xchg
ljmp
xchg
or
mov
mov
inc
fcmovnu
lods
xchg
movsl
inc
adc
cs
decl
adc
and
xchg
sub
insb
mov
pop
js
pop
sub
cmp
gs
imul
ret
ficompl
add
pop
outsl
push
nop
pop
xor
jb
add
cltd
fldz
jae
imul
bound
icebp
mov
sbb
ss
mov
sub
xchg
add
jmp
xchg
pushf
and
mov
inc
add
push
xor
hlt
popa
out
sub
sub
jmp
in
lahf
mov
push
jo
dec
testl
add
scas
mov
addr16
jge
cmc
inc
movsl
xor
pop
shrl
and
xor
sub
or
jnp
outsl
cmpsl
adc
aaa
aaa
sahf
repnz
clc
xchg
test
mov
mov
dec
cmp
out
mov
roll
in
pop
jmp
scas
mov
lcall
lahf
xchg
push
mov
test
int3
xchg
and
pop
jl
iret
insl
sbb
sar
or
lock
test
bound
fsubr
push
rorb
inc
in
mov
adc
cli
jo
lret
fisttpll
sub
repz
aam
movsl
not
add
pop
je
in
scas
repz
adc
push
cli
fmulp
push
cmp
mov
movsl
pop
dec
lcall
or
nop
icebp
imul
sbb
xchg
aad
test
adc
xchg
inc
popa
cmp
dec
and
in
stos
pushf
and
or
lock
or
pushf
sbb
std
pop
push
mov
inc
inc
ss
nop
ljmp
jecxz
psubusw
xor
jg
enter
movsl
int
out
mov
call
ror
in
rol
fs
xchg
stc
push
cmc
ret
or
hlt
xor
lahf
es
scas
iret
push
pushf
das
mov
es
out
aas
into
mov
mov
push
jge
loopne
mov
pop
ljmp
aaa
xchg
xchg
and
popf
sbb
xchg
sbb
daa
stos
add
sub
adc
je
enter
loopne
mov
lret
fwait
into
or
fiadds
imul
xorl
mov
incl
sub
mov
insl
jle
adc
add
mov
pop
loope
out
jg
imul
xchg
js
out
sub
int3
pop
bound
xchg
lahf
sbb
test
stc
notl
xor
icebp
jle
inc
jecxz
cs
test
repz
lock
sub
add
sbbl
and
imul
sub
pushf
jbe
cmovl
xor
push
xchg
pop
pop
fdivrs
mov
lds
inc
ljmp
add
aaa
fsubr
mov
inc
and
add
xor
push
or
or
outsb
mov
xor
xor
les
mov
enter
xor
sub
and
mov
dec
jge
pop
inc
sub
stc
cwtl
repnz
cwtl
dec
out
sti
dec
dec
out
aaa
nop
cmp
or
sti
fstpt
jge
dec
popf
mov
repnz
lock
inc
das
rclb
jge
addb
xchg
jmp
clc
lret
xor
mov
subl
fistpll
jle
pop
xchg
clc
lods
adc
and
mov
dec
rolb
rclb
dec
xor
popf
adc
xchg
inc
nop
pop
jae
fistps
aam
pop
mov
jl
mov
sbb
outsl
mov
insl
fsubl
jae
icebp
rcrl
jmp
mov
das
adc
jb
addl
add
cli
mov
pop
stc
loopne
mov
pop
decb
pop
cwtl
daa
adc
rorl
addr16
fmull
cmp
lock
cmp
mov
mov
outsb
dec
fnstcw
inc
aam
xchg
outsb
fcmovb
fcompl
xchg
mov
push
inc
lret
xor
push
adc
or
dec
pop
xchg
sub
lret
pop
js
mov
jbe
dec
and
movb
xchg
es
adcb
adc
lahf
scas
add
imul
xlat
adc
pusha
xchg
mov
test
fs
inc
xchg
test
daa
test
orb
jle
push
ret
xchg
xchg
outsl
mov
ljmp
add
mov
lock
popf
xor
and
sti
aas
xor
je
push
aas
insl
sti
and
push
sti
xchg
adc
imul
push
fldenv
imul
and
sub
and
dec
mov
sub
cmp
mov
xchg
cmc
or
xor
in
push
icebp
pop
test
test
ds
gs
es
mov
std
fsincos
cmpsl
mov
xchg
mull
stc
push
push
movsb
movsl
ljmp
in
sub
dec
movsb
sbb
mov
in
dec
addr16
inc
sahf
sarb
jbe
adc
adc
dec
ss
push
popf
xor
xchg
sub
mov
aas
pop
inc
loopne
ret
insl
idivl
mov
outsb
dec
mov
rep
or
push
int
push
sub
cmc
sti
pop
ja
xchg
jl
cmpsb
insb
xchg
and
cmp
cltd
adcb
leave
lcall
loope
xor
std
les
xchg
rolb
push
imul
roll
lods
shrl
cmp
mov
cmpsb
pop
mov
mov
sbb
js
data16
or
mov
inc
push
test
pop
lretw
jmp
lcall
jecxz
pop
daa
inc
icebp
cmpb
cmpsl
sub
jbe
xor
mov
les
xor
or
jo
loop
std
mov
out
xchg
nop
mov
jmp
push
ret
shrl
pushf
mov
mov
ret
mov
scas
fmull
mov
jbe
rorb
les
fwait
push
cltd
xchg
cmp
aaa
add
mov
xorb
addb
xchg
mov
insb
enter
xchg
push
adc
arpl
insb
ss
int
push
rcll
lret
out
inc
js
mov
fcmovnu
outsb
mov
jns
mov
gs
aad
push
cmpb
push
and
sub
lds
dec
xchg
cmp
and
pop
push
or
add
push
sub
or
inc
sub
aam
jne
aad
sbb
and
add
lock
add
mov
lds
cmp
pop
rol
std
outsl
pop
cmpsl
jo
pop
out
pop
leave
jb
and
stos
sub
insb
dec
inc
and
sub
jg
scas
out
in
fmull
mov
mov
sahf
lcall
fwait
mov
push
int
cmp
fcoms
stos
mov
shr
out
orl
jae
xor
jb
repnz
insb
and
push
outsl
cltd
sahf
mov
mov
or
push
rcrb
fadd
xchg
push
in
sub
xchg
sbb
jno
ljmp
and
mov
popf
sub
cs
cmp
and
sti
and
adc
mov
inc
rcrb
fwait
stc
jecxz
pop
mov
cmp
xchg
lea
mov
jmp
fisubrl
insl
mov
ljmp
adcl
cmp
sub
call
mov
sbb
js
lea
mov
jmp
xlat
je
add
or
lahf
pop
xchg
inc
jno
or
mov
aas
ds
xor
add
mov
aad
add
stc
scas
in
mov
dec
sub
cmpsl
inc
jae
sbb
jecxz,pt
mov
jp
incl
or
or
xchg
mov
sbb
cwtl
sbb
mov
jle
sub
and
mov
mov
sub
mov
pop
stos
rcll
xor
ret
sbb
xor
jle
mov
cmp
push
pop
mov
add
lret
fidivrl
repz
std
and
cmpsb
jne
cli
mov
test
cwtl
jp
adcb
imul
loop
ss
xchg
hlt
dec
mov
jb
jg
stos
xchg
into
rcll
cmpsl
dec
adc
es
mov
popa
mov
jb
xor
cwtl
and
scas
movsb
xchg
flds
sub
xchg
mov
inc
insl
lea
shlb
std
pop
cmpsl
xchg
test
not
in
push
or
movl
jecxz
jae
mov
mov
lret
insb
in
sbb
push
fcmovnu
int
push
xor
fcoml
sbb
test
pop
sbb
mov
push
fcomp
mov
pop
je
pop
leave
xchg
adc
inc
andb
inc
dec
inc
inc
hlt
jmp
sbb
loop
jno
ljmp
pop
paddw
and
dec
inc
repnz
push
lcall
jmp
mov
int3
add
lret
sub
sbb
jl
dec
call
or
fidivrl
das
fcmovbe
in
subl
pusha
jno
test
ficoms
rcr
aam
data16
dec
jg
dec
dec
repz
mov
xor
mov
ds
fs
pop
adc
xchg
push
xchg
mov
into
cmp
addb
push
xchg
aaa
sbb
hlt
dec
nop
addl
lods
leave
pop
xlat
mov
out
jle
leave
mov
or
insb
adc
mov
test
daa
in
shl
arpl
sti
movsl
aad
jmp
mov
int
iret
pushf
jne
cli
imul
lret
xor
sub
add
jns
gs
rolb
fucomi
out
shlb
add
inc
mov
mov
jb
loop
mov
fsubs
jne
push
inc
or
pop
aad
icebp
movb
sbb
in
xchg
add
adc
jno
xor
pop
sub
ret
loop
xor
gs
sub
movsb
cmp
jg
mov
lods
jno,pn
insl
push
push
cmpsb
pop
cld
and
push
mov
sbb
push
push
rorl
sbb
cmpsl
adc
repz
dec
pop
xchg
mov
dec
pop
lss
cmp
inc
cmp
sbbl
gs
xchg
add
arpl
fstpt
lcall
xchg
dec
jl
sahf
outsb
popf
stc
inc
xchg
mov
repz
mov
cltd
subl
fdivp
fsubs
sub
mov
rolb
cmpb
loope
lea
push
add
push
sar
pop
cmpsl
mov
add
lcall
xchg
mov
inc
cmc
sub
fxch
scas
adc
aas
dec
mov
inc
sbb
mov
add
push
addl
jg
mov
dec
popl
jmp
mov
lret
addb
movsb
add
fcoms
iret
das
pop
dec
jg
sbb
imul
dec
sbbl
test
sub
mov
mov
push
into
cmpb
adc
push
push
imull
mov
push
idivb
jnp
sub
aam
out
inc
and
or
cmc
adc
push
lcall
jge
push
aam
test
loope
add
scas
push
xor
push
enter
pop
mov
or
jmp
add
lahf
repz
push
xchg
sub
adc
xchg
rclb
mov
push
fmul
arpl
mov
das
arpl
inc
fistps
clc
pop
out
dec
adc
jnp
xor
or
pushf
push
not
mov
repz
loop
mov
jne
aas
sahf
jl
fs
lahf
loopne
push
lea
mov
pshufw
outsl
lock
ss
mov
push
cmp
cmc
arpl
div
lea
dec
dec
jae
push
icebp
cltd
inc
jnp
push
push
in
jmp
push
shr
das
and
adc
or
cmp
fdivs
inc
sbb
cmpsl
popf
lahf
push
call
jl
daa
mov
or
aas
xchg
orb
inc
lret
lods
andl
cltd
inc
cmp
hlt
inc
xchg
fs
mov
ja
xor
mov
mov
fnsave
xor
fidivs
cli
add
lea
imul
fldcw
mov
adc
push
and
jg
add
pop
or
repz
xchg
sbb
inc
fwait
out
adc
fs
jmp
in
ret
stos
xor
addr16
xchg
loop
add
jg
std
ds
inc
xor
inc
push
popf
dec
rorl
repnz
add
fucomi
xchg
and
jl
jns
stc
fsubs
mov
jb
xchg
sti
stc
sahf
addr16
add
addr16
pop
xor
rcll
fs
sbb
pop
insb
dec
cmpsb
mov
mov
jle
push
xchg
sahf
sarl
fidivrl
pop
dec
adc
insb
push
and
mov
inc
cmc
test
xchg
mov
jmp
cltd
insl
dec
mov
sub
jnp
stos
sub
call
sbb
jmp
add
pop
mov
aaa
jle
loope
mov
mov
test
xchg
adc
xchg
daa
mov
out
loope
sbb
xor
stos
bound
push
test
cli
fsubrl
sbb
dec
out
lods
and
pushf
aaa
push
jnp
daa
dec
inc
repz
pop
mov
dec
test
sub
imul
notl
sub
xchg
pop
stos
pop
bound
js
push
sbb
imul
adcb
jo
dec
shl
dec
mov
mov
pop
add
cs
mov
jge
ret
icebp
xor
scas
sbb
mov
push
orb
lods
leave
pushf
sbb
mov
sbbl
jb
bound
stos
lret
mov
adc
jns
es
popf
fistpll
in
ret
jno
test
adc
js
mov
fdivrs
scas
subl
frstor
lods
or
xor
sub
stos
sub
out
in
or
cmp
add
jno
in
adc
imul
or
in
imul
mov
push
popf
xchg
loopne
ret
jmp
inc
mov
in
inc
pop
lods
addb
adc
xchg
shlb
cltd
mov
pop
adc
pop
or
mov
mov
popa
mov
les
cmp
movsb
jo
lock
mull
mov
pop
outsb
aaa
sbb
xchg
stc
cltd
pop
ret
push
aad
push
xor
inc
lcall
jmp
jae
jbe
out
jmp
repnz
lahf
inc
subl
adc
fldt
mov
movsb
frndint
fs
sahf
mov
negl
int3
xchg
adc
and
push
leave
mov
cmp
je
mov
push
dec
mov
es
sbbb
dec
adc
mov
mov
lret
shlb
stc
cmpb
cmp
push
shll
sub
pop
dec
popf
cmc
loop
adc
mov
jb
mov
and
aad
lods
iret
dec
pop
test
cli
out
icebp
inc
add
or
repnz
ds
jne
aaa
dec
test
cld
jbe
jno
inc
jp
jl
sub
enter
test
nop
out
xorl
push
pop
jmp
call
or
xchg
in
sbb
sbb
lea
push
cmp
lret
pusha
js
sub
push
xchg
cli
sarb
mov
iret
jmp
adc
out
mov
sbb
lods
inc
inc
cmp
push
dec
push
mov
ret
lea
jno
sub
dec
addr16
adc
mov
int
fbstp
test
shrl
nop
roll
fldl
pop
mov
filds
push
insb
pop
pop
ljmp
jmp
icebp
enter
in
adc
ja
roll
stos
push
cmp
por
add
pop
mov
out
mov
sti
sbb
xchg
push
arpl
clc
or
aaa
inc
mov
in
shlb
leave
pop
pop
cs
xorl
imul
jne
aad
or
stc
sbb
mov
fidivrs
call
mov
push
out
mov
lret
push
insl
jmp
push
out
sahf
pop
mov
jl
fstl
xchg
push
sbb
ret
arpl
cmp
les
loop
push
das
lret
push
adc
xchg
outsb
push
lret
ja
mov
push
and
cmp
mov
sub
movsl
inc
int3
add
dec
sub
cmp
lcall
mov
push
popf
test
stos
pushf
cmp
idivb
pushf
dec
fs
incl
lea
repnz
mov
int3
in
sbb
jnp
adc
push
or
out
push
loope
stos
inc
in
xchg
fisubl
inc
flds
cmp
xorl
cs
iret
out
mov
xor
movsl
inc
mov
sbb
inc
or
mov
push
xchg
repz
sub
in
xor
mov
xchg
push
iret
lods
mov
in
cmp
xchg
add
mov
imul
lds
fimuls
mov
daa
jle
xchg
pusha
push
lret
dec
or
pop
iret
scas
arpl
push
adc
dec
in
dec
loopne
fdivr
cmp
pop
inc
out
push
fneni(8087
push
cmp
push
iret
gs
mov
aad
add
jnp
pusha
ljmp
inc
mov
xchg
cmp
movsl
pop
sahf
ffreep
std
outsl
or
mov
inc
cmpsb
inc
jne
aas
ret
aam
outsl
mov
fstpl
fidivs
lods
jge
adc
mov
sahf
or
sbb
mull
mov
aad
stc
jno
xchg
mov
or
cld
or
and
mov
mov
fisubs
stos
push
push
jmp
enter
lret
imul
es
cmc
cli
inc
jle
cmpsl
push
lcall
insb
out
pushf
idivb
insb
xchg
xchg
sti
clc
popf
movsl
sbb
sub
stos
movsl
mov
mov
pop
sbb
rclb
xor
xor
lret
push
fldcw
inc
idivl
imul
sbb
pop
mov
push
sbb
jae
lea
das
add
mov
enter
push
pop
incl
adc
lea
sbb
mov
lret
and
push
mov
push
dec
mov
xchg
mov
ret
sbb
shlb
rcl
dec
iret
fwait
xor
data16
repz
mov
in
addl
xchg
jle
outsl
mov
add
xadd
pop
inc
std
xor
scas
data16
jne
and
inc
jns
or
mov
push
add
sub
pop
or
mov
add
mov
mov
adc
cmp
xchg
loope
ret
adc
pop
and
or
xchg
and
insl
gs
or
mov
pop
mov
adc
sbb
adc
mov
mov
jns
test
or
mov
jp
cmpsl
hlt
sub
repz
adc
dec
or
mov
movsb
adc
enter
sahf
negb
iret
mov
in
mov
mov
jle
outsb
inc
enter
jle
pushf
cmp
mov
push
movsb
pop
and
jge
xchg
cli
inc
or
mov
push
sub
loop
xor
sahf
mov
cmp
pop
cmp
sbb
dec
movsb
sub
mov
jmp
call
cwtl
popf
mov
mov
and
insb
outsl
adc
xchg
xchg
sub
pop
into
cwtl
repz
clc
lods
ds
pop
mov
les
push
and
xchg
cs
inc
adc
xchg
cwtl
mov
enter
call
jecxz
shrl
ret
cmp
push
arpl
xor
and
adc
add
repz
sbb
sub
cmp
push
arpl
xor
and
adc
add
repz
sbb
sub
cmp
dec
cmpsl
pop
xchg
insb
mov
inc
mov
lods
inc
mov
xchg
call
sbb
jns
ret
dec
shrb
insb
pop
jl
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
in
jb
fisubrs
loop
call
cmc
inc
mov
add
or
add
lret
add
add
add
add
pop
add
add
add
add
push
add
mov
ret
add
sbb
inc
add
sbb
push
add
lahf
add
add
add
and
xor
adc
adc
push
add
add
add
add
add
sti
add
dec
add
add
add
add
add
add
add
add
or
roll
inc
add
add
add
add
add
add
add
jno
lahf
add
add
add
sub
popl
ret
add
xchg
add
add
add
add
add
insl
add
add
add
add
add
add
add
imul
add
add
filds
aad
leave
add
add
add
mov
add
add
add
add
outsb
add
adc
sub
fiaddl
imul
add
add
add
add
add
mov
pop
add
xor
add
movl
cmp
inc
add
add
add
mov
imul
add
add
add
add
add
add
add
cli
add
add
outsb
add
add
add
add
add
sub
add
add
xor
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
and
pusha
add
xor
and
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
icebp
add
dec
add
add
add
jo
add
mov
add
add
add
add
adc
push
add
add
lods
add
or
lea
cli
add
add
add
add
pusha
add
add
xor
add
add
add
add
outsl
add
add
push
add
add
add
add
lahf
add
add
mov
sub
or
faddl
popa
add
add
and
mov
add
add
add
xchg
add
movl
call
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
add
add
lea
jle
pop
add
mov
or
faddl
icebp
add
add
add
inc
add
add
add
add
add
add
testl
add
fs
add
imul
add
sub
adc
lahf
add
add
add
cmc
add
push
jo
add
dec
add
cmp
mov
mov
mov
push
add
add
add
pop
add
add
add
add
bound
dec
add
push
add
add
or
add
imul
add
add
add
add
add
jae
push
in
fildl
clc
lfence
xor
clc
or
mov
mov
gs
scas
xor
aam
dec
in
ficoms
mov
pushf
fcoml
fs
xlat
sub
mov
neg
inc
int3
js
mov
sbb
inc
pop
sub
outsb
sbb
add
push
dec
in
ret
scas
add
out
imul
sti
lods
or
jp
testb
lods
push
clc
popf
lods
adc
dec
push
sti
aaa
rcl
sub
dec
loopne
adc
cmp
mov
add
push
sbb
or
mov
sub
mov
add
in
adc
cmp
pop
in
incb
jne
movsb
jge
jne
sub
pop
aas
or
mov
push
xor
adc
sbb
sbb
inc
mov
shlb
subl
inc
cmp
int
addr16
pop
dec
sbb
sarb
sbb
mov
fbld
shl
test
push
ret
xchg
sbb
and
aaa
mov
mov
or
sub
lahf
lods
xor
shlb
stos
mov
mov
mov
mov
dec
push
lds
or
xlat
in
stc
mov
fwait
incb
push
mov
loop
jmp
rcr
mov
pusha
dec
cmpsl
and
sbb
and
push
push
dec
cmp
jge
in
in
ret
push
cmp
pop
adc
les
outsl
pusha
sarl
mov
rcrb
cmp
jecxz
ss
out
stc
int
mov
push
pop
or
cmp
test
mov
pop
inc
mov
mov
mov
mov
cmpsl
lds
sbb
mov
cmp
jle
mov
aad
pop
fs
loopne
adc
pop
sbb
aam
lret
mov
pop
sub
in
sti
shlb
jbe
mov
imul
leave
sub
cmp
in
insb
inc
pop
cmp
cmp
mov
adc
pop
das
or
or
lret
pop
in
jg
loope
jnp
dec
xchg
cmc
aam
pushf
enter
dec
addr16
ja
stos
hlt
out
push
or
fistpl
popa
imul
jae
add
aaa
fdivrl
sbb
ret
arpl
ret
sub
add
iret
fwait
mov
pop
sub
sbb
or
lds
test
cmpl
xchg
aaa
pop
in
shlb
dec
inc
sub
imul
outsb
out
dec
pop
popa
mov
adc
cmp
negb
bnd
mov
inc
into
je
addb
pop
lret
sub
insl
pop
fsubs
nop
push
pop
insl
int3
sub
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
