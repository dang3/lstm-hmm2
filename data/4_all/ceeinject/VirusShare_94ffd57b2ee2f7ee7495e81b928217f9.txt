call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
jb
xchg
sbb
imul
jno
push
jp
or
pop
out
imul
lahf
fisttpl
jbe
stos
iret
mov
pop
imul
jg
outsl
sbb
dec
adc
mov
sti
jmp
iret
mov
cltd
icebp
leave
or
jae
mov
mov
mov
mov
fdivs
fistpll
bndldx
js
hlt
add
loop
test
cli
mov
and
test
stos
xchg
lcall
cwtl
daa
pop
xchg
aam
les
xor
daa
pusha
adc
stos
jp
jle
pop
and
outsl
and
add
xor
loop
dec
push
lret
pusha
ljmp
sub
nop
jl
dec
push
pop
bound
jnp
pop
nop
sub
dec
mov
dec
cld
cmp
sahf
in
push
lret
mov
xchg
iret
test
ljmp
pusha
or
clc
mov
movsb
loopne
stos
stos
repnz
xchg
call
inc
cwtl
push
mov
jecxz
ficomps
das
jnp
pop
arpl
or
sbb
imull
inc
jmp
icebp
jne
mov
mov
pop
xor
pop
popa
pop
adc
jl,pn
mov
stos
iret
dec
out
cwtl
xchg
int3
xor
aas
or
les
push
pop
push
dec
xor
or
mov
mov
dec
cmp
outsl
pop
dec
pop
cmp
sbb
dec
cmp
jmp
sti
decl
iret
mov
pop
imul
jg
outsl
sbb
dec
cmp
jmp
sti
decl
iret
mov
mov
push
xchg
xor
aas
subb
cld
test
mov
imul
mov
jl
mov
scas
test
sbb
lods
cmc
xchg
pop
mov
sub
lahf
mov
outsb
ljmp
sub
jb
pushf
lock
cmp
push
in
in
pop
pop
mov
jb
sahf
jecxz
sbb
pop
test
leave
xchg
push
jmp
imull
ror
jge
fs
or
fiadds
pop
sbb
or
push
psllq
xchg
movsb
icebp
jle
push
adc
mov
repz
cmpsb
and
push
ror
jns
sub
xchg
push
adc
push
stc
fistl
mov
xchg
add
dec
loope
adc
lds
mov
sbb
scas
movsl
test
mov
inc
cmp
jg
sbb
in
xor
sub
repz
insl
push
clc
xchg
push
xchg
ljmp
ja
sub
or
fcmove
sti
mulb
push
cmp
ljmp
sbb
das
loop
lret
sarl
cmp
adc
dec
push
xor
jae
inc
or
clc
ret
inc
pop
inc
or
jbe
cmp
mov
lret
or
jne
cmp
jnp
js
insl
xchg
lret
stos
in
in
repz
inc
sbb
pop
iret
fidivrl
jno
lea
icebp
in
pop
stos
push
lret
jns
xor
cmp
fists
add
out
xchg
mov
jl
js
icebp
push
movsl
addr16
pop
cli
ja
jge
insb
aas
arpl
xor
cmp
pop
loop
int
jle
jbe
sub
iret
ret
mov
pop
pop
or
ds
adc
mov
stc
out
sahf
jo
out
fcoml
mov
inc
pushf
push
and
stc
enter
int
jg
pushf
mov
mov
xlat
outsl
pop
xchg
mov
jle
sbb
jnp
popf
in
and
mov
or
jge
jg
dec
and
in
xor
add
cmc
aaa
inc
decb
cltd
pushf
or
pop
mov
jp
mov
nop
outsb
add
push
sti
dec
push
insl
sub
imul
xchg
lds
and
push
in
out
mov
nop
inc
mov
mov
cmpsl
push
cmp
push
rol
stos
sti
adcb
xchg
push
xchg
xor
addr16
mov
scas
daa
arpl
lds
add
fwait
push
dec
sub
add
dec
rcll
push
xor
push
push
fmull
adc
js
pusha
and
popf
pop
lcall
aam
fucom
fldt
aad
imul
xor
fstps
dec
mov
test
or
in
loope
jbe
jno
imul
pop
mov
call
mov
mov
orb
xchg
jl
or
into
gs
cmp
imulb
adc
es
pop
mov
inc
mov
ljmp
mov
std
nop
in
and
idivb
test
ret
outsb
loopne
or
mov
or
and
or
mov
push
arpl
sub
dec
mov
jmp
pop
xchg
fisttpl
sbb
aam
cli
jmp
mov
pop
jl
cmpsb
outsb
test
and
fwait
dec
into
lods
jmp
adc
mov
xor
pop
inc
sbb
mov
and
popf
rolb
mov
insb
in
outsb
mulb
lods
icebp
jg
mov
stos
push
lret
pop
scas
fiadds
testb
push
mov
pop
mov
jle
js
xor
roll
cmp
jge
or
out
mov
enter
and
jecxz
inc
pop
mov
xchg
inc
mov
loope
cmp
xchg
shll
int
mov
lahf
movsl
sub
inc
movb
and
shr
xchg
data16
or
mov
push
fstpt
jo
data16
inc
arpl
js
jo
dec
push
adc
inc
gs
outsb
bswap
daa
in
jns
pushf
jl
mov
adc
and
jno
push
add
inc
cmp
push
call
xlat
xor
pop
jne
dec
movsl
orl
fdivrp
cli
jo
and
stos
divb
xor
les
push
in
aaa
movsb
sub
and
testb
sub
lea
stc
add
icebp
dec
add
rcrb
jbe
cmp
lret
push
mov
in
mov
mov
ja
cs
or
or
mov
jnp
pushf
dec
fistpll
mov
das
push
sbb
inc
lock
inc
push
sub
rcll
mov
mov
std
ja
test
popf
je
jbe
ljmp
inc
popf
xchg
adc
enter
xor
mov
mov
fnstcw
jo
sbb
sbb
mov
or
sbbb
in
out
mov
jmp
leave
mov
shll
sbb
fisttpl
inc
pop
add
jne
orb
leave
adc
cmp
xchg
cmpsb
cli
rcll
cltd
adc
jbe
mov
sub
out
repz
cmp
sbb
push
lock
mov
sbb
ja
pop
lods
movsl
or
sbbb
ss
ret
movhps
bound
bound
aaa
sbb
shrb
fcmovnb
jmp
sbb
inc
mov
mov
jp,pt
aam
adc
adc
sub
add
mov
aaa
decb
out
clc
sahf
test
jmp
flds
inc
add
scas
pop
pop
cmp
push
stos
xchg
xchg
icebp
xchg
icebp
jne
in
and
in
fistpl
sub
cmp
lods
cli
cltd
mov
arpl
xchg
pop
pusha
push
mov
ss
stos
mov
jp
xchg
scas
pop
loop
cld
push
xchg
inc
push
push
jle
add
scas
xchg
popa
jne
das
sub
pop
lock
dec
jp
jns
daa
shlb
fsubrl
pushf
fs
xchg
mov
pop
jo
icebp
or
fstp
hlt
mov
lret
sbb
movsb
adc
stos
cmpsl
imul
pop
dec
out
jmp
xor
movsb
enter
mov
pop
jnp
loop
ss
loop
insb
sbb
cltd
dec
mov
cmp
sub
mov
xchg
aad
mov
pop
in
sub
sbb
in
cmp
leave
pop
mov
int
repnz
divl
and
push
dec
dec
cmc
xor
xor
in
into
sbb
jo
mov
inc
in
ret
movsl
and
out
pop
loope
pop
flds
adc
mov
call
mov
adc
hlt
inc
bnd
mov
push
pop
pop
mov
imul
pop
dec
xchg
inc
nop
jae
push
or
rcr
lods
andb
jae
mov
adc
adc
lret
or
and
les
xchg
iret
mov
fsubs
sub
test
dec
xchg
sub
insl
scas
sbb
mov
inc
lcall
ja
repz
movsb
xchg
mov
mov
push
xchg
cmp
insb
inc
popa
jo
xchg
mov
sub
inc
pop
out
push
repnz
add
cmpsb
outsl
push
fmul
jbe
xor
inc
adc
pusha
inc
mov
cld
je
ljmp
xchg
dec
mov
xor
lahf
nop
cs
push
inc
rcrl
cmp
xchg
and
mov
mov
ret
out
lcall
icebp
mov
inc
in
pop
outsl
push
and
sub
dec
pop
cltd
aad
mov
sub
packuswb
test
ja
movsl
aad
cltd
pop
and
mov
in
in
test
sub
call
jns
mov
in
mov
ja
cltd
mov
gs
add
cli
jo
mov
enter
push
pop
adc
push
lcall
scas
dec
sub
mov
pop
xchg
xchg
loop
mov
test
xchg
push
aas
fsubrl
push
stos
cld
dec
push
test
jno
aas
mov
mov
mov
lods
and
adc
adc
or
aam
pop
rcrl
xor
sti
mov
jo
mov
icebp
sub
in
loopne
xchg
mov
mov
dec
mov
xor
push
fisubs
bound
rolb
pop
add
scas
in
mov
aam
push
ret
push
jp
xor
adc
pop
inc
inc
jp
sbb
int3
xchg
clc
cmc
jmp
xchg
lahf
jo
adcl
fdivl
mov
jo
in
jge
call
insb
xchg
mov
jbe
repz
push
fstps
push
fldl
popa
mov
mov
out
lock
or
out
adc
xchg
daa
sub
lods
cmp
mov
adc
outsl
add
or
inc
push
cmp
pop
shr
aaa
insl
fcmove
mov
xchg
cs
and
rorl
out
sub
je
stc
std
xchg
lcall
add
pushf
adc
cmp
jecxz
dec
or
jae
sbb
add
and
adc
jl
or
ds
and
mov
aaa
jge
sub
jmp
stos
mov
xor
aam
push
jns
loop,pt
inc
xchg
lcall
ja
dec
pop
fdivrl
jns
stos
push
cmp
out
scas
repnz
push
out
jg
sbb
scas
std
aaa
sti
xchg
sbb
fiadds
mov
push
xor
and
scas
mov
insl
add
jae
pop
jno
mov
stc
imul
popa
or
inc
cli
sbb
jl
js
xchg
decl
push
or
mov
das
add
xor
jle
cs
std
std
cwtl
dec
nop
dec
into
and
adc
and
dec
pop
jbe
mov
jge
inc
loopne
jp
ror
inc
xor
iret
push
xor
mov
hlt
and
xchg
mov
idiv
push
inc
nop
mov
jmp
xor
out
push
incb
push
mov
lcall
dec
movsb
loope
icebp
lds
and
adc
mov
pop
popa
addr16
arpl
in
push
mov
mov
adc
out
imul
add
js
movsb
cmp
insb
out
mov
std
push
push
insl
in
jnp
or
cwtl
sub
push
pop
movsl
mulb
push
insl
mov
fcoms
test
cli
mov
stos
lods
mov
mov
mov
xor
push
retw
sbb
jne
xor
out
add
in
mov
int
jb
mov
sarl
jge
subb
xchg
mov
int3
rorb
sub
and
test
out
push
push
call
neg
ror
or
mov
lret
jmp
mov
add
jnp
xor
mov
aas
and
mov
adc
dec
leave
lock
aad
test
cmp
int
xchg
dec
int3
loop
popa
into
popa
mov
ror
lahf
addr16
push
ss
mov
mov
mov
inc
adc
popf
aam
movsl
in
add
jmp
cmp
fdivr
shl
dec
lods
outsl
jecxz
jle
mov
dec
sub
xchg
iret
cwtl
cmp
jb
push
jp
lret
arpl
jnp
push
xor
das
add
xchg
adc
jb
aad
mov
lods
lcall
adc
mov
mov
into
nop
mov
shll
push
aam
in
pop
or
leave
cli
sahf
mov
insl
adc
mov
insb
scas
jbe
jae
and
test
dec
sub
push
push
or
ret
adc
jp
jb
mov
fsubrs
mov
mov
movsb
xchg
loop
test
add
js
fidivs
fnstcw
cwtl
sub
push
sub
addr16
lds
mov
idivl
lods
xchg
movsl
xor
call
adc
sub
sbb
cwtl
add
lds
jno
ds
xor
fimull
jnp
cmp
pusha
mov
and
jle
xchg
sbb
xchg
push
mov
outsl
push
inc
pop
pushf
and
repz
fcmovnbe
fisttpl
push
inc
jge
movsb
xor
dec
andb
mov
sbb
ret
negb
add
mov
sbb
or
xor
faddl
xor
aad
data16
mov
xchg
cmpsl
movb
ljmp
dec
inc
cld
aam
pop
pushf
xchg
repnz
xor
cwtl
lcall
inc
fsubr
movsb
push
fucomp
push
jg
jae
pop
jl
mov
and
xor
cmpsl
xchg
sub
int
pop
pushf
repz
pop
addb
ds
into
push
aam
rcrl
hlt
lds
movsb
or
inc
in
insb
out
inc
jp
pop
cld
or
popf
insl
push
sub
mov
mov
push
out
lcall
aaa
sbb
insl
xlat
jg
mov
imul
lock
sti
filds
lret
xchg
clc
pop
iret
and
pop
cli
mov
mov
cli
xchg
jp
jno
test
pop
cs
jbe
jge
sub
addr16
aas
jmp
into
xorl
mov
push
std
imul
pop
cwtl
inc
xchg
ljmp
inc
mov
divl
lret
loop
xor
fwait
int3
sar
add
pop
adcl
jmp
push
pop
cmpsb
cwtl
dec
adc
in
sbb
sbb
test
ss
ror
mov
outsb
xchg
aam
int
mov
push
imul
mov
fisubrs
push
subl
dec
lods
ror
jmp
pushf
test
jbe
add
jge
int3
repz
data16
jne
xor
mov
inc
dec
aam
xlat
daa
shlb
mov
sub
push
xor
bound
or
push
dec
cmpsb
xor
jns
int
jne
xchg
push
mov
iret
sbb
fdivrl
push
test
fimuls
insl
jmp
enter
xchg
adcb
or
cmp
and
ja
loopne
jne
mov
fs
add
cmp
pop
xor
inc
mov
xor
sbb
in
je
popa
ja
aas
push
arpl
stc
push
add
in
insb
or
daa
inc
ret
shr
xor
mov
lods
jge
sbbl
imul
adc
outsl
sbb
cwtl
lods
stos
mov
hlt
sub
mov
mov
jmp
and
shrb
imul
cs
mov
adc
push
cld
xchg
lods
aas
push
mov
insl
cwtl
iret
sub
ret
lds
gs
mov
mov
mov
sub
dec
sub
mov
add
and
cmp
aam
hlt
ret
push
xlat
shll
imul
cld
xchg
iret
and
add
ljmp
ds
push
faddl
push
mov
fldt
xchg
push
mov
cltd
mov
test
enter
iret
aam
push
mov
cmp
cwtl
lret
pushf
push
out
pop
mov
sub
dec
loope
sbb
push
mov
push
pushf
daa
mov
mov
sahf
push
mov
repnz
inc
jne
pop
cmp
outsb
inc
ss
mov
xchg
jge
jnp
cs
out
and
mov
ds
inc
mov
adc
mov
push
cltd
pusha
sub
jae
dec
arpl
adc
pop
cmp
pushf
cwtl
jo
cmp
adc
lret
dec
ja
pushf
in
fld
ret
mov
sahf
and
rcrl
sbb
shlb
js,pn
push
jbe
pslld
xchg
ss
in
jp
stc
push
sbb
cmp
push
xchg
dec
inc
mov
sbb
mov
xor
add
rcll
cmp
add
addr16
push
inc
aaa
or
add
xor
xor
pop
std
add
pmaxub
fdivs
arpl
in
rorb
call
add
mov
test
jo
xchg
loope
ret
pusha
ljmp
xchg
stos
lret
pop
cmp
shll
sti
xchg
mov
xor
mov
test
or
mov
test
sub
xchg
pop
push
mov
pop
xchg
jne
pop
cwtl
cmp
cmpb
mov
jge
fsubrl
fldt
sti
pop
xor
test
fs
aaa
loop
scas
movsb
fdivrs
mov
lods
loopne
lahf
insl
les
and
pop
inc
punpckhdq
rorl
sahf
subb
ret
or
stos
pop
imul
outsl
dec
mov
imul
jmp
jne
icebp
add
orl
pop
pop
movsl
lret
lock
sbb
push
in
mov
hlt
insl
lret
cs
stos
mov
ljmp
push
lahf
stc
enter
cmpb
scas
dec
dec
push
scas
add
jg
call
imul
push
add
push
mov
pop
push
xor
jge
jmp
sahf
pop
cmp
ds
or
insb
adc
jnp
mov
xor
pop
mov
dec
sbb
jo
je
pusha
sbb
mov
inc
lret
ret
stc
fwait
imul
sbb
push
xchg
popf
pop
mov
cmp
clc
test
aad
js
dec
out
push
or
addr16
ss
mov
sub
rclb
mov
sbb
xor
or
sub
ljmp
cld
in
out
sarb
inc
lret
out
fdivrl
das
sbb
daa
cmp
mov
ja
cmpsl
ficoms
mov
in
insl
jno
xor
mov
sti
dec
jmp
je
and
jge
or
les
pop
pushl
mov
cmc
in
ljmp
notb
lahf
push
mov
insb
arpl
enter
sub
mov
adc
or
inc
les
inc
cmp
lahf
fndisi(8087
fnstenv
sub
or
pop
jno
or
gs
or
inc
mov
adc
mov
fs
or
mov
push
xchg
xchg
sub
outsl
inc
inc
push
or
cmp
and
inc
movsb
inc
sbb
mov
clc
outsl
sbb
ja
rcr
stos
add
cmc
xchg
fidivs
sbb
xchg
and
mov
arpl
in
dec
adc
movsl
sub
pushl
push
cmpsb
xchg
std
stc
jb
cmpsb
loop
shll
add
hlt
lods
shrl
sub
scas
insl
mov
in
addr16
mov
or
iret
push
fisubrs
lcall
mov
fists
fnstsw
mov
imul
lret
add
stc
outsl
aaa
sbb
jne
or
cmpsl
sahf
stos
mov
push
lea
cmp
scas
outsb
cmp
push
xchg
repz
sbb
lods
sbb
jno
xor
cmpb
cmpsl
mov
movsl
jnp
add
jg
mov
ljmp
push
aas
cmp
jge
out
xchg
push
andl
mov
test
sbb
loopne
lock
or
pop
mov
add
xchg
adc
jp
push
mov
pop
or
clc
movsl
mov
dec
pop
push
pushf
pusha
push
jo
mov
fistpl
or
xchg
pop
adc
in
and
sti
fildll
loopne
les
dec
test
push
sti
rcr
jns
jle
cmp
lods
subb
adc
sub
lds
push
cmp
fidivs
std
push
loop
fldenv
xor
dec
lea
ss
mov
fwait
int3
int3
les
jo
add
ret
push
mov
popf
arpl
cmpsl
loope
ljmp
out
ficompl
imul
clc
jo
dec
pop
int
ljmp
xchg
sbb
jg
cmp
mov
sbb
dec
stos
jg
loopne
mov
pop
adc
int
mov
in
xchg
add
imul
xor
jo
inc
aas
jge
shlb
cs
rol
mov
fld
aam
jae
sbb
cmpsl
xchg
mov
testl
add
jl
push
aam
xor
jl
or
pop
mov
sub
pop
or
jecxz
mov
sbb
aas
je
pop
insl
stos
dec
and
jno
mov
pusha
jp
sbb
pop
jmp
mov
arpl
sub
xchg
lods
in
loop
aam
push
sub
fnsave
pop
out
jle
outsl
shrb
addl
addr16
mov
repnz
int
mov
pop
adc
adc
push
push
ret
jbe
lea
hlt
test
pop
fdivrs
pop
loope
sar
dec
vmovmskpd
call
pop
not
aad
and
ss
mov
movsb
inc
jge
xchg
aad
int3
out
ret
mov
lock
cmc
outsl
mov
lcall
fstl
sbb
jne
or
mov
add
xchg
and
inc
xor
std
cmp
ret
je
test
cli
lcall
pop
pop
aas
inc
cli
cmp
add
pop
dec
pop
xchg
jnp
or
pop
sub
mov
jmp
sti
decl
iret
mov
pop
imul
jg
outsl
sbb
dec
cmp
jmp
sti
decl
iret
mov
movq
imul
dec
cmp
jmp
repnz
lcall
scas
add
jg
jg
pop
stos
iret
sti
mov
jmp
mov
shll
ret
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
out
lods
add
loop
sahf
gs
sbb
pop
mov
movsl
jge
sub
in
adc
lea
fnsave
add
xchg
sub
movsl
jge
insb
lds
dec
in
adc
xchg
and
lds
gs
sarb
push
xchg
and
int
lods
jne
data16
cmc
out
adc
push
aad
aam
loope
or
push
or
mov
pop
popf
test
inc
adc
sub
test
jp
dec
add
mov
shlb
dec
loop
sbb
mov
scas
aad
aas
xchg
rolb
sub
stc
idivl
sub
mov
jae
push
clc
inc
xor
imul
clc
lds
and
pop
aad
cli
lret
lods
fisubrs
gs
dec
or
aad
popf
mov
pop
dec
lods
adc
mov
sub
cmp
xchg
rolb
mov
cmc
dec
sbb
lods
add
in
push
testl
xchg
xor
movsl
gs
lds
push
mov
clc
je
fs
adc
adc
sub
aad
mov
sub
clc
jge
inc
mov
addl
and
negl
js
sbb
dec
mov
push
lahf
push
clc
push
lea
addr16
inc
fnsave
gs
mov
movsl
jge
insl
lds
dec
in
adc
lea
fnsave
gs
mov
movsl
jge
insl
lds
dec
in
adc
in
shlb
xchg
adcl
cmp
mov
scas
push
dec
loopne
lret
je
mov
ljmp
test
scas
sbb
or
and
lea
setb
push
jmp
sti
cltd
inc
xchg
or
sub
icebp
das
test
push
ss
cmp
inc
cmpsb
and
jp
push
mov
sub
and
movsl
xor
cmp
ja
out
or
or
xchg
pop
or
aaa
inc
sub
cs
pop
cmc
adc
rcr
and
les
xor
pop
xchg
ret
adc
pushf
adc
es
fcoms
aaa
or
mov
xor
flds
pop
iret
jne
ds
adc
lcall
push
icebp
adc
pop
mov
inc
enter
jl
es
inc
rcrl
out
mov
lcall
imul
dec
mov
adc
dec
out
movsl
mov
popf
lds
mov
fs
cmc
pop
add
cmp
cltd
ror
lret
jnp
xor
xchg
popa
xor
cmp
lds
jge
insl
jne
and
add
out
mov
xor
jle
out
sbb
xchg
xor
cmp
push
fildl
inc
cltd
adc
fwait
push
add
loope
mov
inc
xchg
lret
jle
lods
rcrl
fstp
push
jge
rcrb
sti
xor
sbb
cltd
mov
rorb
lods
xlat
lretw
lahf
pushf
or
test
shlb
loopne
rorb
dec
adc
mov
pop
andb
jbe
sbb
cmp
shrb
js
mov
ss
pop
in
imul
jge
outsl
push
xchg
cmp
cmp
std
fistl
lods
jno
out
pop
scas
or
pop
aad
dec
fwait
stc
dec
sahf
push
adc
daa
inc
jmp
pop
aaa
dec
jo
fwait
jmp
and
cli
insl
sbb
pop
fldenv
mov
push
insb
rolb
aas
dec
mov
pop
sub
or
xchg
xchg
pop
jl
or
dec
dec
ja
in
movsb
clc
movsl
fwait
and
sarl
dec
push
imul
sbb
mov
ds
and
mov
xor
scas
dec
dec
jbe
sbb
inc
add
pop
mov
mov
enter
xchg
rcr
fisttpll
imul
outsb
jecxz
or
mov
loope
xchg
outsl
mov
push
pop
fimuls
lahf
mov
adc
sbb
jae
pop
loope
loopne
inc
add
pushf
das
cmp
fwait
dec
cld
dec
xchg
mov
jno
dec
stc
aaa
pop
mov
mov
popa
push
cmpsb
hlt
cmpsl
mov
mov
jle
pop
shll
cld
xor
mov
xchg
test
outsl
fistpll
xchg
lret
js
xchg
adc
outsb
shrl
clc
cltd
scas
adc
pop
cmpb
je
loopne
gs
ss
mov
lahf
adc
xchg
movsl
cmp
dec
xorb
jbe
dec
xor
add
out
dec
roll
lods
and
mov
cwtl
dec
imul
pusha
mov
or
inc
pop
fcoml
fs
xchg
fxch
scas
dec
or
dec
int3
into
addr16
jecxz
jno
mov
cmpsb
icebp
divl
cmp
cmp
sub
out
cmp
out
test
std
jno
mov
shll
sbb
xchg
sahf
jne
and
or
dec
ds
inc
dec
addr16
das
inc
inc
mov
cwtl
pop
iret
into
stos
into
sarb
mov
roll
xchg
xchg
pop
icebp
adc
stos
das
dec
xor
popa
mov
pushl
jns
iret
add
lret
out
add
arpl
rolb
pop
sub
mov
mov
push
and
repnz
pop
xor
outsl
pop
fmuls
cwtl
sbb
into
divb
das
jg
pop
lock
sub
lock
shll
sub
in
jb
cmpl
pop
ret
ret
dec
es
outsb
adc
dec
faddl
ljmp
inc
mov
test
hlt
sbb
addr16
mov
jle
dec
jb
xor
mov
in
lret
adc
mov
mov
inc
xchg
aam
add
sbbl
gs
jb
mov
shrb
lret
fildll
fimuls
aam
sub
jl
mov
insb
add
movsl
mov
mov
aas
jnp
rclb
cmp
scas
ljmp
push
jb
leave
sti
inc
mov
pop
sbbl
popa
or
in
xor
xor
ljmp
insl
push
arpl
xor
inc
pop
fdivl
shlb
pop
test
aam
xchg
test
push
test
mov
jb
daa
nop
lods
stc
fnstcw
mov
adc
fxtract
pop
aad
imul
dec
pushf
imul
xchg
fcmovnb
out
mov
aad
mov
jl
sub
dec
jo
sub
std
sbb
je
lds
dec
std
js
pop
or
and
cld
add
ss
sub
and
lods
mov
mov
hlt
sub
ss
cmpsl
imul
dec
jne
push
jmp
or
jmp
fs
pop
js
test
mov
push
into
movb
into
jnp
jne
sbb
dec
dec
into
stc
sub
pop
and
or
negl
clc
pop
push
test
add
out
cwtl
stc
mov
mov
xorb
into
jp
or
mov
scas
xor
dec
call
jp
or
xchg
push
push
cmp
jecxz
sbb
xchg
outsl
loopne
sbb
stos
or
pop
repz
xlat
enter
subb
inc
xlat
je
gs
fnstsw
push
or
mov
ficomps
fcmovnu
xchg
ror
mov
inc
in
jo
xor
and
mov
movsb
push
and
iret
sub
mov
inc
daa
push
add
push
lcall
cli
enter
push
mov
push
imul
lea
sahf
and
int
xor
icebp
enter
adc
mov
pop
scas
ja
mov
push
shrl
dec
call
or
dec
mov
mov
xlat
pop
loope
xor
lods
sub
movsb
pop
popf
mov
sbb
rorl
aad
outsl
pop
pop
pusha
add
imul
push
adc
or
push
lea
jne
pop
les
or
ret
xor
scas
fucomp
inc
out
ret
sub
es
xor
adc
out
in
add
cmc
push
mov
jg
cs
clc
push
out
cmp
loop
aas
arpl
and
inc
shll
fbld
xor
inc
call
lds
ss
mov
les
mov
ret
js
jmp
push
loope
loope
pop
imul
mov
inc
xor
jmp
fs
mov
addr16
lea
in
inc
mov
ret
sbb
aam
jo
xchg
arpl
jns
or
dec
fsts
mov
sbb
sti
mov
scas
inc
es
jge
jmp
ds
test
std
sarb
adc
ljmp
ror
ret
inc
sbb
cld
stos
and
adc
mov
pop
xchg
mov
pop
fwait
cwtl
xor
adc
push
loop
mov
mov
ljmp
hlt
cltd
add
xchg
int
out
and
xchg
mov
fcompl
mov
and
cmp
or
mov
jb
sar
push
jno
pop
in
pop
sbb
push
aaa
push
push
mov
cwtl
jno
cld
fistpl
clc
mov
adc
test
test
jnp
fstl
lret
das
mov
push
inc
scas
test
insb
imul
popf
adc
cmpsb
arpl
scas
pop
push
xchg
scas
sarb
sbb
dec
mov
rolb
push
push
insb
inc
shrl
sub
lock
add
pop
push
hlt
nop
mov
jae
mov
jb
inc
lods
movsb
mov
sbb
stos
js
in
bound
jmp
inc
cs
fisubrl
adc
pop
daa
add
jb
fwait
xor
roll
mov
mov
movsl
ljmp
jb
js
loop
cli
sbb
and
sub
test
fnstenv
sbb
jmp
jl
or
shll
mov
xor
imul
stc
cmp
call
mov
xor
addr16
insb
jne
xor
and
mov
stos
cmp
mov
mov
ret
xchg
popf
xchg
push
test
out
popf
sti
in
lret
lods
std
mov
lods
ja
cmc
and
push
mov
in
xchg
mov
mov
xor
in
ret
insl
jmp
fiadds
pop
aas
dec
fwait
or
lea
mov
cmp
sbb
cld
sub
cli
loopne
cmp
mov
cltd
pop
ret
setne
js
jle
stos
orb
inc
push
mov
jge
push
js
mov
jecxz
test
andl
popa
jl
fildl
test
cmp
std
push
clc
enter
pop
testb
sub
divl
jmp
push
adc
and
jb
addl
jo
jo
add
in
cmp
mov
sarb
fwait
into
cmp
or
adcl
mov
roll
pushf
rcrl
sbb
inc
adc
sbb
push
jns
repnz
cs
push
xor
jg
xchg
pushf
incl
sbb
test
cltd
dec
lods
cmp
add
lcall
std
int3
pusha
jno
or
add
les
pushf
mov
jnp
adcb
je
punpcklbw
adc
and
mov
mov
movsl
cs
out
in
jg
out
pushf
mov
push
shrl
xlat
lds
dec
and
dec
cmpsl
xchg
or
xor
mov
mov
insl
lods
pop
sub
push
lahf
inc
push
push
cmp
sub
aad
push
xchg
gs
push
movsb
sub
stos
cli
outsl
jecxz
rcl
xchg
test
jl
mov
cmpl
push
pop
sub
lods
shll
mov
push
or
cmp
ss
popa
mov
inc
and
dec
add
xchg
sub
insb
xor
pop
enter
loope
fwait
mov
cmpsl
inc
sbb
mov
mov
mov
add
lret
inc
lret
movsl
lods
sub
loopne
cmp
dec
out
popa
in
aad
dec
js
ret
push
xchg
and
ret
cmp
xor
push
push
aad
ja
mov
or
and
jmp
and
pop
iret
lea
test
inc
aam
jecxz
ljmp
enter
shlb
or
loope
out
out
sahf
sub
sub
dec
mov
data16
icebp
int3
or
lret
pop
push
pop
imul
and
mov
pop
mov
push
into
je
jo
pop
sbb
jo
mov
ljmp
pop
and
aad
ja
inc
push
rcl
pop
mov
pushf
dec
mov
stos
mov
jne
and
mov
stc
lahf
fs
xchg
sub
je
adc
xor
add
daa
jns
aaa
xchg
jl
and
mov
shll
jp
mov
cld
lods
imul
addr16
jg
inc
sub
mov
jnp
adc
ret
aaa
aas
std
mov
add
outsl
aam
push
xor
arpl
pop
loop
rorb
mov
adc
inc
iret
push
mov
cmp
mov
daa
out
xchg
cs
addl
call
or
loop
ss
fs
cmp
gs
and
add
lahf
add
mov
xchg
in
push
stos
dec
sub
cmp
add
inc
pop
gs
jle
repz
sub
dec
mov
or
popf
sbb
int
adc
in
or
les
fisttpll
lahf
sub
daa
les
outsb
out
sub
dec
test
pop
xchg
lcall
cltd
ljmp
ret
xchg
jno
jg
sub
adc
les
in
loopne
pop
sub
push
std
xor
ret
ljmp
xor
test
mov
in
lret
je
lcall
ja
lea
xchg
js
repz
fwait
out
fdivs
xchg
lret
ss
jg
jb
pop
aam
clc
lcall
add
data16
into
xor
jp
imul
pop
bound
cmpsl
arpl
movsb
pop
pop
push
pop
arpl
addr16
fisttpl
xchg
ret
iret
push
cmpsl
ret
ds
and
mov
push
push
cli
enter
mov
sbb
insb
clc
adc
jl
movsb
repz
stc
in
add
leave
push
cmc
sahf
data16
sti
push
xor
movsb
mov
int3
xchg
dec
fmul
jb
xchg
xchg
cld
dec
ljmp
imul
pop
inc
les
int3
ljmp
xchg
mov
mov
lock
ss
cmpb
insl
movsb
cld
add
mov
mov
pushf
dec
call
pusha
adc
mov
mov
mov
cmp
push
jl
mov
mulb
sbb
xor
stc
sub
jnp
repz
dec
pushf
dec
fwait
mov
ret
cmp
pop
mov
mov
lret
in
fimull
adc
imul
inc
pop
lods
test
xor
adc
jns
out
push
xchg
mov
nop
out
insl
mov
lret
mov
mov
fdivp
clc
dec
rcrb
test
loop
pop
jns
mov
lock
popf
lcall
sub
sub
sub
cmc
mov
fdivp
jnp
out
cmc
jne
and
mov
dec
inc
in
imul
xor
gs
pusha
and
sahf
jecxz
sub
adc
in
cmp
imul
insl
out
mov
and
pop
mov
cmp
sbb
inc
sbb
lods
dec
xchg
rcr
pop
cltd
cmpsl
and
cmp
rcrb
sbb
xchg
mov
call
movsl
icebp
in
inc
mov
sub
dec
push
dec
jo
pop
lods
jle
jecxz
add
or
or
mov
or
clc
int3
aad
bound
mov
cmp
pop
and
or
mov
cmp
mov
push
mov
pop
push
add
cmp
lock
pop
adc
stos
sub
mov
mov
jb
ljmp
pop
mov
inc
movsb
inc
dec
loope
call
cmp
xor
adc
pop
cltd
sub
shll
mov
xchg
adc
test
dec
daa
in
imul
int
ss
call
jecxz
cmc
jl
mov
push
mov
fnsave
or
imul
loope
out
cmp
push
jnp
pop
jmp
lock
shrb
and
fdivrl
xor
into
xlat
fnstcw
dec
xor
idivb
xor
adc
subl
xor
dec
cmp
rclb
ja
pop
stc
xchg
jae
stos
stos
roll
or
add
xor
mov
jg
imul
stos
inc
mov
mov
int3
inc
jge
push
xlat
push
in
push
jae
lahf
rcrl
mov
stos
mov
sbb
enter
cmp
jge
mov
test
ficomps
dec
xor
lcall
pop
pop
or
test
cli
or
aad
dec
pushf
mull
mov
add
mov
inc
inc
stc
cmp
mov
pop
and
xchg
inc
jb
inc
jno
movsl
js
push
pop
jecxz
or
in
lock
cmp
lods
sbb
inc
pop
ljmp
mov
inc
and
fdivr
xor
outsb
adc
pop
cmpsb
mov
and
scas
lret
sbb
out
in
pushf
cwtl
mov
pop
in
loope
add
rep
mov
sub
jns
dec
add
pop
jo
cmc
jbe
outsb
xchg
jmp
dec
inc
mov
daa
call
fldcw
std
fadd
mov
jle
cmpsl
cmp
js
dec
sti
jp
outsb
lret
jge
sub
mov
jno
lahf
imul
push
aas
lods
adc
fwait
in
out
xor
pop
jnp
int
inc
inc
xchg
mov
imul
lret
cld
scas
movsl
scas
jbe
xchg
popf
ret
les
xchg
push
cwtl
fcoml
sub
cmpsl
cmp
adc
ds
jge
sub
sbb
pop
stc
mov
cmpsl
fnstenv
add
cmp
adc
in
nop
movl
mov
std
mov
pop
add
addb
std
jae
mov
cmp
out
inc
bound
xlat
pop
rcrb
push
or
mov
mov
dec
das
pop
test
popa
lea
test
repnz
xchg
push
cmpsb
lret
jg
test
sub
and
popf
orl
push
push
xchg
adc
fsubl
sahf
orl
inc
movsl
imull
shll
sub
bnd
pop
cmp
dec
cmp
es
pop
scas
call
in
sbb
outsb
adc
mov
sbb
xor
out
fwait
jmp
or
movsb
dec
stos
xor
ds
pushf
add
rorl
out
jmp
add
rorb
in
test
mov
push
lcall
into
xchg
lds
sbb
and
sbb
test
jp
jg
xor
sub
stc
aas
push
ret
ljmp
mov
mov
dec
jb
jl
div
imul
adc
test
outsb
out
adc
enter
mov
pusha
mov
aad
xlat
pop
out
cs
push
lret
shrb
add
and
pusha
rcrb
cwtl
mov
scas
dec
clc
cs
cmpsl
mov
cli
dec
lods
shll
sti
jecxz
jnp
xchg
loopne
mov
out
xor
dec
dec
sbb
jl
xor
ds
cltd
xchg
test
xlat
push
pop
out
int
in
mov
adc
push
mov
xchg
jmp
insb
cld
loope
aas
xor
lahf
rorb
jp
push
in
fsubr
xor
fnstenv
mov
jecxz
lret
mov
outsl
pop
arpl
pop
sbb
pop
arpl
pop
mov
nop
sub
mov
std
out
imul
cli
out
cmp
mov
pop
loop
cmp
push
cli
inc
mov
cmp
scas
enter
loope
jb
lret
and
sarb
arpl
lret
adc
sbb
sbb
test
cmc
repnz
jne
xor
out
out
ljmp
cmc
or
sub
aaa
pop
pop
jns
mov
cmp
mov
mov
lods
inc
ljmp
rcr
and
leave
sub
push
inc
idiv
sahf
add
imul
xlat
sub
adc
aaa
aam
out
or
fisttpll
dec
lods
lods
inc
dec
insl
jns
sbb
imul
and
imull
call
pop
mov
loope
mov
repz
push
xchg
ss
push
mov
fistps
pushf
jmp
sbb
rorb
dec
daa
xchg
jmp
sarl
add
lds
jl
jns
int
jp
lds
insl
jo
inc
cmp
xchg
adc
adcl
jp
mov
sbb
xor
popf
inc
pop
vcmpss
fiaddl
repnz
subb
jmp
inc
xor
jnp
dec
pop
xor
or
dec
rcll
pop
rcll
pop
dec
dec
dec
pop
dec
push
nop
sub
jmp
and
pop
sub
iret
or
inc
xchg
lods
dec
loop
push
arpl
pop
stos
dec
fbstp
adc
inc
sbb
pop
es
dec
fnsave
or
pop
sahf
xor
scas
push
mov
adc
xor
ret
or
add
out
add
xor
jmp
popf
sub
or
mov
or
les
cwtl
fcomps
add
cmp
sarb
movsb
hlt
pop
arpl
je
cmp
arpl
and
imul
scas
or
xchg
cs
push
mov
in
leave
jp
inc
inc
lds
stc
ficoml
addb
jp
lods
dec
shlb
stos
leave
jge
inc
sub
es
cmp
lea
cmp
mov
shlb
out
int
jp
lock
cld
adc
mov
lcall
sar
out
inc
inc
es
cs
icebp
sub
dec
pop
push
fwait
mov
cmp
jl
out
dec
loope
adc
pop
stos
fwait
enter
in
in
ror
std
lea
lret
or
je
pop
and
xchg
jecxz
and
lahf
sub
lret
scas
sbb
dec
call
decb
dec
mov
icebp
ret
das
mov
mov
test
out
cli
enter
int3
add
adc
arpl
xor
jnp
fildll
loopne
and
add
std
push
in
inc
fnsave
gs
mov
movsl
jge
insl
lds
dec
in
adc
lea
fnsave
gs
mov
movsl
jge
insl
lds
dec
in
adc
lea
fnsave
gs
mov
movsl
jge
imul
mov
lea
pop
jne
movsl
ret
das
mov
or
cmp
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
in
hlt
daa
les
aam
stos
iret
les
loope
icebp
inc
xorb
push
xchg
and
xor
add
adc
in
hlt
daa
les
aam
movsb
ja
ja
push
xchg
xor
cmpsl
xor
xor
add
adc
in
hlt
les
aam
movsb
outsb
mov
test
pop
fs
test
out
jp
dec
mov
jp
lods
jnp
push
mov
cmpsb
pusha
in
mov
lfs
cmpsb
insl
scas
ljmp
and
mov
push
mov
xor
pop
push
mov
xor
dec
pop
pop
leave
sarl
xchg
and
sbb
jg
or
pop
pop
cli
cld
movsl
dec
stc
fs
fs
cmpsl
mov
push
mov
andb
push
push
movsb
ja
ja
and
ret
fs
leave
push
pop
bound
push
xlat
sbb
in
jae
mov
adc
dec
mov
outsl
fnstsw
test
test
inc
sbb
int3
push
sub
lea
ret
pop
pop
xor
push
int
push
xor
sarl
aam
movsb
ja
test
pop
fs
mov
and
xor
add
adc
mov
jb
enter
loope
aad
and
xchg
cmp
inc
xchg
pop
in
mov
xchg
fs
loop
fsubrs
test
xchg
jne
ret
jbe
add
xchg
jbe
adc
lea
nop
daa
lods
jae
inc
movsb
inc
mov
test
inc
fs
cmpsl
inc
xchg
push
xchg
xor
add
adc
in
hlt
daa
les
aam
movsb
ja
test
inc
fs
cmpsl
inc
xchg
push
xchg
xor
add
adc
in
push
xor
nop
lock
cmp
add
popl
shrb
lcall
lock
lods
jo
cmpsb
sbb
pop
jle
mov
mov
fisubrs
inc
jnp
adc
aas
cmp
nop
mov
test
or
lret
push
mov
pop
xorl
xchg
scas
xchg
invd
jo
fistps
shll
and
cmp
mov
pop
push
scas
xor
cmp
test
int3
clc
ficomps
cmpsl
mov
daa
jne
mov
and
lea
cmp
stos
sub
cmp
inc
mov
add
push
pop
lahf
xchg
add
lea
leave
pop
cmc
fs
lret
movl
test
add
lods
pop
insl
test
jae
comiss
out
dec
mov
iret
adc
out
xchg
in
jecxz
insb
in
js
pop
push
jb,pt
daa
or
sbb
push
xor
lahf
dec
jnp
or
nop
cmp
pop
adc
push
out
gs
push
mov
aam
xchg
jp
jecxz
gs
out
adc
adc
or
sti
imul
mov
and
sub
and
push
jb
and
nop
enter
in
cli
mov
shrb
psubb
or
pop
adc
mov
aam
outsb
fldenv
fcomi
hlt
push
mov
imul
jno
push
stos
mov
pop
mov
daa
pop
jle
les
sbb
sbb
hlt
add
xchg
jecxz
jno
mov
call
xchg
sub
inc
sbb
lret
mov
daa
cs
cmp
cli
mov
aad
dec
cwtl
inc
testb
inc
add
inc
je
cmp
lret
dec
rolb
or
int3
data16
push
sub
into
push
jns
push
loope
nop
dec
add
pop
mov
and
lahf
nop
and
xor
and
adc
aam
loopne
aad
xor
insl
mov
ja
or
je
and
mov
xchg
clc
mov
pop
out
lock
into
xor
mov
leave
arpl
jae
jnp
push
aaa
xor
jo
es
push
mov
cli
in
aad
jmp
iret
cwtl
jns
jbe
popf
int3
jecxz
xor
iret
and
jne
jmp
push
jne
fsubs
mov
cmpsb
add
inc
mov
loop
cmp
and
mov
mov
sub
scas
inc
jno
push
jns
cltd
and
mov
jg
adc
add
mov
adc
pop
add
fsubrl
popa
call
pop
pop
popf
adc
test
movsb
sbb
and
mov
pusha
sahf
dec
lds
push
mov
bound
int3
outsl
shr
pop
scas
mov
rorl
mov
mov
or
dec
xor
sub
sbb
pop
pop
fcoml
xchg
inc
sub
dec
mov
mov
xor
cmp
roll
shlb
xor
out
xchg
repz
inc
jl
popa
pop
cmp
std
pop
jmp
or
push
jg
test
in
mov
js
es
cmc
das
insl
insl
imul
mov
in
out
pusha
mov
jp
xchg
aaa
test
dec
fmull
fwait
ljmp
add
push
jno
or
movsl
push
sbb
lret
lahf
mov
xchg
mov
xor
mov
shl
orl
jecxz
xor
mov
ficoms
push
cld
mov
xchg
dec
sub
mov
sbb
hlt
cmp
cltd
or
outsb
les
dec
shll
leave
push
pop
jne
dec
iret
push
xchg
das
imul
mov
xchg
add
outsb
push
lcall
pop
popl
mov
pop
pop
mov
or
movsb
hlt
imul
aas
sbb
dec
or
add
ret
sub
ret
pop
insb
shl
test
fldl
lret
jecxz
rolb
or
sti
jl
sahf
sti
leave
dec
rcr
push
aad
stos
into
jp
inc
subl
pop
loope
xchg
jno
stos
iret
popa
nop
sbb
mov
sub
cs
lcall
mov
xor
test
xchg
inc
stc
push
arpl
mov
dec
lock
adc
push
enter
les
pop
sbb
js
insl
mov
xor
push
mov
insl
sbb
out
bound
loope
loopne
sti
jno
mov
jge
jmp
sti
fwait
xor
test
sar
dec
lds
adc
mov
shl
sub
xchg
sbb
sub
ds
lock
inc
cmp
add
js
dec
adc
inc
repz
push
push
insb
test
lock
sbb
jno
jne
aam
in
lods
jae
mov
mov
int3
std
mov
mov
pop
leave
push
shrb
mov
add
xchg
in
push
mov
sahf
adcb
push
mov
ret
testb
adc
mov
aas
das
cld
pop
ret
ret
jmp
std
in
in
jno
addb
incb
inc
jmp
cmp
fsubl
enter
aas
mov
adc
and
sti
fcomi
into
sbb
mov
call
xor
lret
imul
push
mov
orl
mov
aas
out
mov
mov
push
out
cmp
xor
dec
test
sbb
xor
mov
stos
cmovl
dec
push
arpl
pusha
orb
leavew
mov
shrb
push
cmp
adc
push
push
cltd
cmpsb
add
jl
scas
mov
or
xlat
lds
and
mov
dec
push
and
mov
push
mov
fs
jnp
and
push
andb
fildll
je
add
repnz
in
inc
mov
sub
mov
das
pop
dec
xchg
adc
pop
fildll
mov
xchg
jno
outsl
fcomip
adc
or
mov
insb
push
xor
inc
and
or
ja
jne
gs
int
xchg
fsubr
rcrl
adc
fcompl
or
sub
fildl
or
lods
lods
mov
daa
jne
std
xchg
hlt
out
stc
sarb
lods
fstpt
out
mov
std
fidivrl
sbb
xchg
cmp
pop
add
mov
add
pop
filds
call
cwtl
add
test
popf
lcall
outsl
in
outsb
mov
push
push
sub
in
int3
out
rcr
insb
mov
rclb
mov
mov
cltd
fldenv
and
push
popf
inc
and
out
pop
cltd
cltd
sub
shrl
scas
lahf
leave
mov
xchg
cli
shll
mov
xor
add
int3
imul
sbb
in
call
insl
outsb
in
out
and
xchg
lcall
stc
imull
sti
inc
lods
cmc
mov
mov
push
jb
or
cs
xor
mov
insb
in
xchg
mov
inc
lret
jo
sbb
rcrb
inc
add
rolb
aad
or
pop
or
pop
inc
cltd
cmpsb
popf
and
lret
shrl
xchg
aad
push
sbb
sbb
test
jno
sti
fs
push
js
or
sarb
and
ja
or
xchg
jnp
lea
sbb
stos
fsubrl
push
dec
pop
bound
ret
or
pop
jae
aam
movsb
sub
ds
std
jge
sub
fiadds
in
and
test
ja
jnp
in
repnz
pusha
stc
xor
lahf
in
add
sti
or
sub
push
sub
push
popa
popaw
inc
call
pop
jmp
inc
sub
jo
xchg
stos
push
popf
xorl
sbb
pop
dec
and
fs
mov
mov
mov
jne
xchg
xor
out
out
sub
jns
lea
mov
inc
adc
test
movsb
push
xchg
clc
in
adc
mov
addr16
hlt
sub
push
cmpsb
les
add
sub
or
or
mov
xor
dec
jae
xchg
orps
mov
jp
or
pop
loope
inc
and
jnp
sbb
dec
lock
mov
and
popa
xchg
inc
dec
out
fisttps
sub
jne
fisubrl
decl
movsl
jg
pop
insb
ficomps
popf
scas
stos
mov
xor
or
push
lea
arpl
imul
dec
shlb
lahf
hlt
adc
cmc
loope
stos
popa
jecxz
icebp
out
lahf
loop
mov
daa
mov
nop
jmp
push
push
or
add
or
cli
out
xor
rcrl
jmp
mov
ds
sbb
imul
mov
repz
int
bound
out
dec
dec
call
mov
sbb
ds
mov
cmpb
sub
out
stc
dec
or
fsubs
lcall
sbb
repnz
cmp
sbb
fldenv
iret
popa
addr16
push
and
lcall
ficomps
push
pop
pop
jecxz
test
daa
add
sub
sub
mov
test
shlb
sbb
lods
jb
sar
mov
lds
cmp
ljmp
dec
lahf
stos
cli
out
call
lcall
mov
and
roll
mov
mov
push
pop
cmp
xor
and
and
or
repnz
dec
xor
sahf
jno
cltd
lahf
pop
pop
imul
mov
push
sbb
call
std
jnp
fsubrl
daa
leave
and
push
arpl
xor
shll
sbb
out
aaa
sbb
xchg
pusha
scas
es
add
es
ljmp
xchg
sub
xchg
xchg
pop
gs
cmp
push
in
mov
out
jns
rcll
ret
fistpll
mov
clc
jl
xchg
sub
and
mov
iret
aas
int
je
sub
pop
dec
mov
shll
call
xchg
std
movsl
mov
lea
mov
xor
outsl
jb
add
adc
inc
push
mov
pushf
mov
mov
pop
daa
sbb
outsl
inc
rcl
outsl
mov
mov
add
daa
cmp
xlat
jne
call
jge
cmp
sub
and
lret
sub
aas
push
xchg
push
subb
lea
call
imul
pop
sbb
cmp
inc
xor
pop
adc
pop
jle
ja
lahf
into
test
dec
fldl
and
aaa
jecxz
jne
cmc
aas
dec
in
sub
or
notb
cmp
out
jne
mov
add
iret
hlt
inc
lods
mov
loop
pusha
inc
sbb
jae
inc
cmpl
pop
add
or
std
addr16
inc
cmpsl
shrb
daa
fisubrl
adc
mov
fidivrs
xor
sarb
pop
and
cmp
pop
loopne
adc
push
jae
push
pop
push
pusha
jmp
int3
scas
xor
sti
jg
fisttpl
push
sub
xchg
popf
xor
adc
test
xchg
lods
sub
jnp
cmp
les
mov
lods
xor
icebp
movsb
or
pop
mov
mov
mov
inc
and
mov
popa
mov
pop
insl
mov
xor
lahf
rol
repnz
fmull
std
ret
xor
iret
inc
mov
call
mov
xchg
loop
xchg
cmp
and
bound
mov
dec
sti
ja
mov
pop
xchg
cltd
movsb
and
jmp
stos
xchg
fbstp
jmp
inc
sbb
ficoms
push
outsb
xchg
mov
out
cmp
out
pop
outsb
mov
pop
daa
into
push
push
xchg
test
adc
adc
jae
loopne
imul
stos
sbb
das
push
sahf
icebp
stc
jp
loop
loop
lods
push
pop
or
push
cwtl
xchg
inc
inc
iretw
cmp
in
jmp
dec
ret
mov
test
movsl
jbe
jae
mov
inc
cmpsl
push
pushf
mov
mov
pop
repz
mov
push
fadds
inc
jae
cld
dec
in
pop
sbb
stc
push
jns
xchg
lret
es
inc
jp
add
add
or
in
adc
repz
xor
into
add
stos
mov
jno
inc
and
das
ljmp
push
mov
ljmp
call
aaa
repnz
loope
repnz
arpl
push
push
repz
inc
sar
add
sbb
or
fldcw
mov
or
lods
push
or
loop
jge
cmpsl
and
ds
iret
adc
movsb
push
out
daa
es
loop
loopne
inc
sti
dec
das
fs
mov
adc
mov
in
das
popa
fadds
repnz
mov
int3
mov
push
movsb
outsb
inc
jb
dec
cmp
fldl
sarb
les
fadds
jae
cmpsb
rcrb
lods
jne
pop
cmpsl
xor
dec
jecxz
out
add
jecxz
lcall
fwait
popf
cmpsb
into
popf
jle
jl
cmpl
rol
je
pop
popl
xor
pusha
fcomps
add
lock
mov
push
adc
mov
loop
or
lret
stos
pop
pop
mov
popa
inc
jl
fadds
je
into
arpl
mov
jp
loop
xlat
xchg
add
sarb
push
lock
cmp
jmp
inc
sub
cmp
gs
movsb
fsubp
rcr
leave
push
daa
clc
pop
nop
jno
dec
lret
lret
test
dec
pop
mov
pushf
push
insb
mov
mov
mov
inc
int
cmp
xchg
cmp
pop
mov
sahf
das
inc
cwtl
out
fisubrs
mov
xchg
sahf
lret
mov
jge
sub
loope
call
dec
dec
sbb
mov
movsl
sarb
cmp
push
bnd
out
xchg
nop
aad
test
mov
xor
dec
mov
daa
xchg
pop
test
fsub
sbb
std
arpl
mov
andb
out
mov
dec
or
lcall
mov
jo
sti
sub
sbb
mov
loopne
sub
push
mov
cmc
lds
cwtl
test
fldl
add
loop
jo
out
popa
sub
out
outsl
mov
stc
mov
dec
arpl
stos
xor
repz
cmp
sbb
fstps
fcoml
adc
iret
jle
cmp
sbbl
rol
sbb
jno
jecxz
std
mov
in
jne
out
aad
mov
stc
mov
nop
inc
shrl
out
lret
xchg
mov
sbb
inc
data16
mov
inc
mov
out
fnstcw
jne
inc
gs
loop
sbb
cltd
sarl
mov
sub
repz
iret
pop
xor
pop
and
pop
sbb
ss
and
mov
mov
ja
subl
mov
movsl
imul
or
cmp
pop
popa
pop
jmp
xchg
sub
stos
mov
adc
ret
pop
inc
dec
clc
inc
mov
addr16
lahf
je
in
jbe
mov
push
ret
adc
jle
stos
inc
aas
push
mull
outsl
enter
sbb
xor
push
sti
jns
test
je
stos
pop
dec
mov
xor
jno
inc
mov
daa
cltd
inc
pushf
fsubrs
adc
lret
loop
addr16
rorl
pop
pop
in
cmp
sub
inc
in
xor
mov
jne
cmc
push
cmp
push
mov
imul
mov
mov
cmp
in
and
ss
movsl
adc
xchg
and
jl
mov
stos
jp
add
mov
push
pop
gs
ss
aam
and
jbe
jo
outsl
or
mov
xor
xlat
shlb
sub
mov
sbb
inc
in
adc
int3
pop
adc
xchg
mov
fisttpll
inc
cmpsb
mov
and
add
adc
pop
testl
or
scas
mov
lods
sbb
jne
das
or
daa
andb
xchg
rclb
out
mov
push
cmpsl
jb
pop
push
mov
add
xchg
mov
inc
call
xchg
xchg
sbb
mov
pop
test
inc
popl
xchg
and
int3
ret
push
sbb
les
jl
insl
fsubl
ds
cmpsl
popf
pop
jle
jb
aam
push
lcall
aaa
mov
xor
vunpcklps
dec
dec
ret
adc
insb
dec
movsl
add
popa
mov
add
je
cmpb
lret
jno
arpl
pop
out
jmp
nop
dec
sub
cld
xchg
lcall
popf
mov
xor
int
xor
test
stos
das
push
mov
lods
imul
inc
dec
push
dec
insb
lods
in
in
scas
pop
pop
ret
into
out
pop
mov
fwait
shlb
and
xor
ss
push
popa
add
jmp
repnz
inc
out
cmp
sub
mov
push
lcall
mov
aas
sbb
test
adc
xacquire
push
pop
repz
pop
scas
mov
inc
sbb
pop
outsb
and
push
inc
lods
aaa
push
sti
sti
sub
lods
fdivrp
mov
inc
mov
jl
dec
xor
xor
stos
cmpxchg
in
fbld
push
pop
outsb
cmp
and
pop
lcall
repnz
jno
cmp
push
insb
add
stos
ja
and
push
or
add
mov
and
iret
or
cli
mov
stc
mov
mul
lea
in
rcl
fwait
push
div
and
mov
jns
fbstp
and
sub
mov
repz
scas
mov
outsl
and
ljmp
pop
ljmp
sbb
sbbl
push
icebp
nop
fwait
int
adc
shl
dec
into
inc
movsb
mov
fbstp
fbld
test
jg
sbb
mov
mov
sub
xor
adc
out
stos
jmp
cmp
mov
push
out
and
out
mov
scas
xor
jle
dec
fidivrl
push
inc
add
clc
pop
repz
pop
xor
enter
cli
cld
sub
inc
lea
loopne
inc
push
fisttpll
outsb
nop
push
std
in
mov
outsl
loop
sub
xlat
pop
hlt
test
je
lods
push
cwtl
lea
mov
int
dec
in
lods
adc
dec
repz
pop
fs
adc
mov
shlb
jp
xchg
and
mov
sub
push
pop
rcll
cld
push
jnp
faddp
in
xor
mov
fidivrl
aam
mov
popf
jbe
cmp
mov
sub
or
adc
xchg
xor
or
outsb
test
pop
sti
jp
scas
push
xor
clc
dec
scas
push
cmp
cmp
and
test
mov
pop
lret
aad
sub
xor
mov
rolb
inc
fwait
mov
sub
inc
mov
enter
and
lods
iret
inc
ror
push
nop
flds
call
shl
mov
mov
jno
sbb
dec
ret
sub
cmp
and
mov
jle
jbe
push
sub
pop
lock
loopne
lret
jne
shr
pushf
je
pop
cs
int3
mov
fistpll
shl
inc
loop
les
js
push
jno
jle
inc
dec
push
into
push
test
insl
jo
test
xchg
dec
jno
xor
in
xchg
data16
test
xor
xor
cmp
jmp
pushf
aam
in
mov
gs
fincstp
jecxz
push
push
movsb
divl
jns
outsb
cwtl
scas
or
aad
jne
mov
loop
mov
cmp
bound
mov
and
je
idiv
inc
pop
jno
fsubr
mov
lret
add
lock
jbe
cmp
lahf
mul
adc
cmpsl
sarl
hlt
test
cld
push
in
in
cmp
enter
jl
outsl
popf
fmul
pop
ja
icebp
and
stos
aas
pushf
cmp
mov
stc
cli
add
add
outsl
xlat
sub
cltd
cli
mov
bound
imul
dec
shlb
roll
jmp
mov
in
lret
int
fisubrl
dec
std
nop
lret
cmp
std
bnd
push
mov
faddl
and
arpl
shl
pop
mov
testb
lock
shll
push
fwait
and
test
sbb
sbb
or
mov
or
mov
daa
and
inc
cmp
test
cmp
and
scas
pop
fsubrs
shr
in
inc
nop
sub
jbe
dec
xchg
sbb
sbb
sub
cmp
cmc
sarl
add
ljmp
pop
xor
dec
sahf
js
loope
inc
push
pop
outsl
jae
inc
mov
cld
call
jle
minps
xchg
frstor
jge
xchg
pop
adc
out
mov
aam
movsb
ja
test
inc
fs
cmpsl
inc
xchg
push
xchg
xor
add
adc
in
hlt
daa
les
aam
movsb
ja
test
inc
fs
cmpsl
inc
xchg
push
xchg
xor
add
adc
in
hlt
daa
les
aam
movsb
ja
test
inc
fs
cmpsl
inc
xchg
push
andl
out
rcll
in
hlt
and
adc
pop
movsb
ja
test
xchg
or
push
jg
cwtl
sti
test
mov
or
sbb
fistpll
push
test
mov
imul
stc
or
sub
sub
fnstcw
leave
or
sbb
imul
test
mov
imul
cmp
sub
shlb
adc
add
jb
arpl
mov
cwtl
jae
or
imul
outsl
mov
inc
fsts
lea
cmp
push
mov
pushf
push
add
aas
jecxz
cli
xor
stos
test
mov
cmpsl
adc
into
xor
and
fsts
imul
es
dec
clc
cmpsb
pop
lea
int
inc
cld
faddl
lds
in
jmp
pop
or
fldt
sub
aas
fsts
pop
push
and
mov
xchg
adc
sti
testb
inc
jnp
mov
xchg
sti
or
stos
test
aam
dec
mov
imul
cmp
ret
fldt
dec
stc
in
xchg
mov
push
and
pop
ss
imulb
scas
dec
test
lret
fstpt
loop
and
or
sbb
jl
imul
inc
mov
jo
add
push
sarl
fisttpl
mov
outsl
call
push
aad
les
sub
push
jmp
sahf
pop
mov
mov
imul
ljmp
call
or
nop
mov
dec
dec
cwtl
push
lods
addr16
jae
and
jnp
dec
mov
mov
imul
cmp
sub
fnstcw
leave
or
sbb
imul
test
mov
imul
cmp
sub
fsts
mov
push
in
dec
add
sti
and
xchg
arpl
leave
push
test
cmpsb
aaa
inc
add
mov
mov
test
fstl
lea
mov
dec
xor
cmp
and
loope
add
push
cmpsb
sbb
push
movsb
out
mov
pop
sub
repnz
push
je
sbb
add
and
sub
aam
subb
inc
or
jp
in
in
inc
or
aas
addr16
cmp
pop
xchg
push
lods
in
push
test
repnz
loop
test
insb
lock
icebp
loop
imul
push
movsl
pop
add
fimull
pand
lods
mov
pop
cmp
fwait
dec
xchg
addl
adc
jae
testb
lea
loop
mov
push
jmp
leave
push
xchg
xchg
cltd
add
adc
push
ret
call
cmp
fldenv
rclb
xor
dec
mov
mov
sub
sub
pop
out
outsb
inc
shlb
pop
out
fistl
enter
clc
icebp
test
pop
repz
loope
and
push
xchg
pop
das
cltd
out
rcll
push
psubsw
xlat
test
cwtl
imul
int3
testl
cld
or
and
xchg
imul
mov
fidivl
inc
mov
fcoms
inc
cli
repz
ret
sbb
dec
lret
mov
jl
out
adc
sti
cmovnp
adc
dec
loop
xlat
xchg
sub
push
or
push
add
adc
lods
add
push
mov
push
lods
aaa
rorb
or
test
scas
fdivrs
insb
push
std
dec
cmp
push
mov
mov
mov
mov
out
xchg
mov
push
adc
xchg
enter
pop
sbb
inc
push
add
push
das
ss
cli
test
shrb
xchg
dec
xor
lahf
fdivs
sbbl
xchg
int
jp
pop
negb
adc
jle
daa
xor
cmp
cs
rorb
sub
sbb
push
xlat
jo
mov
mov
cmc
xor
out
es
ret
loopne
xchg
and
and
xchg
imul
mov
pop
icebp
mov
les
js
mov
inc
and
and
mov
lret
mov
adc
mov
and
pop
pop
pop
fwait
mov
adc
std
notl
mov
lcall
call
out
mov
popa
andl
or
loopne
into
and
inc
scas
mov
scas
xchg
cmp
adc
orb
aas
add
sbb
shll
out
adc
scas
insl
and
popa
adc
int3
inc
mov
jne
pop
insl
push
pushf
jle
mov
xorl
popl
loopne
iret
sti
lcall
in
outsb
aas
or
mov
dec
pop
data16
ret
into
test
pushf
loopne
dec
cpuid
aam
xor
sub
jbe
and
inc
mov
mov
push
cmp
mov
mov
in
mov
stos
imul
mov
lcall
rorb
add
rorl
mov
sub
jle
xchg
sbb
sub
cmpsb
popa
pusha
sbb
int3
call
out
inc
incl
lahf
fldl
dec
inc
outsb
pusha
inc
daa
in
inc
cwtl
lea
popa
dec
test
cs
mov
test
je
mov
xor
aam
sbb
sar
cmp
arpl
adc
mov
cmovge
adc
mov
dec
push
add
mul
mov
pop
or
sbb
push
jle
sub
sub
outsl
push
jns
sub
aaa
dec
sub
mov
pop
lcall
cmpsl
pop
scas
loope
xor
ja
pop
test
mov
lea
inc
jae
out
mov
push
or
push
test
inc
push
dec
xchg
add
jle
mov
daa
out
sbb
dec
ss
out
push
pandn
stos
enter
je
insb
flds
sbb
cltd
inc
push
aas
push
scas
sti
loope
sbbb
xor
shrb
mov
jecxz
jbe
and
jecxz
cli
push
jnp
cld
sub
aad
clc
adc
stos
stos
icebp
cld
int3
and
jb
jbe
xor
aaa
cmp
mov
bound
inc
xchg
or
ljmp
xchg
mov
mov
fdivrl
adc
std
xchg
sub
inc
leave
scas
aas
imul
test
shrb
das
dec
mov
movsb
vmovsd
adc
cmp
mov
mov
pop
jmp
dec
ss
jno
popf
push
jle
mov
lret
in
sub
enter
cli
cmp
jo
scas
cmp
das
ss
lods
ljmp
dec
es
dec
cmp
cwtl
rcrl
es
cmp
leave
inc
adc
jnp
jl
movsb
pop
xor
clc
ljmp
jge
mov
iret
xchg
test
mov
int3
sub
cltd
mov
pop
mov
pop
push
jb
lahf
loop
mov
mov
sub
jae
int
hlt
cmp
stc
inc
sub
data16
fs
cmpsb
or
fwait
in
dec
jle
sbb
data16
lock
pop
daa
sub
jno
jg
pop
mov
dec
add
sbb
xchg
mov
mov
mov
mov
sub
loopw
push
sub
cmp
bound
aad
jb
adc
outsl
mov
scas
xchg
pusha
adc
cltd
xor
pop
dec
or
enter
rorw
xchg
mov
inc
mov
xchg
sti
jae
cwtl
mov
call
ja
out
push
nop
inc
cli
pop
addb
xlat
pop
out
mov
jmp
jge
fimull
xchg
and
pop
insb
mov
cmpsl
std
sub
loopne
lret
shl
pop
lcall
clc
shlb
push
ret
mov
push
and
mov
je
jmp
ret
mov
lods
pop
sbb
jae
push
pop
mov
mov
je
aas
ret
shll
cltd
jecxz
out
xor
mov
sub
outsb
inc
daa
inc
je
and
out
dec
mov
stos
leave
test
sub
out
dec
sbb
mov
inc
mov
aad
add
adc
arpl
push
xchg
cmc
and
jnp
adc
add
sub
lret
sub
icebp
outsl
pushl
adc
mov
iret
sub
iret
popa
xchg
mov
jecxz
sbb
fimull
sbb
and
pushf
rorb
inc
adcb
imul
faddl
add
adc
jns
enter
dec
hlt
cmc
shlb
mov
cmp
adc
push
sbb
pop
rcl
pop
inc
inc
pop
das
movlps
xor
dec
mov
push
cmc
mov
add
and
testb
arpl
fstp
stos
shlb
pop
aad
jb
rclb
add
cmpsb
sub
insl
mov
push
adc
in
mov
fwait
push
mov
add
adc
xchg
inc
mov
xlat
in
sbb
cltd
loop
das
aad
outsb
rorl
add
mov
les
fimull
lret
dec
sti
stc
rolb
cld
or
arpl
pop
or
das
arpl
push
push
jg
mov
icebp
flds
fyl2xp1
sbb
ret
pop
dec
test
inc
iret
and
mov
pop
sbb
es
dec
push
rclb
repz
movb
pop
in
xlat
xchg
cwtl
cld
clc
scas
inc
mov
sub
mov
arpl
add
int3
mov
add
sbbl
ljmp
sub
and
add
mov
fbld
cmp
push
adc
outsl
and
push
out
inc
jno
xchg
push
fdivl
pop
jmp
pop
xchg
cli
jg
sbb
adc
fimuls
test
or
mov
js
push
add
pushf
lods
xchg
mov
fcoml
imul
divl
sub
mov
jle
into
fidivrl
or
xchg
mov
xor
fnsave
mov
clc
ljmp
cmp
cmp
add
fs
add
sub
icebp
xchg
pop
enter
fwait
lret
lea
lret
mov
hlt
mov
aas
xor
lods
sub
xchg
sbbb
sar
push
in
stc
aad
in
jb
xchg
xorb
shrl
je
mov
adc
popa
clc
sti
in
cld
test
je
ljmp
and
int
jae
cld
dec
lock
fdivl
negb
mov
add
ds
and
xchg
mov
sbb
push
or
mov
mov
and
shll
les
push
sub
movsb
loop
pop
enter
push
add
and
popa
jp
faddl
xor
push
repnz
in
push
xchg
cmpb
ds
xchg
push
addr16
repz
jecxz
mov
les
xor
jno
jns
popa
popa
movsb
ds
cmc
loop
or
imul
adc
fidivrl
sbb
jns
ficompl
movsb
mov
xchg
inc
cwtl
lds
aad
pop
hlt
mov
iret
sub
xchg
stos
iret
repz
stos
sar
mov
and
cmc
sbb
push
inc
popf
inc
mul
push
dec
scas
fdivl
cmp
mov
jecxz
out
mov
imul
sti
lock
push
push
enter
test
push
jae
mov
lods
push
mov
mov
jnp
add
push
mov
aad
jno
and
lods
shll
pop
fs
push
xchg
iret
inc
cltd
fidivl
stc
sbb
nop
sbb
cmp
sbb
mov
cwtl
cmp
jnp
test
pusha
jb
add
pop
rorb
stc
sbb
in
mov
and
std
insl
je
inc
xorl
mov
pop
js
push
arpl
out
ljmp
scas
push
pop
xchg
lret
push
js
loopne
ds
xchg
leave
rclb
push
cmpsb
imul
sub
dec
lret
or
mov
ja
ljmp
in
add
ret
jno
call
add
dec
imul
mov
popf
outsb
imul
les
int
xchg
movsl
adc
push
and
outsb
push
outsb
sbb
rcll
aam
int
fdiv
sub
dec
inc
outsb
repz
cltd
test
lock
add
sbb
imul
inc
xor
dec
sbb
fucomi
clc
fisttpl
sbb
cmp
out
dec
dec
adc
push
mov
xor
inc
or
nop
xchg
sbb
pop
cltd
sub
negb
inc
jecxz
popa
bound
nop
mov
lea
in
push
gs
mov
mov
mov
fldcw
hlt
ja
dec
imul
mov
mov
inc
mov
mov
push
pop
leave
push
mov
push
ret
ja
push
add
xchg
outsl
shr
pop
fwait
mov
or
mov
cmc
lods
fcoml
and
sub
iret
aad
lret
sub
jns
xor
adc
fidivrl
divl
inc
push
adc
pop
loope
imulb
je
cmp
jbe
add
addr16
lea
inc
push
pop
inc
adc
sbb
cmp
aad
or
std
sbb
std
jg
aad
notl
inc
ljmp
cs
inc
shrl
jmp
arpl
mov
jle
dec
ss
cmc
movsb
mov
and
stc
sbb
test
inc
adc
fst
mov
sub
ret
faddl
xorb
mov
push
test
gs
inc
rclb
mov
clc
inc
loope
dec
insl
sub
mov
loop
cwtl
and
nop
fistl
xchg
data16
mov
fcoms
or
mov
in
or
pop
jecxz
push
pop
test
mov
movsl
jl
movsl
dec
xor
cs
int3
lret
sahf
in
mov
cs
lret
daa
les
aaa
mov
mov
mov
mov
arpl
test
fwait
jp
xchg
push
mov
add
mov
xchg
dec
or
scas
daa
data16
int
mov
aam
mov
loop
jmp
add
icebp
adc
mov
sub
jo
cmp
inc
xchg
gs
add
enter
mov
mov
imul
jmp
in
or
pop
popf
jns
outsl
outsb
push
test
int
mov
int
jb
test
mov
orl
jnp
test
sahf
xor
mov
push
adc
adc
sbb
enter
jg
out
dec
imul
xorl
cmp
call
nop
sub
hlt
push
cmp
pushf
pop
aas
rcll
xchg
aaa
mov
or
mov
in
pop
and
pop
out
push
add
enter
lods
sub
cltd
mov
js
fs
cmp
pusha
mov
and
sbb
xor
rcrb
push
andl
sti
inc
add
jne
nop
xchg
push
test
repz
adc
das
in
push
sub
sub
xchg
xchg
sub
xor
scas
cmp
add
add
mov
rcrb
sbb
push
xchg
sbb
call
cmpsl
out
aaa
push
lret
push
imul
xlat
insb
out
pushf
sub
push
cld
xchg
cltd
inc
mov
mov
push
xchg
aam
leave
pop
xchg
push
mov
pcmpeqw
mov
dec
test
xor
sbb
jo
push
xchg
fxch
inc
pop
mov
xlat
jp
mov
jg
fildll
nop
bound
ret
inc
fwait
gs
pop
lds
sbb
sub
repz
ds
push
pop
push
and
inc
fwait
out
pushf
ja
jne
adc
mov
aad
pop
cmp
adc
icebp
pop
sbb
jbe
pop
sarb
sbb
sub
shll
jno
ficoml
ja
xor
mov
cli
mov
mov
dec
popf
test
lret
push
mov
jecxz
inc
sub
sub
adc
jmp
sub
pusha
scas
sbb
loop
push
ja
imul
jnp
mov
outsb
js
insb
jg
andb
mov
test
cld
pop
stc
or
jnp
mov
pop
mov
inc
mov
xchg
cmp
pop
std
clc
je
mov
push
out
sub
aad
mov
sbb
in
push
sbb
cltd
mov
jmp
pop
mov
ja
xchg
push
lods
mov
adc
or
mov
imul
lock
sarb
lret
sub
repz
js
or
push
popa
outsb
call
roll
addr16
outsb
lret
mov
stos
mov
sub
cmp
out
outsb
add
jo
out
and
aaa
or
cwtl
jns
jo
adc
cmp
mov
dec
pushf
stos
mov
mov
lods
or
mov
cmp
jg
addl
enter
xorl
pusha
cmc
mov
imul
out
in
nop
sbb
mov
fnsave
jg
icebp
test
out
inc
pop
cltd
push
jnp
jle
fistpll
mov
inc
movsb
inc
jecxz
sbb
cmp
and
push
push
stos
jmp
test
loop
popf
clc
pop
sub
mov
movsb
mov
inc
gs
mov
jnp
jg
xlat
call
dec
aad
fisubl
leave
lds
int3
push
xchg
push
xchg
outsl
push
jmp
orl
xchg
insl
dec
inc
hlt
pop
sbb
mov
push
jle
pop
cmpsl
shll
pop
rorb
jmp
and
and
into
sbb
jecxz
cmp
arpl
jmp
mov
scas
ret
jnp
jne
mov
rol
in
cld
mov
sub
and
jne
fs
push
xchg
bound
out
mov
movb
and
adc
pop
aad
jl
xor
fiadds
sahf
or
ja
mov
cmp
pop
scas
jmp
cmp
cld
push
adc
pop
les
in
fmuls
mov
or
xchg
jecxz
and
push
fwait
pop
clc
lock
dec
and
mov
dec
pop
sub
idivl
xlat
cs
pop
inc
xchg
or
mov
pop
hlt
jmp
in
mov
movl
aaa
mov
sti
xor
fsubrs
orl
inc
enter
cmp
jmp
fnstcw
pop
sub
cmpsl
aam
stos
inc
ljmp
mov
imul
cmpsl
mov
adc
orb
adc
adc
add
dec
cmpsl
hlt
in
xor
pop
mov
and
or
addb
scas
xor
dec
aam
mov
push
mov
dec
in
pop
loopne
push
clc
fbld
adc
jmp
add
mov
add
jg
pop
sub
xor
xlat
jp
xchg
gs
jno
jae
inc
pop
cwtl
bnd
loope
or
pushf
mov
pop
imul
xchg
xor
inc
shlb
push
stos
cmp
xor
shl
stc
sbb
push
test
ret
lods
jmp
mov
leave
push
mov
adc
inc
bound
sbb
xor
lea
push
adc
mov
jg
jb
test
dec
or
movsl
dec
pop
adc
lahf
ds
repnz
ficoms
or
jl
addr16
out
dec
outsl
in
clc
iret
rorl
out
gs
loopne
adc
dec
testb
outsl
je
xchg
push
add
fstp
mov
jns
idivb
jnp
repz
mov
sbb
cmpb
xor
aam
movsl
scas
push
lahf
sbb
mov
cs
out
lock
lds
fdivrl
icebp
call
sarb
js
pushf
test
adc
mov
jne
sti
addl
fdiv
sbb
je
dec
in
jno
jmp
je
jg
sbb
or
aam
fwait
movl
xchg
ficoml
pop
adc
addr16
jbe
sti
movsl
dec
scas
iret
lea
mov
ficompl
sbb
cmc
pop
add
push
add
push
jne
mov
hlt
mov
push
sbb
cs
pop
inc
xchg
xchg
xlat
jb
xchg
cmp
and
ret
scas
fcmovne
sbb
in
mov
inc
add
xchg
addr16
aas
rorl
leave
dec
adc
or
outsb
adc
or
mov
xor
mov
mov
push
sbb
jno
cwtl
jg
xchg
sbb
adc
mov
popa
hlt
dec
mov
jnp
jp
outsl
divps
push
testl
aaa
rol
pop
scas
fdivl
int3
mov
pop
mov
ret
test
pop
push
fistl
pop
push
sahf
loop
dec
je
fadds
ret
jmp
je
lods
mov
mov
std
jecxz
shl
out
mov
lea
int3
xchg
negl
movsb
loope
pop
imul
or
xorb
add
rorb
out
inc
sbb
movsb
out
icebp
and
push
cmp
adc
hlt
inc
mov
xchg
movsl
rcll
test
pop
xchg
mov
dec
pop
mov
add
add
cmpsb
pop
in
rorw
or
push
cmp
mov
pop
mov
test
into
cmpsl
and
mov
int3
lods
dec
fildl
sub
cmp
enter
mov
das
lock
mov
pop
sub
fdivrl
xor
imul
mov
scas
cwtl
out
std
mov
pop
push
pop
add
imul
out
adcb
mov
mov
arpl
outsb
add
pop
scas
sarl
cmpsl
cmp
rcll
lret
cmp
out
lret
mov
jnp
push
repnz
incb
push
imul
lcall
shll
lret
sub
rcrb
jmp
sbb
movsl
cmp
orl
dec
gs
movsl
mov
imul
pop
repnz
xor
mov
push
push
xor
pop
fwait
ljmp
xor
dec
push
imul
dec
pusha
aam
gs
cmp
inc
test
push
sbb
lds
addb
push
sbb
imul
test
mov
imul
cmp
sub
fnstcw
leave
or
sbb
imul
test
mov
imul
cmp
sub
fnstcw
leave
or
sbb
imul
test
mov
push
lret
cmp
sub
fnstcw
leave
or
sbb
imul
inc
jecxz
jns
push
pushf
xchg
jae
xor
and
cmp
sub
sbb
or
jp
sbb
jp
fs
imulb
dec
jne
inc
mov
and
ficoml
jbe
or
jp
push
pop
test
mov
inc
mov
dec
ljmp
in
cmc
mov
rcl
movsl
or
fisubs
push
repnz
out
xor
jno
bound
xchg
mov
arpl
jle
push
orb
push
std
xchg
sub
fimuls
jge
cltd
push
push
movsl
ljmp
adc
mov
push
jbe
add
add
outsl
clc
outsl
scas
sbb
mov
sub
in
xor
add
adc
inc
sar
in
out
test
push
movsl
out
dec
imul
je
add
bswap
adc
xchg
daa
movsl
cmp
loop
shr
shll
mov
ljmp
pusha
mov
sbb
hlt
xchg
test
rorb
mov
mov
add
jl
sbb
or
sahf
movsl
adc
jl
xor
inc
mov
xor
push
loope
mov
lds
adc
ret
dec
sarl
out
and
jl
pop
ja
dec
nop
push
leave
psubw
cs
or
push
repnz
push
mov
mov
pop
mov
mov
pop
test
mov
inc
mov
and
lret
in
cmc
sbb
or
jp
push
pop
test
mov
inc
mov
and
lret
in
popf
fsubrs
lret
roll
xlat
rorl
xor
push
mov
mov
rol
sbb
and
xchg
insertq
jns
in
scas
nop
sub
pop
ljmp
in
leave
fsubrs
sub
fidivrs
xchg
jmp
xchg
mov
lods
pop
jne
lock
stc
mov
lahf
jno
xor
test
inc
xchg
dec
mov
fwait
gs
cmp
faddl
ficomps
adc
repnz
pop
ret
push
fnstcw
dec
add
popa
rorb
sti
jge
sti
vpsrlq
add
push
inc
pop
push
stc
inc
xor
push
xchg
ret
sti
pop
push
ret
adc
sbb
and
cmp
mov
xchg
pop
lahf
imul
test
aad
mov
out
loop
push
mov
fcoms
push
rcl
loope
sbb
adc
fimuls
in
stos
sub
mov
mov
pop
in
aas
adc
sbb
dec
mov
or
adc
sar
sbb
lock
xchg
fcoms
dec
and
add
mov
loopne
and
outsl
loop
test
sub
inc
jne
sti
sbb
mov
mov
add
add
clc
lods
cld
out
mov
gs
jmp
push
call
sub
xor
mov
andl
test
insl
push
xor
nop
sub
testl
lret
ret
and
adc
aaa
hlt
dec
sarl
mov
pop
loopne
out
push
filds
sbb
adc
adc
jmp
rorl
xorb
ljmp
mov
mov
outsl
je
add
jo
scas
std
jg
or
push
scas
cltd
mov
mov
lahf
lods
inc
push
pop
int3
sbb
cmp
lahf
sbb
pushw
pop
add
in
cmpsl
xchg
test
xchg
pop
lcall
and
addr16
in
xor
aaa
or
add
mov
aaa
push
adc
xor
shll
mov
mov
cmc
das
shlb
es
aaa
jmp
out
pop
enter
adc
pop
test
sub
rclb
mov
data16
sbb
mov
push
outsl
divb
cwtl
in
sbb
sub
sub
push
cs
pop
mov
sbb
adc
mov
scas
jmp
sbb
mov
ret
xorb
sub
ja
mov
dec
inc
loop
sub
loopne
jno
incl
shlb
dec
jns
mov
dec
inc
or
xchg
mov
adc
push
pop
mov
or
fbstp
fstpl
add
xor
aaa
stos
push
insl
jbe
flds
and
mov
push
sbb
inc
cmp
xchg
mov
cmp
shl
adc
adc
adc
mov
gs
xchg
mov
sub
les
mov
lahf
addr16
add
sti
gs
adc
pop
jo
ds
ds
pop
and
out
out
push
pop
out
fwait
lea
and
push
std
daa
or
fidivl
lods
sbb
repnz
rcrl
mulb
lea
fwait
pop
ja
xor
into
sub
mov
daa
cs
mov
pop
add
lods
push
lods
arpl
sub
mov
sbb
rcrb
imulb
sub
cmp
or
punpckhwd
or
adc
push
rorb
fsts
mov
inc
aas
fisubrl
movsb
je
movsb
xchg
mov
sub
pop
pushf
push
sbb
pushf
stos
cmpsl
xchg
jg
cmp
movsl
lea
rolb
lret
out
js
pop
rolb
push
and
dec
sahf
rclb
push
adc
addl
jge
loopne
std
fs
sub
push
inc
mov
popa
pop
or
in
and
pop
hlt
outsl
cmp
jb
pop
fstpl
inc
mov
imul
call
leave
lods
out
stos
sbb
jo
and
out
sbb
fwait
jl
test
mov
sub
xor
shl
mov
imul
addr16
int3
lcall
pop
pop
dec
push
cli
mov
mov
cmc
jno
ficoms
aas
inc
inc
push
jo
and
sub
dec
mov
test
sub
lahf
xor
enter
cmp
xlat
lret
xchg
push
mov
cmc
add
pop
aam
mov
and
lods
and
gs
xchg
mov
lahf
mov
popa
xor
or
fmull
or
mov
cmc
stc
add
cld
sbb
repz
lods
xchg
pop
orl
mov
jns
lret
or
push
mov
popa
clc
adc
out
cmp
xchg
aas
lret
outsb
sbb
push
aam
add
mov
sbb
lock
sbb
push
mov
movb
mov
xlat
xchg
in
push
cltd
lea
adcb
jmp
fadds
lods
sub
mov
insb
in
xchg
test
lods
iret
pop
movsl
add
mov
inc
lea
pop
sysexit
pop
pop
iret
ss
lcall
push
cmc
aad
and
and
fstl
dec
lahf
xlat
xor
mov
sub
inc
push
mov
jp
js
outsb
xchg
test
outsb
loopne
mov
int3
loopne
paddw
ficoml
mov
scas
cwtl
and
jecxz
dec
movsb
push
cwtl
and
dec
ret
dec
out
test
cmpsl
jbe
xchg
lahf
je
mov
push
cmp
das
stc
fsubr
sbb
je
popf
call
rcr
xchg
jne
mov
inc
xor
and
mov
cmp
rclb
xchg
std
adc
inc
loope
adcl
add
push
lcall
les
fdiv
popf
jno
cmp
out
lods
test
mov
rcrb
inc
mov
push
mov
mov
mov
movsl
push
in
arpl
cmp
jecxz
cmp
ss
add
arpl
xor
adc
cmp
loopne
insb
sbb
jl
call
xchg
loopne
testl
insl
and
rcrb
mov
xchg
outsl
and
inc
clc
jle
dec
std
cmp
jbe
lds
lret
ret
dec
in
int3
dec
lds
jo
dec
aam
push
rcll
push
inc
jle
fmulp
inc
pusha
movsb
stos
xchg
pusha
mov
xlat
xchg
dec
outsb
inc
dec
fldcw
mov
scas
xchg
stc
cmpb
adc
jg
mov
lods
adc
es
ljmp
xor
ja
imul
or
pop
mov
fcomps
xchg
movsl
jle
cmpsb
divl
mov
iret
adc
loop
je
leave
inc
adc
inc
inc
xchg
jp
dec
dec
inc
and
jns
outsl
pushf
dec
stos
jg
out
aaa
notl
xor
imul
scas
lret
cld
jb
or
lahf
fwait
insb
sub
in
dec
push
jb
jno
les
lret
je
pop
pop
add
leave
sub
popf
sbb
rcl
inc
fiadds
std
jge
mov
test
arpl
imul
cli
pop
inc
inc
mov
push
mov
test
int3
sbb
pop
lahf
jns
out
out
pop
push
jg
movl
xor
addr16
push
int3
test
dec
add
push
xchg
insl
repz
sbb
mov
inc
push
cmc
xor
push
lahf
pushf
ljmp
sbb
jge
loope
bound
cmp
mov
out
or
mov
lods
push
je
jns
xor
iret
scas
push
dec
mov
xchg
push
or
imul
or
out
xor
or
dec
add
adc
pusha
jno
jge
je
lret
subl
inc
push
adc
add
mov
xchg
dec
mov
sub
push
pop
sbb
stc
push
or
jnp
mov
test
ljmp
push
jb
enter
mov
inc
cli
sti
fstpl
add
fsub
aaa
or
cmp
out
mov
adc
jle
and
dec
mov
in
jecxz
sub
and
inc
add
mov
cs
sbb
jge
sahf
xchg
in
adc
mov
sbbb
pop
es
jbe
sarb
jno
pushw
mov
inc
ret
out
cmpsb
js
push
xchg
ror
not
sbb
xchg
pop
mov
call
cmp
and
push
mov
sub
testl
repnz
push
or
mov
shll
add
adc
dec
xorl
int3
ja
sbb
sarl
or
mov
mov
fwait
aad
syscall
bound
xchg
lret
stc
test
sub
out
jbe
cld
int3
push
aas
inc
sub
pop
insl
aaa
mov
mov
pop
cmpsb
inc
lret
sub
pop
cmp
inc
add
sarb
xor
ror
stos
cld
and
pop
das
lods
jge
sahf
mov
pop
sbb
in
mov
es
fisubrl
sbb
pop
es
adc
clc
dec
jmp
insb
stc
xlat
das
jl
movsl
rorl
mov
pop
out
and
mov
add
adc
sub
call
jmp
add
test
or
nop
mov
mov
je
sahf
imul
xchg
test
jae
cmp
test
push
sbb
movsl
pop
xor
cmp
div
pop
aaa
stc
inc
lock
mov
out
dec
dec
push
js
movsl
add
aam
sbb
out
dec
arpl
push
lds
insb
mov
inc
mov
push
loopne
mov
imul
inc
lods
mov
rolb
lahf
sub
cmp
ss
lcall
adc
add
pusha
test
mov
jae
or
std
lock
in
xlat
cmp
jbe
push
cmpsl
cmpl
sub
mov
data16
pop
fiadds
and
fsubs
jg
gs
cltd
xchg
fistps
repnz
and
popl
jecxz
push
pop
clc
xor
stos
jne
mov
icebp
push
push
arpl
in
lret
pusha
sbb
das
je
inc
leave
xchg
jg
xor
push
movsb
stos
adc
test
xchg
mov
fdivp
and
dec
fdiv
cmp
jne
cmp
jnp
fsubr
lds
xlat
jecxz
jge
sub
in
fmulp
mov
jl
out
ss
sbb
sahf
lods
cmp
or
lcall
test
adc
jge
int
mov
shlb
mov
sub
ljmp
cltd
pusha
loope
call
fldl
mov
inc
ffreep
addr16
jns
xchg
mov
sbb
test
fwait
scas
gs
jnp
sbb
loopne
cmc
cmpsb
popf
lods
rorl
dec
inc
cli
repz
dec
inc
sarl
or
add
cmpb
outsl
enter
test
in
lahf
shr
jb
stc
movsl
dec
cmp
dec
push
inc
inc
or
inc
and
adcl
xchg
adc
jns
aam
mov
sbb
mov
lea
sub
adc
add
stos
repz
or
test
inc
or
call
aaa
mov
mov
lods
cs
xor
addr16
xor
pushf
and
jge
sbb
xchg
xor
add
add
pop
push
hlt
ret
repnz
push
rcr
dec
imul
sub
cs
arpl
or
lods
les
fistpl
cmp
and
mov
cwtl
jmp
mov
and
or
leave
orl
add
jbe
mov
and
in
pop
lds
divl
and
push
mov
rcl
mov
jbe
movsl
sti
inc
rcrb
ss
imul
lret
xchg
pop
mov
mov
mov
inc
ficoms
mov
lret
xor
xor
add
leave
notl
sahf
sar
pop
insl
add
xlat
inc
pop
and
fdivr
fildll
gs
sub
jnp
cmp
jg
rcrb
pop
pop
sbb
repz
daa
mov
in
jbe
mov
pop
into
in
cmc
jmp
imul
cltd
xchg
insb
aas
negl
mov
dec
dec
sub
pushf
push
mov
test
and
test
hlt
out
xor
sub
mov
mov
aam
or
bound
std
mov
jge
shl
push
dec
and
jl
mov
pushf
mov
fs
cli
scas
inc
sbb
stos
ficoms
adc
add
test
psubusb
mov
jp
xchg
pop
mov
lock
cmp
in
adc
sbb
add
stc
shr
mov
mulb
ja
fdivl
pop
mov
icebp
jno
mov
adc
call
mov
fisttpl
mov
mov
push
xchg
jle
call
notl
sub
addl
mov
cmp
cmp
mov
inc
pop
popf
test
mov
xor
add
jnp
push
pop
leave
mov
dec
int3
int
pop
mov
adc
daa
cmc
sub
movb
loop
push
test
sbb
sbb
ljmp
push
xchg
test
loope
push
test
or
xchg
dec
test
stc
pop
xor
xor
jne
aam
cmc
movsb
dec
dec
mov
inc
lret
jo
mov
cmpsb
xlat
jg
ja
dec
mov
lds
sbb
mov
pop
mov
inc
je
insb
es
push
and
and
cmp
adc
mov
dec
stos
or
test
jo
lret
out
mov
scas
popa
cwtl
push
mov
rclb
mov
in
cltd
mov
addr16
mov
lea
loop
mov
add
int
fildl
cmc
dec
test
ret
push
rorl
inc
aam
in
or
pop
sub
insl
push
push
pop
lahf
push
jno
sarb
fmulp
xchg
xor
mov
dec
test
dec
xchg
div
dec
cld
lret
add
dec
push
unpcklps
add
test
loope
sbb
sub
insl
std
xchg
in
and
js
sbb
rcrb
jno
gs
xor
cmp
gs
cmp
mov
dec
sti
sti
sbb
mov
jns
int
sarb
shl
ja
ss
outsl
inc
jmp
sar
fdivrl
shl
fs
addl
in
rcrl
mov
fs
loopne
adc
cmp
loopne
jl
push
mov
and
inc
in
or
pop
mov
pusha
sub
sbb
fucomi
or
mov
inc
into
jl
sbb
jne
fdivrs
lds
adc
cmp
and
xchg
mov
decl
jl
mov
scas
clc
adc
dec
lods
push
lcall
ljmp
dec
push
xlat
shlb
pop
mov
jmp
inc
les
inc
jno
jecxz
mov
sub
data16
out
push
enter
pusha
mov
shrl
imul
les
jle
daa
sub
insb
jl
leave
imull
fdivl
xchg
lods
fimull
lret
pop
jae
repnz
fiadds
mov
mov
and
mov
sar
dec
sbb
cmp
add
xchg
mov
jae
movl
jbe
mov
push
cmp
rolb
mov
shrb
add
add
out
lds
cmp
mov
mov
shlb
push
inc
leave
imul
subb
ljmp
subb
loop
aas
cmp
mov
rolb
pop
in
xchg
enter
sub
cmpb
sub
sub
lea
jns
lret
cwtl
cmpsb
aaa
dec
cltd
cmpsb
xchg
sbb
push
xor
push
adc
pushf
fildll
nop
push
pop
jbe
adc
xor
jecxz
sub
inc
xor
sub
jbe
lret
in
lods
xchg
incb
in
lret
std
xor
out
inc
lds
mov
mov
and
int3
sub
mov
dec
xor
loopne
rorb
xlat
adc
aam
test
test
stos
mov
mov
stc
jmp
cli
jl
cli
out
test
cmp
das
lahf
out
mov
test
pop
mov
inc
sbb
pop
xor
adc
loope
jns
cmp
rcll
inc
movsl
cld
pop
pop
cmp
rcll
adc
and
add
test
cld
jle
jae
and
inc
jo
xor
mov
jno
sub
add
xor
cli
enter
mov
push
push
decl
lret
jg
pop
stc
out
mov
mov
fildl
adc
sti
vcmpps
mov
mov
fsubl
jae
xchg
add
sahf
sahf
mov
in
ret
stos
push
or
jne
imul
and
in
mov
into
sbb
pop
or
repz
sahf
cli
push
sub
jp
sbb
mov
push
jge
sub
stos
dec
xor
dec
adc
ds
mov
xchg
iret
sub
mov
sbb
cmc
pop
add
fdivp
push
add
jne
sub
or
pop
aaa
mov
gs
test
fisttpll
mov
push
adc
add
mov
ljmp
add
sbb
pop
dec
mov
or
mov
push
data16
sub
cmpl
jnp
fildll
add
daa
or
sub
in
dec
js
dec
or
jno
push
imul
ljmp
inc
dec
pop
jnp
outsl
inc
ss
mov
stos
inc
ficoml
imul
pop
arpl
dec
mov
ret
lret
dec
add
ljmp
and
icebp
leave
xlat
pop
mov
in
add
clc
sub
sbb
inc
out
fstps
cmp
ds
sub
mov
sbb
add
pop
cmp
bound
imul
cmp
pop
cmp
das
lret
xor
je
insl
mov
xchg
jge
hlt
loope
in
mov
ss
enter
sbbb
lods
pop
andb
or
add
or
cmpsl
sahf
fisttpll
dec
xchg
int3
mov
out
mov
int3
xor
outsl
push
xchg
push
cwtl
xchg
leave
inc
jg
mov
mov
sbb
push
inc
das
scas
pop
and
fsubl
sti
mov
dec
xchg
xor
js
pop
pushf
adc
sbb
test
pop
xchg
stos
adc
ds
rcrb
sub
xor
je
divb
test
add
fwait
mov
ret
sar
jnp
das
jmpw
jo
mov
cmp
adc
or
mov
test
sbb
jb
push
add
insl
pop
loopne
dec
shrb
mov
fisubl
in
xor
das
mulb
lds
dec
dec
popa
push
mov
jle
dec
add
mov
mov
jb
cmp
fcmovu
push
cmpsb
sahf
sbb
pop
andb
loop
mov
mov
mov
cltd
loopne
add
jo
in
fimull
pop
fdiv
stos
mov
cmpsl
and
nop
fisubs
pop
out
push
nop
add
cmpsl
dec
in
cmpsl
sti
mov
and
ds
xchg
inc
loopne
adc
mov
fs
adc
sbb
insb
scas
fimuls
out
jne
adc
xchg
pusha
pop
push
mov
adc
sti
out
and
das
jo
mov
incl
push
imul
cmp
test
xchg
mov
lcall
sahf
out
fisttpl
mov
push
jno
or
sbb
xor
xor
xchg
jb
roll
cmp
shrb
mov
and
xchg
ret
mov
popl
sbb
add
dec
mov
and
scas
or
rorl
ret
xor
cmp
xchg
pop
push
test
or
shlb
addl
push
cmp
mov
lea
idivl
lcall
popa
push
jl
dec
loopne
sbb
xor
clc
sub
add
movsb
xchg
and
aad
or
fistpl
cmc
rcr
cli
push
jbe
mov
xchg
mov
mov
pushf
xchg
inc
sub
xchg
pop
cltd
nop
popa
ja
insb
mov
pop
aam
jg
fimull
inc
fwait
insb
cmp
pop
jle
sub
sbb
mov
subb
and
shl
rcrb
pusha
or
xchg
cmp
pop
cmpsl
jecxz
loope
inc
sub
mov
pop
cli
movsl
dec
ja
sti
sbb
mov
xchg
stc
xorl
sbb
dec
mov
xchg
shlb
inc
cld
jmp
sbb
push
rcll
or
push
aas
jae
pop
lds
aad
movsl
push
pop
test
mov
inc
mov
and
lret
in
cmc
sbb
or
jp
push
pop
test
mov
inc
mov
and
lret
in
cmc
jp
or
ljmp
xchg
mov
inc
mov
and
and
inc
lds
aad
movsl
jp
pop
test
xchg
mov
inc
mov
lea
xor
mov
jo
cli
mov
xor
and
adc
add
pop
out
push
jp
mov
mov
jecxz
sar
ret
or
sbb
adc
add
pop
arpl
jp
mov
mov
jecxz
sar
ret
or
pop
add
xor
and
cld
out
ljmp
or
mov
imul
pop
icebp
sbb
cmc
sti
jl
jo
sbb
aad
cmpl
fdivl
mov
mov
movsl
bound
adcb
jmp
mov
fs
into
jle
xor
das
or
dec
fdivrl
hlt
jb
mov
dec
cmpsb
lcall
repnz
or
sbb
fmull
in
rclb
sbb
pushf
jp
jo
ja
gs
stc
push
scas
jl
repnz
ljmp
je
in
cmp
sbb
lahf
out
lods
test
jb
lcall
xchg
outsb
adc
int3
and
mov
ds
movsb
imul
aad
lcall
repz
ljmp
and
adc
add
pop
arpl
jp
mov
mov
lahf
xchg
bound
push
inc
jnp
inc
adc
adc
push
push
add
mov
mov
scas
mov
add
dec
ja
push
jb
insb
add
sub
cmp
gs
cli
mov
leave
sti
lcall
sar
ret
or
sbb
sub
cmp
dec
jae
arpl
jp
mov
mov
jecxz
sar
ret
or
sbb
sub
cmp
dec
jae
arpl
jp
mov
call
pop
cwtl
lods
push
add
test
orb
push
add
ffreep
and
insb
or
jbe
fisubrs
push
outsl
add
and
pop
xchg
call
xor
lahf
leave
int3
dec
push
stos
push
clc
jecxz
imul
push
jl
inc
or
pop
mov
shll
jno
pop
lods
orl
sub
ret
xchg
push
std
push
ret
mov
inc
sbb
mov
jg
or
add
and
outsl
adc
data16
imul
jmp
lods
aad
lret
adc
mov
dec
mov
fnstsw
dec
dec
jg,pn
ficoms
rorb
sbb
in
cld
into
push
das
adc
decb
outsb
xchg
push
das
aas
add
fwait
add
push
test
test
cmp
add
fisttpl
or
sub
loope
and
cmp
add
fsubs
mov
shlb
fmull
imul
dec
sbb
push
pop
cmpsl
cli
movsb
cmpsb
mov
xlat
pop
lcall
pop
stc
int3
xor
mov
or
sub
sbb
pusha
cmpsb
enter
push
add
int3
push
xlat
lcall
push
sub
mov
scas
push
mov
or
ficompl
mov
lock
push
jae
dec
lcall
sub
inc
sbb
lods
cmpsb
inc
dec
and
in
xchg
cmp
pop
shr
rcr
pop
jl
pop
push
popf
call
stos
pop
adc
sahf
mull
in
and
aad
sbb
pop
mov
jns
jbe
scas
or
mov
and
sbb
mov
push
sbb
push
add
fdivs
jnp
sbb
xchg
mov
mov
xchg
push
xor
sub
xchg
bound
inc
jb
aam
shll
pusha
jb
out
xchg
mov
aas
add
ljmp
js
jne
or
pop
inc
popf
repnz
push
lcall
push
shlb
add
lock
add
adc
mov
in
add
mov
cli
sbb
ret
out
cmp
push
stos
dec
push
pop
jae
dec
shlb
adc
or
cmp
xor
adc
jns
mov
adc
pop
stc
aaa
and
push
arpl
mov
sub
sbbb
add
or
sbb
inc
xor
mov
xchg
repnz
loopne
or
xchg
pusha
rcl
cmp
dec
sbb
xchg
fptan
outsl
and
xchg
sbb
loop
dec
sub
pop
add
pop
mov
out
gs
aad
cmp
pop
xor
sarl
insl
cmpsl
push
pop
cmp
shrb
xchg
rcrl
sbb
gs
lea
lods
stc
mov
dec
adc
add
sbb
mov
ret
jns
inc
repz
pop
test
dec
cwtl
push
rcrl
jle
pop
push
in
loopne
sarl
jns
xchg
pop
loopne
mov
sbb
push
jnp
jne
push
push
xor
hlt
mov
pushf
push
fbstp
dec
sbb
scas
add
jnp
xchg
sub
into
pop
add
or
rcrb
cwtl
lahf
inc
add
jb
ret
notl
insl
pop
in
and
stc
adc
pop
jbe
pop
mov
xlat
mov
or
in
jp
push
mov
pop
cmp
push
dec
mov
or
jo
es
adc
push
jno
ja
scas
mov
outsl
pop
notb
negb
ss
pop
and
mov
add
in
mov
xor
sub
repnz
inc
daa
lret
pop
es
std
jns
or
test
mov
xchg
push
mov
mov
cwtl
sbb
adc
jecxz
cmp
cli
mov
mov
test
cmp
mov
in
lods
repz
ja
mov
lock
adc
cmp
or
fstpl
mov
sub
push
insl
dec
hlt
cmc
cld
int
pop
or
mov
and
mov
lahf
xchg
aaa
dec
sbb
int3
in
xchg
lods
push
fbld
jb
jne
fcompl
and
test
push
lret
inc
enter
xor
fldcw
add
rolb
cmp
pusha
push
call
test
mov
cmp
lret
sub
repz
pop
or
sarb
es
test
mov
jb
pop
xchg
pushf
mov
insb
dec
call
aam
cmpsb
dec
or
jmp
sbb
ss
cld
fstps
data16
daa
jl
test
in
cmp
pop
sub
sub
out
shlb
fcomps
sub
mov
jge
into
sarb
fists
movsl
andb
insl
mov
inc
fs
sbb
ja,pn
add
dec
push
mov
sbb
scas
jo
addl
stc
dec
lea
out
xchg
xor
and
and
xchg
mov
jl
mov
fcmove
cmp
mov
hlt
mov
push
mov
jle
push
test
dec
jmp
jmp
add
sbb
mov
aaa
and
sar
adc
push
repz
xor
inc
pushf
fwait
inc
inc
sbb
lahf
insl
stos
xlat
push
ljmp
cmp
ror
jle
in
pop
pop
mov
jae
mov
sbb
mov
cmp
and
jg
fnsave
sbb
repz
pop
daa
jno
mov
jne
lea
in
aaa
push
jbe
rolb
sbb
rcll
xchg
mov
lret
pop
aas
out
inc
enter
shlb
fwait
test
int
push
mov
add
stos
cli
cmp
stos
repz
push
xchg
sub
mov
mov
mov
repz
cld
nop
push
jbe
rolb
and
jb
lret
xchg
jecxz
lds
stos
les
pop
cmp
in
mov
sarl
data16
insl
inc
aaa
xor
stc
aaa
push
leave
movb
xor
sub
push
mov
xchg
out
cmc
movsb
fsts
sbb
xor
outsl
sub
cmc
dec
cmp
movsl
loop
push
cmp
out
add
fiaddl
daa
cmp
sub
stos
sbb
cltd
imul
sarb
xor
pop
test
push
ret
stos
xlat
adc
cmp
add
or
jle
xor
sub
or
jl
sub
lret
pop
push
bound
outsl
ret
sbb
mov
jge
or
push
out
inc
fdivl
movsb
loope
jbe
mov
or
lods
je
pop
and
mov
cltd
mov
roll
out
fucomi
mov
adc
and
stos
int3
dec
add
cs
jbe
cwtl
pop
pop
mov
fcomps
stos
push
fs
repz
in
mov
cltd
jg
push
mov
xor
xchg
mov
adc
stc
mov
mov
adcb
stc
adc
inc
xor
in
call
mov
sbb
dec
sub
aaa
xor
fcomip
int
xor
xchg
aaa
pop
shll
int
sar
xchg
inc
div
pushf
fdivrl
repz
push
data16
adc
dec
jb
fisubrs
ret
or
sbb
loope
push
test
lea
in
ret
or
xor
imul
jecxz
pop
mov
xchg
add
inc
mov
rolb
inc
movsb
scas
xor
movsb
clc
mov
repnz
xor
sbb
mov
ss
ret
scas
push
or
push
outsl
mov
pop
enter
dec
jmp
mov
sbb
push
cmp
jp
pop
adc
test
jnp
fimuls
or
jns
call
adc
xor
xor
mov
xchg
movsb
add
mov
test
mov
and
push
inc
inc
lock
das
pop
je
sbb
lret
xor
das
ss
jl
test
jno
iret
jns
lahf
daa
inc
or
cmpsl
mov
daa
mov
xchg
stos
mov
mov
push
in
mov
cltd
sub
outsb
add
inc
and
out
sub
add
lock
test
sbb
adc
out
sub
shrl
movsl
or
gs
in
movsl
dec
das
push
push
lret
adc
fsubs
add
lahf
cs
sbb
fcompl
and
scas
je
cmp
xchg
adc
dec
filds
movsl
xchg
mov
cmp
mov
hlt
xlat
cmp
clc
mov
jnp
sub
test
repnz
loop
test
sub
imul
insl
sbb
xor
xchg
sbb
aam
ss
es
arpl
mov
inc
aaa
rcrb
ss
jo
cmp
inc
aad
mov
mov
sbb
push
inc
shlb
out
xor
rcrb
xorl
cwtl
dec
sti
mov
cmpsb
je
or
cmpsb
mov
sarl
loope
fnstcw
ret
sub
mov
dec
mov
jns
testl
dec
mov
lods
ret
mov
xor
xor
aaa
jle
lods
push
js
sbb
ss
cltd
js
or
xchg
popf
adc
inc
and
or
cmp
movsb
sti
test
outsl
cmp
mov
and
call
dec
out
ja
xchg
push
cwtl
adc
jnp
filds
clc
fadd
incl
cwtl
jmp
ret
xchg
ficoms
ja
inc
fcomps
sbb
rcll
sbb
mov
push
mov
shll
js
jmp
rclb
mov
gs
icebp
pop
insb
mov
adc
loope
negb
jecxz
aad
psubq
in
mov
aam
in
push
pop
or
push
test
cmpsb
xor
pop
pusha
sbb
push
scas
cli
lahf
inc
out
out
xchg
mov
mov
icebp
rcrb
imul
stos
cmpsb
xchg
notl
int
decb
xchg
push
xor
outsb
cmpsl
mov
cs
mov
mov
call
dec
mov
cs
lods
mov
hlt
and
pushf
call
mov
and
cmpsl
mov
mov
enter
sti
dec
rclb
lds
stos
pop
movsb
mov
imul
cltd
cmp
or
pop
mov
and
xchg
push
outsb
popf
or
adc
div
mov
lret
pop
pushf
ret
cmc
test
xchg
iret
lock
inc
xor
clc
adc
xor
add
pop
mov
aad
add
pop
rol
dec
jno
jmp
and
jo
call
cmp
mov
repz
jp
and
dec
xchg
in
cmp
rolb
dec
scas
jmp
in
addr16
or
outsl
cmpsl
scas
or
jno
lods
cs
push
loop
pusha
xchg
out
sbb
shll
aaa
ljmp
push
ret
mov
or
rcr
in
mov
arpl
sub
repnz
fwait
cmpsb
add
ljmp
int
aad
cld
jg
or
mov
out
push
push
xor
in
popf
sub
push
jl
jbe
sar
xor
fistl
lods
sub
and
insl
cmp
adc
ret
xchg
xor
arpl
jns
sub
aam
jbe
jg
jg
mov
fcomip
pop
ret
add
stc
and
movsl
fldt
sbb
addr16
popf
in
adc
cwtl
loop
inc
popf
sbbl
addl
xchg
leave
and
std
adc
push
fildll
pop
int3
push
xchg
sar
jb
adc
xchg
icebp
cmc
mov
fnstsw
sarl
inc
into
add
addb
or
xor
ds
and
jmp
add
cmpsb
push
dec
fdivrl
xchg
mov
data16
xchg
push
notl
es
movsl
mov
iret
jg
pop
movsb
cld
les
add
jecxz
fwait
sub
mov
fdivrl
xchg
lahf
lahf
mov
daa
lods
and
test
mov
lret
js
sub
and
mov
sahf
lahf
mov
sbbb
hlt
adc
inc
push
lock
mov
pusha
call
add
mov
jl
push
in
add
or
mov
and
xor
push
mov
test
inc
fadd
sub
rol
js
imul
push
out
mov
out
mov
mov
es
adc
mov
mov
sub
insl
xor
fcmovbe
adc
sbb
lret
sti
into
cmpb
aas
or
or
addr16
das
fst
shl
fsubrs
scas
mov
aad
je
repz
sub
insl
les
mov
loop
xchg
mov
in
popf
rcrl
inc
sbb
push
adc
xchg
popf
ds
xchg
ficompl
add
dec
sub
cmp
imul
push
pusha
roll
loopne
push
iret
mov
push
jb
mov
pop
xchg
jle
ss
movsl
xchg
sub
xor
sub
mov
sbb
push
pop
clc
inc
jmp
das
or
popa
lea
xchg
mov
cmp
xor
xlat
pop
test
test
jae
int
rclb
in
push
push
outsl
and
test
mov
sub
add
and
imul
in
idivl
xchg
inc
int
jle
and
js
adc
es
mov
pop
xor
jecxz
jbe
adc
jae
cltd
insl
pusha
mov
dec
jno
sbb
je
mov
push
add
adc
adc
or
and
fists
dec
ss
add
outsb
sbbb
jge
push
add
popa
pushf
outsb
clc
sub
rcrl
sbbb
and
sbb
mov
les
push
jg
xor
ret
jno
jo
leave
cmpsl
aas
push
shlb
int
sub
cmpsb
mov
adc
mov
ja
js
sti
out
mov
gs
pop
sbb
jge
add
cmp
push
je
dec
sub
pushf
push
xchg
and
outsl
jmp
subl
lcall
cmp
sbb
xor
aam
mov
sbb
sbbl
bound
ljmp
movsb
arpl
in
jmp
pop
int3
shlb
out
cmpsl
test
stc
shl
lds
jl
in
add
js
bound
and
nop
push
push
lock
and
cmp
or
int
insl
les
jmp
inc
jle
cmpsl
xor
rcrl
and
popf
add
cwtl
mov
jmp
inc
and
jo
popf
push
jmp
mov
movsb
dec
out
pop
das
sub
and
jae
add
cld
xor
sbb
adc
sbb
cmp
jp
pop
add
popf
std
subb
inc
sub
sbb
jge
sbb
add
fcompl
mov
popa
and
insb
cmpl
jo
push
in
cmp
sub
loop
push
or
sbb
sub
and
xchg
inc
fsin
push
in
lret
sahf
loope
push
outsb
hlt
or
rcll
xchg
mov
inc
ja
mov
pop
imul
xor
aas
mov
pop
stos
jle
xchg
xchg
out
orl
pop
xor
sbb
int
pop
jecxz
ret
or
mov
inc
repnz
mov
add
jnp
fnsave
cmp
inc
pop
lds
xor
fldenv
adcb
jae
repnz
mov
movsl
add
movsl
adc
inc
clc
sub
adc
jo
mov
lcall
insl
push
into
dec
xchg
dec
test
inc
pusha
insb
push
or
loopne
pop
dec
dec
jnp
fadds
mov
aam
inc
xor
mov
sbb
pop
call
cmpl
cwtl
rolb
jae
repz
incb
enter
adc
cmp
nop
lds
mov
pop
push
test
mov
push
jmp
sub
out
imul
imul
sar
dec
mov
daa
popa
notb
in
lods
cmp
pop
mov
mov
mov
dec
loope
mov
push
loope
mov
dec
nop
xor
shlb
sbb
xor
mov
mov
pop
test
addr16
jmp
jecxz
lea
pop
lcall
jmp
mov
aaa
jbe
or
push
cs
in
or
dec
arpl
sub
je
es
bound
dec
loop
out
push
xlat
push
xchg
pop
movl
or
jb
lcall
in
aam
fisubrs
mov
lock
cwtl
cwtl
sbb
sbb
inc
xchg
inc
add
lret
mov
std
insb
addr16
mov
les
aas
fsub
lcall
push
lret
jae
push
inc
int3
int
xchg
push
rcrl
fnstenv
dec
jns
fmull
mov
stos
outsl
scas
cs
push
push
inc
cmp
and
test
pop
scas
hlt
mov
xchg
ja
jecxz
cmp
out
pop
mov
inc
int
push
leave
jmp
dec
dec
or
sti
les
xchg
cmp
dec
ror
fsubrs
scas
and
and
cltd
arpl
pop
pop
jle
outsb
fldenv
mov
jae
sbb
jo
add
mov
in
mov
jp
cmpsb
add
pop
nop
push
xchg
dec
mov
xor
out
bound
jno
sbb
cmpsl
sti
mov
shlb
js
pop
mov
dec
call
mov
xchg
cli
xchg
mov
mov
inc
aaa
inc
jae
popf
lods
rclb
test
movsb
add
xor
out
fdivr
pop
fldenv
jge
sub
ror
push
sbb
in
pushf
push
xorl
mov
jnp
xchg
nop
adc
ret
bound
scas
addl
and
adc
xchg
pop
seta
mov
ret
and
xchg
push
add
xor
xchg
push
into
mov
xor
inc
test
xor
stos
or
push
sbb
xchg
testb
mov
sub
ljmp
dec
mov
out
mov
ljmp
lret
cli
pushf
sti
cltd
mov
sbb
jmp
sbb
xor
orl
pop
xor
push
mov
xchg
outsl
jmp
xchg
dec
inc
es
mov
insb
dec
inc
je
push
cmp
aaa
leave
mov
lock
mov
or
adc
loopne
outsb
xor
inc
cmpsb
ja
add
sub
or
ds
ret
test
lahf
push
or
mov
cmp
mov
je
add
jge
mov
imul
loop
pop
out
orb
hlt
test
jmp
addl
pop
cli
jne
sbb
xor
push
or
leave
fstps
aam
pushf
xor
pop
out
pop
std
add
in
pop
outsb
dec
sub
mov
pop
push
pop
sbb
mov
adc
jl
pop
arpl
pop
dec
int3
lock
mov
adc
dec
test
adc
dec
fnstsw
js
and
mov
pop
xor
ja
or
fs
lods
repnz
sti
fsub
inc
enter
iret
pop
cld
xor
call
mov
mov
aam
dec
pop
test
in
lcall
mov
lods
sub
push
popf
sbb
cmp
repnz
add
xchg
cmp
inc
out
push
and
adc
push
std
xchg
outsb
mov
mov
daa
mov
xchg
cltd
fwait
sbb
pop
or
dec
push
in
imul
lock
dec
or
sbb
pusha
pop
enter
ja
aas
dec
dec
push
insl
cmp
scas
sbb
sti
insl
test
cmp
mov
add
adc
pop
dec
mov
or
mov
inc
jae
movsb
addb
jnp
repnz
jne
adc
in
lret
sbb
popf
push
repnz
xor
pop
and
sub
jg
jge
mov
call
sub
popa
add
push
rcrl
mov
popf
ljmp
test
push
test
in
sub
ljmp
in
sub
xchg
add
mov
ret
js
pop
xchg
xchg
mov
sbb
adc
mov
cltd
dec
adc
leave
fwait
pop
sub
add
les
faddl
mov
cmp
cld
sub
sub
ret
aam
inc
sbb
add
push
jg
jge
hlt
or
inc
and
scas
xchg
ds
lcall
pop
mov
dec
stc
push
das
mov
movsl
shrl
sbbb
push
test
aaa
je
enter
cmpsl
push
mov
or
ljmp
and
adc
add
pop
arpl
jp
mov
mov
jecxz
sar
ret
or
sbb
sub
cmp
dec
jae
arpl
jp
mov
mov
arpl
sar
ret
or
cmp
dec
jae
arpl
jnp
mov
mov
jecxz
sar
ret
or
sbb
cmp
lods
test
mov
add
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
ret
and
xor
add
adc
loope
int
mov
mov
xorb
loopne
mov
shlb
ret
and
xor
add
adc
inc
mov
inc
mov
jae
ret
loopne
lock
xor
ret
and
xor
add
adc
inc
mov
inc
sahf
jo
jae
add
pop
rcrb
lahf
cld
dec
cmpsb
sbb
and
movl
aaa
sbb
adc
jl
xchg
pop
dec
dec
pop
mov
orb
sarb
in
xchg
out
sub
roll
pop
dec
arpl
outsb
ret
inc
aas
xor
ret
xor
popa
xchg
test
movsl
popf
jle
outsl
cld
mov
mov
cmp
xor
add
or
fisubl
and
add
mov
jae
xor
and
js
inc
stos
popa
jae
mov
mov
push
pop
sahf
add
aad
rorb
and
xor
add
adc
inc
mov
inc
mov
jae
add
adc
and
xor
mov
push
orl
xor
and
fldenv
or
add
jne
cmpsb
popa
mov
xchg
lahf
inc
addl
push
es
fsubl
jae
add
inc
mov
mov
iret
or
jo
inc
mov
inc
mov
jae
add
adc
and
xor
ret
and
xor
add
adc
inc
mov
inc
mov
jae
add
adc
and
xor
ret
and
and
jge
xchg
dec
pop
inc
cs
bound
dec
xchg
bound
mov
mov
fisttps
push
mov
jle
nop
das
std
pop
jg,pt
imul
adc
and
dec
inc
mov
sbb
or
loop
stos
scas
out
adc
mov
adc
and
daa
jle
rolb
fs
rclb
or
pop
pop
jne
push
cli
jmp
inc
sub
jge
mov
xor
shlb
jmp
or
leave
dec
pushf
cmp
dec
fsubr
rcl
mov
pop
fldl2t
mov
xor
inc
cli
mov
cmp
sbb
in
in
push
mov
dec
aaa
leave
pop
mov
dec
mov
mov
adc
lods
pop
xor
push
mov
adc
mov
imul
stos
sarl
out
lcall
je
aaa
push
jo
repnz
adc
loop
leave
and
xor
mov
and
jne
and
push
fiaddl
loop
xor
in
fimull
lahf
pop
pop
push
add
aas
sahf
popf
cmp
mov
pop
sbb
icebp
cmpsl
popa
imul
sahf
cmp
pop
sub
jl
ficompl
bound
mov
sub
inc
loop
in
cmp
xor
sbb
add
out
adc
hlt
outsb
dec
aaa
loope
addl
adc
sbb
repz
movsl
jne
inc
push
xor
mov
pop
cltd
les
ja
pop
ret
pusha
mov
mov
in
jge
xlat
sub
inc
ja
mov
incl
xchg
cli
popa
pop
and
cmpl
out
call
pop
test
fsubrs
clc
add
jg
xchg
cmp
int3
or
test
xor
es
or
mov
mov
hlt
mov
or
jge
pop
xor
dec
std
lahf
xchg
xchg
xchg
sub
mov
lea
popa
xchg
shlb
push
hlt
repz
lock
mov
inc
repz
sbb
stc
dec
add
pop
dec
aaa
cld
mov
sub
cmp
scas
pop
out
mov
push
ljmp
jns
inc
jmp
stos
jle
insb
dec
orb
and
loopne
adc
hlt
add
inc
sub
cli
movsl
sub
add
jo
mov
ss
subb
inc
mov
imul
outsb
subl
ret
mov
adcl
loop
call
mov
jl
test
lahf
mov
lea
data16
insb
sbb
xchg
sub
cld
dec
popa
mov
cmpsl
fwait
xor
mov
jle
xor
pushf
push
imulb
pop
das
inc
in
stos
dec
jae
mov
push
popa
mov
inc
lods
adc
push
std
fwait
lret
jno
adc
cmp
imul
imul
outsl
aam
outsl
pop
mov
addb
or
shlb
pop
jb
sbb
cltd
pop
mov
dec
pop
push
repnz
or
cmpb
in
jbe
pop
jp
stos
cmpsl
fstps
sub
xor
xlat
add
pop
decb
xchg
enter
jl
jecxz
and
push
hlt
xchg
cmc
xchg
mov
shlb
mov
test
sub
pop
aad
sub
sbb
jg
cltd
mov
jge
fisubrl
out
push
pusha
and
mov
fdivr
push
pop
je
jo
negl
cld
xor
cmpsb
test
inc
fistl
xchg
cmp
bound
shl
add
push
aad
loopne
inc
dec
scas
bound
test
dec
aas
repz
adc
mov
rcl
or
lcall
sbb
fldenv
stc
push
dec
ror
add
sub
dec
iret
dec
subl
out
sbbl
and
clc
aad
mov
out
shr
push
cli
jae
or
enter
cmpsl
pop
or
jbe
push
bound
out
jl
arpl
imul
testl
ret
mov
or
jns
ret
mov
or
fmull
imul
repz
lcall
mov
mov
xor
ficompl
idivl
shlw
jp
xor
mov
js
int
mov
dec
mov
cmpl
cmc
cmpsl
aam
xlat
fnstsw
or
lcall
xchg
sub
inc
dec
fwait
mov
fsubrp
aad
jl
xchg
push
shl
inc
int
mov
mov
mov
push
rorl
mov
push
sbb
scas
int3
and
dec
aaa
inc
cmpl
lahf
mov
test
pop
push
fwait
in
push
data16
int
adc
adc
nop
push
add
lock
cmp
add
xor
xchg
push
push
pushf
repnz
jg
stos
fcmovnb
lods
mov
cmp
stc
js
and
cmp
mov
ss
push
cld
jb
mov
jns
push
js
mov
arpl
cmpsb
rcrl
loopne
data16
aas
mov
stc
sub
jns
push
arpl
ja
cmpl
or
jo
aas
and
mov
js
cltd
inc
or
popf
test
test
or
sbbl
push
dec
dec
ds
push
push
sub
jg
rcl
pop
mov
addr16
sbb
ss
mov
mov
or
add
arpl
test
aam
xchg
xchg
movsbl
jmp
cmpsb
data16
jmp
cmp
mov
or
das
ljmp
xor
repz
test
out
repz
mov
pop
scas
lock
rcll
fwait
int
and
adc
les
jp
pop
cmpb
out
mov
jl
loopne
xchg
ss
dec
movsb
inc
mov
lret
mov
xchg
sahf
push
jne
andl
fisttpll
lea
mull
xchg
add
daa
cmc
ficoml
je
jg
and
dec
jbe
insl
cld
arpl
pop
mov
mov
or
pop
addb
mov
rorl
mov
nop
xlat
mov
mov
sub
mov
dec
shlb
sbb
in
iret
mov
mov
mov
pushf
xor
int3
fbld
lods
notb
pop
mov
adc
mov
outsl
push
fcomps
fxch
fnstcw
dec
shrl
mov
push
ljmp
lret
jecxz
adc
push
dec
xchg
bound
adc
xchg
cmp
add
xor
inc
rcr
test
inc
inc
cld
cmp
mov
jmp
push
or
gs
cmpsb
loop
xchg
lcall
xorl
loopne
push
cs
xchg
mov
xchg
int3
jae
imul
aam
xor
cmp
movsl
inc
shlb
adc
mov
imul
scas
add
enter
ja
aam
xchg
pop
testb
popa
inc
xlat
or
call
pushf
push
and
mov
fbstp
push
jg
mov
or
ds
frstor
mov
push
aam
je
imul
inc
inc
cmp
movsb
and
sub
inc
mov
xchg
adc
fcmovu
jae
std
aas
fs
sbb
pop
inc
cmp
dec
mov
int3
fisttpl
jl
mov
mov
call
sbb
mov
lock
loope
jmp
mov
sub
add
pusha
stos
fs
jmp
and
xor
neg
adc
push
push
icebp
dec
inc
and
movsl
movsb
test
jl
or
mov
lds
push
nop
or
ljmp
icebp
inc
mov
mov
push
test
inc
ja
movsl
call
pop
cld
stos
test
outsl
jno
mov
ljmp
stc
or
sbbl
sbb
incb
and
lods
mov
cs
mov
ds
mov
or
fsubs
pop
popa
lods
loope
std
push
pushf
jg
mov
mov
xchg
mov
mov
sahf
mov
jle
jo
jg
xchg
inc
add
insb
sbb
imul
adc
lret
std
scas
stc
xchg
and
mov
cmp
xchg
mov
sub
test
idivb
or
pop
fldt
pop
mov
iret
lock
cwtl
aam
stos
xchg
and
and
dec
and
cmc
jl
adc
lea
push
ljmp
inc
fnsave
xor
or
insl
repnz
mov
xchg
jge
mov
cmc
and
call
fcomip
and
pop
mov
xchg
sbb
sbbl
subl
or
xchg
repnz
jbe
mov
mov
cwtl
ds
xor
sti
xchg
mov
or
dec
sub
push
inc
ljmp
mov
scas
pushf
sub
adc
mov
jl
dec
sbb
leave
rcrl
andb
sub
daa
es
and
adc
mov
ret
mov
cmovbe
out
push
mov
add
mov
and
or
and
mov
jo
add
cmpsb
movsb
cld
pop
mov
mov
ljmp
cwtl
sbb
movsb
inc
pop
div
sbb
sub
mov
or
fadds
hlt
sub
push
xchg
jbe
cmp
dec
stc
cli
xchg
xor
out
xchg
inc
jge
pop
testb
or
sub
out
jbe
loop
test
pop
mov
mov
loope
enter
sarl
jbe
dec
sub
xchg
clc
mov
cmp
sub
mov
dec
lea
and
xor
dec
sub
xchg
leave
xor
inc
sub
test
add
inc
xor
test
sahf
mov
xor
movsl
cmp
jge
loope
pop
movsb
mov
jne
inc
adcl
imul
out
adc
addr16
pop
cmp
mov
sti
je
lcall
and
sub
fdivs
inc
mov
lret
je
push
cmp
jnp
pop
loop
adc
out
sbb
outsb
jo
test
pop
pop
push
cmpb
lds
adc
jo
mov
ficompl
jbe
cmp
dec
out
das
testl
xchg
sub
push
or
out
cmp
xchg
lods
mov
mov
jno
ds
fstpl
add
dec
or
lahf
insb
mov
mov
stos
lret
loop
sub
int
ret
sbbb
cmovg
enter
xor
mov
ret
or
sub
subl
int3
icebp
popf
adc
cld
xor
xor
test
mov
bound
or
push
ror
js
jnp
xchg
je
cli
ss
imul
push
clc
mov
lret
dec
jp
mov
ss
dec
mov
pop
push
notb
jo
call
push
mov
aaa
push
add
mov
or
pop
inc
push
ljmp
fistpll
hlt
scas
in
add
xlat
mov
push
dec
test
aaa
inc
mov
leave
loopne
outsl
dec
xor
mov
xchg
jns
sub
lret
insl
mov
or
jle
mov
outsl
popf
out
insb
adc
add
dec
jmp
icebp
loope
pop
pop
mov
add
fldl
pop
inc
fidivrs
sub
mov
roll
inc
sahf
dec
dec
jle
lahf
imul
insl
jmp
and
js
popf
test
fisubrs
in
xorl
jmp
cmp
mov
sub
mov
test
jns
nop
in
mov
movsb
scas
xchg
rcrb
push
stc
xchg
sub
inc
cmc
jns
scas
inc
ja
mov
lret
scas
out
sub
dec
lcall
nop
push
dec
add
push
sub
jecxz
jg
push
popf
je
adc
or
imul
pusha
sub
fs
mov
movsb
movsb
cmp
in
imul
out
movsl
mov
xchg
call
cltd
scas
push
push
dec
rcrl
push
les
fxch
xchg
push
out
sub
mov
shrl
insl
inc
cmp
push
fldt
push
pop
loop
push
je
faddl
fs
xchg
xchg
std
sbb
add
jecxz
test
mov
loop
rolb
push
dec
jge
dec
fbstp
movsl
fldenv
out
add
lods
inc
mov
insb
xchg
fdivl
flds
imul
loopne
fs
mov
dec
mov
xchg
decl
inc
adc
call
addl
add
pop
pushf
shrb
inc
fimull
es
test
lcall
pop
adc
xchg
aas
sub
push
pop
push
out
push
cmp
ret
cmp
add
mov
xor
repz
in
insl
or
pusha
cli
mov
xor
mov
mov
stos
add
lret
orb
je
sbb
clc
xor
mov
cmpb
shrb
out
jp
repz
add
pop
pusha
cld
stc
mov
pushl
in
pop
leave
fstps
das
insb
xor
or
dec
rolb
inc
outsl
out
xlat
cld
pop
mov
xlat
shlb
pop
arpl
mov
cli
insl
inc
xchg
lcall
popa
sub
out
jo
mov
sahf
mov
cli
movl
xchg
arpl
sub
push
and
scas
out
mov
lcall
adc
popa
jl
pop
loopne
mov
das
or
jg
es
xor
pop
adc
or
lcall
push
adc
mov
or
je
ficoml
xchg
repz
je
add
xor
jmp
dec
lret
pushf
dec
inc
push
and
sbb
lcall
gs
and
imul
mov
mov
imul
mov
mov
sbb
push
pop
jo
jecxz
jle,pt
sbb
and
les
out
jb
mov
xchg
enter
fmull
mov
imul
scas
out
lds
loop
or
imul
lods
push
loopne
xor
test
jns
mov
fiadds
fs
push
pop
std
pop
push
and
ficompl
ret
sub
adc
inc
xchg
lcall
int
pop
push
or
scas
stos
fbstp
mov
call
pushfw
test
mov
shll
jns
push
icebp
outsb
out
sub
adc
adc
lret
jo
and
popf
dec
and
add
xchg
imul
xchg
add
xchg
fisubl
clc
pusha
leave
cli
pop
movsb
es
clc
cmp
imul
std
fildl
pop
out
clc
push
add
jo
xchg
lcall
js
jg
or
lret
lea
dec
es
xor
icebp
pop
daa
ficoml
cmp
dec
mov
pop
test
add
cs
and
aaa
jl
inc
mov
in
dec
sbbb
jmp
mov
sbb
mov
flds
xor
jb
subl
xchg
into
popl
mov
sub
cmpsb
iret
push
nop
dec
in
cmp
cmp
pop
sti
ret
jbe
lcall
fidivrs
dec
push
scas
sub
dec
es
fidivs
jecxz
dec
or
ret
gs
mov
int3
enter
test
int3
mov
push
movsb
cli
out
stos
inc
enter
xchg
inc
mov
leave
mov
in
adc
inc
rcl
xchg
in
repz
js
iret
xchg
push
in
loope
or
push
leave
shrb
dec
xchg
inc
xchg
sub
addb
mov
xchg
scas
jns
movsl
lock
sbb
orb
shlb
sbbl
js
outsb
call
sub
addb
inc
enter
shl
inc
cmpsb
in
cmp
jno
pop
lcall
fstpt
xchg
lods
xchg
push
jno
cmp
pop
jmp
testl
push
sub
xchg
jno
ret
sub
and
repnz
dec
mov
inc
mov
arpl
inc
inc
sbb
es
and
popf
xor
shrb
pop
mov
sbb
int
mov
bound
daa
inc
decl
pop
cli
lods
test
adc
std
xchg
mov
mov
sub
mov
add
testl
addb
or
enter
dec
pop
filds
int
lret
ffreep
push
fstl
xor
jle
cwtl
cmp
pop
enter
sbb
ljmp
jmp
pop
fldt
pop
gs
inc
aas
mov
sub
stos
cmp
mov
mov
push
jg
mov
mov
sub
data16
and
frstor
movsl
mov
pushf
lea
pop
push
cwtl
cmp
add
mov
xlat
hlt
dec
pushf
push
sbb
nop
fisttps
inc
mov
pminub
test
jae
xor
loopne
mov
testb
aaa
push
bound
cs
jle
call
mov
out
or
loop
jmp
push
pop
xchg
shrl
sbb
int
test
and
push
sub
sbb
mov
scas
push
add
inc
faddl
add
aaa
xor
ljmp
sarl
xor
test
sub
mov
clc
jnp
mov
xlat
and
xchg
or
push
test
adc
faddl
cmp
scas
fcoml
xor
stc
addr16
cmp
cmc
mov
xlat
cmpsl
xor
or
xchg
and
je
das
clc
das
xchg
xchg
cmp
stc
push
stos
scas
leave
je
test
push
push
xor
loope
js
aas
andl
out
mov
out
js
lret
fbstp
leave
into
mov
sbb
adc
xlat
mov
xchg
hlt
movsb
mov
pop
jno
xor
in
in
xor
pop
fadd
aaa
mov
in
push
mov
fwait
repnz
rcrl
call
stos
jne
jae
pushf
loop
gs
scas
add
pop
int
lods
xchg
mov
cmp
pop
fwait
dec
lahf
std
mov
jne
in
pop
push
lods
cmp
fsubr
scas
std
ljmp
mov
das
push
pop
sarl
xor
mov
pop
fwait
jne
pushf
xchg
mov
stos
stos
jl
stc
cmpsb
sarb
dec
and
add
js
jl
enter
gs
and
sub
lcall
dec
jno
call
loope
lret
xchg
lea
dec
enter
push
xorb
fistl
aad
pop
mov
push
fmull
fs
call
mov
neg
mov
dec
or
mov
out
gs
shr
mov
xor
add
inc
movsb
stc
cmp
aad
add
ret
adc
sti
rorb
jno
nop
fldenv
push
aas
push
inc
xor
or
orl
cs
jg
push
stos
cltd
std
jo
pop
stos
push
aas
inc
outsl
jno
lods
jnp
mov
xor
int3
in
mov
xorb
jge
pop
push
rcll
dec
lahf
outsb
aaa
cmpsl
sub
outsl
mov
sbb
sub
clc
iret
and
and
xchg
inc
faddp
mov
out
std
cs
rcl
pop
jo
in
js
ljmp
int3
movsb
scas
shll
sbbl
mov
jno
push
aaa
popa
outsl
mov
jo
test
cltd
dec
pop
jo
js
jecxz
mov
push
xchg
repz
inc
dec
jmp
fdivl
add
sub
sub
lahf
outsb
setns
gs
fldt
push
adc
in
sbb
rcl
pop
mov
sahf
jno
mov
clc
rcr
mov
mov
pop
jg
in
int
cmp
or
and
mov
sub
movsb
cmpsl
andl
lahf
pop
sub
inc
cmp
int3
imul
int3
addr16
mov
jno
ss
mov
test
popf
push
sub
ret
inc
xor
or
pop
gs
cmp
mov
xchg
lret
loope
or
push
out
dec
add
fs
in
jo
mov
jge
mov
jno
adc
pop
movsl
imul
mov
sbb
ret
leave
dec
xor
adc
add
inc
add
mov
cmpsl
aad
add
mov
repnz
fildl
cltd
pusha
push
push
jmp
ja
sti
adc
mov
inc
push
adc
bound
rclb
inc
loope
mov
cmp
call
int3
mov
icebp
inc
pop
cmp
lods
mov
mov
sub
fdivrs
js
nop
frstor
ja
divl
dec
cli
jns
lcall
rorb
or
repz
inc
mov
inc
mov
jae
add
adc
and
xor
ret
and
xor
add
adc
inc
mov
inc
mov
jae
add
adc
and
xor
ret
and
xor
repz
pusha
xchg
jo
inc
xor
mov
jae
add
adc
and
xor
ret
and
xor
add
adc
pusha
xchg
lock
pop
push
sbb
xorb
push
inc
das
lea
test
sbb
in
adc
cmp
inc
insl
jne
lea
mov
dec
in
cmc
std
xchg
or
xor
pop
inc
insl
xor
popf
test
jmp
std
std
or
push
push
dec
add
sub
add
lods
rcl
ret
dec
push
jmp
ss
shrb
cmp
bound
aam
cmp
mov
cmpsl
mov
nop
push
rcrl
xor
cmp
jb
testl
daa
push
mov
cmpb
inc
out
mov
jne
push
mov
sbb
mov
std
sbb
ljmp
sbb
popf
divb
fiadds
inc
and
icebp
std
adcb
jbe
or
adc
and
xchg
fs
mov
cmp
xchg
push
inc
dec
mov
sbb
pop
insl
push
cmp
stos
jne
loope
xchg
popf
jne
xor
vcomisd
gs
and
pop
mov
call
idiv
mov
pushf
jns
jge
js
pop
inc
js
lret
cmp
or
into
aam
subb
mov
push
push
push
cmp
or
pop
push
ljmp
mov
std
in
adc
cmp
inc
insl
jne
lea
mov
vpmaddwd
in
adc
cmp
inc
insl
jne
lea
ret
dec
das
out
stos
bound
adc
fs
insb
push
push
loope
or
loopne
leave
mov
inc
or
push
or
nop
sub
ss
adcb
push
lods
xchg
iret
rclb
mov
fs
pop
je
pop
adc
in
mov
lds
mov
xchg
and
ret
icebp
ret
xchg
inc
add
cli
mov
xor
adc
mov
test
jg
dec
adc
lods
push
pop
rcr
outsb
jne
push
test
dec
aam
dec
and
dec
in
and
lcall
xchg
sbb
stos
push
in
lcall
pop
push
aad
cltd
push
dec
jo
and
inc
dec
or
add
popf
cmp
xor
fimuls
mov
clc
sbb
ljmp
mov
out
cwtl
sbb
jae
dec
cli
test
xchg
movsl
xchg
popf
cmp
mov
xor
sbb
mov
jge
mov
addr16
fbstp
xchg
mov
sarb
mov
addb
push
fcmovnu
mov
xor
jne
push
inc
out
in
or
jl
mov
das
mov
sub
dec
sub
mov
insb
data16
nop
imul
pushf
fld
and
xor
xchg
pop
jb
out
loopne
in
fimuls
bound
xor
xor
push
into
and
scas
and
jl
ss
inc
push
dec
push
sub
fldenv
cltd
lcall
lret
nop
into
push
and
fcoml
or
mov
xchg
mov
add
xor
data16
sti
push
fst
mov
cltd
mov
iret
sub
or
dec
or
jne
xchg
push
testb
aam
xchg
jmp
stos
je
gs
addb
setb
push
test
orl
scas
lds
fstp
jo
testl
lock
aas
sbb
stos
aas
inc
movsl
add
dec
push
fwait
and
mov
cmp
add
mov
stos
adc
mov
mov
jnp,pt
jecxz
push
popa
das
decb
dec
add
add
xor
ljmp
out
xlat
mov
std
and
xlat
mov
xor
cwtl
sub
jge
mov
repnz
or
adc
mov
in
sbb
cmp
mov
pop
push
push
push
lock
mov
mov
sub
adc
pop
cmc
sahf
jl
fs
enter
xchg
popa
xchg
xchg
aad
mov
jnp
mov
pusha
scas
jle
add
test
cld
mov
in
mov
scas
lods
mov
mov
add
xchg
popf
ret
and
dec
mov
lret
xor
sbb
insb
imul
xchg
int
out
scas
pop
lods
rcrl
jg
mov
or
fbstp
adc
cmove
into
adc
stc
imul
insb
jno
push
mov
xor
add
arpl
ss
std
push
xor
cmp
std
scas
xchg
ret
jmp
mov
out
pop
cli
add
mov
jnp
out
jbe
add
scas
fnstcw
das
push
inc
out
push
sub
xor
stc
hlt
sbbl
loopne
jp
lods
dec
push
stos
pop
mov
push
add
jb
icebp
jmpw
cmpsb
je
std
repnz
inc
lcall
mov
lea
sbb
inc
js
cmpsl
mov
loopne
xchg
icebp
stos
aas
pop
mov
jne
loop
ss
adc
cltd
insb
test
sbb
cmp
mov
in
sbb
lret
pop
pushf
insl
enter
mov
popa
sbb
and
mov
fldl
scas
jmp
out
mov
ds
cmc
jnp
test
jle
push
cli
dec
push
push
shrl
jecxz
cmp
in
data16
xor
ret
outsl
ss
xchg
sbb
popa
jg
popf
out
inc
enter
and
sbb
xchg
das
sub
mov
push
jp
lods
out
push
pushf
mov
push
mov
push
and
ss
add
movsl
incl
test
popf
icebp
stos
cmpl
push
idivl
push
xchg
mov
mov
jecxz
mov
or
xor
nop
xor
mov
push
mov
jo
pop
adc
lds
or
cmp
addb
xchg
sub
int3
sub
lahf
rol
add
inc
cmp
jae
jecxz
sub
stos
ficoml
cmc
or
stc
or
ss
jo
pop
push
mov
arpl
ja
bound
xchg
mov
frstor
out
fcmovbe
inc
shll
pop
pop
dec
xchg
sbb
arpl
sbb
mov
mov
out
mov
test
mov
cld
pop
repnz
jge
sub
jg
and
inc
dec
jmp
out
mov
test
jp
mov
mov
fstp
pop
lcall
sub
push
ds
xor
pusha
push
pop
cmp
push
rcrl
leave
inc
lcall
loop
cmp
dec
int
add
scas
ss
cwtl
mov
int3
sbb
pop
or
or
cld
test
cli
jns
test
movsl
jne
testl
mov
lahf
jae
mov
cli
xchg
fadds
add
push
pop
repz
das
mov
fdivl
jmp
sbb
inc
xchg
inc
push
imul
loopne
inc
adc
mov
insl
adc
jns
int3
hlt
cmpsb
add
ficoml
fs
or
lret
scas
dec
insb
imul
pop
lcall
shlb
mov
lcall
pop
popf
or
xchg
add
scas
jmp
inc
xchg
pushf
insl
mov
lret
test
pop
jno
in
daa
sti
and
dec
stos
xchg
mov
lods
repz
fbstp
popa
inc
call
mov
pop
sbb
adc
outsb
in
push
imul
fidivrl
fdivrl
insb
mov
pop
scas
sbb
lea
cli
and
cmp
or
insb
lock
psadbw
mov
sub
inc
mov
and
scas
push
sub
and
mov
adcl
repnz
xor
shlb
roll
and
ret
aas
loop
dec
jo
test
xchg
add
or
sub
cltd
adc
or
mov
adcl
sbb
push
faddl
lret
scas
push
mov
ljmp
imull
mov
repz
in
add
lock
cmp
lret
test
cmp
and
ss
rolb
test
cmp
pop
add
pcmpeqd
dec
not
push
mov
repz
icebp
dec
pop
repz
and
das
adc
pusha
cwtl
iret
je
pop
sbb
addb
adcl
dec
lock
mov
xor
xor
call
mov
push
in
or
cmp
xchg
xorl
out
sub
in
jg
fistpll
rcr
adc
test
sbb
stc
inc
frstor
js
add
and
mov
pusha
pop
jo
cmpsl
dec
sub
dec
xchg
pop
mov
das
lock
shll
inc
xchg
push
jnp
cmpsb
decl
cmovle
pop
jle
jg
arpl
push
dec
sub
push
mov
inc
mov
sub
cs
andl
xor
clc
mov
cmp
jle
lods
jbe
iret
add
stos
popa
pop
in
and
cmp
stc
loope
pop
push
or
shll
adc
pop
inc
into
popf
pop
fsts
das
test
mov
and
sbb
in
dec
cmpsb
mov
data16
pusha
fidivrs
sti
xor
sbb
paddsw
lods
dec
insb
xchg
sub
xchg
push
aas
lock
or
mov
dec
and
and
pop
mov
push
xor
xchg
std
js
xor
pop
or
sbb
or
jp
cmp
nop
cmp
les
mov
arpl
xchg
add
cmp
inc
push
mov
ljmp
faddl
lret
aaa
pop
sub
push
inc
push
adc
push
outsl
adc
cs
push
lret
test
mov
faddl
popf
addr16
xchg
fs
mov
jbe
data16
fsubr
pushf
add
xor
int
lahf
pusha
divb
pop
mov
sub
or
sub
mov
stos
xchg
dec
movsb
lods
ret
sbb
fcoml
or
and
push
cmpl
test
data16
test
inc
or
or
mov
sbbb
iret
add
sbb
inc
dec
inc
mov
jae
xor
mov
xchg
sub
push
imul
sar
mov
lea
test
ficomps
popa
mov
xor
rcrl
rolb
arpl
or
lds
mov
mov
dec
sub
jnp
aad
sbb
xchg
xchg
js
repz
xchg
sub
xlat
fidivl
rcrl
cli
jnp
aad
pop
movsl
xchg
add
or
sub
adc
adc
push
jle
adc
lods
push
pusha
daa
gs
xor
add
cmp
out
sbb
add
cmp
push
inc
aas
ja
hlt
cmp
cmc
adc
idivl
arpl
jns
dec
mov
sbb
push
movb
testl
adcb
push
mov
les
jb
xchg
xor
cmp
out
push
cmpsl
inc
addr16
dec
rcr
cmp
cwtl
nop
push
push
xlat
outsl
shl
shll
and
xor
fstpl
fwait
cmp
add
les
sbb
subb
jmp
or
inc
push
or
icebp
or
clc
clc
aas
gs
jmp
dec
pop
scas
pop
addl
push
push
xchg
fldln2
or
addb
add
cltd
cmp
clc
xor
je
scas
dec
xchg
jo
test
ja
out
outsl
sub
loope
das
fs
xchg
add
divl
xor
jo
ljmp
or
push
rcrl
fisttpll
mov
inc
push
fists
or
push
loop
pop
stos
rcrl
lea
cs
sbb
xchg
popf
dec
fwait
pusha
insl
fcompl
inc
mov
cs
inc
fs
bound
into
jl
push
fnstenv
mov
cmpsl
cltd
pop
jge
into
pushl
int
inc
xor
jl
into
inc
daa
push
mov
neg
xchg
es
into
nop
shrl
and
stos
sti
or
mov
and
jmp
div
mov
aad
mov
mov
lret
lods
cltd
fsincos
iret
les
mov
iret
xor
imul
insb
iret
mov
add
push
out
cli
or
aad
xor
or
rorl
stos
das
add
sarb
inc
fbld
mov
pop
gs
les
lcall
in
fistpl
cmp
sub
dec
lcall
jmp
push
or
pop
push
faddl
mov
mov
ja
fcmovnb
xchg
xchg
inc
insb
sub
push
mov
mov
mov
push
aaa
sbb
test
imul
mov
into
cmp
test
call
mov
daa
and
pop
insl
insb
push
int
incl
rcrb
mov
daa
cs
mov
or
sahf
push
test
xchg
ja
rcrl
mov
je
jp
bound
loop
sarl
inc
mov
xchg
push
xor
dec
adcb
jge
mov
inc
sti
or
xchg
mov
fimull
inc
push
pop
adc
cmpsl
mov
xor
shl
stos
in
aas
lcall
out
pop
xorb
cs
shlb
dec
cmp
fildl
in
xor
sbb
xor
aas
jp
mov
insb
test
push
outsl
xchg
xchg
pushl
xorl
sarl
xchg
test
cmp
mov
sbb
imulb
adc
cwtl
lods
xor
or
adc
xchg
inc
and
jb
adc
rcrb
push
xchg
and
push
lock
aaa
mov
cmp
adc
xchg
insl
in
bound
cld
lcall
mov
jg
add
cmp
sbb
data16
or
shlb
xor
mov
enter
fcomp
fimull
push
jae
dec
pop
add
xor
movsb
jne,pn
dec
cld
iret
jb
push
test
add
mov
push
cmp
insl
mov
addl
mov
or
test
jns
add
addl
in
out
pop
xchg
in
sub
outsl
outsb
mov
aam
xor
jae
insl
aad
lods
test
cmpsl
sbb
sbb
pop
push
sub
add
add
jo
dec
inc
sub
imul
adc
in
in
mov
aaa
mov
pushf
pop
movhps
andl
std
xchg
dec
insl
icebp
loope
xchg
push
repz
mov
push
loope
jmp
daa
pop
inc
push
push
sub
mov
int3
dec
into
mov
jge
mov
loopne
cmp
or
cmp
loope
pop
movsl
int
adc
push
mov
lds
jecxz
mov
xchg
imul
pusha
adc
ds
ret
add
dec
and
sbb
sub
mull
jg
out
add
sahf
xchg
addb
or
movsb
xchg
lahf
mov
xchg
mov
inc
adc
mov
outsl
in
xchg
fwait
adc
and
js
push
fiadds
lods
stc
sub
mov
jne
movsb
rorl
and
subps
lahf
nop
xchg
xor
fimull
and
jg
fdivl
sub
rorb
movsl
jg
aas
xor
push
dec
ss
xor
ret
test
pop
pusha
jae
ljmp
xor
loop,pt
lret
lret
gs
mov
pop
sub
mov
sbb
fisubrl
cmp
jmp
lret
xor
subl
std
mov
mov
push
mov
fiaddl
pop
push
xchg
pop
mov
jl
loopne
lods
mov
out
xor
mov
xchg
mov
ret
and
mov
xor
out
push
mov
daa
push
xor
test
xor
fisubrl
pop
hlt
daa
sbb
mov
push
stc
jecxz
lcall
push
cmp
lea
adc
movsl
cs
pop
ljmp
jle
mov
xchg
ret
mov
xchg
xchg
add
mov
push
imul
popa
movsl
std
inc
adc
add
ret
cmpsb
negb
sub
xchg
sub
sub
icebp
lahf
mov
testb
ljmp
push
clc
aam
mov
add
xor
jle
xor
and
jp
shll
popf
pop
sub
imul
aad
mov
push
cmp
js
jle
imul
test
or
xor
loope
pop
xlat
aaa
loopne
pushf
cmp
mov
test
cmp
enter
mov
sbb
xor
lahf
xor
push
cmp
div
jae
pop
dec
adc
and
ret
xlat
pop
mov
inc
push
push
dec
ffreep
nop
dec
rcl
popa
in
filds
out
adc
mov
fnstsw
add
mov
je
sbb
cld
shll
fisttpll
je
pop
ljmp
xchg
je
cmc
xchg
fwait
rcrb
xor
jmp
pop
xchg
ss
addr16
dec
jnp
mov
fdivrs
sub
cmp
jns
mov
subb
out
dec
aaa
cmp
sub
data16
mov
sarl
pushf
pop
scas
cltd
pusha
lcall
mov
push
mov
adc
mov
fsubr
add
daa
nopl
mov
mov
imul
divb
inc
dec
out
ds
arpl
bound
cmp
popa
je
push
dec
add
cmp
xchg
xchg
stos
fsubl
fmul
imul
mov
aad
cmpl
notb
mov
add
shll
pop
loopne
adc
out
jnp
xchg
mov
xchg
push
mov
mov
dec
lret
pop
jnp
into
sarb
ds
sbb
popa
pop
subl
out
fwait
popl
sbb
sub
jge
lock
add
popf
ljmp
std
lea
adc
fisubrl
out
mov
mov
enter
and
jnp
movsl
pop
and
mov
and
cmp
int3
inc
stc
stos
adcl
repz
push
daa
adc
and
js
movsb
movsb
xchg
xor
adc
cmp
add
daa
lods
sarb
ljmp
mov
mov
inc
lret
shll
pop
loopne
mov
sub
inc
ljmp
stos
sbb
insb
ss
sub
frstor
cli
mov
push
test
sahf
adc
je
sahf
pop
lret
mov
inc
or
cmp
scas
pop
mov
push
push
sub
and
dec
iret
test
ret
and
push
imul
jo
rcl
pop
fsubrs
jbe
pusha
int
fisubrs
pop
push
jg
std
pop
jg
jmp
and
mov
or
insb
sub
faddp
cmp
pop
add
test
into
inc
mov
leave
jp
insl
xor
es
or
push
pop
mov
push
lcall
fidivrs
cmp
adc
icebp
xor
les
push
mov
push
push
cs
aaa
jo
pop
or
push
or
popa
jg
or
dec
push
cmpsl
sbb
jmp
sub
jo
jg
jnp
cmc
jge
or
pop
out
mov
sub
add
push
loope
stos
push
jmp
pop
fdiv
add
add
dec
cmp
mov
ficompl
pop
movsl
xchg
and
mov
lret
push
push
imul
aas
push
jo
cmc
sub
stos
ds
xchg
or
push
mov
mov
adc
in
shlb
jae
cs
mov
dec
dec
push
push
movsb
dec
sub
lahf
imul
mov
in
inc
scas
rcll
sub
jae
push
fwait
icebp
or
mov
cpuid
dec
test
mov
pop
dec
pushf
rclb
adc
into
outsb
adc
sbb
add
jbe
push
mov
or
rcl
cmp
aas
or
iret
mov
test
fistl
das
shlb
cltd
popf
faddl
sub
sub
rorb
mov
mov
inc
cmp
fildl
jb
mov
jae
pop
pop
and
dec
icebp
ret
push
icebp
push
je
inc
mov
ja
add
or
push
sahf
mov
cmpsl
pop
xor
fsub
pop
xor
imul
inc
pop
filds
push
mov
movsb
xchg
js
ljmp
fcoms
adc
test
mov
fisttpll
inc
faddp
fstpt
push
jmp
cwtl
lds
fdivrs
out
and
xor
orl
xor
sbb
xor
stc
es
push
stos
mov
adc
jg
fwait
lock
mov
dec
cmp
fwait
lea
push
mov
leave
sbb
adc
sbbl
xor
or
xchg
mov
cmp
xor
mov
sbb
addr16
push
or
mov
mov
repz
sub
adcb
sbb
stos
das
lcall
hlt
or
jns
jecxz
movsb
cld
pop
push
xchg
and
jns
sarb
xlat
adc
hlt
mov
or
subl
push
xor
push
call
mov
xchg
mov
lret
pop
pop
cwtl
adc
fsubs
inc
add
lahf
push
dec
sbb
arpl
idivl
xchg
pop
andb
xor
pop
mov
ret
push
in
push
std
or
xchg
lahf
neg
inc
addr16
out
jg
pop
mov
lret
mov
inc
aas
adc
dec
adc
jno
mov
lahf
xor
mov
or
cmp
mov
mov
mov
lods
insb
xchg
add
jo
sub
mov
cmp
popa
push
sbbb
loopne
mov
sbb
aad
insb
nop
stos
dec
or
xor
mov
enter
hlt
inc
dec
cmp
push
cltd
jp
push
dec
rorl
xor
movsl
dec
out
cltd
and
jge
lea
mov
jbe
shlb
movsl
jl
call
ss
popa
popa
add
jne
xchg
fnstcw
vpmaddwd
in
adc
cmp
inc
insl
jne
lea
mov
vpmaddwd
in
adc
cmp
inc
insl
jne
lea
mov
insl
in
cmc
std
in
int
add
dec
push
pop
inc
insb
push
jge
lea
mov
lds
jge
repnz
cmp
aad
xchg
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
aas
mov
mov
inc
ds
out
cltd
aam
mov
add
add
add
pop
add
add
add
add
sbb
or
arpl
sub
movsl
add
or
push
add
add
add
add
adc
popa
add
sub
int3
add
pop
add
add
roll
add
add
push
mov
out
add
add
mov
ret
add
add
rolb
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
xchg
addl
add
add
iret
add
add
add
add
add
add
add
add
add
add
add
add
xor
sub
jmp
add
add
add
add
add
add
add
add
add
mov
in
add
add
add
add
add
pop
add
dec
add
add
add
add
add
add
cmp
add
add
mov
int3
add
xchg
add
add
add
imul
add
add
add
add
add
add
add
xchg
add
xor
cmp
add
add
add
in
pop
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
popl
lahf
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
pop
add
add
adc
push
add
rolb
add
outsb
add
add
incl
sbb
in
add
add
add
add
stc
add
add
add
lock
inc
add
xor
fwait
add
add
add
xor
bound
xor
insl
add
add
add
add
add
add
add
add
add
add
and
bound
addl
inc
add
add
adc
xlat
add
add
add
add
add
in
add
pop
add
add
lock
add
add
add
addb
add
add
in
add
sbb
incl
dec
add
pop
add
add
add
add
add
add
add
add
add
addl
xchg
cmp
add
add
stc
add
add
add
add
jge
adc
xor
mov
add
add
cwtl
add
roll
adc
pop
add
add
add
add
scas
add
add
inc
add
add
add
inc
add
and
add
add
add
xchg
add
add
add
add
add
add
add
add
inc
add
pop
add
add
add
add
add
add
add
add
insl
add
imul
dec
add
add
add
add
add
add
add
add
add
ret
add
add
add
add
dec
add
inc
add
add
data16
dec
push
xchg
inc
outsb
mov
cli
and
mov
rolb
loopne
ret
or
cmp
int
setge
pop
dec
jmp
and
mov
cltd
xchg
add
pushf
jns
xchg
pop
adc
dec
or
jge
lret
cmp
or
int3
lods
mov
pop
mov
jecxz
pop
cld
rorb
xchg
xchg
jp
std
loopne
inc
lcall
xor
out
dec
sbb
loope
jg
rcl
insb
pop
sub
loope
scas
mov
cmp
xchg
jg
xchg
cmp
ror
hlt
int3
sahf
xor
add
fcoml
imul
cwtl
pop
add
or
xor
mov
xchg
outsl
mov
xor
jnp
iret
xlat
jle
push
xchg
sub
iret
xor
dec
jmp
or
cmp
cmp
mov
addr16
daa
lea
iret
push
sub
pop
mov
mov
shll
xor
rol
mov
enter
pop
stc
xchg
test
xchg
or
fcoml
sbb
push
cmpb
jmp
ret
iret
shl
pusha
ret
outsl
in
mov
push
mov
sub
les
insb
mov
in
sub
fadds
mov
jb
inc
sbb
mov
outsb
hlt
test
or
out
mov
push
sbb
aas
fstpl
sbb
and
cmc
ja
mov
mov
repnz
inc
mov
mov
mov
mov
les
sub
xchg
je
sub
arpl
addr16
les
push
push
out
int
loope
jecxz
push
adcl
je
fcomps
shl
aas
mov
adc
xor
ss
in
push
sub
sbb
sbb
repnz
loopne
or
lds
out
out
pop
dec
movsb
mov
inc
mov
jne
mov
stos
aam
jg
mov
and
std
ljmp
aas
arpl
mov
jo
lods
test
imul
leave
add
lahf
test
in
and
push
jp
mov
mov
dec
int3
sub
in
pop
shr
jg
inc
jmp
popa
xchg
sbb
aaa
inc
in
sub
fiaddl
ss
xor
adc
or
push
fcmovnu
dec
pop
push
es
out
pop
pop
stos
cmc
lret
or
add
mov
inc
out
mov
add
mov
jbe
stos
stos
push
and
add
lret
sub
xchg
aaa
mov
sahf
add
jp
dec
mov
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
