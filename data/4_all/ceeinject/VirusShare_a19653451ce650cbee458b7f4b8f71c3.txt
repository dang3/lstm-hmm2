adc
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
imul
gs
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
js
push
xchg
mov
add
xor
add
adc
fs
je
inc
mov
push
xchg
cmp
sub
sbb
or
add
adc
or
push
popa
movsb
jno
inc
test
and
xor
add
or
loope
lret
pop
xchg
jne
xor
and
sub
daa
adc
pop
std
pop
in
ds
imul
icebp
pop
jle
adc
int
insb
mov
test
or
notl
adc
in
jno
int3
popf
fidivrs
ror
adc
jo
fs
add
stos
out
push
xchg
sti
in
lods
je
aaa
enter
pop
mov
mov
rorl
xchg
lods
insb
ret
movl
sub
jmp
hlt
inc
fs
adc
push
sub
in
aad
test
insb
xor
scas
clc
hlt
clc
fldt
js
sti
cmp
inc
aaa
test
addr16
cwtl
stos
nop
and
aam
in
cmp
int3
add
movsl
cld
cwtl
add
fs
daa
cwtl
inc
mov
movsb
jno
pop
test
das
in
hlt
sbb
adc
loope
lock
add
adc
fs
addb
mov
cmp
dec
orl
clc
pop
test
mov
cmp
or
aaa
loope
xchg
push
mov
mov
mov
push
mov
or
jne
adc
cmp
mulb
icebp
jo
sub
sbb
or
clc
and
xor
add
adc
fs
cwtl
inc
mov
push
xchg
cmp
sub
sbb
or
clc
and
xor
add
adc
fs
cwtl
inc
mov
inc
fsub
imul
sbb
dec
int
fxch
test
xor
aad
inc
mov
out
iret
fcmove
add
adc
push
scas
sub
outsb
outsb
or
stc
lock
pop
sub
icebp
ja
dec
jmp
or
leave
push
mov
or
movsb
pushf
push
sub
in
or
dec
jno
push
fcomip
and
adc
je
pop
xchg
push
cmp
stos
jmp
mov
xchg
leave
dec
shl
shlb
popa
push
stos
jp
nop
ljmp
lods
lahf
popf
ja
inc
add
cmp
sbb
sub
xchg
js
fisttpl
push
xor
dec
mov
scas
mov
sbb
icebp
mov
cltd
mov
mov
pop
movsb
decb
add
jg
xor
movsb
pop
sub
fcmovne
mov
jne
add
add
dec
out
sbb
lods
cmpb
add
addr16
mov
int3
adc
fldt
outsb
ret
add
je
pusha
iret
or
and
jne
in
movsb
nop
push
cmp
jmp
push
sbb
lods
jl
stc
std
outsl
pop
sbb
and
xchg
jb
mov
lea
adc
push
nop/reserved
dec
dec
cmpsl
sahf
pop
leave
add
aad
pushf
lods
xchg
mov
cmp
fs
push
sub
dec
lahf
push
pop
cwtl
popa
dec
mov
adc
jl
fisubs
inc
movsl
aam
out
loopne
jo
or
mov
xor
pop
scas
cmpsb
js
lcall
mov
jns
outsb
movb
push
stos
inc
mov
sbb
inc
cmp
add
mov
pop
or
scas
jns
inc
ss
loope
cmp
xchg
and
bsf
in
out
jg
out
aad
lods
icebp
sbb
ret
movsl
fcompl
dec
ret
pop
fwait
enter
mov
shll
clc
xchg
fdivrs
push
push
rorb
and
sub
out
jnp
icebp
mov
movsl
push
dec
int
mov
sbb
mov
jnp
pushf
shr
jmp
fcompl
mov
rcl
gs
aaa
jbe
rclb
cmc
cwtl
lcall
and
enter
lahf
mov
xor
ret
popa
cld
inc
mov
ret
xchg
mov
sbb
add
into
scas
and
dec
jb
sbb
xchg
lods
leave
js
aad
pop
shlb
mov
arpl
int
fcmovnb
sbb
or
das
cwtl
adc
aaa
pop
ss
jne
jg
mov
cmp
xchg
scas
xchg
es
pop
mov
mov
sub
adc
movsb
push
dec
pusha
je
sbb
pusha
inc
setbe
mov
sbb
lret
jecxz
and
mov
je
lods
into
mov
mov
popa
pop
or
nop
push
outsb
add
cmpsl
mov
mov
mov
sbb
adc
push
enter
xlat
int
lret
js
gs
push
lock
lds
pop
jg
dec
jnp
outsl
cwtl
or
jmp
es
imul
sahf
dec
scas
cs
out
xor
aad
rclb
js
test
mov
or
or
movsl
in
js
jle
ss
sbb
add
sarl
dec
mov
adc
pop
jns
or
fsubrl
mov
add
movsb
aad
pop
rolb
int
push
je
dec
or
pop
lds
aad
es
jle
loopne
adc
insl
sahf
sub
add
fisubl
test
mov
test
scas
testl
fwait
les
jl
jle
add
push
outsb
sub
mov
xor
and
stos
call
out
xchg
mov
push
pop
test
fistps
jb
bound
das
push
mov
test
adc
pop
cld
push
das
or
outsl
and
mov
mov
pop
xor
xchg
adc
mov
rclb
dec
movsl
loop
and
mov
fcmovu
add
mov
adc
icebp
cs
and
add
stc
push
out
adc
jne
repnz
loope
lret
push
lcall
push
xor
xor
inc
fsubrl
test
sub
lods
test
insb
xlat
pop
lds
addb
push
mov
mov
repz
mov
lds
movsl
and
insl
adc
adc
imulb
push
or
into
fs
adc
jo
jb
negb
mov
xlat
mov
adc
sbb
xchg
mov
test
xorl
jmp
pusha
xchg
push
cmp
lods
cld
js
jmp
mov
stos
inc
mov
mov
repz
xor
rolb
dec
push
or
sar
xlat
and
sti
cmp
aad
sar
xchg
enter
lods
inc
xchg
popl
scas
pop
test
cmp
push
je
dec
or
mov
test
fwait
popa
add
cmc
pop
inc
sub
aaa
push
cmp
add
pop
outsb
xchg
adc
inc
test
andl
repnz
mov
xchg
mov
and
icebp
clc
cs
fwait
testb
mov
ficoms
shlb
mov
out
pop
in
das
sub
icebp
adc
out
mov
fwait
mov
sahf
push
shr
mov
in
or
cmp
cwtl
popa
in
mov
and
pop
xchg
jge
insl
out
mov
lock
insl
sbb
aam
popa
shll
int
dec
mov
in
je
sub
insb
test
call
xchg
lock
jecxz
jae
sbb
je
mov
push
xlat
lock
sub
testl
jmp
xor
jle
adc
testb
mov
sbb
aaa
adc
mov
icebp
inc
jmp
insl
pusha
xchg
sub
icebp
insb
inc
push
add
mov
mov
jl
or
pop
rep
ret
adc
arpl
mov
push
popa
cmpsl
or
adc
mov
or
cmp
in
into
movsb
pop
mov
add
nop
cmp
xor
mov
sub
add
mov
and
jbe
and
aam
dec
nop
xchg
into
sbb
popa
jge
cs
mov
cmc
shrb
imul
jmp
mov
push
dec
inc
jecxz
push
lds
mov
cmp
xchg
stc
fdivrl
jno
jbe
add
jbe
push
mov
inc
bound
leave
insb
int
movsl
test
mov
out
pop
ret
rorl
imul
mov
mov
sbb
adc
test
out
movsl
rol
out
jbe
jmp
cmpl
mov
mov
dec
in
jmp
sbb
sbb
mov
jo
pusha
jle
push
push
fstps
fcmovbe
pop
mov
jl
rcll
dec
mov
mov
pop
or
pop
imul
jmp
xchg
xchg
jg
push
add
into
es
dec
int3
push
js
out
mov
xchg
sbbb
movsb
fisttpl
test
popa
mov
sub
ljmp
dec
shll
fdivrs
xlat
in
xchg
shr
lret
xor
inc
adc
lea
mov
mov
sarb
imul
mov
test
call
dec
arpl
pop
aad
sahf
cs
mov
das
incl
push
xor
xor
xor
lods
fisubs
and
jg
aas
mov
daa
xor
iret
and
dec
das
xchg
enter
data16
jb
sub
jo
adc
pop
inc
jp
ret
scas
movsb
cmp
ja
pop
in
inc
lock
popf
out
popa
subl
enter
add
dec
inc
jne
in
fmul
repz
cmpsl
int
lcall
dec
pop
repnz
jle
ror
lret
cmp
xor
ja
mov
and
mov
fldt
push
shll
pop
mov
mov
jno
pushf
lret
movsl
out
adc
lahf
fstp
and
sbb
sub
xchg
aad
add
or
pop
mov
mov
inc
fstl
cld
mov
mov
and
jns
cmp
fidivrl
push
mov
sub
inc
pop
pop
jne
ret
ret
test
inc
cmp
mov
kandnb
cs
repnz
aas
loop
scas
inc
clc
sub
cmp
mov
add
push
dec
sbb
jae
movl
mov
bound
pop
popw
sub
add
mov
jg
ficoml
mov
shl
ret
push
test
out
mov
mov
sub
sahf
negl
test
mov
push
xlat
test
jo
fs
ret
lahf
add
imulb
inc
insb
aad
daa
aaa
adc
xchg
filds
mov
mov
movsb
cmpb
fstps
outsb
jo
imul
fs
das
mov
cmp
jl
fistpl
and
in
dec
jbe
or
les
inc
aad
xor
aas
loopne
xor
adc
negb
sub
mov
xchg
and
and
xchg
xchg
fiadds
or
jg
loope
enter
sub
enter
sarl
sub
mov
inc
add
out
sbb
sub
aam
cmp
dec
jge
imulb
stos
xchg
mov
or
mov
in
std
xlat
dec
mov
incb
mov
imul
mov
and
or
into
out
loope
and
pop
daa
push
mov
daa
push
push
ds
xor
aaa
out
xchg
mov
inc
push
and
sbb
fstl
dec
jb
jno
pop
stc
sub
sbb
inc
mov
dec
sub
pop
cmp
fsub
push
and
not
mov
mov
dec
sbb
icebp
repz
xchg
add
push
ret
mov
fnstsw
or
jle
in
mov
insb
shlb
add
stos
push
jne
imul
mov
push
mov
inc
mov
ljmp
popa
xchg
repnz
aaa
add
out
test
push
mov
rolb
pop
mov
in
icebp
push
jmp
inc
imul
push
mov
in
adc
movsb
xor
or
mov
stos
mov
cmp
outsl
jo
repz
and
cltd
cmp
cld
lret
push
jbe
mov
insb
push
xchg
lods
fisttps
push
stc
mov
push
gs
mov
leave
aad
pop
xor
or
adc
test
in
push
adc
stc
push
sahf
mov
std
popf
addr16
fmull
pop
rclb
sub
xchg
adc
mov
jg
test
cmp
or
xor
lahf
xor
jo
cmp
cmp
jp
xor
dec
sub
int
adc
pusha
push
mov
mov
rorl
in
xchg
mov
jne
inc
stc
dec
aas
iret
incl
int
stos
xchg
shlb
sti
mov
scas
lds
sbb
lret
shl
es
insl
sub
inc
fwait
mov
popf
maxps
ret
dec
test
fcoml
ja
repnz
and
popf
ds
and
jnp
fldl
loop
outsl
pop
push
icebp
les
faddp
jl
addr16
movsl
hlt
scas
testl
lret
mov
inc
mov
inc
insl
into
inc
divl
dec
push
lcall
sbb
inc
or
sti
lds
scas
in
sbb
cltd
and
sub
jo
iret
int
nop
leave
bound
ja
add
fcompl
pop
ret
pop
jmp
lods
out
or
inc
inc
cvtpi2ps
dec
cmp
leave
adc
ljmp
loope
add
mov
jnp
test
add
push
inc
inc
sub
fcompl
mov
movsb
ss
outsb
sbb
jl
push
cltd
mov
das
mov
fcompl
dec
insl
dec
inc
fidivl
call
scas
pop
or
sub
xchg
inc
stos
jl
popa
outsl
aas
insl
imul
inc
ret
leave
bound
out
push
adc
pop
test
std
xchg
mov
push
popf
dec
push
adc
dec
adc
clc
popa
xchg
aas
pop
cmpsb
stc
out
xor
sbb
xor
iret
std
xchg
adc
clc
jo
jae
xchg
sbb
mov
ds
and
shrb
movl
and
xor
xor
pop
mov
pop
sub
sti
faddl
movsb
adc
push
mov
aam
push
lods
and
out
mov
ss
gs
addl
adc
mov
mov
pop
out
add
mov
cmc
outsb
jge
and
pop
fisttps
lea
lahf
sbb
jbe
imul
and
mov
sbb
repz
rolb
int
lea
sbb
pop
sub
es
sti
daa
lahf
icebp
sar
xchg
add
push
push
sbb
pop
mov
js
mov
jmp
sti
sub
test
or
push
aam
aaa
xchg
push
arpl
xchg
mov
cmp
xor
mov
pop
push
push
outsl
cmpsl
shll
xchg
sub
pop
movb
insl
mov
lock
fadds
inc
xor
push
fisubs
arpl
or
cli
add
insl
je
and
in
cld
imul
cs
jne
mov
shll
daa
cwtl
mov
ja
mov
mov
sarb
push
aas
mov
cmp
add
and
lea
fwait
mov
fsubl
push
add
into
sbb
jns
sbb
std
jns
mov
xchg
addl
aad
inc
pop
stos
ljmp
frstor
jecxz
dec
shrl
mov
xchg
inc
cs
and
dec
sarl
out
icebp
xlat
xchg
loop
xor
inc
aad
mov
lcall
sub
out
or
mov
sub
cld
adc
add
push
mov
mov
arpl
out
mov
cmp
fisubl
int
cmpsl
and
jo
adc
dec
jb
inc
scas
scas
push
insl
cs
imul
mov
out
fs
popa
pop
inc
lahf
mov
mov
mov
lcall
cli
mov
stos
cmp
add
loopne
insb
mov
je
push
cli
or
cmp
jge
lret
hlt
lahf
push
or
movsb
cmpsb
popa
xchg
lods
lret
mov
inc
aam
adc
ljmp
test
mov
out
test
lds
cmp
out
stc
xchg
inc
sbbl
testl
cmpsb
std
pusha
cmpsb
lods
sahf
ljmp
insb
subb
and
push
ljmp
xchg
dec
jb
gs
xor
xor
and
ljmp
lds
inc
daa
mov
adc
jg
ss
inc
stos
ficoms
push
sub
adc
in
mov
lock
dec
fnstcw
mov
sahf
sub
ret
push
adc
xchg
mov
cmpsb
sub
imul
pop
mov
pop
fucomp
fwait
mov
test
sbb
jno
shll
sahf
push
mov
and
ja
lods
pop
test
lret
lods
add
xchg
out
popa
mov
pop
mov
loop
movsb
les
mov
cld
add
mov
inc
in
cmp
sub
loop
rcl
or
push
pop
sti
ds
subl
out
incb
das
push
rorb
cmp
loopne
xchg
call
pop
gs
or
mov
outsb
cltd
adc
or
jg
inc
pop
mov
push
inc
mov
pop
pop
or
out
and
mov
or
xchg
sbb
fisttpl
mov
pusha
je
xchg
jns
sbb
adc
xor
out
mov
in
aad
and
mov
inc
icebp
push
addb
push
scas
pop
adc
add
dec
dec
mov
cmp
hlt
push
xor
jmp
icebp
ret
pop
loopne
out
repz
fidivrl
f2xm1
sub
out
dec
mov
movsb
dec
in
icebp
stc
dec
mov
xchg
ljmp
mov
inc
sbb
mov
int
jne
mov
arpl
push
lock
push
fimull
js
ret
call
and
mov
cltd
cld
ljmp
divb
cli
scas
mov
sub
or
sbb
es
in
or
mov
in
mov
inc
or
int
mov
sbb
fmul
mov
cmp
dec
lods
rcr
mov
mov
jg
xor
cli
scas
add
ret
adc
inc
scas
imul
pop
dec
scas
jae
and
fdivrs
lahf
nop
mov
xor
daa
pop
xor
loope
mov
jns
aaa
inc
ljmp
in
mov
inc
push
or
jne
dec
jne
xor
jae
inc
popa
pushf
fsts
insb
loopne
fidivrs
add
jae
push
test
mov
ret
pop
add
push
repz
xor
pushf
and
cs
sub
andb
mov
ja
xchg
test
mov
push
das
repnz
imul
mov
jns
les
jnp
or
sti
aaa
mov
ret
lahf
lahf
pop
and
mov
andb
outsl
jb
aaa
fcoml
repnz
hlt
or
add
xchg
std
movsb
add
je
mov
pop
pop
add
dec
stos
je
push
or
pusha
xor
iret
loop
insb
or
mov
xorb
push
test
decl
cmp
mov
cmpb
push
out
shrb
xor
pop
mov
cli
xor
add
arpl
xchg
mov
std
addb
adc
cmp
jno
dec
mov
sub
or
into
push
cmp
mov
arpl
frstor
push
xchg
or
or
jno
jne
and
shll
xor
sbb
cmc
sbb
lods
mov
add
test
jae
jle
or
aas
sbb
mov
mov
push
push
sbb
pop
xchg
repnz
mov
lds
ret
xor
jae
fidivl
in
mov
pop
pop
pusha
adc
iret
mov
sub
cmp
scas
pop
out
arpl
add
or
add
daa
decb
cmc
push
jb
stc
mov
inc
mov
mov
xchg
fsubs
mov
lds
cmp
fidivs
call
inc
inc
scas
push
inc
aaa
fistpl
and
gs
xchg
rclb
push
ret
inc
shl
cmp
movsb
fwait
data16
cmpsb
pop
or
sarl
xchg
adc
mov
add
out
sub
loop
mov
fstpl
movsl
xor
mov
mov
in
dec
lds
sub
push
fdivl
mov
cmp
and
and
mov
xor
sbb
lock
sti
scas
iret
scas
xor
lock
jno
pop
jnp
adc
inc
inc
xor
outsl
int
ret
fdiv
dec
js
pop
sbb
adc
sahf
and
push
xchg
rorb
pushf
divl
rcrl
jmp
sbb
push
int
test
lcall
mov
add
mov
ja
pop
inc
mov
mov
mov
jecxz
ret
and
cmp
xchg
je
fnstcw
and
dec
push
add
loopne
push
leave
sub
fildll
cmp
lret
mov
inc
insb
rol
xor
lea
xorl
lea
movsb
es
push
aaa
dec
std
cwtl
popf
adc
add
js
ror
mov
int
jecxz
push
or
faddl
lahf
add
adc
and
inc
rol
lods
dec
out
jg
mov
les
or
jne
sub
push
pop
mov
les
imul
xchg
and
cmpsb
add
pop
sbb
pop
je
test
mov
lods
inc
mov
mov
push
jne
mov
mov
xchg
push
ret
cmp
js
aas
xor
or
mov
push
test
jle
lret
in
cmp
cmp
stos
or
jmp
cmpl
sbb
rcll
shlb
aaa
or
dec
test
sbb
push
dec
dec
hlt
xchg
cs
mov
in
inc
pop
sbb
jecxz
xor
push
jbe
cmpsl
or
sub
pop
add
lods
mov
mov
imul
push
stos
in
or
or
test
mov
in
sub
rcrb
in
sbb
int3
cld
add
pop
call
orb
insl
adc
jbe
enter
out
leave
dec
dec
sbb
mov
test
cmp
sub
sbb
or
clc
and
xor
add
adc
fs
cwtl
inc
mov
push
xchg
cmp
sub
sbb
or
clc
and
xor
add
adc
fs
cwtl
inc
mov
push
xchg
cmp
sub
sbb
or
clc
and
xor
add
adc
fs
push
js
push
pop
test
cmp
sub
cwtl
les
sahf
jb
enter
and
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
inc
insl
movsl
subb
xor
sbb
popf
add
push
fldl
jb
bound
mov
mov
insl
bnd
fstl
popf
and
cmp
std
xlat
add
mov
inc
sbb
cli
int
popa
lret
insl
fcoml
add
mov
xchg
cmp
test
out
jle
mov
lock
scas
cwtl
iret
test
int3
cmp
sbb
adc
shll
mov
push
pop
push
xor
dec
subl
xchg
subl
int
bound
xor
inc
push
mov
jb
push
gs
push
mov
mov
sbb
mov
push
fistpll
mov
std
daa
mov
fiadds
dec
inc
int
push
cmc
mov
inc
mov
push
sbb
cwtl
rclb
push
jne
gs
int
cmp
fnstsw
ds
sbb
test
rcrb
ret
lds
xchg
pinsrw
push
jle
mov
jg
imul
cmpsb
sub
in
push
faddl
inc
fmull
cmp
mov
ret
push
testb
pushf
push
mov
push
roll
add
or
lds
jl
or
jge
lea
popf
add
push
fldl
jb
bound
mov
mov
insl
bnd
lea
popf
add
push
fldl
jb
bound
adc
add
loope
lods
sbb
mov
pop
xor
and
pop
fildll
int3
inc
mov
adc
jle
push
xchg
pop
cmc
push
xor
mov
aad
jns
inc
inc
dec
call
outsb
or
shll
lods
stc
sbb
fists
insl
mov
and
loope
jno
jne
xor
popf
pop
or
stos
lahf
dec
test
jb
ja
imul
stos
pop
das
mov
push
fs
rolb
xor
inc
bound
cmc
mov
in
and
mov
push
push
jl
inc
das
sub
loop
sbb
idivl
pop
push
fwait
ljmp
push
pop
or
loop
jnp
jb
cmp
roll
inc
cmp
in
inc
sbb
fisttpl
add
bound
jl
test
xor
jl
xchg
aam
jmp
dec
aad
inc
mov
in
ds
insl
xor
addr16
xchg
inc
mov
imul
inc
jne
sbb
cmp
push
dec
mov
data16
fsubr
jne
mov
nop
or
rol
add
imul
sbb
mov
test
push
xlat
ret
adc
movsb
imul
push
sbb
add
xchg
stc
aam
in
lret
std
out
pop
xchg
jns
das
imul
sbb
sbb
mov
idivb
xor
push
sbb
out
lock
leave
xchg
imul
call
repnz
test
adc
xor
addr16
test
mov
lahf
ret
mov
mov
enter
cs
dec
jbe
lods
mov
pop
cmp
popa
pop
or
fnstsw
lock
add
pop
arpl
movsb
fsts
xor
mov
cwtl
lds
cvtpi2ps
scas
pop
fsub
test
push
imul
gs
mov
lods
pusha
mov
pop
inc
iret
and
out
xchg
jge
inc
push
mov
and
fcoms
movsl
mov
call
ljmp
sbb
lea
into
jbe
sar
leave
add
fwait
jle
mov
mov
dec
inc
das
ljmp
data16
jmp
xor
xchg
xchg
ret
andb
rol
mov
leave
and
sbb
sbb
in
push
cmpsb
pop
test
sbbb
daa
std
outsb
faddl
sbb
sbb
dec
add
insl
imul
adc
xor
mov
jp
mull
cmp
adcl
rdmsr
ss
dec
jl
pop
cmpsb
subb
cmpxchg
mov
loop,pn
and
mov
testl
xlat
sbb
movsl
add
pop
cmpsb
push
inc
loop
add
pop
xor
stos
arpl
push
mov
std
arpl
pop
or
ljmp
test
stos
push
pop
insb
repz
or
sub
xor
mov
xchg
outsb
push
lcall
or
jl
insl
dec
jno
icebp
mov
shlb
lret
mov
add
mov
jnp
lret
jge
cli
outsl
sbb
aaa
decl
arpl
lea
sub
xor
outsb
mov
mov
or
and
ljmp
push
ja
scas
pop
mov
popf
mov
rolb
pop
popa
orb
std
ljmp
pop
test
rol
into
adc
int
into
xchg
or
cmp
and
inc
sbb
sbb
pop
fsubs
xchg
xchg
in
sbb
lods
cmp
mov
ljmp
dec
scas
dec
sbb
fcoml
sbbl
pop
cmp
decl
imul
add
in
add
add
imulb
out
test
cmp
xor
sub
in
mov
cmpl
data16
fsubrs
xor
mov
sub
sbb
lret
orb
es
cli
gs
or
adc
divl
std
or
addb
add
insb
test
pop
push
mov
arpl
push
jecxz
in
lret
popf
mov
out
lret
sti
pop
sbb
push
add
lds
mov
push
cmp
pop
sbbl
and
jg
sub
pop
das
adc
pop
mov
icebp
ss
and
push
adc
mov
sub
sbb
rorb
iret
in
jno
daa
je
dec
mov
mov
dec
fcomps
mov
cmp
outsb
add
jecxz
dec
and
jmp
test
add
pop
jp
ljmp
xor
dec
inc
test
pop
call
cwtl
sub
sub
icebp
inc
xor
nop
fiadds
adc
jnp
jecxz
imul
mov
ret
js
imul
shrb
dec
das
xchg
and
mov
fbld
movsb
add
push
dec
or
test
mov
fwait
and
cmp
js
in
push
xchg
xchg
pop
int
cmpsb
dec
push
sar
js
test
je
pavgb
jne
xchg
push
dec
xor
mov
stc
xchg
out
loop
xorb
cmc
sahf
jg
cmp
jmp
jl
push
repz
mov
mov
cwtl
push
adc
push
popf
jmp
mov
pop
pop
hlt
fdivrl
adc
icebp
fs
cltd
or
sub
push
pop
pop
push
popf
mov
cmpsb
mov
push
pop
jge
repnz
jl
mov
lcall
addr16
adc
fisubrs
arpl
push
inc
arpl
push
inc
jle
std
mov
jp
or
inc
shl
enter
sahf
into
cmp
mov
lahf
popf
mov
pop
shl
pop
xchg
sub
add
es
lock
mov
int
cmpb
cvtdq2ps
jecxz
stc
call
or
mov
cmc
and
lahf
mov
fadds
clc
fadd
mov
push
mov
pop
sbb
rorl
clc
xchg
orb
fisttps
xchg
cld
shlb
mov
mov
dec
sub
outsb
test
push
push
repnz
xchg
lret
test
mov
dec
sub
arpl
push
leave
addr16
inc
xchg
pop
inc
jge
jmp
inc
and
sub
add
lods
lcall
adc
and
sub
in
mov
push
imul
xchg
lahf
popf
incl
jne
sarl
push
inc
add
rcrb
stos
pop
fldcw
jne
test
sub
adc
mov
fnstcw
push
mov
cwtl
add
mov
cli
sub
and
mov
pop
aad
outsl
lods
xchg
repnz
mov
mov
mov
cmpsb
xchg
je
mov
test
push
cmpsb
sub
xlat
jg
sub
mov
lods
mov
repz
fsubrs
mov
test
dec
mov
xchg
cmpsl
fs
sbb
xchg
push
test
inc
psubsb
push
fndisi(8087
cli
aad
ret
out
adc
insb
pop
jecxz
out
scas
and
mov
test
shl
push
daa
or
fimull
cmpsl
mov
cmp
mov
mov
cmp
or
cld
jmp
test
mov
data16
movl
add
test
inc
insb
jle
adc
inc
pop
jns
sarl
popa
inc
pop
cli
mov
outsb
ja
dec
lahf
xchg
inc
cs
aas
icebp
leave
lods
push
lds
mov
jb
out
sti
inc
fucomip
pop
roll
jge
jp
iret
mov
mov
mov
mov
stos
cwtl
je
xor
adc
cmp
push
mov
xchg
hlt
je
jmp
int3
repz
xchg
in
add
sub
shl
mov
lret
push
inc
addr16
rorl
inc
das
std
movsl
xchg
adc
mov
arpl
out
jle
fistpll
nop
sub
test
mov
or
or
rcrl
aad
add
sbbb
cmpsb
sub
les
test
cwtl
xchg
popa
push
xchg
xchg
pop
int
in
iret
add
ljmp
dec
dec
push
lods
and
add
jne
xchg
sarb
fldl
addr16
mov
xchg
jmp
repz
xchg
xor
out
pop
sbb
into
stos
jl
addr16
dec
movsb
arpl
ret
sub
aaa
addl
adc
or
add
xchg
and
cmpsb
inc
ficompl
dec
aam
add
cli
jbe
dec
ret
sub
popl
dec
loope
push
push
add
jl
andb
cltd
jl
dec
xor
rcrb
cs
jg
popa
int
sub
mov
jle
push
cwtl
jnp
pop
or
jg
es
popa
js
out
mov
or
and
es
xor
adc
test
fisubrl
cmp
std
dec
outsb
hlt
push
sahf
or
xlat
ss
call
inc
and
pop
shll
mov
mov
loopne
sub
mov
ret
cmp
push
lods
testl
sub
testb
sahf
enter
popf
adc
pop
mov
xchg
mov
sbb
sbb
jle
add
ret
addr16
add
sub
mov
in
imul
int
jbe
nop
pop
mov
jge
loop
xchg
ret
clc
mov
sub
ljmp
pop
popl
popa
dec
and
and
or
mov
or
mov
ljmp
dec
test
add
dec
mov
int
cltd
orb
xlat
in
cltd
sub
and
xor
ss
idiv
adcl
mov
addr16
adcl
jb
push
subl
mov
pop
push
mov
jno,pt
xchg
daa
cli
xrelease
jb
stc
fdivrl
enter
inc
testb
int3
dec
add
iret
out
repnz
xor
adc
xor
sub
mov
dec
andl
add
loope
loope
fdivrl
andl
xchg
aam
movsl
out
xchg
addr16
in
aas
into
xor
leave
xchg
popf
mov
inc
imul
jle
stc
push
sub
rorl
jae
cmp
jg
les
mov
hlt
dec
pop
popa
jne
out
mov
stos
aad
or
mov
insb
imul
pop
fwait
adc
enter
stc
ret
in
imul
jp
and
jmp
out
jne
mov
adc
nop/reserved
popa
pusha
int
adc
mul
jb
popf
loop
stos
cmp
dec
jmp
sbb
cmc
or
mov
or
push
mov
fsubrl
jg
pop
enter
or
pop
stos
cmpsl
or
adc
push
enter
pusha
push
add
and
out
insl
mov
lcall
mov
stos
xchg
loopne
packuswb
mov
cmp
cbtw
and
lret
xchg
push
sbb
int3
pop
loope
push
jnp
xchg
sbb
into
in
push
scas
mov
mov
imul
js
mov
jo
test
shrb
inc
call
enter
fsubrs
mov
adc
jle
test
sub
sbb
pop
lcall
add
xlat
ret
es
hlt
lea
xchg
and
gs
pop
mov
out
sub
cmp
push
loope
jge
sbb
jp
test
ret
out
rcrl
psllw
xor
mov
and
fists
repnz
pusha
add
les
and
jp
sbb
dec
mov
sbb
xor
test
in
mov
dec
sub
fsubr
or
xchg
test
lods
movsl
xorl
sahf
sub
cs
jns
loope
cmp
mov
push
or
ss
iret
cmc
mov
pop
pop
cmp
cltd
inc
ret
mov
pop
jmp
imul
sbb
push
pop
mov
xlat
jl
or
jo
push
pop
adc
xchg
imul
test
ljmp
lds
jae
fst
repz
or
rcr
push
pop
cltd
fs
or
mov
es
sub
insl
daa
xchg
or
test
scas
dec
mov
xchg
sti
mov
jbe
mov
sbb
out
cmp
inc
ljmp
sbbb
gs
or
jae
sti
xchg
xor
push
sti
pushf
jle
sbb
sub
das
inc
mov
mov
pushf
and
or
cmp
movsb
pop
jecxz
add
mov
fldcw
bound
sub
inc
ds
mov
cmp
aad
sub
pop
sub
jmp
faddl
xor
ret
jg,pt
mov
or
aam
aam
gs
push
stos
call
pop
je
repz
mov
dec
dec
sahf
cwtl
lret
mov
push
iret
ja
mov
xor
incl
iret
sbb
jno
jno
mov
loop
jb
inc
nop
idivb
push
stc
sbb
arpl
sar
push
mov
mov
cmp
xlat
shll
cmp
dec
or
andl
mov
sbb
jae
mov
mov
push
test
and
lds
mov
push
std
addl
mov
inc
je
and
jmp
cmovne
movsl
scas
jns
lock
out
inc
adc
inc
loop
pop
mov
mov
fs
out
add
cmp
clc
ljmp
pop
push
sub
sbb
sub
or
inc
inc
mov
aaa
pop
insb
mov
inc
mov
xchg
sub
pop
enter
jle
je
sahf
jae
test
or
mov
mov
add
mov
icebp
popa
add
mov
mov
or
divl
jbe
stos
fistl
inc
enter
mov
inc
mov
xchg
arpl
pop
xor
scas
call
fistpll
subb
loop
jno
cmc
sbb
addr16
pushf
jecxz
xchg
jae
pushl
fbstp
loope
insb
adc
repz
sub
in
cmp
test
pop
mov
dec
mov
push
fmull
inc
sbb
adc
xchg
sub
cltd
dec
and
lret
pop
push
xor
jnp
sbb
mov
fldcw
jmp
lods
dec
dec
les
jmp
shlb
sub
sbb
mov
inc
mov
fidivrs
cltd
sbb
push
jae
jns
add
in
sub
lea
call
fidivrs
mov
sub
mov
int
lds
std
in
fildll
jp
cmp
and
jne
cltd
xor
orb
lea
or
movsb
cmp
les
pushf
and
into
xor
nop
cmp
push
or
call
jmp
bt
int3
or
cmp
scas
insl
or
jno,pn
push
lahf
sub
sbb
xchg
add
cmc
jmp
xor
andb
das
pop
or
pop
pop
add
push
mov
rcr
or
pop
aaa
insl
in
in
add
rcrb
xor
jmp
sahf
and
adc
test
push
int3
add
xchg
negb
push
shl
mov
mov
and
stos
push
cmpb
call
ret
xor
mov
push
xchg
jne
enter
jg
ss
push
fwait
xor
js
aaa
xchg
sahf
icebp
daa
mov
push
push
xchg
cmp
hlt
ret
adc
mov
popf
or
pop
add
sub
push
jg
ret
test
subb
sbb
mov
mov
mov
lcall
xor
mov
lock
xchg
cmp
or
dec
ss
loopne
or
repz
cmp
dec
mov
and
cltd
arpl
loop
clc
inc
sub
out
xchg
push
xchg
mov
pop
sti
enter
add
adc
jge
fmulp
adc
pop
adc
rcl
sub
sub
jae
test
push
pop
mov
push
xchg
stos
mov
mov
mov
loopne
dec
push
cmpsl
jge
ds
sbb
out
adc
ja
stos
lock
imul
and
repz
testb
ficoms
test
adc
int
jge
jg
mov
sub
rcrb
or
filds
push
popf
int3
addr16
add
lock
aam
mov
mov
pop
mov
enter
ljmp
mov
push
push
jecxz
or
adc
stc
jbe
pushf
xor
insl
fldt
sub
and
xchg
inc
outsb
pop
mov
mov
dec
lcall
jns
mov
sbb
adc
out
aad
and
mov
xchg
dec
jnp
fwait
and
adc
or
ficoms
mov
fistpll
lea
xchg
nop
out
mov
outsl
cmp
cs
iret
mov
int3
inc
fbld
xchg
test
jmp
inc
mov
and
mov
rcrb
gs
cmpsb
ja
das
fmuls
cmp
inc
fnsave
or
jle
inc
lret
inc
mov
push
inc
xchg
out
xchg
cmpsl
or
out
mov
inc
jns
mov
pusha
cwtl
bound
pop
lahf
inc
pop
clc
popa
jmp
jle
rclb
or
push
rcrl
cli
sbb
push
cmpsl
ret
sbb
jns
sub
roll
fisttpl
inc
imul
imul
inc
je
fstl
cmp
inc
cmp
push
into
les
testb
inc
loope
pusha
mov
out
sub
push
jl
push
jmp
testl
lea
mov
cmp
add
outsb
and
fwait
sbb
dec
les
xchg
xchg
adc
or
push
loopne
cmp
jnp
js
mov
jbe
dec
dec
js
xor
aaa
or
fnsave
rolb
sub
inc
mov
cli
call
lea
sbb
pop
add
inc
addb
jb
jns
mov
test
xor
ljmp
orl
mov
push
adc
dec
lahf
push
xor
sub
insb
incl
push
jns
push
in
pop
lds
pop
lods
pop
and
repz
aad
or
xchg
sbb
in
pop
shrl
nop
mov
mov
mov
xor
and
xor
adcb
dec
pop
int
fiadds
sub
mov
jg
push
popf
ss
popa
jns
ljmp
inc
or
adc
jg
or
jo
lret
repz
aaa
pop
sbb
add
xor
scas
mov
lods
lahf
mov
imul
fimull
sub
hlt
stos
and
js
dec
fiadds
mov
mov
dec
sub
nop
sti
mov
fidivrl
mov
add
mov
imul
addr16
arpl
cmp
sub
adc
call
jbe
roll
inc
inc
cmp
icebp
ret
or
in
mov
pop
sub
jne
outsb
outsb
decb
pop
add
mov
mov
mov
xchg
in
cmp
xor
out
cmp
cs
mov
test
xchg
sarl
shlb
ret
push
out
inc
data16
pop
mov
cltd
pop
xchg
shll
sub
ret
or
mov
jns
inc
jp
cltd
into
and
push
cmpsl
mov
add
pop
loope
lcall
mov
fnstsw
jno
stos
xlat
jb
in
inc
imul
es
sub
jmp
inc
add
call
mov
es
mov
push
test
mov
and
jb
jg
in
fnsave
push
mov
ss
inc
jns
add
jns
subb
fwait
mov
bts
xchg
push
ficoms
das
subb
mov
into
add
pop
sub
clc
test
imul
xchg
or
jl
push
js
push
mov
movsb
add
insl
sub
jle
cmp
push
xchg
pop
add
push
clc
cmp
and
lret
fsubs
mov
or
loop
mov
dec
stos
push
dec
mov
insl
imull
lcall
push
ss
repz
mov
hlt
jmp
cmp
xchg
mov
cmp
push
dec
pop
cmp
pop
mov
and
dec
out
xor
mov
imulb
xchg
imul
fiaddl
out
fs
and
mov
cmp
ja
xor
or
and
imul
add
mov
push
andb
mov
insl
bnd
lea
popf
add
push
fldl
jb
bound
mov
mov
insl
bnd
lea
popf
add
push
fldl
jb
bound
lret
dec
rcrb
insl
bnd
mov
popf
add
les
push
int
adc
mov
mov
insl
jb
loop
in
bound
mov
lea
popf
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
out
lods
push
popf
lea
mov
mov
aam
icebp
sub
sbb
dec
mov
inc
lods
push
lods
lea
add
int
aaa
leave
sub
cmc
jge
insb
xchg
pop
movsl
dec
mov
pop
mov
test
insl
in
hlt
or
cmp
pushf
jns
push
lret
xlat
and
int
lods
and
cmc
int
aam
xor
pop
aad
aam
loope
or
push
push
pop
inc
int3
mov
insb
popf
and
sub
cmp
sub
mov
or
in
lret
mov
rorb
lods
ds
dec
sub
push
aad
aas
dec
repnz
movsl
mov
insl
sbb
fadds
int
or
push
js
mov
movsb
movsl
pop
rclb
lcall
int
fstpl
cmp
sub
sbb
insb
test
divb
and
popf
add
inc
data16
and
gs
mov
mov
cmpsl
dec
mov
push
lods
inc
popf
jl
jne
add
aam
and
xor
in
gs
jne
pop
mov
enter
jmp
je
dec
mov
aad
loope
nop
adc
or
mov
push
sbb
push
mov
aas
mov
mov
cmpb
cmc
push
xchg
sub
inc
lahf
push
clc
add
adc
cmp
in
cmc
jge
insl
xchg
pop
movsl
dec
mov
inc
lods
push
popf
lea
add
int
cmp
in
cmc
jge
insl
xchg
pop
movsl
dec
mov
inc
outsb
inc
rorb
xchg
sub
pop
pop
sub
std
cmp
push
call
leave
pop
lods
add
sub
clc
push
js
jp
sbb
jp
notb
push
popw
popa
sub
xor
sub
dec
and
scas
loope
enter
pop
shll
std
sub
add
cmpsl
lds
iret
arpl
add
stos
sbb
xchg
cmp
dec
sub
gs
ljmp
pop
mov
in
sub
rcrl
mov
jmp
jbe
sub
adc
ja
in
jb
mov
stos
pop
inc
orb
adc
fucomp
shll
xor
mov
dec
stos
mov
xchg
es
jno
popa
ja
fiadds
lods
enter
or
jno
and
popa
hlt
xor
je
push
lcall
sti
repz
mov
xchg
dec
mov
or
mov
jno
push
ror
out
lds
adc
mov
add
jecxz
shl
int
adc
add
jnp
fs
sub
jmp
loope
inc
inc
jae
and
push
aad
inc
mov
daa
icebp
imul
mov
xchg
lret
pop
add
push
insl
pop
sqrtps
mov
rolb
push
inc
cwtl
mov
outsl
fsubrl
enter
fxch
mov
orl
fucomip
stc
int
jle
je
shrl
dec
sar
and
lds
jecxz
notl
adc
xor
mov
jg
mov
aad
mov
cmp
lahf
call
mov
mov
daa
fldl
call
fisubs
push
sbb
push
adc
pop
mov
push
or
cmp
sub
fidivrl
dec
popl
push
ret
shl
out
xchg
das
or
cmc
popf
inc
xchg
sahf
add
andb
in
je
fcoml
xchg
adc
data16
or
mov
jg
pusha
std
scas
clc
and
push
inc
sub
aas
movb
repz
sbb
push
dec
movsl
dec
jle
dec
leave
std
test
shrl
sbb
aaa
mov
or
je
mov
mov
pushf
cmovbe
mov
and
shlb
pop
cmp
inc
mov
mov
je
out
add
stc
aad
xor
fwait
stos
lret
testb
outsl
push
ret
mov
pop
jnp
push
mov
imul
inc
jo
movsb
imul
pop
fsts
enter
repnz
push
daa
xor
incb
sbb
lahf
loope
aas
repnz
dec
or
mov
fmull
jle
sbb
adc
mov
fdivl
jnp
aam
add
xor
add
xor
pop
cmc
jbe
inc
sbb
xor
xchg
jp
cmp
in
movsl
cmp
pop
add
and
pop
pop
iret
pop
add
js
shll
xchg
mov
pop
out
call
jp
cld
insb
loopne
rdmsr
js
xchg
cmp
xchg
sub
sbbl
ja
faddl
jns
mov
cmp
imul
adc
mov
ret
insl
push
xchg
gs
sub
inc
pop
aaa
imul
sub
sub
out
xchg
mov
movd
cwtl
into
pop
leave
jmp
push
push
lahf
jne
inc
aad
sub
or
aas
cmp
pop
mov
insb
adc
xchg
push
pusha
push
lret
in
xor
lret
loopne
mov
inc
jne
add
dec
mov
fwait
mov
pop
aad
aaa
movsl
adc
adc
stc
xchg
outsb
jp
fs
jae
cmp
sub
and
imul
pop
in
mov
adc
mov
mov
cmp
sub
rorl
push
push
mov
jl
out
adc
sbb
hlt
fisubs
arpl
in
sub
sub
lcall
fldl
sbb
stos
cmpsl
sti
mov
mov
call
push
mov
pop
jb
aaa
dec
gs
enter
fisubrs
jge
mov
movsl
les
push
adc
loopne
lret
jbe
xor
fs
xchg
in
sub
cmp
stos
jle
or
icebp
data16
pop
popa
mov
xor
aas
negl
incl
in
mov
adc
sbb
push
ljmp
lock
test
int3
mov
or
xorb
add
xchg
mov
shr
inc
iret
test
rol
and
xor
lock
jb
imul
out
inc
fstps
or
add
mov
iret
shll
add
movsl
loopne
jb
cmpsb
mov
push
xor
dec
js
movsl
loopne
sbb
pop
or
add
test
ret
pop
jp
mov
in
je
push
jmp
dec
mov
sub
loop
xlat
lea
sub
stc
aam
pop
ffreep
cli
lcall
xor
sbb
imul
je
fs
aas
dec
inc
pop
daa
inc
or
adc
mov
xor
jle
push
daa
and
aam
sub
jae
adc
dec
ja
xor
out
pushf
add
mov
outsl
sahf
mov
add
sub
inc
neg
scas
js
dec
insb
sbb
dec
loop
mov
jge
in
faddl
and
xchg
add
cmp
xor
aam
mov
lods
push
sets
fidivrl
or
cmp
cli
lret
lods
jo
sub
adcb
jmp
jbe
jb
mov
pop
or
add
inc
adc
adc
out
sbb
daa
cmp
push
push
test
pop
sub
flds
nop
xchg
xchg
call
cli
into
jle
insl
negb
or
scas
mov
push
sbb
movsl
sub
cli
dec
mov
inc
aaa
inc
jg
xor
xor
outsb
mov
lahf
cli
in
or
add
adc
test
loope
inc
stos
iret
movsb
cmpsl
adcb
pop
aad
pushl
stc
jl
sub
push
mov
mov
or
adc
add
mov
pop
sbb
push
outsl
cmp
imul
pop
mov
movsb
jg
jne
sbb
mov
sti
mov
inc
insl
add
test
xchg
aam
test
push
out
xchg
fs
and
and
cmp
enter
int
adc
idivb
mov
and
pop
and
lret
insl
sti
mov
mov
adc
jmp
fcmovnbe
inc
cmc
in
popf
pop
and
test
pop
add
dec
xchg
sub
dec
movsb
and
cmc
xchg
andb
xchg
push
leave
enter
les
push
xchg
std
xor
mov
inc
mov
lock
hlt
push
mov
ss
or
ljmp
adc
stos
and
dec
jae
mov
test
pop
insl
inc
dec
das
and
in
imul
aam
and
pusha
mov
icebp
xchg
jge
mov
xor
xchg
add
ljmp
jnp
dec
fsts
jbe
dec
sub
mov
pop
es
scas
sti
pop
xchg
clc
imul
add
add
mov
rcll
shrl
or
ss
or
adc
in
xchg
popf
pushf
repnz
xchg
sbb
fdivrs
sbb
mov
repnz
jne
pop
mov
movsb
or
inc
mov
cmp
test
insb
fildl
in
mov
sub
movsb
mov
fdivrl
fidivrl
mov
sbb
pusha
sub
and
cwtl
adc
pop
push
repz
nop
dec
fildl
cmp
inc
lds
lea
inc
cmp
fsubrp
mov
sbb
aaa
bound
cmpsb
insl
adc
aam
cwtl
fiaddl
mov
sub
loope
sbb
xor
add
and
push
sub
fdivrl
xchg
xchg
jns
ja
and
pusha
cmp
sbb
ret
into
fs
sarl
or
scas
ret
jmp
push
fcoms
or
cmpb
mov
fs
fistpll
inc
addr16
fisubl
xchg
push
mov
popa
mov
push
adc
sbb
jp
add
dec
pop
enter
rcrl
jecxz
adc
dec
or
xor
in
sub
inc
add
cmp
xlat
mov
bound
xchg
dec
in
add
sbb
das
sbbl
stos
arpl
ss
adc
fistpll
jns
push
adc
pop
fnstcw
pop
cmp
mov
and
fcoml
xor
les
out
xor
pop
jecxz
jp
fwait
inc
and
mov
cmp
xchg
cmpsl
xchg
inc
sahf
add
xchg
hlt
mov
jb
cmp
fcmovu
jg
fucomip
in
jmp
ret
roll
pop
mov
sub
add
bound
mov
fnstcw
and
subl
call
sub
fptan
lds
std
shlb
xchg
sbb
and
pop
imul
jp
push
pop
xchg
test
stos
fbld
ret
pusha
das
ret
dec
cwtl
int
leave
push
int
xor
stos
sub
adc
sti
xchg
rcrl
adc
or
fidivs
lds
xchg
aas
data16
lea
jl
pop
cld
or
fnstenv
out
shl
scas
adc
push
xchg
fdivp
push
mov
mov
pop
fucomi
aam
jae
outsl
add
dec
sub
aas
scas
out
mov
mov
mov
negb
mov
loope
add
dec
out
xor
test
sarb
aam
cmc
in
add
pop
cmp
sbb
aas
mov
cwtl
cmp
adc
xlat
js
mulb
xchg
shlb
xchg
test
mov
push
int
mov
icebp
jg
in
dec
push
in
fldt
mov
adc
pop
rorb
adc
leave
jecxz
and
mov
xchg
lret
cmp
xor
iret
mov
jns
rcr
int3
jmp
fistpl
mov
fwait
mov
sub
ja
test
fists
lea
inc
pop
adcb
pop
add
data16
sbb
or
sbb
sub
pop
shll
repz
pop
jge
outsb
or
int
ds
es
add
pop
in
jo
pop
mov
push
aas
dec
add
add
call
fstl
dec
push
dec
mov
jne
or
mov
push
and
push
iret
pop
sahf
aad
movsl
shlb
shrl
pop
loopne
sbb
add
insb
adc
fadd
inc
jmp
pusha
jo
jmp
inc
pop
in
inc
mov
inc
fdivs
pop
xchg
pop
int
fucom
jmp
mov
xor
popa
in
test
inc
pop
lock
imul
jmp
addr16
push
lods
jbe
push
data16
sub
xor
mov
sub
cmpsb
push
and
lods
rclb
mov
or
in
test
popl
hlt
mulb
dec
lods
mov
xor
gs
push
mov
cld
cmp
aaa
out
and
push
or
outsl
pop
inc
or
sub
sub
sbbb
cmpsb
fcomps
rorb
adc
loopne
int3
stc
jns
mov
stc
test
cltd
cwtl
push
hlt
jno
stos
loope
cmp
push
xchg
inc
filds
jno
das
jp
mov
mov
cmpsl
or
and
ret
push
xchg
push
cli
xchg
and
repnz
andl
cmc
and
push
bound
ror
sub
or
mov
scas
xchg
pop
mov
sar
xlat
addr16
add
hlt
aas
and
jae
mov
adc
scas
insb
dec
bound
push
adc
int
pop
jg
loopne
movsb
pop
mov
inc
sub
les
sub
xor
roll
dec
in
iret
lock
hlt
or
in
movsb
ret
mov
push
shlb
addr16
cmpsl
pop
or
or
mov
out
sbb
cmp
aam
dec
pushf
mov
mov
jb
push
imul
ret
sbb
fcomp
jmp
xchg
fsubr
xchg
bound
popf
mov
ds
mov
xchg
loop
sub
cmp
pop
pop
jle
outsb
push
shll
adc
cwtl
jne
cld
jg
cmp
sub
cltd
inc
add
cwtl
mov
stos
jae
int3
addr16
outsl
daa
mov
in
dec
test
clc
push
adc
push
mov
leave
mov
leave
jns
in
les
test
cld
sbb
sub
aad
dec
icebp
cmp
outsl
pop
xchg
mov
push
fcompl
inc
and
insb
stos
xchg
cmpsb
aad
stos
xchg
and
or
push
arpl
in
and
or
call
lock
test
sub
adcb
dec
das
scas
adc
cmp
inc
cmp
and
ret
stc
mov
adc
cmp
xorl
bound
push
dec
push
les
push
faddl
xchg
and
dec
out
movb
imul
dec
rcrb
and
movsb
mov
movsb
insb
add
std
shr
cld
ljmp
imul
mov
rol
add
fmuls
push
xor
loopne
mov
pop
mov
into
mov
inc
mov
ja
out
mov
lret
mov
mov
bound
push
jno
fwait
inc
mov
jns
icebp
jns
xchg
orb
mov
jne
add
sub
sub
mov
cmp
cmp
mov
dec
movaps
jb
sahf
cmc
dec
aam
sbb
sbb
call
mov
sub
rolb
ret
push
pushf
or
pop
les
arpl
sti
lods
adc
loop
into
cmpsl
add
outsb
imul
rclb
adc
cld
es
leave
mov
xchg
pop
pop
out
mov
cwtl
sbb
lahf
mov
int3
jl
xchg
push
int
cmp
push
pop
mov
mov
inc
loop
adc
cmp
jbe
xor
inc
aad
push
pusha
push
jmp
or
mov
stos
fwait
push
jb
test
data16
sbb
adc
cmp
mov
add
sti
pop
and
sti
pop
inc
daa
mov
sbb
aas
push
shrl
lds
cs
ss
xor
pop
mov
xor
mov
add
mov
pop
adc
pop
cltd
jb
add
xor
test
in
dec
aaa
xlat
xor
push
imul
push
das
mov
dec
dec
sarl
les
cld
lahf
dec
dec
das
or
inc
repz
scas
and
jne
aam
fimuls
mov
mov
and
mov
nop
mov
xchg
es
jp
ja
jl
xchg
nop
into
add
adc
test
fisubl
mov
in
inc
or
cmc
push
jge
cmp
rolb
test
outsb
push
mov
ds
or
sub
into
or
out
mov
std
fistl
mov
lds
dec
cmp
ja
dec
dec
pop
adc
push
mov
xchg
fnsave
pop
cmpsl
push
mov
mov
xor
ficomps
loop
lea
lea
pop
ret
and
dec
mov
or
in
mov
jl
inc
push
xchg
mov
shlb
or
test
sbb
jbe
mov
gs
stos
data16
js
cmp
in
and
lds
sub
repz
aad
jnp
or
cmp
or
sbb
cmp
push
dec
imul
add
and
imul
out
pop
popf
ret
sub
adc
test
sar
enter
cs
mov
pop
and
or
cmc
sub
adc
lea
aad
movsl
pushf
ljmp
push
sahf
or
lods
pop
cld
inc
hlt
mov
and
ja
adcl
jne
les
fnsave
jmp
mov
imul
adc
jp,pt
or
roll
xor
xor
rol
inc
fdivs
int3
inc
pmaxsw
mov
out
mov
mov
std
mov
add
fidivrs
push
ja
lock
cld
mov
sbb
sahf
arpl
xor
lcall
jnp
imul
lret
mov
fimull
lcall
jne
loop
addr16
cmpsb
fsubs
jae
mov
xor
aam
out
orl
pop
pop
bound
jnp
sub
add
btr
test
ja
popa
iret
sbb
push
orb
xchg
mov
hlt
and
lods
jbe
test
inc
inc
sub
or
dec
inc
sahf
mov
arpl
mov
xchg
repz
mov
or
pop
fisubrl
out
xchg
cli
add
popf
sub
lahf
dec
out
decb
adc
divb
call
jo
dec
loop
push
push
push
popa
dec
inc
outsl
enter
sarl
sti
rolb
pop
std
movsl
sub
repnz
cmp
arpl
leave
lods
jl
cmc
or
icebp
mov
repnz
mov
sub
ret
mov
iret
jg
add
dec
pop
cwtl
es
or
pop
mov
mul
ss
mov
loop
xor
adc
pop
jnp
cmp
je
jb
in
jno
out
leave
jo
mov
xor
enter
lahf
pop
cmp
lods
inc
and
sar
dec
lods
sarl
xchg
add
fcmovnb
or
add
testl
xchg
ficoms
lods
mov
es
imul
hlt
xor
adc
cmpsb
cmpsb
jp
mov
inc
push
nop
sar
mov
add
jb
scas
xor
push
lds
sbb
sbb
xor
in
iret
lds
shll
enter
pop
and
mov
out
xor
xchg
std
xchg
push
push
in
nop
mov
out
mov
ret
mov
inc
push
cmp
mov
test
arpl
testb
aas
dec
jo
cli
mov
iret
jg
pop
xchg
daa
ds
mov
mov
andb
clc
cmpsb
enter
in
pop
inc
fs
stos
ror
pop
pop
sub
sbb
cmc
sub
imul
pop
lods
addb
mov
adc
bound
sbb
adc
and
add
outsl
ljmp
icebp
jo
mov
sub
out
shrl
test
pop
rcll
pop
lods
adc
fs
sub
iret
xor
add
adc
jne
fcomi
clc
aad
sub
cwtl
notb
push
xchg
lret
sbb
in
push
outsl
push
mov
pop
shrb
loope
xchg
adc
in
dec
cmpsl
icebp
nop
jmp
push
pop
loop
ja
je
aad
icebp
daa
fcoms
lahf
cltd
adc
mov
push
xchg
lods
adc
pop
pop
mov
dec
sbb
std
sahf
test
xchg
shrb
dec
xor
xlat
scas
fisubrs
cmovs
sti
cmpsb
or
mov
push
sub
jmp
xchg
call
and
mov
enter
test
pop
jne
mov
in
xchg
dec
dec
cld
mov
jl
popf
lret
inc
imul
push
push
cmc
pop
rcl
leave
popa
pop
repnz
push
scas
pop
mov
pop
jmp
lret
mov
mov
cmp
popf
mov
mov
out
ret
data16
lahf
aaa
and
cli
jbe
and
xchg
xor
fnstenv
xchg
std
das
ljmp
stos
cmp
xchg
dec
mov
daa
pop
icebp
pop
shll
jno
adc
insb
xchg
jecxz
mov
or
cwtl
ljmp
aad
sbb
mov
mov
mov
roll
xchg
cmp
sub
js
scas
add
mov
out
mov
lods
aam
iret
cmp
dec
inc
jno
popf
push
leave
fisttpll
mov
mov
inc
sbb
aas
add
push
mov
push
mov
popa
sub
inc
jle
sub
adc
cmc
inc
je
pusha
fcmovu
add
mov
int
mov
sbb
or
sub
in
jp,pt
call
add
pop
push
movsl
ss
pop
pop
push
stc
sbb
mov
and
cmpsb
sbb
xor
inc
imul
icebp
inc
jge
mov
sub
popa
hlt
rolb
inc
shll
mov
push
inc
vmwrite
rcl
in
in
sbb
pop
ja
repz
data16
add
add
ss
mov
xchg
subl
divb
sbb
push
sub
cli
loop
js
repz
pcmpgtw
adc
cmp
in
cmc
jge
insl
xchg
pop
movsl
dec
mov
inc
lods
push
popf
lea
add
int
cmp
in
cmc
jge
insl
xchg
pop
movsl
dec
mov
inc
lods
push
popf
lea
add
int
cmp
in
icebp
jge
imul
stos
popa
lea
add
dec
cmc
ret
jg
in
orb
in
mov
mov
mov
inc
lock
ror
ja
cmpsl
adc
pusha
out
out
arpl
aaa
addl
ja
xchg
xchg
and
adc
popa
out
testl
xchg
out
sbbl
ja
jecxz
mov
iret
je
outsl
lods
aaa
movsl
cmp
imul
pop
in
dec
push
push
mov
mov
dec
cmp
clc
xlat
adc
scas
repz
mov
mov
sti
mov
imul
cli
dec
jno
jecxz
and
dec
adc
popa
mov
out
or
stc
mov
and
mov
inc
add
xor
xlat
mov
fstpt
mov
test
xlat
mov
fnstenv
xchg
xchg
fisubs
xlat
dec
test
popa
xlat
and
jno
pop
pop
outsb
stos
mov
cmp
cmpsl
into
adc
cmpsl
out
repnz
cmp
mov
es
leave
mov
pop
inc
dec
mov
xchg
and
dec
pusha
test
out
hlt
mov
daa
xchg
aaa
andl
xor
add
push
testl
push
rorb
sub
ja
xchg
cmp
inc
shlb
add
xchg
and
fnsave
push
fsts
cs
movsb
xchg
xchg
out
loopne
lds
jbe
push
mov
xor
adc
inc
hlt
fs
adc
push
loope
shll
xchg
xchg
and
jno
popa
out
testl
xchg
aaa
addl
ja
xchg
xchg
and
jno
popa
out
testl
testl
xchg
and
les
pop
adc
or
ljmp
mov
arpl
stos
mov
das
push
mov
popa
mov
daa
ljmp
out
out
mov
add
cmc
mov
sub
add
adc
cmp
mov
pop
lahf
xchg
and
std
cwtl
jecxz
hlt
movsbl
push
mov
jns
test
xchg
test
cs
add
pop
idivl
inc
sub
cmp
pop
xchg
scas
movsb
lds
pop
jb
pmullw
mov
xchg
fnstenv
gs
or
adc
jb
cmp
mov
dec
out
sub
out
fsubp
leave
jmp
shlb
mov
data16
addr16
fadds
pop
xor
add
jae
jg
mov
pop
mov
cs
and
sub
xchg
pop
rorl
outsw
jmp
test
mov
stos
cmp
cmpl
sbb
fistl
mov
xchg
sahf
cmp
fisubl
xchg
sub
jp
jnp
push
inc
rcl
jecxz
jae
or
jbe
push
mov
sbb
cltd
dec
mov
jmp
stc
sub
cmpsl
mov
sti
add
in
jnp
fstpt
je
mov
sahf
stos
aaa
sbb
iret
or
into
adcb
mov
xor
add
je
popa
les
cmc
sbb
test
clc
call
xor
jg
mov
repz
fdivs
mov
jl
into
xor
loopne
movsl
jno
jno
fwait
xchg
mov
int3
adc
push
push
pushf
stc
mov
adc
cmp
orl
mov
cwtl
inc
inc
xlat
xlat
jg
push
mov
push
xchg
aam
sbb
das
push
std
xchg
dec
dec
mov
pop
ficomps
pop
test
mov
cmpsl
dec
mov
cmc
sub
or
fistl
lds
je
jle
mov
out
jge
cmp
mov
dec
arpl
mov
jg
nop
mov
jnp
bound
popf
sub
in
outsb
ret
mov
fistl
jo
push
dec
push
xor
andl
ja
aam
call
enter
loopne
push
mov
leave
fnstsw
fisttpl
cmp
add
xchg
dec
sbb
jp
push
mov
xchg
aad
ja
sarl
fwait
sbb
stc
data16
mov
bound
jno
jge
lret
sub
inc
fsubrs
cmpl
lds
add
outsl
add
cmp
subb
popf
das
xchg
xchg
push
push
popa
mov
add
call
push
dec
ror
adc
test
pop
insb
sahf
adc
sub
int3
sub
push
jae
mov
adc
jp
or
cmc
scas
adc
addr16
es
push
dec
jns
lods
sub
in
fsub
mov
adc
sahf
enter
pmulhuw
into
shl
sarb
jnp
stc
sbb
mov
sub
into
mov
pop
cwtl
ljmp
or
arpl
mov
lahf
cmp
shll
pushf
rolb
jl
or
sahf
xchg
xchg
repnz
inc
movb
int
hlt
popf
pop
xor
cmp
adc
jl
cs
pop
jmp
and
xchg
jae
push
mov
add
dec
cmp
sub
cli
stos
or
subl
mov
ds
xor
push
jae
mov
sub
nop
inc
pop
test
in
sub
mov
pop
sbb
mov
pop
fwait
or
dec
push
dec
cmp
sar
test
mov
lock
dec
mull
mov
sub
fs
stos
popa
xchg
xchg
insl
jecxz
mov
push
orb
mov
lea
repnz
xorl
add
pop
lahf
jns
mov
push
adc
push
sub
je
imul
iret
mov
push
pop
gs
mov
scas
cli
jecxz
push
jb
mov
dec
cmc
popf
add
jg
add
sbb
in
das
sahf
dec
movsl
loop
shll
pop
xor
sbb
testb
jne
mov
pusha
out
mov
pop
shlb
and
pop
repz
fucomp
enter
stos
mov
dec
jmp
scas
popf
xor
outsb
xlat
pop
pop
pop
cwtl
fs
pushf
or
sub
cli
movsl
jge
pop
mov
js
aam
lds
mov
sbb
xchg
in
sti
cmp
xlat
lcall
inc
mov
mov
dec
lods
push
ja
js
mov
pop
adc
ds
push
ds
jns
es
inc
cmpsb
test
out
add
leave
cmp
insl
aas
add
sub
sub
sbb
jmp
fdivl
push
mov
xchg
lea
sbb
lret
adc
push
xchg
add
rcl
xor
jno
scas
dec
mov
xor
leave
test
popf
push
aad
pushf
sahf
adc
hlt
ds
mov
fidivs
mov
es
leave
inc
fistl
add
add
mov
mov
loopne
hlt
sbb
cmp
aaa
dec
sbb
mov
cli
pop
faddl
adc
push
push
outsl
dec
pop
std
mov
mov
push
lahf
int3
imul
lock
pusha
xchg
xorl
shrl
dec
js
push
push
jb
shlb
cltd
testl
xor
out
andl
lods
orb
inc
inc
or
xchg
imul
xor
addr16
sub
icebp
outsb
imul
arpl
dec
push
ljmp
subl
popa
aas
sbb
xchg
add
lods
mov
lret
cli
xor
dec
cwtl
out
sbb
sahf
aas
or
xor
pop
mov
in
lods
mov
inc
pop
out
ficomps
xor
sub
enter
insb
mov
or
xchg
movsl
ljmp
inc
fsubp
mov
dec
mov
and
jp
int
repz
ljmp
enter
pop
into
jl
test
in
pushf
std
xchg
fistpl
js
mov
mov
cli
stos
jns
movsl
ret
ret
and
arpl
push
xor
xchg
xchg
jno
insb
fisubrs
pushf
addr16
mov
leave
sbb
clc
sbb
xchg
and
in
in
test
jg
adc
sub
out
cmp
jmp
fs
inc
stos
xor
pop
movsl
push
icebp
xor
jb
rcrl
les
jbe
mov
ret
pop
cmp
jge,pn
enter
xor
aam
fldt
push
dec
xchg
jmp
insl
jno
push
dec
repz
fildll
lret
jl
cltd
cltd
push
and
and
pop
dec
add
std
cmp
mov
into
and
xor
mov
sub
stc
ret
add
xchg
movsb
or
inc
sub
enter
imul
mov
adc
mov
jmp
or
imul
or
and
push
cmp
pop
inc
sbb
bound
ficompl
push
cmp
jo
outsb
imul
incl
stos
sub
add
popa
cmp
ret
in
loopne
fildl
popf
orb
sahf
and
push
dec
addl
push
jns
in
push
mov
mov
xor
scas
movsb
mov
fs
sarb
cs
and
ja
inc
in
fistps
xchg
out
syscall
loope
int
shlb
jne
aad
push
jl
inc
cmp
xor
lcall
fnstenv
xor
adc
push
add
repz
cmp
mov
cmpsl
aam
inc
imul
adc
mov
rcr
xchg
movsb
mov
inc
or
movsb
jbe
xchg
mov
cltd
fwait
loopne
pop
push
test
dec
or
cmp
mov
pop
popf
inc
add
mov
push
push
push
mov
loop
and
add
and
xchg
sub
dec
outsl
push
xchg
in
in
xchg
cmp
and
mov
movsb
lret
scas
pop
sarl
nop
gs
insb
out
lret
xchg
into
jecxz
mov
cmp
iret
mov
add
mov
jo
je
pop
add
por
xlat
movsl
pop
and
or
outsl
xor
push
cmp
es
clc
adc
lcall
jge
in
dec
or
push
mov
lock
mov
loope
pop
ljmp
nop
cmc
hlt
sub
xor
pop
add
sahf
mov
pop
jo
jns
add
sarb
push
out
cmp
xchg
and
test
and
pop
outsb
and
push
mov
dec
fwait
mov
sbb
pusha
pop
out
pushl
jp
mov
rclb
mov
inc
shrl
stc
clc
jg
lret
ds
fsub
std
mov
xor
sahf
aas
fisubs
jb
mov
loop
sbb
dec
mov
sti
sub
pop
mov
sti
push
fs
add
mov
jns
mov
xchg
sub
lret
mov
mov
mov
test
imul
lods
lods
or
jl
jo
cli
outsb
or
sbb
add
and
pop
incl
adc
jmp
sbb
dec
pop
xor
push
jge
mov
addr16
out
sub
xchg
jg
xor
xchg
sub
test
data16
xchg
lods
cmc
js
fadds
js
mov
mov
cmp
imul
shrb
fdivrs
inc
popa
ret
in
sahf
movsb
or
sbb
lods
aas
xchg
lock
test
jno
pushw
sahf
orb
out
fmul
movsb
and
pop
adc
arpl
mov
push
cli
rclb
xchg
icebp
mov
jecxz
jmp
call
ljmp
cltd
arpl
popa
test
divl
sub
dec
rcrl
cmp
inc
push
jbe
jne
arpl
shll
mov
or
mov
or
pop
rcr
or
xor
add
leave
mov
jo
push
add
lods
pop
inc
add
xchg
mov
mov
sbb
sbb
fbstp
dec
insb
aam
sti
les
ss
pop
or
js
inc
mov
xor
or
iret
inc
fbstp
mull
in
subb
data16
scas
dec
jnp
xchg
cmc
inc
mov
or
xor
js
cmp
adc
cmpsl
push
outsb
push
popl
stos
xor
push
xorl
paddsw
dec
adcb
mov
sbb
insb
pop
arpl
stos
dec
xorb
movsb
jns
jne
jmp
mov
pop
int
sub
adc
jbe
pushl
fmuls
shr
stos
movb
imul
sub
mov
mov
lahf
fiaddl
enter
lods
xchg
or
out
and
stos
arpl
xor
out
mov
dec
jns
mov
lcall
in
lret
xchg
out
lods
mov
mov
and
out
sbb
fists
mov
mov
mov
and
push
mov
xchg
or
xor
cmp
in
sub
stc
sbb
aad
subl
shrb
xor
test
jg
ss
dec
insl
cmp
jmp
xchg
cmp
add
mov
dec
and
fsubs
pop
xchg
scas
sahf
loope
xchg
hlt
aad
xor
xor
in
dec
cld
inc
xchg
divb
adc
cld
jecxz
pop
or
pop
fs
fisubs
je
inc
pop
bound
pop
mov
cli
pop
incl
insl
addr16
mov
cmp
push
xchg
adcb
or
es
adc
mov
jb
clc
insb
mov
aam
xor
insb
daa
or
popf
pop
aad
jnp
add
dec
sti
movsb
push
or
repz
pop
fisubrl
add
cmp
mov
xchg
bound
jnp
and
ret
cwtl
lods
stos
nop
dec
fnstcw
mov
push
hlt
lcall
pushf
int3
cmp
push
mov
fsubrp
sbb
jp
add
push
sti
cmp
dec
jno
jmp
jle
ret
xorb
scas
xchg
xchg
or
sbb
aam
pop
sub
in
je
pop
pop
int
adc
mov
shlb
shl
jp,pt
xor
inc
out
test
daa
adc
into
dec
movsb
subl
lret
mov
movsb
scas
loopne
decb
and
leave
pop
imulb
sub
and
dec
test
test
fmul
add
or
mov
fs
sahf
into
ret
ror
addr16
lea
mov
rclb
into
psubsw
xor
bound
mov
les
outsb
enter
pop
and
jo
mov
xor
sbb
jecxz
jne
cli
push
rcrl
mov
mov
cmpsl
aaa
loopne
push
aad
ja
push
push
es
mov
xor
aaa
xchg
pop
adc
jb
incb
pop
call
cld
aad
int
push
xor
xor
jbe
rorl
pop
cmp
fldt
xor
pop
dec
cs
out
das
mov
mov
clc
or
jo
dec
inc
cmp
movsl
and
mov
nop
jae
dec
xor
pop
adc
mov
leave
inc
cltd
clc
aas
fdivl
and
negb
sarl
add
test
adc
inc
mov
dec
bound
pop
enter
and
jg
mov
lods
sub
stos
sub
xor
fucomip
jmp
cmp
mov
sbb
scas
call
lds
hlt
sti
mov
mov
ds
jecxz
clc
int3
insb
stc
ljmp
fs
pop
stc
in
mov
jge
and
cmp
aam
arpl
rclb
clc
push
sbb
mov
fcomps
cwtl
adc
dec
fstp
outsb
ficoms
push
add
jg
push
sub
lock
insl
jbe
cmp
in
out
jge
push
lods
rcll
lds
inc
sahf
sbb
aaa
jnp,pn
sub
adc
xor
sbb
and
jl
jnp
cmp
dec
pop
or
hlt
pop
loopnew
sub
je
pop
push
xor
mov
mov
adc
fsubl
cs
mov
push
xchg
fistl
add
dec
leave
adc
stos
jae
pop
in
push
adcb
jns
lock
cltd
inc
or
out
jg
std
adc
ret
insb
push
dec
add
pop
xor
daa
mov
xchg
xchg
push
aas
lea
test
stos
adc
aam
cmp
adc
out
push
and
sti
inc
or
mov
loop
bound
dec
imul
xchg
adc
xchg
xor
dec
mov
aas
int
xchg
add
pop
mov
cmp
data16
push
jg
popa
adc
aam
xchg
sub
adc
mov
pop
fnsave
sub
sub
lds
jl
jecxz
lret
jo
cmp
add
mov
add
vshufps
inc
dec
sbb
btsw
aas
adc
xchg
test
inc
or
loope
jbe
enter
fisubl
push
pushf
popf
leave
fistpll
or
push
dec
xor
or
sbb
xor
jno
xor
xchg
push
cld
out
add
lcall
pop
jb
push
lods
movsl
xor
jmp
ds
sbb
inc
insb
mov
cmp
add
je
gs
mov
mov
popf
mov
gs
cmp
nop
stc
xchg
mov
pop
pop
pop
pop
mov
add
loope
shlb
icebp
sbb
scas
mov
in
std
inc
inc
stos
testb
jo
push
dec
lret
push
jmp
add
dec
movsb
test
popa
in
dec
das
push
push
into
aaa
into
loopne
hlt
out
ret
nop
orb
dec
or
loope
enter
add
outsb
insl
push
out
lods
decl
dec
dec
lcall
sbb
fmuls
imul
dec
std
addr16
cmp
sub
sbb
cmp
mov
xor
xor
repnz
mov
xchg
jnp
iret
cmp
mov
cmp
sub
rolb
jl
in
sbb
or
or
bound
dec
outsb
ljmp
cld
cmpsl
lea
jae
inc
enter
sbb
gs
movsl
insb
mov
fidivrs
add
call
jnp
scas
les
mov
jl
mov
loope
lcall
lcall
xor
jg
aad
mov
push
or
incl
xor
int
sub
xchg
sub
movsl
xchg
iret
in
int3
xchg
clc
sub
mov
xor
loopne
push
arpl
mov
or
lcall
hlt
and
cld
mov
aad
cli
inc
int
int
xlat
xor
or
ss
add
xchg
fdivrl
pusha
jb
insl
mull
vpackssdw
and
aas
or
test
pop
cmpsb
imul
shlb
jmp
sub
cmp
les
fnstsw
ffreep
mov
icebp
leave
adc
jae
scas
dec
jne
mov
pop
int
mov
bound
jno
mov
adc
jp
dec
xor
addl
or
cld
gs
push
xchg
sbb
dec
pop
push
add
test
mov
mov
stos
clc
adcl
dec
mov
push
ss
add
sets
dec
adc
fdivl
in
fisttpll
push
mov
fwait
nop
adc
jp
add
aaa
push
aas
movsl
sbbb
imul
test
cmp
inc
addr16
inc
mov
repz
fcmovne
arpl
outsb
aad
jbe
add
and
sti
dec
addl
fs
xchg
push
sub
dec
sbb
icebp
sbb
ljmp
and
mov
lret
add
mov
inc
nop
xor
enter
jnp
sbb
jl
pop
repnz
out
jbe
popa
inc
sti
int
loop
sub
out
and
dec
in
loope
lea
xor
rolb
setl
cs
lahf
in
xchg
enter
add
je
inc
sub
jae
cmp
in
fdivrl
test
ss
add
fstpt
xor
inc
dec
mov
jg
mov
sahf
daa
adc
test
insl
dec
movsl
and
or
outsl
fmuls
fcomps
and
mov
call
dec
sub
pop
xor
sub
jge
add
add
cmp
or
insb
je
mov
mov
addl
jns
pop
andl
cmc
xor
jnp
pop
and
stos
mov
lret
push
call
das
jo,pt
into
popa
dec
test
cltd
iret
push
add
cld
sar
in
lods
orl
mov
pop
adc
pop
push
testb
cmp
loop
and
shlb
fmull
das
imul
add
inc
mov
xchg
push
lods
xor
popa
add
ret
test
xchg
mov
xchg
mov
push
fcomp
push
mov
jmp
adc
outsl
les
cmp
cs
adc
mov
jl
stc
jbe
mov
xlat
out
sub
loope
xchg
stos
jecxz
ret
adc
add
js
xchg
mov
fistps
xchg
xor
popf
xchg
pushf
test
test
sarl
out
adc
mov
xor
int3
pusha
lock
push
ja
xlat
int3
jecxz
inc
add
jnp
fadd
cli
popf
adc
insl
mov
fimuls
cltd
cs
mov
pop
scas
insb
clc
out
pop
jecxz
push
xor
pop
cmp
xchg
mov
cwtl
sub
pushf
fucomip
jg
adc
sub
lret
faddl
and
in
and
push
pop
jb
xchg
pop
adc
xorl
xchg
loope
ret
out
mov
fstpt
mov
dec
repnz
dec
pusha
shrl
pop
push
cmp
xchg
pop
das
aad
andb
outsb
and
cmp
adc
jno
lret
rclb
cmpsl
int
mov
push
mov
mov
loopne
ljmp
inc
and
sbb
in
xlat
xchg
fs
scas
sub
sahf
mov
lea
test
pop
add
add
in
sbb
cmpsb
popf
add
sbb
cmpsb
mov
out
mov
sbb
adc
ficompl
movsb
add
fsts
mov
lret
mov
push
push
jmp
cmp
push
fs
fnsave
ret
dec
jnp
jbe
aam
pusha
or
rolb
add
mov
pop
add
cmpb
jbe
push
push
adc
mov
or
enter
or
pop
push
mov
pop
loop
shl
mov
pop
lods
in
es
push
lea
mov
or
fmull
in
push
pop
pop
daa
adc
inc
icebp
push
loope
shll
xchg
xchg
and
jno
popa
out
testl
xchg
aaa
addl
ja
xchg
xchg
and
jno
popa
out
testl
xchg
aaa
adc
shll
and
mov
jno
popa
out
pop
inc
adc
pop
addl
testl
or
stc
pop
sahf
sbb
or
cmp
sub
push
les
out
or
mov
mov
adc
inc
stc
xor
and
rorb
sarb
sub
pop
nop
dec
cmpb
mov
mov
adc
add
xor
and
rorb
sarb
sub
pop
nop
dec
cmpb
mov
leave
add
pusha
flds
fs
shrb
cmp
inc
xchg
mov
inc
push
dec
mov
aaa
push
pop
inc
fcoms
mov
testb
push
subl
mov
leave
mov
lds
push
pop
pusha
mov
fwait
or
nop
pushf
mov
fcoms
inc
xor
jmp
sar
cs
xor
imul
pop
mov
mov
push
add
bound
dec
dec
mov
es
cmpsb
nop
imul
adc
and
fmuls
push
xor
jo
push
icebp
cmp
icebp
xchg
jb
ret
jnp
and
dec
je
pusha
cmp
and
or
cmp
sub
pop
nop
dec
cmpb
mov
mov
adc
add
xor
data16
push
jg
outsl
cmpsb
cmp
rcll
in
shr
cmp
sub
push
in
push
pop
jge
jns
mov
inc
outsl
xchg
jge
pop
lock
scas
cmp
sub
jmp
out
sub
es
outsl
nop
inc
orl
or
cld
dec
cmpb
mov
mov
adc
add
xor
and
rorb
sarb
sub
pop
nop
dec
cmpb
mov
mov
adc
add
xor
and
shrb
movsb
add
mov
xchg
sub
neg
sub
test
ds
push
vaddpd
push
arpl
xchg
mov
xlat
fsubrl
and
aad
jnp
ja
out
lock
sub
in
lods
xor
add
sahf
xchg
scas
jp
pop
test
inc
ss
mov
push
xor
andb
and
ficoms
cmp
fistpl
push
cmp
mov
cmp
add
and
mov
add
mov
insl
xor
mov
outsl
jnp
out
jae
xor
sbb
add
sub
call
dec
add
add
ret
mov
test
mov
cmp
out
xchg
jne
ficomps
jae
dec
lods
add
fidivrl
push
popf
inc
fdivl
jecxz
jns
aad
faddl
pop
data16
mov
pushf
hlt
test
xchg
shlb
aas
lock
imul
lret
loop
insl
cmp
mull
xor
sahf
ret
dec
adc
dec
stc
decl
flds
lock
shrl
push
imul
das
push
mov
dec
mov
ja
mov
cld
out
jg
cwtl
loopne
lret
mov
inc
jle
jb
mov
aad
jne
cmpsl
arpl
popf
pusha
adc
repnz
sbbl
jmp
cltd
push
mov
jno
scas
lods
jmp
mov
imul
mov
and
push
cmp
aam
daa
adc
call
popf
mov
jns
in
pusha
idivb
lcall
insb
pop
pusha
sbb
shrl
test
lods
adc
inc
clc
xchg
in
dec
das
mov
pop
ss
sbb
add
mov
sub
jb
push
aam
ds
das
imul
xchg
mull
test
and
or
mov
sahf
das
shlb
inc
mov
jb
lret
loopne
imul
mov
iret
mov
pop
icebp
out
aam
sahf
push
sbb
sbb
jge
in
int
rcrl
dec
or
stc
or
mov
mov
repnz
subl
inc
dec
jg
pop
and
and
sbb
mov
lahf
sub
test
inc
sub
mov
xchg
mov
inc
and
or
pop
and
push
insb
imul
or
fistl
push
sbb
mov
arpl
sbb
xchg
out
inc
pushf
sbb
ds
dec
push
sbb
bound
sbb
push
or
leave
test
movsb
xchg
in
jp
mov
push
fisubrs
push
cmp
inc
std
mov
xchg
jecxz
pop
pop
cld
add
mov
sarl
xchg
jge
mov
pop
mov
add
pop
xor
pmullw
cmpsl
movsl
lock
cld
cwtl
mov
adc
shufps
gs
or
daa
fisubs
xchg
sub
psraw
fdivrl
das
sub
out
jecxz
out
sbb
nop
pop
dec
inc
jnp
negb
jl
js
cmp
jmp
xor
jecxz
push
enter
nopl
es
popa
xor
and
bnd
jne
xchg
push
ja
into
adc
dec
fnstcw
pop
sbb
sub
sbb
mov
push
inc
fisttpll
or
push
mov
xchg
out
xchg
mov
imul
mov
pushf
fdivs
notb
mov
mov
and
xorl
mov
adc
stos
jl
and
insb
fsubp
fsubrl
les
push
imul
dec
push
jbe
jecxz
pop
cmp
lahf
cs
cli
scas
imul
sarb
fiadds
movsb
xchg
or
adc
dec
xlat
out
dec
jo
mov
xor
movntps
mov
sbbl
popf
out
xchg
sbb
inc
decl
jecxz
inc
inc
shll
xchg
imul
cmc
cmp
inc
mov
mov
sub
int
cmp
jno
and
cmpb
xchg
dec
test
out
mov
cmp
cmpsl
dec
iret
adc
lea
test
mov
inc
sbb
xchg
and
jbe
mov
mov
push
inc
jg
dec
mov
imul
dec
or
pop
sahf
mov
scas
in
rorb
push
xchg
fisubs
xchg
cmp
repnz
mov
lods
push
sub
popa
add
sub
inc
mov
cmp
cmp
and
xor
out
insb
mov
sub
add
xor
push
out
or
pop
push
aaa
in
arpl
jecxz
mov
pop
popf
push
lret
dec
rol
movsb
xchg
and
icebp
pushf
xlat
outsb
das
js
imul
out
adc
mov
mov
dec
dec
cmpl
cmc
scas
sub
mov
je
imul
cwtl
mov
cs
lea
popa
xchg
fwait
xor
insb
sub
inc
jno
mov
push
imul
incl
loop
inc
and
jge
out
leave
pop
cwtl
and
mov
repnz
pop
rclb
xor
mov
or
pop
cmp
stos
loope
cmp
repz
xlat
mov
push
pop
cmpb
ljmp
mov
dec
mov
or
jle
gs
mov
dec
lods
and
into
mov
loopw
insl
stos
push
add
fdivrl
subb
pop
imul
movsb
inc
rcl
sub
jecxz
ja
inc
xor
lret
mov
daa
mov
loope
xorb
mov
sbb
dec
je
aad
inc
add
jmp
shlb
scas
pushf
sti
and
jne
sub
lods
dec
inc
push
loop
decb
sub
inc
dec
arpl
push
add
xor
test
in
cli
dec
out
les
cwtl
and
cmpsl
mov
or
negl
add
popf
xchg
jne
movsl
jmp
mov
test
ret
stc
mov
push
lret
push
mov
add
shll
and
cwtl
push
dec
pop
inc
cmc
push
andb
rorb
jle
fucomp
nop
push
scas
push
cmp
outsl
pop
pop
xor
test
adc
push
jmp
xchg
add
pop
push
lock
and
mov
insl
pop
jmp
loopne
mov
in
mov
pop
sub
xor
stc
cs
aad
pop
cmp
inc
dec
adc
lods
adc
xchg
repz
les
or
popf
xor
cmp
xchg
call
frstor
insb
cmp
sbb
cmp
mov
jae
mov
sarb
out
add
rorb
xor
scas
lcall
dec
repnz
sbb
aas
and
idivb
cs
popa
je
push
mov
pushf
imul
mov
lcall
call
mov
push
insb
xchg
fwait
sbbl
lds
inc
notl
push
xor
pusha
xor
push
xchg
ljmp
and
insb
mov
popa
mov
mov
or
or
shl
in
mov
sbb
pop
and
xchg
outsb
addb
push
jl
xchg
jp
loop
das
loopne
sahf
ret
add
add
rol
inc
sbb
push
or
sti
into
imul
inc
cs
jo
jns
hlt
leave
cmpsb
push
xor
cmpsl
scas
sarb
mov
mov
movsl
jmp
xor
test
push
adc
rcrb
stos
xor
jg
adc
add
lock
out
movsl
adc
pop
cmp
ret
inc
test
nop
hlt
inc
scas
int
cli
push
outsl
add
mov
cmp
fildl
out
cltd
mov
insl
and
cld
stos
and
aam
leave
mov
xchg
leave
mov
shl
flds
and
lcall
imull
and
add
add
repnz
and
stc
push
inc
inc
inc
mov
in
and
xor
or
in
cmpsl
xor
xor
lret
outsl
jecxz
dec
or
mov
outsb
jne
mov
dec
mov
adc
push
mov
pop
aaa
cmpsl
xchg
pop
pop
dec
fs
enter
and
ja
cmp
fdivrl
idivl
sbb
aam
scas
enter
dec
or
fstpt
les
add
xor
iret
inc
and
pop
int
fidivrs
push
sub
jne
xchg
call
stc
sahf
mov
jmp
outsb
adc
push
sbb
push
jecxz
mov
sub
cli
pop
ljmp
lahf
add
xchg
repz
and
pop
test
push
sub
cmp
sub
shrl
dec
out
inc
sbb
xchg
jg
mov
test
sub
shr
out
das
mov
out
fisttps
scas
mov
or
cld
mov
push
sub
jbe
sahf
mov
sbb
ja
loop
mov
mov
cmc
sbb
outsb
pop
xor
mov
incb
lock
aad
push
xchg
xlat
stc
dec
dec
fwait
and
mov
mov
cmp
cld
or
jb
push
vshufps
xor
push
sbb
insb
or
std
xchg
addr16
mov
and
jp
fcoml
je
mov
xchg
aad
push
inc
sti
insb
sub
xor
sbb
adc
jl
js
mov
push
push
pop
leave
sbb
mov
inc
lock
jo
cmp
inc
add
jnp
pop
sbb
xchg
xchg
sbb
repz
and
mov
movsl
pop
clc
push
fs
fwait
popf
je
out
cmc
xchg
das
jmp
loopne
sbb
sbb
push
aas
jl
cmc
and
adc
ret
call
or
scas
mov
jno
loopne
mov
xor
inc
iret
ficompl
rclb
ljmp
lea
pop
call
insl
scas
push
stos
or
jbe
cs
shrl
adc
jo
and
xor
jl
sahf
bound
enter
mov
outsb
xchg
xor
or
sub
call
std
dec
jbe
rclb
shl
xchg
addl
imul
fwait
ss
or
lahf
in
int3
mov
cmp
sbb
sti
dec
adc
rclb
lods
and
mov
xor
ss
mov
ds
inc
push
inc
out
inc
loop
xlat
in
pop
push
out
int3
jg
pop
add
or
adc
mov
outsl
popa
or
adc
jno
push
leave
popf
mov
stos
ret
add
push
sub
addr16
mov
push
cs
mov
repnz
jno
scas
int3
cmp
scas
mov
push
jecxz
popa
loope
and
sub
and
mov
inc
mov
outsb
sarl
popa
pop
out
sub
cld
push
push
jmp
mov
lods
movsb
pusha
stos
add
stos
fimull
ficomps
jp
jae
insl
mov
aad
imul
rol
shll
jmp
sbb
insb
shr
inc
xor
hlt
dec
xor
stos
inc
lahf
bound
push
aas
cmc
shll
fcoms
pop
addr16
mov
mov
je
fldl
adc
inc
shl
push
push
mov
es
push
mov
mov
out
adc
ds
lcall
sub
cmp
jge
sbb
in
mov
arpl
xor
fwait
arpl
sub
and
ret
std
and
inc
jl
jp
mov
rclb
cmp
push
cmc
int
pop
push
testl
pop
shrb
out
pop
or
sub
mov
testl
pop
jns
sbb
mov
ffree
mov
mov
js
push
pop
out
stos
xor
inc
lcall
in
add
shl
lds
mov
sti
call
xor
addl
jle
and
pop
mov
pop
sbb
push
loope
adc
xchg
loopne
mov
jle
mov
adc
leave
mov
cli
daa
pushf
jp
repz
jns
popf
push
in
mov
jl
loopne
or
mov
sbbl
in
outsb
and
rolb
jp
enter
loope
jmp
mov
lcall
inc
mov
int3
int3
repz
mov
sub
or
sub
xchg
pusha
loopne
mov
imul
pusha
mov
shl
mov
xor
jp
iret
inc
xor
loop
loopne
cmp
ss
and
imul
xor
ret
adc
cld
rolb
xchg
add
icebp
mov
cmpsb
inc
mov
sbb
lcall
jmp
loope
jl
jns
and
mov
in
sbb
xchg
xor
jle
imul
rolb
imul
pop
mov
inc
rclb
adc
adc
scas
pop
jp
xchg
push
jo
sbb
and
xor
addr16
inc
mov
in
mov
in
cmp
lahf
mov
decl
push
or
dec
outsb
inc
outsl
mov
pushf
adc
inc
les
and
xor
lret
sbb
iret
test
addb
out
add
cmp
outsb
lret
pop
sbb
mov
xor
aas
cmp
dec
scas
popa
mov
mov
or
pop
lret
int3
pop
cmp
mov
xchg
daa
fcoms
imul
pop
xchg
sub
cli
int3
mov
emms
jne
das
shrl
in
hlt
call
pushf
xor
adc
pop
daa
out
inc
sahf
js
adc
inc
dec
aaa
push
ret
je
xchg
out
fwait
inc
add
mov
jne
jecxz
filds
sbb
pop
rolb
js
jns
sub
out
enter
sub
adc
mov
int3
out
mov
mov
stc
popf
inc
lods
insl
in
inc
in
lds
cwtl
scas
xchg
fisttpll
lods
mov
adc
fwait
in
mov
popa
das
in
daa
repnz
sbb
and
orl
lods
out
sbb
leave
xor
lret
cmp
idiv
pop
inc
aaa
xor
fnstenv
das
int3
pop
mov
call
add
pop
mov
and
xchg
hlt
stos
cmpb
scas
cli
and
pop
mov
pop
and
cmp
push
test
iret
sub
xchg
ds
psubw
mov
push
adc
fiaddl
mov
mov
or
pusha
repnz
pop
mov
cwtl
and
arpl
or
mulb
xchg
outsl
add
jmp
ljmp
pop
aaa
jl
and
xor
pop
test
outsb
push
sti
inc
mov
js
xor
pminsw
xchg
dec
fildll
sbb
cmc
cmp
cmc
sub
pop
pop
and
sub
cmc
inc
xchg
mov
les
xor
loope
stc
and
fists
fistpl
mov
pop
jg
fcomp
pop
jnp
xchg
ja
cmpsb
mov
in
popa
jl
lock
xchg
lock
jmp
movsl
push
adcb
out
and
add
xor
fs
mov
inc
and
nop
and
outsl
xor
cmp
nop
mov
dec
and
pusha
nop
gs
scas
sub
mov
movb
xchg
inc
fwait
mov
outsl
sbb
negl
and
xor
mov
popa
bound
jne
in
popf
or
mov
imul
in
mov
lods
mov
xlat
sub
cwtl
xchg
and
inc
dec
mov
cmp
in
mov
mov
popf
xchg
add
jae
pushf
mov
mov
lds
adc
fs
imul
iret
repnz
lcall
pop
lahf
adc
shlb
stos
mov
imul
ret
dec
inc
xor
adc
jmp
jecxz
adc
mov
xchg
and
add
imul
aaa
sub
push
dec
cs
jno
add
lods
aam
js
stos
arpl
rcrl
jle
jb
movsb
in
sub
rolb
or
add
or
ret
insb
xor
int
add
das
jne
stc
push
dec
sbb
pop
mov
jne
rcrl
add
inc
movsb
push
jnp
cli
add
push
inc
cmp
push
jl
xor
inc
pop
lcall
xchg
hlt
dec
fs
pop
jge
daa
mov
in
add
hlt
testl
fiaddl
cmc
js
mov
in
mov
cltd
jo
pop
in
mov
in
sub
ret
push
popa
pop
jbe
into
out
cmp
sbb
cmp
cmp
and
add
fwait
les
fmulp
lret
mov
cld
sahf
lahf
idiv
mov
dec
jp
cld
imul
xor
push
fwait
ret
add
sarb
popf
fdivrl
pop
or
lds
iret
sbb
mov
fcoml
mov
jne
or
cmp
lahf
cmpsl
imulb
sbb
sub
push
movb
mov
jne
cmp
outsl
out
push
nop
fbld
pop
push
sarl
push
inc
jp
and
adc
push
std
loop
cli
cwtl
xchg
cmc
cmp
ss
out
das
sbb
pop
add
sti
pop
mov
fsubs
mov
js
andl
lock
sbb
cmpsl
scas
in
and
stos
lea
iret
daa
inc
and
lret
cmp
out
sub
in
int3
hlt
xchg
push
pop
out
xor
cmp
mov
fsts
jp
fs
pop
mov
sbb
xchg
into
mov
mov
fadd
adc
pop
inc
jle
ja
lahf
dec
inc
popa
out
bound
mov
xchg
cmp
mov
mov
imul
fnstenv
xchg
mov
out
mov
loop
subb
inc
xor
jle
stos
insl
repz
cmpsb
cmpsb
mov
push
mov
aam
sbb
imul
adc
stos
in
cld
mov
loop
and
sub
cmp
xor
mov
or
ja
cmpb
or
shlb
sub
jnp
or
popa
inc
mov
fldl
sub
push
mov
mov
lretw
into
mov
xor
xor
xchg
lahf
cltd
lods
rcl
fdivrl
je
add
mov
push
and
pop
push
add
push
push
sbb
fstps
inc
std
repnz
movsb
in
mov
hlt
pushl
adc
add
addr16
xor
and
repnz
nop
ljmp
in
jp
mov
lock
mov
xlat
loop
xor
or
sub
bound
subl
adc
mov
jno
xchg
pop
sahf
lahf
sbb
mov
cbtw
ss
adc
jl
fs
imul
dec
pop
mov
mov
mov
mov
sbb
test
aam
test
lret
mov
ret
pop
imul
and
popa
lds
xchg
push
sub
jno
xchg
scas
mov
add
popf
aad
or
jl
add
dec
lock
push
aaa
out
mov
or
popa
or
fisttpll
dec
add
f2xm1
hlt
ds
std
sbb
frstor
cmp
inc
or
add
movsb
lds
sbb
and
push
push
ret
cmp
aam
cmp
mov
mov
xchg
jb
adc
xchg
mov
xchg
movhps
cltd
nop
sub
movsb
inc
sbb
dec
scas
cltd
incl
sbb
leave
dec
lods
test
push
shl
insl
xor
mov
sbb
mov
fnstenv
dec
daa
dec
pop
jg
aam
or
push
or
jno
dec
push
jmp
pop
imul
xchg
add
pop
ss
addl
scas
daa
fstl
movsb
cmp
imul
repnz
push
mov
xor
mov
in
loopne
and
jns
xchg
cmp
jnp
adc
mov
cmp
lods
sahf
xor
adc
js
mov
cwtl
rolb
lret
jae
aam
xchg
pop
jecxz
ds
lock
fiaddl
dec
fs
ffree
andl
pop
pop
in
loop
hlt
xor
xchg
imul
rcll
mov
jae
lea
fwait
mov
dec
insb
mov
into
dec
fdivs
sub
mov
sahf
push
push
jecxz
in
ret
inc
mov
push
loopne
iret
add
arpl
stos
ficompl
ficomps
push
pop
adc
daa
push
lea
fstpt
cmp
sub
ds
pop
rol
or
pop
fcoms
jo
clc
sbb
mov
xor
outsb
cmpb
lahf
xor
repnz
out
aam
xchg
xchg
sbb
mov
sbb
arpl
cmp
inc
push
icebp
sub
pop
nop
dec
cmpb
mov
mov
adc
add
xor
and
rorb
sarb
sub
pop
nop
dec
cmpb
mov
mov
adc
add
xor
and
aam
sarb
sub
pop
nop
dec
cmpb
mov
mov
adc
add
xor
and
rorb
sarb
sub
pop
nop
dec
add
xor
pop
scas
jbe
adc
pop
scas
cwtl
inc
incl
iret
adc
sbb
mov
push
leave
cmp
cwtl
sub
sbb
push
call
mov
pop
call
push
cmp
sub
test
dec
call
mov
pop
icebp
dec
loopne
shrb
cwtl
lret
mov
lret
jge
sbb
push
xchg
test
rorl
pop
adc
pop
dec
and
push
xchg
sbb
push
mov
or
dec
push
sbb
jne
test
xchg
cmc
mov
int
movsl
fs
int3
push
jae
sahf
push
outsb
test
shlb
in
loopne
cmpl
xlat
mov
clc
add
lods
loop
inc
mov
popf
js
inc
js
mov
pop
pop
clc
or
pop
enter
nop
add
cwtl
js
xor
cmp
xor
nop
jl
push
ja
js
enter
cwtl
imul
test
and
push
add
cmc
sbb
cmpsl
out
xor
mov
push
mov
repnz
enter
inc
sbb
leave
or
inc
test
scas
cmp
dec
clc
js
push
and
jo
outsl
clc
dec
call
mov
xor
add
flds
inc
fistpl
ja
add
mov
mov
push
fwait
and
js
push
pop
stc
jl
pop
mov
and
cmp
push
jmp
dec
clc
js
push
cmp
push
call
mov
pop
call
push
cmp
push
call
aas
subl
popf
shll
mov
cli
adc
adc
cmp
jno
or
xor
sub
cmp
pop
add
roll
adc
or
hlt
dec
test
fcom
shll
mov
push
adc
add
in
fadds
mov
dec
ret
aaa
int
ss
mov
stos
push
dec
jl
pop
lcall
lret
rcll
sub
and
mov
sub
fistl
out
sbb
mov
inc
bound
outsb
cltd
lds
xchg
mov
in
out
jno
into
cmpl
jb
jo
jns
cwtl
xchg
xor
mov
and
ret
pop
insb
mov
mov
mov
outsl
popf
mov
mov
push
mov
aas
push
lcall
and
fnstcw
in
sbb
cmpsb
mov
test
add
add
clc
xor
clc
adc
movsb
insl
dec
and
shlb
in
dec
cmp
pop
jp
xchg
lea
lods
xor
jno
adc
cli
add
or
mov
arpl
mov
pop
incl
neg
scas
jne
push
fcompl
clc
movsl
xorl
iret
inc
fcoml
das
arpl
mov
dec
andb
fdivl
aam
js
xor
sbb
mov
or
add
aad
or
sbb
bound
mov
ds
lahf
cmpsb
jmp
pop
fnstsw
xchg
loopne
in
das
fadd
and
fldt
mov
push
jne
addr16
lods
or
cld
ret
js
adc
movsl
mov
mov
cmp
pop
mulb
cltd
inc
xchg
lods
pop
gs
lods
push
imul
dec
fdivl
mov
jmp
cmpsb
adc
in
mov
in
sub
shrl
aam
cmp
xchg
subl
mov
iret
jge
fists
dec
test
aaa
sti
fdivrl
xlat
mov
dec
int
push
xchg
push
mov
inc
lcall
push
cmpsl
mov
pop
and
or
mov
mov
inc
add
arpl
inc
mov
loop
cltd
fisttpll
sti
add
dec
xchg
xchg
shll
xchg
push
cs
jb
sbb
lgs
cmp
cli
cltd
ja
xchg
mov
clc
mov
lods
mov
add
mov
push
dec
vandnps
inc
dec
adc
dec
jno
pusha
sbbb
dec
andl
sub
xor
sub
ss
inc
subl
out
lods
test
mov
pop
or
xchg
mov
push
add
jnp
bnd
sbb
lcall
mov
inc
sahf
mov
add
movsl
mov
es
or
lret
imul
and
sbb
xchg
data16
xor
sbb
mov
test
aas
loop
mov
push
xor
das
aam
jae,pt
xchg
movsl
add
fildll
xor
mov
push
mov
test
out
lods
sub
sar
jecxz
pop
cwtl
push
jp
out
repnz
adc
dec
test
and
or
or
mov
psrld
xor
ret
inc
xchg
sub
jg
xchg
addr16
fiadds
add
into
xchg
mov
fwait
xor
cs
shll
mov
enter
adc
int
arpl
aad
gs
popw
std
xchg
loope
and
mov
outsb
int
pop
popl
lods
addr16
jecxz
xchg
in
loope
dec
imul
add
arpl
adc
jae
sbb
sbb
mov
fstpt
push
movsb
add
ds
lahf
mov
lods
sub
add
pop
sar
scas
pushf
xor
cmpl
sub
sti
jae
lcall
mov
mov
or
xor
xor
add
mov
ljmp
and
adcb
in
mov
subl
and
out
js
xor
movsb
add
push
xor
cmp
in
lcall
jo
adc
rclb
mov
clc
jecxz
mov
mov
bound
pop
jnp
rcrb
pusha
loopne
cwtl
addl
and
sahf
imul
popf
sub
popf
imul
lods
aad
sbb
out
push
cmp
cmp
mov
das
sarb
adc
scas
addr16
adc
fldt
iret
inc
leave
lcall
mov
aas
arpl
pusha
filds
daa
mov
mov
nop
clc
mov
jo
mov
scas
jle
pop
aas
pop
loope
xchg
fwait
movsb
je
sbb
xor
lds
and
mov
jo
xor
movsl
mov
out
scas
jne
fiaddl
adc
jbe
push
inc
jo
inc
jg
ret
pop
mov
cmp
into
pop
in
movsl
xor
test
jne
in
or
aam
add
jmp
jl
add
out
aaa
xchg
das
dec
mov
clc
js
popa
movsl
push
xor
in
aas
adcb
lret
sub
ficoms
in
inc
jmp
add
ret
and
sahf
inc
jge
mov
jecxz
xchg
psraw
mov
jnp
sub
inc
adc
mov
jnp
push
mov
or
testl
out
sar
mov
out
mov
add
inc
push
nop
jno
push
mov
fistpl
cltd
fsubs
je
mov
jecxz
sbb
fdivl
insl
xor
mov
repnz
scas
push
shlb
add
js
stc
lret
iret
push
xchg
arpl
in
or
sub
into
add
subl
and
sbb
push
sub
aam
sar
sub
scas
xchg
mov
mov
ljmp
notl
sbb
stos
push
push
mov
and
mov
int
inc
mov
lcall
xor
adc
or
test
lods
push
popf
les
movsb
and
cmpl
aaa
adc
pop
dec
mov
and
popa
jno
nop
jp
jge
add
jecxz
adc
dec
aam
shlb
ljmp
pushf
pop
push
rol
mov
fcom
mov
jo
push
cmpsb
inc
or
inc
cmp
movsb
mov
add
fwait
xchg
sub
clc
xchg
mov
mov
mov
out
aaa
rclb
push
pop
int3
test
or
scas
divb
push
movsb
ret
movsl
call
or
push
mov
pop
cs
mov
std
repnz
mov
adc
adc
sbb
push
pop
mov
xor
adc
xlat
std
sbb
dec
sbbl
cmc
mov
cmp
sti
mov
mov
inc
lret
ljmp
mov
and
gs
loop
hlt
or
adc
xor
or
jle
rorl
xchg
cwtl
cwtl
xor
add
call
mov
push
jnp
aaa
icebp
data16
imul
bound
or
add
icebp
mov
ret
scas
sub
enter
ss
insb
mov
icebp
outsb
fs
mov
sbb
jbe
loopne
das
testl
cwtl
xchg
mov
adc
add
imul
cld
xchg
sub
aaa
negb
cmp
fsubs
and
aaa
add
fisubl
adc
push
mov
cmp
sub
rol
cli
jecxz
leave
stc
das
add
repz
les
mov
cld
cmp
out
xlat
sub
sub
xor
adc
ds
insb
sub
test
out
push
inc
ljmp
push
xor
jns
cmp
ljmp
out
jo
mov
mov
fs
push
fcompl
mov
cmp
mov
xchg
push
mov
js
mov
fstps
jnp
jns
loop
adc
sti
dec
and
int
hlt
das
jl
mov
arpl
cli
dec
push
and
and
cld
inc
js
dec
mov
pop
push
popa
mov
call
pop
std
add
xchg
jnp
test
ret
mov
push
adc
mov
lds
cmp
es
lock
jmp
add
fstpl
mov
lret
mov
aaa
xor
test
sub
push
adc
push
rcrl
mov
jmp
imul
sbb
mov
mov
mov
push
fnstenv
popf
adc
shlb
or
and
into
pop
xchg
bound
decb
jle
push
je
stc
pusha
mov
jb
pop
fistpl
aas
pop
jmp
or
aad
gs
push
cmpsb
stos
add
fs
adc
and
stos
mov
in
dec
push
add
pop
andl
movsb
sbb
pop
subl
imul
test
mov
repz
lcall
add
cmp
xchg
push
pop
hlt
cmp
cmpsl
inc
and
ljmp
jle
mov
cli
jmp
iret
js
cmp
mov
push
sub
loopne
insb
or
inc
cmc
mov
insl
xor
xchg
enter
lods
sbb
pop
lcall
inc
ret
mul
jno
ret
out
loop
adc
pop
mov
jle
repnz
and
sbb
mov
sarb
and
jo
rcrl
jb
jae
jmp
scas
js
addr16
fsubs
fwait
cltd
rcpps
les
pop
subb
imul
jae
pop
pop
add
xchg
in
jbe,pn
pop
mov
pop
test
cmc
jge
xchg
or
inc
sub
xchg
in
ret
in
fwait
sub
jmp
movsb
push
ja
arpl
call
and
mov
aaa
pop
cmp
stos
jbe
sti
adc
loopne
dec
mov
mov
add
push
mov
xor
xchg
lods
xor
loopne
adcb
push
sbb
mov
cmp
rolb
or
sbb
addr16
outsl
mov
jge
hlt
out
pop
mov
arpl
hlt
clc
fsub
loope
loope
cmp
push
xor
mov
ja
jl
test
xchg
push
scas
pop
call
dec
gs
loop
jo
or
sbb
inc
jne
add
add
inc
insl
cli
iret
out
pop
jns
sbb
push
loopne
mov
inc
jle
fiadds
cmpsb
xchg
and
add
mov
scas
xor
add
arpl
cld
add
mov
add
xchg
xlat
notl
cmpb
pop
jg
pop
call
mov
mov
rcll
jne
testb
cmp
push
lods
sti
and
cltd
sub
aam
dec
out
loopne
and
pop
push
xchg
cs
neg
and
sahf
push
in
push
push
jl
cmp
dec
lods
cmp
cmp
cli
mov
pop
adc
sub
test
jmp
and
hlt
imul
dec
stos
inc
lods
jo
push
or
subb
test
lret
cmp
mov
in
mov
jg
loope
push
sbb
aam
push
mov
lods
and
sbb
in
popf
or
dec
fwait
adc
or
test
sti
pop
push
jp
jmp
dec
movsl
aam
xchg
or
call
xchg
jge
jnp
mov
or
lods
jne
subb
xor
cltd
into
ror
aad
fsts
cld
push
xchg
jo
xchg
out
mov
orl
pop
das
sbb
push
out
sbbb
xlat
add
std
jp
push
cmp
ljmp
mov
repz
pop
push
cld
cwtl
cmp
lds
lods
pusha
movsb
addr16
pop
inc
in
fwait
pop
push
mov
hlt
push
push
gs
pop
jbe
loopne
sub
and
jns
scas
dec
inc
out
fcomps
test
dec
jg
stos
push
xchg
or
movsl
data16
cmpsl
or
fildll
fsubr
loop
mov
mov
or
leave
loop
or
pop
jmp
pop
mov
fstp
mov
lods
xor
xor
jecxz
mov
pop
sub
xchg
scas
pop
pop
out
push
nop
cmpsl
mov
cwtl
imul
mov
ss
xlat
in
sub
je
ja
imul
inc
xorl
loop
add
mov
xchg
mov
xchg
jmp
mov
xor
mov
sub
roll
mov
notb
les
popa
lods
mov
sub
cwtl
adc
ds
mov
cmp
sbb
push
jb
add
mov
pop
push
fidivrs
jnp
repnz
pop
xchg
mov
insl
mov
repz
xchg
xchg
aaa
sub
aaa
add
je
mov
xchg
mov
popa
sub
jge
es
xchg
mov
scas
jne
or
and
and
pop
xchg
lock
hlt
mov
jg
dec
push
pop
dec
test
or
cmp
cld
mov
cmp
and
sbb
pop
or
cmp
scas
lret
push
sub
nop
imul
xchg
xchg
add
jo
and
jns
mov
push
aam
jmp
loopne
or
into
add
push
in
xchg
jno
rcrl
mov
cmpb
nop
fucomp
lret
int3
push
inc
int
mov
movsl
add
mov
mov
fisttpll
mov
or
adcl
pop
inc
incb
aaa
adc
imul
lahf
xor
xchg
xor
push
aaa
or
cmpsb
je
add
push
xchg
cmp
sti
sbb
inc
sub
outsb
jecxz
fmul
dec
inc
sbb
xchg
pop
mov
inc
jb
sbb
in
adc
pusha
jo
out
dec
and
psubb
stos
sbb
mov
inc
sub
mov
jp
xchg
lea
pop
pop
jl
add
in
sarb
xchg
popf
dec
int3
ret
or
aam
je
jno
mov
and
sbb
into
jle
xor
loop
xor
inc
out
enter
mov
popf
lret
fldl2t
push
aad
lret
inc
shlb
in
xchg
jp
mov
in
cmp
and
mov
cmc
cmp
movsb
pop
pop
cli
loop
leave
add
cmp
and
mov
jnp
lods
cmp
sbb
iret
fstps
mov
roll
inc
mov
xchg
mov
xchg
sub
nop
out
pop
mov
loope
hlt
hlt
mov
dec
add
mov
jnp
mov
repz
sub
js
xchg
test
push
pop
and
in
fwait
roll
inc
add
call
xor
mov
jge
pop
jb
nop
mov
mov
notb
fs
mov
push
xor
shll
xchg
mov
psllw
stos
and
enter
cmp
mov
xchg
in
xor
mov
pop
xchg
cmp
pop
ja
jnp
jp
in
stos
jmp
testl
xchg
pop
shrb
sbb
int
das
inc
sbb
sarl
icebp
aaa
push
pop
out
out
push
push
xor
arpl
lret
enter
test
jbe
jge
fiadds
sbb
stc
and
roll
inc
outsl
movsb
nop
loop
add
xchg
imul
push
aaa
es
lds
aaa
test
pop
adc
rcrl
pop
clc
fcmovnbe
sbb
insb
notb
sti
pop
rorl
mov
mov
jmp
xor
notl
xchg
repz
push
mov
pop
pop
es
aam
mov
into
or
ss
shrb
daa
or
push
adc
jns
ret
push
mov
lret
dec
call
xor
outsb
cs
repnz
jae
xchg
mov
nop
pop
adc
push
mov
loopne
test
adc
pop
add
movsl
testl
mov
dec
push
lods
jb
mov
stos
ror
in
lret
pusha
mov
mov
pop
aad
pushf
mov
xorl
cmp
mov
or
mov
xorl
mov
daa
pop
sti
mov
add
mov
push
inc
cmp
cmpsl
daa
call
jmp
ljmp
lods
clc
mov
mov
popf
jb
aaa
jge
sbb
dec
mov
lds
push
add
xor
mov
pop
sbb
popf
inc
test
dec
pop
xchg
pop
aad
ret
nop
xchg
mov
sahf
cli
jbe
lock
nop
ficoml
aaa
dec
xchg
cli
pop
and
xlat
inc
popf
jg
test
sar
ds
fucom
int
mov
xlat
pop
out
cmpsl
inc
adc
xchg
sbb
cmp
sarl
pop
aas
pop
pop
lret
hlt
mov
hlt
aas
or
push
sub
arpl
pop
fisubl
mov
pop
mov
rorb
sbb
add
mov
and
push
lret
rclb
mov
cmpsl
lods
lcall
ljmp
rcrl
or
mov
xor
data16
sub
jl
insl
test
into
pop
lods
cmpsb
or
push
lock
test
xor
adc
dec
pop
jne
ret
mov
pop
xchg
lahf
repz
inc
loop
mov
fwait
sbb
and
sbb
xchg
jmp
fists
add
mov
and
test
mov
scas
test
push
movsb
std
mov
cmpsl
pop
pop
addr16
xlat
xor
jnp
push
cld
inc
dec
imulb
cmp
or
sbb
nop
push
pop
xor
inc
xchg
adc
repnz
dec
call
lds
cmp
bound
mul
popf
sti
mov
xor
mov
lods
divl
scas
jp
pop
cmpsl
mov
lds
mov
dec
shrb
xchg
faddl
aaa
test
adc
adc
test
dec
dec
or
xlat
pop
cmpb
hlt
mov
jge
shr
pushf
jecxz
loope
out
push
add
push
push
aaa
xchg
mov
push
jl,pt
nop
outsl
xchg
hlt
gs
lds
sub
pop
cmp
and
popf
xlat
sub
in
and
inc
cmp
scas
inc
dec
pop
add
dec
add
movswl
push
aas
in
sbb
call
pop
cmp
outsb
cmp
mov
inc
incl
xor
xchg
mov
sub
inc
sub
jl
xor
clc
mov
or
out
lods
push
mov
add
push
out
test
jbe
loope
rep
inc
pushf
cmp
mov
cmpsb
push
mov
loopne
lods
cmp
xlat
scas
adc
mov
adc
or
out
in
dec
push
xor
mov
push
aas
dec
inc
mov
inc
cmp
int3
push
jge
stos
dec
imul
and
fdivp
sbb
xor
mov
add
sub
adc
adc
cmpsb
arpl
push
mov
pop
push
cltd
ja
add
inc
push
in
lret
mov
mov
arpl
lcall
sbb
pop
inc
xchg
mov
popf
movb
icebp
xor
movb
dec
dec
inc
loopne
mov
sbb
add
push
cld
stos
ret
test
popf
push
jo
pop
inc
subl
ljmp
sbb
scas
das
mov
jmp
push
jmp
mov
adc
cld
mov
mov
enter
mov
gs
pop
or
jmp
lret
ret
mov
testb
int3
pop
add
lcall
call
sti
shlb
insl
out
dec
push
stos
call
and
in
inc
pop
and
sbb
mov
and
fcomps
mov
repnz
jecxz
in
inc
test
js
imul
enter
mov
push
sbb
cwtl
pop
orb
aaa
mov
test
and
mov
dec
pop
sbbl
rcrl
dec
push
and
daa
enter
arpl
or
inc
ja
push
loop
add
fdivrl
pop
cmpsl
jno
jmp
jp
stos
sub
pop
inc
mov
out
inc
mov
pop
mov
nop
fcmovb
sti
mov
dec
jmp
sub
mov
mov
inc
in
in
ljmp
xchg
icebp
xchg
loop
jmp
bound
push
jns
push
lock
xor
cmp
jmp
sbb
jp
imul
loop
rclb
in
mov
mov
mov
inc
lcall
mov
test
lcall
dec
push
out
repnz
mov
mov
mov
pop
call
push
cmp
push
call
mov
pop
call
push
cmp
push
call
mov
pop
call
push
cmp
push
call
mov
pop
call
push
xchg
adc
test
scas
loopne
xchg
mov
cmpsl
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
ret
into
loop
repnz
dec
mul
loope
sahf
mov
dec
bound
outsb
add
adc
ret
into
loop
repnz
sbbb
scas
inc
pop
push
bound
outsb
ret
push
and
ret
into
loop
repnz
sbbb
scas
inc
divb
push
sbb
add
popa
push
dec
pop
cs
fidivs
mov
test
rcrb
inc
fsts
jae
ss
mov
or
jno
mov
xlat
mov
jg
jecxz
imul
jne
mov
fsub
or
pop
sub
in
inc
inc
mov
mov
push
pop
outsl
into
inc
shll
ret
dec
mov
repnz
movsl
lahf
xchg
iret
test
and
push
icebp
mov
xor
add
adc
lahf
xchg
fwait
and
add
out
ldmxcsr
in
bnd
xor
and
pusha
add
lret
mov
adc
outsb
pop
outsl
push
or
das
push
into
loop
repnz
sbbb
scas
inc
pop
push
dec
bound
outsb
add
adc
and
xor
mov
into
mov
loopne
lock
inc
cmp
cmp
or
add
jge
cmp
outsl
cmpsl
fidivs
pushf
adc
ljmp
add
pusha
pop
jb
add
gs
pop
inc
jle
xchg
rcrb
into
sahf
xchg
mov
pop
push
dec
bound
outsb
add
adc
and
xor
ret
into
loop
repnz
sbbb
scas
inc
pop
push
dec
bound
outsb
add
adc
and
xor
ret
xchg
dec
rolb
mov
dec
stos
xchg
arpl
repnz
cmp
dec
fimull
out
jge
pop
cwtl
xchg
mov
cli
dec
and
ficompl
xchg
popa
test
xor
sti
push
test
gs
mov
jg
clc
dec
jl
mov
cs
je
addl
jmp
lahf
fadd
or
dec
xlat
xadd
sbb
dec
sbb
mov
es
or
inc
mov
in
movsb
inc
mov
pop
dec
push
lahf
ja
mov
adc
int
dec
ret
mov
mov
jg
add
and
jmp
sbb
push
in
add
push
push
lock
jmp
xor
out
scas
add
lahf
or
adc
imul
push
enter
fnsave
mov
mov
xor
mov
or
xor
clc
shll
imul
sub
in
adc
imul
test
shll
scas
adc
push
xor
in
sub
repz
stos
jmp
ficoms
das
mov
cmpsb
rol
out
adc
and
sbb
gs
lcall
mov
adc
in
mov
mov
outsb
jbe
xlat
sub
inc
loope
imul
lods
cmc
jmp
icebp
aam
cmc
addr16
ret
pop
scas
lret
or
loop
pop
mov
out
add
or
push
sbb
leave
out
xor
and
insb
xor
gs
cmp
stos
ret
xchg
cmp
dec
mov
sarb
vstmxcsr
push
pop
jno
dec
cmc
mov
lret
rcrb
dec
xlat
inc
es
fdivl
int3
xor
fs
and
mov
insb
lret
repnz
pop
xchg
sub
sbb
adcb
dec
mov
add
mov
mov
ret
pop
ret
pushf
movsb
stos
cltd
jl
leave
and
push
pop
rcll
xchg
jle
mov
lret
daa
sbb
mov
sti
test
ja
and
std
and
jns
xchg
ljmp
xor
xor
out
fcoms
imul
adc
insl
lock
or
movsb
adc
notl
daa
movsl
add
dec
mov
mov
in
mov
jp,pn
repz
jo
sub
jle
sbb
mov
fidivl
rorb
loopne
ret
loopne
pushf
jne
cltd
fdiv
push
mov
fidivrs
mov
mov
insl
fs
mov
mov
dec
mov
cmp
lock
xchg
mov
sbb
jae
movsl
sbb
sbb
aam
dec
dec
popa
push
xor
stos
lds
and
out
dec
inc
mov
inc
shrb
mov
sbb
add
xchg
xor
or
jle
jp
xor
testl
movsl
mov
mov
and
xchg
push
fst
cli
out
in
and
push
shll
popf
mov
inc
xchg
cmp
adc
stc
lahf
and
mov
cmp
sahf
loop
cmp
inc
out
pusha
mov
adc
insb
and
int3
icebp
and
push
nop
hlt
or
xorl
sbb
std
jle
fistpl
dec
inc
loop
lock
insl
pop
arpl
or
shlb
jle
call
rclb
fmul
adc
mov
fwait
and
or
cmpsl
xchg
cmp
inc
cmpsl
std
inc
mov
xchg
movsl
xorl
pop
adc
insb
insl
xchg
dec
xor
bound
fstl
inc
add
jmp
movups
xor
repz
pop
fwait
pop
or
adc
sub
ret
push
xchg
movsl
fnstcw
pop
jne
xor
or
dec
testl
test
push
mov
test
scas
mov
in
jb
outsb
ljmp
and
and
cmpsl
ds
mov
daa
sub
outsb
std
sub
out
push
mov
js
and
jmp
adc
aam
pop
ja
popa
push
jnp
and
js
filds
add
or
mov
inc
out
sbb
repz
and
lret
adc
adc
outsb
test
push
adc
and
mov
outsl
pushf
adc
push
out
add
push
incb
cmpsl
push
push
and
addb
cmpsl
sbb
mov
mov
jge
jnp
sbb
mov
mov
cs
lcall
lret
cmp
and
aad
test
adc
dec
dec
test
fwait
adc
mov
fnclex
jae
jbe
dec
pop
push
adc
in
scas
pusha
xor
rorb
pop
js
testb
movsl
pop
jle
push
test
adc
icebp
mov
sbb
repz
push
dec
inc
add
push
lret
cli
dec
xchg
jbe
mov
aaa
jbe
sbb
push
nop
inc
ret
or
popf
pop
loop
or
jae
add
xchg
into
jmp
dec
lea
jmp
jecxz
mov
xor
sbb
cs
pop
cmc
imul
xor
inc
or
mov
sti
icebp
pop
ss
imul
pop
js
jnp
lds
xchg
scas
rcrb
mov
aaa
xor
pop
jmp
das
xor
sub
xor
roll
dec
push
inc
clc
xor
out
daa
idivb
popa
mov
stc
xchg
sarl
pop
mov
mov
fwait
pop
push
xor
sbb
iret
cmc
mov
adc
or
push
or
dec
mov
push
cmpsl
xchg
jecxz
and
xlat
aad
mov
mov
push
repnz
sub
inc
dec
cld
fwait
and
dec
push
sub
adc
and
push
cmpsl
mov
pusha
inc
rolb
ljmp
addr16
addl
les
clc
dec
movsb
fs
mov
mov
fwait
cwtl
add
es
popf
mov
stos
pop
aas
push
xor
add
ret
xor
pop
or
ds
sysret
mov
add
lahf
repnz
pop
cs
daa
jno
into
inc
bound
adc
jbe
fwait
sbb
sbb
stos
push
call
iret
dec
inc
in
mov
dec
add
fisubl
jns
cmp
jne
xchg
sbb
add
push
imul
dec
jl
nop
sub
sbb
mov
imul
push
hlt
movsb
mov
dec
popa
dec
adc
mov
sub
stos
imul
and
mov
pop
sub
cmp
sbb
rclb
ja
loop
scas
mov
and
in
dec
inc
insb
pop
dec
and
add
cmp
stos
push
cs
fmuls
negl
xor
dec
sub
jno
cmc
scas
pusha
push
mull
cmp
xchg
shl
repnz
or
jo
jns
and
push
ret
sub
inc
mov
enter
pop
inc
fimull
inc
and
pop
xchg
adc
or
or
inc
jg
adc
mov
or
xchg
movsb
loope
mov
mov
fwait
int3
pop
lret
add
inc
scas
lock
sar
mov
push
movsl
sarl
fsubrl
arpl
jmp
loope
imul
daa
or
xor
shl
or
pop
jl
pop
sbb
je
pop
lea
jne
loope
push
push
inc
out
cmpsl
mov
int
push
aaa
insb
lret
in
sbb
lods
dec
hlt
std
push
lods
or
or
test
andl
clc
cwtl
movsl
pushf
mov
cmp
xchg
cld
pusha
pop
mov
mov
cmp
movsl
mov
add
imul
jg
fsubr
xor
test
in
sbb
add
insl
lea
jmp
fs
sub
inc
jg
or
shlb
loop
mov
push
jecxz
test
test
jge
ret
sub
add
cld
adc
xchg
dec
mov
in
xchg
push
cmp
outsb
push
pop
push
imul
pop
and
cmp
push
push
fisttps
jmp
stos
nop
inc
clc
dec
mov
pop
pop
cmp
or
movsb
xchg
repnz
adc
pop
cltd
aaa
divb
aam
ss
xchg
xchg
xchg
stos
xor
stos
inc
setno
inc
mov
inc
rcl
out
add
push
xchg
xor
lock
pop
in
ret
sub
in
sub
dec
xchg
cmpsl
lods
pop
mov
dec
push
faddl
out
out
push
xchg
imul
push
imul
add
int3
in
pop
mov
push
repz
arpl
mov
std
out
scas
test
pop
bound
pop
jge
jae
test
dec
sub
sbb
cmp
and
in
or
sub
cmp
and
jmp
sub
jge
xor
insl
test
push
lock
ss
push
inc
shr
jmp
lods
negb
aaa
mov
cmpsl
mov
jmp
movsb
addr16
xlat
out
xchg
xchg
inc
addb
push
shll
ss
cli
call
jno
icebp
das
adc
adc
fcompl
and
mov
jae
sub
jo
lret
out
jmp
jae
xchg
jge
arpl
or
insl
xor
ret
lcall
ds
sbb
les
dec
mov
nop
and
xor
jge
mov
ja
jns
add
int3
outsl
and
inc
test
jg
scas
fdivs
call
sub
outsl
inc
jae
lret
and
movl
dec
loope
mov
push
ficomps
aam
stc
jp
movsl
inc
imul
lock
cltd
fidivs
dec
and
mov
stc
lds
mov
add
jmp
stos
push
pand
adc
push
adc
sbb
je
nop
and
or
lret
int
sbb
lea
push
xor
push
cmp
mov
repnz
pushf
jbe
dec
push
out
popa
mov
jbe
jbe
fdivrs
cltd
jns
out
enter
push
std
adc
xor
repnz
enter
jmp
lock
out
push
les
pop
xchg
mov
lret
test
mov
stos
inc
lods
xlat
mov
fcomps
pop
addb
inc
loope
jae
cltd
int
adc
cmp
lcall
fcomip
xor
push
mov
cmp
xor
in
pop
sub
loope
sti
loopne
xchg
mov
push
mov
les
int3
and
cmpsl
scas
rolb
inc
cmp
push
fucomp
fisubrl
dec
ret
xor
jns
in
mov
mov
adc
sbb
shl
das
mov
or
mov
or
imul
sahf
push
outsl
out
pop
cmp
rclb
test
fst
hlt
sarl
push
mov
xchg
mov
shll
jae
sub
out
aad
and
cli
dec
push
hlt
or
out
shl
or
scas
data16
or
outsb
push
cmp
and
cmp
xchg
inc
sub
push
dec
push
cmpsl
add
push
mov
mov
jecxz
test
je
mov
mov
dec
imul
hlt
andb
lods
pop
std
pusha
jmp
cmp
pop
adc
in
pop
adcl
ret
adc
shll
dec
xchg
mov
pop
ja
hlt
out
mov
cltd
xchg
test
hlt
ljmp
or
inc
cmc
inc
cli
stos
in
adc
xchg
test
and
xchg
and
pop
shr
xchg
push
js
xor
mov
adc
jl
sbbl
mov
imul
xor
push
jne
inc
cmp
xchg
scas
ret
cmpsl
cmpsl
dec
add
loopne
movntps
xchg
into
pop
fisubs
pop
dec
pop
imul
xchg
mov
sahf
fwait
inc
cmp
jae
xor
aad
das
adc
pusha
sub
mov
or
jno
iret
mov
xchg
mov
ja
lock
add
xor
js
pop
xor
mov
rcr
ss
push
add
movlps
dec
clc
or
sbb
and
rolb
jle
xor
push
cmp
lods
repz
call
jge
jle
or
push
in
xlat
mov
sahf
pop
push
mov
std
sub
jg
mov
neg
jl
test
into
mov
add
filds
add
mov
cmpsb
test
leave
insb
mov
pop
testl
xor
test
push
or
pop
daa
or
cmp
sbb
adcb
cwtl
je
loope
adc
andl
and
jle
push
jne
ss
sub
arpl
sub
inc
push
lds
pusha
mov
jbe
adc
adc
loopne
mov
outsl
push
and
sub
fucom
push
xchg
pop
adc
daa
sub
inc
mov
test
add
cli
sub
push
cld
stos
stc
push
out
gs
aas
dec
addl
and
mov
mov
mov
push
mov
sub
push
inc
xor
aam
push
mov
fcmovnu
je
popl
push
dec
sahf
or
insb
mov
mull
xchg
rorl
xlat
pusha
push
dec
add
jecxz
fsubrl
mov
adc
jg
pushl
test
add
cmp
mov
inc
arpl
sub
test
icebp
int
outsl
jmp
sub
lods
or
repz
pusha
and
or
stos
test
push
sub
cmp
sbb
fbld
pop
dec
aaa
dec
fadds
testl
dec
idivl
in
aaa
jmp
nop
xchg
scas
outsl
add
js
outsl
sbb
dec
in
xchg
roll
pushf
and
pop
and
dec
mov
popf
dec
sti
xor
cs
xchg
cmpsl
xlat
in
in
sbb
lcall
jge
cltd
imul
ret
cmpsl
add
dec
popf
pop
test
loopne
pop
aaa
out
mov
movb
push
jecxz
xchg
xor
ja
ret
inc
scas
adc
scas
insb
jg
ljmp
pop
jg
neg
repz
stc
mov
sbb
jp
jle
jp
popf
xchg
test
sbb
scas
loopne
scas
mov
sub
or
push
imul
xchg
loopne
xchg
push
hlt
cmpsl
push
in
xchg
add
jo
pop
repnz
incb
insb
and
pop
andb
mov
je
inc
adc
shrl
push
jno
fidivrl
dec
je
push
add
and
test
jp
xchg
mov
dec
movsb
pop
jae
js
jae
jg
push
movsl
rolb
lahf
cmp
and
sbb
into
pop
lea
mov
divb
arpl
dec
pop
aas
pop
icebp
aas
mov
sub
shll
jbe
ret
add
mov
les
addr16
outsl
pop
xor
jns
in
cmpsb
call
add
xor
jbe
or
jp
xlat
jbe
jmp
push
jnp
dec
dec
shll
xor
add
pusha
push
sub
and
pop
or
lret
jns
adc
mov
pop
jae
arpl
mov
dec
ret
data16
ds
and
push
incl
fdivrl
je
arpl
xor
inc
outsb
mov
xor
xorb
pop
insb
mov
lds
je
arpl
sahf
fs
cmp
sbb
fs
hlt
jb
jmp
je
push
jle
sbb
in
cwtl
lcall
mov
mov
mov
adc
ja
in
dec
dec
pop
fldenv
stos
movsl
fs
pop
mov
sub
push
pop
andl
inc
scas
adc
mov
add
push
rolb
call
push
inc
shll
test
and
iret
stc
jp
pop
dec
lret
sbb
sti
cmp
negb
inc
adc
aas
push
insb
push
push
cmp
movsb
xchg
xor
std
pop
loope
pop
fstl
inc
test
xchg
push
mov
cmpsb
decb
dec
mov
cmp
jno
xchg
ficomps
enter
ja
adc
pusha
sbb
or
mov
fcomip
push
sar
popf
jl
pusha
fs
aad
xor
mov
int3
fldl
add
mov
bnd
andl
xchg
call
push
out
loop
repnz
push
icebp
js
xchg
xchg
jle
es
adc
sbb
jnp
sbb
les
xchg
fidivrs
pop
aad
pop
outsb
jle
sub
lods
push
lock
pop
lds
and
lahf
ja
mov
cmpxchg
fbld
mov
sbb
pop
jae
bound
int
das
cmp
imul
sub
scas
cwtl
testb
ja
or
out
push
js
neg
sbb
fnstcw
inc
pop
into
push
out
adc
jae
jae
jno
movb
mov
or
rorl
notb
xchg
icebp
loope
adc
jge
pop
bound
mov
add
add
mov
in
push
and
shrl
in
mov
pop
inc
popf
add
ret
shl
imul
xor
push
popf
mov
xchg
sub
icebp
out
loop
pop
jns
mov
mov
mov
fbstp
adc
mov
in
adc
mov
insl
test
inc
ja
inc
mov
repz
jnp
and
fmuls
mov
jne
add
pop
sti
sar
jo
xor
push
aas
ljmp
and
popa
jbe
or
cmp
jno
mov
hlt
pop
jg
push
add
imul
adc
inc
mov
mov
fs
adc
jp
jecxz
xor
and
jb
sbb
int3
inc
ss
xor
in
lods
cmp
mov
int3
xor
icebp
dec
cmc
xchg
mov
cli
daa
xchg
or
push
mov
sbb
sbb
mov
vmovdqu
fsts
push
jo
or
jmp
enter
js
jmp
jno
stos
adc
and
xchg
cmp
shr
arpl
add
jbe
ds
out
adc
mov
dec
xchg
mov
mov
xor
pop
je
push
sub
pop
ret
xchg
mov
fsubrs
ljmp
lea
outsb
int3
lahf
mov
mov
popf
sbb
in
or
stos
loope
mov
xor
jl
lods
pop
dec
xchg
orb
add
xchg
jl
fildl
ficoml
push
mov
dec
in
pop
test
test
sarb
pop
sbb
inc
dec
and
xchg
mov
mov
mov
lods
iret
rorb
lret
scas
mov
dec
mov
cmp
cmpsl
mov
or
xchg
sbb
or
ffree
or
and
jl
mov
lcall
push
fistpll
lods
in
mov
mov
test
mov
loop
mov
jnp
repz
push
jg
movsl
cwtl
push
icebp
sub
nop
dec
shl
mov
jecxz
lret
sbb
aas
movsl
loopne
and
xor
orb
xchg
repz
xor
shrb
mov
pushf
lahf
out
shrb
cmp
mov
or
divl
sbb
jbe
jns
js
call
or
xor
repz
mov
xchg
mov
ret
inc
fwait
lods
or
ret
or
fmul
mov
fs
stos
ss
dec
inc
inc
mov
pcmpgtw
add
adc
mov
jle
mov
fsubs
bound
leave
cmp
or
lret
xchg
and
test
subl
cmp
adc
push
or
ljmp
cltd
stos
mov
push
xchg
aaa
jle
or
sbb
adc
aaa
fnsave
bound
or
or
enter
int3
inc
inc
inc
movb
inc
ret
insl
xchg
out
stos
push
cli
scas
daa
adc
xchg
inc
cs
mov
dec
cmp
pop
jmp
sbb
cmp
add
test
aaa
xchg
daa
push
cmp
sahf
insb
sahf
loopne,pt
icebp
clc
xor
push
loop
cli
mov
es
xor
push
mov
test
cltd
stc
inc
movsb
lret
sub
enter
sub
jbe
lods
pop
inc
sar
fwait
xor
test
jno
gs
outsl
jl
push
push
gs
mov
aad
iret
jge
dec
clc
mov
jo
xchg
lds
pop
sub
gs
add
jns
pusha
inc
add
jl
pop
sub
ret
out
xlat
dec
call
cmp
pop
inc
xor
xchg
in
dec
dec
into
mov
xchg
push
pusha
lcall
mov
outsl
loopne
inc
push
push
jecxz
repnz
sbbb
scas
inc
pop
push
dec
bound
outsb
add
adc
and
xor
ret
into
loop
repnz
sbbb
scas
inc
pop
push
dec
bound
outsb
add
adc
and
xor
ret
dec
bound
out
add
xor
bound
outsb
add
adc
and
xor
ret
into
loop
repnz
sbbb
scas
inc
pop
push
in
jle
sbb
push
roll
test
mov
loopne
mov
shll
push
adc
xor
mov
inc
jno
andl
rcl
loope
fbstp
add
adc
pop
xor
addr16
push
popa
inc
jno
daa
cmpsl
push
xchg
cmp
cltd
xlat
jmp
ret
aaa
add
xor
bound
adc
aaa
ja
sub
fcomi
xlat
aam
into
sub
hlt
xor
arpl
jnp
repz
add
sub
aad
dec
not
call
push
inc
fsubr
dec
fimuls
push
pop
ljmp
cwtl
clc
out
repz
mov
aaa
add
inc
and
iret
leave
mov
lods
aam
add
mov
imul
and
jl
test
icebp
push
fsubrp
xor
sahf
dec
or
les
pop
repnz
rcl
and
or
inc
roll
and
cmove
xor
outsb
sbb
mov
and
xchg
add
enter
testl
sbb
or
xchg
xlat
loope
arpl
add
mov
ja
addr16
ret
and
fnsave
mov
popa
js
arpl
push
sub
cmp
in
jecxz
iret
fstl
mov
outsl
jae
add
adc
pop
add
add
repnz
int
fnsave
loope
icebp
aaa
add
adc
and
xor
addr16
push
popa
inc
jno
andl
rcl
loope
icebp
aaa
add
adc
and
xor
addr16
push
popa
inc
jno
andl
fsubs
dec
jle
xchg
mov
movsl
jbe
xor
dec
cmp
fistpll
test
outsl
push
sub
orl
pop
test
cmpsl
jbe
popa
jp
adcb
xor
or
pusha
test
lret
lods
inc
push
stc
gs
push
sub
dec
stc
sti
test
ss
ss
loop
jne
cmp
ja
jne
dec
sub
sbb
pop
fnstcw
gs
pop
pop
out
cmp
add
cmp
stc
fstl
les
rclb
sarb
jg
pop
cltd
test
data16
nop
out
orl
cmp
mov
jno
add
jge
enter
push
mov
xor
loop
sbbb
aaa
add
insb
push
jge
mov
xor
fld
jl
inc
push
repz
push
jg
push
mov
fmulp
inc
xchg
cmp
movsl
cmpsb
cmp
jbe
cld
ja
jo
ficompl
cmp
inc
ss
and
popf
push
adc
push
fimuls
pusha
xor
addl
cmp
jecxz
call
cltd
addr16
pop
aas
inc
std
sub
pop
sub
cmpl
lea
mov
push
sahf
sbb
or
dec
daa
repnz
getsec
adc
lret
test
inc
mov
subb
mov
ficoms
xchg
push
scas
es
cwtl
add
cld
rcrl
cmp
cmpsl
daa
dec
in
in
cmp
add
and
enter
shlb
cmp
call
sbb
pop
cld
push
loop
pop
loop
movsl
jns
mov
jge
mov
popf
imul
mov
imul
add
fcmovu
xor
sarl
cmp
jne
stc
loopne
xor
insl
push
xor
insb
imul
adc
addr16
out
cmp
add
int3
outsb
out
mov
pop
adc
scas
pop
xor
inc
mov
int
daa
imul
outsl
fstpl
cmp
mov
data16
jmp
mov
jg
sti
popf
jns
sub
mul
hlt
inc
rorb
in
dec
push
inc
push
pop
cs
or
roll
out
ret
bound
jp
jb
dec
mov
insl
mov
out
sbb
xchg
lcall
adc
or
pop
adc
loope
int
repnz
mov
dec
test
mov
and
sbb
xchg
loope
adc
ds
jo
fldl
jb
mov
cwtl
out
and
fists
cmp
test
cs
call
in
in
inc
sti
pusha
adc
inc
inc
cli
lea
sbb
jbe,pt
es
test
sub
push
aad
pop
xchg
pop
cmp
jmp
dec
int3
mov
xorl
lahf
les
int3
gs
mov
nop
les
dec
push
xchg
ret
inc
pop
pop
adc
xorl
add
mov
test
cld
jbe
in
mov
fbstp
into
mov
in
movsb
and
in
iret
cmp
aaa
loop
sbb
or
scas
fdivl
aam
mov
lds
imul
imul
cwtl
mov
push
ror
repz
cli
adc
pop
push
cmp
aas
in
mov
fcompp
in
es
or
movsb
lods
pushf
fmul
dec
sub
arpl
mov
stc
sub
int
aaa
dec
mov
stos
sbb
xor
xlat
pmulhuw
fidivrs
sahf
shlb
push
pop
sub
push
lods
daa
jns
scas
or
jo
sbb
fmul
repnz
rorb
or
ss
clc
xchg
in
add
ljmp
inc
aaa
mov
fsubs
std
xchg
int
cmp
xchg
loop
pop
xchg
or
jns,pt
outsl
xchg
adc
cs
aas
jmp
dec
lcall
cmp
add
lods
ds
mov
push
xchg
negb
cltd
out
inc
mov
lock
mov
cmc
adc
cwtl
xor
adc
cmpb
daa
cmp
notl
cmpsl
cmpsl
testl
add
mov
stos
scas
addr16
xchg
mov
mov
cmpb
cli
pop
pop
pop
lods
fwait
pop
lock
or
shlb
or
hlt
adc
and
out
mov
mov
pop
aas
push
push
pop
icebp
stos
cmp
mov
cmp
xchg
dec
daa
push
inc
lcall
inc
xor
pop
repz
lds
xlat
aad
xchg
fisttps
push
cwtl
cmp
dec
and
mov
or
sbb
sub
inc
inc
fdivp
fs
scas
lods
xchg
and
out
pop
cwtl
fsubp
bound
nop
jns
test
inc
sbb
ficomps
mov
imul
jb
and
inc
cwtl
xchg
xorl
ret
or
mov
xchg
cld
out
inc
shlb
adc
xchg
mov
mov
inc
mov
mov
pop
out
ret
cmp
nop
jecxz
ret
imul
sub
xchg
mov
pop
in
mov
cmp
int3
jo
xor
testb
dec
cwtl
icebp
xchg
cld
loope
ficompl
mov
jmp
mov
xchg
cmpb
xchg
iret
push
xor
enter
sbb
jmp
adc
dec
std
xor
xchg
stos
xchg
xchg
pop
dec
movsb
add
loop
insl
adc
outsl
mov
sbb
cmp
loop
pop
mov
mov
jb
insl
jmp
sbb
dec
leave
scas
push
testb
ss
mov
insl
fistpl
leave
dec
and
lods
into
xor
jge
int3
adc
jmp
mov
push
push
mov
add
mov
jne
in
loopne
int3
jae
adc
popf
sbbl
dec
iret
mov
jp
cmpb
clc
mov
loopne
arpl
cs
loop
dec
pop
pushw
mov
xorl
mov
in
xchg
les
jb
xor
lahf
mov
iret
sub
mov
push
movsl
mov
add
test
push
cmp
imul
jl
repz
inc
cmp
mov
lahf
pop
push
iret
jns
pop
xor
shl
or
aad
cs
inc
sbbl
shl
cmc
xchg
cwtl
movsb
mov
aad
rolb
push
mov
add
push
xor
add
fcomip
and
cmc
xor
pushf
add
pop
xorl
mov
int
cmp
cmpsb
xor
ljmp
aam
loop
in
movl
ret
inc
sub
lret
xchg
cmp
adc
fcomip
cmp
xchg
std
popl
jecxz
test
orb
or
pop
cwtl
pop
repz
xchg
mov
int3
jns
pop
xchg
pop
ds
inc
sbb
fiadds
push
mov
mov
inc
popf
jge
push
add
pop
mov
fs
jl
fstpt
add
or
ret
add
fiadds
xor
notb
ljmp
loop
data16
addr16
pop
push
jmp
adc
in
into
sub
push
loopne
subb
ja
or
mov
sahf
push
aad
cmp
outsb
cmpl
sub
outsb
sbb
push
pop
icebp
inc
out
cmp
jl
cmpsb
mov
cmp
pop
in
mov
cmpl
push
aam
mov
sahf
outsl
aas
stos
in
mov
test
stos
sub
popa
push
xchg
mov
add
sysret
lea
fs
adc
pushf
test
out
and
adc
xorb
scas
or
mov
mov
std
mov
mov
lods
sub
mov
dec
rorl
or
lods
dec
jno
sbb
outsl
data16
dec
int3
fadds
jecxz
jnp
mov
dec
les
stos
pop
xor
xlat
pop
adc
or
outsb
xchg
mov
inc
pop
test
dec
sub
int3
mov
testb
test
pushf
and
xor
inc
inc
jecxz
repz
adc
pop
or
shrl
scas
int
xlat
ficompl
and
xor
cmpsb
fildll
and
cmpsl
cld
cmp
ss
mov
sbb
nop
inc
dec
inc
cmp
sar
mov
sub
jne
shrb
push
popa
call
add
xchg
push
mov
shll
jp
cli
repz
loope
add
xchg
cmp
push
mov
gs
or
sbb
dec
les
push
sub
push
push
ja
in
hlt
sahf
push
pop
push
and
leave
ss
push
mov
sar
test
jo
addb
aad
inc
mov
js
push
aaa
out
dec
jecxz,pt
cwtl
pop
mov
addr16
cmp
cmp
addr16
mov
pop
add
data16
mov
add
xchg
pop
pop
xchg
sub
pop
stos
cli
ja
notb
push
dec
or
adc
push
nop
pop
mov
ret
sbb
adc
push
jmp
mov
adcb
adc
ss
call
into
pop
stc
xchg
test
sub
push
dec
aam
xor
scas
pushf
into
add
aas
cltd
rorl
adc
jmp
or
and
push
mov
lods
dec
jo
scas
dec
dec
loop
xchg
mov
dec
jb
je
mov
jecxz
add
add
sub
cwtl
add
ret
mov
push
jnp
nop
xor
fsubs
iret
lock
lods
insb
faddp
pop
jp
into
inc
sbb
dec
mov
sbb
dec
dec
add
jb
fstl
movsl
or
ss
inc
add
and
stc
mov
inc
lea
rcrl
pop
sbb
xchg
pop
mov
push
idivl
shrb
mov
and
add
pop
dec
push
or
push
js
subb
aam
push
and
push
inc
jne
mov
and
adc
cwtl
in
in
ds
iret
pop
js
daa
push
fwait
sbb
or
mov
jp
outsb
ret
int3
rclb
pusha
lods
lret
jae
iret
adc
dec
fisubrs
in
fildll
mov
sbb
pop
pop
fnstsw
push
dec
and
cvtps2pi
dec
mov
sbb
pop
xchg
push
mulb
test
dec
push
xor
inc
ror
les
mov
push
repnz
cmpb
out
xor
xchg
push
lock
insb
push
dec
pop
pusha
int
sub
mov
scas
mov
call
lret
lods
and
popa
insl
dec
xor
sbb
pop
xorl
test
in
jne
or
popf
add
loope
inc
mov
inc
or
notl
push
xchg
pop
xchg
test
mov
mov
dec
lea
dec
adc
push
je
lods
lret
mov
push
popa
cld
or
pop
mov
loop
jle
ficompl
dec
bound
cmpsb
sub
rcrb
pop
mov
cmp
dec
popf
dec
mov
adc
mov
repz
and
xchg
xchg
es
pop
es
arpl
xchg
mov
popa
push
inc
faddl
sub
and
mov
adc
cltd
adc
fidivl
in
int
sar
xor
sbb
cmp
or
jp
stos
jae
shll
dec
push
das
rclb
pusha
mov
in
cmpsb
lods
jmp
test
cmp
in
into
fwait
dec
push
aad
imul
ret
mov
sarb
sbb
rclb
xor
movsb
sub
bound
shr
clc
cs
mov
pop
cld
pop
inc
test
jbe
inc
xchg
out
dec
jge
xchg
mov
ja
in
sbb
mov
dec
jecxz
adc
mov
std
adc
out
testb
in
jl
cli
mov
rorb
loopne
xchg
lret
add
fadd
cmp
pop
sbb
loope
jno
push
jno
cmpl
addr16
pop
movsl
fsub
fs
cwtl
pusha
jge
sbb
int
xor
shr
inc
fadds
mov
fists
out
jle
ja
bound
daa
add
sub
insl
lock
adc
xor
outsl
mov
test
mov
dec
xchg
movl
stos
add
subb
mov
and
iret
push
pop
pop
aaa
inc
mov
jae
stos
xor
out
jg
mov
pop
mov
xchg
push
sbb
jnp
dec
sub
loope
leave
pop
pusha
jns
popf
xchg
push
add
adc
std
cmp
mov
test
cmp
mov
scas
aaa
mov
pop
aaa
outsb
xchg
xlat
inc
mov
vpcomd
pop
aaa
mov
sbb
daa
fisubl
fwait
mov
sbb
pop
jne
int
pop
push
xchg
sub
or
or
or
nop
add
fimull
push
push
cmpsl
mov
aaa
pop
sub
cltd
mov
cmp
inc
lea
std
fiaddl
and
inc
or
jo
stc
mov
test
pop
mov
add
inc
and
std
or
jecxz
sub
out
push
and
dec
fcmovnb
add
imul
adc
or
ds
out
cmpsl
cmp
inc
js
ficoms
test
pop
mov
sarb
mov
pop
jno
test
pop
fmuls
loope
mov
fisttpl
negl
andb
adc
pop
sahf
fisttpll
lock
lret
mov
pop
loopne
adc
and
jbe
inc
pop
mov
les
movsb
sub
or
push
pop
inc
aam
xchg
rcl
adc
add
icebp
in
sbb
inc
jne
sub
stos
movq
mov
push
aaa
icebp
lods
lret
scas
daa
push
jae
add
dec
pop
int3
es
dec
mov
outsb
cmp
push
mov
imul
leave
out
xlat
and
and
adc
lret
xchg
adc
sbb
stc
xchg
jl
sahf
sarb
ficompl
repnz
push
fdivrs
loope
adc
or
sahf
in
iret
shlb
dec
xchg
dec
imul
cmp
mov
aad
xchg
sub
mov
adc
jbe
adc
mov
pop
jbe
stos
mov
loopne
loope
push
call
and
sub
push
mov
cld
pop
jne
and
jmp
clc
sub
jo
shlb
dec
sbb
popf
pop
adc
and
lcall
call
in
xor
sarb
xor
mov
das
add
ss
pop
cld
call
mov
xor
out
pop
addb
sub
pop
jmp
mov
xchg
push
test
je
pop
cmpsl
push
mov
lcall
pop
insl
cmp
mov
xor
pop
or
stos
jp
lret
dec
sti
stos
xchg
xor
pop
pop
dec
sarb
pop
jnp
jge
adc
faddl
mov
jle
cmp
jmp
hlt
jo
jge
scas
scas
mov
mov
btr
pop
inc
int
jb
mov
push
fbld
in
gs
lcall
mov
mov
mov
sbb
pop
test
call
or
out
add
and
cmpsl
jmp
push
outsl
dec
adc
or
push
ret
xchg
adc
adc
dec
dec
xchg
je
fists
mov
clc
loopne
adc
add
push
push
addb
cmc
aam
lahf
callw
pop
push
shl
mov
fnstsw
ljmp
jp
cmpps
xchg
pop
test
imul
mov
mov
jecxz
mov
inc
xor
outsb
add
jmp
test
adc
lea
xor
repnz
inc
loopne
or
out
daa
lcall
cmp
repz
jno
arpl
imul
es
aad
cs
sbb
adc
mov
cmp
cmp
lea
andb
in
sbb
xchg
pop
pop
push
push
in
mov
pop
idivb
out
xchg
hlt
iret
outsb
lret
xor
sbb
test
mov
sahf
cwtl
push
out
shl
jae
ds
in
fs
dec
test
and
cmp
out
bound
jno
imulb
mov
rdtsc
dec
ss
push
inc
out
mov
dec
mov
cmpl
pop
lods
push
cmp
push
xlat
xchg
fwait
mov
iret
dec
imul
test
in
xchg
jg
jmp
mov
cmp
ret
or
mov
mov
repnz
jg
lcall
mov
lcall
push
xor
mov
movsb
mov
lock
das
lcall
adc
in
sahf
pushf
sub
inc
in
pop
pop
cld
sbb
sbb
scas
out
aad
fisttpll
pop
dec
leave
pop
and
sub
clc
in
pop
lods
and
pop
int
imul
imul
movsl
or
push
add
jns
sahf
ds
outsb
adc
jo
cmpsl
popa
dec
cmp
das
adc
mov
scas
imul
enter
bound
jp
inc
popf
pop
rcr
lds
shrb
fcmovbe
cmc
dec
xchg
add
xor
mov
stc
cltd
or
popa
loop
cmc
nop
in
data16
add
shrb
jp
pusha
rorl
enter
mov
cmp
insl
mov
sbb
sbb
rolb
dec
xlat
push
lcall
cmc
loopne
popa
sti
mov
shlb
jmp
xchg
out
data16
scas
les
mov
inc
repz
jbe
pop
fildll
sbb
push
leave
adcl
stc
add
xor
je
xor
and
out
pusha
jg
jge
jae
add
adc
and
enter
inc
loop
push
rcl
addr16
dec
lret
lahf
leave
lret
mov
in
push
xchg
test
mov
push
push
sti
rclb
or
jne
jo
push
xchg
mov
scas
mov
test
push
popa
mulb
scas
and
add
in
shlb
rclb
jb
iret
scas
add
xor
push
dec
flds
mov
sbb
es
add
insl
mov
loope,pt
out
push
cmc
jl
out
sahf
mov
ljmp
out
mov
clc
mov
mov
adc
sub
out
jns
fmull
das
mov
jnp
out
ficomps
std
loop
fmuls
int
mov
hlt
pop
inc
aad
test
and
mov
dec
xor
jne
lcall
loop
adc
andb
addr16
arpl
xchg
cmpsl
add
mov
sub
in
sbb
sub
hlt
mov
arpl
xorb
and
in
xchg
inc
pop
sar
jle
mov
aaa
push
int
jns
mov
stos
mov
pop
les
push
js
pop
adc
jmp
and
cmp
mov
cmp
sbb
out
push
xchg
mov
add
xor
sub
cltd
inc
out
out
call
loope
rcrl
inc
mov
loopne
and
repz
fistpl
pop
dec
daa
push
icebp
xchg
test
cmpsb
out
push
inc
pop
mov
pop
loop
pop
frstor
fs
jne
sub
es
sub
mov
push
pop
imull
in
ja
cs
inc
test
jns
jno
movsb
scas
mov
mov
pop
mov
push
push
enter
mov
or
mov
jmp
out
cmpl
movsl
push
dec
jle
inc
mov
mov
aad
pop
pop
mov
rorb
mov
int3
mov
insb
jo
lock
sub
jne
rclb
add
sub
add
sub
inc
inc
stos
jecxz
xchg
jnp
push
ds
shrb
imul
subb
scas
adc
mov
xor
inc
sbb
lods
cmpb
mov
cmpsl
jnp
mov
sbb
push
repz
xchg
or
ds
inc
out
js
jg
pop
sbb
push
xlat
add
es
lcall
jne
sub
movsb
cmp
lds
mov
mov
xlat
mov
dec
push
mov
fcmovu
push
aaa
mov
pop
cmp
or
movsl
lcall
mov
mov
mov
mov
cmp
das
iret
popf
dec
ficomps
idiv
js
sub
arpl
xor
push
leave
inc
pop
cmp
xchg
pop
jno
add
mov
ja
mov
jnp
pop
ficoms
or
aas
lods
inc
jl
dec
arpl
lods
fdivrl
cmc
je
and
imul
mov
dec
push
jecxz
ljmp
mov
xor
fadd
scas
aad
das
es
das
seta
imul
mov
xchg
outsb
shr
lock
mov
adc
mov
les
jno
movsl
loop
pop
and
insl
jp
jne
xchg
push
shl
xlat
loope
icebp
aaa
add
adc
and
xor
addr16
push
popa
inc
jno
andl
rcl
loope
icebp
aaa
add
adc
and
xor
addr16
push
popa
inc
jno
test
mov
shl
xlat
in
icebp
aaa
add
adc
ja
addr16
push
push
cmpsb
jne
inc
xchg
test
xor
daa
mov
add
out
sub
mov
pop
lds
movsl
add
or
add
add
add
push
add
add
testb
add
add
add
add
add
scas
add
add
add
add
add
sub
add
add
ret
add
add
jnp
jo
bound
testb
add
or
test
popa
add
xchg
push
add
add
add
add
add
sbb
test
cmp
imul
bound
pushf
add
add
add
add
ljmp
add
and
add
add
add
add
add
add
add
add
add
add
add
push
add
xor
add
add
add
or
sub
add
add
add
add
cmp
adc
inc
add
test
push
add
add
mov
fiadds
mov
add
add
das
add
add
add
add
add
add
pushf
add
add
add
add
add
add
add
add
add
add
inc
add
test
add
add
sti
add
add
add
int3
add
jae
pop
add
add
or
inc
add
add
add
add
add
jg
lldt
push
add
add
add
fiadds
mov
add
add
jae
dec
add
add
add
add
add
dec
add
or
or
add
add
add
dec
add
add
jnp
jns
mov
add
add
add
add
int3
add
add
add
add
add
add
sub
inc
add
add
add
add
add
pushf
add
add
or
add
add
cmpsb
add
add
mov
add
add
add
add
mov
add
add
add
add
add
xor
mov
test
jl
fadds
cmpsb
add
add
add
cli
add
add
sub
inc
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
xchg
add
fiadds
jne
xor
add
popl
pop
add
add
add
cmpsl
add
outsl
add
mov
add
dec
add
add
or
add
add
add
push
add
add
add
add
add
add
filds
jae
jg
call
add
add
add
add
add
add
cld
add
add
filds
xchg
add
add
add
add
add
push
add
add
lea
xchg
add
sub
xchg
add
add
add
push
add
mov
add
add
add
add
out
add
add
add
add
push
add
add
add
add
add
lea
inc
add
add
add
add
add
add
add
add
pop
fwait
jmp
xchg
xchg
test
fimuls
pop
cmp
and
movsb
aad
cwtl
dec
clc
xor
and
fs
in
cmp
mov
xchg
xchg
mov
imul
xchg
mov
dec
in
negl
fisubrs
insl
pop
cwtl
lods
or
pop
fnstsw
pop
test
xor
adc
mov
pop
orl
leave
scas
push
fwait
xor
aad
out
outsb
adc
xor
mov
xlat
loopne
push
movsl
adc
jne
shll
add
outsb
mov
push
test
add
xchg
lea
popf
adc
fwait
sbb
dec
movsl
jmp
addl
adc
pop
push
fldenv
inc
jecxz
inc
push
pop
sbb
mov
xlat
inc
imull
notb
xor
arpl
mov
pop
les
cmp
lock
loop
cmc
mov
fdivrl
test
imul
sub
inc
xchg
dec
mov
fsubs
or
dec
out
loop
xor
cld
jle,pt
stos
dec
dec
sub
es
adc
or
mov
adcb
push
xlat
sbb
pop
pop
jmp
mov
rclb
data16
mov
pop
cltd
push
lret
popa
xor
xlat
dec
jl
dec
push
mov
imul
popf
rol
into
popa
push
adc
mov
call
fisubs
mov
mov
ja
inc
rorl
lcall
les
ret
fldt
adc
pop
xor
fwait
sub
adc
push
adc
push
push
xchg
pusha
fldt
xchg
push
lahf
out
popf
pusha
je
icebp
inc
push
push
shlb
xchg
mov
loop
insb
daa
push
stc
add
inc
cmp
jo,pt
leave
pop
js
daa
pop
out
repnz
cltd
ret
mov
mov
sbb
push
xchg
sub
mov
mov
mov
out
sub
mov
mov
sub
mov
loopne
fwait
and
add
rolb
pop
scas
sbbb
jne
sbb
orb
test
jns
xchg
sub
cmp
inc
sbbb
mov
pushf
test
ffree
inc
nop
js
jge
add
and
in
aad
imul
inc
stos
jb
cmp
std
stos
daa
imul
insl
push
sub
ret
mov
outsb
pusha
inc
jnp
outsb
fwait
adc
lods
mov
mov
sub
jns,pt
test
fisubrl
es
insb
lahf
cmp
andl
or
sub
test
xor
add
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
