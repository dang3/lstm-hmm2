push
call
ret
ret
mov
aad
sub
jge
sbb
cli
ss
pop
and
jne
aam
sbb
dec
pop
mov
lods
lret
or
adc
mov
ret
imul
mov
dec
pop
mov
shl
gs
add
shr
jecxz
jle
adc
jmp
outsb
pop
sti
idiv
xor
dec
roll
in
jne
arpl
xor
sub
call
pop
cmp
pop
pop
iret
lcall
xchg
pop
xor
lock
add
pop
ja
xor
in
hlt
scas
lods
int
inc
and
out
repnz
or
cmp
adc
jge
outsl
adc
push
sbb
arpl
mov
nop
cmp
push
xchg
mov
dec
or
dec
stc
pusha
mov
push
es
sahf
nop
ret
imul
nop
js
divl
popf
and
inc
cmpsl
cli
sbb
and
cmp
in
insb
mov
jge
loopne
out
test
dec
cmpsl
data16
loop
cs
or
xchg
icebp
fwait
out
dec
gs
call
pop
ret
cmpsb
pop
or
cmpb
aam
fwait
xchg
mov
jge
lods
xor
stc
push
jl
and
sbb
mov
sbb
imul
and
jnp
push
xchg
dec
and
fwait
call
pusha
jae
ret
mov
leave
mov
add
mov
fildll
in
out
mov
push
pusha
add
xchg
jb
and
outsl
pop
nop
out
daa
dec
dec
andb
outsb
loope
pusha
mov
lock
add
or
xchg
push
push
or
jne
in
cs
inc
outsl
dec
and
add
test
subl
add
cmpsb
jae
movsl
xchg
lret
fwait
outsl
mov
sbb
cmp
jno
mov
adc
push
xchg
cwtl
repz
daa
test
std
movb
neg
cwtl
jle
out
sbb
mov
jne
leave
jbe
lods
enter
xchg
mov
cmp
bound
ljmp
std
sbbl
out
lea
push
mov
out
shlb
imul
adc
adc
pop
cmpsl
fwait
mov
cmp
cmp
xchg
xchg
mov
inc
js
mov
push
movsl
push
xchg
and
popf
mov
cmp
nop
add
xchg
push
inc
push
je
insb
in
pop
outsb
popa
je
mov
in
adc
inc
out
insb
inc
cmpsb
das
fidivrs
xor
adc
jmp
outsl
cwtl
fs
xor
push
imulb
lcall
lds
add
or
loop
sti
mov
sbb
aam
mul
loopne
icebp
add
insb
rclb
lret
fdiv
cs
xchg
mov
adc
clc
xor
jl
pop
push
ret
mov
inc
les
adc
xchg
repz
sbb
push
xchg
and
mov
inc
inc
jg
negb
mov
jecxz
cmp
mov
or
shl
mov
cmp
jge
and
jle
insl
fidivs
fwait
add
repz
pop
sti
cltd
add
dec
sti
cmp
rsm
mov
mov
pop
shrb
addr16
or
mov
mov
mov
insl
bound
xlat
xchg
jns
pop
push
adc
mov
ret
xor
arpl
imul
sbb
mov
insl
mov
mov
and
cmp
test
pop
ror
inc
ret
push
pop
addl
shrb
sbb
aaa
sbbl
push
sub
jle
scas
pop
scas
repz
push
sbb
call
movsl
mov
shlb
jp
repz
mov
mov
pop
cwtl
dec
punpckhbw
sub
sbb
xchg
pop
sbb
in
popf
out
push
out
inc
sbb
repz
ja
inc
movsl
les
push
inc
out
test
jbe
iret
jl
mov
imul
int
and
sbb
or
cli
jnp
cld
movups
mov
sub
imul
jbe
add
mov
xchg
push
incl
les
mov
xchg
or
pushl
mov
sbb
mov
movsl
cmp
stc
sti
push
arpl
cmp
stos
ss
rcll
negb
cli
push
movsb
scas
xchg
cmp
cmpsb
stc
sbb
mov
pop
fucomi
icebp
push
lret
inc
dec
add
cltd
lods
sub
mov
leave
and
aam
mov
xor
jo
out
in
icebp
stc
mov
jne
fistl
mov
dec
cmp
cmpb
scas
in
adc
cld
xor
jne
sbb
loopne
jl
inc
dec
movsb
shl
dec
ret
cwtl
sbb
mov
imul
push
shlb
pusha
jg
leave
push
xlat
xchg
mov
out
jmp
mov
mov
mov
lock
ljmp
es
cli
aaa
repz
xor
jne
adc
mov
or
cmp
xchg
lods
repz
xchg
sub
dec
rorl
jmp
cmp
xor
mov
stos
xor
adc
or
mov
push
dec
sbb
jmp
sub
pop
add
lret
lods
pop
js
repz
ret
or
jne
jge
addr16
mov
mov
sbb
dec
shrb
add
jecxz
fistpl
arpl
push
push
and
fildll
mov
test
stc
lea
jns
mov
dec
icebp
sbb
ljmp
xchg
jnp
out
sub
cmp
pop
add
jmp
inc
jp
lahf
int3
shlb
repz
out
jl
push
lret
jae
mov
sub
push
push
add
cmpsl
xorb
ljmp
dec
cmp
cmp
pop
push
dec
aad
add
int
dec
rolb
in
push
lea
fisttpl
stos
insl
push
cli
add
adc
add
mov
ficoms
dec
xlat
mov
inc
cmp
xor
shll
push
dec
add
xor
sub
test
mov
test
dec
cmpsl
mov
rorl
inc
lahf
hlt
aam
cmc
xlat
cmp
stos
and
idivb
add
and
jmp
inc
jecxz
xor
inc
cmc
popa
or
xchg
movsl
out
aad
or
mov
inc
aas
int
bound
lds
cmpsl
ljmp
xchg
ds
std
outsb
push
xorb
cli
jmp
out
je
mov
js
rcrb
es
fmul
gs
push
push
out
lret
xor
inc
adc
pmullw
adc
xor
in
test
jne
mov
add
mov
cmpb
adc
sti
bound
stc
pop
in
icebp
or
aas
js
es
aam
and
sub
inc
inc
mov
xchg
insb
xor
jbe
mov
daa
cmpsb
push
cmp
in
xor
jo
and
push
mov
std
out
dec
repnz
daa
xor
mov
push
sub
int3
mov
xor
push
movsl
fldl
mov
sub
fidivs
scas
fnstenv
insl
xchg
imul
inc
std
and
xchg
xchg
out
jnp
out
sbb
adc
pop
inc
lea
mov
cmp
mov
inc
in
cmp
jb
icebp
cmc
push
mov
inc
stc
mov
cmp
jmp
lahf
loope
roll
jmp
in
inc
inc
mov
call
rorb
xor
and
rorl
push
jne
lahf
mov
ss
dec
or
out
movsl
sbb
and
icebp
jo
mov
out
js
out
or
pop
gs
sbb
pop
out
sub
insb
movw
nop
dec
hlt
into
idivb
scas
cli
push
cltd
inc
push
imul
stos
sub
insb
shrb
jg
in
cmp
notb
neg
call
add
adc
shrl
xor
cs
rol
push
push
mov
cmp
je
pop
add
out
add
adc
in
icebp
xchg
inc
popf
fsts
push
cmpb
or
leave
sar
push
mov
mov
lea
xchg
pop
repnz
xor
xchg
movsl
test
int3
xor
rorl
test
pushf
cli
sbb
dec
add
mov
pop
pop
fidivs
outsb
xor
rol
aaa
xor
dec
lret
push
add
push
push
in
cld
sarl
enter
std
iret
lds
xchg
mov
xor
cmpb
int
or
popf
lsl
jnp
cmp
fs
mov
jg
imul
jae
das
and
rcll
and
sahf
icebp
sub
pusha
decb
outsb
orl
push
hlt
sub
pinsrw
add
jne
std
and
scas
push
mov
call
xchg
sbb
out
cmc
adc
lret
pop
rclb
lods
repnz
rorl
xchg
mov
and
push
lret
std
je
inc
jae
adc
lcall
sahf
hlt
scas
scas
outsl
jecxz
pusha
out
and
lret
dec
mov
ret
notl
dec
pop
ss
repz
jmp
mov
mov
push
inc
inc
inc
xchg
push
cmp
dec
daa
icebp
cltd
or
mov
dec
sub
dec
adc
dec
push
and
jecxz
inc
add
mov
push
pop
sub
mov
cld
dec
cltd
das
mov
cwtl
es
outsb
addl
push
daa
cwtl
sahf
leave
lret
sub
lahf
xchg
adc
jb
push
inc
cs
inc
mov
jle
add
les
loopne
sub
jp
xchg
test
dec
aas
inc
leave
iret
and
pop
xor
imul
push
pushf
inc
xchg
push
andb
sub
inc
sti
mov
inc
xor
icebp
daa
lret
loope
sub
adc
enter
pop
clc
and
adcl
leave
pusha
mov
sbb
jmp
fimuls
fimuls
fwait
jno
mov
les
fdivl
stos
cwtl
jp
push
out
jns
mov
imul
sub
xchg
push
fsubl
and
pop
insl
add
dec
adc
lock
mov
fs
inc
cmp
xchg
or
push
fsubrs
fwait
mov
cmp
inc
ret
mov
inc
inc
dec
imul
fisttps
xor
icebp
sub
add
xchg
es
and
popa
movsb
in
fldcw
fxch
cmp
aam
mov
mov
scas
fmulp
mov
fldt
or
call
loope
cmp
testl
fs
mulb
ficomps
jb
xchg
inc
or
dec
jmp
pop
mov
dec
jge
bound
bound
push
std
inc
pop
cmp
lock
pop
push
pop
out
jle
cld
mov
jne
sti
cmpl
out
jne
hlt
dec
insl
sub
cmp
jg
adc
mov
sarl
data16
jne
outsb
jecxz
ja
jne
add
es
adc
sub
inc
mov
and
mov
jns
icebp
cmp
mov
repz
mov
and
xchg
cli
je
cmpsb
ret
ror
mov
loope
movsl
or
cmpsl
imul
test
insb
mov
and
cli
aaa
mov
pop
scas
push
mov
inc
push
lret
mov
inc
mov
test
pop
add
xor
aad
xchg
push
dec
jb
pop
gs
ret
sbb
mov
xchg
jo
pop
fucomip
push
sub
ja
rcl
mov
push
and
jns
xchg
jge
in
cli
xor
cwtl
pop
inc
fsts
aad
addr16
scas
pop
int3
icebp
xchg
mov
jo
fldt
je
push
xchg
std
mov
mov
inc
pusha
sub
stos
loop
cmpsb
mov
push
sub
push
push
mov
test
inc
insb
push
stc
fwait
pop
mov
sahf
testl
pop
pop
sbbb
.byte
lods
.byte
.byte
.byte
lret
adc
mov
or
and
xlat
dec
mov
cwtl
sbb
aad
sub
sub
jae
cmp
mov
lcall
dec
cmc
push
jle
sbb
mov
leave
fsubl
jns
int3
enter
jl
ss
xchg
bound
loop
stc
push
out
lret
mov
mov
into
daa
inc
popf
xchg
mov
nop
inc
xor
add
add
mov
pop
adc
enter
in
shll
mov
cmp
arpl
dec
sbb
push
lds
add
add
add
pushl
inc
add
add
clc
inc
add
add
add
add
add
and
add
sbb
add
and
add
adc
add
adc
add
adc
xchg
jbe
les
shl
pop
gs
jle
test
add
add
jle
scas
popa
aam
inc
pop
jae
cmp
fst
inc
push
outsl
jnp
lret
outsb
je
inc
mov
pop
bound
mov
mulb
adc
lea
cmpsb
sahf
xor
bound
in
mov
std
stc
jg
inc
sub
enter
pop
rcrl
imul
rcll
mov
or
insb
les
or
mov
mov
lock
hlt
enter
jo
inc
add
add
push
add
add
mov
fists
dec
xchg
pop
xor
add
data16
adc
pop
lahf
aas
add
push
add
das
mov
adc
push
add
loopne
pop
rclb
xchg
lods
sbb
leave
aas
leave
fistps
add
outsl
sub
xchg
pop
cmp
shlb
filds
loopne
push
fs
cmp
add
inc
outsl
jno
jae
sbbl
dec
add
add
stos
add
in
push
adc
and
add
mov
add
mull
add
mov
or
add
push
fidivl
decb
sbb
sub
pop
add
jmp
inc
push
add
xor
xchg
cld
add
mov
scas
add
dec
adc
mov
add
add
loopne
pop
inc
or
int3
pop
fwait
add
insb
or
add
lahf
cmpsb
jle
movl
aas
mov
jns
in
sub
xchg
add
repnz
mov
inc
rolb
add
faddp
jne
mov
add
cltd
add
mov
es
fcompl
mov
lret
enter
add
inc
pop
pop
in
adc
add
add
adc
test
outsl
mov
std
fcoms
add
cltd
or
add
popl
test
dec
fwait
add
fiaddl
pop
add
xor
xlat
xchg
stos
pop
out
dec
ds
pushf
add
add
push
or
bound
add
lock
aam
cmpsl
sbb
or
add
popf
add
in
call
fcmovnb
jb
incb
add
sub
aaa
xorl
outsl
add
lahf
rcl
mov
add
sbb
nop
mov
mov
add
lock
sar
dec
fwait
sarl
test
add
cmpsb
cmp
add
lds
add
jg
add
mov
movsl
cli
inc
insl
nop
add
mov
push
mov
pop
subl
adc
inc
cmp
or
es
pop
pop
add
pop
and
xchg
dec
aas
lret
je
insl
inc
pop
pop
fstpt
fidivs
cltd
mov
mov
mov
lahf
lods
stc
dec
filds
sbb
adc
mov
jbe
and
xor
xchg
mov
and
inc
inc
mov
jns
pop
repz
xchg
call
adc
popf
mov
add
fwait
cmpsl
push
and
movsb
add
insl
outsb
cmp
daa
addr16
mov
adc
inc
mov
inc
jae
inc
push
xor
mov
inc
jno
sti
sahf
pop
notl
push
sbb
jg
shll
pop
dec
add
mov
mov
movsl
dec
daa
fnstcw
mov
adc
out
iret
mov
in
mov
mov
mov
lret
fsubrl
call
jecxz
scas
jnp
mov
jmp
test
push
push
sub
pop
cltd
cmp
xor
xchg
loop
das
xchg
mov
ljmp
cltd
push
sbb
push
rclb
nop
push
fdivr
xor
dec
ja
xor
movsl
cmp
shl
jecxz
and
inc
fldl
add
aad
call
mov
je
addr16
xor
movsl
push
bound
dec
shrb
push
in
cmpsl
pop
mov
lea
pop
sti
mov
mov
lret
adc
push
and
mov
lahf
sub
out
ss
mov
in
dec
cmp
pop
addr16
push
or
repz
testl
xchg
outsl
mov
sub
aaa
xchg
out
pop
fucomp
movsl
inc
lea
subb
xchg
cmp
pop
push
inc
gs
idiv
sahf
xchg
cmp
dec
popf
into
mov
rcll
sub
jne
push
fisttpll
jecxz
mov
push
leave
fldcw
movsb
inc
shlb
lods
cmp
stc
filds
add
std
test
out
add
rcrl
xlat
popf
arpl
shll
movsb
in
es
fisttps
xchg
fildll
or
out
sub
in
outsl
in
outsl
lret
movswl
lahf
push
je
pushf
movsb
xchg
inc
mov
or
bnd
mov
cmp
pop
insl
scas
adc
mov
fdivp
outsb
ja
or
jle
imull
pop
sarb
pop
hlt
lahf
pop
sbb
xor
clc
dec
test
mov
mov
in
inc
sub
pop
xor
mov
push
xchg
movsb
nop
mov
sub
adc
pop
jbe
inc
pop
and
sbb
dec
imul
iret
pop
mov
test
xlat
addl
mulb
int3
cmp
scas
push
negl
adc
leave
sbb
negb
in
or
ds
inc
sub
jb
iret
movsl
xor
xlat
lock
cmpsl
addr16
sbb
sub
scas
cmp
cli
push
jae
jae
inc
mov
lods
jp
jnp
daa
stos
clc
insb
test
jns
push
mov
adc
adc
outsb
dec
sahf
and
je
adc
jnp
xor
and
subb
xchg
scas
pop
das
inc
xchg
ret
mov
dec
jecxz
and
dec
leave
lahf
outsb
and
lods
push
aas
lock
xor
mov
jae
cmpb
push
ss
xor
icebp
daa
stc
imul
and
aas
jg
stos
push
rcrb
scas
rcr
lods
sbb
pop
loopne
inc
cmp
mov
lods
xchg
mov
daa
es
mov
loope
mov
push
sub
test
rolb
lea
add
add
add
add
add
add
xor
add
pop
add
orb
add
jo
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
addb
add
add
add
add
add
add
add
and
add
call
add
add
add
add
add
add
add
imul
add
add
addb
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
pusha
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
and
mov
add
lods
mov
jbe
iret
or
or
and
daa
jnp
loope
xchg
and
mov
insb
mov
cmp
stc
xchg
pusha
cld
negb
cmp
in
push
pop
xor
ss
pop
testb
jl
pop
subl
dec
jb
nop
pop
popf
mov
inc
ss
mov
mov
sbb
jge
loopne
hlt
sbb
sti
jmp
rolb
popa
mov
test
imul
jo
xchg
ficoms
push
xchg
shl
mov
das
mov
data16
mov
push
ja
fcmovne
add
or
imul
inc
xchg
dec
jae
push
pop
mov
fwait
jno
sub
sub
popa
inc
xchg
in
lds
imul
aam
cli
xchg
push
imul
jl
cmpsl
xor
rolb
pop
and
insl
xchg
jb
ljmp
mov
hlt
inc
repz
xor
decb
mov
push
out
in
cmp
test
mov
jo
pop
adc
std
cmp
sbb
popf
mov
push
dec
sub
mov
je
daa
sahf
movsb
in
inc
ror
jmp
outsb
cld
pop
dec
sarl
test
inc
lcall
lahf
gs
rorb
xchg
mov
xor
or
js
ret
mov
in
dec
or
adc
xor
mov
mov
ljmp
out
add
decb
jae
dec
fwait
jno
imul
sbb
inc
mov
and
ror
in
mov
pop
insb
stos
test
mov
and
rolb
mov
jg
or
aas
fimull
xchg
xchg
bswap
in
inc
pop
fldt
and
mov
mov
jmp
jno
in
dec
icebp
mov
test
jbe
pushf
push
mov
imul
xor
dec
xchg
outsl
loop
inc
push
lock
lock
lahf
sub
add
sbb
leave
xchg
mov
jnp
xchg
lahf
mov
and
sub
lea
push
xchg
les
jae
adc
dec
pop
adc
loopne
jp
std
cmp
bound
sbb
out
lret
icebp
push
add
mov
fsts
gs
lock
or
jb
into
pop
pop
std
mov
das
inc
ljmp
pushf
add
pop
lret
insl
les
in
mov
jnp,pn
lahf
cmovb
xchg
mov
xor
mov
push
scas
mov
scas
cmp
lea
sbb
loope
pop
scas
psubq
mov
mov
clc
out
stos
bound
add
jp
mov
cmp
sub
or
pop
jmp
cmc
lods
js
xchg
mov
stos
mov
popa
sbb
call
pop
hlt
ss
rclb
pop
inc
dec
fnstenv
lahf
or
lret
rorb
imull
loopne
inc
es
sub
loop
ret
fldenv
mov
pop
xchg
test
leave
adcb
aas
xor
data16
pop
push
in
cs
pop
dec
and
out
push
cmp
xchg
jl
ja
es
out
push
lret
cmp
xchg
push
jne
hlt
cmp
mov
push
imul
inc
cmc
sbb
invd
or
dec
stos
scas
lds
sbb
mov
fcom
inc
xchg
pop
scas
out
cmpsb
mov
test
xor
in
addb
jl
or
lds
hlt
fisttpll
lea
xor
shrl
dec
call
jle
stos
movsb
cmc
or
mov
sbb
in
mov
sbb
jo
pop
dec
ret
fnstsw
fcom
scas
pop
xchg
les
mov
pop
inc
ror
imul
mov
xchg
fwait
sar
and
xor
xor
inc
xchg
mov
in
fstpl
dec
jl
push
sarl
in
fcoml
sub
add
out
jno
mov
inc
rol
js
shlb
cs
jmp
test
out
ljmp
mov
xor
inc
popa
int3
jae
jle
mov
sbb
xchg
add
push
test
mov
mov
int3
divl
test
test
test
pop
jmp
int3
sbb
xchg
idivb
adc
sub
test
addr16
fisttpl
sub
sbb
pop
push
inc
sub
aam
iret
pop
push
test
es
rcrl
js
ja
xchg
xchg
ja
jbe
pop
dec
xor
push
inc
inc
or
aam
cmp
sub
dec
stos
xchg
inc
xchg
lock
adc
into
iret
fimull
and
xchg
imul
stc
pop
in
add
iret
cmpsb
sbb
mov
ficompl
sahf
icebp
aas
inc
nop
add
sbb
in
lods
addr16
je
push
std
into
cmp
imul
jno
in
xor
sub
jp
mov
sbb
xor
pop
cmp
xchg
ja
xor
cli
aam
xor
shll
or
in
shrb
jbe
mov
xor
xchg
shll
jmp
xchg
scas
mov
test
mov
sub
dec
push
inc
lret
les
mov
ja
inc
out
das
jg
xlat
or
mov
fsubs
addb
and
mov
out
popa
and
fidivl
add
pop
push
je
mov
push
xor
mov
xor
arpl
hlt
jle
mov
sbb
scas
ja
xlat
popf
pushf
sub
dec
or
jbe
and
je
movsb
jno
in
mov
insl
sbb
loopne
or
cltd
and
cmp
xchg
pop
xor
in
dec
dec
mov
loope
ja
mov
fwait
mov
pop
add
jb
std
xor
push
pop
arpl
mov
inc
loope
loop
push
das
cs
or
push
ja
and
gs
jb
pop
jecxz
or
pusha
pop
mov
adc
stc
fnsave
gs
fildl
or
jecxz
inc
loopne
out
outsl
aaa
dec
pop
test
imul
mov
into
or
push
dec
aam
mov
notl
in
mov
aas
jge
xchg
lds
inc
pop
aas
iret
or
pop
xchg
icebp
jmp
sub
cmp
fldt
jns
cmp
cmp
push
or
std
dec
cmp
clc
mov
repz
adc
jge
les
or
popa
xchg
push
mov
cmp
es
mov
daa
xchg
hlt
jae
sub
add
test
adc
icebp
mov
roll
ret
xchg
aas
and
pop
ljmp
push
jecxz
loop
xchg
mov
ja
add
xorl
test
fs
and
pushf
stos
xchg
fcoms
into
aaa
rcrb
push
outsb
in
test
loop
adc
cmp
stos
out
negb
incl
and
bswap
adc
inc
cld
xchg
ja
jmp
add
ret
daa
pop
enter
sub
dec
ds
gs
mov
dec
push
cmp
int
push
push
cs
mov
xor
and
mov
add
pop
out
cmp
xchg
push
cmc
das
push
ss
xchg
jo
adc
stc
jne
push
dec
add
add
add
hlt
cmpsl
dec
fs
movsb
push
pop
and
loope
jecxz
shlb
sbb
jecxz
repnz
stos
xlat
sbb
pusha
fldl
into
fs
mov
cmp
and
and
sbb
out
xor
mov
jnp
jo
sub
ret
pop
out
arpl
pop
sub
and
or
push
jns
out
xchg
shrb
push
xchg
xchg
imul
sbb
rolb
and
pop
mov
or
or
iret
mov
push
mov
jge,pn
xor
gs
lods
gs
adc
inc
xchg
sbb
xchg
scas
sbb
add
push
iret
test
or
mov
nop
fwait
js
and
in
sbb
jnp
pop
jbe
lods
lods
jle
imul
and
loopne
test
lods
js
add
fwait
xchg
pop
aad
jae
nop
fnstsw
xlat
pop
ret
jg
adc
mov
clc
push
mov
jae
mov
mov
jnp
mov
xchg
dec
jl
pushf
dec
push
lods
dec
hlt
jg
out
and
inc
mov
sub
xchg
outsl
fdivl
stos
push
lods
cmpsl
sub
adc
cmp
nop
test
mov
fnsave
mov
push
push
call
popf
dec
sbb
enter
orl
aaa
adc
push
cmp
push
mov
sbbw
push
test
pop
or
push
cmp
adc
dec
mov
pop
jb
push
sbb
pop
mov
gs
xchg
xchg
imul
inc
int
mov
mov
cmpsl
jns
xchg
addb
stos
jp
std
xchg
gs
icebp
adc
data16
stc
cmp
testb
es
jmp
sbb
imul
push
jmp
out
ret
call
xor
pushf
js
bound
orl
mov
enter
xchg
mov
xor
mov
mov
out
push
ds
movsb
or
nop
cli
jnp
lods
or
das
movl
jbe
add
lret
imul
test
fistl
pop
cld
out
push
aam
or
out
lods
pushf
xchg
push
push
sbbl
lock
mov
push
jp
add
imul
ljmp
cmp
bound
push
mov
jmp
and
mov
xor
jp
shrb
dec
and
or
mov
out
mov
cmp
aad
lock
xchg
mov
repz
pop
inc
rcrb
push
push
cmpl
mov
mov
xor
loop
mov
and
xchg
stc
lds
bound
cmp
loop
add
lods
das
test
call
push
jp
sbb
call
inc
repz
loope
popa
scas
or
lea
mov
movsl
in
mov
adc
pop
mov
mov
lods
in
out
or
sub
push
mov
les
xor
jnp
mov
mov
or
jle
mov
pop
or
shr
fidivl
sub
scas
mov
adc
in
mov
and
lret
insl
pop
dec
mov
xchg
mov
xchg
mov
pop
lock
leave
je
lods
xor
jge
sbb
add
test
xlat
pusha
adc
in
push
and
pop
jge
xor
repnz
jb
fstl
pop
mov
adc
adc
adc
dec
sbb
dec
insl
js
pop
shll
sbb
cmp
out
xchg
loopne
iret
loope
lret
incl
jnp
inc
inc
int3
jge
adcb
outsl
outsb
pop
xchg
add
sub
popf
sub
push
data16
sub
mov
dec
shrb
mov
jnp
repz
roll
inc
pop
jmp
pop
movlps
mov
jns
lds
xlat
cld
lahf
jl
data16
add
pop
ret
fnstenv
xor
movsb
rolb
or
inc
in
mov
or
rcrb
or
jle
das
mov
lock
call
xor
xlat
gs
pop
orb
sbb
sti
sub
ret
mov
cli
scas
pushf
call
mov
cltd
insb
mov
aam
pop
push
cltd
cmp
inc
shrl
leave
push
hlt
lret
aas
mov
stos
int
push
add
fistpll
outsl
push
pop
cmpsl
rorl
push
fsubl
sarl
mov
in
fwait
sub
mov
adc
aaa
imul
cmpsl
push
and
ret
dec
insl
lea
mov
test
out
jne
cltd
loopne
mov
or
mov
bound
add
inc
jmp
mov
jnp
mov
adc
lret
sbb
sbb
stc
push
sbb
insb
sub
clc
cli
xchg
xor
dec
into
ret
and
int
xchg
push
sub
mov
push
pushf
loopne
es
xor
mov
cwtl
sbb
mov
insl
cs
dec
out
xor
test
sbb
movl
jbe
arpl
or
test
pop
push
sbb
jg
pop
stos
rclb
pop
and
scas
insb
es
adcl
hlt
mov
ljmp
pushf
lods
loopne
lods
mov
outsb
jle
add
adc
shlb
cwtl
xchg
sbb
popf
in
push
lock
cmpl
test
fdivrs
stos
lods
shrb
inc
push
pop
test
in
xor
popa
out
sub
es
or
fidivs
stc
ss
aam
adc
pop
mov
mov
std
xchg
jno
mov
in
mov
ret
fs
lahf
inc
mov
dec
call
addr16
imull
divps
jge
xchg
rol
inc
dec
aad
mov
lds
stos
rcl
dec
xchg
pop
repnz
and
fcoms
jl
in
in
mov
sub
fisttpl
jo
int
shrl
or
ret
aaa
jns
xchg
xor
mov
mov
push
mov
repz
rcll
iret
scas
xor
movsb
imul
es
movsb
dec
gs
mov
xor
add
lods
arpl
mov
add
scas
hlt
push
inc
rcl
inc
in
or
fcmove
inc
punpckhbw
in
stos
xor
stos
into
mov
ljmp
mov
fs
mov
int
and
hlt
add
sub
js
jb
inc
jg
and
push
dec
aad
notb
outsb
enter
jg
inc
xchg
adc
inc
push
icebp
jp
call
inc
movsl
icebp
out
data16
pop
pop
ret
inc
sar
dec
xchg
imul
imul
push
add
adc
ret
add
adc
lret
ficomps
cmp
cli
cmp
lds
cmp
leave
adcb
in
xlat
adc
sbb
dec
pop
dec
jns
xchg
jmp
out
leave
or
es
out
inc
scas
out
idivl
iret
or
pop
push
outsb
int3
pop
test
jle
in
out
dec
stc
mov
ds
cli
push
mov
cmp
fs
cs
inc
pop
sbb
int3
inc
enter
ja
das
mov
jb
aad
mov
sub
xchg
stos
push
pop
icebp
jl
cli
lret
add
and
movsb
pop
mov
push
xchg
stc
lret
lds
daa
jo
cmp
add
int
mov
lahf
sub
sub
in
sub
add
inc
mov
scas
adc
mov
cmpsl
adc
fidivs
cmp
sbb
sub
aaa
outsl
nop
mov
jb
jl
test
mov
inc
jle
sub
dec
mov
loope
jle
and
cwtl
pop
add
and
nop
pop
inc
es
idivl
jmp
out
fnstcw
fstp
jne
cmp
jne
stos
xchg
iret
and
cmp
packuswb
mov
ds
hlt
ss
sub
stc
pop
xor
repnz
dec
nop
lea
fwait
mov
stos
icebp
push
xchg
icebp
ljmp
adc
cltd
subl
cld
dec
filds
jge
xchg
sbb
push
nop
loop
dec
repz
repnz
out
cmp
and
das
callw
gs
les
arpl
jns
imul
iret
into
mov
popl
repnz
push
mov
fs
out
icebp
subl
flds
int3
push
aaa
pop
mov
mov
js
pop
mov
lret
sbb
in
dec
xchg
ljmp
int3
push
icebp
mov
mov
jo
mov
mov
sbb
shrb
jmp
push
pop
loope
cmc
mov
xor
xor
mov
lsl
movsb
push
call
xchg
xchg
into
cmp
adc
std
mov
sbb
in
add
cmp
test
inc
lcall
and
push
sub
fisubrs
sub
mov
fcmovne
fcomps
push
in
enter
jb
push
inc
cmpsb
xchg
repz
cmp
clc
mov
leave
adc
adc
in
mov
push
pop
cmpsb
dec
pop
cmp
sub
imul
sbb
dec
popf
cli
lret
mov
mov
in
mov
iret
mov
pop
xchg
gs
cwtl
mov
stos
cld
add
sub
mov
inc
mov
push
push
test
es
add
stos
jmp
orl
clc
mov
cltd
cwtl
xor
dec
jge
std
je
push
cld
jmp
int3
push
rcll
inc
mov
pop
xchg
inc
addr16
push
loop
sub
mov
push
imul
outsl
cmpl
add
cs
jb
insb
inc
xchg
in
gs
mov
rcll
push
dec
mov
mov
into
fnsave
mov
fiaddl
shr
lret
jge
jne
stc
push
or
push
mov
jle
sub
leave
fisubrs
inc
arpl
fidivrs
insl
mov
add
incb
xor
push
cmp
enter
mov
mov
sub
js
cmp
adc
mov
ss
adc
out
int3
ret
and
js
outsb
pop
fwait
mov
jno
fiadds
xor
add
clc
mov
push
sbb
dec
mov
pop
mov
dec
pop
out
lret
pusha
icebp
jp
push
stc
xchg
sahf
push
lods
lcall
mov
inc
icebp
cld
dec
int
ds
andb
mov
int
inc
cmp
or
cwtl
mov
negb
cli
xor
ja
push
push
pop
or
rcl
pop
iret
ret
jnp
faddl
cs
subb
loopne
add
iret
dec
adc
gs
out
sbb
push
mov
icebp
xabort
inc
adc
loopne
jecxz
inc
movsl
mov
jg
les
jg
es
stos
adc
repnz
rolb
mov
lea
mov
push
mov
fs
nop
sarl
inc
imul
cltd
cs
movsl
out
lret
fdivs
push
mov
fistl
xor
pushf
jne
xchg
mov
lahf
xchg
shrl
stos
ret
fsts
mov
mov
jb
data16
in
cld
add
div
push
push
shlb
insb
rclb
data16
out
cmp
dec
ljmp
es
sub
mov
ret
inc
xchg
int3
inc
mov
scas
sti
jp
push
cmp
jp
int
scas
mov
orl
mov
jne
fcmovnb
shlb
dec
cs
xor
jb
ljmp
push
enter
xchg
cli
and
push
pushf
das
addr16
ds
bound
inc
in
mov
into
shlb
mov
loop
inc
insb
mov
or
mov
lods
dec
in
lock
les
stc
and
add
mov
mov
daa
xchg
ja
add
les
popa
roll
dec
icebp
cmpsb
mov
fwait
icebp
jecxz
test
xchg
fidivrl
mov
iret
bound
sub
inc
adc
inc
leave
test
or
insl
test
inc
dec
adc
xchg
jne
inc
xlat
sub
ljmp
pop
sub
imul
cmp
jb
xchg
orb
lahf
xor
cltd
inc
pop
or
push
mov
mov
xor
ja
push
cmp
add
jb
mov
orl
mov
jns
cmp
inc
sub
out
pop
test
cltd
jge
inc
and
into
fnstcw
test
mov
sub
xlat
sub
lret
jmp
jle
mov
mov
movsl
pusha
call
rcrl
jge
aaa
loop
imul
inc
or
or
or
add
jne
mov
ds
sub
cmpsb
bound
pop
roll
pextrw
jg
pop
jae
dec
mov
jb
bound
movsb
jge
imul
pop
jns
lret
outsb
lods
addr16
lret
xchg
dec
daa
pop
cmp
mov
out
bound
xorl
cmp
push
stos
jp
in
mov
cmp
mov
repz
push
shrl
stos
dec
push
xorl
lcall
pop
mov
lds
insb
gs
ds
cmp
add
jp
sbb
pop
loopne
push
mov
push
push
daa
xor
aad
xchg
cmpsb
mov
jne
dec
lds
add
push
lock
scas
xchg
fnstenv
ficoms
mov
jae
and
outsl
add
sti
into
addr16
cltd
les
aam
loopne
mov
loopne
sarb
cmp
in
jl
pop
out
cmc
pop
rcl
dec
ret
enter
test
jl
push
jmp
outsb
into
xchg
mov
jo
mov
and
outsb
sub
aad
pop
dec
mov
cmp
lods
mov
or
inc
loopne
and
lods
or
add
inc
or
jnp
pop
scas
adc
jae
insl
mov
jnp
mov
test
and
pop
mov
hlt
movsb
ljmp
push
xchg
std
xchg
dec
jecxz
adc
inc
nop
decb
lret
xchg
mov
xchg
pop
in
push
jae
nop
sbb
pop
sti
inc
inc
test
dec
push
xchg
out
cs
shl
outsl
in
pop
popf
scas
sbb
addr16
mov
xchg
push
mov
lods
jg
push
dec
xlat
adc
pushf
add
add
nop
push
lds
mov
inc
xadd
dec
pop
test
jmp
xchg
xchg
xor
je
repz
mov
xchg
into
jbe
dec
hlt
aad
lret
out
cmc
dec
push
push
mov
adc
mov
lock
lea
jecxz
addr16
call
jge
fstps
cmp
inc
dec
mov
mov
mov
pushf
test
lods
lea
pop
inc
mov
in
push
adc
mov
out
lods
sub
lahf
cld
movsb
add
mov
arpl
mov
dec
ret
cld
mov
popf
incl
dec
jae
push
inc
or
outsb
push
jb
pop
jl
ljmp
xchg
fidivs
or
sbb
xchg
add
mov
or
xchg
and
orl
lcall
roll
mov
mov
sub
lods
lret
cmp
pusha
fst
loopne
xor
cmp
and
sbb
es
jp
xor
rcll
pop
scas
inc
in
jle
sahf
jb
jge
lahf
cwtl
inc
xor
sub
fisttpl
jg
lcall
and
xor
imul
fistpll
mov
insb
pop
sub
cmc
inc
mov
call
mov
push
sub
cli
test
jl
jbe
icebp
xchg
shll
loopne
stos
idiv
in
xor
movsb
cmp
pop
cltd
fcompl
pop
sarl
jg
loopne
mov
enter
ret
fwait
cmc
or
sti
adc
xchg
xchg
mov
fs
cmp
sbb
adc
ret
lods
popf
pop
aam
jg
lcall
insb
movsl
and
test
adc
adc
movsl
ret
push
mov
rorl
xlat
push
je
cltd
idivl
xor
gs
pop
dec
push
adc
scas
mov
xor
mov
repnz
addl
xchg
scas
mov
adc
lods
and
lds
iret
or
xor
dec
hlt
mov
xor
imul
shrl
add
dec
adc
add
out
add
sbb
in
mov
and
pushf
sub
push
push
and
loopne
dec
pop
pusha
cli
push
and
dec
pxor
jo
pop
es
pop
fwait
and
jge
dec
mov
xor
or
bswap
cmp
cmp
hlt
xor
enter
inc
add
out
into
ror
push
int3
inc
icebp
lret
mov
loop
jle
push
push
sarl
cltd
mov
mov
testl
jl
dec
mov
add
dec
mul
hlt
xchg
mov
getsec
aam
pushf
jecxz
pop
inc
test
add
mov
and
ja
or
mov
outsb
clc
fists
xchg
push
push
leave
into
outsl
jp
xchg
roll
pop
stc
mov
mov
dec
ljmp
add
fstps
and
scas
jecxz
sbb
sbb
inc
gs
sbb
sub
push
jmp
sbb
jne
inc
out
adcl
or
jecxz
cwtl
or
and
xchg
cmp
ret
adc
mov
mov
scas
cmp
push
stos
adc
lods
and
adc
xchg
push
or
or
aas
mov
jecxz
jecxz
ficomps
fucom
push
jl
decl
cmp
jle
push
insl
inc
adc
cmp
fsubrs
ja
jle
cmpsl
lods
mov
fcom
fistpll
out
mov
xor
jo
mov
push
int3
cmc
fisubs
les
jnp
cmpsb
inc
add
call
gs
psubusb
pushf
pop
sbb
daa
iret
out
mov
insb
jno
icebp
dec
icebp
mov
jl
dec
ret
xchg
mov
cmpsb
pop
mov
mov
cmp
cmp
lret
inc
xchg
pop
sub
jge
mov
sahf
or
dec
pop
rclb
pop
mov
mov
mov
mov
inc
mov
ja
jle
in
add
ss
pop
mov
out
push
pop
fistl
jns
mov
dec
aaa
sbb
movsb
push
sbb
iret
fsubl
mov
adc
bsr
jnp
cmpsb
jb
cmp
jb
jle
jo
and
dec
repnz
jmp
dec
ret
subl
sub
mov
jb
and
push
mov
mov
loopne
push
xchg
shl
lods
enter
icebp
aaa
push
jns
outsb
cs
sub
into
adc
sub
jae
cmpsb
mov
add
jle
cmc
dec
xchg
xchg
les
jmp
fdivl
stos
nop
xchg
mov
out
leave
shr
xchg
cmp
jge
dec
ljmp
icebp
lahf
pop
add
adc
leave
xchg
mov
in
xchg
xchg
inc
mov
add
sti
ljmp
nop
cli
jbe
pop
sub
ret
sbb
push
dec
dec
iret
add
sub
jecxz
outsb
xchg
jbe
inc
out
aaa
imul
mov
and
pusha
xchg
stc
or
das
aad
pop
pop
mov
pop
dec
stos
roll
js
lret
xchg
daa
arpl
in
xchg
test
aam
mov
and
rolb
fisubs
push
mov
rorb
lret
into
movsl
inc
mov
mov
add
xchg
arpl
jmp
fdivs
bound
imul
fisubs
fmull
ffreep
les
loop
sub
and
inc
cmpsl
dec
mov
pop
push
aas
mov
sahf
aas
jl
pop
and
or
push
daa
and
sbb
dec
rorb
sub
or
cmp
negb
movsb
xorb
in
ja
xchg
push
data16
mov
mov
cmp
data16
lods
and
in
outsl
cs
dec
push
inc
lret
inc
cmpsb
jae
sbb
dec
cs
das
repz
cltd
jmp
stos
dec
pop
movsl
insl
mov
jl
or
notl
xchg
cmp
pop
arpl
mov
adc
xchg
cmpsb
ret
cmp
mov
inc
lret
shrl
je
pop
in
mov
repnz
scas
les
imul
pop
sahf
xchg
loopne
cmpsb
in
insl
mov
ss
loopne
adc
xchg
mov
mov
adc
ja
push
ret
cmp
xchg
xor
cmpsl
shlb
or
shrl
ljmp
outsb
popf
push
pop
push
dec
dec
mov
lods
adc
out
sbb
adc
push
pop
mov
hlt
jnp
push
mov
in
aaa
mov
mov
push
loop
mov
fmuls
outsl
clc
sub
push
imul
inc
pop
xchg
loope
imul
scas
sti
jne
pop
add
push
ret
xor
mov
xor
dec
inc
out
mov
into
fisttps
xor
jecxz
subb
test
nop
inc
jge
les
adc
add
sti
aam
mov
jbe
push
cs
or
jo
inc
lock
lahf
in
nop
and
insl
hlt
sub
mov
push
cmp
push
mov
fmul
lea
aas
dec
test
inc
push
jmp
lcall
xor
dec
popf
dec
jp
and
cs
jg
jp
movsl
sub
lock
out
dec
out
xchg
and
shll
push
jo
xchg
pop
push
sahf
fdivrs
sub
cmp
sbb
jbe
and
ja
in
or
sub
mov
mov
mov
jecxz
jns
ret
movsb
adc
xor
sub
pushf
fidivrl
push
sti
aas
and
lcall
std
test
das
jle
aaa
int
adc
jnp
sub
jmp
fistl
fxch
pop
inc
das
fwait
jle
imul
xchg
daa
mov
std
xchg
jge
inc
mov
adcl
lret
cmpsb
test
rolb
fimull
mov
mov
insl
jp
in
daa
sbb
test
dec
add
xchg
mov
mov
mov
xchg
sbbl
imul
xchg
popf
mov
mov
fldl
xchg
and
js
fdivr
subl
dec
test
dec
aas
sbbb
cli
pop
inc
add
xchg
or
jmp
xor
lods
mov
shll
ffreep
int
popa
stos
hlt
scas
jbe
rcrl
clc
sbb
fcompl
aam
stc
ja
adc
bound
or
test
push
sbb
mov
out
popa
inc
imull
jbe
pop
icebp
pop
jb
xor
iret
jmp
out
scas
ss
sub
arpl
sbb
pop
fisubl
aam
daa
clc
loop
scas
xor
imul
or
daa
mov
mov
mov
mov
in
xor
gs
mulb
ficoml
push
imul
mov
mov
or
pop
mov
add
outsb
push
mov
add
popl
cmp
in
add
pop
jmp
js
std
push
and
je
inc
pop
mov
or
fucomp
ljmp
push
popf
pop
add
push
in
andb
ror
sahf
mov
cmpsl
mov
cli
or
cwtl
mov
cmpsb
push
lods
or
add
fwait
repnz
in
fnstenv
inc
out
das
dec
into
xchg
jl
jo
push
insl
enter
scas
clc
and
insl
fldenv
hlt
add
add
mov
mov
fiadds
xor
dec
mov
push
fldl
lock
sbb
xchg
sub
mov
clc
lcall
cs
sbb
push
icebp
ljmp
ret
adc
pop
out
arpl
loope
mov
or
jg
dec
in
test
outsl
aas
fisttps
rdmsr
add
push
xor
inc
mov
pop
mov
sbb
xchg
xorl
lock
pop
inc
xor
xor
adc
pop
cwtl
movsl
mov
add
test
fmuls
adc
xchg
xlat
push
fldl
mov
xorl
ljmp
repnz
adc
outsl
hlt
arpl
sbb
nop
test
loopne
out
lock
icebp
in
inc
inc
lea
insb
inc
daa
pop
cwtl
in
jne
imul
add
dec
cmp
neg
shlb
xorl
jle
mov
inc
outsl
mov
sbb
sbb
call
adc
add
pusha
test
int
cmpsl
adc
ds
bound
fisubrl
dec
lds
cmc
pop
pmaxub
sbb
es
fsts
jae
std
icebp
mov
insl
pusha
test
hlt
push
cmp
adc
gs
mov
cmp
pusha
mov
aaa
aam
dec
push
aas
popf
movsl
push
mov
testl
jge
xor
push
jge
ret
push
addr16
nop
inc
popf
dec
and
mov
jne
dec
jmp
inc
mov
jg
and
pop
addb
scas
pop
mov
data16
inc
adc
movsl
pop
sub
xchg
push
adc
jnp
xchg
pop
lcall
cmp
lock
sbb
cmp
xor
sub
rorl
mov
stos
in
dec
rorb
lea
sbb
mov
insl
adc
ljmp
or
in
push
add
or
mov
mov
mov
stos
add
fidivrl
add
jnp
popa
rolb
daa
bound
imul
and
push
sub
fistps
jge
or
dec
push
shll
jbe
jno
xchg
js
ja
inc
sbb
xchg
dec
ret
pop
rcrl
jg
cmp
fwait
and
shl
push
lcall
fdivl
jnp
insb
and
int
sub
cmpsb
sub
cld
sub
add
pop
lock
neg
mov
xchg
scas
test
shr
int
rcrb
mov
loop
adc
sub
cmp
divl
sbb
inc
cmpsb
sub
mov
xor
pop
fisubrs
dec
into
add
push
jno
cmp
jbe
dec
mov
pop
out
icebp
imul
das
ds
push
or
aas
push
cltd
mov
into
mov
sar
bound
push
inc
xchg
add
sub
mov
cmp
lods
arpl
loopne
hlt
mov
adc
adc
inc
lahf
sbb
and
lods
repnz
sub
les
lcall
jl
incb
jnp
push
xchg
test
ret
in
clc
hlt
or
and
xchg
rolb
arpl
cmp
and
xlat
mov
lods
lods
xchg
jae
jno
lods
cltd
xchg
popa
and
addr16
in
es
shll
rdpmc
mov
or
sub
push
out
fdivrl
inc
pop
adc
push
add
ret
test
mov
mov
loop
mov
rcll
rcr
xor
stos
inc
sti
dec
cs
pop
pop
xchg
mov
mov
cs
adc
push
jns
addl
sahf
sti
test
negb
mov
fcompl
shll
sbb
out
mov
hlt
dec
add
adc
sbb
push
mov
out
jo
loope
inc
cs
cli
dec
sub
adc
xchg
notl
fbstp
ljmp
out
mov
pop
pushf
int3
pop
cltd
sti
push
test
int
insl
mov
inc
mov
subl
jecxz
add
imul
xor
dec
sti
jns
add
inc
cmp
fiaddl
imul
mov
or
in
and
fisttps
mov
ss
adc
xor
les
clc
scas
ds
mov
inc
xchg
stos
push
jecxz
or
push
movsb
insl
into
jmp
mov
sahf
push
inc
shl
scas
adcb
add
push
scas
inc
or
mov
filds
add
xor
outsl
xor
lods
lahf
mov
push
xor
fidivrs
or
divl
notl
mov
and
enter
popl
xchg
shrb
push
dec
cmp
lods
cmp
mov
push
mov
stos
cmp
or
mov
pop
cli
sbb
cmc
xchg
scas
addr16
out
loop
mov
inc
sbb
sbb
in
jmp
and
imull
addl
cltd
jmp
popa
xor
int3
pop
dec
or
rclb
push
pop
xchg
sarl
stc
insb
jle
mov
stos
test
das
and
push
inc
mov
push
insl
test
test
inc
xchg
imul
cs
jae
push
pop
pop
call
pop
mov
int
repnz
jge
cmc
ljmp
ja
gs
xchg
xchg
pop
mov
movsl
sub
js
arpl
add
scas
dec
or
pop
subb
lret
and
lods
les
sub
sub
jns
mov
inc
add
adc
in
xchg
xchg
mov
pavgb
xor
jae
outsl
shrl
push
mov
lods
mov
ret
sub
or
xchg
cmpsb
adc
std
dec
pop
enter
repnz
xor
gs
mov
cmp
pop
negb
add
pushf
push
push
jnp
pop
xchg
jnp
mov
cmp
icebp
jp
imulb
fistl
mov
scas
movsb
cmp
adc
repz
in
les
cmp
in
mov
mov
data16
into
cmp
cmp
add
fcompl
jbe
into
cs
movsl
enter
les
push
push
pusha
mov
into
mov
sub
adcl
cld
test
jmp
and
scas
push
nop
test
call
jo
gs
lcall
push
aaa
mov
loope
inc
push
sbb
xchg
jmp
dec
hlt
sbb
sub
mov
out
inc
push
xchg
inc
cmp
sub
idiv
adc
je
mov
sub
mov
inc
jcxz
and
adc
jecxz
cmp
lds
adc
sbb
mov
and
pop
into
push
dec
or
pop
subb
sbb
mov
xor
jno
cmpsb
jmp
dec
adc
clc
in
jae
dec
lods
cwtl
ljmp
mov
cmp
jmp
adc
adc
insl
in
mov
scas
xor
mov
cmp
in
xor
or
pusha
adc
ds
xchg
mov
roll
xacquire
jmp
and
in
sub
fdivp
lret
dec
xchg
mov
push
lcall
push
iret
xor
lds
inc
xor
mov
adc
test
dec
cmpsb
adcl
pop
add
dec
push
xchg
sub
cltd
emms
sbb
xchg
fstpl
jle
les
or
push
lahf
lods
cwtl
je
out
push
pop
aad
and
cmc
pop
dec
jns
int3
outsl
je
int
outsl
xor
jnp
enter
jbe
push
mov
cmp
mov
hlt
test
vpmacsswd
pop
jp
pushf
xchg
sub
repnz
jge
les
arpl
sbb
sbb
dec
sub
xchg
jge
stc
adc
mov
mov
mov
add
xor
out
hlt
pop
fadds
sbb
std
push
outsl
adc
lret
jae
call
mov
sub
xchg
andl
and
xor
test
sub
push
adc
sbb
ja
in
cld
scas
inc
mov
jle
clc
jae
push
pop
push
add
sbb
and
mov
xor
xchg
std
bound
or
mov
mov
lea
push
push
jne
arpl
decb
add
rorb
lea
push
jbe
cld
dec
cmp
pushf
mov
xchg
jae
inc
sahf
cmpsl
bound
lods
repz
shlb
adc
sub
aad
xchg
push
jno
outsl
push
sub
lcall
icebp
inc
imul
int3
xchg
mov
pusha
mov
sub
or
sbb
pinsrw
adc
jecxz
inc
xor
stos
or
push
jle
cmp
jnp
inc
ss
cmpsb
movsl
pop
fldl
lcall
dec
outsb
cmpsl
imul
mov
xchg
jg
jbe
aaa
test
pusha
adc
inc
popa
icebp
lret
in
js
inc
stos
sub
jae
test
test
inc
sti
push
outsb
out
and
aas
push
repnz
jo
xor
fbld
mov
ss
in
out
loop
xor
cmp
mov
or
pop
lret
vdivps
lahf
sbb
xchg
pushf
push
push
sub
pop
in
jecxz
ss
test
cmpsl
xchg
xchg
nop
insb
xorb
xor
sub
add
mov
inc
push
and
mov
nop
cltd
mov
lahf
push
js
or
movl
and
lret
lods
jmp
sbbb
loop
pop
loope
jnp
sbb
subb
sbb
adc
int
xchg
jmp
in
xchg
jae
bound
inc
sahf
insl
sub
repnz
cwtl
aaa
pop
mov
cld
xchg
inc
push
test
cwtl
sbb
test
sub
add
fwait
jno
jmp
jne
movsb
int3
xlat
subb
cmp
mov
imul
dec
ret
clc
je
sbb
daa
ja
push
xchg
push
aas
sti
movzbl
push
scas
popa
or
test
lea
sub
insb
sbb
adc
xlat
inc
inc
fcoml
ljmp
xchg
cld
xchg
mov
or
mov
pop
push
pop
dec
dec
out
int3
std
test
pushf
lods
jne
push
ret
or
add
mov
lods
scas
je
push
jg
mov
cmp
push
add
push
add
adc
gs
inc
cwtl
sub
out
test
inc
outsl
pop
xlat
mov
push
and
mov
adc
repnz
mov
jmp
push
fdivrl
loopne
cs
pop
xlat
push
movsl
addr16
stc
push
mov
pop
sti
push
int3
dec
xchg
imul
inc
rcl
pop
in
rclb
mov
jns
xor
popf
pop
xor
call
jmp
jbe
out
cmp
push
std
inc
or
pop
pop
mov
addr16
addr16
adc
sub
inc
ja
mov
sbb
sub
loopne
jge
pop
mov
mov
gs
or
loopne
fldenv
fdivl
daa
int3
aam
lret
inc
cli
popf
fisubrl
mov
mov
ret
clc
ds
es
adc
or
adc
sub
ret
into
sbb
scas
pop
inc
sub
out
aam
movsb
xor
mov
cmp
lds
lret
cli
xchg
jl
in
in
decl
mov
push
jnp
mov
xlat
pop
insl
mov
stos
cmp
test
pop
scas
mov
lods
and
imulb
repz
stos
nop
sahf
mov
push
mov
and
cmp
xchg
and
mov
xor
adc
xchg
lret
inc
cli
mov
idivb
cltd
or
or
cmpsb
cmpb
push
dec
push
into
xchg
sub
and
aam
ja
cltd
std
repz
push
jmp
ja
push
cmp
and
and
orb
clc
cmp
mov
inc
lea
movsb
sub
imul
inc
fwait
jae
movsb
mov
arpl
and
inc
pop
mov
pop
mov
rcll
jne
and
pushf
popa
mov
mov
inc
loopne
mov
inc
pusha
and
daa
cmpl
jb
mov
popf
in
pop
clc
xchg
jmp
fsubrs
push
mov
addr16
insl
fcoms
jmp
mov
loope
pop
and
je
mov
or
and
call
inc
mov
jl
loope
aam
imul
rcrb
cmp
and
loop
dec
xchg
pop
loope
cli
xorl
popf
fidivrl
mov
subl
jne
fisttps
or
inc
scas
pushf
loop
cmpsb
xchg
mov
cmpsl
jno
jae
mov
sub
stc
jne
or
mov
incl
mov
sbb
imul
cs
dec
xchg
sbb
mov
inc
lock
negb
imul
ret
adc
add
push
int3
pushl
in
or
jo
cli
cltd
sbb
push
shl
addr16
insb
jno
andl
jo
push
popf
sbb
int3
pop
in
ljmp
pop
iret
lcall
test
imul
xchg
neg
cmp
and
or
shrl
data16
xchg
and
es
push
dec
pushf
pop
pop
mov
jl
inc
cwtl
mov
insb
lcall
ljmp
push
icebp
jnp
sub
sysexit
je
repz
out
inc
jbe
stos
push
sbb
push
jge
xchg
mov
jge
sbb
xchg
addb
mov
idivb
pop
adc
rcrl
out
popf
sbb
scas
mov
and
fistps
adc
or
jg
addr16
loopne
ret
jecxz
push
notb
jmp
mov
decb
fst
adc
lsl
lret
mov
add
xor
and
cmp
int3
loop
pop
in
aam
and
sbb
jle
push
in
orl
push
pop
push
sbb
rcr
cmpsl
and
cwtl
test
jo
jo
pop
pop
pop
loopne
popf
data16
scas
rcrl
pop
scas
add
into
cmpb
test
out
addr16
bound
in
movsb
aas
in
hlt
xchg
imulb
sahf
cmp
in
test
push
lcall
jle
mov
jecxz
add
shl
in
sub
or
aas
ja
lahf
icebp
lcall
pop
or
pop
pop
push
pop
sbb
lret
adc
int
push
pop
lret
cmpl
pop
push
pushf
pop
stc
std
pushf
sbb
mov
jl
inc
push
xchg
push
lret
push
lret
add
insb
inc
push
popa
cmpsl
stos
xchg
pusha
loop
jmp
push
js
xor
add
mov
repz
data16
arpl
sub
xchg
in
bswap
add
mov
imul
add
cmp
arpl
ret
xor
fbstp
lahf
xlat
push
mov
jno
xchg
inc
push
inc
jns
test
pusha
out
push
inc
mov
je
mov
mov
mov
pushf
stos
sti
mov
sbb
daa
aad
addr16
adc
mov
mov
test
mov
sti
popf
dec
inc
test
pusha
imul
addr16
cwtl
adc
rorb
and
or
mov
repnz
aam
fstps
mov
aam
pop
inc
add
inc
push
inc
rcrl
mov
repnz
or
xchg
ret
jno
leave
in
pusha
pop
je
xchg
mov
xor
lret
mov
xchg
mov
les
mov
cmovbe
divl
cmpsl
add
rcll
test
jnp
popf
ljmp
xor
stc
enter
lock
bound
cmp
xorb
mov
fcmovu
jo
out
sbb
mov
mov
mov
and
lds
jne
fstl
mov
jb
mulb
dec
inc
insb
stos
pop
scas
mov
xchg
icebp
in
pushf
iret
inc
dec
out
sub
push
mov
cmp
ret
jbe
ljmp
pushf
insb
inc
sub
push
out
jmp
push
in
cmpsb
inc
bound
orb
cmp
lret
stc
rep
xor
jno
adc
mov
xchg
or
xlat
lea
pusha
addr16
jle
test
mov
fisttpll
rorl
fcmovnu
orb
or
das
cmc
pop
push
fcomi
call
xchg
andb
xchg
add
sub
mov
jmp
sbb
jo
xchg
pop
or
data16
cli
gs
outsl
mov
xchg
lds
lahf
pop
fs
fistl
xor
dec
std
xor
xor
int
loopne
fstp
bound
clc
adc
pop
sbb
pop
push
in
and
cwtl
dec
ret
mov
mov
jmp
mov
add
add
jle
popf
stc
xorb
push
pop
lods
dec
push
jo
insb
add
insb
cld
jp
cmp
stos
in
xchg
aad
popa
sub
and
test
arpl
pop
cmp
mov
and
ficomps
cmp
mov
sbb
lods
das
push
mov
inc
insb
xorl
pop
cmc
sub
fdivs
rcll
iret
icebp
orb
mov
push
fisubrl
fdivl
loope
lahf
repnz
ja
das
es
js
test
mov
push
fwait
sub
cmp
in
inc
sbb
ss
xchg
mov
jo
fimull
out
sbb
mov
push
dec
mov
insl
gs
xorb
xorb
xchg
adc
xor
pop
pop
mull
adc
aam
cs
popa
mov
xor
std
xor
in
push
out
movsb
jnp
shll
leave
xor
add
fdivrs
ret
xor
mulb
inc
mov
sub
sub
test
mov
repnz
dec
pop
sahf
push
sbb
ss
ja
cmp
popa
mov
and
mov
or
or
mov
xchg
push
sub
or
dec
jmp
stos
mov
mov
cmp
mov
clc
xchg
xchg
jnp
xlat
xchg
mov
xchg
ss
cli
test
lret
movsl
outsl
mov
fidivrs
push
jecxz
cwtl
das
out
mov
ss
pop
dec
inc
xchg
add
xor
out
jp
cmpsb
push
aad
pop
cmp
lods
fists
mov
insb
ds
dec
jp
inc
xchg
stos
xchg
jns
pop
repnz
imulb
shrb
lods
outsb
jae
jo
and
lds
xlat
ret
and
data16
and
ret
or
out
inc
sbb
fisubrs
in
in
je
xchg
sub
sti
out
add
imul
fldcw
jle
stc
and
cmp
mov
dec
cwtl
mov
sbb
adc
jle
test
xchg
push
repnz
mov
icebp
lods
lret
stos
xor
jmp
cmp
mov
dec
fdivrl
or
sub
aad
pop
out
xor
jecxz
addr16
subl
add
lahf
in
mov
xchg
out
jbe
outsb
cmp
addr16
outsl
in
lahf
fs
fmuls
out
push
gs
cmpl
jb
test
lea
mov
out
mov
imul
testb
call
dec
xchg
cmc
cmp
xchg
mov
jbe
out
ds
aam
add
sbb
inc
stos
fmul
dec
test
aad
xlat
jbe
out
lods
pop
aam
jns
pop
inc
fisttps
nop
cld
popf
or
sbbb
popf
repz
jmp
adc
mov
xchg
mov
sbb
and
add
mov
addr16
outsb
ss
ret
fcompl
setp
les
cmpsb
jl
sarb
mov
imul
pop
fs
dec
pop
mov
sub
mov
xor
push
dec
das
mov
inc
sub
out
push
and
ret
push
adc
dec
inc
shlb
into
jbe
dec
cmpsb
repz
mov
out
fstpt
jae
ss
aas
out
push
ja
mov
jo
cld
dec
push
dec
jecxz
jo
cmpsl
fists
clc
adc
sbb
lret
dec
sti
scas
leave
das
fstpt
int3
dec
cmc
xchg
mov
pop
xor
nopl
inc
mov
cld
push
sbb
xchg
sbb
je
inc
xor
cmp
aam
call
jl
add
cwtl
imul
adc
jns
sub
lahf
push
cmpsb
dec
movsl
sub
hlt
insb
loope
pop
enter
negl
inc
inc
cwtl
jle
adc
lds
push
or
dec
icebp
jmp
xchg
imul
xchg
adc
addl
jbe
fcmove
inc
pop
jno
sti
jbe
add
fwait
notb
das
sub
test
cmp
jecxz
jle
mov
ss
insl
scas
fisubs
pop
mov
and
aam
and
cmp
mov
ja
shlb
imul
pop
insl
pop
or
pop
xchg
fisubl
cmpb
fisubs
cmp
xchg
popa
xor
mov
inc
pushf
sub
sahf
cltd
cmpsl
xor
pushf
scas
jo,pt
xor
dec
push
leave
push
sub
cwtl
sbb
jne
sbb
sbb
mov
and
icebp
shlb
testl
fldt
inc
jmp
lods
mov
sbb
faddp
push
shrl
outsb
xor
scas
mov
jge
push
jmp
mov
loopne
ret
fs
scas
inc
inc
dec
aaa
insb
xor
push
fwait
rcrl
sub
sub
mov
lea
shrl
leave
outsb
mov
xor
ret
leave
mulb
sub
out
ljmp
int3
mov
loop
push
sub
mov
xchg
lret
xchg
xchg
mov
pop
fs
cmp
pop
jb
lods
jecxz
subl
adc
insl
pushf
jg
push
xlat
xor
fs
mov
xlat
add
sbb
call
outsl
out
pop
scas
lods
sbb
jge
loope
xor
jge
pop
sub
scas
dec
fcmovnu
xchg
xchg
addr16
adc
cmpsl
inc
or
mov
jmp
dec
insb
inc
sub
scas
in
clc
loop
rcpps
sub
add
jno
das
loop
push
sub
mov
movsl
jnp
xor
pop
and
xchg
cltd
data16
mov
in
enter
mov
pop
andps
nop
adc
call
xchg
popf
ficoml
pop
mov
lcall
jo
mov
mov
jno
je
add
and
mov
popa
sub
js
push
jae
fsubrs
xor
mov
out
mov
xchg
pop
aas
into
push
pop
or
add
push
sub
mov
add
es
ret
inc
bound
loop
sub
push
push
gs
popf
or
cmp
mov
loope
sub
pop
dec
mov
sahf
cmpl
dec
clc
inc
dec
jnp
imul
int
enter
cwtl
or
cltd
pop
add
add
add
insb
ret
mov
mov
xchg
xchg
aas
mov
mov
adcl
or
ja
and
leave
lret
jmp
pop
cmp
imul
push
xor
fistpl
test
js
cmp
cs
test
lds
scas
cmpsl
imul
jo
cs
inc
cltd
sbb
pusha
fcoml
jnp
and
sahf
fisttpll
xor
lret
and
lock
push
and
push
push
fdiv
xchg
or
inc
aam
out
dec
ret
outsb
jb
inc
mov
and
fsub
jecxz
cld
cmp
outsb
addr16
push
pop
out
lahf
sub
and
out
popa
cmp
and
je
push
shll
ficomps
pop
push
mov
addr16
cltd
fs
movsl
hlt
mov
xor
adc
cltd
xrelease
negl
xchg
mov
ljmp
test
mov
jl
ljmp
dec
testl
xor
cltd
lea
ds
shrb
dec
je
lds
mov
mov
scas
lea
das
rcrl
mov
mov
imul
in
stos
pop
sub
jo
mov
mov
cwtl
aas
loope
xchg
test
sbb
das
and
push
ficompl
rcrb
jg
jg
inc
inc
xchg
mov
loopne
stc
push
xchg
mov
jo
nopl
in
in
in
mull
dec
sub
inc
push
in
fwait
jle
pop
sbb
popa
and
inc
xchg
pop
mov
call
in
push
or
lods
int3
inc
call
sub
jo
xchg
cmp
cmp
in
ja
dec
and
lret
ret
adc
or
fdivrl
arpl
dec
jae
sbb
cwtl
mov
fst
jl
dec
inc
mov
mov
sbbb
jns
jb
lds
call
out
mov
movsb
cli
sbb
out
or
push
mov
sti
add
sbb
push
jbe
push
or
jo
lahf
mov
sub
movsl
xchg
dec
inc
les
aad
pop
sbb
mov
push
imul
or
in
xchg
xorb
sub
mov
in
movsb
pop
movsl
fwait
lods
and
pop
repz
aam
clc
lods
sbbb
mov
je
xchg
jo
imul
xchg
pop
in
adc
xor
fdiv
test
push
loope
jbe
mov
add
add
dec
push
and
std
dec
and
xchg
outsl
scas
lcall
aas
dec
loopne
xor
jne
and
dec
faddp
scas
dec
sub
xor
popf
test
inc
mov
rcrb
or
or
mov
dec
sbb
addr16
enter
rorl
xor
sbb
out
test
fidivrl
jl
xor
data16
adc
sarb
pop
inc
push
push
xchg
cmpsl
cmp
ret
sub
mov
sub
add
adc
ds
sub
or
lods
xchg
dec
das
adc
push
test
test
fisubrl
push
sbb
sub
je
ficoml
movb
out
pop
mov
frstor
xchg
outsl
dec
repz
incb
mov
in
pop
xchg
add
sbb
ffreep
cwtl
xor
arpl
imul
add
adc
jnp
xchg
mov
rclb
in
cmpsb
cld
scas
sub
or
sahf
lods
les
leave
ret
inc
lcall
jns
std
movsb
adc
testl
adc
push
mov
mull
pop
gs
and
movl
lahf
dec
sti
pop
or
xor
pusha
test
rorb
xchg
fs
jle
sbbl
in
out
add
test
jg
mov
dec
fs
lock
jmp
mov
stc
js
pop
insl
push
inc
sub
mov
mov
xchg
cmpsb
std
pop
push
call
int
mov
scas
test
xor
in
negl
test
jmp
cmp
jp
notl
xchg
lods
int
lods
enter
mov
add
fstps
add
mov
jl
adc
stos
dec
and
xor
mov
xchg
push
test
dec
sti
sub
pop
outsb
inc
cs
xor
push
xchg
out
mov
fs
ds
add
pop
jns
jmp
push
jmp
xchg
sti
pop
add
pushf
leave
js
adc
mov
push
out
cmp
stc
push
cmp
insb
das
mov
jo
pop
mov
sbb
and
dec
and
adc
dec
in
jns
sub
cmp
adc
mov
jnp
fsubp
mov
inc
inc
jae
mov
jo
push
js
movsl
inc
imul
test
mov
xchg
cmpsl
dec
cmp
fmulp
movsb
jge
pop
and
xor
icebp
shr
mov
push
cmpsl
inc
inc
mov
scas
inc
in
pop
cmp
shl
cltd
stos
pusha
lods
mov
hlt
sub
out
pop
lods
pushf
xlat
aas
addr16
int
inc
lcall
fmul
iret
repz
lock
xchg
jo
jbe
mov
notl
cwtl
lods
dec
pop
cmp
scas
int
add
fsubrs
out
lods
sbb
cmc
cmp
outsl
dec
xchg
in
aad
xchg
push
pop
jge
adc
xchg
mov
xor
or
and
push
cli
sahf
andl
xchg
movsb
add
or
or
sbb
add
push
dec
add
hlt
fisubrl
jo
and
cmpsb
xchg
push
stos
xlat
shlb
pop
sti
dec
jp
jns
insb
jecxz
pusha
add
andb
inc
fidivrs
cmp
imul
cmpps
sub
xchg
dec
mov
shrl
jle
dec
cmp
insl
push
aaa
notl
xchg
flds
ljmp
dec
aaa
mov
and
lret
aad
fdivrs
inc
addr16
fdivs
push
dec
test
xchg
out
push
fs
es
dec
adc
imul
dec
dec
mov
fwait
gs
imul
xorb
insl
push
cld
pop
leave
xchg
fisubrs
push
test
gs
aas
adc
or
mov
xchg
add
mov
in
adc
scas
xchg
and
insl
je
inc
scas
in
jle
sub
and
pop
aam
jl
iret
stos
xchg
in
mov
and
cmp
xchg
jb
pop
dec
push
movl
lret
movsb
cld
jb
syscall
sbb
test
jae
sbb
addr16
test
leave
sub
iret
int
insb
out
orl
in
into
adc
pop
rorl
mov
shr
push
jl
cli
sub
jge
cs
add
test
cmpsl
and
adc
dec
addb
jae
fadd
je
mov
cmp
sbb
dec
cld
jno
push
gs
adc
mov
lahf
ret
mov
movsb
jecxz
sub
push
dec
pop
out
testl
fiaddl
and
pop
jg
pop
shll
mov
sub
adc
cmpb
inc
ficompl
add
and
sbb
cmc
aam
and
push
fnstenv
aas
jno
pushf
scas
cmp
mov
add
dec
cmp
dec
popa
and
test
dec
cmp
cmp
popa
add
inc
in
xor
jle
xorl
mov
popa
push
sbb
jno
pop
cs
call
iret
xor
jge
xchg
xor
test
cmp
in
lret
insb
cli
jl
fsub
cmpsb
cli
lods
pop
or
add
cmpsb
dec
xchg
sub
int3
pop
jl
xchg
and
aaa
and
or
push
subb
xor
cmpsl
aas
and
mov
test
movsl
mov
outsl
mov
add
cwtl
lret
outsb
pop
lret
xor
mov
jle
mov
and
icebp
lods
out
subl
fsubl
lock
xchg
add
jmp
add
or
jb
push
dec
mov
lock
push
adc
and
lahf
jg
mov
dec
dec
and
jnp
enter
jl
ret
inc
jo
mov
add
stc
or
aas
sub
or
sbb
pushl
pop
add
mov
stos
xlat
subb
mov
pop
xlat
mov
enter
adc
test
lock
jl
cli
xchg
icebp
iret
cmp
pusha
cltd
adc
or
xchg
xor
and
lock
stc
push
les
push
pusha
clc
push
arpl
in
out
mov
stos
mov
pop
mov
gs
cwtl
int
mov
mov
jnp
movsl
xchg
mov
cs
imul
cmpsb
inc
shll
jns
lret
inc
test
pop
rolb
cmp
notl
loope
pop
jecxz
jecxz
out
aas
faddl
jnp
outsb
imul
xlat
scas
mov
cs
xor
sub
mov
in
cmpsb
ja
shlb
mov
data16
cmp
cmpsb
in
orl
pop
mov
arpl
mov
xor
sub
mov
xlat
mov
loop
dec
movsb
xchg
xor
rorb
sbbl
insl
js
call
cmpsl
es
pop
mov
mov
in
js
icebp
mov
testb
bound
sbb
lea
pop
imul
mov
jl
jae
and
std
cmpsb
jge
jne
aaa
frstor
push
stos
pop
pop
scas
push
in
inc
or
sub
inc
arpl
inc
cmpsb
int
or
fwait
jg
and
icebp
mov
movsl
dec
adc
pop
and
cmp
sub
call
add
addr16
cmp
icebp
jno
ss
dec
or
add
pushf
rcl
inc
pusha
xchg
adc
jbe
cmpsl
repnz
movsl
into
js
inc
sbb
aas
cmc
add
shrb
std
repz
aad
mov
jmp
sub
in
cld
push
mov
mov
push
pop
mov
mov
outsl
and
push
sub
pushf
sub
shll
fwait
aad
pop
jle
dec
or
lods
nop
sub
out
mov
cmp
data16
test
lret
sbb
outsb
ljmp
xor
xchg
and
std
movsb
push
jl
mov
mov
and
mov
test
stc
inc
pushf
adc
inc
ret
dec
out
cmp
sub
out
dec
jae
dec
addr16
cmp
mov
sbb
cli
sar
jmp
mov
mov
mov
hlt
jb
pop
xchg
adc
xor
cmp
dec
pop
pop
mov
popa
stc
adc
and
dec
loopne
jmp
cmp
mov
imul
scas
lock
sbb
adc
hlt
or
adc
mov
push
nop
insl
cs
mov
rorl
cmpl
loope
sahf
inc
push
addr16
loopne
lea
sbb
in
in
leave
xchg
push
add
sub
lahf
movsl
out
das
stc
push
and
pop
js
mov
lds
jb
sti
sbb
xor
sbbb
cmp
call
test
jmp
jb
fdiv
mov
mov
test
outsb
xor
cmc
xchg
lret
repnz
hlt
sub
sahf
stos
jo
push
xchg
popa
mov
ja
cmp
fildl
out
adc
mov
jmp
lea
je
aas
repz
flds
cmp
sub
sbb
xchg
subl
icebp
add
std
mov
dec
sub
faddl
icebp
vunpckhps
pop
dec
hlt
add
test
inc
push
idivb
sub
jae
and
fdivl
add
inc
jno
call
lods
fs
dec
cmpsb
mov
push
ss
pop
sbb
test
aad
scas
setnp
das
ja
add
hlt
inc
push
movsb
repz
push
loop
notl
mov
shll
cmpsl
jle
setl
xorl
and
stc
xor
fbld
fistl
int
pop
int
insl
repnz
fstpl
inc
xor
decb
push
sub
enter
pop
mov
xchg
in
mov
xchg
dec
and
add
insl
xchg
xor
pop
aas
or
lds
cmc
imul
test
and
or
pop
in
push
in
mov
and
outsb
jle
je
adcb
ljmp
pop
xlat
xchg
lcall
imul
js
inc
in
in
or
xor
jle
or
cmc
lahf
sbb
call
sub
cmp
push
dec
mov
clc
push
dec
jg
mov
mov
std
push
or
push
sbb
add
insl
scas
mulb
fistl
adc
sub
hlt
pop
and
outsl
mov
jl
pop
add
push
sub
shrb
push
jp
sub
push
sahf
stc
js
adc
icebp
sbb
dec
mov
mov
aaa
pop
pusha
popl
popf
xchg
nop
scas
pusha
addr16
sar
lds
mov
jmp
pop
pop
and
mov
scas
jg
add
inc
das
shll
fldcw
stos
push
dec
in
and
scas
mov
push
pop
popl
push
orl
and
in
and
inc
fcoml
inc
and
test
ja
mov
fildl
stos
daa
mov
aad
stos
pop
outsb
scas
push
cmpsl
sub
loope
stos
sub
mov
or
outsb
daa
mov
push
xchg
cmpsb
sub
inc
pop
pop
movsl
stc
aam
rclb
push
jmp
cmp
adc
jl
outsl
lahf
gs
mov
testl
pop
cs
xchg
sub
ds
js
jbe
xor
cld
add
jp
xchg
mov
jg
xchg
arpl
xchg
ss
ds
push
push
loope
mov
push
roll
lds
add
ret
xlat
pushf
pop
dec
fs
pop
xchg
cmp
fisubl
cmp
jmp
loopne,pt
adc
or
jb
inc
adc
clc
jo
ja
jno
lock
adc
pop
or
aas
jge
add
cmc
jge
mov
nop
arpl
ret
cmp
cmp
push
mov
sbb
inc
sbb
ret
mov
and
pop
imul
mov
pop
shr
and
ficoms
sub
test
sbb
adc
movsl
mov
out
pop
mov
cmpb
lret
mov
movsb
adc
pop
dec
lret
cwtl
lcall
jp
mov
push
fsubrs
ja
fwait
adc
lds
mov
fmull
test
int
aam
mov
or
cmp
lds
js
rclb
mov
mov
test
imul
sub
mov
call
sub
mov
addr16
mov
cmpsb
jp
mov
imul
add
push
fsubrl
cmp
xchg
jb
push
jb
popf
adc
mov
out
push
pop
sbb
out
sub
xor
popf
sbb
bound
jno
pushf
fnstenv
mov
jle
push
inc
out
dec
scas
cs
sbb
lods
or
test
cli
mov
or
cld
jg
or
addr16
and
loopne
mov
int
and
xchg
adc
pop
inc
jp
mov
inc
leave
mov
shl
mov
in
lret
sarl
fstl
mov
popf
cs
mov
xchg
pop
push
cmp
cmpl
jg
rcl
ja
dec
sub
sbb
into
addl
cmpsl
clc
repnz
dec
xchg
ret
pop
mov
mov
ret
inc
lods
iret
aaa
adc
jp
mov
ret
sub
push
call
sti
les
fisubs
leave
jno
iret
ljmp
adc
sbb
dec
insb
bound
cltd
jo
in
xchg
jmp
jp
mov
and
hlt
addr16
inc
dec
pusha
movsl
xchg
decb
push
rol
das
in
jmp
jns
inc
push
mov
or
dec
and
repnz
fldenv
int
les
xor
dec
and
jnp
jns
xchg
daa
sub
jbe
cmp
push
dec
jnp
icebp
cmp
add
adc
int3
lods
jno
popf
add
xor
daa
sub
jbe
and
lahf
and
jo
hlt
ljmp
dec
icebp
flds
hlt
frstor
out
outsl
dec
mov
int3
insl
ja
mov
or
jo,pn
stc
push
dec
es
scas
stos
pop
cmp
sub
fistpll
pop
into
mov
fistpl
jmp
push
pop
cltd
dec
movsb
cmc
je
push
aad
test
cld
push
paddusb
sbbl
aaa
lea
mov
ss
sbb
mov
push
push
cmp
mov
pop
fstpt
fistl
xor
gs
ja
lret
or
push
and
daa
outsb
mov
add
leave
test
inc
inc
sub
test
stos
push
sbb
inc
xchg
out
xchg
test
jns
cmp
ret
xchg
lods
les
jle
add
aam
lcall
inc
mov
push
mov
fs
push
and
rcll
and
push
sub
daa
jle
lock
adc
dec
mov
mov
dec
imul
outsb
mov
mov
pushf
ucomiss
clc
push
sub
jl
or
aaa
add
lock
push
sahf
loopne
icebp
clc
mov
add
or
sub
mov
mov
cmp
fwait
popf
pop
add
mov
int3
jecxz
inc
push
xor
add
xchg
xchg
inc
pushf
mov
push
fwait
cmpsl
sti
add
fsubs
jp
shll
mov
mov
test
sbb
lret
ss
or
sbb
in
xchg
mov
xor
scas
push
ret
lods
loop
jno
out
xor
and
mov
mov
mov
and
xor
mov
push
cld
ret
test
test
rclb
loop
out
pop
cmpl
decb
dec
outsl
fcompl
mov
ret
loop
mov
shrb
lret
xor
jnp
scas
aad
mov
js
pop
lods
mov
clc
mov
dec
call
pop
test
and
mov
fmull
xor
lds
or
loopne
mov
dec
add
jg
pop
mov
inc
inc
xor
push
clc
dec
fists
add
add
push
dec
idivb
cmpsl
arpl
rcrl
push
dec
les
cld
jo
mov
mov
jmp
push
nop
sbb
stos
dec
nop
cmpsb
test
push
push
test
xlat
adc
ffree
pusha
pop
shll
pop
bound
cmp
nop
adc
push
push
addb
ds
mov
mov
stc
sub
test
aad
repnz
and
and
fnstcw
repz
mov
mov
mov
ja
outsl
iret
jnp
adcl
psubd
ficomps
sbb
in
sub
push
mov
fadd
mov
jae
lcall
adc
pop
push
sub
sub
mov
dec
mov
xchg
imul
push
cmp
hlt
call
out
test
inc
mov
push
mov
sti
jecxz
push
xor
sbb
mov
mov
lock
stos
mov
and
cli
inc
or
sti
sub
popf
xchg
sbb
fdivrs
shr
and
nop
mov
incb
fldcw
jge
mov
in
std
inc
scas
pop
sbb
xchg
add
sub
sub
mov
cmp
mov
arpl
adc
mov
out
cmp
push
pop
cmp
sub
incl
mov
js
nop
xchg
or
jle
mov
pop
jmp
ljmp
and
mov
dec
aad
outsb
jg
jg
dec
mov
pop
push
cmpsl
jns
scas
mov
push
ds
shrb
repnz
dec
mov
insb
shr
mov
sbb
xchg
imul
fs
jbe
mov
sub
and
fisttpll
arpl
mov
sub
pop
add
cwtl
jl
out
pop
adc
sbb
call
pop
xor
repnz
inc
xor
nop
xor
test
jp
inc
jl
data16
jge
add
jl
stos
lds
or
popf
mov
loopne
pop
xchg
mov
loope
mov
xchg
in
or
mov
dec
std
mov
xor
pop
mov
fcmovnbe
inc
and
sub
rcr
popa
xchg
mov
jnp
call
xor
xlat
call
int
out
jne
cli
xchg
ja
xchg
fidivrs
pop
push
mov
sub
pop
movsb
fmull
xchg
out
pop
or
jo
push
iret
cmp
pop
jae
cmc
fmul
xchg
aam
pop
adc
lea
aas
jno
icebp
fcmovnu
repz
shrl
cmp
rcrl
mov
mov
test
mov
loope
outsb
jg
imul
ljmp
adc
loop
sub
sbb
add
pop
std
test
shrb
pop
lds
movsl
xchg
inc
sbb
mov
aaa
or
ljmp
out
enter
cld
inc
inc
lods
adcl
jbe
int3
xchg
inc
mov
shrb
aaa
dec
lods
scas
xor
or
pop
lret
dec
mov
add
lock
mov
xor
stc
rcll
mov
xchg
jecxz
popf
cmp
jle
shl
dec
push
cmp
das
call
imul
jns
xlat
int3
inc
mov
outsl
sub
dec
xor
jg
xor
push
cwtl
sub
movsb
cmp
cmp
push
pop
push
aad
loope
inc
push
dec
add
adc
scas
sbb
pop
sub
inc
adc
dec
inc
jge
arpl
dec
inc
cmp
xchg
sbb
scas
std
push
cwtl
mov
mov
cwtl
sub
enter
je
sbb
sub
fists
dec
daa
dec
add
clc
dec
popf
jge
sub
xchg
jns
inc
and
jns
shlb
icebp
jno
imul
push
push
insb
popa
js
stos
imul
adc
jp
mov
push
arpl
jno
sub
cmpsl
lcall
fnstcw
scas
jg
scas
adc
add
mov
loop
hlt
add
ja
std
add
dec
out
sub
hlt
in
cli
xchg
ja
cmp
cmp
aaa
js
je
mov
sub
jb
loopne
xchg
lcall
std
andb
sahf
push
dec
testl
pop
mov
adc
or
and
xor
adc
scas
mov
push
pop
mov
mov
sahf
or
or
enter
xor
fstps
push
xchg
imul
out
cltd
das
push
outsl
inc
adc
popa
sub
into
rclb
ds
and
and
pusha
ljmp
nop
packsswb
popf
jp
jl
xor
cmc
jo
sub
add
movsb
stos
shl
inc
inc
push
pop
dec
cmp
das
cli
sub
sub
lock
add
dec
out
xchg
xor
dec
cmp
lret
daa
jne
mov
push
jo
push
nop
dec
sbb
inc
cmpsb
cmp
push
outsb
ljmp
pop
and
imul
push
lret
adc
inc
jnp
mov
xchg
jmp
push
pop
mov
fidivs
mov
cmp
xchg
cltd
loopne
sub
jnp
insl
dec
mov
sub
in
push
push
xchg
fmuls
lret
lret
pop
dec
add
sub
push
adc
mov
lea
leave
fisubrl
cwtl
cmp
and
insb
fadd
jle
popf
push
dec
or
jno
clc
icebp
pushl
ret
iret
adc
mov
dec
iret
call
jmp
pop
fidivs
add
cli
enter
data16
xchg
cwtl
inc
mov
cmp
jo
xor
push
adc
lods
inc
ja
push
cmpsb
ss
sub
pusha
sub
jl
or
mov
ja,pn
pop
and
pop
mov
ficoml
cltd
das
and
push
push
je
or
xor
mov
roll
fmul
adc
fsts
push
sub
les
hlt
jae
and
ret
sbb
push
into
sbb
xchg
dec
mov
aam
ja
out
ret
insb
adc
mov
cli
or
mov
add
lds
or
emms
xchg
into
adc
lods
inc
and
mov
test
aad
xchg
xchg
jnp
stos
shrl
in
dec
outsl
add
jecxz
mov
into
out
bound
adc
movsl
inc
add
cs
dec
test
ret
das
insl
mov
xor
sub
orl
aaa
or
test
ret
es
mov
pop
mov
loope
ret
sbb
ja
sti
dec
data16
push
sub
mov
cmp
add
push
imul
pop
roll
in
push
pop
callw
add
mov
jne
test
leave
leave
clc
pop
sbb
ljmp
push
rolb
jge
inc
sub
pop
xchg
fcomps
adc
jp
mov
pop
mov
lods
inc
jecxz
sbb
sub
data16
loop
cmpb
mov
dec
int3
in
mov
fnsave
push
mov
shl
inc
xchg
cmp
fnstcw
push
insl
and
hlt
dec
mov
jo
in
or
cwtl
adc
mov
je
rcrl
cwtl
cwtl
sub
addr16
sbb
mov
or
or
mov
mov
push
shl
dec
pop
pusha
aas
dec
enter
fcoml
addr16
vpblendmb
jp
dec
lds
and
mov
test
dec
cmpsl
in
xor
dec
orl
insl
stc
adc
xchg
cmpl
push
dec
dec
gs
in
jp
fldl2e
arpl
out
in
enter
shrl
mov
jo
inc
mov
jp
mov
cmpsl
into
sub
xor
xchg
adc
lret
dec
push
xchg
fs
fnstenv
and
lret
les
test
inc
jg
mov
in
es
pop
popa
sub
push
inc
nop
xor
ret
lcall
ret
cwtl
xchg
pop
test
jb
push
adc
dec
stos
lods
sub
xchg
mov
mov
add
fs
sahf
inc
and
loopne
jp
jl
ja
fimuls
movsl
cmpsl
mov
fs
add
xchg
mov
pop
or
jbe
rorb
fldl
mov
push
and
dec
jmp
lock
or
idivl
in
adc
mov
out
or
push
lret
pinsrw
in
ret
stos
std
jmp
adc
popa
add
adc
cmc
xor
ret
inc
jl
movsb
dec
out
push
insl
in
ss
jg
leave
dec
push
or
fwait
cmpsb
cmpsl
mov
jle
popa
movsl
repz
pop
mov
push
imul
sub
fs
or
jne
nop
stos
out
jp
or
mov
fiaddl
mov
mov
ret
movsl
mov
icebp
mov
or
leave
adc
mov
repz
mov
jecxz
dec
lds
imul
ja
mov
push
add
push
hlt
sbb
xor
fwait
rol
aas
addl
enter
push
imul
inc
add
fldenv
cmpsl
add
pop
cltd
cltd
sti
imul
jle
lock
stos
lock
aam
xchg
mov
lods
mov
mov
and
imul
xchg
fmuls
in
loop
push
mov
adc
push
int3
add
jecxz
insl
pop
mov
ja
fimuls
mov
sub
xchg
test
dec
mov
adc
pusha
pop
mov
enter
insb
add
xchg
jae
push
rcrl
bound
or
outsl
pop
sbb
mov
test
jnp
bound
dec
sbb
adc
dec
ficompl
or
or
mov
icebp
fcmovb
in
movsb
rcl
mov
andb
cmp
rcl
mov
mov
stos
mov
ds
movsl
mov
in
mov
insb
sub
inc
fcmovnbe
dec
jmp
jb
mov
xor
bound
mov
fs
add
mov
sub
sbb
adc
aam
test
mov
jbe
jg
fiadds
in
pusha
jmp
out
ja
out
das
loop
leave
inc
xchg
sub
data16
ss
push
jbe,pt
pop
inc
sbb
pop
push
xor
cld
in
fcompl
test
mov
lock
xchg
jne
es
or
cmp
dec
scas
mov
rcll
jmp
mov
fildll
sbb
cmp
cmc
ja
jnp
rorb
decb
add
sub
mov
or
push
jg
ds
into
and
dec
add
cltd
push
xor
xchg
jmp
push
xor
int
data16
pop
xlat
movsb
push
ret
popf
test
push
sub
leave
sub
aad
push
and
jg
repnz
or
jecxz
test
mov
ljmp
lods
and
sbb
mov
call
xorb
sub
pop
popf
popa
pop
iret
jbe
adc
jl
xchg
adc
xor
insb
add
das
push
mov
jno
inc
nop
popf
int3
movsb
mov
adc
fildll
hlt
mov
add
stos
inc
add
add
cmp
imul
jl
push
add
and
daa
mov
loop
movsl
sti
in
es
mov
mov
popa
cli
jno
jp
pop
xchg
aas
xchg
xor
jge
insl
std
xchg
dec
inc
test
mov
enter
push
lret
mov
lods
fcmovnb
lret
push
das
sbb
jns
sbb
icebp
das
sbb
pop
dec
rclb
jmp
jno
pop
pusha
idiv
pop
das
cmp
mov
fcmovnbe
mov
arpl
sbb
adc
mov
mov
rcrb
mov
jae
loope
insl
pop
in
ja
sub
scas
insl
flds
push
int3
jne
rolb
scas
pusha
mov
sub
cmc
std
jmp
mov
inc
ret
inc
xchg
xchg
movsl
cmpsl
cwtl
lock
aas
int
repnz
ss
movsl
imull
ja
add
mov
cmpsb
lret
push
mov
mov
push
scas
push
adc
nop
mov
test
scas
cmp
mov
scas
roll
pushf
inc
movsl
out
jo
cld
sbbl
dec
sbb
scas
xor
mov
add
and
ss
shlb
mov
popf
outsb
aad
icebp
push
mov
cmp
sahf
rol
imul
cs
xor
add
ret
xchg
add
mov
mov
cmp
stos
mov
or
jl
fidivrs
push
jge
lock
pop
aaa
pop
in
insb
popf
in
data16
mov
gs
ja
out
jnp
push
loope
adc
dec
lods
das
pushl
push
push
push
fwait
xchg
xchg
insb
mov
mov
fisttpl
loope
addr16
addr16
sub
adc
xchg
idiv
push
loop
push
jae
mov
adcb
into
and
ficompl
and
dec
ljmp
mov
sbb
andl
shl
repnz
inc
fcompl
sarl
jnp
ret
scas
dec
sbb
inc
push
addr16
cmpsl
mov
jl
push
and
gs
xchg
sbb
movsb
fisubrl
push
ret
sub
dec
and
xchg
push
pop
cwtl
and
push
cld
push
js
xchg
iret
insl
adc
mov
shl
mov
push
inc
stc
sbb
cmpsl
adcb
xor
mov
shll
xchg
rcrb
add
mul
mov
xor
mov
mov
pop
xchg
ss
mov
out
or
outsl
adc
mov
pop
mov
jecxz
sar
mov
mov
ret
mov
jmp
lret
imul
inc
jge
jbe
in
xchg
mov
ja
add
pop
mov
push
mov
sbb
and
fcomps
adc
lret
dec
and
out
mov
add
jae
movsb
or
mov
push
sub
adc
lods
subps
mov
movsb
les
and
nop
dec
pop
pop
mov
and
mov
dec
jle
push
push
cmpsb
lcall
sahf
add
movsl
scas
xor
ja
xchg
mov
out
add
mov
cmc
lret
insb
frstor
scas
out
aas
pop
imul
push
lahf
dec
mov
and
mov
xchg
or
add
jne
add
sbb
setp
adc
mov
mov
ljmp
add
push
outsb
and
rcl
adc
scas
mov
ret
pop
sub
push
and
dec
js
pop
dec
xchg
arpl
xchg
cltd
sub
mov
xchg
add
ds
push
arpl
mov
inc
stos
jns
repz
adc
or
int3
adc
push
popa
jmp
push
mov
cmp
inc
ja
sbb
data16
filds
xor
cmp
add
push
cmp
das
fnstenv
sbb
cwtl
adc
or
pop
out
das
iret
cld
lcall
fsubr
int
lcall
arpl
xchg
movsb
aad
sbb
adc
daa
push
push
aaa
mov
loope
leave
test
adc
cwtl
icebp
lock
outsb
lds
push
jb
jmp
out
mov
cmpsb
std
leave
fldt
lock
lahf
pop
dec
mov
mov
aas
pusha
pop
mov
popf
dec
dec
and
data16
sahf
xchg
iret
or
std
or
ds
jg
mov
mov
push
das
adc
stos
out
adc
adc
ljmp
push
imul
loope
scas
sub
loop
mov
push
jge
ret
test
jnp
xlat
or
addl
sbb
add
dec
repz
movsb
push
scas
adc
push
pushl
div
xor
sub
mov
inc
mov
pop
loope
xchg
aam
popa
xchg
ret
les
pusha
push
loop
xlat
dec
stc
sbb
std
cwtl
mov
in
sbb
test
add
and
in
and
pusha
inc
rcll
icebp
xchg
pop
lock
cmp
lods
movsl
pushf
mov
pop
adc
roll
aaa
jp
jo
data16
popa
mov
lea
add
xchg
jae
out
sub
sbb
popf
fbld
jo
jg
mov
jp
sub
stc
shlb
and
pop
jle
bound
or
xchg
xchg
and
xlat
addb
addl
and
cmp
out
xor
test
sbb
mov
mov
mov
push
in
jo
addr16
lods
test
mov
repz
aas
imul
pop
test
mov
sub
jo
mov
or
mov
out
in
lcall
js
roll
cmp
repz
clc
pop
and
xor
lods
add
rcll
push
test
lods
dec
in
incb
cld
test
fcompl
inc
fisttpll
jnp
and
xchg
jp
push
clc
andb
fsubs
sbb
pop
xchg
cltd
insl
in
inc
stc
cli
mov
aam
daa
das
int3
loopne
mov
adc
pmovmskb
push
ret
rorb
cltd
pop
cmc
dec
and
mov
or
jg
xchg
sbb
mov
idivb
aaa
roll
xchg
xor
inc
subb
test
inc
ds
lret
mov
jb
xchg
aad
in
inc
inc
sbb
call
pop
pushf
jb
dec
fistpl
and
mov
pusha
sub
insb
dec
ljmp
jo
sub
mov
cmp
repz
ljmp
add
inc
jg
inc
push
idivl
sub
pop
insb
fcompl
insl
dec
mov
pop
push
nop
mov
cmp
cs
lods
arpl
stos
and
adc
js
mov
jp
imul
hlt
les
je
sub
mov
fucomip
xchg
and
iret
mov
aas
add
test
cmc
popf
imul
inc
mov
sbb
fisubrs
dec
and
repz
mov
fnstsw
in
call
xor
fstps
push
cmp
inc
mov
add
sub
out
adc
stc
test
xchg
jo
mov
push
adc
adc
stos
loope
cs
movsb
enter
pop
out
jb
cs
pop
sbb
push
jle
rclb
mov
or
pop
mov
pop
loop
cmc
xchg
pop
pop
mov
add
xor
inc
js
cmpsb
pop
arpl
sub
sub
lret
pop
das
fisubl
sub
jns
cmp
add
addr16
loope
sbbl
mov
les
push
mov
arpl
adc
pop
push
icebp
pop
cmp
xchg
add
test
in
xor
push
and
cwtl
std
test
jge
pop
or
xchg
sub
ds
push
incb
cmc
jg
xchg
jge
imul
dec
sub
cltd
imul
xchg
xor
adc
mov
incl
and
iret
or
cmp
and
je
cmp
test
push
jmp
loopne
inc
pop
adc
loop
sbb
or
cld
mov
pop
mov
mov
sbb
fistpl
add
cmp
pop
stos
add
mov
lods
lds
in
insb
xor
add
fdivrl
jmp
stos
mov
and
sub
mov
fdivrs
mov
loop
imul
jp
jecxz
push
pop
cmp
pop
stc
popf
or
test
push
fwait
pop
and
mov
out
mov
fadds
mov
fbld
and
cli
out
sub
fiaddl
scas
rclb
pop
and
jmp
int
into
pop
scas
das
xchg
mov
in
addl
call
xlat
inc
add
lea
pop
ret
ljmp
mov
push
dec
mov
jnp
xor
xchg
pop
pop
jo
xchg
xor
ds
leave
add
push
fsubs
adc
inc
imul
jb
jp
mov
sti
or
xor
in
jo
icebp
out
fnstsw
cmc
leave
imulb
mov
pusha
push
ljmp
push
jecxz
repz
cld
and
popa
and
dec
je
xor
shrb
decl
ja
cmp
dec
and
adc
jae
jmp
jns
mov
ret
xor
add
sbbl
loopne
inc
test
lret
faddl
adc
xor
clc
inc
nop
inc
mov
push
ss
mov
xchg
adc
jecxz
jmp
jl
xchg
insl
mov
pusha
xchg
inc
loope
or
push
std
mov
roll
sbb
insl
mov
ljmp
aad
inc
jne
xchg
and
and
mov
and
mov
inc
cltd
mov
mov
add
adc
ffree
hlt
fsubrl
ljmp
sahf
clc
stos
jp
or
add
movsb
or
inc
mov
adc
pop
icebp
daa
inc
pop
push
sbb
cltd
cli
mov
mov
rclb
pop
out
pushf
stos
popa
cmc
inc
push
jb
out
je
jo
mov
jmp
iret
outsl
movsb
add
inc
aaa
loopne
stc
jmp
iret
leave
push
add
lock
or
insb
cli
int3
inc
out
arpl
movsb
aad
jbe
subl
jl
mov
jae
pop
ja
sbb
loopne
mov
adc
fsub
mov
hlt
cs
or
dec
xor
pushf
xchg
pushf
mulb
in
scas
jno
mov
andl
out
or
xchg
mov
jb
xchg
or
fstpl
adc
stc
loope
add
aas
mov
xchg
jbe
mov
mov
xchg
cmp
or
shll
dec
push
rolb
pop
pop
xor
shl
mov
cmpsb
scas
mov
xorb
mov
iret
dec
leave
inc
dec
cmp
arpl
or
add
and
pop
bound
adc
jbe
inc
ret
lock
gs
pushl
int3
jnp
sub
cmc
jne
lret
out
daa
mov
popf
sub
shll
iret
arpl
jmp
and
mov
mov
popf
xchg
pop
jmp
dec
and
push
and
loop
xchg
shll
loopne
and
fstpt
shl
mov
inc
jg
test
cmpb
mov
movsb
jle
rolb
outsb
lahf
jne
mov
push
adc
xchg
rorl
mov
aad
dec
inc
int3
test
in
mov
pop
je
lahf
in
call
sar
dec
adc
repnz
jb
repnz
xlat
dec
add
jae
and
sbb
insl
fidivl
and
pop
sbb
iret
add
inc
out
pop
jne
cmpsb
sahf
jmp
mov
ret
push
inc
iret
ss
adc
xchg
mov
pop
les
loop
out
lcall
push
adc
mov
arpl
push
psrad
ja
cltd
adc
dec
mov
cmp
lods
push
xorl
jecxz
test
and
imul
gs
sahf
out
add
loope
sbb
addr16
insb
push
loopne
lea
flds
add
jbe
mov
and
movsb
pop
ret
fdivrl
xchg
movsb
mov
fs
add
rcll
sbb
movsb
pusha
jmpw
scas
ror
imul
nop
movsl
and
icebp
lea
or
cmp
in
adc
and
fisubs
xchg
sahf
dec
or
lods
into
loope
dec
outsb
mov
outsl
jb
test
sahf
outsb
lret
out
jb
outsb
aam
loope
add
sbb
push
lcall
call
ret
dec
shlb
push
and
pop
in
xchg
shll
stos
test
das
int3
push
xor
inc
test
cs
subl
test
in
push
xchg
fmuls
mov
mov
int
in
test
or
enter
add
ret
mov
mov
enter
mov
in
xor
jp
fs
pop
and
fadd
data16
xor
popf
or
outsl
mov
cmpl
fistpl
xchg
mov
mov
push
xor
sub
mov
stc
or
xchg
int
mov
lret
cwtl
inc
jp
invd
push
call
pop
add
jne
divb
test
out
cmp
xchg
mov
int3
cmp
xor
push
sbbl
push
hlt
mov
and
xor
das
xor
scas
pushl
rorl
lds
nop
push
push
adc
cmp
jnp
out
xchg
ret
pop
sbb
and
mov
xchg
push
out
decl
sbb
mov
push
dec
cli
out
adc
xchg
pop
jge
cmp
jle
dec
jecxz
xchg
adcl
xor
or
cmc
xchg
xor
push
add
pop
pusha
fists
repz
js
test
xor
popa
or
jo
lahf
push
subl
mov
dec
push
mov
enter
mov
push
or
sbb
shlb
test
fldcw
out
add
mov
adc
mov
add
inc
cmp
int
imul
dec
fcoml
dec
das
pop
popl
mov
mov
jl
data16
das
leave
push
lods
mov
in
ja
push
pop
sahf
inc
jle
into
ja
fs
xchg
cmpsl
pop
std
in
es
aas
shlb
mov
cwtl
aam
sbb
cmp
or
push
jae
sub
pusha
scas
repz
out
jl
fstpt
jle
xor
loop
jno
adc
pushf
dec
arpl
test
divl
out
lock
nop
cld
adc
sbb
notl
or
subl
pushf
js
dec
cmp
adc
jnp
out
cwtl
mov
notb
lock
cld
std
mov
dec
cld
cld
mov
mov
scas
ds
pushf
dec
xchg
loop
pop
inc
inc
pop
inc
ja
inc
mov
xchg
pop
sbb
jge
pop
pop
sbb
int
mov
js
aaa
and
xchg
cmc
cmp
jg
iret
and
xchg
xor
sbb
arpl
lea
mov
movsb
out
xchg
sbb
or
shll
jg
adc
les
cmp
xchg
pop
adc
mov
inc
jl
out
cmpsl
movsl
jmp
sub
sub
dec
dec
cmpl
mov
cli
out
xor
imul
out
scas
sbb
pop
xchg
inc
add
movsb
mov
add
test
add
loope
mov
movsl
fistpl
push
add
icebp
mov
rclb
leave
test
lds
adc
add
add
jo
push
inc
dec
or
push
stos
inc
xor
jno
scas
outsb
mov
pop
test
xchg
cs
or
pop
fdivrs
push
and
leavew
jle
pop
jb
fisttpll
xchg
jle
jp
dec
dec
cltd
xor
mov
dec
add
cmpsb
test
cmp
jbe
test
cmpsl
dec
stos
xor
cmpsb
sub
fnstcw
leave
xchg
sbb
pushf
insl
or
inc
stos
andl
ja
jns
lahf
les
movsb
xor
std
cmp
insl
shll
pop
pusha
loope
lock
scas
inc
stc
adc
cmp
sub
cmp
int3
pusha
inc
mov
jnp
sub
repz
lods
xor
arpl
movsb
and
scas
fstpl
sbb
cmp
loop
adc
inc
js
cmp
xchg
mov
rcll
iret
adc
dec
test
in
and
cmpsl
shrl
dec
mov
daa
shrb
sbb
sbb
out
add
int3
ss
jno
ret
lret
clc
outsl
aas
or
std
mov
pop
lcall
mov
and
push
pop
dec
mov
loopne
cmp
mov
cltd
in
test
dec
pop
data16
jmp
shrb
loope
xchg
and
dec
sub
xchg
icebp
sub
adc
icebp
inc
push
scas
movsb
push
loopne
push
insb
loop
pop
mov
call
sub
mov
dec
gs
and
mov
out
jmp
jg
in
daa
ja
jbe
jg
aam
imul
int
fcoms
sbb
mov
sub
mov
mov
or
ljmp
ffree
into
popf
enter
push
pop
mov
pop
repnz
pusha
jae
pusha
jge
adc
fisttpl
mov
push
adc
cld
push
insb
sbb
ds
pop
or
mov
jl
and
pop
pop
mov
add
pop
test
sub
ret
xlat
test
fsts
call
pop
xor
pop
mov
insl
dec
sbb
jge
jne
dec
pusha
or
das
push
mov
xchg
rcl
pop
cmp
push
enter
das
bound
pusha
mov
shrb
imul
imul
push
sub
mov
js
xlat
lret
int3
nop
cmc
je
enter
pushf
lods
jno
out
ss
data16
jl
mov
fsubs
std
stos
loop
jne
scas
xor
movsl
push
mov
test
add
cltd
insb
add
and
and
sub
lock
mov
add
cmpsb
rcll
out
lret
js
cmp
pushf
out
scas
inc
test
movb
pop
and
jnp
dec
add
pop
xchg
sub
jg
mov
icebp
cld
aam
rcpps
les
push
mov
cmpsl
jo
sbb
fsubr
jb
add
into
imul
pop
push
fmulp
inc
xchg
stos
outsb
add
jbe
xchg
arpl
pop
push
dec
imul
add
or
push
dec
test
xchg
xor
test
jle
mov
mov
aas
mov
xor
mov
mov
mov
jns
leave
xchg
adc
xor
mov
inc
sub
xchg
fcomp
cmpsl
loopne
jecxz
lret
and
and
scas
stc
scas
inc
rcl
jae
dec
out
ss
mov
nop
xchg
dec
icebp
mov
lods
iret
mov
test
sbb
sbb
pushf
jae
or
cmp
inc
movsb
push
mov
mov
dec
das
inc
imul
inc
je
in
mov
pop
sub
inc
mov
push
and
scas
pop
pop
mov
mov
out
addr16
into
mov
dec
jne
push
sbb
dec
mov
pop
inc
mov
aam
xchg
mov
das
loopne
xchg
cmp
sub
int3
out
add
daa
sbb
insb
movsb
insb
mov
ficompl
fcoml
aam
sub
mov
cmpb
mov
cmp
lods
imul
insl
testb
add
and
out
or
jb
jmp
lods
and
or
jbe
fs
xchg
sub
mov
or
clc
add
bound
call
xchg
addr16
lret
mov
test
lret
xchg
andl
sub
cmp
xchg
sub
out
sbb
xchg
xchg
jmp
into
xchg
sbbb
lcall
insl
dec
cltd
rol
mov
or
mov
inc
mov
lcall
or
fdivrp
stos
mov
jecxz
ret
lret
lahf
sbbl
push
mov
cmp
fldcw
dec
xchg
ds
test
xchg
jl
xor
mov
fwait
mov
repz
data16
cli
push
mov
jns
mov
mov
sub
mov
cmpsl
vpmulhuw
pushl
inc
outsb
push
cmpsl
cmp
pop
cmpsb
or
cmc
loopne
pop
aad
rolb
mov
stos
and
inc
call
mov
xlat
xchg
lcall
cmp
cld
and
dec
pop
addps
dec
or
or
pop
ds
push
adc
jmp
pop
mov
fmull
icebp
jle
mov
and
enter
in
or
fcoms
outsb
mov
aad
pop
jae
lods
sub
sahf
in
scas
call
xchg
sahf
data16
inc
sub
inc
insb
push
sbb
sbb
xchg
mov
rcll
pop
add
aaa
int
mov
inc
sub
nop
pop
jg
ds
jno
fcmovne
out
je
xchg
idiv
std
mov
mov
push
ss
pop
sbb
mov
sub
lahf
cmp
pop
mov
insb
mov
enter
lahf
in
pop
cmp
adc
ret
xchg
sbb
fldenv
inc
xchg
dec
mul
cs
fisubs
lret
push
lcall
std
push
mov
pushf
push
scas
sbb
jo
pop
test
lods
xchg
ret
mov
pop
push
push
mov
add
jne
pop
jecxz
aaa
pop
je
dec
movsl
outsb
test
nop
pop
sub
and
push
ficompl
add
aaa
cli
jl
in
jae
adc
std
mov
and
xchg
loopne
mov
out
gs
out
aad
sbb
mov
test
ss
inc
pushf
xchg
push
js
cltd
pop
outsl
and
enter
pop
icebp
imul
orl
aad
aaa
lcall
dec
or
out
nopl
mov
jmp
cmpl
adc
inc
jnp
and
test
pop
inc
int3
sbb
int
mov
inc
loopne
jecxz
mov
sbb
popaw
int
aam
inc
dec
sahf
mov
cli
testl
pop
jae
sub
xchg
je
xor
mov
and
int
adc
imul
cmp
ljmp
fstps
aam
stc
int3
pop
pop
sbbb
aad
and
cmp
inc
dec
lret
test
cltd
fs
mov
mov
or
int3
inc
jecxz
divl
fstpl
push
jno
push
dec
mov
mov
pshufw
icebp
out
outsb
add
fwait
rorl
test
or
ss
fdivl
sub
pop
dec
fisubrl
dec
push
jnp
jecxz
imul
in
adc
sbb
fcmove
rcr
iret
ja
pop
push
cltd
cld
dec
inc
test
loope
xor
cmc
inc
dec
adc
addb
push
push
stc
fdivrs
jbe
aas
cwtl
dec
mov
fidivrs
out
dec
mov
mov
repnz
sub
or
lods
outsb
ljmp
and
dec
push
pop
cmp
das
ss
cli
test
and
cmpsl
push
nop
mov
xor
xchg
mov
pusha
inc
push
sub
push
clc
enter
xchg
xor
test
lock
fsubrs
mov
pop
push
push
jns
cmpsl
popf
lahf
xor
push
pop
fnsave
lock
jg
mov
jbe
or
ja
cmp
dec
inc
cmp
mov
jo
cld
ffree
imul
dec
mov
add
jl
mov
mov
div
mov
jp
test
and
mov
and
rorb
or
test
jg
xor
inc
fcoms
mov
adc
cmpsl
scas
mov
movhps
clc
add
aaa
sarb
leave
cmpsb
in
notb
jno
dec
fs
dec
cld
push
push
and
jecxz
fnstenv
sub
sahf
sub
sub
or
shrb
and
pop
xor
ret
ds
push
jg
adc
loop
movsl
lds
dec
cmp
lret
stc
daa
fs
jae
lock
mov
xchg
xchg
js
push
test
sbb
addr16
add
add
out
jg
loop
andb
cs
jb
push
imul
in
out
cmpsl
push
aaa
insl
or
mov
and
fmuls
mov
scas
scas
nop
sbb
jns
pop
sub
mov
push
sahf
mov
sub
rorl
pop
int3
out
movsl
jne
ret
cli
adc
and
or
hlt
pushf
sar
mov
outsl
dec
xor
sahf
roll
xchg
push
ret
cs
ljmp
push
and
dec
sub
adcb
add
ljmp
fistpl
in
pop
mov
insb
lcall
sub
adc
lret
inc
pop
std
jmp
int3
xchg
lods
mov
out
inc
call
mov
xor
mov
mov
insb
ds
add
jge
xchg
jb
mov
inc
ljmp
adc
or
into
cltd
push
je
sub
addr16
fidivl
xchg
jbe
dec
fcmovnu
inc
cli
pop
xchg
ja
jns
mov
mov
ja
xchg
xchg
fdivl
fcomps
rcr
rcll
jg
lods
roll
sub
jnp
rol
gs
jg
xlat
adcb
and
iret
mov
fstpt
add
jmp
mov
sbb
stos
dec
mov
pop
add
test
jae
out
ds
push
icebp
bound
push
dec
js
addr16
push
xor
test
sub
xor
pop
cmp
fistl
xchg
mull
aad
jp
loope
pop
addr16
dec
aas
dec
sbb
xchg
dec
mov
xor
push
mov
or
ficoml
dec
fildll
bound
push
and
cmpsl
lret
fdivs
cltd
lock
adc
je
daa
xor
jecxz
lret
inc
inc
cmp
add
leave
lea
jl
rorl
fwait
xchg
and
mov
adc
fldl
sbb
in
fs
enter
andb
sub
adc
pop
jge
jnp
or
in
cltd
or
aam
mov
xchg
inc
test
jae
sbb
test
sti
cmp
aaa
cmpsb
addr16
jg
addr16
lods
and
cmp
ds
js
sbb
mov
jo
fsubrs
imul
push
add
call
mov
mov
push
test
lock
mov
inc
xchg
sbb
sti
repnz
fistl
mov
pop
sbb
add
movsb
xchg
pop
xchg
mov
sbbb
add
test
mov
repz
add
mov
icebp
mov
add
xchg
mov
mov
dec
lds
pop
outsb
jb
fdivs
cmp
jge
pop
and
xchg
lret
or
or
xchg
addb
jmp
jno
hlt
xor
les
jl
insb
orb
push
sarl
jmp
rcrl
sub
fisttpll
movsl
scas
shrl
xor
push
je
lcall
jbe
inc
sahf
les
lock
ja
aas
xor
ret
mov
xchg
decl
icebp
mov
inc
cld
fcomps
dec
xor
enter
pop
push
add
mov
cmp
daa
pop
arpl
pop
stos
fcmovu
mov
add
push
lret
int3
repz
jl
cs
mov
mov
cmp
mov
jl
sbb
scas
inc
imul
es
jns
pop
adc
mov
pop
xchg
push
inc
pop
push
lods
scas
mov
repnz
and
jno
lahf
scas
nop
sahf
insl
xchg
sbbl
add
scas
in
es
jmp
lret
das
pusha
dec
sbb
add
push
adcl
data16
inc
stc
lea
sbb
jae
call
dec
cmpsl
gs
or
sub
adc
mov
and
mov
lock
sarb
pop
loope
pushf
pushf
and
in
roll
jb
add
mov
mov
in
cmp
in
add
les
mov
insl
test
mov
lahf
leave
jg
jo
and
cmp
rclb
pop
cmp
movsb
pop
dec
xchg
scas
xchg
or
int
repz
int3
std
pushf
je,pn
push
sbb
ret
add
adc
and
dec
sbb
jle
mov
je
aaa
out
test
insl
in
mov
add
dec
scas
mov
xor
int
gs
arpl
loopne
notl
in
and
test
dec
jge
pop
dec
aas
orb
or
jb
fimull
sbb
aas
xor
ljmp
pop
mov
add
dec
xor
insl
arpl
push
inc
aad
loopne
jecxz
ds
mov
dec
xchg
pop
enter
xchg
and
sbb
pop
lock
xor
aas
cltd
cmp
outsl
iret
rclb
jecxz
jge
das
das
fldt
jb
mov
mov
cmp
fwait
out
pushf
mov
cmp
pushf
icebp
in
lock
jbe
mov
xor
out
js
sarl
popf
inc
fucom
cmp
pop
fcomp
xor
loop
push
aaa
mov
push
sbb
mov
or
jp
and
mov
std
out
subb
pop
xchg
ret
out
dec
sub
sbb
mov
roll
cmpsb
jbe
andl
jnp
cmpl
or
out
sbb
aaa
leave
inc
sub
add
movsb
sub
sbb
jo
push
lcall
pop
jbe
or
mov
cli
jg
mov
or
jle
or
cmp
adc
fwait
cmpsl
push
push
fwait
dec
inc
push
clc
push
jl
and
loop
jg
in
into
sub
fdivs
and
mov
ret
daa
cmp
sahf
cltd
cwtl
pop
test
sub
lret
cmpsb
fstl
arpl
stc
push
stc
mov
jne
inc
push
repnz
ret
sahf
push
cmpsl
rcl
xor
fisubrs
lret
test
cmpsb
xlat
push
out
cmpsl
mov
je
cmp
adc
dec
inc
outsb
sub
in
repz
shlb
xchg
sbb
scas
cltd
stos
lods
add
repnz
mov
add
dec
mov
fidivrs
sub
add
xor
stos
lds
jb
jle
jle
mov
mov
aaa
repnz
in
jno
pop
insl
mov
enter
fistpl
and
cmp
lock
push
bound
sub
adc
movsl
loope
sbb
and
fnstcw
call
xor
mov
or
push
jg
adc
pop
sbb
mov
shr
mov
add
xor
ljmp
testl
rcrl
push
cmpsb
or
fs
movsl
pop
ja
out
test
push
addr16
stos
pop
cmp
mov
sub
push
inc
sub
dec
lcall
dec
xchg
mov
jl
jo
pushf
int
in
fcomps
sbb
cld
or
sti
out
xlat
lods
mov
mov
fimull
pop
cmp
ds
fstpt
mov
js
cmp
pop
inc
nop
dec
push
ret
pop
mov
or
jb
aam
mov
fldenv
cli
pusha
das
clc
push
mov
insl
jmp
stc
out
popa
sti
mov
fsts
push
sti
jmp
push
insl
mov
or
xor
sub
shll
jl
fs
enter
push
push
mov
sbb
mov
pop
fldcw
jmp
xchg
or
jae
sub
lods
mov
loope
xor
inc
lds
frstor
in
insl
or
jnp
imul
aad
bound
xchg
mov
cmpsl
jae
dec
stos
dec
movsb
add
adc
push
dec
pop
sbb
lret
fcom
sbb
dec
filds
xor
out
test
sbb
sbb
push
mov
shrb
pop
jmp
sbb
push
sub
push
cmp
mov
cwtl
adc
insl
outsb
outsb
out
fiaddl
test
cli
adc
shll
sbb
mov
push
je
outsb
or
fxam
sub
jle
or
lcall
cmp
mov
out
adc
hlt
rcll
xchg
mov
pop
xor
mov
cli
dec
mov
xchg
addr16
movsb
inc
xor
xor
jae
push
cmp
call
push
pop
jbe
mov
mov
inc
arpl
mull
fcomps
xchg
mov
or
lcall
pop
ss
mov
fsub
icebp
in
sbb
jmp
sub
call
jnp
orl
jp
out
rcl
push
lds
push
xchg
call
or
inc
lods
popl
xchg
cmpsb
pop
sti
or
and
das
pusha
imul
mov
mov
shlb
in
sbb
push
cmp
stos
adc
xchg
loope
insl
add
pop
adc
jle
xor
dec
push
push
in
xlat
dec
or
imul
int3
jge
xor
push
out
pop
xchg
pop
repz
pop
mov
pop
popl
lcall
sub
push
dec
icebp
xchg
jnp
dec
mov
cli
fsubs
add
sub
mov
pop
out
into
push
nop
lock
mov
cmp
add
sahf
and
jno
movsb
sub
ljmp
ds
aas
cs
fmull
push
and
ja
pop
mov
push
in
adc
add
lock
aad
or
imul
cmc
pop
push
jns
push
or
out
add
clc
dec
inc
cmp
and
fnclex
insb
push
movsl
and
loopne
mov
sahf
add
addr16
and
std
aad
shlb
mov
mov
lods
je
loope
and
int3
dec
mov
mov
js
mov
cs
xchg
rep
adc
add
push
lret
rolb
das
add
inc
fdivrs
outsl
popa
mov
scas
cltd
push
mov
or
pop
pop
cmp
loope
adc
push
xchg
mov
dec
es
add
and
stos
test
lret
push
pop
push
push
icebp
js
sub
mov
or
pop
pop
pop
mov
mov
cltd
cmc
sbb
jge
fldl
xor
push
push
cltd
cmc
push
imul
aas
in
int
lods
ds
jle
cmp
pop
or
add
inc
lret
repnz
cs
cmp
ret
jno
mov
jne
rorl
jg
mov
mull
fwait
into
sahf
test
push
cmp
loope
xor
out
add
sahf
pop
mov
push
pushf
mov
adc
repnz
xchg
fwait
adc
and
add
sub
sub
push
in
sbb
clc
bswap
scas
pop
mov
addr16
or
mov
sbb
mov
and
adc
xlat
or
push
pop
or
push
sti
outsb
sbb
push
xchg
aad
mov
and
aad
sub
and
adc
xchg
and
cld
dec
push
mov
rcrb
shll
sbb
sbb
ret
add
push
xchg
rcl
outsl
aad
mov
je
xor
addr16
push
sbb
xchg
icebp
mov
and
cmp
lods
jbe
mov
loop
pop
xchg
cmp
in
mov
fldl
mov
add
enter
inc
and
inc
inc
lods
repz
cmp
movsb
jno
push
lds
inc
jno
sbb
push
insl
ret
xchg
dec
or
into
sub
movsl
sbb
mov
jb
stos
pop
add
xchg
pop
xor
lret
dec
jmp
lods
aam
xor
push
imul
sarb
clc
mov
lock
fnstsw
adc
pop
xor
aaa
and
mov
sbb
stos
fldl
mov
ja
gs
inc
sahf
dec
fiadds
cmc
sbb
cmp
or
data16
cld
nop
mov
lods
lds
mov
and
icebp
hlt
and
repz
mov
mov
lret
cmpsb
inc
dec
xchg
and
and
lock
bound
nop
xor
push
mov
dec
leave
repz
pop
gs
loopne
sets
fisttpll
and
in
out
aaa
pop
movsl
mov
stos
mov
mov
test
les
sub
dec
pop
push
add
lret
stos
fcom
orb
fadd
dec
xor
fists
add
out
xor
add
dec
adc
clc
data16
mov
cmp
shrl
popaw
cmpl
movsl
add
mov
pop
mov
stc
daa
mov
add
adc
cs
mov
xchg
int
mov
pushf
cmp
es
icebp
xchg
call
push
mov
cli
lods
sbb
fmull
pusha
sbbb
js
lods
lds
adc
dec
aad
sub
inc
lret
repnz
xor
icebp
xchg
lret
daa
pop
dec
push
hlt
or
fnsave
fidivrl
cmp
es
xchg
cld
cmp
data16
das
lret
lcall
into
mov
push
cmp
repnz
aad
ficoml
push
and
sub
movsb
test
flds
xor
xor
jl
call
ffreep
stos
dec
cmpl
xlat
inc
jno
dec
mov
or
aam
xchg
cmp
popa
movsl
js
loopne
jo
xchg
fs
fildl
mov
fidivrs
pop
mov
daa
hlt
mov
mov
xor
cmp
test
ja
push
sarb
xchg
xchg
adc
sbb
push
movsl
data16
stos
sbb
insb
rorl
das
cmc
xchg
mov
jp
aad
cmp
adc
int3
out
xchg
xor
and
fs
jbe
xor
jl
lahf
jb
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
call
pop
pop
mov
pop
mov
pop
mov
pop
cmpb
jne
mov
pusha
lea
push
xor
pushl
mov
mov
call
jmp
mov
popl
add
popa
lea
push
call
call
jmp
popl
add
jmp
add
jb
gs
xor
cs
insb
add
cmpsl
add
add
lea
lods
or
je
mov
mov
rep
jmp
add
inc
add
inc
mov
add
movsl
xor
add
push
push
pushl
push
call
mov
mov
add
push
push
call
add
mov
xor
lea
and
mov
mov
addr16
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
je
mov
or
je
add
mov
add
sar
rep
add
jmp
mov
push
mov
push
mov
add
mov
mov
mov
mov
mov
mov
pop
pop
mov
add
mov
mov
mov
mov
fstcw
lea
push
push
push
push
push
mov
add
push
push
push
push
call
push
ret
push
mov
pusha
push
mov
mov
cld
mov
mov
inc
mov
inc
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
jmp
pop
sub
mov
popa
pop
ret
add
add
mov
and
add
sub
cmpw
jne
pusha
mov
mov
mov
add
add
mov
lea
lea
mov
mov
call
stos
add
cmpl
jne
popa
ret
pusha
mov
mov
add
mov
add
call
mov
cmp
je
add
jmp
sub
sub
shr
add
add
movzwl
shl
add
add
mov
add
mov
popa
ret
push
mov
lods
or
je
xor
mov
shr
jae
xor
dec
jne
jmp
xchg
pop
ret
cmpsl
push
and
cmpsl
push
add
nop
adc
out
je
jne
dec
add
add
dec
nop
add
add
inc
add
add
xor
add
add
add
add
test
sbb
or
mov
movsl
pop
lcall
subl
dec
pop
push
test
test
scas
jge
and
leave
cmpsb
dec
inc
pop
in
and
push
lret
add
popa
fcom
mov
out
and
jmp
pop
adc
enter
dec
arpl
je
sbb
mov
js
mov
jnp
addr16
cmp
ds
rcr
arpl
clc
mov
xor
data16
xor
xchg
mov
inc
sbb
jge
stc
mov
jne
jmp
add
aas
jae
dec
jl
in
stos
js
jae
out
inc
andl
ret
and
jb
movsbl
shl
mov
sbb
mov
lret
and
inc
cld
cmp
mov
lods
xchg
je
ror
jp
xchg
nop
add
add
or
add
sub
or
add
add
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
or
add
add
fmuls
add
or
add
jecxz
add
adc
add
out
or
add
or
add
or
add
or
add
gs
xor
fs
insb
add
jbe
jb
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
or
add
add
add
or
add
add
add
add
add
add
pop
or
add
add
add
add
jo
je
push
popa
addr16
add
add
js
je
add
push
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
inc
add
add
add
add
add
add
add
add
bound
xor
add
sbb
add
add
inc
add
insl
add
add
je
jae
add
and
add
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
and
add
xor
push
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
je
jne
jo
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
sub
and
xor
sub
and
xor
sub
and
cmp
add
add
sub
push
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
add
add
inc
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
add
add
add
add
add
popa
add
add
popa
add
add
popa
add
imul
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
je
jne
jo
add
js
add
add
add
add
add
jb
imul
je
add
jne
imul
add
sub
push
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
je
jne
jo
add
cmp
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
sub
and
xor
sub
and
xor
sub
and
cmp
add
add
and
add
add
push
add
add
imul
inc
add
imul
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
add
add
and
adc
add
add
call
add
adc
add
add
sub
add
add
and
add
add
or
test
add
add
adc
add
add
or
push
add
jo
add
add
add
add
add
add
add
add
addb
addb
add
addb
rcr
add
add
add
or
add
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
jl
add
push
push
add
add
add
movb
out
add
add
add
add
cltd
add
add
add
add
xor
add
xor
add
add
cltd
xor
add
xor
add
xor
add
data16
xor
add
add
cltd
data16
int3
data16
jmp
add
cltd
add
xor
add
cltd
cltd
add
int3
cltd
add
lcall
add
xor
add
data16
add
cltd
int3
add
int3
int3
add
dec
add
incw
add
incl
add
add
add
add
add
xor
cltd
add
add
add
add
add
add
xor
add
xor
add
xor
cltd
xor
add
xor
add
xor
add
xor
xor
add
xor
cltd
xor
int3
xor
jmp
add
cltd
xor
xor
xor
cltd
cltd
xor
int3
cltd
xor
lcall
xor
xor
xor
data16
xor
cltd
int3
xor
int3
int3
xor
dec
xor
xor
xor
pushw
add
pushl
add
pushl
add
add
xor
data16
data16
add
incl
data16
xor
xor
data16
data16
xor
pushl
data16
data16
data16
data16
data16
cltd
data16
cltd
data16
data16
cltd
data16
cltd
data16
int3
data16
int3
data16
int3
data16
int3
data16
jmp
xor
data16
jmp
incl
int3
add
add
add
cltd
cltd
add
add
add
add
add
cltd
add
xor
add
cwtd
add
cwtd
add
cltd
add
cwtd
add
xor
add
cltd
add
cltd
cltd
add
cltd
cltd
add
int3
cltd
add
int3
cltd
add
data16
int3
cltd
add
int3
cltd
add
lcall
add
cltd
add
lcall
add
add
add
add
add
add
add
xor
add
int3
add
xor
add
xor
add
data16
add
data16
add
cltd
add
data16
add
cwtd
add
cltd
int3
add
cltd
int3
add
int3
add
cltd
int3
add
cltd
int3
add
int3
int3
add
int3
int3
add
int3
add
int3
int3
add
int3
int3
add
dec
add
dec
add
cltd
add
dec
add
dec
add
add
add
incl
cltd
add
add
xor
add
xor
add
incl
cltd
xor
add
xor
add
xor
add
incw
xor
add
int3
add
incw
jmp
add
cltd
incl
xor
incl
cltd
cltd
incl
int3
cltd
incl
lcall
incl
xor
incl
data16
incl
cltd
int3
incl
int3
int3
incl
dec
incl
xor
incl
dec
add
incl
jmp
add
data16
jmp
data16
jmp
add
incl
movsl
add
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
lock
addb
add
add
incl
add
add
add
add
add
incl
incl
add
pop
add
in
incl
cli
add
add
add
in
pop
add
pop
pop
incl
cli
pop
pop
add
add
add
pop
add
pop
pop
pop
add
sti
sti
add
add
add
pop
add
pop
pop
sti
add
pop
pop
add
add
add
incl
in
sti
pop
sti
pop
pop
add
add
add
incl
pop
in
sti
sti
incl
pop
pop
pop
add
in
incl
pop
pop
add
add
add
in
in
pop
add
in
in
add
pop
in
in
in
in
in
in
in
in
pop
add
in
pop
pop
in
pop
pop
pop
pop
pop
pop
pop
in
add
in
in
in
in
pop
in
outsl
jp
xor
in
add
add
in
in
outsl
in
push
xor
in
add
add
add
in
in
outsl
in
jp
xor
in
add
add
add
add
outsl
jp
in
push
in
add
add
add
add
outsl
dec
dec
dec
dec
dec
in
add
add
add
add
lock
add
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
addb
addb
add
addb
addb
add
addb
rcr
add
add
add
or
add
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
jl
add
push
push
add
add
add
movb
out
add
add
add
add
cltd
add
add
add
add
xor
add
xor
add
add
cltd
xor
add
xor
add
xor
add
data16
xor
add
add
cltd
data16
int3
data16
jmp
add
cltd
add
xor
add
cltd
cltd
add
int3
cltd
add
lcall
add
xor
add
data16
add
cltd
int3
add
int3
int3
add
dec
add
incw
add
incl
add
add
add
add
add
xor
cltd
add
add
add
add
add
add
xor
add
xor
add
xor
cltd
xor
add
xor
add
xor
add
xor
xor
add
xor
cltd
xor
int3
xor
jmp
add
cltd
xor
xor
xor
cltd
cltd
xor
int3
cltd
xor
lcall
xor
xor
xor
data16
xor
cltd
int3
xor
int3
int3
xor
dec
xor
xor
xor
pushw
add
pushl
add
pushl
add
add
xor
data16
data16
add
incl
data16
xor
xor
data16
data16
xor
pushl
data16
data16
data16
data16
data16
cltd
data16
cltd
data16
data16
cltd
data16
cltd
data16
int3
data16
int3
data16
int3
data16
int3
data16
jmp
xor
data16
jmp
incl
int3
add
add
add
cltd
cltd
add
add
add
add
add
cltd
add
xor
add
cwtd
add
cwtd
add
cltd
add
cwtd
add
xor
add
cltd
add
cltd
cltd
add
cltd
cltd
add
int3
cltd
add
int3
cltd
add
data16
int3
cltd
add
int3
cltd
add
lcall
add
cltd
add
lcall
add
add
add
add
add
add
add
xor
add
int3
add
xor
add
xor
add
data16
add
data16
add
cltd
add
data16
add
cwtd
add
cltd
int3
add
cltd
int3
add
int3
add
cltd
int3
add
cltd
int3
add
int3
int3
add
int3
int3
add
int3
add
int3
int3
add
int3
int3
add
dec
add
dec
add
cltd
add
dec
add
dec
add
add
add
incl
cltd
add
add
xor
add
xor
add
incl
cltd
xor
add
xor
add
xor
add
incw
xor
add
int3
add
incw
jmp
add
cltd
incl
xor
incl
cltd
cltd
incl
int3
cltd
incl
lcall
incl
xor
incl
data16
incl
cltd
int3
incl
int3
int3
incl
dec
incl
xor
incl
dec
add
incl
jmp
add
data16
jmp
data16
jmp
add
incl
movsl
add
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
lock
addb
add
add
incl
add
add
add
add
add
incl
incl
or
or
or
or
or
or
or
or
ljmp
or
or
or
or
or
or
or
or
or
or
or
ljmp
xor
or
or
or
or
or
or
mov
or
or
ljmp
pop
xor
lahf
inc
or
or
or
or
or
in
mov
or
ljmp
pop
xor
lahf
lahf
lahf
inc
or
or
or
or
or
mov
imul
or
out
out
pop
pop
mov
lahf
repnz
or
or
or
or
or
mov
imul
out
out
out
out
pop
mov
repnz
or
or
or
or
in
mov
imul
ljmp
or
repnz
out
out
inc
or
or
or
or
in
mov
imul
mov
or
or
in
in
in
out
out
inc
or
or
or
or
in
mov
imul
ljmp
or
or
lock
in
in
inc
or
or
or
or
in
mov
imul
repnz
lahf
pop
pop
or
out
idiv
lock
out
inc
or
or
or
or
in
decl
imul
ljmp
jae
out
testl
or
or
or
or
in
decl
in
imul
ljmp
fsubr
out
testl
or
or
or
or
decl
imul
imul
pop
push
push
jae
loope
mov
inc
pop
pop
pop
pop
pop
or
or
in
decl
div
div
ljmp
mov
or
or
pop
out
in
or
or
decl
div
div
or
jmp
loope
mov
in
in
in
in
in
pop
pop
in
or
or
decl
div
div
or
in
in
in
in
jmp
in
or
or
in
in
in
in
or
div
testl
in
in
in
in
in
in
in
in
in
in
in
in
out
in
or
or
ljmp
div
or
or
or
or
or
or
or
or
or
out
or
in
ljmp
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
in
or
in
in
in
in
in
in
in
ljmp
incl
in
or
or
or
or
ljmp
in
incl
add
add
add
add
add
add
pop
in
or
or
or
or
in
ljmp
incl
sti
jp
xor
xor
dec
dec
dec
add
pop
in
or
or
or
or
or
decl
in
incl
ret
pop
jp
xor
xor
dec
dec
add
pop
in
or
or
or
or
or
in
in
in
in
in
or
add
pop
jp
xor
xor
dec
add
pop
in
or
or
or
or
or
or
or
or
incl
ret
pop
ret
pop
jp
xor
xor
add
pop
in
or
or
or
or
or
or
or
or
incl
pop
ret
pop
ret
pop
jp
xor
xor
incl
in
or
or
or
or
or
or
or
or
incl
jp
ret
pop
ret
pop
jp
xor
add
pop
in
or
or
or
or
or
or
or
or
incl
jp
pop
ret
pop
ret
pop
jp
xor
incl
in
or
or
or
or
or
or
or
or
incl
jp
jp
ret
pop
ret
sti
jp
add
pop
in
or
or
or
or
or
or
or
or
incl
add
add
add
add
add
add
pop
in
or
or
or
or
or
or
or
or
incl
in
or
or
or
or
or
or
or
or
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
or
incb
inc
clc
add
shlb
shlb
jg
add
jg
add
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
cld
add
sub
add
and
add
inc
add
add
add
add
add
addb
add
addb
addb
add
incl
add
add
add
incl
add
add
add
incl
incl
incl
incl
add
add
add
add
ja
pop
js
fstl
add
js
lock
jg
fstpl
add
jg
xorb
clc
std
fstps
add
js
lock
js
mov
cwtl
mov
add
add
jg
cmpb
xchg
add
js
lock
js
or
add
jg
cmpb
xchg
add
add
js
lock
mov
jo
add
add
cmpb
mov
add
add
jg
lock
fwait
mov
add
add
jg
lock
mov
add
add
add
lock
js
mov
lock
clc
lock
mov
jg
lock
addb
ja
jo
jg
lock
jg
pushl
ja
jo
mov
ja
ja
ja
ja
jo
ja
jo
mov
addb
push
or
mov
ja
ja
jo
pop
incl
ja
or
repnz
and
and
xchg
add
add
jo
repnz
das
xchg
add
add
incl
repnz
mov
xor
add
add
jo
mov
das
xchg
add
add
add
pop
repnz
sti
mov
xor
xchg
add
add
add
pop
repnz
das
xchg
add
add
add
pop
repnz
sti
mov
das
xchg
add
add
add
pop
repnz
xchg
add
add
add
pop
repnz
xchg
add
add
add
pop
repnz
and
and
xchg
add
add
add
pop
incl
add
add
ja
ja
ja
ja
add
incb
inc
clc
add
shlb
shlb
jg
add
jg
add
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
cld
add
movsb
cmp
add
xor
mov
add
add
push
pop
cmp
inc
stos
mov
sbb
cmp
inc
and
add
fisubs
push
adc
and
dec
add
and
stos
sub
lock
push
outsl
and
loopne
lods
adcb
mov
and
inc
je
inc
dec
int3
dec
jle
mov
dec
inc
or
push
push
je
imul
inc
add
add
xor
pushf
sub
test
or
test
sbbl
subb
add
movsb
loope
inc
xor
mov
adc
add
xchg
mov
add
cmp
js
je
mov
mov
insb
jb
cmp
fs
add
xchg
push
enter
dec
jb
cmp
xorb
enter
jb
cmp
sub
sub
cld
and
loopne
fmul
fdivs
jb
sbb
push
orl
mov
outsb
call
add
inc
and
fdivl
add
mov
push
xor
pop
jmp
sub
xor
add
xor
sbb
sbb
and
rol
push
mov
adc
push
int3
push
call
mov
test
jne
xor
add
pop
lret
mov
push
add
or
rcl
ret
femms
lea
loopne
mov
nop
push
ds
addl
aas
les
xor
push
pop
nop
mov
cmp
cmp
pop
sbb
fadds
xor
add
dec
mov
mov
push
pop
or
rclb
xor
and
inc
cmp
add
push
mov
push
xchg
push
adc
mov
nop
aas
push
push
orb
call
xchg
add
inc
push
jmp
mov
inc
mov
jns
adc
jne
add
adc
cmpsl
fst
daa
xchg
aas
pusha
or
jmp
dec
add
dec
cmp
pop
aam
jge
fbstp
loope
call
test
pop
pop
pop
add
je
repnz
add
xor
jge
sbb
add
call
fmul
ja
popl
and
sbb
or
sub
add
cltd
gs
xchg
or
fdivs
add
je
fbstp
push
iret
add
sbb
sub
sahf
test
push
add
adc
sar
lock
cmpsl
sub
or
push
or
jle
jge
add
bound
fcmovbe
lock
rclb
incl
jecxz
adc
out
adc
add
push
sbb
nop
out
cmp
mov
test
cmp
or
sarl
fs
adc
and
mov
add
not
dec
clc
jp
fs
flds
sar
add
popa
add
pop
push
push
push
lds
jns
lret
and
cmp
add
movsl
fsubl
dec
adc
dec
in
or
push
data16
push
nop
sbb
jl
pop
lds
adc
rolb
push
push
and
jae
and
out
ja
dec
sbb
mov
je
push
xchg
jg
pop
fisubrs
jne
mov
dec
xchg
add
movl
filds
cwtl
jmp
pusha
aas
add
add
sub
push
psubsw
or
adc
xchg
sbb
adc
cmpsb
mov
dec
test
pop
ljmp
add
xchg
add
je
xchg
and
xchg
add
sub
dec
inc
cmc
xor
cmp
or
add
xchg
nop
jbe
add
fldl
call
sarb
push
pop
inc
adc
sub
push
test
shrl
jmp
leave
xor
mov
mov
add
imul
xor
add
and
adc
sahf
add
add
pop
leave
cld
testl
xchg
test
add
sbb
jae
fisttpll
loope
out
fiadds
call
dec
inc
loop
adc
lods
xor
mov
add
aas
push
xchg
add
xor
pop
aam
cmp
add
sub
jl
xlat
push
add
call
ja
add
inc
arpl
test
leave
or
out
inc
fs
adc
call
and
int3
sbb
cmpsl
int
pop
movsl
and
cmp
add
aaa
and
or
pop
mov
sub
inc
aas
cmpsl
xchg
gs
add
bound
orb
jne
ja
add
mov
loopne
lea
sub
pushf
es
pop
call
icebp
push
xor
addl
mov
push
mov
and
jmp
add
push
orb
test
lcall
sub
imul
dec
rcrb
cmpsb
jp
and
cmpl
add
adc
sbb
add
adc
inc
adc
add
push
adcb
cwtl
sbb
or
jnp
push
out
cmp
add
jae
ror
push
je
add
mov
jmp
int3
inc
mov
mov
add
mov
ret
cs
pop
es
dec
add
push
cmp
lods
cmp
pop
add
mov
addl
push
fs
pushl
int3
andb
xor
add
push
jle
add
pop
xlat
out
bound
pop
sub
test
clc
sysret
mov
xchg
cmp
das
mov
add
xor
pusha
rolb
add
jo
dec
daa
sbb
repnz
movb
pop
add
add
xchg
xchg
ret
cs
jmp
mov
add
dec
stc
repnz
test
int3
test
sbb
xchg
enter
sub
out
mov
hlt
leave
adc
dec
cmp
aad
cmp
mov
in
cmp
pop
add
je
xorl
in
jne
xor
add
push
push
lret
inc
bndldx
in
fistpl
loopne
push
cmp
xchg
adcl
dec
or
cmp
cmp
add
test
leave
jns
add
xchg
stc
add
dec
aad
int
adc
push
jmp
pop
movsl
rcr
outsl
sub
negb
or
lea
add
mov
add
mov
add
pop
add
add
push
cld
adc
cmp
call
add
adc
mov
addl
lock
sbb
pusha
add
adc
movl
mov
ret
or
add
cmp
leave
test
enter
or
es
add
sbb
loop
cwtl
in
add
add
adc
or
push
test
sub
rolb
and
xchg
add
loopne
dec
incb
adc
dec
fnstenv
loope
and
inc
nop
jecxz
push
out
cs
add
push
sbb
scas
add
xor
adc
ret
add
and
mov
testb
js
sbb
cmpsl
rorb
sub
cmp
push
mov
mov
call
fidivs
push
xor
mov
or
and
sti
fadds
pop
and
add
lock
pop
add
lret
push
pop
andl
movsb
mov
leave
clc
dec
rcl
mov
popaw
ror
aas
jle
add
aaa
sub
repz
xor
add
jge
push
xchg
imul
loopne
sbb
add
jmp
and
inc
jne
adc
sub
daa
in
xchg
or
ljmp
add
xor
or
or
je
imul
xabort
mov
pop
add
dec
xchg
xor
inc
cmp
pusha
shll
rcll
dec
es
mov
add
movsb
xor
dec
add
dec
nop
hlt
lcall
inc
pop
rcrl
xchg
jecxz
inc
adc
insb
add
sub
cmp
bound
or
or
adcl
jl
add
dec
sbb
mov
mov
push
jle
cmp
andl
adc
cmp
mov
add
adc
pop
add
xchg
scas
sbb
les
nop
imul
lea
cld
movsl
push
jg
cld
or
or
inc
mov
and
addr16
roll
fsubs
es
add
sub
loopne
or
add
je
nop
aas
dec
pop
pop
sbb
iret
xor
adc
cmp
dec
loopne
insl
cmc
outsl
out
push
xor
ds
pop
incb
adc
xchg
int3
leave
call
call
imul
jne
cmp
or
mov
add
sti
xor
add
xchg
mov
add
push
add
in
push
dec
subb
dec
pop
pop
ljmp
shlb
loope
je
add
addb
insb
jle
xor
dec
xlat
sbb
jg
pop
lods
add
pop
jle
out
shr
add
push
xchg
or
dec
fsubs
add
sbb
lcall
add
cmp
or
test
add
mov
mov
vucomisd
iret
mov
cmp
pusha
xchg
jmp
add
cltd
xor
xchg
add
pop
pop
xchg
dec
lret
add
repnz
mov
imul
lods
jno
test
pop
sub
xor
mov
pop
pop
movsl
or
stos
or
cltd
cld
jmp
leave
push
pop
push
xor
and
cmp
in
sti
add
mov
adc
sub
inc
test
jge
xor
adc
add
ret
cmpsl
mov
push
bnd
clc
sub
prefetch
dec
add
jl
hlt
clc
sahf
add
cmp
cs
jbe
or
push
dec
inc
cs
or
push
imul
add
call
push
rol
cmp
cmp
addb
pop
push
and
xchg
sbb
push
mov
xor
sbb
xchg
inc
jmp
cmp
dec
andb
pop
test
and
add
cmp
cli
sub
sub
lea
test
and
fdivrs
add
mov
inc
add
cmc
test
add
ret
lock
movsb
inc
inc
add
jmp
cwtl
punpckhbw
and
cmp
push
add
cwtl
jmp
push
or
addr16
test
dec
aas
or
ret
inc
sbb
add
push
or
cmpsb
imul
or
cmp
sub
jno
push
adc
add
leave
inc
or
mov
imul
mov
test
add
cwtl
add
pop
add
mov
cmp
or
mov
mov
jmp
aas
inc
mov
insl
pop
xor
push
or
dec
and
add
and
lcall
sbb
pop
pop
mov
dec
in
add
out
mov
dec
jg
add
js
push
icebp
or
add
add
cmp
jl
xlat
sub
inc
pop
lds
cmp
loop
pusha
add
addr16
orl
sahf
add
sub
sbb
imul
pop
pusha
adc
add
testb
xchg
stos
push
int3
lcall
inc
fcomps
mov
sbb
push
add
push
incb
add
dec
xor
movl
xchg
addr16
cs
pop
and
ret
push
push
sbb
nop
adc
xor
add
add
xchg
sbb
adc
mov
pop
xlat
or
movsb
push
xchg
fistpll
add
js
mov
gs
cmp
lcall
and
jmp
sahf
lret
dec
orb
inc
mov
or
dec
arpl
add
xor
and
cmp
sub
cs
pusha
cmc
fadds
sub
mov
andl
jmp
add
jmp
cmpsl
xchg
mov
pop
repnz
cld
jbe
sbb
xor
andb
add
mov
add
insb
subb
inc
clc
add
ljmp
dec
add
jge
movsl
cmp
clc
adc
add
lret
xchg
call
add
dec
jle
jge
xchg
or
and
das
and
call
xlat
bound
ret
dec
test
mov
rorb
nop
mov
or
cmpb
mov
cmpsb
inc
std
add
sbb
mov
adc
push
int3
add
adc
out
dec
dec
cwtl
loopne
lock
scas
add
pop
call
add
sub
mov
and
jge
sahf
or
test
ret
es
int3
enter
je
add
into
fcmovnu
lret
add
add
loopne
jecxz
and
sub
push
and
out
mov
rcrb
leave
add
adc
psubb
add
nop
push
xor
enter
xlat
test
add
cmp
ja
je
pop
sub
vmread
rep
incb
cmpl
add
movsb
xchg
mov
jl
xchg
sbb
adc
std
sbb
pusha
lret
push
lcall
add
xchg
adc
add
nop
rorl
jns
jbe
cmpb
jne
aam
jnp
rorb
out
add
and
inc
lock
inc
push
adc
test
xorb
or
andb
cmp
int
pop
dec
into
cmc
adc
mov
or
ja
js
xor
push
push
lea
push
lods
and
ja
mov
repz
int
insl
cmp
mov
push
in
jl
and
jmp
pop
xor
xchg
add
cmpl
jae
movzwl
imul
cmp
add
add
shrb
or
mov
sbb
js
mov
in
pusha
pop
js
in
or
mov
mov
fwait
pop
pop
xlat
insb
movl
call
std
fists
pop
stos
add
je
and
outsb
mov
shlb
cmp
mov
pop
fcom
stos
mov
mov
add
aaa
aas
jp
mov
pcmpeqd
add
add
sbb
push
test
loopne
jle
cmp
push
inc
into
test
shlb
sbb
fnstenv
inc
dec
scas
jne
add
sbb
repnz
loop
fildl
sar
push
add
mov
fiaddl
mov
or
sbb
jne
push
adc
in
add
dec
out
and
and
add
sbb
mov
inc
stos
cmp
add
std
cld
or
fiadds
sbb
nop
cmp
loopne
adc
add
mov
sbb
rep
roll
adc
xor
add
jno
in
imulb
mov
xchg
cwtl
adc
jno
cld
iret
add
sub
mov
movsb
fildl
or
jns
lcall
add
mov
jae
add
mov
stc
cmp
mov
dec
mov
fnstenv
roll
mov
ret
rorb
nop
sub
imulb
mov
jmp
int3
lods
add
sbb
jl
add
add
push
inc
addb
sti
and
mov
sub
or
mov
and
add
popa
pop
pop
rcrb
xor
sub
enter
dec
test
pusha
and
jmp
add
xor
in
xor
push
ja
add
clc
subl
add
xor
or
mov
xor
sbb
pop
int
add
aam
adc
testb
add
fdivrs
cmp
sub
in
inc
push
repnz
pop
bt
je
fisttps
popa
jb
mov
add
adc
add
ret
or
mov
inc
not
jmp
test
jmp
in
je
inc
add
jne
pop
and
cli
cmp
jae
dec
add
add
inc
add
ss
fsubrs
rolb
cld
dec
cld
nop
add
mov
lods
sbb
adc
ret
je
fsubs
or
add
das
rolb
loopne
clc
add
push
push
sbb
add
and
xor
push
mov
and
fiadds
pop
jne
loop
cmpsl
or
add
sub
cwtl
add
and
pop
mov
popa
add
pop
aaa
add
xor
jae
ss
push
add
das
push
add
repz
pop
dec
adc
push
push
pushl
roll
and
inc
hlt
mov
in
push
or
mov
enter
lcall
sub
sbb
add
jno
ret
dec
xchg
clc
and
cmp
or
mov
sub
dec
add
push
inc
push
inc
pop
inc
add
outsl
jb
popa
outsb
roll
fdivl
jg
sbb
push
push
dec
cmp
add
jae
imul
push
jne
dec
rcr
mov
mov
xlat
add
jo
xor
mov
inc
add
adc
cli
jecxz
mov
xchg
testl
jge
xor
ss
mov
cli
add
sbb
add
inc
loopne
push
divb
jmp
gs
add
dec
or
dec
call
inc
or
leave
sub
popl
or
lock
cltd
insb
xchg
pop
add
mov
call
push
loop
loopne
stos
mov
and
fcomp
adc
add
cmpb
pusha
mov
in
leave
add
pusha
push
add
pop
push
sar
pop
addr16
inc
sbb
in
cmp
hlt
sbb
andl
int3
cmpsb
divb
rolb
mov
je
cmp
lea
adc
mov
push
fldenv
ret
mov
test
push
sbb
movsl
dec
shrb
jge
inc
add
nop
push
add
add
repnz
test
pop
pop
fs
ret
add
subps
cld
jns
mov
add
inc
cmp
add
inc
popl
sbb
or
pop
faddp
mov
call
pop
xor
pop
push
loope
sbb
lock
psadbw
hlt
cs
pop
add
outsb
cmp
or
cmc
or
add
pop
and
add
or
push
in
jecxz
lods
add
je
xchg
sbb
mov
aaa
xor
push
inc
and
rorl
add
push
or
jp
lret
jg
ds
mov
popa
jne
cmpb
sbb
adc
imul
cli
in
push
push
call
push
sbb
fistpl
push
push
add
push
add
mov
cltd
shl
dec
jnp
sbb
push
mov
jg
sbb
or
clc
push
adc
jl
outsl
add
inc
add
add
or
sub
add
cmpsb
add
push
loope
imul
pop
fmuls
cmp
pop
mov
adc
inc
ja
hlt
fiaddl
lock
push
addps
orb
repz
lret
xor
mov
sbb
cmpsl
add
outsb
cld
call
dec
dec
or
mov
test
push
jmp
and
out
mov
add
cmp
cli
out
push
je
pusha
stos
mov
loopne
mov
jno
ja
imul
add
sbb
add
and
mov
mov
or
sub
test
push
push
mov
movb
mov
cmc
cmp
inc
rorl
add
fstpt
sbb
stos
mov
shl
push
roll
jl
cmpsl
and
out
mov
inc
add
addb
outsl
pusha
aad
pop
add
movl
stc
or
mov
jecxz
lcall
inc
fimull
inc
sub
movsl
mov
nop
add
mov
sub
hlt
add
xorl
sbb
and
subb
call
addr16
add
mov
fiaddl
imul
je
clc
push
inc
mov
add
cmp
jne
fs
aam
push
imul
inc
add
xchg
into
sbb
add
shrb
rolb
dec
das
pusha
sub
adc
mov
fldl2t
sbb
xchg
sarb
cmp
sti
sbb
adc
andb
pop
adc
andl
adcb
mov
pop
mov
call
call
add
cmp
or
mov
dec
cs
cltd
add
pop
xor
mov
mov
call
shll
cmp
ds
push
sbbl
mov
enter
pop
dec
gs
data16
mov
andl
push
inc
or
pusha
add
xchg
lock
dec
push
mov
leave
xor
js
nop
push
cmp
adc
adc
lea
aam
pop
sub
add
inc
or
aam
mov
xorb
lods
shlb
add
xchg
mov
jo
in
stc
dec
xor
movq
pop
sub
inc
push
sub
mov
sbb
clc
jno
add
aas
orl
sub
push
cmp
adc
sub
inc
adc
push
pop
and
cmp
std
xor
push
mov
mov
enter
leave
jp
int
and
iret
call
sbb
into
sahf
adc
fcomps
or
lret
sub
lea
jecxz
add
add
and
add
es
push
cmc
loop
dec
pop
cmp
loopne
cmp
adc
andb
cmp
rclb
popl
je,pn
sbb
call
arpl
add
xchg
pop
pushf
or
aaa
add
dec
or
adc
cmp
sahf
push
and
adc
je
pop
ja
in
xchg
jecxz
push
mov
sbbb
inc
cmp
dec
jne
jo
push
add
sbbl
pushl
jg
add
cmp
mov
roll
push
xchg
cmpl
push
or
orb
jmp
test
fstpt
dec
add
xor
add
xchg
add
shlb
out
sahf
mov
pop
mov
mov
add
cmpsb
or
scas
mov
pusha
inc
mov
dec
add
xor
fcmovnbe
js
pop
add
xor
or
repz
add
add
loopne
sbb
fadd
sub
movsl
pusha
add
mov
pop
jge
mov
movsl
popl
or
test
sbb
movsb
adc
add
test
aaa
mov
jge
je
mov
jmp
loopne
sub
rcrb
add
pop
in
mov
xorb
xchg
jp
add
jno
add
jne
cli
and
ret
fxch
rcll
sub
adc
call
sub
sbb
xchg
add
push
shll
cmp
cmpsb
add
sbb
dec
xchg
test
enter
nop
cmp
and
add
arpl
mov
xor
orb
repnz
adc
push
xor
mov
or
push
xchg
sub
mov
decl
and
mov
push
pop
addl
andb
fs
lea
fiaddl
sbb
add
push
and
aaa
daa
add
dec
pop
sub
fcomps
mov
or
mov
or
xor
add
push
call
sarb
aaa
fiadds
add
ret
and
out
sbb
adc
xorb
and
inc
push
or
mov
mov
pop
aas
add
jmp
sbb
or
mov
jne
jo
outsb
dec
add
push
ds
add
insb
lds
or
pop
mov
inc
or
lock
and
mov
push
pop
add
cmp
cs
jns
cmp
add
pop
push
jg
and
ljmp
adc
push
sub
or
cmp
pusha
lret
mov
add
add
insb
sti
cmp
jmp
mov
outsl
jb
imul
cmp
addr16
arpl
xorl
sub
scas
lret
int3
insl
mov
sbb
nop
mov
xchg
lods
cmc
and
add
mov
dec
clc
dec
jl
lock
push
add
pop
push
lea
add
fcomps
adc
mov
adc
push
sbb
add
mov
mov
pop
dec
xchg
fisubrl
push
and
push
inc
jg
addb
inc
loopne
xchg
daa
mov
dec
pop
jbe
sahf
pop
rol
mov
outsb
add
jb
inc
add
and
sub
fs
ja
add
subl
adc
pop
mov
cld
loope
adc
sub
rolb
nop
mov
mov
sub
movl
imul
push
cmp
in
sar
repz
mov
ljmp
push
and
add
dec
sti
xchg
js
sub
insb
movsb
sbb
or
push
push
push
add
jnp
nop
test
or
daa
into
add
pop
xor
in
fldenv
loop
mov
add
add
push
addb
xchg
rolb
rorl
stos
sub
push
and
cmp
or
arpl
pop
xchg
or
add
imul
inc
add
and
add
xor
cmp
or
pop
mov
push
test
add
push
les
and
mov
inc
dec
inc
adc
mov
inc
or
scas
cmp
add
pop
add
push
pop
sbb
add
and
add
repnz
mov
cld
add
aas
ds
enter
loop
movsb
xor
loope
cld
cld
iret
add
xor
cli
cmp
mov
dec
sub
dec
push
xor
jbe
add
aam
xchg
pop
dec
idiv
stos
add
cmp
or
inc
mov
pop
mov
mov
add
cwtl
dec
sbb
xor
sub
xchg
and
cld
rcrb
add
jne
and
mov
ja
push
add
arpl
push
push
sysenter
pop
pop
and
jg
aam
jno,pn
out
jmp
push
add
push
push
push
test
in
or
mov
cli
das
loop
add
cld
dec
iret
sub
xor
mov
in
cli
jle
mov
into
push
mov
add
sbb
aas
and
movsl
loopne
add
icebp
cmp
mov
lret
xor
sbbb
add
cwtl
cmpl
push
shr
dec
pushf
push
xchg
add
adc
and
pop
or
dec
add
insb
rol
fsubp
test
or
inc
dec
pop
pop
ret
xor
or
mov
jecxz
scas
loope
in
mov
add
and
add
lret
pop
adc
pop
jecxz
adc
xchg
nop
add
inc
js
add
inc
loop
cmp
jo
add
in
mov
cmp
xchg
adc
imul
flds
cmpsb
clc
bswap
mov
sbb
cmp
fidivrl
pop
sub
pusha
push
sbb
mov
add
inc
in
testb
push
adc
insb
pop
pop
sahf
add
sub
push
dec
xchg
xor
cld
dec
jl
cmpb
jle
mov
iret
aaa
add
stc
add
jl
add
jg
sti
xchg
push
lock
cli
dec
inc
dec
fists
jns
dec
mov
mov
dec
cld
addl
push
inc
cwtl
icebp
sarb
xchg
mov
lret
cmp
repz
mov
ljmp
aam
test
ljmp
lcall
scas
and
jne
cmpl
or
sbb
lock
xchg
cmp
scas
mov
cld
jns
cmp
faddl
xchg
pop
xor
sar
and
cmp
icebp
jl
jmp
jbe
add
cltd
test
aam
lret
pop
push
repz
add
ficompl
cmp
leave
add
inc
pushf
aad
cmp
adc
dec
jg
loop
mov
sbb
inc
sub
jne
xor
icebp
push
mov
lods
loop
fs
aad
add
pop
xor
mov
cltd
pushf
xor
and
push
add
adc
sbb
rcll
int
cmp
mov
pop
push
jns
add
popa
xchg
jl
push
icebp
dec
add
test
add
dec
sub
in
xchg
jl
push
dec
lock
mov
add
pop
clc
mov
push
sub
or
or
add
inc
ss
decb
pop
ud0
add
jns
cmpsl
dec
jne
lcall
cmc
add
push
or
adc
jg
add
push
cld
aad
adc
or
addb
add
dec
andb
jno
add
adc
fnstcw
add
mov
mov
int3
hlt
and
das
adc
xchg
inc
lea
stc
mov
push
add
test
inc
lock
test
inc
bound
jnp
data16
mov
int3
push
mov
or
fisttpl
jmp
push
js
pop
and
mov
das
adc
sti
add
repz
push
jo
in
add
out
fidivl
add
push
mov
cmp
cmpsb
cmp
repnz
sbb
test
and
inc
ucomiss
cmp
in
rolb
mov
inc
popa
jl
orb
mov
ss
mov
adc
push
mov
push
mov
pop
add
inc
rorb
ret
es
adc
into
mov
ds
mov
fadds
sub
fwait
hlt
or
push
stos
ja
cli
add
push
xor
sub
xor
cmc
push
sbb
or
leave
in
push
push
cmp
or
mov
sbb
jecxz
lds
ficoms
or
or
lahf
push
cmp
jb
subl
jne
sbb
add
loope
hlt
mov
sub
or
add
nop
add
cmpl
subb
jno
jge
shl
mov
daa
add
adc
add
mov
jae
pop
pop
pusha
push
jle
and
mov
dec
add
sbbl
push
adc
movd
add
xor
fnstenv
sbb
xor
movsb
mov
add
xchg
enter
add
or
jne
add
lock
into
stc
jge
loopne
mov
pop
mov
cs
lock
xor
pop
pop
inc
frstor
jge
aas
and
lret
xor
push
inc
cmp
sub
add
leave
pop
pop
aad
mov
xchg
or
add
cltd
and
jno
add
sub
popf
dec
dec
and
sub
ret
iret
call
adc
sbb
xor
push
add
mov
idivb
add
sbb
add
arpl
mov
cmp
clc
pop
cltd
inc
or
push
pusha
jmp
cmpsb
dec
mov
mov
subb
push
jge
push
mov
pushf
and
int
std
add
call
data16
dec
or
fiadds
push
add
shrl
mov
add
mov
jl
out
insl
add
fimuls
shll
xor
filds
andb
jmp
pop
cmp
add
or
pop
test
push
notl
mov
pop
xchg
add
lret
dec
xchg
or
push
add
ror
push
push
orl
or
pop
arpl
mov
into
sub
mov
test
inc
mov
dec
mov
mov
fdivrs
pushf
mov
mov
daa
stos
jl
jbe
clc
cltd
and
add
pop
fisttpll
jo
push
les
add
add
fldenv
loop
cmp
add
dec
mov
daa
xor
pop
and
dec
clc
mov
push
add
dec
add
push
or
pushf
cmp
cmpsl
or
inc
pop
xchg
je
add
loope
adc
in
push
lret
sub
inc
add
inc
jno
adc
jmp
xor
filds
push
test
push
je
add
jmp
or
or
hlt
cs
and
inc
test
out
jmp
fdiv
and
mov
push
sbb
pop
jne
add
clc
xchg
or
int3
jg
cwtl
dec
cltd
xor
mov
inc
clc
adc
add
movb
sbb
jge
test
test
mov
ja
insl
cmpsl
jb
add
imul
xor
sbb
subb
je
push
js
add
add
adc
insl
add
data16
movups
ljmp
mov
mov
pop
push
ret
cwtl
xchg
add
repz
lea
jle
or
call
stos
cmp
add
rolb
add
inc
cmp
or
das
and
sub
xor
clc
scas
dec
jo
jecxz
je
fsubp
mov
fistl
and
pop
ljmp
inc
cmp
dec
movb
inc
inc
cmpsb
lods
push
inc
lock
jg
jmp
xor
fists
imul
or
jb
out
pop
push
xor
andb
pop
inc
pop
fildl
push
ja
cmp
push
inc
adc
call
dec
sub
mov
inc
jo
mov
aas
dec
loopne
inc
and
faddl
and
ret
pushf
nop
inc
cmp
add
mov
inc
enter
add
fimull
jno
int3
aam
aas
outsl
test
mov
fs
lds
pop
sbb
push
std
pop
loope
aaa
inc
dec
push
jg
add
imul
repz
sub
fiadds
and
xor
cmpb
jge
in
cmp
sbb
lahf
and
pop
inc
add
mov
lock
dec
xorb
add
adc
leave
sub
inc
sbb
sub
or
push
inc
and
rolb
cwtl
and
stos
add
or
ror
xchg
dec
loopne
fsubrs
push
je
jb
gs
jg
add
std
jae
fcoms
rolb
test
or
faddl
push
dec
cli
mov
add
inc
mov
add
clc
xchg
push
cmp
and
sbb
fsubr
cmp
call
xchg
add
lret
pop
ss
pop
imul
dec
dec
lods
cmp
rolb
pop
cmp
cld
add
add
mov
inc
jmp
mov
xchg
add
in
outsl
or
mov
hlt
ljmp
lock
adc
cld
in
xor
je
loop
add
add
jge
rcrl
arpl
js
jg
jbe
cmp
or
fists
lock
add
fwait
out
or
add
js
mov
add
push
adc
push
or
lea
je
xchg
mov
xchg
in
cmc
sahf
lock
sbb
and
clc
insl
mov
push
mov
mov
leave
js
sti
jp
pop
mov
push
xor
or
inc
jmp
pop
pop
sub
aad
ljmp
jne
sbb
dec
shl
test
dec
mov
xchg
cmp
mov
sub
or
jle
add
jmp
mov
mov
cld
add
inc
sbb
dec
gs
mov
add
orb
adc
add
jecxz
or
and
dec
dec
pop
add
or
es
add
xchg
jae
push
sub
add
or
sub
cmp
jmp
add
add
push
mov
add
fstl
add
call
leave
adc
sub
lds
pop
loope
enter
lods
push
pop
sbb
mov
ja
add
test
mov
mov
dec
jne
adc
sbbb
loopne
pop
inc
add
sub
dec
pop
jecxz
adc
jmp
push
add
and
movsb
pop
pop
push
push
sbbb
call
je
xor
pop
outsl
imul
add
pop
cli
add
lock
jl
shlb
mov
jmp
mov
jbe
jnp
sbb
aam
dec
mov
sub
xchg
and
mov
push
adc
sbb
sub
and
fs
xor
push
sbb
testb
adc
int
or
dec
les
sub
pusha
in
mov
push
push
rcrl
add
push
ret
and
mov
xchg
mov
sbb
sub
push
mov
add
push
test
or
adc
jmp
xlat
cmp
adc
xchg
rolb
es
mov
jecxz
xchg
lock
adc
stc
orl
push
inc
scas
clc
test
mov
push
add
adc
cmpsb
inc
ret
jmp
loopne
jbe
add
dec
jb
mov
pop
add
sbb
inc
mov
jnp
add
pop
nop
push
inc
aas
loope
jg
mov
repz
push
idivl
and
cs
mov
repz
xchg
lds
arpl
cwtl
add
sub
add
pop
mov
inc
push
rcrb
loopne
mov
add
int3
xor
and
lahf
adc
cmp
or
pop
jmp
lods
ret
inc
cmp
xor
xchg
pop
sbb
pop
cld
inc
fwait
cmp
in
sub
adc
mov
dec
add
mov
cwtl
or
and
mov
cltd
or
sub
push
mov
pop
add
push
or
loop
push
add
mov
icebp
xchg
mov
pop
mov
repnz
mov
add
jne
cs
mov
sub
sarl
add
and
shl
movsb
cmp
test
fiaddl
cwtl
jp
rolb
pop
cmp
push
rolb
mulb
add
pop
add
je
ja
lods
pop
jno
add
addl
stc
inc
jle
sub
lock
mov
in
or
xchg
jne
es
pop
pop
add
pusha
incl
fsubrl
push
push
cmp
lret
jle
push
das
dec
cmp
enter
icebp
pop
movsb
sbb
mov
add
sub
adcb
cmp
or
jge
mov
add
mov
adc
lods
shll
daa
pop
push
loop
add
adc
push
push
nop
or
test
cmpsb
rcrl
ss
lock
mov
in
movsb
add
test
sub
sub
daa
repnz
pusha
xor
dec
sbb
pop
sub
inc
xchg
jbe
int
adc
xlat
and
dec
stos
aas
add
jl
je
xor
add
aad
lea
rcrb
fisttpl
sub
cmp
add
fmulp
shr
mov
es
sub
pop
or
ret
iret
aad
shlb
adc
test
inc
inc
add
mov
cwtl
cwtl
xor
pop
mov
enter
ret
mov
add
add
or
adcb
add
out
inc
add
jb
or
cmp
inc
push
and
adc
pop
adcb
mov
sbb
sbb
stc
add
add
mov
mov
add
aam
flds
add
adc
hlt
shl
sub
xor
cmp
or
add
mov
lds
mov
aaa
cli
jbe
cmp
or
xchg
add
jge
and
mov
mov
add
jmp
cmp
pop
mov
adc
cmp
inc
add
xchg
add
aas
push
sbb
test
int3
pop
into
sbb
ret
inc
mov
push
add
nop
sbb
enter
mov
push
mov
hlt
push
daa
lret
into
pop
ds
or
sbbl
mov
pop
pusha
fisttps
add
add
leave
repnz
bound
inc
clc
jl
cld
jp
loope
mov
add
test
lds
aad
iret
decl
js
jo
mov
push
stos
mov
out
cmp
jmp
and
test
notl
out
sbb
mov
inc
imul
cmp
jl
pop
xor
cmp
pushl
xor
pushf
popf
sti
jmp
jle
push
inc
mov
add
sbb
cld
sarb
int3
repnz
test
jge
sbb
nop
fildl
inc
add
stos
clc
scas
adc
jecxz
cmp
pushf
mov
testb
inc
aam
testl
jp
iret
shll
hlt
pop
fsub
fadds
ds
push
add
cmpsb
scas
mov
pop
add
jbe
pop
dec
dec
in
xchg
jo
in
add
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
lret
push
fwait
xchg
and
add
les
aad
bound
lret
aas
cli
dec
loopne
add
mov
adc
fs
or
mov
add
pop
loop
jo
movsl
and
push
add
mov
aad
xchg
popa
add
rcrb
or
psrld
fcmovnb
pop
adc
mov
pusha
cmpl
ss
cmp
xor
jle
mov
jmp
test
jb
add
jne
not
loopne
rolb
inc
pusha
xlat
cmp
jb
add
ja
popf
repz
addb
pop
testl
je
xor
jnp
push
jecxz
lock
mov
pusha
and
add
adc
pop
add
repnz
ret
insl
pushl
add
call
and
flds
rolb
test
adc
or
in
in
adc
roll
rorb
push
jb
hlt
cltd
mov
mov
inc
add
mov
nop
das
adc
xor
adc
and
addl
add
push
stos
push
shl
cvttps2pi
sub
loopne
incb
add
cltd
sar
add
outsl
lods
dec
ljmp
mov
out
or
call
ljmp
dec
add
dec
movsl
add
pop
aaa
in
pushf
sub
pop
sub
or
mov
or
mov
cld
ret
loopne
in
push
stc
push
cmovb
or
add
clc
pop
push
subl
and
xor
dec
out
fs
inc
aad
or
les
add
data16
std
adc
add
test
adc
xchg
mov
mov
xor
adc
jmp
fs
dec
sub
call
js
imul
push
adc
sub
push
popf
repnz
fbld
fnstenv
mov
add
and
sahf
add
mov
push
imul
mov
adc
clc
enter
lock
sbb
add
xor
inc
cmpl
jge
xor
loop
call
push
ret
inc
test
into
or
pusha
ds
push
mov
xor
mov
mov
pop
dec
andb
add
sbb
out
jg
movsl
clc
adc
push
ja
jl
xor
jge
add
or
sub
sub
sbb
mov
or
test
mov
mov
dec
adc
sar
add
sub
insl
jmp
outsb
pop
xor
pop
xor
mov
add
int3
out
add
mov
cmp
cmp
fsub
push
or
mov
mov
or
add
or
add
mov
lret
add
and
testb
dec
dec
loope
inc
push
imul
cmp
and
jle
add
fdivrs
dec
cmp
and
cltd
add
push
inc
pop
fdivs
mov
or
pusha
jmp
loope
dec
std
es
pushf
in
cmp
and
adc
enter
xchg
mov
and
test
movsb
jb
loopne
scas
nop
scas
mov
sub
jl
and
je
jo
mov
add
cmp
in
jb
cmp
sbb
int3
xorl
in
jb
or
loop
mov
call
push
clc
pusha
and
xchg
lock
call
cmpsb
adc
loopne
cltd
add
rorl
or
ret
call
mov
add
and
jnp
add
js
cmp
jae
fs
push
test
inc
femms
inc
xchg
mov
les
cmc
pop
into
mov
in
cld
sbb
pop
pop
lock
add
sbb
jl
hlt
and
cmc
xchg
test
in
jb
stc
cmp
sbb
and
cld
and
xchg
shl
enter
loop
push
cmp
out
out
call
jmp
ret
andb
out
in
jb
cmp
sbb
rolb
jl
or
and
xchg
xlat
aad
mov
sbb
sbb
and
and
ficoms
shll
cmp
inc
inc
lds
add
and
xchg
jae
add
in
jb
cmp
sbb
into
iret
xchg
push
add
jb
cmp
mov
mov
mov
and
mov
jb
cmp
mov
and
jge
add
call
out
adc
xor
add
or
insb
gs
dec
addb
push
filds
inc
jb
push
add
jle
mov
rorb
add
pop
ljmp
adc
cmp
adc
popf
push
or
std
mov
pop
rcrb
inc
js
add
jb
hlt
mov
pop
xor
mov
cmp
addb
jo
pop
loope
adc
pop
test
or
adc
dec
jne
je
dec
add
outsl
jb
cmp
andb
inc
inc
jo
jmp
or
outsb
mov
mov
add
hlt
test
or
fmuls
dec
fimull
mov
js
adc
insb
mov
inc
pop
mov
push
sub
push
add
loop
rorb
inc
je
add
jns
mov
popa
pop
hlt
pusha
and
fcoml
push
outsb
xor
shr
and
or
inc
dec
jbe
scas
data16
push
sub
mov
dec
ret
mov
cmp
push
bound
mov
popa
jmp
pusha
sbb
mov
nop
imul
mov
rol
or
decb
xchg
pop
ficoms
rcrb
jmp
insb
pop
dec
inc
cmp
and
jle
inc
pop
or
inc
push
outsb
fs
pop
nop
push
sbb
pop
mov
cmp
mov
mov
pusha
xchg
dec
ss
test
rolb
mov
hlt
cmp
xchg
add
scas
rolb
add
outsl
aam
add
mov
add
ljmp
add
mov
mov
or
repz
sub
add
mov
add
nop
fs
pop
enter
xor
arpl
mov
shrb
jo
inc
imul
sbb
das
or
push
mov
mov
pop
and
ret
jb
pop
gs
jmp
outsl
fs
pusha
and
pop
push
bound
jae
mov
addr16
sbb
or
push
cmp
push
mov
popa
loop
mov
incl
add
dec
add
cmp
shr
pop
add
repz
pop
or
cltd
add
push
adc
or
add
add
bswap
mov
mov
call
sub
add
loope
lret
pop
dec
push
xor
sub
popf
inc
jnp
ret
mov
sbb
out
dec
cmc
pop
ds
inc
xor
sub
insl
cmp
stos
adc
add
mov
xchg
mov
ret
movsl
js
scas
aaa
pop
add
emms
push
add
cmc
clc
sbb
repz
je
mov
movsb
cwtl
or
jp
ja
pop
test
sub
sub
cmp
add
movzbl
push
xlat
add
sub
pop
scas
ja
push
or
call
inc
add
sbb
pop
add
incl
and
adcb
or
jmp
fs
sub
aaa
dec
clc
insb
into
sbb
pop
shll
out
push
add
xchg
loope
push
pop
dec
hlt
cmp
fwait
cmpl
or
add
xchg
sbb
adc
fisubl
push
or
inc
movups
dec
add
clc
cld
add
lock
add
mov
fisttpl
add
je
inc
mov
xchg
cmp
sbb
js
jl
push
aas
sbb
dec
push
out
add
test
repz
test
hlt
lcall
sbb
lock
les
daa
or
test
mov
int
call
bound
jg
ss
stos
add
jmp
add
sbb
push
cmp
lds
or
das
rcll
in
adc
add
sub
and
push
cltd
inc
sub
add
adc
adc
shl
xor
jge
cmp
dec
adcl
push
add
xchg
mov
sub
es
and
xchg
add
and
rolb
mov
imul
mov
inc
lock
push
cli
flds
adc
mov
mov
xchg
sbb
jmp
mov
sbb
push
es
addb
rcrb
add
clc
sti
pop
addr16
loopne
mov
add
mov
sbb
adcb
xchg
inc
push
out
add
pop
cmp
add
dec
adc
jl
mov
aas
sbb
add
sub
popf
cmp
or
push
xacquire
mov
sbb
pop
cmp
sbb
push
add
or
xor
mov
add
sbb
push
or
add
xorl
inc
xor
cmp
add
jl
rolb
aad
cmp
pop
btr
test
mov
subb
and
add
or
mov
test
lock
sbbb
xor
xchg
xchg
test
push
or
cmp
sti
mov
rclb
xor
rol
sahf
call
add
push
fstpt
push
jmp
add
sbb
mov
loop
jg
sahf
enter
mov
in
adc
ret
add
lds
lock
nop
je
adc
mov
sbb
add
jbe
and
movzwl
pop
cs
sbb
lods
add
call
psubusb
lock
fstpl
inc
sbb
loop
subl
leave
cmp
xlat
dec
mov
movl
ljmp
andl
mov
push
in
mov
enter
dec
pop
int
xor
lret
lods
adc
push
je
roll
mov
jmp
and
mov
out
mov
xchg
out
popf
cmp
dec
xor
add
aas
push
push
jb
cmp
pop
add
stc
out
lret
jl
add
pop
pop
push
mov
cmp
lret
dec
cli
or
enter
sub
pop
cmovne
jecxz
dec
bound
push
lods
inc
push
lret
rorb
pop
jle,pt
add
test
sbb
mov
adc
inc
and
cmp
pop
outsl
add
out
and
or
adc
pop
or
in
addl
push
js
add
andb
add
cmc
jno
push
push
and
pop
aam
or
shrb
pop
arpl
add
pusha
clc
push
inc
or
sub
leave
jb
add
sub
mov
iret
sbb
aam
and
call
mov
add
fnstcw
clc
nop
sti
pop
jbe
fstpt
add
test
dec
aas
adc
les
call
pop
mov
cmp
push
js
and
aad
jne
out
ret
mov
pop
mov
dec
adc
add
xor
add
popa
dec
cmp
cltd
push
dec
mov
push
mov
xchg
inc
roll
pop
into
add
jno
add
lock
out
push
cmp
add
and
sbb
stos
ljmp
push
add
repz
call
mov
and
sbb
add
lods
push
call
add
or
xor
or
lods
jmp
adc
pop
mov
adc
mov
cmp
into
add
popa
jne
push
push
hlt
add
pusha
sbb
dec
nop
add
fildl
lcall
rcll
lret
add
pop
movsl
push
add
mov
pop
or
js
add
add
movb
jmp
clc
sub
or
and
cmp
ja
imul
inc
in
outsl
mov
sub
pop
ret
adcb
rcrb
jmp
add
xor
lcall
aam
cmp
and
out
es
stos
je
xchg
jg
add
sarl
sahf
push
xor
and
add
movzbl
popf
bound
add
jno
cmpsb
enter
mov
pop
in
sbbb
movsb
or
fs
xor
and
lahf
int3
and
nop
mov
cs
inc
dec
nop
sub
add
jno
add
cltd
adc
cmpsl
fs
xor
cmp
je
pop
clc
push
add
or
pop
jne
mov
and
testl
adc
dec
aas
add
inc
dec
mov
sub
push
ret
icebp
add
add
jne
orb
mov
add
mov
xchg
lock
jmp
pop
lret
push
push
push
dec
inc
mov
sarb
add
icebp
xchg
dec
add
lods
push
and
cmp
jo
mov
mov
paddw
add
and
test
pop
add
sarb
or
call
push
pop
lahf
neg
push
jnp
inc
div
add
mov
push
add
mov
lods
push
fsts
mov
std
inc
jmp
push
xchg
add
mov
leave
and
mov
or
stc
lods
add
daa
mov
push
push
inc
sbb
push
dec
sbb
lock
add
jmp
pop
push
jl
jne
add
je
mov
add
ja
shrb
inc
mov
movb
pop
jecxz
iret
dec
lret
mov
pop
inc
push
loopne
and
inc
add
cmp
jmp
mov
jmp
roll
out
inc
je
push
add
jle
inc
add
mov
dec
sti
and
dec
inc
cli
mov
sbb
shll
cmp
fdivs
mov
sub
ret
daa
adc
inc
mov
add
mov
push
push
repnz
call
dec
shll
sub
roll
mov
mov
and
dec
icebp
add
pop
leave
enter
or
pop
jle
add
xlat
call
and
add
sub
lods
xchg
imul
xchg
adc
dec
pop
in
shll
sbb
fs
jp
sahf
jge
sar
lret
mov
add
lret
call
jecxz
clc
jne
dec
outsb
rolb
lea
jnp
mov
or
and
ret
lock
add
testb
push
pop
dec
in
popa
xchg
push
inc
in
cmp
add
jmp
incb
ljmp
dec
push
push
add
fnstsw
or
jg
add
sti
jns
xchg
in
xor
sbb
insb
dec
rclb
add
pop
add
ja
pop
add
mov
pop
push
cwtl
adc
inc
add
fisttps
scas
arpl
jae
pop
sbb
inc
and
jl
add
cmp
hlt
add
sbb
xchg
adc
repz
pusha
imul
push
rorl
call
or
fdivs
mov
or
fldl
cmpsl
add
loopne
out
add
dec
push
jo
jno
push
dec
mov
pusha
shrb
add
jns
daa
or
push
inc
adc
roll
mov
lea
cli
xor
ret
pop
push
cmp
xor
jne
and
imul
sub
add
test
add
add
xor
adc
add
cmp
add
mov
add
sub
pop
mov
int
lods
pop
clc
or
out
fdivrs
std
or
and
cmpb
lea
cwtl
xor
in
xchg
fimull
subb
mov
cmp
jbe
ja
and
cmp
add
sti
sbb
movl
ja
lret
dec
nop
or
cwtl
sbb
add
pop
dec
incb
jne
add
mov
xor
imul
rcrl
sub
inc
ss
cmp
sbbb
xchg
push
fsts
jg
std
jmp
xor
push
movsb
jbe
push
jecxz
inc
gs
pop
adc
test
stos
inc
xor
cmp
call
popa
testl
pop
or
jne
cwtl
add
or
call
add
jg
push
xchg
add
or
shrb
push
rorl
and
xchg
loopne
dec
jmp
cmp
jl
push
iret
imul
ret
test
and
adc
xchg
mov
mov
mov
sub
cld
add
jne
sub
incl
cmp
shrl
cs
fsubrs
imul
pop
mov
add
addb
pop
mov
insb
sub
fdivs
add
cmp
je
pushf
add
dec
dec
mov
pop
in
in
mov
add
ss
adc
xor
pop
mov
clc
addl
push
inc
hlt
pop
sbb
les
adc
pop
add
or
push
je
dec
mov
pop
mov
lods
cmp
mov
sbb
mov
mov
add
js
iret
pop
rcll
pop
pop
jl
testl
fs
fmull
clc
aaa
mov
and
cli
jp
xor
das
push
add
and
in
mov
popa
push
add
jecxz
cmp
ret
scas
add
es
scas
pop
and
rclb
push
mov
push
faddp
gs
popa
inc
and
mov
add
mov
aas
cmpsb
pop
add
push
pop
mov
lahf
clc
add
fucomip
or
adc
add
addr16
pop
or
add
repnz
add
int3
dec
push
push
xor
cld
inc
add
jp
xor
dec
fcmovnbe
add
fwait
mov
popa
inc
push
push
xor
add
testb
fcmovne
int
ds
mov
and
add
sub
loopne
stos
test
add
push
scas
popa
push
and
bound
mov
and
faddl
or
adc
cmc
mov
dec
add
mov
leave
sub
sub
clc
xor
and
insb
push
add
or
jne
rclb
call
repz
mov
add
and
dec
testb
mov
je
add
xchg
cmp
mov
movsb
pop
dec
adc
into
or
sub
fisttpll
add
push
dec
add
sub
rorb
movsb
lds
aam
scas
loop
cli
and
sti
pop
sub
add
gs
add
lods
push
int
add
xchg
jnp
mov
xor
mov
add
ret
pop
push
out
nop
cmp
je
cwtl
out
ja
cs
push
add
push
push
cmp
dec
or
test
es
push
inc
inc
dec
jne
hlt
push
mov
jl
push
add
adc
bound
clc
in
les
push
pop
add
movsb
lea
sub
jge
cmp
jbe
ret
jp
cmpb
lds
rcrb
or
mov
jg
add
push
mov
xor
inc
add
sub
inc
je
jle
and
mov
and
add
inc
push
int3
jmp
add
add
sar
inc
add
cmp
and
mov
subb
and
test
cwtl
ja
sub
jnp
loopne
aaa
mov
add
test
lret
nopl
inc
xor
jmp
ljmp
and
cmpb
push
push
test
loop
sbb
xor
or
je
or
push
aaa
rolb
lock
nop
lods
add
pop
insl
jge
test
lock
fsubl
in
add
in
or
icebp
in
gs
mov
add
and
scas
dec
flds
sub
loopne
les
test
xlat
cmp
fimull
add
test
test
pop
and
add
add
dec
add
jno
add
jae
or
std
popf
cmp
shrl
inc
test
cmp
sbb
fmuls
add
mov
add
popf
adc
mov
dec
daa
mov
or
call
bound
out
mov
pop
add
push
jg
adc
cmpsb
adc
call
cltd
and
les
loopne
fdivs
into
dec
shrb
add
mov
gs
es
and
xor
or
xchg
lret
aam
add
inc
dec
sub
hlt
sub
sbb
or
addr16
xor
es
mov
das
push
cli
iret
hlt
mov
adc
or
sarb
or
fimuls
scas
and
xchg
icebp
imul
sub
add
movsb
or
gs
dec
and
call
mov
push
mov
lahf
inc
loop
adc
repz
sub
push
popf
add
cli
sub
mov
cwtl
push
negb
inc
inc
dec
add
outsb
inc
sarl
fs
out
iret
adc
mov
call
mov
and
movsl
mov
pusha
inc
imul
hlt
xchg
add
xchg
aaa
daa
pop
cld
xlat
add
cmp
insl
inc
and
add
pop
mov
mov
sbb
add
dec
sahf
mov
iret
add
xchg
lea
mov
xchg
hlt
repz
jo
orb
addl
and
mov
jbe
repnz
sbb
xor
fistpl
mov
sti
push
add
cmp
sub
push
pop
adc
call
insb
das
add
pop
dec
stos
sub
adcb
inc
rclb
mov
pop
loop
jo
add
and
adc
pop
leave
sbb
push
and
into
push
sldt
sub
jb
or
add
mov
and
xchg
out
dec
add
jp
xchg
add
faddl
das
ja
je
add
int3
sahf
xor
push
cld
icebp
iret
bound
in
or
or
add
addr16
mov
pop
mov
outsb
sbb
inc
gs
push
jne
pop
xor
mov
adc
clc
inc
and
mov
loopne
dec
sub
dec
mov
ljmp
into
add
mov
mov
adc
fldl
aad
inc
lahf
add
test
mov
int3
stos
push
push
adc
cld
mov
arpl
add
add
jp
jle
add
daa
lcall
or
inc
pop
mov
mov
jnp
add
sbb
loope
push
bound
push
xor
daa
jmp
in
inc
in
xor
aaa
addb
xor
push
jmp
xor
add
ret
flds
push
add
or
add
or
or
faddl
push
mov
add
loop
adc
cltd
into
mov
push
lods
sbb
mov
and
and
mov
movsb
andl
adc
pop
adc
xchg
mov
in
push
add
xchg
es
das
inc
por
mov
adc
shlb
mov
add
or
push
mov
in
and
je
enter
push
dec
roll
sub
jle,pn
mov
dec
add
dec
loopne
pop
add
adc
fs
or
aam
push
inc
add
add
mov
pop
loopne
xchg
lret
xor
jmp
test
or
mov
test
and
nop
add
adc
sbb
push
mov
fwait
cmpsl
and
mov
add
arpl
mov
clc
aad
repz
mov
xchg
mov
add
cld
sahf
ret
add
std
add
or
je
pop
rorl
add
out
add
push
hlt
mov
push
xor
xorl
scas
je
loopne
loopne
add
bound
rolb
pop
imul
add
push
xchg
icebp
loop
xchg
add
ss
repz
add
call
aad
add
mov
dec
les
xchg
add
cmpl
add
in
mov
outsl
mov
dec
arpl
cld
das
cli
movsb
jg,pn
push
add
ud2
jns
xchg
inc
push
test
xchg
orl
cmp
nop
fadd
int3
sbb
inc
mov
repnz
cmp
add
fisttps
and
add
aas
mov
add
mov
mov
cli
cmc
add
mov
test
and
loopne
loopne
and
fdivrl
ret
fldl
insb
incl
push
mov
pop
mov
scas
pop
das
push
add
push
mov
sahf
add
movl
mov
push
pop
adc
xorb
imul
add
data16
pusha
jge
shrb
mov
add
xor
cwtl
test
idivb
mov
orl
add
jmp
into
es
add
add
mov
add
cmp
xacquire
mov
pop
push
aaa
or
je
fcmovnb
sbb
ja
jns
nop
xor
leave
mov
pop
push
adc
or
shl
inc
rol
push
mov
push
lock
mov
sahf
xchg
inc
add
addb
fidivl
in
pusha
cmp
clc
fsubrp
mov
in
jnp
and
sub
jecxz
add
mov
fsubrl
lock
call
mov
pusha
mov
push
or
add
dec
push
inc
sub
std
inc
testl
pop
add
adc
loop
incl
pop
lods
pop
dec
rolb
shr
jp
lret
push
sbb
in
adc
inc
cmp
sub
pop
push
add
lds
push
push
xchg
add
testb
mov
push
mov
fmuls
add
inc
mov
cmc
lcall
pop
mov
aam
movb
jmp
fmull
sub
cmp
mov
mov
push
mov
and
jne
pop
push
insl
add
idiv
add
pop
jle
mov
add
mov
nop
jns
mov
cld
sbb
shr
pop
push
xor
add
xchg
fwait
mov
imul
lock
add
xchg
inc
sbb
imul
lods
filds
push
lds
sub
mov
inc
in
adc
in
push
push
or
in
push
inc
sbb
adc
aaa
enter
fmull
mov
sahf
add
xchg
lahf
imul
xor
add
loop
add
and
xor
adc
ja
mov
cmp
lds
rolb
je
cmp
bsf
mov
int3
out
out
out
out
pop
cmpsb
das
add
clc
sahf
lret
xor
mov
shlb
cld
mov
fstps
add
or
les
aas
and
xor
cmp
adc
bound
add
mov
or
add
cld
push
adc
mov
xor
iret
jmp
pop
sbb
adc
dec
stc
or
lock
mov
jge
xchg
cmpsl
cltd
add
xchg
dec
push
pop
aam
xor
bound
push
and
ds
ljmp
jae
xchg
add
sub
push
call
ljmp
mov
add
dec
push
xchg
or
add
jnp
add
into
xchg
test
sbb
jae
sbbb
int3
pop
mov
add
cli
jns
sub
push
adc
or
push
push
xor
fnstcw
add
and
inc
cmp
or
insb
inc
movsb
adc
lds
imul
jns
push
jo
arpl
add
inc
and
jbe
add
xchg
insb
ljmp
mov
xchg
inc
ds
cld
pop
pop
loop
call
fs
inc
add
cltd
sbb
cwtl
adc
and
add
mov
and
inc
js
mov
adc
and
dec
adcl
enter
and
rorb
inc
dec
dec
rolb
nop
clc
xor
xor
push
xor
push
pop
inc
sub
and
insb
and
sbb
inc
test
clc
mov
shlb
adc
and
dec
rcll
dec
push
in
loopne
sub
sbb
pushf
mov
jb
rorb
sbbb
enter
or
int3
xchg
pop
fisubs
inc
test
les
cmp
shr
or
add
mov
sub
sahf
decl
or
lods
lods
aam
test
cmp
adc
and
repz
pushf
clc
adc
cwtl
std
das
shll
mov
nop
test
or
lods
adc
sub
pusha
cmpsl
jl
push
sbb
int
dec
insb
out
dec
cmp
lods
and
icebp
cld
std
cmp
push
inc
divl
repz
movsb
sbb
insb
ret
push
shlb
lret
push
aad
pusha
dec
push
js
sbb
pop
cmp
add
or
or
or
sbb
daa
adc
mov
aas
adc
dec
dec
inc
in
jmp
dec
sbb
mov
adc
repz
add
pop
stos
loopne
test
push
push
jge
mov
jle
cmp
dec
or
rorb
addb
add
sti
shl
call
loopne
cld
xchg
sub
xor
jae
xchg
enter
add
lea
cs
cmp
and
jne
movzbl
pop
adc
cmp
add
int3
add
jle
mov
loopne
adc
xor
xchg
pop
add
clc
or
push
int3
and
xchg
and
shlb
aam
ret
add
adc
stos
add
push
insl
cwtl
dec
dec
push
in
cmp
stc
pop
add
jl
or
xchg
sbb
add
stos
cmpb
inc
mov
fwait
neg
and
jmp
add
ret
inc
inc
xchg
aas
je
add
clc
or
adc
pop
stos
push
popl
dec
roll
pusha
sbb
add
jecxz
repnz
adc
mov
mov
and
xchg
push
jb
pop
ljmp
mov
clc
mov
shr
loop
jge
push
andl
cmp
mov
mov
stos
xchg
push
mov
fdivl
divl
add
or
adc
jmp
cmp
jno
add
jae
xorb
cmp
sbb
push
loop
dec
add
xor
mov
shll
rorb
add
repz
inc
lods
mov
add
or
add
jmp
dec
ljmp
aas
jae
add
add
sub
es
add
inc
rol
and
sbb
add
fnstenv
add
add
fisttpll
dec
and
add
cmp
je
push
jbe
dec
cld
sub
add
addl
push
or
orb
pop
inc
loop
cmp
lock
xor
pop
mov
icebp
fistpll
xorb
inc
add
pop
std
pop
sub
sbb
pop
mov
add
les
fucomip
call
cmp
fisubl
fwait
lock
add
sub
sub
popw
rolb
sbb
pushf
dec
mov
sub
pop
or
add
cmp
jmp
pop
scas
icebp
or
push
jo
push
dec
testl
lea
jl
add
adc
les
pop
rcll
add
shr
aam
int
and
cmp
mov
adc
jne
mov
sbb
jle
ret
fmuls
lret
cld
xor
and
add
int3
inc
xlat
je
ficompl
fdiv
stos
xorb
jo
loope
aaa
sti
dec
andb
jecxz
add
and
add
mov
repz
push
out
psrad
mov
rcrb
push
inc
add
rolb
movsl
shlb
imul
out
add
sub
mov
add
fmuls
push
hlt
push
mov
mov
mov
pushf
mov
xor
xchg
cmp
xchg
clc
inc
rorb
out
dec
push
sarl
sbb
int
clc
movl
aad
rorl
mov
mov
jno
scas
data16
add
mov
testl
pop
in
iret
imul
add
pushf
lret
roll
fcom
sub
pop
add
pop
ret
mov
and
test
test
mov
push
inc
push
mov
je
xor
lret
fadds
arpl
sub
add
out
clc
movsb
into
inc
add
fisubl
dec
out
xchg
push
and
loop
and
pop
shlb
int
mov
outsb
sub
aas
hlt
push
es
cld
add
rorb
jne
stos
in
add
je
inc
inc
xor
stc
in
pop
add
mov
sub
iret
lea
mov
pop
cs
add
mov
add
jl
std
add
pop
jne
jmp
or
sub
les
in
adc
or
sub
xchg
dec
mov
popa
cwtl
mov
add
jmp
push
sahf
dec
test
inc
mov
push
mov
in
push
mov
xor
int3
rcrl
mov
add
sub
add
gs
add
dec
lea
mov
and
add
and
testl
push
mov
insb
mov
adc
jmp
cs
pop
aas
or
rolb
mov
mov
addl
loopne
fabs
arpl
cmp
cwtl
je
fdiv
fwait
dec
fisttpll
sub
or
or
lcall
jne
push
jge
imul
in
ffree
call
pcmpgtd
add
jo
add
xor
stos
pop
mov
or
add
sbb
arpl
or
cmp
cld
and
push
add
or
adc
ja
jmp
shrb
bound
xor
sbb
and
add
push
aaa
cmp
ljmp
push
add
sub
add
mov
cs
enter
add
test
pop
stc
mov
add
xor
shl
cmpsb
testb
jl
add
rorb
add
mov
or
add
add
xchg
cmpl
xlat
mov
and
jns
adc
push
and
or
mov
adc
fadds
les
sbb
pop
dec
movl
roll
add
and
pop
xor
inc
ljmp
mov
es
sahf
cmp
aas
rcll
mov
jmp
pop
jno
rorb
xchg
call
rcrl
mov
mov
add
repnz
mov
ds
xor
add
cld
call
std
sub
add
sub
adc
je
dec
sub
add
aam
xchg
sbb
and
sub
pop
add
inc
cmp
add
xchg
daa
ret
or
push
clc
stc
add
add
fchs
movsb
ds
push
add
aas
jmp
fistpl
test
sahf
cs
inc
fnstsw
add
test
add
lods
xor
dec
mov
cmp
or
add
dec
or
popf
add
jo
ljmp
lret
cmp
push
xchg
repz
leave
imul
fiaddl
cmp
sbb
add
cld
mov
dec
hlt
addb
jne
mov
loopne
and
aas
add
add
mov
jo
orb
mov
mov
pop
movsb
std
sub
xor
add
dec
pop
aad
pop
fdivl
push
mov
je
inc
test
or
adc
repz
add
and
add
les
clc
enter
loopne
test
int3
movsb
lods
hlt
mov
mov
cmp
inc
add
jae
inc
cmc
sub
push
xlat
and
add
adc
cmp
xor
sbb
mov
jo
dec
bound
jbe
scas
jns
xorl
jge
testb
and
cmp
js
shlb
add
mov
test
stos
sbb
lods
sbb
jae
mov
lcall
dec
scas
andl
jecxz
push
not
mov
imul
sbb
mov
shl
jae
add
add
loop
cmp
mov
mov
shrl
and
or
cwtl
cwtl
adcb
add
mov
in
add
clc
imul
jmp
add
arpl
les
lret
jmp
stc
add
repz
push
add
out
mov
jo
into
clc
or
ja
inc
add
jge
cmp
cli
jae
andb
jo
call
lds
push
sbb
pop
jb
cmp
dec
pusha
add
add
popf
pop
cld
or
test
sbb
pop
incl
loop
xchg
mov
sarl
add
or
rep
ficoml
add
or
sub
into
cmp
pop
adc
mov
add
lea
inc
add
mov
jmp
int3
leave
addb
xor
xchg
lcall
or
ret
lahf
sub
xchg
add
shlb
add
das
jmp
lds
mov
mov
sub
pop
mov
popa
mov
out
gs
mov
mov
sub
int
fcoml
xchg
add
shlb
xchg
repnz
rcl
mov
clc
add
adc
jle
or
add
add
test
cld
mov
ljmp
sbb
sbb
ret
faddl
mov
inc
inc
inc
lahf
add
arpl
jo
call
mov
pusha
xchg
das
sbb
sbb
or
out
and
call
mov
fstl
pop
adc
inc
add
jne
out
mov
cmp
dec
or
add
outsb
add
cmp
mov
rcrb
xor
adc
lahf
lret
push
lcall
dec
test
jbe
aad
xlat
std
xchg
stos
add
pop
jmp
xchg
fstps
xchg
adc
mov
or
sbb
rorb
orps
mov
lea
cmp
sub
mov
pop
cmc
mov
push
and
add
and
xor
push
add
xor
ja
cli
clc
rolb
sub
in
jge
bound
outsb
incl
aam
dec
in
loop
pop
inc
sbb
fstps
jbe
cmp
and
lods
repz
mov
sbb
mov
pop
mov
add
sub
xor
mov
fwait
add
and
incb
in
outsb
js
inc
sbb
pop
sbb
leave
pop
jne
add
lea
pop
or
int3
push
xor
sahf
push
lahf
cmp
inc
add
inc
inc
inc
inc
dec
jo
add
dec
dec
dec
dec
push
push
add
push
push
push
push
movb
bound
fs
push
add
outsl
jo
jb
jae
je
jbe
js
jp
cwtl
out
xor
xor
ss
cmp
cmp
add
cmp
sbbb
pop
jge
cmp
sub
and
daa
or
or
es
xor
add
paddusw
and
xlat
and
in
or
mov
add
and
add
aad
jo
out
mov
enter
cwtl
in
mov
sub
cld
cwtl
xchg
sbb
adc
rclb
push
sub
and
add
data16
in
sbb
sbb
mov
inc
add
aam
adc
daa
cld
rorl
nop
xor
dec
or
inc
lock
xor
add
push
lock
lahf
inc
and
mov
jle
loope
shrb
add
sub
faddl
push
call
push
jl
roll
ret
pop
loop
loope
in
outsb
and
inc
inc
in
jle
jl
int3
jbe
add
push
sbb
add
leave
pushl
xchg
lea
mov
add
fists
sbb
subb
sahf
out
shrb
inc
push
add
adc
into
jnp
xchg
dec
add
in
fs
xor
or
je
fildll
mov
aam
pop
pop
imul
inc
das
add
ss
jo
fwait
add
push
mov
lds
test
aad
sbb
push
sbb
lods
sub
fdivrs
mov
je
fisubrl
dec
xchg
movsl
lds
hlt
push
lock
les
or
mov
mov
jl
test
aam
fmuls
lcall
lods
testb
mov
push
xor
aam
add
adc
add
ss
dec
imul
inc
xchg
loope
pop
pop
scas
dec
mov
shll
test
add
roll
mov
add
test
scas
inc
sbb
mov
lret
cmp
aas
mov
and
xchg
sub
pusha
sub
aad
mov
pop
cwtl
loopne
jle
popa
jne
sub
add
pusha
jp
hlt
add
movsb
in
pop
lock
orb
hlt
test
lcall
imul
cs
xor
inc
jl
dec
out
test
orb
incl
cmp
jne
inc
cld
rcrb
pop
xchg
aas
adc
jl
inc
lcall
adc
imul
adc
sbb
les
cmp
sbb
addb
clts
dec
jne
inc
jge
push
je
add
and
cmp
add
vcmppd
inc
cmp
testl
inc
test
fsts
movsl
add
pop
out
add
mov
adc
mov
cli
mov
mov
pop
add
add
scas
jp
iret
sub
push
adc
push
movl
gs
xor
add
xchg
lret
inc
fdivs
add
push
enter
je
ficoms
sub
mov
fsubs
push
jne
cmp
inc
add
xlat
shlb
insb
movsl
pop
mov
adc
add
stos
jb
lock
cmp
in
hlt
pop
add
rcrb
cmc
scas
cmp
out
add
js
hlt
rolb
xchg
into
adc
arpl
adc
pusha
mov
push
les
ret
jne
lcall
cmp
mov
fbstp
inc
xorl
xchg
add
or
pop
sti
data16
inc
repz
ret
clc
in
xor
add
jae
call
imul
add
je
rolb
jne
or
mov
in
arpl
add
dec
les
cltd
and
push
jge
test
jnp
xor
in
jno
jg
cmp
pop
xchg
adc
mov
dec
cmp
push
push
sub
xchg
int
sbb
gs
dec
push
imul
sub
popl
test
add
sub
cmp
pop
fstpl
push
jne
rclb
sbb
jae
mov
jne
stos
mov
add
mov
xchg
ljmp
inc
dec
fisubrs
jne
data16
inc
and
inc
loop
enter
inc
mov
dec
fcomi
add
add
stos
test
push
dec
add
inc
xchg
call
mov
inc
test
outsl
and
xor
add
aas
inc
test
mov
pop
mov
xchg
add
rolb
mov
arpl
fbstp
add
stos
fcoms
pop
or
dec
bound
lds
add
cmp
lahf
arpl
call
aas
pop
or
pop
movsb
iret
data16
add
inc
incl
inc
popa
sub
inc
mov
mov
ret
test
xor
xor
or
ljmp
lahf
add
out
add
mov
sub
jno
add
cld
adc
and
cmpb
nop
push
test
xchg
dec
pushf
add
xchg
in
repnz
cmp
fstpl
sbb
add
data16
test
push
je
xor
mov
pop
inc
fs
push
add
pop
popa
nop
or
add
cmp
lds
adc
mov
js
loopne
xchg
push
stos
adc
rclb
pop
lcall
add
int
cltd
call
or
xchg
inc
dec
call
rorb
sbb
mov
mov
push
nop
bound
xchg
add
xor
les
cli
addb
mov
and
add
addr16
nop
imul
pop
clc
fwait
sub
mov
out
lea
dec
rclb
bnd
bnd
sub
mov
inc
cmp
jb
shl
lock
pop
cld
jbe
inc
push
in
out
mov
scas
or
stos
add
mov
leave
push
mov
add
xchg
repnz
add
lcall
scas
add
or
popa
add
data16
xor
jae
jns
pop
mov
add
outsb
xor
cmp
sub
test
and
pusha
push
push
cmp
dec
adc
add
shlb
mov
jo
inc
repnz
rolw
popa
jmp
fdivs
loopne
sbb
jl
add
into
add
cmp
rcrl
pop
not
clc
iret
jge
rorb
mov
add
daa
mov
lock
repnz
loopne
fidivrl
fdivs
mov
add
inc
push
jno
loope
and
add
sbb
adc
dec
scas
psubusb
xchg
aam
stos
inc
jne
add
xchg
add
jp
jo
pop
movsb
cli
add
or
adcb
lods
and
call
mov
xor
cmc
add
repz
mov
or
xchg
mov
cmp
lods
cmpl
push
or
idivb
add
jmp
inc
clc
addl
adc
jg
loope
jl
add
int3
sub
add
in
ret
mov
dec
add
inc
mov
sarb
mov
rcrb
adc
add
add
shl
cmpsb
mov
imul
shrl
mov
dec
lods
test
std
sub
xchg
add
adc
cmp
xchg
inc
add
pop
lea
pop
jo
gs
scas
adc
mov
call
fnstcw
orb
nop
push
xor
mov
mov
mov
xor
dec
push
pop
call
add
xor
das
push
into
push
repnz
lds
mov
testl
lret
lahf
cmp
dec
jnp
adc
dec
movsb
and
push
add
cmpb
jb
push
decb
cmp
aas
xchg
add
mov
push
push
rolb
inc
in
pushf
add
fdiv
repnz
loop
xchg
scas
inc
or
and
push
orb
push
adc
adc
lcall
xchg
mov
mov
fiadds
sub
mov
inc
cmp
aaa
add
mov
loopne
sbb
jne
adc
ficoms
pop
rep
sub
add
cltd
scas
jno
jae
add
mov
jne
add
cld
pop
aas
std
les
in
add
lret
dec
xchg
push
xchg
out
cmp
subl
mov
mov
mov
xor
and
leave
ret
nop
dec
pop
cs
mov
adc
cmpb
mov
mov
add
push
sub
sub
addl
add
add
or
mov
fmuls
loopne
test
adc
imulb
repz
call
test
add
shlb
fdivs
xchg
add
cltd
es
or
js
nop
or
mov
sti
mov
lcall
mov
dec
xchg
pop
add
or
call
lcall
enter
cmp
xor
loop
adc
mov
lods
sbbb
repnz
popl
dec
push
fistpll
ds
add
popa
jl
cltd
hlt
add
mov
lods
add
or
or
and
jmp
mov
and
dec
cli
enter
add
loop
mov
mov
xchg
add
lods
dec
sub
test
mov
test
sub
xchg
sub
inc
fadd
inc
mov
dec
cmp
sbb
sub
add
cld
and
movsb
sbb
testb
adc
xchg
mov
inc
add
out
inc
enter
add
test
mov
in
push
lods
add
dec
and
pushl
add
push
push
push
dec
hlt
or
movsb
xor
in
pusha
testb
xor
loopne
loope
pushf
jbe
clc
and
mov
add
sub
or
daa
rolb
sub
ds
mov
fmul
add
mov
adc
or
sub
rcl
mov
push
dec
mov
pop
iret
add
adc
sbb
jmp
or
add
dec
pop
shlb
inc
sbb
leave
aad
push
aam
ret
push
ror
test
sub
addl
inc
lock
pop
loope
std
repz
shlb
les
or
inc
test
inc
cmp
pop
cmpsb
lcall
mov
pop
add
pop
push
adc
rorb
dec
imul
insl
jae
or
lods
add
call
mov
add
push
stos
fnstcw
inc
sbb
in
int3
cmp
push
pop
pop
push
rcll
jp
repz
shr
dec
add
adc
mov
call
loope
sbb
mov
imul
test
daa
and
and
add
inc
test
cltd
mov
jbe
sbb
js
push
orb
cwtl
out
sbb
xchg
and
mov
xlat
imul
add
adc
int3
dec
cld
dec
sub
jmp
add
hlt
inc
or
cmp
add
shlb
add
fidivrl
shll
mov
xchg
sub
jne
sti
je
iret
adc
pop
mov
out
mov
and
mov
cmc
xor
mov
sar
cmp
dec
add
rclb
adc
lock
sar
dec
sbb
jae
add
mov
add
and
sarl
ret
inc
xchg
mov
and
mov
push
xlat
adc
je
sub
ljmp
and
mov
testb
cli
mov
faddl
add
xchg
or
add
and
das
mov
pusha
pushf
cmp
cmp
incb
idivl
lds
addr16
ret
rcll
xchg
add
push
mov
ss
sub
pop
mov
inc
cs
frstor
lds
rorb
push
inc
sbb
adc
jae
or
add
mov
mov
ror
add
mov
cmp
add
test
inc
dec
push
in
inc
pop
add
sub
ret
cs
test
mov
or
add
add
mov
xor
cmovge
mov
cmp
and
mov
jo
aam
dec
add
lock
add
xlat
adc
mov
int
sub
insb
cld
in
add
mov
es
mov
mov
lods
mov
rorb
lret
add
push
fcoms
lods
pushf
dec
adcl
dec
sbb
adc
ficompl
xlat
roll
mov
outsl
pop
jno
cmp
sub
push
add
and
adc
insl
sarb
add
jge
jg
movsb
sbb
push
push
adc
or
add
lods
adc
enter
data16
push
inc
clc
hlt
lcall
push
jbe
dec
or
pop
push
data16
repz
pop
push
and
add
call
ret
mov
mov
jp
jle
push
sbb
or
or
inc
inc
into
xchg
mov
push
or
dec
xchg
call
clc
push
aam
or
cmc
push
aas
pusha
dec
cmpb
mov
pop
incl
push
xlat
xor
inc
add
shlb
add
inc
movsl
jmp
adc
lock
cmp
and
mov
add
mov
dec
rorl
les
repnz
push
sub
jns
popf
mov
mov
add
je
cmp
and
jge
add
mov
and
mov
add
inc
stc
jmp
mov
and
in
sub
add
add
push
sbb
call
add
push
add
mov
xchg
ss
push
int
std
test
mov
mov
jp
add
mov
sti
inc
in
adc
daa
bound
aas
adc
add
push
repz
add
mov
xchg
push
clc
mov
roll
cli
and
push
addl
inc
or
loope
clts
xor
or
dec
pushf
imul
jle
add
pop
add
leave
add
dec
fldl
add
jg
mov
jne
imul
push
add
and
add
pop
test
add
test
pop
or
sldt
icebp
adc
add
pop
mov
lret
sub
inc
insb
popa
jae
add
leave
sbb
or
sbb
jge
fmull
dec
add
xchg
add
int3
mov
push
rclb
stc
lahf
push
add
shrb
cmpsb
ret
mov
xchg
pop
in
jl
and
cwtl
cltd
xchg
out
aam
shufps
pushf
add
sarl
add
sub
lahf
stos
outsl
cmpsl
add
lods
sahf
and
in
xchg
daa
add
call
dec
add
sub
adc
scas
imul
lea
sbb
and
orb
cs
aam
sbb
push
rolb
add
jnp,pt
add
and
clc
mov
lea
out
xchg
xchg
cmp
addr16
cmp
sbb
add
mov
sbb
xchg
pushf
add
jns
xchg
mov
sub
and
inc
fcmovbe
mov
clc
stc
cmovge
addr16
mov
bound
cs
jne
in
add
pusha
nop
pop
add
test
fsubrs
xchg
add
clc
xchg
test
mov
ret
test
jne
or
loop
mov
push
mov
les
mov
push
pusha
add
es
ja
call
mov
ret
push
fldenv
into
sub
mov
in
dec
mov
sbb
push
cmp
scas
adc
pop
je
dec
fsts
cmp
adc
cld
add
or
mov
mov
xor
cmp
rorl
ja
push
fs
shlb
xchg
clc
pop
movsl
mov
test
test
sbb
or
pop
inc
aas
push
sbb
mov
jns
adc
pushf
xor
cmovno
sar
mov
ret
push
or
flds
scas
add
sbb
mov
aas
cmp
lahf
mov
adc
push
push
in
and
mov
out
sbb
cmc
arpl
shll
dec
mov
pusha
add
movb
add
jns
pop
push
cmp
xchg
lret
loopne
cltd
and
mov
pop
jmp
xchg
jecxz
fists
fidivl
lret
hlt
lea
jl
dec
sbb
inc
add
arpl
shll
les
mov
sub
inc
sbbl
ret
repnz
pop
jge
xor
sarb
icebp
int3
mov
pop
mov
jmp
add
sub
add
cmp
stos
cwtl
leave
inc
pop
add
sub
or
cwtl
or
adc
and
inc
sbb
popfw
adc
or
ret
test
inc
push
or
push
push
sub
adc
or
mov
cwtl
xchg
push
mov
cmpsb
or
aas
mov
test
ffreep
add
nop
lds
or
add
jnp
cmp
add
push
sub
fldl
add
pop
mov
lods
loop
or
jge
pop
add
or
xor
pop
jae
add
lds
and
test
aam
mov
add
sub
add
jbe
mov
mov
add
ja
movsl
inc
dec
cmpsl
inc
add
mov
add
xchg
mov
add
xchg
hlt
sub
notb
push
adc
lret
call
sti
jnp
sar
pop
divb
inc
cli
inc
hlt
push
push
add
or
scas
jno
call
or
mov
add
lds
dec
inc
inc
add
dec
xor
clc
and
notl
xor
dec
xor
push
sub
cmpb
xchg
mov
add
adc
leave
adc
pmullw
xor
cmp
jb
dec
or
and
ret
popa
add
jmp
addl
lahf
inc
push
call
je
pop
sub
test
aad
or
jnp
sbb
test
or
icebp
and
xor
jmp
scas
lahf
inc
or
ret
sbb
jl
sub
jne
xchg
cmp
sub
push
mov
push
xchg
or
sbbl
je
or
test
adc
sbb
in
push
and
cld
jl
sbb
adc
jae
push
add
jge
adc
sub
lret
fisubl
cwtl
jns
dec
and
add
outsl
push
movsb
stos
orb
adc
lahf
mov
out
jne
loope
xor
dec
push
add
aad
inc
add
xor
or
mov
lret
mov
test
aaa
nop
sbb
add
movb
lds
jp
add
or
push
adc
add
xor
push
jnp
mov
push
incb
ret
scas
test
sub
mov
test
add
pushl
or
xor
xchg
add
mov
leave
cwtl
sub
movb
das
andb
insb
adc
mov
in
xchg
and
out
adcb
repnz
adc
lahf
int
cmp
mov
dec
sbb
or
imul
shl
leave
or
lock
jne
inc
mov
rcrb
cmp
adc
pop
jb
xlat
ss
add
shlb
outsb
add
lret
movsb
cltd
inc
inc
add
or
jnp
add
dec
mov
and
push
dec
add
fs
lods
add
jo
in
pop
and
add
ss
rorl
in
jle
rorl
xor
shlb
xchg
push
clc
adc
mov
dec
add
aad
xor
jp
hlt
inc
decb
ficoms
xor
int3
cld
in
je
sbb
cmp
sbbb
push
and
xor
bswap
clc
dec
leave
orb
mov
imul
push
jo
push
data16
addb
pop
dec
push
xor
add
insb
adcb
inc
add
or
and
inc
fcmovu
rcrb
out
jb
pusha
push
xchg
push
push
ret
bswap
add
enter
aas
add
add
sbb
or
ret
xor
mov
mov
jne,pn
dec
inc
cmp
and
popa
add
lret
push
pop
cmc
or
pop
add
pop
sub
push
gs
movb
xchg
jmp
cmp
mov
dec
aas
rcl
leave
pop
call
inc
and
and
cmp
sbb
sti
sbb
pop
and
int3
mov
lahf
add
push
push
add
push
or
inc
jo
push
adc
mov
ds
mov
testl
mov
iret
add
stc
shl
jmp
pop
sbb
and
or
rclb
sbb
add
ffreep
pop
clc
cmp
pop
int3
call
lea
sbb
and
jmp
or
xchg
repz
out
adc
add
adc
lock
fists
jmp
or
jae
cmp
pop
add
leave
les
bound
inc
pop
xor
sbb
sbb
add
and
xchg
leave
inc
js
lock
es
int3
add
mov
xchg
sub
add
mov
or
pop
aam
aas
cmp
adc
add
lea
inc
ds
call
std
adc
jne
add
add
pop
jp
scas
jg
xchg
int3
out
jmp
ss
push
adc
add
and
pop
sbb
stos
push
add
mov
push
sub
aam
enter
mov
lea
cmpsl
or
and
inc
adc
test
stos
and
scas
adc
add
movsb
les
lret
cmp
add
mov
and
loop
repnz
push
fiaddl
jp
lea
out
push
and
or
sub
into
inc
leave
sub
test
cmc
pop
push
sub
inc
aaa
test
pop
pop
lods
and
or
adc
js
mov
std
lret
btr
imul
xchg
lock
add
outsb
je
add
add
cltd
add
or
dec
or
jmp
and
or
and
cs
pop
add
mov
or
imul
add
or
adc
bound
push
and
scas
inc
mov
int3
repz
shll
jge
pusha
into
test
sub
nop
add
dec
stos
push
mov
jg
add
inc
ror
jg
sub
cmpsl
lea
cwtl
push
mov
orb
push
add
pop
clc
xor
inc
stc
add
xlat
xchg
mov
jl
js
mov
adc
cwtl
dec
dec
inc
add
pop
dec
or
push
adc
push
add
mov
stos
jge
add
dec
in
in
xchg
dec
xor
das
add
fcomps
cmp
dec
andb
orl
add
fsubl
mov
jbe
xor
add
loope
rol
pop
pop
mov
pusha
cwtl
mov
fs
int
inc
mov
push
addr16
and
add
sub
rolb
cmp
lret
js
and
movb
add
addb
adc
outsl
or
and
jp
mov
rdtsc
ret
call
push
jbe
push
pop
cmpl
loopne
rcrb
mov
jno
add
insb
adc
cmc
addb
repnz
push
aad
jmp
and
fldcw
ja
add
push
in
add
add
dec
xor
jp
dec
jge
add
or
push
inc
fisttpl
test
push
add
xor
fistpll
sub
adcb
push
insb
mov
mov
adcl
jmp
add
sti
jge
dec
xor
add
mov
rcr
adc
xchg
inc
mov
movsb
cmp
call
inc
add
mov
jl
std
xor
sbb
xor
shrb
out
adc
pop
fst
pop
stc
lahf
add
and
add
es
dec
jno
add
add
clc
lahf
cmpsb
stos
outsl
mov
call
test
dec
pop
ret
add
adc
orl
cmp
adc
jl
mov
push
mov
add
ret
sub
inc
shll
adc
or
xchg
stos
icebp
mov
imul
adc
xor
sbb
dec
xchg
std
and
sbb
inc
jle
pop
mov
xlat
sub
scas
idivl
jl
sysret
mov
cmc
mov
jno
test
scas
icebp
jo
adc
dec
inc
mov
pop
les
add
nop
imul
mov
or
pop
arpl
mov
add
sahf
mov
cmp
mov
jns
cmpsb
and
mov
dec
hlt
jmp
movsb
add
imulb
call
nop
add
pop
inc
mov
add
add
or
add
cmc
call
add
mov
or
jge
cwtl
dec
add
or
jmp
jbe
dec
xchg
xlat
add
cmp
sti
add
adc
or
push
mov
pop
adc
das
sbb
shll
sub
push
adc
add
add
fadds
lahf
pop
es
inc
enter
out
in
mov
dec
jmp
mov
and
int
add
test
mov
or
cmp
cmp
inc
and
and
add
aad
aam
mov
and
or
adc
inc
inc
js
adc
test
xor
pusha
add
jae
xchg
mov
mov
mov
add
add
outsl
xor
stos
mov
xor
mov
dec
sub
add
mov
mov
adc
les
adc
or
aad
mov
sarb
rolb
pusha
gs
or
cmp
push
cmp
and
popa
popf
insl
movsl
imul
add
in
sbb
mov
pop
dec
or
mov
jo
enter
adc
test
or
lea
mov
mov
bswap
sub
jo
mov
mov
fwait
jle
sub
add
or
daa
xchg
dec
add
cli
test
ud1
adc
cmp
shrb
aam
adc
mov
clc
sbb
mov
xchg
repnz
cmp
rcl
adc
in
cltd
sub
out
adc
mov
cmp
jl
inc
pop
hlt
add
push
lods
ljmp
push
inc
and
add
inc
sbb
mov
mov
sub
dec
xchg
ljmp
add
testb
sub
mov
and
rcrb
mov
cmovb
mov
adc
cmp
add
push
or
call
lcall
pop
add
pop
pop
gs
test
mov
int3
test
pop
call
sub
addr16
cmp
rorb
rcrl
test
fcompl
dec
je
add
loop
fmuls
add
out
inc
adc
icebp
fs
jecxz
push
mov
add
or
lock
nop
adc
add
jle
idiv
push
data16
mov
xor
xor
jmp
call
sub
and
nop
ret
add
xchg
mov
cmp
clc
andb
in
mov
arpl
jmp
cwtl
das
in
add
cmpsl
mov
push
inc
decb
sbb
pop
push
xor
pop
std
jl
mov
test
mov
mov
sbbb
add
clc
test
pop
jg
dec
pop
scas
xor
rcl
cli
mov
js
cmc
jae
flds
loope
dec
sub
xchg
jo
add
popf
shlb
dec
stc
mov
cmp
jne
jbe
push
push
or
ljmp
or
adc
cmp
clc
popl
mov
sub
loopne
or
xor
jmp
cvtpi2ps
mov
hlt
xchg
add
jns
sbb
push
mov
sbb
pop
sbb
lahf
cmpsl
fistpl
ret
or
jecxz
mov
sbb
xlat
stc
sarb
jge
add
repnz
pop
mov
dec
idiv
push
sub
xchg
bound
push
inc
xor
clc
sbb
cli
or
int
pop
push
sbb
inc
cmp
mov
adc
test
test
xor
fadd
add
in
pop
xor
add
insl
add
push
or
or
outsb
into
mov
repnz
out
aam
lods
mov
cli
insb
mov
sbb
fcomi
or
sbb
repnz
hlt
movsl
cmpsl
add
jnp
fs
mov
mov
loop
xor
nop
aas
js
add
adc
xor
or
std
mov
iret
lock
add
pop
and
bound
aaa
and
adc
out
movsb
ljmp
sbb
ficomps
test
or
dec
fcomps
mov
jae
aam
bound
mov
loopne
adc
cmp
cmp
in
pop
xlat
xchg
shlb
xor
cmp
dec
xchg
jle
rcrb
les
sub
aas
adc
stos
loop
xchg
adc
icebp
pop
push
add
or
adc
jge
add
xchg
jo
mov
push
shl
push
inc
xchg
dec
adc
int
and
fstpl
dec
cld
mov
rcll
or
xchg
in
addr16
xor
add
xor
jle
cmp
call
pop
addb
loopne
adc
ja
in
stos
add
jmp
out
loopne
push
incl
sbb
add
mov
loopne
cli
mov
pop
faddl
mov
das
shl
or
addr16
pop
arpl
sbb
push
arpl
adc
xchg
and
leave
stc
fistpll
ja
add
push
inc
sbb
add
push
xor
add
add
ret
decl
std
inc
lods
xchg
lret
test
jmp
inc
mov
sbb
shl
daa
lret
scas
or
bound
loopne
bsf
mov
loop
add
mov
xor
mov
jecxz
adc
jns
jae
aam
aaa
shrl
or
jecxz
add
and
out
cmp
jnp
and
aaa
push
push
add
scas
jecxz
stc
pop
mov
ret
jmp
imul
adc
and
jecxz
shrl
xchg
iret
xor
xor
or
in
enter
cmp
mov
loop
xchg
add
cmp
repz
or
loop
clc
cmp
hlt
popl
cmpxchg
shll
pop
in
cmp
xchg
fdivrl
add
pushf
or
push
cli
sbb
aam
push
and
mov
sbb
shr
inc
stc
popa
mov
dec
adc
rol
mov
test
iret
and
push
sub
xor
add
mov
xchg
out
mov
sub
add
push
add
push
add
pop
out
cmp
iret
mov
jne
jb
dec
shlb
cmp
and
add
dec
add
mov
or
add
mov
cmp
cmpb
fstps
add
xchg
sub
fcmovnb
add
dec
sub
cmp
add
call
mov
es
mov
xchg
addb
push
clc
jg
and
clc
pop
pop
xchg
fdivrs
sub
inc
sub
add
jl
add
or
sbb
mov
mov
out
lea
mov
cmpsl
add
add
pmuludq
cmp
add
adc
and
hlt
ret
push
xchg
jl
pop
dec
adc
and
pop
pop
push
es
inc
out
mov
or
or
cmp
dec
add
aas
dec
adc
ljmp
cmp
dec
xor
cmp
push
aas
dec
xor
sbb
xor
push
push
cltd
add
jo
ljmp
pop
test
sub
mov
xor
movsb
jo
pop
jmp
dec
pop
jl
inc
cld
mov
bound
repnz
cmpsb
xor
das
mov
clc
outsl
push
nop
sub
xor
add
add
cmpsl
fldl
mov
jmp
int3
and
add
add
and
mov
lds
jge
pop
stc
arpl
dec
ret
ljmp
jl
cmp
or
in
cld
xor
js
xchg
ror
fsub
xor
sbb
cmpl
aam
and
in
cmc
pop
add
aaa
pop
cmp
inc
cli
mov
ret
pop
mov
push
sbb
dec
push
add
scas
jo
fdivrs
add
dec
xor
mov
sbb
lret
pop
or
lret
les
mov
and
lret
loop
jne
sbbl
mov
scas
lcall
outsl
adc
loopne
and
bnd
push
das
out
shl
sbb
add
xchg
mov
imul
daa
lahf
pop
pop
das
xchg
xchg
add
pop
push
out
adc
fsub
pop
mov
inc
loop
inc
imul
mov
insl
shlb
mov
add
lcall
sarb
push
mov
mov
xor
call
xor
jno
pusha
ret
pop
mov
add
mov
icebp
mov
ss
and
dec
jecxz
aas
sub
adc
dec
mov
cs
cmp
sub
cmp
adc
inc
or
shlb
iret
dec
hlt
insl
cmp
dec
adc
mov
lea
xchg
pop
xor
mov
repnz
pop
or
push
xor
data16
test
aam
mov
dec
repnz
fs
jo
roll
test
rclb
loopne
xchg
add
pop
xor
xor
xor
adc
imulb
lret
jns
push
in
push
jnp
mov
and
xchg
cmpsl
push
cmpsb
adc
repz
add
adc
sbb
mov
or
stc
stos
lock
outsl
xchg
xor
dec
hlt
test
imul
cltd
jmp
dec
adc
hlt
add
jo
decl
sarl
dec
xchg
lret
push
jno
inc
hlt
icebp
fidivrs
jmp
mov
pop
add
pop
adc
or
movsb
push
or
mov
pop
fs
xor
fistl
push
add
push
xchg
cmc
xchg
adcl
pop
add
cld
mov
dec
orb
or
cmc
xchg
sbb
xor
push
idiv
sub
mov
mov
add
outsl
jecxz
icebp
jae
es
add
mov
xchg
out
outsb
add
divb
adc
xor
and
in
pop
pop
xchg
out
pop
and
and
sarb
xlat
in
addr16
cli
inc
xor
xor
mov
or
lock
cmpsl
lock
pop
lret
lds
mov
adc
inc
fcmovbe
push
and
adc
pop
fmul
mov
inc
clc
cmp
push
push
dec
fldcw
lahf
sbb
enter
psubb
lods
mov
xchg
gs
inc
push
xorl
add
jp
xlat
push
pushl
or
add
fdivrs
js
test
out
dec
cmp
add
gs
pop
sub
push
and
cmp
jg
push
add
adc
or
push
adc
add
mov
push
sbb
xor
lret
dec
rclb
pop
mov
rol
out
add
das
and
hlt
mov
lock
clc
push
jle
add
pushf
daa
mov
xchg
mov
xor
adc
inc
add
jge
add
xchg
mov
ss
mov
addl
inc
jnp
cmp
das
mov
adc
lock
pop
mov
nop
mov
scas
xor
loopne
push
in
add
rcll
pop
mov
sbb
mov
jecxz
test
call
adc
mov
nop
mov
mov
into
xchg
out
aad
dec
fiaddl
ds
mov
pop
cmp
sub
shl
and
push
mov
cs
xor
dec
xchg
add
test
add
add
repnz
loop
jb
add
xor
xor
inc
clc
das
jo
or
pusha
lods
xor
test
inc
xor
xchg
cs
add
fcoms
cmp
jno
cmp
out
sbbb
mov
rolb
movsb
cmp
add
jecxz
cmc
xchg
call
cli
pop
mov
push
xor
sbb
test
jp
push
into
cld
mov
xor
fisubs
stos
sub
sbb
xor
in
outsl
push
enter
inc
pusha
add
dec
cld
dec
stc
add
mov
adc
nop
pop
pop
aad
sub
call
sub
clc
jp
lcall
dec
add
in
lock
cld
ss
jb
push
add
enter
inc
add
js
fnsetpm(287
cmp
mov
and
mov
push
adc
push
mov
cmp
stc
cmpsb
jb
mov
mov
aaa
inc
cwtl
adc
pushf
add
mov
ja
add
and
test
cli
jnp
add
sub
call
add
mov
add
jb
loop
mov
push
pop
icebp
mov
push
pop
cmp
push
in
sbb
out
or
in
cmpb
inc
add
enter
mov
call
xor
rol
mov
mulb
add
pop
movb
test
fsubl
aam
and
fsubr
adc
add
fdivl
lret
loopne
push
mov
in
jp
pop
jbe
add
and
rcrl
in
mov
lock
hlt
je
aas
sbbl
adc
lret
sub
xor
or
xor
jmp
sub
sub
mov
lcall
or
add
xchg
adc
and
push
add
clc
and
sub
add
cld
inc
xor
add
lea
push
mov
push
cld
mov
adc
jae
add
mov
add
mov
pop
aaa
sub
add
adc
cwtl
sbb
aam
mov
adc
mov
mov
fnsave
jne
cld
rcl
int
dec
or
into
push
push
cmp
add
xor
call
or
ja
in
nop
add
cmp
push
shlb
add
dec
jne
cli
sbb
xor
rcrb
je
incl
test
push
xor
fisttpl
arpl
call
lock
adc
mov
add
dec
xchg
pushf
addb
out
add
addb
inc
ret
out
push
enter
testb
incl
scas
int3
rorb
or
xadd
or
or
lret
loopne
add
leave
rolb
orb
enter
sbb
addr16
sbb
pop
fistpl
and
sbb
push
xchg
inc
filds
outsb
sbb
adcb
jo
adc
inc
adc
sbbb
cmp
cmp
cmp
push
adc
add
rcl
rolb
inc
mov
xor
sbb
mov
sbbl
testl
inc
hlt
or
cld
pop
std
jmp
sbb
sarb
mov
inc
decb
cmp
cmpb
stc
add
push
sub
add
jmp
sub
lock
sbb
loope
popf
out
sbb
jne
sub
in
inc
rclb
and
xchg
and
daa
add
shll
mul
jecxz
push
and
fadd
and
andb
mov
mov
arpl
cmpl
adcb
movsl
mov
mov
add
add
scas
shrb
inc
scas
mov
sbb
subb
sub
js
mov
add
jp
idivl
popa
jg
mov
mov
fiadds
mov
je
jne
mov
ja
into
mov
mov
jbe
jb
jb
add
xorb
push
jno
jo
mov
push
rcll
add
inc
xchg
mov
push
sbb
loopne
or
xchg
adcl
pop
fwait
cmp
sbbb
sbbl
fwait
loopne
add
inc
jg
jg
je
jbe
jle
inc
dec
mov
orl
orb
lea
sbb
inc
mov
roll
and
inc
pop
inc
inc
xchg
lret
cmp
add
cmp
test
rsqrtps
cld
pushf
mov
mov
adc
fists
in
or
and
push
push
jge
in
mov
cmp
pop
cmpb
pop
pop
outsl
mov
andb
mov
and
nop
adc
inc
call
call
std
scas
dec
int
mov
jle
insb
jbe
rclb
adc
xchg
lock
fcoms
mov
pop
jl
add
hlt
mov
add
mov
mov
sahf
mov
add
xor
add
mov
bound
adc
jmp
push
cwtl
stos
cmp
mov
push
push
push
xorb
daa
cmp
pushf
jl
orb
xor
ret
js
es
push
sbb
repz
sarl
enter
dec
or
dec
call
pop
mov
imul
sub
or
and
inc
lods
xchg
jg
cli
les
leave
popa
icebp
hlt
sbb
or
scas
repnz
mov
add
int
add
jo
sub
mov
inc
add
clc
dec
or
push
adc
add
call
add
xchg
jae
sbb
add
jne
aam
adc
jl
inc
push
cld
cmp
loopne
cwtl
and
xchg
xchg
push
data16
inc
stos
add
loope
cmp
add
mov
bound
sarb
push
sbb
xchg
cmp
xchg
int3
cmp
or
in
rolb
cs
jno
std
rclb
ljmp
add
add
scas
and
add
not
and
add
cs
addr16
decl
add
ret
and
sbb
clc
xchg
cmp
add
rcll
mov
sbb
shl
add
sarl
sbb
add
icebp
xchg
cmp
add
popf
cld
push
pop
jbe
xor
add
call
mov
mov
mov
rclb
dec
pop
mov
and
adcb
popf
movsl
cmp
sub
scas
and
sub
jo
or
xor
mov
cmp
addb
loop
jg
sbb
add
adc
repnz
ds
cli
cmp
cmpsb
arpl
stc
push
or
xchg
and
clc
sti
cld
push
mov
outsb
mov
sbb
ret
dec
aad
adc
test
dec
sub
inc
xor
inc
and
add
test
sub
jecxz
add
cmp
fs
or
and
cmp
mov
cmp
or
adc
push
inc
xor
dec
xchg
add
pop
repnz
clc
repz
add
and
stos
es
sub
in
mov
dec
pop
lods
push
jl
xchg
repnz
cmp
push
xchg
jge
pop
mov
pop
xor
and
jb
sub
push
mov
sbb
sub
test
push
xchg
out
or
mov
cmpl
xchg
aas
jno
addl
cld
mov
dec
pop
xchg
or
push
xor
inc
xchg
dec
add
or
mov
sbb
fs
rcrl
jg
cmp
lea
xchg
mov
pop
and
xor
adc
and
scas
into
inc
xor
pop
adc
sbb
mov
or
mov
pop
and
xchg
pop
push
imull
ror
mov
adc
jg
xchg
test
mov
push
inc
aad
orb
loope
jno
loope
xchg
inc
mov
inc
or
mov
in
adc
pop
add
mov
mov
out
mov
sbb
lds
dec
lock
add
shll
je
jp
add
lods
dec
or
call
jo
mov
xor
or
add
add
add
sbb
add
dec
inc
xor
nop
mov
sub
cmpsb
test
push
mov
ds
add
add
inc
jbe
cld
adc
subb
sbb
push
and
xchg
arpl
or
mov
and
mov
mov
sbb
adc
mov
cmp
fnstcw
adc
adcl
push
push
add
pop
adc
or
lret
mov
add
pushf
sub
enter
push
mov
push
pop
mov
das
add
mov
dec
lret
dec
subb
repnz
inc
sub
mov
movsb
add
fbstp
sub
add
lret
jp
lods
adc
add
sbb
cwtl
fisubrs
jb
add
es
jae
jns
fadds
mov
movsb
sbb
and
push
sub
in
add
dec
js
jg
add
mov
mov
push
or
adc
lret
cmc
mov
jae
add
mov
xor
add
and
mov
pop
jecxz
aam
xchg
inc
lcall
push
inc
push
add
pop
mov
cli
cmp
mov
add
adc
jnp
add
sbb
repnz
jne
push
xor
adc
xor
repz
pop
pop
jecxz
hlt
mov
jmp
xor
add
nop
adc
dec
mov
iret
cmp
pop
add
mov
push
add
sbb
xor
ss
and
jl
xorb
add
sar
jns
add
mov
fcomp
gs
sbb
push
shrl
stos
mov
mov
push
mov
lods
imul
inc
push
fdivrs
add
cmp
or
imul
test
rolb
scas
sbbb
nop
add
jne
xchg
add
pop
mov
mov
push
lods
push
mov
cmp
lea
mov
and
popa
xor
xor
aas
pop
mov
ret
mov
testb
add
inc
xchg
add
sbb
pop
test
pop
mov
mov
add
pop
xor
pushl
dec
push
push
mov
add
stos
adc
cmp
pop
mov
addb
je
rclb
and
and
orl
lahf
addr16
jl
enter
in
xor
push
mov
xchg
shlb
add
enter
and
adc
add
add
cmp
sbb
mov
adc
inc
jb
mov
push
or
push
fcoml
in
jecxz
and
add
sbb
sti
rcrl
inc
fs
add
rcrl
or
or
gs
dec
add
inc
shrb
add
cwtl
inc
out
adc
and
loope
cmpsl
and
movsb
in
jmp
jle
push
add
repnz
mov
ficompl
dec
fsubrl
inc
shrl
cld
mov
push
push
sbb
rcrb
outsb
movsl
into
pop
add
cld
adc
testl
arpl
add
add
push
int
mov
daa
adc
xchg
stos
dec
push
cmp
orl
pop
cltd
lahf
add
jnp
aas
shll
push
das
fstpl
jns
or
pop
mov
cwtl
push
arpl
aam
cmp
add
dec
jb
dec
loope
add
push
add
shlb
push
jge
adc
add
mov
arpl
lock
cld
rorl
loop
ljmp
push
adc
pop
add
jle
movsl
fimull
pop
jmp
push
xchg
push
daa
jmp
nop
add
adc
xchg
test
sub
fcom
xor
repnz
sarb
in
add
dec
ficoml
lds
leave
xor
mov
push
icebp
stos
inc
pop
pop
imul
inc
jg
jae
dec
out
add
pop
xlat
add
mov
incb
push
or
add
lahf
cs
popl
mov
add
movw
cwtl
ret
push
out
pop
clc
pusha
mov
or
les
adc
add
push
sub
aad
cmp
mov
xor
adc
mov
sbb
add
shrb
add
out
cltd
out
cmp
loopne
sub
push
loopne
je
push
and
jne
adc
inc
add
and
sub
ret
cltd
mov
pop
xor
mov
mov
enter
pcmpgtb
adc
mov
sldt
aaa
adc
stos
int3
add
or
add
dec
cli
icebp
or
adc
shlb
push
push
sub
add
loope
popa
insb
cmp
or
xor
aam
or
inc
int3
or
pop
jno
sbb
pusha
addr16
cltd
xor
jne
mov
xchg
jge
movb
or
inc
lea
inc
xor
ficompl
cmp
in
fdivs
mov
dec
leave
icebp
pusha
lods
fs
add
int3
dec
dec
cmpb
pop
jne
stos
cmpsb
aam
xchg
pop
fsubr
add
xor
and
sub
loopne
fdiv
adcb
call
sbb
loopne
mov
and
push
in
adc
or
add
adc
sub
add
pop
out
mov
sbb
add
into
rorb
das
jb
in
leave
add
add
adc
push
test
push
add
cmp
filds
xchg
es
sbb
or
subb
cmp
and
popf
sbb
loopne
mov
pop
les
aaa
jecxz
or
sbb
ljmp
cwtl
out
mov
add
jg
mov
pop
push
rorb
adc
push
cwtl
sbbb
cmpsl
flds
mov
add
aam
add
xor
mov
cmp
cmp
loope
aad
add
enter
push
pop
add
lahf
dec
shlb
stos
fdivl
mov
adc
mov
loope
ds
movsl
sub
xor
push
push
push
inc
ret
nop
add
or
xchg
loop
mov
cmp
inc
popf
jle
or
ljmp
test
xchg
mov
mov
test
ja
ss
pop
mov
ds
dec
pushf
add
sub
add
push
add
fldenv
inc
sbb
inc
subb
push
pop
je
pop
inc
inc
mov
mov
arpl
mov
push
jb
add
rcll
fisttpl
mov
add
lret
rep
add
sub
add
mov
xor
bnd
adc
add
mov
inc
add
add
je
push
sarl
jecxz
add
mul
enter
sbb
repnz
and
sti
push
or
add
std
repz
add
jne
adc
stos
add
aad
inc
sbb
mov
ljmp
loopne
cmp
jne
cmp
loopne
dec
pusha
cmp
add
pop
inc
add
xor
inc
inc
call
mov
sbb
push
pop
sbb
dec
mov
push
movsl
imul
cmpsl
push
add
mov
mov
jb
mov
scas
roll
movl
les
leave
mov
mov
dec
xchg
adc
add
shrl
add
dec
adc
popf
pop
fiaddl
xchg
xor
jne
es
cmp
jmp
push
adc
cmc
cmc
in
mov
add
jo
sbb
jmp
and
es
shrd
add
nop
adc
xor
jns
cmp
das
add
shll
add
test
fildll
adc
jecxz
inc
nop
dec
cmp
cmpb
xor
and
mov
mull
dec
adc
push
test
add
add
movsl
inc
orb
xchg
mov
lock
faddl
sbb
xchg
add
push
or
adc
mov
mov
fs
add
jb
insb
xchg
dec
out
cmp
clc
jge
xor
test
xchg
jl
sbb
xor
add
cltd
xor
sbb
push
lds
add
add
or
push
jg
ud1
xor
or
cwtl
dec
add
push
stc
or
nop
push
cmp
les
mov
or
or
scas
push
dec
add
pop
inc
incb
lahf
jle
pop
ret
aas
add
adc
pop
inc
cwtl
add
nop
or
pusha
lret
rolb
add
ret
sar
fdivr
add
jb
xor
mov
dec
es
push
or
inc
cmp
inc
inc
sub
in
cmp
lahf
sbb
adc
call
xor
dec
insl
cmp
inc
add
out
jge
nop
mov
ja
loope
subb
and
lcall
clc
out
pop
add
hlt
xor
mov
mov
or
incl
inc
sahf
and
test
mov
jle
or
xchg
addb
adc
mov
repz
pop
mov
jl
sub
and
shlb
inc
add
je
mov
sbbb
rclb
jg
push
imul
push
adc
add
sbb
or
adc
ds
mov
fadds
cmp
jmp
loop
pop
cmp
adc
cmpsl
cmc
sbb
stos
sbb
int3
add
sbb
sbb
jnp
add
dec
out
cmp
sub
int3
dec
cmp
add
movsb
add
and
nop
inc
add
clc
shlb
add
cmp
push
jne
test
leave
push
jbe
mov
pop
pop
es
mov
jmp
add
sbb
inc
or
insb
add
inc
lods
mov
cmp
sub
and
test
lods
xlat
push
loope
add
pop
mov
jo
jne
hlt
add
add
ljmp
and
sbb
std
cmpsl
or
or
add
loope
imul
out
pop
fbld
add
or
mov
sub
sbb
rcrl
lds
add
jge
loopne
aas
xchg
adc
xor
fnstcw
enter
dec
in
jnp
cmp
add
jne
loopne
add
mov
sbb
incl
mov
push
repz
mov
pop
incb
add
loopne
dec
xchg
add
xor
pop
sti
out
adc
add
pop
insb
cli
inc
xchg
fstl
aam
adc
ret
add
xchg
mov
pop
cmp
scas
lds
pop
insl
pop
add
nop
mov
add
xor
cmpsb
cmp
loopne
add
inc
and
movsl
test
pop
add
lock
cmp
inc
out
rcl
ror
add
sub
inc
pop
pop
data16
cmp
or
pushf
add
jg
inc
xlat
add
pop
xor
rolb
out
sub
add
lea
je
mov
jecxz
dec
in
in
sbb
cmp
dec
add
dec
mov
mov
jge
lods
lcall
mov
or
cmp
add
lret
aas
sbb
cmpl
mov
adc
andb
lret
bound
ljmp
inc
repnz
ficomps
jne
jo
add
das
cmc
outsb
xor
pusha
add
cmp
call
adc
jmp
mov
push
xchg
inc
add
rol
push
scas
imul
jecxz
cltd
and
pusha
push
movsb
mov
arpl
add
mov
add
out
jl
sbb
aam
add
inc
cmp
lods
popf
xchg
push
or
add
mov
mov
imulb
add
inc
cmp
sbb
test
lods
jp
and
push
jo
xor
test
arpl
add
pop
aad
fsubrs
pop
std
test
test
loope
jns
and
and
mov
dec
mov
aaa
mov
sbb
hlt
cmp
add
xor
sarb
mov
xchg
sbb
cwtl
add
sbb
subl
shr
dec
xor
add
push
rorb
add
mov
xorl
fwait
rorb
xchg
iret
gs
push
add
cmp
inc
popf
emms
cmp
rolb
enter
cmp
loopne
add
push
jnp
loopne
add
mull
jmp
add
rcll
mov
in
jg
jle
or
int
and
xchg
dec
mov
xor
xchg
pop
or
aas
add
fstpl
pop
lds
and
cmp
add
cs
out
insl
cmp
jae
cmp
xor
xchg
out
and
bound
lret
inc
mov
rolb
or
das
ss
cmp
sbb
mov
cld
test
add
sbb
add
jnp
shr
add
jo
mov
ja
xchg
leave
ror
pop
sbb
sub
cmp
inc
cltd
mov
cmp
cmpb
jg
lock
add
repnz
bound
mov
in
dec
out
pop
out
pop
add
stos
mov
stos
mov
int3
int3
cmp
sbb
push
add
adc
or
into
or
jmp
insl
sub
ja
sbbb
inc
out
aam
movsl
pop
and
outsb
add
fwait
jno
adc
nop
aas
mov
and
aaa
inc
add
add
insl
jo
add
pop
and
mov
add
or
inc
inc
repnz
pop
pop
cmp
add
cmp
out
mov
push
pop
push
sbb
pop
pop
and
sbbl
cld
faddl
lock
dec
cmp
cwtl
push
fbstp
fidivrl
nop
xchg
sbb
sbb
add
in
lret
push
push
int3
es
push
add
adc
add
aam
sarl
int
cmpsl
cmp
sub
jmp
add
cmp
dec
add
and
std
or
inc
jbe
add
stos
aad
testb
int
out
jl
fst
and
repnz
jo
push
fnstcw
rorb
add
or
jp
adc
inc
popf
sub
cmpsl
cmp
lock
clc
fs
sbb
add
xchg
shrb
and
add
sub
push
add
xchg
mov
add
push
sbb
test
sbb
push
test
sbbb
jle
fs
add
gs
lock
addb
mov
jmp
decb
jno
sbb
xchg
xchg
pop
inc
add
xor
add
dec
pop
into
add
inc
xor
pushf
leave
cmp
inc
out
cmpsb
add
mov
in
xchg
or
push
add
jae
movsb
sti
loopne
add
mov
push
jp
jno
pushf
inc
push
pop
push
hlt
ja
or
pop
xor
movsl
or
je
mov
add
xor
mov
out
add
sar
lock
mov
sbb
mov
add
jbe
outsl
gs
and
or
test
ss
push
mulb
not
cmp
mov
dec
out
mov
nop
or
fadds
inc
push
cmpb
add
movnti
call
push
mov
and
test
adc
push
dec
push
test
lea
dec
stos
ss
and
lea
add
cmpsl
inc
and
pop
mov
outsl
scas
ret
lock
rorb
lds
sbb
scas
clc
enter
push
and
sub
sub
rorl
pop
test
mov
popf
ret
add
add
adc
sarb
add
mov
pop
push
pop
ret
inc
add
icebp
or
enter
out
add
push
xor
hlt
mov
push
enter
pop
clc
aaa
add
cmpsl
cltd
xchg
fmuls
out
scas
cmpb
jno
add
in
xchg
xlat
and
aas
add
lods
or
jmp
push
mov
js
daa
and
call
adc
fucomip
jae
pusha
mov
mov
add
sub
pop
aam
shrl
add
inc
push
and
mov
jo
test
xor
mov
xor
add
and
mov
fdivl
push
or
xor
inc
adc
xchg
sti
mov
adc
adc
xchg
les
and
stos
clc
stc
mov
xchg
sti
sub
mov
push
add
pop
or
rorb
mov
cmp
cmpb
add
outsl
fs
dec
push
sub
adc
pop
jg
lds
into
add
push
cltd
lret
popa
mov
fisubrs
std
shlb
push
lcall
push
inc
pop
stos
cwtl
dec
push
mov
sbb
cmpl
add
adc
out
clc
inc
add
in
sbb
cli
push
sub
jnp
mov
sub
adcl
push
hlt
add
mov
stos
adc
or
or
popa
mov
xchg
hlt
in
clc
pop
jno
inc
cld
shlb
arpl
inc
xchg
loop
in
adc
rorl
adc
add
popf
cltd
popa
or
rcrb
add
xor
xorb
sahf
int
mov
push
mov
stos
add
push
sub
push
ret
inc
daa
mov
clc
stos
incl
loopne
clc
add
cld
add
sbb
lea
mov
xchg
mov
movsb
imul
jae
mov
adc
dec
or
push
mov
push
aam
xchg
roll
push
xor
adc
ror
mov
push
add
or
add
fistpl
xchg
xchg
adc
nop
sbbb
and
sub
aam
jmp
lahf
sbb
into
cmp
subl
or
and
dec
mov
mov
or
mov
xchg
ret
enter
enter
add
mov
stos
call
adc
sbbl
ds
daa
int
dec
add
dec
cs
jg
add
test
stos
roll
jmp
xchg
push
inc
xchg
and
lret
add
jo
adc
add
movsl
repnz
sbb
lods
sbb
sub
andb
add
in
pop
xor
mov
sub
rol
loopne
enter
inc
cld
ret
aas
psubusb
fstpt
call
push
add
pop
mov
xor
and
mov
rol
add
add
fsubs
push
stos
cld
jp
mov
xor
je
mov
rcr
loopne
mov
out
mov
nop
mov
mov
mov
adc
inc
add
ss
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
and
pop
loopne
mov
add
inc
add
lds
loopne
aad
xchg
push
push
add
mov
fwait
aas
mov
cmp
stos
jae
add
add
push
mov
js
fiadds
sub
imul
or
mov
shrb
incb
call
dec
push
std
and
adc
xor
mov
xor
inc
enter
lret
add
sub
add
pop
jmp
pop
cmpsb
sub
adc
push
incb
leave
mov
loope
imul
adcb
jl
xor
adc
jbe
or
cmpsb
call
pop
cmp
xchg
add
clc
mov
xorl
fwait
add
and
push
ss
xchg
jge
add
pop
leave
dec
arpl
loopne
sub
mov
cmp
lds
je
addb
or
xor
lahf
outsl
rolb
add
add
repnz
mov
add
stos
xchg
enter
add
cmp
inc
lahf
add
addr16
or
or
mov
add
or
xchg
inc
and
pop
mov
sub
mov
int3
add
subb
push
aam
push
or
pushf
test
aad
add
xor
stos
add
lahf
sub
adc
add
mov
out
or
mov
sti
pop
in
loopne
sub
add
repz
and
dec
leave
mov
mov
fbld
sub
xor
pusha
inc
and
or
lds
push
ret
inc
adc
add
lret
les
dec
adc
pop
jl
add
add
jmp
rolb
sub
in
xchg
lds
loopne
lcall
popf
dec
insb
push
add
inc
or
cmp
aam
push
aad
pushf
jo
sbb
or
roll
add
adc
inc
push
xchg
repz
loopne
aad
xchg
dec
add
sbb
adc
jnp
jb
scas
loop
sub
add
int
inc
inc
pop
stos
pop
pop
ficoml
inc
cmpb
aad
and
jne
roll
imul
test
mov
cmpsl
push
shrb
clc
add
mov
stos
enter
inc
je
add
add
in
push
fs
stos
xchg
nop
in
add
sbb
pop
dec
test
adc
out
mov
inc
adc
clc
sub
add
pop
mov
cltd
xchg
sub
jge
add
xor
jl
push
out
test
or
xor
sub
inc
mov
popl
js
xor
ret
pop
je
add
call
insb
push
add
adc
jecxz
lahf
imul
adc
lea
xchg
inc
mov
andb
add
mov
inc
push
cmp
or
pop
xchg
sub
mov
push
xor
cmp
es
push
add
jg
ret
jmp
add
loopne
in
dec
cld
insb
cwtl
ss
jne
nop
add
cltd
adc
xchg
add
cmp
jmp
dec
adc
cmovl
adc
lods
iret
add
xor
xor
push
sti
call
sub
push
mov
push
enter
dec
jnp
add
das
dec
add
dec
pop
pop
sbb
cmpsb
pop
xchg
pop
clc
mov
xor
add
add
sub
out
lcall
inc
imul
dec
ret
jnp
and
fwait
add
fistpl
and
lcall
push
add
and
or
hlt
xchg
bound
cli
cmp
fiadds
dec
popf
cld
stos
int
dec
add
andb
orl
add
mov
mov
push
jg
test
sbb
inc
inc
add
jmp
jns
add
mov
cmp
cmc
and
and
sbb
sub
fiaddl
insb
aas
inc
cld
lock
mov
and
xchg
div
andb
test
ret
and
sub
call
cmp
push
xor
in
iret
push
add
lcall
cmp
sub
pop
mov
aaa
or
add
sub
sbb
cmp
mov
mov
iret
inc
dec
and
subl
sbb
das
xchg
cmp
cmp
cmp
aas
xchg
sub
stos
add
fs
push
dec
loope
and
or
push
test
mov
push
stos
ja
sub
push
subl
jo
sahf
add
sti
stos
rolb
or
cmp
fsubs
jecxz
mov
add
push
mov
dec
add
jbe
xchg
mov
add
orb
test
inc
and
jne
push
sub
roll
push
xchg
lahf
loopne
cmp
dec
add
in
call
jle
or
sbb
ds
push
add
jnp
imul
sub
rclb
dec
add
lods
lock
add
push
loop
arpl
add
mov
pop
adc
hlt
cld
repz
je
les
add
adc
sbb
mov
push
mov
and
leave
or
jnp
add
jecxz
pop
push
xchg
dec
mov
jmp
add
add
outsl
adc
add
cmp
test
add
push
dec
xor
jo
int
sub
je
sub
sbb
sub
xchg
cmp
pop
popa
daa
cli
mov
hlt
imul
adc
sub
dec
sbb
push
out
andps
add
mov
add
xor
push
mov
adc
movsb
or
xchg
loopne
push
pop
sbb
lret
aas
shlb
jae
cmpsb
add
mov
lods
cli
out
ljmp
mov
lea
jp
mov
orb
jb
push
or
xchg
xor
add
test
fwait
into
rcl
add
sub
cmp
fdivs
enter
adc
or
cltd
xor
sub
dec
fnstsw
es
dec
roll
ja
inc
lods
sub
adc
in
mov
mov
add
daa
dec
adc
xchg
mov
xchg
mov
inc
add
push
sbb
cwtl
fs
mov
jl
dec
lahf
add
stc
test
mov
add
in
das
sub
mov
pop
loopne
popf
add
mov
or
loopne
pop
or
sub
dec
and
dec
imul
mov
test
aas
add
fcmovnu
clc
fs
pop
call
xchg
gs
sahf
push
dec
push
movsl
and
stos
push
or
sahf
enter
add
or
mov
jmp
fnstenv
jne
adc
mull
es
add
and
jp
pop
add
cmp
icebp
xchg
and
and
sbb
or
xor
in
add
inc
addr16
cmpsb
cmp
test
cmp
and
dec
sub
add
jo
push
orb
popf
sub
xchg
insl
in
enter
add
adc
mov
cmp
xchg
or
adc
test
jne
push
sarl
push
jns
leave
sub
pop
loop
add
lods
pop
into
fs
jmp
xor
repz
das
add
add
cli
dec
adc
add
or
jbe
xorb
add
add
jns
outsl
add
pop
sti
das
push
out
loop
mov
dec
add
and
jge
add
ret
push
ret
or
push
xchg
test
test
inc
lods
mov
push
out
test
inc
add
mov
rorb
cmp
mov
gs
cld
test
add
ljmp
add
dec
daa
cmp
sub
cmp
jmp
cmc
ds
sbb
push
sub
add
mov
out
outsl
mov
add
mov
or
dec
push
ret
jmp
and
add
cltd
add
inc
sbb
mov
popa
push
push
ret
scas
push
pusha
cld
cwtl
push
ret
mov
add
or
and
mov
adc
inc
mov
lock
mov
pop
xor
loope
dec
add
sbb
arpl
mov
imul
jns
push
add
fnstsw
xor
adc
jl
add
addl
add
push
jne
decl
ljmp
dec
loopne
out
sub
push
call
and
xchg
das
mov
sarb
or
mov
cmc
sub
scas
push
ja
add
js
shr
call
mov
jae
jl
pop
inc
xor
mov
adc
rolb
cmp
cmp
jnp
or
inc
and
jmp
add
xor
flds
adc
xchg
xlat
xchg
hlt
dec
cld
or
arpl
call
inc
and
jge
shrb
test
inc
dec
add
pop
scas
outsb
jmp
add
bound
aaa
add
jbe
jae
stos
pop
add
loop
lea
mov
mov
stos
rolb
xor
scas
lods
ljmp
and
sbb
and
dec
lret
fdivrl
add
pop
add
rcrl
jo
stos
ret
mov
cmp
adc
xchg
jge
xchg
inc
fwait
mov
mov
sub
fadds
jle
shl
jl
push
add
and
add
stos
test
ret
inc
inc
add
dec
jge
jno
add
out
dec
sbb
xchg
mov
xlat
movsl
enter
add
xchg
mov
jnp
pop
push
lock
xor
xor
leave
mov
or
add
push
sbb
push
dec
mov
sub
ret
add
je
jle
jo
mulb
add
sub
and
cltd
sbb
fimull
insb
push
mov
stos
jb
loopne
cmp
jne
add
dec
mov
mov
out
add
test
scas
dec
sub
mov
dec
add
fcomps
jle
cmp
mov
xchg
dec
xlat
incb
jl
add
fisubl
pusha
add
icebp
shlb
sub
mov
add
std
or
dec
pop
pushf
loop
hlt
add
mov
dec
add
inc
jb
out
and
nop
pop
cmc
decb
add
les
and
mov
jbe
cmp
jnp
pop
loopne
adc
loope
add
push
xor
mov
arpl
pop
add
jmp
add
jo
popf
stos
fidivl
mov
negl
rolb
aad
lret
lock
addl
add
jle
aaa
out
sub
adc
les
arpl
ds
and
adc
sti
lcall
paddw
cmp
sub
xor
cmp
scas
cmp
cmp
cmp
sbb
inc
insl
cs
mov
js
push
add
arpl
mov
outsb
shlb
jo
sbb
dec
push
push
inc
add
jbe
outsb
stc
jmp
les
lock
and
sbb
add
dec
jge
jl
inc
add
jnp
sahf
cld
bound
stc
jo
inc
pop
push
jg
outsl
insb
shlb
pusha
push
add
push
jae
imul
jns
and
jo
jo
data16
or
jae
pop
dec
out
fimuls
jb
jle
add
popa
mov
bound
data16
xchg
inc
push
inc
or
jbe
jno
inc
out
add
je
jae
pop
rclb
outsb
data16
jbe
add
inc
adc
or
push
subl
cmp
jbe
add
add
insb
push
nop
add
jo
and
cmp
lock
push
popa
add
push
bnd
adc
add
outsl
imul
sahf
inc
decb
add
dec
gs
imul
cmp
and
push
lahf
add
mov
or
int3
aam
je
add
popa
jbe
mov
ja
mov
bound
insl
data16
jp
cmp
push
add
lods
push
imul
push
ret
aaa
jbe
loopne
inc
add
add
push
pusha
xchg
push
sbb
inc
ja
arpl
insb
shlb
jmp
add
ret
push
icebp
dec
pop
pop
loope
loopne
add
mov
mov
les
out
xorl
sar
pop
sub
imul
lret
rolb
push
push
push
ljmp
pushf
or
loope
sarb
add
add
cmp
ret
inc
pop
adc
lahf
add
stos
int3
mov
popa
mov
call
lret
push
scas
jno
xchg
add
mov
loopne
and
jae
add
pop
mov
add
pop
push
xor
cmp
adc
jns
dec
or
psubusw
xor
dec
add
loop
loope
cmp
rcll
mov
sbb
mov
add
out
stc
in
xorb
jns
mov
xchg
xchg
sub
repnz
jnp
mov
sub
in
mov
push
inc
cli
mov
roll
push
add
xor
xor
push
sbb
mov
mov
imul
sbb
cmp
flds
dec
or
add
fmull
and
add
insl
or
nop
push
push
jbe
lret
add
jo
add
xlat
scas
cmp
inc
aad
add
push
hlt
cmp
rcrb
add
loopne
jae
push
lock
add
inc
pop
int
mov
push
add
leave
pusha
xchg
and
aas
ja
cmp
sub
or
pop
add
setbe
in
sarl
pop
xchg
pop
ds
xor
pop
dec
ret
test
add
and
scas
ficoms
push
test
jle
add
jl
dec
jp
cmpb
or
add
pop
xor
add
sbb
sbb
lock
in
test
adc
mov
das
push
xor
add
mov
loop
jne
xchg
je
add
lahf
mulb
jmp
adc
test
xchg
mov
mov
sbb
jecxz
mov
lahf
ffreep
add
jno
push
add
push
sbb
sbbb
outsl
xor
in
jnp
add
push
mov
xchg
dec
add
in
jne
nop
cmpb
je
add
cwtl
inc
add
loop
scas
jmp
cmpsb
jo
add
fucomp
jp
repnz
aad
add
sub
test
add
notb
fisttpll
xor
fidivl
add
cli
arpl
pop
clc
pop
loop
add
cmpsl
cmp
push
and
and
xor
mov
insb
cld
loop
jp
fwait
add
into
cmp
imul
in
pop
popa
cmpsb
jmp
add
aas
sbb
mov
adc
imul
nop
repnz
in
or
hlt
xchg
cmp
lret
add
mov
push
movsb
fs
jo
add
jmp
push
loop,pt
add
rolb
jo
add
loopne
push
fdivrl
sbb
sbb
jp
pop
push
shl
pop
scas
add
mov
mov
subb
pop
push
stos
fcompl
mov
cwtl
xchg
add
mov
and
add
cmc
jae
cld
jb
add
cmp
xorb
mov
sbbl
ss
aas
aad
subb
out
mov
xchg
add
jbe
add
popf
das
xchg
mul
mov
and
popa
shlb
imul
fsubr
push
add
push
cmpsb
jae
es
mov
cwtl
sbb
cmp
out
rorl
stos
mov
dec
jbe
jg
testl
xor
lret
add
mov
or
mov
dec
jmp
mov
es
dec
cmp
aam
cwtl
push
jae
loope
cmpsb
add
xchg
out
sarb
push
sbb
xchg
adc
fs
ja
aam
outsl
imulb
stos
cltd
add
movsl
push
mov
fsubl
andb
cmp
cmp
xor
push
cs
add
adc
movsl
or
popf
inc
cltd
add
pop
dec
adc
les
bswap
cmp
rolb
int
loope
xchg
maskmovq
jne
xchg
adcb
fs
cmp
in
pop
and
jg
jno
mov
or
insb
adc
adc
nopl
jmp
xlat
movsb
sub
fiaddl
pop
sub
push
pop
adc
loopne
arpl
fcoms
add
in
jmp
loop
mov
repnz
xchg
je
sub
jae
pop
outsl
add
or
or
mov
add
push
pop
rcl
cld
add
cmc
add
mov
in
bound
inc
or
add
pushf
cld
rclb
gs
and
das
cmpl
add
push
mov
jmp
pop
lock
lds
sub
mov
xor
lock
popf
pop
cld
or
add
mov
push
stos
jno
dec
sbb
mov
mov
fstpt
scas
add
outsb
add
mov
out
lock
jne
test
scas
je
add
out
cmc
cmp
rorb
dec
add
sub
jmp
call
scas
sub
sub
cmp
arpl
jbe
mov
ljmp
cmp
push
add
mov
inc
lcall
add
iret
aaa
add
add
mov
call
mov
xchg
mov
jge
add
subb
ret
daa
push
add
pop
cmp
rcrb
sub
xor
cmp
add
xchg
lods
add
push
or
add
ret
movb
add
sub
mov
add
xor
pop
dec
pop
adc
div
aas
add
adc
out
dec
pop
sysret
lea
cwtl
orb
add
test
jp
cmp
sbb
in
or
push
xor
sbb
and
inc
leave
aas
jecxz
test
and
add
hlt
push
push
pop
add
mov
xlat
mov
sub
ds
inc
jp
in
mov
clc
cwtl
jge
sub
sbb
mov
jb
add
in
in
push
dec
fildll
mov
jno
or
sahf
sbb
push
pop
add
int
adc
mov
xchg
lock
out
xor
mov
sbb
add
jg
push
call
shll
leave
add
rcrl
loope
cmp
push
je
add
rcr
add
call
test
clc
lret
and
add
pushf
lds
in
inc
rol
xor
cmpb
cmpsl
sub
adc
adc
mov
sbb
call
jne
pushf
lock
push
jae
lret
jnp
js
add
lcall
add
and
adc
add
xor
mov
sbb
mov
dec
cmpl
or
out
jmp
cld
lcall
xlat
jno
adc
push
add
adc
add
cs
pop
jge
or
dec
sbbb
ds
sbb
add
call
pop
cmp
inc
mov
inc
jg
mov
inc
pusha
or
push
sub
pop
test
xor
cmp
in
mov
dec
mov
add
fimuls
clc
jge
loop
push
add
add
into
or
xchg
ljmp
loop
in
stc
pop
sbb
add
subb
ds
add
arpl
les
cmp
sub
xchg
lods
sub
fstpt
cmp
mov
dec
adc
or
push
inc
xchg
iret
sub
enter
and
call
push
xlat
lods
ret
or
data16
adc
add
add
xchg
out
loopne
add
cmp
rolb
and
inc
or
push
add
icebp
ret
cld
call
mov
sub
push
movsb
aas
sub
inc
sub
mov
add
mov
push
sbb
test
sbb
push
stc
dec
clc
sub
sbb
mov
and
cmp
je
lock
ret
popa
add
dec
jno
outsl
cmp
repz
jmp
in
or
and
decl
sbb
dec
add
repz
sub
cltd
idivb
push
push
inc
sahf
mov
add
jne
test
pop
add
call
add
ljmp
mov
add
xor
nop
dec
mov
jb
pop
sbb
sub
outsb
mov
jmp
roll
loopne
dec
sbb
xchg
loope
mov
cmp
mov
push
or
mov
fadds
rol
rorb
push
add
lods
out
mov
mov
in
jo
test
test
xor
adc
xchg
gs
rcrb
lret
add
pop
xchg
loope
shr
sti
fisttpll
pop
add
cmc
pusha
call
sbb
cmp
and
pop
ficoml
push
movsl
call
xchg
adc
and
call
xor
clc
push
add
in
sbb
add
xchg
fdiv
fistpll
inc
mov
pop
add
frstor
je
sub
push
sbb
and
out
aad
lock
add
mov
sub
mov
clc
xchg
cwtl
adc
pushf
dec
mov
lods
loope
dec
add
sbb
nop
imul
sub
sub
add
sbb
add
push
push
dec
push
or
and
jmp
sub
ja
add
sub
rorb
lret
mov
xchg
sub
adc
mov
dec
scas
loop
xchg
inc
sub
mov
or
xchg
add
xor
sub
sub
mov
inc
add
shll
sti
push
jo
add
aam
jmp
mov
cwtl
xchg
out
inc
add
jge
adc
and
cmp
iret
xor
nop
mov
mov
mov
push
or
and
or
dec
scas
cmp
loopne
test
push
mov
out
mov
add
notb
add
jmp
dec
xor
add
cmpsb
push
xchg
mov
popf
icebp
sbb
inc
jmp
test
push
pusha
mov
push
and
adc
push
leave
popa
sub
and
xchg
les
sbb
mov
sarb
add
jmp
mov
push
dec
jno
jecxz
adc
add
and
fidivrs
and
pop
repz
jnp
or
mov
shlb
push
aas
mov
add
and
cwtl
lods
int
cmpsb
xor
or
jecxz
rcrb
dec
lea
stc
xor
out
cmp
cmp
push
inc
pop
xor
nop
shrl
jne
addr16
in
lods
sbbl
mov
pusha
loop
add
in
imul
mov
aas
xor
movsb
fs
hlt
sarl
rolb
lods
xchg
cwtl
lods
rolb
addl
add
xor
jo
add
and
scas
ffreep
ss
push
sub
pop
jbe
add
loope
jmp
lock
push
add
enter
cmc
or
add
adc
adc
and
add
inc
add
push
or
sti
cmpb
add
aas
je
addl
cwtl
movb
push
jne
cmp
adc
out
dec
add
pop
inc
hlt
sbb
xchg
xchg
insb
push
andb
and
add
mov
fiadds
add
fs
mov
insb
adc
ss
add
mov
mov
pop
push
sbb
mov
pop
loopne
adc
frstor
jmp
or
mov
lahf
jne
cmp
mov
and
jl
scas
or
pop
add
or
xor
subb
cli
xor
add
and
jns
sub
and
add
icebp
clc
es
add
mov
inc
cltd
add
add
sub
cs
fs
cmp
stos
outsb
xchg
pusha
push
jne
loop
cltd
daa
pop
insl
clc
jg
jbe
xor
idivb
test
movsb
add
pusha
sub
inc
nop
jb
mov
mov
pop
cmp
add
sbb
add
shrb
mov
xor
or
inc
ja
adc
mov
rolb
push
cmp
inc
xor
jmp
imul
clc
mov
sti
cmp
dec
xor
stos
cld
fcomip
cmp
dec
or
lods
lldt
xlat
dec
push
nop
cmp
add
xor
lret
adc
movzbl
add
fdivp
ret
dec
add
aaa
mov
add
adc
repnz
ret
add
rol
or
add
das
push
sub
lea
shlb
sti
lock
sub
or
xchg
ja
add
and
pusha
clc
rcrl
je
mov
test
mov
mov
jne
sbb
add
push
in
psubusb
add
xchg
nop
mov
pop
ljmp
mov
cmc
cmpsb
add
enter
pop
cmp
sbb
add
mov
sbb
je
or
lock
add
adc
cmpl
nop
ds
or
loope
shr
pop
mov
enter
mov
dec
sub
adc
andb
cwtl
ret
call
xor
push
or
push
pop
test
leave
mov
pop
pop
cmp
mov
lods
inc
pop
addb
andl
add
clc
cmp
cmp
and
xchg
decl
js
dec
sbb
aas
or
cmp
loop
add
and
fdivr
and
faddl
push
inc
mov
push
add
lcall
aas
shlb
aas
lea
pushf
push
clc
add
jne
xor
ret
cmpsb
pop
add
shrb
je
push
or
mov
lock
mov
dec
push
inc
jle
lea
pop
or
sub
fs
push
inc
jo
js
cmp
jl
pavgb
add
adc
les
and
enter
pop
lea
nop
add
and
mov
mov
xor
daa
and
fiaddl
cs
mov
mov
lock
out
ret
adc
stos
push
repnz
and
push
ucomiss
rol
mov
pop
sbb
lea
sbb
addr16
xchg
testb
jge
out
add
sub
push
jl
add
cmp
add
pop
inc
lock
xchg
and
in
or
inc
sub
adc
mov
push
push
push
cmp
addr16
inc
shrb
mov
inc
xchg
mov
enter
pop
push
sub
leave
pcmpgtw
dec
rol
les
cltd
jns
roll
sarl
push
xlat
mov
inc
adc
dec
add
decb
cld
std
and
es
and
cli
mov
in
rorb
repz
outsl
mov
add
adc
loop
add
imul
mov
push
sbb
push
int3
aas
cld
rcrl
daa
ret
adc
add
adc
mov
dec
add
or
xchg
pop
fs
lods
push
pop
movsl
jb
or
xor
in
pushf
mov
rcll
xchg
jge
add
iret
call
cmpsl
adc
xchg
daa
sub
das
dec
jmp
mov
add
push
push
mov
add
mov
nop
js
or
inc
dec
repz
sub
dec
add
insl
pop
cmpl
add
cmp
add
stos
lock
push
movsl
addr16
mov
add
aas
sub
mov
adc
mov
sub
mov
add
out
ds
xchg
pushf
push
add
ficoml
pop
mov
add
test
lret
adc
or
fsts
into
add
stos
ds
xchg
les
push
xor
iret
enter
push
pop
jmp
adc
aad
cwtl
fimuls
les
jecxz
dec
or
dec
dec
lock
loopne
add
cmp
call
in
mov
out
adc
popa
wrmsr
fadd
add
and
pop
adcl
or
mov
inc
add
aad
loop
nop
xchg
roll
loopne
clc
test
in
add
and
pmaxub
je
push
add
out
lahf
mulb
dec
stc
hlt
xor
sbb
dec
cmp
js
dec
sub
adc
push
add
adc
dec
cmp
stc
xor
add
sti
mov
aam
stc
add
jg
rcrl
in
xchg
jge
mov
push
call
dec
incl
and
rcl
into
cs
loop
hlt
mov
in
mov
add
sub
je
dec
push
mulb
cmp
sub
fistl
imul
movsb
add
mov
std
jo
xchg
add
fs
dec
sahf
jmp
sub
mov
dec
idiv
rol
add
out
jae
fwait
or
cwtl
iret
leave
dec
in
mov
push
and
jmp
cmp
dec
shl
add
mov
sbb
xchg
add
xchg
jne
pushf
add
jbe
jg
or
les
adc
adc
clc
sbb
out
aas
icebp
sbb
inc
fs
pop
ror
adc
adc
and
ret
pop
add
dec
ds
fcompl
cs
pop
add
lods
jmp
mov
rcrb
adc
cmpsl
jecxz
jmp
push
loopne
push
rclb
call
lea
xchg
or
mov
shr
sub
inc
xchg
push
adc
nop
add
pop
inc
fadds
sub
sbb
inc
jae
and
add
and
xor
add
js
adc
mov
pop
add
inc
rcll
xchg
js
add
cmp
sbb
rclb
push
pop
roll
mov
fsubs
jne
push
xor
cmp
mov
push
add
movb
add
adc
inc
imul
fisttps
or
mov
movsb
das
dec
mov
incb
shlb
mov
inc
js
fldl
pop
aad
or
bnd
insb
std
mov
sahf
push
addl
inc
shl
sbb
hlt
push
dec
popa
orl
add
in
incb
and
rolb
xchg
andb
add
psadbw
inc
add
or
outsb
adc
add
sub
and
push
add
pushf
inc
scas
pop
add
dec
add
push
sarl
jmp
add
push
add
add
adc
mov
dec
add
rcl
mov
xchg
sub
mov
sub
xchg
dec
ret
pop
and
pop
ljmp
jo
fs
xor
push
or
repnz
movsb
int3
clc
add
adc
add
sbb
lahf
and
add
adc
and
or
push
jae
sub
sbb
xchg
add
out
xor
loope
add
add
pop
add
jae
mov
int3
and
add
xor
stc
pop
or
or
cmpsb
push
push
dec
or
mov
xchg
xor
jmp
dec
addb
pop
je
mov
pop
in
sahf
adc
cmpl
mov
mov
jmp
sub
or
ds
jle
sbb
and
add
out
imul
mov
addr16
add
fbld
imul
iret
add
cmpsl
fisttpll
fldenv
jecxz
push
shlb
jp
les
js
cs
pop
jl
ljmp
jo
movsb
cwtl
shl
mov
pusha
rol
icebp
fcomps
push
icebp
xchg
shlb
jp
in
mov
repnz
push
ljmp
fcomps
xchg
in
call
push
push
dec
and
jo
jmp
or
ss
add
testl
inc
scas
movsl
xchg
push
mov
loop
inc
mov
cmp
str
ja
testb
dec
or
je
mov
je
dec
hlt
mov
mov
ret
push
rcr
popf
add
pop
or
xor
test
and
pop
push
jge
dec
cmp
lahf
add
mov
cmp
push
dec
inc
sbb
scas
pusha
dec
aas
fisubs
out
hlt
or
add
mov
add
mov
loope
add
mov
jl
xchg
in
lock
js
arpl
pop
add
or
jp
dec
push
jnp
cmp
jecxz
insb
sub
cmp
mov
outsl
mov
add
sbb
sbb
or
sub
cmp
orl
scas
ja
mov
xchg
or
lods
leave
sbb
jb
add
aas
test
add
sbb
add
or
xchg
popf
and
cmp
mov
jmp
je
sahf
popa
mov
inc
jecxz
call
sub
ja
inc
scas
pusha
stos
in
out
psubsb
mov
pusha
adc
adcl
add
movsl
rclb
and
nop
stc
add
or
fstpl
xchg
clc
je
mov
jnp
icebp
int3
or
and
xchg
addl
testb
leave
add
jecxz
xchg
insl
and
jmp
adc
adc
outsb
adcb
jno
add
and
push
and
inc
sbb
leave
push
comiss
adc
pushf
ret
adc
mov
and
mov
xchg
lret
clc
add
xchg
sub
cld
stc
push
ret
inc
cmp
cmc
pop
jo
fistps
dec
jnp
icebp
bound
sub
sbb
mov
sub
das
inc
cmp
into
repnz
add
pushf
mov
sub
cmp
xor
into
pusha
pop
adcb
cwtl
or
test
aad
pop
xchg
fst
jp
inc
adc
mov
call
sbb
cmpsb
and
dec
orb
jne
add
mov
dec
and
pop
pop
add
dec
lock
xor
mov
not
fadd
pop
cmp
repz
jns
push
sub
cli
mov
xchg
mov
add
inc
int3
cmp
test
fcoml
pusha
out
jbe
mov
shl
jno
in
xor
jmp
dec
es
inc
add
loop
dec
push
aaa
add
xor
add
call
cmp
or
pop
adc
pusha
jns
cmp
mov
push
and
add
cltd
push
dec
arpl
jg
mov
xor
aad
xor
int3
mov
sbb
es
push
mov
mov
cmp
lret
add
inc
cmp
push
clc
shr
mov
pop
icebp
imul
jne
jmp
inc
xchg
mov
inc
and
sbb
and
mov
dec
add
sbb
imul
pop
pop
mov
xchg
adc
out
nop
add
gs
lods
and
pusha
add
out
jp
jno
bound
jb
not
xchg
adc
cmp
vpmaddwd
aaa
and
test
push
lock
ret
aam
faddl
cs
jmp
movsl
add
mov
xchg
ja
lcall
lea
dec
sub
imul
pop
loopne
bound
sbb
sbb
inc
xlat
sub
jo
sub
mov
fadds
orl
ja
push
fsubrl
fadds
jmp
cli
imul
popf
push
popa
cmp
in
or
add
and
mov
outsl
pop
jnp
xchg
xchg
repz
stos
sti
mov
ret
clc
iret
push
bound
jecxz
and
aam
cltd
add
mov
and
repz
daa
rcrb
jmp
add
js
pop
xor
das
or
inc
cmp
xor
add
xor
or
and
add
push
cmpsb
add
cmp
popf
xor
dec
shrl
add
add
cmp
push
push
rolb
sub
add
add
add
push
sub
lock
repz
loopne
in
add
dec
orb
stc
dec
sub
xor
gs
fnstcw
add
push
leave
mov
pop
inc
jne
add
lret
inc
icebp
dec
lea
sub
mov
pushf
add
ret
jne
dec
testb
and
jbe
add
sahf
fs
decb
jne
add
add
mov
xchg
or
cwtl
add
cmp
pop
adc
into
xchg
neg
pop
cltd
inc
push
and
or
push
stos
mov
and
dec
insb
ret
add
dec
mov
imul
mov
jg
adc
dec
sub
add
mov
inc
add
pop
add
push
jae
push
push
lahf
xchg
and
rclb
pop
add
xor
mov
lret
xor
mov
mov
ret
xchg
push
lods
add
lret
rcll
cmp
gs
mulb
push
rcrl
movsl
cmp
and
jne
test
clc
imul
and
xor
push
jmp
xchg
xor
movb
loope
pop
cmp
cmp
insb
subb
inc
add
inc
sub
insb
add
dec
cmc
dec
add
popf
stc
pop
sbb
movsl
add
or
mov
hlt
lret
test
out
inc
or
add
fwait
xor
test
and
pushf
xor
cltd
sbb
hlt
add
popf
clc
and
lods
push
add
xor
jne
mov
push
inc
jno
pop
add
mov
insl
lcall
sbb
and
clc
and
add
mov
inc
cld
je
or
jg
add
xchg
roll
push
out
pop
push
push
dec
popf
es
and
jmp
jl
add
shr
and
pop
int
mov
shlb
or
cmp
push
loopne
sub
add
dec
arpl
test
testl
jge
or
hlt
mov
idiv
add
sub
out
sbb
popf
sbb
pop
push
push
dec
sub
inc
pop
movl
sbb
inc
sbb
inc
rolb
jmp
cmp
in
push
sub
loop
sbb
pop
in
loope
int3
pop
jmp
xchg
mov
mov
loopne
push
add
mov
inc
lock
add
and
mov
stos
xor
add
aam
push
std
xchg
add
arpl
shlb
push
jmp
movsb
andl
sbb
repz
add
adc
jge
inc
xchg
xor
xlat
add
sbb
xor
movsb
lahf
add
jmp
dec
add
and
pop
xchg
push
pop
unpcklps
mov
shlb
sbbl
inc
hlt
add
xor
fsubl
sbb
or
sti
in
pusha
hlt
mov
jmp
movsl
pop
cld
fwait
mov
leave
nop
test
jno
cwtl
xchg
add
ss
enter
jne
fwait
insl
or
add
ds
xchg
jmp
ss
outsl
push
stos
pop
mov
pusha
mov
inc
add
mov
lret
or
add
call
push
add
xchg
icebp
fiadds
lret
push
fisubl
and
mov
cwtl
inc
faddl
sbb
dec
mov
add
dec
xchg
in
call
add
adc
push
and
add
cmp
test
mov
outsb
adc
ljmp
push
ljmp
add
fsts
dec
cmp
les
mov
push
add
and
daa
lea
push
lock
popl
push
push
mov
decl
aad
cmp
subb
retw
and
xlat
cmp
repz
mov
xchg
lock
mov
les
lahf
fcomi
pop
xor
xchg
mov
andb
mov
shlb
jae
movl
por
inc
jne
dec
mov
add
insl
rcll
or
sbb
or
pop
push
add
sub
add
dec
cmp
inc
add
in
jle
and
add
inc
mull
rcr
pusha
ficoml
cmp
aam
in
add
mov
sub
fcompl
ja
nop
into
add
or
mov
movsl
icebp
pop
and
inc
aaa
push
inc
pop
cmpsb
sbb
fmul
scas
testl
ret
jge
loopne
add
cltd
xchg
mov
mov
pop
scas
adc
jo
or
jno
adc
jae
jmp
add
mov
lock
inc
add
ds
push
in
out
dec
fdivl
fwait
lret
mov
sub
add
add
fimuls
mov
test
cs
jp
mov
sbb
imul
jmp
or
pop
mov
rcl
outsl
shll
mov
pusha
inc
inc
add
push
lock
push
sbb
lcall
xorb
mov
pop
adc
jl
pop
lahf
call
xchg
inc
pop
shlb
jo
adc
pop
push
lods
adc
addb
push
add
orl
xorb
jae
stos
or
loopne
xor
add
insb
or
pop
call
push
mov
jl
jne
cmpsb
push
and
jbe
add
aas
xor
sub
lcall
pop
adc
or
pop
test
push
fwait
and
test
xor
mov
adc
add
adc
rorb
add
sbb
subl
pop
add
call
inc
jmp
jo
stos
mov
add
push
jnp
mov
jge
out
mov
cmp
mov
mov
ljmp
loopne
aas
pop
add
mov
cmc
shrb
bound
stos
push
dec
or
pop
jg
add
mov
and
je
push
pusha
mov
lret
enter
loop
cld
inc
pusha
shr
sarb
xor
movsl
iret
lock
testl
dec
or
cmp
loopne
cmpsl
incb
jb
add
pop
repnz
jp
not
test
jae
pop
lods
in
out
lret
les
cld
test
cltd
mov
scas
stc
bound
sub
add
mov
daa
loop
enter
in
push
rorl
add
lock
adc
mov
mull
mov
add
lahf
shlb
lods
xor
ja
dec
cs
loop
or
cwtl
mov
cmp
and
adc
jne
and
cmp
add
ds
lods
add
adc
add
adc
cmp
pop
push
pop
mov
add
jmp
cmp
lcall
cmp
push
xchg
mov
mov
jo
aad
xchg
cli
jnp
adc
rcrb
add
mov
nop
popf
jecxz
sub
aad
add
jbe
insb
add
adc
add
flds
int3
dec
roll
hlt
inc
add
xor
or
mov
add
scas
add
mov
sbb
repnz
inc
jge
adc
xchg
bound
sbb
pop
int3
cwtl
not
ss
int
dec
sub
test
aam
xchg
push
stos
repz
xor
int
xchg
add
inc
xchg
sti
mov
add
jo
adc
cmp
pop
pop
push
mov
stos
shl
int3
jne
jge
add
mov
mov
cmpsb
dec
mov
add
movsl
shl
xchg
mov
add
jmp
test
push
adc
add
pop
jo
lods
aaa
mov
je
add
ja
jae
push
pusha
mov
daa
or
jns
shrd
out
ljmp
bound
cmp
gs
inc
mov
adc
jo
orb
imul
or
int
jle
push
push
and
jno
xchg
jg
xor
lods
add
sub
test
orb
sub
xor
inc
add
cmpsl
ficoms
add
mov
or
xchg
push
add
mov
add
dec
fstl
or
imul
repnz
idivl
es
gs
fs
jge
mov
inc
cwtl
inc
adc
insb
push
adc
adc
mov
mov
cmp
and
jmp
xor
or
push
out
push
cmp
or
sub
mov
cwtl
and
test
jne
lock
clc
adc
out
and
push
and
lods
add
daa
or
push
add
cmp
xchg
arpl
or
xchg
data16
add
insb
inc
add
mov
add
and
mov
jmp
js
push
cmc
shrb
cmp
add
push
mov
ljmp
dec
and
jbe
jne
add
cmovnp
lock
xchg
psubw
lret
loopne
push
jo
and
fildl
dec
dec
inc
fs
mov
dec
jns
pusha
aaa
decl
inc
sub
pop
pop
add
andl
mov
add
shll
std
pusha
mov
add
xor
push
cmp
popf
sub
mov
add
mov
in
inc
adc
mov
popa
pop
shll
jae
or
xrelease
pop
test
add
mov
jbe
sbb
leave
adc
adc
xlat
add
cmp
add
testb
inc
sahf
repz
cmp
je
fcmovnbe
pop
mov
add
les
mov
mov
lods
pop
inc
rcll
mov
mov
clc
push
adc
xor
repz
test
addr16
xor
dec
and
mov
xchg
adc
lock
psubusb
nop
ret
add
je
scas
add
shlb
add
push
lock
jmp
jb
in
mov
add
or
push
pop
xlat
mov
movsb
stos
fcos
add
pusha
xor
test
into
cmp
mov
inc
sub
add
and
cltd
dec
adc
push
add
lea
cmp
sub
mov
les
sub
sub
inc
test
xor
cmpsl
dec
add
js
ret
adc
cmp
mov
xlat
out
lret
fdivr
pop
sarl
jle
jge
jg
mov
sub
imul
add
pop
add
sub
imul
add
sub
outsb
mov
je
insb
subb
fucomip
dec
and
xchg
or
and
sub
xchg
out
test
push
push
mov
cmpsb
rolb
or
lock
add
or
hlt
pop
xchg
out
push
fsubrs
sbb
mov
jecxz
xchg
add
xor
add
pop
mov
icebp
add
xchg
fnsave
mov
dec
and
shlb
test
mov
sub
add
dec
mov
pushf
adc
mov
adc
cli
mov
pop
push
out
lds
jmp
into
popa
dec
jmp
mov
icebp
dec
fldl
lcall
or
add
or
sub
sbb
mov
jecxz
ror
sub
sbb
and
inc
pop
xchg
and
aas
jg
mov
mov
rolb
jns
adc
psubsw
test
jp
mov
jnp
popf
das
jle
fistpll
addb
addb
jae
sbb
sbb
jne
xchg
testb
xor
dec
das
ja
push
xor
push
xchg
andl
add
popf
adc
add
pop
push
loopne
push
je
jnp
pusha
nop
mov
outsl
rolb
add
call
cmp
cmpsl
bound
rolb
aas
sub
ljmp
dec
mov
add
jecxz
sub
call
xor
orb
in
imul
sbb
cmp
pop
cld
leave
push
dec
pop
dec
sbbb
cmp
into
mov
clc
jp
gs
popa
sti
out
dec
mov
movsl
add
add
dec
mov
and
sub
adc
adc
mov
push
pop
sbb
sub
js
mov
call
ret
call
pop
xlat
loopne
loopne
mov
dec
add
jmp
lcall
test
adc
push
push
pop
inc
inc
out
ljmp
roll
inc
call
sub
add
mov
or
cmp
adc
inc
ja
mov
or
test
dec
movl
addb
add
mov
jmp
and
and
cmpb
adc
pop
push
cmc
lahf
push
addb
add
or
gs
or
leave
sbb
inc
cmpsb
adcb
cmp
imul
andl
pop
add
add
sbb
or
int3
bswap
or
push
cmp
imul
sub
ds
adc
push
mov
adc
ljmp
rorb
add
test
dec
std
in
int
add
dec
out
and
adc
cmp
or
add
cli
add
shl
push
test
push
add
push
xchg
test
jbe
or
jne
ja
push
adc
and
push
stos
mov
roll
fsubrs
mov
push
cmp
mov
sbb
cmp
cmp
loopne
pop
push
test
in
lds
and
leave
mov
mov
add
mov
xchg
push
push
fwait
add
dec
inc
or
das
mov
inc
cmc
add
repz
push
mov
sub
in
and
adc
das
repz
lea
jbe
lahf
jno
dec
inc
mov
add
movsb
les
mov
add
cmp
cmp
and
je
jo
daa
add
xor
decl
add
and
pusha
dec
fdecstp
sbb
clc
dec
or
inc
add
scas
jns
pop
adc
lock
arpl
cld
xor
cmp
mov
sti
xchg
mov
test
add
or
jne
add
xchg
push
incb
and
add
add
lea
or
dec
pushf
xchg
add
mov
mov
jmp
adc
or
adc
sub
mov
cmpsb
mov
cwtl
out
add
lret
xor
ret
mov
inc
bound
add
fistps
inc
mov
addb
fmulp
mov
add
test
scas
mov
test
pop
pop
in
adc
add
scas
xor
inc
mov
adc
mov
cmp
adc
ds
je
or
pop
dec
js
orl
sbb
add
ja
add
mov
mov
lock
add
ds
and
mov
cmp
dec
jb
mov
mov
nop
cmp
and
cltd
setb
testl
xchg
jo
sbb
call
add
add
add
inc
adc
pop
sbb
pop
mov
cmp
jmp
jne
or
jae
mov
and
fcoms
xor
or
xlat
add
orl
push
cmp
adc
pusha
add
dec
mov
add
lock
lods
int3
ret
pop
inc
add
fsubr
enter
shll
add
jbe
xor
xor
sbb
add
mulb
mov
cli
or
fadds
mov
sub
xor
outsl
mov
pushf
mov
out
andl
sti
mov
ja
add
adc
ljmp
sbb
mov
mov
ds
lods
dec
adc
add
fisubrs
or
pop
test
jne
aaa
lock
push
popf
cmc
add
add
lret
add
shll
aas
aas
mov
push
pop
sti
cmp
subl
jb
push
jg
add
jmp
xchg
lods
leave
loopne
fwait
mov
daa
pop
adc
mov
mov
and
add
fucomi
dec
jg
cwtl
out
adc
leave
mov
repz
cli
sbb
add
mov
mov
dec
mov
pop
cmpl
jg
add
jae
dec
test
stc
cmp
lock
inc
ds
dec
push
jno
pop
pusha
add
dec
pop
testl
push
icebp
jno
fcmovnu
out
cmpsl
loope
sbbb
jge
add
xchg
pop
lods
fs
loop
aas
pop
jecxz
push
sarb
mov
inc
inc
add
ds
leave
add
mov
mov
call
sub
or
jbe
cmpsl
clc
jmp
adc
jp
add
xlat
push
insl
xchg
and
pop
inc
addr16
data16
or
sbb
add
push
push
loopne
orl
mov
push
or
add
icebp
push
mov
cmpsb
sbb
imul
xor
insb
mov
add
xchg
imul
add
push
inc
dec
mov
js
adc
cmp
adc
lea
ljmp
push
scas
pop
or
jne
stos
in
fistpl
lahf
jl
add
cmc
lret
dec
lahf
lock
inc
push
pop
mulb
cmpsb
add
inc
sbb
jmp
leave
decb
orb
out
cmp
movsl
sbb
push
add
push
jnp
dec
jo
test
popl
sti
int3
xchg
movsb
inc
ret
pop
bound
pop
xchg
sbb
push
adc
stos
nop
mov
xchg
punpckhwd
aas
repz
xor
fistpl
xchg
adc
fcomps
xchg
in
decb
lahf
mov
or
fisubrs
adc
leave
xor
and
in
adc
mov
and
js
ret
dec
incl
rorb
mov
mov
cs
jo
and
les
and
jecxz
dec
stos
xor
pop
mov
test
push
push
add
loopne
or
add
xchg
pop
pop
out
cmp
lds
test
jae
inc
mov
sub
mov
out
mov
in
les
test
add
cmpb
push
pop
sub
adc
cmp
or
mov
adc
push
dec
jp
add
out
adc
gs
test
shlb
fstl
fistl
xchg
xor
loop
add
mov
mov
mov
jae
add
ficoms
adc
push
add
push
les
mov
add
mov
push
add
mov
push
and
xchg
sti
or
pop
fistps
add
pushf
push
out
repnz
lods
xchg
dec
cmp
fisttpll
push
add
popa
stc
add
test
in
add
cli
sub
hlt
divb
push
xchg
roll
jl
and
test
xor
push
adc
jg
cmovno
loopne
fsubp
mov
add
mov
ja
add
push
rcll
pusha
jns
add
cmc
incl
xor
fiadds
addl
push
xchg
sbb
pop
cmp
cli
lock
iret
pusha
add
cld
fmuls
insl
add
fwait
push
aas
lea
sbb
ss
add
mov
repz
push
lods
add
inc
add
push
add
fmull
jg
add
dec
test
incb
cmpsl
aam
sub
push
enter
movsb
fs
cli
lahf
pusha
xchg
cmp
add
adc
fistpl
mov
call
stos
loop
popa
ret
or
jo
add
pop
pop
pop
push
push
mov
nop
sub
cmp
jae
jg
add
add
cwtl
xchg
jl
push
inc
xchg
inc
and
iret
add
test
jl
aas
mov
dec
sub
pusha
or
mov
cs
push
sbbb
push
adc
and
cmpsb
inc
cmp
inc
and
push
jns
ljmp
or
add
movl
add
pop
idiv
pop
add
cmp
fidivs
idivl
xor
int
cmpb
jle
out
push
or
addr16
and
sbbb
inc
ret
and
lock
xchg
test
sbb
lock
add
add
jne
adc
jmp
leave
mov
push
shl
add
mov
xchg
add
cmp
mov
jmp
int
mulb
test
mov
and
mov
movsb
rolb
lahf
and
sbb
sbb
mov
les
and
lods
add
sub
add
cmp
es
xor
je
or
add
test
dec
and
rcr
and
push
mov
inc
jge
push
add
xchg
in
mov
mov
push
cmp
je
add
jle
xlat
add
mov
es
push
adc
dec
je
push
sbb
sub
sbb
jle
mov
test
stos
cld
xchg
cmp
je
and
adc
inc
mov
mov
pop
cwtl
or
sub
mov
mov
les
xorb
pusha
push
cmpl
adc
clc
test
jbe
lret
and
ds
leave
add
ljmp
cmp
cmpb
mov
cltd
pop
push
loop
xchg
and
or
adc
lods
add
sub
and
pop
fidivl
xor
lret
roll
aaa
push
and
adcb
dec
add
sbb
subb
mov
mov
lods
ret
or
add
dec
js
clc
dec
mov
ficomps
add
dec
jbe
test
add
jne
loop
mov
push
mov
add
mov
dec
inc
pop
jne
cmp
mov
popf
cs
shlb
mov
imul
aas
dec
pop
pop
or
jge
icebp
mov
or
negl
add
pop
xchg
jl
push
inc
add
add
pop
push
jnp
rcr
or
add
imul
dec
add
fdivl
add
push
out
fadds
cmp
add
adc
in
xchg
cld
imul
adc
or
jmp
mov
add
dec
mov
and
js
cmpl
lea
push
adc
daa
jl
cwtl
mov
xchg
pop
scas
cmpsb
add
xor
andl
call
cmpsb
push
loop
loop
add
adc
pop
push
mov
cmc
ljmp
lret
les
cmp
mov
cs
xor
mov
sub
and
mov
adc
push
jl
and
pop
roll
cmp
sbb
push
pusha
pop
xchg
mov
add
mov
mov
sarl
cmp
jbe
add
add
add
sub
into
ja
add
ret
insl
loopne
xor
add
lock
fistl
pop
addr16
scas
roll
mov
les
add
xchg
and
mov
push
call
add
je
adcb
cmp
add
aas
jmp
jb
dec
add
cmp
add
cltd
movb
ja
rol
mov
mov
mov
stos
cmp
and
nop
add
add
shl
push
rclb
inc
bound
xlat
imul
cmp
cmp
xchg
add
add
pop
or
cmp
add
xor
scas
sbb
fistps
rorb
in
fldl
dec
jmp
call
rcl
in
jge
add
addb
add
add
add
hlt
mov
enter
loopne
adc
adc
sbb
inc
add
sub
lds
dec
add
and
add
jno
into
add
ds
cmp
inc
add
enter
dec
push
in
cmp
out
adc
lock
repnz
cmp
cwtl
jnp
or
mov
popf
cmp
shlb
cltd
enter
sub
loopne
add
mov
cmp
add
aam
sub
clc
add
addr16
cmp
push
add
pop
pop
adc
add
xor
sub
cmp
mov
mov
int3
ret
push
jo
add
pop
xchg
inc
data16
pushf
add
dec
mov
loopne
adcb
sbb
push
adc
ret
xor
xchg
mov
mov
add
jg
test
les
cmpsb
sbb
add
add
or
mov
cmp
push
out
sbb
test
hlt
rcrb
jg
add
add
and
mov
rol
fcmovnu
add
js
xor
test
push
pop
push
jbe
lret
shrb
pop
pop
add
and
xchg
sbb
insl
xor
mov
movsl
sbb
add
out
scas
jbe
inc
add
nop
adc
les
jmpw
push
xchg
mov
fstps
pop
aaa
add
jne
fcompl
negl
out
insl
push
nop
fsubs
mov
int
cmp
adc
mov
decb
lock
rolb
sar
jmp
cmp
mov
inc
repz
jmp
sub
inc
mull
xor
add
pmuludq
sbb
nop
repnz
fwait
and
dec
sar
add
jg
ja
xor
cmp
js
lods
addb
dec
pusha
inc
inc
jmp
mov
add
mov
pop
jp
orb
cmc
jne
cli
loopne
roll
rcrb
fmuls
clc
sub
xor
mov
hlt
cmp
outsl
mov
jo
sub
push
or
rcl
pop
call
scas
rclb
add
cmpsb
push
pop
push
int
mov
xchg
sub
ljmp
cmp
scas
add
xchg
dec
inc
enter
inc
add
sub
fcmovnu
inc
stc
shlb
jnp,pn
inc
mov
sbbb
add
push
inc
sbb
shlb
add
inc
mov
loopne
pop
xor
loope
add
cmp
pop
add
icebp
loopne
out
addb
add
fiadds
add
in
pusha
sbb
jo
xchg
in
negb
dec
shlw
or
loopne
outsl
sbb
decb
xor
mov
mov
adc
dec
sbb
into
lahf
dec
xchg
or
pop
popf
andb
lock
sbb
jl
add
pop
cmp
fiaddl
adc
pop
sub
ss
daa
or
insl
movsl
dec
fwait
in
outsb
loopne
add
xchg
inc
cmp
pop
lret
xor
adc
pop
je
sub
in
add
arpl
scas
add
xor
push
cmc
fadds
dec
sbb
cmp
sarl
insl
dec
loopne
push
pusha
stos
scas
sahf
leave
daa
push
test
and
add
sbb
mov
add
das
fistpl
add
push
ja
pop
lods
and
add
mov
out
adc
das
xor
adc
lret
cmp
sbbb
inc
add
inc
std
mov
add
sub
lock
movb
mov
add
add
fsubl
add
sbb
inc
adc
pop
add
sbbb
cltd
cld
rolb
in
mov
fadds
sbb
daa
call
jnp
or
sarl
mov
pop
adcb
sub
cmp
shll
cmpb
cmpsb
add
xchg
add
shll
ret
es
gs
addb
dec
jo
add
popf
mov
push
nop
cmpsb
add
mov
add
push
cmp
inc
xchg
and
sbb
std
pop
or
mov
push
gs
je
dec
aad
jae
add
push
xchg
std
fisttpll
pop
cltd
popa
out
sbb
mov
mov
inc
add
sbb
mov
push
push
cwtl
and
pusha
dec
mov
adc
cli
mov
add
xor
xchg
sub
dec
push
add
xor
daa
add
push
sub
ret
or
xor
leave
hlt
adcb
pop
loop
cld
shll
or
add
pusha
sub
xor
ret
add
add
iret
jmp
cltd
sub
inc
mov
call
xlat
adc
daa
rolb
jnp
mov
adcb
add
adc
sbb
add
jne
fwait
add
cmp
lahf
add
roll
add
test
sub
cmp
dec
dec
add
arpl
cmpsl
sub
xchg
push
ds
adc
add
jbe
or
dec
lock
cld
insb
mov
cmp
jbe
push
xor
mov
pop
cmp
fwait
add
push
mov
jns
or
inc
loopne
and
adc
xor
add
jp
add
rorb
outsl
divl
lahf
ret
mov
jae
sti
pop
adc
pop
lods
dec
aam
shlb
add
shlb
loopne
add
and
cwtl
mov
or
imul
add
out
rcr
gs
into
cmpsb
mov
out
jge
mov
mov
xchg
mov
ds
sub
mov
add
or
dec
pop
outsl
pop
out
inc
push
std
lea
ror
add
addb
add
nop
jnp
add
dec
fmuls
ror
hlt
dec
jge
pop
sahf
adc
shlb
inc
dec
movsl
jp
cmp
fwait
test
jnp
stos
add
fmull
jae
and
mov
fisubl
push
mov
sbb
test
jecxz
push
adc
loopne
push
adc
out
dec
sub
pop
sub
inc
inc
adc
test
lods
jo
push
movsl
js
mov
and
or
pop
add
sbb
fnstcw
addb
stc
test
and
xor
inc
add
adc
or
das
ret
daa
fmuls
or
adc
or
push
pop
mov
lock
inc
je
pop
mov
test
incl
jge
ja
je
or
fs
cmp
inc
inc
xor
add
add
fwait
add
and
js
imul
sub
lds
mov
stc
jae
les
out
xchg
pusha
sub
and
xchg
xor
mov
add
movsb
pop
push
mov
mov
push
add
movsb
adc
mov
mov
clc
es
add
mov
sbb
sub
cmp
loop
aam
add
adc
enter
subl
xor
jbe
add
insb
add
pushf
sbb
lea
add
aam
lods
push
mov
mov
push
mov
je
mov
xchg
xor
outsl
and
sub
movsb
add
push
fs
js
add
mov
adc
stos
add
jnp
xchg
mov
sub
repnz
and
inc
and
adc
cmove
js
inc
xor
subb
bound
ljmp
add
add
clc
jo
mov
inc
popa
push
rcrb
jl
sub
add
or
leave
push
hlt
ljmp
inc
xchg
mov
sbb
inc
adc
mov
xor
sub
mov
es
jg
pop
xchg
pop
adc
cltd
add
mov
test
add
mov
cmp
cmp
movl
xchg
inc
xor
insb
add
jns
add
fldt
adc
mov
mov
or
pop
add
jp
dec
push
stos
int3
add
cli
clc
enter
sbb
rcll
cmp
stos
in
das
addl
mov
pusha
adc
sbb
ret
popf
add
cmp
xchg
pop
stos
mov
sti
or
add
pop
adc
fildll
mov
adc
adc
pop
and
jae
jo
sbb
outsl
addr16
popa
insl
mov
bound
outsb
mov
adc
mulb
jns
cmpsl
jne
out
lea
mov
jbe
cmc
das
pop
fiadds
in
dec
jnp
cs
sub
shrb
pop
ret
in
add
gs
int3
add
add
push
daa
jne
dec
dec
jp
dec
cmp
inc
jnp
inc
cli
jb
add
fucomi
cmpsl
push
outsb
xchg
inc
push
pop
pop
dec
dec
and
add
popf
dec
popa
adc
xchg
ja
add
cmc
outsb
mov
jo
mov
loop
cmpsl
push
jae
pop
lahf
aas
popa
hlt
mov
push
dec
push
add
jecxz
fbstp
std
push
cmp
out
daa
ja
mov
jo
dec
mov
pop
in
rorl
andb
shr
icebp
mov
js
sbb
add
add
push
jne
dec
or
les
pop
push
pop
inc
enter
adcb
lea
fldt
jne
mov
hlt
sbb
loopne
dec
adc
push
push
or
lock
or
push
add
xchg
test
sub
jo
or
dec
add
hlt
push
sbb
cwtl
sbb
lahf
ror
push
loop
pop
mov
add
fldl
and
movlps
lods
inc
shrl
push
or
xchg
inc
not
mov
mov
cmp
fldcw
xor
fistpll
mov
popa
jg
cmp
addl
or
mov
nop
pop
pop
pop
cld
hlt
jg
out
mov
pusha
sub
add
mov
movsb
outsl
loopne
add
adc
mov
xchg
sbbl
cmc
cmp
cwtl
pop
sub
lahf
pop
rorb
add
xor
inc
push
push
jmp
test
xor
xchg
clc
add
pop
adc
movsl
bound
adc
sar
sbb
stc
roll
enter
outsb
push
xor
pop
pop
ljmp
adc
push
jl
add
jne
in
dec
and
js
sahf
push
adc
rcrl
add
cmp
aaa
add
mov
ja
std
sbb
push
dec
test
jmp
faddl
imul
testb
cmpb
lods
cmp
pop
mov
pop
xchg
dec
sub
sub
push
call
push
fsubs
sbb
test
sub
add
filds
cmp
mov
or
cmp
or
or
add
inc
ret
and
rorb
loopne
int3
outsl
sub
add
dec
cmp
sbb
insl
into
stc
orl
int
jno
jns
jnp
movsb
sbb
jecxz
mov
lea
push
call
cmp
or
fnstenv
shlb
fcmovne
jnp
cmp
lods
adcb
rorb
ja
jns
insb
add
sub
cmpsl
mov
sbb
and
cli
shl
stos
pop
add
into
jp
xor
pop
adc
lret
test
daa
add
nop
mov
xor
clc
int3
cmpsl
ds
mov
mov
jo
add
fs
mov
lea
xor
add
and
enter
add
and
dec
add
inc
jno
sbb
int3
stos
add
sub
lock
sub
add
xor
popf
add
lds
iret
loopne
cmc
sbb
mov
mov
mov
push
push
cwtl
into
test
pop
push
scas
out
popa
add
fnstsw
cmp
inc
add
insb
adc
jp
jge
loopne
add
dec
inc
jmp
std
inc
lcall
xor
mov
addr16
add
add
jne
add
or
adc
cmp
push
dec
int
rcrl
sbb
or
add
mov
ljmp
outsl
pusha
cltd
out
pop
insl
shr
inc
shlb
popl
int
addl
push
leave
cmpxchg
notb
rcl
test
adc
insl
mov
cmp
sbb
sbb
sbb
jno
add
cmp
mov
and
in
jge
xor
lcall
mov
orps
sub
inc
cltd
inc
lock
repz
add
jmp
pop
add
movsl
pop
rolb
fwait
js
pop
push
loopne
shr
sub
dec
push
sub
dec
adc
mov
pusha
xchg
mov
out
loopne
fsubrs
ss
push
cmp
jbe
mov
pushf
sub
ffreep
xor
add
sbb
pop
nop
in
add
sub
inc
adc
pushf
mov
mov
pop
push
cwtl
add
xor
cld
testb
mov
call
into
jno
mov
cmp
and
xchg
out
or
movsl
cwtl
mov
lret
pop
inc
fcompl
adc
pop
inc
stos
or
or
add
xor
loopne
hlt
jo
push
cmp
sub
jl
cltd
inc
push
pusha
jmp
enter
test
lods
mov
das
mov
add
xchg
push
xor
inc
rcrb
data16
pop
push
or
inc
pop
mov
gs
cmp
add
inc
cwtl
or
adc
daa
mov
push
roll
bound
xchg
adc
jmp
stc
add
test
pop
test
sahf
shlb
sar
cwtl
mov
fdivs
inc
popf
enter
in
and
add
sbb
xor
pop
repz
add
fimuls
enter
add
jge
movlps
mov
push
out
jg
add
push
enter
mov
aam
pop
scas
xor
xchg
rclb
mov
lods
aad
push
int3
sub
add
xchg
push
jle
stos
rclb
enter
lret
add
inc
lock
imul
test
lea
cmp
stos
fdivl
push
loop
cmp
adc
pop
sbb
adc
dec
mov
xor
cmp
push
mov
add
rdtsc
clc
sbb
rcrb
rol
ljmp
stc
add
or
add
movsl
push
mov
pop
jl
cmp
push
mov
pop
jns
js
cltd
loopne
rcrb
add
push
out
fldcw
outsl
jmp
inc
lock
or
push
fimull
iret
pusha
in
loope
ret
add
and
test
jg
mov
out
push
xchg
dec
lods
sub
les
xor
inc
or
aad
lock
jo
mov
je
loop
outsb
cmp
ja
pop
mov
add
add
and
add
lock
adc
movsb
jmp
inc
sub
sahf
ret
cmp
fs
es
push
cmp
push
mov
roll
and
add
add
mov
mov
pop
sbb
fildl
shrl
push
aam
fisttpll
or
or
push
ret
adc
inc
push
add
lcall
pop
add
inc
cmp
pop
jne
scas
int3
pop
incl
push
loopne
loope
pop
sahf
mov
dec
jge
pusha
mov
jo
xor
mov
add
fdivrs
sbb
inc
lcall
arpl
jmp
or
jno
imul
fstps
add
or
adc
cmp
cltd
outsb
xor
pop
mov
dec
fsubr
add
cmp
sarb
jge
mov
icebp
xor
add
add
dec
inc
js
add
clc
mov
push
and
enter
inc
sbb
mov
mov
add
fldenv
and
gs
lahf
sub
repnz
mov
ljmp
cmp
xor
shl
add
shlb
xlat
pusha
push
push
mov
ljmp
gs
movsl
enter
and
jno
sub
orb
shlb
pop
add
cmp
or
adc
hlt
jp
push
mov
adc
add
lcall
inc
jge
xchg
pop
repz
or
fsubrl
incl
and
ret
test
mov
cmp
ret
push
push
add
xor
add
je
test
pop
sbb
scas
or
pop
sarb
pop
ds
and
ljmp
push
stos
jge
cs
sub
add
mov
push
and
add
mov
or
ds
sbb
ljmp
mov
and
add
inc
adc
push
and
fnstsw
sahf
inc
sti
add
jbe
fiaddl
js
mov
dec
mov
push
push
fstpl
in
lret
rorl
pop
lock
or
testb
cld
fcoml
add
std
xlat
xrelease
jo
add
pop
mov
jne
jns
icebp
add
aaa
add
cmp
add
cltd
or
popf
es
dec
fisubrs
fs
sbbb
add
push
jp
xor
mov
out
pusha
rcll
inc
or
pop
mov
sbb
loopne
addl
subb
sbb
xchg
add
call
cmp
mov
jb
add
xchg
and
lahf
shlb
or
add
or
andb
xor
leave
add
push
xchg
xor
loope
push
jo
add
in
movl
scas
ds
add
cmpb
mov
enter
jb
add
dec
fwait
insb
hlt
subb
daa
rcl
cli
nop
sarl
sbb
out
test
xchg
add
aad
inc
andb
or
add
pop
add
push
cmp
jp
pop
and
rolb
ret
fmull
fsin
mov
ret
lds
add
in
xor
sub
lcall
mov
jo
add
in
arpl
cmp
dec
pop
test
out
repz
add
pop
je
add
xor
add
push
adc
dec
add
aad
sbb
cmpb
int
xchg
sbb
mov
outsl
shl
mov
movsl
lret
int3
enter
xor
shl
rclb
and
adc
cmp
ja
add
aaa
inc
repnz
sbb
cld
loopne
ret
add
or
sbb
stc
add
dec
cmpsb
add
aas
lock
out
xor
je
daa
aam
shr
add
adcb
dec
std
popa
add
or
pop
push
aaa
add
mov
pop
add
push
movl
add
mov
mov
pop
loop
sbb
jecxz
xchg
or
nop
jnp
and
jl
xor
dec
add
push
je
loope
add
mov
mov
ja
add
cmp
fxch
sbb
imul
loop,pt
add
pop
ja
add
ret
gs
clc
dec
xchg
loopne
add
and
addr16
rclb
inc
pop
pop
addl
into
pop
push
lret
add
sbb
sbb
lahf
fs
cmp
shrb
add
mov
add
aaa
stc
fnstenv
ja
out
stos
add
mov
lret
jno
fldl
ficompl
push
cmp
pop
in
pusha
loop
inc
push
sbb
xor
add
shll
mov
cmp
popl
scas
mov
sbb
add
gs
sti
cmp
addb
mov
roll
pop
fbld
imul
and
add
lods
mov
lods
mov
push
jbe
add
xchg
mov
roll
or
outsl
sbb
cmp
add
sub
add
add
cmp
cmp
out
cs
add
test
or
jg
add
jmp
pop
into
insb
add
mov
jo
add
mov
inc
add
std
pushf
mov
add
pop
or
xchg
jno
lahf
cwtl
rolb
fidivrl
mov
cmp
mov
adc
and
add
bound
orb
xchg
add
lret
mov
outsb
lock
cwtl
jo
jg
push
addr16
or
inc
cwtl
out
cmpsl
das
add
gs
pop
push
nop
shr
add
enter
sbb
jp
stc
jnp
xor
sbb
mov
and
ffreep
jb
loopne
add
outsl
and
rorb
mov
or
pop
pop
cmp
jo
mov
mov
aam
jae
and
stc
add
pop
or
sub
cld
xchg
lcall
adc
dec
add
jle
add
xchg
loopne
sbb
adc
dec
repnz
mov
addl
fcomi
push
rolb
add
pop
dec
cmp
addr16
add
int3
in
jo
add
sbb
in
push
arpl
dec
add
mov
shl
dec
push
add
add
dec
pop
jns
push
rolb
xchg
add
pop
cmc
dec
in
jo
add
cmp
add
jge
push
cmpl
aam
jecxz
sbb
jo
adcb
clc
out
push
inc
jae
cmp
inc
cmp
pop
shlb
aad
fistpl
mov
add
push
fmull
cmc
add
enter
inc
rclb
add
cmpsl
xor
cmpb
add
sub
mov
int3
mov
push
xor
adc
jnp
pop
call
add
add
aad
mov
inc
popa
inc
jge
dec
inc
sub
imulb
into
add
scas
loope
xor
add
loopne
pop
shr
sarb
call
roll
xchg
sub
sahf
insb
add
movsb
or
push
in
addr16
add
mov
pop
popf
cmp
adc
xchg
addb
mov
xor
rolb
bound
sub
push
inc
clc
out
add
pop
mov
sbb
pop
pop
inc
and
add
mov
and
xor
sbb
nop
add
jg
out
jle
pop
add
adc
pop
cmp
gs
sbb
mov
xchg
pushf
dec
rcrb
cmp
hlt
sahf
push
inc
dec
add
and
dec
nop
push
add
lea
xchg
scas
js
int3
cwtl
and
add
lret
out
add
mov
hlt
cs
mov
rcrl
rolb
bound
cmpb
nop
imul
push
cmp
insl
sub
push
cld
xchg
jbe
add
inc
xor
push
add
jno
mov
arpl
xor
mov
adc
cld
pop
push
or
inc
mov
xor
add
mov
fcmovu
pop
xchg
adc
xchg
cmp
jle
shll
pop
rcrb
jne
gs
add
subl
or
addr16
orb
add
push
mov
xor
dec
dec
xorb
or
pop
add
outsb
cmpl
push
pop
test
mov
inc
adc
xor
ret
jle
mull
push
out
add
jg
stc
xor
ja
push
or
lock
sahf
pop
sub
xchg
sbb
and
outsb
fildl
sub
fwait
sbb
sub
loop
les
adcl
loopne
sbb
ret
imul
enter
sbb
adc
mov
add
shr
test
add
jmp
insl
cld
hlt
mov
jge
add
add
mov
xchg
call
lret
and
mov
js
add
andl
in
add
or
mov
imul
jbe
add
and
xor
hlt
test
faddl
mov
or
xor
mov
xchg
mov
add
rolb
data16
test
add
arpl
iret
push
jmp
roll
mov
scas
adc
pop
add
loope
add
add
gs
dec
loop
rolb
pop
push
add
loope
jbe
loopne
or
test
dec
or
fistpll
or
sub
jmp
dec
sarb
fcmovnb
addl
fs
je
shrl
leave
imul
mov
add
pop
bound
xor
mov
add
cmp
iret
xchg
and
dec
xor
dec
add
fs
sbb
push
outsb
mov
data16
lret
mov
shrb
add
xchg
add
pop
call
mov
xchg
inc
pop
sqrtps
pop
xor
xor
orl
pusha
bound
cmpsl
and
sub
cmp
or
and
jo
pop
jnp
push
or
adc
sbb
jge
or
add
mov
add
xchg
add
add
xchg
adc
sbb
pop
or
or
and
or
or
clc
adc
add
adc
push
mov
mov
add
clc
out
pop
inc
cmp
mov
lods
add
push
inc
or
jmp
push
jne
scas
aas
and
movl
jmp
adc
sarl
ror
in
loop
daa
adc
add
add
call
es
add
in
fisubl
mov
ds
pop
mov
jp
push
data16
pop
fistl
and
or
mov
out
adc
add
push
push
cwtl
adc
pop
cmovle
stos
xor
rorb
sub
das
mov
out
mov
jge
mov
or
mov
and
orb
inc
inc
cmp
mov
or
jmp
pop
popa
push
je
sub
test
xor
decl
sbb
mov
lea
push
or
adc
xchg
xor
shll
add
clc
sbb
mov
mov
xor
ffree
pop
cmp
add
cmp
inc
lret
inc
add
add
jl
mov
xchg
leave
adc
jb
add
out
mov
into
and
dec
sti
hlt
fcoms
mov
daa
lock
sarb
data16
jmp
lods
aad
incb
and
stos
mov
dec
orl
add
lret
pop
movsb
fwait
in
add
jge
lahf
add
fiaddl
std
xor
pop
popa
add
cwtl
movsb
pop
dec
inc
orb
cmp
mov
adc
mov
and
mov
pop
into
mov
mov
or
nop
cmp
aaa
loop
mov
cmp
movsb
cmp
inc
loope
jb
lods
hlt
mov
add
jg
inc
jae
pop
push
and
js
add
mov
inc
scas
add
pop
add
fmul
jb
add
mov
ret
xor
out
scas
pop
js
xor
rorb
daa
mov
sub
and
insl
sbb
add
and
je
add
jbe
enter
sbb
fisttpll
jmp
add
in
sub
or
rclb
xor
add
mov
and
sysenter
adc
loopne
cmp
cmp
pmaddwd
cli
mov
mov
ret
out
shr
loope
cwtl
inc
add
rorl
jmp
orl
xor
xor
sbb
pop
push
mov
mov
inc
add
jecxz
pushf
stos
orb
jb
xchg
mov
lea
arpl
rorl
inc
add
pop
dec
push
mov
pop
push
xor
adc
push
mov
add
cmc
add
pop
jmp
or
add
mov
addl
ljmp
lcall
aam
push
push
inc
inc
sbb
adc
or
pop
add
or
movsb
shl
inc
cli
add
stos
call
pop
sbb
incb
or
lea
push
add
int
rclb
call
sub
push
stos
xor
pop
add
fs
rcll
add
in
lea
repz
push
sbbb
pop
out
dec
or
aaa
or
insb
add
xchg
in
inc
sbb
jp
mov
mov
loopne
jg
push
fmull
xor
xor
insl
inc
jmp
jne
add
cwtl
pop
add
add
jle
dec
adcl
and
xlat
pusha
dec
sub
pminsw
ss
xchg
push
add
pop
scas
push
add
ja
jno
movb
and
inc
dec
xchg
cmpsl
in
rolb
out
add
jp
dec
adc
je
adc
test
ja
mov
push
mov
pop
sbb
and
rol
push
push
movb
cmpb
idivl
add
lock
sbb
dec
punpcklbw
inc
gs
cmp
addb
adc
dec
sarb
xchg
inc
adc
call
pop
clc
out
ljmp
in
jne
jno
je
int3
xchg
mov
testb
shlb
sldt
repz
and
adc
mov
cmpsl
cmp
and
add
cmp
xor
add
icebp
orb
hlt
adc
add
and
std
pop
in
es
mov
push
add
dec
mov
pop
xor
sbbb
add
adc
jae
or
test
or
hlt
out
fsubl
xor
jle
sub
ror
mov
cmp
imul
insl
sub
jl
add
lcall
add
push
ja
adc
pop
xchg
push
les
insb
nop
pusha
ret
jbe
add
add
jno
inc
inc
add
outsl
std
and
mov
add
add
loop
and
sub
and
daa
push
inc
xor
icebp
pop
push
jne
sbb
cmp
push
cmp
xchg
sti
cwtl
add
les
int
and
xor
mov
clc
jmp
addl
mov
insb
and
outsl
push
add
or
xlat
add
mov
test
rol
sti
add
jb
mov
add
in
mov
sbb
add
es
ljmp
les
add
inc
lds
cmp
xchg
out
add
shrb
roll
pop
add
lahf
dec
loop
shll
pop
jnp
xchg
add
add
jecxz
sbb
cmp
jb
jo
inc
sub
pop
fwait
andl
cwtl
push
add
aad
fs
push
xor
invd
xchg
adc
mov
jae
or
adc
adc
sbb
pop
lods
add
dec
cmp
xor
adc
sahf
cmp
jbe
adc
mov
and
enter
add
call
inc
cmovne
add
or
sub
add
cli
aad
mov
jp
fistps
dec
test
xchg
mov
push
add
inc
out
stc
enter
je
add
pop
pushl
hlt
scas
mov
jp
push
or
lds
ja
add
cwtl
fs
lea
cmp
jmp
sbbb
hlt
add
rclb
test
push
jbe
inc
add
jb
add
orl
loopne
loope
pop
dec
xchg
leave
call
ja
pop
jbe
add
mov
out
js
sbb
jmp
xchg
imulb
cwtl
ret
jnp
add
mov
and
je
dec
call
repnz
dec
or
and
pop
lea
pop
pop
push
lret
mov
dec
sbb
adc
loop
imul
cld
loopne
inc
pop
mov
lahf
sbbb
mov
cmp
dec
cmpsl
je
scas
add
popf
and
add
incb
cld
add
in
cmp
add
dec
cmp
int3
je
pusha
pop
movl
add
mov
push
in
add
test
xchg
add
cmp
stos
push
aaa
add
test
mov
dec
jge
add
jp
cwtl
int
in
add
push
dec
cmp
cwtl
ret
add
adc
hlt
or
lret
push
pop
pop
pusha
cmpsb
lea
test
nop
inc
jp
mov
pop
sub
or
cmpb
mov
cmpsl
jmp
sub
test
add
adc
aaa
mov
nop
lock
push
dec
add
dec
sbb
add
xchg
inc
add
xor
add
sbb
adc
xchg
and
inc
shll
jecxz
clc
daa
add
add
pop
sbb
adc
lods
lret
lods
push
push
mov
pop
xchg
xor
or
call
fldenv
incl
arpl
cmc
scas
xor
dec
push
ja
pop
mov
push
xchg
into
sub
aam
adc
jb
mov
dec
and
jo
add
jne
mov
add
push
mov
jbe
add
pusha
aam
jl
push
loopne
inc
mov
scas
fsubrl
add
outsl
ja
xlat
les
popa
add
add
dec
push
push
add
fs
jne
iret
and
loopne
dec
sbb
dec
add
cmp
dec
push
lock
add
adc
je
add
xor
add
pop
push
loope
nop
jecxz
inc
add
out
pop
add
and
add
shlb
ljmp
add
jecxz
loope
enter
addr16
cs
xlat
add
mov
stos
sub
es
pop
dec
int
cmp
add
stos
mov
add
jge
add
jnp
add
popf
push
rolb
notb
add
cmpsl
leave
push
inc
pop
dec
aad
pop
and
addl
psrlq
push
in
xchg
add
cmpsl
mov
adc
ja
je
lahf
pop
push
lock
cmpsb
inc
out
icebp
add
pop
jne
stos
and
adc
add
cld
add
jnp
add
or
lods
add
cmp
sub
incl
outsl
cmp
ja
daa
jg
out
mov
mov
sbb
mov
add
push
sbb
and
pop
cmp
popa
pop
jl
into
mov
cld
inc
cmc
pusha
fwait
add
aam
cwtl
adc
add
or
push
add
scas
roll
dec
je
xor
je
jg
je
cmp
mov
gs
push
or
adc
je
sbb
dec
daa
mov
pop
test
lahf
fistpll
sbb
addb
add
push
cmpl
int3
pop
mov
xor
jp
clc
cmp
mov
inc
fld
pop
roll
enter
push
test
add
push
daa
addb
jmp
adc
test
cmpsb
sbb
or
rolb
and
js
enter
or
or
mov
pop
mov
xor
adc
sub
and
sbbl
pop
inc
sub
add
push
notl
inc
jns
inc
sbb
add
mov
sbb
add
stos
adc
add
mov
mov
and
je
add
sub
push
jl
sub
lock
sbb
push
test
push
scas
loope
and
mov
add
jbe
adc
inc
xor
inc
je
mov
cli
cmp
jne
sub
add
push
jge
orb
or
orb
and
add
add
je
xor
cmp
aaa
dec
pop
xor
sub
sbb
sbb
mov
and
adc
xchg
xchg
addb
fsubrp
cld
add
dec
inc
icebp
mov
mov
xor
js
cwtl
dec
push
cmc
les
add
mov
sub
mov
xchg
sub
mov
cmp
pushf
mov
cmp
pop
mov
or
xchg
les
add
and
lahf
pop
data16
pop
inc
lock
fisubrs
mov
subl
js
xor
lods
add
push
cmpb
movsl
push
adc
or
push
shlb
push
in
hlt
dec
push
inc
dec
dec
andb
es
add
enter
add
and
ja
add
adc
xchg
scas
aaa
push
inc
cmp
cwtl
mov
or
xchg
add
ja
cmpsl
xchg
fidivl
cmp
or
jnp
aaa
mov
adc
xlat
mov
add
test
xor
inc
add
repnz
xchg
push
pop
jnp
inc
je
add
sub
push
adc
sbb
pop
popf
pusha
xorl
les
push
or
mov
dec
add
adc
dec
sbb
sbbb
addl
pop
mov
add
ja
cmpb
out
add
fwait
mov
add
xchg
loope
insb
mov
in
and
sbb
and
cmp
push
lea
fwait
cltd
xchg
mov
push
outsl
add
test
pcmpeqb
push
dec
incb
jno
inc
fs
popa
outsb
dec
add
aad
sbb
stc
test
outsl
insl
loopne
inc
imul
sbb
sub
lds
adc
inc
into
in
cmpsb
mov
xor
add
mov
mov
or
inc
pop
xor
jl
push
mov
cmp
inc
add
mov
mov
and
push
sub
pop
xchg
lea
jb
fstl
inc
pop
aam
xor
fdivrs
ret
idiv
enter
inc
cmpl
enter
push
add
sbb
mov
sub
pop
das
adc
or
pop
push
mov
or
sub
jnp
stc
mov
sbb
pop
add
xor
movb
sbb
xorb
cmp
aam
push
push
rorl
mov
insb
dec
lods
addl
mov
mov
fsubs
and
cmpb
adc
out
adc
add
rcll
jne
lea
call
fldenv
dec
add
add
mov
add
jns
push
cmp
imul
mov
xor
sub
dec
mov
lock
push
mov
fiadds
sub
ljmp
and
mov
push
cmp
jge
mov
sbb
jmp
call
scas
add
cmp
jne
adc
add
mov
adcb
test
daa
pop
add
rclb
xchg
push
les
mov
inc
add
add
xor
or
aam
adcb
ljmp
loopne
push
mov
pusha
mov
add
sbb
or
fucompp
add
js
xchg
add
fstpl
mov
dec
jae
outsl
and
out
inc
negb
mov
test
adc
pop
sbb
add
adcb
push
cmovs
mov
or
test
lcall
pop
aam
mov
push
cld
pop
add
roll
nop
js
xor
jb
pop
cmp
idivl
enter
test
adc
and
pop
dec
fs
inc
cmp
add
fbld
jg
jnp
inc
push
push
xorl
sub
add
fs
enter
pop
add
dec
pop
repnz
mov
loope
test
icebp
push
cltd
push
loopne
cwtl
inc
push
pushf
lidtl
cmpl
or
pop
mov
rol
add
adc
fwait
dec
in
inc
pop
sub
pop
jne
cmp
repz
lock
adc
sahf
addr16
add
aas
lea
pop
sub
add
cmc
bound
pop
xchg
sub
and
out
rcl
fdivr
add
mov
or
mov
mov
xchg
inc
mov
faddl
sbb
add
lock
psubd
iret
int
and
inc
pop
aad
dec
out
rorb
or
mov
fildl
xor
sub
imul
inc
dec
sbb
test
or
rolb
xor
pop
outsl
sbbb
mov
jne
mov
xchg
mov
test
mov
add
js
xor
add
ja
push
xor
aad
popa
add
outsb
add
sub
pop
add
sub
lea
cwtl
add
push
pop
addb
or
xchg
add
push
inc
pop
mov
add
dec
push
pop
jp
add
and
inc
add
je
xor
adc
add
loopne
or
sbb
dec
jne
call
add
repnz
add
sbb
sub
inc
orb
cs
jmp
dec
mov
out
cvtps2pi
mov
repz
or
test
in
or
add
sbb
mov
fcoms
lea
ss
add
popf
pop
ret
sbb
add
movsb
adc
das
and
cmp
mov
add
or
push
mov
in
nop
inc
jl
or
test
pop
popf
adc
or
and
cli
add
bound
push
lods
or
push
inc
adc
sti
orb
insl
ds
inc
xchg
sub
aas
pushl
sub
out
and
jmp
sub
pusha
inc
pop
std
dec
in
mov
add
addr16
or
leave
jne
push
sub
pop
jl
pusha
dec
jmp
movsb
pop
inc
push
dec
and
jp
add
lock
subb
jno
dec
push
adc
push
xchg
or
loopne
mov
add
gs
pop
cmp
icebp
sbb
mov
sub
shlb
mov
pop
adc
daa
incb
cvttps2pi
jg
xorl
cmp
and
xor
pop
adc
cmp
jno
aam
xchg
xchg
cmp
loop
pop
shll
enter
or
dec
sub
pop
adc
or
add
xchg
mov
ret
add
ss
sub
pop
sub
pop
arpl
add
dec
xor
inc
pop
cltd
mov
sub
bnd
add
push
jb
andb
popa
arpl
imul
inc
outsb
push
movsb
xchg
sbb
xor
pop
sbb
imul
in
push
sbb
shr
dec
lock
add
mov
nop
add
sarb
jo
pop
jmp
xor
dec
outsb
mov
loopne
mov
adc
dec
outsl
add
sub
push
xor
pop
sbb
addb
mov
lods
push
add
sub
mov
adcb
sbb
pop
inc
shl
push
addr16
test
fsubr
pmaxub
ret
add
jge
les
or
or
xor
inc
incl
rep
in
imul
ljmp
cli
pop
mov
dec
add
clc
sbb
add
ja
cs
xor
jg
pop
mov
xchg
pop
cmpb
add
jns
adc
sub
or
inc
call
push
xor
out
xchg
sbb
mov
ds
add
dec
pop
aas
aam
add
xchg
add
jnp
pop
xchg
mov
das
mov
les
add
add
add
pop
adc
adc
cmc
ljmp
lret
jmp
sbb
out
popa
adc
mov
or
and
add
cli
test
xchg
mov
jecxz
mov
dec
pop
xchg
add
xor
inc
inc
cltd
enter
add
clc
cli
addb
sub
pop
adc
jmp
jne
adc
mov
call
mov
xchg
and
xor
cmp
and
add
jns
or
add
inc
dec
inc
inc
pop
mov
mov
add
cmp
in
sbb
push
sub
aam
mov
cmpsl
mov
repnz
in
das
xchg
icebp
je
popa
jl
lcall
and
xor
ret
add
pop
imul
jne
pusha
and
jmp
push
inc
push
std
bound
sbb
adc
xor
cltd
push
aas
icebp
jnp
add
push
jb
pop
outsb
jae
add
insb
sbb
jne
add
mull
xor
shrb
adc
push
stos
adc
or
rdmsr
pop
sbb
test
les
add
dec
test
jo
inc
outsl
and
adc
add
in
es
jo
push
sub
addb
inc
test
mov
bnd
push
push
out
fs
push
jbe
dec
add
shll
dec
sub
push
jp
add
inc
sbb
add
xchg
mov
xchg
push
nop
loopne
mov
jns
mov
jb
loop
fists
in
fcompl
adcb
add
jmp
aas
dec
inc
nop
add
mov
inc
and
sbb
add
inc
nop
sub
jne
cmp
js
nop
pop
repnz
loopne
popa
ja
add
movsb
and
add
adc
cmc
xorl
pop
ret
mov
mov
jmp
cmp
push
mov
adc
call
aas
inc
ret
sub
hlt
and
add
and
inc
jecxz
mov
jo
out
add
and
mov
sub
mov
mov
jmp
in
jbe
add
push
jg
pusha
inc
adc
mov
inc
sbb
inc
push
pop
mov
test
cmpb
push
shll
xchg
add
fstl
mov
mov
add
xor
loopnew
insl
add
xchg
jle
push
fistl
fiaddl
movsl
fadds
xor
rcl
add
jns
loope
push
hlt
aam
test
cmpsl
dec
pop
and
int3
add
pop
push
cmpsb
test
push
add
enter
mov
mov
mov
jns
sbb
ret
add
add
lock
jo
push
dec
mov
dec
jae
add
adc
mov
pop
out
mov
xchg
test
sbb
lods
jl
pusha
ljmp
lds
xorb
and
stos
in
pop
pop
push
pop
pop
pop
adc
pop
mov
add
push
mov
call
dec
ret
and
add
adc
jp
add
jmp
dec
test
pop
xchg
xor
push
test
pop
lcall
sbb
inc
or
add
push
sub
and
roll
insb
dec
adc
icebp
sbb
cwtl
adc
in
pushf
mov
add
dec
je
add
arpl
lea
jge
dec
cmp
mov
sub
add
and
jns
hlt
iret
add
mov
pop
mov
cmp
add
lret
sbb
push
mov
rcll
icebp
xor
js
mov
cwtl
dec
push
add
add
jg
add
rolb
adc
push
and
xor
and
jle
pop
pop
mov
shr
mov
lock
andl
xor
stos
add
stc
rcll
add
arpl
add
push
cmp
xchg
and
roll
popa
aas
add
pop
mov
stos
adc
or
out
mov
outsl
movsl
stc
je
add
sbb
ss
inc
and
pop
pop
push
int
mov
push
add
xchg
insl
adc
stc
pop
fs
inc
push
xchg
orb
mov
sub
add
sub
cmp
add
or
sbb
adc
pop
add
dec
sbb
mov
mov
imul
inc
mov
cs
test
and
add
jne
add
jge
pop
dec
mov
dec
jb
inc
push
inc
inc
add
cmp
cmp
and
cmp
sub
test
sbb
push
lds
add
sub
in
add
sbb
push
add
mov
pushw
aam
inc
mov
sar
add
and
out
test
push
mov
cmp
add
aas
lcall
pop
stos
insb
jle
mov
pop
mov
repnz
cmpsl
push
sahf
std
xor
movsb
shll
ficoml
ret
add
add
data16
lods
rolb
std
and
mov
add
add
rcll
and
adc
lock
jg
pop
push
sub
call
xor
add
or
ret
push
push
add
inc
and
pop
pop
xlat
cli
loopne
loop
cwtl
imul
xor
sbb
stos
add
test
or
add
add
sbb
mov
and
add
jb
jl
or
xchg
leave
add
rep
std
aam
mov
xor
adc
mov
dec
dec
add
clc
and
adc
add
push
push
cld
or
sbb
and
mov
add
sub
mov
mov
add
lahf
loop
cld
push
add
mov
dec
and
add
add
mov
test
mov
mov
xchg
daa
push
lods
loopne
cmpb
sbb
and
lea
sbb
mov
or
add
ret
rolb
sub
add
adc
xor
orb
cmp
push
adc
dec
shrl
inc
in
mov
mov
arpl
lret
adc
test
sti
jne
xchg
and
das
add
je
jb
add
mov
pop
dec
mov
shll
inc
inc
outsl
insl
movb
xor
jae
sub
sbb
sub
or
mov
push
jns
add
inc
loop
sbb
and
test
movsb
pusha
test
loope
mov
xchg
adc
in
pop
fs
imul
push
sub
or
mov
inc
push
or
pop
dec
or
fsubs
xchg
ret
lods
add
pusha
cmp
add
push
pop
dec
add
xor
sub
lods
sbb
adc
imul
push
pop
adc
aaa
dec
add
cmp
xchg
in
add
inc
sub
push
loop
leave
mov
faddl
jb
les
or
add
arpl
inc
mov
jne
mov
dec
clc
xchg
cmp
add
mov
gs
cmp
adcb
movzwl
add
mov
sbb
sbb
add
xor
sbb
adc
sbb
add
pop
jmp
sbb
mov
lcall
adc
and
add
adc
flds
sub
jl
lds
and
add
out
add
dec
imul
fucom
cmp
or
pop
in
add
sti
mov
push
xor
add
mov
cli
cmp
lahf
inc
jb
enter
add
fnstenv
mov
mov
xadd
add
sti
test
or
push
push
push
jle
cmp
add
std
sub
push
push
add
cmp
jae
xchg
lock
add
dec
jecxz
test
xchg
add
inc
xor
testl
cmp
pop
mov
fnstenv
add
pushl
xor
dec
iret
shlb
dec
adc
and
jo
cmp
and
ret
mov
movsl
imul
fiaddl
jge
aam
xchg
add
mov
adc
mov
add
push
hlt
sbb
in
cmp
std
add
inc
jle
pop
shrl
mov
adcb
and
fisubs
jmp
add
and
fistpl
push
push
popa
jecxz
sub
add
jo
adc
push
add
ja
dec
jae
int3
inc
fs
add
sub
sbb
mov
dec
sarl
lret
sub
jp
orb
jb
inc
push
add
pop
pop
ret
nop
xlat
gs
add
shlb
pop
adc
sub
mov
addb
sar
adcl
scas
sbbb
sub
mov
jle
sub
jo
pop
pop
imulb
sub
les
mov
cmp
push
ja
stos
push
pusha
inc
out
pop
xchg
dec
cmp
sbb
cmp
rclb
xor
scas
addr16
push
add
push
outsb
loopne
mov
test
cmp
nop
add
dec
push
inc
iret
loopne
dec
adc
add
xor
das
pop
push
loopne
xchg
call
fsubrs
cld
and
add
xchg
xchg
cmp
testb
and
push
xor
mov
or
dec
dec
repnz
nop
jge
arpl
push
xchg
rorb
popa
hlt
insb
mov
and
mov
cli
dec
test
popf
dec
arpl
mov
mov
decb
add
mov
adcb
in
sub
push
adc
add
mov
dec
inc
add
adc
or
dec
add
lock
sarl
sub
in
and
sub
fs
repz
cmc
sbb
adc
fdivrs
mov
aam
xchg
addl
sbb
add
mov
js
dec
cmpsl
adc
inc
mov
fdivs
sbb
sti
bound
scas
push
add
mov
stos
adc
adc
mov
and
add
add
and
cs
sub
aam
mov
rolb
movsl
push
outsb
lods
add
xor
mov
mov
push
add
nop
cmp
mov
fimull
jp
sbb
mov
xlat
out
lock
jecxz
jns
ds
sub
add
dec
test
flds
push
xor
jecxz
ljmp
mov
insb
pop
lea
scas
add
pop
pusha
push
js
add
sub
sbb
add
add
mov
fcoms
aam
mul
cmc
push
and
rolb
jp
adc
icebp
fcomi
aam
push
enter
loop
rol
nop
daa
rclb
mov
inc
mov
cmp
mov
xchg
sbb
lods
idivl
pop
icebp
cmp
add
aam
movsb
cmpsb
jmp
call
dec
jecxz
push
mov
hlt
adc
cwtl
adc
sbb
push
imul
xor
add
push
rcrl
mov
push
loopne
bound
add
ja
lds
fdivrl
add
je
adc
add
pop
jmp
xor
push
cltd
push
cmp
out
lds
lods
and
push
add
mov
pop
push
js
cmp
hlt
movsl
les
push
pop
repnz
fwait
adc
sbb
rcrb
add
xchg
sub
sbb
or
sub
aam
or
and
fisubrs
bound
xor
sbbb
test
push
cmpsl
gs
jmp
js
cmp
push
push
call
add
hlt
mov
inc
cmpl
add
bound
add
cmpb
sub
or
add
xor
stos
aaa
loopne
aas
inc
add
fucomi
loop
ss
in
add
or
aad
cmovno
push
sbb
fldenv
mov
and
dec
sub
jp
cmp
jg
adc
adc
add
sahf
rcll
jg
add
into
loop
imul
movsl
roll
int
mov
jle
push
jl
mov
lods
sbb
jle
add
inc
jmp
cs
adc
add
push
jb
cmp
dec
sbb
mov
and
cld
enter
xor
mov
pop
mov
shlb
mov
loope
sub
sub
rolb
test
jbe
mov
icebp
mov
jo
pop
add
cmpb
jne,pn
mov
addb
jmp
fwait
add
scas
mov
xor
jmp
adc
cld
mov
add
das
jne
clc
xor
pop
xor
popf
outsl
push
shll
jg
js
add
lret
fcmovb
stc
xchg
add
xlat
xor
add
mov
pop
lds
push
cmp
mov
sub
sbb
jne
fists
mov
or
pop
mov
add
imul
pop
xlat
dec
push
and
xor
decl
adc
pop
sbb
adc
dec
add
out
push
nop
adc
jle
sub
sar
out
add
mov
push
pop
enter
inc
adc
add
data16
aad
add
jge
add
xlat
mov
jmp
in
push
jnp
mov
adc
and
mov
das
add
dec
xchg
loop
clc
jo
cmp
mov
jb
jge
add
lea
jne
push
mov
lahf
js
lret
das
inc
mov
aam
adc
lret
pushaw
add
mov
aam
int
nop
ds
fsub
xchg
add
add
add
add
ljmp
or
dec
inc
sbb
sub
mov
out
add
xlat
mov
push
inc
and
aaa
inc
dec
add
mov
test
add
xchg
mov
call
fnstsw
jg
outsl
lds
inc
push
data16
xchg
xchg
lods
mov
out
test
aaa
popa
push
lock
stos
push
pusha
das
or
ret
sahf
or
and
les
cmp
dec
cmp
clc
das
pushf
add
je
sarl
or
add
xor
add
adc
jp
fistpll
inc
xchg
ja
push
xchg
jge
pushf
xor
cmp
aas
fs
xchg
pop
movsb
arpl
add
mull
in
add
addr16
call
and
inc
fcomps
andb
mov
shlb
sti
pop
mov
scas
rcrl
push
cmp
cld
adc
add
sub
enter
jae
pop
jno
and
sbb
cli
addr16
xor
or
stos
mov
bound
sub
pop
push
fwait
mov
add
or
adcb
std
test
and
add
xchg
jne
cmp
xor
aam
fwait
addr16
or
or
pop
pop
dec
xor
pop
jb
jmp
add
jmp
out
arpl
insb
add
popf
xchg
rorb
adc
lea
nop
cli
pop
push
sbb
push
lcall
test
add
sbb
jl
mov
add
js
push
pop
or
sub
popa
cmp
jne
sbb
mov
push
push
je
sbb
mov
jg
or
bound
fists
shrb
movsb
cmpsl
pop
dec
cwtl
mov
jne
pop
int3
sbb
inc
sbb
adc
and
rolb
cs
imul
xchg
popa
mov
cmp
pop
scas
push
lock
push
fcmove
lds
cld
xchg
enter
mov
xor
cmp
shl
call
and
or
add
pop
sub
inc
dec
fstpl
nop
test
fisttpl
stc
clc
cmp
cld
or
andb
lock
adc
lds
add
fucomp
inc
js
cmp
sub
testb
jnp
aad
cmpsl
jg
mov
push
jl
outsl
or
dec
inc
dec
dec
and
inc
cmp
dec
cmp
push
mov
loop
aaa
xchg
fdivr
int
adc
adc
in
loop
and
dec
cmp
mov
sub
pusha
fisttpll
repnz
repnz
pop
clc
aam
or
mov
cmp
cmp
add
gs
mov
lea
add
loopne
cmp
sbb
and
in
mov
sbb
mov
divb
dec
mov
ja
arpl
iret
lea
add
add
mov
push
inc
add
repz
clc
add
in
fadds
mov
xchg
inc
or
insl
sub
xchg
out
fbld
jne
bound
inc
fwait
test
push
pop
in
rorb
sub
xor
jle
jns
pop
insb
add
outsb
cmp
arpl
jne
add
cmp
sub
cmp
and
outsl
cld
inc
add
mov
call
lds
incb
lret
je
hlt
push
sub
cmp
cmp
scas
xor
xchg
adc
push
pop
pop
mov
mov
jge
jnp
mov
cmp
xor
aas
rcrl
imul
push
les
gs
cmp
fmuls
mov
clc
insb
ret
test
rcll
iret
fsubp
inc
gs
and
push
and
xchg
xor
sbb
push
clc
dec
ss
shlb
xorl
or
pop
clc
test
loop
into
shlb
cmp
jae
mov
ret
ds
insb
pop
add
mov
push
or
call
subl
sahf
or
push
cmp
filds
sub
in
add
xchg
test
push
outsl
in
add
in
push
mov
fdiv
sub
xor
ficompl
inc
notl
mov
insl
test
push
add
jo
jb
cmp
adc
out
adc
add
dec
das
add
lret
mov
cmp
add
jae
add
xchg
mov
add
sub
imul
cwtl
push
xor
call
add
loope
add
push
jbe
xchg
sbb
mov
test
mov
fmuls
pop
and
sbb
sub
jg
shrl
sub
pop
cmp
pop
cmc
xchg
lock
push
jge
nop
jns
inc
orb
cmp
enter
jle
add
cmpsb
popa
add
xchg
pop
stos
dec
push
add
fs
mov
test
mov
inc
int3
sub
add
ss
pop
adc
sub
add
js
inc
pop
or
test
inc
sahf
and
jmp
shlb
push
cmpb
and
aas
dec
ljmp
mov
mov
push
add
and
xchg
inc
int3
push
or
xchg
mulps
push
mov
or
mov
xchg
pop
sub
xchg
dec
cmp
xchg
psubusw
in
loopne
call
fiaddl
xchg
pushf
and
movsl
sbb
sbb
cmpsl
repz
cli
rolb
mov
movsb
push
ja
push
and
mov
mov
mov
xchg
cmpsl
jl
pop
dec
jp
psubusw
jmp
out
sub
mov
adc
xlat
adc
dec
aad
sub
cmp
sti
or
mov
add
lods
add
aaa
inc
movsl
add
xchg
rolb
inc
lds
faddl
and
mov
pop
jnp
xchg
cld
sub
xchg
lods
lock
sahf
rolb
pop
movsl
add
cltd
push
mov
std
cld
inc
lods
in
xchg
add
ret
pop
jae
push
jo
add
dec
outsb
and
popa
in
jb
add
pusha
push
fs
sub
pop
mov
push
push
dec
nop
movsb
lcall
out
je
stc
jge
out
sbb
scas
or
imul
or
add
or
push
add
inc
jge
add
adc
mov
mov
call
add
and
xor
add
dec
movsb
fs
fdivs
pop
dec
pushf
and
call
pop
sbb
add
loopne
les
add
push
hlt
inc
sbb
add
push
lock
jo
sub
and
popa
push
pusha
shll
push
or
bound
imul
adc
or
daa
add
or
inc
add
lcall
add
add
pop
push
call
lret
or
xor
cmpsb
in
jmp
push
add
rcrl
pop
add
sub
mov
mov
mov
push
pop
das
lret
push
add
adc
int3
inc
ja
imul
pop
add
dec
jne
add
insl
je
inc
xor
add
or
or
cmp
insl
jno
imul
aas
addr16
pop
dec
sbb
es
jp
mov
inc
js
sub
inc
dec
xchg
mov
xor
rclb
aam
mov
out
js
roll
ja
or
add
rorl
xor
mov
push
pop
sbb
int3
jo
sbb
inc
in
arpl
push
and
test
xchg
call
fmul
jg
mov
imul
adc
add
test
enter
mov
pop
ss
add
ja
or
loopne
and
fs
dec
mov
and
sbb
movsl
add
sar
xchg
xchg
or
dec
cwtl
and
sbb
add
xor
add
push
mov
adc
call
inc
fmuls
sbb
sub
mov
cwtl
rcrl
mov
je
inc
add
sbbl
sbb
or
xor
pop
inc
mov
rclb
add
adc
out
inc
fs
xor
sub
insl
mov
mov
hlt
aam
filds
add
loope
sub
cmp
xchg
cwtl
adc
xchg
repnz
sub
xor
dec
or
add
dec
imul
pop
push
out
icebp
shlb
sub
ficoms
fs
add
sub
mov
repz
mov
gs
pop
add
dec
mov
andl
and
add
mov
js
push
dec
out
pop
inc
jae
repnz
add
shrb
lock
cld
mov
jns
jp
sub
cmpsb
add
push
fidivrl
adc
push
sub
dec
dec
movb
or
add
pushl
inc
imul
xor
add
in
mov
fs
cmp
clc
stc
into
subb
sbb
push
js
cwtl
scas
cli
pop
or
or
sarb
dec
pop
sbb
stos
adc
adc
in
pop
int
aaa
xchg
stos
push
add
das
xor
stc
sbb
inc
add
xchg
pop
or
inc
lds
loop
dec
push
sub
inc
fadd
push
pop
cwtl
jns
cmp
mov
mov
test
ljmp
jo
insb
imul
fimuls
push
add
mov
add
jecxz
inc
cmp
pop
fistpl
and
xchg
movsb
xor
jl
mov
mov
sub
cwtl
mov
ret
filds
mov
ret
cmp
lock
mov
cmp
push
add
sbb
popfw
aam
add
xchg
and
add
cmc
cs
cld
fmul
sub
in
iret
mov
dec
or
add
dec
jno
and
pop
mov
sub
ljmp
pop
and
add
mov
cmp
xor
inc
sub
jb
add
jo
bound
data16
shrb
scas
sbb
arpl
or
adc
jb
push
xchg
push
bound
js
jnp
jge
hlt
adc
clc
ljmp
mov
cmp
pusha
adc
dec
insl
nop
adc
dec
sarl
dec
mov
and
push
push
and
icebp
add
push
and
dec
arpl
cwtl
stc
das
mov
dec
pop
in
jb
insl
test
mov
sbb
push
push
fs
ja
shlb
add
jne
imul
adc
imul
outsl
add
sub
jnp
adc
sub
add
lods
test
xchg
add
or
in
mov
push
add
dec
inc
sub
sarl
and
int3
xchg
ljmp
lea
push
add
jb
pop
cmp
scas
sub
sbb
daa
push
xchg
add
jecxz
sub
push
xchg
adc
adc
push
add
or
pop
les
sub
add
cs
sub
xor
push
add
sub
loopne
add
cmpw
cwtl
ja
add
adc
jmp
orl
inc
fs
dec
testb
mov
sbb
lock
adc
adc
add
cltd
das
xlat
mov
sub
push
mov
aas
cmc
idivl
mov
pop
add
add
xchg
add
leave
outsb
push
add
sar
and
inc
mov
enter
pop
or
lods
cmpl
cwtl
test
nop
leave
idivb
inc
mov
push
adc
xor
add
std
shll
and
jnp
syscall
and
and
xor
inc
inc
dec
or
xor
add
jmp
pop
into
xor
cwtl
mov
push
and
fistl
loopne
mov
push
mov
or
addb
repz
scas
inc
sub
mov
or
cmp
push
add
and
jmp
sahf
out
or
add
cs
pusha
push
enter
sbbb
nop
lret
ja
add
xchg
push
lods
rorl
inc
xor
add
xor
loope
push
mov
add
xor
pusha
call
lods
add
outsb
daa
je
insb
outsl
add
rorl
mov
push
pop
ret
cmp
sahf
aam
mov
add
lea
jg
ds
iret
add
or
mov
lods
insb
lock
push
cltd
xchg
add
adc
adc
or
mov
mov
outsl
cmpsb
xchg
sbb
add
subl
stc
and
mov
adcl
inc
inc
test
inc
adc
out
movsl
and
hlt
inc
sub
enter
and
rolb
xchg
ret
inc
dec
and
push
arpl
adc
inc
add
enter
enter
add
push
insl
jbe
or
mov
add
cltd
inc
and
and
xor
cmpsl
xchg
aas
or
add
imul
lock
adc
mov
call
push
cwtl
js
mov
cli
xor
and
ss
shr
scas
add
clc
jmp
mov
xchg
and
xchg
fists
jmp
add
adc
add
push
in
jmp
add
out
add
add
pop
out
sbb
and
dec
cld
jne
fdivrp
jno
into
rclb
and
xor
and
jmp
push
test
inc
push
cld
cmp
aas
mov
dec
sub
xchg
xchg
xor
or
ret
cs
add
push
jl
add
clc
cwtl
mov
aaa
clc
inc
push
mov
pop
add
mov
enter
jnp
adc
mov
or
bound
daa
inc
inc
repnz
popf
rorb
loope
cs
xor
sub
sub
mov
and
add
add
cli
loopne
lock
xchg
adc
imul
call
add
je
xor
insb
adc
and
pop
xor
dec
scas
bound
pop
cmp
inc
les
orb
xchg
mov
xchg
pop
jne
shlb
stos
xchg
jle
cmpsl
imul
cmc
mov
add
pop
mov
cld
popf
nop
jo
fsub
push
mov
iret
add
mov
mov
push
sub
out
xor
jmp
pop
mov
rorb
pop
iret
add
xchg
cli
adc
inc
or
bound
mov
adc
inc
and
and
shll
push
lea
movsl
sbb
cmp
sti
push
add
ss
cs
popa
mov
sbb
xchg
inc
add
cmp
stos
mov
or
jmp
xchg
ljmp
mov
push
add
or
push
pop
dec
mov
sbbl
mov
in
clc
sub
and
add
push
imul
jp
shrl
and
fadds
dec
cwtl
loop
add
roll
add
in
dec
int3
lods
stos
movsl
mov
pop
in
or
push
stc
cmpl
add
loopne
mov
pop
lret
loopne
in
add
inc
mov
pusha
mov
sbb
js
clc
leave
pop
ljmp
test
in
mov
mov
stos
jecxz
add
leave
call
sbb
push
cmp
lret
mov
int3
leave
pop
nop
and
adc
inc
adc
fildl
xchg
and
push
sub
dec
les
sub
pushf
add
ret
das
push
add
mov
or
lahf
and
push
add
cmpl
jg
loope
jb
and
or
xchg
mov
in
mov
pop
stos
call
push
popf
push
jne
add
mov
add
mov
add
dec
jno
out
je
push
xor
and
pop
cmpsb
push
sub
add
mov
inc
sub
push
xlat
adc
add
popf
pop
sub
or
movl
jo
rorl
mov
lret
mov
dec
pop
aam
xor
add
and
stos
sub
add
cmp
sub
in
cmp
js
mov
in
jl
add
cmp
in
add
xor
mov
add
in
or
mov
jns
sbb
mov
lret
push
xchg
mov
pop
imul
inc
add
pop
fdivs
insl
mov
jo
mov
jno
dec
lcall
cmp
add
test
pop
pop
push
and
pop
loopne
push
les
adc
int
mov
incl
in
fisttpll
inc
inc
pop
std
pop
or
mov
stos
cmpsb
mov
mov
xchg
imul
mov
test
out
iret
int
jno
push
mov
inc
jle
mov
add
pop
add
stc
add
add
dec
or
sub
lods
mov
nop
leave
pop
fisttps
test
inc
xor
inc
add
add
mov
or
push
fimull
fadds
aad
mov
xor
std
mov
mov
mov
mov
sti
das
mov
outsb
inc
add
mov
cld
aam
fldl
arpl
sbb
sbb
js
addl
inc
xchg
insb
cmp
push
test
mov
movsl
add
jo
add
push
add
dec
jne
aam
das
dec
xchg
sbb
or
rolb
inc
mov
and
inc
mov
xchg
push
add
mov
mov
pop
push
cld
inc
or
cmp
stos
dec
dec
sbb
inc
sbb
dec
rsqrtps
pop
aam
int3
dec
daa
pop
pop
ds
xorb
adc
shll
out
cli
add
imull
mov
inc
sbb
sub
jmp
adc
jecxz
jmp
pop
mov
push
add
add
nop
xor
or
push
mov
enter
add
and
xor
rep
add
adcl
dec
xchg
pop
sub
cmpsl
push
cmp
addb
sub
loopne
ret
mov
iret
jmp
add
lcall
add
roll
aas
add
data16
jl
test
test
add
jne
sahf
pop
xor
cmp
in
negl
rcr
lods
cmp
pop
fcoml
cmp
push
pushl
push
js
sbb
inc
and
out
leave
add
ret
cltd
adc
hlt
ljmp
or
add
and
inc
pop
or
push
in
loopne
adc
inc
cwtl
cmp
and
clc
call
add
jne
jnp
out
push
sarb
add
cmpsb
mov
cmp
xor
rolb
add
cmp
ja
outsb
and
mov
decb
enter
jae
jns
push
sub
dec
add
xchg
inc
lcall
je
movsl
or
leave
adc
loop
mov
xor
shl
lds
push
cmpl
jbe
out
movsl
push
push
rorb
hlt
or
scas
xor
subps
das
sbb
jae
add
dec
jo
loop
and
testl
inc
in
in
or
pop
push
sarb
add
aaa
faddp
add
push
jb
add
int
jecxz
mov
mov
cmp
leave
push
gs
add
lds
add
xchg
jge
add
xchg
xor
jmp
pop
pop
sbb
add
adc
ja
pop
aas
enter
dec
add
add
shrl
shl
mov
data16
ret
add
push
jp
add
push
cmpsl
and
jmp
add
jo
test
jne
mov
push
mov
repz
pop
cmc
sarb
jmp
push
fadd
loopne
scas
data16
data16
mov
and
rorl
jmp
mov
adc
inc
inc
pop
mov
int3
and
add
xchg
out
adc
cmp
sub
fwait
xor
add
scas
add
pop
add
iret
repz
and
pusha
or
mov
bound
ja
movsl
pop
dec
faddl
jne
add
test
ds
push
dec
cmp
push
popa
mov
ljmp
pop
test
and
and
pop
sub
push
mov
lds
out
sub
adc
lods
jne
add
sarl
sti
mov
ret
dec
or
repnz
sbb
test
sub
add
dec
dec
cmp
je
sbb
roll
add
aaa
call
lcall
push
into
lock
adc
add
dec
out
pop
add
adc
and
int3
xor
shrb
mov
mov
cmpsl
stc
push
call
adc
lea
jmp
insl
add
sbb
pop
pushf
adc
xchg
fs
shr
shrb
mov
and
sub
subb
cmp
inc
enter
xchg
bound
mov
or
stos
pop
push
adc
push
add
hlt
adc
bswap
adc
add
js
loopne
je
or
add
mov
xchg
pop
addl
adc
nop
pushf
in
inc
cmp
or
xlat
dec
scas
inc
in
add
dec
and
add
xchg
data16
sbb
ds
sub
jge
push
mov
les
lock
jae
in
gs
rclb
or
lods
push
add
movsl
add
je
xor
sub
jle
sbb
and
mov
enter
cmp
sub
and
gs
add
rep
push
xchg
pop
lcall
add
cmp
pop
mov
xchg
pop
add
sti
adc
pop
test
jbe
shlb
ja
jg
add
jo
dec
push
and
lcall
stos
add
stos
pop
sub
xor
cmpsb
and
jno
sbb
mov
int3
sbb
popa
clc
add
insb
or
aas
and
std
cld
hlt
sub
add
sbb
out
fsubrl
jge
jae
sbb
mov
push
movb
dec
stos
and
pop
sub
mov
xor
mov
int3
cmc
add
lock
jecxz
sbb
stos
adc
jp
clc
mov
sarl
xchg
cmp
push
cmp
addb
xor
adc
sbb
inc
add
add
add
jle
add
jmp
sbb
add
xchg
test
cwtl
call
xchg
mov
sahf
mov
xor
mov
popa
push
xor
xchg
add
test
jb
adc
push
fs
add
dec
or
in
dec
cmp
sbb
sub
add
adc
or
sub
sbb
add
call
jns
add
jne
dec
xlat
dec
adc
push
bound
scas
inc
arpl
jbe
add
push
in
push
mov
or
rorb
cmpb
sub
inc
inc
mov
arpl
add
dec
fsubl
mov
popa
add
push
lret
clc
mov
enter
lahf
ret
stos
push
int3
xlat
add
xchg
bound
add
imul
rcll
mov
fstps
fadds
inc
xchg
add
ret
inc
dec
jne
dec
jle
adc
xor
rorb
mov
mov
cmpsl
mov
stos
jmp
sbb
mov
ja
scas
int3
aas
sbbb
push
jmp
orl
fnsetpm(287
jno
xor
stos
call
pushl
pusha
mov
sub
add
je
scas
add
sub
dec
mov
push
pop
subb
sti
shrl
rolb
mov
lea
jmp
fdivs
insl
ret
int
test
out
jecxz
or
adc
mov
fmul
adc
nop
add
call
pop
add
movsl
loope
lea
outsl
inc
or
pop
pop
xchg
push
jne
mov
loop
cmp
jb
das
adc
nop
fadds
jg,pn
mov
push
fistps
rcll
push
in
cltd
dec
out
push
mov
push
mov
and
push
add
pop
add
je
inc
or
in
ds
cmp
pop
in
jbe
sub
pop
adc
es
or
insl
cld
mov
clc
mov
inc
add
push
pop
hlt
sti
inc
shr
add
mov
dec
jne
add
dec
imul
add
or
jmp
mov
and
ret
push
add
mov
pop
mov
aad
out
sbb
ljmp
adc
arpl
test
inc
popl
scas
sbb
add
mov
xchg
jo
imul
sub
stos
in
cmpsl
in
std
cmp
xchg
sub
pop
add
jmp
data16
xorb
in
lods
sub
push
stos
or
int3
call
add
add
jp
add
dec
jne
pop
adc
xor
lds
pop
mov
xchg
imul
mov
push
mov
pop
add
das
mov
sbb
cwtl
shlb
pop
xor
imul
test
outsl
dec
jne
daa
jmp
test
push
pop
jo
lcall
add
xor
mov
call
out
jne
push
pop
imul
push
idivl
sbb
add
and
mov
ret
js
add
rorb
popa
add
jnp
push
sbb
inc
fsubl
fcoms
xchg
popw
and
out
movsl
add
ret
adc
movb
les
xchg
jbe
scas
test
mov
jo
nop
aad
mov
adc
into
cmpl
jne
jmp
int3
fs
rolb
or
aas
mov
adc
data16
add
or
add
cmp
je
pop
in
push
add
add
and
push
or
adc
or
movzwl
or
jae
inc
jmp
inc
sbb
fists
es
aas
add
add
repnz
push
rcl
or
inc
bound
hlt
mov
sub
ret
cwtl
xor
push
mov
mov
je
xor
add
add
bnd
jbe
mov
lea
orb
xor
sbb
mov
pop
push
call
std
ljmp
lea
or
pushf
stos
or
jge
add
inc
add
mov
aas
cmp
add
mov
and
testb
push
cld
imul
push
cmp
pop
mov
out
push
adc
mov
aas
push
cmp
mov
iret
add
movsb
fdivp
aad
mov
add
and
add
push
jmp
getsec
sub
lods
loopne
movsb
test
lcall
test
mov
and
adc
pop
fisubl
inc
add
fcompl
sbb
test
dec
jecxz
xchg
loopne
hlt
push
xchg
push
push
fwait
leave
inc
dec
cmp
sbb
jne
xor
stos
aam
cmpsb
jl
add
les
jb
add
push
pop
mov
je
or
mov
mov
in
pop
stos
dec
mov
xor
or
shlb
add
imul
add
les
aaa
push
inc
test
test
cmp
xor
bndstx
nop
and
addr16
outsl
add
mov
push
cli
lret
inc
inc
xor
push
inc
mov
adc
mov
int3
and
dec
push
imul
ret
ja
sbb
add
lods
aas
call
add
adc
shll
adc
add
daa
jae
add
cli
cwtl
and
add
mov
add
mov
push
daa
jp
jecxz
jmp
jnp
andl
push
add
mov
or
cmp
push
add
xchg
stos
mov
add
push
sub
mov
pop
movsl
xchg
fstps
ds
jae
lea
add
hlt
lret
add
xor
hlt
dec
add
cmp
mov
xor
jle
cli
cld
fistpll
lret
sbb
push
push
ja
xorl
pop
push
add
jne
cli
mov
je
push
xchg
cmp
and
arpl
popa
cld
aas
lret
add
inc
sub
xchg
inc
rolb
mov
icebp
add
push
dec
sbb
push
mov
fldenv
mov
adc
mov
adc
sahf
xchg
pushf
add
xchg
add
lret
and
pushf
sbb
test
inc
sbb
mov
ret
mov
mov
daa
add
dec
inc
test
in
or
cmp
lahf
jg
loope
ret
push
js
test
push
data16
dec
push
cmp
inc
lcall
mov
cli
lcall
in
xor
mov
aas
cs
or
jne,pt
movsl
hlt
es
pop
fmuls
das
dec
add
fdivrl
in
movsl
push
xlat
add
rcrl
mov
inc
ret
and
fimuls
clc
sub
lret
mov
int
add
xchg
hlt
xchg
imul
mov
adcb
cs
pop
cmp
jno
jae
clc
sub
adc
int3
xchg
inc
sahf
faddl
imul
add
mov
add
push
or
loopne
sub
jg
add
mov
xchg
cmpsb
loope
or
mov
push
add
add
in
mov
mov
aas
xchg
push
jmp
add
dec
hlt
adc
add
sahf
and
add
mov
imul
pop
decb
imul
test
xchg
push
sub
in
pop
sub
push
push
inc
add
mov
clc
ss
cmpb
lcall
jne
and
popf
jmp
cmc
lds
add
insb
cmp
or
add
add
popa
add
fdivrl
pop
inc
rclb
rolb
je
and
or
push
add
ljmp
push
fsubs
fstpt
lcall
mov
jnp
inc
bound
xchg
pop
out
cmp
add
dec
or
es
mov
mov
mov
insb
cmp
ljmp
outsl
ret
mov
cmp
rolb
movsl
and
andb
or
stc
sub
add
push
sbb
push
pusha
xor
lods
sbb
cmp
add
in
push
dec
mov
leave
ret
xchg
mov
pop
pushf
xlat
and
add
adc
movsb
xchg
sub
add
js
adc
fisubrs
xorb
push
faddl
roll
lahf
dec
jne
ficomps
cmpl
leave
add
and
std
or
add
adc
lods
mov
subb
popfw
rcrb
and
cltd
mov
cmp
jle
add
adc
adc
inc
sub
and
mov
enter
jbe
enter
add
inc
subl
and
add
lds
loope
mov
cld
rolb
pop
das
les
inc
or
and
add
loope
add
xchg
adc
mov
or
add
push
dec
inc
and
mov
add
push
jmp
cmp
enter
fadds
inc
aam
xor
jmp
sarl
add
cld
outsl
push
mov
push
stc
and
cs
sbb
mov
push
mov
cld
fnstsw
rdtsc
cwtl
or
add
divb
in
into
inc
sarl
fldl
jmp
xor
sub
sub
xchg
push
add
sub
ljmp
fwait
sbb
ret
pop
jg
nop
lahf
add
jmp
sub
roll
sti
push
dec
xor
movsl
dec
pop
int
lahf
mov
testl
or
pop
xchg
jmp
xor
jp
dec
leave
ss
incb
cli
testl
jne
mov
mov
add
popf
in
pop
lock
test
movsl
push
cmp
dec
add
and
and
roll
pop
jno
add
movsb
mov
add
push
nop
xlat
pop
adc
clc
sub
jmp
loopne
mov
jb
loopne
push
jae
sbb
jmp
or
jecxz
shll
inc
fsub
call
adc
ret
out
loop
and
mov
xchg
push
out
cmpb
inc
adcl
jecxz
in
jge
pop
add
push
call
xchg
fsubl
adc
sarb
popf
push
orb
movsb
lods
pop
dec
add
jge
dec
jo
inc
orb
test
inc
mov
jbe
xor
inc
div
jl
inc
aam
jmp
imulb
mov
ljmp
sbbw
pop
mov
cmp
je
add
cmp
push
cmpsb
and
cmpl
add
bound
lock
push
and
mov
jge
adc
inc
jb
add
je
daa
nop
dec
push
ftst
fildl
adc
in
cmp
jo
add
jo
add
adc
inc
pop
xchg
int
mov
test
add
push
mov
push
cmp
or
rcll
add
adc
dec
in
in
adc
or
pop
mov
les
ja
clc
aad
add
ret
sbb
mov
cmp
shrb
mov
push
add
xor
dec
iret
lret
pop
shrb
jmp
push
mov
push
mov
addl
add
rcll
fwait
rcrl
not
or
rorl
cs
adc
add
push
cmp
dec
lret
cmpsb
ja
add
add
lahf
push
push
push
add
add
xor
add
int
imul
cli
jb
push
mov
mov
shl
add
or
inc
and
mov
or
stc
pop
push
push
andb
in
lods
pop
mov
call
pop
jo
pop
dec
pusha
add
lea
push
mov
xor
add
inc
jne
mov
xchg
add
push
popa
into
add
cmp
gs
bnd
add
xchg
adc
ret
mov
dec
in
rorl
sbb
inc
xchg
scas
cmp
jl
add
mov
orb
in
xchg
xchg
mov
cwtl
jo
test
jnp
push
inc
iret
push
in
std
add
inc
and
xlat
inc
addb
xchg
pop
mov
or
jg
les
mov
shlb
mov
add
ret
add
push
cmp
lcall
mov
insb
in
or
adc
or
fiaddl
cmp
add
movsb
clc
push
sbb
sbb
jmp
idivb
outsb
mov
adc
movsb
loopne
ja
call
inc
es
jmp
lods
or
mov
jno
mov
xor
lock
movb
popf
fs
out
cmp
mov
out
xchg
mov
adc
push
sbb
adc
lcall
mov
add
xchg
pop
mov
cmp
add
insl
std
and
aam
in
cmpl
loopne
fdivrl
dec
push
push
int
cli
sbb
sti
scas
fstps
loopne
xchg
pop
and
rclb
dec
ljmp
inc
les
add
ret
mov
mov
mov
inc
sbb
andb
mov
sub
inc
push
clc
pop
leave
inc
and
dec
mov
sub
jbe
shll
punpcklbw
fs
add
ljmp
test
sbb
ja
adc
add
push
cmpb
ret
mov
and
jge
add
sbb
outsl
andl
mov
test
incl
test
ja
pusha
sub
lock
mov
mov
aas
adc
hlt
adc
sahf
orb
repnz
pop
inc
add
js
sbb
mov
jns
add
sub
into
scas
sub
cld
sti
dec
and
pop
push
fmull
mov
fcomps
dec
mov
add
adc
pop
or
dec
and
jge
cmp
pop
lret
dec
push
bound
pop
mov
imul
cmp
aam
mov
js
adcl
in
stos
xchg
or
add
cmp
mov
fisubl
add
jae
les
jmp
or
and
fs
cltd
add
cmp
inc
test
mov
add
add
lret
ret
lret
and
aad
fildl
adc
sub
add
or
xchg
adc
pop
jmp
and
add
xor
add
je,pn
test
and
cli
incl
pop
cmp
xor
out
loop
push
adc
mov
adc
pop
test
popa
movups
and
pop
add
cmp
in
popf
call
push
movsl
add
sbb
sbb
xor
xor
in
mov
mov
cli
iret
pop
push
dec
out
inc
inc
stos
push
add
mov
sbb
add
mov
in
inc
loopne,pn
cmpsb
fcomps
pop
lcall
add
dec
in
es
sahf
sti
and
out
cltd
cmp
dec
test
inc
mov
and
adc
jmp
in
or
adc
jne
add
mov
lret
mov
dec
imul
push
shlb
push
add
mov
add
mov
decl
pop
out
add
push
mov
xchg
fmull
dec
ljmp
clc
push
dec
loop
movsb
lret
xor
into
or
adc
xchg
js
or
mov
adc
mov
mov
in
add
cmpsl
adc
add
faddl
and
clc
pop
pop
sbb
mov
pop
popl
mov
lods
pop
bound
pop
inc
inc
mov
push
clc
iret
jp
push
loope
mov
testl
movsb
adc
xor
sbb
mov
dec
push
test
cmp
cmp
cmp
lock
sub
pop
adc
add
sub
cmp
dec
pop
data16
hlt
cld
lods
add
push
jl
push
sbb
add
mov
addb
sub
mov
pop
stos
testl
cltd
add
rorl
cmp
dec
add
lcall
in
or
push
test
inc
fcoml
push
dec
sbb
inc
pop
gs
je
popa
loopne
jnp
jno
push
ret
and
imul
shll
shrb
inc
push
push
insl
adc
and
xor
add
leave
sub
fldl
jns
lods
mov
cld
sub
jge
pushf
call
add
loope
in
mov
loop
js
shlb
jne
adc
push
mov
xchg
loop
je
rorl
add
cld
cs
or
and
inc
add
int3
mov
jno
inc
adc
and
mov
data16
pusha
insl
mov
xchg
inc
jo
pop
in
cmp
push
test
sbb
scas
pushf
loopnew
jp
mov
sub
ret
add
push
xchg
clc
push
cld
es
into
loopne
mov
sub
insl
jmp
adc
push
add
cmp
sub
add
xchg
je
sub
add
lods
cmpsl
sub
or
into
pop
add
outsl
add
push
pop
dec
push
mov
js
stc
mov
or
ret
xchg
xchg
in
add
cmp
inc
add
ficompl
rorb
cmp
sub
add
in
jae
add
pop
sub
add
push
lcall
mov
shlb
ss
cmp
xor
add
add
imul
jp
das
or
pop
add
add
js
in
subb
ret
push
out
mov
sub
xor
xchg
jge
add
orl
icebp
add
fsubr
out
dec
clc
add
sbb
xor
cmp
mov
mov
sub
and
add
push
loop
pop
mov
jnp
sarb
add
jle
rolb
inc
pop
add
pop
pop
dec
adc
lock
xor
dec
xchg
adc
xchg
mov
outsl
push
shlb
lds
adc
mov
inc
adc
popf
aaa
call
loopne
ljmp
push
cli
mov
std
jp
mov
loope
and
mov
sbb
mov
roll
xchg
out
jo
push
push
arpl
jmp
daa
xor
movq
jne
shr
pop
bound
inc
sti
std
popa
out
push
fistpll
dec
mov
loope
clc
pusha
fldcw
and
sub
scas
bound
dec
jecxz
xchg
fldl
cmp
lods
mull
test
lea
pop
lahf
push
push
iret
pop
sti
xchg
mov
lock
add
push
mov
adc
je
prefetch
dec
add
mov
adc
xlat
nop
mov
inc
sub
rolb
rcrb
xlat
add
test
mov
add
ret
push
mov
jp
or
mov
mov
cmp
add
cmp
add
dec
cmpsb
pop
or
jge
out
push
add
nop
xchg
mov
add
or
add
das
roll
xchg
into
sbbb
rcr
add
xor
sbb
sbb
cmpsb
push
lea
cmpsb
sbb
movsl
cwtl
jno
add
es
sub
arpl
cmp
lcall
les
loop
add
icebp
je
pop
fisttps
pop
call
lods
pusha
or
add
pop
xchg
xor
dec
clc
push
stos
or
gs
jmp
push
dec
dec
cmp
fildll
leave
inc
testb
xor
loopne
mov
jg
roll
test
inc
cmp
clc
je
xchg
int3
cmpb
add
add
leave
movsl
fcmove
mov
dec
adc
inc
push
mov
inc
add
ret
fistps
xchg
add
sbb
sti
cmp
roll
pop
mov
insb
loop
adc
push
pop
add
jg
jge
or
add
xor
xchg
mov
jbe
imul
jae
dec
loopne
iret
or
add
fildl
push
fwait
pop
or
mov
inc
xor
test
cmp
inc
add
xchg
mov
add
cwtl
movsb
add
js
mov
stos
testb
jmp
cmp
ljmp
sbb
mov
push
xchg
arpl
xor
cs
sti
add
and
out
cmp
add
icebp
gs
add
daa
xchg
inc
loopne
insb
loopne
inc
lock
pop
stc
inc
and
cmp
loopne
add
scas
dec
pop
mov
les
and
js
adc
mov
ret
out
jno
cmp
or
add
add
dec
aam
out
pusha
xchg
andb
stos
mov
fldenv
mov
add
ja
pop
sar
testb
mov
push
loopne
and
insl
in
cmp
pop
xorb
test
leave
add
out
clc
or
cmp
mov
xchg
test
add
daa
jmp
add
push
sbb
add
lret
cli
xor
int
cmp
jo
fwait
lea
add
mov
add
jno
popf
pop
in
sub
js
cld
mov
add
or
aas
mov
adc
inc
cltd
jo
out
movsl
rorb
int3
cmp
fisubrl
xchg
adcl
es
sbb
jbe
add
push
inc
xor
iret
rolb
sbb
add
jge
je
outsb
sbb
pushf
nop
mov
jp
imul
pop
aam
stos
ds
mov
jp
sbb
mov
add
or
xorl
in
jns
add
adc
jmp
fsubl
fisubs
adc
add
test
pop
mov
mov
ret
adc
out
setne
popf
es
data16
pop
loopne
xchg
add
in
das
xchg
mov
pop
sbb
or
and
push
add
mov
in
dec
mov
adc
test
sarb
push
xchg
pop
jmp
aad
pop
add
or
cmp
loopne
pop
xchg
loop
ja
add
mov
loope
cmp
shlb
lods
sub
aam
sti
xor
sbb
xlat
adc
imul
sbb
mov
and
mov
mov
sbb
sbb
movb
mov
insl
and
inc
push
add
iret
sub
add
inc
add
je
add
daa
lods
in
out
add
or
add
sbb
sbb
adc
imul
jmp
and
sbb
stos
or
add
mov
pop
fadd
xor
xchg
sbb
inc
dec
inc
sbb
inc
push
xchg
adc
add
dec
or
xor
pop
add
aad
adc
add
dec
xor
incb
jno
cs
call
inc
lock
jge
shll
lock
mov
mov
lods
xchg
es
loopne
repz
xor
sub
enter
testb
xlat
inc
lock
mov
rol
call
aam
movsb
add
test
mov
je
inc
leave
lock
sub
xor
inc
leave
subb
inc
adc
inc
xchg
add
or
and
lahf
mov
and
xchg
inc
and
inc
jmp
jne
xor
cld
mov
and
movsl
ljmp
shl
stos
jp
icebp
mov
lds
jae
enter
adc
scas
mov
adc
add
dec
xor
add
mov
pop
lock
pusha
pop
pop
mov
xchg
punpckldq
or
adc
in
fs
dec
inc
cld
shrb
fists
mov
std
pop
mov
fld
repnz
fstpl
pop
fs
mov
jle,pn
fstpt
dec
or
jmp
sbb
repnz
and
push
outsb
aad
cmp
andb
pushf
in
xor
jo
call
test
push
dec
and
jns
add
and
pop
xor
out
mov
lcall
pop
add
add
mov
loopne
xchg
arpl
aad
push
hlt
push
jae
add
daa
jnp
stc
add
or
sbb
sbb
push
lret
and
mov
jl
cmc
dec
push
movzbl
cs
and
imul
jbe
mov
nop
jmp
into
jg
add
mov
add
lret
push
cmc
popf
add
lret
add
hlt
push
push
pop
xchg
jno
movsl
add
repnz
ja
xor
arpl
cmpl
insb
jbe
pop
or
adc
push
cli
and
inc
sbb
sbb
in
push
mov
pop
test
jbe
std
push
dec
add
je
aas
xchg
leave
or
fmuls
and
inc
scas
pop
inc
mov
dec
insb
add
aad
call
add
mov
out
repz
test
movsb
sbb
add
sub
sbb
add
nop
inc
jae
sub
mov
and
dec
jmp
inc
ljmp
mov
movb
dec
in
icebp
ljmp
pop
cmpsb
jno
sbb
je
cmp
push
xchg
cmp
pop
pushf
shr
sub
push
inc
sub
lea
adc
push
pop
lret
add
adc
push
push
cmp
jg
pop
add
lret
enter
push
nop
lcall
nop
dec
add
sahf
add
mov
jo
arpl
or
test
cmp
sbb
push
je
push
inc
ds
adcl
or
shlb
cwtl
sbb
push
pop
les
xor
or
push
add
sub
test
push
mov
add
rolb
or
aaa
enter
push
sbb
pusha
mov
pop
and
pop
add
dec
js
cwtl
jg
mov
int3
cmp
les
mov
cmp
xor
fcomps
cmp
mov
pop
sbb
mov
nop
cmp
sub
mov
inc
sub
jns
enter
xor
je
inc
clc
cmp
add
and
call
xchg
push
sbb
xchg
shlb
nop
paddsb
pusha
gs
and
test
push
mov
aam
pusha
enter
fsubs
push
test
addr16
and
and
aas
xchg
pop
pop
xor
lahf
add
in
mov
and
mov
jns
leave
adc
and
pusha
add
and
ss
mov
cld
add
mov
mov
add
test
push
movsb
inc
xchg
xor
rclb
call
sub
and
test
jle
out
mov
mov
push
lea
add
add
movb
or
dec
add
outsb
je
imul
outsl
es
repz
popa
sub
cmp
sbb
push
jo
cmp
inc
ljmp
in
or
mov
pushf
add
push
or
mov
sbb
or
rcrb
jp
mov
insb
inc
loopne
xor
call
movsb
jo
push
pop
pop
es
sbbb
nop
mov
dec
mov
xchg
mov
rcr
fcomp
loopne
call
jo
pop
or
adc
sbb
and
sub
xor
and
push
in
pop
in
pusha
in
push
mov
dec
add
iret
cmp
inc
and
cwtl
xor
call
or
push
nop
outsb
mov
hlt
loop
xor
or
mov
and
rcrb
data16
add
cwtl
loop
xor
add
test
or
dec
dec
dec
orl
push
push
add
pop
pop
push
inc
in
add
add
dec
rclb
bound
data16
push
insb
insl
outsb
jo
add
jae
ja
jp
add
imul
xor
test
add
push
add
loope
lret
and
push
pop
xor
push
mov
add
adc
add
adc
and
dec
mov
add
inc
add
call
fdiv
lock
and
mov
clc
mov
cli
add
pop
jo
mov
mov
cld
cld
and
sbb
sub
mov
js
add
sarb
fwait
test
jo
add
push
scas
mov
sbb
hlt
add
xchg
sbb
push
mov
test
and
rorb
into
or
cmc
push
add
sbb
loope
and
loopne
and
add
je
dec
or
mov
add
add
aad
mov
and
and
or
push
jmp
sbb
pushf
add
test
repnz
js
add
aad
add
mov
rclb
push
pop
add
adc
pusha
int3
sbb
sbb
sub
sbb
push
mov
add
sub
or
jg
imul
xchg
cmp
mov
mov
hlt
mov
js
add
inc
cmp
push
push
cs
in
sub
add
add
add
push
or
or
or
popa
pop
sbb
and
lock
cs
fcompl
and
test
pusha
data16
imul
ljmp
or
mov
adc
pushf
cmp
insb
jl
int3
xor
jle
add
test
ret
xor
or
xchg
add
sbb
add
mov
xchg
clc
and
cltd
sbb
mov
add
xchg
add
sbb
dec
xlat
push
cltd
push
fcomp
loopne
pop
mov
adc
xchg
lods
ret
pushf
mov
leave
mov
xchg
and
aam
sbb
sbbl
add
xchg
loopne
int3
push
leave
xchg
enter
movsl
cmp
pop
cltd
fs
mov
add
les
mov
jns
add
xorb
sbb
dec
inc
ret
cmpsb
pusha
test
dec
enter
js
adc
mov
in
sub
cltd
xchg
pop
lcall
cwtl
pop
sbb
add
nop
gs
pushw
mov
add
xchg
add
push
pushf
dec
and
pop
or
aas
out
push
hlt
inc
mov
mov
xchg
js
add
xchg
pop
nop
lcall
xor
xorb
cmp
mov
xchg
js
pushf
cmp
mov
or
cwtl
subb
inc
lret
sub
add
dec
dec
cmp
add
imul
gs
fmull
popa
dec
push
int3
or
sbb
mov
pushf
fs
iret
fnstcw
inc
or
imul
xor
into
sub
pop
cmp
inc
push
xlat
adc
push
pushf
fadd
nop
pop
jns
cltd
sub
test
adc
pusha
lcall
push
orb
or
loopne
mov
popa
add
jl
shlb
xor
pop
je
xor
jo
cmpsl
add
shlb
pop
pop
loope
add
push
add
repnz
ret
inc
out
loopne
adc
loop
sub
add
and
repnz
pop
fdivrl
jecxz
add
and
mov
int
adc
mov
movsb
adc
adc
pusha
rcrb
add
mov
fs
jo
jl
mov
lcall
jo
cli
adc
or
pop
lods
mov
cmp
pop
add
dec
je
nop
sti
mov
neg
imul
lock
mov
out
sbbl
xchg
sbb
or
outsb
adc
rcl
lods
cmp
mov
jmp
add
add
adc
add
mov
add
and
dec
dec
aam
sub
sbbl
adc
and
fcoml
dec
shl
jp
repnz
jmp
xchg
dec
in
inc
add
mov
ror
fdivrp
out
clc
decb
inc
ja
add
push
dec
fs
inc
mov
lock
add
paddd
adc
sub
xor
pop
or
clc
xchg
or
movsb
xchg
mov
fiadds
repnz
adcl
dec
inc
push
xchg
mov
call
add
or
pop
adc
and
in
fs
xchg
sbb
sub
add
inc
dec
push
mov
addl
inc
inc
cli
je
jne
mov
cwtl
push
push
dec
mov
inc
xor
inc
call
arpl
push
sti
scas
adc
sub
lret
jbe
add
mov
movsl
sbb
addr16
insl
daa
mov
xor
jmp
inc
in
lea
push
inc
mov
xchg
xor
enter
add
push
xor
mov
mov
cs
mov
xor
or
pcmpgtd
sub
call
inc
push
or
arpl
pop
mov
xchg
sbb
jb
or
inc
pop
js
cmp
lock
mov
dec
add
push
in
movsl
mov
or
outsw
inc
add
push
jb
ds
fsubl
inc
lea
ss
outsl
add
popl
mov
adc
inc
imul
insl
push
aam
xchg
dec
enter
xchg
add
inc
jb
cmp
hlt
insl
jecxz
test
lcall
pop
add
sub
or
push
adc
xor
add
aad
mov
sub
add
sub
cld
mov
jo
cltd
ss
test
push
es
outsl
xchg
add
dec
data16
pop
cmp
xor
add
ljmp
fs
push
or
adc
jp
mov
insl
push
imul
inc
xchg
jp
cmp
pusha
dec
es
jb
orb
bound
cmp
outsb
addr16
cmc
loopne
lcall
popa
scas
mov
dec
rclb
dec
fisttps
insl
je
sahf
and
jo
clc
push
test
addr16
pop
push
nop
xchg
roll
add
add
cmpsb
outsb
rcrb
mov
loope
orl
in
inc
mov
les
jne
add
out
xchg
add
add
lods
sub
cmp
push
adc
xchg
adc
pusha
xchg
xor
int3
mov
add
inc
inc
add
adc
stos
add
inc
sub
loope
sub
pop
adc
adc
call
pusha
aam
clc
jne
pusha
ficoml
push
mov
jp
adc
push
pushf
clc
or
add
push
aam
nop
ja
arpl
jno
test
inc
shll
pop
sub
add
les
inc
lret
add
je
mov
imul
or
repz
or
test
mov
dec
mov
add
ja
push
inc
into
sub
inc
jns
jb
xor
add
daa
lcall
jge
add
ds
rolb
sahf
hlt
mov
push
mov
inc
adc
jecxz
loop
inc
inc
jnp
add
xor
imul
add
inc
cmp
sub
scas
hlt
dec
sub
aam
add
arpl
btcl
loopne
test
push
out
jge
sbb
dec
mov
add
movsb
add
out
inc
jbe
ds
pslld
mov
subl
notl
add
cmp
inc
xchg
and
add
mov
mov
repnz
adc
inc
xorb
addps
add
push
and
lahf
or
jo
inc
stos
cmc
mov
jns
xchg
je
loopne
movsb
cmpsb
cmp
lock
leave
inc
cltd
mov
jle,pn
add
bound
imul
add
test
adc
add
inc
cmp
dec
sub
mov
dec
pop
push
adc
mov
inc
enter
cmpsl
sbb
movsl
or
cmp
cmpsb
xor
add
out
cmp
dec
mov
inc
jne
push
mov
pop
mov
mov
scas
sbb
int
adc
in
pusha
add
enter
inc
add
sub
adc
and
push
jns
or
out
lods
mov
push
mov
pop
mov
rcr
push
in
xor
js
stos
sbb
fldcw
fimuls
pop
pop
or
mov
test
add
in
adcb
scas
add
loopne
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
pop
mov
popf
int
adc
inc
loopne
and
push
jne
add
jl
getsec
sbb
cmp
lcall
push
pop
aad
fistps
jmp
cmp
sbb
push
mov
movl
lods
mov
test
scas
out
out
in
dec
movsb
in
shl
pop
cmp
pop
inc
sub
xchg
push
test
inc
lret
loope
cmp
xor
jg
lahf
fnstcw
sbb
add
aaa
sahf
inc
add
dec
lahf
push
pop
pop
mov
xchg
shr
loopne
xchg
ds
xchg
add
leave
and
add
jmp
stc
mov
sti
andl
pop
int3
or
cmp
insl
add
mov
xchg
call
cmpsb
or
mov
in
add
sbb
push
xchg
decb
subps
and
xchg
adc
lret
add
sbb
xor
sahf
xchg
mov
add
xchg
xor
daa
sbb
and
lock
pop
mov
xchg
out
daa
mov
push
mov
mov
leave
add
loopne
xor
daa
jbe
js
pop
dec
xorl
mov
leave
inc
xlat
push
xchg
aaa
mov
add
test
iret
lock
hlt
add
lock
clc
imul
dec
cmp
add
sub
mov
ret
rol
fsub
add
aas
cmp
add
orb
cmpsl
adc
xchg
rorl
xor
in
or
je
xor
inc
in
dec
add
js
jp
jl
add
sbb
xor
popf
dec
add
pop
lahf
fs
pop
sub
jae
subl
hlt
jle
jl
add
xchg
xor
push
inc
addr16
adcb
outsl
out
jne
mov
cmpsb
lock
hlt
int
lcall
add
or
pop
sarl
sti
cmp
repz
add
push
fcoms
jbe
adc
push
bnd
add
popf
cmp
cmp
ss
leave
pop
or
and
push
insl
cmp
mov
loope
cmc
jmp
dec
adc
cli
and
ficomps
xchg
mov
daa
fiaddl
cmp
leave
shl
jnp
and
jb,pt
je
sbb
pop
aas
lods
popf
les
xor
push
sbb
push
add
add
jb
je
sbb
xor
incl
sub
pop
loop
movsb
aas
lods
jl
push
mov
nop
daa
xchg
dec
xchg
xchg
repnz
movsb
add
mov
add
add
xchg
push
mov
aaa
roll
dec
jecxz
repz
daa
inc
outsb
addr16
jle
jle
jle
add
es
aaa
rcrb
dec
push
push
pop
cmp
xor
shl
arpl
out
icebp
add
adc
daa
call
lock
hlt
pop
clc
cld
jb
je
jbe
js
jp
add
jle
enter
mov
sarb
fidivrl
cmp
cli
adc
cmp
cmp
add
sbb
cmp
push
lahf
inc
orl
int3
push
push
jb
aas
orb
xchg
iret
lcall
iret
mov
sub
adc
cli
xor
or
and
int3
lock
cld
dec
in
jp
mov
cwtl
call
jp
xlat
jbe
dec
lock
sbb
push
sub
cmp
inc
nop
dec
rorb
jno
lock
hlt
push
cld
xor
clc
nop
cld
cwtl
cld
mov
cld
mov
cld
sar
fdivr
xor
call
dec
fcoml
or
mov
lock
sub
pop
push
inc
icebp
push
cli
sbb
stos
shl
enter
fmuls
add
lock
mov
adc
addr16
inc
sub
cmpsl
xor
cmp
push
je
jbe
js
jp
jl
jle
dec
mov
xchg
aas
stos
aas
mov
aas
loopne
clc
testl
add
sub
xor
xor
sbb
stc
cmp
inc
sbb
push
lahf
push
adcb
cld
movsb
cmp
pop
cld
lcall
hlt
js
loopne
aas
jb
je
jbe
js
and
jl
jle
lret
push
fstps
pop
jmp
push
stc
mov
test
aas
mov
mov
mov
rolb
clc
enter
loopne
add
mov
add
or
pop
push
adc
push
clc
cld
pop
in
call
jbe
insb
shll
je
orl
mov
sarl
enter
shrb
jo
cmp
or
or
cmp
adc
cs
and
and
sub
cmp
pop
jmp
push
stc
je
js
jl
cmp
test
ja
cld
enter
sar
aam
fdivr
fmull
xor
jl
cmpb
sbb
add
loope
jmp
add
je
inc
cld
fs
insb
mov
js
jl
or
lds
repnz
ja
shl
aam
fdivr
fdivr
loopne
in
add
xorb
xchg
and
ret
jp
xor
aaa
cmp
cmp
cmp
andb
xchg
mov
cmp
enter
aam
fmuls
fmull
cs
in
call
rolb
and
add
xor
cmp
push
add
inc
repnz
jmp
xorb
ds
aas
mov
aas
sarb
aas
call
aas
hlt
aas
clc
add
sti
test
adc
or
inc
shlb
cmp
push
in
call
notl
mov
xchg
xor
add
pop
hlt
mov
inc
pop
ss
adc
or
add
adc
and
das
dec
pop
xor
mov
test
cmpsb
and
push
xor
add
loope
adc
adc
ja
add
and
and
sub
sub
inc
xchg
fildll
sub
addr16
repnz
push
cmp
jb
sub
add
fidivrs
xchg
sub
jo
pop
movsb
divps
dec
or
cmp
cmp
nop
ds
jle
add
loopne
mov
inc
sahf
jo
dec
incl
push
cld
mov
hlt
mov
jl
push
mov
jge
xchg
pop
mov
add
inc
daa
dec
inc
push
xchg
push
cmpsl
shrl
sbb
popa
jbe
js
jp
ret
adc
add
cmp
push
sbb
push
add
add
fnstcw
out
stc
sbb
push
add
ds
insb
mov
sahf
imul
mov
add
push
in
mov
dec
lods
add
sub
jb
dec
add
fs
mov
nop
test
sub
xor
popf
addl
xchg
push
cli
xchg
add
jbe
loopne
out
mov
sarb
xchg
insb
sbb
clc
cmpl
and
pop
pop
adc
js
xor
clc
cltd
cld
add
or
inc
pop
lret
stc
ror
rcr
fabs
loope
and
repnz
incl
clc
sbb
xor
add
cvtps2pd
aam
arpl
daa
pop
jne
jle
movsb
sub
cmp
or
loope
add
sub
cmp
or
ret
pop
pop
cmp
iret
push
or
cwtl
add
loopne
fldcw
cmp
cmp
add
add
jnp
popf
out
cmp
loope
inc
push
leave
es
add
aam
sbbb
cmp
sahf
add
ja
jl
mov
es
test
mov
adc
xor
addl
lock
add
inc
or
or
sbbb
sbb
xchg
and
das
dec
aas
cmpsb
sub
add
insb
adc
outsb
jo
jl
xchg
lret
test
pop
test
mov
add
int3
rorb
jo
mov
pop
jb
enter
sbb
out
xchg
cmp
dec
add
pop
adcb
jb
je
add
lcall
popa
lods
pop
dec
and
in
mov
pop
nop
jns
scas
mov
mov
xchg
and
cmp
mov
inc
dec
fstl
xchg
xlat
inc
push
or
dec
mov
in
push
jmp
mov
adc
add
test
ret
addl
js
add
in
fisttpl
aaa
cmp
cmpsb
arpl
hlt
xchg
add
js
lret
ret
adc
loopne
enter
add
mov
push
sbb
inc
sbb
gs
outsl
add
stos
and
int
repz
cmp
pop
bound
jo
or
add
xchg
inc
add
gs
and
mov
adc
xchg
in
xor
xor
sub
loope
adc
dec
sbb
loopne
add
aaa
imul
jb
add
sahf
out
xor
outsb
ret
leave
pusha
cmp
cmp
cmp
addr16
jno
add
sub
jnp
rcl
nop
ja
test
add
in
call
sbb
mov
and
faddl
xor
or
jo,pn
sahf
movsl
add
fadd
test
cmp
mov
daa
mov
or
add
dec
rorl
xchg
mov
in
add
aaa
dec
cmp
mov
aam
cmp
cmp
aas
les
push
imul
stos
mov
fcompl
cmp
add
into
xor
pushf
pusha
enter
mov
add
in
add
cmp
push
dec
outsb
pusha
jne
inc
loop
add
aas
and
mov
cli
inc
jnp
add
and
jnp
lcall
add
or
mov
dec
xchg
xchg
sbb
add
xor
rol
cmp
out
fdecstp
loopne
cmp
pop
push
push
sbb
sub
loope
mov
pusha
inc
xchg
mov
in
add
add
adc
adc
sbb
das
and
xor
push
js
repz
jle
leave
push
xchg
or
popa
push
mov
nop
stc
xchg
sub
and
and
shlb
loopne
dec
in
femms
ds
iret
clc
inc
cld
fmull
cmp
loope
or
dec
xchg
rolb
inc
js
dec
dec
or
cmp
daa
ds
insb
cmpsb
pop
je
push
dec
jmp
cs
pop
xchg
mov
push
xor
push
aam
movsb
call
dec
rcll
loopne
cmp
pop
daa
and
inc
sub
pop
xor
pop
and
dec
push
xorl
or
loope
pop
xchg
sub
daa
pushf
mov
movsb
lock
lods
sahf
fs
nop
shlb
hlt
push
mov
adc
xchg
insb
add
imul
add
test
mov
mov
int3
add
rclb
cmp
add
call
push
outsl
add
jnp
mov
mov
test
or
ljmp
pop
add
sbb
push
add
dec
xchg
repnz
add
add
call
mov
or
cmp
push
mov
scas
pop
inc
or
jo
jbe
js
add
imul
insb
push
add
les
sub
add
ds
sub
cld
push
xor
insb
dec
add
or
xchg
mov
or
das
call
adc
push
addr16
xorl
mov
mov
mov
adc
inc
push
in
cmpl
mov
cmp
xchg
and
mov
rorb
push
xchg
ficomps
add
repnz
dec
stc
add
and
or
adc
and
dec
lods
lret
add
push
cmpl
imul
repnz
cmp
cmpsl
das
scas
pop
jnp
xchg
cmpsl
mov
in
mov
add
fdivrs
cmp
cmp
cwtl
hlt
add
out
inc
data16
es
hlt
aam
inc
xor
push
cmp
arpl
pop
add
sbb
xor
popf
sti
adc
or
add
xchg
testl
pusha
add
es
into
add
test
lret
add
loopne
test
fmuls
jle
mov
push
test
ss
roll
flds
mov
pop
cli
add
in
lock
add
mov
js
repz
jl
inc
dec
xorl
dec
mov
pop
mov
add
ret
rorb
cld
xor
bswap
dec
adc
sbb
add
popf
and
cwtl
sbb
sbb
xchg
das
in
add
xchg
cmp
shlb
je
mov
sti
add
lock
pop
bound
cs
xchg
xor
aam
add
in
call
sub
inc
cmp
dec
push
pop
aas
pop
dec
popa
lock
mov
in
xor
xchg
call
in
xor
add
jmp
sbb
sub
pop
push
sbb
loope
xor
add
or
jl
roll
arpl
mov
mov
in
call
lock
mov
fxch
ljmp
pop
pop
je
addr16
xchg
push
cmpsl
xlat
in
not
push
or
nop
repz
call
pop
cwtl
add
dec
sub
push
rol
and
and
jp
pop
pop
xadd
mov
mov
ret
xchg
decb
adc
aas
pop
dec
mov
pop
test
jb
pusha
mov
les
add
or
rcl
fcoms
xor
je
mov
add
jp
scas
and
fcmovu
sub
xor
mov
fld
push
sbb
pop
sbb
and
aas
in
push
add
aam
in
add
jbe
pusha
push
dec
out
sub
xchg
mov
pushf
add
mov
or
add
js
push
mov
mov
add
xchg
mov
add
jl
mov
in
loopne
lock
ss
add
addr16
out
pop
rolb
add
push
js
into
cmp
cmp
add
and
dec
clc
sub
xor
sub
mov
loopne
dec
test
jns
mov
jae
xorb
out
cmp
popf
lcall
jb
jns
add
int
das
sbbb
mov
add
aas
push
xchg
mov
loop
add
shlb
cmp
cmp
xor
pop
push
nop
xorb
cmp
push
add
popf
outsl
add
and
cmp
or
xor
dec
jnp
cs
aaa
jb
je
mov
les
add
mov
xor
xor
aad
fstps
add
xchg
jmp
cmc
add
mov
push
in
adc
sbb
adc
add
pop
in
xchg
sbb
lcall
add
cmp
add
in
cmp
push
mov
leave
mov
push
nop
test
adc
daa
in
mov
cltd
add
je
adc
add
push
popf
add
push
call
inc
cmp
fadds
ss
dec
ds
add
jnp
jg
pop
in
cmp
xchg
mov
mov
jbe
js
add
jl
pop
movsb
or
add
and
cs
repz
scas
fisttpll
cmp
cmp
adc
ucomiss
test
nop
mov
and
xor
or
lahf
sbb
call
sub
xchg
sub
sbb
xor
add
sub
das
add
aas
leave
inc
roll
dec
loopne
sti
add
push
call
mov
fsubs
enter
cmpps
clc
fmul
loopne
cmpsl
call
pusha
sbb
add
mov
xchg
cmp
daa
sub
mov
add
mul
or
lods
jbe
outsb
inc
test
iret
push
jne
add
daa
jb
dec
cmp
and
add
push
xchg
mov
fdiv
add
jo
add
and
inc
xchg
popa
add
cs
test
sub
ror
pop
ret
inc
inc
and
cmpsl
sbb
sub
js
jle
add
add
or
mov
leave
inc
rorb
pop
dec
fs
test
cmp
push
in
add
cmp
cli
sbb
dec
jae
add
mov
lock
add
out
xchg
std
cwtl
rclb
sbb
inc
repnz
divb
dec
addr16
daa
xchg
lods
fwait
add
stos
in
test
loopne
add
cld
setl
xchg
or
movsb
repnz
push
mov
icebp
cmp
in
clc
add
cli
and
add
xor
inc
dec
in
jnp
push
mov
cmp
aas
xchg
sar
daa
sar
ss
call
and
and
add
xor
cmp
inc
icebp
dec
cmp
pop
das
arpl
jb
xchg
mov
movd
stos
iret
mov
shl
xlat
jmp
icebp
add
or
add
fldcw
loope
jmp
lds
inc
loopne
cwtl
cld
lahf
xchg
stos
mov
mov
pop
popa
xchg
dec
leave
pop
add
dec
das
jae
mov
aas
popf
daa
stos
les
add
nop
push
dec
je
fcomps
lcall
add
lock
cld
in
add
test
mov
xor
add
lock
lahf
xchg
punpckhdq
ja
jb
adc
xchg
testb
test
cmpsl
arpl
add
test
jmp
add
push
test
lcall
aam
leave
scas
fdivrs
push
push
add
ljmp
pop
loop
aas
repnz
adc
adc
dec
es
jno
pushf
or
xchg
pusha
pop
shl
stos
repz
lock
cli
orl
ret
dec
jmp
sub
cwtl
ja
inc
mov
jl
dec
push
dec
add
dec
loop
push
fmuls
jle
and
jl
add
leave
mov
jg
loope
jmp
or
cmpsl
into
xor
call
cmp
cmp
cs
add
into
shl
add
clc
sarb
testb
cmp
cmp
cmpsl
imul
out
stc
and
jl
gs
or
leave
mov
ljmp
add
bswap
cs
inc
push
inc
jb
mov
clc
add
or
shl
iret
cmpb
sbb
pop
add
icebp
xchg
and
mov
ljmp
jno
aam
cli
dec
pop
push
mov
leave
add
js
jl
jle
pop
sbb
enter
xchg
sarb
divps
sub
jge
inc
sbb
stc
lods
popf
mov
push
cli
hlt
in
pop
nop
cmp
xchg
add
cld
fisubs
jae
jle
nop
lods
sbb
aas
mov
daa
clc
sti
addl
jbe
iret
pop
aas
or
cld
jle
pop
mov
leave
shll
sbb
xchg
outsb
cld
andb
mov
lahf
out
test
xor
int
rcll
xchg
jo
ss
add
aas
imul
movl
orl
fcmovb
pop
cmp
sub
push
ret
rclb
imul
mov
fcomps
lods
data16
adcb
bound
add
pop
dec
jnp
push
mov
mov
mov
call
add
imul
pop
test
mov
out
sub
jb
pop
mov
fdivs
pop
fs
push
iret
leave
inc
ror
fcmovnb
call
cmp
cmp
sub
js
xchg
scas
xchg
sbb
cmc
loopne
or
loop
add
stos
nop
mov
lods
push
fildll
adc
clc
push
add
adc
adc
xor
push
icebp
mov
xor
outsl
xchg
xchg
loopne
pushf
daa
add
ret
cmp
out
out
loope
aas
cmp
lret
xor
add
xchg
stos
mov
aam
jb
push
in
mov
dec
sti
mov
add
xor
test
das
sub
dec
dec
or
push
mov
and
stc
cli
cmp
jbe
sbb
int3
xchg
pop
stc
fmuls
add
fucomip
pop
enter
fwait
inc
jge
loopne
cmovnp
mov
jle
mov
push
lcall
out
out
xchg
inc
repnz
push
gs
sahf
add
pop
sub
cmp
add
andl
in
les
in
push
add
mov
fcompl
dec
add
xadd
leave
outsb
shll
add
mov
and
out
mov
sbb
notl
dec
xchg
add
add
or
dec
push
add
fdivl
push
adc
and
add
pop
movsb
cld
dec
ret
mov
lock
jl
sbb
push
xor
popf
xor
loopne
cmp
clc
add
enter
add
cmc
es
sub
andl
adc
xchg
sbb
pop
out
pop
and
lock
cld
push
dec
jecxz
add
imul
cmp
stc
out
nop
push
adc
push
dec
pop
and
inc
dec
sub
mov
cmp
js
aas
sahf
pop
lods
push
lahf
enter
in
mov
add
add
out
loope
cmp
cmp
cmp
add
xchg
aas
push
sub
cmp
adc
in
das
add
sub
push
xor
add
lds
mov
jmp
lahf
rcll
inc
adc
or
insb
and
add
imul
add
stos
mov
or
xorb
ljmp
sbb
dec
popf
into
daa
fadds
cmp
gs
jns
lea
mov
add
mov
lds
imul
mov
xlat
or
lock
mov
xchg
jle
fistps
pop
out
sub
mul
sti
mov
hlt
test
and
mov
mov
sub
in
popf
dec
fsub
add
cmp
add
mov
in
dec
orb
jmp
push
fisubrs
add
or
jo
addb
inc
popa
fs
movsb
daa
add
pushf
mov
je
es
mov
add
out
in
aam
jecxz
repnz
cld
pop
pop
sti
xchg
add
and
jo
dec
add
or
cmp
dec
daa
add
pushw
mov
ret
push
clc
into
loope
jge
add
nop
testb
insb
les
cmp
pop
outsl
push
int3
jle
pop
js
cmp
add
sbb
ss
xchg
adc
loope
add
aad
add
or
or
sub
cmp
add
rorl
jl
adc
adcb
cs
add
cmp
loopne
push
add
sbb
je
dec
or
test
scas
mov
cwtl
or
or
call
xchg
or
loope
mov
cmp
mov
jle
shl
push
lahf
sarb
ja
push
mov
imul
pop
mov
stos
hlt
in
push
pop
leave
lret
xlat
jle
push
clc
add
xchg
cmp
mov
js
pop
mov
mov
jmp
push
mov
leave
andl
pop
mov
hlt
push
add
test
aaa
push
ljmp
cltd
fadds
cmpl
mov
push
mov
fsubp
andl
cli
insl
add
xor
stos
rolb
pop
es
aas
bound
popw
lcall
and
jge
add
push
icebp
xchg
or
call
pop
cmp
pop
mov
jle
jb
cmpsl
inc
jle
or
pop
push
aas
adc
mov
pusha
idivb
cmp
add
and
or
or
shll
fcompl
cmp
hlt
data16
ret
dec
enter
add
mov
sub
sub
sbb
xchg
push
int3
dec
jmp
sarb
je
jbe
js
sbb
cwtl
cld
sub
sbb
add
es
jne
push
test
add
in
add
ds
mov
push
add
lahf
xchg
daa
add
inc
inc
fs
rolb
mov
fdivl
cmp
mov
leave
add
int3
ja
add
adc
push
lahf
mov
xchg
in
loopne
jp
loopne
xchg
mov
jle
out
fiaddl
mov
adc
push
sarl
or
mov
adc
andb
sarl
clc
insb
out
jle
mov
pop
lock
adcb
lcall
dec
push
xchg
ss
sbb
push
ds
xlat
fsubs
add
xor
inc
sbb
movsb
cmp
mov
xchg
xor
insl
out
in
into
dec
add
sbb
cmp
sub
and
sub
inc
mov
loop
cmp
daa
cmp
icebp
call
add
push
inc
jo
or
cmp
test
add
pop
cmp
add
xor
add
sbbl
aaa
popf
andb
roll
repz
sub
add
dec
add
gs
les
movb
loopne
aas
out
int3
xchg
addb
or
or
xor
leave
mov
in
inc
add
or
mov
adc
mov
mov
faddl
or
addr16
dec
loopne
mov
pop
shlb
scas
mov
add
andb
jo
add
adc
out
jmp
pop
mov
cli
add
or
or
push
int3
in
cli
dec
ds
push
subb
pop
add
lock
jae
or
test
mov
mov
jb
and
add
setp
leave
sbb
cli
dec
sbb
sbb
pop
cmpb
rolb
jnp
aas
xchg
popl
and
jecxz
xchg
inc
cld
cli
mov
push
add
orl
jo
pop
pop
xor
xchg
pop
and
imul
leave
test
mov
addb
jo
xchg
xor
adc
mov
push
rorl
mov
add
sbb
pop
cld
sbb
pop
mov
shl
lret
in
add
pop
cmp
call
push
pop
sbb
inc
aaa
dec
push
ret
leave
ds
or
ljmp
mov
fadd
and
cmp
cmp
lods
mov
xchg
cld
jb
je
add
cmp
gs
mov
jns
mov
inc
add
push
dec
pop
inc
add
paddusb
insl
cmp
jns
nop
dec
inc
int3
test
add
in
rcrl
xor
cmp
push
push
sub
aas
dec
and
es
dec
emms
in
pop
andb
aam
fsubrs
mov
mov
cmp
cmp
and
aaa
fdivrl
call
test
loop
xchg
test
pop
and
add
fcoml
push
lock
pop
add
fs
pop
lcall
push
inc
mov
dec
add
mov
mov
add
jne
and
inc
icebp
add
imul
fidivrs
pop
dec
lahf
push
enter
pop
andl
fs
jo
jle
and
jl
leave
test
mov
je
pop
mov
lods
and
int3
roll
insb
add
add
add
in
mov
shll
add
faddl
repz
inc
inc
dec
add
push
mov
add
pop
test
mov
pop
test
andb
sbb
add
and
push
call
xchg
dec
mov
mov
jl
and
adc
icebp
mov
into
sahf
js
pop
pop
jo
xchg
aas
cwtl
mov
add
repnz
add
cld
lret
stc
int3
sub
push
rol
loop
inc
movsl
xchg
add
push
cmp
sub
xor
push
inc
in
jle
faddl
je
js
mov
push
xchg
or
xchg
cmp
outsl
inc
ret
test
ret
cli
lahf
sub
aas
xor
cmp
cmp
add
mov
mov
ret
fmull
lock
mov
mov
js
xchg
out
cwtl
xchg
mov
nop
pusha
call
inc
adc
xchg
nop
mov
mov
add
sub
mov
mov
push
nopl
fchs
andl
xor
mov
fsubrl
sbb
adc
sub
enter
push
sub
mov
lea
inc
push
push
push
pop
inc
stos
out
dec
test
es
jne
inc
popa
sub
push
call
enter
cmp
mov
cmp
movsb
push
and
push
add
fldl
clc
ret
or
add
cmp
loopne
sbb
inc
add
or
and
add
orb
sub
ret
add
orb
or
fstpt
xchg
mov
lea
add
sysexit
test
inc
and
mov
add
push
push
add
or
push
sub
lcall
mov
add
mov
jle
pop
push
pop
pushl
movb
xlat
popl
test
push
push
add
push
stos
mov
add
xor
or
add
js
lods
cmp
fisttpll
rorl
jmp
dec
jmp
sub
add
stc
mov
loopne
pop
pop
pop
bound
lods
dec
movsb
ss
sar
rep
add
sahf
shlb
test
pushf
inc
addb
test
jge
add
dec
roll
call
xchg
stos
dec
ret
faddl
sbb
sub
je
mov
adc
and
or
sub
aam
jge
lods
add
out
shr
enter
into
or
test
ret
and
sub
or
cmpb
add
ljmp
push
push
mov
loop
in
sahf
add
popa
movsl
mov
and
test
and
inc
leave
cmc
ret
push
dec
lock
sbb
push
push
add
adc
outsb
dec
and
mov
push
xor
add
jbe
stos
sbb
sbb
jmp
sub
cli
mov
or
movsb
mov
and
fiaddl
push
stos
mov
xor
jg
mov
push
mov
pop
jne
outsl
and
mov
xor
pop
jecxz
lcall
and
cmp
mov
mov
pop
add
or
loop
or
pop
jnp
stos
rolb
adc
push
add
pop
jmp
lods
push
adc
pop
andl
xor
leave
call
adc
f2xm1
jmp
xchg
mov
push
push
cmp
add
adc
add
fnstcw
and
ret
xchg
mov
mov
add
mov
jge
in
testb
daa
xor
mov
xor
cmp
push
in
rolb
stc
les
pop
push
cwtl
mov
bound
add
mulb
xchg
sub
add
fucomp
adc
jae
arpl
outsl
clc
and
sbb
in
cmpsl
dec
mov
js
mov
add
adc
test
cmc
sbb
jo
pop
xchg
lods
mov
int3
lret
or
push
or
rolb
jnp
dec
add
jne
insb
movsl
out
flds
push
mov
mov
mov
lret
ds
pop
mov
inc
loopne
or
push
in
xchg
in
sbb
fwait
jmp
fstps
mov
ja
leave
mov
push
inc
loopne
fld
add
fmuls
enter
pushf
lock
dec
jmp
or
leave
add
aas
cmpsb
add
mov
sbb
jb
loopne
add
push
movsb
jo
lock
mov
bt
bound
movsb
cmp
lgs
or
loop
cmp
mov
sub
ret
fstl
cmp
adc
add
xchg
outsb
imul
dec
mov
add
jo
fisubl
cmp
mov
or
push
mov
data16
add
pusha
enter
add
pop
aad
jbe
rorb
in
inc
jmp
popa
sbb
aam
push
neg
sub
nop
jns
inc
mov
push
sub
push
add
sbb
in
in
mov
fs
pop
ret
add
fsts
imul
pusha
xchg
subb
insl
call
cli
add
ret
scas
shrb
pop
mov
jo
dec
cmp
xor
aad
push
mov
addr16
shr
inc
sub
int
push
rcrb
jmp
and
aam
scas
add
repnz
add
sbb
les
dec
mov
call
fwait
and
popl
or
stos
push
push
push
inc
add
add
out
mov
pop
xorl
cs
mov
cmp
cmpsl
sbb
inc
imul
enter
cmp
sbb
adc
sarb
sbb
jo
call
adc
pop
out
inc
loop
cli
mov
cmp
push
mov
mov
add
jns
push
sub
mov
rcrl
xor
pop
sub
inc
ret
mov
sub
jl
sbb
mov
pop
jns
xor
xchg
sbb
jecxz
movsb
test
pop
or
test
decb
add
xor
out
adc
add
dec
push
xlat
popa
jle
sbb
pop
cmp
mov
addb
mov
pop
mov
rcll
inc
mov
stos
enter
jle
add
xor
pop
clc
mov
adc
jne
add
inc
or
fdivs
cmp
pop
mov
loopne
push
cmp
negb
fnstsw
mov
push
mov
push
add
lods
xor
in
or
ja
addl
cmp
cmp
push
cli
add
inc
adc
mov
push
mov
sub
andl
pusha
lods
or
cmpb
mov
mov
add
pop
inc
add
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
add
imull
cmc
rep
or
jmp
adc
adc
cmp
jae
push
inc
add
inc
lock
mov
add
add
xor
shr
add
roll
push
mov
adc
cmp
mov
ret
jns
mov
jae
insb
cmc
sub
mov
push
imul
inc
lds
outsl
arpl
inc
mov
lea
push
jecxz
mov
ret
js
sbb
icebp
jae
cmpsl
inc
jne
mov
sub
sti
push
loope
inc
push
ja
jo
imul
dec
loopne
inc
push
and
push
cmp
loope
mov
ds
mov
jns
push
clc
and
xchg
rcrb
bound
xchg
cmp
imull
out
insl
lea
cwtl
and
bound
mov
push
fs
mov
mov
add
rorb
in
mov
flds
inc
cltd
icebp
inc
sti
ljmp
int
jg
xchg
mov
dec
outsl
out
xlat
dec
push
dec
repz
pop
mov
add
add
add
add
push
xchg
add
bswap
js
pushf
mov
movsl
or
imul
sbb
lods
movsb
fwait
shlb
adc
arpl
scas
insl
popa
in
cmp
int3
ljmp
mov
mov
and
inc
sarl
xchg
sbb
es
popa
xchg
insb
shlb
xchg
ljmp
pop
mov
lret
lds
aas
test
cmp
sbb
sbb
and
mov
adc
xchg
add
sbb
inc
lret
xor
out
mov
sub
test
aaa
push
pop
andb
ja
insb
jo
mov
ja
push
or
arpl
jb
arpl
icebp
pushf
inc
pop
lods
test
testl
add
out
xor
divb
bound
cltd
rcll
ja
xchg
pushf
pop
xchg
push
xor
aad
hlt
movsb
cld
add
mov
lret
push
adc
mov
dec
aaa
addps
out
out
lcall
mov
dec
out
in
xchg
cmp
loope
sub
inc
add
cmp
pop
cmpsl
cmpsl
cltd
mov
and
push
xchg
ret
sbb
add
push
loop
jb
aam
or
dec
sub
dec
ficoms
in
sbb
popa
sbb
mov
adc
mov
icebp
cmp
dec
fs
punpckhwd
adc
xchg
lcall
test
ljmp
jmp
fcomps
jns
jns
mov
xor
adc
icebp
scas
mov
xlat
repz
pusha
mov
push
and
add
add
mov
push
iret
fimuls
xchg
mov
lods
out
push
jmp
dec
insl
xlat
rcr
jg
sub
je
pop
push
insl
mov
mov
jb
or
test
dec
ljmp
pop
dec
aam
adc
scas
adc
lods
into
dec
push
rclb
inc
pop
aaa
sahf
mov
clc
cmpsl
leave
cmpsb
xor
add
xor
pop
lret
leave
ss
aaa
mov
mov
mov
dec
mov
cmc
addr16
dec
xor
jle
sub
cli
ficoml
sarb
into
xor
test
and
dec
pop
push
je
lret
clc
rcll
add
sti
cmpsl
out
dec
push
ret
jno
stos
mov
and
jecxz
pushl
push
shl
ror
pop
or
adc
pop
enter
xchg
icebp
inc
stos
int3
roll
cmp
xor
jb
lds
out
jecxz
and
cmpsl
xchg
mov
xlat
sbb
xchg
es
test
cmpsb
dec
inc
push
add
jb
jmp
stc
dec
arpl
xor
push
xchg
out
in
pop
jb
xacquire
mov
push
fsubl
sbb
jb
push
ss
test
xchg
sahf
inc
sub
jge
rcl
data16
movsl
inc
cmpsb
insb
arpl
lds
cmp
add
in
sbb
xchg
ret
jmp
mov
dec
inc
dec
les
aad
mov
scas
test
pop
and
nop
inc
xchg
call
sbb
loop
jmp
fistps
test
inc
mov
jbe
jne
cli
cmc
dec
cli
pop
fstpt
or
jle
sub
inc
inc
fdivrl
in
cmpsl
pop
or
pushf
shrb
jns
jmp
fwait
push
adc
xor
inc
dec
push
mov
xchg
hlt
nop
test
cli
xchg
int
or
pusha
cmp
lret
mov
imul
imul
or
push
into
fisttps
rorl
mov
movsb
fistpl
mov
popf
leave
repnz
push
adc
mov
cmpsb
jno
fsubrs
jb
add
mov
push
mov
adc
push
rcll
fwait
mov
and
add
add
cltd
int
cmp
jle
repz
dec
add
jns
sbb
ret
sti
pop
adc
inc
imul
mov
xchg
dec
adc
and
sarb
jmp
add
xchg
pusha
xlat
fstpt
inc
push
lahf
pop
fucom
insb
hlt
jo
subb
addr16
mov
xor
sub
pop
mov
movsl
add
sbbb
mov
pop
adc
scas
sbb
outsb
jno
adc
movsl
pusha
sbb
xchg
nop
or
rolb
mov
cmp
scas
mov
je
aad
add
aaa
movsl
inc
xchg
or
les
add
dec
popf
fstp
xchg
outsb
repnz
add
push
lcall
dec
jne
adc
sbb
aaa
dec
adc
pop
cmpsb
cmp
lret
sub
daa
clc
test
jnp
lock
pop
adc
adc
idivl
mov
es
xor
test
cltd
or
push
adc
test
add
out
dec
inc
jno
mov
and
enter
shlb
sarl
sbb
or
fsubrl
loopne
mov
scas
sub
in
and
shlb
mov
stos
daa
outsb
xchg
and
mov
clc
add
sti
lods
or
test
int
sbbl
inc
pusha
pop
xor
add
adc
sub
or
rcl
cli
cmp
sbb
xchg
js
shl
insb
mov
out
pushf
mov
popa
movsb
cwtl
mov
in
dec
pop
loop
and
aad
in
ljmp
mov
jg
pop
lcall
lods
clc
inc
inc
fst
pop
out
ss
mov
stos
and
adc
or
mov
sub
sbb
leave
incl
ljmp
push
sbb
jp
jle
outsl
out
pcmpeqd
pop
adc
imul
lea
pushl
cmp
jne
test
cmp
lea
ljmp
pop
rorl
lds
xchg
adc
dec
xor
ror
push
cmp
fimuls
fwait
ds
outsb
pop
and
test
call
adcb
test
fdivrs
cmp
cmp
cs
or
outsl
fdivrl
fcmovb
outsl
adc
test
fwait
jp
cmpsb
add
jne
in
xor
das
and
cmc
jmp
arpl
add
cwtl
push
jg
pop
push
xor
fsubrl
adc
add
or
cmp
sbb
push
icebp
push
mov
add
flds
pusha
cld
in
ljmp
adc
adc
fcomi
mov
and
push
pop
out
mov
icebp
fisttps
test
adc
in
xchg
roll
lods
rcll
leave
mov
ljmp
pusha
leave
in
xchg
xchg
cmp
adc
inc
sbb
inc
jb
adc
xchg
push
scas
or
push
fs
push
inc
sub
outsb
fcmovnu
into
mov
lods
inc
jge
cmpsb
sahf
int3
cmp
jae
xor
jmp
hlt
mul
dec
or
cld
loope
or
mov
lock
cmp
jp
movsb
movsb
add
sbb
xor
sub
mov
test
cmc
fcompl
movsl
mov
test
push
les
dec
xchg
and
popf
push
ds
xor
pop
addr16
jle
dec
fadd
adc
mov
inc
jmp
mov
lret
outsb
pop
lods
push
xor
mov
sahf
sarl
jle
cmpsb
gs
loope
sbb
cmp
fisttpl
mov
ja
dec
dec
dec
pop
call
shlb
ficoml
jb
lcall
xchg
in
sahf
jp
in
dec
mov
insl
mov
fstpl
insl
xchg
inc
xor
push
lea
and
sti
test
test
xor
mov
mov
or
xchg
mov
push
sarl
stos
shll
xchg
pop
sbb
enter
xlat
xor
xlat
shl
stc
js
and
jge
xor
inc
jl
push
je
jne
or
xlat
dec
lds
xor
repz
jb
movsl
shll
mov
jbe
lods
jl
aas
cmp
fisubs
popf
in
or
lock
or
fsubrl
mov
mov
stos
jns
mov
addr16
or
rolb
daa
inc
or
jmp
bound
stos
push
lret
stc
psraw
mov
int3
push
push
test
pop
int
call
xchg
push
dec
imul
and
and
orl
mov
movsb
xchg
mov
cmpb
test
cmp
add
push
fucomp
xor
fisttpl
mov
sub
push
adc
mov
jmp
sbb
inc
loop
add
js
dec
mov
dec
jo
mov
gs
or
sub
in
stos
mov
ret
jmp
mov
stc
mov
and
and
inc
aaa
sub
pop
pop
shlb
adc
jmp
xchg
xlat
push
mov
mov
je
xchg
mov
push
outsb
loope
clc
jb
nop
pusha
fwait
add
gs
mov
xor
jg
pop
daa
mov
insb
dec
pop
mov
cmp
scas
jmp
and
add
add
pop
mov
rclb
data16
int
jb
sysenter
dec
xchg
es
xor
movsb
xchg
mov
cmc
sub
add
sbbb
and
aad
pushf
hlt
insb
xor
gs
sbb
ljmp
call
cli
adc
fidivrs
jnp
push
dec
pop
ror
dec
and
fcomps
imul
rolb
outsl
adc
sbb
push
cs
ret
jns
daa
call
ret
mov
testl
mov
es
push
sbb
mov
ficomps
cmp
mov
in
adc
ja
xchg
dec
repz
js
pop
mov
xor
bound
or
inc
ja
push
movsl
movsl
test
test
out
ljmp
lods
cmc
xchg
sub
and
dec
jnp
xor
pop
fwait
aam
ljmp
les
imul
xchg
enter
jae
inc
jmp
insl
mov
ja
fsubs
mov
or
imul
test
lcall
jno
sub
dec
lock
cld
push
popf
iret
aaa
jmp
adc
stos
pushf
push
mov
fmul
lcall
push
sar
mov
add
jg
fwait
in
cmpsl
and
std
in
add
movsb
mov
les
cld
mov
iret
add
subl
iret
movsb
mov
test
into
rcll
in
and
inc
int
outsb
popa
or
lahf
jp
out
testb
test
mov
jmp
mov
lcall
jle
mov
dec
inc
arpl
insb
mov
sbb
int
daa
dec
or
dec
xor
sub
insl
and
jbe
cmp
out
inc
mov
iret
sub
js
add
ss
ret
lret
push
sbb
cmpsb
or
in
mov
insl
jno
jns
pushf
jp
aam
aaa
mov
ss
inc
lods
fstpt
insb
lods
fstpt
es
imul
adc
aas
dec
and
xor
jnp
xlat
cmp
iret
inc
add
dec
or
scas
dec
mov
sbbb
mov
fs
jg
inc
std
pop
xor
or
pushl
cmp
test
stos
mov
mov
cmp
hlt
push
jmp
pop
sahf
xchg
or
pop
cmc
push
rcrb
xchg
jno
dec
aas
outsb
push
arpl
jb
sbb
lret
mov
in
inc
xchg
and
push
cmc
repz
xchg
insl
arpl
lcall
push
xor
mov
aad
sbb
shll
out
sub
loope
rclb
cld
xor
jmp
sub
dec
dec
cwtl
int3
sbb
out
cmp
pushf
outsb
sub
dec
aas
rolb
mov
add
or
pop
les
fnstenv
xchg
mov
mov
and
xchg
fidivrs
lahf
shll
mov
cmp
dec
jb
test
xor
insb
inc
jne
test
or
mov
mov
sbbb
xor
ds
test
or
dec
std
xor
lods
mov
mov
sahf
aam
rcrl
aaa
fstpt
add
frstor
inc
jl
mov
push
inc
inc
push
xchg
xor
and
into
lret
push
adc
rcrb
mov
mov
ret
ds
jge
adc
int
mov
inc
mov
cmpl
pop
aas
sub
and
clc
pop
mov
adc
inc
mov
int3
xor
inc
jmp
xchg
add
mov
jl
loope
shll
repnz
pop
test
je
into
lcall
cmp
fldcw
mov
outsb
fistl
cwtl
fs
divl
inc
cltd
inc
push
xchg
xchg
dec
stc
xor
inc
pop
int
xchg
jno
adc
jp
mov
jmp
mov
jmp
pop
loop
mov
imul
fimuls
popa
jl
dec
adc
out
inc
jle
jg
popl
ret
cli
pop
mov
mov
ljmp
fwait
ret
inc
icebp
pop
xor
fadds
mov
int
sub
xor
imul
sub
and
mov
sub
mov
call
mov
les
jl
cmp
fdivs
push
cli
clc
fists
xchg
adc
dec
in
mov
mov
fisttpl
jg
pop
mov
add
rorl
xor
addr16
pop
xor
nop
imul
cmc
cmp
shll
mov
xchg
sti
or
sbb
loope
push
inc
repz
push
mov
sub
lcall
sub
imul
aam
scas
loop
xchg
sub
ret
rorb
inc
mov
lods
aaa
jo
dec
div
hlt
pushf
push
xor
sbb
fdivrs
std
pop
inc
pop
push
clc
jl
dec
mov
lret
mov
inc
push
cwtl
jo
in
nop
and
sub
and
addr16
push
nop
adc
mov
insl
in
dec
xchg
lods
mov
cmp
mov
jmp
dec
insl
test
xchg
stos
int3
jbe
mov
cs
div
lea
popa
popf
fdivr
jbe
and
push
loopne
and
ret
push
jae
shrl
xchg
sub
out
add
ret
loopne
cmp
jge
mov
lcall
lds
std
push
shrb
push
xchg
mov
or
enter
mov
sbb
xor
sahf
push
outsl
inc
aaa
lds
and
inc
adc
xchg
stos
pushl
push
sbb
and
fistps
mov
mov
test
xchg
dec
lds
scas
addr16
fiaddl
jo
test
shrl
repz
ss
aaa
daa
fldt
popf
pop
mov
popa
dec
cmp
pop
xchg
xlat
jae
or
cmpsl
in
insb
fcmove
pop
dec
rcrb
ja
dec
sub
jns
and
mov
int3
push
cmp
fcoml
out
js
es
dec
movq
mov
mov
mov
inc
sbb
loop
adc
pop
mov
xchg
jmp
aaa
shrb
popa
push
and
dec
repnz
mov
xlat
lcall
not
jnp
and
push
aam
ret
mov
adc
outsl
mov
dec
and
shrb
cmp
dec
lcall
icebp
xor
mov
aaa
shl
cmc
jg
ret
jmp
mov
call
jmp
or
das
dec
daa
bound
shll
fsubs
xorl
or
push
test
dec
or
movsb
lahf
add
bswap
cmc
gs
cmp
lret
or
add
inc
mov
and
cli
outsl
pusha
pop
jmp
xchg
pop
or
test
les
fidivs
and
xor
mulb
cmc
xchg
mov
aad
cld
mov
xchg
imul
loop
js
movntq
out
jl
sbb
mov
xchg
stos
nop
and
xchg
jp
cmpsb
cmpsl
mov
loope
adc
pop
clc
mov
fisttps
repz
shl
lret
cmp
mov
jecxz
mov
lahf
sarl
nop
mov
dec
fnsave
dec
mov
data16
inc
mov
ret
dec
pop
xchg
cld
inc
call
int3
push
aaa
xchg
fwait
shlb
mov
jecxz
xchg
or
xchg
push
or
inc
mov
lahf
into
mov
sub
lret
xchg
add
xor
xor
iret
sub
xor
pop
addr16
imul
arpl
sub
data16
fucomp
cmp
mov
pop
sti
jns
or
jle
std
push
ss
rclb
cmc
mov
and
test
cwtd
gs
push
jno
jne
pop
dec
lcall
fists
cltd
adc
cmp
cltd
jb
movsb
icebp
dec
adc
mov
movsl
xchg
insb
sar
cmp
jp
dec
or
inc
sub
pop
and
daa
icebp
add
jge
mov
gs
sbb
out
gs
mov
icebp
cmp
movsb
ror
pushf
fnstenv
cmpb
mov
and
roll
inc
and
movsb
js
iret
rolb
fs
push
lods
repz
sahf
clc
lcall
mov
cmp
inc
mov
hlt
leave
loopne
ret
out
inc
mov
push
dec
es
rcr
outsl
cmp
js
push
in
inc
push
les
mov
cmp
pop
inc
je
or
adc
pop
sysenter
lds
ljmp
jp
lock
js
sbb
bnd
add
mov
jb
mov
push
inc
and
xchg
leave
fcomps
repz
jo
pusha
xor
jecxz
rcrb
je
sbb
sbb
mov
lea
push
pop
xchg
sbb
pop
fsubl
push
insb
xchg
mulb
sub
pop
push
sbb
cmp
dec
mov
test
aas
lret
mov
aas
mov
adc
push
sahf
ficoml
mov
and
add
xchg
sbb
out
push
icebp
in
leave
bnd
dec
lahf
push
cmp
lock
mov
pop
dec
mov
jo
std
js
mov
pop
andb
jno
and
jne
rep
lret
ret
sub
daa
out
rol
mov
bound
mov
jge
popf
repnz
sub
inc
or
jecxz
xor
jb
and
das
pop
sub
sbb
mov
inc
stos
mov
push
cmp
hlt
fimuls
push
dec
xor
ret
push
pop
xchg
out
ljmp
jne
pushf
or
mov
push
dec
cmp
mov
xorl
repz
gs
jb
test
pop
into
push
pusha
inc
push
cmp
fs
sti
ljmp
out
xchg
adc
lock
push
push
out
lret
sub
jmp
dec
cld
push
push
scas
sub
jns
dec
push
push
daa
imul
lods
ret
xchg
repnz
pop
inc
add
cmp
stos
pusha
jbe
in
lcall
mov
cli
mov
push
cltd
push
mov
mov
xlat
dec
rcl
mov
and
sbb
and
cld
sbb
xchg
lcall
push
insl
loopw
stos
jg
repnz
daa
movsl
cltd
jp
jp
sbb
test
dec
add
jmp
arpl
arpl
shr
scas
adc
mov
mov
lock
pop
mov
faddl
daa
xchg
fbld
xchg
push
inc
or
xor
sti
push
push
cltd
xchg
pusha
mov
or
jbe
sbb
xor
xchg
pop
dec
std
inc
test
sbb
and
sub
adc
mov
jns
xor
sub
adc
push
aad
mov
mov
cmp
shrl
sbb
shrb
in
stos
jns
jl
xchg
mov
fists
out
inc
dec
std
orl
push
or
inc
int
fidivs
xor
inc
add
and
aad
xchg
pop
jmp
dec
imulb
jge
rcl
or
hlt
out
sub
mov
push
jecxz
int
pop
das
movsl
xchg
test
clc
fs
mov
pop
mov
cmp
jp
sbb
mov
stos
cmp
fs
sub
stos
xchg
into
daa
mov
pop
jns
and
cli
addr16
sbbb
xor
shlb
aad
mov
cmp
and
xchg
dec
out
fisubrs
stos
mov
jge
push
pushf
jp
mov
idivb
mov
fists
fwait
push
jge
mov
fisttpl
mov
insb
adcl
push
sub
inc
popf
sub
add
cmp
or
or
dec
xor
call
sbb
lock
je
mov
test
mov
or
pop
in
imul
jmp
test
imul
cmp
xor
adc
cmp
sahf
loope
or
jmp
dec
push
test
adc
imul
cmp
loope
movb
pop
pusha
loope
and
imul
ljmp
fprem
movsb
adc
sbb
sahf
mov
test
or
inc
out
rol
push
inc
inc
lret
mov
in
or
push
and
out
and
int
fildll
out
fldcw
mov
xlat
subb
testl
jae
and
or
mov
inc
jg
aad
imul
lahf
mov
ja
aaa
mov
decl
jns
movsl
gs
or
pop
in
or
xor
xchg
int3
mov
cwtl
xchg
daa
xor
fcmovnbe
icebp
notl
enter
addr16
xor
push
adc
into
lock
sahf
xchg
pop
jo
cmp
lods
xchg
mov
lock
mov
test
mov
sbb
aaa
xchg
mov
ds
add
mov
insl
in
or
or
filds
into
icebp
mov
ret
inc
adcb
dec
xchg
int3
mov
adc
scas
insl
sbb
je
das
push
dec
shlb
jl
dec
sti
nop
mov
push
pop
ja
daa
and
imul
or
jg
into
movsb
addr16
fwait
aad
cltd
mov
pop
sub
inc
cld
gs
or
test
mov
sub
xchg
es
push
outsl
cmp
inc
std
dec
mov
in
enter
sbb
jno
mov
ret
into
cmp
mov
mov
clc
cli
lcall
lret
mov
push
xor
push
ss
jmp
pop
push
xor
xchg
mov
mov
jmp
sub
mov
inc
stos
cmp
ficomps
push
jb
cmp
in
shlb
cmp
ss
in
sub
add
mov
and
and
xor
rolb
push
adc
fs
data16
ja
inc
pop
pop
jmp
cmp
clc
sti
hlt
cmp
xor
sbb
arpl
cwtl
sbb
mov
push
repnz
notl
stos
dec
adc
das
or
push
sub
and
ljmp
adc
jns
xlat
mov
dec
popa
cmp
pop
xor
lret
ja
adc
movsb
cmpsl
ror
mov
jecxz
dec
xor
scas
fldcw
or
push
xchg
xchg
xorb
cmp
mov
push
rcll
xchg
mov
push
mov
jmp
cmp
out
cmovb
in
out
loop
add
push
cmp
xchg
gs
js
dec
jno
xchg
or
imul
stos
and
cli
inc
pop
call
adc
xchg
shrb
lods
fs
aas
sbb
aaa
icebp
add
leave
dec
xchg
and
sub
pop
jbe
std
jmp
jle
sbb
cli
scas
push
fidivrl
inc
cmpb
movsb
jl
pop
mov
aad
sub
pop
push
jnp
mov
int3
dec
fisttpll
inc
iret
std
xor
out
cmp
and
dec
stos
imul
xchg
dec
das
mov
push
dec
sub
jg
outsb
push
inc
push
mov
cmp
push
data16
pop
out
sub
mov
mov
add
shlb
dec
add
inc
pop
pop
adc
xchg
inc
ror
mov
in
mov
mov
jle
and
inc
cli
lea
int3
push
mov
pop
in
movsl
outsl
mov
scas
push
pop
dec
dec
xor
push
lret
fwait
sbb
fdivl
and
lcall
push
fsts
sbb
insb
stc
xor
popl
sbb
jns
insl
push
movsl
mov
fildl
dec
mov
jl
rcll
dec
xchg
lods
push
xchg
sub
cwtl
xor
punpckldq
imul
lcall
sub
mov
testl
jbe
pusha
mov
pop
js
lcall
movsb
or
mov
xchg
movsl
stos
sub
inc
mov
scas
scas
loope
outsb
or
aas
cmp
popf
push
stos
add
add
stos
mov
jge
mov
or
je
leave
mov
add
sahf
dec
push
xlat
xor
inc
cmp
xor
lahf
cwtl
pop
jns
pop
inc
mov
mov
loope
sbb
push
mov
es
jp
aad
sub
fucomp
aaa
std
cmpb
and
in
mov
cmpsl
shrl
mov
es
popa
scas
push
push
outsb
push
adc
push
sbb
fldcw
add
sub
jmp
fisubrl
mov
out
movsl
xchg
pop
inc
lock
outsl
clc
dec
in
jecxz
xorl
iret
out
xchg
aam
cmc
fld1
add
jge
ljmp
push
adc
cmpl
dec
out
ja
rcrl
cmpsb
fldl2e
mov
sbbl
xorb
push
push
mov
out
mov
jne
in
inc
das
sahf
in
inc
movsl
test
iret
pop
xchg
xchg
dec
xchg
pop
xchg
stc
in
lods
pushf
push
jle
adc
pop
shrl
loope
int3
adc
cmp
pop
or
jl
xchg
hlt
cmp
lret
mov
mov
jp
loopne
pop
or
jns
fiadds
add
and
mov
push
cmp
xor
adc
aam
push
mov
xchg
loop
ds
jp
std
pop
inc
pop
andps
or
dec
pop
pop
or
sbb
cwtl
sti
mov
add
push
aaa
adc
inc
mov
jle
adc
sbb
std
in
adc
xor
fsubs
mov
jnp
push
cmp
and
dec
add
aad
insb
sti
cmpb
test
rep
mov
add
notb
lcall
out
xor
lods
js
test
loope
pop
into
mov
fadds
clc
jp
mov
jle
xchg
cmp
jo
jmp
lods
jo
ret
adc
jge
push
cmpsl
call
sbb
icebp
aad
xchg
mov
sahf
mov
push
jg
lds
fists
sbb
pushf
jmp
jecxz
je
mov
adc
stos
lret
fcoml
addr16
popf
jl
test
dec
sti
xor
scas
mov
mov
insl
leave
fwait
mov
sub
hlt
mov
push
ret
bound
mov
xor
aam
dec
sbb
arpl
cmp
pop
out
dec
fldenv
mov
lret
mov
mov
push
xor
lds
sub
sbb
cmp
cwtl
arpl
push
sbb
pop
jb
out
inc
or
mov
cmp
shrl
sbb
mov
push
jmp
outsb
ret
leave
dec
hlt
call
pusha
repnz
shlb
mov
inc
mov
mov
or
jns
data16
clc
syscall
sbb
jge
ret
lcall
dec
add
cltd
jmp
push
ret
stos
into
lds
mov
fs
and
cli
fwait
lods
arpl
inc
adc
sbb
cwtl
out
add
es
dec
imul
popa
ret
addr16
or
mov
add
inc
or
stc
sub
aam
out
addr16
movsb
js
mov
pop
mov
cld
and
adc
clc
pusha
inc
push
in
jecxz
cmp
ss
xchg
out
int
out
pop
inc
cmp
cmp
jbe
jne
mov
mov
jno
das
fdiv
sarw
stos
andb
outsb
cmovne
xor
xchg
popf
cli
sbb
jg
push
mov
idivl
cmpsb
divl
mov
sbb
dec
lods
mov
test
pop
add
subl
mov
mov
jl
cmpsb
mov
dec
jg
mov
loop
jne
push
push
out
mov
xor
repz
push
lret
jge
push
notl
inc
lcall
add
int3
je
clc
xchg
popf
ja
sti
popa
hlt
xor
fldt
jge
sub
or
pop
mov
mov
pusha
aas
sub
and
sahf
sbb
std
xchg
movsb
or
std
adc
xor
add
sbb
fmuls
push
xor
shlb
mov
scas
xchg
push
xlat
or
shrb
dec
adc
mov
nop
sbb
in
lret
lahf
mov
call
xchg
out
xchg
movsb
push
pusha
pop
mov
out
fdivrl
mov
add
jo
add
push
das
dec
mov
addb
jbe
xchg
dec
mov
cmpl
jo
or
repz
sbb
and
shl
test
mov
jp
movb
insl
ss
inc
adc
test
stc
xlat
vpmacssdql
rorb
inc
cmpsl
and
and
call
idivb
cmp
shrb
out
or
imul
inc
clc
movsw
mov
int
out
push
shll
xor
and
adc
jnp
jp
add
rolb
je
mov
scas
cmpl
pop
jo
xor
ret
mulb
pop
mov
out
dec
jmp
in
stc
dec
icebp
daa
mov
pop
leave
cmc
push
adc
fsubrl
insl
jbe
dec
xor
scas
jle
pop
mov
xor
nop
bound
scas
dec
rcrl
inc
in
daa
std
push
xor
mov
push
out
int
or
cmp
push
pop
fildll
sbb
fxch
adc
xchg
fidivrs
mov
test
imul
or
mov
pop
mov
ss
cmc
loop
mov
cli
cmp
xchg
push
pop
mov
sub
sbb
xchg
scas
sbb
repnz
and
xchg
fiaddl
loopne
inc
xor
xor
out
mov
shrb
sbb
psubd
lea
sub
sbb
popf
movb
divb
std
in
mov
mov
rcr
repnz
test
cmp
xchg
xlat
out
cwtl
dec
test
add
stos
xchg
push
sbb
push
leave
pop
js
das
fidivs
jecxz
call
test
cvtpi2ps
loop
imul
or
mov
pop
out
stos
ret
mov
hlt
mov
leave
xor
pop
divl
pop
les
cmp
jg
pop
sar
fs
sbb
sahf
pop
adc
adc
xchg
movsl
cwtl
aas
inc
or
sbb
outsl
cmp
stc
scas
xchg
xor
lds
cltd
mov
fxch
loope
jns
in
xchg
dec
jno
cmp
dec
push
mov
sub
jne
or
jb
sbb
add
push
movsl
xchg
xor
cld
out
cltd
das
cmp
jo
and
and
sbb
fdivrs
dec
cmp
fiadds
pop
inc
cmpsl
cmp
sbb
insl
push
xchg
add
enter
mov
push
sub
mov
mov
stos
dec
add
pop
loop
xchg
movsl
sbb
in
in
jb
cwtl
mov
jecxz
inc
adc
cltd
sbbb
jp
lea
sbb
mov
sbb
insb
fwait
sbb
mov
pop
insl
lea
dec
pop
jns
dec
mov
test
push
shlb
inc
lcall
mov
nop
dec
jge
subb
xchg
dec
aad
mov
movsl
aad
hlt
jno
test
dec
mov
xor
bound
push
ljmp
or
lahf
jae
insb
mov
into
or
daa
mov
icebp
scas
andb
jmp
push
data16
out
xor
ljmp
leave
jno
flds
and
addb
cmp
lock
int3
cmpsl
xor
dec
or
inc
dec
cld
or
out
in
loope
rcrb
leave
pop
lea
rcrb
dec
inc
mov
addr16
mov
push
ret
cmp
push
push
mov
mov
xor
ss
jb
nop
jno
jl
iret
pop
and
pop
push
pop
adc
push
inc
cmpsl
push
sbb
insl
jae
push
xor
pop
xchg
enter
out
test
lret
add
jecxz
push
mov
roll
jne
hlt
cmp
pushf
sub
xor
outsb
pushf
inc
aas
in
add
lea
rcrb
add
aas
push
sahf
lea
xchg
jl
add
lds
scas
dec
and
adc
sbb
dec
stc
mov
mov
mul
ja
mov
mov
or
fwait
jmp
pop
push
scas
mov
popa
stos
lcall
test
nop
frstor
ljmp
data16
cmp
lods
cltd
add
dec
inc
enter
jns
pop
or
xchg
push
push
aaa
sbb
xchg
sub
jle
or
aad
gs
pop
cmp
xlat
leave
jle
push
and
adc
cmp
sub
mov
dec
movsl
movsb
ret
pop
inc
add
xor
inc
xchg
loop
xchg
push
ss
movsb
bound
push
daa
lods
daa
aam
cmp
loop
subb
out
shrl
jg
out
jecxz
jp
add
lods
cs
lods
out
jb
ret
movsb
cs
ret
pop
xchg
xchg
hlt
lods
sub
push
movsl
fldcw
test
add
fisttps
xor
dec
mov
dec
jnp
mov
cmpsl
xor
dec
leave
idiv
sbb
lret
push
clc
out
sub
add
push
fnstsw
dec
mov
mov
in
es
or
push
cmp
jecxz
xor
mov
mov
xor
aas
sub
push
jg
lret
xor
dec
imul
insb
lret
mov
addr16
xchg
sub
in
mov
das
mov
sbb
inc
xchg
loope
loopne
ss
sub
roll
iret
xor
xchg
jne
les
cmp
cmp
mov
out
pop
or
pop
lret
out
pop
addr16
sub
adc
fldl
mov
cli
or
fucomi
ret
add
ficompl
cmp
lret
pop
xlat
mov
movsb
lds
jl
sahf
pop
mov
mov
in
mov
sub
shlb
pushf
arpl
pop
pushf
mov
icebp
in
sub
sbb
mov
push
lock
push
inc
add
inc
xor
pop
das
dec
mov
cmp
xor
test
popf
xor
push
cwtl
mov
iret
adc
mov
mov
call
ds
add
pop
mov
scas
dec
leave
xlat
movsb
popa
xor
push
mov
xor
inc
clc
pop
ljmp
or
iret
push
add
test
adc
lds
mov
push
in
fs
or
loopne,pt
test
test
mov
push
or
cmp
dec
cwtl
inc
mov
pop
pusha
mov
jmp
and
enter
sub
push
jo
add
cmp
sub
cmovge
sbb
add
pop
sub
mov
divb
xor
xchg
in
pop
sbb
adc
pop
stos
or
sbb
mov
std
mov
or
pop
pop
sub
sbb
fwait
sbb
and
fcomps
test
cmc
popf
mov
or
push
mov
add
pop
std
jg
mov
mov
inc
adc
xchg
add
test
loope
xchg
jae
aam
cli
scas
push
inc
out
or
mov
adc
sub
bnd
jp
test
movsl
push
jmp
jle
sub
clc
or
and
fadds
dec
enter
idiv
lds
stc
movsb
xchg
xor
mov
inc
cltd
or
ret
xchg
jmp
nop
sbbl
adc
notb
aas
aas
jl
mov
imul
dec
dec
insl
cmc
or
inc
lods
mov
sbbl
inc
jbe
jg
icebp
lahf
lods
shrb
xchg
lods
sbb
pusha
lods
hlt
cmp
jns
int
adc
mov
adc
imul
ss
int
arpl
stos
popf
sub
mov
jle
pop
lods
dec
addr16
jo,pn
iret
xchg
pushf
loope
push
imul
sahf
pop
cmpsl
dec
repnz
lret
push
mov
mov
jmp
gs
mov
out
lcall
in
add
dec
jle
lahf
stc
cli
mov
mov
pop
rcr
sub
lock
or
popa
scas
fidivs
call
in
sti
aad
jmp
cltd
adc
jg
jmp
lahf
subl
xchg
dec
cmc
push
cmpsb
aas
adc
dec
mov
sti
mov
sub
push
push
add
adc
mov
push
cltd
scas
inc
mov
pop
data16
lods
or
mov
pop
cli
sbb
fiadds
loope
push
mov
inc
pop
pop
jge
xchg
xor
and
inc
mov
in
jmp
or
rcll
mov
pop
lret
jmp
xchg
jns
mov
jecxz
push
jecxz
clc
dec
push
lret
call
ds
push
xchg
sbbb
cld
mov
js
rol
jo
nop
leave
shrb
mov
cli
mov
inc
jne
xchg
mov
sbb
test
adc
cmp
xor
add
out
lcall
add
xlat
cmp
test
test
int
jno
cmp
add
xor
mov
js
sbb
aam
aam
shll
xor
repz
imul
bound
rolb
dec
fwait
jno
adc
in
xor
xchg
je
cmp
cmpsb
sbb
inc
shl
into
mov
shlb
pop
xchg
pusha
lock
mov
push
sub
pop
jecxz
pop
push
dec
insb
mov
insb
pop
lock
aas
test
xchg
push
loop
mov
outsl
lods
inc
xchg
bound
test
repz
add
fmul
pop
mov
mov
stc
cmpsb
imul
or
std
roll
shlb
fbstp
mov
xchg
mov
gs
cltd
loopne
and
sub
mov
inc
push
add
rorb
aam
or
cmp
xor
pop
outsl
call
je
xor
scas
cmpsl
push
adc
subl
dec
cmp
addr16
cwtl
or
and
cmpsb
jo
dec
fwait
pop
xchg
dec
jp
add
aaa
sbb
bound
and
mov
xchg
lea
out
bound
lods
pop
xchg
scas
in
dec
and
es
adc
arpl
pop
pusha
jmp
lods
int
mov
pop
cmp
cmp
rcrb
fdivs
xor
push
popf
sbb
jecxz
mov
in
shrl
into
int
dec
lods
sti
mov
pop
jl
dec
and
fldt
inc
add
mov
fnsave
lcall
and
push
push
es
push
jp
and
ret
das
fdivrs
lea
cltd
inc
pop
adc
jnp
imul
in
pop
out
jle
push
xor
inc
xchg
mov
ficoml
xchg
pusha
and
mov
cmpb
movsb
sub
and
pop
push
add
in
data16
push
rolb
dec
in
lds
mov
ds
mov
and
jg
lahf
jbe
out
dec
popf
inc
fldenv
js
outsb
mov
nop
in
xchg
and
xchg
bswap
pop
or
push
into
xor
xor
test
fldt
mov
mov
test
ret
jecxz
movsb
mov
jle
addr16
xor
fsts
xor
cmpsb
dec
cmc
pop
mov
adc
sbb
out
das
mov
int
lret
icebp
and
fs
loope
mov
push
jns
cli
repnz
jnp
addb
sahf
xor
cmc
sbb
dec
imul
xchg
push
dec
sub
lods
xchg
push
int3
repnz
mov
les
daa
clc
sub
pop
cmp
in
les
inc
push
xchg
popf
repnz
jns
in
loop
xchg
bound
push
ret
mov
ret
mov
mov
pop
xchg
aad
lsl
pushf
push
daa
or
into
test
cmp
mov
mov
pop
test
mov
test
cmpsl
jmpw
fmuls
outsb
pop
out
fadds
out
fs
dec
or
cmp
test
es
jbe
stos
iret
fwait
rolb
fs
repz
sbb
in
repz
dec
push
das
dec
repz
je
pop
or
cmc
xchg
andl
movsl
aam
sub
negb
sbb
cmp
fstp
sub
scas
insl
lcall
xchg
mov
jae
iret
sbb
mov
lret
clc
xchg
fidivl
test
or
adc
dec
cmpsb
out
mov
jle
xor
or
fsub
roll
scas
mov
mov
xchg
ficoms
push
notb
pop
or
enter
sub
xor
add
mov
leave
pop
cmp
cmpsl
out
dec
xchg
sbb
sub
sbb
in
cmp
sbb
xbegin
mov
xchg
inc
ja
xchg
mov
jns
cmpsl
fwait
mov
mov
inc
rcrl
xor
cmp
stos
pop
mov
fcomp
stos
mov
cmp
loope
stc
dec
lcall
cli
xor
divl
xchg
movsb
xor
stos
fcompl
push
xor
frstor
mov
xor
movsl
pop
sbb
sbb
mov
fcom
xor
jecxz
push
push
pop
xchg
addr16
push
mov
jmp
mov
es
nop
scas
mov
addb
pusha
and
xlat
xchg
fcompl
out
mov
pop
mov
notl
add
andl
fwait
dec
cmp
outsb
xchg
cwtl
shrl
mov
in
inc
push
pop
fdivs
loopne
ret
add
dec
jnp
jl
pop
xor
sahf
shll
cmpsb
pop
push
cld
pop
jbe
inc
ficompl
fistpll
ficomps
pop
sub
fcoms
mov
mov
cmp
mov
dec
shr
je
xchg
ds
and
push
pop
repz
inc
cmc
inc
gs
sub
outsl
adc
cli
jg
mov
jbe
fdivrl
pop
cmpsl
stos
rcrl
adc
sub
mov
sarl
leave
idivl
sub
xchg
ds
push
add
les
cs
cld
popf
lds
jbe
popf
loope
mov
adc
cmp
cmpsb
sub
add
cli
dec
mov
stos
and
punpcklwd
cmp
mov
into
loopne
mov
mov
push
std
and
outsl
dec
push
stos
and
pushl
mov
mov
fstpt
clc
insw
fsubp
cli
xchg
sbbl
in
in
or
pop
jbe
pop
inc
xor
test
mov
push
les
add
call
or
loopne
shrl
mov
bnd
sbb
sbb
sbbl
adcl
cmp
pop
and
mov
sbb
jnp
add
push
push
dec
sahf
icebp
cmp
mov
arpl
sub
pop
adc
or
fisttps
mov
idivb
and
push
sbb
lods
sub
das
jb
jl
ret
push
adc
fdivs
mov
icebp
ljmpw
enter
out
pop
push
lock
cltd
ljmp
push
xchg
cs
mov
mov
push
mov
adc
sub
movsb
sub
fwait
add
mov
mov
test
push
lock
les
jl
lret
push
sbb
pop
push
outsl
cmpb
lds
cmp
hlt
popf
add
loopne
push
fptan
bound
xlat
jecxz
lds
mov
mov
dec
sub
stos
sbb
cli
sub
fmul
cmp
mov
cwtl
jmp
push
fwait
nop
push
pop
sub
mov
jp
fs
xor
pop
pop
push
in
dec
mov
int3
sbb
dec
lods
insl
and
mov
inc
stos
fsub
fldl2e
enter
sbb
jo
jp
dec
mov
mov
and
sar
or
inc
ja
std
hlt
push
mov
dec
cli
sub
pop
pop
fucom
adc
pop
stos
mov
enter
xchg
aad
mov
mov
sub
jl
inc
push
rorl
mov
stos
xchg
into
push
ficoms
data16
sub
scas
or
filds
packsswb
xchg
mov
stos
icebp
sar
push
aam
jp
mov
add
xchg
je
adc
inc
fistpl
les
out
sbbb
jecxz
mov
xor
loope
iret
ret
mov
mov
sbbl
sub
aas
shrb
decl
mov
js
push
sbb
mov
les
inc
and
sahf
mov
dec
mov
je
rolb
mov
dec
mov
mov
pusha
adc
aam
arpl
mov
arpl
orb
lret
into
dec
mov
nop
lock
out
dec
adc
inc
inc
aad
jecxz
dec
hlt
xchg
mov
imulb
dec
add
mov
hlt
notb
xchg
mov
xor
push
lods
pop
push
dec
jae
inc
sbb
stos
mov
add
jmp
dec
fucomi
jno
cmp
sbb
xchg
popa
icebp
sbb
je
nop
jae
and
dec
clc
sub
add
xchg
fisttpll
push
imul
cwtl
jmp
sbbl
insl
in
test
mov
sub
shrb
sub
dec
ss
ror
shrb
mov
aam
div
cld
mov
lock
or
jbe
cld
push
fldl
cmp
inc
push
push
sub
or
popf
mov
aaa
xor
adc
pop
lods
jge
lods
ds
jns
xchg
jecxz
in
insb
call
jo
rcrb
ja
stos
jne
mov
pop
xor
lock
bound
and
xor
jno
shrb
pop
clc
aam
movsb
jp
std
and
and
pop
push
jne
test
outsl
xor
icebp
loop
arpl
push
mov
jl
jmp
lret
cmpsl
xchg
push
sub
cmpsb
sbb
and
and
fs
adc
sbb
fnstsw
movsb
add
mov
cmp
jb
jnp
lds
mov
push
sbb
mov
fwait
daa
outsl
dec
cmc
or
pop
adc
mov
repz
cmpl
cs
or
inc
sub
mov
repnz
in
add
push
add
lret
cli
andl
sbb
loopne
mov
push
out
mov
mov
pop
xlat
mov
lea
ss
int3
and
inc
into
ljmp
dec
xor
mov
ficoms
jl
lds
je
jnp
xchg
mov
sub
mov
mov
mov
lods
test
xchg
insb
mov
rclb
das
cmpsl
jmp
cmp
mov
sbb
mov
in
stos
cmp
daa
push
and
out
push
lret
ljmp
les
sub
int3
and
add
push
movsb
pop
or
dec
jecxz
or
lcall
notb
mov
hlt
add
cld
push
dec
stc
pushf
fadds
sti
shrb
dec
cmc
lahf
push
adc
divl
add
and
mov
je
in
mov
mov
cmp
mov
mov
mov
filds
movb
cltd
mov
cmp
mov
cwtl
cmp
and
cs
xor
push
pop
jecxz
fs
call
es
push
dec
pop
and
adc
or
call
popf
inc
lods
insl
pop
jno
add
adc
addl
xchg
jmp
fadds
pop
std
xchg
jmp
mov
subl
repz
popa
push
or
sbb
cwtl
pop
add
jle
dec
in
cmp
or
mov
mov
xchg
inc
in
mov
das
inc
cmp
out
pop
mov
cwtl
out
pop
cli
add
daa
scas
repz
fcompl
cmpsl
pusha
adc
nop
adc
sbb
pop
mov
cmp
ficoml
es
mov
into
lcall
sahf
jbe
push
jb
xor
pusha
scas
inc
inc
dec
fmull
pushf
and
dec
mov
dec
mov
push
jp
loopne
pushf
mov
loope
test
fdivs
je
cmpsl
out
shl
jmp
bound
dec
lahf
roll
aad
sar
aam
aam
mov
xor
cmp
test
lea
iret
lea
int3
cmp
adc
inc
jp
adc
les
push
push
ret
adc
adc
cmpsl
sub
inc
xor
cmp
lahf
pusha
int
gs
xor
fldenv
fcompl
pusha
jmp
loopne
sti
inc
dec
or
testb
stos
sbb
inc
insb
rol
inc
dec
notl
mov
imul
sub
lock
or
mov
call
xor
rcrb
jno
cmpsb
insb
mov
fmul
xchg
mov
pusha
mov
mov
out
lock
das
mov
adc
push
aas
movsb
lds
mov
push
jl
js
ret
add
dec
mov
cmp
jg
jae
xchg
push
or
mov
testb
jo
imul
into
sbb
orb
mul
imul
push
lods
out
adc
adc
jg
icebp
jb
jo
imul
jbe
inc
xchg
ds
mov
mov
xchg
mov
mov
or
xchg
gs
cmpsl
push
decl
mov
loop
or
in
sbb
rcll
ljmp
jecxz
dec
cs
cmp
dec
es
mov
fcoms
inc
shlb
add
push
jo
and
fiaddl
imul
js
lcall
push
sbb
stc
decb
xor
push
mov
dec
ljmp
adc
or
dec
mov
sub
sbb
pop
cmp
ret
cmc
mov
out
push
sti
adc
jle
mov
mov
sub
push
dec
fwait
clc
mov
cmp
movsb
lret
rcll
jb
sub
popf
testl
mov
out
xchg
stos
jmp
popa
popa
daa
ja
movsl
mov
getsec
push
sbb
xbegin
ljmp
jmp
xchg
cmp
das
insb
pop
jmp
cmp
rcl
jns
sbb
iret
or
pop
xchg
repz
adc
and
xchg
jbe
fcmovnbe
pop
add
lds
mov
push
insl
es
lret
fisubl
ljmp
dec
xchg
rcr
pusha
jg
dec
inc
jb
pop
scas
sbb
mov
inc
add
jnp
scas
mov
fsubrs
push
fldt
mov
lahf
jbe
rcl
js
sbb
and
dec
lea
mov
cmp
mov
cld
lret
add
pop
mov
sub
insl
arpl
and
pop
test
jle
push
and
jae
jmp
and
mov
inc
popf
and
pop
and
sub
inc
loop
jecxz
pop
sub
es
cwtl
outsl
dec
push
dec
xor
inc
add
addr16
lods
imul
cmp
pop
into
adc
loope
mov
or
test
push
vhaddps
test
add
imul
or
stos
inc
lds
sub
les
mov
or
cwtl
adc
sub
or
and
daa
mov
inc
or
jo
and
mov
out
sti
in
adc
sbb
dec
mov
jecxz
ficoms
enter
ja
rol
mov
imul
in
add
push
pop
mov
out
movsl
and
sar
add
pop
fbstp
push
sbb
jb
push
out
iret
shll
mov
les
dec
push
sbb
cltd
imul
nop
gs
or
mov
sub
push
cmpsb
pushf
fsubs
test
leave
lods
push
push
jmp
cmc
shrl
stc
mov
adc
push
stos
jmp
fnsave
jae
lds
test
pushf
mov
mov
repz
adc
negb
pop
repz
es
or
and
add
push
popf
pop
push
xor
das
inc
adc
daa
nop
out
das
ret
cwtl
xor
xchg
inc
sub
sub
ss
xlat
ds
out
push
push
jl
imulb
xor
js
adc
stos
jno
push
add
ds
cwtl
pusha
sub
cmpsb
add
or
push
fmull
je
dec
inc
sti
outsb
fcomps
mov
ds
pop
cli
mov
adc
jae
das
filds
push
add
ret
subl
inc
cmpsb
fbld
inc
cmpsb
lods
add
test
pop
xchg
and
iret
in
xor
adc
push
jp
movsb
iret
xchg
pop
sub
mov
cwtl
sub
stos
decb
sti
repz
scas
pop
sbb
mov
push
sbb
outsb
inc
push
mov
add
test
dec
adc
jns
gs
movsb
pop
xchg
dec
sbb
xchg
pushf
inc
pushf
add
repnz
jmp
stos
das
dec
sbb
adc
and
cwtl
incb
in
popa
mov
stos
ljmp
fwait
xchg
sbb
pop
add
pop
and
sbb
sub
test
and
mov
adc
adc
stc
mov
mov
jnp
jae
xchg
lds
or
je
xor
in
cwtl
sti
daa
cmpsb
sti
cld
push
enter
dec
rorl
daa
rcll
addr16
rorl
sbb
xor
lock
ss
inc
or
mov
and
in
mov
adc
cwtl
inc
sbb
add
inc
pop
inc
xlat
mov
shrb
mov
mov
add
dec
dec
hlt
es
icebp
movsb
cmp
mov
data16
cmpsl
pop
test
arpl
push
aas
adc
dec
popf
sub
cmp
aas
xor
sbb
insl
mov
xchg
cmp
jne
push
cltd
jb
cmc
jmp
outsb
insb
imul
mov
sbb
lea
aaa
pop
mov
cmp
pop
dec
cmp
rorl
push
push
cmc
cmovae
and
fucomp
in
push
sbb
push
add
negl
into
and
ret
pop
xchg
mov
add
sbb
int
std
call
push
cwtl
xchg
mov
ss
or
xor
jb
arpl
sbb
or
fcmovne
mull
xor
cli
ret
push
aas
daa
jae
push
bound
sbb
pop
xchg
push
popa
enter
xlat
jno
hlt
mov
es
mov
inc
mov
push
push
pop
les
je
call
mov
cmp
mov
imul
div
sahf
mov
shll
stos
push
cmpsl
sub
pop
movsb
insb
cld
sub
add
out
jbe
sub
push
or
int3
test
es
cmpsb
fcoms
mov
jnp
enter
enter
mov
fmulp
ljmp
test
cmc
push
push
les
les
insl
jno
fabs
movb
ljmp
xlat
ja
dec
jns
xor
jecxz
pop
fwait
movsb
mov
out
sahf
jge
jg
es
not
adc
pop
mov
pop
push
add
rorl
inc
xchg
negl
fcom
ljmp
sub
dec
jp
out
fimull
or
inc
divb
lret
sub
jg
xchg
push
lea
xchg
das
cmpb
or
sub
jge
into
or
adc
shll
push
stos
outsb
xchg
pop
aas
test
int3
out
nop
lods
push
xchg
pop
jp
inc
sub
xchg
int3
mov
adc
jne
inc
movl
push
loop
push
pusha
mov
mov
pop
jecxz
xchg
push
add
jbe
dec
insb
aas
lret
movsl
into
into
subl
pop
xchg
xor
ljmp
adc
cs
in
jbe
bound
hlt
adc
loop
enter
push
loop
repnz
int
xchg
jne
and
jb
or
jmp
push
test
jne
cld
iret
sbb
mov
inc
popa
mov
push
inc
enter
push
mov
mov
jmp
decl
adc
adc
idivl
xor
cltd
mov
pop
adc
adc
adc
pop
xor
xor
fists
or
cmpsl
dec
sub
push
loopne
jb
stc
pop
sub
aas
mov
lret
mov
out
inc
push
cmc
push
insb
jbe
lea
dec
fwait
call
sbb
test
adc
js
lret
sbb
pop
in
and
mov
pushf
std
std
xchg
pop
fs
test
xor
mov
sub
aam
push
adc
and
cmovs
dec
sbb
xchg
icebp
test
roll
addr16
mov
pop
shlb
pop
aas
add
dec
lock
mov
fsubs
stc
cmp
clc
or
add
mov
mov
push
mov
dec
cmp
insb
outsl
pop
dec
jae
sbb
and
pop
test
add
mov
xchg
sbb
jp
mov
sbb
xchg
cmp
cmp
mov
dec
arpl
mov
imul
xchg
fidivrl
andb
bound
ds
adc
lcall
rcr
pop
stos
and
pushf
or
or
out
xchg
xchg
repz
push
inc
add
ret
dec
std
fsubs
loopne
fwait
pop
repz
jne
loope
and
xor
dec
mov
je
add
sbb
out
or
inc
repnz
cmp
outsb
scas
pop
and
jg
xchg
out
cmp
jge
lcall
jle
mov
pop
dec
cli
movsb
fstps
std
les
cmpsl
xor
adc
lea
xchg
stos
mov
insl
push
jg
aam
sbb
lea
mov
int
jb
stos
mov
mov
iret
xchg
mov
add
jle
aas
jbe
inc
icebp
push
xchg
pusha
xor
push
cmp
mov
js
jbe
loope
jmp
sub
mov
fstps
xor
jg
and
insl
dec
jge
mov
lds
int
xor
cwtl
adc
fcom
jo
mov
add
mov
jp
mov
sarb
inc
push
pop
mov
stc
daa
mov
into
es
in
and
mov
or
sbb
mov
and
fsts
pushf
jno
dec
outsb
mov
xchg
push
mov
pop
sbb
lods
aas
pop
or
sti
fdivs
enter
rcrl
mov
cwtl
xor
mov
ja
sbb
push
test
out
icebp
mov
jnp
cwtl
and
push
movb
lahf
add
or
fidivrl
std
mov
inc
loop
xor
gs
push
inc
ljmp
jp
mov
loope
pop
cmp
shlb
pop
pop
test
cld
jnp
inc
int3
or
mov
jmp
xor
xchg
cmpl
mov
test
sbb
add
outsl
ret
in
loopne
or
outsl
movsb
xor
mov
mov
lods
xchg
les
rorl
pop
cld
sbb
add
pop
in
shlb
sahf
ljmp
and
sbb
push
or
cli
xchg
dec
mov
sbb
mov
js
or
inc
aas
rcrl
or
xor
cmpb
aam
xor
dec
dec
aas
ja
fcomp
dec
pop
xor
jmp
rcl
cmp
cltd
push
inc
xchg
cmp
inc
and
ror
mov
pushf
sarb
insl
xchg
or
xchg
scas
cmc
test
jne
lcall
nop
sahf
andb
mov
or
fildl
shll
stos
adc
xor
icebp
dec
out
push
sbb
fiadds
inc
jno
shrl
mov
leave
jo
lret
lret
sub
mov
push
mov
pop
push
mov
sub
xor
cwtl
mov
jp
nop
mov
pop
fldl
cmp
adc
dec
movsb
and
fimull
pop
inc
fiaddl
orl
sti
pop
jae
inc
push
mov
repnz
cmp
mov
xchg
test
inc
aam
inc
jne
ret
push
adcb
fldt
into
lods
vmread
jns
aam
cli
and
push
mov
fs
or
mov
int
jns
pusha
lods
std
loopne
mov
mov
nopl
push
xchg
or
rclb
cmpl
fisubrl
cmp
adc
mov
dec
jns
or
xor
cwtl
imul
into
pop
and
jne
call
xchg
or
push
sub
cmp
cwtl
enter
mov
insl
cli
aas
cwtl
jno
mov
jecxz
js
and
adc
aas
shll
les
push
mov
jg
in
lret
cmpsb
pushf
fwait
movsl
jg
pop
mov
xor
mov
pop
adc
mov
mov
fistps
jne
and
popf
jb
push
daa
std
push
lret
jle
push
push
js
mov
adc
movl
dec
sub
mov
dec
push
inc
add
sbb
cmc
push
fstpt
leave
arpl
test
arpl
jmp
ret
mov
rcrb
pop
add
repz
ficoms
arpl
out
sbb
fstl
jp
hlt
add
lret
xor
cwtl
lcall
cmp
inc
pop
mov
iret
jns
inc
mov
int3
lret
imul
jns
inc
hlt
cmpsb
les
or
sub
cltd
or
icebp
dec
jle
cmp
pop
inc
pop
lds
inc
call
ret
cmp
enter
mov
add
mov
nop
dec
pop
xor
lret
gs
mov
jge
sbb
ss
in
sbb
push
clc
add
cs
jl
xor
mov
insb
das
imul
jne
in
dec
insb
pop
mov
inc
xor
ret
xorl
int3
aam
daa
inc
mov
and
add
push
inc
inc
aad
adc
jbe
push
cwtl
add
js
xorl
or
int3
mov
gs
sub
gs
js
loop
dec
jle
insb
mov
fcoml
xor
jnp
pop
lcall
lods
dec
jne
pop
or
in
stos
mov
ficoml
inc
in
xor
mov
popa
adc
sub
mov
into
fidivs
out
cld
insb
add
jge
jecxz
scas
out
dec
or
add
dec
push
outsl
jp
repnz
repz
ds
push
mov
ja
xor
inc
pop
mov
scas
call
pop
lods
pop
pusha
aaa
xor
rolb
ss
pop
movsb
xchg
into
in
jle
filds
imul
pop
xchg
rcll
sarl
inc
and
icebp
lret
enter
push
enter
rcrb
add
ret
jb
cmp
aad
aad
inc
cmp
add
jge
lcall
frstor
inc
fstl
iret
js
pop
xchg
outsb
test
stos
test
add
test
addr16
sub
fistpl
add
sub
sti
out
outsb
or
jmp
jbe
mov
inc
fnstcw
cmp
and
scas
inc
shrl
push
test
and
jmp
rcrb
and
rcl
dec
aaa
cmp
cmp
push
xchg
lcall
mov
add
jmp
adc
cwtl
and
jp
inc
and
mov
push
mov
pop
adc
cmp
cld
pop
mov
leave
test
in
imul
ljmp
adc
rclb
mov
sti
mov
int3
and
sbb
out
sarb
jnp
jp
push
jecxz
imul
jno
add
enter
orb
iret
fldenv
sbb
or
dec
dec
jno
loopne
mov
push
into
xor
or
xchg
loop
fildl
mov
out
les
int3
or
lahf
int
addb
rclb
push
das
mov
jns
mov
in
out
call
outsl
in
pusha
push
and
push
dec
pop
outsb
ss
cli
mov
adc
mov
or
lcall
mov
lock
jecxz
or
ss
pop
aad
movnti
dec
fmull
mov
in
pop
dec
daa
sub
sub
dec
fnsave
push
ss
in
add
xor
xor
pushl
outsl
dec
mov
pop
repz
fcoml
jg
incl
stc
or
test
mov
add
outsl
insl
cmp
iret
fcomip
popf
jecxz,pn
mov
fsubs
jne
pop
and
movsl
insb
dec
stos
inc
mov
sbb
sub
int3
daa
stos
xchg
pop
or
sbb
mov
inc
cli
shlb
xchg
popf
sbb
ja
cmp
out
daa
stos
cmp
sar
in
mov
in
loopne
or
loopne
lret
cmp
inc
add
hlt
cmpsl
adc
mov
pop
inc
or
cltd
mov
adc
push
das
push
jo
sbb
cmp
jecxz
popl
and
dec
cmpsl
mov
inc
pop
inc
xchg
inc
call
sub
jae
pop
sbb
in
adc
xchg
xor
arpl
cmp
pop
lods
es
cmp
shll
divb
dec
aad
pushf
inc
out
mov
test
adc
shrb
push
cmp
in
lock
or
mov
leave
in
sbb
mov
dec
out
fsubrs
rcll
outsb
ficomps
pop
sbb
imulb
add
inc
shll
iret
pop
push
adc
xchg
lcall
test
cltd
inc
pop
mov
push
adc
and
mov
iret
xor
mov
jbe
xlat
outsb
ror
xchg
ja
and
pop
outsb
in
push
in
push
pop
xchg
out
jg
mov
cmp
lods
sbbl
fiadds
iret
push
push
icebp
jge
lahf
popa
adc
cmpb
mov
shl
es
sahf
sbb
mov
cli
fstpt
scas
repz
sub
mov
inc
inc
fsubl
cmp
daa
cmp
mov
pop
inc
inc
dec
scas
aas
stc
xchg
fistl
iret
mov
inc
mov
cmp
in
je
push
jle
int
pop
out
daa
hlt
jne
mov
mov
call
lea
jmp
push
xchg
sbb
cld
hlt
insb
ret
xchg
push
mov
pop
mov
sbbl
pop
repz
js
divb
dec
and
cltd
adc
mov
mov
jns
popf
lods
gs
mov
jne
rcrl
mov
push
xor
or
sub
imul
mov
pushl
mov
lret
jo
xchg
shll
mov
adc
xchg
cmpsl
lds
rclb
ss
mov
or
test
pop
cmpsl
pop
xchg
inc
cmp
insb
and
or
sti
lock
insb
rcll
xchg
sbb
or
xchg
xor
fsubs
fld
js
cmp
inc
add
pop
sub
pop
std
mov
orl
sbb
jno
loope
cld
sarb
or
mov
sbb
add
push
push
add
mov
and
push
stos
jb
into
xchg
gs
pop
lods
rcl
xor
mov
iret
addr16
push
pop
outsb
xor
stos
mov
mov
rclb
addb
xchg
add
xchg
mov
inc
and
pop
loop
adc
test
mov
xchg
ficoms
test
or
test
bound
fnstsw
lods
push
movb
repz
pop
adc
imul
xor
inc
sar
in
sbb
xorb
shlb
or
pop
xchg
mov
mov
mov
movsb
xor
push
or
test
out
iret
insl
mov
rcrb
sub
inc
push
inc
cmp
cmpsb
mov
jg
push
outsl
mov
cmp
mov
inc
imul
out
call
sbb
pop
dec
mov
mov
lock
mov
in
dec
frstor
stc
cmpsb
push
test
push
in
lods
fstpt
pop
lret
dec
mov
xchg
aad
dec
mov
mov
pop
or
cmp
sub
stos
adc
popf
out
sub
push
mov
push
push
cmc
adc
fucomi
ss
fcoml
cltd
stos
out
jns
jp
jbe
inc
scas
je
push
enter
stos
movhps
es
icebp
xor
pop
insb
push
pop
add
mov
jnp
adc
nop
mov
lea
ret
adc
fsubrs
dec
mov
fisubrs
pop
dec
gs
jp
pop
add
popf
cmp
bound
and
jb
lods
dec
sub
mov
pop
push
test
mov
mov
std
and
adcl
pop
loop
mov
shlb
dec
popa
into
sbb
scas
arpl
jp
movsl
nop
mov
or
and
pop
adc
dec
mov
out
jge
and
inc
pushf
push
sbb
inc
hlt
insb
cs
mov
xor
out
loope
mov
dec
mov
movsl
xchg
mov
out
lret
fs
shl
mov
adc
ret
push
fnstsw
inc
pushf
cs
loop
jae
dec
dec
cmp
pop
loop
cli
daa
xor
jns
jbe
push
pop
inc
cmp
add
das
inc
cli
sbb
das
and
sarl
ja
cmp
push
cmp
cmp
jo,pt
shr
sbb
mov
lcall
dec
push
negb
pop
push
lret
daa
adc
push
std
daa
aam
lahf
xor
sarb
adc
jmp
mov
pop
mov
inc
or
scas
das
inc
mov
sbb
mov
mov
stos
scas
in
js
mov
shll
sub
xor
inc
mov
mov
in
gs
push
jecxz
fsts
push
xchg
pusha
push
push
incl
clc
xor
dec
in
cmpl
pop
inc
xchg
aaa
lahf
cld
lds
ja
pop
data16
aam
or
daa
es
mov
xchg
cmp
hlt
leave
jae
test
fdiv
cmp
fcoms
insb
je
inc
and
xchg
int
in
cli
jp
add
leave
mov
cmpsb
xor
jb
xchg
xlat
into
and
insb
flds
mov
dec
cmp
add
mov
rorb
xchg
and
out
sbb
in
dec
add
dec
and
cld
mul
ds
dec
xchg
out
inc
sbb
dec
jle
fwait
adc
inc
or
mov
pusha
mov
mov
xor
sub
testl
pop
jb
adc
in
ret
sub
xchg
add
test
xchg
stos
fists
les
mov
dec
mov
daa
and
push
pop
jl
dec
xchg
mov
pop
or
and
jge
popf
adc
inc
fists
sahf
fisttpll
loopne
pop
test
pusha
leave
or
adc
mov
sarl
inc
mov
iret
and
inc
inc
scas
ljmp
leave
push
mov
sbb
icebp
push
out
popa
push
jp
sbb
bsf
dec
lea
and
dec
das
jns
js
fdivrl
popf
push
jl
bound
xor
sbb
ljmp
mov
xor
dec
daa
outsb
out
int
jg
push
pop
je
fwait
ja
mov
fsubl
or
jns
inc
add
dec
dec
push
scas
fs
cltd
jno
or
pop
insb
inc
inc
jl
pop
sub
xor
push
jns
push
fbstp
xchg
into
pop
data16
jmp
div
or
imull
dec
loopne
repnz
sbbb
aam
adc
or
sub
add
scas
rorb
stos
movsb
xchg
fdiv
iret
push
out
test
xor
jae
sbb
sti
dec
hlt
es
cmpsl
ret
stos
and
lcall
inc
push
stos
fimuls
lret
popa
dec
xor
int3
jno
cmp
add
aaa
mov
adcl
iret
popa
ret
lcall
xor
add
loope
mov
test
pop
sbb
icebp
sbb
outsb
xchg
in
cs
imul
das
cmpsb
out
mov
lret
fsubrl
cwtl
stos
xchg
add
pusha
fwait
add
decl
or
xchg
jbe
jb
fdivs
lods
in
xlat
repnz
in
xor
inc
enter
insb
outsl
pop
mov
mov
fs
jg
adc
jb
mov
mov
rcll
arpl
mul
lahf
push
in
pop
jg
fucomip
in
push
cli
push
cs
sbb
jnp
lock
test
inc
pop
es
mov
leave
mov
sbb
in
addr16
inc
and
in
or
xchg
jle
lds
mov
aad
in
lods
add
and
or
push
dec
push
mov
fdiv
scas
je
pop
es
test
inc
xchg
xchg
pop
outsb
jecxz
jg
mov
mov
inc
inc
iret
push
cld
mov
testl
add
xchg
ds
jge
push
sub
pusha
ja
add
add
divb
lcall
js
inc
fldlg2
sahf
pushf
fmuls
cmp
int3
sbb
in
loop
das
xchg
out
out
packssdw
int
sbb
push
lds
xor
mov
pop
dec
enter
packssdw
js
lods
les
arpl
ds
cli
into
dec
iret
mov
dec
arpl
xchg
mov
lds
fldcw
xchg
add
ljmp
xorb
push
testb
mov
xor
iret
or
inc
and
int3
inc
xchg
inc
jae
insl
insb
push
mov
jo
dec
add
ror
xor
out
pop
mov
or
stos
sbb
ljmp
pop
inc
push
lods
mov
shll
sub
std
jne
lret
mov
cmp
or
in
cmpsb
mov
repnz
movsb
movsl
jno
xor
loope
shl
jo
data16
mov
mov
xchg
dec
call
mov
push
lret
test
or
sbb
push
push
mov
into
inc
mov
shll
mov
ds
popf
orb
shrb
sbb
aas
add
shr
daa
ret
aas
push
in
jae
add
in
repz
ja
inc
inc
jmp
aad
and
jnp
push
dec
in
jl
dec
xlat
cld
dec
add
sti
fnsave
mov
xlat
sub
in
movsb
or
mov
dec
nop
out
fistl
enter
cwtl
daa
push
xchg
testl
scas
lods
in
leave
and
enter
push
movsl
xchg
mov
test
loope
xchg
sbb
inc
xor
lret
xchg
out
adc
push
push
or
test
cmp
arpl
in
out
dec
add
ja
add
inc
mov
dec
dec
add
dec
leave
add
pop
dec
lret
pop
ja
stos
push
mov
aam
pop
jp
repnz
loop
rcl
mov
push
xor
pop
mov
mov
cltd
sub
mov
inc
sbb
leave
outsb
enter
push
cwtl
dec
inc
inc
out
dec
pop
cld
jecxz
inc
pop
mov
cli
mov
sub
loopne
jecxz
dec
inc
pop
mov
cwtl
dec
adc
push
icebp
push
js
out
jb
inc
lods
inc
aas
jb
rorl
xchg
push
push
in
pusha
mov
jns
adc
aas
outsb
cmpsl
pusha
stos
dec
enter
sahf
clc
fs
dec
jbe
cltd
orb
pop
or
xor
sub
outsl
xchg
fnstsw
sbb
pop
stos
sub
lods
fisubs
pop
or
pop
jae
gs
sbb
or
in
mov
fcompl
adc
popa
jp
or
call
and
xor
mov
inc
data16
outsl
or
loope
popa
lret
cmp
lcall
xchg
fwait
lods
pusha
fcomps
dec
or
inc
mov
and
mov
adc
xchg
nop
rcll
xor
mov
dec
add
js
add
sbb
sub
daa
mov
dec
and
sub
jae
arpl
repnz
iret
ds
sub
mov
lock
or
pushf
sbb
in
mov
mov
jae
pop
idivl
jne
mov
popa
mov
inc
rcrb
mov
aam
and
daa
mov
fidivrl
test
fmuls
je
int
mov
popf
lock
scas
lds
mov
xchg
jp
mov
fcompl
xchg
sub
rcll
jl
push
ret
inc
in
ja
or
add
xor
outsl
xor
xchg
movl
inc
dec
inc
push
jecxz
pop
leave
cwtl
xchg
test
cmp
insb
iret
aad
pop
fisubs
mov
add
jp
adc
scas
sti
rorb
push
pop
inc
add
adc
jge
fsubl
testl
or
dec
add
push
mov
fsubl
add
pop
dec
je
jge
cmp
jmp
int
aad
xor
jne
addr16
and
jnp
imul
xor
sub
sub
or
shrb
mov
in
js
mov
in
dec
push
or
jp
xchg
xor
mov
lds
cmc
repnz
lahf
enter
das
jns
mov
cmp
push
mov
cwtl
rorb
lods
mov
dec
lods
pop
addr16
xor
dec
call
nop
mul
imul
jmpw
jo,pt
mov
shlb
sarb
pop
push
xor
push
cmpl
xchg
pop
stc
push
mov
adc
mov
addr16
xchg
push
jnp
scas
lds
jmp
mov
sti
in
inc
sub
ret
fsubs
and
pop
pop
jne
pop
loop
cli
adc
rcr
cmp
push
sbb
out
and
dec
fdivs
xchg
mov
mov
subl
dec
adc
sub
bound
mov
fistl
inc
stos
sub
sub
scas
pop
jo
js
lds
push
stos
out
in
jge
xchg
aaa
jo
and
fstps
ss
test
push
icebp
fiaddl
lret
push
icebp
iret
bnd
iret
jle
mov
mov
test
push
lods
into
xlat
rcrl
cld
dec
fnstsw
or
out
jle
pop
add
aad
out
mov
xchg
int
repz
dec
adc
pop
add
pop
andl
xchg
jns
popa
pop
add
repnz
jecxz
xor
test
xchg
push
dec
or
inc
mov
pop
xchg
jnp
imul
in
cmp
mov
and
and
dec
fsub
xor
xor
add
out
imul
push
insb
sbb
out
pop
xchg
scas
ja
out
in
loop
and
sti
add
das
in
std
loope
sub
insb
stos
adc
sbb
mov
lret
jmp
push
lcall
iret
cltd
lea
xor
inc
mov
subb
out
sti
cmp
in
adcl
xchg
inc
and
xlat
and
mov
sbb
jmp
dec
xor
push
mov
add
rcr
inc
ficoms
outsl
mov
push
rclb
mov
into
jae
fndisi(8087
sarb
lods
shr
clc
or
add
sub
sbb
int
sbb
push
pop
in
adc
inc
adc
orl
mov
mov
cwtl
out
aaa
mov
das
ret
jp
jl
jns
les
mov
and
or
cmp
jae
push
mov
inc
mov
add
dec
popf
add
imul
dec
adc
clc
cmp
push
dec
xor
cmpsb
push
xchg
lret
shrb
xor
les
dec
mov
shrl
dec
mov
push
aam
pop
fs
mov
js
testb
mov
adc
pop
push
push
xchg
xorl
adc
fcoms
mov
ret
sub
sub
mov
pop
aaa
je
les
jno
stc
push
in
mov
loope
inc
jmp
adc
in
outsb
push
and
scas
vpunpckhqdq
inc
xor
xchg
adc
push
sbb
loope
into
filds
mov
xchg
adc
pop
fistl
pop
adc
push
mov
fidivs
iret
into
dec
push
es
loopne
pop
push
xchg
sbb
popf
loop
dec
in
aad
test
and
rclb
in
or
cmp
mov
pop
sub
sub
sbb
jg
arpl
sahf
gs
aad
xchg
ja
push
les
outsl
scas
lahf
mov
cmp
outsb
sbb
jnp
mov
shl
out
inc
sahf
mov
cmpsb
sbb
aam
pop
subps
enter
jno
shrl
adc
icebp
pop
or
outsl
push
push
mov
fldt
int3
pop
mov
mov
ljmp
dec
jle
adc
lahf
dec
add
test
bound
xrelease
js
lds
call
mov
in
rolb
and
cmp
adc
test
jecxz
xchg
imul
enter
jno
out
mov
push
or
adc
sti
jp
inc
push
mov
insl
ss
cwtl
xchg
repz
mov
ljmp
cltd
sarb
sbb
enter
daa
cs
mov
add
aaa
das
add
rol
or
add
inc
cmpsl
dec
fcoml
je
or
xchg
mov
roll
les
xchg
cmp
rol
cmp
or
scas
xlat
cs
sbb
and
and
mov
mov
andl
xor
and
in
and
cli
fisubs
loope
mov
cmp
imul
xor
test
lods
mov
insw
insl
and
or
lea
arpl
call
mov
adc
icebp
push
sbb
shrl
dec
adc
cltd
jno
sbb
or
sub
push
sahf
mov
scas
int3
mov
lret
leave
sbb
js
inc
and
das
inc
loopne
sbb
in
mov
mov
add
dec
call
sub
fs
dec
jl
sub
and
mov
test
mov
fwait
mov
imul
cmp
push
push
inc
dec
add
insb
xlat
mov
out
mov
mov
add
repnz
addb
push
or
pop
xchg
lcall
inc
fs
adc
call
daa
push
pop
int3
test
nop
test
push
je
push
int
lods
imul
scas
cwtl
lods
mov
testl
mov
xchg
xor
fwait
jl
dec
out
addl
xchg
dec
xor
repz
cmpb
cmp
xor
sub
dec
push
jb
rcll
inc
cwtl
jae
mov
ret
mov
jl
adc
jle
or
movaps
pusha
inc
es
stc
adcb
jbe
or
out
xchg
movsl
jmp
pop
ret
jbe
fistpl
ret
outsb
cwtl
push
or
js
and
or
cmpsb
push
sub
gs
fnstcw
push
mov
add
mov
mov
cld
xchg
scas
jb
pop
jg
mov
push
dec
sub
push
aad
pop
mov
or
cs
mov
jo
rclb
test
sub
imul
in
mov
sbb
fsubs
dec
jecxz
ljmp
test
in
insb
enter
jne
mov
popa
mov
xchg
std
and
jge
jbe
push
cmpl
lock
cmp
adc
jbe
jae
push
arpl
pop
aaa
pop
sub
fildl
adc
pop
mov
add
insb
aad
xchg
js
inc
xchg
daa
pusha
arpl
popf
jp
ss
cmp
test
loop
sbb
xor
pushf
or
fcmovnu
dec
loopne
ja
je
js
in
mov
sti
and
dec
add
mov
adc
mov
jle
inc
pop
mov
lcall
loope
in
out
je
pop
jle
inc
adc
adc
popf
and
pop
scas
add
imul
subl
mov
jno
or
stos
inc
xor
adc
fimull
mov
lds
adc
scas
fisubrl
add
pop
sub
pop
sub
inc
adc
sahf
addr16
cmp
dec
push
jo
and
leave
xor
sbbl
add
and
cmp
mov
dec
fisubrl
fistpll
stos
ret
insb
xchg
sub
and
add
mov
jno
sbb
adc
jnp
lahf
sbb
fnsave
divl
test
movsl
outsl
das
movsb
fwait
fisttpl
sub
jno
mov
pop
xchg
push
mov
imul
push
cwtl
jns
mov
mov
xchg
cmpsb
aas
add
mov
lret
pop
add
out
cmp
mov
test
pop
mov
xchg
out
xlat
bound
fwait
pop
mov
daa
cmp
int3
movsb
stc
adc
xchg
and
mov
lods
adcb
inc
sub
push
sub
into
xchg
inc
lds
out
cld
push
mov
mov
lods
push
lea
xor
pop
sbb
pop
icebp
idivb
scas
outsl
shl
stos
push
in
pop
stos
imul
jb
imul
push
cmpsb
mov
jecxz
cwtl
mov
outsl
jne
inc
mov
lcall
dec
mov
pop
ss
inc
test
arpl
xor
lea
and
idivb
xor
in
cmp
inc
outsl
jb
mov
mov
jl
stc
sub
mov
inc
daa
push
jle
sbb
inc
mov
mov
mov
testw
add
adc
in
mov
adc
pop
xor
xor
xor
arpl
xor
setp
std
dec
mov
pop
out
mov
xchg
or
out
push
ret
imul
jbe
in
and
sub
scas
lcall
inc
aam
hlt
loope
jne
in
les
jmp
jb
mov
jo
inc
inc
lods
sbb
mov
popa
lock
cmpsl
jo
add
in
out
pop
inc
adc
xor
and
cmpsl
and
arpl
test
add
loop
inc
sbb
push
sahf
dec
ret
jge
xchg
and
mov
sbbb
dec
lock
scas
xor
scas
mov
fcomps
lcall
leave
in
mov
lds
das
and
es
nop
hlt
outsl
rclb
mov
mov
cmp
add
enter
imul
pop
test
push
push
adc
mov
adc
dec
or
xchg
xor
loope
pop
adc
pop
xchg
sarb
dec
jl
pop
inc
pusha
icebp
movsb
push
inc
push
outsb
sbb
xchg
stos
lret
les
int
sbb
or
sub
pop
mov
aad
cs
xchg
mov
mov
or
add
mov
sbb
jmp
cli
sub
movsl
and
lcall
and
jo
lea
inc
call
mov
dec
inc
in
lret
cmp
lcall
popf
insb
fsubrl
cmp
enter
scas
jmp
pusha
imulb
pmuludq
cmp
adc
cwtl
out
jecxz
pop
sbb
jp
and
mov
int
push
mov
lock
mov
insl
int3
jp
mov
mov
lods
push
add
pop
int
in
pop
cmpsb
fstl
jnp
cltd
xlat
psllw
pop
and
shlb
lret
mov
jnp
lahf
add
insl
and
arpl
js
mov
loope
test
rolb
mov
int3
std
imul
xchg
pop
leave
jmp
inc
movsl
add
mov
lock
out
xor
ds
sub
xchg
bound
sbb
stos
inc
xor
dec
pop
or
mov
mov
adc
fistl
xchg
sub
push
sar
or
daa
daa
rclb
rcl
lcall
inc
jmp
or
fbld
sbb
or
icebp
dec
andb
cmc
stc
push
lods
sub
mov
ljmp
ffreep
adc
rolb
adcb
jle
je
cmp
pop
xor
mov
xor
ficoms
sahf
add
shrl
negb
jbe
popf
dec
sub
push
idivl
fmull
add
cmp
nop
mov
sbb
pusha
insb
and
xor
cmp
dec
sub
out
mov
out
sbb
jno
out
outsl
inc
jl
mov
xor
aaa
xchg
jno
cmc
aas
outsl
test
pop
inc
cltd
testb
clc
lret
xchg
dec
xchg
cld
movsb
nop
mov
fdivl
push
test
test
xchg
cmpsl
or
int3
in
jmp
popf
cwtl
inc
sbb
add
jne
imul
xor
divl
vcomisd
adc
mov
lret
push
mov
fisubrs
mov
in
test
fs
pop
insb
out
push
mov
pop
mov
into
imul
roll
ds
and
and
xor
push
adcb
out
std
push
xor
mov
or
stos
int
out
ret
mov
jns
or
push
jne
loop
xchg
push
incl
dec
into
loop
or
loopne
mov
aas
ret
pop
ss
icebp
jecxz
mov
adc
xor
pushf
push
into
sbb
sub
pushl
stc
xchg
push
fwait
lods
jl
hlt
call
iret
pop
xchg
cmpsb
idivb
xchg
xchg
adc
ljmp
dec
jno
xor
mov
loop
xlat
ret
pusha
dec
or
or
and
and
repz
scas
sbb
jecxz
add
hlt
cmc
pushf
andl
scas
and
adc
cmp
xor
clc
out
pop
push
popa
loopne
cmp
xchg
mov
stos
shlb
push
cld
es
mull
xor
jne
mov
in
lods
leave
dec
sbb
and
mov
lahf
push
mov
outsb
dec
add
scas
fldt
scas
add
mov
and
dec
addl
mov
adc
sbb
popf
push
popl
out
cli
adc
mov
jno
hlt
pop
sub
es
imul
lret
fwait
jmp
and
and
xchg
cmpsl
or
das
fs
adc
sarb
cld
xchg
loope
sub
xor
jbe
out
neg
in
int3
js
in
cld
xor
sbb
and
adc
ret
mov
mov
ljmp
fsts
call
imull
les
inc
fwait
cmp
stc
xor
les
jb
pushw
scas
pushf
push
mov
xchg
repz
push
shlb
pop
push
sub
xchg
lret
lods
fwait
xchg
push
xchg
dec
pushf
js
pop
mov
xor
pop
push
and
fcmovnu
cmp
leave
cmp
jns
fbstp
pop
jb
arpl
movsl
in
lock
xorl
xchg
xchg
aas
aam
test
inc
xchg
sub
mov
movsl
hlt
ficomps
push
add
outsl
jbe
cmpl
push
jmp
pop
push
push
lahf
addb
or
sbb
push
stos
and
xchg
jns
fistpll
cmp
bound
cmp
mov
scas
dec
or
jle
push
sbb
and
xor
dec
dec
sbb
sbb
inc
jns
sub
cli
lea
jbe
pop
or
xchg
push
lock
mov
mov
xchg
adc
sub
pop
repnz
and
repnz
push
movsl
int
pushf
dec
pop
jg
repz
lds
pop
xchg
rcrb
jecxz
out
cwtl
lret
or
mov
pop
ja
sbb
cmp
push
jp
jmp
dec
das
enter
xchg
bound
pop
movsb
addr16
leave
cmp
repz
popf
adc
adc
xor
or
in
popa
push
pop
jnp
pushf
scas
lods
loope
xor
std
push
pop
sbb
and
mov
cmp
push
ja
int
xorl
sub
sahf
jle
mov
enter
jno
rcrl
or
cmp
add
cmpsl
xor
lcall
cmpsl
xchg
add
leave
xor
out
dec
aas
loope
gs
jl
add
pop
jno
push
pop
inc
cld
inc
inc
in
mov
pusha
pop
outsl
sub
dec
mov
mov
push
mov
mov
in
mov
sbb
xor
aad
aad
pop
insb
mov
loop
daa
and
loop
inc
xor
sub
xlat
dec
push
jb
dec
inc
test
popf
add
xchg
pushf
cmp
push
insl
leave
or
push
and
pop
in
ds
orb
ja
lret
les
icebp
pushf
bound
add
xor
movsl
insb
xchg
pop
iret
inc
pop
inc
push
clc
lock
pushf
repnz
mov
imul
xchg
mov
pop
xchg
and
pop
mov
ljmp
add
imull
cmpsb
push
nop
cmc
xchg
cmpsl
ret
mov
push
xchg
mov
sub
sub
lahf
push
orb
mov
ja
ss
popa
out
push
push
int
pop
movsb
sub
fsubrl
adc
and
xchg
mov
and
test
jecxz
add
dec
cld
fisubl
loop
cmp
aam
js
cmp
dec
fnsave
mov
sbb
pop
sub
cmp
leave
scas
ud0
stos
or
popa
test
xor
sbb
lock
mov
lcall
sti
mov
sub
dec
mov
fdivrs
std
mov
cmp
sbb
call
jnp
push
nop
xchg
loop
movsb
xchg
sbb
and
mov
fisttpl
mov
add
out
mov
cwtl
fsubr
pop
das
fscale
jecxz
ret
rep
cmp
cmpsb
lods
and
mov
sahf
shrl
ds
daa
fwait
add
nop
inc
sub
xchg
icebp
aam
sub
cmpsl
icebp
xchg
cmp
inc
cltd
stos
dec
sbb
or
xor
lret
nop
add
out
dec
jl
imul
inc
test
leave
sub
dec
push
cwtl
pop
lret
mov
push
icebp
sti
xchg
cld
jmp
fwait
pop
iret
flds
cmp
mov
sub
jne
and
sbb
fistpl
xchg
push
es
fbstp
push
test
sbb
je
jb
loope
push
lret
popa
sub
jne
push
mov
xchg
rclb
mov
xchg
loopne
nop
lcall
loope
pop
mov
dec
fdivr
cmpsl
xorb
and
enter
cwtl
mov
push
scas
mov
adc
ja
movsb
mov
inc
pop
sahf
into
dec
loop
dec
mov
outsb
add
mov
dec
into
mov
cltd
jmp
les
jb,pt
push
xor
cmp
ret
int
das
pop
shr
mov
dec
inc
lds
fiaddl
test
mov
je
sbb
ja
cmp
inc
mov
addr16
ret
in
jne
ficomps
adc
lret
cmp
shl
push
mov
mov
mov
jecxz
pop
fistl
and
test
dec
mov
mov
daa
out
scas
sub
sti
xchg
lahf
xor
lods
cmp
xchg
lret
cld
sbb
or
lret
mov
sbb
lods
lods
and
dec
subl
jo
inc
inc
sbb
pop
inc
push
cmp
or
neg
pop
out
jae
push
clc
sub
or
jae
cmc
js
add
jno
mov
ja
or
test
xor
in
mov
addl
js
insl
bound
sbb
mov
arpl
sbb
test
push
mov
clc
mov
fiadds
pop
lods
pop
xor
mov
adc
adc
mov
loopne
add
xchg
adc
mov
xchg
cs
pushf
fbld
fisubs
xor
cmp
push
mov
pop
stos
jg
mov
pop
pop
outsb
es
ret
dec
std
mov
cmpsl
test
xchg
pushf
mov
pushf
pop
mov
rclb
outsl
pop
mov
into
ret
sub
and
mov
out
pop
iret
cs
and
add
or
and
pop
sub
jecxz
movsl
fadd
neg
add
mov
scas
shl
fnstcw
xchg
sbb
out
nop
pop
es
jecxz
dec
cli
fimuls
popa
dec
popf
xlat
test
and
mov
movsl
shlb
inc
xor
sub
inc
mov
cmpsb
push
aaa
je
fcmovu
shll
mov
adc
or
and
lcall
shrl
subl
cmpsb
xchg
mov
mov
fistpl
insl
fldenv
das
aam
aaa
adc
fwait
jb
mov
ss
cmp
cli
adc
je
out
sbb
inc
pushf
push
or
add
mov
xchg
lahf
mul
push
xchg
shll
pop
dec
out
out
popl
push
lock
fistpll
inc
int
rcrb
jle
jp
add
jmp
call
and
jmp
add
lret
jle
dec
push
test
cmp
ficoms
jnp
dec
inc
pop
enter
cs
dec
fsubs
add
loopne
sbb
rolb
pop
icebp
xor
call
cmp
sub
push
dec
in
xchg
push
lea
repz
shrl
gs
push
in
pop
cltd
xor
clc
lret
mov
cmpsl
shll
add
push
icebp
imulb
mov
mov
add
mov
adc
data16
loop
mov
bound
mov
test
pop
aaa
jb
shlb
sahf
inc
repz
mov
lds
pushf
cltd
xor
mov
ficoml
jbe
mov
xchg
mov
popa
jae
add
test
stc
rcrb
test
fsincos
inc
adc
xchg
mov
dec
sti
mov
push
repnz
push
adc
insb
das
xchg
leave
das
ss
in
dec
xchg
addr16
mov
insb
lret
mov
adc
aad
pop
or
xchg
push
xchg
mov
and
xchg
dec
dec
sbb
rcrl
xchg
mov
cld
jns
out
pop
imull
jmp
fdivr
cmc
cwtl
push
cmp
out
ja
push
xchg
aaa
pop
push
std
push
test
cmpsb
test
or
stos
cmc
cltd
sti
loope
xchg
jg
loopne
xchg
testb
push
pop
dec
lock
hlt
test
sbb
ds
subb
fldenv
repnz
mov
call
or
fucomp
xor
cmpsl
cltd
pop
jp
int3
stc
loope
sub
sbb
adc
int3
xchg
shrb
loope
xchg
jmp
ret
inc
fistps
xchg
mov
push
mov
scas
mov
xor
das
mov
cmpsl
mov
add
ss
inc
rorb
dec
iret
lret
inc
cwtl
arpl
repz
push
mov
movsb
pop
sti
or
mov
mov
inc
mov
jbe
adc
mov
xchg
mov
jnp
outsl
lret
push
icebp
fwait
xchg
sub
or
xlat
movsb
test
and
and
clc
leave
outsl
fnstcw
movsl
clc
cmp
add
inc
sub
mov
pop
js
push
test
jae
xor
cmp
out
stc
mov
mov
out
xchg
inc
mov
cmp
call
mov
and
add
fwait
and
sbb
jg
hlt
inc
iret
push
or
dec
fdivrl
mov
cmpsb
cltd
pushf
outsb
stos
pop
jge
gs
movsb
adc
stos
out
mov
push
mov
fsts
jp
outsb
loop
pop
xor
push
or
in
mov
sub
std
push
dec
push
les
inc
pop
inc
push
jbe
and
push
sbb
roll
push
mov
imul
push
inc
shr
mov
adc
or
cmpl
cmp
and
dec
add
cmpsl
xchg
xor
js
outsb
jb
jb
iret
add
popf
cmp
rorb
push
pop
mov
xor
out
sbb
lret
jge
ljmp
cmc
jmp
in
jne
hlt
cli
pop
popf
mov
add
xchg
push
dec
inc
cld
sub
arpl
jbe
cld
pop
in
fs
or
mov
mov
mov
mov
and
dec
imul
leave
fnstsw
and
adc
lahf
in
dec
adc
scas
sti
push
dec
mov
les
push
leave
mov
jg
out
rorb
jbe
pop
daa
out
in
jp
mov
nop
cmpsb
push
clc
lret
xchg
lahf
test
and
hlt
xchg
icebp
mov
jnp
in
popl
mov
and
pop
push
sbb
add
outsl
xchg
lahf
lods
jb
test
cmc
loop
sub
jle
dec
mov
cmpsb
sbb
push
and
push
shlb
iret
daa
hlt
sahf
mov
inc
ret
push
jo
push
mov
nop
pop
mov
insl
pop
xchg
xlat
pop
mov
sub
xor
pop
aas
stos
pop
dec
push
clc
sub
add
mov
bound
mul
mov
xor
and
out
xor
and
mov
cmc
add
clc
inc
dec
fwait
subl
add
push
xor
cmpsl
push
push
fnstsw
xchg
mov
push
jae
cltd
lcall
mov
mov
jbe
jecxz
or
dec
inc
jecxz
ds
imul
inc
clc
add
mov
dec
add
scas
mov
inc
or
movd
int
pop
mov
add
and
cmp
push
scas
fistps
inc
push
mov
aad
sbb
lea
push
jnp
cld
push
fxch
movsb
lcall
adc
sub
xor
sub
daa
or
std
in
packuswb
call
clc
jecxz
pop
sub
mov
sbb
sti
popa
inc
flds
sub
mov
xchg
xchg
les
adc
mov
cli
stc
adc
out
mov
inc
in
lods
add
lock
mov
pusha
out
xchg
mov
ret
ds
loope
loop
std
cmp
pop
sub
sbb
rorb
fs
jae
pushf
dec
in
jmp
das
popa
mov
lahf
ja
jmp
dec
testb
ja
push
rorb
add
jns
scas
mov
lret
jl
mov
icebp
inc
fs
daa
mov
or
cld
test
push
cmpsl
imul
xor
jns
pop
in
lock
pushf
scas
jo
popf
or
jb
ss
fst
pop
lahf
or
cs
sub
mov
jae
jp
inc
rorb
cmp
loopne
int
jns
adc
fwait
das
ss
iret
sbb
push
and
or
mov
int3
iret
add
sar
add
cwtl
jp
cltd
fstl
dec
xor
imul
fnstenv
or
push
popa
insl
test
inc
in
in
in
out
xchg
pop
outsb
pop
push
push
xchg
sbb
fidivl
cmpsb
push
ret
sbb
push
pop
xlat
jg
push
ss
xchg
test
data16
jb
add
sub
sti
mov
sub
shrl
and
add
add
xchg
mov
rcrb
mov
popf
sub
xchg
mov
push
lahf
xchg
add
add
movsb
sub
push
push
scas
iret
adc
frstor
xchg
fwait
add
pop
jb
adc
pop
mov
repnz
xchg
repz
out
rcl
mov
daa
mov
lahf
arpl
loop
out
and
add
push
mov
lds
aam
enter
ret
lcall
test
add
orl
repnz
inc
push
sbb
push
sbb
push
loope
cmp
sub
push
push
mov
mov
or
xor
out
mov
mov
sbbl
mov
dec
lds
push
push
dec
in
adc
in
jmp
mov
jg
or
addr16
adc
jb
inc
xchg
sub
imul
push
cmp
sub
push
adc
cmp
icebp
lcall
sahf
or
inc
jnp
jecxz
xorl
jae
mov
gs
fcoml
cmp
mov
std
sbb
fbstp
inc
lock
sbb
pop
xor
cmpsl
or
ds
repnz
xor
sbb
jp
shr
imul
leave
jb
push
lea
sbb
dec
call
xchg
pusha
mov
mov
ret
dec
xlat
sar
pop
xlat
jge
and
xor
mov
icebp
inc
in
sub
sti
pop
cmp
shll
ret
outsb
pop
xor
sarb
cmp
sti
xchg
aas
sbbl
sub
mov
jbe
cld
pusha
jns
pop
push
xor
xor
inc
mov
rclb
mov
stc
cmp
and
daa
enter
mov
shrb
das
test
dec
lea
push
leave
cltd
roll
push
add
iret
push
faddl
jle
fistpll
inc
or
das
xchg
pop
cmp
cmpsl
into
pop
or
shrb
sub
xor
xor
testb
fcompl
cmp
cmp
and
repnz
dec
bound
ror
sahf
mov
jmp
addr16
jg
hlt
jnp
mov
push
js
imul
fidivrl
into
inc
xlat
std
cmc
xchg
in
out
js
stos
and
out
fldcw
and
insb
rolb
inc
shl
das
push
rolb
movsl
cmpsl
into
fldenv
imul
xchg
mov
aaa
xor
push
mov
out
jle
loope
sbb
push
add
cltd
test
cmp
mov
jnp
sbb
xchg
fisubs
pop
push
nop
xchg
xchg
aaa
addr16
sub
stc
push
dec
enter
cmp
pusha
clc
push
je
fdivrp
xor
mov
mov
xchg
out
test
mov
and
ss
xchg
cmp
mov
fists
lret
and
test
xchg
test
xor
pop
push
out
xor
imul
push
idivl
mov
cmpsl
sbb
cwtl
popf
ret
ja
add
into
xchg
mov
pop
shl
ja
ss
std
jecxz
xor
pop
jns
loope
test
xchg
out
inc
enter
xlat
fwait
cltd
gs
and
sub
rcrb
xor
sti
push
out
cld
adc
add
dec
stos
insl
leave
jo
gs
test
nop
inc
mov
pop
xchg
in
pop
imull
mov
inc
jp
pusha
das
sbb
shrb
inc
adc
sbb
iret
scas
repnz
sub
fdiv
mov
aad
push
pop
and
movsb
aam
or
subl
cmpsl
incl
push
outsl
mov
push
jl
insb
test
xchg
adc
lcall
sbb
sahf
xorb
fmuls
cltd
sub
inc
dec
or
jbe
mov
lds
dec
adc
mov
stc
jno,pn
insl
es
add
jp
add
cwtl
jbe
nop
dec
mov
adc
fwait
in
lock
outsl
aad
ficoms
sti
adcl
sti
hlt
jns
call
call
cmovb
in
or
rolb
push
loop
xor
in
ret
jns
mov
push
dec
test
imul
aas
aaa
xchg
cmp
repz
vmovd
jp
xchg
mov
testl
mov
fnstcw
or
addr16
ret
mov
mov
les
filds
addb
adc
push
push
test
xchg
mov
jge
push
rcr
xor
mov
dec
out
jecxz
jg
rcrb
clc
mov
daa
pop
xlat
inc
popf
push
mov
cmp
adc
gs
leave
push
ret
lcall
in
jecxz
aad
mov
iret
adcl
mov
xor
jne
mov
inc
lcall
mov
jae
iret
shll
das
pop
xchg
and
shll
fwait
aam
inc
movsl
push
mov
mov
cmp
xor
ss
fsubr
cltd
mov
xor
adc
pusha
ja
pusha
aaa
inc
xchg
or
hlt
out
cmpb
movsb
pop
pop
and
loopne
inc
pop
mov
je
adc
loopne
jns
push
dec
sbb
xchg
imul
mov
repz
lahf
int
push
bound
inc
leave
jbe
add
lods
into
fsts
jl
inc
jae
andb
dec
rcrl
jl
cld
filds
sbb
adc
loope
sar
or
imul
add
stc
loopne
push
push
test
bswap
sbb
xchg
test
mov
sbb
rol
jge
adc
xchg
mov
fsubs
in
rcll
popf
inc
in
mov
enter
pop
test
aad
int
fistl
jg
dec
lahf
cld
xor
bound
lea
out
iret
jb
in
scas
sub
xchg
xor
and
daa
fidivrs
ret
or
push
jbe
fmulp
xor
shrb
push
cmc
test
xchg
inc
or
fs
sbb
sub
aas
mov
cld
jp
or
cltd
sub
loop
pop
sahf
popa
int
cmc
or
inc
jge
push
push
sbb
adc
xchg
jbe
mov
or
scas
push
arpl
pushf
testb
in
jg
jns
imull
loope
cmp
insl
or
mov
sub
mov
notb
xchg
aaa
sub
sub
repnz
test
in
pop
sub
mov
in
inc
fsubrs
xor
fadd
xchg
push
adc
pop
xchg
enter
stos
inc
ljmp
adc
jge
cli
fisttps
mov
inc
sbb
std
mov
cli
mov
cmp
inc
inc
push
fs
sub
and
mov
xor
push
mov
outsl
out
mov
push
and
dec
addb
lcall
jle
jnp
mov
mov
jns
ds
les
sbb
dec
pusha
jb
sbb
scas
lock
jmp
xor
shr
pop
jg
xchg
adcb
sbb
pop
adcb
dec
pop
iret
rclb
push
insb
cltd
pop
inc
dec
inc
rclb
dec
cs
les
cld
ficompl
aas
push
xor
pop
shlb
or
xor
jno
xor
sar
jp
jmp
clc
ja
cmp
adc
or
test
ret
pop
fdiv
lods
cltd
testl
jne
add
into
je
fwait
pop
mov
ja
repz
push
out
cmp
or
jne
pop
lods
mov
and
aaa
dec
int
leave
subl
inc
jle
mov
and
or
sub
les
jmp
into
jle
mov
push
mov
shlb
sbb
mov
jne
mulb
xchg
xor
shlb
or
sbbl
push
jns
imul
inc
sarl
xchg
test
inc
stc
ja
jge
fwait
pushf
inc
push
xor
sub
add
js
xchg
testb
ss
push
icebp
js
adc
jg
stos
xchg
adc
fadd
iret
flds
in
stos
jecxz,pn
sbb
lds
cmpsb
hlt
and
negb
gs
push
cld
cmpsb
lods
mov
xchg
arpl
loop
rcll
mov
sbb
mov
xchg
rclb
mov
or
cld
add
xor
adc
cmc
xchg
jp
fldt
sub
jnp
data16
cmp
add
fidivrl
rcll
sti
mov
rorl
fcomps
popf
lds
popf
push
sahf
shrb
mov
roll
das
and
repz
insl
icebp
xlat
lret
data16
and
into
fwait
xchg
cwtl
cmpsl
lea
aad
add
lcall
and
jp
push
hlt
repnz
and
dec
outsb
enter
pop
xchg
fisttps
adc
and
cmp
pop
popa
add
sbb
pusha
pop
xchg
ljmp
xor
xor
xor
mov
pop
lret
sub
jmp
mov
dec
push
xchg
flds
pop
inc
push
inc
sbb
push
lods
jecxz
cltd
xchg
jle
popf
mov
test
xlat
cmp
or
cmp
cmpsl
lahf
sbb
hlt
call
inc
pop
mov
pop
movsb
inc
cwtl
or
ficoml
out
dec
jmp
jno
adc
cs
rclb
xchg
pusha
movsb
fdivrs
xchg
fsts
mov
fistpl
call
pusha
repz
mov
dec
and
std
or
ret
push
sti
inc
or
inc
mov
sbb
sbb
fwait
sbbb
and
and
xor
or
insb
sbb
mov
ljmp
pop
dec
test
addl
fsubrl
notl
push
and
out
mov
or
das
add
outsl
inc
xchg
pop
sub
jle
xor
xor
jmp
sarb
loop
lea
scas
pop
jbe
add
mov
call
push
aas
dec
mov
add
or
push
or
pop
cmp
add
xchg
stc
outsl
inc
push
sub
jno
in
test
sbb
test
mov
inc
mov
jmp
jg
dec
sub
test
pop
fwait
out
lods
pop
inc
adc
mov
addr16
jge
mov
jo
push
cmc
pop
push
insl
lods
mov
pop
test
sub
repz
out
jns
cmpsl
cmp
pop
mov
call
int
jl
pop
mov
andb
jmp
adc
pop
sub
pop
popa
ljmp
mov
nop
add
mov
clc
or
mov
and
or
int3
pop
frstor
xor
xchg
dec
inc
add
and
mov
dec
and
mov
or
xchg
and
icebp
lret
fwait
outsb
xor
das
adc
dec
and
dec
cmp
ss
loopne
pop
ror
popf
jecxz
cmpsl
sbb
adc
cs
push
xor
lea
out
adc
pusha
cltd
int3
push
fnop
or
outsl
cmp
sub
cmpsb
adc
xor
mov
mov
idiv
sbb
pop
jnp
sub
push
std
adc
jle
mov
cs
andl
test
mov
mov
xchg
imul
mov
xor
mov
iret
mov
mov
and
xchg
sub
movsbl
xchg
call
sub
and
push
movsb
stos
adc
cmp
arpl
pop
sub
jmp
push
adc
cmp
minps
adc
lcall
jb
ss
jp
cmp
mov
sti
movsb
popf
sbb
mov
mov
lock
xor
outsb
gs
mov
or
xchg
mov
rcr
push
cmp
mov
push
movsb
les
inc
repnz
cmpsl
mov
iret
xor
in
mov
push
and
int
jne
das
sub
dec
mov
push
adc
idiv
jns
imul
call
push
mov
cmpsb
xchg
subb
sub
inc
seta
cld
stos
push
pop
adc
mov
jp
xor
lods
leave
mov
or
notl
decl
xchg
pushf
movsl
pop
add
sub
movsl
mov
lods
adc
sub
call
mov
shlb
andl
pushf
ficompl
jne
xor
outsl
mov
imul
mov
jno
jle
and
mov
cs
arpl
mov
call
pop
movsl
sarl
jl
adc
dec
stos
in
xchg
adc
push
sbb
jnp
repnz
popa
nop
or
sub
inc
push
inc
push
imul
outsb
jno
xor
dec
out
mov
xor
dec
pop
or
sbb
push
in
push
pop
sub
in
mov
insl
repnz
dec
mov
cwtl
inc
jne
mov
sbb
push
notl
jl
popf
test
inc
iret
enter
xlat
xchg
sbb
cmp
jmp
xor
inc
mov
dec
popf
cmp
mov
test
jg
cmpsb
testl
aas
sbb
mov
out
lods
imul
cwtl
pop
scas
xor
xor
rcrb
mov
pusha
sbb
testb
adc
and
sti
lahf
fstl
ljmp
xchg
add
push
test
xor
push
lea
jno
sbb
add
adc
incb
jecxz
fidivrs
sub
push
adc
dec
add
std
int3
fcmovne
and
pop
push
insl
jne
pop
les
inc
push
les
pop
dec
fwait
sub
lret
arpl
mov
mov
mov
mov
imul
mov
out
mul
xor
or
inc
addl
cld
adc
imul
sahf
xchg
test
push
jp
les
in
mov
ret
mov
inc
adc
jmp
lock
or
shll
ret
dec
dec
inc
cwtl
pop
xchg
pop
dec
ja
mov
pusha
pop
sub
call
mov
cmp
or
test
xchg
into
outsb
mov
in
movsb
sti
jno
pop
loop
jg
mov
movsb
jg
push
add
mov
xchg
xor
icebp
popf
mov
dec
jo
imul
lods
je
adcl
aam
out
jae
or
mov
push
andb
xchg
aam
dec
or
lock
xchg
sarb
lret
lcall
je
nop
xchg
xor
shrl
cmp
push
mov
movsl
cmc
imul
sbb
pop
imul
pop
divl
into
popa
sub
xchg
jl
lods
mov
dec
daa
roll
pop
pop
push
or
mov
adc
das
jbe
in
iret
jns
or
xor
mov
in
xchg
and
cwtl
rcrl
cmp
scas
jb
sub
inc
sarl
dec
loop
leave
test
test
jge
fsts
movsb
xchg
leave
lret
or
fildl
aam
mov
cltd
sarb
stos
jmp
mov
pusha
or
stos
je
inc
jbe
add
push
and
fucom
insb
inc
inc
add
xchg
push
mov
xchg
inc
jecxz
lret
pop
or
lods
mov
cli
scas
or
xorb
sub
xchg
lahf
cmp
jl
push
cmp
mov
shlb
pop
mov
adc
dec
add
ret
mov
flds
xchg
mov
mov
xlat
ficomps
fucom
aas
push
mov
mov
inc
orl
mov
fldt
jns
pop
sub
xchg
bound
xor
outsl
inc
loop
shll
jnp
aam
xor
imul
sbb
mov
xchg
cwtl
pop
jmp
inc
std
out
jge
scas
push
fiaddl
rcl
pop
mov
mov
test
adc
ds
icebp
mov
sub
ret
pop
sub
dec
lock
hlt
out
inc
loop
es
sub
ficoml
scas
push
push
sbb
outsl
mov
in
flds
ja
sbb
push
out
lock
or
adc
push
bound
cld
or
xchg
jle
js
sub
sub
dec
jle
jmp
and
xor
pmaddwd
fcomp
inc
data16
icebp
xchg
stos
int
cs
enter
movsl
mov
fiaddl
push
pop
loop
jb
sbb
xchg
test
leave
test
jo
lods
bound
test
dec
in
mov
in
push
das
push
pop
jmp
outsl
cltd
dec
cmpsl
or
or
repz
dec
inc
ljmp
adc
aam
in
jae
cld
cld
imul
adc
mov
mov
adc
insb
inc
fst
and
push
push
fwait
sbb
mov
lret
stos
xchg
jecxz
push
sub
adc
popa
fs
mov
cltd
cld
call
movsb
push
and
lcall
std
mov
inc
fists
push
fs
movb
dec
lea
fucomp
adc
ja
js
jnp
je
adc
in
xor
popa
inc
dec
jnp
dec
jmp
addl
xor
ds
mov
std
andb
jl
into
insb
divl
pop
mov
adc
sub
xor
xchg
xchg
cmpsl
jg
subb
sbb
mov
sbb
loopne
adc
ljmp
inc
and
inc
enter
fcomps
cmp
inc
cmp
sub
loopne
ret
cmp
fwait
jl
sbb
sub
pusha
popa
jns
repnz
mov
out
mov
icebp
dec
mov
inc
or
sahf
cld
lret
xor
popa
dec
add
test
sub
inc
sub
insl
flds
es
xchg
push
and
dec
pop
jecxz
mov
roll
xor
dec
sbb
sbb
sahf
aaa
pop
or
jge
mov
out
push
push
inc
outsb
mov
push
fstl
test
inc
and
xor
adc
sbb
sbb
push
xchg
dec
mov
fst
xchg
lds
push
cmp
lret
in
push
jno
ret
pop
fmull
mov
pushf
imul
sbb
xchg
das
sbb
dec
xor
jo
jne
mov
add
hlt
nop
xchg
cmp
jns
ret
xor
xchg
fwait
jno
adc
cmp
inc
lahf
shll
leave
or
sub
inc
mov
in
push
mov
iret
adc
jge
sti
jecxz
lods
lcall
mov
and
ljmp
testl
cld
and
xchg
fldenv
out
stc
xor
add
sbb
test
stc
inc
xor
push
adcl
and
dec
leave
sbb
mov
mov
loop
mov
cmpsl
mov
mov
mov
iret
cmc
xor
sbb
bound
jns
in
je
lret
mov
jg
adc
in
and
adc
cmp
xor
pop
add
movsb
sub
jne
xchg
and
cmp
xbegin
rcr
sub
xlat
pop
mov
jmp
popa
mov
mov
dec
jg
inc
pop
mov
call
test
mull
cmp
test
popa
cmpsl
sahf
jnp
test
mov
pop
and
jmp
movsl
or
in
call
or
inc
into
lds
test
popa
sub
sub
push
inc
pop
jne
sbb
mov
cli
jmp
pusha
sbb
out
into
dec
jp
shlb
xchg
in
in
stos
cmp
sub
jnp
insl
cli
jo
inc
cmp
lds
fistl
movsb
rcrb
icebp
mov
pop
nop
pop
cmpsl
daa
push
mov
sbb
add
add
add
dec
pusha
cmpsb
cmc
aaa
jbe
jb
nop
in
test
jmp
jg
rcrb
push
cmp
adc
sub
fucomp
stos
cmpsl
fdivrl
imul
inc
and
jae
loop
arpl
popa
sti
popl
xchg
inc
cli
mov
adc
stos
jp
mov
or
mov
loopne
sbb
jns
pop
aaa
clc
sub
bnd
dec
fldcw
push
xlat
xchg
mov
sbb
clc
daa
out
nop
loop
xlat
sbbl
popa
outsb
jmp
test
sar
fidivs
push
roll
dec
pop
xchg
nop
mov
jns
test
push
sahf
lcall
sbb
mov
mov
fs
gs
push
jno
incl
push
cmpsl
psrld
imul
decb
sbb
addb
jbe
jns
dec
sahf
inc
push
in
das
push
scas
out
cmc
sti
cltd
xchg
je
push
fidivs
lods
filds
in
cmp
jns
lods
js
sub
mov
sub
pop
rcl
inc
dec
movsl
rcl
es
add
mov
xchg
aad
sub
cmp
cwtl
dec
xlat
addl
jb
insl
cmpsl
cmpsb
jg
xor
xchg
lcall
sbb
xor
aas
jae
lods
shrb
leave
jl
sbb
mov
aad
std
scas
aaa
cmp
jne
aaa
cmc
int
inc
dec
xlat
push
xchg
add
clc
push
mov
mov
out
stos
mov
jmp
sbb
sub
fadds
xchg
fsts
scas
rcrb
out
mov
mov
sub
push
adc
ficoml
outsl
sarb
popl
and
jp
push
mov
testb
sbb
dec
les
mov
cld
out
in
jae
adc
mov
test
fstps
notb
jbe
icebp
mov
mov
ret
jbe
push
leave
addr16
sub
or
jnp
ljmp
in
jno
mov
sbbl
in
outsb
imul
jmp
jbe
lods
adc
ja
adc
in
btr
dec
mov
pop
je
add
scas
ror
mov
ljmp
es
test
jecxz
xchg
ss
stc
mov
xor
pop
pushf
or
inc
xor
cmp
mov
cmpsl
je
or
or
dec
insb
in
sti
shrl
mov
jnp
test
ret
cmc
aad
dec
clc
adc
cmp
push
add
or
shlb
dec
or
sub
addl
fcompl
iret
add
pushf
roll
dec
jl
mov
push
fs
jne
int
cmc
clc
bound
xor
int
imul
push
cmp
xchg
jo
sarl
fimuls
mov
sbb
inc
sub
push
sub
sbb
push
shlb
dec
scas
outsl
and
mov
jnp
add
dec
xor
pop
or
mov
jmp
mov
adc
jmp
ret
in
outsb
test
and
shrb
lock
lret
lret
xor
nop
push
out
hlt
shl
mov
jp
insb
mov
mov
popf
sub
or
jg
pop
in
fiadds
mov
dec
xor
cmp
inc
in
mov
lds
mov
xor
ja
sbbl
cmp
jo
sub
push
int
xlat
cmp
cld
mov
push
and
xchg
lds
cmp
inc
xor
loopne
jnp
cld
jmp
xor
sbb
jle
pop
pushf
iret
adc
adc
push
ds
mov
cld
add
push
pop
pop
add
jl
sbb
fiadds
mov
xor
in
xor
ss
out
loopne
sbb
test
xchg
mov
ffree
mov
or
sti
pusha
inc
adc
cltd
dec
dec
arpl
.byte
