call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
lods
int3
dec
fadd
in
sar
scas
fcomp
repnz
cld
mov
inc
insb
push
jl
or
pop
add
cmp
int3
icebp
fadd
in
sar
mov
lods
xchg
mov
outsl
insb
push
jl
or
sbb
sub
cmp
int3
jno
inc
in
pop
cld
mov
stc
pushf
lods
lods
imul
pop
insl
js
dec
bound
int3
shrl
sub
pop
test
jb
dec
insb
fisubrl
cli
or
cmpsl
and
in
les
add
je
arpl
icebp
mov
insb
mov
xchg
subb
mov
loope
rcrl
nop
sub
rclb
stos
test
mov
fimuls
das
repnz
movsb
xor
call
addb
je
and
xchg
scas
subl
sbb
cmp
add
xor
push
fldl2e
mov
nop
push
dec
rol
xor
sub
icebp
and
in
je
sub
dec
lahf
add
push
dec
inc
push
xor
inc
cmp
cmp
int3
icebp
fadd
in
mov
pushf
subl
jl
or
sbb
sub
jp
mov
mov
fstl
and
xor
dec
popa
pop
gs
push
pop
loope
jns
xchg
sbb
in
ret
loop
pop
or
xor
cmp
jae
pop
push
push
xchg
pushf
ret
cwtl
nop
mov
loopne
pushf
subl
jl
or
sbb
sub
cmp
int3
icebp
fadd
in
sar
mov
lods
xchg
mov
inc
insb
push
jl
or
sbb
sub
cmp
int3
xor
sub
loope
cmc
ret
rcrb
and
xchg
pusha
sub
enter
js
xchg
fldenv
andb
xchg
sub
out
sub
movsl
push
cltd
iret
imul
cs
call
lea
outsb
outsl
jle
in
add
or
mov
nop
repnz
inc
test
std
fidivrl
popa
std
cmp
out
leave
lds
push
addb
repz
mov
call
outsb
mov
pop
sub
or
jo
cld
pop
cmpsb
jle
shl
leave
sub
je
add
inc
pop
jae
out
dec
or
pop
push
sub
sbbl
cmp
pop
ds
int3
dec
rcr
lret
in
lock
sysenter
jae
lock
push
jae
mov
jecxz
das
aam
push
dec
adc
js
fistpl
xchg
mov
outsl
mov
adc
mov
insl
fstp
mul
lahf
mov
cmpb
int3
cld
fildl
lods
xor
push
stc
dec
push
push
cmp
stc
add
scas
and
mov
pop
cmpsl
pushf
xrelease
lcall
inc
jb
inc
jno
out
jl
ficomps
pusha
cmp
mov
xchg
shl
call
inc
in
enter
jns
mov
jbe
pop
movsb
fnstenv
psrlw
rolb
sbb
lea
aam
push
lret
stos
or
stos
arpl
mov
das
scas
icebp
loopne
cmc
test
sahf
lds
cs
and
xchg
or
lods
pop
inc
jnp
push
dec
add
sbb
pop
xor
ljmp
shlb
dec
sub
push
xor
xchg
pop
fldenv
mov
jae
or
imul
jecxz
dec
inc
add
sbb
sub
gs
push
popa
or
xchg
iret
xchg
in
in
lea
shl
xchg
push
sub
mov
sub
lcall
sbb
out
ljmp
dec
lea
enter
add
mov
sbb
cmp
orl
pop
xchg
jmp
mov
stos
daa
pop
in
test
xor
sbb
cmp
mov
lret
pop
inc
jno
dec
or
out
pop
outsb
jg
mov
push
push
adc
xchg
fisttps
cmp
inc
mov
xchg
adc
aam
cmp
dec
mov
push
inc
stos
mov
scas
mov
jp
pop
push
es
stos
dec
fs
es
bound
fisttps
push
inc
insb
xchg
out
or
jmp
repz
jno
insl
andl
cmpb
dec
inc
mov
jge
mov
or
cmp
pop
jnp
sti
jp
sub
xrelease
insl
xchg
mov
sarb
jle
dec
lcall
pusha
fsubrl
jl
dec
je
int3
dec
cmc
arpl
jb
jo
sbb
test
rclb
and
jnp
xchg
call
mov
mov
sbb
lods
pop
dec
and
and
stos
div
leave
rolb
sahf
lods
bnd
mov
push
cmp
inc
sub
pushl
inc
lea
lock
fwait
xlat
mov
sub
lock
lds
scas
shrb
lds
int
mov
popa
inc
and
mov
pop
sbbl
jo
mov
mov
adc
ret
test
inc
test
sub
jne
mov
xchg
cmp
xchg
mov
je
dec
xchg
or
movsb
pop
cwtl
rcr
xchg
jnp
inc
stos
adc
ljmp
in
xor
lds
jge
shlb
or
mov
lret
cltd
mov
pop
or
and
addr16
add
mov
popa
clc
imul
jp
ficomps
inc
push
inc
popf
jbe
stc
cmp
adc
sahf
test
dec
cld
xor
pop
sar
gs
push
addb
or
testl
aad
out
test
mov
scas
ret
adc
adc
pop
daa
out
mov
push
andl
xchg
push
pop
fadd
jp
stc
sbb
and
mov
xor
jnp
push
add
add
in
inc
mov
pop
mov
jno
mov
push
ljmp
push
mov
or
push
pop
jne
push
es
idivb
and
or
add
adc
cmp
pusha
in
mov
jns
push
mov
push
lret
xchg
xor
out
fwait
pop
sub
xchg
cwtl
cmp
push
faddl
pop
add
cld
push
dec
push
pop
popf
repnz
mov
outsl
rcll
mulb
jl
pop
shll
jecxz
jne
scas
push
mov
dec
mov
mov
rcrb
inc
xchg
ja
sub
mov
push
and
hlt
das
jae
sub
daa
mov
cld
stos
xor
or
mov
lahf
pop
xor
dec
out
into
aaa
nop
enter
fisubs
inc
push
jecxz
xor
jg
dec
leave
inc
pop
int
adc
adc
shrl
adc
addr16
adc
cltd
xchg
out
test
and
add
loopne
in
jae
ret
inc
xchg
mov
push
and
lret
mov
jae
push
jb
jns
outsb
cmc
cmpsl
pop
bound
jae
cmc
jnp
inc
enter
repnz
inc
fsubl
mov
xor
daa
test
sbb
push
pop
add
jne
cmpsl
mov
pop
pop
jl
cmp
cmc
insl
lock
fdivp
lea
push
lods
xlat
lahf
add
push
adc
mov
or
cmc
icebp
push
cmpsl
jbe
int
sub
or
mov
dec
mov
ss
jle
mov
dec
sbb
fidivrs
daa
js
xor
ss
mov
fadds
rcrb
popf
inc
aaa
jo
fdivrp
pop
cmc
mov
mov
push
cmp
mov
push
jnp
lret
cmp
mov
imul
mov
jge
adc
push
scas
add
inc
test
lahf
xchg
popa
scas
adc
cwtl
pop
inc
xlat
mov
push
mov
fildll
popa
push
lods
cmpb
fidivrl
loope
jle
test
fdivrp
push
pop
cmpsb
mov
cli
aam
xchg
stc
xor
ds
aam
mov
push
mov
sbb
push
fimull
sbb
dec
push
les
jb
cmp
sarb
daa
dec
mov
mov
fcomps
push
clc
repnz
and
or
lock
leave
mov
cmpsb
pop
inc
sti
adc
or
add
repnz
jecxz
mov
mov
lahf
add
jle
stc
inc
xchg
jo
test
sbb
lret
in
addl
sub
add
and
lret
gs
xor
sub
fidivrs
ljmp
daa
lcall
pusha
cmc
jmp
ja
dec
jae
push
mov
repnz
mov
jecxz
popa
xchg
stc
or
dec
pop
inc
jge
addb
fistps
cwtl
repnz
push
cmpsb
pushf
stos
decb
fs
into
ss
sub
and
cmp
mov
push
adc
xor
lds
jge
scas
sub
aam
frstor
les
push
cmp
push
and
fsubl
jns
xor
scas
mov
cs
mov
mov
and
inc
pop
mov
imul
xor
aas
mov
mov
insb
in
mov
pusha
and
sti
jmp
push
mov
cli
mov
mov
xchg
mov
sbb
ficoms
test
outsb
lahf
sbb
dec
xor
hlt
adc
cmpsb
dec
pop
shlb
fwait
xchg
jns
stos
push
enter
out
mov
in
int
filds
shl
jae
inc
ljmp
pop
ret
sbb
jg
hlt
adc
pop
mov
sub
xchg
or
sub
test
shr
ljmp
or
xlat
xchg
sub
mov
cmpsl
or
out
pushf
add
arpl
push
mov
jae
mov
pop
jle
push
adc
scas
add
add
xor
imul
pushf
pushf
jmp
pop
inc
or
lret
popa
lret
xchg
ror
daa
aam
int3
add
insl
hlt
push
xor
jmp
test
mov
push
das
mulb
mov
push
in
call
jae
pop
lods
ret
add
imul
adc
icebp
mov
inc
dec
out
cs
enter
dec
jg
popf
xor
lcall
stos
cld
or
mov
ss
adc
or
dec
sbb
jmp
aam
scas
mov
xor
add
ret
lret
or
add
dec
lret
insl
pop
mov
nop
into
mov
scas
push
mov
jb
mov
jg
fisttpl
fwait
into
push
add
sub
imull
dec
push
mov
shlb
aam
sub
pop
jp
pop
xchg
and
xor
add
int3
xor
clc
sub
cld
and
mov
and
cmp
pop
xor
xchg
dec
cmp
push
shlb
pop
pop
icebp
mov
adc
jp
mov
adc
mov
inc
sub
pop
lcall
aas
pop
and
fnsave
push
push
incl
call
ret
xchg
aas
and
add
ss
in
out
iret
hlt
pop
jns
pop
push
sti
jge
add
into
decb
mov
rorl
xchg
xchg
idivb
mov
aad
ficoml
dec
pop
xchg
outsl
dec
add
jge
addr16
shrl
xchg
mov
or
popa
test
mov
call
sub
push
cmp
sbb
leave
mov
adc
xchg
adc
mov
aaa
addl
jp
add
call
pop
test
mov
mov
adcl
mov
mov
mov
lds
dec
sbb
xor
ds
adc
mov
sub
lahf
sbb
iret
pushf
sbb
pop
mov
jmp
xchg
add
xchg
or
cmp
or
sbb
inc
in
xchg
xchg
lods
incl
adc
orb
data16
dec
test
loopne
sbb
sbb
inc
push
fxch
lret
hlt
cmpsl
push
lcall
lahf
add
mov
mov
sub
adc
jge
enter
pushf
xchg
rcrl
nop
dec
movl
js
call
pop
neg
cmp
push
sahf
cmp
push
add
test
add
arpl
aam
mov
sbb
add
pusha
aam
jns
fcomps
jge
iret
mov
inc
mov
insb
jl
sbb
jecxz
stos
jp
or
xchg
leave
clc
test
jnp
or
sub
cltd
or
lds
lcall
in
ret
mov
test
inc
cmc
std
pop
inc
adc
push
in
cmpsl
insl
xor
sub
push
pop
xor
lods
mov
cmc
cmp
jo
or
nop
inc
jg
pusha
mov
cmp
iret
sub
loop
lret
adc
sub
push
out
lods
xor
fsubl
lods
dec
cmpsb
and
rcl
jge
sub
bound
mov
clc
pop
push
repnz
mov
pop
add
popa
lock
xchg
icebp
xor
or
cmp
cmp
ficomps
cmp
push
jg
jp
mov
jl
and
dec
sarl
mov
decl
mov
ljmp
mov
and
jg
sbb
lds
out
mov
mov
pop
dec
inc
push
jg
add
shl
mov
in
mov
je
push
sbb
jecxz
in
pop
adc
jle
push
pop
push
push
lcall
sbb
stc
jbe
out
cmpsl
idiv
ret
bound
or
sub
pmullw
sub
ja
lcall
ficoml
popa
and
cmpsb
mov
test
xchg
sti
mov
insl
sub
xor
or
in
push
dec
mov
iret
insb
aam
data16
xchg
mov
insl
pop
cld
sub
test
loop
sbb
mov
inc
loope
xchg
xor
arpl
icebp
adc
dec
sub
rcrl
int
decb
mov
sti
fimuls
or
lds
push
add
pop
jbe
jmp
dec
jge,pt
enter
adc
push
int3
cli
lfs
jle
fmull
add
nopl
test
fnstsw
adc
cmpsl
out
jb
pushf
push
ja
pushf
out
mov
aaa
cmpsb
dec
notb
in
inc
clc
lds
int3
xchg
insb
mov
fwait
xorl
ret
mov
data16
or
outsb
push
es
mov
mov
call
and
out
dec
aad
pop
idiv
sbb
sbb
shll
mov
aam
mov
jl
xor
jecxz
int
in
mov
cwtl
nop
or
add
mov
sbb
popa
shrl
push
pop
cmpsl
inc
dec
push
push
push
jge
out
sahf
into
sbb
int
in
add
ds
orl
mov
lret
jle
ret
push
rolb
cvtpi2ps
add
js
fmul
xlat
jno
cmp
sub
cli
or
push
insb
dec
in
dec
mov
jmp
push
add
int3
cmp
loope
int
push
cmp
sarl
and
pop
mov
xlat
imul
push
sbb
and
mov
rorl
jno
sbb
sahf
test
inc
or
inc
xor
inc
jae
es
mov
push
sbb
int
push
dec
fsub
dec
aas
and
pop
or
cmpsl
fcomps
inc
mov
inc
mov
cmp
sub
call
dec
inc
xchg
mov
sub
rcrb
lods
adc
push
lea
sbb
fdivrl
adcl
inc
std
icebp
pop
mov
mov
jns
adc
or
xor
out
pop
push
cltd
sbb
std
fsubs
test
mov
fsts
imul
jo
pop
sub
inc
bnd
fwait
or
je
cmpsl
test
xor
sbb
push
scas
stos
ror
shll
lods
jne
jnp
loopw
sub
pop
jp
fcmovbe
stos
das
sbb
mov
inc
add
or
cmp
xor
rcll
movsl
data16
xchg
loope
pop
sub
pop
push
jle
add
stc
sbb
sbb
shl
lock
lock
rcrl
push
gs
jle
mov
out
inc
add
fnstcw
fists
out
push
jle
call
aad
inc
mov
stos
mov
fistl
inc
adc
mov
mov
xchg
out
jne
repz
test
stos
sar
cmp
jge
fidivs
into
hlt
dec
lods
loop
push
pop
add
cmc
pop
mov
scas
fadd
hlt
enter
daa
icebp
scas
enter
pop
pop
sub
sbb
loope,pn
sbb
test
sbb
stc
int
sub
pop
add
jp
test
bound
sbb
xor
arpl
inc
pusha
push
mov
push
jns
mov
and
xor
push
repz
jp
lret
lods
das
je
shlb
mov
ljmp
loop
repz
push
pop
cmp
mov
xor
mov
and
flds
imul
mov
fcomps
mov
pop
add
adc
or
test
push
mov
pop
cmp
mov
sub
test
addr16
lods
fwait
stc
stos
push
lea
sbb
push
jno
out
lret
mov
mov
pop
inc
rcl
fmuls
fldcw
jae
and
cmp
outsb
sub
outsl
adc
imul
out
inc
sbb
sahf
pop
mov
popa
sub
test
jae
xchg
test
push
jns
xchg
shl
cmpsb
gs
sub
repz
addr16
mov
nop
xor
add
in
int3
cli
bound
dec
dec
movsl
xchg
stos
sbb
shll
aad
jbe
mov
mov
outsl
nop
sahf
adcl
sub
xchg
push
xor
mov
in
addb
aas
pop
bswap
jmp
repnz
addb
jge
xor
out
cmpsb
mov
iret
test
jnp
mov
lret
std
jge
jno
push
scas
fildll
aas
or
mov
push
push
test
js
mov
jge
cmpsb
mov
je
dec
fsubrp
xlat
int
fbld
push
adc
stc
adc
dec
jnp
or
mov
icebp
ret
xchg
pop
notb
ds
inc
lret
dec
out
pop
aad
xorb
sbb
and
mov
pusha
add
outsb
mov
push
aas
orb
xchg
into
pop
inc
cmpsl
sub
ja
mov
or
xchg
jne
or
rorl
pop
faddp
add
je
push
push
cmp
ja
xor
mov
jecxz
push
insb
or
daa
dec
push
aad
lcall
pusha
lock
jg
in
dec
mov
push
ljmp
stos
enter
push
and
mov
mov
mov
mov
pop
ljmp
test
sbb
leave
pop
push
addl
in
xlat
aaa
out
or
ficompl
mov
xor
pmaxub
movsl
sub
inc
data16
popf
or
mov
iret
es
outsl
sti
syscall
dec
mov
ss
dec
ja
and
ja
icebp
dec
push
dec
cwtl
je
popf
arpl
mov
jmp
cmp
mov
dec
mov
add
xchg
sbb
xor
jmp
ds
gs
cld
mov
data16
lea
add
fldcw
test
add
aam
sbb
jb
pop
es
push
cltd
icebp
add
inc
dec
mov
jae
pop
dec
in
roll
hlt
adc
subl
jo
jmp
daa
pop
inc
and
daa
fdivrl
pop
mov
pop
push
sbb
cmp
jbe
mov
fdivl
movsl
lods
fimuls
or
cltd
and
sbb
jns
call
mov
cmpsb
push
push
aas
pop
frndint
cmp
xlat
or
and
lds
xchg
dec
inc
pop
popa
test
jns
into
decl
movsl
dec
out
inc
cwtl
mov
addr16
jecxz
xlat
loop
fs
jecxz
rcr
mov
ret
push
pop
shlb
dec
data16
sub
and
mov
ret
sbbb
mov
test
addr16
stos
xchg
mov
subl
xchg
jp
jl
es
add
ja
jb
add
pop
jge
sbb
pop
mov
add
inc
push
lds
cmpsl
jecxz
call
push
mov
loop
cwtl
leave
add
sbb
xchg
mov
push
adc
cmp
lds
mov
add
jmp
sbb
hlt
cmp
inc
cwtl
movl
sbb
andl
pop
mov
mov
call
inc
mov
mov
pop
push
cmp
sbb
scas
sarb
jge
lahf
pusha
repnz
stos
cmc
mov
adc
imul
push
and
mov
shl
or
adc
fsub
add
xor
pop
jne
pop
push
aaa
out
push
in
rol
ds
cmp
xor
outsl
and
xor
xchg
mov
jecxz
shrl
movsl
fisttpl
jle
pop
sub
std
mov
mov
cmpsl
or
insl
into
and
or
in
notb
adc
mov
lret
jg
out
push
daa
ficomps
sbb
mov
outsb
out
mov
mov
cltd
bound
faddl
mov
mov
push
xor
push
pop
cmp
add
dec
or
cmp
popf
add
xchg
repnz
mov
jecxz
idiv
int
test
inc
and
int
jl
jbe
jmp
adc
push
xchg
aas
mov
and
sbb
jg
inc
xchg
pop
mov
es
movsl
push
fidivrl
add
or
and
jmp
lahf
cltd
sbb
inc
out
mov
mov
cmp
cmpsl
fimull
rcl
or
cmp
roll
lret
sti
ds
dec
aad
leave
xchg
inc
mov
mov
push
je
cmp
xchg
out
mov
xchg
cmpsb
out
nop
sub
dec
or
inc
sbb
dec
enter
rcrl
out
insb
icebp
adc
test
cmp
xchg
jmp
lcall
enter
stos
cld
dec
dec
xchg
sbb
inc
nop
mov
push
lock
mov
jle
fcmovu
jo
inc
or
jge
push
xlat
popf
test
push
cmpsw
int3
pop
cmp
ret
stc
xchg
xchg
mov
cmpsb
ja
sbb
xchg
mov
push
mov
iret
sbb
mov
lods
xchg
mov
inc
insb
push
jl
or
sbb
sub
cmp
int3
icebp
fadd
in
sar
mov
lods
xchg
mov
inc
insb
push
jl
or
sbb
sub
cmp
enter
in
sar
mov
lods
nop
mov
dec
insb
push
jl
or
and
int3
fstp
dec
in
stc
clc
mov
sub
inc
popa
mov
imul
insb
push
or
mov
ret
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
loop
bnd
popa
rclb
lret
adc
and
inc
loope
xchg
and
adc
ret
adc
and
nop
inc
loope
shll
xorl
jmp
ret
cpuid
popa
mov
andb
mov
loop
cltd
test
addr16
in
std
adc
loop
lods
jno
or
jmp
or
scas
pop
insb
xlat
aam
cmpl
icebp
movsb
in
aas
and
shlb
mov
fildll
fstp
mov
pop
inc
scas
mov
ja
fsubrs
inc
arpl
ret
xchg
loope
andl
popf
fwait
imull
jno
push
shr
mov
and
mov
pop
add
or
scas
add
inc
cld
sub
mov
sahf
inc
and
aam
or
scas
je
or
out
xlat
call
jb
pop
lds
push
adc
cmc
mov
mov
bnd
popa
shl
mov
xchg
xchg
push
fldenv
mov
addl
jnp
lea
repnz
into
outsl
mov
int3
and
roll
xchg
push
xchg
sub
fadds
les
loop
lock
add
cmc
je
mov
xchg
pop
icebp
and
pop
fsubs
inc
cmp
stos
xor
xor
shll
loope
xchg
and
adc
inc
bnd
popa
rclb
mov
and
icebp
inc
loope
xchg
and
adc
out
mov
mov
push
pop
cld
adcl
sub
fcmovne
xchg
or
gs
push
mov
inc
add
bound
fcoml
and
jl
jne
sbb
sub
shlb
xchg
mov
in
jno
notb
add
imul
sbb
hlt
vaddpd
mov
mov
data16
mov
lods
mov
sbb
sub
mov
add
cmp
mov
cmpsb
push
and
mov
xchg
mov
push
aas
and
movsb
sub
or
outsl
xor
jns
call
imul
sub
stc
mov
jno
std
add
aaa
xchg
and
jl
das
enterw
mov
test
divl
iret
jns
aad
fsubs
cmp
fcmovb
jg,pn
jns
xor
stc
push
or
les
pusha
mov
mov
insl
xorl
lods
mov
and
sahf
lret
icebp
pop
pushf
shlb
loop
sbb
aad
cs
sarl
push
mov
jl
fistps
pop
js
sbb
jne
jo
or
mov
mov
inc
xchg
fidivs
cmpsb
jae
outsl
addr16
push
cmpsb
insb
movsl
negb
sti
dec
push
xor
jmp
bound
mov
rcrb
push
jle
nop
sbb
mov
lods
cmp
aaa
fwait
out
xchg
inc
pop
mov
mov
push
pushf
ljmp
push
rcrl
mov
and
clc
lcall
push
push
in
and
call
js
sbb
add
lahf
popf
sahf
mov
fsubs
dec
leave
nop
inc
push
push
es
test
mov
test
rolb
or
xchg
fisttpl
lds
jnp
mov
loope
ss
cltd
dec
xor
adc
or
dec
cli
pop
sbb
jmp
push
icebp
ljmp
imul
repz
cs
push
jmp
adc
inc
mov
cmp
fcmovu
jp
sbb
push
jae
fwait
mulb
imul
mov
xchg
or
inc
push
out
cli
dec
aas
loopne
add
in
xchg
add
enter
xchg
out
lahf
in
and
sbb
insl
mov
pop
jl
addb
enter
pop
adc
imul
decl
addr16
mov
pushf
aad
cmp
lds
xchg
movsb
jp
out
pushf
js
iret
fisubs
std
push
push
mov
movsb
cltd
scas
adc
in
gs
insl
jmp
stos
movsb
not
repz
pop
sahf
orb
movsl
pop
adc
sahf
lea
sbb
daa
insb
pop
jge
aam
dec
ret
in
cmpl
jb
cmp
add
out
push
clc
or
pop
jbe
sub
mov
push
decb
gs
pop
sti
mov
in
dec
pop
int
adc
cmpsl
pop
cmp
mov
push
adc
jae
pop
mov
aaa
test
shrl
push
sub
pusha
mov
xchg
int3
outsl
or
pop
sarb
mov
mov
cmp
xchg
leave
push
push
cmp
lds
lods
jg
daa
add
std
ss
cmc
mov
add
lods
ret
xor
dec
sub
roll
add
xchg
mov
mov
out
hlt
push
nop
xchg
mov
ja
jae
cld
inc
sub
pop
test
rclb
inc
outsb
iret
sub
das
mov
add
scas
ror
jbe
dec
fmul
std
cmp
adc
ljmp
adc
sahf
rorb
cmpb
es
mov
jle
xchg
fwait
ja,pt
pop
fdivrs
imul
push
sub
adc
out
ret
mov
xchg
lahf
lods
cmp
out
cmp
cmp
cld
cld
ret
jo
push
imul
dec
call
mov
mov
or
fisttps
xchg
adc
cmpsb
das
rorb
xor
push
movsb
mov
das
ficomps
pop
cli
jo
mov
in
jle
or
xchg
push
mov
movsl
adc
int
mov
incl
xor
mov
ljmp
jmp
xchg
fisttpl
sbb
cwtl
sbb
movsb
or
lock
pop
jg
mov
xchg
inc
sub
in
aas
lret
jg
add
call
xor
pop
fdivrs
inc
push
vcvtsi2ssl
repnz
lds
fcoms
push
lock
cmpl
xor
pusha
out
stos
imul
xor
outsl
test
mov
bound
stos
cmp
add
loop
inc
mov
xor
je
xor
xchg
mov
daa
cmp
mov
enter
ljmp
decl
xor
ja
rorb
movb
jecxz
ljmp
fnstenv
jnp
in
sub
mov
pop
ds
sbb
xor
rclb
outsl
xor
in
sbb
inc
daa
pop
inc
fst
cmp
lcall
gs
sti
pushw
stc
mov
or
out
mov
ss
sub
lahf
filds
and
xchg
imull
inc
call
xchg
sub
cmc
sub
test
nop
adc
mov
out
and
push
jb
ljmp
xchg
fs
cmp
dec
out
mov
orl
in
inc
mov
aam
ds
stos
popf
xchg
inc
mov
xchg
hlt
pop
cmp
fimuls
call
xchg
hlt
fsubrs
enter
insb
sbb
push
jle
inc
xor
cmp
das
pop
dec
cmp
adc
lret
xchg
lret
fs
lret
xor
mov
cmp
mov
inc
mov
outsb
push
es
push
outsb
add
call
lret
pusha
or
xor
inc
fst
xor
pop
xchg
imul
sbb
adc
roll
or
mov
jmp
out
cmp
push
out
sub
lods
cmp
out
xlat
and
jp
std
mov
xor
sbb
pop
sbb
sub
sbb
xor
aaa
mov
jno
cmpsl
jmp
mov
ds
mov
in
cmc
xor
mov
push
mov
out
hlt
or
mov
lds
in
mov
mov
or
stos
pop
icebp
jle
sbb
mov
push
loope
ljmp
icebp
loop
movsl
sub
faddp
add
arpl
sahf
out
in
inc
dec
mov
fnstsw
and
mov
pop
sub
fsubrs
xchg
fcomps
es
mov
mov
fwait
or
mov
test
mov
stc
xor
rolb
cmc
ljmp
in
jl
call
inc
dec
jno
loope
or
pop
pop
push
shr
xchg
int
push
or
cmpsb
pop
jae
push
add
or
shl
iret
or
mov
mov
scas
sahf
or
push
ss
and
pop
jmp
cmpsb
js
or
cmp
mov
jbe
jmp
or
repz
inc
sub
movsb
xchg
push
sub
push
int3
xor
cmp
jp,pt
inc
mov
adc
add
mulb
dec
dec
pop
mov
and
sub
pop
push
push
jmp
inc
adc
shrd
sub
cmp
stc
notl
popf
decb
fnstsw
loope
jno
sarl
pop
mov
stos
adc
lret
mov
gs
mov
sub
and
jg
or
mov
shl
xor
je
aam
ror
arpl
cltd
mov
popf
leave
lds
adc
adc
lret
cld
push
xor
inc
cwtl
addr16
jg
push
shl
xchg
add
or
pop
sub
add
cli
mov
add
repnz
loop
popf
sbb
std
mov
push
cmpb
nop
adc
fxch
test
mov
pop
and
push
js
cmp
jp
push
inc
and
cld
cmp
push
mov
and
or
ss
mov
jno
adc
pop
rorl
arpl
addb
jo
fwait
loope
ss
fistl
sbb
jecxz
mov
inc
insl
mov
cs
cmpsb
xor
mov
jl
push
push
fisttps
inc
pop
add
push
orb
scas
jle
insb
ret
sbb
fwait
mov
das
pushf
jbe
xchg
roll
gs
in
lahf
add
add
xor
push
ret
xor
fxch
pop
adc
les
enter
ljmp
loope
roll
push
movsb
xor
outsl
adc
push
rolb
gs
inc
mov
call
dec
dec
out
out
and
jp
inc
jg
lods
push
mov
push
pusha
adc
jno
out
lods
push
add
clc
nop
jle
stos
adc
sahf
xor
xchg
sub
jb
lea
sub
push
push
inc
inc
mov
mov
sbb
shlb
pop
jae
lock
pushf
and
cmpsl
shlb
leave
pop
pop
enter
mov
out
std
pop
sub
fdivp
outsb
push
insb
xchg
xchg
xor
push
pop
add
test
dec
iret
push
ljmp
jg
div
and
fcompl
lods
or
lret
push
mov
jbe
cmp
xchg
lcall
adc
sbb
ja
add
sahf
or
jb
push
in
loopne
and
push
pop
mov
movsl
pop
mov
jnp
pop
mov
dec
add
cmp
dec
arpl
clc
adc
jmp
lret
jp
iret
add
pop
mov
and
jp
jge
int3
push
cmp
cltd
pop
push
inc
inc
lret
dec
adc
mov
mov
lahf
pop
mov
aaa
ss
test
lods
and
cvtps2pi
into
test
fsubrl
mov
xchg
inc
shlb
adc
gs
push
les
jo
aaa
sub
xlat
xor
sarl
push
imul
dec
mov
and
pop
adc
movsb
mov
movsl
inc
rol
jl
xor
sbb
xchg
out
pop
jmp
mov
mov
xor
push
testb
test
inc
mov
xchg
or
ret
dec
jle
loopne
popf
daa
aad
mov
ss
popa
insb
outsl
pop
jbe
adc
sbb
loop
mov
test
rorl
cmc
icebp
sbb
mov
pop
pop
push
out
int
jmp
fiaddl
and
out
lea
out
and
out
jb
dec
test
popf
rcll
mov
cmp
sbb
add
sbb
aaa
and
popf
fldenvs
dec
adc
push
sti
daa
push
je
inc
gs
xor
xchg
adc
mov
out
jae
xchg
mov
cmp
jo
sub
mov
xchg
inc
cltd
cmp
xchg
adc
sarl
outsl
xorb
mov
ret
pop
xchg
inc
xor
outsb
push
jge
cmp
stos
outsb
in
xor
scas
xchg
pop
adc
sbb
loope
rcrb
and
leave
ret
xchg
or
jo
dec
and
in
adc
dec
ja
mov
jbe
mov
aad
js
xor
jae
mov
or
cmp
mov
orl
shll
adc
and
out
lahf
mov
clc
popa
insl
lods
xor
std
fcoml
jecxz
mov
aas
in
xchg
cmc
std
push
scas
mov
test
inc
xchg
fsubrs
xchg
xor
fadds
add
sbb
jle
jnp
icebp
jge
fnstsw
in
inc
es
sbb
push
enter
les
sub
hlt
jp
mov
into
sbb
cs
inc
cmp
imul
xchg
push
aas
jnp
adc
cltd
imulb
sbb
push
mov
lock
rcll
push
lret
mov
cmc
ss
scas
andl
ficompl
insl
or
jp
adc
xchg
fcomps
cmp
out
add
adc
push
cmp
inc
cmpsl
mov
inc
shll
jmp
sbb
and
ss
add
mov
cmp
lahf
mov
add
loopne
lahf
lods
xchg
or
and
lcall
jmp
push
into
jo
lahf
add
repz
in
test
jmp
js
xor
inc
pusha
xor
add
inc
jg
lods
cmp
ficompl
mov
lock
cmp
push
lods
insl
adc
jo
mov
pop
push
mov
imul
and
jg
scas
dec
sahf
xchg
lock
icebp
xchg
and
mov
ret
dec
inc
mov
popf
test
lret
or
mov
in
jle
push
aam
jp
and
movsl
orb
movsb
fstpl
es
push
dec
jae
push
nop
test
enter
mov
sbb
pop
fistpl
aad
ja
pushf
out
aad
mov
fsts
lock
test
sbb
hlt
es
xor
daa
sbb
scas
mov
cmp
xchg
cld
inc
mov
sarl
dec
stos
inc
lea
add
cmpsl
cmpsb
fs
je
xor
mov
mov
leave
int3
jne
pop
and
movb
std
sub
fst
pop
lods
movsb
and
imul
out
pushf
lods
test
jns
jns
cmpsb
fsubs
push
jnp
xchg
jns
je
inc
insl
sub
das
xchg
loope
xchg
or
orl
mov
pop
jmp
scas
sub
dec
mov
daa
adc
xor
push
cmp
sub
ja
mov
sub
dec
or
push
cvttps2pi
popa
in
sbb
mov
pop
in
adc
sub
gs
neg
fs
inc
add
je
icebp
es
dec
movsb
mov
andb
inc
cmc
or
jge
pop
or
cmpsl
das
out
repz
push
or
repz
cmp
test
pop
mov
shll
sbb
incb
sbb
push
or
popa
icebp
push
inc
lds
cmp
adc
hlt
push
and
mov
xchg
push
sbb
movsb
cmp
sub
and
jle
jmp
lods
in
ret
stc
outsb
inc
push
loopne
adc
ret
pop
adc
dec
add
add
out
dec
sub
popa
mov
xorl
or
mov
mov
jmp
lret
push
into
cli
lods
jmp
gs
adc
outsb
jle
lods
and
mov
call
dec
loop
push
test
cmpsl
pop
addr16
je
jl
out
fldcw
ficoms
sub
inc
pop
mov
aaa
add
cmp
ljmp
pop
pop
insl
ljmp
mov
dec
jp
and
sbb
xor
sub
xor
pop
pushf
mov
movsl
pushf
xor
insb
aaa
and
pushf
adc
lret
pusha
in
outsl
pop
adc
stos
leave
insb
jmp
popl
insl
sub
xor
mov
jno
arpl
gs
ss
and
pop
add
clc
je
shl
inc
popa
call
insl
ret
xor
sahf
inc
mov
je
bound
and
fnstsw
push
add
pop
repz
lods
jns
mov
sti
inc
sub
out
mov
mov
lret
push
in
movl
push
loop
mov
mull
ss
movsb
stos
loope
inc
daa
or
jns
loop
and
hlt
mov
jg
sub
mov
xchg
jo
cli
push
outsl
push
xchg
mov
xchg
mov
xor
stos
sub
jae
mov
jl
jae
mov
pusha
hlt
mov
fxch
or
push
cltd
mov
jle
std
mov
or
cmc
cwtl
or
jae
mov
or
fnsave
rolb
mov
mov
pop
std
iret
test
iret
adc
bnd
sub
std
mov
cmc
sbb
pop
push
or
movsb
sub
mov
sbbb
sbb
mov
insl
data16
inc
out
std
pop
aaa
cmpsb
jge
mov
mov
popa
iret
int
push
push
jo
fiaddl
into
in
fsubl
pop
xlat
jmp
fsubl
repz
rcrb
aaa
rcrl
adc
push
das
stos
rorb
jbe
add
cmp
stc
fiaddl
cld
jmp
test
imul
mov
in
add
aad
and
mov
loop
mov
dec
pop
fsubrs
ret
jmp
dec
decb
mov
fistl
cmpsl
out
jmp
lcall
jno
mov
push
nop
out
jecxz
hlt
out
adc
ficomps
sbb
and
fadd
imul
stc
orl
pop
fdivs
orl
xchg
and
push
rol
enter
and
shl
adc
lods
mov
enter
sbb
xchg
je
mov
inc
out
aaa
pop
xor
add
xchg
out
dec
call
sbb
sbb
jle
inc
xlat
out
jle
gs
dec
push
scas
lret
dec
scas
push
scas
jmp
aas
jb
popa
pop
xchg
lret
push
cmpl
in
pusha
enter
call
int
mov
jmp
mov
ret
xchg
fs
xor
pop
movsb
loop
je
int
adc
mov
ja
or
dec
sarl
repnz
cmpsb
mov
mov
xlat
push
scas
inc
data16
in
push
out
inc
sbb
mov
push
into
mov
shll
lret
xchg
add
ret
popa
lods
leave
loopne
int3
jbe
jecxz
xchg
outsb
sbb
xchg
mov
movsb
popl
push
inc
push
push
lds
fisubs
jl
adc
fistps
mov
stos
jmp
pop
lcall
or
into
ret
and
adcb
ds
mov
push
xlat
jbe
ficompl
jmp
xchg
mov
ret
or
xor
sub
sub
popf
es
sub
aam
inc
les
push
lods
lock
popa
adc
xlat
test
sub
xchg
in
xchg
xor
inc
repz
add
mov
fdivs
call
jmp
push
ret
pop
lahf
inc
mov
or
subl
cmp
adc
pop
cmc
out
mov
mov
push
pop
cmp
fcmovnb
loope
inc
inc
gs
mov
imul
cmp
xor
jnp
push
mov
subb
or
sti
mov
dec
sbb
cmp
shrb
cmc
xor
add
ljmp
cwtl
jo
outsb
pop
les
cmp
mov
sub
mov
push
or
aam
dec
jmp
int3
fisttpll
fwait
roll
push
mov
ffreep
xor
pop
aaa
mov
das
shr
and
jg
inc
pop
ret
and
jmp
add
andb
push
mov
fwait
push
movsb
iret
xchg
jb
aaa
adc
in
adc
dec
sbb
inc
cld
movsb
out
mov
sbbb
sbb
stos
mov
xor
pop
mov
addr16
inc
aad
jae
loop
in
push
xchg
shlb
iret
xchg
sbb
and
mov
xor
mov
ret
call
cmp
lret
sub
add
fsts
and
sub
fs
movsb
pop
out
lods
loopne
or
cs
inc
xor
mov
ja
xchg
loop
push
xor
inc
movsb
add
pop
lret
out
aad
lea
xchg
popf
dec
pop
mov
inc
add
cmp
nop
out
xchg
fmuls
xor
pop
ficomps
mov
aas
mov
scas
adc
mov
jecxz
cltd
rclb
add
inc
lea
out
ds
cs
pop
cli
lods
dec
mov
cmpsl
popf
cltd
shlb
inc
push
add
pop
pop
push
rcl
lds
call
xor
loopne
out
js
push
jnp
push
outsb
int
outsl
dec
jmp
or
sbb
das
mov
rep
lcall
xchg
jge
cmp
in
xor
inc
dec
cmpl
inc
lods
mov
ljmp
mov
nop
adcb
sti
insl
out
stos
sub
sbb
lret
adc
mov
sarl
fsub
sub
push
cmp
lcall
enter
or
inc
adc
cmp
sbb
and
inc
outsb
ss
in
lret
out
fbstp
adc
jl
pop
ds
gs
pop
lcall
push
add
push
xor
jae
xchg
es
loope
lods
fisubs
test
mov
or
bound
testb
fwait
sbb
std
mov
mov
js
cmc
cltd
jmp
movsb
push
aad
dec
rep
clc
mov
lcall
int3
nop
in
fcomps
pop
bnd
adc
and
icebp
inc
loope
xchg
and
adc
inc
bnd
popa
rclb
mov
and
icebp
inc
loope
xchg
and
adc
jno
adc
rolb
and
shl
shll
loope
xchg
and
adc
sbb
rclb
mov
mov
fcomps
loope
out
or
dec
std
pop
in
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
out
adc
pop
xor
test
arpl
arpl
sub
into
mov
mov
mov
jle
outsb
add
dec
and
push
cs
push
jae
push
xchg
out
cmpl
scas
ret
sahf
repz
jle
outsb
add
dec
and
push
cs
push
jae
arpl
xchg
out
mov
fstl
loope
push
pop
outsb
jae
pusha
push
inc
mov
push
lods
in
cmp
jg
call
cmp
sub
jecxz
sub
scas
aas
inc
and
xchg
sti
jnp
mov
inc
mov
ret
push
cwtl
xchg
dec
jbe
sti
add
push
loope
in
push
movsb
lea
xchg
mov
pop
add
lcall
sahf
outsb
push
jle
mov
inc
jnp
sub
sub
es
ret
std
and
rcll
cs
fsubs
lods
push
and
arpl
dec
into
mov
sbb
outsb
adc
ficomps
enter
ljmp
inc
pop
lret
xchg
lahf
repz
sbb
adc
pop
xor
ds
cs
push
jae
arpl
xchg
out
sbb
into
mov
sahf
repz
xor
bound
dec
aaa
pop
push
imul
jecxz
lcall
loop
repz
outsl
sub
inc
pop
adc
push
and
dec
lods
testb
cmc
mov
push
into
xchg
xchg
mov
push
inc
push
cmp
popa
cs
push
jae
arpl
xchg
out
sbb
into
mov
sahf
repz
jle
outsb
add
dec
and
push
cs
push
jae
arpl
xchg
out
sbb
into
mov
sahf
repz
jle
imul
pop
sbb
dec
cmpsb
and
xchg
xorl
mov
dec
sub
addb
mov
jo
ja
mov
push
int
roll
inc
cmp
shrl
repnz
lods
adc
xchg
sub
cmc
add
lods
aad
mov
adc
sbb
mov
popa
lock
dec
jl
or
dec
dec
mov
push
adc
mov
cld
imul
popa
leave
mov
shll
jl
sbb
es
mov
jecxz
and
inc
fnsave
push
inc
js
and
xchg
mov
shl
addr16
xlat
lods
test
cwtl
inc
add
lcall
test
inc
andl
xchg
pop
jns
push
adc
xchg
fdivl
mov
pop
aad
test
mov
gs
sbb
out
lcall
lds
jb
cmpsb
outsl
addr16
ljmp
cmp
xchg
jnp
add
inc
mov
nop
xchg
cld
notb
movsl
cmpsb
lds
mov
jno
push
jae
test
das
lea
fs
jnp
std
add
push
add
xchg
mull
mov
jl
add
ret
xchg
push
popa
jne
ja
adc
mov
mov
xor
mov
stos
jnp
repnz
or
cltd
mov
sbb
call
sbb
pushf
mov
sbb
rolb
int3
inc
lods
fneni(8087
adcb
dec
sub
cmp
inc
enter
nop
ss
mov
jmp
inc
pop
add
aaa
cmc
cmp
push
aas
inc
aas
shr
enter
sbb
mov
or
addl
cmp
fwait
mov
pop
add
notb
mov
push
testb
adc
adc
xchg
dec
cwtl
and
mov
xor
xchg
rcrl
scas
pop
mov
out
inc
mulb
mov
xchg
call
or
cs
nop
fs
pop
add
xor
xor
mov
jbe
sahf
int
cmpsb
dec
xlat
sarb
in
adc
les
pop
xchg
pop
cmp
mov
cmp
sbb
mov
jge
les
rclb
in
cwtl
lcall
int
mov
stos
push
in
push
subps
aad
fadds
mov
or
mov
sub
pop
push
js
fstl
insl
push
hlt
into
enter
lea
gs
pushf
out
or
imul
mov
popf
ret
cmc
push
jnp
mov
push
jbe
or
cmp
in
filds
mov
pop
stc
xchg
das
dec
mov
mul
jp
and
jl
jl
outsb
leave
xchg
in
or
mov
jb
je
jnp
repnz
stos
sbb
adc
and
and
inc
lret
mov
jg
pushf
sbb
fwait
imul
stos
jmp
frstor
inc
cli
add
pop
dec
movsl
sub
cmp
jmp
mov
dec
and
insb
fdivrl
dec
leave
stos
and
xchg
dec
loop
outsl
add
xor
enter
jno
test
xor
inc
in
mov
push
insb
add
mov
sub
push
aad
mov
xorl
add
pop
out
lods
mov
test
stos
and
push
fistps
xchg
sbb
mov
cltd
mov
mov
adc
div
imul
xchg
adc
cmp
scas
mov
jns
insb
rorb
fldcw
mov
cmc
jae
pop
add
aam
xor
jmp
inc
dec
repnz
ds
js
mov
loopne
push
fwait
jo
rcll
sbb
and
lds
or
push
jge
fidivl
lcall
loope
add
test
inc
lret
add
rorb
add
jbe
xor
test
call
js
scas
add
xchg
mov
stc
adc
iret
sub
std
jle
jo
out
test
lcall
insb
jb
pop
cs
push
test
repz
jne
cmp
pop
jo
mov
push
out
pop
xchg
or
mov
movsb
cmpl
imul
out
pop
dec
mov
dec
sti
xor
insl
dec
lcall
sbb
ja
movsb
in
test
inc
jg
push
hlt
fdiv
sub
sub
sub
xchg
xlat
or
pushf
repz
and
outsl
jp
orl
sub
lea
adc
jnp
insb
and
xor
xchg
test
in
outsb
lds
cli
xor
cmc
push
or
add
fisttpll
sub
or
lret
pop
dec
mov
mov
shlb
xchg
inc
dec
leave
cmc
jmp
imul
push
cmc
mov
pop
push
push
xchg
jle
and
adc
push
mov
mov
sbb
pop
outsb
adc
cmp
movb
push
inc
add
bound
fsubs
jle
cmp
les
sbb
inc
cmp
loope
test
cmpsb
enter
cld
push
cmpsl
adc
push
ds
dec
add
mov
movsb
aad
mov
fmull
mov
dec
scas
cld
push
test
scas
loopne
movsl
std
inc
enter
jle
ret
std
push
sahf
push
stos
popf
ret
jl
aad
jge
inc
inc
repnz
adc
bnd
push
stc
xchg
ja
lods
lea
les
pop
movsl
pop
fnsave
mov
sbb
jb
cmp
xchg
insb
inc
cs
push
aad
sbb
es
loop
ret
xor
rcrl
std
and
push
mov
insb
shl
rcr
into
jg
je
mov
jmp
pushf
and
jle
negl
adc
bound
mov
or
xor
rcr
fiadds
xchg
cmpsb
or
mov
test
gs
dec
std
insb
icebp
inc
cmc
push
outsb
imul
dec
dec
mov
cmp
stos
out
jle
rorl
add
jge
dec
into
adc
pop
sub
adc
mov
mov
out
ja
push
mov
gs
in
mov
sbb
cld
jbe
in
fs
cmpsl
sub
jnp
push
nop
pop
push
mov
jle
imul
je
in
das
imul
iret
mov
cmp
mov
inc
out
popa
cmp
cld
cmpsb
movsb
sub
ss
xor
sbbb
iret
lretw
jne
mov
push
push
je
mov
and
dec
fs
pop
mulps
mov
or
mov
sbb
sarl
dec
jl
lea
cmpsl
dec
je
mov
cli
es
out
mov
imul
stos
sbb
and
lods
es
ficomps
push
inc
dec
dec
push
in
js
sub
scas
cwtl
jns
xchg
aas
enter
es
enter
mov
mov
enter
push
mov
push
add
das
jle
sbb
icebp
in
sub
and
inc
paddsw
xchg
cmp
add
int3
sbb
arpl
cwtl
fistpl
pop
push
aam
imul
andl
lcall
out
ret
pop
pop
ss
scas
add
mov
outsl
inc
addl
jge
ljmp
inc
ja
bound
adc
jnp
and
loopne
and
out
out
adc
cmc
sub
andl
test
xchg
loop
mov
shll
cli
dec
dec
push
push
fistps
adc
outsb
sub
pop
sub
clc
sub
ret
push
insb
stc
cmpsl
adcl
popa
mov
aaa
mov
mov
into
cltd
xchg
stos
xchg
jns
ljmp
mov
push
xchg
popa
mov
rcr
int3
enter
inc
js
xor
data16
scas
pusha
xchg
hlt
popa
js
sbb
fsub
out
add
out
sub
mov
sub
daa
mov
pop
xchg
pop
push
adc
xor
xor
mov
push
xchg
popa
loopne
xchg
daa
mov
sub
dec
iret
lods
mov
add
insb
dec
ret
bound
jo
and
js
test
into
negl
jle
ret
and
mov
aam
ja
into
sub
inc
push
int
es
push
jo
lea
sub
push
mov
adc
fldcw
call
sbb
pushf
inc
in
test
xor
popf
push
pmullw
imul
fisttpll
inc
xchg
push
mov
pmaxsw
sbb
pusha
mov
jecxz
push
xchg
repnz
adc
daa
mov
loop
into
cmpsl
pop
push
das
insb
loop
mov
adc
and
mov
fdivrs
mov
ja
xchg
push
inc
iret
icebp
mov
enter
xchg
loop
add
inc
sbb
mov
shll
sub
test
mov
mov
lret
pop
and
sbb
shr
jg
mov
rcrb
xor
pop
out
xchg
mov
sbb
test
cmpsb
sarb
addr16
cld
mov
cmp
pop
andl
push
sbbl
aas
ret
repnz
stc
rol
call
add
test
add
call
sub
nop
add
pushf
sbb
lcall
push
bound
jne
faddl
pusha
sub
pop
in
out
dec
mov
dec
cmpsb
stos
loope
adc
add
fisttpl
lock
mov
jns
pop
adc
add
jecxz
adc
xchg
lods
out
sete
call
jg
negl
pop
mov
xchg
rcrb
fimull
push
mov
mov
mov
push
pusha
inc
push
push
or
ficompl
out
mov
xchg
push
mov
clc
insl
enter
pop
jecxz
clc
mov
xor
pop
iret
icebp
or
jl
push
mov
les
sahf
out
xorl
stos
psrld
jle
mov
notl
jp
xor
cli
jne
lock
lahf
cmp
clc
jns
sbb
cwtl
lcall
push
and
inc
inc
add
mov
inc
testb
cmp
sysexit
ret
leave
arpl
mov
mov
xor
and
cld
ret
jo
lds
adc
mov
popa
jmp
daa
push
jae
dec
das
and
xchg
sub
mov
xor
gs
mov
pusha
out
cmp
ja
mov
dec
and
cmp
arpl
pushf
pop
pop
add
dec
mov
push
out
js
cld
sti
add
mov
xchg
jno
negb
lahf
push
xor
aad
movsb
dec
push
mov
dec
cmc
repnz
adc
aad
xchg
aad
xchg
xlat
insb
dec
xor
sub
mov
pop
jne
xchg
je
scas
rcr
dec
into
pushf
mov
cmp
mov
add
adc
ret
jns
or
in
test
cmc
xchg
push
mov
pop
iret
int
lock
ret
rcll
int
cmpsl
imul
jae
xlat
cmpsb
jmp
adc
in
sub
mov
roll
lahf
movsb
ja
bound
fwait
and
mul
arpl
pop
mov
or
sbb
xor
popf
pop
inc
jge
fdivl
push
das
std
sub
jo
jmp
cmp
std
pop
insl
pop
outsl
lods
sbb
cwtl
popa
and
out
adc
mov
std
add
xorb
push
push
sahf
push
mov
repz
imul
add
or
push
mov
lods
in
mov
stos
ljmp
out
or
std
or
adc
loop
cmpsl
sub
mov
popa
iret
adc
decl
xchg
jecxz
mov
in
adc
mov
add
outsb
mov
jne
lcall
clc
sti
mov
je
add
scas
xchg
pop
cmp
cmc
xchg
in
inc
xchg
cmpsb
mov
adc
mov
movl
enter
push
pop
mov
cwtl
mov
test
sub
data16
dec
pop
sub
xor
sbb
imul
addr16
xor
test
insb
sub
aaa
add
lret
sub
inc
fldl
xchg
vaddsd
shrb
sub
js
mov
push
arpl
pushf
mov
cltd
adc
popl
dec
fcomi
xor
sahf
repz
pop
or
bound
daa
push
loop
mov
int3
nop
lds
ret
out
mov
pop
fld
xchg
mov
xchg
movsl
das
sub
lea
lods
or
std
mov
fcoms
jp
fidivrs
sarb
mov
add
aam
cltd
enter
push
or
xchg
int3
xor
imul
mov
jge
xchg
lods
or
or
xchg
adc
add
cli
or
test
jge,pn
push
adc
cltd
mov
cmp
dec
pop
aam
lods
mov
or
ja
add
std
test
and
add
and
movsb
or
pushf
aam
adc
push
fsubrs
sub
gs
dec
jbe
cld
mov
cld
push
adc
clc
push
xchg
jmp
aad
cmp
push
scas
jae
addr16
nop
jns
movsb
cmpsl
and
pop
mov
mov
ljmp
icebp
dec
jge
pushf
cmc
add
les
test
mov
loopne
fnstsw
rcr
xchg
sbb
jmp
and
mov
sub
sar
sbb
mov
mov
aam
out
jge
sub
ret
out
dec
adc
mov
or
pop
jnp
iret
ss
scas
scas
adc
test
mov
insb
or
cmp
shrl
mov
mov
fcmovb
loopne
dec
jns
pop
insb
mov
lret
cltd
js
rolb
sbb
xlat
add
int
clc
xlat
cmpsl
jns
mov
adc
fistpll
mov
pop
mov
into
lds
mov
mov
filds
shlb
mov
add
inc
imul
or
stos
imul
dec
rolb
add
lods
dec
xor
outsl
outsl
rcrb
jns
adc
ret
clc
xchg
mov
lods
push
xchg
mov
subb
mov
outsb
cmc
mov
mov
lret
fsts
sarl
movsb
in
dec
jmp
adc
mov
outsb
inc
jo
mov
sbb
jp
test
sub
pop
es
dec
xchg
mov
add
fnstsw
sti
adc
insb
lods
mov
enter
insl
out
jne
outsb
mov
loopne
push
jmp
nop
sbb
pop
mov
xchg
bound
repz
push
push
gs
inc
in
pop
inc
inc
inc
pop
add
bound
jb
pop
sbb
enter
and
push
stos
cli
push
push
push
pop
and
inc
shr
clc
jo
jb
stos
xor
push
into
sub
sbb
mov
ljmp
inc
cmpsl
pop
lahf
push
nop
cmp
lahf
cmp
popa
sub
mov
or
xchg
mov
push
mulb
inc
sub
jns
push
pushf
fisttpll
sub
movl
addr16
push
fistpll
sbb
xor
and
adc
or
push
push
aas
int3
repnz
rorb
inc
sarl
inc
xor
jne
cli
and
sub
fmuls
mov
push
mov
push
fwait
out
faddl
jmp
push
mov
dec
pop
jno
loope
sub
xchg
jge
ret
add
add
mov
push
mov
adc
push
sbb
rcll
mov
jg
jge
repz
sub
mov
pop
add
inc
icebp
mov
xchg
cmc
sub
mov
addr16
les
test
dec
xchg
mov
mov
pusha
scas
sub
sahf
movsb
bound
xor
push
lret
xchg
xchg
jge
mov
int
bound
or
cmp
fwait
call
stc
mov
mov
imul
jp
inc
pop
repnz
cmpsl
sbb
adc
xor
lcall
xor
xchg
int3
test
jbe
ss
iret
cli
jp
stos
mov
ja
dec
mov
inc
xor
bound
dec
mov
mov
cmp
movsb
xor
lahf
sarl
lret
movsl
mov
popa
push
dec
inc
jbe
mov
repz
outsb
and
pop
cmp
inc
in
nop
cmc
icebp
or
xchg
inc
fists
sbb
jecxz
outsl
cmpsl
iret
call
cmpl
dec
fists
xor
adc
mov
adc
rorl
sbb
and
roll
lock
sbb
lds
lahf
add
cmp
mov
imul
flds
push
fwait
je
lea
and
sub
mov
loopne
or
in
dec
or
dec
loope
jge
arpl
jno
movsb
pop
pop
cmp
xor
pop
out
roll
dec
fsub
mov
mov
imul
sub
xor
popf
shll
mov
sbb
pushf
mov
repz
loope
sub
stos
stos
sti
scas
push
inc
mov
adc
out
mov
mov
fs
cmp
outsb
sbb
or
sub
pshufw
push
repnz
aad
das
pop
fs
lret
inc
and
cltd
dec
pop
jo
loope
rcrb
fsubr
repnz
cmpsb
sub
dec
scas
ss
inc
test
xchg
fildll
pop
or
jb
and
xchg
push
mov
cli
pop
xchg
pop
ret
fimuls
or
lock
enter
movb
idivb
repz
dec
jnp
stc
fldcw
sbb
push
mov
rol
enter
cs
out
sbb
addr16
mov
inc
psrld
pop
mov
xchg
jle
imul
sub
mov
push
or
test
insl
and
int3
and
lgs
mov
inc
push
sti
sbb
out
notb
xchg
stos
fiadds
adc
cmp
lret
push
in
leave
inc
cs
fsubrs
add
xchg
dec
cli
pop
lret
pop
cmpsb
xor
inc
fbstp
xchg
aaa
mov
orb
or
sbb
inc
lahf
xchg
adc
cmp
es
xchg
shl
fld
out
mov
sub
dec
clc
popf
mov
jnp
add
fs
jno
lods
outsb
jb
mov
lock
fiadds
hlt
dec
ljmp
inc
fiadds
cld
je
cltd
xchg
pusha
repz
dec
cmp
add
data16
adc
jae
aam
jmp
and
jl
loopne
cmpsl
movsl
push
js
inc
sbb
and
inc
cs
add
gs
push
push
testl
jb
pop
int
inc
es
cwtl
cmp
shlb
data16
cmc
call
bound
loope
repnz
repnz
das
lret
dec
rorl
jge
jae
mov
xchg
ss
inc
fwait
stos
mov
gs
mov
sahf
or
jns
stos
or
jle
shrl
inc
jge
lods
xchg
mov
push
push
dec
dec
cmc
ret
sub
mov
inc
and
ss
push
add
das
lds
repz
ljmp
rorb
pop
enter
outsb
xchg
fwait
pop
and
pop
cld
sub
outsl
stos
xchg
cmc
xor
sbb
out
pop
sub
push
aas
inc
sbb
jae
xlat
jmp
nop
or
mov
imul
jns
fld
xor
repz
shrb
xor
mov
mov
sub
xchg
je
lock
scas
xor
imul
scas
xorl
loope
les
pop
cmpl
f2xm1
loope
push
cwtl
out
call
add
addr16
xor
push
xor
or
fcomip
sub
sbb
sahf
jo
filds
test
addr16
in
cmc
loopne
dec
inc
lahf
insl
into
fmull
cmp
scas
scas
or
and
out
ja
stos
lods
sbb
sbb
out
lds
lods
push
or
cmp
xchg
adc
sbb
enter
rol
aam
lock
inc
cmpsl
adc
xor
push
divl
xchg
sbb
cmp
outsb
xor
jl
sub
dec
xchg
dec
and
popl
pop
rol
push
jmp
xchg
adc
xchg
rclb
testl
test
lods
adc
xor
xor
mov
outsl
add
repz
ds
cs
push
jae
arpl
xchg
out
sbb
into
mov
sahf
repz
jle
outsb
add
dec
and
push
cs
push
jae
arpl
xchg
out
sbb
into
mov
sahf
repz
jle
outsb
add
dec
and
push
cs
push
jae
arpl
xchg
out
sbb
into
mov
sahf
repz
jecxz
adc
pop
xor
ds
cs
push
jae
mov
je
into
aam
pop
es
or
sbb
rolb
jno
popa
pop
sbb
adc
pop
shrb
loope
xchg
out
cmp
push
das
inc
aas
jno
popa
pop
adc
jg
dec
and
lods
sarl
mov
fists
inc
aas
jno
popa
push
adc
xor
inc
rorl
cmp
repnz
repnz
enter
and
jnp
xchg
push
adcb
shrl
xor
mov
leave
sbb
or
pop
xor
test
xchg
int
leave
xlat
insl
das
dec
push
setg
lahf
push
stos
out
lock
scas
shrb
mov
inc
cmp
jg
cmp
outsl
sub
jg
xor
decl
pushl
xor
aas
mov
data16
jns
mov
and
dec
inc
adc
pusha
sarl
add
fdivp
lock
out
dec
and
shlb
leave
mov
roll
and
mov
aam
push
mov
xchg
scas
test
jne
rorb
xchg
das
inc
sub
popa
add
xor
inc
shll
loope
xchg
testl
aas
aaa
push
daa
push
je
outsb
adc
movsl
xor
fisubl
aam
shll
adc
sbb
dec
je
xor
sti
loope
popfw
in
fsubs
inc
pop
aaa
outsb
add
push
add
jg
dec
and
scas
sarl
out
cmp
push
das
inc
aas
jno
popa
pop
adc
jg
dec
and
scas
sarl
out
cmp
push
das
and
rcll
popa
repz
aam
add
mov
loop
imulb
adc
stos
jno
sbb
imul
cmpsb
je
add
xor
and
mov
jle
add
repz
les
mov
xchg
push
or
or
mov
jno
fwait
cmp
and
adc
ret
movsw
pop
xor
mov
mov
daa
pop
mov
fcmovnb
jo
mov
push
repnz
orb
mov
imul
cmc
out
jno
mov
mov
cld
push
sub
cli
mov
test
imul
test
cwtl
pushf
or
cmp
xorb
jns
lret
mov
sbb
sti
adc
jno
mov
movl
mov
mov
push
mov
je
xor
sub
xchg
call
test
sbb
movsb
jle
daa
pop
xor
xchg
sarb
stos
sub
adc
sbb
pop
mov
push
in
rcll
jge
fisttpl
sub
pushf
sti
lcall
mov
insl
sarb
xchg
xchg
bound
push
cmc
arpl
push
xor
and
in
std
lcall
das
xchg
dec
xor
imul
xchg
inc
jle
jl
scas
jecxz
loopne
adc
stos
lahf
xor
popa
or
mov
push
decl
cmp
xchg
mov
test
fnsave
xchg
mov
mov
add
fs
pop
dec
movsb
or
cmp
cmpl
inc
dec
shld
dec
pop
xchg
fisubrl
and
push
cmp
jp
hlt
sbb
dec
cmp
movl
inc
xchg
add
push
pop
or
dec
inc
add
lcall
fidivrl
sbb
lods
ljmp
stos
leave
or
insl
mov
mov
inc
int
pop
arpl
insl
clc
push
mov
and
pusha
lods
repz
lods
jecxz
mov
xchg
cld
jbe
push
in
ljmp
fxch
inc
mull
popa
mov
fnstenv
orb
sub
xlat
sti
push
and
test
mov
pop
hlt
out
cs
aaa
mov
dec
mov
dec
cmc
cmp
jp
sub
shlb
jle
or
xor
arpl
jns
cmp
iret
mov
sti
sub
shll
arpl
lret
fsubrl
mov
dec
fildll
mov
sbb
push
push
lea
loop
or
xlat
arpl
jle
xor
sub
dec
stos
fimull
sub
and
xor
stos
mov
data16
mov
dec
pop
cli
pop
test
add
loopne
jp
aas
cmp
xlat
sarl
pop
xlat
jge
add
scas
mov
clc
testb
lcall
and
scas
dec
and
test
xchg
cmp
nop
and
imul
xor
mov
cmc
push
cmpb
jae
das
mov
lds
test
mov
pop
shr
aam
pop
dec
int3
repz
inc
mov
or
xor
push
lcall
mov
adcl
repz
movsb
stos
sub
dec
imul
or
stos
or
je
mov
mov
jg
outsb
sub
cmpsb
mov
test
dec
and
pop
aaa
mov
mov
pop
sbb
and
xor
mov
int
jl
push
lock
cmpsb
inc
daa
ret
scas
adc
sti
int3
pop
inc
adc
hlt
sub
jp
cltd
mov
popf
adcb
dec
filds
lods
xorl
xlat
lock
add
mov
rcrl
pusha
cld
adc
sub
xchg
xor
mov
inc
sub
aad
out
cwtl
and
insb
pop
push
movsl
fsubrp
cld
xchg
dec
mov
mov
sbb
cwtl
mov
inc
cmp
pop
pop
mov
lcall
push
push
stos
cmp
xor
mov
mov
push
or
jbe
movsl
leave
jle
pop
pop
xchg
jbe
mov
popa
mov
imul
rcll
pop
aas
cmp
test
ja
mov
push
xchg
push
aam
not
mov
inc
xchg
out
loop
inc
rsqrtps
xchg
mov
popf
xchg
loopne
insb
inc
xchg
add
cwtl
es
xchg
cwtl
mov
sti
push
pop
xor
ss
sub
rclb
add
xchg
stos
rorl
sbb
and
mov
sub
loop
push
xor
and
lahf
sti
insb
insl
addr16
push
in
sbb
fnstsw
fdivrs
or
test
cmp
imul
outsb
dec
cmpsl
add
icebp
je
dec
imul
xchg
add
movsl
call
cmp
sub
add
rorl
imul
jmp
sahf
push
adc
xchg
pop
ja
or
loopne
mov
or
in
fnstcw
adc
and
dec
lcall
sti
sub
jo
dec
loope
scas
mov
les
pop
dec
cmp
rorl
pop
xlat
fldt
jge
xlat
xchg
mov
ds
fs
mov
xrelease
add
sbb
mov
inc
and
fistps
adc
push
loopne
ljmp
sub
xchg
mov
xchg
fmulp
test
push
subl
js
sub
xchg
cmp
fxch
xchg
std
mov
cltd
enter
outsl
loop
sbb
pop
push
movsl
push
lea
dec
loopne
cld
jnp
and
aaa
add
add
lcall
sub
das
insb
mov
jbe
pop
mov
inc
lea
cltd
dec
jne
movsl
and
cmp
test
mov
push
and
cltd
ror
aad
ret
xor
push
lcall
scas
mov
sub
push
sbb
dec
int3
ja
cmp
mov
lcall
jno
push
pop
and
movsl
adc
mov
mov
sbb
rorb
pop
popa
repz
cld
push
insb
adc
bound
test
cmp
fs
pop
cmpsl
cs
repnz
sbb
push
jo
jecxz
jecxz
jmp
je
jb
add
ret
sbbl
xchg
sbb
js
push
lods
sbb
clc
jo
and
int3
fcoms
xchg
cmc
xchg
outsl
xchg
outsb
arpl
and
scas
hlt
xchg
in
cmc
rolb
pop
fldenv
cmp
into
fisubl
push
out
push
and
jbe
xchg
push
fwait
mov
repnz
and
cmc
adc
cmpsl
les
fcoms
out
nop
sbb
push
cld
testb
int
aam
out
iret
xor
push
shll
clc
jbe
subb
out
sub
lcall
pop
sbb
in
aam
and
sub
xchg
out
dec
push
repnz
push
data16
stc
gs
pop
add
in
pop
inc
cli
dec
rclb
imul
dec
pop
xchg
mov
ret
adc
or
xchg
lret
fs
iret
cs
sahf
das
or
mov
add
mov
test
movl
fucomp
pop
jmp
xchg
cmp
dec
pop
xchg
cmp
enter
test
pusha
das
mov
mov
dec
xchg
add
mov
xchg
push
arpl
bound
add
repnz
mov
push
test
adc
mov
and
stos
xchg
xchg
mov
cmp
mov
lcall
vsqrtsd
out
lods
sub
dec
xor
push
inc
jp
xchg
pop
pop
push
mov
nop
jle
push
cmpl
pop
sbb
and
xor
mov
fstpt
lock
rcl
add
sub
gs
cmc
jb
xlat
in
mov
repnz
insb
dec
aam
inc
dec
cmovbe
popa
mov
adc
nop
sub
cli
gs
hlt
imul
mov
pop
cltd
mov
mov
clc
jbe
sbb
cmp
fisubl
or
adc
iret
std
rol
xchg
cmp
je
pop
sarb
xchg
jl
dec
push
or
in
cld
icebp
pop
push
loope
mov
aas
mov
aaa
test
mov
in
inc
je
dec
icebp
ret
insl
int
mov
outsb
xchg
insl
push
loopne
data16
push
xor
ja
stc
xchg
and
aad
lods
gs
shll
xor
adc
adc
sub
push
addr16
and
and
cli
pop
xor
push
pop
mov
rcl
jecxz
xchg
mov
rcrb
jl
push
out
xchg
inc
inc
mov
pop
jne
push
push
jns
fsub
jnp,pt
mov
cld
inc
and
xchg
xchg
sbb
lahf
mov
lods
sbb
or
xchg
sbb
or
adc
lahf
sub
cmp
mov
pop
aam
jns
cmp
imul
sub
pop
mov
rsm
loopne
mov
xchg
scas
cmp
js
stc
aaa
xchg
mov
ret
xchg
cwtl
outsb
stos
call
jb
sub
xchg
inc
and
arpl
sbb
adc
es
and
and
lret
in
lea
pop
sbb
int
dec
push
clc
cmpsb
rclb
sbb
cltd
xchg
sub
cs
xlat
loop
pop
std
adc
insb
das
adc
jmp
push
rclb
vpmacsdql
ror
stc
fcomps
insl
gs
sub
sbb
adc
loopne
jb
mov
inc
les
add
les
inc
push
mov
pop
in
jno
outsb
adc
fwait
inc
lods
enter
adc
fldl
vpshldd
das
push
roll
outsl
or
mov
jl
add
ret
testl
aas
cmpsl
push
adcl
pop
pusha
mov
jg
test
cmp
je
notb
imul
fwait
and
mov
cmp
jne
xor
pop
addr16
xor
cmpsl
and
xchg
shl
mov
imul
test
aad
fwait
mov
jns
std
sbb
aam
aam
jne
mov
ljmp
ret
aas
test
dec
sti
mov
mov
mov
mov
divb
mov
xchg
aas
aad
outsl
fwait
add
mov
cmp
mov
in
fistpll
test
mov
ret
mov
es
ljmp
sbbl
mov
ja
push
inc
lcall
xchg
or
int3
mov
and
int3
out
cmc
das
popf
cmp
jle
mov
sbb
add
hlt
pop
pop
push
mov
iret
pop
ret
imul
or
daa
addr16
popa
jnp
loopne
imul
aad
mov
xor
sbb
std
pop
cmp
push
sub
mov
pop
popa
jbe
adc
sarl
pushf
lahf
imul
inc
mov
xchg
and
in
cmc
pop
cmpsl
loop
pop
jo
jo
mov
inc
adc
lds
sarb
jp
push
add
push
dec
gs
adc
lock
or
xchg
call
dec
jge
fidivs
jle
pop
push
cmp
arpl
pop
mov
cmp
icebp
inc
mov
inc
pusha
shlb
cmp
dec
xchg
push
cmp
mov
mov
icebp
adc
imul
gs
adc
shl
mov
je
mov
pop
jbe
stc
lret
lret
std
lea
leave
dec
fstl
inc
cmp
mov
sub
push
push
sbb
pop
mov
or
fbstp
imul
add
popf
mov
lahf
mov
inc
je
sub
and
out
inc
mov
lret
jp
imul
lods
sbb
out
or
push
mov
stc
add
jmp
fstl
mov
push
cli
cwtl
cld
push
aas
outsl
adcb
outsl
mov
and
mov
mov
push
idiv
sbb
aas
and
or
imul
mov
sub
jno
jb
and
xor
pop
sbb
fistps
into
mov
stos
mov
mov
or
loop
cmpsl
mov
hlt
mov
ljmp
dec
movsb
pop
push
loope
mov
mov
sbb
lods
fisttpl
dec
mov
jbe
ret
jae
push
fs
jp
cmp
enter
data16
ret
cmp
fbstp
sbb
cwtl
pop
scas
pop
inc
lret
xchg
or
cwtl
xor
ret
ss
mov
mov
loop
and
xor
repz
mov
jp
cmc
cmpsl
int
imul
or
xchg
mov
out
aaa
dec
mov
inc
mov
flds
imul
inc
hlt
pop
out
out
mull
call
scas
popa
out
repz
jo
mov
fisubl
hlt
sarl
xchg
movsb
push
xchg
jmp
inc
push
mov
je
je
fcoml
dec
jmp
test
and
xor
sub
mov
mov
mov
test
mov
jmp
pop
push
movsl
jle
xchg
jne
jo
jge
jg
add
mov
xchg
jg
fs
push
sub
or
push
or
dec
xchg
mov
or
hlt
push
loopne
sbb
and
mov
call
dec
scas
adcb
mov
push
push
lcall
cmp
and
xchg
ljmp
mov
sbb
mov
sahf
jbe
mov
xchg
loop
clc
mov
subl
rorl
sbb
add
or
rol
push
mov
scas
mov
popf
test
faddl
and
push
stc
pop
arpl
lahf
mov
filds
jbe
ja
adc
jo
mov
xorb
dec
ret
repz
daa
add
lahf
or
jecxz
xor
jl
je
inc
sbb
sub
cmp
mov
push
mov
push
arpl
sbb
bound
adc
pop
enter
xlat
cmpsl
addr16
lods
mov
push
xchg
mov
push
pop
or
inc
mov
jnp
pushf
and
fwait
adcl
mov
jmp
xchg
xor
mov
add
andb
sub
ficompl
push
pop
out
aas
mov
mov
mov
scas
dec
xchg
sub
jge
cltd
addl
jecxz
and
rcrl
stos
pop
xchg
arpl
bound
shrl
loop
fdivl
cmp
jl
sti
lock
pop
test
xchg
lds
xchg
jle
add
test
shrb
add
mov
xor
das
popf
and
add
pop
jb
xor
ja
and
scas
imul
in
out
in
push
pop
xor
mov
icebp
lds
hlt
adc
mov
pop
repz
adc
adc
push
sbb
mov
not
out
sarl
jmp
push
pop
int
pop
jg
mov
mov
jge
lret
insb
cld
rcl
enter
mov
stc
nop
sub
cwtl
test
fsubs
and
enter
or
sbb
pop
add
test
je
into
sub
push
ficoml
lret
sbb
inc
fmuls
scas
mov
cs
mov
lods
jbe
movsl
loop
adc
or
mov
imul
outsb
jns
popa
cmp
scas
sbb
adc
mov
cld
std
in
rorl
cmp
mov
sub
cli
xchg
cld
roll
pop
jne
pusha
imull
pop
sar
lock
mov
add
add
pop
in
and
or
push
stc
mov
into
mov
xchg
lret
or
pop
clc
pop
std
pop
in
mov
and
test
popf
inc
aad
in
into
addb
mov
jecxz
jl
imul
shlb
mov
sub
icebp
jae
sbb
sbb
scas
cmp
das
dec
pop
sub
fs
sub
jne
iret
int
dec
in
and
pusha
pop
mov
mov
dec
hlt
mov
mov
jnp
lods
or
rcrb
fs
dec
jmp
mov
and
fnstsw
movsb
repnz
sbb
or
test
mov
xchg
adc
add
inc
and
jp
mov
std
mov
push
jo
or
fwait
jp
jnp
jle
ljmp
icebp
fcomps
mov
add
dec
out
push
fdivrl
sub
cmp
cmp
daa
orb
aam
subl
in
imul
jge
add
lcall
test
test
cmp
cmpsl
test
cmp
int
cld
lock
aad
mov
imul
pop
dec
dec
dec
pop
jo
and
subb
pop
adc
dec
fsubr
xor
cmp
cmovb
adc
outsl
outsl
jecxz
les
int
mov
call
loop
mov
xchg
xchg
and
add
sbb
dec
mov
subl
out
rcll
es
call
dec
ret
push
fidivrl
push
bound
xor
nop
inc
pop
dec
mov
int
adc
clc
loop
cmp
ret
icebp
sti
dec
sbb
mov
xor
adc
dec
mov
fisubl
and
arpl
add
scas
xchg
jle
mov
pushf
and
xchg
dec
lahf
movups
cli
inc
jmp
into
jne
pop
jbe
cmp
rorb
or
bound
sahf
les
add
stc
sbb
aas
push
push
dec
mov
inc
or
jae
out
adc
loope
push
insb
nop
mov
add
xor
movsb
sbb
out
pop
loopne
jnp
or
das
sbb
lds
pop
stos
or
shll
push
push
cmp
push
jp
roll
xchg
or
cmp
add
cmp
nop
sub
jb
imul
cmp
sbb
adc
ss
aaa
popa
les
dec
sub
enter
rcrl
inc
pushf
mov
les
andl
ja
enter
adc
cmp
xchg
mov
nop
addl
sub
xor
rcrb
sub
xchg
sub
and
shl
in
jle
jl
xchg
mul
push
push
push
xor
pop
out
xor
test
jmp
addr16
jo
mov
aam
arpl
mov
cmc
jbe
adc
sarl
arpl
sub
cmp
sahf
out
es
mov
inc
jp
adc
sbbb
jne
popf
cmp
mov
out
testb
xor
xchg
notb
adc
xor
mov
sbb
rorb
adc
mov
out
mov
adc
add
stos
mov
jb
je
jnp
cmp
das
inc
xor
gs
rcrl
addr16
mov
bnd
into
inc
sub
add
lea
xor
popa
mov
cs
aam
outsb
cmp
and
shlb
add
popa
or
or
dec
ja
ret
inc
movsl
mov
lea
cmp
lahf
dec
xchg
out
inc
lret
in
insb
mov
xchg
push
shlb
dec
shll
mov
and
xor
lods
mull
push
adc
shrl
jl
in
hlt
aad
repz
push
xlat
test
xor
das
mov
aas
sbb
push
rorb
cmp
test
mov
push
cmpsb
cmc
xor
lcall
jae
pop
xchg
dec
dec
push
xchg
insl
adc
push
in
jg
mov
sahf
sbbl
pop
cwtl
call
xchg
pop
dec
cltd
clc
aad
test
stos
lds
inc
dec
popa
icebp
inc
cmp
fs
arpl
mov
jne
add
repz
jnp
jmp
jmp
sbb
adcl
push
lret
arpl
xchg
pop
mov
std
sub
scas
mov
xchg
xchg
popa
lahf
xchg
in
shrb
fidivs
fisttps
and
call
pop
outsb
out
loope
loopne
shufps
mov
lcall
push
add
sbb
jecxz
mov
ficoml
repz
cmp
mov
jo
mov
bound
or
xchg
mov
fptan
add
mov
movsl
push
jge
aad
jne
pop
rcrb
dec
push
shlb
xor
ficoml
pushaw
pop
mov
cmpsb
testb
xor
int3
dec
and
es
mov
fsts
pop
int
mov
cwtl
or
test
cmp
or
mov
or
imulb
inc
fldenv
nop
jecxz
mov
shll
popa
and
xchg
ret
enter
popa
pop
adc
jg
dec
and
scas
sarl
out
cmp
push
das
inc
aas
jno
popa
pop
adc
jg
dec
and
scas
sarl
out
cmp
push
das
inc
aas
jno
popa
pop
adc
jg
dec
and
scas
sarl
out
cmp
push
das
inc
aas
jno
popa
pop
adc
jg
dec
mov
adc
out
or
dec
xor
mov
mov
movsb
mov
aam
in
pop
je
inc
xor
and
push
je
add
adc
repz
hlt
test
mov
movsb
movsb
aam
les
je
and
and
cmp
fs
xchg
in
test
mov
movsb
mov
hlt
and
adc
daa
sub
inc
or
jns
ja
jge
xchg
out
int
fdivrl
shll
mov
std
mov
push
or
sbb
in
jns
call
dec
inc
je
pop
out
lods
pusha
mov
mov
push
arpl
imul
inc
xchg
pop
mov
adc
stos
je
inc
jno
scas
icebp
rcr
xor
in
and
pop
repz
sbb
sbb
inc
mov
les
jle
gs
or
popf
in
sub
pop
je
xchg
sahf
test
insb
jmp
dec
push
lret
push
and
je
lcall
pop
in
aad
or
cld
mov
push
mov
push
and
in
adc
and
hlt
test
mov
movsb
mov
scas
les
insb
add
xor
and
push
sub
add
or
lds
mov
lods
xchg
je
ss
cmp
pop
push
and
jno
in
hlt
loope
rcl
movsb
sarb
roll
add
inc
inc
cmp
je
adc
rol
int3
mov
cli
mov
test
xchg
in
adc
add
xor
and
push
xor
add
adc
in
hlt
test
mov
movsb
movsb
aam
les
je
inc
xor
and
push
xor
add
adc
in
aaa
in
popf
pop
mov
sub
jnp
cmpsb
dec
std
pop
lahf
mov
mov
xor
pop
cmpsl
dec
push
out
nop
and
dec
outsl
add
mull
cmpsl
sub
repz
dec
stos
sub
mov
xlat
in
push
sub
cs
push
testl
out
and
dec
pop
daa
into
cmp
out
pusha
std
out
cmp
lds
push
push
js
inc
ret
add
into
arpl
sub
mov
fcompl
pushf
jle
nop
pusha
rorl
or
xchg
fisttpl
add
xor
popf
push
lahf
in
sti
lcall
shll
xchg
or
sub
jmp
inc
push
jmp
and
jo
adcb
mov
daa
pop
pop
cwtl
outsb
inc
adc
cwtl
loope
xchg
jnp
mov
outsb
cli
mov
sbb
mov
fldt
ret
fs
xor
sbb
arpl
pop
and
lods
iret
inc
jns
dec
sti
jo
lea
mov
jno
cmp
pop
incl
push
dec
lds
dec
shll
cmpsb
js
test
pop
pop
lcall
jecxz
cmp
mov
scas
inc
mov
inc
out
xchg
sbb
inc
jg
leave
std
xor
and
pop
mov
push
movsl
sbb
xchg
pop
imul
add
add
loop
fmull
stos
int
xchg
sbb
fs
incb
test
mov
shll
data16
cmc
negl
js
cmp
push
xor
movsb
iret
jl
insl
adc
test
mov
jle
push
imul
fdivs
adc
or
xor
jbe
addr16
mov
ds
and
add
or
out
adc
jnp
cmp
xchg
dec
or
jl
inc
mov
bound
sti
cmp
in
add
test
fsts
imul
add
and
mov
imul
lcall
sub
test
cmpsb
out
addr16
jecxz
sub
adc
push
cs
dec
dec
mov
clc
jae
jg
push
or
jl
push
mov
sahf
addb
stos
mov
mov
dec
mov
nop
pop
jmp
lds
movsb
dec
in
cmp
xor
push
scas
aad
xor
aam
popa
push
leave
mov
cmpsb
add
inc
popa
out
imul
inc
aaa
movsb
sti
sahf
jg
jmp
sbb
push
sbb
add
into
sti
xor
gs
and
popf
iret
bound
orl
fisubrs
push
sub
inc
jae
push
fcoml
movsl
xor
pop
ret
cld
mov
fnstsw
adc
cmp
iret
jg
sub
cmp
cmp
out
test
shll
adc
call
orb
dec
xchg
arpl
push
bound
jne
lret
push
imul
xlat
insl
mov
mov
push
repnz
ja,pn
jle
cwtl
in
int3
sar
mov
xchg
test
cmp
addr16
in
xor
mov
fidivrs
stc
orb
inc
xor
int3
pop
mov
rolb
xor
fs
xor
fucomi
rorl
gs
jp
dec
aad
sub
pusha
pop
sbb
push
loopne
pop
pop
fmuls
pop
out
rorl
cs
sbb
imul
xchg
sub
sub
movsb
fimuls
sbb
or
cmp
or
insl
aad
movsb
jg
scas
leave
scas
pop
popf
repz
mov
inc
scas
enter
out
pusha
addr16
scas
mov
lret
in
cmp
inc
outsb
sbb
or
inc
call
inc
cmp
jle
mov
inc
sbb
adcb
ds
sub
loope
jb
test
fdivp
pop
daa
adc
inc
std
lea
pop
xchg
sti
cs
gs
mov
add
sbb
scas
int3
out
mov
xchg
jecxz
push
sbb
cmpsl
jnp
inc
clc
mov
cmp
cmp
bound
nop
aad
repnz
pop
outsl
mov
sti
jmp
push
or
das
sbb
inc
mov
push
and
mov
sub
mov
pushf
sar
xchg
lahf
fisubrl
sti
ljmp
imulb
or
addr16
mov
daa
hlt
loop
in
push
mov
and
arpl
sbb
mov
outsl
xchg
cltd
add
bound
lods
dec
lret
ja
cli
or
pusha
cmpsl
mov
mov
cwtl
mov
and
das
fisttps
and
xorb
fisttpl
sar
outsl
js
mov
lods
repnz
outsb
adc
lods
mov
fmul
in
xchg
sbb
push
mov
cld
pop
icebp
add
pushf
sbb
dec
pop
adc
mov
pop
xchg
pushf
inc
xchg
inc
jae
cmpsb
jnp
int
inc
sub
add
dec
dec
test
and
and
in
call
les
sahf
xor
add
inc
stos
cmpsl
inc
imul
cmp
push
mov
xchg
dec
adc
jbe
out
dec
hlt
cmp
and
dec
sub
pshufw
jmp
ljmp
cmc
pop
mov
and
mov
add
loopne
push
cmp
adc
sbb
mov
mov
dec
cmpsl
sub
aaa
sub
sub
out
shrb
push
sarb
pop
xchg
pop
sub
jo
mov
add
js
jae
leave
jae
cmpsl
add
push
fst
adc
cs
into
int3
cmpsl
and
sbb
cmpsb
push
call
imul
xchg
adc
mov
cmp
or
cmp
or
rcll
shl
xchg
inc
or
das
xchg
and
fdivrl
psrlw
divl
out
and
sahf
dec
gs
sbb
sbb
pop
sbb
stos
jecxz
jb
xor
cmp
pop
test
nop
cli
in
movsl
mov
addr16
sbb
test
into
inc
xchg
div
mov
and
test
out
inc
psadbw
repnz
out
insb
je
add
aas
scas
inc
or
pop
xor
push
into
into
push
dec
mov
pushf
rcrl
add
inc
mov
mov
jge
xchg
bsr
das
sbb
adc
mov
mov
and
sbb
push
enter
ficoms
jae
jecxz
dec
or
stc
mov
orb
popa
cltd
inc
jge
shrb
iret
sub
cmp
add
ror
test
je
sub
push
iret
xchg
push
pop
mov
jl
repnz
xor
jg,pt
xchg
int
shlb
inc
inc
int3
jb
or
jmp
movsb
ret
jmp
cmp
lock
dec
in
gs
cmp
pusha
cltd
cs
ret
jge
mov
dec
pop
mov
inc
shrb
and
mov
mov
and
gs
jle
imul
push
mov
into
xlat
mov
sub
cmp
and
mov
neg
test
test
stc
inc
aam
fnstenv
js
xchg
adc
adc
pop
lret
xchg
test
movsl
dec
cmpsb
test
mov
jp
test
mov
cmp
add
ds
mov
push
xchg
cmpsb
imul
mov
fdivrs
xor
pop
jbe
sub
lahf
sbb
mov
inc
dec
and
inc
aam
jge
or
cwtl
jno
mov
in
dec
xchg
fiadds
into
add
push
shrb
mov
and
xchg
jae
cs
push
push
aam
inc
push
dec
outsb
pop
lahf
adc
aad
or
outsb
lock
loopne
mov
jnp
sar
pop
out
or
sbb
and
push
jp
rorl
fistps
lea
fs
pusha
cmp
je
inc
adc
xchg
adc
test
rcll
mov
mov
faddl
repnz
dec
jnp
and
popa
inc
in
lcall
mov
mov
in
fstps
jp
inc
shlb
inc
push
inc
shl
movsb
mov
out
or
mov
pusha
mov
lret
mov
xor
dec
lock
push
cs
ficoms
leave
pop
mov
pop
into
and
sub
loopne
mov
mov
xchg
adc
or
jno
out
test
or
or
push
push
dec
ljmp
loope
stc
push
mov
repnz
fcmovnbe
cmpsl
adc
repz
inc
fists
int3
jl
push
sbb
lahf
cmp
mov
andl
cmpsb
mov
xor
cld
fidivl
mov
push
and
xor
jb
lret
inc
cli
sbb
fdivl
leave
lahf
int
popf
outsb
cmp
xchg
xchg
inc
movsl
add
hlt
mov
sub
xor
lcall
cs
sti
imul
aaa
inc
cwtl
xchg
movsb
and
xor
jl
jecxz
jp
mov
les
jle
popf
jb
sbbl
fidivl
add
inc
shlb
mov
pop
dec
in
push
lods
or
in
jb
lds
mov
rol
mov
jo,pt
popf
int
and
or
mov
fidivrs
clc
jne
popf
inc
push
lods
lods
inc
push
push
pusha
out
lock
pop
xlat
and
stc
aas
xor
ret
aam
jl
sbb
inc
leave
push
insb
add
aad
mov
push
jge
ljmp
lock
lret
or
inc
cld
jae
inc
add
les
jb
mov
adc
movaps
sbb
dec
xor
shll
popl
add
mov
leave
sbb
outsl
bound
cld
dec
rolb
push
cmp
and
mov
test
jge
jne
add
or
out
push
jae
jae
mov
jae
lcall
pop
and
popf
push
inc
sbb
and
push
cs
cmp
cmp
rorl
sti
mov
xor
push
xor
enter
mov
and
pop
in
inc
ljmp
bound
jl
ret
arpl
ja
cltd
dec
fidivrs
les
hlt
adc
leave
xchg
push
dec
std
push
jl
jb
addr16
xor
jnp
push
lret
popa
mov
inc
test
and
fwait
inc
and
movsb
pop
in
daa
push
inc
sti
jl
aam
sub
sbb
jae
shl
mov
and
or
fstps
outsb
mov
fcompl
pop
in
leave
aas
xor
dec
jecxz
cs
mov
rclb
test
scas
nop
sbb
pop
cmp
fistps
lret
sub
and
add
popa
mov
add
dec
dec
sub
repnz
lock
test
adc
dec
in
or
aas
ret
dec
stc
lea
js
inc
lcall
test
add
add
les
push
push
xor
cmp
pop
in
jb
xchg
and
dec
xchg
lock
scas
jge
adc
dec
sbb
sbb
enter
outsl
sub
lret
shl
sub
pop
lahf
rorb
xchg
and
mov
repz
jmp
jno
leave
push
push
vxorps
js
testl
aas
int3
adc
or
lods
adc
pop
stos
data16
out
mov
mov
imul
add
jge
imul
std
jg
pop
sti
jmp
insl
mov
cmp
pop
mov
je
cmpsb
mov
mov
jecxz
rcrb
inc
jno
loope
dec
inc
xlat
fwait
adc
in
lods
sub
and
adc
mov
inc
inc
add
in
stos
push
fcom
jno
add
jbe
cs
neg
mulb
or
pop
bound
cmp
inc
lcall
aaa
inc
jb
cmp
jecxz
insb
push
shll
or
pop
and
insl
mov
nop
mov
mov
stc
pop
out
inc
pop
cltd
mov
lds
arpl
mov
imul
dec
and
icebp
inc
sbb
or
es
cmp
test
int3
pop
pop
stc
popf
pop
imul
mov
mov
mov
or
xorl
imul
loope
inc
loop
fnstsw
aas
cltd
fs
pop
cmpsb
pop
sti
mov
rol
iret
ret
push
mov
fdivl
xor
mov
jnp
pop
xchg
in
sbb
test
aaa
inc
jmp
aad
mov
loopne
cmp
dec
leave
fwait
outsb
dec
mov
loope
dec
xor
mov
adc
jp
repz
jbe
xor
lods
fldt
jmp
pop
inc
lock
es
inc
icebp
sbb
es
inc
out
sbb
pop
cmp
in
scas
sti
add
rsm
in
xchg
lock
mov
pop
mov
and
push
jp
push
pushf
pop
mov
jle
aas
popfw
rclb
pusha
push
cld
inc
sbb
inc
sti
xchg
fidivl
jge
push
fadd
loope
in
ja
push
jmp
cltd
cmp
pop
push
mov
sbb
mov
xchg
mov
push
dec
xchg
mov
mov
lret
lahf
cmp
push
and
dec
imul
sti
insl
or
jl
mov
mov
lock
sbb
jne
mov
xchg
mov
cmpsb
sarb
outsb
dec
or
rcll
push
ret
sahf
cmc
test
cmp
js
lret
cwtl
pushf
pop
aaa
push
rcll
mov
faddl
mov
add
cmpsl
aam
jg
jnp
mov
lret
xchg
pop
mov
shl
ror
and
jg
inc
cmpsb
lods
push
in
fsubl
addr16
mov
mov
movsl
shll
push
int3
or
and
or
in
loop
stos
adc
adc
lods
jecxz
jmp
push
repz
jb
and
scas
in
aad
jecxz
popf
es
mov
cmp
push
out
lcall
adc
jle
lret
jne
cltd
sub
jbe
xor
movsl
pop
adc
in
sti
les
ljmp
mov
xchg
cmp
in
xor
fimull
cmpb
insb
dec
sbb
fistl
and
mov
loopne
lock
jmp
shll
popa
es
repnz
mov
xlat
or
adc
mov
pop
gs
jbe
mov
aam
inc
js
xor
add
pop
jne
jge
pop
loopne
lds
add
aad
jmp
frstor
out
std
sub
or
loope
push
leave
pop
inc
sbbb
push
mov
je
sti
in
in
je
hlt
mov
mov
push
jns
imul
mov
je
push
dec
iret
shrb
or
cwtl
mov
imul
incl
call
dec
loop
xor
push
mov
dec
fwait
stos
scas
mov
lret
jmp
cmp
xchg
mov
sub
mov
cmc
stos
inc
sti
push
pop
mov
lods
pop
orl
fnstsw
mov
les
cmp
dec
inc
xor
jae
or
pop
pop
push
mov
and
int3
jp
int3
mov
pop
popf
vmwrite
stc
subb
pop
insb
inc
test
arpl
out
test
ss
fs
popf
hlt
mov
jb
inc
inc
lcall
pop
div
inc
xchg
adc
cli
dec
xor
dec
idivl
jmp
out
xchg
xchg
inc
dec
leave
in
daa
cmpsl
stc
mov
mov
push
push
aam
add
mov
add
mov
fisubrs
data16
mov
jbe
lock
mov
stos
pop
xchg
pushf
cwtl
aad
push
jle
dec
xor
inc
je
cmp
mov
rolb
dec
sbb
cld
cwtl
mov
cmp
stos
js
ret
sub
fwait
fwait
xchg
int
addr16
lcall
add
stos
test
pop
or
les
adc
hlt
ss
aas
lds
enter
fucomip
jmp
mov
inc
jecxz
daa
ljmp
jb
adc
stc
out
fstpt
stos
imul
push
push
cmpsb
fists
mov
xor
mov
stc
fsubl
lret
cmpsb
cld
adc
xchg
shrb
mov
fldenv
nop
pop
add
outsl
in
adc
arpl
ficoms
pop
push
cmp
mov
push
outsb
lods
pop
jmp
push
mov
in
mov
stos
js
adc
lcall
aad
aad
sar
jmp
push
xchg
lods
clc
push
popl
and
shlb
adc
mov
mov
xchg
aam
mov
sbbb
scas
fstpl
mov
and
mov
ljmp
xchg
mov
mov
sbb
pop
jmp
adc
outsl
sub
jmp
mov
sbb
pop
jge
stos
cwtl
addr16
cmp
inc
hlt
pusha
cld
add
jge
push
and
cmp
or
sbb
inc
sbb
loope
jb
jl
sarb
pop
test
loopne
push
jbe
daa
add
pop
mov
inc
inc
mov
xchg
push
adc
enter
outsl
and
pop
sarl
pop
aaa
fs
std
sbb
pop
push
stos
rolb
mov
pop
rorb
pop
rcll
shlb
lods
xchg
imul
or
outsl
sub
movb
cs
idivb
fisubrl
push
add
xor
xlat
bnd
adc
inc
mov
inc
lods
inc
pop
inc
pop
aas
push
mov
xor
movsb
and
xlat
push
mov
push
je
mov
cmc
jb
sahf
xchg
sub
xchg
out
and
mov
les
test
push
or
lret
mov
adc
lret
pusha
xchg
sub
sbb
jne
test
or
xchg
addb
sub
jno
xchg
cli
add
inc
jo
jl
xor
pop
je
or
cmp
lahf
outsl
mov
inc
cmp
xchg
in
push
xor
les
lret
jge
stc
mov
lods
repnz
addr16
cmp
pop
cmpsl
lret
lods
xchg
sbb
incb
outsl
push
xchg
pop
das
inc
jmp
insl
xchg
and
in
xchg
fcmovu
daa
push
addr16
lcall
cld
imul
sbb
xlat
int
and
aaa
jge
mov
pop
loopw
push
in
xchg
mov
cmp
std
hlt
or
cmp
lds
pop
outsb
jle
mov
sub
xchg
movl
jmp
mov
xchg
lods
mov
jnp
inc
fidivs
pop
dec
gs
insb
xor
rcrb
shl
mov
imul
sarb
mov
cmp
lcall
test
mov
cmp
orl
cmp
cmpl
arpl
lcall
dec
imul
std
stc
jbe
pushf
add
orb
pop
arpl
xchg
xchg
je
ljmp
adc
add
and
mov
mov
mov
inc
in
mov
ljmp
scas
dec
cmp
lret
insb
cmp
pushf
jae
test
push
adc
lock
popf
divps
pop
adc
adc
push
cmpsl
aaa
pop
fwait
inc
inc
rolb
sarl
data16
jecxz
daa
dec
sub
stos
sti
sti
xor
pushf
mov
xlat
push
in
mov
movswl
dec
mov
cmp
inc
ret
and
popf
push
imul
mov
dec
add
arpl
jmp
ret
jmp
add
mov
je
icebp
outsb
ret
dec
shll
mov
ret
push
xchg
xchg
jle
dec
add
or
loopne
ret
pushf
out
test
mov
push
fidivrs
fildll
mov
mov
das
scas
inc
test
mov
mov
xor
or
inc
cmp
loope
jbe
cwtl
jb
jg
mov
adc
cmpb
out
lret
xor
mov
pushf
ds
push
test
jb
lods
aas
test
repz
push
xchg
xchg
xor
pop
jb
mov
cmpsl
and
sbb
rolb
aas
pop
and
mov
mov
xlat
xchg
ret
jmp
dec
inc
jmp
ficoms
rcr
decl
pusha
test
cmp
and
movsb
orl
movsl
aaa
xchg
mov
aam
adc
outsb
mov
pop
pop
test
aad
outsl
xor
pop
stos
es
lock
lea
and
insb
in
mov
mov
incb
cmp
mul
sbb
out
lret
test
imul
mov
jmp
cld
sub
js
mov
pop
mov
ret
xchg
out
ss
movsb
rolb
sub
jb
jl
xchg
add
cmp
inc
pop
push
sub
mov
cmp
cld
adc
push
cvttps2pi
jecxz
es
cmc
mov
mov
lods
lods
and
mov
jmp
lods
mov
sbb
test
and
nop
mov
movsb
movsb
aam
les
je
inc
xor
and
push
xor
add
adc
in
hlt
test
mov
movsb
movsb
aam
les
je
inc
xor
and
push
xor
add
adc
in
hlt
test
mov
movsb
movsb
aam
les
je
inc
xor
and
push
xor
and
test
mov
movsb
movsb
aam
les
adc
fwait
adc
scas
out
xor
push
push
fdivrl
jle
outsb
loope
xchg
dec
xor
icebp
add
cmc
out
sub
and
add
push
mov
mov
mov
ds
loope,pn
rorl
out
xor
and
sbb
add
scas
popa
sahf
push
mov
pop
outsb
addr16
or
shrl
push
fisttpl
repz
xor
add
and
pop
jmp
loopne
and
or
pop
ret
idiv
movsl
sbb
mov
pminsw
test
mov
ss
bound
in
jle
in
push
cs
imul
out
xor
fs
ds
fiaddl
or
fldenv
pop
enter
sbb
push
lcall
push
out
adc
sti
test
mov
sbb
cmp
fwait
adc
dec
jae
imul
out
movsb
add
out
in
sbb
mov
insb
mov
addr16
popf
adc
push
adc
icebp
in
sbb
into
add
pop
popf
in
push
cld
mov
push
shrb
out
out
sbb
and
mov
outsb
sbbl
loope,pn
rorl
push
xor
mov
adc
cmp
sahf
dec
mov
mov
into
aaa
std
daa
in
ds
pop
mov
or
jb
push
fidivs
push
std
and
or
cmp
and
mov
pop
repnz
push
mov
xor
xor
xor
ret
xor
and
jb
loope,pn
rorl
sar
out
and
adc
add
push
mov
mov
mov
ds
loope,pn
rorl
sar
out
and
adc
add
push
mov
mov
test
xchg
sub
cmc
js
decb
xor
cmp
test
dec
mov
ret
idivb
jo
shrl
inc
out
xor
mov
fs
jle
jb
hlt
ja
xor
fisttps
sbb
jbe
jmp
bound
inc
adc
insb
dec
dec
adc
and
inc
sub
das
lret
adc
bound
sbb
sub
xchg
xchg
dec
jo
into
cs
loopne
scas
mov
jg
in
and
js
nop
div
std
fdivl
xor
pop
mov
mov
xchg
inc
lret
das
or
cltd
pop
push
sub
jmp
in
push
mov
add
mov
inc
xchg
out
mov
cmp
iret
mov
stos
inc
inc
inc
std
push
inc
fisttpl
jge
dec
insl
inc
clc
add
sbb
test
pusha
mov
xlat
popa
jo
xchg
pop
and
pusha
leave
jl
lods
sub
mov
mov
setb
ret
xchg
and
daa
pop
mov
mov
xchg
cmpb
popa
adc
adc
ret
ss
stc
fisubl
outsl
mov
push
push
sahf
outsb
push
jno
jbe
insl
push
adc
or
xor
mov
out
add
and
cs
rcll
out
sbb
jp
outsb
jmp
or
sbb
cmpsb
notb
lret
outsl
mov
subl
jae
inc
js
mov
nop
cmp
or
daa
daa
lcall
movsl
inc
insb
push
andb
subl
sarb
cmp
shll
outsl
xor
shlb
dec
and
dec
fs
idivb
int3
push
addr16
incl
or
loope
add
sbb
sub
or
enter
dec
add
aaa
add
add
adc
fcoml
outsb
scas
jns
jge
push
ret
nop
xor
pop
inc
mov
std
mov
lcall
jne
push
sbb
mov
sbb
dec
repz
dec
out
cmp
cli
aad
and
sahf
jns
rcll
out
and
dec
dec
dec
in
mov
mov
cmp
cmp
out
pop
pusha
aaa
gs
pop
mov
jecxz
scas
les
add
ja
pusha
mov
sbb
fnsave
lcall
aaa
jnp
cmp
stos
int3
adc
das
sbb
sub
out
das
pop
add
repz
sbb
inc
pop
lds
repnz
test
jae
fcomps
dec
mov
fnsave
icebp
dec
mov
pushf
sub
movsb
scas
xlat
movsl
lahf
mov
mov
sbb
push
aas
out
mov
pop
add
insl
rcrb
mov
inc
mov
push
ret
enter
fiadds
movsl
cmc
test
jnp
imul
cmpsb
pop
or
js
push
movsb
jne
sbb
mov
int3
in
test
jo
mov
cmp
cmp
mov
lds
popa
hlt
sub
mov
fdivs
loopne
mov
in
lret
imul
jno
pop
jo
mov
daa
adc
in
push
leave
testl
mov
sub
shrl
adc
lret
imul
cmp
lds
je
inc
les
outsb
push
popa
xor
sti
mov
fildll
sbb
mov
popf
les
dec
js
in
in
cs
inc
xor
les
push
stos
mov
lods
and
jp
adc
pushf
xor
cmp
clc
mov
jbe
leave
lcall
lahf
inc
jg
int
or
jmp
daa
outsl
repnz
call
out
data16
les
pop
pop
aad
outsb
mov
gs
fistl
fisttpll
mov
and
dec
and
sub
push
fwait
stc
stos
test
jmp
loop
test
popf
loope
cli
xor
sub
push
mov
pop
xchg
lea
dec
stc
scas
ret
fldt
xchg
cmpb
lock
push
js
ljmp
leave
nop
add
mov
jo
inc
dec
lods
adc
jbe
mov
dec
inc
add
scas
push
mov
ljmp
jg
fcoms
push
sbb
setg
cltd
aas
mov
sbb
sub
loop
xchg
sbb
jno
cmp
cwtl
pop
int3
cmp
outsl
in
in
xchg
mov
sbb
cmp
mov
les
leave
sahf
addl
add
mov
adc
lcall
pop
dec
fistl
inc
sbb
adc
jo
cmp
mov
mov
imul
mov
call
ss
popf
jg
and
aad
inc
xor
cmp
dec
pop
jg
dec
jp
cwtl
ds
push
nop
mov
fiaddl
and
rcrl
es
xor
mov
cmpsl
cmp
push
jmp
sub
rorb
sub
adc
pop
scas
pop
jbe
sti
mov
pop
dec
stos
push
int
adc
in
xchg
inc
sbb
mov
nopl
cmp
out
inc
push
out
xor
push
enter
stc
es
push
push
push
mov
int
ss
mov
insl
stos
out
sub
fwait
mov
mov
inc
test
jge
cli
out
loope
sbb
das
lods
movsl
jbe
arpl
push
add
pushf
xchg
mov
dec
mov
add
inc
std
push
cmp
fcmovbe
lods
pop
pop
mov
mov
aad
pop
movsl
test
data16
and
adcb
cli
out
xor
xor
xor
stos
fildl
jbe
jl
mov
fucomip
icebp
aaa
cltd
js
iret
inc
push
fldl
stc
notb
test
int3
xor
adc
lock
outsl
gs
cmp
jge
adc
pop
pop
iret
in
inc
dec
ret
rcr
shlb
pop
sti
test
mov
adc
inc
fwait
jns
cmp
push
push
add
mov
cmp
lods
rcl
movsl
add
cmpps
mov
imul
mov
outsb
neg
stos
dec
pusha
lahf
jb
inc
out
mov
sbb
xor
movsl
loop
lret
pop
pop
jle
addl
outsl
jg
hlt
test
pop
les
push
addr16
mov
cmpsl
fmuls
rorb
cs
dec
or
push
jmp
lret
lcall
dec
inc
cld
push
out
push
fwait
pop
shlb
add
loopne
int3
jnp
mov
fisubrl
sbb
pushw
mov
inc
xchg
adc
mov
jg
rorl
ret
mov
cld
sbbb
js
pop
pop
clc
cwtl
adc
adc
pop
pop
out
insb
test
es
ds
inc
mov
inc
repz
fwait
inc
adc
jb
outsb
jno
mov
cwtl
jmp
jae
push
out
mov
mov
adcl
jmp
out
cmpsl
jge
mov
push
stos
call
fdivrl
out
dec
xor
pop
cltd
stos
test
cli
enter
mov
in
in
mov
and
movb
and
mov
lea
mov
push
je
rolb
push
mov
repz
sbb
push
jo
mov
xchg
sub
mov
dec
mov
sbb
adc
push
lea
shlb
int3
fsubrl
daa
cs
sub
xchg
popf
pop
stos
and
jmp
stc
mov
sub
insb
cmp
ficomps
ljmp
lock
lods
scas
pop
push
mov
push
xchg
mov
jge
std
jle
mov
out
xor
gs
insb
inc
out
fs
movsb
movsl
repnz
jp
shrl
jb
push
iret
sub
js
pop
pop
flds
int3
imul
pop
inc
test
jne
inc
lcall
std
or
jp
push
mov
loop
or
sub
sbb
jae
inc
push
or
cwtl
divl
jp
insb
fs
or
iret
fisttpll
push
in
sahf
add
push
mov
inc
bound
jnp
sbb
dec
adc
stos
into
xor
jg
or
fildll
leave
sti
ss
xor
pusha
lahf
mov
sbb
or
mov
or
mov
mov
faddl
js
js
push
fimull
cmp
jno
add
outsl
add
sbbl
js
push
repnz
adcl
imul
adc
pusha
mov
fidivrs
stc
pop
ret
in
test
mov
jo
loopne
dec
mov
cmp
fwait
dec
sub
mov
mov
es
ret
mov
scas
out
rcrb
mov
or
scas
or
push
push
loop
loope
add
sbb
lods
mov
dec
jno
xlat
jmp
inc
xor
push
je
sub
and
or
or
sbbl
pop
cmp
imul
cwtl
mov
in
cmp
int3
or
and
push
mov
xchg
inc
in
pushf
pop
inc
icebp
cmpsl
xchg
sbb
mov
out
nop
jge
imul
imul
mov
mov
inc
fnstcw
pop
mov
jns
aam
outsl
sbb
ret
xchg
insb
or
fwait
ret
xchg
xor
popf
enter
fwait
dec
adc
fstpt
push
mov
and
scas
lods
nop
cmp
push
mov
mov
lret
scas
mov
enter
jmp
cmp
or
xchg
scas
pushf
leave
mov
and
mov
cmp
inc
hlt
call
repnz
cmp
insl
mov
mov
rcr
pop
adc
adc
add
or
movq
pop
sub
stos
mov
inc
push
and
insl
mov
insl
inc
inc
dec
inc
xchg
jno
out
scas
loope
xor
and
scas
imul
mov
shlb
frstor
sbb
inc
sub
mov
mov
fsubrp
ss
insl
stos
in
dec
mov
ds
inc
xor
or
jge
push
mov
movsb
push
fwait
jae
pop
adc
inc
xchg
shlb
scas
pop
adc
mov
and
mov
xor
inc
data16
test
sbb
aad
sub
js
nop
int
mov
aam
mov
add
scas
jbe
fs
adc
mov
stos
ds
out
cmp
out
sbb
lea
xchg
and
stos
or
cmp
scas
adc
out
int3
js
cmpsl
pop
mov
inc
and
in
pop
clc
mov
mov
aad
js
inc
jae
lcall
cli
into
fwait
lods
mov
inc
and
ja
xchg
pop
cli
pop
push
cli
mov
fdivrs
sbb
dec
xchg
push
insl
rorl
fidivs
and
cmp
jge
sti
xor
jle
fsubrs
xchg
scas
sub
in
mov
outsl
push
push
jl
lret
or
sub
jg
and
push
jmp
mov
fcomps
cmp
ja
inc
popa
adc
push
je
js
ret
test
push
mov
out
mov
adc
pop
test
in
aas
adc
cmpsb
int
sub
fnstenv
loopne
add
xor
mov
pop
cmp
in
je
clc
xor
jno
scas
xchg
mov
dec
scas
adc
push
test
sbb
mov
lds
push
pop
and
cld
add
sbb
dec
mov
mov
test
push
inc
inc
mov
or
sbb
out
inc
lret
adc
popa
push
bound
inc
js
out
fcoms
les
incb
jecxz
jecxz
mov
cltd
pop
jae
pop
test
mov
bound
rorb
pop
lret
jno,pt
and
pushf
mov
or
loopne
xlat
push
sub
cmp
fs
popf
mov
orl
sbb
rorl
mov
daa
inc
xchg
test
xchg
stos
outsb
sbb
rorb
fnstcw
leave
push
sahf
idivl
add
in
sbb
xor
inc
xor
jns
int
mov
stos
pop
sbbb
push
ss
or
jbe
rcl
aad
rolb
stc
adc
jecxz
out
jp
popa
cmpsl
jl
mov
es
xor
sub
sub
mov
pop
pushaw
popa
mov
jno
in
das
sbbb
rcr
and
lds
shll
push
and
outsb
jb
add
fwait
dec
movq
repnz
dec
ds
mov
icebp
sub
cmp
xor
xor
mov
mov
addr16
jle
insl
push
add
cmpsb
stos
ljmp
inc
cld
pushf
fiaddl
into
stc
scas
imul
push
pushf
push
ret
pop
call
xor
and
mov
xor
ja
loope
push
add
imul
test
jbe
dec
sub
out
sbb
jae
gs
es
xchg
push
loopne
fbld
push
jecxz
cmpsl
xor
outsl
fcomi
cltd
xor
insl
dec
lock
sub
mov
out
mov
cmp
insl
outsb
sub
xor
add
or
lcall
push
mov
shlb
mov
pop
mov
nop
inc
ja
adc
repnz
stos
repz
fadds
jecxz
clc
sub
inc
mov
xchg
and
call
cmp
mov
mov
pop
rolb
or
sub
cmp
js
inc
adc
mov
jbe
test
inc
and
xor
ss
inc
pop
aaa
stc
push
cltd
push
cltd
aam
fs
std
adc
ds
adc
mov
add
sub
loope
test
pop
jb
mov
add
shrl
popl
mov
scas
jmp
jns
or
sarb
lret
add
sub
mov
adc
dec
stos
jo
imul
sbb
loope
xchg
fdivs
hlt
and
cltd
dec
hlt
push
std
dec
sub
test
xchg
int
aam
mov
sbbb
std
push
push
stos
adc
cmp
loop
ret
add
push
call
dec
arpl
addb
mov
loopne
cltd
lods
mov
or
push
xlat
mov
xor
inc
sub
cmpb
cmpsl
mov
out
outsl
les
imul
icebp
sub
pop
aam
shrb
out
and
aaa
add
inc
sub
push
hlt
cwtl
jbe
or
cli
pop
fistl
lds
cmpsl
sbb
add
adc
icebp
jp
jbe
outsl
outsb
pop
daa
inc
sbb
stos
pop
jno
sub
dec
mov
push
test
imul
mov
rcll
jl
je
mov
pushf
mul
mov
push
shl
sbb
inc
into
inc
sbb
xlat
aas
nop
xchg
pop
mov
cmp
ljmp
nop
xor
inc
or
add
out
jmp
fstps
pop
inc
xchg
dec
or
push
cltd
pop
inc
std
push
mov
sub
jmp
sbb
sbb
cmpsb
cltd
sti
xchg
xchg
bound
sub
aam
dec
subps
out
push
jg
sub
lahf
shlb
xchg
mov
stos
push
popf
fs
cmp
mov
mov
add
and
imul
and
pop
aaa
pop
jp
ja
aaa
shr
sahf
mov
xchg
adc
daa
mov
ret
lret
pop
mov
aad
repz
add
clc
sti
mov
movq
out
jmp
jae
pop
dec
push
xchg
ret
jno
or
push
lret
daa
outsb
add
and
inc
sbbl
hlt
ja
roll
iret
lret
push
jns
dec
xor
sbb
mov
xor
sub
mov
lods
pop
pushw
inc
inc
mov
ss
push
cmpsb
mov
xchg
jp
es
lds
mov
popa
aas
and
movsl
jo
inc
mov
jmp
dec
flds
test
mov
xchg
jmp
mov
xor
mov
pop
mov
in
incb
ljmp
xchg
push
lahf
cmpl
mov
push
sarb
jg
xor
je
js
and
cmp
imul
fldenv
scas
outsb
jecxz
add
test
cmpsl
sbb
rorl
or
and
nop
int
imul
sbb
pop
add
gs
push
int
or
pop
arpl
ljmp
cmp
jecxz
popa
or
jno
adcl
xor
jle
loope
and
prefetch
dec
sbb
movsb
stos
movsl
les
cmp
out
fnstsw
shlb
out
in
jo
xor
xchg
adc
pop
ss
pop
mov
cmp
test
xlat
push
and
out
mov
pop
cmp
xor
je
nop
aaa
and
bnd
xchg
out
xchg
lret
addr16
inc
xor
cmp
clc
repz
mov
cmp
addr16
lock
shlb
fcom
sub
jp
dec
or
inc
mov
pop
xor
ficompl
enter
mov
repz
push
xorl
jl
add
mov
inc
clc
in
push
pop
sbb
sbb
push
lds
addl
test
fsubl
jno
sti
sbb
cli
mov
jle
js
notl
adc
int3
enter
jns
divb
js
es
into
addl
popf
xchg
clc
push
mov
jge
cmpsb
out
pop
cmpsl
mov
cmc
or
push
fwait
testb
mov
jecxz
or
in
out
fxch
std
or
push
rcl
push
push
int3
shll
xchg
inc
jle
push
imul
xchg
sahf
test
and
fcoms
aam
push
out
scas
fistpll
mov
sub
adc
jp
fstpl
cmp
push
call
lret
mov
outsl
or
jae
adc
pop
jns
mov
bound
ret
jg
xchg
jne
adc
cmp
mov
cmp
sbb
add
mov
dec
cs
inc
cmpsb
pop
mov
push
mov
mov
adc
push
sbb
in
data16
es
rcrl
cmp
insl
test
addr16
iret
xchg
outsb
aaa
jp
cmpsl
stos
dec
lahf
sbb
xchg
lcall
jp
js
inc
lahf
imul
call
aam
jns
test
mov
sti
sti
xchg
xchg
and
mov
jbe
inc
adc
ss
xor
lods
ljmp
fadds
in
imul
hlt
hlt
sbbb
mov
stos
jnp
popf
adc
xchg
ss
lds
les
mov
dec
test
mov
bound
gs
sub
js
xchg
xchg
idivl
inc
mov
testl
cmp
std
pop
bound
add
adc
mov
xchg
outsl
fcmovu
adc
mov
mov
dec
sahf
inc
shl
test
xchg
dec
inc
nop
fnstsw
add
xchg
sti
test
stos
out
mov
push
clc
test
sub
dec
and
filds
or
or
es
std
mov
pop
ss
addl
shr
mov
and
cltd
ds
inc
popa
jg
lock
loopne
ret
je
scas
vmaxpd
dec
cmpsb
loop
add
or
mov
inc
inc
jg
mov
add
das
leave
sub
rcrl
fs
std
push
inc
rolb
xchg
andl
fcoms
sbb
pop
addr16
adc
out
sub
xchg
add
pop
or
xchg
jmp
cmp
dec
xlat
loop
aam
xchg
inc
pop
clc
clts
test
jmp
mov
bound
scas
or
mov
or
mov
sbb
scas
jmp
pushf
mov
jns
aam
and
adc
xchg
rcl
cmc
sbb
or
and
cmp
cmp
arpl
pusha
int3
add
push
xchg
pop
jbe
fcmovnb
lds
inc
addr16
pop
cmpsl
mov
inc
sbb
sbb
call
inc
lods
push
mov
pop
negb
jle
mov
lcall
xchg
sbb
xor
xchg
cmpb
xchg
dec
popa
gs
xchg
adcl
jp
adc
xchg
lret
mov
and
sbb
push
sub
roll
xchg
push
push
movsb
fnstcw
dec
inc
and
out
and
jp
sahf
mov
lahf
movsb
mov
insl
out
mov
inc
negb
fwait
xchg
fisubrl
popa
hlt
fiaddl
cmpl
sbb
pushf
aas
ret
inc
inc
sbb
test
cwtl
push
lods
xchg
lods
mov
rolb
enter
pop
frstor
pop
inc
adc
pop
xchg
dec
cmpl
rorl
sar
out
and
adc
add
push
mov
mov
mov
ds
loope,pn
rorl
sar
out
and
adc
add
push
mov
mov
scas
fimuls
mov
aad
sar
out
and
mov
pop
mov
pop
jne
sarl
loope,pn
push
push
add
into
out
mov
jbe
or
sbb
sub
cmp
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
jno
popa
mov
addl
arpl
loope
roll
rcll
popa
mov
push
jno
popa
mov
addl
adc
add
roll
iret
adc
add
mov
sub
sub
cmp
or
add
call
pop
mov
sbb
xor
push
fists
aaa
les
and
ffree
or
sbb
mov
add
sub
sub
xchg
adcl
loope
mov
xchg
inc
jle
mov
pop
mov
lcall
mov
mov
inc
pop
jno
addl
sub
loope
cltd
out
cmp
jp,pn
loopne
in
ds
dec
pusha
mov
add
mov
pop
mov
mov
leave
icebp
shl
jb
and
xor
dec
xor
scas
cltd
popa
orl
cmpsb
and
orl
pop
lods
xchg
or
pusha
repnz
mov
inc
fwait
es
icebp
adc
sbb
cmpsl
stc
test
dec
mov
aas
sbb
ret
inc
xchg
inc
sahf
pop
test
mov
lea
jne
js
push
les
push
in
lock
mov
mov
ret
push
mov
shll
mov
lret
and
cmp
or
bnd
and
adc
add
icebp
and
xor
add
adc
inc
adcl
addl
adc
add
icebp
and
xor
add
adc
inc
adcl
and
mov
adc
mov
mov
out
insb
test
fstpl
aam
scas
aam
cmpsl
dec
scas
fsubrp
lock
shll
fs
ds
nop
xor
lods
pop
xchg
sahf
mov
adc
shrb
xchg
imul
pushf
add
stc
push
cmp
xlat
mov
gs
nop
inc
pop
jae
pop
push
push
inc
arpl
in
mov
xchg
mov
lods
adc
insb
lret
loope
sub
push
insl
ds
addr16
stos
add
pop
adc
imul
popa
push
rcrl
pop
pop
stos
daa
or
imul
add
inc
mov
mull
cmp
inc
clc
stos
ja
ret
lea
add
pop
push
sub
or
cmc
xchg
cmpsl
jle
ja
mov
or
push
sbb
push
push
sub
push
stc
imul
cmpsl
test
pop
inc
jmp
pop
movsl
mov
jp
popf
jno
add
jge
pop
jne
call
sarl
or
dec
add
es
add
shlb
stos
adc
mov
add
movsl
and
cwtl
add
adc
stos
cs
pop
sub
fcompl
xor
pushf
mov
cmp
push
notl
lods
call
loope
addr16
dec
fidivs
cli
in
call
cmc
jno
loope
fisubs
xor
insl
mov
notl
ret
sub
add
enter
mov
mov
int3
in
jns
and
sbb
in
lret
jae
jmp
shlb
pop
js
cmp
sbb
mov
shll
in
push
sahf
lret
in
mov
aad
lds
mov
out
add
fldenv
push
cmp
cmpsl
jb
jle
clc
xor
dec
dec
jmp
cmpsb
fwait
aas
and
xor
sub
cmc
adc
mov
repz
cmp
or
push
jns
addb
sbb
stos
xchg
sub
mov
stc
push
and
outsb
push
clc
ljmp
aas
sbb
ficompl
adc
movsl
es
lds
cmp
imul
hlt
mov
cmp
pop
cld
push
add
push
lods
insb
adc
dec
or
add
or
movsb
fwait
clc
scas
xchg
std
jne
xchg
in
mov
adc
cltd
pop
pop
fsubrs
outsl
ret
add
enter
cltd
movsb
adc
scas
jp
pop
mov
loop
push
fsubl
xchg
jo
stos
mov
lahf
stos
out
test
add
mov
test
lods
fimuls
fnstsw
daa
or
jp
cli
pop
jne
push
jmp
fmull
mov
sbb
rcrb
aad
inc
dec
pop
cltd
and
push
inc
das
call
inc
dec
test
arpl
adc
aas
pop
or
test
pop
adc
and
cmp
cmpl
and
enter
aam
sti
push
dec
cmpb
jge
sub
out
shll
adc
aad
xchg
movsb
push
xor
mov
dec
xchg
out
mov
scas
mov
xchg
xor
adcl
xorl
sbb
dec
jnp
aad
pop
dec
das
dec
pop
sar
jle
inc
mov
je
fcomps
lret
mov
flds
push
repnz
out
pusha
enter
fdivrs
fcmovnbe
leave
add
cmp
imul
je
cmc
cmc
dec
mov
inc
jp
and
ja
ret
or
sub
ret
pop
xor
dec
scas
pop
cli
push
sub
sbb
adc
sbb
ja
push
cmp
sub
out
push
jmp
pop
and
push
push
popf
fists
stc
inc
aas
pop
add
dec
inc
icebp
ret
out
int
push
movsb
inc
pop
daa
cmp
leave
rolb
dec
inc
hlt
push
dec
add
orl
jns
lret
pop
in
lret
sti
mov
bound
xor
loop
jmp
movsl
cmpsl
push
pop
adc
and
mov
inc
dec
arpl
mov
push
inc
add
cmp
lds
gs
inc
mov
push
notb
out
or
inc
mov
dec
cmc
or
fbstp
pop
or
movsb
lods
addr16
or
dec
out
ss
push
loope
testl
dec
mov
clc
xor
ret
sysexit
add
mov
sub
shl
push
cmpsb
or
es
testl
mov
and
mov
rolb
jne
in
aaa
mov
js
and
into
or
mov
sahf
inc
shrl
adc
fdivl
pop
jmp
sbb
add
xor
cmp
or
pop
loope
jae
stos
push
xchg
fldl
xchg
fs
jnp
enter
insb
fwait
loop
xchg
cmp
testb
pop
lock
sbb
test
mov
jno
pusha
aam
dec
dec
xchg
in
in
test
cltd
sub
and
lods
dec
xor
stc
inc
sbb
or
jp
incb
adc
loop
movsl
lock
ljmp
xor
and
sub
dec
and
sar
mov
jmp
sarb
adc
xchg
shrl
jae
les
cltd
and
xor
add
sti
fisttpll
jg
cmpsl
into
dec
imulb
aam
icebp
xor
cmp
fisubrl
scas
jns
ret
xor
cmpsl
fs
jle
mov
ret
pop
insb
inc
xchg
or
sub
and
mov
add
and
int3
dec
hlt
mov
das
push
adc
sbb
cwtl
xchg
mov
inc
or
fidivl
sbb
adc
int3
ja
mov
xchg
movb
jae
mov
bound
add
xchg
push
mov
jmp
add
mov
rcrl
sbb
jg
cwtl
sahf
or
or
jecxz
adc
enter
icebp
andb
or
pop
rcr
fistps
fs
and
mov
gs
push
and
mov
fisubl
cmp
push
inc
rcrl
call
mov
ret
rcr
adc
sub
sub
ljmp
mov
jae
mov
aaa
xlat
nop
or
mov
jae
out
jmp
add
nop
pop
js
mov
outsl
les
stc
rcrl
mov
insl
sub
repz
int3
call
outsl
xchg
adc
shrl
lret
inc
addb
test
jnp
push
lds
test
push
std
jmp
insl
stos
dec
into
mov
inc
movsl
out
movsb
pop
push
daa
dec
pushf
lret
xor
scas
push
cltd
adc
mov
sbb
aad
lods
jnp
pushf
xor
popf
xchg
lods
shlb
sbb
jae
add
mov
std
in
shr
push
xchg
outsb
xchg
notb
cli
mov
iret
xor
cwtl
add
test
scas
stos
outsl
cmp
test
and
cmc
push
push
jge
mov
test
je
inc
inc
arpl
xor
out
cltd
in
fisubl
mov
call
and
xchg
jle
scas
sbb
stc
in
andb
loopne
pop
das
add
xor
fbstp
mov
xchg
cli
cld
hlt
pop
jecxz
aam
mov
andb
dec
jecxz
testl
mov
pop
test
div
and
dec
outsl
sub
stos
call
pop
mov
mov
and
stos
int
adc
inc
sub
xchg
jmp
xchg
mov
pop
cmpsb
loopne
inc
cmp
push
pop
out
fcom
sub
jge
inc
test
icebp
dec
mov
js
cmpsb
std
dec
pusha
cwtl
xor
lea
push
mov
mov
jb
call
or
add
mov
hlt
adc
jb
xchg
xchg
mov
dec
xchg
fwait
imul
sub
rolb
mov
lret
adc
popa
sub
fs
fwait
cmpb
pop
xor
lret
inc
jg
push
cs
xor
cwtl
clc
imul
dec
add
scas
adc
sbb
sub
and
fnstcw
dec
leave
mov
les
dec
mov
data16
clc
lock
outsl
mov
dec
pop
out
sbb
movsb
dec
mov
repz
xchg
sbb
jecxz
addb
and
xchg
lods
andb
xchg
add
sub
mov
in
xchg
xadd
jne
dec
cmpsl
std
lahf
mov
mov
mov
push
add
arpl
pop
mov
movsb
loop
xchg
cs
mov
pushf
and
popf
cmp
inc
adc
ja
jnp
mov
mov
jbe
pop
es
stos
shll
push
fisubs
cmp
lods
add
xchg
or
lret
repnz
and
out
neg
into
pusha
mov
lret
xor
movsb
xchg
mov
in
mov
popf
test
and
aas
sahf
add
ja
arpl
cli
sub
pop
rorl
xor
nop
jl
aad
test
or
dec
lods
insl
and
mov
leave
xchg
lcall
push
repnz
xor
mov
andb
adc
sbb
xchg
push
hlt
les
mov
popa
and
pop
movsb
push
inc
sti
or
clc
lahf
or
cmc
call
out
fmul
loop
inc
kandw
jp
push
xlat
adc
sub
push
aas
xchg
shlb
js
fdivrs
scas
lret
sub
jg
jno
push
push
mov
sbb
inc
xchg
test
faddl
xor
into
dec
mov
cmp
dec
xor
pushf
mov
aaa
jb
sbb
test
dec
xchg
in
js
add
scas
addr16
test
popa
pop
rorb
or
icebp
out
popf
outsl
outsb
stc
stos
ja
push
movsb
adc
loope
lret
int
negl
aam
adc
jge
scas
std
js
push
xchg
cmc
inc
and
dec
stos
cmpb
push
data16
lea
or
pop
jae
add
js
stos
test
hlt
add
sub
mov
ds
push
inc
inc
test
push
test
fistps
mov
sbb
adc
pop
ds
push
ja
outsb
out
jne
stc
push
xchg
pop
pusha
out
inc
mov
adc
xchg
jge
push
icebp
insl
push
icebp
mov
pop
fstpl
cmpsl
mov
mov
dec
cld
lods
popf
and
xorb
rcl
sarl
add
mov
sub
cmp
xchg
add
or
dec
inc
push
pop
cltd
push
push
add
sbb
fwait
shll
inc
pop
adcb
jb
fstpl
lea
fdivs
xchg
xchg
sub
cmp
sub
xchg
or
outsb
sub
mov
fcomi
out
in
sub
add
rcrb
fs
lret
arpl
sub
loop
std
pop
push
xchg
xchg
js
push
mov
mov
cmpsl
lahf
fisttpll
lds
mov
mov
insb
ret
idivb
dec
xchg
mov
ficomps
into
mov
mov
lods
jb
xor
mov
es
cmp
call
pop
cmc
fidivs
sub
xor
pusha
dec
imull
push
xchg
mov
cltd
sub
adc
adc
les
mov
cs
aam
dec
sub
mov
fs
aad
push
aas
mov
inc
pop
dec
mov
xlat
mov
nop
dec
stos
andl
daa
mov
fisubs
xor
mov
js
aas
imul
pop
inc
push
idivb
iret
int3
sub
ljmp
cld
add
je
push
pop
mov
filds
mov
xchg
jmp
in
add
sbb
cmp
pop
xor
leave
imul
mov
add
and
out
dec
xor
int
pop
mov
cmp
neg
lcall
cmpsb
sbb
xchg
imul
jbe
shlb
outsl
xchg
out
das
loop
inc
mov
mov
jae
test
lds
add
push
jbe
popa
push
or
and
jno
les
or
sbb
mov
data16
mov
test
mov
test
xor
inc
mov
ret
xor
lret
cmp
xor
or
or
jb
dec
or
mov
shll
ljmp
add
add
push
sahf
js
cs
sbb
mov
ffreep
add
mov
sahf
and
cmc
sahf
jle
pop
ds
test
pop
out
mov
cld
dec
in
mov
push
ret
int3
jbe
sbb
xchg
adc
in
push
call
faddp
sub
jbe
in
sbb
jmp
lods
stos
icebp
pop
xor
inc
mov
dec
sahf
adc
lcall
fdivs
shlb
test
push
jae
xor
lds
xchg
das
test
addb
mov
js
and
cmp
mov
jge
aas
adc
cmp
push
and
mov
sbb
lret
fdivrs
inc
ds
add
mov
shlb
xor
neg
pop
aam
jns
lds
filds
inc
shl
inc
clc
mov
jne
push
cmpsl
test
fstpt
mov
add
cltd
cmc
out
add
push
gs
int3
movsl
and
pusha
xchg
fbld
sbb
mul
xor
lea
sub
pop
adc
int
push
mov
std
dec
mov
stos
decl
std
jecxz
xchg
xchg
sahf
or
mov
mov
add
xor
or
in
pop
and
ret
mov
and
andl
mov
dec
stc
arpl
int
jl
lods
out
adcb
inc
je
stos
or
rcr
mov
or
test
add
fdivrs
ds
ret
popf
jl
cmp
push
push
sbb
jp
pop
jne
in
clc
sbb
lret
inc
stc
or
cwtl
cltd
add
scas
enter
pop
test
xchg
outsb
xlat
jb
xor
mov
fmull
stc
add
mov
cmp
lcall
adc
pop
incb
mov
out
jb
xchg
aad
pop
lock
add
imul
std
es
pop
and
test
push
out
mov
xchg
xlat
call
testl
push
adc
xchg
sahf
mov
filds
fbld
jmp
stos
inc
mov
pushf
push
push
aam
daa
ror
sbb
movsl
jl
test
cld
mulb
int3
adc
pop
jno
mov
into
movsl
jo
call
jb
cmc
das
cmc
dec
outsb
fisttpl
xchg
popf
fs
sarl
jb
inc
rcrl
mov
add
xor
fistl
jns
xchg
xor
data16
int3
out
cmp
dec
pop
pop
dec
xor
fwait
dec
ljmp
repz
dec
sarb
arpl
pop
pop
rclb
jno
push
sbb
cmp
insl
sti
jp
sub
mov
in
imul
sar
ja
in
aaa
stos
movzwl
mov
addr16
xchg
sub
or
push
add
or
and
lahf
sub
jae
xor
cs
jp
roll
pop
mov
mov
and
scas
add
roll
add
out
dec
test
outsl
rcrb
mov
push
push
sub
lock
push
imul
cld
pop
cmp
fiaddl
xor
xchg
dec
xchg
xor
pusha
dec
adc
xchg
sahf
jnp
shl
sbb
ret
mulb
fadds
sbb
mov
stos
cwtl
test
xchg
ja
lret
popa
jge
movsb
cmp
stos
movl
mov
xchg
cmpsb
xor
sbb
orb
jg
in
jg
mov
inc
push
dec
stos
clc
mov
aas
dec
out
int
xchg
test
ret
dec
adc
push
and
add
imul
or
xor
cmp
call
fstpt
fucom
cmpsl
jl
pop
pop
jge
xchg
decl
pop
jmp
push
repnz
push
mov
mov
repz
mov
or
jno
or
or
test
in
gs
cli
xchg
cmp
lret
push
mov
loope
enter
jecxz
shll
dec
push
cmpsl
sub
lods
imul
push
lds
sahf
pusha
push
xor
mov
push
loope
stos
cmc
imul
lds
sti
test
insb
push
shrl
mov
push
je
arpl
or
xor
cmpb
pop
cmpl
add
call
and
movsb
mov
stc
mov
shll
pop
adc
hlt
fdivrs
push
push
mov
ret
insl
jae
mov
aas
ja
xchg
aam
dec
std
nop
dec
movsb
loop
mov
push
call
sbb
addr16
sbb
rolb
ret
mov
add
fidivs
mov
stc
cld
jae
mov
pop
sub
cmp
mov
xchg
cmp
inc
and
insl
cmpsb
ljmp
and
mov
inc
xor
xchg
cld
or
ljmp
fstl
movsb
out
les
lea
shrl
ss
adc
loopne
jb
cmp
and
mov
dec
xchg
jecxz
push
cltd
fnstsw
outsb
loop
cs
sbb
xlat
xchg
cwtl
ret
aaa
call
mov
inc
dec
sbb
push
ds
aam
rcrl
dec
les
push
and
imul
leave
sahf
sub
fwait
mov
push
mov
sub
pushf
sbb
add
iret
add
enter
mov
sub
inc
movsl
fwait
xor
add
ret
mov
mov
jae
shlb
clc
gs
mov
lcall
sub
xchg
lods
addb
mov
in
cmc
mov
or
push
and
movsl
pop
orb
jecxz
xchg
or
xor
push
imul
mov
sub
in
jp
scas
aad
vshufpd
push
push
jmp
sahf
idivl
jl
in
xor
js
int
stos
inc
xor
pop
leave
jg
cwtl
imul
lret
ficoml
sub
push
ror
xchg
jle
add
add
jge
bound
xchg
mov
int3
pop
cmpsb
mov
aam
dec
jnp
idivl
xor
cmp
fsts
lea
ret
pushf
and
xchg
jbe
adc
test
testb
mov
jns
inc
push
xchg
pop
je
decl
stc
jle,pn
xchg
imul
jl
test
icebp
shlb
or
fistl
push
dec
sahf
sbb
inc
inc
test
xchg
cmpsb
mov
cmpsl
inc
pop
mov
mov
into
sbb
mov
and
add
pop
sub
jae
lret
aaa
pop
xchg
pop
sub
pop
sti
lods
jnp
adc
arpl
loopne
loopne
xchg
cmpsb
bound
fnstcw
jp
mov
mov
rolb
xchg
pop
cmp
xor
int3
pop
sysenter
dec
xor
xor
cs
fwait
sub
xor
xor
je
sub
das
nop
mov
push
shl
sub
pop
enter
scas
outsl
sub
pop
test
pushf
jb
popf
jmp
orl
mov
cmp
push
imul
cmp
mov
movsb
mov
nop
add
xchg
push
dec
fidivrl
subb
ret
xchg
and
ja
mov
sbb
ja
movsb
push
sbb
xchg
aam
fcmovu
or
adc
add
test
ljmp
add
or
iret
xorl
sbb
insl
mov
lock
aam
fdivr
mov
sub
mov
or
jb
sub
les
adc
jmp
lods
test
pusha
outsl
sbb
clc
iret
sub
dec
js
es
mov
cmp
mov
test
sbb
mov
idivl
jno
sub
popf
aad
sbb
ja
cmc
rclb
inc
mov
outsl
imul
xor
push
mov
or
adc
inc
jnp
movsb
jl
in
fs
ret
popa
push
fistl
and
jne
xor
sub
repnz
icebp
pop
jmp
cmc
ss
cmp
inc
sub
sub
add
loop
cmp
inc
out
sbb
enter
scas
xor
rclb
xchg
cwtl
xchg
and
mov
or
xchg
pcmpeqd
jne
mov
dec
cmp
aam
or
ja
hlt
mov
pop
mov
fcmovbe
stos
test
adc
xor
out
test
mov
pop
insl
xor
sbb
pop
clc
mov
xchg
pop
stos
xor
std
popa
add
or
test
pushl
enter
mov
inc
push
imul
and
pop
jmp
lret
pop
std
bnd
in
imull
push
mov
cmp
imul
and
in
inc
xchg
xor
and
adc
add
icebp
and
xor
add
adc
inc
adcl
addl
adc
add
icebp
and
xor
add
adc
inc
adcl
stc
inc
xchg
xor
and
roll
icebp
stc
loope
roll
rcll
popa
mov
push
jno
arpl
xor
and
xchg
inc
adc
jnp
shll
sub
xchg
mov
enter
addl
sbb
aas
sub
push
aam
imul
mov
mov
out
testb
sub
cmp
push
pop
imul
xchg
xchg
andb
ret
out
mul
push
or
cmp
sbb
add
das
sub
sbb
xchg
jmp
into
faddl
or
push
out
das
gs
mov
shr
xchg
add
mov
push
sub
adc
add
hlt
cmp
stos
jnp
les
fwait
mov
outsb
cwtl
ds
inc
lock
cmpsb
push
or
inc
pop
out
add
ds
aad
rclb
lret
lret
sbb
push
in
aam
mov
ja
fisubs
je
jns
loop
int3
push
mov
jge
push
imul
in
sarl
dec
xchg
arpl
jns
scas
out
loope
push
xor
inc
pop
jle
ljmp
jae
jp
push
mov
fcomps
mov
out
mul
push
or
add
xor
and
push
inc
data16
jp
mov
jmp
stos
leave
lahf
mov
inc
adc
inc
das
pop
pop
and
aas
pop
and
pop
test
in
neg
rcl
or
xchg
out
test
jg
jle
dec
jae
and
add
or
pxor
mov
xabort
jmp
sti
push
or
sbb
sub
cmp
push
pop
imul
mov
mov
out
idiv
push
or
sbb
sub
cmp
push
pop
imul
mov
mov
inc
jp
pop
and
popa
out
xor
mov
out
rcrb
jne
xchg
cmp
lods
xchg
sub
mov
mov
bound
in
mov
cmpsb
subl
push
jle
mov
out
in
dec
inc
cmpb
out
jnp
cmp
mov
inc
cmpsb
stos
mov
push
mov
inc
mov
dec
cmpsl
sub
xor
mov
movsl
ss
aad
outsl
ffreep
push
out
dec
mov
fnstenv
lret
mov
pop
dec
lret
or
in
loope
adc
and
xchg
loope
nop
fiaddl
dec
push
push
loopne
fsubl
scas
dec
mov
in
cld
lcall
shll
sub
lods
xchg
hlt
rcrl
fnstenv
jae
jne
fmuls
cmp
jae
sub
insb
adc
and
jl,pn
inc
mov
mov
daa
stc
in
dec
test
jecxz
pusha
icebp
jns
pop
sub
pop
cli
cmp
int3
test
dec
lock
mov
imul
push
lahf
dec
sub
xlat
or
mov
sbb
in
cmp
mov
aaa
int
das
fnstcw
mov
xchg
xchg
mov
add
jno
sbb
sub
cmpsl
xchg
inc
mov
xor
ds
cmp
adc
iret
cmp
out
mov
mov
lds
xchg
js
cmc
movntdq
aas
pop
mov
stos
mov
xor
mov
dec
aam
jl
daa
or
xchg
sbb
add
lcall
sbb
lcall
mov
mov
loope
cmp
lret
xchg
negl
mov
push
cwtl
push
lods
xchg
enter
clc
in
lret
ja
pop
sub
sbb
out
xchg
xchg
ret
mov
inc
push
inc
sbb
stc
daa
lcall
mov
daa
cmc
mov
adc
pop
xor
in
je
sbb
adcb
dec
std
repnz
repnz
and
xchg
shl
mov
mov
popf
push
out
dec
movsl
imul
loopne
lret
cmpsb
sti
incl
sbb
dec
loopne
inc
jp
jne
aas
bndstx
sbb
cltd
pushf
xchg
out
jecxz
jge
push
xlat
adc
mov
fcmovnb
divb
mov
adc
in
movsb
push
mov
std
dec
loope
sbb
pop
mov
mov
insl
sub
push
lods
decl
xchg
mov
jb
cmp
push
fdivrs
shrl
outsb
js
sarb
andb
mov
adc
data16
sbb
and
outsb
test
andl
or
mov
push
aad
out
sub
outsl
lock
rcl
and
mov
dec
add
enter
sub
push
stc
mov
cmp
jmp
lcall
pop
mov
lret
pop
sub
insb
jae
sbb
jg
das
test
in
mov
divl
div
add
hlt
sbb
inc
jg
push
std
jo
dec
sbb
cli
fcomps
xor
jge
xor
fldenv
push
cmp
push
data16
hlt
mov
bound
xchg
cmp
sub
xchg
push
fidivs
jl
adc
into
mov
cwtl
xor
mov
pusha
xchg
sub
add
lock
inc
and
adc
jl
clc
and
cmp
jb
and
xor
arpl
decl
out
inc
loop
xchg
in
bound
push
aad
fimull
cwtl
fcomps
xor
push
je
cs
pop
push
dec
daa
fcmovne
lods
stc
or
mov
xchg
call
mov
mov
stc
sbb
and
jnp
cld
cmpsb
xor
les
inc
add
jae
xchg
xchg
shr
dec
push
push
cmp
sahf
fidivrl
pop
cmpsb
xor
fsub
enter
lock
and
mov
mov
fwait
sub
jmp
dec
ja
popa
sub
test
xlat
mov
jge
leave
jbe
sub
cli
or
xor
xlat
dec
cmp
es
fstpl
adc
sbb
cs
lds
icebp
inc
imul
xorl
shll
mov
sub
adc
daa
cltd
loop
stos
cmp
inc
nop
xchg
loope
inc
add
mov
cmp
and
sbb
pop
out
imul
dec
ds
xor
mov
xor
jbe
mov
pop
jns
inc
jg
xor
jae
ja
clc
or
ret
divl
ret
sbb
mov
sbb
data16
fwait
cmc
add
pop
adc
inc
push
cmp
push
dec
enter
push
xor
lcall
xor
divb
dec
std
scas
in
insb
push
and
jns
int3
mov
dec
andb
dec
sahf
outsb
mov
jo
pop
dec
imul
push
sbb
je
in
cmp
cwtl
testl
xchg
pop
jae
popa
mov
cmc
jne
sbb
mov
adc
std
lret
mov
push
mov
jge
xchg
loopne
mov
cltd
sarl
add
inc
test
pop
pop
add
mov
sub
xorb
lea
loope
inc
negl
insl
in
push
pop
pmaxub
dec
xchg
dec
push
adc
flds
pop
xor
int3
adc
jb
jecxz
cmp
js
insl
enter
cltd
popa
or
out
push
or
mov
in
js
mov
push
subl
insl
dec
cmp
mov
int
cmpsb
ds
sbb
jae
repz
fs
inc
sub
adc
and
popf
dec
bound
je
dec
aas
jle
mov
mov
or
outsl
aad
inc
mov
mull
xlat
fwait
jmp
lret
push
ss
cli
ja
cmpsl
push
insb
xlat
xchg
xchg
inc
arpl
pop
in
movsl
pusha
push
or
scas
jl
and
scas
jp
repz
jae
push
gs
pop
fmul
inc
cld
inc
imul
add
fidivs
test
pop
aad
mov
push
or
sbb
icebp
pop
int
in
cmp
cmpsl
rcl
cmp
clc
sarb
scas
jmp
push
mov
jg
pushf
je
pop
addr16
adc
mov
or
scas
mov
and
jns
pop
fbld
dec
cmc
mov
pop
clc
scas
mov
cmc
insb
jae
popa
xor
jge
into
aam
rcrl
mov
adc
pop
dec
insl
or
or
xor
jbe
rclb
pop
cli
mov
jge
add
push
mov
scas
dec
fstpl
int
xor
sti
or
call
jp
push
mov
in
jne
je
mov
cltd
xchg
mov
das
jge
lret
push
adc
cmpsl
hlt
insl
shll
mov
push
pop
mov
dec
jae
imulb
add
aaa
jl
insl
mov
pop
inc
insl
fsub
xor
add
jo
clc
mov
notb
das
hlt
adc
arpl
clc
mov
mov
lds
cld
mov
or
sbb
loope
cmp
clc
clc
ss
adc
mov
stc
fnstsw
jge
popa
cmp
jecxz
bound
push
push
add
rcrb
ret
cwtl
xor
ds
pop
inc
sub
mov
jp
inc
mov
pop
stc
loope
bound
push
mov
pop
jnp
movsb
push
insl
xor
je
add
cmp
fmul
adc
xor
or
out
push
xor
and
xchg
leave
insl
pushf
jmp
sub
push
sbb
and
sarl
stos
push
movsb
loopne
inc
xchg
lods
aaa
addr16
iret
test
mov
scas
les
sub
in
mov
sub
je
cmc
cld
mov
lock
adc
rorb
and
xchg
sub
aaa
les
insl
cmp
mov
ror
pushf
shrb
mov
sahf
fimuls
push
int
fisubl
jge
pop
std
pop
ja
adc
jmp
rclb
decl
or
daa
pop
in
cmpsb
outsb
repz
inc
pop
fcmovnbe
dec
mov
notl
popa
xchg
sbb
xlat
inc
xchg
stos
inc
in
jg
sub
push
xor
pop
out
loop
cltd
dec
inc
mov
test
sti
or
jge
dec
add
cmp
call
jg
push
lret
fbld
and
dec
imul
mov
mov
jnp
or
xlat
scas
lahf
jnp
dec
inc
jl
fwait
push
add
aas
bound
lcall
mov
fldcw
or
pop
or
adc
sub
popa
aas
es
push
add
mov
call
int3
flds
mov
sbb
pop
shl
cli
add
repz
and
lahf
popf
cwtl
int3
out
sar
fisubl
pop
adcl
ds
movups
lret
in
je
or
lds
insl
and
push
sbb
cmp
jp
jg
mov
mov
inc
add
add
lahf
cli
mov
push
sbb
mov
jo
pop
daa
and
xor
repnz
cs
and
in
cmp
and
repnz
lret
sub
xor
insl
stc
in
and
lret
ror
push
fcmove
lds
orb
out
fsubrs
jo
mov
cmp
xchg
dec
arpl
sub
push
xchg
mov
cmp
int
fs
add
jmp
and
popf
xchg
xchg
fcomps
aam
pop
popa
dec
ja
fstpl
inc
and
sbb
mov
hlt
in
sbb
sbb
push
gs
pop
add
dec
jmp
and
mov
jp
orl
add
inc
xlat
sbb
add
sub
and
mov
cmp
leave
mov
pop
orl
es
in
mov
mov
xchg
movsl
mov
or
xor
mull
orl
jbe
sub
into
cmpl
pop
test
ds
or
mov
inc
rcrb
or
mov
mov
test
adc
dec
add
test
cmp
call
stc
xor
lea
aad
pop
imul
pop
icebp
xor
mov
or
jae
push
mov
movsb
sbb
dec
in
imul
hlt
andl
jne
je
cwtl
cli
ds
in
push
xlat
jne
cmpl
cmp
push
xorb
cmp
movzwl
lods
cld
mov
outsb
jnp
scas
xor
test
out
stos
test
mov
inc
loop
aaa
pop
not
fwait
cmp
decl
mov
fs
rolb
mov
lea
or
ret
jecxz
pusha
push
xor
pop
rorb
insb
bnd
push
push
dec
add
out
std
lea
mov
andl
in
mov
and
fimuls
mov
sub
xor
lock
pop
and
mov
push
or
cmp
int
in
outsb
inc
inc
and
inc
and
inc
mov
cmp
mov
and
pop
push
xor
lods
jecxz
dec
jo
xorl
popf
pusha
adc
cmp
std
jnp
lods
inc
or
iret
and
aas
imul
loope
dec
sarb
fdivp
add
push
or
cmp
xor
push
jno
xlat
out
clc
lods
adc
mov
fcmovnb
cmovge
out
cmc
mov
push
in
jle
jae
ljmp
shrb
out
popa
xchg
xchg
push
push
lret
mov
cmp
add
test
test
inc
cmc
mov
out
sub
sar
leave
rorl
mov
in
out
push
dec
into
pusha
sub
xchg
jae
ja
insb
and
les
xchg
imul
cmp
sub
sbb
push
mov
or
jp
xchg
push
xchg
xchg
outsl
fmuls
outsl
add
subb
stos
outsl
stos
rcrb
xor
fldl
out
or
fmuls
jg
mov
arpl
cmpsb
cmp
insl
in
ds
cld
jmp
xchg
xchg
cwtl
sub
xlat
ret
js
pop
push
test
inc
movsl
nop
or
scas
insb
arpl
test
mov
clc
imul
stos
out
pop
jbe
inc
data16
sbb
cmp
mov
xchg
call
aad
cmpsl
cmpsl
xchg
pop
xorl
in
in
out
mov
dec
je
mov
cmpsl
pusha
or
sti
test
mov
test
lds
fwait
mov
fiaddl
jb
pop
gs
adc
jbe
jecxz
pushf
jge
jbe
insb
addr16
adc
test
fiadds
mov
lret
test
jo
jne
ds
cli
aaa
mov
adc
jbe
std
jbe
lods
xchg
out
sub
pop
addb
ficoms
cld
fucom
cmpsl
call
add
mov
mov
es
cli
or
adc
data16
add
and
xchg
sti
jnp
das
or
addb
xor
and
insl
popf
sahf
push
jnp
dec
adc
outsl
mov
js
jns
int3
dec
out
push
push
push
mov
pusha
jnp
cmp
scas
and
jge
xor
test
movsb
pop
fadds
fnstcw
adc
xchg
ss
movsb
add
and
jns
mov
or
test
fisubs
push
out
add
cmpsb
andb
cmpsl
add
adc
rcr
xchg
push
mov
push
xchg
cmp
test
insb
test
or
pop
mov
or
xchg
out
pushf
mov
stos
js
sbb
dec
dec
mov
xor
mov
ret
into
leave
orb
mov
xor
cmp
and
and
sbb
cmp
mov
jnp
dec
dec
jnp
inc
not
jnp
out
lret
gs
cmp
push
push
in
mov
cmovo
outsl
xor
fs
loop
inc
cmp
xor
cli
lods
mov
das
cmp
dec
xchg
inc
jle
into
adc
int
jle
adc
and
sahf
cmp
xor
das
inc
rorb
imul
in
inc
push
xor
cmp
xchg
jle
out
adc
cmpsl
xor
add
adc
daa
sub
mov
dec
insb
ffreep
scas
or
popf
sub
lahf
popf
push
aas
fisttpll
push
jecxz
int3
adcb
pop
shlb
insb
pop
cmp
faddl
test
in
pusha
lcall
or
lds
lcall
mov
pop
cmpsb
mov
adc
add
jno
sti
add
or
jbe
stc
dec
xchg
movb
mov
test
in
and
sbb
lret
int
jb
push
cmp
lock
xchg
jb
push
shlb
jbe
es
mov
cmpsb
jmp
sub
test
cmp
or
push
shll
dec
add
sahf
mov
out
and
sbb
mov
iret
xchg
test
xor
fists
ret
cmpsb
fs
idivb
inc
rcr
pushf
jp
popf
scas
aaa
iret
pusha
out
mov
mov
mov
mov
xor
jo
mulb
shlb
mov
cmp
enter
jo
xchg
es
pop
mov
js
xchg
xor
mov
sub
or
lods
xchg
mov
fldenv
subb
pop
sbb
lret
add
int3
ret
sbb
outsb
adc
mov
pop
push
cmp
scas
shll
mov
repnz
push
js
mov
or
repnz
rolb
test
in
cmp
xchg
mov
rcr
dec
dec
xchg
into
or
jo
jmp
push
inc
pop
xchg
sub
and
les
insb
fs
sbb
test
fisttpll
cmp
dec
cmp
movsl
loopne
pop
subl
es
in
dec
testl
in
jmp
mov
mov
xchg
ficoml
push
lods
mov
mov
mov
or
mov
lods
xchg
scas
mov
dec
push
lods
mov
imul
scas
mov
or
fisttpll
push
cltd
xchg
add
notl
mov
push
cli
adc
stos
loopne
mov
negb
sbb
pop
mov
and
jb
pop
insl
das
vmovss
jb
push
pop
pop
es
xchg
sbb
jge
pop
out
jg
sub
push
mov
mov
inc
lret
scas
ficoms
pop
sub
mov
addr16
sbb
jg
sub
add
rorb
dec
jecxz
into
xor
or
sub
outsl
test
mov
adc
push
jb
mov
ds
ss
push
das
insl
push
int
test
xchg
mov
stos
hlt
std
or
xor
cmp
mov
add
inc
inc
in
pop
push
stos
jbe
xor
mov
cmp
or
xchg
ret
xchg
sbb
add
loop
lock
shrb
xchg
mov
movsb
icebp
sbb
mov
imul
inc
mov
dec
ja
test
fmull
jbe
push
scas
dec
push
dec
mov
cli
repz
and
mov
add
jmp
arpl
adc
cmp
sbb
jecxz
stc
js
scas
push
xchg
mov
mov
ljmp
dec
jmp
fmuls
roll
in
mov
out
clc
mov
inc
mov
lahf
jl
enter
inc
in
rolb
or
xor
pop
mov
ljmp
outsb
mov
clc
or
iret
inc
mov
add
arpl
xchg
jnp
push
xchg
mov
bound
cmp
and
mov
int3
cmpsl
jmp
das
sub
nop
pop
dec
adc
insb
jmp
push
jae
sbb
movsl
cmp
dec
mov
sub
pop
enter
and
ljmp
jno
cmpsb
cmp
cs
test
stos
loop
pushf
imul
cld
mov
pop
jge
sbb
incb
out
cltd
stos
outsl
ds
xchg
cld
cmp
mov
dec
dec
or
orb
popa
sbb
adc
push
jecxz
xor
popa
xor
gs
fcoml
popf
mov
ror
lret
loop
ljmp
mov
add
push
mov
hlt
subb
add
jle
sbb
stos
scas
sbb
sub
inc
mov
aad
xchg
mov
out
pop
push
data16
popa
ljmp
mov
test
outsb
inc
or
sarb
adc
or
imul
ret
jp
cmpsb
ror
jle
dec
jp
jo
jb
dec
pop
push
aas
fstpl
dec
pop
popa
jnp
or
pop
xchg
or
sbb
jo
iret
jl
rcrb
jg
xorb
out
mov
ret
adc
xchg
fnstenv
push
adc
adc
pop
ffree
adcl
sbb
xchg
idiv
mov
inc
dec
fisubrs
mov
int3
lahf
aas
movsb
mov
jae
lcall
shrb
ja
or
mov
pop
lods
mov
push
stos
dec
mov
in
mov
jle
push
pop
push
cli
xchg
jo
pop
into
repz
push
jmp
xor
loopne
fadd
pop
fidivs
cwtl
repz
popl
outsb
mov
test
cld
popf
mov
mov
mov
xlat
adc
in
cltd
fidivrl
outsb
jmp
pop
imul
out
mov
inc
data16
adc
inc
data16
sub
inc
dec
cmp
rolb
cmp
mov
loopne
xchg
push
pop
pop
sub
ljmp
dec
push
or
push
popf
js
arpl
jns
pushf
sbb
pop
std
call
mov
sbb
pop
std
lock
adc
xor
mov
push
cmp
mov
or
rorb
test
push
push
inc
fs
push
inc
cli
sbb
in
shr
jmp
out
sub
js
test
push
jns
sar
lcall
pop
fs
xor
cld
js
enter
test
xor
push
fbstp
test
sbb
icebp
or
pop
test
push
dec
sub
lahf
dec
jl
mov
test
jnp
add
or
bswap
xchg
ja,pt
dec
addr16
dec
cmp
adc
mov
rcll
add
xchg
je
cwtl
fiadds
mov
adc
mov
inc
or
fldt
pop
addb
arpl
shrl
xchg
jmp
and
push
outsl
sub
cli
inc
push
mov
es
fs
jnp
pop
jne
and
cmp
adc
add
lcall
mov
lcall
fstpl
aaa
loope
cmp
pop
jb
or
mov
add
test
jo
sbb
scas
xor
les
popf
std
xchg
push
or
scas
push
xchg
sbb
and
inc
jae
push
scas
enter
loopne
push
js
sahf
xor
sub
bound
mov
out
idiv
push
or
sbb
sub
cmp
push
pop
imul
mov
mov
out
idiv
push
or
sbb
sub
cmp
push
pop
imul
mov
mov
out
idiv
push
or
sbb
sub
aas
inc
dec
push
pop
outsw
jbe
xchg
mov
lret
jmp
cmp
or
mov
sub
dec
xor
fisubs
adc
add
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
loope
jl
push
je
jns
sbbb
lods
and
in
add
add
push
or
add
adc
cmp
incb
add
add
sbb
or
or
sub
inc
add
add
incb
add
add
add
add
add
add
add
push
add
add
add
incb
testl
pop
add
testl
and
jnp
outsb
add
add
outsl
add
add
add
mov
addl
add
push
cmp
sub
pop
add
add
ds
add
add
inc
add
add
add
add
cmp
scas
add
add
add
add
add
add
add
push
add
imul
xchg
add
add
xor
xor
or
mov
add
pop
add
add
add
outsb
add
add
lcall
add
add
jge
popl
outsb
add
add
add
add
add
add
bound
push
add
add
das
add
add
add
add
add
add
add
add
outsl
add
add
add
add
add
add
add
cmp
sub
aas
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
add
sub
push
add
add
lea
push
add
add
add
add
add
add
arpl
add
lods
add
rolb
insl
add
add
add
add
add
add
add
add
add
add
add
add
lcall
add
add
mov
push
add
add
add
and
push
add
pop
add
roll
dec
add
add
add
add
push
jne
sub
filds
arpl
push
add
add
inc
add
jno
repnz
add
lods
add
add
add
add
add
add
test
fadds
stos
add
add
add
add
add
add
fwait
add
lods
add
add
add
add
rolb
add
cmp
repnz
repz
add
add
add
mov
lods
add
add
add
sub
sub
lcall
add
xor
add
outsb
add
add
add
add
or
pop
add
add
out
adc
add
add
adc
pop
add
add
xchg
add
add
pop
add
add
pop
add
sub
add
or
push
add
add
add
add
scas
add
add
pop
add
add
xchg
add
add
add
add
dec
add
rolb
das
add
add
add
mov
add
add
sub
jl
add
sub
adc
add
incb
add
inc
add
mov
add
inc
add
add
add
out
add
add
add
add
pop
add
add
add
add
add
add
or
add
add
fidivrl
mov
das
mov
loope
shll
adc
test
adc
data16
or
out
fisttps
addr16
rol
sbb
and
sahf
cwtl
jmp
dec
jne
dec
pop
call
cmpsb
inc
push
xor
mov
orl
cmp
or
dec
mov
inc
pop
pop
cmpb
outsb
sti
nop
data16
add
pop
stos
sti
pushf
mov
aam
lcall
and
hlt
sbb
xchg
xchg
jmp
mov
push
pop
add
mov
mov
addr16
aam
mov
and
in
jo
aad
xor
lods
and
jne
mov
and
movsl
pusha
ljmp
rorl
jg
mov
lods
add
sarl
push
mov
cmpb
dec
fisubrs
inc
add
in
jae
pop
and
loop
jecxz
outsb
lret
xchg
sub
push
in
xchg
push
loopne
add
mov
push
ret
sub
fdivs
outsb
cmp
hlt
shll
mov
addr16
mov
jg
add
push
fisubrs
dec
dec
lock
push
mov
adc
xchg
xchg
clc
test
test
sbb
mov
call
popf
sub
test
insb
push
sub
movl
push
fnstenv
sbb
xchg
cmp
add
adc
in
xchg
shl
or
lcall
insl
inc
mov
pushf
enter
mov
sbb
sbb
inc
jno
pop
cmp
mov
test
andb
call
sub
dec
in
pusha
or
mov
jno
jle
loope
imul
sub
and
hlt
xor
mov
mov
sub
xchg
test
aaa
mov
stos
pop
mov
and
jecxz
leave
sbb
sbbb
dec
push
cmp
xlat
push
pushf
mov
add
movsb
xlat
enter
pushf
aaa
inc
lock
adc
sahf
movsl
in
or
dec
lods
imul
jo
sbb
sbb
movsb
xor
adc
mov
push
cli
lret
inc
sbb
arpl
and
shll
mov
mov
mov
je
or
dec
int3
xor
sar
lcall
mov
iret
cmp
shl
lret
popa
pop
lods
and
jae
in
pop
lock
idiv
and
mov
arpl
add
xor
mov
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
