call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
mov
jo
pusha
mov
pop
out
and
in
rcll
lock
and
adc
jecxz
shll
pusha
mov
mov
push
and
arpl
jge
inc
loopne
loop
adcb
add
push
push
jmp
mov
rorb
jecxz
mov
xchg
adc
jg
fs
mov
ret
xor
fsub
rcll
pusha
lea
jecxz
push
xor
call
lret
dec
xor
pusha
pop
repz
das
sahf
lods
mov
mov
xchg
inc
mov
int3
repz
inc
inc
aas
cmp
mov
shrb
cmp
mov
in
push
fwait
mov
mov
pop
adc
xor
ds
bsf
lods
and
jbe
push
mov
dec
shlb
jne
cmp
dec
mov
xor
lods
or
rclb
and
sub
ljmpw
push
xor
mov
inc
pop
mov
and
mov
cmpsb
rolb
shrl
pusha
mov
out
xchg
xor
cmp
jmp
cmp
mov
xchg
adc
popa
sbbb
mov
and
filds
repz
xchg
add
pminub
ret
inc
lock
and
inc
loopne
andb
aam
push
rolb
adc
and
xchg
xor
rclb
loopne
nop
and
repz
jecxz
shll
pusha
mov
mov
and
arpl
push
lock
loopne
nop
and
repz
daa
push
jnp
pushf
lcall
out
xor
cmp
call
mov
jl
mov
mov
fcmovnu
sti
inc
and
loop
dec
inc
dec
scas
loope
arpl
pop
inc
repz
iret
cli
and
xor
outsl
popa
sbb
push
popa
push
stos
sub
sbb
inc
js
jl
into
icebp
arpl
pop
xor
inc
jg
xlat
imul
push
popf
stc
xchg
ljmp
data16
lock
push
jmp
mov
fstpl
sbb
cld
push
push
xlat
out
cli
dec
repz
inc
cmp
das
mov
inc
mov
rolb
lfs
xor
add
daa
and
in
insb
push
repnz
std
orb
xchg
pusha
mov
int3
add
les
mov
nop
rcrl
mov
jae
js
scas
movsb
pop
jle
lahf
call
in
das
mov
stos
jne
pop
cltd
mov
sbb
cli
add
bound
jno
shll
xchg
xor
or
or
insb
jg,pn
adc
test
inc
jae
jo
lret
pop
mov
sbb
mov
inc
pop
xor
movsb
push
add
roll
js
sahf
mov
cld
dec
test
lds
lds
pop
in
jl
xchg
shrb
inc
test
fsubs
mov
fnsave
int3
gs
lahf
repnz
sub
cs
mov
inc
xchg
subb
pop
sbb
add
rorb
cmp
hlt
push
push
imul
ljmp
repnz
push
jle
cmp
xor
mov
loopne
dec
bound
jns
pop
cmpl
mov
inc
adc
gs
shl
xor
test
arpl
lcall
pop
pop
xchg
adc
out
out
andl
mov
lahf
fcompl
jns
sbb
cs
jge
into
push
mov
fnstsw
test
stos
popf
cmp
push
or
gs
dec
js
jbe
hlt
inc
in
inc
dec
adc
es
sub
int3
cltd
test
mov
sti
pop
cld
add
in
mov
mov
mov
test
mov
fwait
xor
cmc
add
mov
mov
push
sub
and
movsl
roll
repz
fnstcw
lret
mov
and
mov
fisubl
cmp
lods
mov
cwtl
popf
or
test
xlat
repz
add
in
mov
fiaddl
repnz
divb
lea
mov
loopne
in
stc
or
in
sbb
adc
and
dec
sub
insb
ret
lods
xchg
call
fs
int3
add
sbb
cld
mov
mov
sbb
popf
stc
xor
push
out
sbb
pcmpgtw
mov
ret
movsb
push
aaa
mov
sub
popf
addl
loope
or
mov
xchg
fs
fistps
rorl
fstl
fwait
icebp
mov
test
lea
pop
lock
or
fcmovne
jne
sub
sti
ljmp
jle
movsb
ret
sbb
xlat
rcll
fadds
fcoml
fidivrs
lea
nop
xchg
ret
mov
ljmp
jecxz
adc
push
scas
sub
and
pop
lock
clc
cmp
mov
into
popa
push
sti
arpl
xchg
sbb
lock
lea
cmp
rclb
insb
adc
arpl
ja
bound
sbb
test
sbb
aad
enter
addr16
xor
adc
xchg
and
out
sub
sbb
jb
es
or
std
mov
sbbl
mov
jg
insb
fwait
mov
pop
fldenv
push
repz
jnp
aaa
aas
cmc
ret
fisubl
movsl
or
cwtl
jb
mov
sti
sbb
test
push
shr
or
push
loope
out
in
jne
pushf
in
dec
and
pop
adc
adc
ljmp
or
addb
mov
lea
js
pop
sub
shr
pop
jns
xor
rcrl
xchg
pop
repz
pop
insl
sbb
test
cli
sub
fs
cmpsb
xchg
orl
mov
push
sub
sub
repnz
movsl
jl
pop
mov
or
and
stc
push
insb
push
ljmp
rcrb
scas
shlb
icebp
xor
imul
mov
xor
rorl
ljmp
gs
mov
call
outsl
sub
cli
sub
add
add
xchg
jl
xchg
push
arpl
cmpsl
movsl
adc
pusha
jl
mov
mov
jmp
mov
sahf
pop
shlb
cmc
mov
lods
and
repnz
sub
es
sub
mov
idivb
outsl
xor
repz
jle
ret
jno
sub
mov
cli
frstor
add
push
nop
or
cwtl
test
mov
fstps
repnz
popf
clc
cmp
jp
pop
xchg
lahf
pusha
stos
ja
pop
push
in
fisubl
sub
and
jb
clc
sub
jo
add
jge
aam
push
ret
shll
out
popf
lahf
add
push
and
shl
and
xchg
fsin
lcall
mov
adc
scas
cmp
cli
adc
dec
jae
int3
jno
sti
pop
pop
fisttpl
imul
jne
into
pop
cmp
sbb
jle
mov
xor
rclb
ss
call
dec
xchg
and
cmpsb
mov
jmp
xchg
loope
iret
jle
mov
lcall
arpl
pop
jmp
mov
cld
push
push
push
adc
nop
cld
lret
mov
es
lret
jno
cmpsl
out
imul
mov
mov
add
icebp
les
cmp
jbe
add
pop
add
mov
and
sub
xor
adcl
pop
ret
xchg
stc
lret
mov
fs
je
cmpsl
mov
adc
std
mov
xor
imul
adc
jmp
outsb
pop
pop
cwtl
sbb
adc
or
std
or
out
ret
outsb
add
and
lret
mov
jb
stos
push
push
cmpsl
xchg
mov
push
call
fldcw
fbld
add
fs
cmpsb
cmpsl
lock
mov
inc
arpl
xlat
arpl
inc
lret
mov
mov
clc
lahf
divl
stos
cmc
addr16
push
add
inc
fldenv
addr16
popa
ret
arpl
neg
push
dec
sub
adc
mov
pop
jne
clc
pop
out
jp
mov
popa
dec
add
scas
js
test
sbb
test
and
mov
mov
adc
cmpsl
fwait
pop
inc
aad
int3
or
sub
and
mov
ja
ret
popa
mov
fldenv
jl
push
adc
roll
mov
inc
loop
int
push
or
icebp
pop
add
das
mov
xchg
cmp
setae
jbe
repnz
xchg
xchg
jge
pop
push
addr16
mov
adc
ja,pt
sbb
mov
xchg
dec
and
dec
mov
fcomip
insb
jecxz
je
sub
scas
call
jno
setp
mov
push
daa
call
insl
cmp
and
mov
mov
or
sub
ret
iret
int3
mov
add
ss
or
push
leave
add
jl
inc
mov
jnp
cmpl
pushf
jmp
cmp
sbb
mov
popf
pop
in
xchg
xchg
mov
test
aaa
cmp
loopne
test
pop
aam
popa
add
fstpl
xchg
scas
js
and
mov
jle
xchg
fimuls
mov
ljmp
sub
in
push
sub
push
insl
shl
mov
out
shrb
aam
xor
xchg
mov
jge
movsb
lret
ret
ljmp
cld
sub
pop
cmpsl
mov
cmp
mov
icebp
push
jo
and
dec
pop
es
sarb
iret
and
fisubs
not
repz
pushf
ja
ljmp
push
addl
call
push
data16
adc
jg
pusha
ret
jo
pop
into
cmp
inc
notb
push
sbb
xchg
jecxz
pop
int
mov
aas
jno
es
add
jmp
cmp
fs
aad
mov
mov
movsb
jmp
mov
mov
mov
out
sbb
sub
popf
mov
sub
xor
lock
jle
jmp
mov
lea
pushf
jmp
mov
icebp
xchg
sbb
dec
cmpsb
or
pop
lret
xchg
pop
push
sub
fisttpll
adc
or
push
divb
dec
mov
cwtl
jae
insl
lea
mov
dec
iret
aas
icebp
xor
mov
inc
lds
sub
out
mov
mov
aas
pop
pop
pop
xor
fdivrs
sub
mov
loope
inc
lock
outsb
and
enter
jge
dec
daa
aad
dec
es
xchg
push
lret
pop
or
mov
movsl
pushf
cmp
pop
mov
adc
mov
xor
inc
xchg
popf
mov
xor
mov
fldenv
fisttps
jb
cwtl
cmpl
adcl
lds
ret
pushf
mov
test
xchg
addr16
add
pop
adc
lock
imulb
popf
shl
negl
adc
leave
lcall
jecxz
jnp
mov
sti
es
testl
sub
pusha
jge
test
pushl
adc
mov
notb
inc
dec
hlt
pop
loopne
mov
inc
inc
sub
gs
movsb
sti
dec
dec
cltd
jle
fadds
out
push
inc
lods
rorl
add
mov
xchg
scas
jmp
leave
mov
push
mov
jno
sbb
es
inc
sub
lret
push
mov
cmp
cwtl
and
lret
sub
imul
dec
mov
jp
out
dec
sbbb
decb
inc
mov
icebp
addr16
or
test
and
mov
mov
pop
xchg
add
imul
inc
out
rcrb
inc
aam
mov
dec
mov
sbb
and
xor
test
pop
pop
stos
jmp
push
sbb
mov
sbb
repz
out
enter
xchg
xor
cmp
inc
out
iret
mov
sahf
mov
pop
ss
insl
or
push
jp
cli
jb
roll
push
inc
fdiv
jbe
xor
flds
inc
jmp
ret
repz
fwait
sbb
cmp
lods
pop
fs
test
lea
sti
sbb
addr16
ja
mov
test
lock
aas
dec
movsl
cmp
stos
sub
mov
sbb
cmp
adc
and
mov
fistl
pop
sub
pop
sub
cld
mov
ds
negb
xorl
mov
in
and
lock
mov
mov
and
pushf
add
jae
pushf
or
scas
dec
or
or
ds
pop
and
adc
pop
dec
mov
cmp
jl
dec
gs
mov
es
adc
adc
dec
dec
das
xchg
xchg
aas
loope
movsl
loop
ds
js
cmp
cmp
add
enter
mov
dec
cmp
int
sbb
adc
and
mov
test
outsl
inc
je
repz
aaa
stos
scas
mov
xor
push
mov
cmpsb
movsl
dec
xor
loopne
ret
das
push
out
xchg
in
fnsave
addr16
shrl
dec
jle
shlb
inc
mov
cmp
sti
ss
cli
bound
xor
dec
ficoms
push
and
mov
mov
mov
les
push
movsb
mov
pop
jp
pop
push
ljmp
jge
mov
cltd
in
je
pop
lret
imul
dec
ljmp
in
rcl
or
icebp
xchg
stos
popf
inc
and
mov
addr16
es
add
push
enter
push
pop
ror
inc
lds
sbb
dec
fucomip
mov
mov
inc
push
imul
daa
pop
lret
sub
sbb
test
dec
sarb
mov
jl
jecxz
scas
js
xorb
sub
inc
mov
dec
nop
jle
mov
and
insl
int
ljmp
stc
jge
inc
out
ret
pop
int
xlat
pextrw
xchg
aas
lods
aas
aad
repz
lahf
pusha
insl
repnz
cmpsl
pop
pop
dec
adc
pop
addr16
pop
lods
fidivs
pusha
fwait
push
jl
out
cmp
ljmpw
pop
dec
adc
cs
adc
jl
mov
aam
into
mov
mov
jp
or
mov
mov
inc
arpl
jmp
stc
jbe
mov
mov
mov
sub
and
jb
cmp
adc
stos
adc
hlt
les
test
jne
mov
add
dec
xchg
movsb
push
in
add
loopne
mov
sahf
es
jo
je
fcmovnbe
xor
sbb
out
pop
sar
pushf
xchg
mov
scas
sbb
jg
cmp
aaa
popa
lds
icebp
test
fwait
xor
adc
mov
jmp
inc
jb
adc
mov
pop
mov
test
int
fstps
push
inc
add
ret
nop
or
lods
adc
std
xchg
push
std
dec
or
adc
and
loop
mov
lods
adc
subl
in
inc
or
xor
lret
incb
inc
jo
scas
out
int3
jmp
inc
addb
mov
and
mov
cltd
mov
mov
fcomps
clc
push
movsb
lock
lds
sub
cmp
jne
push
lahf
push
test
lds
fisttpl
pop
dec
jl
jg
xchg
popf
addr16
lahf
stc
jle
sub
mov
xchg
out
xchg
out
cld
xor
add
clc
sub
in
fwait
sbb
mov
pandn
inc
in
inc
cmp
mov
subl
and
push
insb
clc
mov
mov
jmp
clc
mov
ret
and
fcoms
test
jo
mov
cmp
rolb
test
incl
xchg
outsb
sub
test
sti
xor
jo
out
mov
adc
into
add
ret
sub
iret
pop
jo
jne
inc
cmp
mov
xchg
or
pop
out
xor
hlt
push
sahf
out
data16
dec
jnp
aam
repnz
leave
rclb
sahf
les
or
inc
xor
insb
inc
fiadds
outsb
pop
loopne
lods
jbe
into
sbb
inc
hlt
movsb
adc
pop
rclb
cmp
sub
mov
jnp
les
and
jg
shll
or
out
clc
cmpsl
push
dec
and
adc
xor
loopne
inc
mov
jmp
and
jmp
popf
xchg
daa
mov
mov
pop
pushf
aam
in
add
gs
cltd
or
mov
cmpb
jo
int
mov
loope
fcoms
shrb
sbb
xchg
sub
push
imul
leave
push
add
add
test
mov
cmp
dec
jbe
loope
dec
test
push
inc
mov
push
xlat
push
arpl
test
dec
std
shrl
ret
lods
inc
jge
les
dec
das
sub
mov
push
jge
push
adc
or
jne
movsl
jg
push
xchg
mov
jno
sub
aad
add
mov
mov
lds
mov
outsl
cmp
xchg
sbb
push
jmp
pop
cmp
pop
xchg
cmp
cmp
aaa
aad
repnz
mov
hlt
fwait
cmc
xchg
add
push
scas
xlat
rcrl
sbb
xchg
jb
adc
jae
mov
idivb
gs
dec
sbb
out
xchg
adc
cmp
popf
jo
in
jae
loop
jb
inc
js
jne
jno
fs
sub
cmpsl
outsl
fmuls
mov
xchg
mov
lahf
jne
icebp
lods
dec
enter
jge
dec
lcall
shr
sub
push
cmpsb
jmp
test
pop
test
test
or
test
nop
lahf
inc
in
test
jecxz
pop
inc
xor
idivb
push
push
orb
cmc
inc
jbe
jb
cmpsl
and
or
inc
popa
jmp
rcrb
jle
test
ret
mov
inc
ljmp
into
daa
push
sbb
scas
out
adc
sub
sti
and
push
imul
sub
addr16
movsl
push
or
jns
cmpsl
call
mov
xor
rcr
sbbl
aam
mov
sbb
loopne
decl
mov
sahf
js
xor
mov
jae
bound
outsl
mov
data16
jl
mov
fstpt
xchg
sti
inc
mov
push
and
dec
inc
and
stc
in
pop
stos
and
popf
mov
or
rcrb
nop
incl
pop
xchg
sar
outsl
xor
push
fs
or
andb
addr16
sbbl
dec
push
xchg
cli
mov
or
push
add
inc
mulb
into
add
mov
jle
jecxz
pop
or
dec
aaa
mov
and
rclb
das
sub
mov
and
gs
lds
push
and
pop
les
stos
push
dec
lahf
sub
hlt
push
xchg
gs
mov
cltd
mov
ret
mov
add
loop
into
roll
ret
mov
inc
jae
imul
out
jp
sbb
es
loop
push
dec
loopne
or
or
addr16
jb
in
inc
xlat
repnz
andl
mov
daa
inc
push
insb
mov
xor
movsl
cmc
hlt
orl
pop
leave
enter
fwait
outsb
mov
out
cmp
cmp
sub
pop
stc
bound
mov
and
sub
push
pop
jmp
push
push
push
cmp
xchg
fcomps
jnp
mov
pop
mov
shll
idivb
pop
mov
out
cs
ret
in
add
xchg
mov
cmp
fstps
cs
sbb
std
inc
mov
aas
out
mov
jg
repnz
pushf
mov
xor
dec
rol
loop
fidivs
cmc
mov
mov
mov
or
repz
mov
push
aam
jle
push
mov
insb
repz
cs
out
push
mov
mov
fwait
stos
mov
mov
pop
sub
adc
and
xchg
sahf
ret
pop
addr16
and
mov
cmpsl
in
add
test
repz
cmp
cli
jae
sub
mov
call
mov
icebp
xchg
lea
fildll
push
shrb
imul
adcl
adc
dec
push
sbb
add
fs
addr16
and
iret
loop
cmpsl
or
cmp
add
jne
imul
push
xor
das
daa
xchg
gs
neg
stos
pop
mov
dec
mov
test
ficomps
xchg
insb
mov
sti
popf
cmp
or
adc
enter
andl
pop
in
adc
scas
repz
sti
sub
xor
outsl
push
cmp
jl
xchg
clc
aam
popa
cs
push
push
xchg
or
outsb
mov
mov
test
faddl
and
sahf
movsl
lret
jmp
dec
int
fnstsw
and
inc
dec
add
out
push
xchg
stc
cmp
cmp
mov
test
sub
daa
mov
push
adc
cmpsb
or
in
sahf
aas
test
idivl
imul
cmp
sbbb
mov
in
add
mov
data16
cld
aam
mov
mov
xor
pop
shll
jge
pop
in
xchg
movsl
pop
sbb
sahf
imul
fdivr
mov
ss
pusha
jmp
daa
sbb
pop
cmp
stos
andb
jp
repnz
cltd
push
xchg
outsb
dec
push
rorl
insl
jle
lods
and
lods
sbb
inc
lods
push
and
popa
cmp
jg
sbb
sub
lea
repnz
cmp
and
and
gs
inc
jge
push
cmp
imul
pushf
xchg
cmp
or
xchg
pop
push
jle
js
addr16
insl
hlt
and
jg
inc
pop
aam
repnz
cmp
leave
imul
loop
mov
sbb
cmpsl
xchg
sbb
xor
fidivs
xchg
sbb
and
push
gs
repnz
loop
repnz
and
cwtl
mov
test
xor
jp
mov
xor
jne
shll
sub
inc
push
jo
pusha
mov
mov
and
arpl
push
lock
loopne
nop
and
repz
jecxz
shll
pusha
mov
mov
and
arpl
push
lock
loopne
nop
and
repz
loopne
ret
jo
pusha
mov
cmpsl
add
shlb
pop
lock
in
nop
cmp
jmp
iret
inc
pop
je
pusha
mov
mov
xchg
xor
loopne
rcrb
inc
sbb
fists
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
das
scas
adc
mov
xor
subl
mov
shrl
loope
icebp
mov
and
fstp
popa
iret
add
jle
cmpxchg
outsl
rcrl
dec
icebp
mov
mov
insl
fisttps
das
bnd
push
sbb
push
mov
iret
add
fs
iret
fisubl
sub
adc
icebp
jae
sti
pop
or
add
jnp
incb
lods
push
and
roll
mov
push
loopne
jl
add
pop
sti
adc
push
mov
adc
sub
cmp
loope
rcr
and
loope
shrl
incl
cmp
lcall
push
xchg
out
lahf
sarb
or
inc
adc
stc
int3
jb
mov
gs
fildll
jno
rcrb
dec
cmpxchg
pop
rcr
lock
inc
shrl
pop
push
daa
shlb
and
rolb
test
pop
loope
jne
add
cmp
inc
out
push
fistpll
das
push
pop
mov
stc
jg
outsl
sub
dec
lahf
lret
push
jmp
repz
mov
cwtl
or
aam
aad
fmuls
scas
and
loopne
in
push
jmp
adc
mov
movzwl
les
xor
sbb
jo
adcl
and
iret
jno
subl
mov
shrl
loope
icebp
mov
and
push
fbld
jno
subl
mov
shrl
loope
icebp
mov
sbb
mov
in
lods
aas
cmp
sub
stc
pushf
push
sbb
cmp
inc
jne
shl
loop
shlb
cmc
fiadds
jbe
adcl
outsb
xor
push
adc
gs
pop
sahf
std
lret
es
ror
lahf
loopne
rcr
mov
das
xchg
ja,pt
loopne
push
jbe
inc
adc
adc
mov
jnp
test
inc
cmovb
or
ret
mov
mov
fadds
out
out
repnz
sbb
dec
dec
cwtl
adc
int3
ret
adc
xor
jp
jne
lret
divb
xor
mov
jmp
xchg
fiadds
movsl
pop
jmp
inc
sbb
mov
aaa
jmp
cmp
mov
rcll
xor
cmp
cmp
std
mov
xchg
nop
push
ja
inc
sub
mov
test
dec
std
imul
rol
push
arpl
aas
push
mov
and
inc
es
mov
jbe
mov
imul
mov
adc
xor
xchg
dec
xor
and
sub
jno
fwait
lds
inc
cmp
sub
iret
xchg
dec
cli
adc
push
add
daa
out
mov
rcrb
pop
cmc
add
aaa
repz
int3
cmpb
daa
mov
mov
mov
and
mov
xchg
xchg
jbe
pushf
mov
push
xchg
bound
shl
inc
mov
cmpsl
repnz
sbb
mov
cmp
outsb
and
jne
mov
orb
rcrl
insb
lret
sti
pushf
inc
ret
frstor
out
mov
movsl
ja
das
pop
mov
add
ss
jb
pop
pop
sub
mov
pop
ficompl
sub
andb
mov
ljmp
push
sbb
aas
lock
pop
sub
scas
movsb
fwait
xlat
test
ror
or
rcl
mov
negl
adc
jno
shll
push
and
dec
std
mov
mov
aad
nop
mov
popa
cmp
push
jb
jmp
sbb
jae
sbb
bsr
aas
xchg
mov
fnsave
inc
fs
sarl
mov
jg
dec
mov
leave
xor
imul
movsb
imul
sub
insl
xchg
mov
lock
pusha
mov
lret
inc
ljmp
lods
mov
dec
lret
out
or
loop
inc
inc
aad
mul
mov
test
mov
cltd
jmp
sahf
movsl
out
xchg
std
mov
push
imull
setno
mov
int
fwait
icebp
xchg
sub
cmp
inc
push
lahf
test
and
dec
hlt
jmp
in
push
int
adc
ds
adc
sbb
incl
arpl
sub
or
add
insb
inc
and
mov
xchg
sub
testb
cli
xor
and
das
out
xor
sahf
ficoms
sbb
jl
sbb
mov
stos
stc
bound
mov
lods
cmp
sbb
mov
ss
jbe
jns
mov
insb
add
fildl
sbbl
dec
out
xor
in
arpl
push
ljmp
dec
xchg
testl
mov
mov
mov
mov
movss
sbb
adc
and
jnp
imul
cmpsl
sbb
mov
out
push
add
cmp
mov
or
insl
out
jno
mov
or
loope
rcr
int
jo
rcrb
in
lcall
aaa
lock
cmp
mov
shl
cld
push
in
push
dec
rcl
jl
stos
cs
bound
loope
jp
mov
aad
sbb
pop
cmp
inc
or
mov
pop
mov
test
mov
dec
sahf
rcl
cmp
xchg
fwait
aam
inc
pop
ljmp
jns
mov
mov
adc
int
punpckldq
scas
xchg
jle
daa
aas
inc
dec
dec
loopne
int
in
movsb
xor
or
push
and
dec
sahf
stos
jge
insb
aam
ljmp
add
fs
mov
xchg
fisubl
xchg
mov
mov
scas
pop
stos
push
in
jg
sbb
cwtl
in
xchg
shrb
and
pushf
cmp
rol
or
lahf
lods
mov
jbe
sub
mov
mov
pop
je
cld
dec
jns
add
push
loope
xchg
test
and
xor
add
shlb
sahf
fcomip
adc
shl
or
cli
loop
sbb
movsl
adc
lahf
and
sti
add
scas
xor
pop
add
idivl
add
mov
xchg
jge
sbb
mov
and
dec
lahf
xor
dec
inc
lods
fisubrl
mov
movsb
mov
pop
sub
jge
mulb
cmp
lods
dec
inc
jmp
add
rorl
iret
cmp
and
js
sub
ret
mov
add
pop
pop
xchg
xor
outsl
mov
or
leave
push
xor
pop
clc
aas
xchg
and
dec
es
xchg
mov
pushf
sahf
outsl
inc
cli
int3
mov
andb
xchg
xchg
scas
std
mov
xchg
dec
inc
add
sbb
xchg
mov
ds
adc
lea
js
out
and
add
xor
lds
jge
cmp
std
mov
pusha
mov
repz
push
fsubrl
dec
in
mov
or
mov
lret
mov
xor
jbe
and
adc
jae
adc
push
cmpsl
test
pop
mov
outsb
pushf
adc
add
stc
stc
test
pushf
es
xchg
je
ds
out
pop
dec
leave
mov
cmpsl
push
push
add
out
dec
and
hlt
ljmp
mov
shll
pop
mov
sub
mov
jp
sahf
fadds
lea
fsubrs
or
fidivl
out
mov
xor
out
inc
mov
repnz
ds
mov
das
inc
push
add
cwtl
movsb
mov
movb
mov
xchg
in
fsubr
js
or
lahf
sub
push
push
mov
push
fmul
or
pusha
inc
adc
add
imul
fcmovu
jp
mov
ljmp
orb
notb
ss
es
lock
xchg
movl
cmp
xchg
imul
jns
xor
sbbl
inc
jb
mov
and
pop
rorl
sub
insl
icebp
and
dec
mov
or
add
cmp
outsl
stc
mov
jne
daa
jns
jl
adc
jbe
bound
mov
sub
push
in
dec
pop
inc
xchg
sub
add
xchg
push
inc
jp
cld
lods
subl
enter
fldcw
mov
ret
sarl
cmc
mov
sub
fwait
push
pop
lods
enter
dec
dec
pop
adc
push
int3
stc
mov
in
mov
imul
cmp
pop
mov
or
mov
into
sahf
add
sub
out
orl
inc
jge
loopne
jp
cmpsl
lds
xlat
and
add
jmp
ss
push
and
outsb
pushf
push
and
dec
pop
push
xor
leave
fld
push
clc
test
mov
jae
adc
sbb
push
cmp
inc
push
and
adc
in
push
xchg
fs
aaa
std
sbb
hlt
sub
inc
int3
xor
cmpsl
mov
push
mov
sbbb
insb
cmp
adc
jno
in
mov
inc
or
mov
dec
push
pop
mov
jns
or
lock
mul
imul
scas
ja
add
fildll
shrb
and
push
into
jmp
sub
movsl
cmp
jae
js
dec
inc
mov
je
popa
mov
xchg
xor
mov
sti
cmp
aam
ss
stos
mov
or
cmp
bnd
mov
mov
iret
xor
and
jp
or
dec
xchg
insb
pop
inc
dec
cmp
cmp
xor
fisubrl
push
mov
pusha
int
add
lcall
insb
cmp
das
xchg
xchg
scas
icebp
and
rcrb
or
xchg
inc
xchg
stos
add
fidivrl
cmp
icebp
imul
pop
sub
cmp
mov
je
out
lods
mov
aam
adc
lods
sub
jg
rorb
shll
cltd
sub
std
cmc
fdivs
stos
push
pop
pop
mov
add
sub
mov
mov
and
ds
mov
cld
mov
mov
mov
in
jge
fmuls
jg
mov
mov
rorb
and
sbb
mov
jecxz
adc
outsb
scas
clc
jg
sub
pusha
mov
jnp
clc
and
xor
inc
sub
stos
out
shll
out
daa
push
cmpsb
jne
lds
int
rorb
and
sub
dec
jmp
dec
push
mov
ljmp
pop
cmp
aas
dec
and
lds
lahf
sarl
or
jmp
sbb
divb
cmp
and
aam
in
sub
jecxz
std
fistps
pop
movsl
cmp
stos
push
mov
pop
or
mov
mov
pop
js
ss
popa
fidivrl
rcl
or
pusha
adc
cmp
sbb
fstl
ljmp
and
fidivrl
push
jnp
gs
loopne
push
mov
cmc
push
sahf
test
xor
sub
dec
xchg
bound
mov
data16
jg
stos
mov
push
dec
cli
pop
dec
das
mov
je
jg
popa
xchg
arpl
nop
mov
lahf
inc
jbe
push
and
adc
pop
inc
push
xlat
sbb
pop
sbb
lods
jnp
lret
cmpsb
xor
test
in
push
cli
subl
mov
adc
popf
movsb
adc
push
cmp
ror
stc
push
lock
xchg
mov
mov
pop
xchg
adc
cmp
push
orl
aad
aaa
push
daa
mov
test
lods
xor
dec
push
xor
push
jns
shlb
das
daa
stos
rcr
jae
rol
or
or
ret
jmp
fs
xchg
lret
mov
xor
mov
mov
mov
add
out
mov
mov
or
xchg
fwait
add
ret
fistps
lea
cmp
xlat
mov
jne
or
aas
rol
aad
pop
in
fists
int3
nop
cmp
push
jle
in
push
and
or
pop
lcall
dec
pop
stc
sti
push
or
and
sbb
push
lods
sahf
hlt
jnp
cmp
daa
xchg
fisttps
pop
push
xor
and
scas
gs
mov
movsl
mov
or
stos
push
shlb
popf
decl
inc
push
and
cmp
aas
jae
pop
lods
out
pop
jb
push
adc
imul
inc
cmp
and
add
test
into
jae
mov
mov
xor
adc
and
sub
enter
xor
sti
stos
add
popf
stos
xor
lods
sbb
adc
push
aad
mov
xchg
test
scas
lahf
sbb
je
xchg
mov
fs
je
in
push
pop
xor
or
adc
jp
ss
jge
mov
jle
cmpsb
mul
sbb
fcmovnu
insb
das
pop
and
ljmp
lahf
push
sub
xor
aad
sbb
cld
loopne
dec
out
push
das
dec
mov
sbb
aaa
push
cwtl
dec
sub
out
mov
mov
push
inc
adc
inc
dec
and
push
xchg
fdiv
shll
xchg
xchg
push
gs
test
adc
cmc
jle
in
inc
scas
lret
pop
jmp
lret
mov
sub
lods
jns
xchg
mov
mov
lcall
cmpsb
cmc
dec
mov
mov
and
nop
sub
les
xor
mov
push
out
mov
cld
xchg
fucomp
lret
xor
aas
and
inc
dec
and
inc
mov
hlt
and
mov
and
push
pop
test
outsl
mov
divl
sub
mov
ljmp
shrl
dec
ret
pop
mov
xchg
cmc
int3
lea
call
sbb
inc
jg
std
scas
bound
or
cmp
or
inc
or
mov
cwtl
pusha
mov
sub
sbb
hlt
shrb
ds
sarl
dec
mov
sbb
or
xor
cmpsl
test
mov
pop
into
out
in
hlt
pop
divl
lret
inc
add
dec
mov
subb
cld
mov
mulb
lds
sub
pop
adc
mov
dec
push
rclb
shll
pop
enter
sti
cmpsb
add
test
ljmp
lea
insl
pushf
arpl
lret
sbb
fwait
or
rorl
mov
sub
and
lods
sbb
repz
bound
int
push
cmp
mov
adc
xchg
cmc
and
ljmp
xchg
hlt
sti
mov
fsubl
loopne
int
lea
insb
xchg
outsb
data16
fistps
hlt
cmp
data16
shrb
dec
or
imul
push
xor
mov
sbb
cmc
mov
mov
movsl
es
adc
stc
test
xor
push
push
call
data16
lcall
jnp
adc
push
xchg
mov
jae
pushf
or
mov
imul
scas
push
je
movsb
shlb
outsb
scas
cld
cltd
and
daa
dec
out
add
mov
adc
mov
jg
xchg
xchg
clc
clc
xor
bound
jle
fwait
mov
sub
jne
cld
jl
in
pop
mov
jbe
mov
test
fnstsw
xchg
sbb
or
aad
adc
xlat
sub
mov
dec
imul
sub
xchg
outsb
mov
in
in
ficoml
dec
mov
mov
insb
dec
sbb
call
sahf
jnp
sub
mov
mov
test
sbbl
push
sub
jg
shll
test
cmpl
pop
loop
add
dec
out
aas
scas
pop
test
cmp
in
push
mov
clc
xchg
pop
leave
mov
adc
xchg
xor
pop
mov
arpl
enter
cmp
add
je
push
or
popa
aad
xchg
jb
lds
popa
or
or
popa
inc
popa
mov
mov
fucomip
xchg
test
aad
push
into
sbb
and
in
cmp
pop
mov
jp
sub
adc
adc
adc
jle
sub
sub
cmc
or
sbb
scas
pop
lcall
pop
rolb
fdivrl
mov
inc
sarb
imul
mov
mov
enter
cwtl
add
xor
xor
inc
jl
das
sti
add
xor
xor
shrl
fstps
mov
js
sbb
test
loopne
mov
aad
jnp
stos
push
push
push
aam
xor
loope
and
xor
loop
pop
rorl
data16
in
rcrb
sbb
jp
mov
cmp
jae
cs
mov
adc
jne
push
aam
mov
sbb
mov
mov
out
inc
jbe
pop
xchg
cmp
shr
jge
mov
cmpsb
mov
push
fsubs
data16
shlb
and
mov
adcb
test
lods
push
jmp
scas
pop
fisttpll
rorl
std
lahf
ret
cmp
push
sar
xchg
jmp
mov
popa
cmp
inc
or
xorl
and
repz
or
pop
fbstp
mov
shrl
in
out
test
jg
mov
mov
lcall
js
xchg
xchg
push
das
imul
sahf
sbb
cltd
fbstp
fcoml
out
xchg
fldenv
jl
loop
fists
lret
adc
div
and
lock
cmpsl
jl
pop
sub
jae
fwait
testb
xchg
pop
movsb
cmp
mov
jno
pop
outsb
ljmp
jno
xchg
ret
mov
shlb
mov
in
mov
push
mov
xchg
xchg
insl
or
add
xchg
ljmp
insb
repz
loopne
out
cwtl
push
test
xchg
adc
scas
mov
push
repz
push
aas
mov
into
lds
cmc
movb
std
push
jle
fs
adc
arpl
xchg
pop
sub
repnz
icebp
jmp
xor
xchg
and
inc
ret
xchg
subl
repz
mov
std
xchg
aas
mov
xlat
std
pop
push
stos
rcrb
daa
push
shrb
adc
mov
push
mov
nop
or
mov
out
and
cwtl
ret
dec
mov
movsl
mov
jg
add
ja
adc
fwait
jle
mov
fs
sti
dec
fidivrs
jmp
push
mov
lds
pop
punpckldq
dec
dec
inc
inc
dec
fisubrs
in
arpl
cmpsb
jp
push
xchg
xor
cwtl
pusha
aam
dec
pop
shr
lcall
mov
ret
mov
inc
pop
lock
xchg
jg
ret
call
pop
loopne
int3
mov
fsubrs
rcl
dec
push
jnp
shlb
push
movsb
sbb
jmp
jmp
jecxz
pusha
ss
inc
lea
lods
insl
fcompl
call
push
enter
in
les
scas
stc
or
lock
jne
sbb
jne
popf
push
and
jo
test
cli
adc
in
rol
rorl
dec
lcall
bnd
push
sub
mov
femms
push
mov
cmp
inc
push
cwtl
jne
inc
xchg
or
and
out
sub
and
or
mov
stos
hlt
xchg
in
jnp
push
xor
sub
or
sbb
repnz
scas
fs
sbb
add
sub
rclb
stos
div
or
stos
push
rcll
jmp
inc
sbb
cmpsb
fsub
push
inc
cmp
out
sahf
rorl
adc
inc
add
and
mov
into
inc
xor
scas
push
cmp
add
cmpsb
pop
and
xchg
daa
adc
aam
mov
jmp
xor
xlat
cmp
dec
shlb
inc
pop
cmp
xchg
mov
ret
popa
push
xchg
sub
jmp
dec
mov
mov
shrb
mov
dec
dec
es
cmpsl
ror
in
mov
push
ljmp
fld
pop
mov
mov
in
fidivrl
and
pop
iret
xchg
lret
push
lods
out
fcmovnbe
sbb
or
sti
jnp
mov
scas
popf
cmp
add
jae
orb
stos
adc
mov
and
bound
pop
movl
aam
popf
xlat
fistpl
add
rclb
xor
fsubrs
push
roll
repnz
cmc
sbb
push
gs
jne
shlb
or
int
jnp
inc
adc
repz
xchg
cmpsb
and
mov
dec
mov
cmpsl
mov
adcl
cmp
xorl
adc
popf
push
mov
inc
pop
xorl
jnp
xchg
aas
cmp
sub
mov
in
lods
fstl
int3
pushf
jb
push
clc
cmp
inc
xorb
mov
imul
xchg
pop
xchg
sbb
mov
jecxz
and
or
add
repnz
rcll
incl
jp
jmp
test
and
les
data16
je
dec
mov
adc
lock
mov
shl
lcall
pop
cmc
setns
fimuls
jns
push
and
les
mov
popf
fucomp
inc
mov
push
jecxz
push
lds
cmpsb
test
pop
rcll
dec
loope
mov
shlb
inc
mov
mov
lahf
push
js
aam
aas
fsts
xor
dec
bound
std
jge
inc
ss
out
mov
and
jge
jp
cmpsb
std
mov
fs
das
jg
jns
xor
imul
arpl
in
decl
fdivr
inc
iret
dec
sub
jecxz
scas
push
bound
gs
mov
pop
lock
fbstp
cltd
movsl
cmc
mov
push
mov
push
lods
add
nop
xchg
push
inc
out
loope
rorl
sub
jnp
lcall
frstor
xchg
and
cwtl
fwait
and
and
mov
in
ljmp
adc
pop
leave
xlat
popf
punpcklwd
test
mov
cld
xor
shl
jp
inc
loopne
nop
sahf
ja
hlt
outsb
or
push
les
pop
xorl
incl
push
fbld
jno
subl
mov
shrl
loope
icebp
mov
and
push
fbld
jno
subl
mov
shrl
loope
icebp
mov
pop
xor
inc
out
stc
fbld
jno
pop
das
xchg
pop
mov
outsl
rcrl
dec
icebp
mov
and
push
iret
jno
jle
cmp
dec
out
mov
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
or
pusha
sub
adc
insl
xchg
rol
repnz
ror
std
mov
or
adc
dec
xor
adc
xchg
mov
or
dec
sbb
js
or
dec
sub
insl
rcrb
xchg
int3
mov
xchg
leave
sahf
and
inc
cmp
push
sub
add
sub
clc
cmp
in
jl
mov
dec
int
jo
jo
xlat
pop
dec
shlb
sbb
aas
jb
test
leave
sub
xlat
add
std
sub
add
push
mov
int
mov
cmp
lret
aas
add
enter
js
push
sbbb
nop
adc
adc
xchg
in
test
lock
lock
sub
mov
and
xor
bound
shl
loopne
cmp
pop
adc
sub
mov
das
mov
fimuls
inc
loope
push
fstl
clc
nop
sbb
ja
add
dec
xor
insl
leave
popf
fmuls
mov
cwtl
int
std
mov
dec
adc
cmp
xor
dec
cmp
mov
cld
sahf
in
aad
lds
adc
xor
pop
adc
or
shl
out
xchg
enter
int3
shrb
inc
adc
jae
dec
xor
insl
rcrb
loopne
nop
fldl
in
push
sbb
pusha
sub
xor
insl
rcrb
loopne
nop
fldl
in
push
sbb
or
aas
sub
bnd
je
push
push
std
xlat
enter
dec
mov
mov
int
test
test
fimull
stc
movl
call
jae
sub
mov
mov
mov
popf
pop
insb
jle
std
mov
enter
pop
adc
add
mov
std
dec
mov
pop
adc
mov
fidivl
xor
subl
mov
pop
pop
ret
pusha
or
popa
jl
prefetchwt1
pop
iret
das
lock
andl
ja
cmovp
xlat
pop
mov
cmp
xchg
jo
les
jge
ret
xchg
xchg
sahf
testl
aas
cli
push
ss
popa
push
rcrl
mov
xchg
add
sarb
in
test
in
lea
sbb
faddl
cmpsl
or
sub
nop
cwtl
and
je
jg
ficompl
sub
imul
mov
lcall
dec
testl
add
mov
idiv
cwtl
add
mov
cmp
mov
xor
cld
out
adc
adc
and
mov
shl
mov
es
sbb
test
popf
pop
inc
add
daa
push
sti
xchg
into
daa
add
jo
gs
inc
mov
inc
xchg
ja
es
sub
mov
outsl
adc
inc
and
leave
test
nop
jmp
inc
push
mov
push
lcall
push
lock
add
cmpsl
sub
cmpsl
fwait
mov
dec
aas
xor
jo
push
add
sub
cltd
outsl
inc
dec
mov
cmp
fwait
xchg
loop
push
xor
nop
and
sub
push
ss
lods
mov
test
testb
das
and
dec
sbb
movsl
mov
dec
mov
dec
sbb
loope
and
lock
ficomps
test
fucom
insb
pop
std
jmp
pop
cmp
dec
ror
xor
cmp
xor
nop
stc
cmpsb
add
xor
bound
sbb
lods
repnz
hlt
or
fisubs
sbb
or
dec
and
cli
inc
dec
pop
fldenv
incb
sub
jns
out
xor
mov
xchg
pop
push
std
push
stos
notb
xlat
cltd
fmul
sub
or
rcrl
flds
adc
mov
jno
ret
outsb
and
dec
into
lahf
imul
outsl
mov
cmp
xchg
mov
xchg
dec
outsl
push
xchg
ja
xor
sti
xchg
outsb
pusha
adc
inc
cmp
adc
aad
fildll
xor
test
roll
loope
or
pop
xchg
mov
shr
sbb
mov
sbb
add
outsl
and
cmpsb
pop
and
adc
aad
jno
cmp
sbb
adc
imul
ljmp
pop
iret
mov
daa
jge
add
mov
dec
dec
stos
adc
push
sbb
shlb
les
aad
out
rclb
dec
movsb
out
sahf
or
mov
jg
mov
clc
and
sbb
inc
jbe
sahf
xchg
and
push
xor
cmpsb
out
js
or
sbb
clc
mov
xchg
iret
push
imul
daa
jnp
fwait
test
or
stc
mov
adc
xchg
bound
loopne
mov
jbe
mov
leave
sarl
xor
xor
cmc
ljmp
in
rcr
js
sub
out
add
repz
fdivs
and
dec
call
jle
cwtl
sbb
xor
dec
add
xor
sbb
fucomip
and
lret
lods
xor
cmpsl
sub
test
decl
call
jge
dec
repz
jmp
fwait
cmp
leave
or
dec
fnstsw
xchg
mov
scas
int3
test
pop
mov
cwtl
lock
sub
xchg
mov
sub
sub
jns
sub
stc
push
push
jnp
iret
and
mov
and
lret
sub
add
loopne
pop
or
xchg
out
mov
icebp
scas
inc
jo
clc
pop
scas
inc
xchg
xchg
mov
loope
out
push
push
fstl
ss
mov
push
sbb
sbb
lock
test
mov
shlb
arpl
xor
push
jecxz
les
mov
aam
jns
or
ror
cli
in
shl
pop
scas
and
push
pop
out
cld
mov
add
popf
iret
mov
js
pop
fs
repz
mov
data16
sbb
sub
mov
mov
fwait
lret
and
mov
and
test
out
sahf
lret
push
push
mov
mov
mov
data16
mov
cmp
and
pop
fcoms
xchg
inc
imul
inc
add
mov
and
cmpsl
shr
push
jae
push
inc
sub
mov
push
dec
sbb
inc
push
arpl
rorb
stos
aaa
shlb
mov
mov
arpl
or
xchg
pop
bndstx
shl
adc
dec
and
dec
and
jo
rcll
inc
mov
in
ret
into
mov
mov
jnp
insl
enter
leave
push
fwait
test
mov
aaa
aam
fs
adc
cli
and
lods
movsl
jae
inc
out
nop
jb
or
leave
push
pushf
add
ret
mov
push
cli
std
je
shrl
mov
mov
push
xchg
push
aad
mov
mov
jnp
mov
nop
pop
fadd
fwait
inc
inc
scas
mov
sbb
cmc
sbb
pop
cld
negl
xor
in
jmp
cmp
cltd
add
sub
cmp
inc
add
cmp
insl
adc
mov
test
and
pushf
out
enter
jbe
jb
lret
cmpsb
sti
rcr
pop
dec
jmp
movaps
cmp
leave
js
addr16
js
dec
fs
test
in
lods
orb
insl
stos
movsb
push
rolb
imul
sbb
fadds
cmpsb
call
imul
mov
pop
in
jle
jae
mov
ljmp
stos
jbe
mov
jge
and
cltd
add
mov
cs
mull
fcomp
inc
push
sbb
cld
cltd
neg
shr
das
xor
scas
mov
adc
push
dec
mov
jns
mov
push
sub
mov
outsl
syscall
out
scas
loop
in
and
mov
in
outsb
mov
and
push
roll
popf
shl
in
sbb
mov
and
ret
mov
sahf
jl
pushf
subb
out
sub
movl
dec
fptan
arpl
mov
mov
das
cs
aad
mov
in
out
adc
out
jns
mov
imul
jg
or
test
and
subb
jge
sub
outsb
in
lcall
rcl
mov
leave
xor
cmpsb
push
bound
mov
imulb
aaa
dec
std
mov
dec
into
jg
sbbb
mov
fidivrl
pop
sbb
jno
and
and
out
sub
cmp
fmull
out
fwait
mov
clc
mov
mov
mov
mov
in
das
dec
out
lret
mov
out
pop
inc
shlb
ror
and
pop
movsl
loopne
movsl
and
ljmp
pop
add
fcmovne
stc
in
and
jns
pop
out
jne
in
dec
test
dec
cmp
pop
fiaddl
idivb
fisttps
call
inc
in
and
aas
mov
pop
enter
hlt
sub
xchg
jmp
lcall
mov
jl
stos
mov
jb
adc
pop
mov
call
subl
fwait
pop
mov
cli
push
mov
call
or
in
adc
adc
cmp
mov
pop
jmp
test
repz
and
fstl
pushf
sti
inc
xor
scas
test
and
addr16
loopne
pusha
jle
ds
rcrb
jle
jle
push
inc
lods
es
fcmovb
in
push
out
std
jmp
fxch
dec
push
imull
in
pop
jmp
arpl
int
movsb
shll
mov
or
adc
sbb
nop
sbb
outsb
shrb
or
clc
sub
loop
add
lret
xchg
adc
inc
hlt
sub
and
xor
pop
outsb
adc
xlat
xchg
and
xor
mov
pusha
jbe
call
push
xor
es
xchg
das
xchg
ds
hlt
repz
dec
cmp
and
scas
dec
xchg
les
dec
add
mov
inc
push
add
mov
ficoms
movsb
ffree
sti
xor
std
jns
clc
imul
or
dec
fistl
fwait
mov
ja
mov
sbb
jl
notb
scas
pop
and
sub
xchg
out
push
pop
jno
stc
dec
pop
or
or
fdivrl
mov
dec
enter
mov
cld
mov
jmp
sbb
sub
sub
mov
push
aam
mov
push
add
and
cmpsb
lret
imull
int3
rcl
cld
push
jnp
fsubp
pop
lret
pop
fistpl
dec
loope
mov
in
fstps
inc
addr16
into
pop
lods
push
out
dec
add
jl
fcoms
mov
cwtl
lods
cmp
add
popf
and
and
pop
sub
fldt
je
sbb
enter
scas
jecxz
rcl
shll
mov
lea
cwtl
int
or
and
pop
xchg
lock
pushf
popa
push
pop
lea
xchg
xor
or
add
pop
movsb
scas
out
push
pushf
fcmove
adc
xchg
data16
cmp
fs
scas
push
sub
xor
mov
inc
mov
mov
add
add
movsb
dec
adc
js
loopne
out
mov
xchg
gs
jg
hlt
mov
out
mov
sub
xchg
xor
ja
jp
dec
and
mov
mov
push
stos
jmp
test
fwait
mov
fwait
pop
arpl
push
stos
jg
mov
movsl
call
xchg
xor
mov
push
arpl
cld
sbb
add
inc
data16
insb
xchg
ss
pusha
popa
mov
decl
pop
call
loop
sbb
and
dec
cmp
test
and
or
xchg
es
dec
aad
fldenv
xor
mov
pop
and
cmc
ficompl
sub
fistl
jb
popl
in
out
inc
inc
gs
vfnmadd213pd
push
dec
aaa
and
inc
xchg
lods
jmp
sbb
loop
push
setge
pop
xor
ja
pop
and
dec
dec
pop
mov
xchg
punpckhdq
fsts
jmp
jl
cwtl
push
orb
mov
sub
cmp
lea
sub
stc
test
lcall
loop
idivb
sbb
mov
cmp
test
xor
mov
jne
dec
fisttps
mov
lods
bound
icebp
js
adcb
iret
jbe
out
xchg
sub
push
mov
shrl
scas
xor
lods
enter
sbb
outsl
pushf
je
add
dec
mov
push
and
les
sti
std
pushf
rcrl
insb
cltd
into
or
arpl
and
push
dec
mov
lock
xchg
xchg
jns
imul
ss
and
pop
push
add
ret
jne
cmp
and
push
mov
or
mov
lret
ret
stc
daa
cli
in
jo
fisttpl
jg
dec
out
insl
and
popf
mov
cs
cmp
xchg
or
pusha
stos
les
push
sub
push
xlat
pop
fdivl
and
sub
loope
jne
scas
je
adc
xchg
lods
cmpb
rcll
std
inc
sub
pop
push
jp
dec
add
jg
or
mov
adc
pop
xlat
xlat
sbb
fadds
movsb
imul
pushl
and
or
je
fsubrs
inc
lcall
push
xor
sub
hlt
shrb
imul
in
fwait
sub
out
lock
jge
loope
outsl
push
in
sub
mov
or
xor
mov
fldt
subb
loope
js
pop
rclb
ds
movsl
cmpsb
cltd
push
repnz
out
push
push
push
sbb
leave
sbb
sbb
jecxz
sub
sbb
or
mov
xchg
mov
leave
sub
add
cmp
ja
adc
fnstsw
dec
jmp
dec
loopne
es
mov
cmp
cmp
ret
mov
dec
and
ss
sub
aas
test
cmpsb
xor
test
jmp
inc
cmc
push
mov
pop
loope
jae
pop
out
imul
ret
test
fs
imulb
dec
add
mov
xor
xor
leave
out
daa
add
push
xchg
aaa
clc
fstpl
js
je
or
inc
mov
dec
push
bound
in
inc
stc
outsb
popf
enter
and
in
shl
mov
cli
xchg
lds
xor
arpl
mov
test
pop
rclb
ds
loope
mov
cltd
js
or
rcrl
loop,pt
push
cmp
fsts
mov
sbb
inc
jo
sub
sahf
int
js
mov
call
add
jae
pop
inc
shlb
cwtl
push
mov
mov
sub
fsubs
or
ljmp
jmp
insb
iret
out
sub
cli
faddl
add
je
sbb
add
sub
mov
jp
std
mov
push
xor
mov
inc
adc
mov
jne
mov
sbb
mov
push
in
aad
adc
adc
push
jp
jecxz
push
add
or
or
pop
shrl
dec
enter
repnz
aaa
jl
jo
sbb
icebp
jb
sub
lret
iret
out
cmp
cmpl
mov
pushf
popf
mov
cmp
rclb
inc
jp
cmpl
mov
enter
jae
cmp
ror
test
ss
out
mov
xchg
fcoml
xlat
out
xorb
mov
hlt
mov
inc
push
add
sbbl
loop
ret
add
jbe
lcall
pop
add
out
fwait
xchg
xchg
xlat
and
xchg
cmp
les
scas
pushf
sub
pop
push
loope
sbb
fiaddl
lcall
cmp
adc
cli
pop
outsb
dec
mov
jmp
adc
test
cli
cli
push
and
fsubl
js
adc
js
and
loope
aas
pop
jmp
pop
insb
pop
shll
xchg
outsb
or
or
clc
mov
sarb
and
push
lods
aad
pop
adc
sbb
dec
lret
adc
dec
nop
insl
mov
mov
sub
popf
mov
mov
in
and
mov
loopne
ret
dec
sbb
xchg
imul
adc
cli
push
mov
xor
mov
loopne
fwait
push
mov
add
daa
rol
lods
js
adc
je
int
xchg
clc
arpl
or
pop
lahf
xchg
fists
cs
pop
fisttpll
add
xor
int
aaa
or
ds
shlb
adc
xor
dec
xchg
jmp
and
and
or
sarb
fs
ljmp
ljmp
movsl
das
arpl
or
sub
dec
jmp
or
sti
lods
int3
mov
imul
mov
dec
in
loope
inc
sahf
xchg
adc
push
mov
inc
movsb
push
mov
frstor
sbb
pushf
popa
fsts
out
ffree
or
stc
adc
push
xor
cli
addr16
insl
popa
inc
loope
cmp
pop
rcrb
loopne
mov
and
and
fincstp
pop
out
stc
sub
in
imul
lea
mov
cmp
sbb
push
rcr
dec
mov
in
or
fdivrs
es
dec
mov
inc
sbb
movsb
jae
mov
rcll
lret
clc
dec
aas
sub
push
mov
fcoms
mov
xchg
add
xorb
push
ret
mov
xor
mov
lea
sub
jb
stos
cmp
add
mov
xor
iret
jo
aam
pop
jl
rclb
jge
push
fdivs
xchg
fbstp
lcall
and
xchg
dec
sahf
mov
push
pushf
sahf
cwtl
push
cmc
and
test
xor
pop
jb
mov
cmp
xchg
sahf
test
jp
test
xor
push
adc
orl
imul
pop
imulb
iret
pop
popf
add
popf
push
add
scas
push
sub
ja
test
sbb
fldl
call
pop
jge
lret
jecxz
aam
xchg
cli
push
xchg
fcoms
enter
mov
fsubl
popf
jge
mull
xlat
inc
scas
rcrb
shll
sub
stc
fsubs
cltd
outsl
pop
mov
jo
lea
test
pop
pop
andl
movsl
cwtl
xor
pop
jmp
aad
push
dec
test
dec
int3
stos
xchg
out
imul
aam
and
je
insb
dec
lea
jl
mov
dec
sub
mov
mov
xchg
xchg
clc
pusha
mov
sbb
repnz
dec
es
lds
int
fisubl
jne
clc
popf
push
cmpl
bound
sbb
push
fpatan
jg
push
jb
lahf
ret
or
sti
aam
rorb
leave
cmp
mov
xchg
shlb
xchg
flds
adc
adc
shlb
add
popa
xchg
jmp
or
arpl
xchg
daa
mov
jae
pop
sbb
xchg
inc
or
mov
jno
jecxz
in
pop
xor
shl
pop
loopne
push
movsl
pmaddwd
mov
in
xorb
xchg
sub
mov
dec
sub
cmp
test
jnp
xor
lods
test
fnop
out
inc
mov
insl
jno
mov
orps
sub
cmp
fcompl
sub
xchg
ret
sbb
cltd
sub
outsl
cwtl
mov
nop
hlt
es
cmp
dec
adc
mov
xchg
xchg
pop
jne
daa
mov
outsb
int
arpl
mov
repz
fdecstp
mov
lret
sti
lock
mov
rcrl
std
jle
lods
loopne
inc
pop
sub
pop
iret
rcrb
mov
dec
outsb
mov
xchg
fstps
loopne
lods
cmc
mov
push
aaa
ja
loope
js
xor
call
push
shl
mov
test
adc
pop
mov
pop
add
jo
les
and
aad
jne
mov
jns
jmp
mov
pop
pop
mov
cmpsb
adc
xchg
mov
xchg
std
sub
shlb
jno
out
adc
loop
jne
jp
rsqrtps
scas
push
test
and
push
jmp
dec
rcrl
fiadds
outsl
cmpsb
jmp
push
cmpsl
xchg
xor
push
and
push
cld
pop
jp
mov
pop
das
mov
pop
sbb
sbb
mov
jl
lahf
out
loope
xchg
fstpl
and
sub
test
popa
cli
in
mov
pop
pushf
mov
dec
mov
xor
add
mov
or
shrl
inc
xchg
push
mov
jle
mov
pop
pusha
mov
jns
scas
xor
cmp
dec
in
cmp
mov
sub
imul
cmpsl
xor
xor
stc
aaa
pop
mov
lods
jl
dec
inc
inc
inc
sub
sbb
lret
repnz
mov
push
clc
mov
pop
ss
mov
in
les
pushf
dec
jnp
repz
test
push
rcrb
xlat
xor
sbb
sub
cmp
cltd
xchg
cmp
mov
and
cli
xor
or
aad
ret
mov
movsb
leave
cs
clc
dec
xor
add
jno
mov
mov
rcr
push
push
pop
add
sti
lret
imul
lcall
notl
in
popf
jbe
sub
test
or
mov
mov
jb
imul
push
imul
in
test
mov
push
out
jle
into
push
cs
jo
jl
jnp
sub
inc
mov
insl
loop
scas
xchg
or
ffree
cltd
fdivrs
into
adc
adc
xor
add
and
mov
gs
jo
mov
adc
jne
cwtl
or
pop
clc
dec
insb
insl
negl
mov
jp
dec
add
xorb
rcrl
dec
adc
xor
aaa
add
stos
fists
dec
and
jns
or
in
cltd
push
xchg
cmpsb
mov
fadds
xor
insl
cmpl
push
scas
cmp
hlt
push
dec
mov
ja
or
adc
dec
xor
insl
rcrb
loopne
nop
fldl
in
push
sbb
pusha
sub
xor
insl
rcrb
loopne
nop
fldl
in
push
sbb
pusha
sub
xor
insl
rcrb
loopne
nop
fldl
fs
pusha
sub
mov
mov
daa
pop
mov
or
dec
add
clc
cmp
sub
sbb
or
aaa
movsl
dec
aaa
pop
mov
cmp
sub
sbb
sbb
lahf
cmp
sub
jns
imul
cwtl
dec
mov
sub
sbb
or
inc
cmp
sub
adc
movsl
jns
imul
cld
cs
mov
push
mov
fisttpl
insb
mov
pop
mov
push
add
mov
jo
pushf
pop
prefetchwt1
cmp
cmp
dec
test
roll
ret
lea
mov
jmp
hlt
cwtl
add
lret
jb
ljmp
mov
dec
jbe
push
outsb
aad
push
aaa
add
ds
pop
inc
js
imul
push
fistps
or
jmp
or
add
out
sti
out
add
repnz
pop
inc
call
mov
sub
jecxz
pop
sub
jbe
fisubl
inc
loop
sarl
lods
shr
mov
mov
mov
sbb
or
shrl
pop
sub
test
jae
and
sub
or
scas
pop
mov
aam
lds
jnp
cmp
dec
lea
jb
outsb
lods
mov
mov
push
stos
push
cmp
sub
push
fisubs
fdivrl
fistpl
xor
inc
pushf
inc
jg
mov
xchg
jl
jno
dec
stos
imul
cltd
dec
mov
stc
sub
sbb
or
sti
cmp
sub
sbb
or
pop
mov
mov
dec
mov
stc
sub
sbb
or
sti
cmp
sbb
into
je
inc
ljmp
cwtl
mov
jmp
pop
cmpsb
lcall
fwait
loope
pop
adc
ljmp
loop
pop
imul
aam
sti
jbe
sub
ds
cmp
mov
orl
pop
cmpsb
testl
ds
pop
cld
xlat
testb
ret
mov
sbb
sub
push
lahf
imul
push
jmp
aam
lock
lods
testl
and
or
out
push
push
jp
movsb
test
setge
jl
cmp
cmpsb
cltd
stos
das
add
call
stos
and
out
jnp
das
or
push
aam
and
addr16
lock
jnp
aam
cwtl
adc
dec
push
jp
hlt
mov
push
jbe
pop
popa
pop
or
dec
pop
push
dec
jg
or
shlb
xchg
pop
rclb
push
sbb
pop
and
scas
jbe
cmp
push
roll
sub
scas
int
mov
loop
ud1
xchg
add
addl
stos
cld
mov
adc
je
dec
jno
sbb
add
inc
call
and
fdivl
mov
lods
push
cmp
lret
rcll
shlb
xchg
insb
out
xchg
mov
pop
nop
addr16
cmp
sbb
xchg
scas
jnp
adc
scas
test
and
imul
rcrb
pop
addr16
popf
dec
xchg
push
icebp
mov
lret
gs
sbb
xchg
mov
int
jg
mov
filds
into
jge
inc
scas
xlat
arpl
cmpl
ss
movsb
das
push
das
mov
xor
mov
orl
scas
or
jno
xchg
bound
cmpsb
test
fsub
mov
and
dec
inc
clc
stc
dec
mov
gs
aaa
in
push
cmc
mov
out
iret
dec
xor
popf
movsb
jle
shlb
movsb
or
ss
stos
mov
loope
fcmovnbe
dec
or
shrl
in
and
imul
mov
pop
mov
enter
push
test
jnp
out
mov
in
in
out
or
stos
pusha
mov
mov
icebp
cmp
jno
xchg
pop
jnp
and
cmpsb
adc
push
adc
and
jae
scas
dec
cmp
add
div
jl
les
xor
loop
outsl
jo
and
in
out
fistps
or
loope
mov
movsb
jo
or
xchg
fucom
push
xchg
shll
je
call
imul
pop
jg
jo
xchg
xchg
mov
sub
dec
sbb
fwait
jb
arpl
mov
ds
fmul
inc
pop
xchg
insl
mov
lods
and
dec
in
fisttpll
loop
arpl
sbb
lods
mov
push
dec
rorb
and
mov
dec
jg
popl
fs
movsb
inc
xor
cltd
aas
sub
mov
rcll
fists
fldcw
mov
inc
outsl
testl
shrl
rorb
into
pop
out
cmc
test
dec
fcoms
scas
pushf
or
sub
sbb
shrb
sbb
out
inc
sbb
dec
mov
mov
rorl
cmp
xor
cmpsb
mov
cmpsb
repnz
add
adc
fwait
std
mov
pop
out
popf
push
and
mov
jl
push
ljmp
mov
test
push
into
negl
and
dec
jb
mov
ss
xchg
add
pop
or
aad
adc
ljmp
mov
add
and
and
push
mov
scas
repz
push
or
jb
xorl
pop
popf
jo
xor
push
mov
les
push
fnstsw
jae
cmp
cmp
test
cmp
or
cmpsb
push
cmc
jecxz
test
add
int
frstor
inc
push
add
scas
insb
mov
mov
into
lods
int3
pop
incl
mov
xor
pop
subb
std
jno
in
popf
fcompl
sbb
adc
das
dec
or
jmp
fwait
or
dec
cwtl
in
arpl
xchg
xchg
ficoms
mov
xlat
or
lods
pop
mov
lcall
push
aad
sub
jns
pop
mov
push
aas
in
popa
arpl
es
xchg
sbb
popl
loop
mov
inc
mov
and
lret
and
rorb
sub
sbb
push
dec
dec
pop
xchg
jg
ja
scas
mov
cmp
inc
fdiv
sbb
or
mov
cmpsb
popf
cmp
hlt
mov
inc
les
and
and
int3
cwtl
call
stos
addb
lret
dec
lcall
leave
popa
leave
mov
testl
icebp
mov
jp
or
loope
adc
pop
dec
insb
adc
mul
mov
sti
fildll
sub
iret
dec
dec
rorb
test
lahf
mov
les
inc
push
cmpsl
std
xchg
outsl
mov
shr
lods
notb
mov
mov
shlb
lret
in
push
and
cmpsb
cmpsl
pop
jg
sub
imul
stos
sub
bnd
sub
cmc
gs
inc
or
stc
movsl
daa
inc
mov
adc
fwait
cmp
dec
mov
stos
into
call
popf
inc
push
sbb
adc
out
mov
in
fwait
imul
repnz
add
mov
pop
test
aam
pop
jb
xor
push
fwait
mov
fstp
daa
stos
gs
ljmp
push
jge
data16
shl
mov
mov
jnp
push
outsb
out
cwtl
mov
and
pop
xchg
cmp
and
repz
sbb
jecxz
inc
pop
in
cmp
xor
je
mov
adc
fwait
mov
dec
push
rorl
add
mov
int3
cli
cmpsb
lods
cltd
sbb
test
data16
rclb
into
lahf
xchg
les
imul
dec
xor
aas
mov
imul
mov
sbb
or
mov
lods
pop
pop
mov
push
mov
cmovl
loop
xlat
inc
pop
xchg
sub
das
inc
mov
popa
nop
arpl
or
jle
and
stc
dec
fnstcw
xlat
pop
lahf
pushf
int
rorl
stos
test
mov
es
scas
cwtl
andb
cld
jle
pop
enter
fwait
jnp
std
addr16
xchg
xlat
jmp
out
xor
mov
rcll
xchg
cld
sbb
mov
ds
pusha
sub
ret
notb
mov
mov
xor
or
inc
out
xor
sub
xor
mov
jp
and
imul
jns
sub
lock
pop
adc
cld
ficomps
jp
fidivrl
cmp
and
cmp
ss
cmp
repnz
sbb
mov
push
xchg
mov
rcrb
xchg
jnp
sbb
and
or
aam
sub
mov
test
lret
mov
fdivrl
and
dec
hlt
push
add
inc
loop
mov
stos
fwait
pusha
mov
mov
outsl
out
jae
adc
aaa
xor
jnp
push
in
in
rcrl
jne
jbe
inc
stc
xlat
movsl
push
cs
adc
and
loopne
and
scas
imul
mov
out
sahf
stc
mov
subl
xchg
push
or
outsb
push
or
in
adc
in
push
jle
pop
into
sbb
in
iret
pushf
mov
push
sub
mov
test
mov
or
loop
std
jmp
mov
test
sub
scas
int3
call
repz
rorl
imul
pop
shll
push
lcall
repnz
aad
out
xor
push
jns
mov
ffreep
js
inc
push
sahf
add
xchg
arpl
stos
dec
push
push
adc
imulb
or
imul
jg
xor
inc
fildll
leave
bound
jae
jae
mov
xlat
mov
mov
stc
js
lea
lcall
jle
jmp
mov
adc
pop
push
pop
push
out
into
lcall
adc
bound
test
out
fidivs
cmp
adc
cmp
push
stos
jl
jno
shl
lods
std
sub
sub
jo
inc
rorl
inc
outsl
sub
add
or
inc
pop
add
mov
lret
pushf
mov
insb
dec
pop
dec
int3
pop
or
pop
rcll
fmull
sub
jp
mov
cmpsl
fbstp
jp
pop
push
sbb
int
inc
lds
mov
jecxz
cmp
pop
lock
mov
inc
xor
jb
into
cmp
subb
fildll
fistpl
movsl
gs
ret
sub
cmp
in
jmp
cli
cld
stos
or
or
push
pop
scas
pop
mov
lahf
pusha
mov
rorb
xchg
movsl
sti
negb
pcmpgtd
lcall
outsl
in
aad
pop
popf
lcall
mov
mov
cmp
pop
sbb
push
mov
iret
xchg
cmp
adc
bound
or
aad
cmp
or
cmpsl
adc
sub
cmp
fiaddl
pop
mov
leave
mov
test
loope
lcall
adc
in
mov
sub
pop
clc
xchg
scas
mov
cltd
mov
push
mov
jbe
cwtl
lea
int
jno
repz
in
xchg
movsl
pop
push
sub
pop
xor
mov
fistl
mov
into
xchg
lcall
dec
add
icebp
cmpsb
ret
lea
movsb
add
repnz
dec
repz
mov
rolb
popa
roll
roll
clc
push
xor
push
pop
mov
jle
aas
push
dec
aas
mov
dec
scas
cmp
jno
lret
push
sbbl
test
jl
popa
xchg
adc
pop
xchg
mov
push
inc
idivl
ds
lock
pop
jmp
je
xchg
fldenv
shl
jle
movsl
out
shlb
lcall
mov
xchg
jns
stos
cmp
ss
pop
jecxz
xchg
fsubl
cmp
xchg
mov
add
adc
out
in
and
std
icebp
or
fcomps
or
ds
mov
icebp
mov
cmp
pop
adc
decl
arpl
call
push
out
addr16
sub
sub
and
mov
imul
stos
es
jno
xlat
mov
sbb
outsb
sub
or
cmc
mov
insl
adc
cmpsl
mov
outsl
mov
out
adc
adc
dec
jg
fistps
in
fstpl
lret
das
das
mov
test
ret
in
mov
sbb
xchg
sub
add
lcall
dec
sub
mov
int
repz
sarl
imul
add
and
jbe
xchg
sbb
pop
insb
ss
lcall
push
cs
std
xchg
push
aaa
xchg
js
push
das
mov
cs
clc
mov
jns
notl
cmp
or
mov
pusha
jb
vmread
sub
addr16
outsl
loope
adc
xchg
popa
add
idivb
inc
lods
mov
sti
stos
les
adc
ds
push
inc
cmpb
mov
cmp
xor
hlt
cmp
mov
add
push
cs
fldcw
ss
les
inc
aas
loop
xor
inc
fstl
push
jg
jbe
gs
rorb
pop
xchg
dec
and
mov
test
fidivl
adc
dec
xor
sub
adc
cmp
adc
xor
ja
leave
loope
movsl
cmp
lock
jo
int
mov
cmc
sub
test
out
pop
xchg
add
shll
mov
and
popa
xchg
lahf
insl
mov
fnsave
cmpsb
and
sti
addr16
mov
pop
movsl
xchg
add
push
xor
mov
popl
mov
pop
xchg
xor
push
sub
jecxz
and
mov
and
jmp
outsb
xchg
out
inc
js
jb
in
addb
mov
sub
imul
sub
mov
inc
aas
jle
sbb
and
por
loopne
sub
ljmp
jns
mov
mov
lret
iret
sti
dec
lcall
mov
dec
jl
in
in
mov
xchg
sub
int
jb
xor
jb
fcompl
ret
inc
fisubrs
inc
pop
aam
repz
and
mov
add
dec
pop
mov
mov
lods
push
jb
fucomi
or
nop
test
mov
push
loop
sub
sbb
xchg
pop
cs
dec
jmp
test
mov
fimuls
mov
xor
dec
shll
mov
sti
or
cmp
dec
sbb
in
sbb
cmpsb
call
ds
or
or
add
je
pop
cmp
pop
shrb
aad
addb
jo
push
stos
sbb
mov
or
test
xor
cwtl
test
movsbl
sub
frstor
frstor
pop
insb
cltd
out
out
lods
xlat
mov
imul
shlb
es
xlat
int3
leave
pop
push
inc
stos
mov
test
popa
movsb
jns
jl
jae
xchg
int3
movl
mul
dec
mov
pop
shll
sub
out
mov
insl
pop
imul
lret
push
pop
sbb
jecxz
and
xchg
in
push
dec
fisubl
imul
push
lds
nop
jmp
imul
aaa
push
loope
or
scas
dec
jno
dec
inc
jae
stc
add
jecxz
mov
fisttpl
aam
and
mov
push
out
mov
dec
and
or
and
mov
push
aad
outsb
and
dec
loop
int3
lods
dec
cmp
inc
inc
jae
enter
clc
das
and
xor
inc
dec
and
mov
popf
fs
in
pop
mov
inc
jp
cmpsb
xchg
add
xchg
add
fcmovnu
push
shll
sbb
or
stos
rol
ja
fildl
movaps
adc
stos
jecxz
movsb
inc
lods
jecxz
sub
mov
add
xchg
push
movsl
cmpl
test
cld
jns
iret
mov
insl
xchg
mov
js
mov
cwtl
stc
mov
fcompl
push
adc
lret
add
xor
imul
pushf
push
sub
and
int
nop
add
cld
dec
mov
addr16
xor
insb
push
push
inc
mov
cltd
push
movb
xchg
jmp
inc
shlb
inc
lods
xchg
add
pop
jmp
xchg
popa
imul
lea
push
repnz
pop
add
bound
dec
inc
ds
stc
cld
imul
xor
js
data16
jge
xor
and
inc
test
mov
loope
cltd
aad
adc
dec
cmp
pop
push
pop
cmp
jnp
jo
mov
sti
pop
jae
loope
lods
mov
ficoms
ret
push
lahf
pop
fs
movsb
mov
push
and
repnz
icebp
pop
jbe
add
lea
inc
jge
into
pop
mov
js
es
adc
sub
adc
mov
pop
int
aaa
jecxz
push
scas
shll
sub
popa
rorb
xchg
jno
fildl
or
out
js
lret
sbb
outsl
mov
pop
lcall
mov
repz
aad
repz
or
loopne
pop
xchg
aaa
xlat
movsb
xor
mov
push
int3
popl
mov
imul
xor
jnp
mov
mov
or
lods
add
stc
inc
cmpsb
std
insb
loope
add
rclb
push
jg
sti
jb
jae
das
gs
out
push
pop
mov
scas
or
and
and
or
mov
push
mulb
loop
mov
insb
testl
shll
adcl
inc
dec
jg
mov
mov
push
push
sahf
jae
sti
scas
mov
xor
ret
neg
pop
adc
or
sbb
dec
push
gs
xchg
popf
fs
fstp
mov
push
test
ret
push
xor
jmp
push
xchg
add
jb
hlt
jbe
es
jnp
decl
leave
aas
int
inc
outsb
mov
add
jle
xchg
xor
sbb
mov
shrb
mul
pop
lds
mov
into
and
out
and
sub
nop
or
lahf
pop
mov
fbstp
addr16
popa
mov
aas
mov
pop
insb
cltd
iret
adcl
mov
xchg
xchg
movb
inc
jo
test
xchg
pop
jge
shlb
dec
sti
inc
push
bound
fnstsw
stos
out
xchg
movsb
jnp
jge
in
dec
fistpl
lods
rcr
adc
push
cmp
push
lahf
sub
les
jo
ret
sahf
lcall
out
mov
xor
shl
or
je
mov
mov
outsl
mov
dec
es
fs
jbe
stos
hlt
fsubp
out
sbb
xchg
pop
sub
pop
cmpsb
xchg
xlat
jae
add
inc
mov
insb
leave
inc
sbb
outsb
lcall
mov
cmp
call
gs
inc
cmp
jnp
adc
aas
inc
lret
fdivl
icebp
lret
sub
xchg
or
stos
push
push
nop
push
inc
shlb
push
sahf
or
xlat
xchg
cmp
cld
aaa
movsb
push
adc
mov
aad
mov
mov
popf
aaa
add
test
test
arpl
mov
cmp
aaa
scas
mov
cld
jbe
loopne
mov
inc
pop
bswap
inc
jmp
xchg
push
jno
jbe
push
cli
inc
jns
jg
lahf
cwtl
mov
shrl
imul
mov
jmp
cmp
ret
xchg
aad
xchg
jl
sbb
mov
mov
shrb
push
push
es
inc
imul
je
imul
aaa
les
lods
inc
mov
mov
pop
shl
pop
add
add
cmp
inc
jae
inc
add
xchg
add
pop
loope
inc
push
pop
jg
mov
arpl
ja
repz
mov
and
cmpsb
adc
mov
pushf
push
cmp
pop
jne
mov
leave
out
xchg
xchg
iret
xor
mov
dec
xchg
mov
push
arpl
xchg
mov
movsb
lcall
cmpsb
sub
js
mov
ror
cmc
lock
fidivl
xchg
xchg
outsb
ret
adc
in
loop
mov
cwtl
test
pop
enter
lods
cld
and
sub
nop
jne
decb
mov
daa
fnstsw
mov
push
les
div
xchg
insl
bswap
xor
aam
jmp
in
sbb
inc
mov
ljmp
pop
adc
loope
adc
mov
inc
jg
lock
std
inc
stc
push
push
jo
mov
fnsave
iret
fstpt
cld
pushf
std
jno
xlat
in
inc
inc
mulps
arpl
test
test
dec
test
jne
sub
stc
adc
data16
mov
mov
adcl
xchg
sti
movsl
in
sub
jo
or
xchg
add
pop
fisubrs
xor
enter
xchg
pop
mov
sub
addr16
jg
and
cmp
cmp
das
shrb
icebp
xchg
std
add
dec
xchg
out
lods
jg
jle
stos
jg
add
aaa
mov
xchg
push
das
subb
lahf
jmp
sbb
and
int3
jb
mov
shll
out
xchg
adc
movsb
rcrl
rorl
sbb
pop
add
ja
jmp
mov
repnz
xor
push
jno
add
jne
or
inc
imul
sub
push
lcall
ljmp
bound
push
adc
mov
sbb
pop
or
cltd
ret
xchg
pop
jecxz
adc
out
push
cmpsl
mov
mov
cmpl
jns
dec
test
push
push
mov
test
fs
rorl
jne
adc
mov
sbb
mov
js
int3
cmc
mov
stos
jns
mov
pusha
loope
inc
fidivs
jno
testb
push
out
psraw
sbb
push
mov
lods
and
sub
daa
sbb
push
movsb
shlb
fistpll
ja
lods
addb
hlt
xorb
jbe
jnp
xlat
sbbb
inc
test
icebp
jl
jle
in
iret
cmp
aam
xchg
lods
push
sbb
mov
rcrw
pusha
lret
cs
or
aad
sub
stos
imul
cltd
dec
mov
stc
sub
sbb
or
sti
cmp
sub
sbb
or
pop
mov
mov
dec
mov
stc
sub
sbb
or
sti
cmp
sub
jns
imul
cltd
dec
mov
stc
cmp
sbb
jecxz
out
cmp
or
pop
or
icebp
cltd
dec
decb
push
in
hlt
add
xor
adc
xor
add
jb
out
push
lock
add
xor
pusha
shlb
xorb
inc
mov
jb
loopne
lock
add
xor
pusha
shlb
sbbb
add
aaa
mov
inc
je
jno
and
pop
rorl
pop
add
lods
mov
xchg
pop
jmp
in
in
and
hlt
int
inc
jno
sbb
cmp
sbb
xchg
pop
rorb
ljmp
adc
xchg
das
cs
test
mov
xor
mov
add
aaa
subb
scas
loop
pop
jo
jo
sbb
push
nop
sbb
popf
sbb
xchg
pop
movsl
pop
int
mov
sti
inc
or
cmp
nop
bound
pop
lods
lock
cmp
call
jnp
xchg
outsl
les
aad
push
add
add
andl
mov
mov
inc
repnz
loop
shlb
xorb
and
jb
loopne
lock
jae
data16
jbe
and
pushf
hlt
xchg
lock
cmc
push
sarl
inc
inc
adc
add
mov
and
movsl
xor
push
fnsave
insl
aaa
adc
adc
adc
data16
push
out
repnz
loop
shlb
xorb
and
jb
loopne
lock
add
xor
pusha
shlb
xorb
and
jb
loopne
lock
add
dec
lds
lods
out
add
rolb
lahf
mov
jmp
and
js
cmp
stos
outsl
xor
mov
cmpb
test
and
jl
lock
xchg
stc
movsl
jmp
repz
sbb
popf
inc
in
jl
int
loope
xlat
les
dec
repz
jmp
mov
jge
mov
pop
lods
fwait
and
testb
push
or
lock
ljmp
imul
push
fldcw
loop
arpl
jae
dec
pop
je
pop
movsb
fnstsw
in
push
arpl
out
inc
stc
fdivs
idiv
dec
push
lds
push
mov
test
in
in
sub
jo
int
and
sti
ret
scas
ja
push
lahf
and
test
push
xchg
push
mov
popf
mov
rorl
sub
setbe
xchg
push
aad
test
pop
js
pop
idivb
adc
sub
je
fistps
stos
repz
or
in
dec
movsb
mov
repz
stos
pop
out
aam
add
mov
add
and
xor
jge
push
pop
push
cmp
cmpsl
xchg
out
fisubl
test
push
xorl
lds
xlat
xchg
rolb
jle
xchg
shll
outsl
sti
mov
or
mov
icebp
test
fs
jns
arpl
adc
dec
les
sub
xchg
jp
stos
add
shll
mov
js
lea
loop
inc
add
push
jge
js
rcll
pop
enter
jns
lds
lock
add
scas
mov
lods
pop
bnd
repnz
mov
int
inc
and
hlt
sarl
xor
mov
add
ljmp
dec
mov
xor
lret
jne
mov
lods
aad
xchg
and
jno
adc
mov
movsb
xchg
lds
leave
pushf
cli
adc
incb
lcall
inc
mov
cli
dec
dec
js
pop
pop
or
jb
xchg
pop
and
inc
cwtl
jne
stos
sti
pop
outsl
adc
addl
add
je
pop
inc
sub
jne
insl
jb
iret
mul
xchg
addr16
arpl
test
inc
mov
jl
lcall
adc
add
jns
jle
shrd
jg
and
adc
adc
repnz
in
cmp
repz
dec
adc
fs
popf
cwtl
inc
and
sub
push
xchg
out
or
cmp
adc
add
lahf
mov
xor
jmp
mov
aam
add
cmp
stc
pop
xor
scas
loope
daa
xor
scas
mov
dec
cmp
mov
push
outsl
cmc
xchg
push
or
pushf
mov
sbb
stos
insl
fidivrl
int
cmpsl
jb
and
xchg
sub
ja
or
es
cmp
xlat
and
mov
cld
fsubrl
stos
or
int3
sub
push
in
push
stos
popa
out
xchg
adc
lea
inc
les
adc
dec
popa
ds
sbbb
fstp
mov
or
aaa
pop
in
xor
shlb
les
push
pusha
or
shlb
in
jo
mov
pop
mov
jecxz
shlb
in
mov
in
testl
pusha
fwait
stos
mov
sti
adcl
mov
mov
test
fsub
jle
out
jnp
push
addr16
cmp
pop
inc
mov
lahf
xor
mov
insl
data16
cmp
mov
mov
xchg
cmp
and
sarb
mov
ds
pop
pop
adc
sbb
ds
add
dec
mov
loope
fsts
xorb
dec
inc
push
adc
pusha
mov
ljmp
mov
aaa
or
jbe
inc
cmpsb
std
jp
outsb
mov
aam
and
subl
pop
stos
cltd
inc
fbstp
loopne
sarl
aad
test
mov
pop
loope
out
jb
sbb
cmp
popf
xor
jge
jmp
mov
std
mov
pop
jle
jg
add
test
daa
icebp
inc
cwtl
xchg
shll
addr16
add
sbb
cld
ds
repz
sbb
push
mov
cs
or
out
out
jmp
xor
and
pop
gs
jmp
hlt
mov
lods
rol
xchg
cmp
ror
mov
fwait
mov
dec
xchg
mov
mov
ucomiss
mov
xchg
dec
pop
in
test
dec
rolb
sbb
mov
jmp
dec
inc
cwtl
pop
mov
insl
pusha
ss
xor
mov
in
sbb
mov
popf
ljmp
add
cmp
outsb
jl
ljmp
sbbl
sub
dec
dec
iret
jmp
xchg
pop
mov
cmp
inc
stos
mov
shrw
push
pop
or
and
pop
inc
in
enter
repz
cmp
xor
int3
or
sbb
out
cmpsl
idivl
mov
mov
scas
and
fs
or
mov
mov
in
push
mov
adc
ds
inc
dec
sbb
fstl
jns
adc
ret
pusha
lret
arpl
jne
adc
aam
sbb
stc
jp
mov
pop
jns
jl
lret
hlt
xor
in
inc
jmp
jmp
stc
dec
jge
push
adc
ds
jne
pop
mov
xor
jecxz
lock
lods
insl
ret
shr
stc
negb
lret
fmull
jbe
mov
dec
hlt
arpl
cmc
in
cmpsl
aad
mov
cmp
fdivs
arpl
pop
mov
sbb
push
xor
jmp
pop
iret
add
jl,pt
mulb
popa
stc
xor
jo
inc
inc
loop
adc
rol
cs
sub
shr
add
popf
ret
sarb
and
lea
ds
mov
mov
sbbl
dec
pop
sbb
cmp
sbb
sbb
lret
mov
jae
pop
sub
sbb
sbb
xor
test
imul
cs
push
add
or
aam
lea
je
fmull
inc
andl
pop
andl
bound
ds
xchg
div
test
mov
jbe
xor
pop
dec
mov
mov
inc
arpl
fstp
sub
les
jg
jnp
mov
push
jl
push
nop
adc
xchg
mov
imul
lods
out
mov
and
dec
xchg
push
roll
dec
mov
inc
iret
and
cs
out
int
sub
jno
sub
inc
mov
ljmp
fldcw
sti
sub
in
sub
int3
jne
mov
sub
inc
pop
sbb
mov
mov
or
mov
push
pushf
dec
sbb
ret
sub
push
fisttps
rcr
mov
daa
ret
in
in
cmp
pusha
lea
sahf
addr16
adc
fs
jo
fndisi(8087
gs
das
xorl
sbb
mov
sbbb
xchg
jne
insb
jle
and
cs
add
cwtl
add
xchg
inc
stc
je
scas
stc
test
clc
or
ss
mov
jle
add
mov
into
xchg
test
jae
jecxz
in
mov
xchg
mul
pop
xorl
jns
sbb
push
pop
int3
mov
sahf
bound
stc
pop
movsb
jle
cmovno
fists
scas
daa
cmp
mov
lret
int3
lret
cmpsb
xlat
or
incb
das
test
cmpsl
les
push
je
mov
mov
nop
divb
test
in
mov
stc
insb
mov
stos
or
push
inc
jo
jbe
inc
push
inc
outsl
mov
jns
aad
push
cmp
push
popa
and
sahf
mov
mov
test
lret
fwait
lods
movsl
push
ret
xchg
addr16
pop
subb
outsb
mov
push
inc
mov
cmp
xorl
jp
sbb
and
loopne
push
insb
fdivrl
cmp
rcl
ficompl
fbld
lods
std
mov
addr16
sub
cmp
dec
sbb
cltd
call
push
add
cmpsl
inc
loope
sub
pop
test
push
adc
fs
jae
mov
ret
scas
popf
loope
inc
adc
push
push
cmp
clc
cmp
das
insl
push
jno
push
push
jo
mov
jp
shll
xchg
lods
fs
iret
jne
xchg
push
xor
sbb
and
sbb
sub
data16
les
or
push
out
xor
cmc
aam
sub
sub
scas
push
xchg
lock
push
arpl
xchg
jmp
mov
push
jecxz
or
adc
repnz
js
cmp
cli
lods
and
test
into
adc
xor
popa
mov
shlw
mov
sub
out
jp
in
or
pop
lds
popf
or
mov
jle
test
and
xor
les
push
loope
cmpsb
and
test
shrl
stos
add
insl
inc
imul
fsts
cmp
add
inc
sub
outsl
out
std
gs
stos
xchg
cmp
lods
pop
icebp
push
sbbb
fwait
rorb
dec
in
cmp
xor
mov
xchg
or
out
cmp
in
push
ret
jo
ljmp
or
vcvtdq2pd
cmpsl
xchg
cmp
fcmovbe
loop
jmp
ljmp
xor
push
data16
jae
xor
lcall
pop
jl
pushf
int
ret
out
adc
dec
pop
rol
sti
out
sbb
adc
xchg
and
pop
cli
jbe
cmpsb
mov
mov
push
add
pushf
push
outsb
stc
inc
lcall
call
cwtl
mov
fiadds
jge
push
dec
and
outsl
jno
xchg
pop
cmp
lds
test
ss
or
xor
cmpsl
mov
mov
sub
or
dec
cmp
test
imul
jne
aas
inc
xor
jmp
or
xchg
loop
jg
mov
jge
fstps
rorl
lea
cmp
or
jo
push
aaa
ds
pop
sub
shr
lock
jmp
jge
icebp
mov
sbb
push
loop
hlt
movsb
inc
dec
cmp
insl
push
outsb
sub
jno
inc
push
mov
inc
in
pop
jg
ds
adc
or
jmp
xchg
mov
dec
cmp
or
mov
fs
cs
xchg
jmp
jo
pop
rolb
fcmovne
xchg
aad
xchg
lahf
mov
pop
gs
stos
jne
shrb
mov
sub
cmp
xchg
je
and
cld
jmp
out
mov
cwtl
fstpl
jb
xchg
stos
add
sbb
jns
jg
testl
mov
push
add
inc
xor
xchg
sbbl
lods
pop
lahf
in
popa
popf
rclb
xchg
add
mov
aam
mov
lcall
hlt
aas
mov
push
hlt
mov
int
cli
cltd
adc
jnp
inc
lds
inc
ljmp
dec
push
adc
out
add
fistl
and
inc
lret
stos
in
or
add
add
pusha
cltd
inc
mov
jbe
add
jl
cmpl
subl
fidivrs
ds
add
dec
push
int3
sbb
lret
dec
push
cwtl
scas
mov
mov
ja
divb
cmp
roll
test
js
iret
mov
fdivrp
jecxz
fnstcw
fldcw
rolb
sub
and
and
adc
mov
popf
cmp
pop
js
stc
decb
pop
js
lcall
mov
xchg
mov
iret
jo
ret
xchg
sub
ret
or
mov
sbb
lea
pushl
mov
and
in
adc
test
adc
cmp
insl
movsb
mov
stos
movsl
sarb
shlb
mov
rorl
xchg
sbb
stc
out
mov
out
jg
push
adc
pop
adc
in
dec
imul
and
fcoms
into
inc
lock
jmp
shll
fsubr
outsl
leave
sub
ss
in
inc
outsb
loopne
and
xchg
push
mov
loop
out
push
xor
pop
add
inc
rcr
int
mov
mov
sub
data16
dec
cmp
pop
mov
daa
in
jo
inc
cmpsb
pushfw
sbb
or
loopne
mov
sub
fists
aad
mov
int
jo
inc
cmp
sti
push
stos
addr16
inc
sub
sub
mov
dec
in
mov
and
in
cwtl
mov
jne
fadds
mov
mov
mov
pop
sbb
arpl
and
movsb
call
shr
pop
rorb
mov
inc
test
cld
mov
and
or
stos
out
push
adc
adc
mov
xlat
push
or
mov
out
je
mov
test
mov
mov
and
jg
fisubrs
aad
add
aaa
cmp
cmp
bound
mov
add
mov
mov
mov
push
push
clc
loope
in
clc
cmp
lds
rcr
push
fsubrp
dec
push
mov
dec
scas
shlb
jge
fnsave
dec
ret
std
iret
insl
cmp
sti
mov
or
adc
incb
dec
es
daa
jbe
repnz
jb
mov
outsb
out
popa
out
and
push
dec
arpl
or
mov
aaa
dec
jp
cmp
mov
dec
cld
or
push
test
add
adc
mov
mov
in
pop
mov
mov
rorl
cmp
pop
dec
int3
stc
xor
sub
outsl
pushf
js
mov
sub
push
add
negl
dec
nop
dec
mov
lret
add
fisubrs
lock
sub
and
or
xchg
lods
test
xorl
loop
mov
decl
movsl
adc
cmp
cmp
mov
mov
aas
cmp
pop
imul
inc
add
pop
or
rcl
cmp
cmpsl
pop
cld
int
pop
mov
sarl
push
aaa
jb
repz
mov
out
xchg
aam
or
push
add
popl
mov
lret
xchg
inc
rcrl
mov
or
out
jge
mov
fs
aad
or
push
rcrb
sbb
dec
adc
fildl
and
sub
je
lods
icebp
inc
push
mov
cmc
xchg
pop
mov
test
add
inc
jns
mov
dec
cli
lret
or
mov
jbe
scas
mov
bound
pop
sub
push
jns
aaa
jnp
aad
cld
test
inc
bound
mov
or
sahf
sbb
mov
in
pop
inc
dec
sbb
xor
push
lods
cmp
shl
clc
and
sbb
mov
fcmove
sti
loopne
mov
movswl
enter
fmull
cli
mov
bnd
aad
mov
in
push
icebp
xor
or
mov
fisttpll
cli
mov
cmp
fldl
inc
cmp
xchg
in
xchg
ljmp
mov
es
sub
cmpsl
out
cli
ret
jae
fbld
mov
repz
leave
adc
aad
andb
mov
out
negb
fld
add
push
xlat
mov
push
paddusb
scas
outsb
xchg
ds
dec
adc
jnp
pop
sbb
lods
mov
pop
xchg
subl
enter
sub
addr16
jae
mov
push
leave
sbb
cmovnp
and
mov
jmp
pop
sub
pop
or
or
lret
cmp
mov
test
and
paddusb
xchg
jne
adc
out
jnp
icebp
xchg
push
lret
frstor
jne
rclb
in
sar
lods
repnz
fwait
in
cmp
negb
je
aad
mov
cmpsl
adc
xchg
push
test
inc
std
cmpsl
ja
fildl
into
sti
mov
movsb
inc
iret
sub
mov
and
testb
dec
pop
test
into
daa
or
adc
stos
pop
cmp
call
or
in
and
je
out
loopne
adc
int
sbb
xor
pushf
dec
fs
mov
sub
es
jno
adc
ror
xor
repnz
bound
cmp
les
cli
mov
outsb
xor
int
out
jns
ja
xchg
je
mulb
lock
pminsw
insl
and
xchg
ret
push
not
fists
mov
sbb
adc
testb
das
sub
mov
jb
and
push
lret
mov
ret
mov
ror
jecxz
dec
mov
mov
push
sub
iret
push
lods
pop
jp
frstor
fsubrl
sbb
mov
dec
hlt
xor
dec
roll
sub
sti
addr16
lret
adc
ljmp
pop
ret
adc
stos
loope
stc
mov
inc
mov
jb
xchg
add
sbb
aas
outsb
pop
gs
xchg
push
push
xchg
mov
sbb
xor
push
push
or
es
dec
lods
cmc
jnp
and
insl
add
into
sbb
jnp
xor
in
xor
or
in
addr16
lret
push
lcall
test
sbb
into
jp
mov
push
int
add
or
cmp
bnd
jbe
clc
inc
xchg
push
repnz
adc
into
jbe
aaa
xchg
or
cmc
mulb
subb
lock
mov
fsubl
int
jb
pop
and
mov
jmp
push
leave
inc
push
mov
lret
pusha
bound
out
mov
cmpsl
xor
insb
xor
adc
add
std
shl
les
jno
mov
add
ror
mov
dec
fdivrs
jp
fldl
pop
xchg
adc
popf
dec
jno
scas
test
pop
arpl
popa
test
jle
jl
dec
fiadds
mov
test
jno
jmp
jge
fst
or
cmp
adc
inc
loope
sahf
jbe
mov
test
ss
pop
mov
push
es
jne
inc
mov
xor
mov
dec
nop
jne
xchg
andl
mov
inc
pop
cmp
negl
je,pt
es
mov
scas
cmpsb
out
mov
xchg
je
jnp
rorl
push
and
cltd
add
iret
add
push
outsb
dec
popf
dec
ljmp
loop
inc
repnz
add
lock
sub
sbb
mov
jl
pop
in
xlat
stc
popa
daa
dec
xor
sbb
adc
sti
xor
repz
mov
mov
push
std
outsl
notl
or
xor
push
cltd
mov
inc
jecxz
or
pop
shlb
mov
mov
jo
pop
add
rorl
stc
clc
dec
or
cltd
comiss
test
pop
lcall
mov
lcall
xchg
adc
jmp
jmp
sbbl
jnp
xchg
aad
mov
ljmp
sub
out
sbb
clc
add
mov
mov
out
insb
insl
nop
outsl
mov
mov
fdivp
sub
daa
mov
jae
jecxz
add
ret
clc
or
or
pop
xchg
push
sub
mov
dec
popl
xchg
rorb
xor
lods
in
sbb
data16
mov
mov
inc
xor
xor
sub
or
xor
dec
fcmovne
in
testb
lret
adc
out
js
aam
aaa
test
cltd
inc
sub
lods
jnp
add
dec
or
stos
bound
hlt
push
add
loopne
stc
pushf
and
jg
lret
sbb
bound
sar
icebp
nop
addr16
icebp
or
std
xor
cmp
cmp
negb
dec
mov
pop
gs
fmulp
lods
and
adc
js
inc
or
push
cmp
sbb
sub
push
push
and
dec
jbe
loop
cmp
mov
sbb
lds
mov
sub
inc
repnz
xchg
xor
neg
sub
insb
dec
fistps
aas
mov
sahf
mov
jb
pop
sbb
or
aaa
cmp
cltd
mov
neg
into
push
sub
add
sub
ret
or
test
cmp
push
push
cmp
jne
mov
in
idivb
adc
sub
lock
scas
lods
jbe
pop
xchg
pop
mov
xchg
inc
xor
mov
inc
repnz
loop
shlb
xorb
and
jb
loopne
lock
add
xor
pusha
shlb
xorb
and
jb
loopne
lock
add
xor
pusha
shlb
xorl
shlb
push
lock
add
xor
loopne
lock
outsl
mov
adc
popf
sbb
insb
fs
push
dec
inc
mov
add
int3
mov
test
pop
push
dec
inc
cmp
sub
sbb
or
in
imul
in
hlt
ret
xlat
pushf
je
xchg
mov
dec
push
pop
and
or
push
in
iret
fiadds
cmc
ret
lret
fildl
and
iret
outsl
fldt
jp
pop
outsl
push
rclb
inc
push
xchg
and
push
mov
cltd
mov
lds
les
in
xor
orl
and
bound
call
in
inc
inc
mov
push
test
jl
xchg
push
push
in
dec
or
sbb
xor
cmp
lods
pop
pop
push
mov
sub
loope
shrl
xor
push
inc
cld
add
fstl
lods
sub
pushf
jnp
jnp
test
push
mov
ret
push
cs
add
add
popa
lock
out
rcrl
jne
pop
inc
dec
pop
sub
and
or
hlt
cld
int
frstor
mov
adc
or
cmp
bound
push
js
imul
subl
jmp
xor
inc
push
inc
sub
sbb
pop
push
fsubl
lret
ljmp
add
xor
sub
sbb
or
cld
hlt
in
in
aam
les
mov
push
dec
inc
cmp
sub
sbb
or
cld
hlt
in
in
aam
les
mov
jne
push
push
or
push
test
in
frstor
xor
enter
aam
loop
call
jecxz
or
sbb
sbb
add
or
fucomip
push
popa
pop
loope
pop
shrl
mov
outsl
test
cmc
mov
cmpsl
jne
mov
mov
xchg
dec
es
sub
shrl
inc
xor
nop
fdivl
lahf
mov
enter
and
mov
mov
inc
ss
out
mov
cmp
in
nop
and
aaa
inc
mov
jge
xchg
jecxz
das
cmp
cmpsb
mov
xchg
sub
push
sub
add
ds
jg
pop
jbe
pusha
loopne
push
das
ds
iret
inc
pusha
mov
fwait
cmc
jle
jecxz
sbb
dec
mov
outsb
shll
mov
orl
sub
popa
xorl
jecxz
pop
mov
sub
push
int3
mov
fdivrs
fistps
pop
jbe
and
shrb
mov
pusha
cmp
push
mov
loop
out
int
xchg
rolb
jae
fbstp
std
jbe
scas
xchg
cmp
imul
mov
ss
adc
cmp
jns
or
jl
lret
push
xor
popf
lahf
pop
or
je
lods
dec
push
arpl
push
mov
in
dec
or
jbe
push
notl
pop
add
xor
push
ja
rclb
pop
sub
mov
cmp
pop
adc
jge
clc
ss
loop
movb
andb
loope
mov
ljmp
xor
enter
out
lsl
adc
mov
adc
inc
icebp
aad
inc
xchg
inc
insb
adc
out
jle
mov
or
add
popa
sbb
dec
cld
jne
cmpsb
popf
mov
mov
sbb
mov
mov
sub
daa
xchg
cmc
sahf
fiaddl
push
pusha
cwtl
repnz
dec
lret
xor
inc
fwait
push
dec
out
std
shll
insb
sbb
sbb
ja
inc
lods
popa
add
fwait
pop
mov
dec
pusha
inc
cmp
scas
mov
rcr
and
in
jmp
insb
repnz
push
popa
push
xor
pop
cmp
int3
xor
pop
or
aam
test
jecxz
out
push
mulb
rcll
xchg
pop
insl
xchg
or
mov
mov
xor
add
sbb
in
xor
add
lds
ds
and
int
dec
movsb
mov
arpl
hlt
movsl
loop
xlat
pop
or
and
cmp
xor
popf
or
data16
js
adc
mov
out
jne
inc
fs
addr16
pop
aam
xchg
push
and
pop
nop
xchg
sbb
arpl
mov
sarb
add
shlb
movsb
sbb
pop
ds
and
jnp
cmpsb
push
mov
mov
or
adc
and
or
mov
fistps
shlb
fnstcw
aas
int3
fcomps
jg
and
mov
data16
in
cwtl
or
icebp
cltd
daa
mov
cmp
dec
int3
mov
adc
or
add
jnp
dec
rcrb
or
inc
das
dec
mov
fwait
jl
addr16
or
into
nop
fisttpl
dec
adc
stos
pop
jb
jle
sub
mov
push
int3
roll
arpl
int3
or
push
add
mov
je
fnsave
bound
pop
leave
orb
adc
aas
cltd
xchg
adc
mov
mov
in
xor
pop
inc
inc
movsl
aas
std
enter
jns
xchg
cmp
mov
shrl
mov
clc
stc
rcrb
in
mov
dec
lods
mov
rcr
aad
lret
push
sub
and
int3
mov
push
fsubrs
sar
mov
cmc
xchg
fnsave
add
or
or
pop
cmpsl
loop
jg
out
sbb
xchg
movaps
cmpsl
movsb
sub
pop
lcall
jge
sbb
adc
aam
imul
lea
cmp
imul
or
popf
addr16
and
scas
inc
xchg
negb
or
rol
les
orb
or
add
jg
xor
adc
push
and
pushf
xchg
pusha
loop
in
sahf
adc
push
faddl
sbb
dec
mov
xchg
jnp
jno
mov
dec
mov
cmp
add
xor
repnz
push
lcall
imull
xor
push
les
push
and
fs
test
mov
imul
mov
lret
lea
stc
cmp
sar
jne
jb
jmp
mov
or
roll
mov
jns
iret
addr16
lcall
mov
jb
in
mov
shll
cmp
test
inc
cmp
shlb
addl
lea
push
imul
push
lret
sbb
test
nop
cmp
addr16
inc
mov
xor
pop
dec
push
out
push
repz
adc
mov
xchg
sbb
daa
push
in
sahf
xor
mov
add
sub
xchg
sub
xchg
or
icebp
lret
cmpsb
es
dec
jle
addr16
jb
mov
fnsave
push
or
xorl
lret
xorb
sar
xor
push
push
addl
push
xchg
repz
out
xor
inc
test
in
call
dec
lahf
out
popf
dec
popa
adc
test
add
xor
sub
inc
rclb
call
fadds
xor
and
fwait
lods
mov
sbb
aas
insl
cs
sub
imul
test
jnp
popf
int
mov
imul
pop
add
adc
adc
dec
mov
adc
dec
push
aam
sub
xchg
lahf
and
stos
fisubrs
int3
mov
aas
ret
out
add
je
lret
xchg
enter
call
pop
sub
mov
sub
xchg
jp
cmp
mov
mov
xor
mov
inc
test
scas
cld
in
mov
sub
shr
pop
lea
jmp
lret
push
ljmp
std
inc
mov
jns
loope
loope
aad
adc
pop
es
pop
add
add
gs
add
jbe
enter
mov
cli
xchg
dec
test
incl
jb
lock
cmpsl
mov
call
cmp
push
cmp
loope
pop
nop
cld
scas
in
dec
lahf
cmp
js
mov
push
mov
sbb
mov
pop
cli
shll
sub
popf
dec
cmc
arpl
test
jl
push
ss
sbb
dec
outsl
into
add
out
cmp
pop
test
push
cmp
daa
shr
ret
jnp
mov
jo
jne
fwait
popf
mov
vpsubusb
cmpsl
xor
dec
icebp
sti
jnp
fidivrl
cs
jns
ficomps
jbe
orl
lret
lea
push
xchg
mov
jmp
pop
xor
push
movsb
inc
and
sub
push
popa
cwtl
nop
int3
js
popf
sub
xlat
inc
je
cmpb
shlb
ds
int3
add
add
push
cs
inc
fwait
mov
leave
dec
mov
sti
pop
mov
repnz
add
and
add
sub
repnz
sub
sub
mov
pop
sub
out
sub
push
push
sbb
xchg
sarb
push
dec
lar
jmp
inc
outsb
jp
jle
sbb
sti
test
lcall
mov
repz
call
andb
mov
and
mov
leave
daa
movsb
adc
and
mov
rcll
cmpl
repnz
dec
mov
aaa
cmpsl
inc
xor
push
xor
pop
je
lods
idivl
xor
cs
inc
push
jg
outsb
fsubs
xor
mov
fisubs
sti
mov
pop
dec
xchg
add
out
xchg
stos
xchg
movsb
into
pop
popw
test
mov
add
mov
or
pushf
or
xor
sbb
jb
cs
cwtl
push
mov
cmp
pop
inc
mov
daa
les
je
add
daa
jp
sub
inc
ja
inc
in
cwtl
stc
lret
sahf
shll
mov
mov
les
lea
or
scas
hlt
and
sbb
jle
inc
push
ficoml
xlat
imul
jp
push
js
jp
fists
mov
adc
add
pop
push
sbb
fildll
scas
sub
sub
stos
cwtl
mov
jnp
adc
push
pop
inc
push
leave
inc
jge
xor
cs
ret
jo
add
sbb
les
insb
and
jnp
push
xor
outsl
insl
push
inc
mov
loop
mov
stos
cmp
loop
mov
add
into
ficompl
inc
pop
stc
bound
jnp
mov
ficompl
dec
xor
mov
xor
adc
jbe
leave
scas
into
cmp
notl
xchg
mov
push
adc
cli
scas
movsl
or
out
jecxz
repnz
inc
fstpl
xchg
xchg
mov
jnp
jne
fisubs
nop
orl
fisubrs
test
xchg
mov
out
xchg
and
int
push
or
fwait
add
mov
sub
into
movsl
and
mov
sub
cmp
iret
mov
movsl
aam
xchg
cltd
adc
mov
orb
cmpsl
pop
repz
push
nop
addl
mov
cs
aad
aam
adc
fwait
in
inc
push
fstpt
push
nop
or
ret
rcl
sarb
cmp
mov
ret
nop
dec
data16
push
enter
xchg
pop
lea
shl
jp
jle
cmc
repz
das
mov
and
sbb
inc
and
sbb
inc
scas
and
sbb
jp
mov
incb
mov
adc
push
popf
aam
xor
mov
mov
rol
dec
cmpb
dec
xor
lret
add
scas
xor
std
xor
outsl
jmp
iret
mov
sbb
adc
jecxz
cmpsw
jnp
mov
fisttpll
sub
xchg
std
popf
push
das
pop
dec
clc
mov
popa
imul
sbb
mov
sub
jle,pt
nop
xor
adc
cmp
adc
sub
ja
sbb
mov
call
daa
test
xor
sbb
inc
aam
xor
and
dec
jb
add
lret
xchg
aam
dec
mov
fidivrs
lahf
xchg
pop
mov
sub
push
popa
sbb
mov
dec
adc
cwtl
out
pop
mov
ror
dec
xchg
bnd
cmp
push
fisttpl
test
ljmp
out
push
sbb
mov
in
dec
mov
daa
cmpsl
push
mov
mov
xor
push
hlt
adc
xor
mov
jecxz
push
es
loope
mov
dec
pushf
mov
jnp
dec
cltd
xchg
mov
mov
sbb
out
je
pusha
ret
jno
lahf
sub
xchg
lods
dec
lods
hlt
aad
je
jp
push
imul
push
dec
jg
test
mov
xchg
and
jmp
pushf
cmp
in
cmp
inc
clc
push
addr16
cmp
notb
dec
adc
xchg
sbb
adcb
sbb
cwtl
sbb
xchg
xor
xorl
or
cmpb
mov
ja
xchg
dec
pop
add
xor
inc
sbbb
insb
lods
mov
push
inc
pop
xor
xchg
int3
push
xorb
leave
sbb
aas
or
mov
mov
sbb
mov
pushf
push
cld
mov
enter
pushf
fxch
into
cmp
dec
arpl
fisubrl
and
dec
sub
insl
mov
outsb
or
cmp
jl
inc
xchg
pop
pop
dec
mov
or
sbb
std
ret
sbb
sub
xchg
mov
jecxz
fs
cltd
cmp
in
add
out
cmp
pop
xchg
cs
and
imul
xchg
ljmp
test
in
cmp
iret
scas
adc
mov
mov
outsb
int
adc
and
fcoml
jp
call
or
pop
hlt
or
jmp
sbbb
loop
loop
cmp
jbe
jno
pushf
lds
xchg
jg
dec
pop
mov
lret
pop
dec
inc
rcrb
scas
xor
and
imul
das
push
pusha
cmpsb
xorl
jno
dec
call
dec
lods
lcall
dec
and
aaa
xor
xchg
push
rcll
add
cmp
nop
cld
sub
mov
ja,pn
ja
out
lods
repnz
or
testb
sub
lods
mov
pop
jmp
dec
pop
in
mov
mov
dec
dec
rorb
rcl
imul
movsb
sbb
mov
or
ret
movsl
dec
xor
ljmp
xchg
push
ja
xor
outsb
xchg
lods
mov
push
out
mov
loop
cmp
cwtl
sbb
cmp
pushf
or
inc
mov
rcl
and
sbb
pop
mov
sub
pop
cmp
xchg
or
cmp
sbb
jbe
mov
lea
aaa
cmpsl
int
push
fsts
sarl
insb
and
push
pop
fisubrs
and
and
fdivr
outsl
arpl
xchg
dec
int3
xor
dec
push
loopne
or
pop
sub
mov
pop
int
sub
arpl
popa
imul
cmp
sub
lock
xchg
cld
jecxz
xchg
fdiv
push
and
inc
inc
dec
lods
aad
cmpsl
lret
sahf
jp
arpl
pop
or
out
out
push
mov
aad
adc
and
pop
fsincos
shlb
sbb
jo
aas
aam
cmp
lds
pusha
jp
jb
sbb
inc
movsb
ja
push
pop
rorl
dec
shrb
xchg
addl
dec
or
pmaxsw
push
push
cmc
cmp
pop
jl
fnstsw
adc
cltd
mov
rorb
stos
pop
cmpsl
fcmovnbe
fmuls
add
xor
fsts
mov
in
icebp
xor
xchg
scas
pop
cmc
sub
clc
lods
imul
inc
arpl
inc
sbb
pop
icebp
scas
jo
cmp
mov
outsl
sbb
ret
sub
cld
nop
sub
push
mov
adc
cmp
xchg
or
in
in
push
and
lds
mov
lods
lcall
sub
or
sub
add
or
mov
mov
loopne
inc
fisubrs
ffreep
rcrb
iret
adc
xchg
arpl
or
jo
cmp
xchg
out
lock
xor
and
repz
cmp
fsubl
dec
call
cmp
stos
xchg
fnstcw
dec
lds
mov
repz
gs
das
xchg
bound
int3
fcmovne
sub
addb
mov
push
mov
imulb
inc
out
fistps
push
pop
shll
push
out
push
outsl
cmc
mov
sub
fsubs
call
test
rol
int3
xor
mov
mov
fsubr
loope
mov
js
adc
inc
lcall
pop
les
sub
sbb
mov
push
js
pop
inc
fcompl
call
outsl
outsl
lea
jnp
movsb
cld
fidivrl
jecxz
push
test
jmp
lret
pushf
imul
aad
div
test
mov
xor
sub
pop
mov
mov
ds
cmpsl
cmp
fimuls
lods
sub
aas
xchg
xor
out
fcmovb
pop
in
inc
jmp
sbb
sub
jae
pop
sarb
mov
test
out
lods
mov
cmpsb
sbb
sub
add
mov
shll
pop
inc
icebp
ret
imul
sbb
sub
imul
mov
pop
inc
jbe
adc
lret
xorb
pop
mov
push
cmp
or
rsm
out
mov
cmp
js
rcr
push
fists
cmp
call
xchg
xor
xor
in
xchg
movsb
xchg
sub
sbb
cmp
sbb
aam
sub
daa
int
adc
mov
daa
adc
push
cmp
mov
pop
pusha
mov
orl
mov
add
movsb
mov
hlt
js
push
mov
aad
pop
mov
aam
adc
dec
out
pop
rolb
lret
mov
jns
popf
sbb
cmp
push
movsl
inc
xchg
bound
pop
inc
or
and
jmp
lret
loope
stos
sbb
adc
scas
pop
jmp
and
mov
xchg
sbbb
ss
fdivr
mov
dec
fdivs
xchg
mov
mov
pusha
adc
aad
into
sub
push
sbb
sub
ja
mov
aad
insl
push
dec
inc
in
inc
and
divl
imul
mov
xor
cmp
ds
mov
andb
cmp
into
jne
push
sbb
test
push
fwait
push
shlb
stos
pop
add
cs
cs
aad
or
push
in
push
hlt
rol
in
jo
stos
inc
mov
shll
pushl
imul
push
lret
pusha
xchg
jmp
jg
mov
mov
xchg
push
ret
cmpsb
xor
loopne
adc
dec
sti
test
dec
xchg
ficoms
mov
addb
pop
or
adc
into
and
int
push
fwait
pop
inc
mov
or
insw
nop
jg
mov
adc
shl
cli
in
outsb
cs
push
mov
shl
mov
cmp
and
dec
sub
pop
jne
sub
fisttps
fisttps
or
pop
add
mov
insl
leave
mov
cmp
or
or
mov
shl
adc
jns
mov
mov
xchg
mov
push
aam
push
mov
xchg
push
push
es
lods
mov
jmp
pushf
in
xchg
addr16
lods
jno
ja
pop
xchg
rol
push
mov
push
das
pop
ja
imul
push
pop
cwtl
fsubrl
dec
cmp
shl
or
and
push
jno
jg
daa
mov
mov
in
xchg
fwait
stos
test
pop
push
sub
push
iret
jbe
pop
xchg
sub
add
divl
pop
mov
lds
popl
pop
mov
sbb
pop
test
nop
xchg
cmc
jbe
lret
add
ret
and
cs
and
mov
daa
mov
sub
cwtl
imul
cmc
repz
stc
stos
dec
cltd
es
inc
pop
jecxz
cwtl
mov
sahf
adc
lock
adc
lret
xor
dec
or
inc
mov
cmc
push
mov
jno
ret
pop
stos
inc
lock
sub
enter
adc
into
inc
lods
add
mov
fbld
sbb
add
inc
rorl
cmp
lret
sbb
stos
dec
mov
sar
and
adc
mov
jl
mov
dec
insl
int
imul
cltd
pop
cld
and
and
jno
sahf
push
inc
call
fstpl
cli
mov
push
stos
push
push
inc
pop
cmpsb
adc
mov
jle
bound
push
push
xchg
pop
ret
popf
adc
arpl
mov
inc
mov
cmp
out
fnstcw
jb
outsl
outsl
inc
ret
inc
loop
mov
mov
sti
loop
mov
pushf
scas
std
stos
fstps
jno
push
les
sbb
xchg
add
sub
pop
arpl
pop
dec
lret
pop
mov
ljmp
sub
call
and
xor
cmpsb
hlt
in
pop
lods
rclb
fs
imul
sub
insb
stos
xor
mov
xor
jg
je
and
jne
cmp
cmp
jecxz
into
mov
ljmp
cwtl
jbe
sti
ret
lret
lea
mov
dec
jo
inc
sbb
sbb
movsb
das
aad
hlt
push
adc
xorl
in
sub
test
or
aaa
fcmovne
mov
or
out
xchg
push
sub
in
push
fs
ja
leave
pop
inc
and
or
push
xchg
mov
sub
cs
cmc
fildl
not
xchg
and
dec
dec
shrb
jecxz
insl
pop
jle
ss
cmpsl
mov
cmp
iret
inc
cmp
sbb
cltd
cs
mov
cwtl
inc
mov
imul
and
test
fidivl
jbe
push
mov
test
daa
mov
sbb
sahf
sarb
aad
mov
push
rorl
pop
inc
cltd
or
sub
inc
and
dec
inc
cmp
sub
sbb
or
cld
hlt
in
in
aam
les
mov
push
dec
inc
cmp
sub
sbb
or
cld
hlt
in
in
aam
les
mov
push
dec
inc
cmp
sub
sbb
or
cld
hlt
in
in
aam
lds
mov
push
dec
inc
ds
and
adc
add
hlt
adc
aam
mov
cmp
pop
arpl
jnp
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
scas
iret
mov
jmp
fisttpl
cs
aas
pop
push
outsl
pop
jg
movd
das
pop
aas
scas
iret
mov
out
lahf
into
scas
fidivrs
push
outsl
push
jg
movd
dec
das
pop
aas
scas
iret
mov
out
lahf
into
scas
fidivrs
bound
push
jg
pop
adc
dec
xor
icebp
iret
fisubrl
daa
dec
jne
lds
or
or
pop
movsb
pop
mul
xor
add
ja
pusha
xor
mov
jle
iret
jg
sbb
rol
fidivl
xchg
fmuls
ds
push
mov
sub
pop
ds
xor
jmp
mov
dec
inc
fsubrp
mov
xchg
je
xchg
pop
ds
int
imul
push
pop
and
popa
add
push
fwait
jmp
mov
sbbl
dec
inc
daa
dec
out
adc
pushf
inc
fidivrs
jns
into
dec
icebp
imul
ds
cmp
aas
iret
mov
out
lahf
into
scas
fidivrs
push
outsl
push
jg
movd
dec
das
pop
jns
mov
idivl
stos
lret
and
push
add
outsl
bound
sub
mov
xchg
jmp
repnz
ljmp
dec
or
or
push
adc
adc
pop
sub
lahf
mov
mov
scas
fidivrs
push
outsl
push
jg
movd
dec
das
pop
aas
scas
iret
mov
out
lahf
into
scas
fidivrs
push
outsl
push
jg
movd
dec
das
pop
aas
scas
iret
fwait
lret
mov
adc
mov
push
setnp
and
dec
sahf
ficoms
ret
push
dec
mull
hlt
dec
mov
repnz
mov
ss
sub
rolb
idiv
mov
fistl
arpl
lock
out
lods
jmp
mul
add
cmp
jnp
jge
fdiv
into
cld
add
das
dec
pop
mov
push
adc
mov
scas
imul
xor
push
push
jno
xlat
push
cmpsl
mov
jl
mov
adc
int3
mov
dec
sub
sub
fwait
lods
fisttps
cmp
push
inc
sti
mov
inc
mov
push
fmul
mov
mov
mov
dec
nop
sub
negl
xor
sub
clc
cmp
mov
out
ss
call
ja
aam
or
mov
mov
fimull
iret
addr16
cmpsl
cmc
in
push
xchg
insl
sub
adc
movsb
scas
int3
dec
push
ss
sub
sarb
mov
sub
inc
push
pop
jecxz
testb
icebp
addb
sbb
ljmp
psrld
rcll
xchg
cmp
add
push
out
aas
pusha
ror
mov
mov
jns
loopne
loope
xchg
loopne
lret
cmp
faddp
popa
push
jno
bswap
push
or
inc
sahf
mov
lock
mov
pop
push
in
aaa
sub
ror
pop
fs
hlt
hlt
jmp
shll
cmp
cli
mov
push
movsl
inc
js
in
cld
mov
les
daa
shlb
popa
cmpsb
popf
xlat
adc
addl
out
je
fistpll
iret
or
push
jae
push
xchg
mov
into
sbb
punpcklwd
pop
mov
jg
adc
stos
fildl
dec
xlat
fnstenv
rcrb
dec
xor
mov
lock
mov
outsl
sbb
imul
sbb
pushf
cs
scas
cmc
cmp
mov
stos
fstps
and
add
add
cmpsb
add
dec
inc
shl
loopne
leave
scas
push
in
aam
clc
mov
mov
pop
mov
aad
scas
sbbb
jp
jns
pop
and
lret
movsb
dec
push
or
les
and
fwait
adc
mov
mov
adc
sub
testb
movsl
lret
faddl
pop
cmc
add
out
adc
xor
test
test
pop
mov
jl
imul
pop
stos
jns
mov
pushf
pop
dec
es
jmp
pause
lock
inc
mov
inc
out
and
dec
loope
int3
xchg
and
pop
sbb
jmp
mov
adc
inc
or
scas
mov
or
inc
lahf
mov
loopne
sub
clc
fstps
ds
aam
dec
incl
out
sub
adc
xor
adc
cmp
sbb
rcll
insb
pop
cwtl
in
adc
cmc
iret
lret
enter
pop
xchg
mov
testb
pop
call
bound
cmp
sbb
outsb
mov
add
jle
xchg
scas
push
mov
ds
aaa
or
ja
imul
add
mov
xchg
mov
dec
mov
out
jae
fs
adc
addl
mov
fiadds
jns
xlat
test
loope
mov
int
cmc
jmp
xchg
or
out
lcall
fdivs
mov
sahf
jns
inc
adc
jno
mov
ljmp
xchg
lods
xchg
test
add
jbe
pop
dec
ret
adc
push
adc
xchg
sahf
adc
and
call
cmp
push
aaa
iret
dec
push
repz
outsl
sbb
jmp
das
repz
sub
xchg
stc
repnz
push
aam
fwait
mov
mov
xchg
cmpsb
jne
stc
imulb
cltd
out
add
cltd
pop
bound
cli
push
xchg
imul
imul
pop
stos
sti
adc
movsl
fsubr
cmp
sarb
adc
cmc
shlb
sub
or
and
sahf
stos
in
mov
psubd
test
in
mov
mov
leave
cmp
fdiv
movsl
or
cmp
cld
inc
js
lret
add
sbb
lret
test
mov
shrl
loopne
push
xor
mov
out
loopne
xchg
fsts
mov
addb
das
in
and
ljmp
mov
xchg
xor
stos
popa
dec
loopne
pop
xor
push
jge
fwait
jo
xchg
test
adc
lds
rcll
ds
les
inc
pop
loop
divl
mov
je
negl
insb
mov
push
sub
sub
fisttpll
sub
inc
sbb
je
sar
js
and
adc
repz
iret
dec
adc
ficompl
fdivs
sbb
loop
add
mov
iret
scas
ljmp
pop
fdivrl
shrb
inc
xor
xlat
lds
fnsave
pop
clc
lods
aam
outsb
xor
inc
lahf
push
xchg
loope
test
lds
sbb
or
sahf
adc
unpcklps
inc
int3
sbb
addr16
xchg
mov
aam
xchg
xor
ljmp
xor
rcrl
inc
fldcw
lret
insl
enter
push
inc
cmp
aaa
lods
out
mov
cld
popa
aad
or
sub
fnstcw
aaa
aam
adc
push
jns
stc
aas
jns
cmp
xchg
popa
sub
les
js
sub
pop
xchg
adc
fdivrs
icebp
fildl
mov
ss
mov
addr16
mov
or
movsl
imul
mov
or
arpl
cmc
and
inc
nop
sub
sbb
gs
fisubs
pop
jge
pusha
lret
mov
sbb
xchg
cmp
push
jg
std
frstor
jae
push
xchg
in
popa
push
lock
mov
mov
rolb
jne
dec
dec
cmp
sub
out
or
cmp
cmc
cmpsb
movsl
lahf
push
dec
pop
jle
popa
ljmp
xor
movsl
test
es
mov
pop
nop
loopne
in
and
add
mov
jp
jg
mov
shrl
xor
stos
pop
or
dec
lahf
fwait
sub
ret
mov
cs
jnp
pop
lret
in
add
test
lcall
sbbb
and
push
insb
mul
xor
leave
sarl
leave
jle
dec
sbb
sub
cwtl
std
cld
lea
pusha
xlat
sub
mov
jno
dec
dec
std
pusha
sub
jae
dec
sub
loop
ror
and
sub
in
mov
xchg
and
mov
cs
xor
pop
rolb
sub
push
adc
shl
cmp
or
bound
rorb
iret
push
inc
ds
or
pop
out
xor
push
ret
loope
and
cmp
xchg
jnp
mov
mov
inc
xchg
out
adc
hlt
sahf
leave
cmp
ja
and
mov
xor
rcrl
add
sub
mov
loopne
lret
loopne
jp
in
inc
adc
arpl
out
daa
fwait
or
cmp
pop
int3
adc
pop
cmp
jp
and
sbb
adc
cs
aam
mov
mov
cltd
out
jecxz
stos
cmp
lods
dec
jns
mov
push
dec
subl
hlt
mov
insl
pop
pusha
rcl
insl
lahf
pop
mov
stc
cmp
out
ret
out
hlt
mov
mov
or
scas
mov
adc
sbb
lcall
cmp
push
sub
sahf
sub
sbb
mov
push
hlt
xchg
mov
jecxz
mov
mul
stos
jne
test
jmp
sbbb
cltd
jno
xchg
jp
dec
sub
lods
inc
cwtl
pushf
cltd
dec
andb
sbb
mov
xor
xchg
xor
jno
jg
cmp
cltd
movlpd
dec
inc
mov
push
jg
inc
scas
or
daa
popf
mov
add
lea
pop
xchg
outsl
or
data16
sub
sarb
ljmp
fsubl
outsb
sbb
icebp
mov
add
or
jbe
inc
mov
mov
push
mov
or
cmp
jecxz
out
pop
enter
add
mov
push
leave
sti
aad
mov
lret
xchg
or
lahf
ficomps
call
mov
mov
mov
ja
mov
test
clc
or
test
dec
arpl
push
aas
cmp
movsb
or
mov
jg
icebp
xor
push
sub
enter
push
pop
adc
mov
cmpb
inc
push
loope
test
lahf
insl
inc
mov
orl
mov
or
sub
cmpb
ja
cmpsb
dec
dec
ficomps
push
por
lcall
ret
fisubs
fldt
cmp
fisubs
cld
int
movsl
mov
xchg
dec
inc
mov
jae
jbe
push
sahf
or
rolb
in
adc
mov
mov
mov
repz
adcb
adcl
fs
jne
cmp
mov
orb
mov
jnp
cmp
cmp
mov
popa
sbb
fldl
or
scas
jmp
jg
xchg
bound
cmp
adc
adc
mov
push
dec
jnp
popa
leave
fmull
idivl
mov
dec
jg
mov
dec
mov
es
xchg
out
rcr
test
jle
mov
loope
popl
mov
bound
and
std
jnp
stc
push
mov
mov
les
ss
inc
popf
xor
std
ret
inc
mov
lret
add
enter
push
cmp
outsb
rol
xchg
adc
shlb
outsl
js
cmc
fbld
ljmp
and
stos
inc
rolb
mov
cmp
insb
mov
popa
pop
movsb
loope
aam
or
cmp
cmp
movsb
inc
pop
test
jl
scas
pop
shlb
lds
push
push
arpl
scas
nop
xlat
repnz
mov
in
rolb
lcall
pushf
sub
mov
mov
out
ss
cmp
xchg
imul
mov
fidivl
push
lods
cmp
and
mov
jbe
subb
stc
repz
movsb
xlat
outsb
push
insb
cmp
xchg
mov
std
or
inc
cmp
jle
jae
xchg
cmp
and
dec
sub
mov
xchg
shrl
mov
push
mull
inc
dec
or
pop
mov
and
mov
push
shr
shrb
incl
push
ja
xor
iret
mov
shl
imul
push
cli
mov
mov
mov
loopne
aam
aas
jle
movsb
inc
jle
ret
in
dec
cmp
jb
adc
popf
mov
and
xchg
notl
mov
lea
inc
nop
hlt
push
sub
sti
lods
push
sbb
fst
push
hlt
mov
mov
leave
or
adc
sbb
xor
icebp
mov
adc
stos
inc
insl
loope
test
shl
and
ja
jo
ret
sub
cmpsb
adc
int3
pusha
mov
mov
rolb
sbb
adc
dec
int
imul
hlt
push
shl
mov
movsb
ret
jnp
std
fcomps
mov
test
sub
call
xor
push
das
neg
cwtl
in
or
push
sti
jno
mov
outsl
arpl
xchg
aaa
cmp
leave
outsb
jle
xchg
mull
ss
inc
bound
push
fmul
lret
icebp
daa
data16
loope
xchg
jnp
aam
or
sahf
jo
out
mov
das
aaa
xor
hlt
cwtl
insb
inc
js
add
jge
jno
push
jmp
ds
ds
dec
bound
xchg
test
pop
test
fwait
cmp
jo
das
jp
dec
arpl
notb
into
outsl
das
loope
xor
sahf
xor
insb
test
push
repz
dec
xchg
jp
xchg
sbb
decl
sti
jg
sbb
aad
cld
and
sbb
adc
xchg
nop
mov
mov
ds
sub
popl
sbb
dec
lahf
and
push
cmp
mov
sub
stos
sub
jl
test
fs
or
dec
sti
out
imul
push
cmp
mov
lods
jbe
test
fstpl
cltd
mov
push
jno
iretw
cmp
ljmp
and
into
mov
adc
dec
and
movsl
cmpsb
mov
fstpl
add
jmp
ds
mov
mov
push
xchg
mov
sbb
pop
fldl
xor
cmp
lds
dec
xor
lods
nop
pop
leave
out
pop
ss
cmpsb
mov
mov
push
ljmp
popa
mov
jbe
sbb
je
xchg
sbbl
dec
xorl
mov
out
negb
xor
xor
popa
les
jg
test
testl
pop
mov
cltd
cmp
fadds
jo
ds
xchg
mov
test
xor
and
push
xchg
adc
or
shr
and
mov
fistpl
fs
mov
jno
sbb
ffreep
addb
adc
iret
test
cmp
test
xorb
cmp
pop
loope
jecxz
or
out
cld
dec
mov
subb
add
sti
xlat
lods
push
aam
xchg
repz
std
mov
sbb
stc
fcomps
push
mov
in
mov
cmp
fnstenv
push
out
xchg
mov
xchg
ljmp
xor
sti
push
xor
adc
clc
in
aad
adc
ljmp
cwtl
cmpsb
lcall
jp
push
aas
cld
xchg
add
inc
fisubrl
mov
nop
xchg
jbe
dec
cmp
aaa
push
roll
add
push
test
sahf
mov
pop
adc
jo
sbb
xchg
in
pop
rclb
mov
sbb
pop
xchg
inc
mov
sarb
lcall
dec
push
xor
and
xor
roll
sub
fadd
scas
sbb
jno
inc
repnz
dec
mov
sti
loopne
loopne
adc
pop
call
jecxz
pop
ja
das
les
mov
or
jp
sbb
sub
pop
jmp
les
mov
xchg
mov
je
xor
aad
iret
jle
push
ficoms
out
das
push
push
xor
ret
rolb
and
icebp
or
mov
and
stc
dec
and
push
mov
sbb
in
pop
scas
mov
mov
pop
repz
jge
call
test
pop
add
insb
mov
fcomps
test
nop
xchg
mov
mov
push
fs
movsb
sub
jl
jmp
adcl
in
mov
fmuls
inc
ljmp
dec
jbe
mov
sub
vpsubw
xchg
mov
outsb
sub
pop
sbb
insb
sbb
push
mov
sbb
pop
call
nop
pop
incl
mov
inc
xor
cmpl
sbb
dec
ljmp
pop
lea
leave
jge
xchg
loope
ljmp
add
jmp
out
jle
adc
jecxz
repz
xchg
pusha
fldenv
fcomip
imul
cmp
mov
inc
popa
fimull
repnz
sbbb
jge
imul
jnp
pop
cs
jecxz
loopne
xchg
sub
std
mov
shrb
lret
xchg
shll
and
mov
test
roll
daa
mov
pop
push
loop
and
pushf
and
xchg
and
loop
lret
xor
std
jo
cmp
jle
jg
pop
pop
movsb
out
lcall
ja
ret
lcall
das
mov
xchg
xor
mov
or
lahf
data16
xchg
pop
mov
jbe
cmc
ucomiss
push
daa
lret
jp
fsubrl
cld
xchg
dec
dec
xchg
adc
out
xor
fstl
daa
mov
dec
cmp
and
lahf
cs
xor
mov
adc
loopne
rcll
jnp
add
ds
adc
push
add
push
mov
mov
push
rcl
mov
push
mov
cmp
dec
insb
lahf
cmpl
jne
repnz
stos
lods
ja
jge
fucomi
sbb
fimuls
icebp
lds
call
dec
cltd
push
imul
mov
test
jmp
rclb
enter
js
mov
dec
inc
push
dec
loope
push
js
xchg
int3
jp
test
sahf
mov
rclb
test
adc
sbb
cwtl
cmp
xorl
xor
scas
inc
hlt
sbbl
or
and
incb
inc
lret
push
pop
sub
push
push
adc
xchg
stc
ret
sub
xchg
stos
call
notl
test
push
fstl
or
cmp
push
mov
and
mov
test
gs
jl
mov
push
xor
cmp
sub
or
pop
sahf
stos
adc
mov
pop
fidivrs
jecxz
fs
stc
inc
jle
stos
icebp
in
lcall
sub
aam
xor
iret
mull
nop
adc
lods
es
mov
jmp
mov
add
int3
cmpsb
add
adc
rclb
and
incb
or
movsl
jmp
icebp
push
insl
pop
inc
adc
ret
aam
pop
mov
js
xor
mov
cmpb
push
insb
dec
sbb
jmp
jbe
sti
movsb
test
and
mov
mov
or
inc
rcll
in
ss
inc
push
adc
inc
repz
mov
mov
or
nop
jl
ret
mov
inc
inc
dec
lock
rclb
sbb
jb
std
mov
daa
inc
inc
cwtl
xchg
xor
push
jecxz
and
sub
pushf
mov
lret
fwait
push
and
sbb
mov
dec
lods
mov
mov
loope
mov
xorb
psrld
fs
pop
xor
scas
push
mov
push
outsl
addr16
imul
lock
xor
cmp
je
cs
add
adc
stos
xor
or
aas
mov
mov
sti
imul
test
adc
int3
xchg
and
sahf
cmp
fs
mov
jb
mov
test
mov
add
mov
repnz
pop
mov
push
lret
subl
xor
xchg
mov
loope
loope
test
mov
in
pop
lret
jb
in
out
imul
mov
cwtl
mov
testl
pusha
sub
test
cmc
fldcw
pusha
mov
mov
aaa
clc
incb
ds
repz
pop
mov
jp
adc
cmp
and
and
lret
ss
mov
lret
test
adc
inc
fists
mov
sub
xor
mov
push
mov
in
mov
mov
jbe
pop
add
movsl
mov
shrb
imul
dec
mov
test
pop
stos
test
scas
addr16
jnp
pop
out
addr16
jmp
mov
je
push
sub
inc
mov
ror
loope
mov
sbb
pusha
xchg
outsb
xor
decb
mov
pop
sub
pop
mov
push
push
icebp
add
mov
js
xor
pop
test
dec
cmpl
mov
mov
xchg
es
lret
jae
std
repnz
inc
outsb
sub
out
int3
mov
jo
sti
fwait
jp
fs
imul
dec
and
test
lods
movsb
lock
shlb
mov
ja
mov
pop
repz
rolb
outsl
int3
fdivrs
dec
lcall
cmp
xchg
jns
outsl
iret
shrb
insl
dec
fdiv
jmp
repz
or
mov
push
jnp
push
pop
sahf
stos
xor
test
jb
aaa
inc
pop
icebp
fwait
out
add
inc
jnp
inc
jmp
dec
rorl
cmp
mov
xchg
or
mov
mov
insb
enter
jno
pop
subl
xchg
or
out
ficompl
js
mov
dec
or
cmp
in
and
aam
sub
movsb
mov
sti
inc
lock
in
pop
sarl
or
xchg
pop
enter
jo
or
into
sarb
outsb
push
test
adc
inc
jbe
aaa
add
lahf
lods
inc
lahf
pushf
or
xor
out
bound
insl
xor
sub
dec
leave
sbb
adcl
insl
nop
std
out
sahf
out
lahf
into
scas
fidivrs
push
outsl
push
jg
movd
dec
das
pop
aas
scas
iret
mov
out
lahf
into
scas
fidivrs
push
outsl
push
jg
movd
dec
das
pop
aas
scas
lret
fisttps
out
sahf
outsb
lahf
into
scas
pop
mov
push
outsl
push
jg
push
jle
dec
das
pop
aas
scas
iret
mov
sti
out
pop
into
das
fiadds
mov
cmc
movsb
outsl
push
or
xchg
loopne
shrb
shlb
daa
test
fadds
enter
leave
xor
cmpsl
arpl
cmp
or
clc
daa
call
ja
addr16
cwtl
inc
cmpsb
mov
cmpsl
push
notl
out
xlat
sbb
or
pop
daa
cs
inc
pop
mov
push
xchg
inc
mov
in
test
dec
cltd
push
insb
jle
daa
test
aaa
mov
push
fcompl
mov
xchg
pop
sbb
mov
pop
out
inc
mov
lods
mov
pop
lods
jecxz
pop
addr16
inc
xchg
sbb
sub
cmp
nop
lods
mov
orl
shll
pop
in
mov
lret
outsb
aam
int3
pop
iret
jb
es
ja
ja
test
std
mov
sbb
movsl
xlat
out
je
cs
adc
int3
mov
pop
inc
je
pop
pop
aas
xchg
in
aaa
dec
rolb
push
lods
out
mull
mov
sub
cmp
ret
push
out
xlat
hlt
scas
bound
daa
enter
enter
test
cwtl
inc
sbb
pop
xchg
out
xlat
add
cmp
dec
xchg
bound
in
push
iret
idivb
mov
sub
insb
xchg
popa
xor
push
scas
inc
stos
bound
icebp
inc
mov
or
js
ja
sub
mov
jle
push
movsb
ja
addr16
cwtl
inc
mov
pop
xchg
cmp
sub
sbb
or
clc
daa
call
ja
addr16
cwtl
inc
mov
pop
xchg
cmp
sub
sbb
or
clc
cmpb
mov
fidivs
rclb
add
ficoms
push
inc
pop
aam
pop
jns,pn
sbb
push
aas
and
lods
mov
adc
popa
cmc
mov
addr16
icebp
dec
xor
cmp
jmp
mov
mov
aaa
ficoml
pop
mov
sbb
jecxz
into
clc
sub
out
js
aad
mov
movsl
xchg
push
xchg
jne
into
ljmp
pop
jns
popf
insl
sub
sub
jle
jle
dec
loope
xor
jne
add
lds
adc
arpl
ret
cwtl
loop
ljmp
mov
dec
sar
data16
hlt
jp
or
inc
enter
mov
push
out
dec
sub
movsl
mov
adc
subb
mov
jge
cmp
jg
ret
ret
out
test
pop
data16
sbb
lahf
sbb
cli
xchg
out
das
inc
insl
xor
rclb
mov
mov
popa
push
sbb
pusha
ret
push
in
fsts
mov
dec
lods
sarb
mov
xor
test
test
loopne
gs
dec
imul
insl
popa
es
jge
pop
jle
es
lret
pop
or
lret
mov
test
adc
out
std
mov
test
xchg
mov
lods
sub
in
or
push
roll
ja
inc
lock
lahf
fsubrl
sahf
or
ja
divb
loopne
fimull
sbb
movl
mov
imul
data16
xor
mov
popf
push
or
int3
sub
roll
jno
outsl
jecxz
lods
or
mov
cmpsl
mov
push
xor
popf
loop
movsl
les
movsl
std
lods
movsl
loopne
push
cmp
and
cmpsl
loop
sbb
push
cmc
xchg
add
jbe
scas
mov
pop
mov
shlb
lods
loopne
stc
and
ljmp
pop
xlat
sbb
push
jecxz
and
dec
rclb
xchg
call
pop
lods
or
ljmp
adc
pusha
ss
dec
fwait
gs
jle
movsl
shlb
pop
or
out
stos
lret
hlt
dec
ss
enter
xlat
jno
out
or
lock
and
in
pop
add
adc
cmp
sub
adc
mov
add
std
jb
rolb
mov
sub
sbb
xor
lock
in
dec
mov
adc
pop
fwait
mov
scas
sub
lock
dec
xor
push
movsl
pop
mov
imulb
mov
sbb
je
lcall
pop
pop
adc
dec
movsb
mov
mov
push
push
int3
rcpps
push
movsb
mov
jmp
cld
popa
int3
fmulp
out
cwtl
xchg
sbb
push
and
add
test
pusha
ficoml
mov
rcrb
enter
cli
lock
xor
jb
mov
push
popf
xor
inc
cmp
mov
xchg
mov
sub
sbb
add
inc
pop
mov
int
addb
sub
xor
fstps
jae
out
test
mov
mov
and
inc
dec
jnp
faddp
out
test
enter
out
clc
nop
push
push
out
sub
in
lret
sbb
sbbl
std
push
data16
aam
mov
pop
sti
insb
mov
ror
scas
cmp
pop
add
mov
lods
push
xchg
insb
pop
pushf
and
mov
orb
lock
fwait
cmpsb
push
aas
xchg
mov
xor
sub
mov
imul
das
rcrl
push
xor
fwait
loop
pop
mov
dec
in
jge
test
outsl
pop
jecxz
test
rcl
mov
stos
leave
add
andl
fmul
dec
aam
or
outsb
add
or
sbb
xchg
jae
xor
es
mov
mov
sub
popa
lret
inc
or
pop
fldt
pop
mov
repnz
xor
xor
ret
fisttpll
pop
mov
or
fsubrl
sbb
loop
rorb
repnz
jle
inc
dec
or
ss
xor
push
fs
loopne
jmp
push
add
scas
outsb
rolb
cmp
inc
and
sbb
push
fists
pusha
in
mov
repnz
iret
sbb
xchg
mov
pop
jmp
push
mov
pop
lock
mov
in
mov
mov
xchg
fidivrl
dec
stos
dec
cwtl
mov
push
iret
add
add
sub
ja
dec
xor
push
popl
fidivrs
loopne
out
adc
addr16
mov
stc
and
mov
dec
lods
mov
xchg
iret
pop
fnclex
stos
inc
pop
jp
mov
scas
popa
jecxz
inc
cmc
in
and
in
cmc
fbstp
sbb
jge
sub
ret
mov
ja,pt
mov
cmp
and
outsl
xchg
into
push
sbb
or
cld
hlt
xor
xchg
stc
in
leave
lret
sub
in
sahf
jecxz
cmc
adc
add
jns
mov
js
movsl
out
pop
repnz
gs
orb
adc
mov
shrb
pushl
mov
push
insb
or
fldenv
cmpsl
out
pop
cld
mov
cld
xor
aaa
test
fldl
ds
jp
addr16
imul
pop
ds
or
outsl
xchg
insl
lock
popf
es
push
sbb
mov
aaa
or
loopne
dec
test
iret
mov
clc
sbb
imul
das
aas
stos
xor
jp
and
xchg
fnstenv
push
pop
lahf
test
int
or
adc
gs
adc
jno
xchg
sub
add
pusha
ret
dec
hlt
jnp
in
add
push
stos
test
in
mov
mov
cmp
cmp
push
sbb
sarl
jno
inc
mov
lods
sub
stc
rcrb
mov
mov
xor
mov
cmp
lret
push
rcll
inc
arpl
jge
or
mov
ds
jmp
rol
sub
movsb
cmp
dec
or
push
int
stc
and
popa
pop
adc
cmp
mov
pop
jle
lcall
cld
in
and
inc
gs
pop
sub
or
nop
xchg
or
jne
cwtl
jne
repz
sub
mov
and
outsl
jle
out
jae
and
cmp
int
daa
mov
sub
and
sub
outsb
jbe
cli
shr
mov
adc
sub
add
stc
mov
adc
jl
orl
mov
dec
cwtl
in
gs
adc
loopne
mov
xlat
add
out
mov
outsl
xor
pop
scas
and
int
or
xchg
sub
arpl
mov
mov
fstps
xor
sub
adc
ss
cli
das
push
xor
jmp
scas
jns
adc
insl
cmp
fcomip
lds
jae
rorl
shl
mov
fcomps
rorl
mov
outsl
outsl
outsb
jbe
and
xchg
aaa
xlat
cmpsb
jle
cli
sub
ficoms
incl
aad
lock
pop
aaa
insl
sub
dec
xchg
push
jle
xor
aaa
add
adc
xor
push
inc
and
adc
cmp
or
popa
cwtl
dec
inc
decl
or
fwait
xor
push
and
push
clc
lret
xchg
inc
jbe
push
xchg
icebp
mov
jnp
mov
xor
repz
mov
inc
je
out
hlt
or
jmp
xchg
ljmp
adc
int
stc
jle
imul
into
int
mov
aad
add
je
or
lods
dec
jb
lcall
xor
je
ds
add
mov
roll
pop
addl
cmp
mov
outsl
leave
mov
loopne
push
pop
popa
fsubrs
aaa
jae
testb
jg
inc
push
imul
mov
cli
dec
enter
mov
xchg
subl
mov
fcoml
in
jae
xchg
push
fsts
iret
sarl
add
into
lock
jge
fstpt
xlat
cmp
adc
jmp
shll
push
add
es
arpl
bswap
stos
add
nop
dec
mov
adc
test
mov
lods
shlb
js
mov
inc
fwait
cld
out
outsb
or
icebp
rep
lea
push
or
xor
pop
push
lret
xchg
xor
out
repz
outsb
fisubrl
ret
mov
pop
fwait
cmpsl
sub
add
pop
cld
loopne
movsb
mov
shl
js
aad
icebp
inc
adc
xchg
iret
jnp
xchg
lahf
inc
movsl
sarb
enter
popf
xor
adc
push
mov
sub
out
fwait
inc
adcb
cmp
dec
jl
dec
test
sub
insb
cld
mov
cmp
fs
pop
and
xchg
mov
sub
dec
cld
adc
iret
fs
sbb
popa
das
pop
clc
mov
cmc
adc
call
rcll
stc
test
repz
clc
pop
loope
gs
bound
loopne
and
or
loope
xchg
push
movsb
add
add
add
or
adc
fsubrp
pop
fimuls
call
cmp
dec
mov
rcll
adc
mov
or
dec
shlb
cmc
or
dec
inc
sub
or
cmpsb
jb
insl
jns
and
jo
fs
es
push
push
xchg
insb
pop
push
inc
imul
adc
jno
shr
fs
bound
stos
data16
cmpsl
icebp
mov
mov
outsl
mov
mov
fisubrl
addr16
push
popa
ret
shr
pushf
cmp
movsb
decb
push
jae
xchg
fsubs
pop
lock
in
sbb
pop
mov
test
and
pop
cs
imul
ret
add
popf
popf
push
jl
jae
jg
lret
and
int
fsts
lret
xchg
outsl
addr16
jg
cwtl
sbb
popf
dec
dec
lcall
mov
mov
lret
lds
icebp
int3
faddl
mov
pop
outsb
repz
inc
enter
repz
ret
pop
popa
jge
fs
jnp
jl
cwtl
jecxz
mov
mov
pop
jbe
add
sbb
call
cmp
mov
rcrb
smsw
mov
dec
mov
lods
je
cmp
sbb
cli
pop
mov
loop
fidivrs
cmp
cmpsb
popa
addr16
faddl
sbb
call
jnp
xchg
enter
push
add
dec
push
cmpsl
add
adc
sti
mov
add
inc
or
xchg
lods
fidivrs
xchg
rcr
ret
stc
test
in
xchg
std
pop
jp
lds
or
aaa
test
sbb
cld
imul
mov
lcall
sbb
mov
insb
push
cmp
jmp
addr16
or
fcompl
test
mov
insb
dec
sub
push
sarl
mov
sub
or
jae
sbbb
push
ret
jns
cld
lods
jg,pn
fstp
call
stc
mov
inc
mov
pop
jo
aas
or
mov
ljmp
push
dec
pop
cmp
push
inc
repnz
in
inc
mov
pop
stc
add
inc
mov
nop
xchg
out
push
adc
pop
scas
push
and
iret
jmp
add
lret
loop
stos
inc
repz
outsl
cmp
or
inc
xchg
in
dec
fcmovnu
fwait
sahf
ds
xor
cmpsb
je
cli
mov
je
aas
mov
jbe
scas
push
jns
inc
xor
dec
pop
popf
lods
dec
pop
xchg
scas
push
dec
ret
or
pop
inc
jle
clc
and
sub
add
data16
clc
lahf
movsl
pop
push
in
shr
stos
mov
jle
xor
push
mov
pusha
test
mov
or
in
decb
inc
test
cmp
test
mov
sbb
inc
aad
ds
jns
push
out
loope
adc
mov
mov
sub
cwtl
mov
call
fstps
cmp
cmp
mov
sub
jbe
aad
dec
shlb
sub
dec
std
xchg
movsl
or
int3
pop
add
int
jbe
sbbl
jp
pop
pop
mov
into
pop
je
pop
jmp
les
rcr
inc
pop
jno
stos
xor
cltd
gs
pop
cmc
les
push
xor
leave
push
out
mov
cmp
jbe
cltd
add
push
or
mov
sbb
stc
pop
scas
ljmp
stc
pop
sub
push
jne
mov
sub
enter
mov
mov
popf
divb
mov
jnp
mov
icebp
sub
js
mov
push
push
ja
mov
call
sbb
mov
or
xor
ljmp
mov
ljmp
dec
lcall
mov
sub
dec
repnz
cmp
inc
insl
arpl
repz
ds
xchg
aam
orl
dec
rol
dec
mov
out
iret
xor
pop
xchg
jge
jns
data16
adc
stos
and
mov
sbb
leave
jl
jmp
mov
cwtl
mov
add
fwait
push
icebp
aad
and
arpl
sbb
iret
adc
enter
push
jne
sahf
push
mov
fcmovu
push
stos
data16
adc
je
inc
es
cmp
dec
mov
out
leave
shl
sbb
mov
cmp
fldt
mov
daa
pop
movsl
xchg
mov
int3
xlat
or
cmp
sarb
mov
divb
pop
jmp
cmc
cmp
ret
adc
pop
cli
or
mov
mov
sbb
dec
aaa
mov
xchg
push
push
mov
jge
mov
mov
mov
shll
notb
out
and
cmpsl
xor
int3
and
jns
repnz
mov
jne
push
cmp
mov
inc
rorb
ret
orb
and
cs
scas
sbb
cmp
aaa
popf
in
rol
lds
xlat
xchg
insb
lods
pop
xor
sbb
nop
shr
aad
movsl
cli
roll
stos
xor
stos
out
push
cs
pop
push
addr16
mov
xor
mov
mov
or
daa
andb
mov
add
out
lea
out
push
mov
jmp
ficoms
pop
inc
stos
adc
push
stos
pop
sti
xlat
jge
subl
fidivs
imul
inc
adc
movsb
popf
inc
inc
les
pop
pusha
les
adc
or
iret
es
ljmp
and
jno
lods
mov
inc
popa
out
ss
cmp
add
notl
fnstenv
je
in
hlt
jp
mov
push
pop
sbb
test
outsb
sbb
sbb
mov
mov
out
cmp
mov
lcall
push
popa
jecxz
hlt
leave
bound
cmp
cld
sub
fstl
stc
cli
cmp
dec
pop
adc
dec
cmp
ret
jmp
icebp
pop
jle
movsl
push
ss
cwtl
jge
enter
jbe
push
daa
add
cmp
aam
rcll
fadds
push
cld
add
push
cmpl
push
adc
mov
cli
and
scas
std
stos
mov
shll
iret
pop
sbb
outsl
sbb
pop
mov
jecxz
pop
stos
rcrb
dec
inc
fdivs
pop
aaa
sahf
addr16
sbb
jge
mov
add
inc
out
adc
and
pop
jle
jbe
aas
sbb
popf
test
lcall
adc
in
xor
stc
leave
inc
jmp
mov
adc
push
lds
les
call
pop
cmp
jge
push
ret
sbb
xchg
sbb
add
fcomp
xchg
pusha
idiv
icebp
imulb
lret
xor
ret
jae
into
orb
sbb
jno
nop
cmp
frstor
sti
movsl
mov
jmp
movsb
xchg
sub
gs
mov
jg
sarb
adc
push
movsb
and
add
add
jmp
push
mov
cmpsl
mov
lea
push
cmp
test
inc
movsl
mov
movsl
jne
adc
mov
ss
dec
ljmp
mov
mov
cmp
repz
or
or
outsb
fistps
mov
mov
add
sbb
pop
or
aaa
push
or
adcl
lods
adc
sbb
jge
sbb
sub
jns
mov
adc
mov
lret
sbb
add
cmp
cmp
mov
pop
inc
xor
je
push
sub
je
mov
push
sub
hlt
daa
in
ss
cli
fdivs
pop
call
mov
mov
and
mov
mov
mov
sbb
mov
add
inc
pop
mov
hlt
jnp
inc
xchg
jge
mov
add
or
fsubl
pusha
mov
jl
aaa
lea
scas
push
mov
lret
pop
pushl
push
sti
fnstsw
inc
jnp
outsl
int3
add
dec
data16
stc
cmpsb
or
inc
sbb
sub
sahf
xchg
cld
and
repnz
sti
and
les
lds
pop
mov
push
xchg
dec
cs
mov
and
sbb
hlt
out
mov
xor
jmp
adc
loop
enter
fucom
push
cwtl
push
dec
pop
xchg
jb
xlat
mov
push
xchg
xchg
lret
sub
mov
movsb
jp
inc
mov
out
push
pusha
lods
stc
fidivs
cmp
pop
push
dec
or
push
movsl
notb
cmp
push
jnp
lock
into
out
addb
or
ss
inc
movsl
cmpsb
jmp
mov
jl
xchg
in
push
add
inc
and
xchg
sbb
push
bnd
xchg
push
in
dec
pusha
fcompl
js
sti
push
test
sbb
adc
jge
jae
popa
jbe
loop
and
mov
jp
sub
loopne
sub
and
sub
mov
cwtl
inc
into
sub
movsl
in
sbb
lods
lock
push
lock
jecxz
iret
push
in
dec
mov
popa
aam
jmp
outsb
loop
push
pop
adc
imul
lahf
jl
cmp
dec
push
push
xlat
inc
jb
push
mov
cmp
leave
or
mov
and
fmul
std
mov
cli
pop
jnp
push
cltd
popf
enter
sub
push
imul
push
inc
mov
rol
mov
sub
pusha
fs
pusha
pop
inc
and
dec
or
mov
cwtl
add
mov
mov
in
cmpsl
push
loope
push
push
push
cmpsb
orb
xor
add
popf
repz
xor
jmp
out
push
xchg
icebp
pushf
inc
pop
adc
jg
sub
ret
push
inc
fdiv
call
popa
lcall
cmp
dec
daa
inc
lar
pop
ljmp
and
or
sbbl
inc
mov
push
sbb
inc
add
jae
sbb
repz
push
sarb
or
xlat
in
xchg
out
fwait
mov
pop
jbe
stos
push
popa
stos
inc
jns
sbb
push
xchg
imul
cmp
mov
ljmp
add
xlat
jecxz,pn
iret
jno
in
push
or
add
into
and
icebp
lret
lret
dec
jecxz
sub
jmp
lcall
dec
lret
movsl
xor
frstor
pop
inc
jne
xchg
repnz
mov
mov
out
inc
or
ret
dec
xchg
call
jbe
test
test
xor
push
jmp
dec
ret
lods
jo
xchg
gs
mov
push
loope
call
pop
xchg
data16
stc
mov
jg
push
cmpb
ss
pop
xchg
pop
mov
jbe
xor
dec
push
cs
dec
mov
movsb
cmc
adc
and
scas
sub
cs
xchg
sbb
or
xor
mov
inc
clc
mov
leave
xor
push
and
mov
add
cli
ret
stc
fmul
dec
pop
enter
nop
inc
repz
andl
lea
ja
sub
xor
into
cli
fwait
sarl
repz
mov
adcb
jle
mov
add
sti
lds
sarb
in
test
mov
dec
cmp
mov
icebp
lods
jo
jns
inc
cmp
push
adc
jno
add
icebp
pop
fimuls
daa
adc
pop
mov
jnp
fsts
cld
jmp
testb
jb
fcoms
inc
adc
inc
fstps
xor
ja
dec
and
pop
cmp
adc
out
out
ss
sbb
xchg
inc
fs
xor
adc
adc
xchg
dec
dec
mov
xor
pop
inc
pop
pop
mov
dec
repz
add
add
or
leave
repz
mov
inc
mov
pop
xchg
cmp
sub
sbb
or
clc
daa
call
ja
addr16
cwtl
inc
mov
pop
xchg
cmp
sub
sbb
or
cld
daa
out
rolb
ja
addr16
push
pushf
inc
mov
pop
xchg
cmp
sub
adc
in
aaa
sbb
or
cmp
mov
addr16
sbb
mov
cmpsl
ret
xchg
addb
sub
jo
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
repz
mov
test
or
add
or
add
add
push
pop
add
xchg
add
or
sub
jl
jno
in
add
add
add
add
pop
in
pop
add
add
add
add
fiaddl
mov
add
add
add
add
add
pop
inc
add
add
add
test
pop
cmp
nop
add
add
dec
add
mov
add
add
add
add
add
add
add
inc
add
add
add
sti
add
add
add
adc
add
mov
add
add
pop
and
aas
add
add
add
add
test
out
ja
fiaddl
jecxz
sbb
mov
add
xor
add
add
add
pop
add
add
add
add
mov
sahf
add
add
add
jl
inc
add
add
xchg
add
add
pop
inc
add
add
push
add
add
add
xor
je
lcall
add
add
add
add
inc
add
add
fiaddl
push
add
add
add
push
fiaddl
ja
mov
pop
add
add
mov
add
inc
add
xchg
add
add
add
inc
add
add
pop
mov
add
add
add
add
add
add
add
add
add
jne
rolb
add
mov
add
add
add
add
insl
add
add
add
add
add
adc
mov
add
add
push
add
add
add
nop
add
repz
add
add
or
inc
add
add
add
xchg
pop
add
inc
add
lods
add
add
add
add
add
add
add
addb
add
add
add
add
dec
add
add
add
add
add
add
add
add
pop
add
add
loopne
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
and
cmpsl
add
add
add
add
add
add
add
add
add
das
add
add
add
add
add
add
add
lock
add
add
lcall
add
add
add
add
add
mov
add
add
add
pusha
add
jne
dec
add
add
aam
inc
add
push
add
add
add
js
hlt
add
add
add
add
add
add
add
add
add
pop
add
jne
jne
or
lods
add
add
add
add
xchg
add
pop
add
xchg
add
cmp
jl
in
add
cmp
in
add
ds
add
add
add
sbb
xchg
xor
mov
pop
adc
ficomps
pop
push
sub
sub
not
leave
pop
xor
push
xor
and
mov
sub
pop
out
sub
pop
cs
out
cltd
cmp
mov
add
xor
imul
push
mov
add
dec
or
cltd
jmp
ds
or
loop
mov
orl
jae
dec
das
xor
jne
nop
mov
call
les
call
inc
jnp
imul
adc
xor
push
rol
mov
or
incl
les
repz
movsb
pop
jb
or
add
dec
fcoms
dec
jmp
cmpsb
pop
rolb
mov
js
mul
xor
mov
xorl
cmp
orb
fbld
cmp
push
push
repnz
push
xchg
push
loopne
je
aaa
sti
push
mov
xchg
jmp
call
mov
adc
mov
dec
imul
aaa
inc
pop
pop
mov
roll
les
push
fistpl
pusha
inc
iret
xor
and
cmp
orl
cli
int
scas
cli
pop
inc
int
sahf
cmp
hlt
test
int
adc
cmpsl
jmp
nop
push
push
imul
push
or
pop
cmp
sub
aas
fbstp
lods
cmp
ds
xchg
sbb
adc
and
jmp
call
push
mov
rorl
push
daa
fsts
pop
addb
loope
mov
cli
aas
xchg
jl
scas
clc
cmp
loop
mov
and
sbb
push
push
and
jae
mov
inc
pop
lahf
pop
mov
in
pop
imul
xor
jmp
lret
icebp
pusha
mov
ja
or
or
lahf
addr16
inc
lock
fwait
sbb
dec
in
aas
jl
sahf
adc
cmp
and
add
cld
inc
mov
and
dec
mov
jnp
jp
add
movsb
cli
xchg
outsl
push
sub
out
stos
push
cld
xchg
rclb
jo
mov
mov
xorb
jb
xchg
out
aam
or
gs
or
das
push
cld
xchg
mov
push
cmc
push
mov
mov
sub
xchg
shrl
sub
xchg
adc
ss
cmp
or
mov
jl
mov
xor
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
