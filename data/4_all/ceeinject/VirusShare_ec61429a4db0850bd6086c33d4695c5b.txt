call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
xor
adc
jnp
add
and
loope
lds
xchg
loop
shlb
inc
adc
jb
bound
xor
push
mov
mov
in
out
xchg
mov
movsb
xor
pop
adc
jb
bound
sub
ds
and
repnz
lret
inc
sbb
adc
imul
fdivl
lret
jp
mov
jg
imul
ficoms
in
jge
xor
fs
imull
sub
cmp
sbb
inc
xchg
pop
int
dec
das
js
dec
cmp
lahf
mov
cwtl
pop
sbb
les
xor
push
mov
loope
or
aaa
sbb
mov
jae
jge
mov
dec
dec
mov
shll
adc
cmp
dec
mov
stos
cmp
or
pop
mov
out
and
stos
fidivl
sub
mov
cmc
mov
call
fs
inc
and
add
bound
xor
cmp
xchg
in
cmp
mov
pushf
shrb
inc
ss
adc
push
or
inc
ret
xorl
enter
sub
pop
adc
dec
pop
inc
pop
push
shlb
out
in
test
push
and
and
daa
bound
xor
and
aam
les
xchg
loop
shlb
inc
adc
jb
bound
xor
and
aam
les
xchg
loop
shlb
push
repz
mov
cli
fnstsw
add
cmp
roll
stc
jae
hlt
in
mov
inc
outsb
lret
fwait
inc
or
test
fldt
stos
int3
xchg
cmp
pop
and
lds
xchg
iret
sbb
inc
push
mov
cltd
popa
sbb
lret
jnp
mov
loope
jg
and
sbb
add
out
mov
mov
sub
xlat
mov
fisubrs
enter
xorb
adc
ds
jnp
cmc
imul
stc
aam
loope
cmp
jp
adc
xchg
outsb
jle
insl
xlat
cmp
out
push
loop
jae
mul
push
ffree
pop
fmul
xor
dec
call
sbbl
push
sbb
loop
mov
or
shll
ljmp
add
push
sti
jge
mov
es
popa
dec
push
ljmp
xchg
pop
cli
or
xor
inc
mov
mov
sahf
daa
aaa
lahf
jge
in
insb
sbb
push
int3
mov
clc
and
cs
jmp
sti
inc
out
ret
outsl
jl
arpl
xor
stc
mov
push
aam
insb
leave
adc
dec
add
std
in
push
jnp
push
sub
dec
mov
sub
and
sub
xchg
aaa
mov
imul
movsl
mov
or
stos
add
or
iret
jg
test
sti
jno
in
cmp
add
dec
jnp
push
jo
cwtl
add
inc
fiadds
push
and
cwtl
gs
stos
repnz
cltd
ljmp
lcall
push
nop
cmpsb
xchg
test
mov
cltd
xchg
dec
enter
scas
xchg
out
movsb
mov
js
and
in
push
xorb
cmp
fnsave
imul
pop
sub
inc
popf
adc
mov
jg
cmp
fldcw
shlb
daa
mov
in
adc
shrl
sahf
aas
outsl
mov
xor
fsubrs
js
popf
arpl
inc
jne
out
mov
add
pop
cmp
mov
dec
pop
orb
adc
lea
xchg
mov
cmp
pop
dec
adcb
ss
notb
pop
movb
ljmp
fsubl
ljmp
adc
xor
jl
fcomp
aam
push
mov
pop
shll
movaps
mov
fnstsw
std
adc
jecxz
testb
roll
dec
cltd
push
ss
stos
add
outsl
inc
or
push
add
rcll
mov
jnp
adc
out
sub
popa
in
test
or
mov
fnstsw
lds
scas
pop
stc
decl
daa
mov
sbb
jle
popf
or
dec
scas
fsubl
js
jo
cmc
adc
push
scas
cmpsl
and
loopne
mov
dec
push
cmp
nop
lret
cld
cmp
out
fnsave
xchg
ret
xchg
push
ret
stos
cli
xor
mov
or
repnz
sub
pushaw
jecxz
stos
in
and
ds
dec
jge
xor
les
pusha
cli
dec
cmp
insl
js
pusha
sahf
imul
xlat
pop
ljmp
mov
aam
jnp
cmpsb
ret
jo
sbb
scas
sti
shrl
in
outsl
lea
or
out
popf
cmp
andb
negl
fistl
stc
xchg
pop
cmp
repz
in
mov
xchg
scas
iret
fldenv
aaa
pusha
push
push
bound
mov
xchg
cltd
sub
sub
jl
mov
mov
lret
test
inc
xor
jp
sbb
outsb
sub
mov
adc
in
loope
inc
pop
loope
nop
inc
dec
fists
popa
and
icebp
scas
xor
mov
inc
loopne
mov
out
add
fildll
cmp
xor
and
ret
mov
gs
jle
and
xor
add
cli
dec
jbe
insl
out
push
int
std
xor
push
loopne
cmp
or
push
mov
icebp
scas
sub
adc
popa
pop
adc
inc
mov
rorl
jg
out
js
mov
jbe
stos
adcl
and
mov
or
and
adc
cmp
std
in
adc
sbb
dec
in
mov
xor
cmpsl
lds
sbb
cltd
orb
lock
dec
aam
push
cmp
scas
jbe
push
cmp
pop
jecxz
outsb
jl
sbbl
psllq
cmpsb
mov
test
bswap
les
mov
pop
mov
ds
sbb
mov
add
call
fwait
dec
mov
jne
xor
xorb
test
into
mov
insl
mov
leave
data16
jle
push
insb
mov
dec
and
fwait
push
sub
and
pop
jle
dec
insb
mov
xchg
pop
nop
in
adc
movsb
lods
sarb
test
je
fsub
std
in
stos
das
push
arpl
jbe
std
jnp
sti
mov
insb
adc
xor
sub
sti
fadd
sarl
push
jnp
loopne
data16
cltd
inc
mov
ja
cmp
vpunpckhqdq
int3
dec
dec
test
idivl
lods
pop
cmp
mov
icebp
orb
je
or
fsts
pop
in
jbe
icebp
shrl
push
fdiv
mov
into
scas
inc
mov
ss
ss
iret
shrb
negl
cwtl
addr16
xor
lock
mov
mov
cmpsl
enter
sbb
lcall
imul
mov
into
xlat
fwait
mov
jno
push
insb
or
sti
shll
mov
inc
adc
mov
dec
push
mov
out
push
in
out
test
add
int
or
xchg
dec
lret
add
out
or
adc
scas
sti
sbb
xchg
xchg
push
insb
out
dec
push
inc
inc
out
xchg
stc
inc
in
or
inc
pop
ss
inc
test
push
addr16
aam
mov
loop
fisubs
inc
add
add
sbb
and
loope
pop
or
jb
icebp
mov
jmp
pop
out
cmovs
or
adc
daa
push
ss
testb
lock
cmp
sbb
das
mov
cmpsb
adc
mov
faddl
cwtl
dec
sbb
and
cmp
jbe
or
mov
sbb
push
aaa
xchg
out
inc
stos
out
sbb
jmp
outsl
push
push
call
aaa
or
lret
lahf
xchg
loopne
sbb
mov
pop
sbb
in
sbb
add
sub
divb
inc
std
insb
pminsw
xchg
jo
hlt
mov
pop
subb
ss
adc
inc
adc
pop
push
or
pop
xor
sbb
aad
push
inc
mov
sub
push
aaa
sbb
cmp
jecxz
sbb
out
test
mov
leave
jp
nop
bsr
pushf
popa
mov
in
jns
imul
push
push
pushf
in
lret
mov
das
push
out
mov
mov
add
out
ljmp
in
mov
loop
adc
push
pop
sub
cmpsl
jl
roll
leave
fdivs
ror
jno
iret
jl
cmpb
pop
fcmovbe
cmc
adcb
mov
adc
mov
and
mov
inc
push
fcoml
daa
inc
fs
jb
popf
into
insl
movq
adc
dec
add
fdivrs
test
mov
icebp
inc
ret
sbb
add
int
pop
std
cltd
cs
push
mov
or
add
js
das
and
mov
pop
adc
cmp
sub
jnp
add
pop
rol
mov
imul
inc
pop
dec
jmp
mov
scas
out
std
sbb
aad
das
jo
mov
xor
sbb
xor
xchg
lahf
xor
push
movsl
sub
sbb
xor
push
out
jecxz
jge
dec
aam
imul
in
jb
xor
jg
add
in
nop
iret
test
or
mov
mov
add
aas
pop
mov
mov
lds
outsl
jmp
push
cwtl
lret
fists
mov
fisubrs
dec
aam
mov
fidivs
adcb
cs
mov
jno
ljmp
push
ret
and
mov
inc
cmp
sti
bnd
loop
mov
decl
ljmp
aam
test
add
ret
cmp
es
mov
and
lods
pusha
jb
push
xor
in
dec
int3
lds
mov
pushl
inc
out
jl
mov
fs
xor
fldenv
cmpsb
cmp
stos
push
negb
push
imul
dec
mov
les
scas
shl
jl
aas
inc
ds
or
jne
and
insb
iret
xchg
push
and
lcall
xchg
addb
test
in
mov
mov
cli
mov
dec
loope
push
cmp
push
or
xchg
push
jno
and
nop
js
lret
into
in
sbb
mov
jl
imul
xchg
sub
sbb
cltd
mov
or
and
enter
sahf
sub
clc
imul
jns
or
xor
mov
adc
adc
push
dec
lods
cmp
sub
mov
or
jo
mov
mov
test
cld
jge
mov
add
pop
fcmovb
or
test
add
outsb
fdivr
xchg
aas
cmp
and
lret
test
lcall
sub
dec
adc
sub
das
imul
cmp
fistl
xor
inc
icebp
mov
stc
xchg
jne
lahf
loop
test
fwait
cmp
jle
js
jmp
cs
stos
stos
aas
rcrb
adc
mov
mov
data16
pop
cmp
and
and
stos
mov
out
ljmp
out
shll
mov
pop
xchg
push
out
cs
rclb
dec
sbb
sub
adc
cmp
rcrb
sub
xor
pop
leave
xor
enter
sbb
pop
jae
popa
lret
sbb
lock
cmp
lret
pop
xchg
jge
scas
or
testb
and
ret
sbb
mov
and
iret
push
pop
mov
scas
sub
mov
test
fdivr
ss
add
das
jmp
sbb
and
loop
jae
adcl
and
push
jb
outsb
jno
jmp
jns
cli
mov
int3
clc
xor
mov
mov
rol
call
pop
aam
fimull
sub
in
sbb
inc
and
cli
pop
adc
sub
mov
sub
shll
mov
dec
jae
fucom
push
mov
mov
test
cmp
icebp
imul
inc
inc
psubusw
ds
loopne
pop
cs
add
icebp
sbb
stc
jns
push
int3
mov
push
jnp
fisttpl
das
jae
jg
data16
mov
pop
fldcw
cmp
bound
insb
adc
rorb
pop
mov
in
movsl
xchg
xor
inc
push
mov
cmp
mov
jnp
xor
clc
sbb
xchg
js
enter
pop
fnsave
mov
outsl
cmpsb
jecxz
pop
ja
aaa
fsubrp
add
or
lock
sahf
dec
mov
insl
lret
dec
leave
dec
sbb
outsl
push
sub
jne
aad
mov
cld
jg
test
jnp
fidivrl
cld
mov
lods
mov
jl
gs
adc
addr16
mov
imul
loope
dec
stos
in
popa
lret
jno
stc
add
stc
adc
fsubrl
push
imul
dec
imul
dec
popfw
out
jg
stos
imul
mov
or
icebp
push
pop
out
xchg
call
fisubs
jno
mov
push
dec
mov
int3
scas
mov
cmpsl
inc
cs
nop
sub
xchg
shrl
dec
sub
push
pop
lock
inc
loopne
fldcw
mov
mov
add
pop
test
jp
imulb
jbe
mov
lret
out
sbb
das
sub
outsl
push
loopne
mov
loopne
push
idiv
ds
gs
test
iret
iret
push
add
shrb
adc
sub
cs
mov
icebp
cmp
jnp
loop
sbb
inc
push
in
mov
dec
aam
out
jne
aam
adcb
add
aas
xchg
mov
pop
mov
out
jl
testl
sub
push
jmp
mov
jno
int
fninit
jecxz
mov
lds
sbb
inc
push
and
xchg
lcall
rorl
jae
sbb
in
fldt
jnp
sahf
je
insl
inc
aad
test
inc
push
jl
aam
jl
sub
pop
imul
cld
fucomi
add
es
jecxz
dec
mov
int
and
cmp
pop
loopne
xchg
ror
jl
dec
mov
xor
in
nop
mov
test
push
xchg
lock
dec
jg
cmpsb
test
pusha
outsl
xchg
dec
ret
scas
mov
js
insl
cs
sub
xor
imul
mov
mov
dec
call
or
and
add
xchg
das
mov
cmpsb
cmp
stos
mov
jo
inc
sbb
ljmp
cltd
xor
xlat
mov
push
jns
loope
cs
sub
test
pop
cmpsb
in
sarl
orl
js
inc
andl
add
aam
or
stos
jo
push
test
hlt
fsubrs
loopne
mov
push
add
subl
insb
add
push
sub
pop
push
jbe
lahf
mov
lea
mov
and
lea
or
jg
inc
sbb
mov
push
sti
xlat
or
loop
xchg
cmpsl
adcb
mov
das
mov
mov
pop
mov
popa
ja
aaa
jge
inc
xchg
or
dec
iret
aam
cmp
inc
lahf
lock
es
stos
mov
push
popa
mov
xchg
ret
mov
rorb
fsts
scas
popa
pop
mov
pop
imul
cmc
hlt
mov
add
cmpsb
and
shrb
push
jae
mov
jmp
jecxz
sub
and
cmp
cmp
test
pop
jns
sub
pop
cld
pop
flds
ljmp
sbb
sbb
cmp
push
loopne
or
mov
mov
jns
dec
out
cmpb
mov
jle
fldt
mov
imul
ss
iret
in
add
push
das
push
pop
xchg
mov
mov
add
push
pop
mov
fstl
nop
pop
insb
rorb
mov
or
mov
popf
push
mov
pushf
pop
sbb
mov
jp
jmp
xchg
divb
xchg
in
outsl
aaa
and
inc
popf
adc
sbb
cltd
fiaddl
sbb
mov
jle
je
aad
dec
xor
stos
add
sub
push
in
jns
mov
and
mov
pop
xor
jmp
sbb
test
stos
or
add
out
aaa
popf
push
mov
scas
stos
mov
xchg
xchg
mov
cmc
mov
xor
adc
int3
and
dec
pop
mov
push
data16
push
and
shrl
movsl
inc
mov
sub
add
pop
sub
lds
les
lret
pop
std
es
inc
es
notl
mov
ljmp
mov
lds
sub
repnz
outsb
pop
sbb
add
jns
jge
cmp
xchg
cli
xor
xor
or
sbb
je
filds
ret
bound
pop
rorb
adc
adc
mov
std
lock
jnp
cmp
jg
movsb
ljmp
test
mov
aam
mov
cwtl
adc
shrl
jg
inc
jl
xchg
lcall
test
je
jp
cmpsb
pop
fidivl
cs
fnstsw
adc
xchg
xor
add
mov
mov
lret
xor
or
rcll
enter
cltd
jne
pusha
test
xor
xor
lods
mov
pop
in
jb
dec
js
prefetchw
shrb
push
andb
scas
frstor
mov
and
pop
jns
push
lods
xor
ret
cmc
cmpb
popf
or
jmp
aaa
jb
xchg
mov
or
add
xchg
out
idivb
lods
jae
mov
in
push
dec
dec
cld
mov
mov
or
mov
adc
lret
sub
push
lds
xchg
pop
lcall
repnz
repnz
cmp
subb
test
pop
cmp
lds
xchg
push
mov
xchg
scas
cmp
imul
xor
push
leave
push
xchg
stc
stc
loope
mov
ds
and
enter
popa
jecxz
imul
mov
std
cmp
xor
std
in
or
xchg
lret
out
jno
mov
push
or
xorl
mov
es
daa
or
adc
push
jno
push
cmpsb
xchg
add
int
nop
cmp
ror
jg
cmpsl
or
mov
inc
iret
je
icebp
sub
ficoms
mov
icebp
add
push
dec
sub
inc
push
mov
stos
jne
and
movsl
lds
repz
ja
popf
and
lock
iret
mov
mov
iret
mov
jg
xor
fsub
jno
fs
arpl
ljmp
push
and
daa
or
arpl
sbb
fnstcw
fdiv
mov
xchg
imul
xchg
mov
jb
sbb
xor
or
pushf
rolb
mov
jno
movsb
xchg
cmp
sarl
push
sbb
fisubrl
popa
dec
outsl
xor
sbb
xor
xor
jb
sub
stc
dec
sub
push
iret
mov
lods
stos
testl
add
hlt
jg
gs
test
fmul
inc
test
ja
bound
daa
push
or
mov
and
in
cli
pop
mov
cld
push
daa
pop
jp
or
data16
pusha
sub
dec
fistl
or
shrb
pusha
fcoml
inc
xorl
gs
mov
call
jecxz
and
inc
add
stc
jecxz
pop
adc
mov
dec
fcoml
inc
xchg
scas
vpsraw
imul
test
pop
addr16
pop
pop
jmp
cmp
lcall
pop
adc
push
or
push
jle
and
lock
push
sub
cltd
push
pop
pop
mov
pop
data16
pop
push
mov
aaa
dec
pop
subb
sub
pop
adc
push
or
mov
mov
adc
rorl
add
clc
cmp
push
enter
mov
arpl
push
mov
clc
mov
lcall
jno
xor
mov
jl
add
fcomps
insl
fldz
ret
mov
jnp
add
sub
imul
jle
and
mov
dec
adc
jo
aas
and
push
jne
outsb
leave
dec
push
sub
push
addl
daa
es
cmp
hlt
rclb
add
cltd
adc
mov
imul
xor
mov
in
dec
mov
or
cmp
push
fwait
stos
cmp
inc
xchg
xchg
ja
in
outsl
lock
scas
mov
pop
mov
out
pop
and
pop
pop
imul
cmpsb
shlb
push
out
add
out
adc
inc
insl
jecxz
dec
add
sahf
mov
mov
push
std
jge
push
js
pop
jae
mov
xchg
call
xor
loopne
add
mov
mov
push
sbb
push
mov
pusha
dec
in
in
jge
jb
adc
sti
mov
mov
mov
jne
rcll
jp
sbb
or
jne
inc
ja
cmpsl
and
dec
or
add
testb
gs
or
out
fnstsw
adc
in
pusha
mov
popa
pop
xchg
sahf
into
push
scas
enter
push
mov
out
inc
sub
loope
xlat
loopne
pop
mov
cld
jb
adc
test
and
jmp
pop
or
xchg
out
out
xor
test
dec
xor
or
and
xor
mov
dec
bound
push
sub
jge
addr16
and
mov
pop
insb
popa
mov
cmp
hlt
sbb
pop
pop
in
xor
fidivrl
fadds
ret
add
add
or
sahf
sbb
stos
jg
mov
mov
add
or
inc
int
das
push
xchg
xchg
sub
adc
add
xor
and
aam
les
xchg
loop
shlb
inc
adc
jb
bound
xor
and
aam
les
xchg
loop
shlb
inc
adc
jb
arpl
xor
and
aam
les
xchg
loop
shll
and
jo
fs
bound
xor
in
aam
outsb
cmp
adcb
lret
cmp
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
in
scas
insb
mov
xchg
push
fisttpll
int3
push
mov
dec
mov
scas
insb
mov
cmp
sub
sbb
or
cld
cs
ds
add
jl
insb
mov
cmp
sub
sbb
or
cld
cs
sbb
fistpll
lds
mov
out
sahf
mov
or
out
aas
push
jge
out
dec
rol
popf
data16
cmp
lds
add
std
loope
sub
or
jnp
jns
mov
roll
push
mov
dec
je
stc
scas
insl
mov
in
cwtl
cmp
cmpsb
jle
cmp
mov
dec
add
jle
lret
leave
out
jmp
lcall
add
cld
movsb
or
in
shrl
rcr
and
pop
outsb
incl
sbb
pop
adc
data16
sbb
or
xchg
rcrl
sbb
cmp
jae
test
insb
xor
sahf
leave
out
in
in
lret
aas
cmp
testb
outsb
lods
sub
and
dec
sahf
cmp
sub
sbb
or
cld
cs
fmull
int3
push
mov
dec
mov
or
add
pop
mov
xchg
push
pop
aas
mov
test
enter
icebp
aaa
clc
adc
lret
das
fldt
jmp
sahf
pop
orb
cmpsl
je
scas
addl
add
jg
sbb
idivb
cld
insb
sti
jge
sub
sbb
or
cld
cs
fmull
int3
push
mov
dec
mov
scas
insb
mov
cmp
sub
sbb
or
cld
cs
fmull
int3
push
mov
dec
mov
scas
imul
dec
lcall
jmp
mov
pop
dec
xchg
jnp
mov
cld
xor
lods
cmp
mov
lea
mov
fistps
std
das
in
adc
jae
add
outsb
pop
fwait
test
adc
insl
or
push
xchg
lret
pavgw
lcall
cltd
imul
orl
or
or
mov
add
or
sub
inc
sbb
push
stos
push
mov
out
jnp
xor
pop
sub
mov
test
call
ret
push
adc
iret
dec
dec
call
sbb
and
jp
sar
fst
dec
pusha
and
cmp
insl
or
dec
inc
jge
pop
gs
stos
clc
mov
mov
ljmp
adc
aam
pop
xor
out
and
cmp
sti
and
push
fcoms
in
pop
fiaddl
cs
loopne
xchg
pop
dec
jl
fstpl
add
mov
test
orb
xchg
iret
fstl
mov
sbb
push
outsl
or
jne,pn
call
cmpl
cmc
shrb
cmp
inc
mov
shrb
adc
or
inc
orl
push
push
fcomps
push
push
mov
mov
push
int3
ja
insl
push
das
stos
push
test
jbe
mov
jae
push
lods
clc
movsl
cmp
mov
or
mov
int3
mov
scas
pop
test
cmp
xor
lahf
add
test
sub
or
cmpsl
adc
cmp
mov
xchg
push
ljmp
xor
movsl
sbb
ljmp
xor
jmp
repnz
and
les
in
sbb
mov
push
stos
xchg
mov
and
pop
movsl
ljmp
stc
daa
pop
imul
out
push
add
mov
test
outsl
sbb
iret
mov
mov
inc
mov
popa
mov
cmpsb
sahf
clc
push
lret
lds
add
sub
xchg
stos
adc
mov
xlat
arpl
mov
and
sahf
mov
xor
push
jnp
xchg
push
sub
add
out
jecxz
add
dec
pop
mov
out
icebp
fstpt
pop
xor
sub
ss
fwait
pavgw
stc
pop
fidivl
and
mov
out
les
imul
mov
sbb
mov
mov
out
popf
fisttps
jle
sbb
adc
out
arpl
sub
adc
sub
mov
icebp
inc
xchg
cltd
mov
mov
lds
orl
xchg
mov
jmp
mov
ds
xchg
stos
push
lods
mov
fidivrs
push
cmp
je
lahf
cmpl
xchg
xlat
divb
push
loopne
xorl
insb
dec
cwtl
add
inc
push
scas
sub
lret
ret
lcall
xchg
cld
lds
mov
mov
enter
jge
pop
repnz
test
and
add
aad
call
jbe
jp
dec
pop
jae
mov
jb
leavew
outsl
mov
inc
pop
pop
mov
pop
adc
jmp
xchg
xchg
out
vcmpsd
cmpsl
rol
cmpsl
adc
push
or
mov
xchg
sbb
mov
imul
dec
inc
add
in
push
mov
mov
xor
or
ret
int
shll
nop
xchg
cmpsl
ret
hlt
pop
mov
adcl
and
dec
jb
jmp
mov
jmp
push
sbb
cmpsb
test
push
jle
pushf
test
rcll
icebp
xchg
rcrb
mov
xor
push
jmp
out
cmp
adc
jg
sub
addr16
jbe
dec
pop
jo
and
xor
in
push
arpl
test
cmp
fdivrs
outsl
nop
mov
inc
shr
pop
out
jle
test
int
inc
or
test
shrb
push
repz
mov
mov
rcrl
inc
int
stos
cmp
movsl
shll
movsl
mov
xchg
mov
ret
mov
pop
popa
sbb
daa
push
jmp
dec
xchg
xor
push
jno
jns
mov
cmpsb
pop
xchg
in
pusha
loopne
mov
bound
adc
mov
mov
pop
or
dec
test
outsl
out
xchg
fucomi
out
dec
mov
cmp
test
dec
ds
push
faddl
les
cld
lods
scas
test
ds
movsb
and
push
mov
jle
jmp
lcall
out
push
test
test
lds
hlt
cmpl
cmp
arpl
xor
test
add
sub
fcomps
daa
jecxz
pusha
filds
xor
cmp
push
mov
mov
cwtl
flds
xchg
jns
fiaddl
out
ja
xor
sahf
adc
xlat
push
mov
push
cltd
inc
add
inc
cmp
pop
xchg
and
mov
lods
in
out
out
imul
les
adc
jg
push
ljmp
test
or
test
dec
xlat
bnd
dec
out
imul
fldt
lret
cli
test
xchg
dec
or
push
xor
loope
push
mov
in
xchg
sti
ret
lret
sbb
cmp
inc
xchg
add
and
fsts
out
sbb
mov
mov
lcall
push
dec
dec
pop
inc
mov
jg
adc
xchg
lret
aam
dec
and
shrb
nop
inc
mov
inc
mov
push
adc
ja
xchg
sbb
mov
pushf
ja
dec
push
test
pop
sbb
shrl
dec
sti
mov
popf
mov
add
or
add
stos
test
mov
cmpsl
adc
int3
xchg
and
push
fsts
pop
mov
in
loop
sub
or
mov
adc
js
lret
mov
js
mov
adc
fmull
mov
pop
or
das
push
pop
and
jl
cwtl
push
lods
repz
adc
mov
xlat
push
cmp
adc
mov
inc
sbb
scas
faddl
fidivs
fisubrl
sar
dec
inc
push
jge
adc
imul
fstpt
pusha
adc
aam
xchg
adc
test
add
incb
cltd
in
aas
test
xor
jg
mov
cld
mov
and
fists
xchg
fistps
fcomps
adc
jne
mov
pop
pop
addr16
fdivl
stos
jnp
xlat
shlb
mov
fs
push
xchg
add
sar
jg
mov
or
jmp
pop
pusha
leave
sub
pop
inc
pop
xchg
cld
std
into
cmp
and
mov
cwtl
jno
ret
stc
ds
mov
adc
xchg
mov
mov
inc
ss
sub
popa
mov
push
xor
adc
rcrl
inc
pushf
xlat
cmp
mov
push
xchg
cmp
pop
mov
test
fsubl
pop
lods
inc
in
sub
ss
daa
dec
adc
xchg
add
loope
adc
or
mov
and
pushf
cmp
inc
mov
or
jge
arpl
or
movsb
sub
and
inc
enter
sbb
adc
repnz
push
mov
mov
pop
inc
pop
dec
roll
neg
addr16
sbbb
jg
mov
fstpl
lret
add
mov
fs
pop
fnstsw
repnz
add
ret
movsl
ljmp
sbb
mov
and
sbb
pusha
sti
in
mov
das
jns
imul
loop
cltd
xchg
inc
out
xorl
popf
xorl
testb
adc
xor
push
jl
nop
iret
dec
sub
mov
scas
pusha
addb
clc
pop
js
jb
pop
adc
or
mov
xchg
jge
aam
loopne
xchg
sti
ret
sbbl
sbb
cltd
shll
inc
xchg
insb
or
jne
ljmp
jo
mov
mov
jnp
aad
arpl
in
push
mov
leave
lods
xchg
filds
das
cli
lods
aas
imul
ret
sbb
ret
addr16
fiadds
dec
imul
fxch
arpl
andb
icebp
cmp
mov
gs
iret
popa
or
loop
or
jne
xorl
imul
stos
gs
lods
fists
cmp
test
sbb
das
mov
mov
fisubrl
fbld
add
sbb
jne
push
push
inc
xchg
inc
out
or
xchg
jo
pop
mov
stc
loopne
sub
jl
or
jo
shr
push
jne
or
int
fidivs
pop
dec
push
xor
fmulp
fprem
imul
dec
xchg
pop
pop
hlt
adc
xchg
imul
jae
xor
rorl
stc
xchg
stc
mov
jnp
dec
mov
push
lahf
jno
push
jae
and
dec
fnsave
mov
push
push
xchg
int
fisubs
adc
cmp
push
das
push
fiaddl
int3
scas
addb
out
sub
push
test
test
shlb
mov
mov
lods
inc
loope
dec
cmp
rcrb
xor
mov
sbb
pop
pop
mov
mov
sub
add
imul
sti
dec
push
jae
jo
mov
push
sub
lcall
or
mov
addb
mov
ret
push
or
out
push
or
pop
push
sti
xchg
sub
ret
push
lods
pusha
mov
cmp
or
in
or
testl
sarl
inc
jmp
mov
ss
cmp
add
and
xchg
fstps
sbb
sbb
xchg
lock
shr
cs
cmc
adc
or
or
stos
aaa
mov
nop
mov
jmp
add
sbb
imul
lcall
xlat
push
adc
stos
fs
push
addr16
or
iret
adc
xlat
inc
or
ret
frstor
out
sub
cmp
hlt
divl
inc
xchg
dec
jecxz
cmpsl
push
std
push
imul
mov
lcall
pop
inc
and
pop
xchg
inc
outsl
outsl
xchg
xchg
inc
loope
xchg
out
or
in
in
jns
jne
sbb
cmp
addr16
xlat
in
psubd
jge
add
loop
test
outsb
gs
xchg
adc
sbb
mov
mov
jns
pop
push
sbb
mov
and
pop
dec
sub
lods
into
popf
sahf
mov
mov
add
cli
ja
sub
aas
sub
scas
push
shll
cmp
and
js
and
fldcw
in
iret
push
ret
lock
sti
jae
push
mov
xor
sarb
inc
ss
xchg
mov
push
daa
cmp
push
inc
mov
push
cltd
jg
nop
cmc
mov
jecxz
dec
out
mov
iret
dec
or
xor
xor
loope
sbb
fdiv
xchg
and
add
das
and
and
xchg
daa
push
dec
fsts
loop
adc
mov
dec
and
ret
xlat
jge
insb
sbb
push
nop
rcll
push
jbe
push
xor
repz
xchg
jne
out
mov
or
inc
mov
nop
adc
mov
arpl
sub
or
mov
scas
xlat
jae
jno
nop
jae
push
add
lds
outsb
pop
mov
icebp
mov
aaa
cmp
cmp
mov
adc
xor
sbb
mov
push
add
int3
sbb
xor
dec
pop
adc
addl
sub
popa
cmp
mov
xchg
js
adc
ficompl
cmp
push
in
xor
rorl
mov
out
fistpll
dec
lahf
cmp
sbb
pop
dec
mov
push
lods
out
inc
mov
jns
fsubr
cmp
addr16
in
push
xchg
inc
nop
pop
lods
out
scas
ficomps
outsb
mov
daa
xor
sub
sub
cs
test
loope
stc
in
jp
cs
mov
inc
add
stos
mov
stos
or
aaa
xor
mov
cltd
lret
mov
pop
cli
inc
rcrl
test
sbb
inc
push
stos
cmc
repnz
push
loopne
sbb
fidivrs
jb
xor
mov
push
mov
dec
lret
cli
lcall
and
push
shll
das
cmp
stos
adc
mov
mov
test
lcall
xchg
mov
or
dec
sub
and
mov
test
into
out
dec
push
movsl
loopne
sbb
out
xchg
ja
ds
jl
sub
pop
lock
push
insl
sub
jo
push
and
and
xchg
subl
idivb
ret
and
std
pop
mov
fsubr
push
sarb
movsb
dec
lret
push
mov
pop
xchg
std
and
imul
aas
mov
mov
in
dec
dec
inc
jecxz
mov
sub
dec
dec
xchg
mov
add
into
pop
xor
jb
cmp
jg
scas
push
push
std
and
imul
lock
and
lret
and
sub
das
in
shll
add
add
sarl
mov
lods
add
mull
jno
pop
add
notl
mov
mov
ja
cwtl
lds
iret
aas
fwait
xor
mov
in
fidivs
scas
pop
cwtl
je
dec
sub
bswap
inc
jbe
xorl
cmp
fisttpll
pop
adc
inc
enter
push
data16
adc
mov
mov
lods
push
rcrb
aas
mov
int
push
stos
call
jl
into
data16
jl
mov
out
rcl
lock
sbb
and
sub
outsb
push
inc
aam
mov
or
divb
mov
pushf
or
adc
xor
popf
ja
rcll
push
lods
add
jp
xor
mov
pop
mov
orl
daa
fsubrl
and
fsubrl
sarb
sub
les
add
or
jo
inc
fstpt
imul
aas
push
jmp
cmc
imul
imul
cmp
call
pop
sub
fisubrs
adc
outsl
dec
fcomip
xor
mov
push
or
dec
mov
jae
lahf
and
or
push
cwtl
cmpsb
xor
dec
mov
cli
push
scas
fwait
lea
imul
push
push
ret
mov
data16
into
push
loopne
popf
pusha
sbb
push
insl
dec
lods
cmpsl
jl
shr
lret
pop
cld
mov
test
jae
and
push
stc
mov
mov
js
inc
pop
xor
sbb
fnstsw
ret
xchg
jle
or
call
push
out
mov
ffree
cltd
stos
add
pop
sbbb
lods
dec
lret
mov
loope
mov
jo
adcb
pusha
lret
cltd
jae
jmp
sub
xchg
int
add
sub
sbb
in
ds
or
rclb
sbb
pop
and
inc
lahf
ljmp
fsubl
pop
ret
or
xor
xchg
inc
js
rcl
popa
std
cmp
aam
das
cmp
xchg
mov
dec
aam
pop
sbb
les
outsb
push
in
ret
pop
or
inc
arpl
or
mov
imul
mov
testl
mov
push
mov
mov
addr16
add
mov
aas
jmp
cld
in
jne
fprem1
stos
mov
xchg
imul
cs
adc
outsl
adc
xor
push
sbb
add
in
div
pcmpgtb
ret
ljmp
adc
sub
fcoms
stc
and
into
je
mov
push
jp
scas
scas
out
ds
int3
pop
inc
leave
fsubl
shr
fwait
adc
test
adc
ds
std
jge
push
outsb
jle
shll
std
test
pusha
mulb
add
sbb
inc
out
loop
outsl
cmp
nop
mov
je
and
mov
lahf
jb
dec
cmc
push
or
jecxz
mov
in
das
dec
dec
fsubrs
popa
je
sub
mov
bound
mov
lcall
lcall
sub
or
scas
pop
es
pop
in
dec
sub
adc
mov
fstps
mov
xor
lcall
cmc
sub
ds
incl
insb
in
mov
mov
cli
push
mov
in
jp
sub
pop
test
xor
lods
mov
lret
outsl
jmp
fisubl
mov
loope
daa
aad
pusha
fcmovnb
mov
fnstsw
inc
iret
int
add
dec
jl
sub
pop
mov
jecxz
loop
imul
mov
std
gs
loop
push
pop
pop
lret
pop
sarb
mov
insb
jg
into
dec
push
push
test
sahf
sarl
ret
mov
stos
ja
push
cmp
adc
fdivr
movsl
mov
fs
or
je
dec
dec
jae
fistps
in
cmp
mov
adc
aaa
fcmovb
cmp
fidivs
lods
mov
xchg
gs
or
imul
fwait
mov
sahf
adc
fistl
jmp
dec
inc
mulb
rorb
call
and
les
dec
outsb
subb
gs
hlt
xchg
mov
leave
mov
adc
mov
adc
inc
pop
fisttpl
lahf
mov
mov
mov
movsl
sarl
push
rorl
insb
ljmp
mov
cmpsb
fildll
xor
lea
inc
nop
push
xchg
and
scas
negl
or
lock
out
mov
in
lods
push
push
xor
adc
push
sbbl
out
adc
adc
imul
dec
stos
pop
icebp
mov
dec
mov
int3
pop
icebp
fistps
mov
push
nop
push
imul
and
es
js
in
mov
xorl
xchg
fldcw
mov
cld
mov
lods
pop
jg
adc
sub
cmc
in
pop
fistl
insl
sub
pop
xor
xchg
ret
in
sti
aad
jge
add
out
jp
ja
sbb
fsubrl
cmpsb
out
lea
and
mov
push
dec
clc
dec
divl
jge
dec
sti
js
push
pop
xchg
push
pop
fiaddl
mov
pop
push
jge
mov
jae
adc
movsl
xor
mov
scas
cmp
aad
ret
xlat
jnp
jl
inc
jno
test
cmp
loop
mov
imul
decb
hlt
popf
and
jecxz
lock
push
or
inc
fisubl
mov
inc
adc
ds
out
aam
out
add
cltd
cmp
insl
hlt
dec
or
in
pop
add
xchg
insb
mov
orl
push
int
push
push
xor
inc
sub
ret
mov
or
sbb
in
cld
clc
lea
xchg
int
jbe
add
sub
vrsqrtss
add
xor
mov
sbb
jp
pusha
ss
cmc
push
cmc
or
int
pop
sub
sbb
cmpsl
sbb
pop
xchg
and
mov
cmp
mov
cli
jle
js
cmp
std
push
xchg
jo
pushf
stos
mov
mov
adc
mov
repnz
push
add
fsubrs
ret
cmpsb
or
in
inc
dec
out
icebp
data16
xor
adc
cmc
outsl
pop
sahf
sbb
mov
inc
into
ds
jo
ret
adc
clc
inc
popa
dec
push
xchg
mov
xor
jnp
sub
outsb
mov
aas
mov
push
jnp
sub
dec
jg
xchg
fidivl
cmpsb
shlb
filds
dec
and
les
sahf
mov
mov
sti
in
jo
adc
sub
pop
mov
xchg
dec
jb
push
sub
mov
dec
stc
pop
dec
inc
in
lea
and
data16
xchg
ja
adc
xchg
test
cs
sbb
subps
iret
jbe
ret
lock
xchg
sub
repnz
cs
repnz
jne
fnstenv
mov
fistps
addb
leave
xchg
les
pop
mov
aaa
xchg
lret
add
jge
jo
xor
mov
jne
cmc
mov
out
iret
add
add
sub
sbb
adc
pop
das
mov
sbb
rcll
xchg
sub
fisttpl
cltd
sti
jo
das
push
pop
cmp
mov
cmp
sub
sbb
or
cld
cs
fmull
int3
push
mov
dec
mov
scas
insb
mov
cmp
sub
sbb
or
cld
cs
fmull
int3
push
mov
dec
mov
scas
insb
mov
cmp
sub
sbb
or
cld
cs
fmull
int3
push
mov
dec
lea
scas
insl
mov
cmp
sub
sbb
or
cld
cs
xchg
jbe
int3
imul
mov
mov
inc
or
adc
add
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
jb
popa
and
inc
xorb
push
add
adc
inc
mov
nop
roll
rclb
and
jo
in
adc
xor
mov
xorb
mov
ror
xchg
and
mov
inc
pop
movsbl
pop
xchg
outsl
ret
iret
movsb
repz
ffree
pop
xor
push
xor
dec
sub
mov
shl
mov
sahf
popf
mov
les
adc
push
clc
cmp
and
xor
clc
and
sbb
xor
cmpsl
cmp
rorl
adc
xor
and
out
stos
add
push
movsl
aas
jl
icebp
mov
xchg
mov
faddl
lcall
mov
push
test
imul
cld
popf
push
add
jecxz
adc
ret
enter
cwtl
cmp
repnz
xchg
rolb
rclb
inc
or
jo
pusha
adc
jnp
cmpsl
xor
stc
fsubrl
scas
sbb
and
add
pcmpgtw
add
mov
movsb
jmp
clc
xchg
in
cmp
add
and
and
in
push
sub
aad
not
cmc
mov
lods
clc
mov
stos
sbb
inc
adc
adc
pusha
adc
inc
icebp
mov
mov
mov
mov
shlb
and
inc
add
jo
pusha
adc
inc
icebp
mov
mov
mov
mov
shlb
notl
jmp
mov
enter
sub
inc
lock
inc
daa
leave
push
inc
push
pushf
sub
repz
out
roll
adc
xor
pusha
xor
sub
jmp
mov
call
adc
jg
mov
andb
lret
or
fwait
setnp
dec
cld
sub
dec
cmp
push
cmpsb
test
pop
mov
mov
xchg
cmpsb
insb
pop
test
mov
clc
fbstp
mov
pusha
mov
xchg
lcall
mov
pushfw
xchg
test
sbb
loop
sub
movsl
lcall
int3
fildll
or
movsl
cltd
in
sub
jg
jae
dec
scas
xor
mov
xor
pop
lcall
add
shld
lahf
lea
movsb
jle
jnp
pop
cmc
xor
je
gs
rol
xor
test
js
addb
jmp
xchg
ss
jmp
dec
pop
int3
fsubrl
clc
sahf
ret
leave
mov
addb
adc
or
push
adc
jp
jmp
insb
inc
mov
xchg
jmp
mov
pop
idivb
push
ficoms
pop
scas
ljmp
lock
mov
mov
lahf
pop
and
inc
pop
es
ljmp
test
mov
add
cmp
lret
lock
push
jno
pop
and
nop
out
lret
imul
iret
add
cmp
shll
or
jmp
lds
jmp
bound
repnz
lock
adc
mov
popf
sbb
je
data16
sbb
dec
fdivrl
pop
sarb
movsl
and
dec
pop
test
movsl
mov
push
dec
jl
fistpll
push
push
cmp
or
jne
cmp
mov
add
pop
mov
or
nop
loop
gs
dec
and
aad
lret
xchg
neg
pop
adc
push
std
mov
je
stos
adc
in
sbb
pushf
int
and
and
add
add
and
roll
adc
push
jae
lahf
outsb
std
mov
mov
mov
sahf
stos
movsl
popa
lahf
cmp
push
mov
inc
xor
fisttpl
pop
pop
mov
je
iret
cmp
mov
add
cmp
dec
sahf
sub
cwtl
jo
aaa
leave
subb
jg
mov
bound
not
clc
or
addr16
push
adc
fcompl
lcall
pusha
loopne
inc
popf
push
fisttps
ret
out
outsb
pop
insl
dec
mov
hlt
sub
pop
pop
xor
or
add
lods
add
push
in
add
imul
fsubl
mov
push
mov
test
push
pop
xchg
cmpsl
or
mov
ss
sbbb
mov
inc
ja
push
sub
outsl
or
aas
daa
jmp
inc
and
lahf
push
add
mov
mov
inc
lcall
mov
enter
pop
popa
push
and
sti
xor
xor
iret
nop
jo
test
dec
hlt
cmp
stos
imul
or
cmp
notb
aad
push
mov
gs
lcall
in
xchg
sar
test
int3
int
nop
aaa
sub
mov
mov
mov
xor
stos
dec
push
mov
pusha
xchg
call
dec
pop
repnz
pop
fstpt
cmpsl
cmp
ret
aad
jns
nop
lcall
and
out
cmp
add
xor
enter
lds
mov
push
popa
sbbl
scas
inc
adcb
jp
lcall
movsl
cwtl
push
sbb
test
negl
add
adc
dec
stos
sub
movsb
mov
mov
jmp
mov
xlat
and
stos
inc
cld
cmpsl
lea
pop
mov
push
adc
mov
rcll
push
push
pop
int
enter
into
push
notb
cmp
decb
adc
ret
cli
fs
imul
mov
mov
dec
xchg
xorl
and
adc
scas
xor
jae
repz
negb
adc
jo
std
cmc
or
jle
dec
lahf
jae
int
mul
test
xor
inc
xchg
gs
cmpsb
and
add
jmp
jno
dec
cltd
and
push
andb
fidivrs
les
aas
sbb
adc
lods
shll
mov
popa
outsl
cs
insl
xchg
gs
imul
sbb
jo
call
push
mov
test
push
sbb
jle
faddl
xchg
jp
ljmp
pusha
mov
call
jb
out
insb
pop
sbb
cmp
pop
inc
dec
push
xchg
insb
ja
repz
icebp
test
fwait
inc
xchg
adc
pop
inc
jp
mov
popf
add
sbb
ret
into
stos
ret
popa
ljmp
mov
dec
ja
sub
in
mov
inc
adc
jo
ss
lods
jnp
ss
shrl
cmc
mov
test
and
insl
push
iret
scas
fs
roll
rorb
pushf
mov
push
push
xlat
or
dec
or
lret
jmp
push
pop
sbb
addr16
sub
add
fldcw
mov
sbb
add
neg
test
scas
cld
cmp
jne
insl
mov
push
rclb
xchg
fstl
or
int
pop
xchg
out
nop
popa
mov
daa
test
sbb
xchg
and
sub
jns
repnz
jne
dec
cmp
mov
rorb
rcll
sbb
cmc
or
jmp
inc
fdivl
push
arpl
movsw
out
dec
ja
push
int
test
rol
lret
movsl
sbb
gs
popa
and
adc
test
dec
cmpsb
adc
and
sahf
lock
enter
mov
ret
and
and
popl
movsl
add
ss
mov
icebp
jno
mov
aam
dec
mov
ss
add
adc
fwait
cmp
mov
push
mov
and
push
mov
in
cld
sbb
in
xchg
lock
das
repz
mov
gs
in
ljmp
inc
call
mov
ret
outsb
jecxz
sbb
data16
add
mov
add
int3
imul
push
cmp
jb
aas
mov
mov
loope
stos
not
cmpsb
mov
or
push
cltd
scas
clc
push
scas
incb
jl
adc
cmp
mov
fildll
adc
push
subb
or
fcomps
adc
inc
mov
fsubrp
add
je
jne
std
lcall
ljmp
fdivrl
push
jnp
or
mov
and
test
and
data16
jge
ja
bound
pop
push
xchg
jge
ja
out
jne
pop
inc
push
push
mov
scas
xor
cld
adc
inc
and
mov
jo
adc
add
cmpsl
sub
xchg
cmp
repnz
gs
pop
lret
or
mov
adc
inc
sub
inc
mov
adc
stc
mov
xchg
pop
push
cld
pop
data16
cmpsl
xchg
dec
cmp
push
mov
jmp
sbb
add
pop
std
roll
mov
fs
adc
out
jmp
pop
cmpsl
shll
pop
fsubs
and
jp
loopne
and
scas
add
add
arpl
lahf
je
fcoms
call
in
je
mov
clc
mov
mov
loop
stc
add
pop
mov
cmc
idiv
cmp
repnz
insl
enter
lcall
mov
std
cmp
jge
daa
fiaddl
or
mov
push
sub
dec
stc
popf
push
out
sub
xchg
cmp
xchg
les
sbb
scas
in
mov
mov
add
fsubr
xchg
xor
dec
scas
nop
sbb
ficoml
mov
cld
add
ljmp
in
pop
pop
movsl
loop
sbb
fstl
inc
push
outsb
mov
mov
mov
lock
imul
insl
pop
xor
xchg
fs
jmp
jae
mov
adcl
adc
add
mov
and
fists
sub
adc
jp
fcomip
sub
mov
push
mov
sub
dec
stc
mov
in
adc
aaa
mov
scas
dec
sbb
daa
out
inc
mov
daa
hlt
and
xor
fists
imul
add
nop
jl
loop
aas
sarb
cmp
and
inc
pop
ja
add
xchg
add
daa
aad
pop
dec
add
xor
jge
push
lods
and
push
cmp
jbe
rolb
adc
cltd
mov
add
sub
sahf
int3
loopne
sub
jne
mov
insl
addl
xor
scas
or
mov
mov
fidivrl
or
adc
jle
add
or
add
push
stos
mov
call
xor
rcrl
cmpsl
cli
sets
icebp
lea
out
cmp
arpl
in
add
loope
mov
mov
sbb
push
add
cmp
cbtw
sub
sbb
ret
stos
jge
add
lea
push
jns
movsb
popl
cmp
jb
xor
and
push
mov
dec
insl
insb
push
hlt
adc
fbstp
in
xchg
dec
sub
daa
scas
fiaddl
pop
stc
sub
imul
int
mov
fs
mov
pop
inc
jl
scas
inc
fwait
out
push
cmp
push
aam
repnz
test
sti
sbb
xor
fwait
js
mov
fsubs
int3
dec
xor
pop
push
idivl
addl
cmc
test
jno
jb
mov
mov
mov
pushf
insl
sub
xchg
mov
push
dec
add
adc
adc
shl
test
add
and
insb
dec
in
cs
pop
js
xchg
add
inc
jp
and
insb
xchg
pop
jbe
pop
jg
movsb
out
je
adc
or
jle
mov
insl
and
dec
push
dec
push
mov
test
mov
clc
jns
pop
stc
xorb
test
jle
scas
jge
pop
ljmp
and
std
inc
lods
and
iret
and
dec
jbe
test
push
and
test
mov
add
push
movsl
sbb
sbb
js
aam
imul
aas
cmp
sub
adc
int
das
adc
xchg
lods
mov
and
imull
test
push
stos
fcompl
movsl
sbb
ret
push
mov
push
pusha
or
sbb
push
mov
bound
sub
jae
inc
xorb
cmp
push
pop
mov
add
xchg
jmp
dec
mov
pop
leave
sbb
push
lea
or
popf
mov
xchg
popf
mov
fsts
js
mov
adc
jecxz
mov
inc
inc
fdivrp
pop
mov
cmp
repnz
add
push
jae
fldenv
add
enter
cltd
repnz
movsb
bound
mov
xchg
inc
shll
cmp
out
or
pop
adc
jbe
insb
xlat
add
adc
rol
adcb
adc
xor
lds
sbb
cmp
or
inc
dec
pop
mov
push
daa
pop
mov
popa
push
sub
ret
mov
inc
daa
movsl
es
mov
or
stc
add
ss
and
xor
sbbb
mov
pushl
rorb
sbb
ss
mov
popf
dec
xor
sahf
je
scas
and
rolb
rorl
stc
adc
sbb
cmp
pop
sub
insb
pop
aaa
int
int
or
xor
dec
pop
lods
xor
pop
daa
pusha
push
mov
hlt
lock
movsl
mov
gs
add
adc
add
pushf
cltd
mov
mov
shlb
jnp
es
jae
dec
mov
out
negb
xor
or
dec
push
out
push
push
jecxz
ret
ljmp
push
mov
lret
jge
sbb
jge
mov
or
xor
out
sub
jns
mov
add
cmp
fildll
cmc
push
mov
jg
xchg
bound
or
rolb
stos
mov
sbb
dec
scas
xor
mov
push
gs
aad
sbb
cmp
mov
sbb
addr16
mov
mov
das
jg
adcb
fstps
mov
push
pop
fldenv
testb
mov
xchg
int
sub
xor
dec
jno
sbb
fs
inc
cld
or
test
fs
sbb
push
mov
sub
jno
dec
jmp
sbb
adcl
and
call
int3
push
loop
mov
xchg
and
gs
jns
dec
lcall
sbb
pushf
fcompl
inc
xchg
sub
rolb
in
jo
inc
enter
push
cmc
pushf
sbb
mov
adc
pop
jbe
and
mov
test
fdiv
fucom
icebp
rcrb
mov
dec
nop
sub
and
inc
and
and
sub
std
dec
aaa
xor
pop
add
push
pmulhuw
movsl
cmp
cmp
dec
dec
pop
daa
loopne
jbe
lret
adc
shlb
sub
ret
inc
pop
rol
dec
cmpsb
lods
cwtl
shr
push
dec
mov
and
or
cli
scas
arpl
cmp
mov
sbb
sahf
mov
stc
dec
and
sarl
test
iret
xorl
in
enter
push
hlt
leave
lahf
sub
popf
daa
lret
cmp
iret
jp
xchg
jno
lret
daa
mov
test
aas
lods
in
xchg
in
movsb
bound
fwait
adc
popf
sti
mov
lods
ret
adc
xchg
stos
fcomps
mov
xchg
je
cmp
aad
orb
jecxz
push
aas
mov
jnp
sti
cmp
shll
sbb
jae
pop
push
add
sarb
pop
mov
js
outsb
pop
push
xorb
sub
sbb
loopne
push
xchg
out
xor
push
jl
testl
adc
jno
push
or
jmp
lock
sub
das
lcall
dec
jns
mov
les
mov
inc
fwait
mov
jns
sub
mov
inc
dec
popa
dec
enter
or
out
mov
int3
jmp
arpl
xchg
inc
out
icebp
addr16
add
ja
dec
call
and
hlt
imul
adc
je
data16
js
nop
nop
imul
sarl
mov
cmp
lds
add
sbb
jge,pn
push
test
les
in
jb
rcrb
jp
push
push
pop
adc
das
stos
gs
clc
cld
mov
and
out
cli
and
sbb
mov
push
jecxz
out
repnz
jle
pop
les
sbb
cltd
test
test
fwait
jne
cwtl
jne
adc
xorl
shrb
and
popf
stos
lcall
clc
add
sub
xchg
mov
lods
push
out
daa
cmp
sub
mov
in
cmpsb
in
lds
lcall
cmpsb
push
push
push
lods
aas
dec
movl
outsb
lret
in
daa
daa
or
cmpsb
add
mov
push
fnstcw
pushf
adc
mov
mov
call
imul
add
adc
jmp
pop
adc
iret
xor
jnp
das
xor
dec
mov
and
fldl
pop
inc
pop
iret
ret
or
adc
adc
jge
repz
popa
mov
adc
mov
lock
rorb
lcall
jae
call
lret
cmp
jae
jnp
lret
mov
push
inc
adc
push
lods
adc
xchg
inc
cmp
shlb
lahf
cmc
shlb
das
lock
out
mov
mov
shlb
jecxz
out
shll
jecxz
xchg
add
inc
add
bound
xchg
jbe
pop
in
dec
rcl
add
mov
adc
pop
stos
push
push
mov
lock
loop
pusha
cmc
enter
je
pop
je
jmp
dec
mov
int3
mov
adc
out
mov
jno
or
push
shll
cld
and
sub
pop
xor
sarl
xchg
xor
cmp
xchg
cmpsl
rcl
mov
cmc
jmp
dec
and
mov
xchg
aaa
adc
pop
rorl
cwtl
das
jns
ja
je
sbb
xchg
and
jne
pop
std
lret
iret
mov
pop
sub
icebp
push
adc
mov
sbb
adc
gs
enter
mov
pop
or
fildl
inc
das
out
scas
adc
nop
inc
dec
sbb
test
out
cli
or
lds
mov
xchg
inc
mov
out
ljmp
daa
mov
movsb
clc
popa
lcall
fldcw
loop
cwtl
sbb
sub
xlat
inc
roll
xor
in
cmpsl
daa
into
sub
adc
mov
mov
or
out
adc
movsl
iret
imul
jns
fisubrs
stos
daa
jp
sbb
sbb
jns
ds
sahf
aas
mov
xchg
jo
arpl
mov
pop
int
xor
pop
sbb
aam
in
push
fisubrl
or
sbb
dec
jle
cmp
push
shll
mov
pop
call
xor
loope
mov
bound
pop
mov
push
add
cld
or
or
jne
mov
jae
jnp
addr16
call
shll
aad
jp
cmc
test
div
add
mov
pop
cmp
mov
add
out
xor
andb
out
pop
xlat
mov
iret
pop
push
leave
pop
pop
rcrb
in
mov
and
jp
cmc
fsubs
cld
aam
cmp
jp
or
pop
jl
pop
mov
adc
dec
dec
cmp
jge
push
shlb
ret
addr16
out
call
xchg
test
fld
xchg
add
bound
xchg
out
in
hlt
sub
push
mov
outsl
mov
lods
push
sarb
scas
jae
mov
mov
xor
mov
xchg
mov
mov
jp
jae
cmp
lret
clc
and
nop
adc
xor
xchg
sub
es
ds
xchg
pop
sub
insl
dec
lea
pop
pop
lahf
and
pop
jle
cld
enter
mov
mov
je
mov
or
mov
sbb
adc
push
loopne
mov
pop
or
test
mov
mov
mov
push
in
add
fwait
adc
add
push
xlat
cwtl
sbb
add
xchg
pusha
jns
aam
test
pop
or
sbb
shlb
ljmp
sub
jge
inc
add
and
mov
fucomi
jo
shll
jl
ret
adcb
nop
fidivs
add
sub
dec
dec
xor
add
jmp
jg
les
pusha
xchg
mov
cmp
inc
cmpsb
and
pmaxsw
push
mov
jb
mov
cmp
and
sub
inc
dec
mov
inc
mov
arpl
sub
sahf
scas
lods
xchg
push
pop
lock
cmp
imul
xchg
xor
decl
rol
sub
mov
xchg
mov
push
fidivs
fldl
jl
cmp
es
pushf
test
les
jbe
and
ds
sbb
mov
push
add
or
xchg
test
ret
push
cmpsb
jge
xchg
adc
cli
inc
or
dec
loope
lahf
aam
add
int
rcrl
lods
cmp
dec
cmp
out
lret
push
bound
scas
nop
movsl
test
clc
fwait
and
jnp
shl
std
jns
dec
int3
nopl
aaa
sbb
loope
lret
mov
cmp
adc
cmp
mov
or
sarl
mov
loop
ljmp
xor
push
mov
or
xchg
imul
mov
jle
test
das
outsb
push
std
lea
cmp
testl
adc
inc
pop
add
cmp
cltd
jnp
in
inc
test
mov
pop
mov
sbb
mov
push
cmp
mov
mov
jnp
pop
ficoms
pop
loope
or
sbb
ds
test
pushf
aad
cmpsb
cmpsb
imul
and
stos
xor
addr16
inc
lahf
pop
and
mov
and
jl
add
jo
pusha
adc
inc
icebp
mov
mov
mov
mov
shlb
and
inc
add
jo
pusha
adc
inc
icebp
mov
mov
mov
mov
shlb
push
mov
push
roll
loope
and
mov
xchg
lock
or
popa
add
jo
pusha
adc
addl
nop
shl
js
pop
outsb
das
jle
mov
pushf
lods
into
mov
roll
outsb
sbb
pop
dec
cs
mov
mov
pushf
lods
into
mov
mov
or
sbb
sub
cmp
mov
pop
ds
dec
jl
mov
pushf
lods
into
mov
mov
or
aas
jle
sub
dec
imul
sbb
shr
clc
mov
add
push
add
insl
lock
sbb
fisttpl
jmp
js
les
inc
and
sub
add
icebp
xchg
shll
pop
icebp
dec
fdivl
leave
mov
and
jb
xchg
dec
subl
and
or
jl
mov
pushf
jge
add
imul
cltd
adc
mov
push
mov
sbb
out
icebp
dec
xchg
jae
jl
dec
dec
inc
and
fwait
mov
sub
mov
xchg
jno
arpl
outsl
test
daa
push
fldt
xor
cld
jle
sbb
jle
pop
adc
sbb
sar
sub
cld
pop
inc
out
pushf
lods
into
mov
mov
or
sbb
sub
cmp
dec
cs
ds
push
jl
int
call
mov
ret
mov
dec
or
jns
sub
inc
sbb
pop
dec
cmp
out
stc
cld
leave
into
shrb
stc
scas
sahf
imul
cmp
dec
dec
xor
imul
jmp
cmpsb
sarb
in
mov
sahf
or
sbb
sub
cmp
dec
cs
ds
push
jl
mov
pushf
lods
into
mov
mov
or
sbb
sub
cmp
dec
cs
ds
push
jl
mov
mov
cltd
xor
add
lock
mov
fwait
enter
mov
adc
sbb
mov
push
cmovge
or
sbb
cli
add
mov
push
cltd
push
decb
mov
xor
cwtl
or
sahf
ss
jno
adc
push
sub
xchg
in
lods
loope
fisubs
push
lods
cmp
xchg
sbb
jne
cwtl
movsb
mov
mov
jb
and
call
dec
push
mov
lcall
add
xlat
daa
cs
fldenv
or
pop
sub
pop
lahf
jns
jo
ret
inc
mov
push
or
rcr
jle
add
clc
mov
jle
ret
rcll
shl
jno
insb
sarb
or
mov
shl
in
sub
cmp
loop
xchg
mov
and
int
adc
sbb
or
cmp
clc
and
mov
fstpt
pop
ds
arpl
out
cli
xor
pop
ljmp
fdivl
cmp
inc
insl
and
push
jmp
inc
out
push
mov
movsb
fnsave
sbb
adc
fiadds
loope
add
cmpsb
inc
pop
xor
adc
in
jne
xlat
add
jne
sub
iret
pushf
clc
mov
cmpsl
mov
pop
mov
or
je
out
xlat
lgs
loop
stos
ret
stc
jg
dec
es
sbb
daa
in
xchg
sbb
fcmovbe
sub
cmp
mov
lds
fbstp
int3
sub
and
push
in
cmp
fadd
cmpsl
inc
or
xchg
int3
jae,pt
into
test
xchg
and
test
nop
loopne
xor
sub
cmp
iret
fsubrl
add
sub
mov
roll
jns
and
mov
or
sbb
sbb
adc
xor
inc
lcall
pusha
loope
xor
pop
arpl
xchg
and
xor
or
inc
enter
loop
pop
je
jecxz
aaa
je
xchg
dec
int
pop
mov
dec
cmp
sti
loopne
mov
sub
idivl
dec
jae
movsb
lsl
mov
insb
xor
jb
xorl
daa
leave
stc
pop
cmp
mov
dec
sub
xchg
xor
mov
mov
inc
test
mov
lds
enter
and
popl
push
xchg
cmc
icebp
outsl
add
lds
sub
and
mov
xor
dec
cmp
and
adc
andb
mov
cld
dec
xchg
into
in
push
test
xlat
lahf
dec
addr16
in
popa
stos
mov
xorl
sub
punpcklwd
imul
sub
leave
fsubrs
sbb
pop
add
aam
lcall
loopne
jge
xchg
sbb
inc
cmp
mov
sbb
loop
fwait
repz
testl
imul
add
rcrb
and
iret
add
xor
aas
sub
mov
pop
sbb
xor
jmp
lret
fiadds
cmp
push
test
repnz
fucom
test
adc
jmp
xor
inc
mov
jmp
repnz
sbb
int3
scas
xchg
adc
fnstsw
stos
mov
std
xchg
or
stos
bound
sub
xlat
push
mov
xor
sbb
inc
scas
outsl
push
ja
push
adc
faddl
dec
dec
sub
push
hlt
mov
push
cmp
cmp
sahf
mov
push
pcmpgtd
mov
mov
xor
xor
add
and
inc
out
sbb
pusha
cli
xchg
es
or
pop
push
sarb
add
daa
clc
fcmovbe
cmp
cli
repnz
dec
add
fstp
adc
mov
sub
cmp
sub
enter
movsb
inc
fnstenv
lret
xor
ljmp
adc
cwtl
and
mov
repnz
push
pushf
pop
shlb
sti
cmp
into
int
xor
xor
mov
push
jnp
mov
pop
push
pusha
popa
push
into
add
test
mov
stc
ss
scas
sbb
movsl
dec
and
outsl
popa
cmp
mov
pop
or
jbe
xlat
outsb
sbb
jmpw
jecxz
fsubl
fnstenv
dec
xchg
xor
pop
jne
icebp
xchg
add
paddusw
fcmovu
and
sbb
push
in
fs
mov
inc
and
sub
daa
stos
or
fistpl
std
xor
into
dec
sti
inc
cmp
mov
xchg
mov
sub
add
mov
psraw
pushf
stc
push
movsl
sub
push
adc
aaa
in
fsubrs
or
mov
into
lds
add
mov
sbb
rorl
pop
movsl
fldenv
adcb
jp
inc
jp
sti
enter
cwtl
lahf
jo
clc
add
adc
jnp
stos
push
insl
sub
xchg
int
xchg
mov
das
fiadds
xor
jp
sbbb
mov
rcll
shll
cmpsl
cmp
faddl
xchg
loope
imul
std
mov
hlt
out
jns
sub
cmc
movsl
add
or
loop
pop
pop
mov
mov
or
push
sub
pop
dec
pop
push
pusha
and
into
push
icebp
ficoml
xlat
cli
insb
and
dec
push
fsubl
jle
jg
and
rorl
adc
add
dec
lret
cmp
xlat
movsl
adc
sub
arpl
push
fcmovnbe
pop
or
mov
adc
sbb
ret
das
sbb
cmp
flds
sub
sbb
loopne
insb
mov
bound
scas
mov
sub
inc
cltd
xchg
or
adc
adc
xchg
fstl
mov
int3
pop
sar
jb
bound
cmc
cwtl
dec
mov
arpl
mov
xchg
and
xchg
cmpb
push
push
pop
mov
mov
outsb
pushf
repz
ficoml
mov
push
push
sbb
out
cmpsb
add
sbb
call
dec
xor
jno
mov
lahf
push
jo
sub
push
lret
test
arpl
xor
adc
mov
aam
orb
rol
push
std
mov
arpl
loopne
mov
mov
call
cmp
outsb
mov
fwait
subb
mov
pop
jne
adcb
popa
int
ljmp
mov
jmp
xor
inc
rcl
dec
add
mov
data16
lret
fidivs
push
xor
push
cltd
sub
xchg
mov
push
sub
ficoms
int
cmp
out
push
cltd
jl
mov
mov
add
add
mov
mov
jle
divb
pop
arpl
add
or
sub
jmp
adc
bound
mov
add
and
leave
mov
cmp
pop
add
popf
push
pop
jmp
mov
iret
scas
or
insl
iret
pop
mov
out
pop
dec
fadd
pusha
test
or
sti
ja
mov
lds
mov
sub
popf
xchg
mov
adc
dec
inc
adc
cmp
int3
jae
mov
jecxz
push
shl
and
scas
pop
bound
cmp
cltd
mov
leave
int
js
jb
nop
insl
push
and
xor
mov
mov
jo
out
std
inc
ds
mov
jge
ja
idivb
ljmp
mov
add
pop
and
movsl
add
jmp
pusha
pop
cmp
aad
dec
and
lea
add
cmpb
iret
sub
adc
mov
sahf
leave
adc
push
push
xor
mov
mov
outsb
pop
stc
fcompl
dec
pusha
mov
and
mov
daa
push
or
lcall
xor
push
out
imul
mov
adc
add
imul
and
push
mov
and
cld
inc
sub
dec
sbb
mov
in
out
or
inc
mov
lret
popf
pop
mov
sbb
jl
mov
into
xor
xchg
push
lods
arpl
test
push
add
xchg
xlat
adc
jp
mov
mov
pusha
shl
lods
scas
xchg
jmp
addb
mov
and
sahf
test
movsb
mov
xchg
ss
inc
lea
out
mov
pop
mov
push
cmc
xchg
push
aas
inc
mov
adc
fucomip
orl
pop
jnp
mov
jmp
pop
insb
orb
mov
pop
dec
aaa
leave
dec
fsubrs
or
mov
or
not
incl
popa
pop
sub
cltd
test
loopne
jmp
push
jne
dec
add
addl
mov
dec
pop
pop
dec
jnp
out
dec
aam
xor
mov
adc
lods
xchg
xor
cld
mov
dec
hlt
cli
ja
and
jnp
test
dec
jmp
and
pop
subb
mov
push
add
fwait
mov
in
ja
dec
lret
add
pop
mov
lahf
repz
outsb
rclb
add
xor
pop
dec
stc
rcll
das
cmpsl
adc
dec
mov
adc
jo
inc
popf
mov
mov
pop
jg
jnp
xchg
ret
fists
pop
mov
mov
add
out
inc
lock
out
dec
lahf
jg
ja
lahf
loopne
icebp
outsl
or
pop
mov
dec
cmc
stos
adc
xor
mov
push
dec
jb
in
jecxz
cmp
jmp
mov
mov
push
xchg
sub
shll
adc
jo
shl
xchg
outsl
std
neg
mov
lret
lock
bound
idivb
lret
ss
iret
call
cmovg
adc
int3
rolb
rorb
add
and
int3
call
into
sbb
cmpsb
sbb
mov
xchg
push
sub
adc
divl
scas
cmp
dec
and
clc
mov
cwtl
pop
hlt
cmp
add
cwtl
adc
adc
mov
movsb
and
xchg
outsb
xor
cmp
into
push
std
stos
movsl
mov
lret
jl
in
sub
adcb
arpl
lahf
mov
jge
leave
mov
xchg
stos
xor
js
mov
add
sub
rclb
inc
mov
std
xchg
push
fisubrs
dec
test
mov
aaa
lods
mov
ljmp
mov
jmp
scas
les
cmp
popa
mov
icebp
adc
subb
dec
andb
and
mov
mov
cltd
lret
out
sbb
push
shlw
sahf
sbb
xor
fidivl
push
ljmp
xor
into
lcall
dec
stos
adc
repnz
and
loopne
inc
push
cs
mov
pop
xchg
pop
insb
imul
das
mov
das
mov
vpcomd
or
movsb
pop
inc
aaa
fisttpl
mov
sub
sbb
adcl
repnz
inc
enter
fsts
push
or
out
adc
dec
xor
cmp
aaa
push
sub
prefetch
or
jno
dec
and
and
sbb
repnz
pop
adc
cmp
js
ret
lcall
ljmp
pop
xchg
jl
in
jl
inc
xor
jae
and
fiaddl
pop
cmp
dec
and
insb
xlat
mov
jns
dec
stos
outsl
jle
jmp
adc
shll
hlt
cmp
jo
popf
or
push
push
movsb
mov
lods
sub
mov
xor
lret
std
imul
push
adc
xor
ret
sbb
dec
icebp
shl
sti
icebp
neg
pop
lds
outsb
push
and
bound
sar
lret
out
add
and
ljmp
push
ss
or
jle
cmp
jns
adcl
mov
sbb
jbe
testl
pusha
add
rep
popf
push
cli
xlat
out
adc
inc
xchg
add
outsb
test
mov
dec
pop
mov
cmpsb
pop
js
xor
and
fadds
lds
enter
cmc
sub
jne
inc
or
arpl
mov
jbe
add
sti
stc
xchg
sbb
xlat
jnp
add
xor
roll
mov
icebp
inc
sub
mov
stc
lahf
adc
cltd
out
insl
sub
cltd
popl
xchg
rolb
pop
jge
adc
aad
in
add
mov
int
pop
cmp
fsts
divl
push
loopne
jns
sarb
fistpll
push
sti
repz
jmp
aam
or
xchg
dec
inc
fistps
cld
mov
sub
push
xor
mov
rcrb
dec
sub
or
fdivl
rcll
pop
xchg
xchg
sub
shrb
in
fimuls
jb
iret
dec
mov
pop
hlt
sbb
cmp
mov
call
xchg
iret
aaa
and
mov
shll
mov
mov
xchg
inc
xchg
addr16
in
jnp
mov
mov
ret
insb
mov
enter
pop
xchg
mov
jo
mov
insb
push
ret
cmp
mov
into
pop
inc
arpl
dec
ficoms
jnp
ljmp
aam
shrl
js
jb
fisttps
push
jno
inc
dec
in
pop
adc
cmpsl
pop
jecxz
popa
push
jnp
push
stos
cmp
and
lret
sbb
vmptrld
js
movsb
sub
adc
bound
je
dec
jge
or
sub
clc
repnz
adc
push
mov
sbb
mov
mov
loop
shlb
inc
pop
les
inc
jle
mov
push
cmp
mov
test
cli
aad
sbb
aam
aas
mov
dec
mov
sahf
in
in
insl
mov
mov
ret
add
int
mov
lock
aam
push
mov
xorl
fcom
mov
push
fwait
in
xchg
ret
and
sub
call
test
xlat
mov
and
sbb
xchg
push
sbb
and
push
jmp
jmp
mov
adc
lock
xchg
lods
inc
jne
cmpl
jmp
adc
ret
mov
sarl
or
fistpl
sub
ret
mov
jecxz
mov
ljmp
mov
jp
or
lret
mov
cmp
rcll
jg
loop
test
mov
scas
pop
mov
cli
xor
stos
ljmp
push
mov
test
aam
inc
jne
das
roll
aam
cmp
mov
jecxz
mov
sbb
nop
fldl2e
dec
dec
out
jnp
scas
lods
cwtl
outsb
lret
scas
ficompl
loopne
out
fildl
sub
fcmovbe
call
cmp
mov
loope
adc
jne
xorl
xor
bound
aaa
pop
pop
call
mov
push
bnd
dec
dec
inc
les
sub
sub
dec
lods
push
mov
aad
ja
xchg
fsubs
js
test
push
mov
mov
cwtl
pop
pop
test
sub
pop
cmp
into
loop
rcrb
pop
insl
pushf
xchg
leave
outsb
sub
pop
jle
add
xor
pop
add
loope
pushf
add
cmp
inc
mov
aad
jne
sbb
ret
arpl
dec
fsts
dec
and
out
inc
xor
loopne
dec
ret
jo
mov
addb
aas
inc
adc
jp
ss
outsb
jl
xchg
nop
testl
outsl
mov
xchg
data16
inc
sbb
mov
pushf
sub
lods
pusha
jno
scas
dec
out
mov
idivl
mov
lods
repnz
adc
out
add
cmp
outsl
inc
inc
xor
pop
dec
in
mov
xchg
clc
cs
xchg
repz
mov
xchg
dec
movsb
jno
xchg
dec
dec
adc
adc
sbb
negl
mov
pop
mov
pop
jae
mov
jb
mov
in
icebp
in
mov
jb
int3
jecxz
jl
adc
jmp
adc
out
dec
jb
push
push
in
mov
xchg
push
push
lcall
jmp
sub
stos
push
bound
xor
aad
fs
adc
mov
jo
add
sub
mov
jo
mov
sbb
and
cmp
cs
jle
fcomip
jb
cmp
xchg
daa
lea
jns
lock
mov
jg
mov
fdivl
mov
jp
mov
or
jns
xchg
cmp
jnp
sti
dec
xor
jbe
inc
int3
in
xor
adc
dec
rcr
mov
xor
and
pop
sahf
rcl
inc
test
jns
sbb
pop
and
mov
sub
lds
pop
dec
outsl
sti
insl
leave
movsb
insl
inc
xchg
or
mov
adc
into
or
xchg
add
pop
mov
inc
nopl
imul
je
mov
stos
jo
dec
fs
repnz
pop
or
adcl
out
or
pop
fildl
aas
and
xor
adc
add
inc
stos
or
sub
fwait
cmpl
push
icebp
out
pop
inc
mov
xchg
xchg
mov
aas
leave
mov
out
sbbb
cwtl
xchg
rcrl
pop
sub
mov
or
out
xchg
add
sub
sub
sub
mov
test
inc
cld
push
shll
scas
and
mov
out
sbb
test
push
cmpsb
movb
mov
or
xchg
repz
fisubl
pop
push
insl
fisubs
inc
iret
push
test
mov
lds
stc
xor
xchg
mov
je
cwtl
fnstsw
or
test
add
dec
lods
xor
outsl
call
jmp
inc
mov
ss
adc
cld
add
sub
decb
daa
test
adc
mov
jne
mov
push
push
mov
mov
sbb
or
das
add
pop
loope
imul
xchg
pop
dec
pop
into
loope
and
cmp
test
lahf
mov
fwait
mov
push
in
pop
mov
decb
ret
or
fdivrs
or
in
jnp
test
xor
adc
push
dec
fnsave
or
ljmp
push
sbb
xchg
dec
cmp
mov
mov
inc
sbb
add
xchg
sahf
mov
push
xchg
sti
mov
nop
in
and
add
enter
add
dec
dec
jbe
ficompl
cmp
loop
jp
dec
push
jp
rolb
xchg
sahf
cmc
out
pop
call
mov
fadd
xchg
jle
cmp
or
ds
and
outsl
loop
or
addr16
clc
shr
jle
pop
pop
std
and
jp
xchg
sbb
mov
jg
inc
pop
cwtl
push
xchg
lock
cmp
xchg
mov
xchg
pop
lahf
add
leave
sub
sbb
lods
pusha
cld
imul
adc
pop
fucom
in
mov
sysexit
stc
or
inc
xor
ljmp
mov
sub
imul
adc
mov
repnz
sub
inc
out
int
lret
inc
xor
pop
sbb
lds
sbb
cli
pop
aam
ja
aaa
xchg
lock
imul
stos
insl
ja
mov
mov
insl
gs
lds
ret
movsl
test
and
adc
jle
jnp
std
decl
sub
pop
ficoms
push
shl
data16
sbb
mov
jne
or
movsl
fiadds
fs
and
cmpsb
lahf
push
in
les
outsl
mov
cmc
push
insb
adc
xlat
xchg
mov
sbb
arpl
pop
or
jbe
pop
sbb
insl
ljmp
test
jbe
mov
test
mov
mov
pusha
push
push
mov
xor
mov
cmpsl
mov
lcall
lret
out
into
test
stc
loopne
lret
enter
test
mov
xor
push
jp
fidivl
sub
in
push
jb
testl
div
lods
sahf
inc
push
mov
add
and
jno
mov
push
invd
or
outsb
subl
jp
outsb
js
jnp
std
dec
jne
cmpsb
mov
stos
jmp
dec
sub
push
xchg
jmp
push
mov
inc
fstpl
aad
push
fnstcw
and
adc
adc
int
pusha
cmpsb
push
add
push
sub
sbb
sbbb
inc
andl
sbb
xchg
pushf
pop
mov
mov
cmp
sub
aaa
jle
add
dec
push
add
sahf
stos
ljmp
cmp
lea
fmul
add
push
lcall
int3
scas
fdivrl
or
sbb
sub
cmp
dec
cs
ds
push
jl
mov
pushf
lods
into
mov
mov
or
sbb
sub
cmp
dec
cs
ds
push
jl
mov
sbb
sub
mov
ds
mov
out
sbb
sub
cmp
dec
cs
ds
push
jl
mov
pushf
lods
into
mov
mov
or
sbb
xchg
sub
sub
sbb
or
pop
js
push
adc
jp
pop
dec
dec
or
clc
lret
fsubr
enter
call
pop
js
push
sbb
or
cmp
sub
lret
fsubr
enter
test
cwtl
stos
mov
dec
push
sbb
or
cmp
sub
fcmovb
lret
test
enter
int3
hlt
std
les
or
movsb
pop
decb
jmp
sbb
adc
adc
ljmp
dec
out
xor
mov
xor
add
outsl
leave
gs
and
insl
sarl
outsl
sbb
fidivrl
mov
or
mov
push
pop
xchg
or
jmp
sbb
sbb
icebp
inc
pop
fcmove
ja
int3
aaa
fs
clc
mov
in
xchg
adc
add
cmp
sub
mov
arpl
pop
jo
in
pop
cltd
mov
nop
cmp
repz
sub
shll
stc
add
scas
enter
pop
mov
js
push
sbb
or
cmp
sub
lret
fsubr
enter
test
cwtl
stos
into
sbb
and
jbe
inc
imul
into
sbbl
sbb
in
pop
cmp
and
pop
nopl
push
cmp
or
mov
enter
xor
cs
sub
cmp
push
or
cmp
sub
lret
fsubr
enter
test
cwtl
stos
mov
dec
push
sbb
or
cmp
sub
lret
fsubr
enter
test
cwtl
stos
mov
out
jge
stos
dec
cltd
sar
orl
mov
mov
mov
xchg
cmp
jnp
xor
push
xchg
mull
aad
insb
add
mov
dec
xchg
adc
adc
addr16
add
add
dec
jle
pop
mov
cld
sub
mov
das
push
jbe
ret
adc
mov
or
jle
xlat
aas
in
dec
cmp
lods
inc
leave
cmp
pop
xor
ret
dec
xor
jge
les
pop
xchg
shlb
outsl
mov
js
xor
hlt
xchg
push
push
sbb
dec
adc
lret
push
aad
sub
subb
or
dec
fisttps
inc
cltd
lods
xchg
clc
push
stos
jno
xor
and
and
ds
aaa
aam
fs
mov
sub
dec
push
mov
bound
add
mov
mov
loop
addr16
hlt
xor
lea
lods
es
mov
js
mulb
push
mov
jnp
sub
mov
xchg
and
adc
inc
push
dec
sbb
cmc
int3
sbb
xchg
icebp
xchg
aam
cmpsl
or
addr16
cld
xchg
push
shlb
test
movsb
adc
mov
repz
out
loopne
jae
sbb
cltd
into
adc
les
leave
popa
and
cltd
std
mov
inc
loope
lock
sarb
jno
push
cld
xlat
arpl
sbb
push
nop
and
and
inc
sbb
pop
outsl
mov
push
ss
jb
pop
clc
aaa
or
jmp
and
or
or
xlat
jmp
pop
mov
lods
test
mov
cmp
popf
sbb
out
xchg
mov
or
stos
add
xchg
mov
cs
or
ljmp
or
lea
sub
pop
cmp
push
adc
stos
es
adc
sbb
scas
addr16
push
fcompl
xchg
sbb
pop
mov
mov
bound
dec
add
adcl
jl
xor
xchg
jno
pop
sti
mov
dec
and
jb
push
jle
je
andb
gs
lret
decl
ret
cmp
or
jne
mov
out
jle
push
dec
and
xchg
fdivl
xor
inc
loope
or
inc
xchg
imul
mov
lahf
imul
mov
adc
push
imul
iret
stos
imul
xchg
push
dec
decl
iret
inc
dec
mov
negl
sbb
push
xchg
es
inc
les
mov
jmp
out
push
adc
subb
gs
lods
stc
jle
leave
ret
leave
cmp
dec
sub
xor
repnz
mov
test
sbb
lahf
mov
sbb
push
pop
sbb
push
add
fmuls
daa
loope
test
jno
aad
cmp
push
push
mov
repz
and
pop
out
or
mov
sbbl
xor
mov
add
sub
mov
decb
xchg
add
into
mov
loopne
push
xchg
push
inc
sub
icebp
inc
in
xchg
in
rcrb
jnp
pop
insb
mov
out
mov
jb
xchg
sahf
cltd
int
insl
loop
shl
and
push
pop
fdivp
cmp
pop
daa
sti
jo
idivb
lahf
jl
rolb
mov
cmp
xor
mov
in
sub
jb
je
inc
leave
test
and
mov
fsubrs
sarl
aam
jno
out
jg
xchg
inc
jns
aam
or
cmp
xchg
inc
xlat
inc
fisubrl
out
cmp
fucomi
stos
mov
cmp
dec
std
addr16
fsubrl
stc
gs
dec
jb
xchg
subl
lahf
rolb
movsb
jno
mov
adc
cmp
popa
out
dec
in
pushf
sbb
jo
es
xor
vpaddusw
fstp
jb
and
je
mov
push
xchg
mov
lea
jge
cld
in
in
repnz
cmpb
fmull
data16
enter
cmp
neg
jmp
int3
aad
xchg
enter
popf
mov
pushf
mov
push
push
aas
lods
test
push
lods
mov
jl
or
es
insb
lea
out
jo
icebp
mov
xchg
cltd
lcall
ret
add
lds
out
clc
mov
in
xorl
push
sbbb
push
xor
adc
ja
sub
sahf
cmc
sub
fs
or
inc
push
in
adc
std
popl
arpl
rolb
mov
into
or
mov
icebp
add
mov
push
cs
push
xchg
push
adc
addr16
inc
rsqrtps
inc
das
pop
andb
or
stos
imul
push
cmp
fisubs
mov
push
aaa
subb
cltd
cli
jl
pusha
mov
test
push
fs
out
int3
cmpsl
bound
nop
je
testl
push
jb
sub
pop
jle
mov
icebp
dec
and
clc
mov
iret
aam
daa
dec
push
stos
cs
divl
popa
push
std
xor
cmpsl
jno
movsb
rcll
aam
leave
insl
roll
xchg
mov
loopne
and
repz
mov
cld
xchg
push
nop
push
add
fcmovu
aam
mov
push
mov
stc
cmpsl
sahf
jecxz
jmp
push
mov
arpl
push
in
loope
fs
test
pop
lods
rorb
jmp
out
gs
push
sub
push
lret
call
jb
inc
fucomi
cmp
inc
jbe
adc
dec
mov
es
or
insl
int
add
rcrb
jnp
mov
into
and
dec
dec
ret
test
mov
push
push
mov
cmp
mov
mov
push
aad
jge
mov
mov
cmp
jmp
xor
sub
lock
mov
out
in
mov
inc
sub
stos
popa
std
cmc
push
pop
pop
ds
adc
adcl
xchg
push
scas
ss
and
sahf
out
sub
jns
or
loop
movsb
call
icebp
ss
std
xor
jo
or
je
daa
jb
push
stc
and
mov
arpl
jg
in
sbb
pop
push
or
test
adc
lods
push
sbb
outsl
cmp
pop
ret
test
push
inc
xchg
jns
daa
les
imul
push
fildll
lea
cmp
ret
aaa
je
sub
fadds
mov
in
xchg
cmp
lds
push
arpl
lds
clc
int3
hlt
sub
pop
cmp
outsl
movsb
cmpsl
jnp
les
scas
movsb
ficompl
cmp
sub
or
cmp
mov
and
hlt
push
clc
sub
test
cmpsl
jno
sbb
dec
adc
cmpsl
aas
xlat
sub
push
in
test
mov
mov
imul
mov
jg
call
inc
lret
pushf
mov
bsr
mov
xor
fucomip
stos
in
aas
dec
cmp
xor
js
sbb
mov
lods
fnstsw
jns
jle
lret
cmpb
mov
inc
sahf
dec
xchg
add
cmp
pusha
add
mov
lock
xchg
fnstsw
out
loop
das
ljmp
outsb
jnp
mov
mov
shr
scas
mov
mov
lret
psrlq
nop
dec
enter
into
and
ret
mov
jae
sbb
jle
mov
mov
add
mov
js
fcmovu
xsha1
cmpsb
mov
lahf
cmc
int
inc
mov
hlt
ja
fldcw
idivb
das
add
rcrl
inc
xchg
sub
xor
std
idivb
cmp
and
sbb
and
rorl
arpl
pop
cs
shl
mov
cltd
push
enter
mov
bound
mov
lock
xchg
scas
mov
or
adc
adc
mov
dec
push
out
popa
push
popw
ds
ss
repz
mov
clc
aas
stc
xor
pop
mov
sbb
xchg
shrl
test
xchg
inc
call
fbld
pop
insl
cmc
les
xchg
test
adcl
mov
mov
testl
xor
push
xlat
or
ljmp
fwait
mov
call
mov
fcompl
add
in
pusha
pop
imul
jbe
mov
push
jno
sub
adc
imul
pop
xorb
cmpsl
dec
ljmp
xchg
and
dec
mov
jg
hlt
jno
shlb
xchg
cmp
hlt
cmp
hlt
or
popf
call
int3
mov
and
or
push
shr
cltd
cmc
add
push
out
xchg
pop
out
cmp
out
adc
inc
or
adc
lahf
jmp
out
in
jb
leave
stos
outsb
in
mov
mov
sbb
dec
mov
sbb
push
push
jb
rorb
mov
out
das
adc
leave
popf
xchg
lea
jno
inc
lock
xor
rclb
adc
jns
hlt
icebp
loope
pop
mov
pop
fsts
aam
int
xor
push
mov
jnp
cmp
cmp
xor
cmpsl
cli
add
pop
fbld
out
lret
jae
xor
adc
inc
pop
lret
shll
leave
xor
xchg
adc
xchg
cld
dec
or
sub
out
sbb
mov
pusha
sarb
mov
shl
pop
cmpsb
adc
rorb
push
icebp
popa
into
or
xchg
out
adc
mov
out
aam
sbbb
mov
jae
inc
andl
jnp
arpl
or
add
pop
inc
or
push
inc
push
mov
or
repnz
test
aam
dec
pushf
sbb
inc
and
stc
je
imull
loope
dec
lock
jmp
push
and
jl
push
in
out
push
and
adc
cmp
inc
inc
pop
out
cmpsb
mov
cmp
dec
sub
and
xor
divl
mov
fwait
mov
mov
add
arpl
test
add
jno
ret
push
mov
js
rcrb
out
nop
test
dec
mov
mov
mov
iret
call
ss
imul
jnp
aas
in
movl
lock
rcrl
xchg
or
add
sub
push
and
bound
stos
mov
out
sub
or
cmp
scas
push
sbb
or
sbb
iret
add
cmpsb
loope
ljmp
xor
mov
scas
add
jg
jg
xchg
pop
stos
icebp
cmp
sbb
fldenv
jns
push
jp
rcll
inc
pop
cmp
sbb
xor
jmp
popa
dec
mov
pop
fildl
scas
xchg
pop
lret
int
cwtl
jge
mov
arpl
aam
das
pop
out
mov
inc
mov
fdivp
fists
repz
mov
scas
repnz
push
push
jmp
sbb
jae
pop
jmp
int
mov
cld
sub
out
repnz
cmp
xchg
lds
aam
mov
jp,pn
add
inc
test
dec
mov
jns
inc
outsb
mov
xchg
mov
aas
xor
sarl
lock
int
push
cmpsb
cld
xor
ds
aas
stos
in
inc
in
aaa
ret
or
sbb
jl
in
popf
mov
cs
sub
inc
andb
das
dec
mov
loopne
incl
cmc
or
adc
jg
hlt
mov
nop
and
add
push
popf
repnz
test
jge
test
mov
lods
and
rcrb
jge
adc
stc
roll
mov
cmpb
outsb
dec
push
inc
mov
or
mov
cli
mov
shll
movsl
imul
push
sbb
xchg
loopne
xchg
repnz
shl
inc
or
test
and
sbb
push
or
jle
xchg
idivb
das
mov
sub
push
aaa
aas
inc
cld
lahf
cmpsl
inc
movsl
or
nop
lret
test
lcall
std
inc
outsb
out
mov
or
imul
ficoml
push
lret
or
xchg
xor
sub
icebp
push
movsb
pop
adc
rol
jg
cs
xchg
insl
inc
inc
aaa
bound
loope
lds
inc
mov
mov
dec
ds
mov
scas
xor
test
divb
dec
mov
add
dec
sub
mov
mov
mov
pop
test
xor
test
inc
mov
add
insb
cmp
daa
iret
scas
dec
adc
mov
lea
imul
pop
out
dec
fistpl
les
sbb
fstps
push
stos
sarl
dec
mov
xchg
pushf
cmpsb
popf
testl
mov
xchg
xor
sbb
vpmulhuw
ss
push
fwait
mov
ja
fcompl
in
fistl
out
outsb
fnstcw
push
or
popa
add
sub
in
pop
inc
cmp
jne
xlat
mov
stos
sbb
mov
in
iret
mov
mov
inc
pop
in
mov
fbstp
fwait
hlt
add
test
in
cmp
dec
dec
in
divl
dec
fistpll
push
lahf
stos
cld
ds
pop
pop
stc
jne
add
xchg
jmp
mov
sarl
xor
dec
cmp
jg
push
jmp
pop
data16
push
pop
push
xchg
js
arpl
test
inc
push
pop
adc
pop
roll
dec
das
lahf
adc
push
dec
and
enter
mov
cli
sbb
fbld
mov
daa
mov
into
icebp
dec
mov
shl
lods
dec
imul
xchg
inc
in
sub
pusha
push
lea
xor
repz
mov
mov
les
pushf
pop
pop
add
cltd
clc
xlat
popf
jnp
mov
jo
lahf
arpl
hlt
das
sub
mov
add
cmpsl
dec
testb
loopne
pop
mov
in
cltd
cmp
into
push
ds
cmp
imul
jle
jne
es
mov
jae
test
pushf
or
mov
inc
hlt
inc
subb
popf
pop
movsb
jg
adc
outsb
movsl
mov
shr
jae
xchg
sahf
aad
adc
aaa
inc
inc
pop
add
xorb
cmp
add
mov
test
sbb
add
push
scas
inc
daa
loope
popa
imul
repz
shll
test
rcrb
fcomps
dec
sbb
enter
cli
outsb
push
cmpl
mov
add
push
insl
movb
clc
lds
repz
les
fdivrl
and
and
pop
push
sbbl
inc
sub
repnz
lret
fucomp
pop
add
leave
pop
push
enter
mov
and
jo
cmp
mov
test
xlat
mov
and
mulb
es
jo
arpl
lods
fldcw
sahf
stos
sub
or
hlt
call
mov
xchg
jo
jg
fs
mov
mov
repz
adc
mov
dec
cmc
div
jns
adc
imull
jo
shll
ja
sbb
sub
add
es
mov
sub
push
sub
push
stos
rorb
js
popf
sti
add
push
push
je
jbe
lea
pop
js
mov
cmp
imul
gs
add
dec
mov
loope
int3
cmp
cmc
flds
es
inc
mov
pop
ja
test
sub
push
push
jbe
stos
fs
pop
in
mov
cli
cmpsl
ss
mov
inc
lret
jbe
adcl
mov
pop
fimull
fsubs
in
mov
test
inc
popf
dec
sub
push
xchg
loop
mov
mov
mov
test
aaa
sub
into
sahf
es
paddd
popf
sub
mov
test
jmp
inc
fisttpll
pop
cli
lahf
out
in
push
and
mov
push
jmp
pop
sub
mov
sub
add
imul
loope
ss
mov
add
in
mov
shlb
mov
jecxz
shrl
xchg
or
sub
inc
lahf
cmp
cmp
mov
pop
push
out
int
sti
lock
cmpsb
ret
adc
dec
sub
aam
icebp
shr
cld
mov
xor
or
pop
push
xchg
push
scas
pop
fisubl
or
enter
shr
dec
add
and
loopne
insl
rcrb
push
data16
pop
or
jnp
jge
fildl
jo
cwtl
and
ss
sbb
cmpl
push
cmp
and
xor
sub
mov
jge
fisubs
inc
push
stos
pop
inc
add
mov
movsb
divb
aaa
cwtl
std
push
rolb
or
adc
loop
out
sub
or
lret
cmp
test
in
sar
dec
out
cltd
dec
ja
clc
mov
add
push
lea
mov
mov
xchg
lea
lret
push
xchg
jecxz
adc
add
jmp
mov
imulb
inc
sub
sub
xor
testl
ret
add
ret
data16
xchg
lock
xchg
outsl
jle
push
shl
stos
inc
cld
data16
jb
or
add
push
loop
or
test
dec
mov
mov
and
pop
imul
mov
sarb
gs
or
mov
or
ljmp
stos
movsb
cmp
arpl
cmp
rcr
xlat
xor
dec
shl
inc
fistps
cmp
sub
out
imul
loopne
cmp
or
fists
nop
test
insl
sub
mov
mov
adc
mov
test
popf
mov
jge
insl
jno
push
les
mov
pushf
pop
adcb
sbb
sub
les
iret
lds
or
fsubp
and
call
xor
insl
hlt
lods
or
jp
cmp
jne
and
add
cmp
mov
dec
outsb
gs
mov
ret
mov
shl
inc
inc
je
jl
int3
push
jmp
mov
scas
dec
lods
shrl
jmp
xchg
clc
mov
jne
jp
cmc
repnz
inc
call
lahf
xchg
test
mov
fisttpll
jno
out
cmp
popf
pop
rorl
inc
jge
mov
cli
fwait
cld
xchg
icebp
das
push
lret
adc
mov
cmc
fdivp
lcall
loop
add
push
mov
push
rolb
mov
lret
ds
movb
scas
lcall
imul
cmp
xlat
mov
scas
lahf
mov
lods
adc
in
jmp
icebp
lret
lret
dec
pop
stc
inc
aaa
mov
or
adc
aas
shl
fidivs
pop
sub
repnz
call
icebp
addb
xchg
sub
movsl
hlt
enter
sbb
mov
cwtl
pop
or
shl
aas
push
xchg
std
or
push
dec
and
call
xor
in
out
sbb
out
fucom
xchg
inc
hlt
subb
dec
mov
xor
stos
and
jge
pop
sub
fdivrl
sbb
loop
xor
movsb
jns
jbe
test
cmp
cmc
mov
dec
xor
inc
jae
repnz
cltd
test
or
xor
cld
dec
dec
sub
add
sbb
lret
aad
cmpsb
call
and
andl
or
mov
sub
shll
inc
fdivs
pop
fidivrl
outsl
xlat
push
lods
push
xor
jmp
push
jle
ret
icebp
fnstsw
lds
and
cmp
and
negb
test
hlt
lret
inc
scas
and
or
aaa
out
movsb
and
mov
in
cmp
xlat
mov
test
icebp
sti
gs
out
jl
and
jns
sub
cmp
in
sbb
dec
fwait
mov
cwtl
mov
pop
test
sbb
out
dec
jns
sarl
lahf
pop
mov
and
imul
or
or
mov
push
and
jl
jp
push
add
jle
push
mov
push
cmp
mov
test
mov
push
adc
or
incb
ret
insl
repnz
inc
shlb
sbb
or
cmp
sub
lret
fsubr
enter
test
cwtl
stos
mov
dec
push
sbb
or
cmp
sub
lret
fsubr
enter
test
cwtl
stos
mov
dec
push
sbb
or
cmp
sub
lret
fsubr
enter
test
cwtl
stos
mov
dec
push
sbb
or
fiaddl
lret
fsubr
mov
inc
addr16
ja
inc
int3
test
cwtl
in
mov
xchg
xchg
mov
and
or
js
push
fdivrl
in
mov
lods
enter
sub
or
cmp
cmp
sub
lds
hlt
xchg
test
xchg
lock
shrb
insl
adc
sbb
arpl
pusha
push
jnp
mov
mov
add
pop
mov
jge
imul
mov
mov
adc
or
adc
xor
test
push
je
jae
push
cmp
inc
fnstcw
xchg
or
cmp
and
das
xsaves
call
or
loope
sbb
lock
fucomp
fsubrl
arpl
lea
inc
subb
dec
clc
xchg
mul
sub
mov
sub
mov
or
arpl
xchg
adc
mov
mov
sub
pushf
or
adc
xor
sub
mov
ret
dec
loop
inc
mov
or
pop
sbb
adc
mov
xchg
mov
pushf
call
inc
and
add
add
adc
es
sub
mov
test
mov
scas
ljmp
push
and
dec
or
adc
inc
and
xchg
call
mov
mov
inc
sub
insb
sub
pop
dec
xor
sub
nop
stc
test
aam
mov
mov
cmp
sbb
js
push
fdivrl
in
mov
lods
enter
sub
or
or
cmp
sub
fdivrl
lahf
fwait
lock
mov
scas
or
nop
xchg
jno
out
pop
inc
je
inc
cmp
mov
and
push
lret
fisttpll
negl
js
and
iret
ljmp
mov
mov
jns
dec
rcrb
ret
cs
adc
add
insl
mov
stos
enter
sbbl
fsubrs
lods
dec
adc
and
outsb
adc
push
ja
inc
rclb
popf
mov
xor
jle
dec
xchg
jg
and
push
imul
and
mov
jnp
jb
sub
cltd
sbb
mov
enter
add
add
shll
and
adc
out
add
lea
sahf
out
imull
pop
enter
adc
addl
arpl
sub
mov
xor
stos
jecxz
sub
xorb
lcall
fs
xchg
or
cmpsb
call
or
gs
cmpb
in
lock
inc
push
or
add
fwait
jbe
sbb
data16
jp
btr
int3
xor
cs
jp,pn
cmpsb
dec
pop
pop
mov
mov
movsl
test
jl
out
sub
and
out
scas
jns
fidivl
and
test
xor
in
int
mov
mov
jbe
inc
cmp
and
and
or
dec
test
pusha
sahf
sbb
out
jle
adc
adc
push
adc
cld
ja
sbb
ficompl
mov
add
mov
cmp
popa
xchg
daa
js
mov
dec
addb
leave
sub
sbb
cwtl
inc
cmp
scas
jbe
pusha
pop
pop
adc
adc
sub
dec
sbb
jecxz
in
fsubrp
nop
mov
mov
or
out
popa
sbb
cwtl
ret
sbb
insb
push
and
lock
movsb
push
shll
sbb
sti
adc
outsl
inc
insb
pusha
ds
ds
dec
sbb
inc
dec
loop
cmp
inc
dec
xor
ret
dec
xor
cwtl
es
sub
sub
and
dec
xchg
xlat
dec
or
subl
dec
cs
mov
loop
pop
push
push
pop
fnstcw
push
jge
inc
imul
bound
lret
cmpsl
inc
je
mov
mov
add
cmp
outsb
pop
xor
jmp
mov
je
lahf
xchg
hlt
addr16
mov
adc
pusha
lods
insl
je
pop
ja
std
call
or
outsl
jo
imul
movsl
or
ror
or
aaa
rorb
or
inc
pop
rol
out
sbb
es
jmp
or
push
mov
push
jnp
daa
mov
gs
pop
pop
test
mov
incl
hlt
test
xchg
leave
ds
outsl
mov
mov
mov
dec
push
aam
push
sbb
add
add
mov
dec
cld
fadd
xlat
fimull
gs
nop
mov
dec
dec
dec
daa
cwtl
and
cli
ljmp
jmp
jp
pop
mull
scas
xchg
clc
imul
mov
adc
sbb
sbb
push
leave
mov
and
repnz
mov
inc
push
pop
xchg
sub
jb
sbb
ficoms
imul
mov
sub
jl
xlat
push
fistpll
xlat
dec
mov
sbb
int
call
clc
mov
ss
mov
add
cmp
mov
cmp
ret
incb
mov
push
mov
xchg
aam
dec
cld
push
arpl
jns
or
and
pop
sub
or
fmull
push
lahf
cs
into
mov
jns
in
mov
notb
cs
jne
in
push
leave
lock
jle
sub
cmp
push
sub
lahf
test
cmp
pop
add
fidivs
addl
jns
push
sahf
test
or
addr16
and
outsb
js
dec
fs
fsubs
das
xchg
xor
pop
stos
dec
and
mov
movsl
adc
sub
pop
adcl
xchg
pop
testb
dec
loope
jl
int3
jge
sub
jmp
sbb
dec
dec
mov
add
dec
or
mov
adc
mov
enter
pop
nop
jo
xchg
adc
inc
xchg
hlt
imul
mov
sub
or
and
xor
or
dec
rcr
dec
in
lret
or
ss
lret
nop
mov
std
push
push
popa
sahf
ret
xor
fstpl
sub
add
push
test
outsl
insl
leave
enter
stc
or
or
cmp
aad
aaa
leave
lods
es
cwtl
fdivr
test
and
in
mov
out
lret
rcrb
lock
roll
mov
es
mov
add
outsl
notb
sbb
int
adc
adc
cmp
ss
add
jmp
xor
push
rcll
ret
push
popf
icebp
mov
dec
add
rcrl
sbb
xor
dec
inc
jl
addl
jns
mov
movsl
mov
movsl
xor
xchg
push
lret
pop
sbb
adc
mov
xlat
inc
dec
fmull
add
ret
push
mov
lret
std
pop
movsb
addr16
out
pop
addr16
or
lea
push
mov
stos
adc
sbb
iret
pop
popa
test
fsubrs
fs
add
roll
call
adc
jp
add
pop
or
scas
hlt
mov
out
jo
enter
xchg
jns
cmpsl
popa
movsb
push
mov
mov
push
fnstenv
sub
lcall
mov
inc
test
jbe
mov
sahf
cmove
dec
out
mov
fcomps
aad
cmp
in
outsl
inc
sub
lahf
jmp
mov
repnz
dec
stos
ret
sbb
adc
popf
inc
fmuls
pushl
xchg
mov
pop
notl
ja
add
pop
fistl
jae
test
jmp
dec
jmp
jg
lcall
pop
dec
pop
pmaxsw
fidivrs
mov
mov
repnz
and
mov
incl
pop
popa
testl
jo
pop
cmpsb
lahf
clc
mov
test
sub
xchg
vandpd
push
lret
dec
loopne
pop
fisubl
mulb
add
hlt
dec
jmp
adc
lock
ja
cli
repz
arpl
pop
mov
in
or
outsb
jb
insb
lahf
test
push
mov
ljmp
out
fstpt
pminsw
aas
inc
mov
xchg
ja
aam
jb
loope
add
mov
repnz
out
cli
xor
xor
and
les
mov
cmc
cwtl
das
sub
dec
repnz
gs
les
std
adc
jp
push
add
sub
nop
jecxz
sti
inc
cwtl
lods
nop
aam
aaa
or
sub
sbb
stos
jne,pt
mov
stc
xor
fldenv
lock
fwait
xlat
and
mov
push
icebp
in
mov
aaa
scas
pop
imul
or
sub
test
push
pop
iret
xchg
fildl
mov
add
push
add
jns
jne
adc
das
mov
test
pusha
jne
in
pop
in
mov
jp
ret
push
das
dec
jae
xor
or
xchg
int
jl
aaa
test
icebp
arpl
xor
pop
fnstenv
and
mov
out
daa
jmp
jp
push
jb
outsl
pop
fld
imull
test
mov
je
push
popa
pop
out
push
rclb
jecxz
ss
pushf
dec
scas
xchg
adc
jl
test
xchg
push
mov
loop
push
flds
add
sbb
add
stc
sub
xchg
xchg
jl
add
test
daa
push
popf
jno
pop
and
jmp
test
push
mov
xchg
out
lcall
into
sub
in
mov
cmp
push
and
outsl
pop
sub
push
nop
clc
stos
ret
out
and
sbb
xchg
sub
add
rol
popf
xchg
cmp
mov
xor
cmp
test
dec
pop
fisubl
mov
cmc
dec
xchg
addr16
rorb
icebp
and
adc
mov
daa
lea
mov
loope
es
jl
bound
lods
jg
dec
dec
cmp
xor
movsl
je
cltd
notl
jo
push
in
in
sub
out
pop
mov
ljmp
flds
jbe
fsub
lahf
out
call
arpl
sbb
inc
in
movl
lock
jbe
jno
lea
xchg
xchg
out
sbb
add
data16
adcb
icebp
bound
xchg
pop
leave
adc
repz
stos
add
cwtl
cwtl
ret
xor
xchg
adc
pop
leave
lret
inc
and
shll
fnstenv
pop
add
fsubr
cmp
mov
jne
jl
test
ror
and
mov
xlat
addr16
in
aad
in
xor
cmp
stos
xchg
sub
icebp
imul
rcrl
mov
rorl
sbb
clc
lds
mov
push
dec
data16
cltd
outsb
pop
clc
mov
mov
add
pop
adc
sub
pop
mov
sbb
jp
jb
mov
pusha
mov
or
addl
push
hlt
hlt
out
adc
dec
push
adc
fistpl
in
ret
push
mov
adc
mov
pushf
cmp
cmp
popf
xor
mov
push
repz
mov
mov
adc
push
mov
xchg
add
jo
mov
movsb
inc
ljmp
xchg
and
arpl
lea
fidivs
rorl
das
loope
leave
std
idiv
sbb
lods
arpl
lcall
or
fsubl
pop
xchg
cmp
jl
clc
outsb
xchg
adc
cmpsl
or
xor
push
fs
in
jb
sahf
xchg
insb
jmp
sbb
add
cmp
jg
or
dec
cmpsb
jecxz
ret
mov
or
sbb
loopne
loopne
cwtl
stc
add
mov
bound
scas
dec
loopne
fcoms
out
and
sub
mov
mov
insl
mov
cltd
mov
jbe
outsl
mov
repnz
mul
out
pop
adc
push
mov
dec
cmp
lcall
loope
jbe
xor
test
xlat
rclb
xorb
int3
mov
or
stos
and
fcoms
jecxz
xchg
mov
leave
jg
mov
addr16
lods
iret
cltd
and
inc
xchg
xchg
leave
lcall
cmp
or
iret
mov
arpl
inc
test
pop
mov
in
ret
jmp
sbb
nop
mov
jecxz
outsb
add
pushf
loopne
pushf
mov
dec
daa
lods
mov
inc
dec
into
jge
cmp
inc
data16
imul
jne
inc
sub
push
imul
test
clc
push
mov
mov
ret
push
pop
jo
add
push
fimuls
or
sub
dec
hlt
add
dec
out
mov
shr
adc
fisttps
jp
cmpsb
jmp
test
jg
adc
mov
adc
cmpb
pop
and
ja
pushf
int3
xorb
mov
dec
mov
jle
loope
jecxz
lcall
mov
mov
fiaddl
aam
enter
inc
movsl
sarb
ret
mov
dec
js
cld
nop
inc
mov
sub
insb
mov
cld
xchg
jb
push
adc
xor
fistpl
pop
or
cmp
out
adc
int
xchg
lea
sbb
xlat
pop
lock
popa
or
into
pop
pop
ret
jl
aad
adc
sub
xor
pop
clc
pop
jp
mov
ss
divb
data16
adc
xor
pop
loopne
ss
and
sbb
je
cwtl
mov
mov
fistpl
mov
loopne
test
popa
cmc
jnp
out
inc
rcl
mov
nop
sbb
lcall
lods
outsl
sub
push
and
fiadds
imul
xchg
notb
xor
xor
fildll
inc
scas
pop
outsl
popa
pushf
mov
jmp
dec
bound
push
iret
jmp
mov
or
aad
aad
test
shll
dec
pop
push
sub
fidivs
adc
aam
aaa
enter
aam
jae
sub
or
xchg
xlat
leave
iret
sbb
lahf
insb
rclb
lret
and
mov
add
dec
xor
or
mov
inc
add
mov
mov
inc
fidivs
push
insl
pushf
scas
jle
icebp
test
dec
sbb
push
inc
push
inc
loope
stos
mov
dec
sub
push
out
mov
push
xor
stos
clc
fimull
hlt
aam
stos
sbb
sbb
repnz
mov
jno
mov
in
dec
jno
push
cli
mov
leave
dec
xor
push
or
loop
js
jp
mov
aad
ds
or
mov
frstor
int
add
lcall
lods
inc
dec
lock
cmp
mulb
stc
push
ljmp
clc
cmpsl
push
leave
xor
push
cmp
inc
loopne
cs
lret
or
imul
daa
dec
mov
aas
push
xchg
das
pop
cmp
jnp
int
insb
sti
mov
jo
mov
mov
test
cmp
jo
scas
mov
xchg
imul
xor
add
sbbl
add
push
mov
in
insb
cmc
xchg
xorl
sbb
scas
ljmp
in
or
push
mov
mov
xchg
popf
xchg
aaa
add
stc
sub
pusha
jb
pop
mov
cmp
xor
movsl
xchg
js
cmp
cmp
pushaw
repnz
dec
daa
dec
push
cltd
test
jle
sbb
outsb
sub
xchg
loop
arpl
test
notl
jns
enter
inc
mov
mull
lret
lcall
jle
xor
int
mov
int
insl
cmpsb
inc
xchg
hlt
fistpll
jae
mov
fwait
lods
out
popf
stc
xor
data16
mov
mov
mov
and
inc
push
lea
iret
xchg
mov
ret
popl
sbb
and
jge
jno
sub
fidivrl
lea
inc
sbb
repnz
das
and
cmp
jecxz
mov
xor
sub
cmp
jle
xlat
repz
xchg
int
mov
pop
ror
jecxz
or
ret
stos
pop
lcall
out
std
rorb
push
xchg
stos
pop
inc
adc
xor
push
jp
jmp
jmp
inc
mov
nop
mov
adc
cld
fisubs
lds
dec
jae
cld
mov
fwait
iret
cld
fwait
aam
mov
inc
scas
pop
jns
sti
jno
std
je
ss
int
lods
sar
mov
xlat
mov
sub
negl
mov
lcall
pop
in
pusha
cmp
xchg
mov
push
and
iret
dec
cli
iret
loop
sbb
dec
xorb
sub
mov
sbb
adc
push
pushf
dec
outsl
jbe
sub
jg
push
add
xor
testb
mov
fistpll
jnp
pushf
daa
mov
xor
and
sar
pop
test
js
cli
inc
cmp
out
test
test
sub
add
adc
lods
sar
push
inc
mov
sub
test
jb
push
sbb
aas
fs
fildll
jae
lahf
push
cld
inc
jae
inc
fstpl
sahf
push
or
int
adc
je
jmp
stos
lock
movsb
adc
xchg
icebp
shlb
fwait
mov
int
adc
mov
adc
das
nop
fwait
xor
jge
cmp
push
sub
cmp
or
data16
jno
clc
out
pop
xchg
stc
les
xchg
sub
push
xchg
sub
jecxz
daa
pusha
scas
add
outsb
andb
testl
fildl
jae
mov
mov
adc
cltd
ljmp
mov
dec
or
xchg
je
addr16
ret
cmp
xchg
jl
popa
sub
fisttpll
dec
and
mov
jl
xor
push
adc
or
mov
pop
in
mov
sarl
scas
push
dec
jg
lcall
sarl
dec
hlt
add
movsl
int
mov
cmp
or
pop
sub
xor
shlb
add
jae
pop
lcall
repnz
mov
and
mov
shlb
mov
xor
add
in
popf
pop
orb
lret
das
push
cmp
mov
cmc
lods
add
pop
pusha
fsubs
inc
jns
dec
mov
or
inc
dec
ret
sub
das
xor
imul
shll
xor
lds
mov
xor
xor
int
cld
ss
test
mov
mov
and
aad
push
addr16
data16
inc
or
pop
ret
dec
out
xor
popf
sub
add
xor
pop
lods
mov
jbe
mov
and
test
rorl
xchg
pop
sbb
cmpsl
mov
mov
popf
sub
pop
lcall
aas
mov
xchg
pusha
in
orl
jnp
push
in
popa
fistl
loop
adc
jp
hlt
shll
das
pop
cmp
push
cmp
mov
xlat
mov
cmp
aas
sub
mov
jmp
iret
ficomps
push
mov
ds
enter
mov
cmp
sbb
iret
and
cwtl
fwait
add
in
cltd
add
and
pop
lcall
mov
out
insb
scas
out
out
gs
fsubr
daa
mov
and
and
imul
mov
push
stc
push
dec
xchg
add
imul
sbb
fidivrl
push
int3
cwtl
mov
and
scas
aam
and
shrb
sti
sub
fistl
inc
lea
mov
push
pushf
push
jp
inc
stc
xor
sbb
jnp
fwait
loopne
fs
mov
mov
xor
popf
adc
sub
push
aad
jo
and
push
flds
iret
pop
push
mov
or
shl
mov
dec
mov
xor
clc
mov
mov
inc
jbe
xchg
mov
push
mov
lods
out
push
xlat
mov
cmp
test
or
push
ja
daa
cmp
mov
cmp
addl
mov
sbbb
mov
push
jp
jae
stos
shll
mov
cmc
mov
jmp
push
pop
lahf
testl
fstp
add
jecxz
mov
or
inc
mov
xor
fisttps
push
sbb
and
push
and
sbb
fildll
jg
dec
movsl
insl
inc
jmp
dec
icebp
mov
or
ljmp
pop
pop
jp
loopne
and
jnp
xor
cmc
cmp
push
loop
loop
xor
pop
xchg
lret
cmp
cld
popa
mov
adc
mov
ret
cmp
in
pop
mov
mov
and
xchg
xor
jbe
and
mov
add
inc
cwtl
push
sarb
push
out
add
and
mov
shrb
in
repz
cld
xor
cltd
mov
insb
dec
push
ljmp
jg
test
mov
cmp
cli
xor
inc
mov
mov
or
loope
jbe
in
add
pop
in
ficoms
in
mov
ds
mov
sub
xor
jecxz
mull
xor
dec
push
orb
mov
and
sti
in
jo
inc
addl
jno
test
aad
cltd
jmp
sbbb
push
add
arpl
loope
subb
xor
mov
shrb
mov
loopne
mov
sub
xor
mov
fistpl
and
dec
jmp
lock
adc
fsub
lahf
and
xchg
pop
adc
mov
xchg
mov
dec
mov
sub
jbe
mov
and
rcl
sub
push
push
mov
xchg
xchg
adc
jns
test
clc
cmp
sub
mov
cmp
stos
adc
sbb
fldcw
pop
jge
add
cmc
call
pop
enter
stos
xchg
test
ja
mov
lods
enter
sub
or
or
cmp
sub
fdivrl
in
mov
lods
enter
sub
or
or
cmp
sub
fdivrl
in
mov
lods
enter
sub
or
or
dec
fdivrl
in
mov
fsubrs
mov
sbb
lock
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
shlb
lcall
pusha
test
push
dec
pop
sbb
dec
loopne
lock
jp
popf
and
adc
popa
fidivl
inc
cli
xor
mov
clc
xchg
dec
test
push
jp
xchg
and
adc
popa
ret
jno
inc
in
push
or
dec
jmp
pop
lods
sbb
inc
out
aam
ret
sahf
flds
push
icebp
and
dec
jecxz
fidivrl
push
jne
mov
pop
and
jno
cld
sbb
xor
ret
mov
dec
aad
aaa
test
icebp
or
addb
lcall
sub
mov
or
lds
push
pop
int
dec
mov
and
adc
inc
out
pusha
iret
jno
dec
cli
mov
pop
jb
sub
adc
icebp
or
sub
into
repz
sbb
ljmp
add
movsb
aas
jle
xchg
loopne
pop
loope
test
lcall
cs
cli
or
rcr
cmc
mov
cmp
lock
mov
dec
and
adc
popa
shlb
jecxz
adc
and
push
arpl
iret
inc
ficoms
es
call
rcrl
test
rclb
xchg
ds
mov
mov
dec
lcall
and
or
sbb
outsl
out
ret
das
test
sbb
jecxz
test
iret
fs
jno
inc
cli
push
or
cmp
push
jp
mov
lcall
popa
fidivl
inc
cli
push
or
cmp
push
jp
mov
pop
sbb
outsb
rcl
in
div
push
push
mov
scas
aam
or
lcall
mov
push
pop
cwtl
loop
pop
or
xor
popfw
jbe
aaa
sub
dec
push
jne
iret
xchg
ljmp
inc
inc
cmpsl
pop
fdivp
inc
lods
loop
sti
and
gs
xchg
jecxz
test
cmp
pop
lds
or
addr16
insb
sub
test
dec
rcll
xchg
push
js
stos
sbb
arpl
scas
dec
cmp
test
adc
xorps
cmp
adc
cltd
xor
jnp
aaa
popa
pop
xchg
out
or
decl
aas
or
stos
xor
jp
or
mov
inc
xchg
fistl
cmpb
or
hlt
pop
cmp
pusha
inc
mov
clc
dec
std
xor
out
mov
repnz
cmp
andl
mov
xor
pusha
test
and
fisttpl
or
mov
pop
outsl
sbb
or
jl
sub
cwtl
clc
scas
jb
push
std
jle
pop
mov
dec
movsl
insl
adc
jmp
loop
sub
pusha
xor
lret
push
inc
cmp
push
xchg
leave
mov
xchg
call
and
test
mov
jle
sbb
mov
pop
clc
test
mov
sub
dec
inc
loop
xor
out
mov
loope
sub
inc
hlt
repz
loope
lods
lea
and
lcall
mov
es
fistpl
hlt
sub
scas
repz
movsl
jl
xor
stos
icebp
pop
test
outsb
dec
inc
jle
pop
subb
pcmpeqb
fstpl
fcoms
xchg
sbbb
popa
and
dec
sbbb
cmpsl
xor
gs
dec
pop
xchg
jp
push
push
jle
shr
lret
std
jnp
mov
and
in
cmp
data16
inc
pop
loope
dec
adc
cmp
movsb
pop
nop
push
out
cmp
or
movsb
pusha
mov
insb
push
mov
int
pop
pushf
js
popf
fnstcw
or
and
dec
dec
je
mov
pop
push
inc
cmpsb
clc
ja
jmp
icebp
sbb
mov
mov
fbstp
andb
adc
xchg
push
ret
pop
jle
in
cli
sub
lahf
daa
insb
dec
stos
mov
insb
push
xchg
data16
mov
push
sbb
xchg
mov
add
stc
add
shll
ret
jg
xchg
jno
mov
sbb
and
pop
iret
pop
pop
add
pop
out
xchg
xchg
adc
jns
popa
int3
fdivrs
or
inc
sbb
andl
addl
iret
xchg
mov
pop
lahf
outsl
sti
sub
jecxz
ljmp
shrl
leave
imul
inc
nop
out
xchg
push
repz
ret
lahf
scas
jg
fwait
mov
js
xchg
or
setns
xor
lods
mov
leave
pop
test
mov
das
popl
push
push
mov
je
loopne
insb
pop
dec
daa
jns
frstor
pusha
pusha
cmc
mull
out
push
xor
mov
and
and
stos
sbb
push
sub
mov
inc
imulb
test
cmp
xchg
inc
adc
shrb
mov
inc
pop
ret
dec
or
and
xchg
mov
dec
movsl
icebp
pop
and
pop
int
out
jne
fwait
mov
sub
int3
cltd
jecxz
and
sub
mov
fwait
jo
lds
sti
push
push
or
mov
jp
not
cli
test
mov
repnz
pop
and
adc
pop
leave
ljmp
aas
out
adc
mov
pop
mov
movsl
cmp
popf
add
clc
leave
mov
fstpt
adcb
and
setnp
pop
xchg
mov
push
push
jnp
out
sbb
pusha
insb
fwait
orb
jl
mov
sti
fwait
fwait
xchg
mov
leave
out
sub
dec
fnstsw
fisttpll
mov
dec
stos
dec
aaa
pop
mov
mov
test
scas
popf
fs
or
insl
jo
xchg
cli
and
test
pushf
shll
mov
mov
and
xchg
out
and
sbb
idiv
out
daa
sub
mov
stos
pushf
push
shrl
adc
and
gs
nop
fs
mov
data16
push
cltd
add
adc
lret
dec
push
mov
adc
jne
push
sub
lret
sarb
push
into
sarb
fwait
push
xchg
cltd
iret
sub
int
cmp
mov
clc
or
pop
push
pop
ja
inc
mov
sub
test
fbstp
add
cmc
inc
hlt
adc
jae
inc
ss
jne
stos
mov
out
xchg
jmp
out
inc
dec
cmc
jle
std
push
cli
sbb
pushl
dec
hlt
repnz
fs
adc
pop
sbb
aad
loope
xchg
aas
push
inc
mov
xchg
add
fistpll
roll
mov
xor
mov
fdivs
jnp
dec
dec
mov
in
sub
xor
je
jae
ss
xchg
jae
icebp
inc
and
and
mov
ljmp
add
lret
loopne
int3
ret
mov
test
shll
int3
push
cmp
aas
dec
push
cmp
jbe
lcall
xlat
clc
or
xchg
scas
inc
into
push
dec
mov
in
aas
and
xor
jo
hlt
sahf
jge
fs
mov
jle
cmp
push
mov
leave
or
insl
and
loop
cmp
and
xchg
add
mov
ljmp
fwait
inc
sub
imull
push
fldenv
mov
pop
fiadds
mov
addr16
mov
inc
pop
cmpsb
xor
fbld
dec
pop
int
fidivl
pushf
sbb
fildll
or
inc
je
or
aaa
imul
loope
lcall
push
add
dec
jo
jg
testb
or
mov
movsb
inc
mov
jmp
pop
inc
dec
adc
sti
ss
adc
mov
outsl
dec
push
sbb
pop
lret
adc
xchg
notl
enter
sbb
ja
or
or
or
and
dec
inc
jecxz
pop
add
mov
xor
loope
pop
jmp
in
pop
pusha
dec
hlt
and
movsb
dec
push
cmp
xchg
aam
sub
and
jns
jno
add
aad
in
jmp
sbb
jl
sub
push
jne
inc
adc
out
shrb
lods
outsl
jb
es
jg
jno
gs
pushf
adc
enter
fbstp
push
popf
fadds
lods
pop
adc
mov
or
xchg
inc
xor
loope
xchg
and
pop
inc
call
in
xchg
add
lock
jmp
shrb
popf
xor
ficompl
or
pop
lods
pusha
and
push
out
int
lcall
adcl
or
aas
xor
lret
lahf
sbb
sbb
jecxz
jb
fwait
loop
add
sahf
mov
loopne
pop
xor
ret
add
leave
arpl
mov
orb
scas
in
cmpsl
fwait
xchg
xchg
push
and
leave
lods
lods
cmpsl
add
jg
loopne
mov
sub
jge
sar
clc
jp
test
fs
jmp
sahf
orl
xchg
xor
xchg
sbb
out
divl
add
inc
out
xchg
push
imul
jbe
aam
cmp
cmp
push
jnp
out
in
pop
mov
mov
sbb
ret
test
dec
repnz
adc
aaa
loopne
mov
cmp
jge
jbe
pop
sbb
adc
cmp
lret
mov
adc
adc
incb
xor
and
ja
adc
jmp
mov
and
shll
or
test
out
test
push
mov
cwtl
mov
fadd
mov
stc
addr16
test
dec
push
xchg
sub
test
fsub
lea
pop
add
fcompl
ret
scas
xchg
add
in
andl
pop
fwait
fsubs
popf
sub
add
cmpsb
jns
clc
dec
push
push
xchg
jb
fs
in
xchg
mov
lea
jmp
ret
int
jp
stos
pop
push
sbb
int
push
mov
mov
inc
lods
or
inc
ds
mov
test
push
pop
sub
dec
pop
pop
fwait
loopne
adc
xchg
push
pushf
xor
add
sub
jns
xorl
jnp
daa
jge
xchg
xchg
add
lret
inc
test
add
les
xor
mov
sub
xchg
outsb
mov
mov
xor
mov
xchg
cmp
jae
and
dec
pop
fwait
mov
sbb
test
xor
stc
xchg
push
mov
ss
jmp
pop
mov
loop
fwait
jl
sahf
ljmp
mov
sti
sti
add
mov
sbb
jb
jp
xor
into
mov
ds
shlb
int3
ds
dec
out
cltd
fimuls
mov
dec
loope
dec
les
pop
jge
in
mov
shll
jmp
pusha
mov
push
gs
insb
jp
mov
stos
mov
cmp
dec
sub
jb
fldl
mov
rcrb
cmp
add
push
negb
pop
adc
fs
push
xor
inc
dec
test
test
xorl
ret
iret
sti
loope
ds
pop
cwtl
pop
jnp
lcall
pmaxsw
stc
cltd
popa
mov
fisubrs
cltd
repnz
adc
adc
cwtl
jbe
push
lea
mov
loop
cli
and
cmp
add
mov
sub
addb
rol
and
pop
push
xchg
mov
fmull
mov
mov
dec
xchg
xchg
enter
test
or
sub
push
xchg
xchg
or
in
out
outsb
cltd
push
mov
mov
cmp
dec
mov
cmp
jns
xchg
sarb
sbb
xor
mov
mov
test
lods
mov
lds
mov
inc
test
adc
pop
add
sub
add
inc
clc
xor
mov
imul
dec
adc
dec
inc
outsb
stc
xor
push
sub
je
cmp
cmp
sar
clc
adc
xchg
stc
js
scas
or
pusha
lret
push
or
mov
pop
adc
iret
cmpsb
repnz
push
sbb
lods
loopne
inc
mov
int3
es
loopne
jmp
lahf
pop
mov
inc
push
sbb
jne
in
push
dec
sti
push
into
sbb
shll
fstl
mov
ds
lods
and
xchg
sahf
sub
out
mov
ja
outsb
mov
rcrl
xor
jmp
or
dec
cmc
ds
mov
xlat
ss
and
icebp
incl
repnz
mov
shll
sar
xchg
cltd
repnz
aam
push
in
shrb
sub
xchg
jns
movsb
rorb
std
pop
xchg
daa
xor
insl
ds
dec
and
loop
dec
popa
bound
dec
test
std
mov
int3
stc
sti
sarb
cmpsb
into
jae
loop
xor
or
bound
lret
and
ljmp
icebp
sub
sbb
or
cld
push
xchg
dec
stos
xchg
subl
aaa
jg
mov
scas
mov
lods
mov
or
adc
cwtl
lret
pop
mov
bound
in
daa
cli
fstpl
cmc
imul
mov
cmp
aad
add
push
out
add
cltd
push
fmull
jge
mov
insl
loope
inc
push
adc
or
jp
jecxz
out
or
sbb
test
mov
cld
repz
stc
xor
mov
mov
mov
leave
push
dec
pop
lret
shll
and
std
pop
add
sti
out
mov
add
rolb
xchg
fldenv
adc
add
or
shr
jecxz
pop
pminub
mov
jae
xchg
sahf
shl
or
flds
mov
push
negb
je
jecxz
sub
xchg
repz
push
jb
imul
xchg
ja
pop
mov
outsl
pop
inc
add
mov
int3
xchg
dec
mov
sbb
xor
dec
nop
imul
pushf
mov
sti
and
mov
divb
enter
nop
fidivrl
jle
jnp
add
mov
mov
xor
adc
ret
pushf
out
xchg
push
out
jle
push
mov
xchg
mov
inc
and
mov
int3
sub
jo
mov
and
fdivl
cmc
inc
cwtl
jo
inc
jp
pop
popa
ffreep
lret
lds
jb
dec
xchg
stc
orl
icebp
dec
ja
lods
inc
dec
rcrl
mov
sub
mov
push
mov
pop
andb
testb
jae
out
inc
outsb
pushf
rolb
test
xchg
sub
xor
xchg
adcl
insb
popa
sbb
xor
push
dec
mov
jge
cmp
fisubs
dec
xor
in
dec
int
stc
ret
jp
jp
loope
push
fidivrs
sub
aad
imul
jge
xchg
int3
sbb
mov
arpl
aam
jno
sbb
lcall
xchg
fstps
jns
cmc
xchg
aad
xor
push
int
les
cmc
negl
divb
inc
inc
mov
fistl
dec
inc
jmp
mov
lock
push
aas
fldenv
and
das
mov
das
mov
addl
leave
xchg
flds
inc
mov
fnsave
mov
cmp
std
es
icebp
mov
or
adc
rcrb
dec
outsb
out
iret
lods
call
pop
jnp
cld
and
cmp
rol
je
out
push
cmp
fsubl
loope
push
lock
sub
ja
jecxz
stc
jb
pop
push
les
xchg
or
aas
cld
inc
inc
into
int
or
push
gs
imul
cld
adc
adcb
add
xchg
sub
xor
mov
iret
cmp
loopne
cltd
addr16
aad
insb
mov
divb
cmp
jg
and
aaa
pop
out
xchg
test
divb
inc
mov
icebp
mov
in
fimuls
add
mov
jge
out
iret
fs
add
sbb
hlt
inc
iret
mov
enter
pushf
add
out
stos
pushf
dec
mov
push
iret
push
adc
push
cltd
jmp
jne
gs
xlat
dec
aam
xorb
and
mov
std
jl
mov
scas
das
lods
sti
cmp
mov
xchg
out
std
jl
mov
jbe
outsl
movsl
pop
pop
ljmp
stos
jg
jbe
std
inc
shr
imul
pop
add
or
inc
repnz
xor
loopne
lods
int
cmpxchg
mov
insb
and
dec
icebp
jae
rcr
push
cltd
and
mov
in
shll
fstpt
enter
fstl
xchg
insb
int3
pop
or
inc
aad
popa
into
jl
pop
out
dec
adcb
and
iret
cwtl
cmp
cwtl
inc
sbb
pop
sbb
rorb
sahf
in
jnp
outsl
cmp
movsl
aas
addr16
rorl
fnsave
arpl
mov
js
fs
nop
insl
pushf
and
jb
lds
and
aam
sub
xchg
add
mov
lret
loop
adc
mov
push
mov
fcmovb
ljmp
fcmovu
push
mov
xlat
lret
dec
test
ret
sahf
xchg
jg
adc
ret
testl
sub
iret
mov
jb
and
subb
mov
cmp
test
dec
mov
cwtl
icebp
push
xchg
test
rcll
jo
xchg
sbb
xor
orl
push
jb
adc
movsb
inc
jns
imul
adc
cmp
pusha
ss
fidivrl
bound
add
dec
dec
or
loopne
mov
jno
insb
pop
clc
jp
dec
int3
adc
mov
aam
mov
xchg
cmp
jbe
das
jmp
add
jle
cmp
inc
out
adc
popf
jcxz
lods
hlt
sub
scas
push
mov
push
das
mov
mov
popf
notb
roll
mov
nop
call
dec
ret
movsb
pop
std
aas
outsb
insl
add
mov
pop
call
adc
sbb
fcmovne
mov
dec
mov
pop
push
cmp
mov
dec
jecxz
and
daa
push
push
mull
int3
and
outsb
sub
jge
inc
lods
push
mov
ret
mov
adc
popa
xor
rsqrtps
mov
mov
cwtl
dec
sub
hlt
xchg
pop
lahf
movsb
icebp
popf
pop
inc
mov
in
ljmp
es
mov
cmp
adc
popf
ja
pop
daa
jl
sti
mov
iret
clc
dec
push
sahf
adc
adc
je
mov
xor
cmp
out
mov
mov
insl
cs
or
test
xor
ss
cmp
sarl
push
mov
lods
test
ficoms
hlt
je
mov
ds
jne
jno
jl
mov
jp
push
fwait
mov
and
and
cmp
imul
loopne
and
mov
or
mov
or
cmpsb
fbld
sub
in
sbbb
mov
bound
stc
lock
cmpsl
pop
int3
ret
stos
mov
jmp
push
sahf
inc
fsubrs
scas
stos
popf
xchg
shlb
and
sti
mov
mov
add
xchg
mov
pop
or
or
repz
orb
repnz
ljmp
mov
js
dec
stc
adc
addr16
lcall
movsl
adc
mov
xor
adc
push
iret
xchg
iret
pop
arpl
mov
sub
negb
or
aaa
fwait
int
dec
cmpl
inc
lret
push
call
and
xor
mov
enter
ret
leave
adc
adc
xchg
inc
pop
ret
sub
js
mov
xchg
pusha
cmpb
jnp
lret
dec
test
inc
repz
dec
mov
andb
pop
dec
aam
nop
mov
dec
xor
movsb
jg
cmp
fsts
ja
cmp
in
pushf
jge
addr16
sarl
sbb
ret
pop
xchg
fidivl
dec
mov
mov
daa
push
jmp
cmp
loopne
dec
pop
and
mov
push
mov
je
ret
shlb
add
xchg
push
mov
mov
in
fildll
mov
rcrb
hlt
sbb
mov
fsubr
jle
cmp
xchg
rcl
mov
cmpsb
push
scas
jl
push
inc
lret
mov
mov
movsb
inc
lods
jle
cwtl
inc
cltd
mov
mov
imul
or
or
sbb
push
mov
xchg
and
loopne
jmp
cli
adc
scas
lret
in
pop
xor
nop
inc
cltd
stc
fwait
inc
adc
add
cmpb
clc
jp
mov
lcall
fmuls
and
imul
mov
push
jo
mov
repnz
movb
push
pop
lods
inc
aaa
fdivl
popf
sub
cmpsl
push
insl
inc
pop
iret
cmpb
in
in
ja
stos
and
mov
sbb
inc
or
cld
popa
std
jmp
xor
ret
jbe
xor
movsb
ja
loopne
test
jae
aam
xor
into
add
repz
mov
jge
mov
pop
mov
xlat
jnp
dec
icebp
cli
add
aas
jb
orl
cld
mov
sub
or
fistps
mov
cwtl
in
das
xchg
mov
or
mov
adcl
mov
push
out
hlt
aam
test
jg
test
gs
cmp
test
cli
push
lret
or
mov
adc
sub
decb
dec
push
or
jp
sbb
icebp
add
mov
inc
push
mov
movsl
mov
inc
pop
rcrb
mov
sub
fiadds
lcall
push
xlat
mov
movsb
fidivl
ss
mov
test
mov
popf
shr
jecxz
xchg
push
or
insl
or
ds
adcl
icebp
push
addr16
insl
cmp
cmpsl
sbb
mov
into
jg
mov
je
movsb
pop
test
into
jmp
add
jne
xchg
add
jno
inc
cli
push
or
cmp
push
jp
mov
lcall
popa
fidivl
inc
cli
push
or
cmp
push
jp
mov
lcall
popa
fidivl
inc
cli
push
or
cmp
push
dec
sarl
add
jno
inc
jp
cmc
mov
cmp
cmp
test
cmp
or
cmp
or
in
mov
movsb
pusha
xchg
mov
fs
push
jge
insl
xor
and
adc
add
movsb
fucom
int
cmc
in
mov
rorb
sti
in
shl
sbbb
sub
cld
pop
hlt
fisttpll
lahf
xchg
into
clc
jmp
iret
test
adc
xor
mov
mov
out
fstpt
loope
roll
out
pop
xor
fs
xchg
ret
jo
sbb
sub
das
mov
adc
xor
les
pusha
int
jbe
fcompl
cld
cmp
dec
outsb
sub
imul
dec
sub
insl
xor
std
push
mov
les
cmp
cmp
jnp
icebp
mov
xchg
lret
cmpsl
or
cld
dec
shll
mov
sub
movsb
cwtl
out
icebp
and
mov
loope
mov
dec
std
sub
mov
xor
movsb
enter
movl
sub
sbb
mov
gs
fcmovbe
aam
mov
lahf
push
pop
adc
adc
sub
pop
mov
gs
sahf
movsl
mov
fstp
lret
leave
ret
les
or
push
popl
pop
dec
inc
pop
js
ja
int3
mov
test
rol
loope
cs
lods
and
add
or
hlt
fucom
int
std
in
mov
movsb
lea
fs
push
jge
insl
xor
and
adc
add
hlt
fucom
int
std
in
mov
movsb
lea
mov
cmpl
add
xchg
pusha
adc
insb
sbb
jnp
ss
in
mov
lcall
jmp
in
xor
add
mov
rcrl
sub
push
mov
clc
jmp
push
jnp
daa
jno
clc
dec
jo
xorb
inc
mov
xchg
je
or
fldt
sub
out
pop
popw
adc
cli
jl
push
lods
dec
lret
mov
mov
pop
mov
loopne
mov
test
sbb
aas
xor
xchg
aaa
inc
add
inc
dec
les
lea
cld
or
jne
mov
xor
daa
out
inc
jb
rol
mov
pop
jecxz
js
mov
sbb
scas
pop
pop
das
mov
arpl
and
shlb
ret
xchg
jg
lret
mov
adc
call
rcrb
lahf
mov
inc
je
mov
push
push
movsl
cmp
hlt
jb
add
xchg
inc
or
cmpl
inc
mov
aas
inc
in
cmp
dec
rorb
stc
repz
ret
movsl
mov
test
test
xlat
cwtl
fsub
dec
jle
and
psllw
mov
pop
aas
loope
ficoms
sbb
pop
data16
lods
aam
pop
inc
mov
jecxz
loope
aam
lods
je
push
adc
mov
mov
push
cmp
jo
pop
xchg
ljmp
inc
enter
xchg
andl
mov
adc
push
xchg
sbb
and
leave
sub
into
xor
dec
imul
cltd
jmp
mov
aaa
das
imul
dec
jb
adc
dec
mov
mov
and
add
fs
push
xchg
cli
push
das
push
outsb
push
or
mov
test
movsb
imul
xor
adc
jae
lret
fwait
mov
mov
pop
jae
out
jg
and
sbb
mov
mov
cmp
pop
cmp
jecxz
dec
ljmp
pop
jmp
dec
mov
pop
in
push
push
outsb
popa
bound
lock
dec
fidivs
push
popf
inc
sbb
je
gs
pop
add
jmp
dec
aas
cltd
lock
mov
cmpsl
jle
mov
repnz
cmp
jecxz
ja
test
rorl
mov
incl
hlt
push
insb
jbe
in
inc
jo
fistpl
scas
dec
rorb
sahf
bound
stc
cmp
stos
add
jmp
testb
loope
mov
adc
adc
rolb
sub
addl
outsl
repz
incl
mov
sbb
dec
test
mov
jb
out
clc
inc
inc
mov
add
and
ljmp
jmp
mov
test
out
xchg
repnz
cwtl
addr16
inc
sti
sbb
in
push
pop
dec
pop
shrl
add
leave
add
mov
cmp
into
js,pn
insl
cld
fdivrl
mov
pop
stos
lret
mov
movsl
aas
sub
arpl
cli
jno
mov
push
iret
movsl
xchg
ret
sbb
adc
icebp
pusha
pop
pop
sub
int3
cmp
cltd
clc
pop
adc
in
lds
push
pushf
xchg
sub
rorb
cmpsb
subl
in
push
xchg
dec
in
insb
mov
inc
xor
push
pop
mov
mov
xlat
push
lds
push
nop
xchg
aas
out
negl
push
out
fldt
adc
les
lds
mov
inc
jns
xchg
into
mov
adc
call
test
js
jbe
or
sti
jne
ficomps
hlt
and
add
pop
fwait
cmp
aaa
and
dec
dec
jo
ljmp
xor
dec
bnd
cmpsl
and
fbld
std
les
cld
xchg
fnstcw
mov
popa
stos
adc
cli
xlat
inc
shrb
push
push
ds
jle
pop
imul
ficompl
sbb
cli
xchg
out
divl
jno
push
adc
fisttps
aaa
les
mov
pop
divl
pusha
pushf
sahf
out
pop
sbb
mov
adc
fs
sub
test
push
sbb
adc
int
mov
push
test
scas
aaa
out
gs
ror
jecxz
jne
push
repnz
mov
loop
lea
xor
cld
cmp
lds
std
jl
adc
into
mov
out
pop
cli
push
cmp
stos
cmp
inc
push
outsl
sub
insb
jecxz
push
repz
sbb
pop
inc
cltd
jp
mov
inc
imul
push
stos
and
repz
sub
jns
shrl
adcb
adc
or
cmpsb
add
cmp
pop
das
scas
jnp
cwtl
insl
mov
mov
jno
stos
in
or
aaa
sub
push
movsb
outsl
mov
xchg
insb
cmp
mov
cmpsb
jnp
cmc
in
test
cli
rolb
push
inc
in
push
rclb
mov
enter
push
out
lods
inc
not
push
xor
inc
and
adc
pop
lret
das
lcall
lock
mov
cmpsl
mov
out
or
xchg
leave
shrb
lahf
lret
sub
adc
sub
into
push
int3
in
es
pop
dec
ror
out
mov
iret
sub
fisubrs
push
sbb
jno
mov
inc
push
clc
mov
pop
daa
into
stos
rorb
outsb
mov
insl
ret
scas
dec
int3
hlt
adc
and
js
jg
iret
lods
or
or
std
repz
push
adc
pusha
loope
sarl
lock
push
xchg
mov
lret
lds
mov
idivl
mov
push
cmpsb
add
ja
dec
jge
xchg
pop
and
jne
rorb
cmp
std
adc
stc
lret
adc
cmp
lcall
mov
pop
cmp
repz
sti
jb
movsb
pop
repnz
outsl
xchg
dec
add
xchg
sub
repz
adc
cli
cwtl
push
aas
or
divb
dec
dec
xor
mov
jl
frstor
out
daa
in
jbe
xlat
cs
and
sahf
mov
lods
jecxz
dec
xchg
push
shr
in
fwait
inc
xchg
das
insb
adc
add
bound
xchg
call
ja
jne
xlat
nop
jbe
or
rolb
dec
pop
movl
call
insb
cmp
out
sub
int
arpl
mov
rorl
iret
mov
std
add
jmp
orb
idivb
lahf
jbe
xor
push
push
xchg
cmp
push
mov
sub
mov
xor
push
sub
push
or
cs
aam
adc
pushf
or
sub
sub
xor
mov
test
adc
sbb
mov
fdivrs
test
jo
imul
xor
sub
lods
or
adc
mov
jnp
outsb
movlps
jmp
test
mov
xchg
les
ss
mov
mov
sbb
mov
sub
jno
xchg
mov
shrl
jne
popf
daa
out
sbb
scas
sub
das
cs
adc
inc
pop
jecxz
jne
push
cltd
inc
test
jb
insl
and
repnz
rolb
mov
mov
dec
pop
pop
movsb
jbe
mov
cmp
dec
mov
jb
mov
bound
orl
test
nop
test
pop
cmp
popa
aas
mov
add
stc
jae
and
mov
cmp
fwait
mov
cli
inc
lcall
icebp
mov
ljmp
out
test
inc
sub
jb
fisubrl
fldl
or
jl
lock
push
leave
gs
jb
mov
daa
push
bound
aas
nop
movsl
add
add
and
mov
push
jl
imul
push
jae
or
inc
mov
add
xchg
adc
jmp
pop
jae
lahf
add
adc
sbb
std
pop
push
mov
or
scas
mov
or
jmp
dec
stos
clc
or
sub
into
mov
repnz
imul
insl
stc
jp
into
rorl
leave
sbb
mov
push
cld
ds
sbb
push
add
es
jl
mov
push
imull
push
mov
loop
and
push
movsl
inc
les
xor
inc
in
pop
push
lcall
xor
in
in
int
sbb
adc
orb
daa
mov
or
xchg
cmp
push
mov
adc
gs
je
inc
enter
fisubl
jbe
pop
jnp
sub
and
incb
loope
adc
pop
adc
divl
xchg
jl
mov
ret
xlat
dec
sarb
mov
cs
mov
add
sarl
xor
jecxz
sbb
jae
push
fildll
mov
jae
mov
scas
mov
or
xor
stos
insb
rorl
push
sub
pop
push
addr16
ret
xchg
adc
clc
jb
scas
stos
adc
std
enter
out
test
pop
pop
xor
adc
pop
and
jl
mov
lods
sub
stos
cmc
movsb
and
and
push
xlat
test
stos
fs
dec
ds
data16
jl
stc
xlat
mov
jo
call
mov
mov
inc
iret
adc
and
xchg
push
shlb
xchg
pop
inc
jbe
movsb
xorl
scas
adc
lahf
adc
jo
test
cwtl
sbb
ja
cmp
push
leavew
repnz
jg
push
sub
pop
cmc
push
and
mov
push
insl
aam
test
nop
push
aad
inc
push
outsb
clc
arpl
cmp
inc
enter
and
add
out
push
pop
xchg
out
mov
repnz
jge
test
add
adc
pop
addr16
push
mov
mov
xchg
imulb
lods
insb
rol
jecxz
inc
add
lds
dec
or
pusha
inc
mov
fcompl
push
in
sbb
mov
popf
add
jb
push
dec
fcoml
lock
or
xor
mov
lods
test
lea
mov
and
in
sahf
lock
xchg
insl
pop
sbb
ljmp
xchg
hlt
pusha
es
push
nop
popa
pop
in
add
sub
inc
and
incl
pop
aaa
cmp
push
sbb
or
xor
loop
es
dec
lea
mov
mov
or
sbbb
cs
add
push
gs
sarb
fnstsw
add
into
xor
jl
jb
mov
jnp
add
movsl
js
inc
cmc
jmp
shrl
jmp
popf
cmp
jne
push
mov
push
add
insb
sub
dec
and
mov
jle
pop
mov
jle
pusha
ficoms
sahf
aaa
scas
jg
inc
outsl
dec
jno
imul
pusha
xchg
xchg
aad
mov
adc
jnp
orl
imul
fistpll
clc
roll
jo
or
cli
or
or
aaa
enter
sub
insl
test
jae
fsubl
adc
sbb
loop
fcompl
orl
call
pop
cltd
fldl
in
or
stc
sbb
dec
lds
aam
in
std
jno
sub
clc
sbb
arpl
outsb
mov
and
stos
push
pusha
repnz
xchg
add
daa
shlb
cs
test
call
inc
mov
xchg
dec
in
sarb
add
loop
dec
sub
push
inc
xchg
pop
jb
xchg
mov
inc
xor
loop
inc
mov
inc
mov
sbb
mov
mov
jecxz
xorb
pop
fstl
inc
insb
cltd
xor
push
ret
fmull
dec
push
in
test
pop
aad
sahf
xchg
sbb
popf
mov
ffree
popa
fwait
bound
loop
movsb
push
push
popf
inc
sti
clc
xchg
inc
cmp
jecxz
rcrl
pop
inc
push
stc
test
ljmp
adc
pushf
ffreep
cltd
cli
xchg
xor
mov
ss
cwtl
inc
mov
inc
jbe
add
or
cli
push
gs
sub
popf
inc
daa
pop
pop
dec
inc
pop
xor
aas
jecxz
mov
cmc
lret
sub
loop
mov
sbb
je
or
adc
sbb
sub
pushf
pop
scas
outsl
scas
outsb
lods
notb
pop
out
icebp
insl
ds
xor
xorl
enter
ljmp
cmp
shlb
sbb
mov
sbb
jbe
int3
cmp
xlat
add
cs
pusha
rcl
sbb
lahf
js
aas
or
shrb
and
mov
push
dec
mov
push
sbb
test
inc
adc
ret
je
into
mov
fcmovb
jb,pt
dec
movsb
jmp
sub
sub
pop
stc
xor
or
dec
stos
push
sub
mov
sbb
mov
roll
mov
sub
out
adc
push
rcl
push
les
or
ret
xlat
xchg
insb
xor
adc
cmc
int3
les
int
test
lea
sbb
arpl
cmc
cmp
cmpsl
lret
ljmp
and
xor
lock
testb
in
test
add
push
call
mov
in
jp
and
inc
xchg
stos
mov
or
xor
pop
orl
shll
lret
push
mov
inc
cmc
aad
jp
movsl
ljmp
in
repz
sub
push
mov
jp
sub
or
sbb
jne,pt
pusha
xorl
pusha
inc
js
ret
dec
sub
mov
les
mov
stos
lea
icebp
lahf
out
orb
dec
cli
jge
xor
fisttps
jns
fdivs
sub
mov
sbb
push
mov
pop
sti
ja
addr16
mov
mull
sbb
push
imul
sbb
fidivrl
into
sub
cmp
and
sbb
adc
adc
pop
fdivrs
testl
adc
in
fwait
bound
inc
lret
jl
dec
xchg
cmp
dec
dec
xor
push
adc
sub
das
add
cmp
jae
ljmp
sub
jo
jae
call
and
jp
in
fstpt
and
dec
sub
dec
std
aad
adc
addr16
ret
mov
push
leave
pop
push
sbb
cmpsl
mov
mov
xchg
push
add
mov
outsl
mov
xchg
shl
push
popf
inc
or
mov
mov
int3
inc
in
xchg
add
jbe
fwait
roll
inc
pop
push
sbb
insb
add
shlb
cwtl
dec
pop
and
je
scas
movsl
push
lods
insl
lcall
mov
mov
mov
pop
outsl
jb,pt
sub
ss
mov
inc
adc
mov
addr16
jp
lock
xor
in
sub
aam
in
jae
sbb
incb
or
xor
jl
mov
sub
js
sub
adc
xchg
fwait
loop
jae
or
in
xchg
es
roll
cli
and
les
in
sbb
push
dec
stos
mov
lea
insl
mov
movsl
es
mov
pop
cmp
jne
mov
xchg
sub
enter
push
xchg
ljmp
mov
push
stos
fsincos
arpl
pop
add
sbb
adc
in
inc
rcl
dec
dec
fbstp
dec
out
movsl
inc
mov
mov
lcall
push
xchg
leave
push
sub
loopne
dec
in
test
div
or
ja
mul
jno
ret
mov
sbb
lahf
out
jmp
xchg
insb
test
push
sub
mov
ds
lock
fs
jg
inc
sub
xor
inc
leave
imul
mov
fcmovne
in
mov
push
inc
pop
ja
xor
int
aad
lods
shl
fcompl
push
push
sub
in
xchg
sub
cmpsl
inc
mov
dec
push
jg
inc
mov
in
sbb
xchg
xchg
movsl
push
mov
cmp
call
add
sub
pushl
cltd
mov
jg
test
lea
cmp
das
mov
lods
movl
add
cmp
lods
out
cmpsb
mov
push
in
adc
mov
fmull
lret
pop
cltd
mov
dec
sarl
inc
iret
outsb
fcmovne
sub
ljmp
popf
sti
enter
jg
imul
cwtl
test
mov
f2xm1
imul
in
add
dec
mov
test
ljmp
jae
insl
stos
cmc
orl
inc
adc
dec
jmp
xchg
push
sbbl
mov
dec
mov
xor
popf
loop
mov
addr16
or
in
ds
stc
jmp
xorb
xor
popf
dec
fsubl
data16
daa
daa
adc
sub
stos
daa
insb
adc
loopne
mov
xchg
xchg
add
cmp
cltd
fimuls
pop
sarb
or
or
xchg
aaa
subl
inc
xor
cmp
shlb
mov
dec
mov
aam
mov
mov
andb
xlat
dec
push
shll
sub
jmp
imul
sbb
aam
xor
adc
loop
xor
popf
adc
pop
js
lock
lea
or
loope
jge
mov
pop
xchg
ss
dec
shll
sub
jmp
inc
movsl
icebp
and
das
mov
loope
push
sahf
dec
in
and
lahf
jns
ret
mov
xchg
call
push
xchg
pop
sub
iret
int3
call
int
push
jnp
or
push
mov
jno
sarl
or
inc
sub
mov
mov
sarl
sahf
xchg
inc
or
outsl
xorl
mov
ret
add
sub
pop
inc
rcr
mov
inc
jns
mov
mov
and
xlat
sbb
sub
mov
mov
push
or
push
pop
in
ret
ja
add
pop
push
pushf
dec
aas
dec
mov
or
inc
xchg
or
sub
xor
cmp
push
out
or
pop
inc
dec
add
movsl
call
dec
dec
fidivl
mov
push
push
sbb
inc
dec
adc
lea
nop
sbb
xchg
js
or
daa
loopne
inc
sbb
dec
push
jp
or
fs
sub
stos
dec
loope
cmp
push
shlb
add
mov
lahf
mov
mov
dec
fiaddl
cmp
in
cmpsb
pop
and
es
outsb
js
mov
loop
orb
mov
stc
sbb
pop
fsubrs
jp
int
negl
xor
sub
sub
or
cmp
addr16
pop
sub
fnsave
push
push
pop
frstor
add
adc
lds
mov
mov
inc
aas
push
rolb
sub
shll
sub
das
mov
aas
imul
jnp
xor
or
out
xchg
dec
out
cmp
lcall
lods
cs
pop
cmp
aam
and
adc
mov
fbstp
lret
in
div
je
xchg
jb
push
mov
movsb
push
dec
mov
cmp
in
cld
inc
mov
push
in
mov
or
js
lret
in
hlt
add
adc
mov
aam
mov
std
into
mov
add
shrl
inc
repz
test
in
lea
les
push
arpl
insb
enter
ret
pop
sbb
xor
aas
popf
es
imul
aad
ds
xchg
call
dec
js
sub
fsubrp
insl
sub
scas
pop
fidivrs
sbb
fs
movsb
scas
bnd
stc
fwait
mov
arpl
ja
sub
subb
push
mov
mov
sbb
arpl
fidivrs
es
movsl
arpl
push
add
pop
jle
jne
add
sub
leave
add
push
lods
pop
clc
push
iret
je
sub
bnd
arpl
mul
pop
dec
jns
andl
inc
and
lea
movsl
mov
and
pop
push
mov
mov
xchg
fwait
xchg
in
icebp
sub
out
in
and
mov
xchg
sbb
scas
pop
jp
jecxz
orb
outsl
dec
aaa
pop
pop
daa
mov
ret
popf
mov
aam
sub
clc
jmp
fs
add
cmp
imul
and
frstor
jno
adc
jl
inc
add
push
jbe
cs
push
jno
out
inc
mov
loop
pop
call
sbb
loop
dec
xor
pop
sbb
add
mov
aad
jb
adc
pop
pop
xlat
pop
movsb
ror
lea
in
mov
mov
nop
ret
pop
dec
stos
adc
pop
aam
mov
jne
sbb
cmp
jns
hlt
push
mov
ret
jp
pop
mov
mov
loope
cmp
cmp
es
daa
fst
xor
jecxz
mov
xchg
in
mov
push
xchg
dec
jecxz
sbb
mov
inc
or
sub
dec
add
sbbl
jns
push
lahf
outsw
sbb
dec
insl
and
push
js
insl
xor
and
adc
add
hlt
fucom
int
std
in
mov
movsb
lea
fs
push
jge
insl
xor
and
adc
add
hlt
fucom
int
std
in
mov
movsb
lea
addr16
inc
gs
imul
fsub
leave
shl
cltd
mov
dec
insb
mov
insb
sub
adc
test
hlt
and
addr16
les
imul
aad
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
je
jle
jne
xor
push
pop
sub
or
add
or
pop
add
push
add
add
add
add
add
add
add
add
mov
add
add
dec
add
out
add
add
add
add
add
add
fwait
add
add
add
add
push
add
aad
popa
add
add
sub
cmp
add
add
dec
add
add
adc
push
add
add
add
add
sub
lea
cmp
add
add
push
add
add
movsl
add
add
add
add
add
add
add
mov
add
out
add
add
cmp
mov
add
add
add
mov
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
testb
add
testb
add
add
add
add
add
add
add
add
mov
roll
data16
add
add
add
add
add
cmp
add
add
add
add
add
insl
add
add
add
add
adc
add
add
and
push
add
add
add
add
add
add
add
add
add
add
and
add
add
add
lods
add
add
sub
sub
xlat
add
inc
add
add
push
add
add
mov
add
out
add
add
add
add
add
add
add
add
add
icebp
add
mov
daa
add
add
add
add
add
mov
popa
add
add
add
add
add
flds
push
add
add
add
pop
add
add
xor
or
push
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
mov
add
add
sub
fadds
cmp
sub
mov
mov
add
add
add
add
add
add
inc
add
add
add
add
add
stos
add
jmp
add
add
add
add
mov
add
add
add
add
cmp
cmp
push
add
lea
stos
add
add
add
sbb
push
add
add
mov
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
daa
add
add
aad
fwait
add
add
add
jle
inc
add
add
add
inc
add
add
add
add
add
add
add
or
jns
and
outsb
add
cmp
add
add
jae
fwait
add
add
add
sbb
lock
mov
add
ret
add
add
add
leave
push
pop
ja
add
int
jg
stc
pop
hlt
cld
push
xor
stos
jl
mov
hlt
xor
jno
lock
faddl
jecxz
sbb
push
mov
rcrl
mov
dec
popf
and
cs
pop
fidivrl
fisttpl
hlt
out
cltd
imul
outsb
fs
dec
bound
sub
lods
inc
scas
inc
and
mov
add
test
inc
add
out
out
out
xor
mov
sub
shlb
es
cmc
subl
lods
dec
js
ret
test
xchg
mov
xor
jns
test
enter
jnp
inc
insb
daa
mov
push
jno
jo
jae
loopne
mov
jno
pop
call
icebp
js
push
mov
dec
jb
loope
addr16
mov
sar
ret
adc
xor
add
out
adc
or
push
push
inc
movsb
loopne
push
cmp
lods
inc
ficoms
std
push
into
inc
dec
sub
aas
ljmp
lea
inc
fbstp
mov
cmp
jge
aam
push
test
sahf
and
jge
and
sub
dec
jns
popa
fndisi(8087
xchg
in
xor
mov
lret
fcmovne
add
loopne
ds
jns
pop
leave
ficompl
inc
inc
cli
pop
mov
mov
sbb
pop
imul
lret
mov
imul
addb
shrl
xchg
mov
div
out
mov
cmp
or
aad
sbb
mov
daa
cmp
jo
test
push
cmp
pop
fcmovb
sub
jle
xor
ss
sbb
push
loope
cmp
pop
pop
adc
jp
and
pop
push
fidivl
insb
lahf
add
push
sbb
mov
pop
and
inc
sub
dec
loop
sub
movsb
push
mov
out
jl
lods
jge
cli
or
mov
mov
popa
loope
ljmp
fcoml
cwtl
aam
in
sti
mov
jae
and
lcall
arpl
cmp
sahf
xor
dec
cmp
fcomps
or
fsubrp
stos
mov
es
add
or
ficoms
sub
jge
push
shlb
sbb
or
push
cmp
sub
notl
addl
or
ror
inc
addl
sbb
push
mov
imul
jge
or
lock
int
out
xchg
enter
and
pop
out
out
ret
sarb
and
pop
flds
hlt
mov
insl
je
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
