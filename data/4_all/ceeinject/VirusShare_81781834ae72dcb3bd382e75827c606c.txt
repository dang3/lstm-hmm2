call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
test
mov
adc
lods
sub
mov
push
aad
aad
and
cwtl
adc
enter
sub
sbb
dec
lds
test
mov
adc
enter
sub
ss
add
mov
sti
push
ljmp
inc
and
es
rcr
fsubp
insb
push
adc
and
adc
clc
ret
int
mov
dec
test
adcb
cmpsb
test
xor
inc
xlat
adc
mov
jmp
xchg
sub
jb
enter
sub
test
and
adc
inc
call
dec
mov
sub
dec
test
adc
mov
aad
in
lret
mov
lcall
les
in
jp
test
dec
xor
iret
mov
cmp
aaa
iret
push
fdivrl
push
mov
lock
push
hlt
jns
dec
lds
sub
and
cwtl
adc
enter
sub
sbb
dec
lds
out
and
std
push
test
mov
lods
and
lods
imul
in
xchg
adc
stos
dec
lret
dec
std
jbe
es
xor
adc
jnp
sarb
dec
loop
or
mov
fsubl
pusha
cltd
insl
call
inc
fcoms
movsl
cmp
push
lds
test
mov
adc
enter
sub
sbb
dec
lds
test
sbb
shlb
nop
push
divb
mov
mov
stos
lcall
sahf
mov
scas
imul
sbb
int
sbb
xchg
aaa
xorl
lret
lret
lds
addr16
adc
rcrb
jecxz
clc
mov
and
stos
sub
nop
iret
push
mov
or
jmp
and
cmc
cwtl
pop
pop
std
adc
and
imul
xor
jle
lret
xor
xchg
push
shlb
xchg
sahf
xor
mov
mov
xchg
shlb
mov
xor
sub
jp
in
add
sbb
lcall
adc
clc
ljmp
mov
sub
cmp
dec
ret
jg
inc
ljmp
ja
or
lea
mov
aad
ss
push
das
sbb
popaw
aas
xor
out
mov
movsb
in
sahf
push
xchg
mov
insb
inc
hlt
pop
push
or
push
mov
push
popf
nop
add
decl
mov
mov
mov
pop
fwait
popa
lods
roll
inc
cmpsl
mov
cmp
dec
jns
lcall
and
clc
push
sbb
lds
xchg
dec
in
inc
jle
jae
pop
jmp
rcrl
dec
jnp
jmp
push
lret
cmp
out
punpcklbw
jns
into
add
push
pop
inc
cmp
cmp
push
addb
dec
inc
fs
add
dec
sub
test
mov
cs
arpl
rorb
in
push
movsb
test
jbe
cmc
or
dec
loope
stos
or
andb
in
scas
push
mov
cmp
jecxz
scas
repnz
icebp
cmpb
dec
push
jbe
dec
jmp
out
jg
mov
inc
fsubr
adc
ret
stos
out
cs
mov
xlat
test
cmp
xchg
das
pop
fldl
adc
call
cmpb
mov
lret
sub
add
mov
subb
es
push
mov
xlat
mov
mov
xor
lea
dec
push
fistpll
and
jecxz
and
mulb
test
out
imul
shlb
out
mov
into
in
xor
dec
cmp
mov
ja
cmp
or
clc
or
in
repnz
push
or
iret
jne
push
in
lahf
adc
sub
sbb
out
enter
aaa
push
mov
and
mov
xchg
fistl
enter
iret
push
push
cmp
call
mov
fdivs
sub
pop
inc
lds
push
sbb
dec
ffreep
xlat
xchg
mov
jb
fidivs
pop
xor
aas
je
pop
cmp
fld
les
sub
cltd
sub
lods
gs
add
ljmp
sbb
mov
or
push
cwtl
xlat
xchg
bound
xchg
lock
cmpl
sbb
test
add
std
cmp
in
add
inc
inc
outsb
sbb
mov
mov
mov
sahf
mov
popa
fiadds
shlb
outsb
mov
dec
adc
jp
les
dec
add
je
pop
dec
add
sub
push
cld
pop
jmp
cld
mov
ljmp
fs
xchg
mov
mov
sbb
jl
cmc
xchg
icebp
add
inc
repnz
mov
je
dec
in
lods
imul
rorb
outsb
push
in
enter
add
fimuls
add
inc
inc
mov
xchg
mov
div
cld
mov
and
std
fnsave
cld
imul
dec
and
cwtl
sbb
dec
mov
mul
and
lcall
pushf
or
add
mov
jae
mov
inc
inc
add
mov
jle
pop
icebp
shll
mov
push
jp
mov
sub
dec
jmp
and
shll
out
movsb
out
xor
jmp
push
jmp
aam
mov
xchg
mov
cmpsb
aam
std
arpl
cmp
jbe
movl
jl
stos
push
mov
push
cmp
pop
mov
push
adc
push
jle
inc
inc
sbb
aad
jmp
outsl
pop
push
add
repnz
iret
int
lds
arpl
sub
push
js
imul
pop
imul
mov
dec
jp
out
test
cmc
pop
cld
or
faddp
ds
cmp
insb
mov
jp
testb
js
push
xlat
es
int3
mov
sarb
mov
or
es
cld
sti
lcall
insl
cmp
sarl
data16
cli
push
bound
fwait
jae
addr16
cmpsl
or
push
adc
mov
int
hlt
pop
rol
add
testb
pop
or
sub
add
jecxz
mov
push
outsb
insb
sbb
js
or
adcl
mov
outsl
sbb
das
cmp
ss
adc
pusha
xchg
mov
jne
jno
add
mov
pop
mov
shl
jbe
rolb
push
xchg
pop
add
repz
nop
mov
push
add
gs
test
dec
fmull
inc
test
or
mov
in
cmpb
cwtl
sub
lret
inc
js
cmp
dec
push
insl
movsl
jns
iret
jg
fistpll
mov
lods
repnz
xor
scas
mov
xchg
push
add
xchg
stc
popa
arpl
mov
dec
icebp
mov
dec
add
cmc
fdivl
mov
decb
lret
add
or
das
or
push
mov
sahf
stos
adc
adc
jge
clc
shl
dec
push
inc
xchg
xor
xor
inc
sub
iret
mov
dec
scas
xor
je
sahf
popa
jbe
inc
inc
mov
dec
xchg
les
jp
inc
icebp
cltd
sub
add
dec
or
cmovs
jne
loopne
mov
sub
rcll
sub
andb
lahf
sub
inc
cs
push
ja
mov
mov
push
out
out
add
outsb
inc
mov
and
xor
mov
lds
lods
fdivl
inc
sbb
sahf
popa
jge
je
mov
pop
jmp
test
scas
dec
and
push
or
rorb
push
insl
pop
inc
test
push
push
add
pop
lods
lret
sbb
roll
inc
sbb
xchg
lock
xchg
dec
mov
sbb
cli
sub
pop
outsb
add
int3
fcoms
gs
fistpll
jae
add
es
test
mov
push
sahf
lret
daa
pop
cmc
or
mov
cmp
push
cmp
or
or
bound
shll
mov
js
cmp
push
shll
xor
xchg
jns
sahf
sti
enter
ficoml
je
cmp
call
inc
lret
fsubrs
jno
mov
clc
jg
and
cli
and
xor
and
je
ja
ret
push
insl
movsl
rcll
fisttpll
push
das
mov
mov
fstpt
int3
adc
xchg
test
fsubl
or
mov
cmpsl
sarl
mov
mov
hlt
add
movsl
add
cmp
inc
pop
or
pop
pop
in
ret
int3
mov
adc
push
int
int
pop
stos
dec
shlb
cmp
cmpl
out
loopne
dec
mov
ds
stc
lock
dec
jnp
xor
cmp
pop
test
jb
incl
adc
mov
sub
fwait
or
cmp
cmp
inc
in
ret
shrb
mov
test
cwtl
jbe
mov
lods
pop
dec
stos
fwait
or
sbb
inc
xchg
mov
sub
sub
mov
stos
cld
sahf
mov
sbb
mov
out
mov
xchg
adc
pushf
out
jne
push
jne
je
dec
es
movsl
imulb
mov
repnz
mov
data16
orb
cwtl
dec
mov
adc
sub
xor
jne
add
mov
pop
mov
test
jo
mov
xor
jmp
cmp
cmp
fsts
adc
sbbb
into
push
data16
pop
lcall
xor
mov
dec
ret
bnd
jns
sub
add
sub
in
or
es
xchg
xor
jg
sahf
mov
ds
fildl
rcll
xchg
in
push
jnp
dec
sbb
hlt
cltd
mov
push
pusha
sbb
sbb
test
es
daa
xor
cld
pop
push
les
mov
and
pop
lods
outsl
jl
ret
movsb
mov
mov
jns
and
push
and
pop
movsl
mov
xor
scas
sbb
sub
outsl
aam
in
jo
pop
mov
adc
into
lods
xor
fwait
mov
dec
xchg
ret
in
jg
lea
test
das
cwtl
movsl
sub
aaa
adc
and
jo
inc
adc
sub
add
inc
mov
ljmp
push
nop
pop
or
jp
xchg
data16
in
sbb
ret
xor
sti
adc
rcll
scas
es
insl
imul
ja
scas
sti
push
cs
mov
xor
sbb
jecxz
repz
ficomps
leave
xor
mov
mov
cmp
insb
add
arpl
or
push
mov
adc
mov
ljmp
pop
ror
mov
push
test
mov
xchg
push
mov
adc
cmp
aaa
daa
lods
push
imul
mov
inc
fildl
je
sub
mov
repnz
clc
pop
loop
shrl
adc
hlt
sahf
mov
fisttpl
mov
shll
push
scas
cmpsb
dec
jg
pop
into
xchg
jo
fimuls
jl
cli
rcrb
scas
mov
in
xor
fldenv
mov
ds
and
pushf
insl
mov
jl
pop
mov
addr16
xor
pop
mov
aad
insb
xor
ja
iret
popa
divl
jnp
cld
lret
insb
dec
fcmovnu
mov
push
push
movsb
ffreep
mov
jmp
dec
cld
imul
mov
fistpll
addr16
aaa
mov
int3
mov
jle
aas
sub
mov
mov
dec
in
or
jge
repnz
mov
mov
push
push
and
or
pushf
inc
in
sub
mov
cwtl
insl
cmpsl
jnp
cltd
xchg
fimull
pop
dec
in
ds
push
sub
xor
aaa
jle
push
das
mov
mov
mull
dec
in
shrl
mov
cli
mov
or
xlat
arpl
scas
add
int
xor
das
out
sbb
addr16
dec
cmp
jg
jle
inc
mov
fs
insb
inc
pop
mov
call
pop
fidivrl
jae
cmc
jbe
or
sbb
icebp
lock
lock
shlb
cmpsl
sbb
mov
dec
push
lock
mov
xor
inc
lea
sub
add
ja
fs
loop
jae
fs
nop
jl
loope
std
mov
and
xor
add
rcr
lods
je
cmpsb
mov
insb
lock
insb
mov
mov
scas
dec
nop
pop
cmp
cmp
pop
mov
push
outsl
jl
sbb
pop
mov
dec
fstps
outsb
lret
jge
cmp
push
xchg
or
pop
ret
sbb
clc
mov
xor
lret
sub
jbe
push
jmp
jle
sub
fsubl
roll
jb
ds
mov
inc
lds
dec
testl
cmp
dec
adc
insl
mov
mov
inc
cmp
test
mov
dec
clc
into
sub
cmc
jno
in
inc
repz
inc
gs
dec
ja
adc
or
repz
popa
cmp
inc
sbb
addr16
xor
cmp
je
dec
add
cmc
cli
addr16
fs
leave
lahf
and
hlt
insb
jecxz
mov
inc
adc
aam
xlat
notl
sbbl
cmpsb
dec
test
int3
push
bound
sub
mov
adc
mov
movd
cmpsb
mov
dec
movsb
dec
add
subb
mov
pop
mov
jne
add
jnp
mov
data16
xchg
mov
pop
rclb
mov
cld
mov
jae
cmpsl
add
sub
clc
cmpsl
lods
cwtl
es
xchg
xchg
gs
leave
lret
push
add
and
hlt
in
loope
fcom
call
lcall
xor
xor
xor
and
fdiv
ds
popa
push
xchg
lret
lea
ret
xor
jl
push
fstl
add
xlat
and
and
je
mov
das
mov
std
sbb
pop
daa
xor
xor
jmp
lea
lea
adc
in
sub
push
in
lcall
enter
stos
cwtl
pop
rol
fsts
les
js
dec
mov
sbb
push
bound
fisttpll
adc
cmp
out
out
shll
imul
sahf
jne
push
dec
mov
leave
pop
fnstenv
in
mov
call
cwtl
sbb
jecxz
addr16
das
pop
test
ljmp
das
inc
xchg
mov
test
mov
inc
jl
jno
and
lods
gs
dec
cmpsl
ret
mov
mov
pop
dec
mov
fcoml
pop
rclb
loop
add
push
and
ret
add
or
bswap
jnp
loope
xor
sbb
cs
sahf
jbe
test
out
outsb
cmp
jmp
xor
xorl
jp
cmpsb
adc
mov
mov
mov
xlat
loop
cmp
mov
cmc
xchg
mov
xorl
ja
in
push
xchg
xchg
pop
mov
popf
loop
xchg
jge
enter
scas
fldt
sub
cli
fwait
sub
insl
sub
incb
aad
js
fwait
jnp
pop
insl
xchg
xchg
cltd
adc
shlb
addr16
jge
cwtl
sbb
or
pop
dec
jl,pt
mov
cmp
call
pop
jmp
adc
adc
cmc
leave
clc
fcoml
aaa
and
xor
dec
xchg
push
cmpsl
mov
mov
cmpsb
aad
subb
pop
pusha
outsl
push
xchg
mov
mov
loope
pop
adc
mov
adc
je
leave
pop
mov
lret
xor
in
xchg
fdiv
dec
inc
test
gs
daa
pop
xchg
dec
mov
jns
and
out
stc
daa
mov
ss
cmp
dec
push
leave
mov
cmp
jl
fcmovnb
mov
lods
pusha
fisttps
dec
rcr
into
stos
pop
sbb
jecxz
hlt
xchg
jmp
xchg
aaa
jnp
mov
push
xchg
push
in
xchg
lea
add
ja
addl
jmp
pop
cmc
xchg
jmp
imul
inc
pusha
fsts
ret
ljmp
jo
and
and
pop
xor
ja
dec
pusha
jns
xor
int3
xchg
push
mov
sahf
bound
ja
cld
mov
push
mov
rcl
fwait
push
decb
jbe
mov
cli
mov
repnz
adc
jl
mov
push
pop
ret
in
cmp
jp
push
dec
inc
adc
mov
out
push
outsb
push
mov
inc
pop
pop
sub
xchg
dec
imul
dec
sub
lcall
or
dec
xor
sbb
jo
pop
xchg
dec
shll
jae
ret
push
and
pop
add
adc
adc
mov
inc
icebp
out
jnp
xchg
or
dec
stc
inc
mov
jb
inc
incb
int3
pop
mov
fcompl
dec
in
ss
lret
or
lock
mov
out
rcrb
repz
insb
imul
leave
cmp
out
jge
xchg
pop
cmc
in
xchg
stc
jbe
sub
int
jnp
mov
lods
xor
mov
sbb
rcrb
xchg
sub
in
cmove
dec
push
lods
cs
das
in
xchg
jnp
sbb
imul
mov
js
or
and
xchg
fdivrs
push
fwait
sbb
mov
pop
fnsave
fisubrl
fsub
nop
call
movsb
inc
pop
sbb
cmp
mov
ds
rcll
push
dec
pop
mov
inc
pop
in
in
orb
addr16
or
sahf
imul
sub
out
push
dec
inc
decl
ret
mov
sub
or
dec
ret
test
sbb
xor
fldenv
les
adc
cmp
xchg
sbb
rcll
xchg
es
leave
xchg
test
or
xlat
sub
into
inc
or
ret
inc
mov
cmp
stos
xchg
nop
in
adc
insb
aaa
inc
imul
mov
aad
insb
out
jmp
mov
fisubrl
ja
cmp
lock
xchg
lcall
ret
add
mov
pop
xchg
aad
inc
popa
int
xorb
sbb
and
cmp
mov
hlt
pop
pop
adc
les
mov
add
inc
jle
js
dec
dec
add
xlat
sbb
cld
inc
mov
xor
xor
and
in
test
jbe
pop
imul
mov
loopne
cmp
push
sub
cmp
rcll
or
cmpsl
push
adcb
shll
jnp
ds
dec
xchg
xchg
sti
orb
add
xchg
push
jmp
xchg
das
lahf
dec
lcall
repz
rep
mov
addr16
push
jmp
mov
push
mov
fsubrl
add
into
enter
popa
int
mov
adc
pop
shl
xor
sbb
mov
and
xchg
cltd
fisttps
pop
imul
dec
idivl
xor
cmp
sub
sbb
arpl
xchg
pop
mov
aad
insl
pop
cmp
and
cltd
fdivrl
mov
insb
subl
cmpsb
out
mov
or
int3
pop
adc
xchg
jo
push
sbb
mov
lret
xchg
dec
push
repnz
add
dec
adc
mov
push
mov
sbb
sbb
xchg
jnp
dec
adc
and
in
or
imul
push
mov
aas
scas
or
pop
xacquire
std
inc
insb
jge
shl
ljmp
shr
lret
sti
clc
dec
ljmp
lea
test
arpl
sub
dec
mov
arpl
mov
out
fwait
daa
mov
lret
cmp
push
jne
fsubrs
loope
jl
shll
movsb
xchg
out
or
push
jb
cltd
inc
mov
mov
mov
out
mov
aas
and
iret
add
rcr
sub
mov
dec
pop
or
fsubrs
in
shrb
push
mov
jb
lods
pop
fwait
je
jno
psrlq
repz
dec
dec
iret
cmpsl
movl
fidivl
rcrb
pop
loopne
test
adc
dec
or
sub
and
scas
dec
fisttpll
inc
testb
cld
test
inc
aaa
test
sbb
loope
icebp
and
cmpsb
inc
or
rorb
enter
call
cmp
lahf
testl
pop
jno
and
aam
mov
loopne
sub
mov
push
fs
repz
mov
sub
fiaddl
cmc
push
scas
das
pop
inc
sub
push
xor
dec
sbb
int3
cmp
mov
jno
bnd
insb
pushf
jae
scas
rolb
or
insl
and
iret
dec
pop
cmp
rcrb
scas
add
enter
out
sarb
mov
xor
mov
les
inc
mov
push
mov
in
inc
into
inc
imul
pop
dec
jns
xor
push
ficoms
ret
sarl
call
fwait
ljmp
outsb
inc
test
movsb
dec
cmp
or
lret
fst
xor
and
dec
or
mov
dec
add
inc
push
xor
imull
lret
idiv
mov
imul
repnz
pop
jmp
jp
in
dec
xor
loope
xlat
dec
dec
gs
pop
xor
les
aas
in
pop
jmp
xchg
xor
aam
lods
lods
inc
jecxz
lret
leave
loope
jmp
adc
arpl
xor
imul
out
aaa
insl
leave
sti
arpl
stos
dec
sarl
mov
add
pop
andl
or
cwtl
mov
jo
mov
mov
ficompl
les
mov
xchg
je
add
fnstsw
aad
adc
repz
repnz
mov
imul
loop
dec
ret
push
push
xor
mov
xchg
aas
sbb
lret
pushf
pusha
jb
stc
sahf
loope
cmp
and
aad
cltd
fs
pop
sahf
cld
out
or
and
or
jns
inc
mov
andl
cmpsb
sub
mov
int
sbb
add
dec
lret
fs
aad
jbe
aas
adc
aad
and
pop
cltd
push
sbb
movsl
mov
xchg
popa
aas
dec
lods
aam
xor
call
inc
fcoms
movsl
cmp
push
lds
test
mov
adc
enter
sub
sbb
dec
lds
test
mov
adc
enter
sub
sbb
dec
lds
test
mov
adc
enter
sub
sbb
pop
insl
lock
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
cmp
sbb
sbb
mov
add
jno
inc
lret
push
cmp
or
pop
ret
dec
cmpsl
mov
add
jae
add
push
cmp
sub
jnp
imul
sub
mov
pop
mov
xor
sbb
mov
addr16
mov
loopne
push
fbstp
mov
rorl
lahf
scas
decb
sub
das
test
imul
xorl
imul
ljmp
mov
jle
lock
lret
shlb
pop
mov
mov
stos
inc
xchg
jae
or
cmp
mov
pop
jecxz
fidivrs
dec
sub
fsubrl
arpl
loope
add
stos
mov
incb
les
hlt
push
and
imul
jo
and
notb
test
adc
mov
lods
arpl
push
fcoms
cltd
jo
orl
and
fs
mov
mov
mov
or
pop
sbb
mov
adc
mov
inc
lret
cmp
jb
bound
aas
stos
dec
mov
gs
jbe
ja
jp
or
pop
mov
out
bnd
addr16
mov
shlb
sbb
cltd
mov
test
mov
mov
hlt
je
addr16
xchg
pop
ret
dec
sarl
add
jae
inc
lret
push
cmp
or
pop
ret
dec
sarl
add
jae
inc
lret
push
cmp
and
test
shlb
jecxz
pop
cwtl
gs
jg
lcall
in
mov
add
jecxz
mull
xor
fdivl
ficoml
pop
add
test
test
pop
mov
sbb
jmp
adc
xlat
iret
scas
pushf
cli
call
popl
xchg
mov
sbb
cmc
call
cli
lcall
js
je
int3
in
jg
pop
aaa
call
stc
fcmovu
fsubl
shlb
mov
add
fs
cwtl
call
push
insb
add
mov
push
scas
inc
fbstp
jp
fistl
dec
mov
push
xchg
push
xchg
sbb
pop
arpl
jecxz
sti
out
negb
scas
scas
mov
subb
lds
cmp
sti
and
pop
mov
mov
dec
lretw
lret
sbb
or
push
inc
mov
mov
xchg
xchg
jge
aam
mov
mov
xor
xor
cmc
cld
pusha
cmp
xor
dec
fidivs
adc
dec
aam
dec
cmp
lds
sbb
lret
pop
aam
mov
push
lcall
and
jo
cmc
icebp
lret
push
shlb
test
pop
fstpl
mov
pop
ret
test
xorb
xchg
xchg
pop
js
jge
addr16
jae
outsb
adc
jo
add
jmp
cmc
xcrypt-ecb
cmpsl
dec
mov
xchg
jg
add
mov
fsubrs
test
cmp
shll
leave
std
lods
adc
aad
testb
pop
xchg
movsl
gs
andb
or
mov
add
ss
clc
loopne
mov
pop
pushf
shll
rcll
and
cmpsb
cld
push
ficomps
roll
insb
xchg
faddp
out
mov
xor
pop
inc
xchg
and
in
stos
mov
popa
bound
lret
fldt
mov
sub
and
push
and
sbb
jno
sbb
clc
pushf
adcb
dec
sbb
push
testb
out
ss
gs
or
call
ret
cmp
popa
js
dec
imul
dec
aam
ljmp
mov
jns
push
sahf
fdiv
cmp
testb
mov
int3
ss
in
adc
mov
sub
gs
cld
xchg
popa
repnz
outsb
aas
bound
pop
or
add
stc
cmp
inc
adc
pop
test
push
adcb
lds
hlt
fcmove
jns
mov
lret
mov
pop
shlb
or
push
divl
mov
sub
js
lea
scas
lahf
outsb
movsl
inc
push
pop
pop
push
movsb
and
scas
mov
sbb
jb
xor
pushf
adc
cmp
xor
ret
enter
mov
imul
or
lcall
sub
pop
mov
cmp
inc
int3
repnz
rorl
adc
xorl
sbb
shlb
popf
push
movsb
jo
sahf
loopne
notb
or
mov
push
ret
mov
and
push
pcmpeqb
xchg
xlat
stos
cmp
fbld
fcomp
jl
call
inc
cmpsb
ss
mov
dec
in
sub
cmp
pusha
imul
and
sbb
sub
in
cmp
jno
sub
xchg
xchg
mov
cli
icebp
lcall
jmp
push
es
jnp
push
mov
mov
push
notb
rcr
mov
dec
cmc
mov
daa
mov
rcrb
icebp
add
push
sti
inc
cmp
adc
xor
or
wbinvd
push
jmp
adc
xchg
fstl
dec
mov
hlt
jmp
xlat
jmp
fmull
mov
int3
pushl
stos
aas
xor
pop
out
sub
in
push
dec
daa
jo
mov
sub
popa
cmp
bound
cmp
inc
subb
cmp
push
cmpl
repz
dec
cld
jo
fdivrl
add
cmp
nop
jns
jo
rcrl
repnz
inc
adc
dec
xchg
sar
adc
xorb
push
scas
or
in
pop
dec
xchg
fiaddl
sub
out
push
dec
xchg
lds
clc
outsl
xchg
dec
mov
push
mov
pop
jbe
lock
push
lds
mov
add
data16
lock
rcll
fmuls
mov
data16
sbb
inc
shrl
mov
cmpsl
jle
in
and
cmp
add
fucom
or
enter
ja
cmpb
mov
shlb
aam
lret
sub
and
gs
jo
sbb
add
stc
sti
subb
or
mov
mov
xor
xchg
lods
arpl
push
dec
push
ret
pop
bound
mov
xchg
cmpsb
xor
nop
xor
lret
mov
push
xor
jp
lret
popa
test
cmp
pop
add
dec
cmp
pop
mov
or
in
mov
xchg
push
nop
xor
cmpsb
add
adc
fildl
pop
dec
jmp
jbe
sahf
push
ret
decl
sbb
mov
pushf
fimuls
pop
shlb
fnstsw
mov
or
repnz
xor
and
mov
pusha
ds
add
sbb
cmpsl
pushf
imul
add
out
inc
movsl
jbe
sub
xchg
mov
mov
xor
dec
imul
gs
push
cli
xchg
fcompl
and
into
push
jae
inc
lds
rol
out
mov
adc
sub
push
mov
sub
add
in
push
push
imul
adc
out
xlat
or
pop
jp
xor
pop
test
imul
mov
dec
sbb
outsl
cltd
insl
lock
imul
sti
sarl
in
outsl
adc
pop
mov
icebp
mov
jp
imul
cmpsb
test
sti
ret
dec
lds
and
jg
push
loop
test
inc
dec
xchg
dec
add
cmc
jo
add
mov
adc
mov
push
sub
hlt
push
repz
fnstcw
xchg
lea
sbbl
jo
push
pop
shrb
jle
les
mov
pop
scas
icebp
icebp
or
cs
pushf
sbb
xchg
push
jb
pop
cmc
or
ret
jno
pushf
jne
lods
gs
fisttpl
rcl
jbe
xchg
xchg
push
adc
sbb
ja
pop
mov
or
pop
clc
addr16
mov
repz
std
xchg
popf
ret
xor
jmp
cli
js
pop
in
or
jbe
add
cmc
divl
mov
dec
test
or
and
into
push
lds
int
lcall
iret
and
jle
repz
fsubrp
es
aad
push
stos
js
push
clc
xchg
popf
push
push
out
cmc
gs
sbb
call
movl
js
lds
mov
ss
cmpsl
pop
arpl
adc
pop
jge
mov
mov
sub
mov
lret
cmp
adc
int3
subl
shrb
and
call
sbb
movsb
loope
adc
jo
mov
outsl
push
mov
pop
enter
stc
push
testl
fildll
aas
pusha
mov
jb
inc
pop
and
sub
lds
push
ss
mov
ret
sbb
fstpl
fs
loope
outsb
jns
popf
das
sahf
or
call
add
frstor
hlt
pusha
add
sti
add
movsb
pop
add
add
pop
pushf
fs
cli
subb
inc
lcall
clc
mov
sti
push
jae
icebp
mov
hlt
pusha
jge
or
or
push
insl
insb
jecxz
pop
aad
lret
push
ja
out
fisubs
jae
jge
mov
pop
icebp
dec
mov
jmp
sub
arpl
rolb
fldenv
pusha
fisubrl
push
es
xchg
xchg
les
mov
and
leave
sti
std
icebp
fs
ljmp
jge
fs
push
mov
lds
out
cli
inc
xchg
cmp
out
iret
sub
outsb
adc
or
adc
cmpsl
movb
add
inc
lret
mov
cmp
xchg
mov
dec
push
xor
cmp
cmp
cmp
push
jbe
sbb
iret
xor
sub
loope
adc
fistpll
mov
push
adc
cs
cmp
jl
push
mov
dec
lret
cltd
call
lret
mov
or
lcall
pop
pop
insb
cmp
jmp
pop
cmp
lds
fisttps
xor
xor
pop
aas
dec
hlt
cltd
mov
fnsave
repz
xchg
aam
push
scas
loopne
enter
into
pop
aam
mov
imul
sbb
cmp
mov
mov
das
test
aas
fldenv
fs
xor
loopne
mov
sahf
push
call
in
cmp
fldl
stos
cmpsl
mov
and
cmp
xlat
sub
push
pop
dec
jecxz
cmpxchg
fbstp
into
mov
xor
ljmp
or
adcl
jle
cmpsb
xchg
gs
mov
add
clc
inc
cld
orb
call
mov
jne
xchg
lret
xor
cmpsl
fbstp
cmpsl
jns
push
mov
dec
mov
out
and
xchg
mov
pop
push
test
inc
xchg
cli
or
arpl
jg
xchg
ss
mov
lods
mov
out
sbb
adc
int3
pop
pop
jp,pn
cmpsl
hlt
xchg
add
jl
mov
scas
jecxz
std
sbb
inc
mov
mov
outsb
xor
xlat
inc
ss
ds
jmp
dec
lds
xlat
sub
stos
inc
mov
cmp
adcl
hlt
pop
fcomps
cwtl
ljmp
push
cltd
aad
jo
popf
arpl
mov
pop
pop
sahf
lcall
add
or
cmpsl
dec
mov
dec
sub
adc
pop
adc
push
or
sbb
xchg
movsb
mov
adc
fnstenv
pop
add
jns
pop
lds
out
mov
push
jb
inc
frstor
inc
add
xchg
mov
je
mov
sub
fnstenv
sbbl
dec
sbb
inc
cmp
inc
push
pop
adc
test
fdivl
sahf
sti
ret
lret
fcomps
nop
or
cwtl
sbb
jae
sbb
rol
dec
mov
pop
mov
gs
aad
ja
and
mov
pop
rcrb
fisubs
mov
test
jle
popf
out
jns
aam
cwtl
add
pop
sub
test
imul
ljmp
es
or
int
cmp
adc
push
jl
and
adc
out
push
lahf
pop
dec
fucomip
jo
ficoml
nop
and
xacquire
xchg
xchg
jmp
aad
test
test
popf
bound
sbb
xchg
jg
xor
mov
xor
mov
sti
test
cmp
cmp
jae
adc
in
jmp
in
pop
push
stc
dec
shlb
std
pop
add
and
xor
jecxz
insb
in
sar
dec
loope
les
repnz
adc
push
sahf
lret
sti
cmpsb
pop
mov
sub
stos
mov
pusha
jns
sahf
pop
clc
in
add
inc
aas
mov
pop
jmp
pusha
and
and
inc
aaa
xchg
fbld
roll
push
inc
xor
test
js
bound
cmp
arpl
mov
sahf
adc
lret
mov
ljmp
push
jbe
aaa
ret
cmc
fcoms
clc
dec
dec
out
and
push
in
mov
imul
daa
incb
jnp
addr16
mov
or
xor
adc
adc
ss
push
inc
jge
inc
lods
ljmp
lret
int3
adc
pusha
mov
jbe
lahf
mov
stos
jne
fiadds
jns
or
add
inc
sbb
rorb
pop
insl
pop
inc
out
jp
xchg
in
andl
mov
nop
lods
adc
ja
cmp
xor
rcrb
scas
jl
cld
sbb
mov
out
push
adc
test
cmpsb
lea
add
dec
out
xchg
outsb
push
daa
dec
dec
loopne
add
cmp
push
lods
cmp
and
in
mov
sub
sub
jnp
sub
sub
jnp
mov
jb
cmp
and
in
inc
jo
xchg
push
sbb
add
jnp
sub
xor
push
dec
testb
xchg
cli
push
push
ret
aad
mov
xchg
dec
cld
xor
fldcw
imull
and
mov
fwait
mov
mov
xor
in
lea
jg
or
test
out
jae
push
inc
loope
sbb
push
sahf
mov
dec
xchg
shrb
jge
call
xor
xchg
das
xor
lods
or
inc
push
pushf
fisttpl
imul
lcall
sub
insl
dec
jl
sub
push
push
js
or
lock
sub
pop
fiaddl
and
ret
fwait
mov
lds
test
lret
pop
rcrb
sbb
push
pop
loop
les
sbb
nop
cmp
mov
adc
mov
xchg
mov
sub
js
aaa
cli
mov
xor
mov
test
lds
mov
xor
repnz
add
aad
xchg
fistpll
sub
shll
mov
mulps
xchg
jle
call
jmp
cltd
movsb
ds
dec
scas
push
pop
and
jb
leave
fisttps
lods
mov
push
and
add
fisttpll
aam
cmp
or
mov
iret
push
fimuls
xchg
fmuls
loope
add
orl
sub
add
xchg
mov
xor
dec
and
pop
movb
loopne
xchg
push
lods
mov
das
in
xor
or
inc
xor
mov
sbb
es
push
mov
lods
loopne
xor
adc
in
fidivrl
je
shlb
cmp
mov
flds
jmp
cs
and
push
inc
or
scas
jns
imul
loopne
dec
xor
or
into
loopne
sahf
cmp
and
xor
sahf
dec
cmpsb
dec
fs
adc
mov
xchg
sub
jns
mov
xchg
test
push
xchg
and
insl
push
or
dec
shll
push
js
sti
inc
pop
loop
stos
stos
arpl
outsl
out
daa
mov
js
mov
int3
movsb
ror
pop
or
std
pushf
xchg
ljmp
rcll
or
cli
push
or
sbb
adc
sub
icebp
xchg
mov
add
out
sub
and
out
clc
jae
je
sbb
add
xchg
icebp
into
push
xor
int
testb
popf
loope
lock
adc
xchg
in
iret
divb
shlb
std
stc
idivb
pop
mov
nop
or
push
and
ljmp
pop
iret
call
and
xchg
mov
data16
data16
or
ljmp
lcall
mov
out
rcr
cld
stos
pop
fsubr
outsb
out
sub
inc
mov
call
adcl
mov
fiaddl
daa
pop
xor
hlt
jecxz
nop
mov
popa
push
imul
push
scas
jns
push
sbb
data16
mov
fnstcw
pop
cli
add
push
mulb
and
cli
movb
pop
shr
mov
xor
loop
scas
call
aam
data16
adcb
cltd
jns
inc
bound
or
mov
xchg
cmp
adc
cmp
push
adc
push
xor
sti
repz
call
out
rolb
add
jmp
pop
adc
loope
mov
cmp
cmp
mov
inc
mov
shll
adcb
push
ret
mov
jns
repnz
push
mov
rcrb
sbb
mov
or
cmp
inc
sbb
addr16
cltd
pop
fs
or
jb
mov
mov
and
loope
jne
xchg
add
mov
mov
mov
xchg
mov
push
idiv
xchg
sub
mov
shl
rcr
pop
push
pop
pavgb
ret
addl
pop
lret
dec
daa
mov
sbb
rorb
or
mov
add
bound
clc
push
pop
fadds
sub
push
movsl
pop
lcall
aas
cmp
or
icebp
out
add
daa
push
sbb
mov
or
lods
sub
lahf
repnz
aaa
inc
add
sub
mov
mov
mov
sub
inc
pop
jl
ret
sarl
stos
loop
jae
outsb
jne
mov
in
or
mov
pop
movsl
ret
xchg
loopne
out
xor
fistpl
pop
mov
sbb
jle
push
std
jge
out
mull
and
inc
das
and
push
jl
inc
dec
sar
pop
loope
mov
test
cs
mov
jno
scas
or
mov
mov
test
sbb
arpl
mov
xor
sbb
xchg
pop
xchg
inc
das
pop
and
out
mov
sbb
es
arpl
sbb
mov
in
adc
pop
insl
pop
pop
in
mov
in
inc
sahf
jne
int
stc
jo
mov
fdivrs
lods
stos
mov
pop
repnz
fisttps
xchg
fucomi
lds
mov
fstl
cs
popf
jle
jo
add
dec
fldl
or
loope
cli
lock
insl
sbb
mov
movsl
lret
addr16
or
adc
sbb
mov
mov
jl
jp
loope
sbb
test
jecxz
lds
mov
cltd
movd
int3
adc
insb
test
lods
push
jp
sub
jno
and
cs
dec
and
push
loope
push
jno
adc
fisubrl
xor
cmp
sti
cs
xor
add
mov
in
mov
adc
mov
xchg
jl
outsb
mov
xchg
pop
rcrl
push
stos
mov
sbb
addr16
sub
push
into
and
test
pop
shrl
pop
push
in
das
shlb
shrd
lret
jne
fs
jl
int3
in
test
sbb
lahf
test
dec
jmp
adc
nop
mov
fwait
or
jle
jns
mov
repz
ja
in
mov
jnp
mov
pop
lea
or
or
jne
jns
push
fwait
mov
jae
mov
cmp
push
push
pop
pop
lahf
nop
es
inc
jo
rolb
pushf
mov
clc
enter
sub
call
mov
pcmpgtd
push
cld
push
mov
pop
cmp
lahf
mov
mov
add
xorl
les
or
int3
je
push
mov
mov
fsubrl
pusha
shl
int3
shlb
add
pop
dec
push
adc
cmpsb
stc
xchg
jge
cltd
cmp
mov
or
mov
pop
mov
dec
and
xor
add
mov
test
fcmovu
mov
mov
xor
lahf
pop
das
jp
push
sti
ss
out
aas
pop
lods
xchg
push
mov
fildl
jbe
imul
inc
adc
jne
sbbb
fmuls
jecxz
das
mov
mov
imul
loopne
adc
out
fists
mov
lock
or
iret
push
push
or
add
sub
jmp
lods
jecxz
pop
mov
bound
ret
ret
jg
mov
xchg
std
cld
pop
mov
negl
pop
jge
xor
push
out
mov
mov
fists
and
fldt
or
pop
cltd
dec
inc
cmp
xchg
test
loop
and
jmp
cmpsl
out
dec
ret
add
jae
ljmp
scas
repz
cs
sbb
in
mov
sbb
insl
dec
fidivrs
xchg
imul
cmpsl
mov
jns
push
mov
lret
mov
inc
movsl
push
aas
xlat
lods
jo
adc
and
cmp
lods
xor
adc
jp
ret
fcmovnbe
cmp
das
xor
jae
sbb
xchg
cmp
cld
xchg
xchg
leave
mov
pop
cmp
mov
mov
mov
mov
cli
jae
test
push
and
repz
add
shrl
insl
cmp
push
imul
xchg
or
xchg
xchg
jg
nop
popa
sub
lret
or
out
leave
jae
aam
cmp
je
or
pop
jno
cmpsb
adc
hlt
sarl
dec
push
scas
pop
dec
pop
clc
mov
jmp
and
adc
xchg
out
cmp
mov
inc
mov
sub
and
and
jo
imul
xchg
jnp
imul
ret
dec
sarl
add
jae
inc
lret
push
cmp
or
pop
ret
dec
sarl
add
jae
inc
lret
push
cmp
or
pop
ret
lret
sarl
add
jae
arpl
push
cmp
or
pop
inc
dec
sarl
add
mov
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
sbb
cmp
push
pusha
das
dec
or
hlt
mov
mov
mov
in
xchg
call
cmp
pop
xor
and
adc
add
hlt
mov
mov
mov
movsb
clc
xchg
call
cmp
pop
xor
and
adc
add
lret
enter
fsub
mov
test
adc
xor
push
repnz
in
pop
jecxz
push
call
scas
xchg
push
mov
jl
pop
scas
dec
hlt
jl
and
inc
aad
pop
int3
dec
fildl
add
lds
xchg
mov
mov
mov
lcall
xor
sbb
mov
xchg
jnp
call
gs
push
das
push
xor
push
icebp
pop
sub
mov
enter
arpl
mov
xor
fildl
and
sub
testl
icebp
lock
add
xor
ret
daa
js
fisttps
int
dec
rol
les
fwait
push
aas
sub
cmp
pop
xor
and
adc
add
hlt
mov
mov
mov
movsb
clc
xchg
call
mov
adc
cmp
jno
je
cwtl
in
lret
mov
mov
popf
push
cwtl
loope
xor
imul
cmp
mov
mov
subb
xchg
loope
ljmp
dec
xor
adc
add
hlt
mov
mov
mov
movsb
clc
xchg
call
cmp
pop
xor
and
adc
add
hlt
mov
mov
mov
movsb
clc
xchg
call
jno
cmpsb
push
xchg
mov
mov
jp
in
pop
and
lcall
imul
rcl
mov
testl
mov
fwait
in
clc
jns
icebp
cltd
inc
cmp
add
jecxz
movsl
les
jge
fldl
lods
leave
inc
xchg
lret
hlt
out
iret
fabs
fisttps
cmc
insl
sbb
rcr
xchg
xchg
cwtl
fiaddl
sti
mov
or
jmp
adc
int
arpl
out
maskmovq
notl
pop
pop
mov
pop
cli
inc
sbb
stos
mov
test
mov
xor
sti
xlat
or
cmpsl
loop
jmp
clc
pop
adc
jg
and
jbe
cmpsl
std
push
mov
scas
gs
ljmp
push
aam
and
sub
sub
fisubl
sbb
sbb
sbb
cmpb
lods
je
ds
aaa
pusha
xor
cmc
repnz
repz
dec
mov
inc
and
loope
rolb
call
repnz
inc
and
dec
xor
xchg
mov
orb
dec
std
fsubrs
xchg
aas
adc
jb
sbb
stos
mov
ja
testb
pop
xlat
repz
xor
insl
and
jbe
icebp
push
mov
cwtl
and
xor
scas
mov
and
fildll
lock
xchg
daa
inc
cmp
inc
push
stos
out
inc
cmc
fistl
cmp
enter
xor
ss
dec
xor
push
cmp
nop
push
push
mov
cwtl
jae
jmp
cmp
push
add
faddl
rolb
adc
pop
xchg
test
add
pop
xchg
mov
lock
mov
jmp
lock
shlb
stos
ds
xor
negl
jg
or
insb
mov
dec
scas
sahf
and
xchg
call
mov
ds
das
xor
xlat
xor
cwtl
add
repz
in
in
into
out
popf
es
jbe
insb
cmp
pop
and
jbe
test
clc
into
outsb
or
pop
xchg
out
adc
sub
adc
outsb
add
mov
push
arpl
ja
mov
add
aam
sbb
jge
sbb
dec
xor
clc
lods
ja
dec
in
lahf
sarl
cmp
repnz
into
jbe
cmpsl
push
push
test
xlat
test
je
xchg
jmp
sub
or
xchg
push
xor
dec
fwait
dec
scas
aas
jo
pop
scas
fcoml
js
pop
int3
xor
repz
cmovs
jb
xchg
xor
ja
sbb
ss
xor
fdiv
inc
jmp
aam
neg
jg
push
and
mov
arpl
mov
xchg
dec
cmp
adc
or
mov
lret
sbb
jp
movsb
iret
fidivs
jecxz
pop
popf
jl
mov
test
pop
shl
movsl
lods
cmp
lret
mov
push
adc
insl
mov
jae
xchg
add
stos
push
inc
mov
cmpsb
push
gs
outsb
cmpsl
cs
std
leave
sub
test
push
or
int
inc
xchg
and
ds
push
mov
jnp
push
ret
push
inc
cmp
adc
mov
xchg
sub
push
js
pusha
into
pushf
mov
mov
dec
pop
mov
in
leave
ss
negl
add
dec
out
test
scas
or
push
mov
insl
js
rorl
sbb
sti
xchg
ljmp
mov
cltd
pop
push
lock
cmp
andb
mov
mov
xor
xlat
lret
addr16
push
push
lods
dec
pop
lods
cmp
test
add
dec
popa
stos
movsl
rcrb
fstps
push
bound
xchg
out
lret
icebp
es
js
or
pushf
ds
jle
imul
push
fbld
fwait
push
or
daa
lcall
stos
insb
xchg
mov
sub
stos
sbb
clc
in
iret
int3
cmp
les
lods
mov
sub
mov
pop
xor
xchg
cs
mov
out
jno
jl
pop
xchg
in
out
or
xchg
loop
push
ljmp
jne
cs
push
lods
aas
and
mov
cmp
iret
add
das
lods
mov
mov
rolb
ss
add
aaa
xor
or
sub
dec
and
cld
inc
jmp
mov
dec
xorb
xchg
aas
mov
movsb
xor
push
jnp
mul
sbb
jb
mov
dec
je
jge
outsb
call
scas
lock
sbb
shll
push
adc
push
mov
xorb
jo
inc
adc
push
int
ja
jmp
iret
sub
jmp
push
push
xor
xlat
jns
cmpsb
mov
in
xchg
add
imul
cmp
dec
sbb
daa
inc
sub
pop
arpl
loopne
push
mov
ds
xchg
dec
idivl
cmp
int
clc
enter
mov
jo
outsb
mov
pop
add
in
dec
dec
add
and
ljmp
jp
jle
cmp
pop
sub
dec
call
sbb
fcmove
iret
add
dec
adc
mov
fs
insb
imul
shl
xlat
add
jns
add
test
out
into
rcl
push
pop
loope
imul
pop
mov
mov
aam
scas
cmp
add
or
loopne
and
and
outsl
sbbl
out
xchg
mov
add
aam
loopne
loope
mov
mov
adc
adc
xchg
call
add
sbb
es
pop
cmpsl
mov
fsts
leave
iret
rcrb
cmc
jge
insl
xor
test
mov
adc
ss
les
sti
scas
adc
cmp
pop
shrb
jl
mov
fwait
mov
pop
cmc
inc
adc
jb
dec
loop
fdivrp
dec
add
mov
addl
pop
or
push
aad
cwtl
mov
jns
cmp
lea
les
rcrb
xorl
dec
sub
jp
dec
fstl
sub
loope
push
pause
pop
insl
sub
or
cmc
jmp
imul
dec
and
mov
fwait
pop
push
xchg
mov
repz
insb
dec
sbb
test
mov
mov
mov
fs
popf
adc
fldl
cli
fidivl
push
cltd
nop
jg
bound
out
fldl
jl
cmp
and
xchg
mov
sti
xchg
jmp
lahf
std
pop
pop
stos
xor
mov
jbe
jmp
fs
dec
cmpsb
fisubrs
ret
aaa
int3
out
or
adc
xchg
mov
in
push
or
sahf
dec
ret
push
std
adc
and
arpl
xchg
mov
iret
add
add
shlb
mov
fcomi
mull
popa
in
pop
mov
add
jne
jmp
in
inc
fbld
mov
ljmp
les
or
push
lret
xchg
xchg
popf
fmull
clc
icebp
push
lods
adc
movsb
imulb
faddl
arpl
dec
sahf
insb
jle
inc
jnp
jle
leave
sahf
divl
sbb
in
movsl
ja
mov
add
mov
mov
add
mov
xor
int3
lcall
cmpsb
cmp
shll
sahf
add
mov
lret
jns
pop
icebp
mov
inc
and
sbb
mov
pop
shrl
je
adc
mov
jno
bound
sub
push
xor
andb
jle
lds
mov
movsb
fwait
and
push
outsl
call
dec
or
or
mov
test
out
out
dec
clc
jnp
xor
sbb
jno
xchg
js
mov
push
rclb
add
in
mov
xor
adc
shl
nop
es
pop
mov
pop
push
xchg
push
ja
clc
mov
sbb
dec
enter
jle
cmc
mov
jle
mov
mov
xor
xor
mov
pusha
enter
pop
or
mul
or
or
push
movsb
xchg
sub
push
jg
js
sub
out
cmpsb
xchg
pop
ljmp
cmpsl
mov
scas
mov
cltd
pop
popaw
push
dec
adc
icebp
xchg
ljmp
outsl
mov
testb
movsl
movsb
fstpl
mov
push
push
cmp
sbb
test
cmp
rcl
dec
xor
adc
mov
jno
test
outsl
mov
orb
xchg
in
add
dec
inc
bound
push
pop
rorb
notb
ja
ss
xor
jne
sbbl
fmulp
lahf
mov
fcmovnb
mov
repnz
dec
cmp
xlat
outsb
mov
dec
inc
mov
jbe
andb
fsubl
adc
add
mov
jle
xor
sbb
xchg
dec
andl
in
lods
push
test
mov
xchg
sub
aad
pop
dec
or
push
out
jmp
lea
lods
push
mov
adc
pop
mov
pop
pusha
xor
mov
cmp
pusha
pushfw
mov
out
xchg
fwait
lock
test
mov
sbb
mov
xor
jb
mov
jecxz
jnp
scas
out
sub
hlt
adc
repz
into
mov
je
lahf
mov
cld
mov
adc
aad
and
cmc
clc
adcl
sbb
test
xchg
das
mov
outsl
stc
adc
push
popa
mov
push
dec
cli
jle
jge
inc
push
cmpsb
cmp
sbb
add
jmp
pop
adc
sbb
xchg
adc
ffreep
pusha
sbb
dec
add
addl
data16
lods
inc
dec
add
cbtw
dec
or
xor
adc
nop
xchg
mov
mov
or
outsb
and
add
test
or
push
je
push
inc
jnp
dec
xchg
or
pop
mov
sbb
push
xchg
mov
popa
cld
enter
setne
xchg
xor
shlb
in
mov
fsubrl
popa
fsubr
push
mov
cmp
sbb
mov
push
cmp
push
outsl
sub
cmp
loope
pop
call
push
loopne
inc
cmp
jl
orl
sbb
cmc
adc
lods
and
mov
int
outsl
pusha
pop
shll
jns
or
mov
shll
sub
cmpsb
mov
sub
push
cmp
cmp
pop
dec
idivb
enter
mov
sarl
imul
in
lret
test
adc
popf
adc
sbb
xlat
std
push
sbb
mov
ret
mov
pusha
mov
add
iret
mov
fldt
inc
xlat
push
test
out
xchg
mov
icebp
arpl
fldcw
insb
inc
data16
jae
imul
xchg
fiaddl
mov
inc
mov
dec
xor
shrb
je
add
in
lea
jno
add
mov
cwtl
in
in
loop
aam
sbb
push
pop
cwtl
mov
clc
fiadds
xchg
cmp
xchg
fisttpl
push
xchg
or
sbb
test
cwtl
dec
fstl
outsl
lret
and
mov
adc
sbb
pinsrw
xchg
dec
pushf
or
dec
fmuls
add
jl
stc
sbb
adc
rcll
out
sbb
adc
push
arpl
and
push
mov
mov
jle
mov
mov
imul
dec
adc
pushf
pop
std
mov
insl
mov
lahf
mov
gs
xchg
add
jle
push
loopne
sbb
push
cmp
dec
pushf
xchg
push
addr16
push
add
and
mov
pop
cmp
das
sub
orl
out
jne
lcall
or
sub
popf
fisttps
inc
imul
and
xchg
pop
mov
sbb
ja
addr16
ja
mov
jmp
push
push
repnz
mov
mov
xor
or
fsubp
test
les
loopne
out
cltd
xor
jle
adc
xchg
clc
push
push
ret
xor
std
dec
popl
lcall
or
and
test
cmp
ljmp
jge
add
clc
xchg
lds
inc
jb
das
xor
shl
push
cmp
cmc
and
and
and
xchg
adc
lahf
jecxz
dec
xchg
cmpl
inc
out
xchg
data16
ds
pop
in
cmpl
iret
xlat
aam
sahf
hlt
test
and
movsl
sbb
xchg
jle
jg
aaa
add
mov
leave
and
notb
jne
mov
sbb
mov
mov
adc
stos
ror
mov
jbe
shll
adc
aad
xchg
xchg
inc
dec
lret
stos
xorb
stc
leave
push
call
jae
or
cs
cwtl
dec
sbb
dec
int3
mov
mov
lcall
xlat
adc
pop
fincstp
cmp
mov
pop
icebp
daa
adc
mov
loop
push
dec
mov
jp
ss
iret
pushf
pop
into
mov
pop
repnz
lcall
push
jge
mov
scas
fdivrs
mov
push
in
xchg
xor
arpl
loope
pop
lahf
or
push
rcrl
es
add
sub
add
fwait
push
sub
repz
sbb
sub
aas
gs
fsubrl
jns
into
nop
pop
test
push
lret
mov
inc
inc
pop
fmul
in
bnd
stc
repz
mov
aam
jns
jbe
add
or
add
ds
outsb
scas
pop
sub
pop
ljmp
jg
pop
pcmpeqw
push
xchg
cmc
shlb
jb
pusha
mov
popf
movsl
pushf
mov
jne
push
add
push
mov
pop
lods
mov
jge
and
out
je
inc
into
nop
pop
push
lcall
dec
pop
inc
pop
mov
jo
jns
popa
sub
into
xchg
xchg
cmp
dec
inc
adc
mov
insl
mov
in
in
adc
stos
mov
mov
dec
mov
adc
jle
cmp
jb
and
pusha
into
aas
cmpl
mov
fmul
repz
jge
test
out
test
js
test
psubw
out
fistpl
push
dec
neg
sbb
sbb
mov
cmpsb
inc
add
xorl
mov
loop
inc
outsl
inc
fwait
push
push
pop
push
push
add
js
jg
arpl
and
xchg
aas
dec
pop
lods
or
rcr
cmp
je
stos
mov
mov
push
mov
xorl
push
imul
inc
mov
push
in
shlb
sub
sbb
add
mov
shl
stos
loop
ja
and
pop
xchg
into
mov
mov
pop
pop
mov
stos
mov
push
add
adc
adc
inc
repz
insb
mov
xchg
cltd
inc
mov
sbb
fmull
xchg
jge
test
loope
sub
test
jnp
je
xchg
or
fimull
adc
lret
lods
pop
test
lea
lcall
sub
push
mov
adc
mov
enter
xchg
fs
mov
mov
sub
ficoml
xchg
lea
mov
aas
ret
fadds
popf
sbb
xchg
les
sbb
shll
scas
cmp
addr16
jp
mov
lock
imul
je
xchg
dec
mov
mov
xchg
negl
scas
adc
test
cmp
jb
xlat
push
add
jb
sub
cmpsl
fiaddl
adc
mov
in
pusha
xchg
adc
pinsrw
xchg
xor
ret
scas
arpl
sub
cmpsl
call
fistl
js
mov
js
xchg
gs
lret
lea
addl
mov
xor
mov
insl
jne
ja
xor
loope
cmp
cmpb
push
sbb
je
cmp
xor
loopne
int
xchg
arpl
mov
dec
lds
pop
jo
outsl
xor
push
movntq
icebp
cmpsl
pop
push
dec
jecxz
cwtl
idivb
cmp
cmp
daa
dec
xchg
ja
addr16
ret
movsb
out
push
in
cmp
into
in
pop
sub
push
addr16
adc
mov
push
sbb
push
sbb
and
push
inc
ljmp
imul
mov
pusha
or
xor
int3
shlb
das
aas
insl
outsb
shlb
xor
lret
mov
push
and
pop
cmc
lods
mov
and
xchg
std
imul
jl
cmp
adc
adc
roll
cwtl
mov
fstps
insl
mov
stc
push
mov
std
mov
shlb
xchg
xchg
in
mov
pop
lcall
jo
add
int
lods
push
rcll
fldcw
ret
enter
xor
push
adc
inc
xchg
inc
or
dec
shll
sbb
add
xchg
push
js
icebp
cld
jecxz
das
lcall
cmpsl
roll
push
int
or
leave
popf
push
aam
std
sub
push
mov
fmuls
jecxz
pop
int
cmp
adc
mov
sarl
pop
mull
loop
lds
ficomps
add
faddp
jnp
into
out
clc
hlt
cmp
push
mov
mov
and
fcompl
xchg
fsubl
fldenv
in
testl
lret
cmp
std
adc
pop
dec
push
xor
push
jg
fstpt
and
aad
fmull
sub
push
or
sbb
cmpl
add
sbb
add
outsl
inc
shl
inc
cli
xor
addr16
aad
subl
lock
mov
cmc
or
inc
dec
xor
sbb
lea
not
push
mov
or
lcall
sub
clc
jecxz
jmp
cmpsb
add
scas
arpl
sar
or
sbb
imulb
lock
pop
test
stc
mov
scas
pop
fadds
es
xchg
jle
stc
test
sub
loop
lock
cli
je
ljmp
add
inc
xchg
out
xchg
aam
mov
jge
dec
aas
nop
xlat
jbe
push
or
jl
inc
pushf
xchg
xlat
jo
push
jns
push
jl
jmp
repnz
test
mov
cmp
push
push
mov
pop
leave
es
sub
or
jge
sbb
xchg
mov
or
mov
stos
jg
fdivr
jmp
fcoml
aaa
aaa
dec
cwtl
add
mov
sub
es
sbb
test
sti
ds
ljmp
xchg
xor
mov
cmpsb
sub
push
lods
sarb
jno
hlt
test
mov
and
adc
aad
adc
out
cmpsl
push
add
push
nop
lods
stos
jmp
cwtl
dec
cmp
out
pop
pop
dec
mov
not
into
daa
fldcw
mov
out
mov
push
adc
jae
out
xchg
pop
mov
xchg
mov
add
pop
sbb
out
xchg
mov
cmp
pop
inc
xorl
mov
fcoms
lahf
dec
shl
bound
pop
decl
imul
push
pusha
inc
mov
fmull
pop
xchg
sub
ficomps
movhps
std
shl
ds
push
clc
mov
mov
push
fistl
inc
mov
shrb
into
leave
je
jne
pop
cld
testl
rcrl
repnz
inc
out
scas
ljmp
jl
or
adc
pop
mov
shrb
fiaddl
xchg
outsb
cli
fisubs
push
cs
lret
es
rcll
cmp
pushf
lcall
mov
add
jbe
lea
aas
push
test
enter
jne
cs
popf
mov
push
loop
in
mov
pop
cmp
adc
pop
enter
cmp
xor
ja
xor
dec
sub
push
jb
push
cmp
add
xchg
les
sbb
jle
dec
dec
stos
mov
mov
lds
sbb
sub
inc
mov
lret
mov
jecxz
pop
pop
jle
and
cmpsb
les
addr16
cltd
push
fisubs
inc
sub
scas
enter
xor
ret
pop
loop
aas
pop
insl
xor
mov
sub
fnstcw
jb
push
iret
aam
mov
test
cmp
push
pop
mov
ret
and
in
cmp
xlat
iret
imulb
dec
mov
pushf
imul
dec
cli
cltd
push
sbb
sbb
aas
fxch
add
int3
push
or
sub
fs
push
sub
dec
and
adc
add
hlt
mov
mov
mov
movsb
clc
xchg
call
cmp
pop
xor
and
adc
add
hlt
mov
mov
mov
movsb
clc
xchg
call
cmp
pop
xor
and
adc
mov
mov
mov
movsb
stc
xchg
call
cmp
pop
xor
movsb
clc
xchg
call
dec
adc
test
scas
cmp
pop
add
jnp
mov
mov
pop
cwtl
imul
xor
and
adc
add
push
mov
mov
or
sbb
sub
cmp
ret
inc
mov
cmp
mov
pusha
test
mov
mov
adc
add
xor
das
ror
shll
test
cmpsl
xor
roll
mov
jmp
push
roll
aaa
in
sbb
rol
scas
and
and
test
mov
jmp
pop
mov
dec
out
and
push
pop
fcom
icebp
addb
daa
fists
adc
lea
xor
mov
addr16
xor
nop
and
int
fistpll
jno
mov
cwtl
movsl
dec
and
icebp
or
aas
cld
jmp
dec
call
sbb
lahf
call
push
cmpsl
pop
xor
fdiv
cmp
sub
int3
daa
ja
out
clc
shlb
cltd
pushf
and
es
pop
daa
div
jns
test
and
inc
daa
and
add
add
mov
mov
outsl
sbbb
add
sub
and
shll
shlb
adc
add
push
mov
mov
insb
pushf
jne
sub
fcoms
xchg
inc
in
cld
adc
push
fldl
dec
mov
mov
jl
jbe
inc
cmpsl
jge
lret
push
lods
jno
outsl
in
adc
or
xor
push
or
lock
sub
cmp
enter
call
jo
pusha
test
mov
mov
or
sbb
sub
cmp
enter
call
jo
pusha
test
mov
jmp
daa
cmp
pop
xchg
scas
pusha
push
out
stos
jle
mov
lds
sub
es
mov
xchg
sub
mov
loopne
xchg
ja
jne
and
inc
push
sub
in
adc
jnp
mov
test
cli
cld
add
out
push
andl
dec
mov
fdivs
cmpsl
lock
popa
xor
push
out
lods
jle,pn
scas
add
loop
dec
xor
xor
aam
mov
pop
inc
push
lea
cld
test
xchg
rol
hlt
jbe
scas
push
mov
lret
jp
mov
cld
pushf
andb
arpl
jb
repnz
movsl
push
add
jl
sbb
sarl
fistps
ja
lods
lods
pop
leave
das
add
es
and
bound
fdivs
scas
mov
adc
fnstcw
dec
pop
lods
xor
push
xchg
or
outsl
dec
cmc
push
fmull
lds
js
ret
stos
fsub
lret
xor
or
inc
mov
push
shl
pop
and
push
bound
in
mov
sbb
mov
mov
hlt
mov
fldcw
jno
add
out
push
add
ljmp
shll
test
ret
and
xchg
daa
mov
sub
mov
jno
mov
cs
push
and
jb
inc
add
aad
dec
call
cmp
adc
xor
int
iret
icebp
xchg
call
mov
xlat
jns
in
dec
imul
inc
ss
fildl
dec
aaa
ret
mov
jno
adc
push
inc
das
jl
ja
std
xor
adc
cmp
popf
fwait
add
and
xor
xchg
mov
hlt
pop
push
add
ret
adc
fwait
dec
inc
push
ret
pop
xchg
stos
cmp
xlat
in
fdivs
xchg
xor
cmp
aad
rcr
lcall
sar
sub
ljmp
inc
xchg
xchg
popl
mov
loope
inc
inc
push
jbe
adc
jo
loopne,pn
mov
mov
pop
fistpll
push
pusha
cmp
outsb
cmpsb
jne
jno
and
cltd
inc
ret
mov
out
xchg
stos
add
shl
insl
mov
rcrb
das
xchg
movsl
push
test
fstpl
mov
call
or
iret
mov
jg
or
lret
sbb
les
fs
icebp
je
test
insl
or
fisubrs
das
mov
xchg
jnp
adc
mov
cmp
xlat
push
sub
dec
and
xchg
fists
pop
lods
adc
dec
or
push
stos
pop
jnp
lds
test
imul
cld
fwait
cmp
mov
or
cmp
outsl
jno
lret
aaa
inc
test
sub
or
jae
divl
test
jg
add
pop
pushf
test
push
lcall
mov
push
loop
aas
bound
scas
ret
cmp
add
loopne
jp,pn
ret
shl
push
jno
push
add
pop
or
movsl
dec
jp
push
push
insl
in
pop
mov
rolb
or
sbb
movsl
sub
ss
cwtl
mov
adc
xor
lock
inc
cmp
test
sub
adc
xor
pop
jmp
mov
lods
mov
and
pop
jle
or
out
nop
xchg
jecxz
pop
add
test
outsl
in
mov
ret
je
xor
sbb
push
cmpl
cmp
gs
or
mov
fsubrl
hlt
cltd
movsl
jb
pushl
leave
inc
sub
inc
mov
fwait
mov
mov
pusha
cwtl
xor
jbe
pop
cmp
outsb
xor
and
ja
xor
xchg
cmp
jmp
jne
mov
popf
aaa
jo
insb
push
dec
mov
mov
push
or
loop
push
sbb
mov
outsb
scas
pop
data16
aas
push
mov
add
xchg
xor
fs
mov
sub
cmpb
int
push
mov
call
pop
mov
add
xchg
in
out
sub
fimull
and
xbegin
ret
cli
adc
hlt
insb
shrb
pushf
ss
out
imul
scas
mov
jmp
pop
push
or
sbb
push
jno
xor
jmp
iret
jg
xor
push
cwtl
pop
out
lahf
pop
mov
repz
fwait
loope
mov
loopne
xchg
scas
jmp
fisubrl
insl
dec
orb
cld
lds
repz
mov
sub
adc
sbb
jae
test
adc
inc
int3
popf
nop
or
dec
add
lock
adc
pop
jmp
sbb
push
jg
cmovbe
inc
and
lock
push
scas
jo
add
in
or
add
push
lock
in
sub
pop
sarb
mov
mov
faddp
lret
leave
les
xchg
mov
sbb
sbb
sahf
lods
xchg
and
je
inc
sbb
out
xchg
jge
repz
lock
cld
pusha
shr
xor
inc
push
jnp
lahf
lock
sbb
cld
repnz
ret
fs
rorl
les
push
cwtl
xchg
mov
mov
dec
inc
daa
cli
sbb
test
stos
ja
sub
jecxz
fcmovnu
ds
and
iret
es
mov
pop
inc
out
fdivs
fwait
mov
les
mov
mov
push
enter
cmp
fstpl
or
es
or
popa
fmull
jg
adc
push
and
pop
shl
sub
enter
sub
clc
mov
and
gs
mov
cmp
lahf
ret
mov
popf
inc
cmp
call
sub
sti
mov
test
xchg
jo
es
fidivrs
cld
aad
lahf
das
push
nop
inc
mov
stos
andb
sub
jge
cmpsl
rcll
xchg
adc
xchg
and
xchg
sub
mov
jle
mov
add
and
jno
inc
loop
cmpsb
pop
dec
dec
jl
aas
jnp
jnp
mov
mov
pusha
stos
aam
or
js
push
daa
scas
push
clc
out
or
out
xchg
add
into
mov
jmp
imul
lret
movsb
or
inc
ss
push
cmp
inc
xchg
inc
les
sbbl
jb
in
inc
jge
movsl
mov
aam
add
mov
push
stos
xchg
les
pop
fdiv
mov
dec
bswap
gs
xchg
xchg
aaa
leave
lock
scas
mov
xchg
loopne
dec
push
fidivl
enter
and
xor
fnsave
inc
mov
cmp
jmp
jge
add
mov
inc
fwait
pop
pop
imul
aas
movsb
test
ret
jecxz
push
stos
scas
aaa
out
or
sbb
and
shll
sub
hlt
and
adc
in
jo
int
jb
push
pop
fisubl
jg
jmp
mov
mov
inc
enter
ss
lock
in
out
dec
mov
scas
clc
std
cmp
lock
push
sbb
and
dec
jp
jecxz
or
loop
pop
sbb
mov
xchg
ffree
xor
cli
fcomps
jg
or
pop
sub
mov
and
daa
push
or
lds
dec
ja
push
inc
mov
adc
mov
mov
inc
mov
add
add
in
pop
push
fldt
xor
mov
sbb
xchg
cs
cmpsb
nop
lcall
outsb
mov
scas
addl
inc
adc
cmp
jp
adcb
sub
ret
fnstcw
popa
dec
lods
lcall
mov
push
lds
and
mov
pop
lods
jbe
cmc
cmpl
add
in
xchg
push
xor
popf
enter
andb
inc
or
ffree
lods
in
cmp
std
ficoms
add
shl
cli
mov
pop
or
lods
rcrb
mov
in
sub
aad
ret
aaa
outsb
jo
insb
xchg
movsl
mov
push
cmp
mov
jne
xchg
jp
push
jno
arpl
enter
aaa
int3
and
cmp
xlat
mov
xor
divl
lcall
jl
cmp
cmp
daa
imul
stos
inc
scas
mov
repz
push
cmpsl
mov
hlt
sub
or
outsb
sub
adc
sarb
mov
jb
push
inc
lcall
lods
imul
arpl
inc
scas
or
test
mov
mov
cmpsl
arpl
cmpsb
movzwl
add
dec
les
imul
lock
jo
mul
cltd
and
xor
sbb
std
addr16
stos
mov
or
xor
sbb
daa
in
xchg
movsl
scas
stos
add
movsb
repz
cmpsb
inc
in
mov
mov
out
cmp
dec
mov
mov
dec
or
mov
aad
sub
dec
lahf
dec
jmp
pop
cld
jmp
aad
int
jae
push
jae
call
cltd
fstps
bound
adc
insb
loope
or
iret
push
rclb
stc
mov
add
mov
sbb
adc
xchg
mov
ljmp
cmp
call
mov
repnz
sub
cmp
jno
outsb
inc
and
mov
cli
lret
inc
shll
sahf
loopne
jne
test
int
test
test
mov
inc
xorb
xorl
loopne
xchg
mov
mov
inc
mov
add
jns
shlb
imul
addr16
jp
lret
test
push
xchg
pop
mov
mov
leave
rclb
cmp
addr16
popa
adc
or
xor
aam
rcrl
js
cmpl
cmpsb
pop
lret
aam
dec
mov
cmp
enter
sub
mov
adc
ret
cmp
cmc
lock
mov
sbb
inc
lea
scas
fldl
sbb
cli
movsl
enter
aam
std
inc
inc
insl
pop
xchg
insl
xchg
pmulhuw
pop
mov
fsubr
pop
inc
or
inc
push
jecxz
mov
mov
jl
dec
cmpsl
orb
mov
dec
pop
mov
cmpsl
mov
cwtl
sti
movsb
fldenv
jo
insl
xlat
inc
cmp
in
cmpsl
stos
sub
sbb
shll
xchg
aam
mov
cs
cmpl
repnz
rsqrtps
dec
pop
jp
inc
adc
xchg
and
sub
fisttps
xchg
fisubrl
mov
ficoml
hlt
mov
pop
in
sarl
repz
inc
xchg
jb
mov
push
sub
dec
mov
jmp
in
adcb
or
lahf
fidivrl
lea
or
ljmp
adc
inc
ret
jo
pop
fcmovnb
outsb
int3
out
push
in
std
imul
test
inc
stc
adc
movsl
pop
push
cmp
sarb
mov
mov
mov
cmpb
adc
test
push
in
mov
adc
pop
push
ret
cwtl
das
jmp
add
pusha
popa
push
sti
pop
xchg
lret
nop
pusha
xor
xor
dec
scas
mov
addr16
in
in
mov
notl
dec
add
out
mov
cmp
gs
or
out
mov
sub
or
mov
jl
rcll
xor
xchg
arpl
ljmp
add
ss
stos
ss
xchg
stos
mov
sub
cmp
out
push
sub
mov
imul
mov
stc
lret
cltd
cs
xor
mov
stos
dec
mov
notb
xchg
lret
mov
sub
popf
ret
cmc
xchg
cmpsb
jl
insb
fcoms
sti
xchg
andl
repnz
xchg
fdivl
fisubl
shrb
lcall
add
in
sub
inc
dec
cmp
sub
mov
xchg
daa
sbb
cmp
mov
mov
mov
adc
dec
jle
xchg
add
push
and
jnp
pop
or
jmp
inc
rcrl
inc
dec
ss
popf
push
mov
adc
sarb
enter
mov
sbb
es
jl
push
mov
mov
lock
cmpsl
sbb
test
cmp
push
sahf
xor
mov
dec
sbb
mov
push
cld
mov
imul
pop
divb
push
ficompl
pop
aaa
pop
fstpt
jp
repnz
dec
icebp
mov
mov
pop
inc
ja
call
mov
jns
xor
cmc
dec
or
push
mov
popf
cmp
outsl
out
sbb
insb
push
lods
pop
sub
sub
jle
enter
jne
aaa
lds
xchg
ffreep
jns
leave
pushl
push
push
fstpt
lock
xor
mov
neg
sub
into
out
jno
mov
imul
popa
int3
ret
push
js
imul
enter
leave
stc
es
shll
xchg
cmp
std
lods
shl
xor
or
pop
xchg
jns
cmp
dec
aam
jno
ret
stc
pop
icebp
xchg
xchg
insb
hlt
push
cwtl
cmp
movsl
test
mov
pushf
sbb
outsl
xchg
jnp
cmpsb
xchg
into
mov
ret
sbb
sbb
pop
fcmove
sbb
adc
aad
negl
in
jo
test
and
push
nop
inc
sbb
gs
std
xor
jb
xor
jge
iret
push
and
dec
mov
stc
pop
insl
rolb
nop
jnp
repz
repz
jns
insl
cs
pushl
fsubs
mov
aam
dec
sbb
aas
outsb
xchg
push
sub
imul
jge
pop
fwait
mov
jb
sbb
add
inc
fstps
dec
cwtl
add
leave
mov
jle
inc
fsubrp
insl
movsb
xchg
and
sbb
push
vprotq
insl
inc
dec
mov
aad
cmpsb
and
add
xchg
neg
push
push
mov
daa
and
out
test
shl
testb
sub
mov
inc
lds
ljmp
mov
push
mov
inc
mov
mov
xlat
ret
dec
test
imul
shlb
cmp
pop
insb
into
jno
pop
inc
jnp
sbb
lods
xor
sub
jne
jno
into
repnz
pop
adcb
pop
ficomps
ja
test
arpl
daa
test
es
push
sbb
inc
insw
js
loope
out
rcll
div
addr16
adc
jg
and
adc
scas
jb
sbb
mov
daa
add
mov
bound
stos
roll
mov
mov
cmpsl
push
xor
out
fcomp
and
cmpsb
sub
jno
int3
jns
jp
fcomps
std
mov
fdivs
jnp
lret
xchg
mov
cmp
orl
mov
jg
call
std
cmp
ss
lahf
shrl
mov
xchg
adc
pop
in
pop
loopne
int
mov
cwtl
mov
frstor
arpl
mov
pop
pop
sarb
leave
cmc
mov
aas
adc
imul
int
cmp
std
out
mov
shrb
fucomi
aad
int
ds
pop
sarb
movsb
sbb
aad
fwait
sbb
sub
jno
push
ficoms
insl
xchg
shll
xchg
xorl
xchg
jno
mull
or
xor
adc
pop
ret
int
mov
mov
and
adc
and
ss
fisubs
pop
clc
data16
jbe
pop
xchg
dec
pushf
mov
push
pushf
fstpt
cmp
xchg
arpl
lret
rolb
mul
jle
mov
mov
imul
mul
mov
cmp
sub
mov
popf
popf
and
mov
pop
lret
sahf
daa
pop
sub
mov
cltd
test
mov
pop
call
sbb
outsb
mov
out
jno
insl
jle
fwait
popa
and
pop
aam
dec
inc
popa
pop
or
inc
sub
cmp
hlt
xchg
decl
rcll
cmp
push
mov
cmp
fistps
jne
dec
adc
loope
out
adc
ja
mov
nop
jmp
aas
into
adc
int3
cs
int
fwait
xchg
roll
and
mov
mov
adc
and
pop
shll
ja
jl
mov
mov
scas
mov
jae
mov
pop
ja
dec
and
sub
or
in
pop
das
jg
mov
mov
and
andl
cli
mov
xchg
xchg
lods
jle
aas
mov
and
xchg
jbe
mov
ror
pop
aam
jb
jns
hlt
out
in
dec
xchg
push
pop
dec
imul
ffree
push
mov
fwait
rorb
adc
mov
insb
inc
cmp
notb
xor
loopne
cmpsb
rcr
insl
mov
mov
notl
pop
adc
div
and
push
sarb
mov
daa
xor
and
xor
mov
stos
mov
jp
and
icebp
cmp
jl
pop
push
mov
mov
and
mov
repz
or
lea
in
push
jo
lods
les
adc
adc
or
mov
scas
int
sub
jno
out
cld
inc
out
and
cmp
sub
in
add
outsl
mov
test
sbb
pop
and
xchg
rorb
imul
mov
loope
xorb
cmp
loope
sbb
mov
loope
mov
or
ficomps
iret
adc
pusha
lcall
dec
imul
std
cwtl
imul
xor
cltd
mov
mov
stos
add
jmp
dec
add
insb
pop
cltd
cld
ficoml
inc
ss
insl
lods
mov
ret
pop
lcall
je
ds
test
mov
xor
mov
sbb
jp
cltd
sub
gs
and
mov
sub
outsl
inc
shlb
fs
aam
cs
mov
pop
sbbl
shll
ret
cmpsl
lcall
mov
data16
aam
adc
aaa
mov
rorb
mov
mov
lahf
filds
add
pop
and
test
sti
andb
lahf
mov
mov
pop
sbb
adc
pop
cmp
mov
dec
pop
ja
addl
push
stos
cli
mov
cmpsb
subb
insl
push
clc
xchg
lahf
add
cld
imul
arpl
stos
mov
sub
cmp
dec
mov
xchg
sbb
sahf
mov
mov
je
xchg
mov
and
mov
sbb
stos
or
lret
add
adc
adc
pusha
jo
loope
scas
and
mov
scas
test
mov
shlb
mov
sarb
pop
inc
notb
add
mov
adc
out
mov
sub
jle
scas
fwait
leave
loop
sub
pop
hlt
or
dec
or
add
scas
lods
js
cmp
add
mov
push
xchg
push
cmpsb
add
cmp
mov
and
or
scas
adc
int3
push
xchg
xchg
fs
int3
push
outsl
test
jl
cmc
imul
adc
aas
ficoms
test
pusha
imul
cmp
xor
xor
das
shlb
cmp
push
test
js
test
xor
lahf
mov
leave
mov
or
xchg
lcall
out
lea
pop
jo
xor
add
bound
sarb
sbb
xchg
inc
jbe
pop
xor
sub
clc
xchg
stos
pusha
add
pop
pushf
aam
jae
arpl
xor
outsl
fwait
ss
hlt
push
jno
stos
mov
std
push
or
in
jne
push
loope
popf
lods
ja
jnp
and
daa
pop
mov
ret
scas
mov
test
dec
pop
sbb
test
aas
int3
aad
jae
stos
in
sub
jo
jge
push
mov
adc
ja
pop
push
mov
iret
inc
mov
and
pop
inc
sub
cmpsb
and
and
inc
inc
out
pop
or
dec
in
sub
jmp
scas
jo
rcrl
leave
jecxz
mov
movsl
add
push
pop
iret
adcb
pop
xor
out
xlat
pusha
dec
pushf
mov
mov
icebp
jecxz,pn
jge
jle
lcall
into
push
fdivs
sub
repz
push
rcl
cltd
cmp
repz
aas
xchg
sub
jne
sti
inc
mov
inc
daa
icebp
stos
mov
cmpsb
lods
bound
rcrl
xchg
mov
jnp
insl
out
ds
mov
inc
or
sarl
jnp
repz
outsb
add
jmp
pop
xchg
or
fldenv
insb
mov
pop
adc
mov
or
sbb
sub
cmp
enter
call
jo
pusha
test
mov
mov
or
sbb
sub
cmp
enter
call
jo
pusha
test
mov
and
js
or
sbb
sarb
ror
fsubs
in
adc
add
push
mov
mov
mov
or
sbb
test
mov
mov
clc
ja
clc
adc
and
adcl
shll
xchg
adc
popa
divl
push
aad
and
adcl
shll
and
mov
cmp
sub
sbb
clc
insl
jmp
mov
je
adc
and
push
dec
mov
arpl
ss
jne
test
adc
stos
dec
mov
in
mov
dec
sbb
cld
lret
or
xadd
pop
and
imul
in
and
inc
sub
pop
leave
ss
push
cmc
cmpsb
mov
icebp
into
mov
cmp
mov
jno
jno
mov
and
mov
mov
jno
into
mov
push
sbb
cmc
mov
aad
jne
mov
jno
shrl
xchg
movsl
shlb
inc
adc
inc
lds
inc
sub
adc
and
and
mov
mov
sub
add
loope
icebp
inc
fmuls
cmp
or
jns
data16
xor
pusha
andb
mov
lahf
or
push
icebp
jle
or
and
fsts
icebp
gs
or
push
mov
test
push
in
sahf
push
mov
mov
inc
loopne
aam
loopne
in
lea
inc
rcll
and
adc
popa
cmc
jno
inc
aad
and
adcl
shll
add
jno
inc
aad
and
mov
pop
xchg
inc
jge
cmp
mov
lea
add
data16
push
adc
sub
mov
jmp
fcoml
repnz
das
sbb
mov
mov
inc
jb
in
add
data16
in
sbb
jnp
and
inc
shr
sbb
faddl
imul
lods
pop
inc
js
cltd
inc
leave
js
or
test
pop
adc
sbb
adc
jbe
les
ret
scas
shll
ja
cmp
lcall
test
pop
push
pop
test
xlat
mov
ds
out
aaa
inc
and
push
popa
stc
popf
sub
mov
stos
sbb
jl
mov
leave
mov
pushf
jb
sbb
dec
push
sti
arpl
inc
mov
sub
fs
test
jp
rolb
mulb
in
dec
lret
cs
std
push
inc
sbb
sbb
cmp
mov
push
jb
pop
ror
fadd
movl
gs
repnz
insb
jo
sub
jmp
push
pop
sahf
andl
pop
cs
or
or
loope
xchg
or
mov
jo
ja
push
xor
inc
dec
jmp
mov
call
mov
sti
sub
push
dec
popf
ret
cmpsl
jmp
call
mov
jo
in
les
jg
xlat
je
lcall
aam
xor
lret
push
xchg
les
lock
shrl
xchg
out
call
lods
push
std
add
dec
std
cmp
cltd
and
sbb
inc
mov
movsl
out
dec
or
in
gs
clc
inc
push
and
push
outsb
mov
fisttps
push
pusha
jl
xor
mov
push
imul
push
mov
pop
lock
push
pusha
addr16
sub
or
arpl
int
or
rcll
push
mov
mov
jg
arpl
or
xchg
xchg
mov
lds
bound
dec
add
jbe
dec
mov
imul
sbb
loope
xor
std
daa
fisubrl
testb
mov
pop
xor
fldpi
enter
aam
push
sbb
dec
inc
sbb
pop
cmpb
sbb
mov
cmp
in
lea
std
cwtl
stos
mov
mov
adc
sbb
sbb
lret
jb
ss
ljmp
inc
sbb
loope
sbb
mov
pop
daa
leave
fs
jnp
sbb
mov
mov
out
or
cmp
gs
add
pop
je
arpl
icebp
rcl
add
outsb
or
outsb
xchg
es
pop
sub
std
imul
lret
jge
mov
sub
loope
dec
out
mov
into
in
push
mov
dec
aad
sti
int
inc
or
pop
iret
mov
fiaddl
cmp
pop
fistpl
cmp
test
neg
in
outsb
out
jbe
mov
int3
daa
cmp
jp
mov
pushf
in
or
inc
lret
push
dec
xor
jmp
fstl
push
jmp
shl
test
push
jb
jb
lods
xor
movsb
pop
pop
insb
inc
sub
ljmp
push
shll
stos
fsub
int3
mov
xchg
mov
in
pop
lcall
mov
movsb
test
jg
cwtl
xchg
mov
mov
sub
mov
pop
in
jne
cmp
mov
out
or
dec
push
xor
out
mov
add
and
scas
pop
ja
iret
sub
xchg
xor
push
push
jecxz
xor
cmpsb
mov
mov
fiaddl
enter
or
loope
mov
push
push
clc
repz
dec
xor
jp
pop
pushf
stos
and
xor
ljmp
ret
push
in
mov
jbe
sbb
push
icebp
les
pop
push
cs
xchg
pushf
push
mov
mov
shll
xchg
xchg
cmp
jae
insb
jl
cld
mov
add
mov
mov
rcll
mov
into
xor
dec
std
lea
ja
dec
push
sub
scas
dec
inc
jb
cli
mov
cmp
jne
out
in
jg
add
sbb
out
ljmp
mov
cwtl
aaa
icebp
mov
jno
in
fs
in
mov
xchg
mov
mov
inc
sbbb
mov
jnp
cli
test
arpl
xchg
and
fstps
inc
xorl
out
dec
jle
jae
fsqrt
ljmp
add
punpcklwd
push
in
rolb
sbb
adc
dec
jnp
jl
push
push
jle
lcall
js
cltd
arpl
enter
push
inc
push
sbb
cld
fcoms
ret
sub
mov
cld
mov
imul
push
cmp
adc
in
cltd
mov
add
lret
sub
xor
popa
push
test
mov
scas
loopne
loopne
mov
mov
and
sbb
scas
rcrb
and
inc
pop
xchg
cmp
popa
dec
in
inc
sub
mov
mov
fisubrs
push
int3
mov
sub
xor
loop
stos
imul
mov
inc
in
frstor
insb
inc
lahf
inc
add
inc
xor
enter
mov
es
mov
cli
inc
fadds
cmp
into
scas
xchg
clc
movsl
in
cmp
mov
in
addr16
mov
cltd
loop
insb
xchg
jo
mov
cs
ss
push
lret
mov
sbb
ds
jns
fbld
inc
pop
dec
inc
add
lret
dec
adc
and
fdiv
insb
inc
sbb
test
push
and
daa
add
arpl
lret
jg
leave
cmp
call
into
pop
pop
mov
jg
pop
dec
lret
addl
adc
sbb
dec
sbb
and
pop
or
test
sbb
fcomps
inc
xor
xlat
or
shr
or
pop
mov
in
stos
ficoms
sub
lods
push
adc
sbb
jnp
popa
sarb
cmc
dec
push
hlt
fwait
or
dec
fs
jae
adc
or
or
inc
ficoms
filds
cmpb
mov
xor
add
sbb
cmp
mov
clc
incb
jo
adc
and
scas
or
gs
call
popa
xor
and
loopne
mov
xchg
lea
cltd
jnp
test
push
insb
lahf
out
pop
add
jno
leave
inc
mov
inc
ret
add
mov
ljmp
xchg
sub
fildll
fidivs
pop
int
dec
loop
fidivl
call
xchg
mov
jge
std
aaa
xchg
fistpll
pusha
jo
sbb
js
in
je
inc
pushf
xchg
push
mov
fdivl
xchg
add
pop
jecxz
mov
sub
sbb
sub
imul
out
adc
xor
mov
ret
shl
xor
test
dec
lahf
sbb
lods
fmuls
cli
and
push
add
mov
es
adc
sub
leave
sub
fisttpl
rorb
xor
out
jnp
add
sbb
sub
scas
clc
xor
add
pop
push
xchg
sti
xlat
sub
cmp
lds
lods
adcl
imul
xor
movsb
jo
mov
mov
test
jp
lea
nop
ret
aas
mov
std
push
adc
jno
lock
mov
stos
add
lret
cltd
cmp
xchg
int
and
and
mov
push
ljmp
xchg
mov
arpl
test
mov
mov
test
pushf
negb
lods
push
dec
ja
nop
sub
pop
pop
sbb
insl
das
test
push
or
mov
addr16
push
and
sbb
cmpsb
je
cmp
sub
sahf
divb
xchg
ss
push
insl
xchg
cmp
cld
sub
das
iret
jns
call
cmpsb
int
inc
in
inc
sub
or
xor
addr16
lret
sar
orb
sti
adc
add
outsb
push
pop
fldl
push
aaa
xor
inc
fistps
cltd
push
xor
cmpsl
xchg
adc
or
pop
xchg
leave
adcl
stos
fxch
dec
and
xor
out
dec
mulb
dec
cmc
xchg
addb
or
cmp
cld
out
xlat
mov
and
jae
cmc
das
push
test
pop
inc
mov
push
mov
sahf
iret
decb
sbb
mov
mov
dec
repnz
ljmp
dec
add
out
sbb
fnstenv
jnp
sub
leave
fsubrp
cmp
not
gs
push
ret
mov
data16
and
xchg
push
inc
push
je
cli
inc
enter
popf
mov
sbb
jb
pop
dec
xor
fldcw
scas
push
adc
lcall
jge
mulps
das
cmpsl
loopne
sbb
fistpl
clc
dec
fstp
popf
mov
mov
cs
rcrb
pop
add
ror
mov
push
out
pop
xlat
sti
mov
cmp
mov
jae
and
data16
out
fcoml
add
ret
cmp
inc
ljmp
cmp
mov
and
sarl
xlat
cmp
clc
push
xor
dec
stos
std
movsl
xor
fadds
sub
roll
subb
add
cmc
push
mov
add
mov
es
mov
jne
stos
inc
jae
and
int3
scas
inc
xchg
sbb
add
and
imul
loopne
or
and
xor
xchg
les
ret
dec
insb
test
rolb
lret
sub
int
push
dec
pop
and
push
movsb
sti
push
cmpsb
mov
cmp
mov
sbb
test
scas
cmp
pop
jo
cmp
inc
aaa
sub
mov
jnp
mov
mov
jae
pop
pop
ljmp
fucom
sub
xlat
ret
js
enter
push
xor
cmc
sub
mov
shrb
pop
adc
cltd
push
jae
lock
lret
lods
repz
sahf
dec
mov
xchg
leave
mov
je
fwait
xchg
xor
fdivrp
imul
xchg
out
xor
ss
stos
jmp
dec
loopne
mov
or
cmp
lcall
pop
std
jns
push
stos
inc
pop
mov
mov
mov
mov
dec
sahf
push
dec
out
mov
imul
jge
xor
dec
xor
icebp
lret
cwtl
arpl
bsr
pop
add
adc
adc
dec
inc
mov
or
push
push
adc
pop
roll
ss
icebp
lea
lcall
addr16
sahf
jbe
mov
aad
jp
mov
sti
pop
into
in
stos
popa
das
jmp
callw
ljmp
lds
sahf
icebp
adc
pushf
pop
sbb
in
add
lock
cmc
stos
es
mov
add
setne
aam
mov
rcrl
cmpsl
arpl
dec
outsb
xor
cld
out
bound
mov
xor
dec
mov
jecxz
xchg
pop
cmp
outsl
fwait
xchg
add
arpl
movsb
mov
push
imul
popf
ret
xor
loope
sub
mov
inc
popf
mov
inc
jmp
and
push
cmc
push
repnz
xchg
out
in
movsb
std
pop
aaa
lods
fldt
ja
pop
cli
lods
mov
mov
roll
push
lods
add
push
jne
iret
add
add
cmp
jno
orl
jns
pop
stos
add
pop
outsl
mov
push
out
cs
out
inc
pop
cmp
jecxz
fdivr
les
jne
loopne
faddl
sub
iret
xchg
cmp
ss
test
into
sub
adc
mov
push
sub
sbb
call
adcb
and
cs
mov
pusha
push
pop
sti
sbb
scas
test
xchg
push
cmp
fmull
lret
out
or
cltd
fildll
xchg
lods
jp
insb
outsb
xchg
call
or
sbb
and
inc
jae
add
enter
and
sahf
pop
mov
loope
mov
cmp
ret
es
iret
gs
or
out
movsb
dec
sub
sbb
out
in
xor
jecxz
loope
cmp
in
mov
js
cmpsl
cmp
push
mov
stc
dec
dec
lret
cmp
sub
mov
fdivs
adc
iret
add
iret
or
fnstenv
inc
call
es
inc
push
push
dec
and
mov
sbbl
jno
jmp
int3
inc
push
sbb
test
and
xlat
dec
clc
pushf
xor
pop
das
icebp
mov
xor
dec
inc
xchg
jb
daa
outsb
cmp
int3
jbe
daa
cltd
cmpsb
mov
outsb
je
out
daa
add
jae
mov
popa
cli
inc
cmp
out
pop
jp
sbb
inc
into
mov
jns
push
adc
daa
movsl
mov
dec
cmc
inc
pop
shll
sub
xor
aam
jle
pop
lods
fnsave
dec
aad
xchg
and
push
push
sbb
ret
adc
and
sbb
lea
xchg
lds
jecxz
push
xorl
adc
pop
cmp
cmc
add
ja
sbb
or
pop
hlt
pop
fsubrl
daa
cmp
or
addb
mov
loop
inc
cwtl
jmp
dec
dec
and
pushf
inc
mov
sub
imul
sbb
fnstcw
mov
leave
inc
in
adc
pop
jg
cmp
popa
imul
ficompl
mov
push
cmp
dec
loopne
xor
cs
sub
cmpsb
sbb
loope
std
into
mov
out
adc
jmp
and
mov
mov
scas
aas
clc
ret
ss
sbb
fs
add
dec
cli
inc
scas
xchg
pop
addr16
adc
lods
push
clc
sbbb
jnp
cmp
int3
fnstenv
je
aas
rorl
push
subl
je
lods
int
mov
inc
xor
loop
fcmovne
sub
lret
mov
dec
push
iret
mov
pop
push
cmp
inc
daa
orl
icebp
add
fistpll
add
fidivs
mov
dec
lock
addr16
and
in
cs
xchg
test
push
xchg
push
sbb
into
push
push
jmp
ljmp
outsl
mov
jae
add
fst
xor
out
movsl
cli
and
movsl
adc
and
dec
hlt
sbb
fwait
pop
dec
or
xchg
sub
fmulp
outsl
outsl
ljmp
cmp
movsl
leave
fadd
and
and
enter
fstl
loopne
rol
jno
out
mov
push
xchg
adc
add
shlb
mov
inc
mov
mov
jno
xchg
xchg
pop
mov
bound
idivl
cmp
xchg
inc
or
out
sahf
ja
cli
adc
lahf
pop
iret
subb
andb
dec
inc
mov
push
lds
mov
mov
jge
xor
fwait
lahf
xor
sub
mov
ds
adc
bound
adc
adc
out
inc
mov
test
cli
iret
call
xchg
hlt
fisttpl
mov
mov
mov
jbe
rcl
popf
pusha
fimull
das
repz
mov
insl
outsb
std
enter
stc
inc
mov
sti
loope
mov
in
push
and
ss
sub
movsl
cli
push
cmp
mov
push
cltd
movsl
push
cmp
ss
stos
pusha
ja
and
daa
repnz
inc
add
sbb
mov
int3
ds
popf
loopne
jl
push
bound
icebp
fcmovnbe
out
movbe
push
sub
les
outsl
jp
adc
or
mov
fsubs
testb
xchg
les
pop
dec
insl
mov
inc
fidivrs
data16
jne
lds
out
out
pop
adcb
fcoms
cli
mov
xchg
jecxz
sbb
movsl
gs
pop
jle
imul
lcall
shlb
stos
xchg
addr16
arpl
mov
test
lea
push
jae
je
dec
push
jne
xor
scas
int
xchg
ljmp
movsb
push
and
movsl
jnp
mov
call
aam
fnstsw
mov
arpl
xchg
roll
jns
cwtl
xchg
jmp
ret
pop
mov
adc
jle
sbb
pushf
lret
rcr
xchg
dec
or
into
mov
sub
mov
shlb
inc
xlat
mov
push
jne
xor
dec
test
mov
add
cmp
mov
mov
ret
mov
xor
or
shll
out
mov
movsb
mov
inc
mov
and
sub
shlb
jecxz
rol
jne
ss
stos
sarl
js
push
ja
ret
stos
jb
leave
jl
push
push
je
fs
popf
fiaddl
popa
shll
jno
aad
bound
sti
push
sub
push
lcall
insw
iret
mov
jmp
je
repz
push
je
loop
xor
std
mov
inc
imul
pop
aaa
movsl
inc
push
lahf
pop
push
push
or
mov
lds
inc
ss
std
aam
out
mov
inc
add
pop
push
cmp
ret
imul
dec
jle
cld
popa
std
sti
aam
ret
mov
xor
cmp
cmp
mov
ret
test
aas
push
add
cmp
xchg
mov
loopne
mov
mov
xchg
js
mov
xor
pop
push
push
jnp
push
jp
mov
add
jb
jecxz
sbb
inc
add
xchg
les
and
mov
pop
mov
fwait
xor
test
leave
cmp
mov
ret
pop
test
es
out
sbb
aam
filds
push
xchg
xlat
icebp
push
jno
adc
push
imul
sti
dec
outsl
cmp
repnz
xchg
bswap
outsb
into
xor
jo
mov
dec
sbb
mov
lret
lret
sub
xor
in
fsubrs
test
stc
in
adc
test
cmp
xor
aad
sub
xchg
in
push
mov
dec
cmp
shrd
mov
arpl
jno
in
int3
insb
dec
scas
orl
mov
inc
add
sahf
sub
add
aaa
loop
in
out
xchg
mov
js
cli
or
pop
lahf
out
mov
fldl
mov
xchg
jnp
in
mov
jnp
in
lret
jecxz
xchg
sub
mov
nop
jge
mov
mov
mov
cmpl
dec
bound
push
stos
dec
jle
sub
dec
ja
mov
jp
xchg
push
out
test
fcoml
inc
push
std
dec
fmulp
lret
test
or
xlat
es
dec
lcall
cmp
sub
shrl
test
pusha
adc
sbb
xlat
push
xchg
push
sub
mov
call
les
into
push
icebp
jne
jnp
sub
cmpxchg
cli
and
and
outsl
or
loope
cmp
sub
stos
mov
mov
stos
notb
cs
out
arpl
cli
daa
stos
xchg
xor
pop
inc
cmpsb
sbb
and
test
aad
mov
data16
push
dec
je
mov
push
or
ds
ret
sbb
sub
or
or
push
js
ret
adc
push
iret
lods
sub
aam
addr16
leave
pop
and
std
add
popf
mov
mov
dec
dec
ret
add
push
cmpsl
inc
and
iret
cmp
ror
dec
cmpsb
jle
out
add
add
cmp
xchg
lock
adc
into
push
dec
aas
scas
add
pop
jnp
and
mov
roll
les
adc
testl
mov
push
enter
and
add
mov
shrb
sub
inc
mov
sets
jae
fwait
ss
xchg
sbb
jae
mulb
test
bound
lods
nop
dec
jae
push
cmp
iret
enter
dec
pop
insb
fnop
jp
adc
rorb
lret
push
mov
nop
cmp
int3
cmp
call
mov
fcmovnbe
test
add
das
mov
lcall
test
or
mov
mov
or
sub
mov
dec
bnd
dec
sbb
iret
push
sti
aaa
in
push
dec
ds
popl
pusha
clc
mov
add
mov
pop
mov
xor
lret
in
imul
mov
test
popf
xor
xchg
push
mov
cmp
cld
das
xlat
movsb
or
imul
add
jl
pushf
pop
popf
shrl
mov
outsb
adc
icebp
inc
rcll
and
adc
popa
cmc
jno
inc
aad
and
adcl
shll
add
jno
inc
aad
and
adcl
shll
add
jno
inc
xlat
push
and
adcl
rcrl
dec
fwait
das
add
mov
mov
xchg
lcall
cmpsl
mov
dec
inc
cmc
sbb
dec
push
pop
gs
jp
mov
mov
in
cmc
addb
xor
pop
gs
jp
mov
aaa
stos
insl
mov
sti
ljmp
dec
pop
push
pop
cs
daa
or
jmp
movsl
ret
shr
fistpll
popa
fidivs
jmp
mov
dec
popa
loope
and
and
lret
push
jle
in
aas
leave
pop
mov
push
sub
rclb
or
xchg
pop
in
sbb
scas
push
pop
adc
push
pop
adc
out
dec
ret
std
mov
cmp
fistpl
xor
add
adc
fidivrl
pusha
jne
jp
cwtl
lret
sub
cmp
push
outsb
cmpb
cmc
xchg
push
and
sbb
popf
push
test
or
movsb
mov
cmp
sbb
sarb
rol
das
enter
gs
outsl
fimuls
mov
and
lods
ljmp
push
sub
pop
push
push
adc
mov
fcmovnbe
stos
int
stos
scas
mov
scas
add
dec
push
dec
aaa
or
aas
or
adc
out
lock
iret
aam
lods
cmpsb
mov
adc
inc
arpl
and
pop
or
xor
jmp
fsub
fists
ljmp
and
dec
push
pop
gs
jp
mov
mov
in
cmc
cli
add
sub
pop
gs
jp
mov
repnz
jne
or
push
mov
inc
push
pop
fcoms
sub
pop
gs
add
sbb
xchg
mov
mov
xchg
aam
ret
test
jg
int
fsubs
push
mov
pop
fisubrs
test
and
add
xlat
test
add
es
dec
mov
ds
pop
lds
loopne
imul
dec
cli
cmp
mov
repnz
scas
dec
lcall
mov
inc
repz
jle
mov
mulb
or
mov
cmp
push
lret
jl
cmp
out
std
pop
mov
cld
xor
imul
inc
imul
mov
es
ret
dec
pop
mov
add
jmp
imul
aas
mov
mov
fiadds
or
pop
je
mov
xorl
lea
in
ret
sub
adc
mov
stos
aam
xchg
mov
addr16
push
sbb
push
inc
loopne
xchg
movsl
push
sbb
lock
mov
and
stos
xor
push
imull
into
push
push
push
outsl
icebp
lret
add
pusha
mov
popl
xchg
mov
loop
pop
icebp
stos
ds
push
mov
fwait
cmp
pop
sub
and
enter
mov
inc
sahf
lret
push
sub
xchg
int3
ret
cmpsl
sub
pusha
pusha
shlb
insb
sub
add
ja
mov
xchg
cmp
xor
jl
xlat
sbb
loopne
into
push
or
or
push
or
call
sahf
mov
jmp
pushf
mov
sahf
sbb
popf
iret
sbb
add
ja
lds
lret
mov
jl
dec
into
and
loope
es
inc
stos
scas
clc
hlt
cmp
xor
popa
jno
cmp
mov
push
out
lds
xor
add
pop
sbb
popf
push
mov
ja
jmp
imul
mov
call
cmp
imul
inc
xchg
xchg
cmp
pop
lahf
and
xor
pop
dec
or
imul
add
add
cld
jbe
adc
fcmovnbe
sub
gs
sbb
adc
addr16
adc
dec
mov
xchg
dec
imul
loope
sub
int
jne
xlat
sarb
add
and
mov
or
pop
dec
dec
sbb
call
aad
hlt
sbb
sbb
mov
mov
pop
fldcw
popf
int3
adcb
rcrb
inc
das
or
mov
jae
mov
mov
fstps
cwtl
in
cmc
push
dec
xlat
sbb
push
sub
into
test
test
mov
insl
mov
jmp
cmpsb
inc
sub
lret
hlt
sbb
xchg
popa
xchg
inc
leave
lods
fstl
rcr
mov
jmp
xchg
repnz
dec
mov
cmp
or
dec
mov
jbe
aaa
pop
jecxz
push
dec
xchg
dec
xchg
xor
aam
inc
lods
imul
ret
nop
std
cmp
lods
jne
mov
xchg
fnsave
cmpsb
fiadds
fs
adc
inc
sub
mov
fldl
mov
jae
or
mov
xor
push
jno
cbtw
lret
xchg
push
nop
stos
subl
fnsave
pop
movsl
ljmp
ss
pusha
lret
je
fwait
mov
ljmp
sbb
push
xchg
aad
mov
mov
test
cmp
jns
loope
cmc
shll
fistl
mov
and
mov
lret
push
pop
inc
cmp
xor
jmp
aas
mov
js
push
shrl
mov
sub
rclb
outsl
mov
sti
jecxz
jmp
pop
bsr
ljmp
sbb
jns
pop
fbld
pop
fs
jp
dec
movsb
jg
add
pop
rorl
lret
xchg
insb
aas
add
mov
movb
cltd
in
inc
cltd
lock
out
shll
jo
repnz
sub
cmp
daa
lret
out
sahf
inc
loope
or
ret
jg
jno
aas
fisubrl
andb
pop
jg
fildl
push
mov
lds
inc
fistl
jne
sub
push
mov
or
loopne
mov
js
add
scas
cltd
jbe
insb
cmpsb
push
lret
xchg
sub
push
jp
xor
stc
loop
cmc
scas
ficomps
cmp
daa
movsl
mov
clc
mov
xchg
push
stos
cmovs
andb
xor
xchg
enter
cltd
pop
mov
cmp
lret
cwtl
push
js
push
xor
leave
int
pop
or
jnp
arpl
clc
inc
xor
sub
ret
ss
js
outsl
mov
stos
mov
mov
xor
out
add
xchg
mov
divps
adc
dec
out
lods
ret
or
data16
jb
je
xchg
cmp
test
adc
movsl
cmp
push
nop
sub
xchg
pop
pop
dec
and
pushf
add
pop
and
mov
sbb
test
stos
or
fidivs
or
inc
test
das
dec
sbb
push
arpl
jmp
pop
push
in
push
push
cmp
push
repnz
hlt
jp
dec
dec
lret
adc
insl
pop
cwtl
pop
aad
test
bound
movsl
sbb
adcb
repnz
or
sbb
lret
insb
ficompl
mov
pop
inc
push
lahf
aad
icebp
or
xchg
nop
xor
cltd
xor
xchg
push
mov
je
dec
stos
in
sub
clc
int
iret
mov
inc
cmpsl
scas
test
or
jns
addr16
adc
fsubs
cmc
rcr
xor
pop
cmpsb
mov
in
and
lods
push
ss
and
xchg
pop
add
fldcw
xchg
mov
xchg
daa
inc
or
jge
arpl
jne
popf
lock
int3
leave
data16
mov
bnd
enter
insl
lahf
in
icebp
ds
outsb
xchg
neg
dec
xor
negl
xchg
mov
pusha
gs
pop
mov
pop
push
scas
nop
mov
cmpl
into
inc
mov
movlps
mov
push
repnz
out
jmp
aad
mov
pop
adcb
mov
iret
jg
enter
push
push
pop
mov
or
mov
in
pushf
das
jg
xor
cmp
ss
jae
test
push
xchg
je
mov
or
or
out
pop
aas
pop
xlat
xchg
test
push
stc
icebp
ret
daa
or
cmpb
cmp
sub
inc
out
xlat
inc
xor
cmp
xor
into
es
outsl
cmpsl
iret
sub
lea
mov
sbb
add
out
add
mov
push
lret
xchg
dec
inc
mov
loop
cmp
int3
test
cmp
mov
dec
int3
mov
notb
sbb
adc
les
jbe
xorl
rorb
mov
mov
in
and
stos
ja
jl
mov
fucomip
call
xchg
ds
imul
mov
popf
movsl
push
aad
lods
rclb
rorb
insb
jae
std
xor
sub
in
je
and
cmp
orl
jle
push
xchg
xchg
ficompl
rorl
stc
xchg
xchg
mov
int3
fsts
iret
fistps
jo
jmp
dec
jno
shufps
mov
in
imul
nop
push
fmuls
insl
iret
dec
xor
jbe
pop
push
and
into
aam
daa
pop
jnp
scas
add
push
mov
xchg
imul
mov
sub
xchg
and
imul
dec
fiaddl
in
sahf
ficoms
push
xchg
adc
lea
adc
loope
ret
mull
rcrl
rorb
testl
loope
movsl
push
lods
add
push
sbb
jne
mov
imul
add
inc
sub
adc
cmp
mov
repnz
lods
repz
mov
mov
sarb
iret
icebp
stos
jae
cmpsb
jmp
popf
stos
sub
cltd
adc
add
stos
push
dec
sub
push
mov
sbb
cmpsl
arpl
cmp
sbb
mov
add
out
push
inc
popa
mov
mov
ja
add
mov
fistpl
scas
jge
pop
notl
xor
sarb
ja
jle
sub
pusha
daa
pop
xchg
mov
cmpb
aaa
xor
sub
mov
aad
jge
push
and
das
insl
pop
mov
push
clc
loope
mov
push
mov
dec
add
int
mov
xchg
shrb
mov
jnp
push
cmp
jl
mov
dec
test
xor
fwait
enter
fcompl
shll
pop
adc
int
push
mov
mov
mov
in
mov
adc
lea
inc
nop
test
sub
stos
arpl
aam
daa
lods
mov
and
sub
mov
lahf
mov
ss
fucom
push
mov
lds
push
test
or
ret
mov
push
mov
pop
mov
pop
and
test
inc
push
insb
adcb
push
sub
cmp
negb
mov
xchg
xchg
fldl
mov
aam
ret
outsl
and
mov
mov
xor
sub
sub
stos
inc
lcall
pop
xor
jecxz
shrl
cmp
dec
mov
cs
repnz
pop
fnstsw
test
mov
repz
mov
adc
jmp
mov
fldcw
aam
in
mov
int3
add
pop
ss
add
cmc
ds
mov
add
sub
aam
mov
rolb
or
mov
lahf
cltd
inc
mov
ljmp
lret
xlat
sbb
cmp
add
rcll
stc
and
loope
fs
in
pushf
stc
lds
popa
arpl
cmp
inc
vpshab
jo
inc
or
int3
sbb
scas
sti
adc
ficoml
loope
or
aad
outsb
sub
push
add
ret
sahf
sahf
lcall
sarl
movsl
mov
mov
dec
and
push
or
test
and
jecxz
icebp
lcall
sbb
scas
jg
push
xor
not
addr16
js
sub
cld
mov
outsl
cmp
inc
out
add
xchg
imul
xor
arpl
mov
pop
cmp
cmc
cmp
cli
xchg
or
fcmovb
lds
sub
jns
iret
sub
add
repz
cltd
sbb
fisubl
scas
lret
pop
mov
cld
jbe
int3
inc
roll
xchg
push
pop
and
orl
imul
xor
adc
jecxz
neg
lahf
sbb
scas
ljmp
push
aad
stos
scas
push
sbb
shlb
mov
divb
add
push
stos
popf
mov
mov
adc
mov
mov
out
cmc
and
insb
jne
push
arpl
and
adc
and
repnz
sahf
mov
inc
inc
and
mov
je
jae
jecxz
scas
cmp
dec
xchg
aas
int
xor
xor
cmpsl
int3
mov
bnd
lea
xor
xchg
jno
aas
jo
aad
add
sbbb
hlt
jne
push
popa
test
das
testb
fs
xor
sbb
pop
xchg
mov
sahf
scas
xchg
dec
mov
push
pop
xor
pop
fstpl
es
push
scas
and
jg
lds
jmp
popw
pop
jb
xor
vpmulhuw
test
dec
pop
sahf
mov
insl
mov
decb
cmp
jle
pop
inc
ljmp
loope
mov
dec
sbb
mov
aam
arpl
jno
push
pop
test
fistl
comiss
sub
pop
cmpsl
leave
enter
lea
mov
mov
push
popf
mov
out
ror
push
sti
bound
pop
lret
inc
lock
cmp
das
imul
rol
cmp
insl
xor
xor
pop
and
addb
insb
push
lods
sahf
cltd
leave
mov
stc
into
dec
loopne
insl
imul
inc
sbb
ret
lods
or
hlt
sti
mov
jmp
test
imul
and
lret
push
loop
stos
jmp
dec
and
cmpsb
dec
pop
dec
shrb
jecxz
mov
mov
cmpsb
xchg
mov
push
mov
jnp
aam
pop
je
mov
push
je
xor
loopne
jecxz
ja
cmp
jo
or
xchg
cs
flds
sbb
xchg
cmc
in
adc
mov
mov
movsl
gs
inc
outsb
fildl
jno
adc
jp
mov
adc
es
cmp
sub
jg
testb
mov
imul
pop
fs
jae
pop
mov
pop
test
dec
lret
push
or
cltd
pop
sbb
int
xchg
mov
sbb
stc
xlat
rorb
std
je
arpl
idivb
cmp
cwtl
pop
add
addr16
and
sub
loopne
dec
jb
je
test
cli
push
xorb
inc
add
hlt
adc
jno
daa
imul
outsb
es
fisttpll
loop
push
fwait
ss
pusha
sub
repz
aam
fstps
push
and
adc
sbb
or
lret
mov
cld
stc
dec
cmc
movsb
ljmp
or
mov
in
fildll
dec
pop
push
cmp
jge
stc
pop
cmc
sbb
cmp
popa
add
into
movsb
mov
out
xor
xor
enter
lret
cld
in
mov
stos
outsl
and
fstpt
cmc
push
lods
mov
mov
fistpll
stc
xchg
sbb
dec
cmp
xor
mov
sbb
nop
inc
adc
ljmp
call
push
cmp
pop
xor
pop
xchg
cltd
mov
cmpsl
push
cmp
out
jg
or
mov
mov
stc
lret
test
shlb
dec
cli
jg
lcall
outsl
jns
dec
pop
push
sbb
cs
fst
xor
xor
xor
movsb
cld
or
aam
testl
stc
scas
js
in
mov
clc
jnp
inc
call
or
push
or
xlat
and
cs
jle
pop
push
mov
outsb
mov
fistpll
psrad
inc
addl
rcrl
shrb
mov
ret
inc
sahf
scas
sub
cmp
and
orb
cmpsl
mov
out
mov
cmp
iret
jl
pop
fiadds
fmuls
inc
adc
mov
adc
push
idivb
jmp
adc
add
mov
jge
sub
or
pop
ret
cmc
jle
je
sti
in
mov
rorl
arpl
pop
ss
jge
and
test
jns
pushf
loop
in
cmp
repnz
leave
lods
fadds
sub
adc
cmp
fildl
pop
push
fisubl
sub
adc
add
addb
in
xchg
sbb
cmc
cmp
pop
mov
arpl
and
mov
add
jg
das
icebp
lahf
scas
sub
dec
cmpsl
outsl
or
mov
js
jmp
dec
mov
data16
aaa
push
sahf
imul
push
repnz
outsl
pushf
or
test
xor
pusha
sub
jmp
out
shr
ja
lcall
push
and
gs
movsl
sub
xor
loop
or
fdivrl
inc
sbb
bound
dec
adc
push
lds
sub
push
pop
mov
pushf
das
pop
outsb
push
mov
mov
mov
js
push
jp
dec
sarb
test
or
pop
jecxz
adc
scas
ds
dec
imul
jge
repnz
cltd
jnp
push
jl
adc
push
nop
lock
out
xor
mov
xor
add
adc
ror
ficoms
sbb
nop
ss
push
scas
imul
stos
inc
push
fnstenv
icebp
cwtl
cmc
negb
mov
pop
fbstp
outsb
push
mov
xchg
jl
dec
int
mov
in
shrl
into
sub
dec
push
je
sbb
into
adcb
rcl
outsl
mov
sub
sbb
pop
jb
mov
mov
arpl
push
jg
xor
dec
sub
call
sub
std
stc
test
iret
inc
mov
adc
jmp
pop
pop
pushf
jbe
mov
ja
mov
add
adc
ret
sti
jg
out
pusha
jnp
xchg
aad
cmc
mov
sub
in
xor
and
or
add
push
cmp
cmp
push
jp
push
sbb
es
jo
add
in
popf
sbb
rcrb
jb
in
cmp
inc
cmc
lock
testl
nop
push
mov
aas
sahf
retw
and
test
loop
mov
pop
loopne
pop
xchg
mov
mov
aaa
sbb
cmp
daa
cmpsl
xor
decl
popf
ret
mov
push
and
cmp
dec
data16
fnstcw
int
pusha
sub
repnz
push
fdivrl
data16
mov
scas
push
add
push
sar
nop
xchg
addb
ret
inc
inc
sub
aad
fs
cmp
andl
aas
xchg
sbb
xchg
push
ds
icebp
cld
ljmp
inc
inc
test
lods
add
sti
dec
hlt
lret
lock
mov
jno
adc
sub
add
dec
iret
or
lods
push
xor
les
mov
mov
mov
or
test
xchg
jb
sub
push
or
sub
test
dec
stos
push
dec
out
sub
bound
add
adc
addb
or
and
addr16
popa
out
push
mov
cmp
addl
push
mov
xchg
mov
iret
cld
add
push
jb
rcll
pop
repz
add
repz
mov
inc
test
int3
loope
std
dec
jge
push
or
mov
pop
adc
xchg
in
popa
xchg
test
roll
or
in
pusha
mov
jge
pop
vmread
push
cmp
in
dec
sbb
jae
push
jbe
inc
xchg
inc
pop
ja
mov
lldt
in
cmpsl
mov
mov
pop
repnz
in
xchg
dec
and
cmp
pop
and
xchg
fadds
in
jge
mov
lret
cmpsb
fstp
cmp
jnp
pop
fidivrs
mov
shrl
and
or
jmp
add
push
aaa
inc
ficompl
fisubs
cmp
stos
pinsrw
mov
push
mov
sub
in
push
hlt
std
in
or
or
loop
jecxz
push
adc
lahf
test
lds
sub
mov
add
mov
mov
or
bound
aam
pop
aaa
pop
mov
mov
arpl
xchg
xchg
cmc
shll
stos
mov
ret
sub
shrl
mov
cmp
insl
js
fdivp
addr16
aam
dec
fidivl
imul
imul
cmpsl
or
mov
stc
add
xor
lcall
inc
mov
iret
cmpsw
jmp
jl
sets
jmp
xor
dec
dec
imull
dec
daa
push
das
and
fbld
loope
ja
and
and
sub
push
lods
mov
xchg
inc
ljmp
mov
jl
into
xlat
addr16
adc
lock
inc
sbb
sub
add
push
pop
lods
jnp
mov
int3
aas
mov
enter
and
inc
pop
mov
repz
xchg
mov
pushf
scas
out
scas
sahf
pop
jmp
jo
das
es
mov
push
pop
sarb
push
or
out
sahf
ljmp
mov
dec
mov
mov
ret
xor
adc
jl
cs
mov
sar
ja
fwait
cmp
pop
add
fistpll
cmp
scas
cmc
pop
nop
out
int
cmc
xchg
jg
jg
xlat
mov
jmp
jns
aam
pop
pop
adc
jo
dec
push
clc
cmpsl
js
ds
jp
enter
leave
lds
sahf
pop
stc
addr16
dec
pop
cwtl
bound
out
faddl
pop
add
cli
fiaddl
sub
ficoml
lds
mov
dec
pop
fsubr
sub
xchg
xor
shll
push
jno
rcl
test
xchg
mov
mov
jno
insl
les
ret
js
inc
loop
sahf
jno
fldl
out
mov
mov
ljmp
lds
wrmsr
cmpl
xor
pop
and
xchg
jle
test
fisubs
jecxz
cmpl
pop
outsl
arpl
sub
js
and
in
push
outsb
pop
cmpsb
bound
lcall
aad
in
cmc
cli
add
sub
pop
gs
jp
mov
mov
in
cmc
cli
add
sub
pop
gs
jp
mov
mov
in
xor
sbb
sub
pop
gs
jp
mov
lcall
ljmp
xor
frstor
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
xchg
xorl
xchg
jns
mov
or
adc
imul
cmp
jno
or
mov
rorl
or
imul
cmp
jno
cwtl
dec
mov
das
test
xchg
stc
push
jmp
add
inc
cmp
push
and
cwtl
int
loope
les
adc
fisttpl
jbe
loop
ret
fidivrl
or
sbbl
and
mov
xchg
into
pushf
and
mov
xchg
imul
int
xchg
lods
sbb
mov
xchg
into
out
test
lret
xor
fbstp
loop
shll
xchg
stos
je
loope
out
imul
or
sub
popa
pop
add
outsb
push
pop
sub
add
movsb
std
jmp
sbb
xchg
push
ljmp
hlt
pop
jle
in
pop
dec
cmp
jno
cmp
push
mov
js
imul
jl
cmp
xchg
leave
cmp
ror
mov
add
or
pop
pop
dec
cmp
jo
cmpl
mov
enter
or
sub
addr16
dec
push
outsb
sbb
mov
shr
aad
fcmovb
popa
jne
je
inc
add
push
dec
push
push
xchg
mov
test
fdiv
mov
mov
add
jns
imul
cmp
jno
or
mov
rorl
pop
add
jns
imul
cmp
jno
orl
dec
fldcw
int
sbb
mov
lea
lcall
and
loope
cli
sub
stos
add
push
icebp
scas
shl
cmp
stos
dec
push
mov
addl
lcall
xor
adc
sahf
jnp
add
sbb
out
or
jg
cmp
mov
fstpl
hlt
test
ret
jnp
pop
popa
aaa
icebp
test
sahf
mov
out
pop
iret
dec
movsb
in
sbb
addr16
mov
fwait
adc
stc
push
sub
subb
test
push
and
dec
pop
outsb
and
xchg
sbb
cmp
jle
add
pop
push
xchg
mov
jo
mov
mov
pop
leave
ficoms
out
dec
adc
cmp
sahf
fldt
mov
aaa
mov
outsb
stos
sbb
lea
jno
insb
daa
clc
or
pop
jns
ret
scas
daa
fdivr
out
add
mov
mov
push
inc
test
push
cld
add
mov
arpl
xchg
or
cmpsb
xlat
scas
xchg
mov
xor
js
dec
adc
loop
jae
mov
sbb
lcall
cltd
insb
mov
lahf
in
aad
sbb
out
fwait
jae
or
mov
out
shll
test
pop
mov
stos
mov
xor
movl
push
mov
out
adc
jns
cmpsb
xchg
dec
popl
fwait
pop
mov
rcrb
pop
jg
stos
lret
rclb
sub
out
xor
fwait
add
mov
mov
call
jnp
xchg
inc
int3
push
cmp
cmp
incb
je
mov
dec
mov
mov
fimuls
mov
insl
jge
pop
and
jp
and
add
sbb
popa
pop
inc
js
mov
and
cmp
push
nop
pop
icebp
sbb
stos
int3
pop
popa
inc
pop
push
fsub
enter
cmp
ss
lcall
stc
aam
and
pop
pusha
addr16
test
mov
jle
fstpt
mov
rcrl
mov
pop
into
push
mov
pop
or
mov
fisttpll
push
dec
incl
sti
pop
mov
adc
push
mov
sbb
out
pop
push
je
js
and
repz
xor
and
sub
xor
outsb
scas
xchg
data16
xchg
jl
cld
mov
jmp
xchg
push
inc
dec
or
adc
pop
lock
test
std
orb
mov
dec
add
mov
jo
xor
hlt
lea
aad
shlw
mov
and
and
repnz
in
xchg
adc
mov
or
pop
scas
mov
sbb
dec
lods
xchg
pushf
lcall
sub
push
pop
pop
mov
pop
adc
jne
hlt
mov
mov
jl
jg
hlt
mov
test
cmp
pop
xor
xchg
std
add
jmp
xor
aam
xorl
pop
test
es
sbb
imul
mov
mov
xor
sbb
jecxz
or
adc
lret
iret
mov
mov
and
clc
loope
pop
dec
jnp,pt
mov
sub
sarb
push
xlat
inc
dec
add
insl
inc
dec
in
ss
add
xorb
mov
xchg
dec
je
loopne
stc
outsb
push
popf
dec
inc
pop
cmp
mov
xchg
pushf
jne
insl
cmp
jo
mov
cld
bound
push
mov
inc
push
fisubl
mov
and
lret
repz
rcll
pop
xorl
lret
into
inc
push
shrl
inc
ja
test
add
sbbb
or
int3
movsl
add
in
call
push
imul
das
sub
addr16
imul
sub
lds
sbb
dec
loopne
stos
cmp
xchg
addr16
movsl
sbbb
out
adc
xlat
ljmp
cmc
dec
push
xchg
nop
dec
in
mov
mov
mov
sahf
dec
mov
and
testb
cmc
aaa
clc
notb
test
test
shr
xor
cwtl
mov
jge
scas
push
stc
shrb
push
pop
in
push
fwait
sbb
inc
mov
dec
fidivs
insb
xchg
cmp
add
xorl
int3
push
int3
sbb
and
je
jnp
inc
movl
stos
jp
and
push
and
mov
mov
xor
call
dec
outsl
xlat
test
out
loopne
cmp
lock
mov
loope
add
mov
cwtl
dec
or
jmp
sahf
add
movsl
cmp
dec
loopne
xor
xor
or
out
inc
sahf
cmp
xchg
inc
subb
fwait
mov
std
les
bound
lret
dec
jg
fnstenv
xchg
repz
xchg
mov
jl
test
adc
or
inc
jae
push
enter
or
xchg
push
dec
sahf
mov
inc
jns
sub
jno
or
mov
mull
imul
mov
idivl
fcomi
sbb
test
mov
imul
or
pop
xchg
mov
push
cld
jmp
cs
insb
int3
idivl
add
cmc
js
push
push
jbe
push
cld
loopne
mov
pop
insl
iret
cmp
pop
sub
adc
fwait
jb
ret
mov
aas
mov
fstpt
test
and
cld
out
mov
out
xor
fs
enter
clc
jnp
inc
iret
pusha
rcll
loop
xchg
jg
cmp
sub
sbb
xchg
shlb
xor
push
push
dec
jge
ljmp
jae
mov
cmp
push
and
pop
sbb
shlb
pop
shll
mov
jge
jno
push
fs
lods
roll
je
je
xchg
xorl
mov
ljmp
gs
add
lods
mov
push
addr16
or
int
mov
push
add
dec
test
sub
repz
or
push
add
or
dec
les
sub
mov
mov
aaa
adc
and
dec
repz
scas
sub
in
mov
inc
sahf
js
das
or
xor
lcall
cmpb
push
xchg
inc
lret
or
fldcw
sub
cmp
xchg
icebp
adc
xchg
sub
or
push
adc
mov
mov
pop
sti
jb
cmpsb
xchg
inc
and
addr16
mov
dec
or
test
shll
mul
cmp
data16
jbe
ljmp
push
lret
jge
pushf
outsb
fiadds
jle
mov
xchg
mov
pop
push
mov
fidivl
fcmove
or
dec
jg
popf
fcomi
gs
in
or
xchg
mov
sbb
mov
popa
xchg
ds
rdseed
sub
sub
insb
addr16
gs
pop
adc
push
inc
popa
push
lret
inc
imul
mov
cltd
xchg
test
sbb
sub
icebp
ss
push
shr
jl
nop
sbb
xchg
mov
dec
adc
mov
fistps
xchg
add
push
pop
adc
pop
outsb
inc
and
das
mov
fs
les
rolb
cmpsb
cmp
xor
lods
fs
call
xor
and
jb
scas
sub
mov
pop
cltd
cld
jnp
scas
lahf
js
sub
push
mov
js
lcall
sbb
cltd
jmp
mov
jmp
lcall
mov
xchg
test
mov
mov
dec
xor
sarb
in
ret
jge
jl
popa
cs
cli
lock
adc
jo
sahf
sbb
mov
out
xchg
cli
das
neg
cmpsl
push
pop
push
sub
xor
arpl
cmp
decb
in
cmp
faddl
iret
cmpl
pushl
adcl
adc
or
jg
mov
sbb
jle
cmp
aam
int3
cmp
and
mov
adc
fucompp
xchg
frstor
cltd
popa
movsb
aad
sbb
mov
inc
add
jbe
notb
lods
or
sub
or
jge
das
sar
mulb
ret
addr16
lods
or
test
shr
xchg
and
jmp
mov
stos
add
pop
jecxz
outsb
pop
dec
dec
mov
jg
fs
cmc
clc
roll
lret
inc
repnz
ficomps
test
mov
shll
test
cmp
push
mov
pop
out
sub
enter
scas
pop
push
mov
mov
arpl
jb
push
lret
sbb
scas
pop
dec
pushf
mov
mov
add
mov
add
add
dec
sti
xchg
ljmp
lahf
or
mov
or
cmpsb
out
dec
repz
xchg
cld
cmp
add
scas
fs
icebp
outsl
push
push
inc
rcll
out
pop
fwait
sbb
repnz
mov
data16
pop
repnz
jns
std
pop
jmp
jp
add
adc
popf
je
sbb
nop
mov
nop
int3
insl
mov
add
dec
rolb
sub
mov
aas
lock
movsl
cmp
popl
jle
add
imul
fimuls
push
ret
push
mov
addr16
scas
inc
test
iret
sub
jl
dec
mov
outsb
or
sahf
dec
and
push
or
adc
jmp
or
inc
xor
or
fcoms
mov
add
notb
lret
inc
pop
fstpt
outsl
push
xchg
mov
decb
int
add
divb
add
rep
lret
stos
pop
adc
fsubp
cmp
jg
das
loope
add
jo
mov
cmc
push
dec
daa
inc
outsl
sbb
movsl
ja
sti
cs
sbb
add
sub
rol
popa
nop
dec
push
filds
cld
test
push
scas
cmp
stos
pop
lea
adc
addr16
loop
xor
fidivrs
test
movsb
sub
add
daa
loopne
movsb
lock
outsb
xchg
xor
in
or
insb
test
inc
or
lds
jmp
add
lods
ljmp
daa
subb
add
push
mov
fidivl
push
popf
inc
rorb
loop
adc
mov
lods
addb
pop
mov
sbb
push
sti
mov
shlb
pop
leave
or
cmp
neg
jo
cltd
adc
je
aad
xchg
js
fbstp
and
push
stos
jnp
jp
xchg
and
stos
adc
lret
push
or
sub
and
mov
outsl
xchg
mov
in
push
push
or
and
mov
inc
push
fistps
jno
or
add
lea
pop
push
repnz
bswap
punpcklwd
stos
ja
xor
sub
dec
cs
sbb
mov
popa
movb
mov
jecxz
cmp
mov
ret
call
lret
push
mov
mov
mov
dec
and
rcll
repnz
dec
or
xchg
pusha
xor
test
cs
xchg
nop
popa
scas
loope
xor
scas
loope
test
sbb
push
cltd
xor
push
orb
fsubr
adc
fisttps
js
stos
jmp
sub
inc
jbe
sub
push
add
test
pusha
inc
jo
bnd
pop
or
xor
adc
push
in
fstpt
cmpsb
fldl
roll
movsb
fmull
cld
push
mov
stc
pop
mov
mov
sahf
xchg
int
push
add
shlb
out
cli
jl
cld
or
and
dec
xchg
call
aad
jge
xchg
inc
rclb
icebp
cmc
faddl
push
xchg
mov
sub
sub
mov
lahf
out
sbb
repz
fists
xchg
mov
call
add
sti
test
lock
and
pop
mov
in
mov
loop
jne
mov
and
xor
hlt
adc
sub
pushf
iret
clc
mov
push
imul
add
push
xchg
repz
ja
adc
dec
mov
mov
bound
push
xor
or
rcrb
mov
cmp
mov
sub
sub
dec
stos
dec
in
mov
mov
iret
xchg
pop
xor
xchg
sbb
les
pusha
ror
fdivrl
int3
lcall
jne
stos
jo
scas
ficoms
in
inc
push
iret
sub
inc
mov
notb
push
scas
xor
std
or
xchg
aam
dec
out
inc
test
pop
pop
aas
xchg
and
jnp
dec
jp
cmc
sbb
sub
int3
mov
xchg
les
push
outsl
aas
leave
and
inc
das
mov
mov
sahf
jp
int
imul
mov
mov
fistpl
mov
mov
mov
xor
std
ljmp
outsb
cmp
stos
xchg
mov
hlt
movsl
call
in
mov
stc
or
and
xchg
lea
dec
add
xor
and
ficomps
insb
or
mov
movsl
popf
cwtl
rcl
push
hlt
adc
iret
adc
inc
lock
fdecstp
and
sub
pop
push
fs
fidivs
rclw
pop
push
mov
cld
mov
dec
test
xchg
and
jp
test
scas
mov
fistps
mov
fadd
jmp
dec
stos
mulb
daa
clc
mov
cwtl
decb
fcoms
mov
js
or
or
mov
hlt
scas
or
out
movsl
push
adc
pop
loope
jno
vmwrite
test
lods
loop
ret
aas
cs
pop
inc
enter
cmp
shrb
cmp
or
ljmp
lds
dec
mov
lea
jb
mov
test
arpl
sbb
and
test
adc
lea
xchg
sbb
sbb
stc
cmpsl
cmc
and
int3
cmp
cmpsl
sub
stos
mov
jbe
test
add
jge
mov
ret
rcrl
xchg
pop
adc
jb
movsl
aad
inc
call
outsb
repnz
and
xchg
sbb
add
add
cmp
into
pop
cmp
jne
in
xorb
sub
cwtl
cmp
jne
shlb
and
jns
jle
jp
or
jb
fsubl
lret
sub
ljmp
xor
xor
aam
jnp
push
push
pop
mov
lahf
and
ret
shll
repz
pop
jae
or
or
fnstsw
roll
imul
mov
cmp
sbb
fs
cmp
outsl
cmp
ja
xchg
inc
outsb
mov
and
or
cmpsl
mov
jno
aam
lcall
mov
add
dec
xor
xchg
jnp
lods
daa
cmp
cmpl
pushf
je
jmp
andl
or
jmp
push
in
int
rcrb
bound
insb
sub
or
mov
mov
nop
test
push
cmpsb
add
sbb
sub
mov
out
mov
jp
insb
dec
xchg
inc
in
ret
scas
stos
push
lds
cmp
leave
cmpsl
jne
bound
lods
mov
arpl
jg
push
lock
mov
dec
mov
das
push
pop
pusha
pop
pop
orb
pop
rclb
and
xchg
xor
out
mov
fildll
scas
mov
add
ret
mov
pop
sub
ret
aaa
lods
dec
negb
adc
fwait
loop
leave
jae
ficomps
pop
fisttpl
sbb
add
mov
rep
mov
rorl
das
jbe
sub
clc
push
mov
cmpsl
fadds
or
int
leave
cmp
mov
orl
lods
xor
sbb
movsb
sub
dec
sub
cld
push
pop
pusha
int
mov
mov
outsl
jnp
xchg
dec
ret
aam
out
ja
jae
loopne
andb
dec
and
jno
cli
scas
xor
pusha
xlat
jmp
call
test
cld
mov
dec
xor
leave
lahf
sub
mov
ret
add
push
push
xchg
mov
bnd
or
push
fsubrl
or
notb
pop
push
loope
in
cwtl
lret
cmp
mov
cmp
jo
cwtl
mov
xchg
out
dec
out
xchg
mov
mov
mov
negl
ret
sbb
insl
lgs
sub
sub
in
mov
xor
jmp
aad
in
aam
xchg
push
mov
mov
add
cwtl
mov
push
pop
mov
sub
pop
mov
dec
dec
dec
sub
dec
mov
leave
push
push
bound
lods
into
out
idivl
pop
nop
ficomps
cltd
sbb
lea
cltd
or
dec
scas
mov
dec
shrl
sub
icebp
jecxz
sbb
push
jecxz
icebp
stc
subb
jg
jmp
cmp
fdivrs
cmpsl
into
add
js
ret
lea
jmp
cmp
jne
arpl
leave
imul
adc
loop
sbb
or
std
out
add
ret
mov
mov
jne
mov
fnstcw
nop
pop
les
pop
aaa
mov
mov
sbb
lods
and
adc
cli
jns
mov
in
dec
fiadds
mov
dec
pop
repz
and
insb
xor
dec
clc
nop
mov
xchg
lahf
mov
xchg
cmp
test
ret
sbb
cmp
std
std
das
mov
enter
jge
outsl
sub
fldenv
andl
std
pushf
adc
iretw
add
pushf
in
lods
cwtl
pushf
inc
dec
lahf
das
lret
addb
mov
xor
push
xor
mov
mov
call
sub
fstpt
jmp
or
shl
push
xor
ja
test
xchg
stos
push
shlb
xchg
sub
aam
cmpxchg
cmc
dec
jb
es
push
mov
sbb
xchg
js
pop
lock
pop
adcb
sbb
mov
pop
pop
psraw
push
std
lahf
add
mov
adc
stos
jne
ret
xchg
mov
add
popa
int
aas
jb
mov
pushf
pop
enter
dec
adc
push
xchg
and
testb
and
aad
pop
and
cmp
pop
outsb
push
outsb
push
imul
cltd
mov
fstpl
add
pop
dec
mov
sub
pop
js
lret
out
jmp
xchg
scas
sub
arpl
sbb
imull
dec
test
sub
jne
icebp
sti
xchg
add
mov
and
adc
push
pop
dec
jbe
and
outsb
mov
popf
lret
sbb
iret
pop
sbb
cld
ret
out
xchg
dec
subl
sahf
cli
sbb
cmp
xchg
lahf
pop
ja
and
pop
es
jne
mov
stos
loope
fadds
mov
cmp
enter
push
jg
test
mov
xor
sub
jb
push
add
sbb
icebp
jle
sbb
shl
xchg
push
aas
jl
cmp
jno
pop
popf
daa
mov
mov
or
add
out
cwtl
add
pop
dec
and
pop
jb
loopne
js
insl
arpl
fst
push
insb
test
insb
push
addr16
adc
aas
aaa
imul
sbb
out
dec
push
clc
or
jo
cmp
xchg
xor
inc
nop
dec
cwtl
cs
jge
dec
ja
lea
add
lret
xor
insl
js
inc
dec
push
and
in
fdivs
or
and
pop
xlat
lea
xor
and
test
xchg
dec
inc
pop
pushf
xor
jmp
xchg
push
fsubrl
lret
aam
aam
inc
je
rorb
push
smsw
jb
neg
xchg
inc
dec
adcl
ds
push
xor
push
cwtl
rcll
repnz
insb
cmp
cmp
push
cwtl
dec
int
rcll
mov
jmp
int
adc
mov
xor
shrb
fnstcw
push
cmp
movsl
adc
fs
dec
xchg
in
xlat
mov
dec
das
insb
enter
dec
lret
out
fidivl
ss
scas
push
cmpsl
outsl
lahf
mov
xchg
mov
and
fwait
gs
dec
jnp
jb
mov
dec
pop
sub
mov
cs
dec
lea
mov
int3
adc
test
fldcw
xchg
sbb
pop
cmp
scas
lret
push
sbb
add
inc
adc
jne
lret
push
fcompl
jb
add
push
cs
jl
ljmp
jb
arpl
pusha
add
out
insb
mov
lods
jbe
push
in
les
cmpsb
test
daa
mov
mov
mov
add
jns
imul
cmp
jno
or
mov
rorl
pop
add
jns
imul
cmp
jno
or
mov
rorl
pop
add
jo
insl
xor
cmp
test
xchg
jno
shll
loope
xor
mov
shll
imul
push
push
pusha
or
pop
shrb
sarb
imul
xchg
push
cwtl
inc
mov
add
add
lock
sbb
sub
cmp
push
pusha
cwtl
xor
and
adc
add
lock
loopne
shlb
mov
dec
jo
pusha
mov
push
fwait
dec
mov
orb
jnp
pop
cmp
mov
icebp
add
pop
ljmp
inc
pop
mov
movsl
pop
add
sbb
lahf
or
call
sbb
mov
pusha
loope
fbstp
enter
mov
jo
xor
mov
loopne
xchg
cmp
aas
aaa
or
sbb
sub
cmp
test
cmc
pusha
or
test
rcr
jae
add
or
aad
pop
jnp
pop
nop
test
adc
dec
arpl
pushl
mul
out
pop
inc
call
push
rolb
popf
adc
xchg
scas
test
cmp
pop
sarb
dec
mov
ljmp
inc
test
hlt
and
adc
add
test
movsb
ja
inc
mov
lds
sbb
shr
aas
or
insb
mov
pushf
je
scas
dec
mov
push
aad
les
nop
add
dec
and
or
mov
push
fadds
pop
mov
inc
loopne
icebp
add
pop
nop
push
pusha
cwtl
push
test
mov
adc
add
lock
sbb
sub
cmp
push
pusha
cwtl
push
test
mov
adc
add
lock
dec
pop
push
xchg
ret
das
stos
push
loop
je
addr16
cmp
sarl
sbb
arpl
mov
xlat
stc
sbb
xchg
push
inc
js
insb
inc
loope
sbb
inc
jnp
das
frstpm(287
lods
or
mov
aad
ret
dec
or
icebp
test
dec
or
adc
ret
cmp
aaa
xor
mov
cmp
jno
aas
sbb
jg
or
lret
xchg
push
sahf
rcr
outsb
sub
pushf
or
push
aas
and
xor
jns
pop
adc
clc
clc
or
jbe
xchg
shlb
cs
sub
ret
cmp
daa
pop
lds
std
jae
incb
mov
jmp
pusha
lea
push
sbb
iret
movd
sti
out
mov
aam
orb
test
xchg
loope
push
add
or
pop
lds
pop
cmpb
lcall
sub
jne
neg
push
call
jo
sbb
popa
sbb
lods
jmp
dec
mov
mov
and
add
pushf
or
add
test
fsubl
adc
or
fs
ret
sub
xor
fs
xchg
mov
nop
pop
bound
std
pop
adcl
lret
sub
mov
test
stc
lret
pop
inc
fsub
lock
inc
ljmp
lods
mov
sbb
pop
dec
insl
mov
rclb
mov
and
ja
not
mov
outsb
add
dec
pusha
push
iret
mov
add
outsb
and
aam
sub
or
add
stos
imul
aad
and
or
mov
adc
sub
jae
jnp
jae
mov
repz
enter
fscale
aas
scas
xchg
es
sub
in
loopne
mov
enter
inc
in
icebp
jl
dec
xor
addl
data16
cmp
rcr
pop
cmp
bound
inc
xchg
sub
call
mov
mov
mov
imul
out
aas
sbb
ljmp
and
scas
and
aad
subl
jecxz
xchg
add
aas
rcrb
sub
dec
mov
in
mov
sti
pop
inc
ds
sub
fisubs
lcall
stos
lock
sbb
xor
sub
mov
and
mov
cmpsb
jb
inc
fists
mov
shll
sbb
iret
adc
mull
mov
ret
mov
pop
pop
rcr
dec
int3
mov
cwtl
push
cmp
and
aas
jo
mov
and
and
add
cmpsb
pop
add
sub
shll
adc
mov
shrl
jge
orb
adc
sub
pop
xchg
cmp
movsl
imulb
sbb
imul
test
loope
lret
sub
pop
add
loopne
paddusw
nop
jge
lods
pop
insb
cmp
dec
pop
dec
sbb
sub
arpl
or
and
movsb
jno
xor
adc
pop
in
add
inc
jno
xchg
push
and
and
pop
mov
cmc
and
jbe
icebp
test
in
push
shl
or
scas
lock
mov
adc
and
loope
fiaddl
cmp
fdivrs
in
shrl
push
ret
lret
bound
daa
pop
sub
fs
cmp
aam
pop
sbb
push
iret
inc
inc
xor
ljmp
mov
pop
movsb
cmpl
xchg
push
xor
add
mov
stos
aam
clc
jl
mov
inc
sub
mov
shll
movlps
and
mov
in
mov
arpl
mov
ret
movl
cli
fidivrs
mov
in
in
adc
flds
subb
aad
movb
push
xchg
hlt
xchg
testl
adc
and
push
lahf
push
pop
aad
les
ficoml
outsl
mov
scas
insb
and
rcrl
aas
mov
mov
push
ja
xchg
push
out
cmpsb
ss
push
faddp
out
jnp
scas
xchg
jg
aaa
mov
xor
push
in
sub
int3
and
dec
call
sub
test
movl
loop
cmp
or
pusha
mov
sbb
int3
sbb
xchg
adc
sti
mov
mov
bnd
bnd
stos
ja
in
pop
sub
xchg
pop
fiaddl
mov
shr
into
xchg
aas
push
and
adc
sub
push
adc
mov
lods
pop
cmp
inc
adc
cmp
inc
jae
aad
inc
cltd
ds
or
pop
jns
sarb
sub
movsb
xor
lcall
out
sub
inc
outsl
lods
mov
outsb
insl
cmp
std
sbb
sub
pop
and
mov
leave
in
test
dec
scas
sub
cmp
mov
mov
gs
xchg
pop
mov
ficomps
std
mov
add
fidivs
push
repnz
xchg
outsl
mov
enter
mov
adc
dec
testb
cmp
inc
dec
cwtl
inc
mov
lods
cmp
and
sbb
inc
arpl
fxch
les
dec
xchg
mov
jmp
adc
jo
sub
or
jne
lock
jge
ja
jne
movzwl
jns
jae
mov
mov
scas
or
fmuls
mov
cli
cs
xor
xor
fildll
sahf
mov
mov
out
push
ds
jp
jecxz
jnp
fucomi
mov
cmp
sub
int3
jmp
pop
jnp
je
outsl
and
int3
jecxz
jecxz
jo
scas
push
movsb
add
shrl
and
into
push
cli
lret
and
test
stos
add
std
dec
jle
lret
insb
sbb
jge
fstpt
mov
loop
pushf
push
and
mov
inc
jle
pop
mov
add
mov
dec
mov
mov
ja
fwait
or
imul
in
adc
xchg
je
jnp
popa
leave
mov
stos
stos
fnstcw
cmp
jle
and
scas
jle
pop
cld
cmpsl
add
ss
fcmovne
and
mov
xor
in
xchg
pop
outsb
cmpb
fistpll
aaa
repnz
mov
fists
std
pop
data16
addr16
mov
mov
adc
lock
pop
test
xchg
hlt
fbstp
pop
negb
dec
mov
mov
push
out
mov
sub
push
mov
mov
in
jmp
dec
cmc
xor
adc
rcl
and
repnz
es
les
xchg
pop
mov
clc
imull
cmp
in
cmp
jge
sub
or
add
repnz
test
sbb
adc
sub
inc
test
fmul
lods
dec
mov
mov
pop
cmpsl
jl
mov
jge
leave
mov
mov
sti
movsb
test
loop
in
xor
xchg
ljmp
imul
rclb
inc
xor
xor
repnz
inc
add
ss
cmp
data16
or
and
hlt
les
sub
fldl
xor
or
push
repnz
mov
bound
add
add
inc
jbe
outsb
mov
sub
jle
sub
add
push
imul
cmp
lcall
into
cld
imul
xor
fs
mov
rorb
xchg
js
jecxz
fnstenv
pop
sti
and
out
movsb
jg
out
ret
ja
scas
inc
add
mov
test
iret
jno
mov
cwtl
mov
fistpl
jne
nop
xorl
stc
xchg
mov
cmp
inc
push
mov
jne
ret
ds
outsb
xchg
mov
sub
aad
or
sub
js
xlat
push
sub
stos
mov
jno
cmp
out
cmpsb
mov
sbb
jae
sub
add
xchg
cmp
hlt
xchg
sub
push
outsb
inc
in
int3
aad
adc
ficomps
or
adc
cwtl
sti
xor
jns
cmpsl
sbb
testl
dec
imul
and
stc
mov
add
mov
adc
out
mov
xchg
dec
shll
stos
gs
sbb
fxch
gs
cmp
ret
cmp
fucomip
orps
pusha
dec
out
pushf
rcrb
and
xchg
cmp
adc
push
sub
xor
mov
popl
and
jge
rcl
jecxz
stos
mov
mov
dec
adc
jmp
cmp
dec
xchg
cli
popl
popa
ds
pop
cmp
adc
pop
in
mov
jne
push
stc
test
xor
push
cmpsl
xor
decl
jecxz
cmp
fdivr
mulb
push
push
call
sbb
push
jb
inc
xchg
inc
rclb
rcrb
xor
jp
or
mov
into
xchg
sbb
fsubrl
sbb
and
adc
mov
mov
insl
push
xchg
xchg
loope
aas
ror
cli
mov
aam
cld
jmp
sbb
sub
lods
fbstp
and
popa
fwait
addr16
sub
lcall
outsb
sti
xor
or
dec
jae
xchg
xchg
stos
scas
cmpsb
loopne
cs
dec
pop
inc
addr16
dec
ficomps
movsb
cmpsb
jae
dec
xlat
xor
divl
rorl
pop
pop
lret
out
out
stos
pop
jnp
sti
movsl
sbb
xchg
daa
pop
add
inc
popa
push
mov
test
pop
sub
push
lods
xor
rolb
jp
add
inc
xlat
mov
add
ret
adc
push
xchg
jns
adc
pop
arpl
ss
push
hlt
cmp
int
jae
cwtl
adc
sarl
ret
movb
mov
call
adc
in
in
xor
int
daa
inc
cmp
repnz
out
mov
cmp
rclb
shrl
movsb
aaa
loopne
pop
sbb
stc
lea
out
out
cmp
pop
sub
call
xchg
scas
pop
fcoml
mov
mov
add
push
sub
testl
repnz
test
mov
cs
leave
or
shlb
xchg
xchg
loopne
mov
cs
xchg
inc
ror
testl
or
push
ss
jae
cmp
repnz
pusha
add
add
fisttps
test
push
cli
out
popf
push
jno
cmp
mov
je
and
sub
xor
and
mov
and
add
pop
push
pop
lods
inc
in
dec
pop
ret
xor
repz
popa
loope
inc
subb
mov
jl
scas
inc
and
xchg
arpl
lods
mov
xchg
aaa
cs
mov
adc
push
push
daa
mov
cmp
pop
pop
push
xchg
pop
xchg
mov
das
jle
in
mov
stc
pop
pop
xchg
sbb
fcompl
xadd
pusha
jae
cmpsl
and
cmpsl
lds
lret
push
dec
mov
cltd
pop
lods
push
out
and
and
not
leave
hlt
imul
mov
sub
cmp
or
pop
repnz
add
insl
dec
pop
jnp
pop
inc
nop
cmc
dec
pop
sarl
in
cmpsb
inc
mov
popa
js
cwtl
push
ret
dec
cmp
mov
jl
out
mov
add
mov
mov
push
jae
aad
pop
jnp
das
int
sub
cmpsl
into
stos
test
jecxz
mov
jno
inc
push
sarb
shlb
jnp
jno
mov
mov
popf
ss
add
pop
lret
mov
mov
add
rcll
mov
loop
mov
sub
or
sbb
movl
lea
popa
lcall
daa
cli
pop
pop
loope
cltd
sbbb
stc
call
dec
or
xchg
pop
adc
sahf
lcall
fimull
sub
sub
lds
cmp
enter
shl
popf
fistpll
les
inc
xor
push
xor
pop
dec
insb
test
out
jle
sub
stos
das
mov
mov
cmpsb
test
and
pop
ljmp
sub
fwait
push
mov
addr16
and
mov
push
adc
inc
jne
cmp
mov
pop
pop
stc
insl
ucomiss
les
cmc
xchg
cld
mov
scas
jb
add
fdivl
inc
xor
lock
mov
xchg
js
das
mov
int
pop
sbb
sub
dec
inc
je
sti
mov
insb
add
pop
xchg
sub
dec
je
mov
xchg
xchg
into
sub
inc
adc
mov
lret
lret
enter
lret
adc
cmpsl
push
xchg
js
fmuls
inc
inc
add
xor
insb
adc
icebp
ljmp
aam
pop
mov
sbb
xor
int
imul
insb
int
jnp
jge
insb
test
jp
out
rcr
sahf
inc
xchg
negl
adc
xor
arpl
or
pop
dec
push
sbb
je
loop
popa
fiaddl
ficoms
pop
sbb
add
push
xchg
lcall
in
mov
add
add
je
mov
add
cmp
clc
je
sub
mov
xor
gs
fdivrl
aam
jg
nop
roll
rcll
scas
jecxz
add
dec
cmpsb
lret
imul
ret
js
inc
mov
jg
jl
pop
std
int
not
lods
nop
mov
push
outsb
sub
daa
jle
push
das
sub
pop
xlat
stos
imul
pop
fimull
bound
cmp
out
xchg
data16
out
hlt
bound
ss
into
xchg
ljmp
inc
ret
mov
mov
mov
repnz
push
push
pop
lret
jp
dec
insl
adc
loopne
xchg
aad
sbb
aam
jbe
sbb
jp
imulb
add
in
sub
inc
imul
pop
mov
inc
sub
add
insl
jbe
push
fucomip
stc
clc
stos
mov
push
sub
aam
mov
cmp
gs
cmp
push
adc
sahf
lret
fs
sub
jns
mov
or
mov
push
shrl
sbb
sbb
loope
cmp
scas
imul
mov
repz
inc
jle
push
jae
pop
cmp
mov
dec
call
jl
and
and
sbb
mov
add
jmp
xlat
pop
jae
and
cmp
push
mov
dec
add
loop
or
shlb
xchg
mov
sub
cmp
test
movsl
jnp
cmp
pop
dec
cld
addl
and
rclb
mov
cltd
out
incl
xor
push
dec
mov
mov
push
inc
xchg
aas
das
out
sub
in
scas
mov
pop
int3
cwtl
cmpsb
cmpsb
loopnew
repnz
loopne
sahf
or
ljmp
lods
xchg
pop
ss
jmp
mov
and
xchg
push
fs
push
idivb
push
xchg
insl
loopne
jp
aam
mov
xchg
dec
mov
mov
out
adc
mov
mov
sahf
repnz
sbb
adc
testl
daa
dec
out
les
das
push
ret
pop
cld
arpl
scas
test
fbstp
mov
cltd
push
mov
sbb
xor
and
aaa
or
dec
pop
cmpsb
popa
int3
pop
inc
and
outsb
js
fmull
or
xor
adc
cmp
mov
push
jo
or
pop
mov
sub
push
cmpsl
out
stos
jne
sub
xchg
bound
jb
or
sbb
push
xor
pop
test
adc
jp
xor
xchg
cmp
cmpsb
inc
mov
gs
cwtl
pop
lahf
push
arpl
inc
jae
sub
push
shr
xchg
push
pop
fsub
lahf
or
dec
movsl
pushl
jle
scas
xlat
jbe
loop
popa
pushf
pop
shll
pop
jbe
ja
inc
stos
mov
dec
xlat
mov
sbb
arpl
popf
push
mov
mov
push
adc
dec
into
sar
xchg
sub
jl
mov
inc
xchg
inc
sbb
clc
cli
pop
xor
sub
or
xchg
inc
xchg
enter
jmp
pop
add
cld
sub
addb
dec
int
stos
test
mov
mov
or
test
cmp
mov
cmp
and
push
sbb
mov
gs
outsl
jg
add
push
mov
mov
fstpl
sbb
cmc
sbb
sub
rorb
mov
lret
js
hlt
mov
test
stos
pop
or
and
jmp
fnstcw
mov
jp
pushf
cmp
es
mov
aam
pop
js
jle
in
lret
ds
dec
adc
and
xlat
mov
jl
call
or
mov
fcompl
xlat
jne
pusha
dec
sahf
mov
lods
mov
out
sbb
ds
push
aaa
push
jp
rclb
pop
adc
fs
dec
mov
mov
loop
int
in
mov
fdivrl
xlat
adcb
js
push
mov
clc
adc
xchg
add
jo
push
daa
hlt
dec
mov
inc
inc
into
pop
push
movb
pop
or
aam
sarb
imul
cmp
cmp
inc
stc
stos
sub
pusha
aad
pop
jg
fcomi
ds
push
mov
divl
sub
adc
mov
mov
pusha
aaa
mov
aam
xchg
fwait
and
add
jbe
test
int3
push
mov
stos
mov
xchg
test
gs
aaa
imul
sti
inc
sub
andl
inc
xor
fdivl
ljmp
jb
addb
mov
das
ja
push
outsl
mov
mov
stos
aam
sbbl
repz
lret
jle
imul
pop
aam
lea
gs
jmp
pushf
lcall
pop
mov
push
xor
sbbl
cmp
mov
dec
ret
or
or
fs
fistps
std
pushf
inc
jne
push
fsubp
jl
out
mov
mov
cmp
sbb
jnp
push
xor
xor
cmp
or
or
push
iret
lds
xchg
sub
jle
cmp
les
in
iret
adc
lock
push
sbbb
js
sbb
add
mov
and
sub
int
sub
loop
lea
aas
jo
xchg
push
or
mov
les
and
mov
dec
lahf
ss
dec
and
cwtl
inc
xchg
ret
or
aam
hlt
push
xchg
cwtl
sarb
cmpsb
out
jne
inc
rcl
cli
bnd
xor
repz
sbb
arpl
insl
clc
and
xor
sub
xlat
scas
push
mov
lock
pop
xchg
ja
in
in
mov
mov
fcmovb
mov
push
stc
test
loop
sbb
adc
add
and
rcr
loop
mov
push
sti
pushf
add
adc
jecxz
add
push
xor
sbb
mov
shll
push
fnstenv
mov
fstl
xor
fiadds
ret
jecxz
push
stc
mov
popa
mov
imul
or
sarl
dec
jno
xor
sub
and
push
cmp
adc
ret
sbb
mov
cmpsl
fistps
jg
push
add
mov
arpl
in
ficompl
xlat
inc
and
aas
or
outsb
pop
jl
les
sub
popf
cli
mov
dec
sti
call
ficomps
sarl
inc
addr16
lret
loopne
inc
orl
mov
and
xor
stc
dec
push
cmp
push
repnz
imul
and
dec
inc
stos
jae
mov
xor
xchg
push
sub
sti
fisubl
mov
bound
jle
jmp
stos
xor
int3
mov
xor
add
out
je,pt
arpl
push
pop
jb
cli
fcomip
sahf
push
pop
lret
scas
push
inc
mov
ljmp
jg
stos
daa
repz
adc
je
mov
es
add
push
xor
and
jp
inc
push
inc
jo
mov
xor
adc
pop
xorl
ja
jno
stos
iret
shll
push
ljmp
mov
or
pushw
cmpsl
pop
push
push
aam
aas
cmp
cs
call
xor
orb
mov
popf
cmc
adc
inc
sbb
mov
push
pop
lcall
jbe
pop
jl
pop
inc
and
cmp
nop
sub
test
lods
mov
and
add
mov
idiv
arpl
jle
mov
stos
mov
jae
test
cli
cmp
dec
outsl
movsl
sbb
adc
test
inc
sub
or
test
push
sti
nop
js
pop
sub
mov
js
mov
push
test
mov
adc
add
lock
sbb
sub
cmp
push
pusha
cwtl
push
test
mov
adc
add
lock
push
shlb
sarb
mov
js
mov
push
test
mov
int3
and
adc
add
in
loope
ror
sarb
mov
mov
cli
test
iret
inc
mov
mov
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
stos
andl
das
subl
add
add
add
test
xor
faddl
faddl
xchg
add
add
mov
add
xor
add
add
add
add
add
add
add
add
add
cmp
push
add
add
add
add
add
add
or
ja
cltd
add
add
pop
add
add
add
xor
add
mov
jecxz
cltd
add
add
add
add
add
add
cmp
fildl
add
cltd
add
add
add
push
add
int
jo
inc
add
add
add
add
add
add
add
add
sub
jnp
mov
add
add
pop
add
add
add
movl
push
add
insb
add
add
pop
add
add
test
mov
add
add
add
add
addl
addl
or
int
add
xchg
addb
add
add
add
and
or
aam
push
add
add
add
test
and
jno
and
jbe
xchg
into
add
add
lcall
add
push
add
cmp
xor
lret
add
pop
add
add
cld
add
add
add
add
adc
add
pushf
add
filds
and
pop
add
add
inc
add
add
inc
add
add
add
add
inc
add
add
inc
add
add
and
add
mov
xchg
add
add
mov
add
xchg
add
add
and
mov
arpl
lea
or
aam
push
add
add
test
int3
add
add
add
add
add
js
imul
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
xor
pushf
add
add
or
int
testl
mov
inc
add
add
add
pop
add
add
add
add
add
addl
js
push
add
add
pop
add
add
push
add
add
add
dec
add
add
add
add
add
push
cmp
jbe
and
cmp
mov
add
add
cld
add
add
add
add
add
add
add
das
add
cmp
fadds
and
add
add
add
cmp
jo
xchg
add
add
mov
xor
cmp
pop
add
add
add
add
push
add
imul
add
add
add
push
add
mov
add
add
push
add
push
add
add
add
add
mov
xchg
dec
add
add
add
aaa
add
add
add
add
add
add
add
add
clc
add
add
push
add
out
add
add
add
or
ja
and
add
pop
add
add
add
pop
add
add
add
add
add
add
add
dec
add
add
mov
sbb
imul
add
maxps
test
cmp
mov
mov
sub
jmp
sub
xchg
adc
in
fstl
pop
mov
jno
data16
pop
imul
and
sbb
pop
add
pop
xor
jp
clc
mov
stos
ret
fwait
mov
adc
cmp
inc
cmp
cmp
fadd
push
push
scas
and
enter
movsl
js
imul
sub
xlat
sbb
mov
xchg
enter
adc
outsl
insl
insl
arpl
xchg
loope
icebp
cmpsl
mov
jb
pop
mov
int
mov
sub
jb
mov
add
mov
dec
xor
std
inc
out
fnstcw
sub
out
mov
jmp
add
imul
xor
pop
xor
inc
push
lods
testb
sbb
and
and
push
and
xchg
test
idivb
fmul
sahf
push
insb
imul
in
nop
ljmp
jge
cmp
es
das
dec
sbbl
mov
mov
mov
icebp
xchg
aad
sbb
push
bnd
mov
push
ret
js
aas
in
mov
ret
mov
adc
inc
or
cmp
cld
iret
out
xchg
inc
lods
pushf
cmp
pop
dec
das
sbb
cmp
inc
dec
dec
fstpt
notl
jmp
std
int
insb
push
mov
enter
dec
cmp
nop
mov
jno
xchg
ficoms
mov
pop
aaa
push
sets
fdivs
hlt
pop
jae
loope
mov
xchg
adcl
test
jg
or
fstpt
add
stc
xor
dec
push
xor
ret
mov
in
and
and
pop
out
cmpsb
mov
fwait
push
sbb
in
sbb
sbb
sub
rcrb
xor
aad
lret
xchg
xchg
pop
push
popa
subb
int
adc
push
xchg
call
sbb
jp
gs
mov
fistpl
pusha
adc
cmpsb
mov
sub
push
xchg
mov
jp
add
or
or
add
xor
fs
xor
adc
gs
ss
mov
sbb
daa
test
sub
icebp
push
negb
fldcw
loopne
out
inc
cli
dec
jbe
mov
dec
loope
sbb
test
arpl
fldl
jge
inc
adc
xchg
cmp
cmp
bound
and
mov
add
pop
fnsave
jne
nop
mov
xor
xor
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
