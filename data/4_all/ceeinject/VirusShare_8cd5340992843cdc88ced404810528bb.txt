call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
inc
mov
jno
add
lahf
add
xor
loope
icebp
add
inc
mov
mov
xorb
loop
loop
ret
shrl
xor
adc
push
stc
mov
test
ljmp
repnz
sub
in
cmp
popa
out
cmc
add
and
cmp
mov
lcall
lods
mov
hlt
ret
xchg
add
movsl
int3
fs
or
sub
mov
stos
mov
mov
int
imul
xchg
and
xor
push
aam
imul
dec
test
sar
adc
fidivs
ror
gs
setg
xchg
mull
daa
pop
dec
inc
jge
out
and
mov
loope
mov
les
bound
mov
pusha
jp
sbb
push
add
repnz
aad
push
dec
ret
inc
mov
sbb
jno
in
imul
pop
and
xchg
sbb
or
jp
push
pop
mov
sub
or
outsb
loopne
xchg
push
scas
xor
test
xchg
ja
pop
pushl
sub
xor
adc
adc
push
mov
loopne
push
adcl
mov
clc
adc
jb
and
cmp
xlat
push
rcll
repnz
xor
shll
xor
add
adc
inc
mov
inc
mov
jno
add
adc
and
xor
shll
xor
add
adc
inc
mov
inc
mov
mov
into
imul
int
mov
fiaddl
xchg
jne
js
pop
inc
cld
clc
cmp
jbe
inc
pop
mov
lcall
rclb
inc
xchg
stc
mov
pxor
xchg
xchg
int3
jno
ja
pop
imulb
test
shll
mov
xchg
es
dec
mov
pusha
mov
lret
cmp
jns
cmp
cli
lret
push
mov
jge
sbb
in
scas
loopne
int
bnd
lcall
dec
in
and
xchg
dec
outsl
leave
push
out
icebp
lock
fcoms
inc
and
jno
push
clc
insb
and
icebp
xchg
rcrl
clts
mov
lret
xchg
popa
pushf
pop
mov
push
cs
dec
loopne
jo
sub
fptan
jns
xchg
mov
out
icebp
or
rcrl
inc
mov
out
repnz
fldt
cmp
and
mov
movups
mull
rcll
cs
mov
cld
ret
xor
enter
repnz
lock
dec
lcall
mov
jne
cmc
popa
ss
adcb
imul
mov
insl
dec
dec
rol
adc
jl
mov
fsubl
es
inc
int3
inc
cmp
outsl
and
push
lahf
lock
movsb
cmc
inc
mov
xlat
andb
inc
jns
sub
xor
pusha
scas
ja
pop
mov
pop
fdivl
mov
xor
testl
or
inc
lea
repz
fcmovnu
lea
arpl
ret
sbb
add
cmpsl
push
cmp
int3
lock
lock
jne
xchg
cmp
mov
pop
ds
popa
add
or
sub
sbb
jno
icebp
lahf
sbb
lea
push
out
imul
cmp
ret
fs
lret
and
insb
fmuls
stos
push
subb
sub
xor
adc
sub
pop
jb
stos
lods
sti
or
es
fildll
adcb
or
xor
mov
fists
and
outsl
lcall
pop
xor
lcall
inc
add
test
xchg
mov
je
imul
enter
xchg
and
sbb
mov
das
push
adcl
adc
mov
ret
fidivrl
adc
and
lods
adc
xchg
cmp
call
xchg
push
repz
lds
aad
or
push
subl
jo
pop
loopne
cmp
mov
lret
std
sub
jp
je
jge
sub
rcll
sub
mov
sti
out
lcall
movsl
cmpsl
dec
iret
pop
in
cli
jb
inc
test
pusha
pop
stc
int3
mov
jecxz
jl
mov
cmpsl
lea
loopne
jmp
ret
push
dec
cmpsl
sti
stos
jno
stc
xchg
push
dec
cmp
fldcw
sub
popw
cltd
cmpsl
xor
popa
aam
pop
std
adc
push
add
aam
mov
icebp
ret
enter
jl
add
bound
int3
mov
sub
pop
push
fadds
mov
mov
dec
icebp
sbb
mov
mov
test
jo
cmp
popa
cld
inc
mov
mov
shll
sbb
add
das
lods
sti
sbb
inc
les
dec
addb
mov
je
hlt
sbb
or
fistpll
xor
iret
movsl
add
sub
mov
dec
add
mov
sub
adc
or
adc
xor
mov
pop
xor
push
daa
shll
loope
pushf
jmp
adc
into
sbb
data16
and
movntps
imul
mov
test
jae
and
push
mov
aam
and
and
rcll
insb
and
shll
ret
dec
mov
data16
aad
insl
xchg
in
fidivrl
adc
mov
out
lock
icebp
xchg
jns
cmp
dec
mov
cli
addl
sub
in
xor
mov
ss
push
insl
ds
xlat
pop
mov
decl
ds
xchg
out
adc
fstps
scas
js
xor
xor
push
add
ret
clc
and
mov
mov
cs
dec
fisubrs
sbb
sbb
adc
pop
std
xor
mov
jb
mov
ret
sub
jmp
cld
ret
in
mov
lock
out
fwait
aaa
sbb
stc
mov
add
cwtl
sbb
xchg
jge
ss
aad
mov
inc
sbb
in
mov
mov
xor
mov
shll
sar
dec
test
or
lahf
cli
push
fsubrs
cmp
lret
jp
mov
sub
cmp
dec
ret
scas
adcl
subl
dec
cmp
dec
jge
movl
in
xchg
mov
nop
xchg
adc
cmc
gs
dec
cmpsl
fmuls
mov
das
outsl
sub
push
cmp
out
std
stos
xor
sbb
into
cs
xchg
push
clc
and
jno,pn
fcompl
push
and
enter
mov
or
aaa
jp
ds
cli
pop
int
int3
mov
dec
mov
ret
faddl
add
mov
js
orb
jg
xor
test
jo
hlt
dec
jge
orl
pop
int
js
sub
push
push
into
mov
outsb
inc
dec
stc
pop
in
imul
jne
test
es
push
in
jae
in
mov
xchg
js
insb
les
test
xor
in
mov
push
cmp
xor
stos
sahf
rcll
out
and
or
hlt
fwait
shll
loope
rolb
mov
push
xor
inc
ficoml
stc
aad
fidivrs
mov
imul
mov
pop
dec
arpl
orl
push
add
sbb
rolb
sar
mov
xchg
mov
sub
adc
in
out
nop
dec
std
jb
aad
xor
roll
dec
dec
or
adc
mov
jbe
jno
nop
into
sti
pop
mov
mov
shrl
addl
cmc
jb
enter
je
inc
sbb
push
ds
sbb
in
dec
nop
push
mov
mov
std
mov
jnp
dec
aas
sbb
mov
clc
fbstp
dec
je
stos
cmc
subb
sub
jp
in
dec
add
dec
sbb
or
test
ja
mov
outsl
or
repnz
and
adc
adc
mov
je
out
xor
cmpsb
cmp
adc
cmp
imul
cmpsb
add
adc
aad
stos
ror
subb
test
jnp
mov
xor
or
push
icebp
cmpsb
jo
sub
lods
adc
and
lcall
lret
cltd
mov
pop
cmp
sbb
cltd
popa
pop
jl
cmp
test
test
js
dec
inc
adc
and
cmpl
sbb
push
mov
insl
stc
inc
lods
stos
jg
rolb
mov
dec
xor
sub
loopne
mov
notl
or
add
add
mov
sub
cltd
lret
addb
sub
loop
into
test
into
xor
sahf
lret
rcr
fists
das
add
mov
sbb
sub
dec
sub
movsb
movsb
pop
xor
pop
mov
or
xchg
push
dec
cmp
pop
test
pop
inc
lcall
add
fsubl
in
cli
repz
sub
outsb
xchg
jecxz
lock
cmpb
lds
mov
insl
xchg
jge
aaa
jno
push
sbb
jg
sbb
xor
or
aad
test
lock
outsb
das
xor
push
xor
jns
pop
mov
xchg
cwtl
push
push
cld
test
jg
add
mov
jb
stos
popa
add
fs
std
sbb
mov
jo
jecxz
gs
or
xchg
push
add
adc
rclb
out
popa
sbbl
stos
enter
mov
mov
out
pop
out
jno
inc
inc
cs
pop
sarl
jl
cmc
mov
jbe
xchg
cmp
orl
repnz
adc
rclb
insl
in
ljmp
jmp
inc
xchg
rcrl
es
sbb
mov
mov
xchg
addr16
rolb
hlt
mov
loop
ret
sbb
movsb
ja
and
add
pop
out
adc
mov
dec
aas
cltd
mov
into
insb
mov
mov
leave
clc
cmpsb
sub
cmp
outsb
jge
xor
aas
call
je
xlat
and
push
enter
add
pop
cmc
push
int
divb
pop
scas
mov
sahf
sub
das
and
mov
and
jnp
xor
mov
mov
adc
mov
xlat
add
dec
lret
lret
pop
clc
insl
adc
xor
sbbb
jmp
fwait
hlt
jno
add
pop
loopne
das
aam
sahf
mov
mov
push
pop
aas
pop
call
leave
adc
jno
inc
cmpsb
xlat
jle
or
fiadds
mov
jmp
cli
and
rcrl
loop
stc
cmp
mov
sbb
xchg
movsl
cmp
imul
jmp
movsl
cmp
mov
out
test
or
aam
repnz
in
inc
popf
lock
xchg
iret
xchg
out
push
cmp
or
jo
pop
push
dec
pop
jp
fstpl
xor
in
rcr
mov
pop
xor
movsl
push
aam
cs
xchg
mov
cmpl
jp
fcmovu
mov
stos
push
jecxz
hlt
mov
sbb
jnp
fsubs
cmp
jle
pop
pusha
test
test
pop
addr16
pop
cmp
aam
and
xor
xor
and
dec
push
add
lods
add
xchg
dec
aam
lcall
mov
sbb
push
pop
mov
mov
pop
push
cwtl
push
fwait
outsl
sub
sbb
mov
push
loopne
jg
stos
and
sub
sbb
mov
lret
lods
or
sub
jb
mov
add
les
xchg
sbb
jecxz
ja
das
jmp
pop
insl
mov
movsb
cltd
nop
out
sti
rcrb
add
insb
mov
arpl
and
mov
xchg
pop
mov
mov
divl
add
add
mov
jb
xchg
pusha
lds
js
roll
lds
dec
mov
in
mov
daa
rcrl
pop
jns
stos
sti
mov
inc
adc
pop
test
jecxz
lods
add
xchg
ror
xlat
lcall
lea
mov
aad
mov
pop
push
jb
xor
add
pop
pop
mov
loopne
push
neg
lret
sbb
mov
mov
cmp
fbld
adc
adc
addl
insl
fwait
orb
outsl
in
mov
ja
mov
sub
add
xchg
fiaddl
fsts
hlt
mov
jnp
adc
cmpsl
jp
in
mov
xchg
loopne
insl
mov
adc
mov
int3
dec
stos
mov
add
sub
popf
xchg
test
fstps
dec
je
push
sub
je
push
add
sub
je
stos
data16
add
adc
loope
loope
das
sti
dec
dec
jnp
fsts
lret
and
ss
fcoml
es
cmc
mov
and
dec
lods
stos
in
aad
sbb
add
lods
lds
add
push
lods
and
pop
repnz
and
popf
movd
cmp
sbb
jae
int
mov
add
or
rcrl
inc
mov
inc
or
pop
jae
lcall
insb
push
pop
out
mov
xchg
xor
testl
mov
fs
push
sub
mov
in
cmp
sub
mov
filds
lock
sub
push
mov
stos
jne
aam
out
cli
stc
out
scas
nop
jge
mov
daa
jnp
push
mov
cmpsb
push
add
lretw
scas
je
sarb
xlat
int3
inc
notl
lahf
icebp
out
insl
stos
pop
mov
inc
mov
xchg
fstpl
icebp
ret
aaa
ss
iret
dec
adc
and
in
inc
sbb
fldenv
mov
cmp
inc
test
aaa
dec
push
cwtl
add
cmpsl
xchg
andl
outsb
scas
data16
test
cltd
mov
outsb
add
lock
jne,pt
add
xchg
jle
inc
xchg
pop
hlt
pop
xor
imul
insb
frstor
sub
push
iret
mov
xchg
daa
xlat
pop
and
cwtl
mov
jmp
push
outsl
das
xchg
sub
dec
mov
mov
in
cmp
in
ret
aaa
je
and
les
jmp
push
pop
jle
out
push
xchg
push
out
xchg
aas
mov
idivl
xchg
sub
inc
cli
dec
pop
mov
mov
arpl
jnp
dec
test
stos
out
dec
lret
shrl
inc
mov
sbbl
test
pop
sarb
xor
mov
jge
mov
popa
sub
enter
sbb
cmpsb
sti
xor
fildll
les
add
int
and
mov
jne
iret
mov
int3
in
in
add
cmp
and
mov
imul
aam
sub
push
enter
dec
fnsave
cmp
sub
test
pop
je
cmp
imul
fidivrs
and
pop
cmpb
mov
test
mov
mov
inc
jno
pop
rolb
loope
sbb
fistpll
xor
aad
sbbl
repnz
clc
ja
cmp
cld
std
pop
lea
mov
leave
mov
sbbb
mov
sahf
jecxz
insl
add
sub
call
pop
dec
mov
popa
xchg
aam
add
xchg
insb
xchg
xchg
sbb
fsubs
out
pop
jo
add
sub
dec
mov
hlt
push
jae
mov
push
and
mov
rcrl
cwtl
and
xor
mov
xchg
sti
int
jnp
add
movsb
ja
sub
pushf
ds
cmp
xchg
pushw
inc
shrb
add
push
movsl
in
push
push
lods
stos
sbb
in
stc
and
mov
or
pop
mov
mov
sti
xchg
jae
jmp
jecxz
test
push
jbe
push
sub
or
pusha
cmp
fldt
mov
in
lock
out
add
cli
pop
sbb
fdivrs
mov
hlt
mov
mov
test
repnz
outsb
call
push
movsb
rcl
push
lds
xlat
cwtl
push
movsb
in
adc
data16
mov
push
das
mov
lods
lret
mov
leave
ljmp
out
mov
in
mov
xor
xchg
int
test
test
mov
out
push
loop
inc
mov
xorl
push
jp
lods
les
test
lea
push
lods
and
call
inc
repnz
scas
mov
push
test
popf
pop
nop
les
scas
hlt
imul
jns
testb
add
stos
aaa
dec
jmp
sub
imull
repz
jb
in
add
sarl
or
mov
int3
icebp
mov
adc
mov
icebp
pop
cmp
pushf
loopne
inc
dec
mov
outsl
pop
imul
jns
imul
out
jnp
push
sbb
push
bound
nop
inc
popf
lahf
sbb
dec
test
jo
cmpsb
add
cmp
fsubs
xchg
add
addr16
sbb
nop
divl
test
clc
ljmp
xchg
outsb
xchg
xchg
decl
sbb
in
inc
dec
dec
lods
dec
mov
or
loopne
add
and
stc
mov
push
pxor
mov
out
push
adc
repz
js
shl
adc
pop
sbb
adc
test
orb
and
pushf
pop
insl
xchg
test
loope
pop
inc
sbb
sbb
push
pusha
mov
popa
or
cmpb
call
jae
xchg
cmp
ds
insl
inc
jecxz
mov
je
out
mov
or
dec
dec
pop
mov
leave
pop
lcall
cmc
mov
mov
jge
ret
dec
push
pop
mov
adc
cmpsl
sahf
cmp
jb
pushf
add
jbe
or
cmp
mov
cmp
dec
ss
insl
dec
push
mov
mov
test
mov
push
xorl
out
sub
and
setae
aaa
imul
push
xor
stc
mov
or
movsb
das
push
addr16
adc
mov
call
test
jl
push
pushf
cld
push
xor
ss
ror
or
in
push
pop
sbb
stos
push
les
mov
cmpsl
and
jg
pop
jae
push
sbb
iret
cmp
xor
push
lret
mov
inc
adc
dec
sti
mul
int
mov
cmp
push
mov
pusha
add
popf
inc
xchg
addb
sarb
mov
jl
xor
std
or
push
jnp
mov
imul
gs
mov
sub
xor
xor
in
fnstenv
adc
loope
leave
fdivrs
cmc
jle
test
fwait
jmp
and
bound
fldcw
fwait
mov
mov
sbb
psrad
xchg
xchg
sbb
fcmovnu
xchg
sbb
mov
xchg
inc
lods
pop
mov
fsub
jno
jmp
ret
in
mov
push
pop
les
sbb
stc
test
fwait
dec
or
int3
xor
push
jns
movsl
xchg
lock
mov
cmpsl
cmp
sub
or
pusha
dec
enter
adc
push
in
sub
inc
mov
xchg
mov
fs
mov
pop
cmpsb
in
out
int3
insb
jg
inc
jecxz
sub
mov
sahf
les
cmc
mov
adc
mov
xor
dec
push
test
xlat
xor
stos
or
out
inc
sbb
push
mov
adcl
or
sub
das
jle
mov
iret
addr16
flds
mov
xchg
loope
add
ja
daa
repz
sbb
jae
sub
out
sti
popa
ds
jp
lret
pop
lds
paddq
bound
xor
pop
lea
push
aam
push
pop
test
sbb
push
push
sti
addr16
dec
inc
mov
loope
xor
shll
lock
add
insl
jg
lods
mov
cmpsb
movsb
mov
mov
pop
sub
repz
inc
adc
fdivrp
mov
fildll
add
mov
mov
jne
int3
jnp
jmp
dec
push
cmc
enter
sub
filds
aas
call
xor
loop
data16
sub
mov
std
lods
enter
test
imul
pop
adcb
cmp
xchg
xchg
xor
cmp
mov
and
stos
jmp
jecxz
idivl
mov
sbb
mov
inc
jae
loop
das
xor
clc
mov
sub
mov
mov
stc
icebp
lret
je
sub
add
out
test
fwait
mov
mov
pop
dec
cwtl
add
stc
int3
inc
or
pusha
popa
mov
cwtl
add
idivb
clc
xorb
and
outsl
daa
xchg
jmp
fsubr
ds
in
cltd
push
es
lret
push
jl
xor
mov
les
push
daa
inc
cmpsl
inc
sbb
loope
cmp
repz
fld
mov
adc
sub
les
cwtl
loope
or
mov
pop
push
insb
inc
jecxz
data16
fnstenv
test
or
fdivs
cmc
test
jl
addr16
sti
out
or
dec
inc
push
jmp
aaa
mov
xchg
push
enter
mov
daa
ljmp
outsb
xchg
lods
mov
fcompl
inc
test
dec
int3
jg
pushf
cmp
push
testl
es
scas
cmp
push
iret
add
movsb
movsl
xchg
mov
pop
insl
sbb
lds
add
dec
test
pushf
rolb
das
or
cmc
mov
inc
aas
push
mov
cli
aas
call
stos
imul
mov
scas
fnstenv
cli
aaa
pop
lcall
push
mov
movsl
sarb
dec
and
and
or
in
or
fsub
lods
mov
mov
inc
add
jno
add
outsl
jmp
sub
jnp
jae
fmul
aam
aas
mov
cltd
stos
jae
fstpt
test
sbb
pop
xchg
adc
aam
lret
xchg
cmp
push
pop
daa
popf
push
inc
clc
jl
push
bnd
leave
xchg
push
mov
jnp
iret
add
mov
jno
add
adc
and
xor
shll
xor
add
adc
inc
mov
inc
mov
jno
add
adc
and
xor
shll
xor
add
adc
inc
mov
inc
mov
jno
xchg
loop
repnz
icebp
rol
and
xor
add
push
andl
push
push
cmpsb
or
xchg
add
add
and
mov
shll
cwtl
dec
add
gs
sbb
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
pop
dec
divps
outsb
das
jle
inc
cmp
ds
orb
fisttps
out
mov
aas
outsb
das
jle
push
dec
push
jg
outsl
inc
lahf
into
fidivrs
loop
sahf
ljmp
divps
outsb
das
jle
push
dec
push
jg
outsl
ds
into
lods
std
rcrl
leave
mov
or
aas
push
inc
jle
les
je
xchg
mov
sub
outsb
xchg
and
test
arpl
sar
mov
es
xor
mov
push
lcall
out
dec
dec
pop
push
cmp
js
push
cmp
lahf
cwtl
fistl
mov
scas
fwait
mov
lcall
jp
inc
das
sub
pop
pop
cli
inc
outsl
rclb
or
inc
push
push
and
fidivrl
fistpll
shl
push
xchg
cld
inc
sub
ja
fsts
mov
xor
loop
lock
jle
ds
bsr
repnz
jnp
fistpll
inc
push
xchg
mov
mov
dec
divps
outsb
das
jle
push
dec
push
jg
outsl
ds
into
fidivrs
mov
sahf
ljmp
jnp
push
outsb
inc
jle
imul
lahf
mov
fistpll
int
sti
pushf
xlat
test
cmp
inc
jle
bound
push
pop
inc
cmp
cmpsl
mov
loopne
lahf
xchg
clc
lcall
sbb
sbb
and
jg
outsl
ds
into
fidivrs
mov
sahf
ljmp
divps
outsb
das
jle
push
dec
push
jg
outsl
ds
into
fidivrs
mov
sahf
ljmp
sub
mov
jp
icebp
xchg
mov
mov
fwait
pop
push
mov
dec
mov
sub
cmc
sbb
subb
push
mov
push
sbb
ret
out
xchg
loope
jbe
push
jmp
jne
pop
jmp
stos
test
mov
gs
jno,pn
fsubrs
sub
and
cmp
aas
sbb
cmp
push
popf
aaa
lods
pop
sbb
cld
xchg
sbb
mov
dec
loop
cmp
or
shl
fisubrl
xor
cmp
add
push
pop
inc
shrl
in
popa
xor
mov
stc
dec
mov
cmp
and
in
arpl
fildll
push
unpcklps
xor
xchg
jne
loope
mov
or
mov
mov
dec
mov
es
fs
repnz
dec
push
or
orb
test
stc
pop
addr16
xchg
in
lea
xchg
fists
lahf
xlat
and
mov
pusha
ret
dec
sbb
dec
dec
mov
out
sarl
negb
dec
mov
pop
pop
lret
jg
fnstsw
ljmp
sbb
or
xor
inc
ja
std
hlt
repnz
cmp
pop
mov
int
aas
int3
mov
out
lret
shr
push
push
and
inc
call
pop
add
mov
outsb
add
ret
mov
lcall
gs
inc
movsb
loop
mov
mov
push
stos
jg
ja
cltd
call
insb
lcall
and
jmp
dec
push
mov
cli
test
xor
xchg
and
inc
sbb
out
jae
ret
mov
pop
enter
in
xchg
pop
xchg
mov
fs
into
into
daa
jnp
adc
cmpsb
mov
jnp
dec
inc
out
sbb
iret
insl
mov
into
inc
pop
lods
out
cmp
rcrl
adc
add
bndstx
loope
popa
stos
xor
cli
stc
mov
ljmp
lret
mov
cmpl
adc
idivl
fs
repnz
int3
dec
adc
xor
in
lods
xchg
imul
push
inc
or
pop
or
mov
roll
jecxz
sub
adc
ja
or
mov
mov
sbb
js
sahf
push
mov
jbe
enter
dec
sbb
mov
lods
push
and
movsb
xor
mov
shlb
fimull
and
mov
push
jp
das
stos
xor
shrb
loope
or
lods
rclb
xchg
xchg
ja
ljmp
lods
mov
inc
or
scas
add
push
or
sbb
cs
jbe
sti
dec
sub
adc
out
xchg
push
aad
or
xor
xor
inc
repnz
xchg
cltd
test
inc
clc
std
fidivrs
add
pop
in
leave
sub
cmp
add
mov
sub
test
loope
in
rolb
dec
das
and
imul
orl
cmp
sbb
mov
scas
mov
popa
shrb
cmc
or
mov
sbb
dec
dec
sbb
xor
cmp
movsb
nop
jbe
sti
repnz
or
dec
stos
test
jmp
mov
lahf
add
jle
xor
sub
xchg
ja
pop
pop
mov
scas
stos
xchg
add
sbb
arpl
sub
insb
push
dec
pusha
mov
aam
pop
adc
rorb
icebp
pxor
out
cmp
stc
mov
pop
cld
push
aaa
leave
jns
jno
jns
ds
mov
mov
mov
sub
pop
aaa
test
adc
sbb
mov
sbb
movsl
dec
sub
xchg
mov
movsl
sbb
fs
cltd
or
fsubrl
mov
xor
cmc
add
dec
jecxz
jns
test
pop
leave
shrl
fnsave
dec
and
adc
andl
cmc
mov
inc
inc
stos
or
sub
cltd
ja
push
int3
mov
loop
rcrl
push
enter
sarl
test
fnstenv
xchg
add
jo
pop
dec
inc
cmp
mov
dec
jo
sub
ret
jae
mov
test
jne
cmpsl
into
sti
nop
shlb
add
or
into
aam
dec
mov
movsl
mov
sub
scas
jge
aas
xchg
xlat
fwait
stos
popa
dec
push
mov
mov
dec
outsl
pop
lock
in
popa
inc
shrl
add
mov
inc
jno
xor
mov
push
push
stc
mov
inc
leave
popf
pusha
xor
mov
push
dec
test
sub
cs
and
fwait
vmovapd
xchg
sbb
ud1
pop
addr16
cwtl
cltd
sbb
xchg
mov
xadd
xor
xchg
in
pop
jge
std
frstor
mov
mov
pop
pop
fwait
js
leave
test
ja
lret
int
cmp
jbe
out
rorb
push
in
gs
push
stos
jmp
int3
dec
popf
fidivrl
jp
sbb
pop
cmc
out
push
mov
ds
sti
bound
sub
mov
push
dec
and
and
pop
in
lcall
pop
leave
xchg
xchg
inc
sbb
xor
adc
es
sbb
arpl
cli
mov
mov
std
add
insl
jl
jmp
pop
add
je
test
inc
mov
stc
sbb
xchg
xchg
pop
mov
inc
ljmp
mull
cmpsl
ret
mov
cs
stos
insl
mov
into
out
pop
push
jb
sub
pop
imul
pop
lods
loope
xchg
adc
aam
mov
aam
dec
popf
xor
adc
es
sahf
ret
xchg
loopne
shrb
lcall
pop
ret
mov
dec
pushf
adc
jns
addr16
or
add
ja
ret
mov
addr16
dec
sub
mov
fadds
out
or
or
add
imul
mov
sbb
cmp
push
pop
pusha
imul
cmpsb
repnz
imul
adc
into
lcall
add
add
scas
mov
leave
mov
add
xor
xor
repnz
in
mov
sbb
ficoml
push
push
repnz
cmp
adc
aaa
or
jbe
or
adc
inc
cmc
mov
cmp
add
into
out
inc
mov
xchg
cmc
dec
loopne
fiaddl
in
xchg
out
pop
pop
xor
pop
jle
mov
aas
in
jno
or
xor
xor
jge
cmp
daa
lds
mov
shll
adc
iret
fdivl
pop
xchg
bswap
sub
push
clc
leave
dec
iret
pop
mov
adc
shlb
test
movsb
std
adc
shrb
sub
es
cmp
cmp
aas
je
insb
ficompl
notl
shrb
cmp
cmp
push
cltd
push
adc
ret
mov
adc
and
add
in
xor
movsb
adc
cmp
loope
out
sub
shrb
mov
xor
int3
fs
aad
mov
mov
fldl
jg
xor
or
aad
jl
pop
cli
jne
or
xchg
mov
lretw
out
cmp
insb
inc
pop
or
shrl
adc
insl
movsl
ljmp
out
add
je
js
adc
loop
mov
enter
xchg
xchg
data16
xor
out
adc
pop
adc
pop
mov
cs
sbb
mov
mov
cmp
sarb
divl
xchg
push
jae
outsl
push
nop
lret
xor
jecxz
call
inc
roll
dec
jae
jle
shlb
rorb
ror
shrl
es
jnp
inc
flds
lahf
loopne
pop
sub
pop
fs
sub
sbbl
shl
roll
sbb
lods
ret
sti
gs
popa
cwtl
mov
loopne
repnz
cmp
mov
lods
dec
aad
jle
pop
xor
fidivrl
xor
cltd
mov
pop
mov
and
jne
out
jns
inc
test
roll
or
push
xor
lods
and
cltd
sbbb
stos
cmp
pop
orb
sbb
movsb
mov
test
sbb
in
xlat
repz
mov
clc
inc
push
add
incl
test
inc
pop
ficomps
mov
xchg
or
add
push
and
fcmovne
xchg
int3
inc
xor
bnd
adc
xor
js
add
or
xchg
dec
notb
ret
jns
mov
xor
fs
cmp
cwtl
sub
adc
ret
mov
push
mov
insb
xor
aad
mov
das
iret
pop
mov
icebp
and
jmp
insl
wbinvd
repnz
pop
xchg
jg
and
int3
xlat
add
mov
in
or
cmp
mov
mov
fldcw
pop
iret
pop
mov
repnz
jg
xchg
add
mov
movb
push
outsb
pop
sub
adc
pusha
std
add
pop
popf
js
aad
lret
dec
jg
fwait
mov
in
push
filds
inc
test
push
jg
fidivrl
inc
mov
test
add
fisubrs
cs
mov
scas
shrl
sbb
or
or
inc
icebp
movsl
hlt
jecxz
scas
outsb
aad
aad
push
dec
ja
mov
popa
or
test
lahf
sub
jb
cmp
test
sbb
xadd
stos
aas
ret
mov
xor
add
xlat
cmp
dec
push
jbe
add
cmp
xor
mov
cwtl
aas
bound
inc
mov
inc
repnz
mov
and
cmpl
cmp
or
xlat
lcall
add
sarb
pop
sub
mov
or
lods
shl
pop
xor
fldenv
sub
dec
icebp
fucom
sbb
mov
push
pop
sbb
mov
fs
imul
fs
and
in
lea
sbb
add
popf
les
push
pop
aad
out
sub
bound
push
xchg
scas
jmp
cmp
bswap
or
sbb
add
push
adc
pop
mov
cmp
fstl
cmp
leave
jle
imul
push
and
dec
add
xor
xor
sbb
mov
rcr
jl
sbbb
cmp
repz
mov
sub
leave
fwait
xlat
xchg
xchg
inc
push
les
in
inc
call
jg
mov
lea
cmp
sub
imul
aad
jmp
mov
mov
pop
xor
and
test
stos
negb
shrb
push
ret
out
mov
fwait
pushf
cmpsb
xor
add
push
jbe
movsb
std
testl
mov
mov
ds
rolb
mov
jbe
sbbb
xor
cmp
or
cmp
aad
scas
bound
mov
insb
pop
pop
xor
jo
lods
add
xlat
inc
aad
ljmp
cmp
insl
pushw
notb
mov
inc
stos
jp
test
inc
or
adc
pusha
xor
aas
and
orb
fistpll
inc
arpl
push
scas
test
jle
shr
lods
mov
rcrb
insb
mov
stos
dec
add
cmp
pop
mov
orl
mov
insb
pop
int
pop
mov
and
das
js
pusha
stos
sbb
fistpl
sahf
xchg
mov
pop
add
iret
adc
adc
pop
or
xor
mov
mov
or
cwtl
jl
jmp
adc
test
xchg
fadds
inc
mov
xor
cmp
and
sbb
mov
mov
mov
xchg
fisubrl
or
push
outsb
mov
jle
test
and
add
xchg
jo
sub
es
pop
push
push
or
or
sbb
jg
rcrb
lcall
out
or
pop
rolb
inc
add
cmc
pop
cmp
les
mov
cmp
int3
mov
mov
stc
cmp
and
jmp
mov
adc
in
out
stos
sbb
xor
sbbb
jmp
movsb
adc
and
pop
jmp
cs
dec
int
imul
in
pop
add
lds
icebp
insb
jmp
pop
xor
fisubl
cmp
inc
pop
xor
mov
test
in
lds
fwait
mov
and
loopne
sbb
inc
fstpt
push
mov
add
loopne
jg
pop
sub
and
adc
sbb
fisttps
or
or
fucomi
std
jnp
inc
and
pop
insb
hlt
lea
outsl
outsl
jbe
inc
rcr
adc
pop
or
ljmp
mov
push
sub
adc
jo
lds
fldl
ja
bound
pushf
jge
fidivrl
lret
pusha
test
mov
dec
orl
sahf
or
lcall
mov
lcall
fidivl
jbe
mov
dec
sub
and
sub
int3
xchg
xor
and
pop
dec
insl
cmp
pop
cmpb
es
mov
out
cmc
jecxz
and
roll
lds
fldz
jbe
add
xor
out
rcrl
sbb
popa
movsb
push
push
xchg
movl
icebp
dec
or
pop
push
loopne
and
or
jo
scas
lahf
adc
add
rcrb
ljmp
das
movb
inc
outsl
xor
mov
mov
das
sbb
cwtl
cmpsl
add
outsl
aam
in
popf
in
inc
push
lret
pop
fdivr
or
cmp
dec
and
adc
dec
xchg
out
or
je
js
iret
mov
mov
jo
pop
scas
into
add
mov
jmp
sbb
sbbb
dec
and
add
push
mov
add
and
xchg
sub
xchg
stc
inc
sbb
idivl
xchg
push
ror
out
dec
sarb
mov
cmpw
dec
fidivl
inc
xlat
and
push
scas
cld
arpl
jmp
inc
test
jmp
popa
sbb
adc
inc
outsl
sub
inc
bound
cli
mov
ja
repnz
lea
ret
pop
jno
dec
jl
xchg
xchg
jmp
jbe
xchg
mov
loope
rorb
or
add
mov
mov
dec
aad
fdivrp
jnp
dec
mov
push
das
outsl
aaa
push
cmp
outsb
ret
pop
sbbl
pop
imul
or
out
xor
sti
or
jnp
lock
pop
aad
nop
sub
popa
addr16
push
mov
mov
pop
sbbb
pop
mov
popf
xchg
add
dec
mov
mov
mov
cmpsl
inc
push
lcall
popf
mov
ret
in
dec
mov
push
push
dec
rol
leave
xchg
icebp
dec
lock
testb
dec
fildll
faddl
sub
inc
fwait
xchg
pop
test
scas
xchg
mov
inc
xchg
rorb
in
cmc
mov
mov
xlat
ljmp
lock
fldcw
pop
test
dec
fadds
pop
cmp
mov
sub
sbb
xchg
inc
rol
ljmp
lods
popf
ficoml
sti
sub
out
in
push
pop
mov
stos
xor
jp
push
cmp
or
popf
add
arpl
mov
dec
outsl
insb
adc
scas
lea
shll
mov
push
ret
xor
push
jp
call
jno
sub
pop
cwtl
mov
jne,pn
test
imul
pop
xchg
sub
dec
mov
or
sub
testb
outsb
push
scas
into
dec
lcall
nop
lods
push
xchg
mov
and
stos
ljmp
data16
push
xor
sahf
xchg
dec
adc
sbb
aam
or
jge
jecxz
inc
popa
lods
or
lds
mov
dec
and
stc
xorl
or
push
outsb
push
outsb
aas
push
cltd
sub
int3
shr
fisubs
pop
lds
andb
cwtl
cmp
sarb
aam
push
fsubp
pop
pushf
addr16
pop
xchg
hlt
call
clc
insl
jno
imulb
cmpsb
pop
lea
push
dec
push
rorb
jo
mov
add
lods
aaa
psubusw
cltd
pop
inc
data16
jbe
jmp
inc
dec
sbb
fisttps
daa
loopne
ret
sahf
rorl
in
xor
add
xchg
cmp
push
data16
lock
xchg
shrl
das
add
adcb
add
dec
xlat
gs
leave
in
repz
fcomps
sti
push
xchg
fbstp
lods
lods
lock
mov
adc
leave
add
sti
es
lahf
mov
cmpl
sub
xor
das
cmpsl
ret
mov
rcrb
rolb
fidivrl
and
in
sub
in
std
bound
dec
lahf
xchg
clc
loope
mov
in
xor
fbld
dec
fsubrl
outsl
push
mov
push
faddl
add
popa
inc
sbbl
lea
fxch
loope
add
fdivrl
cwtl
in
stos
mov
xchg
cmp
notl
dec
jl
dec
shlb
xlat
sub
enter
test
ret
ficompl
inc
aam
or
addl
rcr
sub
sbbw
add
cmp
cmp
scas
lds
sbb
jnp
push
mov
dec
cwtl
push
pop
loopne
test
addl
cwtl
pop
and
dec
cmp
cmp
cmpsl
cs
inc
mov
fnstcw
mov
jbe
inc
pop
fnstsw
test
dec
lds
fwait
dec
inc
ficoms
or
loopne
incb
sarb
int3
jg
push
aad
jo
lret
add
addl
push
inc
cmp
mov
sbb
into
inc
lods
inc
sarl
adc
in
ret
add
out
movsl
int3
repnz
jns
inc
xlat
mov
jp
sbb
iret
les
pop
push
add
icebp
movsl
push
jae
inc
sub
mov
mov
mov
mov
mov
jno
and
cmp
cmc
mov
sub
xor
ret
jno
stos
jo
jle
xor
xchg
xor
jns
leave
cmp
cmpb
mov
aaa
fucom
lret
or
movsb
cmp
adc
pop
xchg
pop
add
pushf
sbb
cmpl
int
in
push
scas
sysexit
mov
pushf
sbb
cmp
mov
addb
stc
out
push
mov
xchg
or
aas
idivb
imul
mov
cld
cld
ror
bound
stos
in
cmp
inc
jbe
out
loopne
mov
out
or
mov
rcll
push
cmp
ret
sub
add
enter
out
lds
stc
lret
lock
lcall
add
inc
mov
jecxz
lds
mov
jnp
jnp
stc
and
xchg
lods
jno
js
push
lock
icebp
xor
lds
cmp
dec
dec
pusha
push
fmull
sti
out
and
cmp
cmp
shll
xchg
inc
mov
lock
push
data16
int
lea
mov
call
cmpsb
xlat
loopne
push
dec
mov
aaa
jl
push
mov
sarb
or
sbb
gs
push
adc
hlt
pop
mov
cwtl
and
xchg
sbb
dec
cmpl
mov
mov
jmp
popa
in
iret
mov
or
inc
cs
movsl
sbb
sbb
inc
and
add
jl
pop
pop
arpl
cmp
push
addr16
xchg
cmpsb
cmp
xchg
mov
imul
lods
mov
pop
pop
or
sti
push
stc
mov
and
push
lret
adc
mov
add
ds
or
addr16
les
push
ret
pusha
sub
fadds
jb
push
daa
scas
pop
pop
push
jno
mov
je
mov
jns
sub
imull
shlb
jne
aas
into
dec
push
fsubrl
jo
push
lret
insb
cmc
xor
movsb
push
push
xchg
mov
xor
outsl
enter
sarb
xchg
call
lret
jle
jp
inc
ret
push
ret
xchg
jl
push
mov
in
push
popl
aaa
loope
pop
jae
neg
lods
xor
fstl
sar
aam
arpl
ret
inc
out
mov
mov
pushf
mov
pop
and
imul
sbb
mov
cmpsl
int
imul
cs
mov
or
add
jmp
push
and
cld
push
xchg
mov
pop
or
push
dec
push
mov
mov
out
movsb
adc
and
xlat
xchg
addr16
dec
xor
ret
ret
cmp
xor
mov
ss
rcr
lods
mov
loopne
dec
js
jmp
xlat
xchg
call
jle
push
dec
push
jg
outsl
ds
into
fidivrs
mov
sahf
ljmp
divps
outsb
das
jle
push
dec
push
jg
outsl
ds
into
fidivrs
mov
sahf
ljmp
pop
mov
push
dec
push
jg
out
ds
into
fidivrs
mov
sahf
ljmp
divps
outsb
das
jle
push
dec
push
jg
outsl
ds
into
je
out
scas
mov
push
lahf
inc
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
push
xor
jb
bound
cmpsb
es
or
add
inc
shll
loop
xchg
repnz
xor
jb
bound
adc
bound
push
and
mov
mov
xchg
repnz
mov
mov
and
jp
or
bound
push
and
mov
lods
loop
adcb
cmc
ret
sub
out
inc
mov
mov
push
scas
cmp
jnp
mov
cmp
xchg
or
cmp
std
cmp
mov
push
por
push
xchg
sbb
ret
imul
in
outsb
shll
loop
test
pop
lret
inc
xchg
bnd
mov
mov
and
jae
jb
mov
ret
mov
insb
sbb
mov
sub
jecxz
scas
iret
fdivrp
les
popf
jg
rclb
testl
push
andb
mov
fidivl
mov
sub
sub
xchg
mov
xlat
or
mov
and
bound
add
push
cmp
mov
mov
mov
lcall
pop
daa
icebp
pop
push
push
inc
popa
sbb
and
rcr
scas
lret
cmp
out
rclb
cmp
adc
push
jle
add
jno
xchg
mull
out
xchg
popf
jmp
lods
aaa
bound
push
push
data16
push
add
push
and
mov
mov
xchg
repnz
shlb
and
bound
adc
bound
push
and
mov
mov
xchg
repnz
shlb
aaa
int
adc
jle
pusha
je
add
andb
inc
imul
int3
xchg
in
sub
scas
popa
stc
or
sbb
out
icebp
inc
xor
mov
out
inc
xor
and
xlat
lret
add
fisubrl
andb
or
push
pop
rol
sub
std
fisttpl
jnp
jbe
stos
int
bound
and
inc
mov
cmp
lock
xchg
popa
pop
fwait
xchg
mov
imul
mov
fbld
lds
cmp
xorl
jns
and
ja
arpl
mov
ret
xchg
popa
xchg
add
add
dec
inc
sahf
jnp
lods
ss
sbb
fdivl
cmp
cmp
fstpt
or
pop
xchg
adc
test
aad
dec
dec
test
fs
mov
inc
dec
sub
dec
in
sbb
das
dec
jae
mov
ret
fsqrt
mov
pop
jbe
ret
pushf
sbb
pop
aaa
fstl
insb
push
mov
pop
lret
mov
mov
je
ror
insl
pop
jb
popf
cmpsb
sbb
in
mov
inc
pop
outsl
js
jnp
stos
jl
popf
cmpsl
imul
stc
jne
cmp
sbb
or
xchg
ret
sbb
fiaddl
or
loopne
jmp
pop
and
shlb
in
adc
int
scas
mov
mov
and
aas
cmp
js
arpl
test
jecxz
call
fwait
xor
iret
into
mov
cs
pop
jmp
sahf
inc
add
mov
imul
in
inc
mov
rcr
repz
stos
daa
add
mov
or
mov
cs
adc
sbb
xchg
ret
inc
inc
xor
ror
pop
xchg
mov
ret
test
xchg
pop
sbb
pop
int3
xchg
push
inc
mov
inc
mov
pusha
lock
adc
dec
cli
xchg
insl
push
out
mov
cmp
mov
fcompl
and
or
push
lea
jb
cmp
pop
ret
cmp
pop
call
sbb
and
lds
test
in
xlat
mov
xchg
jnp
pop
push
mov
jbe
xor
stc
lds
mov
insl
cmp
in
in
stc
jb
daa
jne
sbb
mov
cmp
pop
mov
push
push
xchg
fcmovb
fwait
adc
xchg
ficoms
bound
add
or
xchg
push
ror
jns
ret
push
pop
sbb
addb
addb
mov
mov
or
cld
and
cmp
sub
or
mov
test
pop
and
iret
pusha
jne
adc
cltd
or
jmp
mov
dec
cs
jl
popf
push
mov
out
mov
or
add
sub
cld
inc
nop
xor
pop
pusha
aas
rorb
inc
push
push
xchg
icebp
add
int3
sub
aas
pop
aaa
dec
or
lods
pop
inc
call
rorb
cld
push
test
jmp
mov
jl
sbb
pop
out
mov
out
push
testb
scas
push
dec
inc
and
mov
jge
or
mov
inc
xchg
cltd
fwait
push
out
sbb
sete
addr16
rolb
fldt
std
xchg
test
adc
sub
inc
jecxz
pop
dec
in
notl
push
test
or
and
testl
sbb
adc
push
push
lret
out
or
insl
sub
xchg
inc
cld
loop
jnp
inc
jae
stos
in
lods
insb
test
ds
aad
jne
sti
jg
mov
pop
jle
xor
divb
lods
inc
dec
iret
popa
adc
leave
lret
aad
and
push
mov
es
xchg
and
mov
xchg
push
mov
mov
xor
movsl
add
sub
jecxz
shll
bound
in
adc
outsl
faddl
xor
addr16
arpl
fstl
ljmp
or
aad
gs
icebp
repz
data16
push
movsb
inc
mov
push
push
nop
mov
adc
or
cwtl
out
push
sbb
outsb
pusha
out
jp
sti
jmp
data16
mov
cs
push
adc
nop
sbb
xor
stos
dec
push
dec
pop
dec
pop
in
mov
je,pn
mov
mov
push
sub
adc
cwtl
je
shll
cmpsb
inc
popa
add
push
xlat
jmp
sub
pop
and
test
sub
mov
xchg
and
mov
in
mov
add
lret
andb
push
int3
outsb
mov
dec
ret
pop
xlat
xor
jo
xchg
mov
and
jecxz
cmp
icebp
pop
xor
push
dec
shll
out
mov
pop
dec
rcl
adc
xor
rol
fisubrs
fdivs
ret
adc
cmc
test
pop
lods
jl
xchg
andb
mov
lea
gs
mov
push
cmp
xchg
pop
cmp
pop
and
jecxz
xor
je
cmpsl
push
cmp
inc
sbb
ljmp
jg
sub
jbe
or
pop
cli
xchg
out
mov
fbstp
dec
rcl
loope
push
out
cmc
pop
in
push
shl
dec
iret
cld
add
dec
jne
cmp
movsb
sub
pop
cmp
cmp
out
jmp
jle
pop
mov
jbe
cmp
pop
daa
or
pop
cmc
jecxz
jne
inc
or
in
out
in
or
xorb
sub
das
sub
call
sub
sar
dec
inc
subb
sti
setno
jae
stos
sbb
jge
or
loopne
mov
push
push
add
xchg
sbbb
ret
add
es
mov
sub
int3
addr16
call
lock
jg
mov
cwtl
push
mov
ret
std
inc
mov
es
jne
imul
mov
fists
call
jns
ljmp
cmc
xchg
xchg
pop
and
out
nop
sbb
popf
inc
fldl
xchg
sub
popf
pop
mov
pop
mov
lods
or
leave
cli
inc
imul
insb
dec
sub
fstp
insl
adc
adc
out
in
sti
jnp
xchg
lcall
xchg
pop
orl
xchg
inc
xchg
orl
std
inc
mov
fincstp
add
adc
lock
jnp
cmp
and
jl
mov
shl
aad
rcr
mov
mov
cmc
popf
dec
add
aad
dec
cmp
mov
and
aaa
iret
mov
jge
in
in
cmp
jb
mov
sbb
jnp
mov
or
lret
jecxz
pop
mov
mov
shl
scas
repz
push
repnz
add
sub
rcl
mov
into
pop
jno
aas
das
in
push
lret
loop
cmpsl
ja
jecxz
pop
jmp
xchg
or
fsts
jmp
pop
into
mov
inc
mov
idivb
sbb
mov
arpl
jb
lahf
and
push
or
mov
xchg
lds
repnz
test
dec
mov
add
mov
mov
int3
or
push
xchg
loopne
fidivl
sub
and
sahf
mov
sub
jp
cmp
rorl
dec
mov
out
das
inc
cmpsl
and
mov
mov
add
or
sbb
jge
mov
nop
outsl
push
inc
dec
test
pop
cltd
mov
jae
or
or
add
mov
or
jge
add
xchg
movsl
inc
sbb
outsl
dec
daa
inc
xor
mov
sarl
and
arpl
lret
stc
pop
xor
fwait
out
fcmovnb
lahf
jbe
sub
loopne
int3
and
mov
push
mov
sbbb
sbb
mov
cmp
addr16
nop
mul
hlt
mov
xor
insl
xor
push
xchg
xchg
fstpl
loope
lock
scas
lods
sarb
inc
pop
add
shlb
aas
ficoml
sbb
imul
pushf
push
rcll
dec
and
fisttpl
popf
outsb
xor
sarl
pop
push
xchg
jo
adc
scas
xchg
sti
cmpsb
or
cli
bound
rcrl
sub
pop
xchg
js
mov
adc
adc
jb
mov
add
je
mov
pushf
fidivl
inc
sub
mov
ds
mov
mov
iret
loop,pn
ja
xor
stos
and
inc
outsl
scas
sahf
inc
in
jo
add
bnd
cld
adc
call
jne
pop
sub
inc
ror
and
insl
fcomps
sbb
xchg
shrb
inc
in
scas
test
test
xlat
dec
out
xchg
outsb
or
insb
xchg
popa
movsb
cmp
mov
scas
and
sbbb
mov
sbb
lds
cmp
testl
aad
stos
xor
scas
fbld
pop
out
shll
jmp
sbb
jo
sbb
jno
sbb
sub
cltd
in
jnp
and
cmp
out
mov
mov
mov
pop
mov
pop
push
cmc
paddsw
pop
addl
dec
cmc
pop
aaa
cmp
popf
ljmp
mov
scas
inc
sub
stos
cmpsb
and
outsl
push
lret
adc
outsb
repnz
stc
mov
jecxz
lret
push
fimuls
cmc
sub
imul
jae
test
push
cmp
fwait
mov
lods
mov
cld
arpl
mov
jl
fistps
lea
call
add
mov
sbb
add
popa
inc
push
pop
dec
loopne
xchg
add
mov
mov
movsb
ss
adc
shll
lcall
sub
and
test
imul
jnp
jl
dec
mov
mov
insb
cmp
adc
and
pop
or
arpl
mov
jnp
mov
lds
jg
add
mov
adc
stc
iret
xor
push
push
fdivrs
pop
or
stos
js
xor
loope
pop
dec
mov
gs
mov
push
mov
mov
inc
mull
dec
jg
test
mov
fimuls
pop
jecxz
int
mov
vshufps
ja
dec
pop
xchg
xchg
mov
sub
inc
or
andb
pop
frstor
mov
inc
sbb
mov
xlat
stos
aaa
mov
pop
and
cmp
pop
cwtl
add
mov
scas
dec
pop
mov
mov
and
mov
scas
fstps
fs
in
sbb
sti
mov
mov
gs
pop
and
stos
mov
cmpsb
jge
jns
jne
sub
xchg
add
fcomip
fs
push
pop
and
dec
inc
inc
insl
loopne
loope
decl
sbb
cmp
xchg
stos
mov
push
imul
movsb
pushf
sub
jmp
aas
or
sarb
enter
pop
add
add
and
xlat
jge
push
test
cmpsb
sub
nop
std
mov
cli
adcl
sub
int3
inc
mov
pop
jle
imulb
mov
adc
cmpsb
in
xchg
jne
cli
iret
sbb
jo
shll
test
out
and
xchg
lods
pushf
out
cmp
jg
cmp
cli
jo
into
das
push
rol
push
test
pop
cld
mov
shl
push
je
fisttpll
xor
jns
mov
mov
mov
xor
mov
mov
das
jne
inc
lret
andl
pop
xor
jl
sbb
js
dec
les
jecxz
in
pop
imul
inc
sbb
adc
xor
popf
inc
cmc
push
pop
xor
xchg
push
mov
arpl
sti
or
sub
cmpsl
sub
outsb
addb
js
repnz
pop
xor
xor
shll
leave
enter
inc
sub
dec
dec
mov
xor
cmp
lods
xor
xchg
add
scas
fildl
idiv
scas
repz
mov
lock
fisttpl
sub
and
movsl
lods
flds
lods
clc
dec
push
cwtl
xor
pop
test
mov
mov
ficoms
int3
push
inc
mov
bound
out
xchg
xor
ret
clc
fwait
or
aam
aad
adc
dec
inc
sub
pop
aas
sbb
jecxz
add
and
lcall
fs
cmp
mov
cmp
ret
orl
mov
pop
cmp
cmpsb
ds
sbb
lret
jl
aas
sbb
cmp
push
test
jnp
das
jmp
mov
cmp
cmp
aas
push
jnp
inc
cmpsl
push
mov
xor
jno
xchg
mov
lea
pop
out
mov
mov
mov
mov
fcomps
push
jecxz
push
out
mov
ja
enter
ret
into
lret
mov
movsl
mov
jnp
push
aaa
lret
push
int3
and
ljmp
dec
mov
imul
jmp
jno
stos
mov
adcl
jmp
jbe
mov
and
add
jne
popa
cli
mull
xor
jecxz
iret
or
scas
jl
test
xchg
gs
xchg
push
jb
dec
dec
ss
xor
cmp
cmp
adcl
popf
lods
push
xchg
push
mov
lret
aas
mov
jnp
shlb
insl
add
nop
inc
pop
dec
loop
loopne
aas
mov
clc
inc
xor
rcrb
or
inc
das
sbbl
jne
dec
inc
mov
movb
jmp
inc
pop
xlat
cmpsb
mov
and
fimuls
sub
popf
cltd
jae
xchg
inc
ljmp
push
pop
mov
adc
fldenv
sahf
mov
jg
jno
add
data16
or
push
sahf
inc
mov
shlb
outsl
mov
in
in
ljmp
scas
js
add
xchg
movsb
repnz
xor
push
jae
aad
lret
fnstenv
cmp
add
mov
pop
inc
adc
ss
scas
mov
adc
push
cli
stos
dec
dec
or
enter
mov
fisttps
jp
test
jg
cmp
push
and
cmp
mov
mov
std
and
dec
and
or
insl
add
sbb
mov
lea
fimuls
outsl
sub
pushf
jns
mov
fsubr
rcll
lock
sbb
adcb
jns,pn
mov
fprem1
or
jecxz
mov
bound
xchg
mov
mov
mov
lret
adc
leave
je
lcall
movsb
jge
pop
push
dec
xchg
pop
fnsave
shrb
rcll
sbb
daa
cmc
jecxz
push
jecxz
add
out
loope
icebp
jp
cld
mov
loop
mov
adc
sahf
xlat
js
in
xchg
addr16
add
cwtl
mov
gs
push
xchg
shll
into
push
push
xchg
inc
pop
repz
cltd
inc
test
pop
ret
jmp
pop
inc
jmp
filds
bound
fmull
sahf
xchg
pop
outsl
test
pop
cmp
and
xor
lock
and
jmp
loope
sub
outsb
out
test
adc
lret
sub
fstpt
sahf
stc
mov
jb
sbb
idivb
outsb
pop
add
lea
outsb
loope
ret
sbb
pop
unpcklps
lods
pop
add
rorl
in
js
sbb
inc
nop
sbb
adc
pop
leave
daa
add
movsl
adc
rorb
les
sbb
insl
jmp
test
xor
mov
push
rcll
movsb
inc
push
orps
add
push
pop
mov
mov
adc
cmp
pop
fnstsw
and
mov
xor
jnp
sbb
xchg
fadds
jmp
loope
push
lcall
stos
popa
cld
jl
jmp
push
or
pop
sub
push
sarb
inc
push
in
mov
jmp
xor
and
inc
or
sub
ja
das
inc
icebp
pop
out
and
aam
push
inc
sub
das
add
mov
push
or
jg
sbb
push
lret
mov
rcr
stos
dec
and
or
or
popf
stos
push
and
test
cmp
inc
xchg
loopne
dec
les
js
stos
mov
dec
pusha
jo
mov
call
xchg
add
adc
pop
test
add
iret
je
mul
or
mov
add
pop
sub
in
jmp
add
adc
jmp
adc
mov
mov
faddl
movsl
ret
adc
mov
outsb
movsl
jnp
pop
xchg
loope
cld
cs
sbb
mov
and
mov
dec
adc
lcall
pop
popa
rcr
ds
test
jns
mov
mov
and
or
lret
pop
mov
xchg
and
adc
daa
iret
imul
or
rorb
fstps
xchg
xchg
and
insl
sub
mov
mov
dec
push
sarb
outsl
adc
jnp
push
js
xlat
inc
mov
enter
shrb
mov
xor
icebp
mov
iret
push
iret
push
hlt
push
xchg
popf
arpl
icebp
mov
je
xlat
imul
loop
jp
popa
xlat
xchg
push
xchg
or
xor
xchg
icebp
mov
cltd
pop
into
shl
pushf
rcll
xchg
add
movsb
pushf
es
jg
andl
lea
push
vpcmpeqb
jo
pusha
or
stos
es
or
mov
lock
sbb
mov
and
out
insb
xor
sub
push
shlb
add
mov
or
jmp
xor
sub
mov
or
dec
pop
imul
test
pop
add
je
cmp
pushf
aaa
sbb
int3
push
mov
adc
jo
and
leave
out
sbb
movsl
mov
pushf
mov
adc
xchg
inc
sub
aam
cmp
enter
clc
jnp
out
out
inc
inc
push
mov
scas
mov
push
cwtl
mov
rolb
out
xchg
pusha
mov
roll
xchg
push
mov
popa
jle
mov
pop
xchg
bound
cld
add
mov
in
lret
int3
inc
xor
movsl
ja
dec
jnp
push
arpl
mov
add
out
add
sbb
pop
cmc
pop
mov
jp
mov
pop
insb
mov
mov
fiadds
mov
add
int3
pop
aas
pusha
pop
rorl
xchg
cltd
add
xchg
xchg
rcr
inc
lcall
ds
xlat
and
jnp
dec
in
xchg
or
cli
loopne
lods
mov
subb
inc
sub
lret
jno
mov
xor
sub
cmp
or
mov
xchg
into
pop
scas
aaa
cmp
mov
lahf
or
mov
out
insb
out
out
and
mov
sbb
jno
pop
mov
mov
inc
and
psubq
cmp
add
call
jo
mov
adc
popa
pop
mov
loop
sub
cmp
subl
fidivs
aad
icebp
inc
icebp
mov
in
pop
sbb
and
das
sbb
jle
ret
mov
arpl
movsb
lret
addb
push
push
incb
nop
enter
jbe
xor
test
mov
cld
jg
stc
int3
dec
ret
mov
inc
sub
dec
pop
xlat
add
fwait
es
dec
sbb
dec
out
jecxz
mov
or
mov
mov
in
arpl
dec
test
add
push
mov
lret
lods
push
sub
lods
stc
mov
inc
fdivl
dec
xchg
lret
clc
test
jmp
pop
clc
dec
xor
inc
mov
add
mov
repz
and
or
dec
enter
cmp
adc
and
push
andb
loopne
enter
push
cmpsb
mov
hlt
xor
jle
adc
pop
subl
mov
sub
jmp
movsb
push
mov
inc
cmpb
scas
cmpsl
add
cmp
clc
sahf
mov
add
fbstp
daa
adc
mov
adc
fisubl
lods
lahf
fwait
pop
inc
stos
sbb
mov
dec
fstl
int
mov
or
aad
jo
inc
push
dec
push
pop
lods
sub
shlb
roll
pop
js
sub
and
ljmp
out
repnz
pushf
xchg
push
mov
xor
inc
add
lcall
jae
and
mov
adcl
leave
aam
sbb
int
bound
xchg
adc
adcl
mov
fdivrs
loope
jo
xlat
into
mov
rorl
sub
add
and
xor
mov
neg
mov
dec
dec
push
movsb
and
pop
and
xchg
jge
js
bound
adc
bound
push
and
mov
mov
xchg
repnz
shlb
and
bound
adc
bound
push
and
mov
mov
xchg
repnz
shlb
and
bound
adc
bound
push
and
mov
mov
xchg
repz
shlb
and
bound
adc
loop
shlb
or
loop
in
or
xor
xchg
pop
ret
sarl
push
ds
xor
add
adc
pusha
mov
push
scas
push
mov
subb
loope
icebp
xchg
shrl
dec
and
xor
pusha
out
adc
popa
loope
sahf
inc
out
push
mov
add
icebp
and
rcl
and
xor
add
sbb
popa
fidivrl
mov
int
shrl
cmp
xchg
cmp
loop
mov
sub
mov
push
jmp
loopne
lds
hlt
xor
ret
loop
outsb
movsb
jl
jmp
mov
pushf
out
pushf
mov
scas
test
pop
mov
in
jnp
dec
mov
push
arpl
jae
scas
mov
ret
scas
data16
loope
fnsave
aad
shll
testl
push
inc
pop
in
pop
pop
dec
mov
cmp
stc
pop
shll
ds
popf
inc
into
push
sub
xor
sbb
pop
mov
inc
add
popf
cmp
ret
out
je
pushf
out
jno
inc
scas
push
cmp
dec
mov
sub
icebp
push
shl
mov
add
adc
inc
scas
push
rcl
sbb
pop
in
sub
xchg
jno
inc
mov
dec
mov
xchg
adc
out
and
pop
cmc
psubusw
popa
xchg
sub
jae
pop
mov
je
sub
add
adc
dec
aad
sbb
sbb
shrl
ds
xor
add
adc
popa
mov
inc
scas
push
mov
subl
push
shrl
ds
xor
add
adc
popa
mov
inc
scas
push
mov
or
ret
push
xchg
xchg
cli
cmp
ss
push
push
pusha
in
mov
cmc
add
outsl
xchg
loopne
mov
ljmp
jne
sub
pop
adc
lea
movsl
add
jp
inc
and
mov
sbb
test
jae
into
andb
popf
enter
mov
pop
cmp
loopne
add
out
mov
int3
repz
test
stc
dec
lcall
iret
es
scas
aas
push
mov
push
xchg
rcll
add
mov
add
fsubrl
popf
pop
ds
mov
fdivr
sub
shlb
shl
jge
xchg
in
nop
or
xchg
icebp
lods
xchg
or
ds
dec
xor
sbb
in
cmp
rcrl
cmpsb
inc
mov
adc
push
lcall
push
dec
popl
incl
xchg
std
sbb
push
cmp
cld
addr16
xchg
cmp
out
rcll
cli
cmc
xchg
pushf
loope
call
push
sub
sub
push
pop
pop
jl
sub
mov
loop
sbb
mov
js
movsb
mov
ficompl
mov
ljmp
mov
push
adc
jmp
lahf
leave
lret
add
mov
or
push
lock
jae
loopne
cmpsl
and
into
push
stos
loop
imul
jnp
into
aam
mov
hlt
pushf
icebp
insl
cmpsl
daa
inc
jb
xchg
add
mov
fcomps
and
xlat
add
pop
mov
aam
push
icebp
out
div
sub
mov
and
add
mov
push
mov
dec
or
push
push
das
cmp
mov
dec
jg
sub
clc
jnp
fisubl
pop
mov
xchg
test
repz
xor
clc
ds
pop
je
dec
mov
loopne
orb
sub
int
rcll
popa
sbbl
sarl
mov
out
scas
pop
mov
outsb
jbe
div
mov
cmc
sub
cmp
cli
stos
inc
mov
jmp
shl
adc
loope
pusha
dec
dec
jae
dec
jnp
imul
fcompl
testb
aam
jo
mov
test
movsl
inc
mov
and
push
inc
cmpsl
in
xchg
pop
mov
cmp
nop
jp
fcompl
push
jmp
sub
sti
fucomi
pop
dec
mov
lea
das
jle
int
and
pusha
lock
xor
inc
cmp
outsl
sub
xchg
xchg
out
xor
push
test
scas
xor
mov
cmp
cmpb
mov
icebp
gs
cmp
dec
push
incb
in
xor
inc
movsb
and
lods
cmpsl
test
sbb
addr16
andl
loop
inc
xor
lods
dec
in
push
dec
fisttpl
jbe
push
inc
jl
lret
fwait
jns
ss
stos
lods
dec
repnz
or
into
dec
ret
jbe
adc
insl
pushf
insb
pop
repz
leave
mov
aad
add
inc
int3
mov
inc
test
xchg
push
mov
test
cmp
repz
out
jmp
arpl
xor
cmc
add
call
sbb
cmp
xchg
adc
jp
adc
out
ja
xacquire
add
lea
int3
mov
pop
xchg
lods
fidivrs
xchg
jmp
fiadds
mov
jne
xchg
cmp
inc
sahf
xchg
leave
push
insb
test
shlb
mov
mov
push
enter
lcall
inc
cmpb
xchg
push
movsl
pushf
sbbb
xor
aam
shlb
jb
sbb
push
mov
inc
movb
fsubrs
js
ja
cmpsl
jge
fcomps
popa
loope
lret
xchg
negl
out
push
cmp
push
cwtl
jecxz
cmp
arpl
pop
add
inc
cli
and
xchg
xor
lods
mov
jl
lods
push
jl
pop
ret
fists
into
scas
out
stos
mov
sbb
sbb
mov
mov
push
insb
pop
dec
aad
stos
fsubs
jle
sti
push
dec
fld
fwait
inc
sbb
fildl
cli
dec
xchg
stos
pop
xor
mov
cs
out
mov
ret
scas
or
pop
in
fs
ja
ss
popl
cs
inc
add
xchg
out
add
or
lods
push
repz
iret
sub
xchg
mov
popf
pop
sub
mov
inc
jne
and
mov
clc
stc
cmp
jmp
dec
xchg
pop
call
cld
shrb
cs
push
sbb
jmp
inc
xchg
jo
jmp
xor
mov
push
movsl
adc
sub
test
fisttpl
faddl
sbb
pop
fdivl
je
inc
movsb
ret
test
sub
inc
int3
shrl
cmp
mov
push
cwtl
lock
cmpsb
push
call
mov
push
pop
cmp
or
mov
pop
mov
jo
ja
pushf
and
rolb
cmp
cmp
push
mov
cmpsb
andb
mov
bnd
ja
add
stos
pusha
mov
mov
fisttps
cmp
ss
push
dec
jecxz
jns
mov
xchg
cwtl
add
pop
bound
push
or
ja
into
xor
insl
lcall
btr
aad
mov
sbb
lds
shll
stos
enter
mov
or
mov
xor
ret
add
dec
dec
adc
adc
or
jmp
aad
js
push
leave
jne
and
inc
or
ror
aad
icebp
sub
lret
inc
clc
pop
pop
outsb
cmc
push
in
iret
xchg
lea
test
push
pop
inc
cmovne
push
and
mov
movsb
iret
xchg
jo
jl
cmpsl
dec
test
fistpll
clc
inc
addr16
lahf
mov
dec
sarl
inc
inc
mov
xor
rclb
daa
in
fimuls
dec
cmp
push
xchg
stos
xchg
xor
push
push
aam
hlt
int
adcl
not
add
popf
icebp
inc
xchg
mov
and
fs
push
pop
fidivl
xor
lahf
fwait
aam
ffree
xchg
sbb
aaa
cs
dec
enter
jnp
adc
cmpsl
inc
les
adc
mov
xor
mov
cwtl
insl
les
push
pop
icebp
jge
push
in
movsl
daa
mov
dec
mov
popa
mov
push
inc
dec
sub
pop
arpl
lock
idivb
xchg
lcall
pop
inc
mov
xchg
ret
and
frstor
sar
addr16
xchg
or
push
inc
cld
lret
push
imul
xorb
cmpsl
mov
fnstcw
gs
sub
mov
mov
jle
cli
and
cli
inc
and
stos
pop
jno
fwait
in
sub
xor
jnp
cmp
jne
cmp
mov
pop
mov
mov
add
sbb
aad
inc
insl
jmp
push
shr
cmp
push
test
push
outsb
cmpsl
or
or
je
in
jg
sbb
cli
push
and
rol
aam
dec
xchg
jae
mov
pushf
add
pop
shlb
ret
dec
and
jge
outsb
mov
out
mov
add
jge
test
inc
xchg
inc
rcl
pushf
out
xchg
jns
loop
or
push
imul
daa
mov
sub
dec
push
lds
ret
cli
push
sti
stc
mov
jl
pop
adc
arpl
sbb
add
xchg
xor
adc
testl
divl
push
sarb
or
jbe
or
mov
mov
lcall
mov
lret
lods
sub
lcall
js
adc
addb
dec
pop
cmp
inc
ret
fbld
jp
outsb
add
mov
sbb
and
es
inc
repnz
loopne
jb
add
mov
adc
jne
cmpl
jo
enter
clc
mov
mov
adc
mov
jbe
outsl
sbb
loopne
inc
ffree
pop
leave
rep
sbb
pop
andl
push
in
mov
jbe
cmp
and
shrl
xchg
movzbl
xchg
inc
fists
cmp
call
sbb
les
hlt
dec
insb
aam
loopne
repnz
pop
and
sub
dec
outsl
jl
in
jle
ss
lcall
or
loope
mov
pop
xlat
std
and
ja
push
xchg
sbb
cs
aaa
adc
xchg
mov
mov
mov
add
dec
dec
and
xchg
pop
push
cmp
xor
daa
jle
mov
sbb
dec
dec
mov
jae
lods
mov
stos
xchg
xor
adc
mov
xor
xchg
aad
js
daa
popa
jle
sbb
dec
fnstsw
xor
cmp
or
mov
je
xchg
ja
xlat
jmp
into
movsl
sbb
orl
mov
mov
fisubrs
jo
sub
in
pop
aaa
cmpsl
pop
cmovge
rcrb
mov
insb
inc
lods
movsb
in
cs
mul
inc
adc
sub
das
test
mov
push
shlb
sub
or
add
int3
imul
xlat
cmp
pop
insb
xchg
inc
pop
fbld
xor
adc
jnp
dec
shlb
xchg
stos
lahf
ja
jle
outsl
out
imul
insb
arpl
cmp
hlt
out
push
ret
sub
push
or
push
xlat
and
loope
mov
mov
call
movsb
mov
dec
mov
xor
ljmp
cmpsb
mov
int3
xchg
push
inc
bound
fs
push
sbb
aas
add
test
test
or
xor
dec
test
sbb
aas
sbb
imul
imul
int3
pusha
sub
mov
mov
imul
inc
push
add
mov
mov
iret
iret
fwait
jg
in
jno
fs
inc
xchg
imul
shll
fwait
mov
shll
movsb
data16
nop
flds
dec
test
outsb
icebp
test
inc
fisttpll
fidivrs
jg
scas
dec
push
dec
insl
clc
sub
add
mov
mov
adc
xlat
push
sbb
pop
jne
movsb
pop
inc
outsb
dec
mov
pop
cmp
adc
daa
sub
in
jmp
xor
xchg
push
sahf
fdivrs
inc
mov
cmp
dec
aad
rcll
insb
fidivl
mov
or
loope
cmc
xor
add
ret
jns
jae
scas
loopne
inc
cli
cwtl
iret
sbbw
lods
mov
and
jno
jne
jb
cs
aam
sbb
pop
jmp
xchg
repz
movsl
popa
jb
adc
sahf
mov
ret
and
jg
lea
cltd
shl
insb
rcll
test
adc
cmp
mov
inc
add
dec
cmp
les
aad
sbb
setnp
xor
test
ret
int
dec
call
push
loop
jmp
cmp
dec
jp
xchg
cltd
arpl
neg
lock
push
pop
sbb
clc
and
jg
fbstp
outsl
popa
push
mov
adc
or
mov
das
repnz
xlat
daa
sub
in
orl
sbb
xlat
mov
inc
daa
shr
in
inc
fistpll
outsl
pusha
cmp
pop
bound
pushw
js
xor
sarl
int3
sbb
inc
jp
push
insb
scas
in
pop
subl
xchg
sbb
xor
and
stc
fsubl
inc
mov
decb
cmp
arpl
aaa
jle
les
out
mov
stos
icebp
hlt
ss
mov
aad
mov
or
int
into
in
push
aas
popf
push
adc
jle
xchg
not
loopne,pt
xor
scas
inc
fistl
cmpsl
loop
pushf
cmc
and
fwait
sbb
loopne
sti
push
outsb
test
push
jns
sub
inc
je
loopne
mov
sub
scas
arpl
cmp
enter
and
lcall
fs
pop
lahf
cmpsl
push
mov
sbb
sbb
call
testl
jge
mov
jne
insb
outsb
rcrl
in
mov
push
inc
xchg
adc
dec
cmp
enter
fcompl
das
mov
mov
pop
and
xor
cltd
movsb
arpl
cltd
add
in
xchg
out
lock
push
mov
stos
in
idiv
es
inc
test
ja
test
popa
cltd
and
and
leave
push
inc
les
pop
ret
cli
mov
in
and
shlb
inc
add
and
int
stos
push
lods
cld
cwtl
imul
adc
rolb
stos
and
je
test
add
xchg
jecxz
cs
fucomi
ljmp
punpckhwd
stc
dec
pop
xor
adc
out
inc
pop
je,pt
or
sub
popa
add
rcll
out
adc
test
inc
bnd
sub
cwtl
int3
xchg
mov
das
fadds
sub
std
out
stos
in
ja
sub
or
jp
sbb
mov
call
incl
xchg
imul
shr
subb
std
push
mov
xor
scas
iret
stos
mov
push
in
mov
push
mov
pop
fcomps
sar
inc
add
das
pop
out
lret
xchg
cli
aad
mov
outsl
inc
clc
aad
movsb
mov
push
cld
add
inc
jo
sbbl
jnp
pop
pop
shll
jo
and
shl
xchg
dec
mov
xchg
arpl
mov
jae
or
cmp
sub
sahf
pusha
jo
xor
or
fdiv
jne
sbb
shr
adc
cmpsb
scas
cltd
repnz
mov
pop
scas
xor
mov
xchg
or
sarb
es
cmp
jl
test
or
mov
imul
mov
xlat
push
data16
push
adc
and
or
inc
lods
add
jno
imull
push
mov
mov
pop
cltd
mov
or
push
fidivrs
dec
or
cmpsl
jl
pop
lret
push
mov
xchg
jmp
adc
in
pop
mov
movsb
jge
mov
sub
outsb
ljmp
xchg
popf
pop
push
jmp
adc
fucom
mov
movsb
sub
xchg
fwait
xor
loopne
in
vshufpd
in
pop
in
adc
pop
ret
arpl
mov
xor
push
test
test
pushf
cmp
shll
push
sbb
fistl
loope
sub
jae
shrl
xor
sbb
sbb
jle
into
loope
insb
mov
leave
test
das
stc
and
xchg
test
in
mov
mov
dec
or
adc
mov
nop
std
mov
add
xor
mov
mov
pop
fimuls
aaa
push
rol
call
dec
testl
fisttpll
pushf
jge
btc
addb
iret
outsb
ja
mov
dec
mov
xor
pop
adc
pcmpeqb
lock
push
ds
bswap
jle
fucomi
mov
pop
jo
imul
mov
call
popa
inc
test
adc
out
call
in
sbb
mov
mov
nop
ret
js
push
jbe
add
jl
mov
rcrl
es
add
jbe
add
mov
xchg
mov
jecxz
popa
shlb
movsl
dec
test
mov
pop
cwtl
mov
test
pop
in
adc
and
imull
xor
adcl
sbb
shll
outsb
popf
push
out
ficoms
mov
add
jb
incl
mov
dec
dec
xor
pop
mov
push
inc
clc
daa
and
jns
xchg
add
orl
sub
push
pushf
or
add
xchg
cmc
aam
xorl
adc
js
dec
stos
aaa
push
inc
cwtl
testb
mov
xor
mov
dec
add
das
mov
std
pushf
fwait
imul
enter
and
dec
mov
fucomip
icebp
jecxz
js
out
fsubl
or
lods
data16
fs
es
in
ror
jae
xor
f2xm1
jp
mov
inc
sub
adc
or
mov
pop
into
push
bound
cld
aas
imul
fstp
arpl
scas
cvtpi2ps
pop
push
mov
cmp
sub
vunpckhpd
pop
sub
addr16
das
pop
pop
je
xor
mov
mov
fmul
cltd
fists
rol
shlb
roll
push
mov
inc
or
jmp
push
addl
xorl
enter
dec
mov
nop
cmpsb
data16
or
pushf
loopne
mov
sbb
rcl
or
lret
mov
sub
jb
inc
sub
fmul
xchg
xlat
fidivrs
lods
add
push
cld
lock
pop
shll
outsl
dec
xchg
sbb
xlat
cmpsb
stos
daa
fnstenv
and
sti
add
mov
jp
xor
out
xchg
xor
std
xor
lcall
cmp
shl
insl
pop
xor
lock
scas
push
nop
popa
mov
push
cmp
out
and
sbb
repz
loope
add
xchg
icebp
pop
cs
push
imul
data16
pop
rorl
or
push
and
dec
les
insb
xchg
icebp
pop
jb
jmp
adc
and
sbb
cmp
out
cli
addl
out
xchg
nop
lock
push
arpl
inc
lcall
in
lea
and
jbe
sub
in
imul
sbb
mov
incl
enter
addr16
jge
xchg
sub
add
sbb
subl
int3
cmp
pop
test
leave
sub
adc
sub
jl
nop
push
je
jle
out
into
inc
push
sti
or
fisubs
push
rcrl
jns
ljmp
jb
inc
jbe
loopne
out
cli
into
mov
xor
arpl
sbb
push
lahf
inc
pop
push
mov
test
cmp
jg
push
jns
fadds
enter
inc
sbb
push
aaa
push
mov
jmp
jno
sbb
cmpb
std
jno
or
adc
scas
popf
push
sub
dec
xchg
mov
jb
decl
push
aam
lret
sub
jo
push
inc
int3
sub
ret
std
xchg
cmp
stos
xor
and
jle
cs
mov
decl
add
imul
insl
addr16
xor
hlt
cli
jmp
pop
enter
add
adc
inc
push
orl
xor
add
jmp
fistl
add
setl
dec
cli
pop
aas
mov
or
jge
and
jb
pop
or
jne
xchg
test
inc
xchg
arpl
pop
xchg
notl
scas
test
cmp
push
mov
mov
shll
or
jo
sub
adc
rcrl
cli
sti
divb
in
adc
mov
dec
imul
ja
mov
and
ljmp
jg
xor
ret
idivl
dec
jle
leave
cbtw
lcall
xor
mov
jae
and
jno
fstps
adc
mov
pop
sahf
inc
and
movsl
add
imul
pop
dec
sub
ds
adc
dec
xorl
cli
aas
into
pushf
xchg
jno
loop
jne
mov
movsb
push
cltd
jl
mov
push
mov
je
in
add
sbb
fwait
outsb
test
lock
mov
jmp
pop
ljmp
xor
xchg
loopne
aam
push
shll
jmp
ret
push
mov
push
cmp
mov
mov
popf
aam
lahf
xor
dec
test
mov
jle
fldcw
inc
je
scas
into
push
pop
cld
ljmp
addr16
jno
mov
mov
or
ret
xorb
inc
ret
push
arpl
iret
out
popa
cvtps2pi
xchg
push
jno
cltd
dec
and
pop
iret
out
or
aaa
jno
fistps
push
fistpl
mov
in
icebp
add
push
pop
fwait
je
icebp
adc
push
inc
ds
ja
ret
cmpsb
dec
loop
or
aas
call
sub
mov
test
ret
xchg
ljmp
bound
mov
les
jno
pop
scas
adc
cmpsb
out
cmp
inc
push
push
lret
pop
xchg
aam
and
roll
pop
xor
sbbl
xchg
subl
fwait
fmull
jmp
cld
ds
jnp
scas
stos
inc
movsb
movsl
xchg
stos
mov
scas
push
pop
js
or
mov
loope
mov
jl
nop
cmp
out
bound
test
pushf
add
icebp
mov
jno
lea
cld
add
xchg
xchg
shlb
xor
dec
and
bound
push
inc
pop
lea
xchg
jle
push
icebp
push
shrl
ds
xor
add
adc
popa
mov
inc
scas
push
mov
subl
push
shrl
ds
xor
add
adc
popa
mov
inc
scas
push
mov
adcl
icebp
mov
sarl
and
xor
add
adc
popa
mov
inc
mov
mov
outsb
xchg
jg
push
icebp
push
shrl
je
out
adc
mov
movsl
xchg
mov
test
aad
stos
pushf
aad
fwait
adc
and
adc
jae
xchg
movsl
xchg
mov
test
cmc
jecxz
repz
and
icebp
adc
arpl
push
lcall
xchg
lret
add
inc
jnp
and
sub
and
and
jmp
lret
pop
das
sbb
or
clc
cmpsb
jmp
ljmp
add
jl
andl
sbb
cmp
xor
ds
jne
cs
std
incb
mov
jne
push
jno
lea
jmp
add
int3
ljmp
mov
push
sub
ret
out
cmc
or
repz
and
outsl
nop
jne
xchg
and
lcall
jp
cwtl
xchg
outsb
adc
repz
jecxz
or
in
and
cli
xor
out
sub
xchg
mov
jle
pop
jle
dec
fcomps
in
xor
jo
ljmp
jae
inc
movsl
xchg
mov
test
jecxz
ljmp
add
dec
jne
inc
push
lock
test
xlat
aam
mov
sahf
mov
push
push
pop
gs
adc
xor
aaa
push
xor
int
divb
xchg
mov
add
inc
bound
add
jecxz
and
ljmp
in
mov
add
xor
arpl
push
andl
xchg
ret
in
cmc
jecxz
repz
and
xor
arpl
push
andl
push
in
adc
jbe
xchg
stos
xor
ja
ret
jecxz
outsb
fisubrs
inc
cmc
inc
cld
mov
sbb
mov
jb
ss
mov
testb
movsl
nopl
ficoms
jge
mov
into
std
test
sbb
sahf
xchg
aaa
xchg
xchg
inc
movsb
mov
add
pop
mov
push
lock
int3
xor
and
mov
cmp
jnp
pop
ret
jmp
adc
inc
fdivrp
jg
add
gs
jne
lahf
test
gs
jge
out
inc
dec
or
and
mov
into
ljmp
arpl
or
dec
mov
jmp
lret
push
leave
dec
mov
push
jns
test
adc
adc
in
dec
test
sbb
inc
mov
jl
mov
out
dec
xchg
and
out
lock
adc
cs
lahf
pop
sub
mov
xor
lret
je
pop
or
mov
push
scas
dec
jo
pusha
test
mov
push
xchg
fdivr
cmpl
mov
xorl
add
and
outsb
cmpl
mov
hlt
bound
aam
jp
xor
pop
adc
inc
cmc
or
sbb
sub
into
sti
testl
mov
pop
shr
pop
fwait
pop
pushf
mov
je
cmp
mov
in
lea
cmp
mov
or
push
movsl
sub
pushl
and
push
cmpsl
fwait
jmp
arpl
cmc
dec
fucomip
add
lahf
push
push
mov
cmp
outsb
lret
inc
inc
sub
fs
clc
xchg
jge
fsubl
je
pop
push
sub
add
push
int3
dec
cwtl
sbb
mull
pop
scas
stos
sbb
xchg
cmpsb
std
jmp
es
mov
mov
in
in
jne
jg
call
inc
mov
sarb
int3
xor
insb
fsubs
ds
test
dec
leave
push
cld
out
sbb
adc
jno
jo
lcall
jnp
sub
aas
dec
dec
xchg
sub
mov
adc
lock
dec
lea
cmp
outsl
arpl
lret
and
scas
lods
dec
sub
push
imul
scas
fdivr
inc
rclb
add
push
pop
cmc
mov
call
lahf
daa
jl
mov
inc
xchg
pushf
mov
push
fs
add
add
into
je
inc
dec
mov
jae
add
pop
in
jo
pop
and
mov
pop
push
xchg
movsl
sbb
mov
xchg
jg
pop
sbb
cmp
imul
or
push
cmpsl
dec
pop
in
sub
mov
inc
movsl
xor
xchg
jmp
jnp
bnd
pop
ss
add
lock
add
adc
push
and
and
mov
push
iret
mov
punpckhdq
rcl
les
imul
mov
daa
fs
fmull
mov
or
cmp
outsb
test
bound
fwait
mov
in
mov
cltd
insb
out
stos
mov
xchg
add
nop
add
and
push
test
stc
mov
pop
cmpb
mov
insl
cmp
xchg
imul
sti
sbb
cld
push
mov
dec
xchg
fcoms
lea
dec
dec
fsubr
loope
cmp
mov
sbb
mov
cmp
cli
and
lcall
jb
xchg
in
xchg
lods
into
cmp
dec
add
int3
cmp
repnz
sub
stos
ds
dec
push
xchg
adc
loop
loope
or
cwtl
lret
pop
incl
iret
pop
out
pop
loop
jne
cmpsb
push
fmuls
push
out
sbb
xor
pop
test
lret
stos
movsl
cmp
xlat
mov
inc
push
out
adc
pop
cwtl
jb
push
adc
arpl
pop
into
iret
cmc
sub
push
ja
push
or
insb
loop
mov
cwtl
jl
sbb
cli
subl
aaa
fcmovbe
imul
jecxz
and
or
cmpsl
cmpsl
call
loope
inc
pop
pop
dec
mov
rclb
fldl
adc
js
pop
jmp
loopne,pn
rol
test
or
cmp
icebp
mov
jae
mov
dec
pushf
mov
add
xchg
frstor
or
sub
lock
dec
rcrl
sub
arpl
aad
xor
jl
xchg
mov
lea
bound
das
stc
fidivs
fwait
rep
aad
add
mov
or
inc
and
xchg
cmp
sbb
jp
push
les
jmp
lods
mov
notb
cltd
in
jg
icebp
dec
jae
push
cld
or
nop
aad
mov
in
and
push
xor
xchg
push
sub
aas
repnz
inc
rclb
fisttps
cld
and
inc
jne
and
mov
loop
xchg
fildl
jl
adc
dec
pop
pop
adc
cltd
fidivrs
push
cmp
mov
in
arpl
leave
paddw
test
mov
repnz
out
call
dec
mov
rcll
or
in
icebp
icebp
cli
cwtl
xchg
adcb
dec
ret
xlat
cltd
int3
jne
pop
adc
ret
sbb
jg
cmp
gs
or
mov
xor
insl
movsb
jmp
andl
or
sub
das
ret
and
jnp
add
hlt
loopne
cmp
aad
mov
loop
movsl
repnz
xlat
movsl
fdiv
das
mov
addr16
test
js
and
scas
aas
mov
pop
dec
scas
mov
xor
int3
jae
pop
fwait
jg
dec
cmp
or
movsl
inc
adc
xor
addl
push
push
pop
and
pxor
jbe
pop
aad
add
add
cmp
cmp
pop
ljmp
and
imul
loopne
pop
ljmp
xchg
xor
cmp
je
adc
aam
mov
adcb
pushf
dec
inc
jne
js
lcall
dec
mov
iret
push
orb
int
popa
or
test
lock
data16
push
cmp
xorl
jge
sub
mov
and
lret
bound
ss
es
pop
dec
mov
lret
rcr
cmp
pop
cs
into
loopne
push
mov
add
imul
loopne
inc
pop
cmp
cmpb
mov
xchg
idivl
loop
aad
xor
insb
ret
flds
inc
scas
jno
xor
sub
xor
cwtl
xchg
xchg
fmuls
dec
jmp
popf
mov
in
and
repnz
pusha
adc
xchg
xchg
notl
dec
aas
push
xchg
mov
movsb
hlt
or
je
pop
pushf
cld
call
mov
mov
lds
and
add
xor
mov
cld
push
mov
fdivrl
mov
mov
dec
xchg
cmp
leave
pop
popa
fidivl
mov
or
mov
sti
add
pop
mov
mov
imul
xchg
or
loop
xchg
shrl
xchg
sub
idivl
cld
cs
pop
or
inc
imul
xchg
popf
inc
pop
jp
mov
xchg
push
outsl
push
pop
xor
mov
or
cmc
fisttps
cwtl
sarl
ljmp
shlb
push
cmp
or
iret
push
mov
andl
dec
sbb
mov
mov
int3
out
aad
std
int3
sub
addb
fnsave
add
sub
xchg
sahf
out
stc
loopne
jns
dec
outsb
in
xor
jno
stc
inc
imul
in
nop
imul
movsl
mov
sub
push
mov
mov
pop
rcr
dec
inc
pop
cmp
notl
adc
pop
mov
mov
inc
xorl
mov
dec
stos
cmp
push
cmp
mov
cmp
pusha
mov
xchg
outsb
stos
xor
mov
jae
mov
sub
fucomi
sub
dec
cmp
add
cld
repnz
push
ret
stos
sbb
pusha
mov
arpl
sub
or
mov
push
jbe
lahf
jp
test
xadd
xchg
dec
ja
hlt
mov
pop
sub
mov
test
mov
cld
mov
mov
cmpsb
imul
test
std
jae
and
cmp
sub
iret
movb
add
in
xor
pusha
bound
xchg
jns
sbb
ret
lds
jo
push
into
in
stos
and
fmuls
hlt
adc
and
sbb
mov
pop
shr
scas
jle
imul
cs
std
into
mov
lods
icebp
sub
cmp
inc
enter
push
in
jge
mov
inc
fisttpl
es
fstpl
mov
jne
test
pop
jo
cltd
mov
data16
dec
sbb
test
sbb
inc
xchg
mov
add
call
push
cmp
psrlw
stc
fimull
cltd
xchg
and
movsb
inc
test
xchg
aam
bound
adc
mov
push
stos
or
add
repz
ds
sahf
mull
mov
dec
scas
insb
mov
hlt
rol
rcrl
add
test
ljmp
cmp
cmp
ret
push
add
daa
xor
lea
push
lret
pop
mov
in
ss
and
pop
ud1
ficoml
sub
pop
in
js
sub
addr16
outsb
cmpsl
call
mov
mov
cmc
dec
fs
scas
clc
test
push
cs
dec
cmp
test
push
je
lods
dec
push
mov
add
or
mov
fildll
mov
adc
mov
jge
and
sti
movsb
sahf
dec
test
call
sub
adc
outsb
mov
out
mov
sbb
cmp
add
lods
data16
mov
gs
hlt
push
scas
fldcw
xor
mov
rcrl
mov
outsl
daa
push
xchg
pop
subl
xor
int
sti
enter
pop
ret
xchg
xchg
sbb
adc
int
test
icebp
pop
fidivrl
int
scas
and
repz
dec
stos
adc
stos
lods
or
dec
pop
mov
sbb
subb
add
rcrl
int3
or
std
in
or
adc
mov
and
xchg
dec
neg
or
adc
or
cli
flds
ljmp
test
sub
jg
xchg
or
insl
sar
sbb
push
insb
scas
sub
stos
cltd
adc
mov
xlat
mov
mov
mov
xor
mov
and
xchg
xchg
call
jmp
pop
pop
out
stc
imul
xor
popa
push
addr16
shll
lock
xchg
mov
test
in
jo
cwtl
int
add
fdivl
mov
lahf
aam
lds
test
push
dec
gs
lods
cmp
cmc
stos
imul
gs
in
jle
fsub
in
std
int
cmp
mov
ret
sub
cmc
fsin
sbb
mov
call
push
add
adc
and
sub
or
lret
add
jnp
dec
sub
nop
test
and
hlt
sbb
fldl
cmp
hlt
jp
cmpsl
icebp
inc
cmp
push
pop
out
shrb
cmp
and
int3
dec
add
mov
sti
das
sahf
dec
dec
mov
ss
xchg
out
mov
mov
xchg
adc
inc
in
sub
xchg
popa
mov
and
cmp
or
adc
add
leave
out
leave
and
loope
daa
je
ficoml
idivb
sbb
xor
jne
movsl
and
jns
cs
data16
push
push
dec
xor
mov
and
pop
testb
lret
sub
fildll
fisubrl
or
sub
adc
sbb
adcl
mov
pop
add
movsl
lock
mov
ds
or
movsb
loope
shrb
imul
push
and
cmp
add
rclb
or
leave
mov
sub
inc
hlt
mov
lcall
sbb
lods
add
fwait
pusha
mov
cmp
xchg
and
in
pushf
ljmp
xchg
add
push
jae
dec
aad
sarl
es
lods
mov
dec
inc
stc
daa
xor
mov
lock
mov
lods
clc
jg
xchg
test
mov
movsl
dec
out
jmp
jg
mov
sub
pop
lods
mov
das
rcll
jb
jne
divb
movsl
or
sbb
aam
add
imul
test
clc
fisttpll
cs
xchg
mov
ljmp
test
daa
mulb
mov
inc
and
call
sub
mov
scas
push
push
pusha
ficomps
cmp
enter
xchg
testl
xlat
js
cmp
and
and
xchg
daa
or
mov
lea
cmpsl
xor
fistps
data16
cmpsl
push
int3
ret
mov
fcoms
xchg
mov
popf
shl
pushf
inc
mov
or
dec
cltd
cmp
in
sbb
cmp
shl
mov
ja
mov
mov
sub
pop
mov
hlt
cld
adc
push
ss
mov
ret
das
and
sahf
or
xchg
mov
enter
add
clc
or
cwtl
or
mov
inc
loope
out
cmpb
xor
pop
or
xlat
popf
je
icebp
or
movsb
mov
loopne
lods
loop
test
movsl
mov
shlb
repnz
fcmovu
shll
leave
pop
xchg
insl
insb
mov
fucompp
xor
inc
rcl
shll
aas
add
inc
mov
gs
inc
sub
mov
mov
xor
cmpsb
int3
push
pop
push
cmp
push
dec
test
dec
sbb
jle
mov
mov
xor
movsl
lods
out
mov
ret
add
ficoms
fucomip
and
cmp
scas
inc
roll
dec
jnp
test
clc
or
in
add
pop
addr16
out
add
call
imul
jecxz
or
sbb
xchg
pop
mov
and
and
and
sub
xchg
ret
pop
inc
and
xchg
adc
jmp
push
andl
cmp
sbb
cmp
dec
lods
sub
ds
fists
xorb
pop
test
cmc
nop
pop
xchg
add
pop
dec
dec
test
cmp
jg
sbb
ss
mov
outsl
bnd
dec
hlt
pushf
jns
pop
sub
xor
inc
shrb
out
icebp
jo
dec
xor
add
mov
daa
xchg
das
or
ja
icebp
imul
xor
into
jne
fldt
mov
jbe
fwait
or
shr
mov
cmpsl
test
subl
cmp
xor
cs
dec
cmpsb
rcll
enter
cmpsl
ds
jo
and
aaa
negl
shlb
pop
das
push
fstpl
sub
test
rorb
jbe
int
sahf
cli
cmp
pop
int3
inc
ljmp
mov
movsl
inc
dec
push
loop
in
aaa
movsl
fnstsw
pop
sub
aas
adc
inc
je
in
and
addl
iret
dec
hlt
push
sarb
and
stos
adc
push
lret
or
pop
jbe
inc
adc
or
jnp
jle
outsl
push
cmp
popf
inc
mov
push
addr16
nop
roll
popf
fldl
mov
push
jno
add
dec
and
xchg
push
mov
fisubl
xchg
push
pop
std
popf
dec
cs
outsb
pop
rorl
push
jno
mov
sahf
adc
notl
jle
mov
outsl
cs
push
push
fsubrs
sub
out
mov
xchg
and
sbb
sbb
sarl
mov
pop
enter
andb
cmpsl
sub
pop
xchg
xchg
lea
pop
jle
cmpsb
xor
cmpb
and
push
or
inc
loop
inc
sub
jmp
mov
rorb
jno
jge
jb
cmpsb
repnz
xor
mov
cmp
andl
cmp
cltd
in
sub
dec
enter
jmp
test
std
inc
js
fdivrl
push
outsb
testl
add
lds
xchg
data16
pop
adc
in
mov
dec
jne
js
jge
add
mov
sbb
cs
das
sti
sub
frstor
testl
dec
ret
push
adc
fprem
mov
imul
out
lock
xor
mov
lret
inc
mov
out
ja
add
mov
into
ret
outsb
dec
pop
add
sti
push
andb
add
les
dec
iret
idivl
icebp
mov
dec
fsub
in
jge
or
push
insb
push
push
repnz
rcr
stc
and
jp
and
or
add
rorl
in
xor
jmp
clc
andl
push
mov
insl
sub
jno
add
fisubl
inc
mov
fisubrl
adc
sbb
mov
xchg
push
pop
cmc
lds
test
add
ljmp
imul
push
call
aas
jns
adc
mov
inc
push
outsl
lcall
push
ljmp
mov
or
rcr
xor
add
lahf
out
cmp
orb
pop
mov
in
cli
rorl
push
xchg
mov
outsb
sbb
jo
push
mov
sbb
sbb
in
lcall
sahf
xlat
mov
adc
out
cmpsb
push
push
fistps
cli
xchg
jle
mov
mov
xchg
add
mov
fsub
adc
shrl
pop
stc
inc
ljmp
jns
rcrb
mov
shrb
sub
in
ret
lret
iret
mov
adc
xchg
stos
daa
ja
xor
xchg
cwtl
push
imul
and
xor
lock
and
inc
icebp
insl
sub
scas
sbb
clc
fidivl
stc
ret
jbe
js
adc
push
inc
mov
cmpsb
fdivs
lret
mov
cmp
outsb
sub
dec
pop
loope
jl
push
cmp
loopne
stos
push
xor
xor
clc
outsb
inc
jo
push
fbld
jmp
mov
xchg
outsb
rcll
ljmp
insb
je
mov
mov
rorb
fcmovne
lahf
mov
mov
dec
fnstsw
sti
addr16
in
scas
sbb
adc
push
sbb
cmp
mov
mov
jbe
mov
gs
xchg
fadd
mov
jb
and
out
inc
mov
pop
dec
bndstx
lods
sbb
jmp
insl
fists
cmovnp
fistpll
adc
shll
pushf
fwait
dec
movsl
xor
and
outsb
fwait
dec
cmp
ss
xchg
jae
cmp
icebp
sbb
mov
mov
xchg
and
fwait
loopne
insl
push
push
sub
mov
sbb
sbb
add
mov
rorl
mov
xchg
pop
std
cmpsb
enter
mov
aas
cmp
sbb
test
push
cwtl
mov
jge
sahf
mov
insl
scas
cmp
jle
ds
idivl
jle
sahf
or
jns
ret
inc
jnp
jge
sbbb
cmovle
mov
xchg
movsb
iret
enter
inc
sbb
test
outsb
icebp
sbb
pop
cmp
mov
lea
jge
cmp
out
insl
adc
cld
loope
scas
std
fwait
mov
out
fidivrl
shll
shlb
xchg
sbb
out
incl
inc
gs
int3
add
mov
jecxz
mov
cmpsb
jbe
push
sub
loopne
lods
mov
movsl
jmp
ret
inc
sahf
mov
xor
or
idiv
pop
inc
sbb
mov
sqrtps
xlat
ss
or
and
and
add
mov
pushw
sub
cmpsb
jnp
cmp
dec
call
out
adc
cs
loopne
shlb
aam
jp
lret
out
lock
jle
add
pop
je
inc
inc
lret
js
loop
inc
inc
imul
int
decl
lods
adc
xor
jb
pusha
xchg
arpl
adc
daa
mov
in
xchg
fwait
fs
add
aam
push
mov
xchg
xor
movsl
shll
into
dec
loopne
test
xor
cmp
pop
subl
insb
in
mov
adc
insb
sar
mov
pop
cmp
and
ret
jns
xchg
push
mov
ljmp
lcall
cltd
ja
addb
xor
cwtl
inc
fs
loopne
xchg
mov
test
cmc
jecxz
repz
and
xor
arpl
push
andl
xchg
ret
in
cmc
jecxz
repz
and
xor
arpl
push
andl
xchg
ret
in
cmc
jecxz
repz
and
xor
arpl
push
mov
cmpsl
mov
test
cmc
arpl
jae
cld
and
xor
in
fisttpl
inc
lahf
push
pusha
mov
pusha
mov
rcrb
pavgb
lock
sbbb
mov
lahf
push
pusha
mov
adc
and
xor
rcrb
outsl
xchg
aas
lock
sbbb
mov
lahf
push
pusha
mov
adc
and
xor
shlb
das
call
or
push
rclb
rolb
incb
adc
and
or
sub
stos
or
lock
lret
leave
in
setne
std
push
sub
sub
scas
ss
lock
jne,pt
jg
test
mov
dec
clc
ret
pop
push
add
pop
mov
mov
shlb
pop
sbb
add
jae
scas
add
add
fidivs
adc
shlb
jg
xor
mov
mov
cmp
mov
ljmp
lock
dec
xchg
mov
andb
daa
fsts
inc
fisttps
mov
cs
imul
push
lahf
push
pusha
mov
adc
and
xor
rcrb
pavgb
lock
sbbb
mov
lock
insb
mov
iret
inc
mov
mov
adcl
in
stc
cmp
jge
cs
lahf
and
inc
xchg
jl
and
sarb
pop
mov
in
les
sbb
fmull
xlat
jno
add
adc
and
xor
rcrb
pavgb
lock
sbbb
mov
lahf
push
pusha
mov
adc
and
xor
rcrb
pavgb
lock
sbbb
mov
lahf
cmc
fisttpl
mov
sub
cmpsb
mov
dec
popa
or
pushf
xchg
leave
cmp
sub
daa
loopne
mov
and
rcll
or
push
and
and
movsb
arpl
enter
dec
sub
mov
jnp
repz
pop
pushf
push
pop
mov
aam
orl
icebp
call
mov
out
lcall
in
push
ss
js
out
ficompl
push
or
mov
enter
mov
sbb
pushw
lret
xchg
mov
arpl
push
das
daa
clc
pop
jb
sbb
out
xchg
mov
xchg
fildll
ret
ret
jmp
and
nop
add
xor
call
mov
sbb
jno
push
cmp
jo
mov
fcomi
mov
sbb
outsl
inc
add
jl
mov
pop
or
mov
or
lods
fildll
dec
mov
lea
lea
inc
fnclex
movb
js
adc
jmp
mov
dec
push
xor
add
cmp
push
cld
lods
lds
pushf
cmp
cmc
fnstenv
lea
fs
aad
das
sub
leave
testl
aaa
repz
filds
fnstenv
je
jl
mov
pop
jae
cwtl
arpl
cmp
adc
jle
xchg
adc
int
mov
xor
outsb
dec
loop
icebp
push
xlat
fidivl
or
dec
cld
in
out
cmp
mov
jge
je
int3
rcll
fcomps
mov
ss
cmpsb
ss
fidivrl
xor
cli
lods
rorb
jl
loopne
pusha
lock
push
xor
andl
xor
shll
fnstenv
sti
shl
cli
lods
xchg
shll
dec
ss
popf
jbe
jno
pop
push
testb
push
mov
js
frstor
shll
push
fucomi
jp
push
imul
aaa
mov
or
insb
in
push
jl
ss
int
sub
sti
aaa
in
adc
sub
out
call
sub
in
leave
push
xchg
call
pop
out
cmpl
push
cmp
cmovp
and
call
add
enter
fs
mov
or
shr
cwtl
push
mov
inc
mov
sbb
xchg
shlb
mov
int
fiaddl
popa
add
js
xchg
jecxz
jmp
filds
cmp
jg
xlat
mov
adc
adc
cmp
cli
ret
popf
jge
jp
sbb
mov
sbb
cwtl
cmp
lea
movsb
mov
jbe
ja
add
out
or
outsb
pop
jae
sbb
jb
and
lock
enter
imul
test
mov
addr16
das
xchg
or
jne
xchg
xchg
je
cmp
mov
das
popf
mov
cmc
loope
and
sbb
mov
or
xchg
sahf
and
add
or
mov
int
dec
mov
push
loop
dec
sbb
add
dec
flds
insb
das
push
gs
leave
test
sti
in
fidivl
fucomi
or
outsb
icebp
popa
fwait
ret
xchg
insl
insl
adc
idivb
add
out
dec
push
cmp
inc
or
pop
cwtl
sbbb
add
dec
fs
shll
ljmp
inc
lock
mov
lret
inc
in
xchg
movsb
jecxz
and
pop
dec
mov
insb
repz
adc
js
cmp
jo
xchg
inc
inc
frstor
lea
push
in
leave
icebp
nop
mov
call
adc
xor
dec
insb
push
sub
mov
mov
cmp
data16
push
mov
jno
insb
lret
mov
add
rorl
jecxz
shl
sbb
mov
mov
test
out
mov
mov
sub
out
or
jle
data16
jne
cmp
mov
stos
jbe
lods
aas
push
aaa
mov
xchg
pop
add
sbb
bound
mov
jg
dec
mov
xchg
xor
cmp
inc
adc
push
sahf
add
cld
lds
jecxz
cmpsb
je
sub
mov
mov
inc
stos
mov
cld
lcall
inc
imul
xor
mov
xchg
and
pusha
xchg
xchg
bound
pop
sbb
cmpsb
sbb
leave
das
mov
sub
fdivrs
aaa
es
dec
lds
stos
in
mov
xor
mov
test
adc
pop
ljmp
dec
dec
inc
jle
in
addr16
test
gs
ret
inc
or
cld
pop
int
jle
jbe
pushf
in
pop
push
sbb
push
inc
mov
xchg
inc
mov
adc
xor
cmp
sub
xchg
in
loop
call
rorl
mov
dec
mov
xchg
rorb
xchg
out
mov
push
lea
mov
incl
add
sub
dec
fucom
sarb
aas
mov
hlt
imul
jo
push
div
sbb
stos
mov
and
xchg
mov
pop
push
xorl
rorb
repz
dec
mov
mov
inc
or
dec
lock
or
xchg
stos
xchg
mov
fcmovne
or
mov
mov
push
push
mov
inc
pop
mov
loop
mov
add
js
cmp
lods
orb
mov
rorb
push
dec
rorb
lahf
push
mov
fsubs
adc
outsl
call
inc
pop
jmp
imul
mov
dec
mov
movl
mov
int3
cld
sbb
cwtl
and
outsb
dec
jae
jne
cs
and
push
loopne
sbb
push
leave
imul
pop
dec
movsb
adc
or
mov
aad
pushf
repnz
fsts
pop
push
sti
call
inc
or
das
cmp
aas
push
adc
gs
xchg
jmp
inc
mov
pop
repz
push
stc
pop
dec
test
adc
iret
adc
or
aam
repnz
or
pop
es
stos
cltd
ret
mov
pop
mov
idivl
fidivs
bound
cld
add
jp
dec
sti
cmp
xorl
mov
adc
or
lret
cmpsb
lret
push
dec
pop
adc
jle
cmp
xor
jno
push
mov
fistpl
scas
in
subl
mov
sbb
fstl
add
mov
in
push
push
xchg
inc
jecxz
out
mov
jae
cmp
sarb
jge
pushf
pop
push
std
and
add
rorb
clc
lahf
idivl
dec
repz
adc
push
mov
push
xor
sub
inc
or
pushf
lahf
popf
cli
std
inc
mov
cwtl
in
jbe
lret
mov
push
pop
xor
test
loopne
in
loopne
xlat
icebp
cltd
int
mov
mov
lcall
repz
pusha
outsb
sahf
xchg
cmpsl
hlt
and
lods
popa
inc
aas
xor
inc
insb
loope
mov
dec
ljmp
repnz
inc
jle
lret
and
out
jecxz
mov
popf
in
jae
mov
push
push
sbb
shr
add
aam
sahf
rorb
rcll
in
imul
mov
out
push
popf
xor
call
andl
pop
fisubl
int3
sbbb
adc
jg
pop
mov
xchg
fcomp
loope
xor
dec
pusha
and
jb
lcall
daa
clts
xchg
sub
addr16
iret
inc
insb
movsl
std
fiaddl
out
call
add
cmp
xor
or
arpl
xchg
aas
xchg
mov
mov
sub
sub
jnp
sahf
mov
dec
rorb
adc
arpl
lock
cld
mov
push
xor
sub
jmp
xchg
movsb
push
js
imull
rcll
fcoms
mov
leave
mov
push
push
cld
add
add
adc
shrb
inc
sarb
dec
cltd
sub
cli
mov
inc
outsl
mov
mov
loop
out
fcoms
int
mov
jne
push
mov
rcrl
jmp
iret
push
popf
cmp
shlb
rcl
or
xchg
or
mov
dec
mov
push
pop
cwtl
and
imul
jl
leave
fcom
sti
sti
aad
pop
jbe
pop
mov
xchg
test
cmp
xchg
and
in
sahf
aam
xchg
mov
inc
loop
loopne
cmpsb
push
leave
xchg
daa
rclb
leave
push
xor
or
adc
pop
cmp
xchg
inc
xchg
shl
and
mov
xchg
xchg
mov
into
jmp
clc
jnp
sbbb
add
ja
ljmp
cmpsl
in
cltd
outsl
into
insb
xchg
ret
or
js
and
add
cs
std
fisttpl
data16
scas
push
cs
sub
inc
in
in
adc
pop
out
mov
and
test
cmp
loope
xchg
in
mov
inc
lret
scas
arpl
adc
or
jle
jge
cmp
inc
andl
mov
cmpsb
ret
int
inc
jb
lods
xchg
mov
xchg
clc
mov
and
or
sbb
es
pslld
and
sub
xlat
or
adc
in
xchg
leave
rolb
testb
jp
pop
mov
xchg
mov
jne
lds
adc
iret
or
pop
or
cmp
push
es
or
in
inc
shlb
mov
jbe
jo
push
das
mov
xchg
out
cwtl
sub
ljmp
andl
lock
ret
and
out
or
bound
call
xchg
and
nop
imul
sahf
repnz
js
sub
sub
mov
mov
adc
jbe
mov
mov
sahf
mov
xor
fbstp
dec
sbbb
adc
scas
add
and
lret
jp
push
roll
sarb
jmp
cmp
lret
cli
mov
dec
mov
and
fstl
sub
sarl
and
mov
popf
mov
inc
xchg
ljmp
popa
rolb
out
out
cwtl
aam
and
cwtl
or
mov
mov
ja
cmp
daa
push
inc
pop
inc
es
aad
cli
out
dec
inc
sub
int3
jo
test
jmp
cmc
icebp
mov
mull
lahf
hlt
inc
aad
push
or
ds
lret
inc
xor
fisubs
shll
push
adc
push
bnd
call
add
dec
mov
decl
ret
jb
add
ffreep
jo
rcl
pop
adcb
shlb
fadds
fiaddl
xchg
cwtl
add
and
test
push
mov
cmp
or
es
push
repnz
ret
push
lock
test
fbld
fnstcw
imul
repnz
cmp
mov
cmpsb
or
inc
sub
add
cmp
in
lea
loop
into
mov
pop
ret
cmp
inc
adc
in
inc
insb
or
ret
or
push
fdiv
loope
in
pcmpgtb
stos
rcr
data16
jge
cmp
cmpsb
or
cmp
dec
jl
xor
push
xchg
outsl
lods
in
out
je
jp
add
dec
mov
out
jmp
push
xor
je
or
add
das
rorl
cmp
fldt
imul
xchg
sub
push
add
mov
mov
xor
adc
fmul
stc
xor
fwait
das
jge
das
xchg
adc
sub
ss
stos
scas
dec
inc
mov
and
insb
sbb
dec
mov
or
sbb
mov
adc
lods
daa
add
inc
xchg
pop
push
jne
popl
and
xchg
xchg
push
mov
jnp
pop
push
lds
push
add
mov
xor
and
jecxz
ss
push
jne
mov
iret
dec
jb
xchg
mov
stc
lock
in
cmp
pop
mov
ljmp
daa
sbb
mov
dec
lahf
pop
test
pop
mov
inc
xchg
add
sbb
in
loopne
popa
sub
adc
xor
mov
cmp
in
in
ljmp
jl
rcr
xor
add
imul
fdivs
int3
popf
push
les
test
lahf
pop
adc
lock
dec
repnz
push
sbb
inc
fadds
jnp
pop
cmp
push
clc
xor
jnp
inc
inc
mov
pop
inc
rcrl
and
in
int3
xchg
push
fcmovbe
pop
dec
je
mov
stos
loopne
mov
inc
sub
aam
pop
adc
jb
insl
aam
sbb
jns
in
insb
data16
adc
xchg
inc
aam
fcmovnb
repz
int
addr16
pop
or
rcrl
xchg
inc
out
lods
mov
and
sub
idivb
fucomip
call
in
flds
test
add
jns
aas
enter
mov
stos
mov
fnstcw
scas
scas
lcall
inc
push
pop
fs
jg
data16
xchg
aam
adc
jno
pop
loope
jp
mov
lds
cmp
ret
popa
push
sbb
js
sbb
adc
mov
push
daa
cld
dec
js
pop
mov
jl
pop
jg
push
dec
sub
inc
cltd
xchg
sbb
inc
ja
mov
fdivl
inc
cmp
inc
adc
test
sub
into
movsl
pop
push
cs
or
ror
adc
int
add
mov
lock
in
adc
mov
and
adc
and
push
cmpsb
cmp
inc
mov
mov
pop
sbb
fwait
sub
push
add
pushf
scas
repz
or
insb
sbb
test
sub
arpl
xchg
aad
int3
mov
mov
shll
push
ljmp
pushf
mov
sub
outsl
cmpsb
scas
lds
std
mov
dec
cmp
shlb
decb
xlat
inc
roll
bound
mov
mov
dec
mov
jo
xor
sbb
dec
inc
lods
jbe
pusha
js
pusha
adc
outsl
repnz
test
cmp
or
add
add
sub
movsl
jno
mov
stc
ds
inc
mov
mov
cltd
popf
lods
jo,pn
sarb
push
pop
pushf
outsb
aas
and
test
adc
mov
cltd
fidivrl
inc
sub
test
stos
push
push
pop
pushf
cwtl
push
mov
stc
add
jp
xchg
pop
mov
cltd
lcall
jg
lcall
ret
jbe
fwait
lret
push
insl
sbb
jnp
pushf
in
pushl
into
or
mov
sbb
lods
pop
cli
add
fsubrs
xchg
rcl
fsubrs
mov
data16
inc
or
push
imul
mov
sbb
shll
jmp
lea
jle
pop
xchg
cli
addl
sbb
faddl
ret
cmp
inc
rorb
aam
push
ljmp
pop
sub
mov
cmpb
mov
sbbb
sbb
cld
fs
dec
out
sub
mov
cmp
fcom
mov
mov
in
adcl
or
adc
cmp
pop
cmp
xchg
sbb
js
cli
movsl
dec
push
int
mov
mov
dec
push
sbb
dec
in
orb
xor
inc
pop
sbb
pop
dec
and
cmp
sub
or
push
fcoms
push
in
scas
and
stos
mov
popa
outsl
jecxz
outsl
into
loop
or
cmp
cs
adc
mov
and
xlat
in
repz
adc
mov
lret
int3
jge
sbb
mov
cmp
in
mov
fistpll
inc
scas
lret
and
lret
shlb
inc
hlt
sub
jne
sub
ret
jnp
dec
jl
sbb
pushl
mov
fists
dec
hlt
push
or
inc
js
addl
mov
inc
add
pop
cmc
sbbb
pusha
jnp
xchg
jns
shlb
dec
fsts
jae
add
hlt
cmp
push
lahf
cwtl
aaa
daa
push
pusha
cld
dec
push
mov
fsubrp
test
mov
pop
dec
mov
out
lret
pop
repnz
sbb
ljmp
dec
sub
mov
test
push
lret
add
loope
rolb
imul
push
adc
imul
ret
pop
rclb
sub
lea
gs
jne
lods
pop
outsb
cmpsb
sub
xchg
ds
adc
mov
cmp
fwait
stos
push
cmp
inc
pushf
hlt
jle
lret
into
fwait
mov
loopne
imul
and
in
mov
imul
mov
ja
mov
cltd
sub
mov
rclb
pop
loopne
xchg
jge
loope
jae
fistps
add
les
add
add
scas
jo
pop
pop
cltd
pusha
jb
inc
pop
movsb
xchg
xor
iret
addl
sbb
xor
mov
dec
adc
xchg
jge
push
dec
cmp
mov
and
or
insb
imul
jecxz
mov
dec
lock
pusha
push
out
gs
js
inc
add
stos
ljmp
sti
ja
fs
sbb
jge
jns
xor
or
das
into
jecxz
adcl
inc
cwtl
push
jmp
sub
sub
mov
sbb
and
sbb
push
mov
fstpt
jmp
pop
mov
enter
or
test
std
hlt
and
outsl
call
js
sub
cs
mov
inc
fidivrl
test
add
mov
fiaddl
sti
dec
pop
push
sub
ds
dec
and
jb
cmp
pop
adc
sbb
pop
dec
add
std
shrl
xchg
sub
sub
ss
out
ret
jle
mov
stc
aam
lds
enter
dec
sub
mov
and
and
sub
mov
testl
and
xchg
int
or
dec
test
push
push
xchg
cmpsl
xchg
dec
insb
push
pop
adcl
rclb
into
xchg
add
stc
fcompl
mov
out
cmp
lahf
aad
sbb
ret
fs
call
icebp
sti
xlat
xor
and
xor
push
sbb
inc
gs
lret
add
scas
xor
mov
test
punpckhbw
xchg
aas
std
scas
std
push
jbe
inc
ret
inc
jl
xor
popf
mov
sbb
jmp
sbb
lods
mov
popf
push
inc
rcrl
sub
mulb
and
xor
clc
fisttpl
cltd
and
fcomps
std
lret
mov
test
sub
lahf
mov
inc
mov
aaa
push
inc
pop
outsb
rcl
or
int
and
push
push
scas
inc
dec
push
cmc
xor
cmp
outsl
call
js
mov
das
cli
mov
out
dec
nop
sub
jmp
xchg
mov
mov
adc
and
pop
sub
loopne
sub
call
lret
add
clc
imul
dec
cmp
xor
test
and
and
in
sbb
adc
mov
cmp
in
jnp
mov
mov
push
cmp
jle
sbbb
stos
not
and
dec
or
or
ljmp
into
jnp
aam
xchg
lea
pop
cmc
lods
cli
and
inc
cmp
xchg
mov
mov
fstp
push
out
ja
sti
sub
pop
pop
mov
aas
jecxz
scas
push
ds
xchg
rolb
pop
in
sti
aad
sub
outsl
inc
adc
add
or
or
lds
out
mov
mov
jb
ret
aas
push
or
push
out
adcb
jmp
jecxz
adc
popa
lret
mov
aad
and
cltd
xor
sub
pop
xor
mov
andb
mov
rorb
and
adc
aad
dec
movsb
sbbl
and
jno
add
pusha
imul
hlt
aad
fisttps
ss
jno
fcompl
addr16
cmpsb
pop
mov
mov
xor
aad
adc
mov
mov
loope
sti
and
movsb
sti
fwait
jecxz
sbb
lret
mov
pushf
cmp
out
daa
aas
push
jecxz
out
push
test
stc
jmp
and
mov
and
int
xor
scas
mov
cltd
pop
addr16
mov
adc
and
xor
rcrb
pavgb
lock
sbbb
mov
lahf
push
pusha
mov
adc
and
xor
rcrb
pavgb
lock
sbbb
mov
lahf
push
punpcklbw
jo
add
adc
pushl
out
rcrb
das
sbbb
mov
lahf
push
pusha
mov
adc
and
xor
rcrb
movsl
dec
aas
lock
not
sbb
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
dec
ret
pop
sub
sbb
or
pop
jns
pop
adc
dec
int
fsubl
mov
sahf
in
scas
int3
mov
sub
sbb
or
jl
insb
cs
ds
into
mov
decb
fdivrl
sub
add
adc
cs
ds
into
pop
std
xchg
sahf
jmp
in
sub
xlat
int3
cmp
inc
outsb
push
dec
mov
ret
push
aaa
cmc
daa
in
stc
fiaddl
pop
adc
xchg
mov
xchg
xor
negl
xchg
rcl
les
push
inc
adc
mov
mov
xor
add
aaa
push
in
popa
mov
and
in
adc
int3
dec
insb
jns
lods
sbb
cmp
pop
loope
ja
ds
in
push
push
add
scas
sahf
adc
xor
int
jecxz
in
icebp
pop
ds
rorb
lods
arpl
jne
ficoms
xor
cmpsb
int3
push
sbb
and
rorw
xchg
pushf
push
int
imul
pop
cmp
jle
push
jl
insb
cs
ds
into
movsb
fidivs
in
sti
scas
fdivrl
sub
sbb
jno
inc
xor
aam
leave
mov
mov
cmp
or
andnps
cmp
mov
call
sti
add
aam
sub
dec
sub
jns
adc
insb
cs
ds
into
mov
decb
fdivrl
sub
sbb
or
jl
insb
cs
ds
into
mov
decb
fdivrl
stos
repz
in
or
mov
rcll
xchg
andb
rsm
jo
xchg
dec
adc
arpl
test
lods
das
movsl
sbb
dec
adc
sub
js
rcrl
mov
mov
clc
pop
je
xchg
sti
jecxz
sahf
and
dec
into
fistl
xchg
cli
repz
adc
dec
xchg
cmp
pop
bnd
adc
cmp
imul
cmpsl
dec
adc
adc
mov
aas
popf
mov
or
jae
pop
repz
sbb
mov
iret
mov
push
loopne
jns
ja
mov
inc
add
jecxz
sbb
sub
or
cmp
pop
jge
ljmp
mov
sbb
leave
adc
dec
jmp
aad
adc
pop
ficoml
fistpl
mov
jl
filds
xor
leave
push
repnz
push
adc
into
jmp
inc
jo
pop
xchg
shlb
jno
mov
push
inc
clc
nop
xchg
push
imul
decl
fistpl
test
push
fwait
pop
or
idiv
je
push
adc
inc
movsb
test
pop
rorl
pop
pop
pusha
fdivr
jmp
les
stc
scas
rcrl
aaa
jbe
ds
dec
dec
inc
mov
dec
push
jp
inc
call
clc
inc
mov
insl
loope
inc
pop
std
xor
stc
pop
pop
push
and
fcomi
sbb
inc
repz
add
fidivrl
mov
inc
add
jl
lods
pop
mov
sbb
sub
jl
stos
subb
sub
test
mov
rclb
mov
mov
imul
mov
sub
xchg
xchg
adc
and
mov
jnp
and
jae
push
lcall
scas
scas
rolb
inc
add
loope
insl
loopne
dec
or
loope
dec
jg
adc
push
cmp
dec
sub
jae
scas
sbb
fstpl
mov
decb
adc
test
mov
adc
xchg
add
add
mov
and
jbe
adc
sbb
mov
ss
into
inc
mov
pop
sub
cmp
xor
insl
cmp
jg
add
test
push
nop
mov
lret
leave
ljmp
inc
lods
mov
or
mov
push
push
and
jnp
dec
sbb
xor
add
jns
cs
adc
mov
movsb
daa
pusha
adc
pop
xchg
push
addr16
sbb
jmp
ljmp
imul
insl
in
inc
call
jl
mov
js
sbbb
popf
sbb
lds
pop
das
mov
clc
iret
imul
mov
push
inc
daa
icebp
adc
sti
loopne
pop
icebp
bound
add
jle
cmpsl
and
sbb
pushf
xchg
xchg
jbe
fidivrl
or
add
mov
pop
arpl
imul
das
movsl
sbb
das
push
jae
jl
test
and
stc
loope
stc
jnp
jb
pushf
into
push
or
jge
xchg
rclb
xchg
lods
push
out
inc
adc
shlb
adc
enter
clc
fwait
bound
sub
movsl
xlat
int
push
call
pop
jge
aaa
push
add
stc
cltd
cld
dec
imul
inc
call
jl
and
sar
mov
popa
jg
pop
loop
mov
aad
cs
pop
or
sub
push
pop
rcll
cmpsb
jp
insl
push
pop
push
ds
test
ret
add
in
fildll
mul
lods
stos
jbe
or
sbb
cli
aam
xor
cmp
out
fnstcw
es
fdivrl
cmpb
xchg
xor
mov
cld
sub
repz
test
dec
dec
ret
cltd
add
sbb
int
dec
jae
test
aas
shrl
inc
sub
je
in
cmp
rolb
jne
jno
shlb
add
dec
mov
sub
cs
mov
xor
outsl
dec
pop
test
jecxz
popw
mov
sbb
jp
add
push
push
pop
inc
xchg
jle
test
arpl
test
idivb
mov
jmp
lock
cmpsb
out
orb
push
mov
sbb
dec
shrl
jae
jle
mov
xchg
stc
or
add
and
cmc
jno
int
push
fldcw
xchg
add
push
nop
repz
clc
sti
cmpsl
stc
mull
mov
inc
scas
shll
enter
leave
pop
sbb
or
pop
test
mov
loope
and
mov
movsl
jbe
jno
push
mov
fsubrs
inc
add
cli
mov
js
lret
lock
imul
or
lock
mov
adc
mov
or
inc
mov
out
mov
inc
add
cmp
dec
dec
scas
ss
xchg
pop
test
in
fdivl
add
xor
mov
fnsave
divb
push
aam
push
adc
in
clc
xchg
xchg
mov
lahf
test
test
out
adc
popa
jnp
mov
std
cmp
fadd
xchg
sub
dec
andl
mov
cld
adc
lods
out
sub
imul
jae
dec
dec
aas
icebp
lret
mov
loopne
daa
cmc
imul
cmp
test
jp
cli
fnstcw
mov
dec
mov
cmp
mov
adc
push
adc
add
inc
pop
adc
xchg
dec
jmp
xorb
mov
adc
add
and
xchg
test
push
das
pop
rorl
int
js
xor
mov
inc
aas
add
and
sub
ljmp
inc
mov
pusha
test
jae
jp
sbb
jb
pop
test
mov
mov
dec
pop
add
aaa
add
jne
mov
mov
out
jg
fbstp
xor
fwait
test
or
fwait
inc
add
out
popa
mov
ljmp
mov
and
loopne
xor
lcall
test
add
sbb
out
loope
dec
pusha
xor
pop
ss
and
adc
shll
mov
and
cmp
fidivrl
mov
out
ret
call
push
cmp
cmc
xchg
dec
pop
xchg
or
shr
jecxz
test
mov
pop
add
inc
pusha
jbe
inc
lods
or
lds
xor
dec
sbb
ds
jno
lods
in
push
sub
orl
sbb
jecxz
inc
clc
adc
stos
push
lea
jne
fimull
pop
fldt
out
cs
out
cmp
cmp
repz
adc
cltd
imul
cmp
pop
cmp
pushf
adc
test
xchg
add
xchg
outsl
jb
inc
popf
push
xor
dec
cmc
dec
loopne
sub
arpl
sub
lods
icebp
fistpll
call
adc
imul
jl
stos
ds
xor
fscale
addr16
pop
inc
call
sub
in
jmp
ss
arpl
imul
push
andb
mov
add
inc
stos
enter
pushf
mov
into
mulb
insb
shl
dec
loope
mov
xchg
add
es
push
cmp
js
pusha
nop
outsb
dec
pop
push
pop
mov
cwtl
and
and
je
xlat
faddl
test
and
xor
pop
or
ds
pop
and
loop
jno
mov
jbe
adc
or
in
je
out
push
jno
lret
cmpsl
jae
scas
cmpl
hlt
repz
pushf
jle
rorl
sub
js
jno
cmc
in
dec
sub
loope
xlat
ret
sub
hlt
ljmp
jp
jecxz
adc
es
pop
xchg
out
into
mov
dec
pop
out
mov
sbb
jle
mov
or
or
add
sub
int3
imul
andb
outsb
movsb
ds
push
jbe
ds
fs
imul
insl
ja
jo
xor
pop
dec
mov
dec
fimuls
pop
shll
or
shlb
lahf
and
pop
fiadds
mov
pushf
int3
lcall
imul
dec
push
std
pop
push
jg
xchg
lock
ror
movsb
inc
mov
lret
out
rcrl
loope
out
xchg
inc
rclb
lods
mov
test
daa
pop
ss
mov
jns
pop
jb
fistps
leave
or
pusha
lahf
aam
gs
dec
pop
int3
and
pushf
mov
inc
lahf
je
cmp
das
jnp
and
xchg
bound
cmp
and
shlb
cmp
mov
xor
movsl
syscall
mov
cmp
roll
mov
fwait
xor
push
xchg
xchg
ficomps
sbb
aaa
xchg
movsl
fiadds
clc
es
pop
lods
pop
aas
insl
call
cmpb
fwait
push
jo
and
inc
mov
movsb
jmp
popa
dec
mov
cmp
fs
mov
cli
pusha
xchg
sbb
xchg
addb
test
inc
mov
cld
pop
movsl
std
mov
pushf
xchg
and
pop
cwtl
xlat
pop
call
jne
adc
popa
sbb
pop
xorb
in
loopne
cmc
lea
scas
je
sbb
cli
push
pop
negb
inc
cmp
cmp
push
cmp
mov
mov
and
sbb
cmpsb
mov
inc
rcrl
push
ds
sub
dec
jmp
std
fisttpl
adc
push
leave
jae
lret
rol
jne
mov
stos
mov
dec
sahf
fildll
ficoml
mov
cmp
test
cmp
lret
ret
cmp
xchg
pusha
xchg
aas
out
popf
mov
in
jecxz
pop
push
cwtl
add
dec
ljmp
movsl
xchg
add
aad
sti
arpl
mov
add
fistl
out
test
rorb
loop
xchg
or
cmpsb
arpl
jecxz
ja
je
movsb
jno
ds
insb
mov
arpl
inc
fsubr
dec
subl
push
mov
mov
cmp
mov
pusha
sbb
fiaddl
scas
test
leave
inc
rclb
push
rorb
dec
les
pop
ds
mov
ljmpw
cmpsl
and
daa
lret
popf
xchg
push
je
test
xor
mov
and
cmp
aaa
inc
pusha
mov
cmp
hlt
xchg
fidivl
or
xor
mov
sub
mov
js
es
pushf
ret
loope
jle
lret
jg
in
and
mov
test
jo
fisubrl
xchg
xchg
xchg
xor
sbb
rorb
inc
sti
fstpt
mov
outsl
adc
sbb
test
pop
xchg
dec
call
mov
mov
js
add
push
xor
mov
ficompl
mov
mov
dec
in
xor
dec
jl
xchg
sub
pop
adcl
mov
mov
mov
jo
and
fcom
shrl
pop
imul
sbb
roll
mov
and
push
add
mov
adc
jp
arpl
mov
mov
inc
xchg
mov
outsl
sbb
jp
scas
leave
sbb
aaa
je
lret
lds
jmp
hlt
mov
mov
mov
aam
jmp
lret
add
cmp
test
jl
fbstp
ret
push
cs
sub
adc
pop
int3
stos
cmc
cmc
push
dec
lea
pop
xor
shll
mov
ret
aad
xchg
and
adc
hlt
or
mov
mov
xor
push
xor
add
adc
xchg
pop
ljmp
mov
dec
mov
pop
fstpt
and
fsubrl
ret
push
mov
xchg
insl
xchg
jg
lahf
add
cmp
sbb
jns
into
ds
loope
mov
push
into
sbb
mov
inc
sbb
inc
mov
std
sub
pop
xor
aaa
adc
fst
stos
rcrb
imul
dec
xlat
push
loopne
jne
add
mov
sbb
jecxz
in
je
mov
nop
sub
xchg
sbb
adc
pop
pop
gs
jbe
dec
xlat
add
shrl
pop
stos
test
aaa
jae
pop
push
ds
mov
add
mov
xchg
or
ja
inc
pop
daa
mov
and
add
ja
mov
mov
cmp
je
popa
frstor
scas
add
xchg
aad
mov
adc
and
dec
cmp
jo
sbb
mov
les
loope
sarl
jae
cs
fsubs
int3
out
mov
ret
inc
jmp
iret
add
and
or
test
pop
and
dec
es
adc
repnz
pop
ret
testb
add
das
dec
xchg
decl
adc
and
shrb
sub
xchg
push
mov
cwtl
das
dec
push
scas
sarb
js
sbb
bound
cmp
popa
push
mov
and
stc
inc
and
fildll
sahf
cmpsl
in
cbtw
or
cltd
fldl
and
inc
test
or
or
iret
testl
mov
outsb
arpl
icebp
imul
outsb
call
les
or
bound
xor
dec
pop
mov
jge
sbb
xchg
pop
popa
and
inc
stc
arpl
mov
mov
movsb
je
mov
aam
mov
push
je
push
jne
pop
pop
adc
loopne
stc
mov
fstpl
dec
dec
in
and
icebp
pushw
add
popl
orb
mov
jp
pop
and
data16
in
jmp
sbb
mov
mov
or
frstor
fidivl
sub
repz
cmp
add
cltd
sbb
test
orb
clc
or
mov
adc
sar
outsb
jb
inc
cmp
repnz
xchg
lcall
mov
fcoms
mov
add
test
push
jo
fwait
sti
mov
push
add
or
imul
aas
xchg
andl
ret
and
xor
mul
ret
enter
insl
jmp
mov
movsb
mov
cltd
mov
js
or
movsl
add
lahf
sbb
loope
dec
enter
xor
std
inc
test
mov
cld
push
cmp
jnp
scas
xor
test
cmp
xchg
mov
add
leave
dec
jl
sarb
imulb
xlat
mov
lret
insb
call
push
fbld
pop
ja
jmp
loopne
loope
and
es
aad
push
jp
test
push
mulb
movsl
nop
sub
pop
nop
ja
scas
fdivrs
sbb
test
and
push
jge
inc
sti
testb
cmp
xchg
mov
test
xchg
inc
jl
adc
pop
loop
and
add
dec
and
les
mov
push
or
cmpsb
push
mov
mov
cmc
insb
int
jno
negl
adc
mov
call
stc
push
pop
dec
or
jmp
inc
pop
or
test
sub
stos
cltd
arpl
mov
insl
cli
les
int
fldcw
fwait
push
add
sbb
xchg
inc
lods
fiadds
sub
mov
xchg
scas
mov
andb
enter
xchg
sbb
aas
sub
sbb
or
mov
loope
jns
addr16
iret
jle
push
lock
pop
pop
mov
fists
or
sub
into
sbb
dec
dec
xor
mov
ss
aas
outsb
jo
inc
sub
das
stos
inc
aas
xchg
xor
xor
pop
out
or
push
leave
pop
xchg
mov
scas
popa
xlat
test
push
subb
push
insb
fidivrs
fwait
sbb
fidivs
or
xor
pop
sub
pop
loop
jl
sarb
ret
sub
adc
imul
scas
imul
mov
je
xchg
pop
dec
test
push
sub
add
out
rorb
fstpl
rcrb
fmull
fsubrl
inc
jae
lods
mov
shrl
stc
inc
cmp
jbe
test
jmp
and
inc
jns
pop
mov
sbb
dec
jbe
stc
into
fwait
add
call
xor
mov
xchg
push
ja
jns
and
movb
cmp
jecxz
sub
lods
fcmovne
aad
pop
pop
cli
sbb
push
sbb
out
mov
mov
out
pop
mov
cmp
xchg
xor
add
pop
push
xchg
test
daa
mov
lret
lds
adc
mov
jge
loope
popa
cmp
call
clc
cmp
movl
stos
int
das
mov
ds
xor
fwait
add
out
xchg
mov
cmp
mov
inc
cld
scas
xchg
test
xchg
imul
add
fistpll
push
sti
cli
mov
and
sbb
mov
movl
enter
push
repnz
dec
jae
frstor
hlt
push
inc
int
ficomps
push
dec
jb
jns
std
sbb
xor
or
mov
aad
mov
subl
mov
subl
pop
push
sub
or
aam
movsl
pop
sbbl
add
push
or
inc
insb
sti
jo
dec
sub
gs
sub
icebp
ficomps
sbb
or
xor
rcll
test
iret
je
cmp
outsl
push
leave
test
inc
fcomps
jg
sub
jmp
inc
xor
push
jge
inc
push
fimuls
aam
gs
insl
in
fidivrs
add
insl
and
jge
data16
push
sahf
mov
xor
sbb
or
push
lods
pop
inc
push
xor
push
cmp
rol
ljmp
insl
cmp
insb
cmp
in
jae
push
sub
out
and
mov
lods
sti
insl
mov
dec
mov
stos
mov
daa
mov
inc
and
xlat
insl
xor
xor
cli
sbb
jno
push
test
sub
and
insb
push
adc
inc
mul
movsb
mov
mov
inc
xchg
pop
rcl
add
mov
push
adc
add
dec
cmp
faddl
rclb
out
gs
fwait
bound
push
fadd
cmp
in
scas
popf
mov
hlt
call
xchg
pop
xlat
dec
cwtl
roll
cwtl
in
rcr
loopw
pop
mov
pushl
insl
daa
clc
add
inc
addb
and
sbb
lret
mov
test
aam
push
stc
in
stc
or
imul
pop
cmp
cmp
or
mov
icebp
out
fs
pop
mov
push
xor
cmp
mov
popf
into
gs
xchg
push
add
push
add
dec
mov
xchg
pushfw
cli
test
subl
pop
int3
push
or
xchg
mov
lahf
jge
push
push
out
nop
scas
jmp
ljmp
fisubrs
pop
add
scas
ret
idiv
and
cmp
arpl
stos
push
lea
scas
push
cmp
mov
fisubrs
sarl
lret
pop
cmp
jae
jp
gs
addr16
push
pop
jns
mov
adc
call
mov
or
mov
mov
xor
out
ficompl
pop
mov
push
jge
fcoms
xlat
xor
push
dec
mov
mov
jne
mov
shll
pop
and
jbe
mov
lock
sub
jns
sub
dec
lret
push
xchg
dec
jns
fwait
movsl
mov
cld
add
lods
sub
push
mul
jne
adc
mov
add
xor
push
jns
ljmp
in
outsb
fdivs
jg
jno
xchg
xorl
mov
lods
rolb
jbe
lret
rcrl
and
jnp
fmul
sti
insl
jmp
fbstp
mov
fidivrs
xchg
xor
jl
ljmp
pushf
sbb
pop
pop
mov
xor
inc
shll
into
nop
mov
cmc
xchg
fucomp
outsb
cld
xor
ja
dec
les
pusha
inc
cmpsb
in
jae
xchg
out
mov
pop
push
inc
outsb
les
jecxz
cs
inc
adc
mov
push
inc
pop
push
js
push
push
dec
gs
mov
or
jl
insb
cs
ds
into
mov
decb
fdivrl
sub
sbb
or
jl
insb
cs
ds
into
mov
decb
fdivrl
sub
sbb
or
jl
insb
cs
ds
iret
mov
decl
scas
fnstsw
sub
sbb
or
jl
insb
scas
pop
mov
push
inc
pushf
sti
stc
je
adc
inc
xor
cwtl
cmp
dec
add
or
pop
and
sub
icebp
nop
cli
sbb
scas
loopne
rorb
and
dec
add
sub
push
or
loopne
mov
test
ljmp
sub
sbb
jb
add
fdecstp
stos
loope
sar
mov
jno
add
push
sbb
sti
and
inc
fildl
mov
xor
jb
mov
jne
sarl
ja
sub
mov
jnp
in
adc
imul
add
pusha
add
and
adc
ret
and
js
lock
ljmp
insl
inc
and
pop
jne
pop
jp
dec
push
pop
jno
lahf
or
inc
xchg
movsl
outsl
repz
mov
aas
out
mov
shlb
lret
or
jo
lock
outsl
sub
scas
sbb
pop
mov
and
std
gs
leave
aad
mov
stos
xchg
sbb
mov
ret
xchg
data16
add
and
ds
pop
jo
and
push
or
mov
xor
enter
xchg
push
rclb
push
adc
push
adc
pop
shrl
loope
cltd
in
mov
movsb
incb
cmp
cmp
sbb
push
mov
in
ljmp
sub
pusha
es
ss
or
mov
mov
stos
loopne
rorb
and
dec
add
sub
push
or
mov
mov
stos
loopne
rorb
in
mov
dec
rdpmc
xor
adc
fs
jae
mov
pop
cs
mov
daa
xor
sahf
fs
jb
int
pop
jbe
jge
adc
lock
mov
xchg
sbb
cmpsl
aas
or
adc
out
push
stc
enter
mov
incl
sub
movsb
leave
mov
movb
push
adc
inc
out
push
mov
les
cltd
push
sbb
push
in
sbb
lea
cwtl
inc
mov
mov
cld
mov
movsb
push
cmp
les
andps
cli
enter
aad
outsl
pop
sbb
insb
je
xchg
cmp
adc
in
sub
loope
xorl
ljmp
inc
sub
js
lods
add
hlt
add
call
push
cmp
push
ss
incb
add
and
dec
mov
test
fs
int3
ss
into
stos
cmp
push
idivl
push
dec
and
inc
pop
jno
movsb
xchg
stc
mov
mov
rclb
cmp
ret
bnd
mov
sub
pop
or
cli
lock
xchg
int
inc
jmp
xchg
cltd
sbb
cld
int3
test
and
lock
adc
xor
cmpsb
ss
rorb
int3
sub
and
jg
mov
xchg
hlt
xchg
popf
pop
xor
imul
fidivrs
pop
mov
sahf
xor
mov
cmp
repz
or
divl
int3
push
mov
sub
jg
fildll
and
pop
fiaddl
fs
ret
imul
clc
push
icebp
mov
dec
jmp
mov
int3
out
addl
push
out
out
xor
push
test
or
sbb
test
pop
test
lret
loopne
into
and
mov
subl
cwtl
add
mov
push
mov
hlt
rcrl
fistpll
and
xchg
inc
fbstp
jmp
ret
mov
rcrl
pop
cmpsl
ss
imull
xchg
mov
adc
aaa
xchg
inc
in
call
xor
mov
dec
imul
sbb
out
clc
js
into
inc
mov
dec
out
and
push
inc
repnz
mov
cmpsb
outsb
repz
loopne
cmp
xlat
pop
gs
int
les
cs
pop
cmp
push
test
movsl
notl
arpl
mov
xor
frstor
adc
dec
or
nop
and
lods
sub
jmp
sarl
sbb
jle
cwtl
adc
adc
inc
or
insl
jl
ret
sbb
pop
jae
iret
sahf
aas
nop
cmp
mov
pop
mov
sub
jge
call
fwait
jnp
out
or
mov
push
jge
sbb
hlt
lods
repnz
aam
mov
test
jo
je
pop
push
pop
icebp
test
cli
imul
mov
xor
je
cmpsl
repz
jno
cmp
xor
cmc
insl
mov
sbb
mov
cli
cmp
mov
int3
or
pop
shr
movl
inc
into
lret
adc
out
rcr
icebp
pop
mov
addb
mov
shl
out
xor
in
push
sti
decb
inc
mov
cmp
leave
pop
lret
cmpsl
ss
add
pop
and
scas
dec
out
arpl
jle
and
stos
and
push
xor
mov
loopne
xor
inc
xor
sub
test
mov
pushf
add
movsb
loopne
push
xchg
mov
xor
das
scas
add
sub
mov
in
pop
inc
fimull
adcl
sahf
sub
jg
pushf
jnp
xchg
and
xchg
test
fiaddl
adc
test
rclb
inc
add
dec
inc
imul
clc
bound
lret
rclb
lcall
sti
hlt
fsub
out
divb
sbb
es
sbb
adc
xor
incb
push
mov
pop
shlb
stc
stos
jle
inc
shrb
mov
in
pop
xchg
lret
jne
sarl
sbb
arpl
xor
insl
loope
push
sbb
fstpt
roll
movsl
mov
mov
sub
int
dec
rorb
or
inc
hlt
pop
aad
xchg
cwtl
adc
lret
jle
inc
push
cli
lock
inc
pop
jae
orl
inc
mov
repz
pop
adc
mov
repz
shl
and
add
add
jg
enter
sti
in
push
daa
sbb
and
sbb
imul
leave
jo
push
mov
add
jns
int
ss
mov
out
xor
ficomps
test
or
jnp
sbb
mov
xchg
xor
add
cld
es
pushf
hlt
cmc
lcall
mov
mov
nop
rcll
ds
hlt
xor
cmp
ret
mov
fidivrl
jo
xor
mov
popf
movb
ds
sub
sub
mov
in
loopne
push
pop
scas
xor
inc
sbb
and
cmp
sbb
in
sub
dec
fsub
sahf
rcrb
loopne
shlb
xchg
push
sbb
xor
jg
out
stos
mov
sub
adcb
dec
loope
jb
cmp
jl
test
jno
xchg
outsb
movb
push
outsl
jbe
pop
mov
pop
push
sahf
mov
inc
jnp
cmp
mov
rcrb
add
dec
arpl
add
repz
fistps
inc
iret
loop,pn
out
add
js
and
inc
divl
cmpsb
inc
xor
mov
popa
stc
xchg
ret
and
xchg
inc
int
testb
add
cltd
jp
xchg
lods
xchg
popf
outsb
xor
push
int
xor
sbb
inc
sbb
cmp
dec
test
add
jp
jb
cmp
sub
mov
into
aas
inc
xlat
cwtl
movsb
cmp
mov
jo
mov
gs
mov
idiv
shl
inc
jno
sbb
jnp
sbb
or
scas
jne
test
jo
std
xchg
jno
cmc
in
sbb
cmovle
mov
cli
jnp
pop
imul
es
scas
add
pop
clc
and
xor
dec
pop
adc
push
icebp
mov
xchg
cli
ljmp
or
lcall
nop
jb
ret
fistps
scas
jne
sbb
inc
cmp
int3
push
mov
inc
push
aad
mov
mov
mov
xchg
jns
jno
xchg
inc
push
lock
sarl
gs
pop
psrlq
cmp
js
lret
orb
loop
inc
xchg
dec
pusha
out
push
sbb
clc
xchg
xchg
inc
push
aad
mov
mull
xor
dec
sahf
xor
add
mov
out
lods
add
dec
fimull
push
add
dec
aas
xchg
repnz
out
push
or
out
and
xorb
push
mov
sbb
sub
lock
jg
mov
mov
push
rol
arpl
test
lds
in
cmp
scas
jl
sub
mov
sub
int3
pop
mov
dec
adc
aas
fcompl
out
lret
fwait
in
and
or
jmp
jl
mov
sub
insl
fisubrs
dec
and
xor
push
imul
loope
arpl
sbb
cmp
jge
lods
sbb
xor
push
add
repnz
movsb
mov
sub
sub
bound
inc
shrl
hlt
inc
xchg
sahf
lret
pop
pop
inc
xor
into
stos
int3
or
popf
imul
or
xor
loopne
push
cmp
in
pop
out
aad
lret
or
mov
fistps
ror
cmp
jecxz
jge
ja
jno
mov
sub
aaa
dec
and
pop
push
mov
inc
rolb
pop
sbb
jae
hlt
add
mov
aas
push
leave
inc
add
bound
lahf
jnp
push
or
fidivs
out
push
jge
add
or
add
lods
adc
and
pop
xchg
imul
fcomps
push
out
and
jbe
outsl
jge
mov
ds
hlt
addb
lcall
test
jecxz
dec
pop
repnz
mov
jbe
jge
imul
aaa
push
ds
out
dec
xchg
insb
hlt
negb
cmpsb
sti
jbe
shll
js
mov
cltd
add
inc
fisubrl
dec
push
cmp
and
push
lcall
xorb
xor
pop
jecxz
mov
cmpsb
jo
rol
inc
aaa
push
popa
out
repnz
adcl
shrb
ja
mov
dec
dec
lds
xchg
inc
call
in
push
dec
shrl
mov
adc
jne
mov
nop
std
int
xchg
mov
xchg
fucomi
sub
mov
sbb
xchg
push
out
daa
lcall
inc
aaa
xchg
ret
out
push
lock
out
and
arpl
sbb
pop
leave
xchg
jecxz
cmp
xor
fldcw
mov
sub
fadd
cmp
pop
arpl
add
push
sbb
rcll
lods
cmp
nop
jbe
cmp
les
cmp
hlt
inc
pop
xchg
aaa
pop
js
mov
out
mov
cltd
sbb
jp
lret
push
js
xchg
pop
adcl
pop
cld
mov
test
xchg
and
les
enter
push
xor
inc
popa
dec
push
hlt
dec
cs
les
mov
lea
dec
les
pop
movsb
std
rol
xor
xlat
and
imul
dec
xchg
subb
popf
push
fwait
popf
icebp
sub
push
pop
insl
adc
imul
jmp
xchg
push
les
or
cmp
inc
adc
andb
hlt
push
cwtl
lea
jp
bound
pop
cmp
aaa
dec
sub
repz
pop
loope
push
cmp
pop
mov
cmp
les
fildl
jns
arpl
cmp
jne
sbb
sbb
rcrb
lods
je
and
sbb
hlt
mov
jl
or
jae
out
insb
int3
push
adc
aad
subl
movsb
sbb
lods
jae
in
adc
sub
loopne
or
mov
add
mov
and
ss
jno
dec
push
sarb
pop
or
mov
inc
push
lahf
scas
inc
fisttpl
and
mov
into
insb
mov
and
add
imul
sbb
mov
pop
pop
jp
test
int
movsl
dec
int
adc
add
aaa
inc
sarl
hlt
test
lods
mov
ficoms
push
cmp
and
inc
mov
inc
sbb
push
cltd
in
inc
enter
xlat
inc
repz
sbb
xor
stc
addr16
orb
mov
dec
sbb
sub
lods
adc
pop
or
das
fisttps
repnz
js
inc
test
dec
pop
and
inc
or
dec
fldl
fmull
mov
in
and
sub
inc
sbb
pop
mov
fucom
popf
aaa
pop
es
in
xchg
mov
out
js
inc
ljmp
xchg
daa
mov
mov
notl
lcall
jmp
add
lahf
push
push
sbb
std
push
dec
mov
push
inc
fsubl
lahf
inc
push
xchg
loope
inc
push
jmp
and
cmp
adc
xor
orl
int
mov
sub
int
ljmp
inc
jmp
lock
push
icebp
rcrl
hlt
sbb
bound
imul
lods
mov
js
lret
int
das
sbb
jnp
push
shlb
sarb
ds
push
mov
jle
clc
imul
les
popf
cmp
loopne
and
mov
aam
jl
in
repnz
cmp
add
sub
into
lods
mov
inc
int
mov
mov
dec
inc
mov
xchg
stc
pop
cmp
aas
xlat
mov
dec
push
adc
movsl
xchg
mov
test
mov
in
negb
pop
sbb
das
test
push
mov
test
out
push
pop
pop
lea
fiadds
in
or
jb
pusha
cltd
enter
or
xlat
popf
xchg
mov
sti
push
fmuls
or
and
push
stos
inc
leave
mov
xor
gs
leave
ljmp
dec
lahf
pop
movsl
test
mov
inc
les
ficoml
out
cmc
int3
sbb
jnp
push
icebp
xchg
dec
jno
push
out
push
jecxz,pt
xor
adc
xorb
shll
lcall
adc
cmp
mov
push
cmp
sbb
xlat
inc
bound
push
popf
mov
data16
test
lock
icebp
aaa
or
pop
jne
loop
adc
call
nop
or
push
aad
in
xor
push
repz
jbe
xchg
sub
arpl
leave
mov
pop
cmp
loope
dec
xchg
jb
imul
cmpsl
cmpsl
outsb
dec
stos
cs
jo
ret
adc
hlt
add
pop
xorl
push
jne
pop
ds
lcall
or
mov
ja
adc
jae
jp
popf
sbb
adc
cld
push
lea
push
out
mov
xor
cmp
ret
xchg
loop
sub
inc
ret
jg
or
stos
mov
es
push
repnz
ds
jbe
jae
ss
lods
lcall
xor
add
xchg
xor
enter
sub
xchg
xchg
lret
dec
hlt
push
jns
inc
outsb
sbb
mov
daa
xchg
clc
loop
test
mov
fsubrp
test
fwait
in
mov
jo
inc
mov
pop
or
dec
enter
mov
mov
sahf
mov
xchg
xor
cld
das
jae
out
dec
lret
mov
gs
cmp
aam
mov
repnz
jns
push
outsb
mov
push
movsl
push
mov
cmp
or
jmp
inc
mov
fdivp
mov
lret
repnz
ret
lcall
enter
sub
mov
xlat
jno
outsb
fsubrs
dec
adc
dec
sub
cmc
sub
decw
mov
push
stos
subb
jb
jns
testb
pop
pop
mov
enter
mov
movl
das
cmp
cmpsb
mov
notl
outsb
mov
lahf
lret
and
dec
cld
sbb
icebp
mov
hlt
lret
and
stos
sbb
push
mov
fwait
mov
jae
scas
outsl
pop
xorb
mov
cmp
or
inc
mov
test
adc
adc
jg
jo
mov
xor
sub
in
push
mov
bnd
jb
add
add
stc
je
push
lret
and
xor
push
mov
negl
xchg
inc
xchg
fcmovne
mov
adc
test
ror
movsl
or
in
jp
sbb
pop
ficomps
pop
xchg
repz
cmpsb
sahf
adc
ret
in
addr16
cmp
pop
les
sti
push
and
test
or
lret
mov
neg
sti
xchg
lret
cmp
aam
adcl
cli
ret
cld
popa
inc
stos
mov
mov
fldl
clc
mov
mov
or
hlt
insb
push
add
xchg
cltd
inc
cmc
fs
sar
sbbl
cltd
rol
out
jns
pusha
xchg
int
sbbb
cltd
or
in
dec
outsl
cmp
ljmp
mov
or
idivl
into
es
mov
adc
dec
imul
insl
push
outsb
cld
mov
mov
enter
mov
jle
fldt
out
popa
test
call
mov
cs
arpl
pop
mov
or
mov
insb
rorb
mov
jle
pop
je
call
mov
out
pop
sbb
dec
xchg
jp
pop
je
add
xor
jbe
xchg
idivb
xor
aaa
jg
fcomps
inc
divl
push
cmp
pop
jg
shr
out
push
lret
int3
and
jno
jmp
jge
sbb
sub
ss
inc
pop
lock
sti
inc
cmpsb
mov
loopne
dec
daa
mov
xchg
sub
sbb
pop
sbb
push
xor
pusha
stos
adc
bound
sahf
fmull
mov
mov
imul
xchg
xorb
std
fadd
mov
jmp
jmp
push
add
and
ds
pushf
ds
addr16
incl
mov
test
mov
ret
fcompl
insl
into
jmp
addb
mov
dec
daa
mov
jge
mov
idiv
and
jg
pop
and
movsl
dec
inc
sub
push
or
mov
xchg
push
loopne
rorb
lcall
aas
jecxz
and
outsb
and
sti
call
outsb
movsl
sbb
test
stc
nop
sbb
aad
ljmp
and
das
push
fwait
inc
cmpsb
incl
sbb
push
std
out
sarb
iret
xchg
adc
xor
sahf
adc
jl
shrb
xlat
add
inc
cwtl
push
and
ret
cli
ret
dec
scas
outsl
push
hlt
mov
jne
or
shlb
daa
popf
and
add
push
cmpb
dec
sbb
hlt
filds
ja
ficoms
push
ret
ja
jp
sub
jo
mov
fnsave
add
sti
enter
ret
pop
sbb
mov
and
test
loop
cli
push
xor
stc
enter
or
cld
mov
cmc
add
loop
and
scas
cmp
lock
adc
test
add
push
xor
rcl
xchg
jge
push
in
ss
incb
jle
pop
or
pop
add
repnz
inc
fidivrs
popf
jne
fstps
mov
adc
dec
lcall
call
mov
jl
sbb
repnz
dec
lds
xchg
ret
push
xlat
and
paddb
fildl
or
or
pushf
out
cmp
or
mov
daa
fldcw
mull
cmp
pop
lret
push
add
sbb
stc
sti
stos
mov
mov
bound
ljmp
inc
ss
jnp
daa
mov
pop
xor
fidivl
sti
push
adc
pop
aam
mov
inc
aas
mov
adc
lea
out
mov
mov
sbb
adc
dec
pushf
imul
sbb
or
pop
out
rcrl
ss
cltd
rorl
movsl
push
test
or
sti
sbb
cmp
pusha
adc
bound
jp
iret
loopne
jmp
mov
mov
adc
pop
xchg
xor
xor
inc
cmp
aam
cld
sub
dec
inc
and
push
testb
test
or
inc
sbb
sbb
incl
mov
inc
cmpb
scas
sbb
cmp
pop
xor
pop
push
iret
imul
dec
popf
sar
ret
std
flds
mov
icebp
inc
aaa
xchg
shrb
add
out
std
testl
sub
leave
sbb
cmp
lock
dec
stos
sbb
int3
popa
ret
pop
cmpsb
jl
dec
int
pop
outsb
fsubr
daa
cmp
test
jmp
in
xor
out
cmpl
pop
jg
jge
addr16
cmp
sti
inc
cmp
pop
enter
cmp
mov
jp
jge
in
inc
mov
or
call
stos
sub
mov
mov
mov
push
or
ret
xchg
test
cmp
incl
sbb
xchg
adcl
xchg
loope
jne
mov
cmp
sbb
xor
mov
pusha
das
cmpl
mov
push
adc
mov
sub
push
inc
cmp
push
xor
les
dec
stos
lods
mov
scas
adc
out
aaa
adc
and
lock
add
into
lcall
pop
push
shrb
cmp
dec
mov
sbb
add
fidivrs
lret
adc
stos
xchg
add
xor
popf
mov
hlt
pop
mov
es
cmp
rolb
sub
test
sbb
push
je
xor
data16
bound
xchg
push
imul
mov
jge
jmp
xchg
adc
movsb
jle
popf
mov
mov
jmp
lods
pop
mov
inc
out
movb
dec
cmpsl
jp
dec
sbb
jo
pusha
cmp
inc
sbb
lret
lock
loopne
rorb
and
dec
add
sub
push
or
mov
mov
stos
loopne
rorb
and
add
sub
push
inc
sbb
test
lock
stc
mov
sub
sub
jo
jo
push
mov
fidivl
lret
xchg
push
loop
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
xor
dec
sbb
scas
inc
inc
xor
or
pop
add
add
push
push
add
addl
add
jno
stos
add
enter
sub
add
add
add
flds
call
add
add
add
add
add
sub
aaa
add
add
xchg
add
add
add
or
add
add
add
add
add
out
add
push
add
add
mov
add
add
flds
jg
fiaddl
addr16
add
add
add
add
add
add
add
add
add
add
add
js
inc
add
add
push
add
add
js
sub
aad
pop
add
push
flds
push
add
sbb
testb
add
test
jge
sbb
lods
add
out
ret
add
clc
add
add
add
push
sbb
inc
add
add
add
add
add
add
mov
add
add
add
xchg
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
or
dec
add
lods
add
das
add
out
sbb
add
or
cmp
lods
add
in
add
dec
add
and
adc
xchg
add
add
add
addl
add
add
jbe
inc
add
add
add
add
add
add
add
or
add
add
add
add
cmp
sbb
push
cmp
add
xchg
add
add
add
xor
add
add
aad
flds
out
movsb
add
add
add
add
add
sub
popf
add
push
add
add
add
jge
filds
cmp
test
pop
add
add
fiaddl
cmp
add
add
add
lcall
add
add
add
movsl
add
add
add
add
add
add
push
add
add
add
add
push
add
add
call
add
add
add
add
lea
cmpsb
add
lods
add
add
add
add
add
add
js
inc
add
add
add
movsb
add
add
push
add
add
add
add
add
add
add
sub
add
add
test
js
inc
add
add
add
add
add
test
add
add
add
jno
pop
add
add
add
add
add
add
add
add
add
add
aaa
add
sbb
daa
add
add
add
add
add
add
add
sbb
xchg
add
add
or
xor
add
add
add
pop
add
add
add
add
add
add
add
sub
sub
and
jno
lcall
add
mov
add
add
add
add
call
add
insl
add
add
add
add
add
add
inc
add
xor
movsb
add
add
enter
out
xchg
add
add
add
add
or
lods
lds
icebp
repz
jb
xor
push
gs
addr16
mov
jp
out
jne
mov
ret
imul
xor
cmp
outsb
pop
mov
cwtl
cmp
push
jge
mov
sub
loope
cwtl
inc
cli
mov
jg
loop
sub
jae
popa
inc
aas
pop
xchg
dec
imul
pop
adc
idivl
cmp
shrb
imul
aaa
out
or
mov
fucomp
inc
std
push
mov
mov
and
sbb
inc
loop
orl
mov
mov
push
lahf
out
push
ja
mov
pop
and
mov
test
adc
arpl
adc
mov
cmp
shr
scas
sub
mov
fs
jno
dec
xorb
gs
test
mov
and
dec
xchg
aaa
pop
cmpsb
xchg
inc
data16
push
test
test
mov
hlt
lock
andb
testb
movsl
or
push
in
jns
mov
pcmpgtb
add
fsub
repz
scas
jo
push
xchg
shll
jb
pusha
shll
mov
pop
pop
stos
negb
inc
sub
xor
hlt
pop
dec
jae
pop
xorl
pop
and
arpl
std
mov
mov
inc
test
lret
or
mov
test
adc
mov
fsubp
cli
lret
and
repz
xchg
mov
mov
mov
cmp
test
std
insb
pop
ss
movsb
cmpsb
adc
stos
push
test
add
out
pop
fistps
add
jp
sahf
sahf
cmpsl
inc
pop
insb
les
cwtl
popf
aas
jnp
xchg
push
pusha
cmp
fnsave
fisttpl
in
sub
pop
push
movsl
mov
ret
addr16
and
push
rolb
push
or
jne
mov
sbb
cmp
fcomip
outsb
aas
dec
cmpl
or
jo
push
cmc
push
es
xchg
add
scas
and
fsubl
pop
out
jg
jle
adc
bound
xchg
out
mov
xor
jle
loopne
rcrl
dec
js
fsubs
nop
in
cwtl
mov
dec
in
loopne
push
enter
push
jmp
stc
mov
lea
inc
sbb
imulb
mov
xor
push
xor
gs
test
jp
fwait
out
imulb
cmpsb
sub
hlt
hlt
repz
push
or
mov
adc
xlat
lock
stos
mov
mov
xor
loopne
jmp
ror
mov
mov
and
mov
movb
test
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
