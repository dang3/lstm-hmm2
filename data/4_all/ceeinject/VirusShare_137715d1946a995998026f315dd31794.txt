call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
cltd
mov
repz
fmul
push
or
popa
or
add
loope
pop
xor
mov
repz
fidivs
cs
push
mov
add
insb
and
dec
fisubl
jmp
lcall
aam
ds
or
sub
pop
sbb
pop
and
sti
popf
jmp
nop
cmp
stos
arpl
xchg
in
mov
pop
and
xchg
jecxz
inc
mov
and
mov
lods
rcrb
inc
xor
scas
mov
lds
jne
lds
lods
xor
cld
fistl
mov
or
loopne
push
add
frstor
stos
mov
ja
cmp
arpl
das
addl
ficompl
cmp
mov
ds
fwait
mov
mov
shll
jae
test
or
rcr
lods
data16
je,pt
dec
inc
fistps
inc
pushf
loope
icebp
ret
push
add
add
in
xchg
decb
xlat
pop
ds
ss
push
sbb
jbe
inc
sub
mov
xchg
jmp
cld
decb
aaa
push
push
adc
sbb
insb
inc
xor
ret
xlat
rol
xchg
icebp
loope
std
mov
inc
dec
push
dec
es
or
push
pusha
outsb
push
cmp
cmp
cli
repz
sti
int
out
mov
ds
arpl
jae
add
outsb
and
dec
ret
mov
repz
fidivs
arpl
jae
add
outsb
and
dec
ret
mov
fwait
mov
jmp
insl
cmpsl
and
popf
push
inc
pop
mov
adc
jle
or
pop
cmp
aad
cld
sbb
mov
mov
sbb
lcall
aam
cmpsb
pop
incb
or
arpl
dec
icebp
jmp
sbb
nop
out
iret
add
xchg
lock
sub
lahf
pop
jne
addr16
in
and
sahf
jmp
fs
scas
or
and
vmovups
sahf
mov
mov
ror
icebp
cmp
fmull
jo
sbb
xchg
aaa
cmp
mov
sbb
ffreep
inc
and
fwait
jae
cmc
cmpsb
mov
mov
push
imul
cmp
stc
dec
xor
xchg
repnz
inc
push
jns
dec
push
faddl
pop
sarb
mov
aad
dec
cmp
js
xor
sbb
sbb
cwtl
inc
mov
mov
xchg
adc
jo
inc
repz
dec
ret
pop
pop
std
pop
ret
sar
test
mov
shrb
movsb
fsubrl
test
mov
mov
fdivl
out
aad
movsb
ret
add
scas
fcmovnb
jno
dec
in
jns
fs
cld
leave
or
cltd
xchg
xor
stc
loopne
into
xor
mov
dec
test
mov
stos
jne
push
popf
and
jle
stc
lret
xor
push
dec
jne
cmpsb
jp
pop
dec
aaa
stos
popa
dec
mov
push
mov
or
pop
push
gs
popa
mov
jecxz
in
cmp
push
rorl
push
test
inc
push
mov
mov
and
sub
in
into
push
decb
je
cli
mov
cmp
xchg
fdivrp
out
dec
mov
jns
inc
andb
dec
call
js
mov
jbe
orl
bound
pushl
std
movsb
pop
in
push
dec
lds
popa
leave
jmp
push
insl
and
jp
rol
icebp
sbb
push
lods
lret
cmp
dec
jg
mov
push
into
push
stos
repz
pop
scas
es
in
fsubr
jne
ret
jno,pt
push
daa
dec
and
jo
mov
scas
je
jbe
stos
push
and
mov
cmp
dec
insb
cmp
mov
movsl
add
jp
adc
xchg
icebp
enter
aam
or
nop
in
pop
push
mov
loope
cli
pushf
mov
fists
loop
mov
mov
out
mov
mov
cs
jmp
mov
add
std
aad
std
inc
mov
jnp
push
inc
out
cmp
leave
sbb
xor
adc
ret
stos
adc
out
sbb
push
mul
cld
xchg
out
pushf
dec
pop
rcrl
add
xor
cmpsl
jge
inc
inc
aaa
leave
pop
push
test
or
jge
sub
xchg
xchg
mov
sti
or
sub
in
mov
pop
pop
scas
mov
or
and
xchg
test
cmp
xor
es
aaa
mov
sub
mov
pusha
popa
mov
push
xlat
andl
rclb
lcall
cmp
sub
cmpsb
ret
loope
pop
mov
inc
out
push
mov
lods
sbb
je
xchg
sub
add
cwtl
xor
inc
mov
movb
ror
cmp
fsubl
aas
dec
or
pop
push
add
jbe
shlb
jne
sub
pop
jb
gs
sbb
fisubrs
push
mov
fnstenv
cld
push
dec
jae
xchg
xor
sub
jo
insl
idivl
dec
pop
sbbl
mov
or
inc
pop
push
pusha
push
rorw
inc
cltd
sbb
pop
xor
scas
jecxz
jb
fbstp
mov
je
enter
adc
dec
sbb
cmp
sub
inc
test
ss
lahf
loopne
aam
rcrl
pop
jecxz
pop
pop
int
or
xorb
push
lcall
mov
addl
jl
mov
popa
shrl
jnp
stos
cs
mov
and
dec
cmp
cmpsb
iret
test
lds
lods
xchg
dec
cmpsb
lcall
jnp
insb
cmc
cltd
out
lds
inc
sub
mov
cmp
lahf
pop
aaa
sbb
inc
and
dec
push
add
pop
aam
ret
sbb
sarl
push
jae
and
dec
dec
movsl
js
sbb
shll
rcll
inc
mov
pop
in
repz
xchg
jl
or
pop
bound
sub
mov
into
lahf
or
jle
xlat
ljmp
push
incl
fwait
xchg
inc
push
paddb
bound
add
inc
fdivrp
push
inc
out
addb
jae
fsubrp
and
inc
idivb
mov
add
sbb
bound
loop
out
inc
cli
xchg
sar
push
inc
xchg
int3
jno
test
mov
jmp
imul
loopne
jg
mov
stos
xor
xor
sarb
in
shll
scas
xchg
mov
fnstcw
push
js
leave
mov
mov
dec
aam
xor
xor
jle
and
das
jecxz
ret
xor
jae
stos
jno
rcrb
ss
enter
inc
stos
sbb
ss
cmp
repz
stos
mov
sub
je
cwtl
mov
imul
aaa
xor
pusha
fimull
ds
xor
xchg
sti
push
fadds
in
xor
xorb
fs
aas
inc
xchg
inc
daa
jmp
mov
and
xchg
xchg
mov
nop
sahf
mov
mov
mov
mov
cld
mov
imul
inc
xchg
push
lret
push
in
push
test
ret
test
mov
lods
jmp
ljmp
sub
mov
inc
inc
and
pop
fisubs
xor
push
sarb
or
adc
cmp
mov
sahf
inc
cmp
mov
fcmove
test
jmp
ljmp
mov
dec
fst
inc
aad
push
xchg
xchg
lret
dec
ficompl
sub
sub
hlt
hlt
push
sbb
in
inc
cmp
gs
xchg
dec
test
mov
and
je
push
mov
lea
xchg
into
sarb
test
jns
cmc
loop
dec
in
fcoml
mov
fnstsw
outsl
sti
pop
pop
in
xchg
mov
mov
or
add
cmp
mov
ja
sub
fistl
lcall
jp
lods
pop
xchg
jb
add
pop
cwtl
outsl
jo
push
cmp
in
push
pushf
data16
inc
mov
cmpsl
push
fcmovnu
cs
xlat
pop
out
xor
rcrb
inc
outsb
mov
ret
ret
into
cmc
repz
scas
jecxz
xchg
xchg
rolb
clc
adc
jg
aam
adc
stc
push
out
shlb
add
lcall
mov
xchg
or
fs
mov
loopne
insb
repz
xchg
sbb
popf
pop
movsb
test
pop
cmp
out
mov
out
xchg
dec
or
or
push
jge
mov
iret
leave
stos
stos
sbb
push
push
js
outsl
lods
insl
push
scas
fwait
rclb
shrb
outsl
out
and
push
cltd
xchg
cmc
arpl
mov
rorl
mov
mov
mov
sbb
pushf
push
mov
pop
cwtl
rcrl
push
mov
int3
mov
ret
add
add
fcmovbe
jl
scas
fildll
xchg
mov
jmp
xchg
xchg
xchg
or
add
lds
stos
sbb
stos
xchg
les
mov
and
adc
cmp
out
fsubrs
clc
les
mov
mov
jmp
filds
jo
jmp
cs
mov
pop
iret
mov
ljmp
jnp
inc
sub
dec
scas
int
nop
arpl
cmp
add
mov
mov
imul
cmp
negb
test
fbstp
insl
and
fildl
rclb
push
out
pop
mov
scas
and
scas
mov
inc
dec
loopne
stc
jp
sahf
and
sarl
es
insl
js
inc
es
mov
das
cmp
push
imul
cmp
cmp
cmpsb
jle
pop
les
jno
mov
test
repz
inc
in
mov
cli
bnd
xchg
sub
push
hlt
push
adc
stc
lret
icebp
jmp
cmp
xchg
dec
mov
inc
xchg
jne
imul
adc
or
out
rorb
imul
out
rolb
mov
js
add
jno
stos
cli
adc
xchg
xchg
mov
mov
jle
nop
clc
lods
push
int
xchg
cmpsb
pop
shll
xchg
add
sti
ja
inc
loope
bound
mov
sub
dec
jbe
pop
cmp
mov
adc
jl
jbe
out
pop
fmulp
lds
jecxz
add
sub
scas
loope
mov
imul
adc
lahf
mov
fwait
push
mov
mov
gs
cmp
add
das
adc
lret
dec
xchg
popf
inc
rclb
sbb
movsb
sub
cmp
arpl
or
sub
aaa
mov
mov
imul
clc
xchg
mov
add
adc
jmp
push
pop
out
cmp
fld
lcall
sub
pop
loope
sub
jnp
mov
ret
icebp
fstps
mov
and
fiadds
test
hlt
push
ss
ss
lret
fcmovne
pop
pusha
mov
out
outsb
popf
fstps
cmp
xor
push
sti
subb
js
xchg
pop
xchg
push
or
sub
dec
ret
into
sub
outsb
mov
xor
nop
cli
fs
fwait
lods
pop
cmpsl
mov
jge
or
shrb
adc
loopne
and
pop
xor
add
inc
ja
insb
sbb
fwait
jb
jno
or
testl
nop
pop
ss
fidivl
jl
aas
cmpsl
je
dec
pop
mov
sbb
add
mov
cmp
fildll
or
jae
inc
cld
sar
sub
add
adc
inc
ds
mov
jno
pop
sub
cmp
cmp
sub
pop
into
mov
xchg
jecxz
dec
sti
sub
ss
mov
fsubrl
test
mov
dec
and
jns
xor
xlat
mov
stos
sub
cld
jmp
popa
ret
dec
lds
dec
sbb
nop
mov
insl
rcl
fwait
push
cmc
lret
stos
add
icebp
repz
push
mov
jecxz
lahf
test
loopne
les
xchg
nop
mov
dec
or
push
clc
adc
jnp
arpl
mov
fcomip
enter
or
lock
es
adc
ds
ljmp
dec
mov
sub
outsb
or
mov
es
xchg
push
das
ret
push
fwait
or
hlt
push
pusha
outsl
stos
xchg
adc
sbb
cmp
ljmp
clc
xor
push
mov
sar
mov
fcmovne
or
cmp
push
adc
mov
pop
pop
andb
inc
je
xchg
dec
sub
fisttpll
stc
mov
and
and
push
add
fcmovnbe
sub
out
cmp
cltd
out
xchg
test
inc
and
xlat
out
add
into
push
inc
add
in
add
cmp
dec
movsl
inc
jmp
push
sbb
dec
adc
cmpsb
mov
xchg
fstpt
xchg
fiaddl
ljmp
mov
lds
rol
mov
inc
movsl
inc
out
add
or
loopne
sbb
mov
sub
cmp
mov
xchg
adc
dec
aaa
insl
imul
xchg
adc
mov
jmp
dec
stc
jae
push
cmpsl
std
mov
push
divb
pop
aad
jne
lahf
in
pop
imul
and
jecxz
sub
test
dec
je
shrl
fisubrs
adc
out
repz
cmp
sbb
in
xchg
test
in
adc
cltd
stos
mov
rclb
push
mov
adc
pop
sbb
jg
pushf
xor
xor
test
mov
dec
je
push
insb
fidivrs
jo
add
out
jnp
lock
mov
imul
adc
shll
mov
fdivr
hlt
pop
daa
pop
jmp
inc
mov
das
add
and
mov
jo
xor
adcl
leave
dec
dec
roll
xchg
push
cmp
cmp
dec
sbb
lahf
dec
aam
mov
popf
adcl
xchg
inc
out
aam
fdivs
test
add
sub
mov
sub
mov
lock
jge
inc
xor
jae
addr16
popf
cltd
stc
filds
ja
outsb
push
sub
das
mov
sbb
out
lock
push
iret
sbb
aad
xchg
xlat
xor
push
mov
xchg
mov
jno
mov
xor
arpl
cmp
test
sbb
nop
iret
call
jl
or
addr16
mov
test
jmp
cmp
shll
lahf
lock
sbb
cmpl
movsb
fs
movsb
jecxz
lods
push
rcl
cmp
movsl
push
xorl
cmp
mov
jmp
ja
bound
xchg
cli
add
jne
aaa
ss
int
mov
and
fwait
lcall
jp
jmp
loope
lahf
cmpsb
xchg
mov
cmp
cli
pop
push
sbb
jb
adc
mov
adc
jg
ljmp
push
stc
test
imul
cmp
and
lds
dec
push
iret
ret
jbe
mov
and
je
fs
cmpsl
sbbb
mov
inc
out
mov
pop
in
cmp
inc
in
in
inc
loop
fdivl
fldenv
stos
inc
fst
dec
push
in
lods
fidivl
out
fs
lret
or
movl
jmp
test
mov
sbb
xchg
lods
sbb
cmc
push
lea
xchg
inc
movsb
pop
and
mov
or
mov
sbb
enter
mov
jmp
scas
dec
sub
fsubrl
mov
call
mov
mov
sti
or
icebp
test
push
repz
dec
xchg
mov
jmp
pop
and
jmp
repz
mov
ss
xor
cmp
add
jae
lcall
orb
inc
mov
cmpsb
lret
aad
imul
xchg
jns
imul
inc
push
xchg
jge
adc
mov
dec
sti
mov
in
idivl
and
je
xchg
loop
inc
sbb
pop
adc
mov
ljmp
xor
push
sub
insl
fsubrl
mov
dec
adc
xchg
jne
or
inc
loope
jecxz
lods
inc
push
incb
and
insb
insl
mov
push
fnsave
adc
push
xchg
ds
inc
add
cmpsb
lock
or
insb
lahf
push
pop
sub
adc
sahf
mov
mov
aas
iret
scas
xchg
out
mulb
push
fwait
loop
cs
sub
fdivs
cmpsl
test
outsw
lods
adc
out
stc
push
cld
mov
outsb
fwait
mul
shlb
inc
bound
cmp
sub
movsb
movsb
push
sbb
mov
mov
push
iret
das
sbb
xchg
stc
sub
test
jne
fnstsw
push
jne
sbb
ljmp
mov
hlt
dec
sub
repnz
xchg
push
mov
fistl
push
outsb
sti
adc
jg
insl
mov
insl
ror
sub
push
mov
aad
int3
add
in
or
xlat
push
or
mov
out
xchg
xchg
in
dec
js
cli
ja
cmp
push
xor
test
mov
xchg
femms
xchg
push
in
out
jmp
jb
mov
and
push
cmp
cltd
sbb
push
jecxz
int3
lret
ljmp
xor
jp
leave
std
xchg
je
out
fnsave
pop
xlat
ds
std
adc
jno
pushf
icebp
mov
daa
dec
mov
add
add
imul
add
in
jmp
adc
xor
lret
enter
push
psubusw
push
mov
ja
push
add
xchg
xchg
addr16
mov
pop
and
xor
xor
dec
mov
jg
cmp
mov
lret
xchg
pop
jo
aaa
adc
lods
fisubrs
sti
sub
push
es
xchg
adcl
inc
popa
push
arpl
lcall
mov
icebp
inc
jne
dec
mov
push
xor
sahf
pop
push
stc
mov
pop
inc
pop
adc
fisubrl
movsb
cmpsb
dec
outsb
nop
in
inc
imul
sub
out
shrb
fisubrl
in
mov
push
sub
xor
sti
pop
outsb
sub
arpl
jnp
cmpsb
pop
mov
insl
xchg
adc
fwait
jle
ret
inc
jo
les
push
or
adc
out
cmp
std
fdiv
fistps
jp
clc
test
ss
cvtpi2ps
dec
incb
fstpl
mov
loop
jo
es
fmull
mov
clc
pop
into
mov
and
insb
int3
push
jo
js
mov
fwait
sti
loopne
jp
out
je
ret
rorb
pop
push
sbb
fcom
inc
mov
jecxz
cmp
dec
mov
adc
cmp
fmull
and
jae
jg
pop
inc
in
mov
adc
push
sbbb
icebp
push
fs
push
inc
scas
das
int
fdivrl
and
loop
push
inc
xlat
mov
xchg
sub
mov
nop
pop
jbe
popa
jle
mov
hlt
cwtl
scas
push
cmp
ror
push
push
add
push
rcl
jns
les
scas
les
roll
pop
pop
test
ficomps
jnp
dec
xchg
jnp
inc
mov
dec
scas
std
mov
pusha
cld
js
jle
call
pop
cmp
daa
pop
add
xor
cmc
xor
into
jmp
sbb
iret
mov
push
mov
scas
xchg
sbb
mov
stos
cmpsl
or
orl
push
int3
lods
nop
rolb
lock
sub
pop
and
lcall
xchg
js
stos
cmp
xor
xchg
pop
inc
pop
sub
inc
popa
mov
data16
dec
pop
jno
popf
mov
repnz
xchg
testl
fs
cwtl
loope
ja
aam
call
out
shlb
or
and
sahf
add
inc
popf
repz
mov
movsl
mov
es
clc
call
xor
mov
bound
nop
mov
mov
je
ds
out
inc
pop
inc
iret
and
lret
mov
std
dec
int3
cmpsb
fwait
les
sti
ja
sbb
incl
mov
pop
or
ret
fldt
outsl
dec
mov
mov
or
jae
outsb
pusha
sti
adc
cmc
inc
jne
call
dec
filds
lea
mov
inc
cmp
mov
mov
jnp
call
push
xor
lods
xchg
dec
subb
scas
loopne
inc
adc
fprem1
and
mov
sbb
adc
decb
mov
jnp
mov
pop
inc
out
sub
adc
jle
sub
iret
repz
movsb
std
mov
and
xchg
jmp
daa
cli
pop
test
inc
jae
inc
addl
lret
cmp
jl
sbb
push
or
cmpsl
jno
ljmp
and
jmp
je
in
out
notl
inc
in
sarl
mov
sub
data16
push
daa
enter
mov
nop
jo
rolb
jmp
stc
lods
test
mov
ja
lea
cli
and
push
test
dec
xchg
or
out
mov
rorb
lcall
daa
push
lock
adc
mov
sbb
push
fistpll
push
or
test
inc
inc
push
mov
mov
push
enter
sub
or
xor
jmp
cli
int3
push
ret
push
loopew
lret
dec
xor
call
add
rorl
bound
xchg
and
gs
inc
jl
dec
fstl
ss
cmp
mov
scas
sub
xchg
add
mov
addr16
push
pop
pop
scas
xor
cmc
fucomi
sti
and
dec
imul
scas
and
std
mov
rcrl
mov
mov
bound
popf
adcl
sub
xchg
lock
mov
cmp
pushf
insb
bound
sub
ljmp
lret
mov
xchg
test
dec
std
mov
repz
jmp
and
in
push
lahf
fdivrl
imul
inc
adc
cmp
pusha
dec
or
or
adc
adc
dec
pusha
out
mov
pop
xor
in
add
rol
mov
inc
ret
out
call
mov
emms
mov
dec
add
or
insl
dec
loop
jno
pop
mov
inc
dec
mov
insb
scas
inc
sahf
repz
fidivs
arpl
jae
add
outsb
and
dec
ret
mov
repz
fidivs
arpl
jae
add
outsb
and
dec
ret
mov
repz
fidivs
cs
jae
add
outsb
and
dec
idivl
repz
fidivs
push
mov
push
jae
je
fwait
adc
and
xor
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
std
std
in
adc
and
xor
sub
insl
sahf
pop
mov
mov
ret
sbb
add
adc
and
xor
bound
xchg
sub
sub
repnz
sbb
adc
cmp
sub
jp
push
xlat
arpl
push
mov
repnz
in
jnp
push
mov
mov
cld
jbe
mov
cmpsb
push
in
sub
test
sub
sub
add
shlb
cmp
add
jge
push
jecxz
mov
sahf
jge
pop
push
mov
shlb
mov
and
bound
lea
jge
rolb
dec
ret
xchg
inc
sub
add
cltd
repz
cmc
rolb
bound
jae
setno
mov
das
pop
std
loop
or
lcall
mov
pop
push
ljmp
mov
mov
sbb
add
add
mov
jnp
imul
mov
dec
stos
cmp
loop
xchg
mov
and
cmp
push
int3
pop
cmp
imul
pop
scas
inc
sbbl
lahf
adc
xor
pusha
popf
push
lea
sbb
outsl
repz
or
pop
mov
mov
xchg
inc
mov
inc
int3
inc
mov
bound
xchg
pop
mov
sub
repnz
add
adc
and
xor
bound
xchg
pop
mov
sub
repnz
add
add
and
add
and
xchg
lcall
pop
mov
fmul
xchg
xchg
aaa
sbb
out
hlt
xchg
xchg
dec
mov
fstpl
dec
xchg
push
push
ficomps
jg
cltd
mov
daa
test
insb
sbb
fidivrs
test
pop
pop
and
inc
dec
lock
and
adc
mov
push
sub
shrl
push
jle
push
sarb
out
out
or
loopne
mov
jmp
stos
lcall
adc
mov
or
push
lret
loop
jb
inc
xor
adc
cmp
adc
ret
je
sub
mov
insl
fwait
push
das
lods
cli
and
or
out
addr16
xchg
sbb
xchg
pusha
clc
sbb
cmc
pop
adc
dec
xchg
jp
or
rcr
and
popa
mov
dec
xor
fmull
es
dec
and
inc
mov
pop
push
mov
loope
mov
mov
das
pusha
js
mov
jno
int3
cltd
mov
mov
and
mov
mov
loope,pn
adc
push
call
insb
dec
ss
shll
push
inc
mov
cmpsl
rcrb
mov
daa
daa
lret
dec
xchg
cltd
shll
mov
dec
insb
mov
and
leave
inc
popa
push
sbb
lods
mov
icebp
ss
xchg
frstor
and
lds
fidivrl
adc
jne
gs
jecxz
pop
push
inc
mov
aam
mov
sub
mov
out
int3
ret
mov
sub
testl
cltd
in
ja
ds
mov
push
mov
aas
mov
in
and
pop
out
sub
and
std
cli
int
inc
and
pop
ljmp
mov
and
insl
mov
outsb
movsl
pushf
mov
lock
aam
fisubl
or
and
lods
les
xor
sub
lret
xchg
inc
lock
jno
fildll
mov
es
inc
adc
repnz
dec
lahf
cs
das
inc
lahf
pop
mov
movsl
mov
outsl
or
sarl
imul
xchg
push
mov
mov
and
sub
sub
sub
popf
dec
fwait
call
clc
mov
push
push
outsl
inc
sbb
xor
mov
adc
mov
cmc
dec
repz
jns
push
jl
test
test
mov
lods
fsub
mov
int3
lock
xchg
or
imul
daa
sahf
lret
dec
mov
ljmp
inc
mov
push
btr
js
test
inc
dec
fildl
jnp
push
cmp
sub
cld
shlb
pop
out
pop
or
cmpsl
xchg
and
cmp
sub
sarl
mov
push
xchg
imul
mov
sub
xor
sahf
shrb
outsb
pusha
jns
insb
xchg
or
imul
mov
insb
mov
rorl
js
loopne
add
xor
push
enter
xor
xor
loopne
mov
mov
and
push
cmp
push
mov
dec
gs
mov
stos
fwait
int
xchg
cld
aam
fld
mov
cmc
sub
fst
pop
or
push
cmp
jge
in
cltd
test
hlt
fmull
cmp
mov
jae
jecxz
xlat
sbb
xchg
jle
add
xor
xchg
daa
xchg
mov
jns
add
je
sbb
imul
in
inc
lock
fildl
add
lock
repz
insl
mov
jns
mov
xor
jns
pushf
imul
xchg
and
and
nop
outsb
xor
push
std
test
or
jg
test
dec
mov
pushf
mov
xchg
or
sbb
add
cmp
enter
dec
cs
mov
insb
cmp
cld
popf
into
loop
shl
and
sub
adc
or
out
or
repz
repnz
js
sbb
xchg
push
cs
icebp
inc
mov
pop
lods
pop
and
fists
iret
sub
and
fadd
sub
mov
push
sub
add
push
pop
mov
stos
in
mov
mov
mov
fwait
adc
xchg
test
ds
scas
lds
inc
mov
dec
mov
mov
and
mov
fists
or
mov
arpl
mov
fists
push
cltd
cmp
mov
lods
lcall
cmpsb
pop
les
test
repnz
mov
jecxz
shll
fnstenv
inc
cmc
push
push
leave
in
lahf
movsb
pop
lahf
adc
jne
adc
xchg
rcll
repnz
popf
outsl
push
lret
push
popa
add
out
mov
push
dec
repz
imul
add
jecxz
add
sbbl
push
hlt
dec
cmp
mov
sub
seta
jge
test
jmp
pop
pop
aaa
rcrl
pop
push
lds
cmp
sbb
jb,pn
movl
hlt
xor
pop
imul
jmp
ss
sub
cltd
xchg
mov
test
enterw
cmp
shlb
repz
dec
cmpsl
and
lret
stos
xchg
pop
pop
dec
or
dec
popf
es
cld
xchg
pop
push
and
xchg
shl
xor
ss
cs
movsb
xchg
sub
pop
mov
test
je
xchg
mull
lea
inc
std
popf
and
jo
jge
push
xor
aam
jmp
cmp
clc
lret
and
es
in
pop
aad
in
xchg
xor
mov
xor
pop
sahf
sti
pop
jl
movlps
or
add
jmp
ret
call
movsb
mov
mov
dec
pop
pop
dec
movsl
and
add
dec
push
add
jno
or
popl
cmpsl
cmpsb
xlat
mov
scas
fcoms
jno
fcomp
sbb
mov
inc
stos
ficoms
ds
xchg
testb
push
aas
push
lret
cmp
int3
inc
int
mov
adc
incb
add
or
mov
push
mov
mov
lret
into
incb
in
fsubrl
mov
xchg
cmpsl
and
lahf
or
jo
orl
fcmovu
mov
mov
and
push
daa
shlb
sarb
daa
and
mov
xor
mov
pop
insl
outsb
roll
fdivs
adc
xchg
stc
negb
sub
mov
js
insl
xchg
inc
sub
push
cmp
das
lahf
loop
scas
mov
rep
push
push
sbb
bound
mov
imul
ss
jb
push
jge
aad
mov
mov
mov
popa
cmpsb
mov
jbe
enter
xor
fbld
xchg
movb
jp
sarl
sbb
icebp
xchg
fisttps
mov
iret
add
mov
or
xor
cltd
shl
imul
add
xor
pop
roll
loop
insb
inc
nop
jmp
xor
into
fistl
pop
mov
int
push
xchg
out
pop
bound
xchg
push
cwtl
sub
jae
push
push
and
inc
dec
xchg
pop
shlb
push
or
ds
mov
and
xchg
je
add
xchg
push
push
sub
adc
push
in
inc
jnp
dec
jmp
xlat
fwait
aas
fildl
mov
jae
rolb
nop
adcb
rcl
push
lret
adc
insl
xor
lea
xchg
and
cltd
fnstcw
daa
and
lret
loope
std
xchg
or
xchg
loope
mov
or
sbb
ljmp
dec
mov
jns
xchg
and
mov
and
cmp
in
inc
adc
adc
cld
mov
das
xchg
push
imul
ret
or
push
enter
add
cmpsl
mov
mov
popa
insl
dec
lea
inc
in
xchg
push
mov
bts
out
aad
xchg
test
sub
inc
popf
cmc
mov
daa
nop
clc
iret
pop
xchg
cmp
inc
xor
ljmp
xchg
mov
add
pusha
jle,pn
xor
pop
mov
mov
test
test
stc
add
adc
or
adc
cmp
mov
test
shll
rcrl
std
or
mov
add
divb
mov
cli
jmp
inc
call
push
nop
pop
fcoml
clc
cmp
push
cmp
test
pop
ret
aam
aad
pop
adc
ljmp
scas
sub
jge
nop
push
in
mov
jge
cmp
pop
adc
test
es
mov
pop
ror
imul
clc
rcl
jp
xlat
xchg
xchg
or
stc
movsl
call
lds
push
pop
out
dec
inc
imul
lret
inc
fisubrl
jno
pop
add
fs
xchg
inc
lds
mov
enter
dec
jmp
mov
xor
insb
movsb
loopne
loop
fs
out
sbb
nop
insb
lea
add
int
js
fistpl
popf
ret
add
cmpsl
imul
pop
push
push
mov
push
subb
sub
push
sbb
lret
repz
hlt
out
cs
mov
adc
mov
fdivl
test
mov
scas
in
mov
xchg
pop
data16
and
cmp
jbe
xchg
or
adc
dec
and
xor
jb
fldcw
or
and
sti
sarb
es
faddl
dec
cmp
je
test
push
daa
xchg
iret
arpl
lods
inc
int3
pop
jmp
mov
inc
mov
jb
fwait
lcall
xlat
push
jecxz
sbb
rol
cmp
and
and
idivb
icebp
jg
adc
fiadds
fwait
or
pop
insl
ret
push
xchg
lahf
dec
scas
mov
dec
jl
pop
cmove
jno
mov
mov
pop
pop
fadd
lea
fldl
xor
mov
mov
push
stos
or
data16
adc
fwait
notb
stos
imul
sub
outsl
mov
mov
test
lods
xchg
mov
xchg
jecxz
xor
ja
rcll
daa
shll
adc
jo
mov
imul
cmpsl
call
jmp
xor
mov
or
aam
sarb
imul
das
nop
mov
mov
test
jne,pt
pop
pop
xor
inc
pop
shl
in
lahf
pop
add
add
pop
test
imul
pop
mov
pop
push
lret
test
cmp
jbe
in
xchg
adc
push
call
jns
lods
push
in
lret
xor
dec
pop
jle
fcompl
mov
adc
into
ret
add
leave
dec
repz
stc
push
lods
repnz
sbb
mov
and
mov
jmp
mov
testl
add
mov
push
frstor
push
mov
xor
lea
fidivrs
mov
xchg
cli
gs
imul
push
aas
push
mov
out
xchg
mov
in
push
scas
xrelease
fcompl
hlt
imul
mov
iret
xor
ss
sahf
lock
fsubs
jg
fsubrs
mov
push
cwtl
lea
test
push
and
mov
mov
adc
icebp
iret
leave
add
repz
sub
or
insb
xchg
jmp
adc
nop
popf
jbe
popf
cld
rcrl
dec
sub
sbb
in
sar
jmp
or
insb
and
pusha
movsb
sbb
cmp
repz
jae
sahf
mov
cs
inc
pusha
loopne
xor
jle
cmpsb
lret
das
ljmp
in
mov
jne
movsb
xchg
std
pop
or
push
add
xor
pop
sbb
addr16
adc
js
and
xchg
pop
in
dec
cmp
bound
test
jb
sub
movsb
cmpsl
sub
fucom
and
xor
fiadds
inc
jns
mov
and
fnstcw
push
sti
adc
mov
outsl
jp
adc
loop
inc
mov
iret
adc
lcall
push
or
and
jl
aas
push
sahf
cmpsl
ja
call
sub
cld
pop
out
xor
cmp
lods
adc
movb
adc
and
cmpsl
pop
adc
leave
inc
cmp
ret
push
sbb
aad
xor
mov
xchg
xchg
rorb
sti
mov
sbb
movsb
cmpsb
scas
cmp
leave
into
inc
mov
test
cmpsl
and
data16
repnz
pusha
frstor
bound
int3
inc
or
icebp
or
push
jo,pn
pop
inc
push
sarl
int
sub
jge
loope
mov
into
push
mov
int3
in
mov
mov
adc
cmp
xor
push
adc
lds
fadds
jb
jge
inc
adc
mov
sub
stos
push
jnp
sti
xchg
xchg
les
mov
mov
cli
mov
sub
ds
pushf
in
loop
cs
cmp
adc
clc
sahf
cmc
push
hlt
adc
jnp
rcll
iret
shr
decb
shr
or
aad
mov
ljmp
stos
stos
sbb
cwtl
mov
movl
mov
test
and
rorl
bound
and
jno
sbb
jae
and
popa
xchg
in
jle
mov
jae
mov
fstps
fisubs
mov
mov
stos
inc
or
sub
dec
push
lcall
add
cmc
xchg
mov
jmp
xchg
cmp
inc
arpl
and
or
std
mov
xchg
test
add
push
jmp
pusha
adc
push
std
lcall
addr16
fs
imulb
mov
dec
sub
orb
imul
and
pop
mov
insb
dec
or
push
add
hlt
cmp
shlb
dec
xchg
ret
fiaddl
pop
jns
inc
sbb
mov
adc
sub
mov
jo
and
inc
cld
out
jle
dec
test
push
repz
cmpsl
dec
adc
push
shll
jl
fstpl
outsl
pop
sti
sbbb
popa
jns
jns
sti
aaa
xor
mov
cwtl
xchg
xchg
jae
or
out
inc
hlt
xchg
sbb
jle
icebp
cld
mov
jmp
mov
cmp
lahf
leave
gs
data16
addl
arpl
sarb
repz
insb
clc
pop
rorl
inc
rcrl
aaa
xchg
ret
popf
jp
mov
cli
scas
adcl
and
pop
xor
mov
mov
call
stc
std
lods
popf
pushf
or
ljmp
out
outsl
lock
or
daa
jne
dec
ja
sbb
add
push
inc
xchg
arpl
add
sub
aam
std
jne
mov
add
pop
roll
xor
mov
jb
xchg
ljmp
mov
mov
sub
sti
dec
cvtps2pd
jns
cmpsl
mov
jno
adc
sti
cmp
in
aas
ds
sub
dec
add
mov
dec
ljmp
xor
ret
cmpsl
sbb
std
into
cmp
xchg
sbb
mov
pop
mov
sbb
dec
mov
xchg
popa
aaa
flds
sbb
adc
sbb
xchg
xchg
fidivl
add
xlat
or
mov
xor
test
xchg
push
jg
sbb
imul
jecxz
cmp
jmp
out
mov
jg
xchg
shr
inc
test
push
inc
jp
push
adc
nop
or
in
movsb
lahf
stos
ds
pop
mov
adc
repz
mov
dec
adc
lods
das
xchg
dec
jae
pushf
lret
cmpsb
sub
add
pop
mov
test
inc
pop
leave
pop
jmp
movsb
xchg
adc
idiv
popa
in
pop
lock
mov
ja
xor
jae
dec
shll
test
imulb
rcll
dec
loope
mov
or
and
xchg
mov
dec
push
push
mov
or
jns
adc
or
push
insl
push
jo
dec
xchg
xchg
leave
sbb
cmp
jnp
inc
add
jnp
cmp
and
imul
sub
and
xchg
fmuls
ss
insl
int
xor
jp
stos
popf
or
sub
xchg
pop
int3
mov
dec
pop
stos
adc
push
or
dec
ljmp
fdivrs
mov
cmpsl
jb
jmp
pop
pop
or
lahf
enter
fwait
adc
adc
cmp
add
xchg
lret
mov
mov
cmpsl
xchg
outsb
inc
stos
je
lahf
xchg
sti
mov
mov
cmp
es
mov
stos
inc
loop
repz
scas
cmp
test
iret
xlat
mov
mov
pusha
aaa
fisttpl
shl
andl
mov
xchg
inc
lock
xchg
test
not
xchg
stc
inc
add
and
cmp
dec
dec
fimull
xchg
cltd
sub
mov
mov
jp
jg
ja
jns
out
jle
sti
adc
bound
sub
scas
dec
and
xchg
and
push
and
mov
sbb
jo
movsl
cmp
insl
in
jl
adc
xor
mov
pushf
sti
or
xor
adc
fidivs
or
aas
fildl
jae
imul
mov
and
cmp
and
xor
hlt
cld
pop
sti
adc
xchg
jle
leave
popf
inc
das
sbbl
pop
or
jb
and
rcll
cmp
cmpsl
sbb
mov
xchg
lock
and
jg
cmc
ret
pop
jp
cs
adc
sub
push
stos
sub
mov
mov
idivl
mov
dec
and
push
mov
pop
xor
xchg
push
insb
adc
jo
and
mov
loop
movsl
xchg
cmp
in
sbb
hlt
dec
xchg
cs
cmp
leave
xchg
jo
and
or
jge
sub
movsb
jno
sbb
hlt
jmp
inc
nop
mov
mov
les
sub
fcmovu
iret
and
sbb
push
inc
push
add
js
mov
xor
pushf
inc
in
outsl
push
enter
sbb
xchg
loopne
ret
sbb
sbb
sub
arpl
jmp
xchg
fcmovne
dec
cmc
jmp
mov
mov
mov
ficomps
add
jle
jnp
jle
add
pop
mov
pop
or
push
ja
movsb
pop
push
sbb
dec
dec
xor
inc
inc
inc
lcall
sub
mov
xor
jl
or
jmp
or
push
push
insb
pop
scas
outsl
sbb
rcrl
loopne
mov
outsl
jbe
jl
or
arpl
add
pop
inc
fbld
xchg
sub
sbb
pop
aaa
pop
push
inc
fldt
les
cld
ret
fisttps
sub
or
fisubrs
and
mov
es
mov
push
push
mov
sti
inc
jl
dec
cwtl
test
rclb
push
roll
aam
push
inc
pop
inc
mov
xor
mov
dec
rcll
inc
mov
cmp
enter
popf
loop
push
stc
pop
ss
aam
mov
into
insl
xorl
movsb
aam
pushf
lods
jo
je
cmp
mov
mov
stos
mov
mov
loop
stc
scas
or
popa
arpl
fists
popf
add
jbe
mov
dec
xchg
js
pop
addb
sbb
mov
insl
jns
cmp
aam
mov
mov
or
test
or
enter
xchg
pop
out
or
movsb
mov
xor
push
xor
cli
lds
sub
insb
xor
ss
push
imul
jbe
mov
lds
les
orl
cmpl
jmp
lret
mov
ja
mov
js
inc
int3
jg
movsb
arpl
push
shrl
and
out
and
pusha
adc
mov
xchg
inc
and
cmp
and
and
push
sbb
and
jp
out
mov
mov
into
xor
sub
fucomp
mov
inc
xchg
add
and
sbb
mov
push
cmpsl
les
jg
sbb
orl
mov
aas
or
int3
bound
out
dec
stos
inc
push
sahf
ds
pushf
mov
stos
out
sub
cmpsl
div
cmpsl
push
jl
add
mov
jmp
mov
scas
jo
jne
push
dec
mov
stc
cwtl
stc
cmp
pop
inc
stos
jbe
std
cmpsb
dec
movsl
push
shll
pop
jb
and
imul
insb
pop
outsl
xor
xchg
sub
sub
shrb
out
mov
ret
aam
ret
stos
sbb
jmp
arpl
add
leave
inc
push
xor
mov
fdivrl
xor
bound
xchg
pop
mov
sub
repnz
add
adc
and
xor
bound
xchg
pop
mov
sub
repnz
add
adc
and
xor
bound
xchg
pop
mov
sub
repnz
add
adc
and
xor
bound
cmp
mov
movsl
sub
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
in
int3
insb
fcompl
cld
xchg
push
push
mov
cmp
cmp
int3
insb
fcompl
dec
cld
cmp
sub
sbb
or
cld
dec
in
pop
mov
imul
pop
in
dec
cld
cmp
sub
sbb
or
cld
dec
in
jg
or
inc
mov
subb
sbb
mov
or
out
aas
mov
shll
popf
aaa
mov
cmp
roll
clc
sub
loope
sub
and
xchg
and
mov
test
push
inc
xchg
xchg
je
stc
fsubrl
push
ds
push
xchg
ja
jg
dec
mov
addl
insb
and
mov
insb
leave
jl
mov
pushf
cld
movsb
or
in
mov
mov
pop
sbb
cld
mov
cmp
or
and
adc
aam
and
sbb
or
xchg
mov
dec
mov
les
inc
jae
test
leave
hlt
fadd
in
in
lret
dec
cmp
sbb
enter
popf
sub
ret
and
insb
fcompl
cld
cmp
sub
sbb
or
cld
dec
in
pop
fsubrl
mov
sub
jp
int3
sub
jg
dec
call
xchg
cmp
inc
mov
test
enter
icebp
pop
clc
pop
and
add
pop
iret
dec
fstps
je
scas
sub
imull
mov
dec
xchg
push
aas
mov
mov
or
cld
dec
in
pop
fsubrl
mov
sub
cmp
int3
insb
fcompl
cld
cmp
sub
sbb
or
cld
dec
in
pop
fsubrl
mov
sub
cmp
int3
imul
dec
jns
pop
outsb
sti
clc
pop
jmp
mov
pop
push
xchg
stos
mov
xchg
sub
ljmp
sub
imul
out
icebp
xlat
cmp
xlat
adc
lret
xchg
test
push
das
dec
aas
mov
and
mov
push
push
pop
int3
andb
rol
pop
xchg
fwait
ja
int3
mov
or
xchg
xchg
cwtl
in
pop
imul
xchg
nop
adc
jo
jnp
xchg
cs
stos
and
frstor
dec
jecxz
jl
cwtl
jl
in
out
pop
or
add
xchg
sbb
xor
mov
imul
jl
cs
inc
inc
dec
mov
test
pop
push
repz
lds
shlb
test
cmp
jg
das
cmp
daa
into
es
out
cmpsb
xchg
inc
xchg
jae
in
sub
mov
cmp
and
add
xor
push
stc
ret
scas
cmpsb
xchg
adc
loop
dec
mov
sarb
inc
pop
insl
aam
push
mov
stos
sub
xchg
inc
add
jnp
or
cmp
push
out
inc
mov
push
lock
daa
jns
jnp
pop
out
add
cli
fildl
mov
nop
push
cmp
mov
sub
or
add
shrb
lahf
pop
fnsave
dec
cli
xor
push
mov
dec
mov
stc
imul
ret
xor
or
dec
leave
adc
inc
orb
mov
push
dec
fistpl
in
mov
push
mov
lret
mov
xchg
and
inc
sub
pop
sub
mov
lock
pop
mov
lret
or
test
insl
xor
out
insl
xor
mov
movsl
xchg
add
es
push
jl
adc
outsl
or
fldenv
sub
and
pop
fcomps
jne
mov
pop
or
sbbl
out
mov
lcall
into
out
loope
hlt
insb
inc
xor
xor
daa
fstps
mull
dec
push
cmp
dec
fistl
cmc
sbb
lret
sbb
out
pop
cmpsb
inc
xor
mov
mov
inc
jmp
xor
ss
cwtl
insb
rolb
out
mov
out
and
roll
scas
rcl
xchg
jb
or
scas
jge
roll
daa
xchg
dec
fcom
leave
or
jns
add
xchg
shlb
xor
sbb
mov
imulb
stos
dec
mov
pop
lock
xchg
mov
sub
mov
adc
or
jnp
dec
sub
jecxz
repz
popw
sub
add
add
xchg
add
stc
pop
das
dec
and
loopne
adc
adc
stos
cs
mov
out
inc
mov
dec
aad
pop
fidivrl
icebp
cltd
test
jmp
sti
in
mov
jo
add
aad
fldl
loop
jb
in
add
jo
lods
ss
cli
fildll
sbb
hlt
data16
iret
gs
add
call
push
add
inc
xor
out
push
sub
popa
cmpsl
dec
in
dec
pop
fs
aam
push
lock
jnp
cltd
shll
subb
xchg
pop
in
sbb
aaa
jecxz
add
cmpsb
lret
int3
dec
stc
dec
inc
rcrb
bound
xor
push
jmp
and
sarl
xor
pop
aaa
jmp
pop
sbb
mov
push
dec
fnsave
push
sbb
sahf
pop
sub
mov
arpl
mov
push
xor
sbb
nop
std
gs
pop
outsb
aam
mov
out
movsl
out
dec
add
inc
mov
mov
daa
mov
mov
pop
leave
xorl
stc
repz
jecxz
test
mov
mov
adc
shrb
mov
stos
xchg
icebp
jl
dec
jno
aaa
jne
lahf
push
xor
jmp
pop
dec
cwtl
repnz
stos
and
mov
insl
sub
push
jae
add
sbb
test
mov
call
sbb
paddusw
mov
add
fisttpl
shl
and
jecxz
nop
test
jmp
icebp
jmp
pop
ljmp
add
rcl
std
iret
movsl
aaa
pop
sub
out
dec
cmp
outsb
stc
fsubl
aam
out
in
sbb
cli
and
pushf
cmp
mov
xchg
in
icebp
jbe
mov
les
mov
cmpsb
xlat
dec
pop
xor
icebp
push
or
mov
dec
cmp
fstpt
into
vpmaddwd
das
lret
cmc
mov
jg
jo
cli
ret
ficoml
and
lcall
xlat
push
movsl
jb
outsl
mov
cmp
or
vpaddb
in
mov
insl
in
sbb
sti
out
mov
mov
add
out
xor
adc
in
int3
xor
add
mov
loope
bound
sbb
sbb
adc
mov
movsb
mov
fdivrp
jno
leave
into
pusha
clc
mov
bound
inc
lods
or
gs
in
insl
adc
jb
popa
mov
fwait
ss
and
jb
aaa
mov
and
dec
sbb
ljmp
xchg
jnp
fnstenv
inc
add
dec
mov
cmp
jne
mov
ds
jp
fsubl
and
sub
mov
xchg
in
jno
or
pop
pop
or
or
imul
sub
mov
enter
addr16
loope
and
sub
imul
mov
adc
push
pop
fisubs
sub
testb
js
xchg
add
out
mov
jno
jo
idiv
xor
push
or
pop
rorb
das
lea
dec
add
out
movsl
sub
cmp
rclb
movsl
mov
mov
add
or
xor
clc
mov
pop
pop
push
cmp
jb
in
in
cmp
loopne
mov
push
push
or
aam
lret
xchg
mov
ljmp
xorl
xchg
leave
leave
fidivl
and
bound
add
leave
or
jno
dec
push
jl
mov
push
pop
cmp
testl
cmpsl
in
sahf
lods
or
mov
lods
outsb
mov
xchg
in
sub
notl
lcall
loopne
out
shrb
scas
arpl
pop
test
cmp
or
jp
lcall
mov
cmp
adc
vmread
gs
push
cmc
aaa
push
test
int
ljmp
popf
adc
sbb
fs
pop
stc
cmp
jo
sbb
idivl
call
pop
pop
mov
jne
add
stos
push
insb
sub
pushf
out
ret
inc
cld
adc
push
mov
xchg
xor
or
lcall
pushf
imul
lods
repz
xor
fwait
cmp
add
add
dec
jns
sbb
xchg
icebp
dec
push
mov
rcrl
add
in
clc
shll
aaa
and
sub
fstl
dec
sahf
mov
test
mov
mov
cs
cmpsb
sahf
inc
mov
adc
cmc
xor
test
xchg
and
sub
jg
test
fcmove
sbb
fistpl
mov
into
xchg
faddl
jne
inc
icebp
pop
sub
xor
xchg
jnp
add
mov
aad
xchg
cmp
mov
test
jge
lcall
xchg
mov
fmul
sub
insb
hlt
mov
outsb
xchg
inc
mov
sbb
ficoms
movsb
cmp
lods
add
xchg
dec
xchg
jns
xor
mov
jae
sysexit
aas
nop
lea
ffreep
add
call
iret
ja
or
mov
xchg
mov
dec
or
inc
andb
movsb
stc
add
lods
push
loope
or
sbb
mov
add
mov
shlb
imul
push
ja
fdivs
loop
andb
cmpb
arpl
jmp
pop
loope
sbb
mov
andl
and
xchg
lret
adc
add
es
dec
iret
int
push
fsubrl
fildl
pop
nop
sbb
pop
xor
or
xorl
and
jp
add
test
mov
test
mov
cltd
dec
mov
sar
dec
jl
jns
or
cmp
pop
adc
dec
lahf
sub
xchg
movsl
mov
inc
out
sub
sub
fistl
and
clc
adc
mov
stc
add
daa
dec
sbb
dec
in
call
popf
xchg
loope
mov
xlat
cmpsb
in
movsl
xor
int3
lahf
pop
clc
in
jne
cltd
mov
mov
lret
imul
add
jb
mov
fdivp
pop
xlat
mov
nop
fnsave
pop
pop
loopne
loope
cmp
icebp
cltd
cs
pop
popf
js
add
xchg
add
xchg
mull
int3
mov
leave
push
cltd
rcll
stc
adcl
das
cmp
mov
repnz
rcll
mov
xor
ljmp
fsubr
adc
mov
sbb
repnz
add
filds
faddl
mov
add
insl
adcb
dec
popf
lods
lock
lods
sub
scas
lds
loop,pt
push
js
andb
nop
sub
es
imul
in
or
push
rorl
jns
and
popa
mov
clc
sbb
and
inc
fldenv
lret
add
mov
and
inc
mov
sub
mov
cwtl
add
mov
xchg
mov
cmp
lods
xor
jl
inc
nop
mov
frstor
and
xor
rorb
pop
scas
jo
push
enter
sbb
sub
jle
lods
loopne
movsb
cmpb
leave
or
ljmp
pop
imul
mov
mov
cmp
loope
push
test
movsb
repz
sub
or
sub
pop
ds
int3
push
add
fs
add
popf
js
push
xchg
inc
sti
jecxz
out
in
and
push
jo
stc
mov
cmp
sub
repnz
daa
jg
icebp
fisubl
lds
test
push
jecxz
iret
inc
and
scas
pop
adc
mov
xor
mov
push
mov
test
lahf
xlat
adc
out
stos
xchg
mov
inc
or
push
adc
call
sbb
add
adc
jnp
lahf
pop
pushf
mov
push
adc
adc
lds
add
jecxz
sbb
pop
xorl
negl
pop
pop
das
adc
cmp
jmp
clc
mov
pop
sub
push
loop
aaa
and
lods
fsubl
jo
push
xchg
adc
mov
add
test
outsb
sub
xchg
sub
cmp
mov
or
xchg
ret
fcompl
test
aas
sub
or
mov
pop
popl
add
xor
jl
outsb
leave
jle
xchg
je
inc
add
mov
pop
push
xchg
jmp
cmp
mov
inc
pop
or
and
aam
frstor
fldcw
and
mov
push
lret
ret
pop
cmp
pusha
cmpsl
xchg
ljmp
das
xchg
ljmp
in
xor
icebp
ja
ss
cmp
stos
sbb
enter
mov
add
jne
ss
push
add
dec
testl
push
cs
jecxz
cli
xchg
mov
imull
enter
pop
pop
cwtl
jge
imulb
and
push
pop
idivl
mov
xchg
xchg
mov
cli
roll
inc
jmp
pop
mov
and
jl
imul
mov
addr16
pop
push
lret
jg
cmc
lods
xchg
mov
push
mov
int3
rcr
mov
pop
xor
adc
cs
sub
sbb
sbb
xor
xlat
dec
cmp
rorb
pop
xchg
fs
lret
nop
lea
and
cmpsb
rcrl
or
and
mov
ds
aaa
dec
sahf
push
cwtl
xor
repnz
data16
cld
enter
xor
push
mov
aam
dec
mov
cli
jno
lahf
jmp
loopne
pop
push
shll
std
fcoml
leave
outsb
daa
jge
jmp
sti
hlt
push
out
mov
lods
dec
das
cmpsb
out
sub
xchg
adc
add
fdivl
test
mov
inc
dec
fcomi
loop
or
and
or
enter
push
movsl
imul
out
rep
mov
popf
scas
and
xchg
push
cmp
or
xor
sti
sbb
pop
add
ja
int
fistpl
stc
inc
jg
push
adc
lea
adc
mov
imul
fdivl
fwait
inc
jmp
push
fsubl
or
xchg
and
orb
mov
cmp
xor
fwait
test
fs
scas
mov
mov
push
and
sahf
jle
mov
pop
in
mov
push
or
xchg
jmp
ret
stos
fists
mov
aas
sub
sahf
mov
movsb
mov
or
mov
mov
push
gs
ljmp
cmp
and
test
je
imul
clc
jecxz
mov
lcall
fnstenv
pushf
out
ret
mov
in
movsb
sbb
mov
cmp
and
sbb
lods
in
xchg
adc
shll
push
iret
pop
or
aad
sub
cmpsb
jae
cmp
mov
add
jl
pop
inc
bnd
dec
inc
jp
out
inc
enter
sbb
outsl
and
or
mov
repnz
popf
pop
leave
stos
jae
shlb
enter
in
pop
xor
pop
sbb
stos
mov
fwait
mov
les
in
faddl
mov
mov
mov
xchg
ljmp
dec
popa
cltd
pop
add
frstor
pop
inc
ret
jle
movsl
xchg
xchg
mov
out
jge
outsl
cmp
xchg
and
cld
push
pusha
push
sti
shr
or
and
fnstsw
arpl
push
repnz
rcr
jo
into
sbb
test
fstpt
push
and
test
lcall
jbe
ficomps
and
mov
in
sbb
pop
loope,pn
cwtl
ljmp
push
xchg
mov
cmp
jb
aad
mov
mov
pop
jecxz
pop
fbstp
sub
dec
pop
jno
stos
pop
cld
hlt
cmp
subb
pop
aaa
aad
cld
cld
pop
push
lcall
inc
in
and
jle
inc
lahf
mov
sbb
loopne
ljmp
jecxz
in
jae
adc
stc
add
repnz
fildll
ret
pop
test
idivl
jno
adc
push
aaa
push
xlat
test
add
push
aas
dec
arpl
dec
and
jne
fdivl
cmc
and
mov
xchg
push
sub
dec
cs
jns
xchg
sbb
pop
jnp
or
push
lahf
je
scas
dec
mov
and
pushf
scas
xchg
lcall
dec
push
mov
dec
popa
xor
daa
mov
dec
mov
std
cmp
faddl
or
mov
pushf
jne
in
pop
rcr
fdivrs
lock
mov
push
outsl
fisubl
add
cltd
popa
and
movsl
push
imul
movsb
pop
adc
mov
pop
fistpll
jmp
xchg
scas
mov
pusha
xchg
sarl
mov
mov
nop
enter
jo
and
test
outsb
popa
push
xchg
xchg
arpl
mov
out
mov
arpl
mov
lea
jae
xor
adc
mov
data16
js
xor
cwtl
mov
push
fdivp
popa
jb
scas
push
xor
jg
and
add
test
sbb
and
std
ret
outsl
pop
cmpsb
ja
test
cs
xorl
cwtl
sbbl
mov
inc
jmp
inc
lahf
lret
jle
aad
push
mov
mov
mov
sub
mov
pop
out
test
pop
cld
push
mov
lock
out
push
fwait
rclb
stos
fwait
lahf
ret
push
scas
adc
or
push
xchg
jae
dec
xor
scas
add
test
mov
xor
mov
pusha
adcl
int
jne
std
ja
pop
lcall
cmp
fisubrs
push
jecxz
mov
xor
xchg
jle
push
add
rclb
pop
notw
scas
in
enter
mov
pop
pop
mov
mov
inc
gs
adc
cmpsl
xchg
add
popa
jmp
inc
lock
aam
pop
dec
clc
adc
pop
push
cmpsl
or
fimuls
sahf
xor
stc
pop
flds
mov
mov
mov
out
push
dec
in
pop
ds
and
orb
mov
cmp
mov
pop
insb
jecxz
mov
sub
js
mov
icebp
adc
dec
pop
and
mov
xor
or
movsl
dec
fs
push
cmp
inc
imul
les
lods
cmpsl
vmovlps
imulb
movsb
addb
movsl
imul
inc
cmpsl
and
or
lds
psubw
test
jg
adc
pop
xchg
jae
orl
pop
iret
lcall
adc
lahf
adc
push
xor
lds
mov
test
cmp
jecxz
mov
dec
sahf
adc
shrl
mov
vcvtss2si
out
fildll
test
mov
lods
xchg
nop
out
xor
hlt
mov
popf
xor
mov
rcrl
pop
push
mov
lea
fcomi
xlat
or
sti
lret
push
fldt
bound
add
sahf
sbb
repnz
mov
iret
sub
mov
arpl
xor
xor
ss
mov
jbe
and
jno
or
push
or
fwait
lods
mov
dec
stos
add
ss
in
test
enter
adc
inc
mov
mov
int
cmpsl
mov
add
mov
mov
call
iret
mov
ret
je
sbb
push
pop
and
pushf
subl
hlt
mov
sbb
insl
mov
ljmp
jmp
mov
pop
call
ret
or
add
cmp
xorl
inc
pop
test
imul
mov
jl
sub
test
lods
sbb
or
inc
movsl
mov
mov
mov
aam
aaa
dec
xor
out
pop
inc
std
rolb
in
jle
outsl
into
or
scas
jle
sbb
sahf
lret
dec
pop
add
mov
cwtl
aam
ss
mov
xor
call
jl
and
sarb
push
out
les
mov
leave
mov
imull
es
cwtl
fcomi
cmpl
or
outsb
arpl
rclb
sbb
rcll
icebp
test
push
xor
inc
loope
fidivrs
clc
aam
pop
and
mov
or
add
cmp
xchg
jge
jl,pt
stos
jecxz
jb
xlat
adc
jmp
stc
sub
pop
test
pop
jp
inc
lods
pushf
jnp
dec
cmovg
sbb
daa
mov
stos
sbb
in
sub
dec
pop
mov
jmp
ds
sub
mov
cli
pop
test
aaa
pop
jle
bound
xchg
js
ja
das
xchg
shr
outsl
pop
mov
out
daa
dec
cmp
push
fildl
adc
cmp
add
pusha
test
aam
imul
jne
scas
add
jp
sbb
lcall
jge
lea
mov
shll
sbb
cmc
inc
test
dec
inc
mov
mov
into
inc
adc
adc
xor
inc
setns
aam
outsl
mov
nop
sti
add
cmp
inc
nop
into
cmpsb
cli
fidivrs
push
imul
lret
imul
cmc
or
jmp
and
pop
add
es
jp
jne
jp
xor
xchg
stos
call
into
push
xor
mov
scas
dec
jg
pushf
sub
sub
xchg
inc
sbb
cmpsb
sbb
xor
std
push
add
mov
loop
mov
push
inc
xchg
cmp
pop
xchg
push
fstps
lock
and
fldl
xchg
jno
jg
gs
inc
sbb
xchg
dec
jle
stc
out
mov
scas
mov
inc
fadds
lret
inc
stc
lock
push
pusha
int
rcll
pop
xchg
fstpl
mov
es
call
movb
xor
and
adcb
jge
addb
shr
or
fdivs
xor
mov
mov
and
movsb
js
cli
addr16
push
ljmp
push
mov
shll
mov
sub
loop
xchg
pop
icebp
adc
mov
pushf
xor
xor
out
jns
sahf
fcoml
in
dec
cld
cmp
sub
sbb
or
cld
dec
in
pop
fsubrl
mov
sub
cmp
int3
insb
fcompl
cld
cmp
sub
sbb
or
cld
dec
in
pop
fsubrl
mov
sub
cmp
int3
insb
fcompl
cld
cmp
sub
sbb
or
cld
dec
in
pop
fsubrl
mov
sub
cmp
int3
insl
fcompl
dec
cld
cmp
sub
sbb
or
cld
dec
in
divb
int3
or
test
arpl
jae
jp
lahf
jb
inc
pop
push
jns
push
pop
and
sub
out
cmpsl
repnz
ret
repnz
xchg
aas
bound
jb
inc
pop
push
ja
xor
inc
adc
loop
xchg
mov
mov
xchg
in
bound
push
and
xor
mov
repnz
cmpsb
out
xlat
out
frstor
bound
sub
cld
in
rcll
inc
push
test
cwtl
xchg
or
sub
mov
push
cmp
repnz
and
lods
daa
mov
ret
push
xor
pop
or
jb
jbe
push
rorb
cmp
pusha
pop
mov
ljmp
jg
negl
pop
or
or
cwtl
sbb
pop
icebp
push
push
push
jbe
cwtl
xor
inc
in
mov
cmp
in
ret
pop
mov
fimull
mov
in
adc
setno
mull
add
out
xchg
pop
mov
daa
call
push
lahf
mov
dec
xchg
pop
repnz
rolb
jne
xchg
xlat
xchg
add
daa
jb
inc
imul
and
push
add
adc
xor
rclb
andb
push
sub
sbb
xor
inc
xchg
xchg
stos
out
sahf
ret
mov
mov
bound
and
push
push
cmp
adc
mov
sbb
out
ret
adc
sub
xor
xor
inc
adc
ret
mull
xchg
aaa
bound
jb
inc
pop
push
ja
xor
inc
adc
ret
mull
xchg
aaa
cmp
out
or
hlt
add
lods
mov
pop
pop
arpl
mov
hlt
je
movntq
out
mov
inc
iret
push
lea
clc
hlt
jg
and
pop
aas
cmp
cmc
fisubrs
lock
fmul
sub
xchg
push
push
inc
adc
test
mov
add
scas
add
mov
push
sub
sub
inc
mov
and
leave
lea
jo
hlt
mov
add
or
pop
insb
sub
and
or
dec
cmc
in
pop
add
adc
inc
in
scas
fwait
je
inc
lods
xor
fidivrs
pop
sub
dec
popf
or
cmp
and
xor
lock
orb
mov
pop
push
leave
shl
sbb
jecxz
jmp
mov
out
aam
adc
push
inc
loopne
lcall
outsb
fwait
int3
or
stos
sub
jle
adc
decl
popa
ret
pushf
mov
inc
cltd
jecxz
jae
insl
adc
out
mov
lahf
xchg
icebp
xchg
int
sub
and
pop
jge
pop
push
sub
xchg
push
shlb
loope
dec
lcall
xchg
cmc
shrl
in
push
scas
xchg
jp
push
lahf
adc
xor
fyl2x
out
cs
in
daa
xchg
xorl
test
inc
xchg
xchg
push
push
insb
fmuls
cmp
adc
pusha
jb
ret
or
lahf
inc
enter
cmp
ret
loop
repz
lea
mov
imul
mov
xchg
adc
js
pop
push
xchg
fwait
pushf
mov
adc
mov
pop
inc
inc
mov
sbb
arpl
insb
aas
movsl
std
imul
sub
cmpsb
mov
mov
iret
pause
mov
aam
popf
lea
aam
push
push
fst
adc
nop
std
out
ret
push
test
lahf
out
sahf
push
and
or
add
sti
sub
xor
or
mov
pop
movsb
test
aam
push
pusha
adc
cmp
jb
loope
pop
pop
sub
sbb
pop
out
sub
jb
or
xchg
aad
fadds
push
and
xchg
pop
rcll
dec
sbb
dec
dec
push
daa
imul
addb
mov
or
and
ficoms
xchg
ja
shlb
push
shlb
out
fistpll
sub
or
adc
xchg
add
jl
mov
int3
fs
cmc
xchg
jae
test
inc
push
enter
sub
push
mov
xchg
push
sub
mov
out
mov
xor
pop
adc
lret
xor
and
mov
push
pop
or
shrl
mov
mov
cltd
or
cltd
mov
loopne
ljmp
pop
sub
out
das
pop
and
iret
test
out
push
dec
scas
mov
out
and
push
inc
ret
aad
aas
xchg
xchg
daa
fwait
insl
cltd
xchg
in
mov
inc
mov
adc
xor
fcmovbe
mov
insl
mov
sub
push
ret
push
jmp
inc
cli
clc
cmp
pop
mov
test
mov
icebp
or
mov
xlat
push
adc
aaa
jg
fcoms
movsl
mov
mov
mulb
aaa
push
out
int
mov
adc
negb
imulb
sarb
shll
dec
and
ficoml
dec
or
mov
imul
cmp
push
incl
jmp
test
repnz
jecxz
add
xor
xor
sub
test
cmc
xor
mov
nop
xrelease
mov
xor
lods
shlb
daa
leave
aas
sahf
movsl
fwait
scas
cmc
mov
in
shl
mov
aam
and
inc
mov
clc
add
dec
insl
jbe
pop
bound
push
xlat
jno
add
aad
pusha
mov
mov
loopne
lcall
xchg
jge
add
fsubrp
inc
and
outsb
xor
insl
in
xchg
shrb
out
bound
and
mov
out
cmp
hlt
enter
outsl
inc
movsl
jecxz
pop
mov
cmpsb
scas
jo
test
not
inc
or
in
adc
mov
dec
or
mov
sub
push
mov
sahf
adc
and
fstpt
adc
adc
xchg
test
mov
jge
orb
jb
pop
mov
ds
fstpt
add
ss
lcall
sarl
inc
xor
icebp
mov
je
dec
insl
pop
mov
cmp
insl
mov
cmpsl
add
pop
add
andb
sbb
jmp
call
popa
mov
cmp
repnz
dec
repnz
sub
dec
and
xchg
loope
lahf
movsl
je
or
push
jb
das
mov
imul
loopne
jns
sbb
dec
std
add
rorl
aaa
push
movb
in
in
outsb
in
jbe
sub
into
xor
stc
data16
adc
leave
dec
dec
ficompl
fsubrl
jle
je
imul
jp
aas
jbe
js
out
sti
mov
mov
jmp
mov
mov
into
int3
mov
mov
dec
push
mov
inc
or
mov
addr16
scas
add
bound
out
jns
xor
lods
in
xchg
jmp
jns
cmp
mov
movsl
ljmp
push
xchg
orb
pop
or
loope
in
xchg
pop
mov
iret
jmp
addr16
mov
dec
adc
loope
and
sub
jmp
idiv
cwtl
movsl
cld
dec
testb
pop
push
push
ljmp
loopne
pop
pop
sub
sbb
arpl
dec
inc
inc
push
in
insl
and
or
inc
and
pusha
arpl
sub
adc
mov
cmpb
repz
inc
cmc
ret
movsl
xchg
xchg
bound
mov
mov
loopne
cmp
jae
sub
leave
aas
out
adc
xorb
rcll
jl
les
movsl
jnp
xchg
xor
imul
inc
push
inc
push
cld
cmp
or
xchg
out
adc
imul
das
cmp
xchg
xchg
mov
mov
imul
fisttpl
and
in
xchg
mov
xor
push
clc
push
pop
leave
dec
or
fs
cmp
fstp
ljmp
in
in
cmpsb
adc
int
out
pop
xlat
into
inc
pop
je
adc
pop
push
pusha
sbb
and
xchg
or
mov
repz
inc
jg
sbb
pop
out
mov
cltd
or
adc
jle
sbb
pop
jp
outsl
xchg
jl
into
scas
cs
and
shrb
popa
les
lods
adc
arpl
dec
shll
test
or
outsl
fiaddl
pop
inc
stos
je
movsb
sub
cmp
iret
dec
shlb
pop
popa
rorb
mov
aam
cmp
out
mov
cmpsb
sbb
push
jbe
lcall
inc
pushf
xor
mov
pop
and
dec
adc
cmp
or
mov
sbb
ret
mov
orb
icebp
aas
xchg
xor
add
pop
sti
test
push
fldl
adc
das
loopne
adc
xchg
jmp
int
mov
mov
mov
rclb
sub
std
loopne
ljmp
pop
fsubs
mov
jg
jge
cmp
adc
rcll
dec
inc
ds
pop
ss
imul
xchg
push
and
and
inc
out
in
rclb
xor
and
jo
xor
pushf
add
jbe
pushf
pop
mov
imul
fstps
and
add
cmpb
stos
sbb
dec
fiadds
pop
imul
cmp
sbb
adc
adc
pop
subb
cmpl
popf
xor
stos
add
sbb
mov
aam
dec
dec
push
fldenv
std
jg
outsb
movsb
scas
lret
rcl
mov
mov
iret
lahf
mov
les
adc
imul
pushf
icebp
dec
aam
inc
add
dec
mov
movsb
aad
or
dec
out
fucomi
xchg
add
add
cmp
stos
mov
dec
push
cmp
cltd
jg
xchg
dec
mov
cwtl
rcrb
xchg
cld
daa
in
mov
insb
dec
dec
mov
pushf
mov
out
sbb
loope
lods
inc
nop
xor
mov
adc
cmpsb
bound
decb
mov
xor
cli
insl
gs
ja
or
mov
mov
movsb
or
mov
into
jecxz
push
xor
push
rcrb
test
lret
adc
ds
ja
push
lret
rcrl
mov
xor
xor
cmpsl
or
mov
pushf
mov
gs
push
cmp
adc
movsb
fidivrs
enter
repnz
xchg
call
sahf
mov
adc
in
std
dec
push
hlt
mov
add
ds
mov
outsb
int3
mov
outsb
int
pop
cmpsl
fildll
movsb
pop
shrb
insl
inc
js
aam
xor
test
mov
outsl
push
sub
adc
ds
pop
dec
pusha
jnp
pushf
adc
mov
inc
movsl
pop
fcompl
fwait
or
mov
aad
pushf
cmp
push
lea
incl
push
mov
push
test
add
out
push
mov
or
data16
mov
push
popf
xchg
test
jl
mov
daa
orl
mov
daa
ficoms
jmp
add
sub
imul
push
test
popf
mov
adc
mov
decl
inc
jecxz
imul
inc
int
adc
movsb
xchg
int3
adc
or
enter
sbb
pop
adc
cmp
sub
sti
imul
jmp
aam
adc
xchg
shll
ljmp
xor
stos
cwtl
shrb
stos
stos
push
fsubp
jle
push
add
add
sbb
jns
clc
daa
data16
sbb
lcall
testl
outsb
cmp
mov
sub
jae
pop
addr16
test
pop
push
lods
lock
xor
xor
mov
popf
push
and
xchg
call
movl
mov
in
mov
push
mov
jns
xchg
call
jae
dec
mov
in
fsubp
mov
sub
mov
fs
cmp
fidivrs
sti
lret
insl
inc
sbb
arpl
jbe
jns
popf
jo
sub
cli
adc
leave
mov
xchg
clc
adc
pop
movsb
and
jae
push
dec
mov
fs
xor
in
repz
rolb
and
aas
or
out
dec
mulb
cmp
loopne
add
mov
pop
testb
fadds
pushf
dec
icebp
push
mov
sbb
inc
push
inc
xor
in
mov
out
xor
xchg
aam
push
or
mov
fidivrl
mov
and
jge
shr
test
jp
and
int3
push
das
lods
sub
incl
cmpsb
push
int3
pop
inc
push
inc
mov
in
pusha
jae
je
cli
or
xor
leave
insl
rclb
mov
and
push
jp
jne
inc
mov
mov
jbe
sbb
scas
dec
scas
xor
lret
xor
and
out
outsl
insb
out
xlat
movb
lea
inc
add
inc
into
adc
mov
xchg
jns
adc
dec
sub
out
jmp
popa
add
les
es
int
adc
leave
lea
mov
sub
adc
dec
insb
or
and
pop
or
fdivs
call
cmpsb
push
or
cmpb
cmc
out
adc
push
enter
gs
in
cmp
pop
loopne
lahf
mov
dec
add
push
xchg
dec
jle
test
push
int
inc
mov
out
cli
jo
jg
dec
xchg
pop
lods
pop
jb
cmp
jmp
inc
jecxz
mov
or
push
mov
mov
pusha
rolb
out
pop
aaa
int3
aad
inc
mov
mov
cltd
and
xor
sbb
xchg
shlb
dec
sub
sahf
bound
test
pop
arpl
shr
mov
orl
cmp
or
mov
mov
mov
push
lret
test
xchg
scas
add
xor
adc
dec
xor
adc
push
fidivrs
in
jbe
ja
call
lock
ja,pt
mov
mov
stos
daa
cmp
mov
pushf
sub
mov
inc
faddp
and
lgdtl
cmp
lock
fcompp
and
sbb
cld
sarl
xchg
cmp
jns
aaa
xor
push
lock
fdivrs
push
push
sbb
mov
cmp
test
jbe
push
adc
jbe
and
jb
fdivrl
ds
jb
jmp
lcall
sub
shrl
mov
in
es
clc
loope
and
mov
mov
adc
cmp
scas
jns
call
out
mov
arpl
orb
sbb
dec
dec
add
add
dec
test
fbstp
loopne
mov
imul
lock
inc
ja
in
sub
xor
data16
sub
addr16
aam
jl
in
cmc
adc
pusha
inc
lret
adc
gs
fistpll
je
sarb
pop
inc
cli
ret
loope
shrb
xchg
insb
mov
mov
std
jl
mov
out
mov
push
ja
mov
push
aam
pop
inc
jne
clc
aad
addr16
sahf
push
xor
addr16
pop
int
cltd
lcall
mov
jae
clc
in
pop
cltd
pop
inc
data16
pop
pop
lea
leave
out
stos
sbb
xlat
negb
cmp
test
xchg
stos
jl
rcrl
cmp
mov
stos
out
or
push
jg
jns
inc
push
ret
sbb
lahf
mov
push
and
xor
dec
stc
insl
add
cmp
jnp
shll
jae
rol
pop
sub
pop
pop
adc
rcr
sub
sbb
dec
fwait
jb
inc
and
jo
sub
je
cmp
jno
repnz
add
dec
pop
lret
ss
push
imul
and
sarb
test
repz
fucomip
pop
cmpsb
or
dec
jp
in
fstps
sub
push
xchg
mov
sub
in
dec
xchg
mov
mov
rclb
sbb
adc
and
or
adc
ds
ja
testl
orl
outsb
inc
lea
and
adc
jp
fs
or
out
jge
xchg
mov
ljmp
in
repnz
or
or
mov
mov
mov
fnclex
repz
push
jge
mov
fiadds
pusha
sub
inc
das
jbe
adcb
ret
imul
cmp
std
out
dec
pop
or
loopne
sub
xor
and
cmc
pop
gs
jb
xchg
mov
aam
sti
dec
imul
cli
mov
adc
fisubrs
push
add
insb
inc
inc
push
sahf
fisubl
add
arpl
lcall
sub
lods
inc
es
add
jmp
les
out
fstp
mov
dec
xchg
dec
jecxz
and
mov
cmpsl
xor
ret
data16
push
mov
jle
lahf
xor
notl
mov
cmpb
negl
je
lahf
outsb
jnp
in
sub
out
stos
xchg
and
sub
cli
inc
fnstsw
jns
subl
mov
icebp
or
test
adc
ret
loope
sbb
scas
lahf
push
out
cmpsl
inc
movzbl
dec
or
or
xchg
popa
cltd
idivb
jmp
jns
fwait
clc
les
push
lods
insl
xchg
aam
aaa
bound
adcl
mov
mov
adc
sbb
jl
repz
stos
es
into
das
ss
push
mov
cmpsb
push
jmp
in
cmp
rolb
shlb
cmp
xor
mov
jbe
popl
xlat
pop
enter
dec
arpl
test
push
push
orb
ja
lcall
xchg
adc
or
clc
imul
test
inc
out
adc
cli
sub
cmp
inc
mov
lret
pop
mov
add
cmp
sbb
aad
adc
mov
lods
cmp
mov
pop
xor
mov
mov
mov
and
jno
xor
dec
mov
mov
rcrl
sbb
mov
mov
fistl
test
inc
adc
insb
push
pop
mov
or
pop
movsl
pop
into
addb
movsl
hlt
mov
test
imul
lret
mov
sub
stc
jmp
cmp
fld
xor
inc
into
ss
inc
fstpl
mov
insb
mov
mov
sbb
mov
xor
loop
jns
and
hlt
xchg
dec
in
pop
jmp
lcall
xchg
jb
cs
push
lds
adcl
or
push
pusha
mov
mov
sahf
sub
push
aad
push
xor
mov
mov
cmp
loope
shlb
movsl
sbb
in
jmp
push
dec
scas
pop
lcall
pop
cmc
xchg
dec
gs
lea
sub
rcr
xlat
pop
adc
and
cld
fsts
pop
mov
cltd
mov
mov
movsb
rorb
jge
es
inc
push
sbb
fwait
testl
inc
ja
xorl
fldcw
push
inc
jmp
aam
mov
push
fistl
cmp
pop
dec
push
pop
dec
ret
cmp
movsb
notb
pop
cmp
inc
mov
ds
mov
xchg
dec
ret
imul
es
sti
xchg
loopne
sbb
insb
pop
aam
call
adc
ljmp
mov
mov
ja
sub
cli
lods
mov
fmul
xchg
add
pop
jo
xchg
sbb
sub
pop
int
mov
insb
mov
mov
pusha
and
mov
cmp
xor
popf
test
imul
mov
jl
insb
gs
adc
es
scas
out
lods
or
into
inc
sbb
js
test
sub
sub
xchg
mov
enter
xchg
movsl
roll
pop
mov
jno
xchg
stos
shrl
push
cld
sub
ficompl
push
mov
rcll
inc
in
pop
imul
dec
repz
xchg
in
insl
cmc
loop
mov
or
pushf
push
inc
dec
sbb
fwait
inc
xchg
jne
jno
cld
cmp
das
test
testl
xchg
sahf
dec
cwtl
pop
stc
mov
rcr
mov
test
push
lcall
aad
je
daa
push
ret
push
pop
ja
pop
mov
jns
jmp
out
cltd
push
jge
mov
cmp
mov
jp
push
outsb
popa
je
mov
adc
mov
push
das
and
fstpt
scas
les
and
mov
inc
sti
ljmp
inc
pop
jnp
mov
inc
out
call
push
cmp
push
inc
lret
push
cmp
jbe
fisubl
ja
xor
inc
and
popa
mov
rcll
mov
mov
xchg
cmp
shlb
dec
divl
int
cli
out
loope
rol
int
add
lret
inc
sub
sbb
xchg
arpl
daa
jno
xor
jmp
ret
jecxz
scas
iret
movsb
mov
mov
sub
sbb
mov
ss
clc
pop
cmpsb
mov
and
aad
sbb
sbb
int
enter
pop
jns
sbb
cmpsl
jecxz
pop
rcll
fs
shll
mov
mul
sbb
mov
jge
mov
xlat
clc
xchg
test
mov
lods
and
out
repnz
and
lahf
insl
test
lahf
popf
xchg
and
add
loop
pop
sarl
cmc
stos
push
movswl
roll
pop
js
adc
mov
mov
push
xor
fninit
into
out
and
lock
movsl
mov
jecxz
jae
pop
push
sbb
xlat
cmp
sub
call
sub
popa
out
jno
lret
adc
sub
mov
insl
rcrb
movsl
jnp
scas
jns
push
iret
movsl
loope
sub
cmpsl
out
rol
mov
add
lcall
xchg
or
jmp
bnd
in
dec
mov
push
sahf
fsts
sub
and
shrb
push
jg
xchg
mov
jo
ret
sbb
mov
push
xchg
hlt
hlt
sbb
rcrb
pop
mov
sbb
js
addb
arpl
and
push
ja
xor
inc
adc
ret
mull
xchg
aaa
bound
jb
inc
pop
push
ja
xor
inc
adc
ret
mull
xchg
aaa
bound
pop
ret
jbe
arpl
mov
cmpsl
repnz
ret
mull
notl
lahf
inc
das
push
ja
ja
push
add
adc
ret
subb
dec
sub
insl
xor
dec
adc
outsb
dec
or
cs
mov
out
repnz
loopne
ret
scas
xor
dec
adc
outsb
jb
bound
push
ds
mov
decb
sarb
cmp
jle
outsb
imul
push
dec
ds
cs
loopne
xchg
int
cli
out
repnz
ljmp
dec
cmp
sbb
fsubs
xchg
cmp
pop
fwait
sbb
fidivrl
or
fisttpll
push
mov
icebp
xlat
xor
es
arpl
out
mov
mov
ficomps
mov
out
fnstcw
subb
sti
ucomiss
sahf
push
mov
xor
es
pop
arpl
lods
xlat
inc
jle
in
mov
adc
inc
ret
ret
scas
mov
test
xchg
lea
jp
pop
shll
xchg
add
or
lret
sub
fcmovnb
mov
jg
sbb
cmc
dec
stos
dec
and
fucomip
cli
shr
mov
mov
shrb
cmp
jle
outsb
gs
jb
push
ds
cs
fidivrs
out
ljmp
call
ja
jbe
add
dec
pop
pop
inc
pop
mov
into
cmpsl
loope
out
repnz
mov
pop
inc
add
jle
cmp
jnp
and
adc
icebp
fwait
mov
repnz
mov
movsb
lret
cmpsb
rclb
cmp
push
cmp
push
push
ds
cs
mov
out
repnz
loop
sarb
and
jle
outsb
jb
bound
push
ds
cs
mov
out
repnz
loop
sarb
or
mov
push
imul
test
mov
fcompl
xchg
add
out
pop
sub
out
xrelease
int3
add
inc
inc
enter
ror
fnstenv
rorl
mov
cmp
xor
lret
aam
xchg
or
mov
xor
jne
stos
dec
pop
sbb
cld
and
adc
loope
mov
cld
mov
mulb
cs
adc
movsl
adc
daa
cmp
fisubrs
les
pop
dec
lahf
fadds
arpl
nop
xchg
sub
mov
mov
xchg
rorb
sbb
adc
lds
sub
mov
xchg
std
jo
out
dec
insb
jecxz
cmc
data16
adc
cmc
clc
jno
fcmovnb
pop
enter
lds
mov
xchg
xchg
dec
or
mov
cs
push
adc
fs
fwait
sub
jp
int
xlat
dec
mov
jle
xchg
or
repnz
sub
mov
loope
dec
bound
rcr
pop
inc
test
cmpsl
test
adc
or
inc
or
mov
pop
mov
jmp
cli
mov
pop
es
jmp
ljmp
test
push
test
inc
mov
clc
push
sub
mov
mov
mov
mov
lret
lahf
add
cmpsb
push
jnp
popa
inc
fcomps
sub
inc
daa
std
popa
mov
cmp
pushf
and
mov
imul
jno
jge
dec
xchg
cld
in
sbb
and
cmp
mov
scas
dec
or
xchg
dec
add
shl
popf
inc
cmpl
pop
out
sub
jbe
popa
sbb
movsl
xchg
push
push
rcrb
mov
xlat
fcompl
mov
pop
sub
lret
push
jae
push
int
lcall
push
jmp
mov
jmp
dec
mov
lret
push
and
mov
mov
and
sarb
xor
shll
lcall
adc
fcoml
cs
stos
sub
icebp
cmp
dec
test
sub
mov
repnz
xor
test
mov
lahf
cwtl
mov
mov
or
pop
stc
repz
clc
ret
jl
dec
xor
sti
sbb
test
cld
std
jecxz
mov
jno
sbb
lock
notl
cmp
clc
push
adc
cs
xor
imul
loope
cli
jmp
scas
mov
xor
outsl
jmp
test
int
or
xlat
inc
inc
jnp
push
or
divl
pop
jecxz
mov
sub
stc
pop
xchg
xchg
mov
mov
pop
out
mov
dec
mov
cmp
dec
add
sbb
ret
mov
jb
pop
push
dec
test
mov
add
sub
in
mov
sbb
arpl
lds
fildl
les
bound
pusha
dec
lods
loopne
pop
push
sbb
test
push
add
jnp
mov
js
sbb
and
test
adc
fcmovnb
inc
jne
notl
je
mov
xchg
sub
add
pop
icebp
mov
dec
inc
sub
and
inc
jmp
or
pop
out
nop
inc
enter
inc
xor
roll
inc
mov
inc
pop
or
ffreep
sbb
shll
movsb
cmp
mov
dec
not
mov
sbb
push
test
add
cltd
inc
pushw
jmp
pop
sub
jle
pop
jg
ja
mov
lds
aad
sub
cmc
adc
inc
pop
mov
cmp
rcll
jae
mov
ja
and
pop
aad
cmp
jl
xor
add
or
or
adc
mov
jp
push
mov
sbb
cmpsl
fldenv
jne
call
xchg
push
sti
stos
xchg
dec
in
pop
xor
mov
ja
adc
xchg
jmp
fisubl
push
cmp
xchg
roll
mov
cmp
pop
call
xchg
mov
push
adc
push
shrl
cmpsb
sub
jns
xchg
adc
adc
fwait
and
mov
add
xchg
or
jmp
mov
test
pop
lret
push
pop
out
stos
movsb
push
sub
das
xchg
into
cmpsl
or
stos
pop
dec
jbe
ror
inc
jg
adc
daa
mov
sub
pop
mov
jle
pop
in
xor
add
inc
mov
loopne
xchg
leave
xor
xchg
sub
or
jge
jno
je
pop
ret
dec
fists
cli
pop
xchg
jns
test
pop
and
cmp
or
pop
fwait
push
fists
xor
pop
push
fs
xchg
ret
xor
stos
sub
push
out
xlat
imul
loope
cmp
fidivrl
push
lods
cld
jne
mov
pop
pop
cwtl
add
push
out
aad
jmp
lea
ss
std
inc
jl
insl
and
call
cmp
mov
or
push
cmp
int3
mov
fsubl
mov
out
imul
adc
test
push
add
mov
inc
lods
push
cli
dec
and
popa
xor
pop
push
cmp
je
fdiv
in
add
add
loop
pop
divb
sub
ret
nop
clc
into
xchg
mov
push
xor
inc
mov
pop
inc
add
ja
push
jae
subb
cs
in
outsl
inc
inc
xor
lret
inc
gs
push
jnp
inc
cmpsl
jbe
aas
add
lods
pop
sub
pop
dec
mov
hlt
xlat
ljmp
mov
stos
push
jg
sbb
sbb
sbb
outsb
mov
mov
loopne
cmp
div
cmp
add
orb
popa
ret
aam
jae
sub
imul
cltd
outsl
cmp
iret
pop
sbb
pop
mov
shll
in
lret
fs
push
inc
repz
cmp
add
nop
cmp
idivb
xchg
gs
cwtl
add
jmp
cmc
out
imul
add
sahf
scas
sub
fmull
cmp
ja
negl
adc
in
add
sbb
push
push
clc
clc
pop
jl
sub
ss
add
xor
push
mov
mov
dec
gs
mov
pop
mov
cmc
push
lods
sub
leave
lea
rcll
cmp
sub
scas
or
mov
pop
fmulp
and
ja
sub
dec
cmp
lock
adc
loopne
sbb
mov
jge
dec
lods
xchg
movsl
call
in
mov
xorl
xor
sbb
push
cmp
xor
sub
push
fidivl
enter
cwtl
adcl
icebp
divl
ffree
mov
hlt
cmp
sub
sbb
aas
movsl
push
push
aad
iret
icebp
out
mov
and
in
clc
fwait
xor
mov
aam
dec
pop
push
sbb
mov
test
lea
sti
sbb
int
unpckhps
cmp
adc
mov
dec
les
mulb
mov
daa
xchg
mov
outsl
adc
xor
pusha
cld
mov
cmp
inc
cs
adc
jo
aaa
dec
lods
imul
cs
dec
fsubs
std
int
stos
mov
mov
dec
mov
out
adc
in
fistl
rorl
enter
add
lret
stos
inc
mov
je
mov
ss
fwait
stos
pushf
dec
dec
dec
mov
adc
imul
sbb
ljmp
xor
or
push
jge
jle
jge
inc
lret
dec
pop
nop
inc
out
push
add
aaa
nop
xchg
jb
mov
pop
add
shrl
mov
mov
enter
mov
xlat
jl
mov
jbe
pop
data16
cli
xchg
pop
add
sbb
sub
and
mov
stos
sbb
into
push
pop
cpuid
jl
jno
imul
mov
sti
inc
fdivl
jno
arpl
pop
mov
and
inc
or
sahf
std
mov
nop
lcall
out
lods
jb
daa
insb
in
loopne
xchg
popf
sub
xor
andl
add
mov
addr16
js
in
imul
inc
shlb
out
mov
sbb
test
add
xchg
xorl
jne
addl
push
add
mov
iret
pop
xor
arpl
push
pop
test
test
ds
push
dec
add
mov
pop
dec
cmp
or
pushf
sub
mov
fdivl
jg
test
dec
xchg
dec
pop
mov
add
sbb
adc
ret
repnz
jle
jecxz
lods
jne
scas
adc
int3
xlat
pushl
jne
in
push
or
adc
xorb
aam
dec
or
add
arpl
fisttps
jns
xor
jle
and
lahf
xchg
xchg
addr16
jl
add
xor
iret
mov
mov
int
stos
out
jle
imul
iret
push
fadds
mov
mov
loope
out
in
imul
insb
sub
xchg
push
stos
rorb
popa
fnstsw
mov
sti
push
mov
xor
xlat
xor
sbb
notl
repz
inc
daa
adc
cwtl
mov
aam
arpl
stos
mov
jae
je
push
jb
icebp
jns
and
push
stos
nop
fnsave
das
pop
js
inc
jmp
mov
testl
jle
and
mov
inc
bound
adc
loop
insl
mov
es
push
sbb
cli
push
cmp
inc
subb
push
pop
mov
test
push
cltd
enter
lds
jo
lods
mov
sti
in
jle
arpl
popa
imul
sub
clc
push
inc
maxps
jecxz
pusha
pop
fcom
sub
push
scas
jge
jns
mov
or
cmp
data16
sub
jg
lock
scas
and
inc
rcrl
ror
test
shlb
jge
mov
fxch
xchg
push
andl
jp
jae
scas
aaa
ror
cmp
je
or
adcl
mov
xchg
leave
or
sbb
popf
jns
mov
std
mov
insl
adc
mov
push
add
mov
stos
mov
stos
shlb
jmp
test
xchg
sbb
pop
fwait
in
scas
and
mov
mov
push
pop
or
jmp
sbb
mov
fcoml
xorb
inc
repnz
cmp
pop
push
roll
imul
lds
mov
std
mov
xor
jp
popf
call
out
cmp
pushl
push
mov
out
pop
loop
lods
icebp
dec
test
sbb
add
insl
push
aad
loope
xchg
mov
idivb
push
cltd
es
push
jge
testl
mov
adc
outsb
pop
dec
or
xor
xor
addr16
test
int3
mov
int
adc
shrb
lods
repz
int
cs
and
jb
and
sub
inc
xlat
dec
mov
mov
in
mov
xor
aad
jmp
ljmp
mov
bound
pushf
aam
lret
test
jle
mov
xor
lds
inc
ds
xor
jmp
ja
xor
jmp
inc
mov
adcl
out
add
outsl
inc
repz
xchg
data16
adc
in
ret
xchg
les
aas
nop
movsl
pop
in
push
xchg
sahf
ficomps
cmc
fwait
clc
push
in
mov
dec
pop
sub
mov
sbb
mov
mov
lret
shll
and
push
ret
addr16
repz
cld
movsl
mov
test
jge
loop
fistpll
movsl
push
je
dec
bound
int3
cmp
clc
clc
adc
insb
test
lods
jg
and
rcrb
push
add
iret
test
stc
insb
dec
and
mov
add
pop
fcoms
lcall
add
lret
dec
fistpll
insb
pop
aad
push
dec
dec
test
out
jnp
shll
jecxz
test
not
jbe
pop
stc
movsl
mov
and
cmp
sbb
sbb
negl
push
sahf
inc
lods
jne
out
cltd
xchg
stos
adc
pop
data16
sbb
icebp
into
dec
xor
xchg
cs
rcl
and
shl
lcall
out
cmpsl
pop
inc
movsb
test
lods
scas
push
sub
push
mov
mov
mov
cmp
xchg
and
sub
lods
insl
add
push
lds
jg
inc
jmp
fcmovnu
rcrb
jp
xchg
rclb
sub
iret
mov
leave
push
repnz
ja
jle
xchg
imul
xlat
mov
fildll
adc
push
jnp
mov
inc
ret
xchg
push
jnp
sbb
out
sbb
test
ss
sub
mov
iret
call
call
cmp
jno
inc
ljmp
icebp
enter
outsl
add
hlt
das
push
cwtl
inc
push
xchg
pop
cmpb
and
scas
loopne
xlat
scas
movsl
call
ret
cmpsl
mov
nop
jmp
push
pop
or
lcall
mov
mov
adc
les
or
dec
sbb
mov
pop
je
gs
inc
xchg
notl
inc
scas
lods
mov
pushl
ficoms
jle
stos
pop
inc
mov
fs
outsl
in
ficoml
inc
loopne
sbb
loopne
jmp
cmp
inc
push
lret
mov
and
pop
push
mov
movsb
mov
adc
out
cmpsb
xchg
push
fwait
in
test
mov
mov
mov
pop
mov
pop
inc
xor
or
jg
sub
adc
test
test
sub
movsl
lcall
shlb
xor
push
adcb
mov
and
mov
mov
mov
mov
cmp
movsb
pop
push
repz
lock
adc
sbb
jmp
mov
out
cmp
int3
and
insb
mov
jae
out
dec
int3
std
dec
xchg
pop
cmpsl
sub
sbbl
mov
rcrl
repz
rorb
add
lods
out
fldt
mov
sbb
cmpsb
mov
fwait
xorl
push
and
xlat
push
jmp
fidivs
pusha
stos
jbe
mov
push
int
aas
cmp
adc
mov
rcr
xlat
mov
or
xchg
sahf
or
cli
ror
pop
dec
rol
mov
repz
fdivrl
mov
aad
mov
push
ret
mov
out
add
sarl
jp
imul
addl
mov
les
pop
xor
lods
jne
fistpl
cmp
ljmp
aas
sahf
adc
in
xor
lcall
jg
daa
xchg
mov
cmp
mov
cmp
pop
les
dec
test
pop
push
frstor
push
aam
ret
mov
gs
imul
inc
push
jne
or
repz
dec
mov
scas
xchg
clts
sub
or
test
cmpsl
xor
mov
aam
hlt
pop
dec
jnp
inc
jmp
lret
xchg
fidivl
and
mov
outsl
fs
or
rclb
jp
out
push
cmpsl
adc
imul
sub
and
loopne
pushf
idiv
mov
test
jle
gs
notl
push
icebp
cmp
mov
mov
mov
xor
out
insb
mov
jnp
aaa
mov
in
test
inc
popa
mov
loope
cld
enter
cli
scas
mov
xor
mov
jle
pop
xor
push
orl
scas
add
pop
pop
sbb
arpl
jne
outsb
mov
or
jns
add
imul
fdivrs
sbb
clc
xor
sub
push
cmp
clc
sahf
mov
push
scas
out
out
mull
shll
call
fstp
jne
mov
xchg
pop
stc
pop
dec
xchg
push
sbb
push
push
mov
dec
stc
jle
jp
inc
push
or
mov
adc
popf
mov
push
xchg
fidivrs
sbb
fdivrp
or
lea
popa
push
push
or
lahf
mov
les
daa
pop
test
or
jecxz
ljmp
ret
sahf
mov
jae
or
and
rol
or
lods
and
lods
jmp
sbb
mov
push
pushf
or
cld
stc
frstor
sahf
les
iret
jmp
adcb
dec
sbb
ficoml
jl
bound
jg
xor
jge
inc
and
mov
push
les
xorb
movsl
xchg
dec
pop
pop
fnsave
scas
inc
addl
inc
mov
mov
xchg
cmovp
loope
rorl
test
imul
insb
xor
mov
lds
cmc
cli
std
jns
mov
jle
scas
mov
cmp
loope
mov
xlat
xor
sub
jbe
sti
arpl
inc
jmp
sub
pushf
sbb
sbb
outsb
pop
hlt
outsb
jecxz
arpl
andb
mov
jb
shr
push
push
test
cwtl
jns
in
popf
iret
in
xlat
out
imul
mov
push
add
mov
pushf
arpl
lret
sahf
mov
jmp
sahf
pop
cmp
fnstenv
jne
push
pop
cltd
movsl
hlt
and
fsubp
inc
stos
sub
lods
jns
test
or
mov
mov
xor
adc
lods
fs
or
mov
scas
leave
shr
shll
movsl
insb
sub
push
outsl
cmp
jns
mov
repnz
cmp
and
adc
pop
ljmp
movsb
int3
jge
repz
mulb
ljmp
sub
imul
jp
sbb
movsl
jbe
ret
jmp
dec
mov
jp
cmpsl
mov
pop
outsl
xor
repnz
not
iret
cmp
mov
leave
jno
push
test
push
jo
out
cltd
sub
sub
stc
add
outsb
mov
cmp
push
test
xor
das
xor
decl
add
mov
and
jp
stc
pop
mov
lret
outsb
add
adc
sbb
pop
decl
jno
gs
pushf
mov
jl
shll
ljmp
jl
hlt
pop
xchg
int3
repnz
inc
mov
inc
xchg
pop
test
dec
fisttpl
jnp
pop
push
dec
lods
adc
xchg
or
ds
add
xchg
negl
jae
int3
scas
lods
test
repz
xchg
or
jl
enter
nop
push
inc
test
lcall
mov
test
dec
inc
pushf
repz
fndisi(8087
mov
mov
mov
jnp
arpl
hlt
cmp
rcrl
mov
dec
pop
and
pop
inc
fisubs
cltd
mov
int3
pop
pop
lret
jb,pt
inc
lret
rcll
mov
jp
push
lods
jmp
sbb
pop
cmp
jge
inc
jl
dec
lods
or
add
xor
ljmp
dec
mov
mov
mulb
dec
pushf
inc
and
lahf
xlat
mov
cmp
mov
mov
fildl
sarl
fs
test
rol
dec
sub
mov
out
or
dec
stc
gs
or
jl
xchg
add
mov
fwait
push
lds
ja
in
cld
mov
pushf
dec
mov
mov
xor
add
testl
sbb
in
lret
lods
fiaddl
mov
mov
dec
jmp
cmc
mov
pop
add
cmpsb
push
and
les
jno
in
outsb
mov
sub
and
push
jecxz
in
mov
jnp
jb
xor
push
les
sub
hlt
movl
dec
adc
test
jp
es
xor
loopne
test
mov
aas
iret
testl
loopne
push
int
fmul
mov
push
and
mov
or
adc
mov
in
popf
inc
cli
pop
leave
cmp
and
shr
jmp
xor
lds
mov
mov
mov
adcw
shr
clc
mov
aad
dec
mov
subl
jl
xlat
pop
jno
out
in
scas
mov
mov
fs
and
or
add
fs
in
dec
mov
cmc
pusha
adc
arpl
push
dec
sbb
outsb
jb
bound
push
ds
cs
mov
out
repnz
loop
sarb
and
jle
outsb
jb
bound
push
ds
cs
mov
out
repnz
loop
sarb
and
jle
outsl
jb
bound
push
aas
inc
cs
mov
out
repnz
jecxz
sarb
and
jle
push
push
bound
dec
and
cmp
sbbb
inc
cmp
in
aad
inc
js,pt
les
shll
test
push
into
inc
mov
adc
outsb
in
aad
lds
mov
sub
xchg
push
icebp
jne
inc
mov
pop
scas
and
addr16
in
jge
and
push
popf
lcall
ss
fmull
rolb
pop
mov
cs
fstp
adcl
mov
jle
hlt
fimuls
scas
pop
xchg
aad
or
xor
inc
xor
out
adc
mov
iret
pop
jmp
out
popf
push
xor
loopne
fmul
enter
and
mov
lds
int
outsb
push
jp
mov
xor
inc
xor
ficompl
loopne
or
ret
loopne
popf
test
ficoms
scas
and
add
cli
xorl
es
cmp
jne
or
xor
andl
mov
movsl
push
dec
test
cmp
je
test
decb
lods
adc
sbb
sub
inc
lret
push
loopne
xor
sub
pop
rclb
jmp
xor
das
loopne
fimull
jmp
pop
jmp
fidivs
mov
shrl
iret
outsb
adc
sbb
movsl
push
xchg
push
test
jne
ficoms
inc
mov
adc
outsb
in
aad
lds
mov
movsl
push
xchg
push
test
jne
ficoms
inc
mov
adc
enter
mov
icebp
sub
xchg
lods
into
xchg
mov
or
and
xor
jbe
test
xchg
iret
imul
xchg
dec
shr
cmp
dec
push
fsub
aas
inc
cs
lds
dec
mov
lods
cmp
test
lock
xor
loope
lahf
inc
cltd
stos
sbb
enter
fwait
pop
add
loop
jmp
jne
cld
mov
lock
aad
sbb
mov
cltd
lret
icebp
popw
cmp
popa
stc
inc
fs
jmp
lods
loop
jae
pop
mov
jae
in
or
mov
outsb
ljmp
pop
divb
jno
push
dec
data16
and
ret
pop
dec
inc
lcall
imul
cmc
lret
xchg
mov
out
adc
idivb
xor
add
dec
movsb
and
add
sub
leave
test
idivb
incb
fs
mov
pop
or
int
jne
sbb
pushf
cmp
adc
push
mov
aam
pop
cmpsb
cmp
sbb
lcall
lea
xor
xor
and
arpl
sbb
ljmp
jp
aas
and
mov
mov
sbb
push
push
adc
xor
rcrl
mov
repz
add
and
jb
scas
dec
mov
ret
mov
cmpsb
in
repnz
dec
mov
or
push
mov
btcl
cmpsb
mov
pop
sub
mov
into
xchg
test
pop
mov
jo
pop
jmp
enter
in
wrmsr
push
in
sbb
mov
inc
mov
xor
jb
clc
in
gs
mov
in
int3
bound
cltd
pop
or
inc
push
stc
stos
mov
push
push
ret
cmp
adc
jne
nop
fildl
enter
outsl
popf
and
mov
fwait
leave
push
lcall
adc
jns
and
sarl
je
fldl
aaa
and
jmp
lods
aad
pop
mov
mov
insb
mov
in
cli
jp
lds
jg
push
out
or
jge
dec
mov
adc
lods
std
adc
xor
xor
pextrw
dec
dec
mov
test
mov
es
fildll
imul
ret
shrb
jae
push
jle
jnp
xchg
pop
sbb
insl
adc
jne
fimull
push
adc
xor
popf
ret
xchg
mov
push
sbb
mov
sbb
imul
adc
lret
sub
cbtw
ss
rol
dec
insl
xchg
insl
add
enter
push
imul
je
pop
mov
sbb
lods
jno
and
lret
sbb
fists
ds
test
or
xor
jg
aam
js
pop
push
fsubs
cmp
scas
subb
push
sub
lods
pop
rcrb
xchg
icebp
aas
pop
mov
push
add
mov
and
lcall
bound
xchg
mov
xorb
sub
lret
mov
nopl
rolb
push
les
push
addl
jl
cmp
mov
gs
int
adc
mov
mov
add
xor
adc
cmp
push
aad
and
jne
sub
mov
cmp
rorl
xchg
push
mov
jmp
ficoml
xor
pusha
popa
pop
cli
mov
arpl
fwait
and
and
xchg
fmulp
adc
inc
sub
sub
test
pushf
iret
shr
xor
mov
test
push
test
xlat
inc
gs
in
outsl
test
enter
std
popa
mov
fs
push
xor
push
imul
dec
cmp
dec
popa
pushf
mov
xor
ljmp
mov
xchg
imul
fisubs
insb
or
fldcw
jmp
insl
inc
pop
decl
mov
xchg
std
sub
add
dec
push
mov
cmpb
lret
cli
pop
and
cmpsl
dec
mov
mov
rcll
pop
lahf
cmp
cmp
outsb
loope
movsb
xchg
loopne
cmp
mov
mov
mov
fld
loopne,pt
jl
add
iret
loop
cli
sub
test
xchg
mov
lock
sbb
add
mov
insl
pusha
inc
mov
addb
mov
in
mov
sbb
mov
or
push
cmp
bound
insb
loope
cwtl
push
mov
out
mov
lret
lds
cmp
stc
adc
jge
pop
insl
jne
adc
dec
mov
fildl
repz
xchg
gs
pop
inc
sti
jnp
stos
push
jmp
mov
xchg
cmp
in
and
adc
lahf
frstor
xchg
mov
repnz
and
lret
xchg
push
or
ja
dec
call
jmp
cmpsb
lcall
pop
cwtl
stos
push
xchg
cmp
pusha
adc
xor
in
xlat
pop
mov
dec
inc
xor
inc
mov
sub
ret
hlt
push
shrb
mov
ss
loop
das
sbb
fildl
and
push
jge
out
push
add
addb
inc
mov
push
lcall
imul
out
adcb
lods
lcall
cwtl
xchg
and
stc
pop
divb
lods
cli
mov
inc
cmpsb
test
jno
cmp
jnp
dec
mov
sub
inc
add
mov
fcomps
loopne
pop
cli
popa
rorl
mov
movb
aaa
and
xchg
loop
push
xchg
mov
push
iret
sbb
jns
stc
jns
inc
cwtl
jns
xchg
in
push
fisubl
fwait
sub
and
mov
mov
ja
shlb
push
dec
lds
jae
pop
insl
loope
add
xor
mov
pop
decl
lcall
push
test
pop
jbe
push
add
lret
push
pop
mov
out
fmul
push
and
lds
pop
cmp
shl
push
xchg
mov
pop
inc
fiadds
je
out
xor
dec
jne
or
xor
call
xchg
movsb
cmp
inc
test
adc
hlt
in
mov
das
and
int3
mov
loope
aad
mov
jno
out
and
cmp
bound
shr
adc
inc
inc
dec
negb
outsb
ja
and
lret
and
sub
daa
test
adc
movsb
sub
stos
push
push
es
mov
test
je
add
mov
xchg
and
xor
and
inc
mov
andb
fstps
insl
das
inc
xchg
adc
sti
repnz
cmpsb
rorb
push
lds
mov
mov
inc
ss
scas
loope
cmpl
inc
pop
push
pop
pop
pop
push
sub
in
js
mov
rol
sub
sbb
popa
pop
add
mov
fdivrs
adc
dec
pop
jge
in
jae
jle
add
sti
pop
ss
scas
mov
xor
mov
inc
sbb
or
loopne
in
mov
xor
push
arpl
sbb
push
dec
and
pop
xchg
push
inc
cltd
dec
mov
orl
sbb
fists
insb
cmp
inc
pop
sbb
mov
orl
aad
add
mov
cltd
hlt
or
negl
xchg
mov
push
xchg
push
pop
mov
jmp
gs
jne
shlb
pop
dec
xchg
fnstsw
stc
cs
cmpsl
repz
loop
cmp
test
mov
sbb
rcrb
mov
push
test
add
outsl
or
push
adc
das
ret
fimull
ja
pop
jmp
test
add
shl
and
push
mov
ds
ljmp
xchg
int3
lods
xor
push
imul
into
jmp
movsl
xchg
test
in
ret
popl
fwait
nop
jno
aam
jge
inc
hlt
test
popa
lods
pop
dec
aaa
decb
add
lea
xor
mov
popf
push
jmp
inc
daa
push
adc
test
and
cmp
adc
negl
lret
cmp
or
xor
inc
pop
cmp
cltd
sub
mov
mov
push
push
outsl
push
push
cli
stos
enter
pop
fwait
loop
fwait
add
and
aad
pop
jmp
je
cmp
loopne
mov
fdivrs
add
je
into
cmp
inc
xchg
insl
lea
jb
mov
rorb
jg
cmpl
gs
out
sub
fldcw
rcrl
daa
scas
imull
test
and
mov
ljmp
sbb
shlb
adc
pushf
lret
stc
iret
adc
pop
pop
movsb
mov
fisttpl
scas
mov
int3
shlb
sti
mov
and
imul
lock
mov
sbb
mov
es
pop
jmp
add
es
not
sbb
xchg
bound
into
out
pop
inc
dec
es
rcrl
jmp
shrb
jl
mov
adc
stos
pop
es
xor
movsl
addb
push
lret
or
lock
inc
cs
sub
pop
test
cmp
mov
mov
adc
loop
jp
aas
pop
stc
jno
gs
adc
cmp
repnz
cmp
movsb
or
aaa
mov
push
push
bound
or
ret
cmp
adc
andl
jl
aad
int3
push
rcr
xchg
push
mov
ljmp
stos
jecxz
pop
je
xchg
clc
push
mov
cmpsl
cmp
pop
sub
xchg
xchg
mov
arpl
add
sub
hlt
test
lcall
rcll
mov
shlb
mov
sbb
lods
inc
test
inc
into
aas
leave
loopne
jnp
loope
popf
lods
imul
jne
adc
cmp
ror
aam
sub
sbb
or
sahf
scas
mov
into
jno
cmp
popf
fwait
lcall
mov
insl
fidivs
data16
ja
fidivs
sarl
pop
and
add
arpl
in
xor
into
cli
pushf
sbb
mov
arpl
dec
cmp
lahf
jo
data16
xor
push
xchg
mov
into
insb
ret
inc
push
insl
xor
pop
and
sbb
js
idivb
mov
sub
dec
cld
pop
lock
ja
clc
movsb
aam
lret
xchg
jnp
and
sub
popf
mov
push
jns
movsb
xor
mov
hlt
mov
int
hlt
test
add
cwtl
mov
insl
push
mov
in
mov
xchg
outsl
sbb
cli
cmpl
or
fsubl
pop
ja
add
and
movsl
push
xchg
in
jns
cmpsb
xchg
inc
insl
leave
lock
jmp
pop
jmp
jne
mov
mov
notl
xor
imul
lods
fadds
xchg
jp
pop
push
push
in
and
push
outsb
movl
orl
xchg
pop
scas
mov
fcmovnbe
into
repnz
std
inc
push
nop
mov
das
and
ret
adc
loope
or
mov
rorb
mov
adc
les
roll
push
lret
stos
mov
mov
test
mov
addb
ds
enter
xor
pop
mov
push
cltd
add
fdivp
lods
mov
aaa
popa
jns
lret
stc
and
sbb
sub
add
and
adc
in
ljmp
pop
ret
jo
cmpsb
clc
hlt
cmc
sarl
lods
push
jbe
aam
dec
mov
and
lret
cmp
gs
sbb
jbe
lods
xchg
sbbl
ljmp
add
mov
mov
xchg
jmp
push
enter
enter
sbb
xchg
js
sub
jmp
inc
jge
mov
dec
mov
ss
xchg
xchg
popa
pop
pop
or
and
lea
add
and
or
cli
pop
stos
jno
mov
add
jae
mov
in
or
arpl
adc
or
enter
in
gs
out
add
push
int
leave
dec
and
jg
pop
je
cmc
lret
pop
shlb
test
mov
sbb
mov
inc
roll
pop
test
mov
dec
mov
fldl
stc
mov
int3
adc
mov
sahf
nop
jle
mov
inc
dec
mov
test
iret
jb
cmc
jge
mov
pop
lea
and
or
lret
pop
inc
pop
sahf
or
lods
push
and
jb
mov
push
pop
mov
push
xor
push
add
mov
aaa
dec
sbb
dec
jecxz
sub
mov
push
push
mov
push
dec
add
or
pop
gs
lock
pop
icebp
cmp
sbb
push
jo
jecxz
jo
cs
lock
sbb
std
xchg
out
mov
mov
not
dec
pop
pushf
inc
out
mov
in
adc
insb
xchg
lods
or
popf
jns
xchg
ds
inc
repnz
adc
popf
sub
shl
or
push
fisubl
popf
data16
cmp
push
out
sub
rcl
or
scas
popa
fnstcw
mov
add
out
rcrl
cmpsb
les
cmc
inc
mov
xor
xchg
cli
add
imul
pop
push
mov
mov
pop
sbb
sti
lret
xor
pop
fisttpl
pushf
and
fsub
repnz
fadds
addr16
jge
lods
movsl
aad
push
pushf
dec
xor
push
imul
data16
cmpsb
sahf
xchg
dec
lock
iret
dec
andb
fstpt
ja
pop
popf
loop
or
mov
mov
fdiv
jg
mov
mov
fs
pop
push
insl
outsl
lea
leave
repz
mov
outsb
pop
cli
jne
in
ret
cltd
add
xor
mov
repz
push
mov
or
jae
inc
mov
add
sub
mov
dec
out
cmpb
xor
movl
add
xor
out
sti
fwait
jmp
xchg
sub
rclb
mov
out
lret
insb
mov
imul
andb
inc
test
jne
add
lods
sahf
out
xchg
es
lcall
roll
or
lods
lods
cmpsl
cli
cmp
shrb
push
rorl
mov
xlat
popa
out
in
lods
dec
aaa
dec
ss
int3
fwait
inc
outsl
stc
dec
loope
fldl
mov
inc
mov
pop
lods
sub
jmp
xor
jmp
or
cwtl
pop
pop
addr16
sbb
inc
add
bound
adc
repnz
andl
out
movsb
pusha
xor
inc
loopne
pop
cmc
sbb
xlat
mov
mov
fidivl
pop
mov
rolb
xchg
jne
lret
inc
fidivl
clc
out
rcrb
loopne
mov
push
inc
enter
addr16
push
or
jo
shrl
fiadds
sbb
or
orb
loopne
filds
aam
and
cltd
xchg
pushf
les
bound
ja
test
pop
fcmovnu
pushf
sbb
cltd
data16
mov
aam
loopew
int
pop
outsb
push
or
call
jecxz
int
fcomps
loopne
sbb
pop
and
outsb
loop
aaa
jbe
cmp
stc
jb
outsl
rorl
ljmp
xorb
jbe
jnp
inc
vshufpd
xor
imul
cltd
push
mov
adc
xchg
pop
aam
mov
inc
dec
cwtl
jp
dec
leave
daa
xor
ret
pop
cli
sahf
mov
fildl
xchg
mov
fsts
popl
add
mov
adcl
mov
and
addr16
mov
mov
cli
mov
jmp
testl
jnp
xor
inc
push
ss
mov
test
mov
pop
xchg
test
mov
mov
icebp
loopne
mov
das
rol
cld
hlt
jg
xchg
ds
jo
mov
jae
mov
push
mov
je
xor
mov
mov
sbb
movsl
movsl
dec
jbe
sub
or
lahf
stos
shll
mov
mov
cwtl
mov
or
pop
dec
pushl
jmp
les
mov
cmp
and
and
shlb
insb
adc
pop
pop
jns
mov
mov
mov
adc
dec
mov
imul
mov
ljmp
jg
inc
sub
call
cwtl
jl
or
xor
sub
or
mov
call
mov
adc
aas
sbb
loop
adc
sub
testl
adc
sti
xchg
xchg
jge
inc
lock
sbb
sbb
ret
cmp
mov
xor
sub
les
aad
mov
xor
cmp
xor
sub
mov
and
dec
push
les
dec
jns
xchg
ret
scas
filds
out
ret
jg
sbb
ljmp
jg
pop
shrb
ljmp
push
push
das
aam
das
fnstcw
cmp
add
mov
pop
xchg
loop
xchg
or
movsl
pop
mov
cwtl
sbb
cmpsb
sbb
add
lods
rclb
movsb
lahf
cmpsb
push
jmp
scas
lcall
enter
pop
les
jae
jl
lcall
sub
fisttps
mov
mov
in
dec
dec
inc
in
lods
xchg
jle
mov
call
mul
fsubrs
mov
push
js
adc
repz
insb
and
popa
sbb
jmp
xchg
lahf
les
idiv
mov
xor
les
xchg
mov
xlat
nop
jae
dec
aad
dec
loopne
mov
inc
sbb
dec
jbe
into
adc
cmp
sbb
and
data16
xchg
xchg
aas
adc
xchg
xor
divl
sub
insb
push
decb
jge
enter
stos
push
xchg
loope
or
jb
jmp
xchg
rorb
or
std
and
sahf
ljmp
xor
push
dec
orb
call
insl
lret
in
push
xor
adc
dec
and
insb
ret
mov
ret
cmc
xchg
xor
inc
and
mov
adc
mov
mov
sbb
sbb
movsl
jle
jno
es
xor
jno
bound
aas
fnstenv
dec
sbb
repnz
add
insb
sub
lahf
lods
add
push
mov
push
in
out
hlt
cmp
jbe
mov
lcall
pop
lods
or
pop
cmp
popa
outsl
pop
add
cmp
fwait
lahf
lahf
fcompl
cltd
gs
and
testb
lods
lock
std
popa
pop
cmp
outsl
and
stc
rcl
push
add
cmp
push
repz
pop
push
pop
rcrl
or
cwtl
sub
xchg
in
push
jp
mov
sarl
stc
mov
adc
xchg
push
lret
or
mov
mov
adc
gs
jo
das
push
mov
movsl
pusha
jo
lahf
mov
rclb
inc
xor
jbe
jns
pop
icebp
ja
xor
out
test
insl
lcall
sahf
in
cwtl
push
and
je
into
psllq
add
cwtl
scas
mov
lock
bnd
psrlw
adc
mov
adc
div
push
xlat
cwtl
mov
jo
add
mov
push
sbb
loope
and
adc
pop
xor
movsb
sahf
addl
insb
adc
xchg
jmp
jmp
dec
sub
push
push
aam
xor
mov
mov
mov
mov
xor
inc
mov
stc
rorl
pop
mov
scas
fdivrl
add
or
mov
push
mov
or
popa
adc
xor
lret
fwait
imul
inc
clc
jle
aad
enter
sahf
popa
aaa
pop
mov
fistpl
push
dec
js
fsubr
xor
and
push
mov
out
ret
das
call
data16
or
xchg
cmp
and
mov
xor
insl
sub
fsubrp
sbb
push
ss
repnz
sub
das
xor
stos
mov
and
imul
xchg
cwtl
and
out
out
loop
push
lds
aam
cmc
sbbl
pushf
fimull
std
push
xchg
xchg
scas
test
movsb
ja
xlat
push
stc
stos
and
neg
adc
jge
js
dec
shr
lret
mov
hlt
jns
incl
xor
das
xlat
mov
pop
dec
stos
or
cmc
ljmp
jae
popf
and
pop
push
cmpsb
cs
ss
insb
mov
push
fldl
nop
test
stc
mov
cmc
xor
test
cmp
sbb
pusha
test
adc
mov
push
pop
lahf
fwait
add
jl
data16
jbe
mov
dec
mov
movsl
sbb
xchg
cmp
push
xor
outsb
pop
and
stos
add
jle
add
sbb
movsl
push
xchg
push
test
jne
ficoms
inc
mov
adc
outsb
in
aad
lds
mov
movsl
push
xchg
push
test
jne
ficoms
inc
mov
adc
pop
lods
lods
dec
lds
xchg
into
test
lods
out
gs
into
inc
mov
xor
xor
add
outsb
les
mov
movsl
push
adc
adc
je
into
xor
mov
jno
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
iret
jg
outsl
out
pop
decl
jae
dec
sarl
cmovg
jle
movswl
scas
das
lahf
aas
iret
jg
outsl
out
pop
decl
aas
lahf
das
scas
pop
mov
out
outsl
fistpll
iret
rcrl
scas
das
lahf
aas
iret
jg
outsl
out
pop
decl
aas
lahf
das
scas
pop
mov
int3
add
jo
pop
icebp
push
cld
nop
or
es
aaa
xchg
dec
inc
pop
adc
movsb
xchg
inc
test
sbb
lcall
pop
mov
xchg
out
add
lret
lahf
stos
push
pop
inc
add
nop
lret
lock
mov
lahf
jg
call
aaa
ljmp
test
mov
scas
dec
sbb
aaa
iret
cmp
dec
test
sbb
jne
icebp
ret
adc
mov
or
sldt
mov
cmpsb
sub
cli
das
cmpsl
add
mov
pop
in
loopne
jg
jno,pt
cli
and
sub
je
dec
ds
out
pop
mov
mov
pop
mov
mov
outsl
out
pop
decl
aas
lahf
das
scas
pop
mov
out
outsl
fistpll
movswl
scas
das
lahf
aas
out
jnp
xchg
dec
pop
in
inc
lret
pop
mov
out
outsl
mov
pop
lret
jns
stos
sbb
dec
push
fisubl
jbe
imul
push
xchg
insl
mov
push
shll
inc
leave
dec
loopne
cmp
daa
subb
das
scas
pop
mov
out
outsl
fistpll
movswl
scas
das
lahf
aas
iret
jg
outsl
out
pop
decl
aas
lahf
das
scas
pop
mov
out
outsl
fistpll
movswl
scas
das
lahf
aas
iret
jg
pop
jb
rorb
inc
nop
dec
dec
cmp
outsb
je
lahf
inc
stos
mov
sub
cmpsb
loop
fidivrl
repz
outsl
insl
xchg
call
hlt
int3
addr16
addb
sbb
sbb
hlt
dec
inc
mov
popf
faddl
cs
fld
fbld
and
xlat
xchg
xor
sbb
insl
in
call
sub
xlat
push
mov
cmp
pushf
aad
xchg
mov
roll
pop
ror
mov
jbe
mov
mov
mov
shlb
mov
jmp
gs
jle
aad
lahf
dec
jb
inc
sarl
aas
inc
fadds
sbb
rcll
pop
sub
sar
lock
xlat
push
in
lcall
mov
sub
cmpsl
add
in
sub
sbb
imull
out
jne
shll
outsl
mov
scas
pusha
fisttpll
and
andl
aas
nop
inc
xor
xorb
xor
sbb
jo
push
clc
dec
sahf
pop
add
xor
je
and
aaa
call
imul
xlat
sbb
mov
loope
pusha
out
pop
outsb
or
pop
cmp
push
mov
or
iretw
xchg
mov
sbb
xchg
mov
gs
mov
jmp
das
push
test
mov
shlb
sub
mov
xchg
int3
cmpsl
ja
push
jp
mov
pushf
pushw
aaa
push
stos
mov
add
mov
nop
cmp
nop
into
jl
shrl
adc
sub
cmp
std
add
mov
out
mov
shl
sbb
mov
mov
out
jno
mov
mov
xchg
cltd
jnp
jne
mov
xchg
cmc
sbb
imul
push
add
cwtl
pop
xchg
jl
into
mov
sub
cmpsb
inc
dec
adc
iret
push
adc
insb
push
sbb
jne
push
adc
orb
sub
loope
lods
lock
mov
hlt
inc
rcll
mov
sub
cli
adc
jge
insl
popa
popf
push
pushf
and
or
mov
sub
outsb
or
dec
xchg
inc
out
outsb
insl
or
push
mov
popf
mov
cmp
mov
push
inc
mov
jp
loop
test
fiaddl
xchg
in
and
ljmp
pop
and
sbb
repz
inc
mov
pop
inc
outsl
insb
adc
ret
sub
jns
lock
sahf
or
push
xchg
shrl
dec
add
mov
test
sub
test
inc
push
pop
xchg
call
dec
leave
pop
mov
mov
scas
negl
movl
or
bound
mov
mov
sbb
fmuls
fmuls
dec
jnp
ficoms
mov
fmull
ljmp
rorb
fdivl
cmpsb
pop
push
daa
jbe
dec
pushf
push
pop
adc
ror
negl
xorb
xchg
mov
or
xor
xor
pop
or
int
sbb
pop
adc
xchg
aad
dec
inc
nop
xchg
and
xchg
xchg
out
loop
imul
cltd
loopne
and
fs
sbb
mov
xchg
sub
sbb
fidivrs
sub
add
push
push
outsb
or
xor
xchg
lcall
mov
aad
push
cltd
lahf
cmp
repz
mov
movsl
xchg
aam
dec
mov
scas
test
dec
scas
and
push
jp
cmp
push
mov
mov
xor
fsts
pop
mov
mov
std
imul
xchg
inc
mov
ret
je
adc
lahf
sarb
stos
les
cmp
test
adc
xchg
mov
sbb
stos
push
outsb
xor
jo
out
out
cld
adc
xor
out
ja
add
js
movsb
pop
sbb
idivb
adc
pop
sbb
or
out
push
and
inc
pushf
adc
mov
mov
push
rorb
adc
filds
jle
sub
cwtl
xor
mov
ret
dec
mov
scas
int
jecxz
lock
sbb
mov
dec
in
adc
or
aas
push
lock
cli
test
fcoms
sub
jne
lret
push
dec
inc
cld
call
push
test
lods
movsl
scas
push
test
mov
fmul
adc
data16
call
pusha
adc
dec
sub
popa
jle
add
ss
xchg
pusha
inc
aam
jle
xchg
mov
add
jmp
pusha
pop
data16
mov
push
push
push
sub
jae
mov
sub
mov
stos
test
mov
sub
or
add
mov
and
pop
inc
enter
outsl
or
in
out
push
xchg
in
jb
out
mov
sub
cli
inc
flds
sub
jo
fistpl
ljmp
rorb
in
test
int
xchg
popf
call
cmpsb
hlt
sub
and
fstpt
xchg
sub
sub
fldcw
mov
push
vmovntpd
in
fidivrl
in
or
mov
push
add
sub
inc
sbb
fdivr
xor
das
lahf
nop
mov
mov
cmp
repnz
pop
hlt
shr
pop
addr16
subl
push
mov
fistpll
jle
testb
subb
push
mov
xor
jo
and
push
inc
int
cmp
out
imul
add
lea
cmp
xchg
xor
push
or
jb
push
mov
fwait
cmp
sub
push
insl
cmp
mov
cmovb
mov
xchg
or
loope
sar
push
repz
adc
pop
insb
or
xor
or
pop
les
inc
icebp
es
pop
imul
adc
popf
cmp
jnp
sbb
mov
mov
imul
xchg
loope
jo
popa
shl
push
and
insb
dec
std
add
out
insb
xchg
and
pop
sub
subb
sub
cmp
xchg
pop
or
fildl
mov
add
dec
inc
adc
xchg
xchg
xchg
dec
add
cmp
push
test
mov
icebp
sub
mov
stos
jns
sahf
arpl
push
daa
cwtl
fistpll
andb
mov
mov
lods
cmp
xlat
test
push
xor
ficoms
lahf
loope
lret
pop
test
sbb
arpl
lods
filds
jne
mov
mov
popf
mov
js
jg
test
and
mov
cmp
fcoml
aaa
xor
mov
mov
lds
mov
add
in
stos
push
lret
shll
and
clc
out
dec
arpl
mov
jbe
sub
jnp
ficomps
in
sub
pop
lcall
mov
inc
outsl
adc
popf
scas
inc
stos
sub
mov
pop
mov
cld
push
pop
xchg
lods
add
xor
mov
inc
inc
or
stc
add
mov
push
inc
jl
stos
sbb
xor
jne
sub
out
dec
hlt
bound
scas
sbb
insl
jb
lods
fs
fwait
pop
sub
stos
xlat
iret
add
jecxz
shlb
in
add
cmp
push
out
push
jns
cmpsl
mov
dec
inc
xor
xor
mov
lcall
loopne
out
negb
dec
and
jno
mov
xchg
out
mov
lock
lret
pushf
push
das
adc
pusha
rclb
outsb
pop
xchg
outsb
nop
cld
sub
dec
or
xchg
adc
mov
cmp
sub
xchg
dec
mov
pop
jb
sbb
cmp
cmpl
icebp
hlt
dec
out
lds
lret
push
inc
xchg
cmp
dec
hlt
dec
in
rcll
das
pop
sti
ja
or
je
inc
fisubrs
mov
fbld
notl
in
jp
sahf
aam
inc
mov
popa
mov
mov
movsb
push
nop
add
sub
in
popa
cmp
sti
or
pop
outsb
mov
addb
popa
xor
sbb
aam
jns
xor
pop
fdivp
and
fs
xor
addb
aas
fxch
pop
add
cmp
xchg
inc
xor
sub
inc
hlt
insb
negl
xchg
mov
sbb
cltd
out
sbb
out
pop
mov
mov
dec
in
inc
adc
sti
pop
mov
repz
xchg
ja
fsubrl
lret
nop
xchg
mov
push
in
and
bswap
pop
adc
cwtl
push
and
stos
fimull
mov
dec
mov
insl
mov
nop
inc
bound
adc
popf
pop
hlt
cld
push
or
sahf
aaa
mov
mov
xchg
iret
orl
xchg
int3
cmp
lcall
mov
dec
mov
xchg
pop
inc
movb
mov
outsb
cmp
dec
sahf
jne
shll
pusha
mov
xor
mov
pop
mov
sbb
and
push
sti
ds
mov
mov
and
xor
outsb
clc
xchg
int3
or
dec
fstpl
mov
lock
pop
hlt
xor
and
into
jecxz
shlb
fidivs
insb
sbb
or
jo
movsl
jmp
sti
les
ds
pop
fisubrl
cwtl
repnz
mov
out
ror
loop
mov
xlat
jno
mov
imul
int3
mov
enter
cmp
dec
subb
push
ret
mov
xor
pmaxub
dec
mov
xor
aad
pusha
or
cld
fwait
jae
fidivs
aam
jmp
aam
mov
lahf
fiadds
sub
insb
dec
ret
add
out
addb
sbb
mov
mov
adc
add
pop
mov
mov
fs
jmp
mov
xchg
stc
cmp
jmp
stos
mov
nop
lock
xchg
mov
push
das
lods
push
and
out
mov
push
leave
xor
iret
jns
orb
es
rorl
popl
outsb
push
roll
lods
loope
and
inc
jle
mov
sub
mov
add
add
lods
add
out
rorl
cmp
dec
cmpb
dec
call
hlt
push
imull
mov
sbb
mov
enter
pop
mov
mov
mov
add
inc
mov
jge
jno
std
mov
adc
fld
ficoms
xchg
mov
xor
stos
lea
inc
and
into
lds
lcall
dec
xor
xor
dec
std
fdivp
xchg
test
imul
mov
push
stc
inc
sub
into
cmpsl
movsl
lret
or
pushf
pop
ds
mov
xlat
push
xchg
jp
testl
lcall
lcall
lods
lret
jecxz
imul
je
xorl
jl
lds
push
xor
mov
inc
gs
mov
stos
xor
scas
sub
jb
ret
xor
mov
xor
push
aam
add
fidivs
out
dec
movsl
lods
lds
jp
inc
addr16
mov
push
xchg
out
jb
mov
ror
hlt
je
pop
and
enter
jo
aam
fwait
popa
popa
pminsw
fwait
mov
std
pop
jecxz
stc
aad
and
and
mov
xchg
sub
icebp
dec
mov
outsb
sbb
add
imul
in
cmpsb
xchg
push
ret
mov
mov
pop
mov
xchg
mov
insl
subl
push
sub
bound
pop
je
push
pushf
je
mov
inc
sar
outsl
jecxz
sbb
mov
cmp
inc
imul
dec
inc
shll
aad
sub
clc
push
jo
rolb
push
dec
decb
mov
fisttpl
call
in
and
insb
and
inc
mov
sub
rolb
icebp
call
xor
mov
mov
in
imul
loope
fwait
push
hlt
mov
ret
out
clc
jns
test
movsl
out
stos
pop
and
out
adc
adc
adc
stos
push
lds
mov
aaa
jno
mov
lret
dec
cltd
mov
cmp
mov
frstor
xor
dec
adc
shlb
cs
xlat
jle
push
jmp
jns
shlb
push
pop
stc
cli
mov
pusha
test
into
xchg
jecxz
adc
push
in
jno
mov
inc
cmpsb
mov
mov
nop
inc
loope
push
lahf
arpl
es
addl
inc
sbb
mov
inc
ret
fists
dec
vpsrlq
jg
arpl
mov
sub
mov
add
sub
ret
out
inc
loop
jp
test
cld
rorb
ljmp
xor
pushf
inc
repz
push
inc
ret
and
lock
sub
fidivs
xor
int3
pop
mov
ret
mov
aad
push
cmp
jle
inc
or
push
dec
and
pop
flds
jno
out
jne
push
pop
push
sub
icebp
cs
scas
sbb
out
insl
pop
stos
lods
mov
xchg
cld
mov
mov
mov
int3
xor
in
xor
aam
dec
and
popa
addl
jae
mov
lods
jmp
adc
sbb
ret
aam
fildll
pop
jle
mov
repnz
mov
cmc
int3
push
sti
xlat
or
lea
je
shll
cmpsl
sti
in
leave
fildll
mov
fcomip
jle
inc
mov
pop
xchg
and
addr16
mov
arpl
mov
in
out
or
mov
dec
pusha
inc
pop
repz
jne
push
dec
sbb
ds
sub
jge
cmp
lahf
xchg
loopne
inc
mov
cwtl
imul
push
inc
hlt
xchg
adc
xor
pusha
loope
out
xchg
in
int
and
icebp
mov
dec
jns
pop
push
mov
sbb
stc
mov
sub
inc
jl
jb,pt
data16
dec
and
jg
push
adc
inc
cld
iret
and
loopne
and
bound
cmp
mov
cmpsl
rcrl
add
das
xchg
notl
rcr
mov
pop
imul
sub
and
jl
inc
pop
xor
orb
fs
sub
push
adc
cmp
mov
mov
call
shll
add
stos
push
dec
loope
cmpsb
enter
lahf
aad
into
aas
adc
mov
jl
shll
pop
sbb
pop
jmp
push
inc
scas
sbb
push
das
out
rcl
std
lods
jge
inc
aam
pushf
mov
cmp
rcll
add
sbb
and
shrl
add
pusha
add
lea
shrl
insl
aam
and
inc
xchg
ja
aad
js
mov
addr16
loope
sti
push
push
or
xor
cmp
lret
or
xor
sub
pop
inc
push
pop
jns
mov
fs
aam
push
cld
jp
mov
loop
shrl
fwait
shl
shlb
mov
fcoml
repnz
cvtpi2ps
mov
clc
and
jl
scas
shll
ljmp
sub
rclb
mov
or
cmpsb
add
pop
pop
cmp
dec
loope
jmp
call
xor
adc
sub
cmpsl
inc
into
jb
mov
push
pop
sub
cwtl
or
scas
pop
clc
mov
leave
mov
lret
lock
pop
cmpl
aas
dec
dec
jae
nop
push
and
xchg
add
fnstcw
lods
sub
jns
ret
dec
insl
jae
dec
test
xchg
lods
jl
jb
xor
mov
fucom
push
pop
dec
and
mov
cmp
sahf
jl
adc
imul
cmp
repz
ljmp
clc
adc
outsb
cld
insl
sub
mov
cs
jmp
aad
push
iret
mov
inc
mov
fnstsw
jbe
rcrb
ds
arpl
sbb
call
pop
outsl
hlt
lahf
jae
cmovno
cmp
mov
fidivl
mov
leave
mov
and
imul
cld
xor
jmp
cmp
jmp
cmp
adc
mov
cld
sbb
outsl
ds
jecxz
and
xlat
shrb
mov
lock
mov
mov
clc
fcoml
out
pusha
stos
or
dec
jo
push
das
xor
fs
in
pop
cmpl
push
cmp
sahf
push
fcmovnu
jge
lahf
inc
mov
cmp
cmc
push
outsb
sarb
fisttpl
adc
clc
push
jne
fcoml
push
push
and
test
sbb
or
ljmp
stos
popa
std
or
mov
outsb
xor
push
jnp
add
push
mul
jmp
stos
mov
sarl
add
das
adc
mov
xor
jne
mov
fnstsw
out
mov
cmpsb
cmp
xor
inc
sub
sub
mov
mov
dec
outsl
xchg
xchg
mov
lods
int
lcall
inc
and
or
mov
add
test
add
sub
mov
cmp
ds
clc
lods
xchg
aad
je
add
ds
xchg
xor
xchg
dec
aad
icebp
sahf
je
sub
les
mov
push
loopne
je
scas
jecxz
dec
inc
fmull
mov
dec
jne
std
scas
xchg
jae
xchg
xor
addr16
lods
xchg
loop
out
es
fwait
cmp
dec
inc
js
repnz
mov
arpl
ret
push
fs
mov
sub
and
imul
xor
cmp
add
cli
pop
mov
xchg
in
fldt
lcall
xor
or
cmp
or
mov
push
dec
dec
and
sbb
stos
mov
and
push
push
es
sbb
mov
sub
pushf
cmp
sub
sub
pop
shll
cmp
mov
dec
in
test
xchg
addr16
sub
xchg
and
jmp
int3
repnz
arpl
aaa
cmc
mov
addl
lret
mov
mov
sarb
mov
add
loop
clc
dec
adc
and
jge
loope
jg
and
icebp
dec
jmp
mov
es
ret
xchg
sarb
sti
xor
std
aas
fisttps
dec
xorl
push
notl
mov
movsb
push
sub
shll
leave
sbb
sub
loopne
shlb
mov
in
xchg
insb
pop
daa
pop
movsl
or
inc
push
sarb
aas
push
popf
adc
lea
jp
sub
ret
call
mov
inc
mov
push
adcl
bound
hlt
nop
stos
xor
popa
in
xor
int3
sub
roll
cltd
and
aaa
dec
xchg
inc
outsl
repnz
push
aaa
std
cltd
in
pop
outsb
xor
call
push
out
xchg
adc
jmp
mov
es
shl
roll
push
adc
outsl
inc
arpl
cmp
lock
dec
jb
or
dec
bound
adc
je
cmp
dec
mov
push
cmp
mov
leave
cmc
fstpt
fs
arpl
xor
or
std
shrb
sti
iret
push
add
pop
mov
mov
ljmp
push
fadds
xor
jne
addb
sbb
fistps
lods
xchg
inc
sub
adc
repz
mov
pop
jge
xchg
xor
lods
sahf
adc
jg
nop
mov
mov
aaa
inc
or
xchg
pop
inc
or
jo
int
test
cli
gs
std
xor
push
jne
ljmp
mov
jge
and
xor
pop
movsl
popf
jl
mov
popa
dec
mov
or
xchg
sbb
fwait
cmp
gs
cwtl
mov
lods
clc
incb
bound
push
icebp
jnp
int
mov
and
inc
add
push
and
add
pop
call
in
jge
sbb
stos
outsl
std
into
fsubrl
cli
mov
ret
jle
cwtl
pop
inc
sub
rorl
fs
mov
jmp
and
and
inc
mov
mov
xor
add
add
pop
outsl
sub
stc
push
iret
lret
push
dec
or
pop
ret
cmp
icebp
adc
rcrb
mov
aam
adcb
jle
shlb
cmp
or
divl
mov
dec
ret
mov
in
mov
inc
daa
push
insl
movsl
push
outsl
cmpl
sbb
xchg
jo
pop
xchg
lahf
inc
mov
sahf
xchg
push
lods
test
popf
lret
fcoml
scas
fs
cmp
mov
enter
fsts
popf
mov
outsl
out
pop
decl
aas
lahf
das
scas
pop
mov
out
outsl
fistpll
movswl
scas
das
lahf
aas
iret
jg
outsl
out
pop
decl
aas
lahf
das
scas
pop
mov
out
outsl
fistpll
movswl
scas
das
lahf
aas
iret
jg
outsl
outsl
pop
decl
aas
lahf
das
scas
pop
aas
cmovg
pop
out
outsl
fistpll
movswl
scas
das
lahf
aas
iret
jg
outsl
out
pop
decl
aas
lahf
das
scas
pop
mov
inc
mov
pop
pusha
dec
jo
lea
test
sbb
lods
int
adc
dec
mov
imul
cltd
push
test
jle
dec
jmp
mov
cmp
lcall
imul
pop
push
xor
iret
outsb
stc
jle
dec
jecxz
lret
scas
or
dec
out
sbb
sbb
push
cli
ja
popa
sub
movsl
push
cmp
xchg
out
imul
es
cltd
xor
mov
pop
icebp
fucom
inc
outsb
fdivrl
mov
mov
adc
xor
jo
popa
imul
loope
shlb
cmp
add
sahf
sub
out
mov
fidivrs
int
sbb
pop
sub
pop
mov
stc
outsl
popa
cmp
xchg
push
add
mov
xchg
cli
pop
fdivs
sub
leave
mov
cmp
hlt
adc
data16
loope
inc
xchg
sub
cltd
dec
clc
jmp
push
push
or
lods
sbb
test
adc
add
push
mov
dec
jmp
mov
add
into
jno
dec
dec
mov
dec
lds
or
and
imul
push
mov
adc
dec
fildll
pop
aad
fwait
xor
lret
fldcw
sahf
or
push
fwait
pop
cmpsl
or
or
jns,pt
lds
sub
pop
stc
scas
or
cmp
dec
pop
into
imul
cltd
push
test
jle
dec
jmp
mov
cmp
dec
pop
into
imul
iret
xchg
aam
push
mov
inc
rol
inc
insl
arpl
scas
iret
loop
xor
out
dec
rcrb
dec
mov
pavgw
in
test
shr
testb
inc
mov
out
inc
das
fwait
jle
stos
inc
pushf
lret
add
aam
xor
fsubrs
enter
push
xlat
mov
cmpsl
or
imul
and
andl
mov
dec
ret
outsl
pop
fsubl
sbb
xchg
inc
adc
and
aaa
xchg
xor
fstpl
sbb
push
add
testl
nop
add
add
cwtl
mov
aad
dec
fsubr
and
shl
sbb
lea
into
and
into
cmp
test
fistpl
inc
aam
rcr
ja
stc
aas
dec
dec
cmp
sti
xchg
lods
cld
cld
in
mov
pop
xchg
lret
cmp
pop
dec
adc
mov
mov
push
inc
dec
test
mov
adc
mov
mov
xor
cltd
sbb
add
cmpsl
loope
xchg
xor
sub
daa
mov
loope
call
pop
mov
and
mov
xchg
pop
sbbl
inc
jge
push
lds
xor
mov
jge
xchg
pop
jo
adc
ret
cld
iret
or
iret
stos
stos
ret
lret
sbb
xchg
cmpsb
push
scas
mov
lods
jb
adc
cmp
lods
cmp
mov
lret
cmp
shrb
rcl
sbb
mov
mov
adc
and
imul
out
dec
fmul
loopne
pushf
aas
adc
mov
call
pop
out
xor
xlat
sub
push
sub
dec
sbb
adc
test
cmpsl
push
jp
lret
add
xor
inc
pop
xor
daa
adc
pop
push
addr16
test
jno
pushl
out
fstps
pushf
push
shrl
orb
mov
aas
scas
aaa
mov
in
or
sti
jp
mov
cltd
inc
jmp
push
push
aam
xor
jb
xlat
pop
xchg
les
sti
imul
enter
stos
add
fwait
sub
out
test
mov
cld
jnp
stc
pop
data16
cmp
mov
sbb
and
inc
pop
fs
fdivrl
cld
mov
cmpsl
pop
arpl
cmp
daa
jo
and
sahf
stos
push
xor
aas
push
xchg
jp
std
mov
jbe
and
fimull
and
sub
push
sbb
rorl
inc
mov
mov
inc
dec
lea
or
icebp
jb
gs
mov
adc
push
ret
inc
mov
addr16
cld
mov
nop
inc
fs
mov
dec
jmp
les
or
stos
push
cmp
loopne
push
lcall
jl
cmp
mov
sub
out
mov
jns
lock
xor
cmpsl
aad
sub
lahf
in
por
pop
jle
add
jae
mov
cmp
jae
inc
movsb
stc
ja
rolb
sub
pop
mov
add
ljmp
mov
test
lock
dec
jb
mov
lea
movsl
repnz
lods
mov
mov
std
jne
aad
test
cmp
jmp
lret
dec
xchg
xchg
inc
dec
sbb
aam
in
stc
les
movsb
jle
pop
jns
int3
popa
aad
cmp
xchg
jmp
sbb
and
pusha
inc
mov
jge
mov
jno
mov
loop
mov
aas
push
jmp
and
mov
loopne
stc
cli
mov
fisttpl
and
scas
pop
push
mov
jl
or
es
adc
dec
addr16
enter
sbbb
repz
je
pop
movsb
test
lcall
adc
jno
in
dec
outsl
xchg
mov
and
cmpsb
in
fcomip
insl
out
mov
repnz
lret
xchg
mov
insb
xor
aaa
outsl
dec
cmc
lods
cltd
xchg
and
sarb
es
and
imul
jns
add
and
adc
add
fwait
dec
daa
xchg
hlt
mov
xchg
in
out
std
clc
mov
pop
mov
cs
orl
mov
xor
jg
sbb
or
std
sbb
lret
push
out
dec
stos
pop
cli
out
inc
cmc
rep
dec
test
mov
fs
push
shlb
out
fsubs
mov
pusha
sub
ljmp
inc
in
loope
incl
xchg
into
or
mov
dec
imul
lret
push
repnz
inc
fcoml
jp
in
fcomps
xor
int
sbb
in
xchg
cli
cwtl
xor
outsl
mov
sahf
fucomi
jp
cld
push
mov
mov
mov
dec
pop
pop
repnz
push
jecxz
fwait
push
scas
inc
fwait
lcall
fisubl
inc
add
mov
imulb
push
push
pop
je
mov
test
in
nop
test
pop
xor
sub
jl
mov
loop
and
jmp
aas
and
out
inc
daa
std
lcall
adc
mov
xlat
sbb
pop
jns
add
jnp
adc
sub
mov
fidivl
out
mov
sti
or
cmp
mov
pop
sbb
sub
adc
sbb
mov
add
ret
adc
jp
mov
in
mov
gs
inc
inc
fnstenv
out
pop
cmp
pop
cmc
pop
push
pop
aad
xor
sbb
inc
icebp
movsb
push
cli
mov
pop
cs
mov
ss
hlt
push
ja
cmc
cmp
setg
sahf
cmp
cwtl
bound
clc
das
push
dec
je
scas
pop
mov
fbld
mov
pop
xchg
adc
cmp
pop
lret
mov
clc
xchg
fs
imul
std
scas
and
in
push
xchg
adc
or
lea
sub
pop
mov
fimull
adc
inc
imul
push
gs
mov
dec
push
push
or
cmpb
push
iret
repz
fiaddl
add
push
lcall
jns
cwtl
sti
push
pop
lds
jge
popf
adc
xchg
jne
sbb
popfw
insl
and
jns
addr16
lods
out
pop
xchg
add
pop
mov
adc
lret
cmp
mov
fiadds
push
add
insb
or
lret
pop
inc
dec
or
adc
or
xlat
aas
adc
hlt
arpl
mov
jns
out
sbb
fwait
lret
hlt
pop
in
lods
sbb
mov
cs
sbb
lods
out
mov
cld
mov
pop
mov
hlt
in
lret
xor
xchg
ja
sahf
adcb
xchg
orb
jne
mov
out
test
in
leave
jl
inc
mov
outsb
idiv
pop
cwtl
add
or
in
fwait
inc
adc
sub
sub
movsl
imul
cmp
pop
rol
test
data16
push
add
push
jb
push
dec
imul
iret
jge
push
sbb
movsb
or
mov
fs
aad
lahf
pop
not
int
stos
loope
test
fnsave
or
les
cmpl
adc
fiadds
int
push
std
jp
add
lea
cwtl
lcall
inc
out
fmull
clc
adc
test
iret
add
adc
ss
mov
adc
pop
inc
cmp
pop
mov
movsb
inc
and
push
in
repz
mov
xor
pop
add
jp
jae
push
cmc
dec
pop
or
out
jp
lods
jg
sub
cmpsb
les
push
mov
sub
insb
dec
stos
mov
imul
push
cmp
push
stos
cmp
and
mov
pusha
inc
and
das
sarb
sub
inc
adc
dec
pop
pop
aas
cmp
push
loop
movsb
addr16
loopne
test
lock
push
enter
xor
in
cwtl
repz
xor
xor
outsl
nop
shl
cmp
cmpsl
imul
push
xlat
pop
adc
outsb
pop
fs
xchg
inc
icebp
sbb
das
add
mov
dec
mov
test
in
jp
inc
test
adc
cs
out
mov
lds
rcrb
sti
push
cli
cmp
jnp
cwtl
cmp
addb
mov
cmp
adc
outsb
test
out
popa
mov
xchg
and
lock
sbb
lahf
in
mov
aas
iret
adc
es
push
push
lidtl
scas
pushf
adc
pop
mulb
inc
repnz
sbb
ja
ficomps
sub
testb
jo
call
cltd
xchg
sub
mov
cwtl
stos
jnp
cltd
push
pop
mov
lods
les
push
bound
sbb
faddl
mov
push
xchg
xchg
and
ljmp
std
repnz
mov
mov
or
or
pop
dec
or
dec
mov
sub
push
loopne
mov
mov
add
mov
mov
in
hlt
xlat
ret
mov
int
mov
lret
xchg
cmp
add
lret
add
jg
inc
decl
out
cwtl
insl
xchg
rcll
and
js
xchg
cmp
push
xchg
fidivrl
cld
and
mov
xlat
add
out
call
sub
mulb
cli
xorl
cld
ret
pusha
or
pop
pop
or
and
mov
cmp
mov
jecxz
push
jne
loop
gs
pop
xchg
push
push
jle
xor
les
sub
rep
lods
out
push
outsb
std
jae
xor
loop
jge
cld
push
mov
mov
dec
fdivr
sub
pop
xchg
or
pushf
push
cmpsb
or
add
nop
popl
dec
mov
scas
dec
fdivs
sti
mov
mov
add
outsb
mov
jecxz
in
scas
dec
adc
sub
jbe
cmpsl
jbe,pn
add
js
sub
fs
mov
mov
push
roll
sarl
inc
mov
adc
xor
lahf
lcall
inc
out
ljmp
ss
adc
dec
test
xor
repnz
inc
mov
cmpsl
test
and
cmp
loopne
jmp
es
xor
jb
xchg
gs
cmpsb
int3
mov
pop
lea
jmp
jecxz
inc
push
pop
mov
push
push
stos
iret
pop
in
sbb
push
jl
sahf
mov
ljmp
dec
push
push
cld
inc
dec
aam
cmp
loop
mov
ret
insl
test
mov
xor
xchg
nop
lret
xor
jg
fucomi
pop
mov
inc
or
adc
and
inc
arpl
adc
ret
popf
adc
mov
xchg
stos
dec
scas
lea
pop
dec
mov
add
mov
push
loop
fdecstp
aam
movsl
aaa
repz
inc
idivl
cwtl
out
push
mov
loopne
push
and
xor
fwait
sub
mov
lret
dec
cmpb
lods
repnz
scas
out
scas
pop
jns
jg
repz
mov
out
iret
pop
xchg
push
xchg
out
loop
xor
dec
jae
aad
jb
cltd
scas
test
jl
sbbl
sub
les
dec
pop
add
repz
add
jecxz
dec
ret
xchg
mov
inc
add
testb
rorl
rorl
push
jno
xchg
loopne
dec
std
add
jnp
push
dec
je
jo
cwtl
aas
push
and
int3
sti
dec
cmp
xlat
sbb
push
sbb
lods
aaa
call
push
sti
cmp
cmp
pop
xchg
and
sub
sarl
add
out
and
push
out
repnz
lret
sub
xchg
pop
icebp
mov
xchg
imul
mov
movsl
shr
dec
cmpsb
inc
add
xchg
jo
push
jp
inc
in
adc
lret
sub
xchg
mov
aam
dec
adc
in
test
lahf
mov
jp
xchg
mov
stos
fdiv
pop
mov
icebp
mov
xor
xor
imul
dec
jbe
pop
andl
aam
xchg
jno
xor
xlat
xor
imul
add
cmpl
pusha
dec
adc
les
sub
push
mov
or
ja
mov
popf
sti
test
adcb
and
popf
nop
push
sub
xor
or
popf
xor
leave
pop
jecxz
fisubrs
mov
arpl
mov
lret
mov
ss
inc
mov
mov
jl
out
inc
pop
lds
dec
cmpsl
cmp
mov
lods
mov
adc
fs
fisubrs
idivl
mov
adc
dec
das
sub
mov
dec
jne
xchg
xchg
scas
sub
iret
and
xchg
pusha
and
insl
jns,pn
dec
pop
subb
push
into
or
sbb
ror
mov
dec
xor
mov
sbb
addb
and
push
jo
mov
push
andb
mov
jecxz
push
lods
lods
dec
jnp
mov
pop
or
rcr
sbb
icebp
sti
jo
dec
mov
cmpsb
cmpsb
imul
ret
subb
lea
push
lock
aam
cmp
clc
inc
mov
lahf
xor
sbb
addb
rorl
sti
mov
dec
lahf
mov
iret
mov
or
mov
mov
mov
xchg
ret
mov
adc
js
jnp
and
les
push
mov
dec
test
jae
adc
je
xchg
dec
jo
hlt
mov
lea
push
stc
sbb
insb
loope
lock
movsb
mov
mov
add
xchg
scas
insb
add
roll
mov
or
xchg
mov
leave
push
mov
jo
pop
pop
lods
aad
cld
je
xchg
and
fistps
sub
pop
cwtl
dec
jb
cmc
incb
mov
mov
hlt
lret
shr
mov
cmpsb
pop
jecxz
out
inc
loop
xor
mov
and
push
cmpsl
or
outsl
popf
lods
adcb
jecxz
adc
xchg
lods
sahf
mov
push
sub
lods
leave
adc
lcall
sbb
inc
cmp
push
add
femms
mov
scas
adc
pop
int3
lret
xchg
arpl
aam
insb
xor
adc
add
in
outsb
push
rclb
test
data16
mov
out
xchg
and
inc
rcl
sub
inc
imul
dec
arpl
insl
rorb
fprem1
and
mov
inc
cmp
or
mov
test
lock
dec
jb
cmp
mov
xchg
lcall
loopne
lea
lods
btr
pop
insl
fwait
cmp
sbb
into
testl
xchg
sbb
pop
sbb
adc
add
out
xchg
addr16
dec
shll
pop
lods
cmc
cs
adc
sar
jecxz
lds
jns
cmp
cs
fmull
inc
inc
pop
lahf
in
xor
popf
inc
jecxz
pop
lcall
push
insb
mov
mov
daa
xchg
fs
push
lret
or
ja
dec
push
sahf
inc
pusha
or
xchg
jno
dec
pop
sub
sbb
insl
add
bound
rol
push
add
ljmp
lods
test
pop
jl
mov
jp
mov
shrb
jl
mov
mov
aam
adc
popf
xor
test
pop
aad
xor
push
out
lock
jmp
xor
mov
jg
pop
and
mov
jecxz
mov
xchg
xchg
xorl
aaa
dec
jmp
enter
incl
lcall
fs
out
je
test
mov
sub
stos
pop
cli
dec
data16
lret
cli
in
es
inc
aad
fwait
xchg
in
loop
aam
push
pop
test
pop
jmp
stos
pop
mov
or
dec
das
push
add
xchg
lcall
jl
xor
xchg
push
xchg
xchg
cmp
iret
inc
jno
fimuls
push
in
sbb
outsb
out
mov
adc
add
sbb
fs
cmp
in
ljmp
mov
cmpsb
xor
sti
push
das
cltd
pop
mov
fwait
std
out
in
bound
mov
dec
jmp
cmp
das
test
popa
push
mov
lcall
bnd
loope
pop
stc
jmp
addr16
mov
jl
xor
pop
xchg
mov
push
dec
ljmp
fisttpll
int
add
inc
push
push
jb
roll
dec
arpl
pop
dec
lret
push
sbb
xchg
rcll
mov
jl
xchg
xchg
jo
fimull
and
hlt
rclb
cltd
jo
lea
mov
xchg
adc
jns
or
ret
cmp
jmp
fnstenv
xchg
fisubl
inc
jmp
pop
push
cltd
loope
icebp
lea
les
cmpsb
dec
mov
jmp
iret
mov
loop
dec
insl
pushf
pop
fldl
cmp
push
mul
sarl
data16
fstpt
push
cmp
xchg
xor
inc
sbb
and
aaa
xchg
mov
enter
testl
and
adc
testb
mov
addr16
stos
ror
xor
dec
inc
xor
orb
mov
add
or
stos
ja
or
or
ret
int
cli
pop
xchg
xor
mov
jl
mov
es
adc
push
inc
mov
xchg
jle
push
jl
xchg
or
cmp
ja
cmp
sub
ja
std
iret
das
jnp
lea
daa
cs
adc
sarl
cmp
test
sub
sahf
xchg
mov
xor
mov
insb
xor
jge
fsts
sub
imul
dec
pop
mov
sub
pop
mov
xchg
lea
mov
xchg
push
sbb
sets
cltd
push
inc
pop
pop
pop
and
pusha
jg
push
inc
pop
insb
push
pop
int3
leave
ret
lret
icebp
das
loop
jp
xlat
jno
adc
cmp
and
fnstenv
inc
jp
add
or
dec
pop
xchg
clc
jbe
pusha
sub
xlat
push
jp
test
cltd
push
jge
addr16
jmp
mov
mov
jl
fmulp
jmp
pushf
iret
sub
mov
pop
hlt
icebp
jnp
cmp
jl
xchg
cmp
int
dec
push
cmp
jns
adc
xor
in
dec
and
push
or
push
xor
das
mov
aam
int3
adc
inc
xchg
inc
aad
mov
out
push
ljmp
int
jno
push
flds
pusha
cmpsl
inc
outsl
xchg
xchg
outsl
jmp
out
mov
out
imul
jp
fbld
and
mov
xchg
cmc
xchg
mov
dec
mov
ds
jo
mov
dec
mov
mov
push
mov
repnz
imul
dec
gs
sbb
fdivl
movsb
add
jle
rcr
fbstp
push
jle
jmp
mov
mov
pop
inc
cs
add
lret
push
mov
bound
mov
push
jo
jae
pop
cmpsb
push
jb
mov
pop
xor
mov
jmp
mov
ds
push
ja
dec
jne
mov
dec
imul
xor
inc
scas
push
pusha
adc
test
fdivrl
lea
push
pop
push
test
les
ss
out
popa
push
mov
mov
je
cltd
orl
adc
dec
out
sbb
loope
push
test
or
push
cmpsb
jl
jb
enter
jle
pop
jecxz
push
sub
lcall
fcmove
or
sub
pop
sahf
std
pop
arpl
and
dec
cmp
push
fmull
stc
inc
ficoml
outsb
sub
or
dec
fwait
xorl
into
fcmovnu
inc
pop
enter
shrl
lods
xchg
dec
test
and
insl
push
push
sub
lods
inc
mov
xchg
mov
mov
push
cmp
fistpll
cli
icebp
jge
xorb
imull
xor
mov
repz
dec
movsl
jne
outsb
pusha
lods
add
xchg
inc
daa
mov
insl
and
cwtl
sbb
test
mov
pop
rep
call
pop
fldl
je
jl
test
cmp
adc
insl
negb
mov
push
mov
jge,pn
xor
hlt
data16
jp
cwtl
jne
loopne
or
xchg
divb
loopne
inc
scas
adc
fs
int3
jle
xor
pop
xchg
movsl
nop
adc
jmp
ss
in
addr16
mov
icebp
mov
xor
push
in
and
rclb
mov
fchs
mov
out
mov
nop
roll
sub
pop
mov
sbb
add
cltd
xor
pop
stc
scas
or
cmp
dec
pop
into
imul
cltd
push
test
jle
dec
jmp
mov
cmp
dec
pop
into
imul
xchg
push
mov
mov
dec
in
pop
stc
scas
or
xor
dec
pop
iret
pusha
ficomps
push
dec
push
stc
outsb
leave
jle
into
imul
mov
sub
and
adc
add
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
aaa
ret
jp
sub
xorl
add
push
add
add
push
add
add
add
add
add
add
ja
sbb
pop
add
add
add
out
add
or
add
add
add
ja
xor
add
push
add
sti
add
add
push
add
cmp
dec
add
add
mov
add
add
add
mov
dec
add
add
jbe
push
add
add
add
pop
add
add
add
cld
add
add
int3
add
add
add
add
pusha
add
add
add
jbe
xor
add
add
add
add
out
add
add
add
add
add
loopne
pop
add
add
add
add
add
add
mov
inc
add
cmp
or
push
add
add
sub
add
aaa
add
mov
addl
flds
add
add
add
add
push
add
pop
add
xor
add
add
pop
add
push
add
add
aaa
add
add
xchg
add
add
add
add
fadds
mov
add
add
add
add
add
mov
add
sbb
or
sbb
add
add
testl
sti
add
add
add
add
cld
add
add
add
add
cld
add
add
xchg
testl
int3
add
add
add
add
add
jbe
icebp
add
add
push
add
add
add
add
add
add
pop
add
add
add
add
add
aaa
add
add
add
add
add
add
add
mov
xor
test
push
addl
lock
dec
add
add
add
add
add
add
add
add
cld
add
add
add
int3
add
mov
and
cld
add
int3
add
push
add
adc
push
add
add
add
add
add
add
add
push
add
add
add
faddl
jbe
or
sub
jbe
lcall
add
mov
add
add
push
add
pop
add
add
add
add
add
cld
add
add
add
add
xchg
add
add
push
add
add
add
push
add
add
arpl
mov
test
add
add
add
add
add
add
push
add
add
test
or
fiaddl
arpl
addl
pop
add
test
sub
sbb
jnp
roll
add
add
sbb
push
add
add
push
add
add
add
add
adc
add
imul
add
jbe
or
dec
add
add
add
add
add
mov
test
add
add
add
add
add
add
add
push
mov
mov
add
mov
mov
out
add
add
add
add
jl
pusha
add
add
add
jbe
loope
int
fiaddl
push
add
das
add
add
add
add
add
add
call
add
mov
cmp
add
add
add
push
add
add
add
add
add
add
nop
jle
push
movsl
mov
add
bound
test
fcomps
or
mov
push
call
adc
mov
add
push
pop
jecxz
inc
or
loope
rcll
dec
aad
out
lahf
jl
aad
pusha
outsb
lahf
sahf
ja
fisttps
jbe
jne
cmp
cmpsl
daa
lcall
pop
shlb
and
dec
add
mov
popf
imul
mov
lea
inc
pop
in
xchg
into
inc
pop
jne
pop
sbb
dec
movsl
lock
ljmp
add
scas
lcall
sub
mov
call
andb
sbb
das
mov
cmp
fimull
inc
xchg
cmpsb
cmpb
je
adc
push
inc
leave
xor
sbb
jp
mov
jmp
je
push
out
mov
test
rcrl
popa
inc
xchg
mov
mov
xor
push
fcompl
mov
sbb
cs
aam
iret
mov
jnp
bound
out
in
adc
nop
mov
mov
fwait
gs
pop
popf
inc
adc
jb
add
sub
add
mov
add
push
ja
mov
ss
popa
or
mov
adc
jge
cs
sub
mov
or
lcall
fisubl
inc
popa
popa
out
mov
test
mov
aaa
int3
push
das
sbb
mov
push
mov
jns
xchg
out
aad
test
mov
mov
push
or
jl
out
add
test
mov
out
mov
sub
hlt
mov
push
outsb
leave
and
movsb
std
imul
and
sbb
mov
call
xchg
pop
mov
iret
fldl
push
mov
pop
leave
test
cmc
push
xor
add
or
in
fistpl
imul
aaa
sbb
push
out
test
and
inc
test
mov
popf
xor
xor
jp
mov
cmp
add
jae
sub
loop
push
mov
xlat
xor
push
dec
das
popf
rorl
jmp
out
mov
testl
mov
dec
or
shl
dec
fwait
xor
dec
repnz
or
sbb
insl
pop
add
or
movsl
or
aas
mov
jl
mov
mov
xchg
orb
arpl
xor
data16
call
and
inc
sahf
out
movsl
inc
out
fs
mov
push
pop
lock
mov
jle
xchg
loopne
xchg
fucom
aaa
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
