call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
dec
sbb
cs
jg
das
adc
dec
pop
xchg
test
fcmovnbe
and
imul
push
push
push
push
es
pop
push
dec
data16
inc
sahf
xchg
mov
lock
out
imul
fdivrl
lock
push
outsb
push
push
dec
je
pop
xchg
xlat
fsub
lea
mov
ss
bound
dec
int
adc
mov
xchg
jno
cld
cmp
ret
movsl
or
mov
lds
repnz
add
jb
inc
pop
incb
inc
xchg
addr16
mov
es
into
mov
mov
mov
lahf
imul
adc
push
outsb
push
pop
cmp
inc
dec
test
jecxz
sbb
outsb
mov
dec
scas
dec
lret
aam
repz
xchg
or
repz
not
mov
mov
fstps
mov
xor
lods
andl
push
icebp
dec
adc
outsl
jle
outsb
fisubs
mov
mov
xchg
push
cs
pop
cs
pop
adc
jle
cld
je
add
jle
test
cmpsb
loop
and
out
fdivl
popa
bound
inc
sub
and
jne
pop
sub
fst
negb
xlat
int
cltd
mov
xchg
pop
sahf
dec
popa
dec
std
inc
das
or
sbb
pop
add
sti
ret
in
ficompl
xchg
fwait
mov
je
and
inc
add
push
dec
data16
outsb
xchg
mov
into
out
imul
push
push
push
push
es
pop
push
dec
data16
outsb
xchg
mov
into
out
imul
push
push
rcrb
inc
imul
push
xlat
adc
shll
hlt
subl
inc
jne
cmpsb
inc
push
jmp
push
fcoms
pop
mov
mov
mov
cmp
stc
es
out
and
lret
icebp
or
sbb
fists
jae
lret
jns
rcr
insb
dec
xor
movsl
pop
mov
fadd
fsubs
dec
cmpsl
dec
adc
mov
xorb
adc
or
sub
and
cli
push
aas
mov
mull
fisubrl
xor
mov
test
jb
or
call
in
mov
je
mov
mov
xchg
sub
or
lcall
xor
xor
gs
loop
jg
push
mov
or
stc
or
adc
imul
jo
call
imul
es
int
repz
sbb
and
xchg
dec
xor
add
stos
repz
pop
fwait
loope
sbb
ficompl
xlat
fdivrs
or
pop
out
lahf
aad
insl
dec
push
stc
or
xchg
add
sbb
aaa
gs
push
mov
fldenv
mov
inc
jg
xchg
gs
lret
es
xor
aad
imul
in
mov
loopne
xor
cs
sbb
and
cli
dec
fs
dec
jno
xor
xor
xchg
fsts
jb
adc
jnp
jne
pop
cmpsb
ljmp
inc
test
ret
adc
mov
mov
push
lea
add
scas
xor
add
push
mov
push
push
fsubs
sbb
pop
mov
fwait
hlt
sbb
lahf
sbb
jbe
push
cmp
inc
dec
push
jb
mov
adc
cmpsl
out
dec
jo
mov
inc
outsb
into
mov
bound
cmp
bound
xor
push
mov
pop
add
mov
fiadds
or
dec
or
dec
mov
rcl
je
imul
mov
push
sbb
fidivs
xchg
imul
cs
xchg
in
xor
dec
pop
ljmp
dec
push
and
mov
test
mov
insl
dec
sti
test
jg
push
lock
jb
push
xor
call
fldl
mov
test
js
pop
leave
decb
pop
push
xchg
mov
mov
xchg
fdivr
ret
push
addl
cmp
push
test
inc
push
mov
outsl
test
out
pop
lret
mov
cli
outsl
andl
xor
arpl
ss
mov
pop
add
push
test
pushl
xchg
or
pop
adc
xor
xor
pushf
sbb
or
sarl
cwtl
int
mov
int3
shl
jle
sbb
sbb
inc
push
out
nop
xchg
xchg
fdivrl
imul
out
subl
or
or
sti
or
mov
mov
pusha
and
cwtl
and
imulb
mov
fs
sub
in
jno
push
popa
push
add
repz
pop
and
pushf
sti
lahf
mov
adc
leave
pop
push
jge
js
push
mov
or
jbe
iret
jmp
inc
in
and
cmpsl
push
push
or
dec
and
xchg
in
push
push
cwtl
movsb
test
ret
dec
mov
fimuls
lods
sbb
xlat
or
inc
push
and
jp
push
jmp
xchg
sbb
repz
lret
sbb
jns
cmc
pushf
repnz
cmp
mov
push
jge
fucomp
sbb
cmp
mov
in
add
in
pop
inc
xchg
into
addb
mov
jnp
jne
shll
jns
sahf
adc
outsl
xchg
push
out
push
xchg
cmp
sub
ret
lcall
fcoms
ljmp
cmp
scas
imul
iret
arpl
out
adc
xchg
add
stos
movb
cmc
push
outsl
cmpb
sub
jmp
push
inc
jp
dec
fdivs
push
sbb
or
outsb
int3
into
inc
mov
fldcw
addr16
xor
add
pop
cltd
imul
iret
inc
push
pop
push
push
loopne
mov
stos
testb
jmp
inc
inc
mov
aas
lds
out
lcall
dec
xchg
push
fsubrs
or
xor
mov
fstp
adc
mov
int3
out
in
es
push
test
lock
push
inc
test
out
or
sti
jecxz
sbb
cmpsb
cmp
in
movsl
divb
mov
aas
push
fsubp
jbe
cmpb
mov
xchg
cld
mov
lret
cmp
and
xor
xor
nop
arpl
xor
lfs
lcall
daa
stos
cld
xchg
test
ret
or
pop
outsl
leave
xor
mov
cmp
lds
dec
push
insb
std
rcl
mov
ds
repnz
sub
leave
sahf
lahf
xor
movl
lret
pop
aaa
fs
mov
pop
lahf
push
iret
adc
add
es
and
lods
call
pop
jp
push
ret
adc
sar
mov
addb
arpl
or
mov
mov
mov
sub
or
mov
mov
xchg
pushf
pop
or
popa
into
add
push
call
rcrl
in
mov
sbb
mov
dec
addr16
dec
add
inc
loop
and
cli
inc
fimuls
ret
jge
sbb
roll
loopne,pn
sub
sbb
or
stos
outsb
add
mov
pop
and
cld
imulb
or
jno
shrl
xchg
or
cmp
mov
rolb
jge
ljmp
ss
pop
adc
sub
arpl
cli
sbb
dec
sbb
push
add
push
cld
pop
cmp
daa
dec
push
mov
rcrb
push
lds
pusha
jno
insb
mov
sti
stc
mov
sarb
imul
cmp
mov
gs
xor
test
jmp
test
arpl
jne
sub
adc
inc
mov
push
xor
fisttpll
shrl
push
push
call
pop
pop
xor
fnstsw
fistpl
fidivs
push
jo
adc
or
add
mov
mov
push
xchg
popf
jnp
cmp
mov
or
mov
push
shrb
inc
sbb
mov
mov
cltd
iret
int
outsl
adc
sbb
les
jne
mov
mov
cmp
lcall
sarl
jp
mov
mov
lea
or
into
xchg
jl
shlb
movsb
cmp
pusha
jb
push
rcr
movsl
ds
pop
inc
sub
lret
mov
jp
call
aas
jl
cwtl
xlat
jae
mov
push
fwait
mov
add
add
inc
sub
je
icebp
mov
mov
jb
and
push
jecxz
xor
out
push
jmp
mov
adc
sub
movsl
scas
pusha
sub
lods
std
sbb
dec
jg
sub
movsb
std
scas
iret
xchg
imul
sbbb
out
sti
dec
and
enter
stc
dec
sbb
mov
cmp
jb
cld
outsl
jb
inc
pop
add
lcall
pop
cs
lock
ds
inc
scas
icebp
in
push
add
test
sub
sbb
in
xor
sub
stos
mov
jg
nop
push
pop
xchg
ss
mov
andl
stos
mov
inc
sub
fwait
sub
push
cmp
xchg
jge
dec
loope
out
inc
fs
inc
and
in
mov
jae
sbb
xchg
imul
sub
loop
adc
xchg
or
pop
dec
addr16
mov
jecxz
pop
xor
xchg
push
sub
mov
imul
mov
pushf
dec
dec
pusha
and
jb
aad
lret
stc
inc
out
outsb
cmpsb
add
mov
xchg
fcomi
pushf
adc
mov
orl
imul
lahf
int
and
lods
pop
xchg
and
pop
je
pop
jae
jbe
aas
test
fistpl
sbb
outsl
cld
dec
sbb
pusha
gs
mov
lds
out
stos
sbb
sub
call
mov
mov
pop
rolb
fadd
or
jo
adc
sub
loope
in
mov
hlt
xor
adc
xchg
fwait
loop
inc
sbb
cltd
lcall
sub
nop
push
inc
pop
xchg
incl
rcrl
sbb
push
outsl
pop
push
sti
ja
idivb
sbb
pop
fxch
test
pusha
mov
adc
loope
fistl
or
and
and
pop
mov
in
sti
inc
flds
xor
shl
push
and
test
add
imul
fcoms
ret
mov
into
xchg
sbb
ds
pop
jns
scas
mov
dec
das
das
movsl
fmuls
push
jmp
add
and
imull
sbb
xor
pop
cmp
lret
cs
mov
mov
mov
sbbl
loopne
mov
lret
outsb
sub
sub
or
cmpsb
daa
sbb
push
cmpsb
cs
subb
int3
mov
mov
push
add
push
cmp
pushf
sub
jnp
movsb
jge
xchg
pop
mov
or
push
fdivrs
popf
push
cltd
test
loope
movsl
pop
pop
mov
xchg
les
xor
pusha
out
xchg
cmp
lahf
mov
sbb
clc
mov
insb
lods
lea
mov
xor
mov
mov
ds
mov
arpl
shll
or
arpl
ja
mov
pusha
jl
test
mul
lea
in
sbbl
loop
adc
sub
dec
jg
loop
ja
adc
jge
add
fdivrl
test
inc
test
dec
push
loopne
mov
and
scas
lock
ds
mov
dec
repnz
rorl
incl
xchg
aas
mov
jbe
stc
lods
sub
dec
negb
xchg
icebp
icebp
dec
mov
fadds
repz
fbld
xlat
push
push
in
mov
aam
lods
repz
mov
jge
sbb
cmp
cwtl
pushf
dec
or
adc
fidivs
xlat
or
xor
or
fcmovu
test
lods
jo
xchg
or
imul
pusha
mov
lret
bnd
decl
add
pop
div
lds
shl
inc
call
inc
dec
cs
lret
inc
sti
stos
sub
stos
inc
mov
mov
loop
in
dec
and
jbe
push
add
jae
int3
mov
inc
repnz
rcll
mov
cli
mov
adc
inc
cmp
dec
xor
adc
shlb
push
sub
scas
es
mov
neg
in
mov
dec
shll
scas
mov
stc
xor
sub
jle
xchg
xchg
enter
mov
rol
jg
in
mov
cwtl
gs
ss
xor
dec
jmp
xor
sbb
xor
xchg
sbb
inc
shlb
sub
sbb
xchg
aaa
fidivl
andl
or
pop
sub
xchg
je
cmp
inc
scas
cmpb
cld
scas
xchg
cld
add
sbb
insb
mov
into
flds
and
cli
xchg
sub
fwait
aas
shlb
sbb
push
cli
xchg
in
ja
test
mov
mov
pushf
mov
inc
popa
fisubl
xor
scas
mov
mov
adc
out
mov
xor
das
scas
aaa
jecxz
dec
test
daa
arpl
flds
ss
cmp
aam
jge
or
jnp
test
jb
mov
hlt
jmp
hlt
bound
or
adcb
hlt
inc
sub
int
dec
mov
mov
shrl
call
pop
dec
outsb
lods
shl
sti
inc
pop
or
sub
out
loope
icebp
cwtl
pop
divl
pop
xchg
scas
inc
and
adc
jns
mov
mov
jb
and
mov
dec
scas
aad
push
fistps
or
loope
lahf
adc
nop
adc
mov
test
loopne
xor
enter
jmp
mov
and
stos
xor
push
fisubs
loopne
out
sbb
push
in
xchg
imul
fmuls
cs
in
lds
shrb
ret
and
mul
adc
outsb
pop
pop
mov
add
test
jge
int3
movsb
je
dec
lods
mov
mov
das
repz
xchg
xor
lret
or
leave
or
or
and
icebp
jae
xlat
std
mov
xor
js
xor
sbb
push
dec
pop
hlt
lds
sti
out
sti
mov
jecxz
push
and
pop
leave
insl
pop
dec
jge
push
icebp
ljmp
xchg
lods
push
jp
add
mov
mov
jae
jo
jg
stos
push
int
shrl
int3
lret
arpl
sbb
sbb
sbb
popf
mov
sub
add
faddl
das
sahf
dec
and
mov
xchg
pop
iret
jg
add
mov
out
lahf
loope
adc
daa
daa
or
lcall
add
push
mov
push
mov
dec
outsb
mov
mov
mov
inc
lret
xchg
gs
in
add
daa
mov
scas
pop
jp
inc
xchg
divb
dec
jecxz
out
cmc
pop
xor
pop
lods
dec
push
and
pop
cmp
xlat
pop
push
out
ret
in
sub
subl
repz
sub
cli
inc
or
insl
mov
lcall
adc
pop
xor
mov
es
test
cmp
mov
pop
xchg
cld
daa
and
jp
jo
roll
cmp
shl
popf
ja
andl
mov
adc
push
inc
stos
add
add
in
jb
outsl
mov
sbb
mov
orb
fs
sub
lock
mov
cli
pushf
clc
clc
icebp
pop
aam
adc
fistps
and
fwait
outsl
out
fsubs
les
cmpsl
or
repz
lret
imul
call
sbb
ficoml
rorl
mov
push
div
xchg
cmpsl
insb
or
push
insl
shl
push
shrl
rclb
push
mov
int3
sub
fs
push
ja
dec
repnz
mov
cmp
icebp
fimull
imul
fimull
jl
cli
push
ret
pmaddwd
loope
cmc
push
cltd
jg
nop
pop
cld
add
pop
cmp
xchg
cmp
xchg
xor
test
in
das
popa
sbbl
and
jecxz
aaa
jl
in
mov
shll
sbb
test
bound
adc
stc
scas
loopne
pop
nop
or
ja
xchg
mov
fsubrl
jbe
bound
out
pop
and
and
dec
lock
add
jle
lods
test
mov
call
sbb
mov
aaa
add
adc
add
mull
cmpl
scas
pop
stos
adc
and
pop
test
dec
movsl
dec
ss
jne
push
aad
psubq
dec
mov
mov
into
mov
add
int
jmp
in
sub
lahf
nop
pushf
xchg
cli
in
xchg
scas
cmp
mov
dec
pop
mov
inc
pop
fsub
cli
iret
add
fs
fs
lret
ss
xor
mov
js
xchg
mov
jge
divl
push
cmc
dec
pop
mov
aam
sub
mov
lea
xor
int3
sbb
test
xor
cs
adc
in
mov
in
add
add
or
pushf
push
js
je
xor
pushl
mov
cmpl
add
sti
scas
fldt
idivl
bnd
ret
fdivrp
test
adc
notb
outsb
push
popa
rcr
sarb
mov
or
inc
pop
rcrl
das
cmpsb
add
jmp
cmp
or
hlt
jae
ljmp
sub
test
andb
add
inc
sub
out
pop
test
mov
xorl
add
mov
cld
cmc
cmp
pop
shrl
movsb
ljmp
push
into
add
mov
pop
sub
jnp
add
mov
outsb
pop
test
add
push
mov
jb
repnz
sub
jle
jne
mov
jmp
ret
test
cmpsl
sub
test
mov
xchg
out
jge
sub
icebp
ret
jno
xlat
fldt
je
cmp
sbb
into
pop
shll
sub
xchg
cmc
xchg
nop
mov
hlt
add
cmpsb
ja
add
push
das
dec
aaa
xchg
dec
mov
out
pushf
jbe
jmp
out
fwait
jne
sub
test
mov
sbb
test
inc
xlat
push
inc
mov
testb
ret
cltd
fimull
daa
xchg
and
andl
test
pop
mov
shlb
adc
jmp
mov
mov
aas
inc
pop
xchg
in
sarl
push
lahf
sub
subl
push
cwtl
and
inc
mov
push
ror
sub
pop
jb
pop
xchg
inc
lcall
jmp
lock
aam
shrl
jle
add
leave
fdivrp
mov
stos
push
daa
repz
xchg
add
cmp
mov
dec
add
xlat
cmpl
mov
xchg
mov
lock
lea
insl
push
mov
sti
insl
adc
jbe
mov
pushf
push
jmp
and
add
sbbb
add
repz
xchg
sub
cltd
xchg
jns
pop
sti
scas
jns
je
xchg
data16
jbe
xchg
mov
or
aas
xor
shlb
sbb
sbb
mov
adc
int
das
pop
jnp
loop
adc
push
mov
mov
test
inc
lods
js
rclb
xor
add
adc
pop
sub
cmp
add
out
cli
and
stos
pop
addr16
jmp
or
dec
test
add
fldcw
popa
int
and
popa
scas
jmp
mov
clc
ficomps
sub
mov
push
movsb
lret
popa
rcll
sub
and
cmp
repz
scas
sbb
or
xor
jo
push
jne
pushf
cmc
mov
jo
int
in
out
mov
cmp
push
lret
sti
fildll
scas
add
insl
jl
roll
sub
mov
or
push
fwait
jb
mov
or
inc
sbb
lods
out
adc
orb
or
xchg
cmp
fstpl
add
fs
fsub
dec
xchg
imul
dec
xchg
lods
cli
jno
roll
and
cmpsb
or
leave
jo
popf
inc
dec
mov
shl
fs
ljmp
and
cmc
in
movsl
add
sub
inc
xchg
jbe
js
call
inc
std
and
push
push
mov
sbb
mov
add
les
movsb
and
je
adc
adc
pop
rcll
cmp
jno
ret
pop
xlat
arpl
out
lods
add
lahf
sub
push
mov
jmp
leave
loop
sarl
cmp
loop
outsl
cmc
sub
pop
incb
out
daa
mov
int
js
or
lret
int
popa
fisubrs
scas
sub
add
push
jnp
pusha
cwtl
aam
xorb
inc
je
or
loope
fwait
ret
mov
xchg
mov
adc
loopne
add
adc
out
mov
cmpsb
ljmp
rol
loopne
xor
lret
sbb
pop
scas
adcb
push
stc
out
xchg
div
mov
push
mulb
pop
jnp
sahf
adc
adc
mov
fwait
lods
xchg
ljmp
gs
fidivl
les
enter
mov
movb
mov
loop
lds
xor
into
ret
cmpsl
int3
jl
clc
mov
jmp
pop
mov
sub
jecxz
movsl
movsl
shlb
ret
sub
iret
and
sub
iret
pop
mov
inc
push
int3
dec
or
inc
cmp
cmp
add
jl
xchg
scas
mov
aas
push
push
inc
jb
icebp
jns,pt
repnz
mov
cltd
hlt
add
sbb
inc
cltd
xor
inc
scas
sarl
ja
and
pop
mov
cmpsb
lea
ja
or
pop
mov
mov
mov
sub
jbe
mov
push
loop
outsb
aad
jle
jp
insl
mov
cmp
cs
pop
push
dec
data16
outsb
xchg
mov
into
out
imul
push
push
push
push
es
pop
push
dec
data16
outsb
xchg
mov
into
out
imul
push
sbb
sub
push
and
sbbb
cmpsl
fcmove
into
loop
or
cli
cmp
scas
ficompl
outsb
inc
pop
inc
dec
data16
imulb
or
mov
mov
pop
mov
xchg
xchg
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
leave
leave
jmp
int
out
ljmp
imul
dec
sub
cmp
leave
leave
jmp
cltd
cltd
mov
pop
pop
dec
imul
or
cmp
sub
leave
jmp
cltd
cltd
mov
addr16
add
dec
jbe
pop
pop
push
sub
popf
xchg
add
mov
inc
xchg
sbb
jns
ds
push
pop
sarl
cmp
mov
popa
cltd
jbe
mov
mov
xchg
jns
push
jle
mov
cltd
int3
rcrl
out
push
mov
and
or
test
dec
cmp
leave
es
cmp
std
scas
cwtl
mov
les
pop
xchg
xchg
xchg
testb
stos
or
ss
cmp
rcrb
cld
jmp
test
pop
shl
dec
jns
cmp
pop
xor
clc
jb
dec
push
imul
cmpsb
test
imul
mov
leave
jmp
cltd
cltd
mov
pop
pop
dec
imul
or
cmp
outsl
mov
scas
mov
jmp
int
mov
and
add
or
dec
mov
mov
mov
rcl
jmp
sub
or
or
inc
dec
dec
inc
lods
mov
mov
mov
pop
pop
dec
imul
or
cmp
sub
leave
jmp
cltd
cltd
mov
pop
pop
dec
imul
or
cmp
sub
frndint
fdivl
cmp
fwait
lahf
inc
out
dec
xlat
ds
push
das
lea
push
popa
int3
push
cmpsb
cmp
adc
clc
shrl
sahf
in
sbb
mov
lea
sahf
shl
sub
pop
jne
adc
fcoms
shll
adc
adc
outsb
cmpsl
jecxz
shrl
fs
mov
and
inc
ss
push
leave
dec
je
pop
sbb
add
cmp
iret
pop
pushf
out
int3
lea
dec
out
push
leave
dec
rcrl
and
or
je
test
cmp
pop
in
idivb
aam
and
iret
xchg
sbb
pop
mov
push
cmp
add
jae
dec
lock
mov
ret
jb
pop
add
gs
enter
lahf
bnd
push
mov
ficompl
mov
xchg
lods
shrl
lret
add
cmpsb
into
hlt
in
bound
sti
jb
shrl
sub
loopne
xor
and
outsb
jle
mov
into
push
mov
pop
out
xor
lea
mov
pop
fisubs
add
mov
pop
fs
loopne
mov
xorb
mov
shl
fcoml
in
lock
pop
inc
add
jne
pop
dec
dec
push
dec
inc
rorl
into
jp
bound
cmp
sub
ret
jnp
ja
rcrb
sbb
jle
cld
movsb
out
les
pusha
mov
push
test
cmp
xchg
sbb
jg
dec
push
push
push
lret
mov
push
and
push
unpckhps
jb
dec
xchg
pause
enter
arpl
pop
lret
cmp
adc
and
jnp
xchg
hlt
push
mov
mov
popa
dec
out
jp
cmp
mov
call
mov
mov
mov
and
test
incl
js
add
pop
mov
daa
rcll
dec
data16
rep
dec
mov
nop
mov
or
and
xor
mov
push
mov
jg
mov
or
leave
jecxz
idivl
mov
mov
stc
inc
mov
and
push
or
xor
push
test
cli
push
fwait
xorl
in
popl
mov
mov
jne
out
lock
xchg
lcall
mov
xor
js
in
divb
fcompl
js
dec
or
mov
loop
imul
dec
jb
lcall
and
cltd
push
lea
mov
leave
pop
and
ret
mov
xchg
repnz
int
ljmp
sub
mov
fcompl
ret
nop
popa
sbb
dec
out
sbb
inc
aad
in
mov
add
inc
sub
int3
adc
daa
stos
sub
lret
push
jo
ret
cmc
daa
icebp
aad
jp
pushf
popa
and
pop
and
or
cltd
and
insb
xchg
out
xor
bswap
stc
aad
es
mov
shlb
mov
test
cld
add
mov
loop
xchg
data16
int3
inc
adc
push
jnp
outsl
hlt
or
test
add
stos
lahf
faddl
bound
jecxz
adc
cmp
and
and
fcompl
lahf
mov
cmpsl
pop
fldenv
sbb
lea
adc
clc
es
int3
and
ds
xor
or
test
sub
lret
aam
test
js
lods
push
dec
push
mov
repz
sub
cmp
ficoml
or
or
movb
in
ljmp
sub
lea
dec
jg
sub
pusha
jge
inc
loopne
aas
add
inc
rcll
push
sarl
es
sahf
ss
test
push
pop
outsb
pusha
aam
pop
mov
or
push
push
and
xchg
gs
enter
push
adc
mov
sahf
adc
movsl
leave
xchg
ja
xchg
pop
scas
mov
add
lret
nop
iret
xchg
decb
imul
imull
sub
mov
pop
mov
subb
adc
imul
unpckhps
movsb
js
mov
mov
sbb
inc
adc
rolb
pop
xchg
push
xchg
mov
xchg
pop
std
fcoms
mov
mov
ja
sti
mov
pop
in
pop
mov
cmp
inc
pop
or
pop
and
fs
clc
mov
and
lcall
je
insl
dec
cmpsb
cmc
enter
push
adc
xor
in
adc
ja
fmul
rorb
mov
lds
cwtl
dec
inc
or
cmc
push
daa
cmpsb
sub
imul
or
fidivl
sahf
sbb
imul
in
lea
outsl
in
jns
sub
push
jo
or
dec
scas
inc
jl
jle
xor
or
lcall
mov
test
lds
movsl
mov
int3
jae
inc
fistl
inc
lea
mov
fimull
gs
imul
sbb
pop
cmp
cmp
les
scas
mov
xchg
dec
pop
or
or
ret
popa
sbb
sbbl
clc
test
xor
mov
or
in
and
cmp
jae
into
push
loopne
das
add
add
pop
loopne
lahf
or
mov
mov
std
rorl
roll
nop
sbb
adc
leave
test
push
adc
fsubr
fistpl
cmpsb
mov
cmc
jle
rcll
dec
loopne
add
imul
call
mov
xchg
adc
negb
push
sub
xchg
or
mov
fimuls
fistps
mov
lcall
shrb
or
repnz
rorb
orl
mov
cli
mov
xacquire
int3
adc
jmp
adc
xor
pop
mov
and
add
jns
jo
mov
sub
repz
nop
pop
sbb
mov
add
mov
test
jp
out
adc
shr
cmc
cmpsb
pusha
dec
int
push
pop
mov
push
loopne
lock
ss
and
dec
mov
xchg
je
mov
add
cs
fsubrs
cmp
rclb
jle
dec
pushf
add
sbb
std
dec
sbb
add
mov
je
xchg
inc
mov
mov
jp
sbb
data16
inc
fbstp
mov
inc
fs
jnp
xchg
out
cmp
add
add
call
loope
mov
andb
int3
xor
dec
lock
jns
jmp
pop
pop
call
fcoml
mov
mov
push
mov
inc
mov
push
mov
iret
arpl
cli
js
pop
mov
sub
js
dec
mov
inc
movsb
and
jne
or
mov
xchg
mov
and
mov
jae
sarl
sbb
inc
push
sub
sub
insb
fiadds
imul
testb
sub
fcmovbe
sbb
cmpb
gs
imul
mov
jne
scas
fcmovnb
mov
pusha
push
mov
call
lods
iret
adc
movsb
xchg
sahf
lods
leave
cmp
fdivl
push
mov
es
dec
xor
popa
in
mov
push
fs
aad
shr
push
jno
mov
add
pop
pop
add
mov
lret
fldt
adcl
inc
lahf
data16
xchg
loope
jle
jecxz
xchg
mov
fnstsw
aas
xlat
lock
mov
inc
jmp
push
and
dec
xchg
test
jle
mov
push
sbb
xlat
sub
add
leave
in
pop
aam
push
sarb
xor
loope
push
adc
dec
inc
cmp
test
ret
xor
cmp
movsl
jb
sti
pop
push
mov
addl
jno
sarl
sub
xor
jecxz
lea
daa
sbb
outsl
ss
mov
xor
les
cmp
cwtl
sbb
push
mov
sub
fcomps
rorl
hlt
sbb
push
sbb
jnp
inc
sub
adc
jae
and
movsl
scas
jecxz
ja
shlb
stc
mov
ret
popf
mov
lcall
cmc
orb
mov
je
pop
lock
iret
faddl
xor
inc
pop
xchg
jno
in
pop
scas
xor
push
adc
arpl
es
jge
sub
int
cmp
xor
cmc
fdivrs
int3
mov
push
lret
popf
sub
sbb
popf
add
inc
mov
test
gs
sbb
inc
fisubrs
pop
lret
popf
outsl
adc
jno
pop
fidivl
sub
mull
sti
xchg
ljmp
jns
adc
hlt
enter
mov
push
xor
push
aad
into
ljmp
mov
in
push
jecxz
or
out
dec
or
mov
dec
mov
cmp
fsubs
cmp
insb
daa
jecxz
push
inc
lds
movsl
lds
pop
xchg
dec
jg
xchg
mov
call
mov
xor
rcl
sub
sub
inc
mov
out
jle
stc
test
stc
das
cmc
jge
arpl
jl
or
or
subb
push
pop
insl
jg
mov
in
xchg
scas
or
inc
mov
mov
lahf
pop
in
decl
and
ret
shlb
icebp
add
lods
aad
or
cwtl
push
pop
inc
sub
mov
imul
ljmp
sub
imul
and
mov
mov
dec
jo
inc
mov
cmp
add
pop
add
out
sub
bound
addr16
stc
add
cmp
xor
bound
or
or
xor
stc
mov
push
sub
call
mov
lea
rcrl
jl
and
adc
lods
jae
ret
out
pop
pusha
mov
fstpt
aaa
xlat
call
fmul
icebp
dec
jnp
or
xchg
es
cltd
daa
mov
dec
ja
bound
push
cltd
dec
pop
push
es
in
xchg
mov
xor
mov
mov
add
popf
stos
dec
mov
cmp
inc
xchg
inc
inc
negl
ljmp
push
in
inc
decb
clc
psubb
loop
and
and
jge
shl
int
mov
adc
adc
dec
adc
mov
dec
adc
push
test
neg
xor
jp
sub
adc
inc
xor
cmpsl
mov
test
int3
or
push
scas
jmp
imul
xor
inc
sbb
dec
xor
mov
das
mov
lea
mov
push
xchg
add
inc
into
ret
pop
movsbl
outsb
lret
mov
and
jle
inc
aaa
jle
or
mov
xchg
leave
dec
xorb
sahf
fistpl
lret
into
cmp
out
xor
incb
stos
aad
mov
addr16
xchg
cmp
mov
inc
mov
imull
dec
and
and
ss
lret
popf
jnp
insl
imul
mov
in
iret
loope
xor
fstpl
dec
mov
popf
aam
sti
inc
lea
scas
negb
xchg
fbld
or
inc
fists
mov
mov
into
pushf
repnz
pusha
and
mov
ss
jmp
sahf
push
stos
mov
push
jnp
pop
push
sub
fcoml
inc
adc
cmp
mov
xchg
cmpsb
pop
dec
out
dec
pushf
dec
xor
jmp
out
lret
or
nop
mov
je
mov
add
sbb
loop
sarb
mov
arpl
movsl
stc
lds
out
pop
insb
les
fistl
data16
mov
ja
nop
push
shll
pushf
xchg
mov
mov
iret
out
out
push
push
gs
xor
mov
mov
int
pop
mov
pop
testb
pop
inc
fmull
xchg
orl
inc
les
adc
jb
fisubs
pop
repz
je
daa
xchg
ss
mov
lds
std
int3
inc
inc
lock
xlat
rcrl
cli
cmp
mov
stos
cmpsl
lcall
jle
xchg
mov
int
ret
mov
sbb
inc
adc
push
sti
pop
mov
sub
xchg
push
aam
int
inc
xorb
xchg
mov
es
cmp
outsl
shl
je
add
jge
or
inc
inc
jbe
add
clc
cmp
out
pop
xor
dec
adc
mov
popa
push
ret
adc
dec
push
xchg
adc
push
pop
jge
sahf
stos
pop
mov
testl
push
lea
out
and
inc
sbb
test
mov
dec
js
pop
push
je
out
imul
dec
pop
xchg
dec
mov
test
xchg
dec
stc
fdivrl
push
mov
cmp
lods
adc
pop
and
mov
push
sbb
jne
sbb
jp
sbb
out
or
es
leave
inc
pop
cld
mov
sub
and
xchg
sub
adc
push
sub
div
pop
cwtl
std
shll
movsl
jecxz
jbe
hlt
rorb
cmp
ret
and
sbb
inc
data16
inc
das
lret
mov
fbstp
push
mov
and
paddsw
jnp
pop
mov
cmp
out
lods
jne
xchg
adc
and
ret
hlt
fwait
jb
dec
inc
sbb
cmp
sbbl
pop
loop
mov
xchg
jl
jl
sbbb
inc
call
out
ja
in
add
insl
sbb
push
lods
out
ss
mov
lods
mov
nop
sbb
jnp
test
adc
xor
mov
in
pop
mov
inc
scas
mov
mov
jo
scas
lods
stos
fwait
dec
pusha
int
sahf
test
mov
dec
and
adc
gs
mov
lods
sbb
movsl
pop
shlb
mov
lret
jg
cmp
test
inc
add
dec
loopew
inc
sub
jne
add
push
ss
lcall
and
cltd
fsub
in
stos
gs
pop
cmp
jle
mov
ljmp
aad
push
in
fs
out
inc
lock
inc
shl
push
lcall
movsl
pop
sahf
cmp
jnp
jle
mov
repnz
jne
mov
xor
push
pop
mov
sti
fnstenv
std
or
nop
lds
sub
dec
enter
jg
pop
std
in
sbb
dec
dec
or
sbb
adc
test
mulb
cmpsl
icebp
ret
subb
mov
sub
mov
mov
arpl
cs
adc
fs
icebp
add
subb
add
mov
mov
dec
repnz
sub
mov
mov
xor
fnstsw
pop
add
cmc
inc
out
aam
mov
jbe,pn
ss
inc
pop
sbb
ljmp
xchg
aaa
jnp
adc
scas
inc
fidivs
aad
xor
nop
cmpsl
mov
fwait
repnz
adc
xor
sbb
nop
loopne
test
dec
hlt
mov
cmp
popa
pop
cmp
xchg
aaa
and
adc
lock
mov
into
loopne
push
cltd
jmp
pop
push
mov
imul
mov
lret
mov
dec
cli
push
gs
xor
sbb
in
subb
fdivl
cmp
mov
aas
sub
mov
jns
xor
xchg
sub
sarl
mov
sub
sahf
dec
jge
mov
add
xchg
test
sbb
inc
xchg
mov
in
ficompl
jp
dec
and
std
gs
aam
inc
andb
pushf
mov
imul
imul
shlb
dec
jne
arpl
and
bound
mov
aas
mov
mov
call
inc
push
call
adc
sbb
push
lds
lods
add
jno
aas
cmp
pop
xor
out
data16
ret
stos
and
inc
out
push
push
mov
mov
icebp
in
sub
jno
daa
adc
fcmovu
inc
pop
jnp
scas
sub
and
or
mov
sbb
pop
lret
xchg
adc
xchg
pushf
pop
dec
jmp
std
mov
mov
fsubs
jge
mov
or
pop
int
push
enter
inc
pop
and
lahf
int3
sar
movsl
stos
cld
test
mov
mov
xchg
sub
xlat
adc
test
fdivs
fld
push
add
push
int
adc
xlat
xchg
mov
pop
aaa
mov
jge
daa
insb
stc
fcomps
das
popf
pop
jne
pop
push
pop
mov
add
cmpsl
fwait
mov
ja
rclb
pop
and
stos
mov
and
inc
repnz
das
xorb
pop
cmp
mov
mov
test
data16
lock
insl
add
push
jge
adc
push
gs
mov
aaa
jg
repz
xchg
fiaddl
iret
testb
stc
cmpsb
xlat
out
divb
in
pop
shll
pop
mov
xchg
xchg
jno
nop
xor
fsubrl
movl
mulb
lods
xchg
push
lahf
scas
nop
pusha
jne
xor
nop
loop
icebp
sub
fstp
ret
or
dec
data16
adc
or
pop
xchg
and
xlat
gs
adc
pop
cmp
cmpsb
mov
fists
stos
movsl
faddl
ja
ret
or
ret
adc
lds
add
adc
popf
ret
aas
jmp
sub
push
dec
hlt
pushf
in
adc
lods
dec
mov
lock
adc
mov
sar
mov
mov
fcoml
mov
mov
and
hlt
and
mov
arpl
rorl
insb
iret
mov
inc
push
push
sbb
mov
jle
add
jae
mov
hlt
fmuls
sub
clc
lods
push
inc
dec
lcall
aas
ljmp
mov
out
and
mov
pop
sbb
inc
jns
pop
iret
mov
ss
sub
addr16
mov
mov
sbbb
cmp
sbb
lret
test
push
add
jae
test
pop
in
lret
xor
and
pushf
outsl
mov
mov
mov
and
popf
pop
les
sub
ds
inc
popf
xchg
data16
arpl
icebp
jl
pop
mov
daa
iret
push
xor
lret
push
sarl
mov
push
sarl
sub
cmp
stc
mov
jo
leave
push
imulb
out
push
mov
mov
popf
lea
pop
aam
in
sub
jge
adcl
out
xor
and
addr16
add
mov
orl
add
daa
mov
sbb
push
fs
sar
mov
mov
stc
rolb
pop
imul
xchg
repz
or
or
hlt
mov
jb
xor
test
outsb
push
fwait
cmp
sub
mov
xchg
or
test
and
stos
lods
orl
imull
sar
aas
sbb
or
or
divb
push
sbb
test
jnp,pn
sbb
subb
test
nop
mov
inc
rcr
add
sub
pop
nop
sbbl
sbb
dec
repz
mov
jg
cmp
hlt
ret
popf
in
push
stos
int
jmp
and
into
int3
xchg
sbb
out
and
xchg
mov
adc
orl
jmp
mov
mov
xchg
cwtl
sub
mov
add
adcb
cwtl
sub
xchg
outsb
andl
adc
lahf
inc
ret
xchg
xlat
pop
outsb
lcall
ja
add
aam
mov
pusha
or
stos
pop
xchg
ljmp
lds
cmp
sub
inc
mov
je
iret
and
sti
lea
jle
sbb
arpl
inc
cmp
pop
cmc
add
xchg
out
push
xor
jae
ret
into
gs
fiadds
aam
mov
pop
mov
xchg
fwait
hlt
in
int
cmp
mov
test
sub
xorb
cmpsl
sbb
or
dec
push
dec
adc
xorl
xchg
pop
call
mov
ret
xlat
das
cmc
cmpsl
stos
jle
scas
sub
jb
outsb
xchg
fimuls
aam
xchg
mov
leave
call
cltd
cltd
mov
pop
pop
dec
imul
or
cmp
sub
leave
jmp
cltd
cltd
mov
pop
pop
dec
imul
or
cmp
sub
fstpl
imul
cltd
mov
pop
pop
dec
imul
or
cmp
sub
leave
jmp
cltd
cltd
or
cmpsb
pop
jecxz
jns
push
jns
imul
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
sti
insl
jmp
les
jp
imul
xor
cmp
inc
or
sti
xchg
jmp
stos
dec
fwait
repnz
pop
xor
cmp
or
add
add
shll
sbbl
int
popa
add
xor
add
pop
bound
mov
dec
pop
out
dec
cmp
adc
bound
scas
sub
ret
aaa
cmp
sbb
mov
shrl
mov
cmpsl
pop
mov
imul
sbb
out
add
pop
xchg
test
mov
das
cli
adc
sub
xchg
xchg
scas
cmp
inc
sbb
sti
xchg
adc
stos
stos
or
push
outsb
pop
mov
les
mov
stos
xchg
push
loope
daa
inc
divb
loop
inc
lods
adc
mov
inc
in
sbb
pushf
mov
test
push
test
out
es
cmp
js
sbb
out
xchg
bnd
ss
test
sarb
bound
jae
inc
and
and
mov
xchg
rorb
enter
fwait
mov
sub
dec
cmp
add
mov
icebp
fwait
pushf
fmuls
pop
push
or
add
insl
adc
sahf
les
shl
stos
ret
mov
jnp
imul
xor
cmp
inc
sbb
sti
xchg
jmp
stos
ret
mov
jnp
imul
xor
cmp
inc
sbb
sti
xchg
les
adc
loope
lods
dec
test
mov
push
mov
xor
push
out
decb
or
mov
mov
inc
sub
or
rcr
mov
push
divb
mov
or
push
fistpl
lret
cli
or
xabort
rorl
stos
pop
stc
cmp
cs
das
jae
push
sub
or
shll
mov
std
repz
imull
pop
or
pusha
xchg
mov
mov
aad
loopne
loopne
adc
mov
inc
imulb
out
dec
and
fsubp
xor
je
out
cmpsl
sub
mov
add
rcl
dec
push
cmpsb
mov
out
ss
add
test
pop
cmp
jns
shlb
ret
das
jl
lahf
cmp
sarb
loopne
test
sub
stc
es
pop
add
mov
out
stos
and
sbb
pop
loop
jmp
sbb
movsb
mov
pop
mov
push
lods
gs
ja
sbb
inc
outsl
cmp
mov
lock
or
pop
pop
pusha
dec
push
dec
daa
and
lods
xlat
das
shrl
jne
dec
shlb
jmp
push
data16
sbb
cwtl
movsl
jne
mov
xchg
dec
nop
fdiv
push
rcrl
inc
xchg
xchg
pop
jecxz
insl
jno
mov
pop
imul
sbb
stos
push
pop
jg
push
aas
mov
cwtl
mov
pop
test
arpl
shl
test
mov
das
enter
cmc
mov
cs
pop
push
mov
clc
mov
sub
pushf
cmp
jg
sub
cmp
outsl
xchg
ds
insl
sti
mov
cmc
aaa
mov
push
pushf
outsb
and
sahf
lret
popf
rcll
lcall
and
inc
lret
stos
inc
repnz
xchg
and
loop
stos
lock
or
insb
sbb
mov
mov
inc
loop
mov
sbb
jnp
in
fistps
dec
mov
and
xchg
jno
mov
dec
mov
dec
and
stos
sub
fcmovnbe
mov
jecxz
scas
mov
stos
adc
out
pop
imul
aas
andl
xchg
inc
mov
bound
dec
jmp
clc
xchg
push
sub
loop
es
pop
fildl
dec
pop
and
pop
push
shlb
cmpsl
ds
mov
outsb
into
add
movsl
rorb
adc
inc
xorb
dec
insl
sbb
mov
xor
shrl
shll
fsubl
imul
data16
pop
out
cwtl
sub
test
fcomps
lcall
xor
in
popa
nop
cmp
lret
sbb
or
jmp
mov
jae
in
test
loope
inc
je
pop
les
jbe
mov
lds
sbb
fisttpll
adc
mov
stos
mov
sti
mov
nop
and
jbe
inc
jg
add
dec
add
loopne
mov
xchg
mov
loopne
cmp
add
push
inc
call
fists
nop
sbb
and
sti
shlb
js
sahf
push
outsl
add
cli
mov
out
pop
sbb
add
bound
ja
inc
dec
add
repz
lcall
xor
sub
les
adc
sbb
or
fadds
fnsave
pop
pop
xor
and
mov
adc
push
aad
lds
pop
ficompl
fmull
add
push
cmpl
dec
test
pusha
cmp
lret
mov
enter
push
sahf
repnz
test
and
sub
shll
rolb
pop
jecxz
fsubrl
cmpsl
push
clc
cltd
push
das
ljmp
nop
fs
push
movsl
and
rcrb
test
xlat
gs
xor
les
mov
jae
enter
jmp
push
jbe
mov
and
xchg
xor
xor
sbb
leave
inc
push
adc
cmp
push
es
or
nop
arpl
lret
dec
mov
fsts
add
fst
cld
ljmp
data16
mov
jp
aaa
pop
sbb
int
sub
in
jne
orb
mov
cld
nop
or
mov
outsl
out
jmp
rol
sbb
dec
jb
mov
ds
adc
in
imul
pop
pop
ja
adc
daa
jle
repz
inc
push
push
jmp
lods
into
xor
mov
lahf
iret
call
pop
jo
and
push
out
js
mov
push
jge
jne
rol
cli
jmp
inc
rcll
pusha
bound
clc
ljmp
outsb
adc
ret
hlt
dec
dec
mov
ret
jmp
push
out
stos
ror
xchg
movsb
outsl
sub
ljmp
fwait
cmp
mov
inc
add
jmp
std
cmpsb
cmpsl
push
mov
leave
push
lret
jge
fs
fnstsw
and
lret
pop
jo
test
mov
pop
sbb
fidivrl
jle
jb
fwait
push
push
cmpsl
loop
fimull
inc
mov
and
popa
lret
inc
popl
xchg
aas
popf
pusha
sbb
mov
pop
iret
jp
jecxz
mov
xchg
dec
adc
add
xchg
stos
iret
adc
pop
cld
push
cmp
cwtl
sbb
lahf
inc
inc
pop
adc
sbbl
xchg
pop
push
xchg
mov
shll
mov
outsl
shlb
add
mov
in
push
das
jecxz
or
mov
mov
loop
stos
jge
mov
jo
es
neg
popa
pop
xchg
xchg
sbb
loopne
push
dec
in
mov
shll
and
push
mov
dec
aam
mov
jae
insb
popf
sbb
jmp
dec
add
loop
loopne
xchg
jge
dec
xchg
inc
leave
dec
loope
mov
test
add
push
outsl
cltd
leave
sarl
or
push
dec
sub
cmpsb
dec
shr
dec
mov
and
aad
mov
loop
inc
nopl
xor
pushf
jp
inc
pop
or
push
push
mov
mov
jno
popa
xchg
and
arpl
mov
push
pop
sbb
faddl
pop
aaa
mov
mov
pop
sub
es
cmp
shl
lds
and
leave
pop
jns
fstp
or
adc
adc
adc
cmpsl
insb
rol
sbb
ljmp
xor
das
adc
mov
and
int
xchg
sbb
sbb
popa
out
jmp
das
mov
jle
inc
add
jnp
or
mov
and
bound
cmp
icebp
icebp
xorb
xchg
jmp
sub
jns
push
push
subl
inc
std
repnz
pop
sahf
pop
push
pop
dec
lret
pushf
sub
cli
or
or
xchg
ret
xlat
and
sahf
shlb
outsl
ds
jns
pop
mov
roll
push
mov
and
test
adc
into
push
loopne
add
imul
ret
lret
loopne
popa
stos
and
sbb
push
lods
dec
fadd
lds
lahf
std
dec
add
pop
negb
mov
icebp
insb
push
insb
xlat
or
rclb
mov
ret
nop
sub
xor
fsubrp
insb
sbb
jge
xor
xchg
push
and
ds
outsb
dec
and
xchg
xchg
ljmp
cltd
cmp
sub
cmp
ljmp
jne
rcl
or
cmp
dec
pop
sub
imul
or
xchg
js
dec
ret
jb
mov
pusha
jb
sub
jg
mov
jge
xor
push
push
xchg
test
rcll
mov
push
jbe
repz
int3
gs
inc
pop
sbb
push
outsb
mov
roll
int
in
repz
jno,pt
pop
pop
xchg
push
mov
cmc
dec
mov
and
hlt
loope
cmp
or
sub
sahf
imul
pop
stos
mov
mov
inc
pushl
ja
and
cltd
dec
jo
inc
scas
outsl
sti
shl
mov
icebp
popf
mov
aad
push
adc
ret
add
cmp
push
jno
cld
in
xor
nop
mov
test
aam
mov
push
jne
or
sub
lock
stos
jne
into
repnz
mov
ja
pop
sti
movsl
xchg
xor
les
cmp
mov
or
mov
lahf
inc
push
loope
iret
cli
mov
sahf
outsb
loop
sub
and
nop
aaa
popa
pop
adc
loop
cmpsl
ficoml
adc
scas
mov
and
hlt
mov
xchg
fs
shrb
xlat
das
mov
cmp
or
dec
lods
in
arpl
flds
test
cmc
dec
ror
cld
lock
ss
ljmp
int3
clc
adc
adc
xchg
fistps
icebp
ja
sti
inc
mov
sbbl
pop
das
sub
insb
sar
jbe
xchg
push
icebp
mov
imul
outsb
dec
xchg
sub
int
es
mov
mov
adc
push
lds
lods
sbbl
jl
sbb
sti
push
movsb
aas
mov
scas
xor
inc
dec
sub
movsb
test
imul
in
scas
sub
inc
cmp
test
loope
in
cmp
movsb
xchg
jnp
ror
sbb
adc
lret
sub
das
out
leave
pop
jno
daa
cmp
pop
cmp
or
ja
xor
or
ss
dec
xchg
or
add
fstpt
int
sub
shrb
xchg
jo
outsl
and
push
arpl
lcall
push
and
movaps
sbb
xor
addr16
vpsraw
mov
in
ds
jecxz
xor
shlb
frstor
sbb
sbb
adc
aaa
push
xchg
mov
cmp
jmp
repnz
leave
jns
dec
sub
jo
stos
lods
jmp
out
push
lock
out
adc
outsl
push
mov
jg
nop
outsl
nop
imul
push
int
dec
ja
mov
xor
lds
scas
data16
sbb
test
rcll
add
inc
sub
dec
sub
popf
addr16
mov
rol
popf
mov
inc
push
inc
jmp
and
rolb
scas
sbb
jle
xchg
push
adc
jmp
ss
dec
add
incb
fs
push
inc
push
scas
divl
jnp
pop
mov
xchg
imulb
xor
xor
mov
jne
push
push
cwtl
cmp
push
in
jbe
xor
scas
push
in
std
and
adc
imul
cmp
pop
enter
mov
lds
std
sarl
xor
shrb
mov
pop
mov
or
rcr
aam
or
dec
mov
xor
shrb
and
leave
dec
idivb
xchg
sti
push
dec
pop
cmp
xor
xorl
push
idivl
or
orps
int3
and
cmp
arpl
jb
nop
xchg
out
lcall
fldt
loope
pop
xchg
in
repnz
and
test
push
mov
rcrl
or
repz
fldt
idiv
repnz
sub
ficompl
cli
and
div
or
xchg
arpl
sahf
std
and
and
es
fstl
orb
daa
pop
pop
xor
cmp
jmp
pop
jbe
sub
jp
fidivl
in
mov
nop
addl
adc
mov
inc
cmp
or
repz
mov
mov
je
jbe
nop
mov
xchg
push
adc
jb
andl
lods
mov
jae
into
addl
or
sarb
lods
add
mov
stos
and
lret
jae
cmc
mov
push
or
addr16
xchg
adc
mov
mov
scas
mov
gs
xchg
jbe
pop
mov
add
cmc
cmp
xchg
jno
lods
sbb
and
sub
shlb
sbb
or
adc
jecxz
fwait
push
lea
jg
movsb
pop
in
mov
ds
loopne
scas
outsl
mov
out
xchg
repnz
inc
fisubl
jno
sbb
stos
push
push
outsb
sbb
jle
stos
push
mov
xchg
insb
mov
sarb
into
pop
outsb
rcrb
mov
ss
jg
dec
jl
lahf
clc
dec
sub
jmp
mov
and
sahf
int
sbb
imul
mov
and
in
mov
lods
mov
lret
int3
xchg
and
push
and
inc
lods
dec
mov
mov
adc
mov
lcall
js
leave
inc
cmp
pop
add
pop
push
jo
and
mov
and
punpckhwd
jmp
mov
jns
jnp
insl
mov
mov
jg
lret
xor
push
je
and
popa
rorl
inc
sti
cmpsl
pop
cmp
icebp
mov
arpl
inc
mov
popa
xor
movsl
lret
xor
les
inc
test
ret
cmp
sbb
mov
push
aad
popl
xlat
lock
adc
sbb
mov
adc
jp
rcrl
rorb
push
loopne
and
fcmovne
mov
repnz
ss
stc
mov
cmp
cmc
xchg
les
mov
cmc
fstpt
xor
lahf
cmp
adc
push
cwtl
dec
and
arpl
cmc
xchg
dec
lcall
xor
cmpsl
push
jbe
adc
in
fs
push
xor
addr16
out
out
xchg
cltd
mov
push
push
in
rcl
ret
outsb
ror
inc
mov
mov
test
in
xor
mov
cwtl
dec
imul
and
outsl
or
loope
out
dec
js
dec
mov
jns
insl
jne
mov
mov
test
and
stc
adc
gs
and
divl
adc
outsl
mov
push
icebp
jae
aad
add
out
cli
fldl
and
mov
mov
mov
add
movsl
leave
push
mov
pop
dec
mov
lcall
pop
mov
inc
js,pt
stos
pmulhuw
jecxz
in
shr
hlt
lock
xor
mov
mov
out
cmc
push
sub
mov
pop
push
add
push
mov
xor
test
mov
or
jne
pop
inc
jecxz
aas
mov
lahf
inc
outsb
mov
fdivr
mov
jge
loope
cmp
pop
ja
xor
mov
fs
or
inc
mov
popa
and
in
pop
lret
lea
xchg
pop
pop
jmp
jnp
fnstcw
sub
xchg
adc
push
and
xchg
push
ss
adc
rcl
cwtl
xor
mov
stos
xchg
mov
clc
inc
sub
cmp
mov
xor
fistpll
xchg
dec
pop
test
pop
push
std
or
add
push
mov
adc
les
push
sar
jne
outsl
xchg
stc
and
cmpsl
and
data16
sub
and
loop
mov
mov
mov
bound
sbbl
out
or
and
sahf
imulb
cmp
xchg
jl
in
xor
or
rcr
lock
shll
gs
lcall
dec
outsb
idivb
subb
or
sahf
negl
mov
lods
xor
dec
jge
push
xor
cmp
inc
rorl
pop
repz
mov
inc
js
or
cmp
fisubs
shl
cmpsl
lahf
inc
arpl
shl
inc
outsl
fildll
xor
pop
lock
test
iret
sub
sub
jg
sub
add
mov
xor
push
dec
lds
int
aas
push
fmull
clc
jge
pop
incl
sbb
loopne
ljmp
cltd
adc
add
stos
add
add
and
sbb
iret
fadds
and
daa
loope
inc
ficomps
enter
je
scas
ret
fists
test
movsl
or
dec
inc
or
lahf
mov
rcll
scas
ret
movsb
cmp
je
arpl
repnz
daa
add
cli
dec
arpl
push
fwait
outsb
stos
pop
xchg
mov
shrb
cmp
jg
pusha
sbbb
fcoml
xor
pop
test
pop
sbb
out
jmp
pushf
push
out
es
jne
jle
insl
mov
icebp
loopne
lods
adc
icebp
jb
sub
inc
xchg
and
inc
push
xor
adc
inc
stos
push
les
jp
call
movl
fmull
cmpsb
aaa
mov
push
shlb
add
mov
lret
mov
sub
outsb
and
es
mov
add
in
test
push
into
cld
ja
push
outsl
imul
sub
mov
mov
pop
insl
adc
ficoms
ja
sbb
or
lods
movsb
jnp
or
in
jg
out
popf
ds
fcoms
stc
cwtl
in
loop
cmp
mov
xor
or
mov
out
jnp
aam
hlt
mov
inc
scas
xor
push
xchg
cs
push
adc
push
push
inc
push
sub
or
mov
mov
pop
jmp
movsl
and
loop
test
out
dec
cs
jmp
out
daa
xchg
push
inc
subb
test
or
mov
xor
jg
call
pop
imul
mov
or
pop
rcl
mov
push
pop
xor
lds
pop
leave
sub
dec
clc
add
shll
inc
xchg
imul
bound
push
out
sub
cmp
jl
lahf
repnz
mov
stos
sub
pop
pop
push
lcall
bound
notb
shll
mov
and
fnsave
shl
clc
movsl
arpl
aad
test
imul
inc
xor
xchg
test
dec
mov
ljmp
mov
sbb
popa
jo
sub
or
inc
scas
repnz
and
push
cmpsb
add
add
cmpsl
das
and
popf
aas
xor
xchg
outsb
cmp
xchg
pop
aam
pop
fcmove
mov
cmp
pop
arpl
shlb
mov
add
jns
xor
ret
clc
test
std
scas
inc
xorb
sbbl
addr16
into
inc
jb
stc
cld
ljmp
cli
lds
mov
xchg
bound
test
sub
andl
xor
lret
inc
daa
pushf
out
sarl
pusha
push
adc
jl
leave
cltd
xchg
lds
xchg
mov
sbbb
push
scas
ljmp
jae
or
lods
sbb
roll
jo
xchg
adc
ret
sbb
call
pushw
movsl
sbb
pop
jbe
insl
repnz
mov
fnsave
jne
insl
dec
xor
jge
pop
pop
pop
cmp
pop
xor
xchg
in
imul
xor
fcoms
push
push
repnz
cltd
lods
pop
xchg
cmp
ss
mov
jnp
xlat
jae
mov
les
pop
push
ja
lods
xlat
icebp
mov
or
jle
inc
rcrl
sahf
in
fadds
mov
xor
adc
xchg
dec
data16
adc
xlat
or
ljmp
adc
cmp
and
lds
pusha
cli
popf
inc
sub
dec
test
jb
pop
or
hlt
ret
sub
jno
iret
cmpsb
push
pushf
or
jge
dec
adcl
push
mov
mov
xor
stos
hlt
jle
or
inc
pop
lcall
sarb
imul
sub
sub
pusha
inc
push
mov
dec
jg
push
lret
jge
out
jns
and
and
or
mov
iret
sub
dec
int3
dec
xchg
sbb
cmp
push
stos
insl
pop
iret
xchg
aas
mov
out
js
pop
lock
push
push
repnz
sbb
push
sub
push
js
arpl
mov
add
movsbl
popl
subl
test
ret
stc
inc
insl
xchg
lcall
loope
sbb
imul
push
adc
icebp
xchg
popa
aas
pop
aaa
xchg
jg
hlt
jb
negb
dec
imul
and
inc
aas
adcb
repnz
loop
call
in
dec
fsts
ja
jb
pop
lret
pop
inc
test
in
inc
adc
in
daa
out
out
stc
sub
test
push
sbb
outsb
repz
out
repnz
xlat
and
xchg
dec
push
out
push
mov
fdivs
fisttps
dec
pop
ret
out
mov
faddl
inc
mov
loopne
bound
gs
jle
negl
push
xchg
les
sbb
jmp
cmpsl
cmpb
jmp
mov
mov
mov
mov
mov
cmc
add
jl
and
popa
dec
ret
rcr
pop
inc
imul
add
xor
mov
or
or
lret
add
nop
addl
les
cmp
jnp
inc
inc
loope
inc
and
xor
repnz
enter
mov
aaa
push
es
inc
mov
notb
addb
scas
lods
inc
inc
cmpsl
sub
cmp
pop
xchg
test
js
inc
sti
into
arpl
fcmove
cmp
jecxz
xor
xor
mov
fdivs
rcr
lret
mov
fwait
repnz
jnp
imul
xor
cmp
inc
sbb
sti
xchg
jmp
stos
ret
mov
jnp
imul
xor
cmp
inc
sbb
sti
xchg
jmp
fcmovne
lret
mov
fwait
repnz
jnp
imul
xor
cmp
inc
sbb
sti
xchg
jmp
mov
sbb
loop
in
xchg
test
xor
dec
fisubl
popf
dec
mov
outsl
test
insl
mov
leave
adc
orl
sbb
sub
cmp
imul
mov
das
jmp
fistpll
sub
cmp
dec
lahf
pop
scas
sub
cltd
std
test
jg
xor
aas
stc
stos
mov
lcall
sbb
jns
mov
outsl
push
call
cmc
xor
mov
jb
lret
shrb
fbld
inc
and
mov
loope
out
sub
mov
cmp
mov
cmp
mov
sbb
movb
test
cli
jmp
ficompl
xchg
pushf
aaa
sbb
enter
data16
push
into
rcr
jne
add
and
hlt
mov
push
dec
sub
inc
repz
cld
mov
out
cmc
pop
dec
out
mov
movsl
push
xchg
mov
mov
ret
iret
addl
pushf
or
cld
jl
sbb
or
add
scas
jge
js
mov
cltd
outsl
test
fldcw
jmp
inc
sbb
dec
xchg
pop
popf
imul
shlb
jno
pop
cmpsl
aas
test
mov
jg
sub
sub
imul
add
push
lret
cmpw
push
test
lea
xchg
sub
xor
or
sub
shlb
push
shrl
leave
pop
fldcw
jmp
fistps
out
sub
cmp
imul
mov
das
jmp
fistps
out
sub
cmp
imul
inc
add
popf
aas
cmpsb
jmp
inc
mov
jnp
jbe
sbb
mov
jne
cmp
cmp
sub
add
scas
pop
hlt
add
inc
aaa
test
rorb
fistpl
push
sti
dec
pop
sub
push
or
je
jbe
shrb
cwtl
repnz
adc
xchg
mov
adc
xchg
out
mov
gs
sahf
dec
push
mov
pushl
pop
add
xchg
dec
jbe
mov
pop
data16
and
jo
cmc
adc
arpl
cmp
or
pop
cmpsb
and
fisttpl
daa
sub
cli
mov
xorb
push
push
jb
lods
jno
pop
sub
je
push
or
inc
sub
es
loopne
js
lcall
jne
stos
inc
xor
gs
xorl
cltd
shrl
jbe
xor
lods
je
jmp
dec
cmp
loop
pop
push
xchg
ret
test
lcall
push
dec
icebp
idivb
xchg
les
adc
or
add
fldt
mov
sarl
inc
lock
arpl
inc
iret
aaa
ds
je
xor
std
jo
pop
and
cmp
into
sbb
pop
cmpsb
std
sbb
aad
out
mull
jae
dec
mov
push
enter
and
or
test
push
and
test
pop
mov
inc
in
nop
adc
arpl
sub
jge
push
push
imul
and
cmp
cmp
scas
cld
push
adc
and
pop
cmp
aas
out
lea
lods
pop
loop
xor
xchg
jbe
pop
or
adc
push
rorl
cmp
dec
aad
xor
fistl
mov
outsl
rorb
idivl
adc
sbb
and
pop
test
arpl
jl
sub
test
das
cltd
pop
ret
subl
shr
sub
push
addr16
ret
bound
call
fdivl
out
adc
cvtdq2ps
andb
push
mov
dec
lret
dec
inc
sbb
sub
test
out
mov
push
jecxz
mov
hlt
mov
cli
mov
stos
sbb
cld
rcr
imul
push
jb
xor
add
stc
pop
js
aad
popa
mov
shll
ds
mov
pop
pop
pop
mov
xor
clc
cmp
jmp
push
mov
subb
pop
aas
jb
jl
aam
lock
add
clc
push
rorl
stc
mov
mov
movsl
popa
int
mov
add
jecxz
or
ja
addr16
test
adc
dec
fdivl
xor
push
stc
mov
mov
add
pusha
cmp
jbe
lret
popa
adc
or
xor
jne
shrl
cmpsb
sub
ret
adcb
out
and
mov
in
sbbl
arpl
push
mov
push
in
std
cmpsl
int3
sbb
inc
daa
xor
or
pop
cmp
xchg
or
addl
and
push
xor
sub
inc
dec
jl
scas
icebp
xor
push
and
pop
push
call
aaa
add
pop
jne
pushf
enter
mov
xor
add
aam
out
int
sahf
dec
mov
sub
jns
pop
xor
cltd
nop
outsb
xlat
repz
adc
in
fnstcw
push
out
stos
out
fwait
adc
adc
cld
into
sbb
inc
movsb
les
push
test
cmp
xchg
in
xor
adc
mov
sbb
or
jo
xor
insb
jl
mov
push
push
adc
loop
ljmp
imul
or
and
idivl
mov
mov
dec
push
nop
adc
add
inc
cwtl
cmp
adc
sub
loope
mov
cmp
push
cmp
pop
or
aaa
dec
pop
mov
add
or
scas
cltd
imul
popf
inc
rcll
mov
and
jge
call
js
int3
sbb
inc
mov
push
loopne
repnz
dec
add
es
repnz
mov
shrb
daa
mov
and
adc
lahf
imul
stc
ja
aam
cmp
xor
add
icebp
test
aam
or
add
push
jno
loope
jg
dec
icebp
pushf
push
dec
icebp
jg
jbe
mov
add
xchg
push
pop
cli
fsub
jg
push
and
test
in
add
andl
andb
xchg
add
dec
in
les
jo
into
scas
cmp
in
mov
mov
push
inc
icebp
das
sbb
mov
imul
popf
jnp
idivb
mov
push
pop
sbb
push
xor
hlt
xchg
fidivrl
stos
mov
ret
mov
xchg
mov
das
ret
stc
lods
add
aad
repz
xor
cmpsb
jle
rolb
lcall
inc
push
mov
push
cld
push
add
mov
pop
xchg
arpl
cli
es
out
xchg
cltd
xchg
dec
fs
xchg
cli
mov
mov
jne
and
xchg
sub
mov
mov
push
dec
xchg
mov
es
or
add
mov
add
into
mov
in
sbb
fstl
xchg
pop
cmp
adc
xchg
out
dec
aam
fisttpll
ja
adc
lea
pusha
cmpsb
or
pop
fwait
out
aaa
ljmp
fs
enter
xchg
bound
cmp
pop
fs
mov
cmp
fstpl
jno
scas
jl
inc
movsb
and
push
es
loope
es
cmpsl
dec
mov
pushf
inc
pop
cwtl
or
fdivrp
push
add
sti
dec
negb
mov
ds
mov
or
add
in
jg
dec
cmp
andb
mov
sahf
loopne
pushf
test
insl
daa
std
xchg
inc
enter
xlat
jo
leave
and
pop
ds
sbb
mov
into
inc
lds
iret
aad
shll
lea
mov
pop
mov
add
fs
scas
sub
xor
test
mov
pop
inc
inc
dec
data16
pop
cmp
inc
sarb
repz
ja
jb
mov
sub
jb
lods
and
repz
pushf
xchg
pop
push
pop
sbb
pusha
out
push
shll
xor
sub
jle
add
sub
sbb
pop
add
mov
or
jo
adc
movsl
adc
ds
lret
cmp
fstpt
xchg
inc
add
sub
lds
dec
cmpsl
xchg
lcall
add
inc
push
test
inc
cmp
sti
int3
mov
fs
adc
std
rorb
xchg
mov
cmp
mov
push
dec
mov
pushf
movsb
jg
pop
pusha
push
add
fptan
push
dec
cmove
mov
cli
add
mov
or
sub
cli
push
and
push
rorb
out
inc
jb
push
xor
int3
decl
jge
stos
stc
mov
cmpsl
jnp
sarl
push
lret
cmp
pop
test
and
in
sbb
sbb
mov
pop
mov
cmp
and
pop
das
in
outsb
pop
add
cmp
out
fdivr
sbb
rcl
arpl
js
add
sub
or
xor
imul
mov
xor
jg
and
push
test
and
ret
addr16
push
jo
jle
adc
fldcw
ss
ja
mov
xor
sub
aas
subl
lock
pop
pop
and
imul
rolb
sahf
stos
mov
leave
push
sub
sub
stc
ja
aam
push
inc
andnps
mov
xchg
mov
lret
cmp
cmp
hlt
jp
sarl
dec
shrb
pop
lret
mov
push
adc
aam
fistl
sbb
mov
cmpsl
cmp
add
test
xchg
aas
inc
mov
mov
sbb
in
cmpsl
imul
les
dec
leave
jnp
sbb
in
insb
inc
scas
mov
push
cmp
sub
rcrl
loopne
cmc
add
lods
mov
push
mov
inc
adc
adc
arpl
scas
cmp
mov
pop
jl
aad
cmp
jb
mov
arpl
dec
loope
mov
push
es
push
dec
jae
xchg
mov
insl
mov
cmp
or
pop
or
std
inc
or
loope
lcall
test
xor
adc
fadds
xor
mov
mov
inc
popa
clc
divl
test
fbld
mov
call
inc
inc
cmpsb
test
aas
popf
pop
sub
xor
cmc
lock
imul
dec
and
cmpb
pusha
mov
push
shrl
xor
hlt
ljmp
pushf
aad
adc
aad
in
pop
pop
mov
out
pushf
cmpsl
vmwrite
stos
xor
dec
jno
stos
push
jno
out
lahf
imul
popf
jb
xor
insb
mov
in
cld
nop
push
sbb
lods
scas
test
adc
imul
dec
sbb
test
stos
das
mov
jne
mov
aad
stc
cmp
mov
cmp
or
lea
in
sbb
mov
int3
out
sub
addb
dec
xchg
movsb
mov
mov
add
jg
les
dec
pop
fisttpll
gs
xor
sub
mov
outsl
out
lea
imul
mov
push
testl
jb
icebp
sub
in
or
ds
or
push
push
out
fidivrs
popf
shrb
insb
fs
or
iret
loopne
xchg
inc
sub
cmp
jp
addr16
fmuls
xchg
in
jmp
lret
in
hlt
outsl
xor
or
xchg
jmp
shll
faddl
ljmp
cmp
mov
sbb
push
mov
adc
outsb
lcall
xor
xor
xor
pop
leave
pop
lret
pop
inc
cmp
cmp
sbb
jle
iret
add
pop
xchg
jo
inc
add
cmpsl
dec
sbb
scas
mov
and
lock
sub
cwtl
and
inc
dec
sub
add
jle
cmpb
addr16
mov
hlt
mov
aas
mov
shl
and
lea
mov
xchg
sti
inc
adc
fnclex
mov
test
xchg
fiaddl
in
sbb
xlat
xchg
ja
jp
jl
jp
js
sbbl
jne
xchg
and
cmp
int
inc
jns
ds
or
dec
outsb
pop
in
jae
mov
sub
inc
xlat
add
mov
stos
fcmovne
movsl
std
dec
les
out
out
lahf
mov
ss
fwait
pop
push
adc
fsubrp
test
cmp
pop
les
pop
cwtl
mov
xor
lret
leave
cmp
pushf
mov
pusha
mov
lahf
dec
lods
and
sahf
inc
icebp
pop
pop
mov
mov
je
aam
popf
jmp
mov
nop
pop
xor
adc
repz
adc
dec
and
fisubs
mov
cwtl
jo
leave
gs
into
or
stc
cmc
mov
fcmovnb
jnp
xlat
lret
mov
inc
dec
dec
push
leave
add
or
fldl
xor
es
fcmovbe
in
pop
lock
jae
jg
scas
loopne
out
ret
or
cmp
out
jns
pop
outsb
mov
mov
cli
adc
pop
aad
pop
add
aam
inc
call
repnz
popf
bound
pop
pop
dec
cwtl
add
test
mov
jle
xor
mov
and
sahf
sarl
imul
jnp
pop
addr16
push
or
cmp
lret
sbb
icebp
jno
sbb
jno
js
test
cmp
repnz
push
sbb
xchg
sahf
pop
jl
das
adc
inc
sub
addr16
loopne
xor
mov
lcall
imul
mov
push
xchg
xchg
inc
daa
dec
clc
cltd
xor
roll
stc
dec
or
adc
aad
fwait
xorl
push
lahf
or
vphaddbq
aam
push
push
cmpsb
push
adc
shlb
imul
push
leave
cs
inc
mov
inc
push
xor
mov
dec
popa
xchg
mov
mov
inc
push
add
and
cli
xchg
ret
ret
rorl
cmpsl
es
cmp
pop
push
dec
pop
je
mov
or
mov
call
shrl
fs
cwtl
inc
push
push
jns
dec
push
sbb
push
cmp
clc
fisttpl
das
push
arpl
cmp
or
xor
ret
hlt
popf
push
in
jno
mov
cmp
cmp
add
scas
call
outsb
xchg
jb
fisubl
adc
adc
mov
nop
and
jae
test
bound
xchg
in
push
sti
insl
je
push
bound
jl
pop
xor
adc
pop
je
sub
and
mov
cwtl
xchg
shll
sub
mov
dec
ret
scas
arpl
mov
xchg
jno
cmp
and
pop
pop
or
insb
cs
or
xor
sti
adc
xchg
push
or
xor
jnp
js
inc
fs
push
cmp
mov
xchg
ja
pop
dec
imul
test
cmpsb
imul
sbb
xchg
outsl
lret
push
mov
in
out
mov
mov
scas
test
sbb
mov
push
ucomiss
repz
mov
dec
aas
xchg
frstor
cwtl
add
fsubrs
pop
es
fwait
adc
mov
fcmovu
das
enter
insl
pop
mov
repz
jl
stos
sub
int3
out
sbb
and
xor
or
aam
pop
xor
pop
mov
mov
out
pop
rorb
leave
pop
xor
iret
mov
push
dec
and
neg
popf
xchg
xor
jl
push
pop
lods
jnp
xor
pop
pop
mov
rcl
sarb
cmp
cmpsb
fdivp
addr16
mov
pop
sub
inc
lods
mov
adc
cltd
fnstcw
push
jo
std
sbb
or
add
dec
push
pusha
add
aam
jp
lahf
lret
fldcw
inc
and
mov
subb
or
jnp
add
add
jle
mov
lahf
jno
in
add
mov
daa
ficoms
cld
scas
scas
sti
cmpsb
xchg
sahf
inc
inc
jg
data16
inc
roll
bnd
in
adc
scas
pop
inc
rcrl
ret
cltd
dec
mov
mov
lea
and
bound
jle
lods
icebp
xor
cmp
dec
in
add
fldl
mov
or
pop
subl
xchg
jp
xor
inc
lret
sub
fcomps
subl
pushf
push
in
push
pop
ss
add
in
out
ljmp
sub
or
aaa
dec
mov
imul
pop
xchg
icebp
pop
mov
movsl
out
push
adcl
adc
inc
inc
cmpsb
iret
adc
clc
pushf
xchg
push
mov
mov
cmp
push
fisttps
arpl
out
hlt
and
xchg
and
xor
mov
lret
mov
test
sbb
mov
mov
pusha
push
pusha
dec
dec
or
out
stos
repnz
add
adc
dec
xlat
adc
jno
pusha
loopne
daa
xchg
dec
cmp
mov
xlat
leave
pop
sahf
mov
add
addr16
adc
mov
stc
lret
rcl
ja
fbstp
lahf
stos
fnstsw
nop
ds
dec
inc
pop
aam
push
pop
pop
mov
adc
adc
pop
pop
clc
outsl
test
and
jge
inc
sbb
ss
push
xor
sarb
xor
add
popf
rcl
sahf
xor
xchg
push
xchg
xchg
out
sub
mov
push
pop
fnstsw
aas
imul
fwait
pusha
aam
shrl
push
cld
xchg
mov
sarb
and
mov
pop
cmp
push
test
add
in
jecxz
sbb
mov
ret
bound
add
jb
out
js
mov
sbbl
lret
pop
scas
loop
sub
xchg
ljmp
mov
sbb
ret
ret
pop
aas
pop
push
mov
inc
in
jbe
sti
add
ret
ds
xor
add
or
dec
mov
cmpsb
xlat
add
sub
xchg
stos
mov
movsb
cld
jle
lret
inc
mov
jne
add
push
sub
fdivp
in
popf
jnp
clc
push
inc
xor
adc
ja
and
cmp
mov
out
sbb
das
mov
ja
push
xchg
repnz
pop
adc
xor
sub
jg
inc
add
mov
push
testb
xchg
mov
ret
sarl
xlat
notl
test
mov
cmp
test
mov
sti
rcrb
and
mov
call
xchg
jmp
adc
cwtl
sub
test
xlat
and
xchg
mov
add
mov
pop
push
cld
lret
jp
dec
addl
aaa
lds
divl
dec
sub
int
sbbb
mov
xlat
push
xor
sti
popa
cwtl
or
mov
pop
daa
subl
rcll
and
je
xchg
cmpsb
daa
cmp
pop
xor
repnz
lahf
mov
push
mov
negb
cmc
mov
jg
test
pusha
xchg
lcall
dec
lcall
mov
cmpsl
pop
fdivp
add
xor
ljmp
stc
ss
sbb
mov
cmp
jmp
sub
sahf
out
push
push
cmp
cmpsb
rolb
daa
mov
mov
pop
cmpsl
xchg
decl
lods
mov
mov
mov
inc
lds
add
mov
ss
sahf
out
pop
cmp
popf
and
stos
stc
int3
cmp
jo
adc
lret
leave
pop
fisubl
test
es
add
stc
mov
or
mov
lock
xchg
in
mov
pop
in
add
xor
es
pop
jb
mov
cmp
hlt
mov
loopne
dec
cli
in
aas
mov
dec
inc
mov
out
mov
cmpsl
lea
je
rolb
lahf
fldcw
dec
add
xchg
test
push
push
xchg
into
mov
adc
cld
aad
fildll
mov
and
xor
jge
mov
pop
pop
push
or
xchg
ljmp
mov
stc
cld
lods
ret
in
in
mov
insb
xchg
insb
fsts
in
mov
adcl
mov
mov
inc
pop
adc
inc
cmp
add
clc
test
imul
lea
mov
inc
clc
lret
leave
nop
mov
mov
pop
mov
rorb
iret
int
pop
adc
push
fwait
or
add
fwait
sub
mov
xchg
psrlq
and
and
push
mov
cli
in
scas
pop
mov
push
or
aas
mov
xor
cmp
scas
xchg
fs
nop
inc
push
push
add
cs
es
cmp
mov
cmpsb
lods
cltd
test
and
cmp
jg
sub
jecxz
and
mov
add
mov
xchg
pop
out
je
int
ds
test
adc
enter
cmc
sub
and
decb
lcall
stc
imul
xchg
mov
pop
xor
pusha
repnz
stos
sahf
xchg
jns
inc
xor
xor
and
mov
push
xlat
jb
jmp
fs
pop
ljmp
adc
jbe
sub
mov
cltd
sbb
jl
mov
ret
call
xor
ret
xor
les
and
push
xor
ja
inc
jno
mov
test
jnp
loope
cmp
add
pop
push
lock
scas
jg
cmpsl
rep
repnz
aam
aam
mov
fiadds
les
sub
mov
inc
xchg
xchg
int
lcall
xlat
lods
cmp
inc
push
lret
sarl
sub
fstpl
arpl
test
lea
loope
push
xor
decb
cmpsb
mov
and
imul
pop
xchg
mov
insl
stos
fstps
mov
icebp
sbb
test
or
sbb
mov
mov
pop
jp
jo
cmp
test
push
xor
rcll
jne
stos
dec
jb
dec
and
rcll
out
mov
push
cmp
fs
aam
cwtl
stc
es
pop
jae
outsl
jg
std
mov
lcall
pop
sti
fstl
pop
and
or
inc
shll
add
add
orb
cltd
sub
pop
fldcw
jmp
fistps
out
sub
cmp
imul
mov
das
jmp
fistps
out
sub
cmp
imul
mov
das
jmp
fistps
pop
sub
cmp
imul
xor
leave
psubusw
jmp
and
clc
rcll
push
xchg
inc
xchg
pop
lret
outsl
sti
jg
push
and
pop
shlb
stos
int3
outsb
fisttpll
outsl
jnp
sbb
sub
pop
lret
outsl
sti
jg
setnp
fwait
das
mov
fisttps
jnp
imul
mov
shrb
jg
jb
aas
mov
pop
cld
push
push
in
jg
dec
inc
cmp
push
mov
push
dec
dec
les
inc
pop
xor
push
inc
clc
push
mov
repnz
inc
xlat
push
jae
push
mov
sub
xchg
fdivrs
push
stc
lret
out
shll
enter
adc
mov
jno
lret
adc
mov
mov
xor
add
mov
jbe
aas
cs
mov
add
fbld
lahf
mov
xor
sbb
fidivl
add
lahf
lock
aas
shll
xlat
mov
xorl
pop
sbb
mov
mov
and
xchg
mov
lcall
xor
jmp
cmp
fldt
jg
setnp
mov
mov
fists
pushl
add
sub
fstpt
sub
jo
inc
xlat
mov
dec
pushf
jg
push
or
or
push
iret
inc
cmp
test
push
lds
jp
mov
push
ljmp
imul
pop
aad
sub
pop
lret
sub
pop
mov
mov
fisttps
jnp
imul
mov
lret
outsl
sti
jg
setnp
mov
mov
fisttps
jnp
imul
mov
fdiv
jl
jmp
jg
mov
mov
arpl
enter
ss
add
xor
movsl
lret
mov
push
iret
lret
adcb
std
movsb
imul
jno
cld
bound
rorl
test
push
fisubrl
dec
lret
aaa
adc
inc
mov
xchg
xor
mov
clc
cltd
shl
xchg
xchg
data16
mov
dec
mov
jg
rcrb
into
cli
in
dec
mov
and
dec
lock
sbb
cmpsb
test
ret
outsb
adc
jbe
cwtd
push
xchg
pop
pop
fs
popf
or
std
orl
je
test
repz
and
push
xlat
pop
jl
jg
or
sub
repz
fldenv
xor
sbb
jo
xor
adc
popf
stos
int3
stos
sub
xchg
push
or
sub
js
push
jnp
or
ds
lock
xchg
push
push
xchg
add
mov
jbe
fiadds
pop
int
push
orl
lret
mov
jmp
adc
adc
sbb
ret
stc
inc
and
xorl
jl
cmp
jmp
int
adc
lea
fstl
jmp
fimull
xor
xor
int3
add
push
addl
xor
mov
sbb
dec
mov
inc
das
pop
or
or
out
sbb
mov
sub
cmp
and
mov
mov
fwait
jecxz
popw
insl
popa
repnz
sub
adc
ljmp
push
sbbb
mov
and
imul
and
jmp
mov
cmp
push
andb
mov
jge
clc
add
stos
les
push
adc
lds
mov
imul
int3
test
or
mov
in
das
mov
mov
pop
std
ljmp
ret
jno
sbb
sti
mov
scas
mov
jnp
cmp
call
xchg
or
xchg
mov
fs
jbe
lods
pop
std
fmuls
inc
xor
cli
insl
jge
sbb
test
dec
popa
jno
aam
enter
adc
insb
jns
ret
loop
icebp
mov
imul
notb
pop
cmp
in
and
sbb
pop
xor
leave
or
aad
test
outsb
push
xchg
test
push
inc
out
fs
mov
jmp
fdivs
clc
or
mov
jge
mov
js
cmp
inc
mulb
shrl
push
xchg
add
stc
ds
push
pushf
in
fdivl
mov
scas
cld
mov
lea
push
outsb
iret
ja
shlb
aaa
push
sbb
push
jae
rcrl
cmc
mov
aas
mov
aaa
sbb
xor
je
jl
inc
pop
ret
jp
mov
and
cltd
sar
mov
sbbb
xchg
sub
mov
mov
mov
cmc
mov
or
jns
lock
fcmovbe
sbb
mov
leave
add
loopne
cmp
inc
dec
and
clc
cmc
orb
jle
add
mov
mov
aad
test
xchg
pushf
andb
sub
insl
xor
aas
cs
mov
insb
mov
adc
inc
or
cmp
and
mov
mov
cmc
out
xchg
outsl
rorl
mov
push
pop
pop
inc
mov
or
xor
pushf
fwait
push
dec
pop
andb
data16
mov
sub
pop
js
cltd
mov
mov
add
xchg
mov
sbb
lahf
out
int3
or
xchg
cwtl
test
and
pushf
or
jl
jmp
test
or
mov
push
aaa
ljmp
enter
sub
sbb
imul
sbb
stos
push
call
out
mov
ljmp
in
imul
in
pop
pop
cmp
adc
stos
and
movsl
call
call
jae
lret
sub
loope
jnp
cli
aam
cltd
xchg
xor
xchg
test
js
mov
mov
leave
xchg
jne
int3
sub
adc
fisttpll
or
mov
into
gs
aad
cmp
call
inc
and
push
cmp
adc
cmc
xorl
push
or
js
inc
test
pop
iret
ret
imull
roll
and
mov
cltd
and
xor
pop
lds
out
je
insb
lods
pop
mov
out
pusha
out
add
lahf
or
shlb
lea
mov
in
xchg
into
sub
mov
stc
lods
jnp
mov
push
loop
mov
movsl
insl
push
jns
cmp
add
daa
test
jp
fwait
pop
and
xor
lods
outsb
or
sbb
in
sub
shrl
addr16
push
sub
or
or
push
pop
es
adc
lcall
fbstp
clc
out
fnsetpm(287
testl
sub
adc
stc
and
mov
inc
inc
sahf
inc
xchg
cmp
add
lock
adc
repnz
xchg
mov
add
test
and
jae
popf
dec
out
mov
enter
fwait
inc
scas
mov
xor
push
cwtl
dec
cs
lods
pop
fdivp
mov
push
in
shrb
xchg
mov
stos
pushf
dec
std
popf
add
test
std
loopne
data16
imul
cmpl
mov
das
mov
adc
inc
jmp
leave
jo
dec
ret
sbb
lret
jno
sub
in
aad
imul
int3
cs
mov
data16
adc
ljmp
aaa
inc
xchg
xchg
jmp
jne
xor
aad
ss
popf
je
test
cmp
int
add
and
mov
adc
inc
lods
inc
cmpb
push
or
inc
imul
int
adc
dec
sub
inc
dec
jp
mov
inc
sbb
imulb
gs
je
sbb
sub
dec
xchg
int
cs
inc
xor
or
xchg
dec
adc
cmp
lahf
push
sbb
ret
sbb
inc
scas
shll
cmpsl
inc
pop
push
int3
and
lods
loop
adc
push
xor
push
in
out
sub
sti
xorb
mov
insl
icebp
dec
std
mov
mov
or
inc
cmp
ss
jne
fdivrl
sbb
push
mov
pusha
add
jecxz
fstpt
or
xchg
loope
fisubrl
jg
ss
xchg
pushf
rorl
jb
imul
andb
cmpsl
jl
movsb
mov
xor
inc
or
add
icebp
fcmovu
sub
jnp
jmp
stos
or
addl
loope
mov
cmp
lahf
cltd
push
dec
enter
ja
sbb
xlat
cld
sub
pop
ret
inc
push
jb
push
sbb
in
cmp
movl
outsb
push
push
cmp
bound
es
sbb
jp
sbbl
clc
pop
pop
pop
push
mov
and
repnz
pusha
lcall
and
pop
fimuls
jg
push
aad
js
xchg
lods
bound
nop
lods
sub
pop
lods
fmuls
add
scas
enter
or
jl
cltd
outsl
jmp
test
and
into
mov
mov
mov
jle
push
jp
xor
lods
dec
xchg
xchg
sub
sbb
push
jp
or
rorb
mov
mov
roll
or
or
sub
fisubrl
std
push
outsb
lret
jno
leave
cmpb
cltd
jg
push
pop
aam
hlt
rolb
sarl
sbb
decl
mov
adc
lea
pop
mov
je
inc
dec
std
and
mov
jb
jge
call
jl
adc
rcrb
sub
push
fdivs
pop
xor
cmp
repnz
shll
repnz
mov
adc
xchg
sbb
idivb
outsb
push
mov
cmp
pop
lcall
stos
sub
xchg
xchg
addr16
inc
jbe
rcrb
push
mov
test
cmpsb
scas
movsb
scas
loopne
rcll
ja
fimull
xlat
and
sahf
fildll
fidivrs
jo
sbb
stos
add
loopne
pop
xchg
test
fisttpll
jge
subl
dec
dec
cltd
xchg
insb
pop
xor
sub
xchg
xor
movsl
pop
cmpsb
jl
jecxz
rcr
in
jp
jp
lea
mov
xorb
sub
in
cmp
xlat
lock
inc
xchg
sbb
incb
nop
movsb
adcl
mov
dec
adc
cwtl
push
jmp
cltd
jp
cmp
insl
mov
xchg
mov
and
xchg
or
setge
jmp
pop
or
xchg
cmp
sbb
jle
pop
inc
out
icebp
push
dec
test
sti
stos
into
xchg
or
push
inc
fwait
sub
movq
cli
add
mov
and
loope
mov
dec
add
adc
dec
movsl
sahf
std
push
call
lea
enter
jno
sub
call
inc
mov
fnstcw
mov
xchg
add
subb
mov
xor
xchg
and
mov
adc
add
into
cld
lods
cwtl
scas
mov
and
push
pop
out
fimull
fldl
mov
shll
cmp
push
dec
and
push
stos
pop
cmp
sub
adc
mov
test
xor
dec
fnstenv
push
outsb
jle
std
roll
mov
outsl
xchg
roll
daa
adc
inc
sbb
fsts
fsub
cld
jg
js
mov
mov
adc
leave
sub
push
inc
pushf
mov
add
or
roll
mov
xchg
loop
aad
xchg
jg
notb
cmp
adc
mov
or
popf
adc
sub
imull
ret
cs
cwtl
mov
sub
jl
xchg
mov
mov
mov
dec
inc
fwait
mov
aas
ret
dec
lret
dec
pop
cld
xchg
je
dec
xchg
inc
xor
or
stos
add
mov
cmpsb
pop
fs
xor
push
int3
jnp
subps
mov
cmp
sub
fstpt
jmp
iret
sbb
outsb
push
sub
inc
xchg
adc
xor
std
cmp
dec
addl
xor
sub
das
dec
mov
xor
icebp
jb
leave
xchg
xchg
inc
imul
or
sub
lods
test
xchg
cmp
inc
sahf
js
xchg
and
dec
adc
mov
mov
lds
inc
pop
jne
lods
xchg
popf
fadd
jne
in
add
cmpsb
jns
shlb
pusha
add
ja
mov
repz
pop
je
ds
int3
lahf
dec
aam
mov
dec
shlb
frstor
insl
mov
lock
inc
stc
and
es
xor
push
pop
aaa
sahf
sub
xlat
sbb
and
fwait
xlat
stos
cwtl
outsl
inc
ds
and
lods
addr16
icebp
sti
inc
jp
inc
repz
mov
adc
leave
inc
sub
add
es
ds
push
push
xchg
add
mulb
sub
add
testl
mov
jecxz
xor
mov
sub
and
in
and
ret
mov
pop
arpl
dec
pop
aad
pushf
cmp
aaa
pop
insl
mov
test
lret
mov
sarb
insb
adc
out
lret
xor
jne
scas
jbe
sub
mov
scas
cmc
pop
addr16
pop
mov
pop
lock
xchg
insl
and
mov
and
nop
sarb
jl
rolb
stos
or
test
sbb
or
fs
mov
ds
jmp
push
push
cmp
cmp
dec
flds
mov
jns
inc
pop
mov
sub
nop
and
jmp
xchg
mov
loop
push
ffreep
cmc
and
test
pop
xchg
push
dec
fisubs
xor
iret
sti
js
xor
mov
cmp
lea
aam
jmp
jb
and
jge
shll
and
jbe
out
push
test
sbb
xor
sub
in
ljmp
out
dec
add
rolb
out
bound
xor
test
pop
fdivrl
mov
mov
shll
test
xor
ret
push
divl
and
xchg
ja
sbb
cmp
dec
scas
std
and
mov
push
push
sbb
repnz
xor
loope
sub
out
test
into
in
sub
mov
inc
sahf
pop
shrb
lds
mov
mov
lds
gs
jl
xchg
lahf
mov
xor
jae
cmp
inc
or
in
out
xchg
jo
mov
fcoml
push
sahf
xor
cmpb
xlat
push
push
push
push
insl
add
enter
push
push
or
push
jmp
lea
mov
andb
sahf
and
jbe
and
dec
outsb
sub
fnstcw
jne
pop
xchg
mov
nop
push
adc
lods
int3
imul
shlb
dec
movsl
mov
inc
testl
dec
sub
sbb
sarl
je
andl
pop
loope
mov
or
xchg
in
or
int
jnp
push
adc
into
mov
das
bound
xchg
inc
loop
dec
push
cmp
test
pop
jmp
sahf
hlt
frstor
pop
push
ds
out
addr16
imul
jge
add
in
sbb
test
sarb
out
xor
add
cmpb
add
fwait
lock
pop
rol
aam
mov
push
jge
cmp
pop
out
out
or
inc
or
mov
fildll
xchg
cmp
xor
int
flds
testb
jns
ljmp
lock
add
imul
and
popa
mov
fwait
or
call
cld
adc
lret
insb
cmp
mov
ret
xchg
idiv
dec
jbe
leave
fistpll
sub
push
in
jo
mov
pop
dec
xor
fwait
rcrb
cmp
icebp
cmp
inc
mov
pusha
scas
mov
sub
or
jecxz
test
pop
outsl
cmp
dec
jl
nop
jecxz
daa
negb
sti
dec
dec
push
sahf
es
aad
add
fcmovnb
push
rcrl
les
add
mov
xchg
or
lret
pop
push
hlt
das
call
fistpl
add
out
mov
sahf
repz
cli
loopne
sar
scas
rcll
loopne
jmp
jmp
sbb
xorl
xor
int3
fistpll
outsb
push
jl
test
div
test
call
daa
mov
lret
popf
push
mov
add
push
fstps
jno
mov
clc
mov
icebp
dec
jne
jnp
mov
mov
in
cltd
inc
out
xchg
jg
push
dec
dec
out
incb
mov
lret
rclb
inc
fstps
cmpsb
test
lods
nop
in
flds
pop
jnp
mov
push
sub
hlt
xchg
sub
cmp
scas
test
dec
or
push
jne
in
mov
sbb
scas
es
inc
icebp
and
push
lds
and
cwtl
andl
mov
mov
js
cmp
pop
or
cld
outsl
sbb
push
loop
and
in
lock
adc
pop
mov
inc
pop
jbe
mov
dec
xor
cmp
das
jp
mov
lea
add
mov
adcb
pop
jle
adc
stos
jmp
xor
pop
shr
cmp
or
fneni(8087
test
mov
add
xchg
jg
push
lahf
imul
pop
mov
js
lea
pusha
mov
xchg
mov
orl
js
adc
outsl
stos
test
je
cmp
xchg
inc
lods
xchg
rclb
outsb
in
mov
adc
mov
outsb
inc
mov
in
cmc
mov
push
jl
push
push
and
inc
sub
or
aam
mov
movsb
pusha
in
jnp
and
rcl
push
icebp
xor
xchg
jge
std
cld
popf
xchg
mov
insl
jmp
jo
out
cld
cmpsb
adc
add
sarb
lock
in
outsl
daa
mov
fsubs
addb
adc
pop
dec
inc
je
dec
pop
xor
daa
mov
add
xchg
jp
cmp
pop
sub
int
repnz
sub
pop
in
jp
push
adc
rcll
mov
cld
push
sub
cld
fdivrl
push
mov
or
call
cmp
jno
sbb
in
inc
and
es
inc
in
dec
add
dec
outsl
adc
sbb
inc
fwait
loope
inc
popa
pop
aas
movsl
jl
add
jmp
pop
pusha
pop
stc
jbe
loop
jbe
out
pop
subb
jge
push
adc
stos
out
jo
pop
and
or
pop
outsl
xchg
ja
jno
sbb
roll
lock
shlb
mov
xchg
call
sbb
clc
jmp
inc
dec
fwait
out
iret
fcomp
jp
ds
push
sub
pop
mov
test
xlat
xchg
mov
sar
test
testb
aad
and
xchg
inc
push
faddl
inc
iret
sbb
out
in
leave
fistpl
inc
and
or
jmp
mov
fs
pop
adc
fstps
call
data16
or
push
pop
mov
mov
bswap
mov
fsub
notb
imul
dec
push
shlb
fimuls
in
scas
cmp
pop
pop
xchg
sar
rcll
pop
movsb
xor
sti
stc
xor
jmp
iret
fistps
shll
xor
iret
cltd
pop
pop
mov
outsb
loopne
imul
push
xor
or
ljmp
mov
push
and
inc
notl
jbe
fistpl
adc
jo
mov
aad
hlt
gs
into
inc
leave
cmp
lods
nop
cmp
das
or
insb
pusha
data16
hlt
int
add
mov
cli
adc
outsb
jmp
jmp
or
lret
mov
ljmp
mov
pop
pop
leave
cmc
adc
lcall
clc
leave
into
mov
push
stos
sbb
imul
repnz
xchg
jns
ret
sbb
pushf
in
das
dec
ljmp
pop
test
sti
inc
lock
mov
popf
push
add
mov
repnz
movsl
mov
add
push
xor
adc
pusha
test
scas
pusha
divl
repz
pop
sbb
jb
test
and
push
or
adcl
mov
insl
xor
lock
insb
clc
in
sti
loop
xor
and
cmpsb
sub
hlt
fiaddl
push
hlt
insb
mov
and
mov
pop
insb
insl
jnp
das
lea
xor
in
divl
repnz
push
xchg
mov
bnd
pop
mov
mov
rcrb
cmpsl
mov
adc
in
push
or
mov
shl
dec
je
xlat
ds
loopne
add
ret
lods
mulb
pop
outsl
out
sub
clc
int3
jmp
xor
mov
xchg
push
scas
sahf
in
and
daa
push
aas
outsl
imul
daa
lods
and
hlt
xchg
pop
cmp
test
sub
aam
mov
add
push
fcompl
xchg
jbe
fcoml
and
pop
mov
into
cltd
jns
cli
inc
movsb
inc
jl
lret
stos
out
and
daa
or
call
xchg
xor
sbb
pusha
sbb
or
dec
sub
int3
hlt
inc
sub
lds
sub
dec
clc
cmp
aam
sahf
ds
inc
jns
lret
test
ds
sbb
jp
lret
adc
mov
mov
gs
bnd
outsb
sub
lcall
clc
jmp
sub
add
loope
inc
sti
insl
jp
or
cs
jns
fmul
mov
stos
das
pop
sbb
rcrb
xchg
jge
mov
fisubrs
push
dec
mov
data16
cmp
jo
cmp
pop
inc
xchg
je,pt
ficomps
push
xchg
cmp
cmpsb
cmp
mov
pop
lods
fimull
push
lods
pop
sbb
call
cmp
ss
mov
pop
mov
cmpsl
cwtl
dec
ud1
into
lods
pop
inc
ljmp
cwtl
mov
or
mov
mov
out
adc
bound
jo
out
inc
inc
jmp
cmpsl
out
mov
pop
jmp
test
add
cmp
and
rcrl
xor
xchg
int
mov
aam
into
dec
push
sti
jg
setnp
mov
mov
fisttps
jnp
imul
mov
lret
outsl
sti
jg
setnp
mov
mov
fisttps
jnp
imul
mov
lret
outsl
sti
jg
setnp
mov
mov
fisttps
jnp
outsl
sbb
das
dec
fistps
outsl
jg
setnp
mov
pop
and
inc
jnp
sbb
xchg
pop
je
inc
inc
push
lret
sti
ljmp
fwait
iret
in
fwait
dec
aad
jno
dec
jp
or
sbb
sub
cmp
lret
sti
ljmp
mov
dec
imul
dec
jp
or
cmp
or
sbb
jmp
sti
ljmp
mov
dec
imul
cs
xor
outsb
push
insb
andl
mov
and
addb
mov
jp
inc
jmp
jmp
mov
push
mov
jnp
test
mov
dec
cmc
cmp
pusha
sub
push
cmp
sbb
aam
mov
push
push
pop
dec
imul
xchg
dec
adc
xchg
xlat
data16
pushf
fidivrs
mov
sarb
xchg
dec
test
lea
cmp
sub
sbb
xor
xor
xchg
push
stos
fidivrl
outsb
jp
repz
xchg
sub
arpl
sti
xor
jne
shll
pop
xor
xor
sbb
jg
ds
movsb
cmp
imul
push
in
jmp
sti
ljmp
mov
dec
imul
dec
jp
or
sbb
sub
cmp
jmp
orb
ror
iret
out
sti
out
or
pop
bound
sbb
sub
jae
outsb
jns
jle
xchg
mov
stos
fdivrl
or
sub
or
dec
lods
pop
outsb
cmp
stos
mov
mov
stos
mov
jnp
dec
jp
or
sbb
sub
cmp
lret
sti
ljmp
mov
dec
imul
dec
jp
or
sbb
sub
cmp
lret
rcll
ficomps
pop
cmp
fsubl
gs
cmp
mov
mov
mov
inc
dec
mov
add
sarl
in
out
jns
stos
mov
stos
nop
inc
add
ljmp
out
push
lods
imul
jle
paddusw
ret
jns
loope
add
inc
lock
mov
jmp
lret
xor
pop
jbe
add
mov
pushf
ja
jae
push
cmc
das
nop
lcall
cmp
adc
ja
fadds
push
pop
ljmp
pop
lea
mov
and
lea
mov
outsl
sub
ficomps
push
aad
fmul
xchg
pop
or
aas
sahf
leave
jl
pop
xchg
xor
outsb
mov
cmp
mov
cli
mov
adc
clc
xor
push
jp
or
jae
xchg
aam
ja
push
xlat
sub
and
addr16
lcall
add
int3
or
mov
push
testl
movsbl
outsb
imul
imul
cmpsl
jno
mov
outsl
xchg
ret
scas
jecxz,pn
cmpsl
sysexit
js
aaa
in
add
mov
sbb
jo
pop
mov
sbb
in
or
inc
sti
push
fwait
insl
in
nopl
shr
xlat
jp
pop
jge
sbb
and
push
mov
xchg
inc
test
test
dec
jbe
mov
je
adc
adc
xor
push
mov
fistps
xor
pusha
jae
mov
push
scas
rcl
pop
pusha
repz
insl
sbb
mov
int
mov
sub
ret
jno
aad
std
jge
in
or
loopne
lret
jle
push
and
ljmp
pop
mov
sti
jae
test
call
movsl
add
xchg
dec
into
aas
adcl
mov
mov
push
ja
test
insl
stos
inc
mov
jne
js
cmpsl
out
imul
inc
imul
fwait
rol
das
push
fcoms
test
and
es
das
outsl
jge
sbb
rcll
fmull
pop
aad
es
dec
repz
jmp
cwtl
out
sub
inc
cld
adc
lods
pop
pop
mov
loope
mov
push
movsb
imul
pop
inc
and
ret
stos
pop
movsl
jecxz
jg
mov
loope
pop
mov
test
bound
jns
ret
cmp
testl
push
xlat
ret
add
pop
pop
xchg
imul
ja
add
push
sbb
xchg
shrb
mov
xchg
xor
cltd
pop
xchg
or
jp
push
inc
lret
lock
arpl
rolb
pop
mov
sbb
jns
clc
adc
fs
scas
bound
sbb
inc
lds
inc
pop
ret
cmp
jg
sbb
cmp
cwtl
leave
test
pop
xorb
push
call
ret
in
jg
cmp
lahf
jmp
daa
sub
jp
push
push
ljmp
sbb
sub
and
imul
pop
fcomi
sahf
dec
fcoms
xchg
jb
fdivl
aad
sub
xchg
cld
mov
push
fbld
int3
xlat
outsb
stc
decl
leave
dec
lods
mov
mov
fcmovu
mov
icebp
mov
scas
fs
dec
sub
pop
xchg
out
shll
dec
mov
imul
hlt
hlt
les
enter
repz
jbe
in
enter
mov
mov
push
xchg
and
arpl
lds
aaa
dec
mov
test
in
adc
fcmove
aas
mov
stos
es
insl
push
cmp
push
pop
mov
adc
fstpt
movb
lock
dec
or
in
daa
xor
int
shlb
add
dec
arpl
mov
mov
xchg
aad
jmp
clc
popa
stos
adc
stc
ret
cmpsb
or
xor
xor
dec
sub
movsb
nop
pop
sub
inc
xor
xchg
leave
ret
xor
mov
ret
sti
out
mov
lea
xchg
xor
jmp
cli
inc
in
fcoml
js
int3
jnp
out
push
nop
push
popf
xor
mov
out
pop
arpl
or
dec
push
test
lcall
and
and
outsl
lea
js
outsb
subl
repz
mov
xlat
push
das
adc
repnz
push
push
mov
data16
iret
sub
es
rol
fildl
cmpsb
mov
jmp
rcll
lods
les
or
mov
mov
and
lahf
bound
pop
and
pop
mov
pushf
dec
xlat
imul
add
movsl
arpl
lods
add
stc
sub
jecxz
lcall
pop
jg
fildll
pushf
adc
enter
sbb
cmp
lcall
mov
xchg
inc
xchg
dec
fdivs
jecxz
enter
xor
enter
mov
or
xor
cmp
pusha
or
inc
jnp
cmp
addl
mov
scas
call
jb
movntq
sbb
mov
scas
push
in
jne
popf
pop
lock
jno
push
sub
test
push
xor
dec
sbbl
sbb
pop
pop
movsl
out
outsb
mov
addr16
inc
scas
lods
ss
xor
dec
sahf
scas
loope
mov
cmpsl
adc
sbb
mov
cmpsb
or
add
mov
iret
cmp
adcb
scas
in
andb
mov
bound
js
js
mov
adc
loope
jp
popf
jge
inc
in
lock
and
cmpsl
inc
loop
mov
cli
mov
mov
xor
lods
or
fists
mov
jns
mov
addr16
jmp
fisttpl
add
mov
test
add
pop
mov
scas
sti
push
out
add
jle
sti
push
pop
cs
popf
pop
inc
jmp
iret
pop
adcb
pop
test
mov
andb
fimull
ljmp
lods
xor
push
and
add
jl
add
test
fisubrl
lds
stc
dec
push
xchg
bound
xchg
es
jbe
imul
sahf
push
loope
fiadds
adc
stos
sbb
int3
leave
jp
aad
stos
xor
je
call
cmp
lock
mov
test
push
inc
adc
lea
outsb
mov
push
jl
inc
and
mov
push
sbb
notl
shll
shrb
pop
je
pop
or
ss
xchg
jo
sbb
add
icebp
inc
fwait
sbb
gs
or
subl
pop
sti
and
inc
cmp
hlt
outsb
fdivrl
push
cli
aad
pop
ds
cmp
fs
adc
sbb
mov
or
negb
dec
jmp
mov
jb
out
repz
sub
addb
cltd
js
clc
lahf
xor
jmp
icebp
inc
inc
and
or
mov
or
insl
jno
shrl
jns
cld
jecxz
sub
movsb
xor
mov
mov
cwtl
mov
into
pushf
mov
fisttpll
hlt
loopne
fcompl
pop
adc
add
cli
ret
push
addl
cmp
pushf
nop
lds
std
push
out
add
add
mov
hlt
jge
in
pop
es
adc
das
push
sbb
lea
out
and
mov
insl
xlat
pop
add
ja
mov
mov
mov
mov
stos
popa
lret
rorl
stos
mov
icebp
xor
xor
in
inc
aaa
or
imul
cmpsl
outsb
and
push
mov
pandn
hlt
jmp
dec
jmp
dec
mulb
push
scas
jnp
or
insl
mov
sub
mov
cs
enter
sbb
stos
inc
lea
sti
mov
xor
sub
test
adc
pop
or
mov
fstpt
xor
stos
je
mov
sti
mov
fcmovbe
imul
movsb
push
cmpsl
xchg
movsb
mov
mov
sarb
rcll
std
xor
pushf
inc
sub
inc
addr16
fcoml
js
jecxz
js
or
adc
cmp
mov
adc
push
sbbl
int
push
aaa
mov
stos
ret
out
mov
scas
testb
stos
test
ss
jle
ja
ds
dec
jo
dec
fisttps
jo
mov
fadd
enter
cmp
and
and
xchg
jle
sub
inc
or
xchg
sub
jp
insl
mov
mov
mov
cmc
push
scas
adc
cmp
sbb
insl
shlb
jle
popa
test
push
mov
cmp
sti
movsl
or
lods
jbe
or
loop
sub
xchg
js
cmp
loop
add
adc
xor
push
mov
pop
clc
enter
jnp
mov
popa
andb
pop
dec
xor
push
inc
in
push
xchg
inc
xor
fsubl
pop
stos
jecxz
jae
ror
je
shr
sbb
stos
xlat
cli
push
mov
int
add
jp
stos
andb
dec
js
add
es
mov
mov
xchg
pop
std
sub
jge
mov
add
addl
aad
cwtl
push
fmuls
addb
scas
or
scas
add
and
ret
pop
cmc
push
sub
cmp
inc
jle
and
sub
bswap
fimull
cmp
cmp
jnp
mov
xchg
sub
shr
stc
icebp
jbe
pushf
fs
mov
dec
xchg
dec
mov
push
jno
xchg
mov
loopne
push
addr16
mov
sub
pop
mov
jp
xor
inc
outsb
sbb
dec
sbb
mov
adc
sarl
cmpsl
mov
mov
mov
sub
jnp
add
cmc
inc
add
mov
dec
pop
out
cltd
adc
lret
mov
sub
adc
ljmp
dec
scas
xchg
jl
popf
mov
mov
fidivrl
xchg
cmp
cmp
sbb
xor
orb
mov
add
movsb
xchg
cmp
hlt
movsl
inc
rorb
jle
add
and
sbb
or
lods
mov
cmc
shlb
shrb
loopne
lahf
dec
inc
cwtl
test
movsb
add
pop
rol
lods
xor
mov
jae
sarb
cmc
dec
out
rorl
or
jecxz
mov
add
jle
gs
jo
je
pop
mov
stc
scas
fisubs
pop
cwtl
push
push
mov
test
push
outsl
lods
jmp
push
jge
rorb
and
lods
iret
mov
jb
icebp
inc
mov
xchg
shufps
roll
fsubp
xorb
xchg
dec
sub
mov
int3
les
es
ja
sti
mov
inc
cltd
mov
or
cmp
sbb
repz
pop
xor
sbbb
sub
icebp
jno
fisubl
jle
jecxz
outsb
outsl
inc
cltd
mov
int
out
inc
mov
daa
jecxz
sub
imul
nop
pslld
mov
std
insl
clc
jno
outsb
adc
fs
xor
ja
repnz
or
dec
lea
ret
scas
jnp
adc
push
movsb
fcmovnb
pop
fistps
jno
pusha
pop
icebp
xchg
rcrl
cwtl
addr16
hlt
das
in
pop
lcall
dec
inc
xlat
or
cmp
cmpsl
ljmp
cmp
in
xchg
rcrl
xchg
lds
xlat
cmp
or
jge
jae
cmc
cmp
cmpsb
xchg
xor
cmp
or
in
lea
pop
ficomps
pop
je
sahf
xchg
adc
sub
dec
lret
mov
stos
xor
push
xchg
xor
or
cwtl
andb
xlat
inc
pop
mov
mov
push
lods
jb
and
jae
fdivp
out
lods
push
pop
adc
xor
add
jmp
mov
push
mov
cwtl
movsl
aaa
xchg
pop
shl
mov
incb
and
xchg
cmc
mov
adc
dec
cmp
jns
and
int
sbb
pop
or
and
sub
or
aaa
inc
arpl
xor
adc
orb
inc
stc
stos
popa
add
mov
dec
test
lahf
pop
add
push
dec
pop
xchg
adc
out
inc
dec
sbb
sub
stc
adc
clc
lcall
aam
mov
push
cmc
push
sbb
in
mov
xlat
rorl
pusha
scas
jle
add
aas
call
push
out
mov
stos
notb
sub
out
push
push
adc
push
xlat
cmp
test
imul
test
and
cmpb
pop
lods
and
call
xchg
jge
xchg
stos
xlat
fisubl
lcall
jl
jae
repz
scas
inc
in
mov
xchg
jmp
mov
rolb
mov
ljmp
filds
xchg
insl
inc
test
movsb
cs
into
sbb
cmp
in
jp
rorb
pusha
outsb
xchg
mov
fisubs
stc
imul
dec
subl
sub
nop
out
sbb
dec
xor
cmc
lock
cmp
jo
cmp
hlt
xchg
int3
sbb
jmp
fsubr
movsb
clc
xchg
cmp
push
pop
pop
iret
dec
xor
fisubrs
adc
xchg
stc
lods
mov
xchg
jne
add
popf
adcb
mov
subb
mov
popa
adc
aad
dec
push
pop
xor
mov
outsb
push
sbb
enter
mov
cmp
sbb
stos
dec
adc
xor
pushf
mov
leave
out
shl
sarl
xor
cmpsb
loop
aaa
mov
xlat
pop
inc
aad
adc
mov
or
mov
ret
cli
fistl
xchg
dec
addb
inc
js
daa
lods
clc
test
enter
and
dec
add
mov
mov
mov
xor
jecxz
fsubs
mov
sti
jo
lods
scas
sbbl
and
scas
daa
notb
push
fsubp
mov
cwtl
dec
jp
sbb
mov
popf
aam
xor
add
mov
sub
lcall
lret
pop
movsb
adc
mov
push
sbb
inc
jnp
imul
push
cmp
inc
fwait
int
cli
cmp
add
push
inc
cwtl
xor
pop
imul
dec
dec
mov
cltd
mov
rcrl
iret
lret
xor
mulps
hlt
outsl
and
add
or
cld
jno
push
js
xor
in
mov
test
cli
mov
rep
sarl
xor
push
and
inc
mov
cld
push
xor
xlat
cmp
fimuls
mov
sbbb
in
mov
xor
orb
jge
xor
pop
add
jne
dec
dec
mov
leave
mov
xor
fistps
stc
fldpi
std
adc
dec
mov
dec
push
fs
add
xlat
pop
ss
mov
inc
mov
imul
int3
je
fidivs
cmp
adc
pop
fcompl
shlb
push
jecxz
adc
cmp
ret
movsb
cmp
lahf
push
adc
xchg
xchg
xor
cld
cmp
outsb
sub
ret
jecxz
cld
mov
popa
jle
ja
arpl
mov
mov
push
mov
pop
nop
inc
jle
gs
cwtl
push
in
adc
std
sbb
xchg
dec
mov
dec
ss
insl
jno
adc
adc
scas
jg
shl
or
loope
test
adc
jne
add
movsb
pop
ja
gs
ficoml
cmp
mov
cmp
xchg
add
mov
pushf
xchg
addr16
and
jnp
test
cmp
mov
aas
test
xor
aaa
xor
imul
and
sub
outsb
jbe
add
sbb
ja
mov
xor
aaa
inc
push
sub
jecxz
fwait
add
std
sbb
dec
repz
out
xchg
push
les
dec
loop
adc
fisttpl
mov
rorl
fistl
jmp
pop
xchg
adc
pop
or
imul
cmpsb
aaa
mov
das
jae
pop
inc
fisubl
push
sbb
orl
stos
in
imul
inc
xchg
lock
inc
xchg
dec
mov
jnp
in
test
mov
int
cmpsb
jmp
mov
test
scas
gs
fisttpll
arpl
lahf
iret
data16
inc
jle
nop
mov
push
push
push
shlb
sbb
and
je
inc
nop
push
aad
push
shrb
jg
adc
lods
push
push
cmpsb
sub
jne
mov
pcmpgtb
notb
adc
shll
cmpsl
sub
pop
loope
movsb
out
into
test
in
or
cmpsb
sbb
adc
orl
repnz
repz
inc
sahf
sbb
lods
loop
fmul
adc
das
bound
jecxz
pop
clc
xchg
mov
add
push
xor
push
sti
popf
imul
inc
cld
push
in
xchg
mov
dec
xchg
adc
nop
xchg
and
push
and
jb
outsb
mov
cmp
je
jg
dec
insb
cltd
dec
bound
adc
cmp
cmp
int
test
and
or
loop
dec
jle
cmpl
filds
pop
jl
test
mov
jecxz
mov
sub
add
pushl
imul
outsb
jmp
xor
cmp
test
lret
ret
outsl
cltd
xor
imul
rcll
jne
xchg
mov
repz
xor
mov
dec
and
mov
or
xchg
pop
lds
outsl
push
mov
mov
xchg
in
pop
rclb
cmp
pusha
pop
xlat
inc
pop
test
xlat
and
into
scas
loopne
or
les
je
cltd
cs
push
inc
or
mov
andb
mov
inc
fwait
adc
das
dec
cmc
aam
int3
push
std
dec
lahf
cltd
sbb
movsl
enter
jae
movsl
jnp
std
dec
sbb
cmpb
leave
sarl
mov
cmp
add
or
cs
sbb
lods
add
scas
jns
orb
push
xchg
inc
lcall
xor
aad
sub
aam
movsb
xor
daa
rcrl
add
std
xchg
pop
xor
push
and
scas
cli
push
mov
adc
aaa
lahf
popa
inc
or
inc
sub
pop
in
adc
out
data16
cmp
adc
jne
push
add
mov
push
xchg
dec
adc
je
cmpsb
pop
lret
dec
sbbl
loop
xor
lret
add
mov
mov
fisubs
imul
pop
popa
ficoml
cmpsl
jp
in
jnp
dec
ss
lods
into
push
data16
jb
push
loope
sub
enter
sarb
push
add
mov
idivl
sbb
pusha
shl
out
pop
cmp
jne
loopne
push
mov
sub
das
mov
insb
and
sub
pop
xor
addl
jae
xchg
loopne
cmp
ds
mov
lahf
jge
push
testl
jb
lock
mov
jmp
std
and
aaa
jb
daa
pop
enter
repz
mov
lock
aad
adc
arpl
and
out
mov
ljmp
or
cld
jg
daa
arpl
lock
adc
fisubl
xlat
sub
xchg
rorl
jb
adc
mov
mov
pop
mov
xor
adc
out
lods
mov
hlt
roll
jmp
sbb
xchg
jg
cwtl
imul
mov
jp
pusha
repnz
shlb
mov
stos
push
repz
xor
out
cmpsl
mov
xor
cmp
dec
mov
inc
adc
xor
das
jo
insl
dec
sub
adc
fldcw
xor
jnp
push
adc
ds
aas
aas
and
add
adc
push
iret
jb
add
lock
inc
push
int3
jg
xchg
cmpsb
or
lret
mov
cmpsb
inc
int3
sub
sbb
imulb
shl
pop
xchg
in
ret
jnp
pushf
mov
lret
mov
cmpsl
fdivrs
pop
scas
xchg
pop
les
inc
pop
hlt
test
adc
add
test
and
fdivl
ljmp
or
adc
adc
xorl
popa
les
add
mov
pop
xor
cld
fmull
inc
jnp
ljmp
push
inc
push
into
xchg
push
test
xchg
mov
in
dec
popf
les
ss
dec
aad
pop
mov
sub
es
jbe
xchg
outsl
mov
cmp
mov
arpl
cmpsb
stos
sbb
fimuls
insl
pop
stc
hlt
jge
jae
add
fsubs
mov
sub
mov
cmpsb
mov
test
popa
test
and
ds
jne
in
lret
dec
xor
and
iret
mov
insb
int
mov
inc
sbb
cmpl
fisttpl
mov
jnp
dec
jp
or
sbb
sub
cmp
lret
sti
ljmp
mov
dec
imul
dec
jp
or
sbb
sub
cmp
lret
sti
ljmp
mov
dec
imul
dec
jp
or
sbb
sub
cmp
lret
sti
ljmp
mov
dec
imul
dec
jp
jge
xchg
aad
vandnps
add
add
ljmp
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
and
mov
loopne
mov
out
mov
cmpsb
mov
adc
bound
arpl
inc
and
mov
mov
loopne
nop
loop
shlb
and
push
add
jae
rclb
inc
and
call
loop
shrb
and
add
or
sub
shlb
imul
pop
sub
icebp
popa
mov
and
sbb
sti
idivb
lea
and
sbb
jle
cmp
test
pusha
pusha
xchg
popf
push
pop
xor
inc
popf
scas
jecxz
test
sbbb
dec
xor
jb
inc
int3
std
in
add
and
mov
shl
mov
inc
xor
ret
add
mov
xchg
inc
xor
inc
mov
pop
and
seta
sbb
ret
fstl
inc
xor
or
dec
fbld
sub
stos
sub
mov
addr16
jo
inc
bound
iret
inc
xor
shlb
cli
repnz
loop
shrb
and
imul
pop
push
xor
mov
sar
int3
loope
movb
pop
cmp
clts
jge
push
aas
xor
dec
in
test
shl
lret
jecxz
mov
aam
int3
pusha
sub
push
and
bound
outsl
add
les
mov
adc
ret
push
and
jo
pusha
jb
bound
push
xor
mov
mov
loopne
nop
loop
shlb
and
jo
pusha
jb
bound
push
xor
mov
cmpsl
inc
pop
rcl
repz
jnp
xchg
cli
pop
insb
jae
xor
and
andl
jle
dec
mov
daa
dec
push
nop
push
and
inc
into
aaa
dec
je
popa
cmp
and
inc
ficompl
mov
cmp
in
push
push
int
mov
cmpsb
sbb
mov
int3
add
jbe
push
ror
add
and
lahf
mov
fidivrl
ja
pop
mov
pop
or
popf
sub
jle
xor
test
and
imul
sbb
hlt
clc
pop
and
sbb
xlat
mov
cmpsl
sti
dec
cmp
mov
add
push
lock
mov
inc
wbinvd
sbb
roll
lds
cmp
out
push
pop
push
sbb
test
jae
in
pop
mov
aam
push
jne
notl
stos
imul
int
xchg
pop
enter
cmc
adc
sub
push
adc
and
pop
or
mov
aad
ret
gs
dec
repnz
movsl
sti
repnz
inc
push
pop
inc
aas
jbe
in
lods
or
or
call
pusha
stos
ffree
repz
jns
inc
ja
mov
pushl
and
std
xchg
les
mov
jbe
orl
sub
in
sbb
mov
push
in
in
xchg
int
mov
jmp
stos
push
push
and
and
push
or
adc
push
jle
jmp
loope
jno
mov
cmc
je
cmp
leave
inc
insl
sbb
ret
das
and
vunpckhpd
push
ds
inc
dec
pop
cmpsb
fsubr
test
loope
rcll
leave
or
cmpsl
lods
imul
rcrl
negl
cmpl
sub
das
dec
and
test
inc
les
xchg
lds
or
and
mov
or
xor
imul
addb
iret
jecxz
sti
rolb
sub
cld
out
cmc
movsb
push
pop
mov
xchg
imul
not
insb
sahf
pop
dec
and
and
aad
jge
cmpsb
push
push
or
dec
ret
mov
xor
jl
lgs
mov
xor
aam
bound
fwait
or
mov
mov
inc
jno
int3
xchg
add
inc
push
out
dec
shlb
ret
push
pop
mov
mov
cmpsl
xchg
repz
adc
xor
addr16
mov
testb
xchg
cmpsl
insl
imul
adc
out
int3
jb
ja
mov
or
into
fistl
cmp
cmpl
out
mov
sub
dec
jecxz
pop
fucom
idiv
test
stc
test
push
push
inc
fidivrl
adc
push
stos
mov
jne
mov
je
sbb
popf
adc
out
dec
mov
ret
add
inc
push
push
out
or
aad
out
cmp
cmp
or
pop
cmpsb
repz
cmp
sbb
jae
xchg
pop
cmpb
icebp
xor
test
sti
negl
mov
xor
icebp
jmp
dec
pop
pop
outsb
pop
lods
sub
cmovs
adc
test
dec
jp
mov
cli
test
std
int
js
fdivrs
xor
sahf
dec
sahf
inc
in
sbb
xor
mov
mov
ffreep
stos
inc
movsb
or
sbb
sbb
adc
mov
imul
pop
xor
lods
rcl
cmc
lods
sbbb
stc
sti
andl
push
in
sub
out
jl
lock
push
lret
mov
xor
addr16
mov
jb
pop
fwait
sub
sub
out
es
cmpsl
movsl
insl
das
adcb
daa
mov
cmp
mov
adc
outsl
jb
sub
shrl
cmp
pop
or
loop
mov
mov
jl
mov
clc
mov
xchg
aam
pop
fdivrs
and
mov
adc
pop
fstl
mov
cli
lret
inc
aad
sbb
and
cmpl
arpl
sub
mov
xor
mov
jae
cmp
movsl
add
scas
cmp
mov
rep
xor
jg
stos
xor
aaa
push
cmpsl
mov
mov
dec
mov
fstl
mov
mov
jl
cmpsb
stos
cli
push
jb
or
aas
cmc
popf
pop
aam
mov
subb
cmpsl
insb
mov
aad
cmc
pushf
lock
ljmp
out
inc
lahf
or
mov
xor
dec
push
mov
or
inc
movsb
push
fnstcw
mov
mov
jmp
ret
xchg
xchg
pop
and
cmpsb
scas
or
leave
lock
cwtl
mov
add
inc
std
mov
or
xorb
push
push
in
stc
sbb
xlat
fsubrs
mov
jg
fsubrl
jle
add
sbb
aad
sti
outsl
icebp
adc
cld
dec
mov
shrd
push
cmp
inc
jbe
ret
iret
xchg
nop
cmp
pop
sub
sub
into
adc
negb
repnz
lret
mov
sbb
scas
or
out
aas
loopne
add
sub
or
jnp
mov
dec
lock
sbb
jecxz
outsl
shl
mov
and
and
fstps
or
mov
jo
mov
dec
mov
sub
inc
cwtl
test
adc
adc
pusha
mov
data16
pop
sub
daa
in
inc
rolb
xlat
sbb
add
addr16
mov
ret
lret
pushf
adc
nop
jl
jg
cmc
gs
lahf
sub
dec
loope
roll
add
add
adc
pop
add
add
and
fwait
addr16
sub
jge
jbe
int
mov
pop
dec
or
dec
test
cwtl
les
sub
and
stos
push
jno
outsl
movsl
outsb
xor
dec
mov
shr
sub
sbb
rcrb
insb
mov
sti
dec
clc
add
jmp
add
outsl
imul
xlat
inc
lahf
lret
add
fimull
into
fcomi
in
addl
je
dec
sub
movsb
stos
lcall
jo
in
cmpsb
leave
inc
push
jp
popa
mov
jecxz
dec
aas
mov
jle
pop
call
in
lea
mov
movsl
in
pop
push
jecxz
push
add
out
or
sub
es
add
out
push
mov
xchg
xchg
das
scas
pop
pop
inc
addl
je
add
mov
outsl
mov
andb
pop
cwtl
push
les
adc
mov
push
mov
fimuls
and
jno
ret
add
testl
loope
enter
aaa
or
mov
loopne
xor
adc
sbb
in
pop
sub
repnz
es
jecxz
adc
rol
xchg
pop
fs
push
adc
popf
xor
ret
adc
or
clc
pop
adc
add
jnp
adc
mov
data16
xor
mov
adc
imul
sbb
add
cwtl
fiadds
sti
inc
daa
xchg
sbb
or
sbb
inc
repz
lods
pop
cld
ret
inc
mov
in
mov
rcrb
into
pop
mov
fildl
and
jecxz
sub
jmp
stc
cmp
aas
pushf
mov
add
clc
jb
adc
push
clc
xchg
push
sbb
xor
not
dec
jo
adc
lods
ret
dec
or
test
xchg
clc
repz
sub
dec
jmp
mov
cwtl
imul
sarb
scas
daa
xchg
sti
ja
xchg
popf
lcall
cmpsb
ljmp
mov
push
in
iret
jge
rolb
sub
pop
adc
push
ja
inc
sbb
pop
add
mov
cmc
and
sub
lds
loopne
push
imull
das
fstpl
cmpsb
data16
mov
fmull
dec
push
inc
imul
cmp
scas
out
insl
pop
mov
push
and
jg
pop
into
test
movsl
xchg
mov
jne
jge
test
pop
pop
pushf
mov
stos
xor
ret
scas
sub
je
jp
xchg
movsl
cmc
dec
shlb
push
cmp
aas
xchg
cld
mull
dec
shll
and
jmp
mov
out
call
jo
insb
inc
add
mov
sub
movsb
and
mov
push
adc
dec
add
inc
test
cmp
sbb
jp
cltd
jge
jae
dec
int3
sub
in
pop
cmp
xchg
enter
call
cmp
pop
jl
lcall
jp
adcl
mov
jne
pop
sub
jg
jne
dec
out
xor
rol
mov
cmp
movsl
and
or
movsl
push
lods
test
sbb
dec
int3
cwtl
cmc
push
mov
popf
mov
fimuls
mov
xchg
xor
imul
das
jns
mov
or
cmp
sbb
stos
mov
pop
sbb
out
cmp
in
sub
hlt
sbb
mov
adc
add
push
or
cmp
ret
in
sub
out
push
cltd
pop
out
dec
fs
sub
mov
mov
or
mov
mov
mov
in
sbb
jbe
inc
aam
dec
mov
sbb
out
inc
data16
add
inc
mov
stos
test
pop
mov
push
daa
or
sub
push
hlt
pop
cld
iret
mov
div
dec
iret
pop
mov
xor
aaa
in
adc
test
xchg
adc
dec
cli
mov
mov
dec
mov
out
mov
imul
insb
xor
xor
mov
pop
push
adc
xor
daa
js
sbb
hlt
pop
imul
insl
pop
lods
lods
add
lahf
lcall
adc
add
jnp
repnz
pop
cs
xchg
push
arpl
xchg
hlt
imul
stos
mov
inc
mov
test
push
addr16
cltd
sbb
mov
fistpl
add
pop
jno
xor
les
out
sbb
test
nop
lods
outsb
sbb
andl
jns
push
push
xor
bound
jmp
cli
dec
push
insb
loop
inc
and
sub
imul
sub
ret
popa
enter
dec
inc
xor
jmp
jns
push
bound
mov
nop
jnp
jno
movsb
sub
adc
and
adc
mov
iret
inc
ret
lods
cltd
and
mov
jno
xor
sbb
push
adc
sbb
test
xchg
into
sbb
test
dec
iret
inc
stos
mov
push
iret
sbb
leave
jbe
cmp
sbb
fcoms
xchg
mov
out
xchg
icebp
pop
push
into
add
lret
xor
adc
gs
lods
arpl
sub
jne
cmc
cld
mov
ret
aam
sbb
xchg
and
popa
push
clc
or
stos
test
cmp
sbb
ret
out
out
sti
es
insl
frstor
fcomps
push
aas
jmp
mov
cmp
jg
pop
into
daa
out
and
cmp
fs
std
out
xor
int3
insl
out
add
sub
inc
insl
pop
or
cmp
or
and
cltd
imul
mov
jae
sbb
fabs
pop
lock
and
pop
roll
out
adc
adc
adc
cmp
inc
xchg
into
sti
fimuls
rorl
out
and
int
fwait
inc
psubq
imul
ljmp
and
sub
mov
adc
dec
sub
sti
sub
add
pop
xor
lods
roll
ud2
shrb
jle
add
jae
andb
and
mov
imul
in
inc
aam
adc
xchg
test
pop
xchg
loope
sbb
dec
push
mov
mov
cli
xorb
cmp
inc
inc
cltd
jo
adc
icebp
pop
sub
enter
cmp
lds
push
outsl
fiaddl
xchg
cwtl
inc
movsb
sub
mov
add
out
mov
jg
mov
inc
nop
xchg
cwtl
jl
mov
mov
aam
out
dec
add
jnp
ret
outsl
cmp
sub
mov
out
daa
popa
in
dec
pop
lock
or
pop
mov
addl
sbbb
sub
in
mov
repz
mov
pop
xchg
addr16
std
adc
mov
cld
xor
or
adc
scas
icebp
mov
ja
inc
jnp
dec
roll
adc
hlt
cli
pushf
dec
mov
inc
mov
ljmp
sbb
ds
jmp
call
das
loop
aam
aad
sbbb
lea
add
dec
lds
repz
cmp
xchg
lods
mov
mov
and
and
lds
cmp
orl
and
pop
mov
in
add
mov
pop
cmc
jbe
mov
rcr
lcall
mov
stos
cmp
or
insb
xchg
jo
jle
loope
subl
scas
cmp
xchg
mov
mov
mov
dec
lds
sbb
xchg
gs
add
sahf
pushf
out
insl
cmp
outsb
jb
fistl
mov
cwtl
push
arpl
mov
or
adc
push
fisubl
std
lcall
and
mov
das
pop
or
mov
xchg
std
sbb
jge
cmp
or
test
lock
js
push
popa
or
in
inc
inc
dec
popf
and
add
repz
in
jecxz
push
cmp
ret
adc
jae
icebp
add
cmp
inc
and
scas
inc
mov
dec
cmc
sbb
jp
pop
jbe
jne
add
sub
cmp
push
push
xchg
test
jl
inc
rcrl
test
je
test
icebp
dec
cld
cmc
outsl
dec
inc
lret
enter
jne
fucom
stos
shlb
ljmp
pusha
fildl
daa
sub
xchg
aaa
es
pop
ret
hlt
jne
imul
pop
push
outsb
les
pop
add
addr16
or
loopne
mov
sbb
adc
or
mov
mov
test
fiaddl
notb
lods
out
rcrl
xor
das
add
cmp
imul
sub
sub
xchg
iret
inc
mov
adc
xor
cmp
popa
leave
loope
imul
mov
mov
out
lods
call
bswap
and
jne
and
jno
adc
mov
xchg
mov
mov
xor
enter
jb
pop
add
unpckhps
cs
lods
call
out
xchg
lock
int
movsb
in
jnp
imul
mov
js
inc
sahf
xor
gs
inc
rolb
dec
dec
push
pop
cmp
push
rcl
push
sbb
cwtl
lods
into
mov
shll
sub
pop
cmp
cli
mov
dec
addr16
mov
repnz
sub
mov
xchg
jbe,pn
imul
std
mov
pop
inc
jp
adc
cmpsb
iret
rcll
iret
fstl
outsl
cmp
repz
dec
mov
mov
sbb
pushf
push
pop
je
mov
push
mov
mov
xchg
cwtl
jmp
xchg
movb
test
jmp
jnp
out
pop
or
popa
cmp
enter
shl
jbe
pop
push
icebp
dec
test
div
jb
jmp
adc
movl
movsl
xor
insb
adc
and
cmp
out
lcall
sub
push
ljmp
sarl
data16
mull
sub
pop
push
mov
xor
sbb
jmp
test
bound
and
xor
lock
mov
ds
test
xchg
stos
dec
add
ljmp
adc
sbbl
cmp
nop
cmp
loope
outsl
mov
scas
dec
sub
nop
inc
out
repz
inc
push
ljmp
fdivs
sub
xchg
int
sbb
sti
push
hlt
hlt
ficomps
in
pushf
xlat
xor
cmp
dec
scas
cmp
xchg
out
cmp
push
enter
mov
stos
dec
cmp
jmp
hlt
mov
test
outsb
sbb
sub
mov
xchg
les
mov
outsl
pop
or
loop
push
mov
sub
lret
pop
test
in
add
mov
shrb
adc
pop
test
mov
cmp
jne
aam
rorb
popa
dec
xchg
add
insb
mov
fnstcw
and
jnp
mov
int
fdivr
or
int
loopne
sbb
dec
cld
jle
xchg
sarb
ret
jno
lret
ret
jb
leave
mov
dec
and
repz
xor
sub
mov
orb
or
das
xchg
enter
rcll
fwait
jnp
ljmp
add
push
mov
xchg
xor
push
add
mov
add
lds
ljmp
daa
popf
data16
inc
cltd
iret
incl
and
or
les
call
xchg
loopne
lea
movsb
add
ljmp
sub
cmp
vpxor
ds
lret
push
stos
test
lock
psrlq
in
xchg
mov
push
sbb
adc
dec
jns
push
enter
mov
dec
mov
addl
stos
mov
push
mov
enter
test
push
mov
sub
sbb
test
cmp
lret
pop
pusha
push
adc
hlt
push
test
cld
test
add
js
orb
xor
test
sub
push
adc
lods
add
mov
les
cmp
adc
movsb
inc
sub
xchg
shrl
insb
pushf
sub
sub
scas
aam
jno
test
inc
aaa
pop
mov
fucomp
ljmp
adc
sbbb
xlat
imul
testl
aam
ljmp
sub
fistpll
xor
or
dec
lret
adc
add
mov
push
sti
inc
aad
push
faddl
enter
shl
hlt
iret
add
jnp
fcmovnu
sub
pop
mov
sub
xchg
xchg
dec
in
push
into
testl
xor
mov
mov
out
mov
jp
push
lods
shrb
pushf
push
mov
mov
mov
int
mov
out
jle
cwtl
pop
dec
cli
mov
adc
lret
mov
clc
pop
out
xchg
mov
cli
mov
shl
out
dec
das
idivb
test
leave
jle
mov
inc
gs
ja
in
xchg
lea
push
mov
repnz
adc
push
xchg
rclb
rolb
stos
sbb
lahf
jne
mov
outsl
jg
mov
lea
jae
data16
leave
mov
dec
mov
sbb
addb
mov
xchg
adc
fistpl
mov
mov
jp
adc
dec
pop
xor
dec
ret
inc
loope
sbb
shll
or
pop
cmp
adc
pop
sub
xchg
adc
loope
xchg
sub
out
data16
add
adc
lds
sub
jecxz
xchg
mov
aam
mov
outsl
sti
push
xchg
sbb
daa
fisubs
pusha
test
mov
mov
lahf
hlt
sahf
lea
dec
outsb
xchg
cmp
push
mov
ret
mov
pusha
mov
adc
out
lods
xlat
push
clc
dec
xchg
jle
push
cmp
push
mov
imulb
or
popa
mov
fxch
and
mov
loopne
idivb
inc
cmp
clc
jo
mov
out
xor
fsubp
xchg
icebp
jnp
andb
paddusw
cmp
cs
push
fcoml
mov
mov
add
cltd
mov
jecxz
lds
ja
ret
sarl
push
nop
loope
insl
cmp
or
and
pop
mov
inc
sub
in
gs
popa
add
lea
mov
ret
sub
or
repz
push
or
push
lcall
xchg
movsl
inc
outsl
fs
shl
or
lods
cmp
push
cld
rcr
cmp
lods
icebp
xor
fiaddl
ljmp
add
outsb
fnstsw
movsb
jnp
cmp
add
lret
aaa
jmp
mov
fcmovu
xchg
sbb
mov
shrl
aad
add
lods
leave
xchg
dec
orb
lret
cld
sahf
jp
daa
fucomi
push
loopne
stos
dec
push
mov
jp
popa
cmp
adc
rol
int
and
nop
loop
shlb
and
jo
pusha
jb
bound
push
xor
mov
mov
loopne
nop
loop
shlb
and
jo
pusha
jb
bound
push
xor
mov
mov
loopne
nop
loop
shlb
and
jo
popa
jb
bound
push
xor
mov
mov
loopne
nop
loop
shlb
and
mov
cwtl
ljmp
shrb
loopne
lock
pop
repz
push
out
push
fsubl
jo
add
adc
shrb
loopne
lock
push
mov
out
push
mov
insb
scas
adc
shlb
loopne
lock
xorb
push
mov
in
mov
mov
inc
in
dec
out
push
mov
cltd
adc
rclb
add
test
push
add
xchg
jecxz
pop
mov
rcll
aaa
xor
scas
and
adc
add
fnstenv
add
shrb
mov
or
push
in
push
adc
mov
xor
inc
adc
dec
mov
enter
and
xchg
test
dec
lret
scas
fsubp
xchg
nop
cmp
std
out
fisubrs
xor
addb
cmp
or
sbb
lret
idivb
into
je
push
scas
adc
and
sahf
inc
outsb
pop
adc
ret
mov
andl
add
cwtl
iret
gs
mov
and
pop
loopne
lock
mov
notb
pusha
xlat
jo
add
pop
or
loopne
lock
in
stc
sbb
arpl
mov
out
push
lods
add
lret
pop
jmp
jle
outsb
mov
test
in
inc
fdivl
dec
aam
or
sub
outsb
fstl
out
jbe
pop
pop
test
xchg
dec
xchg
inc
scas
cs
push
mov
out
push
fisubs
jo
add
xor
outsb
rcrb
dec
lock
push
mov
out
push
fisubs
jo
add
xor
lods
mov
adc
add
das
push
repnz
stc
adc
xchg
lcall
outsb
add
push
shll
dec
inc
and
add
inc
subb
stc
push
push
mov
cmp
mov
cmp
mov
test
jge
shll
test
push
subb
dec
ljmp
adc
push
jmp
fidivs
test
jo
rol
incl
cmp
in
mov
mov
stos
adc
mov
and
xor
int
sub
clc
sahf
stos
xchg
sti
js
mov
cmpl
data16
ficoms
inc
hlt
or
data16
imul
rcll
int
nopl
jmp
mov
dec
dec
iret
fdivrs
mov
cmp
jge
mov
dec
fs
push
pop
and
lea
jo
dec
in
popa
bound
mov
jle
call
test
das
rcrb
mov
fwait
lods
push
sarb
fcomps
das
cmp
mov
jb
pop
in
insl
or
push
pusha
mov
mov
ret
and
mov
insl
add
sbb
mov
out
xor
out
push
repnz
lret
adc
loopne
stos
mov
xor
jno
sbb
leave
scas
lcall
stos
stos
shll
pop
hlt
sub
adc
pop
xchg
jne
dec
add
testl
into
imull
mov
popf
xchg
cltd
and
jnp
lock
dec
arpl
adc
adc
repz
push
jo
loope
jg
iret
cwtl
shll
xor
into
jle
and
jnp
mov
mov
movsb
or
cmpl
or
ret
mov
xchg
mov
outsl
stos
xor
lcall
loop
roll
pushf
cmc
push
dec
or
cli
or
stc
into
add
lds
andb
xor
es
and
push
cli
pop
out
jno
pop
jo
out
test
jecxz
lock
inc
add
or
fs
imul
jb
add
adc
movsb
or
and
mov
jae
push
subl
xor
sbb
cmpsb
adc
or
imulb
aaa
pop
test
lret
push
out
pop
sbb
fnsave
test
sbb
sahf
xor
lret
iret
int
out
test
insb
mov
out
or
pop
xchg
nop
xor
push
cli
or
pop
push
popf
outsb
into
xor
sub
das
fisttps
adc
dec
jge
les
adc
test
and
mov
xor
push
push
addr16
xchg
sub
sbb
mov
dec
fwait
adc
loope
adc
ss
sub
les
out
adc
loope
xchg
xor
pop
jmp
inc
or
rcrb
popf
and
xor
xchg
pop
and
in
mov
into
movsl
sbb
add
fistpll
out
xor
adc
ret
mov
add
and
pop
cmp
pushf
pop
test
dec
or
lret
lahf
sub
sub
pop
mov
lea
in
mov
test
add
mov
add
mov
jmp
clc
add
shl
jno
enter
mov
shll
jle
xorb
pop
phaddw
cmp
or
arpl
and
int3
jg
inc
mov
mov
xor
outsw
push
jno
pop
adc
int
xor
cs
push
out
pop
cs
inc
lcall
adc
cli
pop
lds
aam
std
icebp
or
fs
mov
aas
push
scas
or
jecxz
mov
je
mov
lods
insb
cmp
leave
sub
je
xchg
push
addr16
scas
dec
out
lahf
push
push
scas
jle
sbb
add
in
and
jl
jno
pushf
leave
rcrl
int3
sbb
push
pop
and
rcll
mov
sbb
inc
mov
pushl
jbe
add
in
push
cwtl
push
enter
mov
addr16
push
es
and
inc
pop
mov
push
inc
sbb
pop
sbb
push
pop
add
push
clc
pushf
sahf
pop
jp
jl
jne,pt
sub
clc
mov
lods
popl
lret
add
cmp
int
mov
ret
cmpsl
mov
scas
ja
bnd
imul
cltd
mov
int
js
jnp
mov
pusha
fs
les
dec
push
adc
mov
xor
scas
stos
fs
add
stc
outsl
dec
xlat
cmp
or
jmp
jnp
testb
add
mov
out
stos
adc
cmp
jne
xchg
rcll
fisttpll
lcall
dec
cmp
addr16
in
setp
out
mov
test
mov
in
jno
cwtl
mov
pop
add
inc
xorb
pop
push
fisubrl
pop
mov
movsl
mov
lahf
push
aaa
push
addb
jp
fstpt
xchg
push
or
dec
mov
in
mov
sahf
jo
or
cmpsb
inc
cld
dec
outsb
stc
int
inc
cmc
mov
jns
mov
xchg
shlb
imul
adc
jge
mov
into
fs
pop
mov
and
in
orb
mov
into
jae
sub
inc
sbb
data16
arpl
mov
aam
and
cmp
fiaddl
xor
mov
mov
mov
int
or
and
inc
stos
test
add
scas
sarl
xchg
or
inc
lret
sub
push
nop
push
push
push
sbb
sub
inc
scas
dec
fwait
pop
rolb
in
sbb
or
out
sub
lahf
cli
mov
mov
sti
mov
test
lret
cli
and
sbb
std
aad
xlat
orl
or
clc
repz
ds
sarb
mov
in
inc
popa
movsb
sbb
scas
sti
bound
and
push
clc
jl
sub
sbb
dec
xchg
jns
pusha
pinsrw
adc
inc
xchg
jecxz
call
mov
jge
icebp
inc
add
sub
les
fdiv
movsl
pop
fbstp
xchg
xor
or
shl
leave
pop
cmpsb
cmp
sbb
jle
push
lods
add
cmp
push
stc
ret
mov
lret
mov
inc
lock
fstpl
scas
cmpl
xchg
jg
mov
jbe
fsts
pop
testl
outsl
loope
mov
pop
inc
addr16
mov
cmc
add
int
aas
lahf
mov
lods
mov
mov
in
lret
rolb
out
movsl
and
js
jnp
scas
enter
lods
push
adc
adc
andl
adc
sar
outsl
xchg
jp
adc
popa
repnz
xchg
repnz
lret
jb
fistpl
xor
orl
je
mov
imul
jg
loopne
fnstsw
out
daa
adcl
mov
cmpsl
and
pop
iret
loop
test
xchg
repz
jl
xchg
xor
sub
inc
xchg
cmp
or
sbb
mov
outsl
imul
pop
aaa
gs
dec
lock
aam
adc
js
push
adc
push
hlt
and
mov
dec
adc
or
jns
lock
mov
cwtl
xor
pop
lret
xor
xchg
add
clc
fstps
sub
add
inc
inc
pop
bound
pop
imul
mov
fidivrl
xor
popa
jae
and
mov
mov
xor
jg
mov
xchg
pop
adc
cmp
dec
pop
jno
jne
adc
dec
ret
cmpsb
sbbl
idivl
jg
lds
push
sbb
push
pop
mov
push
mov
sub
fcoms
adc
lcall
cld
pop
pop
jp
into
movsb
rorb
andl
xor
xlat
loop
in
add
iret
mov
jns
test
je
lods
adc
ds
xchg
popf
nop
je
stc
mov
daa
sub
bound
push
ljmp
jo
jmp
insb
mov
dec
jecxz
push
inc
adc
lods
inc
fwait
cs
lret
test
ror
adc
into
dec
test
push
sbb
push
push
test
shr
cmp
bound
cmp
or
add
and
test
lock
pop
dec
or
xor
fsubs
pop
jmp
push
adc
jnp
lods
dec
popa
cmpsl
scas
cmpsl
jb
fiaddl
add
or
mov
roll
stc
pop
cmpl
ljmp
add
adc
leave
je
mov
pop
mov
xor
sarb
push
test
pop
jo
insb
or
test
inc
pop
lods
repnz
mov
xor
cmp
cmp
mov
adc
rcrl
sbb
jns
push
sub
shl
xchg
mov
pop
scas
push
sub
insl
adc
add
sub
xchg
iret
inc
mov
and
jl
aaa
cmp
xor
jg
add
cltd
mov
sub
cmp
and
std
jg
xchg
into
insb
inc
cmp
mov
int
and
cs
mov
sbb
pop
cmp
mov
das
add
int3
leave
jbe
loopne
cmpsb
mov
in
stos
jge
jge
mov
or
lds
lds
pop
aas
adc
sti
xorb
icebp
dec
ss
popa
xchg
xor
test
or
mov
jge
movsb
fistps
shll
mov
inc
lret
xchg
in
push
leave
mov
rclb
mov
or
gs
pop
clc
notl
cmp
mov
push
push
sbb
outsl
into
mov
rcl
subl
or
out
add
mov
xorb
inc
dec
mov
test
in
cmc
movsb
outsb
or
vmread
js
adc
scas
mov
jnp
imul
rorb
test
cmp
dec
icebp
mov
xchg
loop
add
pop
loope
pop
stc
call
mov
in
push
pop
sti
pop
xchg
clc
imul
xchg
or
mov
xchg
pop
inc
iret
mov
rclb
stos
pop
xchg
fbld
mov
arpl
scas
outsb
xchg
repnz
imul
test
in
aas
cmc
lods
fldcw
and
loope
iret
adc
outsl
jl,pt
jne
inc
out
fisttpll
push
scas
lahf
lds
or
pusha
mov
ret
out
sub
mov
sbb
jp
movb
shll
mov
repnz
or
push
dec
bswap
xchg
dec
loope
and
shrb
sub
fwait
shll
jno
stos
sbb
push
inc
iret
lcall
xor
dec
incl
dec
nop
stos
leave
push
rorl
mov
int
pop
add
ss
repz
mov
shlb
push
repz
out
sub
sbb
test
std
stos
pop
scas
add
mov
aas
dec
mov
pushf
jo
and
xor
gs
jge
rcr
xchg
sahf
dec
or
int3
cltd
add
push
xor
inc
jbe
xor
mov
push
xchg
pop
or
mov
jns
pop
cmpsl
push
inc
xchg
stos
dec
cmp
sti
leave
lds
cmp
pop
and
pusha
inc
pop
test
test
sub
jno
sahf
inc
sahf
jns
sbb
mov
inc
mov
shl
inc
adc
adc
ds
das
daa
xor
stos
loopne
mov
stos
enter
inc
jae
mov
add
push
jg
ror
jae
shrb
rolb
rcl
testl
sbb
and
gs
pop
dec
inc
or
push
pop
stos
icebp
xchg
scas
inc
bound
mov
mov
repz
dec
or
cmc
pusha
mov
mov
mov
rcll
test
adcl
or
inc
imul
xor
imul
scas
outsb
mov
sti
js
cwtl
xchg
lods
in
mov
push
call
shrl
push
or
fsubl
sbbl
nop
and
push
jg
pop
cmp
pop
mov
cmpsb
sbb
jl
mov
arpl
inc
push
enter
ret
enter
icebp
insl
sbb
and
scas
xlat
aam
lcall
sub
sub
jmp
dec
xor
rol
test
sub
mov
xor
fidivrs
adc
xor
icebp
shlb
jp
sbb
fwait
lea
outsl
pop
aad
notb
mov
mov
or
add
data16
xchg
dec
mov
cmp
cli
cmp
mov
adc
xchg
ret
into
in
vmovdqa
lods
lods
cmp
mov
mov
and
loop
insb
test
cmpsb
lret
inc
out
or
mov
test
lcall
sarb
and
insl
xchg
ds
int
aad
shll
inc
or
scas
int
push
sbb
sub
addr16
jnp
out
imul
xor
stc
mov
icebp
adc
cmpsl
push
into
cmp
sbb
mov
mov
or
in
roll
xlat
mov
insb
sub
out
adc
fisttpl
mov
outsl
cwtl
mov
stos
push
incb
outsb
scas
cmpsl
cmp
cmc
pushf
mov
mov
pop
lcall
adc
ret
jo
push
pop
dec
push
xchg
sub
pop
fisubrs
mov
mov
in
xor
sub
popa
mov
test
inc
fcoms
sbbl
push
les
pop
mov
in
add
jmp
jmp
pop
sbb
ficomps
sub
mov
push
mov
test
in
cmpsl
push
cs
mov
sbb
xor
repnz
test
loop
fmul
icebp
loop
fdivrs
rcl
and
xor
imul
mov
int
cwtl
test
sub
lds
outsl
cmc
cmp
shll
mov
iret
pop
inc
xchg
in
mov
inc
dec
mov
scas
xor
pushf
lock
loope
sti
sbb
pushf
mov
jo
add
lock
xchg
shlb
push
jecxz
roll
lahf
add
popa
dec
popf
inc
and
cmp
data16
push
cwtl
mov
mov
mov
add
repz
cltd
lods
int3
stos
divl
inc
stos
imul
add
arpl
xorl
or
or
xchg
mov
incl
jge
jb
out
lahf
out
mov
pusha
mov
and
xchg
inc
arpl
jl
add
test
sahf
and
std
retw
outsl
hlt
pop
jns
cmp
aaa
fadds
sbb
pusha
in
pop
cmp
inc
adc
imul
pushf
orl
ficoms
flds
sub
mov
or
push
inc
lret
pop
cwtl
sub
shrb
mov
mov
inc
and
and
mov
divb
fisubrl
aas
adc
xchg
cmp
fsubrs
pop
jmp
ret
lret
cwtl
pop
sarb
scas
ss
inc
loop
sbb
pop
hlt
cmp
push
pop
pop
jl
or
inc
jno
movsb
lret
and
test
shll
cmpsl
leave
xor
decb
movsb
push
inc
call
popf
data16
jge
mov
push
dec
jmp
push
insl
or
rcrb
and
push
lods
movsl
loopne
mov
in
jns
aam
xor
xlat
or
in
clc
out
stc
or
jecxz
shlb
test
dec
in
gs
lahf
mov
add
pop
or
lds
movsb
loope
inc
ret
xlat
lret
fnstcw
adc
sub
push
sub
jbe
mov
lcall
int3
addr16
push
dec
mov
jb
push
or
insl
mov
jno
cmp
into
xchg
pop
repz
fs
pop
fstpl
adc
in
rorb
xchg
ds
fnsave
cmp
jg
call
icebp
mov
and
int3
dec
mov
pop
push
lret
cmp
fdivl
loop
orb
scas
ss
shrb
mov
icebp
push
mov
mov
inc
fdivrl
aam
push
lret
add
jp
imul
ret
out
xor
or
jle
xchg
jnp
push
pop
cmpb
pop
sub
xor
leave
sub
or
fwait
xor
dec
js
mov
into
js
data16
adc
push
xchg
jp
pop
aas
and
scas
dec
mov
test
xchg
popa
nop
lret
sub
leave
addr16
xor
pop
stc
test
xchg
sbb
mov
add
xchg
mov
out
and
dec
inc
out
mov
xchg
aaa
xchg
aad
mov
jl
pop
add
hlt
insl
stc
int
lods
ror
adc
stos
in
inc
popf
mov
mov
lret
addr16
adc
test
adc
rcll
cwtl
adc
add
cmp
add
nop
jbe
lds
xchg
ja
movl
jnp
outsl
xor
mov
mov
idivl
int
inc
ret
loope
mov
int3
or
andl
cmp
push
push
cli
cmp
pushf
jmp
fcoml
shl
or
orb
mov
js
aam
out
leave
jecxz
mov
mov
iret
add
pop
adc
leave
mov
fildl
or
pop
add
neg
dec
xlat
mov
das
push
hlt
mov
cmp
adc
sub
cmp
int
jae
xlat
outsl
cmpsb
sbb
xchg
add
mov
push
movsb
xor
cs
jl
es
jo
mov
lret
inc
jbe
add
mov
mov
add
inc
cmp
ds
adc
push
and
aam
xor
pop
das
mov
xor
out
je
test
or
aam
movsb
pop
fs
xchg
pop
lcall
subl
xchg
callw
sbb
jb
shl
jo
int3
push
mov
hlt
stos
adc
mov
rorb
loop
sub
push
add
ljmp
jg
lret
adc
jmp
ds
xor
mov
mov
cld
push
fistps
outsb
insl
pop
ret
push
jne
daa
mov
cwtl
ds
xchg
inc
fldl
inc
dec
gs
insl
ret
cmovl
fnstsw
fists
leave
push
sti
mov
jbe
dec
push
test
push
jns
pop
orb
subb
jmp
shlb
insl
xchg
adc
aad
mov
inc
cmc
add
fwait
inc
fwait
jge
inc
imul
or
fimull
pop
mov
stos
in
pop
sub
cmpsb
push
jae
cmp
and
xchg
stos
lea
mov
push
sti
mov
or
setl
push
xchg
call
push
scas
in
fldt
jne
mull
adc
idivb
pop
int
lea
add
cmp
insb
arpl
mov
mov
ljmp
or
inc
and
sub
adc
popf
mov
into
mov
dec
adc
cmp
gs
imul
inc
pop
cmp
mov
xchg
je
mov
adc
push
xor
cmp
lods
pop
jb
xchg
cli
int
daa
jo
testl
mov
lods
dec
xchg
jne
lret
ds
nop
add
cmp
arpl
ss
pop
clc
movsb
cmp
inc
cli
mov
ljmp
dec
mov
jg
jne
and
icebp
mov
inc
mov
sbb
rcll
jmp
pop
idivl
cmp
shl
mov
pushf
insl
out
aam
jl
scas
pop
inc
bound
lods
mov
fnstenv
mov
lret
push
mov
into
xor
dec
mov
or
pop
or
test
cmp
inc
mov
addb
aam
cmpxchg
loop
cs
mov
add
xor
out
filds
dec
sahf
pop
fbstp
ss
jmp
push
repz
ljmp
mov
push
testl
adc
movsb
add
lods
cmp
xchg
mov
stos
mov
and
cmpsb
mov
gs
addr16
add
or
popa
cmp
push
mov
mov
lock
xor
outsl
push
in
xchg
aam
das
push
test
imul
mov
jp
gs
cmp
add
jne
lods
call
add
jb
ljmp
pop
pop
xchg
mov
or
mov
into
add
sarb
push
xchg
cltd
xchg
jbe
ss
inc
sti
rcrb
repnz
add
int3
pusha
std
sahf
rcrb
loopne
lock
push
mov
out
push
fisubs
jo
add
xor
outsb
rcrb
dec
lock
push
mov
out
push
fisubs
jo
add
xor
outsb
rcrb
dec
lock
push
mov
out
push
fisubl
jo
add
xor
pop
shrb
dec
lock
sahf
mov
adc
je
into
pop
leave
mov
out
popa
fbstp
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
push
jg
leave
dec
decb
push
shl
lret
sahf
fst
xchg
or
push
add
add
or
pop
add
add
add
add
add
add
add
add
add
addb
add
add
or
add
enter
or
add
add
das
push
addb
add
add
pop
sbb
xchg
add
add
add
add
dec
add
add
add
add
add
int
mov
add
add
add
add
lahf
add
inc
add
scas
add
pop
add
int
repz
mov
add
adc
jbe
aam
dec
add
add
add
lret
add
add
add
add
or
cmp
mov
add
aam
les
movsb
add
add
addb
add
add
push
add
add
add
add
sub
add
add
add
add
add
add
insl
add
push
xor
xchg
and
mov
sti
add
add
add
push
das
add
daa
add
add
mov
add
popl
xchg
add
xchg
add
inc
add
call
add
xchg
add
add
add
imul
testb
add
aas
add
add
add
add
daa
add
add
add
scas
add
nop
add
sbb
and
xchg
jge
or
mov
add
add
add
add
mov
add
insl
add
add
add
inc
add
add
mov
add
add
mov
verr
add
aam
jns
je
stos
add
call
push
movb
and
insl
add
add
add
mov
inc
add
add
add
xchg
addb
push
xchg
rolb
mov
add
add
add
add
call
add
add
jo
mov
in
jbe
test
jb
inc
add
add
push
mov
add
push
mov
add
add
add
pushf
add
add
add
add
add
add
movsl
add
add
add
inc
add
call
add
add
verw
das
add
add
add
cmpsl
add
add
add
add
add
add
add
mov
add
add
insl
add
inc
add
dec
add
add
sti
add
add
add
xor
add
add
add
add
add
add
lahf
add
add
add
mov
dec
add
mov
add
add
lret
add
add
add
add
add
add
add
and
mov
add
add
call
add
add
fs
add
add
add
add
add
add
push
in
jno
rolb
sub
call
add
add
add
push
mov
add
add
sahf
add
add
add
add
add
loop
mov
add
js
add
mov
add
add
add
add
add
lcall
add
pop
add
sbb
adc
pop
add
xor
add
push
cmc
pop
dec
mov
mov
mov
cmp
mov
fsincos
rcl
xchg
mov
mov
sub
jg
mov
daa
pop
fs
xor
ss
aad
cmp
subb
xor
lock
pusha
cld
scas
shll
test
out
pusha
sub
cs
out
sti
cbtw
push
imulb
push
mov
popf
cmp
sub
dec
in
add
jnp
fs
sub
icebp
in
imulb
mov
cmp
lods
movsb
loop
out
xchg
pop
push
and
dec
clc
xor
mov
inc
xchg
loopne
jecxz
div
aas
in
mov
xor
cmp
pop
movl
adc
add
mov
pop
xor
pop
in
push
push
arpl
movb
adc
adc
and
stos
cmp
xor
mov
mov
aaa
aaa
adc
or
fcompl
lea
mov
testl
adc
sub
aam
je
test
int3
das
int3
inc
lods
or
fwait
shll
fdivl
xchg
cmc
test
add
jg
ja
xchg
insb
das
pop
loope
inc
jnp,pt
pop
xor
or
in
lahf
ljmp
mov
pop
push
dec
imul
mov
loopne
adc
fwait
das
and
mov
push
scas
aaa
lret
sbb
adc
std
push
divb
mov
leave
mov
lret
xchg
add
in
dec
pop
pop
imul
mov
test
divb
xchg
jmp
shlb
sti
das
jns
pop
sub
cs
push
jo
es
and
inc
jnp
cwtl
dec
or
jbe
aaa
shrb
add
mov
xchg
xlat
jecxz
xor
stc
jge
loop
jb
ljmp
xchg
cmp
sbb
or
cmc
test
push
mov
aas
mov
ftst
scas
push
fisttpll
int3
lock
sub
popa
rcrl
jmp
lock
or
sbb
imul
dec
mov
mov
pop
fiadds
xchg
movsl
mov
adc
xchg
aad
or
add
fwait
das
sub
mov
pop
or
test
inc
xchg
and
dec
outsl
in
sti
add
xor
sub
popf
fsubrs
or
daa
call
lock
sub
nop
jecxz
cltd
das
jecxz
aas
add
push
mov
jne
imul
ds
adc
inc
add
jle
pop
jecxz
mov
inc
arpl
jo
mov
pop
cli
jl
inc
push
jno
dec
pusha
cmp
call
dec
adc
or
mov
jnp
pop
add
or
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
