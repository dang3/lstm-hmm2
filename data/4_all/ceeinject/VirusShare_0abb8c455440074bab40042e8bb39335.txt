call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
inc
cmc
cmpsl
sbb
sub
cmp
ss
and
lahf
xchg
scas
mov
out
cli
cli
pop
or
sbb
sub
cmp
pop
pop
outsl
push
jp
mov
mov
out
ljmp
test
push
pop
inc
inc
jb
pusha
leave
mov
cwtl
mov
aas
jae
pop
dec
mov
movsl
sbb
mov
scas
xor
adc
lcall
push
dec
pop
pop
mov
mov
repnz
bound
mov
dec
outsb
ljmp
das
jne
pop
sbb
pop
sbb
inc
xchg
iret
punpcklbw
push
inc
aas
xor
push
ficompl
mov
sbb
push
dec
push
lcall
int3
gs
cltd
frstor
mov
loop
rcl
fidivl
cmp
jnp
pop
iret
lcall
fists
ljmp
shrb
lcall
push
xchg
ja
mov
stos
dec
cltd
fildll
cmp
pop
or
dec
dec
sbb
jae
arpl
or
mov
out
ljmp
imul
cmp
sbb
xor
push
push
pop
out
jecxz
loop
cmpsb
cmpsl
mov
fwait
ljmp
push
cmp
push
mov
fdivrp
lret
stc
mov
xchg
jg
dec
jle
or
pop
pop
outsl
push
jp
mov
mov
out
ljmp
das
sub
cmp
pop
pop
outsl
push
jp
mov
mov
out
ljmp
xchg
pusha
sub
ja
aas
sbb
mov
pusha
mov
mov
repz
push
movsl
rolb
lods
shr
xchg
lret
fnstenv
adc
adc
outsb
adc
lock
pop
orb
mov
cmc
sti
insl
push
out
mov
pushf
clc
xchg
sub
lods
sbb
sti
jl
xor
adc
aas
jmp
mov
pushf
add
negb
push
shlb
fs
shlb
lea
jae
es
sbb
xchg
add
je
jge
ret
adc
pop
mov
dec
inc
push
cli
pop
mov
cmp
gs
sbb
push
inc
mov
xchg
push
xor
in
mov
inc
push
loope
xchg
sub
out
inc
rcrl
cwtl
push
aas
and
add
cmpsb
clc
jnp
mov
in
inc
push
daa
aas
bound
fwait
mov
xchg
insb
loop
dec
jae
push
dec
aaa
rorl
ficoms
push
add
sbb
mov
xchg
cld
push
inc
push
cli
mov
or
filds
cs
loopne
leave
jp
adc
adc
shrl
dec
outsb
push
pusha
push
adc
adc
orl
cmp
js
and
sbb
push
js
inc
loop
push
hlt
jns
hlt
push
jecxz
test
adc
cmc
pop
loop
mov
pop
dec
mov
or
mov
scas
mov
inc
dec
scas
adcb
jp
mov
ja
sub
arpl
pop
pop
pushf
repz
pop
sbbl
imul
lea
pusha
lcall
imul
add
xor
add
mov
pop
xor
dec
sub
jl
call
imul
shlb
mov
gs
mov
mov
dec
adc
movsb
ret
mov
jo
jae
aam
adc
test
cltd
sub
test
in
mov
xchg
jge
dec
cmp
loopne
fdivr
jns
pop
sahf
stc
cmp
pop
sub
lret
fiaddl
mov
add
popa
sbb
inc
cwtl
sarb
sbb
fidivl
rcrb
or
cli
push
sub
lcall
adc
xor
mov
adc
stos
mov
xchg
popf
mov
jp
enter
push
or
push
mov
fnstsw
and
aam
cmp
sbb
pop
jp
out
xor
or
pop
leave
jl
fstl
enter
popa
xor
into
cmpsb
sbb
bound
movsl
mov
rol
bound
mov
loope
cmc
lret
imul
data16
cs
add
or
shrl
push
loopne
cmc
movzwl
scas
lds
push
jns,pn
mov
rcrb
repnz
and
addr16
xchg
cmpsb
dec
xor
dec
in
dec
incl
lcall
enter
movsl
shll
dec
rcll
lret
xlat
xlat
std
xor
cmpb
xor
call
jo
jecxz
repnz
mov
cs
mov
mov
or
test
dec
sbb
mov
mov
xlat
mov
js
push
cltd
sbb
cmp
xor
popa
out
push
jb
pop
in
dec
in
add
adc
mov
jno
sti
ficoms
in
pop
iret
mov
aaa
lret
pop
js
mov
lahf
push
mov
push
mov
push
pop
xlat
push
xchg
xor
std
jg
jbe
push
jge
add
or
xchg
cmp
inc
mov
arpl
cmpsl
cmp
push
sbb
cmp
mov
clc
xor
inc
mov
jmp
xchg
nop
pop
inc
jecxz
sub
ja
cmc
fcoms
pop
cmovns
mov
inc
cwtl
push
add
adcl
bound
pop
int
lahf
clc
sub
lock
mov
push
pusha
pusha
sahf
mov
loop
mov
pop
data16
pushf
mov
and
push
push
cmp
notb
jge
cmpsb
push
das
xor
pop
std
mov
mov
jge
jp
push
ljmp
xchg
push
aas
xchg
push
and
dec
outsl
popa
and
sbb
arpl
add
inc
adc
notb
lock
add
imul
add
jmp
inc
nop
popa
dec
pop
jne
add
sub
mov
imul
outsb
je
pop
dec
cmpsb
or
sub
mov
mov
xchg
popf
lahf
add
mov
sub
out
mov
xor
sbb
pop
jmp
mov
mov
cmp
sbb
cmpsl
or
adc
mov
push
push
jge
xor
rcll
popf
xchg
xchg
push
cmp
pushw
adc
mov
sbb
xchg
jle
mov
loopne
jp
jge
jne
xchg
or
outsb
add
adc
dec
xchg
pop
jae
enter
inc
cmp
insl
mov
idivb
nop
icebp
neg
scas
sub
in
cmp
xor
and
hlt
fadds
fnstcw
cli
dec
repnz
icebp
add
pop
jmp
push
jns
add
inc
jb
jo
inc
inc
pop
jge
mov
jne
gs
and
mov
or
push
insl
je
loopne
xchg
dec
push
lods
je
xchg
out
out
mov
movsb
and
sti
divl
pop
push
dec
pushf
notl
cmpb
sub
fwait
lds
xlat
frstor
mov
stos
je
pop
lcall
push
adc
inc
sbb
loop
in
xor
and
or
and
add
lea
xor
rorl
shll
add
scas
sahf
xor
loope
ret
dec
pop
mov
cwtl
add
loopne
es
dec
dec
push
push
pop
sbb
mull
push
adc
inc
mov
pop
loopne
stc
xchg
mov
xchg
xchg
ljmp
pop
test
inc
push
and
mov
mov
and
lock
push
jge
xor
dec
jmp
push
mov
cmpsl
ja
jbe
xor
push
int3
xor
and
ret
mov
fisttpll
or
inc
xor
mov
stos
inc
or
add
push
xchg
push
imul
in
cld
and
add
loopne
push
sub
sub
fsubrl
loop
or
pop
and
lods
sti
mov
shl
sbb
in
or
xor
jns
test
sbb
cltd
push
int3
ficompl
shrl
inc
sahf
nop
rcrb
int
push
mov
fdiv
cmc
xor
iret
xor
fwait
push
adc
jg
push
add
mov
lahf
sub
adc
mov
add
imul
adc
mov
lods
loop
fmuls
stc
inc
or
xor
push
jge
cmpsb
jl
fldenv
outsl
bound
adc
ljmp
sar
inc
out
out
push
jbe
xchg
mov
sarb
dec
cmpsl
les
hlt
fidivrs
push
ds
cmp
push
xor
sbb
ficomps
inc
rcl
mov
mov
or
dec
imul
out
mov
stos
dec
ds
xchg
pop
jmp
cmpsl
pop
rcll
push
fstl
mov
mov
jg
in
dec
mov
subb
fcomi
and
inc
mov
mov
xlat
sbb
rol
adc
roll
subl
inc
loopne
insb
leave
mov
dec
push
xor
ret
subl
or
iret
add
xchg
push
scas
sbb
lahf
stc
jg
fadd
add
testb
and
ret
adc
xchg
dec
shl
jg
nop
mov
cmpsl
mov
loop
sub
ljmp
and
push
xchg
dec
sbb
std
fdivrl
pop
add
xchg
mov
dec
sub
test
lcall
icebp
jge
fsubs
inc
or
xor
insl
rcrl
les
or
out
cmp
or
pushf
xchg
scas
jns
mov
lods
mov
in
cmp
and
shl
scas
xor
aas
sbb
xor
jbe
push
push
mov
adcl
mov
mov
cwtl
add
ret
push
inc
daa
popa
jg
or
and
dec
lcall
xor
out
mov
lods
stos
and
push
lods
jmp
fimuls
jbe
fimull
insl
push
push
cmpsl
push
mov
add
fdivrs
xchg
inc
idivb
daa
push
in
mov
mov
and
sbb
jae
mov
fnstsw
ret
mov
out
iret
add
movsl
jecxz
and
cmp
push
mov
cli
adc
mul
mov
sub
xabort
jle
mov
rcl
push
sub
xor
ds
xchg
mov
pop
in
push
jbe
loopne
cmpsb
jl
pop
mov
scas
fwait
mov
pop
jl
xor
bound
jno
adc
xor
sub
xchg
js
or
test
pop
lock
push
lods
dec
daa
mov
test
popa
shl
movsl
shll
dec
fildl
outsl
xor
xchg
std
mov
mov
dec
aaa
into
and
fwait
jge
dec
sarb
jae
dec
fsts
xchg
les
push
mov
jnp
push
mov
out
dec
bound
leave
mov
mov
out
dec
sbb
jle
mov
outsl
pop
dec
mov
jle
jbe
int
movsl
mov
and
xchg
and
mov
mov
call
arpl
call
or
jl
sub
add
inc
aaa
mov
mov
push
insl
and
xor
xchg
jg
jnp
push
shll
inc
addr16
repz
cmp
pusha
test
jno
cmpsl
clc
jp
fisubrl
movsb
das
or
popf
ja
jno
fisttpll
xchg
cmp
gs
stos
or
jmp
lods
pop
in
xor
nop
or
mov
jmp
bound
lcall
pop
adc
xor
mov
add
fsubs
movsl
aad
repnz
and
dec
adc
stos
shrb
sti
ss
xor
fcoml
ret
xchg
push
and
cmp
gs
shll
pop
xchg
js
push
outsb
dec
xor
fdivl
sub
jb
insb
adc
mov
test
add
repz
pop
fs
add
cltd
aam
arpl
es
lds
in
nop
and
inc
sbb
cmp
loopne
adc
cmovne
out
iret
mov
daa
stos
dec
mov
fisubrs
lahf
dec
or
xchg
sti
cmc
mov
and
fs
sbb
lret
inc
xor
ljmp
lods
lods
mov
pop
push
je
mov
imul
xlat
push
pop
mov
sarl
scas
sub
ljmp
scas
push
push
sub
xchg
cmp
int
and
mov
sub
dec
dec
cld
jmp
fimull
popf
rorl
xchg
push
cmp
ss
and
xorl
pop
stc
push
loop
pop
movd
adc
mov
iret
pop
jnp
mov
adc
rolb
outsl
push
in
add
pop
mov
jb
xor
jnp
inc
pop
push
lahf
rol
imul
pop
bound
mov
fcomps
out
lcall
and
adc
mov
push
repz
mov
les
xchg
mov
stos
or
pop
push
or
sbb
jge
aaa
clc
push
jecxz
loopne
dec
mov
xor
xor
cmp
loope
jecxz
lahf
push
cmp
xchg
imul
fisubrl
movsb
fwait
mov
repz
je
imul
sub
fimull
out
xchg
mov
pushf
jge
mov
imul
jbe
sahf
push
jo
mov
test
shl
fs
movsb
shlb
loope
jb
arpl
pop
add
hlt
js
cmp
mov
lahf
and
outsb
sbb
and
push
mov
nop
mov
jge
pusha
imul
mov
inc
stos
mov
jnp
dec
push
stc
das
cld
pop
jb
addr16
cmp
negb
pop
sub
repz
addr16
into
xchg
into
mov
mov
mov
in
leave
xchg
out
arpl
or
xor
dec
rcrl
sub
idivl
mov
fidivl
xchg
pop
enter
test
sbb
cli
xor
cmc
cwtl
andb
xchg
jne
shr
cmp
test
test
add
xchg
jne
jns
lret
popa
sub
aaa
pushf
lods
pop
jl
nop
xor
shlb
dec
dec
insl
imul
popl
stos
inc
leave
jbe
test
xor
iret
out
stc
push
std
cs
stc
push
jae
mov
mov
arpl
pop
cmc
xor
stos
xor
adc
dec
sub
pushf
adc
push
jl
adc
push
nop
fimull
xchg
cmp
xchg
pusha
les
jnp
jbe
push
cmp
mov
mov
xor
xchg
push
pop
dec
push
cs
mov
push
fcompl
orl
or
ret
rorl
xchg
in
mov
and
cmp
and
shll
loop
cmp
into
inc
push
sti
sub
data16
jecxz
rorb
lret
test
lods
push
mov
dec
jno
lcall
insl
popf
aaa
dec
dec
pop
leave
lea
lds
popf
roll
testb
sbb
xchg
sahf
jno
sub
scas
and
jp
loop
mov
or
cmp
or
or
push
pop
shrl
or
mov
mov
dec
mov
jno
push
insl
xlat
and
rorl
call
out
push
in
idivl
jno
fdivl
jno
xchg
ror
dec
cmc
divb
push
jp
push
inc
pop
push
loop
int
push
outsl
mov
jne
or
lock
scas
das
pop
fsubs
mov
gs
shrl
out
xor
sahf
test
aaa
xchg
cmp
mov
xor
mov
and
cmp
adc
iret
jp
xor
mov
mov
test
out
pop
sub
cmp
inc
jg
sub
mov
mov
aad
jae
xchg
mov
push
repnz
add
outsl
insb
es
cmpsl
fnsave
inc
mov
fnstcw
lods
test
dec
cmpb
add
inc
or
iret
negb
xchg
or
cwtl
mov
mov
mov
jecxz
inc
mov
cmp
arpl
ret
out
sbb
xchg
sysexit
jbe
inc
mov
lods
inc
lods
push
outsl
in
mov
mov
popa
ds
icebp
dec
inc
xor
pop
loopne
lahf
pop
inc
mov
aas
mov
jne
test
loopne
pop
testb
rcrl
dec
jmp
xchg
xchg
fildll
cmp
js
neg
push
sahf
mov
into
mov
cmp
int
shrb
cmp
and
inc
and
gs
dec
push
sbb
out
test
jmp
or
and
fs
mov
jo,pt
leave
cmp
jo
or
scas
dec
iret
lahf
das
cltd
in
cmpsl
fucomip
mull
pushf
push
inc
mov
or
emms
ficomps
xor
sub
xor
test
int3
xchg
out
mov
addl
int3
or
stos
jns
jl
sbb
sub
insl
call
jg
cmpl
jae,pt
xchg
fmulp
mov
xchg
mov
test
pop
mov
add
in
or
push
mov
jne
cmp
dec
es
xchg
jp
mov
stos
jb
or
std
std
adc
add
xor
outsb
mov
xor
int3
out
jnp
push
je
ss
icebp
out
xlat
inc
in
loope
loope
pop
sbb
sbb
xlat
pushf
leave
lret
ja
into
fcmovu
enter
test
sub
mov
mov
rorl
cmc
mov
xchg
push
xchg
lods
sahf
leave
and
cmp
out
cld
in
pop
push
pusha
test
xchg
jno
add
test
fsubl
mov
mov
je
mov
fcmove
push
movl
hlt
or
mov
test
push
jg
into
movsl
jnp
sub
xchg
xchg
outsl
lret
or
adc
arpl
in
in
fs
or
outsb
push
adc
hlt
repnz
shl
cltd
outsl
pusha
mov
int3
test
and
cltd
inc
stc
xor
push
outsb
jge
aaa
arpl
mov
cmpl
ret
data16
adc
int3
and
aam
cmpsl
xchg
stos
xchg
into
popa
push
sub
or
adc
scas
divb
inc
mov
adc
mov
cmp
jmp
cmp
lahf
cmpl
mov
pop
andl
loope
sub
shrl
xor
stos
es
pop
sbb
push
or
decl
sbb
sub
gs
in
in
inc
push
and
dec
inc
sarb
shrb
or
dec
sbb
mov
xchg
mov
lock
sub
and
mov
inc
movsb
pop
adc
adc
jno
adc
fcoml
mov
mov
orb
sahf
cmp
pop
pusha
je
cwtl
dec
out
xchg
rorl
pop
shll
dec
test
dec
jecxz
push
adc
pop
loope
push
inc
clc
pop
push
ffreep
xor
cld
int
js
adc
mov
in
cwtl
mov
fs
push
bound
mov
repnz
hlt
xlat
and
and
mov
aam
mov
pop
or
sub
dec
add
mov
int3
es
loopne
loope
jl
or
sub
out
cmp
mov
or
std
imul
aad
add
and
scas
push
dec
or
push
fwait
sub
mov
and
push
xor
mov
xchg
pop
add
jge
jae
icebp
mov
shrb
jle
push
jle
loopne
fnstcw
xchg
xlat
lea
jge
in
jmp
ret
bound
and
or
out
out
mov
lcall
rclb
dec
cmp
dec
mov
inc
sub
mov
sbb
stos
sub
mov
jmp
mov
cmpsb
int3
daa
insb
dec
lahf
das
inc
pop
movsl
ss
push
mov
xor
push
stos
rcrl
jl
lret
dec
rcll
add
negl
jge
and
xor
pop
sub
ss
mov
loope
loop
sub
test
in
clc
mov
out
lock
xchg
inc
stos
int
or
imul
out
jo
inc
sbb
jge
aaa
add
cmp
or
das
cli
imul
lea
sti
adcl
scas
jno
in
xchg
xlat
push
pop
cmpb
call
jl
hlt
stos
fwait
icebp
andl
mov
jp
cltd
aaa
fstp
xchg
push
iret
sub
cmp
sbb
popa
pop
push
shrl
into
xor
add
ret
sub
add
les
push
loope
ss
push
push
jmp
test
hlt
fildll
pop
sbb
pusha
leave
std
xor
je
gs
out
daa
int
xorl
fwait
addr16
jle
jbe
mov
cli
fs
sti
push
cltd
xor
push
loopne
ret
sub
loopne
ljmp
call
and
jg
mov
rorl
sbb
push
stc
mov
sub
push
je
sbb
mov
dec
push
or
pop
int3
das
loopne
pop
jle
sub
insl
notl
cld
jnp
and
sub
cmpsb
fcompl
xchg
dec
push
mov
push
aas
sbb
cltd
ret
das
setne
cmpsl
jo
sub
pop
test
lods
xchg
xchg
out
fisubrs
cli
imul
jns
cmpb
cmp
and
xor
pop
jnp
jp
loop
negl
out
pop
cli
push
lea
mov
pop
das
jl
or
or
jecxz
add
icebp
xchg
fisubl
push
or
cmp
ret
scas
stos
pop
mov
jnp
jns
sub
cld
sub
or
jp
stos
call
push
push
inc
push
add
in
dec
je
nop
add
cltd
les
test
jo
movsb
popf
stos
cltd
cmp
xor
mov
popl
aam
push
lds
pop
repz
mov
cmp
xchg
jae
mov
repnz
out
lods
movsl
mov
test
pop
pushl
mov
and
sbb
jecxz
jbe
xor
jecxz
push
jbe
xor
cmp
jecxz
cmp
rorl
bound
test
mov
push
jmp
and
mov
lock
daa
xor
add
jg
sbb
jl
mov
repnz
lea
mov
fstpl
lods
test
cmp
jl
insb
cmc
dec
xor
dec
enter
xorb
fcomps
add
test
and
shll
cmp
pop
pop
outsl
push
jp
mov
mov
out
ljmp
das
sub
cmp
pop
pop
outsl
push
jp
mov
mov
out
ljmp
aas
sub
cmp
pop
pop
outsl
push
jp
mov
mov
jmp
iret
cli
pop
or
sbb
dec
dec
pop
outsl
push
jp
mov
add
inc
push
and
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
push
inc
add
sbb
fs
adc
into
hlt
xchg
nop
test
mov
movsl
push
push
inc
inc
je
fs
add
xor
and
aam
lds
mov
movsb
movsl
push
repz
xorl
adc
add
xor
and
aam
out
xchg
lret
out
cli
lret
adc
es
add
cld
mov
pop
push
cmp
mov
pop
dec
xchg
mov
dec
in
fists
xchg
add
fisubl
sub
cmp
popa
mov
adcb
lods
cmp
in
xchg
dec
stc
adc
jle
aam
aad
hlt
mov
xor
or
bound
push
inc
inc
add
gs
adc
lret
test
push
aam
jns
ret
sub
mov
cmpsb
fldcw
mov
es
xor
idivb
xchg
in
insl
adc
push
out
sub
add
lret
inc
scas
and
xchg
vpmacssww
pop
int3
iret
or
inc
gs
fs
add
xor
and
aam
les
mul
fsts
movsb
xchg
adc
sub
sbb
or
dec
push
xchg
xchg
shlb
shr
ljmp
add
add
push
inc
push
push
mov
mov
cmpsl
mov
test
shlb
sbb
pop
add
xor
and
aam
in
xchg
xchg
test
push
push
inc
inc
je
fs
add
xor
and
aam
in
xchg
xchg
test
push
push
loope
iret
or
into
jb
or
pushf
cmp
mov
fs
sbb
in
cmp
adc
rorl
dec
push
frstor
inc
in
pop
lods
mov
inc
lods
add
scas
jb
imul
add
pop
push
mov
cmpsb
sbb
lret
jg
sti
loopne
inc
mov
es
ret
mov
cltd
fimuls
fildl
dec
stc
test
lea
out
sub
dec
icebp
sbb
or
mov
jmp
pushw
call
mov
sub
pop
inc
movsb
arpl
loopne
or
fsubl
push
inc
dec
daa
xor
push
ds
mov
dec
lea
inc
jns
inc
dec
mov
es
or
xor
sub
test
push
and
icebp
sub
cmp
in
mov
testb
inc
shlb
ljmp
es
ds
arpl
mov
hlt
bound
cwtl
shll
or
mov
push
sbbb
cwtl
es
dec
xchg
pop
bound
xor
scas
push
aad
mov
sbb
daa
xchg
adc
cmp
cwtl
andl
pop
enter
mov
sahf
lods
fs
push
and
insb
sbb
dec
scas
insl
mov
add
adc
push
jo
jge
jmp
je
push
lock
mov
pop
ds
push
repnz
sub
inc
cmp
and
data16
xchg
das
ret
pop
test
dec
insb
push
daa
add
and
ljmp
inc
push
outsb
pop
mov
xchg
or
mov
sub
ror
bound
lods
divb
cmp
andb
lds
gs
cmp
fldt
xor
or
rorl
pop
stos
ds
pop
out
fildl
fisubrs
dec
jns
pop
lcall
and
fmuls
pop
mov
cwtl
pusha
mov
insl
push
xchg
xchg
leave
int3
bound
lahf
fstpl
lcall
dec
cltd
mov
add
pusha
cmp
and
xor
xor
movsl
sub
test
xchg
sbb
jne
pop
sub
test
push
jmp
push
sub
cmp
xor
push
sbb
mul
test
cmp
pop
push
imul
inc
in
outsl
adc
mov
fistps
aam
fdivp
outsl
inc
arpl
enter
outsb
jno
mov
shll
je
jecxz
in
sub
and
sub
popl
js
mov
icebp
out
pop
lret
call
jno
sbb
adc
ret
adc
lcall
jmp
pop
cld
add
mov
add
dec
andl
outsl
pushf
pop
sahf
mov
mov
leave
push
fsubrp
push
xchg
sub
xlat
adc
cmp
mov
aam
push
mov
mov
inc
cmc
inc
movsl
les
mov
int
stos
xchg
adc
jmp
notl
addb
mov
dec
sub
push
inc
inc
dec
sarl
xchg
mov
nop
je
pop
out
inc
mov
rcrb
and
sbb
mov
adc
lret
lahf
mov
inc
sub
inc
test
aam
loope
add
xchg
and
dec
in
cmp
mov
jle
sbb
gs
mov
add
insb
addb
xorb
subl
adc
sarb
xchg
jge
push
test
insl
bnd
mov
ja
add
sub
push
and
sbb
fsubp
push
jl
stos
sub
mov
jb
push
push
int
adc
ret
xchg
mov
out
or
dec
inc
jl
cmp
jmp
aaa
push
loop
in
ror
push
fisubrs
mov
in
movb
adc
pop
inc
fndisi(8087
out
adc
sbb
fcoml
mov
sbb
pop
mov
shl
daa
jl
mov
lods
mov
jnp
mov
xlat
or
sbb
clc
inc
scas
jmp
xchg
pushl
lret
movsb
popf
addr16
dec
inc
pop
insl
xchg
pop
enter
imul
clc
mov
sub
xor
pop
mov
or
cli
adcl
inc
fidivs
and
cltd
add
cmp
push
push
in
mov
lods
loopne
gs
stos
inc
mov
jno
jne
data16
insl
lret
out
push
inc
sub
add
cmp
cmc
mov
outsl
nop
ret
enter
cld
adc
and
and
pop
mov
sarl
insl
adcb
cmc
or
sbb
shlb
popa
mov
push
gs
sbb
xor
call
popf
xor
inc
cltd
mov
mov
cmp
ss
movsb
and
sub
or
lods
jne
cltd
fdiv
sub
movsb
inc
in
popa
mov
aad
shl
daa
jno
cmp
sub
xor
dec
push
pop
dec
mov
push
push
gs
or
cmp
outsb
mov
push
sar
mov
sbb
and
fisttpl
ret
dec
aad
shll
xchg
sbb
into
int3
mov
ficoml
out
dec
adc
dec
movsb
je
mov
ja
aas
mov
lods
notb
fwait
add
in
add
xchg
jg
mov
test
adc
xchg
cmp
xchg
ss
jl
push
push
adc
std
cmp
aaa
mov
insl
add
xlat
outsl
cmpsb
jecxz
jp
imul
sub
sub
and
out
popf
xlat
das
pop
cmp
aam
andl
stos
cld
cmpsl
les
mov
inc
dec
scas
fdivp
test
sbb
mov
stos
dec
mov
daa
in
xor
std
dec
std
inc
test
dec
mov
call
movsl
stos
inc
outsb
pop
and
mov
testb
push
mov
xchg
scas
sbb
or
pop
pop
pop
ds
out
cli
dec
loope
push
lret
sbb
xor
nop
cmpsl
stc
inc
jnp
inc
and
xchg
test
ljmp
mov
jl
iret
cmp
xor
ffreep
icebp
adc
dec
mov
xchg
aas
test
push
enter
out
daa
mov
std
cwtl
mov
dec
leave
lret
sbb
push
pop
dec
ja
push
cmpsb
scas
mov
sbbb
nop
popa
and
lods
xchg
addr16
aas
test
shrl
and
or
rclb
cmpsb
aaa
fisubrs
mov
ffree
jp
xchg
xchg
ucomiss
xchg
push
aas
push
push
and
sub
aas
mov
push
mov
mov
adc
mov
sub
mov
int
add
jno
pop
xchg
mov
fwait
ljmp
fimuls
push
fcoml
jge
fistl
fildll
mov
xor
stos
leave
add
mov
arpl
xor
adc
inc
cltd
dec
lods
mov
mov
fstpt
aam
sbb
pop
push
and
pop
repnz
mov
or
sub
xor
std
push
insl
pop
lahf
jo
pop
cmpsl
sti
push
dec
push
ja
fwait
jo
mov
mov
in
inc
mov
ljmp
int3
pop
adcb
das
andb
rsqrtps
in
xchg
xchg
mov
in
sbb
mov
sub
loopne
mov
mov
inc
dec
jbe
scas
xor
push
leave
or
adc
add
enter
xchg
mov
mov
pop
popa
jne
mov
add
mov
les
fs
hlt
lods
cmpsb
pop
push
into
jb
inc
aaa
scas
ja
notl
lods
imul
shrb
pop
shl
lods
cs
adc
mov
daa
scas
jae
loope
pop
cmc
xchg
or
xor
mov
adc
test
int
push
pop
xchg
jg
pop
sub
pop
cld
out
or
icebp
or
sub
jp
mov
subb
pop
add
inc
test
xchg
xchg
ss
in
je
or
aas
icebp
repz
cmpl
mov
std
mov
push
addr16
dec
xor
shr
loope
gs
lea
jno
mov
cmp
mov
stc
jnp
add
sbb
add
jmp
add
loop
push
push
dec
sub
test
ljmp
ja
in
sbb
dec
sahf
daa
lods
lcall
push
adc
dec
add
outsb
xlat
sbb
outsb
mov
cmp
cmp
and
add
test
jge
mov
pop
dec
pop
jge
shlb
test
decb
mov
xchg
lahf
call
je
out
mov
mov
push
cmp
fidivs
sbb
xchg
lock
lods
out
jle
test
pop
sbb
sahf
sub
fldt
and
push
sbb
or
arpl
pop
mov
sbb
sub
movsb
insl
int3
aad
vcvttps2dq
ss
push
sarl
aaa
adc
or
or
inc
or
xchg
push
inc
mov
stos
subb
cmpsb
xchg
xor
fs
aaa
cltd
jg
jle
push
mov
cmp
mov
and
popf
dec
sub
push
aas
leave
sbb
inc
mov
sahf
int3
push
push
jecxz
and
jo
add
push
into
negl
dec
or
outsl
nop
inc
dec
cwtl
jnp
add
and
int
lret
mov
jns
push
fldt
xor
jmp
gs
pop
and
lods
add
adc
lahf
fnstenv
sbb
aad
sbb
jecxz
xchg
xor
ret
push
clc
out
dec
xor
jge
fidivs
dec
adc
inc
push
jne
ds
js
lds
cltd
inc
lahf
add
cs
and
sub
jo
in
lock
mov
cli
ja
dec
arpl
mov
clc
xchg
movsl
test
push
cmpsb
cmp
outsb
fimuls
aaa
push
pop
int3
fwait
mov
gs
outsl
and
mov
jbe
sbb
test
inc
add
xor
adc
mov
cmc
add
cmp
cwtl
mov
cld
lcall
and
fisubrs
int
mov
pop
iret
pushf
aaa
xor
pushl
cmc
or
xor
inc
push
mov
in
call
addr16
pushf
ror
dec
xchg
cmp
jnp
pop
and
lea
sbb
or
and
push
ret
test
nop
lods
mov
jne
sbb
inc
mov
bound
xlat
je
sbb
or
xchg
inc
add
push
mov
fstpt
mov
lahf
rolb
xchg
mov
shll
sbb
bound
fiadds
loope
idivl
push
push
add
sahf
inc
push
adc
jnp
add
mov
xorb
xchg
xchg
loopne
aas
xor
xor
bound
xor
adc
dec
mov
add
js
pop
rol
sbb
cs
inc
xchg
fisttps
push
push
mov
add
and
pop
ja
xor
loope
fldt
push
test
sahf
mov
test
ss
enter
das
dec
dec
lcall
outsl
xor
movsl
add
repz
call
or
out
push
ja
stos
cmp
pop
dec
mov
subl
sub
stc
loopne
sub
in
hlt
mov
jns
dec
popa
dec
xchg
xlat
les
mov
add
js
sahf
push
fwait
mov
mov
fsubrp
mov
ljmp
loope
lods
pop
xor
subl
cltd
mov
iret
js
or
ljmp
loopne
pop
and
push
scas
ret
je
subb
push
or
xchg
mov
out
push
imul
mov
sti
or
xchg
dec
dec
daa
lcall
cli
into
in
jns
xor
mov
ds
ljmp
aam
stos
jbe
andb
mov
ds
rcll
in
push
sbb
in
cmp
add
cltd
adc
ret
jle
push
pop
popa
jo
lret
inc
lds
or
outsl
push
mov
pop
inc
adc
cld
std
imul
repnz
mov
arpl
mov
xadd
push
fucomp
or
cmp
shll
inc
mov
es
cmp
sub
inc
das
push
jp
pop
ret
rcl
data16
jns
popa
fs
adc
push
stos
clc
into
push
mov
add
or
cmp
popf
push
repnz
push
ss
daa
in
jo
repz
pop
not
gs
std
xchg
or
mov
push
aad
fs
call
push
sbb
shll
jmp
and
mov
imull
leave
arpl
push
xchg
jne
subb
outsl
lret
lods
add
rorl
movsl
loopne
inc
mov
pop
cs
jb
inc
icebp
mov
inc
in
mov
sbb
sbb
add
arpl
mov
xor
mov
pop
xorb
dec
in
xchg
mov
fsubrl
nop
aad
push
cmc
stos
jnp
sti
cltd
pop
cmp
xlat
mov
not
xchg
enter
inc
leave
jbe
adc
xorl
cmp
push
into
mov
arpl
and
cmp
jg
pop
popf
add
jbe
push
repnz
xchg
mov
mov
or
dec
imul
shll
mov
out
mov
push
jb
in
inc
gs
orb
mov
adc
sub
rorl
cmp
fdivr
and
mov
aad
insl
mov
mov
push
ja
mov
outsl
push
stos
repz
inc
jno
xchg
fsub
aad
icebp
loop
xchg
je
push
movsb
lret
mov
mov
lods
inc
xchg
add
nop
push
idivl
push
imul
lock
cmpsb
inc
adc
xchg
sub
scas
aas
pop
mov
push
ds
lret
dec
push
fnstsw
ficoml
and
mov
jne
inc
incl
push
mov
dec
and
push
test
int
sarb
popa
cmpsb
insl
outsb
jne
jae
xchg
scas
mov
xchg
sbb
dec
mov
dec
hlt
fsubrs
test
xchg
daa
out
adc
cmpsl
fstpt
inc
js
cmp
iret
mov
data16
cmpsb
inc
mov
cmpsb
movl
pop
and
pop
xchg
pop
xor
xor
out
cmp
mov
and
fldcw
out
dec
pop
sub
and
pop
jp
cs
sbb
arpl
aam
sarl
pop
jns
iret
cmp
cwtl
and
cmp
pop
lods
es
addl
inc
add
enter
mov
rcl
sub
or
out
popf
add
enter
movsb
in
jnp
mov
lock
pushf
sbb
movsb
rclb
mov
jo
fdiv
jo
xor
or
out
xchg
add
xlat
cld
sbb
movsb
in
sbb
cmp
add
cwtl
int
sbb
pop
shrb
pop
dec
and
mov
nop
lcall
je
mov
xor
mov
rol
inc
jg
adc
dec
rcrl
out
cmpsl
adc
sbb
xchg
dec
mov
clts
mov
inc
xor
jle
xor
movsb
out
push
data16
fistps
pop
std
jle
data16
jb
cmpsb
lcall
xchg
xor
lock
or
xor
nop
jae
pop
fnsave
loopne
aas
insl
add
adc
pop
and
and
pop
xchg
xchg
aaa
mov
mov
cld
and
repnz
cmp
int3
and
jmp
in
xor
test
test
rclb
lret
hlt
mov
lret
mov
and
cmp
cmp
movsb
aas
js
or
or
mov
pusha
sbb
shl
arpl
in
adc
or
inc
mov
inc
sti
jl
xchg
mov
in
inc
jecxz
sub
shlb
push
jp
popf
pop
inc
lahf
arpl
xor
push
jnp
sti
xor
inc
jbe
sbb
dec
repnz
mov
xchg
mov
dec
cmp
mov
inc
data16
fisubs
aas
push
pop
out
mov
push
out
add
shr
insl
hlt
xor
jle
or
sti
hlt
lods
popa
add
test
mov
daa
mov
push
mov
mov
scas
or
mov
rolb
sbb
sahf
add
shlb
lea
jmp
or
movsl
mov
insl
pop
push
or
pushf
aad
sub
hlt
mov
push
add
pop
add
and
push
inc
jecxz
push
sbb
movl
pop
in
inc
lcall
jo
fcoml
mov
sti
xor
iret
and
push
push
sbb
fwait
orb
lcall
mov
popf
push
cwtl
and
cmp
push
cmpsb
cmp
fs
jo
xorb
jmp
arpl
ret
adc
sub
fcmovne
pop
and
or
sbb
testb
cmpsl
xor
sub
adc
call
repnz
fs
lahf
les
lret
push
cmpl
loopne
aaa
out
jnp
sub
call
in
jns
sahf
pop
loope
test
xor
or
sbb
pop
jnp
movsb
bnd
adc
push
jg
cmp
int
jl
les
into
ficomps
mov
add
call
mov
repz
jno
imul
fcomip
fdivrl
ficoms
jnp
sub
jo
call
in
xor
test
pop
push
test
int3
mov
mov
mov
xorb
sbb
iret
lods
mov
mulb
jecxz
dec
cmp
movsb
inc
jecxz
das
aaa
fcomps
and
push
ljmp
pushf
outsb
jae
xchg
sbb
mov
shll
adc
adc
mov
imul
out
dec
cmc
jmp
adc
pop
sub
jo
mov
and
sbb
loopne
mov
mov
cmp
das
inc
addl
frstor
push
in
pop
push
cmp
icebp
or
or
int
into
add
fcmovb
movsb
xchg
xor
dec
ds
cld
shlb
cmp
repz
adc
cwtl
movsb
flds
push
sbb
fisubrl
adc
fstpl
xchg
out
addr16
lods
jo
into
enter
mov
xor
sbb
sarb
pop
cmp
rorb
push
lahf
pop
scas
ja
cmp
es
in
jo
mov
ds
out
pop
jl
out
aaa
and
test
push
test
mov
daa
dec
sbb
jnp
ljmp
loope
sub
cmp
jg
sub
inc
dec
jle
outsl
rcrb
lcall
mov
pop
ljmp
popf
idiv
inc
in
and
icebp
sbb
lret
mov
push
push
popa
lret
sbb
cli
test
fnsetpm(287
loop
nop
pop
loop
mov
and
jp
movsb
jb
cmp
ja
andl
cld
push
jp
aad
lds
jge
test
insb
jl
push
cmp
outsb
ja
xchg
xor
subb
xor
pop
add
fstps
enter
mov
xor
xchg
xchg
out
jbe
mov
movsb
stc
fcompl
fisubrs
shl
xor
mov
cmp
inc
inc
mov
mov
lahf
mov
shr
sti
push
xchg
adc
je
rcrl
mov
dec
jle
mov
cmp
pop
popa
mov
inc
bound
and
push
aam
mov
psllw
sub
out
mov
cltd
pop
adc
push
cltd
mov
push
dec
inc
and
in
inc
cld
in
xor
scas
outsl
mov
adc
sub
add
test
mov
hlt
into
mov
arpl
scas
daa
push
xchg
pop
sub
xchg
scas
xchg
mov
es
pop
mov
sub
mov
mov
cmpsb
aas
out
int
addr16
in
cltd
cmp
inc
divl
clc
ds
pop
mov
mov
repz
cmp
adc
ret
sub
mov
lds
add
aaa
xorb
test
mov
push
cmp
movsl
mov
or
jecxz
pusha
xchg
icebp
gs
std
clc
sub
jnp
mov
loop
decl
mov
push
pop
adc
outsb
cmp
push
iret
call
dec
dec
xor
ljmp
imul
xor
xchg
mov
movsb
mov
adc
jmp
fwait
push
sbb
fwait
dec
xchg
push
cltd
and
sub
shlb
sub
repz
xor
dec
popa
rolb
mov
jl
and
movsb
cmpsb
dec
and
cmpsb
xchg
pop
aam
insl
jo
lret
jle
lret
gs
test
dec
popf
cs
xor
loopne
out
push
into
into
cltd
push
xor
call
lea
ret
adc
jno
fsubl
inc
std
jo
gs
add
xor
and
aam
in
xchg
xchg
test
push
push
inc
inc
je
fs
add
xor
and
aam
in
xchg
xchg
test
push
push
inc
dec
je
fs
adc
add
xor
and
aam
in
xchg
xchg
test
push
mov
mov
adc
add
xor
and
aam
les
cmc
in
jecxz
or
dec
int
fstl
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
sub
sarl
push
int3
sbb
mov
dec
call
jl
fwait
sub
int3
push
cld
pop
push
test
mov
dec
call
jl
xchg
sub
sbb
push
jmp
or
pop
in
clc
dec
cwtl
arpl
adc
dec
loopne
shl
les
add
in
in
ror
cmp
mov
adc
lods
out
nop
and
lds
xor
or
and
cmp
jle
cmpb
repz
push
ret
pop
mov
sbb
aaa
mov
cmp
or
imul
or
fwait
je
sub
pusha
addr16
mov
xchg
stc
insb
mov
cmc
fmulp
in
push
in
push
add
jecxz
cmp
out
pop
mov
insb
lods
pushf
shl
xor
mov
xlat
push
jecxz
rorl
or
fnstsw
sub
fsubrl
js
dec
in
adc
mov
clc
insb
enter
inc
stc
jmp
dec
fcomps
pop
mov
out
sub
sbb
pop
out
mulb
test
orl
imul
andb
pop
push
in
sbb
imul
das
xchg
sbb
jl
in
scas
dec
leave
jl
insb
mov
fdivrl
dec
cld
pop
or
sbb
sub
cmp
dec
call
jl
mov
pushf
cmp
fdivrl
dec
cld
pop
or
sbb
sub
cmp
dec
call
jl
mov
pop
sub
jecxz
lock
push
pop
movsb
and
or
lock
in
stos
popa
cmp
jno
sub
imul
inc
pop
dec
iret
fs
push
pop
int3
cmpb
dec
daa
inc
jns
mov
push
pop
dec
pop
inc
add
imulb
sub
test
mov
add
jnp
nop
add
sub
repnz
lret
sub
scas
and
xor
sbb
out
or
pushf
dec
mov
xor
add
mov
or
mov
leave
jns
cmc
and
test
inc
and
test
loope
out
cld
mov
loopne
in
push
dec
xlat
dec
jp
pop
iret
or
add
icebp
pop
cmpsl
sub
push
cmpsb
sbb
es
mulb
lcall
mov
pop
ljmp
aas
mov
cltd
or
jp
es
jno
jne
ss
loope
mov
leave
pop
mov
xor
pop
jne
inc
addr16
lods
cmp
lahf
cwtl
add
mov
mov
sub
push
jmp
push
pushf
xchg
sahf
cmpsl
sub
ss
lea
cmp
nop
xor
add
popf
mov
mov
lret
inc
test
add
repnz
lret
inc
pop
pop
inc
and
rcrl
scas
pop
imul
sub
movsl
and
call
add
dec
jg
fidivs
lret
enter
mov
loope
jb
enter
pop
adc
out
or
stos
or
test
loopne
movsl
dec
xor
cltd
lock
insb
les
ficompl
and
mov
cmpsb
sbb
mov
pop
cmp
jl
test
xchg
enter
jmp
imul
jae
out
xor
loopne
cmovo
in
mov
mov
adc
push
lds
pop
insb
jnp
test
subb
idivb
mov
and
jge
adc
adc
dec
xchg
inc
dec
pushf
inc
int
movsl
or
test
dec
jno
push
loop
dec
enter
out
lret
test
fildll
mov
insb
add
lock
lahf
lock
push
lds
sub
mov
fwait
mov
call
xchg
shrl
mov
sub
dec
adc
cld
test
testl
cmp
pmovmskb
pusha
inc
mov
xchg
adc
ret
add
and
or
std
jne
lds
jne
adc
cmp
jbe
cmp
das
or
dec
and
add
mov
or
sbb
stc
and
add
in
inc
xchg
popf
insl
sbb
jbe
outsl
ds
xchg
push
jb
insb
sub
adc
dec
add
pop
mov
out
movsl
incb
dec
xchg
rcl
add
jecxz
stos
ret
and
dec
rorb
nop
arpl
inc
dec
outsl
jmp
fdivr
inc
sbb
pusha
int3
add
lret
sbb
sub
popf
inc
cmp
sub
xor
and
rep
fidivs
and
icebp
push
int
roll
adcl
cmpsl
and
cli
ds
jbe
add
push
mov
imul
or
repz
hlt
sub
lcall
mov
jns
push
xorl
mov
push
inc
lds
loope
jg
xchg
fwait
dec
push
test
adc
cmc
jae
or
lock
out
jg
sbb
cmp
call
mov
popa
in
mov
cmp
arpl
push
ja
sbb
mov
fwait
adc
ljmp
pushf
add
std
cmp
push
cwtl
ret
xor
xor
dec
mov
mov
or
cmp
pop
andb
loopne
ret
daa
pop
cmp
shlb
mov
xor
inc
pop
fcmovnbe
loopne
sub
push
outsb
jnp
lods
cltd
ret
loop
sbb
mov
add
cltd
add
pop
dec
or
add
or
iret
sti
mov
lahf
pop
sub
lock
data16
and
xchg
jecxz
sub
pause
sahf
addr16
movsl
andl
push
out
popa
sub
pusha
mov
sti
sbbl
mulb
imul
insb
jp
xchg
adc
sbb
add
cmp
js
fs
jecxz
fildl
mov
loope
push
aad
xor
stc
iret
adc
clc
jae
pop
leave
popf
aas
jmp
or
iret
sub
cs
mov
sbb
dec
pusha
fidivrs
xchg
jl
or
dec
jmp
sahf
pop
cmp
xor
cmpsb
loopne
retw
push
xor
sahf
inc
mov
push
mov
xchg
icebp
dec
cli
add
roll
lds
loopne
mov
outsl
aaa
dec
push
sbb
iret
add
scas
pushf
jbe
int3
mov
lcall
xchg
call
push
je
jae
das
add
sbb
cli
imul
add
xchg
lock
add
or
iret
add
inc
push
mov
mov
loopne
repnz
sub
ret
jge
push
ljmp
dec
add
mov
lcall
test
out
fsubs
clc
fwait
mov
sti
mov
mov
retw
es
jno
inc
inc
and
or
push
scas
imul
push
xor
cmp
lods
scas
int
push
sub
stc
mov
cmp
jg
or
repnz
jg
cltd
xor
jecxz
xchg
jecxz
cltd
adc
fists
les
cltd
rcrl
imul
rcrb
andb
sbb
out
imul
fildll
repz
xor
test
jg
cmp
popa
les
stc
xor
notl
in
in
nop
aas
pop
int
out
int3
addb
inc
xor
hlt
xor
fmuls
lock
jbe
insl
mov
imul
cmp
or
popf
ja
xchg
cmpsb
push
inc
hlt
test
leave
push
dec
lahf
xor
mov
jp
pop
mov
inc
sbb
cmp
mov
sti
xor
in
insl
js
les
out
cmp
xchg
fistl
stc
xchg
jb
xor
push
das
sbb
sub
cmp
fldcw
xor
pop
jl
pushf
loopne
add
sbb
bound
push
leave
sbb
push
punpcklwd
lcall
mov
mov
flds
into
mul
push
jno
add
int3
incb
jbe
cmp
xor
cli
xor
fsub
mov
jmp
pop
xchg
testl
xchg
lcall
cmp
aam
xor
sbb
sub
jecxz
pop
inc
cmpsb
cwtl
and
lcall
lea
add
ds
jns
mov
out
imul
cmp
pop
movl
push
test
mov
out
jo
jmp
mov
mov
movsl
lock
mov
rcr
mov
pop
push
adc
hlt
xchg
mov
mov
inc
add
push
jne
mov
push
jle
mov
orb
lahf
inc
cmpl
jl
or
incb
into
and
fs
push
push
jmp
pop
push
imul
jo
fstps
adc
mov
sbb
stos
mov
enter
cmp
cmp
jp
ret
ret
shrb
xor
lock
idiv
pop
inc
mov
repnz
push
fimuls
nop
icebp
outsl
bound
adcl
jmp
repnz
rolb
dec
insb
jb
inc
cli
lea
push
adc
mov
jns
jl
pop
push
out
push
xlat
jbe
mov
aas
and
adc
aaa
jg
adc
mov
push
sbb
leave
repnz
and
mov
lock
mov
pop
mov
int3
loop
xorb
sti
mov
mov
loopne
lret
mov
mov
icebp
das
cmpsl
lcall
push
in
jle
inc
aad
lds
aam
inc
loopne
mov
mov
add
jmp
jmp
into
inc
xchg
addr16
pop
sbb
dec
mov
arpl
mov
or
sahf
jmp
outsb
aaa
sbb
xchg
cmc
pushf
in
fisttpl
loopne
push
les
cmpsl
mov
xchg
fldl
pop
pop
mov
outsl
into
mov
xor
sub
sub
jb
mov
into
fwait
sub
sbb
lahf
hlt
jmp
push
loopne
lock
popf
xor
stc
call
jnp
rclb
das
cs
xor
loop
lds
or
pop
sub
fcmovnb
jmp
imul
lods
mov
imul
mov
push
push
or
call
inc
roll
sub
push
jmp
bound
daa
mov
repnz
hlt
popf
mov
mov
lods
xchg
cmp
cld
jp
orl
mov
cwtl
stos
je
fiaddl
jne
cmp
mov
loopne
in
in
cltd
cmp
and
jl
pop
lahf
scas
mov
testl
pop
xlat
jb
jb
xor
adc
int3
lds
sub
fwait
std
icebp
addl
xchg
mov
aam
ds
pop
movsl
loop
inc
or
idivb
ja
mov
stc
aad
imul
cwtl
sbb
outsb
lds
mov
xor
cs
stc
scas
pushf
cmp
add
clc
sti
sbb
inc
xchg
mov
jae
push
test
pop
xor
in
idivl
dec
jb
loope
pop
jo
out
cmp
in
sub
add
sbb
xlat
push
mov
mov
xchg
aaa
ss
outsb
aam
fdiv
out
aaa
xchg
mov
jae
xchg
jmp
sbb
scas
mov
fsubrl
idivb
xor
and
jbe
mov
push
pusha
xor
lcall
jecxz
pushf
fistl
lahf
movsl
lods
mov
and
repnz
push
push
addr16
frstor
test
pop
mov
xorl
shl
cmc
adc
xor
sub
mov
lods
aam
adc
jnp
inc
arpl
lret
les
pop
xchg
or
cmp
xchg
push
aaa
cmp
aaa
pop
das
dec
cmp
or
lea
iret
fwait
push
in
adc
adc
and
ficoml
adc
dec
jne
xor
insl
stos
cmc
lock
xchg
popf
push
mov
scas
mov
test
jne
lods
sub
sub
push
dec
inc
mov
test
int
icebp
gs
mov
adcb
pusha
lcall
and
daa
xchg
add
lock
fbstp
mov
pop
sub
jp
movsb
push
pop
pop
shrb
sbb
gs
mov
mov
xor
rcll
cwtl
ljmp
aas
pop
cwtl
xor
cmp
out
push
jp
aam
push
cli
sbb
sbb
xchg
adc
pop
int3
sub
sti
pop
fsubrs
pop
jge
nop
aam
sub
hlt
pop
cmpb
jp
push
push
scas
imul
or
xchg
sub
out
fldz
data16
xlat
pop
dec
sti
add
call
scas
sahf
sub
cmp
mov
jnp
dec
jle
jg
add
fucomi
aas
mov
psubsw
cwtl
adc
test
cmp
sbb
mov
inc
iret
pop
ljmp
or
negb
xchg
test
dec
inc
lea
cmp
fnsave
cmp
adc
cld
rcrl
fwait
aas
cmpsl
or
cltd
xchg
xchg
mov
push
mov
aas
ffreep
jle
sbb
test
pop
std
sarb
int3
stc
pop
lods
xchg
mov
movsb
or
sub
das
mov
push
clc
add
cmp
sub
dec
push
ss
dec
mov
xor
daa
mov
clc
or
daa
out
fyl2xp1
pop
jbe
insl
xchg
cmc
or
lret
lods
sti
lods
call
inc
inc
mov
jbe
adc
jno
sti
mov
lods
outsb
out
cmp
or
pop
in
ret
imul
and
icebp
sub
adc
in
std
ret
cltd
jg
enterw
xchg
loopne
stc
sbb
addb
xchg
repz
fcom
lock
icebp
sarl
lods
inc
push
test
xchg
pop
mov
and
sub
sbb
pop
sbb
adc
jno
mov
enter
enter
inc
pop
jmp
cli
mov
mov
mov
cmpl
adc
xchg
call
pop
cmp
in
inc
stc
or
jae
sub
nop
es
mov
je
cmp
xor
sahf
test
add
inc
int3
xor
mov
sbb
cmp
xor
sbb
fsubs
data16
pop
movsb
gs
and
and
add
mov
cld
xchg
pop
mov
and
cmc
shrb
push
sbb
movsb
paddq
imul
cmp
psrld
or
sahf
and
es
xchg
dec
popa
cltd
scas
pop
loopne
lods
cmp
repz
sub
xchg
sti
repnz
mov
xchg
decl
mov
int3
and
and
inc
xchg
repnz
inc
mov
dec
xchg
pop
leave
fwait
test
pop
jmp
push
fs
in
jae
loopne
sub
sub
lahf
jmp
xorb
adc
out
popf
mov
push
ret
lock
or
push
add
bound
inc
or
mov
std
jne
pop
mov
iret
or
lret
mov
push
cmp
nop
xor
pop
mov
ficoml
mov
dec
mov
movl
dec
jl
push
mov
shlb
movsb
outsl
bsr
ror
jbe
ret
rorl
push
sbb
repz
xchg
and
lret
lods
test
jmp
cmp
cmp
mov
xchg
mov
sub
dec
andl
shl
mov
int
lahf
sbb
fimuls
sbb
sbb
ljmp
test
test
loopne
jecxz
idivl
sahf
and
in
xor
xchg
je
shrb
add
inc
mov
jno
pop
mov
imul
xchg
dec
lods
push
shlb
rclb
inc
fstpl
adc
sub
int3
lock
andl
xchg
int
popf
cmc
shr
cmp
stos
xchg
pop
lock
fidivl
std
cli
scas
loopne
push
rorl
iret
adc
jbe
pop
jecxz
das
insb
jne
inc
jb
and
jns
mov
mov
std
pop
out
pusha
push
js
inc
in
xchg
jg
jge
sahf
ss
mov
dec
stc
cwtl
shlb
call
dec
mov
movsl
jp
mov
xchg
sub
cli
pop
fbstp
dec
push
lret
cmpsl
mov
mov
cmc
ret
call
xchg
jae
addl
xor
sub
push
add
pop
dec
ds
std
xorb
jl
ja
mov
shll
aad
mov
xor
sub
rcrl
mov
aaa
jbe
dec
mov
pop
mov
sub
add
lods
sbb
or
std
leave
xor
in
mov
and
jo
dec
inc
mov
xor
jb
sub
fstl
mov
roll
fdivrl
dec
xchg
xor
iret
ljmp
xor
mov
pop
fidivrs
fdivp
lret
push
pop
jecxz
dec
ljmp
jb
clc
sbb
cmp
fistpl
daa
cwtl
inc
test
xor
cmp
mov
or
dec
mov
push
aam
enter
int3
nop
push
pop
ds
fidivrl
imul
scas
fcmovnbe
jl
jo
adc
push
decb
sbb
push
dec
out
cmpsl
add
inc
inc
mov
sbb
in
shll
fisubs
jo
imul
repz
mov
sarb
ss
stos
mov
stc
xlat
cmp
loop
jb
jle
mov
add
add
jb
push
sub
jo
sbb
or
cmp
insl
lods
testb
and
xchg
sub
movsl
and
andb
sub
xor
sbb
add
cli
sarl
jge
fistpll
jno
icebp
sub
jp
add
adc
push
loopne
adc
push
testl
sbb
scas
test
aaa
out
sbb
insl
and
fidivrs
xchg
fisttpl
inc
cwtl
loopne
enter
cmpsb
fchs
int
add
dec
ljmp
imul
mov
jb
inc
subb
movsl
stos
xchg
dec
js
push
scas
bnd
cmp
add
and
jecxz
sub
fs
jl
daa
or
mov
mov
sub
or
in
ficompl
dec
test
jb
sub
cmpsl
push
cmpsb
push
mov
push
call
adc
fistpll
sbb
pop
in
pop
in
insb
push
inc
std
out
mov
jns
out
pop
aad
pop
mov
je
int3
lcall
pop
jb
add
int
sbb
flds
xor
add
stos
pop
or
pop
imul
xor
cwtl
lds
mov
cmp
mov
es
jnp
dec
jno
hlt
mov
xor
pop
cwtl
into
jge
inc
sub
fmuls
mov
pop
xchg
adc
pop
mov
push
bound
adc
mov
imul
in
lea
loopne
js
push
add
test
cmp
xchg
lret
pop
imul
sarl
push
outsl
push
test
gs
outsl
add
jae
jns
pop
inc
adc
inc
push
jl
pop
and
add
in
lea
jo
adc
jnp
jae
xchg
sbbb
fiaddl
pop
mov
push
xor
pop
mov
hlt
pop
mov
xchg
in
ss
in
sbb
pop
xchg
ja
mov
mov
xor
loope
xchg
call
outsl
adc
pop
lret
fisubrl
out
xchg
jmp
repnz
fldl
mov
es
add
imul
pop
dec
mov
adc
or
aam
in
or
cmp
fsts
add
fildl
xchg
xor
or
xchg
rorl
daa
sub
mov
push
data16
inc
push
out
jnp
rol
mov
push
dec
cmpsl
inc
sub
fs
dec
push
sbb
jle
test
mov
push
je
fdivrs
jnp
stc
push
mov
nop
sbb
push
jns
pop
pusha
push
rcrb
idivb
sub
mov
loop
push
push
pushf
fistl
sbb
xchg
lahf
dec
inc
inc
push
lea
nop
mov
add
js
rcrl
push
inc
push
sbb
scas
add
out
pop
jae
gs
xchg
and
pop
cmp
sbb
cmpsl
push
adc
test
aad
xchg
lock
mov
or
cmpsl
gs
mov
notl
fnstsw
cmp
inc
jecxz
push
push
aam
or
add
push
lea
jb
out
jo
and
fimull
pop
enter
leave
mov
popf
sub
lock
and
mov
jno
adc
je
ror
fbld
mov
xor
addr16
lock
push
cld
mov
inc
nop
test
push
imul
dec
mov
mov
or
les
mov
mov
test
lods
das
fwait
addr16
aaa
mov
cmp
jp
into
and
in
mov
sub
das
dec
sbb
mov
dec
mov
clc
into
aaa
lahf
imul
pop
nop
mov
sbb
add
mov
mov
mov
pop
popf
adc
mov
adc
mov
or
push
pushf
int
xchg
and
jnp
movsb
scas
or
adc
repnz
sub
mov
xor
or
scas
popf
daa
ror
sbb
scas
js
dec
in
leave
out
push
add
into
add
gs
cs
icebp
stos
cmp
stos
sub
es
inc
loopne
cmc
nop
jb
sbb
jecxz
sti
add
scas
sti
cmp
pop
and
dec
mov
addr16
push
xchg
jne
addr16
add
into
outsb
les
je
push
js
out
mov
sti
insb
in
or
scas
dec
sbb
into
lods
mov
mov
es
dec
push
sahf
mov
pop
es
xchg
leave
sbb
and
xchg
jl
out
jge
mov
cwtl
jle
aas
mov
pop
pop
shl
jne
inc
xor
lret
imul
jns
or
scas
mov
mov
mov
js
dec
cld
pop
or
sbb
sub
cmp
dec
call
jl
mov
pushf
cmp
fdivrl
dec
cld
pop
or
sbb
sub
cmp
dec
call
jl
mov
cmp
fdivrl
dec
cld
pop
or
sbb
sub
pop
clc
insb
enter
sub
sbb
push
jl
repz
jecxz
xchg
aam
xchg
aaa
andl
or
dec
aad
inc
xchg
js
les
jl
call
push
fadds
xor
cwtl
add
dec
aad
lds
mov
sub
xchg
sbb
call
push
fadds
pop
mov
add
dec
jge
sub
sbb
test
testl
mov
mov
pop
imul
add
fists
pop
cmp
sbb
mov
pop
adc
popf
push
pop
xor
push
xor
out
adc
mov
hlt
jns
inc
iret
cmp
sub
mov
xorl
push
call
fsubs
enter
and
scas
xor
mov
sub
sbb
mov
xor
dec
xor
ficompl
loopne
or
rclb
test
xchg
fadds
data16
xor
enter
lock
jns
jne
or
fdivl
fimull
cmc
js
dec
push
pop
iret
sub
sbb
enter
test
mov
imul
in
xchg
push
jmp
rcrl
cld
jge
xorb
and
pop
hlt
push
in
in
fs
mov
movsb
cmp
adc
dec
ficompl
sti
pusha
jmp
mov
mov
imul
mov
js
imul
sbb
enter
test
mov
add
dec
aad
lds
mov
movsl
or
clc
gs
test
mov
add
lds
jmp
jp
in
into
pushl
test
test
cmpl
cmp
rcrl
in
in
sbb
xorb
and
ret
xor
leave
mov
lods
xor
push
mov
test
xor
xor
xlat
push
adc
inc
ret
cmp
pop
jecxz
push
sti
add
ret
pusha
jmp
in
orl
push
dec
arpl
add
mov
lret
jecxz
inc
lock
or
aaa
das
mov
jle
cs
pop
push
leave
and
mov
xor
pop
ret
mov
mov
mov
add
xchg
xchg
xor
sub
leave
fs
dec
pop
js
loop
lods
jb
push
fdivrs
jns
ds
mov
or
subb
lahf
int
xor
sbb
aas
push
sarl
fxch
dec
xorl
jno
imul
call
pusha
or
fmull
ret
add
xchg
mov
jp
push
push
in
inc
add
outsb
jns
pop
cmp
xchg
xor
lcall
ja
pop
mov
or
mov
push
sub
mov
fs
mov
lods
ja
pop
cmpsb
push
repnz
cmp
test
arpl
div
aam
add
arpl
in
sbb
push
ja
sbb
data16
js
icebp
imul
inc
out
ds
movsl
cmp
int3
sbbl
sbb
cmpb
fldcw
and
ja
mov
xor
pop
fdivl
fdivrl
dec
daa
test
jmp
pop
xor
xor
fldt
jmp
adc
jns
pusha
iret
gs
inc
add
outsl
push
rcrl
and
inc
xchg
pop
jmp
scas
xchg
fbstp
mov
sbb
loopne
ds
jecxz
lea
mov
mov
les
std
jge
sub
rorl
scas
movsb
jecxz
jg
loope
mov
mov
addl
or
fs
rorb
pop
js
iret
inc
and
sarb
push
mov
sbb
fcompl
xor
test
or
jns
sub
ljmp
in
cs
inc
rcll
inc
mov
ds
jle
out
mov
adc
inc
push
adc
imul
fs
mov
pop
sbb
adc
insb
push
jge
aad
inc
orb
out
lahf
std
dec
push
dec
pop
iret
mov
xor
push
sub
pop
cwtl
cmc
sub
test
dec
andb
insl
mov
call
fwait
add
add
loop
xlat
jmp
jo
pop
cmp
jne
xlat
mov
loope
xchg
ret
mov
pcmpgtd
push
jmp
enter
jbe
xor
in
out
leave
sbb
out
fwait
jne
sub
lahf
je
push
fwait
sbb
mov
add
arpl
inc
int3
in
mov
push
cmp
mov
jb
dec
push
leave
add
sub
fs
xor
das
xchg
mov
stc
notl
pushf
jns
shll
lock
push
loopne
scas
mov
push
dec
and
fildll
addl
xlat
or
inc
xor
pop
scas
pushf
pop
lods
cwtl
jns
add
repnz
aaa
xchg
cltd
out
xchg
mov
pusha
mov
add
hlt
and
inc
loop
add
add
fsts
ss
mov
insl
lods
daa
test
xchg
sbb
mov
jmp
adc
push
dec
cmp
sub
pop
outsb
sub
arpl
sbb
jl
pop
stos
pop
and
ret
add
inc
dec
and
inc
out
nop
fiaddl
push
fs
inc
lea
rcll
nop
iret
out
in
xor
pusha
outsl
jmp
repnz
jg
into
test
fisubrs
pop
out
inc
dec
mov
fidivrl
mov
out
fimuls
push
shll
sbb
mov
push
fs
movsl
jne
push
call
out
loope
and
test
add
stos
sub
pop
pop
lret
mov
lods
push
addr16
adc
lret
pop
lds
ret
inc
lock
nop
pop
nop
xchg
jo
movsl
pop
or
std
jmp
fcmovnbe
aad
jnp
popa
pop
sbb
pushf
inc
fcmove
push
ja
rolb
dec
stos
imul
push
in
mov
pop
inc
inc
stc
lds
add
xor
shll
jne
xchg
mov
xor
xchg
and
cmp
jb
dec
hlt
fimull
mov
xor
xchg
push
jno
lods
ds
sub
push
ss
call
xor
mov
push
movsb
lea
clc
repz
dec
js
fldenv
mov
int3
mov
push
fnstenv
mov
je
adc
push
ja
mov
imul
or
out
mov
cmp
xor
fsts
pop
scas
add
scas
cmpsl
or
stos
push
scas
push
dec
xor
out
bound
ds
sbb
mov
outsb
mov
add
dec
loope
lods
sarb
pop
sbb
shl
adc
jl
and
mov
push
nop
push
ljmp
sahf
sbb
xorb
gs
jbe
into
push
pop
inc
fstps
out
call
negl
lcall
call
mov
cmpl
and
mov
xchg
call
xchg
or
int
aad
test
sbb
rcr
add
test
stc
ret
mov
data16
jo
push
test
sbb
mov
sbb
xor
sub
cmpsb
or
outsb
pop
inc
and
cmp
subl
test
jns
test
out
in
pop
inc
push
pop
test
push
popf
lods
pop
add
pop
sahf
ja
push
ret
clc
dec
outsb
mov
add
mov
repnz
sbb
cld
imul
scas
push
dec
dec
lret
add
dec
add
jmp
xor
or
and
pusha
mov
outsb
adc
js
mov
ret
lcall
outsl
fsubrs
scas
into
sub
es
enter
scas
jp
mov
mov
pop
xor
pop
inc
mov
dec
dec
mov
cwtl
insb
loope
inc
js
cmp
xor
jnp
or
jns
xchg
mov
inc
xchg
cmp
xchg
or
aas
sub
addr16
push
imul
add
mov
pop
popa
pop
call
psllq
outsl
mov
negb
repz
popa
ja
into
shrb
and
cwtl
cmpsb
stos
jae
stos
or
scas
push
rolb
int
push
lods
mov
lret
leave
xchg
adc
fs
jecxz
fsubs
je
push
inc
rorb
adc
out
hlt
gs
push
stos
jae
inc
in
xor
inc
aaa
mov
lret
je
sahf
cs
push
rcll
frstor
or
fdivs
xchg
xchg
popf
adc
repnz
and
inc
test
cmp
out
mov
loope
jecxz
fwait
shlb
ljmp
pop
add
cwtl
xor
add
xor
lret
inc
mov
or
mov
mov
ljmp
adc
mov
xchg
cmpsb
mov
aas
sbb
lock
out
movsl
mov
in
push
pop
pop
inc
add
test
std
ss
push
pop
lcall
rorl
arpl
aam
pop
ss
dec
add
vandnpd
scas
jb
mov
test
hlt
mov
cli
sub
in
jae
imul
mov
push
push
je
cld
inc
sub
sub
mov
push
aad
xchg
cmp
sete
sbb
out
and
fsubl
sbb
mov
cmp
cs
or
cmp
lret
idiv
sbb
xchg
int
sbb
imul
iret
mov
add
mov
outsb
push
mov
inc
in
or
lods
mov
aaa
adc
loopne
jecxz
shlb
sbb
xchg
lret
stos
inc
lret
stos
popf
jg
es
mov
pop
jbe
mov
adc
test
cmp
and
sbb
sub
mov
push
popa
pop
pop
add
xchg
xlat
sbb
pop
push
fmull
add
cmp
aaa
adc
sub
mov
inc
xor
cld
sub
push
mov
jne
bound
repz
adc
and
sub
mov
test
mov
lcall
pop
notb
lods
aad
adc
jo
push
sarl
push
cmp
mov
pop
push
loop
mov
notb
jle
lock
sub
mov
into
aad
sahf
notb
fidivl
sbb
es
divl
mov
pop
mov
pop
cmp
out
mov
fs
mov
jl
mov
ljmp
xor
sub
jg
ds
xor
cmc
mov
add
add
stc
mov
test
lods
pop
xor
add
hlt
dec
ds
sarb
fwait
test
sub
lret
repnz
test
pop
test
pop
in
repnz
cmp
ss
lea
jnp
addr16
pop
mov
mov
fnstsw
adc
aaa
cmpsl
jbe
enter
fldt
and
pop
ljmp
cmp
inc
aam
jmp
push
loop
add
inc
push
jb
adc
xor
inc
outsb
xchg
sbb
adc
mov
iret
push
cmp
je
jp
pop
pop
in
adc
lcall
xchg
aam
jle
push
dec
mov
adc
cmpsb
out
test
push
sub
out
jge
push
inc
xor
mov
in
js
cltd
xor
cmp
movsb
out
inc
and
cli
jecxz
lea
push
xchg
daa
push
pop
sub
stc
jle
push
xlat
xchg
push
mov
lds
cmpsl
out
adc
mov
test
dec
fisttpll
sub
sbb
cmc
inc
insb
nop
add
push
adc
pop
cmp
jle
dec
std
sub
dec
sub
mov
jecxz
stos
lahf
lds
sub
add
and
aam
xor
jb
mov
pop
and
jle
jp
adc
cli
adc
mov
sub
xchg
cli
dec
sbb
inc
std
cwtl
shrl
xlat
loope
xlat
cmp
mov
xlat
mov
insl
in
inc
cmpsl
inc
add
roll
jecxz
jmp
add
jge
mov
mov
test
adcb
lds
es
clc
bound
ret
push
mov
and
adcl
ss
stos
and
fpatan
fidivl
leave
nop
push
cld
stos
jecxz
nop
mov
and
test
stc
test
aas
xor
fnstsw
mov
fimull
or
cwtl
add
in
jmp
mov
test
lods
fs
inc
xchg
test
sub
push
push
pop
xor
lea
sbb
jnp
out
outsl
sub
xchg
xchg
shll
mov
test
sbbl
or
mov
test
mov
je
js
cltd
jns
shlb
push
jbe
sbb
dec
cmpsb
push
push
jle
cmp
and
addr16
push
dec
ds
push
aaa
mov
mov
js
and
fidivrl
call
bound
pop
inc
out
push
push
add
push
jo
call
xchg
cmp
xor
adc
or
loopne
iret
add
gs
push
pop
xor
sub
sub
imul
mov
stos
xor
jp
hlt
xchg
clc
ss
sub
dec
push
gs
fists
pop
bound
std
out
lds
pop
inc
dec
sub
cmp
xchg
pop
and
pop
dec
push
xor
sahf
ficoms
push
fcom
imul
add
pop
loop
inc
pop
mov
mov
mov
lds
hlt
adc
popf
and
fs
jmp
mov
sbb
mov
and
inc
ret
push
jns
outsb
and
std
cmp
rclb
sbb
mov
pusha
fs
je
dec
dec
jle
ds
add
je
aad
shlb
inc
rcrb
das
pop
mov
or
in
mov
mov
inc
adc
mov
lods
inc
xor
adc
fdivr
mov
dec
decl
mov
in
xlat
pop
mov
cltd
js
mov
lret
and
dec
gs
and
hlt
aaa
jb
push
mov
xor
inc
imul
mov
mov
ss
sub
fiaddl
lea
cmc
dec
inc
aas
sbb
adc
cld
psrlq
test
mov
adcl
cmp
idivl
std
mov
sbb
in
fbld
adc
gs
mov
and
in
ret
mov
addr16
pop
cmp
lret
jo
dec
gs
sbb
addl
mov
mov
push
sbb
out
sub
mov
xor
ret
push
push
out
dec
sahf
cmovb
mov
lock
sbb
pusha
cs
aad
outsl
adc
dec
lahf
jno
cwtl
imul
mov
mov
insb
mov
and
sbb
or
ficoml
mov
cs
hlt
xor
mov
imul
pop
rorl
js
popa
xor
sub
ror
jno
xor
fcmovnu
call
push
iret
sbbb
jbe
push
orl
loopne
xchg
setle
hlt
pop
shlb
shlb
aaa
mov
or
mov
sbb
pop
xor
sti
sub
scas
ret
rolb
mov
push
ja
sbb
inc
insb
inc
pop
scas
xchg
add
jbe
movl
dec
push
add
nop
pop
fcmovne
loop
mov
jo
arpl
mov
adc
cli
inc
add
lahf
stos
cltd
dec
xor
imul
xor
pop
sbb
lret
jle
ficoms
and
lods
stos
adc
popa
data16
push
cmp
imul
test
inc
fstpl
pop
push
cmpsl
or
lock
mov
pop
sahf
inc
cmp
adc
popa
push
call
xchg
popa
xchg
in
enter
scas
cmp
scas
movsl
cmp
and
sub
mov
aas
dec
sbb
and
xchg
or
add
pop
add
addl
mov
repz
aad
sbb
mov
xchg
mov
push
cmp
es
out
add
push
flds
mov
repz
mov
mov
sbb
inc
push
test
lds
lret
push
add
mov
loope
sub
idivl
sti
xchg
popa
pop
iret
stos
push
stos
inc
fsubrs
pusha
in
mov
add
pusha
shrb
cltd
mov
aam
imul
int
sbb
adc
pop
push
push
ljmp
int
cld
inc
adc
arpl
sbb
into
int
push
cli
sbb
js
nop
andb
jns
aas
orl
bound
cmp
cmpsb
dec
jno
cmp
mov
loope
cmc
popa
std
sub
push
add
sub
fsubrs
and
cmp
les
cmp
xchg
xchg
testb
fucomp
lahf
push
xor
pop
lock
fiaddl
pop
pop
xchg
stos
sub
jnp
fcoml
std
jne,pt
adc
xor
add
fs
fimull
push
xchg
push
lds
loope
je
xor
std
xor
xlat
jb
add
test
jne
xchg
xchg
imul
andl
cmpsb
bound
std
mov
ret
pop
mov
adcb
pop
test
push
ret
sub
inc
imul
push
push
dec
mov
mov
adc
lcall
scas
sbb
inc
imul
jo
pop
ret
rcrb
sbb
sub
adc
outsl
push
mov
xchg
jl
mov
and
and
ljmp
insb
adc
fstps
xchg
daa
lods
jne
xor
mov
cmp
sbb
loop
aam
fistl
arpl
adc
scas
inc
gs
hlt
inc
call
jp
jae
pop
ds
jb
add
xor
out
cmp
les
xor
sub
in
add
mov
push
sub
fnsave
push
sub
mov
or
sbb
gs
jb
fimull
mov
outsl
sti
in
or
mov
mov
ret
out
xchg
or
and
cmp
outsl
in
push
mulb
pop
fstpl
fisubs
ds
and
arpl
nop
scas
push
xchg
xchg
mov
xor
ret
push
xor
hlt
jae
lahf
and
adc
ljmp
pop
xor
and
sbb
data16
mov
dec
out
in
sti
ret
jge
mov
jne
mov
fcomps
cwtl
push
test
pop
mov
xor
xchg
jmp
push
lods
sar
sahf
aad
and
loope
shll
call
dec
int
dec
jecxz
and
push
pop
inc
fistps
xchg
jecxz
je
dec
cmp
stc
sub
jge
mov
push
xor
push
push
aam
adc
hlt
push
nop
mov
out
and
dec
sub
dec
jge
rclb
lcall
mov
aad
or
ljmp
push
jmp
loop
cli
lahf
addr16
ret
ret
cmp
lock
xor
push
fstl
or
imul
in
lods
lahf
mov
xor
cmp
lea
icebp
xor
cli
push
aaa
xchg
outsb
fcmovnbe
inc
or
sbb
outsl
pop
sbb
movsl
jecxz
daa
mov
shrb
or
and
pop
xchg
push
inc
jbe
jno
enter
cld
pop
lock
mov
imul
repnz
fmulp
cmp
call
imul
dec
xchg
mov
imulb
stos
loopne
pop
or
xor
sbb
bound
sbb
fwait
pop
pop
js
add
inc
fs
adc
push
xchg
mov
sub
adc
mov
test
aad
jns,pn
ret
or
mov
std
cltd
cmp
push
mov
and
or
popf
inc
rcl
popf
mull
inc
xchg
jnp
test
xchg
inc
jbe
mov
ja
nop
iret
shrl
push
ljmp
cmpsb
jmp
dec
sbb
dec
daa
movsl
push
add
adc
bound
pop
out
lahf
add
hlt
pop
xor
sub
sahf
mov
cmp
shrl
int
cld
jbe
mov
jnp
iret
sarb
out
movl
mov
sbb
fwait
mov
ret
or
shlb
xchg
ds
pop
fs
testb
add
xchg
ret
cmpb
subl
fnstsw
aad
hlt
pusha
je
adc
fistpl
fwait
pushf
mov
test
jmp
outsw
das
cmpl
mov
mov
lods
jne
push
add
mov
in
imul
xchg
pop
icebp
sbb
inc
sub
jbe
push
rclb
jecxz
jbe
into
aam
cmp
mov
sub
sbb
dec
mov
mov
outsl
fs
lea
inc
push
loopne
fwait
jp
or
fs
or
push
inc
xor
stc
inc
mov
je
mov
jl
ss
mov
lea
aas
lock
push
lods
pop
pop
int3
mov
push
xlat
movsb
adc
xor
jns
test
jp
fnstenv
mov
sub
mov
test
ja
push
imul
or
xchg
filds
scas
inc
lods
and
fwait
xor
cmp
adc
lret
aas
xchg
and
movl
leave
ja
mov
mov
ljmp
test
sbb
aam
dec
inc
fldt
rcrb
arpl
jns
mov
ja
pop
dec
cld
jne
incb
mov
xor
xorl
ss
aaa
sub
scas
inc
fcomps
jg
lods
in
aam
push
sub
stos
xor
mov
ja
cld
mov
pop
popf
xorl
movsl
movsb
inc
xchg
jbe
mov
lret
mov
inc
bswap
pop
cmpsb
es
push
pop
popa
rcrb
inc
mov
sub
mov
xchg
out
and
push
mov
mov
loop
lcall
xchg
xchg
sti
push
mov
xchg
jnp
push
jl
test
popa
jno
aaa
enter
cs
mov
push
test
add
cltd
hlt
jecxz
inc
ja
sub
mov
mov
pop
lds
mov
movsl
or
clc
gs
test
mov
add
dec
aad
lds
mov
movsl
or
clc
gs
test
mov
add
dec
lods
pop
lds
mov
or
call
push
fadds
xor
cltd
add
dec
aad
les
mov
movsl
or
clc
iret
bound
xor
mov
addr16
rcrl
dec
bnd
outsl
xchg
ja
pusha
xchg
pop
mov
push
fbld
out
adc
xor
sahf
jg
outsl
xchg
pop
orb
aas
mov
scas
adc
out
push
lahf
add
push
xor
jg
outsl
mov
loop
lods
aas
mov
iret
sbb
jo
data16
scas
mov
adc
in
push
inc
jno
sub
pop
add
mov
insl
or
iret
jb
addr16
mov
cmp
outsl
movsb
aaa
ss
sahf
in
ljmp
sub
xchg
mov
add
ret
fidivrs
and
addr16
bound
add
push
es
dec
stos
int3
pop
mov
outsl
insl
push
orb
mov
rclb
inc
mov
in
cmc
add
inc
and
sub
cli
jg
outsb
push
or
cmp
sub
add
das
push
popl
jae
inc
and
sbb
insl
push
orb
iret
popa
stos
inc
iret
sti
out
xchg
out
lahf
mov
xor
xchg
dec
bnd
outsl
jbe
cli
lss
add
xchg
iret
add
push
out
pop
lahf
or
mov
push
lcall
jno
jg
mov
pop
test
pop
mov
cmpsl
dec
cmpb
sti
push
out
inc
dec
imull
xor
sahf
sbb
pop
fisubl
mov
pop
mov
rcrl
lss
mov
iret
jb
out
adc
and
bnd
outsl
xchg
pop
orb
aas
mov
iret
jb
out
adc
and
xor
and
pop
shrl
faddl
jmp
adc
sub
leave
test
sub
adc
dec
pop
out
jne
xor
or
subl
adc
inc
xchg
sbb
ret
repz
add
cmp
mov
inc
popf
lea
fbld
fidivrs
loopne
inc
sub
sarb
int3
pusha
xor
inc
or
adc
std
push
mov
pop
loopne
stc
mov
lock
jne
jle
jp
xchg
cmp
or
rolb
and
push
jb
leave
ss
iret
cmp
scas
jl
sbb
adc
imul
or
leave
jno
cwtl
fwait
movsl
in
icebp
aad
cmp
xchg
stc
jge
lock
jmp
fldl
addr16
xor
lahf
mov
sub
ljmp
jle
nop
insb
imul
inc
jno
loopne
jbe
in
xor
and
cmp
jecxz
fs
loope
and
pop
lea
mov
std
iret
je
js
mov
add
bound
jge
jl
scas
icebp
mov
in
add
rcll
roll
ret
loopne
loop
xor
stc
sbb
mov
xchg
jecxz
pop
std
push
dec
push
lods
inc
jl
std
inc
cmc
lods
sbb
xor
cmp
xor
punpcklbw
push
dec
dec
sub
xor
les
jbe
ret
int3
inc
mov
lods
adc
fcmovnu
cmp
sbb
sbb
cmpsb
fistps
daa
int
cmp
and
dec
pop
xchg
dec
fdivrl
xchg
pop
out
call
mov
dec
pop
jae
jno
ss
cwtl
push
ds
out
sbb
adc
cmp
imul
xor
adc
jl
loop
adc
shrb
test
mov
je
pop
pop
fwait
jg
xchg
dec
rcll
jl
adc
fsubr
enter
and
jbe
subb
mov
stc
push
pop
xor
movsl
or
jp
test
scas
xchg
fldenv
dec
xchg
in
inc
rcrl
js
mov
jg
int3
int
adc
or
pop
mov
mov
add
dec
popf
xchg
or
xchg
mov
addr16
sub
fdiv
xchg
pop
test
arpl
and
jo
cmp
loopne
test
mov
and
sbb
aad
adc
test
test
mov
pop
push
xor
pop
popf
sbb
push
add
mov
es
mov
scas
imul
jle
shlb
dec
leave
movsl
int3
orl
je
fsubl
lds
mov
jle
std
mulb
jl
out
mov
or
lds
push
jne
push
into
push
mov
out
fidivs
lock
leave
jmp
arpl
xorb
or
mov
imul
pop
or
xor
mov
add
mov
adc
fucomp
jge
outsb
shr
push
jb
mov
mov
shlb
imul
jle
popa
fwait
inc
sahf
dec
mov
xchg
add
cmp
xchg
loope
sbb
insl
lcall
imul
rcrb
jmp
scas
pop
jae
or
outsl
dec
cli
adc
das
ja
mov
cmp
xor
in
xor
aad
adc
inc
push
dec
mov
sbb
and
jbe
lret
aaa
mov
mov
mov
dec
dec
movsb
mov
insl
out
aam
int3
dec
push
js
test
mov
cs
imull
outsb
pop
jl
sti
and
sti
loope
rcrw
int3
pop
popa
daa
dec
inc
push
stos
call
xor
aas
test
dec
or
movsl
lods
mov
xchg
lods
addl
sbb
add
cltd
inc
notb
fldcw
clc
xchg
adc
fdivs
out
push
rcll
mov
test
sub
leave
xor
arpl
jo
stos
xor
lcall
jmp
popf
cmpsl
cmp
in
or
adc
push
xorb
adc
sbb
push
es
xor
scas
mov
and
fwait
push
and
sub
lods
imul
scas
jb
negl
push
mov
mov
jbe
insl
fnstenv
mov
out
dec
fprem1
repnz
lcall
aad
cs
dec
sti
fstpt
add
cmp
stos
mov
ficomps
daa
add
sub
addr16
and
enter
push
or
mov
test
out
cmp
mov
push
inc
push
je
call
icebp
fisttpl
mov
add
pop
inc
loop
add
lahf
out
stos
mov
mov
xchg
fldl
add
jnp
je
jo
lcall
sbb
sbb
pop
mov
jp
aad
fiadds
ja
ss
lcall
xor
add
int3
adc
gs
add
scas
jne
vminpd
xchg
hlt
mov
sbb
xor
and
add
fstpl
aad
adc
lea
jle
jbe
popf
fwait
stos
clc
cli
mov
cmp
dec
push
mov
or
pop
out
int
fidivs
mov
outsl
pop
cmc
adc
inc
scas
je
fidivrl
push
pop
push
repnz
hlt
mov
push
push
sbb
jg
jp
xchg
scas
mov
loopne,pn
add
pop
and
rcrb
test
cwtl
cwtl
xchg
clc
lods
push
lfs
scas
pop
ja
push
cwtl
inc
lret
outsl
stc
dec
inc
insl
std
cmpsl
aam
xlat
mov
sahf
push
jne
jbe
dec
xor
pushf
sub
cld
cmp
dec
inc
ret
push
xchg
cmp
call
mul
call
scas
pop
push
add
hlt
nop
lret
cmp
pop
pop
cmp
rclb
inc
sbb
cmc
js
shlb
scas
xchg
filds
pop
fldcw
in
roll
xchg
cmc
adc
pusha
test
jae
push
rcr
pusha
nop
xchg
add
add
xchg
push
fisubl
test
jbe
shrb
loop
sbb
jmp
mov
xor
pop
cli
lock
ss
mov
sbb
push
aad
or
adc
aam
jns
std
adc
jnp
mov
jbe
or
ljmp
sar
rcll
fcmovu
out
jmp
ja
mov
jg
and
stc
loopne
gs
scas
iret
aad
bound
int
movb
inc
ret
add
add
ljmp
jno
out
sub
imul
lcall
shlb
lods
enter
into
sub
or
mov
mov
cwtl
iret
pop
mov
leave
cmp
push
leave
mov
loope
or
clc
jo
jno
inc
adc
jge
pop
push
insl
test
push
mov
stos
cltd
cwtl
outsb
mov
xor
fisubrl
daa
out
pop
lods
pop
fildl
sub
lcall
dec
aam
hlt
mov
pop
dec
je
cmp
mov
mov
lret
rorl
cmp
jb
subl
ret
nop
scas
cmp
lcall
gs
jne
xchg
or
cmp
jae
pop
xchg
icebp
scas
jl
push
xchg
and
push
fcompl
call
pop
mov
inc
nop
xchg
imul
jg
inc
loopne
mov
jb
and
movsb
int3
mov
mov
mov
test
cmp
sbb
sub
xchg
rolb
bound
imul
stos
push
mov
or
push
and
mov
adc
xor
jbe
cmc
aam
jle
xchg
shl
inc
loop
fs
sub
mov
push
dec
fdivl
pop
sub
xchg
mov
push
stos
orl
add
sub
push
jp
pop
pop
in
jmp
mov
mov
std
and
mov
xor
or
mov
pop
or
sbb
in
jb
imul
mov
mov
sbb
daa
mov
cmpsl
sub
jnp,pt
fs
imul
nop
cli
pop
sub
xchg
add
ret
push
xor
inc
cmp
scas
rcrl
hlt
push
es
data16
cmpsl
add
push
sbbl
cmpb
int3
testb
xor
push
push
jo
inc
pushl
and
sbb
cmp
xchg
fcmove
mov
repz
add
cwtl
mov
push
mov
mov
jecxz
enter
mov
cmc
cmpsb
and
mov
lret
popf
mov
test
call
cltd
push
xor
mov
std
or
mov
cmc
mov
inc
jb
jo
mov
jno
pop
iret
mov
stc
and
dec
mov
xor
jle,pt
je
xlat
push
push
mov
arpl
mov
scas
mov
pop
inc
dec
rcll
jb
sbb
jno
fs
inc
inc
imul
dec
test
fcomi
test
stos
sbb
mov
sub
rorl
inc
jp
mov
loop
mov
xlat
mov
imul
dec
dec
inc
cmp
shlb
call
test
inc
adc
adc
pop
jno
mov
dec
shlb
ret
push
and
jmp
lock
cmp
hlt
push
pop
scas
xlat
lret
mov
sbb
xchg
push
push
jno
mov
jb
scas
imul
arpl
cmp
stc
mov
dec
ds
sbb
sbb
jne
rclb
mulb
xchg
cwtl
dec
pop
leave
aas
loopne
fiaddl
js
dec
out
push
lret
cmp
jb
insl
sbb
bound
and
imulb
nopl
sbb
add
mov
iret
or
jno
inc
test
cli
jp
mov
cltd
cmp
push
and
ret
roll
adc
jbe
and
mov
test
into
add
mov
pop
inc
in
mov
adc
mov
mov
cmp
clc
or
add
add
pop
dec
andl
in
push
push
xchg
jl
pop
jge
sbb
in
leave
repz
das
icebp
fucomi
sub
inc
xor
dec
xor
mov
mov
xchg
in
adc
push
btr
jns
push
add
add
inc
add
mov
sub
sub
pop
inc
sub
mov
movsb
xor
adc
and
out
addr16
jp
sahf
mulb
cld
jmp
rcll
xchg
je
int3
les
jnp
xchg
inc
add
inc
data16
push
shrl
and
movsl
fiaddl
in
clc
aam
loopne
movsl
xor
pop
xchg
shl
pop
call
cmpsb
inc
mov
mov
pop
stos
shrb
xchg
pop
add
ret
sbb
inc
lcall
in
jns
jnp
push
inc
xchg
mov
call
jne
fs
gs
xchg
push
sub
sbb
push
out
decl
imul
in
cmc
push
scas
cmp
mov
dec
rcl
push
pop
jns
mov
mov
stos
jmp
outsb
pop
scas
sub
xor
fs
test
jno
mov
stos
inc
mov
xchg
xchg
mov
mov
jl
mov
iret
push
dec
pusha
or
pop
lock
pop
fcmovu
sub
lahf
es
int
inc
dec
push
popl
mov
scas
pop
insl
sbb
pop
inc
mov
imul
pop
cwtl
shlb
js
imul
scas
cmp
fisubrs
push
scas
sub
inc
mov
xchg
jo
jbe
out
push
jbe
xchg
adc
mov
jo
lret
sbb
pop
incl
cli
clc
sub
jns
or
mov
rolb
jb
mov
gs
and
fistl
sub
jl
push
out
inc
loope
pop
sub
xor
xor
sarl
cmp
xor
mov
dec
mov
cmp
pop
mov
filds
jmp
pop
das
adc
pop
jne
jmp
nop
int3
dec
ret
cmc
push
pop
in
mov
jne
jno
xor
xor
adc
pop
outsl
xchg
fucom
lret
xor
icebp
cltd
inc
xchg
inc
mov
jae
dec
pusha
mov
pop
or
sub
pushf
rclb
mov
inc
xor
push
cwtl
insl
mov
addr16
push
subb
aad
cmp
mov
idivb
xor
cmc
lcall
loopne
jl
mov
movl
scas
js
push
push
rcrl
or
fnclex
jl
jns
lds
xchg
call
add
push
iret
xchg
jle
mov
cmp
fcmovnb
mov
push
stos
aaa
insl
pcmpeqb
pop
lods
jmp
and
cs
adc
sub
inc
sbb
xlat
enter
shr
inc
out
out
pushf
jne
adc
push
std
inc
xchg
jns
jae
push
rorl
shll
inc
stc
fsubrs
jmp
cmp
bswap
mov
addb
push
lods
push
mov
adc
push
push
std
mov
dec
setae
test
unpckhps
nop
imul
mov
cld
xchg
pop
adc
or
sbb
push
jmp
pop
mov
jmp
arpl
out
lret
out
popa
pop
test
data16
enter
rcll
mov
test
xor
inc
sti
mov
mov
adcl
mov
push
mov
push
fwait
push
and
ljmp
mov
pop
adc
and
sahf
mov
lcallw
int
mov
push
mov
das
xor
fnstenv
testb
sub
loop
sti
dec
adc
int
adc
in
mov
sub
mov
add
jle
stos
cmp
jnp
push
es
pop
adc
std
into
pushf
dec
and
jmp
or
dec
iret
aam
sub
pop
dec
inc
lds
sahf
mov
add
idivb
das
dec
sahf
add
mov
inc
scas
push
hlt
fcomp
mov
in
mov
enter
dec
enter
test
xor
mov
sub
adc
pop
ds
adc
pop
popf
and
pop
outsl
data16
sub
ss
hlt
jecxz
aas
aam
add
dec
xor
dec
dec
xor
data16
int3
aad
into
ret
nop
xor
pop
xchg
mov
mov
sub
sbb
in
inc
lods
popf
pop
inc
xor
stos
inc
rorl
jmp
hlt
xor
fidivs
std
cmp
xor
les
mov
iret
aaa
and
ret
hlt
mov
daa
mov
sub
fsubrp
lcall
cmp
push
outsb
mov
adc
mov
push
sub
or
sbb
cmc
inc
lds
xor
pop
or
aad
mov
mov
loop
xor
insl
cmp
cmc
pop
pushf
pop
cmp
jbe
push
push
add
cs
xchg
rol
mov
insl
fsubrs
jg
push
xchg
int3
jnp
repz
cld
cmp
pushf
sub
clc
and
bnd
nop
fstps
mov
fimuls
dec
cmp
jmp
sbb
adc
mov
cmp
sbb
push
mov
iret
test
ljmp
and
cmp
in
pop
jge
push
mov
push
sbb
test
sbb
andb
inc
inc
dec
jo
mov
xchg
dec
ret
xchg
sub
adc
out
in
mov
xor
push
out
cmpsb
cmp
push
cmpsl
leave
mov
es
sub
mov
cmp
enter
cmp
sahf
pop
sub
aaa
xor
dec
cld
or
xor
fbld
das
es
gs
lock
lret
jns
jbe
insl
cmp
xchg
scas
push
lods
mov
mov
aam
add
pop
sub
jne
sub
movsl
pop
jo
es
jp
push
insb
sbb
adc
sti
sbb
sbb
test
sbb
leave
mov
mov
lock
jl
or
ds
push
das
outsb
dec
clc
shlb
lea
sbb
sbb
pop
sets
sbb
mov
jmp
dec
aaa
clc
xlat
and
cmp
xorb
subl
pop
loopne
cwtl
stc
imul
mov
push
and
xchg
stc
cmc
adc
or
loope
in
xor
mov
fcoms
mov
ret
lret
je
sub
adc
push
jecxz
addr16
dec
sub
add
sbb
mov
adc
mov
imul
push
data16
add
jle
in
xchg
xchg
mov
sub
iret
scas
sub
xor
fstl
je
sub
xlat
insl
das
push
xor
xor
iret
popf
add
dec
mov
lods
adc
xchg
stc
outsb
cmc
outsb
divb
pop
mov
out
adcb
mov
cs
call
repz
jp
movsb
lret
rcrb
mov
xchg
xor
mov
add
sub
dec
sbb
xchg
cmc
int
outsl
test
inc
mov
fldt
jne
cmp
nop
inc
push
mov
xchg
mov
iret
push
setbe
andb
fsubl
stos
repz
fistpll
mov
or
lcall
stos
xor
in
xor
outsb
out
in
fmull
jb
sub
test
xchg
sarb
and
add
pop
das
mov
into
mov
iret
pop
mov
ss
add
mov
icebp
mov
je
out
inc
and
jp
mov
xor
cmp
popa
jg
addb
cli
push
pop
dec
mov
dec
stos
sub
mov
jmp
sarl
scas
push
mov
int
mov
add
leave
inc
out
fs
add
jbe
lret
fsubs
sbb
mov
popa
cs
inc
lea
and
ficoms
xchg
dec
in
js
or
idivb
jmp
and
fbstp
divl
push
in
aam
lea
in
inc
and
ficompl
in
outsb
xor
cs
mov
xchg
push
sbb
movsl
scas
mov
fdivs
mov
out
out
in
cwtl
es
insb
push
aad
fxch
mov
jbe
jl
cmp
mov
mov
fs
cmp
mov
rcll
mov
loop
lret
sbb
jo
and
shrl
sub
sbb
mov
andl
rolb
sbb
jg
push
or
jg
dec
jb
dec
mov
push
out
pop
out
sbb
in
les
cmp
mov
in
jp
cs
jae
call
mov
fmuls
outsl
mov
mov
push
mov
and
imul
stc
inc
push
rcrb
rorl
in
sarb
or
pop
and
adc
daa
push
daa
int
jp
mov
inc
out
into
mov
aas
pop
push
js
movsl
repz
push
or
loopne
notl
dec
adc
or
pop
xchg
cli
fs
sub
sbb
push
mov
push
inc
in
dec
add
add
xchg
inc
je
lock
sub
clc
mov
popa
or
push
cmp
lods
roll
inc
pop
daa
imul
push
pop
and
pop
das
outsb
rclb
jmp
push
xor
and
xor
pop
arpl
add
mov
ja
jnp
jmp
in
repnz
sub
rolb
dec
outsl
adc
data16
ljmp
leave
inc
mov
jns
outsl
sub
mov
sarb
jns
in
and
js
inc
stos
inc
leave
sub
inc
popa
imul
in
sbb
ljmp
cmp
cltd
pushf
das
fisttpll
rcrl
imul
sbb
mov
arpl
pop
xchg
pop
aad
pop
in
std
addr16
xlat
movsb
xor
movsl
scas
pop
dec
dec
inc
and
dec
test
add
jg
mov
mov
daa
and
mov
or
dec
gs
push
test
add
sbb
xchg
push
mov
adc
ret
xchg
mov
pushf
add
cmp
sahf
pop
call
jp
cmp
adc
cld
das
cmp
lds
inc
xchg
sub
fiadds
xchg
aam
testb
pop
pop
add
inc
aad
int3
ja
out
int
call
sub
xor
cmc
out
stc
inc
orl
or
jne
jg
lsl
into
xor
jmp
mov
rol
push
rcr
adc
xchg
push
add
adc
jl
push
test
or
sub
jle
sbb
jg
mov
jne
mov
loop
xchg
pop
orb
aas
mov
iret
jb
out
adc
and
bnd
outsl
xchg
pop
orb
aas
mov
iret
jb
out
adc
and
xchg
jmp
outsl
add
orb
pop
inc
iret
cmp
out
adc
lret
pop
sahf
dec
test
ret
pop
xchg
lss
and
push
fistpll
cwtl
gs
mov
inc
fstl
inc
call
jo
mov
test
jnp
push
pop
hlt
dec
loopne
subb
sbb
call
jo
add
inc
js
push
lock
sub
clc
pop
call
push
cwtl
cmp
repz
pop
in
shlb
mov
and
add
call
jae
add
mov
inc
popf
push
in
repz
mov
leave
adc
pop
fisubl
imul
iret
les
in
cmpsb
mov
movq
sub
dec
push
pop
dec
pop
faddl
das
in
mov
push
adc
insl
mov
rorb
int
cmp
or
clc
push
iret
scas
sbb
push
add
push
mov
mov
mov
andl
lahf
xor
gs
pop
jns
pusha
das
aad
ret
dec
push
repz
loop
aaa
cli
xchg
mov
mov
and
mov
fsubrl
or
fdivrs
jo
add
sub
push
jmp
sbb
mov
sahf
add
jno
dec
or
or
or
xchg
jge
js
mov
pushf
cmp
add
pop
fstl
or
repnz
lock
nop
jno
les
add
xor
cwtl
and
rcrb
dec
lock
or
fsubs
jo
add
xor
push
lock
or
inc
out
jb
mov
enter
lret
pop
mov
cmpsl
adc
push
and
mov
scas
in
xor
sub
cmp
xchg
mov
shll
adc
clc
and
jo
jne
or
lea
andb
jmp
aas
mov
popf
pop
insl
pop
adc
push
arpl
xor
cmp
aas
mov
push
test
dec
iret
dec
jo
mov
mov
xor
hlt
inc
pop
loopne
dec
pop
das
lods
mov
sub
adc
mov
xor
in
pop
xchg
fs
mov
add
aam
jecxz
stos
movsb
push
inc
nop
insl
sbb
mov
xlat
shl
or
cld
imul
jl
dec
xor
mov
imul
fistpl
sahf
push
negb
cmp
xchg
push
push
cmp
int3
jo
aam
je
std
push
enter
mov
sbb
out
xchg
jge
test
or
sub
cmp
cmpsl
pushf
lods
pop
pop
inc
iret
jg
scas
mov
jo
push
ja
jbe
dec
stc
and
stos
xor
call
lret
aam
lods
xchg
mov
jle
imul
sahf
jo
and
nop
jnp
fwait
or
sbb
stos
fsubrl
push
push
das
fsubs
mov
pop
insl
or
pusha
stos
mov
hlt
hlt
aad
js
dec
insl
pusha
pop
cmp
loopne
cmp
jp
and
mov
pop
pop
in
dec
leave
fwait
or
or
mov
pop
ret
enter
sbb
push
in
test
adc
mov
ficoms
aad
lock
adcl
fldcw
add
test
out
pop
inc
subl
lcall
push
ret
inc
adc
adc
scas
dec
stos
push
out
push
data16
fnsave
rclb
hlt
push
dec
or
sub
xchg
jmp
cmp
lcall
ss
mov
stos
ret
and
push
mov
jecxz
les
xchg
inc
adc
or
pop
imul
in
andb
ss
and
dec
shrl
inc
mov
iret
outsb
push
mov
push
js
daa
es
pop
pop
sarb
fwait
push
mov
divl
sbb
nop
shll
xor
adc
or
sub
out
sub
popa
aam
int
ret
dec
xchg
sbb
repz
xor
lods
jp
lret
test
xlat
push
mov
xchg
sub
out
pop
scas
lock
mov
adc
test
xchg
loopne
xchg
out
scas
or
inc
or
xchg
aas
cmpsb
bnd
test
and
sub
mov
jb
or
sbb
leave
das
ja
loopne
test
and
mov
clc
ret
arpl
pop
or
mov
loope
add
inc
mov
or
fbstp
cmp
xor
lods
mov
pop
insb
sbb
sbb
adc
inc
stos
xchg
lahf
andl
pop
mov
mov
iret
shrb
and
and
lret
jo
shrb
movsb
pop
inc
sub
mov
dec
popf
sbb
mov
inc
add
jbe
das
aad
mov
cmp
pop
pop
cmc
lods
lds
push
push
shl
es
imul
inc
pop
jnp
dec
push
jle
cmp
cmpl
and
ja
mov
push
sbb
fwait
xchg
sbb
push
aam
pusha
inc
cmp
ret
or
pop
jo
dec
xchg
cwtl
adc
decl
or
mov
push
add
inc
repnz
ds
jno
test
cwtl
xor
pop
adc
sub
out
gs
push
xchg
jbe
cmp
adc
adc
lds
dec
dec
cmpsl
mov
outsl
test
call
mov
shl
sbb
test
rorb
adc
sbb
sbb
rol
insl
sbb
or
inc
add
shll
sti
lret
jno
xchg
dec
or
lods
imul
mov
pop
jb
cmp
mov
test
lods
xchg
mov
pop
and
jb
cmp
scas
arpl
jbe
jecxz
arpl
xor
adc
fwait
and
push
stc
xorl
mov
xchg
cmp
scas
xchg
sub
adc
sahf
repz
lods
push
pop
loope
or
insb
adc
or
inc
jb
mov
pop
adc
repz
adc
cmpsl
repz
in
scas
shll
xor
xchg
fs
out
dec
dec
inc
push
mov
jl
cmp
lahf
sub
jmp
and
push
jns
jmp
cs
inc
and
or
outsl
xor
pop
xchg
sub
jno
fwait
incl
das
adcl
mov
sub
pop
cmp
repz
repnz
sbb
inc
dec
ret
sbb
xchg
and
push
inc
push
pushf
xor
mov
cld
gs
pusha
lods
push
imul
sbb
xor
xorl
mov
psubsb
push
lods
sub
push
ljmp
sub
and
scas
jo
jno
xor
daa
mov
jecxz
fisubs
or
dec
stc
inc
pop
add
repz
mov
dec
mov
rolb
pop
movsl
and
fsubr
jl
cmc
aas
mov
scas
cmp
mov
xchg
mov
mov
mov
mov
cmp
lea
psubw
imul
ja
js
inc
fmull
and
cwtl
sti
ret
push
stos
outsl
dec
mov
push
push
mov
in
mov
push
adc
mov
aaa
fsubl
inc
sti
sub
push
sbb
mov
lcall
mov
fwait
rorb
mov
adc
fdivl
pop
arpl
movsl
add
inc
rolb
jg
inc
xchg
shlb
push
cmp
pop
roll
inc
pop
and
lret
sbb
jge
dec
daa
ret
add
cmpsl
cmp
mov
test
dec
outsl
fiaddl
orb
jae
dec
loop
cmpsb
aad
rcll
fstl
nop
jo
jg
pop
cmp
lock
mov
sbb
mov
mov
scas
out
jle
lods
sbbl
rcrl
or
out
rep
shl
cmp
incb
mov
inc
test
in
pusha
insl
mull
pop
cmpb
mov
xchg
push
lock
push
mov
gs
jecxz
jns
adc
dec
mov
sub
fwait
shll
dec
icebp
mov
and
imul
mov
in
add
nop
outsl
and
fdivl
outsl
stos
enter
add
inc
cld
or
cmp
mov
dec
bt
orb
fs
or
xchg
fbstp
fistl
outsl
lret
push
mov
mov
fwait
push
add
daa
push
ret
push
lea
xor
sbb
mov
or
sub
je
xor
sarl
loope
jg
int
clc
les
xchg
fsts
add
add
ret
xchg
xor
in
addr16
mov
jb
fs
jle
in
sbb
fists
jns
icebp
enter
test
int3
outsl
dec
ss
sbb
repz
fsubrl
pop
add
jae
data16
add
xchg
sub
xchg
dec
cs
push
or
jg
pop
or
or
jge
mov
xchg
inc
movsb
ret
jnp
fildll
hlt
stc
mov
mov
cmp
ja
repnz
cs
std
mov
push
push
notl
cwtl
daa
das
jecxz
mov
mov
xchg
stc
loope
jle
sub
rcr
imul
call
test
lds
jmp
mov
jle
and
push
repz
xlat
or
lret
jbe
stos
push
int
popa
in
mov
add
pop
xchg
lds
push
xor
fdivrl
shll
scas
popa
mov
in
pop
mov
push
adc
mov
xor
out
call
cmpsb
add
push
fisubl
jnp
or
ds
jp
mov
mov
dec
outsl
or
insb
subl
dec
and
xchg
mov
ljmp
lcall
mov
pop
fsubrl
popa
sbb
mov
pushf
fiadds
mov
adcl
sub
or
nop
popa
pop
sbb
xchg
pop
jmp
mov
scas
inc
je
das
aad
jns
jle
inc
pop
rcrl
mov
out
ret
push
xor
loop
sub
shll
fwait
ljmp
loopne
flds
cmp
sub
imul
cld
cmp
rolb
jb
mov
xor
out
es
mov
mov
adc
jbe
jle
std
jp
movb
jne
and
inc
push
jmp
xchg
xchg
push
mov
xchg
popa
lret
push
pop
inc
rcrb
xor
rorl
lcall
sbb
push
loopne
adc
mov
jno
push
shr
out
aad
mov
imul
imul
jae
testb
pop
push
mov
paddb
adc
lea
xchg
fcompl
mov
inc
inc
pushl
push
icebp
test
notl
and
sbb
xchg
jnp
xchg
sahf
push
mov
lock
ds
dec
arpl
mov
or
pusha
cltd
divl
mov
push
ficompl
stos
mov
jp
flds
cmpsb
cli
mov
popf
cmp
ljmp
mov
les
or
je
mov
test
inc
pop
and
aad
mov
mov
or
test
mov
jns
sbb
adc
fcomip
pop
adc
mov
mov
or
xchg
out
addr16
lahf
repnz
dec
push
jb
std
pop
mov
pop
into
js
adc
mov
and
addr16
xchg
je
mov
push
push
jg
and
das
int
xchg
inc
mov
enter
push
mov
xchg
mov
movsb
insl
ds
in
sub
out
add
adc
push
jecxz
and
xchg
xchg
cmp
add
movsb
and
lods
push
push
push
adc
ljmp
enter
test
mov
out
lock
dec
or
or
pop
lret
add
scas
add
mov
sbb
out
fisttpll
xchg
fmull
pop
mov
cltd
lods
lds
jmp
cmp
xchg
mov
add
and
jg
jne
mov
mov
xchg
inc
xchg
fisubrs
xchg
mov
add
push
mov
jnp
movsb
popa
mov
ret
xor
jmp
or
rcrb
cmpsl
ficoms
loop
or
nop
jmp
and
xchg
xor
test
mov
in
inc
repz
inc
out
jle
sub
aas
les
sbb
xor
cmc
pop
ffreep
filds
adc
cmp
push
adc
arpl
push
stc
dec
mov
or
xor
ljmp
stos
add
or
add
mov
mov
cmp
cmp
add
sbb
xchg
mov
sbb
das
and
adc
outsl
cmp
test
push
out
pop
shll
movsb
or
bound
call
idivl
cld
fcoml
add
or
rcrb
sub
push
pop
dec
lods
jne
hlt
cmpsl
sbb
mov
hlt
lock
xor
cmp
xor
arpl
jge
jg
push
pop
push
sub
xchg
out
push
mov
mov
sti
insb
or
push
cwtl
in
gs
adc
pop
ja
mov
jno
mov
mov
pop
mov
mov
dec
xchg
imul
jl
clc
arpl
pop
fwait
int3
or
lahf
ss
push
decb
aas
arpl
xor
adc
xchg
or
fs
addb
cwtl
test
ret
fnstenv
xchg
scas
jns
inc
mov
xchg
shrb
or
cmc
dec
sbb
sbb
ss
xchg
sub
iret
imul
ja
inc
add
fnstcw
xor
clc
daa
mov
shlb
call
popa
sarb
mov
fsubl
push
pop
std
mov
sahf
mov
mov
push
push
ror
push
incb
ret
cltd
stos
rcrl
cmp
fwait
pop
pop
pusha
push
aas
stos
dec
mov
pop
scas
inc
aaa
adc
leave
fisttpl
push
mov
mov
adc
cmpsb
push
jecxz
pop
xor
or
lock
call
scas
inc
inc
icebp
lea
add
popf
les
mov
fistps
xchg
fbstp
or
jecxz
out
xchg
jae
inc
fsubrl
push
sub
into
aam
stos
hlt
push
xchg
or
adc
push
popf
adc
pop
push
inc
lods
pop
into
inc
and
aad
sub
jle
notl
leave
fstpl
imul
outsb
xor
mov
sbb
xlat
rcrl
les
add
mov
or
negl
jns
push
int
std
jge
fistl
add
mov
inc
leave
xor
adc
mov
xor
pop
aad
cld
and
inc
ret
cmpsb
mov
int3
leave
imulb
ja
push
sub
leave
inc
jb
ds
jae
adc
call
lahf
js
inc
cwtl
aas
sub
aad
xor
push
fldt
mov
push
push
cmc
shll
test
cmp
stos
jnp
xchg
jne
sbb
rcrb
push
mov
in
negb
inc
out
inc
rorb
xchg
fbstp
inc
jae
adc
jmp
aam
xor
mov
out
add
hlt
mov
add
mov
inc
jno
adc
sub
aaa
pop
mov
pop
cmp
cmpsl
jle
and
cs
mov
bound
or
sub
xor
inc
divb
mov
xor
lods
jge
movsb
icebp
and
jo
mov
inc
add
xchg
sub
fwait
insb
cmpsl
xlat
outsb
in
outsb
mov
xchg
sahf
cmp
pop
btc
lds
sbb
xor
sbb
mov
sub
das
mov
aad
jnp
mov
in
scas
mov
outsb
jl
lds
daa
into
sub
and
mov
in
cmp
and
nop
and
sahf
arpl
inc
dec
dec
call
mov
xor
xor
mov
clc
rolb
jl
mov
cmpb
aas
push
sub
cli
inc
es
cmp
inc
outsb
jae
ret
inc
clc
in
mov
cmc
lods
loopne
imul
lock
push
mov
loope
push
sub
in
idiv
jno
mov
xchg
and
pop
push
jge
sub
mov
or
push
sub
add
push
xchg
jmp
in
cmp
leave
imul
jns
xchg
movsb
add
insl
jo
dec
adc
pop
push
in
mov
enter
push
jle
mov
mov
shlb
inc
ror
xchg
test
ss
in
jns
dec
or
cltd
push
mov
mov
mov
into
dec
mov
cli
lcall
add
and
jne
mov
or
jmp
add
sahf
in
and
inc
sub
popf
scas
push
xor
out
lahf
movb
or
popf
stc
pop
adc
cld
sbb
cltd
aaa
addr16
fsubr
scas
jecxz
adc
imul
outsb
cmp
in
arpl
movsb
push
iret
lea
sub
cmp
mov
sub
jmp
mov
insb
adc
mov
mull
rcl
cwtl
popw
mov
sub
and
ret
add
fmul
push
gs
xor
out
jle
lea
cli
mov
das
push
jl
cmpsl
add
inc
lods
js
ja
pop
sbb
loop
push
inc
xchg
xchg
test
push
add
ret
lods
push
clc
push
push
xlat
shrl
inc
test
xor
cmp
fistpl
mov
mov
stos
push
imull
mov
dec
xorl
movsb
dec
ficompl
pop
aad
cmc
movsb
pop
pop
push
movb
sahf
or
xchg
cmpsb
lock
sbb
cwtl
push
movsb
mov
or
push
xchg
jo
pop
clc
sub
lods
shlb
xchg
push
fstps
shrb
pop
repnz
dec
cmc
leave
int
add
je
sti
in
push
push
xchg
outsb
add
xor
aas
data16
stc
xchg
sti
cmp
cmp
test
push
mov
push
inc
or
dec
lret
sti
out
sbbb
cmpsl
mov
ret
and
negl
leave
fwait
dec
inc
in
stos
adc
cmpsb
ja
cmpsb
push
mov
xor
mov
rcrl
fimull
es
enter
int3
shlb
in
or
orl
call
out
out
xor
add
aad
incb
mov
pop
pop
adc
mov
adc
and
mov
jecxz
xor
jecxz
imul
loopne
and
scas
add
cs
sub
fstpt
test
mov
mov
mov
lods
pavgw
push
push
iret
jne
pusha
out
arpl
sub
xchg
mov
fbstp
repz
mov
xchg
xor
lods
test
ficoml
push
and
jb
je
sbb
xor
push
lock
xor
ret
in
push
rcrl
or
insl
or
adc
or
movsl
icebp
lods
lods
jno
std
mov
and
or
cmp
repz
andb
push
xchg
frstor
and
sbb
sbb
mov
pusha
push
ret
mov
lmsw
adc
push
xor
bound
add
pusha
imul
or
xor
fistpl
pop
add
les
inc
call
inc
ds
cmp
xor
add
aad
mov
sbb
dec
mov
pusha
cs
icebp
sub
int3
bnd
dec
lret
push
dec
mov
aam
mov
test
sbb
mov
push
cwtl
scas
mov
out
sbb
in
push
pop
js
cmp
xlat
sti
push
xchg
out
mov
ljmp
inc
jle
sub
scas
jg
out
xchg
dec
sbb
scas
in
popa
jmp
fcompl
xchg
loope
xor
fwait
mov
jg
xor
adc
fwait
fs
cmp
pop
push
in
xlat
jmp
cmc
adc
test
lock
pop
pop
mov
pop
jge
shl
stos
rorb
pop
lret
pop
pop
xchg
pop
pop
jns
push
pop
out
dec
pop
dec
loop
shll
mov
jl
testb
filds
in
in
add
bound
push
dec
out
hlt
inc
arpl
and
jno
pushl
mov
sub
push
mov
mov
push
ret
and
or
sbb
test
pop
pop
jle
dec
aas
xor
outsb
test
add
lahf
pop
push
shrb
cmp
dec
jmp
ljmp
je
divb
sahf
mov
jmp
imul
inc
adc
mov
or
xor
xor
fbld
lock
test
or
xor
jnp
mov
lahf
stos
test
dec
or
push
xchg
shr
and
testl
js
xchg
hlt
or
mov
mov
clc
rolb
sub
push
ds
cmpsb
adc
cmc
out
xchg
cmp
push
outsb
and
bswap
jecxz
jmp
dec
lcall
sarb
push
sbb
jae
hlt
and
xor
or
mov
xchg
jmp
mov
out
mov
jb
pop
in
add
iret
xor
adc
mov
and
std
ja
fcompl
cli
imul
pop
sbb
add
dec
sti
jecxz
fsubs
mov
cld
ljmp
push
pop
xor
shlb
pop
jge
dec
out
push
adc
je
adc
test
lea
pop
je
mov
adc
mov
repnz
jge
xor
sahf
mov
or
push
add
jae
hlt
pop
and
and
mov
call
test
sub
outsl
mov
and
sub
loope
mov
movsb
stos
fst
dec
les
sub
loope
xor
inc
dec
out
test
loopne
inc
xchg
pop
jb
xchg
jb
arpl
push
sub
cld
out
insl
sub
test
aaa
cmp
scas
mov
and
xchg
mov
cmp
mov
inc
cmovle
shlb
in
add
lret
mov
xor
fnstcw
ss
loop
pop
andb
cld
or
mov
rcl
repnz
cs
popa
emms
cmp
and
nop
js
jno
cs
xor
add
mov
movsb
nop
dec
movsb
lcall
cmpsl
adc
test
add
add
mov
cld
cmp
sub
push
out
enter
test
cwtl
and
rcrb
dec
lock
or
fsubs
jo
add
xor
push
lock
or
fsubs
jo
add
xor
push
hlt
cmp
or
fs
test
sbb
or
xchg
xchg
jp
loopne
xchg
mov
iret
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
add
adc
and
xor
push
and
sbb
xchg
mov
rcl
ret
repnz
adc
add
xor
and
push
inc
bound
push
adcb
mov
loop
repnz
adc
add
xor
and
push
inc
bound
arpl
mov
ret
lahf
xchg
xchg
pushf
xchg
pop
pop
jbe
and
inc
mov
fldcw
adc
sub
jae
xchg
mov
or
daa
dec
adc
scas
mov
sti
vfrczsd
jl
dec
dec
mov
ret
rcrl
push
add
ret
and
push
daa
jmp
xchg
movb
sub
incl
sahf
adc
dec
xor
push
inc
inc
out
jb
movq
jl
jne
es
xchg
jecxz
shl
cld
ret
cs
push
lods
loope
aaa
arpl
les
xchg
subb
decl
adc
sbbb
out
stc
jb
aad
bound
xchg
ret
cmpsl
repz
into
adc
add
xor
and
push
inc
bound
arpl
mov
mov
loop
repnz
inc
adc
dec
jb
bound
and
push
push
jo
and
lcall
rolb
jg
outsl
inc
jnp
inc
inc
adc
push
sbb
dec
out
ret
icebp
mov
mov
push
mov
adc
push
pop
pop
push
popa
push
inc
bound
arpl
mov
mov
loop
repnz
adc
add
xor
and
push
inc
bound
arpl
mov
mov
loop
repnz
adc
sub
cmpsb
push
rorb
mov
je
mov
test
dec
stc
sbbb
adc
jl
test
sbb
gs
jne
adc
hlt
add
lret
mov
mov
movb
roll
orb
test
cmpb
int3
adc
sahf
das
fs
out
adc
loop
scas
in
int
pop
xchg
in
and
jno
lea
movsl
mov
ror
dec
enter
jno
int3
pop
cmp
scas
movsl
lcall
dec
cmpsb
dec
cmp
sub
or
dec
push
pop
mov
fnstcw
dec
andl
inc
sbb
insl
cmpsb
out
shl
mov
jae
sarl
in
push
xor
cwtl
movsl
push
sub
in
mov
movsb
lods
xchg
sub
push
xchg
cmp
ljmp
call
sub
stos
add
inc
push
xor
sbb
lock
jnp
jno
mov
mov
adc
pushf
rcl
sub
and
outsl
or
adc
or
test
push
sti
xor
cmp
test
sbb
ret
addr16
mov
sub
decb
negl
xor
leave
xchg
icebp
inc
xlat
mov
ja
fcmove
pop
pop
insb
and
jge
mov
jmp
movsl
mov
icebp
addr16
into
nop
sub
shl
jnp
arpl
lods
and
add
addl
in
dec
aad
stc
fadd
andl
imull
fdivrl
out
sub
pop
jne,pt
fldl
sbb
data16
sbb
mov
adc
push
mov
pop
popa
mov
sbb
inc
xor
push
xor
inc
repnz
add
stos
push
jno
xchg
test
or
jb
xor
jg
pusha
and
in
dec
or
inc
out
mov
movsb
js
or
test
js
cmpsl
and
rol
lea
sti
sub
sbb
arpl
sbb
sub
notb
add
mov
icebp
or
jnp
mov
jmp
cmp
in
inc
mov
in
hlt
pop
cmpsb
push
and
adc
imul
sarl
pop
push
xchg
dec
enter
jmp
cli
lahf
push
in
dec
push
stc
sub
cmp
fsts
push
mov
lods
sbb
mov
cmpsl
lea
and
loop
rcrb
outsl
sub
sbb
mov
xchg
ret
jl
mov
out
scas
push
je
mov
iret
loopne
lcall
lods
jne
mov
push
mov
test
int3
fdivrs
push
ret
push
adc
inc
data16
adc
add
xor
sub
cmpsb
cmp
and
loopne
cmp
pushl
repz
scas
pop
int3
xchg
push
jbe
stc
ss
mov
scas
std
out
popf
or
repnz
lock
enter
inc
push
mov
adc
adc
mov
loopne
or
gs
jne
stos
or
nop
mov
push
aam
push
dec
jno
mov
repz
xchg
rcrb
std
lea
adc
fbstp
js
jbe
rorb
mov
add
xor
push
fwait
lock
push
fdivl
xor
movsb
icebp
popf
sub
fwait
mov
sub
in
aas
mov
inc
push
push
cli
push
cmp
aam
loopne
lret
and
std
sbb
andb
cmpsl
pmuludq
out
inc
sbb
cmp
mov
out
xchg
jns
cmp
and
mov
fldenv
aad
or
loope
lret
es
sbb
inc
sbbb
sahf
jns
jnp
scas
pop
arpl
sahf
xor
dec
pop
arpl
or
lds
je
and
mov
cmp
lock
enter
test
add
and
xchg
and
out
push
aam
push
mov
iret
or
mov
fnstcw
dec
jmp
call
dec
fcmovbe
aas
outsl
jb
sarl
imul
mov
and
xor
ret
sbb
and
mov
pop
hlt
sti
xchg
inc
jg
add
inc
mov
push
pop
cld
mov
dec
adc
insl
push
cld
mov
add
or
add
idivb
std
inc
aaa
xbegin
sahf
les
add
xor
icebp
push
mov
fimull
cwtl
test
daa
ret
xchg
movsl
lahf
lahf
sub
pushf
dec
mov
xchg
mov
xor
jno
inc
cli
fisubl
jle
sbb
fldt
push
dec
adcl
inc
and
push
arpl
in
imul
test
out
jo
jb
aaa
jp
mov
dec
mov
xlat
jp
bound
xchg
jmp
outsl
fidivrs
jl
jb
mov
inc
xor
in
and
adc
mov
jecxz
test
adcb
inc
stc
aad
out
cmp
mov
imul
ja
and
mov
xchg
dec
loope
arpl
add
sub
cmp
stos
clc
sbb
jnp
cmp
cmp
cli
sbb
inc
icebp
mov
jg
adc
enter
lock
or
and
imul
les
adc
or
test
add
int
ficoms
jno
pop
ret
inc
jge
mov
add
in
test
inc
jne
xchg
mov
outsb
xchg
aad
adc
out
jno
and
cwtl
dec
cltd
jo
das
adc
mov
push
push
push
dec
jg
lret
test
fdivrs
cmp
stos
stc
and
insb
jbe
dec
enter
xchg
push
add
xchg
inc
or
ficoms
nop
cmp
sub
dec
ret
mov
push
mov
adcb
test
lock
push
sub
fnstsw
lods
inc
orb
ret
sub
jns
orl
push
out
fisttpl
pop
adc
adc
cltd
mov
or
ss
sti
jmp
bound
cmc
in
inc
int3
cwtl
cmc
loope
or
push
push
rorl
frstor
ret
inc
leave
mov
test
icebp
inc
fdivrl
cmp
js
sbb
mov
test
jne
cmc
stc
push
mov
push
jb
cmc
mov
scas
mov
dec
and
dec
pusha
fstps
lods
jne
movsl
or
push
test
xor
addr16
lods
dec
mov
mov
addr16
xchg
ljmpw
sahf
pop
mov
or
paddsb
in
je
push
jbe
lcall
notb
jle
sbb
inc
xchg
mov
test
push
mov
jg
aas
mov
stos
mov
jnp
lret
imul
jle
lods
movsl
arpl
jb
pop
xchg
xchg
sub
xchg
loopne
shrb
xchg
dec
mov
sub
outsl
xor
jge
ret
fiadds
imull
gs
adc
repnz
lcall
sbb
lret
movsb
imul
dec
or
fwait
xor
sub
icebp
repnz
aam
push
xchg
nop
mov
and
pop
cltd
js
sub
arpl
outsb
ror
cmpsb
fsubrs
mov
push
das
icebp
int3
adc
ret
notl
xchg
mov
fs
mov
movsl
data16
inc
in
cmp
inc
mov
mov
xchg
mov
fimull
sti
enter
jge
mulps
dec
shlb
cmpsb
ds
inc
mov
and
inc
dec
add
pop
jg
insb
int3
daa
inc
notl
xchg
xchg
pop
pop
mov
pavgw
sahf
pop
add
add
in
inc
mov
faddp
imul
pop
push
punpcklbw
imul
lods
cmp
mov
mov
xchg
ret
mov
pop
xor
cmpsb
popf
sbbl
aaa
test
mov
call
cltd
mov
push
push
pusha
in
lcall
adc
or
sub
sbb
xor
xor
add
rorb
addr16
shl
add
idivl
stc
mov
and
mov
out
xchg
js
loopne
into
jo
hlt
sub
jne
sti
movsl
into
mov
xchg
mov
pop
adc
pop
pop
insl
dec
ljmp
cmp
js
idivl
in
cmp
xchg
push
adc
test
stos
aaa
or
xor
clc
sbb
xchg
dec
pop
stos
stos
aam
lahf
lds
aam
dec
pusha
test
je
inc
xchg
mov
popa
jge
out
dec
in
loop
xchg
les
push
test
pushfw
mov
enter
add
mov
mov
adc
fs
fdivr
cmp
test
xchg
jge
fbld
out
xchg
fisubrs
inc
add
js
mov
ja
loope
stos
push
out
addr16
mov
xchg
mov
and
cmp
mov
add
xchg
outsl
pop
cli
mov
jecxz
bound
jmp
arpl
testl
and
mov
mov
jecxz
cmp
stos
scas
adc
pop
pop
xchg
or
adc
sqrtps
nop
cmpsl
and
pushf
scas
cmp
fdecstp
gs
pushl
je
ret
jmp
xor
test
daa
jae
add
inc
adc
ljmp
in
add
push
jae
in
fcmovnb
pop
dec
sbb
push
cwtl
mov
dec
xchg
pop
rclb
push
xor
or
adc
rclb
jbe
add
mov
jge
sbb
adc
jle
fisubl
aam
push
out
add
cmp
push
mov
jmp
mov
mov
in
adc
xchg
jle
mov
xor
lret
or
inc
xchg
cmp
xchg
stc
js
cmp
jns
jns
stos
pop
xor
add
cmc
sbb
xlat
pop
iret
lods
mov
loop
cltd
and
sarb
push
int3
test
in
push
push
xorb
jmp
rcll
into
movsb
pushf
jns
sbb
clc
sub
es
ds
scas
push
das
sub
xor
je
add
adc
inc
and
sub
push
pusha
cmc
push
imul
push
mov
sbb
fisttpll
xor
insb
jmp
mov
mov
loope
sub
mov
movlhps
jle
pop
lahf
mov
mov
inc
inc
jl
push
imull
fisubrs
jmp
test
inc
mov
ds
iret
data16
xchg
cmpl
cmc
jg
adc
out
loopne
das
add
jb
and
insl
aam
push
out
jmp
push
push
push
inc
push
fstps
sub
testb
inc
adc
fs
xor
push
lods
xor
xchg
xchg
push
push
icebp
aas
das
sub
test
lods
pop
jp
cmp
test
in
rorb
test
dec
ror
pusha
out
shrb
arpl
mov
sarb
ljmp
fsts
nop
and
mov
shl
bound
sti
orb
or
mov
mov
sbb
or
fs
or
mov
cmpsb
sbb
cmp
lret
clc
hlt
sub
ret
and
push
test
bound
jne
mov
pminub
jge
out
and
inc
xchg
inc
mov
jmp
jb
shll
lds
and
xlat
cli
and
out
xorl
push
dec
fsubrs
adc
fdivp
popa
and
xchg
adc
inc
fiaddl
scas
int3
xchg
fsubl
xor
mov
leave
xchg
and
stos
cltd
sub
pop
xor
or
pop
stos
jl
out
fsubrs
mov
pop
jne
stos
fisubrs
add
cmpsb
fldl2t
xchg
cwtl
push
adc
push
aaa
sub
lods
cmp
xchg
sub
cltd
cmpsl
mov
mov
jbe
pop
sub
add
sub
jl
mov
jle
and
mov
fisubrs
pop
push
fs
dec
mov
cmp
testl
push
jp
dec
ret
inc
adc
bound
xor
outsl
mov
out
mov
mov
faddp
sbbb
repnz
test
cmc
sub
adcb
mov
test
aam
out
js
mov
jl
hlt
out
leave
push
cld
popa
mov
inc
decl
adc
dec
sub
out
sbb
lock
jne
out
add
mov
inc
sbb
outsb
xor
or
imul
pop
add
gs
sub
das
jge
push
jg
leave
mov
icebp
pusha
adcb
test
mov
or
test
xchg
and
pop
xor
insl
aad
adc
dec
sub
out
and
es
inc
sub
daa
lock
dec
pop
enter
repnz
pushf
jnp
xchg
xorl
out
out
cld
mov
adc
mov
add
je
ja
xchg
es
mov
mov
lds
lret
mov
out
adc
in
pop
stos
mov
lods
insb
shl
dec
push
cld
sbb
and
in
cmp
in
xchg
cwtl
aam
pop
dec
test
data16
popa
iret
push
mov
cmp
repnz
push
orl
push
leave
xchg
ficomps
test
dec
and
inc
dec
mov
cmp
gs
mov
js
lcall
call
push
test
cld
cli
or
imul
insb
pop
sub
inc
enter
jno
movsb
out
mov
adc
and
nop
call
lock
cwtl
ret
lds
scas
push
fstpt
mov
xor
sarl
adc
push
test
adc
push
loopne
mov
test
mov
jno
movb
mov
mov
cmc
incl
mov
in
out
ds
jecxz
jmp
jp
mov
mov
out
fstps
lcall
lret
call
adc
sti
fimuls
add
and
repnz
inc
sahf
or
xlat
xor
lock
icebp
sarb
out
into
ficompl
inc
icebp
cld
lods
sbb
pop
cmp
cmp
and
cli
int
push
sti
adc
mov
adc
pop
mov
mov
out
aas
mov
push
int
mov
dec
mov
xchg
or
mov
xchg
shl
mov
daa
add
int
xchg
movsb
fcmovnbe
hlt
addr16
fwait
leave
push
dec
sbb
mov
mov
imulb
fldcw
dec
inc
sub
andb
mov
insb
push
enter
cmp
scas
lahf
rcrb
insb
arpl
cmc
fsub
insl
in
xchg
in
mov
adc
in
loop
sarl
pop
push
cmp
pop
insl
fistpl
dec
jecxz
xchg
jo
xor
xor
mov
jle
test
pop
lcall
aas
jl
inc
sahf
xor
stos
cmp
dec
fstpl
sub
push
int
mov
sbb
int3
loope
jp
in
add
fucomp
pop
push
jne
jno
push
imul
xchg
or
aaa
mov
push
mov
jg
jle
call
sarb
adc
pop
inc
daa
adc
or
cltd
dec
add
ret
lcall
xchg
sahf
mov
jp
repnz
sub
sub
popf
pop
lcall
jo
xchg
notb
mov
sbb
xchg
inc
jmp
or
in
add
pop
out
insb
dec
xor
push
lcall
push
loop
lret
aaa
adc
mov
inc
mov
mov
xchg
adc
sub
movsl
lods
out
push
cmpsl
in
fcoml
or
sub
roll
rclb
clc
push
adc
xchg
mov
lds
cmp
push
xchg
aam
cs
xchg
sbb
clc
xchg
sbb
lea
pop
aaa
cmpsl
mov
mov
insb
jns
jne
repnz
push
xchg
fwait
shlb
sahf
dec
jae
mov
testl
pop
xor
nop
adc
notb
pop
xlat
mov
adc
sbb
aas
mov
jle
inc
iret
subl
mov
push
bound
inc
rcrb
lea
jmp
lods
xchg
push
int3
push
sarl
cld
inc
mov
lret
inc
adc
cwtl
inc
xchg
mov
adc
push
test
push
repz
xor
int
ja
subl
mov
jno
push
push
mov
xchg
jmp
call
xor
mov
lock
mov
out
jb
cmc
cld
push
mov
inc
rcrl
pop
jae
cmp
mov
rclb
xchg
xchg
imulb
dec
out
sbb
clc
in
bnd
incl
pushf
xorb
mov
ds
mov
adc
shl
jecxz
xor
jge
addr16
fsubrl
inc
add
test
mov
fsts
arpl
jge
shl
inc
pop
rcrl
fidivs
dec
test
ret
mov
hlt
test
pop
xlat
xchg
or
mov
daa
sub
cmp
jns
mov
inc
outsb
dec
lock
test
scas
jl
push
cmp
aam
cmc
rclb
sbbl
and
repz
xchg
fwait
jmp
cmp
pop
mov
and
ja
xchg
mov
imul
jae
xor
jno
jmp
xor
arpl
test
nop
dec
lahf
fbld
xor
pop
add
fisubrl
aad
test
lods
cli
stc
stos
es
jne
push
test
jmp
cmpsl
cmc
jp
shlb
sbb
pop
lret
pop
and
mov
jle
push
push
and
pushf
jg
mov
insl
imul
and
cmp
sahf
and
repnz
xchg
je
xchg
adc
push
push
sub
ds
xor
mov
cwtl
stos
pusha
inc
cmp
mov
adc
lret
sub
xor
adc
loope
pusha
push
pop
out
lret
lahf
jmp
and
or
cmp
notb
xchg
repnz
mov
scas
sti
gs
cld
pop
out
inc
sub
les
dec
jle
pop
lock
stc
mov
sub
xchg
je
jbe
add
mov
jle
sbb
sbb
xor
sahf
push
out
lods
test
xor
sub
outsl
fisubrl
mov
divb
fsubr
aas
mov
cmc
scas
lods
cmp
xchg
sbb
pop
jns
icebp
cmp
mov
jb
movsb
movsb
jnp
push
lret
adcl
arpl
push
lret
sbb
xchg
adc
jmp
or
lahf
ret
mov
jae
int3
out
or
daa
pop
in
sbb
xchg
int
push
out
inc
lods
aad
cmpsb
cwtl
data16
addb
cli
adc
imul
outsb
dec
dec
shrb
mov
push
je
sbb
cmpl
fsubrl
enter
xor
ret
rcrb
mov
ds
shrl
rol
push
mov
popa
and
cmp
lods
xorl
adc
popf
jnp
inc
push
out
pushf
adc
mov
xchg
xchg
mov
cmp
and
mov
cmp
adc
or
fists
dec
push
in
aas
rcrl
mov
nop
das
mov
fisubrl
pop
aaa
fstps
cmp
jle
dec
or
push
mov
dec
mov
push
inc
test
sub
cwtl
cmp
pusha
gs
mov
inc
aaa
inc
push
popf
dec
cmp
sub
leave
lcall
and
pushf
jmp
mov
outsl
xor
dec
inc
jno
jecxz
push
flds
mov
jns
jle
jecxz
inc
xchg
aaa
call
sbb
ret
and
iret
inc
pop
jnp
loopne
and
ja
sub
pop
je
inc
outsl
andb
orl
jp
cmp
push
test
sbb
cmp
out
cmovae
les
mov
push
inc
add
andb
cli
inc
cmp
fisttpll
mov
inc
pop
pop
ficoms
push
or
or
addr16
push
icebp
cmpsl
arpl
and
popa
add
loop
loope
loope
clc
bnd
in
clc
mov
inc
mov
pop
sub
inc
je
movd
les
call
das
adc
xor
mov
sbb
popf
push
cmp
push
and
mov
pop
inc
push
xor
sub
sbb
lods
cltd
xchg
fwait
into
jge
jno
ljmp
aad
cmp
lahf
sbb
add
lret
insl
or
and
mov
dec
fisubrl
out
ja
movsl
imul
addb
test
cwtl
and
aas
jns
or
rcrl
sbb
insb
and
and
xor
inc
push
push
inc
bound
arpl
mov
mov
loop
repnz
adc
add
xor
and
push
inc
bound
arpl
mov
mov
loop
repnz
adc
and
push
push
inc
bound
arpl
mov
mov
loop
repnz
adc
add
xor
and
push
inc
bound
mov
or
mov
sbb
lods
in
aad
lds
out
mov
je
gs
xor
dec
add
mov
mov
movsl
std
xchg
int
movsl
gs
dec
sbb
adc
lods
cld
mov
lods
in
mov
push
or
jl
cmp
dec
and
pushf
fimuls
popf
out
movsl
clc
push
inc
inc
push
repz
sahf
dec
fadd
sbb
insl
int
xor
je
sbb
lahf
in
movsl
js
lds
xlat
lock
dec
ret
mov
mov
dec
cli
or
lods
sbb
jbe
and
ds
mov
jnp
mov
push
enter
fnstcw
enter
call
loope
dec
dec
movsb
cld
push
test
shlb
mov
sbbl
push
adc
mov
std
jne
mov
sbb
ds
mov
xchg
popf
cmp
dec
in
cmpsl
xor
mov
outsb
sub
adc
cs
lods
cld
mov
mov
int
cmp
sub
dec
add
cld
mov
mov
mov
xchg
fmuls
or
push
inc
sbb
push
fdivrs
andl
inc
push
pop
add
xor
sbb
nop
jmp
lods
clc
std
ret
movsl
std
xchg
int
fnsave
gs
xor
dec
add
mov
mov
movsl
std
xchg
int
fnsave
gs
xor
dec
add
aad
pusha
mov
fstps
inc
lahf
push
les
js
mov
lcall
imul
fstps
lcall
scas
cmpsl
jb
add
push
rcll
or
shl
mov
test
xchg
add
lcall
lods
lcall
push
mov
icebp
rorl
xchg
popf
push
jne
jmp
push
cmp
cld
mov
fcoml
rcrb
push
mov
sbb
mov
out
or
loopne
mov
push
outsl
dec
pop
pop
outsw
and
mov
mov
sub
xlat
test
dec
data16
xchg
fldcw
flds
loop
mov
loope
sub
or
insl
ds
push
and
mov
gs
push
sbb
jae
inc
add
repz
sbb
mov
adc
xchg
and
inc
lds
aad
notl
jo
jecxz
mov
test
scas
pop
adc
sbb
mov
mov
pop
stc
cmp
fsubr
add
pop
lret
mov
adc
int
pop
movsl
push
sub
pop
add
repnz
push
rcl
jne
fisubl
sbb
scas
cwtl
inc
jo
scas
pop
mov
add
sub
mov
sbbb
mov
icebp
xchg
adc
sbb
test
mov
movsl
jecxz
pop
sub
or
mov
insb
aas
arpl
outsl
cmp
jmp
mov
mov
sbb
call
jl
and
mov
and
add
cmpsb
dec
xchg
mov
lahf
xor
in
and
call
mov
addr16
aaa
push
add
ss
shrb
xlat
xor
mov
ljmp
imul
lds
scas
imul
dec
push
pop
inc
nop
or
shlb
clc
mov
push
inc
insl
pop
mov
xchg
inc
adc
dec
lock
ret
in
jae
xchg
cld
out
jp
xor
sbb
cltd
xchg
cmp
out
hlt
cmp
cmpsl
ss
xor
jns
xchg
xlat
pop
dec
pop
adc
mov
leave
fidivrs
pop
stos
repz
mov
scas
lods
fstpt
push
cmp
xchg
negl
notl
push
push
push
mov
ss
dec
loopne
sub
dec
xchg
dec
clc
push
es
push
inc
aad
xlat
or
arpl
data16
push
mov
fiaddl
push
arpl
inc
and
rclb
lock
out
and
xchg
scas
mov
jge
mov
fwait
pop
xchg
sub
mov
cmp
fisubl
mov
xchg
or
dec
xor
pop
cltd
mov
mov
push
ficoms
mov
mov
jge
shl
fldcw
xchg
lds
les
jae
fadds
out
lods
cli
cwtl
out
inc
sub
inc
xchg
test
mov
popf
repnz
imul
jnp
call
jecxz
xor
stos
ja
xor
jne
aas
rcll
add
cwtl
test
outsl
gs
fsubrl
xchg
sub
jmp
and
sub
scas
test
push
pop
int
adc
push
inc
push
cmpsl
out
pop
inc
ret
test
push
outsb
or
enter
fucomp
cltd
dec
mov
int3
imul
xor
pop
mov
subl
inc
xor
jg
cmc
mov
std
scas
movsb
dec
into
lcall
push
out
pushf
or
leave
imul
mull
mov
inc
int
mov
sbb
arpl
cmpl
sub
xor
sub
jno,pn
aaa
call
push
sbb
in
stc
andb
pop
or
fidivs
or
sti
int3
loop
and
dec
adc
fwait
dec
sahf
dec
fidivrl
idivl
inc
cmpsl
mov
push
lods
mov
cmpsl
arpl
jmp
xlat
pushf
popf
dec
lock
add
pop
fisubl
scas
jb
xchg
cwtl
push
sub
aam
xor
mov
imul
xor
push
inc
sti
xlat
int
pop
xchg
xchg
xor
ss
inc
dec
pop
loope
fstpl
dec
test
aam
popf
outsl
mov
push
sbb
insb
out
xchg
dec
stos
dec
scas
adc
mov
jno
cmp
xchg
pop
test
enter
in
sub
popf
addb
mov
add
xor
ret
push
outsb
in
mov
lret
in
mov
inc
cmp
jl
lcall
cmp
inc
aaa
xor
jmp
cs
cmp
loope
sub
inc
mov
xor
sub
and
push
push
outsb
pop
cmp
push
std
inc
mov
and
adc
int
out
into
fdivrs
movsl
sbb
or
xor
mov
cmp
sbb
cs
loopne
pushf
ret
cmpsl
lret
jbe
cmc
or
sub
cmpsb
push
or
xlat
scas
test
xchg
dec
fs
pop
js
incb
pop
aaa
jnp
outsb
sarl
std
outsb
jbe
pop
lahf
cltd
je
repz
dec
pop
xchg
clc
fistpll
or
inc
hlt
nop
push
std
jl
jo
cmp
cwtl
adc
scas
jl
insl
or
idivb
ret
ficompl
push
data16
and
pop
and
lock
bound
dec
dec
clc
sub
mov
shlb
add
mov
xchg
addb
jno
bound
inc
adc
dec
outsl
sarb
cmp
jecxz
push
test
cmp
sub
orb
dec
jb
outsl
xchg
lea
jle
cmp
and
hlt
cli
je
data16
push
xor
cwtl
gs
shr
inc
push
mov
loope
lock
or
in
cmp
test
mov
leave
xchg
pushf
imul
or
pop
mov
lahf
or
mov
or
fldl
lret
cltd
dec
sarb
js
clc
xchg
sbb
sub
inc
fdivrp
inc
shll
dec
xor
push
push
xchg
adc
into
lds
inc
insl
scas
insb
adc
inc
sub
push
cltd
testb
clc
pop
lods
xor
movb
cmpsb
stos
ret
xchg
mov
push
out
dec
sbb
pop
push
sbb
movsl
mov
popf
test
xchg
ss
adc
jp
lret
pop
cmp
iret
scas
aas
inc
out
mov
pop
and
mov
dec
dec
stc
push
test
mov
push
in
mov
es
pop
pop
arpl
push
clc
ret
int3
inc
push
aam
pop
int
cmp
jg
adc
movsb
movsl
loopne
cmp
sub
addr16
mov
bound
les
lahf
push
iret
dec
js
filds
stos
cmp
mov
inc
pop
leave
dec
jp
ret
lock
sub
mov
outsl
lods
daa
movsl
lock
inc
jo
arpl
cmpsl
cmpsl
call
mov
xor
mov
cmp
iret
popf
sbb
cmp
xchg
dec
jns
xchg
clc
ficompl
in
test
push
adc
or
push
add
in
stos
fwait
and
sub
push
sarb
push
xchg
jbe
xchg
jnp
popf
pop
cld
clc
in
aad
mov
imul
aam
inc
mov
and
pop
stc
jno
mov
mov
mov
push
sbb
out
loope
lret
or
pop
repz
je
das
lods
rolb
repz
mov
mov
sbb
and
bound
push
clc
push
mov
cmp
xchg
sub
dec
sub
sub
sub
xchg
add
adc
iret
inc
mov
mov
jb
hlt
xchg
popf
test
lds
repz
xor
adc
pop
rcrb
mov
lock
xchg
iret
loop
push
orl
sub
cmpsl
int
add
movsb
subl
jns
iret
push
mov
push
in
test
ret
addr16
dec
imul
aam
sbb
push
pop
mov
xor
xchg
daa
aad
cmp
push
xor
cli
test
outsb
cmp
stos
ljmp
rdtsc
push
add
xor
and
sahf
lock
xchg
cmp
dec
pop
cmpl
inc
and
xchg
cltd
stc
mov
fcompl
sub
out
enter
hlt
push
or
inc
inc
lret
mov
jne
repz
cmc
loope
push
push
lcall
int3
lock
out
sub
add
lea
shlb
xor
ljmp
jb
cmp
sbb
call
push
leave
ja
pop
in
sub
sbb
inc
test
mov
loope
mov
jne
sbb
cmpsl
jns
cld
xchg
jg
je
mov
lahf
add
pop
pop
out
fcomps
dec
xlat
dec
loop
fcoml
cmp
pop
add
mov
out
jle
xorl
stc
outsl
pop
gs
scas
int3
fsubr
lret
mov
push
outsl
addr16
stos
call
push
push
adc
decl
sbb
mov
dec
pop
js
add
pop
xlat
fimuls
insl
popf
loope
fcom
jo
popa
pop
and
pop
lods
cmc
sarl
mov
xchg
out
cmpsb
jne
repnz
cltd
pop
mov
fs
data16
arpl
cld
pop
dec
sarb
cltd
inc
jb
int3
jae
dec
or
mov
les
movsl
jae
fidivs
aaa
push
sub
cs
push
shl
je
in
dec
popa
inc
mov
push
packsswb
stc
jl
or
clc
call
enter
les
insl
fnstsw
xor
adc
adc
js
leave
or
mov
out
inc
add
push
xlat
push
in
hlt
test
pop
jle
and
fldt
arpl
push
lret
rdmsr
xchg
scas
sti
push
mov
aaa
inc
add
das
cmp
sahf
xlat
jle
cltd
push
in
fwait
mov
cmp
popf
adc
cmp
xor
add
inc
lds
frstor
int3
mov
mov
cmp
sbb
sub
bound
and
arpl
in
fs
sahf
xor
push
xchg
xchg
loope
dec
aad
stos
movsb
jg
sub
mov
mov
mov
xchg
dec
fdiv
in
cmp
js
sbb
lahf
fdivrs
call
mov
sbb
arpl
mov
add
icebp
outsl
lea
mov
xchg
dec
or
cmc
push
std
pop
clc
repnz
ret
into
jl
add
ret
stos
clc
fidivl
aad
sbb
sub
add
or
mov
ret
jbe
leave
pop
or
mov
xchg
mov
mov
inc
aam
mov
mov
jp
scas
mov
cmp
je
dec
bound
jns
mov
es
push
xchg
jge
jns
nop
xchg
adc
pop
xchg
lahf
add
cmp
std
jecxz
mov
sbb
jnp
inc
push
add
pusha
loopne
jo
or
mov
sub
jne
std
mov
lock
push
push
xor
fwait
sbb
or
stc
sub
data16
push
xchg
inc
fwait
addr16
dec
ljmp
iret
dec
gs
sub
jl
and
lahf
push
dec
outsl
cwtl
stos
enter
push
loope
sbb
enter
adc
jne
push
repz
int3
es
insl
xor
cmc
rorb
pop
addb
dec
int
xchg
xlat
jge
dec
rol
adc
mov
call
sarl
cmpsb
inc
sbb
fwait
or
inc
push
mov
sarb
pop
data16
mov
stos
and
inc
fstpl
mov
push
test
pop
aaa
and
add
je
orl
ljmp
jl
push
insl
cmp
pop
mov
sub
clc
sbb
adc
ljmp
mov
sub
stos
inc
inc
je
je
sbb
inc
jg
iret
es
daa
xor
inc
fldcw
pop
dec
push
dec
cwtl
push
dec
faddp
jl
test
imul
push
mov
dec
jnp
fcmovb
je
rclb
insl
loopne
fnstenv
inc
and
ret
and
popf
adc
es
add
jmp
les
xor
add
outsl
mov
mov
movsb
andb
and
cs
push
jmp
mov
xchg
imul
add
cmpsb
xchg
inc
movsl
inc
scas
imul
jle
jle
in
add
xor
mov
test
in
dec
and
cmpsb
mov
adc
mov
js
call
jmp
mov
cmp
adc
in
pop
dec
jb
insb
xchg
cmpb
jl
xorb
adc
std
mov
jns
mov
lods
pop
shlb
ret
leave
std
sbb
xchg
rolb
paddq
xchg
xlat
pop
in
xor
rcrb
addl
dec
test
dec
fidivrl
ret
pop
rol
test
xor
stos
sahf
inc
cmp
loop
pop
popa
loope
cmpsl
mov
xor
mov
sbb
pop
shlb
movsb
jle
lahf
faddp
imul
fidivrl
mov
shrb
adc
xor
sbb
jae
enter
into
pop
jb
ret
ret
mov
leave
addr16
jge
lds
mov
adc
ficompl
gs
lret
cltd
jae
adc
sub
shlb
ss
arpl
divb
int
stos
lds
dec
ffree
and
out
and
out
dec
dec
fistpll
inc
jg
es
cmpsl
int
jle
popf
and
lcall
dec
sbb
add
movl
faddl
bound
add
aad
outsl
movsb
leave
cltd
xorb
in
jp
cmpsb
jno
push
push
lret
mov
in
mov
je
xor
jne
fadd
xor
pop
in
mov
frstor
pop
adc
mov
pop
fwait
or
adc
cmpsl
shl
cli
inc
out
in
add
mov
and
xor
addr16
ljmp
pop
jnp
imul
xor
jp
cmpsb
add
dec
scas
mov
arpl
mov
cmp
imul
lds
lret
jp
push
sbb
test
out
jne
int
repnz
and
sub
leave
dec
jle
xor
lahf
popa
mov
jg
jno
sarb
pop
dec
cs
jmp
inc
mov
ljmp
cmp
pop
push
dec
ds
jg
pop
pop
jge
inc
sarl
pop
ficomps
add
fistpll
or
fldenv
pop
adc
fistpll
sub
daa
sahf
sbb
popa
fcompl
xlat
jbe
mov
aam
cld
pushf
loop
jp
cmp
out
fwait
inc
mov
mov
mov
test
mov
mov
cld
cmp
xchg
jmp
fisttps
idivl
xchg
sub
push
imul
mov
pop
sbb
dec
cmp
add
lahf
adc
cmp
lds
mov
xchg
test
pusha
in
xchg
push
fs
popa
add
lcall
in
ret
cld
aam
movsl
shll
jno
mov
hlt
sub
lods
push
outsl
mov
imul
adc
enter
ret
insl
sub
dec
push
xchg
and
add
fbld
aaa
loopne
jmp
sarl
das
fcmovb
xchg
pushf
mov
rcrl
jp
outsl
je
aam
lds
mov
lea
mov
jo
fbstp
and
insl
aaa
sbb
loope
mov
leave
shrd
dec
dec
test
imul
mov
mov
mov
push
and
cmp
sbb
push
xorl
orl
mov
shll
test
and
xchg
fildll
pop
xchg
pop
sub
pop
scas
into
imul
js
mov
decb
ljmp
mov
mov
add
fisttpl
or
sbb
mov
adc
js
xor
mov
insl
sub
insb
repnz
pop
sahf
mov
cmpsl
fnsave
cmp
pop
ss
sbb
cmp
and
and
out
sbb
stos
mov
xor
out
fisubs
xchg
lods
in
inc
fwait
popa
lods
mov
mov
aaa
out
pop
loopne
push
xchg
jb
dec
sbb
jle
leave
movsl
sub
jmp
mov
inc
mov
jmp
adc
jecxz
loope
clc
incb
lahf
int3
das
mov
or
inc
xchg
mov
mul
les
pop
sbb
clc
fbld
shll
sub
xchg
jge
lret
das
adc
movsb
insb
add
add
fmul
mov
test
dec
add
push
cmpsl
adc
rcll
ret
scas
or
fninit
ljmp
imulb
mov
sub
push
cwtl
and
mov
je
mov
stos
xor
push
lds
into
cmc
xor
out
imul
sbb
jnp
in
push
mov
cmp
sbb
xchg
push
inc
test
in
mov
cld
out
jbe
fsubrs
and
jno
add
divl
cli
pusha
out
mov
push
mull
jge
subb
mov
xchg
inc
movsb
fistps
aaa
aas
inc
mov
pop
repnz
sbb
push
mov
mov
adc
es
push
movsl
jno
mov
stos
xchg
cmpsb
sub
rcrb
xlat
mov
sbbb
push
jns
cmp
and
mov
adc
ljmp
in
add
or
mov
dec
mov
or
mov
imul
and
push
cmp
lret
adc
hlt
mov
xorl
jmp
pop
aam
das
mov
push
sahf
stos
aam
push
pop
xchg
aas
jge
ss
inc
rorb
xor
inc
int3
mov
xor
xor
dec
or
sub
rcr
ljmp
push
and
loopne
mov
cmp
lcall
dec
nop
sub
jmp
std
mov
cmp
adc
xchg
jle
movd
into
test
xor
test
popf
testl
jg
xchg
push
push
push
pushf
es
je
call
cmp
jecxz
arpl
ljmp
jmp
out
sub
pop
xchg
jp
mov
and
push
sbb
fdivrl
add
mov
hlt
push
and
dec
lahf
shlb
mov
and
cmp
dec
or
cli
imul
out
cmpsb
punpckhdq
inc
repz
cmpsl
inc
ficoml
sbb
movsl
pop
mov
pop
dec
push
imul
and
add
inc
dec
xchg
sbb
pop
cmp
ret
xchg
jns
in
std
xchg
int
sbb
push
sbb
jbe
sub
xchg
mov
mov
adc
gs
mov
test
insb
adc
das
bound
loopne
js
mov
jg
aaa
or
cli
lahf
jo
cmp
push
aas
cltd
lahf
push
dec
cld
xchg
pusha
and
and
and
jecxz
adc
stos
cmp
test
xchg
add
imul
test
fcomp
mov
out
adc
pop
gs
int3
cmp
lds
jno
shrb
aaa
mov
or
addr16
push
push
dec
rep
mov
arpl
movb
sub
xchg
inc
fwait
sti
int3
add
lahf
sbb
js
std
inc
outsl
addb
mov
cmp
jae
insb
dec
bnd
out
lock
mov
in
out
mov
pop
dec
leave
in
fnstsw
stos
pop
xorl
lds
ds
or
xchg
fimuls
inc
ja
sub
movsl
xor
sbb
leave
jne,pt
movsb
fmuls
sahf
cltd
add
ds
subl
mov
adc
inc
add
push
jl
pop
xchg
add
xor
bound
or
loopne
int
icebp
adc
rolb
sti
orl
aam
mov
sub
outsl
je
mov
rol
aam
adc
ljmp
push
int3
int
jae
inc
sbb
data16
movsb
test
push
cs
aas
out
insb
fadds
lock
jns
stc
lahf
les
and
gs
sbb
pop
or
dec
sbb
ret
sbb
call
pop
mov
rolb
mov
rorl
mov
out
movsl
inc
pop
loopne
jp
dec
adc
mov
faddp
pop
lret
subl
push
mov
test
cmc
loop
pusha
aas
in
jbe
ljmp
enter
cmpl
daa
or
ds
leave
mov
std
pop
xchg
adc
xor
out
lahf
inc
jnp
jecxz
cmp
sbb
push
xchg
sar
jg
sub
inc
pusha
loope
subl
daa
popf
xchg
into
xchg
push
hlt
in
movsl
push
dec
add
inc
faddl
pop
addb
lcall
lds
xchg
int
fnsave
gs
xor
dec
add
mov
mov
movsl
std
xchg
int
fnsave
gs
xor
dec
add
mov
mov
movsl
std
xchg
int
fnsave
gs
xor
dec
pop
pop
cmc
lods
out
aam
lds
adc
sub
inc
push
in
sub
cli
mov
in
adc
inc
lock
add
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
jge
incb
stc
pop
es
add
add
add
push
pop
or
add
mov
mov
mov
add
add
add
add
add
add
add
data16
add
sub
sub
and
pop
add
add
add
add
add
add
add
add
cltd
add
movsl
add
add
lea
dec
add
add
push
add
add
mov
scas
add
add
add
add
popf
add
dec
add
add
mov
add
add
add
add
add
add
stos
add
add
aaa
add
enter
push
cmp
loope
aas
add
inc
add
add
add
add
add
push
xchg
data16
mov
add
add
add
add
add
roll
add
add
add
add
add
add
add
mov
scas
add
add
add
pop
add
add
push
add
jb
xor
push
add
add
dec
add
add
add
add
xor
pop
add
add
add
add
add
cltd
add
add
cmp
enter
lret
add
mov
mov
add
add
add
add
add
sub
popa
add
jb
roll
add
add
scas
add
add
add
add
sbb
add
jne
movsl
add
add
add
add
push
add
mov
push
add
add
add
rolb
cwtl
add
add
inc
add
add
cmp
add
add
add
pop
inc
add
add
je
loope
cmp
add
pop
add
add
add
add
add
add
add
add
add
add
add
pop
add
cmp
dec
add
ret
add
mov
jne
das
add
lret
add
js
aaa
add
add
pop
add
adc
lds
enter
xchg
add
add
add
add
dec
add
add
xor
push
add
add
add
add
jne
adc
gs
add
add
add
add
pop
add
add
add
sub
pop
add
jnp
lcall
add
add
add
sub
sbb
push
add
add
add
add
add
jne
sbb
mov
add
add
add
add
add
scas
add
add
add
add
cs
add
inc
add
pop
add
add
adc
mov
add
add
add
or
pop
add
inc
add
add
add
add
ret
add
sbb
add
dec
add
add
add
push
add
add
add
add
add
add
xor
lods
add
inc
add
add
add
clc
add
mov
add
add
add
add
add
dec
add
add
add
add
add
xchg
add
aas
add
inc
add
add
add
mov
add
add
cmp
jae
push
add
add
or
aas
add
add
mov
add
add
pop
add
add
inc
add
mov
roll
mov
add
add
add
add
pop
pop
test
ds
jae
pop
adc
rorb
pop
bswap
jno
rcr
jp
inc
add
sarb
mov
aad
jne
and
lds
lods
paddsw
test
xchg
sub
cmpsl
mov
or
dec
fsubrl
push
or
dec
lods
rcrl
movsb
pop
loop
pop
loopew
repnz
cli
mov
sbb
and
test
mov
sub
pop
das
leave
mov
out
sbb
mov
push
loop
mov
rcrl
xorb
xor
jge
push
test
imul
jmp
mov
mov
mov
andl
in
push
loop
sarb
xchg
ss
mov
ret
jmp
pushf
mov
loopne
roll
jle
pop
adc
cmp
cmc
pop
fs
push
stos
arpl
clc
mov
mov
jl
imul
xor
mov
stc
inc
xor
test
push
dec
add
cmp
ds
ret
enter
outsb
add
adc
int3
mov
fdivl
xchg
fsubrl
sbbb
mov
je
imul
jmp
popa
imul
jge
fucomp
push
push
daa
mov
push
pop
jge
add
call
in
in
scas
nop
clc
lds
std
xor
inc
mov
add
or
or
dec
add
fisubrs
push
push
dec
jno
aam
sbb
cltd
sbb
mov
js
mov
xor
pop
into
lret
pusha
mov
cmp
mov
jge
aas
sub
xor
pop
sahf
cmpsl
shlb
fwait
je
or
movsb
lock
in
sub
add
adc
cmc
jge
adc
ds
inc
mov
sub
push
add
and
cmc
decl
and
enter
jge
mov
mov
jecxz
popf
cmp
aas
mov
enter
xor
shlb
ds
addr16
clc
push
fildl
enter
js
scas
cwtl
daa
popf
mov
cwtl
loop
das
push
xor
dec
aam
ja
rorb
ja
fidivrl
push
sub
lods
and
test
cltd
mov
inc
or
cltd
jnp
ljmp
enter
rorl
hlt
shll
jl
mov
push
xor
fidivs
fldlg2
out
cltd
and
push
cmp
mov
in
stos
sub
call
test
lods
sbb
xchg
xchg
in
popf
or
pop
xchg
lock
lea
jmp
and
fwait
shl
xchg
xor
stos
fmull
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
