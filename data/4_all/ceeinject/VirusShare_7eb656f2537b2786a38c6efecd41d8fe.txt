call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
mov
testb
scas
fadd
cmpsb
cmp
sub
data16
outsl
pop
dec
es
es
testb
fnsave
sub
data16
pop
push
pop
ss
movsb
mov
test
xchg
out
xchg
cmc
xchg
mov
cmpsb
and
push
gs
adc
jge
add
push
sbb
lcall
scas
sub
imul
push
sub
test
jl
cmp
push
in
xor
xchg
or
pop
sub
inc
add
loope
repz
push
jge
pop
mov
push
outsb
and
and
fldt
push
insl
or
inc
and
jmp
dec
ljmp
test
xchg
mov
sub
sub
insl
out
inc
dec
es
push
and
adc
insl
jmp
sbb
cmp
push
sbb
std
test
push
mov
dec
rcr
dec
jb
add
out
or
ret
inc
pusha
add
cmp
ds
pop
ss
fnstenv
popf
testb
fnsave
xor
gs
jne
inc
ss
pusha
rcl
enter
stc
cmpsl
mov
mov
nop
ror
sarb
and
or
inc
and
mov
std
test
loope
mov
dec
xor
adc
jae
nop
sub
jb
xchg
rcll
movsb
in
xchg
mov
cmpsb
cmp
jbe
data16
insl
push
pop
ss
es
testb
fnsave
sub
data16
insl
push
pop
ss
es
cltd
and
loope
inc
sbb
insl
pop
icebp
add
mov
jne
insl
adc
dec
loopne
ret
loope
rorl
dec
pop
inc
int3
sbb
lods
pop
pop
and
lds
mov
gs
mov
aaa
stc
icebp
outsl
leave
pop
repnz
stos
push
in
pop
xor
andb
dec
pop
push
or
repz
jcxz
sbb
leave
aaa
ficoms
inc
mov
aas
pop
mull
jge
jo
cli
insb
adc
or
adc
mov
mov
inc
push
add
push
lcall
xor
xchg
and
or
add
jecxz
xchg
cmp
fld
jnp
imul
jmp
dec
push
scas
nop
mov
fadds
lcall
xchg
push
dec
dec
xor
mov
adc
mov
xlat
adc
call
cmp
imul
sbb
dec
movsl
dec
data16
jo
inc
mov
xor
adc
inc
sub
xor
sbb
push
sub
pause
sbb
mov
dec
and
inc
adc
pop
inc
cmp
mov
test
lds
addb
sub
xchg
popf
inc
imul
repz
adc
adc
sbb
xchg
xchg
sbb
adc
mov
sbb
in
add
js
dec
jns
in
xchg
addr16
andl
xchg
or
and
add
fsubs
ret
or
jg
mov
stos
ficomps
sahf
adc
mov
cltd
pop
rclb
jno
cmc
cmp
adc
add
inc
jno
push
add
add
and
or
insb
xor
xlat
push
xor
outsl
movsb
ds
dec
dec
pop
loop
push
xchg
ret
push
cmp
jo
aas
mov
bound
xor
xor
xchg
mov
push
sbb
scas
jo
mov
adc
into
aas
loopne
shll
push
jns
adc
push
or
xor
or
enter
loope
cmp
mov
xor
sub
loope
mov
mov
adc
mov
scas
insb
sub
das
outsl
jle
mov
nop
cmc
push
mov
pusha
in
cmpsb
sbb
negb
fsubr
test
ret
mov
pop
cmpsb
shlb
aam
mov
repnz
push
pop
sub
scas
jne
mov
xchg
sbb
mov
adcb
loop
cmc
in
adc
push
imul
sbb
repz
inc
cmp
sbb
pop
pop
rorl
dec
bound
or
cmpsb
std
in
scas
les
pop
aas
das
mov
lea
frstor
lock
in
and
nop
test
std
cmp
rolb
push
ret
lock
pop
std
jle
mov
rcr
out
es
das
cmc
scas
jmp
dec
pushf
cmp
jo
test
scas
ret
mov
jb
das
in
mov
mov
dec
push
daa
les
xchg
mov
lcall
sbb
xchg
fmuls
cmc
pop
lahf
rorb
add
inc
faddl
inc
jl
jno
sub
in
js
int
or
out
les
lret
push
cmpsl
hlt
cmp
fwait
cld
outsb
push
pmuludq
xor
lret
int3
arpl
sbb
es
inc
pop
pop
icebp
jo
pop
lahf
or
and
mov
ret
icebp
jmp
lds
cmc
scas
out
test
scas
pushf
xchg
mov
test
mov
jne
dec
inc
inc
aam
or
aam
sbb
out
and
or
fstpl
pop
or
mov
sub
ja
cmp
xor
add
adc
ret
dec
push
inc
dec
mov
cmp
and
lock
mov
push
enter
movsb
jae
sub
add
xlat
cmc
hlt
sub
cmp
cmp
movsb
inc
ds
jmp
hlt
mov
and
lcall
scas
add
cli
mov
roll
mov
cmpsb
icebp
xor
dec
and
adc
sti
retw
dec
add
popf
ja
stc
pushf
addr16
jnp
int
stos
dec
bound
jb
xchg
mov
je
pop
loop
imul
mov
lods
arpl
xorl
dec
inc
pop
inc
sbb
or
clc
and
ret
push
and
mov
jp
imul
jg
in
imul
pop
imul
rclb
sahf
push
push
sbb
or
xchg
lods
jae
mov
out
lods
jl
add
and
sbb
loope
mov
inc
test
add
mov
jb
adc
out
dec
pop
inc
lods
arpl
cli
aam
scas
jp
and
out
dec
pop
add
sbb
inc
add
fcmovnb
or
lret
lods
inc
lcall
xchg
mov
or
mov
mov
sub
xchg
mov
test
push
fmul
cmp
mov
dec
loop
sub
mov
and
pushf
lahf
jmp
cmp
stc
les
imulb
or
jp
sbb
das
dec
mov
or
stos
push
das
lret
je
sbb
les
dec
jle
jl
and
in
imul
nop
mov
fistps
push
sub
inc
out
push
ljmp
add
negb
or
mov
lcall
cmp
and
imull
push
push
ret
les
mov
push
mov
adc
inc
dec
mov
lret
stos
add
mov
xorb
fnsave
data16
sbb
das
push
testl
shrb
push
mov
xchg
adc
mov
push
xchg
mov
xlat
popf
test
sbb
leave
mov
in
dec
adc
outsb
es
and
adc
mov
dec
mov
sub
push
dec
jnp
sbb
enter
adc
addl
daa
inc
xchg
addr16
sbb
adc
xchg
stos
adc
andl
test
push
scas
sbb
ds
lea
leave
out
loopne
out
jp
int
out
add
popa
push
inc
and
push
lds
test
pop
cmp
sbb
mov
out
sbb
push
jle
rorb
sub
xchg
scas
xor
push
and
push
xlat
or
dec
cli
cmp
movsl
sti
dec
in
jns
push
jae
idivl
cwtl
jb
sti
mulb
add
repnz
xor
movsl
mov
jmp
cvttps2pi
bound
or
jge
pop
in
sub
clc
cmpsl
loopne
subl
xor
clc
out
jno
mov
and
stos
js
and
mov
mov
popa
lods
add
mov
iret
xlat
sahf
mov
pop
je
int
xchg
dec
or
lcall
add
xor
rol
xchg
out
out
cwtl
inc
xor
add
mov
dec
loope
jle
test
pop
pop
inc
jmp
lcall
jns
sbb
xchg
jge
mov
pushf
scas
or
xor
jae
pushl
jbe
cltd
or
cmp
test
push
push
rol
iret
data16
sti
or
out
cmp
popa
dec
fs
dec
cmp
fsts
nop
stc
add
adc
addl
lcall
int
addr16
inc
js
rclb
add
movsl
adc
out
cli
adc
int
inc
rcl
push
push
add
ljmp
pop
mov
int3
and
cmp
adc
pop
and
dec
addr16
dec
cmp
mov
icebp
jne
xchg
jp
adcb
dec
and
add
add
mov
xor
xor
cli
outsl
jg
inc
mov
push
stc
sub
xchg
sub
ds
add
mov
xchg
lods
dec
les
inc
and
iret
pop
mov
scas
and
fs
sub
scas
dec
shlb
ds
dec
fcomi
mov
sub
mov
cwtl
cmp
sbb
popf
mov
sti
sbb
cmp
inc
pcmpeqd
cmp
adcb
cmp
outsl
movsb
sub
mov
push
or
popa
mov
xor
movsb
shll
jnp
pop
sub
lds
pop
js
daa
jbe
es
push
sub
jae
test
cmpl
clc
pop
test
push
cld
xchg
xor
add
stos
neg
jge
outsb
xchg
inc
push
xor
popf
addb
aam
sarl
pop
add
mov
jmp
rolb
xor
lcall
inc
inc
out
dec
push
aam
push
adc
jnp
cmp
adc
adc
movsl
and
fwait
sbb
mov
xchg
fsubl
cmpsl
adc
por
or
fsubrl
xchg
out
fcomip
mov
add
jb
add
jmp
in
pop
pushf
mov
mov
dec
add
dec
rcll
mov
je
lahf
cld
push
and
sbb
lds
add
fidivrl
push
push
repnz
add
repnz
fcomi
mov
sub
fwait
aam
stos
xor
lea
or
dec
call
and
and
les
fwait
pop
xchg
repnz
dec
inc
aad
aaa
jg
xor
push
jg
lock
call
and
mov
cmpsl
xchg
bound
mov
xor
imul
ss
xor
rorl
and
pop
and
popf
lods
xchg
pop
cli
inc
fimuls
mov
xor
xlat
icebp
subb
lcall
dec
sbb
scas
and
mov
int
push
std
jl
dec
push
test
inc
mov
push
out
or
dec
sahf
mov
in
sbb
pop
std
adc
test
mov
in
roll
push
imul
sub
std
lock
xor
xchg
ja
mov
enter
nop
ficomps
mov
repnz
fxch
mov
push
out
adc
mov
jle
sbb
push
xchg
mov
ss
js
dec
je
fisttpl
lods
push
fisubrl
adc
sub
ljmp
sbb
les
mov
mov
xlat
adc
test
inc
xor
mov
add
xchg
add
aas
mov
popf
cli
and
cmpsb
mov
arpl
inc
divl
pop
fs
outsl
aaa
fdivp
and
pop
jb
test
jae
mov
out
outsb
lods
push
and
dec
cmp
pop
aas
lcall
leave
pop
inc
pop
sbb
leave
adc
push
mov
lea
inc
push
mov
mov
das
sbb
xor
sbb
sub
into
pop
clc
sbb
mov
xchg
xor
or
mov
mov
push
lods
push
aam
sub
loop
and
in
push
mov
movsb
imul
mov
fldcw
push
loop
push
scas
outsl
lret
inc
scas
jns
xchg
or
mov
cmp
lock
xchg
test
push
pop
mov
add
xor
test
rclb
jno
fstl
cli
shrl
sub
jmp
lds
sbb
hlt
or
fwait
sbb
and
sti
fildll
mov
mov
jle
mov
das
nop
jbe
pop
fmull
ds
xchg
enter
adc
pop
mov
inc
sti
xor
lcall
pushf
lcall
lods
adc
pushl
inc
cmp
mov
pop
or
mov
ss
lods
fdecstp
dec
xlat
mov
repz
push
mov
cmp
sarb
fnstcw
fcompl
into
call
sub
jb
stc
std
int
cmp
push
and
std
add
mov
sbb
ljmp
and
pushf
mov
sti
rcl
les
mov
movsb
cmc
out
inc
not
xor
xlat
xor
cld
mov
sbb
scas
cmp
mov
adc
push
inc
jno
ss
popf
or
mov
in
jbe
js
int
mov
icebp
mov
push
dec
daa
repnz
inc
cmp
test
in
outsl
cmp
sub
push
stc
jno
push
add
dec
sub
push
iret
sbb
clc
int
lea
daa
aas
pop
mov
stos
rcl
pop
lds
cmpsl
sub
mov
mov
idivl
shrl
mov
mov
imul
cwtl
scas
xor
loope
mov
jmp
repz
mov
insl
shll
cwtl
lahf
push
cli
push
out
loop
jns
sub
sahf
sbb
xor
frstor
iret
outsb
rol
ret
add
mov
in
push
cmc
je
add
dec
hlt
adc
or
or
ret
aas
mov
add
daa
sub
in
jp
inc
lret
jno
cltd
nop
dec
adc
and
sub
mov
jg
lahf
ja
fs
dec
mov
test
mov
sbb
in
jge
ret
out
mov
outsb
push
push
xlat
idivl
loope
int
ror
push
shlb
sahf
lock
imull
xchg
add
jb
or
cmp
pop
inc
cwtl
jo
xchg
push
and
push
xchg
jp
data16
or
mov
and
mov
or
outsb
cltd
out
push
xlat
sub
pusha
scas
dec
jo
fsts
xchg
out
cmpsb
dec
mov
subl
pusha
aam
in
jne
data16
shll
addr16
je
pop
cmpsb
xor
fs
and
xor
daa
push
test
lods
fwait
xlat
fstps
push
sbb
popa
std
pop
lret
ljmp
fs
jl
pusha
and
lds
outsl
mov
negl
add
mov
inc
mov
cld
pop
fsubrs
adc
or
cwtl
arpl
pusha
jg
inc
adc
pop
es
sbb
test
aaa
jbe
scas
sub
out
aas
jg
fbstp
int3
scas
xchg
lret
xor
stos
das
cwtl
aas
das
jne
cli
movsl
or
push
mov
sbbl
xchg
insl
icebp
das
mov
test
xchg
call
and
pop
ja
push
add
test
sbb
pop
push
pop
push
icebp
cltd
and
mov
ficoms
iret
mov
pop
call
push
inc
insl
mov
pop
sahf
mov
rcll
cmp
fnsave
das
sti
push
leave
xchg
jp
shll
dec
mov
xchg
jnp
sbb
in
outsl
add
xor
repnz
lea
dec
and
jae
inc
push
push
cmpsl
add
into
incl
sbb
sbb
jnp
inc
stos
rclb
rcl
mov
cmp
roll
in
sbbl
jecxz
jecxz
dec
adc
jbe
mov
or
sbb
pop
pop
push
mov
pushf
pop
inc
pop
xchg
js
pop
pop
aam
dec
jbe
in
mov
popa
sahf
dec
std
clc
add
jg
addb
mov
fs
rcrl
pop
in
xlat
xchg
push
push
bound
sbb
inc
sub
insl
push
lods
or
xor
or
shl
popa
fstps
or
mov
scas
jno
push
lock
cmpsb
inc
outsl
gs
mov
fistl
imul
fcmove
stos
repnz
into
lods
mov
or
push
jle
mov
xchg
outsb
jl
filds
xor
das
lahf
js
imul
ret
sahf
xchg
pop
stc
lcall
sar
vmovq
loopne
movsb
je
mov
leave
insb
xchg
stos
lret
sub
dec
in
push
pop
mov
add
sbb
adc
ret
and
aas
mov
dec
adc
sub
dec
mov
lea
cmp
sub
xchg
cs
js
mov
and
lcall
pop
mov
inc
int
cmp
xor
sub
cmp
xor
dec
mov
add
loop
ror
lret
lahf
mov
jns
pop
adc
and
sbb
jnp
inc
popf
lret
push
mov
sbb
lret
sub
repz
outsl
push
xchg
cmp
dec
xchg
stos
or
xlat
xchg
pop
dec
dec
lods
xchg
test
and
add
addr16
inc
divl
pop
out
loopne
stos
aas
jb
add
arpl
call
mov
jne
inc
jnp
fstps
clc
mov
aad
inc
movsb
cmp
js
in
jmp
lods
mov
and
pop
cmc
cs
iret
jne
xor
mov
out
pop
imull
mov
jbe
or
xor
inc
xor
inc
leave
mov
jno
cmp
pusha
addl
cmpsl
in
fimuls
push
add
mov
or
xchg
mov
jo
lea
shl
pandn
movsl
test
shll
mov
adc
rorb
nop
sbb
and
xor
lcall
jmp
sbb
popf
enter
xlat
subl
xchg
mov
mov
mov
pop
xor
cmc
outsb
cmp
pop
adc
or
xlat
mov
push
pusha
in
sub
insl
scas
inc
stos
loop
inc
sahf
loop
stos
jp
fwait
outsl
int3
rcrb
out
loope
inc
test
xchg
mov
addr16
inc
test
scas
popf
stc
aas
jmp
xor
rclb
adc
or
push
sub
jle
push
and
imul
mov
sbb
mov
jmp
add
and
testb
push
testb
in
repnz
jle
sbb
mov
stc
jmp
stc
cmc
jns
loope
orl
xchg
movsl
jge
hlt
imul
xor
mov
sub
sbbl
bound
sbb
sbb
sbb
cmp
and
jg
adc
and
daa
rcr
enter
push
outsb
ss
lds
cmp
or
test
xor
call
hlt
shlb
cld
inc
xor
cltd
adc
xchg
andl
aad
repz
rclb
imul
sahf
imul
sub
push
and
inc
lret
and
push
push
push
add
addr16
mov
xlat
in
and
mov
sti
hlt
out
aam
mov
mov
lcall
mov
jmp
xchg
movsb
cmp
test
fsubr
jmp
out
insl
lods
lret
outsb
push
push
cmp
cld
xchg
lock
icebp
jmp
sub
mov
fldenv
das
add
sub
jg
sub
pop
and
insl
push
pushf
mov
lds
loope
shrb
lret
leave
daa
shlb
pop
mov
stos
fistpll
and
loopne
and
test
cmp
or
xchg
sti
pop
outsl
hlt
jno
shll
outsl
in
sub
push
movsl
or
or
and
in
fs
adc
lcall
add
addr16
scas
cmpsl
clc
lods
mull
inc
push
sarl
sub
call
ficoms
mov
or
out
fwait
aad
loopne
test
mov
pusha
jmp
int3
movsb
jne
dec
pop
xor
and
lea
jmp
dec
ret
push
cmp
rcrb
mov
add
dec
xor
mov
pushf
out
xor
cwtl
dec
fbstp
repz
xchg
cmc
dec
push
call
adc
cld
pop
mov
lods
mul
icebp
jno
sahf
xor
xchg
sti
ljmp
lds
dec
cmpsl
icebp
xor
jb
cmpsb
add
leave
cmp
pop
mov
xchg
aad
les
jns
int3
add
push
add
xchg
pop
xor
test
inc
clc
int3
js
nop
sub
push
push
fucomi
aam
xlat
mov
push
ror
test
xor
leave
movsb
sbb
add
sub
cmp
in
or
jmp
sarl
out
sti
je
arpl
movsb
je
push
and
add
adc
adc
sub
mov
xchg
fists
xchg
es
sbb
shll
push
mov
sbb
lods
mov
dec
pop
xor
test
mov
inc
mov
pushf
loope
movb
fnsave
xchg
aaa
pop
xchg
mov
pop
int3
jbe
scas
jl
jns
fimull
fs
cmp
ljmp
aas
add
push
adc
arpl
sbb
js
cwtl
add
mov
hlt
lods
push
test
mov
js
push
js
nop
mov
and
lcall
dec
insb
adc
or
add
sub
pop
jle
mov
cmp
cwtl
lods
dec
xchg
mov
aad
out
cltd
incb
hlt
xchg
cmp
and
loope
mov
fs
dec
mov
cmp
xor
leave
rep
xchg
xchg
mov
imul
scas
dec
ret
inc
sbb
inc
lret
push
jecxz
add
inc
push
hlt
test
aaa
stos
inc
lahf
xor
jnp
add
rcll
pop
hlt
cmp
imul
movsb
cmc
push
xchg
data16
jo
xchg
testb
fnsave
sub
data16
insl
push
pop
ss
es
testb
fnsave
sub
data16
insl
push
pop
ss
es
testb
fnsave
sub
data16
insb
push
pop
ss
es
testb
pop
mov
retw
in
mov
or
stc
mov
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
cmp
das
movsl
pop
aad
lds
sbb
mov
lahf
popl
xor
enter
add
jae
pextrw
jg
outsl
movsl
pop
xchg
dec
stos
mov
pop
popl
sbb
and
xchg
and
test
in
inc
lahf
dec
mov
jne
inc
divl
aaa
xchg
popfw
inc
mov
popa
push
mov
movsb
pop
xchg
jnp
outsl
pop
test
fs
clc
pushf
lcall
out
sub
ljmp
lahf
mov
out
shrb
jp
mov
cltd
sbb
mov
fistps
push
push
sbb
push
gs
jmp
push
mov
pop
shl
jecxz
inc
in
shl
lds
push
dec
or
stos
jno
add
out
test
ljmp
aas
sub
movsb
aam
les
push
sub
lahf
mov
mov
pop
out
xor
inc
ret
mov
or
adc
mov
es
xor
jb
mov
outsl
fs
lds
mov
pop
movsl
pop
xchg
jmp
int
push
mov
lret
in
or
pop
mov
ja
adc
add
sub
dec
ret
cld
adc
lea
dec
mov
stos
insb
jb
dec
mov
push
out
imull
adc
adc
jp
and
push
xchg
jle
pop
test
pop
xchg
dec
test
push
popl
xor
iret
add
pop
aad
lds
outsl
movsl
pop
xchg
dec
test
push
popl
xor
iret
add
xchg
cmp
les
push
dec
imul
out
sbb
xchg
repz
cmp
outsl
int
nop
pop
or
test
lret
push
es
push
sbb
pop
mov
mov
pop
subb
mov
mov
add
pusha
jge
pop
or
clc
xlat
addl
pusha
xchg
xchg
xlat
inc
or
add
scas
or
fcmovbe
dec
adc
mov
rolb
js
insb
out
cmp
pop
pop
rclb
inc
pop
mov
xor
rcll
fisubrs
add
push
mov
inc
shl
xchg
mov
adc
push
test
xorl
jbe
pop
pusha
mov
mov
or
sbb
xchg
mov
fs
lcall
mov
scas
sub
ljmp
shll
fsubs
cld
mov
repnz
mov
pop
mov
add
jbe
mov
fidivrl
mov
pop
xchg
addb
loopne
push
push
pop
lret
mov
inc
cmp
cmpsl
ret
sub
orb
sub
add
mov
movsb
cmp
out
outsl
movsl
dec
dec
mov
data16
sub
sbb
dec
add
outsl
scas
sub
ljmp
push
adc
mov
pop
adc
mov
push
inc
mov
mov
adc
mov
sbb
call
out
popa
adc
cwtl
pop
imul
ret
cmpsb
cld
outsl
addb
in
jb
sahf
mov
mov
std
leave
sbb
adc
xchg
scas
jmp
add
mov
inc
enter
mov
mov
xchg
and
sarb
xchg
sub
das
insl
leave
or
es
xlat
push
popf
lret
cmp
mov
jns
cmp
mov
inc
andb
pop
cmpsb
test
sbb
mov
loopne
cs
rorl
and
inc
fs
jno
shll
mov
inc
xor
pop
shl
into
shlb
jg
icebp
push
adc
scas
and
xor
cmpsl
xor
cmc
mov
jb
pop
mov
jno
and
lret
or
xor
test
mov
mov
lahf
pop
sbb
or
push
pop
test
cmp
sbb
pop
divb
or
repz
cmp
seta
repnz
xchg
xchg
xlat
scas
jae
rcrl
or
sbb
iret
stos
dec
jo
sbb
and
xorl
pop
out
xor
xchg
cmp
bound
mov
inc
out
mov
dec
add
push
mov
adcl
out
xchg
pop
add
inc
test
sbb
aas
adc
lret
lcall
mov
sti
ret
loopne
sub
or
push
mov
cmp
incb
sub
push
inc
lahf
inc
in
dec
jle
dec
int3
jbe
ds
out
sbb
clc
jl
jnp
stos
adc
stc
mov
add
loopne
lock
mov
cmp
inc
and
out
loop
pop
cmc
xor
sarb
xor
hlt
sub
lahf
arpl
inc
shrl
out
push
dec
pop
sbb
or
nop
pusha
inc
xor
movl
sbb
push
js
mov
mov
flds
mov
push
out
add
dec
mov
shll
push
push
call
mov
cmp
mov
mov
and
xor
pop
js
sbb
mov
hlt
int
notb
leave
dec
sub
ds
push
fs
add
pop
cmp
add
push
in
insb
mov
inc
sbbb
shlb
xchg
mov
mov
mov
arpl
mov
cmp
hlt
add
shl
jle
imul
xchg
mov
dec
test
cmp
jle
lods
sbb
jb
mov
stos
and
xor
add
outsb
test
push
loop
pushf
mov
jp
dec
aas
sar
xor
dec
mov
xor
test
pop
sub
outsb
std
ljmp
adc
mov
repz
mov
ljmp
pusha
test
push
movsl
adc
xchg
cwtl
or
jae
adc
or
sub
jmp
inc
adc
sub
jns
das
dec
mov
ror
cmp
cmp
mov
jns
scas
pop
pop
add
pop
and
inc
aaa
fwait
orl
daa
mov
ljmp
stos
cmpsb
cltd
cmp
mov
jg
pop
inc
push
mov
mov
mov
cmpsb
sti
push
shll
aaa
test
jmp
push
pop
ljmp
shll
push
dec
arpl
loopne
lret
rclb
or
popf
add
pop
mov
sbb
fisubrl
mov
add
or
aam
sahf
aam
stc
or
out
lds
add
pop
cmp
mov
mov
scas
adc
sub
dec
or
int3
cwtl
scas
addr16
enter
and
cld
mov
pop
sub
popa
lcall
or
into
inc
in
pop
or
jno
in
test
test
rcl
sbb
inc
xchg
fldt
and
jb
adc
xchg
inc
adc
inc
test
gs
shll
pop
xor
cmp
scas
jg
xchg
lret
arpl
xchg
out
xor
cltd
jno
or
xchg
scas
into
notl
andb
dec
imul
dec
jns
sbb
test
sub
mov
cmp
add
shrb
dec
push
adc
shlb
push
das
loope
add
lcall
addr16
sbbb
or
repnz
test
pop
mov
orb
ss
cmp
imul
aaa
lret
fyl2xp1
test
aam
insl
and
lret
pop
imul
xor
mov
push
and
insb
sub
imul
imul
lahf
rcl
aam
and
movsl
adc
imul
cwtl
mov
sahf
inc
pop
mov
jnp
lret
push
hlt
mov
cmp
orb
loop
add
out
push
out
out
mov
xchg
and
je
dec
icebp
int
mov
jg
adc
and
jb
dec
aaa
mov
push
adc
sti
or
or
ljmp
mov
xchg
ret
or
cld
cltd
imul
xchg
dec
cmp
xor
add
jae
test
or
push
je
xor
adc
insb
push
ret
xlat
cmp
pop
outsb
fsubrl
cmp
sti
das
cwtl
sub
rorb
dec
pushf
and
test
mov
shl
fisttpll
adc
sub
mov
jle
mov
pop
fs
scas
pop
clc
cld
push
pop
xchg
or
fnstenv
pop
xchg
imul
notl
fwait
adc
jecxz
push
popaw
cmpb
mov
fucompp
lds
cmc
and
lahf
mov
inc
mov
mov
pop
shl
inc
sub
inc
mov
or
jg
and
pop
scas
call
rcl
loope
push
xchg
out
mov
dec
out
mov
cmpsl
loop
push
movsb
dec
loop
add
sbb
leave
sub
jmp
sub
stos
mov
xorb
inc
dec
data16
sbb
and
in
fwait
popf
rorl
mov
stos
push
mov
jo
movsb
shll
pushf
fsubs
and
lds
rorl
inc
pop
test
pushl
mov
movsl
dec
push
jne
sub
in
ffree
cli
shl
int3
pop
push
les
jnp,pt
lds
xor
js
cmpsb
lret
xchg
arpl
insl
movsb
not
cmpsl
enter
imul
out
cwtl
rorl
pop
jns
gs
xchg
mov
sbb
loopne
pusha
or
dec
inc
fstpt
jecxz
clc
nop
jmp
dec
es
sub
jl
jg
pop
in
mov
xchg
clc
inc
mov
out
xchg
das
sti
stc
lods
mov
mov
mov
in
mov
adc
aam
mov
in
adc
std
int
cli
sub
not
push
pop
movsb
pop
mov
mov
push
sbb
iret
cli
enter
mov
cmp
rclb
lock
or
add
cwtl
in
or
ljmp
fldt
xor
xchg
popa
test
outsb
fldenv
mov
sbb
jns
inc
and
flds
jns
xchg
mov
adc
mov
dec
daa
push
jg
sub
dec
xchg
push
xor
lea
sub
lds
add
or
ljmp
call
mov
jo
es
push
loopne
ds
cmp
test
push
pusha
stos
jmpw
dec
stc
jnp
pop
div
mov
mov
repnz
dec
mov
lods
test
aam
das
test
push
sbb
xlat
xchg
push
in
loop
jmp
lock
addl
adc
mov
hlt
mov
lahf
xchg
aaa
add
movsl
fs
jb
and
adc
inc
pop
mov
lea
pop
imul
jno
aas
aas
out
lea
inc
mov
popf
xchg
pop
push
roll
mov
pop
inc
xchg
and
lret
das
mov
xchg
out
xchg
push
lods
cmc
add
cmp
jp
mov
xor
adc
adc
mov
push
mov
mov
adc
add
decl
scas
lods
mov
mov
cld
je
jo
icebp
push
xlat
movsb
sub
daa
push
inc
push
sti
cmp
icebp
icebp
push
nop
jbe
cmpxchg
data16
out
push
repnz
cmp
cmp
or
int3
mov
daa
adc
cmpsb
or
lret
jg
aam
ret
icebp
lahf
and
push
mov
insb
inc
mov
fldlg2
mov
cmp
roll
pop
xor
movsl
dec
inc
scas
shlb
inc
push
mov
mov
das
movsl
or
add
or
jl
add
push
jns
mov
sbb
mov
jne
int
xor
and
or
addl
fsubrl
lret
sti
add
repz
jnp
xchg
addr16
sbb
fisttpl
ljmp
inc
pop
mov
sub
push
fbld
and
sbb
outsb
ja
ss
xor
cmp
cmc
loope
stc
out
push
sub
fdivrl
or
inc
rclb
or
push
hlt
push
or
xor
jp
xchg
inc
cmp
jmp
cs
mov
daa
adc
shrl
jg
jmp
mov
arpl
inc
outsl
ret
leave
mov
stos
jecxz
jg
daa
das
xor
mov
inc
mov
jbe
pop
mov
imul
scas
xor
xchg
out
cltd
adc
lcall
popf
mov
movsb
les
xor
ljmp
sahf
pop
inc
pop
push
movb
outsb
sub
or
pop
out
sub
out
cwtl
mov
inc
pushf
sbb
fs
popa
imulb
imulb
pop
sbb
test
pop
xchg
xchg
push
jl
ret
xor
mov
insl
sub
push
xchg
mov
pop
rorl
pop
sub
pushf
push
sub
loopne
test
in
pop
shlb
loop
push
call
inc
vfmadd231sd
out
pop
push
loop
pusha
push
xor
cltd
movsl
add
mov
lret
popf
data16
mov
cld
insl
subb
mov
les
pop
lea
sbb
xchg
rcrb
inc
inc
mov
push
jl
sub
arpl
lock
stos
pop
xchg
sahf
cmp
loop
sbb
dec
mov
nop
add
mov
out
fdivrs
mov
push
jno
cmp
mov
stos
pop
cmp
stos
data16
fs
scas
cmp
inc
mov
gs
and
les
and
inc
xlat
cli
add
or
int
add
pop
fdivl
outsl
mov
ret
add
pop
push
dec
cmp
loope
push
in
movsl
sbb
jl
inc
push
int3
xchg
nopl
adc
sar
or
rclb
cwtl
lds
lcall
fdiv
jo
ljmp
mov
push
inc
push
xor
adc
mov
adc
xchg
xor
les
arpl
pop
aas
mov
out
or
mov
lds
add
mov
aas
dec
out
lock
xchg
scas
fnstsw
xchg
aaa
daa
pop
mov
dec
movsb
adc
xorb
push
pop
sub
mov
es
xchg
ja
dec
sub
adc
adc
sbb
or
jl
push
mov
sbb
test
push
xchg
repnz
outsb
mov
ret
cmpsl
pop
cmp
gs
mov
inc
mov
adc
les
ret
subl
in
bound
stos
sbb
xchg
mov
mov
aaa
icebp
cmc
andl
pop
fs
xor
sbb
add
mov
xlat
mov
jb
mov
daa
xchg
cltd
sub
andl
std
mov
jl
inc
idivl
or
dec
mov
cli
fistps
out
lds
sub
xor
push
rorb
scas
mov
dec
stos
and
dec
nop
out
dec
add
arpl
and
xor
xchg
jg
call
jl
punpckhbw
jb
enter
scas
mov
ja
insl
fiaddl
rcrb
bound
call
pop
sbb
movsl
add
sub
sbb
stos
mov
jbe
add
adc
dec
cmp
ljmp
pop
adc
jne
mov
xchg
orl
mov
div
cmpsl
sbb
push
xchg
imul
sbb
pop
xor
mov
mov
mov
imul
mov
dec
inc
out
cwtl
mull
outsl
cmp
dec
sbb
shll
enter
fidivs
push
addr16
pop
fwait
ret
scas
pop
sti
push
aaa
mov
cli
jmp
push
fcomp
cmpb
mov
push
xor
loope
mov
adc
popf
xchg
hlt
jg
imul
fbstp
mov
shrl
jmp
inc
sub
sbb
fistpll
xchg
cmp
cmpsl
add
add
loope
adc
add
lret
mov
hlt
push
aaa
adc
or
pop
add
insl
xchg
xchg
push
jo
js
jecxz
out
sub
ljmp
inc
mov
mov
flds
push
push
les
dec
rclb
xor
test
aad
push
cmpsb
push
xchg
mov
testl
mov
dec
not
xlat
mov
cmpsl
jbe
lods
enter
incl
mov
insl
jo
das
and
jb
jmp
jne
mov
pop
in
or
ds
inc
outsb
add
sbb
dec
pop
mov
repnz
sub
jmp
pand
scas
fisubs
lock
add
popa
andnps
es
cmp
pop
out
imul
lcall
mov
fmul
mov
insl
rclb
cli
xor
fidivs
push
daa
shll
cmpsl
push
and
int3
xchg
call
push
pop
xor
fs
xchg
xchg
push
mulb
xor
sahf
sub
mov
loope
movsl
insb
add
push
mov
cli
mov
cmp
in
popa
jae
rorl
jp
mov
sub
pop
fisubs
loope
xor
int3
test
lods
mov
and
dec
dec
xrelease
jmp
std
mov
jecxz
push
cmp
out
negb
mov
lock
dec
jae
aad
jge
aad
loopne
xor
sbb
add
or
sbb
fstps
in
imul
imul
inc
mov
test
flds
sub
loope
out
fmull
ljmp
and
cmpsb
lcall
test
jbe
adc
cmp
mov
dec
pusha
fwait
xchg
pop
enter
fiaddl
mov
lods
inc
roll
inc
xor
shrb
fwait
pop
test
rorb
cmp
mov
inc
mov
xchg
cwtl
pusha
ret
into
lods
addl
or
cmp
mov
mov
ficomps
add
ss
mov
dec
flds
scas
and
push
inc
and
fstl
jo
cld
inc
sub
aad
test
ljmp
out
insb
clc
insb
fnstsw
xchg
add
xchg
js
push
out
lahf
inc
xor
js
xor
mov
fildll
xlat
and
lcall
mov
sub
mov
pop
les
pop
push
out
xchg
push
lds
xor
cmp
insl
push
fwait
mov
mov
stos
push
xchg
xor
movsl
inc
jbe
iret
in
nop
cmc
ret
jmp
add
lods
pop
adc
jno
cmc
scas
dec
jne
mov
inc
pop
jmp
cmp
ja
out
enter
sub
sbb
mov
mov
rorl
mov
mov
and
sarb
iret
mov
lahf
sbb
or
xchg
scas
pop
loope
adc
adc
call
mov
pop
es
clc
sti
outsb
or
dec
icebp
or
sub
insl
xchg
jl
popa
mov
jo
enter
test
lahf
ds
xchg
imul
push
push
shll
aam
push
ja
dec
mov
clc
scas
sub
out
outsl
xchg
addb
jb
cmpsl
xor
movl
cmp
enter
int3
aas
das
nop
pop
shll
mov
mov
xchg
or
xchg
pop
int3
gs
das
sarb
jmp
into
popf
mov
inc
daa
pop
pushf
xchg
push
lods
insl
dec
bound
xor
fs
shlb
add
in
movsb
mul
push
movsl
jge
jle
inc
mov
int
roll
icebp
arpl
mov
ss
test
sarl
arpl
sub
push
mov
adc
adc
push
rol
lahf
in
test
and
xchg
js
iret
insl
jb
loope
xor
pop
cmp
sub
and
inc
popa
cmpsl
js
callw
sub
aad
xor
dec
shr
pop
fisubrl
aad
mov
les
test
sub
pop
lret
pop
sbb
push
push
or
sbb
adc
mov
cmpsb
lods
dec
jp
xchg
add
push
jno
cmp
mov
cmpsl
aad
inc
jmp
cli
jmp
inc
pop
mov
and
jbe
push
mov
pop
cmp
mov
cmp
cmp
xor
dec
adc
mov
dec
dec
fcomi
jns
out
addb
dec
mov
mov
dec
cld
mov
mov
mov
add
int
mov
add
mov
sahf
ja
or
push
unpckhps
pop
inc
push
push
sbb
sbb
push
in
pop
cmp
add
loope
sub
out
jg
sarb
fimull
gs
mov
add
jbe
fidivrs
imul
fidivrs
fnstcw
sub
and
jns
hlt
enter
cli
call
or
sbb
push
addr16
add
and
mulb
fcmovnbe
iret
xor
xlat
inc
mov
repnz
mov
hlt
insb
mov
rorl
adc
or
pusha
roll
fcoml
fadds
mov
push
fnstsw
inc
mov
lods
dec
push
sub
cltd
movsb
cmpsl
test
sbbl
mov
dec
shrb
xchg
inc
jbe
or
inc
pop
cs
daa
popf
ret
mov
cmp
hlt
loope
xchg
std
adc
je
loopne
push
or
push
cmp
push
pop
aas
cmpl
cmp
fldl
jle
mov
inc
test
aas
mov
xchg
adc
fisubrl
aas
pop
sub
inc
fmul
int
mov
and
repz
inc
enter
adc
divb
imul
stc
add
mov
jnp
lock
mulb
xor
push
in
xchg
aam
aad
rclb
jp
scas
negb
push
das
iret
popf
ds
and
push
hlt
jne
stos
fisubs
cltd
pop
jbe
jmp
mov
pop
rorb
lds
outsl
movsl
pop
xchg
dec
test
push
popl
xor
iret
add
pop
aad
lds
outsl
movsl
pop
xchg
dec
test
push
popl
xor
iret
add
jg
xadd
mov
into
pop
xchg
popl
outsl
push
dec
pushl
jmp
sub
jae
inc
xor
test
jg
pop
adc
push
iret
xor
dec
addr16
and
jge
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
jbe
data16
push
scas
inc
mov
js
or
testb
cs
ds
cmpsb
pop
xchg
outsb
xchg
mov
push
scas
inc
mov
push
out
push
xchg
push
out
cs
jbe,pt
cmpsb
pop
xchg
outsb
xchg
mov
push
scas
inc
mov
push
out
push
testb
cmp
mov
leave
or
add
or
push
sub
sbb
in
sub
out
inc
repnz
dec
in
and
fucomp
push
or
mov
pop
call
jp
loope
cmp
pop
dec
dec
cmpsl
xchg
shrl
mov
push
les
mov
popf
sbb
mov
ja
outsb
out
fistpl
jmp
jbe
mov
inc
jmp
xchg
test
add
arpl
sub
out
adc
cli
xchg
mov
mov
push
xchg
test
push
icebp
mov
push
sarl
pop
outsb
xchg
xchg
mov
aam
fwait
out
mov
sub
out
sub
dec
sub
mov
scas
inc
mov
push
out
push
testb
push
cs
ds
cmpsb
pop
xchg
outsb
xchg
aaa
mov
fistpll
scas
das
mov
jb
add
divb
pop
dec
mov
cmp
pop
shlb
jmp
sti
xor
sub
outsb
xchg
inc
mov
aam
pop
mov
enter
repz
lret
cmp
sub
jp
ficoms
out
push
testb
push
cs
ds
cmpsb
pop
xchg
outsb
xchg
mov
push
scas
inc
mov
push
out
push
testb
push
cs
ds
cmpsb
pop
xchg
outsb
xchg
mov
lret
inc
imul
icebp
mov
aad
lcall
nop
xlat
faddl
lea
dec
add
xor
enter
bound
sti
or
jb
in
iretw
arpl
jns
push
jne
pushf
je
add
in
stc
loope
xchg
fucompp
add
inc
int
es
xchg
add
adc
addb
jle
in
aad
int3
leave
loope
jbe
pop
jl
lods
jecxz
fsubs
jo
pop
call
lret
sbb
sar
je
out
sbb
bound
shrb
xchg
ds
jb
je
repz
inc
daa
fidivrl
or
sub
inc
faddl
mov
jge
cmp
test
jle
repz
xchg
inc
aad
xor
std
jge
xor
cmp
cmp
mov
pop
or
insb
outsl
pop
push
frndint
inc
repz
fwait
or
push
pop
push
dec
mov
jo
mov
clc
jge
jp
adc
mov
add
cwtl
cmp
push
add
xlat
adcl
stos
fwait
sahf
and
outsb
inc
adc
insl
adc
ljmp
shll
test
cmp
ss
loopne
cltd
jnp
mov
push
push
lds
push
rolb
pop
adc
dec
cmp
mov
push
add
in
into
test
cmp
int
stc
jne
insb
shrl
pop
jb
ss
jp
mov
neg
cmc
enter
shrb
push
cmp
cmp
loop
push
aas
push
insb
test
popf
mov
repnz
ds
fcomps
sbb
test
mov
insl
mov
xchg
aam
decl
lods
adcb
dec
clc
and
inc
xchg
mov
arpl
lcall
and
stc
mov
stos
mov
jg
nop
adc
sbb
sti
xchg
cmpsb
add
dec
pop
ja
notl
push
add
fnsave
outsl
mov
or
mov
bound
mov
into
mov
jno
in
test
mov
leave
leave
sub
mov
push
rol
or
sbb
cmp
fstpt
adc
xor
adc
dec
lret
fbstp
pop
pop
xor
cmp
jbe
and
pop
ljmp
xchg
dec
or
fcoml
sbb
ret
loope
xchg
pop
xchg
std
or
mov
jg
js
arpl
mov
fidivs
imul
push
inc
scas
push
sub
sub
add
xor
adc
push
fwait
insb
adc
xorb
cli
inc
jo
frstpm(287
repz
dec
icebp
adc
cmp
dec
fimull
in
fistps
aad
std
jge
jne
into
fadds
sub
jns
push
lods
dec
mov
cmp
mov
dec
pop
or
rorl
in
add
inc
js
pop
test
lahf
loop
roll
mov
inc
xchg
inc
sub
push
popa
jb
dec
pop
outsl
movsb
jne
push
popa
ret
push
xchg
inc
jecxz
mov
mov
mov
jb
js
test
lret
pop
in
mov
mov
mov
fisttpll
pop
adc
movsb
and
jns
add
aam
cmp
int
and
cmp
jno
push
repnz
cmp
leave
adc
sub
inc
dec
mov
ljmp
or
cmp
pop
xlat
pushf
inc
xchg
push
pop
lods
jecxz
mov
ret
sub
push
pop
cmp
adc
aaa
pusha
mov
dec
sarb
mov
inc
xchg
xchg
sbb
pusha
cmp
push
movsb
jmp
addb
dec
xor
inc
xchg
sahf
and
inc
je
push
pop
jmp
outsl
pop
add
mov
lds
sub
add
inc
push
aaa
mov
into
cld
sub
push
sti
test
insb
mov
jl
cmp
es
mov
xchg
sub
xchg
dec
push
mov
cli
outsb
adc
fsubl
scas
dec
pop
lds
jne
mov
push
mov
mov
mov
or
addr16
aas
stos
push
jbe
push
test
add
mov
mov
xor
xchg
insb
enter
leave
inc
add
lret
in
push
lods
mov
std
lahf
push
xor
sahf
ficoms
insb
add
sub
xchg
push
enter
fsts
fldenv
fsubl
dec
inc
fstps
xlat
data16
inc
mov
mov
adc
xchg
xchg
and
pop
inc
dec
xor
repz
lods
push
xor
lock
mov
sub
pop
dec
hlt
lahf
rcrb
sub
cmpsl
leave
bswap
mov
test
inc
mov
je
sbb
std
into
idivb
push
jbe
mov
sahf
lock
or
cmp
cmpsl
cli
fists
inc
lds
mov
inc
clc
or
rorl
stc
cs
fcmovu
stos
sub
xor
mov
roll
mov
incb
lods
loope
dec
sbb
mov
into
jne
pop
or
insl
in
test
cmpsl
sarb
jle
aas
jb
cli
push
pop
push
pop
das
xor
mov
jl
rcrl
cmp
sbb
pop
out
icebp
cltd
inc
addl
cmpl
ret
pop
loope
test
pushf
add
mov
das
js
cld
xor
int3
popa
push
dec
inc
add
xchg
adc
jle
push
loope
gs
jae
fcmovne
jb
cwtl
sub
out
test
xlat
addb
mov
adc
push
test
mov
cmp
add
pop
jl
push
mov
sub
enter
mov
cmp
call
enter
stos
mov
push
filds
and
cmp
movsb
aas
sub
enter
repnz
cmp
popl
cmc
std
punpcklwd
int
and
rcrl
jnp
stos
jbe
repz
jl
lods
lea
hlt
mov
movsl
adc
push
jp
xchg
ret
cmpsl
dec
add
int3
and
lods
fstps
testl
aaa
jnp
pop
in
ss
sub
bound
shl
iret
lds
pop
arpl
adc
in
ljmp
add
ret
adc
lahf
dec
mov
ret
mov
cmp
mov
out
jle
mov
push
daa
jnp
cmp
mov
mov
mov
int
inc
dec
push
mov
xchg
adc
pop
cmpsl
outsl
cmc
sahf
shrd
add
out
sub
push
lahf
mov
sbbl
xlat
repnz
lcall
aam
in
inc
bound
add
jb
mov
loop
xor
hlt
ss
iret
icebp
shrb
outsb
sbb
dec
aam
xchg
and
cmpsb
cli
movsl
cmovle
or
mov
aam
fdiv
sbb
scas
out
mov
and
popf
cmp
in
in
sbb
imul
movsl
xchg
pusha
mov
and
rorb
pop
dec
pop
or
jb
leave
sub
iret
int3
mov
jbe
push
out
cmpsl
cmpsb
jge
in
lods
xor
mov
gs
and
pusha
and
jp
mov
push
sub
test
lods
ret
add
sub
fs
sarl
ret
mov
adc
jecxz
loop
add
sarl
movsl
or
pop
bnd
cwtl
or
sub
loop
mov
in
and
mov
inc
inc
mov
push
es
push
test
jp
mov
push
idivb
adc
cmp
mov
fstpl
adc
jp
dec
test
inc
lea
fisubs
in
mov
jb
inc
adc
lds
dec
lds
lahf
jne
sub
xorl
fwait
in
faddl
icebp
icebp
inc
mov
test
xchg
pop
mov
in
push
leave
adc
dec
xor
push
xor
mov
jmp
rcrl
jg
fs
imul
je
xchg
cmp
outsb
repz
ficomps
sub
mov
nop
or
loop
push
aad
push
ja
sub
movsl
mov
or
cmp
cld
fsubl
jbe
rcrl
inc
mov
ss
cmpsl
int3
aas
repnz
and
add
sahf
xor
je
xchg
data16
fists
cmp
lret
in
je
lds
sbb
popa
stos
into
dec
xchg
sti
lcall
stos
je
jnp
adc
and
cmp
sbb
mov
sbb
ds
std
lcall
and
lods
cmc
mov
or
pop
lret
arpl
pusha
aad
stos
out
add
ss
leave
pushf
mov
lahf
pusha
mov
jne
clc
int
sub
mov
add
adc
insl
ja
dec
jmp
mov
fisubrl
clc
ds
sbb
xchg
jno
gs
std
iret
nop
sub
cld
adc
mov
imul
push
rcrb
push
outsb
pushf
push
mov
lock
negl
gs
cmc
sub
jbe
or
hlt
stos
or
pop
sbb
movsb
mov
and
cmp
cmp
jp
inc
inc
repnz
xor
mov
cmp
xor
insl
out
fisubrs
inc
adc
jb
aam
aas
test
lds
ds
sti
ret
loop
insb
push
out
dec
adc
int3
dec
test
aad
cld
vpunpckhqdq
loop
xchg
ja
enter
dec
mov
sub
mov
xchg
fucomp
xchg
mov
gs
sbb
lock
inc
jae
fcomi
movsl
inc
mov
sub
sub
lcall
adc
aam
xchg
pushf
adc
mov
adc
leave
fistpl
adc
mov
fiaddl
pop
mov
imul
cmp
push
std
jae
scas
sbb
pop
mov
popa
jecxz
fstp
push
int
sbb
into
mov
xchg
dec
mov
pop
nop
rol
add
movsb
mov
insb
mov
jge
add
movsl
aam
in
or
ja
mov
lods
and
or
icebp
mov
fldl
shl
call
aaa
lock
mov
notl
mov
lcall
push
bound
imul
aam
mov
enter
sbb
aaa
out
movsb
mov
enter
inc
mull
adc
ret
sub
xchg
xchg
sub
xlat
adc
and
out
aas
jb
aad
invd
aad
inc
jmp
cmp
div
sbb
xor
orb
mov
cmp
push
dec
in
movsl
add
shll
sbb
push
and
loopne
test
insl
sahf
mov
jb
sbb
hlt
cmp
lret
add
sahf
es
ljmp
add
flds
outsb
into
jae
inc
pushf
jae
fdivl
int3
pop
fidivrs
cs
hlt
pusha
popa
cmp
pop
push
dec
and
xchg
push
and
xor
xor
out
cs
mov
std
pop
movsb
mov
pop
std
mov
xchg
sub
scas
je
addr16
lods
fildl
jge
or
push
and
int
leave
pushf
iret
xchg
dec
cmp
dec
test
sub
lock
cmp
mov
inc
je
xchg
andl
pop
mov
outsl
push
lahf
inc
rol
dec
mov
push
lods
xchg
ficomps
push
sub
cmc
lcall
icebp
mov
in
fisttpll
stc
lret
popf
inc
xchg
adcl
pop
testb
sub
out
adc
inc
mov
lahf
adc
push
in
lcall
xor
mov
mov
test
add
daa
mov
cmp
dec
retw
pop
nop
fists
cmpsl
push
or
jmp
xchg
lods
nop
int3
insb
adc
xor
mov
mov
mov
ljmp
into
aam
mov
cmpsl
push
jno
jl
xlat
mov
stos
enter
inc
adc
ss
pusha
mov
scas
pushf
mov
repnz
ljmp
repz
xchg
xlat
push
sub
add
jbe
imul
xor
mov
pop
in
insl
push
mov
fcompl
add
xchg
mov
test
nop
scas
stos
mov
std
movsl
data16
fs
fst
pusha
leave
mov
hlt
cwtl
add
inc
fcmove
and
gs
nop
mov
sub
or
pop
inc
dec
test
jae
jg
pop
popa
xchg
cmp
aad
add
fistps
popa
mov
test
inc
fists
sarb
sub
sub
aad
loop
aad
test
repnz
push
in
pop
jb
pop
pop
push
and
int
das
je
ret
loopne
inc
cmp
imul
rcrb
rcl
in
imul
cmp
adc
cmp
enter
mov
cmc
sub
imul
pop
aad
shlb
inc
inc
jo
outsl
xorl
std
cmp
mov
lods
iret
dec
lea
fs
or
rorl
add
pop
and
mov
or
call
mov
lods
push
xchg
negl
test
std
xor
fcoms
aas
repnz
xchg
popa
fidivl
xchg
ret
aas
inc
cmp
lea
sub
sbb
cmp
mov
push
pop
cmpsl
mov
fists
lock
hlt
dec
enter
xor
cli
jbe
dec
or
test
dec
mov
lds
jmp
std
mov
rclb
inc
movsl
inc
xor
les
cmp
push
jge
hlt
mov
outsb
pop
ret
sti
popf
push
aas
loop
repz
xchg
jne
imul
gs
sbb
test
sub
push
cld
mov
mov
mov
gs
inc
loope
push
jb
test
jmp
xchg
add
ds
xor
sub
cmc
mov
ljmp
inc
loop
call
push
popa
out
lahf
aaa
leave
sub
lods
xor
fwait
test
push
push
xor
out
stc
sahf
inc
inc
dec
mov
call
or
mov
out
add
loop
and
pop
mov
out
mov
lea
sub
sub
pushf
inc
ljmp
aam
cli
push
adc
loop
jmp
push
andl
jo
mov
or
inc
aam
movsb
test
jne
pop
adc
sub
xchg
push
std
adc
insb
mov
add
loop,pn
add
add
sti
or
cltd
cmp
adc
mov
xchg
scas
pop
sti
push
aad
jmp
movsl
push
sahf
xchg
fstpt
dec
jnp
mov
cltd
add
pop
popa
push
incb
aad
push
cmp
xor
or
orl
push
adc
pop
outsb
repz
pushf
jne
inc
cmp
data16
nop
cmc
mov
pop
dec
or
sbb
push
pop
movsl
add
je
xchg
mov
rcrl
push
xchg
lea
add
adc
repz
and
cwtl
repnz
mov
xor
or
push
jg
xchg
das
inc
push
xchg
pop
hlt
adc
clc
or
cmpsl
dec
nop
jp
mov
fdiv
imul
outsl
cmp
push
cwtl
xchg
loopne
roll
clc
xorl
mov
enter
icebp
sti
xor
sbb
je
orb
sbb
add
sti
nop
outsb
jns
pop
jae
inc
scas
iret
mov
cmp
outsb
and
stos
mov
movsb
je
xor
aas
and
pushf
jle
xchg
fwait
cmp
rclb
arpl
push
sarl
cltd
add
aam
inc
mov
xchg
pop
scas
ljmp
pop
in
dec
sar
addl
xlat
jmp
ret
lea
pop
ret
gs
test
sbb
aad
arpl
xor
inc
mov
jb
fcoms
repnz
leave
pusha
cmpsl
ss
jne
push
add
xor
adc
out
int3
dec
jp
lods
add
sbb
into
mov
mov
mov
sbb
mov
xchg
outsl
cmc
dec
les
dec
not
sub
into
jmp
cli
jg
insl
pop
sti
sti
call
repnz
xchg
or
xchg
in
mov
add
xlat
pop
outsl
xlat
inc
pop
and
push
mov
lea
mov
sbb
ja
xchg
xchg
mov
xor
fistpl
pop
popa
cmp
lea
js
repnz
pop
xor
sub
xchg
adc
cmc
loop
adc
leave
sbb
cwtl
call
jbe
scas
les
sbb
popa
dec
jne
lcall
cmpsl
adc
sub
mov
call
xor
or
dec
mov
jge
mov
pop
add
sti
mov
inc
cmc
mov
lcall
call
rcl
pop
or
push
fstl
cmp
imul
insl
inc
rorl
inc
dec
add
jns
adc
shlb
pop
loopne
lcall
add
dec
dec
jge
lods
push
repz
mov
movsb
pusha
ret
shlb
dec
cli
push
xchg
and
in
cli
ret
fcoms
cmp
lret
movsb
ficomps
addr16
mov
insb
jmp
aam
mov
std
inc
test
xlat
jge
lahf
sub
mov
fnsave
cmp
add
test
pusha
cmp
inc
mov
adcb
jecxz
mov
pop
enter
jae
scas
mov
pop
icebp
in
neg
andl
mov
sti
add
sbb
pop
pop
ss
popf
scas
icebp
inc
cmp
rolb
jge
scas
in
sbb
and
lcall
sub
sub
dec
push
cmpl
lcall
data16
ret
mov
testb
sub
push
dec
in
stos
inc
pop
das
push
mov
sbb
push
iret
sbb
cmc
js
das
sbb
mov
adc
test
mov
or
pop
loopne
cli
shlb
lea
xchg
ja
cmp
sub
ffree
lret
adc
aam
push
mov
mov
stos
lock
xchg
leave
cmp
mov
arpl
dec
fs
cld
push
push
jl
outsl
das
in
pop
cs
fstl
hlt
shl
jnp
repnz
fstpl
push
adc
push
pop
pop
insl
cmp
push
jne
pop
push
sti
aam
loopne
sub
xchg
sbbl
dec
sahf
rorb
mov
ljmp
xor
mov
jle
pop
lock
cli
fadd
repz
ljmp
push
cmp
imul
pop
add
lret
repz
test
push
fists
sbb
jnp
jle
pop
pop
sbb
push
add
rcll
ljmp
fcomps
inc
in
ret
pop
movsl
cwtl
bound
hlt
sbb
add
add
jnp
fs
jno
lcall
add
imull
xor
loopne
int3
loop
jbe
adc
inc
pusha
pusha
out
pop
mov
popa
shrb
dec
test
aam
lea
add
jbe
mov
and
daa
lahf
out
lahf
push
dec
push
fidivl
repz
mov
xchg
js
jno
shll
in
clc
pop
dec
add
dec
cltd
nop
fmuls
int
jbe
stc
pop
or
cmp
daa
fldenv
lahf
loope
sbb
in
or
je
popa
ljmp
lock
dec
add
jae
ret
enter
jmp
jnp
cmp
push
fsubr
jb
dec
inc
aad
test
mov
test
and
outsl
fimuls
fildll
repz
hlt
xchg
dec
inc
lret
pop
or
cs
lahf
fmul
ficompl
xor
pop
mov
sahf
jl
mov
js
dec
mov
mov
mov
jbe
lock
insl
js
cmp
dec
mov
or
in
andl
lds
gs
xchg
js
fwait
mov
push
jl
movsb
fdivl
and
repz
mov
dec
mov
dec
aas
sub
cvttps2pi
inc
push
xchg
sbb
pop
dec
in
sbb
repnz
dec
pusha
add
cld
sub
sub
fcmovbe
mov
jnp
jne
or
sbb
mov
sbbl
mov
test
cs
mov
in
jp
pop
sub
fs
stos
lock
sbb
add
mov
sub
fadds
and
mov
std
movb
es
mov
mov
pop
es
sub
loope
fsubp
insl
xchg
imul
xor
mov
out
push
sbb
into
jns
out
push
fiadds
mov
pop
sub
fdivrs
stos
sbb
mov
imul
pop
dec
call
cli
inc
jmp
push
scas
inc
mov
push
out
push
testb
push
cs
ds
cmpsb
pop
xchg
outsb
xchg
mov
push
scas
inc
mov
push
out
push
testb
push
cs
ds
cmpsb
pop
xchg
outsb
xchg
mov
sahf
scas
inc
mov
push
out
xchg
testb
push
cs
ds
cmpsb
pop
xchg
outsb
xchg
mov
push
scas
inc
mov
push
out
push
testb
mov
cs
dec
mov
mov
sbb
cmp
sub
push
test
cwtl
sub
sbb
imul
sti
pop
jmp
sbb
sub
jnp
imul
sub
sbb
or
stos
sti
dec
jmp
sbb
sub
jnp
imul
enter
jle
sbb
sub
pop
outsl
stos
push
cmp
inc
adc
and
mov
lods
dec
push
addb
mov
add
div
cli
les
addr16
pusha
dec
add
daa
stos
push
roll
push
sbb
mov
cmp
aam
decl
mov
xor
and
mov
sahf
fidivrl
jnp
mov
pop
sbb
sub
clc
mov
xor
mov
and
push
les
push
in
cmp
test
shll
xchg
mov
je
jnp
lret
imul
fwait
loopne
lcall
sbb
dec
jmp
daa
movsb
repz
add
rcrb
icebp
jnp
fsubrl
into
das
dec
push
rorl
cmp
dec
fsubrs
sub
jnp
imul
xor
add
jae
insb
sti
dec
jmp
jle
push
lcall
out
mov
inc
out
inc
enter
pop
push
mov
sahf
dec
fwait
ss
sarl
pop
sti
push
ds
add
ds
cs
push
in
pop
jg
pop
sub
scas
adc
daa
cmpl
jge
dec
out
push
xchg
jnp
imul
sub
sbb
imul
sti
dec
jmp
sbb
sub
jnp
imul
sub
sbb
imul
sti
dec
jmp
sbb
push
mov
ja
xor
mov
pop
repnz
push
pop
in
cmp
jecxz
pop
ja
jecxz
inc
push
jb
fwait
aad
mov
ror
xor
and
jb
and
cmpsl
push
addl
inc
lock
pusha
insl
aam
jge
ret
in
scas
mov
jmp
mov
cwtl
and
pop
pop
sub
cs
insb
jbe
lcall
aad
xorb
jbe
mov
scas
repnz
sbb
sbb
adc
subb
sbb
adc
jno
repnz
push
mov
pop
loope
aas
sbb
ljmp
stos
dec
pop
aas
and
sub
ds
lret
mov
fdivrs
sbb
pop
xchg
xchg
jge
xchg
pop
mov
aad
xchg
lret
scas
lcall
into
ret
mov
or
xor
inc
fsubl
in
jns
cmp
mov
jl
xchg
lds
iret
mov
jmp
lcall
mov
cmpsb
jecxz
cli
imul
aad
gs
out
fdivl
iret
les
push
cmp
lea
test
into
xchg
lahf
xchg
or
stos
adc
sbb
xor
jb
leave
push
or
or
movl
xchg
pop
cmp
mov
mov
pop
pop
sbb
mov
jb
scas
jmp
in
sbb
loopne
push
mov
jg
movsb
push
sbb
cmpsb
xchg
add
stos
cmp
in
cmp
in
jne
fimuls
lock
or
incb
in
movsb
jno
xchg
sub
push
outsb
dec
mov
ret
adc
imul
dec
inc
or
xchg
xchg
cmc
loopne
and
mov
out
fbld
or
out
scas
shrb
rcll
lahf
in
sbbl
jmp
movsl
mov
mov
icebp
sbb
and
dec
sub
adc
outsb
add
adc
xchg
xchg
sbb
add
inc
mov
hlt
jle
out
pop
add
dec
loop
mov
push
in
sbb
jne
cmp
or
dec
jmp
push
popa
xor
add
into
mov
popa
mov
jb
push
xlat
add
sub
mull
jg
pushf
cmpb
fwait
adc
inc
into
test
in
lret
aas
aam
sahf
and
sub
pop
sbb
faddl
repz
sub
stos
out
inc
pop
movsb
in
in
push
jg
pop
jo
lret
lods
fs
or
push
popaw
pop
mov
mov
inc
add
int3
cli
clc
pop
in
sub
pop
in
xchg
outsb
stc
xor
outsb
orl
loop
and
addr16
ret
out
iret
mov
idivl
lea
sub
fsubrs
out
inc
push
js
clc
dec
ficomps
push
repz
xchg
outsb
js
shlb
mov
repz
call
lock
mov
mov
repnz
push
sub
cmp
cmp
es
or
fsubrs
loopne
mov
and
xor
jl
cmpsl
jns
inc
fcoms
mov
mov
pop
iret
rclb
rcll
push
movb
pushf
nop
push
fisttps
test
dec
stos
jl
dec
shll
mov
rcrl
mov
in
cmp
xor
xchg
lcall
popf
pop
inc
adc
add
add
not
adc
fistl
sarl
xlat
jmp
movsl
insb
test
mov
pop
out
out
mov
jle
cwtl
int
cmp
xchg
cmp
inc
mull
push
out
xor
inc
pop
faddl
cmpsb
push
push
orb
sub
repz
adc
xor
lock
rolb
frstor
insl
inc
divl
hlt
in
pop
xchg
adc
xorl
jecxz
jecxz
and
das
sti
and
bnd
bound
cmc
cmp
aaa
mov
adc
pop
subb
jecxz
shrl
mov
jae
push
in
rcrb
outsl
xor
repnz
xchg
inc
sub
repz
in
and
sarb
outsl
push
rol
xor
imul
outsb
subl
xchg
je
imul
popf
faddl
fldt
stos
mov
jge
and
sub
mov
adc
pusha
insl
mov
aaa
sub
repnz
ds
sbb
mov
sbb
sbb
xchg
xor
xor
mov
mov
push
test
int
addr16
cltd
lret
jp
es
mov
xchg
enter
ss
js
pop
lock
dec
pop
push
rorl
stos
xchg
xchg
mov
sub
iret
int3
xchg
test
push
fisttpll
pop
mov
sbb
jns
in
and
pop
leave
add
jle
lret
dec
ret
insb
mov
sbb
add
xor
insb
lret
push
out
xor
dec
mov
aas
rolb
leave
pop
addr16
adc
pop
mov
add
into
sar
add
push
mov
out
pop
pusha
addr16
idivb
jmp
mov
rorb
push
adc
es
in
pop
mov
mov
movsl
mov
nop
adc
mov
jne
lcall
imul
xor
xchg
push
or
hlt
je
or
inc
lods
test
negl
xor
stc
test
dec
mov
cmpsl
dec
pop
mov
sub
enter
cmp
leave
jo
mov
pop
shrb
enter
or
faddl
gs
es
nop
mov
add
push
push
pop
jp
adc
pop
loop
push
icebp
lds
popf
outsl
daa
and
into
jno
push
dec
es
outsl
sub
mov
inc
outsl
mov
aam
jmp
add
jno
cmp
fcmovne
and
test
xchg
push
push
lds
lahf
lock
fbstp
nop
ret
ja
sub
lods
pop
lods
inc
xor
inc
cmpsl
fsubrs
add
push
ror
push
xchg
sbb
fcoms
pop
in
mov
jo
jmp
das
call
xor
sub
inc
jno
sbb
jecxz
or
xchg
mov
and
push
sub
jno
lret
sbb
jnp
adc
fiadds
push
pop
xor
jne
aam
mov
xor
and
push
adc
mov
xlat
ret
mov
movsl
and
shl
mov
lods
shrl
cmp
nop
enter
outsb
nop
roll
icebp
add
loope
mov
and
jmp
out
aam
xor
push
out
sbb
bound
push
aaa
fstpt
movsb
lea
test
idivb
popl
cmc
movsl
push
jmp
movsl
xor
dec
jo
cmp
and
inc
loope
jns
inc
in
pop
xchg
adc
fwait
pop
mov
inc
lahf
sbb
arpl
add
fwait
jb
out
pusha
xor
call
std
fdivrs
inc
jl
sbb
mov
enter
cmp
sbb
mov
loopne
insl
mov
xor
fdivs
cwtl
addr16
pop
jmp
lahf
fidivrl
xchg
iret
test
in
sbb
sbb
add
xchg
jecxz
jg
mov
dec
fst
pop
jns
inc
testb
xor
popf
jno
fidivl
mov
ljmp
xchg
push
sub
mov
int
add
mov
sarb
lret
int
imul
adc
das
ds
fimull
and
getsec
or
test
and
popf
dec
add
fs
dec
out
jg
xchg
out
fnstsw
dec
mov
xor
in
out
pop
std
stc
sub
addb
adc
dec
sub
ljmp
inc
repnz
lret
cmpsb
mov
mov
and
stos
orb
push
xchg
mov
pop
sahf
adc
test
mov
pop
mov
and
jne
sub
add
aam
xchg
ficomps
retw
xchg
cmp
shll
lods
mov
fisttps
mov
push
into
cmc
add
or
mov
mov
scas
pusha
insl
sbb
fsubs
movsl
mov
sub
and
jo
push
sbb
mov
hlt
mov
mov
subl
arpl
cmp
xchg
push
mov
sahf
test
xor
push
push
xor
push
sub
in
mull
pop
push
insl
sub
sbb
stc
fstp
cli
repz
subl
jno
daa
adc
repnz
push
cmp
mov
js
jmp
mov
cmp
jne
fnstenv
subb
cmpsb
mov
lret
lock
mov
int3
adc
mov
jne,pt
pop
xchg
dec
pop
push
mov
mov
sub
jmp
orb
jae
andl
push
push
mov
rclb
loopne
fcomp
jo
outsl
mov
popf
adc
jne
push
mov
cmp
adc
mov
push
add
sub
pop
dec
cmp
adc
pushf
fs
stos
push
popf
xchg
sbb
fsubrl
sarb
in
inc
sbb
xor
gs
jb
mov
mov
ljmp
and
stos
mov
sub
add
inc
arpl
or
nop
or
xchg
mov
aad
mov
mov
lods
mov
push
in
shlb
jae
out
xor
lret
insl
jns
mov
movsl
cltd
cmp
addb
xchg
cmp
ljmp
loopne
or
bound
cltd
inc
inc
mov
sbb
mulb
dec
sbb
add
mov
cmpsb
test
sbb
insb
mov
adc
xchg
cmp
mov
xchg
pop
movsb
outsl
loop
jle
xor
push
push
call
or
loopne
adc
ljmp
test
lods
xchg
or
ja
repz
cmp
mov
add
dec
jge
push
aam
lret
lahf
pusha
and
xchg
popw
lret
rcrb
ds
jl
dec
scas
mov
lret
mov
ret
push
fadd
xchg
xorb
mov
inc
or
das
pop
and
ljmp
pop
mov
pop
nop
popf
outsl
int3
mov
mov
mov
mov
cmp
mov
aad
xchg
jb
cmp
push
pop
cmp
add
loopne
adc
out
sbbl
mov
loop
mov
sbb
adc
jp
cs
lods
insb
push
loopne
shrb
mov
push
cmp
lock
xor
push
push
leave
cld
in
push
sbb
mov
sar
and
pop
test
mov
lods
out
mov
mov
test
imul
outsb
fwait
push
es
clc
ret
sub
push
ret
cmpsb
push
push
jae
cmp
mov
daa
sbb
jge
stc
in
ljmp
outsl
pusha
sahf
cltd
cld
movsb
popf
in
jp
fidivl
xchg
adc
lods
out
jnp
mov
inc
adc
jns
cmpsb
pop
dec
repz
adc
jns
inc
in
dec
leave
fs
lock
iret
lds
adc
xor
xchg
or
out
adc
pop
shr
or
mov
and
js
sub
insb
ror
mov
push
jae
in
fbld
cli
sub
popa
pop
mov
leave
inc
xchg
das
std
push
imul
scas
fucom
jl
pop
test
sarb
shl
mov
out
idivb
sub
sbb
ljmp
jp
jb
lods
dec
cmp
cmc
adc
mov
into
or
cmpsb
lret
fld1
iret
vshufps
dec
leave
mov
sahf
cltd
dec
and
xchg
stos
xchg
sbb
nop
sbb
in
pop
jmp
inc
mov
mov
mov
adc
iret
xchg
sub
or
inc
sbb
addr16
outsb
jge
movsb
sub
loop
xchg
out
jl
pop
bound
clc
push
and
pop
mov
mov
cmp
adc
in
shlb
loope
mov
sti
mov
push
mull
jle
sbb
push
lods
insb
mov
rclb
dec
jge
mov
das
dec
jno
mov
jns
push
mov
push
loopne
mov
cmp
push
mov
xchg
fmuls
sbb
or
out
adc
outsb
mov
jge
and
mov
leave
cld
int3
xchg
daa
clc
jecxz
lods
xchg
mov
leave
cmp
or
or
sub
bound
in
dec
and
push
dec
and
js
orb
push
or
and
xchg
inc
inc
mov
cmp
fwait
sub
add
rcr
imul
push
pop
cld
or
je
dec
xlat
pop
aas
pop
dec
loop
inc
or
jecxz
bound
dec
jne
adc
pop
rclb
jb
jge
movsb
pop
lea
icebp
mov
out
cmpxchg
mov
sar
xor
adc
ficoms
aaa
push
mov
test
ljmp
rclb
xchg
push
lret
cmpsb
insl
lret
shll
inc
or
or
test
mov
shlb
dec
insb
xchg
sub
xor
sub
mov
jne
dec
dec
lods
xchg
das
icebp
ret
pop
push
mov
cld
cmp
mov
cmp
repnz
outsb
mov
xchg
mov
and
ret
inc
xor
jecxz
and
sub
pop
out
bound
rorb
sti
test
xor
jbe
ret
adc
stc
popf
mov
xor
cmp
cli
add
fstpt
arpl
into
ror
scas
popa
mov
jae
pop
xor
add
jl
jl
jmp
ss
pop
or
mov
dec
sub
add
push
push
fsubrl
cmp
adcb
pop
clc
popf
mov
dec
or
stos
dec
pop
sbb
pop
shrl
lock
icebp
cmpb
sbb
jge
push
push
pop
mov
mull
sub
mov
xchg
jae
mov
orl
popa
push
lcall
out
fidivrs
push
adc
jp
xor
dec
mov
daa
loop
lods
ficompl
dec
push
andl
mov
mov
adc
or
or
push
pop
das
mov
cmp
stos
jbe
psllw
sub
inc
cmp
aas
cmpsb
cwtl
cmp
cmpsl
aad
ret
pop
dec
stc
lods
imul
notb
in
loop
push
pop
aaa
fiadds
pop
daa
jnp
mov
mov
pop
std
mov
sub
repnz
pop
add
jae
aad
push
jl
push
cmp
mov
adc
push
add
and
test
std
push
mov
xchg
pop
fmuls
pop
lods
ja
divl
imul
cmp
aas
cmp
add
inc
xor
mov
test
and
mov
cmp
dec
push
mov
pop
mov
sub
flds
push
dec
adc
imul
insb
ret
dec
xchg
imulb
add
in
add
sub
cld
pop
repnz
mov
xchg
cs
pop
push
inc
pop
popf
ljmp
nop
aam
scas
jo
xor
out
enter
xchg
push
and
ja
ljmp
adc
xor
outsl
mov
jge
xchg
jns
lock
fwait
xor
sbb
cs
cltd
adc
lods
jbe
pop
cmp
xchg
pop
pop
pop
andl
adc
divb
cmp
or
ret
imul
sub
and
mov
int3
sub
testb
fldcw
jle
ftst
cmpsb
jcxz
cs
adc
ljmp
ret
mov
fnstenv
call
xor
nop
jnp
popf
int3
push
out
in
enter
outsb
out
sub
repnz
sub
test
mov
xchg
mull
push
push
loope
cmp
insl
push
popf
imul
ljmp
addr16
imul
popa
pop
arpl
aam
jge
push
adc
add
aam
mov
and
jg
jno
push
fisubs
lods
pop
leave
insb
inc
dec
fs
ret
fists
push
test
sbbb
rcrb
mov
aam
aaa
add
mov
repz
inc
mov
fnstcw
cmpsb
movsl
adc
inc
shl
push
pop
lock
pushf
inc
aaa
hlt
push
xchg
out
ja
sbb
cli
pop
sub
push
out
jmp
jg
lods
and
jg
test
sbb
add
add
popa
pushw
lds
out
or
mov
sub
adcb
push
sub
mov
daa
fistpl
inc
xchg
xor
cs
stos
xchg
stos
sti
rolb
imul
scas
mov
push
jo
sysret
push
std
es
loop
push
push
push
orl
cltd
cmp
sbb
fnstenv
adc
dec
idiv
aam
sub
in
cmp
push
in
shrb
pop
inc
jp
cmp
gs
jmp
aas
popa
mov
xlat
or
mov
fildl
rcrl
cli
das
icebp
mov
pop
xchg
sbb
adc
push
imulb
popa
jnp
adcl
cmp
bound
shrb
dec
cmpsb
fsubrs
and
mov
jno
push
int
push
ss
shrl
test
loop
jg
mov
lods
iret
push
popa
data16
sbb
mov
dec
shrb
push
sub
test
sti
mov
jns
adc
sub
imul
outsb
or
jbe
ret
mulb
mov
sahf
les
push
dec
clc
imul
inc
cmc
aad
sbb
mov
mov
mov
popa
pop
jmp
xchg
rcll
pop
mov
std
ret
pop
mov
or
sarl
mov
jecxz
cwtl
push
sub
push
mov
lds
pop
push
sahf
pop
iret
movsb
incl
mov
or
jbe
sub
popa
inc
pop
pop
sbbb
fidivs
insb
or
inc
jl
mov
push
xorb
in
pop
xchg
clc
mov
popa
mov
dec
rolb
mov
enter
mov
push
mov
mov
les
movsb
jge
xchg
lret
pop
dec
xor
pop
sbb
and
out
pop
cmp
xor
lret
fwait
insl
das
orb
scas
cmpsl
jno
lret
les
sahf
in
call
mov
sub
shl
sbb
iret
movsb
hlt
stos
pop
mov
stos
loopne
lea
and
xchg
sbb
fisubl
inc
jae
insl
sbb
test
lds
leave
std
cwtl
ds
pop
std
out
idivl
cmp
dec
lret
fidivrl
cmp
cmpsl
out
adc
fs
insb
push
ja
jae
xor
jbe
and
addr16
xchg
fnstsw
add
sub
andl
and
push
bnd
mov
inc
pop
fldt
sub
int3
xlat
into
loopne
cmp
xchg
mov
mov
dec
push
lret
or
mov
xor
shll
and
adc
jno
inc
andl
jbe
lock
push
fs
imul
fcmovbe
xchg
shl
out
dec
xchg
sub
popa
pop
sub
sub
push
add
insb
sti
jns
mov
push
aam
lods
aas
mov
rcrb
mov
shlb
inc
lret
jbe
inc
shll
mov
or
lcall
inc
shrl
out
fistpll
shll
cmc
jge
popl
dec
push
lods
fnstenv
loopne
repnz
add
das
test
or
aad
int
mov
pusha
dec
xor
dec
stos
jne
inc
andl
insb
mov
push
fidivrs
inc
leave
in
popf
hlt
pushf
or
test
lahf
xor
inc
or
add
sysret
imul
add
ljmp
cmp
mov
les
pop
sbb
ret
popa
outsw
insb
test
jp
cld
push
pop
daa
add
int3
decl
imulb
out
mov
out
dec
adc
aam
xchg
push
sub
es
and
jns
in
cmp
mov
mov
sbb
shr
fsubrs
fnstsw
ss
lock
mov
aam
xchg
add
mov
cmp
scas
add
pop
in
clc
arpl
mov
scas
push
je
mov
stos
in
test
mov
test
pop
mov
xchg
bnd
mov
out
inc
mov
push
int3
lcall
pop
xchg
xchg
movl
cltd
and
shrb
addr16
aas
mov
mov
insl
aas
mov
sub
jnp
imul
sub
sbb
imul
sti
dec
jmp
sbb
sub
jnp
imul
sub
sbb
imul
sti
dec
jmp
sbb
sub
jnp
imul
sub
sbb
imul
cli
dec
jmp
sbb
sub
sti
lret
jmp
sub
or
test
mov
movsb
dec
std
pop
adc
jg
add
pop
jb
sbb
out
mov
lahf
shrb
add
outsl
and
cmovb
fisubrs
bound
push
iret
sbb
fwait
mov
lahf
shrb
nop
pop
adc
jg
movd
outsb
das
mov
push
pop
fcomip
pushf
std
rol
out
cld
mov
push
add
sbb
or
fldenv
add
repnz
pop
and
jecxz
lcall
scas
and
leave
xor
cmpsl
icebp
ret
jp
jo
mov
scas
jecxz
jg
add
pop
cmpsl
cmp
sbb
adc
push
sar
iret
lgs
adc
xchg
aas
das
loop
ror
and
or
pop
add
xor
mov
inc
cltd
push
iret
jge
ret
ret
imull
mov
sub
add
data16
cs
jb
shll
cmp
jbe
add
stos
or
sub
lahf
or
add
mov
lahf
xorb
mov
sahf
sub
adc
pop
loop
cmpsb
jg
cmovb
push
das
mov
fists
cli
out
lahf
sub
push
adc
popa
sbb
ss
cmp
mov
fcmovnbe
mov
xchg
fucomi
lods
mulb
dec
inc
sub
pop
dec
sub
aas
push
stos
out
les
xchg
lret
sahf
fldl
cmp
jb
push
pop
push
das
bound
jb
sbb
out
mov
lahf
shrb
add
outsl
and
cmovb
push
das
bound
jb
sbb
out
mov
lahf
shrb
add
pop
push
aad
mov
xchg
cmp
cmp
les
ret
es
stos
push
mov
loopne
and
sub
das
dec
popa
jns
fisubl
in
cmp
jns
cmp
imul
outsl
lea
adc
ja
and
shlb
mov
inc
mov
push
ljmp
mov
or
int
mov
popa
push
test
xchg
pop
addr16
divl
or
mov
jp
out
fs
subl
jecxz
mov
mov
fwait
scas
sbb
sub
ret
cmp
lods
ljmp
inc
sub
add
ret
xchg
jae
jmp
add
les
push
clc
dec
inc
sar
jbe
pusha
mov
mov
jns
std
cmp
xchg
mov
test
addl
lahf
repnz
inc
insb
outsl
pushf
mov
pop
add
lods
mov
out
adc
in
xchg
dec
xchg
mov
outsl
enter
xor
or
mov
cwtl
mov
adcl
sbb
xchg
xor
out
rolb
ljmp
pop
sub
int
rcrl
pushf
and
add
shlb
imul
inc
rclb
movsl
pusha
cmp
js
xchg
out
cmc
xlat
adc
mov
repnz
mov
xor
mov
mov
xchg
movsl
ss
fs
jno
aam
cltd
cld
rclb
jmp
cltd
xlat
stc
cmpsl
push
ds
adc
fwait
int
in
aad
cltd
jb
mov
add
dec
xchg
inc
sbb
ljmp
mov
xchg
ss
pop
pop
xorl
xor
xchg
mov
push
outsb
jle
mov
popf
ja
sub
xor
dec
stos
sarb
iret
hlt
adc
icebp
movsl
fstpl
dec
popa
xchg
mov
leave
xchg
inc
sub
je
scas
adc
cmp
xchg
test
mov
mov
pop
js
sbb
in
push
jle
push
lahf
fs
inc
lret
inc
adc
imull
add
mov
ljmp
daa
shlb
xor
sahf
out
xchg
fmuls
shlb
imul
out
clc
pop
out
sbb
jbe
mov
ljmp
adc
jmp
fnstcw
fbstp
bswap
nop
ds
push
push
sbb
popa
popa
xchg
out
aas
pushf
clc
call
xchg
les
je
sbb
loope
mov
pop
scas
pop
dec
xchg
adc
mov
ss
in
sbb
sub
inc
or
cmp
mov
and
xor
xchg
jne
dec
test
fbld
xor
mov
outsb
outsb
nop
shrb
push
lret
sbb
aaa
je
and
push
adc
lods
jbe
mov
mov
pop
push
and
enter
or
lea
cltd
sahf
sub
sbbb
mov
divl
push
lods
xor
inc
fimuls
or
xchg
mov
sub
push
pop
inc
push
shrb
in
dec
lea
mov
add
add
push
popa
push
xchg
xchg
jmp
xchg
sub
ret
popf
sar
into
sub
mov
scas
incl
mov
push
mov
push
pop
push
icebp
insb
fwait
and
in
repz
leave
mov
stos
adc
pushf
and
jne
mov
xlat
adc
pop
push
ret
push
xchg
xor
movsb
pusha
addr16
cmp
cmpsb
les
pop
movsl
mov
mov
pop
add
and
mov
aam
sbb
daa
sbb
pop
ss
dec
out
jo
test
insl
lgs
pop
pop
jmp
jns
adc
loop
pop
fisttps
push
inc
adc
jno
cltd
lret
fs
movsb
jmp
pop
sub
push
enter
jb
sbb
leave
lods
jmp
xchg
inc
stos
xchg
pop
scas
pop
pop
arpl
repnz
clc
loop
jne
aam
pop
iret
subl
lahf
sub
cs
mov
repnz
push
mov
popf
stos
adc
nop
mov
ds
jae
fsubl
add
dec
insl
jno
lret
aam
ss
in
scas
add
test
mov
add
sbb
test
mov
jae
movsb
daa
dec
std
cmc
cmpb
pop
in
push
jl
jmp
add
subl
xor
pop
inc
lahf
or
stos
adc
mov
das
aas
rolb
fdivr
dec
jns
fimull
pop
loopne
pop
mov
jb
cs
xchg
jl
and
mov
xor
cmp
xor
outsl
inc
les
mov
leave
pushf
pop
xchg
leave
cmp
pop
notb
sub
dec
js
mov
xor
shrl
outsb
jp
and
lret
sbb
jp
cwtl
mov
or
jno
xchg
pop
repz
and
test
sub
sbbl
mov
inc
popf
aad
xorl
clc
mov
lret
data16
adc
add
cmpsb
sahf
fldt
outsl
cmc
jno
cmp
leave
dec
cmp
je
sahf
add
fimuls
cmp
leave
in
movsl
rorl
mov
mov
enter
jle
in
or
inc
std
add
cmp
dec
mov
inc
in
pop
xchg
test
in
mov
and
xchg
cmp
pop
clc
les
shll
and
sbb
dec
in
mov
test
pop
imul
cwtl
adc
push
mov
pop
push
pop
lds
pop
movsb
adc
test
sbb
xchg
pusha
imul
movsb
cmpsl
inc
jmp
sar
mov
mov
pop
in
xor
mov
or
xor
cmpsl
neg
jne
ljmp
ja
insl
mov
out
imul
test
adc
enter
mov
fwait
cmp
dec
scas
and
xchg
inc
loope
push
fistl
cmpsb
jb
iret
inc
scas
push
or
push
cld
add
mov
and
jnp
mov
lods
mov
sub
fstsw
adc
mov
loopne
jnp
xor
mov
push
enter
inc
cmp
ds
fistl
popf
fisttpll
inc
mov
push
jo
xlat
sub
fwait
notb
adc
daa
push
push
jp
cli
jns
out
dec
sub
test
adc
dec
cmp
cmpsb
stos
fcom
jge
lcall
in
sub
loopne
dec
xor
sub
ja
test
rcll
or
repnz
adc
std
or
push
pop
es
cmp
imul
mov
leave
cmp
jo
out
mov
mov
addl
sbb
or
roll
jmp
xor
rclb
rorb
test
pop
mov
mov
sbb
pop
inc
leave
dec
mov
mov
cltd
or
add
mov
lea
add
adc
hlt
add
jecxz
mov
orb
sbbb
xchg
cmpsl
das
loopne
dec
pop
outsb
and
mov
add
les
xor
in
and
mov
jae
js
jmp
enter
inc
iret
mov
imul
cmp
repz
cld
icebp
xchg
mov
clc
mov
or
mov
out
or
dec
jb
fs
insb
cmp
sub
lcall
lret
adc
aaa
jno
or
push
mov
test
xchg
test
and
daa
xor
inc
inc
pop
and
arpl
icebp
and
jp
ret
push
lods
xor
sub
in
push
inc
lahf
fimull
popf
push
sub
stc
jae
out
mov
dec
jbe
pop
not
dec
add
pop
out
sahf
sbb
les
jp
shll
int
or
leave
push
popf
xor
pop
jle
inc
stos
dec
pop
pop
stos
lods
imul
fcmovb
test
push
jge
xchg
ja
xor
inc
cwtl
insb
mov
popf
repnz
pop
mov
jb
sub
push
repz
rcrl
pop
inc
cmp
xorb
xchg
aad
xlat
sbb
sti
sahf
pop
sbb
nop
lea
out
addl
push
inc
lret
sarl
int3
sbb
and
lds
imul
rcl
lret
mov
sub
cmc
decl
addr16
outsb
in
push
inc
lcall
sarb
xchg
mov
mov
pop
mov
pop
add
sbb
mov
mov
pop
adc
xor
add
pop
lcall
out
lahf
std
inc
call
sub
cmp
xchg
push
jg
arpl
cmc
sub
inc
sbb
lods
lcall
mov
leave
imul
gs
or
ljmp
outsb
dec
lret
ret
icebp
rep
xor
push
sub
xchg
mov
jmp
dec
lds
insl
loop
enter
sbb
jg
rclb
or
repz
add
js
addr16
test
adc
or
jo
aam
jp
xor
out
push
ja
xchg
in
xchg
pop
add
movsl
fsubrp
sbb
mov
sub
and
lret
mov
cmp
xchg
stc
lret
int3
xchg
mov
loop
lret
sbb
mov
fidivrl
ja
add
inc
in
jno
xchg
imul
adc
insl
mov
cwtl
test
cmp
add
mov
cmp
mov
cmp
mov
xchg
push
or
inc
sub
bound
dec
pop
xor
lahf
cwtl
jg
call
adc
add
decl
in
mov
xor
in
fimull
jne
aam
gs
lods
in
fists
cld
push
shrb
jbe
lret
sahf
lret
cmpsb
aaa
jg
ds
xor
cmpsl
jb
in
add
iret
fwait
pop
loope
jmp
loope
and
cmpsl
femms
sbb
dec
data16
or
inc
ja
lcall
push
es
ret
pusha
jge
movsl
in
xor
call
mov
sbb
adc
jge
fstps
ds
pop
pop
adc
jmp
cmp
pop
idiv
jo
aam
imull
mov
jo
xchg
std
subl
sbb
adc
adcl
mov
push
and
es
shrb
test
lcall
push
mov
aaa
orl
mov
mov
int
jge
pop
loop
ja
sub
hlt
xor
dec
in
pop
shlb
mov
pop
je
pushf
scas
stos
jle
aam
rolb
stos
cli
nop
jl
in
xchg
je
and
into
daa
rorb
in
inc
jl
inc
and
rcll
pop
cltd
ds
das
popf
cmp
decl
les
xor
xor
mov
sub
mov
icebp
add
jno
adc
outsl
in
adc
stos
jne
and
lret
outsb
fimull
mov
mov
es
out
sbb
cwtl
imul
int
int
je
mov
pop
pop
sbb
add
push
jae
popf
popa
bound
div
lods
js
jno
jns
cmp
push
jne
loop
pop
aam
mov
and
test
and
ss
negb
addr16
pop
cmc
push
iret
xor
ss
stos
adcb
pop
cli
inc
fmull
mov
fmull
inc
or
nop
jbe,pt
dec
pop
lret
mov
fwait
jne
ror
lea
enter
jns
loopne
mov
pusha
dec
data16
push
sub
insl
aaa
into
ljmp
pop
movsb
jmp
enter
pop
xor
iret
popf
insb
inc
outsl
movsb
or
xor
and
repnz
dec
ds
orb
adc
shr
ja
out
xchg
mov
out
testl
push
dec
sub
xor
cmpb
mov
imul
rcl
xor
dec
lahf
add
xchg
cld
adc
test
jge
xchg
lock
ss
rcll
andb
andb
jmp
push
mov
outsb
push
dec
daa
call
mull
fs
imul
sahf
out
fwait
sub
out
out
and
pop
xchg
mov
addr16
rorb
daa
mov
xchg
inc
or
lock
jmp
and
ds
pop
mov
jg
mov
andl
loopne
mov
lock
pop
in
adc
shl
xchg
lea
outsl
fdivrp
js
pop
shlb
mov
mov
cltd
xchg
dec
xchg
xor
add
and
outsl
mov
ds
in
nop
es
xchg
pop
daa
fs
nop
sub
sub
nop
xchg
pop
and
jae
fnstcw
and
incb
pop
jle
push
fwait
dec
jb
mov
popf
imul
loope
test
dec
int3
aam
sarl
push
enter
jne
sub
cmpsb
jmp
pop
test
xor
daa
sbb
push
ret
js
rcrb
push
and
scas
das
in
cltd
out
mov
dec
dec
dec
xor
jae
stos
xchg
adc
dec
aam
in
jge
in
mov
push
insb
mov
int3
sbb
and
adc
ret
jl
ljmp
dec
fmuls
xchg
orl
std
pop
ret
lahf
lret
cwtl
and
arpl
push
aas
cmp
and
adc
pop
sub
je
inc
enter
sbb
jne
test
mov
das
bound
adc
dec
fcoms
mov
and
std
pop
in
fcmovnbe
icebp
sbb
aam
outsb
shl
fs
popf
popf
and
or
sbb
push
lods
xchg
sub
jbe
js
shlb
mov
jns
mov
insb
scas
dec
out
fsubs
mov
jo
mov
stos
lods
pop
pop
pop
cs
cmp
jmpw
aaa
sbb
and
mov
sub
lcall
cmp
or
out
into
sbb
mov
andl
xor
mov
pop
fstps
cmp
cltd
stos
popf
xchg
mov
sti
scas
and
loop
je
test
mov
mov
lods
dec
aas
pop
jo
cli
cwtl
pop
xchg
out
js
fsubp
sbb
mov
xchg
mov
and
cli
cmp
call
mov
mov
fcmovbe
mov
cltd
lock
pop
sub
repnz
sbb
sbb
aad
sbb
nop
sub
or
sti
lret
mov
cwtl
dec
add
sar
add
jl
test
xor
rorb
outsb
ret
cltd
lret
out
repnz
push
inc
mov
xor
ljmp
insb
xor
xchg
mov
sbb
push
sub
test
inc
outsb
pop
cmp
mov
repz
aad
adc
mov
cmp
xchg
outsl
test
andb
scas
data16
stc
addr16
xchg
dec
xchg
aad
lea
xchg
pop
cmc
out
and
bound
push
push
aaa
les
cmp
stos
js
fistps
mov
sbb
ljmp
pusha
mov
xor
sub
pop
mov
stos
rol
std
inc
in
cmp
dec
push
pop
in
outsl
cmp
insl
ja
mov
dec
xchg
push
cmp
cmp
fsubrl
inc
pop
and
or
sbb
fidivl
mov
mov
scas
addr16
fimuls
leave
xchg
adc
xor
mov
dec
std
aas
mov
mov
dec
mov
xchg
xor
or
repnz
lods
jae
out
jns
mov
jbe
pop
push
subb
and
andb
xor
pusha
mov
cmp
iret
lods
loopne
or
in
lret
or
sbb
push
cmp
mov
int
outsb
mov
jns
mov
shl
dec
test
jnp
out
xor
inc
mov
mov
es
xchg
sub
vpsubusb
lods
dec
or
fldl
stos
sub
xchg
pop
sub
add
shlb
or
in
insb
ja
cld
dec
inc
scas
inc
insl
imulb
ret
aas
sub
call
pop
outsb
insb
xlat
je
in
xchg
xchg
arpl
inc
std
and
data16
mov
ret
jle
leave
vsubps
jbe
mov
stos
and
test
push
mov
in
push
xor
ret
pop
push
lds
clc
pop
ret
add
data16
mulb
and
in
mov
or
jmp
test
sbb
pusha
cmc
jp
repz
xor
add
loop
jns
add
adc
shr
aam
stos
fcompp
xor
into
mov
dec
xor
enter
imul
push
cmc
xorl
mov
fidivs
outsl
rcrl
jmp
dec
ror
or
jmp
dec
sahf
les
mov
flds
rcrb
imul
movsl
ret
add
pop
in
scas
push
or
xchg
xor
push
bound
sub
cmpb
mov
mov
test
mov
push
enter
loopne
mov
mov
add
sbb
xchg
fwait
mov
cltd
cmp
xor
nop
push
push
pop
repz
jnp
mov
mov
or
out
inc
mov
or
outsb
mov
in
lahf
aam
xchg
cmp
or
and
sbb
cltd
add
cli
jl
add
or
or
aam
and
js
sub
mov
fcomps
or
mov
or
insl
xor
add
xchg
xchg
mov
mov
insb
jno
es
sub
adc
fmuls
sub
sti
inc
xchg
sbb
ret
mov
std
aad
dec
xchg
addl
sub
cmp
dec
pushfw
scas
push
push
loope
xchg
insb
lea
pop
jge
out
test
cli
dec
jbe
not
movsl
inc
out
pusha
jg
mov
cmpsl
push
insl
jns
fld
ljmp
and
dec
pop
mov
jmp
adc
jle
mov
mov
sbb
add
into
daa
cmp
mov
inc
xchg
jbe
ss
jo
pop
stc
push
cmp
pop
and
das
js
lods
mov
or
xor
dec
xchg
test
cmpsl
jno
mov
inc
or
sbb
inc
ret
inc
jo
cmp
xchg
sysret
in
inc
lods
dec
lret
mov
loope
xchg
shlb
xlat
scas
sahf
aaa
lods
mov
sarl
sub
cmc
call
and
dec
push
jp
inc
es
add
mov
xchg
mov
nop
sub
xchg
into
xor
pop
xor
mov
push
inc
mov
cs
insb
or
mov
xor
xor
mov
adc
pop
test
adc
adc
lds
jge
xlat
nop
lret
or
jl
mov
icebp
sbb
pop
xchg
pop
loope
in
add
int
and
sub
cmp
inc
xorl
fldt
xor
aaa
dec
psubd
sbb
jb
sub
pop
pusha
roll
cltd
mov
das
mov
frstor
add
cmp
mov
arpl
jge
jge
pop
xchg
test
push
das
push
jbe
sbb
inc
or
inc
loope
jno
mov
xchg
mov
fmull
mov
icebp
insb
xchg
in
arpl
mov
fisttpl
insl
cmp
mov
lret
sub
fstl
sub
mov
and
sub
and
cmp
jle
cwtl
rcrb
aaa
fldenv
xchg
sbbl
shll
stc
lods
outsb
and
inc
clc
mov
adc
and
pop
cmp
inc
cld
sbb
and
iret
cmp
or
cmp
dec
aad
fcom
sub
sbbl
jle
add
mov
mov
mov
cli
dec
nop
loope
cwtl
fnstenv
dec
ficoms
stos
in
loopne
add
stc
ret
in
pop
push
aad
fmuls
push
movsl
jns
mov
cmp
inc
cmp
jle
pop
adcl
sahf
lds
and
es
or
fsubl
aam
mov
movsl
xor
and
or
push
mov
hlt
fcmovnu
jo
cmp
popa
xchg
mov
adc
pop
mov
cmp
sahf
sbb
shlb
mov
frstor
adc
pop
iret
xchg
jnp
push
in
mov
lds
xor
sbb
cwtl
shll
lods
rcll
cmp
adc
adc
cmpsl
sarl
aaa
lahf
clc
out
subl
mov
out
dec
cmp
adc
insb
lea
packsswb
mov
pop
mov
add
pop
mov
cmpsl
sbb
pop
dec
jg
cmovb
push
das
bound
jb
sbb
out
mov
lahf
shrb
add
outsl
and
cmovb
push
das
bound
jb
sbb
out
mov
lahf
shrb
add
outsl
pop
jg
cmovb
cli
das
bound
jb
pop
fists
pop
lahf
shrb
add
outsl
and
cmovb
push
das
loop
jb
jge
cmp
inc
clc
dec
pop
sub
adc
hlt
add
and
pop
gs
mov
in
mov
mov
adc
xor
push
or
cmp
sub
mov
in
mov
mov
adc
add
xor
inc
adc
arpl
lods
mov
mov
lret
xchg
sbb
push
sbb
xchg
xchg
dec
cmpb
das
sub
iret
repz
hlt
inc
aam
sbb
js
sub
sbb
and
fmull
mov
pop
cs
add
sbb
pop
or
pop
aad
in
dec
xchg
add
enter
loop
push
xor
mov
arpl
add
dec
or
loop
in
xor
add
cmp
sbb
lcall
in
dec
adc
mov
lods
fsubp
push
mov
sbb
pushf
addb
out
nop
outsl
sbb
fsts
leave
push
xchg
cwtl
hlt
inc
mov
insb
xor
std
mov
mov
stc
out
jecxz
adc
xor
and
dec
inc
cmp
xchg
arpl
xchg
pop
andl
mov
mov
jle
sarb
jne
gs
jns
das
push
dec
adc
fisttpll
mov
pop
push
les
xor
insl
push
sbb
arpl
out
cltd
in
iret
out
mov
in
lea
inc
jg
or
sub
inc
cmp
sub
fcoml
in
mov
mov
adc
xor
push
or
cmp
sub
fcoml
in
mov
mov
adc
repnz
xchg
arpl
and
sbb
fucomi
xor
or
pop
xchg
roll
pop
or
xchg
jmp
dec
adc
nop
js
out
jle
aaa
jl
xor
push
pop
shll
jb
pop
cmpsl
sbbl
jmp
cli
or
push
sub
mov
cs
and
ffreep
xchg
repnz
aas
data16
imul
sbb
insb
mov
js
js
and
stos
push
add
mov
lods
mov
add
pop
mov
rcll
mov
adc
rorb
lcall
pop
cmp
pop
cwtl
loope
xor
xchg
jmp
roll
xchg
lds
pop
inc
jp
outsb
popa
sbb
leave
enter
ret
divb
ss
addb
pop
shlb
stos
sub
fwait
icebp
push
mov
pop
jne
test
xchg
inc
adc
mov
jg
pop
imul
mov
leave
xchg
scas
mov
addr16
jmp
sub
scas
sbbb
or
lret
insb
into
rep
jg
xchg
ret
mov
fisubrs
pusha
clc
sti
adc
data16
xor
sbb
jbe
daa
cmp
push
or
dec
pop
mov
mov
sbb
push
jecxz
arpl
int
pop
dec
pop
es
push
pop
add
xor
out
out
mov
pop
iret
js
xor
ljmp
mov
cmc
aaa
mov
xor
dec
xor
push
mov
add
pop
mov
insb
add
gs
fcompl
jns
popf
jge
scas
in
scas
add
mov
inc
negb
testb
xchg
sbb
inc
ret
pop
sbb
fistps
push
cmp
sub
repnz
and
mov
jne
fmull
or
fistps
adc
out
mov
sub
xlat
push
cld
push
inc
lods
mov
sahf
popf
cmp
dec
xor
sbb
out
loop
aaa
mov
pusha
cmc
sub
cli
iret
add
pop
sbb
icebp
mov
dec
lcall
and
sbb
jle
or
movsb
lcall
dec
test
test
sub
testl
pop
dec
adc
inc
rcrl
mov
mov
push
jno
shll
pop
stos
mov
aam
inc
push
out
or
mov
sbb
jns
jae
mov
pop
xchg
fsubp
mov
adc
push
mov
jle
xlat
jge
into
test
xor
inc
cmp
ret
cmp
push
push
push
cmc
pushl
pop
and
pushf
dec
mov
outsl
fs
or
std
call
xchg
mov
out
mov
popf
mov
mov
dec
loopne
ja
dec
dec
push
test
inc
inc
repnz
test
mov
pop
in
cmp
jnp
xchg
mov
lock
push
push
push
adc
stos
insb
adc
fs
mov
jle
das
test
mov
je
nop
test
shrb
mov
or
add
push
rorl
add
mov
sbb
call
ret
fistl
imul
je
xchg
add
xchg
inc
sbb
jae
fwait
mov
and
jl
add
pop
test
cwtl
and
popa
js
and
pop
ljmp
mov
sbbl
mov
adc
scas
push
lods
mov
hlt
push
sub
stc
aad
mov
outsb
sbb
movsb
pop
test
sti
add
sbb
mov
lds
mov
stos
sub
and
lret
repnz
mov
dec
or
cmp
xchg
pop
pop
jnp
push
enter
add
fdivr
pusha
push
inc
mov
or
leave
mov
fwait
sub
xchg
inc
jmp
push
call
ds
leave
add
xchg
movntps
xlat
mov
int
movsl
repnz
lcall
fcoms
mov
in
xchg
dec
bound
sbb
push
lahf
sub
inc
push
jno
mov
pop
lret
rcl
scas
shll
popf
jns
or
mov
fsubr
in
loope
addr16
fst
cmp
out
push
enter
inc
int
pop
add
inc
adc
test
loope
mov
hlt
fiaddl
repz
mov
into
shlb
into
xor
xchg
adc
push
jae
jge
daa
sahf
add
or
fnsave
pop
sbb
test
fisubs
xchg
ss
push
ficoml
push
mov
jg
fldl
inc
pop
xor
pop
lods
sbb
push
frstor
subb
sub
mov
mov
sub
icebp
xor
es
lea
mov
xchg
mov
jno
or
cli
push
test
mov
dec
xor
movsl
std
mov
imul
push
inc
mov
je
sbb
pop
leave
out
pop
mov
or
push
add
dec
cmpsl
aam
mov
mov
cli
sub
sti
outsl
dec
stc
push
stos
rcrl
push
insl
jno
mov
or
dec
xor
icebp
ss
mov
imul
test
pushl
pop
jg
xchg
lods
sbb
jle
jmp
insb
push
pop
call
add
ljmp
or
inc
push
xchg
in
sysenter
add
inc
and
push
out
iret
mov
xor
push
xor
dec
mov
out
sub
and
lods
movl
inc
lods
mov
insl
into
shll
dec
adc
cld
insl
mov
or
pop
xor
mov
popf
adc
neg
and
aad
push
dec
add
add
pop
arpl
xchg
call
leave
pop
mov
inc
cmp
cmpsb
subb
xlat
adc
adc
adc
int
fstpt
jmp
shll
nop
push
add
cmp
je
or
inc
popa
sub
jbe
loopne
lea
and
ftst
imul
or
or
dec
add
bound
lahf
or
mov
adcb
add
and
adc
cmp
mov
mov
ja
in
mov
and
jge
push
aaa
cs
pop
and
dec
mov
shll
cs
lock
jne
andl
add
nop
sub
mov
les
mov
iret
mov
imul
lahf
xchg
mov
test
ds
mov
mov
insb
pop
pushw
mov
adc
stos
pusha
mov
int
shrl
outsb
ror
push
dec
scas
sub
mov
add
mov
jl
je
aam
jne
rorb
fwait
push
and
shll
test
xchg
push
arpl
mov
jne
mov
cmc
xchg
jo
or
dec
jecxz
jbe
xorl
stos
cmp
sbb
jae
repz
and
pop
cmp
nop
or
sbbb
out
int
xchg
out
cltd
or
jle
fwait
add
fwait
loop
jge
inc
shr
cmc
out
push
mov
lods
jmp
sub
push
ja
lret
mov
push
mov
and
sbb
stos
pop
in
hlt
loope
movsl
sbb
fistps
inc
cmpsb
mov
sub
inc
sub
adc
cmc
sti
mov
xor
fnstenv
fdivrl
scas
inc
xor
pop
mov
mov
push
imul
ljmp
imulb
lahf
mov
push
test
cltd
ja
dec
fcoms
and
enter
js
adc
dec
dec
add
inc
aaa
int
cmp
mov
hlt
sbb
scas
mov
xor
sub
mov
sbb
dec
aam
sub
xchg
pop
inc
ja
ficoms
call
lods
mov
dec
dec
loopne
cmp
mov
fst
pusha
jno
mov
lods
adc
mov
js
adc
adcb
cmp
or
or
dec
mov
push
or
mov
mov
sahf
mov
lret
inc
arpl
data16
mov
mov
or
xor
out
leave
and
mov
jl
push
mov
pop
mov
adc
fwait
mov
xor
push
nop
cmp
icebp
adcl
xor
and
insb
arpl
lcall
ficompl
cmp
test
repnz
or
fldl
pop
iret
or
es
in
outsb
jle
push
shll
xor
loopne
xor
xor
in
sub
pop
pop
or
sub
jae
ds
mov
mov
sbb
lods
inc
or
in
xchg
sbb
mov
jnp
repz
lret
lea
insl
push
push
hlt
int3
dec
cmp
lcall
sbb
mov
clc
ss
imul
bound
and
in
sbb
loopne
sahf
in
mov
out
paddusb
inc
mov
pushf
das
sbb
into
shlb
jmp
fbld
or
cld
out
and
xor
pop
data16
data16
out
fwait
sbb
pushf
xorb
cmc
pop
ret
jbe
adc
cltd
unpcklps
and
ljmp
cmpl
cltd
negl
stos
fsubrs
movl
cmpsl
test
aad
jp
icebp
scas
scas
lcall
outsl
jbe
lds
fs
or
add
lret
cmp
push
xchg
ret
movsl
dec
scas
outsb
adc
dec
or
cltd
movsl
inc
dec
sbb
imul
xchg
mov
jnp
mov
subb
shrb
xor
popa
cld
shlb
ds
jns
les
push
and
loope
out
iret
in
ret
rcr
cmp
pop
dec
lock
scas
movsl
dec
shr
fisubs
and
jle
sahf
push
bound
mov
dec
lock
fcoms
in
dec
inc
mov
add
movsb
push
jns
cmc
insl
popa
adc
repnz
pop
xchg
cmpsb
pop
jg
inc
repz
cmp
gs
pusha
or
xor
cld
pop
jo
xor
inc
aaa
rcl
adc
pop
and
pop
xchg
mov
push
out
lds
mov
pop
into
jae
iret
xchg
cltd
or
mov
cmc
lds
icebp
imul
push
lret
ja
push
adc
repnz
lds
ret
orb
push
cmp
ljmp
out
and
push
sub
dec
dec
aas
das
push
mov
clc
ret
enter
xor
adc
pop
jo,pn
jnp
adc
dec
mov
mov
dec
inc
xor
fcoms
in
shrl
icebp
leave
and
ror
xchg
mov
mov
xchg
ss
xchg
sbb
iret
std
cmp
mov
cld
mov
dec
rcl
pop
daa
arpl
add
pop
add
mov
cmp
xor
and
test
mov
push
lods
adc
icebp
lret
insb
movb
or
sub
or
sbb
dec
dec
jae
stos
mov
jbe
sbb
fchs
out
jb
in
push
mov
pop
add
jle
dec
jmp
add
push
or
rorl
subl
int
repz
pop
xor
movaps
mov
leave
push
ret
mov
outsl
jge
mov
xor
pop
or
mov
movsb
xor
lret
mov
incl
gs
pop
jb
outsb
ss
xor
cmp
adc
mov
arpl
xchg
sarl
lret
mov
pop
insb
mov
mov
xor
cmp
and
xor
movsb
adc
sbb
cld
pop
xlat
inc
imul
rcrl
mov
sahf
mov
cwtl
andl
jo
js
ret
sahf
inc
inc
test
mov
jno
inc
pop
cmc
jns
into
fdiv
xchg
mov
dec
xor
scas
mov
inc
cmp
fisubrl
pop
out
inc
pop
lods
dec
insb
cmp
mov
in
cmc
add
adc
shr
sahf
push
outsl
lods
out
xchg
cwtl
sbb
xor
mov
cmp
aas
push
addl
repz
and
xor
andb
cli
jecxz
rorl
push
out
or
mov
lret
scas
lcall
mov
sbb
jne
in
sahf
dec
popf
cmp
push
scas
fisubl
xor
and
dec
out
or
aam
data16
lfs
jg
or
or
dec
mov
insb
inc
mov
or
xchg
add
popa
stc
ret
arpl
pop
xor
or
inc
pop
jl
repnz
adc
sub
xlat
mov
sub
cmp
inc
lock
fcomp
sbb
jle
iret
negb
mov
pop
jno
sbb
pusha
mov
int3
pop
and
mov
cmp
outsb
andb
cmc
cmp
stos
xor
xchg
mov
push
inc
sbb
int3
push
out
test
jg
int
lock
mov
dec
nop
les
or
mov
pop
mov
mov
pop
jne
data16
cmpsb
mov
add
lock
lods
insb
adc
pop
lods
sbb
pop
pop
inc
lea
jnp
enter
scas
pop
daa
xchg
hlt
or
inc
push
xchg
adc
cli
mov
fmulp
out
enter
jl
std
xor
inc
ret
fs
adc
inc
add
xchg
cwtl
ret
xlat
ficompl
icebp
dec
jo
je
cmp
outsl
push
or
mov
cltd
data16
push
out
xchg
enter
jle
call
scas
out
or
add
in
popa
push
dec
pop
lods
ja
mov
loop
inc
leave
into
sbb
inc
leave
jle
out
mov
ret
jecxz
jle
add
cld
xor
dec
int3
int
clc
jle
add
or
xchg
aam
adc
mov
into
lods
mov
jp
and
xor
mov
xchg
sbb
inc
dec
jg
out
clc
pop
aam
dec
mov
add
mov
sbb
jb
add
mov
sbb
out
cmpsb
mov
idivl
lret
mov
out
movsb
in
ret
out
addr16
loopne
dec
in
leave
lock
cmp
inc
repnz
int3
outsb
mov
jmp
stos
nop
push
dec
and
stos
dec
jno
ret
dec
cltd
ss
ds
cs
lods
adc
lods
sarb
insl
add
fsubs
aad
add
fs
cmp
and
cmp
fistl
aam
shl
leave
push
or
adc
cwtl
sub
mov
stc
xchg
repnz
or
mov
and
daa
std
adc
imul
imul
icebp
adc
xchg
mov
test
data16
adc
aad
insb
mov
test
das
xchg
aam
popa
xchg
pop
lea
jp
fxch
sub
cmpsb
cmp
leave
hlt
jecxz
cli
fmull
pusha
xchg
adc
inc
je
mov
bound
data16
xchg
and
pop
mov
lahf
stos
jg
outsl
cltd
int
push
leave
pop
sbb
fdivr
and
clc
repz
dec
cli
push
mov
or
xchg
lea
int
bound
sbb
idivb
sub
and
jbe
cmpsl
inc
enter
pop
roll
std
scas
imul
ret
cmc
cwtl
inc
dec
sbb
sti
cmpsl
mov
ljmp
cmp
xor
loop
out
xor
lods
mov
cld
frstor
or
shlb
dec
scas
repz
xchg
mov
sub
mov
call
lock
subl
mov
std
rorl
sahf
xchg
mov
adc
pushf
insl
sbb
sbb
in
push
je
ret
inc
fadd
lahf
cmp
fcmovnu
jnp
lds
bound
fstl
imul
fsubp
xor
enter
fsts
popl
aaa
mov
mov
test
mov
pusha
lods
pusha
shrb
cmpsb
mov
negl
addl
and
mov
adc
test
sbb
loop
xchg
popf
or
push
mov
xor
mov
in
jne
ret
jnp
clc
aam
lock
xor
xchg
add
imul
sbb
dec
out
dec
arpl
dec
sbb
push
aad
das
dec
pusha
cmp
ret
jbe
mov
cmpsl
iret
mov
enter
aad
lret
ret
ja
jge
push
xchg
jnp
test
adc
sbb
aaa
xor
or
in
pop
xor
mov
mov
rorb
insl
mov
lods
mov
fistl
xlat
sti
mov
hlt
inc
test
adc
rcrl
pop
pushf
cltd
or
or
jl
out
sub
xchg
daa
leave
xchg
fidivl
dec
pop
mov
lods
stc
and
push
lds
mov
lahf
pop
aas
test
mov
test
fstl
dec
inc
mov
mov
jb
subl
mov
jge
lock
pop
addb
jmp
in
jge
sbb
mov
sub
loopne
jns
cwtl
repnz
mov
push
jmp
mov
cmp
and
pop
sbb
and
cmp
lods
xchg
lds
mov
popf
clc
nop
lea
mov
adc
xor
sbb
sub
xor
fnsave
or
popf
sbb
das
imul
mov
sub
xor
aam
push
xchg
sub
xchg
xor
cmc
scas
and
dec
xor
enter
xchg
mov
dec
int3
cld
jg
mov
xchg
cmp
lds
mov
mov
mov
mov
mov
push
nop
mov
lods
and
xchg
imul
mov
shlb
or
rcrb
pop
jl
inc
test
mov
add
inc
mov
xchg
inc
xchg
lods
lret
in
xchg
xchg
out
fxch
scas
pop
or
fucom
imul
jle
ja
mov
lcall
mov
cmp
je
ss
push
adc
fadd
dec
add
mov
push
rorb
mov
push
gs
jno
cli
sbb
sbb
jl
mov
out
aam
mov
gs
mov
rcl
sub
mov
sahf
push
mov
xor
movsb
cltd
in
xor
movsl
daa
push
fmuls
dec
push
jl
mov
dec
pop
sub
test
ficoml
hlt
mov
rcrb
inc
out
push
cli
test
pop
xchg
xor
loopne
cmp
adc
or
test
pop
dec
mov
jns
sti
imull
push
mov
adc
dec
xlat
into
fsub
mov
call
cwtl
test
push
sbb
mov
loop
stc
and
imul
iret
sbb
pop
push
xchg
jb
and
mov
sub
sub
fs
loop
sub
lods
frstor
push
xor
rorb
dec
ja
and
jnp
sub
cmpsb
scas
mov
cmpsl
jge
bound
mov
push
inc
cmp
outsb
stos
mov
cmc
out
movsl
pop
mov
int3
stc
js
or
movsb
inc
fisubrl
xchg
std
sbb
aaa
xchg
pop
repnz
ret
lods
out
inc
les
mov
js
incl
fldl
mov
jp
ljmp
pop
out
jbe
das
jecxz
in
add
dec
fcomps
ds
fsubs
pop
ljmp
sub
xlat
sbb
push
cmpsb
mov
jno
mov
mov
roll
test
sahf
cltd
fcoml
sahf
jae
addl
mov
adc
cmp
add
popa
je
into
sub
fadds
pop
or
fists
xchg
inc
outsl
movsb
popa
shrl
nop
mov
and
mov
leave
ss
dec
roll
es
iret
stos
mov
icebp
aas
scas
push
xchg
lods
outsl
flds
pop
clc
aaa
mov
js
pop
fwait
pop
ds
int
std
add
cmpsb
mov
ja
out
pop
sar
adc
xchg
scas
mov
shrb
lds
fs
inc
push
adc
stos
xlat
pop
cli
jmp
xchg
add
add
es
repnz
mov
pop
lock
jo
jb
idivl
cmpsb
in
dec
jl
roll
pop
or
sbb
dec
and
add
pop
je
mov
sbb
jne
add
cmp
mov
or
enter
test
movsl
inc
mov
xchg
xor
int
mov
sbb
dec
dec
xlat
faddl
xchg
mov
test
add
mov
xchg
jg
movsl
mov
fdivrl
jo
cmp
pop
dec
jmp
fldl
jb
cli
or
and
add
aad
inc
dec
lahf
add
push
cmc
outsl
inc
mov
adc
cmp
xchg
arpl
mov
or
in
mov
repz
add
xor
movl
sbb
or
cmp
sub
fcoml
in
mov
mov
adc
xor
push
or
cmp
sub
fcoml
in
mov
mov
pop
dec
add
and
jb
arpl
xchg
int3
xor
call
ret
mov
adc
hlt
xor
push
sbb
cmp
lods
pushf
fsubrl
push
mov
aam
pop
add
inc
or
sbb
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
lcall
pop
scas
xchg
mov
mov
out
push
decl
into
fildll
scas
pop
mov
outsb
outsl
sahf
jg
dec
mov
aas
into
paddd
out
out
push
ljmp
fildll
scas
pop
mov
outsb
outsl
sahf
jg
dec
mov
aas
into
paddd
out
out
mov
push
scas
pop
mov
and
sahf
jg
add
ud0
sub
outsb
cmp
shrb
mov
jbe
lods
cmp
repnz
cmp
push
push
cs
xor
test
push
lcall
mov
xchg
addr16
ljmp
ret
mov
test
scas
icebp
cltd
and
adc
mov
test
jg
outsl
jb
scas
das
fists
into
out
jno
adc
lds
into
shll
dec
xor
mov
adcl
push
fbstp
fisttpl
jmp
insl
xchg
mov
rcr
cld
dec
xlat
mov
andl
push
iret
stos
testl
imul
mov
dec
mov
outsl
xor
pop
scas
das
fidivrs
into
paddd
out
out
push
decl
iret
fildll
scas
pop
mov
pop
sbb
cmp
insb
mov
into
dec
mov
mov
mov
aas
repz
xor
pop
fmull
pop
stos
jns
xchg
jnp
pop
mov
and
sbb
push
jg
outsb
fidivrs
into
paddd
out
out
push
decl
iret
fildll
scas
pop
mov
outsb
outsl
sahf
jg
dec
mov
aas
into
paddd
out
out
push
decl
iret
fildll
scas
pop
mov
outsb
outsl
sahf
jp
ret
jmp
jge
jmp
clc
cld
cmpsb
push
dec
cmpsl
sub
lods
call
and
popf
sub
ret
xor
ljmp
imul
out
pop
shr
mov
jno
or
cmp
lea
sub
dec
addl
jno
add
mov
push
aaa
mov
sub
mov
xchg
jb
stos
jp
xchg
mov
sub
popf
lock
mov
sbb
push
add
push
xchg
stc
aaa
loopne
sbb
adc
in
mov
and
sbb
push
cmp
push
xchg
loopne
mov
mov
lods
sar
mov
fistps
or
jmp
xchg
push
movsl
sbb
push
xchg
addr16
incl
add
inc
rolb
jnp,pn
mov
dec
dec
fsubp
rcrb
enter
mov
push
mov
or
push
insl
cli
adc
mov
push
xor
cmp
movsb
adc
mov
mov
adc
js
push
add
sub
test
enter
xor
out
daa
sahf
xchg
inc
cmpsl
iret
and
sub
push
shrl
xlat
imul
sub
xchg
pop
pop
lods
mov
ljmp
push
int
inc
adc
add
jo
call
test
inc
cld
and
adc
xchg
cmp
push
adc
sub
inc
sub
in
call
jnp
enter
jb
inc
sbb
mov
icebp
shlb
stos
stos
gs
jp
les
adc
sbb
pop
push
test
pop
push
or
cld
xchg
ja
aas
ret
inc
stos
cs
pusha
outsl
aaa
pop
inc
pop
lds
mov
ret
std
icebp
or
cmp
mov
lret
or
loope
dec
jo
sbb
xchg
jmp
fxam
mov
sahf
popa
pop
cmp
insl
cmp
dec
addr16
push
jmp
sbb
stos
cmp
mov
lret
xor
ficoml
fnsave
or
pop
dec
cmp
xor
adc
fwait
mov
xchg
and
aaa
out
scas
popa
fnstcw
ljmp
push
push
scas
sbbb
jg
sti
scas
cmp
bound
and
loope
into
data16
sub
mov
cmp
in
lock
aas
or
jg
pop
or
add
outsb
cmp
pop
pop
ret
dec
add
mov
sbb
pop
cli
repnz
inc
aam
sub
cmc
jmp
xchg
ficoml
mov
xchg
mov
sbb
scas
int3
push
adc
adc
sarl
cs
dec
push
aas
pop
xchg
mov
incl
adc
add
ret
mov
cld
jge
les
fisubrs
repz
sub
inc
jno
sub
push
jecxz
push
and
sarb
int3
and
push
insl
mov
in
add
fisubs
pop
movl
movsb
cmp
ds
mov
or
dec
xor
test
js
jg
out
add
mov
xchg
out
subb
cmp
lock
mov
add
jle
pop
sbb
cmpl
maxps
sub
sub
fstpl
shlb
rolb
pop
xchg
jl
mov
add
std
mov
nop
and
sahf
or
inc
aam
rcll
cmp
adc
loope
das
popa
push
movsb
lret
test
pop
stos
test
lods
loope
jge
dec
loopne
mov
sub
movsl
dec
lret
aam
push
add
xor
jle
push
cmpsb
popa
xchg
stos
ret
mov
pop
mov
mov
dec
movsl
push
add
pop
cmp
aaa
pop
cmpl
and
test
movsl
out
leave
insl
pop
or
hlt
test
rcll
push
sbb
or
sub
dec
sub
test
mov
or
test
adc
mov
rorb
and
xor
mov
addr16
les
movsl
add
push
leave
loope
neg
cmp
or
mov
fidivs
mov
fstl
inc
xlat
add
arpl
adc
pop
mov
jo
icebp
js
movl
sub
repnz
rorl
nop
sub
ds
je
fmuls
add
in
hlt
mov
mov
into
stos
cmc
ret
and
mov
dec
test
mov
loop
jno
sub
stc
or
mov
repnz
add
in
add
cmp
jle
cmpsb
lret
sarl
dec
push
jle
adc
bound
xchg
mov
mov
push
je
or
jl
cs
pushf
xor
pop
xchg
sahf
inc
xchg
dec
ja
out
mov
sbb
pop
mov
stos
test
mov
sub
push
or
mov
in
cmp
rcrb
je
xor
push
xchg
push
add
out
int3
cld
test
mov
mov
call
dec
fsubl
push
cmp
js
lea
ljmp
into
pop
mov
js
jbe
imul
pushf
mov
xchg
repnz
xor
cli
test
mov
mov
std
outsl
les
test
adc
daa
lods
lods
fwait
testb
jg
movsl
clc
scas
fisttpll
mov
jle
imul
outsb
pop
or
jp
in
jle
cmp
test
dec
lds
add
push
mov
fwait
mov
sbb
inc
out
push
test
je
dec
leave
cmp
push
cmpsl
pop
mov
stos
gs
mov
mov
sbb
mov
xor
dec
xchg
out
shl
lahf
adc
mov
xchg
or
adc
ret
sub
push
cmp
jl
mov
pushf
arpl
sbb
mov
pop
ljmp
rolb
inc
push
negb
movsb
mov
movsl
push
xor
dec
arpl
adc
shlb
xchg
cmpsb
test
jo
movsb
js
negl
daa
insl
push
inc
xchg
mov
mov
dec
out
shll
inc
inc
dec
push
jo
xor
lret
popf
std
test
jle
cltd
jg
mov
pop
add
int
cwtl
and
test
dec
fsts
mov
into
and
pop
mov
aaa
out
rcll
cli
adc
xor
xor
fcomi
pop
xor
xchg
mov
push
sbb
cmp
or
sbb
arpl
popf
mov
pop
popa
jg
push
imulb
add
jle
rcl
dec
addr16
lret
lods
inc
test
pop
pushf
push
ljmp
data16
jp,pn
xor
jmp
mov
rcr
shrl
push
mov
adc
add
outsl
lods
filds
cmpsb
int
add
aaa
test
push
fdivrl
xor
mov
dec
data16
pop
mov
push
out
mov
mov
bound
mov
push
repz
mov
enter
push
fsubrs
decl
push
imul
addr16
loopne
jge
push
dec
aas
inc
pop
xor
lcall
cmpsl
mov
xchg
imul
fcompl
sbb
je
call
arpl
mov
mov
pop
insl
sub
pop
add
xor
adc
and
mov
std
xchg
lock
adc
imul
sub
lock
and
xchg
jg
rcll
dec
jecxz
in
jae
add
add
loop
pop
push
jp
mov
dec
movsb
xchg
xchg
push
sub
pop
in
cld
inc
xchg
sar
sahf
lds
ret
inc
or
push
test
jnp
data16
mov
aas
sub
out
push
in
inc
out
icebp
lret
sbb
or
pop
or
jmp
test
faddp
test
push
into
ss
adc
pop
dec
mov
push
popl
jp
mov
lods
je
mov
xchg
insl
jns
sarb
sahf
inc
sbb
adc
xchg
mov
pop
out
xor
sbb
add
push
movsb
out
sarl
sbb
inc
out
cmpsl
movsb
fadds
imul
inc
inc
clc
add
pop
mov
lahf
ret
sub
or
jbe
sub
xchg
jbe
xchg
mov
lahf
cltd
and
xchg
or
xchg
test
xchg
into
xor
cwtl
rcr
add
jo
cwtl
addr16
rcl
push
and
jmp
aas
sahf
push
dec
jmp
or
dec
push
pop
mov
out
loopne
mov
addl
jnp
test
outsb
ljmp
outsl
fiadds
adc
ljmp
mov
lret
sub
fisubs
dec
lcall
or
out
pop
outsl
scas
dec
jns
push
xchg
rorl
daa
jo
dec
adc
in
jb
adc
orb
inc
cmpsb
jnp
pop
jns
lea
jg
repz
push
xchg
or
test
out
sbb
inc
push
fdivrp
ret
lret
jne
sbb
mov
xlat
pop
cmpsb
xchg
mov
sbbb
push
aad
cltd
inc
mov
js
push
enter
mov
cmp
inc
adc
xchg
pop
movsl
pop
sub
mov
inc
dec
jg
dec
enter
pmullw
jge
sub
push
orl
or
lods
rcrl
mov
push
data16
inc
push
jb
push
popa
sbb
sbb
push
jno
sub
loope
xlat
push
mov
push
jmp
aam
xor
inc
mov
icebp
jmp
add
fmull
fsubrp
inc
and
mov
or
clc
sub
adc
jl
lea
es
test
test
dec
js
adc
stc
cmpsl
xchg
and
das
notl
lock
sarl
xor
mov
cmpsl
shll
push
mov
xchg
sahf
imull
xlat
inc
mov
out
mov
imul
and
dec
aaa
xor
inc
in
lds
lahf
xlat
int
out
pop
lods
pop
lret
mov
lock
mov
mov
add
std
xor
mov
jecxz
test
in
and
int
outsb
xchg
and
shrl
fisttps
testl
rclb
mov
gs
fsts
and
pop
fs
mov
push
repnz
xor
sahf
ljmp
mov
cmp
cmpsb
stos
adc
mov
in
dec
scas
dec
xor
xchg
cwtl
lods
mov
mov
and
pop
adc
repnz
loop
sbb
repz
sub
push
cmp
and
lea
std
ret
repnz
or
test
push
popa
imul
inc
rolb
push
cmp
pop
push
mov
mov
add
dec
sub
je
cmp
sbb
mov
jnp
mov
pop
pop
jl
popa
sbb
jecxz
pop
add
xchg
adc
inc
addb
lea
nop
inc
xor
dec
xchg
out
jecxz
and
mov
or
sbb
sbb
jne
bound
add
cld
out
cmpsl
push
int
lcall
jg
nop
dec
out
mov
aas
lret
and
mov
jle
xchg
lods
loope
mov
rcrl
frstor
enter
les
ja
lods
pushf
xchg
nop
test
icebp
dec
popa
pop
cld
and
test
push
repz
dec
add
pushf
stos
mov
insl
outsb
loop
insl
movsb
in
dec
andb
push
clc
mov
shl
mov
cmp
xchg
add
gs
sbb
and
mov
stos
jl
and
push
xor
mov
push
lods
movsb
pop
add
repz
outsb
test
push
daa
popl
lcall
or
mov
sub
lcall
pop
scas
mov
and
jae
negl
mov
imul
fs
rcrl
cmpsl
or
push
fbstp
into
pop
mov
adc
por
xor
mov
inc
jmp
mov
inc
arpl
test
jns
cs
adc
jns
mov
popa
or
dec
jne
inc
fs
cmc
xor
and
cltd
arpl
cli
mov
mov
push
pop
jae
mov
lcall
aaa
inc
test
rcrl
sbb
mov
in
jbe
push
hlt
xor
lods
stos
sub
mov
mov
cmpsb
mov
cmpsl
ret
mov
mov
add
inc
add
test
mov
push
mov
or
shlb
lret
data16
xchg
movsb
scas
cmpsl
lds
add
sbb
mov
and
shll
mov
xchg
pop
xor
nop
mov
lret
mov
mov
out
xor
push
jae
and
cmp
and
add
jbe
and
outsb
adc
jns
mov
or
push
testl
jle
fists
push
mov
cmc
inc
sub
push
jp
or
daa
aad
mov
add
mov
es
lea
js
add
mov
mov
out
sbb
mov
pop
sbb
xchg
push
pop
not
mov
aad
xchg
dec
aaa
pop
push
pusha
cmp
lahf
push
lret
out
fnstsw
jle
fwait
cltd
lods
xchg
sub
scas
dec
pop
mov
inc
mov
aas
movsb
insb
xchg
or
inc
fwait
aas
jne
movl
push
push
push
mov
test
jle
sbb
push
mov
xchg
fcomp
pop
sub
test
insl
mov
jnp
mov
and
fucomp
xchg
pop
jo
sub
stos
int3
mov
and
in
sub
and
mov
stc
loopne
mov
or
inc
clc
imul
sbb
call
les
pop
inc
sbb
loop
in
movsb
je
jno
data16
andb
xchg
frstor
xchg
cmc
loope
fcmovu
fisubs
sti
lea
test
pop
cld
mov
fwait
nop
sub
loop
push
icebp
cmpsl
loope
mov
inc
arpl
and
cwtl
pop
in
inc
pop
sbb
in
clc
mov
aad
das
xchg
in
inc
sbb
mov
scas
jg
les
xor
or
mov
out
pop
pop
lcall
popf
scas
arpl
xor
xor
call
sub
inc
xor
fistpll
setnp
int
push
add
shlb
mov
cmp
fdivrs
sbb
xor
xor
xor
jmp
mov
test
fnsave
mov
sbb
sub
sbb
mov
mov
dec
aaa
dec
add
or
mov
inc
stos
jae
fldl
les
xchg
cmp
or
sti
or
mov
xchg
iret
cmpsb
pop
dec
dec
jg
arpl
sbb
sbb
mov
cld
in
aaa
pop
fbld
loop
xchg
and
cmpsl
jnp
rcl
add
add
fisubl
lods
push
fcmovnb
fldenv
pop
lret
cld
aas
cmp
call
test
mov
jmp
push
push
cltd
xchg
and
lds
jno
add
shll
cmp
mov
pop
scas
or
lods
sahf
repz
mov
test
jne
adc
call
mov
or
sub
and
adc
nop
or
inc
stos
loop
mov
mov
or
imul
mov
add
mov
nop
push
test
dec
out
lods
jne
mov
adcl
cmc
lock
aam
cld
sbbb
fs
rolb
repnz
leave
xor
lret
jle
and
clc
pop
sbb
adc
inc
pop
aas
inc
sbb
sub
inc
jecxz
add
je
outsl
mov
fcompl
inc
adc
inc
mull
stos
fldt
movsb
insl
sub
popl
pop
in
fs
xchg
xor
pop
mov
pop
pavgb
dec
and
push
jp
stc
mov
mov
je
rcll
cwtl
mov
fsubrp
xor
dec
xchg
pusha
mov
sbb
aad
inc
xlat
test
jmp
push
scas
jbe
outsb
popa
hlt
test
and
pop
shll
fnstcw
jmp
lds
adc
sbb
mov
xchg
push
lds
scas
cs
jbe
popf
gs
jnp
jecxz
cmp
dec
mov
call
sub
dec
sahf
jmp
sub
or
ret
cli
fcmovbe
push
mov
inc
movsl
out
pop
add
bound
jmp
fldcw
inc
push
int
out
sub
cmp
sbb
add
xchg
dec
leave
sub
stos
je
sub
ficomps
mov
mov
lret
enter
aas
daa
outsl
fcmovnu
daa
pop
out
mov
and
pop
xlat
movsb
pop
orb
fs
fistl
scas
daa
jno
into
push
shrb
jle
pusha
pop
sbb
add
or
inc
das
sub
cmp
jae,pt
into
negl
sub
lods
into
inc
jbe
xchg
iret
add
test
or
mov
dec
inc
js
sub
jbe
aad
cmp
loope
jae
dec
add
ljmp
cld
scas
outsl
cld
lret
rcrl
loope
or
les
dec
test
loop
imul
mov
push
adc
xchg
and
hlt
fists
sbb
rcrl
shl
cmp
sti
fsubl
scas
lods
fwait
xchg
cmp
in
test
xchg
mov
push
sahf
rorl
int
dec
xor
xlat
push
popf
dec
ss
inc
ficomps
rcr
std
hlt
xchg
xchg
sub
js
mov
mov
inc
jmp
mov
test
lock
cmp
push
shll
shl
or
xchg
fisubrs
mov
jne
jbe
or
push
ret
mov
xor
dec
aas
dec
mov
hlt
cmp
or
adc
lahf
mov
scas
or
or
jbe
mov
mov
lds
shr
in
mov
int3
mov
add
adcb
rclb
mov
push
or
js
mov
test
stc
sub
pop
nop
js
std
mov
dec
pusha
cmp
testl
fsubrl
int3
add
push
lret
push
jo
ret
add
jl
dec
xchg
scas
xor
shr
sbb
sub
add
cs
addr16
mov
shrb
fs
icebp
push
mov
loopne
mov
xchg
test
mov
pushf
xor
setns
cwtl
jbe
inc
add
int
mov
jno
lcall
push
adcb
jne
gs
popa
xor
test
mov
push
ljmp
cmp
hlt
cmp
nop
fs
orb
sarb
pop
repz
cmp
loope
sbb
in
addb
or
pop
rcl
jnp
data16
sbb
inc
push
inc
or
jbe
and
int3
push
rorb
incb
and
and
in
jle
mov
mov
cmp
sbb
mov
pop
or
push
fsts
adc
add
xorl
jle,pt
out
in
sbb
pop
pop
dec
push
add
fidivrl
rcr
fidivs
insl
gs
popa
add
stos
test
ficoms
imul
inc
add
push
sub
dec
leave
aad
xlat
fwait
adc
pop
pop
lahf
sub
mov
sbb
mov
adc
enter
adc
or
xchg
sti
pop
or
mov
lret
adc
scas
xor
push
mov
mov
push
xlat
movsb
iret
xor
add
int3
in
xchg
fstps
jnp
sub
adc
subb
sub
adc
orb
push
es
push
icebp
test
call
and
pop
rolb
or
popf
pop
fildll
cli
xor
xor
gs
jl
cwtl
pop
inc
ja
cmp
daa
ret
jns
mov
or
inc
jecxz
xchg
sub
in
push
push
data16
cmpsl
cmp
and
lahf
jne
sahf
mov
add
or
cwtl
aaa
xchg
xlat
lahf
lret
popa
cld
insl
mov
mov
popa
push
mull
add
inc
mov
xchg
pop
in
out
cmpb
push
sbb
in
adc
lret
orb
mov
jne
lret
fimull
fidivl
push
xchg
add
xchg
mov
sahf
loopne
jmp
outsl
or
mov
stos
add
movsb
jmp
dec
cmpsl
jnp
xchg
addb
mov
out
test
pop
je
popf
pop
les
sub
sbb
or
cltd
test
je
gs
bound
dec
adc
lods
mov
pop
scas
das
fidivrs
into
paddd
out
out
push
decl
iret
fildll
scas
pop
mov
outsb
outsl
sahf
jg
dec
mov
aas
into
paddd
out
out
push
decl
iret
fildll
scas
pop
mov
outsb
outsl
sahf
jg
dec
ds
scas
das
fidivrs
dec
paddd
out
out
sahf
decl
iret
fildll
scas
pop
mov
outsb
outsb
sahf
jle
dec
mov
aas
into
paddd
out
out
push
jmp
aaa
mov
andl
arpl
jg
mov
jb
inc
pop
aas
xchg
rcr
loope
shr
orl
mov
push
outsl
jae
add
adc
and
xor
ret
rcr
xchg
xor
cmp
popf
mov
push
dec
inc
jnp
imul
or
cmp
and
ret
iret
fdivr
xchg
xchg
rcr
fcmovbe
xor
push
das
das
or
ficoms
int3
lret
adc
pop
cld
divl
adc
push
mov
aad
data16
les
in
rcl
cli
rorb
sub
sbb
incb
aas
out
vmaxsd
inc
into
rcll
sub
dec
test
xor
sbb
mov
or
jl
or
inc
mov
es
bswap
pop
xor
jecxz
scas
jb
mov
sbb
push
pop
scas
mov
nop
pop
or
shrl
daa
and
xor
notb
repz
sub
dec
cmp
xchg
cmc
mov
sbb
cmpsl
sub
sbb
repnz
cmpl
mov
sbbl
arpl
jg
wbinvd
pop
and
sub
fcmove
lret
sti
imul
out
xchg
mov
xor
sub
addr16
pop
pop
mov
rcr
xchg
jmp
lcall
roll
push
ss
sbb
adc
jge
dec
pop
jbe
sarl
std
out
loopne
ror
mov
sub
pop
push
or
jnp
adc
and
xor
ret
iret
rcr
jecxz
repz
scas
mov
inc
dec
push
pop
arpl
jg
movlps
and
xor
ret
iret
rcr
jecxz
repz
scas
mov
inc
dec
nop
dec
cmp
sbb
test
sbbl
les
scas
loop
ss
or
sbb
jg
inc
add
jge
mov
mov
pop
mov
push
clc
jo
in
insl
mov
decl
and
dec
fs
jo
dec
xor
lock
xchg
add
cmp
js
pop
add
cmp
clc
flds
sub
add
ljmp
int
data16
add
pop
cltd
inc
loope
xor
stc
jne
inc
cmovne
bswap
das
hlt
jns
add
xor
shlb
in
loop
int
mov
xor
sub
xchg
push
and
dec
aas
xorl
int3
mov
lods
loope
push
sub
inc
push
inc
sub
ja
jno
dec
add
out
adc
mov
adc
mov
outsb
push
mov
je
sub
pop
pop
or
cwtl
or
inc
idiv
scas
xorps
iret
mov
xchg
lret
in
je
in
sahf
nop
jnp
dec
inc
xchg
dec
mov
xchg
jl
gs
pop
xchg
fucomp
jae
loop
cmpsl
add
into
jl
add
jno
jecxz
popf
ficoml
icebp
fcmovu
mov
mov
push
lret
cmp
aas
std
mov
mov
clc
mov
jecxz
sub
into
test
push
lea
ret
push
or
aam
xchg
stos
add
nop
loop
fisubrs
cmp
int3
dec
ljmp
add
push
jns
fadds
inc
int3
jmp
xorb
test
out
sar
mov
adc
bound
icebp
xchg
fs
cmc
lret
mov
fwait
push
cmp
popa
lret
dec
dec
test
iret
cmpsb
sub
cmpsb
mov
arpl
loop
hlt
int3
adc
pop
pop
mov
sub
ud0
je
push
cmp
std
ret
cmpsb
push
and
in
jbe
mov
inc
dec
pop
jmp
mov
iret
pop
pop
mov
push
orb
outsb
outsl
sub
cmpsl
in
movsb
int3
test
mov
xchg
scas
mov
mov
and
test
and
cmp
xor
lods
out
ficompl
xchg
xlat
dec
cltd
fdivs
ja
inc
je
int3
jno
jae
test
xchg
in
xchg
out
out
mov
cmp
pop
xchg
lret
iret
js
pop
and
mov
pop
sub
pop
or
gs
and
insb
icebp
fbld
xor
xchg
mov
mov
sbb
or
xor
jg
popa
cwtl
sbb
les
dec
lock
and
enter
and
gs
jge
add
xchg
movsb
shll
fistpl
push
cmp
mov
mov
mov
inc
sub
sub
mov
ret
mov
jnp
fwait
repnz
dec
jne
sbb
dec
xchg
mov
dec
add
out
insb
aam
outsb
fcompl
or
pop
adc
aas
add
aas
push
mov
xchg
cmpsb
mov
cltd
dec
pushf
adc
or
in
xchg
pop
subb
mov
movzwl
push
or
cmp
dec
xor
test
dec
mov
push
cmpsb
ljmp
sub
movsb
fists
xchg
add
ret
or
adc
cmp
insl
cmpsb
jno
dec
sahf
mov
mov
mov
outsb
xlat
jg
mov
jl
fcoml
pop
mov
cmc
push
rcrb
lds
clc
push
lods
ss
sub
cmc
cmp
pop
cmp
test
lock
loop
inc
add
fdivrs
sub
pop
sbb
ficomps
in
arpl
jns
int
push
std
cmp
dec
cmp
imul
in
lahf
sbb
sub
fmuls
dec
cmp
dec
mov
cli
jno
int3
dec
cmp
xchg
jle
inc
mov
call
push
inc
jge
movsl
inc
xchg
xchg
or
jbe
jb
test
fdivp
gs
push
jle
ret
loop
fwait
push
jns
jle
shld
xor
sbbl
lahf
bound
xchg
jmp
cmpsl
insl
pop
out
aaa
inc
stos
mov
aas
mov
cs
mov
sub
sbb
push
xchg
mov
bound
and
imull
fcoml
sub
lods
xor
and
jmp
jle
lret
test
iret
push
addr16
ss
es
jns
jecxz
adc
dec
mov
dec
iret
nop
pop
enter
leave
jl
repnz
sub
das
pop
ja
repz
mov
aam
inc
pusha
pop
mov
pop
lods
fidivl
ret
push
pop
imul
lea
enter
lods
cmpsb
ss
clc
push
push
in
dec
and
lock
sub
xchg
jno
outsb
imul
lea
movsl
mov
xor
ja
icebp
add
push
movsl
les
out
mov
mov
outsb
jno
test
stos
sub
gs
sub
pop
das
imul
cmc
sbb
in
loopne
mov
ret
repnz
test
inc
cmp
cmp
loop
ror
adc
rorb
xor
xor
push
mov
xchg
icebp
sti
shlb
fsubrl
test
addb
cmp
aam
push
je
jnp
fdivrs
dec
cmpsl
pushl
push
add
and
xor
imul
jne
lea
cli
fiaddl
pop
imul
jne
jl
imul
inc
pop
aam
test
sub
xor
int
and
inc
sub
sbb
inc
adc
push
or
lods
xchg
sti
dec
iret
les
push
ret
cmpsb
pop
sub
imul
insl
mov
in
enter
xchg
je
or
push
mov
jnp
mov
ret
or
cltd
push
shlb
jno
imul
mov
sahf
inc
loope
jl
jb
cmp
dec
pop
mov
mov
dec
cld
ljmp
cwtl
xor
clc
mov
ret
push
mov
lods
outsl
push
cmc
ss
enter
jmp
inc
popa
idivl
lock
pop
aaa
xchg
jl
adcb
xor
imul
sbb
push
push
xchg
rcrl
dec
xor
movsb
push
mov
xchg
inc
add
xchg
int
add
add
fsubr
adc
aad
insl
out
outsl
add
xor
jno
sub
nop
cwtl
push
ss
push
imul
mov
or
inc
dec
sbb
mov
enter
xor
into
gs
clc
mov
add
or
lret
movsl
push
sub
xchg
add
push
insb
mov
loopne
mov
xchg
data16
loop
mov
push
push
jge
mov
sbb
xor
fiaddl
sbb
xor
mov
imul
push
ss
push
inc
add
and
mov
dec
dec
mov
jbe
cltd
es
cmp
lea
push
out
mov
pop
push
sbbl
pop
test
xchg
aas
movsl
push
shlb
push
dec
mov
dec
mov
and
call
mov
jae
push
mov
lret
inc
outsb
shrl
fiadds
not
jle
fmul
push
inc
popf
fsubl
mov
jecxz
cmp
mov
aad
shlb
cmp
mov
icebp
out
add
popf
aad
dec
rorl
imul
nop
adc
cwtl
cltd
repz
lret
out
shll
out
mov
cmp
stc
iret
test
andb
cs
push
mov
fmuls
in
and
adcl
dec
lahf
je
sbb
in
sub
mov
dec
test
mov
fbstp
adcl
inc
pop
inc
add
lds
mov
ljmp
mov
sub
mov
cs
sub
mov
xor
popa
fmull
or
into
das
push
adc
pop
jge
xor
mov
push
inc
pop
dec
xchg
leave
pop
insb
inc
inc
pop
or
hlt
movsl
jecxz
cmp
insl
stc
rcll
stc
pop
inc
pop
mov
jbe
leave
dec
xchg
mov
test
scas
or
test
adc
push
adc
xor
ss
or
test
and
aad
movsb
pop
dec
mov
and
cmpps
mov
sahf
dec
icebp
cmp
aam
scas
xchg
fldcw
insl
fwait
aaa
imul
pop
shrl
or
push
fisubl
sub
fidivl
enter
cmovae
lods
popf
pop
push
mov
inc
xor
repz
add
jp
add
inc
bound
jg
inc
jmp
je
icebp
aam
jns
in
loope
add
fildl
inc
ret
push
sub
pop
push
test
cmp
enter
jne
loop
icebp
pop
cmpsb
daa
loopne
add
test
jmp
adc
orl
pop
and
aas
dec
dec
cmpsb
gs
lods
clc
sub
mov
cmpsb
push
mov
xchg
int3
mov
push
mov
cli
xchg
pusha
std
hlt
add
xchg
sbb
cltd
mov
orl
mov
test
mov
push
sti
js
lret
pop
int3
imul
gs
sahf
stos
jle
out
and
lea
inc
adc
and
add
sub
int
pusha
nop
outsl
mov
and
pop
out
xor
or
jge
push
popf
xlat
setbe
xchg
cld
adc
shrl
or
aas
mov
adc
imul
mov
fnstenv
ret
ljmp
scas
repz
cmpsl
scas
aad
test
cmpsb
int3
imul
jne
dec
dec
inc
test
lock
add
sbb
jbe
cmpsb
fcmovu
push
rol
loop
push
call
xor
and
jl
jle
sbb
les
test
pop
movsl
and
sub
scas
push
in
jnp
xchg
xor
addl
movsb
add
cmp
das
subl
xchg
sub
sub
repnz
hlt
imul
cmp
sbb
cmpsl
xlat
adc
pop
psubusb
dec
jmp
adc
cmp
jne
fildl
movsb
loope
xor
cmp
jg
fsts
jnp
inc
inc
add
stos
push
mov
jge
or
sbbb
loopne
xchg
lock
dec
out
or
adc
rcll
sbb
adc
push
and
movb
mov
jl
sub
lods
cmp
pop
outsl
mov
and
dec
mov
push
pushf
popf
cmc
cmpsb
test
add
mov
dec
inc
movsl
sub
mov
push
jle
sbb
sub
out
jg
lods
in
jl
dec
arpl
jbe
cli
testb
fsubs
pop
jg
shlb
xchg
cmp
mov
jbe
push
or
pushf
ljmp
jb
pop
repz
cmp
xor
test
pop
cli
insl
lahf
mov
mov
lods
or
mov
pop
xchg
xor
push
sub
enter
lea
cmp
xlat
dec
push
adc
enter
jecxz
int3
add
je
call
push
xchg
popa
aam
movsl
sub
inc
jb
xchg
ret
ja
jge
and
ds
cwtl
dec
xor
mov
fnstsw
negb
jmp
insl
mov
pop
int
into
cmp
lods
movsb
and
jne
push
loopne
das
or
cmpl
push
sti
cli
jae
fidivs
xchg
xor
notl
adc
xchg
pop
hlt
aam
imull
pushf
or
divl
adc
jno
int3
push
scas
mov
inc
rcrb
ljmp
push
nop
pop
rcrl
jae
out
cmp
mov
or
jb
fnstcw
inc
out
lcall
cmp
inc
idivl
xchg
notl
push
sub
loopne
mov
mov
outsb
dec
ficomps
mov
movsl
adc
movsl
mov
xor
insl
movsb
lret
mov
sub
lock
mulb
mov
push
dec
das
sbb
scas
jg
add
sbb
jae
and
out
lcall
out
addr16
imul
dec
mov
and
xchg
xchg
adc
mov
test
jmp
add
xor
add
insb
push
pop
lds
loopne
lcall
aas
and
jge
mov
mov
xor
push
sub
and
push
cmp
jl
push
mov
mov
in
test
mov
sub
mov
fs
ss
xor
sub
fwait
rcr
jo
mov
lcall
add
push
inc
aas
and
fisttpl
mov
sbb
cmp
mov
xor
push
cmpsl
int3
data16
fiaddl
int3
addr16
rcrb
das
fwait
int
leave
fcompl
into
or
add
jmp
inc
pop
shrl
push
stos
xchg
pop
add
pop
mov
fcoms
dec
adc
push
repz
sbb
daa
add
bound
push
out
into
pop
mov
add
scas
sbb
lcall
mov
fnsave
outsb
push
ss
test
inc
sbb
test
mov
sbb
mov
mov
inc
adc
dec
jl
xchg
testb
enter
pop
adc
add
inc
loopne
test
push
dec
pop
shr
fidivrs
fldenv
shrl
pop
cmp
xchg
mov
mov
in
cmpsb
xchg
push
in
inc
sbb
loope
mov
push
repz
fstl
add
into
sbb
add
fnstcw
icebp
jns
inc
jmp
std
mov
out
out
adc
fwait
pop
mov
mov
ret
push
cmpsb
cs
adc
xchg
aam
addr16
imul
stos
test
jle
cwtl
arpl
sbb
andb
loopne
mov
scas
xor
mov
jp
movsl
lret
jecxz
dec
cbtw
xchg
fcmove
mov
notl
decl
cmp
call
loope
inc
push
cld
cltd
push
cmp
or
lock
shrl
ret
jl
adc
push
popw
lret
hlt
mov
cmpsl
loope
pop
push
clc
into
mov
add
cs
movsb
add
or
out
inc
fnstcw
adcb
dec
mov
jle
dec
inc
adc
xor
out
insb
aaa
push
add
in
push
call
jle
mov
mov
xor
cmp
or
ret
jo
in
push
pop
loop
push
and
push
jo
mov
dec
test
xchg
aaa
test
sbb
jno
sub
es
sti
jl
stos
add
gs
aas
imul
daa
scas
daa
mov
adc
insl
lret
ds
push
icebp
fbstp
mov
cmp
adc
outsb
inc
xchg
xor
dec
pop
mov
roll
enter
bound
es
pusha
shr
xchg
jnp
sbb
push
arpl
iret
sbb
aad
imul
xor
in
xor
arpl
lock
mov
cmpsl
ds
jb
ror
cmp
icebp
xchg
xchg
jns
add
fcmovne
add
leave
adc
xor
mov
cltd
hlt
hlt
adc
mov
or
xor
inc
inc
adc
xchg
fnstsw
sub
and
pop
mov
inc
int
les
ret
jge
sarb
xlat
leave
push
nop
sub
frstor
sbb
and
cmc
cmp
mov
fwait
ret
cmpsb
xchg
div
mov
stos
mov
xor
inc
rcrb
pop
mov
add
xor
jno
pop
mov
outsl
int3
ds
out
cs
mov
fwait
add
or
xlat
lcall
jb
sbbl
and
add
imul
aam
sub
jno
add
pop
cmc
imul
cmp
mov
mov
std
cmp
inc
pop
cmpsl
leave
mov
insl
push
xor
fidivs
fwait
dec
roll
add
and
push
pop
mov
sahf
mov
mov
sbb
mov
rclb
inc
adcl
adc
pop
int3
sbb
in
dec
lahf
cmpsl
mov
xorb
adc
dec
sub
sub
push
nop
adc
les
jbe
testb
loope
pop
sbb
ret
inc
cmp
mov
test
lods
sub
outsb
fwait
test
das
add
inc
dec
push
push
mov
std
inc
pop
mov
jne
jno
lret
dec
push
insl
jae
push
addr16
imul
scas
out
cmpsl
andb
cwtl
ret
jo
ljmp
inc
adc
faddl
outsl
lret
xchg
mov
push
test
mov
sahf
enter
jb
xchg
inc
fdivrs
imul
jmp
xchg
push
xchg
dec
xlat
push
fsubr
ss
lret
test
adc
ret
xchg
inc
scas
mov
and
adc
mov
xchg
call
mov
outsl
mov
sub
sub
out
mov
add
sub
dec
dec
rolb
pop
add
ret
jne
sub
mov
mov
add
shll
jg
pop
mov
sarl
mov
inc
shrb
mov
push
sub
push
les
jecxz
add
or
cmp
cmp
data16
mov
aaa
sahf
test
sbb
out
sub
xchg
pop
scas
movsl
pop
sub
inc
das
dec
sub
and
iret
inc
into
pop
js
push
lods
xchg
js
imull
cmp
aas
stc
lods
xor
out
loope
xor
push
popa
mov
pop
mov
das
cmp
rorl
pop
sbb
and
fs
inc
mov
iret
enter
shlb
fcomps
lods
out
scas
mov
pushf
divl
lods
pop
mov
jb
repnz
pop
cwtl
jmp
ja
or
mov
adc
sbb
mov
inc
push
adc
add
jns
test
cmp
pop
loope
popf
iret
add
push
adc
xor
out
inc
out
test
adc
add
repz
out
mov
jo
dec
push
clc
xor
pop
mov
je
add
xor
loop
addr16
jp
mov
fildll
orb
je
or
fsts
dec
cmp
fcmovb
enter
popa
xchg
xchg
shl
pushf
cmpsl
add
mov
ja
jp
sbb
sub
pop
pop
dec
aam
loopne
shl
daa
mov
loope
fs
jnp
xchg
add
jmp
mov
ljmp
ljmp
push
sub
inc
sub
lods
pop
sbb
xlat
xlat
and
imul
fcomps
xchg
jnp
cmp
sbb
test
test
mov
adc
pop
movsb
cltd
outsb
cmc
loopne
xchg
sub
jmp
jecxz
push
pop
xchg
mov
pop
cmc
mov
mov
dec
or
xor
jecxz
xlat
adc
pop
mov
data16
dec
mov
cs
and
push
out
xchg
and
mov
fdivs
sub
jmp
hlt
pop
jnp
leave
push
in
shlb
fidivrl
divl
sti
sub
jmp
sbb
sarl
fimuls
mov
adc
or
lcall
fidivs
push
sbb
push
and
fs
insl
add
xchg
inc
leave
hlt
jae
shll
test
int3
cmp
mov
lea
pop
rol
sahf
adc
pop
cmc
push
mov
lcall
aas
mov
pop
mov
push
or
push
sub
insl
add
and
int3
mov
imul
adc
mov
jns
cmp
dec
and
pop
sub
ret
hlt
jns
add
mov
pusha
mov
stos
pop
clc
les
push
test
gs
push
ficompl
or
push
push
sub
add
lahf
xchg
dec
inc
loopne
mov
push
lock
push
iret
shll
xor
sbb
ja
out
test
pushf
cmp
and
imul
adc
fcoms
jae
or
mov
or
push
nop
adcl
sbb
inc
cwtl
dec
mov
popa
push
ja
mov
sub
inc
fs
and
mov
iret
mov
mov
or
ds
dec
mov
in
push
xchg
pusha
push
push
mov
ss
aaa
xchg
repnz
stc
cld
cmp
sub
loop
bound
mov
push
push
sbb
in
movsl
pop
cmp
mov
pop
les
icebp
inc
int
and
add
xchg
pop
imul
das
movsb
cltd
sbb
popa
and
xchg
in
push
dec
lea
addr16
icebp
hlt
stos
jl
inc
or
leave
movsw
push
or
stos
push
pop
adc
mov
lahf
scas
jno
lds
mov
repnz
loope
jg
imul
jecxz
icebp
in
outsb
bound
mov
jmp
inc
cli
pop
negl
mov
inc
inc
xchg
mov
rcrb
jae
add
adc
and
xor
ret
iret
rcr
jecxz
repz
scas
mov
inc
dec
push
pop
arpl
jg
movlps
and
xor
ret
iret
rcr
jecxz
repz
scas
mov
inc
dec
push
pop
arpl
jg
movlps
and
xor
ret
iret
rcr
out
repz
orl
mov
push
imul
movlps
mov
iret
sub
dec
out
repz
pop
sbb
pop
rorb
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
pop
inc
insl
dec
cmp
faddl
push
or
add
add
add
add
add
add
push
clc
add
add
push
add
add
sbb
jne
loopne
push
add
add
sub
repnz
push
add
add
or
adc
scas
add
add
add
add
sub
adc
cmp
and
dec
add
push
add
add
pop
inc
add
add
add
add
add
mov
add
add
add
cmp
add
add
pop
mov
sbb
jae
adc
cmp
push
add
addb
add
add
add
add
pop
add
add
add
dec
add
dec
add
add
add
push
add
add
pop
lcall
push
add
mov
fildl
mov
add
add
add
add
add
mov
add
add
add
add
add
sbb
inc
add
add
add
add
add
jb
xchg
add
or
mov
add
jae
mov
push
add
add
mov
add
sub
add
add
clc
pop
push
add
add
dec
add
add
add
add
add
add
jno
and
lcall
add
add
add
inc
add
add
inc
add
add
pop
insl
add
add
add
add
add
add
or
ja
aaa
add
add
add
add
add
add
xchg
add
add
add
push
add
add
addb
add
push
push
add
add
xchg
add
pop
mov
adc
add
add
add
add
and
clc
pop
mov
adc
and
xor
add
clc
pop
adc
inc
add
add
add
sahf
add
add
clc
pop
xor
pop
add
add
add
inc
add
add
add
add
cs
add
dec
add
or
add
add
add
pop
add
aaa
add
add
add
add
and
test
or
insl
add
add
add
daa
add
push
loopne
jg
bound
test
pushf
add
add
jb
xchg
add
add
pop
clc
add
add
adc
add
add
loopne
lret
add
add
sub
add
add
add
add
add
add
xchg
add
data16
add
or
das
add
add
pushf
add
or
add
or
xor
add
add
add
add
xchg
xor
adc
xchg
add
add
js
jns
cmpsl
add
aaa
add
jg
mov
xchg
inc
add
int
add
add
add
add
add
add
adc
aad
addl
je
and
scas
add
mov
xor
jne
test
int
and
add
add
add
add
call
add
add
mov
scas
add
dec
add
add
push
add
mov
xor
pop
add
add
add
mov
add
addl
adc
rolb
add
add
or
or
fsts
add
pop
add
push
cwtl
ds
push
dec
mov
pop
sahf
xorl
add
push
hlt
jecxz
lods
insb
arpl
testb
nop
lods
cmpsb
hlt
mov
hlt
cld
stc
addr16
out
pop
es
shrl
mov
adc
dec
out
scas
fnstenv
lret
and
mov
pop
jl
mov
push
jg
stos
lcall
aas
jg
imul
pop
stos
adcb
mov
mov
ret
push
inc
xor
dec
jbe
dec
xchg
mov
mov
sub
ja
adc
lds
cmp
inc
call
stos
mov
sbb
add
push
jns
mov
add
and
dec
mov
mov
pusha
jae
jp
es
sbb
imul
push
cmpsl
arpl
lods
sub
movsb
inc
push
add
movsl
enter
mov
inc
cld
lahf
arpl
scas
cmpsl
xchg
mov
pop
mov
std
test
aad
adc
hlt
cmpsl
movsb
pop
and
push
mov
cwtl
divl
inc
sub
outsl
and
in
xchg
mov
cmpb
jno
sub
pushf
repnz
and
add
mov
jns
movsb
inc
adcl
adc
outsl
adc
cs
mov
enter
sub
and
ret
mov
enter
sub
or
shrb
loope
jmp
jne
out
dec
mov
ficoms
mov
sub
mov
repnz
mov
sub
add
push
fistpll
hlt
das
sti
push
test
cmp
movsl
lret
movsb
das
inc
adc
fmuls
inc
ret
and
sub
fwait
xchg
pop
pop
shl
xchg
lods
or
ja
push
nop
inc
jnp
push
sti
cmc
sti
dec
pushf
outsl
inc
inc
popa
mov
scas
jb
pusha
in
mov
sub
mov
jno
push
inc
jbe
in
pop
lods
call
out
popa
push
mov
lret
jo
repnz
sbb
or
mov
jnp
mov
lret
loopne
jecxz
iret
xchg
cmc
shlb
xor
jecxz
leave
lods
inc
cwtl
pusha
mov
scas
loopne
or
dec
cld
push
and
loope
xchg
adc
mov
xchg
stc
jp
jmp
lcall
lcall
dec
xchg
or
outsb
lahf
sbb
sbb
scas
dec
repnz
pop
mov
out
inc
stos
xchg
loop
mov
std
push
call
sti
js
stos
adc
js
cs
sti
mov
negl
jns
ret
sub
out
repz
shrl
mov
stos
sub
ret
sahf
pop
mov
add
in
int3
iret
or
adc
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
