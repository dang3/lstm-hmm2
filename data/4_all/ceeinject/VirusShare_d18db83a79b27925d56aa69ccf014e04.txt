adc
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
imul
gs
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
sbb
or
cmp
sub
pop
push
inc
dec
mov
stos
mov
cli
lret
lret
or
push
sbb
or
dec
out
pop
push
lcall
mov
lcall
test
repnz
push
fs
push
gs
stc
mov
mov
lret
inc
inc
cmp
pop
pop
dec
dec
loope
inc
inc
xchg
fnstsw
daa
lret
lret
lahf
out
xchg
divb
scas
mov
jnp
xchg
negl
out
insb
lahf
cli
aas
repnz
lcall
adc
das
dec
add
xchg
sub
push
jb
pop
ror
mov
scas
pop
stos
pop
lret
ljmp
bound
fisttps
mov
jp
add
inc
mov
ds
push
jbe
sti
lret
xor
cltd
in
pop
ret
mov
cmpsb
pop
ret
push
loope
mov
pop
out
mov
lret
out
in
xchg
xchg
cmp
aam
movsl
cmp
pop
mov
mov
pop
xchg
push
sti
cltd
adc
inc
cmp
sahf
sub
mov
or
pop
cmp
insb
int3
mov
adc
movsb
jae
js
dec
pop
push
and
push
and
push
xor
lcall
jecxz
xchg
movsb
sahf
xchg
fwait
stos
push
jg
imul
das
xor
aas
es
cld
mov
stos
movsl
cmpsb
xchg
mov
insw
pop
dec
jns
or
dec
push
pop
push
lcall
mov
cli
lret
lret
or
cmp
sub
pop
jp
push
pop
push
lcall
mov
cli
lret
lret
lods
std
clc
mov
mov
add
jp
imul
mov
addr16
bound
mov
inc
mov
imull
and
je
mov
and
inc
xor
push
inc
mov
cmp
fldcw
lea
inc
add
adc
sub
fnstcw
cld
xchg
xor
cmp
mov
cmpb
inc
dec
mov
jl
outsl
scas
mov
mov
mov
xor
inc
clc
pop
jmp
and
adc
jecxz
xchg
sbb
dec
xchg
addr16
bound
divb
faddl
pop
addr16
jmp
mov
out
ja
lret
loope
pop
push
clc
jne
popa
ljmp
les
test
imul
add
pop
insb
push
jecxz
mov
sub
jae
dec
ss
shll
add
aas
call
cmpl
jg
fdiv
outsb
jle
filds
jmp
xlat
xor
mov
mov
ds
fdivr
pop
outsb
ret
xchg
jno
mov
push
ds
and
jmp
stc
mov
insb
xchg
testl
inc
dec
movsl
and
xor
adc
jbe
mov
sbb
push
mov
fwait
popf
mov
ret
call
fdivp
out
or
movsb
inc
sub
test
inc
scas
mov
cltd
jno
adc
mov
enter
inc
dec
jecxz
fwait
push
shll
dec
xor
dec
mov
xchg
test
xlat
test
cmpsl
iret
sub
xorb
rorb
inc
aas
dec
lock
fcmovnbe
mov
insb
test
popf
cmp
cmc
sti
jmp
insb
loopne
xor
inc
imul
mov
fsubp
shlb
repnz
outsl
int
mov
dec
or
ljmp
mov
mov
loopne
cmpsl
les
xor
push
lcall
mov
sub
adc
lea
lds
add
inc
in
hlt
out
add
mov
xchg
jno
shrl
inc
mov
xchg
je
lea
push
jns
xchg
pop
lret
ljmp
fcmovne
imul
xchg
lods
mov
repz
cmp
and
sti
inc
xor
and
mov
into
sub
cmp
fistpl
cmp
mov
vpmuludq
jo
mov
ret
repnz
dec
xchg
leave
dec
pop
mov
pop
xor
add
push
stc
xchg
mov
ljmp
lahf
je
aad
test
movsb
ret
out
dec
mov
sub
push
xchg
call
cmp
mov
push
cs
mov
xchg
push
adc
push
or
pop
lea
xor
ret
cmpsl
aas
loop
pushf
mov
add
out
fsubrl
mov
mov
and
mov
mov
dec
add
sti
xchg
lret
dec
ds
mov
je
add
dec
xchg
out
imul
xchg
insl
cwtl
shlb
pusha
outsl
cmp
sti
out
movsl
cwtl
aad
inc
and
cmp
push
scas
popf
and
pushf
add
int3
dec
loope
dec
testb
sahf
push
xor
or
lcall
xchg
js
inc
and
test
inc
jno
test
imul
fwait
cmpsl
lock
aas
notl
clc
mov
in
inc
and
push
push
xor
es
test
lahf
sbb
xor
inc
xchg
and
dec
adc
lret
and
sub
and
cwtl
add
mov
shll
jnp
inc
or
mov
xor
xor
push
add
jo
mov
ror
jl
fbstp
adc
fs
jp
insl
hlt
inc
outsb
xor
fs
lea
in
add
pusha
mov
dec
jle
in
popa
hlt
mov
adc
dec
add
inc
add
call
adc
xchg
outsl
mov
mov
inc
sti
scas
adc
pop
xchg
push
xchg
sub
addb
xor
cld
push
arpl
test
outsb
adc
adc
cld
iret
out
imul
jl
out
or
xchg
jmp
xchg
arpl
push
loopne
repnz
mov
scas
cmp
stos
imul
std
pop
push
decb
push
adc
in
xor
or
sub
cmpsl
cmp
cld
cmc
xchg
movb
movsb
sahf
jae
xor
es
add
lahf
mov
lret
aaa
imul
mov
daa
mov
call
aas
sub
imul
pop
and
repnz
xchg
mov
jno
je
out
mov
push
ror
inc
adc
mov
shl
test
es
jb
adc
inc
sar
rcrb
cmp
cmp
adc
fdivrl
xchg
or
adc
in
add
sbb
cld
nop
jg
fidivrl
scas
bound
enter
cmp
lahf
rolb
int
bnd
orb
mov
pop
sub
fistps
push
push
sub
negb
aam
mov
mov
xchg
xchg
add
nop
pop
sbb
sbb
add
out
sbb
ret
fimull
int
scas
lret
add
sub
sahf
subb
dec
rcll
sbb
inc
add
fmull
mov
jge
dec
enter
movsl
shll
push
sbbl
les
testb
aad
lret
insl
stos
std
arpl
cmp
push
test
enter
dec
loope
dec
repnz
cs
aas
cltd
test
jo
cs
jae
inc
mov
ds
or
jne
jge
scas
mov
pop
fcoms
mov
stos
fwait
ret
sarb
and
jge
mov
notb
mov
mov
lods
popf
mov
jmp
lahf
jb
jge
insl
cmp
cmp
imul
lcall
pop
popa
fsubrs
pop
lods
adc
xchg
out
xorb
cld
xchg
push
fxch
adc
xor
stc
cmpsb
mov
fwait
test
mov
lahf
scas
pop
and
aaa
pop
mov
push
xchg
mov
and
dec
mov
add
mov
xlat
pop
xchg
in
sub
inc
inc
dec
xor
pop
jecxz
jp
negl
xor
pop
dec
aaa
jecxz
rcrl
sbb
loope
ss
js
je
pop
jle
cs
sub
into
add
fidivs
loopne
rcl
pop
pop
popa
jae
ljmp
jp
xchg
mov
aam
push
sub
jae
jns
sbb
xchg
icebp
mov
clc
push
or
or
stos
cli
cld
jb
add
test
jns
pop
pop
mov
mov
cmpsb
dec
subb
lock
add
cmpb
sbb
add
push
sarl
popl
cmpb
loop
mov
sbb
test
outsl
cmpsl
push
mov
sbb
or
adc
les
push
loope
mov
add
add
xor
add
sbb
shll
xchg
or
pop
mov
nop
je
loop
mov
add
sarl
in
push
push
cmp
lds
addr16
dec
adc
jb
insb
push
jmp
or
cld
stc
loope
fbld
ja
les
adc
inc
stos
lahf
pop
bound
shl
aam
out
add
sub
out
sub
shlb
icebp
cli
nop
dec
adc
sbb
mov
mov
inc
sbb
pusha
and
cmc
loopne
mov
jg
mov
adc
outsb
inc
pop
clc
sbb
bound
xor
pop
int
push
sub
outsb
and
or
fscale
leave
sbb
jmp
repz
test
aaa
push
mov
sub
fiadds
out
mov
mov
aaa
add
cmp
jbe
mov
adc
mov
xchg
and
addr16
jnp
leave
movsl
jae
out
fistl
out
pop
push
imull
xchg
and
xor
aad
mov
popa
adc
call
sbb
pop
add
push
jg
inc
enter
arpl
jmp
in
jno
sbb
xchg
repz
mov
jne
out
sarb
jae
std
int
sub
insb
arpl
sbb
movsl
pop
fdivs
popa
into
shll
adc
and
lods
lcall
xlat
pusha
mov
shll
mov
cld
lahf
jnp
pushf
jnp
and
ljmp
popf
jne
adc
loop
inc
push
repz
xor
call
sub
cmp
and
ss
cmp
out
dec
int
sbbb
clc
push
scas
in
fsubl
test
rorb
sbb
or
sub
push
mov
test
dec
xor
and
add
ficompl
and
mov
es
das
incb
fisttps
cld
jbe
mov
in
dec
or
pushf
icebp
test
jg
mov
or
jl
sub
in
adc
xor
add
push
sbb
and
add
gs
fsubr
xchg
pop
push
nop
sbb
and
lds
pop
add
popf
or
and
push
lds
sbb
inc
xchg
xor
sbb
add
pop
push
mov
mov
mov
je
scas
outsl
dec
cmp
arpl
sbb
popa
arpl
cmp
and
mov
out
xchg
aad
or
ret
and
loope
xchg
mov
test
imul
stos
mov
aad
sahf
or
repz
leave
flds
fnsave
jge
sbb
cmp
and
cmp
pop
out
sub
mov
mov
cmpsl
lahf
xor
mov
in
ljmp
add
loope
ljmp
repz
test
idiv
into
imul
add
sub
test
push
aaa
clc
fimuls
or
shrl
pop
mov
mov
scas
fbld
hlt
sbb
xor
pop
and
stc
fcmovnb
sbb
mov
xor
fimuls
xchg
push
fs
push
pop
insl
sub
push
add
aam
or
cmc
push
bound
xchg
xor
and
jmp
xor
in
push
std
xchg
lahf
jmp
fbld
add
repz
mov
xor
mov
leave
imul
rorb
inc
or
mov
loope
pop
pop
repz
sub
mov
fcmovb
addl
sbb
nop
in
mov
mov
inc
les
inc
pop
rclb
clc
dec
das
jnp
popa
and
sahf
inc
fldcw
push
cwtl
or
mov
out
pop
push
cld
push
int
out
push
xchg
push
inc
pop
lods
dec
and
sub
push
test
mov
jmp
dec
call
ds
test
fldlg2
fists
std
aam
sbb
notrack
push
lret
mov
mov
in
jecxz
sti
pusha
inc
sub
or
es
fdivrp
or
mov
xor
mov
mov
or
xchg
rclb
push
nop
mov
lcall
inc
insb
mov
clc
leave
in
push
rclb
sub
xor
push
sbb
test
leave
mov
pop
je
arpl
clc
dec
or
popf
sbb
ljmp
cmp
daa
rolb
adc
outsl
loope
jmp
fsubrs
dec
jo
lret
and
push
inc
call
icebp
repz
fscale
adc
js
cmp
cmp
cmp
fwait
lods
out
sbb
xchg
jb
mov
add
or
inc
jb
les
mov
push
sbb
pop
scas
xchg
popa
mov
cmp
sbb
mov
scas
sbb
add
je
in
insl
fs
mov
scas
movb
mov
or
mov
rorl
in
in
xchg
outsb
orb
mov
pop
dec
mov
fwait
push
das
dec
les
xor
jmp
mov
in
movsb
daa
dec
shlb
ljmp
adc
pop
testl
cwtl
cs
int
lret
js
xor
js
sbb
pushf
js
lret
dec
stc
xchg
xchg
pop
sbb
mov
stos
das
sbb
stos
xor
add
stos
sbb
ds
aas
dec
pushf
push
lods
push
in
mov
pushl
dec
les
setbe
xor
mov
in
pop
xor
mov
shll
add
cmp
rep
push
pop
in
out
dec
push
inc
fistl
jno
mov
das
inc
inc
adc
push
add
ja
mov
mov
ret
pop
push
xchg
sbb
sub
lret
cmp
insb
das
and
ret
mov
jne
xchg
in
and
xor
push
jg
lods
out
push
jle
lods
mov
addl
imul
jle
inc
pusha
cli
xor
lret
out
sbb
xchg
hlt
scas
add
sarb
test
into
icebp
pop
add
dec
pop
jge,pt
fwait
into
mov
dec
sub
add
cmpl
inc
pop
jns
jecxz
sbb
or
xchg
and
loop
ss
cmpsb
pop
in
dec
push
or
daa
xchg
call
cwtl
and
enter
xor
shr
jge
and
mov
adc
ljmp
jo
and
popf
out
test
and
mov
push
rcrb
xchg
mov
mov
pop
lock
push
add
jecxz
in
sbb
iret
cs
dec
mov
movsb
cmp
aaa
in
ss
sahf
adc
dec
xor
stos
mov
cli
xchg
mov
aad
push
push
xor
jnp
and
dec
ret
xchg
and
je
enter
nop
pop
subb
roll
push
movsl
loope
cmp
push
arpl
inc
lock
xor
adc
leave
inc
pop
pop
lahf
cmp
and
mov
test
das
icebp
xor
adc
je
or
sub
push
cmp
divl
mov
pop
jmp
xchg
gs
leave
inc
jbe
shll
repz
dec
fiadds
pushf
stos
jae
fninit
jp
mov
pop
sub
dec
pop
push
fnstsw
gs
push
loopne
popa
push
jb
insb
and
adc
lock
clc
dec
mov
fisttpl
pop
mov
mov
lock
xchg
aaa
lds
mov
xchg
popf
imul
inc
stos
aam
add
sub
inc
jne
fcomps
dec
push
int3
adc
stos
pop
gs
jnp
cmpsl
fcmovne
jb
dec
bound
mov
cmp
mov
pop
xlat
xor
hlt
and
xchg
clc
insl
adc
pop
sbb
sbb
das
pop
iret
pop
out
ret
pop
es
jne
and
inc
cmpsb
outsl
mov
enter
lods
sub
mov
out
and
mov
ds
push
pop
loop
mov
mov
outsl
push
mov
in
shll
fidivrs
pop
or
cmpsb
repnz
add
pop
inc
inc
inc
test
cli
lods
mov
mov
repnz
add
sbb
test
aad
mov
lods
ret
adc
rol
out
mov
mov
jp
scas
xlat
adc
leave
inc
fistpl
cwtl
fstpl
data16
sbb
ja
mov
sbb
sbb
jne
in
pop
pop
push
xchg
or
or
lret
lods
int3
shll
jnp
push
movsb
jo
jb
mov
pop
and
insb
cmpsb
imul
stos
and
ret
push
cmpsl
push
and
xor
mov
and
and
dec
inc
popf
xor
addr16
movb
and
lods
shlb
shr
loop
js
mov
pop
and
mov
aas
jbe
mov
inc
loopw
aad
xchg
sbb
clc
cmpsb
pop
mov
sub
lds
stos
adc
int3
xor
fmull
jmp
xchg
adc
popf
sarb
cmc
adc
pop
push
xchg
arpl
mov
sub
pop
xor
or
lahf
pop
into
jne
cmp
int
sbb
fisttps
push
insb
mov
rclb
mov
xlat
aaa
jge
jnp
xchg
scas
cmp
or
lods
sub
insb
mov
andl
cmp
lret
mov
inc
stos
sub
pop
mov
jae
rcrl
mov
xor
cmp
add
and
inc
outsb
cmp
pusha
mov
cltd
jge
or
subb
fs
cwtl
scas
inc
outsb
sar
pop
add
aad
push
add
mov
popa
mov
outsl
mov
or
adc
add
or
xchg
sbb
ret
imul
add
mov
push
or
jecxz
nop
xlat
test
jmp
in
add
jmp
xor
push
in
cli
and
lds
mov
aaa
mov
inc
stc
in
mov
das
dec
mov
nop
or
pop
lods
scas
pop
divl
stos
xchg
cltd
iret
xchg
xor
push
mov
mov
dec
mov
jg
xor
cs
xor
sub
shlb
cwtl
loopne
inc
mov
jno
push
mov
add
cwtl
push
xchg
sub
insl
pop
cmp
mov
aad
aaa
stos
cmp
mov
mov
out
pop
add
insb
ds
inc
push
rcr
cmp
push
sbbb
mov
mov
mov
cmpl
inc
sub
sub
into
mov
ror
test
lcall
adc
dec
push
dec
in
inc
mov
pop
xor
jge
dec
lret
imul
inc
cmpsb
mov
mov
movsb
rorb
and
lahf
cmpsb
jp
sub
mov
xlat
jbe
jmp
add
add
xchg
mov
mov
and
dec
mov
jge
jle
inc
call
mov
xchg
imul
scas
push
jmp
dec
lret
iret
cs
mov
push
cmpsl
xchg
subb
jno
adc
es
outsb
rorb
sbb
sbb
push
fadds
sbb
mov
xchg
es
cli
fistpll
aaa
xchg
test
mov
das
xchg
mov
ljmp
jne
bound
pop
mov
inc
mov
xor
jbe
jb
test
mov
aad
iret
or
adc
push
test
test
aad
push
and
dec
sarl
shrb
mov
dec
repz
cmp
iret
out
mov
inc
adc
shl
pop
xchg
mov
pop
test
insl
inc
mov
lahf
stos
pusha
pushf
mov
xor
adc
mov
sbb
push
lods
jp
pop
mov
inc
cli
gs
inc
lods
or
dec
dec
xchg
mov
movsl
out
notb
mov
lcall
pop
imul
mov
icebp
jae
jge
mov
dec
adc
sub
mov
add
fstpl
and
pop
pop
aad
jo
add
push
xchg
mov
and
cmp
fidivrl
jo
inc
fs
fiadds
cmpsl
scas
es
pop
adc
inc
daa
inc
inc
je
outsb
cmp
push
push
xor
mov
int3
mov
test
je
insl
dec
shlb
in
leave
gs
inc
aaa
inc
cmp
push
sbb
xchg
mov
mov
sbb
cmp
xchg
pop
addb
ljmp
js
int
push
sub
int
lahf
das
dec
pop
mov
out
adc
fs
out
add
sub
insl
add
movl
js
into
enter
jo
push
jle
dec
push
xchg
jmp
sub
push
shll
shl
dec
xor
jge
or
imul
jmp
jp
cmc
dec
cmp
popf
test
stos
lods
fisttps
sbb
rorb
mov
lret
dec
ljmp
mov
or
sbb
or
ret
les
jge
roll
xchg
xchg
inc
lret
push
ror
out
lret
inc
and
dec
orl
sti
jae
sub
mov
jnp
inc
sbb
rol
push
or
mov
dec
adc
pop
adc
pusha
adc
jl
pop
call
jo
mov
aaa
mov
mov
add
ja
push
fimull
push
imul
call
incb
outsl
inc
push
scas
add
jns
fisubrl
popa
jg
in
lea
mov
sub
jno
adc
xchg
leave
cmpsl
jmp
in
loopne
jno
dec
andl
fwait
and
mov
push
push
mov
sar
mov
fdivrl
popf
jae
ss
pop
add
add
jp
ret
xorl
add
inc
add
pop
lods
ljmp
cmpsl
scas
cmc
or
mov
xchg
pop
addr16
sahf
in
icebp
inc
cwtl
iret
or
mov
mov
inc
push
arpl
push
sub
sub
pop
jp
push
pop
push
lcall
mov
cli
lret
lret
or
cmp
sub
pop
jp
push
pop
push
lcall
mov
cli
lret
lret
cmp
bound
or
jp
ret
stos
dec
lcall
mov
cli
cli
cli
add
push
cmp
pusha
sbb
or
pop
push
dec
lcall
std
lods
jb
adc
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
lock
loopne
shlb
out
cltd
out
test
inc
daa
xor
inc
adc
addr16
loopne
shlb
mov
xorb
pop
push
ss
daa
xor
and
ja
addr16
loopne
shlb
mov
out
pop
inc
and
push
and
sbb
imul
shl
test
sub
or
mov
insb
inc
insb
mov
mov
sbb
pop
xchg
das
fnstsw
dec
insb
jg
insl
int3
pop
in
clc
scas
enter
inc
and
iret
push
ss
mov
lcall
into
pop
jne
inc
xor
fdivs
test
jnp
cli
add
adc
pop
leave
incl
clc
mov
mov
cmpsl
call
push
gs
dec
cmp
sub
out
call
lret
daa
pusha
add
push
out
pop
add
ljmp
dec
xor
nop
outsb
aaa
pop
and
fcom
inc
jae
xlat
ja
cwtl
xor
shlb
testl
daa
xor
inc
adc
and
testb
call
add
push
mov
popa
add
jo
xchg
xchg
jmp
incl
adc
jb
jne
push
inc
jne
xor
jns
push
xchg
loopne
xchg
shlb
nop
testl
daa
xor
inc
adc
addr16
loopne
shlb
mov
out
pop
pusha
pop
push
aaa
inc
daa
xor
inc
adc
addr16
subl
shlb
lcall
enter
sbb
pop
mov
mov
push
test
mov
popl
aad
jmp
ds
dec
mov
test
mov
mov
jle
je
lods
popf
and
pop
leave
dec
sbb
xchg
push
cld
pop
mov
push
cmpsl
or
lock
xor
xchg
pop
lret
dec
pusha
sub
andl
imul
add
fcoml
cmp
inc
xchg
push
mov
movb
add
push
xchg
shrl
and
pop
dec
sub
add
cmp
fnstsw
mov
xchg
lock
mov
out
imul
int
rclb
pop
lcall
es
lret
inc
dec
mov
and
xchg
mov
sbb
roll
adc
lcall
pushf
cli
sbb
std
ficoms
pop
jp
add
scas
hlt
inc
push
mov
mov
sub
dec
and
leave
dec
js
adc
push
or
pushf
pushw
xlat
mov
or
repz
or
imull
xor
dec
jns
stos
pop
cld
fimuls
repz
sbb
ja
mov
sub
addr16
in
push
popa
sbb
add
or
imul
movsb
das
lar
xchg
jb
cmp
jg
pop
dec
mov
scas
fucomip
inc
jbe
clc
push
leave
icebp
aad
inc
stos
cltd
push
lret
pusha
or
aas
lock
addr16
cmp
hlt
cmp
outsl
enter
jecxz
pop
test
sub
lods
push
cmp
pop
loop
outsb
or
pop
ss
push
mov
sbb
cld
jl
xor
mov
push
and
jl
add
sahf
mov
add
pop
sub
sub
add
or
sub
push
jns
sti
jecxz
fildl
ljmp
push
push
ljmp
fdivl
jno
lea
in
or
mov
mov
mov
imul
arpl
movsl
inc
test
cmp
fsubr
stc
pop
xchg
aas
inc
sarl
cmp
mov
adc
sub
cmc
loop
mov
ds
dec
adc
rolb
and
jbe
inc
lds
sub
test
subb
or
sub
ficompl
pop
pushf
mov
popf
fcoms
lods
mov
in
xchg
xchg
mov
and
daa
xchg
cmpl
int
ret
xor
js
adc
nop
dec
jne
dec
push
cmp
push
xchg
aam
insl
xor
and
scas
lahf
xchg
mov
sahf
in
fnstcw
daa
mov
inc
xchg
inc
out
lcall
dec
xchg
mov
xchg
xor
cmpsb
or
push
repz
and
jmp
cmp
push
leave
push
mov
test
mov
nop
shlb
xchg
aaa
fwait
add
mov
jmp
and
or
lret
scas
lahf
mov
xor
mov
movsl
adc
cmp
out
test
jb
imul
sub
fwait
mov
adc
imul
sbb
testb
fistl
sub
int
dec
or
das
inc
dec
mov
sbb
mov
push
cmp
mov
and
dec
fcomps
xchg
mov
cmp
inc
sub
pop
mov
push
mov
out
bound
adc
int
insb
aaa
pop
inc
stc
das
mov
loop
adc
out
pop
leave
idivl
shlb
test
int
test
mov
dec
inc
xchg
popf
aaa
je
in
jno
xor
inc
push
jg
out
sub
fiaddl
je
dec
shlb
cli
mov
add
push
fisttps
push
mov
sarl
outsl
fs
pop
mov
fildll
inc
fstl
push
sub
xor
or
ss
mov
dec
or
sahf
sub
cltd
dec
xor
lock
inc
sti
mov
push
and
imull
mov
mov
adc
xchg
int
scas
add
dec
fistpll
jp
imul
jno
or
mov
xchg
xor
xor
push
je
and
dec
repnz
push
cmp
add
lods
jge
jecxz,pn
jnp
or
pop
mov
mov
outsb
shrb
hlt
pushw
aaa
repz
mov
jne
mov
hlt
scas
scas
aam
mov
mov
imull
mov
lret
les
xchg
adc
jmp
call
mov
ficomps
dec
sbb
aam
inc
mov
das
dec
ja
movsl
fsubrs
xor
ljmp
inc
addr16
enter
and
jae
aaa
adc
inc
dec
loope
fidivl
sti
mov
out
pop
negb
push
sbb
sub
push
add
sub
ret
in
ds
outsb
or
jno
adc
or
or
pop
pop
enter
addr16
adc
xchg
pop
and
xchg
fcomp
popf
ss
popf
inc
nop
jo
fdivrl
arpl
test
mov
sbb
sub
pop
test
xchg
pop
sub
push
loop
bnd
dec
imul
mul
xchg
pop
fisttps
dec
jmp
roll
lret
inc
lods
push
out
popa
mov
xor
ficoml
sub
pop
in
pop
jle
lret
dec
insl
sbb
adc
out
sbb
pop
and
ret
cmpb
sarl
pusha
jg
lods
jne
decb
mov
outsb
rol
sub
fwait
ja
pop
ljmp
add
pop
jge
push
dec
add
xchg
test
dec
inc
addb
adc
xchg
aad
enter
andl
jp
xor
lods
out
pop
jmp
push
xor
and
push
adc
flds
mov
pusha
out
jle
mov
dec
cld
aaa
jmp
scas
and
jo
cmc
fidivs
mov
add
xchg
jge
or
dec
sub
hlt
pop
or
sbb
outsl
cmp
hlt
push
orb
jb
jne
mov
shll
mov
jl
mov
shr
enter
push
and
lods
sbb
xchg
mov
mov
rcrb
dec
xchg
test
lret
call
loopne
mov
pushf
dec
dec
sbb
push
cmpsl
or
inc
pusha
xor
add
pop
in
fstl
cltd
aad
push
lea
shlb
jne
push
ljmp
sbb
and
xor
cli
dec
mov
pusha
fldenv
jo
xorb
call
sti
push
jae
sub
and
adc
imul
sbb
ret
cmpsl
stos
adc
add
iret
adc
jge
movsl
jmp
inc
sub
push
pop
jp
gs
insl
jns
inc
and
insb
cmp
xlat
nop
adcl
leave
cmpsb
test
xor
cli
pop
adc
mov
int
out
imul
pop
push
pop
das
jb
xor
and
les
fsubrs
xchg
or
jl
push
add
clc
cmpsl
nop
pop
int3
addr16
dec
pop
iret
xorl
cld
dec
dec
rcrb
inc
cmp
pop
sbb
out
pop
mov
cmp
lods
pop
push
or
xchg
cmc
pop
dec
call
lahf
pop
out
loop
or
push
lahf
rolb
adc
adc
call
mov
inc
rol
push
jnp
mov
and
test
lret
in
movsb
bts
and
mov
shl
mov
sbb
mov
pop
or
aad
mov
mov
mov
or
cmpb
pop
jnp
or
fs
insl
jl
mov
pop
adcb
popf
sub
jl
fxch
push
andl
mov
les
cltd
fldt
ror
lds
jmp
cld
xchg
cmpsb
pop
and
jbe
arpl
dec
dec
adc
mov
push
test
mov
insl
jb
lods
pushf
inc
xchg
lods
or
adc
pop
mov
push
add
aas
out
or
repnz
xor
xchg
lret
xor
rcll
cmpsb
add
dec
imul
lcall
js
lods
bound
add
rcrb
xor
out
add
xor
add
sub
sbb
icebp
and
inc
jge
test
iret
dec
push
movb
je
or
out
jno
push
xor
mov
cwtl
stos
pop
in
nop
lods
mov
popl
mov
lock
mov
daa
mov
mull
jl
jns
push
ss
out
jae
shrb
outsl
pop
popl
gs
ljmp
in
test
ljmpw
gs
inc
aaa
in
fwait
jge
xlat
ljmp
and
lret
cmc
jmp
pop
xor
jp
jb
out
adc
ss
popf
jmp
adc
pop
pop
push
xor
jb
ret
stos
cmp
fildl
pop
fnop
cmp
mov
mov
das
add
movsb
fxch
out
jbe
scas
loopne
popa
loopne
ret
xlat
or
mov
and
je
mov
xor
sbb
les
icebp
fs
iret
fwait
mov
and
iret
mov
sbb
fadds
sbb
push
push
mov
popf
sub
xlat
xchg
stos
fimull
stos
adc
popf
ret
jecxz
mov
repnz
inc
and
adc
stc
cmp
ret
loopne
mov
dec
outsl
pop
mulb
scas
fcomi
lock
jne
sbb
rorb
lods
pop
sub
sub
fcmovnbe
or
cltd
sub
roll
dec
cmp
mov
sti
shll
xor
push
das
shll
xchg
icebp
xorb
cwtl
pusha
mov
in
push
inc
jns
out
mov
jne
and
ret
movsb
sar
cld
lods
shll
mov
rcrl
lds
ficompl
dec
push
into
scas
or
cli
scas
jbe
lret
pusha
xchg
add
xchg
or
shl
iret
popf
fadd
lods
mov
fildll
jne
addr16
jae
jg
sbb
mov
repz
mov
or
cmp
xchg
enter
dec
rorb
inc
push
cs
add
or
inc
add
rorl
dec
and
adcl
mov
in
cmp
scas
mov
push
sub
sbb
lods
mov
imul
mov
repnz
stc
rcl
xor
push
fdivrl
mov
test
inc
das
xchg
mov
push
jecxz
xchg
pop
data16
in
icebp
popf
inc
cvtps2pi
and
in
cmpsl
push
repz
outsb
jg
out
in
and
lret
pop
in
ret
aad
lret
xchg
into
push
fistl
stc
pop
adc
aas
xchg
add
xlat
inc
lcall
xchg
xor
or
movsb
push
cs
push
out
xchg
xor
rcr
sarb
fistpl
loopne
jno
arpl
adc
loopne
and
lods
xor
test
lret
les
inc
mov
push
inc
or
addr16
mov
sub
xchg
adc
ja
insl
movsb
insl
mov
scas
cmpsb
popf
mov
incl
sahf
mov
daa
nop
jno
push
add
fsts
adc
sbb
das
insb
in
addr16
add
lds
or
cld
push
mov
jmp
and
mov
push
xchg
cmp
pop
js
leave
call
bound
aas
sbb
out
lret
sbb
ret
jbe
push
cmp
daa
push
mov
cs
jp
dec
cwtl
loope
mov
cmc
pop
fmul
or
imul
sbb
mov
xchg
xchg
aas
in
add
xor
rorl
test
sbb
sbb
shl
cmp
lods
cmc
repnz
and
jg
pop
mov
in
loope
or
aas
out
loope
xor
sbb
rcl
adc
ficomps
sub
in
lea
fcomps
and
ja
push
jae
scas
sbb
icebp
cmp
hlt
or
cmp
adc
ja
xchg
xchg
cmp
cli
adc
dec
push
dec
rcl
fisubs
adc
adc
loop
sti
push
mov
mov
mov
dec
push
pop
outsl
outsb
jns
push
sub
xchg
sahf
scas
fbld
dec
and
movsl
xchg
jg
out
and
mov
add
out
aam
dec
inc
test
mov
dec
add
loop
out
push
jb
je
add
sbb
jmp
sbb
shll
push
adc
cmpsl
sbb
js
into
fdivs
or
sbb
ret
bound
adc
mov
pop
dec
out
aas
stos
adc
dec
pop
sub
lret
mov
dec
cmp
nop
in
mov
push
fs
add
nop
outsl
es
repz
pop
cmpl
dec
ficompl
js
pop
in
mov
xor
aam
or
rorl
pop
jne
daa
outsb
inc
push
fs
xchg
mov
rclb
lar
xchg
pop
pop
popf
sbb
xchg
and
fmull
or
insb
inc
in
orb
aaa
aam
fbld
dec
dec
xchg
dec
jae
mov
out
lods
xor
out
mov
jl
test
xchg
int
outsb
xlat
addr16
mov
subl
pop
int3
jmp
shrb
jns
xchg
add
and
loopne
push
jle
mov
mov
mov
fwait
xor
test
sub
rolb
xlat
pushf
lcall
mov
dec
pop
insb
push
cmp
subb
mov
jnp
rcll
jne
scas
sub
and
movsb
out
or
mov
add
xchg
mov
out
jmp
inc
push
stc
out
scas
add
out
fisttpll
movsl
fistl
mov
xchg
stc
jno
xchg
sti
push
jp
jnp
sbb
mov
imul
cmp
out
and
pop
dec
iret
pop
mov
lahf
cld
dec
or
incb
int
or
push
jae
jmp
jb
jge
xorb
xor
leave
xchg
into
ret
mov
mov
loope
pop
xor
std
insl
dec
out
inc
inc
fsubrs
mov
lods
sub
mov
adc
shlb
gs
fsubrl
jns,pn
int
jge
push
sahf
fadds
or
sbb
push
dec
icebp
fistpl
pushf
in
cmp
ret
sbb
clc
ror
testl
jg
and
rolb
rcll
or
repnz
into
mov
mov
or
rolb
iret
fsubs
lods
and
mov
adc
cmp
push
call
xchg
testb
lock
sbb
out
mov
clc
pop
add
cmp
pop
adc
xor
ja
aas
lea
ret
or
dec
mov
repz
xchg
fcoms
imul
xor
into
movsb
push
and
repnz
cmp
adcl
jmp
push
jg
js
movsl
ss
loop
and
inc
sub
rcll
mov
and
pop
fwait
inc
and
mov
mov
ret
lds
arpl
popf
fwait
pop
scas
dec
addb
shrl
pop
jp
push
push
movsb
jb
out
fisttps
inc
cmp
mov
mov
sub
jge
out
dec
daa
movhps
xchg
data16
les
mov
mov
js
pop
shlb
sahf
in
imul
cmp
adc
mov
inc
out
inc
inc
or
mov
lock
bound
add
push
lahf
pop
std
arpl
in
jno
sahf
jno
sub
xor
lret
lds
dec
popf
scas
pop
adc
aam
int3
jno
negb
jecxz
inc
dec
sahf
cmpsb
push
cmpsl
fldenv
pop
mov
sbb
aam
stos
push
repz
enter
in
ja,pt
test
mov
mov
add
xor
bound
mov
cs
push
fsubrp
push
sub
mov
sub
or
popa
mulb
mov
add
inc
jno
rorl
call
fistpl
cmp
loop
loop
mov
sahf
test
adc
add
inc
out
bound
insl
icebp
mov
xchg
sub
sub
lea
pop
divl
mov
ret
mov
lcall
jp
jmp
in
and
and
push
insb
lret
adc
sub
icebp
add
imul
dec
sub
outsb
stos
fldcw
mov
es
in
mov
jo
push
fnstenv
repz
clc
or
in
cmp
jne
push
sub
jmp
aad
repz
test
ljmp
pop
out
mov
fldt
test
lods
loope
negb
xor
in
out
js
sbb
push
shlb
lock
add
sub
fs
insb
rorb
inc
cmp
fdivrl
add
jl
test
adc
std
cmp
mov
or
fcoms
mov
add
mov
in
mov
or
inc
mov
push
subb
jmp
mov
out
mov
lcall
lock
inc
pop
adc
adc
imul
push
outsl
jbe
and
test
sarl
sarb
mov
pop
add
sub
lock
add
jo
fistpl
or
iret
invd
inc
test
jecxz
sub
jg
aas
sar
mov
xor
dec
fimull
movsb
outsl
fnstenv
xor
cmpsl
jg
scas
rol
outsb
or
add
dec
in
sub
pushf
dec
int3
mov
pusha
ja
xchg
movsb
mov
repz
mov
inc
cld
sbb
jge
rcr
mov
sarl
repz
insl
nop
pop
outsl
or
or
dec
or
lret
ljmp
add
dec
mov
flds
stos
test
fstpt
push
movsl
or
push
icebp
jo
aas
test
and
lcall
mov
xor
sub
mov
icebp
aaa
call
into
xchg
fwait
mov
jmp
and
lds
fbstp
repnz
xchg
xlat
pushf
js
mov
mov
dec
xor
fldenv
data16
pop
xchg
sbbb
mov
sbb
jg
ljmp
adc
rorb
add
out
enter
push
iret
frstor
rcll
cmc
add
not
add
clc
clc
int
adc
fsubrp
inc
stc
cld
pushf
ljmp
pop
pop
jbe
inc
fdiv
loop
iret
lods
lcall
shrl
xor
mov
pop
push
dec
shll
je
test
push
pop
int3
sub
mov
icebp
mov
jns
pop
fldt
cmp
mov
pop
lret
fidivrs
xor
lea
fldl
and
orl
jno
push
xchg
push
xor
pop
cmpsl
or
sti
sub
mov
or
adc
mov
hlt
pusha
jno
inc
ja
mov
icebp
pop
daa
test
xchg
and
push
dec
cltd
mov
fildll
or
inc
xor
adc
ljmp
xchg
inc
cltd
xor
pop
and
movsb
loop
roll
rcl
inc
xor
mov
sbb
or
push
pop
jnp
jnp
in
movsl
or
sbb
test
mov
int
ja
call
lods
and
lods
out
mov
xchg
push
pushf
fimuls
xor
decb
mov
lcall
or
in
jo
in
sbb
push
add
lods
ljmp
xchg
cmp
test
cld
and
push
mov
stos
adc
jmp
enter
das
and
fnstsw
dec
shll
cmp
mov
mov
repnz
push
in
cmc
mov
and
mov
shl
push
outsb
arpl
gs
sbb
mov
fbstp
stos
mov
mov
cmp
aas
enter
sti
out
in
inc
cmc
inc
loope
lods
rorb
leave
cld
cli
loope
xchg
pop
lcall
mov
push
and
cmpb
outsb
cwtl
mov
sub
mov
call
popf
mov
data16
fistps
pop
push
xor
fldcw
cmp
fnsave
and
mov
dec
xor
das
insb
aaa
shlb
jb
adc
xorb
xorl
test
lods
mov
jae
cld
inc
test
xchg
in
cwtl
cs
sbb
pop
mov
sar
fwait
push
pusha
fcomp
pop
scas
in
inc
cmp
push
sbb
stc
aam
adc
add
frndint
mov
pop
sub
mov
dec
lock
cmp
xchg
frstor
pushf
sbb
jns
cmpsl
add
push
sub
movsl
dec
xor
adc
bndstx
xchg
dec
sub
push
fldcw
xor
sti
xchg
jno
mov
adc
or
lahf
rclb
sti
xchg
inc
and
xchg
mov
cmpsl
mov
mov
out
pop
pusha
pop
push
aaa
inc
daa
xor
inc
adc
addr16
loopne
shlb
mov
out
pop
pusha
pop
push
aaa
inc
daa
xor
inc
adc
addr16
loopne
shlb
mov
out
pop
pusha
pop
push
aaa
inc
daa
xor
inc
adc
addr16
loopne
shlb
mov
daa
pop
lahf
lods
cli
aaa
inc
push
inc
fildll
cwtl
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
shrd
jne
gs
or
nop
adc
sbb
cmp
sbb
or
mov
movsl
pop
inc
lods
inc
mov
adc
int
test
xchg
or
test
dec
movsl
pop
dec
mov
movsb
insl
xchg
jge
or
sbb
sub
sub
xchg
push
aas
int3
xor
call
stc
cmp
fdivl
idivl
push
loope
jns
mov
lods
enter
jne
rcrb
in
and
cmp
or
loop
or
sub
cmp
cmpsl
ret
add
daa
cmp
cmp
push
rol
dec
bound
test
push
inc
xchg
jb
into
xor
adc
fnstsw
lods
ret
cmc
repnz
clc
cmc
mov
dec
mov
mov
jmp
and
sarl
ret
in
aas
outsl
test
push
pop
fdivs
jne
pop
test
mov
int3
push
lea
inc
cmp
repnz
push
inc
xchg
popf
push
dec
movsl
pop
xchg
mov
jb
add
int
int3
sub
cld
add
jne
gs
mov
iret
adc
add
jno
push
mov
xchg
mov
or
jg
and
xor
inc
aam
addr16
in
imul
pop
lds
push
idivb
sub
mov
insl
fiadds
fst
sub
in
xchg
insl
test
dec
movsl
pop
push
lods
inc
mov
adc
int
fst
sub
in
xchg
insl
test
dec
movsl
pop
push
lods
xchg
cmp
arpl
mov
popf
cli
pop
icebp
in
jp
xor
cs
fldl
push
mov
nop
mov
loop
or
iret
inc
loopne
es
fisubrl
out
sub
rorl
loop
lahf
cmp
or
adc
mov
in
push
lret
sub
insb
push
push
cmp
out
sub
cmpsl
neg
outsb
mov
jp
movsl
add
aas
aam
xchg
mov
xchg
xchg
inc
ljmp
push
pop
dec
pusha
lods
adc
bound
daa
xlat
je
and
push
sbb
pop
fdivp
idiv
call
ret
pop
nop
cmpsl
clc
mov
out
les
out
push
dec
xchg
adc
inc
pushf
shr
rcrb
loope
adc
sub
mov
ss
mov
orl
sbb
sbb
clc
cwtl
mov
dec
dec
dec
mov
jbe
rorb
push
jge
sbb
adc
into
push
ja
add
add
lret
out
insb
sbb
repz
add
rcrb
mov
sub
sbb
call
insl
clc
lret
test
inc
xchg
xor
cmpsb
jno
ljmp
mov
insb
aas
inc
ret
mov
cmc
dec
mov
jne
xchg
sbb
jmp
imul
sbb
or
shlb
mov
negl
std
sbb
lock
mov
xchg
sti
sub
inc
out
out
shlb
call
cwtl
test
je
jg
jnp
xchg
xor
in
xor
idivl
ficoml
sbb
pushf
mov
clc
adc
flds
xor
cmp
lea
xchg
jg
fdivl
js
out
adc
adc
popa
mov
adc
or
ss
stc
and
clc
xchg
push
and
pushf
jo
and
int3
repnz
add
fucomip
xlat
inc
jo
jge
xor
fwait
adc
fcmovu
adc
les
sbb
stos
mov
cltd
lods
leave
jae
ljmp
sub
or
sub
add
das
lret
sub
cmp
xchg
or
cmp
movsl
and
out
inc
adc
add
dec
push
mov
sbb
mov
inc
xor
jns
cmp
pop
dec
adc
jmp
bound
fdivs
les
std
pop
dec
rcl
mov
mov
jmp
call
dec
or
sbb
clc
les
dec
ret
scas
jp
popf
clc
jnp
loopne
sbb
inc
inc
add
andb
mov
roll
pop
add
sbb
lret
pop
mov
movsb
pop
mov
fcomps
mov
aam
int3
mov
jne
jnp
data16
movsl
sarl
cmp
inc
out
or
adc
aad
cmp
adc
or
fwait
hlt
jl
test
jne
ljmp
or
xlat
and
mov
sub
adc
sbb
sub
cltd
cs
or
cmp
add
insl
mov
cmpsb
adc
pop
mov
pop
adc
and
jo
out
xlat
inc
jb
sbb
aad
repnz
mov
push
in
pop
jge
dec
test
sub
outsl
rorb
test
es
dec
sbb
jecxz
sbb
test
or
cmc
test
inc
sbb
and
shrb
jne
rorb
leave
pop
pusha
sbb
sub
rcrl
push
in
or
enter
in
jg
pop
jge
xchg
cmp
sbb
push
fiaddl
stos
add
dec
out
loop
pop
inc
cs
mov
fnsave
out
mov
clc
test
adc
loopne
cmc
or
movsb
jns
mov
scas
inc
cmp
std
leave
xchg
push
movsl
stos
ja
popa
mov
shll
pop
or
adc
pop
mov
aaa
jle
cwtl
sub
xchg
cmp
xchg
out
lods
jo
ljmp
mov
xor
xchg
rolb
fnstsw
fsubrl
stc
jecxz
mov
rolb
dec
aam
div
aaa
fdivs
xchg
mov
push
dec
inc
push
fbld
inc
aaa
mov
xor
int
cmc
insl
cli
and
cmp
inc
aad
or
dec
int
push
shll
push
bound
sub
pop
ljmp
inc
adc
mov
roll
mov
xchg
stc
test
leave
dec
leave
nop
or
daa
shr
or
call
push
fstps
insl
scas
imul
insl
jge
fnstcw
std
call
mov
leave
push
pop
dec
dec
lret
adc
xor
test
scas
add
pop
pop
aas
xchg
adc
in
xlat
adc
cli
cmpsl
repnz
cwtl
rorb
sar
xor
sub
and
dec
push
shl
mov
adc
sbb
daa
xor
jg
jle
push
inc
sysret
insl
ja
inc
call
push
mov
adc
js
aad
loope
fstpt
adc
imul
addr16
adc
adc
shl
sahf
lea
xchg
stos
scas
xchg
cmp
and
mov
and
lret
jg
or
adcb
dec
add
xor
out
mov
xor
sti
into
test
imul
aad
pusha
and
push
jmp
mov
mov
push
and
imul
mov
mov
imul
adc
and
ja
mov
mov
les
repnz
add
jecxz
push
aad
clc
test
cmp
bound
mov
out
sub
xchg
cmpsl
das
fisubs
fs
jnp
addr16
add
data16
aas
movsb
fmull
or
repnz
inc
stos
inc
sbb
jo
shrl
inc
divl
sti
out
or
divb
mov
jg
loope
in
push
lods
pop
pushf
inc
add
call
mulb
test
xchg
sbb
xor
push
jnp
jns
or
fcomp
push
and
notb
cmp
je
cmp
shr
sub
cmc
mov
fmuls
sbb
lods
in
imul
xchg
xchg
outsb
les
add
cmp
out
sbb
pop
dec
push
fldt
mov
jo
lret
mov
pop
xor
cli
fadds
push
cmpsl
mov
xor
adc
leave
xchg
xor
jno
loopne
ret
sarl
inc
mov
push
ss
inc
pushf
hlt
popa
ret
dec
jle
cmp
mov
lret
stos
inc
mov
add
outsb
into
insl
shlb
push
pop
lret
sbb
ret
mov
int3
scas
or
js
mov
sbb
outsl
lds
pop
pop
xchg
shlb
mov
hlt
push
jnp
popl
clts
mov
lcall
jge
test
js
cmc
pop
dec
das
sbb
pop
and
cmp
pop
outsb
xor
icebp
inc
and
cli
cmp
popf
push
inc
jl
inc
mov
dec
lret
in
sahf
xchg
mov
iret
mov
shrb
sub
sbb
rclb
sahf
out
and
or
lds
push
adc
in
cmc
xchg
stos
movsl
adc
jbe
js
adc
in
int
sahf
pop
call
pop
push
lds
jle
adc
aas
dec
mov
cmpb
rorb
sbb
xchg
mov
adc
fincstp
cmp
ficoms
dec
imul
out
dec
fs
mov
punpckldq
mov
pusha
ds
jg
lahf
mov
inc
cli
mov
rcl
push
cli
inc
addb
xor
fdivs
testb
jnp
mov
cmpsb
mov
cld
sti
mov
ret
push
aas
pop
mov
push
insl
fs
push
rorl
jl
push
cmc
das
fdivrs
lods
ret
sarl
pcmpeqw
push
pop
pushf
loop
notl
sbb
fs
push
jb
dec
cmp
lcall
fwait
jb
popf
adc
gs
movsb
ja
adc
xchg
stc
popa
stc
in
into
dec
incb
push
ret
jo
dec
hlt
xchg
icebp
outsb
scas
je
sahf
sub
pop
jb
sbb
push
out
or
mov
xor
dec
imul
lret
ret
jg
leave
xchg
sbb
cmc
add
cmp
pop
test
inc
aaa
ljmp
xlat
ljmp
or
ret
aaa
mov
and
xor
pop
mov
pop
int
pop
or
mov
jle
adc
arpl
inc
rcll
cld
cld
inc
pop
mov
xor
lock
push
ss
fwait
or
ret
push
xchg
fs
sbb
test
cmp
push
xchg
and
add
lds
scas
ds
and
pushf
shrl
xor
sbb
push
cwtl
test
pop
je
lret
cmpsl
ljmp
and
iret
rcll
jae
shl
jle
addr16
pop
ret
pop
mov
jnp
inc
sbb
out
sub
pop
mov
and
xor
jge
pusha
sti
lods
je
sbb
adcl
pop
sahf
movsb
das
stc
add
mov
push
xchg
iret
push
jg
adc
xchg
addr16
push
in
stc
or
lods
into
and
jmp
add
out
rcll
int3
add
jg
addl
jl
arpl
jb
pop
lock
push
cmpsb
sbb
mov
push
pop
sarl
sub
imul
mov
outsb
jp
pop
fisubl
xchg
push
sbb
or
arpl
dec
pop
nop
roll
mov
adc
sub
dec
aaa
inc
adc
mov
decb
push
iret
sub
add
sti
jg
jne
push
mov
xchg
imul
in
scas
mov
xchg
xor
jg
fmulp
or
cld
push
lock
lods
inc
pusha
ret
fdivrl
fisubrl
notl
cld
rolb
insl
add
ret
leave
push
stos
mov
mov
mov
lret
lea
sbb
inc
sub
jns
dec
xor
lret
push
inc
stos
scas
in
sbbb
rclb
pop
icebp
ljmp
jmp
movsb
imul
cltd
or
jl
test
out
mov
test
jge
sub
cs
pop
xchg
push
pop
mov
pop
inc
imul
jg
inc
sub
outsl
push
push
mov
rclb
mov
sbb
adc
lods
mov
mov
pop
pusha
lahf
ss
loopne
dec
pop
arpl
inc
inc
pusha
dec
rcrl
test
xorb
inc
or
sub
push
and
mov
aaa
insl
ret
or
or
loop
aam
sub
mov
stos
or
int3
mov
je
cwtl
jo
jmp
fcomp
lods
ret
sub
mov
out
dec
aas
mov
mov
ss
lcall
mov
rcrb
jne,pt
ret
aaa
scas
and
in
cmp
add
pop
dec
repz
mov
fidivrs
lret
test
push
and
push
xchg
leave
cmpsb
cmp
add
or
clc
outsb
notl
push
fistpll
push
mov
cmpsl
mov
addr16
into
push
ret
in
mov
fidivs
xchg
dec
in
mov
ret
inc
adc
movsl
addr16
dec
sbb
imul
mov
cld
fstpl
push
dec
jb
dec
mov
dec
push
push
scas
test
xchg
jmp
adc
adc
sub
mov
shll
and
aas
mov
sub
out
cmpsl
mov
popa
xlat
inc
jno
popa
fbstp
popl
data16
adc
cli
push
shlb
sbb
movsl
push
xor
fmuls
cli
fsubrs
les
cmp
inc
flds
inc
out
mov
popf
das
clc
sbb
add
fwait
ds
test
add
sahf
mov
mov
mov
sbb
adc
cmp
push
cmp
dec
push
xor
mov
push
sub
dec
enter
xchg
or
inc
js
jno
rcll
iret
and
fldcw
mov
push
mov
lcall
jmp
mov
xor
inc
inc
dec
xor
aam
outsb
push
jae
jb
popa
jecxz
insl
rcll
jp
jmp
es
icebp
push
std
int3
pop
dec
sub
lock
jecxz
mov
clc
sbb
push
jbe
lds
dec
in
push
lds
scas
mov
inc
push
je
imul
cmp
mov
push
je
jbe
fs
xchg
jle
or
push
jmp
mov
repnz
test
repz
lds
imul
sbb
cmp
dec
pop
mov
dec
and
stos
dec
jmp
repz
out
cmpsl
dec
jg
rcrl
jg
pusha
loope
pop
js
cmp
adc
sbb
push
shrl
lds
sub
sahf
mov
inc
or
mov
adc
inc
fsubp
bound
hlt
dec
add
inc
sbb
xor
fwait
xor
push
jmp
nop
jecxz
ficoml
xor
xor
inc
and
sub
push
sbb
in
add
xor
cmpsb
movsl
push
sub
lods
mov
shrb
fstpt
ja
shl
pop
in
test
jge
icebp
mov
int3
out
cmp
mov
jg
aas
aas
insl
cs
mov
stos
inc
inc
sbb
dec
mov
in
jnp
mov
mov
xchg
lahf
nop
push
pop
lea
push
dec
lret
notb
les
ja
data16
pushf
dec
pop
sub
fdivrs
rolb
mov
cmpsl
mov
pushf
ljmp
xor
out
movsl
lahf
xchg
xor
mov
jb
dec
jle
roll
sahf
sub
jg
clc
andl
lret
push
in
es
movsb
mov
jne
and
adc
mov
imul
dec
add
mov
xchg
or
dec
sbb
cli
pop
lock
movsl
or
lret
adcl
call
scas
jno
movsb
out
ds
dec
nop
insb
cmp
cmp
pop
sub
bound
int3
in
jecxz
and
out
mov
sbb
xchg
cmpsb
pusha
or
popf
data16
inc
or
fucomip
ficomps
dec
mov
cld
fildl
pop
xchg
sub
clc
insl
xor
pop
and
enter
push
push
adc
adc
flds
mov
push
sbb
xor
mov
clc
inc
and
or
stos
orl
cltd
mov
inc
add
push
pop
fistl
mov
fcmovbe
cld
cmp
lahf
cs
sbb
lods
sbb
les
icebp
lret
clc
and
lods
jmp
dec
jle
push
cmp
lods
cwtl
adc
jl
mov
stos
mov
pop
hlt
push
cmpb
jo
jecxz
test
mul
fadd
jl
pop
mov
add
xacquire
dec
aam
aaa
lret
nop
and
leave
cmp
frstor
in
int3
add
push
cld
roll
mov
stos
dec
jle
cmp
test
cmpsb
lock
test
adc
mov
mov
ja
icebp
lahf
clc
mov
sbb
inc
mov
lds
pop
repnz
xchg
mov
xlat
insb
mov
loopne
out
stos
dec
lret
cmp
xchg
scas
mov
ja
xchg
mov
mov
push
lods
inc
rcll
push
jbe
ret
mov
push
mov
popf
imul
inc
pop
dec
andb
xlat
fisubs
inc
dec
out
fidivrs
mov
add
or
pop
or
sub
rcrb
call
cmp
imul
add
push
xor
rolb
ret
insl
pop
pop
aad
mov
cli
mov
in
inc
es
lods
je
push
or
mov
daa
push
pop
sub
xchg
enter
push
icebp
cmp
sub
fnstcw
test
dec
aaa
je
mov
or
cmp
cmp
xchg
mov
shll
and
in
pop
stos
hlt
repnz
push
addb
adc
xor
mov
imul
push
rol
sbb
lahf
test
flds
xchg
adc
mov
jns
subl
pminub
mov
mov
int
fidivl
push
lods
jmp
cld
jbe
add
xor
dec
cmpl
push
cld
mov
idivl
dec
mov
enter
addr16
sub
or
pop
xchg
repnz
add
shrl
push
jl
pop
fnstenv
stc
bound
ss
dec
adc
out
pusha
idivb
and
iret
test
pop
and
inc
cmc
xor
addr16
ret
mov
jmp
enter
mov
add
adc
data16
gs
test
fstpl
and
and
fidivrs
hlt
enter
xchg
cmp
mov
add
xchg
std
sub
push
and
sar
adcb
sub
sti
test
xlat
cmp
scas
inc
in
and
push
mov
scas
test
cmp
lret
enter
shlb
cmp
cmp
js
add
cmpb
xor
jne
js
lock
push
add
push
out
sbb
shr
in
scas
sbb
sub
jo
scas
clc
sbb
mov
jp
fisubs
sub
mov
xor
mov
inc
jmp
mov
push
aam
fldenv
pop
mov
lret
inc
xchg
add
cmp
xor
pop
sarl
mov
je
lret
outsl
int3
cli
sbb
xor
pop
mov
mov
aas
push
sbb
outsb
enter
mov
pop
shl
fistpl
xlat
dec
push
cmpsb
rol
jb
aaa
adc
mov
shrl
sar
insl
mov
adc
mov
cld
pop
mov
xchg
iret
sub
dec
xor
push
xor
cmpsb
scas
fs
xchg
push
faddl
sub
es
in
add
insl
test
mov
es
clc
cwtl
imul
icebp
dec
jbe
test
cs
das
ljmp
stos
and
fnsave
arpl
shll
cld
xchg
mov
push
insb
js
add
loopne
das
repnz
test
jg
cmp
pop
push
cmp
psubw
test
lahf
mov
jge
jg
loope
test
pop
push
sub
popa
jge
popf
lcall
int
outsb
jae
aad
int3
xchg
int
xchg
test
test
cmp
xor
inc
rcr
push
mov
mov
xor
adc
add
jg
and
out
mov
jnp
hlt
inc
mov
ficomps
cli
mov
out
insb
push
sub
sub
sub
jae
or
cli
orl
lods
mov
in
dec
pushf
icebp
mov
dec
xchg
neg
or
cmp
fisubs
sti
xor
fidivrs
sbbb
xor
mov
decb
xchg
call
mov
mov
xor
push
dec
xor
pop
dec
xchg
jo
pop
ja
cmpsl
sbb
and
fstl
fistpll
xlat
int3
mov
aas
push
dec
inc
daa
bound
jl
jg
lds
add
fstl
pop
cmp
xchg
das
sbb
cmp
imul
or
sub
add
insl
pop
push
and
mov
cmpsl
test
xor
adc
mov
pop
sub
out
popa
cltd
stos
movsl
cld
in
xchg
adc
movsl
pop
xchg
mov
xchg
mov
sbb
push
aaa
je
int3
dec
aam
test
fnstsw
push
ss
jg
xor
into
mov
mov
psubw
sahf
mov
ret
mov
sbb
repz
mov
xor
inc
adc
fst
xor
clc
in
fwait
je
fwait
setl
pop
xchg
jmp
fcomi
and
out
jne
jp
cltd
cli
outsl
sbb
dec
jo
mov
add
jb
imul
cmpsb
cmpsb
lahf
xorb
xchg
icebp
ja
xchg
notb
jge
test
ficoms
mov
in
aad
pop
dec
jo
popf
jl
mov
jne
out
jo
out
aas
mov
adc
and
or
in
cmp
ds
jno
decb
adc
xchg
add
mov
shrb
subl
jg
out
xchg
call
lods
movsb
mov
imul
cmp
xor
jae
jg
lock
cmp
stos
out
sbb
nop
inc
mul
ljmpw
mov
pop
mulb
sbb
mov
xor
js
and
sbb
sahf
or
out
push
movb
into
fiadds
xor
push
roll
adc
int
fst
sub
in
xchg
insl
test
dec
movsl
pop
push
lods
inc
mov
adc
int
fst
sub
in
xchg
insl
test
dec
movsl
pop
push
lods
inc
mov
adc
int
fst
sub
in
xchg
insl
cmpl
test
gs
adc
int
sbb
pop
or
or
and
inc
push
into
fidivs
outsl
int3
js
pop
xchg
aaa
outsb
jg
dec
out
imull
xchg
adc
cmpsl
push
mov
inc
push
into
fidivs
pop
mov
aaa
outsb
jle
dec
out
imul
xchg
xchg
push
in
mov
inc
push
into
fidivs
pop
mov
aaa
outsb
outsl
pop
xlat
and
push
clc
jnp
jo
mov
lcall
shlb
mulps
jb
inc
jnp
pop
scas
sbb
adc
xchg
add
mov
mov
ja
das
sti
sub
repnz
jnp
notl
inc
leave
nop
stos
sbb
addr16
cmp
sub
sahf
or
inc
push
imul
out
push
aam
stos
fidivs
push
stos
pop
or
sti
mov
shr
jle
lea
cmp
cmpsl
push
test
loop
mov
push
mov
mov
cmp
or
and
jge
shrl
pop
cmp
roll
test
add
insb
jb
lcall
mov
mov
jbe
jle
mov
dec
mov
mov
inc
push
into
fidivs
pop
mov
aaa
outsb
jle
dec
out
imull
xchg
xchg
push
cmpsl
push
fisubrs
push
mov
scas
imul
ljmp
mov
das
out
in
movsl
pop
testb
mov
scas
dec
sti
jae
push
int3
aaa
or
pop
cwtl
das
in
cld
imul
push
incb
lss
loop
mov
aaa
outsb
jle
dec
out
imull
xchg
xchg
push
cmpsl
push
mov
inc
push
into
fidivs
pop
mov
aaa
outsb
jle
dec
out
imull
xchg
xchg
push
cmpsl
push
mov
inc
fistpl
push
aad
xor
mov
icebp
sbb
jbe
lahf
not
ljmp
and
inc
std
and
lods
mov
in
or
adc
out
dec
aaa
fs
cmpsl
loop
mov
add
shrl
pop
das
mov
rclb
dec
ljmp
cmc
dec
adc
andb
cmp
rcll
faddl
adc
sbb
adcl
adc
dec
sarl
movsl
adc
sbb
cs
rorl
arpl
or
xchg
lret
jnp
popa
gs
xchg
cmp
inc
mov
test
clc
xchg
and
ret
pop
sub
sub
cmp
adc
enter
and
push
jle
ss
mov
cmp
mov
xchg
sbbl
pcmpgtb
jbe
push
mov
sahf
loopne
lock
xchg
inc
sahf
pop
insb
inc
nop
sub
das
shrb
dec
cld
outsb
mov
xchg
jae
and
test
jnp
jnp
in
jo
loopne
sub
out
imul
cmp
fadds
sbb
cmp
mov
add
push
into
test
test
shll
rorb
mov
sbb
stos
sbb
dec
sub
test
adc
movsl
push
dec
pop
fisttpll
fwait
pushf
mov
mov
mov
sbb
pusha
dec
repz
fdivrl
pusha
movsl
mov
xlat
into
push
nop
jns
loope
sarb
push
incl
lret
ret
dec
stos
pusha
roll
pushl
loope
pop
xor
mov
aaa
xor
jb
mov
jns
push
fchs
scas
dec
les
lcall
std
push
insb
enter
push
dec
jmp
xchg
lods
test
mov
xchg
mov
adc
out
xor
jmp
mov
add
subb
iret
shll
mov
stos
inc
add
push
fiaddl
fimull
imul
imulb
push
stos
mov
add
xor
jecxz
cmp
outsb
add
fwait
add
jmp
and
push
mov
mov
push
in
fiaddl
add
push
outsb
or
mov
pop
xor
mov
lods
cmp
mov
js
jnp
pop
out
std
pop
dec
xor
sbb
mov
or
out
push
sbb
stos
mov
or
mov
add
push
cmpsl
stos
pop
mov
and
rcr
iret
daa
and
add
aas
sub
adc
cmpsb
cli
dec
jb
cmp
add
das
and
loopne
ds
cmp
adc
push
xor
lods
js
arpl
push
pushf
outsl
dec
mov
lahf
sbb
pop
push
fs
push
aad
mov
mov
jnp
in
sbb
push
mov
fsubl
jns
insb
and
rcrb
scas
push
enter
push
inc
enter
push
std
fs
dec
dec
mov
subb
leave
sbb
sub
or
int3
xor
movl
je
sbb
mov
mov
sub
xchg
or
and
pop
cmp
jne
popf
outsl
and
sub
cmp
adc
sbb
pop
jg
add
mov
xchg
xor
dec
das
cmc
in
int
shrl
xchg
pop
rolb
cwtl
sbb
adc
jp
cmpsl
fucom
mov
jne
rorl
xlat
and
and
fstl
fistpl
lret
inc
mov
and
push
cwtl
cltd
mov
mov
push
xchg
dec
or
lea
movsb
mov
sbb
mov
xchg
dec
mov
outsb
cmp
lock
pop
adc
pop
mov
out
xchg
inc
icebp
xor
add
push
scas
mov
and
fs
fnstcw
cmp
shl
stos
cli
hlt
les
lret
xor
push
pop
pop
mov
jns
push
mov
pop
roll
cmpsb
jns
lock
les
cmc
aad
or
xor
std
jns
add
cs
push
addps
sub
pusha
loope
dec
int
into
lods
popf
jl
dec
xchg
adc
mov
lret
and
int
cltd
lret
fistpl
lret
mov
les
dec
add
pop
add
pop
out
lock
hlt
add
xor
lea
cltd
test
mov
xor
cwtl
rol
jae
mov
mov
test
in
fidivl
icebp
cli
inc
in
in
jns
inc
jne
imul
fisubs
js
outsl
jb
insl
mov
add
inc
xchg
fcomps
arpl
scas
mov
inc
pop
stc
jnp
lds
jb
cli
push
mov
ret
aam
inc
outsl
sbb
pusha
add
or
xor
jb
cmp
inc
xchg
out
sub
stc
or
popf
xchg
cli
inc
and
sbbb
sbb
fildll
clc
pop
popa
pop
aam
addr16
inc
call
ss
push
adc
shlb
stc
add
mov
mov
cmp
xchg
push
and
inc
sub
push
inc
dec
mov
scas
add
xchg
hlt
movl
pushf
push
mov
push
stos
add
xchg
ficompl
mov
mov
xor
mov
or
dec
cmpsl
cltd
pop
inc
imul
adc
addl
dec
in
ja
sub
sti
fdivrp
sbb
sbb
inc
push
sti
mov
jns
adc
xchg
mov
xchg
fcmovnu
mov
ss
mov
scas
loopne
popa
dec
jo
ret
pop
fisttps
test
insb
and
leave
insl
sub
cwtl
call
adc
out
and
xchg
adc
cwtl
adc
cmp
stos
mov
push
pop
adc
test
cmpsb
xor
sti
xor
test
sub
cmp
push
aaa
adc
mov
fsubrp
push
sbb
jnp
sub
call
inc
imul
cli
cmp
hlt
sbb
or
cmpsb
iret
lods
mov
movsb
movsb
mov
aam
xchg
inc
mov
test
mov
cmc
jne
shrd
sbbl
pushf
inc
insb
in
inc
or
aam
push
aas
cld
mov
insb
and
mov
lret
pop
adc
dec
std
sbb
pop
in
imul
jp
inc
or
ljmp
jl
jns
packuswb
mov
lcall
pusha
lret
mov
and
arpl
rclb
rolb
mov
popa
mov
fcompl
fnstenv
aad
xchg
loope
mov
test
in
dec
sbb
sbb
lret
pop
pop
xchg
mov
dec
inc
cld
push
lea
into
jp
inc
push
sti
jg
fstpl
aad
xor
loope
push
add
push
fisubl
std
dec
jae
sub
jno
ret
inc
pop
aas
clc
out
aas
or
ds
cmp
orl
push
mov
cwtl
pop
test
rcl
sub
in
mov
das
jl
or
xor
and
js
es
jle
jne
inc
pop
xchg
mov
xor
lahf
adc
popa
mov
mov
xchg
ret
sub
push
lcall
pop
jnp
cmc
jno
mov
sub
es
rclb
ja
push
iret
out
iret
push
jns
sahf
jl
ljmp
adc
clc
leave
or
test
aam
xchg
add
xchg
mov
fstpl
xchg
sub
jbe
sbb
test
repnz
xchg
cli
push
das
jg
xor
mov
push
xchg
loope
pop
in
mov
mov
aas
add
mov
insb
xor
xchg
cltd
sbbb
jge
or
push
dec
push
lea
add
dec
mov
jne
sbbl
jge
push
ss
mov
enter
ljmp
rorl
sti
stc
and
insb
jmp
jo
jb
dec
outsb
int
mov
mov
jp
fadd
sbb
out
shl
test
and
cmp
xchg
push
lcall
movsb
lock
dec
mov
lahf
rcl
pop
bound
adc
movsb
inc
popf
popf
mov
sub
insl
fcomps
jge
lahf
insb
repz
and
aas
movsl
aas
cmp
xchg
mov
ret
mov
jle
inc
push
xor
push
sbb
imul
cmc
dec
push
gs
mov
jl
mov
movsl
jnp
decb
push
xchg
mov
lcall
xchg
scas
cmp
repz
aas
and
in
outsl
les
stos
jae
or
mov
cmp
push
mov
imul
push
mov
inc
adc
inc
jbe
in
or
and
lea
dec
jmp
add
jl
addr16
gs
or
or
test
cld
inc
sbb
rorl
xchg
push
fwait
add
dec
push
mov
arpl
mov
pop
outsl
orb
pop
inc
sbb
mov
scas
int3
lods
ret
push
mov
sbb
insl
mov
or
leave
xchg
mov
out
push
inc
mov
cwtl
jnp
shlb
jb
cltd
in
sub
daa
jg
repnz
aad
addb
inc
out
push
inc
lds
into
andl
xor
push
pop
cmp
cmc
pop
ds
pop
lret
cmp
cmp
stos
ljmp
xchg
pop
push
test
cmp
mov
pop
mov
movl
stc
ss
scas
inc
dec
inc
add
jecxz
daa
lods
mov
jl
sbbl
mov
xchg
mov
rorb
sub
repnz
loopne
les
movsl
cmc
inc
xor
jecxz
dec
std
jae
mov
inc
add
cli
scas
popf
mov
test
jmp
pop
inc
and
scas
lahf
mov
lods
sbb
xorl
mov
push
cmp
mov
inc
ds
jg
pop
and
adc
shl
lcall
pop
jae
cmpsl
negl
dec
movsl
and
imul
fcomp
mov
jnp
mov
lret
xsha1
cmpsb
dec
mov
mov
or
fwait
and
int
jecxz
pushf
xchg
in
jge
and
or
sbbl
lcall
aad
cld
lahf
adc
arpl
jmp
push
add
add
stc
mov
lods
dec
dec
mov
dec
mov
add
mov
and
ja
aam
dec
or
sub
push
dec
into
ret
testl
sbb
fwait
rcrb
icebp
mov
fwait
xchg
insb
test
adc
pop
fsubl
xor
sar
dec
mov
mov
mov
push
cmp
xlat
mov
mov
pop
add
jmp
and
enter
imul
lea
pop
and
mov
es
cmp
mov
and
sub
outsl
mov
les
mov
ret
es
adc
movsb
adc
add
rcll
mov
and
pushf
fnstsw
idiv
xchg
xchg
iret
les
nop
mov
es
lock
fcoml
pushf
cmp
outsb
add
sub
bound
mov
movsl
xchg
pop
jnp
push
push
ret
test
loopne
clc
xchg
add
xchg
lods
adc
cmc
push
and
in
or
mov
add
and
xchg
and
pop
mov
dec
adc
push
cwtl
negb
fcoms
or
lods
dec
lcall
mov
ret
dec
ss
mov
push
push
jl
xor
dec
int3
enter
mov
sbb
inc
dec
pop
sbb
mov
inc
dec
enter
das
sbb
mov
clc
jo
fwait
pop
xchg
push
sub
push
mov
clc
cmpsb
xor
or
in
cmp
test
jecxz
cltd
add
aad
xor
rcrl
mov
pusha
mov
hlt
das
sbb
popa
push
mov
mov
lahf
and
jne
xor
mov
cs
aad
sbbl
cmp
add
movsl
or
and
sbb
mov
ficoms
popa
imul
adc
addl
or
mov
cmp
cmpsb
push
pop
fwait
mov
dec
xchg
inc
ret
out
jae
subb
mov
push
xchg
and
arpl
dec
push
push
hlt
lcall
incb
iret
out
dec
xlat
pop
push
stc
adc
fldcw
jp
dec
daa
sbb
ljmp
sbb
lods
and
sub
xor
fnstsw
imul
add
and
ja
mov
hlt
lret
mov
insb
loope
loopne
jle
sti
mov
adc
sub
lea
pop
inc
sub
test
in
push
insb
mov
xor
shrb
xchg
fidivs
jbe
in
shrb
int
xchg
inc
jo
jnp
xchg
lcall
jle
jo
inc
js
or
iret
dec
leave
mov
sbb
fidivrs
add
ja
test
xchg
aaa
pop
rol
cmp
and
mov
dec
test
mov
in
mov
xchg
fdivrs
add
inc
rcrb
ret
xchg
mov
sahf
in
add
push
xchg
pop
sbb
jns
dec
rcll
and
fwait
mov
repz
adc
xchg
leave
neg
cmpsb
jns
daa
mov
and
adc
pushf
and
mov
in
pop
in
cld
and
pop
and
pop
lret
sbb
mov
pop
xor
insl
clc
mov
mov
imul
add
and
and
pop
movsl
shlb
mov
js
lock
imul
mov
push
popf
push
mov
mov
add
ja
adc
sub
and
adc
jle
cwtl
sti
jl
pop
into
sbb
popf
lds
aaa
es
xchg
insl
es
xchg
stos
sar
loope
sub
in
in
mov
rorl
adc
mov
ds
leave
bound
xchg
xchg
subl
sahf
jecxz
pop
ret
shll
pop
add
jg
xchg
fldt
xchg
mov
ljmp
loop
dec
aaa
jne
or
cmp
push
cmp
pop
xor
xor
sbb
movsb
add
adc
shll
fisttpl
jb
outsl
mov
cmpsb
push
scas
xchg
add
adc
fcomps
dec
sub
and
xchg
pusha
icebp
inc
mov
cmpsl
aad
push
adc
mov
imul
adc
cmp
subl
pop
subl
adc
sbb
mov
adc
xchg
aam
and
jecxz
subb
adc
jbe
jbe
inc
lahf
or
sahf
push
aad
clc
std
jnp
jns
pushf
sbb
scas
sbb
in
lret
cwtl
test
and
mov
jo
push
push
jg
cmp
sbb
fwait
shr
inc
push
mov
loopne
add
xchg
nop
outsl
cmpsl
fstl
lods
and
fisubrl
sub
mov
ljmp
mov
adc
push
sbb
jg
add
ds
sub
lods
cld
sbb
call
jg
out
xchg
pop
shr
sbb
cmp
movsl
pop
pop
adc
jo
adc
jae
mov
repz
lahf
mov
pop
mov
and
cli
and
mov
xchg
fwait
add
imul
into
ret
xchg
adcl
mov
scas
mov
cs
sbbb
jge
in
in
mov
xor
ljmp
or
jae
repnz
dec
add
out
test
xchg
jmp
xchg
lret
mov
mov
sub
xchg
js
cld
movsl
movsl
add
aam
mov
aad
push
test
shr
rcr
jno
jae
or
push
call
stos
mov
mov
loopne
dec
nop
add
fdiv
inc
nop
pop
ljmp
int3
cmp
sub
or
ret
mov
mov
and
jecxz
cmp
stc
ljmp
leave
in
ljmp
stc
nop
sbb
inc
xor
fstpt
xchg
scas
push
mov
scas
xchg
je
mov
sbb
jecxz
pop
fisubrs
add
adc
pop
mov
cld
mov
and
stos
jae
paddw
pop
insl
out
outsb
jmp
cmpl
pushf
mov
pop
mov
push
test
jno
rcl
mov
cmc
mov
test
adcl
xor
iret
jecxz
pop
xor
lret
rcrb
inc
orl
cli
aas
fbstp
sbb
inc
ja
push
xchg
in
dec
in
mov
fadds
mov
enter
push
sub
nop
fdiv
das
scas
in
cmp
inc
mov
push
mov
ds
lods
add
mov
aaa
sub
xlat
repz
xchg
sbb
lcall
jmp
dec
cmpsl
repnz
ret
cltd
cli
aad
fldt
mov
orl
pop
ja
jmp
movsb
rcll
gs
xchg
icebp
mov
andl
xor
inc
mov
fidivs
shlb
outsb
popa
mov
jg
aas
pusha
clc
mov
sub
fprem
sahf
ljmp
call
pop
mov
fnstenv
dec
xor
and
inc
sbb
fstpl
idivb
shld
enter
adc
lods
fs
insb
pop
daa
push
sbb
xchg
xor
sti
lods
aam
mov
cmpsb
mov
inc
or
hlt
mov
leave
pusha
ja
mov
aam
addl
repz
dec
jecxz
jnp
dec
push
dec
jmp
jns
shrb
test
pop
rorb
sub
dec
movsl
fisubs
cltd
xor
cld
std
jge
lret
outsl
sub
loope
lret
in
jno
lea
notl
lret
dec
or
iret
sti
cmp
fldenv
loopne
test
or
jle
cmc
fnstcw
insl
gs
loop
mov
xor
inc
cld
cmpsb
mov
daa
pop
sub
in
and
mov
lods
sub
dec
ret
add
fmull
hlt
add
aaa
xchg
xor
sbb
int3
fcoml
shlb
xor
mov
xor
in
push
jns
mov
fildll
mov
fxch
inc
ss
push
xorb
add
ljmp
in
sbb
lret
scas
inc
jg
icebp
adc
sub
jl
sbb
fldcw
mov
insb
adcb
leave
xchg
mov
jb
arpl
pushf
repnz
adc
jp
push
cwtl
shlb
arpl
jae
cmp
sub
in
mov
dec
mov
inc
xor
mov
mov
pop
das
xchg
inc
mov
faddp
sub
cmp
lahf
or
je
lcall
popa
mov
pushf
mov
cmp
mov
jmp
out
cmp
dec
jne
jne
or
cmp
dec
push
fadds
pop
out
mov
push
sub
ja
xchg
push
sarb
add
dec
add
pushf
inc
sbb
jo
aas
lds
int3
cmp
jnp
in
jl
dec
ljmp
or
xchg
jnp
mov
pop
and
mov
mov
bound
sbb
mov
ror
aas
and
or
jg
xchg
das
add
xchg
mov
mov
lret
cmp
sbb
jnp
and
in
jae
decb
movsb
and
fildl
stos
adc
iret
iret
scas
or
dec
mov
or
scas
test
mov
sbbb
mov
dec
mull
in
aas
mov
cmp
fwait
mov
or
inc
add
or
movsb
sub
mov
pop
mov
addr16
clc
das
inc
add
arpl
add
dec
rcr
sbb
scas
pop
dec
out
mov
insb
and
adc
rcrl
cmp
cmp
mov
stc
rcrb
inc
pop
mull
add
mov
add
jae
test
aaa
push
int
pop
push
jmp
sti
es
movsb
inc
and
push
add
outsb
pop
mov
jnp
or
je
push
sbb
addl
xchg
add
and
mov
dec
mov
test
mov
iret
cmpb
jo
daa
mov
cwtl
pusha
mov
pop
adcb
lcall
hlt
jb
movsb
jmp
sti
inc
jb
sbbl
mov
or
arpl
mov
cmovne
add
jb
adc
jge
xchg
adc
test
inc
sub
xchg
add
push
addr16
jp
loop
push
sbb
roll
pop
call
pop
rcrb
cli
in
xlat
mov
sbb
sub
jne
jg
cmp
sbb
mov
pop
scas
adc
or
loop
push
iret
fidivs
pop
mov
aaa
outsb
jle
dec
out
imull
xchg
xchg
push
cmpsl
push
mov
inc
push
into
fidivs
pop
mov
aaa
outsb
jle
dec
out
imull
xchg
xchg
push
cmpsl
push
mov
inc
jle
dec
out
ja
pop
mov
aaa
outsb
inc
jle
dec
out
imull
xchg
xchg
push
cmpsl
push
mov
inc
push
into
fidivs
pop
mov
aaa
outsb
jle
in
pop
sbbb
push
incl
mov
nop
sarb
add
adc
and
xor
inc
sub
je
test
xchg
fbld
aam
in
hlt
outsl
add
adc
and
xor
inc
pop
push
pop
fs
test
xchg
movsb
xlat
mov
les
hlt
data16
push
aaa
xor
push
inc
xor
pop
je
test
pop
in
add
pop
stc
sbb
aaa
inc
cs
out
ds
cmpsl
mov
dec
xchg
cmp
sub
call
inc
je
and
xor
pop
lock
xchg
adc
push
mov
jl
sub
jecxz
jne
les
hlt
aas
inc
shll
fwait
pcmpeqw
jnp
xchg
push
movsl
jmp
inc
lds
movsb
hlt
aaa
outsb
add
mov
rclb
add
lcall
push
jb
dec
inc
les
mov
pop
fdivrs
adc
gs
and
add
insb
cwtl
movsl
xor
inc
shrd
insb
das
xchg
sti
loop
and
pop
xor
mov
pcmpeqb
test
xchg
fbld
aam
in
hlt
data16
adc
and
xor
inc
aaa
push
add
jmp
mov
xchg
rolb
add
dec
sub
sub
insl
out
adc
movsb
mov
cli
lahf
mov
hlt
cmp
or
jb
pop
aas
sub
adc
lcall
shl
scas
aam
in
hlt
jg
outsl
adc
and
xor
inc
das
push
pop
fs
test
xchg
fbld
aam
in
hlt
jg
outsl
adc
and
xor
inc
das
push
pop
fs
test
andl
int
popf
mov
mov
das
dec
les
inc
pop
sbb
cmp
inc
and
jnp
cmp
ljmp
jmp
movsl
cmp
xchg
stos
jns
cmp
outsl
out
out
dec
adc
out
dec
or
sub
adc
and
fwait
idiv
pop
pop
dec
out
push
jne
mov
sbb
cmpb
adcl
andb
mov
lds
inc
add
es
jge
add
cs
stc
xchg
push
ds
ss
jo
pusha
jl
sbb
and
sbb
cmp
xor
mov
cmp
aam
out
lods
mov
or
lret
xor
in
pushw
mov
pop
mov
xchg
xchg
js
push
push
outsb
out
shl
or
lea
out
jl
xorl
adc
cmp
mov
mov
add
loop
add
xchg
loop
cld
xchg
jg
rcr
mov
mov
jno
and
cmpsb
mov
shll
jecxz
push
and
pusha
push
lods
inc
push
std
hlt
insl
mov
jmp
loope
push
out
push
into
jg
cmpsl
push
pop
movsl
test
add
aaa
jb
pop
mov
iret
cmp
pop
das
fidivs
pop
pop
adc
mov
bound
mov
inc
fidivrl
push
mov
out
adc
pop
mov
push
dec
test
dec
push
out
cmp
cmp
dec
mov
inc
mov
fwait
ss
adc
xchg
gs
push
lods
adc
shl
pusha
inc
pop
imul
jno
jle
pop
push
ljmp
mov
push
lcall
add
inc
cmp
rorl
sub
jo
out
or
push
fcoms
adc
mov
je
dec
fdivs
mov
shll
mov
scas
sbb
xchg
std
cmp
test
cld
ss
mov
adc
cmp
sbb
xchg
test
mov
xchg
les
or
insb
inc
and
cmp
movsb
jecxz
jmp
lahf
dec
addb
fwait
add
lahf
xor
mov
jge
aaa
mov
and
shl
ja
mov
cmpsl
xchg
cmc
jo
pop
ja
and
mov
lds
ret
adc
rcrl
xor
sub
aam
dec
mov
push
jae
test
pop
jmp
or
jmp
pop
out
adc
or
push
and
pop
into
je
sahf
ja
add
xor
jb
lcall
sub
imul
adcl
gs
xchg
lods
mov
pop
jp
adc
cmpsb
sbb
call
aad
std
bound
leave
adc
cmc
push
je
cwtl
mov
jae
ret
jp
sahf
popa
loop
cmpsb
lods
lods
inc
sub
mov
and
jo
sahf
add
std
pop
jno
ds
lret
adc
sbb
stos
lret
mov
cld
jnp
aas
pop
fstpl
testb
mov
and
dec
fiaddl
je
mov
aaa
push
loop
push
adc
aad
fs
mov
aam
iret
mov
ljmp
pusha
sub
andb
pop
mov
or
sub
movsl
shrb
arpl
insb
xchg
mov
jecxz,pt
cltd
xchg
inc
or
lret
xchg
push
lret
add
sub
cmp
cmp
pushf
mov
int3
sbb
push
les
mov
int3
ja
pop
and
or
and
sahf
es
rcll
mov
ja
pop
and
std
rcll
pop
pop
cmpsl
mov
pop
dec
sbb
ja
call
xchg
pop
xlat
arpl
sub
lods
sbb
add
mov
orb
pop
or
mov
iret
in
negl
mov
xchg
and
xor
call
jne
sbb
sub
mov
adc
lock
sub
arpl
xor
xor
push
and
push
sbb
inc
push
pop
hlt
xchg
xchg
outsl
sub
idivb
pusha
sti
sahf
lods
in
cli
sbb
pop
lock
cmpsb
cld
jge
adc
pop
rolb
dec
nop
aam
cwtl
aam
out
imul
ds
adc
sub
add
pop
sub
xor
icebp
pop
sub
rcll
into
dec
call
lahf
cmp
mov
jg
rclb
fs
or
int
loopne
sbb
call
cmpl
ds
daa
dec
nop
fimuls
or
push
xor
ja
shlb
jo
and
rorl
and
lock
cs
fwait
loop
add
xor
mov
and
sahf
or
out
push
xor
fdivrs
ss
or
lahf
pop
mov
pop
in
test
popa
and
pop
xor
imul
fs
cmpsb
xchg
imul
fwait
push
xor
inc
fidivs
xor
and
cld
and
lret
in
jns
jno
adc
out
mov
in
inc
push
ss
nop
add
int
adc
jbe
cld
mov
nop
and
jl
xchg
les
pop
ljmp
or
aas
add
jle
adc
sub
cmpsb
adc
jo
add
movsb
test
pop
je
dec
daa
add
lds
or
pop
xchg
adc
mov
sub
in
dec
insl
pop
aaa
adcb
mov
add
mov
inc
cmc
mov
inc
clc
cmpsl
or
ss
rcr
mov
inc
dec
pushf
fidivs
sarl
sbbb
push
call
push
adc
pop
pop
cmc
lock
xchg
push
ljmp
sbb
jge
sbb
sbb
psllq
mov
repz
add
pop
addr16
test
or
mov
clc
or
pop
lret
xchg
ret
pop
xchg
mov
fcmovnu
cmc
jbe
jg
pop
test
xor
call
add
test
lahf
test
adc
add
jmp
popf
xorl
fs
cmpsb
dec
outsb
mov
shll
fwait
xchg
frstor
leave
fmull
xor
jne
sarb
lcall
xchg
or
push
mov
mov
mov
jo
lcall
fsubl
rol
iret
scas
fucomip
xchg
jne
lods
pop
into
xchg
inc
stc
rcr
shl
insb
push
loop
lods
xchg
jecxz
pusha
adc
dec
stos
xor
fcomip
insl
and
dec
pop
add
or
jle
pushf
loop
jg
jge
sbb
mov
repz
pushl
lahf
mov
insb
or
iret
and
out
negl
daa
xor
aad
dec
inc
lods
and
pushw
push
dec
pop
cmp
xchg
lret
add
mov
or
xchg
xlat
repz
leave
sbb
or
pop
repz
daa
inc
imul
and
rcl
pusha
ret
mov
xchg
scas
pusha
stc
js
fcomi
xchg
push
pop
fdivrs
xor
jle
imul
es
xor
repnz
leave
mov
xchg
std
int3
mov
sbb
mov
jmp
std
out
xor
notl
adc
gs
mov
sub
jecxz
cmp
aad
push
jg
mov
xchg
cltd
jecxz
stc
push
jbe
and
dec
lret
sbb
inc
iret
imul
xchg
adc
jnp
and
cwtl
fmuls
sbb
stos
sti
add
xchg
addl
jns
imul
dec
cmpl
and
dec
out
mov
mov
mov
dec
ret
adc
xor
sahf
dec
js
cmpl
xchg
leave
sahf
or
in
mulb
inc
xor
outsl
es
add
leave
and
mov
lods
cs
cmp
ljmp
dec
stc
mov
dec
insl
dec
add
imul
xchg
pop
mov
push
mov
sbb
jno
inc
and
and
xchg
pop
mov
push
jle
les
push
push
jo
pop
pop
cmc
dec
and
dec
sbb
into
mov
repnz
mov
lret
jmp
xchg
mov
hlt
incb
adc
ja
movhps
cmp
push
fs
lret
xor
aas
fwait
cli
mov
rcr
ss
into
xchg
hlt
mov
dec
cli
or
mov
out
push
sub
movsb
fbstp
ret
and
insl
mov
ja
or
inc
aas
lahf
xchg
andb
in
cmpsl
fdiv
aad
bts
dec
stc
mov
lahf
pop
js
movsb
loope
add
pop
out
stos
mov
repnz
mov
push
mov
in
add
cwtl
mov
mov
pop
push
dec
jp
lds
inc
fbstp
aas
sub
test
lcallw
aad
sti
add
in
sub
in
or
pushf
and
push
addr16
push
shrl
sbb
sbb
mov
movsb
pop
push
sahf
inc
scas
push
call
movsl
jns
mov
cmovb
fisubs
out
jb
mov
pop
jle
ds
aad
imul
andb
sub
sbb
pop
adc
cwtl
lock
in
push
sub
mov
mov
dec
cmp
idivl
sbb
loope
mov
mov
out
add
and
or
inc
call
repz
lock
je
and
mov
xchg
fbstp
pop
les
in
xchg
dec
loopne
adc
inc
clc
lea
out
movl
and
add
pop
push
rolb
xchg
out
notb
xchg
sub
ss
xchg
imul
inc
lea
mov
enter
pop
ds
xor
and
or
mov
lcall
lock
add
ja
xor
arpl
cmp
inc
loop
int
ret
xor
shl
add
inc
pop
sbb
loopne
push
inc
pop
push
cld
sub
mov
test
cmovp
ret
in
push
pushf
or
test
rcrl
mov
lea
xor
je
popa
int3
out
or
push
mov
push
pop
pop
and
jmp
add
mov
arpl
cmc
push
xor
iret
lahf
mull
sbb
aad
mov
fisttps
iret
push
pop
inc
xor
test
and
jge
cmp
fisttpll
sbb
outsb
lret
arpl
scas
push
mov
aaa
mov
mov
outsb
and
sahf
inc
mov
call
adc
stc
inc
loopne
cmp
faddl
jg
subl
stos
test
stos
and
mov
mov
mov
and
rclb
push
shr
jnp
pushf
mov
xchg
fidivs
mov
pop
sbb
shrb
ret
push
addr16
out
test
inc
sub
pop
mov
mov
imul
jle
pop
andb
jle
inc
stos
push
mov
add
xchg
lcall
leave
pop
jmp
pop
gs
mov
mov
js
mov
cltd
aam
jo
or
pop
int
sub
int
fistpll
adc
imul
outsl
or
idivl
popa
push
mov
aas
sub
push
cmc
das
std
jg
mov
popf
and
adc
cmp
jle
bound
push
fiaddl
fbld
cltd
jno
sbb
lds
jb
mov
sub
int3
insl
adc
lret
mov
adc
jmp
pop
outsb
loopne
ss
cmpsl
sub
mov
aad
imul
packuswb
stc
push
fsts
insb
sbb
sbb
out
adcl
mov
lcall
mov
cwtl
inc
mov
push
xchg
iret
or
jbe
mov
flds
in
dec
cmp
xorb
outsl
gs
sti
add
jnp
cmp
out
or
les
sub
imul
stos
pop
cmc
scas
fldl
lods
sbb
push
scas
js
adc
cld
pop
in
adc
repnz
pop
inc
pushf
mov
fiadds
fimuls
lcall
ret
scas
sub
repz
and
xor
push
push
dec
push
adc
ficoml
or
jae
jl
inc
ret
ss
fmul
fistpl
outsl
pop
xlat
mov
arpl
ja
out
adc
jle
fnstcw
push
mov
call
cmpsb
lahf
mov
ret
subb
scas
dec
pop
aas
pop
lock
inc
cmp
stc
je
jge
in
dec
adc
push
push
sahf
mov
pop
sub
sbb
xor
movsl
mov
in
sahf
stos
push
daa
xor
hlt
pop
gs
outsl
mov
outsl
cltd
ror
fisubs
in
int3
jg
pop
inc
or
cli
sahf
pop
mov
decb
mov
push
loope
roll
pop
sbb
push
adc
dec
pushf
pop
mov
sbb
mov
out
mov
call
inc
add
push
cmpsl
push
repz
fbld
push
test
pop
mov
mov
dec
cmp
movsl
push
in
dec
test
popa
fcmovnu
ss
jbe
xchg
ljmp
xor
adc
ret
loopne
push
enter
mov
mov
aam
push
popf
movsb
pop
pop
mov
sub
outsb
int
jmp
fcmovnu
sub
mov
and
jmp
xor
mov
test
flds
push
jno
xchg
dec
rorl
rcrl
jl
pop
jns
lods
jecxz
cs
or
or
lret
sti
push
inc
xchg
pop
pop
stc
xchg
sarb
push
or
xchg
pop
fisubs
jae
jbe
mov
inc
cmp
jecxz
lods
mov
pop
inc
ret
out
inc
pop
mov
mov
or
stc
push
movsb
jo
mov
or
push
int
inc
pop
dec
hlt
rcrb
xor
arpl
scas
addb
iret
fisttpl
imul
inc
jmp
cmp
rorb
mov
pop
cmp
out
stos
mov
mov
clc
loop
xchg
jae
sti
jbe
jne
add
clc
clc
mov
sub
jl
sbb
xchg
dec
adc
push
xor
cwtl
rclb
mov
sbb
std
scas
cltd
data16
into
pop
in
aas
test
rorl
into
xchg
cmp
push
sbb
lahf
adc
cmp
cmc
cmpsl
xor
adc
std
jae
lret
enter
and
rcl
jnp
jg
pushf
insl
and
cmp
cs
mov
mov
xchg
mov
imul
push
idivl
cmp
push
mov
out
daa
stos
xor
mov
lods
cmp
xor
jbe
in
dec
xchg
lret
gs
jmp
sahf
ret
pop
dec
popf
pop
in
dec
push
mov
lahf
add
sub
insl
adc
test
pop
cmp
xchg
xchg
cmp
ss
je
mov
cli
cmpsb
xchg
mov
dec
test
fstps
cli
mov
or
sbb
pop
fisttps
ds
jne
inc
pop
addb
ret
push
and
adc
mov
ljmp
adc
in
xchg
lahf
iret
dec
movsb
add
outsb
sbbl
jl
test
inc
and
sbb
subb
scas
sbbb
sbb
arpl
clc
xchg
lret
sbb
cmp
pop
test
lret
ret
popa
daa
dec
test
out
arpl
add
cs
shl
jno
jns
push
add
sbb
push
movsl
popa
jmp
addb
jne
sarl
pusha
popa
fdivrl
jae
jge
pop
stos
mov
sbb
repz
pop
mov
cmpsl
cmp
add
mov
and
test
out
imul
clc
sub
sbb
jnp
pop
dec
scas
and
xchg
inc
or
pop
outsl
aad
push
js
mov
cli
nop
cmpsb
pop
add
into
push
inc
xchg
arpl
lods
sub
mov
ss
xchg
push
int3
lock
std
cwtl
push
and
cmc
js
movsb
jnp
mov
sbb
bound
stc
lods
fucomi
jmp
mov
outsl
dec
or
xor
pop
inc
dec
cmp
mov
rcrl
push
mov
sbb
cmpsl
in
icebp
push
xlat
sahf
push
enterw
lahf
sub
into
mov
xchg
pop
jmp
fisttps
fisubs
xchg
cmp
imul
or
lret
cmp
mov
fwait
and
movl
xor
insl
xor
inc
imul
test
fistps
mov
mov
cmp
push
xchg
mov
sahf
pop
aaa
fcomip
addr16
inc
cld
push
mov
xchg
inc
add
cmp
fdiv
insl
std
insb
sbb
dec
imul
outsl
jmp
out
in
inc
push
push
sub
shl
add
sbb
cli
daa
mov
jp
jle
mov
push
add
ja
cwtl
cmp
xor
scas
outsb
inc
cmpl
push
and
cmp
xchg
or
mov
push
dec
lock
push
cltd
popf
xorb
or
lret
in
lds
shrl
push
inc
or
mov
push
mov
imul
lret
pop
mov
cmp
lods
cli
cmpsl
in
int
mov
xor
insb
dec
shlb
hlt
je
mov
lahf
cmp
pop
cltd
xor
sbbl
jecxz
pop
in
adc
xor
mov
pushf
jns
sub
add
ret
dec
push
push
mov
dec
mov
mov
and
movsb
nop
add
xor
sbb
scas
push
xor
mov
sti
adc
sub
cmc
cmp
push
es
jae
das
shll
lds
ret
or
imul
sub
xlat
sub
in
cltd
roll
test
pushf
dec
xor
pushf
std
jg
lods
fcmovb
jne
stos
ds
push
pop
enter
stc
imul
adc
hlt
xchg
cmp
test
pop
pop
dec
adc
lods
pop
or
cmpsl
mov
jo
jg
testl
inc
pop
scas
fbld
inc
insb
push
mov
and
lods
ja
mov
jle
mov
mov
cmc
xchg
xchg
push
mov
divb
push
mov
and
std
out
dec
mov
jno
cmp
out
inc
ficomps
lods
sub
mov
adc
fldcw
and
sub
mov
adc
in
mov
push
lahf
int3
aad
stc
rol
pop
sbb
xchg
fmuls
pusha
mov
aas
iret
xchg
and
xor
jae
scas
xor
adc
mov
jmp
jns
dec
jae
testl
xor
adc
inc
sub
cmpsl
jmp
lahf
mov
adc
out
sahf
or
daa
out
xor
aaa
adc
int3
and
xchg
in
int
scas
clc
mov
mov
jae
pop
mov
dec
in
ljmp
fstpt
shrb
push
cltd
test
jne
push
cld
jb
test
sarb
cld
adc
aas
mov
cmp
xchg
dec
and
push
pop
jb
jo
xchg
xor
inc
dec
cwtl
hlt
push
out
and
cwtl
adcb
xlat
and
out
push
scas
push
jge
scas
cmp
pop
lds
cli
scas
into
sub
pop
xchg
add
addb
add
hlt
mov
ljmp
pop
jnp
push
push
pop
jne
xor
pushf
and
repnz
push
mov
enter
sbb
shlb
cs
jb
adc
movsb
and
hlt
in
push
dec
and
xchg
sub
fildll
hlt
jmp
sbbl
add
mov
rol
out
ret
scas
ret
xchg
sti
adc
lods
icebp
fdivl
xchg
bnd
cwtl
mov
loopne
adc
inc
loope
fisubrl
movsb
xchg
aad
mov
xor
call
lods
push
cmp
loope
imull
int
insl
imul
lds
lret
mov
in
add
fdivrp
mov
adc
mov
jle
mov
dec
pop
and
out
aad
mov
push
sub
pop
pushf
dec
push
xorl
je
push
add
mov
lds
imul
mov
mov
mov
adc
xlat
test
cmc
outsl
mov
mov
fsubs
pop
jecxz
dec
jl
sub
inc
sbb
aaa
push
cmp
mov
lcall
lahf
outsl
xchg
pop
add
xor
aad
mov
mov
lods
mov
iret
test
cmp
cmp
cltd
jnp
test
mov
addb
pop
add
in
mov
pop
outsl
jle
mov
adc
out
dec
hlt
stos
jecxz
sarl
test
incb
fisttps
data16
leave
xchg
cmc
pop
je
sub
sub
mov
xor
xor
jb
test
mov
dec
bound
in
xchg
fldcw
out
movsl
dec
add
iret
mov
les
hlt
jg
outsl
adc
and
xor
inc
das
push
pop
fs
test
xchg
fbld
aam
in
hlt
jg
outsl
adc
and
xor
inc
das
push
pop
fs
sub
fbld
aam
in
hlt
jg
outsl
adc
aas
inc
cs
pop
fs
xchg
fisubs
push
pop
fs
cmp
mov
dec
int3
cmpsl
stos
loopne
lock
pop
push
mov
xorb
shll
inc
push
rol
and
cmp
adc
adc
push
mov
inc
mov
jb
add
adc
and
xor
ret
xor
add
push
inc
mov
jb
add
adc
and
xor
ret
or
and
push
adcb
push
xor
and
mov
xor
fstps
adc
sarl
mov
cmp
pop
std
fcomip
pop
or
insb
add
push
test
inc
pop
mov
sub
adc
insl
and
pop
push
aaa
insl
fists
hlt
push
mov
lock
movsl
xor
mov
push
jo
mov
push
mov
sbbb
ret
das
shlb
iret
jecxz
sbb
bound
rorl
cwtl
lods
push
xor
jo
rcrb
and
cmpsl
xor
or
std
daa
inc
dec
scas
mov
xor
loop
ficoml
hlt
pop
cmp
adc
xchg
add
sbb
nop
jb
add
adc
and
xor
ret
sub
sbb
or
inc
mov
lds
mov
cmpl
lods
push
mov
lea
jg
or
cmp
push
lock
and
push
lcall
pop
repnz
xor
add
push
in
mov
lock
xor
ret
xor
add
adc
inc
mov
inc
mov
jb
add
adc
and
xor
ret
xor
add
adc
inc
mov
inc
mov
and
push
jl
cmp
mov
jmp
add
in
aas
jmp
or
mov
and
xchg
fwait
and
ds
jmp
cwtl
clc
in
addl
sub
push
movsl
aad
mov
mov
insb
scas
js
cmp
fisttpll
jmp
jp
shlb
test
out
hlt
adc
cwtl
std
clc
inc
pop
imul
xor
ret
aad
pop
xchg
or
inc
xchg
xor
lret
arpl
sar
mov
ja
sarb
mov
sub
adc
mov
push
iret
lahf
sti
sbb
mov
lret
mov
sub
insl
sti
jo
in
scas
jecxz
mov
inc
mov
fimuls
xchg
aam
scas
inc
movsb
xor
mov
dec
adcl
xchg
xchg
jbe
divb
cmp
sbb
sbb
hlt
xorl
cmp
jl
cmpsb
sahf
imul
jmp
or
and
icebp
bnd
or
adc
fcmovnu
sarl
pop
mov
out
test
aaa
jg
in
dec
outsb
mov
jmp
cltd
pop
pop
inc
xor
mov
fadds
adc
outsl
adc
test
push
pushf
ss
adc
mov
sub
lock
lcall
inc
in
sbb
jge
sub
pop
test
mov
inc
dec
aad
mov
mov
xor
jnp
into
loopne
add
pop
mov
xlat
push
lods
adc
sbb
test
adc
push
mov
cmpsb
fcmovnb
mov
push
lahf
push
or
cli
insb
sbb
or
xchg
add
cli
jmp
cmp
mov
mov
popa
pop
cmp
fistpll
hlt
xchg
jo
stc
xchg
cltd
dec
ja
fs
inc
push
push
cmp
lret
cltd
xchg
out
sub
mov
push
jle
cmpsl
test
mov
popf
repnz
pop
jae
into
fmul
xlat
mov
fistps
gs
lcall
sub
or
push
aas
mov
sbb
push
push
fdivrs
cli
stos
mov
out
inc
rolb
leave
adc
cltd
mov
and
xchg
imul
mov
iret
loopne
jno
outsb
mov
cmpsb
lcall
sbb
pop
add
in
xchg
fsubp
sbb
adc
jae
dec
xor
in
leave
cmpsb
dec
sub
sbb
imul
mov
xor
ret
pop
rolb
lods
testb
xchg
loop
push
out
push
sub
movsb
enter
mov
xchg
mov
dec
nop
std
je
ficompl
loopne
push
movsl
addr16
mov
mov
fidivrl
test
add
mov
fwait
mov
loop
or
sbb
jbe
mov
jb
mov
and
ja
outsl
hlt
mov
jbe
and
cwtl
fldenv
mov
jl
ljmp
out
shr
aaa
and
les
xchg
test
leave
das
dec
xchg
sarl
fidivrs
or
mov
push
lods
ja
aaa
movsl
mov
leave
fwait
add
jo
repz
add
jns
rcrb
inc
aam
in
pop
cmp
lods
rcrb
mov
jmp
fidivrl
pop
pop
add
cmp
lahf
dec
lea
jnp
daa
call
nop
mov
dec
mov
sub
rcrb
cmpsb
dec
mov
dec
je
incb
les
int
cmpsl
mov
movsl
and
inc
icebp
mov
add
cmpsl
sub
iret
xlat
pop
add
sub
mov
in
je
push
adc
push
aad
jnp
add
stos
push
scas
xchg
in
out
ret
mov
xor
addr16
add
dec
xchg
cmc
inc
aam
jp
jns,pn
sti
add
push
jg
aad
icebp
lods
push
mov
mov
dec
mov
push
and
std
xor
fs
jb
jp
imul
leave
mov
cltd
jmp
rorb
scas
jecxz
jmp
xchg
mov
sub
pushf
mov
sub
negl
insl
cmp
addl
shr
and
addr16
out
in
add
xor
popa
int3
push
sahf
jo
push
sbb
cwtl
icebp
fwait
sub
fs
xchg
testb
adc
xchg
pusha
xchg
push
clc
repnz
mov
jb
add
mov
sbbb
mov
cmp
mov
mov
jo
adc
les
addr16
test
and
aas
pop
jno
dec
out
inc
sub
inc
int
imul
xor
cmpsl
sbb
jo
xor
inc
insb
ss
nop
dec
sbb
popf
ds
fwait
cld
add
xor
or
mov
pop
rcll
ret
icebp
push
push
outsb
xor
jne
in
sbb
mov
insb
xchg
xchg
cmp
xchg
or
test
xchg
hlt
mov
push
in
pop
ret
lock
cltd
mov
jne
add
dec
xchg
cmp
jbe
rcr
and
movsl
movsb
mov
cmp
fists
pop
imul
aas
dec
call
mov
imul
jmp
or
and
rcrl
cmp
jecxz
adcl
enter
dec
xlat
lahf
imul
or
or
sbb
ret
loope
push
pushf
rcrb
sub
pop
in
sti
aaa
cmpsl
xchg
js
pop
imul
shlb
cltd
rclb
mov
mov
jl
xchg
fsub
fstps
fdivrl
in
cmpl
jecxz
xchg
fucom
or
cmp
sti
repz
movlhps
sbb
mov
jg
mov
in
andb
push
pop
cmp
push
inc
xor
addl
imul
xchg
lods
mov
push
xor
loop
cwtl
call
pop
jmp
jle
mov
cmp
and
mov
scas
and
fsubl
stos
movsl
jo
pop
out
and
leave
lahf
daa
inc
imul
jmp
cltd
pop
mov
ds
and
add
popf
jg
jne
jae
jne
sub
stc
sub
call
sub
mov
sub
sbb
add
mov
mov
clc
dec
bound
mov
pop
shr
loope
inc
hlt
test
xchg
lods
imul
dec
mov
shlb
nop
and
out
pushl
mov
out
call
lcall
sbbl
mov
xor
std
out
sub
cli
mov
push
into
clc
loop
rcl
xchg
int
mov
leave
pop
mov
sub
enter
cmp
lods
lods
iret
stos
sub
sarl
push
dec
add
push
popf
pop
xor
adc
addr16
movl
sahf
sbbl
out
rcll
dec
adc
std
jns
xor
jbe
mov
repz
lock
insb
push
or
sbb
lock
mov
fs
jnp
mov
cmp
jle
call
cmp
enter
xchg
add
aaa
lods
and
mov
xchg
mov
popa
movlps
roll
mov
xchg
mov
sub
repnz
jmp
icebp
lds
or
ficoml
mov
outsb
jge
mov
je
mov
inc
pop
ljmp
inc
mov
jp
dec
in
or
out
and
pop
pop
sub
xchg
adc
xor
pop
mov
push
inc
cwtl
jg
cld
sub
adc
mov
lods
pop
sub
mov
xchg
mov
pop
stc
sub
mov
addr16
fisttpl
maxps
push
fadds
xchg
jge
jle
xorb
lret
cmp
xchg
push
inc
nop
in
jge
sub
dec
or
push
adc
sbb
sub
dec
xchg
int
mov
jle
xor
test
or
pushf
ss
rclb
push
dec
adc
addr16
push
sti
je
dec
add
inc
jl
ficoms
sub
xchg
out
enter
movsl
mov
xchg
enter
jne
mov
push
hlt
mov
inc
bound
jp
xchg
xorb
fisubrs
dec
lds
pop
into
push
notb
call
fimuls
dec
ss
jbe
mov
and
mov
popa
aam
cmp
sub
incb
aaa
inc
les
or
sti
mulb
iret
pop
dec
mov
sahf
mov
mov
jne
ds
sahf
ret
lds
push
ljmp
xor
adc
fsubrl
fimuls
mov
mov
sbb
adc
outsb
ss
push
fadd
lock
push
addr16
ret
js
push
mov
in
rclb
xchg
mov
out
push
lock
popf
jle
dec
push
bnd
xchg
mov
mov
addr16
pusha
fnsave
xchg
lods
add
pop
mov
mov
scas
sub
push
loope
test
mov
xchg
jne
and
fidivl
dec
cmc
xchg
sti
cmpsb
or
test
jns
adc
jae
mov
jle
maxps
shll
jecxz
sbb
enter
adc
popf
pop
ja
int
cli
pop
pushf
xchg
leave
jle
aas
sub
push
jl
flds
mov
outsl
jmp
jae
std
sub
pop
inc
sub
or
jae
rcll
adc
loopne
int3
xchg
sbb
add
out
adc
rol
fisttps
cwtl
in
roll
rcll
sub
addb
adc
rclb
mov
xchg
popa
inc
insb
xchg
in
fistpl
dec
mov
cs
fsubrl
in
mov
add
sub
adc
dec
test
sub
cmp
pop
inc
xchg
mov
scas
mov
xor
aas
in
dec
xchg
insl
shll
mov
sbbb
pop
jno
xor
jae
pop
dec
adc
xchg
aaa
and
adc
dec
shl
lds
loope
mov
push
stos
sbb
adc
jmp
outsl
fidivl
add
mov
shr
dec
inc
pop
dec
mov
sbbb
lods
stos
insl
sbb
and
inc
jae
inc
popf
pmaxsw
aas
inc
insl
cmpsl
add
ret
mov
mov
dec
shl
insl
jge
sub
jbe
addr16
sub
push
jno
lods
jg
mov
in
lcall
xor
aam
add
pop
cmp
loope
loopne
scas
cmp
sub
push
mov
sub
mov
add
aad
and
jnp
add
out
outsl
pushf
mov
inc
sub
fisttps
xchg
das
int
ljmp
mov
dec
inc
fldt
es
lahf
push
rep
faddl
inc
lods
push
arpl
xchg
rcl
lret
fdivrs
mov
bound
add
jecxz
cmpsb
out
loop
je
cwtl
in
insb
movsb
cs
sahf
add
inc
out
inc
cmc
push
sbb
std
aad
stos
pusha
pop
loop
std
dec
mov
or
jge
jbe
mov
sbb
scas
sbb
fldt
hlt
sbb
jne
out
inc
xor
mov
cmpsl
mov
sti
mov
adc
pop
mov
dec
dec
mov
adc
les
or
mov
mov
push
push
sub
jge
not
popf
mov
testl
test
ds
filds
pop
pop
cmp
sahf
lds
call
lea
pop
or
mov
imul
jo
inc
inc
cld
cmp
mov
jns
loop
daa
and
add
cmp
xor
inc
mov
lods
ror
jmp
popf
mov
push
iret
mov
movsb
add
mov
adc
fucomp
aam
pop
jle
sarl
add
adc
dec
cld
mov
andl
jne
dec
imul
xchg
push
cld
cmpsl
aaa
and
hlt
lock
insl
int
negb
insl
xor
incb
cmpsb
mov
cmpb
dec
add
cmp
dec
dec
iret
fisubrs
lods
mov
addr16
xor
cld
mov
mov
pop
daa
in
inc
mov
xor
pusha
and
in
stc
mov
sub
xor
push
cmp
jle
mov
not
push
xchg
or
sub
jae
cmp
rolb
mov
sbb
loop
aaa
test
xor
testl
pop
sub
cwtl
repnz
jno
mov
mov
jmp
pop
sub
fldenv
in
ja
aaa
mov
mov
cmpsb
mov
loopne
imul
push
inc
inc
lea
out
push
cmp
fxtract
xchg
or
mov
cs
or
inc
sbb
push
lods
push
xor
in
stc
adc
mov
wrmsr
fs
mov
shll
movsl
jns
fcmove
icebp
inc
mov
pop
xchg
in
mov
paddq
fs
xor
push
cld
jl
insl
pop
push
popf
pop
rorl
popf
in
cwtl
ja
cwtl
loope
mov
or
mov
jno
sbb
imul
push
pop
or
inc
or
sbb
push
mov
out
jbe
mov
imull
xchg
iret
mov
cmc
movsb
repz
in
test
mov
mov
arpl
jne
and
loope
push
sub
jecxz
fisttpl
adcl
in
addr16
out
mov
lret
sub
loope
out
stos
jno
jo
jle
add
inc
pop
sarb
loope
dec
dec
ret
repnz
ficoml
pop
ficompl
xor
cmpb
test
or
sub
es
cltd
mov
arpl
mov
jae
or
adc
jnp
or
push
xchg
mov
lret
sbb
in
ja
hlt
or
dec
sbb
or
repz
jns
pop
stc
mov
ja
in
repnz
andb
dec
test
repz
aad
lret
ja
out
pusha
jg
hlt
push
xchg
std
fwait
sub
dec
enter
mov
pop
dec
and
das
or
lea
rcrl
sahf
pushf
fdivs
aaa
mov
or
mov
mov
mov
out
inc
sub
insl
popa
add
repnz
jl
sbb
mov
push
xor
mov
pop
xor
insb
popf
dec
xor
and
pop
hlt
xchg
xor
adc
aas
push
add
in
mov
jb
mov
repz
adc
jno
xor
rolb
ffree
sub
pop
arpl
push
cmp
sarl
push
mov
pop
mov
dec
jmp
pop
addl
xchg
addr16
enter
xor
scas
xor
add
jecxz
into
repz
push
push
das
loopne
and
cli
icebp
xlat
or
out
pusha
sbb
mov
lret
xchg
dec
sub
loope
js
xchg
mov
mov
pop
dec
and
dec
mov
movsl
js
daa
jae
jmp
xchg
and
aam
cli
sub
adc
daa
daa
pop
add
jno
ljmp
aaa
jo
ds
jmp
and
mov
push
ficompl
inc
rcrl
sbb
or
add
sub
push
test
xor
in
pop
push
push
loope
sbb
out
mov
cmp
loope
pop
mov
rcl
in
sub
push
rcll
push
adc
mov
out
imulb
jge
out
add
int
and
inc
adc
xor
mov
vpcmpgtd
out
fists
or
xchg
xchg
test
inc
out
mov
cmp
push
push
push
lock
jns
call
push
xchg
lcall
jp
pop
mov
cmp
push
fcoml
pop
stos
loopne
sub
in
cmp
mov
mov
xchg
bswap
jecxz
jle
pop
das
sarl
negb
je
mov
sub
movl
or
sub
sub
adc
jbe
lret
shll
dec
inc
mov
jp
add
fs
jge
fldenv
xor
mov
ret
jl
clc
dec
inc
rclb
rcrb
sbb
and
push
outsl
dec
mov
hlt
shlb
mov
or
imul
and
pop
cmp
out
jp
call
inc
add
inc
jns
and
ret
clc
popf
adc
and
mov
dec
lds
xchg
xchg
std
clc
shl
test
in
sub
mov
stos
stos
push
sub
cltd
xlat
cmp
inc
cli
repz
mov
arpl
mov
pop
out
ficoms
jge
aas
mov
js
xchg
int
sbb
sbb
inc
jne
fidivs
in
loop
dec
orb
sar
es
dec
mov
mov
mov
aam
dec
jbe
test
lahf
adc
pop
dec
clc
xchg
ret
rorb
int
jno
daa
xchg
add
xor
pop
loope
pop
or
push
sbb
sub
cmpsl
rolb
repz
fists
test
icebp
es
push
and
aas
mov
dec
push
sbb
icebp
lock
jns
cs
call
mov
and
xor
push
pusha
insb
mov
mov
lret
jle
sbb
mov
leave
lahf
mov
arpl
and
jo
add
sbb
iret
jg
clc
pop
push
add
pop
jbe
push
leave
jle
cmp
and
fs
dec
sahf
adcl
lret
xchg
cmpsb
xchg
mov
mov
cmp
pop
iret
pop
movsl
dec
pop
jl
jge
hlt
add
mov
rep
jle
push
cltd
jmp
sub
ret
and
pop
addr16
inc
call
lahf
pop
add
xor
daa
mov
arpl
adc
nop
mov
dec
in
ret
mov
adc
repz
add
imul
std
pop
roll
or
leave
lahf
pushf
test
mov
push
pop
and
fcoms
out
mov
and
adc
pop
xchg
repnz
pop
jns
imul
out
sub
imul
out
and
into
xchg
sub
bound
and
inc
js
pop
inc
movsl
pop
jnp
sbb
mov
xchg
movsl
pop
jbe
sbb
add
out
lret
mov
scas
pop
mov
lods
icebp
dec
cwtl
lds
outsl
push
dec
sbb
mov
test
mov
dec
inc
bound
rorl
sbb
cmp
pop
inc
sbb
mov
leave
cmp
add
in
in
push
mov
mov
arpl
into
aad
bound
dec
pusha
idiv
mov
mov
jbe
or
idivb
mov
mov
ss
scas
cmpsb
push
xchg
ja
push
es
jle
push
int
in
jmp
les
pop
jo
sbb
dec
lock
add
or
ja
popf
sbb
jbe
xchg
sub
shlb
add
xchg
ljmp
cli
sbb
loopne
xor
push
mov
movsl
mov
fsub
shrb
mov
push
push
lret
xor
pop
jbe
mov
outsl
std
nop
inc
inc
mov
add
scas
push
fcomps
notb
add
sbb
out
mov
adc
femms
ret
cltd
xor
sub
aas
orb
dec
mov
test
aaa
pushf
jg
fdivr
int3
or
lds
fwait
ds
mov
loope
loope
push
cmp
call
mov
add
jae
scas
outsl
divl
cmpsl
and
inc
push
aas
pop
jge
adc
sub
and
sub
enter
ds
sahf
push
stos
cs
or
pop
out
jp
stos
insl
stos
mov
mov
xchg
cmpsl
or
js
jp
mov
test
data16
or
cmpsl
scas
js
push
jg
cltd
int
mov
pusha
je
jmp
imul
fwait
xor
iret
mov
rcrl
lret
lods
jl
mov
lods
cmp
cmp
push
pop
in
cmp
sbbb
inc
jae
xor
add
orl
fs
and
hlt
or
sub
lret
into
iret
fwait
xchg
dec
mov
jmp
or
or
fistl
flds
jns
xorl
leave
imul
add
adc
inc
jg
insb
inc
shlb
and
adc
adcl
dec
push
push
xchg
pop
insl
jns
xor
in
test
push
lods
fadd
adc
inc
pop
push
xchg
loopne
into
cs
push
in
fcmovnbe
inc
sahf
push
adc
or
inc
es
push
clc
lock
adc
dec
sbb
mov
sbb
dec
cmp
cltd
pop
dec
movsl
cmp
aas
adc
mov
inc
dec
ret
icebp
enter
mov
nop
add
adc
and
xor
ret
xor
add
adc
inc
mov
inc
mov
jb
add
adc
and
xor
ret
xor
add
adc
inc
mov
inc
mov
jb
add
adc
and
xor
ret
xor
add
adc
inc
mov
inc
mov
jb
add
adc
and
xor
ret
lcall
sbb
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
rorl
lods
mov
mov
cmp
cmp
sub
pop
dec
dec
pop
jl
insb
jnp
mov
fmul
int3
jmp
orl
adc
sub
pop
daa
sub
imul
or
cmp
test
shr
adc
sbb
pusha
cmp
dec
pop
jl
adc
add
lods
sar
ret
fstpt
clc
pusha
out
jo
call
cmpsl
inc
xchg
or
loopne
and
fcomp
adc
xor
jecxz
icebp
cwtl
jg
in
ds
pop
xchg
std
imul
int3
mov
push
ret
mov
scas
pop
pop
repz
ret
jb
imul
xor
fxch
hlt
mov
sub
in
scas
rcr
rorl
movsl
imul
lret
inc
sti
insb
and
push
mov
hlt
pop
push
ret
aam
aas
scas
sbb
imul
sbb
mov
inc
mov
xor
jns
adc
dec
cmp
dec
dec
or
imul
mov
fmul
mov
cld
jmp
sti
out
or
cmp
push
pop
jl
or
out
cli
stos
ret
scas
mov
scas
jge
dec
sbb
dec
xor
adc
xor
sti
into
addr16
nop
sbbb
pop
js
pop
das
and
sub
ror
fldln2
ficomps
jmp
sti
sbb
or
cmp
sub
pop
dec
dec
pop
jl
insb
jnp
mov
fmul
int3
jmp
sti
sbb
or
cmp
sub
pop
dec
dec
pop
jl
insb
jnp
mov
adc
repz
mov
mov
in
add
cmp
pop
add
push
pusha
sbb
dec
mov
jnp
inc
sbb
icebp
adc
dec
fwait
cmp
insl
or
outsb
adc
fnstcw
repz
stos
into
ret
mov
rol
data16
out
cmp
in
cmp
fsubrp
push
fstpl
cli
adcl
xor
xor
add
aaa
fisubl
sti
push
push
dec
rcrb
call
adc
fidivrl
xchg
aad
pop
out
cwtl
push
mov
push
cmp
sahf
cmp
inc
call
and
jmp
cwtl
shlb
shr
or
xor
jns
sbb
sub
aas
push
or
sahf
adc
aad
adc
pop
mov
hlt
jl
xor
sbb
cwtl
mov
outsb
shll
fiadds
out
mov
test
push
sub
xor
popa
dec
xlat
std
mov
gs
pop
sti
popa
sahf
test
cld
inc
sbb
bnd
orb
and
mov
jp
testb
inc
sub
mov
lea
aaa
lds
shrl
jp
int
int
add
or
loopne
ret
ljmp
pop
or
mov
int
jb
push
cmpsb
xchg
vmulpd
std
jns
cmp
out
sub
lods
clc
aas
xor
push
inc
cli
loopne
xchg
jmp
jg
std
dec
sub
popf
pop
mov
and
stos
jb
scas
mov
add
je
push
lock
push
push
inc
fstl
lret
mov
mov
ret
mov
cmp
add
jbe
add
aaa
pop
pop
int3
clc
mov
clc
scas
inc
push
data16
push
xchg
mov
mov
test
adc
test
add
jae
icebp
test
xlat
loope
pusha
xchg
xchg
rcll
mov
dec
push
aad
icebp
dec
data16
xchg
pop
cmp
mov
iret
mov
sub
add
mov
xchg
in
imul
mov
pop
std
repz
adc
dec
into
fcom
sub
or
stos
sarl
stc
in
ja
rorb
mov
mov
imul
stos
mov
ret
pop
mov
into
js
xchg
add
xor
pop
int3
sub
adc
sbbb
ljmp
and
dec
daa
ret
pop
test
add
in
inc
mov
sub
jo
dec
xchg
fiadds
mov
test
and
pop
adc
loopne
fistpll
imul
mov
aaa
lcall
cld
dec
fmul
xchg
jge
loopne
ficoms
frstor
push
pusha
push
es
gs
push
sahf
in
cmp
pusha
popf
test
adc
cmp
incl
adc
clc
and
sub
mov
cmp
icebp
clc
daa
imul
pop
icebp
sub
ror
push
or
test
je
lret
xor
xor
push
pop
movsl
adc
daa
mov
fnstcw
test
call
mov
in
and
mov
push
fs
xchg
mov
scas
stc
adc
sub
adc
cmp
jb
lock
test
sbb
sub
push
shl
sbb
popa
adc
mov
jne
mov
mov
movsl
lcall
ret
ljmp
dec
es
out
pop
dec
ljmp
outsb
pusha
lds
cs
rclb
sub
mov
push
adc
xor
jle
mov
sub
fmuls
add
push
sub
mov
addr16
mov
mov
pop
and
or
test
push
push
inc
push
aas
jno
inc
aam
or
stos
cmp
jge
xor
imul
xchg
pop
addr16
inc
pop
stos
call
and
test
add
cs
xor
sbb
sub
cmpsb
adc
lahf
xor
or
xorb
xor
inc
cld
mov
mov
clc
div
daa
incb
loopne
call
sub
shl
icebp
sahf
pop
aam
mov
scas
adc
jnp
les
push
clc
in
jo
test
mov
in
and
jo
lcall
mov
enter
cmpsl
or
adc
cmp
jecxz
or
sbbl
gs
or
dec
and
mov
es
xchg
insl
mov
dec
mov
add
jmp
pop
test
adc
dec
rclb
jb
fcoms
daa
out
mov
mov
inc
je
fldt
stos
sti
into
inc
stos
leave
insb
mov
dec
sbb
inc
mov
pop
xchg
jecxz
popf
xchg
lods
arpl
idiv
xorb
push
js
rorl
int3
daa
lret
mov
js
cli
imul
or
or
or
mov
pop
xchg
pop
push
sbb
cli
mov
push
sub
jp
cmpsb
mov
daa
adc
shlb
xchg
sbb
sbb
and
movsl
or
sbb
popf
outsl
dec
jg
pop
xor
xor
jne
dec
xor
call
lock
les
pop
div
push
mov
fisttpll
sbb
cmpsb
sbb
xchg
stc
sub
test
pop
push
pmaxsw
inc
mov
or
fistpll
rcll
cmpsb
cmp
xlat
in
pop
into
jp
scas
dec
push
stos
in
jge
rorb
jg
loop
xor
mov
add
daa
pop
inc
dec
stos
mov
or
cmp
es
add
sarb
or
add
adc
and
faddl
xchg
xlat
fldenv
repz
cwtl
xchg
mov
insl
int
sti
movsw
cwtl
sbb
movsl
outsb
stos
aad
dec
ljmp
mov
sbb
sbbb
mov
jmp
fisttps
and
shlb
ja
xchg
mov
cmp
nop
inc
ret
cli
lds
sbb
xor
cltd
shll
idivb
mov
arpl
clc
enter
dec
jb
test
xor
into
pop
test
in
fimuls
xchg
idiv
push
lcall
add
sbb
loope
add
out
into
push
test
add
cmp
in
repz
jb
popa
dec
push
mov
out
repnz
mov
cmp
inc
cmp
jbe
iret
jb
popf
pop
mov
bound
mov
or
imul
rorb
or
cmp
mov
stc
fidivs
dec
adc
shrl
jg
cmpsl
pop
das
xchg
cmp
cwtl
aad
pop
mov
push
add
icebp
adc
mov
mov
mov
xchg
pop
into
adc
fnsave
movnti
pop
inc
ljmp
gs
and
stc
inc
bound
jno
shlb
rcr
or
push
in
jae
inc
inc
add
mov
fldpi
jmp
fildl
pop
sahf
lock
jmp
cmp
ds
and
das
xchg
leave
adc
dec
in
jns
sbbb
aam
vpandn
xor
jae
or
ja
cmc
lods
out
lods
call
mov
loop
cmp
cs
stos
cmp
push
cmpsb
rcll
sub
rcr
out
stc
pop
cmpsb
cwtl
jg
loop
lret
scas
mov
shlb
or
loope
and
cmpl
dec
lods
or
repz
mov
dec
lret
dec
addr16
aaa
fstpt
jae
and
or
leave
fdivrp
sub
fcompl
loopne
push
add
sahf
popf
push
fistpl
sub
out
jecxz
dec
dec
cltd
pop
lret
xchg
mov
adc
inc
lret
push
inc
and
in
cs
xor
jmp
mov
test
mov
cmp
xchg
mov
mov
addb
lea
fucomi
int3
popa
js
sbb
loopne
mov
dec
shrl
scas
sub
mov
cmp
push
inc
ljmp
addr16
aad
test
jmp
or
clc
mov
mov
xor
jno
add
pop
cltd
cmpsl
inc
mov
adcb
mov
stos
call
dec
out
out
aam
adc
ret
out
sbb
add
dec
and
lret
sub
loope
mov
pushf
jg
shlb
jb
mov
movsb
mov
aaa
int
jne
test
aam
scas
pop
and
xor
add
xorl
jmp
inc
sub
mull
sub
arpl
inc
and
test
or
clc
add
lret
pop
addr16
jb
cs
xchg
mov
scas
mov
push
in
cmpsb
ret
outsl
sub
shr
test
mov
jbe
mov
sbbl
sbb
dec
js
rcrb
mov
int3
mov
sar
test
mov
int3
fbld
or
mov
jmp
daa
inc
and
ds
jg
iret
fld
rcrb
loope
scas
cld
scas
nop
das
outsb
lret
xchg
add
stc
mov
fldl
add
push
mov
jmp
sbbb
jge
add
pop
inc
cmp
cmpsl
pop
mov
leave
loope
cmc
dec
mov
jmp
adc
idivl
xor
icebp
mov
jae
call
popa
jmp
cmp
sbb
jp
adc
cmpsb
out
pop
pop
stos
mov
ficoml
jns
push
lea
dec
ret
push
xchg
push
popa
pop
mov
movsb
aad
les
ffreep
dec
fs
sbb
mov
pop
xchg
jmp
hlt
mov
cwtl
inc
mov
and
mov
stos
sbb
xor
pop
pop
or
xor
jle
jmp
dec
ljmp
movsl
or
mov
mov
push
rcrl
or
push
cmp
mov
mov
xrelease
pop
das
adc
fs
clc
fstpl
in
jnp
test
ljmp
cld
movsl
jo,pt
push
pop
and
imul
jns
adc
mov
ds
addr16
scas
out
gs
cwtl
inc
hlt
outsb
pop
repz
loopne
pmaddwd
jecxz
scas
fwait
mov
fs
fstps
popf
daa
inc
out
popa
fsubp
mov
fstpt
lds
sbb
aad
push
pop
adc
xchg
dec
jl
jmp
in
adc
leave
lea
sub
add
adcb
or
out
stc
mov
mov
fldcw
lods
stos
xchg
xor
popf
push
jo
sbbl
inc
aad
cmpl
push
xchg
out
or
jns
cmp
in
mov
fnstcw
ss
popf
sti
rep
orb
cmc
sbb
mov
and
xchg
mov
cli
cmc
outsl
icebp
dec
call
mov
call
xor
cmp
xchg
dec
das
pusha
xchg
in
xchg
xor
adc
push
lods
pop
cli
or
sahf
jae
push
insb
in
lods
inc
cltd
xor
sbb
int
rcrl
lahf
bound
push
jmp
outsl
mov
dec
int
je
pop
pop
fcoml
fistpll
shll
push
jae
call
stc
incl
adc
movsl
and
mov
hlt
cs
jecxz
inc
aaa
push
stc
popa
shl
jg
pushf
sti
mov
mov
mov
inc
stc
cmp
cmpsl
pop
mov
cld
sub
mov
pop
fnstcw
pop
ljmp
pop
test
int
fdivs
jecxz
add
fists
mov
jbe
xor
mov
jge
sub
lods
mov
cld
fs
shrb
into
jle
daa
sub
cmpsb
mov
test
cwtl
fs
jl
jb
and
sbb
pushf
cmpsb
or
or
or
add
pop
fidivs
sub
ds
jle
arpl
loope
jg
mov
aam
and
jae
pop
pop
pop
pop
sarb
mov
pop
lock
bound
subl
sbb
adc
mov
lfs
roll
xorl
jo
orb
fwait
adc
divb
test
fcmovbe
aam
sbb
orb
inc
or
rolb
sbb
popa
out
je
aas
pop
pop
sbb
cmp
lahf
loopne
enter
pop
mov
sbb
shll
add
adc
mov
stc
pop
cli
sub
lret
mov
cmpsb
and
out
loop
out
jg
pop
mov
rep
stos
xchg
ret
testb
or
sahf
stos
inc
mov
and
mov
aad
mov
add
dec
call
or
loop
adc
jmp
orb
xchg
lea
cmp
shl
rorb
push
je
cwtl
sub
xlat
or
popf
ror
fisubrl
cmc
das
add
rorb
cmp
add
pop
pop
pop
or
sti
sbb
mov
push
repnz
xchg
xor
push
cmp
sbb
sahf
dec
icebp
dec
pop
test
nop
fwait
mov
add
cltd
fs
imul
lds
and
pushf
into
nop
lea
out
jp
insl
in
mov
aam
dec
pop
cmpsb
xchg
cltd
cmp
sub
push
mov
add
ja
jae
sub
push
fnstsw
enter
popa
push
test
dec
jnp
mov
adc
ret
sahf
xchg
mov
lods
lods
jmp
pop
and
add
insb
jl
push
ds
iret
pop
in
inc
les
cmp
mov
push
std
push
mov
pop
outsb
mov
sub
ss
std
pop
gs
push
mov
testl
add
or
testl
ja
push
sub
imul
mov
jns
insb
out
lret
xor
clc
ja
sbb
pop
cld
xchg
mov
xchg
ds
popf
scas
jne
push
sbb
orb
and
div
mov
aad
mov
mov
sahf
xchg
mov
mov
dec
je
mov
adc
or
push
xchg
stos
addr16
testl
xlat
inc
mov
xor
sbb
pop
jnp
push
repnz
aaa
stc
and
xlat
loop
mov
movsl
clc
xchg
ds
add
mov
add
dec
insl
mov
sub
lahf
xchg
jmp
add
cld
mov
hlt
sbb
das
mov
aam
jnp
jmp
xor
sub
out
sti
xlat
ljmp
sbb
jae
jge
sbb
movsb
fs
inc
or
jmp
mov
aad
bound
adc
xchg
cli
sub
add
dec
cmpsl
fcom
mov
outsb
sbb
mov
jnp
push
sbb
push
in
hlt
sub
sub
xchg
add
notb
and
mov
and
pusha
add
popa
into
hlt
mov
inc
mov
cli
dec
and
in
mov
stc
mov
push
pop
les
push
mov
test
test
aad
fstl
mov
pop
mov
out
lds
sbb
jns
lret
lret
push
xor
push
xchg
enter
inc
inc
cli
scas
cli
outsl
clc
sarl
sahf
hlt
aas
je
adc
fcoms
and
mov
loop
cmc
aas
or
adc
sub
mov
and
repnz
mov
xor
pop
adc
lds
inc
out
out
jns
xchg
rorb
push
bound
pop
inc
les
jae
test
in
in
jnp
mov
sbbl
mov
adc
sub
jo
adc
lods
mov
fstp
cwtl
popf
test
idiv
mov
bound
or
xor
mov
inc
jmp
popf
movl
add
out
pop
scas
roll
fldl
jmp
cmp
int3
stos
cmp
jae
mov
mov
sub
pop
std
push
or
mov
test
adcl
mov
adc
sbb
adc
push
test
sbb
in
mov
jo
cmp
jbe
cmp
in
push
or
fisttpll
test
ljmp
ror
orl
movsl
outsb
cmpsb
or
push
cmp
les
into
adc
cmp
pop
jno
and
mov
mov
mov
outsb
lret
add
push
loopne
pop
loop
out
movsl
loop
pusha
pop
mov
or
and
push
adc
hlt
das
pushl
jecxz
or
mov
jmp
mov
push
rcrb
adc
cli
xchg
iret
cmpsl
xor
scas
jl
arpl
stc
out
xchg
dec
pop
stos
cmp
loope
inc
fistpl
push
push
jecxz
imul
leave
lds
stos
xlat
inc
mov
repnz
sbb
mov
icebp
xor
sbb
dec
lods
shl
cwtl
mov
mov
pop
rol
mov
or
adc
jecxz
xor
adc
or
mov
pop
lods
shlb
adc
sub
adc
test
fcmovu
inc
outsb
xor
add
repz
push
lock
out
in
call
mov
mov
dec
pop
sub
pop
pop
loopne
jecxz
fldl
inc
jno
mov
mov
repz
lret
push
adc
jbe
arpl
pop
mov
movsb
push
cld
pop
pop
push
sub
test
mov
incl
fwait
loopne
lret
mov
xor
lds
dec
push
inc
ret
xchg
push
pop
rolb
popf
shrb
push
pop
dec
les
mov
stos
and
das
xor
lret
jge
pusha
or
loop
cwtl
hlt
mov
loop
xor
cltd
or
rclb
xorl
jg
lock
outsl
or
mov
shrl
out
cld
clc
out
cmp
sub
call
xlat
stc
imul
ret
mov
jmp
xor
popa
orl
inc
or
pop
mov
ret
mov
xor
enterw
dec
jmp
dec
aaa
mov
mov
fsubrs
sbb
xlat
stc
mov
dec
push
sub
add
dec
and
jno
test
jns
pop
sti
test
lods
call
sub
ret
addr16
rorl
ret
xlat
gs
movsl
add
popa
popa
clc
xchg
pop
cwtl
out
pop
and
pop
fcomip
clc
mov
stc
sbb
lods
pop
push
push
ljmp
leave
mov
inc
mov
stc
mov
in
in
push
sbb
mov
mov
sub
inc
stos
clc
xlat
lcall
push
fwait
mov
js
dec
test
push
sub
dec
push
mov
jo
lret
loope
aas
out
rcll
lcall
dec
inc
dec
js
mov
lret
arpl
and
in
sbb
movsb
arpl
jp
mov
out
lret
xchg
xorps
inc
xchg
loopne
stos
test
sahf
out
mov
sub
push
dec
jns
insl
out
pop
shl
cmc
or
mov
hlt
pop
adc
ficomps
and
xchg
push
sub
inc
push
sub
inc
and
repz
shll
aam
ret
leave
int3
sbb
inc
jbe
add
mov
pop
mov
inc
xor
push
ret
jmp
jbe
pop
pop
xchg
push
nop
les
pop
sub
js
xlat
sbb
shlb
cmp
mov
sub
cld
xchg
adc
xchg
xchg
push
cwtl
jmp
pusha
adc
xchg
adc
ljmp
add
mov
test
insb
dec
scas
shlb
addl
lahf
nop
inc
sub
scas
sbb
rorl
cwtl
push
les
adc
sbb
inc
sbb
xchg
lds
cmp
ja
jge
xchg
test
mov
lcall
cmp
or
js
push
xor
dec
xchg
mov
or
subb
mov
hlt
add
adc
out
xchg
jecxz
es
jbe
dec
test
xor
adc
repnz
loope
insl
sub
cmp
popa
out
push
mov
add
lret
pop
xchg
lea
daa
out
cmp
mov
jecxz
xchg
mov
iret
lret
mov
jne,pt
aas
pop
clc
mov
pop
lahf
loopne
or
fistps
sbb
loop
repz
push
cmp
inc
xor
mov
fs
fs
shlb
sti
add
xor
int3
shrl
test
in
js
je
xchg
pop
lahf
into
outsl
mov
lods
or
stc
imulb
out
das
jp
fcom
cli
ret
out
test
mov
scas
insb
mov
aaa
daa
insb
xor
add
div
jns
mov
jb
shl
jb
mov
mov
or
cmc
sti
stos
out
add
fistpll
lods
pop
mov
data16
test
sti
jbe
sbb
xchg
pop
stos
mov
fmul
int3
jmp
sti
sbb
or
cmp
sub
pop
dec
dec
pop
jl
insb
jnp
mov
fmul
int3
jmp
sti
sbb
or
cmp
sub
pop
dec
dec
pop
jl
insb
jnp
mov
mov
cld
jmp
sti
sbb
or
xor
dec
push
pop
js
pop
jnp
mov
mov
cld
jmp
sti
sbb
repz
sub
sub
les
fstps
lea
std
ds
inc
mov
sbb
scas
dec
mov
loopne
cmp
push
int
std
ds
dec
popf
pop
lea
jle
mov
dec
fidivl
insl
into
xor
or
push
jnp
or
addr16
dec
lods
pop
lds
jle
mov
outsb
fstpl
pop
cmpsb
dec
mov
dec
inc
cltd
push
mov
dec
mov
xchg
pop
je
test
inc
mov
aas
in
xchg
into
add
mov
push
fisttpl
fiaddl
gs
mov
mov
cmp
out
mov
pusha
divb
mov
adc
je
dec
nop
testb
aam
outsb
out
push
icebp
mov
ds
mov
mov
mov
mov
xor
mov
out
ret
icebp
or
inc
add
adc
scas
push
mov
jg
sahf
jle
sbb
ja
sbb
outsb
jmp
icebp
and
xor
fidivrs
xchg
int
lods
fimuls
hlt
sbb
bnd
dec
out
rcll
in
mov
in
dec
popf
pop
lea
jle
mov
in
jg
push
into
and
jecxz
and
ja
dec
xchg
pop
andl
enter
push
lcall
pop
mov
stos
dec
stos
inc
or
mov
or
xor
outsb
aam
sahf
jmp
pushf
cmp
das
sti
pop
stos
push
mov
scas
jp
inc
xchg
aas
orl
jle
mov
dec
scas
jge
insl
into
sbb
sub
cs
ds
dec
popf
pop
lea
jle
mov
dec
scas
jge
insl
into
sbb
sub
xchg
sbbb
xchg
cli
repnz
adc
xchg
out
jmp
fsubl
adc
push
sbb
mov
dec
loop
jmp
sbb
sti
and
jl
mov
adc
ss
xchg
fisttps
sub
icebp
aas
jmp
pop
sbb
jae
xchg
push
test
addl
pop
and
pop
mov
mov
out
jbe
sub
dec
pushl
mov
into
dec
mov
leave
arpl
pop
pop
movsb
sahf
call
push
in
pop
fsub
lods
xor
es
or
inc
pop
jg
popa
insb
sahf
outsl
sbb
lret
int3
and
push
cmpb
stc
insl
jne
inc
mov
cld
push
xor
out
pusha
sub
inc
and
add
or
inc
xchg
cmp
and
pop
test
insb
fiaddl
fwait
notl
mov
fisubrs
out
xor
rcll
aad
fwait
xor
sbb
addr16
aam
ja
mov
sub
ret
add
out
in
loope
sbb
mov
xor
sub
rolb
pop
rolb
or
mov
cli
xor
and
lock
xor
push
sub
mov
add
cli
call
push
and
jmp
push
mov
fisttps
xor
push
and
and
jnp
ljmp
ljmp
sahf
push
mov
add
pop
fnstcw
rclb
adc
stos
mov
in
or
adc
test
ljmp
sub
fucom
push
int
scas
push
sbb
dec
inc
jbe
out
sub
dec
movsb
jg
dec
lret
xchg
fldcw
sub
push
jns
mov
aam
pushf
mov
dec
xchg
or
xor
jp
adc
loope
inc
inc
mov
je
mov
push
jbe
or
push
push
cmp
aam
in
cmp
and
nop
dec
insb
in
sub
cmp
scas
shrl
out
dec
and
push
mov
loop
sbb
push
mov
mov
jp
dec
pushf
sahf
sub
scas
add
stos
imul
mov
les
cmpsl
dec
stos
jo
cwtl
fcmovb
js
dec
testl
dec
lcall
lret
cmpsl
pop
js
mov
dec
bound
dec
fucomi
repz
pop
ljmp
dec
mov
cli
loope
xchg
cmp
ret
push
inc
sbb
mov
popa
and
sub
loope
mov
inc
and
dec
jne
jnp
jmp
or
pop
fisubrs
inc
or
xchg
inc
lret
or
mov
jecxz
jle
les
add
in
loop
daa
cmp
jns
rcr
scas
and
scas
cli
insb
lret
into
jp
add
sbbl
aad
nop
inc
int
rorl
mov
ss
jp
sub
mov
out
adc
stos
inc
xor
clc
out
shll
xor
in
test
nop
test
xchg
jne
xchg
push
in
pop
shr
push
iret
imul
push
cmpsl
push
xchg
and
mov
or
scas
pushf
out
outsl
adc
pop
xor
pop
sti
mov
xchg
iret
push
aad
int3
js
test
mov
cli
inc
cli
jo
adc
es
mov
add
pop
ss
mov
loopne
adc
xchg
cmp
inc
push
ficompl
inc
les
insl
jle
outsl
mov
cmpsb
sahf
addb
jb
scas
inc
imul
add
inc
sub
sbb
add
cmpsl
out
sub
pop
cli
xor
aaa
jp
popf
inc
xor
lret
adc
movsl
in
int3
jb
push
and
xlat
mov
jne
scas
cmp
pop
jbe
outsl
mov
xorb
inc
inc
dec
mov
mov
in
pop
in
iret
add
sbb
push
push
or
mov
inc
xor
icebp
jbe
mov
xchg
xchg
dec
mov
dec
js
mov
mov
pushf
ljmp
in
filds
xchg
xchg
mul
pop
call
xchg
inc
fisubrs
push
cmp
daa
mov
cltd
ds
insb
lea
jo
movsb
stos
icebp
mov
jle
out
cltd
inc
in
mov
push
stos
lds
in
push
cmp
mov
dec
add
sbb
movsl
dec
bound
cmp
sub
adc
jnp
in
cltd
fs
sub
iret
lcall
cmp
xchg
jnp
adc
stos
idivb
insl
aam
sti
movsb
ljmp
xchg
pop
lret
or
out
xchg
cwtl
or
fidivl
cli
mov
pop
out
push
sbb
cli
pop
jno
mov
adc
adc
mov
lock
mov
or
roll
pop
jg
stc
push
stos
mov
movsl
addl
pop
scas
sub
mov
cmp
sub
rolb
dec
icebp
daa
lret
xchg
cwtl
and
adc
and
xor
sub
inc
adc
push
ret
out
in
clc
fnstenv
aas
cmp
bound
pop
adc
xchg
sub
sbb
clc
scas
mov
mov
or
push
jmp
divl
or
out
xor
inc
mov
jbe
jno
in
jge
jp
sbb
mov
xchg
inc
push
mov
ds
stc
add
ss
inc
inc
imul
dec
stos
scas
dec
hlt
xor
mov
outsb
add
movsb
outsb
insb
addl
rorl
mov
dec
pop
aam
fists
inc
push
lret
push
jge
sbb
jb
fildl
test
hlt
fwait
add
jl
ja
push
inc
mov
jnp
inc
add
aas
sbb
ror
ljmp
fbld
insl
into
push
jns
jp
test
inc
test
inc
inc
aaa
mov
imul
sbb
stc
test
jp
inc
stc
in
mov
test
test
push
in
cmpsl
cmp
and
xchg
aas
inc
jo
jne
sub
mov
cld
push
mov
mov
push
std
mov
cmpb
lahf
pop
inc
mov
adc
pop
into
jle
stos
dec
jmp
inc
rcrb
and
inc
rcrb
test
mov
dec
pop
int3
lret
pushl
and
movsb
mov
inc
jae
add
push
js
sti
cmp
xchg
push
std
push
mov
jno
pushf
mov
adc
mov
fdivrp
in
mov
and
xchg
jne
cltd
cmpsl
lock
push
jno
out
enter
inc
mov
cltd
mov
int
test
pusha
pop
scas
out
scas
mov
lods
repnz
dec
mov
mov
mov
cmp
push
mov
shlb
movsb
bound
aaa
ss
div
aad
cs
push
les
or
cmpsl
mov
mov
std
mov
inc
insb
cltd
push
imul
and
sub
cld
sbb
fidivrl
in
push
sbb
testb
mov
loopne
pop
xchg
adc
sbb
mov
rep
cltd
mov
sbb
sarl
adcb
es
arpl
cmp
leave
or
xchg
aad
sbb
jno
push
cmpsl
pop
jo
repnz
mov
test
imul
and
pop
push
rorb
rorl
in
cmc
daa
outsb
xchg
shll
clc
pop
and
jmp
inc
out
sub
cmp
mov
nop
dec
fnstcw
xchg
sbb
int3
jl
sti
inc
iret
jge
sub
int
dec
test
je
lds
or
pop
andb
push
mov
xchg
mov
je
dec
cli
shl
mov
imul
sbb
stos
shrl
sbb
mov
pop
mov
aas
shlb
mov
movsl
ret
or
dec
add
xor
ja
ret
bsf
ds
push
xchg
loope
push
lds
xchg
dec
adc
adc
inc
aaa
jae
ds
cmp
sub
mov
adc
mov
pop
cltd
push
cmp
jmp
out
aam
xor
outsb
arpl
pop
test
and
aas
into
sbb
hlt
push
dec
inc
push
imul
cltd
mov
or
andl
popf
jle
and
test
pop
jae
loopne
cmp
sub
cmp
xchg
ret
inc
bound
leave
sbb
jo
aad
fcoms
ljmp
fs
push
and
lea
adc
test
aam
sub
xor
and
pop
jge
xchg
orb
mov
cmp
pop
cmpsb
pop
ss
repnz
pop
mov
jl
cmpsl
lods
pop
in
inc
add
or
rcrl
test
shrb
pop
leave
dec
xchg
mov
pop
sbb
or
mov
xor
inc
pop
sub
insl
sbb
inc
xor
mov
mov
loopne
or
and
clc
or
add
aad
mov
lods
cmp
push
inc
dec
pop
inc
pushf
gs
push
xchg
xchg
xorb
imul
and
out
add
mov
pop
xor
cmp
mov
out
lret
das
nop
lods
gs
jnp
xor
xlat
shr
adc
xchg
xor
inc
mov
loop
push
dec
xor
inc
dec
xlat
mov
jge
jmp
test
sahf
mov
fcompl
repnz
rclb
push
add
jb
adc
jecxz
jg
cwtl
ret
push
xchg
pop
sub
dec
xchg
mov
in
loopne
mov
fsubrl
adc
aad
push
mov
jno
ljmp
shll
inc
cmpsb
xorl
loope
rorb
in
xchg
cmc
bound
lret
add
cli
repnz
push
loopne
cmp
and
fs
in
scas
xor
int3
hlt
mov
std
add
and
mov
std
inc
xchg
outsb
mov
sub
lret
xor
lds
dec
push
and
sub
sub
add
adc
mov
mov
push
sbb
push
add
pop
test
in
shl
pusha
push
mov
adc
push
icebp
in
cmp
push
leave
out
in
jb
cmc
lahf
imul
sub
jg
jnp
mov
aas
xor
jne
cmp
movsl
inc
mov
xor
push
push
adc
enter
xchg
sub
sub
clc
cs
and
push
pop
rorl
xor
sub
fmul
xchg
xchg
push
push
add
push
icebp
lea
add
scas
fmulp
push
dec
mov
inc
xor
out
aam
jmp
dec
mov
jl
fldenv
push
movd
lods
cmp
jbe
aaa
ds
cmc
mov
out
add
pop
mov
jnp
sub
xor
in
jmp
mov
sub
loop
inc
sub
call
jo
cli
das
pop
dec
xchg
or
xchg
or
shll
lahf
out
cltd
inc
cmp
inc
sbb
or
adc
fiaddl
out
sar
xchg
into
jnp
xor
es
addr16
andl
sub
nop
mov
iret
aaa
push
insb
repz
inc
jo
fdivs
test
push
xor
aaa
cli
inc
pushf
cmp
push
arpl
push
mov
jno
int
negb
mov
test
fiadds
stos
shlb
lahf
mov
jg
std
cltd
add
fidivs
leave
loop
dec
gs
push
mov
aaa
dec
in
cmp
and
mov
sbb
xor
popf
jns
sarb
xchg
xchg
js
subb
in
sbb
cmp
xor
in
mov
cmp
imul
aas
loopne
pop
mov
sbb
outsl
cmp
sbb
int
ret
out
push
pushf
in
or
mov
aad
jo
mov
aaa
lods
fbstp
cli
mov
adc
jno
mov
bnd
sub
ds
orb
pushf
and
inc
cmp
or
movsl
es
cltd
notrack
pusha
add
jp
cmc
insb
out
clc
jnp
test
les
out
orl
loope
aaa
stos
push
int
and
xchg
arpl
adc
jbe
jbe
data16
gs
mov
jb
cltd
fimull
jnp
and
xor
dec
push
cmp
sub
lret
testl
jbe
stos
into
mov
rol
fidivs
jno
lods
insl
cmp
push
vhaddpd
pop
mov
or
addr16
lock
or
testl
jge
adc
ret
les
sub
iret
push
aaa
pop
js
loop
lcall
push
xor
das
ret
and
sahf
xor
int3
sub
inc
xlat
flds
fistps
mov
nop
in
enter
shll
dec
adc
mov
pop
xchg
pop
lods
push
pop
xchg
pop
inc
sti
pop
cli
je
jo
mov
fcoms
leave
insl
outsl
and
mov
out
xchg
sub
rorb
sub
das
pusha
shll
arpl
cli
insl
jge
xchg
mov
repz
es
daa
and
pusha
jbe
lods
fadds
insb
xor
mov
icebp
test
js
push
add
xlat
aas
pop
ds
imul
jg
sbb
outsl
loop
adc
es
hlt
into
cmp
sbb
push
lret
xchg
push
xor
test
fcmovnb
xorb
shlb
jmp
sub
push
sbb
hlt
shl
cmp
and
addr16
std
sbb
mov
sbb
pop
out
xchg
sar
jno
cmc
jge
div
sbb
xor
sbb
mov
enter
in
mov
xor
mov
out
sbbl
push
xchg
xchg
dec
cmp
cmp
sub
rcr
push
loope
ja
and
mov
or
adc
cmpsb
in
xor
mov
pop
fistl
dec
ja
aad
fs
push
aaa
mov
inc
sub
dec
and
lret
cmp
ja
imul
mov
test
loope
dec
jnp
cmp
fmull
leave
or
pop
insb
jb
pop
push
jo
test
pushf
rolb
bound
ss
cmp
push
push
push
mov
cmp
add
pop
out
sbb
lds
int3
pop
jge
ja
xchg
out
ljmp
push
and
cltd
mov
push
sub
add
mov
sti
pop
stos
mov
mov
fdivr
mov
pop
sub
push
jo
out
test
rcll
cmpsb
out
arpl
dec
inc
inc
repz
mov
stos
sar
shll
movb
push
inc
arpl
ret
mov
ds
ror
mov
pushf
sub
mov
sub
leave
jmp
cmp
sbb
lea
mov
out
and
or
cmpsl
cmpsl
mov
jns
out
or
or
cltd
xchg
sbb
push
movsb
repz
xorl
xor
ds
lret
test
and
adc
mov
fsubl
aad
sub
xor
dec
push
mov
out
or
ja
stos
xchg
push
mov
enter
push
negl
out
sub
ja
cmp
test
mov
cmp
testb
fists
xor
cmp
je
repz
lcall
and
loopne
inc
sbb
push
sub
aaa
je
xor
addb
out
mov
aas
xor
mulb
jl
push
push
or
jge
mov
add
mov
sbb
and
bound
in
add
jg
int
popf
ja
mov
mov
mov
or
out
pop
xchg
pop
fcoml
pushf
pop
add
sbb
rcrb
add
and
lret
mov
and
adc
stos
loopne
insb
xor
psllq
cmp
lret
push
inc
lcall
mov
mov
cmp
mov
push
jnp
pushf
outsb
xor
fisubrl
jno
xlat
cli
sbb
adc
out
xlat
notl
mov
xchg
fdivr
pop
pop
sbbb
scas
scas
mov
test
sbb
andb
sub
or
mov
push
outsb
xchg
cmpsl
aas
enter
idivl
leave
mov
rcll
outsb
mov
into
loopne
mov
dec
pop
loop
fisttpl
shrb
cs
sbb
lock
xor
mov
or
push
push
add
sub
adc
xchg
aaa
pop
test
adc
mov
cmp
aas
aas
scas
ret
xchg
and
xor
scas
push
mov
push
addr16
movl
popa
add
imul
outsb
or
mov
lret
arpl
pop
jnp
pop
jecxz
and
aad
loope
sbbb
imul
and
cmc
sub
outsl
loopne
out
xchg
pmaxsw
stos
lds
add
enter
inc
sbb
pop
nop
cltd
xchg
in
rol
xor
push
stos
xor
out
std
js
dec
jae
incb
sbb
stc
push
shlb
dec
rorb
int
jbe
mov
pop
pop
dec
mov
pop
xlat
repnz
fidivs
push
in
pop
jmp
icebp
addl
cmpsl
or
icebp
lock
movsl
popa
es
xor
ficomps
or
push
pop
mov
aas
sbb
imul
pop
test
cwtl
ss
sbb
pop
out
repnz
xchg
ss
inc
insb
dec
sbb
cmp
xchg
pop
dec
xchg
cmpsl
and
adc
dec
xlat
pushf
les
out
cltd
pop
push
div
repnz
and
nop
dec
movd
push
bound
push
outsl
icebp
fiaddl
sbb
aad
mov
ficomps
push
xor
cld
inc
pusha
sub
cmp
testl
into
rolb
jge
jne
xchg
ljmp
fldcw
xchg
test
or
jo
add
out
stos
dec
loope
lods
mov
call
mov
rcrb
imul
fnstsw
pop
mov
lcall
arpl
adc
out
shrb
leave
fidivs
inc
mov
cli
popa
pop
rcrb
mov
ja
loop
pop
imul
push
sbb
data16
int3
ret
popw
xchg
mov
add
test
and
push
outsb
stos
aas
xchg
ret
xor
and
insb
mov
lcall
loop
adc
jns
addr16
cmp
scas
imul
rcrl
aas
mov
jb
push
dec
pop
inc
outsb
ljmp
mov
fnsave
adc
fdivs
pop
stc
inc
jle
ds
adc
into
adc
add
inc
push
shlb
push
xlat
adc
mov
addr16
les
jae
inc
inc
fwait
xchg
xchg
mov
mov
adc
sub
in
fnstenv
push
sub
jnp
sbb
movb
jne
es
loope
sar
out
or
add
iret
out
push
rorl
fs
fcmove
fildl
xchg
mov
jle
mov
adc
pop
add
push
iret
aaa
daa
mov
stc
mov
lret
subb
inc
movsb
add
aaa
add
mov
sub
mov
mov
inc
hlt
push
or
or
adc
stos
dec
push
ljmp
dec
jge
cmpsl
or
add
ljmp
mov
ret
je
sub
dec
sub
sbb
mov
jne
jp
out
lahf
dec
rcrl
clc
jmp
mov
int3
bound
and
dec
sarl
imul
jno
jmp
test
rolb
arpl
xchg
nop
jecxz
sub
gs
out
lods
cmp
cmp
cmp
xchg
adc
mov
fnstsw
xchg
pop
mov
cmc
mov
xchg
rorb
cli
sti
cmp
add
xor
movsl
xchg
push
xor
push
or
mov
jo
and
lret
ljmp
shlb
mov
jmp
mov
mov
mov
sbb
dec
mov
mov
adc
or
inc
test
ret
call
xchg
xchg
divl
mov
add
and
stc
mov
cmp
cmpsb
sbb
fsubr
jb
call
sub
pop
and
jg
sub
shr
adc
inc
inc
inc
mov
test
fcompl
and
icebp
xchg
repz
cs
xor
sbb
lahf
and
inc
inc
xor
mov
jne
xchg
pop
movsb
aas
scas
sub
out
push
inc
dec
xor
lods
scas
push
jne
fdivr
ds
dec
popf
pop
lea
jle
mov
dec
scas
jge
insl
into
sbb
sub
cs
ds
dec
popf
pop
lea
jle
mov
dec
scas
jge
insl
into
sbb
sub
cs
jmp
outsb
mov
sahf
dec
scas
jge
fs
sbb
or
push
cmp
sub
sbb
lods
dec
popf
pop
lea
jle
mov
mov
jne
inc
add
push
inc
or
aad
popf
xorb
mov
add
or
add
add
add
add
add
add
mov
or
push
add
mov
or
add
add
add
aas
add
adc
loop
or
loope
adc
add
addl
add
add
add
add
add
add
adc
lret
add
lods
add
or
int
sbb
leave
add
add
add
add
adc
int
inc
add
lret
add
add
add
cmp
xor
add
add
add
adc
out
add
add
mov
roll
add
mov
add
add
add
add
add
add
add
pop
add
mov
sahf
add
add
add
add
add
add
add
fiadds
push
add
add
add
add
add
add
adc
rolb
dec
add
add
add
sub
testb
add
add
pop
add
add
add
add
dec
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
cwtl
add
add
adc
mov
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
ret
add
add
sbb
push
add
push
add
add
add
add
loope
mov
add
add
rolb
add
adc
popa
add
add
cwtl
add
add
lock
add
add
add
faddl
adc
addb
add
add
add
add
ret
add
add
add
outsb
add
inc
add
and
add
xor
imul
add
sbb
call
add
roll
out
add
movb
add
add
add
add
add
add
add
add
add
add
rolb
xchg
add
add
xlat
add
je
sahf
add
pushf
add
stos
add
add
add
add
out
add
add
add
add
mov
add
add
add
add
push
add
add
out
add
add
add
add
add
add
add
rolb
addl
add
add
add
add
jg
mov
push
add
add
add
add
add
add
add
pop
add
data16
add
addl
add
add
add
add
add
add
add
add
push
loope
cwtl
add
add
add
add
add
add
add
add
aas
add
add
add
add
add
pusha
add
add
add
or
sub
add
testb
add
mov
add
add
add
add
add
add
add
add
add
add
add
and
mov
add
add
add
add
add
or
push
add
add
add
add
fisubrs
stos
sar
roll
mov
in
sub
fcmovbe
xchg
jl
xchg
inc
mov
rcrb
call
and
or
cmp
es
fs
sub
add
inc
inc
pop
jo
daa
jecxz
or
mov
cmp
out
popf
jle
mov
and
pop
popl
scas
mov
fstpl
lret
outsb
rcrb
dec
jno
movsb
mov
adc
push
xor
push
mov
pop
inc
xor
inc
cmpsb
lea
nop
outsl
in
and
mov
mov
cmpsb
push
std
and
xchg
and
sub
xchg
push
daa
stos
xor
push
mov
jo
pop
cmp
mov
mov
sbb
mov
rcrb
fwait
inc
xchg
lods
push
jnp
sbb
lock
mov
push
sbbl
outsl
mov
outsb
push
adc
les
scas
xchg
adc
push
leave
shrb
cs
add
mov
mov
int3
add
cmc
dec
push
mov
push
imul
repz
ljmp
lods
clc
aas
mov
xchg
fbstp
insb
cmp
lea
stos
fwait
les
lcall
lret
jle
mov
adc
insl
clc
dec
inc
mov
mov
mov
loope
insl
into
mov
pop
sub
outsb
ficomps
in
cmp
cmp
push
pusha
jl
or
pop
lock
xor
push
stc
dec
test
xchg
inc
push
mov
jne
pop
ljmp
daa
mov
add
or
mov
popa
push
mov
sub
out
ja
imul
fiadds
push
jb
jo
ffree
xchg
je
pop
shrl
mov
scas
outsl
mov
fbld
std
mov
adc
das
sbb
pop
stos
dec
cltd
loope
addr16
push
xchg
ja
and
pop
mov
test
icebp
cmpsl
aam
jle
pop
aaa
enter
data16
xchg
cmp
or
push
leave
ret
movsl
shl
jecxz
ja
orl
add
xchg
cld
xor
sub
cmp
ret
out
pop
ret
jb
cmpsl
push
lods
mov
xor
pop
jns
imul
xchg
test
mov
int3
fidivrs
and
cmp
jae
testl
pop
pop
outsl
jno
cmp
cli
ss
mov
pop
inc
pop
or
cmp
cmc
push
aam
xchg
mov
sbb
add
push
rol
ljmp
adc
xor
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
