call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
jo
pusha
cmp
inc
sbb
rolb
and
mov
mov
mov
fidivl
pusha
cmp
inc
sbb
push
push
dec
add
lock
loopne
rorb
mov
fidivl
pusha
and
inc
add
jae
bound
push
add
stos
ret
cltd
mov
movsl
rorl
add
add
outsl
sub
mov
mov
fimull
sub
xor
lahf
mov
add
mov
mov
movsl
dec
push
insl
inc
fidivrl
gs
mov
and
cmp
inc
gs
push
fidivrl
pop
dec
stos
cmc
mov
mov
sub
lret
jo
inc
lds
push
push
ds
add
inc
xor
pop
loopne
mov
lret
in
aad
mov
paddsb
xor
push
call
and
call
sbbb
cwtl
dec
push
mov
fbstp
movsl
shlb
jne
gs
ret
push
enter
cmp
inc
sbb
push
jp
dec
add
stos
loopne
rclb
mov
fistl
outsl
push
jg
push
test
add
mov
ss
loope
cmc
movsl
lock
inc
adc
xor
jne
push
xor
ds
push
lods
out
rcrb
lods
ljmp
outsb
and
jp
dec
add
stos
loopne
rorb
mov
fidivl
pusha
cmp
inc
sbb
push
jp
dec
add
stos
loopne
rorb
mov
fidivl
add
int
aas
sbb
loope
in
test
inc
out
xchg
lods
int
sbb
sub
pusha
dec
sbb
pop
inc
imul
push
push
rorb
jmp
rorl
data16
inc
sub
jnp
fwait
jl
int3
fsubl
cltd
cmp
mov
fsubs
mov
icebp
mov
test
js
xchg
cmp
fwait
or
loop
stos
push
adc
sahf
sub
lods
mov
das
adc
adc
test
insl
xchg
bound
push
or
cmc
ret
xchg
xchg
mov
pop
shll
adc
pop
in
lret
adc
push
es
loopne
mov
and
or
jns
push
out
push
jp
aam
dec
xor
xor
or
xchg
loope
in
sub
mov
repnz
xchg
jmp
das
divb
cld
stc
repnz
add
scas
dec
adc
push
into
arpl
sbb
lock
dec
icebp
cli
out
xor
cmp
push
push
das
std
fstpl
jmp
in
push
outsl
int
stc
push
lahf
jno
add
pop
fsts
orb
dec
mov
cmp
dec
fsubrl
jecxz
test
popf
cli
sbb
lods
mov
xor
lcall
xor
push
shll
sub
cld
or
bnd
and
rcr
mov
sbb
mov
pop
aas
sbb
push
mov
xchg
notb
jns
jo
sbb
dec
mov
lds
xor
lret
jle
and
cmp
cmpsl
divb
mov
mov
push
in
fsubrl
dec
or
sbb
jbe
loop
or
or
and
jg
mov
or
xchg
sub
xchg
jecxz
pop
cmpsl
mov
in
xchg
in
mov
cmp
insb
js
add
jns
jmp
jl
mov
cmpl
out
adc
and
les
adc
mov
les
mov
inc
sbb
xor
pop
xchg
pop
sub
mov
mov
push
push
aas
pop
sbb
rorl
push
or
mov
mov
arpl
dec
sub
int3
lods
imul
add
mov
stos
jne
add
push
add
xchg
push
aad
and
jbe
jge
jl
sti
jnp
cli
repnz
jo
gs
mov
mov
mov
inc
pop
mov
jns
and
mov
mov
jmp
mov
sarb
test
dec
out
std
sbbl
jmp
mov
pop
fsubrs
roll
inc
daa
iret
xor
dec
mov
mov
inc
xchg
bound
push
cmp
imul
push
ja
iret
ds
sub
mov
out
pop
adc
dec
xchg
into
shll
ja
popf
sbb
rorb
aas
and
popf
lock
clc
mov
and
les
into
push
loope
aas
add
notb
cmp
call
stos
aam
ljmp
and
and
xchg
int
stc
jno
sbb
aam
sub
fldl
xchg
pop
push
mov
mov
sbb
inc
nop
add
sub
stc
cwtl
data16
aas
mov
sarl
stos
mov
dec
aas
mov
inc
dec
mov
inc
pop
mov
arpl
cmp
push
sbb
or
aaa
arpl
sub
adc
popf
add
dec
aas
cmpsl
movsb
xchg
add
gs
fists
out
cltd
mov
repnz
inc
je
icebp
mov
pop
inc
iret
fsubr
push
or
std
sbbl
roll
pop
mov
jl
outsl
or
jge
sub
cli
and
lcall
fcoms
and
push
or
in
push
adc
lods
aad
push
dec
mov
add
cmpsl
lcall
or
cli
xchg
mov
push
sub
xor
mov
add
dec
ret
addl
and
or
dec
mov
mov
or
test
pop
out
push
aam
loope
add
in
lea
or
dec
fsts
fstp
sub
fs
mov
jl
dec
jg
xchg
dec
into
add
dec
rorb
adc
mov
dec
aas
xchg
fistps
xchg
lcall
lea
xchg
aas
mov
xor
jbe
faddl
fisttps
lods
mov
mov
mov
push
or
sub
push
adc
or
adc
xchg
jle
xchg
jo
xor
push
jge
dec
or
or
cltd
lret
loop
inc
repz
int
scas
push
fldcw
dec
cmpsl
cmp
adc
jo
int
fwait
add
dec
sahf
mulb
aam
push
je
add
call
mov
jle
lret
jp
sahf
pop
xchg
pop
push
push
test
cmp
and
fs
cli
ret
sub
neg
cli
out
insb
in
jae
cwtl
fcompl
test
mov
loopne
daa
or
adc
mov
xor
insl
rcl
cwtl
jo
cmpsl
fsub
lret
push
idivb
popa
xchg
push
mov
rolb
inc
push
cltd
jns
int3
sti
loope
shrl
divb
push
inc
xchg
iret
and
push
lcall
sub
push
inc
adc
dec
icebp
push
xchg
and
sbb
mov
and
or
iret
fildl
arpl
test
push
sbb
in
das
addl
fidivl
adc
jecxz
andl
mov
stos
push
sbb
inc
xor
mov
dec
icebp
mov
cmp
cli
mov
pushf
jno
sub
xchg
inc
dec
das
pop
shl
jne
jbe
ja
mov
ljmp
pop
stos
fwait
jns
jmp
jb
lret
mov
insl
inc
imul
mov
cmp
cmp
cmp
jbe
out
adc
xchg
xchg
add
lret
mov
push
xchg
iret
shll
xor
sbb
jg
insb
adc
clc
data16
ret
mov
add
fisubs
clc
xor
cmp
add
sub
xchg
mov
cld
xchg
shl
mov
mov
mov
shll
xchg
pusha
jge
inc
sbb
std
int3
mov
gs
in
mov
test
stc
leave
mov
cmpsl
bound
div
out
cmp
mov
fnsave
or
clc
stos
xchg
jb
fs
mov
push
les
pop
xlat
addb
ss
out
das
fcmove
mov
fistpll
inc
imul
movsl
shl
loope
into
sbb
cmc
aas
scas
mov
mov
icebp
loop
push
mov
mov
or
repz
xchg
xor
test
out
sbb
mov
stos
popf
sbb
loopne
cmp
mov
push
pop
fadds
adc
inc
scas
sbb
push
pop
and
out
cmp
add
jl
xor
xlat
mov
cmpsl
hlt
test
pop
push
imul
mov
and
xchg
loop
mov
repz
mov
cmp
push
push
bound
int
pop
insb
aad
mov
lods
mov
lock
sarl
mov
out
push
lods
repz
movsl
or
outsb
lcall
je
in
xchg
add
cmpsb
add
rcrl
daa
pop
inc
sbb
divb
adc
cmp
adc
out
decl
or
sub
jo
pop
push
push
adc
mov
add
lret
xchg
mov
mov
push
outsb
mov
dec
shrl
mov
stc
or
int
testb
adc
sub
scas
mov
lods
pop
out
hlt
pop
lock
dec
fdivl
int3
and
and
mov
mov
adcl
mov
fistl
imul
imul
sbb
mov
mov
out
mov
and
adc
push
mov
mov
ds
out
lahf
into
and
movsl
or
cli
mov
jb
int
fsubrl
lret
push
cld
sub
xchg
or
outsl
pop
mov
ja
popa
sbb
jbe
adc
vmovshdup
fldt
mov
stos
mov
jnp
adc
sub
add
pop
cmp
popf
mov
jl
mov
test
mov
insb
fstps
xor
add
mov
lcall
adc
dec
mov
in
imul
jmp
cmp
or
xor
sbb
scas
mov
gs
sti
mov
cmp
jne
int
sub
rcrl
jb
jns
loop
movhps
and
lea
jno
mov
outsl
mov
xchg
pop
pop
mov
mov
inc
add
cmp
pushf
add
stos
sbb
jnp
xor
cmpl
shlb
leave
cmp
mov
cmpl
outsl
add
mov
or
std
xor
push
fmull
xchg
pop
je
pop
add
cmp
jl
mov
andl
cmp
sub
dec
pcmpgtb
mov
push
mov
shll
pop
inc
mov
push
and
mov
push
lcall
arpl
inc
std
sbb
mov
leave
sub
cmp
fbstp
push
repz
lods
fcmovne
add
lret
imul
add
sub
push
jno
in
inc
inc
test
jg
jnp
aam
cmc
cmp
xor
pop
repz
cmp
test
repnz
ficoml
out
pop
dec
xlat
cmp
xor
sbb
sub
jp
stos
adc
fidivl
call
mov
testl
sti
std
sub
insl
xor
jb
fucomi
mov
ja
shlb
cs
sbb
ja
mov
xor
sbb
sub
into
es
pop
pop
mov
cli
sbb
test
add
out
jns
data16
jnp
push
outsl
pop
inc
mov
inc
mov
inc
jge
mov
rcrb
leave
mov
lds
test
mov
sub
push
mov
mov
cmp
loope
pop
nop
or
jp
pop
pop
pushf
sub
adc
or
push
mov
and
inc
shr
pop
in
pop
rolb
sub
push
out
out
jl
xchg
and
adc
aad
aaa
cmp
mov
hlt
iret
xor
lods
lret
adc
cld
loop
popf
xor
clc
cmp
mov
mov
das
ret
xchg
dec
or
jnp
mov
bound
cs
aad
mov
stc
jp
mov
gs
jo
adc
jl
aaa
adc
push
popa
lea
dec
out
push
jno
iret
rcrl
mov
sub
sub
test
sub
sti
mov
inc
jnp
test
or
mov
lahf
cli
test
cmpsb
sub
sub
xchg
in
and
pop
add
loope
jbe
popf
pop
or
inc
out
sub
lret
xor
call
data16
mov
pop
xor
xchg
inc
icebp
ljmp
lret
ret
fsts
es
stc
xor
flds
movsb
xchg
jne
push
data16
dec
sbb
ret
mov
imul
mov
arpl
or
sbb
pop
fwait
pusha
mov
and
add
icebp
inc
popa
cmp
and
push
in
sbb
imul
mov
loop
call
dec
in
or
mov
xor
cmp
mov
loope
adc
pushf
pop
fisubs
inc
lods
jb
fcomip
jg
repnz
dec
mov
loope
push
filds
xlat
and
xchg
fldt
cmp
faddl
push
aad
inc
pop
pusha
jae
and
aaa
aaa
mov
loopne
mov
lea
cmpl
mov
push
add
mov
loop
inc
fidivl
add
jge
gs
add
sbbb
scas
sub
test
arpl
sub
lds
faddl
sbb
aad
pop
add
fwait
arpl
ror
adc
test
rorb
sub
inc
cmpl
repnz
xchg
addr16
mov
int
cmp
xchg
or
mov
adc
pop
out
push
cmp
xor
pop
sub
cmp
xchg
jnp
jno
xorl
inc
push
mov
dec
in
repnz
nop
je
add
cmp
or
jo
and
cli
fidivs
pop
fwait
sbb
adc
mov
push
dec
sarb
mov
pop
inc
fdivl
loope
lret
and
dec
jae
je
push
sahf
bnd
push
or
or
outsl
or
and
jp
mov
mov
ret
dec
mov
lea
sbb
ds
jns
int3
shr
arpl
mulb
cmp
mov
dec
in
xchg
dec
add
int3
inc
dec
fs
lock
mov
int3
fdivl
xlat
jle
mov
out
scas
pop
mov
and
jecxz
push
dec
bound
lods
lock
sar
aad
mov
mov
add
filds
fimull
mov
arpl
push
adc
push
or
ror
mov
cmpsl
fists
pop
into
imull
daa
xor
mov
neg
add
dec
pop
test
sub
loope
jmp
mov
sub
cmp
cmp
pop
stos
icebp
pop
jo
aad
push
shrb
xchg
or
pop
test
test
lods
inc
adc
hlt
cld
pop
ja
jmp
mov
push
push
or
rsqrtps
push
mov
dec
shrb
cwtl
xor
push
sbbb
xor
int
gs
dec
je
jp
fwait
jg
icebp
adc
lea
and
xchg
xor
inc
sahf
adc
lahf
sti
lcall
aaa
shrb
rolb
inc
pop
scas
or
push
fimull
add
fcoms
je
xchg
fwait
mov
ds
orl
shl
mov
adc
adc
sbb
int
enter
pop
arpl
fsubl
rorl
xor
adc
push
out
outsb
ret
mov
jb
or
inc
xchg
ja
jnp
orl
dec
cmp
inc
cmp
jle
pinsrw
sbb
xchg
mov
sub
cmc
clc
mov
mov
and
js
dec
popl
arpl
mov
xorl
gs
in
das
mov
out
dec
pushf
std
or
mov
jne
or
sub
movsl
add
lods
sahf
fidivl
je
fldt
divl
int
push
mov
pop
cltd
roll
shrb
sbbl
ljmp
cltd
xchg
sub
push
pop
fmull
jl
jecxz
mov
outsl
cmpb
jge
inc
mov
xlat
sbb
das
adc
sub
fcmovne
subb
mov
xor
adc
punpckhbw
add
and
adc
jb
out
sahf
fistps
out
out
xchg
pop
ret
inc
mov
ljmp
daa
sub
outsl
sbb
sub
bound
mov
lcall
push
addr16
sub
cwtl
mov
das
and
lcall
pop
cmp
sbb
leave
mov
cvtps2pi
push
int3
xchg
icebp
aad
mov
jle
adc
sbb
cmp
inc
aas
and
rclb
les
push
mov
jae
es
add
mov
push
dec
data16
aaa
in
cmpsl
stc
dec
outsl
repnz
dec
push
cmp
push
shr
inc
pop
add
pop
bound
repnz
aas
mov
fstpl
rclb
xchg
js
mov
incb
inc
mov
or
and
sbb
repz
dec
cmp
add
adc
out
and
icebp
inc
cmp
inc
scas
ret
adc
xor
add
scas
jge
test
mov
inc
lea
test
mov
test
mov
sub
divb
loop
hlt
pop
ret
out
ds
sub
cmp
mov
loop
sti
fsubrp
cmp
add
rcrb
push
out
pop
mov
jae
sbb
xor
rclb
inc
inc
stos
imul
shr
out
push
or
pop
mov
pop
test
out
mov
cmp
adc
adc
out
fldl
xor
jae
cs
outsb
jl
mov
fnstsw
cmpsl
push
subb
or
sub
scas
jmp
or
movsl
pop
cmc
sarb
jle
shrl
popf
scas
pop
stos
xor
jmp
fistpl
xlat
scas
mov
sub
mov
rclb
es
out
iret
push
push
lods
subps
arpl
jnp
cmp
es
daa
xor
dec
mov
or
subb
sbb
push
or
adc
or
xor
aam
enter
push
sahf
mov
insb
ret
sbb
mov
and
xchg
jp
dec
aad
dec
mov
adc
xchg
dec
jns,pt
lods
std
sbb
jno
inc
jne
mov
xor
sub
jb
xchg
imul
pushf
sbb
adc
mov
sbb
pop
cltd
add
in
jecxz
das
call
jp
test
mov
xchg
or
sub
add
les
xor
pop
icebp
pop
or
bound
or
cmc
or
mov
mov
dec
sbb
subl
shlb
stos
adc
lods
xchg
subb
cltd
ja
add
adc
repz
mov
pop
and
pop
test
repz
repz
push
lds
mov
mov
popa
inc
sbb
pushf
mov
loope
lret
aaa
in
inc
cmp
mov
outsl
mov
lods
xor
pop
jle
lds
cmp
add
fsubrl
push
jnp
sbb
sub
mov
ds
sub
adc
iret
dec
pop
adcb
xor
pop
push
cmp
into
xor
push
mov
popa
aas
aas
inc
cmpsl
shll
lret
decb
adc
fisubl
push
sub
xor
out
push
jp
loop
or
or
xchg
pop
mov
sbb
into
cmp
loope
xor
cmc
xor
jb
jns
or
ljmp
cltd
mov
sti
mov
pop
xchg
ds
fs
cmp
cmp
mov
pop
cmp
fldl
lds
dec
div
scas
mov
sub
gs
aaa
dec
jle
xchg
in
add
xchg
jb
inc
data16
scas
xor
sub
adc
fldenv
xor
mov
push
dec
out
sbb
ss
dec
dec
pop
sub
shll
pop
push
out
into
mov
push
pop
push
ficoml
outsl
push
lds
out
adc
xchg
and
das
fcoms
mov
std
js
push
cli
cltd
mov
popf
add
mov
dec
out
dec
mov
mov
push
pop
mov
mov
jge
jmp
nop
js
repnz
jecxz
pop
push
stc
ja
mov
or
orl
lods
xchg
repnz
adc
mov
sbb
or
fsubrp
ds
adc
subb
aam
or
lods
add
add
test
aad
icebp
mov
popf
ljmp
enter
sbb
or
and
dec
sbb
je
inc
jl
dec
pmaxsw
mov
xchg
push
es
in
fwait
sqrtps
fldenv
mov
gs
and
movsl
int3
push
sbb
lea
scas
sbb
cmpsl
and
clc
cltd
fcomp
adc
adc
mov
outsl
outsb
movsb
hlt
mov
and
outsl
jl
inc
ret
and
pop
mov
cmc
pop
mov
out
sub
pop
int
push
test
pop
jle
jle
sub
push
xchg
pop
cmpsb
inc
dec
sahf
or
adc
mov
gs
je
xchg
rol
xor
clc
inc
fdivs
and
negb
jg
pop
test
jnp
fildl
ret
inc
int3
push
xchg
int3
stc
xor
repz
lods
add
or
mov
add
std
orl
mov
xor
outsl
roll
or
jg
js
int
jbe
push
in
shl
fnsave
mov
mov
jp
out
push
push
sub
push
inc
push
push
push
and
add
pusha
data16
sbb
adc
jbe
dec
das
cmp
and
ret
xchg
int3
mov
aas
sub
ds
dec
push
outsl
mov
imul
cli
adc
lret
xor
sbb
lock
repnz
xchg
fisttpll
sbb
jns
sub
fsubrs
jg
xor
lock
scas
iret
add
mov
inc
loop
push
daa
xor
xchg
enter
mov
mov
cmp
inc
sbb
push
jp
dec
add
stos
loopne
rorb
mov
fidivl
pusha
cmp
inc
sbb
push
jp
dec
add
stos
loopne
rorb
mov
fidivl
pusha
cmp
inc
sbb
push
jp
dec
add
stos
loopne
rorb
mov
fidivs
pusha
ds
push
inc
sbb
push
jp
dec
sbbb
mov
in
bound
test
js
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
shl
ret
in
aad
lds
icebp
test
sti
test
outsl
jae
bound
xor
and
add
ret
in
aad
lds
xchg
mov
gs
arpl
push
add
shl
ret
in
aad
lds
xchg
mov
inc
pop
xor
adc
jns
jo
jb
mov
mov
mov
testb
mov
daa
rcrl
sbb
insb
movsl
subl
sbb
lcall
add
lods
scas
push
and
and
sbb
imulb
dec
std
inc
push
jne
fs
mov
sbb
and
sarl
lock
shl
mov
xchg
movsl
ss
mov
lcall
inc
lds
xor
sbb
lret
dec
xor
out
mov
stos
push
inc
inc
data16
xor
lods
cmp
xor
int
cli
jno
ds
mov
popa
mov
dec
mov
jbe
mov
in
aad
lds
xchg
mov
gs
arpl
xor
and
cmc
mov
lcall
rcl
lock
jl
push
sbb
push
addr16
mov
cmpsb
mov
test
lret
ret
adc
pop
jno
arpl
adc
mov
jo
push
mov
ret
mov
mov
mov
mov
mov
gs
arpl
xor
and
repz
lds
xchg
mov
gs
arpl
xor
and
outsb
mov
andl
and
jb
jo
pop
xchg
xchg
push
jb
jecxz
sub
jno
sub
cltd
imul
pusha
mov
lcall
mov
insb
loop
cmp
jnp
jp
mov
sti
sub
repnz
shll
xlat
jnp
or
fnsave
daa
leave
mov
xor
fs
jbe
outsl
add
lret
inc
daa
arpl
push
imul
int3
cmpsl
fwait
mov
and
int3
aas
jb
jp
rorb
xchg
add
inc
mov
add
inc
cmp
cmpsb
jnp
int
xlat
fisubl
mov
int
shrb
push
add
leave
push
out
orb
lods
adc
xchg
lods
pop
jb
cmc
mov
sbb
ljmp
jle
rcll
mov
sti
push
push
adc
int
arpl
inc
mov
ljmp
daa
push
inc
shr
sbb
loop
jb
out
or
xchg
and
in
or
sub
lods
mov
movsl
scas
xor
jecxz
mov
add
xchg
dec
jecxz
mov
mov
adc
dec
add
mov
daa
negb
imul
sub
data16
or
push
stos
pop
mov
in
leave
xchg
lds
or
pop
xchg
in
add
lds
mov
lret
in
std
loop
aam
cli
mov
popf
std
clc
or
andb
sbb
jae
addr16
cmp
notl
out
xchg
fistpll
add
and
mov
sbb
sbb
mov
insb
cmpsl
jnp
ss
fimuls
jae
cld
mov
jp
lods
dec
xchg
pop
aaa
lret
adc
mov
mov
cmpb
xor
pushf
cwtl
mov
mov
outsl
into
mov
pop
mov
nop
outsl
fs
lcall
pop
push
jno
lret
sahf
mov
lock
shlb
cmp
mull
mov
mov
dec
dec
pop
pop
out
sbb
adc
movsb
movsb
lret
mov
cmp
icebp
test
add
xchg
inc
add
sbb
mov
dec
loopne
mov
mov
inc
popf
sbb
cmp
ret
call
aam
xchg
dec
jbe
mov
lea
pop
fnsave
mov
rolb
loope
pop
inc
sar
test
mov
sub
ficoml
cmp
fbstp
std
fidivl
pop
sbb
sbbl
sub
xchg
loope
sbbl
or
sbb
mov
fdivl
into
inc
sar
cmp
sub
cmpsb
mov
xor
repnz
jns
nop
mov
ss
jmp
pop
lods
inc
pop
mov
mov
lds
xchg
inc
push
fs
cs
lret
mov
xchg
gs
lcall
ljmp
fists
add
or
or
and
daa
and
mov
sub
add
sub
add
movsl
lock
rol
andl
loop
add
cmc
mov
push
xor
mov
jmp
inc
inc
rcll
xchg
mov
sub
cli
aas
ret
clc
push
popa
inc
jnp
nop
add
mov
jle
add
sub
pop
in
inc
adc
fdivrl
pop
or
out
add
fdivr
xchg
mov
push
in
aad
push
lock
ljmp
ljmp
js
dec
push
loop
jp
out
dec
pop
lret
repz
fstpl
mov
rcrb
clc
fisubs
mov
sbb
or
xchg
dec
and
loopne
cltd
dec
sbb
popf
cltd
jnp
adc
notl
lcall
xchg
jmp
outsb
push
insb
sbb
pop
xor
int
xor
inc
xchg
ret
mov
inc
fistpll
repnz
jmp
cmpsl
nop
in
xor
mov
jecxz
xchg
mov
inc
jmp
mov
pop
scas
jnp
push
aad
pop
test
fs
leave
aas
data16
mov
sub
dec
mov
xor
mov
inc
inc
sub
xchg
xchg
lds
mov
add
push
inc
inc
cmp
mov
sbb
cwtl
fiadds
inc
leave
rcrb
mov
pop
sbb
mov
pop
pushf
aaa
popf
cmp
cmp
adcl
cltd
and
cld
ljmp
mov
dec
xor
fwait
popa
xor
jae
in
mov
iret
mov
pop
aas
mov
fimuls
loopne
jp
aaa
ss
ret
cwtl
mov
dec
test
dec
sbb
cmp
fdivs
xor
pop
xchg
data16
dec
pushf
gs
or
mov
je
fucom
hlt
push
cwtl
jg
mov
cmpsb
push
push
xchg
lret
ficoml
xor
sarl
les
shl
out
fists
xor
inc
shl
std
xor
adc
lret
xlat
dec
movb
cmp
or
xlat
xchg
je
push
lcall
lods
xor
sbb
outsb
rcll
sub
adc
jno
and
pop
mov
pushf
out
push
loopne
outsl
add
push
sub
ljmp
push
jbe
xor
rcrl
add
sbb
pop
adc
stos
aad
arpl
mov
and
les
sbbb
rcll
jmp
mov
loop
lcall
adc
mov
stc
xchg
dec
pop
mov
fimull
mov
sarl
and
sub
mov
iret
stos
les
insb
push
inc
std
rcll
lock
out
negb
dec
jae
dec
dec
push
mov
cmp
pop
bound
clc
les
or
push
sub
cmp
ret
push
push
repnz
mov
mov
aaa
aad
mov
movsl
cmp
inc
push
stc
xor
lds
das
ljmp
pop
and
jb
mov
loopne
fnstcw
and
pusha
mov
aaa
push
xor
rol
and
call
inc
loope
or
insl
push
push
std
adc
cltd
inc
xor
loopne
inc
jno
xchg
jae
iret
je
sub
data16
mov
pop
pop
cmp
test
psubq
xlat
inc
fmulp
insl
inc
mov
mov
lret
je
adc
lock
cltd
aad
xchg
in
xor
adc
mov
mov
lods
iret
mov
lahf
stos
outsb
mov
jge
dec
pushl
out
dec
lea
xchg
aad
lock
mov
scas
dec
hlt
sub
cmpsl
shrl
jns
lahf
bound
ficompl
scas
bound
out
lea
push
push
aas
mov
jnp
insb
mov
push
mov
xchg
xchg
push
push
mov
cvtps2pd
sub
mov
add
cmp
pop
mov
or
adc
dec
lahf
stos
ficompl
pop
inc
ret
pop
pop
fwait
dec
or
inc
cmpsl
aas
sbb
cmp
loope
mov
cmc
pop
xor
pop
push
jae
iret
ret
adc
out
xchg
push
test
das
imul
in
cmp
cmpsl
cmc
pop
lock
icebp
pop
or
jmp
sahf
inc
das
or
lods
call
fwait
cmp
or
mov
push
into
mov
and
mov
std
mov
out
loopne
inc
xchg
add
jns
icebp
pop
pop
call
sbb
push
lods
inc
push
adc
sub
and
adc
mov
jp
in
mov
dec
mov
scas
sbb
mov
aaa
call
sti
out
aaa
mov
rol
or
pop
inc
sbb
shrl
jb
dec
cmp
jbe
xor
in
jns
jmp
or
incl
adc
xchg
xor
fstp
mov
fcoml
lds
mov
xchg
addr16
dec
in
lds
jbe
mov
push
nop
test
test
or
fdecstp
and
mov
aas
mov
test
sub
fstp
lds
mov
imul
mov
mov
test
xchg
sub
cmp
shlb
push
sbb
scas
aam
pusha
lret
decl
sbb
das
rcrb
mov
dec
aaa
ret
mov
fcomps
or
dec
xor
adc
test
rcrb
divb
mov
mov
mov
or
adc
mov
xchg
aad
call
outsb
jae
in
xchg
jp
scas
sub
mov
repz
gs
pop
adc
mov
pop
fldenv
mov
add
enter
pusha
stc
xchg
pop
ficoms
push
imul
ret
add
dec
lcall
fnsave
push
push
xor
adc
es
push
int
push
cmp
lock
jle
push
or
cmp
lock
mov
das
shl
mov
loope
and
add
mov
loopne
loopne
push
cmp
xchg
push
push
cmp
popf
adc
les
add
sti
mov
mull
or
adc
sbb
xchg
call
and
sbb
jg
rorb
xor
dec
fs
out
jl
ja
js
sub
fiaddl
addr16
inc
sysexit
jmp
pop
movsb
push
inc
fs
imul
rorb
pop
xchg
inc
jnp
fnsave
cmc
je
sub
sbb
jecxz
cmpsb
loopne
xor
bound
mov
xlat
testb
fimull
sbb
popf
jg
xchg
lods
and
hlt
mov
and
mov
test
mov
in
push
cs
mov
es
mov
idiv
into
loopne
push
enter
daa
dec
pusha
fstpl
pop
call
pop
mov
jb
scas
daa
jne
aad
add
dec
xchg
fcoml
inc
xor
out
lahf
shrb
sbb
jae
out
add
loop
dec
mov
cwtl
ljmp
ret
pop
add
imul
ljmp
mov
adc
pop
adc
push
ljmp
push
adc
sbbb
hlt
test
mov
outsl
loope
rclb
fldl
dec
aas
push
clc
push
orb
pusha
xchg
xchg
leave
xor
sub
jbe
cwtl
shrb
xor
cmp
lock
ret
cmp
jo
imul
add
push
mov
xor
pop
cmp
and
outsb
mov
mov
mov
aam
dec
sbb
adc
jle
push
cmpsl
loopne
mov
pop
lock
int
push
fsubrs
pushf
dec
mov
sbb
fldcw
out
test
mov
dec
les
pop
adc
mov
dec
lock
shl
lock
imul
jle
inc
jns
leave
push
push
cmp
sbb
ficomps
xor
scas
call
test
subb
dec
fcomip
and
xor
leave
jnp
pusha
imul
jg
stos
jmp
out
cmp
cld
jp
es
mov
push
subb
mov
or
shrl
and
in
shlb
aaa
jmp
dec
inc
pop
pop
shlb
push
cli
mov
es
mov
mov
aaa
or
cli
jne
push
jne
mov
xor
cli
jg
aas
mov
pushf
or
aad
fidivl
adc
pop
loop
ljmp
pushf
push
xchg
es
xor
loop
add
cmpsb
mov
fists
sbb
dec
outsl
sub
pop
dec
jnp
out
inc
subl
or
xor
mov
jb
jo
inc
out
scas
cmpsl
xchg
lahf
sbb
or
pop
scas
mov
push
fnstsw
sub
outsb
ficompl
mov
dec
xchg
inc
call
fnstsw
push
out
addb
xlat
mov
fistpll
and
add
sub
aas
mov
sbb
ret
test
mov
add
jbe
mov
dec
push
xchg
popa
arpl
cmp
loope
mov
dec
jb
mov
cmp
mov
notb
xchg
clc
cs
sbb
into
in
outsl
loope
out
and
int
outsl
inc
jno
pop
jl
xchg
cmp
lret
fucomip
pop
pop
mov
addr16
jecxz
jg
int
rcrb
jge
das
jae
push
sti
and
leave
movsb
add
sti
cmp
pop
pop
jne
cmp
mov
loopne
xchg
mov
xor
fmull
adc
jae
cmp
inc
pop
xorl
push
mov
arpl
insb
push
add
loope
scas
test
push
add
repz
dec
sarl
imul
aam
xor
dec
pusha
jns
jo
out
addr16
decl
loopne
lcall
inc
mov
add
fs
stc
adc
sbb
sub
mov
dec
sbb
cmp
push
cmpsl
enter
push
inc
mov
xor
mov
or
cli
add
movsb
cmp
add
mov
add
faddl
push
cltd
bound
bound
cmpsb
pop
jmp
push
aaa
aaa
cmp
lcall
fstl
cmpsl
mov
or
shl
arpl
xor
or
mov
addl
mov
ds
imul
mov
sbb
pcmpgtw
cmp
scas
inc
fisttps
pop
push
adc
sub
push
jle
gs
mov
lock
mov
inc
push
push
cmp
mov
pop
stc
or
adc
addl
cli
push
bound
add
loop
mov
pop
jae
inc
stos
cmp
xor
mov
push
jne
and
aad
imul
cmpl
rcr
cmp
sbbb
scas
out
sub
push
xchg
jo
or
sbb
inc
pop
ja
jne
pop
js
xor
movsb
pop
dec
aaa
rol
jns
jmp
repnz
add
push
mov
mov
mov
clc
arpl
icebp
mov
fidivrl
and
cltd
into
adc
movsb
push
mov
inc
mov
mov
in
push
ret
add
add
add
dec
ja
mov
sub
add
insl
mov
push
push
add
stos
mov
mov
xchg
stc
in
iret
cmpb
aam
dec
xor
sarl
inc
mov
pminub
push
and
sub
imul
into
insb
mov
ret
push
test
subl
aas
jns
int3
in
insl
pop
out
add
fstps
leave
repz
cmp
lea
push
insl
sub
bound
arpl
enter
or
loop
rcll
dec
pop
pop
mulb
insl
inc
out
ds
xchg
lea
shr
test
lret
mov
fmulp
mov
xchg
ljmp
daa
adc
decb
lret
ljmp
insb
andl
jne
pop
test
jno
movsl
pop
aam
aam
lahf
sub
outsl
jg
mov
lret
arpl
out
jge
inc
sbb
xor
test
fs
pop
cmc
mov
sub
sbb
cmpb
adc
ljmp
cmp
imul
sbb
cs
movsl
mov
xchg
push
sbb
lret
and
cmpb
sbb
fs
mov
mov
andb
mov
mov
or
mov
mov
imul
test
daa
in
mov
maxps
and
push
aam
dec
lods
ljmp
xor
push
xor
cwtl
push
insl
test
xor
sbb
lods
icebp
cld
fistpll
cmp
fistpl
cmp
lret
jne
sbb
mov
xchg
sub
gs
repz
int
pushf
cmp
dec
int
clc
es
add
in
mov
push
cmp
mov
pop
sbb
or
mov
ds
pop
stos
dec
jo
fwait
lods
inc
dec
add
xor
jg
shll
and
sbbb
push
lds
or
dec
lret
stos
lahf
inc
les
adc
sarl
mov
xchg
testb
rclb
outsl
inc
dec
dec
ret
dec
xlat
icebp
jg
or
xchg
jnp
test
sub
ffreep
sub
stos
cmp
xchg
sbb
in
lods
imul
inc
adc
lahf
push
hlt
jns
jl
out
pop
sbb
mov
call
mov
jnp
scas
insb
cmpsl
in
inc
pop
lahf
adc
test
xchg
fdiv
imul
js
add
mov
stos
xchg
fimull
imul
into
aam
rcll
inc
add
les
xor
mov
mov
or
std
cmpsb
mov
and
push
or
push
push
pop
sbb
out
and
pop
xor
in
bound
xor
arpl
or
push
mov
xchg
andb
cmpsb
aaa
fwait
fs
cmp
popa
int3
les
mov
jnp
lcall
jle
fdivs
pop
xchg
je
les
jl
cltd
mov
pop
push
faddp
out
and
mov
sbb
xchg
or
xor
in
push
push
sbb
xor
hlt
cmpsl
je
sub
into
jg
ss
inc
aas
dec
and
fldenv
mov
repnz
pop
mov
pushf
push
push
in
inc
aam
out
cld
xor
std
and
icebp
vmaxps
xchg
sub
les
jns
jo
pop
cmp
inc
adc
xor
shrl
fcompl
outsb
imul
das
push
jae
int
sub
in
cmc
or
cmp
xchg
imul
mov
mov
dec
ljmp
xor
push
in
shlb
sub
arpl
int
cmp
mov
hlt
std
lret
sbb
xchg
pop
mov
adc
mov
mov
movsb
ret
mov
xlat
xchg
cwtl
rorl
addr16
add
inc
dec
xchg
rclb
lds
kandnw
dec
pop
ljmp
pop
fwait
nopl
sub
cmp
jmp
cmpsb
gs
ja
dec
leave
jne
mov
arpl
movl
jne
mov
sub
loopne
xchg
inc
repz
in
addr16
dec
cmpsb
sahf
jle
es
inc
push
push
test
int
push
repnz
aas
and
add
jg
test
in
push
add
call
cli
push
or
mov
stc
shl
imul
pop
mov
pusha
popa
dec
dec
arpl
arpl
ret
sbb
lcall
lea
jmp
xchg
xchg
mov
xchg
xor
outsb
mov
and
call
rol
aas
inc
sbbb
add
pop
jno
inc
dec
adc
ds
add
dec
sub
pop
jo
fisubs
mov
es
stc
mov
lret
mov
push
outsb
fdivrs
leave
mov
test
lcall
cmp
cmp
cltd
or
adc
pop
sub
insb
mov
testl
mov
sbbb
sub
jg
dec
call
push
mov
add
push
add
in
jo
cmp
into
pop
push
ss
ret
js
sbb
icebp
xchg
out
mov
mov
jmp
adc
aam
and
cmp
sub
repz
pop
outsl
ret
into
cmpsb
mov
loope
pop
jp
scas
add
jg
jb
inc
call
pop
push
testl
add
gs
sbb
fmull
and
xchg
lods
repz
stc
jg
notb
clc
fldenv
sub
push
pop
std
dec
mov
cmp
xchg
inc
cmp
jmp
cmp
mov
cmp
push
jp
cmp
pop
mov
shlb
jo
inc
or
arpl
and
movsb
cmc
xor
xor
add
jmp
adc
pop
rcrl
pop
flds
xor
push
sub
sbb
fsubl
push
xchg
orl
mov
call
loope
out
nop
cmp
stos
sbb
aaa
shll
movsl
fs
dec
jno
es
sub
xchg
xor
divb
or
loopne
in
fnstsw
fstps
mov
add
icebp
divb
hlt
out
hlt
push
jg
sub
add
push
xor
cmpsl
ds
lret
out
iret
adc
roll
repnz
mov
js
mov
push
pop
lret
lahf
fs
xchg
cmp
inc
ret
add
leave
dec
xchg
xchg
dec
jb
xchg
test
xchg
adc
inc
jae
loop
dec
cwtl
sub
inc
xchg
dec
fs
xchg
push
loope
sbb
and
inc
aaa
mov
push
jbe
fwait
lods
fstpt
push
arpl
mov
popf
fmuls
lds
movsl
adc
sbb
or
push
sarb
fwait
cmp
push
lods
mov
mov
mov
mov
mov
cli
dec
pop
hlt
or
repnz
lds
xchg
mov
gs
arpl
xor
and
repz
lds
xchg
mov
gs
arpl
xor
and
jae
jecxz
adc
and
jae
arpl
xor
and
repz
lds
xchg
mov
iret
fsts
xor
jae
inc
ljmp
inc
or
adc
add
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
xlat
mov
mov
out
ret
jmp
sbb
cmp
pop
pop
pop
dec
daa
jnp
imul
xlat
mov
mov
xchg
inc
cmpsl
sti
mov
inc
sbb
adc
ja
pop
xor
dec
daa
cmp
imul
xlat
mov
adc
test
cmpsl
adc
push
push
outsl
or
and
pop
imul
test
in
xchg
inc
sub
dec
xor
stc
and
mov
ja
dec
adc
adc
jp
lods
ficoml
aaa
lods
mov
jns
ljmp
mov
jp
out
lcall
pop
pusha
inc
xchg
cmp
cmpsb
cmpsl
jnp
dec
inc
mov
fwait
xchg
stos
jbe
xchg
xchg
inc
in
pop
ljmp
mov
xchg
xor
arpl
lcall
push
dec
stos
sbb
sub
push
xchg
cmp
mov
pushf
push
dec
pop
mov
cmp
xor
pop
push
mov
jnp
out
cltd
fwait
xlat
jnp
aas
mull
cmpsl
and
int
sub
pop
ja
mov
jnp
add
cmp
test
scas
fisubs
pop
push
dec
add
sbb
xor
aas
arpl
arpl
fisubs
mov
mov
clc
cmpsl
xchg
mov
and
pop
es
xor
inc
pop
push
sbb
add
jmp
enter
lret
cmpsl
sti
mov
inc
sbb
cmp
pop
pop
pop
dec
daa
jnp
imul
xlat
mov
mov
xchg
lret
cmpsl
sti
mov
inc
sbb
cmp
pop
pop
pop
dec
daa
jnp
imul
jb
pop
sbb
xchg
cmp
push
movsl
test
arpl
pop
and
pop
out
scas
mov
leave
int
or
dec
xor
mov
mov
lret
cmpsb
mov
rol
add
ret
mov
cmp
fwait
imul
test
xor
pop
xor
mov
faddl
insb
mov
std
mov
faddl
cmp
or
push
hlt
mov
movl
lods
mov
mov
sub
push
mov
lret
les
popf
repz
mov
idivl
call
and
mov
int
pop
sbb
std
sti
dec
or
mov
sub
xor
mov
cmpsb
jb
hlt
je
pop
inc
cwtl
pop
fisttps
cmp
or
xorb
xchg
jge
xchg
outsb
jae
add
dec
push
push
and
mov
insl
sahf
mov
inc
pop
and
and
rorb
push
sti
dec
xchg
in
or
and
movb
cmpsb
iret
es
mov
add
lcall
and
rorl
adc
cld
xor
dec
nop
ljmp
lock
cmpsl
jnp
in
dec
dec
cwtl
sbb
or
leave
jg
push
xchg
dec
repz
inc
push
inc
jbe
mov
das
sub
jge
call
adc
lods
cmp
notl
jns
bound
dec
jl
shlb
cmp
aas
jb
scas
dec
mov
jnp
sub
push
scas
jb
push
ror
xor
add
mov
stc
or
mov
pop
fsubrl
cwtl
jge
mov
push
out
ficomps
sbb
stos
cwtl
mov
js
add
cwtl
sub
test
sub
ss
mov
ret
push
xchg
pusha
mov
sub
dec
mov
mov
fiadds
mov
xor
icebp
sub
push
pop
sub
xor
push
mov
sbb
cli
mov
test
js
int3
mov
jae
inc
cmp
int
xor
sub
imul
jmp
xor
sbb
std
into
es
dec
cmp
in
jmp
scas
add
jbe
push
adc
mov
movsb
bound
mov
addr16
inc
cmc
je
dec
and
into
popf
lods
xor
std
mov
imul
divl
xor
repnz
mov
cmc
js
scas
add
sbb
push
fmull
inc
andl
ds
and
inc
mov
adc
jg
js
xor
mov
jbe
fidivs
xor
dec
push
xor
mov
xchg
mov
dec
push
ja
cld
sbb
cmp
orl
adc
mov
andl
aad
sbb
push
or
mov
pop
daa
cmpsl
sbb
fsubr
dec
and
flds
or
mov
push
inc
xchg
fdivl
frstor
out
out
xor
shll
xchg
iret
cmpb
dec
sbb
push
cli
sbb
push
pop
adc
jne
mov
in
int3
loopne
mov
jg
mov
pop
call
mov
xor
or
sub
pop
idivl
inc
fwait
xor
sbb
xchg
or
pop
sti
sbb
xchg
fcmove
push
adc
push
xchg
mov
das
mov
mov
mov
std
in
mov
daa
cs
pusha
jnp
push
cmp
sub
test
scas
fmuls
dec
je
aaa
popf
cli
pushf
cmp
ja
addr16
mov
fwait
jp
ret
mov
fs
and
xchg
ror
cli
loopne
adc
jp
es
cmpsl
pop
dec
mov
jno
iret
insl
test
pop
fcoms
aas
and
shlb
xchg
mov
int3
inc
ret
jae
lcall
iret
mov
dec
testb
fstpt
mov
pop
cmp
cmpsl
in
mov
push
into
cmp
cmpl
mov
imul
push
and
aad
fwait
cmp
out
mov
ret
inc
push
fldt
arpl
xlat
or
mov
mov
sub
insl
sbb
in
sub
pop
xor
push
mov
fisttps
sub
add
arpl
or
stc
inc
sbb
in
add
and
mov
add
sub
data16
test
out
adc
dec
scas
add
icebp
gs
in
and
mov
mov
mov
mov
sub
add
hlt
sbb
xorl
in
outsl
cmp
push
pusha
xor
mov
stos
jns
xor
xchg
enter
rorl
add
mov
xlat
test
xor
int3
inc
mull
or
repz
xchg
push
cmpsl
pop
cld
shrb
and
pushf
mov
jne
fldt
aad
or
pop
sub
cmp
mov
ret
sbb
sti
test
stos
jb
lret
mov
xchg
inc
jecxz
mov
xchg
sbb
mov
out
inc
mov
cmpl
cmc
or
cmp
xor
nop
jae
clc
movsl
mov
jg
test
push
and
xchg
cmpsb
stc
and
sarl
sub
ret
or
ror
sub
inc
and
cmp
dec
dec
mov
dec
popa
mov
mov
add
fs
std
shlb
stc
sub
testl
dec
or
jge
mov
fmuls
inc
mov
mov
cmp
dec
add
jmp
scas
push
adc
xchg
mov
jecxz
hlt
es
int
xchg
sti
lock
in
inc
push
sub
fprem1
add
into
scas
pop
mov
inc
mov
sub
sub
xor
fbld
sbb
loop
into
into
test
sub
inc
cmc
iret
inc
sbb
and
fldcw
fwait
cmpb
push
scas
repz
test
arpl
subl
dec
mov
xchg
sbb
cmp
add
imul
mov
mov
in
enter
loop
adc
pusha
pop
mov
adc
out
mov
mov
insl
or
pop
mov
mov
je
sbb
or
and
mov
popf
lret
int3
pop
out
sub
sub
adc
outsb
inc
clc
and
xor
fdivrl
nop
push
mov
mov
js
cld
cmp
out
xor
icebp
outsl
xlat
icebp
es
stos
cmp
clc
iret
and
cld
dec
sbb
outsb
les
sahf
das
cli
xchg
xor
push
loopne
sti
aad
lea
sbb
into
stos
das
test
movsl
addr16
jmp
insb
sbb
ljmp
xacquire
mov
out
or
aaa
mov
xchg
adc
test
sub
neg
xchg
leave
fs
jne
dec
push
imul
or
or
imul
arpl
jecxz
iret
mov
sub
fisttps
sahf
mov
mov
push
sbb
sbb
jmp
lret
pusha
decb
clc
pop
mov
ss
sti
xor
sbb
inc
lea
jnp
xor
std
sbbb
jmp
or
repz
pop
fucomp
push
rolb
sbb
adcb
xchg
jnp
add
hlt
pop
mov
push
add
xchg
fistps
adc
mov
xor
imul
lods
insl
repz
orb
pusha
push
scas
scas
sub
les
jg
movsl
sub
sub
sub
stc
lret
repnz
cmp
push
sub
mov
imul
mov
xor
jae
lds
push
lahf
push
fildll
mov
jle
cwtl
leave
es
cltd
ficoms
jae
insb
and
outsb
imul
andb
pop
out
scas
pop
mov
insb
shll
jne
cmp
repnz
pop
jp
mov
lds
loop
int3
cmp
aam
and
or
pop
test
and
inc
mov
dec
mov
icebp
test
push
jl
inc
test
jnp
adc
rorl
mov
mov
sbb
std
inc
xchg
mov
pop
xor
mov
in
mov
mov
stc
inc
mov
inc
sub
xor
andl
push
stos
fdivs
sbb
xchg
incb
dec
testb
addr16
add
sub
jecxz
add
in
jnp
sub
dec
loopne
lea
leave
repnz
ret
bnd
jae
push
or
sbb
popa
scas
cltd
js
lret
sub
mov
imul
cmpsl
jl
in
call
testb
test
and
push
push
cmp
ss
xor
push
std
sub
push
addr16
mov
mov
xor
gs
xchg
sub
negb
das
jl
pushl
xchg
xchg
xor
fstpl
outsl
adc
push
mov
ds
loope
into
push
mov
bound
and
lahf
push
lret
xchg
lods
addb
push
ret
in
test
iret
mov
je
dec
inc
clc
jle
cwtl
mov
push
imul
dec
cmp
dec
cmp
cli
and
pop
dec
cmp
push
xor
mov
das
inc
add
out
ficoml
iret
shlb
inc
into
jno
mov
imul
ljmpw
sbb
sbbl
cmp
push
sub
sbb
mov
lcall
push
jp
pushl
in
mov
xchg
cmp
dec
mov
or
and
stos
fwait
es
jle
frndint
mov
push
pop
cmp
aam
stc
sub
sbb
cmp
fsubrl
shll
or
pcmpgtb
jp
outsl
mov
mov
gs
les
sbb
scas
sbbl
mov
lea
sub
jge
cld
ja
mov
dec
stos
mov
inc
cmc
lret
adc
jecxz
sbb
loopne
push
inc
xor
adc
gs
push
aas
xchg
jnp
mov
data16
dec
add
xchg
in
and
test
mov
dec
ret
fimull
xchg
xchg
or
stc
mov
jo
push
jmp
push
les
xor
or
lret
insw
enter
xchg
test
imulb
dec
addl
cmp
pushf
jg
pushf
mov
xor
inc
fldcw
pop
repnz
enter
or
mov
inc
pop
insb
xor
push
or
int
rorb
push
lret
jns
adc
out
mov
dec
inc
enter
sbb
dec
jmp
push
cmpsb
jp
and
add
imul
dec
arpl
jae
loope
dec
inc
pcmpeqd
lret
cwtl
and
int
fdivrs
roll
cmpsb
xor
or
jg
push
cmc
cmp
fisubrl
jmp
add
ret
loope
out
and
push
push
jmp
shll
js
and
out
out
and
dec
bound
imulb
inc
adc
pop
lea
andl
jno
rclb
pusha
dec
mov
shll
outsl
clc
aas
mov
add
xchg
in
cmp
push
and
adc
addr16
js
or
sti
mov
rcr
cmp
mov
idiv
jns
inc
push
jle
test
pop
jno
pop
mov
int
jge
push
jae
popl
push
in
add
jle
dec
cmpsl
sub
cli
lahf
mov
cmp
shr
mov
rolb
pusha
gs
xchg
adc
dec
push
shll
test
jb
adcb
pop
push
adc
mov
in
mov
nop
daa
shll
push
xchg
shlb
clc
jp
stc
or
stos
jl
mov
movsb
sbb
sbb
cwtl
pop
out
popf
icebp
stos
sub
or
out
into
daa
popf
adc
pop
mov
add
adc
pop
cs
or
cmp
test
dec
xchg
cmp
mov
ss
incl
aam
push
inc
jge
push
loope
cld
mov
xchg
adc
pop
jb
rorl
sbb
leave
scas
ja
pushf
xchg
and
pop
mov
cmp
cmp
add
push
sbb
lods
add
dec
jns
popf
je
dec
movsl
ja
ljmp
mov
in
std
cmpsb
orl
mov
or
mov
pop
sub
jle
or
dec
std
enter
and
bound
out
push
lahf
jg
lods
mov
sub
js
fildl
loop
dec
sahf
lcall
lret
and
push
jo
fdivl
or
add
repz
mov
lahf
cmc
pop
jmp
pop
cmp
inc
js
leave
insl
push
lret
pop
aaa
cwtl
adc
js
fwait
xor
xchg
js
push
xchg
push
xor
sti
cmpsb
inc
test
pmulhuw
mov
dec
xchg
cmpsb
xor
and
test
mov
enter
push
test
nop
jmp
add
pop
cmp
inc
jne
lods
dec
scas
insb
cltd
sbb
push
cmc
jo
lret
and
xorb
popf
idivb
ss
mov
lahf
inc
inc
jno
xchg
jbe
jnp
adc
mov
imul
notb
sub
mov
loop
stc
test
lock
pop
jo
push
push
pop
jnp
mov
addr16
testb
inc
je
sbb
ljmp
push
cltd
stc
xchg
xor
scas
mov
fld
test
xor
inc
fstl
mov
test
insl
and
int
in
push
sub
xchg
inc
jne
push
jl
push
fcoms
fs
lds
inc
sbb
jg
out
int
ret
pop
orl
mov
push
nop
je
cwtl
mov
ss
jnp
mov
sub
es
fstl
push
cmpsl
movsl
sbb
mov
mov
mov
xchg
push
popa
mov
jge
xor
sarb
sbb
ljmp
xchg
enter
aam
das
jo
xor
insl
sub
sbb
sub
fwait
push
es
mov
inc
notb
fldl
je
jae
popf
test
jnp
loope
jno
ds
mov
out
xchg
pop
jno
lods
inc
sbb
sbb
mov
ret
rcl
test
sahf
jl
inc
add
repz
popf
jl
add
xor
loopne
movsb
ret
add
addl
sahf
fwait
pop
in
mov
hlt
cmc
mov
jbe
pop
jmp
outsl
lock
adc
push
xor
dec
gs
xor
mov
popa
mov
int3
sub
cmc
adc
gs
addr16
xchg
loope
fcomps
cmc
dec
out
icebp
roll
mov
dec
insl
adc
pop
fnstcw
pushw
clc
daa
fdivl
repnz
lea
fnsave
movsb
xor
daa
jb
test
into
xor
adc
xor
shll
imul
jbe
sbb
jecxz
arpl
jp
ss
xlat
cmp
adc
insl
adc
push
fisttpll
push
das
movsl
mov
out
inc
xor
inc
dec
xlat
mov
pop
mov
jle
icebp
incb
sbb
dec
iret
xchg
inc
mov
popf
mov
dec
xor
imul
push
jg
cld
xchg
in
pop
mov
movsb
pop
push
or
inc
push
mov
jno
repnz
out
inc
pop
cli
mov
mov
and
mov
push
pinsrw
cld
mov
xor
decb
icebp
iret
xchg
scas
int
dec
jmp
push
jae
ret
add
mov
pop
inc
fiaddl
lock
pop
in
or
xchg
mov
ljmp
mov
mov
int3
out
or
out
ja
adc
adc
orl
or
rcrb
lds
out
aas
movsl
xchg
push
aas
xchg
inc
jne
insl
leave
inc
out
jmp
aad
pop
mov
mov
iret
cs
pop
inc
dec
jno
les
push
push
mov
fs
adc
pop
mov
or
xor
or
dec
pop
xchg
jge
push
push
stos
aad
mov
setne
iret
and
subl
rorl
insl
mov
and
subl
jb
imulb
ss
mov
or
push
shlb
inc
cmp
and
and
push
cli
ds
jno
inc
movsl
sarl
lahf
jb
lds
aad
xchg
xchg
stos
fldl2e
pop
ljmp
lods
loop
dec
clc
xor
jle
adc
sub
sub
rol
jmp
insb
mov
popa
lea
pop
pop
aam
xchg
lds
in
or
fisubs
xchg
std
adc
push
out
cmp
push
loop
add
mov
inc
lds
sti
out
sub
adcb
stos
lods
das
jmp
and
bound
daa
mov
iret
sub
dec
lds
js
fnsave
add
test
mov
mov
sahf
imul
inc
xchg
mov
push
mov
fdivl
and
adc
js
bound
sahf
movsl
mov
ds
sbb
rolb
pushf
es
push
fldt
xor
sti
cmpsb
inc
and
fimull
cmp
out
adc
cmp
dec
ljmp
lock
dec
les
scas
pusha
movsl
push
popf
repz
rcll
push
sub
enter
add
push
and
or
shlb
xor
pop
js
imul
mov
outsb
xchg
daa
sbb
or
mov
xor
adc
push
sub
push
jb
cltd
imul
fcmove
fdivrp
pop
lahf
mov
adc
inc
inc
lret
lods
fsubs
andl
add
push
ss
into
fldcw
mov
addr16
push
arpl
push
pusha
imul
lds
xorb
imul
lfs
imul
or
push
pop
mov
push
xor
or
fsubp
lcall
and
mov
in
iret
sbb
out
jne
cmp
nop
sbb
xor
sub
mov
jmp
jge
push
cmp
test
repnz
insl
cmp
je
in
xlat
sub
out
ja
shl
or
mov
insb
inc
mov
sbb
add
jecxz
sbb
dec
add
movb
adc
shll
adc
aaa
int3
and
in
pop
mov
movsl
push
and
mov
adc
or
daa
mov
cltd
mov
loop
xchg
and
pop
push
pop
mov
test
out
jg
popf
les
mov
mov
inc
out
stc
mov
pop
out
int3
sbb
jae
andb
in
adcb
mov
add
inc
repnz
jo
and
cmpl
stos
sub
in
mov
pop
and
dec
jl
adc
insl
and
aas
int
mov
sub
arpl
dec
mov
ljmp
pop
sbb
iret
dec
adc
push
sub
andb
lock
ja
mov
in
mov
clc
dec
stc
mov
ret
jb
mov
repnz
ficompl
aam
xor
mov
pop
push
rorb
jle
fnstcw
xchg
popf
rol
imul
jno
and
add
or
adc
pop
jecxz
add
xor
or
cmpsl
push
int3
fisubrl
scas
imul
and
adc
or
xchg
in
pop
add
push
push
aaa
mov
xchg
jb
jp
add
cld
out
rclb
xchg
push
push
ficomps
mov
loop
cltd
inc
jmp
jl
fildll
popa
sbb
or
orl
cs
daa
dec
addr16
mov
sbb
lock
xchg
sub
mov
adc
ds
push
or
adc
decl
sub
or
inc
mov
xchg
fsubrl
mov
pop
fcmovne
and
ljmp
sub
sbb
xor
aam
cmp
lcall
or
int
xchg
clc
mov
fidivrl
push
hlt
ret
jns
sahf
push
cld
push
dec
cmpsl
add
xor
or
sub
arpl
arpl
jns,pt
or
dec
std
or
jb
cmc
hlt
ficomps
out
repnz
and
pop
inc
xlat
mov
xchg
jecxz
test
xor
lds
test
sbb
xlat
dec
pop
daa
test
jno
and
test
mov
push
scas
push
scas
push
pop
mov
and
mov
in
in
cmp
bound
or
jo
mov
mov
mov
cmp
jmp
mov
lods
push
dec
inc
sbbl
mov
mov
sub
xlat
imull
cmpsl
sti
mov
inc
sbb
cmp
pop
pop
pop
dec
daa
jnp
imul
xlat
mov
mov
xchg
lret
cmpsl
sti
mov
inc
sbb
cmp
pop
pop
pop
dec
daa
jnp
imul
xlat
ret
out
imull
cmpsl
sti
mov
inc
ret
push
or
ja
pop
pop
pop
dec
daa
pop
aaa
imul
xlat
mov
mov
xchg
lret
cmpsl
jnp
jmp
in
mov
jo
lahf
mov
test
xchg
xchg
arpl
jmp
sti
add
jb
inc
sbb
pop
mov
push
repnz
sub
cmp
ret
xor
and
adc
add
push
mov
mov
or
cmp
adc
pop
and
cmp
bound
mov
orl
mov
sti
imul
fisubs
fnstcw
xlat
fs
lock
shlb
or
rorl
xchg
jb
out
pop
aas
dec
iret
cmpsb
pop
xchg
xchg
sub
xor
das
jmp
jnp
add
loop
mov
movsb
das
xchg
lret
test
hlt
out
loop
push
fs
ja
push
xchg
cmp
arpl
dec
or
push
test
repnz
fadd
ret
dec
inc
es
inc
cmp
out
cmp
bound
insl
js
clc
mov
dec
cmp
mov
scas
adc
pop
inc
push
jae
stos
cs
inc
pop
mov
mov
xchg
mov
sbb
clc
xor
and
adc
bound
mov
mov
imul
loop
rcrb
mov
adc
or
lret
sbb
bound
jl
lret
push
push
inc
lods
ja
add
push
cli
cs
cmp
es
sbb
push
rcll
js
jle
pop
test
mov
pusha
mov
bound
mov
mov
or
sbb
sub
cmp
lret
xor
and
adc
add
push
mov
mov
or
sbb
sub
cmp
lret
xor
dec
inc
jmp
lret
fstp
add
pop
ljmp
sub
pusha
inc
push
adc
push
std
cli
jl
or
xchg
jmp
scas
outsl
int3
cmp
mov
mov
loopne
je
movsb
in
int3
pushl
dec
movsl
scas
clc
ficompl
lcall
cld
shrb
xchg
xchg
sarb
dec
pop
jns
scas
pop
mov
mov
maxps
mov
mov
repnz
xor
bts
into
aas
xchg
and
push
xchg
mov
fistpll
cs
sbbl
loop
ret
jbe
in
ljmp
sbb
aam
push
sahf
xchg
mov
loopne
stos
or
push
bound
pop
push
mov
jge
popf
xor
ret
jb
jne
dec
out
mov
xchg
ljmp
shll
ss
sub
cmpsb
test
scas
dec
aaa
dec
dec
push
cmp
sti
sahf
inc
fstpt
test
xchg
dec
fs
cmp
add
add
mov
inc
hlt
pop
push
xchg
jl
inc
inc
call
xlat
sub
mov
inc
mov
or
xchg
or
pop
xchg
cltd
andl
mov
sub
add
and
xor
pop
cs
ret
mov
xor
fmull
pop
aas
fstpl
dec
std
lahf
dec
arpl
into
nop
cmp
add
cs
stos
orl
imul
shll
lahf
adc
sar
pop
loopne
inc
xor
lods
push
lcall
mov
mov
sbb
stc
mov
lret
loop
dec
fstps
push
push
sarl
ret
test
and
pop
mov
add
icebp
in
push
mov
dec
paddsb
adc
sarb
mov
push
leave
lods
fmul
sub
dec
sarl
pop
adc
and
pop
subl
into
fistl
scas
stos
sbb
adc
out
je
daa
and
dec
cltd
mov
xchg
cmpsb
lret
add
pop
std
sub
jecxz
inc
adc
out
loopne
js
xchg
or
roll
shrl
test
cmp
push
xchg
stos
pop
cmpsb
add
out
mov
and
ret
lret
outsb
mov
in
cmc
out
cwtl
aad
pusha
push
imulb
pop
lahf
shlb
out
pop
sbb
sub
mov
mov
and
inc
call
ss
shlb
pop
mov
ret
xchg
pop
ds
lret
imul
push
and
mulb
push
lock
stos
jno
pop
jle
test
loope
repnz
leave
shlb
jle
and
mov
movsl
push
push
stc
push
lock
nop
js
sbb
cld
push
inc
fs
sub
mov
stc
jle
sahf
loope
cmpsb
mov
idivl
pop
into
inc
sub
pop
xor
lds
jecxz
jns
add
mov
and
icebp
jne
imul
movq
ds
push
push
push
lret
xor
push
inc
and
iret
lret
cmc
out
inc
scas
addl
sub
rorb
mov
inc
xor
repnz
jl
in
xor
add
jle
inc
icebp
jmp
bound
push
mov
insb
mov
xchg
cli
xor
mov
adc
pushf
scas
pop
imul
mov
xchg
fwait
mov
and
xorb
mov
inc
cmp
jae
xlat
lret
mov
popa
pop
fisttpl
outsb
popf
cmc
dec
mov
jecxz
lock
or
lock
and
dec
cld
jg
cmp
sbb
in
pop
xor
mov
add
sti
push
cmp
pushf
mov
rorl
leave
mov
inc
adc
lods
mov
inc
das
dec
mov
je
mov
pushf
mov
outsl
movsb
and
pop
clc
stos
mov
cmp
repz
int3
adc
mov
xor
idivb
push
mov
jg
xchg
xchg
and
fwait
rolb
in
jge
pop
jns
fimuls
and
fimuls
push
cmp
adc
mov
jg
push
add
fisttpl
pushf
scas
dec
hlt
mov
das
sub
xchg
xor
neg
cs
mov
push
xchg
or
outsb
rcrl
jbe
sahf
push
add
aad
outsl
shlb
das
mov
fsubl
sub
mov
in
out
or
cld
adcl
jne
sub
lahf
out
fmulp
sub
popa
pop
les
mov
xor
ja
loop
neg
test
or
repz
cmp
cmp
pop
aaa
pop
adc
mull
xchg
call
pop
xor
stos
mov
in
pop
and
leave
fstps
aas
push
outsl
adc
lcall
mov
dec
mov
addb
idiv
les
insb
jge
jnp
or
fdivs
push
add
decb
jecxz
ja
stos
sahf
dec
dec
jge
push
imul
xor
aam
mov
mov
lods
test
push
xor
adc
pop
dec
filds
incb
add
repnz
ret
movsl
int3
addl
mov
sub
mov
gs
movsl
adc
movsb
test
cmp
adc
std
sbb
mov
push
inc
lcall
add
je
pusha
cmc
mov
lea
outsb
cmpsl
mov
add
lock
or
jbe
jno
sbb
lods
sbb
enter
imulb
stos
rcll
fiaddl
dec
cs
sub
loope
ljmp
ja
roll
and
orb
out
shrl
inc
sbb
dec
imul
popf
or
sbb
mov
stos
out
mov
pop
pop
mov
nop
sahf
or
lea
fs
xchg
iret
xorb
and
rorl
aad
aas
jl
movsb
out
lahf
fsubs
sbb
iret
and
sub
ror
xor
repnz
movl
sub
mov
mov
lea
dec
jg
and
mov
xchg
dec
test
sbb
mov
mov
sbbb
xchg
or
sub
rclb
or
dec
jne
xor
jp
jns
out
xchg
lret
cli
and
into
out
xor
adc
pushf
lods
lea
push
adc
paddsb
add
xor
ss
shll
imul
push
ss
adc
ret
subl
push
loopne
pushf
out
int3
pop
cmp
jo
sahf
in
mov
cmpsb
inc
dec
dec
or
fisubs
paddsb
sbbb
cmpsb
cmpsl
sub
enter
out
jmp
mov
sub
gs
idivb
ljmp
sub
adc
out
fwait
jp
out
inc
mov
pop
mov
jbe
or
je
fs
mov
xchg
mov
imulb
inc
dec
xor
repz
cs
cmpsl
xorl
and
or
adc
imul
sbb
cmp
outsb
sarl
pop
ret
pop
imul
xor
and
jecxz
jae
das
aam
iret
gs
shlb
pop
fisubl
inc
pop
in
loop
add
in
push
repnz
or
or
dec
cmp
adc
insl
ds
inc
sbb
mov
mov
sub
push
xchg
pop
sbb
or
xchg
mov
sbb
xorb
paddw
lahf
add
mov
clc
imul
pop
out
cmc
aaa
scas
hlt
andl
jecxz,pt
das
sbb
dec
jmp
inc
int
pop
mov
int3
fldl
js
and
jle
lret
mov
xchg
push
cmpsb
push
mov
cmp
push
xor
lret
sbb
cmp
jbe
enter
inc
pop
mov
push
adc
lret
adc
pop
add
ds
jecxz
jnp
sbb
fs
adc
pop
aas
adc
movsl
add
mov
daa
cmp
clc
mov
xchg
push
lret
xchg
sub
xlat
repnz
aad
jecxz
mov
push
inc
inc
out
add
inc
push
jb
xor
cltd
sub
sti
in
ret
cld
jmp
pop
xorl
fstps
push
sub
pop
data16
aaa
and
cmp
xor
call
call
in
aad
ljmp
sbb
das
sub
lods
loop
add
std
jnp
adc
push
ja
out
push
push
push
push
ja
je
mov
pop
js
shlb
stos
mov
mov
cmpsl
inc
fsubp
xor
xchg
rclb
mov
mov
in
aad
dec
jae
dec
mov
mov
pop
cmp
inc
test
sbb
xor
xchg
sbb
sbb
or
addl
lock
mov
and
mov
pop
inc
mov
iret
sub
out
fnstsw
mov
insb
repnz
mov
and
mov
into
lret
mov
enter
cmpsl
lods
stc
jae
aaa
fisubs
repz
lea
test
cmpsb
imul
rcrl
mov
stos
je
push
stos
mov
lahf
add
xchg
lds
sbb
icebp
sbb
pop
or
sub
sub
out
stc
js
repnz
jnp
lea
addr16
jecxz
pop
ret
insl
sbb
mov
jg
mov
je
mov
mov
xchg
shrd
inc
dec
mov
push
pusha
sbb
out
lods
mov
fcompl
stos
or
inc
push
aaa
popf
mov
inc
xchg
call
int3
mov
movsl
xchg
fdivs
and
jmp
dec
push
lds
adc
mov
js
sub
inc
pop
sub
aaa
repnz
ds
cmp
mov
popa
sbb
xor
cmp
nop
or
lock
jbe
icebp
int
jge
mov
pop
fnstsw
outsl
sub
mov
clc
addr16
dec
addb
push
ret
and
push
sbb
insb
sbb
popa
mov
cmp
popa
fildl
xor
and
xlat
es
out
push
cmpsl
ret
and
stc
and
lcall
ror
add
jbe
cld
int3
sub
add
movsb
outsl
outsl
cltd
imul
sub
mov
imul
leave
repnz
sar
xchg
mov
sub
pop
mov
pushf
test
cs
imul
push
inc
sbb
xor
mov
and
lds
xor
dec
loop
test
pop
cmp
push
xchg
adc
and
or
xchg
imul
shr
jl
aam
pop
mov
fdiv
add
call
and
xchg
divb
je
sub
ds
fists
add
adc
push
inc
pop
add
ljmp
cmp
pop
dec
mov
and
lock
in
mov
test
inc
in
jecxz
xchg
and
inc
lret
cmp
inc
mov
test
push
jo
push
mov
jecxz
fistpl
lock
nop
or
nop
dec
mov
shlb
jno
sti
push
lcall
xchg
or
es
enter
out
aaa
pop
cmp
nop
jg
andb
adc
les
add
sbb
adc
add
outsb
int
adc
or
sti
jo
and
inc
lea
in
xor
and
fcmovnbe
adc
pop
mov
xor
dec
cmp
gs
and
inc
push
lods
mov
sub
loop
jmp
and
cmp
lock
cmc
loop
push
or
insb
lods
mov
lret
push
scas
stc
xchg
fistps
lods
imulb
pop
mov
inc
outsl
push
pop
mov
mov
and
dec
int
imul
inc
es
xchg
push
es
lock
pop
and
nop
dec
andl
and
mov
sbbb
xchg
cmpsl
sub
clc
jno
xchg
mov
test
and
dec
aam
stos
pop
addl
data16
stos
mov
test
dec
cmc
hlt
mov
sub
in
aad
lock
adcb
and
in
aam
imul
addb
push
push
cmp
jne
scas
je
mov
inc
dec
cmp
add
cs
adc
jns
das
imul
clc
pop
movsl
cltd
jmp
pop
xor
or
mov
arpl
popa
and
outsl
outsb
out
ss
dec
push
popa
movsl
xchg
popf
ja
add
inc
lods
xor
sub
int3
sub
enter
xchg
loopne
mov
jg
mov
cwtl
cmpsl
mov
mov
xor
mov
xor
pop
jo
shlb
mov
out
jnp
mov
sbbb
mov
lods
pop
insb
push
in
iret
sub
mov
fsubs
movsl
std
mov
mov
sbbb
pop
xor
xchg
or
xlat
scas
mov
mov
xlat
dec
jecxz
sbb
jnp
push
dec
pop
stos
lods
divl
mov
cmc
or
xchg
sbb
push
mov
mov
and
loop
bound
shrl
ret
out
clc
mov
iret
pushf
dec
add
cmp
loopne
es
mov
pop
cli
mov
out
xorb
mov
subl
pop
icebp
inc
mov
incb
pop
fnstenv
cmpsl
dec
outsl
pusha
push
hlt
ja
pusha
inc
jo
xor
jmp
out
in
mov
adcb
gs
xchg
push
je
push
cmp
das
xlat
xchg
push
add
scas
xchg
jnp
das
daa
lahf
add
es
shrl
xchg
rcr
imul
mov
pushl
es
push
lret
fwait
imul
or
dec
pop
inc
pop
push
cmp
imulb
mov
mov
clc
xor
push
mov
jmp
xchg
pop
adc
jns
mov
andb
testb
jne
jg
cmpsb
andb
sbb
out
js
lock
mov
int3
xchg
add
scas
mov
and
or
mov
in
out
xchg
push
enter
inc
inc
out
push
xchg
and
pop
push
inc
mov
in
lahf
xchg
ss
or
jnp
jge
push
hlt
mov
mov
scas
push
mov
sbb
inc
mov
outsl
xor
cmp
orb
xchg
xchg
xchg
bound
jae
mov
stos
mov
ret
ja
cmc
out
mov
ljmp
test
fldl
pop
idivl
jbe
jno
data16
popa
inc
push
cwtl
inc
xchg
shll
mov
bound
jnp
test
pop
inc
push
hlt
mov
add
sub
push
dec
sbb
das
or
mov
clc
nop
jg
pop
jmp
movsl
jecxz
loop
fldcw
lea
xchg
popf
inc
popa
test
enter
and
cmc
bound
xchg
das
sub
shll
xchg
sub
jle
jmp
test
mov
aaa
push
push
inc
movsb
ret
jecxz,pn
adc
xor
push
cmpsl
push
inc
sbb
pop
les
sbbb
xchg
imul
dec
inc
fcoml
dec
mov
jle
repz
xchg
inc
or
push
mov
pop
or
mov
insb
pop
lock
xchg
imul
dec
in
neg
jecxz
dec
popfw
push
mov
loope
xchg
mov
ret
mov
in
mov
lods
iret
cwtl
sbb
push
mov
pop
cs
cmp
sar
cmp
and
bsf
lea
fs
insl
pusha
cmp
stos
push
push
cmp
in
and
adc
ret
call
fistpl
int
cmp
xor
test
into
push
push
sub
pop
das
mov
fs
adc
data16
fs
fisubrl
sub
xchg
fnstenv
add
xchg
out
xchg
sbb
pop
dec
mov
jae
cmp
pop
cs
fisubrl
xchg
mov
inc
dec
or
or
sub
icebp
push
pop
pop
gs
and
aas
decl
jp
stc
and
f2xm1
jb
js
jne
add
out
xorl
dec
xchg
in
xchg
jle
test
in
addb
pop
test
mov
movsb
mov
scas
cwtl
jbe
jnp
sbb
xorl
insl
cmp
cmpsl
mov
in
lahf
add
lods
sub
fdiv
jl
int
test
pop
pop
mov
dec
jle
lds
sub
mov
sbbb
mov
in
mov
push
pop
fninit
mov
or
cmp
mov
xor
xchg
add
lock
push
mov
popf
mov
loop
add
sub
push
or
adc
fst
xor
imulb
mov
cmp
std
dec
push
add
push
data16
and
xor
jo
movsl
mov
out
add
sbb
jmp
push
lahf
flds
push
cmp
inc
mov
or
ficoms
mov
jl
test
sub
add
gs
rcr
dec
fcompl
push
push
lea
lock
or
adc
sub
pop
jl
cli
mov
test
mov
xchg
cld
jmp
mov
inc
adc
cmp
bnd
push
pop
mov
inc
dec
clc
jmp
sbb
sub
fistpl
or
sub
scas
sub
xor
lds
xlat
ds
and
or
sub
adc
sub
orl
mov
out
push
dec
orl
imul
ja
sar
roll
ja
pop
nop
imul
xor
jns
in
iret
xchg
add
rdpmc
push
arpl
jg
mov
mov
out
pop
es
mov
bound
incb
pop
data16
jo
mov
or
xor
pushf
arpl
and
dec
inc
sub
popa
cmpsb
int3
mov
fwait
rorl
pop
fwait
add
add
jbe
xchg
test
and
jae
pop
jnp
loop
push
or
fmul
imul
fnsave
push
sarl
and
mov
or
and
pop
or
ds
movsl
jmp
mov
mov
sbb
xchg
xchg
ljmp
lea
sub
cltd
cmpsb
mov
lahf
cmp
rcrl
mov
scas
xchg
fnstsw
cmp
andl
mov
sub
outsl
xorps
push
push
jne
mov
xlat
mov
lock
bound
addr16
cmp
xor
xchg
mov
jnp
mov
aad
xchg
xlat
mov
sbbb
dec
mov
pop
xchg
push
cmp
dec
xchg
andl
jo
fcmovnb
and
mov
xchg
mov
sub
sahf
inc
push
not
lods
push
sbb
popa
sbb
test
test
lcall
repz
iret
push
sbb
mov
xor
xor
je
movsl
dec
pop
leave
sbb
dec
xchg
pop
pop
inc
sub
les
dec
adc
fistpl
mov
or
frstor
xchg
jecxz
fistpll
xor
mov
fldt
icebp
push
lret
fdivrp
outsl
mov
rorb
shl
dec
or
xchg
cmp
inc
xchg
rcl
sbb
outsl
fsubp
int3
aaa
imul
pop
fdivrs
in
inc
out
shl
cmp
mov
pop
push
mov
addb
popf
jp
jno
cmp
xchg
sub
push
jbe
fwait
rorl
ret
cltd
cs
or
shll
xchg
call
xor
cmpl
xor
sub
sub
repnz
pop
lcall
xchg
jno
xor
cs
arpl
sbb
add
fisubl
sbb
push
fwait
push
mov
mov
push
xor
repz
mov
cwtl
push
xchg
loope
cmpl
outsb
jmp
ljmp
loopne
push
test
sub
push
pop
pop
xchg
cmp
es
mov
mov
xchg
fstpl
sbb
test
mov
add
push
adc
leave
insb
daa
sbb
jns
dec
xchg
add
sti
or
in
pop
scas
test
test
mov
xchg
jbe
fs
xchg
adc
loope
push
sbb
int
jae
fmull
js
jo
popf
dec
imul
sub
sbb
xchg
push
pop
mov
xor
enter
fidivrl
fnstenv
movsb
mov
test
jno
mov
ret
pop
int3
fs
pusha
mov
adc
outsb
add
adc
je
pop
cmc
jae
and
dec
dec
add
or
mov
mov
adc
jbe
gs
sahf
test
outsb
lahf
xlat
rcrb
dec
in
test
xchg
mov
dec
test
xor
les
icebp
cld
enter
push
cmp
push
in
fwait
js
sub
enter
enter
dec
sub
cmpb
stos
fldl
sub
in
and
pop
and
adc
add
push
mov
mov
or
sbb
sub
cmp
lret
xor
and
adc
add
push
mov
mov
or
sbb
sub
cmp
lret
xor
and
adc
add
push
mov
mov
or
add
das
rorb
ret
mull
arpl
roll
mov
bound
mov
or
xchg
jnp
jl
xchg
sbb
shlb
jp
sub
je
gs
cmp
lret
icebp
cli
loopne
xchg
mov
mov
jno
pusha
jp
or
sbb
sub
cmp
enter
lret
nop
jmp
mov
pop
jo
pusha
arpl
adc
add
xor
and
sub
loopne
lahf
test
repz
jmp
mov
cmp
xor
fwait
in
ret
lret
mov
sti
push
inc
ret
push
out
mov
pushf
popa
adc
out
sub
add
loop
xchg
orl
mov
dec
aas
xor
movq
mov
mov
fnstsw
add
adc
mov
mov
dec
nop
sbb
lcall
xchg
sbb
push
push
dec
adc
sub
shlb
push
and
jo
shll
and
mov
clc
sub
out
jp
cmp
scas
loopne
ret
loop
pop
xor
inc
inc
mov
lock
sti
enter
das
lret
push
into
test
insl
ljmp
mov
dec
jo
pusha
pusha
adc
add
xor
and
rcl
rol
repz
nop
xchg
orb
das
add
sbb
jnp,pn
pop
gs
inc
inc
push
mov
mov
int3
leave
add
sbb
jg
jns
sub
dec
pop
push
xorb
mov
loopne
mov
aas
adc
inc
sqrtps
sbb
sub
cmp
lret
lock
mov
mov
pop
jo
pusha
jp
or
sbb
sub
cmp
lret
lock
mov
mov
dec
xor
aaa
or
xchg
aam
pop
cltd
mov
pusha
mov
mov
xchg
mov
popf
insl
je
xchg
jns
fcoms
inc
mov
dec
xchg
add
ret
gs
adc
fldt
push
rcrl
loop
fildl
nop
push
mov
and
scas
mov
lcall
call
les
adc
lahf
movsb
push
mov
std
insl
cltd
pop
xlat
cmpsl
xchg
jmp
clc
mov
aad
imul
mov
mov
int3
clc
push
jae
ljmp
aas
sbbl
das
roll
mov
clc
adc
test
push
mov
mov
test
and
cwtl
adc
iret
iret
xchg
dec
shr
lret
out
push
or
push
mov
pusha
inc
pop
adc
loopne
add
mov
xor
or
push
jb
bound
or
mov
adc
pop
jl
rorl
mov
dec
insl
fimuls
mov
or
cmp
pop
jle
mov
jge
mov
push
jmp
dec
movsb
add
add
cwtl
push
rolb
dec
adc
dec
mov
testl
jl
sbb
lcall
incl
cmpsb
daa
stos
mov
pop
dec
into
js
push
xor
into
mov
add
sbb
imul
mov
push
sub
movsl
xor
lods
or
push
gs
xchg
pop
cmp
jl
xlat
orl
sub
push
cmc
dec
jo
ljmp
mov
xchg
shrl
sti
lea
stos
int
mov
into
adc
repz
cli
lret
adc
xor
daa
in
pop
sbb
repnz
add
sub
sbb
mov
push
jmp
popa
and
push
call
inc
mov
fisttpll
into
add
mov
inc
scas
add
push
iret
sbb
cmp
lahf
cmp
jle
ss
pop
or
mov
inc
cld
cmp
bound
sbb
sub
test
mov
dec
sti
loope
jno
cmp
adc
dec
push
xchg
add
js
or
cmp
sub
mov
shrb
mov
mull
mov
pop
mov
jo
sub
sub
aad
scas
xchg
cmpb
cld
cmp
fsubr
pusha
mov
fstpt
push
lods
in
sub
movsb
ss
mov
out
push
cmp
repz
loope
clc
mov
imul
jmp
mov
sahf
sbb
dec
jmp
push
je
repnz
mov
push
dec
xchg
mov
imul
rorl
shlb
mov
mov
sahf
xor
nop
ss
lret
or
sub
pop
cmp
out
mov
mov
dec
mov
sub
shlb
mov
repnz
pop
cmp
hlt
add
sub
push
mov
outsl
jno
add
mov
negl
out
sti
sub
into
mov
or
pop
iret
in
stc
call
jno
or
jle
subl
bnd
mov
cmp
insb
bound
sbb
sub
mov
aas
mov
test
push
dec
outsb
push
std
add
stc
and
adc
fwait
inc
add
aad
test
test
lret
adc
dec
adc
loopne
psubq
dec
js
push
scas
jo
and
pop
jecxz
adcl
dec
mov
or
sti
mov
sbb
rolb
jne
fidivl
pop
jnp
xchg
mov
lods
mov
and
addb
cmp
mov
sbb
push
imul
call
ret
aam
pop
int3
popl
cltd
arpl
daa
xor
cli
adc
sbb
push
and
jmp
xchg
fadd
pop
sub
mov
sbb
push
adc
scas
jecxz
das
adc
fldcw
dec
dec
xchg
jge
ljmp
cmp
pop
enter
bound
loope
jo
or
jo
mov
xchg
lret
or
push
in
inc
or
rcrb
mov
sbb
loop
mov
js
inc
inc
fwait
lea
movsl
push
adc
push
arpl
inc
fidivrs
fucom
jbe
lret
imul
add
cs
cmp
cmp
or
and
push
lods
sub
mov
fcoml
mov
push
inc
popl
aas
add
inc
pop
xchg
fsubp
iret
xlat
mov
data16
ja
popa
repnz
loope,pt
aam
add
jge
call
pop
inc
nop
jg
mov
mov
popa
loop
cmpsb
mov
fstpl
xchg
cs
pop
jnp
jbe
jp
aam
clc
add
shll
daa
xchg
fisttpll
nop
lock
mov
sub
jne
rcll
dec
fstps
adc
ret
sets
dec
cmpsb
flds
jb
rorl
cmc
test
cmc
fcmovne
sub
cmpsb
and
fdivr
fsub
push
insb
inc
insb
arpl
popf
shl
sbb
push
cwtl
pop
jnp
sub
scas
xor
lret
jne
fstl
les
mov
mov
test
into
jmp
aad
mov
bound
fsubl
jmp
dec
adc
test
jns
cmpsb
cmp
pop
shlb
ret
gs
leave
les
fidivrs
lods
cmp
jecxz
in
nop
lock
xchg
lds
xor
cmp
lcall
push
lock
stos
sbb
dec
enter
adc
int
popf
cwtl
ds
sub
out
in
mov
mov
pushf
rcll
sub
shrl
dec
cmp
xor
mov
lret
or
xrelease
cmpsb
adc
jbe
inc
xchg
outsb
shlb
lret
sub
fsts
xor
popf
cmpl
push
aam
xor
inc
movsb
jp
inc
das
incl
loope
clc
sbb
shll
jecxz
adc
shl
out
iret
scas
test
insb
repnz
xchg
jne
test
in
or
xchg
jo
fs
mulb
dec
outsl
adc
push
ja
adc
push
ror
mov
add
inc
test
gs
fsubrs
mov
popf
shrl
testl
mov
in
mov
les
pop
cld
aam
test
and
push
leave
les
cld
jne
and
shll
sbb
pop
adc
imul
inc
popa
test
jl
mov
add
xchg
inc
ja
jne
cmp
adc
add
sarb
cli
fbld
out
mov
mov
xchg
jmp
les
das
cmpsl
pusha
daa
mov
or
cmp
out
mov
inc
mov
or
jno
nop
ljmp
xchg
xchg
out
jb
jecxz
mov
dec
or
rclb
pop
jne
outsl
mov
and
dec
adc
push
pusha
xor
xchg
xchg
mov
mov
das
mov
xorl
cmp
cmp
ja
xchg
leave
sub
add
cltd
jle
adc
movsb
xchg
dec
jge
and
fmul
add
dec
dec
mov
jmp
lahf
cmp
es
cmp
pop
pcmpeqw
push
cmp
cmp
pop
sbb
fistpll
sub
in
dec
loopne
stos
imul
fsubr
push
push
push
xchg
movsl
fsubrl
aad
fistps
cmp
mov
pop
rcrb
std
cmp
xchg
data16
fs
dec
popa
pop
pop
cmp
sahf
xor
in
push
ljmp
das
fs
cltd
stos
add
data16
xchg
or
xchg
fs
cmpsb
ret
inc
or
mov
aaa
loop
popa
in
xchg
adc
movsb
jmp
cmp
jmp
and
inc
dec
pop
xchg
arpl
sbb
mov
or
mov
je
sbb
arpl
push
aas
int
mov
mov
sarl
mov
stc
dec
and
xor
add
sub
pop
nop
pop
subps
lea
inc
adc
jp
dec
sbb
outsb
icebp
mov
in
mov
fcomps
or
pop
leave
push
xchg
dec
xor
push
loop
aad
push
cmp
fdivrs
sub
inc
fsubr
pusha
dec
mov
lcall
dec
xchg
cmpsl
jns
xchg
or
adc
lds
mov
insl
push
cmp
in
and
shll
push
scas
add
mov
or
mov
sub
push
adc
stos
addb
mov
adc
iret
push
sub
aam
outsl
icebp
mov
mov
pop
jmp
push
push
cmp
inc
pusha
repz
adc
and
cmp
sub
cmp
jnp
insb
jns
pop
fiadds
lcall
std
inc
pop
stos
push
int3
jo
ljmp
pop
cli
or
mov
imul
cmp
iret
cmp
lds
jl
jecxz
loopne
xchg
dec
mov
mov
xor
mov
or
mov
das
xor
push
fcmovb
sbb
movl
pushf
ss
adc
add
aas
lahf
or
cmp
cmp
ljmp
loop
dec
outsb
daa
out
dec
popa
inc
jecxz
xor
mov
sbb
xchg
or
cmp
je
popa
pop
fiadds
cmpsl
mov
mov
lods
or
mov
pop
xchg
fistpl
push
sub
mov
cmpsl
fldcw
jbe
add
jne
dec
ror
and
lods
mov
arpl
das
aaa
mov
insl
std
clc
fdivrp
stos
lahf
sbb
test
orb
cwtl
pop
inc
lret
fisubrs
ret
outsl
mov
in
push
sahf
jp
ret
xchg
inc
test
negb
mov
xchg
mov
sub
inc
repz
fimuls
jmp
pop
jnp
xor
jmp
cwtl
xchg
sbb
stc
and
jecxz
jg
push
mov
test
in
xchg
idivl
fldcw
mov
jmp
sbb
shrl
adc
or
mov
sbb
adc
push
das
cltd
aam
bound
dec
mov
jmp
pop
imul
addb
adc
iret
stos
outsl
cltd
stc
mov
xor
icebp
out
aaa
sahf
adcb
mov
cltd
inc
ja
sarb
push
jg
out
out
push
mov
repz
mov
xor
mov
mov
push
adc
test
xchg
popf
pop
cmpsl
pop
pop
stos
adc
jl
or
sahf
add
int3
inc
mov
leave
mov
mov
scas
out
bound
lcall
pop
jb
loop
inc
jmp
add
or
popf
aaa
jg
cli
dec
mov
test
in
mov
leave
mov
jl
imul
sub
jno
xor
cltd
push
jecxz
imul
mov
mov
cwtl
nop
shlb
mov
mov
idiv
mov
lahf
pusha
push
sub
and
mov
movsb
ds
xor
mov
cmp
push
adc
mov
sub
and
rcrb
pop
sub
xchg
ret
jns
adc
mov
or
daa
insl
cmp
and
leave
ret
pushf
ret
xchg
call
push
scas
fists
add
or
dec
std
mov
inc
jge
ret
scas
dec
add
mov
pop
jmp
aad
cmp
jo
mov
fwait
inc
rclb
mov
xor
xchg
xor
mov
mov
push
push
lods
xchg
lret
fsubrl
fisubs
mov
popf
pusha
sub
sbb
cs
push
lcall
out
pop
cmp
jbe
pop
mov
mov
repz
andl
pusha
cmp
fcomi
lcall
enter
push
or
push
in
pop
mov
mov
or
mov
and
testb
jnp
jg,pt
xor
add
inc
add
lods
adc
in
pop
add
push
mov
push
rolb
ljmp
pop
test
pop
stos
clc
mov
xor
mov
jb
sahf
in
popf
movsb
cmc
mov
cs
push
sbb
fdivrl
popf
stos
jmp
rolb
cmp
dec
mov
lcall
jae
cmp
pop
sbb
pop
in
mov
mov
nop
and
test
cmp
addb
dec
inc
and
mov
gs
in
mov
sbb
dec
adc
aam
sub
sbb
push
lret
xlat
mov
hlt
ss
out
mov
sahf
mov
stos
fs
lcall
add
xor
xor
outsb
lsl
jge
xchg
test
mov
js
ficomps
push
inc
incb
jno
add
pop
rclb
cwtl
xchg
push
or
jae
das
push
rcl
add
lcall
cmp
and
jg
jecxz
inc
jmp
or
xor
mov
xchg
jle
inc
xchg
mov
in
std
cwtl
inc
mov
sub
lods
pop
sbb
sbb
jbe
jnp
dec
add
nop
xchg
out
orb
adc
js
enter
pop
sub
aam
xchg
push
cli
loopne
pop
int
fists
nop
add
inc
bound
cmpsb
inc
aad
outsl
sarb
mov
adc
pop
out
repnz
add
stos
shll
ja
mov
cltd
push
mov
jns
dec
cmpsb
cld
jns
xor
scas
jle
inc
adc
test
int3
scas
lods
sub
jo
cwtl
test
int
adcb
movsl
and
jl
loop
lds
inc
xchg
dec
stos
mov
mov
sbb
into
ds
addr16
fdivrl
xchg
sbb
mov
dec
test
lods
arpl
das
dec
lods
fnsave
xchg
clc
mov
xor
into
outsb
mov
scas
inc
push
sbb
inc
lods
and
add
mov
dec
in
add
sti
add
hlt
test
push
popf
push
je
imul
leave
sbb
sbb
rclb
push
aam
fsts
cwtl
jb
pop
fstps
pop
stos
hlt
out
add
mov
jo
les
jecxz
dec
add
icebp
sar
in
adc
cld
addr16
add
push
loopne
sbbb
xchg
movsl
xorb
gs
sbb
mov
pop
xchg
add
mov
inc
lods
dec
add
movsb
or
mov
jb
xchg
inc
into
and
jae
adc
mov
and
iret
add
loopne
int3
add
es
and
sub
sub
int3
inc
pop
movsl
push
push
mov
jp
add
shrl
in
cmp
or
sahf
dec
xlat
mov
les
cmp
cmc
inc
lock
inc
jb
cmp
adc
rorb
add
mov
inc
sub
mov
mov
adcb
fistl
pop
jnp
cmc
ja
sbb
ret
pop
fs
subb
push
idivb
and
mov
sub
cmpsb
pop
arpl
mov
cmp
jg
pop
xchg
mov
inc
dec
out
std
clc
inc
pop
fdivrp
push
pop
mov
add
push
add
mov
push
mov
repnz
inc
dec
mov
rolb
mov
lahf
das
ficoms
loopne
movsb
aad
and
lea
push
dec
cmpsl
inc
cli
mov
aad
mov
lods
imul
push
fisttps
push
data16
sbb
stos
sahf
negl
jmp
test
inc
aad
or
xchg
or
xchg
dec
or
add
mov
sub
mov
pop
jo
into
sbb
push
push
subl
jp
adc
sbb
dec
popa
imul
fistpll
jo
mov
stos
or
mov
pop
dec
xor
mov
nop
out
jmp
mov
pop
push
jl
call
push
outsl
mov
mov
sbb
lods
aaa
pop
inc
cmpsl
out
jecxz
pop
or
mov
inc
inc
scas
fs
test
scas
in
push
sti
lcall
cmp
iret
sub
mov
pop
xor
fwait
lret
fadd
fiaddl
test
mov
imul
sub
scas
hlt
imul
jo
xor
pop
orb
push
dec
pop
testb
and
inc
mov
daa
mulb
dec
push
or
adc
and
mov
jp
sbb
ret
xor
fisubs
xor
ret
ret
adc
fldenv
aaa
mov
and
mov
subb
and
xor
push
sahf
sub
or
cmpsl
js
push
push
pop
dec
fisubl
adc
and
cmc
dec
pop
and
mov
hlt
int
mov
jo
sbb
mov
fidivrs
scas
jae
mov
mov
int3
stos
out
ljmp
inc
shlb
lds
movsl
push
ret
call
cmp
fisttpl
cmpsl
lea
jecxz
aam
jge
fadds
push
xchg
adc
cmp
adc
insl
repnz
add
in
in
pop
unpckhps
mov
ret
sti
out
in
mov
cmp
and
popf
fimuls
test
add
inc
xchg
xchg
or
adc
out
nop
pcmpgtw
js
aas
test
mov
loopne
dec
sub
enter
push
stc
sarb
mov
ret
aad
adc
cwtl
mov
je
jecxz
push
test
cmc
or
jae
stc
sbb
mov
repnz
pusha
movhps
vaddsubps
adc
jle
fisubl
inc
xchg
xchg
add
mov
mov
sti
ret
push
cmp
xor
push
sub
ds
cli
add
pop
dec
dec
add
sub
adc
ljmp
lock
rcrl
mov
test
out
sbb
scas
push
fistl
js
xchg
fbstp
test
sbb
inc
dec
dec
adc
ficompl
add
jne
jg
mov
xchg
insl
ret
ljmp
lea
movb
cltd
loopne
pop
pop
cld
popf
and
ret
lcall
outsl
or
jo
push
xchg
jg
mov
push
fwait
sub
scas
and
cmp
cltd
fs
or
sbb
jecxz
addb
sub
push
lcall
test
ljmp
dec
or
or
mov
pop
dec
adc
adc
ret
and
adc
je
and
in
test
dec
imul
push
out
or
es
ret
gs
mov
cltd
bound
inc
and
mov
pushf
movsl
push
sbb
sbb
stc
shr
pop
sub
cmpsl
xchg
insl
pop
enter
arpl
xchg
xchg
mov
shrb
mov
cmp
pop
cmp
cmpsb
out
mov
adc
push
add
xchg
sub
fs
fsubrl
dec
lock
add
and
aaa
out
adc
stos
sbb
es
ds
xor
rol
iret
sbb
xchg
lahf
iret
mov
sub
or
and
loop,pn
xchg
addr16
pop
pop
xor
cmp
sub
mov
add
sub
adc
jecxz
pop
repnz
in
fnstcw
dec
mov
call
sub
xchg
adc
leave
pusha
sbb
inc
fsubrs
or
inc
push
inc
sub
cli
repz
and
add
xor
repz
in
dec
add
xchg
sbb
jp
stc
repz
jecxz
and
mov
sbbb
fs
cmp
mov
jae
movsl
adc
or
nop
dec
shrb
and
sahf
sbb
sti
sbb
sub
in
sbb
mov
pop
mov
inc
repnz
scas
mov
js
push
cli
or
dec
fldl
test
dec
push
ret
icebp
cmpsb
dec
das
stos
add
add
sti
lds
xor
push
or
dec
cmpsl
fwait
pop
and
outsb
and
movsb
pop
xchg
frstor
jecxz
in
ds
inc
xchg
popa
sbb
scas
out
cmpsb
pop
jo
mov
or
sub
mov
lret
sub
addr16
fnstsw
or
int3
inc
mov
cwtl
fiaddl
adc
jb
jp
or
mov
gs
imul
xor
sub
inc
das
sbb
or
push
or
das
clc
pop
fwait
movsl
inc
inc
repz
xor
xor
sub
mov
clc
mov
or
add
xor
and
ror
rcr
ljmp
mov
mov
pop
jo
pusha
jp
or
sbb
sub
cmp
lret
lock
mov
mov
pop
jo
pusha
jp
or
sbb
sub
cmp
lret
lock
mov
mov
pop
jno
pusha
jp
or
sbb
sub
cmp
lret
pop
ljmp
dec
push
pop
inc
and
xor
add
adc
sarb
pop
in
adc
xchg
and
aam
aam
and
xor
add
adc
fs
lds
in
adc
lcall
aaa
aam
cmp
mov
movsl
jge
insb
lds
in
mov
in
and
cwtl
pop
andl
pop
fiaddl
hlt
aaa
adc
das
xchg
loope
mov
or
xchg
cmc
into
sbb
in
movsl
ret
lret
add
dec
push
je
shl
movsl
and
popf
cli
js
push
mov
in
les
enter
push
leave
cmpsl
pop
lock
mov
or
call
sbb
in
or
and
jns
movsl
fwait
aam
lds
into
mov
mov
imul
hlt
mov
je
mov
pop
fwait
aam
rorb
loopne
data16
jmp
fs
inc
hlt
mov
int3
add
jp
shr
pop
fwait
mov
pop
add
stc
and
cmpsl
add
aam
in
xchg
sub
movsl
jae
lds
in
adc
lea
fidivs
or
cli
push
test
pusha
int3
pop
mov
push
mov
jo
jno
pop
lock
xor
ss
mov
xchg
xlat
or
pop
in
insl
shll
push
aad
in
lahf
cs
mov
inc
fcompl
push
aad
lds
in
adc
xchg
and
les
gs
xor
add
adc
fs
lds
in
adc
xchg
and
les
gs
sbb
mov
sbb
jns
mov
pop
push
cmpsb
mov
ret
mov
adc
out
dec
scas
dec
out
lahf
das
insb
ljmp
loop
adc
xor
xor
or
stos
push
pusha
aas
mov
or
shl
hlt
dec
add
sub
fstpt
inc
xor
cwtl
fnstenv
pop
insb
in
or
sbbb
loopne
xor
out
stos
mov
dec
mov
xchg
jmp
adc
sbb
lods
xchg
loop
cmpsb
mov
adc
fisubs
lods
xchg
imul
mov
mov
add
mov
movsb
cmp
or
push
bound
into
xchg
popa
data16
pop
push
out
fdivrs
out
add
rcll
aaa
pop
push
mov
mov
jnp
fldl
lods
popl
cmp
data16
jnp
pop
dec
sahf
add
xchg
stc
mov
xchg
mov
add
inc
ljmp
push
push
add
xor
ss
imul
jo
out
and
ds
enter
adc
movsb
nop
insl
add
jbe
lods
roll
arpl
lretw
fsts
int3
or
je
sub
adc
cmp
xchg
addl
mov
mov
mov
ss
sbb
inc
mov
mov
scas
mov
inc
int3
xchg
pop
les
fnclex
xchg
enter
outsb
add
push
pop
add
push
out
sub
adc
mov
cmp
pusha
add
xchg
jge
fwait
adc
cmp
loope
out
dec
orl
cmc
push
test
mov
fiadds
sbb
ds
cmp
lahf
mov
loopne
fmull
shlb
push
bound
pop
dec
dec
push
or
pushf
mov
ja
jl
clc
jnp
repz
add
testl
pop
pop
and
sbb
push
imul
mov
mov
mov
jo
dec
pop
ja
xor
adc
shll
lret
and
pop
mov
out
push
push
scas
and
cli
push
mov
movsl
subb
das
test
mov
lea
push
jle
fildll
ror
loope
repnz
addr16
stos
mov
dec
push
pop
imul
loopne
mov
cwtl
jle
sbb
fs
aam
mov
mov
mov
mov
lods
push
or
jmp
xor
aaa
mov
dec
add
mov
xor
add
mov
inc
jnp
aam
lods
cli
int3
faddp
cltd
movsb
push
add
push
jne
adc
xchg
jp
pop
and
cmpsl
cmp
dec
in
fs
sub
popf
jns
dec
jmp
mov
push
out
outsl
stos
data16
mov
rol
or
insl
sarb
gs
popf
adc
orl
or
icebp
mov
hlt
daa
mov
inc
jecxz
cmpsl
adc
cmp
jnp
scas
ljmp
pop
pop
fsubrp
xor
imul
cmp
call
fisubrl
push
sbb
es
cltd
and
xorl
sub
sub
push
aam
mov
adc
xchg
cwtl
cmp
xchg
aaa
out
pop
dec
cmpsl
pop
out
pop
xchg
sub
lret
push
out
shrb
fcmovbe
dec
cmpl
adc
xchg
enter
pop
and
mov
xlat
sbb
jmp
ljmp
or
pop
hlt
hlt
leave
sbb
test
loope
and
cmp
inc
push
lret
out
mov
addr16
sarb
sbb
or
sbb
hlt
sub
fistl
xchg
push
push
pop
fwait
das
aad
imul
push
ficompl
mov
dec
sbb
jg
jo
dec
andb
fidivs
or
xor
jl
mov
adc
nop
pop
fstpl
sub
pop
xchg
pop
ret
fldl
data16
jo
cli
xor
lods
add
mov
enter
dec
cmp
mov
inc
out
jmp
aam
sbb
xchg
fstp
sub
outsl
jno
jg
test
mov
pop
test
dec
jge
lret
mov
xchg
ja
lret
jo
jno
mov
outsl
imul
push
jl
movsl
pop
mov
xchg
mov
inc
test
popa
sub
sub
inc
fistpll
dec
dec
scas
jns
movq
xor
lret
inc
int3
imull
add
adc
sar
ds
pop
lcall
sahf
cmpsb
shrd
mov
pop
int
ds
std
or
movsb
sub
test
cwtl
movsb
pop
mov
mov
add
mov
daa
loope
scas
sub
mov
cmp
pop
lret
add
adc
mov
aad
pop
cmp
mov
mov
xchg
and
int3
pop
mov
inc
cwtl
add
movsl
and
iret
pop
sub
icebp
ja
sub
adc
xor
stos
dec
mov
fcomps
inc
jle
pop
movsb
pop
mov
mov
mov
aas
pop
adc
cli
pop
add
lds
lret
push
rdseed
pop
out
clc
pop
scas
call
sub
ficoms
repnz
mov
mov
enter
nop
jl
cmp
pop
in
adc
out
xchg
xor
test
mov
xchg
aas
out
fwait
idivb
push
mov
clc
pop
scas
mov
xor
rolb
pop
aad
and
inc
sti
add
sbb
fmuls
ja
xor
inc
sahf
pop
pop
lods
cltd
ja
call
xchg
aam
mov
pop
push
mov
push
jecxz
scas
add
cli
in
in
push
mov
lods
mov
xlat
mov
repz
cld
clc
and
adc
pop
dec
rorb
jae
mov
and
in
pop
cwtl
das
test
fisttpll
mov
cmp
aad
fcomi
jo
repz
repnz
les
jns
mov
cmp
into
mov
mov
in
jg
mov
in
and
stos
cs
mov
imul
inc
mov
adc
mov
scas
jge
adc
mov
dec
rorl
lds
or
cmp
adc
mov
cmp
fisubs
fdivs
loopne
cwtl
pop
imul
xchg
push
and
sahf
movl
lds
faddl
cmpsl
aas
add
sahf
es
sbb
xor
das
mov
pop
pop
cli
xlat
movhps
fnstsw
ret
sub
pop
and
and
mov
push
iret
add
mov
sub
sti
mov
xor
out
xchg
mov
cmpsb
sbb
jp
fdivr
add
mov
jmp
cmp
data16
xchg
xor
int
xchg
jmp
pop
lods
dec
shlb
mov
scas
inc
adc
fmull
mov
mov
repnz
mov
mov
sub
cmp
adcl
push
jns
in
fisubrl
jns
clc
cli
test
adc
cs
cwtl
in
test
pushf
pusha
mov
rol
inc
aad
dec
decb
sbb
sbb
aas
cmc
movsl
aad
sbb
cltd
fsts
sbb
movsb
rcrb
sub
int3
in
lods
std
into
or
jmp
dec
or
sbb
xchg
dec
call
lahf
clc
outsl
xor
fistpl
lahf
jle
loop
mov
gs
shrb
negl
ds
pop
adc
outsb
and
lock
fiaddl
jb
mov
jae
rcl
pop
xor
xchg
lahf
mov
dec
les
aam
lock
jo
dec
ja
dec
cltd
mov
cmpsb
iret
dec
pushl
mov
fnstenv
nop
mov
in
mov
loopne
or
test
jnp
pause
dec
add
cmp
mov
mov
pop
popf
lods
dec
outsl
mov
jae
repz
lcall
movsb
sti
incl
imul
loop
in
fcmove
cmp
pop
lahf
daa
mov
nop
aas
sbb
jl
xlat
in
faddl
clc
cmp
dec
lret
arpl
sub
cld
bnd
sbb
in
inc
xor
pop
xchg
test
es
xchg
aas
sbb
and
jmp
mov
scas
les
and
shrl
sub
adc
jbe
je
and
pop
xchg
movsl
popl
test
jg
jb
sbb
out
fcoms
dec
pop
or
dec
sbb
jmp
pushf
in
cltd
cld
std
js
pop
jge
into
lcall
pop
push
pop
sub
jp
dec
adc
enter
xchg
pushf
mov
fwait
movl
or
mov
mov
dec
push
push
jge
insb
sbb
jo
stos
inc
mov
sub
push
mov
mov
aam
fbstp
cmpl
and
mov
sbb
daa
ret
cmpsb
stc
mov
scas
sbb
inc
in
fbstp
add
lahf
test
hlt
stc
mov
std
jmp
mov
dec
out
adc
inc
lods
mov
mov
sub
cwtl
dec
or
aad
mov
mov
in
and
and
sub
jno
add
adc
adc
xchg
loopne
adc
out
adc
es
xor
shl
push
fs
and
jg
leave
or
or
jge
push
lahf
or
bound
jns
dec
xchg
inc
std
mov
out
out
xchg
pop
into
int3
mov
loopne
ja
fwait
xlat
cmc
jnp
out
test
popf
xchg
mov
aas
and
sbb
push
add
mov
mov
mov
sub
xchg
push
push
xchg
lcall
inc
mov
lahf
arpl
dec
push
jl
and
roll
cmp
and
paddusb
mov
xchg
shlb
inc
mov
lcall
outsl
and
add
out
movsl
ja
popa
and
iret
cmp
cmpsb
icebp
pop
shl
pop
rorl
push
inc
ljmp
fbstp
aad
mov
adc
mov
pop
lahf
mov
dec
fnstenv
xor
in
pop
dec
jbe
mov
pop
leave
test
addr16
out
scas
ret
and
xchg
adc
into
pop
mov
test
inc
bound
add
inc
xlat
lcall
cmp
sub
std
cwtl
sub
iret
hlt
std
mov
xchg
les
cmpsl
or
mov
mov
in
negl
jne,pn
mov
movsb
push
mov
push
mov
push
xor
ja
cmp
jmp
in
rol
ja
inc
push
sub
stos
dec
mov
mov
jnp
es
dec
sbb
pop
xchg
mov
mov
gs
push
sub
cs
sbb
jmp
add
xor
sahf
and
fstpl
cmp
jae
jmp
mov
mov
xchg
jg
mov
xchg
mov
test
cmp
pop
sahf
ljmp
pop
xor
cmp
jb
inc
lret
das
pop
mov
cmpsl
jle
xchg
sbbb
and
inc
fdiv
mov
mov
sub
aad
and
and
in
lds
push
lock
movl
and
hlt
sti
cmpsb
aad
mov
loop
mov
or
mov
cmp
add
xor
inc
repnz
int
cmp
or
repnz
mov
idivl
cmp
aam
data16
push
js
inc
jmp
fcmovnbe
sarl
repz
rcrb
add
adc
mov
pop
hlt
mov
test
sbb
lods
dec
fcomi
jne
fsubs
dec
sbb
xchg
push
push
lock
lret
cs
jo
stc
lret
inc
cs
subb
mov
sub
sbb
inc
dec
mov
in
je
push
addr16
adc
xor
iret
hlt
mov
inc
push
stc
loopne
sbb
repnz
scas
sbb
add
jle
sub
jae
push
int
in
sub
mov
addl
and
mov
jg
jbe
lahf
ficomps
xor
dec
lcall
push
mov
and
push
xchg
insb
ja
and
mov
mov
or
scas
ljmp
mov
lcall
jmp
inc
or
and
cmp
pop
stc
xlat
out
xor
pop
push
ret
test
pop
jmp
jae
ficoml
pop
push
jne
sbb
lods
and
mov
add
fidivrl
pushf
cld
into
pop
imul
jne
test
mov
lock
aam
and
aaa
mov
insl
outsb
sbb
sahf
pop
dec
push
addl
mov
lahf
sub
pop
movb
iret
lcall
or
iret
dec
jle
adc
mov
pop
jmp
insl
scas
mov
xchg
push
push
ret
fstpl
repz
in
insl
roll
cwtl
cmpsb
js
jae
inc
adc
out
movl
call
and
test
jmp
aaa
mov
add
xchg
incl
enter
xchg
cmp
jbe
test
jge
imul
cmc
xor
or
addr16
mov
loopne
jbe
call
or
scas
xchg
out
mov
out
int3
xchg
loop
or
mov
repnz
push
mov
pop
in
xor
cmp
and
imul
xchg
jge
rcl
testl
push
push
cmp
out
arpl
mov
pop
fwait
and
adc
adc
mov
lea
popf
jle
cwtl
in
repz
xchg
mov
cmpsb
jle
push
mov
cs
jae
push
lahf
or
xchg
test
roll
sti
lods
fisubrs
pusha
pop
pop
mov
popf
stc
iret
jle
dec
loopne
mov
ret
sbb
push
mov
stos
arpl
or
int
movsb
mov
rclb
dec
rcrl
int
shlb
adc
jmp
mov
or
inc
cmp
mov
loope
add
or
mov
movsb
shld
fcmove
or
iret
mov
cmc
imull
xor
pop
xchg
cmpsl
cltd
sahf
andb
push
mov
lods
mov
add
ret
jo
rorb
mov
incb
xchg
xchg
imul
hlt
sbb
stos
rolb
mov
movsl
adc
shrb
nop
test
adc
jecxz
cmp
cmp
scas
dec
fsub
add
adc
fidivrs
jg
add
jp
mov
cmp
jge
pop
stos
lret
or
jecxz
mov
sub
cli
jge
pop
jle
adc
cmp
mov
mov
adc
pop
mov
xchg
dec
pop
jns
loop
iret
mov
out
sti
mov
push
inc
stos
mov
mov
mov
daa
ja
inc
into
jae
cli
bound
pop
mov
incb
mov
xchg
pop
add
lock
push
hlt
dec
ja
adcl
pop
mov
ja
cmp
mov
push
xlat
xorl
popa
popf
mov
xor
pop
dec
lock
dec
mov
adc
popf
lds
ljmp
push
xchg
jae
rorb
pop
call
fadd
jg
test
addr16
inc
gs
cmp
in
mov
inc
insl
mov
mov
in
pop
or
push
adc
pop
orl
cld
inc
pop
pop
mov
cld
adc
pop
decb
pop
notb
or
sub
popa
loopne
fnsave
cmp
icebp
pop
fistps
cwtl
mov
out
mov
cmp
daa
xchg
scas
push
push
pop
fdivrs
in
outsl
or
jmp
imul
pop
push
xchg
ds
pushf
jge
xor
sahf
inc
sub
xchg
and
leave
inc
add
dec
mov
bound
cmc
cmp
mov
sbbl
inc
mov
out
les
aas
fsub
pop
push
xor
stos
xor
out
addr16
mov
cmpsb
es
or
mov
mov
sahf
dec
jnp
mov
add
xor
mov
sub
xorl
pop
adcl
jge
adc
daa
in
std
ds
lods
mov
sbb
bound
mov
jle
cmp
adc
push
out
mov
xchg
mov
add
rclb
xchg
cmovnp
sub
mov
scas
cmp
mov
adc
outsb
add
jl
jae
add
sbb
insl
inc
adc
std
leave
xor
sub
dec
mov
dec
cmpsb
push
idivb
add
push
pop
outsb
dec
fs
mov
inc
cmp
int
rcll
test
inc
ret
xlat
cmp
ss
or
enter
pop
punpckhwd
push
cmp
divps
mov
sti
and
mov
cmpsl
cmpsl
mov
inc
lcall
mov
mov
add
sub
push
inc
je
jmp
into
cmc
sbb
test
or
pusha
push
inc
dec
ds
stos
xlat
das
out
add
cmp
cld
cmp
sub
test
in
dec
cltd
nop
jo
add
icebp
jge
movsb
or
mov
cmpsb
cmp
stos
xchg
sub
imul
fs
xchg
aas
cs
int3
push
jge
xor
clc
ret
dec
pusha
add
ret
cmp
push
pop
dec
sub
repz
pop
mov
mov
out
data16
mov
jg
jbe
loopne
xor
sbb
sbb
rep
outsb
insb
mov
ret
ret
jb
or
clc
rorl
add
imul
xchg
mov
lds
cmpsl
xchg
xor
shl
in
and
test
xchg
std
lods
insb
or
push
fld
pop
test
jno
sub
jmp
adc
pushf
dec
push
icebp
iret
jae
cld
lods
sbb
cmc
ret
dec
or
jno
iret
repz
lock
ljmp
inc
sub
pusha
orl
xor
sahf
mov
inc
sti
pop
hlt
dec
sub
mov
cmp
or
dec
dec
in
jl
bound
add
push
leave
ret
xor
xor
call
inc
cmc
jmp
cmc
int3
or
push
cmp
aas
in
test
or
sub
imul
int
into
lahf
jle
scas
out
mov
adc
rcll
andb
js
pop
stos
insb
and
std
shr
or
xchg
and
fwait
jns
cli
jmp
xor
mov
pop
fisubrs
pusha
pusha
sub
lret
cmpsl
aaa
adc
mov
es
dec
xlat
jno
xchg
in
push
and
frstor
adc
xchg
hlt
test
test
pop
inc
inc
nop
aad
jb
pop
divl
fucomi
add
sbb
xor
pop
push
out
push
mulb
std
nop
jae
mov
in
bound
adc
xlat
and
aam
pusha
test
bound
mov
jae
pop
and
mov
out
dec
fstl
jbe
xor
mov
xor
andl
jne
lret
xor
sub
sbb
pop
fadds
arpl
pop
add
cmp
dec
mov
sub
dec
fmul
pminsw
outsb
es
idiv
inc
fistpll
lret
cmp
fcomip
sub
and
shl
add
mov
stos
mov
push
jb
lret
fdiv
xchg
cwtl
nop
push
pop
div
shll
test
cltd
jo
hlt
push
insl
pop
shlb
or
sub
sbb
out
mov
xchg
push
cmc
push
js
dec
shlb
jl
xor
mov
fcmovnu
sub
jl
scas
mov
sub
lods
pop
lcall
fcomp
imul
push
xorb
pop
cmp
rol
fcmove
incb
push
cmp
notb
scas
push
imul
std
pop
sub
or
or
dec
test
adc
dec
mov
inc
imul
inc
or
sbb
test
sub
mov
sbb
pop
jns
push
cmc
into
jbe
push
sub
push
jg
stc
stc
dec
call
insb
mov
stos
adcb
cmp
and
mov
pushf
pop
mov
aas
sbbl
xor
js
mov
movsl
imul
jp
pop
jmp
jae
iret
or
dec
out
inc
sbb
scas
jne
enter
jae
inc
sqrtps
dec
popf
lods
shll
imul
xchg
ss
addr16
jmp
mov
or
lea
mov
adc
fwait
adc
adc
stos
adcl
dec
punpcklbw
jl
push
xchg
bound
int
or
push
imul
inc
mov
pop
mov
ret
movsb
and
shlb
fists
adc
fs
lds
in
adc
xchg
and
les
gs
xor
add
adc
fs
lds
in
adc
xchg
and
les
gs
xor
add
adc
fs
inc
inc
cmc
push
in
xchg
mov
test
cmc
inc
les
gs
test
aad
aam
pop
adc
xchg
push
xchg
fnstsw
mov
lcall
add
add
ljmp
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
das
bound
or
sbb
insb
jbe
pop
insb
push
jb
loopne
pop
repnz
pushf
shr
mov
int3
xchg
dec
bound
pusha
inc
sbb
insb
and
add
loop
repnz
ret
lods
mov
fcoml
sahf
inc
les
and
push
add
fcompl
rolb
out
xchg
inc
bound
or
jne
push
add
jmp
cmpsl
rol
adc
enter
shrb
mov
lods
inc
int
push
rcrl
pop
pop
enter
pusha
rcll
bound
outsb
shlb
movsb
jns
or
movsl
jne
mov
cli
and
cld
mov
loopne
lock
push
jae
inc
lock
xchg
and
jmp
inc
lods
sarl
adc
cld
loop
jl
mov
pushl
mov
subl
mov
fabs
test
adc
shl
mov
daa
xchg
jmp
imul
popa
pop
scas
inc
int3
xchg
fists
or
sbb
mov
add
dec
add
adc
es
ret
movsb
mov
inc
cmovle
add
jae
addr16
bound
stc
mov
movsl
add
cmp
jge
add
insl
or
lret
cmpsl
out
sahf
mov
frstor
xor
insl
ss
es
dec
jl
dec
add
loop
repnz
pushf
shr
mov
fcoml
or
sbb
insb
and
add
loop
repnz
pushf
shr
mov
fcoml
into
mov
andl
insb
ss
cltd
mov
jno
sbb
adc
adc
fdivrl
adc
int3
or
test
dec
cli
and
cwtl
jne
xor
mov
int3
adc
mov
jns
mov
sub
mov
xchg
stc
in
fdivrs
ret
add
jne
mov
or
mulb
aas
in
push
fsubrl
push
dec
jle
orl
lret
xchg
mov
mov
pop
imul
es
iret
std
mov
scas
and
sub
dec
cmp
rcll
xchg
fcoml
outsb
cmpsb
xchg
rcl
mov
push
pusha
cmp
pusha
sbb
test
push
in
sti
inc
add
adc
cmp
jns
mov
pop
push
mov
xchg
mov
inc
gs
xchg
xor
cmc
cwtl
dec
and
cwtl
cmpsb
mov
or
push
sti
pop
lret
push
push
pop
jl
cld
test
pop
test
sbb
je
pop
dec
sbb
cmc
inc
sarl
test
std
popf
loopne
test
gs
iret
dec
mov
fisttpll
lret
jmp
test
aas
pop
cmp
bound
dec
lods
xchg
push
jle
and
jb
xor
jae
test
xor
and
stos
adc
sub
sti
mov
mov
xchg
push
push
add
insl
subl
mov
icebp
fimull
idivl
lock
sbb
popf
jae
imul
cmp
lcall
iret
jp
imul
rcl
sti
sar
jmp
stc
sbb
jp
mov
lahf
jg
or
repz
mov
loopne
je
sarl
insb
cmpsb
xchg
push
adc
popf
mov
push
xchg
sbb
or
sbb
idivb
sbb
inc
mov
mov
mov
push
nop
add
fs
pop
loopne
pusha
jnp
cli
sbb
xchg
sbb
jnp
xor
in
ret
cmp
mov
pusha
fstl
fidivs
adc
aad
aad
xor
inc
pop
faddl
int
add
push
out
lahf
cmp
cmp
sub
or
cmp
movb
mov
bound
int3
jns,pt
pop
je
cmpsl
aaa
mov
inc
sbb
mov
cs
adc
pop
jle
fdivr
lds
mov
pushf
xor
mov
popf
pop
mov
testl
rorl
cs
dec
jno
jnp
fiadds
shlb
xor
cmp
jl
push
jp
pop
sub
movsb
pop
repnz
fadd
sbb
out
cmpb
push
pop
fsubp
movsb
out
lds
cmc
je
out
xchg
lea
mov
fisubs
adc
aad
fcomps
jg
int3
mov
ret
jb
pop
in
adc
sahf
rcrb
and
mov
xchg
adc
test
or
dec
lcall
sub
orl
repz
inc
aam
or
mov
sti
fsubrl
add
dec
pusha
push
mov
xchg
dec
addr16
fsubrl
outsl
repnz
inc
hlt
sbb
icebp
sub
inc
fistpl
pop
push
out
pop
enterw
mov
push
out
in
das
push
out
or
ret
out
dec
leave
popa
data16
aam
jle
lods
jo
mov
mov
andb
insl
dec
xor
mov
repnz
frstor
rcrb
pop
cs
mov
faddp
les
pushl
ss
cltd
xchg
push
mov
data16
ficoml
lods
xlat
push
into
rolb
loop
aaa
lds
sbb
xor
xchg
push
jl
hlt
loop
pushf
fisttpl
inc
aam
cmc
cmp
dec
cmp
pop
adc
stc
lret
jle
test
inc
icebp
int
arpl
out
mov
js
sbb
mov
lea
andb
in
data16
les
mov
push
jl
lock
outsl
fmull
push
adc
fnstcw
pop
adc
iret
ja
imull
push
movsb
vmovq
cli
mov
fwait
dec
stos
fcoml
and
inc
fwait
dec
lcall
sti
xchg
enter
xor
dec
out
pop
sub
xchg
out
in
add
gs
cwtl
lea
xor
or
call
inc
pop
out
lock
pop
shr
pop
mov
xor
dec
scas
cmp
or
jo
roll
jl
test
in
in
adc
jb
js
cmp
xchg
xchg
or
outsl
xchg
lds
and
push
mov
pop
jo
pushf
add
sub
or
ficomps
lods
add
adc
cmp
and
sarb
outsl
jle
jns
mov
cwtl
push
or
fwait
ds
mov
outsl
push
mov
or
dec
mov
icebp
sub
add
out
jb
cmc
sub
jecxz
and
mov
das
cs
cmp
or
jo
add
test
sub
leave
out
stos
out
pop
pushf
and
add
repz
or
pushf
fimuls
jbe
xchg
xchg
rorb
loopne
cmp
and
decb
push
mov
jns
sub
fadds
cwtl
and
popa
insb
lock
aas
and
es
jge
lods
int3
inc
jae
bnd
popf
out
into
in
dec
lcall
cmpb
mov
push
into
jecxz
push
movsl
stos
and
mov
mov
rcrl
imul
shl
jmp
pop
cmp
xor
jno
mov
je
mov
lahf
sub
mov
aas
dec
jae
pushf
mov
mov
ss
mov
or
pop
mov
and
mov
fucom
movsl
lret
imul
lcall
cs
sbb
ljmp
test
mov
pop
sub
scas
int3
popf
mov
adc
int
imulb
jo
push
std
ds
or
loop
inc
call
insl
mov
add
pop
adc
xchg
xor
adc
adc
movsb
dec
fadds
inc
mov
inc
mov
jge
stos
insb
lods
test
cmpsb
rcll
aas
jb
inc
cmp
mov
add
loop
test
inc
jmp
pop
movsl
mov
in
addr16
mov
imul
adc
in
leave
push
mov
loop
insb
in
xchg
lock
pop
xor
pop
sub
or
or
ss
lock
aam
pusha
shlb
mov
jns
lahf
jno
and
mov
fstpt
mov
xchg
xor
stc
sub
rolb
insb
adc
mov
mov
mov
or
jg
jno
mov
sub
mov
popf
jbe
mov
mov
adc
mov
xchg
icebp
repz
dec
sub
clc
lock
dec
lds
push
arpl
dec
clc
cmpsb
mov
dec
cmp
shlb
jo
add
xor
inc
int3
pop
sub
shll
mov
or
pop
dec
or
insl
lea
loop
sahf
lods
and
add
pop
lds
in
or
pop
inc
mov
adc
out
jno
jmp
into
iret
stc
cmp
jno
in
bound
ja
inc
dec
pop
mov
in
xor
push
sbb
sbb
inc
test
scas
sub
xchg
ds
rclb
mov
cwtl
dec
xor
mov
stos
scas
jp
push
sub
loope
push
scas
pop
jne
or
fisubs
gs
ds
dec
arpl
out
inc
daa
xor
cmp
lods
clc
lock
cmp
mov
dec
scas
pop
hlt
mov
adc
xor
mov
test
jnp
mov
and
rcr
pop
xchg
icebp
mov
loop
xor
ficompl
ret
insb
xchg
aam
movsb
pop
sti
xchg
popa
push
jl
mov
aaa
cmc
xchg
and
into
mov
fsubp
mov
in
loopne
nop
pop
loop
dec
mov
xor
ret
addr16
pop
cs
push
sarl
mov
out
sahf
mov
jo
adc
daa
sbb
jecxz
mov
outsb
scas
dec
push
mov
test
lods
lahf
push
push
and
cmp
cmp
cmpl
push
ds
mov
popfw
cmp
aam
xchg
and
out
lods
xchg
call
push
sti
pop
scas
lahf
jp
aaa
pushf
iret
dec
sub
lods
fidivs
sbb
vcvttsd2si
mov
xor
stc
xchg
cmpsb
jo
xor
addr16
push
shll
ret
in
js
shlb
sar
into
out
pop
or
fimull
mov
insl
loopne
jo
pop
mov
adcb
mov
ret
jno
lcall
mov
sbb
cmpsb
push
and
mov
mov
lret
movsl
dec
xchg
sbb
push
cmp
fisubrl
mov
add
lahf
push
pop
mov
sub
jle
lock
lret
ss
sub
sahf
xchg
xchg
or
pop
dec
enter
cmc
mov
jne
mov
repz
iret
inc
ss
pop
sub
pop
sti
js
push
inc
test
inc
repz
das
orb
int
xchg
out
xchg
pop
orb
xchg
stc
lock
mov
loop
repnz
scas
mov
out
dec
inc
pop
sbb
loop
xor
xor
rcr
ja
test
mov
or
or
push
push
sub
and
rcl
sbbl
push
lods
jo
aad
push
movsb
pushf
add
jb
ljmp
mov
jmp
add
or
sub
dec
lods
dec
inc
daa
inc
loope
adc
aas
mov
pop
ret
movups
xchg
test
mov
gs
negl
test
and
mov
movsb
push
daa
lods
mov
aaa
push
mov
xor
dec
nopl
mov
mov
mov
mov
subb
int3
push
rcrl
sub
jns
inc
adc
mov
mov
inc
fcompl
xor
sbb
mov
cmp
dec
and
xchg
arpl
js
cmp
out
pop
pushf
arpl
dec
or
out
lret
sub
shll
mov
jg
sbb
pop
ss
xchg
jmp
fsts
sub
sarb
xchg
ljmp
les
adc
pop
jge
adc
sbb
ss
push
mov
loope
pop
xor
sub
mov
jbe
cmp
das
and
pop
lock
mov
cmp
scas
and
les
or
lret
mov
sbb
aad
push
cwtl
adc
ror
xchg
push
in
or
mov
jbe
nop
fmull
sub
mov
xor
testb
xchg
imulb
pop
push
popl
xchg
lahf
mov
xor
and
sbb
mov
cwtl
mov
xchg
fisubrl
push
adc
in
xchg
js
inc
and
cs
cld
mov
adc
or
flds
js
je
mov
cltd
lret
xor
add
dec
xlat
aam
push
xchg
sub
dec
dec
dec
fildll
push
push
outsl
out
cmpsl
mov
pop
mov
fisubrl
jnp
in
inc
push
push
dec
sub
mov
inc
lret
jle
cmp
and
ljmp
outsb
xchg
lahf
pop
clc
mov
mov
aaa
incl
fistl
mov
andl
pop
jo
pop
stos
lret
mov
dec
js
out
std
insb
lods
mov
adc
addr16
mov
push
add
jnp
ss
sub
lcall
scas
pop
adc
cmp
mov
cmc
push
ja
pop
mov
add
scas
jno
nop
nop
mov
xor
cmpsb
ljmp
call
or
xchg
pop
int3
fdivrl
loopne
cmp
jnp
in
nop
push
hlt
dec
mov
sahf
in
xchg
jp
sbb
inc
add
and
fs
xchg
cmpsl
jge
lcall
shl
call
scas
ss
lock
inc
aaa
les
sub
sub
xchg
inc
push
rclb
stc
add
or
pop
pop
call
jbe
or
sub
jmp
xlat
dec
sub
push
imul
inc
arpl
inc
dec
xor
test
fstl
mov
sub
xchg
pushl
mov
pop
test
pushf
leave
jmp
xor
xor
sub
idivl
push
jns
dec
mov
adc
cld
divb
mov
xchg
fsubl
mov
adc
xchg
pop
ljmp
mov
test
dec
aad
add
push
lret
pop
cmpl
sub
or
lret
mull
in
dec
mov
or
sub
imul
and
out
cwtl
mov
push
js
lret
cmp
or
mov
add
adc
mov
dec
cltd
lret
and
lret
mov
popl
lahf
in
xchg
mov
inc
hlt
mov
and
mov
call
fdivrl
scas
dec
jg
pop
pop
ja
add
push
xchg
mov
xor
jb
shll
mov
inc
sti
popa
lea
adc
std
xchg
lcall
rolb
inc
bound
adcl
aad
clc
mov
jb
jbe
in
sub
push
sarl
aaa
sub
inc
mov
cmc
pop
in
fxtract
jp
jae
jmp
push
push
sbb
sub
xor
jmp
bound
into
add
leave
nop
sub
sti
fxch
xor
pop
or
jo
pop
les
push
add
mov
ja
jmp
popf
arpl
sbb
stc
insb
sbb
pop
aas
dec
in
stos
leave
imul
test
lods
add
sub
sarl
lock
add
outsb
pop
jg
jp
sub
sub
ljmp
sub
dec
out
faddl
cmp
fsubl
cmpl
push
lea
push
sahf
std
cmc
cli
call
ret
pop
popa
or
xchg
xor
into
mov
jge
sbb
xlat
push
and
jg
loop
lcall
inc
mov
lcall
push
setl
in
and
cli
pop
add
adc
shl
int
jns
fbld
stc
push
dec
or
lahf
aam
xor
mov
test
sarl
mov
xchg
divb
mov
dec
cwtl
lods
adc
sub
hlt
inc
pop
add
les
ror
or
adc
sub
xchg
clc
pop
cmp
inc
push
jb
ficomps
sbb
and
push
push
inc
in
xor
scas
push
int
repz
push
aam
sarl
dec
jge
push
mov
add
push
xor
sbb
arpl
inc
jmp
sbb
out
mov
pop
lods
pop
js
popa
jbe
ja
shlb
ss
stos
lahf
dec
and
jmp
adc
mov
mov
jne
or
push
add
inc
out
scas
jnp
iret
pop
and
jno
xlat
paddsw
lcall
push
repnz
shlb
stos
cmp
or
xor
imul
fisttpl
push
popf
jle
cli
xor
or
push
mul
out
jne
int
cli
mov
push
out
repz
inc
xor
push
jge
mov
and
add
pop
popf
enter
sahf
sub
and
pop
cmpsb
dec
adc
mov
in
push
lcall
ret
and
mov
fcoml
add
fimuls
fisubrs
loope
aaa
sbb
test
inc
aam
adc
imul
add
and
test
jae
cmp
and
xchg
aaa
movsb
repz
push
sbb
scas
and
in
test
mov
aas
sbb
cltd
roll
insl
js
fnstsw
lahf
sbb
dec
imul
lret
sbb
jmp
adc
sbb
ret
add
lret
pop
push
cmp
dec
adc
pop
dec
inc
aaa
jge
rorb
inc
fistl
push
xchg
push
jns
addb
xor
cwtl
movsl
aam
inc
lret
jmp
popa
xchg
adc
xlat
leave
jge
jne
gs
ja
cli
es
sub
add
sub
jnp,pn
push
scas
fistl
lahf
xchg
push
lahf
adc
add
pop
imul
mov
xchg
adc
jl
ret
mov
sub
add
aad
push
mov
or
pop
scas
data16
xor
push
cld
testb
sbb
sub
push
mov
dec
xor
in
fdivs
into
test
mov
xorl
in
jne
sub
dec
in
aad
push
sarb
adc
repz
pop
popf
fisubl
dec
sbb
hlt
adc
pop
cmp
outsl
in
push
jge
mov
add
incl
sub
hlt
out
mov
int
cld
sbb
mov
xor
rclb
rcr
adc
jecxz
loopne
sbb
mov
insb
mov
dec
jecxz
jnp
insl
push
xchg
shlb
add
cmp
scas
push
out
sti
inc
mov
cltd
adc
sub
imul
fisubl
or
scas
xchg
leave
mov
test
cmp
cbtw
push
inc
add
mov
rclb
fwait
loopne
mov
xlat
leave
gs
outsb
data16
fsubrp
popa
push
mov
repz
test
or
dec
push
adc
or
mov
jp
add
xchg
xchg
xchg
subl
data16
repnz
jnp
add
lahf
lds
leave
in
icebp
test
mov
mov
sbb
cmpsb
jae
or
adc
mov
jno
and
xchg
dec
andl
inc
test
hlt
dec
popf
inc
or
add
adc
imul
sub
or
sti
cs
pop
inc
std
pop
sbb
fnstcw
jbe
jge
aad
adc
adc
dec
inc
iret
in
in
js
les
stos
dec
mov
dec
dec
into
sbb
or
adc
scas
pusha
mov
loope
xchg
pushf
shld
xchg
adc
xor
sti
bnd
test
les
test
jns
rcl
xor
sbb
es
scas
arpl
cmp
and
repz
xchg
movb
cwtl
inc
inc
inc
cmpsl
add
pushf
adc
xchg
add
sbb
push
ljmp
roll
or
or
cmp
js
adc
xor
mov
shlb
sbb
out
mov
aas
xchg
pmovmskb
pop
pop
jg
or
push
push
or
lret
nopl
mov
sub
inc
add
jo
repnz
dec
pop
dec
call
fdivrl
cmpsl
inc
and
mov
sbb
outsb
cld
imul
sti
pop
nop
inc
rcrb
data16
mov
jmp
clc
mov
cmp
mov
inc
jmp
push
dec
push
dec
mov
in
dec
mov
sub
jno
int3
adc
enter
ja
pop
ss
pop
xchg
js
xchg
push
inc
pop
in
test
adc
mov
loop
add
dec
cs
nop
ljmp
bound
or
rorl
pop
sbb
sbb
mov
sti
push
and
mov
xchg
leave
dec
jl
and
jecxz,pn
mov
sbb
cmp
clc
jp
addl
lods
xor
inc
clc
push
mov
pop
add
pop
pop
mov
xchg
inc
pop
data16
jmp
pop
jns
pushf
fnsave
gs
mov
sub
xor
shl
lahf
and
xchg
sub
and
jmp
add
xor
bound
addr16
sbb
mov
push
xor
pop
icebp
and
stos
int
mov
sbb
mov
jno
push
sub
aas
jg
popf
adc
in
and
jo
push
lea
mov
lcall
and
jnp
dec
ljmp
fildl
sbb
aas
scas
pop
hlt
scas
nop
dec
fmuls
dec
sbb
outsb
push
xlat
movsb
test
popa
out
dec
mov
cmp
out
pop
std
pop
mov
fldpi
mov
cmpsl
inc
mov
dec
mov
jae
adc
lods
or
xor
pop
loop
sub
pop
mov
mov
push
push
std
mov
pushf
jecxz
cmpsb
cmp
jno
insb
cmp
filds
not
mov
jp
sti
pop
mov
xor
mov
aad
scas
dec
push
ss
and
add
and
orb
mov
adc
repnz
fs
inc
in
repz
mov
pop
xchg
jp
dec
cmp
or
dec
mov
adc
dec
movsl
testl
add
jno
or
bound
and
in
loope
fsubl
cvtpi2ps
vmwrite
cld
scas
mov
pop
divb
test
shrb
fdivrs
push
insb
and
add
loop
repnz
pushf
shr
mov
fcoml
or
sbb
insb
and
add
loop
repnz
pushf
shr
mov
fcoml
insb
inc
sbb
cld
and
add
jl
pushf
shr
mov
xor
cmp
jb
inc
cmp
insb
and
sbb
lods
sbb
pushf
movsl
fwait
sub
jge
insl
cli
mov
loop
xchg
nop
cmp
addl
divb
sub
and
add
xor
mov
mov
mov
nop
and
lock
rcl
in
sub
xor
fs
add
jno
inc
push
push
inc
mov
or
stos
fcomp
lock
cmp
insb
jae
jo
and
es
mov
int3
sar
call
push
sub
fstpt
cld
jmp
dec
lods
pop
or
out
jge
out
imul
int
fdivrp
in
sbb
cmp
sub
lret
push
jb
push
icebp
sbb
and
cltd
and
iret
xor
out
cld
lahf
xorl
mov
shrb
adc
dec
adc
pop
ret
dec
add
addr16
add
dec
pop
fldcw
jge
shll
rclb
sarb
adc
jne
repnz
lret
ja
add
pop
iret
out
push
pop
mov
sti
ret
fbld
jb
les
push
mov
ds
and
xor
ljmp
xor
mov
adc
js,pt
push
jo
mov
int
hlt
out
test
pop
cmpsl
mov
push
jb
jle
or
adc
and
hlt
mov
in
xchg
out
xchg
mov
xchg
icebp
and
push
inc
inc
xor
aaa
push
xor
roll
cwtl
mov
rol
and
xor
add
adc
pusha
jb
bound
push
inc
mov
xchg
nop
and
lock
rcl
ret
xor
add
adc
pusha
jb
bound
push
inc
mov
out
clc
insb
iret
xchg
fsubr
jg
mov
push
jge
pop
incb
rcr
or
neg
call
push
in
retw
ds
mov
int
rcll
push
pop
leave
negl
leave
xor
mov
mov
adc
and
push
scas
lods
adc
jno
jbe
push
rorl
sarb
pop
out
sbb
adc
into
in
cmp
push
or
dec
mov
sbb
pop
push
movsl
out
xchg
insl
xchg
jle
xchg
adc
std
jmp
mov
xor
imul
cltd
push
sti
mov
xlat
dec
adc
loope
push
sub
mov
push
sub
aad
mov
add
add
mov
int3
jecxz
test
pop
sub
ficoms
xor
mov
push
dec
cmpsl
iret
call
and
dec
xchg
sbb
lea
xlat
movsb
movsb
pop
fistpll
iret
pop
rorb
cmpsb
cmp
lods
cmp
ret
dec
stos
sbb
jmp
das
loope
or
data16
rorl
shll
jp
mov
inc
popf
insb
push
test
push
lea
shll
in
push
iret
jae
lcall
lods
cli
incl
add
imull
push
dec
dec
stc
pusha
mov
sub
jae
fdivs
and
enter
jge
mov
inc
jb
call
adc
or
inc
lea
cs
outsb
mov
lods
lods
in
push
and
mov
push
pusha
mov
mov
cmp
out
pop
push
push
pop
mov
int
das
stc
lock
jns
mov
jne
dec
jecxz
xchg
sub
mov
les
repz
imul
iret
jle
push
mov
push
ja
out
popa
lcall
mov
and
mov
xor
int
adc
stos
jae
push
leave
mov
int3
push
mov
mov
popf
add
sbb
adc
push
iret
xchg
pop
nop
pusha
inc
inc
cmpsl
xchg
or
aad
mov
inc
in
sbb
sub
push
jcxz
movsl
lret
fdivrs
pop
push
push
adc
cli
add
leave
ds
scas
xchg
push
scas
and
test
xchg
int
ja
loope
dec
js
lea
cmp
rorb
add
xchg
ljmp
jle
rolb
icebp
nop
mov
call
sub
cmpsb
dec
insl
mov
adc
in
repnz
dec
sub
cmp
sbb
addl
jg
mov
push
jno
fsubrl
pop
jp
cs
cli
stos
push
xchg
int3
inc
cltd
sub
or
mov
inc
jle
rolb
xor
xchg
cwtl
add
sub
jl
add
jmp
cmp
test
xchg
scas
in
mov
stc
clc
adc
inc
hlt
fdivrl
jne
cmp
add
std
inc
nop
ljmp
int3
push
out
sbb
dec
sar
cmpsb
test
jmp
ljmp
shlb
push
dec
movsl
xlat
inc
aad
icebp
pushl
jg,pn
jo
sti
jnp
ljmp
or
in
mov
ret
mov
int3
xor
insb
mov
push
push
rorb
call
dec
or
out
mov
pushf
sub
xor
sub
sahf
and
sub
adc
sbbb
xchg
ds
jle
inc
add
mov
pusha
mov
ss
adc
push
dec
or
cmpsl
sbb
inc
cltd
add
mov
data16
scas
xchg
repnz
dec
imul
fstps
cmp
dec
imul
int3
cmp
lahf
daa
rorb
hlt
sbb
ljmp
imul
imul
cmpsl
sbb
insl
xor
stos
and
mov
popa
cs
loop
jle
shrb
sbb
cmovl
cmc
add
pop
cmpsl
xchg
aas
xchg
adc
inc
adc
mov
push
mov
arpl
and
pusha
pop
repz
sub
loop
mov
and
lret
inc
sbb
push
dec
mov
add
inc
gs
ds
rorb
sti
cmp
in
fadd
cmc
pushf
inc
js
call
push
or
xor
and
mov
lods
lods
and
sbbl
push
pop
jb
jo
and
es
repnz
pop
lahf
stos
test
aam
add
sbb
push
cmpsb
or
jmp
repnz
xchg
in
pop
cmpsl
cld
or
mov
xor
outsb
pop
fiaddl
adc
insb
xchg
in
sub
or
enter
sbb
jne
mov
jne
jmp
ljmp
sub
push
test
pop
cwtl
sbbb
popa
mov
push
loop
aam
aam
xor
sahf
int3
xor
arpl
pop
mov
jle
jns
mov
push
xchg
repnz
add
and
sbb
sbb
stc
pusha
cltd
pop
xor
mov
in
sub
sbb
mov
or
sahf
enter
fadds
pushf
push
out
stc
jnp,pn
lds
cmpsl
int
pop
pop
jg
pop
fucomip
lods
fucomip
jmp
dec
pop
jae
inc
cmp
fldcw
or
cwtl
ret
sbb
shll
jmp
push
adc
dec
push
movsb
xchg
and
fdivs
xchg
cmpsb
dec
mov
dec
icebp
cld
and
mov
dec
xlat
xor
shrb
loop
dec
push
fimull
lret
lods
inc
push
in
and
dec
or
lds
pop
fs
or
ret
sub
ds
loopne
cmp
xchg
shll
incl
addr16
addr16
push
scas
mov
lcall
cwtl
insb
add
sbb
inc
jmp
dec
xchg
lcall
sti
gs
jbe
mov
mov
aaa
int
in
adc
jnp
xor
negb
jle
sbb
addr16
pop
in
pop
in
scas
push
icebp
ljmp
pop
cld
pop
sub
jne
int3
ljmp
pop
test
xchg
xchg
mov
lds
adc
iret
cmpsl
div
stc
sub
sbb
in
cld
fdivl
jmp
in
and
jp
mov
out
popf
call
jp
xor
loop
lock
loop
cmc
mov
lods
push
jmp
adc
cmpsb
mov
inc
adc
das
sub
mov
lahf
cld
lods
jecxz
mov
adc
aad
mov
push
and
mull
ret
push
push
stc
xor
pop
sbb
ljmp
xchg
xor
bnd
inc
fstl
cmp
fwait
rcr
fisubrl
insb
iret
out
jae
insb
adc
popa
ffree
sbb
mov
mov
pop
jp
fidivrs
xor
movsb
popf
leave
fnsave
scas
mov
in
ret
les
jmp
sbb
cltd
test
divb
inc
jae
xor
pop
inc
mov
scas
mov
cld
lds
aaa
push
push
fiadds
push
stos
rcrb
sub
jecxz
imul
pop
sub
out
cmp
pop
cmp
rcl
test
testl
push
out
ret
popa
out
pop
test
iret
lret
inc
jns
incl
push
cwtl
pop
js
xchg
push
sbb
mov
test
mov
outsl
inc
test
shrb
push
loop
pop
push
jb,pt
xchg
nop
mov
into
movsl
sbb
xchg
mov
jns
ja
add
sub
mov
cmpsl
pop
cmp
and
insb
decl
fbld
xchg
mov
push
jl
mov
mov
push
jno
std
xor
dec
into
outsb
sti
sub
lahf
rclb
and
push
mov
pop
ret
lods
and
popa
xorb
mov
out
add
push
ja
inc
mov
enter
lock
dec
xor
push
cmc
ja,pn
out
cmp
xchg
outsb
pop
cmc
fildll
rcll
pusha
xor
test
es
lea
mov
mov
shrl
pop
shll
inc
xchg
dec
jmp
inc
loope
dec
sub
jne
mov
mov
xchg
fildl
pop
in
pop
pop
add
into
loop
dec
sbb
fsub
xchg
cltd
testl
jge
out
mov
push
fcmovnb
xchg
popf
xchg
mov
jge
aam
mov
aam
loope
nop
dec
or
in
aam
sub
pop
out
enter
xor
cmp
mov
jb
adc
subl
sub
pop
mov
mov
sub
jbe
jg
adc
bound
xlat
repnz
test
push
incb
ss
aas
sub
ljmp
jecxz
paddsw
mov
add
fwait
roll
js
mov
rcll
nop
cmp
cli
or
repnz
int
test
inc
daa
adc
inc
and
push
fldl
jle
xchg
sbb
xchg
push
clc
mov
dec
add
xchg
addr16
lret
incl
fistl
cwtl
xor
loope
xor
push
mov
mov
popf
lcall
mov
ss
pop
mov
lret
sbb
aad
add
adc
dec
cmp
xchg
movsb
or
push
jle
jle
mov
or
ret
mov
add
add
xchg
and
push
shrb
jle
in
xor
sarb
inc
imul
pop
jmp
call
or
icebp
ss
xchg
cmpsl
xchg
pop
push
jmp
enter
mov
adcl
dec
or
pushl
adcb
sbbl
adc
or
call
push
into
enter
movsb
outsl
lret
stos
dec
sti
add
jmp
push
push
out
test
dec
scas
ja
dec
add
out
leave
lcall
in
dec
pop
cmp
std
ret
cld
mov
adc
test
in
sbb
sub
mov
mov
or
sub
fldlg2
sbb
js
push
cmpsb
sub
xlat
inc
movd
les
sahf
das
fimull
scas
movsb
add
sub
jg
mov
jb
sub
js
pop
les
in
xchg
addr16
and
inc
adc
mov
and
pop
jl
jl
mov
testb
insl
aas
mov
bound
std
dec
adc
xchg
dec
imul
mov
cmpsl
das
pop
dec
pop
sbb
cltd
or
rcrb
dec
push
mov
mov
or
inc
out
cltd
jg
subl
popa
jne
mov
mov
jecxz
cs
flds
jns
mov
xchg
adc
mov
jle
sbb
sub
cwtl
and
sub
ss
pop
jne
fisubrs
jnp
xchg
pop
icebp
pop
jae
pop
mov
loop
fldenv
pusha
dec
mov
cmp
sbb
jl
dec
jge
xor
inc
jnp
pop
outsl
cld
sub
xor
pop
int
dec
sbb
btr
outsb
out
xor
daa
xor
mov
lock
hlt
push
lahf
jge
cli
sbb
mov
lcall
inc
jmp
mov
ss
orl
mov
dec
inc
call
pop
ja
stos
and
mov
push
or
and
add
mov
ljmp
mov
pop
push
push
ret
push
test
rorl
or
adc
sbb
mov
icebp
cmpsb
cmp
roll
cs
rcll
jmp
adc
lcall
mov
dec
nop
sub
mov
xor
xor
jns
or
xor
jns
push
fnsave
sbb
roll
cwtl
or
mov
out
cwtl
dec
aaa
pop
clc
aas
mov
imul
xchg
jle
mov
icebp
inc
ficomps
mov
sbb
js
mulb
sub
mov
es
cmp
ret
gs
fdivl
out
fwait
xchg
int
or
imul
cmpsl
into
mov
xchg
insb
pop
dec
scas
cli
push
sahf
fs
fisubl
scas
arpl
xor
jbe
inc
lret
std
and
mov
testl
jne
sub
je
call
loopne
push
jne
jp
pushf
dec
sub
adc
lret
xorl
jmp
adc
call
sub
out
or
fidivrl
push
stc
test
sbb
testl
js
mov
xchg
test
mov
loope
out
push
mov
cs
or
aad
dec
cmpsl
in
lods
outsb
nop
dec
add
add
js
sub
mov
jne
fcomp
xchg
ss
out
mov
jle
fsubrp
int3
test
xor
flds
pop
loopne
adc
mov
and
xor
pop
lock
and
out
cld
mov
mov
or
jge
loop
sbb
cmp
aas
cmc
fdivs
aad
loopne
arpl
jp
or
loop
hlt
mov
cld
mov
lds
call
iret
mov
cs
in
fdivrs
pop
mov
lods
loop
lds
jmp
adc
mov
xor
addr16
clc
mov
ja
xchg
fstpl
dec
nop
xor
roll
out
test
imul
sbb
jae
sub
popf
daa
rorl
inc
inc
and
jl
mov
sub
repnz
cmp
jmp
cwtl
push
push
rcr
in
in
ljmp
inc
lea
ret
mov
xchg
mov
pushf
mov
sbb
jo
xor
mov
cltd
or
xchg
ljmp
xchg
addr16
ds
and
mov
lcall
stos
push
pop
test
add
xor
xor
pushf
jno
xor
ljmp
xchg
push
ljmp
dec
push
sbb
std
pop
inc
mov
pop
subb
cs
dec
jecxz
push
cmp
and
clc
mov
icebp
jl
arpl
xchg
push
and
xchg
or
mov
cmp
psubq
pop
cwtl
dec
or
in
iret
shl
push
sub
inc
jg
jl
pop
imul
add
icebp
or
adc
sbb
pop
adc
daa
cmp
cmpsl
sarb
push
bnd
vpunpcklqdq
inc
cs
test
addr16
pop
mov
or
pop
mov
sub
shlb
outsb
dec
shr
adc
xchg
repz
mov
stc
dec
cmpsb
jge
in
cmp
adc
in
jae
pusha
add
dec
push
stc
inc
stc
negl
fwait
cli
inc
mov
mov
dec
aam
sbb
sub
dec
mov
daa
add
sub
je
ror
ljmp
rcr
fistpl
loope
mov
fmuls
iret
push
cmc
cmp
jg
sub
leave
add
mov
je
aaa
jecxz
fisubrl
inc
loop
repnz
fs
mov
lods
out
mov
dec
or
add
in
push
rcrl
inc
and
mov
and
aam
sbb
cmc
dec
iret
jnp
cmpsb
mov
push
inc
ss
sbb
leave
mov
scas
mov
pop
sti
sub
push
mov
dec
push
andb
and
dec
jge
xor
push
cmpb
mov
push
in
pop
push
dec
mov
ret
stos
es
xlat
dec
mov
icebp
push
add
push
loopne
loop
loope
fimull
fs
xchg
xchg
faddl
in
cwtl
jecxz
adc
dec
adc
sbb
loopne
sbb
lods
xchg
fiadds
adc
push
mov
loop
xchg
fisubs
mov
mov
xlat
into
pop
fsubs
je
xchg
inc
pop
mov
nop
mov
xchg
mov
rcrl
sub
fidivrs
inc
ja
cltd
xchg
cmp
push
inc
sub
andl
out
cs
imul
sub
je
inc
xchg
scas
sub
dec
jmp
arpl
sbb
push
ror
pop
out
movsl
scas
mov
or
mov
in
add
daa
adc
mov
loopne
sbb
negl
ds
hlt
push
call
adc
adc
sahf
jns
push
imul
and
cmp
mov
inc
dec
cmpsb
je
out
mov
cmp
cltd
mov
push
dec
sbb
mov
stc
mov
imul
cld
mov
jae
mov
dec
shlb
fxch
fidivrs
mov
pop
cmp
mov
push
mov
inc
fs
out
sbbl
mov
and
dec
mov
dec
sahf
inc
mov
sbb
pop
sbb
xor
outsb
int3
or
jl
jg
das
push
xchg
push
cltd
push
enter
jno
xlat
sbb
sbb
insl
xchg
push
pop
push
outsb
jecxz
stc
jmp
mov
loop
pop
and
mov
cmp
imul
adcl
out
ret
roll
lods
pop
push
loope
mov
dec
ffreep
lods
push
std
sbb
pop
movq
nop
rol
pop
aas
es
pop
or
pop
sti
push
lods
push
popf
insb
and
sub
int
mov
aaa
sub
lret
push
or
lret
dec
pop
and
insl
test
mov
mov
dec
call
jae
addr16
lods
xor
cmp
sbb
pop
dec
jbe
pop
mov
jg
xor
call
sti
imul
lods
pop
cld
daa
jg
sahf
sub
movb
mov
jle
loopne
sbb
scas
dec
out
inc
and
or
call
fiadds
icebp
mov
mov
popa
fisttps
std
xchg
adc
imul
xchg
inc
sbb
adc
push
jle
in
in
and
xor
pop
test
and
adc
jl
cwtl
cmp
sub
dec
mov
jne
adc
mov
cltd
push
push
dec
stos
mov
jle
adc
imul
xchg
rep
fsts
fwait
mov
mov
popa
sbb
xor
clc
add
incb
inc
sbb
divb
icebp
cmp
mov
pop
fisttps
cmp
insl
je
mov
inc
cld
cmp
push
jge
nop
hlt
pop
mov
push
js
pop
sahf
pop
flds
add
sub
lds
xor
dec
pop
cltd
xorb
nop
imul
int3
lea
cmp
pop
sbb
aas
in
stc
push
mov
pushf
cld
add
adc
and
loope
cwtl
cwtl
fimull
mov
imul
pop
lret
inc
mov
idivb
rcrb
sub
mov
test
xchg
sbb
pop
lea
mov
fwait
pop
inc
incl
orl
mov
mov
jo
mov
cmpl
stc
add
jmp
push
inc
sub
pop
dec
mov
xchg
mov
sbb
jbe
arpl
jp
jmp
outsb
aas
cwtl
jbe
mov
and
mov
xor
pop
xchg
stos
xchg
test
loop
andb
hlt
lods
popa
ja
das
es
test
shrb
pop
repnz
decb
imul
lahf
orb
cltd
outsb
inc
jnp
add
divb
and
xrelease
repz
jp
push
pop
or
xchg
dec
sbb
mov
ficoml
dec
push
fisttps
adc
aaa
insb
push
xchg
inc
mov
leave
xorb
xor
insl
push
hlt
jmp
push
mov
pop
loope
ret
test
xchg
ret
inc
fimuls
push
xlat
cmp
jbe
cld
les
in
xchg
fisttpl
mov
cmp
pop
shr
sbb
pop
mov
cwtl
mov
jmp
inc
sbb
popf
jl
pop
cmp
arpl
in
xchg
call
jmp
mov
stc
adc
cmp
outsl
pop
mov
leave
int3
decl
popa
add
in
sti
add
arpl
jnp
sub
xchg
push
test
pop
xchg
add
cmp
add
lcall
sub
out
xor
leave
mov
inc
or
aam
in
imul
add
outsl
cmp
fsubp
and
idivl
lahf
cmp
aaa
sub
or
and
andl
daa
adc
pop
xor
and
push
mov
loopne
xchg
sahf
jge
orb
add
jle
movb
push
pop
std
xor
sub
adc
arpl
test
in
clc
js
cmp
sahf
or
and
or
cmp
jp
lret
dec
xchg
ret
push
inc
cmp
mov
jb
push
out
scas
push
ljmp
dec
inc
sbb
xor
test
mov
jg
out
addr16
cmpsb
cmpsl
push
mov
fdivl
push
xchg
icebp
sub
in
push
les
jg
shrb
pop
and
hlt
repz
mov
mov
loopne
lock
rcl
ret
xor
add
adc
pusha
jb
bound
push
inc
mov
xchg
nop
and
lock
rcl
ret
xor
add
adc
pusha
jb
bound
push
inc
mov
mov
mov
rol
and
xor
add
adc
pusha
jbe
bound
popa
cmpsb
xchg
push
test
jbe
ret
lock
push
push
add
int
mov
or
sbb
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
lret
mov
jbe
mov
inc
insb
lcall
add
or
add
add
flds
add
add
add
lahf
add
add
add
add
add
add
push
add
add
mov
add
add
add
add
add
dec
add
inc
add
add
mov
add
add
add
xor
lds
inc
add
or
adc
fwait
add
add
add
add
add
add
add
inc
add
add
add
add
cmpsl
add
inc
add
pop
add
cmp
aad
je
add
jns
push
inc
add
add
add
testl
in
or
add
cmp
fiaddl
add
add
inc
add
fldl
jnp
mov
inc
add
add
add
pop
add
icebp
add
add
xchg
add
faddl
dec
add
xchg
add
add
add
add
add
add
add
mov
pusha
add
add
or
mov
add
add
add
add
adc
sbb
mov
add
add
dec
add
int
jmp
add
add
stc
add
mov
dec
add
add
add
add
add
add
add
faddl
add
add
add
add
add
add
add
add
add
mov
inc
add
add
add
add
add
add
scas
add
pop
add
add
add
add
add
inc
add
mov
add
push
add
movsb
add
add
movsb
add
inc
add
xor
adc
call
add
add
inc
add
add
add
test
faddl
adc
xor
add
xchg
adc
ja
in
add
add
add
add
flds
and
pushf
add
add
push
add
add
add
add
add
or
xor
lahf
add
int
out
push
add
lea
mov
add
movsb
add
add
add
nop
add
add
push
add
add
add
xchg
add
add
sbb
ja
xchg
add
add
add
add
add
add
add
xor
lahf
add
add
add
inc
add
add
sub
add
sbb
mov
add
add
sub
sbb
xchg
add
add
add
add
xor
jno
jo
add
dec
add
add
add
add
add
jo
ja
popa
add
add
add
xchg
sbb
hlt
add
add
add
add
add
add
lcall
add
add
add
inc
add
add
add
add
leave
add
or
sub
sbb
arpl
cmpsb
push
cmp
sub
xor
add
add
sub
rolb
ret
add
adc
dec
add
sti
add
add
adc
add
ja
mov
scas
add
add
add
add
add
es
add
add
mov
add
add
and
les
in
add
add
add
pop
add
add
add
add
add
inc
add
icebp
add
add
add
inc
sti
xchg
mov
dec
and
or
push
stos
adc
in
sub
push
add
movsb
sbb
in
insl
add
jle
in
xor
mov
pop
out
mov
andl
dec
and
xor
jl
imul
sahf
inc
pop
out
xchg
es
arpl
pop
pop
jp
sbbl
push
sbb
aam
mov
push
add
test
jp
sbb
mov
rcrl
add
add
imul
icebp
cmp
jp
leave
sbb
push
mov
jns
jg
movsl
fwait
xorl
jns
add
pop
xchg
mov
adc
clc
pushf
inc
data16
sbb
sub
push
inc
xor
fildll
daa
push
inc
rol
pop
pop
cwtl
mov
punpckhdq
in
cmpb
cmp
movsb
sub
lahf
add
ss
sbb
jge
dec
push
xchg
enter
sub
ss
loopne
inc
call
jo
out
shl
cli
sbb
ss
lods
cmpsl
lret
das
mov
dec
cmp
cs
into
push
cli
xchg
pusha
aad
mov
jge
cmpsb
cmp
dec
mov
arpl
je
adc
fistl
pop
movsb
mov
cltd
lret
aas
push
cmp
sbb
bound
in
lock
std
jl
jne
imul
sti
cld
movsb
iret
mov
dec
inc
adc
test
movaps
jg
lret
push
adc
push
andl
jmp
orb
sub
loopne
and
lcall
push
cwtl
cli
aam
mov
outsl
popa
xchg
gs
fxch
cmpsl
call
mov
xchg
cmp
jp
lahf
imul
sbb
mov
mov
repnz
dec
adc
dec
mov
out
mov
lock
insb
lods
mov
das
inc
lcall
and
adc
shll
mov
jge
pop
push
sarl
std
int
into
push
dec
shl
int
mov
push
repz
or
xchg
test
mov
out
jo
push
lahf
add
cmc
je
lock
sub
ja
shlb
xor
pop
jnp
xchg
fmuls
cmpsl
jbe
daa
xchg
xor
mov
push
dec
inc
adc
cmpsb
inc
mov
add
add
mov
gs
mov
lcall
enter
sbb
sbb
movsl
dec
push
icebp
adc
xor
mov
cwtl
out
adc
aaa
daa
push
leave
sub
in
fnstenv
mov
or
and
jne
dec
fs
cld
mov
loope
rsqrtps
sub
dec
cltd
cmpsb
and
cltd
test
push
push
xchg
pop
fmul
daa
outsl
add
lds
mov
subl
pop
and
pop
xlat
push
es
dec
xor
clc
dec
mov
or
loope
lret
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
