call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
loop
bnd
dec
rcrb
jle
push
out
negl
ljmp
and
adc
ret
pop
mov
or
cli
ss
and
adc
ret
pop
mov
or
cmpsb
xor
push
fimuls
lcall
mov
sti
or
imul
mov
add
popl
push
push
imul
movsl
mov
lds
push
pop
lcall
daa
xor
mov
data16
lods
or
mov
fwait
bound
sbb
stos
mov
fwait
cmpsl
xchg
repz
dec
push
dec
mov
jecxz
dec
fldenv
iret
xor
and
add
sbb
pushf
ljmp
cmc
xchg
dec
jb
mov
push
ss
scas
bound
jmp
mov
lret
lret
dec
xor
pop
loope
cmp
sbb
mov
push
xor
lahf
jp
mov
dec
rcrb
sub
sbb
jb
inc
lret
and
adc
movsb
pop
fwait
test
into
inc
sti
jnp
outsl
shrl
xchg
and
ret
inc
or
loope
xorb
dec
mov
in
ficoms
gs
sbb
scas
jo
add
aad
call
hlt
mov
xchg
push
stos
shrl
mov
or
cli
inc
lret
and
adc
ret
pop
mov
or
cli
inc
lret
and
adc
jns
testb
pop
lea
add
pushf
stos
test
mov
pop
add
in
xor
sub
add
icebp
add
xor
repz
ss
pusha
or
inc
mov
adc
pop
mov
pop
dec
bound
and
adc
in
sarl
adc
sub
test
fstpt
roll
in
push
xor
out
sbb
add
xchg
jle
data16
jle
int
adc
cmp
mov
mov
mov
subb
call
add
aas
data16
div
sub
mov
inc
out
inc
add
in
sbb
fs
sbb
mov
scas
xor
test
fnstenv
lret
xchg
inc
shll
mov
cli
add
dec
xor
jae
test
mov
cmc
ss
push
cmc
dec
jb
sub
int3
pop
pop
jmp
jmp
xor
sub
sti
cwtl
jae
mov
cmp
add
or
push
jns
insl
xlat
dec
jno
xor
xchg
adc
repz
es
fidivs
or
sub
pusha
mov
bound
xor
lock
push
inc
jo
xchg
addl
push
jno
inc
push
sbb
xchg
cltd
cmp
push
fwait
pop
xchg
shlb
add
clc
pop
dec
or
outsl
sbb
cmp
xor
std
rorl
cmpsb
rorb
in
inc
aas
jb
sub
mov
cltd
scas
leave
dec
jle
mov
and
cltd
mov
push
cwtl
stos
fisttps
add
mov
cmpsl
sub
cmpsb
cmp
jp
mov
test
repz
or
inc
cmp
pop
ret
js
idivb
mov
inc
pusha
lock
aas
cmp
aam
adc
sbb
jno
cs
pop
cmp
mov
hlt
fucomp
dec
push
frstor
pop
add
loopne
and
test
lahf
or
pop
jmp
pop
cmpsl
out
mov
or
aas
cmp
testb
sbb
dec
lea
lds
in
imul
xor
or
repz
sti
fs
mov
test
jge
loopne
sarb
popf
push
insl
cmp
cwtl
in
scas
add
clc
pop
pop
nop
mov
jmp
cld
lret
ret
into
rorb
lock
fsubl
subl
mov
mov
repnz
scas
out
int
pop
xorb
lods
repnz
mov
shl
lcall
addl
sub
xchg
or
lds
popf
mov
inc
into
xchg
stos
decb
int3
mov
xchg
cmc
cli
cld
or
jae
fcmovb
mov
lods
jns
sbb
aas
sbb
mov
mov
das
popf
sarl
cwtl
mov
aad
push
or
xchg
push
sub
int3
or
or
in
mov
mov
sub
sub
cmpsb
or
add
mov
fisubrs
cli
testb
gs
int
cmpsl
xchg
dec
out
mov
mov
mov
je
hlt
xchg
andb
shlb
jecxz
lds
sbb
fwait
ret
and
xchg
cmp
rcrl
js
or
sub
bswap
jl
cmp
loope
imul
jg
sti
aas
rclb
and
aas
and
mov
loopne
and
xor
nop
mov
push
loope
pop
xorb
xchg
fmull
in
mov
mov
push
psubsw
inc
lock
push
push
je
sub
hlt
movsb
insb
outsb
or
cmpsl
xchg
lock
gs
inc
outsl
sbb
xor
ret
incb
xor
sbb
fwait
jle
dec
fs
rcrb
test
push
arpl
in
dec
xchg
bound
mov
fmulp
sbb
and
ljmp
mov
sub
mov
inc
mov
mov
movsb
add
mov
sti
es
data16
rclb
loopne
imul
mov
shlb
lahf
in
push
ss
xor
jne
adc
enter
xor
out
int
cmp
jne
pop
fs
ret
in
inc
mov
push
ret
adc
xchg
push
sbb
cmc
jbe
mulb
outsl
jbe
lods
mov
add
dec
addr16
lret
xchg
xchg
popf
lods
jmp
push
mov
inc
jbe
mov
in
fucom
push
in
mov
adc
aaa
aas
jae
add
xchg
push
push
xlat
imul
test
jb
inc
mov
cmp
loope
sbb
add
jne
mov
leave
mov
hlt
ret
sbb
mov
leave
insl
aas
mov
cmpsl
or
out
loope
testl
jnp
cmp
mov
fs
pusha
mov
or
jle
aaa
cmc
xor
jns
imul
cld
pop
sub
jp
test
xchg
adc
fldl
cs
gs
xchg
lss
jle
inc
pusha
fcomip
push
push
daa
mov
test
cmp
in
clc
sbb
lods
aad
add
dec
mov
cli
lods
ret
mov
inc
cld
mov
test
xchg
inc
pusha
xor
and
fidivl
shll
or
dec
and
add
jnp
mov
lahf
add
cmc
and
fldcw
and
cmp
jnp
push
int
xchg
cwtl
mov
in
jl
pop
push
dec
mov
sti
fs
arpl
xchg
andl
push
fstl
pop
inc
xor
and
shrl
aaa
les
icebp
or
js
sub
inc
xlat
mov
sysexit
fmull
mov
pop
out
jg
adc
jp
dec
adcl
sti
jl
pop
aam
pusha
out
cmp
cltd
inc
pop
movsb
adc
dec
mov
cmp
jle
lahf
rcl
mov
xor
sbb
in
xor
sub
outsb
repnz
sbb
mov
pop
dec
xchg
mov
rolb
mov
fidivs
jbe
outsl
clc
xbegin
out
nop
sub
fstl
call
std
movsl
jno
dec
addb
xchg
jno
and
test
clc
mov
jmp
mov
pop
lock
dec
das
mov
or
lods
add
lret
scas
shl
push
xchg
scas
add
popa
mov
sbb
outsb
cltd
sarl
pushf
xchg
iret
gs
or
loopne
or
cmp
mov
movsl
inc
pop
pop
mov
pmulhw
icebp
shr
mov
cmpsb
outsl
jl
addr16
cmp
or
mov
mov
in
pop
rol
or
mov
xchg
inc
gs
and
sbb
jbe
mov
dec
pop
push
sub
sbb
sub
mov
pop
push
cmpsb
bound
mov
inc
daa
orb
fdivrl
jmp
loop
into
mov
cs
je
rcrl
adc
into
fmull
jecxz
cmp
daa
aas
push
lock
iret
bound
dec
or
aam
sbb
lcall
sbb
dec
inc
dec
add
pop
jle
cmc
push
imul
fs
mov
mov
or
sub
negl
ret
ljmp
sub
xchg
ds
xchg
jns
push
xor
xlat
rorl
out
fsubs
xchg
xchg
jge
shll
divl
pop
outsb
nop
or
ret
dec
test
sbb
std
fwait
bound
dec
fmuls
jo
push
testb
popf
clc
cmp
mov
cmp
xor
dec
cmp
repnz
lods
dec
stos
out
gs
ja
shll
rolb
mov
sub
jnp
aad
adc
xchg
add
mov
ret
xchg
je
xlat
in
add
mov
xchg
push
arpl
and
ja
cmpsl
dec
loope
sbb
cmp
jne
push
rclb
or
into
gs
sbb
outsl
mov
mov
xor
fcmovnb
outsb
cld
fs
cmpb
in
mov
pusha
push
leave
add
sub
or
xor
cmp
arpl
test
pop
fisubrl
data16
sbb
nop
and
lds
sub
repnz
shll
jo
daa
xlat
scas
les
fidivrl
mov
cwtl
stos
pop
ror
test
pusha
jmp
cs
push
or
mov
cmp
jno
shrl
cli
push
sbb
push
and
mov
sti
mulb
fisubs
inc
or
pop
ja
xor
std
xchg
imul
clc
testb
sub
ja
outsb
mov
jecxz
repnz
rcrb
fs
mov
sub
cmp
push
lock
push
das
sarl
mov
jl
cltd
test
mov
add
icebp
xorl
inc
call
mov
movsb
add
push
jp
xor
iret
and
popa
adc
fwait
inc
dec
mov
inc
mov
lcall
add
add
pop
test
and
sti
test
push
lods
xor
dec
ffreep
sbb
xor
push
repz
pop
pop
je
inc
or
sub
sub
aaa
lcall
bound
push
jmp
jp
jge
nop
in
push
lahf
jnp
push
mov
nop
out
mov
out
outsl
int3
adc
mov
mov
mov
test
js
aas
notb
sti
jmp
out
adc
pop
in
movsl
insb
jmp
cmp
push
jae
mov
jl
ss
loope
dec
movsl
ds
inc
lock
adcl
push
mov
stos
orb
mov
pop
jns
cmp
clc
push
inc
imul
cmp
ret
dec
push
test
xchg
out
lret
xchg
aam
out
sub
loopne
jae
inc
out
jecxz
dec
ret
nop
mov
cmpsb
xchg
aas
sti
jmp
sti
out
jne
cmp
cltd
mov
rcrl
mov
pop
in
sub
pusha
fisttpl
clc
mov
pusha
pop
popf
add
mov
stc
jge
lds
dec
adc
push
cmpb
test
jge
adc
jo
pop
test
or
pushf
or
push
outsl
pop
push
addr16
mov
repz
xor
in
inc
sub
pop
push
pop
sarb
std
cld
jmp
sub
jbe
jno
push
sbb
mov
mov
cmp
and
mov
inc
sbb
mov
repnz
rolb
dec
sub
xchg
jp
loope
dec
cmp
cmp
inc
adc
addr16
push
jo
aas
dec
or
mov
dec
ljmp
aas
testl
mov
mov
jg
sub
popa
push
add
and
pop
sub
mov
add
push
push
repnz
mov
filds
pop
xor
sbb
inc
mov
xchg
lret
xor
enter
jbe
xor
pop
test
add
adc
addr16
xor
jle
and
push
and
lods
ss
cmp
mov
cmp
test
push
popa
jp
lock
jae
cmp
repz
dec
add
xor
arpl
lret
jp
jl
jp
push
test
add
xchg
push
jmp
xchg
push
jge
sub
jge
cmpsb
mov
pop
push
fldt
dec
mov
push
cmpsl
insl
es
movsl
test
notl
mov
test
das
scas
mov
mov
jbe
stos
cld
mov
add
xchg
push
mov
iret
fwait
mov
mov
sti
aad
pusha
clc
pusha
pop
sub
test
scas
lods
mov
lods
sarb
out
and
enter
jb
xchg
fninit
and
fnstenv
pop
je
or
sbb
jo
dec
lds
dec
push
add
loopne
fsubrl
pop
pop
adc
push
loop
mov
int3
pop
adc
int
sub
xchg
inc
mov
xorb
dec
push
sbb
xor
in
xlat
call
insl
jnp
fists
and
rcll
pop
pop
sbb
movsb
sarl
cmc
outsb
mov
push
movsb
shl
sahf
loop
dec
shrb
xchg
mov
aad
inc
cmp
scas
dec
jmp
popf
cwtl
jge
push
inc
fwait
adc
cltd
jecxz
dec
inc
adc
inc
mov
adc
mov
popf
fidivl
mov
cmp
repnz
adc
dec
data16
outsb
push
or
iret
shrb
jno
cmp
jae
push
fnsave
mov
shrb
xchg
pushw
push
loope
xor
xlat
dec
cmp
cmp
loopne
xor
scas
xor
mov
in
stc
std
movsl
in
xor
aam
rcr
idiv
inc
popa
filds
lret
loope
mov
add
leave
cltd
daa
pop
xor
xor
lods
imul
inc
icebp
iret
lods
test
push
sub
lret
jmp
pop
push
mov
dec
push
and
cld
dec
daa
movsb
repz
jb
mov
mov
imul
loope
leave
das
inc
call
out
and
int
cmpsl
mov
in
xor
pusha
daa
dec
push
pop
lahf
pusha
movsb
jae
icebp
stos
sub
cli
adc
sub
mov
sbb
dec
push
xchg
inc
test
dec
jecxz
sbb
and
adcb
or
insb
js
sub
negb
mov
jne
pushf
push
pop
outsl
dec
xchg
and
std
pop
pop
mov
dec
in
sub
inc
mov
or
sub
inc
je
enter
jle
or
mov
cmp
push
ds
sbbl
cmp
xchg
stos
outsl
cmpsb
cmp
stos
loopne
adc
mov
xor
in
sub
push
and
lods
xor
cmp
inc
mov
and
sbb
pusha
jnp
repnz
jbe
aaa
int
lea
les
sub
pop
mov
arpl
shl
in
cld
mov
or
pop
ficompl
mov
insl
stos
jb
aaa
aas
cmp
stc
enter
clc
inc
mov
inc
jb
jns
sbb
pusha
push
cwtl
sbb
jl
in
dec
pop
sub
inc
loop
imul
mov
xlat
mov
xor
gs
aad
fwait
push
inc
mov
push
ljmp
and
add
cmc
mov
arpl
push
pop
cmpsb
cld
es
push
mov
ja
add
insl
out
ljmp
mov
subb
jo
stos
pop
push
pop
xor
push
jl
sub
insl
sub
adc
fisubrl
in
call
test
pop
mov
and
jg
std
insb
stc
jne
jo
aam
pop
sub
arpl
leave
mov
mov
sti
enter
and
gs
sbb
es
adc
mov
dec
sti
test
movsl
mov
sub
int3
scas
insl
arpl
mov
push
inc
pushf
xlat
mov
int3
mov
dec
icebp
call
lret
insb
adc
loop
scas
call
jo
xor
loopne
repz
sahf
clc
cmp
sbb
adc
fwait
rolb
sbb
cmp
inc
cltd
pop
xor
xchg
aaa
loop
mov
fidivl
rorb
ret
xchg
pop
popf
or
pop
jno
dec
sarb
or
out
outsl
mov
hlt
xchg
adc
outsb
pusha
push
ret
sbb
cmp
xchg
fildl
cmpsb
sub
test
outsb
jmp
pop
lret
pop
jle
mov
xchg
jl
ds
sub
aam
mov
adc
xlat
rorl
mov
nop
loop
xlat
jnp
mov
in
mov
dec
popa
fcomip
xchg
push
ja
xlat
sbb
jae
mov
test
cmp
scas
and
ja
test
mov
dec
pop
insl
adc
lahf
or
inc
jnp
sub
aaa
fwait
cmc
mov
mov
daa
pop
ret
add
mov
xor
push
cmp
ds
sbb
jnp
mov
cli
sbb
js
jecxz
nop
xor
mov
dec
mov
pop
or
mov
fcompl
sbb
fisubs
ljmp
movsb
and
jns
mov
push
xchg
inc
xchg
fcompl
aas
xchg
in
jp
inc
test
in
mov
and
popf
push
dec
or
jp
loopne
js
lcall
mov
and
sbb
and
push
scas
add
fidivrl
cmp
adc
or
jno
adc
and
push
stc
lcall
mov
and
repz
or
xor
pop
call
pop
sbb
fwait
add
and
xchg
pop
mov
xchg
testb
fldenv
outsb
pop
sub
mov
push
negb
add
xchg
dec
out
bound
popf
xor
mov
insb
lahf
adc
xor
cmp
mov
xchg
mov
insl
or
into
jl
stc
addr16
lods
shr
jg
xchg
aaa
jo
xor
outsl
xchg
idivl
mov
je
fwait
daa
cmpl
scas
mov
pushf
pusha
push
sub
adc
mov
ficoml
repnz
cmp
mov
mov
aam
xchg
mov
and
dec
insl
dec
inc
xor
xor
fidivs
shrb
bound
add
pusha
clc
insl
test
sbb
ljmp
sbb
sbb
sbb
sbb
jmp
push
aas
cltd
and
xor
adc
and
inc
mov
jecxz
mov
out
test
mov
sbb
lock
popf
int
jno
or
inc
jl
inc
xchg
out
and
rcrb
push
and
mov
in
sti
pop
inc
pop
std
or
dec
mov
cmpsl
and
and
in
sbb
inc
sbb
pusha
rdtsc
pop
lcall
inc
lock
cmovbe
mov
dec
shrb
shrb
sub
dec
and
add
test
xchg
mov
jl
data16
xor
lds
loopne
popa
pop
les
jb,pt
xchg
push
arpl
mov
xor
popf
sub
cmp
aam
sbb
or
imul
sarb
mov
addl
into
pushf
sahf
and
fiadds
adc
push
adc
inc
sar
xor
jo
mov
outsl
lock
addl
mov
or
ljmp
aam
sbb
insb
in
cmp
jle
pop
out
in
jmp
divb
mov
pop
inc
jnp
adc
std
jne
push
int3
test
dec
pop
mov
shl
xor
jg
pop
mov
je
test
mov
add
hlt
mov
in
add
dec
aaa
cmp
mov
adc
cmp
pop
lods
arpl
cmp
lds
movsb
ficompl
sbb
les
xchg
cs
sahf
xchg
orl
inc
dec
sbb
jg
cmp
push
arpl
sti
add
daa
inc
rcrb
lods
iret
testl
jmp
jcxz
push
jnp
xor
add
dec
fwait
int
mov
jg
lret
test
fs
stos
into
leave
sub
mov
popf
lea
int3
jbe
jo
clc
sub
adc
and
sub
rcr
xlat
test
iret
stos
in
test
mov
dec
pusha
and
mov
leave
pushf
mov
repz
lahf
cli
xchg
jb
mov
or
jo
inc
jp
data16
sub
pop
sub
sahf
filds
stc
daa
jae
insl
into
xor
xchg
loope
data16
mov
sahf
mov
in
inc
and
dec
push
fstps
stc
pop
popf
mov
or
jp,pn
insb
sub
cmp
fnstenv
stos
mov
push
dec
jnp
aad
mov
xlat
into
pop
and
fsubl
mov
sub
cmp
popa
mov
arpl
or
dec
das
subl
jmp
xchg
lcall
lock
dec
mov
je
mov
sbb
inc
jge
fsubs
inc
xor
mov
lcall
push
mov
xor
movsb
jnp
dec
add
pop
xchg
jg
mov
cmp
adc
cmp
les
xchg
xor
in
adc
lcall
cmpb
jg
or
ljmp
mov
loope
push
int
and
loop
add
scas
lahf
jge
sbb
pop
inc
roll
push
mov
mov
lcall
cmpsl
bound
sub
push
aad
fidivrs
in
xor
push
fstpl
xor
rcrb
call
filds
fwait
cs
in
push
jle
mov
test
dec
rcrb
sub
sbb
jb
inc
lret
and
adc
ret
pop
mov
or
cli
inc
lret
and
adc
ret
pop
mov
or
sti
inc
lret
and
adc
ret
pop
mov
mov
push
call
and
gs
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
or
sbb
sub
cmp
incl
jbe
mov
fwait
pop
stos
pusha
mov
adc
xor
xor
rcrb
sub
cmp
dec
sbbb
mov
fwait
push
stos
popa
mov
lret
gs
jmp
sti
xor
rolb
xor
and
push
addb
mov
mov
push
lret
inc
mov
mov
lods
inc
bound
xchg
sbb
pop
jg
mov
pusha
lods
and
jecxz
ret
mov
gs
lret
shl
push
mov
sbb
push
push
mov
push
lahf
inc
gs
adc
dec
jmp
add
hlt
shl
adc
xor
mov
fistps
jnp
jae
inc
fs
xchg
data16
lret
jmp
sub
lods
sti
cld
or
pop
cmpsb
mov
pop
nop
xchg
test
push
add
cmc
xor
fcomi
pusha
push
sti
xor
xchg
das
cmpsb
pop
mov
inc
jg
icebp
mov
stos
lahf
dec
jo
push
fildl
adc
jmp
jecxz
sti
insb
pop
clc
mov
pop
sbb
inc
push
push
adc
mov
and
iret
ret
shrb
loopne
lock
orb
mov
adcl
mov
adc
and
jbe
sarb
mov
cmp
les
xor
add
je
push
cltd
push
xchg
push
lods
jp
inc
test
xchg
daa
ret
pop
aad
imull
sahf
enter
stos
pop
cli
and
gs
popf
inc
lahf
outsb
xorl
add
jnp
mov
push
stos
pusha
mov
adc
and
xor
rcrb
sub
cmp
dec
sbbb
mov
fwait
push
stos
pusha
mov
adc
and
xor
shlb
jne
adc
mov
dec
inc
adc
jnp
fwait
xchg
lret
jl
mov
jecxz
mov
sbb
mov
dec
lods
xchg
lea
adc
loop
mul
scas
jne
adc
push
xor
aas
repnz
xchg
mov
xlat
imul
mov
pop
nop
mov
cmp
jg
icebp
das
dec
adc
push
push
xchg
mov
insb
push
shrb
push
sbb
ja
xor
cs
rorl
add
test
adc
pop
inc
lcall
xor
pop
fsubp
inc
dec
mov
insl
inc
push
into
loope
int
dec
call
subb
cmp
xchg
mov
jmp
roll
imul
inc
lods
dec
jle
pushf
data16
mov
add
mov
xchg
mov
sub
leave
mov
int
or
fstpt
and
or
pop
adc
test
ljmp
add
xor
pop
jmp
ficoms
packssdw
movsl
push
or
dec
cmpsl
pop
mov
sbb
leave
pushf
lret
ficomps
dec
mov
jno
adc
aad
sbb
mov
div
push
repz
mov
hlt
jg
add
mov
ds
or
mov
xchg
xchg
mov
mov
fmulp
test
add
dec
mov
js
inc
mov
rorl
or
push
and
and
cmp
xchg
cmc
mov
inc
sub
mov
pop
adc
and
adc
outsb
mov
aad
xlat
std
fsub
pop
int3
mov
jmp
arpl
bound
test
stos
inc
xchg
enter
add
in
mov
out
and
sub
into
inc
fsubl
test
jne
jg
pop
pop
add
dec
sbb
mov
push
mov
jne
push
mov
dec
adc
cld
lods
xchg
ss
sbb
rorb
xchg
jecxz
inc
outsl
mov
sub
sbb
mov
lcall
jb
push
imul
dec
insl
ret
xor
xlat
das
pop
shrl
mov
push
push
add
loopne
js
cmp
pushf
jno
sub
orl
in
xchg
faddl
imul
push
mov
lods
pop
adc
stos
mov
xor
sbb
or
fisubl
ss
push
or
sub
mov
sahf
or
mov
jp
movsb
adcb
and
xchg
int3
je
pop
daa
pop
sub
dec
and
rcrb
push
xchg
stos
ret
or
cmp
cmp
pushl
fwait
or
mov
mov
inc
aam
jnp
cld
lret
mov
mov
and
and
lods
into
lahf
xor
xlat
movsb
mov
rorl
push
mov
call
dec
test
add
or
pop
inc
or
and
stos
leave
dec
loopne
pusha
shlb
add
in
or
push
dec
lahf
fwait
and
les
mov
jae
out
adc
inc
out
adc
shll
js
adcl
push
int3
dec
or
loopne
enter
lods
mov
data16
into
mov
lret
daa
or
mov
pushf
xor
pop
imul
jg
subb
js
pop
cwtl
pushf
jmp
shlb
add
push
js
adc
cmp
movsb
sarl
mov
dec
insb
xor
sub
int
mov
mov
cmp
aad
xchg
imul
jle
dec
xor
pop
fdivs
cltd
stos
xor
dec
test
imul
adc
popf
xchg
mov
jb
cmpsl
dec
add
mov
jno
xchg
xchg
xchg
outsb
sbb
test
add
inc
xchg
lret
repnz
sbb
movsb
out
jmp
lret
sarb
in
lahf
cmpsb
call
loop
jb
add
or
pop
shll
sarb
push
push
in
sti
jg
cmc
mov
idiv
gs
push
ds
mov
imul
inc
out
aam
pop
and
mov
adc
mov
int3
and
popf
mov
mov
cld
lahf
or
cmp
fcompl
mov
jl
div
mov
loop
cld
inc
lret
mov
sub
adc
cmpb
mov
xor
leavew
out
icebp
jb
sub
mov
jae
outsl
jo
push
or
fidivrl
mov
pop
xlat
stos
push
cmpsb
fucomp
outsl
lock
shlb
cwtl
or
mov
shrl
and
xor
inc
fsubrs
in
rcll
in
fdivrs
lods
mov
popa
and
stos
stos
into
or
xchg
enter
add
movsl
sbb
xor
pop
roll
jns
mov
scas
jae
inc
jmp
movsb
movsl
test
ret
lahf
cs
push
mov
or
pushf
xchg
mov
mov
mov
rcll
sbb
lods
jns
push
xchg
ret
add
push
mov
lea
popa
push
and
pop
shlb
insb
jne
test
and
push
loopne
mov
adc
xchg
push
xchg
jl
xor
cltd
or
cmp
int
dec
xor
leave
das
lret
inc
arpl
adc
push
popa
push
sahf
int
flds
jecxz
js
sub
fisubs
cmpsl
lods
outsb
jle
xor
push
lahf
bound
pop
js
xchg
aad
mov
lock
out
pop
jle
scas
ret
notb
out
jb
cmp
loop
shlb
cli
outsl
fstpt
lock
add
jl
adc
ficompl
lcall
cmp
cmp
and
dec
fists
rcr
cmpsl
xor
sbb
xchg
xlat
in
add
testl
adcb
popf
pop
in
out
das
sub
mov
dec
and
inc
scas
addr16
and
sbb
and
movsb
lret
add
scas
push
lahf
sub
aad
dec
jg
inc
stos
fisttpl
das
push
popf
push
repnz
mov
sub
and
fwait
loop
or
or
repz
scas
flds
mov
xchg
push
out
outsb
xlat
pop
jmp
xchg
pushf
cmp
lahf
and
imul
and
pop
mov
or
push
or
pop
dec
hlt
pop
stc
mov
mov
inc
add
push
add
popf
jne
out
lret
repnz
inc
inc
dec
jae
adc
rorl
mov
add
mov
jnp
push
jnp
mov
icebp
icebp
jne
outsl
aam
cmp
aam
ffreep
mov
pop
cld
sbb
mull
jnp
hlt
xchg
ss
mov
adc
jae
adc
mov
outsl
jg
mov
jmp
and
add
dec
stos
gs
jl
ror
in
int
mov
pushf
mov
scas
je
fwait
xor
arpl
aaa
adc
addb
out
stos
sub
orl
fcoms
aam
pop
int3
arpl
fisttpl
jo
mov
jg
lret
and
xor
outsl
aam
pop
mov
pushf
sbb
or
add
sub
mov
xor
and
jne
shll
mov
movsl
jns
cs
ss
ja
test
jl
sbb
in
dec
or
push
popa
push
stc
adc
out
xchg
xchg
aam
mov
js
icebp
cli
cmpsl
lea
out
cld
and
lods
mov
out
cmp
shll
mov
push
add
xlat
and
shll
push
sbb
aas
negb
enter
and
fwait
mov
leave
das
mov
mov
xor
loope
int3
pop
push
ret
test
xchg
jp
into
cmp
shl
mov
sub
or
xchg
call
push
ja
and
gs
adc
andl
aas
jns
ret
lcall
mov
pop
out
push
lret
mov
fwait
or
fbstp
out
or
adc
shlb
add
out
test
xor
call
orl
mov
int3
cmp
pop
sbb
mov
inc
fs
sbb
mov
sbb
jle
mov
jbe,pn
outsl
popf
adcl
push
pop
push
dec
leave
push
lahf
fsubp
xor
test
xchg
jle
dec
mov
mov
inc
shll
mov
xorb
ja
or
mov
nop
pop
jno
push
xor
movl
decl
lret
mov
push
push
sbb
inc
lods
sbb
pop
and
enter
mov
cs
inc
test
int3
add
loope
in
sub
in
dec
and
cld
imul
xchg
adc
call
ljmp
pushl
pop
rcrl
push
loope
inc
inc
push
sub
test
repnz
lea
mov
das
mov
add
dec
shlb
dec
or
mov
and
dec
mul
call
xor
lods
or
mov
mov
scas
filds
shlb
inc
push
cmp
test
jae
sahf
aad
push
pop
sub
xchg
ds
in
mov
loopne
das
test
test
fmul
test
inc
in
insb
in
sarb
sahf
roll
sti
xchg
cmp
push
pop
mul
jno
add
shl
jmp
arpl
sahf
fldt
stos
lret
sub
sub
adc
mov
cmp
cmp
lock
mov
lret
pop
and
sbb
adc
sub
jle
jbe
mov
fidivrs
push
mov
imul
add
xchg
sub
lcall
xchg
cmc
mov
bound
add
add
iret
or
and
push
andb
jmp
ds
adc
icebp
out
lret
test
push
into
cmp
xor
in
loope
pop
inc
testl
enter
cmc
cmpsl
ss
rcll
sbb
cmp
je
icebp
fnstsw
pusha
jge
adc
jae
sbb
fists
mov
push
jle
mov
dec
and
xchg
insb
movsb
popa
mov
in
je
insb
scas
xchg
pushf
mov
jbe
jge
mov
cmp
mov
inc
lret
faddp
adc
inc
jne
xchg
clc
push
in
inc
or
inc
aas
arpl
je
sbb
inc
push
stos
adcl
popf
jmp
dec
jg
neg
xchg
lock
fcomip
fsubrp
stc
cld
test
cmp
stc
xor
or
sar
sbb
fistpll
jge
sbb
dec
lods
and
sbb
je
out
adcl
fisubrl
mov
out
mov
sub
stc
mov
imul
xchg
fld
xchg
cmp
and
clc
add
inc
shrl
shrl
inc
or
jnp
xchg
sub
inc
imul
jp
or
popf
imul
sub
lret
popa
mov
data16
push
aas
sbb
fimull
jl
cltd
test
stc
int
mov
je
mov
push
mov
cmp
mov
add
mov
sbb
mov
movsb
or
adc
arpl
ficoms
jmp
pusha
loope
lds
es
addr16
scas
loope
das
mov
cmp
aad
jge
into
in
jl
xchg
aaa
pop
cli
aas
imul
xchg
repz
pop
repz
inc
and
aaa
dec
aam
stos
dec
push
pop
popf
sub
or
dec
cmpsb
je
pop
mov
sub
popa
mov
sidtl
mov
lods
fnstcw
inc
xor
mov
clc
repz
clc
dec
mov
cmp
jae
mov
cld
scas
stos
xchg
fnclex
xor
xchg
int3
fs
out
jge
jne
stos
stos
push
popf
sub
adc
mov
leave
int3
mov
mov
ss
cmp
repnz
ja
out
aas
fsts
addr16
inc
divl
je
cmp
push
adc
or
lds
sbb
aaa
xorb
loopne
mov
orps
jae
and
test
mov
leave
push
jne
pushf
inc
push
mov
es
fmulp
sub
rol
pusha
inc
add
out
jb
ds
push
clc
push
pop
bound
rcr
push
clc
out
adcl
cmp
stos
sahf
and
mov
add
call
add
out
fidivrs
xchg
iret
or
or
mov
inc
pop
xchg
out
pusha
add
inc
mov
testl
xor
bound
adc
mov
phaddd
sbb
inc
sbb
dec
pop
mov
inc
outsl
cmp
loop
dec
add
aam
jl
loop
dec
in
push
inc
pop
jle
pop
mov
adc
lcall
jo
add
sub
cmp
inc
leave
ror
notb
pop
push
fiadds
push
ja
hlt
xor
mov
in
iret
push
cwtl
xor
adc
and
mov
scas
hlt
pushf
and
cli
pop
and
mov
adc
mov
pop
add
out
dec
jbe
inc
inc
mov
lods
dec
mov
test
rol
sbb
dec
in
lcall
mov
sub
popa
out
mov
lods
mov
and
cmp
fldl
inc
lea
mov
pop
ret
or
push
cwtl
divb
mov
jne
add
mov
aad
xchg
push
lret
xor
icebp
dec
push
xchg
lret
inc
lahf
popf
js
lahf
jg
cmp
mov
xor
dec
int3
shrb
xchg
lods
lds
addr16
fs
aad
sub
mov
imul
ljmp
adc
adc
out
dec
cli
xchg
fs
sbb
mov
outsl
aas
aad
aam
gs
jns
jno
scas
cli
das
cmpsb
pop
shlb
out
fstps
mov
jmp
mov
sarl
adc
mov
in
fcoms
in
mov
cli
das
cmpsl
xor
jb,pt
aas
rcrl
inc
or
cmp
testb
jbe
bound
subl
push
ljmp
xchg
bound
cs
nop
fstps
dec
inc
dec
adc
into
insb
ss
pop
xlat
xor
sbb
scas
fidivl
add
jnp
jo
test
mov
pushf
cld
adc
les
fsubrp
lcall
repnz
lds
negl
mov
test
dec
imul
pusha
ja
pushf
mov
sbb
setp
pop
or
inc
inc
popf
mov
idivl
pusha
mov
and
adc
inc
mov
out
xor
mov
xor
pop
subl
cli
sbb
xor
shrb
pop
xchg
inc
sarb
mov
xchg
loop
sbb
adc
add
fwait
mov
mov
mov
mov
sbb
insb
lods
adc
xor
rcl
mov
and
pop
add
je
out
xchg
mov
cld
shrb
out
or
frndint
fisubrl
cmpsl
cmp
sarb
push
jle
pusha
cmp
jo
cs
lock
cltd
sub
or
cld
push
ljmp
and
movsb
mov
sub
xchg
inc
dec
das
mov
cli
inc
subl
cmpsb
test
cmpsl
out
mov
imul
sbb
stos
cwtl
movb
mov
lods
sbb
adc
testl
int3
push
ds
or
adc
out
iret
sub
add
inc
push
int
je
cmp
sbb
xchg
inc
out
or
sub
out
jge
clc
push
pop
lods
loope
sub
rcpps
in
inc
std
clc
in
push
shlb
in
jp
fst
pop
iret
add
shl
repnz
xchg
adc
ja
dec
mov
negl
jae
and
std
push
outsl
lahf
or
dec
fcmovb
scas
jae
jmp
fiadds
push
xchg
cmp
pop
popf
mov
sbb
ja
cmc
cmp
inc
mov
add
pop
shll
jg
mov
iret
add
mov
jb
aam
lret
lcall
mov
inc
mov
int3
sbb
cmp
or
je
iret
or
jbe
cmp
adc
pop
dec
xor
jne
mov
mov
xchg
xchg
jbe
mov
mull
test
int
testl
sarl
decb
pushf
mov
test
cmp
push
test
sbb
pop
lahf
hlt
fimull
inc
xor
aas
pop
dec
xor
xchg
dec
xchg
mov
movsb
pop
push
imul
movsl
inc
js
es
aam
ja
inc
in
js
mov
sub
mov
xor
or
sub
icebp
std
mov
push
ret
xchg
jbe
xchg
cli
out
add
mov
rcrb
pusha
pop
test
das
cmp
xchg
pop
xchg
rcrb
fdivrl
push
aad
mov
lods
lret
mov
mov
push
jge
mov
sbb
fnstenv
out
cmp
add
stos
mov
ds
and
pop
sbb
adc
lods
push
pop
pusha
rcrl
lcall
ljmp
inc
sbb
jecxz
pop
inc
xchg
or
addr16
mov
push
push
shrl
inc
sub
jbe
adc
adc
jno
mov
jg
iret
sub
sub
jmp
mov
mov
mov
lock
xchg
pop
push
dec
or
pop
arpl
out
pusha
mull
mov
inc
lret
cmp
sar
movsl
fcomi
lcall
adc
sbb
mov
pop
int
xchg
fwait
mov
xor
lock
or
sbb
dec
fs
out
xorl
icebp
popa
mov
mov
cmp
out
jns
and
inc
mov
cltd
sbb
push
and
xor
test
mov
into
jo
dec
neg
cmp
repnz
pop
mov
cmp
mov
pop
insb
adc
dec
xlat
cmp
aam
cmc
fistl
mov
fs
sbb
add
lods
adc
inc
stc
adcb
testl
ljmp
xor
stc
adc
icebp
ja
outsb
mov
add
movsl
push
sbb
aas
jecxz
adc
mov
jmp
iret
daa
mov
popa
icebp
outsb
xlat
xor
mov
pushf
inc
pop
stos
sub
add
int3
adc
add
pop
add
leave
pop
fiaddl
sub
subb
jmp
push
loopne
sbb
test
shlb
rcrl
sbb
adc
pop
xor
jb
sbbb
arpl
lret
out
add
add
scas
lea
out
sbb
jmp
lds
dec
std
js
test
jnp
and
and
cwtl
cmp
shrb
mov
xlat
outsb
scas
cwtl
xacquire
add
jb
sbb
cld
dec
adcb
push
xchg
aad
cmpsl
jge
mov
pop
insl
sbb
xchg
dec
lret
rolb
inc
push
adc
test
fwait
loope
ljmp
test
je
xor
sub
insb
orb
lods
xchg
jg
scas
adc
test
lret
dec
or
add
sbb
clc
fptan
pop
mov
dec
or
ret
pop
dec
insb
js
and
cwtl
shlb
xchg
mov
lahf
mov
xchg
xchg
or
mov
cmp
mov
stc
xchg
mov
inc
xchg
adc
mov
ds
lods
cmpsb
fidivrs
dec
jecxz
sbb
xchg
xchg
ficomps
sub
jge
pop
pop
xor
mov
sbb
fldt
call
jmp
mov
es
pop
outsb
cmp
xchg
cmp
jg
mov
xor
std
add
mov
pop
sub
clc
jg
data16
popf
lock
fsubr
xlat
dec
pshufw
lea
jo
leave
and
int
lcall
shrl
cmpsl
out
inc
repz
adc
in
inc
int
dec
adcl
js
scas
push
scas
cmpsb
jae
dec
pop
push
mov
cmpsb
xorb
and
mov
xlat
rcr
jo
pop
push
jae
repz
mov
jp
mov
shrl
dec
lods
mov
inc
hlt
fs
xchg
roll
pushf
add
cmovae
pop
push
insb
icebp
nop
mul
xchg
dec
add
cmpsb
sbb
pop
fstps
out
icebp
and
dec
int
mov
dec
cmpsl
jle
lcall
popa
scas
pop
mov
into
inc
pop
xchg
jecxz
jae
push
es
pop
mov
push
cmp
out
jnp
xchg
das
shl
repz
push
in
std
pop
js
pop
mov
std
mov
sub
or
sub
cmc
mov
push
and
shlb
loopne
lock
sbbb
mov
fwait
push
stos
pusha
mov
adc
and
xor
rcrb
sub
cmp
dec
sbbb
mov
fwait
push
stos
pusha
mov
adc
and
xor
rcrb
sub
cmp
dec
sbbb
mov
fwait
push
stos
pusha
mov
adc
and
xor
rcrb
sub
cmp
dec
sbbb
mov
fs
add
pop
mov
filds
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
imul
xor
pop
adc
fisttpl
sub
ss
movsb
xchg
sbb
test
mov
rorl
js
and
pop
adc
arpl
arpl
inc
sbb
call
sbb
call
ret
cwtl
rcl
cmp
or
jp
imul
sbb
mov
mov
xchg
mov
mov
dec
xor
cmp
scas
jns
xchg
xchg
in
sbb
stos
test
test
push
adc
lods
push
pop
mov
shll
push
and
mov
sub
pop
cmp
call
sub
mov
jmp
std
dec
inc
ret
movsb
xchg
mov
adc
lods
cld
mov
xlat
arpl
arpl
aaa
sbb
jmp
jl
push
push
fistpll
ret
xchg
cmpsb
jne
push
mov
xchg
cmp
pop
jnp
enter
in
loope
jecxz
nop
xchg
push
xchg
fsub
inc
dec
sti
cmpsb
cltd
xlat
jmp
sub
flds
sub
and
rcrl
dec
sbb
int3
arpl
or
dec
mov
call
jmp
fstps
inc
cmp
and
popa
push
adc
ss
xchg
icebp
loope
std
mov
cmp
jl
arpl
std
aaa
dec
popa
xlat
stos
enter
rcll
fldenv
sub
push
jnp
cmp
inc
sbb
mov
fcoms
mov
cwtl
shrl
js
dec
add
sub
jae
inc
sbb
mov
fcoms
mov
cwtl
shrl
fisubs
mov
in
lea
dec
stos
fwait
repz
mov
stos
pop
movsl
and
fldenv
dec
pop
jp
out
iret
xchg
xchg
loopne
cmp
es
mov
stos
imul
jae
insl
imul
mov
push
pop
jns
fldcw
repnz
nop
dec
jg
mov
mov
lcall
push
addl
into
cmp
push
bound
and
rolb
and
dec
es
push
sahf
lods
jae
clc
mov
mov
xchg
jb
cmp
das
push
pop
xor
dec
xor
into
xor
mov
sub
pusha
dec
dec
gs
sarl
mov
enter
jecxz
arpl
test
cmpsb
fidivs
push
sahf
mov
mov
jmp
aam
adc
data16
movsl
mov
add
filds
shr
aam
pop
nop
pop
aaa
inc
xor
ret
popa
xlat
dec
jnp
imul
xchg
in
and
dec
push
in
cli
lea
stc
or
mov
cmp
or
lea
movsb
or
push
sub
rolb
popf
mov
in
es
loop
stos
push
out
pop
inc
add
jbe
shl
test
xlat
arpl
ja
push
dec
xchg
imul
and
imul
dec
xchg
jl
push
inc
arpl
int3
xchg
lock
lock
cmp
and
fidivrl
adc
stos
dec
jg
jg
pop
pop
pop
std
mov
stc
scas
pop
mov
ficoms
std
xchg
das
cmp
fistpll
jb
out
mov
push
subl
cmp
lock
sub
xor
push
mov
aad
jno
aam
pop
adc
enter
leave
scas
and
jmp
out
shl
in
aas
mov
lods
sub
mov
xlat
sub
int
fadd
icebp
dec
or
and
add
lcall
jno
sub
xorl
shr
jbe
add
ja
dec
xchg
xchg
xlat
xchg
outsl
or
imul
and
sub
cmpsb
lods
or
pop
test
push
mov
fs
and
jp
out
imul
dec
sub
fsubrs
loope
outsb
test
mov
sti
or
pop
sbb
outsl
cltd
lcall
pop
dec
daa
ja
ds
arpl
mov
ror
rol
dec
stc
mov
cmpsb
test
add
repz
popa
add
push
ja
sub
pop
test
mov
cmpsl
push
lods
lahf
mov
mov
fidivl
mov
or
xchg
imul
scas
xorb
push
icebp
xchg
in
aas
fistps
xor
fimull
jmp
mov
dec
sbb
add
adc
test
sub
bound
mov
int
lcall
adc
adc
jecxz
rcrl
incl
cmp
leave
pop
push
push
mov
ret
orl
dec
mov
ret
mov
sbb
loopne
fs
mov
mov
pop
adc
add
testl
jmp
and
shr
add
gs
mov
fldenv
mov
xlat
in
aad
push
xlat
jnp
test
fwait
cmpsb
mov
mov
jmp
aad
add
mov
push
sbb
push
mov
xchg
jb
adc
mov
push
lahf
add
push
iret
std
jmp
pop
mov
test
xor
push
and
cmpsb
shrb
sub
jb
ds
jg
xor
xlat
stc
add
inc
fadds
lds
sub
sbb
stos
cwtl
jl
pop
fidivrs
out
clc
inc
sub
inc
out
jecxz
in
add
xor
jmp
xor
imul
call
mov
sub
add
inc
sti
lea
adc
aam
sub
movsl
xchg
jo
cmp
lock
mov
sbb
cmp
rcr
add
outsb
mov
insb
add
push
jno
leave
xor
aaa
or
push
jns
xlat
ficoms
fwait
cld
decl
inc
sub
in
adc
lahf
sbb
push
cmpl
xor
stos
cmp
insb
mov
jae
xlat
out
scas
pusha
mov
or
jmp
sub
fcoms
pop
mov
jne
xchg
cwtl
cli
cmp
into
sbb
notl
or
sbb
ds
idivl
inc
adc
jmp
pop
cmp
mov
jb
sub
xchg
or
dec
xchg
fs
inc
or
cs
sti
dec
inc
pop
enter
and
push
icebp
rorb
ja
mov
jecxz
test
xchg
lcall
addr16
push
lock
ljmp
lret
mov
inc
xor
hlt
xchg
mov
jp
cmp
jge
outsl
stc
fcmovb
int3
push
pop
hlt
sub
idiv
jno
cmp
jl
aaa
cwtl
movsl
pusha
xor
popl
movsl
popa
lea
cmp
jnp
xchg
test
mov
mov
insl
xchg
cwtl
pop
fstps
xor
lahf
dec
insb
test
cmp
fs
mov
inc
cmp
add
clc
ljmp
lret
mov
addl
pop
icebp
mov
push
mov
out
loope
mov
into
mov
outsb
jmp
mov
push
pop
push
test
sbb
imul
sub
or
sub
sub
push
fsts
lahf
xchg
rolb
sahf
lock
fnstsw
jp
in
sarb
push
mov
dec
outsl
dec
mov
pop
cmp
mov
pop
aas
insb
call
mov
adc
popf
dec
mov
popa
mov
out
add
je
inc
lods
xor
mov
fidivs
shr
loope
js
movsb
bound
pop
ljmp
loope
daa
fwait
mov
test
sub
ret
test
or
bound
test
lahf
mov
loope
mov
mov
mov
xor
jno
or
aam
popa
mov
aaa
imulb
inc
data16
lods
push
lock
sbb
out
loope
xor
push
mov
fidivl
incl
fcoml
ja
pusha
jbe
addl
aas
xlat
mov
lcall
push
popf
ss
lcall
xor
or
mov
ret
jp
les
aam
clc
mov
adc
leave
mov
jecxz
xchg
pop
dec
mov
xor
mov
test
mov
rorl
inc
lods
or
nop
lods
inc
mov
xor
jmp
mov
pop
mov
inc
xchg
mov
pop
fstp
add
test
sbb
aad
loopne
daa
adc
push
sbb
jmp
cmp
mov
lods
push
mov
out
outsb
mov
test
fimull
ret
scas
xchg
mov
push
fs
jmp
xchg
mov
inc
dec
aad
xchg
cmp
stos
jp
mov
rclb
pop
or
scas
test
nop
mov
cmpsl
add
rcrl
adc
cmp
jb
ret
imul
es
add
in
out
jbe
imul
in
loop
imul
rolb
adc
stc
leave
dec
cmp
imul
cmp
test
pop
cltd
push
out
mov
or
mov
push
arpl
ss
xlat
pop
scas
cmp
das
and
repz
mov
sbb
xchg
dec
jge
call
dec
out
mov
ljmp
movsb
jns
cmpsl
scas
les
adc
push
push
xchg
push
lret
in
sti
inc
mov
jge
mov
mov
lret
sub
imull
lret
cltd
jo
lock
loope
scas
bound
insl
push
adc
push
incl
push
ret
jle
add
xchg
in
imul
sub
push
fcompl
mov
pop
push
cwtl
arpl
fildll
scas
roll
mov
scas
test
pop
mov
iret
or
icebp
cmp
or
xor
adc
aam
mov
xor
push
loopne
fbld
mov
push
add
mov
sub
insb
lods
stos
mov
pop
jl
call
fnstcw
data16
data16
enter
rorl
jge
ds
xchg
sarl
xchg
lahf
jbe
mov
or
pop
add
cmp
xchg
ficomps
outsb
jecxz
or
ss
test
data16
aas
je
fcomps
xlat
notb
addl
mov
jno
sbb
jbe
mov
sub
dec
fcoms
add
inc
mov
stc
fcmovnb
dec
or
dec
loopne
lods
push
lods
cs
adc
repz
out
jns
fwait
inc
jg
jl
add
lods
inc
adc
daa
xor
jb
xchg
daa
jl
mov
push
inc
stos
or
pushl
inc
fsubp
out
sbb
jl
insl
mov
mov
xor
cltd
stos
in
ljmp
js
push
jo
lret
xchg
lret
shl
outsl
stc
std
pop
shrl
pop
mov
pop
xor
outsb
mov
into
add
fs
stos
aad
pmaxub
std
and
lock
mov
pop
call
jo
bound
dec
mov
loope
pop
popf
push
sub
inc
xorl
jno
pop
xchg
lret
xor
sub
add
pop
and
in
test
cli
in
inc
lcall
inc
gs
lods
dec
fisubl
dec
xchg
adc
faddl
fs
repnz
jbe
mov
pop
sbb
call
stc
into
out
sbb
pop
sbb
xchg
insb
fiaddl
rorb
inc
dec
cwtl
push
insl
lcall
and
daa
lret
out
jg
xchg
or
mov
imul
xor
inc
push
jecxz
xchg
fstpl
cmp
jmp
pop
inc
in
push
inc
icebp
jo
mov
hlt
rolb
adc
out
lcallw
mov
jecxz
out
sub
add
push
ja
jp
js
cld
fmull
push
out
jae
outsb
mov
fisttpl
out
adc
cwtl
sti
in
cld
or
inc
jne
and
enter
ja
jge
lds
sub
sub
cld
jmp
hlt
subl
inc
into
mov
je
ljmp
mov
mov
fs
jp
cs
push
xchg
pop
mov
jg
mov
inc
mov
in
int3
add
dec
push
fcmovne
stos
rcrl
adc
outsl
adc
cs
sarb
lods
inc
inc
inc
push
into
fmulp
jb
andb
xor
push
mov
popa
sub
out
lahf
sub
loop
mov
scas
movsb
inc
sbb
out
dec
fs
xchg
cltd
test
add
xor
sarb
leave
inc
sub
aaa
hlt
stc
lods
dec
push
cmpsb
arpl
stos
mov
data16
movsb
mov
jb
lret
jns
add
xorl
leave
and
sbb
jno
xchg
and
push
in
inc
xor
and
push
icebp
jmp
pop
inc
iret
outsb
aaa
pop
divb
mov
adc
adc
xlat
jp
or
in
xchg
jae
aam
lods
jae
push
mov
repz
test
enter
fimull
adc
mov
nop
test
movsl
cmp
cltd
aad
aam
test
xor
call
das
shl
mov
xchg
xor
aam
or
imul
repz
mov
push
insl
pop
add
xorb
scas
test
push
inc
mov
sub
mov
mov
cmp
int3
mov
aaa
and
lds
add
lods
sub
inc
je
inc
sub
shrl
inc
and
push
mov
fsub
insl
mov
in
xchg
mov
xchg
mov
jg
jle
adc
push
sub
adc
movsl
or
jmp
jno
push
sbb
inc
divb
bound
cmp
inc
mov
lds
fistl
mov
shlb
adc
jmp
dec
test
mov
fbld
cmp
jae
xchg
arpl
add
dec
or
and
arpl
psllq
or
push
out
pop
and
or
inc
movsb
pusha
repnz
mov
push
jmp
cmp
es
lea
xor
push
movsl
roll
cmc
cmpsb
leave
ja
jg
sub
das
lret
mov
ja
mov
pop
daa
or
inc
aam
int
mov
dec
dec
mov
aam
inc
push
repz
sub
push
xchg
leave
mov
imul
add
sbb
xchg
out
or
loope
arpl
daa
lret
add
and
fisttpl
scas
mov
jl
adc
mov
mov
dec
push
sbb
xchg
insl
ret
inc
in
mov
jo
sahf
and
or
movsl
nop
xor
lea
cmp
in
jecxz
cmp
pop
sahf
or
insb
mov
xchg
int
xchg
dec
xor
mov
lods
cmp
aad
mov
ret
inc
jmp
cmp
dec
bound
pop
sub
fisttpl
xchg
rcrb
lods
xlat
push
loope
adc
push
push
loopne
dec
jg
dec
stc
mov
mov
pop
outsl
shrb
xchg
pop
mov
aam
xlat
js
lods
inc
xchg
mov
jl
jmp
roll
pop
test
cmp
test
sahf
test
or
test
cmpsl
adc
fcomp
lods
fisttpl
arpl
data16
lds
mov
enter
imulb
jnp
lds
in
adc
or
test
lock
cmovns
call
pop
popa
inc
and
mov
scas
ret
jge
push
in
nop
rcrl
jns
rcrb
adc
orl
idivb
aas
dec
movups
mov
or
xor
cmp
xlat
push
cld
add
in
loop
sub
jecxz
pop
jp
and
std
cld
icebp
les
in
imulb
mulb
jg
xor
inc
jecxz
mov
aam
jl
mov
das
jns
cmp
inc
mov
jne
jecxz
mov
loopne
shlb
aaa
xor
outsb
jbe
sub
mov
mov
loopne
fcmovu
fstpl
mov
lds
pop
push
subl
adc
jmp
mov
lods
loop
stos
pop
mov
mov
pop
sub
out
sarl
mov
loope
pop
mov
adc
fwait
dec
rolb
sarb
dec
xor
vpshlb
xor
pop
rorb
mov
and
cmp
pop
xor
cld
cmp
mul
add
push
lret
popf
xor
jge
cmpsb
push
jle
push
mov
sti
jle
imul
pop
mov
dec
sub
stos
xchg
and
jmp
cmp
cltd
xchg
pcmpgtd
int3
shlb
jb
hlt
stos
and
mov
int3
stos
or
xchg
imull
fisttpll
mov
test
jle
dec
mov
cmp
stos
adc
sarl
push
mov
mov
mov
test
movsl
ret
pop
ljmp
xchg
fiaddl
push
test
sub
mov
jo
jno
and
imul
popf
bound
out
mov
cmpsl
sub
mov
out
loop
jecxz
sbb
sub
jecxz
and
sub
or
mov
lahf
ss
test
add
add
sub
cmp
sahf
cmpsl
sub
pop
add
xchg
cltd
cld
cmp
gs
mov
jg
in
cmc
and
rclb
inc
pop
xchg
pop
shrl
jno
sbb
out
jp
and
out
mov
xor
out
add
mov
xchg
ja
sub
fcomps
btr
mov
sbb
rcr
xchg
sub
dec
stc
pop
push
insl
dec
dec
jge
faddl
pop
repnz
cmp
aas
popf
pop
pop
push
fisubrl
mov
xchg
xor
adc
mov
out
xor
cltd
dec
std
xchg
or
dec
lods
bound
inc
lods
and
push
imul
loope
pop
movsb
xchg
lock
lock
pop
shlb
lds
sarl
mov
cmpb
mov
mov
imul
mov
add
sbb
shll
out
fcmovnbe
lock
mov
ja
insb
pop
sub
adc
cwtl
aad
mov
jne
dec
lock
pop
xlat
imul
mov
in
je
mov
push
mov
stos
cmc
fcoml
mov
test
dec
ss
xorb
dec
mov
lock
sbb
ljmp
jae
jmp
and
gs
sbb
loope
mov
mov
div
lods
lods
dec
adc
or
sbb
outsl
lahf
leave
lret
iret
rolb
mov
lcall
fisttpll
sti
adc
cmc
and
aaa
push
mov
leave
mov
lret
jne
xor
inc
shll
adc
mov
xchg
loope
sbb
xor
in
outsb
lds
das
cmp
mov
xchg
mov
leave
sbb
mov
add
hlt
fs
js
and
jbe
andb
cmp
sub
popa
and
dec
insl
lds
out
xor
shlb
repz
pop
xor
lret
lahf
dec
push
mov
or
rcll
pop
push
mov
xchg
jg
mov
lret
dec
dec
ss
sbb
lds
dec
inc
rol
inc
into
out
int
mov
dec
imul
push
mov
mov
sbbl
inc
out
sti
jbe
mov
jecxz
xchg
outsl
pop
sbb
sub
jb
fmuls
mov
xchg
jno
les
fsubrs
ja
hlt
mov
iret
in
xor
sub
adc
jle
stos
lea
sbb
mov
push
shrb
es
aam
adc
call
pop
mov
pop
stos
sub
cmpsb
mov
pop
adcb
push
jbe
js
add
js
ljmp
lods
mov
bound
mov
pop
sbb
cld
fcmovnu
sub
and
jp
in
fucomi
orl
repz
mov
sub
xchg
jecxz
adc
push
int
and
flds
dec
jmp
repz
imul
ret
inc
test
dec
nop
and
cmp
pusha
dec
inc
cmc
add
int3
lret
push
cli
mov
xor
mov
aas
cmpsb
jno
adc
pop
pop
mov
mov
add
sub
adc
aam
call
arpl
jmp
mov
pushl
cmpsl
cmp
mov
pop
loop
fnstcw
arpl
mov
sub
aam
sub
push
add
dec
xor
jge
in
xor
dec
push
and
dec
push
stos
bound
cli
fldlg2
ret
cmp
sysexit
js
in
scas
dec
dec
in
imulb
cmp
adc
xor
mov
mov
xor
jge
mulb
xor
out
loopne
movsb
pop
andb
pop
in
lods
shlb
lds
fsubrl
lods
push
sbb
push
test
dec
push
rorl
pop
push
lods
mulb
dec
push
add
aaa
push
dec
dec
es
hlt
inc
inc
nop
dec
mov
adcb
in
insl
add
mov
mov
mov
mov
rorl
xchg
pop
incl
pop
and
nop
filds
dec
gs
add
jg
scas
push
cli
mov
sbb
mov
pop
push
mov
push
ret
push
lds
hlt
cmp
push
nop
jle
sub
push
push
int3
lea
sbb
nop
setno
pop
out
xchg
mov
and
jnp
out
ljmp
mov
movsb
loop
cmovns
mov
insl
inc
push
xchg
mov
dec
xor
dec
imull
mov
ret
pop
ret
sbb
scas
cmp
mov
stos
repz
mov
imul
fwait
xchg
jmp
insb
or
icebp
ljmp
movsb
pop
js
scas
inc
cwtl
sub
dec
dec
je
in
fwait
xchg
mov
xchg
aad
or
xchg
dec
mov
push
cmp
lods
mov
insl
pop
mov
cltd
and
js
ljmp
repnz
fcomps
lods
movsl
mov
out
lods
out
sub
push
sbb
leave
xchg
imul
or
lds
cld
push
test
js
jp
xor
jns
out
jg
movsb
push
cmc
aaa
clc
xorl
out
fstl
nop
test
sbb
jecxz
mov
dec
pop
out
idivl
dec
clc
pop
xor
mov
out
movsl
repnz
orb
push
scas
xchg
into
movsl
push
mull
or
inc
cmp
adc
loope
es
dec
mov
icebp
cmc
test
dec
mov
lods
cs
mov
addl
mov
inc
in
push
pop
inc
sub
fnsave
pop
ja
bswap
js
add
call
or
mov
dec
mov
cld
or
jl
jnp
pop
js
push
jno
mov
mov
pop
push
push
cmp
in
in
pop
mov
pop
pop
in
jns,pn
in
inc
push
lret
adc
sbb
int3
and
jb
and
add
bnd
loope
aam
cmp
xor
add
sub
jae
inc
sbb
mov
fcoms
mov
cwtl
shrl
js
dec
add
sub
jae
inc
sbb
mov
fcoms
mov
cwtl
shrl
dec
xor
add
mov
inc
fcoms
mov
fcoms
mov
jo
jl
and
adc
js
sub
jae
inc
cwtl
xchg
call
sbb
fildll
mov
lods
pushf
ret
icebp
out
negb
xchg
xchg
add
popa
jbe
add
sti
xor
and
fld
rcl
out
notb
cmpsb
mov
push
pop
outsb
popa
jbe
sub
xor
and
or
adc
daa
addb
pop
test
sub
add
push
pop
jo
push
push
push
nop
and
mov
xchg
xchg
sbb
mov
test
lret
sbb
jge
lds
or
xchg
jle
lcall
stos
mov
nop
dec
mov
lods
jnp
scas
rorl
sbb
outsl
lds
in
adc
inc
mov
mov
cmc
mov
ret
icebp
xchg
mov
notb
mov
mov
cltd
sahf
ja
adc
fwait
and
fimuls
adc
push
sbb
or
add
xchg
adc
mov
add
popa
jne
mov
push
xchg
inc
es
jns
xor
pop
mov
adc
popa
sbb
outsb
add
lret
loop
shl
xchg
notb
cmpsb
sbb
inc
sar
test
cmp
clc
xor
inc
add
mov
mov
lcall
shl
add
add
inc
push
pop
roll
sub
rolb
adc
or
push
inc
inc
pusha
inc
mov
mov
xchg
mov
mov
push
jno
popa
jbe
push
add
xor
and
rol
rcl
out
notb
cmpsb
mov
push
jno
popa
jbe
push
add
xor
and
rol
add
sbb
loope
lahf
rorl
lds
push
idivl
lods
pop
jle
fnsave
and
or
mov
mov
inc
cmp
decl
sbb
and
mov
out
icebp
dec
shrb
jl
fsubrs
cmp
incl
js
loope
aas
cwtl
xchg
sbb
mov
adc
loope
in
rclb
mov
scas
mov
stos
add
sbb
in
sbb
rcrl
sub
cwtl
or
push
xchg
in
cmpsl
fisubrs
test
mov
movsl
push
xchg
popf
outsl
int3
mov
dec
jne
mov
or
scas
repz
xor
fcomi
pop
clc
js
pop
jecxz
pop
inc
addr16
repz
std
jg
mov
sbb
test
jne
les
add
test
mov
pop
shl
mov
out
ret
popa
mov
add
lds
mov
and
cmc
push
jnp
fiadds
or
xchg
jle
mov
test
lods
add
sub
das
fldl
test
shlb
dec
mov
mov
and
cltd
jo
add
xchg
dec
stos
push
leave
cmpsb
mov
scas
neg
push
mov
rclb
inc
lea
pop
jl
sti
ss
lock
in
lods
jnp
movsl
or
stos
arpl
jne
sar
out
sub
cmp
jo
gs
outsb
xchg
adc
mov
add
test
lcall
pop
icebp
movsl
aad
jmp
stos
lods
cmp
inc
hlt
pop
mull
sbb
add
shrl
test
dec
js
xchg
and
or
mov
lods
mov
jb
enter
xor
call
in
inc
cmpsl
xchg
aad
lretw
inc
ficoms
adc
lods
shrb
pop
mov
jbe
mov
rcll
mov
pop
xlat
jle
mov
jle
push
insl
ja
dec
pusha
xchg
das
andl
aam
inc
push
mov
and
and
rcll
rclb
mov
shr
mov
sub
lret
mov
fistl
fsub
mov
adc
xchg
cltd
inc
hlt
loope
aam
jns
test
fdivrs
mov
cmp
pop
sub
jnp
sub
xor
push
out
cmp
stos
cltd
add
inc
pop
jo
push
in
jne
or
aad
sbb
xor
sub
push
pop
sbb
adc
data16
and
push
push
es
rcrb
mov
sbb
movsl
mov
cmp
lock
pop
sub
dec
out
mov
cmp
jecxz
mov
dec
test
stos
push
lds
cmp
adc
mov
shll
js
pop
repnz
fcompl
mov
mov
xchg
xor
add
add
add
movsl
cwtl
in
jae
dec
out
dec
ret
das
fisubs
xchg
inc
adc
imul
sbb
imul
mov
ja
mov
lahf
repnz
iret
sbb
jnp
mov
mov
aaa
pop
mov
or
enter
pop
cmp
dec
adcb
cmc
js
std
call
in
sub
pushf
pop
or
js
pop
jo
add
and
out
imul
enter
fstl
xor
into
ficomps
sbb
xchg
sub
jne
mov
stos
scas
sar
mov
jbe
movzbl
push
or
xor
gs
or
test
sahf
mov
aas
xor
clc
mov
test
push
pop
cld
dec
loop
cs
or
jb
xor
test
in
aam
fs
in
xchg
ja
out
xor
and
and
jecxz
add
jnp
push
jne
movsl
roll
sub
filds
int3
ret
movsb
sub
add
add
dec
int
jp
dec
ja
lock
cmp
movaps
xchg
mov
dec
test
jl
add
or
lret
and
imul
jp
add
in
jmp
and
fbstp
stos
in
shll
sub
dec
push
xchg
mov
or
data16
jns
adc
scas
or
xor
cmc
arpl
js
ljmp
inc
cmp
pop
cwtl
mov
shlb
clc
push
ret
in
aas
push
add
cmp
lods
cli
add
xchg
mov
jle,pt
popa
aam
inc
js
test
sub
inc
sub
fsub
mov
dec
fs
mov
add
shl
inc
inc
ja
adc
loope
rcll
sub
and
xor
loop
dec
mov
adc
dec
mov
mov
daa
in
sbb
add
iret
cmp
pop
mov
outsl
xorb
or
lahf
outsl
aam
pusha
ljmp
aam
ror
jbe
js
pushf
jl
cmp
shl
dec
fcomp
mov
repnz
mov
ss
shrl
ljmp
imul
clc
xchg
add
ljmp
adc
jmp
stos
gs
sti
call
js
popf
fs
mov
rcrb
subl
jbe
idivl
fadd
mov
arpl
pop
in
jecxz
add
inc
or
int
mov
insl
out
inc
test
inc
scas
es
jnp
push
mov
jne
add
add
je
jb
jp
outsl
add
push
xchg
pushf
enter
sub
rcr
out
mov
stos
cmpl
insl
mov
jge
stos
scas
pop
insl
or
imul
cmp
addr16
xchg
or
lea
xor
lock
dec
imul
rcll
in
adc
jno
sbb
push
cmp
pop
into
jae
mov
loopne
pusha
call
cmpsb
mov
jns
icebp
push
gs
addl
pop
cmp
add
bound
std
mov
dec
cwtl
pop
pop
sub
jp
movsl
add
call
jb
pop
or
hlt
js
dec
push
pop
mov
mov
push
inc
and
pop
ret
sub
leave
add
mov
lods
and
fstpl
or
pop
jle
mov
orb
rep
sub
dec
pop
sub
xchg
sub
test
lock
xor
into
sub
out
sbb
dec
fcom
push
aam
push
test
add
ds
in
cmpsl
popf
aas
mov
jmp
push
pop
ficoml
fnstenv
ret
jae
cmp
data16
lock
pop
mov
mov
mov
add
and
sub
clc
mov
stc
outsb
aad
xlat
cmp
xor
test
ds
mov
and
mov
ret
and
lock
inc
popf
das
push
add
sub
xchg
bound
xor
mov
mov
sub
sbb
sti
out
jns
fcomps
outsb
adc
mov
loopne
int3
lods
push
lods
mov
fcoms
sahf
and
dec
and
sbb
gs
mov
jbe
fwait
or
pop
and
mov
sbb
pop
adc
jnp
xchg
and
inc
mov
or
gs
add
inc
and
fsubr
lods
xchg
or
or
and
xor
fcomps
jmp
cmp
clc
inc
mov
arpl
les
mov
add
mov
cmp
and
add
add
xor
push
xor
or
hlt
inc
cmp
pop
bound
ffreep
sbb
jb
cmp
inc
es
cmp
cmp
cs
popa
push
rorl
jge
jp
and
cltd
notl
movsb
loop
mov
iret
and
sub
push
push
pusha
adc
enter
ja
cwtl
bsf
or
les
aas
roll
scas
std
mov
jge
adc
jae
push
cmp
sub
lret
orb
cmp
push
jmp
dec
cmc
add
jle
adc
push
daa
mov
add
xchg
adc
in
fisubl
and
xor
adc
xchg
bound
in
cwtl
push
push
subb
cld
inc
in
push
ja
data16
xor
aas
hlt
xchg
cmp
sbb
jno
repnz
pop
sbb
cmpsb
push
loopne
xchg
repz
lods
fbstp
sti
inc
popa
xlat
adc
addl
popa
sti
repnz
stos
ds
insb
jae
xchg
loop
cmpsb
in
std
popa
pusha
and
mov
inc
lret
cmp
aaa
lds
mov
cmpsl
test
outsb
jle
mov
cmp
jl
std
pop
cvtpi2ps
mov
dec
ret
in
loopne
adc
repnz
sahf
pushf
hlt
daa
and
lods
jl
jae
cwtl
out
jp
cltd
jecxz
subb
pusha
cwtl
adc
or
and
sahf
inc
int
mov
xor
cmp
ja
test
sbb
jmp
mov
and
xchg
cltd
stos
push
push
mov
pop
ds
adc
movsb
xorl
pop
repnz
jo
xlat
fwait
loope
clc
cmp
data16
jmp
push
mov
out
mov
xor
nop
adc
xor
bound
in
mov
jae
incb
add
inc
fsubr
inc
or
sub
jecxz
push
test
stc
inc
nop
pop
lds
push
inc
hlt
mov
adc
sub
cmp
inc
pop
adc
inc
pop
and
dec
jg
movsl
call
and
or
inc
pop
pop
push
loope
nop
fimuls
mov
mov
scas
pushf
mov
xor
push
movsl
cli
mov
repnz
ds
sbb
mov
mov
adc
call
out
pop
push
mov
dec
jg
fadd
jmp
cmp
sti
mov
jp
fucom
sbb
add
ja
fldcw
cmpsl
adc
push
inc
mov
negb
mov
ret
adc
fsubr
push
leave
cld
jo
mov
aas
and
mov
out
adc
cmovp
je
and
insb
cltd
xor
mov
scas
push
xchg
into
jns
stos
mov
test
fcoms
mov
push
loop
addb
fbld
dec
imul
cld
les
filds
add
jmp
pop
xor
push
jl
es
jg
test
test
xchg
ljmp
sbb
dec
movsl
adc
test
popa
push
inc
aas
mov
into
push
test
jp,pn
cmovo
cmp
or
movsl
in
lret
hlt
sbb
add
inc
stos
mov
adc
idivb
pop
repz
add
add
mov
mov
xor
push
push
shll
sbb
xor
and
jns
inc
dec
cmpsl
scas
dec
inc
je
cmp
lahf
xchg
sti
mov
lret
call
rol
imul
push
and
fstpl
iret
pop
xor
cwtl
test
inc
mov
pop
mov
aas
pop
pop
cmp
test
rclb
pop
dec
es
mov
repnz
sub
imul
cli
sbb
imul
xchg
pusha
mov
lds
sub
js
test
lock
shlb
and
pop
cltd
mov
dec
decl
iret
mov
or
jb
mov
add
sbb
jae
fsubr
mov
icebp
and
pop
repnz
scas
push
leave
sbbl
xlat
rcrb
cmp
and
push
out
push
movsb
mov
loopne
and
xchg
shlb
pop
pushf
mov
xchg
jbe
mov
rclb
and
jb
cmpsl
jb
lret
sbb
mov
mov
push
sbb
sti
repnz
and
inc
mov
push
dec
adc
repz
mov
push
hlt
fbld
addr16
mov
dec
sbbl
ja
sbb
push
lret
sar
dec
mov
jnp
nop
push
fmuls
ret
xor
jo
in
xor
nop
mov
cli
repz
lret
pop
or
stos
pop
arpl
shlb
push
mov
pop
outsl
push
cli
push
xor
xchg
fs
leave
cli
ljmp
ret
jo
fwait
rcrl
outsb
in
lds
cmp
dec
sub
mov
add
dec
outsl
xor
push
cmc
and
lahf
roll
xchg
lret
sbb
stos
je
xor
rolb
testb
call
mov
sti
stos
xor
inc
arpl
aaa
push
mov
pop
or
cs
lds
out
lods
stos
pop
stos
push
lock
pop
ds
lcall
outsl
pop
cmp
sahf
mov
xchg
cwtl
out
int3
sti
and
outsl
stc
mov
popf
pushf
sub
mov
ss
cmc
xlat
inc
sbb
adc
jmp
dec
xchg
stos
mov
mov
push
add
dec
push
in
lret
xor
aad
xchg
arpl
mov
std
cmpsl
jne
cwtl
mov
subb
mov
mov
xor
sub
std
jmp
insb
xor
outsl
je
xor
mov
sar
out
je
xor
dec
jnp,pt
psubusw
dec
push
mov
inc
jmp
movsb
fildll
jb
shrb
jp
sub
push
jnp
jo
cmp
dec
stos
in
roll
jo
shl
jp
push
cmp
lea
ficoms
sub
hlt
and
in
roll
push
cs
sbb
dec
or
push
aam
negb
pushf
lret
pop
mov
jmp
ljmp
xchg
imul
notl
pop
mov
jns
mov
pop
add
push
or
in
call
in
xchg
cmpb
push
pushf
mov
push
mov
hlt
bound
out
lahf
jo
repnz
jb
clc
icebp
outsl
jl
lea
in
inc
fistpl
inc
cmp
sub
mov
xchg
out
ja
dec
xor
sarl
aaa
mov
call
sub
adc
cmc
cwtl
sub
iret
dec
mov
out
lret
jb
fldenv
fimull
bound
inc
adc
pop
mov
xlat
int
stc
int
pop
sbb
fstps
aad
jecxz
icebp
loop
mov
jo
pusha
jmp
les
leave
jns
dec
and
mov
jo
sbb
fs
imul
std
xor
shr
pop
stos
mov
or
pop
cmp
dec
xor
push
jb
or
scas
lock
mov
xchg
pushf
imul
add
push
pop
notl
inc
jmp
or
mov
sbb
ret
push
mov
mov
cs
lods
push
mov
insb
sahf
mov
cs
test
adc
fisubrl
mov
aam
lret
aaa
repz
loop
jnp
jnp
rorb
dec
fldenv
fistpll
roll
test
stos
xor
lahf
dec
jno
out
mov
in
pop
jle
mov
ds
adcb
jns
and
ret
adc
lea
hlt
or
xchg
inc
jge
jb
int3
insb
push
insl
cli
or
aaa
lret
sbb
jge
rcrb
push
pop
inc
mov
ds
mov
mov
out
xchg
nopl
icebp
lea
xchg
xor
ljmp
xchg
popa
xchg
fldenv
fimull
jo
test
sbb
ja
pop
sub
cwtl
hlt
xchg
gs
cwtl
mov
sub
test
inc
cmp
je
mov
add
xlat
add
fists
adc
bound
jmp
shr
call
mov
xor
das
cli
or
push
ljmp
adc
outsb
sub
ret
push
mov
loope
shll
jno
scas
test
push
push
pop
add
hlt
cmpsb
shll
add
sbb
jecxz
mov
arpl
add
loope
test
fistpl
cmp
cli
jp
mov
and
insb
xor
dec
inc
aad
pop
movsl
cmp
xchg
loopne
mov
lods
adc
lcall
data16
jns
lret
scas
mov
sub
mov
ja
popf
call
jb
shrl
sub
adc
es
jge
mov
add
mov
in
mov
outsl
jecxz
stc
fldl
aam
test
stc
xorl
jno
ja
cmp
xchg
inc
lahf
cmp
lret
adc
pop
outsl
jns
cltd
cmpsb
cltd
aam
inc
stos
cmpsb
lret
incl
outsl
or
dec
idivb
xor
sub
fistl
ss
cmp
std
iret
push
faddp
shl
xor
int
push
adc
dec
mov
add
test
hlt
fbstp
xor
and
hlt
mov
cwtl
leave
mov
movsb
pop
mov
jns
in
mov
cld
push
mov
out
in
push
mov
ret
adcb
mov
push
sub
lahf
pop
test
out
mov
mov
xor
shlb
inc
sub
mov
arpl
mov
sbb
mov
aaa
push
adc
sbb
and
cltd
push
push
mov
add
lahf
dec
add
sbb
mov
out
mov
bound
xchg
loop
je
xor
cwtl
mov
fildl
adc
mov
jle
cmp
jmp
fcoms
lret
test
push
je
sub
loop
add
inc
sahf
movsl
rclb
jge
pop
dec
jb
pop
clc
mov
dec
cmp
shl
sbb
inc
xor
lds
test
add
clc
lea
jns
pop
jno
je
std
jne
std
jmp
mov
dec
hlt
scas
dec
pop
loope
hlt
cmp
jle
fbstp
dec
and
ds
push
addr16
xchg
xor
sub
lods
in
and
sub
xor
sbb
jle
cwtl
or
inc
and
inc
adc
jo
loope
rorb
jne
mov
adc
jae
dec
inc
mov
push
cmp
mov
sarb
dec
int3
out
jle
push
or
push
hlt
pushf
ja,pt
sbb
cmpsb
mov
dec
mov
hlt
sbb
lret
push
cmp
sbb
cmpb
daa
and
jae
ficoml
xchg
inc
out
outsl
adc
jge
orl
pop
nop
inc
mov
ljmp
ficoms
xchg
nop
add
outsl
or
adc
fwait
int
xor
loope
stc
in
stos
or
xlat
imul
lock
loope
adc
jecxz
shr
aaa
jp
mov
mov
shlb
mov
sub
int
jp
cmp
adc
icebp
cmp
and
pop
and
stc
lea
insl
in
inc
or
dec
cmpsl
mov
xchg
lahf
ljmp
bound
xchg
push
jo
mov
or
xor
icebp
sub
inc
xor
gs
lods
inc
icebp
das
jmp
rcl
and
or
jns
sbb
les
xchg
sti
ja
xchg
inc
cmc
hlt
les
dec
sbb
and
loopne
dec
xchg
cmp
cmp
and
int3
fstpt
push
pop
shr
xor
xchg
inc
repnz
inc
jge
mov
inc
data16
rorb
fcompl
pop
cli
ja
or
lock
xor
pop
mov
dec
cmpsl
pusha
push
out
in
stos
decb
std
xchg
jnp
add
sub
xchg
sar
outsb
stc
sti
sbb
jbe
dec
mov
cmp
cmp
xchg
loope
pop
inc
xchg
mov
fcmovne
icebp
lods
cmpsb
gs
push
in
and
scas
in
add
sbb
movsb
enter
aas
in
mov
andb
push
dec
fs
shl
mov
lea
repz
icebp
and
mulb
and
jecxz
or
data16
adc
adc
add
pop
iret
bound
int3
ja
xchg
add
test
outsl
rcll
nop
or
movsb
je
mov
inc
into
in
push
xlat
popf
xor
lahf
dec
inc
bound
lds
popa
mov
sarb
sbb
sub
popa
pop
add
add
pop
jle,pn
fisttps
mov
mov
inc
je
pop
popa
adc
cmpsl
lods
in
cmp
rolb
xchg
lods
xchg
sbb
inc
xor
dec
aad
fbstp
fbld
out
or
xchg
dec
mov
lcall
jl
jo
xor
ret
mov
lahf
ds
icebp
push
sbb
xor
stos
xchg
or
ja
push
rcr
mov
hlt
cltd
in
inc
xchg
je
pop
mov
out
mov
cmpl
clc
push
mov
cltd
sbb
mov
mov
xchg
sub
popf
push
jl
ret
cwtl
movsl
les
jno
pop
jbe
jae
xchg
mov
sahf
jmp
cmpsb
dec
sahf
fwait
lds
jecxz
add
lret
mov
test
xor
xor
enter
cmp
cmpl
jecxz
pop
xchg
mov
stc
shlb
lahf
pop
in
adc
pushf
test
mov
popf
jecxz
notb
cmpsb
mov
push
jno
popa
jbe
push
add
xor
and
rol
rcl
out
notb
cmpsb
mov
push
jno
popa
jbe
push
add
xor
and
rol
ret
loope
nop
xchg
mov
inc
inc
push
js
gs
add
push
xor
and
xor
leave
mov
xchg
jbe
mov
popa
add
mov
pop
fimuls
cmp
sub
sbb
or
js
dec
add
push
test
cwtl
push
mov
clc
push
insl
and
xor
cmp
sub
sbb
or
pop
mov
dec
mov
mov
add
adc
and
enter
jmp
push
inc
adc
or
mov
pop
enter
ja
ja
pop
mov
dec
dec
mov
int
or
sub
ds
outsb
pop
test
jle
testl
js
mov
push
sahf
cltd
jl
mov
mov
test
xor
nop
mov
inc
inc
scas
push
xor
jne
stc
push
sub
sub
jp
movsb
jns
push
jne
cmp
popa
addr16
pop
popa
daa
fadds
fsubrs
xlat
mov
jns
jge
dec
mov
pushl
dec
stos
call
leave
inc
and
jl
cmp
sbb
inc
sub
scas
test
mov
shr
das
ror
leave
add
shrl
loope
out
xchg
js
push
pop
mov
push
call
mov
mov
test
popa
in
cld
push
xor
lock
into
insl
cltd
jne
inc
ficoml
cmp
sub
decl
rclb
stc
add
fs
bound
test
jecxz
test
insl
stc
js
push
inc
mov
jno
add
adc
and
xor
sarl
sub
sbb
or
pop
mov
inc
mov
jno
add
adc
and
xor
sarl
popa
mov
mov
aam
es
negb
or
icebp
mov
xchg
mov
stos
in
add
test
imul
lea
push
stos
popa
imul
xchg
push
ds
mov
addr16
into
shrl
xor
sbb
dec
xchg
dec
ja
lahf
imul
inc
adc
push
pop
les
sub
dec
xor
sti
cltd
or
cmpsl
shll
push
xchg
jecxz
adc
sbb
scas
xor
mov
adc
xchg
sbb
js
mov
js
das
mov
ja
fisttpl
sti
daa
imul
fimuls
aas
xor
imul
jnp
pop
mov
pop
cmp
dec
pusha
scas
pop
fldcw
push
dec
xchg
cmpb
jp
mov
push
loopne
cwtl
ja
mov
and
fildll
mov
cmp
xchg
jg
test
jnp
push
push
shrl
scas
cmpb
sbb
pop
jmp
and
mov
xor
jno
call
nop
push
sbb
mov
jbe
mov
in
gs
rsqrtps
push
inc
add
sbb
sbb
rcll
pushf
xchg
out
inc
push
mov
sahf
cmpsb
push
fists
loop
pop
jae
sti
sub
jg
cli
xchg
movsb
pop
in
push
jl
in
jmp
and
xchg
imul
rcrl
hlt
iret
leave
push
adc
jmp
dec
jecxz
push
mov
or
insb
lcall
fcoml
insl
mov
xor
push
rcrl
jbe
sti
imul
and
pop
and
xor
cmp
divl
xor
or
orb
mov
imul
shlb
addr16
mov
mov
cmp
sti
xchg
jns
pop
cmpsb
mov
rclb
cld
xchg
sub
lret
popa
xor
xchg
pop
insb
es
data16
mov
repz
xor
jns
addl
adc
dec
lahf
adc
mov
aam
scas
dec
cltd
and
sub
mov
push
xchg
add
mov
dec
sub
movsl
cmp
jecxz
mov
into
adc
jae
lahf
fisubrl
inc
daa
and
add
lcall
es
pushf
cs
dec
xor
add
lret
xchg
sbb
popf
es
inc
rorl
ja
and
or
jmp
mov
mov
ja
int
or
into
in
insl
sub
inc
lahf
repnz
pushf
fstl
movsb
jno
xchg
sti
xor
shrl
ficompl
cmp
in
flds
jae
ds
movsb
into
add
mov
cld
adc
cmp
in
pop
mov
pop
and
cmp
les
mov
das
push
sbb
aas
and
std
mov
xchg
jne
repnz
push
mov
jne
jg
cmp
int3
je
notl
movsb
and
sub
negb
and
daa
and
inc
ja
push
cmp
int
js
sub
ret
mov
push
fs
sbb
pop
stos
insb
xor
aad
sti
stos
sti
add
mov
add
mov
push
adc
stos
inc
movzbl
lods
sbb
mov
jno
sub
sbb
and
pusha
jae
repnz
push
or
mov
adc
or
subl
insl
test
imul
sbb
push
adcb
mov
lods
out
ficompl
call
xor
cmp
cmp
lret
push
jg
jecxz
pop
xor
dec
mov
andl
stos
push
xlat
mov
xchg
jmp
sub
int
sahf
mov
sbb
lds
repnz
xchg
fiaddl
outsl
pushl
push
bnd
inc
push
out
dec
xorl
xor
sbb
arpl
mov
mov
aam
jns
pop
enter
lods
xor
stc
mov
pop
mov
push
scas
mulb
outsb
dec
cwtl
push
rclb
cmc
scas
bound
fs
fxam
xchg
mov
jp
fldenv
imul
hlt
loope
mov
inc
fsubs
inc
orl
and
repnz
imulb
incb
cmp
mov
mov
push
push
fildl
pop
mov
shlb
pop
lcall
or
mov
insl
and
jge,pn
clc
mov
adc
dec
ds
mov
loop
add
xchg
int3
invd
decl
int
xchg
out
mov
jl
add
mul
fdivl
pop
ds
test
sbb
pushf
fidivl
sub
movsb
addr16
pushf
and
ss
lods
aas
add
or
lret
sub
adc
cmc
inc
mov
dec
fcomip
cmp
sub
xchg
movsb
sub
mov
xchg
mov
adc
lods
jp
je
insb
mov
inc
add
jmp
adc
scas
pop
outsb
lds
mov
mov
xchg
jmp
cmp
mov
je
ljmp
ret
data16
xor
dec
lret
and
rorb
sbb
mov
subl
inc
cmp
xchg
jmp
xchg
and
mov
push
push
mov
dec
ja
aam
stc
insl
fsub
dec
pop
sbb
sbb
mov
and
and
aam
push
insb
shr
mov
mov
lods
and
xchg
fidivl
adc
pop
cld
adc
fiadds
mov
lods
and
xchg
ret
in
jg
mov
adc
hlt
pushf
in
imul
or
mov
pop
in
jecxz
mov
out
xor
out
loope
adc
cmpsl
mov
daa
test
mov
fsts
sbbb
mov
js
add
sar
adc
lahf
scas
sbb
int3
xor
sbb
xchg
movsb
subb
in
mov
loopne
popa
mov
jns
push
das
push
mov
or
cmpsb
into
orb
jl
fiadds
inc
mov
add
push
and
cld
pop
lods
loope
popa
add
jmp
xchg
cld
adc
jl
jecxz
xlat
outsb
lds
mov
loop
push
and
loope
add
in
ret
cld
mov
lret
dec
sbb
xor
lret
test
call
in
dec
psrld
push
test
and
and
inc
sbb
insb
sbb
lret
dec
arpl
pop
add
scas
out
sub
mov
ret
cmp
jle
push
sbb
clc
out
jl
sbb
call
and
cmp
jae
mov
cmp
mov
cmpl
mov
test
dec
ret
out
push
icebp
or
mov
mov
movsb
sbbb
jg
iret
push
mov
push
rcrl
push
add
xor
xor
jp
xor
or
jbe
into
inc
sahf
adc
and
clc
stos
testl
lahf
jmp
dec
push
aas
push
scas
rolb
ljmp
and
pop
dec
aaa
in
sbb
jmp
int
rcll
mov
ret
je
ret
mov
lret
jb
adc
bound
gs
imul
push
jmp
pop
add
push
or
jmp
nop
stc
pop
jno
jnp
movsb
cltd
adc
les
iret
lods
outsb
adc
imul
fisttpl
push
cltd
cwtl
sbb
mov
xor
mov
stos
pushf
jl
mov
sahf
push
insl
insl
and
test
popf
inc
cmp
pop
inc
int
add
inc
pop
jmp
lods
seta
aad
orl
jne
jo
sub
ljmp
aam
lret
push
sbb
push
ret
pop
stos
stos
incb
iret
xor
mov
cltd
sbb
adc
orl
icebp
scas
jno
pusha
and
push
mov
inc
lidtl
rorb
xchg
mov
out
xchg
leave
fnstsw
inc
inc
inc
cmp
into
jmp
sub
or
dec
shrb
jecxz
xor
shlb
rorl
sub
cmp
jecxz
in
shrl
rcll
xlat
xchg
xchg
mov
cmp
push
je
pop
mov
cmpsl
pop
jne
cmp
sub
mov
out
cld
xor
outsb
scas
adc
cwtl
sti
pop
add
ror
mov
xor
adc
pop
push
fcomps
add
out
lods
adc
add
fwait
and
adc
xchg
std
mov
lret
ror
or
out
jecxz
sbb
adc
int3
sbb
jnp
adc
insb
ret
inc
xor
icebp
mov
jecxz
dec
ljmp
movsl
in
jae
andb
cmpsb
outsb
ja
fimuls
dec
pop
imul
xchg
or
into
push
ret
dec
adc
and
xchg
cld
lods
icebp
sbb
or
loop
add
mov
ja
inc
gs
mov
xchg
pop
ss
mov
aad
mov
negl
cmp
or
sbb
ret
orl
xchg
cmp
xlat
std
pop
lds
push
add
push
xor
xchg
out
xchg
addr16
lods
aad
mov
and
iret
in
fisttpl
cltd
loop
js
ljmp
add
popa
sbbl
add
bound
jne
stos
jbe
add
xor
jo
mov
std
cwtl
sti
lahf
es
dec
mov
into
push
add
test
and
ss
test
testb
enter
sarb
push
adcl
jne
mov
mov
imul
sahf
outsl
jb
ror
jle
and
pusha
push
test
xchg
adc
leave
add
jo
mov
aam
and
xchg
and
cmp
adc
jge
sub
jno
push
mov
dec
ja
repnz
rcr
push
dec
aad
lahf
pop
shrb
lods
adc
movsl
jg
test
insb
testl
notl
or
cltd
mov
cmp
rol
imul
repz
mov
push
push
jmp
xchg
andl
jbe
sub
mov
aad
lea
fists
movsl
mov
adc
dec
adc
push
adc
mov
xor
jecxz
stc
iret
arpl
cmc
sub
inc
fnstcw
loopne
push
testb
hlt
sbb
xor
mov
add
sarl
loopne
dec
dec
adc
das
out
inc
inc
imul
xor
xor
jmp
mov
or
imul
aad
mov
aam
inc
and
rcrb
es
or
arpl
test
mov
cld
idivb
sub
inc
ds
mov
inc
push
add
inc
push
scas
leave
scas
mov
lods
mov
mov
mov
fcomps
adc
cmp
es
dec
cld
sahf
pop
pop
je
gs
adc
jmp
mov
lret
mov
sahf
xor
cmp
repz
bound
push
mov
mov
std
push
sub
push
shll
push
sbb
mov
ret
jnp
loop
cmp
shll
mov
movsl
add
jl
add
lds
imul
fs
sub
pop
mov
sbbb
push
pop
jb
xor
adc
mov
dec
lock
mov
addr16
cmpsb
xchg
cs
loopne
insb
mov
fldenv
ja
jb
sbb
mov
jmp
into
test
ja
daa
xor
jmp
divb
jle
out
ljmp
std
lahf
pop
cmp
push
lea
sub
push
push
mov
push
or
lea
add
pop
adc
and
pop
cmpsb
test
dec
pop
and
scas
or
dec
icebp
xchg
lods
negb
mov
test
test
mov
pop
and
bound
pop
xchg
push
in
add
cmpsb
ljmp
data16
jge
hlt
pusha
inc
mov
mov
adc
jns
dec
xor
lods
sbb
es
popa
sub
push
cmpsb
inc
sahf
cmp
pop
pop
mov
push
fcmove
outsl
loope
sub
jle
sbb
lahf
int
or
sub
add
int
xchg
cmpsl
xor
xor
fisttpll
loopne
xchg
popa
leave
inc
or
div
push
out
adc
mov
xchg
cmp
out
fmuls
sub
loop
and
fdivl
fs
jns
insl
or
ficompl
stc
adc
mov
jmp
out
in
stos
cld
test
jecxz
xorb
push
insl
mov
sub
arpl
push
sbb
mov
pushf
inc
testl
popa
test
adc
stc
push
add
push
lock
jg
mov
addr16
xchg
imul
js
and
negb
push
test
pop
fimuls
aaa
shrb
pop
and
cmp
xor
test
jns
add
xchg
push
xchg
insb
jmp
fcomps
dec
jb
xchg
imulb
sbb
jge
loope
inc
rcrb
enter
dec
xor
jle
cmc
loopne
sub
inc
adc
in
pushf
push
xchg
mov
xchg
push
popa
inc
imul
je
sbb
cmp
scas
xchg
div
xor
sarl
mov
xchg
adc
lds
repnz
push
ja
push
xor
dec
jne
xor
sub
push
adcb
sbb
dec
mov
adc
into
arpl
cwtl
fstpl
adc
dec
fidivrl
jg
cld
scas
ja
ret
sbb
lock
inc
mov
shrl
sbb
lods
hlt
mov
out
outsb
mov
jo
sarb
push
ret
inc
sub
cmp
pop
xor
sbb
int
mov
test
cmpsl
jno
pop
test
xchg
jecxz
xlat
adc
jle
bound
adc
push
push
in
mov
adc
mov
and
fldcw
outsl
sbb
xchg
pushf
mov
mov
add
fadds
mov
loopne
mov
sbb
xchg
adc
xorl
aaa
xchg
outsl
arpl
pop
or
cld
aad
aaa
shll
xchg
in
loopne
das
mov
xor
jns
cmc
jnp
data16
push
push
nop
fnstcw
iret
sub
fldl
mov
lea
dec
mov
insl
push
loopne
lret
int3
and
test
mov
mov
jg
movsb
xor
xchg
inc
enter
mov
add
call
aaa
movsl
fdivrl
mov
mov
sbb
and
fnstcw
loope
notb
test
outsb
rcl
mov
cld
roll
frstor
inc
sub
fsubr
jg
lea
sbb
enter
shld
inc
aam
sub
pop
dec
in
pusha
rclb
daa
aas
and
fadds
mull
mov
fs
scas
andb
negb
xor
adc
mov
inc
lock
push
ja
push
rclb
divl
mov
adc
add
aaa
inc
movsb
sbb
push
xor
or
inc
sub
xor
mov
mov
mov
cmp
pusha
jae
ja
ljmp
addr16
in
rsm
mov
or
imul
fiaddl
frstor
out
es
sbb
jno
daa
jge
adc
sub
rolb
out
add
test
inc
and
in
ds
pop
mov
xlat
scas
sub
cld
cld
jp
test
ret
pop
sub
movl
dec
call
test
jl
sub
adc
push
add
jmp
lret
lahf
lds
xchg
je
cmp
xchg
sub
aam
aam
sbb
je
push
sub
stos
divl
or
insl
jge
mov
dec
dec
daa
sbb
cltd
hlt
iret
in
js
je
aam
idivb
xchg
movsb
jecxz
mov
add
pop
xchg
negl
incl
xlat
mov
loopne
adc
mov
adc
lock
mov
xor
nop
outsl
inc
push
jp
sahf
mov
adc
mov
fistpl
fcomi
mov
mov
add
adc
adc
repz
leave
sbb
mov
lea
test
mov
pushl
imul
test
mov
or
xchg
call
add
dec
and
fbstp
pop
stc
loope
stc
rcr
repnz
mov
adc
outsl
adc
xor
int3
pushf
mov
shr
pusha
stc
jne
rcrl
ja
or
mov
cmp
sbb
pop
shl
sub
bound
mov
nop
lds
lahf
mov
inc
enter
int3
push
fwait
mov
mov
xchg
bound
adcb
inc
push
std
daa
arpl
lahf
dec
rorl
add
orb
imul
xchg
mov
scas
push
pop
ret
mov
and
rolb
enter
dec
cmpsl
add
fdivr
sub
jne
subl
mov
sub
mov
outsl
xchg
cltd
cld
add
push
rolb
inc
pop
push
cmp
jmp
cmpsb
mov
jl
lahf
les
mov
fidivrs
jbe
in
mov
int
pop
and
mov
mov
ret
out
jl
out
inc
int3
sub
sbb
in
or
das
add
sbb
xchg
jb
mov
xor
mov
ljmp
pushf
std
and
jo
sub
push
sbb
divl
xchg
sub
out
int
dec
cli
jmp
mov
stos
ret
mov
cmp
jnp
sbb
or
lahf
stos
fldenv
add
shl
or
pushf
add
mov
jae
cmp
xchg
jge
in
dec
rclb
mov
and
push
sbb
mov
shll
xchg
jo
popa
fiadds
cs
jne
push
adc
call
out
sbb
xor
out
sbb
movsl
xchg
dec
insl
adc
cmp
dec
scas
insb
xchg
orl
push
adc
sar
lock
and
lods
push
add
pop
pusha
xchg
aad
lahf
dec
repnz
enter
mov
movsb
inc
icebp
sub
jmp
adc
popa
sbb
js
aas
sti
jbe
ja
sbb
sub
xor
imul
push
mov
mov
dec
aas
and
add
scas
xorb
jge
mull
lods
inc
cwtl
push
adc
pop
dec
inc
out
push
cli
jmp
pop
movsl
inc
in
dec
sub
push
out
fidivl
push
loope
shll
pop
sub
stos
in
mov
or
insb
xchg
es
out
addr16
cmp
cmp
movsl
das
add
sub
sub
cld
je
sub
daa
lock
mov
sub
jmp
push
jg
test
sbb
push
mov
jl
in
fistpl
sahf
mov
dec
loopne
cwtl
aad
cmpsl
xor
mull
adc
mull
add
loop
mov
sbb
mov
sbb
cmp
mov
jmp
lds
add
mov
mov
aaa
push
mov
in
or
mov
pop
roll
and
jno
push
stos
mov
sbb
dec
add
sbb
xor
sti
cmp
dec
xlat
pop
push
dec
loop
fnsave
test
shl
mov
outsb
mov
bound
jb
stos
add
mov
aam
mov
clc
repnz
ficomps
inc
pop
xchg
cli
sub
into
imul
and
mov
ja
dec
cmpsl
ss
push
push
aaa
or
add
sbb
jl
sbb
inc
mov
push
sub
fildl
sbb
bound
movsl
sub
or
adc
and
rorl
dec
popf
lahf
lret
popf
adc
sub
inc
or
mov
enter
sbb
dec
cmp
int
call
jo,pt
pop
scas
dec
jg
es
leave
loopne
and
mov
in
xchg
fimull
sub
mov
stos
pop
adc
in
in
push
jbe
popf
push
xchg
mov
cmp
les
and
pop
fcom
xor
call
adc
or
and
stos
jecxz
dec
std
inc
adc
pop
dec
jns
fcoml
push
decb
push
adc
sub
sbb
or
pop
mov
inc
mov
jno
add
adc
and
xor
sarl
sub
sbb
or
pop
mov
inc
mov
jno
add
adc
and
xor
sarl
test
cwtl
icebp
or
pop
mov
inc
cmp
gs
jno
add
adc
enter
sub
sbb
or
pop
xor
mov
jno
jbe
cltd
pop
fisubs
into
aaa
cmpsl
sbb
sub
push
nop
sub
aam
mov
mov
ja
inc
cli
push
ljmp
xchg
sub
pop
testl
lcall
addr16
lret
push
ljmp
xchg
sub
pop
testl
lcall
mov
popf
add
ds
shrl
inc
xchg
sub
jp
dec
sub
pop
loope
jns
decl
lahf
cld
fisubrl
dec
dec
cmpb
scas
out
test
fwait
out
mov
into
xor
ja
adc
push
mov
in
push
fisubrs
push
and
aas
cltd
int3
and
pop
jecxz
cli
iretw
cld
lret
push
push
cmpsl
pop
nop
cs
adc
dec
sahf
adc
xchg
xlat
gs
dec
aaa
fidivl
mov
outsb
xor
push
cmpsl
sbb
xlat
ret
cmp
pop
dec
es
mov
scas
aaa
mov
lret
push
adc
lahf
dec
xchg
pop
jl
arpl
das
pusha
mov
testl
cltd
cmp
jmp
or
pop
testl
lcall
fidivl
inc
cli
push
add
aam
sarl
sub
cmp
ds
jecxz
mov
fsubp
cltd
ss
and
ret
outsl
in
sub
adc
repz
pop
iret
nop
mov
lret
lods
cmp
inc
rorl
mov
jp
push
lcall
fidivl
inc
cli
push
ljmp
xchg
sub
pop
testl
lcall
fidivl
inc
cli
push
ljmp
call
movsl
xchg
cmc
dec
sub
jp
dec
add
dec
jnp
out
mov
xchg
dec
pop
adc
push
push
mov
sub
or
pop
jle
mov
mov
mov
dec
aas
mov
inc
das
inc
jnp
xlat
lea
fsubrl
icebp
cmpl
ljmp
outsb
mov
loopne
add
aas
fnsave
or
mov
inc
mov
or
add
leave
inc
mov
and
pop
and
sub
pushf
nop
aas
test
jmp
jmp
loopne
push
push
push
adc
pop
pushl
mov
push
xor
ljmp
jne
xchg
jo
or
scas
mov
cmpsb
cmp
fptan
stc
jmp
xor
test
adc
push
sbb
das
mov
push
adcl
inc
or
das
xchg
mov
adc
xchg
mov
ficomps
lods
imul
adc
sub
push
insl
pop
std
cmp
xchg
bound
sbb
lock
sti
adc
cmpsb
stos
roll
mov
cmpsb
cmp
loopne
jb
dec
dec
and
daa
xchg
or
popf
add
mov
xchg
mov
or
movl
cmp
int3
std
xor
or
adc
mov
dec
dec
hlt
mov
in
xchg
rorl
mov
cmp
xor
inc
daa
adc
mov
jmp
lds
icebp
adc
js
and
sar
pop
xchg
sub
mov
shrb
daa
mov
pop
mov
pop
push
lcall
outsl
and
jle
daa
and
je
fidivrs
fdivrs
mov
sbb
dec
adc
mov
pop
jle
xchg
xchg
and
dec
add
in
xor
repz
negb
inc
loopne
cmpsb
xchg
sub
call
dec
cld
cld
dec
cld
push
sbb
cwtl
je
mov
dec
pop
mov
ret
and
fcompl
add
mov
pop
or
repnz
data16
stc
xor
aas
in
mov
add
aaa
andb
mov
cli
fdivrl
or
push
xchg
jle
mov
xadd
xchg
leave
jmp
or
push
push
add
mov
sbb
adc
xor
xlat
aam
aam
gs
leave
adc
into
push
orb
cltd
lahf
rcr
bound
or
or
sub
leave
push
ja
shlb
testb
jno
or
addr16
ja
test
xchg
ds
xor
in
je
xchg
or
test
mov
adc
pusha
pop
mov
test
dec
cld
cltd
push
pop
not
dec
daa
sahf
inc
xchg
outsl
pop
and
data16
inc
outsb
cmp
leave
loopne
arpl
inc
shrl
lods
aaa
in
movsb
in
sbb
pop
push
and
loop
popa
mov
scas
outsb
lret
aas
pop
push
pop
mov
xor
cwtl
push
mov
jb
out
out
add
sub
fistpl
xchg
sbb
pop
xchg
test
enter
cmp
mov
pop
jg
ret
jle
sub
in
dec
mov
repz
mov
stc
mov
dec
mov
mov
aaa
or
fldcw
and
pop
adc
out
loop
push
sbb
nop
daa
push
mov
fcomps
push
cmp
push
movsb
jae
loope
ss
push
fidivl
imul
inc
ljmp
insl
push
xchg
setge
mov
movsl
cmp
sub
mov
sub
mov
xchg
loopne
out
sbb
add
sub
idiv
pop
or
add
and
cmc
pop
and
mov
sbb
call
sub
data16
call
mov
add
gs
cmp
jb
inc
ror
push
and
repz
mov
movlps
movsb
pushf
sbb
sbb
pusha
cmp
mov
fsts
movsl
mov
push
sarw
int3
mov
sub
cmp
inc
jp
xorb
and
mov
daa
pop
mov
mov
int
cmpsb
or
jp
mov
nop
xchg
xchg
popf
mov
mov
xlat
xchg
ja
mov
mov
repnz
mov
mov
push
xlat
stos
jne
rorl
pop
push
ss
push
and
aaa
ret
push
into
in
mov
cld
or
xor
sbb
xchg
out
mov
mov
shll
ljmp
test
sbb
and
jb
mov
pop
cmp
jno
int
lcall
lret
jle
leave
and
inc
xchg
ljmp
cmp
nop
shll
adc
out
scas
fcoml
nop
test
enter
push
cli
adc
dec
cli
stos
outsl
sbb
xchg
xor
mov
or
inc
dec
jb
pop
sub
mov
std
cld
sub
xadd
or
xlat
xchg
into
adc
jne
and
mov
pop
sbb
outsb
jno
int
dec
movl
xchg
clc
inc
mov
in
cwtl
cmc
dec
push
ds
mov
inc
xchg
pop
and
adc
dec
mov
mov
adc
and
xchg
out
push
jnp
pop
sub
mov
jl
sub
add
dec
in
sti
int
sub
push
dec
and
jno
xor
stc
into
jno
pushf
dec
outsl
xor
jo
scas
mulb
add
leave
loopne
scas
scas
jne
inc
or
mov
loope
daa
sub
pop
fs
in
outsb
incl
mov
test
call
mov
pop
cmp
fnstenv
ror
addl
cmp
mov
js
lcall
mov
sbb
cmpsb
adc
loopne
xlat
in
dec
sbb
pop
lods
jns
xchg
jge
aam
pop
jnp
cltd
sbb
pop
aas
je
lret
jne
and
andl
mov
in
cmp
out
jle
nop
pop
xor
adc
xor
or
sub
push
test
lcall
je
addr16
in
sub
dec
push
lret
dec
push
mov
lcall
mov
lods
xlat
jecxz
push
in
jne
jg,pn
push
jmp
mov
fcmovu
lahf
in
mov
frstor
push
mov
cmc
ss
xor
push
or
lods
into
fldcw
sahf
mov
popa
xchg
test
loop
pushf
pop
in
fnstcw
add
fadds
ja
sub
mov
mov
sub
adc
push
sbb
mov
ja
cmpsb
lret
push
mov
xchg
pop
add
xchg
inc
push
in
mov
push
sbb
shlb
movsb
add
xchg
sub
movsl
les
mov
xor
push
int
or
insb
js
and
jl
lret
shll
mov
cmp
out
lret
cmpsl
pop
add
movsb
mov
hlt
sub
mov
mov
or
and
add
sbb
js
xlat
cmp
or
ljmp
insb
popa
xor
sarb
inc
fs
scas
sub
mov
push
and
sub
setp
sbb
sub
push
call
pop
sbb
in
xor
xchg
xor
fisubs
xchg
test
jl
pusha
bound
adc
dec
mov
mov
xchg
repz
pop
or
adc
loope
xlat
xchg
add
jp
fsub
pushf
add
jp
into
and
xchg
fsubs
lahf
jae
daa
scas
mov
leave
ljmp
outsl
ret
jb
xor
or
mov
ret
cmpsl
xchg
xchg
movsl
mov
jl
xchg
mov
leave
xlat
cmpsb
sbb
clc
inc
jmp
js
bound
adc
or
dec
add
xor
pop
mov
mov
lea
shrl
pop
shrb
jo
test
daa
jbe
out
sbb
add
loop
mull
inc
das
test
lods
mov
ds
or
aaa
inc
outsb
cmp
jp
pop
or
mov
je
flds
orl
dec
sbb
jb
data16
fcomps
dec
dec
cs
jge
sqrtps
aas
sbb
cld
mov
aas
std
ret
pop
sub
pushf
mov
pop
ret
dec
leave
aam
inc
push
outsb
add
fcmovu
lods
fisubrl
bound
mov
jge
pop
dec
pop
ret
sub
cld
test
addr16
sbb
mov
test
test
adc
dec
xor
push
imul
rclb
shrl
xor
pushf
add
xchg
dec
mov
scas
loopne
pop
sub
lcall
into
and
adc
lods
xlat
enter
adc
andl
and
jl
push
icebp
add
fimuls
lcall
cmpsb
xchg
mov
bound
insl
jle
or
jno
jo
mov
push
inc
or
scas
daa
and
std
jbe
bnd
xor
xor
hlt
sbb
imul
cmpsl
loope
jl
pushf
add
or
call
sub
nop
adc
lret
loop
daa
jle
insl
loopne
repnz
mov
and
and
loopne
loop
jl,pt
fs
popf
outsb
mulps
ret
inc
dec
push
mov
cmpsb
sarl
and
lock
dec
adc
sub
iret
hlt
sbb
sbb
jne
adc
rol
out
sti
gs
push
fdivrl
inc
movsb
and
xchg
mov
fldenv
sti
xor
int
inc
fisttpl
adc
xchg
sbb
movsl
shlb
inc
push
push
jae
iret
fwait
pop
pop
lds
sub
pop
or
dec
inc
jo
lock
xchg
xor
xor
sub
data16
cmpsl
jmp
xchg
ljmp
dec
mov
das
mov
out
cs
xchg
sbb
pop
or
jbe
pop
mov
jbe
lds
push
xor
mov
btc
and
push
jg
daa
xchg
lock
cltd
jae
xchg
movsl
add
or
clc
ljmp
repz
pop
daa
or
sti
shr
and
ret
dec
fcoms
cmpsl
stc
inc
sub
repnz
sub
sahf
int
enter
cmp
and
jns
inc
subl
hlt
pop
ss
sbb
mov
pop
pop
cld
bound
dec
or
pop
inc
mov
addr16
push
lret
fwait
loop
mov
fcmovbe
test
jno
or
mov
mov
insb
lcall
in
pop
clc
out
stos
sbb
repnz
mov
in
cwtl
pop
scas
hlt
push
mov
movsb
adc
sbb
xchg
cs
cmp
adc
sti
dec
inc
cmpsl
mov
adc
repz
dec
sub
mov
or
mov
cmc
std
ss
int
sub
xchg
xor
std
stos
daa
mov
mov
jae
xchg
push
rcr
xor
test
ss
fisubs
in
aas
stos
fstps
in
cmp
lods
inc
or
clc
inc
hlt
cwtl
pushf
mov
xchg
in
inc
out
shl
sub
mov
xchg
inc
mov
lea
cld
stos
cld
inc
and
push
clc
xorb
mov
clc
sbb
sub
pop
or
sbb
mov
or
mov
pop
cmpsl
push
rcrb
sarb
fucomip
aas
ds
add
leave
jns
cmp
add
loopne
imul
pop
and
in
insl
mov
pop
iret
mov
jno
mov
push
out
fcmovnb
sti
xor
mov
pop
mov
jg
jb
repnz
subl
negb
test
lret
hlt
mov
xor
mov
movsl
xor
jmp
cmpsl
cltd
mov
sbb
push
cli
and
pop
es
jle
xchg
lods
sub
es
sub
add
test
lret
and
icebp
leave
fsubl
mov
sub
loop
imul
pop
pop
lods
shll
sub
movsb
add
movsb
lods
pop
pushf
in
loope
flds
sahf
jnp
or
mov
jbe
nop
xchg
pop
ret
mov
dec
enter
cmp
aas
outsl
cmc
stc
jge
mov
or
mov
jno
cld
into
adc
mov
ret
int
ljmp
ret
mov
push
loopne
cmp
mov
ja
stos
inc
call
addr16
iret
test
mov
adc
inc
mov
enter
or
cwtl
push
pop
loopne
shrl
ja
dec
jg
mov
and
insl
jno
mov
mov
push
jmp
xchg
jecxz
and
xor
sar
imul
push
mov
loop
adc
sub
adcb
jns
mov
nop
int
test
pop
vmread
data16
out
push
mov
mov
jns
mov
mov
sbb
mov
inc
popa
in
xchg
cmp
in
mov
mov
movsb
xchg
imul
jge
arpl
fyl2xp1
adc
outsb
cmp
roll
lret
mov
push
mov
xchg
scas
iret
ds
fsubs
or
sub
mov
mov
push
leave
adcl
out
ret
scas
mov
xchg
rorl
xchg
and
divb
mov
jg
dec
mov
into
ret
out
pop
sarb
imul
add
out
pop
mov
pop
mov
sub
leave
in
push
testl
push
cmpsl
outsb
das
out
movsl
mov
add
js
push
loop
and
movsb
mov
call
push
mov
mov
mov
aaa
mov
sbb
add
inc
cmp
sub
orb
xor
or
sbb
orb
cltd
pop
jnp
jmp
cmp
sbb
js
icebp
out
cmp
pop
dec
int
mov
lahf
xchg
shll
les
int3
roll
add
xor
andl
pop
and
cwtl
mov
into
scas
jg
jmp
addr16
and
mov
xchg
mov
out
int
aas
jmp
dec
mov
fs
test
cmc
dec
push
test
cwtl
mov
test
pop
lods
cld
pop
lret
repnz
dec
lahf
dec
xchg
bound
out
cmp
cmpsb
hlt
xchg
lcall
push
push
cmpsl
xchg
aaa
cli
leave
out
mov
or
fstpl
jnp
fsubs
jl
test
cli
pop
outsl
pushl
ror
fcompl
aaa
aam
xor
dec
push
call
mov
in
fdiv
jbe
jmp
mulb
mov
xchg
dec
sub
insb
ds
data16
lods
repz
ret
sub
or
fisubrs
popf
js
cs
std
mov
dec
jp
jno
adc
xchg
mov
mov
sub
mov
in
sub
jecxz
cltd
test
loopne
sahf
mov
pop
cmp
inc
mov
xchg
mov
jle
nop
push
scas
cld
inc
and
outsl
jmp
and
stc
xchg
mov
jl
fildll
mov
pcmpgtd
lret
and
ljmp
clc
push
ljmp
call
fisttpl
scas
data16
movsl
testl
lds
cmp
push
js
cld
add
mov
fisubrl
jle
test
add
add
or
mov
clc
pusha
cmp
adc
jns
jno
mov
jns
jg
add
xor
sub
jno
inc
pop
adc
mov
sbbb
loop
add
jbe
jp
and
js
loopne
lock
add
sub
push
addl
rcll
ds
sahf
mov
jl
and
xchg
sbb
xchg
call
or
cmp
in
mov
sub
nop
dec
pop
mov
cmpsl
stos
cmp
jbe
or
cmp
adc
pop
mov
push
out
leave
xchg
mov
cmpsb
shrb
sub
arpl
dec
mov
jae
mov
shll
js
push
xchg
imul
ret
or
insl
mov
std
pop
orb
bsf
hlt
das
sub
cmp
xor
pop
cld
jbe
jae
push
mov
dec
push
xchg
aad
dec
mov
dec
jo
lret
dec
pop
nop
adc
mov
fwait
dec
adc
data16
push
jne
fistps
sub
xchg
sahf
lods
mov
jmp
enter
fwait
rclb
mov
cmpsl
fnstcw
xor
loop
mov
push
fs
pop
mov
insb
fisttpl
mov
fs
scas
mov
add
enter
push
sarl
xor
dec
inc
pop
inc
xchg
sub
in
sbb
rcr
or
jnp
xor
cmp
popa
push
mov
not
or
cmc
dec
fsubr
add
lahf
dec
int
or
pop
push
dec
pop
xchg
shrb
dec
push
out
ljmp
sahf
fdivs
and
cli
sub
pop
sahf
xchg
addr16
jp
test
mov
inc
bound
pop
in
mov
pop
ret
sub
int3
mov
jno
jg
and
mov
xchg
xorl
inc
add
daa
std
nop
fimuls
push
xor
mov
sbb
fistps
movsb
push
jae
xor
pop
cmpsl
mov
pop
push
dec
dec
fucom
loope
dec
xchg
shlb
addr16
and
or
roll
ficompl
das
lahf
test
sbb
sub
pop
dec
xchg
stc
xor
mov
sbb
mov
jne
add
bound
sbb
xchg
cmp
insb
mov
adc
out
pop
sarl
es
mov
add
or
add
sti
xchg
insb
mov
mov
arpl
icebp
test
outsb
ret
sbb
mov
roll
ret
repz
jbe
out
shrl
sub
out
pop
mov
lock
mov
jmp
cmpsl
push
sbb
idivl
idivb
testl
push
test
mov
add
cmpsl
daa
ljmp
in
mov
sub
add
xor
out
out
scas
cwtl
cmpsl
and
cld
call
ljmp
pusha
push
jg
andb
cmp
mov
cltd
mov
sahf
dec
je
aam
call
sbb
bound
fcoms
or
xor
push
mov
iret
aaa
jp
imul
pop
lea
mov
dec
xchg
jnp
add
mov
dec
iret
adc
lret
and
lahf
out
leave
stc
aad
push
push
stos
movsl
push
aad
jmp
sbb
in
push
nop
lods
mov
outsl
inc
das
scas
lret
jmp
jmp
inc
sahf
sbb
mov
mov
popf
int
add
imul
push
vcvttps2dq
repz
cld
imul
xor
mov
int3
imul
dec
in
lock
pop
mov
divb
mov
and
in
notl
cltd
add
pop
sub
imul
leave
popf
test
jp
repnz
imul
push
mov
bound
sar
sub
xchg
out
shrb
je
inc
dec
aad
jno
sbb
xor
push
imul
popa
mov
dec
js
jae
bound
push
cmc
xchg
sahf
mov
or
cli
std
sti
jbe
and
mov
inc
adc
ror
add
outsb
imul
test
bound
sti
popa
cmp
xlat
repz
jo
inc
pop
jo
xchg
js
loope
subl
les
sbb
test
add
lret
repnz
push
mov
inc
testb
xchg
or
xchg
xchg
push
ret
dec
xchg
insb
loopne
ret
clc
test
sbb
sbb
pop
leave
adc
mov
in
out
inc
add
shll
repz
cmc
daa
sti
fidivrs
push
pop
adc
dec
and
adc
ss
or
repnz
push
mov
inc
mov
outsl
inc
cmpsb
cmp
add
movsb
dec
xor
ds
gs
cmp
outsl
dec
jmp
repz
add
incb
pop
imul
add
inc
stc
jae
pushf
cmp
mov
add
cwtl
idivb
jmp
nop
inc
dec
insb
push
cmp
das
or
gs
pop
inc
subl
xchg
pop
mov
mov
jmp
cwtl
push
sub
jno
or
inc
in
insb
scas
icebp
lahf
sub
in
sbb
inc
mov
jecxz
insb
jo
and
dec
sbb
loope
inc
out
sbb
mov
jle
pop
repnz
cmpl
xchg
sub
pop
testl
lcall
fidivl
inc
cli
push
ljmp
xchg
sub
pop
testl
lcall
fidivl
inc
cli
push
ljmp
xchg
sub
pop
testb
xlat
push
lcall
fidivl
inc
cli
push
ljmp
xchg
sub
pop
testl
lcall
adc
xor
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
cmp
sub
mov
sbb
xor
inc
dec
mov
lea
in
fcmove
lret
cmp
or
pop
pop
dec
dec
mov
mov
ljmp
and
sub
jp
push
pop
inc
dec
push
mov
call
test
gs
data16
ret
mov
gs
scas
rorl
pusha
mov
icebp
test
push
movsb
xlat
mov
inc
cmp
jne
add
fldl
push
and
icebp
sub
insl
shrl
adc
mov
and
stos
in
xchg
in
mov
insl
sub
pop
pop
jg
filds
das
push
fs
jb
scas
stos
adc
jmp
cli
loop
in
and
xchg
cld
lods
pop
fdiv
lea
xor
xor
int
sbb
cwtl
mov
addr16
shr
pop
mov
stos
scas
addr16
lahf
and
idivb
or
jp
push
pop
inc
dec
push
mov
test
cli
fcmovu
lret
pop
pop
sub
jp
sbb
xor
mov
enter
nop
ljmp
inc
dec
sub
jp
das
pop
and
sbb
ffreep
sti
int3
cwtl
jmp
test
pop
jl
dec
jne
data16
adc
pop
pop
dec
dec
mov
popf
mov
fcmovu
lret
cmp
or
pop
pop
dec
dec
mov
popf
mov
fcmovu
lret
cmp
and
or
sub
cmpl
sarl
jae
mov
fcompl
sub
test
test
push
fdivrs
into
pop
xor
int3
cmpsb
cmc
dec
addr16
and
push
xchg
lea
pop
push
out
mov
mov
dec
jne
jmp
pop
push
push
fimuls
mov
cltd
jmp
fwait
jl
sbb
lret
or
mov
jae
push
adc
imul
pop
scas
bound
jbe
arpl
stos
mov
inc
cmpsb
ret
cwtl
inc
scas
outsl
subl
cmp
cld
mov
lcall
cmp
xchg
mov
test
add
repz
sbb
popa
sub
les
jb
push
repz
push
mov
in
lods
mov
pop
inc
cwtl
ds
stc
push
aas
push
loop
cli
loop
scas
jl
jae
in
enter
xor
sbb
push
push
mov
and
add
adc
fadd
sub
xchg
mov
adc
sbb
adc
punpckhbw
sbb
inc
pop
cmp
pop
js
push
pushw
out
negl
mov
in
mov
mov
mov
jae
call
xchg
xor
lods
sub
cmp
sbb
lret
sti
fwait
leave
fsubrl
mov
sub
jno
icebp
xchg
mov
inc
adc
lds
inc
clc
add
outsl
or
xor
push
ror
xchg
cmp
imul
mov
and
cmp
movsb
mov
pop
shrb
xchg
add
mov
addr16
sub
jmp
and
push
mov
xchg
ljmp
das
or
imul
popf
es
push
sbb
or
mov
lret
sub
jne
loop
call
sbb
push
in
push
andl
sub
cmc
jl
loop
adc
pop
fimuls
inc
inc
cli
in
or
jecxz
mov
imul
rorl
jbe,pt
pusha
inc
int
icebp
dec
adc
subb
mov
in
or
sub
cmpb
out
je
dec
mov
dec
jmp
out
pusha
xchg
fwait
bnd
divb
hlt
pop
scas
add
movsb
push
or
mov
lds
negb
rclb
icebp
in
xchg
or
mov
add
adc
mov
in
pop
leave
pop
lcall
adcl
mov
cmp
notb
and
xchg
xor
or
fdivp
loope
push
dec
cwtl
adc
adc
add
aam
pushf
mov
mov
sub
es
lcall
mov
xchg
lds
pusha
ret
scas
dec
jl
push
imul
je
xchg
lahf
jns
inc
imul
xchg
jp
subb
pushf
inc
in
loopne
push
dec
sar
xchg
jbe
mov
shl
jbe
scas
sar
dec
push
dec
insb
cli
cmp
push
out
mov
aas
insl
xor
scas
cld
inc
cli
mov
mov
mov
jg
pushf
std
mov
cmpsb
arpl
test
fsubr
test
mov
stc
je
cld
pop
div
mov
out
inc
stos
pop
or
xchg
sub
inc
stc
mov
pushf
aad
pop
sub
pushf
fcompl
int3
repz
lock
cmp
add
inc
inc
push
scas
test
pusha
shr
and
shll
jae
ja
or
xchg
lret
movsb
ficoms
icebp
jge
cmp
sub
sbb
jp
inc
fdivrl
dec
shr
sahf
shlb
aad
rcrb
test
adc
test
mov
imul
fisubs
bound
mov
jb
push
loope
movsl
mov
fs
inc
add
and
out
or
sbb
jg
mov
sub
roll
add
cmp
pop
add
add
push
orl
scas
daa
sahf
mov
dec
enter
mov
lds
sar
add
inc
lret
pop
xchg
scas
das
inc
nop
mov
fdivrs
fwait
pop
aam
pop
push
pop
sbb
fadds
inc
adc
add
pop
xor
pop
adc
add
push
adc
sbb
pop
fs
lods
cmp
sub
pushf
dec
mov
xorl
and
out
mov
stos
notb
mov
add
mov
into
iretw
cwtl
inc
imul
and
popa
inc
xchg
adc
cwtl
pop
aad
movsb
cmp
sub
sahf
xlat
js
add
std
cmp
aaa
enter
mov
or
std
int
fisttpl
ja
test
and
in
mov
xchg
mov
mov
pop
or
xlat
lret
pushf
dec
pop
lret
ljmp
ljmp
cwtl
adc
xchg
rclb
out
out
xchg
jns
mov
pusha
idiv
nop
dec
jno
xchg
lock
cltd
out
negb
sbb
inc
out
inc
push
push
xchg
loop
sbb
xchg
mov
jmp
sahf
jl
dec
icebp
mov
mov
cld
mov
dec
es
mov
lods
mov
sub
mov
mov
adc
pop
cmp
lods
push
sub
xor
dec
or
jno
jbe
push
repz
inc
mov
jl
repnz
or
dec
dec
dec
jo
call
je
clc
inc
xchg
inc
and
inc
add
mov
in
inc
and
daa
pop
out
fwait
adc
push
test
cmp
push
mov
sbb
push
dec
shll
or
roll
dec
sub
int3
sub
outsl
pop
testb
push
xchg
int3
push
adc
jns
cmp
addb
mov
mov
xchg
inc
dec
mov
bound
shlb
enter
mov
les
sbb
fstpl
and
sub
iret
das
aas
imul
sbb
jle
sbbl
ficomps
cmp
popf
in
xchg
adc
lahf
or
aad
sti
les
sbb
icebp
mov
xchg
out
mov
cmp
es
mov
ljmp
addl
jbe
pop
mov
cmpsb
fbld
sbbl
jne
mov
aad
shll
in
stc
repnz
xorb
jne
fs
icebp
adc
clc
lds
cmp
notb
mov
xchg
shll
pop
sub
pop
repnz
scas
adc
and
push
incb
fcmovnb
cmpb
imul
fmul
xchg
sbb
shlb
fsts
fsts
lret
or
cmpb
or
jmp
inc
push
jecxz
insl
mov
dec
pop
loop
jmp
inc
add
pop
notb
xlat
test
jo
jecxz
mov
int
lods
cmpsl
mov
mov
dec
mov
push
xchg
jno
cltd
outsl
lock
mov
add
rclb
test
add
cmpsl
ja
mov
xchg
mov
sub
jae
test
dec
outsl
cs
sti
push
jno
push
int
fimuls
popl
xor
sbb
out
push
cmp
mov
mov
mov
jo
mov
pop
fistpl
adc
push
push
push
ss
pop
dec
mov
mov
int3
jle,pn
push
jne
shrb
lret
into
push
sbb
idivb
in
icebp
pop
roll
pop
sub
mov
int3
enter
cwtl
fcoml
aad
cli
inc
lods
arpl
cmpsb
jl
ds
push
jne
xchg
xlat
add
cmp
ficomps
lods
leave
and
cmp
cmp
mov
scas
xchg
insl
xchg
ret
add
push
out
and
mov
push
ret
icebp
xlat
orb
add
rolb
jmpw
arpl
pushl
dec
iret
sbb
xor
addr16
cmp
int
js
je
dec
mov
dec
push
jp
addl
or
mov
neg
mov
cltd
add
inc
and
loopne
jo
mov
jle
repz
inc
aam
and
or
and
mov
sub
push
add
mov
dec
xor
in
xchg
int
cmp
sbb
mov
pop
push
push
incl
xacquire
sbb
fldt
dec
jo
push
icebp
les
mov
inc
out
int
js
mov
lcall
fsubrp
leave
jo
pop
outsb
push
testb
jne
pusha
fld
aaa
in
fcoms
and
repnz
dec
mov
add
sub
or
mov
fcoms
das
and
mov
xchg
jnp
mov
or
dec
fidivl
outsl
pshufw
or
inc
and
negl
js
jbe
mov
jno
enter
fildll
lret
inc
push
cmp
cmc
inc
push
inc
add
call
nop
sar
sbb
xor
adc
out
lods
push
adc
sbb
or
aam
or
pop
lock
jg
mov
dec
jg
aas
xor
dec
imulb
mov
fstl
je
aaa
loop
daa
stc
shrl
mov
test
push
mov
call
or
inc
imul
pop
and
jbe
inc
inc
aad
or
push
inc
push
xor
mov
push
ret
test
fucom
adc
test
shll
add
fidivs
lret
inc
xor
jnp
dec
imul
mov
fistpl
std
enter
inc
ret
in
inc
mov
sbb
notb
sbb
les
jne
ljmp
testb
jae
mov
fisttps
xchg
mov
mov
test
push
hlt
push
fldenv
push
push
cmp
adc
xor
mov
pop
and
bound
icebp
xor
call
dec
push
push
js
mov
sub
jns
imul
xor
in
sbb
outsl
xor
push
out
lods
sahf
fdivrs
aas
push
xor
mov
pop
cld
in
jp
js
push
out
fidivrl
adc
dec
insl
jmp
call
loop
pop
int3
xchg
in
push
push
scas
imul
sub
cld
fnstsw
shl
push
push
orl
mov
sbb
subb
inc
ljmp
pop
popa
sub
mov
lds
sub
mov
xor
mov
or
outsl
aaa
or
dec
add
jg
sub
shll
jle
lea
xor
add
call
pop
aas
test
mov
andb
xchg
pop
out
and
js
adc
shr
or
or
push
xlat
add
adcb
pushf
mov
mov
nop
xchg
out
dec
mov
cmp
xchg
fwait
jnp
sbb
ja
mov
xchg
hlt
popa
aas
sub
loope
cmp
add
adc
push
add
sti
xor
push
adc
xchg
loope
iret
jno
adcb
mov
cs
cwtl
adc
xchg
push
popf
or
jb
stos
xor
stos
pop
inc
sub
pusha
mov
movsl
in
jbe
stos
ljmp
out
fadds
xor
cmp
push
stc
insb
loope
push
mov
arpl
jg
add
enter
sub
nop
add
rorb
cmpsb
ja
push
mov
arpl
mov
pusha
mov
sar
jno
inc
ficoml
dec
out
movl
ret
ja
pushf
fists
sbb
pushf
sub
std
pop
dec
sub
fcomip
test
ret
out
dec
inc
mov
iret
ja
jo
xor
mov
jb
pop
fmuls
test
lcall
movsb
lea
test
dec
ds
cmp
movb
cmp
call
repnz
xchg
loop
pop
pop
enter
jge
xor
mov
sti
in
push
ja
xor
aam
orl
pop
cs
push
dec
adc
jmp
mov
pop
stos
insl
xor
sbb
mov
or
cwtl
dec
test
xchg
push
mov
mov
sbb
repz
jnp
aaa
adc
sbb
jmp
push
scas
loopne
mov
push
jg
call
fsubp
pusha
bound
inc
ret
ret
mov
adcl
mov
ljmp
das
aad
insl
inc
push
adc
xlat
inc
inc
or
adcl
sub
pop
inc
pop
xchg
push
pushf
js
sub
xor
lods
lods
push
mov
sbb
inc
pushf
or
pop
and
pop
lds
cmp
mov
outsl
comiss
mov
clc
xchg
bound
insl
xchg
inc
mov
leave
cmp
imul
test
pop
lods
fadds
enter
xor
jg
push
pop
aas
int3
push
dec
pop
sbb
inc
in
in
in
inc
rolb
inc
shlb
out
mov
sti
lar
jp
pop
cmp
cmpsb
xchg
xchg
cltd
push
jb
inc
mov
cmp
arpl
jge
call
cmpsl
bound
lock
loopne
loope
pop
sar
pop
bswap
sub
dec
scas
loope
jmp
mov
subb
gs
loop
repz
sahf
and
mov
cltd
mov
jnp
mov
arpl
dec
rcl
mov
pushf
mov
and
popa
test
dec
cmpsb
add
pop
cmc
imul
ret
popf
es
negl
mov
sub
aad
je
aas
data16
jl
das
push
push
sub
and
fimull
ret
aad
ljmp
out
int
sub
mov
jb
adcl
test
xor
mov
mov
lcall
cmp
and
popa
ljmp
inc
test
inc
shll
mov
or
inc
and
movsb
add
pop
inc
out
call
lods
jl
int
out
call
sbb
outsl
int
mov
pop
js
rcrl
mov
xchg
mov
adc
push
test
adc
pop
daa
xor
fwait
repnz
out
cmp
xchg
cmp
leave
sti
cmp
aas
adc
xchg
or
dec
inc
ljmp
adc
xchg
adc
test
pop
jno
cmp
xchg
mov
lret
sahf
xor
xchg
push
sub
jo
mov
loop
dec
cmp
outsb
pop
pop
jne
out
jmp
and
popf
ret
insl
leavew
add
movsl
mov
repz
push
mov
add
sub
cmp
sub
push
enter
loopne
jmp
jae
xor
mov
fcmovbe
add
cmpl
insb
cli
inc
roll
xor
std
test
rcl
inc
gs
add
mov
dec
mov
ljmp
stos
imulb
and
dec
dec
fsubp
add
jl
sub
adc
in
int
inc
ret
out
jp
addl
and
jo
pop
mov
fidivs
jnp
xor
mov
repnz
cmp
popf
loopne
test
mov
mov
adc
xchg
enter
cltd
roll
bound
lahf
out
dec
lcall
sarb
push
mov
add
dec
push
out
aas
jbe
je
and
je
aas
pop
push
add
cmp
mov
mov
push
cmpl
pop
dec
das
pusha
cmpsb
or
das
lret
sub
fwait
mov
add
and
push
pusha
fidivrs
jp
je
mov
inc
into
mov
movsl
sbb
push
imul
sarl
xor
lods
add
add
cmp
push
in
pop
mov
adc
and
pop
js
test
jno
daa
repz
cltd
mov
call
nop
imul
xchg
adc
add
xor
or
jno
lock
aam
outsb
outsb
mov
xor
xor
pop
rcrb
and
mov
pop
or
lods
iret
jbe
jle
cmp
movsl
or
jge
mov
outsl
lods
aad
test
push
dec
fsubrl
sub
mov
lret
pop
xlat
sub
pop
mov
lods
xchg
aad
mov
sub
sub
pop
enter
ljmp
mov
dec
xor
dec
test
cmc
repnz
mov
push
les
das
ret
cmp
adc
rcl
xchg
mov
mov
ret
mov
inc
inc
loope
lahf
out
jns
gs
test
ljmp
xchg
push
cmpl
sub
or
out
pop
mov
add
xchg
lahf
fs
fs
rorb
gs
mov
in
xchg
mov
push
sbb
in
sbb
arpl
lret
lcall
fwait
repnz
add
sbb
leave
xor
fnstsw
into
popa
dec
add
incb
or
fcomps
xchg
leave
sbb
fdiv
popa
rol
jecxz
or
cmp
adc
sub
fiaddl
pop
addl
push
pop
cmp
mov
xchg
negl
stc
and
mov
pop
stos
push
sti
scas
sub
xchg
frstor
aaa
xlat
in
movsb
mov
xlat
sbb
adc
pop
fnstenv
push
sub
push
pop
pusha
mov
stos
add
lahf
jno
mov
cltd
xchg
pop
fwait
insb
mov
fs
dec
or
repz
add
ret
inc
push
push
xor
dec
mov
sbb
iret
lds
add
add
shl
loope
repnz
rclb
mov
add
inc
pushf
sub
iret
mov
outsl
std
cld
inc
lea
mov
sahf
sub
lock
icebp
pop
or
inc
adc
cmp
clc
jl
in
int3
adc
cmp
inc
mov
int3
mov
lret
int3
cwtl
inc
ljmp
add
add
pop
sub
dec
sub
mov
ret
icebp
mov
jl
cmp
cmp
lods
jb
std
cmpsl
sub
jno
shl
les
xor
in
cs
int
outsb
mov
hlt
or
inc
rolb
sti
pop
cmpsl
mov
pop
cmp
jmp
add
frstor
leave
test
es
jecxz
cmp
adc
cltd
jno
sbb
movsl
insl
int3
push
fcoml
sbb
sahf
lods
adcb
pop
fldcw
int
xchg
call
scas
out
imul
mov
aad
push
fisubl
stos
xchg
xor
xchg
das
int3
dec
xchg
lea
mov
push
cmpsl
mov
insl
mov
sbb
xlat
cmp
sbb
mov
sbb
adc
add
adc
repnz
mov
cli
mov
in
rorl
mov
fmuls
ljmp
gs
loope
inc
pop
add
pop
mov
fdivr
loopne
push
mov
in
fdivrl
adc
in
and
push
sbbl
into
add
cmpsb
ret
and
push
mov
xor
addb
and
fwait
mov
popf
daa
lret
pop
mov
cwtl
jle
nop
or
cmp
arpl
pop
clc
clc
push
dec
xor
adc
push
and
mov
lods
fsubs
jmp
push
notl
and
adcl
sti
mov
rcll
sarl
aad
roll
fisubs
and
negl
aam
push
das
out
mov
inc
fcomp
cmpsb
andl
out
ret
mov
aaa
out
cltd
enter
out
xchg
ret
js
mov
mov
fstps
add
ffree
lret
cld
mov
cmp
fldl
inc
jno
clc
push
ljmp
push
aam
adc
shlb
lcall
fcomi
in
insb
enter
xchg
add
jno
ljmp
movsl
imul
stos
sub
fcoms
xor
insl
incb
stc
or
jecxz
or
out
les
xor
add
jle
cltd
mov
outsl
imulb
dec
aaa
inc
pop
out
cmpsb
int3
push
and
int3
ja
data16
sub
jp
push
pop
pop
dec
dec
mov
popf
mov
fcmovu
lret
cmp
or
pop
pop
dec
dec
mov
popf
mov
fcmovu
lret
cmp
or
pop
pop
lret
mov
mov
fmul
int
cmp
or
pop
pop
dec
dec
mov
popf
mov
mov
adc
int3
cmp
or
sbb
sub
ds
stos
mov
mov
jmp
sti
loope
rcr
ret
sub
cmp
or
sbb
push
jp
dec
push
pop
aaa
stos
mov
sub
lcall
xchg
fcmovb
sub
sbb
push
jp
dec
mov
mov
lock
ret
pop
xor
dec
inc
dec
push
loope
pop
call
sub
lret
ret
out
outsb
outsb
popf
xchg
push
popf
jg
mov
jg
pop
mov
rclb
add
xchg
inc
repz
pop
xchg
pop
repnz
dec
scas
xor
es
and
pop
shl
enter
fcompl
gs
push
sarl
jecxz
adc
xor
add
mov
stos
test
mov
mov
test
nop
xlat
vmulsd
xchg
pop
pop
inc
ret
mov
push
lcall
ret
shl
cmp
mov
loopne
adc
ljmp
sahf
repnz
sbb
rcr
inc
jne
cmp
or
jp
dec
mov
stos
xor
lcall
rcr
lods
pop
popa
jle
push
push
sub
or
cmc
or
in
ljmp
scas
mov
jle
push
nopl
push
dec
cmp
xlat
cmc
repnz
in
mov
lds
imul
arpl
pop
inc
stos
mov
mov
ljmp
ret
sub
cmp
or
sbb
push
jp
dec
push
pop
inc
stos
mov
mov
ljmp
ret
sub
aas
hlt
xchg
jno
cmp
jecxz
or
sub
xchg
lods
repz
jle
popa
rorl
popa
sub
ljmp
pop
pushf
mov
clc
xor
roll
jns
sub
cmpsb
jmp
push
idivl
dec
xchg
mov
shl
sbb
sub
jne
cmp
loopne
movsl
mov
sbb
int3
out
or
loope
sub
ds
rorb
mov
mov
fwait
stos
add
xchg
cwtl
xor
mov
cwtl
sahf
ja
add
scas
xchg
jo
jae
xlat
sbb
mov
mov
inc
mov
ds
dec
ljmp
xchg
int3
adc
lods
sbb
xorb
xchg
cli
pop
mov
mov
and
push
mov
sar
cltd
jns
testb
push
lock
es
dec
xchg
xor
gs
jle
cmp
push
mov
lcall
fadds
mov
mov
mov
lock
sub
in
sbb
sahf
cmp
mov
add
inc
adc
pop
xor
jl
mov
and
enter
sarl
cmc
jp
adc
push
inc
fidivl
hlt
mov
or
stc
xor
ljmp
pop
ret
mov
out
mov
je
cmp
in
cs
in
push
pop
adc
or
loop
adc
cld
add
das
lret
clc
scas
lock
fistl
jnp
mov
leave
push
inc
sahf
in
push
mov
fisttpll
sub
mov
lods
movsb
shl
xor
sub
sbb
add
gs
push
dec
arpl
mov
push
dec
mov
fcomps
xchg
xchg
pop
pop
cmp
mov
test
xchg
mov
sub
inc
sub
mov
shrl
mov
xor
movl
out
or
dec
iret
xchg
sbb
ljmp
imul
int
jp
pop
mov
cmpsl
daa
mov
pop
les
sub
adcb
lock
js
adc
sub
mov
stos
or
sbb
and
dec
cmpsb
inc
xor
mov
inc
push
cmp
jo
jl
fstp
in
push
xchg
roll
sub
and
cmpsl
loopne
fbld
push
iret
faddl
lret
sub
lds
stos
push
xchg
lahf
mov
dec
js
daa
or
sbbl
out
mov
jge
lds
push
sbb
lret
in
cmp
mov
hlt
or
por
stc
repz
add
addr16
sub
push
mov
dec
or
fbstp
jo
inc
imul
and
jmp
cmp
stc
fsubr
aad
lcall
pushf
daa
enter
repz
loopne
dec
push
clc
adc
lret
push
in
pop
fimuls
mov
test
mov
cli
mov
lock
fisubl
and
insb
fmulp
or
and
mov
minps
loop
mov
inc
shl
mov
fiaddl
jl
pop
mov
add
push
outsb
insl
push
jl
into
repnz
loop
iret
add
insl
xorl
and
or
cmp
test
inc
sahf
in
rcl
mov
dec
cmpsl
outsb
push
adc
pop
icebp
add
xor
sbb
jle
std
mov
lea
jg
cmp
inc
cwtl
loopne
push
jns
ror
sub
js
pop
and
dec
push
xor
fistps
push
sbb
faddp
mov
stos
out
xchg
xchg
jmp
sbb
push
fildll
leave
xor
pop
outsb
or
pop
cs
pusha
ss
jnp
outsb
inc
xchg
push
cmp
pop
bound
cmpsl
dec
pop
lods
sub
inc
push
fs
lcall
mov
pushf
fistpl
stc
xor
icebp
xchg
mov
push
div
cmpsb
shrl
shrb
fwait
add
test
push
insb
in
fistl
in
inc
sbb
or
add
sbb
insl
lcall
das
ret
shlb
mov
scas
dec
xor
lahf
or
jg
jg
ss
sub
ret
xor
ret
imul
movsb
xor
ja
ret
pop
fs
ret
in
shl
mov
and
popa
xchg
nop
loopne
inc
enter
dec
loop
hlt
pop
idivl
and
mov
mov
adc
pop
cltd
pop
inc
xor
cmp
cmp
sub
sbb
mov
mov
popf
push
aad
fcmovnbe
dec
xlat
cmc
xchg
ljmp
lret
decb
movb
jecxz
roll
cmp
push
out
jb
jae
xor
daa
pop
je
pop
lea
ljmp
das
ficoml
shlb
mov
out
arpl
mulb
cmp
pop
mov
inc
mov
subb
cmpsl
aad
idiv
adc
cmc
in
mov
mov
pop
dec
shll
mov
fists
push
out
ret
push
loopne
ss
pusha
nop
xchg
aam
or
daa
int
dec
jl
lret
repz
mov
in
into
movsb
ss
cmp
out
lods
lea
stos
loopne
mov
sahf
cmp
shl
cmc
cmpsl
nop
and
repnz
sub
shll
subb
les
shrb
in
bound
jb
inc
sub
ret
add
adc
fsubrl
out
mov
sahf
add
inc
or
fstp
jne
jg
fs
fmulp
scas
jmp
rorb
dec
adc
test
lea
mov
call
ja
outsl
push
sbb
testl
jmp
notl
mov
push
out
mov
fcomi
or
daa
or
sub
xor
pusha
cmp
mov
add
add
pop
adc
lods
mov
dec
shll
inc
or
sbb
je
xor
xchg
cmp
cmp
js
mov
loopne
movsb
loopne
ss
inc
xor
fdivp
cmpsl
xchg
adc
mov
or
xorl
lcall
cmp
movsb
pop
and
ret
push
push
inc
xchg
push
push
or
orl
mov
add
sarl
sbb
pop
jae
ja
stc
push
out
aam
mov
jno
mov
fistl
jne
lahf
lea
ss
stc
jl
in
jl
shl
cmp
push
mov
or
cmc
xor
iret
sbb
sahf
cli
cli
and
ret
cmp
repz
int3
cltd
adc
jecxz
mov
dec
inc
jno
push
imul
mulb
jmp
or
hlt
in
mov
inc
in
inc
hlt
or
out
add
mov
push
push
sbb
in
jnp
inc
xor
arpl
fs
cmpsl
hlt
jl
pop
out
fs
mov
fsubrs
mov
inc
xor
push
cmp
mov
jbe
lcall
push
mov
js
jns
or
inc
push
jl
dec
in
and
mov
push
mov
adc
or
pushf
push
mov
das
stc
loop
mov
icebp
jl
jnp
cmpsl
adc
ja
and
aaa
push
jns
out
int3
xchg
xchg
xchg
and
push
dec
mov
imul
xchg
xchg
hlt
lea
nop
dec
mov
arpl
or
les
test
or
or
push
lods
cltd
mov
push
lret
or
add
sub
mov
das
and
dec
dec
std
push
sub
sub
call
push
shrb
pop
pop
or
xor
loope
jno
test
and
xchg
in
imul
mov
pop
movsb
mov
sub
stos
cmpsl
mull
xchg
arpl
ja
int3
aas
test
cmp
clc
or
in
jae
push
xor
inc
jae
sub
dec
sbb
xchg
mov
sub
xchg
shrb
movsb
mov
in
hlt
data16
popf
push
push
fcmovbe
mov
mov
mov
cmc
mov
xlat
es
popf
mov
shll
sub
adc
lods
lret
das
inc
and
fnstsw
jmp
loop
push
int
lods
shll
mov
mov
pop
sbb
jp
mov
dec
xor
jg
test
mov
sbb
fwait
insb
adc
add
hlt
fwait
dec
jp
mov
xor
mov
dec
add
cltd
mov
in
push
adc
orl
push
sbb
mov
pop
xchg
cli
arpl
cmp
jns
dec
and
mov
or
pop
xor
mov
jbe
popa
mov
add
xchg
xchg
or
adc
and
out
or
fdiv
hlt
sub
pop
sti
fstpt
cmpsl
pop
pushf
sbb
shl
loopne
imulb
mov
hlt
sbb
cmpsl
popa
out
jbe
enter
inc
jmp
mov
stos
add
mov
outsb
sbb
loopne
inc
lahf
outsl
xchg
xchg
pushf
hlt
jg
inc
dec
nop
cmpsb
shr
clc
ret
iret
push
push
jge
push
stc
jbe
adcl
out
in
repz
mov
jecxz
or
lcall
cmc
ret
cmp
mov
push
mov
sub
and
bound
jecxz
dec
in
outsl
cli
sub
or
lret
insl
dec
mov
outsl
adc
push
outsl
inc
jbe
jb
mov
jl
jg
jge
push
out
mov
mov
push
out
mov
jge
push
xor
int
mov
mov
xchg
xchg
fdivl
je
pop
ss
xor
mov
xchg
cwtl
and
pop
adc
insb
out
jno
or
mov
testl
cld
inc
add
mov
push
andb
and
inc
shl
or
adc
push
mov
fwait
sub
xchg
push
sub
push
xor
mov
sbb
push
in
shlb
out
fwait
adcb
mov
xor
jnp
lret
sbbb
repz
outsl
xchg
ret
cld
shrl
mov
and
and
pop
shl
outsl
imul
hlt
movsb
rcrl
sbb
rolb
lcall
cmp
mov
sbb
mov
roll
xor
fiadds
insb
sbb
add
das
aam
bound
sbb
enter
test
icebp
or
push
into
pop
pop
or
inc
xchg
movb
mov
cmp
push
test
inc
test
sbb
adc
inc
cmp
mov
sbb
leave
popf
je
inc
mov
mov
cmpl
rorb
stos
xchg
mov
out
xor
pop
addr16
ss
scas
in
pop
pop
push
rcr
sbb
pusha
sbb
fildll
les
cltd
jns
out
and
pop
ja
dec
inc
xchg
leave
adc
mov
dec
xor
add
fsubl
dec
sar
je
xchg
insl
imul
jo
rcrl
jle
push
cld
mov
cmp
scas
fcmove
jne
inc
or
sbb
xor
dec
sahf
mull
int3
push
hlt
aas
lea
push
cwtl
add
sbb
cmp
icebp
lods
push
cmpsl
imul
outsb
jo
ljmp
dec
repz
sti
loope
lock
cld
mov
mov
or
imul
push
in
es
jge
sub
jae
pop
les
lret
imul
inc
fiadds
js
lret
pop
in
enter
or
pop
mov
xchg
or
inc
pop
jmp
jns
xchg
cs
div
mov
cmpl
les
icebp
inc
or
inc
into
sub
cmp
cltd
fs
mov
fst
sbb
aam
cmp
push
in
sbb
push
jecxz
push
lahf
inc
movsb
pusha
mov
inc
lcall
mov
rcr
jp
pop
cmpl
inc
out
imul
add
repz
mov
inc
dec
lret
fcoml
xchg
mov
adc
sub
rcll
pop
inc
out
sarb
ret
cld
inc
rorb
adc
flds
outsb
push
add
mov
mov
adc
jp
bnd
mov
xlat
jle
push
mov
imul
inc
lock
fdiv
lock
iret
xchg
push
stos
lock
xchg
lods
jbe
adc
divb
hlt
pop
mov
push
xchg
xor
and
inc
jge
fistpll
pusha
loopne
mov
sub
lds
sbbb
sub
xchg
stos
testb
fwait
mov
fcompl
lds
sti
pop
inc
pop
sbb
dec
inc
in
daa
cwtl
sub
jl
lahf
push
xlat
push
lahf
out
rcll
mov
dec
pop
roll
gs
mov
mov
mov
and
das
jno
out
push
jb
lea
dec
mov
pop
outsb
mov
shll
and
stos
sbb
cmc
call
add
xchg
xor
mov
sti
in
pop
std
scas
pop
inc
add
mov
test
stos
inc
mov
cmp
lret
mov
inc
aad
repz
jg
jno
dec
out
dec
push
xchg
mov
and
mov
cmp
icebp
aas
push
in
mov
hlt
lret
mov
stc
sahf
and
cmp
sbb
lock
pop
ja,pt
push
pop
mov
int3
mov
pop
lods
lods
xor
mov
out
mov
pusha
or
or
fcmove
enterw
push
mov
stos
jg
jae
inc
mov
mov
addr16
fisubrs
clc
inc
and
fadds
adc
dec
in
scas
das
pop
mov
cmc
jp
push
xor
int
mov
xor
and
jb
mov
cmp
add
aam
mov
mov
mov
mov
xchg
aas
xchg
mov
out
mov
push
add
dec
cmp
mov
xchg
loopne
mov
int3
inc
clc
lahf
cmpb
mov
outsl
test
fwait
push
fimull
out
mov
or
add
mov
div
jp
fimull
hlt
xchg
jecxz
xchg
addr16
cmpsb
or
shrb
sbb
ja
sbb
and
ret
addr16
daa
or
jb
subl
dec
mov
jg
or
fldt
xchg
mov
lahf
cmc
and
xor
xchg
dec
iret
sbb
add
ret
and
test
dec
inc
outsl
stc
loope
mov
push
stos
inc
aam
aad
lods
cmpsl
sbb
sti
cltd
pop
mov
in
stc
add
iret
fs
pop
xchg
adcb
aaa
sub
and
push
sbb
inc
pop
lods
adc
mov
fucom
mov
unpcklps
sub
cli
xchg
lock
mov
mov
out
jb
mov
hlt
xchg
and
push
cld
fdivl
fbld
fdivrs
add
ds
andb
hlt
inc
sahf
lret
pop
lret
rol
mov
aam
mov
adc
mov
cmp
xchg
movsb
pop
leave
or
and
mov
dec
rorb
pop
imul
mov
dec
ds
sbb
lret
dec
sub
or
add
ljmp
mov
ljmp
fsts
xor
out
pop
cs
inc
pop
mov
js
addr16
lock
mov
pop
ficompl
pop
jnp
mov
mov
xor
rolb
push
xchg
bound
xor
or
or
sub
sub
popa
xlat
sti
movsl
insl
loop
add
fdivrl
shlb
adc
cmpsb
in
outsb
addb
ret
mov
fwait
inc
pop
pop
test
push
leave
jb
xchg
or
pop
pushf
cltd
cltd
pop
repnz
jle
cld
leave
scas
sarl
daa
or
and
stc
test
imul
scas
data16
cmp
ror
aad
dec
mov
xchg
in
fld
imul
cltd
fcmovbe
out
pop
cmp
xlat
add
mov
icebp
adc
out
das
into
sti
iret
sub
sub
push
mov
pop
jmp
insb
jns
cmpsw
bnd
jecxz
movsl
movsl
adc
adc
fisttpll
test
adc
add
mov
jne
test
aad
mov
loopne
sub
add
adc
ja
xchg
icebp
jmp
enter
push
outsb
sub
xchg
sbb
fldcw
xor
aas
jl
loop
sub
in
push
push
push
iret
das
xchg
jae
mul
lock
add
mov
mov
jo
jns
pushf
lret
jle
les
pop
adc
add
pop
pop
or
adcb
in
lret
adc
in
push
jne
pop
mov
rcrb
movsb
mov
sbb
out
clc
in
mov
mov
test
and
les
cmpsl
pop
enter
shl
cmp
push
dec
add
ljmp
inc
mov
icebp
inc
loop,pn
fs
sbb
adc
fsubrl
imul
ss
stos
sarb
scas
pop
out
jne
sbb
xchg
movsb
mov
sbb
scas
insl
push
dec
repnz
adc
sbbb
lods
inc
push
push
lock
adc
inc
mov
dec
sbb
xchg
leave
iret
xor
xchg
and
pop
sbb
push
or
test
test
nop
hlt
push
aad
ffreep
fsubrl
and
fisubrs
push
push
clc
pmaxsw
icebp
cs
inc
repz
mov
mov
loop
addr16
lock
jle
mov
sbb
mov
pop
xchg
add
mov
mov
sub
jmp
aas
nop
dec
jecxz
stos
inc
adc
dec
pop
lcall
int
imulb
imul
shrb
dec
pop
rclb
cmpsl
jnp
bnd
iret
out
aas
cmp
sbb
sub
fprem1
add
scas
cwtl
inc
nop
shll
arpl
movsb
pop
push
cltd
mov
mov
rcrl
cmpl
mov
fistpl
dec
sub
xor
and
lea
or
leave
icebp
dec
and
sbb
pop
stos
jl
jp
cmp
mov
pusha
iret
fisubrl
test
das
das
xchg
add
dec
pop
push
inc
jne
flds
aam
adcl
pop
iret
lret
mov
in
stos
xorb
cmp
shrb
mov
shrb
out
mov
xchg
jp
fisttpll
push
or
movsl
das
pop
jno
in
xchg
mov
pushf
lcall
addl
dec
mov
cli
ret
add
addl
mov
xor
sub
ss
bound
mov
addr16
mov
xlat
mov
lcall
sbb
arpl
add
add
ljmp
add
xorb
mov
pusha
das
push
sbb
aam
pop
inc
push
aam
mov
inc
add
rcll
dec
call
loop
xor
loopne
and
repnz
and
insb
push
jno
sbb
xor
cwtl
jb
fs
fucom
ss
and
pop
repz
das
roll
mov
push
andl
xor
xlat
xchg
sub
jb
mov
cmp
inc
sub
sub
add
gs
out
bound
or
mov
pop
push
or
mov
dec
mov
int
loope
xchg
mov
xor
inc
xor
rorb
mov
inc
popa
mov
fidivrs
xor
ja
nop
das
lcall
dec
in
mov
inc
mov
int3
cwtl
pop
les
daa
shr
jl
pop
push
pusha
mov
and
dec
sub
inc
insb
xchg
inc
sbb
mov
sbb
jo
xchg
iret
jge
dec
push
ljmp
mov
xor
jmp
xor
lock
sbb
insl
dec
xlat
aas
sbb
aam
and
cli
push
leave
outsb
inc
mov
push
xor
xor
sbb
sub
call
adcb
sbb
popa
dec
lcall
aas
call
xor
jb
cs
js
cwtl
movsl
lds
or
cmp
cmpsb
js
nop
pushf
roll
gs
adc
add
and
xor
push
mov
xchg
push
sbb
stc
xor
int3
or
gs
adc
int
outsb
xor
dec
jnp
add
and
fdivl
outsb
fsubs
test
cmpsl
cld
jle
or
push
cltd
imul
clc
xor
inc
add
push
xchg
rorl
xchg
stos
xchg
lret
jnp
sbb
xchg
jo
imul
imul
push
sahf
xor
jl
pop
adc
stos
cmp
in
add
daa
xchg
pop
imul
push
fs
push
sub
pop
jne
lods
enter
jae
push
push
cmp
xchg
roll
in
in
rcll
lds
popf
jnp
xor
and
ljmp
lock
sti
push
xor
outsb
js
aaa
adc
mov
jbe
pop
je
adc
xor
inc
push
in
ds
xor
and
or
les
test
inc
inc
test
xchg
jl
lock
xchg
sahf
daa
dec
adc
sbb
push
jp
dec
push
pop
inc
stos
mov
mov
ljmp
ret
sub
cmp
or
sbb
push
jp
dec
push
pop
inc
stos
mov
mov
ljmp
ret
sub
cmp
imul
push
jp
dec
push
pop
inc
stos
imul
ljmp
ret
sub
cmp
or
sbb
push
jp
dec
rcrl
stos
dec
mov
hlt
popf
jnp
sbb
sub
cmp
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
rol
sub
insb
push
mov
adc
xor
add
push
pop
add
add
or
add
or
mov
mov
mov
mov
add
add
add
add
or
and
adc
add
int
test
cmp
inc
add
add
add
add
add
jb
dec
add
add
add
add
add
add
dec
add
add
add
mov
add
add
add
gs
add
pop
add
fiaddl
pop
add
add
sbb
add
add
add
add
test
dec
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
cmpsl
add
scas
add
add
pop
add
add
add
add
add
ljmp
or
add
add
inc
add
add
ljmp
add
add
add
add
add
addb
add
mov
add
add
add
add
add
add
add
add
popa
add
xchg
add
xor
test
add
add
add
xchg
flds
fiaddl
sbb
xchg
add
inc
add
add
jns
push
or
xchg
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
xchg
add
add
add
add
add
fldl
int
inc
add
add
add
addb
add
pop
add
add
jns
mov
add
mov
add
add
cmp
xor
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
ljmp
add
add
add
add
jns
addb
add
addb
add
add
add
filds
xor
pop
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
mov
add
pusha
add
add
add
add
add
add
push
add
add
add
add
add
jns
js
push
add
add
add
sub
pop
add
mov
add
iret
add
add
mov
scas
add
add
add
add
add
add
add
lods
add
add
add
add
add
add
add
add
add
push
add
add
add
addb
add
add
add
add
add
or
xlat
add
add
add
add
jb
test
mov
add
inc
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
sub
lret
xchg
push
cmp
test
dec
addb
rcrb
je
and
push
aaa
bound
pop
sub
vpcmpeqw
pop
sbb
lret
adc
dec
jns
mov
push
ljmp
xchg
xchg
push
mov
adc
ljmp
rcrl
lods
sbb
adc
aas
stos
mov
xor
fcoml
aas
mov
outsl
inc
cmp
out
xchg
aaa
aam
jne
leave
filds
xor
pop
jnp
lret
mov
pop
lods
jno
gs
das
or
das
adc
adc
scas
das
jne
outsl
aaa
and
xor
adc
mov
out
js
push
mov
mov
std
out
jnp
lds
stos
fimuls
jae
adc
xchg
pop
jne
push
xor
in
stos
sub
leave
xchg
int3
rcrl
mov
popa
or
fcmovnb
shlb
mov
repz
out
and
jp,pt
push
test
shrl
mov
sbb
add
cmp
mov
or
shr
dec
adc
sub
xchg
sub
cmp
ret
bound
push
mov
imul
icebp
inc
sub
cmpsl
pop
fcmovnbe
mov
rolb
les
loop
out
lods
loope
andl
orl
shlb
fwait
aaa
rclb
fisttps
mov
mov
xor
cld
push
pushf
enter
subb
stos
or
mov
inc
push
stos
or
lods
mov
pusha
gs
repz
sub
xor
sti
adc
jecxz
jmp
mov
shll
push
out
pop
nop
adcb
fld
adc
ffree
aaa
xchg
mov
mov
add
daa
cmp
dec
shl
ret
into
data16
sti
pop
mov
cmc
and
std
xchg
mov
imulb
sbb
bound
sbb
cli
xchg
xor
push
cltd
pop
outsb
aam
sub
insb
jge
mov
cmp
sbb
jecxz
jg
movq
cmp
jno
sub
imul
rorb
lods
pop
or
icebp
jge
mov
fdivr
xchg
into
or
dec
add
ret
xor
sbbl
cltd
xor
add
lock
mov
add
les
popf
jl
data16
ret
xchg
push
mov
into
jbe
es
fsubp
out
scas
mov
cwtl
push
outsl
mov
jne
fwait
pop
test
jg
xchg
mov
mov
mov
out
mov
cwtl
mov
inc
test
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
