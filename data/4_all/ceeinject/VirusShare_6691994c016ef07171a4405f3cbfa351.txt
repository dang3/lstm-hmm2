call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
cmp
push
cld
inc
in
cmp
dec
jecxz
pushf
push
dec
aad
lds
movsl
mov
fsubl
push
cld
inc
in
xor
mov
in
sti
jl
insb
mov
rorl
in
sar
sub
pushf
insl
mov
mov
mov
movsb
insb
xchg
pop
stc
arpl
dec
imulb
faddl
adc
pusha
outsl
adc
test
ret
fisubrl
dec
jmp
shlb
out
jns
xor
int3
adc
fidivl
mov
sbb
xor
loopne
insb
or
test
push
or
cmpb
cmp
mov
mov
sub
retw
fisubl
sub
adc
xor
fimull
xchg
cmp
jbe
repz
mov
stos
jns
adc
popf
cmpsb
cltd
push
test
mov
sub
movsl
lock
stos
lcall
nop
leave
cld
dec
or
insb
lds
or
sub
push
cld
sub
xor
mov
ja
or
sbb
or
cmp
inc
pop
mov
int3
adc
push
mov
repnz
xchg
cmp
fdivrl
jg
ds
fsubr
into
adc
mov
jns
jbe
int
movsb
cmp
jg
loopnew
les
push
lahf
and
pushf
and
lods
cmc
pop
in
aad
lds
movsl
or
cmp
sub
fsubl
push
cld
inc
in
xor
mov
in
aad
lds
movsl
or
cmp
sub
fsubl
stos
jns
dec
xor
popa
push
mov
sbb
cli
dec
cmpsb
push
push
jno
shrl
rolb
dec
fnstenv
mov
fsts
jns
lea
fmul
pushf
add
insb
jge
sbb
lods
push
cltd
push
mov
pinsrw
jge
leave
mov
adc
cmp
sti
sar
add
jle
js
lock
push
xor
mov
pop
and
sbb
xor
dec
outsb
sbb
push
in
inc
roll
jecxz
into
repnz
pop
int
ds
inc
test
push
out
xor
mov
xor
xchg
add
dec
pop
adc
xchg
aas
xchg
out
jns
jmp
mov
mov
movsl
pop
push
lods
test
fiadds
fisubrs
ss
aad
test
jbe
paddsw
dec
enter
and
clc
incl
push
fsub
shll
arpl
mov
ss
mov
dec
dec
ret
mov
adc
in
in
fwait
xchg
fs
dec
xor
in
or
orb
sub
mov
sub
stc
hlt
xlat
adc
pop
or
dec
jns
xlat
push
mov
dec
mov
dec
pop
scas
and
imul
xchg
roll
enter
adc
out
sub
sbb
lcall
and
mov
lret
pop
clc
addr16
imul
xchg
stc
or
lods
xchg
pop
pop
push
inc
jbe
bound
mov
cmpsl
dec
inc
test
inc
inc
pop
jmp
pushf
mov
jnp
imul
cld
mov
dec
xchg
xchg
pop
addb
popa
shrb
cmp
mov
insl
and
outsb
xchg
addr16
pusha
fdivrl
fcomi
mov
ja
and
pop
outsl
out
mov
push
sub
xor
out
lock
push
std
add
sbb
popa
in
int
addb
fnsave
sub
sub
xchg
dec
data16
int3
cmp
call
aad
scas
test
stc
sahf
xchg
or
ljmp
pop
mov
repz
lret
cmp
xchg
jae
sti
ja
xchg
bound
jg
or
push
sub
repnz
aam
inc
pusha
pop
cwtl
call
jno
mov
push
mov
pop
inc
push
mov
xor
push
or
cmp
jecxz
shll
xchg
in
cld
fidivrl
outsl
shll
xchg
mov
data16
out
sub
lcall
std
out
les
jo
jecxz
cmp
aam
lock
fs
push
fiaddl
xor
imul
xchg
sub
and
mov
fs
movsb
loope
out
jle
movsb
adc
in
cmp
pusha
add
pushf
xor
int3
inc
mov
sbb
mov
cwtl
mov
xor
xchg
inc
in
orb
jp
push
add
sbb
push
lret
lea
and
jge
daa
dec
push
mov
adc
hlt
enter
xchg
sbb
lret
add
imul
pop
and
mov
xor
cmc
and
inc
mov
cmp
popf
sub
sarl
aad
dec
inc
mov
jle
inc
jg
mov
mov
and
xor
or
mov
cli
and
xchg
pop
push
pop
pop
sbb
dec
bswap
or
lea
xchg
add
std
add
or
cwtl
cmp
enter
sahf
mov
mov
mov
mov
pop
xlat
lods
flds
jns
fisubs
cmc
xor
leave
pop
in
or
and
leave
xchg
sbb
sbb
push
fdivl
and
mov
enter
jne
sub
fisubrl
and
fcomps
mov
xchg
inc
cld
scas
lods
add
xor
inc
int
outsb
sbb
fmulp
xor
fmulp
insb
jle
push
movsb
or
inc
ljmp
dec
sbb
push
inc
cs
cs
cmpsb
inc
jns
or
popa
add
mov
push
xchg
add
inc
cwtl
xchg
inc
mov
pmulhuw
mov
adc
add
sbb
sub
and
int3
in
xchg
jle
lea
mov
mov
les
mov
leave
push
call
add
stos
xor
orl
pop
push
out
cmpb
jnp
lods
dec
adc
repz
jmp
xor
testb
fdivrs
cmp
adc
rcl
cmp
push
imul
xchg
lods
push
loopne
xlat
lock
xchg
shlb
adc
sahf
out
cltd
addr16
fldenv
jns
aaa
sub
mov
jo
cwtl
loope
jbe
xchg
fcom
shll
dec
mov
jae
and
popf
inc
ljmp
outsl
paddsb
cmp
dec
mov
imul
test
sub
jecxz
cmc
fisubl
test
int3
ficomps
mov
dec
jp
xchg
fisubrl
fucompp
cmpb
imulb
or
fwait
jg
mov
mov
sub
xchg
arpl
push
push
daa
xor
pop
mov
lods
dec
cmp
cltd
pop
xchg
lods
xor
sbb
push
nop
add
lock
cmp
bound
aas
test
sbb
outsl
sbb
mov
mov
icebp
fsubrp
movl
dec
ret
xor
mov
adc
fldcw
mov
testb
loopne
insl
push
pop
bound
dec
push
lahf
xchg
jg
icebp
arpl
out
data16
mov
xchg
in
mov
repz
in
iret
sarb
and
adc
cmp
and
adcb
push
and
out
mov
movsl
pusha
insb
mov
imul
test
pushf
aam
lahf
push
adc
xor
pop
sbb
pop
in
pop
or
push
ss
xor
mov
stc
mov
xlat
cld
sti
faddl
ljmp
jmp
addr16
cmp
cli
mov
jnp
ret
mov
cmp
sub
mov
outsl
jbe
pop
popf
jl
mov
inc
sub
cltd
pop
sub
out
xor
inc
sbb
daa
or
dec
push
mov
repz
por
xor
cmpsl
outsl
not
jb
movsb
cmp
mov
imul
sbb
inc
fdivl
stos
adc
mov
cmpsl
cmp
popa
lcall
clc
mov
adc
out
sub
adc
imul
dec
dec
in
pop
jl
int3
mov
xor
pop
mov
out
inc
ret
lock
inc
xor
or
add
stos
lea
into
dec
fwait
jecxz
insb
popa
cwtl
in
inc
mov
cmpsb
cmp
mov
pushf
pop
test
jb
out
jae
jmp
ss
mov
push
pop
ja
sub
add
insl
stc
cmp
imul
test
inc
push
cmp
out
jae
cld
pusha
mov
lahf
fdivrp
add
mov
mov
mov
xchg
mov
lret
sub
xor
mov
sbb
pushf
jmp
in
clc
gs
jae
pop
stos
cmp
cmp
rcl
inc
sub
push
mov
cmp
gs
or
or
jle
in
stc
or
scas
or
mov
or
outsl
mov
mov
xchg
add
out
cmpsb
aas
sbb
adc
xor
cmp
icebp
push
xchg
mov
loope
das
stos
lret
pop
repnz
addl
cmp
pop
movl
fnstsw
fs
fsub
daa
or
pminub
xchg
and
push
inc
mov
adc
jo
cmp
mov
in
pop
das
jmp
sbbl
insb
rol
insl
xlat
divl
ret
lods
dec
mov
scas
shlb
out
push
lret
ja
xchg
fwait
arpl
fbstp
and
and
cmpl
mov
inc
mov
rcl
out
sti
adc
imul
ss
lods
inc
movsl
inc
xor
pop
cwtl
xor
sbb
dec
incl
gs
jns
xor
aam
xlat
push
in
mov
xchg
sbb
cmp
add
pop
mov
outsb
xchg
lods
jnp
pop
cmp
mov
and
lea
adc
xchg
sbb
mov
jae
aas
mov
xchg
jae
xchg
scas
dec
lds
loop
mov
shrb
mov
lods
mov
or
data16
push
scas
lahf
in
jbe
sub
pop
insb
push
dec
adc
xor
push
xchg
and
shrl
sub
jnp
cmp
lcall
cmc
pushf
and
icebp
in
jle
pop
cmp
aam
repnz
push
pop
stos
dec
mov
es
sub
mov
push
lcall
test
pop
pop
fidivrl
cli
xor
cmc
cmp
rclb
pop
add
lods
jmp
and
test
mov
jmp
push
or
inc
movsl
lret
lock
fscale
mov
es
mov
push
ss
sti
mov
jnp
imul
and
xor
aad
loope
repz
mov
xchg
movsl
lods
mov
xchg
xchg
mov
leave
mov
mov
jle
mov
aam
pop
xorl
jno
sti
jge
adc
fwait
fwait
fwait
pop
dec
jno
inc
loop
sbb
push
mov
arpl
xlat
push
dec
xor
sbb
lret
inc
jae
xchg
ss
lret
cltd
cs
mov
sbb
mov
xchg
fldcw
xchg
test
cmp
imul
and
loope
add
std
mov
fadds
ret
sub
lahf
mov
jp
push
daa
fwait
dec
cmpsb
insb
fstl
mov
sbb
nop
sub
lret
imul
sub
fwait
in
mov
outsb
jns
sbb
xchg
or
sbb
jo
jl
mov
int
cwtl
jg
mov
adc
push
fisttpll
adc
inc
mov
fsincos
ret
cli
sbb
call
push
cld
in
idivl
add
pop
in
xchg
inc
mov
sbb
cmp
shlb
notl
leave
fs
dec
sub
in
cmp
outsb
cld
enter
xchg
sar
inc
push
adcb
pushf
mov
xchg
movsb
dec
xchg
push
addr16
mov
out
je
cmpsb
icebp
cmp
jbe
es
adc
lcall
xor
aam
lahf
adc
std
pop
dec
mov
inc
mov
mov
pop
inc
bound
mov
or
inc
mov
add
in
arpl
jb
add
mov
dec
notl
pop
out
jmp
and
les
pop
and
sub
add
xor
ret
outsb
rol
stc
cmp
cmp
mov
sahf
outsb
dec
jp,pn
push
fbld
aad
jg
or
and
mov
loopne
sti
mov
imul
xchg
nop
push
or
add
outsb
xchg
mov
or
xor
jecxz
outsb
sahf
xor
lret
je
cmp
adc
pop
std
stos
jg
dec
sub
int3
test
fidivs
je
pop
jecxz
and
cmp
sub
testb
xchg
leave
pop
je
shlb
jg
dec
jbe
dec
clc
sbb
enter
add
vshufps
iret
xchg
lea
pop
addr16
adc
lret
movsb
cltd
pushf
dec
mov
pmuludq
orl
mov
in
push
xchg
dec
push
inc
push
xchg
mov
xor
repz
mov
xchg
fwait
push
popf
fists
lahf
push
push
les
xor
outsl
loop
aam
cmpsb
mov
sti
cltd
leave
mov
popf
lea
inc
jae
add
neg
pcmpeqb
loopne
je
loopne
rcrb
repnz
jge
push
in
fiaddl
gs
dec
pusha
push
divl
fwait
push
addb
xchg
mov
cmp
hlt
xchg
aam
clc
push
adc
or
jne
dec
mov
shr
in
lods
push
sbb
pusha
xor
inc
add
mov
push
cmpsl
scas
jge
cmp
mov
lret
loope
adc
sbb
ret
cld
sub
xor
push
xchg
shrl
add
pop
inc
arpl
jg
xor
adc
jne
int3
xor
ljmp
dec
xchg
cld
pusha
pop
jg
rolb
aam
ds
push
iret
xor
lea
xchg
sub
test
rclb
inc
insb
mov
mov
jle
inc
mov
enter
pop
mov
cmp
pop
mov
outsl
adc
push
xor
jns
in
ljmp
imul
jns
fcmovnu
sbb
xor
in
sahf
jmp
inc
sub
push
mov
out
push
fs
sub
dec
or
loope
dec
pop
mov
and
rolb
sbb
jl
notl
jo
cmpb
pop
mov
mov
ljmp
pusha
fidivs
sub
xchg
mov
int
add
aad
pop
leave
or
push
fcmovb
negl
in
testl
inc
inc
sbb
jle
dec
sbb
dec
adc
add
daa
jmp
jg
sub
call
add
xrelease
fisttps
or
stos
sub
dec
pop
je
mov
roll
pushf
pop
fcmovbe
pop
cmp
cmpsl
dec
xor
inc
adc
gs
or
js
test
sahf
es
sbb
mov
test
fildll
sub
in
mov
mov
cmp
or
xchg
and
sbb
mov
and
lahf
pop
popa
xor
jo
daa
rcl
fmull
adc
popa
and
inc
or
pop
inc
addr16
inc
lahf
xor
mov
inc
loop
xor
jb
cmp
dec
popa
cmp
adc
pop
hlt
jle
pop
adc
mov
push
sbb
lods
xchg
fs
jb
mov
cmp
insl
xor
cmpl
inc
stc
bound
sarl
mov
jle
add
pop
int
imulb
adc
sbb
cmp
sbb
scas
call
mov
dec
dec
jp
inc
mov
ja
repnz
cwtl
scas
bound
shrb
mov
leave
sub
sbb
jle
add
adc
loop
xchg
push
dec
mov
sti
jecxz
stos
inc
lcall
sti
sbb
mov
les
popf
jnp
mov
subb
jecxz
mov
ljmp
lret
out
in
int
dec
pop
call
sbb
lahf
or
or
loope
pop
loope
lret
or
fistpl
cmp
mov
mov
lret
inc
jl
lds
mov
mov
addl
xchg
inc
sbb
jge
sbb
cltd
pusha
sti
stc
outsb
pop
stos
lahf
push
test
or
fidivrs
dec
repz
jb
mov
int3
gs
jbe
das
cs
aam
xor
into
adc
dec
stos
cmc
inc
ja
jl
pop
pop
outsl
loopne
mov
xchg
imul
fwait
mov
orb
in
sub
lret
dec
mov
mov
inc
cld
aad
es
add
xor
rcll
pop
aas
add
gs
mov
pop
push
sbb
adc
call
cmp
popa
push
bound
scas
fcomip
in
fucom
outsl
data16
rcrb
lret
outsl
or
mov
mov
mov
mov
adc
jle
popa
mov
ljmp
movsl
cmp
push
insl
push
insl
mov
mov
stos
insl
cmpsb
lea
dec
adc
mov
aaa
sbb
cmc
or
sarl
js
lahf
pop
jbe
lods
pop
lcall
sbb
mov
mov
int
mov
lcall
test
jns
push
aad
jb
cmp
xchg
push
mov
inc
inc
or
ficoms
dec
jnp
aam
or
cwtl
cmp
pop
mov
jge
or
nop
subl
xchg
and
scas
and
mov
inc
mov
sub
cltd
subl
les
sti
push
into
xor
loop
movsl
lods
or
cmp
adc
cld
cmp
ret
sub
cs
aad
and
lret
icebp
cmp
cmovge
jg
pusha
nop
mov
pop
outsb
xor
pop
adc
adc
or
or
daa
add
push
adc
daa
insb
inc
add
dec
loopne
dec
sbb
lret
mov
sbb
and
enter
test
rorl
ret
fcomi
mov
int
xor
aad
imul
mov
sbb
adc
mov
fldcw
outsl
push
out
add
ret
mov
jns
jge
shlb
cmp
dec
mov
fcoml
mov
mov
or
pop
and
jp
pop
mov
aad
mov
xchg
mov
jge
sub
aaa
dec
mov
lds
mov
repnz
vphaddubd
push
lcall
xchg
cmpsl
rcll
outsb
pop
in
mov
push
movsb
lahf
jp
cwtl
jge
push
push
fisttps
repz
js
jbe
cli
cmpsb
inc
enter
add
mov
dec
or
pop
sbb
mov
xchg
lods
icebp
jle
dec
lods
mov
inc
repz
rolb
mov
add
mov
and
mov
pop
je
icebp
pop
out
mov
pop
mov
mov
xchg
xchg
aaa
insb
pop
mov
sahf
imull
or
sub
mov
addl
mov
cld
insb
movsl
mov
nop
push
add
ret
sub
iret
pushf
adc
cmp
xchg
push
jmp
cmp
or
add
adc
lock
pop
xor
je
mov
aad
sub
idivl
cmpsb
leave
jae
sub
std
mov
shrb
xchg
push
sub
add
add
ret
lcall
jp
out
adc
popa
pusha
icebp
dec
das
push
push
lahf
imul
push
pop
int3
test
jecxz
scas
call
inc
rcrl
adc
jl
movsb
sbb
and
pop
dec
push
mov
push
adc
dec
mov
addl
shlb
ja
jecxz
repnz
stos
shll
mov
nop
push
ds
xor
dec
jp
xor
mov
ret
or
cmp
cmp
dec
rcrb
jbe
enter
pushf
scas
push
addr16
inc
addr16
mov
mov
fsubs
dec
loop
jmp
es
in
mov
push
into
mov
and
pop
cmp
mov
mov
xchg
psrlq
add
jae
aas
fdivrs
imul
aam
xchg
gs
out
mov
das
mov
push
fcomp
pop
or
lcall
inc
cmc
mov
cli
std
pop
sbb
adcl
insl
and
mov
loopne
xlat
xor
jp
mov
push
stos
lret
mov
push
xchg
jge
aaa
scas
jns
rclb
push
pop
rcr
out
mov
mov
fdivrs
das
push
ret
sbb
mov
lea
dec
shl
enter
loopne
jmp
adc
dec
out
int3
mov
sbb
adc
xchg
sbb
sbb
in
out
lcall
push
dec
push
adc
fldcw
movsb
out
frstor
inc
and
xor
popa
int
jg
shl
lret
dec
movsl
pushf
sahf
mov
ret
inc
repz
cmp
scas
inc
cmp
pop
pop
in
aaa
fiadds
scas
mov
lahf
xor
sbb
insb
and
push
jmp
lret
fdivrp
or
dec
outsb
mov
push
cmpsb
int
sub
repnz
xchg
fadds
add
sbb
inc
mov
xlat
scas
mov
sahf
xchg
lock
imul
fnstcw
sbb
sbb
cli
sbb
inc
mov
pop
ret
outsl
adc
mov
adc
push
int3
imul
push
call
loope
idivl
andnps
dec
sahf
push
lock
mov
pop
xchg
pusha
cltd
and
xchg
addr16
jecxz
xchg
dec
clc
push
fldenv
and
cmp
xor
aas
dec
and
and
dec
cmpsl
mov
sbb
cmpsl
sbb
mov
cmp
adc
pop
xchg
lahf
test
mov
mov
dec
sbb
mov
cmpl
or
or
sbb
aas
push
popa
pop
test
adc
icebp
inc
add
std
inc
std
lcall
sub
nop
sub
inc
int
ds
mov
test
stc
inc
inc
fcoml
cmp
int3
inc
cld
pop
in
xor
mov
in
aad
lds
movsl
or
cmp
sub
fsubl
push
cld
inc
in
xor
mov
in
aad
lds
movsl
or
cmp
sub
fsubl
inc
jl
in
xor
and
fsub
dec
fdivrl
mov
mov
sub
fmull
insl
in
xor
mov
sbb
jg
lds
ret
repz
jp
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
or
clc
addr16
pop
testl
cmc
push
or
fadds
inc
clc
addr16
aaa
mov
dec
xchg
pop
and
fdivs
rcrl
loopne
icebp
push
sbbl
mov
mov
xchg
push
les
sub
fadds
cmp
push
add
fisubrs
sarl
ret
jl,pt
jecxz,pt
jnp
mov
test
mov
ja
rclb
clc
jbe
xor
and
fdivrs
mov
sub
sub
daa
inc
dec
cmpsl
movsl
mov
push
mov
fnstsw
mov
or
or
mov
xchg
clc
in
fdivs
mov
daa
push
jecxz
scas
mov
cwtl
mov
div
mov
inc
mov
mov
or
je
call
cmp
cmp
xchg
mov
inc
sub
clc
ljmp
orb
insl
out
push
dec
xchg
jge
cmpsl
cmp
call
sbb
mov
inc
fists
popa
jno
add
dec
and
and
adc
add
jae
push
xor
xor
xor
jne
pop
sarb
ret
mov
gs
arpl
imul
mov
xchg
sub
push
addr16
push
cmpsl
dec
ds
jne
adc
pop
mov
mov
dec
idivl
push
mov
cmpsl
sub
inc
enter
call
aaa
mov
dec
idivl
push
mov
cmpsl
sub
test
sti
cmp
jg
stc
into
mov
or
shlb
aaa
and
lods
test
lds
je
push
addr16
test
adc
fwait
mov
jne
incl
pusha
popfw
push
or
cltd
mov
outsb
jge
rcl
lahf
out
test
mov
fcompl
lcall
adc
jp
cmpsl
ds
xor
or
dec
fstps
mov
dec
push
pop
call
add
iret
mov
insb
sub
dec
sub
out
ja
xchg
pop
xchg
js
into
mov
lock
daa
inc
inc
push
in
mov
ret
cmp
and
mov
adc
jmp
mov
mov
mov
jmp
aam
mov
push
rcrb
pop
stc
scas
cwtl
pop
and
loope
and
sub
push
cmp
sbbb
push
cmp
pop
dec
ret
sub
push
sub
push
ss
cli
dec
adc
dec
into
dec
pop
daa
pop
push
cmp
xor
and
aas
shr
and
xchg
and
bound
inc
adc
jbe
mov
sbb
loop
stc
outsl
xchg
mov
jle
ljmp
and
das
das
mov
xchg
in
cltd
pop
sub
out
push
mov
pop
sbb
stc
jmp
jae
inc
or
mov
lea
cmp
in
mov
out
dec
pop
push
cmp
sbbl
in
mov
aaa
cmpsl
mov
cmp
add
mov
loopne
lods
dec
subl
imul
pop
call
jne
mov
xchg
dec
cmc
jo
cmpsb
push
les
inc
fnsave
inc
xor
sahf
in
bound
rclb
mov
pop
clc
lret
loopne
in
subl
mov
in
xlat
shll
pop
inc
pop
dec
or
test
dec
jo
pop
pop
test
cmpsb
mov
xor
and
or
add
les
inc
scas
pop
or
aaa
cld
ja
movsb
dec
jo
sti
sbb
scas
in
inc
and
pop
fdivl
repz
int3
add
mov
notb
or
adcb
lcall
je
lahf
and
or
push
int3
in
adc
push
iret
aam
loopne
sbb
and
add
pop
je
cld
sbb
dec
push
and
movsb
and
shr
stos
call
ss
imul
lret
add
push
xchg
add
xchg
insl
cmp
xchg
mov
loopne
xor
lods
dec
insl
xor
mov
in
rcrl
mov
mov
xor
dec
ffreep
hlt
cld
insl
jmp
dec
xor
xor
cli
sub
mov
jno
mov
mov
xchg
stos
xchg
lock
incb
and
xor
adc
sbb
push
popa
or
and
mov
push
push
push
std
xchg
mov
pop
icebp
sbb
cld
fstps
adc
or
cmpsl
insb
loop
or
mov
push
pop
lods
jp
inc
sub
cwtl
adc
mov
int3
pop
sbb
ljmp
shr
fcmovnbe
or
int
cmp
inc
add
push
push
shlb
xor
inc
cmp
add
lea
jmp
sub
rcrl
cmpl
mov
dec
or
pop
add
jae
out
jmp
movsb
andb
jns
lret
sub
ret
inc
push
sbb
inc
or
test
xor
std
out
js
cmp
push
cmp
or
adc
inc
scas
ja
mov
mov
mov
lret
rclb
sub
test
xchg
out
outsb
sub
lahf
addb
cmp
xchg
pusha
pop
mov
xchg
in
cmpsb
dec
out
adc
xchg
dec
add
pusha
mov
dec
xchg
xor
xchg
xchg
aaa
mov
ljmp
cld
mov
test
lcall
push
mov
aaa
or
mov
add
roll
jno
push
mov
out
jae
xchg
mov
xchg
fsubrl
xor
jecxz
sbb
sub
adc
adc
jno
push
add
test
imul
lcall
cmp
or
and
ljmp
xchg
inc
sub
ds
data16
xor
pop
mov
dec
add
mov
pop
stc
mov
insl
bound
dec
sarl
andb
and
mov
jbe
sti
aas
outsl
fisubs
lds
sbb
jl
inc
push
inc
ja
loop
mov
test
inc
stos
ja
fs
repz
jle
sbb
push
in
mov
std
adc
sbb
outsb
xchg
push
stos
adc
out
adc
rolb
fs
xor
arpl
jle
dec
pop
cltd
imul
iret
adcb
nop
adc
cmpsl
pop
addl
int
cmp
fiaddl
vcvtpd2dq
inc
sti
xlat
push
stc
xor
movsb
add
pandn
and
mov
fimuls
jns
add
push
fcompp
test
out
mov
ret
push
mov
jge
mov
enter
cmp
out
arpl
or
mov
sar
sbb
push
cmc
jnp
lret
jno
sbb
jno
in
mov
sub
inc
jae
stos
arpl
ljmp
xlat
mov
iret
mov
and
jp
xor
sub
add
jge
fs
jno
lret
iret
cmp
dec
adc
dec
sub
cmpsb
xchg
stos
cmp
push
test
shlb
roll
push
pop
mov
mov
dec
sarl
mov
pop
enter
lret
les
mov
push
cmpsl
pop
dec
add
lcall
cmp
fcoml
loope
repnz
int3
sbb
icebp
test
lea
test
xchg
test
negl
xchg
lahf
test
adc
pushf
jl
inc
pop
xchg
pop
pop
inc
aam
jge
dec
jns
and
jl
cmc
jecxz
mov
test
in
aad
mov
xchg
enter
mov
dec
mov
repz
imul
pusha
dec
jbe
inc
sbb
aaa
adc
test
or
mov
mov
rcrb
out
inc
ficoml
inc
dec
cmp
fwait
sti
cmpsb
lds
push
mov
mov
adc
mov
sbb
push
mov
xchg
rorb
repz
ds
dec
lret
test
mov
mov
movsl
aam
popa
pushf
pop
rorb
cmpsl
sub
aas
sbb
xor
mov
pop
jecxz
add
xlat
lret
cmpsl
jae
mov
sbbl
ffree
xchg
lods
jp
push
mov
lahf
daa
mov
mov
sbb
pop
dec
or
add
mov
dec
xor
stos
lods
sub
daa
std
ret
test
scas
sti
inc
push
inc
and
aad
pop
sbb
cmp
add
jge
xchg
insb
mov
or
sub
jno
movsb
or
push
pop
mov
adc
cmpsb
mov
push
lret
dec
or
clc
jnp
push
ret
stos
push
fildl
fld
daa
cmp
adc
or
arpl
xchg
in
inc
loope
das
fldl2t
pop
stos
cmp
and
shlb
loop
push
outsl
pop
push
pop
rclb
mov
mov
adc
xchg
inc
jnp
cmpsb
cli
xchg
dec
jle
loope
sbb
in
cli
fsubrl
fnstsw
jle
cli
adc
and
jmp
xchg
jle
xchg
subl
sbb
add
mov
adc
shlb
cmp
ljmp
adc
test
int
ret
and
push
add
mov
xchg
and
mov
fiaddl
mov
loop
xor
add
xor
rcl
adc
call
pop
emms
sub
jmp
mov
inc
jo
mov
sbb
popa
imul
jne
cmpsb
pop
mov
pop
cltd
and
in
out
xchg
into
mov
sub
pop
aas
pop
fsubrl
dec
mov
fisttpl
icebp
or
pop
aas
jecxz
out
cmp
in
outsb
ja
dec
incl
ret
or
pop
inc
dec
data16
test
mov
add
sub
js
loope
dec
movsb
mov
aaa
xchg
pop
or
iretw
mov
mov
enter
add
adc
repz
sbb
dec
jmp
mov
scas
nop
mov
in
movsb
lds
scas
push
fcompl
pop
loopne
pop
imul
scas
les
cs
sbb
cwtl
mov
pop
movsl
das
je
cmp
in
adc
and
loope
mov
mov
insb
mov
notb
jns
sahf
lahf
mov
sti
cmp
sbb
adc
sub
stc
sbb
insb
test
pop
and
inc
inc
cltd
add
lock
insl
sbb
sub
sbb
lahf
adc
repz
and
add
mov
leave
les
lods
mov
push
and
mov
ret
jns
mov
push
hlt
es
jl
or
pop
pop
cmc
imul
xchg
in
je
lcall
sbb
fwait
test
push
sub
imul
jg
fstpt
add
mov
xor
les
ret
adc
pop
jne
adc
cmc
xchg
adc
popa
shrb
dec
insb
jge
scas
xor
pushl
pusha
sti
insb
clc
add
ja
stos
or
jl
fadds
es
dec
dec
cmp
test
out
adc
cld
and
iret
push
adc
or
popa
test
mov
or
std
sbb
xchg
imul
arpl
inc
cmp
sub
push
inc
call
sbb
xchg
aad
pop
in
cmc
jmp
and
fistpll
ret
and
ror
cmp
mov
mov
enter
sbb
xchg
int
jae
inc
pushf
xor
pop
inc
sbb
cltd
xchg
inc
mov
pop
pop
in
test
cli
and
dec
inc
sbb
push
mov
imul
dec
jg
ror
movsl
dec
popl
loop
xchg
das
int3
pop
push
out
inc
repnz
push
in
push
mov
add
addr16
or
arpl
jmp
lea
dec
pop
push
push
jl
mov
dec
cmp
cltd
pop
leave
imul
inc
fdivl
push
inc
adc
pop
xchg
dec
push
lea
sub
in
mov
mov
and
xor
roll
lcall
mov
iret
stos
or
test
and
cld
jo,pt
getsec
lods
xchg
test
movsb
stos
mov
arpl
ret
lods
shll
shrb
and
mov
pop
pop
punpckhwd
push
int3
push
mov
ljmp
stos
add
sbb
jb
sti
sbb
shrb
push
lret
inc
popa
outsb
pushf
xor
mov
or
mulps
scas
adc
add
cmp
mov
sti
cmp
lret
leave
mov
xchg
les
rcll
cmp
jg
inc
mov
or
sub
mov
loope
mov
std
jp
out
mov
loopne
push
movsl
std
insb
roll
push
dec
push
cltd
lea
pop
add
aaa
pop
mov
mov
mov
fdivrl
and
std
add
dec
adc
sub
scas
cmp
cmpsb
mov
xor
inc
xchg
fiaddl
leave
push
fwait
inc
sub
mov
add
inc
push
cmpsb
nop
hlt
fidivl
dec
imul
cmp
ret
add
in
inc
rclb
lods
push
add
bound
mov
ljmp
or
jmp
dec
movsb
or
cmp
movb
mov
xchg
js
push
cmp
leave
cmc
push
sbb
test
lds
jmp
cmp
cwtl
sub
cmp
shll
add
sub
push
adc
imul
jmp
int3
sub
movl
cmp
jp
dec
jae
mov
stos
hlt
cmp
ljmp
es
and
push
xchg
push
xor
hlt
fiaddl
lods
mov
or
jge
lahf
xchg
push
xor
mov
xchg
fucom
inc
or
pop
es
jae
or
dec
clc
jnp
stc
cmp
push
iret
jl
fcmovbe
and
xchg
loope
xor
mov
hlt
xchg
ficompl
mov
lret
pop
xor
loopne
in
je
outsl
mov
fcompl
pop
inc
pop
std
repz
test
aam
aaa
adc
add
mov
push
jns
mov
xor
mov
ret
dec
test
fidivs
fdivrl
xor
outsl
push
imul
and
dec
mov
loope
jge
adc
or
or
dec
les
push
movsl
jp
and
xchg
push
dec
pusha
xchg
mov
push
pmullw
jbe
cmp
lods
andl
mov
hlt
cmp
cmp
cli
test
cmp
jae
sar
mov
fisttps
decb
xlat
dec
sbb
cwtl
into
dec
outsl
in
add
mov
adc
mov
icebp
pop
in
fdivrl
dec
in
inc
add
lods
push
dec
jg
call
test
adc
das
push
sbb
into
sbb
aam
out
cmpsl
sub
or
xor
xor
ficompl
rorl
icebp
sub
fdiv
push
ja
pop
mov
and
jb
dec
mov
sub
adc
push
lock
jl
mov
add
lods
negb
loopne
mul
stos
push
pop
inc
push
lods
ds
insb
div
mov
ss
or
push
sbbb
xchg
jl
clc
bound
ja
xchg
stc
das
loopne
adc
adc
pop
and
jecxz
test
stos
mov
clc
cmpsb
push
sub
sbb
xor
jno
test
add
lret
xor
sub
xchg
stos
sub
repz
or
and
adc
sbb
xchg
xchg
js
fldcw
insb
lods
fbld
lock
mov
xchg
rcl
pop
iret
fcomps
pushf
sbb
movl
jae
out
sub
cld
lods
mov
stc
or
incb
mov
hlt
cmp
call
call
or
jmp
add
test
sbbb
test
jl
fldl
mov
cmp
movb
add
or
loopne
mov
adc
test
shl
push
dec
pop
enter
fcompl
adc
stos
sbb
lcall
mov
ljmp
push
adc
xlat
mov
stos
test
dec
pop
push
test
and
rcl
jp
sbb
stos
cmpsb
inc
sbb
cmp
rolb
xorb
out
add
xor
decl
jge
push
pop
cld
push
mov
xchg
jge
xchg
mov
cltd
jl
mov
loope
mov
push
push
sahf
add
inc
jmp
cmp
inc
xchg
je
adc
jnp
fnstenv
cmp
mov
mov
repz
testl
pushf
jp
icebp
lea
jle
es
jae
cmp
lods
cmp
adc
dec
jns
jne
and
jecxz
fwait
jnp
push
xor
cmc
dec
or
pop
out
dec
inc
push
or
lahf
hlt
mov
les
jns
fistl
mov
cld
push
mov
loope
jns
sub
adc
lret
into
jae
xor
jns
push
pop
sahf
out
mov
int3
push
jmp
lcall
lods
test
sbb
pop
lock
jl
mov
jo
sbb
cmc
jae
movsb
or
cmp
aas
imul
xor
pop
xlat
pop
inc
outsb
and
jne
ret
in
stos
leave
imul
dec
inc
push
dec
js
hlt
mov
xor
imul
je
repz
push
movsb
sahf
sub
pop
mov
imul
jo
aaa
mov
mov
push
jmp
push
jbe
repz
movsl
popf
aam
ds
jb
lret
push
push
call
add
test
js
lea
xor
negl
xor
fcom
sbb
mov
pop
cmc
and
in
enter
sbb
mov
ret
fistl
out
fists
dec
push
or
and
push
mov
inc
dec
repnz
cmp
add
inc
fs
mov
scas
sbbl
mov
loopne
mov
lea
pop
cmp
pushf
mov
mov
push
int
out
cwtl
adcb
inc
add
sbb
cli
xlat
adc
mov
stos
sub
push
aad
pop
int3
les
xchg
ret
lods
xor
test
loopne
push
push
sub
popf
adc
adc
stos
sbb
mov
mov
call
xchg
fisttpll
inc
add
mov
out
add
ljmp
mov
inc
lahf
scas
or
js
andb
push
mov
inc
mov
mov
scas
retw
rorb
cs
pusha
je
push
xor
jle
cmp
ds
dec
in
mov
mov
jae
or
mov
jns
cmp
mov
xor
mov
adc
outsb
xorb
mov
add
cmpb
fstl
mov
sub
sbb
cwtl
cmp
popl
push
pop
cld
sbb
jnp
mov
dec
iret
xchg
sub
fdivrl
aaa
or
mov
and
int3
xchg
adc
inc
lcall
cmp
or
sub
or
dec
push
gs
sub
cmp
push
daa
cmp
dec
add
cs
mov
stos
int
push
mov
lods
mov
mov
in
xor
bound
leave
add
rorb
mov
pop
imul
jl
sahf
cmp
sbb
out
aad
mov
loopne
add
arpl
out
outsl
fs
mov
daa
testl
xor
xchg
jmp
mov
inc
mov
mov
mov
nop
push
pop
cmp
cmpsl
pop
outsb
push
jle
and
mov
jmp
ret
outsb
add
in
idiv
repnz
ret
in
dec
test
cmc
mov
test
add
sbb
pop
mov
das
cmp
cmpl
out
xchg
popf
lret
pop
dec
les
lods
adc
sub
cmpsl
jnp
jge
push
push
xchg
cld
add
mov
push
lea
shl
dec
popa
dec
mov
adc
sbbl
daa
fcomip
and
inc
pop
jmp
loop
addr16
xchg
jmp
push
leave
call
jge
cs
sub
or
pop
push
pop
mov
cld
jne,pt
daa
aaa
ljmp
mov
mov
enter
jle
mov
aas
cltd
addb
into
add
cwtl
jecxz
dec
push
jno
data16
sbb
lahf
rorb
je
roll
arpl
loope
test
scas
in
sbb
ror
or
xchg
cmpsl
xchg
stc
or
and
jae
inc
out
add
adc
dec
jecxz
cli
repz
cltd
pop
cmp
xchg
jae
xor
mov
fwait
push
jmp
push
hlt
xchg
test
and
outsl
jl
xchg
rclb
adcb
lahf
out
icebp
std
cmp
sub
fs
sub
jl
dec
inc
andb
ja
sbb
sub
lcall
imul
cmpsl
dec
cmpsb
sahf
sahf
pop
jg
cwtl
lock
test
stos
mov
test
sti
mov
arpl
xor
ljmp
shlb
pop
jns
lea
and
mov
sub
or
fisttpll
ss
seto
xlat
push
jno
adc
sbb
xchg
mov
mov
shrb
cmc
cmpsl
push
pop
inc
bound
movb
adcb
push
ret
push
mov
mov
fmul
jns
imul
xchg
cmp
repz
and
push
cmp
inc
popl
and
sbb
cmp
pavgb
ja
jle
leave
in
add
cmp
outsl
into
pusha
jnp
sahf
dec
mov
outsb
test
cwtl
sub
repnz
stc
mov
movsb
enter
insl
loop
sbb
sbb
pop
test
fcompl
sub
ficoml
rcll
pushf
mov
jbe
popa
and
and
sub
sub
sbb
lsl
clc
push
sti
mov
sub
adc
call
and
dec
push
cmc
jbe
pop
jne
mov
push
pop
push
mov
lcall
mov
push
testb
aad
pushf
call
loope
jb
das
adc
mov
imul
mov
dec
cli
icebp
jne
sbb
or
mov
jle
int3
leave
sahf
int3
xchg
or
in
stos
cmp
push
mov
nop
and
cs
das
and
das
movsl
pop
and
inc
mov
js
dec
loope
push
adc
ret
mov
pop
into
xchg
add
mov
pop
addr16
aaa
mov
dec
idivl
push
mov
cmpsl
sub
inc
enter
call
aaa
mov
dec
idivl
push
mov
cmpsl
sub
inc
enter
call
aaa
mov
dec
repz
imul
fdivs
inc
clc
addr16
mov
cmpsl
test
pop
cmp
pop
js
pop
loopne
maskmovq
testl
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
xor
add
xor
and
mov
mov
add
ja
rcll
inc
xor
add
push
rolb
mov
mov
add
pop
loope
rcll
inc
xor
adc
add
jno
popa
stos
push
fadds
mov
mov
jo
and
es
and
jae
xor
popa
sbb
push
mov
fstpl
shr
jp
icebp
outsb
pop
lods
orl
in
mov
out
imul
ficomps
hlt
cmp
leave
fisubrl
jb
push
jo
sub
scas
cltd
mov
lret
xor
jmp
push
subl
je
and
jno
jno
scas
adc
dec
mov
mov
sbb
cmpsl
add
addr16
shrl
push
pop
jnp
cmp
shrl
adc
mov
repnz
jl
jecxz
xor
aam
into
dec
sbb
out
push
mov
lret
popa
lret
jb
les
sbb
daa
sarl
and
jno
popa
loop
rolb
mov
mov
ds
dec
loope
rorl
jo
mov
int
fs
sbb
cmpsl
add
repnz
popa
xchg
xor
xchg
sub
hlt
push
in
loope
out
aaa
mov
inc
icebp
aam
mov
xor
shll
roll
incb
out
jno
popa
loop
rolb
mov
mov
add
jb
push
roll
and
jno
popa
loop
rolb
mov
mov
add
jb
push
roll
test
stos
out
and
jmp
jnp
std
fdivrs
pop
add
push
fsts
or
dec
nop
stc
adc
frstor
xchg
mov
pop
mov
mov
imulb
mov
xor
push
mov
cmp
rol
enter
push
ss
dec
pop
aad
jp
cli
stos
or
stos
xor
rolb
sub
mov
stos
add
notb
sti
scas
shrd
daa
cli
dec
test
push
roll
add
sbbb
cmp
jecxz
or
out
daa
fst
divb
fldcw
mov
insl
cltd
icebp
cmp
fldt
neg
and
mov
mov
push
xor
negb
std
cmp
and
mov
mov
cld
adc
mov
adc
pop
cmp
xchg
jge
jmp
xlat
push
ret
ds
jecxz
mov
fistpl
mov
mov
mov
shrl
fidivs
adc
xchg
add
adc
or
sti
data16
push
sti
mov
xor
loopne
in
jmp
mov
pushf
pop
mov
push
jno
sub
pop
xchg
scas
mov
or
fwait
jge
iret
adc
mov
pop
push
and
inc
cmp
and
jnp
test
loop
mov
dec
testb
mov
nop
adc
mov
sub
nop
dec
jne
dec
push
fcoml
pop
mov
sub
pop
ja
ds
test
mov
cld
jno
pop
mov
pop
add
push
lods
sbb
or
out
movsb
push
fs
test
jmp
dec
aad
pop
das
sbb
clc
dec
mov
cmpsl
xchg
pop
inc
pop
shl
jns
add
ret
cmp
jmp
push
mov
xor
test
sbb
out
push
hlt
cs
pop
out
xor
adc
pop
imul
cmp
sub
arpl
outsl
adcl
loop,pn
aas
and
mov
jmp
xor
sbb
sbbb
adc
loopne
pop
cwtl
insb
ret
clc
or
dec
popa
inc
test
icebp
jae
sarl
fmull
mov
mov
insb
adc
les
push
mov
sbb
shll
cmp
jo
xor
mov
je
cmp
push
push
and
movsb
movsb
jne
stos
cs
fiadds
pop
xchg
mov
psrlq
insl
sbb
stos
mov
inc
mov
pop
ja
daa
or
mov
and
fildl
jns
inc
jl
ret
vunpcklps
jno
loope
add
cmp
out
dec
mov
push
and
pop
cmp
cmpl
inc
xchg
xor
stos
movsl
and
dec
je
ss
cmp
dec
cmp
insl
inc
and
iret
dec
cltd
aad
jb
adc
push
push
mov
ret
loope
add
leave
daa
mov
push
mov
mov
ss
lret
jns
mov
cmpsb
sbb
push
xor
inc
mov
push
push
loop
inc
sbb
dec
mov
jg
rcrb
mov
daa
jmp
cwtl
sahf
js
pop
outsb
push
repnz
sbb
ljmp
ljmp
fldl
or
hlt
les
jae
jns
loop
ficompl
xor
sbb
shr
and
sub
or
nop
cmp
mov
mov
inc
cmp
test
inc
sahf
cwtl
pop
and
mov
lds
retw
jg
mov
data16
mov
ret
lock
dec
fwait
jp
push
xchg
cmpsl
dec
pop
jmp
mov
rorl
and
cld
xchg
add
mov
mov
stos
sahf
enter
rol
cltd
stc
out
outsl
jmp
pop
mov
jb
scas
jo
pop
movsb
into
cltd
and
mov
xor
clc
pop
lods
mov
ficoms
jge
fs
jnp
cmpsl
mov
repz
push
mov
xchg
pop
pop
adc
int
and
pop
sub
orb
loop
cs
movsl
lret
lret
shll
test
in
dec
loope
repz
or
out
daa
cmp
mov
mov
out
dec
clc
in
bound
jmp
ljmp
mov
movsb
push
push
iret
jmp
cs
adc
aam
lods
call
inc
xchg
into
mov
xchg
inc
cltd
enter
jae
mov
scas
in
pop
cmp
pushf
dec
data16
cld
pusha
dec
xchg
bound
mov
movsl
cmpsb
push
cmp
cmp
loopne
pushf
popa
scas
cmp
dec
fadd
mov
mov
mov
cmpsb
cs
or
and
outsl
or
in
test
xor
scas
pop
stos
fsubs
sub
jnp
push
mov
icebp
sub
sub
cli
popa
out
mov
pop
movsl
adc
jecxz
cmc
shl
ror
push
mov
ret
jp
cs
mov
mov
adc
xchg
movsb
out
sub
lret
mov
or
inc
mov
mov
out
and
out
mov
jecxz
push
xchg
jle
call
mov
mov
or
mov
test
shll
push
and
mov
sarb
jae
mov
out
enter
fcmovnbe
fistpll
xchg
cmp
cmpsb
mov
xchg
cmp
cmpsl
mov
and
mov
aas
sbb
mov
fidivrs
lcall
rol
mov
enter
pop
push
push
ljmp
hlt
rcl
sahf
fs
outsb
adc
or
push
push
pop
lea
cmp
adc
leave
mov
lea
dec
jb
cmp
repz
mov
std
in
xchg
lds
cmp
sub
loopne
icebp
add
lcall
push
xchg
mov
push
rorb
add
and
inc
addb
outsl
out
iret
fsts
aas
cmp
cmp
imul
leave
jnp
fdivrs
movl
sbb
xchg
fistpll
jmp
push
mov
in
fld
sub
test
lods
push
cli
jg
lret
inc
popf
mov
shlb
lea
loope
scas
jl
mov
xchg
rcll
mov
insb
xchg
mov
lds
mov
add
sub
aad
push
dec
lcall
add
cmp
cmpsl
sub
jbe
inc
pusha
jmp
jno
out
push
adc
std
jecxz
jle
or
sbb
inc
or
jp
add
fxch
pushf
sahf
jl
roll
sub
ss
xchg
add
iret
jno
jle
add
iret
mov
cmpsb
lcall
out
lock
xor
adc
push
repz
mov
or
adcl
ss
mov
pop
adcb
jo
mov
jecxz
xor
dec
pop
roll
add
sbbl
dec
xchg
push
sbb
push
ja
dec
clc
out
lret
inc
dec
mov
test
mov
push
call
mov
divb
fldl
rcrl
in
jp
int3
push
and
insb
and
iret
mov
pop
cmp
xchg
nop
mov
xchg
dec
mov
enter
lea
add
movl
cmp
mull
add
fidivs
adc
imul
cmp
push
jbe
shrl
sub
mov
icebp
dec
lock
jg
xchg
push
hlt
inc
mov
outsb
sub
jno
dec
jns
push
scas
popa
into
pop
ljmp
popa
jg
ds
dec
lahf
cwtl
adc
mov
mov
pop
insb
iret
cmp
hlt
nop
cmp
das
lret
mov
addr16
int
sbb
loope
dec
jl
shl
pop
popa
out
scas
in
and
mov
adc
push
push
addl
shll
adc
mov
pop
int3
inc
xor
addb
pop
xchg
mov
mov
push
xor
das
sti
pop
inc
fiadds
xchg
repnz
xchg
mov
sub
xor
idivl
mov
idivl
dec
mov
sti
push
xor
ret
popa
aas
mov
xchg
rclb
ds
mov
jo
cwtl
jle
iret
cmpsb
jl
adcb
push
popa
into
insb
add
inc
jns
lret
mov
inc
adc
in
aam
jl
jae
add
mov
mov
insb
fldcw
rorl
add
jo
and
sbb
inc
mov
add
inc
xchg
sti
add
loope
idivb
scas
mov
sub
sub
je
mov
jge
ljmp
mov
add
jae
cmp
lods
xor
cwtl
lret
int3
mov
fdivs
inc
adc
mov
cwtl
pop
add
inc
shrl
inc
in
bound
mov
cmpsl
stc
mov
jg
or
pushf
push
push
pushf
orl
aaa
sbb
lock
iret
push
sbbl
pop
push
fwait
out
push
sbb
pop
push
mov
jecxz
and
loop
test
stc
pop
mov
mov
mov
test
call
out
and
and
scas
inc
jno
subb
xchg
mov
and
sbb
mov
out
xor
mov
cli
test
stos
adc
inc
add
std
jbe
pop
pop
dec
mull
and
pop
cmc
shll
xchg
mov
sti
pusha
xor
or
ficomps
adc
mov
sbb
mov
xchg
dec
data16
mov
nop
mov
fldl
into
mov
mov
inc
push
aas
and
sub
movsbl
mov
test
dec
pop
jecxz
lret
sbb
mov
popa
in
imul
add
dec
icebp
imul
in
inc
inc
addr16
xchg
cmp
pop
mov
lea
dec
rolb
cld
jp
dec
and
mov
outsl
xchg
fnsave
inc
scas
cli
aad
lods
ds
test
jno
or
mov
stos
xchg
fwait
ss
je
push
hlt
inc
jge
fisttpll
mov
xor
add
push
aaa
loop
jg
jbe
mov
add
filds
repz
cmp
scas
add
lret
fstpl
xor
mov
mov
cmpsb
rol
jl
into
push
out
out
mov
xor
push
scas
cmpl
cmpsl
aad
sahf
dec
cld
lods
sbb
sub
push
nop
mov
inc
and
test
js
mov
in
dec
inc
sbb
int3
or
or
mov
cmp
out
cltd
jo
loopne
dec
mov
lret
xor
sbb
jecxz
les
dec
mov
arpl
aam
ss
aam
shrb
dec
and
lret
addr16
mov
aas
dec
inc
cmc
lock
fs
xor
mov
jp
adc
cmp
in
pop
lret
rcrl
and
pop
add
jp
push
loop
loopne
jl
add
aam
popa
loope
test
push
cmp
fistpl
add
sahf
pop
and
popf
mov
push
jb
clc
ret
add
jp
movsl
cltd
pusha
int3
mov
mov
or
mov
addr16
popa
in
lods
sbb
mov
loope
push
out
flds
lcall
mov
enter
cmpsl
mov
das
aad
mov
icebp
pop
ljmp
xchg
dec
fst
scas
mov
inc
sbb
popf
pop
add
lods
push
aad
out
dec
adc
out
imul
out
dec
stc
hlt
cmpsl
push
dec
mov
lahf
sub
test
push
call
inc
gs
sub
cmpsl
mov
sub
dec
imul
insl
insb
lea
cmp
add
mov
aad
aam
cwtl
jnp
xchg
mov
call
pop
and
pop
add
or
cmc
rol
xor
scas
mov
sub
cld
sbb
pop
stos
das
pop
leave
rcll
cmp
fldenv
insl
mov
mov
inc
add
in
into
test
pusha
cmp
push
or
push
cld
push
popa
loope
pop
out
out
out
jmp
cmp
or
pop
and
scas
mov
cltd
xor
enter
icebp
and
xor
mov
xor
nop
adc
ret
cmp
fistps
jle
pop
mov
call
and
int3
jmp
mov
rclb
mov
jbe
adc
ret
ja
xchg
push
and
pop
push
loopne
adc
cmp
dec
das
cmp
dec
int
clc
xlat
arpl
sarl
mov
bound
and
jb
and
ljmp
push
test
xchg
int3
xchg
and
inc
mov
pusha
orb
lcall
add
rolb
leave
in
jle
pop
lock
sub
test
jl
jl
je
dec
inc
sbb
inc
leave
outsb
cmp
sbb
rol
lahf
mov
cmpl
mov
mov
imul
push
mov
jg
arpl
addb
pop
or
dec
inc
gs
into
mov
push
xor
insl
jle
pop
cld
sbb
aad
jo
aaa
sbb
dec
mov
fimuls
xlat
cmpb
fisttps
sbb
js
aad
mov
add
lahf
mov
inc
into
outsb
mov
lahf
icebp
and
inc
push
jno
jne
and
add
pop
adcb
pop
cmp
xor
lods
lret
mov
outsb
add
inc
test
add
loopne
sti
push
cmp
sbb
leave
and
mov
add
mov
xchg
mov
rdtsc
mov
jae
ss
dec
xlat
sldt
scas
fisubrl
imul
xchg
or
pop
fwait
jo
dec
inc
sbb
ficomps
in
push
shll
sub
fnsave
push
aas
dec
lods
pop
cmp
pop
les
push
subb
test
xchg
add
arpl
jge
stc
je
jne
popa
rclb
add
sbb
pusha
leave
mov
xlat
xchg
inc
fldcw
mulb
scas
dec
iret
movsl
imul
int3
sbbl
sub
jl
pop
mov
jle
fcoml
push
and
xchg
sahf
jo
sbb
cmpb
sahf
mov
jns
rcrb
outsl
sbb
xchg
in
insl
sahf
push
sub
cld
add
mov
mov
or
daa
fidivs
stos
iret
aad
add
cwtl
jg
jbe
jns
loop
loop
adc
mov
cltd
icebp
cmp
loopne
cmp
les
rcr
sbb
stos
jecxz
stos
push
adc
push
pop
inc
out
cmp
xchg
jb
and
ret
xor
fadds
pop
cwtl
sbb
or
out
out
das
jge
and
ficompl
mov
push
out
fnsave
xchg
dec
lds
aad
cmp
pop
dec
adc
add
jb
lcall
les
aad
adc
adc
pop
out
fsubrs
xor
aad
test
mov
xor
fstpl
pop
fsubr
stos
js
ljmp
das
ret
adc
shrl
mov
adc
xchg
loopne
lods
out
sbb
or
and
or
mov
sbb
sub
fcmovbe
and
dec
fidivl
int
mov
outsl
test
mov
daa
mov
sub
xchg
mov
or
sbb
inc
and
pop
int
mov
mov
int3
rcrb
dec
cltd
pop
mov
mov
test
lds
sub
xchg
mov
mov
and
jne
xor
mov
cs
and
inc
aam
in
inc
decl
sbb
sbb
call
daa
and
mov
popf
movsb
shlb
mov
and
cwtl
inc
pop
add
lods
or
sub
mov
pop
movntq
out
or
hlt
fildl
mov
jle
adc
pop
add
clc
jb
test
push
cmpsb
dec
xchg
cmp
pop
mov
inc
xchg
xchg
add
outsl
add
jnp
sbb
add
imul
xchg
cmp
cmpl
cld
hlt
cmc
jo
fs
mov
lret
sti
mov
in
jl
fdivrs
sub
push
mov
int3
cmpsl
inc
fdivr
andl
sti
jb
jo
pop
jl
lods
fldenv
jl
jae
jecxz
loope
scas
push
mov
and
and
xchg
dec
test
shlb
push
push
aas
enter
divb
enter
xlat
imull
pushf
xchg
cmp
fistpll
je
std
cmp
push
sub
fistpl
ds
dec
add
pop
lret
mov
pushf
sarb
popf
loope
pushf
pushf
push
popf
movsb
movsl
xor
jecxz
jl
xchg
sarl
addr16
ret
es
jecxz
pop
mov
outsb
push
push
mov
shrb
sbb
jo
cld
and
sub
outsl
je
bound
out
add
inc
dec
aaa
xchg
dec
out
sbb
mov
and
mov
dec
push
mov
pop
out
outsl
repnz
fildll
testl
nop
jb
inc
adc
xor
in
jp
push
jecxz
jmp
jnp
out
mov
inc
cld
fldl
xor
inc
push
lahf
xchg
adc
xchg
xor
xor
sub
and
push
das
and
pop
sub
mov
roll
mov
vmaxss
add
cli
cmpsl
xchg
or
xorl
sub
arpl
jg
add
les
xchg
cmc
in
mov
or
cmp
and
ret
rcrb
mov
mov
out
test
ret
and
jg
inc
adc
sbb
ja
aam
inc
mov
xchg
dec
push
data16
pop
mov
and
sbb
test
jecxz
arpl
and
scas
lcall
es
shll
movsl
aas
adc
cltd
addr16
ds
add
cmpsl
pop
mov
jns
pop
je
in
pop
pushf
pop
xor
pop
sub
popa
mov
mov
out
jl
fcoms
shrb
daa
cmp
je
orb
fst
dec
or
stos
jle
pop
mov
addr16
bound
test
inc
push
leave
adc
js
subl
xlat
cld
sbb
aad
in
test
cmp
dec
xchg
and
jne
sub
dec
xlat
lods
pop
sbb
aad
dec
call
mov
sti
cmp
movsl
cmp
dec
subl
mov
movsb
out
nop
mov
decl
lods
mov
movsb
sti
mov
cmp
out
imul
pop
jge
xor
cmp
mov
lret
movsl
aad
test
lahf
jae
and
test
cmp
cmp
shlb
call
sarb
and
notb
jnp
sub
andb
add
pushf
pop
jbe
andl
pushf
hlt
jbe
je
sbb
push
loop
jp
cmpsl
jns
stos
xorl
in
fbstp
lahf
pop
adc
adc
out
sbb
sbb
sahf
out
push
jle
or
lock
je
mov
je
hlt
xor
idivb
jle
sub
xchg
sbb
jne
inc
addr16
cmp
xor
mov
adc
repnz
mov
add
ss
jb
test
push
es
mov
shlb
out
jno
mov
add
jge
arpl
add
add
sti
mov
mov
pushf
mov
inc
shlb
push
je
jl
mov
or
je
inc
outsl
movsl
jne
test
pushf
cmp
and
mov
aad
xchg
or
js
fwait
mov
stos
push
xchg
loope
or
mov
cmp
mov
xlat
outsb
insl
adc
js
xchg
sub
jnp
in
push
mul
fucomip
shlb
bound
repnz
inc
xchg
dec
mov
and
mov
rcll
mov
popf
movsl
or
lret
xchg
rorb
jbe
je
dec
frstor
xchg
repnz
xchg
fmull
cmp
adc
or
loop
inc
or
inc
imul
xorl
std
stos
insl
push
mov
pop
into
lret
outsb
push
dec
mov
aad
mov
andl
xchg
mov
test
mov
scas
sub
pop
jl
add
adc
sub
imul
push
es
stos
inc
push
out
or
lret
push
inc
and
sub
mov
pop
cmp
push
cld
testb
xor
icebp
ret
cmc
and
out
mov
cmp
dec
ffree
cmp
dec
imull
mov
push
or
aaa
push
int
cmc
pop
cmpsl
ja
decl
gs
loopne
pop
jno
pop
sti
inc
jl
sub
mov
mov
push
add
mov
sahf
lods
sub
mov
mov
jno
popa
loop
rolb
mov
mov
add
jb
push
roll
and
jno
popa
loop
rolb
mov
mov
add
jb
push
roll
and
repnz
mov
inc
ret
mov
or
jbe
pop
shll
jbe
ret
popa
loop
push
inc
add
adc
sbb
sub
cmp
in
hlt
inc
rorb
mov
inc
and
add
pusha
push
inc
and
xor
les
hlt
repnz
xchg
shlb
push
adc
jb
push
adc
and
xor
les
hlt
jmp
cli
xchg
lret
mov
jp
or
jp
jb
or
xor
int
xchg
xor
mov
cmpsl
add
add
add
mov
pop
xchg
ljmp
imul
mov
out
fs
jne
les
push
and
enter
add
les
pop
mov
jb
sahf
daa
push
fildl
mov
mov
pop
in
loopne
test
test
ja
inc
daa
lcall
inc
adc
pop
xor
or
pop
xor
xor
in
adc
bound
and
inc
sub
in
orl
mov
push
je
sti
xor
push
xor
jnp
mov
hlt
in
repnz
shlb
push
or
push
jp
dec
and
jb
test
divb
lahf
rol
xor
dec
cmp
jb
pop
insl
and
ret
sahf
std
in
mov
ror
xchg
mov
add
adc
inc
sbb
or
push
es
xlat
xchg
into
mov
mov
movsb
ret
inc
and
add
bound
and
xor
les
hlt
repnz
xchg
shlb
push
adc
jb
bound
and
xor
les
and
shl
pop
lret
bound
mov
ss
sbb
sub
daa
adc
and
jno
test
out
lcall
pusha
cmp
pop
out
inc
dec
pusha
adc
in
fwait
lret
jmp
lahf
pop
xchg
rcr
push
or
mov
push
jp
inc
fbld
stos
add
ss
ja
sarb
sub
jae
sub
test
in
insb
outsb
aad
xchg
cmp
insb
in
gs
push
lcall
mov
popf
mov
divl
push
dec
mov
test
pop
add
mov
or
adc
xchg
es
fistpl
js
sbb
mov
pop
jl
or
test
or
cmp
add
insb
lcall
test
push
movsl
lcall
loop
mov
sbb
sub
sbb
sbb
sahf
addl
mov
jae
pop
iret
push
movsl
out
mov
add
ret
mov
adc
sub
inc
adc
jns
add
je
pop
push
jb
inc
push
stos
daa
fiaddl
push
mov
mov
lcall
mov
popf
ficoml
scas
pop
mov
mov
jb
push
push
sbb
movsb
inc
xchg
dec
in
mov
pop
fldt
jbe
push
push
rorb
mov
rcl
fxch
inc
notl
arpl
mov
ret
xor
jne
xchg
sti
ret
dec
cltd
and
test
fucomi
cwtl
pop
sub
sti
push
loopne
sbb
sbb
ja
test
xchg
mov
hlt
lret
adc
andb
or
rclb
cs
and
add
andl
or
mov
sub
and
stc
cs
xchg
and
out
cmc
lds
inc
xor
adc
or
inc
cld
lods
dec
aad
sbb
arpl
fdivl
jnp
cwtl
aaa
xor
lods
mov
push
jne
cltd
pop
mov
sub
aaa
jge
fistpll
cmp
adcb
in
iret
inc
or
aad
call
pop
sub
jg
pop
sbb
lods
int
xchg
xor
jmp
cltd
loopne
and
or
mov
add
lds
pop
cld
jns
inc
jno
add
pop
repz
cmc
and
sbb
ds
lcall
loopne
mov
inc
xchg
xor
pop
jnp
inc
je
arpl
int3
sub
fidivl
shl
bound
cld
cwtl
sti
jmp
out
stos
push
shll
xor
stc
jle
inc
sub
lea
add
orl
push
movb
int3
pop
stc
inc
or
or
jbe
fcmovbe
scas
pop
jle
out
or
adc
loopne
mov
loope
sub
push
ljmp
cmp
sbb
sub
push
cmc
mov
dec
aam
cmpsl
sti
xor
imul
rcrb
or
xor
cwtl
imul
cmp
xchg
insb
xor
jbe
mov
fildl
jmp
and
or
fcmovu
cltd
lods
loope
add
jp
xor
push
mov
movsl
xlat
imul
aas
push
dec
imul
lret
cli
hlt
sub
jg
js
stc
cmp
les
shrl
fisttpl
cltd
adc
push
cs
daa
sahf
imul
mov
cmp
mov
fs
mov
cmpsl
iret
hlt
lods
imul
out
mov
mov
cmpsb
or
dec
dec
dec
xchg
push
mov
sub
cmpsl
cmp
adc
inc
dec
xchg
loopne
or
fistl
fcompl
or
test
stos
pop
pop
xchg
leave
dec
mov
inc
fsubs
sub
mov
sti
outsl
pop
push
xchg
mov
cwtl
idivb
mov
iret
repz
cwtd
mov
cmpsl
cmp
call
add
pop
popa
xchg
bound
mov
ss
xchg
cld
lret
shll
mov
js
push
inc
adc
addr16
dec
out
in
gs
test
mov
in
fcomps
loop
push
mov
jbe
mov
dec
mov
dec
push
aad
lock
mov
sub
cmpsb
mov
jo
das
jne
ret
push
cmpsl
push
and
or
add
mov
loop
push
rcll
rolb
cmp
dec
xchg
enter
jne
dec
adc
sti
xor
cmp
les
es
insb
sahf
and
mov
adc
hlt
leave
xchg
jae
repnz
inc
gs
mov
lods
pop
or
lcall
ljmp
mov
orb
fdivs
jecxz
add
es
clc
xchg
ret
fs
std
or
pop
jmp
inc
sbb
cmp
jmp
mov
inc
or
into
sub
shl
xor
gs
mov
cmp
cmp
pop
popa
and
sub
xchg
xor
in
into
xchg
mov
push
ljmp
cmp
int
or
adc
dec
fcomps
xor
pop
mov
fiadds
negl
adc
arpl
pop
daa
pop
rcrl
je
pop
xor
repz
test
pop
or
adc
popa
and
and
push
jo
imul
sbb
jae
lea
sahf
loopne
pop
cli
adc
xchg
pop
mov
into
int3
ficompl
cmp
xchg
out
data16
out
jmp
test
fcom
mov
push
shlb
aas
test
dec
popf
lahf
xchg
mov
stos
outsb
push
es
idiv
repnz
jnp
mov
cmpsl
xor
cmc
and
mov
std
or
int3
fstp
insb
cmpb
jg
fs
jecxz
test
ja
jl
jle
add
cltd
pop
mov
jns
adc
cmp
mov
or
repz
iret
dec
inc
pop
mov
outsb
add
mov
mov
xchg
cmp
loopne
pop
mov
xchg
cmp
fcoms
stc
dec
and
xchg
adc
jae
pop
pop
movsb
aad
or
and
xchg
dec
dec
stos
bound
loope
and
jg
mov
jecxz
push
add
and
in
cmp
repnz
arpl
jnp
scas
imul
outsl
jae
roll
in
lcall
jae
mov
mov
cmp
or
ret
adc
lahf
insb
inc
int
out
insl
mov
arpl
cwtl
lahf
movsb
es
push
ficompl
jl
out
mov
and
ja
fwait
sub
loope
addr16
pop
inc
pop
sbb
int
out
loopne
mov
mov
fs
mov
test
repz
xlat
lods
mov
adc
mov
ljmp
popa
xor
rcr
sub
sbb
or
rclb
fnsave
sbb
in
add
fimull
inc
pop
mov
out
pusha
imull
lahf
fwait
jl
popa
rclb
js
jne
inc
push
fidivs
in
subl
sub
or
fstps
loopne
movsl
cmp
jl
frstor
mov
mov
out
loop
jns
or
and
shlb
rcrl
roll
jnp
bnd
cmp
cmpsl
pop
mov
push
mov
mov
dec
fs
mov
push
cwtl
sub
push
jnp
mov
mov
xor
push
cmc
lcall
and
cmpsl
lcall
leave
adc
inc
popf
cmp
sub
inc
aaa
inc
test
mov
mov
nop
add
jmp
and
ret
mov
pop
scas
scas
imul
psrlw
pop
in
enter
mov
dec
or
ret
divb
cli
pop
imul
fldcw
and
inc
mov
je
and
adc
cmp
jno
mov
and
in
aaa
mov
neg
xchg
xor
fsubl
pop
mov
fwait
dec
mov
mov
sub
push
test
add
lcall
mov
stos
clc
xor
rcrb
ret
push
imul
xchg
scas
sub
push
inc
sti
mov
cmpsb
inc
cmpsl
cli
outsb
xor
mov
pusha
sub
or
fistpll
rdrand
mov
add
sub
fldl
xlat
push
push
aaa
or
xor
rclb
jo
cmp
out
xchg
dec
inc
mov
mov
add
pop
push
inc
es
sbb
sub
mov
or
mov
pop
and
mov
add
imul
or
sbb
inc
shll
ds
adc
hlt
outsl
stc
lds
and
movsb
mov
popa
cmp
push
insb
insl
mov
inc
dec
popa
mov
or
in
lods
sub
jbe
test
es
daa
inc
xor
push
test
loopne
cmp
imul
lods
add
gs
adc
out
sub
in
mov
dec
ret
pop
fcmovnu
test
mov
loope
sub
into
sahf
repnz
push
mov
rolb
jne
movsl
sub
shrb
cs
cmp
cld
dec
fstl
cmpsb
test
push
jle
mov
cmp
es
bound
jno
inc
int3
ret
sbb
pop
or
clc
test
or
aaa
test
inc
mov
inc
xchg
sbb
scas
aad
jb,pt
ret
ret
pop
inc
outsb
sub
add
dec
inc
insl
jnp
out
sarl
xchg
dec
jg
xchg
lods
add
das
mov
mov
push
adc
add
hlt
mov
idivl
fstl
adc
test
pusha
insl
hlt
movsl
mov
inc
lret
xor
inc
imul
addr16
cwtl
dec
push
sbb
or
fwait
js
dec
out
xchg
lret
repnz
push
fsubrs
lahf
pop
push
mov
scas
icebp
hlt
lds
jmp
rorl
mov
mov
dec
rol
sbb
bound
pop
lret
ja
jle
stos
stc
stos
leave
xchg
jge
xor
and
sbb
cltd
cmp
shll
lcall
jns
and
imul
and
popa
xchg
sarb
jno
mov
push
pushf
pop
sar
popf
sub
addr16
fnsave
daa
add
mov
mov
or
adcl
lock
sbb
ret
and
aaa
pop
jmp
xchg
fucomp
imul
or
ds
sub
mov
lock
cmp
xor
inc
add
insb
jmp
lret
mov
sub
aaa
call
test
cmp
aam
fwait
out
mov
mov
loop
mov
sub
clc
pop
push
push
inc
add
mov
cmp
xor
shlb
repnz
xor
mov
out
sbb
test
popa
pop
sub
xchg
ja
testb
or
insl
addr16
dec
xor
jnp
daa
pushw
stos
adc
aas
roll
jo
dec
xor
stos
inc
jg
add
sar
mov
mov
ss
arpl
mov
inc
lret
inc
enter
mov
xlat
andb
inc
sub
pop
dec
lret
je
jg
enter
pop
cmp
aad
mov
pop
out
in
and
and
jge
rolb
mov
cld
pop
call
sub
icebp
or
ret
jmp
imul
call
xchg
push
inc
pop
push
jl
sarb
mov
aad
ds
pushf
fiaddl
jo
sahf
pop
fstl
and
imul
iret
push
lret
lret
jmp
lahf
mov
inc
movsl
data16
push
dec
gs
rclb
mov
xor
mov
test
js
mov
jno
xor
fistps
mov
sbb
sar
xor
add
testb
into
sub
cltd
movsb
jbe
js
inc
mov
aam
sub
lret
cmpsl
and
popa
sbb
push
pusha
mov
mov
pop
lahf
dec
stos
in
mov
cwtl
lods
bound
xchg
or
rcrb
cli
mov
ret
jg
jmp
scas
cmp
jb
stc
aam
dec
cmpsl
pop
dec
ret
test
sbb
xchg
scas
xchg
jmp
flds
jo
filds
inc
cmp
rorb
es
adc
adc
daa
jnp
xor
push
int3
mov
shrl
js
jge
xlat
pushf
push
popf
pop
xchg
imul
ss
stos
pop
popf
sarl
add
adc
sbb
mov
push
inc
aaa
and
in
pop
jmp
ss
mov
stos
xchg
int3
adc
xchg
fistpll
xchg
scas
cmp
jg
xsha1
cmpsb
dec
movsl
mov
xchg
ss
fs
jecxz
pusha
divl
ret
aad
out
mov
mov
cli
iret
push
push
mov
cwtl
sub
cmc
sbb
loop
mov
bswap
pushf
inc
or
adc
pop
subb
movsb
xor
cmpsl
inc
pop
shl
loope
imul
ficoml
mov
jecxz
sub
mov
fucomip
pop
cmp
jle
pop
lock
cmp
aas
in
mov
sbb
iret
and
and
incl
xchg
and
insb
sti
jbe
push
dec
push
popl
ja
xchg
push
out
mov
xchg
cmpsb
roll
je
aad
adc
fcoms
cmc
jne
outsl
inc
jns
mov
push
ljmp
xchg
pop
sarb
subl
cmc
out
or
xor
jnp
mov
mov
std
mov
es
stos
jl
inc
jl
pop
bound
pop
mov
xor
loop
adc
and
jl
mov
and
sub
sti
outsl
adc
insl
sete
ret
jno
repnz
adc
pop
pushf
int
dec
icebp
into
jae
push
jns
mov
hlt
testb
or
push
jo
mull
dec
mov
dec
mov
xchg
dec
sbb
and
icebp
xor
sub
cmp
icebp
xorl
dec
mov
cs
cmpsl
push
pop
sbb
aad
mov
loop
flds
dec
fwait
jnp
cmpsb
and
and
push
dec
dec
xor
icebp
adc
mov
xchg
inc
cwtl
jb
cmp
popf
push
mov
loop
mov
mov
fldt
pop
cltd
enter
cmc
push
fistl
sub
add
mov
inc
popa
sub
pusha
dec
add
fwait
clc
push
fsubrl
inc
mov
ret
cmp
jp
mov
gs
and
hlt
imul
and
xchg
sbb
xchg
jns
lret
sbb
cmp
pop
movsl
mull
sbb
xchg
ds
cmpsb
pop
inc
jl
push
push
push
sbb
mov
add
mov
xor
mov
push
addr16
push
add
and
pop
xor
push
leave
insl
dec
xor
and
and
pop
aad
xor
xchg
pop
mov
fwait
mov
adc
or
cli
pop
mov
adc
xchg
mov
imulb
aaa
insb
jae
rcrl
dec
or
stos
jnp
adc
movsl
iret
shlb
fwait
xchg
sti
vpaddsb
inc
jno
mov
sbb
test
movsl
cld
jnp
or
xor
lcall
lods
addr16
jns
add
jo
inc
jno
rcrb
jb
and
sti
ret
pop
addr16
dec
and
fnsave
mov
and
mov
pop
pushf
cs
pop
lahf
shlb
mov
data16
push
daa
mov
ret
cld
jecxz
test
mov
jns
inc
jl
lods
xor
jbe
pushf
fwait
icebp
cwtl
xlat
ja
push
pushf
cwtl
lcall
outsb
bound
or
mov
dec
shll
add
push
call
mov
test
test
int3
sbb
xor
and
pop
pop
xchg
mov
adc
adc
adc
mov
xchg
mov
andl
sbb
out
push
insl
mov
and
push
addl
jbe
and
pop
adc
sbb
aam
loopne
xor
das
ja
push
lret
movsl
xor
scas
or
cs
sbb
sbb
dec
pop
cmp
adc
sub
dec
sub
mov
les
xchg
push
lahf
dec
cld
inc
jae
imul
inc
push
cmp
push
int3
and
es
dec
lret
repz
xchg
jmp
xor
push
xor
and
loopne
cmp
pop
jp
sahf
mov
cmpsl
out
dec
sub
fnsave
adc
les
and
lahf
mov
and
leave
daa
and
jno
iret
inc
bound
lea
xor
outsl
stc
jg
adc
fwait
and
testl
add
mov
lds
movsb
call
in
dec
test
lahf
jne
adc
and
jp
jb
pop
push
lcall
sbb
out
pop
mov
jle
out
sahf
push
imul
lds
push
push
and
pushf
xlat
mov
scas
lock
adc
push
insb
pop
xor
pop
mov
es
xor
xlat
ljmp
orw
arpl
pop
jg
or
sahf
movsb
daa
adcl
mov
jnp
xor
pusha
loopne
mov
push
add
cld
pusha
add
sbb
pop
inc
mov
ret
mov
jb
inc
mov
pop
cmp
adc
test
dec
leave
loope
mov
mov
xchg
jp
push
scas
pop
jp
dec
lcall
scas
pop
adc
movsb
data16
pusha
into
stc
add
fwait
imul
aad
xor
pop
push
mov
test
lock
sbb
jmp
das
add
xchg
outsb
jmp
sti
stos
cmpsl
xchg
stc
fcomps
ret
popf
pop
xor
push
fs
jecxz
mov
add
dec
jg
sti
imul
insl
ja
mov
dec
and
sbb
out
cwtl
test
pop
sub
test
adc
call
mov
xchg
int
and
push
mov
cmpsl
mov
jmp
test
mov
int
dec
ds
sarb
or
or
les
mov
or
xor
in
enter
cltd
addr16
jp
jne
leave
into
dec
xor
icebp
inc
loopw
adc
push
filds
testb
into
jo
xor
sub
dec
stc
fscale
aad
lods
pop
dec
add
xchg
sbb
mov
pop
add
dec
jecxz
std
addr16
mov
les
movsb
jbe
je
dec
or
sbb
call
push
aas
jns
jnp
adc
pop
lret
jmp
mov
imul
outsl
jbe
mov
out
mov
or
into
inc
pop
and
int
fnstenv
mov
pop
add
xchg
and
push
and
test
pop
xor
aas
in
cwtl
xor
xlat
sbb
or
push
dec
addb
sbb
jbe
std
push
xor
mov
pop
arpl
dec
add
xor
and
jno
or
add
pop
aad
cmc
jae
je
mov
cmpsb
fnsave
cmc
mov
push
enter
jp
aas
aaa
sub
and
push
cmpsl
mov
fsubrs
cltd
pop
repnz
pop
into
nop
pushf
xchg
and
mov
outsl
pop
mov
clc
mov
xchg
push
mov
aas
out
cli
repz
xchg
rcrb
and
shlb
sar
xchg
cmp
xchg
nop
test
and
das
ja
and
push
test
push
xchg
cmpsb
mov
and
aad
push
in
mov
stc
push
imul
pop
dec
fildll
adc
mov
adc
push
push
loop
dec
xchg
popf
xorb
dec
inc
pop
aam
ret
jecxz
lds
mov
into
jo
add
lret
out
add
fistps
mov
cmp
mov
xchg
pop
ja
repz
xor
push
gs
inc
test
stc
ret
mov
or
xlat
ljmp
pop
mov
pop
rcl
jmp
ds
js
ja
cmp
lcall
cltd
and
jne
or
push
scas
jns
call
jbe
int3
lahf
mov
adc
dec
adc
mov
rcrb
xchg
call
lods
imul
and
inc
loopne
xor
jb
push
mov
iret
xor
xor
into
xchg
xchg
mov
dec
push
notl
out
push
or
cltd
and
cmp
ljmp
bsr
jmp
mov
xlat
xchg
sbb
cmp
test
push
icebp
rcll
cmpsl
xor
scas
jle
or
aaa
dec
popf
mov
aaa
push
mov
rclb
outsl
sub
out
mov
xchg
lret
mov
out
lods
cmp
cmp
sbb
aam
stos
adc
adc
pop
les
hlt
sahf
jecxz
xchg
jg
pop
mov
xchg
lret
ret
inc
inc
and
push
jl
sahf
in
adc
roll
pusha
pusha
into
pop
jg
cmc
leave
loope
pop
lods
mov
in
mov
aam
es
das
pop
in
std
stos
mov
cwtl
in
hlt
repnz
xchg
shlb
push
adc
jb
bound
and
xor
les
hlt
repnz
xchg
shlb
push
adc
jb
bound
and
xor
shlb
repnz
xchg
shlb
and
add
arpl
and
xor
les
lock
adc
and
dec
int
mov
mov
jmp
fstpt
out
mov
jnp
mov
ret
jbe
data16
inc
js
push
push
mov
mov
clc
mov
sub
xchg
enter
sub
push
or
pop
push
push
mov
jle
clc
mov
lcall
or
js
pop
dec
sub
test
cwtl
mov
arpl
pop
jne
fcoml
lret
or
pop
lock
test
mov
pop
es
xor
ss
notl
aaa
imul
call
int3
std
call
push
xor
jecxz
fcmovne
lret
sub
adc
push
mov
mov
mov
into
pop
insl
enter
lods
ss
bound
jge
inc
jecxz
push
js
ja
mov
sahf
lea
popf
xchg
jne
sub
daa
or
dec
stc
inc
ss
pop
pop
movl
and
outsl
jbe
push
out
and
aaa
in
sbb
imulb
int3
clc
mov
cmpsb
fmuls
cmp
sub
js
push
push
icebp
xchg
loope
clc
ret
mov
xor
sbb
jo
jns
push
fnsave
std
mov
jecxz
fldcw
ljmp
or
jns
push
push
ja
insl
frstor
in
mov
call
xchg
jbe
data16
inc
js
push
push
mov
mov
clc
mov
cmpsb
fcoms
sub
push
or
ss
push
mov
jne
ljmp
aas
int
mov
push
sbb
xor
cld
push
sbb
mov
sbb
movsl
xchg
fimull
inc
lock
and
or
fsts
jns
xor
cmp
dec
sub
outsl
mov
mov
xchg
or
inc
out
jecxz
imull
mov
cmp
in
push
fcoml
or
jbe
int
aam
cli
sti
cmovae
arpl
mov
dec
iret
cld
inc
sub
push
es
leave
fimuls
pop
push
std
popf
movsl
inc
pop
mov
sub
fmull
jmp
pop
sbb
call
fistpll
imul
mov
stc
push
and
add
cmp
and
inc
and
jo
mov
jp
sub
mov
sub
xchg
add
push
shll
mov
push
and
inc
enter
xchg
out
jo
dec
sbb
or
les
inc
dec
mov
xchg
or
aam
test
shrl
xchg
fldt
faddp
inc
jbe
dec
add
inc
aam
xchg
mov
cld
lret
aaa
mov
cld
ret
outsl
xchg
xchg
cmpsb
push
aas
jg
je
fmuls
iret
movsl
sub
incb
dec
mov
vmulss
sti
test
xchg
testl
loope
xchg
jge
pushl
daa
gs
xchg
jb
std
iret
shlb
pop
scas
data16
or
sbb
adcb
inc
inc
mov
cli
popf
xlat
pop
xor
push
push
jg
and
imul
jo
add
arpl
ud1
mov
adc
leave
fwait
out
mov
fs
sub
mov
xchg
push
xchg
adc
mov
mov
jmp
std
xor
in
lret
xor
bnd
pop
add
jo
xchg
jp
insl
dec
repz
out
jge
sub
stc
fs
push
fwait
sti
int
and
xor
jecxz
mov
imul
stc
dec
mov
int3
lret
aaa
lret
jp
sbb
xchg
push
aas
int
sahf
push
jl
lods
movsl
sub
ret
int
jge
mov
jg
push
loopne
subb
ret
bnd
test
lret
insb
adc
fmuls
icebp
cmpsb
shl
jo
xor
shll
shl
cmp
xor
inc
sub
inc
mov
jnp
lods
add
inc
push
addr16
popa
sub
push
pop
popl
pusha
dec
and
xchg
xor
jae
fimull
repnz
mov
jp
pop
rcrl
jl
pop
xor
sbb
dec
sub
shr
sahf
cmp
adc
fistps
ljmp
jg
call
pop
add
shrl
aad
push
dec
inc
repnz
xchg
test
loopne
adcb
adc
mov
sub
loop
ds
sar
jbe
sub
stos
sub
jg
nop
sahf
inc
es
push
cmp
in
mov
push
out
cmc
ret
cltd
addr16
ds
or
inc
xor
repz
repz
cmp
xor
adc
fsubrp
iret
dec
ja
stc
int
pop
mov
cltd
adc
sub
sbb
andl
pop
and
jle
push
add
mov
xor
int3
mov
mov
mov
out
cmp
sbb
and
push
push
popa
lret
pop
xor
decl
fsubrs
push
ljmp
leave
cwtl
lods
js
inc
lods
out
xor
in
jne
inc
xlat
mulb
xadd
cld
adc
rol
mov
push
add
pcmpgtb
rorb
inc
lods
jno
pop
cmpsb
cmp
jb
iret
and
sub
sub
inc
cltd
dec
lahf
sub
icebp
mov
lods
movsl
popf
outsb
outsb
jg
cmp
gs
inc
xchg
xor
sub
popa
sub
and
mov
or
loopne
xor
mov
fs
add
sahf
shrl
mov
test
lret
shrb
push
cld
ja
mov
jecxz
shrb
into
xchg
push
mov
stos
imul
fdivs
push
mov
lods
inc
aaa
xchg
add
push
xchg
push
sbb
add
jge
add
fdivp
mov
leave
xor
jle
xor
xchg
lods
push
cwtl
test
jno
testb
hlt
ljmp
ljmp
repz
add
arpl
lods
xchg
jmp
push
sahf
jb
loope
push
test
jp
push
cmp
pop
les
movsl
aaa
mov
pop
ds
mov
outsl
call
pop
mov
push
shll
lock
cmpsl
cmp
mov
lcall
loopne
outsl
push
mov
inc
stc
dec
pushf
jnp
scas
jne
add
test
aam
cld
iret
mov
jle
arpl
stos
sub
out
sbb
ficompl
cltd
leave
sub
xchg
ret
movsl
fimull
ret
xchg
in
mov
rcr
sbb
sub
push
mov
bound
dec
or
les
push
outsb
inc
sbbb
cmpsb
and
add
inc
sahf
iret
dec
and
mov
mov
xor
pop
xor
lods
int3
push
shl
sbb
mov
lods
popa
leave
fs
fs
mov
out
int
xor
push
cli
nop
popf
in
fistps
mov
inc
pop
jg
jle
pop
imul
sbb
mov
sub
nop
inc
inc
loopne
daa
xorl
stos
enter
mov
push
xor
addb
mov
sub
subb
sbb
jnp
shrb
sbb
call
jl
sub
dec
mov
lds
ja
int
cmp
sbb
imul
cmp
and
stos
cltd
stos
jecxz
nop
adc
jns
mov
push
les
mov
sub
repnz
xor
notb
rcl
mov
pusha
shll
xchg
pop
push
test
mov
sbb
adc
inc
and
cmp
cmp
andb
filds
sbb
sahf
mov
dec
pop
aad
std
scas
imul
lret
push
adc
outsl
push
or
cmp
call
out
leave
push
addb
das
insb
or
add
das
divl
mov
jge
sbb
mov
xor
xchg
fcoms
jns
or
cmp
inc
inc
push
sub
repnz
mov
xorb
cmp
stc
adc
and
cwtl
and
jp
scas
mov
xor
test
in
pop
mov
adc
pop
gs
and
ljmp
lcall
repnz
pop
inc
adc
ret
fildll
es
add
xor
sbb
add
push
out
fldl
jg
insl
std
sub
sub
pusha
xor
push
mov
mov
pop
jo
movsl
lcall
or
pop
das
dec
fs
adc
add
mov
test
cmp
sbb
pop
inc
add
push
bound
pop
inc
outsl
lods
loope
out
jo
hlt
outsb
xchg
mov
pop
sbb
mov
push
test
push
cmp
imul
mov
mov
push
std
dec
aad
pop
jg
and
fisubl
and
dec
jmp
pusha
scas
ljmp
lea
not
xor
movsl
jns
mov
cmp
test
pop
jo
scas
pop
mov
fnsave
aam
fidivrl
iret
fdivrs
push
add
mov
hlt
xchg
inc
mov
jno
clc
inc
lret
pop
outsb
sub
xchg
lock
cwtl
and
push
or
addr16
lret
jmp
sti
dec
scas
outsb
mov
mov
imul
aas
mov
pop
idivl
fidivl
push
adc
movsb
les
dec
scas
mov
mov
adc
movsb
rorl
mov
xadd
lea
imul
pop
sbb
adc
cmp
sbb
iret
mov
and
ficoml
push
hlt
test
aas
js
xor
xlat
mov
lods
dec
dec
mov
pop
icebp
ficoms
xor
inc
sbb
loope
outsb
cmp
clc
pop
not
and
cltd
inc
adc
inc
sub
fsubrs
push
sbb
mov
adc
jb
lret
sbb
adc
and
xor
mov
mov
sub
fldenv
lods
enter
aas
sub
lret
adc
int3
test
jge
int
imul
push
and
ret
xchg
fidivl
push
sbb
xchg
or
or
jae
sub
xchg
dec
testl
es
mov
inc
fmul
shr
push
aas
testb
or
mov
movsb
sbb
mov
or
sub
sub
jnp
inc
dec
movsb
mov
dec
or
bndstx
lret
pop
jl
jecxz
cmp
ret
ss
xchg
sarb
pop
add
mov
int
aas
adc
mov
adc
negl
cltd
or
sbb
lods
hlt
ffreep
nop
mov
sbb
dec
aad
adc
lea
aaa
adc
shlb
jo
dec
test
xchg
fwait
mov
push
xchg
loop
cmpsb
push
xor
lock
xor
xor
mov
int
inc
add
jo
popa
mov
arpl
xor
xor
pop
mov
push
mov
mov
into
dec
pop
fstl
les
bound
adc
in
rol
or
mov
cli
mov
push
lcall
movl
dec
enter
movb
jno
inc
dec
sbb
adc
jecxz
rorb
bound
push
das
adc
or
nop
cmp
mov
les
sub
inc
imul
mov
mov
cltd
gs
pop
jge
mov
add
jb
or
jle
add
les
in
es
jl
imul
subb
hlt
fnstenv
dec
movsb
adc
adc
sbbl
scas
dec
mov
clc
and
xor
xor
jle
mov
jae
adc
gs
mov
cli
fs
dec
sbb
mov
inc
mov
test
addr16
shl
cmp
dec
sbb
ss
mov
sbb
adc
xchg
in
adcl
cmp
out
cmp
out
loope
pop
jle
sbb
out
mov
mov
sbb
xchg
test
arpl
arpl
dec
xlat
inc
jg
out
inc
mov
fcoml
dec
pop
lahf
fstl
aad
cmp
js
sub
sub
enter
and
rolb
out
scas
call
jge
icebp
out
lock
pop
push
add
and
test
sbb
inc
pop
inc
rcll
fnstenv
sti
dec
cmp
and
mov
mov
in
xchg
jp
mov
popl
pop
sbb
in
or
mov
inc
in
lret
pop
imul
inc
ja
int
nop
jge
push
adc
xchg
cmp
stos
sub
popa
jecxz
stos
cltd
push
mov
lea
jb
lods
cmp
push
test
mov
les
pop
lea
dec
inc
in
lock
xchg
rcrl
xchg
sbb
dec
loope
mov
cli
sbb
xor
push
cld
cwtl
lcall
mov
mov
call
inc
aad
ret
out
sub
in
ja
fucomip
add
popf
sub
inc
jge
test
cli
cmp
jbe
or
xor
push
mov
jb
or
movsb
mov
outsl
cmp
out
jno
fimuls
jmp
and
and
flds
aaa
xchg
and
pop
aaa
daa
dec
cmp
clc
stos
pop
jo
adc
jg
inc
fildl
imul
sub
push
daa
inc
shl
cmp
sbb
adc
mov
xchg
outsb
dec
ret
and
test
addr16
pop
lret
pop
push
test
shr
push
mov
jle
pop
lods
xor
in
ljmp
or
fldenv
jno
pop
gs
out
mov
mov
rolb
xchg
cmp
enter
rcll
sbb
cmp
xchg
idivl
ss
mov
outsl
cwtl
daa
pop
nop
pop
cmpsb
das
insl
loop
xchg
mov
aam
or
les
nop
in
jl
mov
jge
cld
shrb
jae
and
inc
cmp
mov
push
adc
sbb
pop
push
andb
push
mov
pop
xchg
dec
test
ljmp
inc
sbb
sbb
jnp
dec
cmp
mov
cmpsb
lahf
int3
test
cmp
insl
in
aaa
test
and
push
movsb
pop
test
shlb
les
push
sbb
loop,pt
ss
outsb
aad
sub
int3
jecxz
xor
xchg
ljmp
xor
in
outsb
test
movsb
xchg
insl
shr
push
test
in
xlat
push
les
in
outsl
dec
ret
ja
cltd
out
mov
popl
sub
dec
dec
cs
push
pop
sbb
push
movsl
cld
stos
jmp
repz
inc
js
vpunpcklqdq
scas
cmp
and
test
movsb
cmp
mov
popa
in
and
lock
dec
icebp
inc
nop
out
cmc
or
mov
mov
insb
mov
dec
test
cltd
dec
imul
jl
sbb
jnp
push
sub
cmc
ss
pop
dec
test
int
popa
outsb
outsl
add
jecxz
sub
std
mov
and
push
ja
decb
fbld
sub
mov
out
js
fdivrl
cmp
xchg
dec
out
fs
jae
loopne
xchg
inc
dec
out
inc
mov
push
outsb
xor
mov
push
pushf
out
inc
mov
lahf
jb
bound
sbb
pop
lcall
cld
or
xor
pop
cmp
hlt
xchg
and
adc
mov
push
cmp
jo
dec
rcll
and
cmp
add
push
ds
add
cmpsl
cld
adc
dec
dec
popf
filds
shlb
jnp
push
adc
and
xor
add
xchg
imul
and
shrb
fsubrl
sub
rcl
test
popa
mov
dec
mov
notb
xchg
aas
and
xlat
xlat
ret
push
dec
pushf
inc
add
or
xchg
in
lahf
jg
and
jnp
xor
cltd
jle
outsb
dec
das
mov
stc
out
adc
stos
cld
jae
incl
lods
int3
das
xor
cmp
mov
mov
dec
mov
sbb
xchg
inc
mov
enter
cmpsl
mov
popf
test
out
jmp
sbb
jle
xchg
sahf
or
and
or
jae
aam
outsb
mov
push
lret
push
mov
arpl
dec
cmp
xor
jp
and
cmp
movsl
dec
nop
mov
sub
sbb
mov
cmpsl
cmpsl
mov
inc
mov
mov
loope
add
stc
nop
push
sarb
test
imulb
outsb
scas
aam
lahf
ret
pushf
lea
stc
pavgb
push
shll
rcll
and
jmp
adc
dec
popa
scas
idiv
mov
je
dec
cmp
loopne
xlat
xor
scas
cmp
push
dec
cmp
fadd
mov
popa
iret
out
adc
pop
adc
icebp
push
ljmp
insl
test
adc
dec
hlt
add
xor
sbb
addr16
lock
cmp
hlt
lods
ja
ss
fld
sbb
call
in
xorl
out
mov
mov
jb
jns
sub
js
mov
cmp
stos
inc
push
and
push
les
rolb
push
out
lahf
mov
xchg
loop
sub
push
stos
sbb
push
in
stos
fsts
mov
dec
mov
mov
and
out
daa
sub
js
sub
dec
inc
dec
rorl
mov
fcoml
pop
xchg
imul
mov
loope
ds
sahf
jns
hlt
cmp
js
push
iret
js
popa
cmp
inc
cmpsl
jne
add
add
xchg
push
test
cwtl
lret
stc
pop
hlt
sbb
std
jmp
xorb
mov
inc
insb
adc
enter
loop
in
add
adc
lret
adc
cmp
cltd
stos
xchg
sub
dec
daa
mov
xchg
pusha
or
test
cld
jne
mov
out
rcll
ret
push
pusha
add
xor
push
dec
add
jnp
jae
out
push
or
mov
aaa
mov
mov
subb
jg
repz
sbb
jb
mov
aad
push
or
or
rorb
mov
push
inc
xor
push
scas
pop
and
scas
xor
sub
inc
test
fsubrl
dec
xchg
pop
adc
add
cmp
test
stc
inc
out
add
lods
out
cltd
adc
in
jae
sbbb
inc
add
imul
cmpsl
jmp
xchg
jbe
dec
mov
mov
jmp
scas
popa
cmc
xchg
out
jbe
push
add
push
inc
aam
std
sbb
testl
rcr
mov
xchg
cmp
scas
jno
push
cmp
ret
fwait
sbb
push
or
push
jge
andb
hlt
in
fcmovnu
test
sbb
adc
je
mov
lods
ror
or
loope
andl
lds
stos
mov
js
inc
scas
push
in
adc
lea
insl
stos
jecxz
adc
jecxz
bound
into
xchg
and
jae
sbb
dec
pop
movsl
ret
lods
imul
flds
test
inc
aam
cmp
fwait
loope
lcall
aas
imull
scas
pop
test
fimuls
dec
fcoms
mov
rorl
mov
out
jecxz
jge
add
xchg
popf
in
ret
pop
sub
pop
mov
inc
daa
jae
outsl
bound
arpl
pop
cld
insl
icebp
xor
xor
add
jg
sub
sub
mov
cmpsb
pop
sbb
lcall
inc
dec
cmpsb
or
add
sbb
mov
or
sbb
je
mov
jbe
leave
mov
popf
stc
out
in
inc
gs
push
repnz
cwtl
lods
jb
adc
sbb
cmpsb
scas
shlb
and
add
mov
enter
fcmove
in
fnsave
loop
adcl
push
out
std
xor
movsl
lcall
xlat
dec
xchg
loop
testl
es
ja
jmp
gs
xor
or
sbb
loopne
sahf
jns
xchg
xchg
leave
mov
clc
xor
adcb
fwait
push
arpl
cmpsb
sub
mov
push
nop
lock
mov
outsl
stos
imul
push
loopne
sahf
insl
jge
mov
aaa
test
xchg
add
push
mov
adc
mov
test
and
jg
sub
mov
jno
cld
std
into
cmc
xchg
mov
xlat
loop
sbb
aaa
pop
and
push
sbb
imul
dec
adc
int
sbb
xor
insl
lcall
into
mov
ss
add
xchg
adc
int
ds
aad
stc
lahf
mov
push
xor
sbbb
push
inc
icebp
das
std
in
dec
jp
jl
sub
test
pusha
cld
mov
push
fistps
mov
mov
outsb
jle
sti
add
lret
and
jmp
inc
movsl
xor
and
scas
adc
andb
inc
inc
lea
or
cmp
inc
aad
aad
cmpsl
call
je
insb
test
repz
addr16
ljmp
mov
sarb
mov
notl
pushf
push
mov
ret
std
repnz
test
ret
pop
add
fcomi
dec
mov
adc
jl
xor
test
fcmovnu
jbe
call
aas
cwtl
imul
scas
inc
sar
and
arpl
or
or
pushf
mov
jge
pop
bound
lock
std
fstpt
push
jbe
adc
pushf
pop
sub
outsb
subb
inc
arpl
sub
test
cmp
cmp
or
or
shll
cld
xchg
mov
jo
mov
xor
ljmp
fcmovb
fdiv
xor
test
sbb
lcall
cmp
idivb
shr
jo
js
nop
jbe
fwait
aad
mov
push
or
aaa
cmp
outsl
cmc
jne
loopne
neg
rorb
jne
insl
ds
adc
inc
push
xlat
clc
dec
sub
and
ja
fistl
pop
sbb
push
cmpsl
xchg
aad
push
sti
pop
push
sbb
mov
mov
jecxz
xor
sub
mov
mov
adc
and
jns
popa
cmpsb
mov
clc
scas
xchg
push
std
fnstenv
pop
sbb
andb
and
insb
add
mov
call
xchg
jbe
data16
inc
js
push
push
mov
mov
clc
mov
cmpsb
fcoms
sub
push
or
ss
push
mov
scas
mov
js
call
xchg
scas
sub
push
or
ss
push
mov
mov
clc
mov
cmpsb
fcoms
enter
sub
mov
or
or
cmp
lcall
rorl
lods
lret
jmp
xchg
inc
or
inc
sub
ss
test
lcall
fidivl
ljmp
push
sub
inc
dec
and
push
push
lcall
scas
lret
mov
pushf
sbb
inc
dec
das
dec
xor
cmp
add
mov
ret
mov
adc
imul
push
sub
lods
xchg
jmp
jne
inc
fists
fcmovb
lret
imul
cwtl
les
aad
or
out
gs
shl
jecxz
cmp
mov
movsb
jbe
data16
mov
stc
push
push
lcall
xchg
mov
xor
add
xchg
xchg
or
dec
mov
leave
jae
sbb
sub
and
sahf
popa
out
sbb
mov
test
andl
push
dec
icebp
cmp
add
cli
pop
push
dec
or
test
sbb
mov
loope
idivb
mov
cmpsb
cli
xchg
ljmp
dec
sub
cs
jp,pt
push
push
jmp
mov
xchg
cli
outsb
jecxz
sbb
dec
push
outsl
and
push
or
jns
push
lahf
decb
mov
loop
mov
add
inc
xor
inc
lods
inc
das
adc
jb
testb
lahf
test
cmpsb
cli
xchg
ljmp
push
sub
ss
es
push
lcall
fidivl
ljmp
push
sub
ss
es
push
lcall
les
cmp
jne
test
dec
inc
adc
jnp
inc
pop
fcmovnb
insb
pop
sub
add
cmpsb
rcl
insb
push
sub
adc
repnz
push
stc
mov
rcrl
or
mov
enter
xchg
jae
inc
out
aas
icebp
pop
in
dec
aad
nop
fildl
push
popw
cli
fistpl
aaa
ss
test
pop
rcll
shr
fst
and
cmp
dec
xchg
sti
hlt
mov
pop
xchg
test
lds
adc
pop
sbbl
adc
adc
and
loope
fistpl
jp
out
cmpsb
mov
insb
push
ljmp
cmc
ret
xor
iret
and
fmull
int
jb
xor
mov
push
shrl
pushf
stos
cmpsl
xchg
xor
sub
dec
xor
dec
mov
jg
out
mov
stc
fnstsw
into
mov
sbb
hlt
xchg
mov
dec
je
xchg
sbb
inc
leave
jnp
imul
mov
cld
add
fcmovnb
mov
imul
iret
int
sub
add
in
scas
ds
fldcw
inc
ljmp
mov
movsl
or
ror
fwait
dec
out
call
mov
call
bound
sub
xchg
sbb
sbb
mov
mov
xor
loopne
push
push
sub
lahf
cltd
sbb
adc
enter
cld
fadds
add
dec
insl
push
addr16
repz
mov
mov
lods
cmc
fstps
and
loop
and
add
test
sbb
mov
push
or
in
icebp
data16
in
adc
in
mov
mov
ret
fcoml
divb
xlat
adc
jge
cmpsl
fidivrs
sub
mov
add
cmp
lahf
xor
shr
sub
cmp
popf
adc
dec
xchg
gs
je
ss
aaa
in
cmc
xchg
test
scas
out
dec
daa
aam
dec
cmp
hlt
push
cmp
loop
rcrl
cmp
out
ljmp
sub
inc
mov
mov
jmp
mov
push
das
das
test
sub
push
jno
lahf
negl
mov
clc
jg
add
pop
loopne
mov
pop
ja
mov
imul
sbb
jnp
cmp
adc
xor
frstor
lret
enter
inc
sub
std
inc
pop
fs
popf
push
xchg
adc
out
dec
push
or
int3
push
pop
pop
mov
in
xchg
mov
lret
das
mov
xchg
je
sub
pop
ljmp
out
dec
push
lahf
xchg
mov
pop
and
xchg
mov
stos
xchg
rolb
repnz
jl
push
out
shlb
mov
add
orl
mov
call
jbe
sbb
sbb
adc
mov
xor
mov
pop
outsb
push
icebp
push
cmp
push
xchg
cli
xor
jnp
stos
inc
mov
push
fcomps
sub
cmc
add
cmovg
push
inc
enter
pop
or
js
add
xor
in
mov
ds
push
pop
je
xchg
fbstp
inc
jecxz
aam
stos
and
popa
popa
test
cmpsb
daa
adc
pop
lcall
loop
fiaddl
pop
gs
xor
je
lret
stc
dec
in
xlat
mov
fwait
outsb
push
aam
add
jno
jb
push
mov
adc
sbb
repnz
mov
push
or
sahf
jno
lret
jmp
pop
test
mov
loope,pt
xchg
scas
pop
mov
and
inc
cmp
inc
sub
or
jmp
repnz
ss
cli
outsl
mov
aaa
mov
in
in
mov
or
and
cld
add
pop
or
xchg
jmp
popa
inc
loope
aam
loope
in
add
mov
push
rcl
mov
cmpsl
push
in
and
add
cmc
out
jg
mov
decl
fdivrl
cltd
adc
jb
aam
mov
cmpsb
or
jbe
fisttps
cmp
mov
mov
inc
push
dec
ds
test
jno
inc
pop
pop
fnsave
cmp
jb
leave
out
xchg
push
pop
xchg
xlat
mov
fisttps
push
cwtl
jbe
xor
ret
test
pop
pop
cmp
pop
cmp
test
adc
sub
sbbb
xor
xor
pop
inc
push
rolb
add
mov
out
pusha
pop
imul
leave
pop
cmp
in
fs
fcom
push
gs
insb
clc
cmpsb
pop
push
shlb
mov
cmc
iret
mov
div
and
repz
xor
cmp
adc
xor
imul
cmp
jl
pop
insb
ss
and
and
or
or
mov
dec
out
dec
test
cltd
ret
ds
sbb
pop
nop
push
and
sarl
sbb
add
adc
sahf
imul
and
jle,pt
inc
ret
inc
int3
push
sahf
scas
dec
imul
xor
addr16
enter
scas
inc
and
loop
cmpsl
push
xor
ror
lods
aas
imul
clc
cmp
mov
mov
jmp
bound
outsl
fldl
push
sbb
hlt
in
filds
push
scas
jle
jnp
push
pop
adc
push
out
shlb
movsl
fsubr
jmp
lahf
into
push
xchg
push
push
dec
dec
and
sub
fsin
and
ret
ret
mov
add
orb
daa
or
sahf
inc
adc
pop
mov
in
js
stos
and
int
push
gs
cmp
out
dec
pop
repz
mov
jmp
or
lret
mov
and
or
push
pop
sub
stos
pop
daa
dec
xorl
dec
inc
lea
and
sub
arpl
ss
repz
lret
adc
shlb
daa
sub
push
rcrl
sub
mov
call
dec
sub
xor
enter
sti
out
jge
mov
xor
sbb
out
mov
imull
mov
dec
jnp
mov
ljmp
daa
call
mov
out
iret
or
scas
mov
adc
mov
or
sub
sub
sub
sar
fstl
imul
test
mov
cmp
add
push
jnp
mov
ds
sub
fwait
aaa
and
outsb
xchg
pop
jp
cmpsb
push
es
repz
lods
int3
dec
adc
icebp
mov
sti
mov
shlb
or
in
pop
lods
xchg
push
icebp
add
or
nop
ljmp
or
imul
stos
cmp
sub
and
jge
fisubrl
shlb
ds
cli
mov
inc
out
popa
pop
jp
lcall
push
inc
pop
sub
jg
lods
cld
adc
aas
les
cwtl
and
cs
jecxz
jp
fisubs
daa
cmp
xchg
push
cmpsl
push
jl
mov
or
sbbb
or
arpl
fildl
stos
pop
shrl
ror
in
dec
push
imul
mov
rcr
aad
mov
divb
sti
and
add
inc
iret
subl
int
nop
icebp
and
and
mov
cmpsb
jecxz
fldcw
adc
in
sbb
mov
icebp
iret
sbb
mov
inc
jecxz
call
add
mov
gs
sbb
mov
pop
call
mov
es
sbb
test
lods
imul
inc
lahf
pop
jle
mov
push
push
add
rclb
sub
mov
add
push
cmova
pop
pop
xor
data16
jge
lods
in
and
cld
mov
scas
les
pop
cltd
push
and
inc
xchg
add
jnp
cmpsb
jnp
xor
add
sbb
jno
adc
push
loopne
in
fdivrs
xchg
adc
ficoms
adc
jo
out
dec
inc
mov
jg
imul
out
pop
ja
ja
sarb
out
icebp
fcoml
push
aaa
inc
popf
push
dec
mov
inc
inc
mov
sub
mov
shr
jecxz
test
push
fists
cmpsb
xchg
loope
inc
mov
sub
pop
mov
jl
int3
fs
lock
bound
or
push
jne
inc
sti
ret
das
sub
xchg
das
mov
mov
jp
add
pop
shll
sbb
testb
jge
add
xchg
loop
faddl
repz
jo
imul
push
out
mov
dec
adc
adc
mov
lods
nop
stos
inc
fdivs
ror
fisubs
outsb
loopne
rorb
sub
add
xchg
push
fwait
mov
cltd
jge
pop
adc
and
insl
jge
mov
int3
in
add
mov
ret
hlt
ficoml
add
fucomp
cmpsb
mov
ds
push
mov
sub
stos
out
pop
loop
ret
gs
push
subb
cmp
mov
test
ret
xor
jo
lcall
sbb
or
and
jge
jl
pop
xchg
adc
and
aam
cmp
dec
mov
in
aad
sub
jne
pop
push
mov
sbb
pop
mov
xchg
out
repz
imul
clc
pop
jns
mov
and
imulb
sahf
xchg
mov
mov
ljmp
rcr
mov
shll
or
std
es
jns
sbb
ror
or
out
push
xor
ljmp
insl
push
pop
popa
je
push
leave
sub
insb
fists
or
xor
scas
xchg
xchg
ss
fsubrs
pushf
enter
or
rclb
push
xchg
jmp
add
push
lods
mov
fcompl
addr16
ret
dec
shll
int
inc
and
push
dec
inc
out
shlb
jge
jle
mov
mov
mov
orb
stos
enter
or
cmp
lock
daa
push
jns
call
adc
or
pop
insl
stos
shr
arpl
mov
xor
aad
aad
shlb
mov
jp
cmp
das
mov
lock
loopne
cmpsl
test
test
jae
mov
repz
cmp
pop
xchg
aam
pop
in
and
or
xchg
gs
ljmp
cmp
xchg
sbb
adc
dec
fsubp
in
xor
sarl
xchg
xchg
aaa
sub
aas
push
test
cmc
nop
clc
mov
outsb
decb
out
mov
push
shr
imul
imul
sub
imul
test
mov
add
inc
jns
shl
jp
stc
push
lcall
xorb
jle,pn
xor
or
cmp
popf
aad
xchg
sub
xor
popf
data16
in
sar
jp
out
popf
aam
sub
loop
inc
outsl
test
aas
xchg
mov
cmp
push
popa
mov
bound
mov
mov
ret
leave
cli
sub
cmp
data16
insb
adc
call
int
int
add
aam
jmp
ljmp
scas
cmp
push
adc
jae
jns
pop
leave
or
cmp
sub
mov
pop
pop
sbb
out
xor
stc
add
out
movsb
out
and
ffreep
xchg
cwtl
rcrb
fcmovnu
cmp
addr16
in
test
cmc
fbstp
clc
cmp
sub
rorw
fsubrl
icebp
or
sti
ljmp
push
pop
or
jns
mov
es
movsb
sbb
dec
xchg
or
pop
pop
sub
outsb
ret
add
bnd
and
or
jge
je
sbb
sbb
sub
cmpl
push
lods
out
je
mov
mov
jne
xchg
jecxz
adc
sahf
or
adc
fwait
jae
push
xor
dec
loope
xchg
jo
mov
dec
cld
mov
push
in
cmpsb
xor
mov
imul
mov
pop
mov
sbb
dec
shrb
push
push
aaa
and
or
adc
nop
inc
push
add
add
lock
lods
or
fwait
jmp
cli
xor
lds
jmp
les
cmp
sub
xor
or
dec
sub
push
push
xor
cwtl
inc
xchg
adc
mov
cmpsb
pop
mov
jno
fistps
dec
xchg
inc
jg
sahf
and
or
dec
repnz
push
or
mov
xchg
js
enter
mov
add
pop
jo
out
pop
inc
sbb
sbb
mov
sbb
and
push
adc
les
xor
ja
pop
xchg
sbb
nop
push
stos
dec
std
rcl
xor
pushf
mov
mov
sub
push
rorl
pushf
sti
push
jae
push
fidivrl
addr16
lcall
adc
repz
out
lea
fcompl
test
js
add
aas
inc
sbb
mov
ljmp
push
fisubl
popf
jne
push
xor
int3
popa
movsb
out
jo
jl
int
push
mov
sbb
and
xchg
in
jl
or
nop
adc
daa
pop
mov
xor
cld
in
sahf
pcmpgtw
sub
ret
in
int
xlat
popa
jg
sbb
loop
jle
inc
push
mov
xor
cmp
sbb
or
popf
test
push
pop
pop
lods
xchg
pop
cmc
das
sub
dec
ds
push
imul
cmpb
push
adc
xor
push
and
out
add
push
cltd
adc
mov
xor
test
mov
sbb
push
mov
arpl
sbb
xorl
cwtl
andl
mov
mov
xor
rcrl
push
mov
add
or
and
push
leave
xchg
pop
lds
mov
loopne
es
in
sub
popl
cmp
pusha
cmp
les
cltd
mov
pop
fcomps
lret
sub
dec
push
mov
sub
ret
mov
pushf
insl
cwtl
dec
or
mov
int3
repnz
sahf
sub
out
inc
loope
bound
xor
imul
push
out
sub
int
ja
stos
and
mov
es
mov
adc
xchg
les
jmp
leave
hlt
add
ficomps
stc
sbb
stos
or
xor
xchg
xchg
ficoms
mov
sbb
xchg
inc
sahf
out
fs
sub
mov
pop
mov
mov
mov
loop
cmpsl
neg
jno
cs
push
dec
adc
and
inc
cld
pop
pop
lea
stc
sbb
sti
shrl
insl
sub
jp
test
das
mov
sub
and
sahf
jecxz
jecxz
mov
in
inc
aam
sbb
lods
inc
xchg
popa
lcall
jns
lret
fs
adc
andl
xchg
or
dec
mov
insl
xor
jnp
popa
cli
add
pop
je
sub
sub
addr16
inc
lcall
push
sarl
int
imul
cli
out
cmpsb
xchg
stc
inc
or
shlb
ficoms
mov
clc
cld
jl
dec
lret
aam
jecxz
addr16
mov
mov
push
or
popa
cmp
jb
inc
inc
mov
scas
xor
stc
incb
lahf
je
out
xor
push
push
outsb
cmp
clc
mov
or
or
add
and
cmp
jecxz
repz
mov
arpl
cmc
cmp
cmp
pop
add
rcrl
adc
lcall
test
inc
xor
repz
les
and
movsb
dec
andl
sub
js
in
vpmacssdqh
scas
sbb
inc
out
xchg
add
popf
in
sub
int3
fs
xchg
je
les
dec
out
outsb
mov
repz
hlt
sub
dec
addr16
ljmp
call
or
add
adc
pushf
and
push
test
or
pop
out
test
push
or
cmp
dec
iret
mov
sub
pushf
aaa
jno
push
pop
cmpsl
cli
lahf
jg
xor
cmp
sbb
cli
xor
sahf
das
sbb
loope
sbb
sub
inc
push
pop
test
cmp
mov
xchg
sub
stos
mov
adc
pop
mov
jl
pop
roll
aas
sbb
cli
adc
mov
adc
xchg
mov
mov
sbb
lret
add
into
jb
pushw
sbb
and
jg
pop
gs
sbb
dec
cmc
mov
scas
ret
adc
andl
or
fisttpl
xlat
mov
push
stos
push
xor
rorb
jb
daa
mov
pop
jg
mov
icebp
stos
and
jle
mov
add
mov
push
dec
and
cs
sarb
push
leave
or
shrl
ja
jle
add
mov
int3
je
testb
lcall
shrl
pop
jo
int3
xlat
mov
cmp
xchg
mov
jno
icebp
stos
sub
dec
fwait
push
popa
js
out
push
xchg
sbb
aaa
dec
jno
sub
dec
sti
je
out
push
lcall
out
movsl
dec
test
mov
pop
lds
inc
mov
or
data16
xorl
lods
ret
jg
and
cmp
cmpsb
and
cld
mov
mov
or
xor
or
lret
add
arpl
xchg
lret
sbb
sbb
add
inc
sub
xchg
mov
shrb
and
ficomps
pushf
fdivl
jae
imul
push
xor
add
adc
pop
pop
fdivrp
adc
adc
sub
add
gs
fisttps
push
out
pop
gs
cmp
xchg
mov
pop
or
pop
test
push
pop
mov
xor
incl
or
sub
xor
push
rol
lock
dec
mov
cltd
into
cwtl
jp
mov
popl
push
pop
add
test
imul
pop
dec
cmpsl
insb
negl
xchg
mov
lcall
adc
int
push
mov
inc
dec
pop
and
inc
jmp
mov
add
sbb
ja
jl
jno
xor
jns
mov
mov
repz
fdivp
sbb
outsb
mov
adc
clc
xchg
ljmp
sbb
cwtl
dec
jmp
sbb
jmp
aaa
sbb
sub
and
mov
hlt
pop
clc
into
loope
dec
jno
vcvtss2sd
inc
arpl
push
push
adc
rorl
call
mov
cmp
mov
or
mov
pop
mov
push
sub
inc
cmp
ja
into
xchg
mov
add
aaa
das
push
pop
jl
cs
cmp
pop
scas
jo
imul
inc
pop
inc
pop
rorl
jle
or
jmp
ds
inc
xor
sarl
insl
mov
lock
mov
nop
or
movsl
mov
stos
hlt
or
mov
scas
in
dec
orl
ljmp
xor
loop
sti
stos
fnstsw
movl
lods
and
outsb
rcrb
aad
mov
push
ror
mov
adc
mov
cmp
mov
popa
add
call
int
or
mov
pop
out
arpl
xor
xchg
and
push
das
jo
or
or
and
mov
lds
jg
xchg
and
mov
cmp
mov
mov
push
dec
icebp
adc
sub
ja
and
ljmp
push
cmpsb
ss
ret
lds
loopne
rorl
rcrb
push
xchg
push
push
call
jmp
sbb
adc
lock
test
mov
cmp
sahf
dec
fidivl
jae
and
es
jl
or
jbe
hlt
insl
sbb
mov
mov
jl
andb
test
mov
int
aam
push
jb
ss
ljmp
or
cmp
sbb
sti
sbb
sub
data16
or
fnstcw
adc
mov
sbb
inc
lds
mov
cmc
shlb
add
xchg
dec
fstpl
push
jo
dec
sbb
scas
test
dec
pop
fsubr
in
push
shlb
xadd
ja
stos
ucomiss
adc
std
cmp
popf
dec
push
movsb
icebp
or
pop
stos
int
popl
imul
push
xchg
add
xor
cmp
shrb
testl
and
sub
sbb
jbe
mov
in
mov
ljmp
aas
mov
or
push
sbb
cs
sub
sub
cmp
mov
jb
out
stos
fidivl
ljmp
push
sub
ss
es
push
lcall
fidivl
ljmp
push
sub
ss
es
push
lcall
fidivl
ljmp
push
sub
ss
es
push
lcall
fidivl
push
in
cmc
int3
nop
push
sub
sub
imul
add
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
fldt
jp
dec
call
pop
cwtl
sub
cli
js
push
mov
mov
dec
call
cmp
ljmp
pop
or
pusha
push
jp
dec
xor
sub
cmp
ljmp
jae
jp
insb
in
jmp
clc
and
aas
bound
jnp
daa
add
mov
cmp
sub
xor
xor
js
insl
fbstp
add
add
out
push
jae
mov
lret
es
ja
and
pop
push
and
mov
push
mov
push
mov
add
mov
or
inc
pusha
test
pop
adc
xchg
cmp
stos
or
sub
fcomps
jne
mov
and
js
lret
mov
xor
or
daa
out
push
idiv
pop
push
sbb
popa
repnz
add
test
xchg
stos
pop
jmp
subl
clc
dec
call
cmp
ljmp
push
stos
add
mov
mov
pop
testl
dec
pop
xchg
sbb
sbb
jmp
dec
aam
shrd
mov
mov
inc
in
jbe
arpl
jle
mov
adc
push
fsubrl
mov
movsb
xor
add
cmp
ljmp
sbb
sub
clc
dec
call
cmp
ljmp
sbb
sub
cmp
pusha
aad
test
pop
xor
mov
mov
loope
mov
mov
cmpl
test
rolb
imul
test
adc
aad
out
fstp
push
sbb
or
push
inc
cmp
jle
push
fwait
mov
fwait
ja
test
xor
out
dec
loope
in
int3
push
in
sub
sti
and
xchg
ljmp
cmpl
pushf
or
es
sbb
push
ret
repnz
fdivl
lock
cld
cmc
or
sti
push
sbb
hlt
mov
push
loope
jnp
ss
into
bound
fmuls
scas
dec
sbb
xor
das
add
imul
sbb
push
lret
jae
or
dec
mov
jge
int3
in
imul
jecxz
or
sub
sub
aaa
sbb
xor
adc
fwait
dec
scas
loopne
inc
ss
and
push
mov
mov
mov
mov
cmp
push
test
aaa
data16
inc
xchg
xlat
sub
std
add
sarb
rcl
mov
inc
pop
repnz
fnsave
sbb
dec
dec
mov
adc
fisubl
sti
sbb
jbe
out
ss
aad
push
mulb
rclb
pop
adc
xchg
or
sbb
pop
mov
add
push
pop
sub
sub
ds
jmp
nop
xor
xchg
rcl
das
jo
dec
enter
fs
push
sbb
stc
sbb
cltd
js
and
pop
adc
jne
fsubs
nop
sbb
xchg
mov
mov
fistpll
jb
sbb
mov
add
mov
ret
insl
and
clc
fmuls
insl
add
xchg
cmp
lahf
ss
and
xchg
dec
inc
mov
push
pop
adc
sub
pop
insb
aaa
loope
jecxz
dec
loop
fisttpl
push
xchg
jno
mul
bound
daa
movsl
sbb
jb
mov
cmc
cmp
and
test
sub
insl
lods
mov
xor
mov
mov
hlt
mov
or
mov
xlat
cld
ljmp
imul
mov
out
push
fildll
fwait
mov
es
fnsave
aaa
aas
add
pop
loope
inc
cmpsb
add
cltd
add
movsl
xor
scas
mov
fisubrl
sub
xor
sub
shl
xor
mov
aam
xchg
xlat
stos
adc
cmp
xor
mov
dec
cltd
pop
mov
pop
push
call
push
cmp
jno
cmp
xor
sub
cmp
into
mov
pop
icebp
push
and
push
add
xchg
sub
mov
sub
movl
stos
pop
sarl
pop
push
pop
aaa
stc
mov
mov
jno
jno
cmpsl
dec
inc
mov
or
pusha
mov
cwtl
xchg
and
test
lods
adc
sahf
sub
jb
xchg
xchg
je
scas
pusha
test
mov
or
das
ss
xchg
loop
xchg
ret
insl
scas
call
addr16
push
mov
popa
daa
jg
xorb
add
push
mov
test
lret
sbb
sub
push
daa
inc
call
jb
cmpsl
daa
jns
mov
movsb
mov
insl
movsl
scas
iret
insl
popf
jnp
lahf
lret
punpckldq
int
enter
cmc
xchg
orb
popf
mov
adc
push
int
mov
jmp
xchg
mov
sub
lock
jns
sbb
cmpsl
cmp
add
pop
xlat
sbb
jmp
inc
cld
sbb
movb
scas
push
mov
xchg
lods
dec
pop
lea
cmp
ret
bnd
add
ljmp
addr16
scas
out
mov
inc
pusha
test
or
mov
adc
push
mov
lret
in
cwtl
insl
insl
xchg
jno
jo
movsl
or
mov
rcl
shl
mov
test
mov
push
xor
in
mov
std
je
dec
inc
mov
or
xchg
sbb
les
xchg
adcl
dec
in
nop
in
xor
xor
or
inc
adc
lods
in
mov
not
std
mov
pop
jg
out
cs
and
mov
test
mov
sbb
call
add
mov
push
cmc
ret
mov
xor
in
add
inc
fdivrl
add
fcompl
xchg
into
dec
push
fimull
xor
add
lea
xor
gs
dec
imul
fmulp
push
dec
mov
adc
out
push
in
or
cmp
xchg
jmp
push
adc
xlat
ret
xchg
pop
push
mov
pop
loop
pop
add
add
sbb
xchg
arpl
test
jg
test
sbb
add
push
pop
testl
pop
dec
cmpsb
lcall
dec
and
mov
mov
or
mov
dec
dec
mov
int3
and
xlat
je
mov
cltd
mov
psubsw
call
ljmp
daa
push
nop
pushf
test
insl
xor
jg
sub
imul
and
xor
popa
popa
cld
dec
ret
loopne
dec
adcb
in
jge
dec
mov
dec
jno
jae
jbe
clc
push
xchg
sbb
sbb
adc
inc
clc
mov
ret
pop
adc
add
shlb
in
xchg
pmaxub
adc
sarl
inc
aad
pop
sub
cmp
jbe
shlb
ss
dec
popa
out
and
cmpsb
icebp
jbe
mov
std
sbb
daa
jo
xor
adc
outsb
cmc
std
jns
xor
pop
adc
cli
and
jg
imul
adc
addl
gs
push
push
adc
jmp
pop
pop
pop
int
or
mov
push
cli
bnd
and
mov
sbb
jl
sti
cmp
fucomi
dec
mov
jne
xor
xor
and
mov
ret
loopne
ret
jne
jle
jnp
repnz
pop
pop
test
lea
jl
pop
stc
sarl
adcb
xchg
mov
inc
mov
mov
fmul
mov
icebp
and
inc
mov
sbb
in
sub
sbb
jns
inc
lahf
stc
popf
popa
data16
xchg
xor
dec
icebp
push
xor
scas
test
push
shlb
fbld
sbb
cmpsb
sub
test
cmp
sub
dec
cwtl
pop
sahf
les
xor
mov
push
jmp
pop
out
mov
mov
adc
and
je
push
adc
mov
adc
insb
inc
notl
push
shlb
int3
pop
sti
dec
ds
ds
fnstenv
push
sub
jecxz
adc
repz
dec
mov
addr16
add
sbb
in
add
in
pop
in
aam
cli
icebp
dec
int3
test
je
lahf
mov
dec
hlt
xchg
mov
das
shll
movsb
rcr
or
orb
and
xchg
xchg
cmp
aad
mov
push
sbb
sub
mov
ret
xor
or
or
outsl
inc
pop
scas
jnp
jl
xor
jo
cmp
fwait
test
or
pop
xchg
pop
insl
push
fisttps
mov
mov
pop
fs
pushf
popf
inc
jge
mov
ljmp
mov
sub
push
pop
rcrl
or
dec
data16
aam
aad
or
cmp
roll
jl
adc
cltd
clc
cmp
into
adc
jge
lods
pop
jge
insb
cmp
mov
adc
xchg
jle
cmp
js
movsb
mov
mov
inc
jo
lods
lea
adc
stc
in
testb
cmp
gs
imul
pop
add
testl
out
cmc
adc
sbb
push
mov
adc
push
aam
sbb
mov
xchg
arpl
add
popf
int
jb
stos
pop
test
aad
aad
inc
test
or
mov
arpl
or
nop
addr16
mov
je
ret
fisttpl
mov
fstpt
out
sbb
imul
sub
insb
adc
sbb
icebp
mul
loop
or
cmp
cmp
jmp
mov
jge
aaa
in
mov
jecxz
jo
idivb
popa
adc
push
daa
add
jb
jl
gs
sbb
lret
test
jnp
adc
out
jno
pop
pop
push
cmp
lock
scas
lea
cmp
adc
test
scas
pop
adc
testl
call
cmp
xor
movsl
int3
out
cltd
xchg
jl
adc
test
stc
push
xor
add
sub
push
jp
into
mov
jecxz
lret
lods
sub
insl
fs
inc
call
clc
js
inc
clc
adcl
cltd
loop
cmp
and
mov
mov
push
lret
jg
test
push
test
lods
into
imul
sbb
in
dec
call
inc
repz
int3
mov
inc
fdivp
outsl
sbb
je
cmpsl
inc
int
pop
sub
test
das
mov
sti
adc
test
ja
rorb
pop
inc
add
cltd
clc
mov
mov
push
push
leave
inc
in
imul
push
xchg
cmc
adc
pop
imull
mov
sub
adc
faddl
mov
loope
adcl
fwait
sbb
call
aam
add
out
lcall
mov
in
sub
movsl
lea
push
es
mov
orb
test
lret
lds
fs
dec
cmp
imul
xchg
and
adc
aam
mov
mov
shrb
lock
fisttpll
insb
jae
data16
orl
push
shll
repz
shrb
les
push
dec
leave
sahf
jg
fldt
cmc
gs
gs
pushl
movsb
jmp
test
lret
cwtl
fmuls
mov
mov
dec
xchg
inc
or
push
addb
adcl
into
test
insb
sbb
sub
out
into
ja
jge
jae
mov
jl
mov
loop
adc
test
subl
sub
sub
pop
rep
mov
jne
cmpsb
mov
jae
decl
pop
mov
jmp
js
inc
sbb
sbb
outsb
test
inc
xchg
pop
aas
xor
xlat
sahf
adc
mov
xlat
adc
stos
push
negb
imul
sbb
xchg
sub
xlat
popf
cld
jmp
pusha
xor
fucomi
sbb
clc
mov
add
cmp
jno
mov
sbb
scas
jne
pop
movb
fucom
dec
aam
and
xlat
test
pop
emms
xor
sub
in
orl
adc
xor
sahf
pop
lahf
insl
adc
jmp
mov
and
mov
leave
add
xor
lds
sbb
les
roll
sbb
lcall
push
cli
push
test
xor
xor
js
sti
iret
sub
lahf
or
test
adc
lea
or
fisubrl
jb
dec
mov
inc
idivl
rorl
imull
fidivl
mov
xchg
inc
aam
mov
rorb
insl
scas
sub
pop
add
lods
dec
subl
pop
or
xchg
leave
psllq
and
mov
and
add
mov
add
pop
jne
repz
mov
mov
into
push
sub
sbb
xchg
lods
adc
hlt
mov
jne
sub
xchg
fdivs
aas
push
stc
cmp
cmp
mov
dec
xchg
xchg
aam
mov
or
xor
sbb
stc
mov
dec
ss
or
jns
mov
inc
outsl
rorb
cwtl
repnz
and
mov
push
mov
xchg
mov
mov
nop
mov
mov
push
mov
popf
or
dec
xchg
lds
fdivl
push
in
push
scas
xchg
fmuls
xor
fwait
lock
mov
sub
aaa
arpl
std
lods
cld
cmp
fs
mov
xchg
adc
loope
dec
or
das
mov
outsb
sarl
das
mov
xor
test
mov
mov
cmp
and
outsb
lahf
jnp
mov
rcr
mov
mov
sarb
xchg
addr16
shll
pop
or
dec
rcl
and
sbb
jp
mov
xchg
loope
adc
add
sub
xchg
xchg
repz
and
push
imul
sub
xor
mov
cmp
aam
loop
add
stos
fwait
dec
add
inc
xchg
inc
xchg
xorb
sbb
jo
fs
divb
imull
in
lcall
or
repnz
xchg
aam
xchg
push
shrb
xchg
stc
push
pop
popa
mov
test
into
mov
std
mov
stos
sub
mov
orl
rcl
cmc
sub
scas
sti
inc
push
outsb
xchg
daa
and
iret
pop
pop
int
xor
sub
lock
push
test
loopne
cld
cli
cmp
sbb
aam
in
andb
mov
fnstcw
cmc
insl
adc
mov
aad
enter
and
flds
mov
add
adc
fs
jno
hlt
ret
or
sarb
test
jge
push
sbb
jecxz
jo
xchg
popa
movsl
xchg
sbb
ja
cmpsb
pop
inc
call
imul
mov
and
and
out
mov
test
add
jno
std
mov
mov
push
out
xchg
jge
enter
mov
dec
adc
cli
cmp
test
xchg
cmc
cmp
mov
fisttpll
pmaddwd
js
test
fs
out
xor
test
mov
dec
and
call
out
in
adc
hlt
dec
shl
cmpsl
movl
movsb
mov
rcll
push
add
mov
or
int
test
push
stos
and
jge
gs
inc
fcoms
dec
loopne
aas
aam
cmp
sub
jmp
pop
out
mov
and
jbe
or
std
cmp
cmpsl
lahf
std
mov
pushf
aas
xor
sarb
sarl
in
add
xchg
lret
mov
arpl
mov
lret
and
dec
inc
sbb
xchg
mov
xchg
fbstp
xorl
aas
scas
enter
imul
insl
xchg
pmulhw
sub
je
pop
nop
std
lahf
adc
leave
std
stos
repz
add
enter
and
xchg
adc
out
inc
adc
pop
aad
imulb
cld
xchg
and
and
enter
mov
enter
xor
fwait
lock
loop
sahf
xchg
mov
mov
pop
jle
adc
adc
dec
popf
inc
sub
or
movsb
xor
adc
test
outsl
sbbb
data16
pusha
stos
cmp
cmp
mov
fcomip
add
ret
outsb
out
inc
xchg
dec
gs
dec
cltd
jbe
xor
xchg
cmc
xchg
pop
push
loope
mov
lret
sub
push
es
lcall
mov
cmp
jb
leave
add
jbe
or
jb
xchg
pop
pop
ljmp
std
pop
cmpsb
add
push
je
or
cmp
sbb
cli
xchg
inc
push
dec
push
aad
cmpsb
lahf
mov
pop
adc
call
dec
adcl
push
xlat
adc
and
cmp
cmc
adc
jnp
das
mov
jnp
out
test
inc
es
sbb
dec
pusha
pop
inc
ljmp
push
sbb
subb
and
push
xlat
xor
shlb
xchg
jne
or
push
add
xchg
push
sub
enter
or
addr16
or
popf
iret
inc
roll
scas
sub
outsb
std
xchg
aad
repz
xchg
pushf
in
fdivrl
adc
mov
test
scas
lds
pop
mov
fcmovne
push
pop
inc
popf
out
sbb
mov
daa
jle
ret
mov
call
lock
insl
cmc
scas
push
addr16
xchg
callw
xor
adc
inc
lea
addb
mov
fwait
pop
shlb
xchg
ucomiss
call
cmp
lds
add
xchg
inc
inc
push
mull
js
mov
testb
repnz
xchg
jae
sbb
sub
xchg
std
loopne
pop
data16
cmp
test
and
cmp
dec
inc
cmp
jno
inc
outsl
sahf
repz
or
cmp
dec
add
outsl
inc
ret
and
xor
sub
mov
jo
jmp
sub
lds
sbbl
int
cmp
repz
xchg
push
sub
pop
mov
add
leave
xchg
fldl
dec
jge
loope
xchg
mov
or
negb
lahf
sti
sbb
mov
mov
in
sub
pusha
aam
mov
cmp
bound
pop
aaa
pop
xchg
cmp
jmp
fsubr
pop
stos
ret
mov
arpl
cwtl
sub
inc
xorb
jmp
notl
sub
jle
pop
fnstsw
cmp
in
pop
inc
lock
jo
bound
movsb
xchg
test
adc
inc
stos
and
rcl
xor
xor
mov
lret
pop
or
jbe
add
adc
out
lock
xchg
push
ljmp
push
sti
push
xchg
fucom
mov
mov
adc
xchg
pushf
fisubrs
mov
xchg
popa
cwtl
icebp
rcrb
pushl
push
insb
push
xor
sub
jecxz
mov
lods
in
xor
jns
and
jge
jb
lret
mov
xchg
jae
aas
jle
ljmp
js
enter
push
call
or
fiadds
dec
in
inc
mov
sub
jle
das
mov
jb
in
jne
xlat
aad
sahf
imul
push
pop
jns
dec
in
xor
inc
xchg
xchg
sub
aaa
cmpsb
jecxz
pop
xor
jle
jnp
fdivr
popf
mov
pop
fildl
add
inc
or
iret
enter
pop
cmp
xor
pop
inc
test
mov
sahf
mov
mov
mov
sahf
and
in
push
fistps
inc
fcomi
sbb
sub
in
dec
mov
lcall
cltd
fildll
call
out
adc
pusha
sub
push
pushf
adc
xchg
sahf
jae
loopne
shll
test
push
xchg
xchg
push
rol
ret
xchg
pusha
stos
mov
movsb
sbb
mov
pusha
rolb
sarb
jmp
adc
insl
arpl
push
pop
ja
xchg
jle
and
xchg
fwait
shrd
mov
out
lock
mov
sub
mov
decl
test
ljmp
jg
and
dec
into
leave
enter
ljmp
pop
sbb
hlt
pop
or
inc
adc
mov
mov
xchg
fstpt
cwtl
ja
and
add
pop
insb
xor
sbb
aam
mov
sub
xorb
jo
add
call
mov
ss
mov
insl
pop
push
jnp
pop
jmp
or
and
sbb
ss
jb
cwtl
jb
sbb
ljmp
fisubrl
add
sbb
xchg
aas
iret
jle
dec
out
cmpsl
cmpsl
lock
stos
jnp
mov
addr16
daa
loopne
cmp
jp
cmp
cmp
mov
mov
out
mov
sti
jne
pop
jnp
cmovnp
add
cmp
mov
inc
fdivr
nop
scas
mov
mov
jmp
push
xchg
mov
repz
popa
sbb
jmp
mov
dec
int
ss
std
xchg
mov
sbb
idivb
out
cmp
repnz
iret
aam
pop
inc
es
aas
pop
test
xchg
cmp
or
test
cmp
add
jle
sub
sub
repnz
cmp
lret
adc
mov
jg
xorl
movsb
mov
pop
and
push
push
or
or
std
aad
mov
lret
and
sbb
cmp
popf
int3
jp
push
mov
sbb
xor
movsb
fistl
cmp
dec
mov
dec
out
cmp
push
pop
xlat
mov
jmp
xlat
aad
dec
cs
xor
mov
mov
sub
sbb
dec
cli
js
push
mov
fsubrs
jp
dec
call
cmp
ljmp
sbb
sub
cwtl
dec
call
cmp
ljmp
sbb
rcrb
dec
enter
cwtl
cmp
ljmp
outsl
and
gs
mov
mov
stos
jmp
cltd
in
lcall
sub
sub
imul
sbb
lret
fldt
jmp
sbb
jp
dec
sub
dec
dec
cmp
imul
ljmp
fldt
jmp
sbb
pop
pop
das
dec
xor
insb
and
outsl
add
jmp
mov
push
adc
push
add
or
push
mov
loopne
into
ljmp
fidivrl
sahf
adc
hlt
test
cmpsb
dec
cmpsb
cmp
push
cli
mov
mov
lret
out
je
push
sahf
pop
sbb
jnp
dec
aam
in
mov
clc
xchg
pop
addr16
filds
fldt
jmp
or
ret
fistpll
jg
sbb
je
call
and
push
sti
fucomi
lcall
sub
jns
sub
bound
xor
cmp
add
add
sub
jle
aas
cmpsb
movsl
das
cmp
jp
push
ljmp
fldt
jmp
sbb
jp
dec
sub
sub
jnp
imul
adc
in
cwtl
in
scas
into
mov
sbb
sub
pop
pop
jge
js
jg
xchg
xchg
iret
and
mov
fstl
or
dec
or
dec
cmp
stos
movsl
test
lcall
lcall
sub
sub
jnp
imul
ljmp
fldt
jmp
sbb
jp
dec
sub
sub
jnp
imul
ljmp
test
sarb
fstpl
jle
jp
fs
dec
sbb
gs
lods
in
xchg
pop
pop
addr16
stos
and
jae
nop
xchg
sbb
sub
clc
push
push
mov
xchg
jg
push
dec
mov
mov
xchg
data16
mov
sti
cs
lret
aad
pop
int3
jmp
mov
xor
ss
repz
and
addr16
pop
cwtl
cmc
mov
pop
pop
std
movsl
jle
mov
daa
xchg
sahf
jbe
cltd
imul
ljmp
jmp
xor
shll
cmp
lret
ds
adc
sub
jnp
mov
sbb
call
adc
pushf
jmp
mov
scas
jns
lock
ret
bound
and
sbb
cmp
adc
repnz
in
mov
adc
movb
mov
jo
das
dec
sbb
xchg
jl
push
enter
pop
inc
dec
lret
xor
loope
pop
mov
xorb
jnp
pop
gs
int3
test
popa
mov
rcl
ljmp
pop
test
js
jo
clc
jmp
xchg
jecxz
mov
add
mov
fcmovbe
sti
push
cmpsb
cmp
push
mov
or
js
lret
mov
mov
push
push
adc
imul
divl
mov
lret
push
and
xchg
xlat
and
adc
sbb
pop
cmpsb
push
cmp
inc
xchg
and
repnz
lret
das
pop
push
into
jnp
jge
popa
push
mov
dec
mov
and
cwtl
jb
pop
push
mov
fildll
or
rorb
das
pop
daa
aaa
cmpb
fistpll
scas
push
fdivrp
mov
imul
push
push
ljmp
ret
add
std
jbe
xchg
xchg
push
or
enter
pop
push
mov
inc
adc
inc
mov
inc
enter
imul
push
xor
jl
mov
cmp
mov
jo
adc
push
add
mov
ficompl
xchg
stos
pop
into
enter
out
xchg
sbb
fsubrs
xchg
sbb
cmpsl
mov
push
fsubl
add
std
mov
pop
mov
les
mov
pop
add
mov
xor
andps
imul
stos
outsb
add
xor
aas
pop
mov
cmp
pop
in
mov
xor
xchg
xorb
popa
xchg
xchg
jmp
ljmp
push
jge
mov
jno
adcl
mov
lcall
mov
lea
mov
jl
add
adc
sbb
cmp
dec
push
adc
shl
mov
xchg
scas
lret
mov
xchg
test
lahf
add
std
loop
adc
dec
xlat
mov
sub
insb
aaa
push
jp
mov
sarl
movsb
and
insb
imul
xchg
cmp
jp
imul
or
orl
popl
pop
lods
push
push
xlat
push
rcll
aas
lcall
in
out
mov
jmp
je
mov
inc
mov
cmc
dec
fsts
mov
outsl
or
or
pop
cmc
sarb
loop
adc
dec
scas
xchg
loop
sbb
decl
imul
dec
cld
jl
lds
inc
xor
add
mov
call
addr16
push
and
add
xor
xchg
cltd
jae
sub
sahf
mov
testb
or
xor
pushl
dec
mov
dec
stos
fists
cltd
lock
ja
jge
dec
pop
push
mov
decb
repnz
cli
rep
ljmp
fcoms
sbb
xchg
cld
inc
in
or
fldt
sbb
ja
inc
aam
loope
pop
xorl
adc
sub
mov
icebp
push
sub
and
mov
or
popf
out
adc
adc
das
mov
jge
fst
mov
out
pushaw
xchg
stos
mov
jns
sahf
test
push
lods
shlb
jl
leave
mov
js
int3
inc
push
mov
loope
out
cmpsb
mov
cmpl
sbb
add
stc
push
imul
movb
lret
cs
and
arpl
inc
push
popa
sbb
mov
mov
ljmp
iret
mov
idivb
pop
cs
out
sub
mov
lds
fistpll
inc
sbb
test
and
in
les
sbb
mov
jno
imull
mov
out
cmpb
out
jl
incb
xchg
fstl
pushf
and
call
cmp
xor
fs
out
lahf
xchg
dec
lret
mov
scas
loope
iret
push
xor
imul
inc
pop
imul
inc
sahf
sarl
icebp
daa
enter
rcl
pop
jns
pop
gs
jbe
jns
pop
and
je
cmpl
add
aas
and
xor
scas
adc
push
dec
loop
sbb
fs
mov
push
sbb
shlb
fisttpll
adc
ds
cmp
inc
mov
ljmp
dec
inc
dec
ret
push
loopne
stos
cmp
mov
mov
inc
jp
vcvtpd2dqy
adc
pushf
roll
pop
mov
add
cmp
dec
xchg
add
sbb
aas
js
cmp
mov
push
cmp
xchg
sub
gs
outsb
cmpxchg
inc
cmpl
mov
cmc
daa
stos
push
loop
push
add
outsl
aaa
push
mov
fucom
inc
push
pop
into
sti
xchg
sub
and
outsl
add
xor
or
jb
pusha
out
les
jle
ljmp
sbb
sbb
adc
mov
arpl
shrb
insl
mov
inc
lds
ret
sub
adc
insb
sarl
lahf
ficomps
xchg
repnz
sahf
xchg
fsub
jnp
mov
xor
outsb
pop
sahf
and
mov
dec
push
iret
mov
cmp
mov
cmpb
cmp
ret
and
aam
xor
sub
ficoms
js
test
aad
pop
pop
mov
mov
and
shl
jge
test
and
icebp
mov
in
fstpl
sub
shr
rcll
pop
adc
test
or
out
popf
lds
mov
out
rep
loopne
mov
mov
or
and
ss
inc
lret
mov
in
jns
or
xor
cld
jno
out
imul
push
fucomp
push
insb
outsb
add
push
cmpsb
cmp
mov
andb
cltd
das
jl
pop
hlt
outsw
pop
mov
imul
push
inc
jmp
mov
xchg
push
push
cmp
pop
dec
cwtl
adc
pop
sbb
repz
popf
push
fbld
adc
push
inc
fwait
imulb
cmp
dec
adc
out
push
js
jae
adc
xor
popa
ss
jmp
push
nop
cmp
pusha
mov
sub
mov
arpl
mov
mov
lds
sub
add
cli
ds
ret
lea
xor
sbb
cmp
lcall
fucomi
loope
pop
inc
test
sub
xchg
pushf
mov
push
jae
pop
add
cmp
cmpsl
out
sbb
mov
pop
mov
sti
jl
or
repz
fnstenv
filds
es
stos
outsl
imul
xlat
pop
push
mov
xchg
add
cli
fwait
data16
add
leave
shlb
jns
out
mov
insl
jp
push
lea
add
adc
std
cltd
out
adc
inc
xchg
cltd
or
jg
nop
mov
scas
or
icebp
jp
xor
stos
scas
push
rolb
clc
pushf
les
mov
out
mov
cmp
mov
stos
sub
xchg
jb
mov
mov
les
dec
cmc
or
jmp
adc
in
cmp
dec
cwtl
sub
imul
push
fisubrs
xchg
adc
dec
out
add
add
or
lods
jns
jg
rorb
inc
sub
fdivrl
dec
dec
mov
cmp
jl
cmpsl
xchg
adc
sub
mov
adc
mov
rclb
push
in
mov
jmp
outsl
rolb
push
push
jge
xor
arpl
dec
mov
mov
mov
fucomip
and
lods
lret
jle
and
movsb
ret
cs
rorl
movsl
mov
add
inc
inc
sti
sarl
dec
adcb
js
push
and
push
clc
mov
fdivrp
sub
cmpsb
jp
sbb
push
jecxz
clc
fcmovnu
jg
aam
cwtl
jge
mov
jbe
push
subb
leave
dec
addr16
iret
inc
cmp
cmp
stos
cmpsb
add
and
xor
das
cmp
dec
repnz
jo
sbb
sbb
or
and
mov
jae
aam
cld
gs
aad
mov
mov
mov
sub
int
xchg
cmp
pop
push
push
in
aam
lods
sbb
jl
lret
es
jmp
jo
adc
in
sub
sbb
adc
or
clc
pop
fbstp
mov
and
adc
pop
push
pop
das
out
icebp
inc
or
test
mov
fcom
pop
adc
mov
std
das
dec
xchg
scas
enter
pop
idiv
sahf
mov
pop
cmp
mov
fdivs
add
inc
ljmp
jae
test
ret
cld
mov
insb
cld
mov
jmp
mov
adc
lret
ret
addb
or
mov
pop
sub
ljmp
inc
xlat
xchg
mov
negb
add
adc
adc
cmp
test
add
sub
mov
popa
repnz
lcall
das
mov
mov
cs
js
cmp
std
data16
scas
or
cld
push
shr
xchg
lods
cld
fs
pop
mul
dec
xor
ret
loopne
gs
push
jne
xor
fwait
lahf
imul
cmp
mov
lret
push
sahf
cli
outsl
mov
loope
fadds
mov
fldcw
inc
push
hlt
daa
jmp
test
push
stos
jge
jno
xchg
and
cmp
add
mov
data16
jbe
out
mov
fsubrs
xchg
gs
dec
push
pop
or
cmc
add
lret
test
push
add
shlb
lods
mov
and
idiv
cmp
repz
mov
and
lcall
jmp
cs
jae
xor
dec
mov
mov
dec
and
js
jmp
adc
test
push
jno
ss
jb
jo
data16
std
mov
pop
add
mov
jns
orl
fidivl
mov
xor
mov
ficompl
sti
sbb
xchg
stos
mov
shl
sub
or
mov
mov
mov
out
jbe
dec
pop
mov
js
insb
ret
sar
or
cmp
stc
in
enter
adc
repz
aas
pop
nop
loope
in
ret
push
sub
rcr
testb
jne
outsl
mov
shl
dec
xor
xor
scas
and
or
jns
std
out
cmpsl
inc
mov
aad
arpl
fbstp
cmc
fs
aas
jge
mov
icebp
cmpsl
inc
fcomp
inc
jmp
cmc
ficoms
xor
mov
loopne
push
icebp
xchg
aam
in
mov
mov
and
imul
jae
sub
pop
jecxz
jmp
lods
jae
pusha
push
loop
mov
loope
cmp
aas
mov
jle
pop
jb
clc
mov
push
iret
mov
xor
ret
push
lock
addr16
cmp
adc
test
jne
repz
xchg
mov
xor
mov
sbb
mov
dec
gs
jb
ret
lcall
cmp
or
mov
out
and
arpl
mov
pop
mov
out
call
sahf
subb
mov
ss
lock
mov
inc
movsl
ficomps
ror
push
pandn
gs
paddq
or
stc
mov
push
fidivrs
ret
jo
or
mov
push
xlat
fcomps
stos
das
scas
pushf
pop
push
inc
lds
sub
mov
test
cmp
pusha
sub
push
jae
cwtl
xor
sbb
mov
jne
lods
rclb
fnstsw
push
or
mov
cmp
dec
cmpsb
adc
xchg
xor
push
in
mov
and
cmpsb
imul
bound
movsb
test
fistpll
sbb
mov
xor
jns
fs
jo
inc
inc
mov
push
xor
aas
arpl
addl
push
jns
adc
ja
lahf
xchg
mov
jecxz
arpl
mov
or
lock
jge
dec
cli
ja
aad
sbb
mov
outsl
or
inc
mov
pop
or
popl
pop
cmpsb
repnz
ja
sub
adc
test
scas
xor
dec
js
testb
xchg
roll
fisttpl
jns
bound
mov
pop
test
mov
xsha1
cmpsb
or
xlat
sarl
sub
pop
lods
inc
rclb
int3
stos
and
popf
pusha
lahf
mov
in
rorl
xor
ret
sbb
mov
sbb
sbb
adc
dec
cmpb
std
lcall
das
or
sub
inc
push
fwait
std
xchg
sbb
mov
sub
xor
movsb
bound
nop
hlt
rcrb
sub
mov
push
andb
dec
adc
and
pop
adc
enter
jl
push
cmc
cmpsb
and
mov
jecxz
fistpll
fwait
ja
adc
mov
sub
and
cmp
inc
fwait
jmp
cmpsl
xchg
int
sub
dec
add
mov
hlt
cmp
scas
fwait
push
icebp
stc
divb
test
dec
inc
dec
in
orl
dec
sub
repnz
sub
and
inc
xor
loope
or
nop
idiv
push
in
xlat
sbb
mov
loope
call
pusha
iret
cmpb
lcall
cmp
jg
pop
movsl
test
mov
fisubl
and
std
adc
xchg
lock
lcall
test
aad
inc
sub
rclb
add
inc
pushl
cli
xor
pop
cmp
dec
out
les
dec
popl
into
inc
jno
pop
dec
orl
jl
mov
cmp
jne
inc
dec
scas
lret
dec
dec
push
mov
fildl
jno
mov
fs
sbb
push
xchg
mov
add
xlat
fimull
jne
ds
out
or
leave
dec
and
mov
pop
sbbl
push
mov
lods
sub
pop
mov
cmp
jl
sbbl
faddp
and
movsb
sub
adc
insb
cmp
fdivs
popa
mov
sbb
stos
jne
mov
push
das
push
fs
dec
push
addr16
inc
inc
sub
stos
psubd
jecxz
mov
xchg
mov
mov
xor
or
adc
xor
mov
mov
ds
jo
rclb
pop
loop
sbb
and
add
stos
addps
mov
aas
cmp
adc
fcmovb
frstor
push
lcall
push
aam
mov
mov
inc
loopne
loope
data16
jns
add
jbe
shrb
xchg
push
movsl
add
stos
popa
or
aad
sbb
dec
out
int3
pushf
jmp
sub
mov
scas
sti
fs
jecxz
jnp
mov
adc
mov
xlat
shrl
mov
shrl
pop
lds
movsl
shrb
push
aam
cs
and
or
mov
dec
mov
mov
xchg
pop
xchg
sbb
je
mov
xor
xchg
test
testb
sbb
mov
sbb
mul
sbb
dec
mov
push
inc
push
leave
xchg
jbe
xlat
jnp
inc
pop
pop
nop
fdivr
push
stc
hlt
lods
lock
loopne
daa
ja
cmp
scas
push
je
cwtl
adc
xchg
leave
jbe
mov
ficoml
dec
rol
cmp
xchg
out
xchg
sub
pop
enter
adc
rcrb
pop
push
std
dec
mov
sub
mov
inc
cmpsl
adc
xchg
sbb
xchg
push
iret
jle
dec
clc
vcvtps2pd
or
pop
jne
dec
mov
push
or
mov
dec
mov
fwait
add
popf
lahf
ja
mov
jl
in
add
mov
adc
fxch
lea
test
add
jae
jne
aaa
ja
fmull
inc
dec
popf
jno
les
js
into
cs
xchg
test
hlt
pop
jno
or
pop
inc
fdivs
out
jl
cmp
xor
mov
adc
mov
outsl
mov
mov
adc
sahf
ret
and
pcmpeqd
xchg
rorb
jno
xchg
bound
rcll
loop
je
push
sti
sub
pop
outsb
outsb
dec
into
push
pushf
data16
and
and
jns
and
inc
dec
dec
xchg
imul
sbb
lds
sahf
addr16
sbb
shrb
loop
or
inc
pop
in
jmp
je
jg
pop
xchg
xchg
mov
xor
adc
adc
lea
mov
outsb
sahf
mov
fwait
add
repz
mov
sub
mulb
sbb
xchg
adc
mov
and
pop
fdivrl
aam
push
xor
xchg
jae
pop
dec
out
cmp
mov
addr16
dec
mov
aad
fisubrl
pushf
jne
mov
mov
mov
jge
jb
and
mov
mov
lcall
inc
test
out
in
cmp
movsl
je
cwtl
fsubrs
ljmp
ja
mov
shlb
push
sahf
inc
in
sub
lea
push
nop
dec
inc
pop
xchg
cmpsb
leave
xor
int3
jle
loop
inc
insl
jnp
xor
bnd
fldcw
mov
clc
or
and
xchg
sub
pop
cmp
es
inc
gs
sbbl
push
fcompl
xchg
add
mov
dec
and
mov
add
mov
bound
inc
xchg
test
inc
inc
mov
jbe
xor
mov
jl
cmpsl
sbb
insl
js
test
adc
int
mov
jge
test
dec
mov
fs
fldcw
outsl
mov
sub
xor
sbb
push
mov
stos
fistl
popl
lods
or
test
add
rcrl
fcmovnu
sbb
nop
lea
movzwl
loopnew
test
jno
xor
das
in
add
daa
dec
test
mov
mov
test
mov
cmp
or
insl
inc
xchg
pop
add
pop
pop
jle
jp
lock
push
fisubrs
cld
addr16
cmp
aam
push
daa
mov
jb
mov
rolb
loope
gs
sub
push
pop
sub
test
mov
xor
out
lret
sub
and
mov
lea
xor
add
lds
div
outsl
mov
push
pop
cmovae
pop
int3
lcall
jbe
pop
cwtl
int
mov
shrb
mov
repz
jge
and
scas
pop
ss
push
xorl
out
xor
sub
out
stc
jmp
xchg
aad
ror
mov
push
pop
sbb
mov
rcr
inc
adc
fwait
push
mov
jno
lock
dec
cmp
mov
cmpsl
mov
lea
mov
cmp
js
es
push
xchg
shlb
inc
jle
in
insl
out
pop
push
inc
jmp
shlb
push
adc
insl
xchg
xchg
mov
and
call
push
push
inc
mov
xorl
incb
or
mov
mov
aad
add
or
stos
clc
pusha
xor
push
mov
sbb
pop
pop
xor
cmp
xchg
cmp
outsl
rcrl
add
lahf
dec
dec
pop
jno
movsl
lcall
xchg
cmpsb
jp
lcall
jecxz
das
aad
or
fwait
inc
adc
pop
sub
incl
stos
vpunpckhwd
and
adc
dec
fisttpl
xlat
mov
sbb
jecxz
cmp
in
cs
scas
adc
mov
mov
lret
fldt
jmp
sbb
jp
dec
sub
sub
jnp
imul
ljmp
fldt
jmp
sbb
jp
dec
sub
sub
jnp
imul
ljmp
fldt
jmp
sbb
jp
dec
sub
sub
jnp
push
lcall
fcmovu
stos
lret
mov
sbb
rclb
mov
xchg
in
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
jne
cltd
xor
mov
mov
cli
aad
roll
add
add
add
add
add
pop
mov
in
lret
add
add
add
rolb
add
add
fildl
nop
add
pop
rolb
addb
add
add
jo
push
add
incl
rolb
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
rolb
or
filds
adc
add
add
add
add
add
and
xchg
add
add
mov
movsb
add
add
add
add
add
add
pop
mov
fildl
pop
add
test
mov
add
add
add
add
pop
mov
cmp
xor
add
add
add
add
add
add
add
mov
add
xor
or
push
add
add
add
mov
mov
add
add
pop
jnp
imul
testl
xor
pusha
add
add
add
add
sti
add
add
add
add
add
lea
cmp
add
aad
addb
add
add
add
pop
dec
add
aaa
add
add
add
insb
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
scas
add
imul
imul
testl
inc
add
add
add
test
verr
add
add
add
add
arpl
das
add
cmp
pop
add
out
mov
add
stc
add
sbb
inc
add
add
add
add
add
add
xor
add
pop
add
add
add
imul
add
push
add
add
add
sub
jg
testl
pop
add
add
add
add
aaa
add
loopne
insb
add
mov
add
mov
pop
add
add
add
add
add
add
inc
add
add
bound
jo
jg
inc
add
add
add
add
add
add
add
arpl
jecxz
aaa
add
rolb
ret
add
scas
add
jo
dec
add
add
add
flds
add
push
add
sti
add
jo
in
add
rolb
or
adc
in
add
add
mov
aad
jle
filds
cmp
add
add
add
add
imul
adc
add
add
adc
mov
test
bound
jl
movsb
add
add
dec
add
add
add
xchg
sub
pop
add
add
and
add
add
add
add
add
add
and
push
add
add
add
add
sub
sbb
pop
add
add
add
add
add
or
aaa
add
add
add
add
inc
add
add
add
sub
add
and
repz
mov
add
add
filds
mov
add
add
pop
arpl
inc
add
add
add
outsl
add
cmp
lock
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
roll
jae
add
dec
add
add
pop
bound
rolb
jae
add
and
ja
xor
adc
mov
fadds
std
xchg
mov
push
inc
mov
stos
mov
stos
iret
sbb
sub
inc
ja
mov
pop
enter
jge
fucomp
or
call
dec
dec
in
imul
cmpsl
cs
xor
test
cwtl
mov
add
adcl
push
outsl
and
fwait
test
gs
jbe
shll
jmp
scas
andb
cwtl
cmp
lret
pop
idivb
push
stc
lahf
lcall
insl
ja
adc
ds
ljmp
loopne
adc
inc
mov
push
data16
mov
out
xor
lret
mov
jge
insb
cmp
shlb
mov
adc
fidivs
ljmp
lock
pop
sbb
out
pop
aam
loopne
pop
cmpsl
mov
mov
jmp
fcoml
push
add
inc
push
mov
test
and
ljmp
call
adcb
xchg
dec
push
cld
in
xor
jns
jge
rcrb
and
sbb
mov
cmpsl
mov
jge
mov
xchg
add
mov
arpl
adc
mov
adc
or
cltd
sbb
mov
jp
or
je
mov
and
test
test
imul
add
xor
add
adc
lret
andb
int
and
jecxz
sbb
enter
lahf
mov
cmpsb
ss
bound
daa
in
cmp
push
mov
dec
cwtl
xlat
fistpll
jne
mov
pop
push
inc
inc
inc
xchg
xchg
sbb
xor
cmp
pushf
ljmp
lock
dec
out
lods
and
rolb
pop
add
mov
leave
jmp
sbb
iret
mov
cs
jmp
mov
push
pushl
fildll
cmp
mov
cmpsl
stos
xor
add
mov
cltd
scas
cmc
imul
adc
loop
in
mov
mov
xor
test
pop
push
jo
cmp
div
mov
nop
sti
mov
je
ljmp
es
mov
mov
repz
dec
fs
xor
scas
and
add
sub
push
pop
inc
leave
ss
insl
outsb
shl
sub
bound
fildl
jge
out
or
es
js
jne
inc
pop
test
adc
ss
push
pop
jne
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
