fsubr
loopne
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
mov
lcall
iret
sub
cmp
daa
lock
mov
dec
mov
jg
psubb
clc
clc
or
sbb
sub
cmp
push
jg
sub
or
call
out
xlat
xor
and
jo
bound
je
and
sub
jl
jbe
lahf
or
jno
pop
mov
cmpsl
cmpsl
inc
cmpl
mov
pop
and
in
adc
mov
iret
mov
inc
cmpsb
jg
push
lock
or
mov
jecxz
xchg
mov
idiv
lahf
xchg
pop
loope
mov
xchg
insl
or
mov
fsubs
pop
out
sbb
sub
push
lahf
xchg
pop
addr16
dec
add
fwait
insb
daa
dec
notb
xchg
xlat
stos
fdivr
push
jns
add
pop
mov
sub
pop
sysret
clc
subb
repz
mov
nop
mov
test
fwait
das
lods
out
pop
pop
call
iret
cmp
and
jno
popa
jbe
adcb
mov
psubsb
pushf
pushf
insl
lcall
push
shlb
lea
adc
cmp
movsl
pop
mov
jp
out
jo
sbb
cmp
push
or
adc
icebp
jg
or
sub
dec
mov
pop
popf
xchg
jge
dec
fisttps
and
pop
outsl
mov
dec
test
mov
psubsb
clc
out
or
sbb
sub
cmp
push
jg
dec
test
mov
psubsb
clc
out
or
xchg
or
cmp
inc
push
or
mov
push
icebp
add
mov
repnz
push
cmp
xor
iret
movsb
and
mov
pusha
in
mov
cmp
push
nop
scas
cmpsl
bound
pop
mov
lcall
out
mov
or
xchg
dec
stos
outsl
push
shll
and
rol
jno
push
inc
call
mov
cmp
dec
sbbb
adc
dec
pusha
lea
push
sub
pop
jl
sbb
cwtl
clc
insl
inc
jno
scas
stc
jge
cmpl
dec
hlt
cmpl
cmp
addr16
add
cmpsl
nop
inc
lods
enter
mov
imul
jns
cs
sub
sbb
insl
js
push
and
into
cmp
add
xor
mov
lods
arpl
stos
mov
add
jmp
xchg
rcrl
mov
mov
fs
mov
shll
nop
jmp
jle
lret
cltd
mov
sub
std
das
dec
jnp
inc
cmp
jge
dec
cmpsl
adc
push
scas
lret
adc
shr
or
call
push
push
or
and
loop
pop
dec
push
xchg
dec
jne
js
test
cmpsl
sbb
mov
test
fnstcw
aas
xchg
int3
mov
clc
inc
pop
xchg
in
scas
xor
push
jbe
cmp
ja
aad
repnz
scas
sbb
aaa
xchg
pop
xchg
push
popa
in
das
ss
mov
pop
sub
jle
xchg
pushf
bound
mov
xchg
and
jae
jnp
test
shr
and
test
lcall
mov
sub
stos
rorb
adc
insl
jno
sub
ds
mov
jl
push
pop
movsl
test
ret
clc
das
push
inc
adc
cltd
add
and
sahf
loopne
ret
stc
sub
push
out
cmp
jnp
subl
push
xchg
jmp
or
push
stos
lret
outsl
fdiv
mov
push
jno
mov
lods
arpl
std
dec
adcb
xchg
adc
mov
jno
or
cmp
inc
mov
fisttpll
shr
cltd
jl
cwtl
xchg
jnp
inc
xchg
cmpsb
addr16
aam
stc
fnsave
jo
aaa
cs
add
movsb
fstps
jmp
cmpsb
add
pusha
push
jno
and
sub
sbb
gs
mov
ficoml
sbb
loop
mov
xchg
and
enter
lahf
mov
push
pop
lret
pop
outsl
fadds
aad
jmp
sti
mov
jl
sti
inc
cmp
mov
fcoml
sbb
loop
loopne
dec
jge
rcrb
cltd
push
push
sub
rclb
xchg
mov
pop
fsts
test
fimull
cmp
movl
adcl
in
mov
add
sbb
inc
or
roll
push
jo
dec
jbe
sub
cld
xorl
adc
push
xchg
mov
xchg
push
jbe
fcomip
xchg
std
cs
pop
push
pop
outsl
mov
sbb
bound
in
int
scas
xchg
pop
jp
jle
movl
sub
sbb
sub
push
dec
fwait
push
sbb
or
ljmp
inc
cmpsb
mov
jno
int3
mov
mov
pop
and
sbb
xchg
fimull
mov
xchg
in
sti
mov
mov
scas
or
pop
or
sub
cmpsl
cmpsb
pop
cmp
push
cmc
xchg
mov
mov
ljmp
mov
sahf
lcall
int3
push
nop
das
mov
je
aaa
inc
jb
ud2
mov
push
push
fldenv
cmpsb
and
enter
mov
jnp
ret
adc
cmc
adc
enter
cmp
sbb
adc
jge
pop
xor
xchg
enter
rcrl
repnz
rcrl
repnz
dec
dec
insb
fmuls
lods
outsl
jge
sub
ss
push
mov
ds
mov
movsb
mov
push
aad
and
rep
sbb
stos
mov
in
cmpsb
xchg
mov
nop
xchg
pop
scas
arpl
aad
mov
rcl
bound
push
jmp
jg
cmp
or
push
lcall
into
cli
or
mov
mov
repz
rorb
arpl
cmp
xchg
and
adc
pop
push
stc
adc
std
mov
push
mov
out
ss
or
repz
push
or
jb
popa
sbb
pop
loope
pushf
sub
pop
pop
sbb
ret
mov
shl
xchg
jb
mov
cmp
xor
stc
arpl
xchg
daa
mov
push
mov
push
and
adcb
or
out
dec
and
arpl
add
popf
icebp
push
ljmp
push
rclb
push
rcll
int3
mov
iret
dec
mov
xchg
and
mov
das
jp
jb
gs
popl
sbb
jle
adc
xchg
xorl
mov
test
jb
mov
bound
test
fmul
cmp
pop
add
pop
sbb
test
aas
mov
fcmovu
repnz
dec
xchg
loopne
mov
push
xchg
sub
inc
cwtl
or
jmp
loopne
xor
mov
add
testb
push
mov
jno
inc
incl
mov
push
xchg
push
cltd
sti
mov
dec
xchg
fnclex
pop
aam
popa
rcrl
sbb
sahf
mov
in
pop
movsl
sub
cmp
or
fisubrs
xchg
shlb
mov
cmpsl
int
inc
dec
mov
jns
aam
call
adc
sbb
dec
popa
pusha
jae
aad
dec
pusha
fidivrl
lock
clc
pushf
sub
dec
and
mov
adc
pop
jns
sbb
or
je
shrb
lock
add
ja
and
icebp
mov
std
jo
or
inc
push
jg
ret
adc
mov
stos
aas
clc
sti
std
push
jb
into
or
and
jb
xchg
push
stos
rorl
popf
xchg
sub
xor
pushf
rcrb
push
sub
imul
or
js
cmpb
and
and
sbb
jmp
mov
sub
mov
pop
inc
pop
stc
scas
jmp
fs
dec
push
push
push
daa
xchg
lods
outsl
mov
xor
jo
subl
lcall
adc
mov
lcall
aaa
jae
mov
lret
inc
cltd
ljmp
cltd
and
sbb
sahf
ds
adc
idivl
mov
mov
scas
mov
stc
cmp
or
cld
or
movsb
push
rclb
outsl
ret
cmp
inc
sbb
jmp
or
adc
mov
or
push
icebp
repnz
gs
jle,pn
mov
add
add
movsl
fucomip
outsb
inc
sarl
stc
sub
test
ret
dec
ss
rcr
mov
les
ffreep
mov
jp
fisttpll
mov
pop
or
ja
pop
pop
into
movsl
dec
nopl
xor
push
repz
mov
or
fld
cli
dec
enter
add
and
cmpsb
pop
pop
xchg
in
insl
lock
adc
mov
movsl
xchg
push
popa
or
ret
nop
push
mov
dec
xchg
jns
adc
xchg
fdivs
nop
sbb
push
mov
sub
mov
les
movsl
xchg
movsl
dec
scas
je
outsl
add
shlb
push
push
xchg
dec
sbbl
in
mov
xchg
adcb
clc
mov
test
andl
mov
out
jp
out
test
pop
daa
ret
insb
outsl
fwait
sbb
cmc
inc
enter
pop
and
repz
adc
xor
les
cli
test
ljmp
mov
lahf
hlt
mov
xchg
iret
xor
and
out
jbe
sahf
clc
insl
xor
inc
xor
iret
xor
cmp
in
lret
push
jns
inc
inc
mov
out
and
adc
sub
dec
sahf
pop
sub
adc
or
roll
pop
push
cmc
test
ljmp
aaa
mov
mov
mov
cmpsl
outsl
daa
mov
jmp
add
stc
popf
loope
mov
add
push
pop
cmp
push
out
in
and
les
add
jo
arpl
inc
sub
frstor
xor
incl
mov
mov
out
loopne
or
enter
pop
mov
sub
xor
mov
loop
pop
mov
or
sub
add
sbb
mov
sbb
bound
test
inc
or
mov
jg
adc
enter
pusha
fists
mov
add
pop
dec
rcr
aas
test
sbb
mov
ret
inc
xchg
push
inc
and
cmp
inc
or
fimull
in
mov
and
or
push
movsb
mov
add
in
scas
in
mov
pop
jnp
pop
int
testl
cmp
mov
fs
jl
rcrl
lods
mov
sbb
imul
or
fs
ror
pop
ret
shld
fwait
enter
je
pop
out
mov
sub
and
faddl
and
inc
dec
loop
inc
shll
pop
xor
or
sub
scas
mov
xor
sub
popa
cmp
or
jnp
adc
xchg
jg
jns
dec
scas
jl
cltd
les
xchg
xchg
sbb
aaa
and
push
popf
imul
shrb
adc
fcoml
adc
addr16
data16
xchg
jno
push
jmp
stc
or
cmp
xchg
mov
out
leave
and
and
or
jecxz
jmp
xchg
dec
cmp
in
mov
sarl
jl
jecxz
out
sbb
shrl
mov
jecxz
pop
dec
push
sahf
jbe
sbb
and
mov
xor
imul
inc
js
jle
std
inc
lcall
cltd
cmp
lret
shl
push
les
jnp
mov
into
cli
call
fucomip
mov
mull
cmp
cwtl
psubusb
fs
dec
in
arpl
jnp
push
and
mov
shrl
fld
mov
jo
pop
or
sbb
push
add
xchg
fidivrl
nop
es
and
sub
xor
bound
lret
jns
sub
or
fidivrl
pop
aad
pop
orb
addr16
pop
xlat
sub
mov
dec
and
lods
fnsave
mov
dec
cmp
or
std
push
mov
mov
imul
aas
into
icebp
insb
push
cli
scas
push
cmp
clc
push
stos
ficoms
cmp
xor
movsb
jnp
loope
outsb
mov
push
xchg
sub
stc
and
cltd
loop
lahf
popf
cmp
mov
cld
stos
ds
sbb
xorl
jb
test
leave
and
repz
mov
fcmove
jg
or
xor
lds
xchg
sub
mov
add
scas
in
das
mov
aad
and
in
sub
pop
xchg
mov
sahf
in
and
outsl
or
fxtract
adc
push
inc
mov
dec
icebp
mov
outsl
out
pusha
jno
cld
insl
sahf
out
inc
ss
cmpsb
sbb
repnz
pop
negl
or
mov
es
sti
mov
loop
xor
insl
arpl
mov
sbb
mov
xor
in
scas
mov
test
pop
add
xchg
and
outsb
test
insb
inc
mov
sub
xchg
rcl
jno
and
enter
fnsetpm(287
or
xchg
push
mov
jge
mov
jnp
jle
push
fdivp
cld
push
adc
insl
lods
rorw
cmp
ret
jae
ljmp
out
adcl
cs
inc
lret
imul
pushf
out
xchg
clc
data16
cmc
sub
sbb
mov
pop
dec
inc
inc
sahf
push
push
cmpsl
inc
add
stos
roll
dec
pop
dec
dec
and
aad
mov
ret
pop
inc
pop
pop
pop
out
arpl
jns
jl
push
xlat
or
movl
jnp
add
sbb
stos
add
stos
add
test
pusha
jbe
xor
xor
leave
push
fld
jle
dec
and
jecxz
bound
jg
cltd
jno
push
adc
push
xor
add
dec
sub
insb
and
cmp
inc
mov
clc
jns
or
xor
rolb
mov
adc
push
jp
lcall
clc
jno
lods
arpl
mov
push
bound
mov
push
out
cmp
ss
jmp
jnp
cmp
pop
dec
loopne
pop
iret
and
xlat
mov
push
cmp
push
push
mov
loopne
test
call
je
push
std
int3
dec
stos
push
daa
push
jmp
ret
pop
sub
pop
scas
mov
jmp
dec
fldt
iret
into
in
sub
pop
jle
xor
test
out
ds
inc
shl
pcmpgtd
mov
je
sarl
ficoms
add
cmpsb
leave
std
add
push
sarl
mov
sbb
fs
jo
lret
pusha
dec
sub
fadd
roll
popa
in
imul
mov
cmp
mov
ljmp
xchg
int
adc
jp
sarl
in
pmaxub
xchg
mov
cmovbe
enter
jge
popf
dec
movsl
je
xchg
add
jmp
fstps
sub
adc
decl
iret
loope
int
xor
mov
repz
rorb
outsb
ficompl
clc
jg
xlat
fwait
pop
mov
sbbb
mov
or
loope
push
inc
and
imul
sbb
push
daa
jo
shlb
mov
push
sahf
stos
loop
adc
out
imul
gs
mov
jmp
ret
add
repnz
or
mov
negb
ror
mov
leave
in
and
stc
fdivrl
dec
pop
bound
loop
popf
aam
out
std
std
sahf
mov
mov
iret
cmp
imul
add
mov
insb
sub
ds
testl
or
movl
push
rorb
xor
in
pushf
out
cmp
test
jl
dec
clc
imul
arpl
mov
aas
stos
and
int
pop
jb
stc
pop
mov
dec
es
push
jmp
push
xchg
filds
addl
rorl
lcall
push
imul
adc
cli
out
stc
sub
jnp
leave
testb
outsb
push
scas
data16
notl
jmp
divl
inc
ret
clc
dec
mov
ja
xor
push
addb
mov
mov
xchg
iret
dec
fistpll
andb
dec
and
fsubs
mov
push
popf
lods
iret
int
pop
fisubs
xchg
and
sti
sub
add
call
into
mov
cli
push
js
pusha
mov
popa
push
pop
inc
sub
repnz
sub
mov
or
in
pusha
mov
aaa
cmpsb
cmp
lret
roll
and
leave
mov
repnz
icebp
ret
push
xlat
pop
lret
or
push
into
or
sbb
shl
sbb
jge
sbb
push
or
loop
sub
orl
ret
inc
loopne
adcb
dec
ret
push
add
dec
loope
ss
pop
int3
or
mov
or
xchg
out
sbb
sti
xchg
jecxz
iret
push
fs
inc
mov
mov
xor
xor
mov
ss
adc
scas
pop
enter
ja
push
rclb
push
testb
lret
dec
dec
add
push
addb
cmp
lahf
pop
push
int3
gs
inc
cmp
popa
cmp
mov
je
xchg
cld
fistl
xor
pop
adc
push
jo
lret
xlat
test
inc
fbld
xor
pop
ljmp
and
adcl
dec
sub
adc
rcll
mov
daa
or
imul
mov
and
test
jmp
out
mov
sbb
in
inc
jg
xchg
movsb
cmpsl
lods
rolb
in
xor
xchg
mov
gs
test
imul
sbb
shlb
pop
outsl
pop
xchg
andb
mov
int
push
lods
ljmp
cs
mov
sub
in
insb
pop
loope
lret
cmp
lods
imul
adc
mov
fbld
and
shl
jp
sahf
gs
in
dec
push
test
cmp
fcomp
out
outsl
int3
popa
xchg
pusha
adc
cmpsb
mov
mov
pop
mov
push
jecxz
mov
xor
icebp
mov
ljmp
mov
int
xorb
pop
mov
xor
adc
inc
push
inc
add
mov
call
mov
int
push
in
push
movsl
aaa
mov
pop
clc
mov
sbb
inc
and
cltd
int
mov
xor
cmc
mov
xchg
outsl
or
adc
cmp
idivb
or
push
fucomip
cltd
loopne
repz
iret
leave
insl
inc
mov
and
insl
aas
xor
and
and
lea
fdivrs
mov
outsb
pop
add
clc
sbb
mov
mov
loop
lds
jo
mov
mov
push
adc
fstl
scas
sti
jne
test
pop
cmc
inc
dec
push
jae
popa
mov
lahf
mov
xchg
in
je
ret
cmp
out
or
incl
jns
mov
lock
das
mov
fbld
pop
add
gs
mov
outsl
loopne
repnz
sbb
clc
repz
popa
xchg
sbb
fisttpll
sbb
push
sbbl
push
pushl
fimull
push
aaa
add
pusha
push
sub
sbb
cmp
stos
xchg
mov
fnstcw
jg
xor
adc
pop
inc
mov
data16
dec
mov
imul
pop
xor
call
inc
scas
mov
aas
mov
js
std
push
push
sbb
adc
or
orl
call
jl
das
or
or
addr16
dec
ljmp
fwait
in
fldz
loope
mov
xchg
pop
pop
loop
xchg
insb
or
sbb
mov
mov
sbb
sub
int
fcoml
sahf
pop
push
mov
in
loop
push
movsl
push
mov
outsb
mov
or
pop
mov
pushf
cmp
or
mov
mov
les
std
or
stc
jge
inc
rorl
mov
cld
hlt
das
fimull
xchg
push
sbb
and
or
es
sti
jp
fs
jae
lahf
popa
popf
adc
int3
imul
and
insl
iret
fists
orl
lea
push
mov
pop
mov
sub
cltd
add
jno
dec
adc
jnp
xchg
mov
pop
push
sub
cmp
xorl
mov
movsb
es
push
imul
out
add
mov
mov
mov
leave
or
push
inc
jle
mov
dec
loopne
xchg
lret
mov
mov
and
inc
ret
sbb
gs
std
cmp
leave
in
adc
aas
pop
sar
xchg
ljmp
out
negl
lds
jne
add
lock
xchg
pop
jmp
daa
idivb
mov
cmp
sqrtps
jecxz
cli
add
xchg
aam
adc
sbb
push
xchg
mov
repz
or
rcll
cmp
mov
inc
outsl
out
repz
cmpsb
addr16
sub
inc
out
rorl
add
adc
and
xor
sbb
stc
jb
lahf
push
popf
add
push
fldenv
mov
sub
std
mov
push
in
movsb
in
fsubrs
inc
lea
jns
mov
movsl
jmp
psrlq
call
adc
push
scas
sbb
lods
ret
jp
aaa
pop
test
mov
pop
cld
subl
sub
xchg
bound
mov
sub
and
movsb
mov
fnstsw
mov
flds
push
mov
dec
enter
jg
inc
stos
test
add
mov
mov
frstor
mov
mov
aam
jnp
jecxz
int3
cli
icebp
les
sub
movsl
inc
mov
sub
inc
cmp
in
jb
mov
cltd
cmp
cmp
lds
out
jmp
ja
xchg
inc
test
mov
and
jnp
lock
outsl
cld
jle
xor
nop
and
fisttpl
cmp
pop
fstpl
sbb
cmp
mov
add
mov
push
divl
push
xor
sbb
fistpll
scas
dec
mov
js
mov
dec
test
mov
psubsb
clc
out
or
sbb
sub
cmp
push
jg
dec
test
mov
psubsb
clc
out
or
sbb
sub
cmp
push
jg
dec
test
mov
psubsw
clc
fisttpl
lret
sbb
sub
cmp
push
xorb
test
iret
pop
inc
mov
lock
loopne
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
imul
aad
fsubrl
popa
imul
ds
and
xor
leave
sti
shr
loope
icebp
lret
cmpl
push
imul
dec
add
xor
sbb
sub
xchg
mov
jecxz
xchg
dec
mov
pop
cmp
cmp
push
inc
outsl
cmpb
scas
or
dec
jb
push
xchg
outsb
sbb
mov
fs
inc
int
xchg
fldcw
outsb
and
test
test
xorb
inc
xchg
xchg
shll
push
loopne
aad
mov
add
jnp
pop
mov
enter
iret
outsb
int3
test
test
lret
subb
push
push
incb
mov
mov
adc
inc
sub
xor
mov
stos
in
stc
ja
pop
add
mov
adc
jno
inc
xchg
adc
scas
push
sbb
imul
sub
and
and
ja
lret
loope
popf
lret
cmpl
ret
ret
mov
pop
pextrw
and
push
cmp
mov
cmpsl
out
push
in
mov
ror
and
adc
xor
adc
push
outsl
jbe
sarl
cmpsl
call
bnd
sbb
push
add
sbb
sub
js
mov
or
notl
mov
push
imul
dec
add
adc
and
xor
sar
jmp
fcomi
lret
cmpl
push
imul
dec
add
adc
and
xor
sar
mov
int
mov
add
adc
scas
fists
inc
xorb
mov
jle
sub
fs
shlb
hlt
xor
leave
shll
loop
cs
je
jbe
xor
add
dec
inc
int3
jo
dec
dec
mov
jl
jns
pop
in
out
mov
add
stc
imul
jbe
mov
adc
push
jl
int3
cmp
stos
add
sub
cmpsl
mov
lea
xor
jmp
mov
fwait
imul
js
aad
add
cli
push
jp
jno
or
test
popa
stos
or
cld
fwait
adc
lret
test
nop
sub
mov
outsl
aam
and
or
jb
jp
jbe
mov
stos
mov
je
out
into
loope
popa
dec
lock
xorb
dec
jecxz
mov
inc
popf
jb
push
jo
push
add
pop
aas
pop
cmp
cs
nop
insb
addr16
jo
bound
loopne
push
push
inc
pop
les
add
and
lods
fnstcw
mov
add
cmp
fchs
mov
lock
xorb
inc
inc
fs
pop
std
push
mull
enter
dec
pop
push
das
inc
nop
mov
jb
mov
test
mov
jge
add
fwait
pop
dec
insl
or
cmp
and
mov
or
add
hlt
rcr
sub
inc
ret
insl
push
mov
adc
mov
orb
mov
mov
in
and
daa
inc
clc
xchg
cmc
and
in
cltd
out
ljmp
clc
xchg
push
loop
imulb
add
repnz
xchg
add
xchg
fidivl
daa
inc
push
sub
lods
outsb
xlat
aam
jle
aad
or
int
jl
ss
sbb
pop
ja
popf
aaa
mov
push
shrl
cwtl
int3
popa
das
jns
cli
sub
ja
test
data16
dec
pusha
clc
mov
xchg
int
fpatan
cmpsb
into
cwtl
lahf
cmp
jl
outsl
daa
sub
rclb
loope
jo
pop
fdivrs
push
push
inc
sub
ret
sub
imul
inc
je
lods
or
push
lods
dec
push
inc
pop
mov
dec
test
lcall
xor
movsl
aam
sbb
fistpl
in
orl
sub
std
out
sbb
std
sub
mov
leave
sti
dec
leave
ds
test
xchg
movsb
nop
pop
and
dec
sub
sbb
push
push
test
fnstsw
and
ss
imul
data16
aam
inc
pop
gs
inc
cld
icebp
fwait
adc
dec
and
ds
or
adc
lsl
mov
out
xchg
pop
add
aam
cmp
das
cs
and
bound
hlt
test
out
popf
idivl
gs
xor
push
sub
push
push
mov
push
lods
jo
jecxz
je
dec
ret
mov
mov
outsb
push
outsb
ljmp
cmpsb
out
fmull
loopne
xor
pop
jno
sbb
pop
fcomps
xlat
testb
mov
lds
add
or
push
insb
ret
inc
mov
pop
push
repz
or
fdivl
test
lock
cmpsl
push
push
sub
dec
push
imul
pop
mov
mov
mov
sarb
sbb
sub
push
pop
out
cmpsl
mov
jmp
fwait
add
fsubs
xor
mov
loope
add
leave
cmp
push
cmc
nop
clc
fidivs
mov
and
mov
pusha
jb
jecxz
sti
rorb
mov
stos
sub
jmp
sbbb
and
hlt
pusha
stos
jb
ret
jl
fcompl
adc
pop
ss
xchg
mov
add
lods
mov
jb
jge
jb
pop
mov
jle
push
outsl
test
movsl
mov
jne
jb
add
or
push
shl
and
fsubl
adc
sbbl
ret
dec
test
push
decb
ljmp
sub
lods
js
and
inc
push
shr
ret
aad
out
leave
lahf
push
jmp
xor
loope
mov
or
and
add
or
inc
sub
mov
dec
scas
cmpb
neg
push
lea
mov
out
dec
cmc
xor
decb
dec
xchg
ljmp
stos
int
inc
push
data16
pop
sbb
daa
in
cmpsl
cmp
jns
cmp
insl
iret
or
push
cmp
cmp
int3
sbb
rolb
cmp
mov
lcall
push
and
push
xor
fistl
cld
pop
dec
xchg
je
dec
jne
dec
sub
jo
jmp
dec
pop
arpl
cmp
push
stos
lcall
mov
in
inc
add
xor
mov
mov
pop
out
xor
xchg
jbe
sti
dec
xlat
sbb
cmp
or
loope
pop
repz
enter
out
negb
fisubrl
das
pop
mov
sbbb
outsl
mov
sarb
mov
jp
ret
and
pop
das
add
ja
shll
loop
jo
mov
cltd
push
pushf
xchg
lods
or
orb
ficoml
ljmp
stc
adc
pop
inc
dec
sbbl
ret
outsl
ret
out
jg
loope
sub
cmp
xor
mov
add
dec
out
jp
in
insl
push
adc
stc
push
jmp
hlt
or
pop
push
cmp
movsb
idivb
aad
bound
orl
add
ss
outsb
rcr
fdivrp
push
imul
sub
ds
sahf
pop
sti
into
sbb
rorb
cmp
movsb
adc
add
xchg
in
movsb
loop
in
push
inc
call
dec
in
js
movsl
mov
or
jmp
inc
adc
lods
insb
add
mov
cld
mov
imulb
dec
aaa
xor
xchg
xlat
add
outsl
push
scas
js
pushf
das
mov
test
inc
pop
mov
popa
ret
jecxz
push
dec
leave
rcll
imul
sbb
sahf
vminpd
bound
fstpl
mov
adc
sub
test
sbbb
outsb
repz
orb
cmp
dec
in
sahf
push
in
inc
sub
sub
int3
mov
cmp
insb
jge
push
sarl
ja
mov
cmp
or
cli
mov
cld
iret
and
fldt
dec
addr16
push
sbb
iret
xor
cmpsb
jmp
adc
and
push
gs
adc
mov
sub
popa
sbb
hlt
hlt
and
or
pop
xor
pop
test
cmp
bnd
jg
sbb
adc
xor
or
adc
inc
xchg
lcall
sub
call
dec
pusha
push
jg
xchg
xor
jp
adc
std
testb
or
cmp
les
push
das
scas
cvtps2pi
adc
add
hlt
dec
adc
into
cs
mov
jle
sbb
mov
jb
ljmp
popf
xchg
pop
xlat
pop
pop
pop
cs
stos
int3
xchg
repz
xor
rorl
mov
mov
rclb
sbb
lret
testb
xchg
in
mov
inc
daa
pop
aad
popf
movsb
push
push
lret
add
jl
sbb
and
scas
cmc
into
mov
aam
inc
sub
jne
std
rcrl
push
outsb
mov
mov
and
lret
xlat
aad
adc
mov
es
mov
arpl
push
mov
filds
add
add
insl
pop
and
div
loopne
cltd
cmp
shl
and
pushf
mov
and
jmp
push
xor
iret
and
std
adc
xchg
int3
xchg
sub
scas
imul
jae
add
dec
in
jp
push
push
xchg
mov
das
sbb
push
mov
testl
sbb
push
jmp
xchg
mov
or
addr16
mov
or
add
jnp
fcmovne
das
fstl
aad
add
data16
sub
pop
pop
jmp
into
sbb
ret
ja
sub
lods
xchg
push
sbb
and
adc
insb
popf
pop
adc
in
push
lahf
movsb
pop
add
enter
dec
xor
lea
jb
xchg
call
dec
sbb
xchg
sub
inc
or
pushf
ljmp
addb
and
jmp
mov
lea
jl
jno
jae
imul
pop
jmp
repz
or
fdivrl
pop
arpl
pop
xor
mov
sub
jge
fdivrl
sub
mov
push
xor
out
fldt
pop
fdivr
dec
or
mov
int
xchg
popa
sahf
outsl
sbb
ja
mov
lcall
mov
push
sbb
xor
enter
ret
xchg
xor
xchg
and
xor
jmp
ds
jmp
dec
je
mov
mov
lods
pop
adc
je
xchg
inc
add
jp
xor
add
inc
repz
aaa
or
les
call
lahf
pop
push
rol
inc
inc
jmp
cmc
sti
sbb
add
rcl
pusha
and
frstor
imul
movsb
mov
popf
js
js
gs
shrb
sub
mov
out
or
div
cld
pop
push
jbe
jg
in
lcall
dec
mov
or
loop
arpl
push
mov
clc
jmp
lods
rol
mov
dec
xchg
and
inc
adc
movsb
rorl
mov
out
mov
addr16
cld
mov
mov
insb
sbb
sbb
fcomip
out
cmp
scas
das
imul
fbstp
sbb
stos
adc
adc
push
or
xchg
aad
and
xor
xor
std
pop
mov
ret
jno
insl
dec
loop
imul
jp
cmp
xlat
mov
orl
mov
out
pop
dec
sub
inc
sub
enter
sti
jmp
mov
arpl
add
icebp
lods
jnp
or
and
sbb
sub
adc
cwtl
sahf
jns
hlt
inc
pop
out
inc
aam
out
jno
test
call
cltd
iret
flds
xor
jecxz
cwtl
idivl
pop
adc
mov
lods
mov
cmp
aad
cmp
fimuls
sti
inc
mov
xchg
cmpl
dec
add
mov
and
sbb
leave
or
out
adc
in
notl
fs
sub
dec
xlat
fnstsw
test
call
add
mov
test
outsl
xchg
lret
mov
mov
xchg
ja
mov
push
add
jns
test
repz
loop
jne
inc
insb
dec
repz
and
aad
or
fmuls
jns
ljmp
in
push
xor
adc
mov
xchg
push
and
mov
mov
pop
xlat
dec
rcr
pop
into
and
mov
cmpb
sub
popf
loopne
dec
arpl
xor
dec
or
mov
mov
pop
lahf
adcb
push
aad
movsb
xor
fistpl
test
jb
sar
mov
xchg
pop
dec
daa
stc
flds
sahf
stc
cld
inc
into
push
fisubs
into
xchg
sub
inc
scas
jns
add
sbb
mulb
js
mov
test
inc
xor
sbb
cld
adc
push
repnz
aas
mov
stos
adc
or
jae
addb
xchg
sub
xchg
fidivrs
rcrl
ret
addr16
std
jg
call
repz
mov
das
xchg
sub
jo
push
lret
mov
mov
in
movsb
or
vmovups
syscall
sbb
repnz
mov
int
sbb
fisubs
les
xor
lea
xchg
cmp
jg
rol
inc
std
cmpsl
jns
aaa
xchg
add
adc
sbb
sahf
pop
push
pop
sbb
cmc
and
or
mov
cld
mov
test
popf
divb
aaa
insl
jge
inc
and
movsl
and
or
adc
xchg
js
push
imul
push
scas
mov
or
sti
xchg
jae
cmp
mov
inc
mov
cli
xor
xchg
push
dec
lret
jo,pn
int3
out
fldt
lret
jge
es
ljmp
std
jecxz
outsl
fnstsw
arpl
in
call
enter
and
fmull
mov
hlt
and
insb
mov
dec
aam
inc
mov
push
into
add
sub
inc
and
push
jp
sub
mov
test
xchg
mov
data16
fdiv
xchg
or
jp
je
pop
insl
test
xor
out
scas
in
cmpsl
inc
pop
xchg
in
sub
or
jno
std
mov
std
inc
icebp
out
movsl
mov
dec
jmp
cli
scas
xchg
in
lret
stc
mov
jns
push
dec
adc
pushf
pop
pop
loopne
loope
pushf
shrl
mov
sbb
pop
enter
push
xchg
aas
rcrl
arpl
xchg
into
test
pop
pop
xor
xor
push
push
mov
nop
xchg
sbb
inc
xor
mov
add
cmp
out
add
sbb
ss
add
clc
or
cmp
div
out
cwtl
cmp
enter
dec
dec
mov
xor
nop
push
outsb
out
mov
jo
fcomps
inc
dec
mov
mov
inc
shll
and
xor
leave
cld
dec
iret
xor
xor
sub
xchg
and
xchg
mov
dec
or
push
icebp
fidivs
shlb
xchg
out
outsb
ret
mov
pop
fdivrl
mov
insb
das
mov
pop
pop
and
push
cmp
arpl
rcrb
pop
pushf
stos
shrl
stos
inc
adc
sub
rclb
shlb
inc
adc
push
push
sub
mov
call
mov
mov
sub
inc
repnz
mov
fldenv
mov
aaa
sbb
mov
test
movsb
sub
subl
and
xchg
jmp
fiaddl
lret
pop
imul
jb
lods
jle
stos
repnz
leave
xchg
int3
dec
fwait
bswap
fbstp
adc
mov
add
xor
cmp
xlat
lret
hlt
pop
in
call
hlt
fwait
adc
mov
fistl
inc
pop
xchg
or
sub
xchg
jbe
test
jo
je
add
cmp
cmp
scas
mov
push
mov
pusha
and
das
rcl
setle
jnp
push
mov
es
and
std
rcrb
jno
mov
mov
push
icebp
mov
into
rcrb
adcb
inc
mov
add
std
mov
xor
stc
push
stc
adc
ret
sbb
leave
jp
cmp
jae
jg
cltd
hlt
pop
scas
add
inc
dec
das
or
fimuls
xor
dec
shrl
mov
or
jns
and
outsb
and
loopne
sbb
hlt
mov
subl
dec
aad
jge
or
and
add
pop
pop
fidivrs
enter
jmp
mov
ret
push
gs
iret
xchg
stc
loopne
or
sbb
jp
lods
mov
rorb
push
leave
sbbb
das
dec
loop
into
adc
lcall
stos
daa
adc
int
mov
push
repz
mov
pop
imul
push
js
fisttpl
and
adc
negb
sub
jae
into
pop
jle
fdivrl
cld
cli
imul
frstpm(287
test
push
push
outsb
mov
out
mov
nop
in
jns
imul
cmp
or
inc
sub
rep
sub
movsb
arpl
mov
test
movsb
and
lahf
test
popf
dec
stos
out
mov
dec
pusha
mov
jmp
in
and
sub
push
sub
mov
xlat
mov
xchg
sub
pop
fcom
and
push
repz
cmpsl
in
imulb
cwtl
push
cmc
jb
dec
test
jle
cltd
invd
dec
pop
cmp
sbb
popa
aam
test
or
jo
mov
pop
inc
pop
sbb
dec
mov
enter
imul
sub
xchg
lcall
fwait
scas
mov
sbb
fsubrl
mov
fdivr
mov
xchg
loope
and
cmc
xchg
xchg
adc
test
mov
pusha
cmp
std
imul
in
mov
dec
hlt
mov
inc
shrl
mov
mov
gs
xor
orb
jecxz
jge
adc
push
lods
fimull
mov
inc
inc
inc
pop
outsl
cwtl
push
pop
enter
mov
xchg
xor
icebp
sbb
pop
xor
fsts
incb
outsb
scas
test
add
mov
lcall
sbb
es
clc
test
ja
fs
mov
mull
repnz
pusha
or
xchg
pop
arpl
pop
imul
inc
movsl
mov
jp
shlb
add
shlb
jo
stos
jns
sahf
dec
fidivl
fdivs
add
ja
inc
mov
xchg
aam
ljmp
ficoms
add
js
inc
sbb
std
enter
mov
jge
test
daa
mov
xor
mov
imul
popf
imul
mov
jecxz
idivb
call
xchg
jg
cmc
outsl
sub
js
mov
je
pop
mov
jge
xchg
mov
lahf
and
shll
mov
rorb
xlat
std
dec
and
ret
repz
in
loopne
cmova
popa
aam
sbb
addl
mov
or
cs
mov
pop
add
mov
test
cld
xchg
add
sub
iret
pusha
push
test
data16
pusha
or
movsl
test
loop
loope
clc
aaa
in
inc
lcall
mov
mov
testb
mov
mov
cmp
add
ds
jl
lods
in
rolb
out
repnz
xchg
fmuls
xor
inc
cmp
inc
imul
xchg
sbb
je
test
out
mov
fldl
push
jnp
lret
jne
and
xor
aam
addr16
cmp
mov
das
sub
sbb
jle
insl
sbb
gs
sbb
push
rcrb
std
mov
popf
jp
mov
pusha
pop
arpl
mov
leave
mov
cmc
mov
rol
insl
subl
shlb
xor
hlt
jp
daa
add
push
mov
xchg
sub
add
call
adc
ljmp
popf
mov
xor
test
movsl
std
loopne
shrl
pop
mov
jb
lock
sahf
jg
out
pop
stc
out
inc
xor
jle
adc
inc
add
fcoml
lfs
movsb
sar
adc
insb
pop
mov
cltd
icebp
mov
cmp
mov
xchg
inc
mov
lds
cmp
pop
xchg
or
aad
cli
jns
roll
jb
xchg
mov
lar
es
mov
into
scas
mov
jns
adc
mov
pmulhuw
dec
mov
movsl
dec
dec
lret
icebp
cld
stc
pushf
and
bound
mov
sahf
les
pop
mov
xchg
lods
jns
cmp
and
repnz
jae
adc
push
pop
sub
adc
or
add
mov
push
dec
cmp
xor
fwait
xchg
lods
jecxz
push
dec
shlb
pop
xor
push
gs
pop
imul
sbb
sti
jg
out
daa
in
fdivrs
je
imulb
popa
sub
pop
push
gs
dec
int3
aas
pop
sahf
scas
adc
sbbb
fidivl
jnp
jge,pn
mov
inc
fstpt
mov
rolb
adc
jmp
out
mov
mov
in
sbb
aad
pop
cld
sti
xor
les
xchg
dec
cltd
into
push
dec
iret
sub
gs
iret
aas
xchg
or
xor
rcl
outsb
dec
pop
inc
pop
cli
lcall
xchg
test
das
sbb
mov
sbb
push
popa
dec
mov
or
clc
addr16
adc
sub
loop
insb
inc
sub
sub
mov
mov
mov
or
sub
sbb
sub
out
popf
sbb
pop
add
hlt
add
dec
sarl
call
scas
pop
push
jmp
fsubrp
lret
cmpl
push
imul
dec
add
adc
and
xor
sar
jmp
fcomi
lret
cmpl
push
imul
dec
add
adc
and
xor
sar
in
ret
icebp
iret
cmpb
mov
push
outsl
push
aas
or
and
pop
std
punpckhwd
mov
test
cmp
inc
cltd
push
fisubs
jae
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
ror
fchs
jmp
cli
rorb
push
pop
pusha
imul
xor
xor
ror
fchs
jmp
nop
cltd
mov
dec
push
pop
pusha
imul
and
xor
fxch
leave
fprem
jmp
mov
pop
dec
jae
aas
sbb
sbb
pop
jg
jl
addr16
test
addl
xor
stos
stos
sub
mov
adc
clc
mov
das
push
cwtl
mov
jl
mov
mov
cmp
mov
and
iret
push
adc
adc
sub
in
pop
pop
scas
aam
xor
sub
sbb
sbb
lods
xor
sub
aam
jg
xchg
cwtl
pop
ret
mov
lret
mov
cmpsb
push
in
cltd
decl
adc
stos
and
cmp
mov
mov
in
ret
inc
cltd
inc
mov
adc
clc
pop
adc
fildll
and
sub
cmpsl
stc
ud1
xchg
push
push
mov
fisttpll
sbb
or
and
xor
leave
leave
fchs
jmp
sbbb
dec
dec
pop
js
imul
sub
push
lods
int
cwtl
test
test
repz
div
in
out
mov
inc
xor
adc
or
push
push
pop
ja
lods
mov
mov
aad
shl
add
xor
sbb
addr16
push
jg
push
movsl
lea
enter
mov
dec
push
pop
pusha
imul
and
xor
ror
fchs
jmp
nop
cltd
mov
dec
push
pop
pusha
imul
and
xor
ror
mov
add
cmp
std
bnd
es
popa
mov
insl
sbb
xlat
inc
fwait
push
in
push
lret
cmp
iret
and
push
push
mov
pop
clc
and
add
lret
dec
outsb
jle
lret
push
mov
std
ss
mov
cld
imul
add
push
daa
lock
lds
ficompl
mov
js
xchg
iret
outsb
lret
in
add
out
sbb
mov
repnz
fistps
mov
sub
je
jle
xchg
test
dec
push
popa
sbb
mov
subl
jb
push
mov
or
incb
fldz
mov
stos
xlat
xchg
mov
daa
or
jp
jp
mov
int3
ja
adc
in
or
mov
imul
cwtl
nop
add
flds
push
lahf
sbb
movsb
cli
add
dec
and
or
cld
xlat
fs
pop
push
hlt
stos
xor
repz
cs
pusha
mov
jnp
cmp
loope
sbb
aad
adc
inc
mov
mov
inc
sbb
enter
mov
ret
jo
fucomp
fs
xchg
or
push
xor
xor
jp
pop
mov
jmp
xchg
dec
xchg
gs
mov
mov
incb
inc
inc
mov
inc
inc
fidivrl
lret
lock
cli
jmp
xchg
lods
mov
pop
in
push
jecxz
cmp
testb
fidivrl
dec
sub
pop
push
ja
push
fbstp
mov
aas
pop
or
dec
cmp
inc
imul
adc
and
and
into
les
push
fs
mov
inc
mov
je
adc
xchg
js
ja
fadds
or
fwait
popf
mov
not
push
adc
imul
insl
xchg
adc
push
dec
aaa
cmp
sub
aaa
insb
mov
gs
cwtl
push
jecxz
sbb
add
fcompl
push
movsl
add
push
fwait
adc
popa
push
cltd
mov
dec
es
ja
iret
add
jge
fwait
in
movsl
popf
aaa
add
pop
int3
mov
mov
shll
jae
xchg
dec
dec
cmpsl
dec
movsl
push
jb
jl
mov
sbb
push
or
gs
jb
orb
xchg
mov
incl
sbb
aas
mov
orl
cmp
add
pop
mov
cmp
mov
cmc
scas
and
aad
out
repnz
xchg
in
jne
sbb
mov
loop
imulb
xorl
or
jl
sti
mov
xorl
fadd
mov
movsb
repnz
adc
out
call
pusha
clc
lcall
dec
xchg
fsub
subb
in
push
es
sbb
jmp
aas
cwtl
pandn
nop
outsl
pop
pusha
out
inc
or
icebp
cmp
int3
adc
dec
arpl
xor
fsubl
mov
sbb
sar
add
push
push
lods
scas
mov
dec
pop
test
and
xor
sbbb
and
lret
data16
mov
je
fmul
out
sub
aad
add
out
mov
aaa
sub
and
push
out
jge
jne
fistpl
test
xchg
jbe
inc
out
scas
daa
outsl
cs
add
mov
push
push
outsb
ret
pop
popf
fstpl
out
or
pusha
push
stc
aaa
mov
es
test
sub
and
loop
negl
adc
jge
fs
cmp
cmp
xchg
out
fistps
loop
outsb
sbb
cwtl
or
out
xchg
insl
loope
pop
mov
cmp
mov
mov
in
xchg
in
pop
or
shll
rcl
lds
movsb
inc
jb
sub
fmulp
cmc
test
movsl
xor
cmp
pop
inc
and
out
jle
jg
es
sahf
fs
lret
leave
lcall
push
fucomp
out
pop
mov
mov
insl
or
andb
jl
mov
push
jmp
mov
fcompl
sub
ss
xchg
out
fdivrl
out
inc
lods
xchg
movsl
cmpsb
dec
mov
pop
iret
adc
jg
fucomip
ljmp
cmp
mov
sub
lods
jmp
xor
inc
imul
push
push
inc
iret
lods
add
add
cmp
flds
arpl
rorl
scas
rolb
jb
sub
icebp
push
sahf
mov
or
or
mov
cmp
mov
sbb
xor
jae
lret
divb
adc
loopne,pn
jle
movsl
ret
andl
jl
inc
rcrb
js
mov
adc
push
stos
out
jecxz
data16
fs
jge
push
sub
inc
push
ljmp
lods
dec
xchg
adcl
mov
lock
jns
stc
xor
repnz
scas
sub
or
ret
aad
fisubl
sbb
fcoml
aaa
mov
lods
aam
sbb
lret
imul
arpl
cmpl
sbb
inc
mov
lods
mov
pop
adcl
add
mov
or
iret
lea
pop
leave
or
repnz
dec
fistpll
insl
shlb
mov
sub
arpl
mov
nop
xchg
inc
mov
out
pusha
iret
xchg
mov
mov
outsb
fmuls
imulb
fdivs
jecxz
mov
add
mov
subl
jae,pt
movsl
and
sti
setge
mov
adc
push
xchg
add
sti
mov
push
mov
add
lods
mov
pop
cmp
sub
push
jg
jb
js
pop
dec
dec
ja
pop
sbb
pop
int
fwait
adc
sbb
and
lret
stc
inc
mov
push
mov
addl
and
pop
mov
aas
and
push
add
and
pop
call
or
je
add
pop
je
ficompl
or
sub
cmpb
dec
sub
mov
mov
lods
cmp
mov
mov
mov
fistpl
push
xchg
and
dec
jo
sbb
cmpsl
icebp
xchg
xor
das
push
pop
sbb
ss
push
sub
pop
adc
mov
pop
repz
and
pusha
jecxz
pop
add
fsts
lahf
pop
fnstcw
mov
cmpsl
dec
cs
test
or
add
jns
sub
and
cmpsl
int3
or
in
mov
inc
lcall
bnd
mov
pop
shll
pop
mov
and
dec
mov
xor
push
leave
pop
add
in
pop
loopne
or
adc
mov
imul
pop
xchg
sti
adc
stos
out
and
outsl
imul
add
dec
jecxz
scas
mov
arpl
fdivr
cli
aaa
jb
das
add
push
shl
xchg
stos
sub
dec
mov
xchg
fildll
push
mov
xlat
mov
cmpsb
and
cwtl
mov
jecxz
test
out
jb
in
jecxz
loop
rolb
cmp
inc
in
inc
dec
jnp
lds
cmp
imul
xchg
sub
xchg
or
std
mov
in
sbb
or
or
mov
ds
add
dec
jnp
jmp
fwait
cmpsb
imul
std
add
xchg
dec
jl
ja
mov
sbb
les
cld
xor
fldt
xor
scas
out
loop
sbb
add
in
push
mov
insl
hlt
gs
lds
adc
sbb
xor
movsb
mov
mov
aad
and
mov
addl
fcomps
fstl
adc
cmp
lahf
mov
jmp
aas
into
data16
mov
dec
les
xor
mov
sub
test
fildl
loop
push
movsb
pop
and
pop
mov
inc
cmpsl
scas
push
pop
cmp
cmpsb
test
push
aam
pop
pusha
mov
jg
rcrl
aas
inc
jns
sbb
shll
roll
push
push
loop
ljmp
stos
or
mov
jae
adc
sbb
gs
mov
xchg
scas
and
fdivrl
xor
add
jnp
stc
jo
sub
adc
dec
sbb
or
es
fnsave
test
pop
mov
push
jo
loopne
repz
inc
cmpsl
mov
daa
fst
loop
pushf
xor
js
ret
scas
notb
mov
cmpsb
or
cli
xlat
cmp
mov
mov
xor
pop
xlat
xor
or
and
pop
adc
cmpsl
roll
and
or
sbb
xchg
inc
jo
inc
stc
call
inc
pop
push
sahf
xor
rolb
lock
or
sbb
repnz
sbb
inc
sub
out
cmp
mov
push
mov
lods
dec
jmp
add
mov
and
imul
out
pop
cmpsb
fidivrl
sbb
mov
loopne
test
test
adc
pusha
and
sbb
or
and
mov
shrb
and
adc
stc
jge
dec
sbb
jp
fnstcw
enter
lods
xchg
nop
inc
add
rcr
scas
add
jae
sarb
leave
inc
imul
and
aaa
pusha
and
inc
mov
addr16
adc
out
pop
into
push
xchg
out
test
out
jbe
mov
ljmp
push
inc
xchg
loop
cmp
push
or
test
adcl
push
stos
xchg
je
andb
mov
imul
cmp
dec
mov
das
fldenv
mov
dec
in
pop
ja
dec
and
arpl
out
sub
gs
mov
movsb
sub
jl
push
aas
push
popa
dec
lds
out
std
pop
inc
data16
jp
into
loop
mov
xor
mov
push
fistpl
sub
pushf
ficompl
pop
insb
pusha
pop
in
repnz
sbb
lret
xor
and
push
divb
mov
mov
and
nop
aad
jae
fldenv
scas
push
fistpl
mov
xor
outsl
jb
adc
je
sub
xchg
mov
cmpsb
je
enter
ja
orb
cld
and
lret
imul
cwtl
and
test
cmpsl
and
and
sbb
repz
sbb
push
dec
fs
cmp
dec
movl
push
inc
loope
popa
test
sbb
data16
mov
aam
pop
add
mov
jmp
dec
pop
inc
mov
mov
in
push
lret
outsl
pop
mov
adc
fdivs
mov
data16
fsubp
push
mov
insl
wbinvd
add
adc
mov
insl
test
shrl
push
adc
fcmovbe
sbbb
dec
es
or
jne
pop
add
sub
pop
xor
sub
jecxz
pop
and
test
mov
sbb
xor
cmp
out
push
popa
lret
or
js
and
jmp
dec
sub
jp
stc
and
xchg
and
cmpsb
mov
xchg
sbb
adc
xor
lret
lret
stos
mov
jg
lret
and
xor
ss
pushf
mov
enter
cmp
sbb
leave
lahf
loope
lahf
jbe
loop
popa
ja
pushf
and
icebp
push
sbb
pop
icebp
shrl
sbb
mov
xchg
aam
ret
and
xchg
jae
adc
popa
test
cmp
bound
aad
jb
fcomps
push
fxch
ljmp
addr16
out
sub
shll
xlat
pop
push
outsb
jp
mov
ja
jp
lods
pop
lret
std
dec
sbb
mov
mov
fidivl
scas
outsb
repnz
inc
inc
mov
mov
sub
cmc
mov
mov
inc
push
in
lret
mov
dec
push
jmp
hlt
mov
lods
aad
pop
xor
std
sarl
and
pop
ljmp
loop
pop
sbb
pushf
dec
mov
pop
jae
add
pop
push
mov
daa
loop
mov
jns
shlb
pop
xchg
and
fwait
xchg
dec
lcall
ljmp
xlat
xchg
out
lock
test
jmp
sbb
rcll
insl
sbb
testb
xchg
icebp
js
mov
data16
cmp
repz
lahf
mov
mov
or
sbb
lahf
das
jo
fiadds
push
mov
xor
idiv
fs
or
adc
add
movsl
xor
dec
int
fs
cmp
push
xor
cmpsb
or
push
add
ja
shlb
dec
addr16
cltd
mov
adc
vpaddq
xor
aas
mov
imul
lods
movsl
scas
jle
int3
cmp
xor
mov
imul
insb
xlat
jae
pop
cmp
pop
mov
aaa
adc
sbb
push
divl
xor
dec
scas
adc
call
outsl
dec
sbb
andb
sub
fnsave
lret
roll
or
mov
xor
pop
mov
popf
inc
sub
sub
inc
adc
ljmp
loop
popa
es
test
push
and
jb
cmpsl
pop
jno
sub
lea
dec
add
xchg
mov
mov
inc
pop
in
outsb
pop
jl
notb
mov
leave
shrb
sub
mov
xchg
dec
pop
jmp
pop
data16
sbb
sbb
movsl
dec
sahf
mov
sub
test
mov
mov
clc
fs
push
inc
inc
aas
popa
dec
cld
sar
popa
arpl
das
xchg
scas
mov
aas
sub
push
icebp
push
push
jecxz
je
lret
jmp
incl
popa
rcl
push
inc
lret
popf
fidivl
mov
mov
lcall
mov
lock
imul
xor
not
push
int
sub
or
add
mov
or
xchg
repnz
adc
mov
sbb
fcmove
jmp
fs
mov
inc
cwtl
in
dec
pop
sbb
jp
mov
pop
dec
ja
pop
fstpt
and
and
xchg
add
adc
cmp
leave
cmp
mov
or
stc
stc
sbb
pop
adc
xor
mov
cld
xor
jp
mov
sbb
shl
cmp
adcl
mov
inc
pop
pop
imull
cld
sub
aad
sbb
push
push
jb
stc
inc
mov
jb
adc
sub
mov
icebp
sahf
popa
fucomip
test
shlb
imul
ds
mov
mov
shll
cmp
lret
inc
adc
js
vpunpckhdq
sub
pop
pop
or
jl
ds
repnz
cmp
adc
xor
loop
mov
call
mov
sub
dec
ret
pop
jae
ljmp
mov
popf
xor
dec
cmpsb
push
mov
inc
test
xchg
out
mov
iret
fldl
aas
jmp
mov
xchg
push
mov
jecxz
iret
jae
mov
cmpsl
and
jns
ds
jmp
pop
mov
sbb
popl
test
sbb
lock
adc
leave
or
sbb
cmpsl
pop
xor
sbb
mov
sub
jbe
inc
lods
or
out
xor
mov
add
ss
jmp
or
add
fsubr
cs
and
sahf
mov
addr16
mov
fmull
cmp
in
pop
scas
mov
push
test
or
mov
push
idivb
add
xlat
mov
into
mov
add
clc
int
imul
stc
nop
stos
movsl
push
jne
adc
fwait
xor
mulb
jmp
xchg
sub
rclb
andb
arpl
rclb
sti
scas
mov
loope
lods
outsl
push
push
mov
das
pop
xlat
xchg
setle
and
lea
pop
cmpsb
and
xor
push
and
mov
fisttpll
jae
js
or
orl
jg
add
cmp
lock
sbb
xor
sti
subb
adc
decl
pop
in
or
dec
imul
roll
adcl
out
stos
and
push
int
mov
mov
pop
jnp
mov
inc
cwtl
hlt
mov
xchg
cmpsb
lds
leave
fs
out
es
adc
orl
mov
enter
mov
xchg
add
xchg
dec
pop
mov
rorb
jns
add
lret
pop
jnp
outsb
into
jecxz
xchg
add
scas
orl
test
imul
add
push
xor
movsb
mov
pushf
pop
jns
mov
movsb
xchg
idivl
rcrl
xchg
aaa
mov
scas
cmpsb
jo
cwtl
mov
ja
xor
scas
or
push
mov
cmp
popf
jp
scas
rol
lret
mov
and
jg
sub
dec
pop
iret
mov
and
cmpsb
stc
frstor
jno
mov
pop
jae
xchg
pusha
mov
xor
pop
xchg
and
scas
daa
jl
inc
and
repz
ss
test
mov
mov
fisttps
rcrb
xchg
or
in
shl
js
mov
inc
dec
fcoms
dec
push
aas
inc
and
jg
inc
adc
sbb
lret
add
push
push
filds
xchg
mov
je
mov
fldcw
cwtl
into
sbb
mov
testb
icebp
xchg
fmuls
das
jp
rolb
mov
arpl
dec
gs
jbe
cltd
or
cmp
xchg
or
push
lret
incl
popf
jl
fimuls
mov
insb
in
mov
in
fdivrl
or
cmc
int3
jl
and
sbb
dec
arpl
mov
push
push
movsb
jo
and
in
pop
cmpsb
xor
lods
adc
pusha
mov
mov
mov
pop
add
mov
mov
dec
cmp
scas
outsb
jl
add
lods
imul
xchg
into
pop
ret
sub
or
fdivrl
cmp
in
lret
lods
jb
aas
sahf
icebp
cmpsb
repnz
xchg
or
mov
enter
mov
sub
imul
cmpsl
mov
addb
xor
jne
addl
es
xor
sarl
cmpsb
nop
cmc
xor
fistpll
stc
adcl
jp
ja
sub
lret
stos
push
mov
aas
aam
dec
adc
jo
mov
pop
add
jnp
add
jl
pushf
sbb
xchg
sbbb
xchg
insl
in
xchg
sub
inc
js
jns
cmc
movsb
pop
sub
push
out
jo
fnstsw
cmp
in
pop
mov
out
aam
lcall
ffree
xchg
jb
push
ret
outsl
repnz
ret
aaa
scas
xchg
pop
add
in
push
je
add
iret
fimuls
clc
ljmp
xlat
pop
repnz
popf
or
jb
sbbb
sti
nop
mov
mov
call
mov
pop
cld
pop
cld
scas
sahf
sbb
pop
sub
ljmp
outsb
inc
mov
pop
int
insl
xchg
xor
inc
xor
rcl
ja
imul
in
xor
sub
xchg
ret
dec
out
mov
sub
test
pop
dec
sbb
fwait
and
mov
mov
bswap
and
fsub
pop
imul
icebp
xchg
push
cmp
es
popa
adc
mov
rol
aad
and
cmp
ds
mov
imul
dec
daa
fnstsw
popa
cld
lret
push
loope
adc
cmp
lods
ret
lret
test
cwtl
sbb
jmp
and
mov
sub
sub
sti
inc
loope
sti
mov
cmpsb
aas
cmp
add
outsl
push
pop
mov
sbb
ret
pushf
mov
out
fcoms
mov
ret
mov
xlat
scas
insb
xor
mov
outsb
dec
add
cmp
sahf
inc
daa
movsl
nop
sbb
mov
or
push
das
arpl
loop
repnz
adc
inc
pop
xchg
or
sub
mov
repz
in
inc
sub
loope
mov
and
mov
lahf
cmpsl
adc
int
xchg
scas
loop
push
andb
movsb
lds
add
dec
jo
push
shll
imul
mov
sete
push
ficoml
add
int
mov
sub
push
push
sbb
fucomip
aad
xor
icebp
and
dec
xor
lahf
pop
cli
dec
mov
inc
out
xor
xlat
dec
ljmp
into
cmp
rclb
cmp
cli
adc
jmp
lock
repnz
push
lods
pop
in
cmp
test
pop
sub
inc
mov
pop
fadds
or
repnz
stos
sar
adc
lock
orb
mov
pusha
imul
and
xor
ror
fchs
jmp
nop
cltd
mov
dec
push
pop
pusha
imul
and
xor
ror
fchs
jmp
nop
cltd
mov
dec
push
pop
pusha
imul
and
xor
ror
fabs
jmp
nop
cltd
and
scas
repz
push
ja
cwtl
out
iret
lahf
mov
mov
mov
or
sub
dec
dec
sarl
outsl
jl
mov
mov
in
out
mov
add
sbb
sub
cmp
ds
pop
jg
outsl
jl
xchg
popl
iret
push
out
out
or
aas
dec
push
dec
dec
pop
add
cmp
push
adc
shr
mov
add
sbb
xlat
and
xor
mov
xlat
xchg
xchg
sub
inc
movsl
push
in
fistpll
add
jl
ret
or
add
pushf
test
in
aad
out
mov
divl
or
sbb
inc
stos
ret
pop
jmp
outsl
cmp
push
test
mov
xor
cmpsb
cwtl
out
jns
in
and
rcl
mov
jo
flds
or
arpl
push
push
enter
test
push
lock
jecxz
aam
test
dec
iret
dec
cmpb
stc
mov
push
push
ss
inc
inc
jns
in
ljmp
roll
mov
outsb
insl
jp
fwait
mov
int3
iret
fdivr
in
out
in
or
add
xor
dec
inc
jg
outsl
jge
mov
out
stc
leave
jmp
mov
outsl
arpl
dec
sub
fldcw
push
pop
sbb
pop
adc
in
cmc
out
sarl
cwtl
stos
into
insl
js
jns
dec
das
ds
sub
add
pushf
stc
enter
dec
fdivr
in
out
cld
pop
or
sbb
sub
cmp
dec
dec
pop
jg
outsl
jl
mov
mov
in
out
cld
pop
or
sbb
sub
cmp
dec
dec
pop
jg
outsl
jl
mov
and
sarb
scas
and
lods
xchg
fsub
add
imul
lahf
inc
and
mov
rcrb
ds
sbb
int3
fistpl
xlat
adc
movsb
pop
xchg
pusha
mov
aas
mov
pop
cmc
jl
pushf
sbb
sbb
adc
pop
sarb
sti
jnp
dec
loope
or
xor
fs
push
mov
and
stos
push
loope
or
scas
cmc
pusha
sub
out
jmp
nop
adc
sub
push
mov
enter
adc
adc
imul
insl
loop
addr16
mov
in
lea
add
mov
sarb
pop
aam
jle
aam
cmc
int
sarb
or
xchg
xchg
pushf
mov
mov
out
test
pop
sti
jl
outsb
hlt
in
pushf
sub
stos
mov
imul
mov
mov
mov
pop
jno
test
jnp
push
add
mov
inc
or
xchg
fisubrs
es
lds
pop
std
push
idivl
push
mov
mov
pop
int3
sbb
mov
clc
mov
imul
ss
jne
cmp
addr16
das
cmpsl
xor
sarl
gs
aaa
in
add
inc
mov
and
cmp
cmp
divl
rclb
stos
stc
jle,pn
das
hlt
cmpsb
dec
adc
pop
out
imull
es
push
cmp
push
xchg
cmp
push
add
out
pop
mov
sub
xorb
cwtl
cmp
in
loopne
loop
sahf
ret
mov
cmp
push
xor
mov
xchg
adc
cld
stos
mov
cmpsl
rorb
cmp
cmp
aam
fldl
sbb
cmp
sub
pop
in
pusha
nop
xor
push
jb
pushf
out
xchg
pusha
mov
jb
outsb
adc
hlt
ljmp
aas
jo
mov
cmp
xor
add
fstpt
aaa
decl
out
loop
mov
std
pusha
push
and
mov
fstl
pop
repz
xor
movsl
shlb
pop
loop
jbe
cmp
test
imul
dec
popa
test
mov
jge
outsl
and
divb
fsubp
or
das
push
jo
popa
jo
repz
ss
ret
mov
cmc
sbb
sub
divps
cmp
xor
fisttpll
or
and
mov
scas
daa
sub
scas
mov
jno
adc
adcb
mov
pop
imulb
xor
push
testl
cmpb
add
adc
mul
outsl
cmp
andb
ret
enter
inc
das
shrl
add
adc
dec
test
lret
add
xor
xchg
je
mov
inc
leave
push
push
mov
lods
cmpsl
dec
push
movsl
filds
loop
cmp
aaa
scas
push
dec
lds
lock
fwait
or
das
nop
data16
xor
loop
mov
mov
imul
popa
roll
mov
or
jno
pop
movsl
das
and
out
dec
sbbb
cltd
ss
cwtl
cmpsl
or
cmp
out
add
jbe
fwait
dec
push
sub
ja
stos
addr16
adc
mov
or
or
cmp
inc
jle
xchg
nop
insb
mov
leave
add
adc
mov
mov
cwtl
dec
cmp
push
cli
or
enter
aaa
and
or
movsl
xchg
loopne
idivb
mov
xor
xchg
sbb
in
mov
stos
daa
fdivr
cmc
inc
adc
ret
or
call
sub
add
push
xor
out
call
inc
mov
popf
stc
stc
lahf
loop
test
pop
xchg
lock
dec
cmp
cmp
inc
sub
jge
mov
faddl
sbb
jne
inc
xchg
jo
addr16
mov
adc
movntq
sbb
jns
pop
subb
xchg
sbb
dec
sbb
inc
cld
mov
arpl
sub
mov
pop
adc
and
test
andb
add
or
xchg
sbb
mov
dec
jae
ljmp
adc
fildll
push
jae
clc
push
xchg
pusha
les
or
dec
int
arpl
mov
adcb
add
in
xchg
xor
aad
mov
lods
mov
popf
adc
cmp
ficompl
roll
dec
scas
es
mov
cmp
mov
mov
sbb
jne
mov
mov
test
lret
xor
fisttpl
popf
ja
xchg
outsb
or
bnd
and
leave
sbb
test
fadds
or
sbb
or
jge
dec
gs
daa
cmp
shll
mov
outsb
lea
gs
fsubr
inc
xchg
arpl
aaa
vpshlb
fs
sbb
mov
lcall
mov
xlat
bound
inc
mov
xchg
test
daa
cmp
xchg
mov
push
int
movsl
mov
sub
jno
bound
add
sahf
adc
xchg
cmp
daa
jge
movsb
popl
das
scas
push
repz
and
xchg
std
pop
jmp
mov
adc
sub
jl
popa
mov
sub
sahf
pop
cmp
push
ss
cli
adc
mov
icebp
data16
iret
fidivrl
fdivrs
cmpsb
pushf
xor
jl
mov
and
cwtl
stos
and
mov
aaa
data16
pop
mov
stos
mov
dec
push
icebp
test
scas
inc
lods
push
xor
arpl
mov
mov
subl
mov
cmp
xchg
shll
pop
mov
xchg
mov
adc
inc
push
adc
push
mov
loop
pushf
test
dec
das
dec
fldl
les
sarb
sbb
cwtl
stos
shrl
js
jmp
mov
push
bound
jg
mov
in
or
mov
sbb
xchg
jge
stos
mov
add
inc
adc
imul
roll
or
imul
stc
aad
aad
pop
cs
mov
call
mov
fcmove
xchg
sti
jecxz
dec
mov
js
mov
addr16
xlat
addl
inc
in
imul
mov
insb
xlat
call
fwait
mov
insl
into
adc
fcomip
js
push
or
imul
fdivrl
and
aad
pop
mov
orb
fmull
repnz
and
cmpb
cli
cmc
sahf
lcall
shrl
cmp
cli
xchg
stc
iret
btsl
fdivrs
pop
xor
out
or
sub
test
scas
cmp
push
inc
stos
lods
imul
xchg
pop
gs
mov
and
or
mov
lahf
mov
adc
lds
xchg
es
fmulp
pop
pop
jl
and
xchg
mov
add
sub
cmc
inc
in
ret
lods
pcmpeqd
in
push
and
fisttpll
mov
cli
push
cmp
mov
push
jl
mov
iret
adc
push
fidivrl
mov
xchg
jae
leave
std
into
pop
sbb
jns
inc
hlt
push
cmpsl
jo
int3
jge
and
std
push
push
cmpsb
aad
xchg
aas
dec
xor
sub
pop
shrb
mov
call
xor
xchg
in
repz
repz
hlt
imul
in
push
xchg
cmpsl
mulb
outsl
jp
mov
push
lods
cli
les
dec
push
lahf
xchg
addr16
pop
in
sbb
pushf
jl
sti
push
xlat
jmp
and
cltd
pop
xchg
mov
ret
call
mov
cmp
mov
xor
sbbb
sub
fnstsw
jns
add
cmp
arpl
ficoms
or
das
repnz
pop
addr16
les
jle
nop
inc
pop
sbb
mov
mov
or
adc
inc
xchg
jle
adc
ds
mov
lds
mov
push
dec
cmc
leave
stos
adcb
jmp
ret
cli
inc
mov
add
fsubl
gs
insb
ss
cmp
sbb
sub
test
xchg
push
pushf
fadds
aad
andb
cs
mov
loopne
add
rcrb
in
js
js
test
mov
icebp
ss
mov
movsb
pop
mov
mov
scas
push
ds
mov
push
xchg
fcoms
or
lcall
rorl
xchg
dec
shl
inc
lret
and
cmp
cli
imul
clc
or
int3
outsl
cmp
test
xchg
popa
adc
repz
daa
ret
mov
movb
cmpl
jns
aam
rorl
sbbb
fwait
aas
inc
sub
inc
xchg
call
call
mov
popf
clc
add
bound
sbb
pop
bound
mov
xorb
pop
in
in
pop
inc
in
jmp
fsin
into
inc
push
sarl
mov
inc
add
lods
nop
ret
mov
popa
add
test
inc
inc
pop
sub
cmp
cwtl
pop
mov
jecxz
adc
rcrl
test
lret
sub
dec
and
dec
sti
pop
addb
mov
inc
sbb
pop
or
sbb
das
in
icebp
adc
and
add
or
lods
pop
and
cs
push
lgs
xor
sbb
or
icebp
sbb
inc
push
popf
xchg
movsl
xchg
mov
jae
jne
fisubs
popa
inc
pop
push
xor
jo
stos
sbb
fwait
sub
rolb
push
dec
mov
push
mov
push
xchg
cmp
mov
mov
not
push
pop
sub
dec
sbb
dec
cmp
lea
insl
and
jbe
into
pop
imul
std
gs
cmp
add
sub
out
loop
call
jp
sbb
or
add
stos
adc
loopne
mov
dec
lcall
icebp
imul
pusha
push
and
cmp
adc
in
notl
sub
mov
loopne
mov
adc
jb
outsl
xor
and
jns
xchg
dec
loop
iret
repnz
dec
push
inc
mov
fsubrs
stos
lods
fldl
iret
jmp
faddl
add
lock
gs
mov
lds
dec
add
sub
insb
in
inc
jae
test
lret
lahf
xchg
push
cwtl
adc
outsb
ret
pop
jp
movsb
xor
xchg
je
push
mov
call
jno
xchg
mov
push
cld
rolb
lods
imul
shll
in
cmp
das
mov
repnz
ficomps
adc
mov
mov
icebp
jge
mov
outsl
insb
dec
xchg
pop
les
outsl
imul
mov
xchg
sub
mov
push
int
push
ret
push
mov
bound
mov
inc
je
push
ljmp
fisttpl
lds
or
add
test
or
fidivl
push
jns
sbb
fistpll
ja
es
int
rcl
rorl
lret
addb
lock
mov
xchg
test
push
adc
cmp
andb
mov
js
add
mov
cld
xor
movsl
xchg
xchg
jmp
sbb
out
pop
das
sbb
pop
outsl
cmp
int
cmc
mov
push
jbe
lret
jg
push
ds
into
jecxz
and
xchg
outsl
dec
int
repnz
push
add
push
dec
aas
cmp
jbe
movsb
lret
movsl
dec
sbbb
inc
dec
mov
fmuls
mov
pop
ja
stos
jne
cmc
enter
push
or
cmp
shlb
xchg
xchg
movsb
inc
inc
out
dec
cli
popf
push
push
mov
ficomps
loopne
pop
je
test
ret
xor
cld
sbb
xor
push
cmp
dec
daa
cmp
mov
cmp
mov
aaa
mov
into
push
pop
stos
jne
out
std
jge
add
jne
inc
xlat
hlt
mov
insl
ja
hlt
scas
ret
sub
fwait
sarb
and
sbb
inc
lcall
test
or
stos
xor
insb
leave
xchg
test
dec
push
push
sub
mov
mov
fcomip
rorb
roll
test
dec
ljmp
push
cmpsb
dec
ficoml
sub
ss
outsb
push
xor
divl
imul
inc
xchg
pop
cld
aam
pusha
ljmp
push
mov
push
insl
mov
xlat
testb
out
xlat
popf
cmp
or
subl
aam
mov
sub
je
lcall
lahf
add
leave
mov
clc
inc
in
int
jle
je
dec
testb
gs
cmc
mov
sbb
sub
dec
jg
sbbb
sti
push
in
js
jmp
leave
popf
sbb
dec
in
enter
outsb
daa
dec
xor
sbb
dec
sahf
xchg
ja
inc
adc
aaa
rclb
xchg
sub
or
mov
inc
data16
dec
fcoml
andb
insl
pop
out
cltd
xor
mov
lds
lcall
inc
test
bound
ljmp
push
int3
or
and
js
out
in
push
in
lcall
add
push
dec
xor
test
and
in
adc
movsl
lcall
outsl
or
xor
inc
aas
int3
pop
inc
or
push
xchg
pop
or
adc
lret
mov
and
jl
sbb
inc
dec
dec
push
and
xchg
inc
rcr
sub
or
or
into
xchg
push
outsb
push
iret
jp
mov
insl
adc
xchg
jge
int3
sar
mov
jno
shll
lcall
shrl
clc
mov
mov
out
jo
push
mov
push
pop
cmp
sahf
sub
test
addb
xlat
xchg
imul
add
push
add
jnp
jg
imul
xor
push
ja
add
ljmp
icebp
add
inc
sub
ret
or
sbb
sarb
dec
mov
sbb
mov
add
mov
inc
add
cld
jo
ljmp
pop
push
mov
push
cmp
out
nop
iret
repz
inc
xchg
xor
cwtl
loope
xorb
repnz
dec
addr16
mov
lock
adc
adc
bound
inc
cli
add
inc
push
pop
lret
test
imul
leave
dec
push
repnz
pop
bound
adc
inc
push
out
outsl
cwtl
pop
in
or
adc
inc
and
mov
fstpl
cmpsb
pop
or
inc
imul
pop
pop
int
or
lahf
rorl
hlt
cs
jnp
cwtl
xchg
pop
stc
push
pop
mov
xchg
gs
sub
mov
jle
std
subb
shll
sbb
mov
rcl
daa
repz
test
jge
mov
in
mov
mov
push
mov
add
sub
or
push
fmul
sub
test
mov
das
outsl
cmpsl
int
push
jle
push
js
icebp
mov
adc
dec
fstpl
push
xchg
mov
ret
iret
mov
and
fistl
push
ds
inc
neg
ret
dec
push
or
mov
jo
data16
pushf
in
out
or
pop
xchg
dec
sarb
les
or
out
lds
pop
pop
insl
mov
movsl
out
out
imulb
sbb
lret
popf
sti
outsb
mov
dec
lahf
mov
adc
lret
jg
fs
ds
gs
sahf
fwait
adc
cmp
cmp
mov
or
sub
sbb
cmp
xlat
xor
shrb
mov
xor
icebp
stc
mov
add
inc
xor
mov
push
add
or
xor
add
jb
cs
mov
stos
mov
inc
xlat
jle
mov
sar
fdivrs
inc
adc
push
pushf
add
lods
xchg
inc
loopne
mov
jg
push
lahf
push
cwtl
mov
mov
inc
mov
sbb
orb
sbb
jo
ret
pop
test
loopne
stos
mov
inc
scas
popf
daa
and
mov
sub
sub
cld
data16
mov
fisttpl
or
or
mov
xchg
cmp
enter
out
lcall
je
jp
push
jno
ss
ljmp
mov
xorb
inc
mov
xchg
movsl
xchg
jns
mov
sub
ljmp
push
mov
popa
out
jns
fildll
andb
popf
sbb
iret
stc
sbb
shll
mov
gs
and
sbb
or
sub
popa
add
repnz
adc
sub
movsl
popa
mov
or
cmp
test
mov
repnz
jae
loop
jnp
pop
mov
stos
sub
repz
mov
jge
push
mov
scas
jb
lods
pop
repnz
xor
sub
in
sti
xor
ss
add
and
arpl
test
addr16
push
int3
sahf
add
xchg
or
xchg
iret
out
and
ja
push
hlt
ret
scas
loop
cltd
dec
inc
aam
pop
or
aam
xor
pop
or
push
stos
rclb
pop
and
aam
out
mov
lods
dec
out
divb
jle
lahf
mov
pop
xor
pop
cmc
cmp
fldcw
jecxz
cli
mov
cli
std
shlb
pop
test
fsubrp
stos
inc
inc
jns
ja
sub
push
xchg
xor
cs
int
adc
movsl
iret
sbb
dec
mov
stos
aad
pop
and
ss
pop
ret
mov
adc
int
adc
xchg
or
popa
js
cwtl
xchg
xchg
push
adc
sub
cmp
sub
xchg
fldcw
push
in
cmc
dec
movsl
data16
dec
mov
int
iret
adc
mov
pop
inc
mov
jle
test
add
xlat
jg
add
test
ficomps
mov
insl
push
insl
and
mov
cld
inc
nop
icebp
fwait
dec
sarb
outsl
inc
sbb
add
adc
shll
cmc
aaa
shlb
adc
cmp
gs
data16
out
fildll
inc
cmpl
hlt
sbb
push
incl
jmp
sbb
inc
sbb
insb
mov
mov
fildll
inc
xor
xchg
pop
mov
mov
jge
push
shlb
sahf
and
out
sub
mov
adc
in
jnp
xchg
xlat
adc
mov
insl
movaps
mov
ja
fdivrp
int3
sub
cmp
int3
pop
lods
mov
out
je
ja
and
movsb
push
xor
imul
mov
push
in
jecxz
stos
pop
xor
out
push
fdivp
or
fiaddl
loope
cs
in
adc
movsb
pop
push
mov
fimuls
rcrb
xchg
inc
add
mov
or
inc
mov
push
mov
cs
mov
repnz
out
fdivrl
es
arpl
ds
and
pushf
dec
das
xchg
lods
loopne
loop
sbb
nop
jl
push
ficoms
cmp
out
mov
xchg
divl
push
mov
out
roll
into
and
test
pop
test
sub
loopne
and
mov
mov
outsl
mov
lea
pop
mov
sbb
inc
sub
push
xchg
pop
fs
imul
aaa
lret
packuswb
fisttpl
inc
jge
pop
sbb
inc
push
idiv
ss
cli
and
lret
cmp
fdivrs
mov
mov
in
fistl
or
aad
or
mov
add
and
mov
in
repz
push
and
shll
sbb
adc
dec
fistpll
mov
fs
jmp
fisubs
addb
ljmp
mov
cmc
icebp
ss
les
test
mov
sub
sarb
fwait
daa
fldcw
rol
adc
or
rorb
xchg
lcall
ret
in
cmp
xor
push
pop
push
bound
insl
push
rcrb
mov
xchg
pop
in
mov
pop
sbb
icebp
nop
sarl
xor
push
dec
push
cwtl
cmp
jmp
jnp
aas
repnz
scas
out
pop
fimull
hlt
stc
jns
scas
outsl
cmc
loopne
pop
and
mov
outsb
ret
jle
or
push
inc
sub
dec
mov
mov
xchg
adc
push
add
dec
dec
inc
loopne
testb
lahf
cmc
mov
push
cli
mov
frstor
ds
and
addb
test
lcall
pushf
subb
in
out
cld
pop
or
sbb
sub
cmp
dec
dec
pop
jg
outsl
jl
mov
mov
in
out
cld
pop
or
sbb
sub
cmp
dec
dec
pop
jg
outsl
jl
mov
mov
in
out
cld
push
or
sbb
sub
cmp
dec
pop
jle
outsl
js
mov
mov
jg
outsl
cmp
or
mov
sub
dec
sub
and
push
adc
and
xor
mov
outsb
or
and
scas
ret
iret
jecxz
repz
add
adc
and
xor
inc
pop
push
dec
arpl
or
mov
ror
jecxz
repz
add
adc
and
xor
inc
pop
push
dec
arpl
outsb
sbbl
rol
mov
cltd
pop
push
ja
and
dec
mov
fsubs
loop
pop
jb
in
in
push
xchg
mov
dec
push
cwtl
push
jg
int3
mov
popf
testb
pop
inc
dec
mov
mov
jle
push
push
sbb
and
inc
jmp
call
sahf
mov
and
and
xchg
adc
dec
sub
js
pop
inc
dec
out
jae
push
bound
jno
js
sub
xchg
cs
mov
out
cld
fdivp
icebp
ret
ror
sbb
push
mov
imul
es
into
scas
nop
lea
mov
repnz
incb
sbb
cmpb
out
hlt
jae
aam
arpl
xchg
iret
pop
sahf
cmpsb
jae
iret
push
adc
and
xor
inc
pop
push
dec
arpl
outsb
sbbl
scas
ret
into
jecxz
repz
push
addr16
jg
outsl
inc
sbb
cmp
sbb
sub
xchg
mov
stos
rorl
data16
bound
pop
dec
inc
sbb
and
sti
ret
fnstenv
pop
fwait
xchg
dec
pop
pop
push
push
dec
arpl
outsb
sbbl
scas
ret
into
jecxz
repz
add
adc
and
xor
inc
pop
push
dec
arpl
outsb
sbbl
scas
ret
into
jecxz
repz
add
ss
stos
push
int
sub
mov
mov
clc
fs
aam
hlt
aas
int
pop
push
and
inc
insb
enter
mov
enter
pop
leave
mov
ficoml
xchg
push
aas
insb
js
sbb
add
pop
push
outsb
leave
push
or
insl
sub
testl
cmp
inc
push
sahf
inc
je
jle
ret
enter
mov
insl
add
sub
push
ret
fstpl
xchg
outsl
pop
in
mov
pop
xor
call
mov
in
stos
sbb
and
into
sahf
into
adc
mov
dec
push
mov
mov
xchg
mov
lods
idiv
adc
out
pop
jne
call
mulb
or
push
xor
loope
movsl
into
mov
test
fisttps
mov
sbb
xor
lods
std
outsb
ret
pop
inc
and
adc
push
aaa
jge
and
or
js
sub
or
rcll
cmp
jge
xchg
and
andb
fcmovne
push
cmp
addb
push
fnstsw
pop
pop
icebp
jg
push
mov
cmpsb
and
ss
mov
sub
mov
scas
push
pop
mov
jmp
pop
cmpsb
push
sarl
inc
mov
xor
test
hlt
mov
in
push
scas
or
ss
jg
xchg
sub
adc
pop
dec
insl
jo
inc
mov
ficoml
enter
mov
cmp
pusha
fildll
or
movsb
inc
rcrb
dec
cmp
xchg
xlat
mov
inc
xchg
pop
popf
movsl
inc
fs
arpl
call
dec
push
call
inc
mov
clc
jb
test
push
cmp
or
fildll
jnp
insb
push
jecxz
xchg
lock
cld
call
cmp
mov
mov
stos
outsl
pop
xlat
xchg
add
lcall
inc
and
add
hlt
test
dec
dec
xchg
outsb
outsb
mov
push
mov
loop,pn
push
mov
sbb
pop
daa
and
neg
mov
pop
movsb
and
popa
out
xor
push
jmp
dec
sub
loop
mov
lods
enter
push
cld
stc
ror
ror
cmp
cmp
cmp
sbb
mov
out
dec
inc
fstpl
and
fs
dec
push
mov
inc
pop
push
sub
adcb
fistl
test
notl
pop
adc
fistl
add
adc
inc
inc
sbb
push
lock
dec
pop
cld
inc
dec
std
stos
cmp
push
out
mov
jb
pop
cmc
mov
jne
jns
icebp
rcrl
jg
aas
or
push
mov
cmp
inc
cmp
xlat
push
loopne
je
push
daa
sub
mov
clc
pop
fcom
das
sbb
insb
cmp
push
ds
mov
icebp
mov
jp
ljmp
pusha
inc
orb
lock
hlt
xchg
jg
mov
cmp
mov
das
rcl
ret
insb
xor
jle
add
mov
pop
mov
or
scas
xchg
cmc
and
xor
ljmp
gs
por
aaa
adc
and
lcall
mov
rorl
and
jnp
cmp
clc
inc
xor
daa
loope
xor
aad
or
ljmp
xchg
das
or
cld
mov
push
push
push
mov
ret
cmp
sbb
incb
fisubrs
neg
cmp
wrmsr
adc
cltd
mov
je
cmp
arpl
inc
jmp
movsl
out
outsb
dec
popa
add
jbe
pop
inc
jg
out
and
imul
outsb
sbb
push
pop
pop
shlb
or
out
inc
sbb
mov
scas
repnz
fstps
arpl
cld
in
pop
out
xchg
rcrb
sbb
out
pop
jne
test
mov
ss
out
negl
shrb
or
popa
cmc
ret
fdivrs
ss
cli
lret
rorb
or
sbb
lods
clc
push
pop
inc
sahf
mov
int
mov
jmp
and
into
fs
ljmp
in
adc
dec
stos
popa
add
fidivs
sub
mov
imul
adc
pop
lcall
enter
sub
add
sbb
fisubrs
sub
jg
orb
loopne
repnz
out
lds
jmp
mov
pop
xchg
push
jle
pop
test
xor
jnp
aaa
push
sbb
icebp
inc
movsb
cmp
mov
popa
push
push
push
pop
sub
fiaddl
xor
xchg
aam
jbe
push
jno
addr16
ss
mov
int
bound
jnp
sub
pop
cmp
jge
jmp
cwtl
popf
movzbl
inc
and
pop
rol
xchg
loopne
push
in
xor
insl
jae
xor
cmc
push
xchg
out
cs
inc
aas
xor
insb
test
call
sub
movsb
sub
data16
pop
add
repnz
fadd
fldenv
aam
dec
mov
xchg
mov
outsl
aaa
rorl
push
jecxz
pop
ja
xchg
adc
popa
add
push
inc
icebp
adc
add
sub
and
aad
or
mov
daa
out
sub
xlat
or
mov
out
dec
aad
mov
loopne
lret
xacquire
pop
out
popf
call
adc
inc
lret
pop
in
mov
lahf
mov
arpl
cli
cmpsb
data16
sar
cmpsl
inc
divl
hlt
mov
lret
adc
outsb
push
repz
fadds
popf
test
mov
inc
dec
cld
mov
push
mov
mov
ds
and
jge
je
sub
xor
loope
mov
or
xor
out
mov
dec
lock
nop
int
push
fdivl
js
pusha
add
les
and
sub
insl
mov
sbb
adc
ret
fnsave
or
adc
lods
jnp
add
xor
push
mov
cld
mov
mov
adc
push
in
sbb
jns
aam
fdivrl
push
push
cmp
jge
fiaddl
cmp
das
cmp
cli
jae
pop
fchs
lret
jo
clc
mull
pop
jno
int3
jg
rorl
out
bnd
push
rorb
mov
pop
test
setae
adc
mov
or
mov
push
cwtl
xchg
xchg
js
fisubl
inc
cmp
push
subl
and
dec
aad
push
sbb
pop
sti
mov
pop
inc
add
mov
and
sarl
cmc
push
xchg
jle
jmp
dec
sbb
out
cmc
mov
insb
mov
jbe
jg
sub
adc
daa
call
mov
or
xchg
cmpsb
les
icebp
jo
or
mov
dec
incb
pushf
leave
out
mov
out
inc
cmp
and
mov
and
xlat
dec
sbb
idiv
pop
xor
pop
sbb
inc
mov
xchg
sub
mov
insb
sbb
jne
pop
push
loopne
push
push
sbb
addr16
test
popa
imul
dec
in
fsubl
mov
jo
xchg
xchg
mov
push
out
mov
cmp
les
test
inc
xor
fs
sub
sub
test
and
mov
and
dec
aaa
lds
fistpl
jl
clc
cltd
out
sti
sbbb
mov
mov
jno
add
inc
cmp
sahf
aas
jno
or
fmuls
mov
or
cmp
adc
outsb
hlt
and
xchg
and
adc
ss
cmp
pushf
lock
sahf
in
inc
fstps
loope
clc
cmp
inc
ss
mov
adc
xchg
addr16
cmp
adc
push
xchg
test
cmp
cmp
je
icebp
cli
mov
push
loope
aam
mov
aad
xlat
sarl
popf
cmp
dec
dec
add
mov
dec
cmc
std
and
sbb
mov
cmpsl
in
repz
jle
pop
sbb
push
pop
mov
add
lahf
dec
nop
inc
addb
push
push
sahf
repz
out
into
cmpl
pop
add
sub
jl
loop
sub
push
lods
jo
dec
inc
jo
or
mov
sbb
mov
lret
das
push
sahf
push
inc
dec
jmp
roll
repnz
add
jns
lods
xor
ljmp
lods
leave
test
jge
and
or
add
mov
stc
inc
sbb
int3
outsl
cltd
pusha
jae
adc
jmp
inc
adc
xor
aad
xor
inc
add
inc
sub
lea
jmp
mov
bound
cmp
mov
jmp
jnp
inc
xor
adc
mov
and
cmpsb
mov
cmp
std
fnstsw
clc
addr16
mov
repz
lock
test
xor
or
faddl
loope
jle
push
pop
faddl
cmpsb
lods
fdivrl
dec
or
jnp
mov
or
lods
movsb
sbb
lret
xchg
mov
jl
iret
mov
cmp
xor
loopne
cmp
pop
outsb
jecxz
push
testl
and
ss
arpl
and
adc
sbb
sbb
jb
js
fs
mov
mov
fwait
repz
int
lahf
clc
mov
fwait
cmpsb
mov
jb
lcall
mov
mov
or
cltd
push
push
test
fisttpl
lea
mov
sbb
mov
mov
mov
hlt
imul
fdivrl
arpl
dec
hlt
push
std
lds
cwtl
popf
movsb
out
jg
ror
cld
fisubrs
icebp
bound
faddl
xchg
test
inc
xlat
into
movl
sti
lahf
dec
inc
sub
lea
mov
sbbb
mov
push
fadd
in
pop
mov
adc
test
arpl
dec
outsb
push
pop
repz
roll
cwtl
inc
lahf
pop
cwtl
inc
inc
fadds
pop
stos
sbb
movsb
xchg
gs
jae
out
fisubrs
sarl
stos
lret
fldcw
in
outsb
dec
mov
rep
mov
mov
cmp
sarb
sbb
out
or
adc
popa
sahf
gs
lret
adc
aas
dec
cmp
imul
js
xchg
bswap
addl
cmp
stc
stos
test
cmc
xchg
nop
lret
outsl
xchg
or
popf
cmp
sbb
ss
sbb
insl
popf
shll
ljmp
imul
dec
stc
cmp
jne
scas
and
push
cmp
mov
jb
sub
mov
les
jae
add
xor
ss
sub
cmp
mov
jns
popf
cmpsb
fstpl
inc
mov
xor
mov
add
nop
mov
cmp
pushf
out
mov
rcr
jmp
outsb
mov
test
aam
fists
sahf
pop
movsl
mov
jnp
faddl
hlt
or
pop
test
testb
add
add
imul
inc
sahf
xchg
sbb
add
mov
dec
int3
mov
stos
fwait
dec
mov
sub
cmp
insb
loop
dec
inc
xlat
pop
mov
popl
xchg
sbb
icebp
int3
pop
ficoms
es
mov
rorl
imulb
popa
test
loope
add
stc
pop
xchg
test
xor
xchg
enter
push
imul
stos
jae
xor
popf
imul
fucomip
out
add
lcall
pop
shlb
dec
stos
sahf
xchg
xchg
add
xor
gs
pop
cmpsb
and
xchg
xchg
cmp
ret
dec
fwait
pop
in
adc
jmp
out
cmp
add
jl
fidivs
pop
into
dec
loopne
sub
fstpl
cltd
xor
ret
cmp
fcompl
xchg
jg
sub
scas
inc
nop
xchg
test
mov
dec
sbb
adc
cmp
adc
sub
pop
int3
aas
xor
std
xchg
pop
and
sti
popf
add
hlt
ret
jne
in
mov
in
xchg
mov
test
add
mov
popf
icebp
outsl
loop
adc
testb
test
pop
jmp
cmp
mov
adc
mov
jae
mov
sbb
mov
add
and
orl
mov
loopne
add
push
jnp
cltd
test
adc
dec
cwtl
adc
movhps
jo
mov
fs
adc
push
hlt
push
mov
pop
enter
or
mov
mov
mov
std
mov
fists
fimuls
xchg
xchg
call
movsl
mov
cmp
lods
outsb
push
adc
cmpsb
sub
sub
pop
add
test
lea
out
data16
mov
xchg
lret
repnz
add
cmp
sbbl
mov
jns
or
aam
pop
into
jnp
fcoms
pop
mov
lahf
jge
sbb
fwait
adc
xor
out
jge
icebp
push
push
movsl
dec
inc
jbe
es
out
lods
jl
arpl
cmp
add
jge
ret
iret
pushl
popf
adc
mov
cmp
cmpl
cli
fstpt
xchg
add
test
push
xchg
enter
pop
outsl
in
das
cmc
sub
jmp
mov
or
cmpsl
xor
popa
test
mov
mov
and
andb
inc
shlb
lea
push
fisttpl
pop
and
iret
push
cmp
sub
pop
call
lock
pop
push
adc
stc
push
push
sbb
nop
push
in
add
mov
jl
sbb
adc
pop
pop
ret
pop
cli
xchg
push
fdivl
loope
movsl
popf
pop
inc
xchg
outsb
mov
call
inc
mov
cli
push
mov
lds
jge
xor
mov
inc
adc
test
std
add
ret
jl
xor
push
adcl
sbb
cmpsb
lock
dec
cli
cmp
xchg
cld
test
js
fwait
shlb
or
push
into
rol
mov
fwait
shr
daa
pop
popf
ljmp
sbb
cmp
fcom
inc
mov
cmp
cld
xchg
aad
jo
xchg
push
mov
lods
movsb
add
inc
icebp
cmp
call
mov
lock
insb
filds
push
and
push
push
insb
int3
push
fdivs
mov
loopne
repz
call
iret
es
sbb
adc
sub
push
sbb
or
dec
push
jbe
iret
adc
mov
mov
mov
jo
imul
inc
and
dec
cmpsb
icebp
xchg
pop
or
rcrl
adc
adc
sarl
push
cmp
fadd
dec
adc
inc
test
test
dec
loop
mov
aad
ss
dec
sbb
push
fs
mov
mov
les
vaddss
mov
mulb
xor
mov
cbtw
mov
movsl
xchg
jno
pop
cwtl
pushf
nopl
dec
popa
dec
push
outsb
add
xor
mov
inc
frstpm(287
das
inc
test
jno
inc
dec
ds
sbb
sub
sbb
es
sarl
ret
dec
jnp
jge
jmp
push
hlt
xor
cmp
test
mov
mov
mov
lcall
or
sbb
rclb
xor
push
pushf
sbb
sub
adc
inc
xlat
in
pop
and
jmp
inc
push
push
jno
pop
repz
imul
cmp
rcrb
xchg
rcll
mov
or
outsb
add
out
vandnps
dec
fwait
jg
xchg
sub
jp
adc
fstpl
sub
addr16
mov
pop
push
dec
and
lahf
pop
roll
hlt
push
ret
xchg
mov
mov
sub
xchg
je
aam
push
dec
out
adc
push
cwtl
inc
repnz
ds
inc
cmp
dec
out
es
xor
fmuls
sub
dec
into
aaa
push
add
in
xchg
icebp
push
test
sti
mov
bound
mov
sub
adc
inc
mov
xlat
lods
adc
cmp
mov
daa
movsb
mov
in
daa
sub
mov
imul
xlat
pop
xor
idiv
pandn
adc
les
jl
mov
sti
or
and
test
repz
iret
adc
sbb
dec
sbb
hlt
test
in
mulb
xchg
push
and
add
mov
add
inc
adc
jmp
push
xchg
cmc
clc
icebp
insb
inc
dec
dec
aam
ret
mov
and
inc
out
mov
arpl
xchg
cmp
push
mov
fucomi
ljmp
push
jns
shlb
inc
push
sub
bound
inc
pop
add
or
ret
addr16
cmc
jg
mov
xor
inc
loop
and
add
bound
mov
push
in
inc
sbb
push
sbb
mov
cltd
pop
xor
mov
scas
inc
sbb
orl
std
lea
addb
mov
lret
enter
aam
inc
pop
adc
mov
fistpll
int3
mov
dec
or
mov
mov
or
mov
test
jmp
repnz
pop
mov
and
mov
push
arpl
js
mov
xor
add
pop
adcb
imul
push
xor
imulb
js
pop
sbb
pop
imull
jp
scas
ds
xchg
xchg
insb
ljmp
in
or
xor
repnz
in
lds
adc
or
sub
and
cmp
jbe
sub
je
fs
out
jno
rcrl
mov
or
pop
sub
sub
xchg
sahf
fcoms
jle
xchg
aad
fs
add
adc
scas
sbb
das
ja
insb
loopne
jl
int3
push
pop
cmpsb
sub
pop
sub
imull
cltd
ss
mov
sbb
cmp
and
clts
ds
pusha
dec
jne
pop
cli
push
mov
and
mov
sbb
ljmp
sbb
out
cld
inc
add
stos
push
or
mov
les
imul
sbbb
lcall
sar
faddl
add
dec
das
cmp
and
les
push
push
popa
push
jno
push
ds
mov
sahf
xchg
negl
dec
std
sub
xchg
rcl
cli
stc
xchg
and
add
loop
inc
push
sub
loopne
pop
lods
mov
cmc
addb
pop
outsl
test
mov
xchg
mov
xor
or
mov
or
into
lods
adc
pop
int3
scas
pop
inc
pushf
push
inc
adc
shll
cmp
inc
aas
mov
daa
inc
cmp
push
sub
push
ret
gs
sbb
daa
insl
add
adc
mov
mov
repnz
xor
popa
lods
xchg
into
outsl
into
sahf
shlb
add
xchg
fiaddl
std
loope
test
jmp
ss
repz
dec
cld
aam
sbb
mov
adc
xchg
mov
jg
icebp
inc
mov
inc
adc
cli
add
inc
std
mov
cmp
pop
repz
adc
lcall
icebp
jle
xor
enter
sub
adc
cmp
inc
loopne
scas
in
or
sbb
xchg
mov
mov
pop
xchg
mov
insl
jo
imul
mov
fsubrl
add
call
xchg
cmp
inc
sbb
shrb
cli
sbb
mov
xchg
inc
add
push
jp
pop
pop
stc
ret
enter
xlat
pop
inc
jg
imul
inc
mov
inc
mov
andb
subb
mov
or
lds
popa
pushf
aas
xlat
int3
mov
adc
xchg
pop
mov
stos
or
les
pop
or
xlat
sbb
xchg
std
sub
add
pop
div
insb
or
or
mov
xor
sti
inc
in
jmp
xchg
xor
push
or
inc
scas
aam
iret
rorb
call
or
jb
mov
mov
aad
inc
cs
ror
jl
mov
push
pop
mov
jmp
scas
aas
jae
daa
adc
popa
cmpsl
in
and
mov
popl
and
test
aaa
push
mov
shrl
xchg
push
and
xor
inc
pop
push
dec
arpl
outsb
sbbl
scas
ret
into
jecxz
repz
add
adc
and
xor
inc
pop
push
dec
arpl
outsb
sbbl
scas
ret
into
jecxz
repz
add
xchg
push
mov
pop
push
dec
arpl
outsb
sbbl
scas
ret
into
jecxz
repz
add
adc
and
xor
inc
pop
push
dec
arpl
scas
sbbl
fnstenv
add
lods
dec
pushf
pop
mov
jg
jmp
sti
sub
sbb
or
jl
sub
pop
fwait
dec
imul
sub
cmp
or
sbb
jmp
sti
sub
sbb
or
jl
insb
mov
imul
sub
cmp
or
sbb
jmp
sti
jo
insb
mov
or
mov
or
cmp
sub
push
clc
jns
sbb
pop
cmpsl
jnp
mov
xlat
adc
lea
jae
add
adc
addl
push
mov
arpl
inc
imul
das
stos
mov
sbb
dec
jmp
stos
rcrb
jl
pop
or
jnp
imul
cld
jmp
sbb
loop
repz
das
call
insl
xchg
and
ret
cld
xor
or
sbb
fwait
loopne
aas
clc
mov
sub
pop
fs
cmp
rcrl
out
repz
fisttpll
ret
sub
or
cmpl
xor
jnp
dec
pushf
pop
mov
cld
cmp
or
sbb
jmp
sti
sub
sbb
or
jl
insb
mov
pop
sarl
jg
ficoml
lods
dec
mov
dec
inc
movsb
jb
fists
notl
xor
cmp
aas
pushf
adc
dec
cltd
pop
ret
arpl
mov
dec
mov
add
sub
sub
jnp
push
cmp
or
sbb
jmp
sti
sub
sbb
or
jl
insb
mov
imul
sub
cmp
or
sbb
jmp
sti
sub
sbb
or
jl
insb
mov
imul
pop
cmp
cli
jns
out
mov
and
xchg
push
in
ds
lods
aas
mov
xchg
and
mov
sar
insb
xchg
lcall
mov
cwtl
int3
inc
cmp
js
xchg
sbb
jno
test
and
pop
in
jne
sbb
int3
or
fdivl
outsl
fnstsw
inc
scas
cmc
sub
push
iret
pushf
mov
outsb
idivl
pop
inc
call
aaa
or
cld
add
xchg
lock
outsb
add
mov
add
inc
inc
push
add
mov
adc
mov
fstps
mov
pop
sub
les
popa
call
mov
push
adc
daa
pop
xlat
push
clc
out
lahf
xchg
in
out
jae
xchg
mov
push
gs
mov
xchg
movlps
sub
sub
jecxz
dec
sub
pushf
inc
xchg
in
push
sbb
loop
loope
stos
stc
and
shrb
xor
cwtl
inc
sub
mov
nop
vmwrite
xchg
cmpsl
loop
sti
mov
pop
pop
adc
les
pop
outsb
loopne
mov
in
int
xchg
fstps
cmc
mov
adc
call
jb
push
dec
loope
icebp
out
inc
mov
adc
pop
xor
sbb
pop
iret
repnz
int
dec
sbb
mov
add
inc
adc
movsl
lret
push
cmp
mov
push
cmp
test
xchg
pop
mov
sbbl
mov
or
lret
and
lcall
push
mov
movb
lahf
movsl
jnp
push
or
dec
adc
adc
adc
lds
cmc
pop
push
xchg
jne
mov
jb
mov
addr16
mov
cld
popf
mov
and
jne
jl
fwait
aas
movsb
xor
in
sub
fldcw
add
jno
xchg
fidivrs
inc
cltd
loop
ss
xchg
dec
test
and
xor
popa
icebp
xchg
lcall
mov
xor
filds
jae
das
adc
aaa
xlat
dec
push
mov
add
lds
popa
mov
shlb
jns
jl
adc
jo
negb
add
jae
hlt
push
in
jle
fisttpll
lea
roll
push
addb
jl
and
fisubrl
lcall
repnz
inc
xchg
sar
cld
adc
xchg
aaa
cmpsb
sbb
incb
mov
lret
je
mov
andl
stc
icebp
fildl
stc
stos
adc
xchg
jg
jae
mov
je
xchg
subl
call
inc
mov
sub
push
cmp
mov
cs
and
mov
dec
aam
cli
or
cmp
ret
cmp
xchg
ret
in
sbb
loope
shl
add
enter
pop
scas
mov
fldl
xor
pushf
mov
sbb
cltd
sub
cld
cmp
push
icebp
das
idiv
out
cli
push
in
cmp
shl
xor
and
jae
lahf
pop
lds
shl
mov
outsl
sub
cmp
data16
xchg
out
cltd
and
imul
enter
rcl
mov
imul
add
and
push
mov
pop
push
mov
sub
jmp
cmpsl
jge
mov
mov
cmp
out
mov
popa
loop
out
call
and
fs
shll
fnstsw
aas
out
ret
push
mov
xor
dec
cmpsb
add
loope
out
outsl
dec
jmp
fsubl
add
shr
mov
adc
lods
cmp
mov
in
stos
icebp
lock
mov
pop
jae
jmp
cmp
dec
jle
cltd
inc
out
fwait
push
jle
xchg
fwait
nop
jmp
test
mov
out
orl
cmpsb
shlb
sti
jno
stos
jae
or
insl
and
cmp
fimull
stos
pop
jmp
imul
lahf
and
arpl
mov
call
out
hlt
xchg
and
cmpsl
adc
daa
call
or
mov
es
aam
mov
xor
jne
ret
hlt
push
stc
lds
out
sub
push
cs
hlt
push
bound
mov
ret
lret
sub
aas
mov
sub
push
or
shll
data16
xlat
leave
lahf
dec
dec
sbbb
mov
inc
push
lods
imull
in
sub
insl
aaa
ret
inc
xlat
out
inc
and
fwait
inc
mov
jp
flds
cmpsb
fs
adc
es
dec
inc
mov
xchg
cmpl
scas
dec
xchg
stc
push
imulb
push
scas
sti
out
sti
mov
sub
pop
pop
adc
mov
mov
and
iret
out
xchg
mov
roll
jbe
sbb
xchg
adc
jbe
mov
nop
in
ss
cmp
or
movsb
xchg
repnz
fisttps
mov
out
mov
stc
inc
inc
jae
jecxz
xlat
dec
adcb
add
popa
lcall
cmpsb
and
mov
ret
add
rclb
or
aad
ret
aad
sbb
or
movsl
push
push
jb
mov
xor
jno
sbb
cmc
push
ljmp
jge
aam
inc
lods
pusha
xor
inc
ret
mov
mov
mov
or
fcoml
sti
scas
jo
ds
mov
sub
rcll
cli
out
adc
fisubl
xchg
add
fcmovbe
ja
inc
insl
push
lahf
repz
and
mov
add
pop
mul
jno
lcall
std
mov
leave
fwait
add
jl
sbb
add
out
jae
repnz
nop
mov
push
loope
or
es
and
lock
fdivrs
lods
icebp
fwait
loop
jno
inc
inc
sbb
daa
rol
mov
inc
and
mov
repnz
jl
mul
test
fsts
and
jmp
jmp
mov
jne
jae
mov
dec
and
bound
add
aas
inc
loope
xchg
jle
xchg
jb
sbb
adc
add
fstl
out
sbb
mov
cmp
mov
notb
sub
outsb
dec
lcall
add
jle
xor
movsl
ds
add
test
mov
sub
push
movsl
in
xchg
adc
mov
or
push
subb
mov
add
push
mov
push
mov
or
push
mov
hlt
das
sub
cmp
bswap
mov
or
pop
fstps
inc
xchg
call
push
inc
rorb
mov
pop
iret
ret
push
mov
dec
add
dec
mov
xchg
jg
rcr
adc
test
push
fcomps
bound
test
dec
adc
movsl
repz
jmp
sub
xlat
jne
ljmp
pop
shrb
cmp
shlb
sahf
adc
arpl
es
shlb
mov
xor
lds
nop
add
int3
push
es
push
jo
xchg
sbb
out
scas
fimuls
outsb
jecxz
inc
das
push
push
fcomps
cmc
xor
mov
pop
ljmp
xchg
add
or
inc
test
nop
dec
pop
int
xchg
mov
cmp
loopne
mov
je
addl
ror
xor
insb
push
les
lcall
sub
dec
arpl
or
pop
sub
pop
cmpsb
xchg
icebp
lods
pop
mov
pop
test
add
pop
enter
mov
fnstsw
cmp
das
push
subb
sub
push
push
mov
mov
add
or
sub
push
mov
jno
add
icebp
pushf
subb
cmc
dec
ret
push
cmpsl
push
fucom
cmp
mov
mov
xchg
push
push
andb
ficomps
mov
fs
cwtl
sbb
add
or
cmc
adc
pop
js
mov
pushf
pop
push
mov
in
push
stc
in
leave
inc
add
call
jmp
pusha
push
dec
sbb
cwtl
nop
adc
push
fidivl
cmp
pop
or
aas
xchg
mov
test
popf
andl
cli
mov
jne
sbb
or
push
add
inc
mov
sbb
or
loope
adc
sbb
into
push
push
inc
stos
fiadds
imul
and
ds
xor
stos
stos
xchg
adc
fbld
and
dec
jl
mov
mov
sbb
pop
push
xor
rcrl
or
fcomps
mov
js
int
pop
cmc
int3
jle
ret
xor
add
lcall
movsl
cmc
push
lcall
in
adcl
xchg
ja
test
fsubp
clc
loop
arpl
inc
add
scas
ret
das
test
fwait
push
pop
cmpsl
int
and
adc
mov
bound
xor
cli
sub
into
enter
out
inc
xor
call
cld
push
cmpsl
lcall
inc
repz
sahf
into
push
dec
cmp
inc
in
inc
push
andl
mov
aad
mov
mov
pop
push
sbb
arpl
lahf
rcll
xor
ss
leave
mov
nop
sbb
xor
sahf
dec
push
movsb
and
hlt
pop
pusha
sbb
nop
and
loope
or
jmp
je
stos
out
dec
sub
subl
popf
lea
xor
mov
sti
mov
test
int3
lods
jl
scas
push
sub
rcrb
ret
jno
cmpsl
orb
add
aaa
insl
xchg
sbb
mov
rclb
std
sbb
insl
ficoml
cmp
xchg
std
dec
adc
push
sbb
mov
jg
lahf
loope
inc
xchg
and
insb
inc
sub
movsl
adc
insl
fwait
mov
sub
lock
into
jecxz
xchg
leave
rcrl
dec
imul
iret
cwtl
stos
nop
out
dec
cmp
inc
xchg
insl
mov
pop
popf
push
sbb
push
push
into
mov
sbb
pop
aad
mov
push
cmp
aad
push
push
insb
lds
dec
mov
pop
dec
bound
jae
js
repnz
jo
sub
mov
mov
repz
xchg
sbb
lret
dec
das
les
imul
mov
xor
mov
push
out
sbb
mov
pop
jge
sub
mov
mov
loope
repnz
outsb
test
xor
fstpt
cmp
push
ljmp
call
fidivs
push
pop
loop
xor
add
mulb
push
imul
fwait
and
jbe
cmp
cmp
ss
gs
xor
outsb
push
inc
pop
push
adc
imul
mov
jo
sub
xchg
outsl
add
sbb
adc
mov
xor
and
jge
cmpsl
fsubr
pusha
int3
stos
push
xchg
dec
xor
fwait
mov
mull
pop
xlat
mov
mov
jnp
repz
xchg
stc
cs
mov
in
sub
mov
mov
aad
dec
std
mov
mov
mov
ret
push
sbb
jo
daa
mov
or
mov
cmp
test
pop
shr
xchg
or
jne
jecxz
addb
lret
inc
std
in
sbb
mov
sub
and
les
adc
jg
dec
push
xchg
idivb
es
dec
enter
mov
push
push
aam
pop
mov
xchg
in
inc
jb
out
pop
or
lods
cmp
outsl
mov
mov
cmpsl
jmp
sub
push
xchg
xchg
jg
adc
jl
jo
adc
stos
test
subl
mov
mov
pop
jo
xchg
outsl
sahf
jle
aas
add
data16
fbld
mov
shrl
ficoms
clc
cmp
adc
pop
pop
fnstenv
fildll
cmp
dec
orl
fs
xchg
lret
sub
pop
movsl
xchg
fs
into
hlt
lea
xchg
div
mov
in
aas
cmc
and
inc
sbbl
push
mov
adc
inc
out
rcr
in
adc
lahf
cmp
daa
push
rcrl
mov
pop
add
fistpll
sub
dec
test
xor
negb
pop
xchg
xor
aaa
and
cmp
adc
xor
inc
adc
fwait
arpl
rcrb
cld
jle
cmc
pop
out
fsts
out
pop
fs
leave
pop
mov
psubw
sti
leave
cmp
stos
scas
mov
imul
mov
pop
bound
cltd
fmuls
cmp
iret
movsb
mov
mov
xchg
cwtl
fsub
vpsubsb
hlt
xor
aas
sti
pop
jmp
sti
push
or
test
mov
iret
test
sti
clc
push
adc
dec
pop
out
cmpsb
nop
shl
movsl
jo
pop
aaa
dec
sub
cltd
movb
pop
sti
sbb
lret
dec
push
ficompl
popa
jae
jne
hlt
inc
sbb
lcall
gs
test
ficoml
jmp
aaa
mov
sbb
jno
cmp
fdivrl
jmp
sbb
data16
fs
loopne
loopw
les
mov
add
jo
jbe
aam
add
out
pusha
je
mov
mov
xchg
xor
lcall
and
stos
in
cmp
stos
and
adc
and
jno
std
mov
mov
add
in
mov
test
cltd
cmp
add
sub
inc
xchg
mov
push
jnp
mov
outsl
jecxz
xchg
adc
scas
jae
lods
add
sub
pop
fwait
jb
cltd
mov
sahf
stos
cltd
out
leave
or
or
popa
mov
sbb
pushf
loopne
push
mov
push
std
xchg
and
scas
xchg
xor
push
fisubl
xor
jp
fldlg2
out
repnz
cmp
js
loope
mov
and
xor
mov
mov
mov
punpckldq
ffree
sub
pusha
pop
nop
lods
push
mov
add
pop
xchg
std
add
fnstsw
mov
btr
push
xor
mov
in
in
xor
mov
inc
iret
jae
mov
push
je
jge
enter
out
and
pop
lods
jl
test
pop
int3
pushf
xchg
sbb
mov
hlt
add
sbb
xor
repz
mov
push
lock
cmp
test
aaa
inc
aaa
dec
add
and
push
mov
pop
mov
pushf
mov
rorb
nop
xlat
call
bound
pop
cltd
cmp
jo
mov
ss
out
ljmp
push
adc
lret
push
pusha
push
lahf
daa
mov
mov
jb
inc
mov
push
lds
test
xchg
repnz
insb
push
push
mov
icebp
xor
and
cmp
and
js
xor
push
mov
and
lahf
mov
leave
pusha
subl
ret
or
daa
repz
or
xor
sub
push
out
fs
inc
aad
cmp
mov
push
stc
cmp
sbb
mov
push
mov
stc
push
mov
adc
push
jmp
sbb
sahf
push
push
divl
or
sbbb
mov
stos
popa
jo
shlb
xor
aaa
cli
shll
popl
dec
push
incl
sub
adc
jno
dec
insl
push
in
or
int
or
jge
mov
or
cs
cmpsl
clc
dec
mov
inc
test
std
fdiv
inc
les
imul
int
mov
or
xchg
addr16
xor
jb
das
testl
mov
or
cmpsb
in
jae
mov
sbbl
mov
jnp
sub
mov
lock
lods
nop
add
add
stos
subb
mov
negb
xor
inc
clc
jp
sahf
pop
sbb
sbbl
adc
adc
scas
mov
lret
mov
and
xor
out
pop
sbb
fidivrl
adc
fwait
call
mov
sub
inc
cmp
sub
or
in
sub
loope
jge
pop
and
in
jnp
fmuls
push
sub
pop
ja
or
cltd
sub
mov
cmp
fldl
test
lret
iret
inc
push
fs
divb
sahf
fsubr
out
lgs
xor
and
jle
stc
pushf
jmp
sub
mov
sti
dec
pop
xchg
pop
aad
iret
ret
mov
and
aas
shll
mov
push
push
jl
cmp
mov
inc
mov
inc
mov
std
pop
or
mov
hlt
aas
outsl
orl
mov
mov
mov
js
imull
sbb
orl
xchg
lahf
and
rorb
fcmovnbe
gs
push
sub
and
bound
dec
xchg
in
sbb
push
mov
loop
and
pop
and
jb
mov
movsl
fisubl
fsts
lods
int3
mov
xchg
inc
mov
sbb
add
pop
jnp
scas
scas
repnz
ljmp
cmp
popf
imul
leave
inc
stos
cmpsl
mov
or
dec
out
or
add
rcrb
in
vmread
lcall
cmpsb
insb
movsl
fiaddl
addr16
cmp
cmc
out
mov
or
jno
mov
sbb
cmc
popf
jno
xor
mov
sbbl
inc
fwait
jo
jae
lods
mov
jecxz
ret
dec
sbb
inc
out
les
push
jge
outsl
sbb
out
sub
inc
fdivrs
mov
jg
mov
test
push
sti
dec
sub
sub
ss
sub
imul
xchg
dec
test
sbb
in
loop
daa
lcall
push
cltd
out
ret
test
mov
cmp
cwtl
lret
leave
mov
jbe
push
aaa
cmp
inc
call
sub
out
imul
and
and
addps
ss
les
fistpll
cmp
mov
adc
bound
add
js
or
xor
or
setbe
std
push
shlb
xchg
sarb
stc
add
out
test
mov
clc
lahf
adcb
jge
push
sub
repz
in
test
xchg
clc
sbb
insl
inc
adc
push
mov
imul
incl
xchg
icebp
outsl
push
inc
cld
ds
push
cmpsb
or
mov
xlat
insb
sbb
bound
jle
imull
and
xor
push
jns
adc
xlat
ror
psubsb
das
or
mov
or
xor
xchg
das
add
jecxz
inc
pop
dec
ret
add
xchg
mov
push
sar
mov
mov
jge
pop
mov
mov
hlt
push
pushf
or
dec
out
movsb
and
jge
fstpl
cmp
sub
dec
inc
push
push
out
sub
jns
adc
mov
ja
and
push
pmaddwd
mov
cmp
int3
mov
push
and
dec
sub
insl
sub
xor
ds
ja
ds
xor
std
jo
pop
into
push
cmp
inc
xor
adc
cwtl
hlt
sbb
lcall
mov
mov
gs
dec
js
loope
add
lock
dec
dec
push
xor
in
mov
lods
xor
xchg
and
cmc
fsubrp
mov
les
cwtl
int
dec
shll
popf
icebp
call
arpl
clc
push
das
loope
repnz
idivl
fs
stc
pop
clc
cli
cld
sti
sub
hlt
lock
adc
cmpsl
lret
je
jle
mov
sub
cmpl
daa
pop
push
or
cmpsb
mov
fdivr
fdivrs
fldt
inc
leave
or
imul
inc
orb
xor
jne
scas
pop
flds
push
fwait
cmp
pop
ret
std
mov
hlt
cmp
js
push
jns
imul
cmpsl
in
int
sub
add
into
fisubrl
jb
in
add
lds
mov
add
xchg
cmp
mov
inc
ljmp
into
push
fmuls
push
aas
jo
les
lods
push
jae
stos
add
loope
push
in
ljmp
xor
push
jns
inc
out
fwait
int
das
in
adc
ss
jae
dec
ss
adc
out
pushf
repnz
jb
int
jb
clc
hlt
sbb
pop
loope
das
mov
lock
sbb
daa
outsl
pop
mov
inc
std
mov
mov
mov
push
loop
push
ret
xchg
jae
in
jo
scas
mov
and
out
stos
scas
push
in
loope
pop
aad
add
cmpb
mov
fsts
xorb
daa
insb
les
sbb
mov
push
cli
xor
jecxz
adc
lock
lods
ds
pop
mov
cld
cmp
or
sbb
jmp
sti
sub
sbb
or
jl
insb
mov
imul
sub
cmp
or
sbb
jmp
sti
sub
sbb
or
jl
insb
mov
imul
lea
cld
cmp
or
sbb
jmp
sti
sub
stos
jge
insb
mov
push
jp
dec
pushf
pop
mov
cld
cmp
sbb
jmp
sti
xchg
fstpt
hlt
xor
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
fisttps
sarb
sub
pop
or
aas
push
pop
pop
dec
btc
out
lcall
scas
ficompl
sub
outsb
pop
or
aas
push
pop
pop
dec
btc
out
lcall
scas
ficompl
sub
cmp
adc
inc
adc
and
repz
sahf
mov
inc
xor
rorb
pop
lret
jp
xlat
pop
or
xor
pop
xor
cmp
push
rcrl
add
xchg
pop
pop
test
ret
pop
dec
mov
inc
cmpsl
and
push
sub
mov
cmpsl
fbld
cmp
pusha
mov
jecxz,pt
aas
loopne
xchg
ljmp
cli
mov
mov
add
push
add
pop
loopne
addb
adc
pop
mov
inc
mov
lret
or
adc
or
push
addb
adc
mov
sub
and
or
loop
dec
dec
inc
sub
pop
or
push
in
stos
out
lcall
scas
ficompl
sub
pop
or
aas
push
pop
pop
dec
data16
nop
ret
out
pushl
mov
fistpll
sbb
or
pop
add
push
dec
mov
fucomip
mov
lret
pop
sub
pop
ds
and
pop
ds
sub
pop
shll
mov
ficompl
sub
pop
or
aas
push
pop
pop
dec
btc
out
lcall
scas
ficompl
sub
pop
or
aas
push
pop
pop
dec
btc
cmpsb
and
mov
jae
adc
aad
push
popf
pop
xor
int3
fldt
fwait
imul
lock
popf
pushf
cli
sbb
dec
cld
sbb
nop
mov
cmp
pop
iret
adc
test
cld
jo
mov
ss
mov
mov
sub
mov
ror
pop
ja
insl
inc
jp
stos
js
inc
roll
mov
ja
xadd
pop
cmpsb
std
and
xchg
in
fistpl
fsubs
shlb
jg
mov
sbb
jg
shll
loope
mov
cmp
scas
xchg
mov
scas
mov
repnz
mov
push
repnz
inc
xorb
fisubl
cmpsl
jae
imul
xchg
mov
icebp
xchg
loop
mov
pop
xchg
aaa
cld
and
sub
add
and
inc
jecxz
cmpsb
sub
sarl
jecxz
dec
mov
jo
add
sub
lret
push
lahf
pop
and
idiv
je
cmp
inc
mov
push
cmp
scas
push
push
jl
mov
popf
out
mov
cmp
mov
mov
pop
inc
xor
push
inc
mov
push
lds
push
popf
ljmp
pop
lret
lahf
jno
and
sysret
stc
imul
cld
pop
ret
cmp
out
cmpsb
dec
mov
push
bound
orl
inc
inc
mov
les
push
or
push
and
xor
pop
mov
sub
jb
ja
mov
add
outsb
test
mov
push
xor
pusha
inc
mov
sub
nop
into
mov
push
mov
arpl
push
fwait
pop
in
lods
inc
cmp
comiss
xor
sbb
rorl
lds
or
and
hlt
sub
lods
or
stc
jbe
add
mov
std
mov
enter
jo
lods
clc
rclb
mov
add
adc
ja
roll
pop
mov
out
sub
sub
ljmp
sahf
and
loopne
movb
jmp
cltd
ficomps
in
pop
jmp
pop
push
or
adc
divl
and
add
int3
add
repnz
sbb
int3
sub
jmp
packsswb
arpl
jmp
aad
xchg
add
vmovddup
mov
adc
xor
mov
jecxz
sbb
dec
in
pop
or
insl
cmp
loopne
das
and
outsb
fwait
movsl
pop
pop
xchg
mov
loopne
pop
out
xchg
loop
mov
mov
add
mov
out
mov
out
push
xor
mov
jge
mov
stos
test
jle
fdiv
jmp
sub
fs
xchg
mov
fbstp
or
fs
dec
inc
xorl
push
xor
xchg
cld
and
mov
sbb
cli
bound
xor
fcmovnu
sti
test
jo
mov
push
int3
xchg
inc
es
shrl
popf
leave
push
imul
pushf
cmp
fistps
arpl
adc
jbe
mov
inc
imul
lcall
xchg
cs
xor
lret
popf
mov
jp
cld
rorb
adc
pop
mov
and
icebp
xchg
or
inc
push
adc
js
jnp
fisttps
or
enter
xor
mov
dec
push
test
cmc
aas
and
dec
fldenv
xchg
or
das
iret
cltd
negb
and
andb
andb
das
aas
addb
aas
jmp
lods
jge
xlat
mov
inc
int
mov
sbb
or
fmulp
cmc
lods
lcall
pop
dec
xchg
addr16
and
or
nop
and
mov
fs
mov
pop
out
sbb
jge
cmp
sbb
add
fwait
pop
xor
repnz
add
xorl
jmp
call
lret
adc
adc
loop
rcll
sti
push
cld
leave
rorb
arpl
add
pop
sbb
outsb
in
or
or
decl
xchg
outsl
adc
fisubrl
outsb
xor
fiaddl
cmpl
roll
ret
mov
dec
add
into
fxch
cmpsb
cmpsb
shl
pusha
mov
jns
push
mov
mov
xor
jl
cmpsb
in
lock
xchg
sbb
push
aaa
in
jmp
mov
fisubrs
jmp
fimull
imul
loope
and
mov
testl
mov
pop
lods
fildll
movsl
std
jp
sbb
sbb
xchg
cmp
mov
rcrb
idiv
mov
pop
notb
push
stos
sbb
repz
loope
and
xor
mov
push
test
mov
or
ljmp
push
mov
jl
cmpsl
mov
mov
xor
sbb
rolb
popa
stc
loopne
ljmp
in
jnp
sbb
xor
movsb
rcrb
sbb
or
rcrb
push
xor
adc
shll
xchg
aas
pop
aas
sbb
lcall
dec
or
adc
mov
shrb
jle
lock
fsubrp
bound
jecxz
push
jge
arpl
xchg
jle
xor
sti
pop
cmp
ss
mov
shrl
and
daa
inc
int3
adc
sub
sub
push
lcall
mov
pushf
pop
or
xor
rcrl
add
xchg
fnstenv
call
cwtl
xchg
ss
pushf
jge
stos
mov
inc
shrb
mov
out
lea
mov
push
lcall
pop
mov
pop
jg
les
and
sbb
std
sbb
xchg
in
mov
scas
mov
sub
mov
add
push
gs
sub
cmpsl
addb
mov
fadds
mov
arpl
mov
pushf
loop
popf
add
sub
sbb
ss
or
fistl
pop
out
sub
outsl
scas
and
mov
inc
inc
rcrl
dec
addb
scas
xchg
inc
stos
xor
mov
ret
test
int
inc
mov
mov
outsb
xor
cwtl
lret
popa
in
rcll
mov
ds
bound
xchg
std
jecxz
ljmp
dec
test
add
push
jae
adc
adc
cmc
inc
pop
dec
push
aad
cmp
int3
jb
jbe
xor
fs
leave
mov
cmp
jb
je
subb
inc
push
fcmovnbe
sar
mov
enter
rolb
jmp
sbb
out
pop
les
pop
xchg
scas
cmpsl
cmp
mov
add
cli
or
sbb
popf
aam
lea
in
and
call
aam
in
or
int
hlt
ja
jecxz
in
movsb
js
cmp
mov
je
mov
addr16
cld
mov
inc
mov
cmpsb
sahf
das
xchg
loop
das
iret
lods
inc
mov
movsb
mov
push
js
imul
stos
cmp
pop
jnp
ret
sar
pop
adc
xchg
jns
and
pusha
cmp
xor
loopne
inc
xor
jbe
daa
jge
jmp
sbb
mov
frstor
ds
cmpsb
fsubrp
push
pop
rclb
xchg
dec
arpl
std
es
stc
inc
pop
xchg
cmp
or
ficompl
pushf
mov
js
push
arpl
or
mov
mov
insl
and
aaa
mov
jle
rcll
xchg
sbb
add
aad
mov
inc
dec
lret
test
xchg
mov
push
push
sub
jmp
test
in
pop
insb
dec
xchg
test
scas
das
shrb
add
out
rolb
hlt
ret
xor
mov
sbb
imul
dec
mov
aas
jmp
push
bound
ret
xor
fisttpll
mov
andl
in
xor
dec
iret
sbb
and
int
nop
das
aaa
inc
or
jne
mov
js
push
sbb
imul
lret
notl
cmp
mov
mov
rolb
mov
jg
fcomps
leave
jae
ret
call
xor
enter
xlat
je
push
ja
pushf
push
and
sub
jo
mov
bound
enter
jne
dec
jno
jmp
mov
shll
repz
xlat
mov
test
cmp
push
lock
or
dec
ucomiss
xlat
and
aad
xchg
ficoms
dec
clc
dec
pushf
adc
imul
mov
lret
repnz
adc
push
and
outsb
lea
mov
fistps
lcall
insl
push
stos
sub
ds
pop
mov
test
xchg
pushf
mov
adc
data16
imul
ljmp
lods
add
repnz
adc
pop
ljmp
repnz
inc
push
out
sbb
loopne
notb
lock
xchg
sub
jge
mov
ja
add
mov
xchg
push
sub
fnstenv
xchg
jmp
jp
cmp
daa
xor
mov
inc
mull
pop
fwait
and
jnp
push
iret
sbb
fsubr
xor
cltd
in
xchg
hlt
add
mull
jge
adc
in
add
sub
into
sbb
pushf
mov
xlat
mov
cmp
push
mov
mov
and
data16
xchg
mov
outsl
mov
imul
adc
xlat
inc
pop
or
int
test
xor
lret
loopne
jl
sbb
sub
lahf
push
ljmp
xor
fcoml
sbb
or
and
mov
mov
mov
stos
jl
dec
jg
addr16
mov
pop
sub
pop
iret
movsl
ret
sar
movsb
push
mov
in
nop
mov
stc
ljmp
sub
xor
rolb
pop
test
mov
scas
pop
cld
sub
cmp
mov
inc
push
sbb
mov
dec
int3
sti
sub
adcb
dec
sub
mov
mov
xchg
pop
int3
mov
divl
and
jg
into
sbb
in
andl
dec
dec
test
and
aad
mov
cmp
pushf
lea
stc
shl
add
or
lahf
insb
int
xchg
pop
fimull
imul
jnp
and
ja
or
inc
add
fcompp
repnz
out
sbb
cli
add
xor
push
jb
movsl
xchg
je
mov
iret
icebp
lds
lods
mov
jmp
xchg
add
mov
push
fsubs
mov
jb
sub
lcall
cmp
pop
ficoms
adc
iret
ss
and
mov
xchg
fwait
scas
jbe
ret
pop
mov
mov
pop
repz
notl
aaa
int
pop
cmp
sub
cltd
movsb
imul
sahf
rclb
sub
xor
fildl
shlb
mov
das
cmp
add
int3
in
or
jmp
lea
or
mov
add
hlt
ljmp
add
xlat
pop
jno
add
cli
dec
in
in
push
aam
mov
call
jp
fstpl
add
mov
lods
sub
mov
mov
xchg
aas
push
fidivrs
mov
xchg
hlt
cmovb
adc
lds
add
add
push
sbb
xchg
xor
pusha
xchg
push
mov
jl
add
dec
cmpsl
fidivs
pop
pushf
xchg
loop
insb
push
das
call
call
pop
cli
add
xor
je
mov
mov
or
pop
repz
aas
fildll
es
or
mov
sub
push
or
aad
les
aas
inc
push
cwtl
fcoml
adc
fistps
lret
mov
imul
repz
pop
nop
cmpsl
insb
lret
imul
adc
pusha
call
push
repnz
xchg
dec
mov
out
mov
mov
test
push
sub
shll
inc
cmp
cmp
jl
in
sub
xchg
sbb
jg
in
mov
mov
jnp
xor
inc
out
sti
fs
and
sbb
mov
add
sbb
pusha
add
scas
imul
sub
adc
push
out
xchg
fsubrs
mov
xchg
pop
sbb
das
push
lahf
fiaddl
adc
inc
xchg
sub
mov
int3
popf
xor
mov
xchg
ja
ret
out
jge
mov
frstor
stos
or
popa
cmp
cmp
mov
pop
pop
outsb
mov
push
out
sahf
outsb
aad
xlat
cmpsl
cltd
jae
inc
test
daa
jmp
sahf
jne
orb
shlb
jmp
stc
insl
fs
into
aam
jl
and
dec
dec
cmpl
dec
cmpsl
xor
xor
cmpl
out
out
in
jbe
mov
mov
out
in
movsl
mov
jge
mov
xor
ds
mov
pop
mov
sti
imul
sub
sub
mov
cltd
pop
fcomps
jbe
lods
pushf
lret
pop
mov
pushf
mov
fildll
das
ret
mov
outsl
dec
ret
jns
arpl
enter
sbbb
or
hlt
and
sub
stc
xchg
in
ret
addr16
sbb
pop
push
not
sbb
jmp
xor
xchg
xchg
cmp
fistps
xchg
pop
push
push
adc
fidivrl
fnop
frstor
inc
adcb
sbb
push
fst
xchg
cmpsl
pop
lcall
xchg
push
dec
out
inc
fcomps
lahf
adc
call
mov
mov
mov
imul
fsubr
adc
nop
out
das
sbb
push
mov
or
pop
aaa
sbb
fiaddl
pop
or
rcrb
dec
movsb
cmpsb
int
out
pop
xor
mov
fwait
cmp
jbe
or
repz
subl
sahf
movsl
xchg
cmp
lods
add
lret
pop
ds
xchg
sbb
inc
dec
xor
pop
lods
and
xor
std
aaa
jo
movsl
into
das
xchg
cmp
sahf
call
sti
fnstenv
sbb
lret
in
fbstp
sub
or
mov
jp
lret
arpl
std
jne
lods
mov
push
mov
fdivl
aaa
adc
test
jmp
fsts
adc
cs
sbb
push
iret
sbb
mov
jae
cwtl
mov
jg
adc
es
enter
sbb
not
xchg
leave
out
std
les
mov
jne
test
pop
loope
inc
stos
pushf
jl
popf
xor
mov
dec
lock
pop
push
popa
sub
jge
sahf
int3
test
push
es
cmp
pop
mov
push
sub
push
mov
jns
ja
inc
in
insl
out
xor
xchg
test
sub
mov
loopne
mov
push
mov
pop
mov
mov
lea
jmp
mov
mov
daa
or
popa
xchg
loope
ret
rclb
imul
ret
xor
rcrb
in
add
sahf
fsubl
jne
insl
or
fidivrs
and
pop
jle
xor
inc
xchg
dec
dec
jnp
notl
add
je
xor
cmp
cmp
dec
testl
cmc
cmpl
jnp
sti
jb
enter
add
fbld
rcrl
dec
inc
jle
push
mov
xor
rcrl
jo
subb
adc
jns
xor
test
ret
jbe
jle
fisubrs
ss
mov
pop
clc
fldcw
mov
jl
dec
sub
xchg
pop
sbbl
test
loopne
cmp
push
fisttps
stos
shll
subl
adc
cwtl
jle
mov
out
movl
repz
call
nop
push
inc
shl
or
int3
or
adc
pop
and
hlt
sub
aaa
dec
xchg
out
gs
daa
ret
mov
rcrl
scas
push
std
movsb
or
cmp
and
enter
sub
pmulhuw
mov
ret
pop
cs
jl
ret
repnz
sbb
in
xchg
cmp
lods
jbe
setae
addr16
and
dec
sbb
inc
lds
cmp
je
shlb
cli
add
sahf
cli
push
inc
fdivs
inc
xchg
cwtl
push
lods
adc
xchg
push
push
jno
inc
push
mov
ja
imul
jbe
test
dec
sbb
mov
add
adc
xor
negb
outsl
fiadds
lcall
dec
adc
addr16
sbb
jp
and
push
cmovno
add
insl
mov
in
hlt
adc
push
mov
filds
ds
cmp
popf
dec
add
xchg
mov
adc
xor
pop
leave
dec
icebp
and
push
addps
xchg
inc
push
pop
mov
inc
mov
or
imul
jle
and
xchg
inc
lcall
or
dec
loop
xor
mov
mov
dec
rcrl
and
fcoms
inc
jl
test
aaa
mov
lds
and
bound
pop
xor
and
sbb
mov
inc
call
fstl
insb
cmpb
sub
cmp
out
mov
jecxz
mov
gs
push
pop
mov
ljmp
jne
cli
mov
inc
orb
push
sbb
mov
cmpsl
sub
mov
sub
loop
insb
cmp
inc
mov
test
pop
push
fsubl
or
pop
aas
mov
cmp
dec
imul
mov
loopne
and
inc
xor
push
inc
out
mov
and
out
xchg
inc
ljmp
jae
cld
cmp
clc
mov
xlat
orb
cs
fsub
adc
mov
xor
sub
lds
lods
jmp
adc
test
and
fcomps
data16
test
mov
pop
jg
or
push
fldenv
sub
call
out
ja
jmp
imul
sarl
cmpsl
push
push
loopw
xchg
ja
loop
ret
shlb
or
push
addr16
adc
mov
lret
lods
push
testb
xchg
lcall
inc
sub
push
sbb
jno
add
mov
scas
aad
stos
leave
pop
icebp
ds
ret
outsb
inc
data16
ficoms
adc
out
ljmp
cmp
sub
outsl
sahf
xchg
loope
fisttpll
out
arpl
into
and
sbb
test
xchg
push
or
mov
add
test
jmp
mov
adc
lret
movsl
xchg
jmp
sub
pushf
cmp
mov
mov
fdivr
or
js
inc
lods
dec
insb
xor
cmp
lret
cmp
jp
sbb
loopne
xchg
cmp
out
daa
push
xchg
jno
mov
mov
out
adc
fldl
and
in
jmp
mov
mov
jp
dec
sbbb
adcl
mov
cwtl
push
dec
xchg
jmp
shrb
fs
and
mov
dec
mov
mov
inc
pop
cmp
jns
outsl
faddl
outsl
xchg
pop
in
aas
in
xchg
jno
call
mov
pop
push
lds
lods
mov
fsubp
stos
pop
mov
sbb
repnz
in
push
sub
cmpsb
sub
out
mov
and
and
pusha
pop
cmpsb
cmp
xchg
mov
jmp
rcll
jo
mov
popf
test
sub
add
fucomi
mul
adc
push
and
push
fldenv
cmpb
mov
cmc
je
xchg
cmp
adc
dec
rcrb
ds
xchg
jb
jb
lea
pusha
xor
out
dec
jl
add
or
lcall
nop
inc
and
jge
or
adc
xor
ror
rcll
test
ljmp
sahf
dec
aaa
aas
iret
sub
sbb
mov
ret
pop
out
mov
dec
insb
fs
adcl
add
mov
cmp
stos
enter
addb
aas
hlt
mov
scas
int3
movsl
add
dec
cmp
dec
push
outsl
cmp
sbb
inc
clc
inc
cmp
inc
cmp
or
insb
outsb
out
jmp
andl
lea
mov
or
inc
test
rcr
pop
push
bound
cvtps2pi
mov
mov
and
leave
dec
shrb
mov
mov
lret
es
pop
addr16
into
ret
jmp
cltd
adc
mov
mov
jle
mov
add
mov
cli
mov
lret
jg
outsl
sbb
dec
jp
push
pop
pop
dec
btc
out
lcall
scas
ficompl
sub
pop
or
aas
push
pop
pop
dec
btc
outsl
lcall
das
ficompl
sub
pop
or
aas
push
pop
pop
dec
btc
out
lcall
scas
ficompl
sub
mov
or
or
loopne
lock
gs
cmc
loope
xorl
xor
add
adc
popa
test
inc
movsl
inc
mov
inc
mov
in
gs
jne
add
roll
lds
cmc
pusha
in
cmc
and
jno
inc
in
mov
xlat
inc
push
adc
dec
ja
cmp
sub
imul
or
cmp
xor
sahf
sbb
cli
in
data16
pop
daa
pushf
mov
jns
sbb
push
jmp
into
dec
inc
add
adc
iret
add
jmp
xlat
loopne
test
sub
cmp
hlt
push
hlt
jg
pop
sub
sub
ja
xor
push
xor
mov
movsl
jge
flds
jne
int
add
ror
and
xor
sahf
test
inc
dec
push
out
push
mov
lock
sub
mov
add
push
cmc
and
jno
mov
test
xorb
inc
sbb
adc
xor
in
in
test
push
movsl
push
xor
inc
out
and
mov
out
stos
adc
and
jae
push
fcmovne
pop
ret
push
cmc
es
jp
dec
rcll
andl
xchg
je
adc
pop
loope
in
aam
add
adc
add
push
mov
es
test
mov
imul
int
fstl
loopne
ret
popa
icebp
adc
and
xor
add
adc
popa
test
inc
movsl
push
mov
inc
mov
andl
adc
and
xor
add
adc
popa
test
inc
movsl
push
mov
inc
pop
addb
pop
cs
sbb
scas
jnp
jle
add
cmp
out
test
xchg
sub
inc
aaa
sub
cmpsl
hlt
and
pop
popa
inc
fwait
xor
shlb
push
notb
mov
ficomps
aas
out
cmc
aad
mov
movsl
ret
cli
xor
bt
push
hlt
adc
xor
into
push
push
std
hlt
outsb
dec
mov
cmc
inc
fmull
lret
test
arpl
call
test
dec
mov
fwait
jns
imul
sbb
adc
jns
scas
ljmp
mov
inc
jle
xchg
je,pt
cmp
pop
out
outsl
push
clc
ds
sub
sti
rol
stos
cwtl
insb
sub
push
push
mov
movsb
push
pop
pushf
inc
jg
ja
mov
xchg
mov
jbe
dec
in
in
out
popf
sub
in
adc
cmp
gs
and
mov
or
mov
cld
xchg
popf
pushl
or
test
xchg
lock
mov
and
ss
and
xor
pop
icebp
jp
das
mov
mov
call
adc
lea
scas
jns
imul
pop
jmp
sub
xor
sub
and
lcall
cs
lock
fdivs
push
push
lds
rcl
cli
adc
xchg
xchg
mov
xchg
mov
loopne
gs
fmuls
and
or
lock
mov
inc
rorl
sarb
pop
aad
sbb
sti
rcll
add
lret
rcr
js
jb
pushf
fsub
ss
jmp
fwait
cmpsl
inc
mov
and
arpl
pushl
mov
jmp
dec
fnstsw
cmp
test
add
push
jg
shll
arpl
jle
in
sbb
mov
push
cld
dec
inc
cmp
and
bound
cs
adc
xor
dec
cmp
inc
clc
adc
dec
inc
stos
xor
inc
jne
fildll
pusha
out
push
ret
mov
int3
dec
out
cmpsl
mov
mov
lods
ror
lgs
mov
scas
je
ljmp
ret
sbb
shrl
or
mov
lret
js
sahf
icebp
jae
mov
imul
mov
fdivl
enter
repnz
xor
xlat
sub
mov
fwait
in
lods
cli
scas
push
pop
mov
test
mov
cmpsb
out
insl
sub
jae
adc
das
adc
and
or
popa
cmp
xchg
jge
adc
test
mov
int3
sahf
cs
inc
icebp
enter
and
xor
adc
ret
outsb
and
hlt
mov
xchg
fnstcw
shll
jge
lret
pop
mov
mov
xchg
lock
and
ficomps
sub
pop
pop
push
lahf
les
rolb
mov
sahf
pop
rcrl
inc
leave
shrb
mov
addb
pop
jge
pop
hlt
rolb
xchg
fstpl
cmp
sbb
stc
das
jle
mov
pushf
sarb
xlat
repz
in
pop
cli
sbb
fstl
and
test
jns
inc
push
daa
rcrb
pop
les
in
fidivl
xor
mov
test
add
pop
pop
cs
das
shlb
sub
mov
mov
dec
and
ret
jp
inc
or
in
mov
pop
push
mov
mov
setno
sbb
cmp
les
jae
sbb
js
and
test
cmp
sub
dec
js
inc
fists
scas
mov
aad
pop
add
es
jae
mov
loop
daa
divb
pop
and
xchg
mov
push
cmp
daa
xor
sub
sbb
push
mov
int
push
inc
sub
scas
dec
pop
push
pop
pop
imul
mov
fnstenv
sub
lret
js
stc
mov
iret
dec
aas
arpl
fisubl
mov
push
mov
in
test
cmc
lret
rcrb
imul
pop
pop
sarb
imul
cpuid
out
and
out
sahf
fwait
push
mov
xor
pop
and
pop
mov
pop
jecxz
pop
sbb
xchg
test
push
ret
popf
add
aas
mov
in
scas
jl
mov
adc
cld
arpl
es
sti
adc
faddl
int3
ljmp
lcall
movsl
sbb
hlt
mov
stos
je
jbe
adc
out
lret
in
iret
pop
mov
mov
jmp
popf
lea
sub
leave
xchg
pop
inc
clc
dec
sub
data16
xlat
dec
fidivrs
pusha
es
mov
dec
push
pop
es
in
mov
cltd
xlat
xchg
jbe
mov
mov
into
mov
jne
rcrl
je
sbb
mov
add
out
daa
or
test
jmp
jno
adc
add
lds
jae
sbb
aam
pop
push
pushf
loop
xor
push
and
ja
mov
dec
leave
push
push
push
jbe
ss
test
jp
insl
out
push
rolb
nop
xor
inc
inc
xchg
in
test
push
xor
iret
lds
imul
cmpsl
cltd
pop
jmp
push
pop
jnp
leave
mov
mov
out
gs
inc
mov
stc
pop
loop
and
mov
icebp
fistpll
fildll
fmull
and
jg
jo
sub
aas
jns
fildll
dec
jo
insl
jmp
and
jns
cwtl
inc
mov
cld
or
sub
fdivp
loopne
sbb
mov
and
bswap
ret
cmp
mov
clc
popf
inc
inc
lds
aad
dec
les
cmpsl
les
or
in
cwtl
xchg
jecxz
xchg
xor
inc
xor
mov
jne
or
or
out
dec
cwtl
lahf
inc
and
jbe
call
dec
mov
mov
int3
jnp
add
ja
cli
sbb
ss
mov
popf
pop
inc
inc
mov
hlt
test
mov
aas
rorb
adc
mov
xchg
inc
es
xchg
xor
jp
scas
sbb
push
lods
icebp
call
mov
mov
loopne
jecxz
jb
lret
pusha
lods
mov
pushf
cwtl
adcl
fstl
cmp
bound
gs
ljmp
sub
jb
xlat
lods
mov
pusha
in
aad
adc
sub
jnp
adc
test
jl
mov
arpl
imul
inc
push
shl
adc
pop
pop
xchg
push
hlt
mov
test
lret
dec
lahf
cltd
xor
dec
gs
cmpsl
cmp
sbb
mov
addl
xchg
stos
loopne
adc
shr
out
adc
repz
shlb
lret
pop
sbb
mov
lea
push
mov
pushf
pop
jp
mov
sub
orb
in
mov
nop
sarl
lods
push
push
inc
and
pushf
imul
pop
in
pop
cmp
pop
adc
inc
sub
fptan
and
adc
std
ja
push
insb
pusha
les
jne
andl
jle
out
add
mov
fisubrs
jp
das
jp
scas
mov
pop
jl
xor
lcall
push
jnp
pop
or
jle
cmc
stos
cmp
inc
dec
cmc
adc
mov
fdivrl
es
mov
jnp
sti
adc
lret
and
sti
mov
aam
stos
mov
push
inc
lahf
push
mov
out
mov
daa
pop
divb
enter
mov
mov
cmp
enter
jbe
mov
into
ss
fmuls
adc
lock
pop
popf
pop
nop
btr
adc
mov
mov
jmp
aaa
sub
push
sti
xor
or
mov
lahf
imul
inc
pop
loope
mov
aas
dec
in
mov
stos
test
mov
xchg
push
inc
adcl
pop
cld
xor
dec
insl
jmp
add
fdivl
pop
jmp
mov
fs
xchg
dec
xchg
cmpsb
loopne
pop
xor
test
mov
clc
pop
iret
idivb
add
push
dec
push
mov
mov
mov
pop
inc
stos
cmpsb
mov
sbb
cmp
sti
sarb
jg
lahf
in
pop
dec
mov
cmp
sub
push
popa
cmp
cmp
dec
mov
sub
out
lahf
in
ficompl
data16
outsl
sbbl
inc
out
sbb
dec
clc
fwait
sub
jbe
mov
leave
jp
mov
loopne
dec
lea
daa
jmp
outsl
and
aaa
fdivs
jnp
fs
mov
sub
sar
cmp
xor
push
jge
pop
aas
inc
push
lret
jecxz
fcoml
incb
mov
mov
cwtl
jae
add
push
and
mov
pop
repnz
push
incl
mov
out
aaa
push
pop
in
adc
mov
or
xor
push
iret
insb
jmp
popa
add
fcmovnb
aam
subb
rcrb
and
iret
pop
icebp
and
xchg
aaa
or
inc
fmull
into
mov
xchg
or
sbb
mov
sub
inc
dec
inc
mov
mov
mov
aaa
mov
mov
lock
mov
adc
sub
fildll
add
jl
xlat
lds
sbb
dec
int
dec
out
mov
cwtl
xchg
lock
mov
insl
sbb
dec
xchg
mov
out
int3
mov
repz
xchg
mov
stos
mov
stc
shr
mov
pop
fdivs
mov
jle
xor
jno
int
cmp
cmp
mov
cmp
ja
jecxz
out
cmpsl
mov
add
fstpl
inc
cmp
jp
xor
out
std
lods
adc
lods
jb
mov
sbb
icebp
test
mov
sub
mov
test
sarl
dec
add
mov
adc
push
daa
or
scas
add
xchg
xlat
out
das
cld
mov
pop
popf
xlat
jae
pop
jge
loop
and
adc
xorb
das
sub
mov
fbld
scas
push
cmc
clc
cmp
cmp
xchg
aad
jecxz
mov
xlat
xor
in
xchg
cmp
xor
scas
xchg
lea
cmc
add
sti
sub
loopne
out
xorl
ret
dec
add
push
stos
outsb
loope
sub
xor
mov
add
adc
hlt
fucomp
mov
fnsave
add
scas
int
jge
es
negb
test
mov
das
fildl
divb
jge
test
rorb
add
pop
mov
inc
sub
outsl
mov
add
cmp
xchg
and
cmp
or
push
mov
je
cmpsl
push
push
bound
scas
enter
add
adc
cmp
xchg
out
pop
lods
jae
cmp
adc
adc
gs
jmp
notl
xor
mov
mov
popf
xchg
into
lahf
and
jne
ja
jb
jbe
sub
jg
jo
mov
ds
jae
shrb
or
cmpsb
xor
inc
jg
outsl
xchg
aad
call
mov
mov
ret
leave
in
sub
out
hlt
test
mov
daa
jne
loope
xor
xchg
je
outsb
cmp
addl
ror
ss
sbb
fwait
adc
bound
hlt
lock
sbb
dec
push
test
test
or
pop
imull
push
cld
push
clc
insb
sbb
and
into
fs
push
pop
adc
aaa
ss
push
xchg
pop
aad
test
fdivrs
test
ror
ds
adc
add
mov
cmp
jg
mov
xlat
aam
adc
je
or
sbbl
dec
sbb
out
pop
cmp
add
outsb
pusha
lea
cmp
and
push
fiaddl
fcomps
imul
push
mov
jnp
or
test
in
shl
mov
add
mov
jl
and
in
cmpsb
repnz
mov
xlat
jle
mov
in
mov
add
jmp
loop
mov
inc
jecxz
jbe
bound
clc
mov
das
imul
and
sbb
and
loopne
cmp
dec
mov
mov
inc
xor
hlt
xchg
out
sbb
or
mov
pop
outsb
shr
lahf
sbb
fs
push
mov
cli
push
aad
arpl
jp
mov
je
dec
shrb
cmp
pop
inc
les
testl
jmp
pop
scas
stos
mov
cmp
adc
aad
cmc
inc
adc
leave
inc
daa
mov
xchg
mov
jb
jbe
leave
aaa
sbb
mov
ret
outsl
shrl
xor
push
in
lcall
outsb
add
push
sub
cli
lret
push
xor
jge
pop
sarb
mull
data16
rcr
mov
cwtl
cld
xor
add
js
rclb
or
fstpl
adc
popa
jle
adcl
nop
mov
cld
inc
inc
jg
mov
and
je
dec
inc
mov
fdecstp
shll
out
out
add
out
pop
jl
push
jl
test
dec
add
mov
mov
sub
push
xor
cmp
dec
out
stos
call
dec
rcl
adc
stos
in
movsb
test
cmp
or
push
sub
sti
outsb
jg
mov
mov
adc
mov
and
arpl
cmpsl
cmpsb
adc
mov
lock
stos
std
popa
xchg
pop
push
mov
xlat
pop
mov
cld
movsl
nop
xchg
add
out
inc
mov
xor
jno
cli
repz
pop
lret
imul
adc
sub
xor
push
adc
mov
test
or
pusha
out
aaa
jle
cmp
insl
mov
in
or
out
inc
mov
dec
loopne
out
jge
xchg
adc
dec
or
aad
sar
push
pop
pop
movsl
pop
aad
mov
mov
mov
pop
scas
fstps
xchg
inc
lods
and
xor
jnp
adc
cmp
mov
repnz
mov
test
or
mov
xchg
mov
pop
cli
scas
out
bound
push
mov
xchg
push
or
lods
pushf
jnp
iret
xchg
sbb
push
jp
je
enter
pusha
idivb
call
jle
lea
iret
push
outsl
xor
mov
sbb
imull
sub
frstor
push
jmp
imul
imull
jmp
mov
xor
xchg
imulb
inc
fisttps
push
dec
ja
pop
pop
repnz
or
adc
test
mov
dec
pop
mov
mov
loop
mov
ja
aaa
dec
sub
mov
mov
push
adc
jno
jns
mov
pop
jns
mov
shl
mov
push
es
fwait
pop
cld
and
pop
outsl
mov
in
fldenv
js
jb
shrl
jle
cmpsl
add
pushf
adc
sbb
fs
pop
mov
jbe
rorb
adc
dec
pop
or
lret
andb
aam
out
inc
pop
sub
icebp
push
into
rol
ss
rorl
and
push
je
int3
xchg
or
or
or
dec
es
out
push
push
mov
jg
mov
adc
or
cli
push
mov
inc
daa
push
bnd
cli
and
incb
repz
repnz
std
mov
mov
pushf
lret
aam
outsb
outsb
pop
cmc
rcrl
and
shll
cmp
out
call
or
cmp
add
fidivrs
mov
or
arpl
push
fadd
cmp
fsubp
mov
mov
movsb
int
sbb
cmpsb
fnstsw
loope
mov
adc
aaa
imul
inc
hlt
add
xchg
push
cltd
pop
sub
pop
xchg
in
mov
in
mov
sub
in
sub
movsb
push
test
lret
add
sti
or
les
and
jle
in
push
jge
les
sbb
mov
add
push
xchg
mov
lret
jp
cmp
lcall
inc
iret
loope
xchg
or
ljmp
rolb
xchg
inc
jp
cs
es
xchg
ss
call
inc
jno
test
adc
rcr
scas
and
mov
cmpsb
and
popa
jmp
fiaddl
xchg
ret
jnp
sbb
je
scas
and
mov
test
jno
mov
or
loope
adc
sbbl
add
jl
xor
sahf
inc
movsl
cmp
mov
pop
sub
push
gs
int3
jne
fildl
add
push
dec
sub
ret
int
out
pop
push
inc
gs
pop
or
iret
pop
lock
in
mov
std
sbb
ja
and
cmp
mov
into
add
int
dec
and
inc
scas
xchg
push
ret
and
daa
inc
and
sub
sar
pusha
mov
stos
push
push
push
out
xor
ljmp
pop
dec
sbb
push
sbb
and
jbe
xchg
mov
clc
cltd
aaa
add
sub
in
jg
mov
lock
popf
and
jno
adc
xor
dec
outsb
xchg
mov
sbbb
push
sarb
or
mov
mov
mov
pop
xor
cmpsb
and
and
dec
mov
pop
stos
mov
test
fidivs
loopne
adc
pop
inc
push
enter
or
lods
mov
lods
mov
cmp
adc
fs
in
test
xor
jne
inc
mov
je
cmpsl
push
int
mov
dec
mov
fbstp
cmp
in
add
xor
pop
jmp
xor
pushf
push
and
outsl
scas
int
pop
dec
jl
jg
xor
stos
sbb
inc
add
sbb
ret
dec
adc
jb
xrelease
lds
gs
je
push
push
in
sbb
mov
or
pop
popa
icebp
sbb
bnd
pop
lcall
mov
jecxz
jl
mov
jae
aad
mov
iret
mov
cmpsb
imul
in
imul
into
push
inc
scas
test
je
inc
shlb
sbb
addr16
xchg
jae
aaa
cmp
aad
mov
cmpl
stos
mov
clc
jmp
cmc
cmp
sar
add
dec
add
test
test
daa
scas
pop
mov
lret
in
loope
dec
pushl
jno
int
push
aam
mov
popa
decl
enter
insb
pop
cs
dec
dec
push
mov
pop
out
mov
pop
push
xchg
addr16
inc
shld
sti
or
rclb
pushl
loopne
inc
jecxz
dec
add
cmp
pop
push
mov
ret
jp
adcl
pop
push
xchg
mov
xor
fcomp
imul
icebp
stos
or
sahf
pop
mov
movsl
es
mov
aas
dec
ljmp
bound
mov
into
mov
and
xor
daa
repnz
xor
mov
cld
add
push
aaa
fstp
sub
jae
data16
out
aas
push
out
add
sub
js
aam
stc
icebp
xchg
xor
in
iret
xchg
jmp
daa
pop
mov
xor
or
and
test
xchg
mov
push
jns
mov
push
jle
lret
pop
mov
popf
aas
mov
or
aas
movl
mov
push
les
cmp
sbb
mov
cwtl
lock
sub
je
dec
rorl
mov
xor
jo
add
data16
sti
hlt
hlt
xor
fsts
imul
mov
adc
aam
lock
sbb
das
bound
int3
daa
xchg
cmc
inc
ret
pop
dec
cmp
arpl
push
es
stc
dec
iret
push
xlat
scas
sub
fisubs
stos
cmp
adc
push
sbb
pop
fsub
mov
stos
stos
out
lds
mov
mov
lds
xchg
ror
sbb
fwait
cmc
inc
jge
xchg
xchg
or
sub
loopne
test
es
mov
pop
sub
cmp
mov
jbe
sbb
dec
cmp
or
jecxz
lahf
sub
fidivrl
movsb
xchg
ljmp
in
rol
inc
and
fidivs
xor
leave
xchg
sub
dec
cwtl
push
mov
lcall
or
cli
out
sub
test
into
xchg
daa
je
int3
int3
pop
push
sub
jnp
das
addr16
out
js
mov
jnp
das
fisubl
dec
out
aad
aaa
in
movl
jge
or
mov
mov
lea
jecxz
insl
add
or
adc
and
xor
add
adc
popa
test
inc
movsl
push
mov
inc
mov
andl
adc
and
xor
add
adc
popa
test
inc
movsl
push
mov
inc
sbbl
shll
aad
in
cmc
popa
test
inc
test
push
je
add
push
xor
stos
in
adcb
stc
push
pop
scas
dec
shr
mov
repz
dec
add
push
pop
or
add
add
pop
ja
into
add
add
push
add
add
add
lcall
add
add
add
adc
sub
add
inc
add
add
add
mov
sbb
cmp
add
add
add
xor
add
add
add
test
ljmp
add
sahf
add
pop
add
add
add
add
xor
add
repz
add
add
jl
xor
cmp
jecxz
and
jmp
add
add
and
sub
movsb
add
imul
add
add
fldl
xor
dec
add
out
add
lea
leave
add
add
enter
in
add
add
add
xor
push
add
add
add
add
add
add
add
add
mov
pop
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loop
add
push
add
lret
add
pop
add
add
add
add
arpl
mov
ja
test
fwait
add
add
add
add
add
add
add
add
add
sbb
mov
addb
add
add
sbb
jns
lods
add
add
add
add
add
inc
add
add
inc
add
add
cltd
add
add
add
pop
add
add
add
sub
push
add
pop
add
adc
imul
add
add
add
lods
add
add
push
cmp
mov
push
add
add
add
add
dec
add
add
add
add
add
add
insl
add
add
add
add
clc
add
add
add
add
add
add
movsb
add
lahf
add
ljmp
add
add
mov
inc
add
add
add
add
jne
add
insl
add
mov
movsb
add
add
imul
add
adc
push
add
add
add
add
add
add
lds
push
add
add
xor
sub
movsb
add
inc
add
add
add
pop
add
add
or
or
mov
or
xchg
add
add
add
add
inc
add
add
fldl
push
add
add
fildl
inc
add
add
add
add
add
imul
add
add
add
mov
pop
add
add
add
add
add
and
jmp
add
add
add
sub
imul
add
add
add
add
imul
add
or
add
add
add
xchg
add
add
add
add
jl
push
add
enter
movsb
add
pusha
add
mov
loope
imul
jl
movsb
add
add
add
add
add
xchg
add
add
in
add
add
jb
cltd
add
fldl
enter
movsb
add
add
add
add
add
add
add
add
adc
neg
dec
inc
jo
cld
inc
test
lahf
test
mov
leave
add
and
loopne
je
jmp
push
int
iret
or
aam
push
in
gs
outsl
add
xchg
pop
xchg
fists
inc
sbb
sahf
xchg
dec
cmpl
lods
jge
add
sbb
pop
mov
mov
mov
fwait
jae
loope
out
and
cld
xchg
in
xchg
addr16
pop
cld
in
es
repz
or
mov
imulb
lea
mov
repz
or
and
sahf
out
xor
pop
and
int
cltd
fs
dec
push
shr
les
jns
sahf
cmp
cmp
xchg
lds
fbld
aam
push
loopne
out
xor
jo
dec
nop
int3
jecxz
imul
cmp
add
add
ret
dec
cmpsl
push
cmp
int3
lahf
mov
jno
jmp
and
adc
stc
push
inc
fdivrl
daa
dec
aad
dec
nop
fcomip
sub
or
imulb
gs
xchg
jmp
mov
cld
xchg
mov
lcall
imul
shlb
hlt
shrl
adc
fyl2x
aam
stc
adc
jp
and
in
mov
mov
mov
jae
int3
xchg
sub
dec
jno
cmp
and
insb
pop
push
shlb
inc
xchg
lock
sub
lret
sbb
les
ljmp
iret
mov
inc
pop
aas
int
cld
push
rcrl
push
iret
sbb
add
xchg
aaa
or
movsl
mov
movsl
push
xchg
data16
lcall
xor
dec
jge
fs
rcrb
sti
out
ss
jmp
lods
xor
es
adc
pusha
mov
push
sub
fnstenv
dec
mov
xchg
and
cmp
lea
cli
lret
jae
mov
or
mov
xor
cli
repnz
rol
fcompl
shr
sub
and
shll
push
fisubrl
je
adc
cmp
and
cmp
lea
nop
sahf
xor
adc
pop
dec
inc
int
jnp
mov
ja
ror
xchg
fwait
out
out
inc
inc
pop
or
shr
mov
testb
or
fistps
dec
rorl
inc
adc
xor
test
fiaddl
aaa
bound
mov
adc
dec
push
outsb
stc
and
and
xchg
mov
test
call
lcall
aas
jl
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
