call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
pop
cwtl
fnsave
inc
std
xlat
aaa
ljmp
dec
out
imull
xlat
or
sbb
cmp
fnsave
inc
std
push
lea
popf
mov
dec
out
xlat
or
jge
or
cmp
ja
out
std
push
lea
popf
or
cmp
or
sbb
repz
xchg
mov
xor
mov
int3
in
dec
bound
mov
jp
mov
cwtl
in
push
cbtw
sbb
xchg
lret
daa
inc
enter
mov
lock
loop
and
data16
pop
pushf
jns
je
mov
or
pop
mov
fnsave
or
adc
lea
mov
dec
cld
mov
cmpsl
insb
repnz
sub
cmpsb
dec
dec
cmp
jb
lahf
mov
add
pop
and
add
pop
hlt
jne
test
ret
cmpsl
addr16
js
insl
pusha
push
mov
inc
jnp
mov
mov
jns
sbb
adc
ret
std
pop
lea
popf
aaa
lods
fnstsw
xor
jge
or
xchg
ja
add
jns
push
clc
pop
ljmp
mov
mov
mov
inc
dec
notb
es
call
imul
mov
inc
imull
jge
and
mov
pop
fnsave
inc
popf
aaa
lods
pop
mov
imull
jge
or
xchg
ja
inc
std
push
lea
popf
aaa
lods
pop
mov
imull
jge
or
xchg
mov
mov
dec
pop
pop
daa
add
out
mov
dec
cmpsl
xor
cltd
mov
adc
test
xchg
mulb
clc
fwait
push
xchg
loop
test
sub
push
add
iret
lock
mov
in
fisubrl
repz
mov
pop
xor
out
fmul
and
mov
dec
push
enter
mov
xchg
sahf
pop
mov
jl
xorb
jb
mov
pop
cmpsl
out
and
scas
mov
jmp
mov
adc
adc
or
lods
addr16
or
mov
out
dec
movsl
shlb
out
cmpsb
mov
test
mov
cmp
adc
popa
stc
and
iret
sahf
fsubs
mov
popa
mov
mov
lds
popa
mov
or
divl
pop
ds
and
jne
jo
sti
dec
inc
lods
sbb
aas
push
aaa
dec
daa
dec
pop
and
insl
and
in
dec
ds
push
test
inc
in
dec
mov
adc
mov
xchg
xchg
jbe
or
popa
mov
cld
stc
or
and
or
cwtl
rcr
add
adc
push
pop
mov
fbstp
mov
and
scas
outsb
outsb
mov
cmp
fnstcw
push
add
sbb
aad
aas
xchg
setle
jg
push
mov
gs
rolb
addl
stos
decb
sbbb
repnz
negb
xor
scas
mov
add
cmp
cmp
fidivrs
jne
imul
cld
in
iret
add
mov
jnp
xor
jge
sbb
stos
dec
aas
pushf
adc
or
pop
int3
aaa
cli
dec
out
mov
pop
mov
push
and
sti
outsl
inc
inc
xchg
dec
or
lahf
call
or
sbb
mov
mov
cmp
addr16
cmpb
int3
ret
dec
and
int3
mov
mov
lods
out
test
cmp
jecxz
loope
pop
xlat
es
inc
inc
in
xchg
test
jg
inc
or
adc
add
sub
hlt
lret
testb
sub
stc
mov
movsl
loop
or
and
push
and
and
stos
cmp
pop
jle
pop
jae
mov
pop
jbe
and
dec
das
mov
push
lcall
les
imul
pop
fistl
mov
jmp
imul
push
movsb
test
inc
xor
xchg
pop
xchg
shlb
and
repnz
pop
cmpsb
sub
mov
mov
sub
xchg
jnp
inc
jnp
gs
mov
in
dec
cmc
xchg
or
push
out
or
in
daa
negl
into
or
add
ret
loope
in
int
and
scas
pop
and
mov
ret
fildl
mov
stc
inc
pop
notl
add
inc
and
lods
sbb
cli
and
into
lahf
popf
push
mov
dec
dec
popf
cmp
test
les
dec
or
ljmp
mov
xchg
pop
rorl
inc
out
mov
sub
jl
push
dec
imulb
inc
fiadds
cmpsb
pop
out
mov
add
xlat
push
cmp
enter
jmp
and
lods
test
jle
or
out
xor
add
lcall
imul
pop
inc
lods
stos
inc
add
out
adc
pop
push
mov
jbe
sti
adc
fldcw
pop
push
iret
push
mov
cmp
xchg
jbe
data16
jge
jbe
ret
mov
fdivr
cwtl
fistpll
lods
cltd
std
scas
pusha
int
push
lea
push
jbe
cmpsl
mov
dec
aam
movsl
xor
cmpsb
mov
mov
pop
ja
movsl
xchg
mov
popa
mov
mov
pop
out
das
subl
xor
dec
xchg
movsl
lret
in
inc
into
rcrl
hlt
mov
daa
inc
daa
lods
or
ljmp
pop
lea
lret
arpl
pop
cmpb
mov
sub
dec
xor
in
mov
mov
aaa
cmp
sti
push
adc
out
rorl
test
inc
inc
insb
dec
lock
shr
adc
mov
cmpsl
ja
call
js
clc
test
cmc
mov
shrl
mov
sub
xorb
ja
fsts
and
mov
pop
icebp
xchg
fisubrl
sahf
push
sbb
ss
adc
push
xchg
pop
and
jle
call
stos
lock
dec
rcrl
gs
out
jne
jbe
enter
loope
push
insb
mov
fstpl
mov
inc
pop
pop
stos
jmp
mov
inc
movsl
xor
fwait
cmpsl
in
adc
jle
aad
icebp
dec
cltd
inc
mov
lods
sahf
mov
push
sub
pop
fisttps
push
lea
rcr
push
sbb
and
sbb
ljmp
push
sub
sub
cmp
fnstsw
pop
dec
adc
jae
push
outsb
in
imul
data16
int
cmp
mov
add
jmp
mov
sbb
imulb
fadd
loop
test
cwtl
jp
push
adc
dec
xor
xchg
outsb
into
test
and
add
nop
adc
jge
into
push
lods
jg
xchg
cltd
mov
cs
and
mov
mov
mulps
les
gs
jmp
push
fwait
xchg
ljmp
push
push
pushf
lcall
push
jl
mov
daa
mov
mov
fcoml
inc
dec
cwtl
scas
insl
fidivrl
cmc
jl
cmp
scas
lods
or
cmc
mov
subl
push
jmp
lods
sub
pop
cmp
pop
dec
cmpsb
push
mov
loope
call
ret
and
sbb
fisttpl
jp
nop
inc
je
sbb
inc
arpl
xchg
rclb
push
scas
cmpsl
movsl
stos
rorb
lret
push
adc
jbe
sbb
cmpsb
mov
int3
ss
outsb
insl
inc
mov
dec
stos
in
out
pushf
jge
sub
mov
lret
jmp
outsb
and
stc
mov
out
iret
ja
cmpsl
ret
dec
adc
out
bound
ljmp
sub
bound
or
test
ret
je
mov
xor
lret
mov
cmc
rcr
pop
imul
mov
jg
adc
add
xor
iret
cltd
push
pop
outsb
lods
xchg
jecxz
or
mov
sahf
popa
pop
lds
stos
add
xor
and
push
jo
hlt
mov
or
dec
pop
aas
cmp
inc
jecxz
loope
int
inc
and
push
andl
fwait
inc
imul
push
cmpsb
lods
push
out
mov
mov
lret
push
rcrb
jl
out
js
cmp
xor
rcll
mov
xchg
xchg
jb
lock
rcll
int3
sbb
jle
pushf
daa
stos
pop
add
iret
dec
push
lock
mov
out
enter
into
cmp
xor
pushf
mov
out
sbb
mov
das
ss
in
mov
cmp
jp
popa
mov
inc
cmp
adc
cmp
das
sbb
scas
xlat
sbb
push
popa
mov
and
pop
adc
pop
lock
mov
pop
inc
mov
lcall
inc
lods
cmc
mov
pusha
ds
arpl
sahf
mov
arpl
mov
movsb
xchg
lahf
int
cs
dec
mov
push
stos
std
fs
ret
test
jns
jbe
adc
jl
push
imul
jge
negb
pop
std
lret
mov
dec
popa
cmp
and
add
pop
ja
sbb
lock
mov
xchg
push
xchg
test
fstpt
fstps
test
mov
lcall
daa
int
js
stos
xchg
sahf
push
call
or
adc
pop
decl
shrb
lret
test
and
orb
movsb
dec
shlb
fisubs
cmpsb
xlat
pop
arpl
cmp
mov
idivl
sub
adc
rcr
rorl
ficompl
xchg
mov
mov
and
aad
push
scas
xchg
out
in
inc
gs
adc
cmc
addr16
jno
shlb
push
jo
stos
push
jno
pop
cmp
or
add
xor
xor
stc
jl
push
xchg
or
sbb
loop
push
aaa
out
pop
pop
jb
out
ds
jecxz
push
fidivl
leave
scas
mov
sub
mov
adc
pop
xor
repnz
push
dec
cld
add
mov
outsb
xchg
xchg
adc
fbld
mov
jge
insl
pop
lock
push
stos
push
or
jnp
cwtl
jmp
ret
mov
aam
cmp
test
sbb
xchg
stc
xlat
mov
mov
pop
in
mov
cmp
imul
clc
repnz
je
push
jge
mov
mov
jmp
sbb
popf
xor
or
mov
fdivr
loopne
loope
add
xchg
lods
mov
lret
cmp
push
cli
pop
sub
out
mov
hlt
es
mull
jns
fucomi
lret
add
scas
pop
sub
adc
in
mov
push
lds
inc
xchg
xchg
adc
and
cld
sbb
dec
sbb
mov
cmp
lret
fdiv
xorb
sub
stos
movsl
into
push
lock
in
shrl
mov
cwtl
pop
xchg
xchg
es
mov
mov
mov
decl
push
je
jne
and
pusha
and
popl
jnp
ficomps
into
mov
xlat
repz
mov
or
out
lea
imul
sub
mov
lds
cmp
arpl
jg
xchg
mov
rorl
lahf
mov
cmp
pop
mov
lock
or
cld
or
inc
xchg
in
cli
mov
scas
xor
or
xchg
xor
fimuls
les
mov
adc
repz
and
pop
and
xorb
mov
mov
rcr
arpl
ds
add
cmp
fmuls
xchg
jge
pop
adc
push
push
sbb
rcrb
sub
cmpsl
sti
pushf
xor
xchg
aam
fsubrl
and
out
les
lods
jge
test
fimull
scas
add
inc
in
pop
movl
out
inc
fsts
and
xchg
sub
dec
mov
mov
mov
lret
and
xchg
pop
stos
fcoml
inc
or
gs
push
les
sbb
hlt
negl
loopne
sbb
into
push
push
out
add
loopne
stc
cmp
in
mov
ret
add
or
pop
pop
mov
shll
add
out
pop
dec
dec
mov
call
shlb
fs
shl
fsubs
jmp
cli
xchg
mov
repnz
lea
jae
shlb
iret
jne
imul
fstpl
xchg
adc
scas
xor
rorb
mov
in
sub
push
loope
lret
push
adc
cs
fstl
and
pushf
xor
xchg
xchg
bound
pop
mov
outsl
in
sub
stc
lods
jle
aad
aad
cmpsl
sti
ljmp
inc
pushf
and
cs
sub
stc
data16
mov
adc
lea
incl
gs
arpl
lea
sahf
mov
add
cltd
sub
cwtl
xor
jle
xor
sub
sbb
cmp
cmpsl
call
dec
jns
or
rcrb
stc
pop
inc
mov
cmp
cs
sbb
in
aas
hlt
cld
gs
jle
jp
lds
aaa
sbb
lahf
mov
stc
ja
jmp
loope
xchg
aam
pop
in
adc
mov
push
xchg
pop
lock
mov
testb
xor
rcll
dec
xchg
push
dec
lds
pop
mov
scas
mov
jle
popf
mov
jbe
in
adc
add
sbb
ljmp
adcb
and
jno
adc
push
or
pusha
cmp
and
cmp
pop
fsubs
repz
test
adc
sub
in
jo
xor
ljmp
mov
mov
dec
and
and
popa
mov
movsl
adc
lods
and
pop
mov
pop
hlt
sbb
xor
adc
mov
sbb
or
pushf
and
je
jae
fs
mov
dec
outsb
cld
sub
mov
mov
xchg
pop
mov
cs
inc
data16
pop
adcb
sbb
xor
shrb
add
loopne
sub
cmpsl
sbb
repnz
loopne
adc
sub
xor
std
daa
mov
cmpb
mov
lcall
or
repnz
dec
and
inc
mov
jne,pn
faddl
cmc
lret
shll
pop
popa
cmpsb
ss
adc
pushf
xor
lds
stos
mov
shrl
jns
push
mov
aad
cwtl
xor
mov
push
or
andl
and
mov
xchg
leave
push
lods
fucomp
jp
sub
mov
flds
sbb
cld
fmull
adc
xchg
jmp
xor
ss
jp
cmp
fstpl
push
xor
lcall
push
in
pop
mov
sbb
test
add
out
insl
push
dec
push
adc
aad
hlt
test
adc
sbb
out
loopne
add
sarl
inc
lret
push
mov
mov
loope
and
sub
mov
mov
pop
sub
jle
aas
inc
dec
mov
test
mov
dec
jmp
cmc
jnp
push
mov
je
pop
jmp
mov
outsb
jmp
sbb
ds
add
fistl
add
sub
mov
cmp
ljmp
pusha
shrl
mov
lock
insb
daa
ja
mov
xchg
sbb
jne
inc
cmp
xchg
xchg
xchg
in
mov
movaps
addb
pop
push
daa
pushw
jno
das
pushf
jl
out
jl
mov
aaa
and
jo
popf
fisttps
sti
jp
addr16
bnd
hlt
add
dec
shlb
xchg
dec
push
std
jmp
dec
jb
sub
xchg
mov
jne
data16
jmp
xlat
stos
lret
pop
movsl
pop
xor
xchg
sbb
mov
imul
sbb
push
jbe
mov
test
lahf
cwtl
push
xchg
push
testb
mov
pop
or
cmpsl
hlt
insb
sbb
arpl
inc
repnz
pop
xchg
dec
imul
and
lods
das
add
or
cli
cs
aaa
pop
fdivrs
pop
sbb
pop
aam
lret
inc
jg
mov
jp
pop
out
loop
cwtl
push
dec
cmp
mov
pop
and
xor
jl
pop
sbb
push
push
or
pop
sub
cmp
stos
js
adcl
aaa
adc
push
inc
mov
add
lcall
mov
sub
stos
jecxz
fidivs
jne
dec
add
jp
and
lock
cli
jno
jno
pop
pop
jo
pop
add
cli
inc
mov
hlt
out
pop
ss
sahf
mov
xor
stc
js
aas
dec
mov
roll
xchg
sbb
mull
insl
sbb
jns
aaa
fsts
push
push
xor
test
xlat
push
lock
xchg
or
movsb
in
test
lods
repnz
push
insb
sbb
jb
pop
sti
push
sub
push
xchg
pop
add
xor
andl
je
jo
mov
push
push
movsb
mov
cmp
fwait
repz
cmpsb
cmp
pop
cmp
jmp
or
fcmovnu
jne
xchg
and
rorb
aam
jmp
stos
sahf
jge
idiv
push
and
sub
gs
sbb
pop
sub
addb
sbb
sti
fmul
test
in
psubb
stos
cmp
mov
icebp
cmp
mov
sub
das
movsl
loopne
fbld
add
lods
cmp
adc
fisubs
out
addr16
lods
test
or
mov
test
inc
leave
mov
push
mov
mov
pop
mov
clc
or
cwtl
inc
push
push
push
lods
sbb
jmp
pop
cmp
mov
pop
sub
out
inc
pop
pop
xchg
aas
popf
xor
ljmp
push
pop
and
bound
sbb
push
gs
add
popa
push
stc
imul
pop
cs
mov
xchg
cmpb
mov
add
jle
cmp
scas
jg
or
mov
jnp
sbb
fisttpl
shll
dec
movsb
lret
das
daa
mov
je
sub
movsl
pop
cmp
mov
out
aaa
sbb
mov
out
and
int
xor
mov
and
xor
in
sub
clc
je
lret
aaa
push
xchg
inc
enter
pop
inc
fldt
xchg
in
inc
pop
mov
bound
mov
enter
fs
pusha
jle
scas
outsb
ficoml
es
cs
mov
ljmp
adc
mov
jge
pop
jo
jnp
and
pop
xchg
push
int3
or
gs
loopne
mov
jmp
popa
push
mov
arpl
mov
push
pop
jbe
inc
xor
shll
lcall
xchg
stos
icebp
daa
jl
adc
pop
test
cwtl
mov
jb
jbe
cmp
sub
push
negb
adc
and
in
adc
loop
mov
push
mov
lcall
clc
pop
mov
out
mov
dec
mov
inc
iret
xchg
xchg
iret
stos
cs
push
or
cltd
xchg
xor
jbe
outsb
arpl
cmovge
lret
lds
mov
add
cmp
sub
das
xlat
jmp
push
in
aaa
popa
cs
int
or
daa
mov
mov
shll
mov
enter
push
rcrb
jbe
pop
into
iret
push
push
mov
test
cmp
cmp
jg
add
cmc
in
fsubs
aad
stos
cmp
jae
popf
mov
xchg
scas
cwtl
mov
mov
xor
xor
mov
pop
in
mov
inc
or
cwtl
inc
lcall
mov
mov
int
dec
jno
cmp
in
data16
pop
lock
out
jns
rcrl
nop
mov
insb
xor
clc
mov
cmp
cltd
mov
adc
push
ljmp
ret
dec
push
mov
dec
jge
mov
push
mov
fstl
das
sar
stc
loopne
xlat
or
ficompl
jge
mov
fmull
mov
sub
mov
sub
xchg
lea
mov
std
cltd
jecxz
inc
loopne
adc
imul
insb
fadd
add
rcl
dec
lret
push
subb
lds
fsubrs
mov
enter
int
jg
dec
fstps
iret
xor
add
pop
ret
mov
jne
in
cmc
stc
push
inc
or
add
aas
adc
imul
mov
imull
cmp
movsl
cmc
sahf
mov
and
les
scas
mov
aaa
mov
cmp
add
xchg
adc
divl
imul
hlt
adc
mov
pop
pop
xchg
ljmp
fchs
jge
xchg
icebp
call
push
adc
xor
jae
mov
mov
je
sbb
mov
out
cmc
sbb
adc
cmp
stos
dec
lahf
xor
xchg
clc
leave
subl
lret
rolb
inc
testb
pop
in
sbb
lds
addr16
bnd
mov
outsl
jle
mov
xor
addr16
ss
and
sbbb
icebp
neg
repnz
pop
cli
xchg
lahf
hlt
sbb
sub
mov
adc
test
rcl
xchg
or
je
mov
mov
push
and
leave
cli
sarl
loope
and
out
or
pop
dec
mov
pop
in
mov
aas
cmp
and
or
add
mov
out
pop
cld
lahf
inc
mov
adcl
loop
pop
ljmp
mov
mov
add
das
sahf
in
repnz
adc
out
inc
lahf
lea
mov
cld
and
jne
and
pushf
mov
mov
call
les
aaa
testl
inc
test
cmc
and
fcomi
test
jmp
pusha
in
mov
or
imul
scas
faddl
stos
pop
pop
sub
jg
sbb
ror
jae
aaa
push
push
cmpsb
cmp
mov
out
nop
out
repnz
xchg
mov
adc
insb
mov
std
push
lea
popf
aaa
lods
pop
mov
imull
jge
or
xchg
ja
inc
std
push
lea
popf
aaa
lods
pop
mov
imull
jge
or
xchg
aas
in
aas
std
push
lea
popf
lahf
lods
pop
mov
imull
jge
or
cmpsl
cmp
int3
fdivl
inc
std
push
lea
popf
aaa
lods
xchg
pop
mov
xchg
dec
sarb
push
in
sbb
jne
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
cmp
sub
sbb
or
jno
sub
mov
mov
mov
call
idivb
push
sub
sbb
or
js
push
jbe
test
mov
movsl
jmp
idivb
pop
sub
sbb
or
js
push
insb
mov
shr
mov
xchg
testb
sbb
mov
mov
ret
mov
or
loopne
sub
lods
aam
xlat
push
out
cmc
lret
push
incb
and
mov
inc
call
mov
jb
inc
push
sub
adc
lcall
or
pop
sbb
idivb
push
movlhps
es
adc
xchg
add
dec
mov
and
dec
test
call
pushf
imul
negl
dec
stos
movsb
ss
ja
or
mov
scas
push
or
shl
and
idiv
push
jl
mov
pop
pop
sti
incl
loop
sbb
mov
out
push
sub
sbb
or
inc
push
outsl
mov
mov
call
xchg
pop
arpl
pop
daa
dec
aaa
sbb
or
sbb
out
int
jmp
int
jle
test
fwait
dec
jle
push
jnp
dec
xor
add
mul
rorb
mov
pop
inc
sub
inc
insl
inc
cmp
dec
jbe
xchg
mov
call
idivb
push
sub
sbb
or
js
push
jbe
xchg
mov
call
idivb
push
dec
xchg
test
ja
test
lcall
adc
cmpsl
sub
mov
in
jns
std
add
xchg
pop
and
stc
std
fcoms
shrl
mov
sub
lret
adc
xor
adc
pop
add
out
mov
dec
jb
movsl
or
and
addr16
scas
mov
out
loopne
orl
movsl
or
fstpl
rorb
rcrb
xchg
aam
stos
faddp
pop
cwtl
mov
je
sbb
clc
mov
js
fsubr
je
fadds
cmc
mov
ljmp
or
pop
test
mov
jmp
mov
cs
pop
inc
mov
pushl
in
push
call
mov
lods
jns
push
lds
test
sub
addr16
rcl
xchg
xlat
sbb
or
and
cmp
pop
sbb
jle
sub
jle
mov
aaa
sub
sub
jnp
ss
bound
adc
aas
loope
stc
cmpsl
mov
fsincos
xchg
jecxz
lret
adc
inc
arpl
jmp
ss
jo
cli
or
stos
cmp
lods
lock
test
lds
ret
jns
adc
pop
out
out
cmpsb
xchg
and
mov
jge
test
mov
enter
fs
push
inc
loope
push
pop
or
jg
xor
add
push
mov
sub
xor
xchg
ret
std
rclb
js
adc
mov
leave
aas
mov
pop
sbb
inc
xchg
mov
and
xchg
insl
push
jnp
and
mov
xor
and
xchg
xchg
mov
jp
jp
jmp
scas
jae
xor
data16
outsl
ret
stos
sub
mov
sbb
mov
rcl
fs
sub
ljmp
les
xchg
xlat
mov
imul
aas
adc
mov
aam
jnp
or
stc
or
pop
pop
into
mov
adc
mov
sti
ss
push
out
pop
inc
adc
and
pop
push
repz
dec
push
xchg
sub
or
in
sar
lret
xchg
roll
out
and
test
xor
fimull
xor
sbb
insl
lea
je
push
aad
cmp
inc
mov
xor
imul
orl
stos
pop
data16
bound
cmpb
pop
push
xlat
xchg
test
mov
mov
adcl
das
test
mov
xchg
rol
out
lcall
push
test
jmp
and
sbb
xor
xchg
test
push
adc
mov
sbb
jo
test
or
xor
sbb
xchg
xchg
lcall
cmpsl
push
fsub
imul
jmp
xorb
arpl
xor
aas
xchg
mov
in
movsb
sbb
jns
xor
das
fimull
add
mov
or
loop
sub
fildl
mov
sub
mov
mov
xchg
jle,pt
mov
mov
imul
pop
and
and
push
pusha
mov
fistpll
notl
xchg
arpl
les
mov
push
ror
sbb
insl
adc
xchg
dec
stos
add
or
in
pop
ret
in
push
cli
mov
out
dec
test
mov
inc
js
jbe
xchg
lret
ret
cltd
call
test
fisttpl
insb
jmp
loopne
or
cld
in
mov
xchg
cmp
js
and
sub
xchg
sar
insl
mov
and
sub
orb
and
test
icebp
dec
cmp
mov
dec
imul
cmp
sbb
push
es
testl
mov
fimull
dec
xor
fstl
inc
cli
xchg
push
aam
inc
popf
add
push
lcall
leave
mov
inc
dec
jle
std
fnsave
call
pop
ficoml
outsb
cli
dec
stc
shll
xchg
in
inc
cli
xor
pop
or
aas
out
and
fcoml
lods
xor
int
jg
outsb
call
xchg
or
test
aas
mov
and
movsl
pop
and
popf
add
jge
roll
cmp
dec
cs
daa
xchg
mov
cmp
mov
cltd
call
roll
and
adc
inc
cmp
pop
cltd
or
dec
add
add
push
jmp
out
call
mov
lcall
test
adc
cwtl
rcll
rol
std
jg
sbb
xchg
dec
xlat
mov
mov
arpl
ljmp
div
popa
or
ss
sub
and
xchg
mov
das
push
and
lret
ret
inc
mov
push
mov
and
adc
cmp
mov
shll
imul
or
lock
pushf
bound
scas
or
xchg
inc
mov
lea
mov
adc
mov
adc
add
and
cli
int
shll
xor
sti
jb
pop
mov
jle
mov
imul
mov
out
call
xchg
push
fcomi
mov
or
fstpl
test
pop
xchg
sbb
popa
push
ficompl
xchg
sub
or
add
add
jae
add
sbb
mov
dec
pop
repnz
loopne
je
dec
sbb
mov
sar
sarl
shlb
push
iret
pop
mov
add
in
xor
lock
in
or
xchg
inc
test
jno
xchg
dec
dec
rorb
jge
jecxz
sahf
leave
xchg
adc
mov
fisubl
adcb
scas
fidivs
nop
xchg
push
push
mov
lods
popf
shll
test
adc
out
out
dec
mov
jecxz
jbe
mov
out
loope
bsr
mov
jno
and
mov
std
pop
das
insb
dec
shrl
iret
lcall
and
cmp
in
xchg
lock
sbb
std
jecxz
xor
insl
es
movsb
test
add
cmpb
inc
sbb
mov
inc
dec
mov
add
dec
pop
push
outsb
xchg
lods
dec
sub
mov
lock
vpmaxub
mov
int
lret
add
and
popf
adc
pushf
xor
jg
lret
jo
das
outsl
mov
out
inc
fsubl
pop
daa
rcll
andb
das
and
shll
sbb
addb
mov
es
push
or
push
cmp
fistl
xchg
orb
jb
jno
sub
jo
adc
fisttpll
daa
test
cltd
jo
pop
xchg
inc
mov
loope
leave
dec
sub
mov
push
jmp
popf
xchg
xor
jb
fsubs
rcl
mov
roll
xor
imul
adc
rorl
dec
clc
ds
call
jno
pop
andl
mov
popf
dec
enter
enterw
rcrb
jmp
pop
fisubs
sub
add
xchg
int
sbb
insb
test
xlat
addr16
ja
pop
mov
inc
loop
cmpsl
ljmp
repnz
movsb
inc
pop
cmp
lods
or
gs
out
shll
sbb
push
pop
add
xor
jne
add
lcall
jmp
mov
jo
clc
clc
pop
and
fisttpll
shl
xor
mov
popa
ja
out
test
mov
out
incl
ret
sbb
mov
push
adc
ss
push
push
mov
ja
daa
cmpsl
nop
dec
aad
pop
and
jnp
arpl
ret
push
pop
mov
imul
and
xchg
mov
mov
jno
aam
imul
jae
in
data16
rcrb
ljmp
sbbb
cmp
orb
bound
and
loop
icebp
or
jecxz
pop
add
push
ss
push
in
mov
or
mov
xchg
push
out
mov
jmp
dec
xor
movsl
inc
push
cmp
mov
imul
fldt
sub
arpl
je
pop
adc
push
les
ror
xchg
rorb
inc
jle
mov
cmc
pop
fwait
cltd
inc
orl
pop
ficoml
mov
pop
mov
test
shl
xor
fucom
pusha
pop
daa
sub
inc
dec
fucomi
inc
fs
lret
das
lret
xor
xchg
mov
add
cltd
hlt
cs
pop
fucomip
push
mov
les
sar
insb
xchg
clc
add
mov
test
sub
insl
mov
inc
aad
dec
mov
cmp
dec
mov
push
pop
lea
loope
xor
int3
stc
xor
push
xchg
mov
ret
sti
mov
sbb
call
mov
sbb
add
cmp
arpl
pop
push
adc
inc
mov
or
jbe
lock
movsb
push
sbb
movsb
inc
js
popl
test
cmp
push
mov
push
sub
movsb
nop
pop
xor
movsb
scas
mov
shrb
jb
mov
mov
das
lock
divl
and
test
les
das
sub
jmp
shll
pop
fiadds
call
dec
cmovle
sub
clc
rcrl
mov
inc
push
xchg
imul
jo
xchg
push
push
outsb
dec
or
jg
mov
mov
scas
xchg
loop
in
lods
popf
push
mov
push
test
mov
into
xchg
sub
andl
adc
adc
fbld
aad
in
jg
inc
xor
mov
push
inc
xor
out
add
inc
mov
mov
js
idivl
cli
cmp
inc
mov
pop
sbb
test
daa
mov
cmp
fwait
add
mov
hlt
int
lods
xlat
loopne
gs
add
add
inc
enter
jge
loope
pop
loop
or
loop
and
bound
mov
push
push
sub
cwtl
lock
mov
sub
popf
into
fsubrl
add
push
jl
jp
adc
sbb
in
jl
jle
loop
testb
mov
roll
or
lret
call
xor
inc
out
popaw
jns
and
mov
mov
lock
loopne
loope
enter
add
mov
popf
icebp
jl
add
outsb
jp
xlat
jge
test
inc
and
rolb
mov
pop
dec
lds
mov
mov
aad
adc
fucomi
pop
das
loopne
jb,pt
dec
in
jl
orl
lock
pop
xchg
jb
outsb
or
sbb
test
xor
sbb
xchg
lods
std
aam
sti
sbb
or
mov
sub
mov
mov
push
jo
mov
mov
lret
pop
pop
mov
add
cmpsl
jno
sbb
ds
out
imul
mov
xor
xchg
lods
enter
sub
inc
ficoms
cmp
insl
in
lods
inc
cli
or
ret
popf
mov
mov
pop
mov
dec
fadds
call
lea
mov
push
pop
mov
dec
mov
or
adc
fistpl
add
cmc
cld
sub
cs
shr
lea
add
push
test
mov
rcr
jns
lret
pop
scas
pop
mov
mov
pop
cltd
stos
repnz
push
ljmp
push
lahf
movsb
mov
cmc
loopne
ljmp
add
sarl
hlt
lret
sbb
push
sti
ja
iret
addb
dec
pop
jl
icebp
dec
dec
adc
sub
mov
sti
xor
fs
ss
outsl
jmp
cwtl
xchg
jmp
sbb
movsb
push
inc
inc
inc
pop
scas
adc
xchg
fisttpl
mov
orb
dec
cltd
popa
fwait
ds
sbb
add
dec
mov
adc
cmp
adc
mov
xchg
lahf
add
mov
inc
and
jge
xchg
jle
shll
pop
push
xchg
inc
jmp
push
lret
imul
pop
sbb
cwtl
sbb
imul
push
dec
daa
fwait
lahf
mov
lds
xchg
cmp
push
lcall
loopne
add
mov
mov
lahf
shlb
cmp
xchg
and
sbb
and
sbb
stc
inc
stos
push
and
sub
rcll
xchg
or
xor
adc
push
das
mov
pop
lock
sbb
xor
mov
sti
lds
out
mov
rolb
inc
cld
cmp
roll
cmp
jl
xchg
testb
mov
adc
stos
jb
mov
ret
subl
cmp
scas
cs
clc
imulb
outsl
pop
lods
dec
nop
jge
sbb
mov
ret
incl
or
out
dec
mov
ss
push
addr16
lods
jnp
sti
cmp
clc
sarl
test
add
xchg
mov
pop
pop
fisttpll
movsb
and
fs
out
xchg
xor
xchg
add
push
pop
and
out
outsl
xchg
sbb
xor
lock
cltd
dec
rorb
outsb
aam
add
dec
dec
in
test
mov
inc
and
and
fbstp
push
adc
ljmp
jnp
loopne
idiv
hlt
stos
and
jo
sar
xchg
ljmp
out
sti
in
add
dec
sbb
sbb
xor
leave
lcall
xor
sub
xchg
loope
loopne
inc
cmp
je
rcrb
add
jne
and
mov
mov
mov
push
outsl
pop
cmp
xchg
test
gs
push
mov
mov
es
ljmp
xchg
shll
dec
mov
mov
push
and
pop
or
mov
jae
adc
inc
sbb
out
sbb
pop
xor
xor
cmpsb
mov
or
insb
jnp
out
xor
adc
adc
xchg
add
mov
sub
pxor
mov
cmp
adc
lea
mov
mov
ds
shlb
aaa
das
sbb
sub
insl
aas
fdiv
push
adc
lods
ror
xchg
ret
cmp
push
int3
cmp
cmc
test
insb
test
mov
imul
shl
iret
mov
push
cltd
cmpsl
addr16
adc
and
clc
invlpg
or
hlt
cld
jo
mov
pop
das
insb
adc
sbb
int
lods
test
jns
lea
xchg
or
insb
outsl
adc
sub
cmp
popl
lahf
pop
lds
dec
adc
movsb
jle
pop
xchg
or
dec
shr
mul
sti
cld
or
mov
std
test
adc
negl
pop
aaa
add
inc
loope
cli
in
pop
test
shlb
pop
xor
push
inc
pop
scas
stc
pop
sbb
outsl
jp
push
inc
pop
push
pushf
pop
jle
loope
test
subl
xchg
rcl
pop
stc
int3
dec
inc
mov
add
in
jle
cld
push
shlb
xchg
ljmp
xor
bound
fnstsw
fstl
leave
imul
outsl
outsb
inc
lods
mov
call
mov
xchg
inc
pusha
jo
aaa
in
and
popa
dec
cmpsl
push
mov
sbb
js
out
repnz
jp
in
pop
test
sti
sarb
add
lret
inc
dec
fldenv
xchg
jo
xor
es
data16
inc
lcall
adc
test
das
test
fstps
aaa
and
mov
add
lea
push
sarb
mov
xchg
xchg
lret
movsb
jge
adc
stos
outsl
mov
iret
cmp
loope
pop
jmp
mov
orl
and
loop
xor
or
xchg
repz
push
in
push
sub
cmpsb
mov
or
std
jg
rcr
sarl
sub
or
xchg
push
dec
cmpsb
xchg
inc
decl
cli
rcll
or
xor
int
lcall
push
pop
test
hlt
dec
sbb
mov
mov
int3
mov
and
daa
inc
sub
test
mov
add
xchg
fdivrs
jns
adc
dec
sbb
mov
les
hlt
in
mov
adc
push
mulb
inc
popf
cld
imul
mov
aaa
xor
adc
mov
adc
cmp
mov
stos
call
pop
insb
jge
jp
fcompl
fsubs
mov
and
xchg
jl
and
jecxz
testb
sub
es
je
pop
scas
add
cmc
or
loope
xchg
xor
std
mov
in
inc
xchg
cmpsl
orl
out
pop
inc
pop
cmpsl
mov
jbe
jecxz
pushf
sbb
mov
xor
or
mov
jp
cmp
jno
or
pop
ret
fmuls
rcll
mov
aas
in
add
dec
stos
lods
or
out
loop
negb
push
xchg
nop
lret
and
cmp
mov
add
jne
imul
sbb
mov
jle
push
pop
cmp
bound
rcrl
push
cmp
jl
jg
mov
les
fnsave
popa
in
push
fs
pop
in
lock
inc
mov
sbb
and
popa
lds
aad
js
jg
mov
sbb
movsl
pusha
popa
ljmp
aad
insb
mov
addr16
out
inc
and
pop
push
in
jp
or
shll
sti
sbb
xchg
add
adc
cwtl
mov
imul
roll
sbb
test
test
sub
mov
inc
adc
and
shll
mov
add
addr16
lcall
pop
lret
loope
inc
sbb
or
inc
cli
out
dec
pshufw
and
jbe
insb
je
div
fs
or
push
sbb
leave
test
outsb
sub
aaa
xor
pop
js
pop
push
les
lods
mov
inc
and
outsl
lods
insb
inc
cmpsl
outsb
sbb
inc
cmp
popa
sti
stc
mov
in
aas
gs
sub
lea
xchg
iret
sbb
in
jns
adc
mov
add
xor
xchg
and
lcall
imul
pop
cli
mov
cmp
or
popa
lret
shll
inc
push
mov
sbb
cmp
adc
ss
dec
out
mov
jl
xchg
mov
or
jae
inc
std
cmp
add
mov
shlb
stos
mov
mov
cs
pop
xor
ja
outsl
sbb
daa
xor
push
sbb
ja
xchg
xor
xchg
ja
cmpsl
out
in
andl
pop
adc
rcrl
pop
jp
or
pop
add
dec
fwait
cs
out
add
mov
xor
ds
jg
repnz
lods
cmpsb
cltd
cmp
ret
test
repz
ret
xor
les
out
sub
repnz
pop
sub
inc
insb
test
sbbl
sti
and
and
movswl
xor
and
inc
xor
mov
pop
aad
jbe
pop
fdivr
repnz
aad
mov
scas
lock
ret
lret
sbb
lock
sub
ret
and
push
mov
aad
rclb
mov
push
cs
rorl
adc
jg
and
insb
enter
mov
in
out
lahf
pushf
jae
pop
xchg
or
and
adc
dec
mov
pop
sbb
mov
pop
jne
pop
xchg
repnz
arpl
fcoms
pop
pop
inc
int
lahf
sti
repz
test
adc
js
xchg
sub
dec
test
scas
sbb
mov
nop
mov
fiadds
imul
int
mov
cmp
pop
cmp
mov
add
outsl
jle
mov
outsl
push
in
push
in
cmc
outsb
les
lods
in
xlat
cmpsl
fldenv
jl
adc
repnz
add
adc
mov
sbb
pop
scas
les
dec
clc
and
dec
in
sub
jl
push
xchg
push
mov
call
daa
ret
fdivp
pop
rcll
mov
jmp
or
ja
cmp
imul
jge
mov
adc
lods
sbb
pop
jg
xlat
aam
mov
ret
push
jecxz
inc
adc
and
in
push
fcomps
jecxz
dec
mov
cmc
pop
rcrl
nop
outsl
andb
adc
out
sahf
inc
cli
cmp
pop
movsb
push
cmp
mov
call
add
lea
push
daa
leave
or
js
push
jbe
xchg
mov
call
idivb
push
sub
sbb
or
js
push
jbe
xchg
mov
call
idivb
push
sub
sbb
or
js
imul
xchg
mov
call
idivb
push
sub
sbb
or
js
push
jbe
xchg
xor
pusha
sub
sbb
or
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
daa
lock
loopne
rorb
and
pop
int
stc
bound
filds
mov
adc
loopne
rorb
cmp
nop
or
pusha
mov
inc
lods
and
jmp
push
fsubs
xor
add
jo
inc
mov
mov
push
out
in
or
mov
cmpsl
xor
jae
outsl
push
stos
adc
inc
leave
enter
out
cmpb
loopne
pop
fstps
cli
rcl
in
outsl
les
adc
add
jle
loopne
clc
lock
insl
mov
lahf
jae
sub
bt
pusha
lea
xor
aaa
adc
lods
scas
jge
mov
mov
mov
in
add
movsl
fucomp
adc
das
cmp
cwtl
sbb
lahf
enter
pop
xor
popf
xchg
adc
rorb
cmpsb
add
add
adc
and
mov
push
mov
leave
pop
shrb
adc
in
cmc
js
dec
aam
movsl
sub
add
lock
pop
mov
rcrl
pusha
in
pop
in
pusha
scas
push
mov
and
jg
insb
jge
insl
mov
mov
inc
out
jno
dec
mov
add
add
fadds
and
ja
je
lock
loopne
mov
test
sub
cmp
in
pusha
fstl
inc
mov
adc
loopne
rorb
cmp
nop
or
pusha
fstl
inc
mov
adc
repz
and
mov
jmp
cli
pop
add
sbb
sbb
fisubl
sahf
loope
mov
imul
aad
sbb
and
loopne
inc
insl
pop
dec
jecxz
mov
popa
test
jg
jp
mov
lock
push
adc
mov
and
mov
push
jb
pop
push
jmp
das
les
ss
addr16
mov
sub
dec
loop
jle
fmuls
inc
add
sbb
imul
fstpl
scas
push
add
or
xor
jno
ret
jmp
arpl
insl
dec
rorl
arpl
jle
stc
fbstp
push
or
loope
cwtl
ss
mov
loopne
sub
rorb
mov
push
push
mov
inc
jbe
sbb
cmpsl
aad
es
popf
lods
jne
jno
dec
dec
enter
xchg
jbe
mov
fwait
xor
mov
jbe
pop
or
dec
aad
das
mov
subl
mov
cmp
sbb
cld
cmp
push
lcall
fbstp
imul
xor
inc
dec
dec
jg
pop
rcrb
jmp
ds
adcb
in
adc
popa
add
scas
sbb
dec
xor
fnstsw
aad
aaa
jb
icebp
mov
and
lahf
fcomi
cmpsb
ljmp
mov
xchg
lahf
jmp
push
test
push
inc
cli
xor
imul
dec
and
adc
sub
bound
mov
mov
jl
cmp
or
gs
pop
mov
sbb
push
push
and
jge
repnz
ds
popa
or
rcl
mov
or
add
je
ret
loop
sbb
int
dec
pop
pop
ja
xchg
mov
idivb
pop
push
loop
dec
out
in
pop
int
sbb
jb
and
jb
sub
push
leave
or
mov
or
lea
test
mov
lods
lea
arpl
cmpsl
xchg
int3
jb
js
into
mov
push
repz
xchg
call
push
arpl
jne
inc
cld
push
ds
cmpsb
dec
sub
mov
jns
pusha
movsl
fcomps
enter
mov
ret
lods
dec
loope
lds
inc
cmp
push
orb
xchg
cwtl
daa
inc
ja
sbb
je
jo
fwait
inc
subb
push
cmpsl
loopne
inc
cmp
mov
fwait
add
lock
jo
sbbb
subb
sub
or
loopne
scas
mov
jbe
push
push
sub
clc
push
lds
pop
popf
inc
hlt
xor
iret
and
out
sbb
notb
cltd
call
mov
out
and
xchg
rcl
lock
sar
sub
adc
cmp
lahf
outsb
fistps
int
das
addr16
mov
ds
mov
xchg
inc
fbld
jmp
les
mov
testl
out
arpl
test
mov
sbb
xor
in
xor
dec
dec
xchg
roll
rorb
mov
xchg
out
push
inc
xor
add
stc
sub
out
je
jo
sbb
dec
sarb
cli
adc
mov
inc
cmp
adc
mov
test
lea
push
cmpsb
js
fldt
mov
fnsave
lahf
jne
pop
pop
out
sub
jb
cmpsl
hlt
lods
xchg
lcall
xchg
rcll
xchg
jle
push
mov
dec
aad
icebp
jp
stc
jp
sbb
sbb
scas
sarl
push
filds
jne
jno
or
jno
xlat
jno
inc
jno
xor
int3
rcll
loopne
js
movsb
pop
sub
push
and
pop
test
pop
addr16
add
or
xlat
xchg
sub
mov
mov
movsb
or
jecxz
ljmp
mov
and
inc
dec
in
mov
pop
push
or
push
xchg
cmp
sub
xor
aam
hlt
sbb
xchg
bswap
mov
in
dec
cmp
or
in
sbb
out
subl
in
push
test
cmpsl
jmp
push
pop
adc
mov
push
xlat
jb
jmp
inc
push
pop
nop
int3
stc
lea
adcb
rolb
pop
xor
push
leave
adc
in
loope
sbb
leave
jecxz
out
std
arpl
xlat
les
jo
dec
mov
rol
cmp
loope
repnz
sbb
cmp
das
cmpsb
cmp
mov
fldcw
in
idivl
mov
push
rolb
into
and
mov
insb
dec
repz
jo
sbb
add
mov
int3
imull
dec
pop
adc
or
outsl
aaa
mov
and
dec
adc
xor
lcall
fistpl
aaa
outsb
push
orb
mov
leave
mov
nop
or
jb
and
gs
call
push
test
push
fistl
pop
ja
xchg
adc
xor
push
xor
adc
push
std
sub
test
xor
cmp
mov
sub
lahf
dec
and
adc
cmpsb
movl
sbb
mov
pop
iret
ljmp
jnp
pop
cmc
or
xchg
lret
frstor
adc
and
push
addr16
mov
fildl
or
out
mov
push
push
inc
test
lock
cmp
mov
cwtl
push
pop
sub
and
addl
lret
imul
push
sbb
sub
mov
cmp
andb
ds
outsb
inc
loope
rolb
cmp
xorl
dec
pop
hlt
xchg
cwtl
xor
in
add
lcall
insl
lea
into
ret
flds
xor
lods
mov
out
xor
orl
push
seta
push
std
mov
movsl
xchg
lods
lea
push
fwait
sub
xor
dec
cmpsl
lahf
xor
pushf
mov
jbe
pop
insb
outsb
loope
fiaddl
sub
pop
dec
lahf
jne
inc
mov
cwtl
xchg
imul
xchg
xchg
rcll
xchg
ret
std
mov
xchg
cli
aaa
fnstcw
bound
jle
mov
out
xchg
jl
ss
pushf
or
add
enter
jecxz
pause
mov
inc
dec
cmp
in
add
cli
mov
xlat
push
out
and
and
outsb
jns
test
lock
sti
mov
cs
adc
and
push
or
cmp
pop
mov
sub
sub
add
push
mov
into
sbbl
cmp
inc
push
adcb
adc
mov
dec
les
cltd
rcrb
in
addr16
push
rorb
add
jecxz
decl
mov
mov
mov
ret
mov
leave
sub
cmp
nop
jp
shll
gs
mov
lods
js
ja
hlt
and
repnz
sub
icebp
add
push
xlat
bound
rclb
or
les
and
in
mov
ds
js
insl
lods
rol
outsl
cs
int
je
int
movl
lods
xor
sbb
and
sub
repnz
ja
pop
and
std
lret
pop
or
mov
push
in
jns
xor
jecxz
push
xchg
jnp
in
shll
or
mov
dec
negb
lds
aad
mov
inc
dec
xchg
dec
pop
sti
sarb
xor
mov
xchg
jg
cmpsb
or
xchg
data16
movsb
pop
lods
sahf
vmaskmovdqu
popa
jnp
js
js
sub
cmp
insl
dec
jo
xor
mov
jecxz
ds
lahf
inc
scas
cmp
ret
outsl
das
inc
cmp
insl
jmp
bound
dec
shrl
xor
repz
shl
popf
add
rcrb
daa
ret
push
push
sbb
gs
sbb
in
inc
rorb
sub
jns
rorb
addr16
cmp
test
xchg
xchg
ss
dec
inc
push
xchg
push
inc
mov
arpl
dec
fs
imul
and
mov
mov
adc
into
pop
imul
xor
out
cmp
cltd
iret
mov
sbb
or
mov
xchg
and
or
mov
pop
xchg
mov
cwtl
push
or
pop
adc
jb
loopne
sub
stc
add
pusha
xchg
dec
sub
fs
iret
mov
xorb
and
add
mov
push
fisttpll
pop
inc
push
data16
xlat
inc
or
push
sbb
out
mov
or
xor
xchg
xchg
lcall
insl
sub
jmp
add
xchg
xchg
sbb
cmp
sub
pop
push
adc
ss
fidivrl
stos
pusha
cmp
push
int
andl
push
mov
dec
aam
insb
cpuid
pop
or
daa
insb
movsl
pop
roll
aad
ljmp
pop
call
mov
push
mov
push
cmpsb
pop
in
mov
nop
inc
out
inc
jne
mov
xchg
insl
dec
clc
xlat
sbb
nop
pop
out
outsb
icebp
test
pop
inc
sub
push
adc
ss
scas
jae
jge
mov
sub
and
stc
and
mov
pop
mov
sub
adc
pop
mov
dec
out
out
data16
stos
stos
and
notb
jge
adc
push
inc
jle
xor
push
ss
mov
add
mov
pop
and
stos
xchg
sbb
popa
cmp
sub
mov
addr16
cmp
xchg
inc
and
and
mov
inc
mov
inc
cmp
jl
stos
and
movsb
dec
stos
ss
dec
or
sbb
int3
jle
sarl
mov
test
or
push
insl
or
rcrb
lahf
out
std
pop
lret
add
call
int
jmp
mov
insl
mov
sub
and
pop
in
dec
ja
xchg
cmpb
inc
in
push
pop
sbb
mov
lahf
xorb
repnz
inc
fcompl
xchg
or
sbbb
aaa
jl
xchg
gs
jmp
sahf
orb
imul
pop
inc
jg
scas
sbbl
pusha
xor
pop
or
ret
inc
push
shl
xor
lret
lret
clc
rorl
push
nop
cmp
mov
fldl
inc
add
sub
repz
cmpb
dec
in
or
add
insb
mov
imul
inc
cmp
cmp
xchg
or
in
int
mov
xchg
int3
sbb
out
inc
inc
jnp
dec
mov
xlat
ljmp
dec
shll
jg
jle
mov
mov
test
mov
lea
jno
clc
fmulp
in
and
in
in
or
rol
in
dec
iret
scas
xor
xchg
jp
mov
pop
jnp
ljmp
mov
lea
xor
inc
xchg
shlb
ja
jecxz,pn
inc
stos
lock
cmp
sub
int3
lret
nop
stc
adc
lea
jae
int
data16
dec
test
lcall
data16
xor
rorl
out
mov
cmpsb
cwtl
jne
fistps
mov
sub
testl
int3
fistpll
mov
sub
mov
mov
jb
out
adc
sti
xlat
adc
in
cld
movsl
out
lret
push
mov
mov
push
and
xchg
mov
stos
std
push
gs
mov
jmp
repz
and
std
sbb
adc
mov
sub
pop
mov
mov
adc
xor
xor
pop
dec
out
push
dec
or
roll
jecxz
dec
out
insl
jl
sbb
movsb
sub
pop
push
js
jnp
movsl
or
push
and
mov
in
pop
add
or
cmp
add
push
add
test
pop
jl
push
repnz
std
jb
outsb
mov
pushf
inc
stos
mov
sahf
arpl
insl
lea
outsb
mov
fs
ret
mov
inc
out
shr
les
mov
xor
cmp
and
push
mov
pushf
push
outsb
push
movsb
cld
popf
push
unpcklps
jns
jno
std
dec
sbb
fdivl
add
jecxz
pop
repz
test
push
add
jae
xchg
aaa
scas
jge
sbbl
sahf
shll
push
mov
sbb
jbe
insb
les
lds
stos
rolb
lcall
or
sbb
adc
movsl
icebp
fcoml
push
ljmp
xchg
mov
imul
push
xor
test
test
pop
adcb
cwtl
scas
scas
imul
jmp
imul
outsl
les
mov
inc
xor
hlt
int
sub
dec
xor
imul
in
sbb
and
add
mov
rol
push
xchg
xchg
push
mov
sti
int3
test
bound
mov
dec
ret
adc
movsb
das
ss
movl
lret
jle
dec
xor
jl
cmp
and
adc
sub
pop
outsb
push
mov
mov
jo
jp
dec
inc
faddl
nop
cwtl
les
cld
xor
xor
les
mov
dec
aaa
and
js
adc
and
ja
cld
imul
outsb
test
aas
movsb
inc
inc
mov
mov
shrl
mov
push
out
hlt
repnz
cmp
pop
sbb
push
sub
mov
adc
pop
mov
sub
test
pop
icebp
push
jecxz
pop
jnp
repnz
sbb
cmp
aad
inc
mov
cmp
mov
mov
rcll
in
xor
inc
or
stos
iret
out
mov
dec
stos
cmp
scas
mov
mov
fistps
test
push
fs
in
xchg
mov
mov
xchg
xor
jp
popa
gs
jp
cwtl
or
jl
add
imul
jg
scas
pop
xor
xor
in
fwait
push
sti
mov
aad
pop
leave
ss
push
push
movhps
fbld
lahf
sbb
xlat
sbb
ret
je
repnz
jae
add
inc
xor
jo
fdivrs
or
adc
pop
mov
clc
mov
arpl
js
mov
adc
ljmp
addl
mov
and
adc
sbb
lea
adc
sub
mov
inc
sti
adc
cltd
negb
das
add
into
pop
cmp
dec
xchg
inc
pop
aaa
sahf
nop
push
add
pop
addb
bsf
mov
jmp
rcll
mov
stc
sbbl
outsb
mov
dec
cmp
pop
xor
mov
jne
leave
testb
push
or
xchg
imul
push
xchg
xchg
insl
push
jecxz
dec
jl
cmp
cmp
xchg
ljmp
mov
dec
dec
pushf
daa
jge
push
jns
or
push
outsb
in
or
inc
or
sub
inc
and
pop
shrb
je
test
lods
out
or
pop
pop
js
push
dec
test
es
loopne
mov
jne
ret
mov
js
and
push
pop
mov
sbb
xchg
mov
jbe
bnd
mov
nop
clc
fildll
and
jnp
dec
rorl
and
jecxz
sahf
inc
push
inc
dec
pop
stc
inc
inc
inc
daa
mov
xlat
mov
sbb
ja
loop
stc
roll
popf
leave
mov
sub
daa
cwtl
movsl
and
mov
ret
xor
dec
cltd
fwait
push
mov
movb
inc
inc
testb
mulb
sub
xorb
add
xchg
loop
mov
push
shrl
in
or
or
outsb
mov
cmp
addr16
inc
pop
data16
fs
adc
popf
push
clc
inc
in
mov
mov
mov
and
inc
sahf
out
out
pop
movsl
xchg
and
mov
lock
icebp
push
jbe
sbb
mov
aas
jg
hlt
outsb
test
xor
lods
imul
test
cmp
mov
fidivrs
je
fadds
das
std
mov
dec
movsb
in
inc
and
push
push
jnp
sbb
nop
sbb
addr16
and
loope
mov
adc
das
inc
stos
ja
jno
test
sbbl
mov
mov
insb
stc
je
adc
in
add
pop
push
mov
pop
jno
addl
dec
testb
and
push
add
hlt
add
aaa
outsb
das
imull
cmp
xlat
fisttpll
mov
dec
negl
mov
aam
sahf
lret
movsb
jns,pn
xlat
enter
inc
mov
pop
outsl
adc
sarb
ds
dec
xchg
pop
sub
lock
and
and
cmp
shrl
scas
bound
gs
ljmp
loope
stos
xchg
jo
imul
adc
sbb
fsubrp
jmp
iret
push
rorb
xchg
jo
jno
inc
cltd
js
mov
loope
push
mov
mov
pop
int
mov
loopne
jb
lea
cmp
pop
push
aaa
mov
test
fimull
dec
push
jns
sbb
jno
inc
xlat
cmp
mov
jo
arpl
fldl
push
inc
fcmovb
mov
insb
dec
lods
pop
testb
repz
jns
test
push
dec
pop
gs
mov
in
add
xor
adc
test
and
xor
aad
enter
mov
les
loop
sbb
mov
dec
adc
out
inc
cmpsl
inc
pusha
insb
faddp
push
xchg
das
lcall
insb
leave
mov
mov
inc
jb
out
cwtl
das
add
jmp
mov
stos
add
gs
push
decl
ja
cld
or
insb
mov
jae
out
add
ljmp
pop
ja
dec
and
loope
xchg
test
xchg
xor
daa
addb
lahf
cmp
mov
adc
fsubl
xor
stc
push
cmp
dec
dec
aam
or
jmp
rolb
adcl
in
jle
cmp
hlt
ss
sub
sti
out
dec
fists
aas
sbb
xchg
mov
push
cld
mov
fcmovbe
add
sar
es
popf
pop
inc
or
mov
and
rcl
loopne
jnp
dec
xchg
shlb
sbb
mov
push
pop
pop
dec
xor
or
les
jecxz
lock
lods
scas
mov
ret
adc
sti
xor
out
aam
add
xchg
insl
lods
fadds
icebp
fnsave
into
cvtsi2ssl
jg
rol
or
cmp
mov
push
mov
and
push
xchg
dec
cmpsl
inc
sbb
mov
inc
scas
push
lahf
cmp
or
mov
xor
lahf
rolb
sbb
repz
outsb
arpl
xchg
shlb
out
pop
js
inc
push
int
sbb
ja
or
jb
in
and
pusha
stc
nop
push
push
mov
push
pop
test
dec
mov
das
int3
mov
fmull
add
or
sbb
es
ret
arpl
shll
fwait
insb
pop
or
jae
stos
outsb
lods
jge
fwait
adc
inc
js
and
gs
mov
add
mov
addr16
lcall
shll
mov
jg
xlat
out
cwtl
loope
nop
add
xor
int
fmulp
jb
push
into
pop
pop
jne
dec
repnz
aad
jns
mov
jp
xchg
xchg
or
stc
mov
shrl
inc
or
jmp
xchg
out
scas
les
dec
push
pop
sbb
pop
int3
sbbb
notl
xchg
mov
adc
lock
lds
and
jl
cmp
mov
imul
ss
icebp
subb
scas
int3
mov
mov
aas
les
les
in
adc
dec
cmpsl
dec
scas
popf
cmp
pusha
cmp
push
fcoms
push
sbb
ficompl
in
sti
dec
mov
fcoml
adc
or
mov
mov
xorb
push
les
fmull
jmp
and
xor
movsb
sub
jg
sub
pushf
jle
jb
or
fsts
es
jbe
pop
ss
sub
mov
xor
pop
dec
inc
imul
jae
cmp
fcomip
mov
imul
push
mov
fnstsw
loopne
cmp
add
or
loopne
rorb
cmp
nop
or
pusha
fstl
inc
mov
adc
loopne
rorb
cmp
nop
or
pusha
fstl
inc
mov
adc
loopne
rorb
cmp
nop
or
pusha
fsts
inc
mov
adc
add
hlt
pop
in
aam
sarb
lea
jo
lret
int
lret
pop
bound
jg
xchg
into
xchg
mov
cmpsl
push
mov
movsb
out
pop
dec
pop
jle
outsl
daa
push
push
push
ret
ficoms
mov
cmpsl
sahf
xlat
mov
mov
pop
dec
addr16
outsb
daa
ficoms
inc
ds
into
xchg
mov
cmpsl
sahf
xlat
mov
mov
mov
outsb
daa
push
adc
dec
add
stos
fdivr
fadds
and
sub
orl
pop
nop
dec
int3
outsl
jg
movsl
xchg
roll
rcll
pop
popa
push
mov
inc
icebp
push
cmpsl
mov
ss
stos
loope
bts
mov
xchg
stc
inc
fwait
lret
adc
mov
or
sbb
jle
scas
fimull
jae
pop
mov
out
fiadds
out
cmpsl
mov
js
sbb
int3
lret
imul
dec
mov
and
js
xor
pop
mov
cmp
jmp
push
sti
enter
inc
icebp
mov
and
xor
shll
pop
mov
scas
pop
or
pop
andl
addl
xchg
into
xchg
mov
cmpsl
sahf
xlat
mov
mov
pop
dec
pop
jle
outsb
daa
push
push
push
inc
ja,pt
push
lahf
clc
mov
into
sahf
mov
lods
mov
jb
jae
pop
push
popa
pop
ss
xor
jne
es
mov
aad
lahf
lret
mov
cmp
jb
push
outsb
dec
pop
xor
sub
adc
mov
filds
mov
pop
dec
pop
jle
outsb
daa
push
push
push
inc
ja,pt
ficoms
mov
cmpsl
sahf
xlat
mov
mov
pop
dec
pop
jle
outsb
daa
push
push
push
inc
ja,pt
ficoms
arpl
mov
mov
sub
jg
jge
push
loop
movsb
jg
out
add
jge
dec
sub
xor
sbb
xchg
or
sbb
sbbb
jbe
lahf
xchg
dec
push
mov
mov
pop
gs
lahf
jecxz
ds
jb
rclb
arpl
test
rcll
leave
xchg
push
cmp
jl
inc
add
mov
lcall
cltd
fbstp
lahf
mov
mov
push
ficoml
push
pop
pop
aad
dec
inc
iret
jle
inc
pop
insb
test
adc
jge
jb
leave
stos
fcomps
outsb
pop
and
sbb
and
pop
nop
jno
pop
sub
mov
pop
jmp
and
dec
dec
pop
xchg
mov
lcall
and
sti
xchg
mov
pop
adc
sbb
loop
jecxz
xchg
push
stc
les
lods
notl
sub
icebp
or
cs
fxch
pop
cmp
add
xor
inc
pop
ret
cmp
rcrl
fistpl
xchg
lds
loopne
sbb
out
mov
sti
icebp
add
sub
imul
jg
test
add
mov
xor
pop
xor
and
rorb
sbb
sbb
push
fcoml
imulb
mov
push
lret
adc
popf
call
arpl
lds
test
into
insl
ss
push
popa
dec
inc
xor
jg
mov
sbb
mov
fisttpll
add
inc
andl
xor
rclb
sti
push
add
fldcw
mov
push
mov
fs
test
mov
dec
push
mov
out
mov
sub
cmp
push
rol
fcoml
out
imul
push
ficomps
sub
lcall
inc
ret
dec
aas
inc
adc
jae
call
iret
mov
cmp
das
adc
xchg
loopne
and
fmuls
inc
lahf
adc
sbb
or
xchg
dec
inc
mov
push
lock
arpl
xchg
push
cmp
xor
aaa
fsubl
adcl
rolb
push
addr16
aaa
mov
push
and
aam
call
aas
jne
es
add
push
jg
and
mov
or
sub
cmp
dec
test
inc
fsubrl
fadd
pop
xchg
jg
cmp
inc
adc
or
dec
scas
neg
lock
pop
push
in
fistpll
dec
movsb
sub
leave
push
cltd
movsl
jo
mov
repnz
iret
rcll
enter
in
fcoms
add
out
adc
popa
lock
ret
hlt
test
test
push
ret
and
or
pusha
popa
sbb
pop
mov
test
add
out
int3
pop
sbb
jbe
hlt
popa
div
mov
aaa
pop
adc
in
pop
repnz
jmp
movsb
mov
push
lods
sti
dec
in
mov
jle
xchg
lock
cld
cmp
das
cmp
lret
and
idivb
enter
mov
cld
sbbb
mov
ds
ds
adc
mov
aaa
mov
jmp
les
or
jno
imul
test
push
repz
xchg
xchg
insl
stos
lcall
add
mov
xor
xor
andb
pusha
mov
xchg
sbb
loopne
dec
xchg
bound
ja
and
enter
invd
flds
mov
cwtl
pushf
mov
push
dec
mov
pop
cs
pop
lret
xor
inc
sbb
jl
xchg
daa
mov
push
decb
ja
icebp
push
add
scas
push
dec
mov
dec
xor
cltd
mov
divb
or
lods
inc
and
xchg
pop
mov
sub
dec
mov
xor
or
inc
inc
popf
xchg
and
adc
mov
push
inc
mov
sbb
add
xchg
rcll
xchg
fwait
in
insl
leave
xchg
adc
jns
imul
dec
add
out
mov
push
inc
xor
sub
fdivrl
mov
pop
in
mov
sub
mov
movsb
inc
add
cmpsl
xor
xchg
pusha
xor
insb
pusha
or
clc
int
insb
adc
adc
and
push
scas
jno
cmp
imul
popf
dec
or
sti
sbb
pop
jae
mov
or
js
nop
cmpsb
and
mov
cmpsb
lret
js
xor
js
in
movsl
mov
les
mov
dec
mov
clc
mov
dec
je
stos
insl
cmp
sbbl
dec
cs
in
adc
pushf
pop
ret
jmp
and
cltd
jb
jne
pop
clc
mov
mov
ds
ficomps
pusha
and
push
iret
aam
xor
repz
lcall
jb
dec
scas
sbb
sahf
fs
mov
push
jl
sub
stc
pop
fcmovb
out
js
lods
mov
xchg
or
sbbl
pop
mov
xor
mov
push
jecxz
pushw
sti
out
push
jae
cmp
repz
lds
xor
mov
cmc
mov
jl
jle
mov
bound
and
aam
push
jmp
scas
xchg
or
aam
fdiv
mov
inc
mov
dec
sub
mov
lret
sbb
sbb
fwait
push
pop
jp
xlat
sbb
in
sub
arpl
cld
shlb
cli
pop
cli
adc
pushl
popf
cli
outsb
mov
loop
and
insb
cs
inc
lock
test
popf
movsl
insl
mov
sarb
out
xor
mov
fdiv
xor
mov
jnp
mov
pusha
jl
shl
and
dec
jl
dec
btrl
call
bound
adc
mov
xchg
not
pop
iret
jne
jmp
arpl
out
ljmp
xlat
inc
cmp
mov
inc
push
dec
mov
cmp
les
adc
mov
arpl
inc
jnp
xchg
push
dec
and
jmp
mov
inc
add
loope
pop
popa
popa
rclb
stos
pop
lahf
int3
js
outsb
add
rcll
daa
pop
sub
sub
push
sahf
jmp
nop
dec
push
or
xor
lret
mov
lods
in
call
or
mov
push
push
insl
sahf
sti
dec
repz
das
xor
fcompl
shrl
gs
xchg
fcomps
push
or
mov
mov
or
rcr
jae
aaa
cmp
insb
call
imul
mov
or
imulb
pop
in
dec
ljmp
lret
xchg
jge
xchg
insl
pop
das
in
sub
cmp
je
mov
inc
popa
push
in
in
shrb
lods
cmp
jmp
jns
fdivrl
pop
outsl
jae
bound
sub
or
cmp
xchg
mov
sub
jmp
iret
mov
jl
enter
cli
pop
in
mov
mov
jge
adc
pusha
pusha
dec
lea
dec
test
xchg
add
pop
mov
outsb
call
mov
mov
or
xchg
sub
inc
scas
pop
xlat
add
lahf
aas
lods
sahf
or
add
pop
mov
adc
add
xlat
push
sahf
inc
adc
std
and
leave
ja
inc
inc
mov
xor
and
xor
inc
cmp
pusha
data16
push
mov
mov
sbb
out
sbb
pop
lahf
xor
sub
les
jmp
xchg
or
fadds
lahf
push
rclb
pusha
aam
popa
out
popa
adc
cltd
ss
cmc
pop
fimull
dec
psubw
sbb
pusha
addl
mov
xor
add
add
sbbb
jo
jo
xchg
sbb
decl
mov
dec
sub
push
ja
pusha
pop
adc
xor
mov
ljmp
movb
outsl
add
add
pop
leave
mov
les
cmp
jbe
add
lret
jae
mov
xor
divb
adc
cltd
xchg
imul
ss
mov
fs
hlt
mov
cwtl
jle
xchg
xchg
fistps
int3
cmp
push
insb
pusha
mov
sbb
or
dec
mov
ret
test
jne
cmc
insl
clc
stc
leave
inc
pop
scas
jno
mov
outsb
inc
mov
imul
cmp
mov
stos
insb
or
insl
dec
adcl
les
test
hlt
jbe
push
repnz
ljmp
gs
insb
cli
push
jmp
scas
sub
out
ljmp
sar
cli
in
testb
aaa
xchg
stc
inc
scas
pop
test
or
sbb
jnp
je
cmp
daa
fcoms
push
arpl
insl
fistpl
cld
lods
pop
enter
out
and
imul
in
and
pop
popf
out
test
sub
add
inc
xchg
sti
test
cld
out
mov
push
cmp
lret
inc
imul
stos
rcr
xor
sub
mov
les
fisubrs
lahf
nop
inc
xor
xchg
xor
shll
jle
es
fldt
out
in
in
sbb
xchg
mov
push
in
cltd
pop
scas
jp
addb
and
in
repnz
push
jno
jmp
xchg
stos
xchg
sub
imul
scas
inc
mov
repz
sub
xchg
clc
push
dec
adc
scas
push
out
mov
loope
jbe
dec
mov
fisubrl
mov
bound
or
daa
popf
push
repz
rolb
out
lret
and
mov
jecxz
insb
sub
jle
ss
mov
fisttpl
xor
dec
rcrb
lods
rclb
sbb
sub
cmp
outsl
sar
push
rol
mov
dec
stos
into
std
dec
in
imul
sbb
test
sbb
pop
push
lahf
stos
aaa
cmpsb
adc
jo
loop
push
xor
negb
pushf
mov
mov
dec
scas
xlat
or
jg
dec
and
movsb
or
sub
fisubrl
es
jmp
and
in
mov
lahf
dec
adc
xlat
mov
shl
and
imul
arpl
inc
adcb
jp
sbb
push
mov
pushf
adc
cmpsl
andb
insl
sbb
dec
lahf
mov
sub
stos
imul
xchg
fcmovb
sbb
inc
xchg
stos
xchg
sbb
cmp
jge
sbb
test
lods
inc
dec
mov
sub
dec
sti
cmpsl
adc
sbb
test
adc
and
adcb
and
inc
imul
xchg
and
jg
mov
test
cmp
in
testl
pop
pop
mov
sbb
clc
jo
test
das
aad
mov
test
jnp
in
sahf
dec
pushf
pop
mov
sub
movsl
dec
cmp
jle
or
push
int
pop
pop
movsb
xchg
ret
sbb
test
fstps
arpl
clc
or
push
or
pushf
xchg
mov
lods
and
insl
pop
std
ficomps
lods
les
xor
xchg
mov
or
add
scas
shll
xchg
dec
imul
pop
xchg
mov
scas
movsl
test
or
lods
cmp
loop
shr
jge
cs
aad
sarl
cmpsl
sbb
lea
aam
mov
xchg
popf
adc
fmull
ret
push
fsts
pop
jle
cmp
mov
sub
push
mov
sbb
les
xor
mov
mov
iret
ds
inc
jb
repnz
add
aas
fisttpll
add
mov
test
movsb
jno
or
dec
int
int3
incb
cld
adc
xchg
dec
imul
push
shl
inc
cld
rolb
xor
das
push
ret
inc
pop
cmp
xor
sar
cmp
lds
mov
int
ret
mov
aad
push
ja
or
adc
add
jae
mov
dec
or
clc
and
aam
aas
mov
ja
je
scas
mov
les
dec
aam
insl
mov
mov
outsb
movsl
xchg
pushf
xchg
cmp
push
push
and
push
and
mov
scas
repz
test
inc
repz
insb
mov
clc
cmp
dec
out
mov
scas
add
pop
fisttpl
fstpt
imul
sbb
mov
mov
xchg
jnp
jne
scas
push
pop
imul
jbe
insb
push
lods
loop
sub
fisttps
adc
repnz
pop
and
and
jge
test
push
xchg
cmp
out
iret
sbb
out
xor
xchg
cli
std
add
lods
sub
sahf
mov
mov
into
shl
lods
lcall
mov
push
pop
cmc
int
nop
inc
push
adc
outsb
dec
dec
jge
ljmp
pop
and
stos
mov
push
shrl
ret
sbb
adc
push
ficoml
sbb
mov
testb
add
pop
xchg
stos
xor
sub
sub
mov
int3
xchg
dec
inc
pop
mov
movb
je
push
aaa
out
clc
mov
pop
add
cmc
inc
jb
pop
cmp
jecxz
and
in
adcl
bound
outsb
sbb
or
pop
dec
mov
push
and
sbb
or
cmp
iret
jecxz
popf
mov
sub
xchg
loopne
dec
repnz
xchg
adc
ffreep
sub
add
xor
out
lock
adc
cli
sbbb
in
adc
and
push
adc
xchg
fcomip
mov
lods
mov
inc
add
mov
mov
js
in
stc
lret
inc
cmp
in
push
add
sbb
xor
and
pop
insb
roll
js
divb
add
xor
cld
jle
dec
ja
sub
xor
lea
fsubrp
mov
icebp
lods
ss
sbb
pop
add
xlat
fstps
stc
mov
stos
sub
cmp
or
mov
mov
jle
aad
fsubs
std
and
pop
aam
popa
mov
cli
mov
dec
addb
scas
jp
and
popf
daa
shr
xor
shrl
icebp
sub
and
push
pop
testl
je
test
fwait
jns
jp
and
xor
out
inc
test
ficompl
dec
mov
cli
fdivr
mov
notb
sub
mov
push
jbe
jecxz
cmp
jmp
shl
mov
pusha
stos
jb
mov
add
sbb
dec
dec
addr16
jns
mov
mov
ja
mov
or
add
sbb
cmp
movsl
xor
cmp
std
lods
loopne
je
push
int
in
cmp
and
add
rcl
fucomip
clc
rclb
sub
lret
fsub
out
mov
popa
add
cmp
xorb
test
outsl
lea
out
data16
push
je
movsb
pop
sarl
cmp
cmpl
lock
insl
sahf
or
insb
bound
mov
aam
enter
negb
cltd
sub
mov
push
dec
les
or
icebp
in
xchg
popa
dec
imul
imul
aad
stc
mov
repnz
dec
test
push
pop
xchg
fisttpl
push
jecxz
pop
pop
stos
bound
inc
out
das
jns
int
push
jmp
cmp
mov
cltd
scas
pop
aaa
ret
iret
jmp
pop
jo
sarl
nop
sti
sub
adc
sub
mov
test
repnz
xlat
in
add
stos
mov
xchg
or
aaa
xor
cmpsb
or
stos
cmp
jo
in
mov
mov
shlb
pusha
cld
dec
sub
mov
shll
or
ret
or
into
aas
pop
inc
xchg
or
cmp
pushf
inc
hlt
into
andb
mov
test
pop
mov
loope
or
aaa
sahf
ret
rclb
dec
dec
mov
push
adc
imul
rcrb
mov
cmpb
jmp
fldl
loope
int3
xchg
pop
out
test
aaa
xor
in
or
gs
scas
push
and
push
incb
cmp
outsb
dec
idivl
dec
cmp
and
dec
mov
mov
jo
bound
push
inc
andl
aaa
ljmp
cmp
lret
add
lret
xor
std
cmpsb
xchg
orl
stc
lea
dec
ljmp
and
ficoms
xchg
cmp
loopne
push
jns
or
imul
jno
dec
inc
xchg
mov
fsub
into
icebp
ss
xor
dec
fsubrl
sub
jge
jp
xchg
dec
ret
mov
in
test
jb
out
fs
rcll
dec
jno
xor
mov
sbbl
les
cmc
mov
xchg
sub
pop
push
arpl
and
or
add
mov
mov
mov
fcmovnu
out
push
sbb
jmp
xchg
push
movsl
dec
sti
inc
jno
pop
fcomps
xor
int
mov
add
outsl
cmp
aaa
xchg
xchg
adc
loop
clc
mov
cld
jae
sbbl
adc
or
push
out
jbe
lcall
repnz
out
insl
aaa
sbb
adc
and
lods
and
stos
outsl
es
pop
inc
fdivs
mov
pop
sbb
repz
jg
lock
imul
jge
andl
lret
add
dec
xchg
push
dec
sub
in
ret
in
dec
mov
inc
jns
into
int3
dec
mov
mov
adc
inc
and
dec
cwtl
out
add
sarb
mov
push
cmpsl
ja
adc
add
pop
push
adc
orb
leave
mov
inc
jns
or
adc
lahf
cmp
sbb
popf
xor
xor
pushf
adc
dec
lods
mov
addr16
cmp
xchg
lock
xchg
scas
jnp
add
lret
jl
push
add
shlb
sub
cmp
inc
out
pop
test
jge
andb
out
int
faddp
lods
outsb
jg
notb
hlt
inc
mov
out
fistl
and
js
jo
mov
or
scas
mov
mov
ret
adc
pop
jae
stc
jg
dec
mov
and
sbb
sbb
pop
mov
ljmp
or
inc
std
test
dec
sbb
popa
inc
mov
js
mov
fcomip
push
pop
inc
sub
lret
mov
xchg
out
in
xor
lret
lret
lea
lret
push
stc
loopne
faddl
cs
mov
mov
mov
fs
pop
cs
sti
xor
cmp
pop
cmc
outsb
pusha
lahf
sub
pop
sbb
or
movsb
pop
gs
loope
and
repz
and
push
mov
or
shrl
out
jle
adc
cmp
push
inc
dec
pop
mov
cld
std
les
popa
inc
ss
sub
sti
lock
push
aam
pusha
rcrl
mov
xor
mov
notb
out
and
stos
movsl
inc
push
mov
fs
stc
test
clc
mov
lret
test
ret
push
pop
pop
and
enter
sarl
cwtl
dec
mov
push
or
cmp
outsb
stos
adc
test
mov
popf
xor
test
xchg
stos
clc
cld
cmpsb
cmp
sbb
bound
xor
bnd
ja
dec
and
enter
xchg
inc
jl
dec
mov
xor
fdiv
push
shrl
setl
faddl
mov
mov
nop
jne
les
addb
pop
xor
mov
or
cld
pop
pushf
mov
jne
jo
xchg
sbbl
pushl
jmp
push
shrb
mov
push
cmp
push
std
rcll
adc
jns
aaa
mov
add
cs
add
adc
mov
inc
aas
dec
mov
xchg
xchg
ret
leave
sbb
cvtps2pd
dec
pop
pop
fwait
cltd
pop
adc
lock
stc
rcr
jmp
push
and
jge
xchg
fs
and
inc
outsb
adc
and
sbb
dec
and
repz
adc
and
insb
ffree
push
inc
add
lahf
aam
popf
arpl
mov
ror
sbb
pop
dec
dec
dec
push
dec
xchg
mov
call
pop
mov
pop
xchg
and
push
hlt
pop
rcll
add
shlb
aaa
out
push
dec
jge
xchg
push
and
jo
push
xchg
xor
in
push
mov
mov
pop
mov
je
xchg
fwait
andb
pop
mov
movsl
mov
sbb
movsb
out
arpl
push
imul
or
stc
mov
loop
xchg
fs
sub
arpl
and
push
jg
addl
or
cmc
mov
nop
push
jl
sub
es
push
daa
rcrb
hlt
dec
lock
rep
js
ret
mov
cmpsl
sahf
xlat
mov
mov
pop
dec
pop
jle
outsb
daa
push
push
push
inc
ja,pt
ficoms
mov
cmpsl
sahf
xlat
mov
mov
pop
dec
pop
jle
outsb
daa
push
push
push
inc
ja,pt
ficoms
jle
out
cmpsl
push
xlat
mov
imull
out
xchg
dec
pop
jle
outsb
daa
push
push
push
inc
ja,pt
ficoms
mov
cmpsl
sahf
xlat
mov
mov
pop
dec
lods
aam
outsb
push
outsb
fistpll
dec
mov
xlat
jo
pusha
notl
inc
and
lds
add
inc
loopne
shlb
pop
mov
loopne
nop
daa
adc
pusha
notl
inc
xchg
xor
add
inc
loopne
shrb
pop
mov
mov
into
jo
pusha
out
push
incl
xor
add
fs
pop
loop
les
jo
mov
xor
lods
testb
shr
mov
xchg
pop
mov
js
sbb
dec
push
js
and
enter
sbb
or
dec
outsb
orb
pop
sub
nop
fdivrs
cmp
push
add
addl
aad
add
mov
xchg
aaa
outsl
daa
adc
push
ret
push
push
stc
cmpsb
push
fadd
inc
cmc
inc
cs
aas
call
outsb
daa
mov
jp
pop
mov
cli
out
push
push
push
mov
loope
sub
repz
js
in
xchg
aaa
sarb
cmc
daa
cwtl
mov
sbb
inc
fldt
icebp
or
aaa
rclb
push
aaa
test
sbbb
fisubs
push
out
xorb
and
lock
loopne
sarb
cmpxchg
mov
mov
push
xchg
push
in
loope
cli
jne
jo
pushf
sub
pop
frstor
inc
adc
mov
push
xchg
pop
sti
push
xchg
mov
hlt
add
lods
pop
fildll
in
out
mov
stos
adc
and
xor
pop
xchg
mov
cmpsl
add
inc
loopne
shlb
pop
mov
mov
xlat
jo
pusha
notl
inc
xchg
xor
add
inc
loopne
shlb
pop
mov
mov
xlat
jo
jne
mov
in
mov
bound
jmp
jp
in
sahf
push
bnd
dec
or
movsl
add
xor
repz
push
nop
rolb
loope
test
bound
xor
aas
negl
cmp
out
lret
mov
jle
mov
cs
data16
scas
mov
sbb
mov
iret
idivl
pop
mov
cmp
andl
int3
daa
mov
jl
fs
popf
out
and
inc
gs
push
ja
ret
mov
push
gs
leave
jle
mov
xchg
pop
arpl
lret
enter
aaa
xor
int3
jmp
dec
rorl
dec
shll
xacquire
pop
push
pop
out
pop
js
test
ret
scas
push
ljmp
mov
xchg
int3
push
adc
lret
icebp
mov
icebp
pop
sbb
bound
int
rcrb
mulb
dec
and
hlt
add
mov
call
inc
sarb
mov
imull
mov
sbb
adc
test
fucom
lcall
popf
cmc
dec
push
and
test
test
jg
jecxz
fisubl
int
popa
push
sub
imull
inc
adc
ret
mov
inc
pushf
mov
loop
xchg
dec
add
pop
mov
xchg
or
inc
lods
push
out
sbb
test
sbb
icebp
jl
add
divl
xor
pop
xchg
add
mov
jb
lcall
subl
nop
push
test
dec
push
sbb
pop
cs
das
lahf
pushf
mov
int3
mov
imul
jl
cmp
in
addr16
jmp
jae
and
push
popf
out
or
repnz
cltd
and
pop
jmp
and
cmp
mov
testl
jo
dec
andl
pusha
ret
aam
and
dec
ja
les
jle
xor
popa
int3
xchg
stos
mov
jno
mov
or
sti
xchg
sbb
cmpsl
arpl
ljmp
mov
xchg
jb
mov
jge
sub
pop
imul
mov
ljmp
xorl
pop
pop
jge
push
fst
sub
sbb
dec
jl
jg
inc
mov
mov
outsl
je
lcall
dec
jge
leave
mov
sahf
jnp
xchg
insb
mov
sbb
pushf
test
mov
imul
fadd
sub
mov
pop
mov
mov
pop
into
rclb
dec
outsl
fiadds
jl
int3
push
mov
push
jge
lods
adc
add
pop
mov
sub
pusha
outsb
xchg
xchg
aad
call
adc
cmp
movsb
iret
add
mov
sbb
xchg
mov
fidivl
and
popa
jle
sub
mov
jmp
cmp
jp
aad
test
inc
int3
hlt
push
xchg
jp
jp
xchg
jp
cwtl
outsl
add
lcall
inc
add
pop
adcl
mov
orl
push
popa
mov
imul
or
sbb
test
jno
inc
test
out
test
and
xchg
mov
jae
adc
ret
jns
fisttpl
mov
push
mov
adc
test
xor
pop
pop
xor
adc
xchg
xchg
shll
cmp
push
shlb
loop
jl
mov
stc
jo
hlt
add
fisubrl
aaa
or
ljmp
mov
repnz
into
push
mov
fstpt
push
jns
mov
fadd
call
mov
test
loope
mov
imul
pop
jl
outsb
test
repz
xchg
jo
mov
xor
pop
jg
lahf
jnp
push
xchg
out
pop
add
lcall
push
pushf
not
bnd
lock
pop
imul
sti
decb
add
std
jl
scas
sbb
outsl
mov
movsb
xor
ret
and
adc
fcompl
jns
pop
int
inc
mov
testl
dec
sub
lods
push
adc
repz
in
lds
out
shrl
cmp
cmp
loop
xchg
fists
sbb
insb
fidivl
dec
mov
int3
andb
xchg
js
les
sbb
push
xchg
lcall
arpl
pushf
mov
fwait
mov
int
pop
into
or
call
std
cltd
push
xor
mov
push
xlat
mov
test
das
inc
cli
insb
les
cmpsl
insl
test
cmp
pop
push
pop
jl
mov
mov
fisubs
stos
pushf
pop
aam
outsb
test
into
call
xchg
repnz
mov
lea
mov
sub
push
enter
jle
xor
out
xlat
mov
sub
lods
stc
xor
fistps
push
call
std
test
cmpb
fidivl
mov
adc
mov
mov
sub
push
shlb
lods
xchg
fistpll
sbb
aaa
or
jle
sub
inc
mov
lret
dec
aaa
rcrb
inc
js
loopne
push
std
push
cmc
xchg
push
jle
pop
cmc
ja
or
add
push
inc
pop
cli
pop
dec
insb
mov
mov
sbb
xor
push
stos
sbb
std
mov
stos
push
push
movsl
sbb
mov
in
imul
outsl
jmp
repnz
lods
or
pop
test
and
jl
cmp
push
mov
cmp
in
sbb
shrl
lods
fdiv
sbb
cmp
mov
push
es
std
cmp
push
xchg
pop
inc
lods
or
out
cmp
pop
jne
add
popf
int3
outsl
outsl
ss
outsl
and
dec
in
pop
test
lret
test
mov
adc
lds
bound
imull
adc
outsb
push
popf
cmpsl
addr16
jmp
aam
jmp
popa
sbb
push
ret
aad
add
lret
cmp
cmp
mov
jecxz
or
dec
fwait
in
aad
fidivrs
jne
and
outsb
sbb
jne
into
mov
mov
sub
out
ret
nop
push
mov
pop
cmp
ds
xlat
xor
icebp
push
loope
mov
ret
inc
add
fiaddl
mov
fildll
into
out
dec
lret
movsb
loop
test
push
jp
lods
mov
xchg
sarb
cltd
push
lock
add
jecxz
pop
dec
jge
jge
cltd
pop
sub
daa
xor
cld
cmpsl
mov
add
sbb
xchg
adc
adc
daa
xchg
ds
in
nop
xor
dec
mov
cmp
mov
xchg
xchg
fidivs
mov
cmc
mov
or
add
lds
mov
add
inc
dec
xor
adc
hlt
push
shl
cmpb
sahf
adc
imul
inc
mov
mov
cmp
out
push
mov
cmp
dec
daa
cld
jb
fistpl
icebp
stos
inc
or
cmp
dec
adc
dec
inc
sub
adc
dec
fidivl
pop
pop
fs
xor
fisubrl
imul
addr16
enter
add
addr16
xor
fcmove
and
dec
push
dec
into
imul
loope
mov
push
sbb
andl
mov
jbe
sti
cmpb
test
movsl
pop
push
mov
ret
mov
push
rcll
sub
stos
sar
pop
imul
push
inc
adc
not
idivl
cwtl
sub
inc
out
pop
push
loopne
test
clc
hlt
add
push
sub
pop
sub
sarb
daa
nop
add
nop
test
sar
or
ftst
xor
sbb
pop
sti
aaa
cmc
fcoms
xor
sbb
fs
lahf
xor
hlt
mov
repnz
subb
xlat
push
sbb
pop
gs
cltd
dec
pop
ljmp
push
sbb
fistpll
mov
xchg
imull
fs
out
fimull
mov
mov
sbb
repnz
fildl
adc
mov
out
sub
hlt
pop
dec
push
ret
lock
fwait
int
adc
and
addr16
in
push
xchg
outsb
or
dec
cltd
loop
cmp
dec
sub
cmp
repz
pusha
mov
ffree
cltd
call
mov
pusha
mov
insl
cli
fsubrl
fstl
icebp
ds
stos
cld
outsb
push
hlt
stc
cld
jge
sti
xchg
jge
cmp
fildl
stc
stos
call
push
mov
mov
in
roll
test
loope
dec
fistl
jne
push
adc
dec
xor
fwait
push
inc
pop
sbb
sub
push
pop
mov
out
sbb
mov
or
shlb
mov
cld
into
xchg
hlt
jns
lock
inc
xchg
mov
mov
inc
mov
dec
add
lods
std
pop
imul
enter
xchg
mov
mov
out
fdivr
adc
sub
push
test
mov
loopne
dec
aad
js
or
jb
pop
pop
repnz
sarl
and
outsl
sbb
xchg
or
pop
mov
pop
mov
adc
pop
sub
in
shl
into
mov
repz
mov
lret
inc
clc
andb
pop
int
inc
pop
fiaddl
mov
and
leave
rorl
stos
shll
fidivrs
outsl
cmpb
out
sbb
xchg
int
inc
fldt
and
ds
and
fdivrs
enter
push
adc
mov
rcll
fldt
xor
mov
into
mov
aas
xor
lret
and
cmovs
inc
add
and
idivl
lahf
cmp
mov
in
into
adc
sbb
cmp
jno
cmpsb
test
mov
je
mov
mov
js
or
sarl
in
jge
dec
pushf
sub
int
pop
adc
pop
mov
fwait
mov
insl
stos
lea
out
pusha
rcrl
push
imul
cmpsl
lret
das
dec
inc
pop
jl
inc
cltd
sbb
arpl
in
push
add
xchg
dec
mov
stc
loope
pop
imul
mov
in
out
mov
loopne
mov
sub
subb
pop
mov
jo
sbb
inc
and
inc
sub
imul
xlat
pop
inc
aam
adc
aaa
cltd
repz
cmp
shll
or
xchg
dec
lret
xor
dec
pop
push
pop
cmp
push
sti
and
shrb
ret
addr16
cmc
data16
adc
sti
xchg
cmp
mov
or
lret
in
imul
inc
sub
jae
leave
mov
icebp
cmp
test
arpl
cmp
ror
sahf
mov
cld
jne
mov
mov
arpl
sub
cmp
inc
pusha
leave
repz
movb
dec
shrl
jle
xor
xor
sbb
sbb
jo
data16
sub
xchg
ss
lret
and
jle
fidivrs
aam
arpl
arpl
incl
xchg
and
lds
inc
lds
mov
mov
sub
inc
cmpsl
leave
cmp
nop
ret
adc
xchg
and
data16
addl
imul
in
mov
enter
or
sub
xchg
mov
call
movsb
mov
scas
int3
xor
pop
mov
jne
popf
decl
ret
inc
ds
int
repz
jo
mov
test
sub
pop
fmul
cmp
adc
inc
leave
sub
sbb
fstl
popf
arpl
fisubrl
jns
mov
mov
stc
push
mov
scas
aam
inc
xor
or
or
push
cld
enter
mov
notb
mov
dec
outsl
pop
arpl
adc
pop
rolb
adc
iret
daa
mov
pop
push
cmpsl
scas
fdivs
lock
cmp
pop
popa
ljmp
addl
sub
cmp
push
adc
jle
bound
add
sbb
cmp
lret
mov
mov
dec
ret
repnz
xchg
mov
enter
test
xchg
lods
fistpl
mov
push
jle
push
jne
ds
scas
mov
cmp
pop
add
mov
inc
mov
arpl
sub
dec
pop
les
add
das
sbb
push
loope
test
xlat
pause
and
sub
int
pop
adc
xor
mov
or
xchg
cmp
mov
lcall
ret
out
loope
ss
addr16
push
mov
add
mov
xor
or
and
jle
mov
and
adc
add
scas
xlat
sub
rorl
lret
repnz
mov
movsb
rolb
mov
inc
mul
xor
or
lds
adc
cwtl
out
arpl
ret
enter
gs
jge
out
add
in
sub
and
xor
mov
inc
dec
cmovl
pop
lldt
sbb
outsb
clc
in
jne
pop
xor
enter
out
fwait
cmovo
mov
in
cs
aam
lret
outsl
push
lds
jl
sbb
inc
or
cmpl
mov
xchg
xor
les
pop
inc
stos
inc
or
popf
and
div
xor
in
push
fwait
pop
clc
push
nop
push
inc
paddusw
inc
ja
pop
rcl
cmp
xchg
cld
shl
cmpsl
inc
push
push
movl
push
pop
add
adc
dec
loopne
cmp
shll
repz
arpl
xchg
dec
sub
push
adc
clc
mov
outsb
pop
mov
and
sbbb
adc
mov
out
and
and
mov
xchg
adc
outsl
fsubs
addl
inc
sbb
cltd
sbb
mov
sbb
jnp
xchg
ljmp
negb
data16
lret
daa
enter
xchg
mov
sub
pop
sbb
push
mov
xor
mov
inc
jg
xor
ss
fimull
xor
les
cwtl
je
xchg
jbe
cmp
mov
jmp
in
pop
repz
clc
testb
mov
in
pop
mov
adc
outsb
repz
iret
test
push
mov
and
pop
bound
jg
popf
jmp
cmp
or
cmpsl
sub
int
int3
out
dec
lds
lcall
loop
in
nop
out
fisubrl
test
cmp
mov
cmp
rep
cmpsb
insb
test
lods
pop
stc
fistps
imul
or
dec
mov
mov
mov
mov
inc
add
jp
and
fildll
pop
xor
arpl
pop
add
sub
jp
cmpsb
insb
push
push
xor
fdiv
pop
pop
daa
icebp
jbe
pusha
dec
or
mov
inc
push
aam
jg
std
das
testb
aad
sahf
test
shrb
mov
pop
dec
fs
sub
sahf
or
xchg
fisubl
popa
mov
sahf
push
xlat
mov
cld
jo
movsb
mov
jb
movb
stos
cmp
add
test
inc
and
lock
adc
inc
cmp
jb
inc
mov
pusha
fs
out
inc
mov
cmp
in
repz
sbb
pushf
push
scas
pop
mov
out
push
movsl
loop
insl
sarl
dec
xor
fadds
push
fs
jae
jns
aaa
mov
and
jb
daa
ror
scas
dec
sub
clc
popf
aam
sbb
xlat
ret
adc
push
movq
inc
sbb
leave
push
xchg
xchg
scas
pop
in
pop
and
add
xor
sub
add
subb
andb
inc
clc
cmpsl
sub
ret
lcall
push
xchg
aam
ljmp
orl
or
jle
xchg
in
fisubrs
imul
testl
sahf
in
and
sub
ljmp
cmpl
pop
inc
pop
mov
mov
int3
pop
adc
sub
cltd
cmpsb
push
popa
in
xchg
enter
in
mov
xchg
mov
jl
outsb
es
push
das
mov
push
cmpsb
mov
sti
jp
mov
cwtl
push
jbe
lcall
pcmpgtb
jecxz
add
shlb
lcall
mov
inc
add
loope
push
out
fs
push
mov
out
ss
pop
pop
pop
inc
xchg
aad
xlat
lret
loop
and
insb
push
adc
lea
dec
loope
outsl
and
das
mov
xchg
xor
lock
xchg
jmp
dec
cmp
mov
dec
shrb
mov
icebp
insl
popf
leave
fwait
lds
pop
xor
or
subb
or
pop
jbe
and
sbb
cmp
push
push
or
jns
fisubrs
je
pop
jne
adc
xchg
add
jno
adc
jecxz
pop
mov
popa
test
xor
pop
add
mov
pop
out
inc
int3
iret
aaa
shl
adc
fstpt
mov
push
stos
fninit
dec
inc
imul
add
and
pop
xchg
into
popl
divb
mov
sar
inc
and
aaa
mov
dec
sub
adc
out
mov
push
jmp
ret
add
clc
out
xchg
jo
fisubl
inc
ljmp
ret
gs
data16
adcl
movsl
arpl
xchg
xchg
or
adc
repnz
mov
ds
fwait
dec
clc
cmp
shll
cld
jmp
outsl
insb
fisubl
and
jge
inc
repz
addr16
jg
jge
sub
mov
fidivrs
adc
sbb
movsb
xor
into
test
cmp
push
fldt
adc
les
and
xchg
cwtl
iret
rcl
popa
popa
mov
push
fadd
push
jnp
aam
add
add
popa
hlt
dec
adc
lea
or
push
loopne
ret
mov
in
idivb
jg
lds
sbb
mov
sbbl
pusha
pop
dec
jmp
out
icebp
xchg
mov
mov
out
sub
outsb
out
or
mov
jecxz
push
loop
and
xor
xor
adc
pop
dec
xor
sbb
insl
pop
add
adc
in
stos
pop
jecxz
push
jle
add
adc
xor
adc
cltd
inc
jae
cwtl
mov
pop
mov
ret
mov
dec
dec
sub
dec
or
jg
pop
mov
pushf
cli
test
fisttpl
sbb
or
andb
mov
jae
les
lcall
jp
lods
bswap
add
cmc
lret
mov
cltd
add
xchg
addl
adc
dec
jb
shlb
jbe
into
scas
stc
jnp
test
aam
or
sbb
call
in
bound
rcrb
repnz
or
adc
jle
mov
xchg
push
pushf
or
pand
sbb
xchg
mov
int
xchg
jno
xchg
jecxz
mov
jge
std
pop
imul
inc
ds
cmp
jl
out
add
inc
sbb
aaa
sti
mov
sub
mov
out
ss
mov
mull
mov
inc
add
pop
or
stos
mov
mov
dec
pop
jae
in
loopne
sbb
mov
push
sbb
lds
dec
int
in
rol
sbb
vmovdqa32
shll
jbe
jl
dec
push
push
and
pop
push
lods
sub
mov
lds
jne
es
dec
pop
or
xchg
xor
out
jbe
stos
pop
and
adc
outsb
cs
cltd
out
pop
jns
jbe
inc
push
push
or
mov
and
add
enter
movsl
xchg
adc
adc
cmp
gs
cmp
jg
ja
ss
mulb
insl
xor
icebp
std
scas
insl
jmp
push
ret
into
fisttpll
loop
sti
jo
std
imul
push
inc
xor
xchg
push
adc
daa
pop
pop
cld
sahf
add
jecxz
rclb
adc
jg
ss
sbb
cmpl
adc
lea
fsts
inc
mov
fsubs
xor
iret
and
das
nop
fcompl
jge
imul
rcrl
push
mov
xor
cmp
gs
cld
imul
aad
pop
jmp
mov
inc
adc
sub
in
xlat
lods
mov
nop
or
pop
adc
add
bound
clc
or
xchg
daa
xchg
repnz
or
pop
nop
xor
daa
addr16
nop
jg
lods
ja
cmp
movsl
sbb
stos
clc
mov
fisubrs
out
aas
or
das
adc
and
popf
stos
push
cmpsb
mov
sbbl
xchg
xor
push
lret
out
mov
mov
push
fwait
fs
mov
push
sbb
sub
and
mov
stc
mov
loope
dec
lods
jne
mov
aaa
xchg
cmc
out
std
push
out
xchg
xor
add
inc
loopne
shlb
pop
mov
mov
xlat
jo
pusha
notl
inc
xchg
xor
add
inc
loopne
shlb
pop
mov
mov
xlat
je
pusha
notl
inc
xchg
xor
add
inc
loope
shlb
pop
mov
mov
xlat
jo
pusha
notb
inc
xchg
xor
ljmp
shlb
pusha
cmp
jg
push
addl
pop
adc
xor
stc
cltd
mov
out
xchg
stc
xchg
mov
cmpsl
and
inc
or
imul
pop
pop
stc
xlat
mov
out
sti
popf
xchg
mov
cmpsl
repz
mov
addr16
xor
gs
mov
in
test
xchg
ret
movsl
sarb
and
push
dec
pop
outsb
loopw
cmp
dec
mov
mov
lahf
xor
mov
clc
and
sub
andb
sub
jbe
jb
insb
xchg
push
idivb
sub
sbb
or
jmp
scas
addr16
xorb
xchg
insb
adc
je
dec
xor
xchg
dec
pop
pop
fnstcw
popw
fs
sti
jns
mov
les
mulb
fldl2e
xchg
lahf
cli
mov
sub
mov
lcall
mov
pop
lods
sarb
lret
mov
iret
int3
aas
mov
xchg
mov
cltd
repnz
xchg
stc
aam
mov
mov
push
cmp
ja
imul
loope
pop
xlat
sub
push
testl
into
pop
push
dec
push
dec
ja
addr16
jb
outsb
pop
jno
jae
scas
clc
fsts
xchg
loop
into
sahf
jmp
dec
adc
add
dec
and
pushf
clc
mov
lcall
enter
vmwrite
jns
dec
aaa
pop
daa
test
negl
xchg
mov
cmpsl
sub
inc
or
imul
pop
daa
test
negl
xchg
mov
cmpsl
sub
das
mov
arpl
call
ljmp
cmpb
add
or
inc
aaa
xor
adc
or
adc
pop
insb
fistpl
xchg
test
movsb
iret
sbb
mov
lods
inc
mov
mov
aad
imul
dec
pop
xor
inc
loop
xadd
mulb
out
incb
sub
int
pop
adc
or
scas
cmpl
cmpsb
fnstsw
add
adc
loopne
stos
adc
pslld
inc
jmp
pop
jbe
cmpsb
sahf
inc
shll
pushf
xor
pop
lds
int3
cli
mov
jno
and
jl
push
stos
mov
jecxz
fcoml
into
push
sbbb
pushl
mov
rorl
insl
dec
lods
or
cld
enter
inc
pop
pop
xchg
adc
icebp
negb
cmp
push
cmc
sub
int3
mov
test
push
xchg
fcmovbe
fsubrs
add
dec
imul
jmp
add
in
movsb
xlat
cmpsb
flds
insl
cld
ds
sub
or
lock
pop
call
nop
and
jnp
cmp
pop
jbe
push
inc
mov
test
and
out
fabs
out
sbb
jb
mov
arpl
or
shlb
outsl
scas
lds
add
jl
scas
imul
lret
mov
mov
mov
push
int3
mov
pop
xor
cmp
leave
movsl
ror
orb
andb
push
dec
aaa
pop
sub
xor
imul
add
enter
push
cld
sub
add
inc
xor
pop
jle
sub
push
pop
xchg
and
or
mov
jp
arpl
mov
mov
imulb
push
lret
inc
jno
das
xor
add
inc
shll
sti
mov
adc
cmp
movsl
push
mov
sbb
mov
adc
lahf
push
bound
cmc
or
pop
lods
inc
mov
add
pop
dec
test
pop
gs
mull
lahf
stos
cmp
xchg
xchg
jge
enter
cmpsb
inc
std
loop
lea
dec
lcall
lock
inc
xchg
mov
sub
push
or
jb
fldlg2
jbe
or
dec
lret
xchg
imul
sbb
inc
push
fsubs
add
pushf
rorl
add
sti
cwtl
cwtl
dec
jno
cmpsb
ss
mov
inc
mov
inc
aas
addr16
and
in
aad
out
add
sbb
imul
imul
jnp
adc
sbb
mov
jns
pop
rclb
sub
cmp
aas
or
mov
sub
push
mov
iret
inc
jne
cltd
jno
daa
inc
into
jb
scas
test
or
insl
sub
std
jno
pop
ljmp
cmp
fiaddl
lret
or
lods
push
xchg
icebp
lds
mov
dec
dec
in
mov
push
cwtl
test
shrb
mov
push
jmp
add
xorb
sub
jl
jno
mov
je
jp
push
jns
push
fstl
xchg
sbb
dec
std
data16
dec
lea
xlat
or
push
push
out
mov
pop
jb
jns
popa
int
js
outsb
shlb
xchg
leave
lcall
std
xchg
sti
cmp
inc
mov
sti
xchg
rolb
add
jo
test
int
xor
or
push
xchg
cmpsb
test
into
mov
in
lea
sbb
pop
outsb
test
xchg
adc
sbb
in
push
jle
mov
fidivs
and
shrb
sarb
mov
popf
mov
cli
push
push
mov
jle
mov
inc
push
nop
lret
inc
fnop
neg
xchg
cwtl
enter
ljmp
sar
ffree
loop
cmc
mov
push
imulb
and
daa
cli
sbb
xlat
add
pop
test
mov
lea
dec
pushf
ljmp
std
es
dec
fidivs
aam
mov
xchg
jno
adcl
mov
push
and
sub
and
movsl
push
sbb
sti
data16
das
push
nop
pushf
ret
mov
inc
dec
jae
outsl
popf
addb
mov
addr16
mov
stos
icebp
push
sbb
fs
dec
sarb
cmpl
xchg
pushf
mov
adc
sbb
fnstcw
cmpsb
adc
xchg
inc
jge
mov
ret
test
inc
in
jle
inc
mov
adc
lret
jge
pop
lods
test
arpl
rcl
gs
mov
jl
sar
cmp
xor
ljmp
test
ds
lea
leave
or
stos
pop
mov
cmp
stc
cmp
nop
sub
xlat
dec
mov
push
lods
shlb
mov
xchg
dec
or
xchg
jae
scas
in
stc
cs
icebp
sbb
dec
jge
xor
in
negl
cmc
loopne
jl
shlb
mov
adc
inc
div
int3
add
sub
imul
mov
xchg
dec
mov
fcmovu
jb
loope
adc
jns
in
xor
pop
jnp
out
gs
arpl
mul
jp
pop
andb
push
fstps
push
push
or
jnp
je
pop
jno
aas
pop
stc
mov
xchg
shrl
sbb
out
fldenv
aaa
jge
xchg
pushf
imul
pop
push
xchg
xchg
and
fsubs
call
jo
popf
add
jg
gs
cmc
and
xchg
and
mov
pop
dec
imul
stos
sbb
outsb
rcl
leave
mov
mov
jno
jp
and
ficompl
add
fisttpll
ja
out
mov
sbb
add
push
xchg
aad
sub
jb
pop
aaa
test
insb
rcll
out
mov
push
pop
js
xor
lcall
fstpt
mov
cmp
fucomip
cmp
inc
fbld
add
sbb
dec
xchg
cli
mov
or
lret
inc
or
xor
pushf
mov
dec
fnsave
sbb
xchg
int3
xchg
xor
call
imul
and
mov
int
insb
push
hlt
jmp
fildl
sbb
xlat
data16
repz
mov
sbb
mov
aad
and
push
in
repz
sub
push
inc
or
into
decb
inc
jne
push
jae
or
or
pop
mov
and
xor
idiv
les
movnti
pop
lret
out
xchg
xor
cwtl
incb
fbld
cmp
mov
out
js
dec
lahf
pop
in
inc
sbb
leave
stc
push
not
pop
push
rcrl
dec
cli
into
add
jmp
xchg
imul
test
dec
mov
xor
iret
outsl
xor
ja
repz
icebp
enter
loope
dec
xchg
xchg
stos
fstl
jns
cmpb
jbe
xor
xor
rorl
out
rorb
cs
in
sbb
cltd
jmp
inc
mov
add
das
and
mov
daa
shlb
test
pop
sbb
imul
movsl
out
jmp
dec
fs
cmp
xor
shl
pop
adc
std
dec
mov
lods
mov
stos
imul
clc
jae
roll
mov
sbb
sbb
out
pushf
sub
aam
icebp
mov
pop
push
stc
repnz
inc
sbb
lods
cmp
add
sub
push
pop
pushf
sbb
fisubrl
inc
inc
add
mov
jle
push
push
and
loopne
jmp
in
push
lods
fidivrl
sarb
sbb
xchg
cmp
cs
in
lea
imul
jle
xchg
and
sub
scas
dec
lret
jmp
mov
add
daa
insl
mov
jne
push
cmp
cmpb
andl
sbb
adc
daa
arpl
es
and
push
test
lahf
data16
cmp
dec
push
jge
inc
movsl
or
dec
xchg
dec
ljmp
pop
loop
xor
adc
lret
sbb
pop
shlb
xchg
cmp
movsb
mov
rcrl
rcrb
cs
fadds
pop
cmp
pop
movsb
add
loop
inc
lcall
mov
xchg
movsl
pop
cmp
cs
xor
push
shll
je
add
add
outsl
mov
pop
mov
sarb
call
push
and
cs
xchg
lahf
aad
out
fildll
imul
add
imul
dec
popf
mov
lea
mov
push
in
fstpl
ja
test
and
sbb
mov
pop
or
mov
jle
jp
sub
jg
dec
test
and
adc
fwait
inc
xchg
enter
insb
out
mov
aas
jmp
scas
cwtl
adc
adc
mov
push
je
add
add
adc
lock
stos
add
das
loope
mov
mov
sub
push
add
je
repnz
test
fisubrl
int
inc
into
xor
mov
sahf
int3
and
repnz
sub
cmc
cltd
bound
mov
popa
dec
xchg
sub
imul
test
aas
push
test
leave
dec
xchg
in
cmp
gs
mov
jbe
xchg
pop
jo
xchg
test
or
and
movsl
out
mov
sarb
push
or
movsb
mov
and
movsl
lods
fistps
pop
add
sbb
xor
nop
sbb
mov
add
hlt
out
pop
lcall
pop
cltd
mov
xlat
inc
jae
mov
jmp
test
sbb
shll
cmpsl
mov
sbb
jbe
scas
push
fsubl
xchg
daa
repnz
push
lock
xlat
addr16
xchg
or
dec
xchg
mov
dec
jge
cmpsb
loope
int
stc
jl
adc
jecxz
mov
mov
sub
inc
or
fs
test
or
pop
lock
jge
push
std
pop
ret
sub
mov
mov
dec
ss
and
dec
cmc
jg
int
mov
xchg
push
mov
mov
enter
xchg
rol
js
mov
push
sbb
lcall
cmpsl
push
add
enter
in
push
pusha
movsl
mov
popf
adc
add
dec
movb
and
jmp
lea
faddl
cmp
lahf
push
ljmp
ja
adc
aas
js
or
pop
rorb
push
scas
mov
ficoms
jne
pop
scas
jae
or
jns
leave
sbb
xor
adc
repnz
sbb
jecxz
adc
cld
popf
cmp
xchg
aaa
popa
in
scas
pop
int3
jge
pop
sahf
push
sti
es
xor
insb
test
xchg
or
icebp
mov
sarl
je
mov
ficoml
pop
cmp
mov
push
cli
and
xchg
cmp
daa
pop
jno
lea
pusha
lock
xor
pushf
jge
mov
mov
add
jl
or
xor
mov
mov
and
into
or
js
sbbb
dec
aam
mov
sti
pop
data16
jle
mov
cltd
sarb
or
cmp
push
or
call
push
outsl
xchg
cmp
dec
shrl
stos
sub
lods
aam
add
jb
ljmp
imul
aad
and
push
aam
jmp
xchg
ss
pushf
mull
stos
push
add
call
pusha
scas
xchg
movlps
jae
gs
out
js,pn
xor
sbb
xor
neg
sub
mov
imul
xchg
call
imul
jp
fimull
dec
pop
lods
lahf
ret
imull
and
aad
stos
inc
dec
scas
test
arpl
jp
in
mov
cmp
cmp
fwait
fwait
stos
pop
shl
dec
xor
fsts
jle
shlb
or
shll
add
fstpt
xchg
jg
jne
add
or
mov
pop
vpshaq
call
mov
cmpsb
xlat
push
jecxz
mov
push
lcall
outsb
sub
pop
fistpl
mov
inc
aas
outsl
fstps
clc
aam
mov
pop
push
shl
xchg
adc
dec
aaa
mov
cmp
call
int
rcrl
mov
into
or
icebp
fldenv
stos
mov
jp
cld
mov
pusha
pop
push
cmp
adc
cwtl
mov
lret
lods
push
imul
cmp
and
iret
push
jp
ret
push
mov
call
fstl
jbe
pop
lret
adc
pop
fistpl
dec
jmp
push
sub
xchg
mov
enter
jecxz
or
pop
pop
inc
fmuls
xor
mov
fdivrs
lcall
in
icebp
sbb
mov
xor
lahf
mov
jbe
lret
pop
jbe
sbbb
xchg
mov
ljmp
popl
lock
cmp
pushf
dec
aas
add
jl
dec
xchg
push
stos
push
fucomip
sub
sub
mov
mov
ss
xor
jg
add
in
xlat
stos
mov
push
shrb
mov
cmp
test
jl
inc
inc
or
push
xchg
inc
jnp
xor
push
mov
cmp
rorb
or
lret
out
fsts
and
mov
mov
adc
ljmp
sbb
mov
cmp
hlt
or
sarl
mov
jmp
and
sbb
adc
insb
xchg
sub
into
mov
inc
call
dec
inc
mov
xor
icebp
inc
cwtl
mov
bound
lods
enter
inc
data16
jecxz
jns
xchg
push
lret
leave
icebp
stos
cmpsb
ret
jno
add
or
cmp
mov
test
adc
cld
movsl
ja
or
push
lea
loope
lahf
sub
xlat
push
lahf
notb
sub
sti
sub
les
fcomps
sbbl
inc
jns
daa
mov
or
sbb
sub
push
adc
call
pop
aaa
gs
and
xlat
jne
jecxz
popw
and
mov
add
icebp
lret
or
loopne
in
push
mov
adc
xchg
mov
sub
fcomip
push
push
push
stos
das
inc
shl
dec
jp
daa
cmpsl
sbb
popf
pushf
pusha
in
cmp
loopne
std
dec
mov
adc
mov
dec
lea
or
xchg
dec
inc
test
std
sbb
std
xchg
xor
hlt
test
mov
and
add
cmpsl
mov
movsb
mov
ja
sbb
pop
lods
and
xchg
cmp
in
leave
add
mov
call
pop
jecxz
pmaxub
mov
xchg
lds
adc
arpl
push
xchg
push
sarl
insb
ljmp
test
mov
or
or
sub
popf
xchg
dec
imul
mov
aas
aas
out
sti
jl,pt
mov
popa
mov
pop
bound
shlb
call
imul
insl
neg
dec
das
popa
and
jecxz
mov
mov
and
repz
les
movsb
pop
pop
adc
fldl
push
pushf
cwtl
pushw
cmp
mov
int3
lret
mov
mov
cld
out
sahf
mov
sub
fldenv
adc
in
sbb
lret
nop
call
and
arpl
imul
ret
ret
sahf
inc
pop
pop
incl
test
lcall
ret
sbb
push
lods
jle
pop
mov
iret
sahf
mov
inc
sarl
push
popf
enter
sub
test
push
cwtl
jbe
les
pushf
add
aad
pop
cmp
movsl
cmp
dec
xchg
scas
mov
das
xor
cmp
stos
push
faddp
loopne
cltd
mov
insl
repz
popf
or
mov
dec
xor
dec
push
in
sub
mov
jmp
sub
adc
cld
out
enter
push
fsubrl
movsb
xor
xchg
mov
out
mov
pusha
hlt
or
in
js
push
es
mov
jnp
xor
and
test
pop
jno
sub
dec
jo
cltd
int
mov
fcomp
mov
mov
mov
cmp
loope
loope
popa
adc
add
dec
mov
jl
jge
xor
xor
xchg
int3
mov
inc
repnz
ret
mov
lods
mov
inc
cmp
cmp
xor
pop
neg
xor
repnz
adc
cmp
call
ret
fnstenv
imul
jno
clts
in
mov
into
bound
pop
aam
sti
jae
lcall
jno
jnp
ss
nop
mov
clc
mov
cmp
repnz
clc
mov
adc
in
or
fistpll
sub
xchg
mov
pop
mov
insb
fbstp
inc
iret
xchg
ss
repnz
test
bound
adc
outsb
sbb
mov
lock
xor
cmc
pop
mov
fsubrl
loope
arpl
xor
lods
xchg
pop
xor
push
insb
mov
dec
icebp
xor
loopne
mov
xchg
sub
xchg
push
push
pop
jge
push
sub
lds
aas
mov
pop
jns
jecxz
jl
nop
cs
jns
idivb
stos
insl
roll
xorb
ja
dec
out
mov
in
call
popa
call
xor
lcall
lock
pop
add
xchg
lock
dec
ja
leave
es
flds
hlt
mov
stos
xchg
iret
insb
pop
cs
sub
jmp
pop
jne
rolb
mov
and
mov
or
mov
call
sbb
lea
mov
lret
aas
idivl
pop
dec
loopne
or
add
aaa
stc
gs
xchg
jb
pavgb
xorb
mov
cltd
sbb
imul
push
or
jecxz
xchg
jo
stos
push
push
popf
lock
jp
test
lods
or
mov
insb
rcl
xor
cs
cld
sbb
lea
dec
inc
gs
addr16
dec
inc
je
sub
push
mov
sbb
dec
inc
call
pop
test
jp
cmpsl
int3
cli
js
jnp
rolb
add
pop
adc
mov
cmc
shlb
dec
mov
dec
push
push
adc
or
mov
adc
xchg
sti
pop
push
push
hlt
stos
loopne
outsb
test
mov
xorl
xchg
jae
cmp
loope
icebp
cmp
mov
jne
lds
jae
addr16
and
add
xor
pop
mov
and
mov
fildll
jl
dec
dec
mov
mov
adc
xchg
push
out
sub
mov
cmpsb
lods
fcoms
push
std
jns
testl
xor
inc
adc
rcrl
adc
fdivr
inc
cmp
cmp
sub
test
rorl
adc
lret
out
lods
mov
adc
fwait
cmp
stos
es
in
inc
fnsave
sbb
pop
lahf
aam
and
and
daa
fists
lods
xchg
sub
mov
push
into
setg
aam
mov
minps
pop
test
pushf
fildl
fldcw
fs
leave
cmp
xchg
adc
out
fistpl
lret
pop
fwait
hlt
lock
adc
xchg
pop
test
aam
pop
adc
in
jne
cltd
xchg
dec
mov
mov
mov
push
xchg
adc
out
ret
jle
das
je
mov
outsb
dec
or
icebp
dec
and
jg
imull
fstpt
push
xchg
movsl
sbb
and
pushf
jnp,pn
aas
cltd
sub
in
jl
jbe
jg
es
int
scas
stos
dec
sub
bound
fnclex
or
add
fwait
adc
inc
hlt
repnz
mov
out
scas
popf
dec
push
test
jmp
dec
movsb
jmp
sub
in
jecxz
in
xchg
popa
cmpsb
arpl
bound
mov
and
ja
stc
xchg
lret
cmp
and
test
mov
loop
outsl
scas
add
add
pop
scas
sbb
or
flds
scas
imul
pop
jl
push
loope
lret
xor
xlat
mov
and
xor
pop
dec
xor
fdivs
daa
ja
xchg
sub
ja
imul
pop
daa
test
negl
xchg
mov
cmpsl
sub
inc
or
imul
pop
daa
test
negl
xchg
mov
cmpsl
sub
inc
sbb
addr16
aaa
pop
daa
lods
xlat
mov
out
xchg
loopne
int
jmp
inc
xorl
pop
dec
aaa
fldenv
test
negl
js
dec
es
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
fiadds
push
addr16
ja
push
aaa
fisttpl
aaa
pop
jns
fnstsw
outsb
negl
xchg
xchg
ds
mov
inc
into
push
addr16
ja
pop
mov
mov
dec
xlat
or
outsb
negl
loop
xchg
cmpsl
cs
inc
into
push
addr16
ja
pop
mov
mov
dec
hlt
or
shrl
ret
xchg
or
daa
lea
adc
mov
push
xor
cmp
loop
pop
outsb
jae
inc
jb
or
or
test
pusha
sub
sbb
loop
xchg
sbb
aas
pop
shl
es
inc
xchg
ss
mov
dec
lahf
fld
cld
inc
hlt
pop
and
and
xchg
fwait
lret
mov
and
das
xlat
pop
cmp
repz
loopne
data16
shrb
and
jp
mov
aaa
dec
cmp
notl
iret
cmp
push
testb
push
jg
dec
dec
pushf
inc
lods
and
roll
xchg
vmptrst
cmpsl
inc
dec
addb
addr16
ja
pop
mov
mov
dec
xlat
jle
outsb
negl
xchg
xchg
cmpsl
cs
cwtl
inc
cmpsl
cs
mov
repnz
arpl
inc
out
inc
pop
mov
into
sbb
repz
jp
mov
adc
inc
loop
mov
mov
sub
dec
ret
mov
stos
add
add
setle
scas
aaa
pop
dec
xlat
jle
outsb
negl
xchg
xchg
cmpsl
cs
inc
into
push
addr16
ja
pop
mov
mov
dec
xlat
jle
outsb
negl
xchg
xchg
cmpsl
cs
inc
imul
lret
repnz
xlat
cmp
in
xchg
cmp
xchg
in
cld
lcall
rolb
xor
enter
mov
push
cmp
mov
imul
lock
dec
mov
fisubl
sbb
shl
pushf
and
roll
sbb
cwtl
and
mov
ret
mov
andb
cli
aas
adc
je
mov
mov
jecxz
push
cmp
mov
cld
xlat
inc
inc
sub
notl
cmp
push
mov
add
sub
cmpl
lods
jne
push
das
addl
inc
mov
jb
cmpl
sahf
outsb
push
int
int
nop
call
into
cmp
jne
mov
and
dec
lods
push
add
stos
lret
inc
imul
add
fwait
jmp
mov
inc
xor
xchg
sbb
pop
jno
mov
mov
mov
jns
movsb
xor
sbb
cli
shlb
rcrl
inc
cmc
xchg
int
enter
dec
std
clc
enter
mov
xchg
adc
shr
push
or
sbb
clc
in
and
repnz
stc
enter
pushf
stc
sbb
ss
mov
xor
dec
mov
mov
jmp
mov
std
push
jnp
in
mov
in
fisubrl
adc
rcrb
loop
ja
pop
addb
les
push
sub
icebp
xchg
jge
stos
lret
mov
addr16
push
mov
pop
out
nop
js
dec
jg
cld
xchg
inc
cmc
or
cmpsl
in
mov
fidivl
in
stos
cli
sub
sub
lea
lret
pop
and
cmp
rclb
mov
mov
pop
inc
js
ficoms
inc
cwtl
shl
push
gs
mov
in
insb
and
mov
in
cmp
iret
add
int3
dec
push
mov
jecxz
mov
inc
pop
aaa
mov
mov
mov
add
notb
push
insb
rcll
inc
push
xor
cmpsl
xchg
sbb
cmc
and
jnp
call
ss
jo
adc
mov
movsl
mov
dec
mov
jg
cmpsb
sub
jp
in
xchg
pop
xor
adc
push
dec
lds
jns
cld
lea
jnp
andb
mov
pop
push
jo
mov
sbb
popa
clc
fildll
aas
cli
repnz
popa
xor
out
add
sahf
pusha
or
test
mov
lds
repnz
sbb
into
fdivs
jno
mov
push
lods
dec
adc
popa
adc
cli
call
pop
push
xorl
dec
and
and
lock
dec
idiv
les
jb
mov
stc
call
xchg
rcl
jne
sub
stos
adc
stc
lret
loope
jge
test
jbe
sahf
ss
sbb
notl
sahf
iret
inc
or
xchg
sub
adc
sbb
fstl
inc
in
mov
movsb
iret
fisttpl
jl
push
cmp
adc
jl
pushf
shrb
and
test
add
mov
or
mov
pushf
push
iret
rol
js
das
out
repz
cmp
fsubl
dec
pop
mov
bound
xchg
ljmp
xor
movsl
pop
dec
cltd
jbe
sub
jo
inc
jbe
push
ret
lods
cmp
push
mov
or
subl
ror
xchg
dec
xchg
push
data16
sar
jge
lock
test
pop
jo
jl
into
pop
inc
mov
mov
pop
or
outsl
imul
ret
push
adc
jnp
mov
loop
jecxz
and
stc
mov
flds
adcb
mov
sti
dec
movsb
push
das
enter
and
mov
mov
call
pop
and
es
sub
push
aaa
push
push
jmp
push
test
mov
push
cld
stos
push
jae
xorl
pop
pop
je
xchg
inc
lods
hlt
mov
lods
add
popa
xchg
jl
ja
fstpl
enter
xor
pop
jne
rcrb
aaa
in
jne
mov
fsts
cmp
mov
lcall
enter
xchg
wrmsr
add
xchg
movsl
xchg
dec
scas
shll
sbbl
or
nop
dec
mov
xchg
ret
cmpsb
in
into
sub
std
add
dec
loope
push
xor
scas
scas
pop
and
das
xor
es
xchg
fcmovbe
les
xor
mov
sbb
jns
jbe
mulb
xor
call
leave
or
mov
mov
pop
cmp
add
stos
push
cs
shl
jno
aad
shlb
pop
push
and
xlat
push
cmpsl
mov
cmp
sub
and
xchg
push
stos
imul
mov
fdiv
mov
js
ret
inc
cmpb
cmpb
imul
int
sti
pop
ljmp
jecxz
push
jecxz
push
insl
in
scas
loopne
icebp
or
ret
shlb
pusha
out
into
stc
add
ds
adc
lea
adc
push
adc
insl
das
loop
mov
xor
iret
jns
jae
dec
cmc
mov
rclb
lock
or
and
and
roll
adc
sub
lea
and
dec
outsb
orl
sti
mov
xchg
lahf
loop
stos
pop
mov
sub
pop
mov
xchg
ret
int3
lds
xor
popa
xor
push
out
mov
rcr
js
sub
test
stos
mov
push
test
out
rcl
dec
lret
mov
bound
cmp
fisttpl
cmpsb
mov
xor
push
jns
popa
pop
push
ret
test
cmp
aad
or
inc
push
xorb
test
push
push
mov
jl
fwait
mov
mov
xor
jb
xchg
sbb
cltd
cwtl
mov
jge
dec
in
push
in
add
in
add
jle
call
push
cmp
xor
pop
add
jns
and
ja
inc
pop
adc
inc
cmp
shll
mov
cs
movsl
xchg
arpl
imul
or
out
adc
shrb
out
nop
int3
das
xor
test
sbb
add
and
cmp
push
fdivp
movl
sub
scas
push
xchg
insb
adc
imul
bound
cmpsb
mov
jbe,pn
mov
mov
jge
xor
mov
loop
add
rcl
push
into
out
dec
sti
sbb
pusha
mov
xor
cmpsb
adc
test
test
add
mov
push
icebp
movsb
sub
frstor
mov
adc
xorl
out
test
out
div
mov
les
shl
pushf
push
adc
adc
out
cmpsl
xor
inc
dec
mov
and
clc
xlat
add
lahf
pop
movsb
incl
fcoms
pop
sub
and
lret
dec
push
ds
mov
fdiv
into
xchg
ljmp
inc
mov
or
dec
out
scas
ds
mov
ret
pop
test
out
xchg
sahf
or
and
cmp
push
js
sbb
sub
lods
pop
lds
cltd
inc
lods
in
mov
subl
push
add
mov
roll
les
inc
sbb
std
dec
cmp
int
test
outsl
and
push
lods
mov
jmp
cmpsl
fisubrl
xchg
loopne
mov
lcall
in
mov
jmp
mov
mov
add
scas
inc
sub
sub
mov
lods
insl
cmpsb
sahf
add
mov
jno
push
jmp
xor
testl
cmpsl
mov
pop
and
mov
push
xchg
sub
push
fidivs
add
push
je
push
push
lret
outsb
in
inc
lahf
in
aaa
rol
inc
outsb
scas
cmpsl
sbb
in
data16
icebp
in
xor
xlat
in
mov
sub
pop
mov
loopne
je
jb
test
inc
mov
lcall
dec
stos
jnp
decl
cmp
push
or
add
add
xlat
mov
lret
sahf
adc
ja
out
jecxz
aam
stos
je
pop
int
push
lahf
icebp
repnz
rorb
in
into
rolb
dec
je
sbb
dec
xrelease
ljmp
push
outsl
arpl
jmp
add
mov
adcl
push
daa
fldl2t
rol
insl
adc
into
pushaw
add
push
jbe
push
aam
in
pop
daa
or
jge
rcr
pop
sbb
jns
mov
daa
jge
cmpsb
pop
shrb
or
mov
and
pusha
push
aad
cmp
loopne
popa
stc
inc
sub
pop
mov
ret
in
mov
mov
and
xchg
or
sbbl
sub
in
and
loopne
test
jg
xor
in
or
cmp
repnz
jns
movsb
sbbl
jge
jbe
xchg
jge
inc
mov
out
icebp
cmpsb
rcrl
fcoms
test
cmp
add
les
fwait
push
xchg
dec
jl
cmp
ss
into
cmpsl
sbb
adc
push
pop
sbb
and
cmp
mov
add
dec
aam
pop
or
sbb
xchg
push
shlb
and
jo
test
call
mov
and
test
test
jmp
sub
subl
cmc
and
add
sub
fcomip
cmp
push
and
jbe
mov
mov
push
addr16
shll
pop
stos
xchg
mov
icebp
int
mov
imul
pop
xor
lds
jl
fstl
psubusb
push
mov
es
cmc
lret
jecxz
movsb
daa
aam
mov
push
test
bound
outsl
mov
int3
jne
stos
cltd
push
push
add
xchg
sub
popa
mov
in
aad
or
inc
cmp
add
dec
ret
pop
sub
sub
xacquire
outsl
jae
popa
push
mov
lahf
adc
xchg
fldenv
push
daa
mov
popa
jns
test
xchg
adc
xchg
cmp
push
xor
test
xchg
cmp
ret
cs
jns
pushf
and
test
xchg
stos
fcmovb
jo
cwtl
mov
inc
mov
push
lea
out
repnz
adc
mov
jg
popa
add
pop
aaa
push
out
cmpsl
fucompp
xor
push
stc
out
iret
and
ljmp
jno
or
test
cmpsl
movsb
dec
sub
cltd
jo
icebp
clc
inc
sbb
mov
es
subl
ret
jno
popf
jl
xchg
lret
scas
mov
arpl
xor
inc
les
js
sub
jle
push
xor
pushf
fwait
in
jb
dec
pop
fidivrl
fstps
mov
sub
mov
mov
sub
sub
push
jb
jbe
mov
lods
add
test
arpl
das
pop
data16
jg
cmp
jl
imul
mov
icebp
ss
sbb
lret
cld
push
popf
add
mov
dec
mov
or
mov
imul
in
js
stos
mov
pop
inc
add
mov
pop
jg
push
fld
loop
test
aad
xchg
inc
faddp
movsl
mov
pop
sti
pop
in
mov
loop
cmp
cmp
pop
dec
cmovae
test
testb
js
outsl
mov
mov
and
lock
lcall
jge
imul
inc
add
das
jmp
fnstenv
dec
in
dec
mov
sub
cwtl
ds
rol
push
ret
stos
movsl
inc
jl
xchg
jp
mov
cmp
jge
push
jecxz
xchg
sbb
add
stos
jg
lock
imul
jbe
stos
inc
xor
inc
scas
call
lahf
dec
pushf
pop
dec
fs
dec
rolb
int3
in
lods
mov
xchg
js
mov
movsb
pop
push
xchg
xchg
push
outsb
jmp
sbbl
jl
lahf
jbe
mov
sbb
ljmp
push
insb
cmp
lret
and
lods
cli
jp
arpl
mov
dec
adc
push
push
push
and
gs
in
mov
add
mov
mov
mov
push
ja
dec
jne
fs
outsb
in
leave
roll
xor
repz
jnp
lahf
sbb
lahf
jne
mov
dec
das
fnsave
mov
or
xchg
adc
rcll
jmp
sbb
push
daa
mov
or
popa
cmpb
push
movsb
cmp
adc
or
cmp
int
dec
rcrl
cbtw
enter
jl
mov
jmp
in
cs
sub
scas
orl
into
add
clc
stos
lcall
fstl
mov
js
mov
arpl
lock
and
cmp
push
jb
cwtl
xor
in
pushf
push
jl
mov
shlb
xor
test
sbb
scas
in
push
cmp
mov
mov
cld
xchg
add
add
and
xchg
pop
sahf
repnz
or
add
flds
stc
and
jle
mov
shrb
loopne
clc
pop
push
and
enter
or
je
clc
mov
cmp
stos
div
mov
inc
sbb
stos
sbb
hlt
mov
ret
fsubl
jecxz
jle
int3
lods
stos
popa
xlat
shl
and
xor
loopne
imul
dec
mov
jecxz
rclb
mov
outsl
icebp
fprem
sub
add
dec
cmp
fnsave
xchg
add
cmpsl
mov
frstor
add
ljmp
adc
push
mov
jnp
sbb
mov
popf
sbb
rorb
sbb
xor
jl
loope
popa
cmp
in
xor
vpaddsw
fimull
push
push
mov
and
dec
loopne
mov
add
push
mov
jo
fsubs
cwtl
inc
sub
push
fsub
sbb
xchg
push
adc
sbb
or
push
jge
subl
or
dec
pop
pushl
lods
pushf
stos
mov
sti
call
je
shlb
and
inc
adc
xchg
loopne
les
fsubrs
dec
and
sbb
enter
sbb
arpl
pop
mov
js
je
mov
add
iret
into
popa
lcall
sbb
leave
xchg
mov
dec
lea
dec
out
inc
cs
xchg
jae
xchg
imul
sahf
out
iret
mov
xchg
xor
xor
jl
fiadds
xchg
cwtl
inc
sti
imull
cwtl
fsubrs
add
ss
loop
vpmulhw
aaa
fistl
ds
mov
pop
outsb
inc
shl
push
in
leave
mov
lahf
scas
inc
push
mov
das
inc
pop
int
mov
rorb
cmc
xor
test
sub
xchg
dec
stc
pop
inc
out
cmovge
das
std
lret
fimuls
int
aaa
dec
add
mul
mov
outsb
adc
pop
scas
pop
xchg
jb
iret
fldt
sarl
jp
add
mov
inc
xchg
ret
es
insb
shrl
mov
add
cwtl
dec
xor
adc
cmpl
sti
mov
lods
sbb
xchg
or
mov
aas
ret
sub
mov
push
out
into
inc
movsb
cmp
sbb
ds
pop
and
and
cmpb
lods
loope
int
mov
xor
mov
adc
xor
mov
popf
push
rcrb
out
mov
imul
jg
push
dec
sbb
test
pop
test
push
adc
push
cmp
push
jb
mov
sbb
jg
divb
fdivs
leave
lods
and
incb
pop
mov
les
sub
mov
jl
icebp
fadd
sbb
movsb
repnz
aas
das
sub
movsl
rorb
outsb
dec
nop
xlat
mov
cltd
mov
scas
loop
and
push
std
rcrl
and
add
std
xchg
es
in
leave
shrb
aam
or
lret
add
or
pusha
sbb
mov
movsl
pop
loopne
push
repz
mov
cltd
sbb
pop
mov
cmp
int
data16
fstpl
movsb
sarb
nop
je
inc
mov
test
mov
loopne
sub
rorb
mov
push
and
imul
out
jp
sbb
sbb
aaa
fcompl
bound
adc
test
loop
cmpsl
inc
je
add
sub
sbb
add
or
dec
std
test
data16
stc
leave
add
ja
insl
xchg
cmp
sbb
pop
mov
stos
scas
adcb
hlt
lcall
out
data16
lahf
ret
mov
dec
pop
mov
test
fpatan
test
rclb
dec
movsb
scas
out
gs
mov
imul
ficoms
mov
sub
rorl
fisttps
mov
jp
pop
test
push
xchg
xchg
mov
and
push
rol
test
jbe
mov
sub
jne
in
sti
inc
scas
jno
jns
inc
jb
and
sub
jnp
aam
out
idiv
push
sub
pop
test
xchg
out
add
dec
dec
out
jg
and
or
adc
rclb
leave
enter
ficoml
cmc
cmp
stc
js
sbb
and
dec
sbb
daa
dec
into
ss
js
push
mulb
or
fmull
xchg
mov
aas
int3
stos
pop
insb
in
and
inc
ret
push
xor
push
sbb
decl
jg
aaa
pop
ret
das
lds
leave
xchg
movsb
xchg
insb
in
adc
cmp
xor
mov
or
or
mov
push
xor
jns
xchg
adc
mov
repnz
xchg
mov
xor
cmpsb
mov
and
stos
outsb
shll
or
inc
push
dec
jb
sub
lahf
push
leave
movsb
add
addr16
and
shll
lods
pop
add
mov
sbb
add
jno
int3
xor
xor
lret
lahf
sbb
cli
loopne
mov
jmp
mov
xor
cmp
inc
in
and
pushf
cmp
push
push
les
mov
push
out
arpl
sub
xor
jb
push
or
test
test
cs
cmp
into
aam
es
das
add
in
mov
xchg
gs
out
cwtl
adc
cmp
inc
mov
push
push
movzwl
cmp
xchg
xchg
stos
pop
shll
or
inc
cmp
xor
dec
sti
ss
sub
cli
cwtl
pop
or
sub
add
lcall
xchg
jmp
xchg
cli
push
xchg
mov
les
cli
loop
shl
mov
mov
daa
xchg
mov
in
das
outsl
mov
out
xchg
xchg
fcmovb
push
fwait
lret
and
jo
cmc
gs
mov
addr16
fsubrs
cmpb
mov
cmp
and
arpl
push
out
xchg
fimuls
in
pop
sub
sbb
jo
or
pop
mov
loope
lds
mov
pop
xchg
rol
add
inc
arpl
mov
jo
cmpsl
xor
and
aaa
repnz
fdiv
bound
xchg
adc
out
cltd
loopne
xchg
xor
test
shlb
and
sti
dec
jae
leave
or
lods
nop
xchg
test
inc
jo
mov
popf
mov
jo
adc
jp
xchg
dec
xchg
lods
test
or
pop
lahf
sub
outsb
or
mov
mov
fsubrl
leave
shl
das
jg
and
pop
scas
mov
sbb
and
enter
xchg
mov
inc
aam
cmp
ss
into
xchg
in
pop
adc
mov
cmp
repnz
bound
lcall
adcl
inc
xchg
and
sub
test
shll
mov
jge
jb,pn
cmpb
nop
lret
fistpll
xor
test
sbb
negl
add
xchg
popf
das
cmp
xor
mov
fisubs
loop
xor
sub
stos
add
icebp
adc
xlat
lret
push
mov
les
imul
gs
mov
out
repz
sbb
fmul
mov
cmp
movsb
imul
xchg
ja
mov
int3
mov
dec
mov
cmpsl
lods
loope
into
or
mov
movsb
xchg
ss
xor
stos
and
dec
adc
and
aas
push
cmc
movsb
xor
movsb
mov
adc
xchg
cvtpi2ps
int3
das
lahf
out
lcall
adc
lahf
adc
and
sbb
arpl
xor
lret
shll
mov
lods
shr
in
mov
out
out
add
or
popa
icebp
jecxz
xor
or
icebp
jns
jb
imul
out
ja
pop
mov
mov
dec
xlat
jle
outsb
negl
xchg
xchg
cmpsl
cs
inc
into
push
addr16
ja
pop
mov
mov
dec
xlat
jle
outsb
negl
xchg
xchg
cmpsl
cs
inc
into
push
addr16
ja
pop
mov
mov
dec
xlat
jle
outsb
negl
xchg
xchg
cmpsl
cs
inc
into
push
addr16
ja
pop
mov
mov
dec
jge
out
subb
push
xchg
fiadds
ljmp
lret
mov
in
xor
pop
inc
out
cmp
icebp
fiaddl
ljmp
in
adc
jb
push
xor
or
sub
pusha
jge
lret
stos
movsl
ret
in
jno
imul
aaa
insb
and
dec
sti
sahf
leave
mov
xchg
lds
cmp
imul
mov
cmp
push
jno
popa
popa
jns
jns
xor
popl
js
push
mov
test
cmp
mov
imul
mov
test
dec
icebp
inc
pop
add
xchg
inc
jmp
pop
in
dec
lret
dec
ljmp
in
adc
add
imul
gs
push
mov
xchg
pop
cmp
jle
outsb
push
xor
lcall
lea
cmpsl
push
sbb
sub
sub
or
shrb
mov
jb
dec
jne
inc
into
push
shr
mov
movsl
ljmp
inc
cmp
pop
lahf
loop
js
push
sbb
and
cld
movsl
rcll
out
iret
in
adc
filds
daa
pop
sub
dec
add
pushf
loopne
mov
xchg
mov
jb
push
aas
xor
push
sub
sbb
and
stc
test
testb
mov
add
push
sbb
jne
sub
cli
movsl
ljmp
in
adc
jp
push
sbb
jne
sub
xchg
sbb
sub
xchg
jl
divb
push
jmp
dec
cld
mov
sbb
mov
jl
ja
sbb
fwait
push
add
jl
jl
push
out
inc
sub
bound
mov
pop
add
inc
push
outsb
inc
cwtl
dec
mov
fwait
lahf
xor
jmp
imul
xor
lods
sub
sub
dec
out
xchg
ds
xor
clc
mov
dec
mov
insb
push
clc
mov
xlat
loope
test
xor
and
fwait
in
mov
imul
adc
inc
sbb
fistpll
jecxz
lods
ss
cmp
mov
or
dec
xor
stos
leave
frstor
testl
imul
and
mov
cld
lcall
in
into
pop
cmp
mov
lcall
or
jb
leave
fistpll
movsb
push
fwait
sub
test
clc
inc
mov
rorb
or
xchg
shrb
push
cmp
dec
mov
dec
sbb
mov
cmc
dec
test
ret
inc
int
dec
lds
or
stos
into
mov
bound
ds
xchg
mov
push
inc
xor
test
adc
jp
addr16
sbb
add
repz
push
fwait
arpl
adc
mov
xchg
loope
cmp
sub
cmc
mov
mov
mov
das
push
popl
jge
movsb
scas
inc
fs
push
pop
out
std
dec
jge
push
repnz
pop
cmp
mov
pop
ja
sub
dec
test
adc
imul
jb
dec
data16
test
rcrl
ret
shl
xchg
jle
xchg
hlt
loope
test
jl
inc
or
lret
xchg
jg
add
push
push
cmp
sbb
sbb
or
lret
or
dec
int
push
jp
jmp
mov
inc
inc
sub
xor
frstor
push
outsl
movsl
iret
aaa
xchg
add
cltd
mov
aaa
or
mov
lret
mov
scas
xchg
pop
movsl
pop
adc
pushl
dec
ja
test
lds
arpl
and
andb
stos
sbb
dec
push
sti
pop
cmpsb
mov
jae
xor
xor
cmpb
sub
je
mov
out
in
das
imul
push
cmpsl
pop
lea
inc
inc
and
fidivrl
pop
and
inc
sahf
into
sbb
leave
lock
sbb
cmp
sbb
enter
ljmp
sbb
mov
sbb
mov
call
jp
mov
loope
push
popf
push
insb
push
imul
or
dec
mov
movsb
call
add
push
sti
pop
mov
mov
in
aad
lea
fists
mov
cmp
mov
das
push
out
loopne
or
mov
cmc
test
sahf
lahf
insl
leave
addl
icebp
in
aaa
shrb
lahf
sub
andl
loope
pop
mov
dec
add
cltd
dec
push
adcl
loopne
dec
adc
mov
test
lods
rcr
xchg
mov
aam
mov
mov
or
bound
adc
hlt
imul
mov
loopne
imull
fucompp
pusha
jae
or
imul
sub
cltd
xor
scas
mov
dec
imul
fdivrs
push
in
cld
cld
imulb
mov
in
aam
or
adc
mov
lods
sub
lret
jmp
mov
mov
call
sub
sarl
dec
fldt
inc
mov
outsl
fmul
leave
push
sub
adc
dec
mulb
xor
or
jbe
rclb
lcall
or
imul
push
sub
inc
jae
dec
lcall
fnsave
mov
leave
dec
fldcw
pop
pop
add
pop
test
in
cmp
lods
jb
jge
xchg
fists
in
push
add
loop
xchg
xor
ficoms
push
out
jge
push
xor
inc
mov
outsl
icebp
dec
mov
and
movups
pop
lds
mov
mov
fisubrl
pop
xlat
test
jle
into
hlt
loope,pn
cli
cmp
push
rcrl
cli
insb
out
sub
stos
mov
filds
and
or
add
pop
cmp
add
jb
in
std
pop
or
fstpt
jns
sti
rcrl
push
dec
push
xchg
xchg
clc
mov
adc
push
enter
test
push
jg
mov
ja
nop
out
enter
test
fwait
jl
jmp
adc
lods
js
inc
mov
int
dec
outsb
aam
push
jmp
mov
adc
and
adc
bswap
sbb
insl
clc
mov
cmpsb
add
in
mov
fidivrs
inc
scas
lret
mov
xchg
add
daa
and
or
jne
jl
cwtl
or
addr16
and
mov
jo
out
movb
outsl
and
mov
inc
mov
popa
scas
cs
lds
cmpsl
and
sbb
pushf
or
add
push
inc
arpl
sahf
or
cmc
dec
aas
loop
faddl
add
lock
xor
jne
cmp
stos
rcr
pop
xor
sti
into
mov
push
adc
jg
in
mov
fildll
pushf
xchg
mov
popf
outsl
cld
gs
cmp
jbe
push
cmp
ficomps
out
mov
iret
movsl
add
repnz
jecxz
imul
dec
add
decb
ds
xchg
inc
fidivs
xchg
arpl
andb
cmp
iret
mov
aam
cmp
jns
push
cltd
insb
adc
xchg
add
sub
xchg
shlb
icebp
jo
add
mov
arpl
orb
rcrb
mov
and
jg
or
lret
rorb
loope
adc
inc
pop
push
push
into
shlb
lods
mov
cmp
es
mov
inc
dec
inc
mov
shr
movaps
scas
stos
leave
enter
jge
cltd
imul
clc
fwait
je
pop
xor
hlt
push
sub
in
imul
pop
mov
fidivrs
scas
les
mov
aaa
cmp
push
and
pop
shll
mov
bound
hlt
jecxz
in
mov
mov
adc
icebp
cli
sub
jne
insb
xchg
shll
sub
push
sub
lods
pop
cmp
pop
inc
mov
xor
movsb
xchg
loope
inc
sahf
mov
push
lahf
fidivrs
and
mov
cwtl
mov
adc
imul
jge
or
idiv
rclb
xchg
js
pop
mov
lahf
ljmp
sbb
nop
lret
mov
dec
sub
jb
clc
cmc
push
lock
jp
and
mov
lds
fsts
hlt
test
iret
jmp
imul
cmpsl
cmp
mov
sub
repz
mov
insl
js
mov
mov
movsb
neg
inc
adc
je
addr16
shll
imul
dec
out
ret
cs
xor
push
jne
lds
repnz
dec
les
inc
dec
in
dec
addr16
outsl
push
add
rep
push
test
adc
aaa
and
fidivrs
push
pop
sub
out
inc
push
in
loope
flds
pop
in
movsl
jmp
xchg
sub
dec
fldl
sub
lods
leave
shrb
std
mov
insb
jg
lret
mov
mov
fmulp
dec
lock
mov
frstor
sbb
out
inc
sbb
push
in
insl
sub
test
xor
lahf
cwtl
loop
inc
lcall
dec
cmp
in
test
xor
popa
push
mov
or
inc
inc
pop
nop
jb
add
inc
pop
xchg
mov
add
add
jecxz
fisttpl
sbb
sub
cltd
mov
lret
push
pop
inc
cmp
mov
cmc
shll
mov
outsb
or
push
divl
subb
push
call
ds
cmc
push
call
lods
imul
or
mov
push
sbb
mov
cmpsl
outsb
enter
scas
add
push
popa
incl
mov
int3
pop
aad
nop
test
aas
inc
loope
dec
mov
rclb
xchg
shr
fiaddl
xchg
adc
xchg
clc
inc
cltd
mov
cmp
inc
icebp
sbb
or
rolb
add
pop
decl
add
out
push
mov
mov
pop
jns
xchg
xor
mov
push
stos
jmp
in
shlb
jno
fisubs
jae
jbe
jns
push
push
xchg
je
nop
and
pop
mov
inc
jp
xchg
rorb
sbb
push
xor
filds
mov
jbe
aaa
ror
negb
ret
or
xor
lahf
icebp
lahf
imul
fbld
fsubl
pop
out
movsb
lahf
push
xchg
lods
imul
out
sub
pop
out
mov
loope
stos
cmc
icebp
mov
into
outsl
cmp
leave
cli
adc
mov
hlt
cmc
adc
jecxz
std
cmp
cld
mov
mov
lods
stc
xchg
ja
cmp
cli
xchg
enter
xor
sub
and
pop
mov
mov
lea
gs
cld
jne
das
push
inc
jmp
dec
xchg
sub
aas
xchg
xor
das
adc
jne
push
fdiv
fisubl
push
sarb
or
or
inc
and
aaa
jmp
fmull
shr
mov
in
xchg
insb
shll
test
jmp
dec
push
test
add
or
pop
cwtl
clc
xchg
cmp
std
xor
out
mov
inc
icebp
jno
out
sbb
xor
jecxz
sub
push
jle
fdivl
dec
add
and
imul
jo
push
push
push
daa
ja
daa
mov
xchg
xor
sub
pop
or
iret
push
das
and
pop
lock
sbb
pusha
xchg
arpl
mov
fisttpl
add
sahf
xchg
ret
sub
sti
push
inc
outsl
mov
sbb
mov
roll
pop
sub
cmp
repz
or
repnz
dec
sub
sarl
mov
jge
and
cld
mov
mov
sarb
sub
jb
cli
dec
gs
mov
shlb
mull
push
int
push
mov
fnstcw
and
es
sub
data16
lods
push
add
xchg
rcll
je
popa
push
jmp
mov
jmp
popf
pop
orl
enter
pop
gs
adc
sub
mov
pop
call
push
jbe
and
lods
into
mov
jnp
pop
xchg
aam
lods
push
jnp
sub
jae
cmp
aad
loopne
push
sbb
mov
rcrl
into
xchg
jnp
lret
imul
lcall
push
arpl
aad
sub
loope
xor
sub
mov
pop
shlb
push
cmp
data16
imul
cmp
sti
insb
fstps
rclb
sub
xchg
rcrl
test
inc
cmp
aam
jle
sub
pop
pop
data16
lock
test
movsb
sbb
jg
js
fnstcw
and
pop
std
enter
jl
dec
das
mov
pop
mov
test
mov
jae
jecxz
fistl
outsl
push
sub
push
jno
repz
pop
ljmp
mov
popa
cmp
roll
mov
push
jns
jae
in
daa
inc
xchg
pop
movb
test
mov
sub
jbe
add
inc
and
push
ret
shll
xlat
sub
ret
sbb
stos
clc
repz
sub
loop
cmp
or
sbb
leave
jle
pushf
and
jbe
or
insb
adc
aam
dec
shr
xchg
inc
fsubl
pop
gs
mov
push
dec
mov
cmp
imul
jge
fldt
add
cmp
sahf
addr16
loop
lods
int3
repz
pop
sti
int
dec
rclb
push
popa
shlb
sub
je
inc
push
adc
ljmp
push
mov
jne
icebp
jl
mov
ds
mov
roll
testl
and
sub
cmp
fwait
sahf
sbb
popa
mov
mov
mov
sbb
pop
test
stc
cmp
out
rorl
test
cmp
iret
adc
rcl
ja
call
sbb
loope
push
jno
cmova
xlat
add
push
fldl2t
inc
rcrl
rcl
test
xchg
mov
pop
std
shlb
jp
mov
inc
xchg
dec
not
push
stos
ss
iret
xor
inc
jg
lds
in
or
fidivrl
sub
jmp
lahf
into
jo
int3
pop
pop
aaa
js
mov
iret
popa
lods
lods
cltd
adcb
shlb
lods
jl
sbb
adc
sbb
bnd
int
loope
je
cmpsl
mov
call
ja
cltd
sub
cmp
sub
inc
lahf
cltd
decb
aaa
xchg
mov
fsubp
in
fldcw
mov
sahf
call
mov
pop
stc
cld
mov
mov
add
sti
pop
mov
jo
mov
or
add
daa
out
push
cmc
les
and
mov
out
adc
mov
movsl
fcmovnb
pop
jg
mov
push
jle
mov
sbb
in
mov
loop
push
fiadds
dec
dec
in
add
and
sub
push
in
scas
pushf
and
mov
pop
nop
cmpsl
cld
mov
xor
mov
push
xchg
loop
jo
addr16
faddl
ds
roll
outsb
ret
mov
mov
add
iret
cld
leave
dec
pop
xchg
push
mov
add
stc
jecxz
stos
imul
inc
repnz
lea
xor
adc
mulb
call
adc
push
jmp
push
xor
sub
stos
xchg
jl
hlt
sahf
or
orl
in
insb
cmovno
sarl
cmp
and
pop
pop
sar
add
out
into
push
dec
mov
js
cld
ret
fimuls
xor
xchg
int3
mov
mov
fadds
jecxz
std
push
sub
lock
ficoml
fisttps
mov
sub
sbb
enter
out
add
movl
cld
loope
jg
push
pop
push
xor
or
jp
jne
mov
lds
js
notl
push
jle
add
mov
sub
cwtl
loope
ss
popf
xor
clc
aam
loopne
bound
pusha
cltd
push
jo
dec
cld
add
out
cmpl
sub
test
popf
imul
push
daa
lods
stc
dec
dec
fucomip
xor
adc
cmc
stc
sbb
and
popa
fsubrl
xchg
jl
or
arpl
fisubl
push
sub
pop
push
push
sub
push
js
xor
mov
push
sti
test
lret
pushf
push
mov
sub
cli
gs
add
aad
jle
stc
dec
xchg
std
ds
testl
je
lret
dec
sti
mov
stc
push
cli
push
cmp
xor
repz
mov
mov
or
lahf
test
js
inc
xlat
cld
mov
push
imul
add
xchg
cli
imull
mov
push
adc
addl
bound
inc
movsl
add
popa
sub
repz
cli
sub
mov
mov
sti
lret
cmp
adc
cwtl
fwait
mov
repz
dec
cmpsb
mov
xlat
test
shll
movsl
dec
add
jge
pop
dec
pop
outsl
xor
adc
pop
fwait
popf
adc
and
sub
int
fstl
rolb
fwait
jmp
mov
lods
cmpsb
cli
xlat
push
xchg
pop
pop
xor
or
mov
inc
add
lea
aam
sub
lods
shll
xor
jg
rol
xchg
sub
xchg
jp
mov
inc
es
adc
aam
inc
xor
stos
insl
or
test
push
bnd
push
cmpl
sub
jecxz
lods
jp
cmp
jecxz
sbb
mov
aaa
js
lret
sti
popa
inc
jo
pop
inc
iret
enter
sub
scas
sbbb
fimuls
ja
lret
adc
add
push
inc
dec
pop
dec
inc
or
vprotq
and
divl
mov
insl
ret
and
xchg
rclb
add
xchg
mov
lcall
inc
mov
push
jb
xor
cltd
or
js
pop
shll
mov
xchg
or
sub
out
mov
mov
lds
ja
mov
cltd
aaa
mov
loopne
mov
push
sbb
pop
xor
xor
sub
stc
fs
cltd
mov
cltd
insl
inc
jb
xchg
mov
lock
inc
clc
aam
xchg
or
sub
adc
xlat
jne
pop
jno
and
aas
push
repnz
cld
mov
xor
out
mov
or
and
sub
mov
mov
mov
xor
mov
mov
cmc
adc
psrld
push
sub
lock
fcoml
jmp
or
cmpsb
dec
xchg
pushf
mov
adc
mov
push
xchg
mov
xchg
add
mov
mov
jl
adc
sarl
sub
push
repnz
leave
jb
incl
mov
mov
dec
push
sbb
or
popf
std
adc
data16
jb
and
adc
inc
rcll
or
scas
pop
add
xchg
lret
jb
out
in
adc
cwtl
and
xchg
mov
pop
and
jbe
mov
and
gs
cs
xchg
cmpsl
lahf
inc
stc
mov
mov
xchg
popf
subl
mov
push
cmpsb
in
movsb
movsb
lgs
inc
xor
sub
fisubl
enter
add
jle
mov
pop
aaa
push
nop
int3
or
lds
mov
out
sub
jne
jp
dec
insb
cwtl
insl
mov
xchg
test
sbb
imul
addl
or
mov
ffree
mov
ss
pop
popa
dec
lahf
sub
adc
ror
sub
xor
mov
push
stc
push
xchg
mov
arpl
jnp
jnp
ficompl
pmaxsw
mov
jnp
les
fpatan
mov
fisubrl
jnp
das
popf
cmpl
lahf
shll
test
movsl
add
ljmp
pop
fiaddl
je
clc
xor
mov
dec
fs
sbb
cmpsl
dec
cli
cmp
push
mov
jb
pushf
out
mov
jnp
cwtl
lods
mov
or
jb
je
mov
fldcw
cmpl
jo
push
insl
test
dec
dec
push
int
les
mov
sub
sbb
push
fldt
dec
pop
enter
and
outsb
std
mov
xchg
lret
daa
fcomps
pop
notl
inc
mov
fwait
pop
cmp
cld
aad
jb
leave
jnp
test
mov
in
adc
pop
fistl
out
ffree
mov
mov
mov
dec
jge
xor
pop
or
push
sub
jae
ljmp
pop
call
adc
xchg
ljmp
jno
mov
or
scas
push
dec
jle
mov
adc
mov
and
movsl
imul
loope
aas
dec
add
adc
ret
jnp
jns
addr16
nop
sub
fistpll
mov
xchg
rcrb
mov
mov
arpl
xchg
clc
or
call
bound
cld
aad
push
adc
fiaddl
cmpsb
push
ret
ja
and
in
fs
in
jle
cmpsb
inc
imul
orb
mov
xor
ret
loope
call
or
mov
jno
enter
out
mov
cmp
rcr
lea
int
xor
inc
pop
sub
repnz
sbb
xchg
push
jmp
dec
sub
and
pop
mov
cmpsl
add
ds
push
int3
dec
sub
loope
arpl
add
xchg
loop
jns
adc
mov
add
xchg
xchg
push
pop
adc
xchg
jl
mov
bound
mov
mov
xor
in
push
test
ficoml
inc
nop
test
pusha
test
ffreep
or
pop
pop
and
cmpsb
mov
pop
xchg
ret
fsubrl
and
xor
dec
xchg
movsb
jl
stc
add
xlat
jge
adc
in
add
hlt
jae
mov
ljmp
xchg
mov
and
aas
xchg
push
dec
pop
xchg
lahf
push
out
sub
cmp
push
out
cmc
loope
js
int3
repnz
and
sbb
bnd
mov
mov
add
push
sbb
jne
sub
cli
movsl
ljmp
in
adc
jp
push
sbb
jne
sub
loop
out
inc
lcall
adc
jp
arpl
push
or
into
cmpl
test
cmc
cmp
adc
jp
sbb
mov
push
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
sub
xchg
sarb
stc
dec
pop
imul
cwtl
push
add
pop
or
pop
push
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
hlt
add
add
add
add
les
or
add
add
add
add
add
mov
fwait
add
add
add
add
xor
push
add
and
add
inc
add
add
add
add
add
add
loopne
pop
add
mov
add
add
fiadds
inc
add
add
add
or
add
add
add
add
sti
add
add
add
add
add
add
add
xor
add
loopne
push
add
add
call
add
add
jno
xor
add
xor
movsb
add
add
jp
mov
or
add
add
add
add
add
add
pop
add
and
add
add
sbb
add
ret
add
add
sub
or
mov
hlt
add
mov
add
add
add
add
add
add
add
add
xor
add
fiadds
cmp
movsb
add
add
add
mov
les
or
add
push
add
add
lcall
add
add
add
add
add
ret
add
mov
sub
stos
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
ret
add
add
add
jl
mov
adc
add
pop
add
add
add
add
add
add
add
add
add
add
add
lret
add
add
add
mov
add
add
add
jae
or
loopne
jo
inc
add
add
add
cmp
add
add
add
ret
add
add
add
add
add
add
add
add
sbb
test
mov
add
add
add
add
add
add
add
hlt
add
add
add
inc
add
add
add
add
add
mov
inc
add
add
add
inc
add
add
add
popa
add
add
inc
add
add
add
out
push
add
movsb
add
xchg
add
add
movb
add
add
add
add
add
push
add
add
add
add
cwtl
add
add
add
add
lcall
add
add
add
add
add
add
add
add
add
add
fldl
xchg
add
inc
add
test
ret
add
add
ds
add
add
add
out
popa
add
rolb
add
xchg
add
add
add
add
push
add
loopne
xor
add
add
add
pop
jns
mov
mov
xor
mov
sbb
push
and
test
cmpsl
testl
mov
pop
stos
loopnew
idivl
sbbb
addr16
popa
leave
loop
ret
xor
inc
neg
nop
pop
and
jno
sub
cld
xchg
les
xor
jmp
cltd
inc
sbb
or
scas
aad
dec
std
rolb
out
ret
cmc
adc
push
dec
xchg
adc
sub
cmp
fs
mov
popf
push
cmp
xor
xchg
jp
sub
lods
jae
xchg
das
mov
cmp
mov
sub
dec
int3
icebp
mov
jp
sbb
jno
bound
add
sub
fsts
cmp
jp
or
in
xchg
jge
outsl
lods
push
rcll
inc
and
inc
dec
sahf
lret
stos
mov
fstpt
push
xchg
inc
lahf
in
and
dec
jp
ss
xor
xor
xor
call
mov
adc
inc
pop
mov
mov
or
fimull
add
fstpl
sbb
xor
cs
jns
int3
in
js
jle
in
pop
mov
gs
mov
mov
xor
repz
xor
mov
pushf
sub
call
push
pop
mov
xchg
jmp
mov
dec
test
and
xor
xchg
pop
sbb
addl
insb
mov
sub
push
mov
ljmp
lods
mov
sub
insb
divl
xor
ljmp
je
mov
xchg
xchg
xchg
test
add
shll
mov
out
cs
and
inc
aas
stos
int
adc
std
xlat
mov
test
stc
and
enter
lret
jg
xor
pop
ret
push
jne
ja
cli
rcrl
lcall
test
sysexit
xor
push
repz
pop
jo
adc
add
aam
cmpsb
ret
ficoml
inc
cmp
and
imul
enter
sbb
xchg
pop
or
mov
push
or
lcall
push
ljmp
shll
adc
adc
les
mov
xchg
and
cmp
mov
cwtl
clc
mov
pop
fwait
adc
push
adc
add
xor
daa
mov
jbe
pop
jbe
call
and
add
imul
clc
out
lcall
xor
lahf
pop
dec
inc
aad
in
hlt
adc
bound
enter
adc
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
