call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
xor
dec
stos
pop
cmp
scas
jne
scas
or
sbb
sub
cmp
imul
jp
pop
mov
or
sbb
scas
sub
cmp
sub
fwait
push
add
xor
and
adc
icebp
js
je
dec
test
xor
pop
repz
mov
push
fidivs
and
push
cmp
jecxz
adc
add
fidivs
xchg
and
dec
icebp
dec
pop
in
lret
cli
stos
sarl
xor
dec
in
cwtl
pushw
mul
mov
add
cmp
sbb
jo
xchg
mov
imul
and
push
stos
mov
das
mov
adc
add
hlt
xchg
dec
lret
das
dec
jmp
sub
clc
cs
cli
sahf
sbb
or
loop
add
cmp
sbb
test
mov
mov
ljmp
jae
aam
and
stos
movsb
push
lcall
das
dec
mov
lret
and
or
add
loop
sarb
ret
jae
addr16
imul
das
call
push
mov
xorb
dec
cli
pop
mov
and
das
out
sub
sbb
jp
das
lret
pop
movsb
push
call
call
dec
scas
pop
iret
sbb
pop
cli
or
fsubrl
sti
pop
fcoms
cmp
or
sbb
ljmp
cmp
imul
dec
stos
pop
mov
or
sbb
ljmp
cmp
imul
adc
xor
mov
inc
mov
lret
mov
dec
in
xchg
push
sub
dec
xchg
aaa
popf
out
sub
cs
rcrl
in
mov
shr
jno
cmp
lret
imul
aas
call
dec
xchg
imul
out
jmp
out
lods
adc
scas
mov
push
daa
rcrb
fsubs
stos
sub
js
cltd
js
adc
and
ds
fs
adc
mov
shll
cmpsb
addr16
sbb
and
jo
dec
lds
cmc
pushf
daa
mov
cmpsb
in
xor
inc
pop
fsubr
mov
push
test
mov
aam
xchg
cmp
ficoml
sbb
mov
mov
dec
fisubrs
insb
orl
cmp
inc
shlb
fldl
adc
test
sbb
push
ljmp
shlb
add
mov
repz
sbb
sti
xchg
and
fistpll
ss
push
jmp
and
jp
and
push
scas
stos
test
fisttpl
xchg
mov
sub
loop
cmp
mov
fistpll
xchg
ss
push
mov
call
ds
out
sbb
xchg
dec
mov
neg
mov
insb
stos
sahf
push
data16
or
adc
mov
xchg
inc
lret
dec
in
push
dec
sub
jl
jp
pop
adc
mov
mov
test
xor
fsub
pushl
pop
pop
xchg
insl
and
ss
clc
xchg
mov
and
int3
std
and
jmp
push
shlb
sub
pop
out
outsb
mov
in
mov
je
pop
xor
test
dec
jnp
movsb
fistps
jmp
inc
ret
pop
imul
sbb
mov
mov
sbb
in
rclb
ret
inc
pop
dec
fimull
mov
std
sbb
pop
cmpsl
or
stos
mul
testb
loop
cmpsb
push
cltd
or
jp
lods
test
fisubrl
mov
mov
ds
jne
jmp
je
add
int
bound
out
and
cmpsl
loope
adc
pusha
mov
imul
hlt
xchg
or
outsb
pop
jbe
add
and
xchg
fucomip
in
rcll
or
fwait
stos
cmp
in
mov
arpl
push
loope
mov
inc
xor
adc
pusha
or
pushf
pop
jle
mov
jmp
xor
or
mov
and
cwtl
ret
jecxz
dec
inc
mov
repz
jecxz
xchg
ret
xorb
sbb
les
pop
xor
xchg
mov
aam
sarb
xchg
outsl
cld
lds
pop
int
paddq
adc
bound
scas
sub
and
data16
daa
lret
das
sub
je
inc
scas
aaa
dec
aam
xchg
mov
xchg
repz
movsb
push
mov
repnz
sub
push
lahf
out
repnz
data16
fisttps
mov
inc
inc
js
xchg
ljmp
jae
leave
inc
fidivrl
insl
inc
jecxz
mov
mov
jmp
movsl
testl
movb
lds
push
outsb
je
or
add
je
sub
ds
adc
or
lret
push
push
jmp
cs
jns
nop
clc
mov
jecxz
idivl
xchg
imul
push
mov
sbb
lods
cli
loopne
aaa
xor
test
dec
mov
push
and
sbb
dec
scas
ljmp
adc
pushf
sub
subl
xchg
jl
jns
push
mov
adc
push
add
mov
mov
dec
add
cs
mov
cmpsb
mov
xor
iret
pop
dec
mov
add
mov
jp
push
insl
ja
pop
pop
nop
and
xchg
mov
and
fsubrl
sub
cmp
nop
xchg
divb
inc
and
shrd
clc
xchg
fdivrl
movsb
push
mov
xor
push
imulb
movsb
nop
add
push
and
cmpsl
pop
cltd
aad
dec
push
sar
xchg
clc
repz
mov
out
push
fisttpl
mov
and
aas
push
loope
mov
inc
inc
sbb
movsb
shll
xchg
popf
sbb
hlt
jnp
decb
jne
jp
dec
mov
test
inc
or
lock
test
ja
scas
andb
mov
stos
dec
mov
mov
or
lret
js
jg
jg
mov
inc
aam
cmp
cmp
dec
dec
jno
adc
movsl
ret
int3
cs
xchg
push
lock
daa
iret
jno
add
loope
test
jle
stos
cli
cmpb
js
cmp
popa
and
mov
dec
cmpsl
mov
add
jg
push
clc
int
pop
mov
insb
push
lret
ret
arpl
out
fxtract
mov
cwtl
dec
sub
sahf
daa
cli
fldcw
cmp
sbbb
mov
loope
jmp
push
xor
popf
jp
add
dec
and
dec
jne
comiss
ja
push
mov
xor
cmp
stos
xor
loope
mov
jp
adc
mov
scas
sbb
mov
xor
das
pop
in
outsl
fdivrs
mov
cmp
ret
fists
cmp
jmp
ds
jbe
mov
xor
in
jno
sub
cmpsl
xor
in
xor
mov
lods
jbe
in
jbe
repnz
mov
stc
mov
mov
push
xlat
mov
into
arpl
dec
push
sub
sarl
fistl
rcll
cld
sub
adc
sbb
addr16
jb
push
jmp
push
bound
out
push
dec
xor
xchg
or
push
cld
mov
mov
aam
cli
test
nop
int3
fs
xor
repz
inc
xor
movsl
sti
sahf
or
es
dec
dec
pushf
cmp
aas
xorb
inc
out
jp
cmc
mov
dec
adc
adc
hlt
lea
mov
mov
pop
mov
xor
movsb
popf
test
dec
stos
mov
jg,pn
mov
jb
loope
enter
push
jae
mov
in
arpl
dec
mov
ror
fisubrl
fimull
inc
xchg
mov
inc
cmp
lret
jns
jbe
sub
mov
or
addb
sbb
sbbl
popf
hlt
sub
xchg
sti
sub
or
out
mov
bound
jne
inc
cmp
stos
cmp
pop
jae
ret
js
leave
xchg
sbb
xchg
ret
dec
cmpsb
or
pop
movsb
lret
movsl
in
dec
out
mov
inc
sbb
test
pop
xor
lret
movsb
pop
mov
push
jp
dec
jmp
nop
lcall
into
and
pop
cmp
stos
int3
cmp
movsl
lahf
popf
ljmp
jge
push
ja
pop
or
data16
push
divb
inc
pop
cmpsb
mov
mov
nop
outsl
mov
movsl
syscall
cli
mov
cmpb
arpl
xchg
testb
fwait
cmp
add
and
int
shl
es
nop
push
mov
sub
mov
rcrb
sbb
leave
xchg
adc
sti
jne
andl
mov
ret
shrl
cmp
add
sub
iret
mov
mov
push
scas
cmpsl
loopne
orb
je
shlb
insl
xchg
in
jecxz
mov
nop
jg
xor
jno
clc
addr16
jg
addr16
xchg
push
enter
pop
movsl
int3
jg
repz
mov
xchg
clc
dec
das
lcall
bound
push
sub
repz
dec
arpl
and
pop
sbb
cli
sti
pop
inc
and
inc
jl
imul
jns
sub
out
inc
sbb
dec
xor
je
test
pop
imul
aas
enter
and
cmp
sbb
idivl
popa
mov
mov
stos
push
pop
test
data16
aas
or
lcall
popf
xchg
mov
sbb
cmp
loop
stos
xor
out
imul
arpl
cmp
jnp
jle
jno
cli
dec
aad
loopne
mov
cmp
xchg
iret
popa
inc
jl
mov
adc
cmpsl
sahf
sbb
adc
rorl
out
shrb
dec
lods
in
fsubs
aas
dec
cld
int
push
lock
scas
loopne
popa
testl
add
jmp
xchg
push
inc
mov
fsubrl
mov
rorb
or
pop
and
lods
mov
repnz
add
and
dec
jle
enter
aad
mov
jl
flds
xchg
adc
jno
add
insb
test
cmp
mov
pop
jns
loop
push
xchg
add
popa
cmc
sbb
movb
or
mov
xchg
add
or
ret
xchg
fadds
jne
jl
xchg
push
ja
std
inc
in
lret
jle
mov
inc
adc
and
mov
xor
bound
popa
lcall
pushf
in
cmpsl
lret
sbb
test
hlt
add
daa
icebp
sbb
dec
pop
jbe
cmpsl
sbb
add
sub
mov
and
testb
es
fisttpll
mov
xor
adc
mov
lock
shll
std
in
jbe
jecxz
or
mov
dec
jle
mov
movsl
fstpt
dec
jno
cmp
shlb
inc
pop
fisubs
ret
outsl
and
push
mov
loopne
push
mov
js
mov
xchg
imul
and
ret
mov
mov
dec
add
inc
adc
and
and
call
call
jnp
mov
pop
call
pop
outsl
rsqrtps
icebp
out
dec
sub
mov
xor
inc
xchg
out
sub
imul
add
pop
xchg
xchg
add
cmp
out
sbb
ds
mov
xor
xchg
loop
mov
adc
mov
xor
inc
aad
or
pop
or
or
cmp
mov
push
mov
gs
nop
push
pusha
mov
adc
dec
jnp
outsb
mov
repnz
push
mov
inc
mov
fs
inc
insb
cld
mov
inc
push
mov
daa
mov
fmuls
add
mov
aaa
adc
jp
sahf
mov
lcall
pop
test
int3
loopne
jae
sahf
jmp
sub
test
jg
xchg
push
shll
adc
fldt
xchg
fisubs
mov
nop
movb
es
fs
xor
adc
add
inc
stos
out
push
es
sub
out
inc
xchg
lods
xchg
mov
cmp
out
mov
repz
in
or
add
or
sbb
int3
inc
mov
test
int3
mov
or
std
iret
je
push
aam
in
mov
outsl
aaa
xor
data16
mov
mov
loope
xchg
notb
xchg
sub
into
mov
pop
jmp
std
adc
nop
inc
fst
pop
pop
popf
mov
mov
inc
ds
sbb
adc
pop
mov
cld
mov
cs
icebp
and
lods
cmp
jbe
dec
cs
outsb
xor
pop
lea
xor
imul
push
dec
inc
mov
mov
mov
out
dec
movsb
hlt
jge
in
das
jbe
jecxz
arpl
rcrb
das
xchg
and
es
repnz
lret
imul
js
mov
stos
or
jle
loope
popa
cmpsl
add
fsubs
push
leave
pop
out
insl
bnd
xchg
jae
cmc
xor
fcompl
out
test
pop
mov
ss
pop
sub
mov
dec
mov
or
or
push
jns
mov
leave
mov
push
shr
cmp
xorl
leave
or
mov
lahf
call
movsb
jae
push
outsb
aaa
aam
insl
cmp
repz
sbb
xor
in
jno
fwait
xchg
xchg
aam
jnp
mov
dec
in
lods
xchg
dec
push
insb
xor
jecxz
jg
movups
pop
push
dec
push
mov
adc
test
inc
in
push
testb
dec
js
lock
and
nop
test
mull
nop
rcll
fidivrs
out
inc
sbb
shrl
loope
sbb
jg
xor
jg
xchg
push
rclb
dec
jp
repz
mov
loopne
mov
lea
lods
aas
mov
in
rorl
xchg
fstpl
dec
stc
les
es
outsb
sahf
cvtpi2ps
outsl
push
repnz
or
adc
outsl
xor
and
sub
cli
lea
and
sti
repnz
fsubrl
fldt
lcall
dec
mov
and
test
das
dec
xchg
call
popa
stos
fadds
lock
mov
into
jbe
mov
lods
dec
int3
mov
outsb
mulb
adc
push
push
repz
rorl
pushf
inc
iret
cmp
and
pop
fs
or
sub
jecxz
pop
outsl
xchg
xor
inc
pushf
ds
xchg
int3
jae
test
dec
ret
xor
lods
lret
mov
sub
push
cltd
jmp
mov
scas
xchg
cmpsb
leave
les
xchg
and
shr
mov
mov
adc
aam
int
jle
mov
dec
testl
fisttpl
cmp
int
mov
sub
push
push
gs
mov
ds
fcmovb
cmc
pop
and
inc
mov
call
aam
pop
imul
aad
and
mov
shl
dec
dec
and
adc
pusha
inc
inc
xor
dec
sub
fisubrs
mov
cmpsb
adc
stos
jge
nop
rsm
cli
sarb
inc
dec
jns
xchg
outsb
pushf
hlt
cltd
call
outsl
mov
loop
inc
xchg
in
push
mov
int3
addl
in
movsb
ret
data16
pusha
imulb
cli
jns
nop
stos
enter
or
and
ret
pop
sahf
or
add
sub
movl
lods
dec
repnz
aaa
loopne
test
sbb
xor
aaa
pop
dec
and
ror
jle
inc
jmp
stos
js
test
jbe
fadds
sub
lret
stc
test
adc
shll
mov
and
mov
inc
pop
sub
or
fs
xchg
addl
and
les
arpl
xor
or
stos
jbe
fcomps
movsl
test
inc
ljmp
push
loope
fildll
mov
into
or
shr
mov
cli
pushf
mov
es
push
shlb
mov
pop
mov
pop
repz
mov
cmp
fldcw
cmpsb
sbb
ret
inc
addr16
mov
test
sub
xor
xor
int3
pop
jno,pn
js
in
enter
in
out
stos
pop
fld
push
jnp
sbb
ret
mov
cmp
fsincos
sar
adc
stc
dec
mov
xor
mov
or
adc
icebp
mov
adc
pop
jecxz
jg
mov
ret
insl
iret
jle
imul
mov
aas
mov
push
mov
mov
inc
xchg
cmp
in
cmp
cwtl
gs
inc
insl
lea
pop
shll
push
aaa
jge
cmc
add
mov
test
jae
jnp
add
dec
pop
test
repnz
jecxz
sub
or
cmp
cwtl
dec
push
mov
xor
hlt
and
pop
sti
push
pop
shl
sahf
xlat
lcall
cmp
xchg
push
xor
jb
inc
daa
je
cwtl
or
inc
or
pop
stc
mov
mov
and
movsb
dec
push
adc
sub
fadds
sub
jmp
dec
aas
jmp
inc
add
adc
add
nop
cld
add
mov
adc
cmp
fisubl
in
adc
fsubrl
lahf
out
adc
push
and
loope
inc
js
dec
mov
xorl
pop
dec
repnz
enter
jns
xchg
fnstcw
mov
xlat
inc
pop
and
or
mov
lea
insb
sub
and
insl
les
sub
and
faddp
sub
rolb
pop
popa
sti
in
shlb
sub
inc
cli
push
xchg
or
lds
popl
lock
jae
out
pushf
je
out
fs
aam
xchg
xchg
and
icebp
enter
mov
cmp
jbe
filds
out
cmp
mov
jecxz
mov
fs
in
stos
push
add
or
pop
rorb
xor
cmc
pop
sbb
sub
std
sub
add
sbb
xlat
mov
popa
lock
sub
ss
or
cmp
sbb
dec
xchg
sbb
ficompl
xchg
fisubrs
mov
push
fidivrl
fdivrl
lret
sbb
cmp
dec
imul
xor
jb
addr16
iret
add
cs
jbe
popl
sbb
pop
repz
aam
pushf
lods
leave
fsub
push
pop
or
xchg
mov
aas
xchg
xor
cmc
inc
arpl
mov
push
insl
fcmovb
inc
ss
aaa
inc
icebp
mov
mov
mov
aam
or
mov
cmp
daa
cmp
imul
mov
or
lcall
dec
mov
lahf
cmp
out
jb
loop
andb
add
dec
pop
out
and
push
fs
shr
push
cmpl
icebp
sbbb
xor
arpl
test
mov
xchg
ss
mov
hlt
jbe
std
lods
sub
adcl
xchg
loopne
xchg
pxor
scas
sbb
inc
leave
hlt
jbe
add
cltd
push
add
lcall
loop
mov
es
jmp
into
lods
pop
or
ljmp
shl
jmp
out
rorb
das
lcall
push
push
daa
inc
mov
xchg
push
mov
pop
cmpsl
loope
inc
jne
insl
add
rorl
aas
iret
out
jo
pop
pop
cwtl
xchg
sbb
loopne,pt
inc
bound
jo
repz
adc
dec
and
pop
lret
mov
mov
addr16
sbb
jg
clc
test
sub
push
insb
js
mov
push
inc
cmp
mov
clc
mov
in
jmp
enter
push
loop
sub
daa
enter
popa
add
dec
lods
mov
or
into
fiaddl
icebp
cltd
pop
iret
je
adc
pop
jle
xchg
mov
les
sub
cmpl
test
jge
and
mov
dec
sub
push
fwait
mov
fsubl
pop
pop
roll
jge
cmovp
addr16
xor
jno
in
mov
or
mov
xchg
push
bound
mov
out
popf
das
add
cmpsl
dec
repnz
dec
stos
ds
xlat
imul
shrl
lds
jnp
ja
sahf
fucom
mov
flds
pop
mov
dec
dec
cltd
fwait
mul
cli
aas
pop
stos
mov
xor
dec
jge
inc
fldt
mov
jg
cmpsb
je
or
adc
jp
sub
pop
xchg
push
test
stos
mul
lret
adc
rorl
sub
or
cmpsb
int
xor
add
pop
frstor
mov
jg
out
add
inc
clc
fsub
cmc
and
dec
ljmp
adc
push
or
fbstp
dec
jle
dec
addr16
sahf
jne
jns
scas
and
repz
inc
pop
stos
add
sbb
fisttpll
jg
mov
outsl
repnz
mov
loopne
repz
push
mov
or
hlt
lds
adc
movsl
lahf
test
and
push
mov
loop
jg
push
fnsave
push
stc
xrelease
popa
mov
movsl
or
xchg
ss
lret
icebp
ss
push
mov
mov
js
pop
ds
or
push
repz
dec
movsb
aam
jo
lods
setp
dec
lods
lret
mov
imul
stos
mov
lods
leave
movsb
pop
push
sub
loop
sbb
aas
xchg
popf
outsb
xchg
inc
inc
stc
jbe
and
adc
mov
test
sub
push
inc
jbe
lods
ficomps
jecxz
sub
push
xchg
jbe
imul
mov
repz
mov
cmp
test
pop
jne
cmp
insb
out
push
push
lea
adc
mov
jno
jl
popa
push
clc
mov
mov
pop
cld
xchg
sub
xlat
add
sbb
test
mov
mov
js
lea
outsl
push
shrb
cmc
stos
mov
push
je
push
dec
dec
cwtl
adc
or
cld
add
push
xchg
repz
or
pop
scas
jle
mov
popl
or
pop
mov
or
sbb
ljmp
cmp
imul
dec
stos
pop
mov
or
sbb
ljmp
cmp
imul
dec
rcrl
sub
cmp
jmp
sti
ljmp
cmp
dec
stos
jnp
mov
jl
pop
mov
mov
sti
adc
sub
dec
ffree
xor
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
and
shll
mov
jge
je
mov
push
fsts
lods
mov
inc
cltd
push
popa
cmpsb
jns
dec
xchg
sub
cmp
or
sbb
mov
push
fsts
test
add
push
mov
stc
mov
xchg
mulb
mov
push
mov
in
xor
push
sub
cs
mov
sbb
rcr
mov
push
xchg
jb
cld
std
int3
dec
test
gs
shrb
gs
or
rcrb
ss
xor
or
adc
cmp
imul
xchg
cmp
daa
jmp
addr16
jp
fildll
add
sub
testb
sbb
cld
std
stos
pop
fyl2xp1
es
and
mov
fucomi
inc
test
add
jecxz
rcll
sub
test
pop
jbe
mov
mov
jns
mov
cld
outsl
movsb
xchg
sarl
loopne
adc
ss
sub
mov
push
pop
cmpsb
jns
dec
xchg
testb
mov
adc
push
leave
cmpsw
jbe
inc
std
aas
sbb
movzbl
mov
mov
mov
inc
cltd
outsb
mov
add
imul
pop
xchg
gs
rcrl
inc
lods
addr16
fiaddl
fadds
sbb
dec
in
out
sbb
insb
out
testb
sbb
jmp
push
fsts
test
inc
cltd
push
imul
cmp
or
sbb
jmp
push
fsts
test
inc
cltd
push
imul
push
dec
imul
push
sarl
xor
mov
test
iret
xchg
mov
cmp
pop
sbb
rorl
pmaxub
out
out
xchg
inc
imulb
sti
jl
push
push
ficoms
push
dec
insb
xor
and
xchg
into
shr
les
aam
sub
xchg
mov
add
pextrw
and
jge
call
mov
mov
pop
popa
push
pusha
add
ds
sbb
leave
in
rcl
in
mov
js
int
scas
orb
add
int
std
lret
inc
lret
sahf
lock
cltd
in
pop
mov
mov
repz
xor
int3
fistpl
push
xchg
cwtl
push
add
mov
jo
andl
test
jmp
int3
jge
mov
push
cmp
push
xchg
dec
cmp
insl
fnstsw
push
sbb
cwtl
jo
sub
fstp
mov
push
cmp
and
in
mov
lcall
mov
lock
shrl
and
ljmp
aad
or
movsl
pushf
repz
push
xor
fmul
dec
mov
sarl
cmp
stc
mov
hlt
or
inc
call
rcl
sarb
push
pop
xor
add
push
data16
or
lock
mov
js
outsb
sbb
in
pop
in
push
lret
mov
jo
mov
push
adc
inc
mov
or
or
pop
insb
xor
ja
clc
dec
stos
add
into
jmp
cmpsl
xor
jae
fnclex
les
jmp
inc
pop
push
test
xchg
arpl
and
movsl
mov
mov
push
test
clc
adc
push
int3
daa
pop
cmp
mov
mov
add
dec
cmp
add
mov
cmp
cmpl
fcoms
xchg
sbb
ror
cmpb
jl
mov
pushf
mov
outsl
std
xor
jo,pn
out
cmp
sbb
cli
loopne
repnz
push
adc
mov
or
arpl
dec
ljmp
xchg
adcb
les
fiadds
shrb
mov
mov
lahf
xchg
test
mov
mov
cs
pop
xor
dec
fdivs
enter
in
add
inc
or
sub
push
and
scas
sub
push
dec
mov
jecxz
scas
das
cmpsl
test
jae
mov
adc
mov
call
push
sarl
inc
inc
loopne
shl
sub
repnz
imul
data16
fs
out
loopne
test
mov
mov
js
sbb
add
movsb
mov
pusha
lods
scas
jecxz
mov
cli
push
ljmp
bound
adc
rcrl
out
jecxz
call
adc
adc
jb
inc
adc
sbb
out
popa
in
shl
dec
pop
jo
scas
cmp
stos
sub
fld
jno
insb
add
cmp
inc
mov
or
sahf
add
add
insl
add
jp
ret
imul
insb
mov
and
push
shrb
xchg
nop
adc
scas
mov
test
test
shll
int
sub
cli
addb
lahf
or
adc
movsb
test
repz
mov
dec
cltd
out
jg
shll
sbb
nop
xchg
sti
or
mov
dec
mov
stc
jle
aam
in
insb
aas
cld
xor
adc
rcpps
jle
and
pop
and
mov
mov
add
and
test
jno
adc
inc
or
daa
jae
inc
scas
mov
or
ficompl
cld
mov
ljmp
lds
sbbb
test
loop
out
sub
mov
in
push
or
jl
cmc
in
inc
in
lods
jb
inc
dec
mov
xor
sysenter
mov
or
xor
dec
jmp
cltd
outsb
mov
jns
inc
inc
add
fldt
test
in
arpl
add
inc
lret
daa
jb
rcrl
filds
out
and
or
xchg
pop
jcxz
ret
push
sub
dec
popa
lcall
loopne
lcall
in
lds
sub
loope
popl
subb
mov
cli
push
sbb
jp
push
call
xchg
add
aaa
movb
cmp
and
cld
stos
insl
cmpsb
gs
lret
psllw
sub
jle
add
stc
nop
dec
lock
inc
adc
or
addr16
fsubrp
enter
pop
popa
out
pop
mov
and
cld
fcoml
fisttps
rorl
xchg
into
inc
jnp
repz
inc
mov
shll
lods
shr
mov
adc
and
shll
or
inc
cmpsl
outsb
out
and
out
sub
sub
dec
imul
xor
lea
jno
xchg
jae
int3
dec
cmpsb
les
sbb
jmp
push
and
insl
dec
aam
testb
ret
lahf
dec
mov
push
inc
out
push
or
jbe
adc
lods
push
mov
ds
hlt
enter
das
jbe
lock
mov
out
mov
and
and
sti
mov
lret
scas
add
inc
mov
dec
inc
or
jecxz
insl
pop
adc
jb
sub
scas
mov
inc
fisttpl
cwtl
adc
insl
sbb
xor
xchg
mov
outsb
jmp
in
adc
adc
data16
pop
xor
popa
nop
flds
push
cmp
hlt
lcall
ds
test
popf
jg
push
inc
jae
call
mov
or
and
jns
mov
xor
sbb
dec
mov
xorl
test
adcb
mov
mov
xor
popa
icebp
fidivs
fimull
and
adc
ret
push
push
jne
mov
ret
xchg
arpl
fistpl
dec
mov
push
pop
daa
outsl
fisubrl
pop
call
cmp
imul
mov
rorb
jmp
cmpsl
cmpl
pop
sarb
add
xchg
insl
mov
arpl
mov
mov
hlt
jae
jp
out
add
push
leave
ffreep
dec
add
push
std
es
adc
pusha
push
fsubrs
cltd
divl
push
cmp
cli
mov
andb
jmp
addr16
mov
mov
inc
adc
dec
inc
inc
roll
loop
in
xchg
out
mov
sub
test
bnd
mov
mov
sbbl
repz
jge,pt
xlat
cmpsb
aad
dec
push
cmpsb
pop
cs
call
pop
adc
xchg
jmp
dec
xor
outsl
dec
add
mov
ss
icebp
out
xchg
mov
ret
aad
cltd
loop
inc
aad
sahf
ja
mov
xchg
popa
call
xor
push
sbb
out
outsb
outsl
shlb
xchg
sub
sub
pop
orb
push
push
fwait
call
sub
pushf
xchg
and
rcrl
or
stc
fcomps
mov
add
jnp
or
aaa
xor
jle
test
xor
loop
xchg
jmp
scas
dec
xor
hlt
nop
inc
repz
jo
idivb
cs
shrl
sub
gs
push
gs
dec
nop
pop
pushf
loope
jbe
cmp
lcall
imull
stos
sub
ljmp
js
jl
repnz
int
lahf
and
jle
int
ss
jg
daa
and
shrl
jo
mov
inc
repnz
mov
or
int
das
or
dec
popf
and
push
ret
out
jmp
cmpsb
lds
mov
adc
ss
stos
mov
test
xor
sbb
xor
dec
icebp
repnz
shl
lods
cmp
dec
mov
dec
clc
dec
fisubs
jb
xchg
mov
mov
sbb
push
mov
loope
xchg
aaa
cli
pop
repnz
inc
xchg
add
mov
lahf
adc
movsb
ljmp
xorl
push
mov
xchg
loop
inc
sahf
xchg
movsb
movsb
sti
sbb
push
scas
shlb
mov
dec
jp
mov
movsl
test
pop
scas
adc
fwait
fwait
push
pop
jle
sbb
and
pop
mov
mov
enter
xchg
mov
xlat
pop
movsb
adc
xor
add
dec
cmp
out
sbbl
dec
xchg
and
and
pop
cmpsl
mov
das
stos
vmwrite
xchg
xchg
cmp
imul
sub
lock
push
inc
out
cmp
and
inc
xchg
popf
test
sub
jle
mov
fistpl
mov
adc
daa
popa
cmp
ljmp
and
sarb
sub
mov
in
rorb
sub
mov
jmp
inc
rcll
in
out
adc
dec
jg
push
or
add
mov
aad
daa
jge
xchg
mov
xor
jb
je
xor
push
lods
inc
testb
daa
push
jno
dec
jo
jnp
imul
push
subb
mov
mov
pop
mov
cmp
adc
pushf
movsl
jno
ret
xor
idivl
dec
rol
fidivrs
inc
xchg
sbb
cmp
jmp
jb
insb
mov
int
mov
shr
and
sub
mov
pop
faddl
out
mov
repnz
aas
pop
lds
sbb
sbb
jp
lock
cwtl
sbb
es
leave
sub
dec
rcrl
insl
cmpsb
imul
cwtl
sbb
test
or
and
aas
push
xlat
popa
rol
cmp
pop
dec
xor
mov
cmpsb
mov
pop
fstpl
pop
or
sahf
adcb
and
and
cmp
mov
scas
popf
insb
add
cmc
push
inc
lcall
xor
sub
mov
test
dec
cltd
movaps
cmp
in
xor
loop
out
stos
xchg
aaa
inc
aad
pop
push
jl
or
pushf
into
out
pop
pop
es
lret
test
out
adc
cmp
insl
jp
insl
bound
xchg
lret
fmuls
pop
sbb
sub
insb
insl
test
jae
push
ret
pop
xchg
gs
cltd
mov
jmp
xlat
push
int3
ret
fdivp
pop
jns
sete
inc
das
out
jl
push
outsb
sub
and
or
cmpl
push
lods
scas
and
and
icebp
and
lods
out
push
mov
stos
loop
movsl
pop
mov
sti
movsl
xor
cmp
cli
out
adc
cli
aas
ss
sti
testl
int3
jmp
lret
sbb
adc
pop
movsb
push
jb
mov
in
cmpsb
mov
adc
add
lahf
fsubrl
into
repnz
sbb
push
fisttpll
jnp
push
popa
lods
das
mov
push
outsl
push
sahf
js
popf
xchg
loop
ja
push
jo
or
out
mov
add
add
dec
lret
test
pop
jecxz
xchg
ficoms
cmp
dec
arpl
or
dec
cli
fnstsw
subl
mov
out
test
jle
pop
aam
sub
inc
add
cmp
xchg
xchg
les
push
inc
rolb
pop
subl
mov
je
in
cmp
cmc
xor
imull
das
pop
leave
push
jnp
mov
push
inc
insl
daa
leave
adcb
cmpsb
scas
adc
mov
dec
je
jo
in
jl
cmp
loope
and
pop
dec
mov
stos
stos
stos
xor
scas
add
imul
sub
mov
pop
pop
loop
ds
lods
mov
pop
fnstenv
or
dec
mov
movsl
loope
ja
test
outsl
jl
daa
pop
push
and
pop
fnstenv
mov
lea
pop
out
cmp
test
xchg
pusha
clc
mov
pop
xor
inc
sbb
dec
mov
sub
and
pusha
adcb
mov
xchg
popa
cli
jb
jge
out
ret
icebp
jo
shl
jmp
insb
xchg
jl
js
test
cld
pushf
and
adc
addb
cmp
xchg
add
fsubrs
sti
loop
cmp
xor
jno
sub
out
jb
jmp
fmuls
push
fistl
sbb
or
enter
je
aam
out
xlat
pop
mov
fidivl
stos
add
dec
pop
xchg
cmp
mov
sbb
xchg
cltd
add
cmpb
in
sbb
mov
aaa
icebp
mov
iret
dec
jmp
pushf
cld
jno
cld
xchg
mov
inc
and
divl
or
sti
leave
test
sub
add
out
imul
sub
push
ds
mov
cmp
int3
mov
test
les
dec
test
setb
adc
bound
leave
jge
inc
test
mov
sub
aaa
sarb
dec
push
pop
or
popa
dec
jns
xchg
mov
incb
sbb
lcall
loope
mov
sub
push
dec
xor
pop
cmp
out
inc
std
jp
sub
andl
xor
fstps
arpl
sbb
mov
nop
leave
xor
loop
movsl
lods
xlat
rcll
sbb
or
or
xorb
pop
out
mov
cmc
and
mov
sub
adc
in
mov
ret
pop
xor
cld
out
fstl
or
or
and
jnp
popa
mov
ret
or
cld
ss
popa
dec
adc
rolb
mov
cs
adc
dec
lods
outsb
push
loop
leave
scas
and
rclb
sahf
pop
lods
lods
push
decb
cwtl
mov
das
mov
inc
rcrl
push
push
in
arpl
jns
lods
enter
mov
jae
nop
xor
in
pop
jmp
jno
out
mov
add
dec
adc
int
scas
mov
xorb
xor
adc
inc
push
add
stos
mov
into
lret
filds
repz
aaa
mov
xchg
aam
adc
pop
mov
fsubs
mov
jg
cmp
xchg
loope
js
mov
dec
or
mov
movsb
in
sub
shrl
out
mov
mov
imul
shlb
jmp
pop
push
push
mov
repnz
les
js
dec
fs
pushf
push
mov
in
std
rcr
mul
shrl
mov
push
pushf
pop
data16
pop
jo
jnp
lods
lcall
lods
mov
inc
cwtl
ljmp
mov
icebp
mov
test
jne
sbb
cmp
ss
cmpsl
mov
aam
lock
pop
test
mov
imul
call
push
inc
or
jecxz
mov
or
clc
and
and
push
cmp
push
adc
xchg
dec
dec
jge
pop
mov
adc
mov
pop
insb
sub
lea
popa
xor
jno
outsb
adcb
int
out
negl
adc
sub
xlat
bound
inc
xor
jae
nop
fdivrs
in
adc
data16
imul
das
sbb
xchg
andl
pop
dec
jge
mov
cmpsl
sbb
repz
lcall
cmpsb
dec
cld
pop
inc
fistpll
pop
orb
inc
inc
xchg
out
into
jg
leave
sbb
lret
adc
sbb
sbbl
ja
popa
int
scas
push
lds
dec
testb
xor
push
ror
je
cmp
test
or
shlb
xor
jge
mov
hlt
enter
sbb
sub
and
loop
mov
stc
mov
subb
xchg
call
jge
rcrl
stos
or
jg
int3
sub
std
cmp
sub
sahf
or
jns
sub
xchg
push
repz
pushf
push
mov
stos
xchg
xchg
shl
jo
jg
xor
jo
inc
cli
je
mov
outsb
loopne
loopne
add
inc
jne
stc
add
lods
jl
into
jecxz
fs
cld
iret
fsubs
pop
out
cmp
mov
pop
push
pushf
dec
sti
jno
jge
cs
sbb
add
cmp
inc
sar
dec
dec
ds
hlt
jp
push
jbe
hlt
fchs
mov
xor
imul
mov
fwait
push
dec
xchg
sub
in
jl
pop
push
sbb
mov
lgs
inc
pop
scas
pop
sarb
adc
std
scas
dec
mov
jle
popf
mov
jge
in
jbe
out
cmp
imul
loop
cmpsb
fadds
ret
sti
call
xchg
push
sbb
jb
cmp
add
xchg
ret
daa
jp
fstps
push
sub
repz
push
add
shrl
cmp
xchg
shrl
xchg
nop
and
les
mov
pop
fisubs
pop
add
ret
xlat
cmp
fmuls
xchg
popa
mov
jge
pop
pop
jbe
insb
jmp
insb
scas
pop
cmp
mov
fldcw
push
negb
pop
mov
fmull
xchg
rcl
lahf
lcall
mov
fstpl
scas
fwait
mov
lahf
mov
scas
int3
inc
lahf
inc
and
daa
aam
sub
xlat
ja
mov
or
add
xchg
add
hlt
rolb
add
and
js
cmp
cmp
pop
imul
cld
test
stc
sub
add
push
cltd
fs
testl
cmp
or
sbb
lahf
and
lods
stc
std
les
mov
pop
or
mov
addb
in
into
es
sub
push
xchg
sub
adc
adc
lods
mov
cmpsb
xchg
movsl
or
shll
int3
cltd
dec
push
aad
push
loopne
xchg
lock
inc
scas
pop
adc
loopne
pop
mov
cmpsl
incb
push
lock
enter
push
loopne
mov
das
xchg
outsl
xor
cmc
add
fsubrs
inc
jns
lods
sahf
or
dec
outsl
cmp
jne
fisubs
in
inc
and
push
cmpsb
cltd
fstpt
dec
into
cld
push
adc
dec
inc
testl
mov
adc
push
aas
popf
xor
aas
pusha
imul
jl
xchg
mov
mov
icebp
loopne
mov
lods
outsb
mov
in
iret
jae
les
sub
ljmp
inc
pop
sub
lea
push
popf
leave
fnstsw
jo
out
dec
mov
xchg
pop
sbb
paddw
div
push
loop
out
adc
out
mov
das
sub
cmp
icebp
fidivrl
repz
jb
pop
push
fdivl
lea
mov
sbb
mov
cmp
xchg
mov
jmp
push
cmp
push
mov
cmp
pop
push
adc
jbe
repz
xchg
sahf
sahf
inc
loopne
in
and
push
cmpsl
cli
pop
aad
test
and
add
cmp
add
arpl
aam
hlt
fcoms
icebp
inc
mov
in
addl
or
das
sub
mov
sub
rol
lcall
xchg
mov
test
and
xchg
pop
scas
lock
xchg
pushf
mov
scas
push
repz
pop
ret
ret
jl
push
sti
cli
adc
movsl
nop
sub
test
arpl
clc
adc
inc
cmp
mov
data16
pop
cmp
out
cmpsl
movb
inc
xchg
cli
mov
out
push
mov
cmp
popf
inc
icebp
jns
inc
mov
fidivrl
popf
pop
ja
call
pop
add
js
mov
mov
dec
adc
push
xchg
inc
lods
mov
cmp
xor
in
push
dec
adcb
xchg
dec
push
fmull
mov
call
push
and
xchg
xchg
jge
popa
inc
inc
xchg
insb
into
cwtl
pop
push
xchg
sbb
cmc
es
test
in
fnsave
mov
sbb
adc
jo
sbb
mov
repnz
pop
out
fbstp
pop
sti
jne
xchg
sub
lret
dec
mov
icebp
dec
shlb
roll
jle
adc
xchg
jp
adc
outsb
mov
jmp
popf
mov
lds
arpl
ljmp
std
std
mov
aam
test
cmpsl
mov
imul
adc
mov
cltd
mov
gs
mov
dec
jnp
popf
xchg
mov
push
pop
inc
push
inc
lea
in
and
nop
add
cld
imul
out
inc
enter
mov
gs
mov
clc
aad
jbe
inc
insl
roll
imul
sub
jne
and
jbe
aad
outsb
loope
fists
std
and
xor
push
and
les
cwtl
fwait
clc
leave
cmc
ljmp
xchg
inc
add
xchg
push
in
das
cmpsb
fisttpl
enter
jl
mov
push
loopne
sti
rclb
push
or
mov
pop
aam
push
mov
pop
int3
push
dec
jne
icebp
ss
scas
insb
mov
mov
aas
push
ret
push
es
xlat
mov
scas
push
xor
pop
mov
or
lock
push
dec
xor
arpl
sub
cmp
or
sbb
jmp
push
fsts
test
inc
cltd
push
imul
cmp
or
sbb
jmp
push
fsts
test
inc
cltd
push
imul
cmp
in
cmpsb
stc
rolb
push
test
inc
test
mov
xchg
sub
sub
or
cltd
jmp
push
fldenv
out
xor
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
call
pop
dec
dec
subb
jp
insb
push
clc
call
into
mov
sahf
mov
pop
pop
dec
dec
cmp
sub
sbb
or
clc
call
into
mov
sahf
mov
pop
pop
dec
dec
cmp
sub
sbb
or
clc
shr
mov
in
ror
sti
out
or
sbb
sbb
jecxz
cmp
jns
jmp
xlat
ficomps
jbe
adc
in
sub
daa
rcll
inc
pop
mov
jle
and
std
imul
test
mov
clc
ds
push
push
mov
int
mov
pop
movsb
pop
cmp
add
clc
testl
sti
fldenv
and
pop
in
sti
decb
jecxz
xchg
or
and
sbb
or
mov
enter
shr
lahf
ja
cmp
xchg
rcrb
cmp
cmc
loopne
loopne
into
mov
add
ljmp
inc
test
cltd
mov
outsb
pop
pop
dec
dec
cmp
sub
sbb
or
clc
call
into
mov
sahf
mov
or
sub
xor
push
or
dec
outsl
pop
jnp
jle
xchg
pop
xchg
shl
xlat
cmc
sbb
jmp
aas
sub
pop
add
pop
pop
dec
add
jno
push
stos
mov
lods
mov
enter
push
cs
sbb
sub
jns
sub
sbb
or
clc
call
into
mov
sahf
mov
pop
pop
dec
dec
cmp
sub
sbb
or
clc
call
into
mov
sahf
mov
aad
sbb
push
cld
jo
out
sub
xchg
mov
outsl
sub
pop
mov
fwait
into
mov
orl
add
jbe
xor
cld
cmp
dec
aaa
fistpl
stc
call
mov
shlb
cmpsb
movb
mov
jg
lret
mov
pop
int
aad
jmp
fstpt
mov
xor
rcll
pop
call
add
push
clc
popf
hlt
into
cmp
js
cmp
idivl
fmull
adc
lods
cmp
aas
mov
pop
sbb
jge
dec
cwtl
pop
jg
mov
dec
loop
pop
mov
lods
loope
adc
ret
mov
mov
enter
and
inc
pop
mov
add
mov
add
push
mov
jle
jp
dec
cmc
xor
nop
sub
in
lods
lock
mov
fsubrs
neg
cwtl
and
cltd
pop
jmp
sbb
cmp
sbb
jg
jb
and
xor
push
push
jg
push
pop
imul
int3
out
aad
clc
jns
lea
mov
jmp
pop
test
scas
mov
nop
movsb
lods
movsl
in
add
push
sub
test
pop
loop
pop
int
mov
pop
sarl
repz
pushf
jne
sbb
jecxz
mov
les
mov
sbb
notl
push
mov
push
dec
push
jne
jae
mov
mov
mov
cmpsl
movsb
sbb
int3
adc
enter
mov
or
dec
mov
push
in
jo
fsubl
or
dec
add
pop
aam
inc
pushf
xor
push
bound
mov
notb
mov
xor
cmp
xchg
outsb
shll
lods
stos
or
loope
addl
push
fdivs
adc
push
mov
inc
add
outsl
ljmp
dec
sar
push
and
or
dec
rcrl
adc
mov
cli
mov
add
cmc
cmp
and
xchg
jne
mull
or
push
sbb
or
push
and
stos
loop
rorl
add
mov
subl
in
fiadds
xor
fsubrl
roll
pushf
mov
fiadds
cld
lret
insl
cmp
mov
add
fadds
repz
or
lahf
mov
or
jbe
cwtl
cmpsl
jg
test
pop
icebp
jno
out
cmpsl
aam
out
jmp
adc
mov
jo
and
xchg
movsl
gs
dec
mov
ret
aas
push
cmc
fisttpl
fcomps
incb
xor
mov
jecxz
push
and
jo
mov
or
lods
shll
mov
mov
outsb
adc
dec
int3
jo
dec
xchg
ret
cli
push
dec
jmp
or
sub
mov
mov
pusha
pop
or
int3
or
outsl
int3
sub
sti
pop
fwait
scas
jo
mov
xlat
testb
daa
leave
sbb
lret
loopne
repz
xchg
push
ds
fsubr
xor
xchg
inc
inc
int3
sbb
xor
fisubl
or
out
cmp
adc
mov
inc
push
icebp
insl
pop
daa
cmp
push
jmp
mov
mov
mov
jmp
int
call
adc
js
daa
adc
and
loop
mov
mov
push
cwtl
test
orb
rcl
rorl
cmp
iret
jne
pop
or
push
jno
or
shl
or
sahf
xchg
pop
dec
ret
xchg
lahf
xorb
pop
xchg
scas
adc
mov
pop
sbb
jmp
cmp
ret
popf
mov
fnstsw
push
mov
inc
dec
mov
adc
lods
and
jmp
ss
add
xor
mov
movsb
imul
add
lret
push
push
fstpl
jbe
jl
in
sbb
out
push
mov
ret
sarl
std
inc
mov
mov
popf
fwait
loop
jb
nop
xchg
into
cs
testb
and
mov
shll
lods
or
aam
xchg
out
mov
clc
jmp
out
not
aaa
scas
or
shr
inc
xor
jb
sbb
mov
pushf
lahf
addb
je
inc
rcrb
mov
xor
addl
sub
jp
mov
pop
out
pop
mov
jle
mov
lds
ret
xchg
sub
xor
sbb
cmp
jno
in
xchg
loopne
mov
xchg
test
jbe
iret
fisubrl
adc
add
popa
icebp
or
int3
adc
in
mov
inc
pop
mov
mov
jbe
jb
fstpt
xchg
inc
repz
xor
inc
f2xm1
pushf
iret
push
popa
jecxz
or
xlat
jmp
cltd
je
test
jmp
push
mov
lret
call
jno
shlb
fsubrl
fsubr
sahf
push
push
ljmp
out
loop
mov
mov
and
dec
cmpsb
pushf
out
lods
imul
xchg
rclb
loop
les
add
idiv
cmp
sbb
jecxz
mov
push
dec
pusha
fildl
hlt
into
imul
push
ljmp
mov
push
jle
js
mov
cwtl
pop
pusha
xchg
std
sbb
lds
adc
cmpsb
cmp
mov
cltd
inc
push
lahf
shlb
sti
stc
cmp
cmp
mov
subl
loop
jmp
in
testb
jle
stos
movsb
loope
in
mov
inc
loope
and
or
les
lods
mov
dec
ljmp
test
sub
jmp
popa
leave
movsb
insb
icebp
xchg
xchg
mov
movsb
ret
push
push
and
push
pop
xor
jae
pushl
sub
xor
dec
or
xor
fstl
loop
icebp
push
int3
nop
ds
popf
inc
cmp
fxtract
lock
xchg
sub
fldcw
push
sub
std
xchg
test
lds
notb
out
pop
pop
sub
sub
lds
inc
or
mov
push
mov
es
sti
jmp
xchg
mov
mov
in
jae
jnp
imul
sub
xchg
pop
out
mov
mov
xchg
cmp
lret
xchg
push
jne
sub
sub
ds
push
inc
xchg
pop
stc
leave
pop
stos
int
mov
push
pop
jl
pop
cmc
pop
mov
dec
xchg
mov
repnz
sub
dec
sub
ret
and
mov
sub
nop
cmpsb
xchg
dec
imul
mov
mov
stos
xchg
xor
dec
add
mov
gs
hlt
adc
inc
jle
push
sub
lock
jge
insl
ss
inc
cmp
popa
push
or
add
stos
popa
out
push
mov
shl
sub
fwait
xchg
xchg
jne
and
and
das
aad
cld
test
push
aaa
and
roll
adcl
sbb
ret
sub
push
call
cmpsb
in
mov
sub
fstpl
hlt
and
xor
mov
add
jmp
add
inc
stos
mov
sbb
ret
fcomip
jmp
sub
and
ja
xchg
fmull
cmovno
test
sbb
lahf
mov
idivb
int3
sub
lods
in
pop
popa
rolb
cli
or
jb
fmul
addl
test
aad
push
add
nop
aas
dec
adcl
cmp
aas
nop
cmp
dec
insl
sbb
test
lcall
loopne
test
xchg
icebp
cwtl
sub
mov
and
dec
test
sahf
fisttps
pop
jne
fs
shlb
xchg
mov
and
xor
les
mov
aad
mov
mov
ret
push
mov
sbb
das
inc
sbb
mov
fwait
xchg
push
test
into
mov
fidivrl
push
jns
stos
loopne
pop
addr16
cmp
ljmp
sub
xchg
mov
jae
cmp
sub
je
fwait
loope
xor
dec
orb
ds
sbb
mov
dec
imull
sbb
testl
test
or
or
mov
test
inc
in
cmc
outsl
mov
insb
jmp
xchg
jo
das
xor
jmp
cmp
out
jne
das
inc
addl
mov
lcall
push
pop
inc
ficoms
mov
pop
out
xchg
adc
pop
sbb
repnz
popa
lret
std
dec
inc
std
jmp
dec
dec
push
xchg
push
movsb
mov
or
adc
aad
dec
jns
rolb
push
popa
repz
loopne
out
fldenv
dec
sbb
sub
inc
addr16
fistpll
in
fimuls
sub
lahf
insb
dec
fsubrs
lahf
or
jno
inc
adc
xchg
mov
ds
jle
dec
cmp
xchg
insl
decb
shlb
or
mov
fst
mov
inc
adc
sbb
add
mov
cld
mov
pop
je
scas
sub
mov
subb
and
dec
leave
xor
mov
lods
out
cmpsb
sbb
xorb
cmp
jnp
test
je
push
or
xchg
or
out
push
scas
xchg
xchg
rcr
mov
jo
add
xor
arpl
mov
rorb
dec
or
leave
mov
or
cli
adc
jmp
divl
push
push
lea
sub
cmp
add
aam
and
shll
sub
xor
imul
jp
paddd
inc
jg
push
mov
xor
cmc
and
xor
lret
fimuls
int
or
mov
jp
ret
stc
cwtl
mov
fistpll
rclb
pop
push
push
outsb
cwtl
jecxz
shrl
and
adc
mov
leave
popa
fs
push
xor
sub
inc
cmp
add
or
xchg
inc
push
inc
dec
push
pop
push
or
add
mov
xor
mov
jbe
dec
sbb
jnp,pt
adc
mov
mov
stos
xchg
sub
sbb
cli
adc
gs
js
jb
mov
jge
aas
and
jo
ss
int
mov
jae
dec
add
je
jbe
stc
or
mulb
pop
jne
mov
shlb
pop
xchg
dec
cmc
repz
inc
and
add
mov
jae
jmp
xlat
and
or
xchg
je
jae
xor
jb
dec
imull
xchg
jmp
pop
jmp
fwait
inc
ror
sub
xor
xchg
lock
mov
mov
xchg
sbb
jae
mov
xchg
ja
xor
dec
insl
mov
or
jbe
je
sahf
dec
mov
jle
sbb
dec
xor
jbe
or
and
mov
test
cltd
mov
insb
adc
cli
into
jecxz
orb
mov
pop
mov
push
jle
enter
jb
mov
int
cmpsb
sbb
push
adc
roll
mov
test
repnz
pop
add
call
movlps
mov
adc
in
sub
rcl
jge
push
mov
or
insb
andb
mov
mov
shrl
or
fildll
push
insl
mov
jne
sub
or
int
mov
jnp
bswap
adc
jbe
idiv
aad
into
dec
mov
and
push
or
fwait
insl
loopne
sub
xor
mov
testb
subl
jne
jno
leave
fnstsw
cmpsb
cmp
or
mov
inc
int
push
pusha
and
jge
add
push
fnsave
jge
sub
mov
mov
mov
xchg
movb
in
mov
in
xor
lea
jno
push
jns
sub
jno
pop
es
sbbl
inc
call
push
cmc
testl
xor
std
xlat
mov
fwait
shll
jle
add
mov
pop
sub
pop
jno
enter
and
sarl
js
dec
xor
and
sbb
stos
fimull
sub
sub
inc
les
scas
mov
pop
loope
lds
xchg
ds
test
std
mov
mov
arpl
lea
sti
mov
mov
adc
imul
fistpl
sub
sub
sub
cli
cwtl
les
sbb
aam
test
xchg
sahf
and
pop
add
mov
insl
mov
in
pop
jb
adc
cmp
jb
mov
sub
xlat
es
sbbb
add
push
xchg
jg
data16
xlat
push
hlt
and
or
sbb
or
loop
aaa
push
and
xor
mov
push
icebp
sbb
fwait
mov
popa
stos
sub
dec
daa
mov
test
pop
mov
push
push
je
and
cs
dec
lds
out
dec
enter
cmpb
in
pop
or
std
sub
fbstp
lea
out
cmp
ret
daa
dec
scas
dec
std
fcoml
cld
xchg
ret
adc
mov
shrb
sbb
xor
popa
xchg
int3
adc
insl
dec
ljmp
aaa
out
das
or
lret
in
and
jmp
lcall
subb
sub
xlat
cmovl
es
test
mov
idivl
pop
jno
aad
lods
out
mov
je
repz
add
jmp
sbb
faddp
jae
popa
mov
xor
mov
jecxz
stos
out
sbb
das
xchg
jecxz
daa
aad
out
and
loop
mov
jne
inc
imul
sbb
push
adc
mov
lret
jno
outsb
mov
or
pop
push
test
outsb
sbb
xor
lcall
sbb
push
add
or
test
adc
mov
js
popa
movsb
repz
nop
setno
or
gs
dec
sbb
fst
mov
fcompl
stos
sbb
arpl
popf
sub
das
cli
aam
push
pop
push
pop
dec
js
std
nop
leave
push
jl
popf
repz
sub
xor
jle
out
mov
add
repnz
insb
or
rcll
xchg
xor
punpckhdq
mov
sahf
cld
and
loop
scas
xor
into
adcb
add
mov
sarb
sbb
loope
popa
imul
dec
jb
xor
adc
movsb
or
popl
mov
in
xchg
add
xchg
out
sbb
add
in
lea
add
gs
add
pop
cmp
das
mov
pop
xchg
and
mov
mov
xchg
inc
pop
xorl
and
gs
xchg
and
inc
dec
push
scas
inc
enter
pop
ret
adc
in
push
mov
rorl
sarl
mov
inc
fbld
pop
dec
movsb
lock
fldcw
add
xchg
fstpl
ljmp
stc
dec
xchg
insb
aam
mov
out
push
pop
fistpll
cmp
mov
repz
jecxz
pop
aas
and
movsl
popf
stos
vcvttps2dq
aam
mov
add
dec
rolb
lcall
addr16
out
sbb
fcmovnbe
in
cltd
and
sti
js
xchg
jns
shll
ljmp
movsl
mov
lods
pop
pop
test
lds
pop
mov
xsha256
cmpsb
adc
orl
in
repnz
cltd
and
cmp
xor
xchg
bswap
inc
mov
mov
xchg
stc
dec
and
mov
mov
cld
cs
pushf
cmp
mov
lods
add
mov
out
adcb
rcrb
jbe
nop
pop
imul
add
test
xchg
int
mov
mov
rcr
jb
cmp
mov
pop
cmpsb
mov
xchg
mov
xor
adc
push
cltd
stc
jno
push
repz
stc
enter
pop
lds
dec
xchg
lret
push
mov
aas
push
iret
addr16
adc
sbb
fsubr
fistpll
pop
test
stos
sbbl
cwtl
jns
subb
pop
mov
and
push
push
inc
push
fwait
rclb
push
mov
pushl
push
sub
jg
nop
or
cli
xor
cmp
in
ja
imul
or
mov
pop
pop
cmp
push
add
add
lret
fsubrs
inc
sarl
dec
inc
les
in
stos
lahf
sub
xchg
aas
popa
ret
loope
cmp
shrb
xchg
xorl
cmpsb
into
js
push
cmp
dec
xlat
mov
repnz
enter
insl
ret
jecxz
nop
mov
sahf
sub
es
push
add
shrl
fcompl
lock
pop
cltd
inc
dec
cmp
mov
and
in
sub
stc
cmp
add
das
mov
ret
in
test
into
sub
cmpsb
inc
cmp
dec
cmp
adc
aaa
repz
adc
inc
sbb
scas
lcall
lods
aam
test
subb
faddp
or
loopne
loope
repnz
or
pushl
int
addr16
or
or
es
xchg
dec
mov
int3
xchg
fnstsw
and
adc
mov
sub
jnp
xor
jp
jg
outsl
fwait
hlt
sub
inc
int
push
or
iret
mov
mov
cmp
cltd
rcrb
pop
bound
loope
pop
xor
test
pusha
push
dec
int3
xor
mov
or
xchg
pop
jno
leave
fcoml
push
mov
xor
jns
fmull
inc
popa
enter
sbb
jns
adc
fimull
jge
inc
leave
leave
mov
and
ds
cld
int3
lea
in
pop
inc
sub
xor
cmpsl
or
add
stos
dec
mov
inc
ja
ja
push
jae
loopne
lahf
push
lods
mov
repz
xchg
cmp
dec
dec
xchg
push
fstps
lahf
add
and
test
add
jbe
pushf
inc
sub
jns
or
cmp
out
das
jnp
add
cltd
arpl
inc
add
xor
mul
adc
stc
pop
in
rcr
dec
shll
cld
pop
mov
mov
pop
mov
movl
jne
pop
mov
cmc
scas
scas
pop
dec
and
dec
cmp
insb
lret
jg
mov
mov
out
stos
scas
in
pcmpgtd
cmpsb
xor
jno
xor
shl
mov
cmp
sti
hlt
sub
call
sub
lea
loope
cmp
mov
int
jecxz
add
clc
testl
das
mov
aad
push
pop
rcl
inc
aaa
sahf
pop
pop
inc
ficompl
and
and
mov
jo
cltd
sbb
jmp
pop
repnz
loop
mov
cwtl
lcall
xor
daa
mov
cld
sub
imul
xor
daa
inc
xchg
aam
movsb
adc
mov
jb
inc
and
popf
xchg
adc
sti
sub
leave
adc
std
mov
loop
aad
mov
sub
lods
aam
pop
test
cmp
pusha
lods
sub
mov
mov
mov
xchg
xchg
popa
std
xor
notl
mov
jp
mov
xchg
push
aad
ss
mov
ljmp
mov
adc
sbb
int
nop
pop
xchg
js
dec
push
lcall
mov
mov
mov
pop
push
inc
das
mov
or
popa
jg
sub
push
or
mov
sub
int
mov
jle
fs
testb
add
add
loope
sbbl
pop
sub
cmp
mov
out
pop
dec
stos
mov
cmp
aam
orb
sbb
jbe
push
adc
jnp
and
loope
mov
xchg
mov
mov
dec
adc
js
lret
jae
or
mov
leave
inc
nop
or
push
mov
aas
in
sbb
pop
je
in
stc
test
test
int
adc
in
mov
aaa
add
bound
dec
mov
pushf
adc
popf
add
sahf
rclb
mov
and
jl
aad
xchg
lods
dec
int
ds
lea
fisttps
and
sbb
add
loop
mov
fisttpl
xor
popf
pop
pop
dec
jmp
xchg
imul
xchg
adc
xchg
cmp
add
scas
jecxz
leave
cs
and
addr16
push
push
xchg
jne
cwtl
xchg
xchg
std
push
sbb
insl
sub
or
xlat
adcb
push
sbb
pushf
xchg
push
inc
cmp
pop
mov
movsb
mov
add
push
or
inc
lcall
cwtl
les
into
sbb
out
add
test
fstl
mov
ljmp
outsb
mov
dec
cmp
sub
sbb
or
clc
call
into
mov
sahf
mov
pop
pop
dec
dec
cmp
sub
sbb
or
clc
call
into
mov
sahf
mov
pop
pop
dec
dec
cmp
sub
sbb
or
clc
call
into
mov
sahf
mov
pop
pop
dec
dec
cmp
sub
clc
add
inc
jb
enter
and
popa
ja
add
adc
and
xor
mov
sbb
or
test
mov
out
mul
hlt
add
adc
and
xor
inc
push
jbe
inc
je
test
xchg
add
aam
in
hlt
add
adc
and
xor
inc
jg
outsb
fs
je
test
mov
repz
les
lcall
jb
popf
lea
mov
sub
or
lock
ja
mov
ljmp
mov
jns
adc
xchg
dec
xchg
cmp
mov
push
fstps
and
jb
xor
jbe
xor
mov
movsb
cmp
imulb
add
adc
dec
push
xor
arpl
mov
push
je
or
adc
data16
mov
or
sarl
lret
negb
push
xor
sub
mov
ret
leave
xchg
xchg
mov
jnp
cmc
sub
sub
out
mov
xchg
jmp
cmpsl
mov
xchg
mov
andl
adc
and
xor
inc
push
jbe
pop
je
test
mov
aam
in
hlt
mov
inc
pusha
ss
pop
pop
pop
inc
xor
sbb
sub
test
icebp
into
movsb
ror
stc
lds
mov
popa
pop
jno
inc
jbe
adc
inc
sbb
es
ffreep
xlat
cmpsb
repnz
lds
mov
addr16
dec
addr16
arpl
or
inc
je
test
mov
out
mul
hlt
add
adc
and
xor
inc
push
jbe
inc
je
test
mov
out
mul
hlt
add
xor
mov
cli
cmpl
or
lcall
ljmp
jno
loopne
cmpsl
or
aam
or
jae
push
mov
out
mov
sbb
mov
jmp
mov
pop
stos
fs
cmpsb
sbb
cltd
xor
pop
cltd
es
test
add
fwait
or
mov
add
jne
jbe
cmp
jns
and
dec
cmp
xchg
cmp
inc
lock
sahf
mov
and
movsl
ror
jae
mov
test
inc
push
add
push
popa
sbb
in
mov
mov
bound
mov
in
or
int3
jmp
rorl
stos
test
sbb
add
or
jmp
call
jno
cmp
xor
dec
lods
mulb
lret
cmp
fidivrl
out
cwtl
fsubl
dec
mov
push
mov
rcrl
mov
inc
outsl
rolb
fiadds
push
pop
mov
inc
adc
sub
mov
cmpsl
xchg
testl
adc
lret
mov
lret
fsubp
test
ret
and
movsl
movsb
inc
in
cli
dec
push
cmpsl
jnp
movsb
mov
fwait
pop
inc
inc
or
testb
dec
popf
jle
pop
jle
dec
mov
add
inc
shl
pusha
dec
push
cmp
sbb
dec
nop
xchg
mov
addb
cld
or
imul
xlat
push
cmp
adc
adc
pushf
sbb
push
jecxz
sub
jecxz
mov
insl
push
xor
data16
ja
add
cld
popa
clc
pop
enter
xor
or
pop
lds
insl
pop
jge
lahf
cmp
shl
int
rorb
ss
dec
dec
push
cltd
add
jp
jb
lea
mov
inc
insb
jb
jle
fdivrs
mov
pop
icebp
les
jp
lds
je
out
divb
pop
loop
out
sarl
jecxz
jp
pop
aad
fldcw
cmp
lret
add
mov
lds
roll
stos
ja
loop
and
cmp
and
ror
inc
movsb
ss
outsl
stos
aas
in
jl
pop
ret
js
xchg
jge
add
or
mov
movsb
dec
addr16
daa
adc
sti
push
cmp
mov
cmp
data16
sbb
or
dec
and
in
pushf
fbld
and
pop
adc
int
jne
and
stos
int
sbb
dec
push
or
mov
fdiv
and
pop
mov
iret
sub
sbb
and
push
xorb
mov
sti
cmp
mov
jmp
pop
xchg
call
push
push
xchg
mov
dec
sub
pop
fidivrs
sbb
jle
add
dec
out
repz
lahf
shl
cltd
add
or
je
mov
or
sub
mov
lret
leave
jns
mov
sub
divl
jmp
push
ficoms
mov
nop
xchg
movsl
rcll
push
sti
cltd
sub
test
jns
mov
mov
jmp
or
xor
xchg
ja
outsb
repz
out
jae
int3
ja
jno
ret
decb
xchg
push
adc
mov
sub
sbb
mov
xor
fisubl
js
jp
mov
cs
inc
mov
xor
shrb
pop
leave
dec
pop
mov
mov
push
xor
in
jle
xchg
or
mov
int
and
jl
mov
pop
arpl
loop
ss
std
je
enter
movsl
mov
loop
in
cmp
xor
jnp
mov
sub
add
orl
adc
mov
stos
jecxz
imul
into
js
jge
mov
dec
inc
insl
imul
imul
bound
out
test
jbe
mov
sub
jmp
inc
sbb
and
dec
mov
xor
mov
xor
xchg
inc
arpl
xor
mov
mov
adc
adc
dec
mov
outsb
mov
mov
xor
stc
hlt
mov
xor
mov
jp
lods
hlt
xchg
incb
movsb
mov
gs
repnz
aad
cmp
jge
inc
shrl
push
cmp
into
cmp
loop
sti
mov
div
pop
or
push
push
ss
scas
dec
mov
push
testl
pushf
dec
gs
fstps
fbld
call
lcall
in
mov
push
xor
jp
data16
mov
dec
xchg
cwtl
data16
xchg
adc
add
fwait
outsl
outsb
mov
xchg
cmpsb
xchg
repnz
adc
pop
xchg
sarb
out
dec
jns
idivb
stos
loop
adc
xor
jae
out
clc
shll
mov
insl
xor
or
int3
push
sbb
jbe
or
sarl
icebp
addr16
imul
pop
aaa
fildl
mov
rol
mov
adc
sub
stos
pusha
ficoms
sub
lret
test
sbbb
mov
cmc
into
xlat
sbb
js
outsb
dec
imul
push
lcall
mov
add
cmp
sbb
shrb
xchg
adc
pop
pop
or
xchg
lea
pop
enter
nop
daa
popf
lahf
xor
fs
fwait
dec
inc
test
test
in
push
pop
cmpsb
push
mov
adc
xor
mov
out
jne
popa
negb
sub
ficomps
pushf
jg
addb
or
dec
or
push
adcb
mov
cmp
es
mov
pushf
inc
cmp
pop
gs
pop
mov
dec
test
hlt
dec
in
aaa
loop
out
cmp
jge
and
fstp
pop
jno
mov
mov
js
sub
inc
push
jo
inc
mov
jnp
das
pop
and
mov
xchg
pop
repnz
or
inc
movntps
inc
xor
ret
dec
pop
scas
mov
and
int3
fistpll
xchg
inc
lcall
cmp
xchg
pop
cli
pop
ss
xchg
cli
or
mov
stc
push
test
inc
adc
xor
dec
stc
jmp
lcall
push
shlb
push
push
movsb
mov
sub
insl
aas
popa
iret
inc
ret
pop
testb
mov
inc
adc
sbb
pop
cmp
or
call
mov
test
outsl
out
cwtl
mov
sbb
adc
ffree
outsl
loop
or
mov
mov
mov
addr16
cs
inc
ljmp
aaa
sub
lcall
pop
imul
ror
shrb
jne
outsb
int3
ja
aas
hlt
bound
loope
xchg
xchg
dec
ret
aas
mov
test
lock
xor
jl
mov
fsubrs
pop
test
xorl
mov
mov
pop
inc
mov
mov
inc
fsts
icebp
cli
cmp
aas
mov
push
mov
lret
add
scas
sub
cmp
scas
pop
sub
in
mov
iret
mov
push
aaa
and
add
roll
sub
bound
mov
push
add
jge
push
ds
enter
xchg
pop
sub
addb
mov
add
js
pushf
cmc
dec
fistps
push
sbbl
sbb
into
dec
popf
push
push
pusha
dec
mov
mov
popf
mov
ret
mov
pop
dec
cmp
sarl
jge
andb
sub
push
dec
insb
aad
ffree
sbb
lea
push
daa
es
or
imul
jo
sbb
sub
adcb
jmp
test
mov
scas
push
fisubrs
gs
sbb
mov
jbe
je
lods
in
add
xor
out
jg
or
test
adc
xchg
sub
mov
inc
jp
rcll
lret
jo
jg
jae
les
lods
or
cmp
stc
sub
adcl
sub
cmp
ret
pop
out
xchg
dec
ret
iret
pop
mov
lods
xor
ja
jl
mov
adc
dec
and
fwait
mov
jo
outsl
out
mov
jecxz
mov
fisubrs
inc
jnp
loope
test
fildl
add
mov
push
gs
pushf
jnp
mov
hlt
sub
out
sbb
sub
cmpb
sub
mov
test
repnz
in
aam
pop
sub
inc
jg
orl
cmpsb
pop
jb
add
push
pop
test
mov
int3
sub
cmp
mov
prefetchw
ljmp
mov
lahf
mov
mov
adc
or
daa
bts
pop
ljmp
xchg
mov
jb
into
cli
push
sbb
jle
xchg
add
push
dec
test
jmp
rolb
mov
jmp
ja
push
push
mov
sub
xor
jecxz,pt
into
dec
loopne
ficoml
test
jmp
mov
cmpxchg
popa
mov
out
xchg
stos
stos
icebp
movsb
mov
imul
and
cmp
in
pop
and
jae
cmp
out
ljmp
jg
or
jae
test
or
or
scas
ret
add
insb
add
and
push
mov
fidivl
adc
das
mov
sbb
cmpsb
shrb
mov
inc
cmp
xor
out
subl
outsb
or
xchg
add
ret
mov
xor
sbb
clc
rcrl
enter
or
xchg
or
xor
jge
stc
cmpb
mov
in
iret
icebp
or
scas
aam
sarl
mov
movsb
pop
movsl
xchg
push
adc
sahf
mov
pop
jns
lcall
pop
cmp
shlb
inc
andb
scas
int
and
jg
loope
push
fs
cmpsl
dec
sahf
inc
incb
sahf
adc
mov
fnstcw
xchg
sbb
leave
leave
leave
mov
and
push
insb
es
mov
out
add
or
jmp
and
fs
jmp
iret
xor
icebp
fcomps
adcb
hlt
aaa
and
lods
or
ja
mov
cmp
mov
add
jbe
out
and
or
hlt
jle
je
loopne
je
mov
fimull
sarl
dec
push
aam
mov
push
push
clc
pop
pop
adc
xor
aaa
ss
in
xor
mov
cmp
rolb
mov
fstps
adc
jnp
ss
inc
clc
leave
scas
xchg
arpl
jle
mov
push
add
push
decl
sbb
mov
sbb
dec
cmp
fiadds
out
enter
push
mov
stos
lahf
rcl
jo
hlt
nop
movhps
fstl
and
cmp
minps
cmp
add
mov
stos
dec
push
cmp
dec
jnp
pop
aam
stc
es
int
cltd
sub
inc
rolb
popa
or
pop
mov
cli
or
imul
push
add
push
repnz
xor
out
mov
push
xor
sub
xchg
lods
aad
mov
cmp
and
mov
push
inc
jne
pop
adc
ffree
add
xor
push
mov
outsl
jno
mov
popa
mov
aaa
popa
fcompl
imul
loope
inc
push
pop
jmp
addl
int3
mov
mov
lock
les
jle
jns
add
pop
cmpb
outsb
repnz
push
xor
cmp
pusha
movsb
cmpsb
xchg
push
loope
mov
sub
jns
sbb
add
cli
sub
outsl
ja
push
cmc
pop
jne
xor
dec
jo
lea
push
pop
pop
rclb
pop
mov
mov
lret
insl
out
js
or
cld
std
daa
ret
sbb
mov
mov
lret
fnsetpm(287
imul
push
pop
or
inc
icebp
popa
or
pusha
mov
mov
pop
sbb
sbb
sub
lahf
js
inc
and
sub
jo
xor
cld
sub
mov
mov
push
cmpb
cltd
add
inc
in
loope
sahf
sbb
in
inc
sub
sbb
lods
mov
loop
sahf
fiadds
iret
mov
test
pusha
push
pop
repnz
loope
lea
dec
xor
ja
cmp
and
insb
or
movsb
call
cli
imul
mov
jge
cltd
xchg
adc
sbb
fistpll
mov
and
cmp
imul
xor
mov
pop
ja
cmp
div
out
pushf
mov
jo
lds
inc
adc
fldcw
mov
inc
aam
stc
xchg
pop
dec
or
icebp
xchg
xchg
sub
jo
or
mov
jae
or
adc
xchg
ja
inc
mov
jnp
mov
daa
popf
stos
xorl
inc
mov
pop
subl
pop
fwait
rolb
xchg
pop
out
ljmp
mov
dec
xchg
mov
nop
sbb
gs
xchg
xlat
icebp
popa
in
fildll
sbb
ss
sub
adc
sbb
mov
cmpsl
mov
push
repz
cmp
aam
xor
movsl
movsb
pop
fisubs
lea
es
loop
sti
nop
or
and
aad
or
cmpsl
sbb
les
jns
jo
xor
lods
frstor
mov
and
cmp
insb
sub
mov
sbb
div
scas
push
cli
mov
mov
pop
push
mov
or
pop
or
insl
mov
mov
lahf
cmp
bound
aad
imul
xor
sbb
jecxz
ljmp
pop
scas
stos
dec
repz
jbe
mov
lret
xchg
call
mov
or
lds
in
mov
iret
mov
xor
or
xor
hlt
mov
fidivs
test
movsb
ja
shlb
inc
and
and
popf
mov
adc
cmp
ds
ljmp
aam
xor
xor
sbb
xchg
push
adc
jecxz
jo
xor
mov
push
pushl
repz
xchg
mov
sbb
xor
mov
push
pop
push
mov
lret
pusha
lock
lea
jmp
outsl
je
imul
clc
or
push
mov
ficompl
movsb
mov
fistps
imul
or
adc
in
mov
mov
and
and
mov
les
dec
rcrb
cmp
outsl
outsl
daa
push
icebp
ret
or
scas
jne
add
mov
mov
pop
jae
jmp
jl
lods
cmc
inc
iret
cmp
mov
arpl
test
repz
inc
sub
mov
xor
mov
mov
in
sub
dec
add
push
insl
fcoms
pop
fcoms
call
sbb
jnp
mov
cltd
mov
push
lods
clc
fs
ss
mov
sbb
pop
and
push
dec
cs
add
lret
push
jne
sbb
int
lea
cmp
cmc
and
insl
adc
loopne
orl
or
imul
push
fimuls
bound
sti
imul
mov
pop
push
scas
ja
sub
or
dec
pop
lahf
adc
mov
ja
sbb
mov
adc
mul
xchg
pop
ficompl
sub
scas
jae
and
jl
mov
ljmp
mov
sbb
xchg
xchg
in
jns
pop
adc
jecxz
outsl
rclb
add
das
inc
clc
mov
imull
mov
add
inc
sbb
jecxz
add
addl
jge
lods
xor
pop
inc
jge
fldl
frstor
cwtl
add
dec
fsubl
or
and
pop
xchg
add
popa
test
adc
ss
adc
and
insb
loopne
mov
sub
ja
jb
rcl
clc
cs
shrb
xchg
pop
imul
dec
jo
dec
push
inc
mov
outsb
ficompl
pop
dec
xor
sub
mov
pop
movsl
jp
loope
push
or
icebp
cwtl
jecxz
mov
xchg
psubsw
add
test
fdivp
lret
es
adc
add
pop
ja
pop
mov
loope
testl
mov
and
xor
dec
xlat
popa
adcl
adc
xchg
jno
pop
or
lock
mov
jl
or
aad
xor
sahf
push
sub
insb
fdivrs
sub
xchg
or
pop
jl
mov
sahf
insb
add
aad
add
std
adc
xchg
or
fmuls
popf
fnstcw
jne
cwtl
adc
sub
push
bt
lahf
jnp
jecxz
mov
push
cli
mov
adc
sbb
shlb
adc
cmpsl
cmp
hlt
out
inc
mov
mov
dec
xlat
mov
pop
ret
fmuls
shlb
xlat
push
dec
xor
sahf
mov
rcrl
dec
aam
lret
int
adc
stos
movsb
hlt
test
or
push
cmpsb
dec
push
mov
sub
test
leave
xchg
nop
or
mov
int
sbb
test
nop
xchg
push
xor
adc
ds
cmp
jecxz
mov
push
sti
pop
in
data16
outsb
pop
loope
pop
mov
inc
lods
xchg
dec
shrl
in
push
mov
inc
sbb
dec
aam
pop
mov
pop
push
bound
add
andb
push
cwtl
lcall
dec
into
insl
cmp
dec
test
ljmp
rol
insb
sbb
popf
jecxz
aaa
mov
fsin
or
or
cmpsb
mov
stc
sbb
sbb
xchg
and
sti
adc
rclb
cli
adc
stos
lahf
mov
push
imul
sbb
es
test
mov
lock
lcall
push
insl
inc
add
lock
mov
add
cmp
adc
mov
pop
inc
push
pop
sbb
dec
dec
ss
rolb
pop
jl
fs
test
jle
outsb
mov
cli
xlat
cmp
xor
jge
or
sbb
js
jg
loop
sar
faddp
push
cmc
repz
lahf
movsl
inc
jae
mov
fwait
dec
lods
cld
movsb
jle
es
jb
ds
sbb
fcomi
xchg
adc
mov
js
xor
add
dec
cld
sahf
cwtl
or
jle
les
lods
sub
flds
cwtl
lret
xchg
sahf
mov
mov
in
dec
cld
stc
or
fnsave
lret
add
fs
bound
je
sub
xchg
imul
mov
scas
mov
icebp
sub
jae
mov
movsb
sti
cltd
lods
ja
xchg
cmpsl
cmp
push
dec
loope
mov
mov
or
push
sti
xor
adc
subl
push
loopne
addl
test
adc
loopne
test
cmp
dec
fsts
ja
cmp
mov
imul
or
push
in
push
push
cmp
fisubs
mov
mov
jp
out
mov
and
addr16
gs
arpl
xchg
push
jp
mov
xchg
xor
into
cmp
sbb
in
or
jb
loop
mov
fnsave
into
pop
sti
cmp
hlt
sub
jecxz
xchg
inc
sub
mov
pop
clc
inc
and
call
cs
dec
jno
jl
or
push
mov
push
push
pop
imul
dec
and
loope
ja
sub
out
in
loope
in
call
jge
jae
xor
sub
mov
xor
popa
mov
sub
dec
loop
imul
adcl
sbb
dec
into
inc
dec
repz
bound
add
cld
jmp
inc
push
sub
imull
lcall
push
push
in
mov
push
ss
and
scas
xor
in
test
insb
and
mov
cld
and
mov
adc
mov
xor
mov
scas
js
les
jle
adc
loop
fnstcw
lea
dec
lods
sub
jge
test
or
out
cmp
loope
xchg
lods
xchg
js
movsb
cmp
jl
push
xor
pop
es
jno
mov
call
xor
mov
and
push
jbe
inc
je
test
mov
out
mul
hlt
add
adc
and
xor
inc
push
jbe
inc
je
test
mov
out
mul
hlt
add
xchg
movsb
push
xor
les
jbe
inc
hlt
push
test
mov
out
mul
hlt
add
adc
and
xor
inc
push
jbe
inc
je
test
mov
mov
movsb
or
call
jl
inc
fidivrl
or
cmp
orb
cmp
mov
mov
enter
test
cwtl
sub
inc
js
push
cld
js
sub
dec
sbb
adc
enter
mov
int3
dec
pushl
sahf
sub
lret
dec
ret
xchg
aas
movsb
adc
mov
cmpsl
mov
test
jge
sub
pop
adc
pop
xor
xchg
or
cltd
adc
mov
mov
mov
lods
imul
push
dec
lods
push
lods
push
fidivrs
add
pushf
nop
fistpll
push
dec
mov
lods
sub
xor
and
cmpb
and
inc
scas
test
addr16
mov
jns
push
sbb
mov
bound
cmpsb
or
clc
cmp
icebp
inc
test
xchg
adc
sbb
xor
nop
pop
adc
pushf
loopne
add
pop
leave
jne
fnstcw
inc
or
mov
rcll
jmp
sbb
pop
fsubrs
pop
or
sbb
sub
cmp
int3
repnz
in
js
jo
and
dec
lcall
imul
push
cmp
iret
inc
stc
jno
insl
repnz
lea
stos
or
push
insl
inc
fstpl
xchg
movsl
pop
mov
inc
popf
jno
dec
rcll
fwait
sbb
and
cmp
int3
push
cld
cmp
mov
fsubrs
mov
sub
cmp
int3
push
cld
cmp
mov
sbb
inc
repz
fwait
inc
cmp
push
rcll
and
or
dec
in
in
stos
xor
mov
movsl
push
mov
test
adc
addr16
lock
sub
xchg
sti
iret
enter
aam
rorb
daa
inc
data16
jmp
and
idivl
adc
into
out
dec
mov
shrl
and
push
xor
scas
shrl
fimuls
lods
outsl
testb
hlt
dec
clc
xor
lret
inc
mov
insl
aam
subl
rcll
cltd
and
test
ss
dec
inc
loope
inc
push
loope
sti
mov
es
pop
add
and
aam
cld
jno
dec
inc
sbbl
xor
push
add
rcr
jo
push
les
pop
xchg
and
daa
jae
sub
pop
in
lahf
out
lea
cmp
stos
xchg
mov
out
jnp
push
dec
flds
fcomip
or
mov
inc
push
fmul
inc
xchg
rcrl
sarl
jge
jbe
popa
xchg
mov
push
mov
dec
and
push
roll
jmp
fstps
aaa
into
test
inc
les
adc
sbb
mov
ja
mov
fwait
aas
out
cmp
cmp
cmp
addr16
dec
push
jmp
repnz
pop
loopne
mov
and
fildl
push
in
add
fstpl
loop,pn
cmc
jle
insb
fstp
insl
or
fidivs
repz
mov
add
and
sub
jmp
call
popa
outsb
test
ljmp
jle
cmp
xchg
dec
mov
repz
adc
sub
cwtl
xchg
cmp
push
inc
sbb
xchg
add
ror
jno
popa
sub
mov
sub
adc
mov
pop
fnop
mov
fisttps
mov
xchg
sbb
jmp
js
and
dec
cmpsb
fsubs
out
push
out
mov
lcall
fwait
aam
insl
enter
bound
xchg
mov
pop
shrb
mov
fidivl
leave
mov
mov
bound
mov
enter
mov
fwait
pop
jae,pn
out
dec
sub
cmp
adc
xchg
test
hlt
sarl
sub
xchg
add
cmp
sti
and
inc
inc
xor
lock
arpl
mov
sub
and
negl
scas
cmpsb
rolb
negl
aaa
rorl
jmp
pop
lret
roll
adc
movsl
sahf
in
subb
push
aam
pop
dec
jb
pop
push
test
movsb
xchg
aaa
and
pop
testb
rol
jo
push
stos
and
sub
fisttps
push
notb
xor
xchg
push
xchg
and
xchg
scas
es
in
daa
insl
push
xor
sbb
mov
mov
test
mov
sbb
lret
sbb
pop
out
ss
js
out
rorl
dec
imul
mov
push
xor
lcall
cs
cli
cmp
outsb
sub
leave
sbb
xor
icebp
into
sub
adc
and
cmpsb
ret
sub
pop
fbld
push
cld
pop
insl
std
stc
xchg
movsl
push
jmp
cwtl
xor
dec
sbb
adc
and
jno
jno
xchg
test
push
test
loop
sbb
jle
and
xchg
popa
xor
ljmp
mov
mov
imul
sub
mov
icebp
push
dec
add
scas
cmpsl
sbb
ja
sbb
cmp
dec
xor
mov
xor
ja
mov
data16
inc
mov
mov
fisttpl
xor
sub
sbb
loopne
repz
sbb
mov
insb
inc
xlat
cmpsl
inc
shl
int
lods
ret
icebp
and
pop
or
jnp
dec
push
outsb
push
movsb
sub
dec
fisubrl
icebp
flds
adc
mov
lret
cwtl
mov
sbb
in
pop
mov
dec
lock
daa
imul
inc
lods
mov
loop
xchg
fwait
pop
lods
lret
adc
sub
xor
mov
adc
das
scas
jle
pushf
gs
xchg
testb
mov
inc
inc
dec
aas
bound
clc
lods
adc
push
aam
sub
out
xchg
xchg
addl
xchg
xor
pop
add
mov
int3
and
inc
inc
dec
and
idivb
loope
out
popf
xor
fwait
lret
test
inc
in
jp
test
jle
or
mov
sub
mov
ljmp
repnz
shrl
adc
add
pop
mov
mov
addb
outsb
mov
rcll
lret
xor
in
jecxz
scas
and
add
mov
hlt
insb
or
outsb
stos
push
outsl
sahf
jl
in
dec
sahf
andb
lea
adc
sbb
rcl
xchg
shlb
icebp
adc
ljmp
cs
incb
aad
xchg
mov
push
imul
insl
sub
inc
mov
inc
add
aaa
xchg
pop
xor
std
out
cwtl
pusha
xor
dec
jmp
adc
mov
call
out
roll
xchg
cmpsl
fcoml
gs
jb
dec
and
push
pop
testb
or
mov
adcb
xchg
ss
cwtl
scas
push
lods
mov
in
mul
jno
icebp
xor
jb
cmp
inc
aas
out
dec
fstps
je
dec
pop
push
push
imul
sub
aas
sbb
insb
jb
fisubrs
sbb
stc
mov
lahf
push
movsl
mov
das
jecxz
add
das
movb
dec
enter
lea
sub
mov
ljmp
fadds
dec
pushf
fldcw
adc
sub
enter
sbb
pushf
std
push
aad
into
repz
xchg
ljmp
sub
pop
in
int3
push
arpl
pop
inc
loope
out
dec
mov
mov
rcll
cmp
in
jg
push
cmc
lahf
nop
mov
loop
mov
mov
cwtl
xchg
enter
mov
pop
inc
iret
mov
jno
inc
push
mov
jmp
mov
fstpl
jmp
arpl
jnp
inc
inc
dec
arpl
jecxz
andl
mov
adc
mov
lods
cmc
add
mov
and
rcr
pop
mov
aas
popa
inc
lret
lcall
clc
int
xor
mov
dec
out
push
cli
inc
jp
xor
shl
add
test
pop
repz
fldt
sti
mov
outsb
mov
pushf
dec
roll
push
fmull
bound
test
sbb
mov
imul
incl
or
jg
les
stos
mov
xlat
dec
jmp
mov
pop
adc
popf
stos
jge
mov
inc
out
or
adc
pusha
int
sbb
nop
mov
cltd
cld
stos
adc
xchg
push
inc
pmullw
pop
jbe
dec
fsubl
insb
prefetch
or
add
and
pop
pop
mov
xor
nop
mov
test
or
mov
and
adc
outsl
cwtl
cmp
xor
sahf
mov
inc
je
or
xlat
xor
push
pop
xlat
inc
adc
pop
push
sbb
dec
repz
aad
iret
je
movsl
mov
and
stc
pop
adc
pop
es
mov
out
out
push
xchg
add
xor
std
xchg
out
pop
lea
aam
nop
and
test
rclb
jle
scas
push
adc
loope
ljmp
dec
repz
jle
fistl
cs
push
aas
aas
loope
mov
cmp
or
fs
xor
push
cmp
out
fldl
insl
xchg
es
jae
mov
jmp
fcmovne
mov
cmp
js
push
dec
xor
dec
cmpsl
mov
mov
test
add
repnz
jmp
aam
dec
adc
mov
pop
mov
data16
dec
lcall
or
mov
std
fwait
push
xchg
fidivrl
addl
and
xchg
inc
les
loopne
pop
mov
rcrl
cmpsl
cmpsb
out
lahf
repnz
xchg
add
or
mull
mov
push
pop
and
test
in
daa
ret
or
dec
mov
mov
push
and
fistpl
fadd
inc
outsl
leave
xor
mov
jo
sub
push
outsl
int
out
cli
lods
or
daa
loope
icebp
jbe
shr
aaa
adc
gs
ds
bswap
fildll
nop
sbb
jp
fs
sub
pop
inc
pop
add
out
jns
or
jno
in
mov
ja
mov
and
sub
jmp
xor
sbb
call
stos
fisttpl
aaa
jbe,pt
popa
xor
jecxz
cmpsl
ljmp
jmp
test
xchg
xchg
pop
pop
push
ss
dec
cmp
pop
mov
ljmp
aas
imul
cld
into
adc
fwait
mov
inc
lahf
pop
jo
pop
dec
fs
lea
inc
push
test
mov
or
jp
lods
dec
lods
xchg
movsl
das
mov
xlat
cmp
shlb
xchg
inc
xchg
clc
test
fcom
stos
cmpsb
out
cs
xchg
mov
aaa
xlat
addb
mov
das
stos
jne
push
push
xor
inc
pop
push
in
andb
jbe
cmpl
aam
adc
and
in
int3
add
push
mov
jp
lahf
in
notl
loopne
xor
xchg
xchg
push
sar
lea
xchg
es
addb
xchg
inc
adc
inc
popa
dec
cmp
iret
out
inc
mov
fidivrs
add
insb
mov
and
mull
add
sbb
cmp
xchg
lret
idiv
mov
push
push
iret
iret
jp
fdivrs
sbb
shlb
dec
gs
mov
dec
xchg
dec
aam
push
mov
das
push
fwait
movsl
pop
lods
pop
sbb
sub
stos
mov
or
add
cmp
movsl
cmp
adcb
push
mov
xor
sqrtps
and
push
mov
mov
xchg
sahf
lret
sti
ret
push
dec
pop
mov
enter
dec
stos
sbb
adc
scas
fs
mov
or
pop
les
mov
mov
jecxz
hlt
pop
jge
xor
insb
int3
push
fbld
sbb
and
fsubl
movsb
sbb
jmp
repnz
jno
cmpsl
bound
add
push
and
xchg
das
mov
mov
in
js
and
enter
dec
mov
pop
mov
stc
cmp
test
pop
fcmovne
push
bound
pop
das
ljmp
inc
ds
btc
jl
inc
add
pop
cmp
shl
jno
ljmp
dec
xor
out
and
xorb
sub
adc
xchg
mov
ficoms
mov
outsl
mov
insb
dec
jae
movsl
out
popf
aaa
dec
push
pop
ret
pop
sub
je
mov
push
push
cltd
mov
rcr
xchg
gs
xchg
into
sub
enter
jp
add
sub
test
xor
rclb
mov
mov
nop
push
fdivl
sbb
das
jb
iret
out
fnstenv
cmpsl
pop
scas
dec
xchg
mov
adc
lods
lods
lret
js
pop
sbb
sbb
lret
lahf
inc
and
or
jbe
jb
pusha
das
jbe
lret
mov
mov
test
lret
or
dec
cmpsb
into
stos
sahf
jg
or
cmp
clc
mov
test
mov
sbb
sub
xor
adc
subl
mov
jecxz
jp
rol
lock
popf
pop
adc
adc
lret
xchg
dec
mov
jecxz
sbb
aam
inc
pop
jo
or
test
dec
lahf
dec
fsubs
sbb
inc
pop
dec
add
aaa
or
int
sarb
loop
lret
aas
push
out
push
in
xchg
arpl
fdivs
lahf
mov
xor
daa
or
push
popf
hlt
lret
cmp
adc
iret
imul
and
fimull
cmpsl
mov
stc
into
clc
push
xor
mov
jb
mov
std
inc
sub
decl
mov
subl
dec
rcrb
sbb
pop
mov
and
and
lret
sub
pop
mov
dec
daa
mov
add
mov
into
out
rcll
push
icebp
rclb
insb
mov
fwait
mov
js
or
mov
fdivrs
dec
cmp
xchg
outsb
jle
pop
push
andl
scas
xor
arpl
in
jp
cmp
pop
inc
ret
shr
and
cli
mov
cmp
scas
push
xor
or
mov
inc
shlb
mov
test
imul
jnp
loope
push
jb
pop
fstp
out
adcl
adc
or
aas
jge
mov
sbb
rclb
mov
mov
loop
scas
xchg
stos
mov
aad
fs
clc
aad
outsl
hlt
fadds
cmp
cmp
add
or
stc
and
fimull
cli
dec
pop
jmp
push
es
cmc
and
mov
pop
and
pop
shlb
ret
inc
movsl
push
push
mov
insb
sbb
pusha
pop
inc
dec
adc
and
inc
pop
mov
push
out
das
insb
pop
ret
movsb
data16
mov
fistl
int3
aaa
cmp
fisttps
ja
xor
and
fcmovnb
xor
pop
divl
mov
lds
and
shlb
hlt
int3
fwait
adc
cmp
test
pop
scas
pop
outsl
add
mov
sbb
insb
leave
in
jmp
xchg
cmp
pop
mov
mov
push
mov
mov
push
rcrb
adc
movsb
pop
call
mov
xor
mov
mov
popa
out
mov
dec
repz
mov
push
pop
xor
and
in
enter
push
movsl
jge
ds
test
lea
xchg
nop
data16
ficompl
xchg
cmpsl
mov
cmpsl
gs
mov
pop
fistpll
sbb
xor
pusha
shr
sahf
enter
dec
arpl
xlat
push
mov
imul
ficoml
shr
inc
lret
js
arpl
lods
jp
cs
mov
jecxz
sub
fwait
in
adc
ret
or
add
mov
rcrl
sub
mov
push
xchg
lock
cltd
mov
ficomps
mov
loope
xchg
leave
rcr
orl
push
sbb
mov
rolb
xchg
call
push
mov
test
mov
sarb
jno
xchg
mov
mov
inc
or
popl
add
mov
push
and
js
dec
mov
and
ss
xchg
adc
pop
dec
icebp
mov
xchg
cmc
pop
aad
icebp
adc
sub
jge
pop
cmp
mov
xchg
sub
and
and
or
lret
frstor
stc
imul
sub
xchg
pop
pushf
pop
push
int3
mov
mov
adc
inc
xlat
mov
push
xchg
int3
mov
and
sbb
sub
cld
insl
cwtl
stc
icebp
jge
fadds
add
jmp
sub
add
sbb
jbe
ja
cmp
in
jb
and
js
mov
push
pop
mov
mov
jl
inc
sub
orl
out
dec
sbb
add
jl
pop
enter
test
js
adc
add
sbb
insl
pop
shrl
cmpl
and
jne
jnp
imul
insl
in
sbb
adc
cmp
test
enter
hlt
pop
push
je
jle
cwtl
jge
xor
mov
push
fidivl
and
movsb
cmc
je
fnstenv
xor
cmp
fisubrs
lret
inc
hlt
jae
mov
test
mov
xchg
pop
adc
scas
jae
adc
or
subb
lret
push
push
xor
push
lods
leave
xchg
xchg
push
xchg
xlat
add
and
xchg
and
inc
pop
mov
jbe
cld
mov
loop
sub
lcall
je
dec
mov
mov
dec
loopne
push
ljmp
out
icebp
mov
jae
in
add
testb
add
aad
and
aas
push
int
loop
clc
xor
cmp
jns
test
lods
shrl
sbb
lahf
mov
ret
repz
sbb
fiadds
xchg
mov
sub
mov
fildl
test
push
test
adc
xchg
jl
stos
scas
cmc
subl
xchg
jecxz
cwtl
clc
arpl
ret
cmpsb
add
in
sub
jp
or
pop
cltd
fadds
lcall
or
sub
xor
pop
test
out
adc
add
stos
and
and
mov
mov
xchg
xlat
mov
ds
icebp
mov
dec
push
or
rcrl
test
cltd
scas
adc
addr16
jp
ret
inc
xchg
xchg
sbb
xchg
jne
add
pusha
ret
jp
xchg
pop
mov
sarb
nop
jns
pop
loop
sbbb
fnsave
mov
and
sbb
jg
int3
subl
adc
sbb
xor
stos
jge
dec
mov
ljmp
pop
test
bound
jae
mov
mov
movsl
cmp
fucomi
mov
outsb
ja
hlt
es
sbb
stos
or
je
lea
cltd
movsb
xlat
pop
inc
scas
push
cmp
bnd
aaa
leave
dec
mov
inc
xchg
out
arpl
adc
scas
dec
push
jno
pop
cltd
lds
inc
sbb
stc
les
cmc
insb
and
in
sub
mov
sub
pop
out
dec
mov
pop
inc
xchg
sahf
jno
mov
lcall
sbb
scas
and
inc
xchg
subl
cmp
mov
xchg
dec
xlat
popa
in
hlt
jle
fiaddl
dec
inc
in
xchg
dec
dec
cltd
jno
mov
lods
inc
fwait
fmuls
and
jne
xchg
in
xorl
mov
cmp
or
pop
movl
push
fcompl
clc
lea
push
incl
sub
shlb
popa
in
jns
cmp
int
or
es
or
push
jnp
xchg
sub
cmp
fs
xor
sarb
mov
pop
imul
dec
mov
push
sub
jo
add
loope
sub
pop
xchg
ds
add
cmp
rcr
ret
out
inc
adc
imulb
cwtl
int
arpl
gs
mov
popa
push
loope
lret
test
sbb
push
xchg
test
js
sub
mov
dec
dec
sub
mov
and
sbb
inc
mov
sbb
incb
sub
orb
out
cmp
enter
loop
jne
push
cmp
sub
movsb
and
js
sub
cwtl
jns
test
and
add
jne
and
push
inc
insb
jg
pop
shrb
mov
stc
mov
add
inc
adc
movsb
sti
jae
inc
and
scas
cmp
enter
add
cmp
js
mov
mov
sbb
ret
xchg
aaa
std
mov
pop
outsb
incl
outsl
dec
lret
mov
or
inc
inc
and
mov
pusha
sbb
enter
adc
jb
pop
bound
test
repz
je
fmul
sbb
xchg
loopne
mov
pop
repnz
mov
push
or
sbb
mov
fldcw
push
adc
out
fisubl
out
roll
pop
cmpsb
sahf
outsb
in
push
mov
aad
mov
mov
popa
iret
mov
sub
sub
mov
sbb
bound
push
inc
mov
sbb
cmp
cmpsb
or
mov
xchg
std
cmpsb
jno
push
mov
or
lods
sarb
pop
ret
mov
insl
stos
pop
sub
stos
int3
lahf
dec
inc
and
fsubs
sub
cmp
mov
pop
cmp
out
push
in
lea
or
stos
jp
push
sbb
push
out
pop
inc
pop
test
inc
les
daa
dec
scas
or
xchg
cmpsb
cmp
sti
pop
les
inc
sub
movmskps
out
movq
dec
popl
adc
jmp
mov
pop
sub
mov
and
mov
iret
mov
insb
enter
test
cwtl
sub
cmp
int3
push
cld
cmp
mov
fsubrs
mov
sub
cmp
int3
push
cld
cmp
mov
mov
or
sbb
sub
cmp
int3
push
cld
cmp
mov
subb
or
sbb
sub
cmp
int3
xchg
jbe
in
dec
mov
mov
inc
pop
cs
ds
push
aaa
push
dec
outsl
xor
and
test
xchg
mov
mov
jmp
fdivp
fiadds
cs
ds
push
aaa
push
inc
outsb
push
jle
dec
ja
xchg
mov
mov
out
neg
pop
cs
ds
push
aaa
push
inc
outsb
push
jle
dec
ja
xchg
shl
test
mov
jae
jbe
daa
pop
pop
jnp
aam
xchg
mov
pop
dec
sub
mov
dec
addr16
mov
xor
fsubs
inc
jle
repz
lahf
aam
mov
dec
mov
jbe
clc
jge,pt
dec
fdivrl
adc
test
cmp
xor
adc
inc
notl
pop
mov
xor
outsl
test
ds
ja
ja
sbb
dec
dec
sbb
mov
xchg
shll
ja
fwait
pop
cld
pop
xchg
stos
sub
sahf
xchg
mov
idivl
cmp
sub
and
cmc
ret
les
shrb
popa
and
test
les
pop
ds
push
aaa
push
inc
outsb
push
jle
dec
ja
xchg
mov
out
xlat
out
negl
popa
dec
jno
and
cmp
or
repz
fdivp
cmpsl
aam
repnz
inc
lcall
jno
arpl
inc
jbe
and
xor
lret
lock
fucompp
mov
xor
popf
mov
pop
insl
popa
imul
pop
push
jle
dec
ja
xchg
mov
out
xlat
out
neg
pop
cs
ds
push
aaa
push
inc
outsb
push
jle
dec
ja
xchg
mov
out
xlat
out
neg
pop
jbe,pn
mov
fwait
movsl
std
aaa
sbb
mov
cwtl
cld
fimull
out
push
push
test
aad
lret
jnp
pop
fsubl
outsl
pop
jb
pusha
xchg
nop
mov
pop
cmp
js
mov
lret
lcall
adc
sbbl
lsl
xchg
fs
xchg
repz
mov
bound
jnp
sahf
mov
scas
mov
jbe
xchg
mov
or
bound
std
lret
sub
cmpsl
movsl
popa
or
mov
int
adc
ss
gs
inc
sbb
cmp
push
push
adc
test
mov
in
mov
jno
push
rcrb
add
repnz
lret
ljmp
sbb
stc
mov
stos
xchg
and
stos
push
cmpsl
incl
push
into
mov
mov
xchg
cltd
mov
loopne
xor
rorl
xchg
and
rclb
lods
dec
push
aas
jno
rclb
fcompl
push
cmc
inc
jae
addr16
aam
push
adc
lret
push
xchg
lods
cmp
ret
dec
out
sub
mov
mov
adc
fsts
add
dec
dec
cmp
pop
testb
ljmp
xchg
cmp
std
push
xchg
test
repz
cmp
pop
sbb
pop
cmc
aam
mov
sub
adc
mov
lret
bound
or
subb
fs
add
jecxz
shlb
jg
add
jb
test
data16
aam
jmp
inc
and
xchg
inc
cmpb
imul
fisubl
or
addr16
int
fldenv
xchg
dec
cmp
nop
adc
adc
pop
lea
fistpl
jbe
sub
cmpsb
dec
sub
mov
xchg
push
and
sub
sub
push
pop
cmp
pop
xor
imul
push
cwtl
cs
mov
mov
jbe
lock
ljmp
sub
jge
lods
mov
xor
or
fidivrs
push
mov
dec
or
in
mov
or
aad
iret
cmp
mov
mov
mov
dec
sbb
lcall
or
int3
and
push
ljmp
jp
add
jp
mov
push
cmovge
mov
pop
mov
test
ss
sub
pop
popf
iret
test
xchg
mov
out
jne
jecxz
dec
cs
dec
jbe
lods
inc
pop
inc
inc
scas
and
mov
popf
hlt
shlb
ret
out
sub
pop
jbe
dec
fs
mov
idivb
push
jecxz
add
or
stos
jg
jnp
push
shll
adc
sbbl
mov
lock
and
push
mov
cmp
pushf
out
xor
pop
orl
popf
in
subl
or
adcl
scas
push
sbb
pop
ljmp
mov
push
pop
jge
std
cld
cmpsb
xor
xchg
faddl
inc
inc
inc
adc
pop
push
sti
out
fcmovnu
movl
jmp
or
inc
outsb
add
addr16
std
enter
jae
dec
cmpsb
lret
inc
out
data16
pminub
cmp
add
pushf
icebp
fdivr
sbb
mov
cld
imul
push
mov
dec
dec
test
push
stos
inc
xchg
test
leave
mov
inc
fcmovbe
cmp
loope
cmp
loopne
sub
mov
mov
ret
js
cmp
xor
jns
pop
movsb
pop
imul
ret
add
and
mov
stos
or
push
enter
lret
imul
sbb
push
and
outsl
rcll
jb
inc
push
mov
ficomps
outsl
rcrl
je
lret
out
lret
ds
adc
jo
cmp
lock
fs
cld
lcall
push
fcoms
dec
pushf
decl
pop
cmp
outsb
in
sub
rorb
mov
flds
push
aam
lods
jo
cmpsl
movl
jge
std
lret
pushl
bnd
mov
cmp
jns
vpsubb
orl
sub
lahf
and
sbb
jns
xchg
lahf
subl
out
xor
sbbb
and
lea
sub
repnz
push
aaa
aaa
mov
lock
ret
cmp
bound
std
popa
xchg
ret
mov
icebp
shll
xor
les
js
cmpsl
lret
gs
leave
in
movsl
scas
mov
in
or
jmp
and
shll
bound
mov
push
pop
jle
sub
fists
aas
out
andb
sbb
out
xchg
lcall
adc
stos
xor
fdivr
jne
jecxz
adc
pop
jno
adc
notb
pop
cwtl
ret
insb
cmpsb
jb
fsubl
add
lea
and
add
icebp
sub
xor
testb
lahf
std
dec
dec
inc
test
push
adc
int3
sahf
xchg
enter
fsts
fcoml
mov
aam
cmc
jl
mov
dec
jbe
outsl
outsb
cmp
imul
cld
imul
dec
jno
mov
lea
daa
movsl
les
pop
mov
lret
mov
push
pop
dec
mov
out
mov
mov
int3
xchg
xor
outsl
pop
sbb
pusha
fdiv
cmpsb
sbb
cmp
mov
pop
and
xchg
xchg
and
mov
fwait
aas
inc
fstps
sub
fwait
or
jl
ja
mov
sbb
xchg
mov
test
subl
inc
mov
fdivrl
mov
stos
dec
push
subb
dec
cvtdq2ps
inc
pop
cmp
mov
xor
mov
mov
lcall
fdivl
add
in
adc
add
data16
mov
in
sub
push
lods
sbbl
cmp
aad
cmp
pop
xor
add
jbe
cmp
and
pushf
data16
mov
popa
sbb
pop
pop
mov
mov
loopne
outsl
sti
popa
hlt
mov
jg
dec
mov
adc
pop
into
aas
fs
or
xchg
sbb
push
mov
orl
cmpb
and
lods
outsb
repz
icebp
dec
imul
cmp
and
pop
xchg
data16
jae
sbb
inc
or
xchg
inc
adc
pop
mov
and
loope
sub
xor
cmp
cmp
sbb
and
push
xchg
mov
xor
inc
mov
iret
lds
sahf
pushf
lds
mov
in
add
mov
or
sbb
fadds
mov
bound
mov
out
mov
mov
xchg
cli
cmp
push
pusha
insl
divl
xor
mov
sbb
lcall
scas
daa
pop
xchg
aaa
ret
in
adc
sbb
std
out
mov
insl
lock
maxps
xchg
lret
push
add
jg
dec
mov
imul
and
pop
fdivl
sbb
jle
or
lods
sub
xlat
ss
ja
xor
jl
mov
mov
fidivl
mov
and
test
xchg
mov
xchg
das
sbb
daa
push
or
in
jbe
or
jb
into
aam
ret
xchg
cmc
arpl
arpl
dec
push
ss
xor
pop
lock
imul
adc
lret
lcall
jnp
out
fwait
je
cmp
loope
loopne
pop
dec
insl
cmp
icebp
pop
test
xchg
or
xchg
mov
dec
and
sbb
adc
cld
mov
aam
push
pop
jae
xchg
sub
shlb
pop
jecxz
push
or
mov
movsl
aas
mov
jg
sbb
xchg
dec
mov
push
adc
dec
dec
pop
mov
sbbl
mov
or
push
sti
and
cs
mov
mov
and
inc
fimull
mov
push
jo
push
lea
jmp
jae
xchg
cmp
cltd
icebp
outsl
popf
pop
repz
pop
jns
pop
adc
lods
mov
mov
push
out
mov
loop
loope
fbld
mov
aaa
adc
inc
sub
or
shl
fwait
and
pop
pop
loop
cmp
or
mov
fcoms
mov
shl
ss
mov
ljmp
inc
mov
aam
ror
mov
fcomi
push
loope
loope
mov
pusha
adc
sahf
and
xor
dec
fiadds
push
femms
mov
out
mov
dec
popf
dec
lods
or
inc
gs
mov
iret
mov
pushf
into
cmp
push
xor
test
ret
and
mov
cmp
push
dec
jae
jae
jp
xchg
int
jge
pop
stc
pushf
sar
add
int
fnstcw
mov
push
and
jp
mov
inc
filds
xor
mov
mov
stc
mov
push
or
mov
mov
dec
lods
in
inc
or
xchg
or
mov
data16
icebp
dec
lods
fdivrl
sbb
adc
jp
fsubs
in
loope
mov
mov
adc
pop
shrl
mov
enter
mov
dec
pop
jle
pop
leave
stc
pushf
out
shll
pop
pop
fsub
aad
cmpsl
sbb
loop
clc
xchg
test
fcomp
and
push
xor
jg
and
adc
clc
ss
mov
pop
shrb
adc
icebp
mov
push
daa
in
mov
outsl
jmp
es
jp
lahf
inc
stc
ljmp
and
scas
push
jne
test
jne
call
mov
sub
loope
scas
cmpsb
shll
pop
xor
out
or
mov
mov
outsb
pop
mov
push
xor
fs
iret
pop
jae
out
stc
les
dec
mov
enter
jne
xchg
cwtl
add
pop
adc
frstor
mov
mov
fwait
add
rorb
pop
cltd
nop
lcall
enter
pop
jle
aam
sahf
adc
jne
mov
mov
mov
jl
fstpl
outsb
push
jl
sub
push
fidivl
lock
pop
pop
test
mov
lcall
pusha
sahf
out
add
xchg
sbb
popf
mov
das
out
scas
mov
dec
pop
das
xchg
es
jp
mov
lret
fcoml
cmp
cmp
fldl
mov
scas
pop
bound
int3
mov
aad
mov
xchg
lahf
adc
lahf
pusha
dec
jne
pop
cmp
jmp
xchg
pop
mov
and
push
nop
mov
pop
dec
sbb
inc
call
aam
jb
inc
clc
hlt
fdivl
or
stos
xchg
and
into
pop
clc
pop
mov
in
mov
mov
repz
mov
add
pop
mov
dec
xchg
jnp
mov
and
dec
sub
dec
add
cmp
leave
fdiv
xlat
sub
fsubs
fmuls
mov
mov
aas
es
pop
mov
js
jb
inc
mov
mov
pop
bound
fdivl
inc
out
lahf
mov
shll
insb
and
push
fmull
push
nop
mov
push
dec
out
stos
ret
jnp
lods
or
call
dec
ret
into
dec
dec
and
scas
filds
out
imul
dec
addl
test
imul
incb
inc
pop
sbb
aas
aas
pop
sub
lods
outsb
jno
dec
lret
daa
cltd
or
dec
in
inc
inc
inc
jp
test
in
inc
xlat
jmp
dec
adc
xchg
and
sub
daa
push
jno
pop
push
fcoml
xor
idiv
andl
jp
ret
xchg
lret
shrl
push
mov
jno
int3
adc
rcl
call
cmc
lock
inc
stos
icebp
or
add
add
cmpb
mov
jns
movsl
cmp
jne
orl
shl
popw
ret
outsb
add
call
repnz
pop
and
aaa
dec
sti
imul
mov
fldenv
mov
int3
fwait
ud0
push
std
pop
push
in
dec
sub
cmp
xchg
jbe
and
adcb
push
repz
push
xlat
les
sbb
sub
mov
scas
movsb
outsb
insl
pop
jnp
inc
dec
add
cmc
push
mov
shrb
mov
pushf
arpl
inc
fwait
int
fmull
notl
repz
stc
cmp
and
add
cmpsb
lods
loop
pop
mov
mov
jl
sbb
loop
or
push
stc
stos
pusha
jnp
repnz
das
fs
ret
enter
push
into
mov
imul
jbe
int
mov
sub
adcb
fs
sub
das
insl
adc
inc
aas
subb
mov
cmp
std
sbb
pop
lcall
mov
push
xor
out
out
pop
pop
ds
mov
jle
pop
div
aad
fisttps
lahf
sbb
loopne
test
std
mov
vmovupd
jae
mov
push
ss
bnd
es
mov
and
rcrb
mov
mov
pop
sbb
push
stos
aam
push
jb
lret
lea
cltd
leave
and
aaa
jbe
sub
jns
loopne
jp
das
sub
ret
xchg
cli
test
cmp
and
iret
adc
mov
mov
mov
daa
ret
les
push
fwait
adc
jecxz
inc
jb
inc
das
add
sub
test
rcr
jle
jnp
mov
mov
addr16
in
adc
push
pusha
and
jae
roll
cmp
ds
dec
fstps
leave
xor
sbb
cmp
jo
jnp
cltd
or
adc
stos
out
hlt
test
imul
enter
mov
jae
pop
xchg
mov
or
aas
int
loop
gs
popf
inc
mov
popf
xchg
xor
push
es
fcompp
outsb
repz
mov
pop
cmp
arpl
jns
and
cld
lods
repnz
fidivs
leave
std
in
lods
pop
push
test
lock
jne
pop
push
aam
pop
mov
push
and
jne
dec
testl
shr
scas
loop
xor
lock
movsb
sahf
loopne
mov
call
inc
push
jp
scas
or
out
ret
mov
faddl
into
sbb
clc
jb
mov
add
cwtl
mov
cmpsl
add
push
cmp
fwait
testl
jmp
and
cmp
add
or
cs
outsl
adc
cmp
stos
cmpb
inc
inc
pop
lods
inc
xchg
dec
xchg
ret
divl
jne
and
and
sarl
stos
enter
addr16
rcr
mov
mov
loopne
stos
loope
loopne
mov
in
jecxz
loope
cs
mov
rcll
outsl
iret
push
rolb
jae
aad
and
lods
in
test
mov
cli
and
idiv
push
mov
sbb
mov
sub
stos
xchg
movsb
xchg
aaa
adc
xchg
xchg
dec
pushf
pop
and
out
jmp
lahf
cltd
sbb
mov
out
adc
sbb
push
or
xlat
pop
inc
xchg
sub
cwtl
out
xchg
push
sub
jecxz
les
mov
les
lcall
ret
nop
fsts
xorl
dec
adc
cmova
pop
icebp
test
jne
loope
pop
int
fistps
mov
sub
int3
inc
ss
std
inc
dec
insl
adc
out
inc
push
je
mov
mov
push
jge
rorb
pop
leave
in
movsb
movl
pop
fld
ja
stos
rcr
aaa
lret
cmpb
mov
out
mov
xchg
gs
or
or
leave
out
inc
fstl
jl
rolb
imul
sub
xor
cld
stos
test
jg
xor
ret
add
push
inc
inc
jnp
jb
bound
cmp
loope
xor
adc
lret
lea
mov
fwait
les
bound
lds
push
pop
jae
testl
jmp
mov
xchg
fstl
jb
or
dec
int3
pop
aad
outsb
add
dec
addl
repnz
outsl
mov
cmpsb
lock
mull
cwtl
stos
add
in
push
sub
adc
xchg
insl
mov
adc
or
leave
out
loopne
fsts
mov
orl
inc
mov
xor
add
outsl
fsubs
cwtl
adc
sub
add
shrl
aad
pop
popf
jb
and
lods
arpl
mov
cmp
insb
iret
adc
add
addr16
adc
sbb
xchg
jno
scas
sub
xchg
stos
mov
jp
fstpl
jne
je
andl
loop
or
push
fldcw
sub
clc
lds
mov
repnz
push
in
mov
mov
jb
paddd
mov
push
cmp
mov
dec
shll
and
mov
inc
mov
xor
das
xor
dec
inc
lcall
dec
add
ja
xor
ljmp
mov
mov
in
cmp
sbb
pop
shlb
jge
or
lret
mov
mov
mov
hlt
sbb
hlt
sbb
pop
jp
push
shrl
or
xor
push
pop
sbb
cmp
mov
xchg
mov
jo
mov
push
xor
jbe
and
fiadds
jl
ljmp
les
pop
adc
add
mov
clc
inc
lahf
xchg
jle
xchg
adcb
divb
push
popf
cmp
rclb
enter
mov
fs
dec
jo
adc
fmuls
cwtl
fwait
cmpsb
fists
xchg
push
lret
push
xchg
fldz
or
inc
movsb
adc
pop
jle
push
cmp
imul
mov
sub
adc
sbb
adc
xchg
xor
fcoml
mov
adc
lock
mov
aad
sub
inc
xchg
in
stc
cmp
fisttpl
xchg
dec
inc
xor
pushf
pop
es
pop
sub
call
sub
lret
adc
fs
sahf
into
mov
xlat
jne
popf
mov
mov
dec
cmp
aas
and
inc
ret
sub
push
push
scas
xor
inc
iret
or
cmpsb
pop
movsb
outsl
cmp
add
int
push
data16
clc
adc
push
inc
ficompl
dec
add
adc
cwtl
mov
or
hlt
mov
pop
shll
jne
dec
lods
ret
add
mov
js
mov
mov
gs
mov
mov
dec
cmp
sub
xor
leave
push
push
sub
int3
mov
and
ficoms
push
sbb
mov
fidivrs
xchg
cmp
inc
mov
xor
inc
dec
fdivrs
lock
mov
es
adc
fwait
lret
mov
in
fsts
sbb
into
adc
mov
sub
add
inc
enter
out
iret
fs
and
mov
sarl
mov
push
jp
xor
and
or
aas
jle
stos
push
cmp
cltd
pop
iret
mov
cmp
push
add
xor
fiaddl
sub
test
jae
pusha
lcall
jbe
jmp
xchg
add
and
cs
bound
jle
dec
adc
mov
inc
mov
jle,pn
out
add
jmp
jge
mov
stos
lahf
loope
test
cld
cli
fwait
cmpsb
test
add
fwait
and
int
xchg
imul
lret
cmpsl
ja
push
dec
arpl
adc
mov
into
pop
gs
fisttpl
jae
mov
push
jno
lea
lret
mov
inc
shl
mov
push
add
add
jo
gs
jmp
ljmp
push
jb
mov
shrb
xchg
inc
cmp
std
popf
out
out
sub
out
in
pop
jne
test
pop
mov
outsb
sbb
push
jl
in
in
inc
add
push
sbb
popf
xor
jl
mov
mov
rcl
out
testb
dec
repnz
data16
daa
push
outsb
in
jno
popf
es
add
add
mov
dec
out
xor
push
lods
sahf
enter
iret
cmp
aas
push
mov
and
lcall
jecxz
cld
rorb
pop
and
ds
inc
sbb
jl
dec
loop
push
dec
notl
mov
leave
clc
jnp
enter
mov
ja
mov
cmc
std
xchg
push
addb
adcl
aaa
push
inc
outsb
push
jle
dec
ja
xchg
mov
out
xlat
out
neg
pop
cs
ds
push
aaa
push
inc
outsb
push
jle
dec
ja
xchg
mov
out
xlat
out
neg
pop
cs
ds
push
aaa
push
inc
outsb
push
jle
dec
ja
xchg
mov
out
xlat
out
neg
pop
cs
ds
push
aaa
push
inc
outsb
push
jle
dec
negl
or
pop
add
xor
and
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
sub
int
frstor
or
popf
lods
pop
mov
dec
in
sub
fstpl
or
lods
jge
dec
lea
lods
popa
mov
pop
in
pop
std
aas
int
fstpl
or
mov
movsl
dec
xchg
pop
xchg
xor
sub
jg
jb
mov
outsl
mov
outsb
cmpsb
jb
mov
xor
into
pop
data16
mov
repnz
cmpsb
in
xorl
dec
inc
jb
bound
xchg
addl
sbb
int3
std
and
aad
mov
xorb
insb
xchg
xor
xlat
jge
daa
mull
test
sbb
add
pushf
mov
insl
lods
mov
xor
addl
mov
mov
shrb
add
and
enter
cmc
mov
mov
in
das
ljmp
rclb
add
push
xchg
daa
mov
int
add
fsubs
int
mov
jae
cmp
jge
dec
lea
lods
insl
mov
inc
in
xor
fstpl
in
push
mov
sub
sbb
in
add
cmp
bound
xchg
pop
mov
adc
dec
stc
pop
scas
enter
int3
sub
pop
mov
cmp
inc
in
pop
std
fs
jge
dec
lea
lods
insl
mov
pop
in
sub
fstpl
or
lods
jge
dec
lea
lods
insl
mov
pop
in
sub
fstpl
mov
cmp
mov
shll
hlt
inc
inc
add
lret
push
iret
or
decb
inc
inc
test
enter
ljmp
mov
popf
push
call
push
inc
mov
test
xchg
mov
loop
cmp
push
xchg
sbb
push
testl
stos
pop
inc
sub
adc
shll
inc
lods
pop
mov
add
fcmovnb
rorl
push
push
mov
sub
pop
lods
xchg
dec
sub
mov
idivb
in
pop
xchg
int3
aas
mov
inc
mov
sub
xchg
mov
movsl
sahf
mov
add
nop
pop
lods
inc
adc
cli
mov
dec
push
fcmovne
xchg
dec
and
and
shl
daa
mov
ficompl
lods
sbb
out
push
jno
xchg
push
in
jp
mov
int3
mov
decl
sub
rol
xchg
ret
shll
adc
je
pop
cmpsb
rolb
ds
mov
scas
sub
and
movsb
mov
mov
fimull
xchg
push
xchg
clc
xchg
jl
mov
int
ljmp
adcl
xchg
sub
xchg
cmpsb
ljmp
stos
and
into
add
test
jecxz
mov
mov
inc
mov
stc
xor
jne
mov
popf
mov
movsb
pop
add
call
addr16
outsl
mov
cwtl
stos
mov
sub
roll
test
mov
dec
outsl
cld
pop
mov
adcb
test
push
mov
mov
mov
jnp
cmp
dec
xor
test
xchg
dec
repnz
pop
adc
aam
or
push
shl
dec
int3
leave
lret
jne
jo
fisttps
bound
lret
sbb
pop
adc
xchg
fsubrs
std
ss
clc
repnz
push
xchg
jo
adc
fisubrs
inc
dec
dec
and
xor
imul
std
int3
ficompl
xor
nop
pop
cmp
pop
movsl
movsb
stos
aas
dec
push
lcall
adc
pop
push
add
or
push
sbb
test
xor
cmp
cmpsb
xchg
aam
xchg
cmc
jo
fldl
or
fisubl
rorl
leave
and
mov
aaa
mov
div
add
rorb
imul
adc
sub
jle
inc
test
loop
addr16
mov
jb
and
and
xor
jg
and
cmpl
leave
in
mov
nop
mov
mov
int
inc
inc
and
stos
pop
movsl
pusha
add
fsubs
xchg
push
movsl
xor
clc
mov
xor
xor
insl
xchg
push
xchg
pop
mov
test
xchg
push
jle
ffree
sub
repnz
jle
dec
jnp
pop
mov
jae
xchg
jbe
sbb
mov
notl
mov
inc
and
xlat
jns
xchg
pushf
fists
push
cmp
lds
enterw
das
jbe
dec
divps
test
jle
icebp
jp
rclb
in
mov
lret
jle
and
mov
pop
andl
inc
rclb
inc
fstps
cmc
cmc
fisubl
bound
fisttpll
cmp
inc
lods
or
fistpll
push
icebp
push
ret
rorb
or
dec
in
sub
outsb
rcrb
sub
cmp
push
ret
lds
inc
jne
sub
pop
jp
popa
mov
js
int3
aas
or
jo
jmp
cmp
fdivs
fadds
outsl
call
adc
shlb
pushf
int3
jnp
lea
lock
fnstsw
clc
xchg
fisubl
sub
mov
je
push
add
ficompl
aam
mov
js
pop
rorl
mov
xor
stos
cmp
dec
pusha
jp
aam
xchg
dec
movsb
rcrb
cmp
mov
aam
ret
mov
lret
and
sbb
push
clc
sub
arpl
stos
addb
shll
ljmp
pop
aam
in
cld
lahf
adc
loopne
loop
popa
push
inc
mov
popf
aam
imul
std
mov
xchg
fildll
sbb
addr16
mov
fisttpl
sahf
sahf
xchg
movsl
lret
mov
out
cmp
or
mov
or
test
pop
aad
in
daa
popa
cmp
jns
push
lock
mov
xchg
mov
adc
push
pop
ss
movsl
mov
lods
pop
test
sbb
fcomps
xchg
xor
push
out
fdiv
mov
mov
out
dec
cs
lahf
inc
dec
dec
mov
jb
leave
mov
pushf
pop
xchg
cmc
mov
sub
loope
fldt
dec
jmp
fldl
dec
dec
into
pop
push
inc
xchg
cmp
test
roll
or
scas
incb
stc
mov
test
cmpsb
pusha
fildl
daa
push
sub
popf
xchg
add
fsts
cmp
sub
pushf
push
rorb
mov
xor
jl
dec
mov
xor
push
rcll
inc
adc
movsb
imul
pop
insb
xchg
fisubrl
jns
mov
jo
mov
mov
adc
mov
mov
pand
lds
cmp
or
ficomps
sbb
addr16
sbb
mov
sbb
orb
xchg
or
xchg
sub
iret
out
jl
insl
jp
mov
pushf
pop
jmp
pop
gs
jb
jns
and
in
out
sbbl
nop
sbb
data16
or
pop
push
jno
jo
mov
and
or
decl
scas
cmp
mov
ljmp
mov
jl
mov
mov
push
int3
jmp
and
xor
cltd
and
push
dec
jbe
pop
subb
clc
xchg
dec
into
outsb
adc
bound
sbb
out
jb
add
inc
icebp
addr16
iret
mov
sahf
pop
sbb
cmp
sahf
mov
mov
push
je
scas
fiaddl
push
and
xchg
jp
cmc
jns
lahf
enter
mov
sbb
ja
pop
leave
mov
or
int3
loop
jl
pusha
out
push
xlat
mov
inc
insb
loop
loope
mov
sar
in
hlt
adcl
cli
notb
push
inc
andb
mov
clc
mov
imul
lret
int
ror
jl
cs
int3
push
leave
and
addl
pop
jl
iret
mov
nop
leave
sbb
mov
call
add
insb
mov
pushf
inc
jne
repz
movsl
nop
sub
jge
loope
pop
pop
add
inc
int
sub
and
clc
into
sti
inc
rcrb
or
pop
mov
jg
pop
ljmp
scas
repnz
xor
fmulp
aas
or
sbb
sub
data16
sbb
push
jno
andl
js
mov
dec
and
xor
loopne
int
jecxz
fistl
ret
into
icebp
mov
xor
ljmp
fst
mov
or
push
adc
inc
adc
sub
push
lods
rcr
lods
mov
test
and
sar
repz
jae
out
fwait
stc
sbb
sub
push
jle
xor
pop
lds
mov
sub
imull
movsl
int
int
pushf
mov
jns
gs
jecxz
cltd
lds
imul
fadds
addr16
es
pop
out
mov
xchg
call
aad
mov
pop
fs
pop
jne
pusha
pop
int
repnz
jno
xchg
bnd
sbb
shrb
jge
aam
and
enter
outsb
js
fsubr
mov
lods
push
sarl
mov
sti
in
lahf
jbe
inc
jg
lahf
adc
or
pop
pop
mov
into
fcmovbe
stc
fwait
aas
stos
or
inc
movsl
cmc
and
push
adc
mov
insb
mov
jbe
sti
cmp
inc
mov
std
jecxz
test
adc
daa
loopne
xor
sub
insl
xor
push
cltd
fldl
dec
adc
stos
subb
cli
xchg
flds
add
shll
inc
dec
or
mov
gs
ss
stos
cmpsb
push
cli
movsl
jp
rcrl
lods
in
dec
cwtl
xchg
pop
es
cmp
loopne
or
or
dec
enter
and
and
push
xor
pop
sarl
mov
mov
es
mov
pop
push
sub
enter
ds
mov
int
jmp
ja
add
inc
shr
and
sahf
and
subb
xlat
ja
xchg
in
and
test
mov
aaa
cmpsl
cltd
dec
adc
jo,pt
and
fwait
into
xlat
cli
jb
shll
fcomps
sub
addl
out
xchg
insl
add
jp
ds
cmp
ret
repnz
out
mov
sub
pop
cmpsl
push
or
subb
xchg
es
jne
in
inc
aam
pop
mov
mov
pop
rcr
xchg
add
icebp
dec
jecxz
pop
pusha
movsb
jno
inc
jge
push
and
mov
test
add
push
fdivl
xor
test
lods
outsl
mov
cmpsl
or
adc
mov
mov
sub
in
stos
gs
out
cmp
loopne
dec
inc
lock
lret
stos
push
sbb
dec
xor
repz
push
and
sbb
and
push
scas
stos
sahf
jmp
stos
out
mov
es
repnz
in
adcb
repnz
bound
out
add
fistpll
pusha
loopne
push
lcall
mov
sub
jmp
out
adc
lahf
insb
lret
dec
int
mov
or
subb
gs
sbb
jmp
dec
icebp
imul
mov
cmp
in
fists
mov
mov
and
cs
push
test
pushf
mov
jno
mov
push
push
cwtl
daa
orb
iret
cmc
sub
and
add
stos
xor
es
sub
fs
pop
mov
fdivl
rolb
push
inc
movhps
loop
imul
xor
mov
lcall
cmp
adc
call
sets
into
jge
mov
xor
mov
mov
shll
lahf
push
xchg
jbe
xor
test
or
inc
fstpl
inc
rorb
xor
leave
lock
and
stc
lods
int
in
lret
hlt
jmp
aad
aam
sub
sub
pop
test
push
sbb
dec
inc
sti
outsb
jne
les
out
push
sub
cmp
repnz
scas
dec
mov
lcall
or
clc
jge
pop
sub
lds
sbb
adc
mov
mov
ljmp
jecxz
mov
mov
push
cmpsl
loop
in
add
push
gs
popa
jnp
les
pop
sbb
int
repz
lea
mov
stos
or
sub
xor
inc
fisubl
stos
test
pop
adc
mov
mov
pushf
add
cmpsl
fs
mov
ds
aad
cli
add
mov
dec
lret
bound
lret
add
mov
push
or
mov
xchg
inc
mov
mov
jge
cmp
xchg
lock
jle
arpl
adc
jmp
add
cld
push
sub
push
outsb
pop
daa
int
mov
mov
sub
lods
sub
lahf
inc
sti
or
jae,pn
test
pop
push
mov
addr16
ja
jae
sub
mov
xor
dec
lock
push
lret
xlat
mov
inc
lds
adc
pop
mov
out
int
std
fs
sub
rcrb
xchg
lahf
xchg
mov
jns
adc
mov
pop
sbb
sub
push
popl
cmpsl
jno
insb
and
mov
loop
inc
fs
ficoms
test
sbb
push
adc
push
mov
fildl
cmp
jge
dec
push
xor
sub
stos
xor
mov
repnz
xor
push
lcall
mov
rclb
add
loop
xchg
fxch
push
mov
cmp
pusha
mov
mov
mov
enter
jmp
mov
cmp
popa
fdivrs
cmp
in
lea
pop
sbb
lods
jo
daa
push
adc
ficoml
mov
cli
push
jge
mov
aaa
inc
and
int
sbb
lods
leave
sbb
mov
cmp
xchg
insl
add
gs
loope
sbb
dec
out
ds
sbb
push
inc
sbb
popa
mov
mov
mov
cmpsb
ret
les
in
add
popl
movl
xchg
negl
cmp
xor
mov
aas
daa
inc
cmp
and
imul
and
or
scas
dec
loop
xchg
mov
call
cmpsl
xor
icebp
dec
sarl
xchg
jl
ret
xor
sub
faddl
int
repnz
xor
cmpsl
sbb
out
sti
adc
dec
stos
insl
mov
adc
push
or
popa
mov
mov
or
out
cmpsl
mov
cld
sub
int3
adc
pop
push
pop
leave
jmp
lahf
mov
sub
xchg
push
fnsave
sahf
xchg
xchg
imul
ljmp
icebp
aam
out
jne
adc
mov
and
in
sbb
lds
pop
pop
rorl
cmp
mov
mov
xchg
je
ret
and
mov
and
jo
mov
xchg
js
pop
lret
ds
fisubrs
mov
mov
lcall
mov
jecxz
in
mov
and
mov
inc
pushf
rorl
stos
mov
mov
fldl
aam
cmp
insb
lret
mov
pop
fwait
sbbb
imul
sub
mov
je
push
add
call
bound
cmp
add
call
jecxz
dec
in
xchg
es
arpl
and
out
push
mov
pop
icebp
jle
icebp
or
jecxz
in
bound
lea
adc
int
inc
loopne
aas
call
gs
faddp
dec
aas
xchg
mov
adc
fld
or
or
rcrb
test
jl
sub
aas
xchg
out
scas
ret
and
pop
outsb
dec
in
cmp
or
addr16
ret
jl
data16
movsb
or
xchg
mov
in
imul
mov
mov
jbe
pushf
jns
lock
xor
adc
mov
mov
mov
imul
push
mov
inc
pop
adc
imul
bound
cli
adc
lret
rorb
mov
fmulp
gs
das
pop
pop
lret
in
outsl
int3
and
push
pop
das
fsubr
xchg
cmp
shlb
push
pushf
in
popl
insb
mov
mov
notb
sub
mov
hlt
dec
jmp
clc
pusha
cmp
cltd
lcall
stos
orl
add
outsb
pop
rcrb
mov
pop
inc
in
fidivrl
arpl
sbb
push
cmpsb
aam
aas
ss
push
cmpsb
pop
mov
rcll
cmp
pop
mov
adc
xchg
xchg
insl
loop
sub
lcall
and
adc
out
cmp
ljmp
inc
xor
mov
and
imul
add
daa
aaa
nop
cmp
imul
outsl
jg
insb
adc
and
inc
pop
add
lcall
or
int3
sbb
dec
mov
arpl
sbb
loopne
shlb
stc
rcr
lea
clc
out
dec
cmpl
xchg
sub
pop
into
lret
fsubs
push
je
out
aas
sub
jge,pt
add
mov
inc
call
mov
addr16
inc
aaa
jg
testl
repz
test
out
test
std
sub
inc
imul
lcall
push
rcll
xchg
movsl
xchg
cmp
faddp
pop
shr
jnp
sub
add
popf
jg
mov
insl
sbb
mov
xchg
hlt
leave
je
sbb
scas
mov
movsl
dec
jbe
pop
popa
sbb
movsl
and
test
inc
jmp
dec
sub
iret
iret
push
dec
jns
xchg
clc
sbb
xchg
sub
aas
aad
fsubs
movsb
fnstsw
les
push
jecxz
icebp
jo
daa
hlt
and
into
fnstcw
push
aaa
sbb
dec
mov
ficompl
lahf
out
xor
leave
ss
ret
into
cmp
fmull
es
or
sbb
xchg
fiaddl
inc
popa
sahf
xorb
mov
sbb
cmc
pusha
dec
xchg
jb
dec
or
sbb
loope
cmp
pop
loop
sub
pop
repnz
xchg
xor
sbb
pop
sbb
subb
inc
bound
scas
add
les
xchg
in
jmp
inc
sub
jae
stos
cmp
sarl
inc
mov
mov
lds
mov
ret
mov
inc
arpl
push
mov
cmp
idivl
add
xchg
mov
cmp
jg
mov
mov
sbb
dec
pop
sub
hlt
out
jmp
fsubrl
int
fildll
fnstcw
pop
xor
lahf
dec
jg
fs
dec
mov
jmp
les
insl
into
dec
addr16
in
xchg
push
aam
sub
or
fsubrs
hlt
mov
gs
mov
es
sti
mov
repnz
cmp
aaa
xchg
decl
movb
sub
mov
cwtl
test
push
push
mov
andl
arpl
add
outsl
xchg
daa
mov
daa
jg
dec
sahf
mov
push
xchg
jb
divb
mov
mov
push
icebp
sbbb
xor
pop
pop
xor
pop
stc
sub
repz
imul
outsl
mov
pop
fildl
in
add
mov
loop
jbe
dec
xor
and
or
cmp
adc
jmp
pop
scas
std
jo
push
fiadds
jmp
jle
push
pushf
xor
jne
xor
xor
pop
jecxz
or
mov
repnz
rcl
mov
mov
jo
stos
lret
xchg
mov
cltd
mov
sbb
lahf
pop
movsb
push
incb
mov
imul
jmp
sub
ud2
push
pop
sub
fisubl
mov
bnd
ret
sbb
aad
or
lds
jnp
push
push
mov
ror
pushf
or
jp
cld
mov
addr16
add
scas
push
jmp
fldcw
jno
mov
cmp
daa
sti
enter
pop
test
cmp
mov
cmc
ss
inc
push
ficoml
push
dec
in
mov
bswap
push
pop
jne
sub
sbb
sub
fmuls
imul
pop
sub
int
jmp
and
jp
inc
aam
out
int
pop
ja
and
setnp
xor
sarb
cmp
mov
out
repnz
rolb
sbb
mov
imul
mov
ret
andb
ret
dec
fldt
xor
popf
insb
in
cmpsb
push
mov
cmp
xor
shll
cmp
pushaw
loopne
sub
push
or
pop
test
inc
and
ljmp
jle
and
in
pop
push
cmpsl
xor
push
dec
xchg
push
lcall
xor
out
push
pushl
mov
add
in
adc
dec
loopne
adc
fcmovnbe
fisttps
in
mov
fists
add
push
sub
test
add
sub
loope
mov
push
xor
cwtl
in
pop
in
mov
js
add
pop
sbb
push
mov
divb
and
gs
mov
jne
sub
dec
or
jecxz
repz
cmp
xchg
scas
mov
in
mov
push
jns
mov
or
fistps
xor
xor
mov
push
hlt
sbb
into
mov
ret
aas
jcxz
inc
jno
ja
rolb
mov
jne
mov
and
push
sahf
push
enter
daa
push
mov
jp
pop
lret
or
aaa
mov
pop
movsl
inc
test
pop
pop
xchg
nop
es
adc
inc
xchg
sar
xchg
loope
inc
mov
mov
negl
push
cs
mov
pop
or
repz
nop
dec
sbb
ret
xchg
imul
aam
xchg
jecxz
dec
daa
outsl
jmp
xor
mov
pop
scas
jp
hlt
js
loopne
sahf
xor
xor
sbb
mov
lods
insl
mov
pop
in
sub
fstpl
or
lods
jge
dec
lea
lods
insl
mov
pop
in
sub
fstpl
or
lods
jge
dec
lea
lods
insl
mov
pop
in
sub
fstpl
sub
leave
sbb
mov
lods
insl
mov
sub
jb
aad
mov
mov
shrl
or
and
jae
arpl
xchg
lds
xchg
roll
int
adc
jne
imul
jge
inc
xor
xor
std
aad
jecxz
mov
adc
sub
push
adc
add
mov
loopne
mov
test
je
bound
rcrl
cmp
dec
in
mov
push
nop
cmp
pop
pop
mov
or
sbb
in
insb
decl
inc
adc
cs
cmp
push
ljmp
add
add
mov
fstl
cmpsl
and
cmpl
mov
dec
xor
inc
int3
lcall
mov
jle
dec
add
ret
push
pop
push
xor
shr
cmp
out
cmp
sbb
pushf
xchg
inc
subl
or
xor
push
xor
pop
fsubl
adc
ret
mov
mov
stos
insl
xor
outsl
sbb
push
mov
fists
scas
clc
xchg
jae
xchg
add
adc
sub
pop
dec
or
rclb
mov
not
push
jb
jbe
popa
and
adc
push
inc
adc
fisttps
ret
mov
movsl
jecxz
adc
jne
and
jae
arpl
xchg
lds
xchg
roll
jecxz
adc
jne
and
jae
arpl
xchg
ljmp
mov
lret
pusha
fdivl
jns
mov
push
clc
jge
dec
mov
jl
roll
jle
sub
lcall
nop
jp
subb
cmc
pop
push
gs
out
push
daa
inc
mov
data16
mov
ret
sbb
inc
pop
and
scas
cld
iret
jb
inc
mov
stos
mov
xchg
out
xchg
jb
in
shrb
cs
in
cli
push
jecxz
inc
xlat
out
jae
dec
js
pop
sbb
inc
mov
xchg
cmp
pop
and
xchg
pop
jnp
adc
call
ds
shrl
cld
push
mov
mov
adc
pushf
mov
mov
and
ljmp
mov
pop
jbe
int3
je
aaa
push
ss
mov
jns
shll
loop
mov
adc
not
ds
pop
and
stc
cwtl
xchg
push
add
lods
pop
imul
les
call
cmp
inc
xchg
js
or
aad
out
scas
add
cmp
jns
jl
aaa
or
imul
mov
cmp
mov
inc
stos
push
xchg
mov
xor
xchg
rcrb
fimuls
ds
cld
or
inc
lods
or
lcall
sub
movsl
adc
shlb
outsb
mov
movb
pusha
or
and
out
lahf
pop
hlt
scas
sub
scas
sbbl
cmp
xor
nop
push
add
js
cmc
inc
mov
fidivrl
add
mov
sub
insl
push
lcall
stc
push
shrl
shll
rolb
clc
lds
xchg
xor
dec
cmp
jl
adc
cltd
inc
mov
jecxz
lds
xor
inc
or
aaa
lods
outsl
pop
xchg
pusha
ret
and
outsb
arpl
sub
stos
jo
push
mov
and
lock
iret
jnp
inc
fcompl
test
push
xchg
add
clc
and
sub
shll
dec
adc
fstpt
mov
cmc
sbb
cmc
das
sub
inc
loop
out
sub
out
lock
lret
repz
fisttpll
enter
add
xchg
sbbl
in
xchg
pushl
pop
call
popa
pop
jle
rcll
adc
dec
xchg
xorb
add
push
cmpsb
les
mov
mov
jae
jl
cmp
or
daa
repnz
sub
rorb
xor
divl
lds
hlt
jne
mov
fmull
pop
push
pop
pop
pop
stos
loope
call
jl
adc
dec
js
or
orb
adc
push
jmp
xor
adc
mov
imulb
dec
mov
sbbl
out
imull
inc
hlt
out
sbb
imul
bt
in
popf
lret
std
aam
fildl
mov
es
add
mov
adc
inc
cmc
mov
jge
divb
push
ror
sub
cltd
add
scas
mov
jl
pop
sbb
mov
andb
mov
sbb
ja
ficoml
iret
cmpsb
push
xor
xchg
jp
pop
and
or
sbb
mov
pushf
pop
fs
clc
xchg
pop
out
cmpsl
pop
pop
push
popf
push
outsl
bound
mov
cmc
xchg
movsl
hlt
inc
les
flds
cmpsb
pop
arpl
or
lock
mov
fadds
test
push
adc
adc
inc
push
jmp
inc
add
xor
frstor
inc
out
mov
mov
int
ljmp
or
sbb
and
pushf
shlb
dec
mov
xchg
stos
mov
mov
mov
inc
test
aas
cld
cltd
xchg
dec
and
dec
out
sub
mov
jmp
out
jne
pop
ds
fstpl
lahf
jmp
movsl
jne
pop
jbe
cmp
fstp
xor
imul
and
mov
pop
pop
cwtl
aad
popf
xchg
mov
sub
xor
bound
in
out
cltd
sbb
lcall
clc
daa
faddl
mov
iret
cmc
mov
dec
ret
or
pusha
gs
mov
xor
xor
in
popa
stos
cmp
outsl
pop
jnp
xchg
adc
bound
adc
jp
cmp
and
or
nop
movsb
xchg
mov
and
adc
movsl
test
fcomps
icebp
xchg
sti
sub
ljmp
mov
ljmp
jno
adc
out
or
mov
clc
nop
and
lea
fstps
arpl
out
jl
lock
imul
xchg
rolb
sub
mov
rolb
fs
outsl
sbb
aad
loope
incb
mov
lock
inc
mov
dec
sub
xlat
aas
ljmp
decl
insl
and
mov
nop
mov
pop
imul
mov
pop
std
mov
xchg
into
jmp
push
dec
and
pop
lock
cmc
popa
out
sti
pushf
int
adc
push
push
cmc
out
push
sub
dec
ds
push
dec
adc
fldl
sub
ficomps
pop
lret
ds
das
loop
lock
mov
push
je
rcl
mov
js
or
mov
sahf
lock
outsl
sub
scas
mov
and
add
sub
pop
nop
rcrl
cmpsb
pusha
xchg
adc
in
rcrb
sbb
jge
icebp
shl
fdivl
mov
repnz
and
and
popf
mov
arpl
rorl
mov
push
sub
cwtl
insl
inc
sbb
jle
push
xchg
xlat
mov
push
cmpsl
jl
int3
cwtl
fnstenv
and
lahf
loopne
es
adc
cmp
les
jle
push
pop
or
add
pop
sub
push
rcll
and
fs
repz
popa
jnp
mov
push
fs
push
ffree
addr16
aas
pop
sbb
mov
mov
xchg
stos
adc
test
mov
sub
sub
jecxz
je
lcall
int3
add
ljmp
dec
mov
mov
xor
mov
out
cmp
add
pop
jns
faddl
push
fs
pop
inc
sti
aam
inc
insb
les
sub
sub
jecxz
jns
mov
cmpsl
sbb
push
sbb
dec
lds
outsb
mov
in
sti
pushf
or
cmp
inc
jno
mov
imul
idivl
mov
icebp
jns
add
and
adcb
adc
call
sub
dec
repz
jg
scas
fdiv
push
jmp
adc
test
or
orb
sub
jp
js
loope
mov
and
lcall
jmp
test
mov
sub
adc
shl
out
lea
pop
dec
imul
mov
dec
adc
je
jo
lods
push
adc
xor
jmp
jge
cmpsl
mov
lahf
lods
fdivl
pop
dec
stos
jmp
mov
lret
add
shll
adc
dec
mov
in
lock
inc
jle
cmpsb
dec
push
ljmp
call
insb
addr16
mov
sbb
imul
mov
xchg
adc
or
mov
stos
push
pop
fucomi
repnz
mov
pop
std
loop
loopne
insb
mov
pop
xor
and
push
jge
inc
bnd
jmp
shl
inc
hlt
pop
ret
xchg
cmpsl
sbb
in
out
scas
ds
shll
outsb
xchg
lahf
sub
mov
sub
jae
out
xor
pop
pop
fcompl
and
repnz
cmpsl
add
in
jg
testl
inc
adc
mov
scas
xchg
mov
push
js
popa
pop
testl
mov
adc
add
push
test
cmpsl
push
and
and
adcb
sti
mov
jge
sub
dec
dec
push
cld
addr16
jbe
jg
xor
or
push
pop
pusha
inc
aad
or
and
lods
mov
jnp
dec
cltd
aad
mov
lret
sbb
movsl
dec
cmp
shll
ret
fsub
pop
mov
sub
cli
adc
or
hlt
and
ficompl
shl
pop
fstps
add
fcomps
mov
mov
or
or
push
les
and
ja
stos
fidivs
stos
in
adc
arpl
cmp
rol
insl
mov
in
insl
adc
rol
fldenv
jb
push
mov
fdivrp
ret
mov
add
cld
std
xchg
mov
sbb
sbb
mov
outsb
ss
dec
xchg
cmp
jno
adc
je
sbb
pop
jae
dec
aas
sahf
jmp
jl
loope
jecxz
mov
stc
rcrb
lahf
xchg
add
iret
shll
push
repz
stc
rcl
xor
add
mov
stos
jbe
cld
sub
fwait
addr16
xor
push
jnp
add
adc
mov
jp
dec
mov
and
mov
in
shrb
int3
gs
in
and
test
mov
mov
pop
sahf
cwtl
ss
loope
arpl
sbb
push
inc
jns
cld
ret
arpl
and
sub
pusha
push
lds
scas
push
xchg
jnp
or
xor
pusha
cmp
sbb
xchg
push
pop
dec
out
jmp
hlt
sub
mov
fwait
pusha
dec
push
jno
sarl
inc
pop
ret
cs
test
bound
dec
pusha
mov
cmp
push
les
fdivl
adc
movsl
test
ja
push
xchg
add
push
fisubl
and
stos
test
push
out
and
mov
adc
mov
xor
test
shll
addr16
sub
cmp
xchg
add
movsl
data16
test
dec
leave
sti
xor
lret
mov
xor
pop
or
movsl
mov
scas
ja
out
sbb
fidivrs
cmp
ljmp
jecxz
inc
mov
iret
imul
inc
stos
ja
jl
jae
pop
mov
jp
scas
fsubs
lcall
mov
cmpsb
out
rcrb
fwait
mov
inc
test
xor
rorb
jmp
mov
or
outsb
mov
push
sbb
imull
divl
mov
aas
inc
dec
in
test
sbb
js
outsl
int
test
lret
jmp
sar
mov
xor
loope
lahf
adc
sbb
sbb
mov
push
push
rorl
cmp
adc
mov
repnz
xchg
ret
dec
xchg
lock
mov
mov
xchg
cs
or
out
xor
divl
cmc
fbstp
insl
sahf
sbb
in
test
sbb
xor
dec
mov
iret
and
rcrb
push
and
sbb
cmpsb
test
pop
insb
xchg
in
mov
test
lret
std
call
dec
xlat
fmull
mov
push
loopne
sbb
aaa
ljmp
jmp
jno
test
push
js
mov
sahf
and
outsl
or
pushf
mov
push
inc
stos
xchg
pop
xchg
add
cs
arpl
cs
or
mov
cmpsb
rcr
xchg
popf
fucomip
ret
and
xchg
ret
jns
sbb
sbb
or
test
aas
in
xchg
jecxz
test
mov
aad
adc
shlb
or
jmp
cmpsl
mov
icebp
jg
jl
pop
push
fbld
dec
je
cmpsl
xchg
add
xchg
fs
xor
or
sahf
pop
xchg
jo
pushf
in
and
in
call
aas
data16
sub
jne
jbe
lods
out
orb
mov
stos
jle
sub
int3
and
idivb
and
push
aad
push
lea
rolb
or
inc
in
fdivrl
push
and
and
andb
dec
xor
cmp
pop
cli
dec
dec
pop
dec
jae
ja
adc
orl
movsl
pushf
jecxz
jae
or
outsb
pop
push
dec
push
pop
push
pop
and
pushf
and
inc
xor
jno
pop
adc
and
out
adc
loop
sbbb
inc
mov
push
push
jbe
testl
dec
je
jnp
mov
push
sbb
repnz
andb
jnp
pop
pop
jmp
jl
test
xchg
icebp
push
scas
mov
cmp
outsb
mov
test
xchg
jge
pusha
mov
xlat
mov
pusha
cmp
cmp
pop
jl
jmp
pop
xchg
mov
mov
inc
jae
jl
sbb
lcall
ret
cmp
or
out
int
sbb
int
das
std
andb
insb
aas
dec
jo
cmp
push
aad
je
xchg
jne
push
jecxz,pt
pop
repz
cmc
mov
inc
xchg
in
push
in
popf
mov
sbb
repnz
shr
out
inc
mov
and
pop
cwtl
cltd
incl
arpl
mov
mov
push
test
pop
mov
ljmp
sti
xchg
mov
ret
or
dec
cmpsb
cmp
xlat
cmc
inc
mov
inc
je
mov
jle
test
push
fmull
mov
sub
push
mov
adc
out
out
not
popa
filds
sub
sub
stos
int
mov
xchg
xchg
and
mov
fisubrs
inc
pushf
jbe
pop
das
mov
in
icebp
movsb
dec
popf
mov
jne
lcall
ficomps
pop
movsb
ja
incb
or
mov
hlt
push
scas
cmpl
rolb
test
pop
fwait
xorb
out
stos
cmp
push
rclb
movsb
int3
inc
out
mov
cld
push
test
push
mov
xorl
cltd
int
into
sbb
lcall
push
sub
jb
icebp
cmpsl
jmp
add
adc
es
add
lods
leave
pop
es
bound
enter
test
dec
xchg
ds
pop
imul
lret
fldt
and
imul
push
and
repnz
xchg
movsl
gs
pop
jg
xchg
mov
aaa
push
rcll
aam
adc
xor
pop
les
test
pop
jmp
inc
or
mov
lds
outsb
or
push
sbb
sub
roll
adc
into
sbb
sahf
cltd
fwait
popl
push
and
add
js
mov
rorl
dec
insb
pop
add
pop
cwtl
mov
add
push
mov
lea
adc
fcmove
cmp
push
ds
push
fs
out
pop
fcomi
jb
scas
shr
mov
xor
adc
push
test
cmp
out
or
mov
ja
dec
mov
mov
test
and
ds
out
mov
push
bswap
leave
jle
insb
mov
iret
cmp
jl
cld
addr16
pushf
scas
pop
push
mov
clc
and
mov
daa
or
loopne
mov
imul
popa
call
sbb
and
faddl
sti
and
in
dec
mov
lds
ror
enter
jno
jmp
xchg
lods
nop
hlt
call
cmc
mov
xor
dec
adc
daa
sbb
sbb
jl
test
mov
adc
mov
or
aam
fs
inc
fmull
inc
mov
inc
fldl
pop
jg
outsl
shlb
cmp
lods
int
aad
push
sbb
std
pop
imul
fisubl
rcr
shl
lods
mov
lahf
test
rclb
xchg
test
push
mov
mov
push
daa
das
test
jg
outsl
jle
sti
test
enter
stc
outsb
fisttpll
es
pusha
mov
arpl
imul
iret
or
xor
fstpl
pop
xor
dec
insb
inc
mov
out
xchg
loopne
or
lahf
arpl
inc
roll
ljmp
mov
and
dec
cmc
sbb
and
adc
negb
pop
cmpsb
pop
xor
xchg
add
adc
movsb
mov
xchg
adcb
dec
cmc
xchg
xor
ljmp
pop
mov
xchg
mov
sub
adc
pop
popf
xor
jecxz
hlt
mov
das
test
pop
imul
in
imul
cld
lock
outsb
jae
addb
pop
lods
sub
mov
js
and
imul
cld
and
mov
mov
push
mov
cmp
xchg
push
mov
dec
lds
xchg
mov
sar
js
inc
loopne
jbe
mov
stos
pusha
or
cmp
lret
pop
xchg
lods
inc
test
mov
outsb
scas
andl
sbb
lret
sti
rolb
or
mov
jp
mov
or
sub
movsl
cwtl
adc
shlb
dec
push
cmp
mov
xchg
add
add
shl
xorl
fnstcw
cwtl
xor
xchg
xchg
nop
adc
mov
push
jp
pop
xchg
adc
addr16
shlb
fsin
push
mov
cmc
cmpb
into
clc
call
sbb
push
loopne
cmp
pop
inc
clc
dec
mov
or
pop
mov
rcl
outsl
outsl
and
js
addr16
sub
cltd
adc
cmp
insl
inc
mov
or
and
int
inc
mov
nop
sbb
pop
imul
xor
pop
inc
cli
cld
es
jp
sub
and
pop
arpl
bound
lock
in
inc
cld
sahf
sub
repnz
xchg
pop
icebp
mov
aam
cwtl
push
sbb
rcll
jno
in
adc
mov
adc
mov
xor
aam
cli
xchg
in
repnz
clc
sub
sahf
call
inc
push
lahf
push
jp
jl
in
sbb
sahf
lock
adc
sti
sbb
sub
arpl
jp
adc
lret
gs
mov
test
pusha
or
cltd
shrl
add
decl
aaa
xchg
xchg
data16
pop
je
aaa
or
test
sub
jmp
and
cltd
add
test
shll
inc
mov
stos
fs
inc
shl
push
pop
sbb
mov
sbb
push
je
mov
jecxz
mov
add
les
pop
js
out
loop
stos
fcmove
pop
mov
push
or
daa
sti
cmp
leave
sbb
mov
loop
xchg
mov
sti
or
inc
jne
jle
aam
fldl
mov
cmpsb
aad
cmc
jl
dec
dec
mov
sub
sub
lock
or
push
scas
addb
bound
fsubrl
mov
push
push
call
mov
sub
or
and
stc
bound
jmp
ljmp
jmp
mov
jmp
ss
cwtl
cmp
and
cli
cmpsb
sbb
or
ljmp
lret
jne
add
mov
sub
mov
and
sbb
out
nop
cmc
adc
shlb
xchg
jmp
xchg
sti
xchg
outsl
out
and
rolb
addr16
add
decl
push
int3
cmp
add
repz
cli
ja
cmp
mov
jle
notl
xor
inc
ja
add
in
lret
repnz
aad
nop
test
fisttpll
push
inc
add
pop
leave
xchg
hlt
mov
sub
add
les
adc
inc
xchg
mov
xchg
adc
pusha
out
das
add
pop
pop
mov
xchg
adc
xor
gs
scas
sub
popa
int
and
dec
cmp
fwait
test
adc
rep
xchg
sti
das
rcr
mov
int
notb
cli
out
jbe
mov
add
pusha
minps
stc
dec
mov
test
clc
xchg
xchg
jg
add
xchg
push
sbb
outsl
xchg
testb
outsl
lahf
push
xor
out
icebp
inc
test
xchg
inc
test
pop
clc
mov
movsb
pop
out
stc
dec
loopne
adc
out
subb
ljmp
movsl
adc
xorl
jno
and
leave
jo
addb
and
sbb
cltd
jae
jo
mov
pop
push
das
stos
mov
xchg
repnz
xor
stos
sub
push
inc
shl
jns
xchg
stc
mov
scas
adc
or
sub
push
push
in
cmp
dec
aaa
jle
mov
cmp
ljmp
shrl
push
or
jne,pt
ret
jb
fwait
xor
sbb
xchg
roll
jecxz
adc
jne
and
jae
arpl
xchg
lds
xchg
roll
jecxz
adc
jne
and
jae
arpl
xchg
lds
xchg
roll
jecxz
adc
jne
sub
jp
xchg
ja
addr16
push
in
xchg
roll
and
xor
bound
lea
lret
sbb
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
imul
add
sub
add
add
add
pop
push
add
and
cmpsl
add
add
insb
add
add
out
push
dec
add
add
add
mov
sbb
loope
mov
add
add
add
add
pop
add
add
loope
les
pop
add
fiadds
loope
int3
add
add
add
add
adc
dec
add
add
add
or
sub
add
add
inc
add
add
add
xor
leave
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
ds
add
add
inc
add
add
lret
add
add
add
add
icebp
add
add
add
adc
add
add
add
add
xchg
add
add
add
add
add
add
add
add
int3
add
add
add
loope
xchg
add
cmp
insl
add
add
add
add
push
jne
loope
es
add
add
add
add
push
add
lcall
add
or
fiaddl
addb
add
cld
add
add
push
add
add
add
add
add
scas
add
add
add
call
add
fwait
add
add
add
add
add
add
push
add
add
sub
add
call
add
add
inc
add
add
add
inc
add
add
pop
add
push
sbb
lret
add
add
add
add
add
xchg
add
addl
add
add
add
add
add
rolb
add
xchg
add
les
inc
add
add
fiadds
mov
xchg
add
xchg
add
add
xchg
add
add
add
add
outsl
add
add
add
call
add
flds
fiadds
loope
xchg
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
inc
add
add
add
insb
add
pop
add
add
add
lret
add
sbb
call
add
add
push
lcall
add
add
add
add
loope
sub
les
jns
xchg
push
add
fadds
pop
add
add
add
add
add
and
in
add
jg
into
add
add
add
add
add
jg
rolb
and
cmp
add
add
fwait
add
add
add
add
add
add
add
add
add
add
add
out
add
xchg
add
add
add
add
add
add
add
enter
dec
add
adc
pop
add
add
add
add
sbb
call
add
add
jg
cmp
fildl
inc
add
push
add
add
add
add
or
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
ljmp
add
leave
add
push
add
add
add
xchg
scas
adc
mov
mov
cmpsb
imul
ds
int3
mov
xor
lret
jae
mov
xchg
jge
xchg
xchg
pop
dec
pop
xchg
lea
or
stos
inc
rol
aad
add
test
in
xor
push
adc
cmp
sub
shlb
push
xor
cmpsl
test
or
imul
push
pusha
pop
mov
popf
mov
fiadds
jmp
daa
mov
popf
and
jmp
imul
gs
inc
lea
ret
stos
scas
jp
cli
popa
xchg
or
fcmovnb
jno
dec
mov
xor
faddp
cs
mov
cmp
jo
or
mov
cs
and
ret
call
data16
popa
push
in
cwtl
mov
cli
pushf
pop
and
loop
inc
scas
popf
flds
into
adc
sub
arpl
cmp
or
or
ret
dec
jecxz
jae
pop
inc
jge
sub
xchg
cs
mov
aaa
inc
cli
push
push
loopne
test
xchg
sub
mov
mov
dec
rcrl
pop
iretw
push
ds
cmp
jns
test
add
inc
out
push
add
addr16
movsb
mov
jno
inc
iret
dec
or
in
jnp
jo
pushl
neg
pop
movsb
cs
inc
push
mov
lahf
mov
mov
mov
add
stos
lret
cwtl
jb
and
add
push
ljmp
ja
jns
cld
mov
lcall
cs
orb
sbb
inc
dec
pop
std
xor
jmp
add
aam
test
mov
into
mov
bound
mov
in
mov
loope
and
xchg
xchg
mov
fldcw
dec
jbe
cmp
pop
adc
cmp
mov
inc
cmp
xchg
daa
and
into
cmc
out
xchg
push
sub
mov
pop
fimuls
jecxz
jg
in
popf
int3
inc
push
insl
sbb
inc
and
in
mov
insl
stos
fsubrs
pop
xlat
std
jae,pn
jle
in
mov
in
subb
inc
push
sub
popa
mov
adc
jbe
push
aam
adc
arpl
mov
repnz
xor
nop
push
sub
xor
mov
push
mov
enter
je
test
sbb
fdivs
icebp
mov
mov
cltd
dec
je
test
inc
sub
int
leave
xchg
outsb
ja
mov
jno
std
aas
mov
ljmp
pop
mov
and
sti
scas
or
popf
pop
dec
lods
rcrl
mov
and
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
