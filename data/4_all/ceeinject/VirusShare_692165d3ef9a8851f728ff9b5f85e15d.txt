call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
xchg
or
jecxz
shr
inc
nop
jle
ret
ret
orl
dec
arpl
outsb
inc
sbb
push
and
adc
add
repz
jecxz
shr
ret
sahf
mov
das
mov
jae
inc
push
push
outsb
inc
push
pop
push
ds
add
dec
jecxz
jnp
rorl
push
fwait
pop
lods
and
sbb
xor
fs
dec
dec
addr16
add
cmpsb
cltd
xchg
adc
lods
pop
insl
jo
fnstenv
in
scas
jnp
pop
pop
sarb
repnz
mov
into
mov
pop
xchg
shrl
rcr
mov
cmpl
lahf
loopne
adc
out
leave
outsb
in
push
loopne
fwait
lret
or
mov
sbb
andl
shll
fwait
xor
jnp
mov
lret
mov
mov
mov
sub
rcll
out
or
subb
popa
xchg
or
sbbl
insl
inc
in
pusha
push
and
pop
cld
pop
xor
pop
add
dec
stc
adc
jbe
cmp
push
jg
jae
or
outsb
pop
fwait
xor
fdivrl
ds
repz
adc
push
or
mov
mov
lods
cmc
fsubl
jle
adc
adc
lods
mov
sub
sti
int3
lods
cli
iret
out
xor
cvtpi2ps
pusha
push
dec
push
imul
mov
out
fsubr
nop
sar
fucomp
pushw
sysexit
sbb
add
jb
push
mov
mov
pop
jae
arpl
outsb
inc
push
xor
and
adc
add
repz
jecxz
shr
ret
sahf
mov
mov
pop
jae
arpl
outsb
inc
push
xor
and
adc
add
repz
jo
out
shrb
loope
fmulp
lret
mov
or
mov
mov
xor
popf
not
sub
push
dec
sbb
push
sarl
inc
push
out
and
cmpsb
mov
repnz
notb
filds
and
and
loopne
mov
fcomps
cmp
mov
cmp
pslld
das
inc
pop
sbb
sbb
adc
jmp
stc
aad
mov
int
test
popa
imul
cmc
insl
and
pusha
adc
sbb
jnp
in
int3
mov
out
fstl
mov
cmp
cmpl
adc
scas
cwtl
inc
add
jns
or
nop
shrb
pop
sti
lods
ds
lods
call
ljmp
pop
fwait
icebp
xchg
push
fwait
jnp
loope
push
rorl
movl
cmp
or
mov
pop
push
lds
stos
or
lret
jno
dec
int
clc
lea
jae
loopne
inc
inc
jecxz
sahf
int
and
out
scas
mov
adc
adc
je
sahf
aam
push
movsb
mov
inc
xchg
icebp
enter
andb
inc
pop
pop
sbb
clc
pop
call
mov
sub
push
mov
jmp
xor
negl
mov
jge
push
xor
dec
jae
cmp
jb
sti
mov
pop
jle
mov
repz
popf
lds
jo
inc
ljmp
fists
and
push
adc
adc
jle
mov
adc
ja
push
stc
adc
mov
jno
rcll
jmp
scas
sbb
pop
dec
movsb
jns
popf
ds
mov
les
cmc
push
xor
jge
sub
sbb
out
push
lret
enter
cmp
std
pop
fs
cmp
stos
mulb
adc
cmp
or
orl
push
mov
cmp
xlat
fldenv
pop
decl
pop
adc
cwtl
push
outsb
mov
leave
cltd
rclb
out
inc
push
loopne
mov
xor
push
cld
inc
mov
dec
sahf
xor
insb
nop
push
je
inc
dec
or
dec
mov
cmp
cmp
pusha
or
insl
sub
test
in
repnz
je
cmp
in
cmp
or
cwtl
in
xchg
lods
jle
mov
je
lea
xorl
mov
jle
test
fldl
in
jnp
xchg
and
or
loop
jbe
adc
xlat
ss
mov
test
lret
fcmovb
int3
iret
imul
push
shrl
lea
aam
pop
xchg
test
lods
dec
imul
aas
std
and
ss
fwait
mov
mov
cmp
loopne
test
ret
sub
inc
push
imul
mov
lret
adc
jae
inc
lods
lods
mov
test
inc
imul
test
xor
ja
mov
jb
push
ret
mov
adc
sbb
mov
divl
xchg
sub
fidivrl
pop
clc
sub
ja
xchg
add
fisubrl
push
fldt
or
mov
cld
lea
or
mov
insl
testl
mov
ret
lods
in
stos
ficompl
movsb
cmp
pop
test
int3
data16
lock
inc
jae
loope
xsavec
and
and
popa
push
jle
adc
jb
cmpsl
pop
mov
dec
dec
add
pop
aas
lea
xchg
lcall
push
addb
jmp
wbinvd
fldl
add
adc
mov
cli
test
jae
arpl
or
je
pop
out
jp
sub
jmp
jp
pop
mov
pop
adc
icebp
and
push
mov
les
cmp
pop
sbb
mov
cld
popf
cs
push
inc
xchg
pop
mov
fs
shr
arpl
dec
lds
loope
idivl
mov
xor
scas
setp
scas
popa
or
loopne
inc
push
arpl
xchg
mov
jg
insl
xor
fstpt
cs
sub
rcl
mov
inc
shlb
lcall
and
cltd
lahf
je
mov
je
jno
jbe
add
fistpll
xchg
adc
or
cmp
in
js
out
in
fldt
dec
shlb
js
xchg
inc
pop
push
cmc
dec
test
jb
mov
cmp
ror
inc
scas
push
dec
and
sub
in
scas
jbe
mov
push
repnz
fs
stos
push
fdivrl
std
adcb
lea
add
xchg
xor
fwait
cmp
dec
and
shr
enter
push
inc
pop
mov
bound
sbb
ds
jb
xchg
ret
repnz
nop
rcrl
jno
cmp
int3
mov
orl
and
cmp
push
ss
mov
xor
popf
cmc
call
add
das
ja
adc
cwtl
in
outsl
mov
lcall
dec
pop
scas
and
mov
test
bound
stos
inc
int3
lea
and
fwait
cmc
and
clc
pop
inc
sbbb
out
inc
rcrb
add
addb
ret
cmp
and
inc
jp
cmp
xor
mov
shlb
out
fidivs
mov
mov
sub
loopne
int
ret
nop
sbb
mov
icebp
dec
sub
shrb
leave
push
hlt
inc
cmp
jno
xor
in
mov
cmp
mov
inc
fs
cmp
sbb
clc
mov
xor
fimuls
test
push
stos
add
xchg
or
cmpsb
and
mov
cmp
sbb
xchg
xchg
mov
adc
cmp
cld
sub
popa
sbb
bound
daa
mov
mov
add
and
mov
sub
cld
ret
scas
or
push
cmp
xchg
cmp
data16
loop
mov
lret
adc
mov
push
inc
pop
lea
push
mov
xchg
out
xchg
into
cmp
imul
xchg
fwait
push
mov
nop
in
adc
inc
dec
and
jae
inc
pusha
xor
ja
mov
adc
adc
and
add
mov
cmpsb
fldl
or
movsl
out
aas
xchg
push
fdivrs
mov
jl
into
xchg
jns
sti
cmpsb
jne
loop
movsl
test
sub
push
popa
das
popa
jns
mov
xchg
lcall
adc
mov
jb
cmp
xlat
mov
pusha
cmpsl
xor
fwait
jb
pop
pop
stos
jp
je
movsb
cltd
fmul
and
in
loope
add
loope
jle
dec
ss
data16
into
das
loop
or
inc
cmpsb
jmp
insl
leave
lahf
cld
mul
fists
mov
adc
imul
shlb
insl
shlb
mov
mov
lods
jle
mov
sub
xor
mov
int
inc
and
sti
sti
in
ljmp
addr16
addr16
repz
xchg
pop
pusha
leave
es
out
cli
ja
sub
xchg
push
push
push
aam
fcmovu
dec
sysexit
hlt
stc
pop
cmp
jmp
jg
jne
mov
sbb
into
adc
jae
mov
and
sti
test
pushf
cmp
inc
mov
int3
sbb
loopne
push
inc
fwait
xor
repz
aad
cwtl
mov
fstpl
imul
xchg
sub
cmp
insb
xor
inc
xor
out
dec
push
mov
xor
call
ljmp
std
outsl
lods
addr16
insl
ss
push
inc
dec
lret
mov
mov
add
lret
aad
aam
xchg
sub
mov
cwtl
aaa
fidivl
jb
or
bound
repz
and
dec
jecxz
and
out
push
adc
jne
xchg
adc
in
mov
mov
icebp
fdivl
and
fstps
mov
cltd
push
xor
dec
and
mov
xor
adc
xor
aaa
test
mov
jbe
lea
cmp
ja
fdivrl
push
fcoml
fildl
test
lcall
xchg
pop
cmc
ljmp
xchg
popa
push
pop
inc
add
lret
testb
mov
adc
mov
movsb
add
or
ljmp
add
sbb
fisubrl
icebp
imul
sar
call
outsb
adc
rorb
iret
rorb
test
xchg
call
mov
mov
imul
mov
dec
push
insb
mov
ss
in
push
lods
out
mov
outsl
into
insl
sahf
adc
stos
cmp
cmpsl
mov
fildl
mov
into
out
or
and
clc
add
cwtl
cwtl
xlat
in
mov
inc
jno
inc
hlt
mov
out
aas
jg
sbb
pop
xchg
inc
clc
rcrl
mov
ds
data16
cwtl
pop
push
loope
sti
and
pusha
out
xor
xor
test
aam
sahf
scas
sarl
xor
mov
sbb
icebp
int
adc
cmpsl
push
jecxz
push
dec
cmpsl
bound
out
ret
and
je
hlt
in
xchg
pop
pop
xchg
jb
daa
jo
jmp
mov
or
pop
pop
push
mov
jno
mov
lods
inc
sar
lret
and
sub
sarb
repnz
lea
mov
pusha
scas
mov
or
mov
push
sarl
jns
mov
push
push
shrl
lret
xchg
insb
lret
inc
and
sub
push
inc
push
mov
inc
sub
mov
sbb
cli
movsb
in
stos
shrl
cmp
sbbl
mov
mov
inc
sub
pop
mov
rcrl
gs
pop
loop
fidivrs
mov
cmp
mov
dec
lcall
imul
and
out
pop
rolb
push
pusha
push
int3
les
and
gs
jmp
dec
sarl
inc
xlat
inc
xor
popf
daa
mov
popa
add
into
icebp
imul
sbb
jb
decb
mov
inc
movsl
rclb
xor
sbb
je
mov
mov
xor
ret
xor
cli
sbb
mov
jmp
sbb
and
stc
mov
imul
ret
adc
popf
mov
jne
mov
fs
xor
bound
mov
aam
dec
sbb
cld
xchg
lcall
test
sub
fcoml
stc
inc
jg
sbb
aaa
cmp
add
sub
jle
adc
daa
std
and
push
mov
push
pop
imul
mov
sub
sub
mov
and
inc
enter
and
jg
and
cmpsb
inc
push
addr16
push
ret
imul
cmc
hlt
add
mov
inc
jp
xor
mov
fnstsw
ret
xchg
xchg
inc
cmp
and
cltd
cmc
addr16
sub
testb
lcall
dec
movsb
clc
mov
dec
test
xchg
dec
into
rol
mov
or
xchg
mov
fdivl
outsl
imul
inc
icebp
addl
jl
jae
dec
lods
jb
mov
pushf
sub
or
insl
jl
mov
call
lock
push
mov
rcrl
push
enter
lock
out
cmp
add
pop
push
or
jbe
dec
outsl
cld
scas
popf
jnp
dec
xor
ret
nop
mov
xlat
pop
loop
dec
jle
fbld
fildl
push
jp
jecxz
movsl
jne
inc
ret
test
ret
out
enter
icebp
fcmovne
gs
and
data16
loop
fists
sbb
or
mov
mov
sub
sub
xor
in
sti
cltd
icebp
cmp
jns
ja
inc
imul
pop
in
sarl
ss
out
xor
xor
jae
ja
push
mov
popf
sbb
flds
shlb
clc
push
sub
repnz
addr16
xor
cmp
clc
aas
outsl
int3
jle
fwait
fs
jle
jno
lret
and
push
mov
enter
jg
add
test
les
xor
stos
ss
xor
jge
frstpm(287
mov
adc
mov
shll
cmpsl
lods
push
sbb
or
imul
xchg
dec
mov
ror
push
stc
neg
jnp
add
and
fisubrl
call
sbb
gs
or
cmpsb
add
sti
pop
fadd
repz
call
and
push
aam
sbb
mov
call
rcl
adc
fs
out
in
shlb
rcll
sbbb
fbld
subb
xchg
jecxz
les
mov
dec
add
int3
sbb
fucomip
in
add
xchg
pop
pop
dec
les
loopne
inc
xchg
inc
popa
out
mov
aam
je
dec
dec
mov
ret
or
push
inc
xchg
popf
icebp
shlb
xchg
jns
clc
mov
mov
pop
test
push
idivb
jb
in
jmp
lret
clc
jne
test
not
pusha
dec
stos
cwtl
std
loop
add
add
mov
ss
lea
mov
adc
push
push
jbe
popa
cmc
xchg
push
mov
xor
xchg
rcr
jnp
inc
push
mov
sub
ja
adc
xor
adc
gs
inc
cmp
push
cld
mov
push
popa
xchg
mov
add
ss
and
ret
xbegin
dec
sbb
mov
pop
pop
stos
call
mov
jecxz
outsl
add
sbb
pop
cld
sub
pop
sahf
and
pop
rcll
pop
or
mov
sahf
mov
mov
cmpsl
mov
cmp
aaa
test
scas
es
xchg
mov
xchg
stos
iret
mov
sbb
in
jle
or
sub
and
push
jnp
es
xlat
shlb
cmp
aam
jle
dec
int3
jo
in
bound
inc
inc
movsl
jno,pt
rol
daa
push
imul
cmp
cld
je
pop
push
jnp
jp
les
mov
loope
xchg
mov
test
fldt
sub
test
inc
in
dec
add
clc
xchg
xlat
leave
nop
or
addl
or
shlb
leave
adc
popf
into
lods
cmp
sub
aad
iret
xchg
divb
mov
sub
push
paddb
adcb
or
and
shrl
daa
jge
hlt
sar
cmovo
inc
pop
add
stos
jnp
testb
and
bound
jbe
cli
pop
cmp
cmpsb
xor
out
adc
and
or
in
jp
fsubs
sahf
mov
adc
ljmp
push
imul
ja
push
mov
xchg
out
addr16
ret
and
out
jb
aaa
inc
movb
mov
or
push
cmp
push
out
jp
mov
test
adc
out
out
mov
and
nop
inc
data16
data16
push
mov
in
ljmp
or
fwait
mov
shll
rolb
pop
cmp
mov
mov
fmulp
fiaddl
mov
ljmp
jge
add
ljmp
sbb
push
inc
aad
pop
and
or
cmp
mov
xchg
sbb
and
mov
add
sbb
xor
sbb
andb
roll
xor
sbb
cmp
ja
add
mov
and
sbb
xor
inc
sbb
call
movsb
sar
push
mov
jne
pop
pop
outsb
cwtl
dec
in
fsubrl
imulb
push
sarl
cmp
jmp
push
jbe
mov
jmp
outsl
xor
pop
sbb
dec
mov
jl
and
flds
pop
int
sbb
jmp
push
and
dec
mov
or
mov
lea
lret
icebp
pop
int3
push
and
aaa
sub
and
or
xor
adc
add
add
std
or
fildl
clc
mov
push
dec
mov
xor
sub
inc
inc
lret
or
scas
or
outsb
jp
dec
imul
inc
mov
ja
arpl
ss
push
xchg
lods
stos
mov
sbb
xchg
or
pop
insl
sub
divl
enter
xchg
sub
xor
xchg
xchg
sub
jg
inc
lods
sub
stos
push
push
xchg
mov
adc
xor
loope
xchg
jle
cmp
jnp
push
pop
mov
js
adc
shrl
adc
or
loopne
mov
call
je
xchg
mov
cltd
mulb
imul
ret
rcrl
inc
and
in
pusha
pushf
fstps
out
xorl
dec
fcom
ja
pop
jnp
dec
in
dec
push
icebp
xor
or
and
jno
pushf
fwait
aam
xchg
sub
cmpsl
add
sbb
test
std
jae
add
xchg
pushf
adc
xchg
fstpl
pusha
push
jae
leave
xor
jo
xchg
or
sbb
aas
sub
xor
adc
mov
jbe
fmull
and
ret
insb
dec
jnp
cmc
adc
loop
mov
mov
jg
jae
in
jb
das
cmpsb
xchg
xchg
cmp
xchg
aad
jg
leave
mov
int3
inc
ret
cmp
mov
jp
mov
out
jne
push
xchg
jge
xchg
dec
mov
lret
cmp
cmpsb
lahf
out
leave
outsl
mov
push
mov
mov
jns
into
sub
adcb
jp
add
into
or
nop
xchg
sub
mov
jmp
cli
xor
je
adc
in
xchg
fadd
jo
and
out
mov
psubw
call
pop
jne
xor
popf
mov
into
bsf
dec
jne
stos
fs
or
jg
mov
push
in
or
mov
push
jmp
fidivl
addb
outsb
inc
cmp
xor
stc
stos
call
daa
add
add
dec
or
aad
cmp
aad
sub
push
nop
inc
push
pop
jno
or
aad
mov
repz
jbe
mov
sti
xchg
int3
stos
shll
insl
xchg
pop
jmp
shlb
daa
pop
push
dec
arpl
bound
xor
pop
jo
inc
pop
idivb
jns
inc
push
lods
push
clc
imul
push
lods
fidivrs
cmp
les
cs
out
xchg
adc
movsl
fwait
stc
mov
movsb
jne
jnp
iret
or
ret
fs
in
inc
test
out
jae
test
fsub
sub
adc
dec
loop
dec
dec
outsl
push
cltd
xchg
cmp
test
inc
pop
xchg
push
xchg
sub
push
dec
hlt
inc
pusha
or
mov
je
dec
fstps
lahf
xor
push
in
adc
aaa
sub
cmp
jle
loope
and
push
xor
ljmp
and
mov
movsb
xor
xchg
xchg
push
scas
jecxz
cli
test
push
loope
lock
enter
movsl
jo
xchg
int3
push
jecxz
cmpsb
call
ret
sub
sbb
aam
fidivrl
cmc
stc
sbb
sti
cs
xchg
nop
popa
jl
ss
dec
push
mov
pop
xchg
adc
dec
lret
mov
cmpsl
call
mov
push
mov
mov
lcall
icebp
into
cmpl
mov
mov
cltd
add
sti
jae
jecxz
pop
cmpsl
movntq
inc
shll
mov
stc
xchg
nopl
and
int3
mov
das
aad
ret
xchg
dec
mov
or
dec
push
push
addr16
and
sub
leave
and
inc
sub
mov
loopne
ret
and
push
cmp
mov
popa
jb
cltd
dec
lahf
inc
and
lcall
mov
mov
or
test
cwtl
ret
ret
test
pop
sahf
mov
xchg
add
inc
fucomp
clc
lahf
xor
dec
cs
xchg
push
jno
mov
lcall
mov
push
fnstenv
mov
dec
pop
dec
sbb
jns
xlat
call
stos
insl
adc
dec
mov
and
xchg
sub
push
pop
mov
clc
push
adc
cltd
cmpsl
ret
shrb
cmp
jbe
fisubl
into
push
stc
sub
mov
stos
or
psrlw
loopne
stos
sbb
cmpsb
push
xorb
test
mov
push
adcb
xchg
cmc
and
xor
jb
shr
xchg
push
insl
xchg
pop
les
inc
fmull
loop
cli
push
sub
adc
inc
mov
out
push
lea
adc
aas
dec
jl
loopne
add
pop
add
jecxz
mov
fnstenv
xlat
push
inc
jecxz
mov
mov
pop
jae
arpl
outsb
inc
push
xor
and
adc
add
repz
jecxz
shr
ret
sahf
mov
mov
pop
jae
arpl
outsb
inc
push
xor
and
adc
add
repz
out
stos
out
ret
lahf
mov
or
stos
dec
arpl
push
push
xor
and
xor
add
repz
jbe
mov
mov
mov
pop
mov
xor
mov
sar
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
cmpsb
sbb
sub
pop
test
test
fsubrl
aad
mov
mov
jbe
inc
sti
push
jmp
sbb
sub
pop
testb
adc
fwait
mov
mov
jbe
inc
sti
push
jmp
sbb
sub
pop
testb
imul
adc
lret
sbb
push
cli
sub
jnp
dec
int
loopne,pn
js
decb
sahf
xor
pop
jo
mov
dec
cmp
scas
sbb
into
cmp
popa
fucomi
mov
stc
scas
jmp
add
sti
fstpt
adcl
lret
dec
mov
push
push
loop
sti
ss
or
and
push
cmpsb
pop
mov
in
adc
dec
inc
adc
xchg
stos
fs
clc
aas
jl
cltd
xor
pop
outsl
push
pop
imul
shl
ret
xchg
dec
into
fs
movl
sti
push
adc
inc
sub
orl
jno,pn
fdivr
inc
ds
add
push
mov
xchg
xchg
sub
pop
testb
imul
mov
mov
jbe
inc
sti
push
and
ret
cmp
sub
test
mov
loop
mov
fisubrs
addr16
jbe
and
jle
outsb
jecxz
cli
sub
aaa
mov
mov
shlb
add
push
into
addr16
lret
and
dec
cli
dec
stos
jne
dec
jnp
imul
mov
mov
jbe
inc
sti
push
jmp
sbb
sub
pop
testb
imul
mov
mov
jbe
inc
sti
push
jmp
sbb
jmp
sub
jb
adc
add
pop
pop
xchg
scas
adc
jns
adc
jmp
iret
in
mov
jo
inc
and
adcl
dec
out
sbb
fsub
in
adc
xorb
mov
sub
cmp
fwait
data16
jb
pop
fs
pop
push
je
stc
mov
rorb
daa
inc
pop
mov
dec
jle
lgs
adc
adc
cmp
test
scas
pop
lea
out
jmp
iret
fldt
xchg
sbb
adc
je
mov
cmp
std
mov
aad
inc
pop
dec
ja
sub
cmp
cmp
pop
fildll
in
mov
jle
stc
cmc
lret
mov
and
mov
stc
or
in
add
in
mov
or
fcmovb
mov
jae
mov
or
sub
jg
lods
mov
or
insb
ret
stc
add
or
dec
mov
lods
dec
dec
mov
cmp
hlt
push
or
pop
outsl
xchg
iret
pop
sbb
ret
loopne
cmpb
adc
into
adc
loopne
icebp
fcomp
jle
stos
add
cmp
pop
adc
adc
loope
pop
pusha
inc
push
xchg
loop
mov
lods
sbb
jo
in
aas
jmp
frstor
pop
push
push
inc
xlat
testl
and
dec
pop
push
cmp
mov
mov
lahf
jo
inc
cld
out
push
xchg
test
add
hlt
testl
sbb
xchg
mov
mov
nop
xor
in
sub
dec
insl
ds
sbb
mov
jae
test
or
and
adc
sbb
mov
or
mov
cld
lock
scas
mov
cmp
xchg
mov
int3
push
xlat
or
cmpsb
mov
repnz
lods
lret
call
mov
dec
cmp
in
push
cmp
pop
cmp
xor
mov
push
ret
das
push
call
test
and
cmp
pop
mov
std
mov
fcomi
cmp
and
shll
movsl
lock
stos
pop
xlat
cmp
cmc
leave
or
into
aas
ja
cmp
fisubrs
xor
push
adcl
xor
mov
push
inc
pop
cmpl
orl
pop
stos
push
repnz
cmp
pop
roll
xor
leave
pop
orl
out
icebp
and
xor
pop
mov
int3
push
push
xor
xor
push
sub
xchg
pop
mov
out
popa
push
leave
mov
dec
popf
jge
xor
jecxz
xor
sub
jge
push
lock
add
addr16
push
xchg
xchg
test
sub
call
xlat
and
leave
jbe
loope
sbb
in
test
in
out
mov
mov
and
jmp
pop
cmp
cmp
xor
or
push
sti
or
decl
movsb
jg
mov
push
mov
add
and
push
pop
mov
cmp
lcall
sub
xor
jl
hlt
repz
and
or
adc
mov
decb
loop
sarl
leave
inc
cmpsb
fcmove
and
mov
imul
shrl
jb
stc
cmp
iret
jle
xchg
pop
xchg
das
cs
addr16
fmull
daa
mov
das
into
fidivrs
cs
outsb
aaa
je
push
sub
cmp
xor
movsb
insb
cmp
dec
push
mov
adc
fisubl
jecxz
dec
mov
dec
xlat
sbb
test
pop
pop
or
mov
outsb
and
out
ljmp
xor
mov
hlt
jno
hlt
outsb
ja
push
leave
aam
dec
cs
sbb
xlat
lods
xor
push
popa
orl
cmp
jae
push
mov
cmpsl
mov
cmp
mov
mov
pop
mov
pop
inc
mov
mov
and
stc
pop
rorl
loope
xchg
sub
push
and
push
push
aad
push
mov
sbb
push
cltd
mov
out
or
push
push
shrb
aas
sbb
xlat
jnp
clc
setb
cmc
insl
cmp
mov
jecxz
ret
sbb
aam
push
mov
sahf
adc
cmc
push
daa
sbb
fs
dec
pushf
cmp
xor
xchg
insl
popa
sahf
push
cwtl
jmp
mov
add
mov
int3
decl
add
arpl
sahf
push
and
fsubrs
flds
aad
jge
lea
lods
mov
jae
shrl
mov
sub
int3
push
push
mov
dec
test
jno
mov
arpl
mov
mov
pop
lret
cld
pop
fbld
adc
insl
adc
arpl
mov
pop
sub
push
push
sub
pop
push
push
adc
dec
lds
jns
insl
addr16
add
mov
mov
sub
jns
add
pop
lahf
aam
add
dec
xor
enter
hlt
ffree
xor
stos
xor
jle
pop
cmp
sbb
call
ror
dec
sbb
ljmp
test
ja
xchg
popf
pop
rorl
daa
das
dec
xchg
xchg
hlt
inc
lods
idiv
push
or
add
test
xchg
dec
test
xchg
lods
aad
call
jo
sbb
jmp
push
push
jns
mov
fmuls
jno
mov
push
adc
outsl
pop
or
popf
sub
pop
mov
xchg
push
pop
fistpl
bound
nop
or
sahf
adc
jmp
mov
call
pop
ss
out
arpl
ljmp
daa
jl
inc
subl
stc
adc
cmpsl
push
lods
sub
xchg
jne
add
inc
out
call
xchg
testl
cmp
jns
pop
pop
adc
ret
stos
scas
mov
nop
aam
lret
adc
pop
aam
rorb
sbbb
mov
pop
int3
jmp
es
mov
fwait
je
inc
mov
iret
jno
aaa
out
dec
cli
mov
in
or
dec
addr16
std
pop
outsl
aas
mov
adc
and
int
pop
sti
sbb
into
push
insb
mov
add
shrb
data16
xchg
xchg
insb
xchg
mov
dec
and
lods
stc
xor
arpl
lar
jne
lcall
fistpll
inc
lret
and
mov
pop
mov
mov
pop
stos
xor
add
shlb
mov
call
outsb
out
jge,pn
push
add
out
ficoml
repz
jp
in
loop
jo
in
mov
mov
lahf
fwait
mov
mov
in
xor
cld
out
scas
pushf
sahf
scas
xchg
iret
decl
loop
push
sarb
ret
ds
stc
ja
mov
es
push
ss
inc
jne
push
roll
sub
inc
and
scas
adc
std
stc
arpl
int3
push
test
mov
fcoml
cmp
imul
mov
xor
dec
int3
xchg
pop
push
jmp
pop
xor
cmp
popa
cmp
jno
add
inc
sub
or
ja
mov
aaa
mov
int
push
sahf
ret
ret
data16
cli
xchg
xchg
sub
xor
push
popf
lcall
js
dec
int3
lret
andl
iret
or
shr
mov
int3
enter
shrb
pop
loop
pop
aas
and
ljmp
or
dec
jp
std
pop
rcrb
push
lret
vpaddq
sbb
cli
sbb
xchg
mov
out
movsb
add
ss
repz
mov
mov
es
outsb
cltd
or
push
pop
mov
mov
lock
push
popf
xchg
pop
jae
dec
adc
mov
nop
test
mov
call
pop
iret
add
popl
push
dec
movsl
add
pop
lcall
in
std
cld
nop
dec
jo
fisttps
into
and
ds
lcall
lcall
sub
dec
iret
jge
mov
and
lret
popf
push
ret
divl
xchg
lret
sub
stos
es
mov
les
xchg
adc
cs
sbb
dec
scas
outsl
xchg
jns
mov
cmp
rcll
inc
shlb
gs
adc
mov
mov
adc
lahf
into
insl
iret
rcr
jmp
arpl
lods
jno
in
jge
push
imulb
inc
mov
mov
sarb
les
xor
cli
xor
adc
adc
xor
dec
scas
xor
lret
mov
rorl
pop
mov
inc
fsubrl
das
gs
dec
dec
in
mov
or
mov
inc
add
gs
mov
in
sbb
mov
sub
incl
test
dec
jbe
inc
loopne
jecxz
and
adc
add
outsl
jb
push
iret
mov
mov
andb
cmp
mov
adc
loopne
clc
dec
out
loop
les
lods
shr
loop
pop
or
lods
inc
mov
mov
mov
cmp
dec
push
cmp
stos
sbb
sbb
lret
add
add
mov
jecxz
pop
aam
adc
sub
pushf
cmp
idivl
repnz
jp
std
sbb
ficompl
mov
addb
cs
std
jno
cmp
out
jb
jns
lods
test
sub
xbegin
mov
dec
sar
dec
into
rcrl
dec
push
sub
dec
scas
and
inc
bound
iret
mov
aam
push
insb
lods
adc
pop
xchg
mov
shll
pop
leave
adc
mov
cltd
add
gs
addr16
mov
movsl
cld
por
sti
cmp
mov
pop
loop
ss
hlt
cmc
push
mov
ds
lock
xor
pop
das
sbb
mov
sbb
pop
fwait
push
icebp
and
sub
mov
mov
notb
sub
pusha
scas
testb
fidivs
mov
cwtl
jmp
xchg
cmp
dec
test
mov
sbb
inc
xor
xchg
stc
jnp
pop
sub
push
dec
sbb
rcll
sub
out
push
jmp
cmp
dec
push
arpl
stos
or
shlb
insl
lods
mov
adc
mov
inc
adc
mov
imul
or
ljmp
mov
xor
push
loope
jns
cmp
jb
dec
push
dec
fldcw
mov
sub
pop
pop
int3
shlb
xchg
pushf
movsb
repz
push
fmull
loop
mov
cmpsl
sub
sub
cmp
test
and
mov
mov
into
daa
pop
mov
jge
fisubrl
cmp
add
int3
inc
dec
xlat
cwtl
dec
shrl
push
fwait
mov
ret
adc
adc
sahf
clc
mov
xchg
or
mov
cmp
jge
xchg
mov
fcomp
adc
pop
mov
scas
arpl
cs
shrd
xchg
or
pop
lcall
in
mov
mov
xchg
push
and
das
cmpl
movsl
mov
adc
pop
pop
mov
inc
add
mov
shlb
pushf
iret
dec
loopne
jne
mov
and
inc
pop
pop
dec
rcrl
jnp
das
imul
cs
xchg
movsb
or
sahf
roll
push
fbld
scas
lock
shl
icebp
xchg
leave
cmp
or
insb
and
movsl
inc
xor
je
mov
pop
push
lret
movsb
push
sbb
xor
cmp
sbbl
int
add
adcl
dec
in
jp
xchg
cmp
std
cmp
adc
mov
jnp
jle
cli
pop
fimuls
ret
inc
add
dec
lea
mov
stc
arpl
jnp
insl
cli
insl
out
mov
push
cmpsb
mov
cwtl
ljmp
cmpb
jmp
icebp
popf
pop
inc
outsl
lock
sbb
push
add
cli
sahf
insl
push
lret
std
and
push
pop
xor
icebp
insl
int
mov
push
rclb
ljmp
sti
das
lcall
xchg
lock
push
arpl
rcrb
cltd
test
ret
pop
sti
jmp
aas
and
cmp
sub
dec
or
movsb
inc
or
xor
mov
jmp
push
xchg
or
pop
cmp
mov
rol
pushf
push
cmp
adc
lcallw
lret
movsb
xchg
and
mov
push
sysenter
mov
jno
cmp
enter
add
fs
es
dec
dec
and
cmpl
fwait
push
mov
dec
aas
xor
xchg
loopne
add
sbb
add
adc
add
lcall
or
cmp
cmpsb
cltd
mov
push
dec
and
push
or
and
jecxz
xchg
movsl
filds
hlt
int
push
mov
cld
fstpl
shrl
scas
jecxz
dec
fwait
out
ds
jne
cmp
out
ret
sub
add
add
sub
jp
xchg
ficompl
mov
mov
sub
aam
mov
jl
adc
push
adc
inc
fistpl
dec
mov
xchg
cmp
mov
or
dec
ret
sbb
jl
and
push
movsb
loope
je
push
adc
xchg
bound
adc
js
pop
fwait
outsb
pop
or
pop
inc
sti
andl
add
sti
push
pop
jp
pop
fisttpl
mov
fimuls
sbb
push
xor
hlt
dec
pop
test
pop
jg
hlt
jne
mov
jl
mov
inc
pop
enter
loopne
dec
pop
aad
jg
leave
pop
int3
jb
sbb
stc
aas
js
cltd
pop
dec
enter
push
out
dec
cmp
jnp
inc
test
push
mov
pop
stc
inc
sub
and
ss
test
or
adc
inc
pop
popa
add
pop
out
pop
call
dec
setb
mov
fimull
mov
in
inc
jl
pop
pop
icebp
pop
iret
xor
aaa
pop
sub
inc
pop
iret
test
or
push
test
adc
pop
jne
xor
loop
fwait
pop
mov
in
and
inc
add
loope
xchg
mov
inc
xorl
pop
xchg
xor
sub
movsl
inc
into
dec
push
pusha
pop
mov
cli
das
inc
mov
push
xchg
sub
stc
mov
movsb
stc
xchg
aam
cmp
es
sbb
jmp
rcr
sbb
dec
xchg
sbb
lahf
les
aad
dec
dec
mov
pop
or
xchg
insl
lods
test
mov
addr16
add
inc
push
pop
xor
xchg
fdivrl
movsl
xchg
sbbl
pop
in
jle
inc
inc
pusha
pop
sbb
xchg
lret
or
aad
or
data16
push
xchg
cmp
mov
cmp
sbb
adc
ret
subl
jns
mov
cmp
sbb
nop
out
daa
iret
jge
stos
cli
jbe
popa
mov
xor
aam
pop
test
and
popa
xchg
jo
sub
insl
aas
lds
sub
ret
into
adc
inc
insl
mov
xchg
add
test
aam
fmul
xchg
aad
enter
push
xor
shlb
mov
gs
and
jle
push
inc
icebp
nop
sub
in
mov
push
in
or
out
mov
pop
popf
xor
xor
incl
push
movsl
add
scas
test
fnstsw
lcall
aas
ds
jns
lock
adc
jl
nop
mov
xor
mov
fsubr
adc
lods
je
out
pop
jle
add
inc
pop
cmp
clc
xor
jbe
pop
jae
inc
sub
dec
cltd
push
in
ljmp
dec
test
cs
js
mov
inc
shl
lret
aas
stos
js
std
push
lret
cmpb
cmp
int3
pop
lds
mov
cltd
dec
pop
in
gs
and
into
scas
push
dec
ds
leave
push
scas
cwtl
xchg
mov
sub
pop
movsb
jo
pusha
loop
lods
clc
or
enter
sub
xchg
xor
icebp
cmp
and
sahf
shll
clc
xchg
leave
out
add
sahf
adc
nop
lret
cmp
call
bound
test
in
sar
push
out
push
sub
je
shlb
sbb
ret
frstor
sub
jbe
mov
xor
in
and
pop
daa
mov
addr16
dec
jp
leave
and
shl
lcall
sbb
clc
or
cmp
jl
dec
imul
pushf
adc
cli
mov
mov
jp
lods
sbb
pop
es
push
lcall
adc
cwtl
test
pop
mov
lods
pop
push
call
es
sub
jno
lret
pop
lods
imul
mov
aaa
or
or
xchg
jo
xor
mov
iret
adc
orl
insl
pop
jnp
and
cmp
sub
inc
pop
iret
xor
pop
add
pushl
xor
add
shl
lods
cmp
imul
fcompl
mov
dec
xchg
mov
pop
pop
cmp
jno
mov
loopne
mov
dec
outsl
sbb
mov
or
add
rcll
mov
shr
mov
mov
jae
mov
inc
mov
int3
fsubr
ss
lcall
jnp
mov
loopne
jbe
sbb
dec
lds
cli
push
pop
vcvtpd2dqx
jl
xchg
lds
pop
rcrb
jbe
stos
adc
ds
xchg
jnp
ja
ds
or
jp
mov
leave
mov
lods
cwtl
mov
sub
sbb
dec
jecxz
push
mov
nop
push
leave
nop
test
loope
push
or
mov
or
dec
mov
icebp
mov
pop
cmp
idivl
enter
cmp
es
cmpsb
lds
mov
enter
mov
mov
or
aas
dec
add
iret
or
cmp
adc
mov
stos
shll
dec
dec
call
dec
into
jg
or
pop
sub
pop
mov
push
dec
mov
xor
and
push
pushf
adc
stos
repnz
lahf
mov
push
xchg
pop
and
aad
scas
push
hlt
fisttpll
in
mov
adc
sbb
mov
je
rcr
push
jmp
cmp
out
ljmp
in
in
scas
lods
jae
mov
mov
fmull
xchg
mov
inc
rolb
cmp
call
ss
test
or
out
lret
enter
sbb
das
sahf
jne
mov
iret
dec
push
xor
xor
xchg
jmp
out
jl
cmpsb
imul
mov
or
mov
data16
inc
cs
lcall
sub
pop
arpl
xchg
fisubs
arpl
cmp
adc
inc
pop
pop
pop
jae
js
and
js
repnz
mov
push
lahf
divl
cltd
stos
daa
mov
mov
xchg
dec
cmp
rolb
jge
sbb
in
sub
cmp
inc
mov
cmp
xchg
adc
lea
sbb
sti
adc
nop
dec
jne
push
mov
or
and
sbb
lods
add
cmpsl
adcb
aad
ss
push
mov
push
adc
int3
sub
shl
scas
inc
int
sahf
jno
jp
out
xor
or
orl
icebp
lock
out
aas
dec
in
dec
mov
xor
sbb
out
bound
push
pop
inc
jle
popa
xor
outsb
pop
pop
sbb
fimuls
adc
inc
sbb
and
pusha
pop
stc
pop
adc
decb
test
in
andb
shlb
dec
daa
mov
cmp
cmp
enter
add
call
bound
outsb
adc
dec
scas
pop
shl
pop
sbb
mov
sarb
out
nop
pop
mov
xchg
mov
xchg
and
mov
adc
rorb
or
clc
jl
in
sbb
mov
dec
push
cmpb
jb
jno
dec
mov
icebp
add
xchg
ss
inc
jle
mov
dec
fs
adc
outsl
call
test
iret
mov
fisttpl
int3
out
jnp
xor
mov
jle
push
mov
test
mov
leave
xchg
iret
lret
shl
xor
je
clc
adc
push
inc
or
fisubrs
xchg
fmulp
mov
pop
shlb
pushl
aad
nop
push
rcrb
loopne
popa
or
jmp
mov
xchg
sub
pop
testb
imul
mov
mov
jbe
inc
sti
push
jmp
sbb
sub
pop
testb
imul
mov
mov
jbe
inc
sti
push
jmp
sbb
or
cmp
dec
jnp
imul
mov
mov
jbe
inc
sti
push
jmp
sbb
sub
pop
testb
imul
and
push
xor
add
adc
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
inc
leave
push
fldenv
jb
add
pusha
testl
dec
xor
imul
pop
mov
leave
push
jmp
adc
ret
pop
subl
ret
sbb
leave
mov
stc
sbb
jb
cmp
xor
mov
xchg
jns
pop
loopne
testb
leave
push
lods
bound
adc
stos
sbb
push
loope
mov
push
xchg
shll
scas
cltd
loop
testl
scas
movsl
mov
cmp
push
js
leave
into
xchg
mov
fcoml
movhps
fs
lret
ficoms
sub
shlb
xchg
or
sub
mov
sahf
ss
xchg
sahf
in
std
mov
mov
inc
xor
ret
jp
dec
xchg
or
jge
xchg
dec
mov
push
pop
and
decb
mov
pop
loop
mov
mov
mov
and
mov
bound
cmp
mov
dec
imul
psadbw
in
mov
leave
add
jmp
push
and
dec
pop
xchg
imul
sbb
movsb
and
push
scas
or
push
int3
xor
ret
xor
fs
pusha
lret
stos
xlat
pop
js
adc
xlat
addr16
loop
mov
lret
pop
repz
cs
lods
add
adc
ret
pop
loop
bnd
or
cmp
push
fldenv
jb
add
xor
loop
bnd
or
cmp
hlt
int3
mov
dec
cli
dec
nop
stos
push
and
pop
daa
jbe
jnp
adc
mov
or
sbb
ja
test
enter
and
imul
rolb
movsb
aam
jle
mov
fdivs
jns
insl
stos
sub
sbb
lds
or
fidivl
cli
in
dec
xchg
scas
enter
sub
adc
push
in
add
and
jno
movsb
js
push
jb
ficoml
dec
in
in
fsubp
pop
pop
ret
jecxz
xchg
push
fildl
int
xor
outsl
mov
add
rorb
sti
xor
loopne
outsl
pop
mov
push
jmp
and
push
in
pushf
dec
and
pushf
sub
xchg
stos
xor
js
sbb
sahf
loopne
mov
sbb
dec
je
jns
iret
leave
mov
push
outsb
stc
and
xor
and
jo
sbb
inc
jo
fwait
std
sub
mov
rclb
cmp
mov
jmp
dec
add
sub
test
outsb
int3
xor
and
fiaddl
outsl
mov
es
push
out
push
stos
dec
out
and
cwtl
adc
repnz
loopne
bound
push
sbb
mov
jmp
and
out
lret
xor
out
push
icebp
or
daa
js
mov
gs
lcall
inc
fs
ret
mov
pop
std
scas
pop
imul
add
xor
pop
jbe
fcmovnb
inc
nop
scas
mov
mov
and
sub
ja
jecxz
les
addr16
jg
mov
rol
dec
pop
add
les
lds
aas
pop
movsb
jge
mov
add
mov
movsl
mov
stos
cmp
gs
cmp
sbb
and
sub
jno
imul
in
movsl
repz
pop
loope
movsb
jo
andl
inc
push
rol
jmp
fcmovne
sbb
ss
add
push
in
push
xchg
cs
divl
cmp
insb
lds
out
mov
movd
xchg
js
xlat
pop
cmp
test
mov
movsb
push
pop
dec
dec
ffree
inc
aaa
and
pop
sub
pop
insb
sbb
mov
push
in
mov
lret
dec
mov
mov
push
ljmp
add
sbb
mov
ds
cmc
push
or
cmp
into
sbb
mov
mov
movsl
jbe
movsb
enter
or
or
jae
fsubl
cmp
stc
mov
pop
leave
sub
and
mov
mov
mov
adc
stos
je
add
fisttps
lret
add
lods
inc
pop
rorl
pushf
test
neg
inc
in
dec
jge
and
je
pusha
dec
jo
inc
mov
lahf
leave
iret
in
add
xchg
into
loopne
adc
clc
repz
pop
int3
jg
ret
push
dec
jge
pushf
mov
std
cltd
adc
cmpsl
sbb
rclb
push
fldl
adc
adc
aaa
sub
shrl
fwait
and
test
fdivl
inc
scas
or
push
adc
mov
out
mov
js
cmpsb
jno
pushf
imul
xchg
rorb
data16
out
sbb
and
mov
gs
out
cli
aaa
lods
adc
xor
or
lods
punpckhdq
jg
and
in
sarl
cmpsb
push
xlat
xor
jo
cmp
ljmp
mov
mov
mov
sub
lret
push
dec
xlat
sub
push
movsl
rorb
cmp
repz
cmpsl
adc
fs
cmpsb
mov
cltd
adc
xor
ds
fstl
into
dec
pop
cmpsb
xlat
pusha
stc
mov
int3
jb
sarl
cmp
aas
add
adc
cmc
xsave
imul
fildll
push
testl
inc
jbe
imul
xchg
fucomi
xchg
out
mov
daa
sbbb
lds
and
add
dec
nop
cmpl
test
cmp
test
add
adc
dec
test
ljmp
test
inc
and
jno
mov
sbb
in
jne
mov
pop
in
pop
mov
pop
gs
ljmp
inc
xlat
loope
pop
pop
adc
push
or
std
aaa
jb
clc
les
sbb
inc
xor
add
sbb
mov
inc
sub
imul
sub
ss
push
push
push
mov
out
loopne
jmp
aad
pop
pop
inc
mov
mov
mov
mulb
faddl
imull
push
in
cmp
sbb
imul
es
dec
icebp
jmp
inc
mov
repnz
mov
or
adc
push
out
push
inc
repnz
jle
jge
shrl
mov
mov
imul
rolb
call
add
jo
xchg
in
and
ret
mov
xchg
adc
bound
mov
xchg
stos
cmp
cli
mov
adc
adc
ljmp
xchg
mov
outsl
xor
ljmp
mov
push
cmp
xchg
inc
paddsb
movb
aad
or
in
xor
pop
xchg
jl
jno
and
movsl
mov
push
adc
adc
stc
dec
xor
mov
xchg
xor
cmc
orb
xchg
aas
sbb
fxch
jle
lret
and
add
cmp
aad
cmp
cmp
daa
aad
dec
roll
jae
out
or
xchg
xlat
sbb
push
leave
xchg
test
push
ss
sbb
fdivrl
xor
push
cmc
add
loop
or
mov
jp
push
jmp
and
mov
dec
dec
enter
jne
sub
jg
mov
inc
repz
rcrl
das
adc
fwait
sti
dec
fs
out
or
xchg
mov
sub
lcall
or
pop
ret
fiaddl
sub
lret
pop
stos
push
lds
or
xchg
ret
clc
pushf
inc
add
out
in
sbb
push
pop
jl
cmpsb
cltd
mov
pop
cmp
xor
mov
hlt
inc
and
jne
dec
dec
jmp
cmpsl
add
and
fcoms
jp
aad
loopne
or
adc
mov
push
std
push
shll
inc
shll
and
adc
popf
mov
xor
adc
lods
in
adc
lahf
add
jbe
cmp
pop
imul
shrl
push
pop
cmc
mov
icebp
dec
enter
inc
or
hlt
rcrb
and
xchg
jbe
pop
out
test
mov
fadds
mov
ret
dec
loopne
stos
jg
xor
xor
or
andb
sub
cmp
and
pusha
jle
lea
imul
ret
sub
sbb
xchg
scas
pop
pop
pop
aad
jmp
jno
dec
xor
jb
adc
sub
loope
push
lea
pop
dec
int3
jne
mov
mov
incl
xchg
and
pop
shrl
mov
push
cmp
fsubrl
and
push
pop
dec
daa
or
add
push
fwait
mov
or
cmp
addl
in
in
out
mulb
cmp
sahf
hlt
cmp
sahf
loope
nop
xor
cmpsb
xchg
daa
pop
xchg
dec
mov
rorl
cmpps
push
das
data16
mov
mov
stos
jecxz
insl
js
je
xchg
jb
lret
out
mov
ja
pusha
ficoml
mov
adc
xchg
pop
xor
sahf
addl
or
push
mov
and
ja
jns
faddl
leave
rolb
vunpcklpd
movb
adc
outsl
nop
pushl
fdiv
cmp
repz
pop
mov
or
dec
int
sbb
stc
sbbl
repz
dec
movsb
mov
hlt
je
xor
movsl
das
sbb
aaa
mov
pusha
lret
std
movb
xor
roll
pusha
xor
and
push
mov
in
stos
fstps
pop
and
and
xor
cmp
enter
mov
movsb
cwtl
stos
dec
rcl
xor
cltd
mov
mov
dec
fcmovbe
dec
test
mov
fld
shll
mov
push
xor
test
and
dec
into
lcall
cmc
lea
push
xlat
jno
cmp
mov
pusha
ret
inc
jp
xchg
xchg
aad
ret
scas
test
ficoms
daa
lock
mov
pop
in
and
test
xchg
mov
inc
jbe
popl
aaa
aaa
aam
or
and
ficoms
fimull
and
jg
xchg
lret
test
fcmovnu
add
bnd
fisubrs
in
rolb
sbb
pop
or
xchg
mov
test
jo
ljmp
sub
cmc
pop
mov
rorl
xchg
sbb
and
insl
add
popa
mov
inc
lret
cs
push
and
sarl
aad
or
pop
addr16
xchg
cs
cmp
outsb
xor
adc
and
pop
inc
aam
int
sub
dec
out
clc
imul
adc
in
and
xchg
into
sub
push
jge
or
lahf
xchg
lahf
cmp
ucomiss
dec
lret
jo
cmp
jbe
xor
xchg
aas
loopne
loope
push
nop
or
subl
rcll
mov
add
sub
mov
add
dec
sahf
in
pop
loopne
in
fiaddl
mov
notl
cmp
aas
jnp
jbe
adc
mov
test
jecxz
xlat
int3
dec
shrl
les
into
cmp
cli
push
inc
pop
add
lods
jb
ss
xchg
shr
mov
jmp
dec
js
movsw
call
fcmovbe
stc
pop
jmp
adc
ror
and
ss
pop
shlb
lea
push
adc
adc
fsub
inc
mov
and
aad
je
pushf
inc
movsl
pop
pop
add
pop
add
int3
inc
int
sbb
mov
in
lret
xor
out
pop
ja
mov
loop,pt
add
hlt
dec
cmpsl
cmp
xchg
ret
adc
add
sbb
jno
leave
fwait
sahf
mov
mov
popf
lock
inc
push
mov
lahf
cmp
aaa
mov
mov
cmp
cmp
pop
enter
mov
faddp
insl
cmp
in
das
jmp
jl
and
mov
lods
testb
bound
jl
mull
iret
adc
adc
or
and
gs
and
lock
mov
cmpsb
inc
xor
data16
frstor
std
lods
and
sub
push
addr16
jnp
negl
loope,pn
pop
sbb
jge
add
int
lcall
xchg
mov
gs
scas
pop
xchg
cmp
ljmp
into
adc
cli
xchg
jge
or
loop
loopne
es
sbb
repnz
repz
divps
andl
decl
test
add
dec
mov
push
lods
js
inc
mov
jge
mov
mov
pop
test
into
mov
inc
neg
and
lcall
out
leave
cmp
push
rclb
ret
jns
and
ret
ret
inc
loop
lahf
mov
mov
int3
es
loope
sti
sub
jl
and
cld
cs
inc
cmp
jecxz
inc
test
lock
pushf
cmp
or
add
outsl
mov
jl
or
aas
mov
xchg
push
dec
sub
stos
and
mov
push
movsb
loope
or
adc
enter
or
and
out
rolb
jne
popf
add
pop
sub
mov
mov
ss
stos
aam
fstl
inc
dec
mov
test
inc
jmp
shl
test
dec
inc
mov
xchg
test
push
adc
loopne
inc
xlat
cmp
repz
flds
xorl
imul
mov
inc
in
lahf
pop
mov
jge
mov
jae
or
pop
xchg
xor
or
aas
mov
pop
xchg
fucomp
rcrl
sbb
cmp
inc
mov
imul
cli
and
or
cmpsb
lcall
add
xor
mov
cld
xor
mov
lock
je
inc
pop
inc
push
aaa
sub
sbb
sti
mov
inc
in
push
jns
popf
cltd
inc
and
add
cmp
insl
cmpsb
cmpb
jns
imul
xor
cmp
pop
jecxz
pushf
pop
xor
xchg
push
rclb
xlat
in
lcall
scas
cmp
xor
jle
push
int
mov
test
cmp
mov
xchg
add
call
out
or
mov
mov
bound
jb
loopne
shrb
push
push
in
data16
sbb
xchg
or
mov
aaa
xchg
test
enter
xchg
lea
out
int
jg
cmpsl
decl
xor
lock
pop
stos
push
xor
jae
aam
in
mov
ljmp
cmpsb
or
pop
xor
push
das
aaa
xchg
xchg
jo
test
cmpsl
mov
sahf
mov
dec
xor
faddp
test
mov
shll
rcrl
je
outsl
add
scas
in
arpl
sbb
arpl
pop
clc
dec
stc
mov
add
adcb
mov
jle
mov
or
fstpl
mov
dec
cmpsl
xor
imul
and
filds
xor
aas
mov
jb
mov
mov
and
sbb
fadds
cltd
push
add
mov
or
inc
sub
in
fcomps
inc
xor
pusha
or
jb
mov
cmp
pop
push
sar
pop
adcl
mov
fdivr
lcall
and
mov
cmp
notb
mov
js
scas
in
loop
enter
dec
shl
lea
pop
loope
jle
scas
mov
jle
in
ja
add
inc
popf
daa
daa
push
popa
jnp
cmp
add
mov
mov
iret
std
pop
xlat
pop
jae
xlat
bound
jle
xchg
loop
cwtl
les
jne
mov
mov
pop
in
dec
imul
fiaddl
mov
fcmovnbe
jge
movsb
pop
pop
inc
sbb
pop
mov
sbb
sahf
std
test
es
inc
push
sub
sub
idivl
mov
or
sub
xchg
int
pushf
mov
lods
and
cmp
js
js
dec
mov
mov
mov
xlat
lahf
or
ret
inc
pop
aaa
mov
addl
push
fdivl
iret
clc
mov
push
sbb
jne
adc
loopne
xchg
mov
push
dec
movsb
mov
outsl
inc
jge
mov
mov
negl
push
fstl
fistpl
pop
adc
sbb
and
sbb
cmp
pop
xor
cmc
fbld
mov
hlt
out
add
mov
dec
dec
xchg
pop
sbb
mov
loopne
ret
sub
call
adc
lods
mov
js
push
ss
call
js
repnz
ds
arpl
push
pop
or
or
jmp
jb
add
pop
das
loop
loop
xrelease
bound
and
adc
fsubrs
movsb
andb
jg
lock
add
call
and
push
and
add
insl
mov
lar
cmpsb
push
dec
rcr
inc
popa
dec
push
sbb
sbb
popf
out
mov
push
push
das
add
stc
fwait
inc
jnp
mov
cmp
inc
daa
repnz
inc
scas
sahf
cld
mov
loope
and
outsl
das
leave
jae
subl
sbb
mov
lods
mov
daa
or
ret
enter
and
inc
in
daa
xchg
pop
or
ljmp
std
mov
and
cmpsl
lcall
test
dec
stos
mov
test
xchg
jne
arpl
mov
adc
dec
dec
add
aam
ds
cs
pusha
fsubs
xchg
push
sahf
or
mov
jb
jnp
scas
or
jle
andb
cmp
sbb
dec
sbb
sbb
mov
andl
push
ja
or
fisttpll
xchg
sbb
pop
cmpb
adc
cmpsl
xor
xchg
jle
jnp
push
sub
pop
ljmp
and
sub
xor
mov
insb
clc
or
sarl
xor
loopne
test
out
sbb
cmp
jg
aas
add
jns
or
cmp
cld
or
mov
aaa
mov
sbb
xchg
jg
pushf
jno
dec
sub
mov
jp
bound
sub
out
xor
push
pusha
add
lock
idiv
movsb
aas
pop
inc
aas
mov
sahf
xchg
pop
jne
iret
mov
repnz
and
push
xor
mov
and
iret
lods
inc
jns
dec
mov
mov
into
add
dec
imull
jo
sbb
scas
fwait
add
outsl
sbb
push
jmp
mov
or
xchg
roll
cmp
mov
push
xor
pop
dec
stos
dec
movsl
and
stc
divb
les
into
cmp
adc
nop
into
mov
inc
adc
pop
jmp
imul
insl
xchg
rcrl
adcb
adc
aam
mov
fmul
mov
adc
shlb
lock
mov
cs
in
iret
and
pushf
cltd
add
iret
ret
pop
fsin
call
cmc
push
js
adc
dec
aad
cmpb
cmp
dec
mov
pop
paddsb
dec
push
js
sbb
cmp
nop
or
mov
mov
lret
arpl
testb
fistpl
popa
inc
cmp
jb
sub
push
adc
test
outsl
mov
decb
outsl
divl
out
clc
test
or
sbb
xchg
imul
sub
adc
mov
or
dec
dec
js
mov
in
dec
aad
imulb
mov
out
cli
mov
xlat
mov
ja
popf
inc
mov
das
mov
in
or
imul
pop
sub
rcll
or
xor
int3
mov
cmp
loop
stc
push
dec
inc
out
js
inc
and
ffreep
mov
cmp
add
test
adc
xchg
dec
adc
jnp
clc
jl
or
cwtl
mov
jno
mov
dec
in
sbb
xchg
adc
or
or
iret
and
dec
out
inc
xchg
test
pop
clc
mov
mov
add
lret
std
mov
repnz
lea
inc
das
cmpsb
inc
cmp
mov
shlb
out
test
sbb
cmpl
dec
xchg
pop
or
fs
das
addl
jp
or
jnp
pop
jmp
or
inc
sti
cmp
inc
call
xor
mov
stos
inc
iret
sbb
sub
int
xchg
cld
hlt
mov
and
jne
mov
xchg
cmp
int
adc
ss
cmp
mov
push
inc
jbe
rolb
adc
fidivl
add
out
fwait
mov
mov
fdivs
adc
sbb
popa
push
arpl
dec
jecxz
addr16
cvtpi2ps
fwait
pop
inc
or
std
iret
mov
inc
ret
mov
or
xchg
xchg
sbb
out
ret
cmp
cmpsl
mov
sub
cwtl
je
inc
pop
mov
cli
and
xor
lods
lret
push
sbb
mov
test
icebp
sti
push
sub
and
pop
shll
xor
and
fwait
push
sub
sub
loop
cmpsb
ret
mov
add
push
cmc
mov
fnstsw
das
mov
test
sub
aad
dec
sub
xchg
cld
mov
mov
push
nop
mov
popf
dec
test
lods
inc
cmc
add
mov
aam
sub
cltd
test
sub
clc
mov
sub
inc
sub
sub
and
sub
fwait
stos
popf
pushf
insb
xor
mov
hlt
mov
roll
or
push
aam
pop
fmulp
or
movsb
mov
inc
js
in
dec
jo
inc
enter
jno
inc
cmpsl
inc
fdivl
mov
add
sub
movsb
frstor
daa
or
in
pop
pop
mov
leave
outsl
jns
rep
jl
test
cmc
shr
aad
cmp
pop
fwait
jmp
cli
mov
out
imul
cmp
arpl
into
or
xchg
jbe
loope
lods
pop
jnp
lock
push
sbb
mov
sub
rorl
jb
add
xor
loop
bnd
or
cmp
push
fldenv
jb
add
xor
loop
bnd
or
cmp
flds
jmp
adc
ret
pop
adc
jns
or
cmp
push
fnstcw
jmp
add
and
mov
ret
repz
imul
out
dec
movb
dec
jp,pt
push
add
add
lahf
scas
lret
sahf
lret
out
lret
fisubrs
ds
push
push
sbb
jle
dec
sub
lods
lret
scas
sub
mov
aaa
push
bound
jb
add
data16
inc
fimull
test
scas
nop
leave
cwtl
ret
fisubrs
cs
push
ss
xchg
adc
rcrl
xor
jbe
mov
movsl
test
jg
xchg
fucom
cmc
or
jecxz
adc
xor
sahf
es
push
into
daa
xchg
xlat
rorl
xor
jp
cmp
jle
cmp
mov
sub
sbb
iret
adc
insl
fimuls
push
loope
aas
dec
pop
mov
out
mov
popa
pop
mov
inc
mov
push
mov
and
push
decb
lret
push
cmp
and
sahf
xor
push
and
push
out
cmpsl
push
sbbl
add
mov
stos
into
lcall
add
outsb
adc
push
xor
mov
cmpsb
loop
xrelease
into
mov
sub
ds
femms
pop
jle
adc
and
scas
lret
fildl
iret
mov
push
dec
ds
jle
sbb
fs
push
sub
fcom
lret
cli
lahf
pushf
stc
xchg
lret
mov
pop
outsl
push
bound
or
dec
sub
scas
lret
mov
sahf
lcall
ficomps
dec
jp,pt
push
sbb
jle
dec
sub
scas
lret
mov
sahf
lcall
ficomps
mov
xor
bnd
hlt
cmp
xchg
es
cmp
mov
pop
jecxz
enter
pop
pushf
xchg
int3
mov
stos
pushf
jp
add
subl
and
pcmpgtw
jge
and
sbb
jle
sub
adc
popa
lods
mov
rcll
ss
int3
ljmp
mov
adc
sub
cmpsl
mov
dec
sbb
mov
fisubs
fisubrl
pop
push
sub
pop
pop
sbb
sub
mov
stos
pusha
cli
dec
imul
int
inc
dec
scas
test
daa
adcl
ss
adc
mov
push
cld
in
loop
je
and
ds
lods
icebp
into
repnz
add
xchg
and
dec
fs
adcl
lret
loop
sarl
les
mov
inc
sub
fwait
in
push
stos
or
push
inc
repnz
push
fwait
test
xor
arpl
inc
test
sub
fcomp
xlat
pop
xchg
jae
cmpsb
mov
insl
cltd
xor
pop
or
test
push
add
outsl
lock
ret
out
mov
imul
dec
enter
cmp
push
imul
repz
stos
adc
inc
mov
dec
mull
mulb
fdiv
pop
je
adc
outsl
mov
inc
jae
flds
in
subb
addb
and
mov
pushaw
mov
xlat
js
mov
mov
imull
fcoml
dec
lea
sbb
push
sbb
push
je
gs
imul
mov
xor
mov
aas
add
int
ss
cld
rcll
dec
mov
jmp
jp
lret
jbe
call
shll
cmpsl
add
mov
into
xor
fstpt
xchg
mov
jo
cli
sbb
lret
pop
ja
jl
inc
cmp
sub
rclb
nop
dec
int3
popf
hlt
fdivs
push
lea
pop
rorl
push
pop
daa
jae
pop
sbb
test
test
fisttpll
arpl
adc
sahf
xchg
mov
mov
mul
lret
dec
outsb
fstl
sub
jg
lea
mov
xchg
lret
mov
hlt
push
shll
loope
jbe
cwtl
cmpsb
and
leave
jg
lret
adc
cwtl
cmp
xchg
mov
sub
mov
lds
sbb
sub
rcr
or
or
out
push
std
adc
adc
fidivrl
push
js
scas
test
inc
dec
jle
dec
xor
fwait
sbb
lret
lahf
pop
xor
jb
xor
shll
mov
jge
lahf
addr16
stos
dec
out
sahf
inc
mov
xor
fmull
push
pop
mov
out
cmp
adc
aad
xor
repnz
sub
popa
pusha
sbb
lods
adc
pop
sub
jne
cwtl
in
xor
inc
dec
loopne
add
mov
jb
adc
inc
sar
pop
pop
or
cs
dec
xor
stos
cwtl
pushf
sub
jno
jg
add
in
cs
sub
mov
jns
cmc
and
mov
sub
daa
cwtl
out
mov
in
adc
call
push
fdivrs
movsl
sarb
mov
std
mov
je
sub
int3
inc
pop
push
movsl
fucomp
leave
mov
mov
push
addb
cli
push
cmpsb
xor
mov
push
jle
pusha
bound
jae
inc
ja
mov
insb
loope
xor
xchg
lahf
lods
mov
dec
scas
lret
xorb
xlat
jp
jmp
xor
lock
xchg
ljmp
inc
popf
aas
push
insl
jne
adc
pop
mov
fwait
test
je
xchg
in
cwtl
dec
mov
xchg
pop
dec
in
cli
sbb
out
jae
stos
adc
mov
inc
lret
icebp
mov
and
jmp
stos
addb
mov
lds
xor
or
mov
cmp
ffreep
imul
inc
out
xor
fstl
out
int
cmp
jae
inc
fcoms
or
add
mov
jmp
xchg
pop
sub
xchg
dec
fcmovb
loope
fdivr
int3
mov
mov
and
push
lds
or
mov
fisttps
jl
push
scas
enter
sub
leave
bound
lods
pop
jl
push
jne
sub
decl
mov
jae
and
mov
test
xchg
mov
mov
cmp
loope
cmp
test
lahf
push
fstpt
fnstcw
sub
ja
and
sub
xchg
add
or
add
or
ss
cmpsb
xor
adc
sub
xor
inc
pushf
arpl
sahf
mov
ss
xchg
dec
movsl
or
shrl
das
mov
fwait
jecxz
sub
xchg
sub
movsl
incb
andb
aas
sbbb
je
testb
pushf
outsl
cmc
imul
ljmp
mulb
repnz
cli
xchg
dec
mov
test
rcr
test
and
jae
arpl
incb
jp
cmc
push
lods
loopne
mov
cmp
jnp
mov
mov
mov
arpl
das
mov
sbb
popa
stos
push
dec
push
out
imul
xor
or
jge
and
bound
incb
mov
or
stos
push
dec
xchg
pop
push
sarl
mov
emms
pop
subl
dec
js
sbb
call
subb
or
int
leave
jnp
daa
mov
inc
imul
xor
sbb
mov
jns
stos
je
cmpsl
mov
aad
mov
cmc
mov
add
addl
xchg
push
loop
int
shll
pop
sub
xor
xlat
lret
jmp
in
xchg
pusha
mov
mov
cmp
inc
pop
xor
jle
scas
xchg
xchg
call
ds
out
divl
outsb
jecxz
cmpb
mov
pop
addr16
pop
cmp
cltd
dec
imul
jecxz
push
aaa
ja
das
xlat
and
adc
or
popf
out
jmp
mov
iret
xchg
insl
lret
xlat
shlb
dec
xchg
jo
or
scas
mov
stos
inc
lret
adc
mov
out
repz
test
adc
pop
adc
sbb
in
out
mov
pop
mov
test
negb
push
dec
ds
pop
fimuls
jge
test
mov
mov
add
xchg
faddl
or
xchg
dec
push
aam
les
mov
ret
jb
out
cmp
adc
mov
mov
push
mov
sbb
inc
outsl
adc
fidivl
push
mov
in
dec
or
mov
xchg
out
or
lods
out
arpl
gs
int3
fsubs
shll
shlb
cmp
xchg
je
push
mov
sub
jl
mov
push
inc
fidivs
add
aas
div
sbb
sbb
and
ljmp
das
arpl
xchg
lret
pushf
inc
mov
xchg
inc
lock
ficomps
jl
jbe
pop
imul
insb
xchg
pop
xchg
dec
outsl
call
cmp
fldt
scas
aas
or
fs
push
divb
mov
rcrl
dec
lret
outsl
mov
lcall
pop
lods
repnz
dec
in
insb
popa
dec
cmpsb
outsl
push
insb
or
and
mov
jmp
mov
inc
sarb
mov
ret
sahf
rcll
out
pop
pop
mov
or
andb
ret
add
sub
outsl
push
imul
loopne
sbb
out
jns
dec
test
mov
mov
mov
or
enter
mov
cli
loope
pop
test
dec
mov
push
cmp
xlat
icebp
sub
xor
loopne
or
sti
push
and
sbb
jmp
aam
mov
xchg
enter
adc
push
push
std
ja
sbb
dec
cmp
dec
sti
or
mov
lds
jp
lods
in
mov
jg
lods
xchg
popa
add
push
fistpl
pop
and
jae
inc
sbb
dec
adc
int
ficoml
repz
int
out
and
and
xor
jg
out
test
or
inc
mov
jmp
push
ss
shlb
stos
push
jns
mov
dec
popf
aam
cmp
fbstp
insl
int3
loopne
imul
mov
arpl
jo
cmp
fsubrs
data16
mov
dec
push
test
mov
addr16
les
lret
push
out
leave
mov
dec
ljmp
ja
dec
and
in
and
arpl
out
insl
inc
cwtl
scas
sti
or
int
xor
inc
adc
xlat
outsb
stos
inc
add
sti
and
ds
sub
adc
daa
mov
fcmovne
sbb
and
or
call
aad
push
push
fnstenv
push
and
decb
inc
dec
bnd
sbb
rorl
adc
fcmove
cmp
xchg
pop
mov
cltd
jnp
or
dec
jno
outsb
std
sbb
push
rorl
test
jne
int
scas
xchg
xchg
movl
sbb
sbb
imul
negl
mov
add
scas
aad
lods
xor
iret
adc
shrb
sub
loop
daa
repnz
xor
sbb
inc
jbe
in
dec
or
aad
jo
pop
movsb
pop
or
mov
icebp
or
mov
jbe
sbb
sub
or
push
or
push
add
lds
into
add
fwait
cmpsl
mov
sub
aaa
mov
cld
loope
ljmp
sahf
sbb
ds
jne
push
aam
repz
mov
ja
pop
add
dec
out
sub
add
mul
jo
pop
test
xor
nop
push
scas
outsl
out
ret
mov
loop
pop
mov
shlb
xor
mov
repnz
call
pop
jns
lods
jo
cmp
push
loop
xor
aam
icebp
lahf
cmpb
cld
out
push
das
cmc
shl
cmp
dec
sbb
add
or
sar
xchg
and
inc
xchg
xchg
push
adc
push
lret
fdivrs
mov
in
fwait
push
or
enter
loopne,pn
cmp
repz
in
sar
in
push
sub
dec
lock
insb
sti
notb
lods
cld
sbb
subb
pop
sub
xor
adc
sarl
and
xchg
jo
shrb
xor
ret
pop
mov
scas
ror
push
adc
mov
adc
mov
fwait
xchg
sahf
mov
adc
xchg
popa
adc
scas
jecxz
mov
inc
std
push
mov
fnsave
call
push
test
fwait
dec
pop
cmpsl
lahf
mov
leave
mov
cltd
out
int
sarb
xor
xchg
ret
mov
push
sbb
lods
imul
mov
lea
xor
ficompl
into
repz
mov
mov
popa
xchg
mov
popa
adc
sbb
jae
adc
lds
pop
decl
dec
mov
rol
movsl
sti
aad
dec
adc
outsb
xor
rol
push
cmp
mov
push
call
mov
mov
push
imul
xchg
loopne
inc
lcall
in
add
mov
loop
inc
xor
out
sub
dec
push
les
inc
mov
mov
fldcw
movsb
shll
icebp
mov
mov
ljmp
iret
ret
imul
pop
jl
ret
mov
in
push
inc
cmpsl
in
sub
xlat
out
loopne
stc
mov
addb
mov
inc
mov
xor
in
fcomps
das
repz
lds
add
aam
js
xchg
stos
sbb
leave
xchg
nop
add
xchg
cmp
mov
imul
mov
add
stos
and
pop
sahf
dec
xor
dec
cmp
push
sub
imul
daa
jne
push
in
push
mov
dec
pop
les
mov
push
cmp
cli
ljmp
xlat
adc
pop
ror
sbb
lods
lcall
mov
add
mov
push
pop
and
jle
cmp
xchg
and
inc
sbb
cmp
and
jl
and
movsb
lods
adcl
roll
jge
dec
dec
mov
and
push
push
rolb
mov
inc
addr16
cmp
testb
xor
inc
xchg
pop
fsubrl
mov
mov
cltd
testb
fsubl
cmp
pop
xchg
xlat
stos
sahf
xor
fdiv
cmp
adc
movsb
iret
sub
xchg
push
cmc
lcall
xchg
loope
xchg
das
icebp
adc
adc
adc
or
sbb
xor
jb
enter
jl
test
orl
push
aaa
fstl
aad
push
adc
mov
adc
xor
push
jg
stos
into
xor
jno
inc
or
pop
call
or
call
xchg
repz
pushf
rolb
sub
mov
inc
adc
inc
add
insb
mov
lahf
mov
sub
ja
jl
xchg
pop
fistpl
repnz
inc
idivl
push
jb
cwtl
or
push
fsubr
xchg
cmp
push
daa
in
push
mov
pop
jmp
sbb
and
shlb
jl
mov
jmp
in
out
insb
sub
idivl
adc
jmp
fwait
rorl
ficomps
xchg
jecxz
stc
jbe
repz
mov
lock
lahf
jge
push
add
cltd
pop
sbb
cmpsl
xor
out
stos
fwait
sbb
mov
call
jns
jmp
scas
outsl
xchg
insl
or
das
int
pop
mov
es
cmp
notl
outsl
jo
pop
addr16
xchg
sub
pop
mov
cmc
sbb
loopne
sti
loopne
je
lods
lds
push
call
sub
or
inc
subl
xor
ja
adc
mov
mov
cs
fs
cs
cli
push
xchg
pop
push
cmp
jne
lock
inc
outsb
popf
imul
inc
neg
idivb
mov
push
rcrb
sbb
dec
fstpt
ljmp
dec
dec
mov
int
insb
xchg
mov
loope
sbb
cmp
and
and
loop
jae
jns
and
aaa
int3
in
adc
inc
ljmp
add
je
inc
imul
xchg
add
push
sahf
mov
aad
jp
dec
sar
test
jle
pop
sti
sahf
mov
cmp
cmp
nop
pop
pop
fstpt
roll
fmuls
xchg
fidivl
push
in
jp
scas
mov
or
loopne
scas
ljmp
sahf
out
xlat
and
int3
in
cmc
nop
ret
cmpsb
pushf
cmp
addb
mov
lcall
sbbb
lahf
addb
push
test
lds
dec
mov
push
arpl
cmpsl
scas
sbb
mov
push
insl
out
orb
std
cmp
jo
mov
das
sti
push
iret
jbe
mov
add
fisttps
int3
divl
or
sub
movsb
push
outsl
cltd
push
and
jge
jecxz
ret
adc
icebp
mov
add
hlt
add
or
or
jg
add
push
dec
sti
jne
xchg
scas
mov
adc
pop
jmp
dec
xor
sbb
out
sbb
pushf
add
cltd
lret
sbb
insl
mov
movsb
adc
pushf
or
sub
mov
mov
jno
mov
test
mov
xchg
mov
push
jg
les
xchg
xor
xchg
push
or
xchg
push
in
vcvtdq2ps
mov
xchg
xchg
mov
je
or
dec
sub
xor
dec
mov
push
loope
les
pmaxsw
mov
hlt
stos
cld
bound
or
sbb
xchg
xchg
fs
lods
js
out
mov
mov
dec
pop
pop
push
mov
cmp
mov
cli
push
in
mov
sbb
movsb
mov
adc
popf
mov
test
adc
mov
dec
pop
sub
movsl
fs
lcall
adcl
cli
movsb
adc
imulb
jle
sub
std
je
add
jns
pop
cld
dec
jo
add
add
repz
push
xchg
fwait
xchg
clc
inc
inc
pusha
jno
jp
sarb
xor
sub
je
xchg
xorl
xor
es
in
lds
ds
xchg
lret
mov
jge
int
test
push
imul
enter
ljmp
mov
out
adcl
sti
repnz
adc
xor
mov
call
sub
sahf
mov
rclb
sarl
pop
out
push
loope
out
popa
mov
xor
daa
lock
xchg
clc
testb
mov
orb
mov
repnz
into
inc
sbb
adc
xchg
pop
lahf
xchg
out
repnz
jb
sub
sub
xorb
pop
xchg
pop
mov
je
jg
sbb
repnz
xchg
fstpt
je
notl
int
outsb
sub
fldcw
mov
sub
out
outsb
jno
sti
cwtl
out
dec
pop
stos
and
and
dec
fldcw
dec
dec
mov
mov
fcmovne
js
popf
mov
cmp
xchg
imul
push
clc
mov
cmc
mov
pop
mov
icebp
pop
jl
repnz
xor
mov
pop
jno
mov
add
shrb
sbb
mov
mov
fnsave
rcrl
push
int3
lock
cmpsl
jae
outsb
pop
clc
pusha
mov
jb
insl
ds
jl
pop
das
jmp
jno
pop
in
cmpl
xchg
sub
or
pop
lods
ret
jp
sbbl
sbb
pop
pop
push
sub
xchg
cmp
sti
je
out
or
nop
dec
test
and
push
in
inc
xchg
repz
testb
jle
adcl
repnz
movsb
loopne
gs
cmpl
in
push
out
mov
ds
jne
mov
icebp
cmc
inc
push
aad
xor
test
ficompl
inc
push
pop
insl
jnp
int3
stc
rcrl
and
in
inc
xor
push
jns
dec
jg
mov
stos
int
ds
mov
mov
ret
or
pusha
popa
mov
test
shl
jecxz
push
mov
or
ror
pop
xor
lret
push
xor
lods
dec
out
and
dec
stc
xchg
insl
rol
or
loop
std
mov
inc
sbb
aad
in
pop
jecxz
mov
add
icebp
adc
fcomps
dec
sbb
in
dec
inc
imul
sub
inc
xchg
cmp
es
arpl
mov
inc
mov
sub
and
mov
pop
fstpt
push
stos
jno
loopne
shrb
enter
cmpsb
mov
inc
call
repnz
or
aaa
push
xor
divl
add
xchg
outsb
pop
pop
push
sbb
mov
pop
xchg
cmp
cld
hlt
sbb
fadds
xor
sbb
in
aas
jp
je
sahf
aad
icebp
mov
inc
popf
test
mov
ds
push
fisubrl
bound
jecxz
fdivr
sub
sbb
mov
stc
jp
cltd
cli
ret
add
jb
or
call
mov
in
jno
cmp
push
dec
adcb
pop
test
in
add
repnz
mov
dec
mov
ss
adc
adc
pushf
stos
xchg
call
inc
mov
shll
add
xchg
sub
addr16
mov
mov
das
repz
mov
mov
loope
fisubrl
lock
mov
jge
jns
mov
add
testl
push
mov
and
push
imull
lcall
push
sar
mov
fs
pop
outsl
icebp
sbbb
inc
scas
fiadds
int3
pop
pop
pushf
arpl
jo
add
repz
jns
call
xchg
outsl
dec
sar
jne
adc
aas
pop
movsl
pop
das
jnp
dec
push
test
in
cmpsl
push
sbb
pop
add
jmp
imul
push
sarl
jno
scas
xchg
fwait
outsb
adc
jae
mov
insl
adc
xor
lret
adc
inc
cld
icebp
les
jecxz
in
add
icebp
sbb
lahf
xor
or
and
inc
flds
jo
lods
js
jne
cmp
fsts
sbbl
and
xchg
jmp
shrb
repnz
inc
arpl
insb
dec
int3
and
in
dec
mov
out
fcmovb
clc
jecxz
cmp
sub
scas
stos
movsb
or
fwait
mov
lret
mov
or
or
jmp
or
loopnew
int
out
pop
adc
inc
lock
xchg
sbb
not
jbe
lret
sub
mov
aam
insl
call
push
mov
loope
push
sbb
jle
dec
sub
scas
lret
mov
sahf
lcall
ficomps
dec
jp,pt
push
sbb
jle
dec
sub
scas
lret
mov
sahf
lcall
ficomps
dec
jp,pt
push
sbb
jle
dec
sub
scas
lret
mov
lahf
lcall
fisubrs
jle
dec
push
push
sbb
jle
dec
stos
pop
and
mov
jmp
inc
xor
jp
push
pop
aas
dec
das
xor
pop
and
outsl
outsl
cli
lahf
ljmp
fildll
out
jp
push
pop
aas
dec
das
cmp
dec
sbb
outsl
cli
lahf
ljmp
fildll
out
jp
push
pop
aas
dec
das
cmp
dec
sbb
outsl
cli
aaa
ljmp
lcall
xor
push
sub
jle
cwtl
sub
add
xchg
ljmp
pop
test
scas
pop
rclb
fsubrl
das
or
les
mov
mov
mov
xchg
enter
sarb
sahf
addr16
in
cli
bound
push
sbb
and
incl
dec
data16
or
sub
lret
das
cmp
dec
in
bound
push
inc
in
incl
xor
lcall
lock
and
push
in
ljmp
outsl
aaa
iret
test
jp
lahf
bound
pop
stos
ret
ret
orl
xchg
stos
or
pop
push
pop
aas
dec
das
cmp
dec
sbb
outsl
cli
lahf
ljmp
fildll
xchg
add
aas
push
das
inc
push
xor
jg
dec
aas
mov
xlat
cmpsb
jmp
fdivrp
fisubrs
or
das
pop
jl
inc
sub
or
outsl
lahf
out
cli
fimuls
movsb
call
push
push
pop
xor
dec
cmp
dec
sbb
outsl
cli
lahf
ljmp
fildll
out
jp
push
pop
aas
dec
das
cmp
dec
sbb
outsl
cli
lahf
ljmp
fildll
out
jp
iret
inc
loope
outsb
push
mov
jge
rorl
cwtl
push
sub
lret
adc
subl
sahf
jp
adc
jb
fcomps
mov
xchg
push
in
add
mov
inc
mov
in
andb
into
mov
and
adc
dec
jp
ret
push
jo
and
dec
push
pop
leave
sbb
and
push
sbb
jmp
addr16
adc
shlb
fsubr
add
mov
int
xor
mov
jmp
and
inc
adc
dec
mov
inc
shl
movsb
jge
cs
sbbl
fcoms
sub
inc
cmp
hlt
push
aaa
push
pusha
mov
jnp
neg
jecxz
jno
inc
lods
jge
mov
jmp
test
add
mov
faddl
inc
ret
pushf
and
call
xor
scas
cmpsb
xchg
and
jbe
stos
scas
mov
jle
lods
in
jl
lahf
cmp
add
inc
pop
adc
cmp
mov
imul
sub
lret
jb
jne
fldcw
push
jge
movsb
faddl
adc
jge
mov
out
int
mov
and
in
test
jmp
cmp
mov
rcrl
int3
lods
iret
adc
aaa
push
sahf
add
nop
pop
sbbb
shll
cmp
pop
mov
popa
imul
mov
pop
dec
js
pusha
js
inc
sarl
mov
fsubl
fcomps
adc
jmp
fmull
ljmp
mov
das
pop
cwtl
sbb
add
add
cmp
enter
adc
cli
mov
sbb
mov
push
adc
and
jecxz
cmpsb
sbb
mov
sar
repnz
das
std
pop
adc
jnp
jno
and
insl
ret
pop
jle
adc
hlt
shlb
sub
test
mov
cli
fnstcw
shll
int
sub
sub
xchg
xchg
jp
sbb
movsl
xchg
insl
sti
xchg
and
cmp
jp
ds
cmc
push
xchg
inc
fisubl
sar
mov
xchg
inc
cld
xchg
xchg
mov
movsl
jge
adc
and
mov
push
ja
das
push
jb
xor
ds
xchg
inc
xchg
inc
enter
xor
xchg
or
neg
cmp
pop
out
sbb
xchg
enter
mov
cmpsl
mov
ret
pusha
dec
mov
shlb
shl
pop
push
fdivrs
cmp
in
sub
out
inc
lods
ljmp
dec
lods
and
out
mov
lret
les
inc
xor
inc
jne,pn
jno
sub
jae
into
lcall
pop
ss
icebp
xor
push
ss
in
popf
inc
les
push
inc
mov
xor
xchg
fs
pop
loope
shrl
mov
xor
push
stos
pusha
sub
dec
loope
lods
inc
push
std
mov
jecxz
adc
adc
and
adc
and
sbb
jecxz
xchg
addr16
popf
adc
and
inc
mov
push
inc
pop
fisubs
fwait
fdivr
jno
jl
push
xor
fidivrl
mov
ss
jns
scas
je
loope
and
pop
shll
sub
sub
addr16
jne
pavgw
or
or
sbb
inc
xlat
add
dec
pop
fistpll
les
or
cmp
mov
sbb
xor
andl
inc
mov
jle
shl
imul
int3
in
mov
push
iret
or
xchg
stc
outsl
fsubs
sub
popa
sarl
mov
add
inc
clc
xchg
xchg
cld
enter
mov
adc
subb
outsb
push
and
pop
insl
inc
test
dec
outsl
leave
loope
iret
push
scas
out
stos
les
sbb
xor
sbb
fimuls
mov
fcmovu
sbb
pop
pop
and
mov
pop
cmp
test
jle
mov
orb
push
jns
mov
pushf
pop
call
cmp
mov
inc
push
movsb
sbb
or
nop
outsb
int3
subl
rclb
out
jecxz
mov
pop
in
add
xchg
jb
fistpl
test
faddl
out
or
sbbb
fsubrp
pop
test
cmpsl
neg
or
sub
sbb
xor
mov
cmp
lds
sbb
mov
insl
push
inc
pop
cmp
pusha
or
pop
test
in
cwtl
cli
inc
push
mov
adc
or
mov
add
stos
out
in
jmp
arpl
pop
adc
pop
sbb
bswap
aas
dec
std
fidivrl
sbb
push
roll
cmpsl
jmp
dec
pop
jl
lock
cs
test
or
push
push
add
nop
jmp
mov
pop
addr16
mov
imul
xchg
pop
ds
rorl
shlb
fnstenv
lret
xchg
sbbb
ja
out
movsb
mov
test
shll
pop
fidivrl
push
sub
dec
or
data16
xor
sub
jo
and
xor
out
cld
hlt
repz
mov
out
in
cwtl
scas
adc
jmp
mov
or
call
imul
xor
mov
lock
dec
outsl
inc
sbb
sbbb
aaa
and
adc
pop
sub
xchg
arpl
aad
clc
data16
dec
inc
sbb
sub
or
sti
and
add
faddp
fnstsw
mov
cmp
lods
pop
ret
sbbb
int3
mov
dec
mov
mov
jp
jo
daa
mov
les
ret
cmp
insb
jns
push
pop
fists
jo
in
popa
stos
pushf
jl
test
dec
xlat
fwait
popl
mov
cmp
decl
stc
mul
bound
insl
jns
sbb
dec
pop
cwtl
les
lds
xlat
jp
lds
adc
pop
shrb
or
mov
aad
movsl
xchg
iret
sbb
jp
gs
icebp
ffreep
das
ffreep
js
sbb
lock
and
enter
push
aad
andb
add
jmp
stc
xchg
mov
dec
xchg
fists
jmp
stos
push
mov
push
icebp
jg
int3
xor
push
pop
es
psubq
jns
sub
repnz
xchg
out
cmp
lea
lock
xor
fsts
or
sbb
mov
lock
cltd
outsb
or
inc
roll
xlat
lds
cmc
insb
mov
sub
mov
mov
push
xchg
cmp
jg
jge
lret
push
scas
fs
pusha
jl
aaa
xor
outsl
shr
daa
xchg
lods
call
mov
adc
ds
dec
sbb
scas
addr16
pop
imul
or
test
mov
loope
cmpsl
sub
mov
imul
ret
stc
popf
test
test
cmp
ret
or
pop
iret
enter
test
mov
insl
es
test
repz
and
decb
cwtl
mov
icebp
dec
mov
xchg
mov
and
fisttps
and
pusha
push
sahf
mov
sub
pop
sbb
loop
ret
sub
iret
mov
sub
push
popa
jmp
leave
cmp
cmpl
jecxz
inc
mov
lods
mov
js
xorb
cmpsb
xchg
xchg
lods
sub
sbb
jnp
in
lcall
lock
bound
mov
scas
push
mov
adc
enter
push
repz
mov
mov
and
icebp
jne
mov
sbb
sti
add
mov
push
mov
out
addr16
jbe
mov
inc
cmp
sti
es
stc
xchg
mov
xchg
and
add
nop
lock
adc
mov
add
in
dec
mov
cli
fiaddl
popa
jbe
pop
cmp
dec
xor
xchg
push
jl
xlat
adc
repz
push
xor
jle
sti
lret
sti
out
test
push
inc
in
mov
in
movsb
sub
sub
and
arpl
stc
jne
adc
insb
inc
mov
push
mov
lahf
flds
mov
jo
out
shll
mov
xchg
mov
out
rolb
or
pop
repz
jl
sbb
es
stos
std
ficoms
out
cld
and
mov
fmull
dec
lock
lret
lods
add
cmp
sti
popa
clc
lock
out
pop
stos
inc
iret
popa
test
out
pop
imul
rcr
push
movsb
mov
add
mov
inc
aam
fucompp
mov
outsl
sub
mov
xchg
je
add
push
pusha
jle
aas
xchg
ja
cltd
pop
xchg
mov
cmp
repz
inc
sbb
xor
test
sbb
addr16
sub
inc
pop
popf
fsubp
xor
ret
add
sub
and
pop
inc
outsl
sub
enter
cmc
aam
roll
fstps
ds
cwtl
sub
or
xor
fadds
int
xor
inc
in
sahf
xor
stos
ret
jmp
mov
mov
mov
jo
push
cltd
or
xor
mov
jne
fidivrs
xchg
mov
dec
ss
xchg
arpl
arpl
mov
jb
mov
mov
xchg
loope
in
pop
lcall
aaa
fwait
scas
jg
or
ss
jne
data16
and
sbb
frstor
sbb
rorb
lods
sbb
or
je
pop
mov
mov
inc
std
and
cmp
rorl
gs
shl
sbb
cwtl
icebp
aaa
push
test
clc
shlb
mov
daa
push
add
gs
fs
je
jo
mov
dec
xlat
adc
andl
inc
adc
aad
fs
or
addr16
mov
push
push
mov
out
outsl
sub
add
cmpsl
cld
mov
data16
imul
insl
xchg
rol
mov
insl
fidivrl
xchg
or
test
movsb
pop
mov
repz
adc
cmp
sbbl
mov
push
es
inc
mov
push
aad
adc
int
in
jp
icebp
arpl
sub
lahf
clc
mov
in
jae
lret
in
mov
mov
sbb
fcoml
cmp
pop
int3
inc
int3
jo
cwtl
sbb
mov
mov
adc
mov
sub
inc
cmp
add
sbb
shl
and
push
xor
lret
fs
aad
cwtl
mov
call
xor
lcall
jb
push
dec
in
or
and
lea
jo
dec
mov
sahf
mov
insb
xchg
jmp
mov
mov
call
xchg
cmp
cltd
movsb
pop
inc
cs
lock
loop
mov
cld
pop
and
push
bnd
add
outsl
dec
cmp
or
loope
scas
xchg
out
or
jle
outsb
or
inc
addr16
fstpt
jg
inc
adc
jl
adc
fmuls
inc
popl
nop
fdivrp
jecxz
sbb
adc
inc
mov
xchg
repnz
pop
cmp
mov
lahf
addr16
pop
addr16
fisubrs
ds
push
or
fisubs
push
xchg
adc
add
gs
mov
insl
popa
jnp
je
in
repnz
rcr
jo
shrl
lcall
xlat
movsb
js
out
mov
and
rorl
mov
and
push
or
mov
pop
cmp
inc
sub
jecxz
ret
ljmp
dec
add
or
xchg
pop
ja
outsl
daa
sub
jmp
fimuls
mov
jo
and
lahf
sahf
jg
inc
inc
adc
out
mov
bound
cmp
loopne
inc
popf
mov
stos
fs
mov
ljmp
inc
inc
movb
mov
or
mov
xchg
outsl
pop
gs
outsb
insl
xchg
adc
lahf
fildll
jne
jp
xchg
pop
cs
jmp
aad
pop
push
jmp
jp
imul
push
and
jmp
xor
mov
xlat
push
and
dec
dec
fsubrs
popf
jno
or
xor
mov
shrb
adc
push
outsl
sbb
or
sub
insl
aas
icebp
or
xchg
mov
mov
pop
sbb
and
inc
or
adc
pop
cmp
add
push
mov
and
xchg
jb
insb
xchg
es
andl
ror
cmpsb
mov
mov
xchg
dec
sub
mov
and
xlat
push
jmp
insb
jb
mov
xchg
stc
xor
sub
ret
jno
push
pop
orb
xchg
xchg
xchg
cmp
test
adc
xchg
pusha
cmp
lahf
inc
mov
add
jnp
pop
imull
faddp
int3
shrl
leave
push
mov
mov
sbb
iret
mov
xchg
jno
push
push
das
and
insl
into
xchg
pusha
gs
jecxz
xor
inc
sbb
xchg
out
dec
xchg
sub
iret
and
mov
aam
dec
into
imul
xchg
cld
sbb
push
mov
jg,pt
push
cmp
xor
std
outsl
sub
adc
add
loopne
inc
imulb
xlat
and
xor
adc
outsb
and
in
mov
mov
std
arpl
inc
test
into
mov
mov
mov
lcall
jno
fisubrl
or
sbbb
in
fstpl
shl
and
ret
stos
cmp
repnz
ret
les
popa
inc
imul
not
roll
mov
push
insb
iret
lcall
pusha
lds
xor
sub
inc
mov
mov
pop
or
pop
sarl
mov
jl
cmc
mov
inc
sbb
imul
push
adc
fcoms
adc
cmc
push
add
add
jns
xchg
mov
sub
aaa
clc
fnstenv
mov
sub
out
fstps
fildl
sub
ds
cmpsl
sub
sbb
outsl
in
xchg
aas
xor
mov
pop
sub
cmpsb
inc
jnp
fldcw
mov
pushf
cmp
and
xchg
and
negl
jo
clc
jno
test
sbb
sub
sbb
cld
aas
aam
push
mov
inc
addr16
sbb
dec
xchg
mov
add
mov
repnz
je
lret
lret
mov
mov
dec
into
es
mov
cltd
mov
xorl
fsubrs
mov
int3
jl
push
and
mov
cltd
sbb
xor
mov
add
nop
xchg
stos
cmp
pop
mov
cmpsl
arpl
btcl
mul
movnti
jle
popa
fisubrs
aad
rorb
jae
loope
push
jmp
mov
fwait
in
xor
jmp
mov
xor
xor
push
pushf
cld
dec
or
cmp
mov
inc
loopne
push
push
add
inc
jle
loope
sbb
lret
daa
cwtl
pop
rep
stos
cmp
cmp
jecxz
ss
fldl
sub
stos
or
xchg
shrd
or
jmp
adc
mov
sub
sti
sbb
jmp
lret
roll
mov
cmpl
mov
popa
pop
out
lea
shlb
push
data16
cs
xchg
rcll
or
ljmp
mov
loop
rcll
pushl
stos
or
and
adc
nop
cmp
mov
and
repz
mov
xlat
fistpll
mov
push
adc
in
jnp
rol
sbbl
std
pusha
adc
add
lahf
lcall
stc
mov
pop
ss
pop
aas
in
popa
loop
inc
jmp
mov
or
dec
rcrb
mov
sbb
mov
mov
inc
das
int3
outsb
mov
push
popa
jae
inc
xor
mov
adc
jae
xor
mov
jecxz
test
cmpsb
lea
and
test
enter
dec
xor
and
out
rep
fists
and
mov
cmp
xor
sbb
in
cmp
mov
je
pop
pop
xchg
out
mov
mov
mov
mov
sarl
or
jns
or
hlt
shrl
and
or
cmpsb
ret
aad
or
push
mov
inc
repnz
repnz
scas
and
jmp
kandnw
lcall
fnclex
mov
mov
fdiv
jle
push
jge
xorb
adc
cli
inc
scas
and
mov
dec
or
lret
lret
jmp
ljmp
and
jnp
sbb
stos
xor
jb
das
ljmp
test
mov
or
or
bswap
inc
xor
cmpsl
das
stos
jle
jae
xrelease
orb
sbb
test
xchg
xchg
fldt
test
adc
sti
fprem
add
jp
or
andb
pop
xchg
enter
dec
ret
scas
push
lret
test
mov
mov
outsl
jnp
mov
mov
cmp
xor
pop
push
pop
aad
mov
lret
ja
aad
mov
push
lret
fs
test
lods
lods
pop
adc
mov
je
into
fildll
mov
adc
les
loopne
push
jb
pop
xor
jmp
sbb
call
or
cld
comiss
lcall
xor
mov
adc
push
pop
sbb
lahf
fimull
mov
popa
hlt
out
mov
jo
pcmpgtb
sbb
mov
xchg
orl
cmp
test
je
das
fisttpll
xchg
into
fistpll
andb
outsl
shrb
enter
fisubrl
js
add
cli
cmp
mov
push
les
imull
mov
mov
movsb
hlt
pop
sub
sub
inc
and
stc
add
jp
sbb
mov
add
mov
xor
imul
dec
mov
adc
and
out
add
push
sub
xlat
dec
adc
push
clc
fwait
fs
dec
popa
ss
int
sub
addl
sti
xchg
shlb
mov
add
std
ret
out
dec
cmp
jae
sti
jg
lret
jmp
fsqrt
inc
test
into
into
and
bound
xorb
loop
mov
out
xchg
sbb
jl
pop
xchg
daa
call
mov
sarb
push
xlat
xor
dec
sbb
repnz
subl
das
sub
cmp
jecxz
cmp
cmp
or
inc
cmp
cmp
sahf
mov
loope
aam
add
ss
negb
cmpsl
incl
fidivrl
inc
ficoms
scas
pmaddwd
mov
add
leave
stc
stos
jae
ss
pop
out
and
jb
movsl
sub
add
inc
lret
out
sbb
mov
xor
pop
adc
inc
xorb
js
mov
or
fs
divb
dec
pop
sbb
xor
iret
push
inc
pusha
dec
nop
sub
int
jmp
jmp
lret
xor
jge
stos
out
pop
test
test
das
xor
xor
andl
pop
adc
mov
add
mov
ja
cmpsl
aad
lods
imul
jp
cmp
jbe
dec
iret
fadds
scas
dec
orb
insb
aas
push
les
xor
loope
or
sbb
dec
jl
addl
repnz
pop
ret
sbb
xchg
jo
neg
aam
sbb
stos
std
ret
dec
pusha
xor
sarb
cmp
icebp
mov
jp
cltd
jo
dec
add
mov
or
lds
jle
sub
and
ficoms
jne
sbb
pop
push
jl
clc
mov
sub
add
xchg
xchg
mov
inc
lahf
mov
add
adc
mov
mov
push
jae
daa
mov
mov
xchg
pop
mov
mov
lret
pop
pop
or
jmp
lods
sub
xor
dec
jnp
lret
fists
ror
lcall
shl
jp
or
xorl
sbb
mov
xchg
movsb
push
mov
ret
pop
mov
pushf
jno
cli
ret
lea
inc
xchg
inc
hlt
mov
inc
xor
mov
dec
das
cmp
dec
sbb
outsl
cli
lahf
ljmp
fildll
out
jp
push
pop
aas
dec
das
cmp
dec
sbb
outsl
cli
lahf
ljmp
fildll
out
jp
push
pop
mov
sub
sbb
outsl
cli
pop
ljmp
fildll
out
jp
push
pop
aas
dec
das
cmp
dec
sbb
outsl
cli
lahf
ljmp
push
and
add
dec
ficomps
outsb
jle
mov
shlb
scas
iret
loopne
inc
out
jle
outsb
mov
pushf
movsbl
mov
into
outsb
jle
push
sahf
push
mov
mov
fimuls
jg
outsb
mov
push
scas
ds
into
jbe
data16
pop
sahf
push
mov
mov
std
insl
mov
xchg
mov
push
repnz
jmp
mov
pop
and
popa
out
mov
and
and
jbe
mov
arpl
push
add
dec
divl
fimuls
mov
xchg
mov
mov
sub
rcrl
insl
cltd
pop
and
js
xchg
mov
bound
scas
mov
loop
push
dec
lahf
pop
mov
mov
dec
inc
mov
add
jno
sahf
out
and
push
shll
jecxz
sahf
jecxz
adc
into
scas
into
mov
push
outsb
jbe
sahf
push
push
push
scas
into
cmpsb
xchg
out
rcrl
xor
dec
xchg
or
pop
scas
ds
into
outsb
jle
sbb
daa
scas
xlat
pop
dec
idivb
outsb
xchg
push
xchg
mov
mov
mov
mov
js
arpl
ds
cs
popf
sub
sti
dec
fmull
and
push
lea
push
lret
cs
mov
cmp
jnp
cwtl
fcomps
jp
lahf
xor
inc
lods
push
mov
mov
fimuls
jle
outsb
mov
sahf
push
scas
ds
into
outsb
jle
push
sahf
push
mov
mov
fimuls
jle
outsb
mov
sahf
push
scas
ds
out
xchg
or
or
out
dec
sahf
push
add
mov
out
shlb
pop
repnz
jb
add
jle
mov
or
pushf
push
push
push
adc
cmc
out
push
out
sbb
sub
sbb
and
xorl
jnp
xor
jle
adc
adc
in
pop
mov
mov
inc
add
push
xchg
sahf
xor
icebp
arpl
mov
fildl
lods
subl
leave
mov
pop
push
or
mov
insl
in
jb
fwait
in
imul
out
stc
arpl
mov
sub
ljmp
jae
and
mov
movsl
push
cmp
mov
ret
sbb
jl
decb
shll
scas
add
push
and
out
out
pop
jnp
imul
call
pop
or
xchg
cmp
fidivrs
add
add
es
subl
mov
push
jmp
adc
xor
int
mov
scas
jg
xchg
sbb
inc
jno
stc
mov
mov
aam
push
scas
out
cmp
mov
sbb
subl
negl
mov
adc
inc
mov
pop
add
push
addb
adc
fsin
jge
repnz
movsb
and
adc
call
pusha
sbb
sbb
movsl
mov
es
sub
arpl
insb
loop
out
stos
jo
mov
ficompl
mov
add
jae
sub
rorl
jge
mov
push
mov
out
inc
stc
sub
inc
lret
push
inc
add
lahf
and
pop
jmp
hlt
loop
xchg
call
sbb
push
xchg
inc
mov
sbb
mov
push
loop
nop
pop
pop
outsl
and
les
pop
popf
push
mov
add
pop
inc
ss
scas
out
repz
adc
jmp
xchg
jg
lods
js
xchg
push
rcl
ret
mov
fucomi
les
push
ret
cld
jbe
cli
xchg
in
xorl
inc
xor
xor
sbb
xchg
inc
in
and
adc
test
outsl
inc
clc
push
and
mov
js
test
adc
cmc
jns
mov
rcl
adc
int3
jo
sbb
pop
ret
pop
rol
movsl
in
push
aam
lcall
daa
lret
push
subb
dec
push
push
jbe
cmp
xchg
stos
lahf
or
adc
and
cmp
fiaddl
negl
and
scas
sbb
push
dec
inc
pusha
pcmpgtb
cmp
imul
insl
xor
jp
jo
xchg
insb
mov
jnp
roll
fldenv
in
mov
pop
outsb
in
inc
add
loopne
cs
sti
repnz
ds
jno,pt
pop
mov
jmp
pop
jbe
adc
out
add
cmp
add
push
dec
outsl
pop
mov
movb
fucomip
stos
test
pop
pop
push
pop
cli
repz
jbe
sbbl
xchg
mov
addr16
iret
or
hlt
push
imul
add
ret
inc
sub
xchg
push
testb
shrb
add
sbb
shll
lock
mov
mov
int
mov
mov
sub
iret
inc
lods
jno
adc
lods
push
faddl
fcoms
inc
loop
push
and
push
xchg
in
inc
xor
popa
mov
loope
jge
ljmp
aad
adc
mov
pop
lock
add
lret
jecxz
pop
cli
cmpsl
pop
add
lret
and
stos
je
jae
adc
lret
das
mov
xor
xchg
xchg
pop
jb
int3
mov
imul
jmp
sbb
xchg
out
sbb
cmpsl
std
mov
ljmp
repnz
lret
and
shrl
ss
icebp
dec
std
mov
mov
xchg
lods
sub
scas
mov
push
insb
subl
in
mov
sahf
ss
js
cmp
aad
test
inc
mov
stos
insb
dec
sbb
cmc
cltd
hlt
xchg
pop
leave
xchg
mov
and
mov
loop
and
push
mov
cmp
push
je
add
xor
jns
subl
mov
sbbb
mov
test
mov
sahf
out
xchg
aad
xor
lret
jo
test
mov
mov
lret
or
dec
cmpsb
sbb
jmp
pop
das
ret
addr16
xorl
xor
clc
inc
cmp
inc
adc
js
insb
es
and
rcll
mov
inc
jg
inc
pop
popa
mov
test
mov
inc
add
dec
ror
fs
inc
aam
enter
les
sub
xor
jge
and
rorl
sbb
and
fwait
cmp
das
xor
xor
jno
stos
xchg
adc
fs
idivb
and
push
insl
mov
shll
xchg
repnz
arpl
jne
and
push
jb
insl
lods
jo
loopne
inc
jle
into
daa
ljmp
lds
mov
cmc
or
push
sahf
push
push
pop
sar
push
mov
and
cli
and
inc
xor
daa
aad
mov
inc
mov
sub
mov
ret
aam
push
mov
divb
test
xchg
ds
adc
jae
es
fstpl
pop
mov
push
jne
and
pop
jmp
mov
xchg
leave
push
push
insb
xor
in
pop
adc
and
pop
jle
sti
jns
mov
orb
fmuls
jne
movsl
mov
jo
or
sahf
jns
stc
sub
adc
movb
sbb
sbb
stos
xor
dec
or
repnz
jle
xor
add
mov
or
push
cwtl
xchg
add
mov
cmpl
insb
clc
hlt
icebp
mov
cmc
dec
ret
mov
lea
push
xchg
and
push
mov
aam
cmp
data16
test
stos
scas
clc
mov
dec
stos
push
daa
ss
hlt
pushf
pusha
mov
and
push
xchg
jno
sbb
imul
mov
adc
push
adc
fistl
mov
mov
jg
pop
cmc
and
popa
sub
lea
pop
xchg
push
mov
and
jge
xor
xor
sub
not
lret
in
xchg
add
sub
mov
popa
out
push
mov
leave
cwtl
je
stos
sub
jmp
mov
xchg
sbb
push
and
test
add
xchg
sub
out
mov
test
out
les
push
pop
call
dec
mov
inc
mov
mov
leave
adc
push
xor
xchg
adc
adc
popa
aas
testb
rol
xor
mov
pop
inc
rcll
pop
das
jnp
push
add
lods
mov
icebp
clc
imul
addr16
lods
mov
mov
mov
test
outsb
in
loopne
int3
pop
sbb
mov
xor
add
fisubs
out
dec
or
mov
and
out
sti
adc
lea
cmp
outsl
inc
pop
in
pop
clc
push
aaa
and
enter
fadds
xchg
jno
or
mov
lods
out
xchg
jno
icebp
xlat
ljmp
insl
nop
jle
inc
pop
fcomp
jb
pop
jae
loop
and
jge
loopne
and
xor
cmpsl
icebp
xchg
insb
cmp
loopne
sub
mov
sub
bound
mov
clc
arpl
dec
sar
fists
lea
in
les
cmpsb
adc
pop
cld
fisubrs
mov
dec
cmc
mov
inc
fstpt
mov
pop
rcr
push
outsb
push
jge
add
jge
dec
xchg
daa
lret
repz
imul
aad
fxch
xor
in
sub
shrb
sbb
cmp
xchg
sbb
xor
pop
arpl
rorb
data16
mov
or
ja
adc
in
aam
sub
rcl
shrl
lea
push
jg
jne
outsl
sbb
jno
rclb
nop
cli
mov
scas
adc
cmpb
pop
fidivrs
les
stos
jo
cwtl
lods
mov
pop
xorl
cld
cmpsl
sbb
xor
mov
ss
jb
cmc
dec
leave
mov
pop
fidivl
outsl
or
xchg
test
inc
cltd
stc
mov
hlt
push
nop
mov
pop
sbb
lods
mov
fwait
lret
mov
orb
rorl
cmpsl
ja
dec
adc
xchg
xor
mov
jg
filds
cmpsl
in
cwtl
dec
repz
out
or
pop
jo
add
fwait
insb
xor
push
fidivrl
mov
flds
faddl
dec
and
lahf
out
lcall
pop
adc
or
add
sub
add
hlt
or
test
sub
mov
cmpb
pushf
inc
bound
or
aam
pushf
fnstsw
dec
and
mov
and
fwait
mov
xor
nop
in
daa
mov
lret
aad
pushf
dec
notl
jmp
or
sub
fidivl
push
add
mov
sub
iret
xchg
fisubl
aam
ds
sti
lods
mov
xlat
push
shl
lret
xchg
sbb
pop
sbb
jbe
jl
pop
sub
push
xor
jae
push
cli
pop
sbb
add
cmp
dec
mov
mov
adc
xchg
ljmp
insl
mov
dec
loop
test
add
xlat
insb
cli
bound
notl
mov
jge
lcall
add
adc
cmp
xchg
mov
sub
xchg
lret
hlt
or
add
fbld
data16
mov
or
xor
fcomps
insb
outsl
xor
orb
mov
stos
in
aas
adc
inc
stos
insb
clc
xchg
aad
arpl
icebp
adc
mov
das
imul
push
pop
inc
mov
jbe
lahf
cmp
sarb
dec
inc
daa
jbe
test
jg
mov
jbe
dec
xor
aas
xor
sahf
clc
dec
loopne
ret
push
sbb
ficomps
aas
sub
add
jae
imul
shll
sbb
and
xchg
add
sub
adc
cmp
inc
lods
jp
adc
std
mov
push
sbb
add
mov
das
push
jnp
or
mov
dec
ds
stc
sub
sbbl
mov
push
hlt
jl
mov
inc
inc
xchg
shlb
ja
mov
add
cmp
inc
lea
out
push
imul
test
shrw
pop
mov
fcoms
ret
sarl
es
pop
xchg
xor
out
daa
mov
cmp
jne
lahf
and
inc
jb
lods
out
add
mov
ret
adc
cmp
jmp
arpl
loop
sub
mov
fstpl
rorl
push
fs
out
add
dec
repnz
out
fnstcw
and
stc
pop
popa
sub
out
or
and
sbb
mov
mov
lods
mov
cmp
popa
out
mov
gs
mov
mov
sbb
fldt
jo
pop
pusha
clc
andb
inc
xchg
mov
jno
imul
push
xor
sub
adc
shl
in
inc
xor
scas
js
mov
xorl
cmpsl
dec
lods
and
incl
out
inc
addb
mov
stos
cmp
add
jg
mov
cmpsb
jns
sti
xor
pop
mov
add
adc
push
cli
pop
sbbl
icebp
dec
cmc
ljmp
int3
jl
mov
jl
mov
je
sub
cld
sub
xor
movsl
sub
or
repnz
sbb
lods
mov
sub
sbb
push
adc
sahf
xchg
sbb
push
aaa
xor
mov
out
sbb
pop
aam
and
dec
push
and
pop
xor
insb
mov
xchg
inc
out
jp
mov
add
cmp
mov
je
push
in
dec
fcom
xchg
jb
fcomi
mov
adc
frstpm(287
popa
mov
xlat
dec
mov
enter
and
mov
or
repz
cwtl
lea
jg
mov
int3
jae
cmp
test
psrld
pop
mov
in
popa
enter
inc
push
in
pop
cmp
mov
mov
mov
xchg
push
ds
cld
sbb
pop
add
mov
mov
es
or
dec
add
neg
in
mov
inc
adc
inc
push
jl
sub
testb
scas
ret
and
push
push
pop
mov
or
xchg
popf
rcll
movsl
push
xchg
add
jecxz
xor
sti
adc
xor
arpl
ss
data16
dec
lea
xchg
subb
lahf
xor
out
ret
sub
imul
das
mov
sti
xchg
xchg
or
xchg
jnp
pop
popf
add
outsl
or
movsb
dec
inc
icebp
xor
cwtl
dec
and
insb
or
mov
cmp
inc
and
push
xchg
adc
popa
or
and
mov
int3
and
xor
pop
into
xor
adc
in
sti
loopne
cmp
popf
cmp
dec
add
cmpsl
adcb
push
inc
pop
mov
fcoms
outsb
lea
aad
xchg
sti
cmp
lcall
fldl
xchg
roll
mov
push
xlat
sti
test
mov
cmp
mov
pop
rcll
cli
jmp
or
sbbl
rcll
cmp
push
jne
data16
inc
imul
mov
mov
and
shrb
iret
sbb
sbbl
cmp
movsb
mov
cld
and
in
in
rol
push
movsb
xor
into
or
xchg
std
sbb
inc
out
push
scas
pop
push
sahf
sbb
ja
jno
xor
xchg
leave
jp
lcall
sub
into
aas
test
add
jns
popa
stc
aaa
cltd
xchg
scas
push
test
imul
jecxz
es
std
mov
pop
in
pushf
sbb
iret
xchg
icebp
std
and
insb
into
les
pop
and
cmp
cwtl
icebp
or
cltd
rcrl
daa
mov
add
bound
mov
inc
mov
inc
aas
push
dec
data16
xor
ljmp
xchg
push
inc
cmp
adc
popa
xorl
or
int
adc
movsl
mov
cltd
add
insb
cmp
incb
xlat
mov
movsl
cmp
dec
push
and
xlat
jp
mov
aas
adc
in
push
clc
cwtl
jb
shlb
xchg
dec
addr16
mov
sahf
or
cmp
lods
nop
jo
mov
loopne
sub
hlt
push
iret
data16
iret
mov
jp
outsb
add
inc
addl
mov
popa
test
jbe
lds
notl
add
sub
xor
pop
jmp
or
jp
imul
fstpl
push
mov
insl
mov
mov
jl
add
sbb
pushf
sbb
stos
pop
lcall
jmp
dec
or
add
daa
stos
lock
or
enter
nop
cmp
push
mov
push
dec
or
jge
insl
inc
lds
popf
pop
ja
dec
rorl
dec
add
xchg
and
sbb
xor
lahf
lcall
lea
repnz
inc
scas
xchg
jo
pop
inc
xor
lock
mov
xor
mov
mov
or
push
insb
sbb
pop
ffree
inc
jb
xchg
gs
aam
shll
test
cs
scas
ficoml
out
cltd
popa
aaa
stc
dec
add
lret
cmp
push
sbb
iret
or
sbb
cs
mov
dec
mov
notb
dec
jg
out
sub
or
clc
mov
jne,pn
pusha
xor
xor
loopne
js
adc
sahf
pusha
lds
sub
and
xchg
mov
dec
in
and
sub
jl
mov
push
pop
sub
mov
and
mov
inc
or
jo
and
das
mulb
jecxz
mov
addr16
ja
jbe
jnp
rcrb
adcl
sub
xor
dec
enter
mov
adc
in
sti
xchg
into
mov
adc
jecxz
mov
mov
push
xor
xlat
add
out
orl
and
and
cmp
mov
pop
push
push
mov
test
call
iret
xor
mov
int3
rclb
jmp
psubsw
enter
push
shlb
xor
imull
mov
dec
popf
mov
or
and
jmp
xchg
out
lods
les
std
mov
out
jg
repz
inc
jne
xor
push
insb
sub
dec
std
add
mov
dec
fcompl
jmp
ret
daa
cmp
mov
mov
adc
ret
les
adc
push
dec
mov
lcall
add
adc
movsl
xchg
xor
fstpl
xchg
sbb
adc
adc
lahf
xchg
movsb
imul
arpl
ret
xchg
push
sbb
add
ljmp
xchg
mov
mov
pop
inc
cmp
int3
mov
rcrl
push
mov
out
push
bound
int3
and
jne
sub
xor
mov
or
or
sar
loope
inc
sub
push
mov
adc
jle
mov
or
scas
pop
scas
iret
mov
push
fsts
stos
mov
aaa
hlt
xor
jbe
loope
xchg
call
fwait
jno
push
mov
ss
add
and
add
sbb
and
scas
movsl
loop
cmc
fwait
movsl
ja
push
xchg
ja
sub
testl
ja
sbb
test
cmp
aad
lret
imul
lods
aaa
adc
jg
lods
sahf
dec
enter
jl
pop
sbb
ds
cwtl
mov
jl
pop
mov
jmp
adc
mov
mov
les
mov
int
sbb
sub
pop
adc
mov
out
outsb
dec
mov
pop
xor
fcom
jae
adc
push
enter
fldl
lods
jbe
jp
pop
out
pop
sub
les
adc
les
or
testb
out
nop
or
and
and
test
jno
bound
fcomp
insb
in
enter
sbb
dec
cs
ror
out
push
push
ljmp
xor
andb
in
adc
lock
ljmp
mov
jmp
loopne
pop
push
sbb
xor
testb
cmc
cmp
inc
xlat
xor
aad
cmp
outsl
lret
or
fisttpl
and
cmp
shl
fisubrs
xlat
dec
out
movsb
pop
inc
cmp
fsts
shll
add
pushf
iret
dec
cld
and
test
pushf
mov
sbb
and
jmp
jns
pop
out
dec
cmpsl
dec
loop
outsb
js
adc
mov
lea
lcall
pop
push
mov
jbe
xor
mov
and
mov
xchg
mov
outsb
adc
xchg
lds
push
fs
pop
bound
push
and
or
cld
popf
test
pop
cmpsb
lock
push
cmpsl
mov
stos
mov
test
fistpl
pusha
mov
jns
pop
loopne
jnp
inc
jo
mov
enter
lahf
stc
leave
icebp
into
mov
jl
adc
fsubs
test
out
sbb
stos
jp
cmp
mov
insb
add
dec
std
mov
cli
fimuls
and
mov
xchg
add
daa
cmp
push
iret
jg
and
jle
ja
rcl
stc
mov
xor
out
lods
cmp
test
push
lahf
mov
push
jmp
xchg
dec
lods
into
fildl
add
adc
mov
cs
ret
and
pop
leave
dec
dec
push
ja
std
sbb
addr16
jl
jb
shll
arpl
out
xchg
dec
clc
dec
stos
adc
sti
add
shlb
mov
dec
mov
in
lds
and
inc
xchg
push
outsl
xchg
nopl
ret
fistpl
out
mov
sbb
xor
mov
push
dec
sub
pop
push
hlt
mov
cmp
mov
xchg
sarl
mov
insl
add
mov
push
cmp
outsl
in
push
into
clc
push
adcl
cmp
fs
jle
push
sahf
push
mov
mov
fimuls
jle
outsb
mov
sahf
push
scas
ds
into
outsb
jle
push
sahf
push
mov
mov
fimuls
jle
outsb
mov
sahf
push
scas
ds
into
outsb
jle
push
sahf
push
mov
mov
fimuls
jle
outsb
mov
lahf
push
scas
ds
into
outsl
jle
or
push
mov
pop
and
inc
jle
sbb
xchg
push
icebp
push
roll
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
lret
mov
sti
lea
mov
int
or
imul
sbb
sub
dec
lret
mov
sti
lea
fnstsw
sub
or
sbb
pop
cmp
movsb
in
cmc
stos
lds
push
sbb
or
push
and
clc
xchg
ljmp
xor
and
pusha
popa
sbb
test
xor
mov
push
fisttpll
and
test
test
pop
sbb
push
xor
mov
subl
in
cmc
cmp
repnz
nop
aam
pop
cmp
lret
jecxz
push
sub
fsubp
std
fs
repnz
rorl
inc
sbb
shll
pop
push
outsb
bound
stc
je
mov
movsl
dec
rcll
in
mov
jg
jge
push
cmp
testl
pop
mov
fsubrl
inc
fwait
loop
repnz
push
dec
in
pop
cmp
stos
fstpt
mov
fwait
in
stos
fnstsw
xor
or
jne
inc
cmp
mov
call
les
ds
lea
pop
outsl
dec
xor
mov
out
mov
mov
cmp
dec
push
js
paddb
push
cmp
sahf
enter
in
stos
fnstsw
sub
or
insl
sub
dec
lret
mov
sti
lea
fnstsw
sub
or
insl
sub
dec
lret
mov
test
sti
adc
clc
movsb
mov
push
add
sub
hlt
rep
push
cli
movsl
imul
movsl
xlat
xor
mov
jno
dec
lcall
repz
cmp
dec
push
aas
movsb
adc
dec
jmp
or
sbb
cmpsb
push
add
mov
mov
in
mov
sub
popf
sets
lret
negl
jp
addr16
gs
mov
mov
in
int
cwtl
scas
xchg
ja
enter
test
push
in
outsl
loopne
push
adc
pop
jne
js
mov
xor
dec
fdivrl
pop
sub
dec
mov
or
push
adc
inc
std
xlat
cmp
in
jns
stc
clc
rolb
cmp
pop
lret
inc
in
in
xchg
xor
insl
jl
scas
mov
fs
dec
rorl
fisubrl
mov
adc
int3
and
jecxz
je
outsb
jnp
lock
in
mov
add
mov
das
cmp
jg
xchg
scas
icebp
jne
add
push
clc
fistl
fistps
mov
jg
sub
das
jle
or
addl
test
cmp
aam
repnz
cmp
fdivrl
mov
pop
sbb
mov
cmp
outsl
jp
icebp
jge
sar
and
aaa
inc
pusha
repnz
loop
jle
popa
mul
cmp
cltd
loop
into
sub
fildl
loopne
fisttpll
fdivl
lock
fcompl
mov
pop
ret
sbb
roll
adc
ljmp
jecxz
dec
lods
lods
faddl
pop
stos
jl
pop
mov
inc
popf
adc
cmp
or
es
push
xchg
insl
cltd
dec
jp
push
push
in
sbb
or
push
cmp
cltd
mov
lea
cmc
mov
add
mov
into
popf
add
inc
das
xchg
mov
pop
je
lods
popf
mov
incb
imul
jecxz
sub
loop
cmp
adc
push
pop
cli
push
in
sbb
push
pop
stos
arpl
inc
into
mov
int
incl
cmc
xchg
jmp
sbb
mov
or
pop
mov
test
inc
call
cs
jo
test
lods
sub
arpl
pop
and
cmp
jno
mov
or
insl
scas
and
nop
sub
ljmp
pushf
test
fidivrs
dec
xor
cli
mov
sbb
pop
pop
call
lahf
cmp
seta
xchg
imul
xchg
mov
xchg
out
xchg
xchg
insl
popa
dec
stc
add
pop
xchg
int3
daa
rcr
repnz
cmpsb
sub
sub
in
and
mov
insl
jne
mov
jno
add
outsb
mov
clc
ljmp
jp
push
pop
inc
cmp
or
pop
hlt
lahf
movsl
mov
xor
xor
popf
push
mov
dec
hlt
xchg
or
arpl
pop
daa
pop
in
xor
jecxz
outsb
aam
push
lock
jecxz
fcoms
jns
or
cmpsb
push
cmc
sahf
rcrl
es
sub
cmpsl
add
xor
mov
in
gs
xor
or
xlat
xchg
aad
inc
les
rcrl
or
push
rclb
cmp
mov
jno
push
xchg
mov
xor
cmp
rcll
stc
test
test
cmovl
dec
dec
sub
test
mov
or
inc
popa
outsl
movsl
jle
addl
push
pop
sar
mov
test
outsl
and
loope
pop
jl
js
fisubrs
loopne
lret
loop
xchg
xchg
gs
xorb
pop
mov
imul
imul
mov
in
push
sub
sbb
ja
in
lret
xchg
std
test
jno
cs
mov
mov
inc
sub
add
jne
mov
ret
call
sahf
mov
lahf
std
out
xor
mov
jmp
cmp
andl
stos
sub
pop
movsb
xchg
lds
lahf
mov
cltd
dec
dec
cmpb
shr
popf
popa
xlat
dec
outsb
shrl
cmp
into
addr16
std
gs
and
dec
pop
mov
rorl
push
adc
mov
inc
sub
lock
cmp
jo
mov
or
cmp
jle
xchg
adc
pop
gs
nop
cmp
pop
cmp
sarb
sbb
ss
data16
cs
adc
imul
sub
lcall
data16
pop
and
inc
adc
xchg
adc
add
adc
imul
mov
mov
int
cmc
cs
cltd
add
ljmp
add
xchg
out
push
and
out
mov
clc
cltd
or
mov
mov
jecxz
je
or
roll
rcrb
pop
test
je
out
sti
sbb
xor
mov
cmpsl
test
or
cmpl
stc
aaa
out
mov
sbb
mov
cwtl
in
or
xchg
repz
ret
and
hlt
or
adc
in
test
call
adc
xchg
es
sub
fwait
dec
lcall
jo
in
test
mov
inc
cmc
stos
lods
les
pop
addb
insl
lret
cltd
dec
jmp
or
dec
ret
sub
jmp
dec
test
mov
and
and
ja
mov
add
xchg
add
push
push
or
push
nop
sbb
int3
xchg
stos
jle
xchg
frstor
mov
arpl
pop
inc
subl
int3
je
arpl
and
dec
popf
aas
shlb
jo
push
ds
or
inc
xor
adc
lock
xor
aam
lods
repz
add
mov
push
push
push
rcrb
shrb
pushl
xchg
xor
adc
pop
lcall
inc
jns
mov
loopnew
mov
or
cmpsl
ret
inc
cltd
outsb
movb
jge
adc
push
in
or
mov
add
pop
lds
sub
movsl
dec
push
cmp
pop
add
gs
lock
jb
outsb
frstor
sbb
push
inc
movsl
mov
ret
lods
jp
dec
data16
aam
push
xchg
aaa
push
xor
ficoml
mov
xchg
es
inc
pop
dec
mov
jmp
and
mov
xorb
and
cli
xchg
cmp
sub
sub
mov
push
or
xor
push
stos
idivb
mov
pop
loop
xor
and
cwtl
loop
pop
dec
je
mov
std
jbe
lret
lret
and
cmc
push
sarl
inc
adcl
wrmsr
test
pop
repnz
push
pop
iret
add
scas
xor
ficoml
jge
jne
inc
and
lret
push
pop
mov
repnz
int
mov
adc
jmp
pop
xor
pop
inc
out
pop
pop
cs
cmp
cli
test
xchg
jle
sbb
addl
pop
loop
pop
push
mov
inc
mov
ss
add
sub
pop
xchg
popa
add
xchg
add
dec
je
lods
loopne
push
sbb
in
lods
lcall
ljmp
push
out
rcll
push
cmp
and
stos
sub
cmp
fstps
mov
xor
fsubs
cmp
adc
fsubs
nop
cmp
loope
inc
jmp
xor
mov
xchg
bound
inc
mov
push
xchg
addr16
mov
rolb
pop
inc
adcl
in
xchg
in
pop
push
or
cmp
andb
mov
outsb
cld
ds
outsl
daa
shrb
jae
jmp
dec
ja
push
push
shll
mov
inc
xlat
or
in
hlt
jle
mov
fidivrs
pop
cmp
popf
in
mov
cmp
aad
mov
xor
and
sub
into
inc
dec
cltd
jne
xchg
lahf
rcrl
mov
add
fdivl
jae
pop
fcomps
mov
into
cwtl
ds
test
mov
lods
cmp
jnp
fdivrs
dec
pushf
out
test
lahf
sti
cli
std
dec
lods
push
arpl
or
cmp
fsubl
cwtl
lret
push
jl
je
lret
imul
dec
int
cmp
test
push
mov
and
xor
dec
sub
mov
insl
jle
stc
enter
lods
test
out
fdivrs
mov
imul
fs
movsl
ljmp
pop
inc
int3
adc
mov
mov
or
fs
outsl
push
pop
push
push
movsb
les
inc
xchg
aad
shll
andl
xor
mov
pop
add
xchg
jnp
ret
jge
jb
test
roll
dec
and
test
inc
popf
dec
lea
or
or
fisubrs
pop
ds
xchg
popa
mov
jbe
or
push
mov
fisubl
pop
xchg
cmp
cmp
je
imul
dec
xchg
push
bound
push
and
data16
pop
mov
dec
stc
xchg
jbe
fwait
pop
cmp
xchg
inc
and
fs
sub
or
push
pop
push
mov
push
add
nop
mov
dec
imul
lea
xor
cmpsl
jp
cltd
adc
cwtl
outsb
cmp
faddp
pop
cmpl
cmpsb
mov
out
cmp
cs
shll
dec
cmpsl
or
or
jb
mov
loop
lea
int3
and
sub
pop
roll
push
adc
push
cmp
lret
xchg
lret
mov
pop
dec
and
loope
nop
and
stc
mov
rolb
adc
cld
cmp
icebp
add
add
jge
adc
push
scas
test
int
sbb
mov
sbb
movsb
cmpl
xchg
into
repz
stos
out
ret
push
inc
shll
adc
lds
xlat
or
dec
lds
out
mov
jo
out
test
push
jg
insb
or
mov
repnz
loop
fsubp
gs
add
pop
movsb
nop
add
jl
inc
call
aaa
mov
adc
cmp
dec
std
mov
or
mov
and
xor
sub
gs
cmp
jmp
cmp
add
dec
outsb
les
mov
sbb
mov
jmp
les
inc
shll
leave
pop
xchg
dec
cmp
mov
lcall
mov
adc
adc
or
push
push
bound
cld
inc
lock
pop
xor
or
outsb
stos
and
jecxz
iret
insl
sbb
xor
mov
mov
sahf
dec
addr16
fildll
adc
ds
rcr
cmp
dec
mov
enter
bnd
dec
mov
repz
push
sbb
test
pop
add
jge
fwait
jge
push
mov
or
sti
lea
subb
lock
pop
test
out
adc
and
and
pop
sbb
or
mov
pop
insb
roll
out
sbb
xchg
sarb
mov
arpl
and
mov
call
or
or
sahf
dec
push
xlat
jl
jo
sbb
mov
pop
iret
pop
mov
rclb
push
cmp
shrd
cwtl
push
and
inc
aas
xchg
add
inc
fmull
call
sub
mov
mov
pop
lock
push
xor
add
push
call
mov
push
adc
push
repnz
jnp
enter
int
imul
add
push
inc
push
std
sbb
cli
add
xor
jns
pop
sti
insl
jnp
bnd
mov
jp
add
add
jno
enter
add
mov
je
adc
push
inc
push
aaa
dec
sub
in
pop
xor
jno
or
add
mov
pop
add
add
add
push
sahf
push
adc
imul
xor
mov
add
jge
xchg
sub
lods
shll
lods
imul
xchg
or
mov
pop
loopne
add
xchg
lea
lahf
ficomps
std
mov
int3
jmp
xor
dec
mov
enter
jnp
dec
or
mov
cltd
sub
mov
mov
fldt
lea
fisubs
jg
cmp
pop
stos
es
or
ss
push
fwait
daa
push
test
int
sub
in
jbe
sub
aam
xchg
test
add
inc
xchg
mov
push
testl
enter
add
leave
rol
cld
jge
add
dec
popa
cmp
icebp
pop
push
into
ret
test
or
jno
mov
mov
sbb
iret
rcrl
pusha
idivb
sub
sbb
addl
nop
push
scas
mov
jecxz
add
test
sahf
adc
sub
cmp
aad
in
mov
movsl
fcomp
mov
lret
icebp
jbe
aas
je
jmp
jle
xor
adc
push
adc
lods
in
mov
je
pop
testb
into
jae
xor
lods
fs
pop
out
add
mov
xlat
jmp
push
loopne
or
jmp
cld
movsb
push
dec
daa
mov
adc
fnstsw
xor
push
xor
jmp
xlat
jo
or
clc
mov
mov
push
jle
xchg
sbb
sub
nop
cmp
inc
mov
test
stos
mov
not
icebp
sub
js
add
cmp
dec
sbb
lods
aas
imul
add
fldt
mov
xor
lahf
lods
mov
popf
or
lcall
popa
xchg
mov
or
mov
loop
fimull
test
filds
cmpsl
imul
pop
into
daa
xchg
insl
xorb
cmp
xchg
xlat
int
cwtd
cmp
loop
fs
push
pushf
inc
stos
ret
sbbl
test
sub
jmp
mov
ja
xchg
out
leave
xor
add
out
mov
test
xor
cli
addr16
mov
mov
loopne
sahf
outsb
ja
sbb
dec
in
scas
adc
dec
add
pop
shrl
lahf
movsl
repz
fldl
push
mov
pusha
mov
sub
fidivl
adc
push
aad
mov
cmp
adc
repz
or
pop
sti
cwtl
dec
lods
push
out
push
cmp
loope
jge
bound
in
test
lret
cltd
sahf
popf
sbb
jmp
cmp
cmp
arpl
sbb
fadd
pop
aaa
cmpsb
outsl
or
xor
cmpsb
mulb
fldl
or
divps
test
sbb
loop
adc
aaa
jmp
les
inc
pushf
rolb
adc
xchg
adc
xchg
adc
loopne
xor
push
addr16
ss
or
aas
xor
pop
xor
dec
cmp
loop
inc
daa
mov
insb
mov
inc
inc
cli
repz
js
cmp
test
out
jns
add
incb
or
lock
cmp
xchg
sub
insl
js
mov
xchg
cld
cmpsb
jbe
xor
pop
jns
test
mov
mov
lods
and
and
lods
ja
ret
sub
loop
in
lods
cmp
or
repz
xchg
mov
aas
outsb
add
mov
push
cmpsl
add
loop
loope
out
xchg
subl
pop
dec
outsb
dec
mov
inc
lret
push
aaa
cltd
stos
sub
mov
lds
cmp
leave
or
ss
rcr
mov
jae
addl
xor
pop
scas
jg
mov
repnz
push
add
cmp
adc
mov
test
ljmp
mov
or
xor
and
ret
popa
xor
or
pop
rorb
out
fs
cli
inc
sbbb
out
lods
repz
fwait
xor
sahf
popa
xchg
mov
es
lods
jmp
add
xchg
pop
cmp
mov
or
fisttpl
mov
jg
mov
fdivrl
xor
push
xchg
push
out
xor
push
mov
fidivs
xlat
jl,pn
sarb
xchg
cld
and
ja
push
test
ret
cmp
or
jnp
cmc
push
xchg
idiv
scas
pop
in
pop
mov
adc
lahf
jb
mov
inc
cmp
enter
rolb
cwtl
xor
or
mov
aaa
imul
pusha
rcr
mov
jmp
xorl
je
cmp
call
dec
loop
jne
iret
mov
xchg
outsl
cld
xchg
roll
push
or
pop
push
jp
cwtl
dec
or
les
jo
mov
jge
sub
xor
inc
or
dec
mov
cmpsl
cmpsl
insb
dec
stos
testb
out
push
pop
clc
sbbb
mov
adc
inc
loopne
push
cli
mov
add
rolb
xor
xchg
cwtl
adc
push
sub
mov
pop
sbb
mov
push
shlb
pushf
shlb
arpl
jmp
test
push
inc
push
roll
addl
repnz
inc
pop
stos
js
hlt
arpl
lret
mov
pop
mov
mov
jge
in
call
jae
mov
jno
jmp
add
outsl
mov
and
mov
imul
pop
inc
cmpsb
jle
and
lret
and
arpl
addr16
inc
jo
pop
add
xchg
xor
inc
mov
push
mov
pop
out
mov
dec
pop
les
test
mov
inc
or
sar
push
outsb
bound
xchg
popf
imul
fiaddl
out
lret
push
mov
ss
aaa
aad
ja,pt
add
js
mov
jbe
jno
xchg
cmp
cmc
push
je
cltd
test
stc
arpl
xlat
mov
fcoms
pop
adc
dec
sbbb
and
in
lret
data16
rclb
lahf
insb
arpl
out
je
dec
lds
in
adc
xchg
sub
jg
lods
dec
sub
out
push
or
and
inc
sbb
pop
arpl
loop
call
ljmp
xchg
cmp
mov
inc
xchg
inc
fs
call
mov
loopne
push
add
lret
notl
imul
int
jecxz
fiadds
lds
adc
arpl
into
aad
lock
jg
test
bound
mov
insb
cmc
mov
imul
out
mov
clc
mov
imul
push
xchg
enter
cmpsl
fwait
xchg
pop
xor
dec
pop
jbe
push
jo
jnp
push
aaa
mov
add
push
adc
adc
lock
leave
dec
adc
cmpsb
ja
outsb
mov
stos
push
push
jecxz
fsubl
decl
bound
add
sarb
fistl
add
test
mov
cli
xchg
xor
in
push
and
ret
pop
fistpl
jmp
stos
test
push
movb
arpl
adc
scas
xor
stos
xor
loopne
xchg
repnz
mov
jo
je
mov
lea
jnp
pop
es
sub
aaa
mov
lock
jp
adc
adc
or
lret
dec
mov
jbe
nop
push
sbb
inc
int3
mov
dec
push
ffreep
xlat
pop
std
test
vcomiss
push
dec
rcrl
push
mov
pop
jae
mov
and
iret
repz
mov
dec
mov
pushf
pop
fldt
and
or
std
clc
add
stc
es
data16
mov
and
mov
and
cmpsl
inc
or
pop
and
push
addr16
dec
je
leave
imul
testb
and
mov
shll
inc
inc
xor
xchg
fbld
imul
lds
adc
out
aam
in
fs
adc
lcall
addr16
mov
dec
scas
cmp
jbe
clc
and
xlat
out
ds
mov
dec
fsubl
stc
in
sub
mov
jae
mov
xchg
xor
ss
sarl
stos
ds
test
add
clc
pop
inc
or
fsubrs
jge
xor
and
mov
fmuls
adc
dec
imul
jbe
jl
hlt
fmuls
lods
aam
sti
lea
fnstsw
sub
or
insl
sub
dec
lret
mov
sti
lea
fnstsw
sub
or
insl
sub
dec
lret
mov
sti
lea
fnstsw
sub
or
insl
sub
dec
lret
mov
sti
lea
fnstsw
or
rcrl
adc
and
xor
daa
mov
xchg
xchg
adc
xlat
adc
addr16
mov
data16
push
push
ret
push
shll
add
jae
inc
xlat
jge
mov
pop
xchg
addr16
repz
ret
push
shll
cltd
xchg
gs
idivl
dec
xlat
popa
daa
mov
jb
add
push
xchg
addr16
mov
addr16
lret
push
jbe
insb
xlat
mov
in
cmpsb
sub
or
inc
js
cmp
call
cmp
cwtl
repnz
lock
in
out
clc
clc
dec
mov
enter
lcall
dec
scas
sahf
and
push
pop
mul
jecxz
jge
dec
mov
or
mov
call
pinsrw
adc
and
adc
ja
inc
daa
adc
aaa
es
push
push
jl
xchg
xchg
and
push
cmp
scas
pop
cmc
dec
into
aam
sub
push
pushl
adc
dec
addb
arpl
arpl
pop
out
nop
test
pop
fdivl
ret
pop
sub
cmpb
adc
lock
jb
lcall
das
push
mov
xchg
adc
arpl
jae
inc
xlat
shll
aaa
sbb
adcl
sbb
shll
repz
jmp
fnstcw
xchg
push
xorb
adc
loopne
ret
push
movsb
cmp
gs
jne
jo
jg
xor
pusha
jne
pop
jg
jb
sub
add
pop
cmpsb
dec
mov
in
mov
cmpsb
das
divl
inc
xlat
push
daa
mov
pop
xchg
jcxz
repz
ret
push
shll
add
jae
inc
xlat
push
daa
mov
pop
xchg
jcxz
repz
ret
push
shll
jle
std
xchg
add
jp
ljmp
test
dec
pop
add
pop
fwait
rep
fwait
imul
les
daa
dec
jb
pop
or
clc
shll
jae
xchg
jecxz
aas
pusha
repnz
sti
dec
sub
es
pop
popa
jb
mov
sub
shl
loop
icebp
adc
add
in
jmp
push
xor
rol
dec
into
loop
or
push
mov
add
inc
sub
mov
xchg
lds
pop
sbb
std
and
daa
fstl
inc
push
cli
aad
jp
movsl
pop
mov
and
pop
scas
repz
sbb
inc
or
mov
cmp
call
inc
fsubp
les
jecxz
cmp
and
arpl
push
lcall
fsub
clc
mov
cmp
je
cmc
inc
xchg
jmp
or
mov
lds
cmp
int
push
in
mov
outsb
lds
je
inc
dec
add
testl
inc
test
lret
mov
int3
mov
ss
xor
mov
mov
stos
insl
mov
jne
pop
mov
push
in
xchg
pop
inc
xor
lods
out
leave
add
lea
mov
xchg
jecxz
ss
sbb
mov
sub
xor
fistpl
adc
adc
mov
mov
ja
xchg
push
dec
jnp
cld
cmp
sub
orl
cmp
bound
xchg
es
icebp
cwtl
mov
mov
jmp
movsb
push
push
cmc
scas
fsubp
jle
lods
stos
insl
cli
fistps
into
dec
stos
repnz
addr16
push
adc
int
jb
rcrl
sub
shufps
aad
sub
sahf
cmc
int
enter
jle
and
push
movsb
adc
xchg
push
xchg
xchg
fwait
test
xchg
enter
sbb
jg
mov
pop
jmp
xchg
jp
jmp
js
popa
lods
fs
jecxz
mov
adc
mov
xor
cwtl
inc
addr16
jecxz
sahf
cmovae
adc
push
fnclex
adc
mov
into
out
mov
cmp
lret
cmpsb
push
mov
push
or
cld
mov
sbb
mov
jl
pushf
popa
iret
shrl
sbb
push
push
add
jecxz
jmp
arpl
xor
or
in
dec
mov
jmp
fisubrs
pop
mov
mov
inc
stos
rcll
into
out
jmp
psrld
cwtl
cli
mov
dec
push
inc
xor
outsb
jl
loope
shlb
mov
mov
lahf
cltd
fistpl
jmp
mov
dec
pop
push
xchg
mov
and
gs
or
jg
jnp
bound
or
and
or
jo
mov
xchg
mov
popf
scas
in
mov
inc
fwait
scas
icebp
sbb
mov
jecxz
gs
pushf
out
xor
and
sub
push
and
sbb
outsl
xchg
dec
stc
add
repz
push
stos
pop
stos
enter
xchg
sbb
adc
jge
push
das
gs
arpl
lret
dec
dec
loope
sbb
dec
testl
adc
sbb
popa
jecxz
sub
iret
xchg
xor
jb
enter
or
outsl
insb
xor
shll
or
daa
popl
mov
shlb
ret
fbld
inc
mov
pop
and
cmpsl
xchg
xor
repnz
and
pop
movb
stos
shl
xchg
jns
xchg
sbb
mov
pop
mov
push
jmp
cmp
mov
cmp
sti
adc
pop
sbb
cmp
xchg
push
mov
nop
or
dec
inc
insb
scas
jmp
and
push
jmp
sub
cmc
jns
mov
or
iret
push
sub
jg
loopne
ljmp
jge
callw
mov
xchg
and
or
mov
pop
jne
inc
mov
inc
pop
xor
sub
and
push
pop
and
dec
adc
mov
int3
jle
loop
push
adc
push
and
fisttpl
cltd
fiaddl
addr16
insb
nop
imul
inc
pop
pop
sbb
fnstsw
xor
sbb
nop
in
cmpb
add
pop
popf
adc
jo
std
mov
jns
inc
xchg
pop
out
sbb
and
or
mov
stos
int3
outsb
addl
lret
push
sub
mov
cmc
fdivr
enter
push
and
inc
test
or
lea
out
cmc
leave
add
cmp
xchg
lods
xchg
mov
sti
and
or
push
pop
shll
mov
add
mull
add
mov
mov
rorl
out
and
ret
ret
mov
cmp
sbb
mov
inc
leave
or
jge
outsl
pushl
loopne
jp
xor
mov
inc
imul
push
pop
inc
in
sub
repz
je
push
out
jo
add
push
stos
mov
mov
jnp
repnz
sbb
aaa
cmc
jp
lds
out
mov
aaa
lahf
xor
adc
adc
cmpsb
mov
push
and
inc
xor
dec
and
stc
mov
repnz
xchg
mov
ss
cmp
clc
jge
push
and
bound
dec
xor
jne
aad
inc
push
test
and
mov
jl
gs
cmpsl
insb
cmp
xchg
push
mov
int
test
push
lret
pop
push
cmpsl
test
pop
fs
out
jbe
je
imul
clc
add
mov
xor
int3
xorl
loopne
and
sbb
lret
subl
cmp
test
jg
mov
jne
dec
jmp
sti
inc
sti
dec
stc
mov
je
sub
jo
pop
inc
and
mov
mov
add
dec
fcomps
stos
shl
cmp
add
nop
jp
sub
daa
sub
insl
adc
and
and
aad
hlt
hlt
lods
mov
into
shlb
gs
push
push
lret
mulb
xchg
sbb
fisubl
inc
and
sbb
push
or
jno
pop
push
mov
pop
mov
mov
mov
aam
adc
adc
fs
rorl
jmp
add
dec
pop
popf
cld
clc
aad
push
cli
iret
cs
insl
jnp
int3
mov
jns
hlt
inc
ret
shll
in
jl
pop
arpl
or
stos
icebp
jg
nop
pop
cltd
test
jge
les
cmp
xorb
xchg
pop
fnstenv
scas
mov
nop
lea
addr16
call
pop
loop
clc
dec
cmp
lock
xchg
ret
add
bound
daa
fbstp
sub
xchg
xlat
popf
stos
pop
ret
les
cmp
sbb
stos
inc
test
inc
xlat
loope
xor
test
push
dec
adc
push
inc
dec
mov
xchg
testb
hlt
sub
loop
sbb
inc
clc
leave
aas
sub
test
xor
stos
mov
lods
dec
xor
movsl
mov
ss
stc
add
cmp
imul
dec
test
aad
pop
ja
mov
in
das
movsl
adcl
jp
add
adc
add
lods
xchg
mov
out
hlt
and
negb
test
clc
add
push
jmp
pop
call
mov
js
sti
adc
mov
inc
inc
fidivrl
and
mov
sbb
data16
insl
sbb
xor
jle
shll
mov
lea
fs
inc
push
pop
cmpsb
pop
inc
add
dec
mov
sub
cmpsb
mov
out
jmp
dec
pop
lods
jl
cmp
loop
sbb
xchg
pop
enter
test
sarb
jge
cs
in
pop
pop
or
test
push
cld
mov
aam
xor
push
and
pop
pop
pop
es
push
lret
jno
das
jmp
into
mov
jg
imul
sub
icebp
popf
xchg
lret
imul
stos
xor
scas
mov
ret
lods
lret
sub
aas
xor
inc
movntq
jmp
xor
pop
jns
cmp
repz
fcomps
inc
rep
dec
xor
push
inc
mov
out
xchg
out
and
ret
jns
nop
repz
jg
fstpl
test
lods
push
test
mov
ss
icebp
pop
pushf
add
repz
les
or
and
mov
xor
ja
adc
test
mov
pop
inc
cmpsl
loop
mov
cmpsb
ds
mov
mov
dec
addr16
cld
aas
iret
pop
jmp
mov
jl
dec
jle
repz
pop
pop
icebp
out
rol
imul
adc
lea
iret
pop
and
inc
test
jl
lods
cmc
nop
inc
rcr
movsb
data16
and
jns
out
jmp
fldt
lcall
pop
push
add
mov
adc
mov
aaa
std
xchg
push
adc
cmpsl
mov
mov
jl
inc
sbb
and
cwtl
int
loop
sub
daa
inc
xchg
jmp
jnp
jl
cmp
or
or
cwtl
lds
call
fwait
push
mov
sub
out
cmp
ljmp
ds
lahf
outsb
out
cld
mov
pop
insl
test
movl
xor
fs
jp
xor
fstp
xchg
iret
rorl
sbb
push
pop
out
arpl
mov
pop
and
std
add
arpl
mov
jne
mov
dec
dec
outsb
flds
outsb
jb
sub
stos
stos
mov
pop
aad
dec
jge
shll
push
les
adc
jl
mov
xor
or
jmp
fsubrl
pop
sbb
shrl
xor
mov
sbb
popl
mov
add
cmp
or
xor
jns
or
mov
test
jb
or
dec
jns
insl
inc
daa
and
xor
in
sub
fmull
insb
jmp
jne
stos
mov
inc
ljmp
inc
pop
jb
lahf
imul
stos
or
clc
dec
subl
push
lds
stos
mov
aaa
bound
fwait
xchg
push
inc
adcb
pop
addb
es
inc
mov
mov
xor
nop
enter
rorb
repnz
int3
ss
cmp
je
adc
arpl
mov
xor
mov
movsl
mov
mov
jg
push
in
jle
insl
xlat
mov
push
fadd
insl
jecxz
lahf
ja
test
dec
and
loope
xchg
jge
fldt
xchg
mov
loopne
cmc
aas
lods
clc
clc
addb
jle
iret
pushf
dec
or
xor
add
roll
pushf
cmp
push
inc
mov
aas
rcll
je
push
rolb
xchg
pop
sbb
xor
jp
xchg
ljmp
mov
jb
mov
cmp
fisttpll
fnstcw
sbb
ss
pop
je
xor
ret
pop
cwtl
insb
mov
unpcklps
stos
fdivs
jmp
dec
negb
scas
popa
ja
xor
ret
lock
mov
in
ljmp
iret
cmp
cs
lret
in
sahf
scas
sbb
and
repz
aaa
shrl
xchg
xor
xor
les
dec
jge
or
sbb
add
dec
mov
mov
js
mov
test
or
movsb
out
xchg
inc
test
call
sar
inc
jnp
xchg
mov
shr
dec
xor
dec
dec
push
mov
enter
lock
iret
jo
jae
pop
cs
rclb
adc
rolb
jecxz
and
fistps
push
stc
das
jmp
pop
hlt
mov
jne
scas
rorb
mov
dec
jnp
adcb
xor
jl
scas
jecxz
mov
dec
into
xchg
jmp
adc
in
movsl
mov
xchg
popa
sbb
pop
mov
jmp
fcomps
lcall
das
mov
and
lods
aas
push
mov
jg
testl
dec
in
mov
insl
jmp
jo
js
aas
popf
xor
push
pop
sub
leave
cli
repnz
pop
cmc
xor
mov
push
lahf
shrb
out
in
mov
jbe
test
jnp
mov
inc
out
jnp
xorl
and
lods
and
mov
mov
mov
mov
mov
push
pop
leave
into
arpl
cmp
push
pushf
repz
push
jb
sbb
xchg
scas
push
arpl
pop
inc
sbb
incl
dec
mov
movsb
les
push
popf
shrb
jge
daa
dec
ja
stos
jl
pop
xchg
inc
pop
mull
fimuls
inc
mov
aad
push
xchg
ja
inc
add
add
shll
dec
mov
push
sub
jae
sbb
add
stos
mov
pop
das
mov
dec
pop
mov
addr16
testb
cltd
xchg
or
mov
push
jle
imul
jl
xchg
pop
mov
loopne
cmp
test
xchg
inc
in
push
cs
das
or
mov
lahf
lods
push
inc
lahf
adc
scas
xor
cmp
xor
cltd
cwtl
mov
out
mov
fnsave
or
push
sbb
outsb
inc
incb
in
cs
mov
in
les
push
les
popf
jb
test
sub
test
insb
inc
jns
adc
stos
int
or
dec
mov
repz
sbb
testl
inc
push
pop
and
jle
fmull
mov
adc
rcll
lods
cmp
dec
popf
ret
sbb
lret
sahf
push
xor
sub
xchg
shll
cmp
shrl
push
mov
ror
cmpsl
repz
scas
push
in
lea
movsl
jg
out
fwait
shll
sti
xor
dec
lea
lcall
fwait
in
jecxz
push
and
or
mov
mov
inc
push
jnp
mov
sarb
push
cmpsb
mov
and
mov
jbe
cmp
mov
mov
stos
sti
ficoms
jbe
add
cmpsb
gs
adc
jb
jg
das
pop
pop
test
ss
out
xor
and
imul
push
iret
fs
outsl
cmp
fadds
dec
mov
pop
movsl
push
mov
insl
das
out
xchg
loop
daa
jbe
or
rcrb
pop
ds
cmpsb
outsb
ficoms
movsb
pop
mov
jnp
pop
mov
xchg
mov
ficompl
incl
enter
push
int
ljmp
xor
lock
dec
sbb
adc
ja
stc
in
shr
aad
ret
loopne
xor
cmp
xor
pop
jne
inc
test
ficompl
push
xchg
and
out
sbb
cmp
leave
insl
xorl
mov
mov
push
repz
test
mov
popf
sub
sbb
ret
or
lods
mov
mov
jle
jmp
movsl
pop
xor
jp
sbb
mov
mov
out
outsb
insb
lods
stc
sbb
testl
adc
push
mov
std
popf
dec
jbe
xchg
mov
mov
ret
out
aad
push
clc
jne
jle
and
inc
mov
mov
push
push
sbb
adc
rcl
pop
pop
mov
adc
repnz
or
sahf
adc
sbb
mov
ljmp
ret
xor
mov
sub
jp
xchg
rolb
insl
xor
mov
dec
mov
pop
add
fidivs
cmp
or
aaa
xor
test
xchg
push
mov
xchg
or
xchg
jnp
imul
and
in
pushf
sbb
sub
push
cmp
jbe
das
mov
xchg
out
and
xlat
iret
lods
mov
push
clc
int3
hlt
inc
lret
xor
lods
nop
mov
mov
sbb
sbb
pop
and
and
test
inc
iret
clc
xlat
push
ss
pop
aaa
inc
outsb
sbb
int3
dec
inc
lahf
ja
test
adc
movsb
sar
mov
push
cli
cmp
enter
cmp
and
int3
sub
dec
into
nopl
loop
imul
rolb
je
addr16
xor
fucomp
iret
mov
ret
leave
popa
sub
adc
and
fs
dec
rol
mov
push
cmp
lret
clc
mov
push
mov
lods
mov
xchg
cmp
push
mov
test
push
sti
adc
lock
cmp
xchg
mov
loope
mov
or
insb
dec
inc
cmove
rorb
add
pop
out
xchg
divl
add
or
enter
js
repnz
or
loope
in
into
mov
inc
inc
xchg
mov
xor
sbb
add
mov
dec
dec
shlb
clc
mov
push
jl
cli
inc
movsl
test
in
jnp
cli
data16
ljmp
xchg
mov
dec
fistpl
mov
pop
ljmp
stc
test
push
lock
inc
ret
pop
popa
mov
icebp
cwtl
cmp
stc
mov
mov
enter
inc
popa
pusha
cmp
dec
jnp
mov
xor
dec
jmp
cwtl
test
iret
andl
jbe
std
jmp
xchg
jnp
js
popf
int
cmp
movsb
xchg
dec
dec
mov
cmp
scas
cmpsb
fisubrl
ror
cld
dec
fwait
inc
bound
inc
xchg
mov
leave
shrb
mov
push
cld
xor
sarl
cmp
aam
pop
pop
sbb
mov
adc
mov
jbe
repnz
enter
or
xchg
testl
orl
sbb
aad
sbb
jns
push
xor
in
leave
stos
inc
jbe
xchg
movsl
pop
repnz
stos
sub
sub
pop
sbb
imul
mov
jae
cli
xor
jo
pop
aad
aaa
hlt
mov
sub
popa
loope
dec
add
lods
jecxz
lret
les
cltd
out
jg
stc
jmp
pusha
sti
mov
or
dec
pop
mov
addb
mov
xchg
add
or
sbb
dec
jg
mov
or
ds
lret
jp
popa
mov
dec
xor
bound
cli
pop
add
pushf
cmp
cmpsl
js
and
sub
in
stos
rclb
cwtl
sahf
inc
lea
insb
cmp
xchg
pop
dec
or
add
dec
bound
std
cmp
jno
jp
test
push
xchg
maxps
and
pop
in
cli
and
jo
mov
movsl
decb
mov
pop
rol
cli
insl
sarb
pop
jge
xchg
cltd
cli
pop
dec
mov
sbb
addr16
in
fildll
cmpsl
in
movsl
mov
popf
cmp
in
fsub
lods
add
call
subl
outsb
mov
cmc
cmp
testb
push
push
jge
mov
je
adc
xor
out
fisubrl
or
jnp
cmpb
and
or
cmp
iret
mov
and
or
loop
jne
icebp
pop
or
push
shll
xchg
mulb
out
fmuls
sti
das
mov
and
pop
inc
inc
out
subb
mov
jb
lcall
and
or
and
xchg
divb
cmc
jl
and
mov
inc
xor
xlat
int
std
aaa
xchg
xchg
int3
jo
inc
sbb
add
cmp
jecxz
addr16
mov
loop
jecxz
nop
shll
or
leave
popa
adc
add
cs
xchg
inc
mov
das
cmp
cmp
push
out
sbb
adc
jle
mov
mov
cmp
into
jae
jbe
dec
dec
ret
add
or
mov
jbe
push
cmc
call
mov
mov
leave
cwtl
stc
inc
jns
push
sub
mov
pop
inc
repnz
in
cld
xor
shll
mov
repz
std
lahf
pop
ret
int3
stc
rcr
loop
jae
int3
mov
add
jge
cvtdq2ps
sti
sub
xlat
js
outsb
xchg
test
rclb
mov
rorb
mov
daa
jno
arpl
mov
pop
jb
xlat
add
int
shrl
add
pop
add
xchg
push
je
xor
push
lahf
adc
xchg
ret
shrl
test
dec
inc
add
inc
mov
mov
push
push
ret
divl
pop
sub
or
adc
lock
sub
mov
xchg
push
or
adc
pop
pop
inc
nop
or
mov
mov
test
pop
jae
bound
mov
das
jae
lret
mov
xor
divl
inc
xlat
push
daa
mov
pop
xchg
jcxz
repz
ret
push
shll
add
jae
inc
xlat
push
daa
mov
pop
xchg
jcxz
repz
ret
push
shll
sbb
sbb
inc
xlat
push
daa
mov
pop
lcall
push
aaa
cmpsb
mov
xchg
xchg
push
out
divl
ret
xlat
xchg
daa
pop
aaa
sbb
fwait
decl
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
ficomps
jns
dec
int
sub
adc
add
add
or
push
add
add
add
push
add
add
roll
add
add
add
add
add
add
repz
add
add
add
add
add
mov
add
add
pusha
add
add
pop
add
add
add
add
add
add
xchg
add
add
mov
or
out
add
push
add
add
add
add
and
outsl
add
pop
push
sbb
or
inc
add
add
add
add
ljmp
add
cmp
lahf
add
add
add
add
add
arpl
add
xor
add
pop
push
outsb
add
add
add
add
dec
add
add
add
inc
add
insl
add
add
and
out
add
add
mov
dec
add
mov
add
add
add
add
pop
add
add
pop
add
add
add
add
add
add
add
add
out
add
fwait
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
push
or
mov
adc
push
add
add
add
ja
pop
add
add
add
add
add
add
and
add
cltd
add
add
inc
add
add
insl
add
jne
cmp
inc
add
or
dec
add
add
cmp
mov
add
pop
push
inc
add
add
add
add
rolb
add
add
add
or
insl
add
cmp
add
add
add
testl
rolb
add
add
sbb
xchg
add
add
add
add
add
add
add
add
lea
dec
add
add
mov
das
add
repz
add
add
add
add
iret
add
adc
add
add
add
cmp
lods
add
testl
outsb
add
xor
lcall
add
adc
repz
add
add
rolb
add
push
add
dec
add
add
add
add
add
add
add
mov
fwait
add
es
add
add
add
add
fiadds
add
in
mov
add
add
inc
add
add
add
addl
fwait
add
add
add
add
add
add
out
pusha
add
add
add
add
dec
add
add
add
add
add
add
add
mov
inc
add
add
add
add
add
arpl
arpl
push
add
add
sbb
add
add
inc
add
add
add
or
or
dec
add
add
add
add
dec
add
pop
add
add
add
add
movsl
add
mov
add
push
add
add
outsl
add
iret
add
add
mov
dec
stc
scas
sub
das
out
mov
ficomps
out
fiadds
mov
pop
add
rorl
data16
out
jp
ret
aaa
mov
jnp
cld
sub
dec
jo
jbe
xor
sbb
divb
fstpt
pushf
or
jge
pop
jg
movsl
pusha
ret
mov
cmp
xor
roll
mov
xchg
les
mov
test
int
jae,pt
int3
addr16
jle
mov
ret
xchg
inc
push
mov
int
lahf
mov
push
es
pop
addr16
xchg
or
out
add
mov
inc
jmp
jb
sbb
test
shr
mov
push
popf
lea
daa
cmpsb
xchg
xchg
jp
in
les
xchg
subb
push
xchg
sub
and
xchg
mov
out
pop
test
jne
insb
mov
sub
rcl
pop
and
push
adc
sub
jo
popf
pop
mov
lods
lock
mov
xor
jne
mov
aas
mov
pop
push
imul
in
cltd
icebp
leave
or
sti
loopne
add
cs
sbb
or
stos
xor
or
push
clc
mov
push
jbe
xor
stos
dec
adc
xor
cmc
mov
jg
fldenv
and
pusha
jmp
dec
movsl
fs
add
cmp
pop
ljmp
mov
mov
sbb
cs
inc
and
icebp
cmc
std
pop
add
cmp
xchg
js
adc
stos
enter
dec
lret
push
mov
adc
jnp
xor
add
pop
fildl
lret
and
mov
ret
test
xchg
dec
out
cwtl
andl
jns
push
pop
cmp
cmpsb
out
in
popf
xor
dec
dec
cmpsb
and
fsubp
ret
rcrl
rcrl
shll
cmpsb
xor
dec
repnz
rcr
out
jmp
add
pushf
cmp
xchg
sbb
pop
or
pop
fwait
sbb
pop
mov
push
add
out
jmp
cmp
cltd
pop
dec
subl
push
scas
cmc
cltd
lret
call
inc
aaa
rcrb
xchg
mov
cmp
inc
jecxz
push
sbb
repnz
mov
inc
fwait
movsl
add
pop
mov
lcall
adc
addr16
xor
mov
sbb
jg
fbld
std
or
into
imul
addr16
adc
xor
push
aam
jle
repz
inc
mov
lods
dec
and
dec
fwait
pop
iret
and
mov
inc
aas
cmpsl
sbb
dec
pushf
fiadds
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
