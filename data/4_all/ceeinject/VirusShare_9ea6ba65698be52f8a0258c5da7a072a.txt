aaa
dec
add
add
add
add
addr16
stc
mov
div
mov
mov
std
mov
pop
pop
pop
jnp
adc
loop
dec
mov
or
fisttps
xorb
push
pop
in
or
dec
rorl
lods
popf
and
idivl
inc
jp
shlb
out
jl
outsl
addl
or
cmp
arpl
cmp
pop
popa
inc
and
mov
lahf
jns
hlt
clc
cltd
and
mov
jae
jmp
and
or
or
xor
arpl
leave
bound
shl
fsubrs
push
cmp
or
loopne
dec
add
out
inc
and
push
out
pop
and
and
jl
add
mov
sub
sub
jb
xchg
adc
test
sbb
sbb
lods
pop
imul
sub
mov
stos
test
jnp,pt
or
mov
mov
int3
sbb
adc
jb
ds
push
jne
xor
out
leave
sub
fwait
mov
pushf
cmp
mov
iret
movsb
sbb
enter
jnp
xor
push
movsb
inc
xchg
loope
mov
les
cmp
add
pop
mov
pop
sbb
in
dec
mov
jg
or
fdivr
andb
daa
out
cs
sbb
mov
rcll
cld
or
imul
inc
adc
pop
lahf
adc
sbb
imul
and
clc
sbb
pop
or
mov
inc
stos
sbb
xchg
ds
les
clc
sti
and
jmp
push
shll
cld
insl
cmp
adc
clc
int
pop
rcll
stc
sub
sub
cmp
mov
rorl
jo
mov
mov
repnz
xchg
cmp
arpl
lret
inc
sbb
imul
dec
inc
mov
imul
jo
dec
mov
sub
leave
fldcw
xchg
push
push
mov
movsb
cli
aad
out
das
jle
andl
clc
push
jle
xchg
in
add
test
imul
hlt
repnz
sbb
int
push
pop
xchg
jns
cmp
and
int
and
or
mov
push
pop
sbb
das
je
loope
loope
jbe
out
adc
ljmp
cs
in
sub
and
outsl
inc
xlat
xor
mov
jge
or
sbbl
lret
scas
cmc
cmpsb
fwait
xchg
or
je
sbb
cmp
pusha
dec
nop
sub
mov
nop
push
fldcw
and
clc
out
inc
sub
call
jbe
clc
lods
stos
sti
mov
xchg
fwait
push
and
jmp
jae
lods
gs
fs
inc
adc
xchg
imul
std
out
out
ret
mov
jecxz
into
xlat
movsb
in
out
mov
push
add
push
pop
das
gs
mov
jge
js
imul
test
xor
xchg
and
stc
out
ss
cmc
js
div
loope
sbb
pop
adc
lret
fimull
inc
mov
mov
in
sbb
push
aaa
push
sbb
std
pop
imul
in
roll
xchg
pop
pop
ljmp
xchg
subb
xor
bound
nop
mov
int3
sub
rorl
cmp
test
enter
xor
out
mov
test
push
pop
adc
xchg
mov
icebp
test
inc
jb
adc
push
aam
adc
xchg
add
mov
fs
bound
sbb
orl
and
dec
push
out
addr16
rolb
mov
je
insl
dec
inc
out
push
adc
push
push
dec
cmp
sub
jecxz
add
into
pop
jbe
loope
cmp
rcrb
and
ss
push
xor
ds
push
mov
inc
in
inc
ss
cmp
dec
fcmovb
mov
lods
loopne
mov
inc
sbb
movsl
mov
ret
mov
mov
pop
push
mov
loopne
leave
nop
in
lods
cmpsl
fsub
mov
insl
cmp
leave
mov
popf
xor
test
es
mov
pop
shlb
mov
ret
outsb
fadds
arpl
pop
mov
xchg
mov
std
pop
jae
mov
lods
insl
les
xchg
adc
mov
push
call
xlat
cmp
hlt
add
adc
lahf
push
lods
sub
push
mov
andb
gs
out
pop
sahf
fdivs
inc
std
out
ret
lock
pusha
mov
out
iret
or
jl
inc
cwtl
in
imul
add
in
push
xor
shlb
lret
sub
rcrl
pop
fisubrs
lds
jbe
std
cmp
fstp
jle
pusha
ficompl
jge
pop
test
inc
mov
mov
jg
call
push
cmp
and
js
xor
repnz
in
scas
into
insb
int3
negw
stos
sarl
lods
push
out
bswap
push
push
or
mov
je
outsl
push
cmpsl
ficoml
adc
lret
shlb
push
rol
push
mov
sub
jle,pt
fldcw
mov
dec
jo
add
enter
and
inc
aad
push
loop
movsl
sahf
repz
cmp
add
xlat
mov
aas
aas
jl
push
lret
popa
push
in
cmp
lods
test
sub
rcll
xor
es
xlat
cmp
and
cli
loop
daa
ljmp
and
dec
cld
mov
add
pop
jmp
adc
xor
rclb
mov
sub
scas
mov
xor
and
out
fists
in
push
pop
aad
jae
pop
repz
test
push
xchg
jp
sar
enter
outsl
sbbb
mov
stos
cmp
mov
jne
stos
mov
in
sub
movsb
bound
loopne
mov
fdivrs
xor
out
es
addr16
add
hlt
sub
xchg
sub
mov
rcr
push
mov
jp
mov
cld
js
fmuls
mov
adc
jl
xor
jo
lock
mul
mov
pop
push
sub
int
loop
mov
stc
adc
rolb
jns
rclb
movsl
aad
dec
das
cmp
scas
xchg
insb
xor
aas
xlat
push
cmp
and
clc
movsl
cs
jnp
rcr
adcl
jl
insl
lahf
mov
mov
and
dec
dec
inc
pushf
sub
jmp
or
and
loope
cmp
xor
cmp
fsubp
out
and
push
pop
clc
mov
loope
decb
mov
int
pop
xchg
sahf
sbb
in
push
ja
mov
pop
push
adc
jle
lods
shrl
or
lahf
xchg
movsb
fs
pop
push
ret
cmp
shr
xchg
mov
jecxz
sub
pop
rclb
cli
mov
cmp
xor
or
sahf
pushf
jb
sbb
je
pop
das
fldcw
in
push
sbb
sbb
sub
popl
or
int3
jg
test
pushf
daa
jmp
inc
mov
shrb
jnp
xor
pop
sti
mov
negb
cs
cli
cmpsb
pop
sub
or
inc
in
pop
mov
adc
mov
in
dec
cmp
add
lcall
dec
clc
in
mov
ljmp
shlb
lea
stos
mov
adc
mov
rcrb
sub
jmp
loop
es
std
hlt
xchg
or
cmpsb
and
in
aam
test
insl
mov
pop
repnz
dec
aaa
mov
sbb
clc
mov
inc
sub
mov
lret
add
inc
fwait
mov
push
push
pop
int3
mov
push
adc
pop
std
cmp
adc
loopne
xor
xchg
arpl
or
pop
mov
fsts
mov
adc
xor
mov
shl
std
das
cmp
jb
jecxz
inc
inc
stos
xlat
in
jp
jbe
cmp
out
leave
pop
dec
jecxz
nop
mov
xlat
imul
loop
cmp
mov
jb
mov
xor
mov
lock
add
in
loop
popa
jle
add
pushf
push
jle
inc
mov
ds
sbb
movl
sbb
out
sbb
mov
mov
jne,pt
xchg
push
mov
mov
pushf
push
mulb
imul
popf
out
fmull
cld
lcall
ljmp
fwait
push
dec
jo
dec
test
fbstp
and
pop
mov
fs
lahf
bound
push
repnz
sbb
add
mov
arpl
mov
pop
push
add
mov
loopne
rolb
mov
cmp
mov
in
dec
dec
xor
pop
movsl
scas
sub
mov
dec
leave
xchg
scas
mov
shll
cmp
cmc
fstpt
in
mov
cmp
push
sub
pop
or
cmp
xchg
pop
jl
push
sti
in
imulb
addb
mov
das
ds
add
stos
sbb
lahf
mov
rcll
or
jns,pt
jo
cmp
push
and
add
push
pushl
out
push
sbb
into
xor
not
adc
pop
cmp
imul
in
icebp
icebp
ja
xor
fsubrp
xor
int
add
add
repz
pop
inc
mov
push
and
add
outsl
mov
out
sub
xchg
jne
xchg
stos
cld
cvtpi2ps
mov
in
sbb
iret
or
jmp
fwait
icebp
sarb
mov
dec
cmp
es
and
xor
movb
dec
sbbl
mull
pop
sub
int
mov
mov
decb
pop
dec
mov
call
enter
adc
outsb
pop
mov
xor
ljmp
scas
leave
mov
adc
cmp
lods
push
ret
fnstsw
mov
push
mov
pushaw
pop
jb
insb
adc
xor
filds
or
ret
ss
in
jmp
shl
mov
repnz
fnstsw
jns
data16
fsubrl
syscall
je
pushf
std
mov
xor
call
sahf
push
jo,pn
inc
test
mov
push
jae
icebp
xchg
pop
mov
mov
push
dec
xor
dec
mov
negb
movsl
xor
cmpsl
add
je
inc
int3
cmpsb
sbb
and
xchg
or
scas
cmpb
loope
ret
sbb
adc
leave
mov
cs
dec
jnp
add
jne
ljmp
outsl
xchg
mov
mov
cs
sub
or
pxor
sbbl
inc
push
js
fsubrp
das
mov
jno
and
cmp
aaa
push
mov
adc
xor
or
jb
in
add
outsb
or
xor
push
leave
push
mov
movsb
sarl
push
fidivs
lods
int3
and
xor
loop
push
xor
in
pop
nop
push
push
ja
mov
das
fdivs
dec
mov
testl
inc
clc
adc
dec
dec
inc
fists
jge
inc
xchg
sub
mov
jnp
sub
or
lods
mov
xor
jo
mov
ret
ljmp
lods
cmpsl
mov
fsubs
addr16
cld
in
vorpd
sbb
sub
add
test
pushf
cmovl
lcall
adcb
in
mov
xchg
sarb
dec
std
in
int3
lcall
fnstenv
iret
cmpsb
dec
xchg
lods
or
xor
inc
in
mov
fldenv
push
jmp
lods
aam
insb
sub
jnp
and
xor
scas
fwait
cwtl
sub
cli
aas
inc
and
inc
dec
test
xchg
mov
movsb
mov
mov
and
js
test
fwait
mov
ss
jnp
add
addl
rcr
fstpl
pop
or
push
xchg
in
mov
aaa
inc
jecxz
push
xchg
sub
sub
pop
xor
je
xchg
sbb
ja
xlat
jnp
sbb
lcall
sahf
test
jb
loopne
add
cmp
mov
idivl
pop
test
jae
and
std
or
and
jecxz
jmp
clc
stos
add
cmp
jecxz
add
imul
je
jae
imul
repnz
enter
pushf
push
pop
push
loop
cld
inc
cmpb
shlb
mov
movsl
inc
int
addb
mov
pusha
jl
sbb
in
leave
insb
testb
inc
pop
dec
leave
pop
mov
lods
jmp
cld
call
ss
js
xchg
mov
adc
jb
push
mov
lods
in
mov
insb
in
fsts
xchg
and
imul
cld
shll
dec
lret
mov
sub
dec
cs
push
cmp
add
fistps
shll
pop
shl
pop
xor
push
test
iret
test
enter
adc
rolb
addr16
xchg
jbe
in
repz
push
outsb
test
mov
cmpsl
jecxz
dec
push
lea
lock
out
push
mov
lret
jge
cs
cli
pop
push
inc
or
push
jbe
std
scas
add
imul
bnd
jecxz
cmp
mov
xchg
mov
jnp
aas
sbb
pop
cld
mov
cmp
adc
fstpl
sbb
sti
sbb
sbb
in
daa
add
jb
sar
ss
jmp
cmp
adcl
mov
sub
popa
cmp
shlb
cmp
mov
adc
ficoms
cs
adc
test
mov
xchg
lods
dec
out
pop
sub
cmp
jl
clc
pusha
xor
in
jne
xchg
cs
pop
mov
shr
mov
or
pop
xor
sahf
jle
outsl
stc
mov
outsl
push
cli
addr16
ds
pop
inc
repz
insl
push
stos
fwait
test
xchg
loope
add
movsl
shr
xchg
xor
and
sti
mov
icebp
add
orb
dec
daa
jbe
xlat
lds
sbb
aas
xchg
cs
push
popa
jae
mov
pop
insl
mov
in
ror
jb
push
mov
jo
pop
adc
and
mov
jnp
cmp
stos
cmc
jne
push
push
push
addr16
movsl
mov
test
orb
sbb
sti
into
xor
lods
in
fucomp
xor
repnz
fdiv
lahf
adc
lds
mov
divl
mov
fsubs
int3
fisttpl
xor
mov
xor
jb
cmp
push
push
push
fnsave
out
sub
icebp
pop
into
lods
pop
imul
mov
push
gs
push
sbbb
into
push
aad
mov
out
and
jl
inc
pop
dec
ljmp
push
mov
addb
xor
push
cli
out
jo
push
mov
scas
ljmp
pop
adc
lods
ss
mov
movsb
xchg
cmpl
movsb
mov
xchg
xor
cltd
lock
add
push
repz
mov
push
add
pop
jns
subl
divl
cld
jnp
arpl
popa
mov
pop
repz
pusha
jo
sub
inc
sub
sub
jb
repz
cltd
sub
outsb
jge,pt
bound
sbb
insb
cmp
xor
and
pop
lock
loop
fists
mov
gs
pop
data16
in
popa
push
cmp
xchg
cmpsb
fisubs
xor
or
loope
ljmp
jno
js
add
inc
loopne
out
scas
std
mov
shlb
and
jb
call
push
push
imulb
dec
cmc
dec
scas
clc
cmp
clc
mov
xchg
sub
movsl
fiadds
xor
std
push
xor
mov
xlat
lods
lcall
add
adc
pop
sbb
jb
dec
jl
jno,pn
das
cld
push
xchg
mov
pop
adc
jae
movsb
pop
fcomp
outsb
xchg
inc
mov
sahf
nop
adc
cwtl
add
xchg
js
in
push
sbb
cmp
lods
xor
clc
inc
xor
shl
xor
loop,pt
and
pop
inc
aas
mov
repnz
and
dec
gs
push
std
add
push
es
stos
cli
mov
cmp
inc
mov
cmc
mov
inc
lret
jge
mov
aam
adc
insl
inc
adc
sbb
push
pop
or
sbb
ror
mov
in
pop
dec
mov
adc
ficoml
notl
pop
jne
fwait
dec
inc
dec
sbb
mov
inc
add
dec
rolb
daa
mov
pop
into
xchg
xchg
popa
dec
adc
mov
lea
bswap
mov
and
inc
in
mov
aas
nop
add
cmp
lret
loop
add
push
xchg
in
leave
sub
mov
adc
fwait
nop
mov
arpl
xchg
xchg
push
mov
jl
inc
lods
cmpsl
add
scas
fidivs
pop
adcl
mov
cmpsb
cltd
sub
jbe
clc
in
movsl
inc
out
or
pop
popf
imul
stos
push
dec
or
mov
mov
sbb
stc
add
xchg
push
jbe
or
add
nop
jno
adc
js
mov
cmp
int
push
movsl
leave
xchg
pop
xchg
jp
mov
pusha
or
jae
push
lods
and
jge
leave
lods
out
cmp
add
or
sub
dec
mov
lahf
jge
and
les
pop
fldl2e
aas
mov
fs
in
push
cltd
js
xor
test
sbb
mov
pop
push
cmpsl
pop
aam
xchg
inc
hlt
push
add
dec
mov
fdivr
mov
add
jmp
icebp
and
add
pop
xchg
fstpt
mov
shrb
stos
jecxz
stc
lcall
xchg
rorb
inc
and
jmp
xchg
inc
jne
loope
push
dec
mov
or
xor
mov
and
ret
and
jg
push
je
or
bound
vhsubps
and
fcmovnbe
stos
sbb
rolb
xor
popa
dec
mov
push
jno
insb
or
in
mov
mov
jo
xor
fcomps
nop
notb
and
jp
sbbb
inc
filds
das
fbstp
addr16
sbb
cs
lret
push
push
jmp
mov
mov
std
aas
pusha
fnstenv
aas
fisttps
push
mov
sbb
outsl
mov
clc
inc
imul
fbld
es
out
and
data16
insl
movsb
outsl
shr
int
test
imul
dec
hlt
lods
xchg
add
push
jecxz
outsb
xor
iret
inc
inc
fs
sub
sbb
xchg
stos
cwtl
mov
pop
jne
mov
or
ljmp
mov
add
cwtl
int
cmp
hlt
mov
dec
jle
ss
inc
jecxz
ds
dec
test
sub
add
xchg
sub
fimull
push
and
iret
arpl
push
rcr
fsubrs
movsb
jo
jl
aas
jb
adc
in
test
sbb
jmp
xor
sahf
hlt
cmp
add
lcall
pop
repz
push
mov
xor
jae
xor
mov
lods
adc
mov
xor
push
test
jmp
out
xchg
adc
mov
dec
xorl
mov
out
push
jno
lcall
scas
daa
xchg
pop
lcall
rclb
cld
mov
or
fcomps
fwait
int
or
mov
insl
roll
inc
inc
dec
sbbb
gs
push
xchg
jb
or
mov
popf
out
ret
xorl
xchg
sub
and
das
sti
loope
xor
cmp
dec
movsl
ror
bswap
in
xor
sbb
add
fwait
cmp
mov
mov
in
and
stos
rcl
add
imul
pop
jae
je
test
sub
mov
out
pop
stos
cli
jae
rcrl
lret
push
xchg
scas
enter
xchg
loope
ljmp
or
inc
es
mov
or
icebp
out
push
lea
mov
addr16
dec
pop
icebp
adc
push
movl
cwtl
cs
jo
les
sub
enter
call
lock
int
ret
dec
std
or
repz
jns
sub
mov
push
cltd
cmp
aad
repnz
loope
mov
test
aam
sahf
and
inc
push
fcmove
fisubrl
movl
cmpsb
aam
cmp
daa
xor
dec
daa
xor
push
xchg
daa
repnz
cmpsl
mov
popf
lret
out
scas
outsb
pop
pop
sbb
outsl
mov
push
pop
mov
xor
pop
pop
rcrb
cmp
ljmp
paddw
cmp
daa
cmp
xchg
es
popa
aam
test
lahf
mov
mov
lcall
adc
xchg
dec
xor
cs
testl
sbb
fucomip
stos
pop
push
sahf
aam
inc
mov
cmp
shrl
and
mov
jns
cmc
dec
jbe
jbe
xor
xor
stos
cmp
popf
and
mov
jno
jge
push
mov
out
cmc
mov
mov
mov
int
push
adc
push
xchg
ljmp
push
mov
test
inc
push
push
lret
pop
sub
sub
sub
aad
cmp
outsl
out
pushf
aam
adc
add
mov
lods
lcall
or
inc
push
test
pop
bound
add
clc
aam
cmp
push
xor
adcb
and
imul
rorb
mov
xor
imul
xlat
repz
xor
cmp
out
pop
jg
cmpl
dec
pusha
flds
pop
cmp
cmp
sub
push
rcrb
adc
sub
rorb
scas
push
and
ja
xchg
out
cmp
movsb
push
idivl
and
dec
imul
daa
lods
cmc
lcall
cmp
psubusb
insb
jo
pushf
sahf
push
sub
xor
xchg
aad
cld
mov
jo
shll
sbb
ret
and
popf
mov
mov
gs
rcll
inc
outsb
jle
sbb
cmp
imul
mov
push
data16
nop
jne
pop
ret
inc
lcall
jae
es
je
out
mov
lock
mov
ds
test
imul
jae
fnstenv
aam
cmc
jae
shlb
add
mov
sbb
repz
and
aam
jmp
lods
mov
sti
push
imul
out
inc
insl
movsbl
adc
loopne
leave
add
cld
jge
adc
push
inc
fs
xchg
ljmp
mov
and
nop
mov
out
nop
insb
popf
xchg
mov
pminsw
sti
cmp
inc
lods
mov
push
rol
jmp
scas
iret
repnz
mov
xlat
push
mov
sbb
ljmp
mov
or
pop
scas
sub
add
adc
push
push
adc
insl
push
in
lcall
nop
adc
ss
shrl
pop
inc
mov
out
pop
inc
mov
mov
in
aaa
insb
loope
icebp
jo
popf
cs
xor
inc
lcall
sub
je
sbb
fimull
lret
adc
push
mov
mov
lea
insl
lods
adc
lock
popa
or
lcall
movsl
arpl
insl
xchg
aad
ljmp
roll
jne
bound
xchg
mov
iret
add
aad
xchg
xchg
add
sub
insb
xchg
clc
rcr
mov
pop
fnstsw
test
cmp
fldenv
mov
or
es
test
cli
cld
call
ret
idivb
add
push
in
xchg
jle
push
dec
xor
test
repnz
mov
stos
lret
mov
push
xchg
inc
aas
jecxz
xor
mov
fmull
push
push
and
cld
jae
sub
mov
rcrb
outsb
jmp
das
dec
icebp
mov
cli
or
fcompl
in
in
mov
ret
loop
out
jb
lods
fdecstp
mov
fisttpl
jmp
adc
add
cli
in
xor
in
and
push
pop
in
pop
or
lahf
inc
xchg
in
inc
mov
fsubs
jmp
lcall
fimull
fldt
pop
nop
xor
out
cmp
loopew
ljmp
xchg
enter
adc
mov
mov
xor
jno
shr
dec
cmp
push
das
test
aam
fisubs
out
mov
or
cmp
dec
sti
jb
push
sub
aas
jmp
or
xor
loop
push
insb
sub
cltd
lods
jnp
sbb
das
js
xchg
xchg
jne
popl
das
fists
cmp
fisttpll
test
push
push
inc
mov
jecxz
mov
or
jns
mov
inc
loope
hlt
pop
adc
subl
mov
xchg
push
das
daa
mov
xor
adc
repz
lahf
sbb
rorl
mov
lea
inc
adc
in
cwtl
pop
dec
adc
enter
jg
out
or
lahf
pop
add
sbb
pop
or
dec
ret
pop
icebp
mov
inc
xlat
pop
popf
fwait
sbb
cmpsb
mov
fsubrs
idiv
adc
dec
incb
insl
inc
pop
orb
movsb
add
inc
int
pop
int
xlat
inc
ja
sti
fimull
fimull
imul
sti
mov
pop
mov
insl
lods
sub
aam
sarl
rcrl
imul
fiaddl
mov
xor
call
sbb
and
sub
out
cltd
and
addr16
dec
xchg
incl
sub
lea
mov
jl
or
xlat
adc
int
movsb
sbbb
arpl
cmp
ss
mov
jb
enter
push
sub
stc
xchg
xchg
add
repnz
sbbl
mov
repnz
repnz
adc
arpl
sub
adc
inc
adc
adc
mov
es
push
mov
and
scas
mov
lahf
mov
les
push
jae
jnp
xchg
arpl
jecxz
outsl
nop
push
into
out
mov
clc
sub
cmp
out
sahf
sbb
pop
adc
pop
jl
push
mov
popa
and
mov
insb
add
inc
shll
imul
sbb
xchg
xor
xor
mov
jnp
xchg
aam
fiaddl
movsl
inc
push
dec
push
fstl
ja
sbb
xchg
insb
jnp
add
loopne
je
dec
push
or
adc
xor
lcall
ret
ret
lock
data16
outsb
sub
jp
xor
jg
seto
int
sbb
mov
add
ja
pop
push
insb
ret
mov
enter
les
inc
cmp
and
test
xor
xor
mov
xchg
mov
fmull
mov
and
push
mov
dec
inc
dec
dec
and
dec
leave
mov
scas
pushf
jmp
movsl
pop
fisubrl
mov
or
push
cltd
ret
stc
repnz
dec
fstpl
test
sbb
gs
cmp
mov
dec
lret
cmp
test
sbb
xchg
push
inc
lret
mov
mov
jecxz
pushf
pop
bound
and
sub
jbe
out
pop
imul
fwait
outsb
push
das
sub
lods
jp
sub
adc
nop
inc
cmc
rolb
movsl
je
mov
lock
mov
std
out
lds
push
out
fistps
sbb
ret
push
inc
divl
xchg
divl
push
mov
sbb
in
sub
imul
or
inc
std
adc
cmpsl
out
les
call
pop
imul
adc
insb
out
push
or
xchg
divl
xchg
test
jl
push
je
cli
jg
sbb
int
es
and
je
mov
sub
call
or
cwtl
adc
leave
in
repz
in
mov
sub
fidivrs
mov
sub
fistpl
jns
mov
mov
sbb
lret
imul
mov
pop
jp
test
xor
dec
int3
test
fists
testl
inc
lret
shr
outsl
dec
cmp
cli
test
xchg
dec
pop
std
enter
mov
jg
in
xor
jmp
inc
jmp
popf
dec
movsl
cmp
push
xor
push
push
xor
dec
sbb
repz
int
xor
lret
add
int
mov
mov
push
je
push
mov
test
mov
xor
testl
push
xorl
outsl
cmpsb
ficomps
es
pop
scas
dec
add
faddp
in
lea
or
imul
cmpsb
jmp
loope
mov
sti
pop
xor
pop
jg
outsl
js
repnz
mov
dec
int3
mov
cmp
inc
int
lahf
out
fistps
in
cld
fwait
jo
mov
mov
notb
ret
je
and
push
add
mov
jp
in
xchg
adc
subb
notl
mov
icebp
ret
cmpsl
mov
cmp
sub
popf
cli
jb
and
int3
hlt
out
and
adc
add
in
jecxz
dec
adc
cmp
push
pop
cmp
cmp
mov
mov
test
sub
fcoml
dec
cld
fistl
dec
mov
jbe
decb
out
leave
in
pop
cmp
sub
aas
xor
mov
sahf
fidivrs
adc
sbb
jbe
lahf
jp
lcall
test
int3
sub
pop
pusha
imulb
and
dec
push
lret
sub
or
add
pushf
sbb
inc
out
jle
mov
fcom
or
push
dec
popa
inc
xchg
ret
and
push
push
inc
das
scas
adc
movsb
sbbb
out
popf
aad
pop
addb
pop
test
out
sbb
pop
cmp
dec
sbb
xchg
stos
adcl
sub
fists
idivb
int
adc
xor
mov
aas
movsl
fucomp
movsl
or
cmpsb
xchg
scas
xchg
insb
std
cmp
sbb
hlt
adc
push
lods
mov
xor
add
fldt
adc
daa
push
outsl
sahf
sti
dec
divl
lahf
into
xchg
xchg
cli
fstpl
sahf
sahf
xchg
ret
pop
icebp
mov
mov
sub
inc
sbb
add
cmp
mov
push
pop
pop
push
lcall
pop
cmc
scas
movsb
scas
roll
lahf
enter
dec
iret
dec
jmp
inc
mov
movsl
mov
jns
add
pusha
out
aas
mov
aam
inc
push
repz
push
mov
int3
add
sbb
jbe
mov
mov
rcll
jns
aam
call
mov
bound
and
sub
sbb
test
mov
jmp
push
and
pusha
outsb
in
push
cltd
test
ss
mov
mov
add
push
or
cs
popa
jns
cbtw
call
dec
sub
lret
push
out
lea
sbb
xchg
add
mov
or
imul
call
fstpl
or
fidivl
mov
sbb
fnstcw
fstp
or
cmpsb
adc
fxch
jg
pop
popa
movsl
rclb
mov
negb
mov
int3
insl
imul
cmp
bound
fidivrl
pop
and
and
push
std
xlat
inc
push
fwait
jp
std
mov
ljmp
arpl
notb
es
stc
data16
ficomps
sarl
cltd
sahf
dec
call
push
lcall
pop
fisubl
jno
sbbl
push
outsl
loope
int
dec
subb
dec
je
lods
sbb
mov
lret
sbb
dec
jl
mov
push
pushf
arpl
inc
sbb
dec
xor
add
icebp
lret
cs
fisubrs
mul
or
fs
mov
loopne
xor
in
xchg
lea
pop
ljmp
nop
lods
pop
mov
or
pusha
mov
add
aas
mov
iret
pop
xchg
test
outsl
mov
pop
in
mov
jb
repz
adc
in
cli
mov
sbb
loopne
pop
rorl
inc
insb
jl
mov
mov
inc
stos
cvtps2pd
xchg
aad
aaa
mov
and
jge
call
sbb
lcall
cltd
ficoml
ret
cmc
rorl
movsl
cs
sub
jg
fldpi
stos
cltd
fwait
les
mov
aas
in
bnd
push
outsb
das
pushf
xchg
push
push
push
insl
pop
mov
cmpsl
in
iret
sub
mov
jmp
mov
das
mov
mov
dec
cmp
cmc
xchg
adc
sahf
ss
mov
ja
sub
stc
ja
dec
enter
push
push
outsl
or
bound
addb
popa
mov
mov
push
loope
shufps
xor
pop
jb
ds
push
gs
ds
fadds
fadds
and
xchg
cmpsb
nop
cs
inc
test
out
sar
in
mov
sbb
out
and
and
mov
mov
mov
icebp
add
jl
mov
lods
mov
packuswb
pop
negb
fstpt
jne
add
inc
fs
sbbb
pop
aas
xor
inc
mov
cwtl
or
inc
shl
push
sub
fst
push
repz
cmp
fdivrs
adc
dec
mov
sahf
dec
adc
in
ja
push
adc
push
je
mov
in
insb
lcall
cmp
or
lahf
out
sbb
imul
push
sarb
push
push
aaa
je
loopne
mov
das
bound
push
jecxz
aas
jg
adc
loope
imul
insb
mov
dec
int3
or
pusha
popf
aas
lret
cmpl
xchg
inc
out
fs
test
xor
xchg
mov
sahf
and
add
stos
test
xlat
mov
fldl2e
cwtl
jp
popa
xor
jae,pt
mov
call
divl
jg
xor
jnp
out
loop
jg
inc
dec
and
mov
lods
stos
in
add
repnz
test
out
lods
popa
call
ret
jp
mov
pop
sub
bound
in
addl
mov
ror
sub
ret
pop
push
xchg
adcl
lret
sbb
push
shrb
xchg
sbb
cmp
lods
fbld
and
sbb
cmp
sahf
and
or
cmp
test
inc
test
loop
icebp
xor
fcmovnb
fcomps
sbb
mov
jne
popf
gs
mov
xchg
and
cli
mov
repnz
or
rcrl
dec
repnz
fildl
aam
movsb
xor
sub
sbbb
je
mov
call
mov
push
jg
push
imul
sbb
int3
pop
inc
xchg
jecxz
jnp
inc
mov
out
pop
aas
jns
insl
cld
or
cmp
cmc
sbb
xor
push
adc
in
ja
push
gs
lods
xor
sub
push
jg
inc
in
fwait
or
push
and
jns
mov
addl
jae,pn
in
adc
out
cmp
popl
cmp
jb
adc
xchg
inc
ja
sarl
enter
icebp
pop
and
idivl
je
test
aaa
gs
mov
push
pop
jg
pop
divl
jnp
pop
push
push
fwait
push
mov
jg
adc
mov
cmp
dec
inc
cltd
mov
add
sbb
daa
jp
out
jnp
sub
xor
sub
pushf
push
nop
xchg
adc
xchg
pop
mov
out
dec
sub
pop
cmp
jns
lea
stos
or
out
call
sti
in
sbb
packssdw
push
movsl
imul
cmp
fsubrl
movsl
mov
ds
add
push
insb
imul
and
sti
mov
fs
sub
fprem
inc
sub
negb
or
cmp
ljmp
cmp
shlb
push
fsubrl
bound
ss
cmp
test
into
sbb
xchg
cmp
jge
cs
add
mov
or
loope
mov
add
inc
test
adc
ficoms
adc
mov
cmp
mov
xchg
fwait
adc
or
mov
dec
imul
call
inc
or
aaa
sbbb
mov
scas
sbb
jg
scas
jno
dec
xchg
or
xchg
scas
adc
add
xchg
jnp
mov
pop
add
sbb
adc
and
inc
mov
add
sub
adc
cmp
mov
pop
in
popf
cltd
xchg
or
jle
push
adc
inc
out
sub
loop
stos
repz
fnsave
mov
adc
cmp
jmp
ret
add
data16
push
or
pop
or
sub
rcrl
insl
cmp
xor
mov
fnstenv
pop
lret
iret
ficoms
mov
jle
fnstenv
jmp
sbb
mov
inc
pusha
push
mov
push
insb
in
and
enter
pop
cld
jbe
sub
pop
mov
push
movsb
lea
inc
lea
mov
mov
repnz
jns
pop
sub
out
and
sub
je
or
and
mov
push
push
jl
mov
cmp
das
xor
jb
pop
out
sbb
mov
push
inc
xlat
loop
dec
rorl
pop
push
mov
xchg
mov
mov
int
lods
jnp
loope,pt
xchg
mov
xor
push
or
pop
mov
sti
orb
inc
cmp
push
divb
dec
mov
mov
inc
push
pushf
dec
add
addb
add
mov
or
add
jle
mov
cmpl
cmpsl
sub
mov
pop
decb
dec
or
pop
xor
adcl
leave
or
xchg
icebp
aaa
mov
dec
std
jno
inc
xor
sbbl
mov
mov
nop
rclb
fcompl
sub
pop
pusha
ja
mov
outsl
sub
or
xchg
dec
in
shrl
stos
std
cmp
daa
push
and
push
or
mov
jecxz
pop
inc
cmpsb
addr16
clc
add
mov
lahf
push
pusha
cmp
jmp
orl
adc
out
xchg
add
mov
sub
cmp
les
lock
cwtl
adc
adc
gs
int
jge
in
loop
jecxz
int3
fwait
cmp
sbb
push
lock
aas
pop
cltd
dec
dec
mov
cmc
mov
sbb
mov
mov
mov
jl
or
mov
cli
fistps
xor
sub
lock
and
cmp
pop
jno
inc
inc
pop
out
cmc
sub
push
jecxz
pop
cld
stos
cli
hlt
jl
cmp
sub
mov
adc
out
pop
adc
imul
mov
push
test
sbb
rorb
adc
lret
adc
shlb
cmpsl
pushf
sbb
xlat
subl
push
pusha
nop
sub
int
pop
push
push
add
loop
fimuls
ljmp
dec
add
movsl
out
cld
lods
mov
dec
cwtl
jae
cmp
jb
rcll
out
xchg
fst
push
sbb
es
pop
fcoml
lods
lods
xor
shr
adc
mov
jno
inc
or
in
test
add
andl
call
mov
nop
xor
adc
imul
gs
pop
mov
xor
sti
lea
and
push
ret
adc
mov
or
addr16
scas
xchg
fbld
cmc
cmp
js
pop
sub
fstpl
dec
push
outsl
cmpsl
andl
mov
sti
repz
ds
jnp
arpl
pop
push
pop
in
hlt
out
imul
out
andl
xchg
xchg
stc
fwait
or
loope
addl
jae
xchg
test
cltd
push
push
or
lods
out
aad
loop
push
cmpb
pop
or
sbb
mov
mov
lock
adc
xor
bound
sub
into
out
fldenv
test
inc
or
and
cmp
sub
test
mov
xchg
rcr
jae
mov
xchg
inc
in
mov
addr16
repz
mov
decb
sub
cmp
cmpsl
mov
or
sbb
xor
in
or
repnz
into
pop
sbb
jb
jmp
push
jo
and
gs
stc
sbb
das
mov
repnz
fidivl
out
movd
mov
pop
in
sub
das
dec
mov
shlb
inc
notl
push
add
xor
xlat
add
loopne
jle
or
or
addr16
mov
sbb
call
xchg
je
rol
aaa
out
out
addb
and
mov
sbb
adc
mov
daa
jbe
lods
fiadds
in
lods
adc
inc
shr
imul
inc
cli
fcoml
xchg
nop
movups
mov
sbb
daa
rcl
daa
stc
fs
dec
mov
push
xchg
dec
adc
popa
add
aas
and
inc
or
lahf
push
push
sub
xchg
cmp
push
cs
loop
xor
test
aaa
iret
or
into
jecxz
test
mull
test
jge
adcl
enter
aas
fstps
push
sarb
dec
cld
sbb
pop
add
or
out
sub
js
jmp
hlt
addl
mov
push
xchg
lea
pushf
test
sub
mov
xlat
mov
notb
sbb
clc
jecxz
fnsave
xor
cmpps
mov
je
cmc
or
mov
scas
xchg
mov
das
loopne
sbb
scas
and
inc
out
lcall
adc
movsl
fisttpll
jnp
push
mov
sub
mov
push
mov
jnp
mov
xor
out
imull
cmp
js
and
jle
sbb
lods
mov
dec
lods
dec
pop
lret
arpl
loopne
sbb
subl
add
rcrl
mov
pop
dec
push
push
xchg
or
js
add
pop
ja
dec
mov
insb
mov
add
loopne
sbb
dec
xchg
arpl
call
shl
inc
nop
movsb
push
adc
sbb
xor
test
pop
insl
addr16
jno
mov
insl
out
mov
mov
adc
cmpsl
je
ret
add
xor
out
pop
inc
push
gs
xchg
or
imul
mov
jle
pushf
cmpb
jmp
and
into
xor
xor
sbb
mov
into
sahf
arpl
cmp
pop
inc
clc
nop
mov
and
fdivrl
xchg
fisubl
mov
in
mov
repz
xor
xchg
std
and
adc
nop
mov
lret
mov
test
test
jnp
popf
dec
arpl
std
mov
xor
push
fcmove
test
out
xlat
mov
clc
in
outsb
stos
outsl
jmp
pusha
mov
mov
mov
jbe
jge
jns
call
lock
push
lods
mov
repz
out
movsb
sub
xchg
jge
popa
pop
sub
or
fwait
mov
movsb
or
and
jns
jge
mov
pop
xchg
test
lea
adc
das
fst
mov
mov
aad
push
repnz
orb
ds
jae
test
lods
or
arpl
rorb
hlt
insl
js
mov
xlat
test
ficomps
mov
pop
stos
ja
jo
jne
pop
push
push
cmpsl
sub
subb
cmpsb
in
mov
std
test
and
lahf
int
jnp
aaa
adc
addb
movsb
ljmp
add
push
dec
lock
fiadds
inc
les
in
inc
jg
pop
cmp
adc
pop
and
or
movsb
ljmp
inc
out
mov
jo
dec
mov
sbb
xor
loopne
inc
adc
push
and
push
mov
aam
pop
in
mov
add
gs
ss
pop
push
sub
leave
xchg
mov
mov
mov
rcl
ret
mov
test
scas
jns
lds
aad
dec
xchg
shl
cli
sti
out
movsl
out
scas
mov
movsl
adc
cmpb
test
shl
jo
mov
mov
nop
xor
cmp
xchg
cmp
dec
in
mov
xchg
or
pause
xchg
xchg
fsts
adc
mov
popf
mov
stos
xor
cs
cmp
mov
stos
imul
hlt
or
sub
sub
cli
and
pop
pop
lock
adc
inc
jae
adc
movsl
mov
mov
insb
pop
mov
dec
inc
test
stos
xor
cmp
xlat
jl
pop
ja
testb
dec
setg
cwtl
jp
mov
in
sbbl
xor
jbe
shll
and
xchg
mov
sbbb
xor
ds
push
enter
and
and
inc
cmp
xchg
bound
add
jmp
or
xlat
sub
inc
xor
ja
pop
outsb
mov
adc
pop
push
push
sub
cmp
pusha
jp
sub
add
mov
cmc
icebp
pushf
xchg
xchg
xchg
jecxz
clc
sub
mov
std
shr
pop
rclb
js
pushw
lea
jg
pop
sbb
cmpsb
add
ljmp
clc
sub
xchg
cmpl
mov
cwtl
xchg
dec
xchg
negb
xchg
add
fcmovne
push
push
add
jnp
roll
inc
test
cmp
repz
jmp
lahf
in
lret
jb
add
call
jns
mov
xchg
shlb
in
pop
scas
cmp
clc
xor
cmp
adc
hlt
mov
xchg
cmp
insb
out
lock
adc
pop
loope
xchg
js
movsl
out
rorl
test
shll
bnd
xchg
xchg
pop
xor
ljmp
mov
lds
and
or
push
and
xchg
push
xchg
push
lcall
xlat
push
jmp
sbb
leave
test
hlt
int
add
rdtsc
mov
fs
jmp
mov
or
stc
fldenv
mov
xor
mov
lret
pushf
out
cmp
pop
mov
fiaddl
in
popa
push
add
adc
and
aam
mov
pop
cmc
stos
stc
in
push
pop
lahf
in
in
sbbb
jns,pn
xor
jecxz
hlt
jb
pop
inc
pop
xor
add
icebp
adc
mov
ds
mov
gs
repz
adc
add
jg
mov
push
jne
and
xor
sbb
clc
mov
xlat
lcall
arpl
movsl
pop
into
xchg
jmp
scas
lock
rorl
xchg
push
and
and
insb
jmp
pop
pushf
pop
cmp
or
dec
inc
lds
pop
adc
lcall
mov
inc
dec
repz
and
xchg
xchg
hlt
mov
xchg
dec
adc
js
lea
pushf
or
sbb
divb
dec
mov
mov
mov
cltd
or
pop
adc
lds
mov
sbb
repz
xchg
inc
mov
rcrb
test
lahf
fnstenv
mov
dec
les
js
or
mov
rcrl
sub
push
ret
jge
mov
xchg
or
xor
lea
mov
and
or
cwtl
sub
lcall
pop
xchg
inc
or
or
dec
xchg
orb
cmc
rcrb
xor
push
pop
fwait
dec
popf
jne
aas
lahf
sub
leave
push
and
sbb
mov
into
jge
lock
mov
jbe
jmp
lahf
dec
test
in
int3
es
inc
mov
fwait
mov
imul
jmp
movsb
jne
test
imull
inc
dec
push
pop
push
jno
sub
lret
add
sbb
nop
cmp
fistpl
imul
ss
mov
cs
add
add
iret
and
push
pop
cmpsl
or
adc
inc
gs
gs
cmp
jo
mov
int
popl
loope
xor
test
xorb
aad
call
imulb
ja
xor
dec
ja
in
cmp
out
jno
in
xor
pop
sub
cwtl
mov
cltd
add
or
movsl
insb
and
shl
inc
clc
cld
testl
sub
mov
gs
push
cmp
out
add
cmpsb
xchg
cmp
movsl
fmul
insl
sbb
cmp
adc
es
nop
aad
xchg
pop
scas
cmpsb
adc
lahf
or
jb
js
inc
popf
sbb
jmp
mov
in
sahf
aaa
push
cwtl
mov
push
xchg
leave
pop
popf
pop
sbb
shl
adc
pop
test
push
sbb
xchg
lds
jns
add
lret
pop
jbe
mov
imulb
dec
test
xchg
sub
test
clc
mov
lods
dec
mov
addr16
nop
popa
adc
imul
adc
shlb
or
in
adc
push
rorb
inc
and
cmpsl
sbb
mov
aam
loope
les
imul
jb
add
and
inc
negb
nop
ror
and
xor
das
hlt
mov
scas
mov
dec
out
leave
mov
daa
daa
daa
gs
and
pusha
fisubl
jle
mov
movsl
sti
mov
dec
fsubrl
in
xor
clc
das
sti
jge
inc
scas
clc
outsb
scas
adc
add
mov
cmpsb
push
jno
test
stc
cmp
jmp
subl
lea
pop
fisttps
and
mul
jb
push
cmpsl
popf
lret
push
or
add
cltd
pop
add
push
pushf
adc
pop
fildl
mov
cmp
jbe
arpl
mov
add
mov
inc
sarb
aas
lahf
jge
dec
aad
xchg
pop
ret
testl
sub
push
mov
mov
std
sub
cmp
dec
inc
cmp
stos
ljmp
cmc
mov
mov
xor
in
lret
dec
add
stos
pop
out
test
jbe
xchg
xchg
fcoms
repz
inc
out
mov
cmc
call
scas
inc
frstor
stos
mov
mov
test
push
fnsave
and
pop
scas
pop
insl
jle
dec
lret
mov
out
movsl
dec
inc
cltd
mov
lcall
ds
sbb
cli
in
pop
repnz
adc
int3
fs
pop
fadd
dec
mov
xor
dec
pop
add
xlat
call
popa
and
ljmp
ja
cmp
sbb
mov
rcr
xchg
push
pop
jecxz
aas
cmp
pop
dec
inc
hlt
arpl
aas
mov
mov
inc
xchg
xchg
mov
ljmp
jb
iret
fisubs
cmp
adc
pop
dec
inc
mov
cmc
sti
fldcw
sbb
jle
inc
jmp
inc
clc
dec
rolb
insl
repnz
outsl
es
push
jne
and
pop
and
xchg
ljmp
scas
ret
jne
loope
ljmp
jae
inc
andl
out
cmp
int
or
mov
push
add
getsec
xor
in
dec
sbb
dec
dec
xor
jp
sub
idivb
and
lea
mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
jl
sbb
cmp
xlat
lock
xchg
call
cli
sahf
lret
mov
sahf
adc
xchg
fnstenv
pop
stos
arpl
sbb
lret
in
jbe
adc
adc
lods
sbbb
mov
cmp
adc
xchg
mov
xchg
sub
inc
aam
mov
divl
push
inc
outsl
jae
inc
pop
xchg
mov
stc
lods
mov
dec
push
mov
ja
pop
push
sub
inc
jno
adc
pop
push
xchg
xlat
aad
sahf
push
or
or
xor
xchg
xchg
and
sbb
jl
lock
aad
inc
push
shll
xor
jg
dec
lret
mov
scas
cwtl
push
inc
daa
test
adc
repz
mov
stc
out
fprem1
stos
scas
xchg
jbe
rolb
ret
lods
subl
in
or
and
inc
loopne
popf
mov
push
push
sub
mov
push
mov
mov
xorl
xlat
fimull
cmc
enter
jle
fsubl
inc
pop
cmc
xor
fstpt
cld
les
stos
xchg
pop
outsb
jno
mov
mov
outsb
xlat
sub
nop
push
add
mov
jnp
add
in
ds
in
xor
xor
int
movsb
insl
xor
imul
push
mov
cwtl
dec
ficompl
cwtl
mov
inc
data16
add
jge
xchg
pop
mov
imul
dec
cmpsb
dec
dec
or
in
mov
add
add
mov
imul
xor
rorb
inc
xor
imul
les
imul
sub
fisubs
cmp
xchg
mov
lahf
aas
enter
sub
fcomi
cmp
movsb
pop
inc
jmp
xlat
cmp
fisttpll
pop
inc
and
insb
sub
clc
ljmp
out
adc
iret
in
cmpsb
sub
add
xlat
aad
cmp
insb
jg
xchg
ja
sbb
bound
dec
mov
arpl
xchg
fs
andl
jns
mov
mov
pop
mov
and
xchg
mov
cmpsb
hlt
push
sbb
gs
je
into
or
jge
or
daa
ret
jp
dec
shlb
rolb
inc
xor
pop
insl
out
mov
loope
adc
addb
mov
mov
test
jnp
push
setbe
mov
add
pop
pop
inc
adc
push
sub
push
pusha
repz
mov
cmp
push
in
add
cld
sub
mov
mov
dec
pop
hlt
adc
push
pusha
sti
or
mov
popf
sub
jns
in
lret
push
stos
leave
sbbb
inc
cld
test
adc
inc
or
fadd
data16
in
cmp
sub
mov
lods
movsb
xchg
mov
dec
pop
xor
iret
ss
push
icebp
out
scas
jno
sub
pop
insl
sub
xor
sub
stos
mov
into
dec
adc
pop
stos
insb
and
fucomi
aad
insb
dec
lea
inc
dec
inc
repnz
add
loopne
sti
filds
sarl
mov
jno
out
sbb
mov
pop
add
mov
negl
push
adc
sti
in
scas
cmp
mov
pushl
leave
aaa
hlt
mov
imul
inc
scas
rclb
ret
scas
sub
push
pop
clc
jne
jb
ss
push
movsb
mov
stc
ja
popf
fwait
stos
jmp
mov
out
cmp
jb
mov
sub
test
dec
add
dec
jbe
fwait
rcrl
xacquire
xlat
mov
adc
cmpb
add
lcall
sbb
jns
jmp
xchg
outsb
dec
imul
xchg
mov
jp
addl
mov
mov
push
mov
pop
sarl
js
test
gs
jle
mov
call
mov
insb
jno
fstpl
add
sahf
call
lods
push
jae
lret
call
xchg
fwait
sbb
mov
fmuls
pop
adc
das
in
in
jb
lea
or
mov
int3
and
sbb
inc
sbb
pop
out
cs
cmp
lret
sahf
push
pop
add
sti
rclb
xchg
and
xchg
in
jae
rclb
test
inc
push
push
bndldx
mov
push
fidivl
jge
add
inc
sbb
leavew
out
mull
xor
pop
cmp
in
ss
ret
aam
insl
out
dec
xchg
mov
adc
jne
fcmovbe
mov
sarb
int
mov
dec
das
fwait
into
pop
fidivl
pop
stos
out
xchg
sub
push
jns
data16
movsl
dec
sbb
aam
sarl
jmp
lcall
jbe
mov
nop
mov
mov
outsb
arpl
and
cltd
cmpsb
jno
jge
into
hlt
bts
and
push
fisubrl
insb
ljmp
add
xor
xlat
lret
push
sub
add
jmp
cmp
pop
xchg
xlat
or
cld
shll
scas
push
divb
and
sub
mov
pop
pop
fldcw
mov
cmpsb
mov
sub
stos
outsl
jmp
push
ljmp
lods
and
pop
ret
shrb
das
ja
cmpsl
fisttps
inc
jp
lea
jno
fiadds
sbb
arpl
push
inc
daa
cmpsb
or
push
cli
add
pop
adc
or
test
mov
pop
jecxz
mov
arpl
mov
out
dec
xchg
jmp
mov
dec
cmp
inc
xor
les
push
ret
and
inc
mov
data16
jnp
mov
inc
mov
orl
aad
inc
arpl
adc
shr
push
insl
and
push
shrb
jle
xchg
cmp
inc
lret
mov
jns
gs
imul
cli
xchg
xor
mov
dec
inc
into
jge
add
testl
ret
nop
and
jg
add
rolb
sub
mov
call
out
call
ljmp
icebp
test
pop
jno
addr16
stc
shlb
jo
or
fists
mov
lods
jmp
fwait
jbe
out
nop
test
mov
hlt
mov
rol
pop
gs
inc
sahf
lods
mov
pop
fidivl
and
cmp
mov
inc
in
dec
cltd
push
xchg
rol
cmp
rorb
and
stos
into
push
lds
dec
in
xchg
mov
adc
cmp
shrl
out
imul
inc
pop
adc
and
clc
aam
rorl
aad
xchg
je
mov
or
cmc
daa
test
cmp
iret
in
icebp
pop
addr16
rcrl
mov
pop
imul
add
pop
stos
popf
xchg
and
daa
mov
xchg
mov
hlt
jg
into
movsl
xchg
mov
sbb
mov
les
cwtl
adc
in
push
jb
sub
lret
sub
cmp
lods
fwait
movsb
jo
lea
inc
sub
fstps
ds
push
sbb
outsb
cmp
out
pop
sub
mov
inc
or
popa
add
jl
jecxz
or
and
pushf
mov
mov
jne
add
popf
jl
insb
jae
cld
in
push
pop
and
jo
insl
lcall
pop
clc
push
or
pop
mov
movsb
out
inc
arpl
popf
push
push
push
imul
push
xor
imul
sub
lds
and
repnz
xchg
repnz
popf
scas
sbb
add
mov
lret
xchg
sbb
ljmp
cmpsb
xchg
xchg
sbb
outsl
insl
fiaddl
ja
xchg
add
xor
pop
shl
repz
jbe
lret
mov
sti
push
fisubrs
jbe
inc
in
ss
in
xlat
add
push
sub
add
sbb
out
movb
inc
cmp
sbb
xchg
cli
mov
or
movsb
push
pop
movsl
sbb
push
or
dec
mov
adc
and
and
sub
ret
ja
cmpsb
leave
ret
cmp
in
dec
dec
rolb
mov
notb
in
mov
nop
mov
movsl
pop
and
push
push
fdivrl
or
push
mov
je
pop
and
sbb
pop
adc
test
pop
notl
loope
xor
scas
mov
pop
clc
sbb
xchg
mov
add
pop
sahf
mov
repnz
cmp
jb
sarb
ret
inc
imul
dec
mov
ljmp
addr16
and
cs
inc
dec
inc
fildl
xor
in
mov
adc
mov
dec
mov
sbb
repz
notl
push
out
sbb
mov
mov
sbb
es
aam
lock
aam
xchg
xor
ret
sub
sbbl
cmp
jmp
clc
xor
ret
imul
test
ja
fildl
mov
jp
pop
dec
outsl
aad
sub
int3
cli
test
mov
roll
pop
stos
iret
pop
sbb
mov
push
addr16
mov
dec
or
dec
andb
and
mov
xor
popa
mov
out
addr16
jge
insb
add
orl
pop
pop
pop
or
imul
jbe
outsb
xchg
xor
adc
jl
dec
mov
dec
xor
int
adc
jns
mov
fbld
js
pushl
cmp
idivb
mov
jae
xor
push
icebp
xchg
rclb
pop
aam
mov
dec
je
mov
jecxz
cmp
shll
xor
xor
addr16
test
leave
lea
mov
shl
adc
fildl
in
push
iret
into
rolb
xchg
test
sub
in
jp
dec
push
vmread
jp
rcll
and
sbb
sbb
enter
xor
in
hlt
lds
add
sub
loopne
sub
aas
sub
xor
jbe
cmpsl
dec
pop
outsl
cmp
shrb
shl
xchg
imul
je
jnp
sahf
popa
jbe
jg
push
incl
sbb
cmp
mov
mov
push
sbb
es
add
movsb
add
jmp
push
adc
lcall
orl
dec
mov
lods
out
test
outsb
jns
arpl
mov
xor
ss
in
lds
jle
les
xchg
adc
sub
std
jbe
ss
adc
fisttps
mov
adc
fnsave
arpl
test
jmp
data16
xchg
mov
jo
mov
xor
imul
push
loop
push
ficoml
cmp
cmp
js
xchg
sbb
addl
inc
dec
pop
push
dec
xor
sbb
in
enter
mov
jno
inc
dec
test
movsb
out
insb
jbe
std
mov
mov
jp
fldt
push
sahf
sub
jl
mov
sahf
mov
fnsave
sti
aad
mov
clc
inc
inc
fdiv
nop
add
lahf
xchg
dec
mov
mov
mov
mov
cmc
out
sub
jg
fdivrl
shrl
sbb
je
jae
loop
pop
jecxz
cmp
outsb
sbb
ja
push
fneni(8087
mov
idiv
subb
stc
pop
or
fnstsw
xlat
repz
add
mov
xor
into
pop
dec
add
iret
cli
mov
add
fsubs
or
lret
ja
push
jp
out
hlt
mov
test
aas
dec
adc
outsl
iret
mov
in
pop
scas
push
cmp
lock
mov
lret
stc
or
gs
insl
shlb
or
mov
and
jecxz
outsl
out
jecxz
xor
jg
dec
or
lds
call
mov
stos
cmc
mov
fwait
adc
mov
inc
sub
sbb
dec
jno
imul
pop
push
xchg
cli
add
enter
out
leave
mov
mov
pop
iret
mov
mov
sub
arpl
fnstcw
mov
aas
into
fsubrl
pop
hlt
pop
jno
popa
cmpsb
test
out
mov
loope
clc
cmp
lock
or
push
or
sarb
test
stos
dec
shlb
dec
sub
push
bound
mov
push
pushf
inc
test
dec
mov
stos
int3
or
outsw
sub
test
add
cs
iret
add
xor
sub
addl
jp
add
hlt
roll
xchg
mov
mov
pusha
aaa
dec
mov
mov
mov
pop
cmp
in
lahf
push
dec
fldenv
test
push
jg
imul
jl
ja
xor
shlb
or
jp
cmc
or
sub
sbb
jae
cli
incl
lret
pop
mov
mov
dec
xor
negl
mov
outsb
jge
mov
dec
fisttpl
cld
lea
in
xchg
pop
sbb
fadds
cmp
rclb
jmp
lcall
sbb
add
idiv
lahf
outsb
mov
add
cmc
push
jg
data16
xchg
lret
pop
test
stc
pop
mov
inc
pop
sbb
jle
and
std
scas
cltd
movsb
out
cld
out
inc
inc
push
pushf
repz
lock
data16
mov
arpl
les
and
scas
jl
cmpsl
cmpsb
lret
cld
fdivr
jp
push
push
or
pop
jnp
pop
sar
dec
and
or
cmp
xchg
es
mov
xor
mov
add
js
xor
lds
dec
test
jb
aam
orl
lds
adc
test
sbb
pop
cmc
mov
and
fidivl
scas
jl
mov
test
dec
test
outsb
bound
daa
pop
jp
mov
cmp
ret
mov
pop
hlt
pop
adc
push
insb
cmp
cs
pop
mov
dec
inc
mov
and
lods
out
jns
mov
insl
mov
pop
inc
fneni(8087
adc
incb
jmp
push
inc
ljmp
hlt
adc
and
lcall
jnp
inc
jnp
cmp
pop
push
in
mov
adcl
sub
dec
push
lcall
ret
psubsw
aam
sbb
mov
push
pop
popl
sbb
add
rcrl
pop
sbb
gs
mov
mov
ret
sbb
imul
js
out
fidivrl
leave
lret
enter
leave
mov
fyl2x
pusha
push
xchg
rorl
adc
push
insb
jae
cmpsl
dec
adc
call
mulb
or
lds
inc
and
lret
and
lret
hlt
and
nop
dec
adc
pop
and
pop
jecxz
es
test
pop
sahf
mov
mov
imul
inc
inc
inc
filds
cmc
cmp
icebp
inc
ds
mov
jno
dec
sub
xchg
test
scas
pop
pop
jle
push
cmp
test
inc
xchg
test
adc
push
ja
das
aad
and
jl
xor
and
add
loop
ljmp
sahf
jmp
stos
mov
dec
cmp
das
adc
ljmp
imul
xchg
xor
js
jno
outsb
stos
paddq
jecxz
or
jl
pop
hlt
ja
jl
das
sub
cwtl
or
sbb
jo
jns
imul
movsb
ret
jmp
test
jecxz
fimull
or
int
jbe
dec
fimuls
sub
jno
repnz
push
inc
in
inc
xchg
daa
je
push
jge
cmpsl
inc
sahf
inc
xlat
inc
fcoms
jecxz
loope
cltd
inc
and
ss
sub
jp
shll
sbb
sbb
pop
sbb
lods
jo
dec
notl
fucomip
push
mov
pminsw
pop
xbegin
mov
movl
das
mov
mov
add
and
das
fwait
popa
hlt
ret
addb
cwtl
je
mov
xlat
cmp
lret
xchg
xchg
enter
push
orb
sti
stos
mov
aas
ds
add
sub
xchg
sbb
outsl
test
mov
lret
pop
fstps
lock
add
daa
dec
ja
jl
push
in
lods
cmpsl
test
bound
jle
fnstcw
cmp
inc
fs
add
inc
xor
in
in
mov
jl
jne
push
test
push
mov
je
xor
stos
adc
add
cs
or
push
sysenter
shl
push
pop
fcoml
sahf
pop
subb
ds
mov
jne
sub
sbb
adc
ljmp
in
add
scas
aas
loopne
aad
xchg
push
out
subl
jp
pop
inc
in
mov
sub
push
cmp
push
in
push
repnz
xchg
loope
cli
mov
mov
or
sub
inc
in
push
or
xchg
inc
jg
mov
loopne
ljmp
pushf
pop
or
je
fstpt
insl
std
hlt
mov
stos
jg
sbb
paddsw
int3
xchg
adc
or
lods
repz
mov
mov
inc
pop
mov
aad
call
inc
jecxz
sub
xchg
mov
mov
in
scas
push
jecxz
bound
jno
sbb
xlat
stos
jle
cmp
sub
jg
mov
lahf
inc
inc
adc
decb
xor
in
add
pop
test
mov
sbb
mov
or
cmp
scas
mov
add
xor
inc
push
rcr
inc
mov
stos
add
fistpl
sbb
shll
sub
fs
hlt
iret
mov
cld
cmp
cs
push
lret
and
dec
dec
aaa
jns
movsl
push
shl
arpl
xor
movsb
rorl
inc
cmp
push
outsl
xor
xchg
fistl
cvtdq2ps
test
mov
imul
es
out
jne
mov
adc
cmc
push
fidivs
push
jmp
sahf
test
add
js
imul
fcompl
fiadds
out
xor
or
push
mov
mov
sarl
dec
mov
repnz
mov
push
adc
sbb
jne
faddl
cmp
cmp
insb
push
push
jmp
das
fsub
mov
popf
xchg
in
test
ss
jb
mov
js
cmp
push
mov
shrl
dec
outsl
leave
xchg
setns
mov
mov
cwtl
fnstenv
int3
das
pop
loopne
aas
in
loop
sub
add
cmc
push
and
push
xor
popa
pop
pushf
and
cmp
xlat
xchg
out
andb
leave
mov
mov
test
lret
pop
repnz
cwtl
fs
mov
sbb
xlat
jg
iret
jo
pop
rcll
add
jns
dec
adc
int3
xor
add
popa
xor
fists
sub
sahf
mov
bound
mov
jl
call
add
int3
sahf
dec
loop
xchg
mov
pop
push
in
mov
push
mov
mov
aas
mov
and
mov
xchg
xchg
sbb
enter
pusha
int3
mov
mov
jo
fistpll
xchg
dec
mov
pop
imul
add
lods
inc
jmp
adc
xor
inc
xchg
and
mov
popa
jmp
test
push
in
push
ret
or
stos
adc
or
pop
pop
test
inc
fimull
pop
sub
outsb
stc
in
in
xchg
adc
mov
lret
mov
inc
xlat
lcall
xlat
mov
les
mov
enter
xor
jg
idivl
stos
fcomip
cltd
mov
mov
loop
popf
push
in
rcr
add
pop
dec
and
lahf
add
mov
testb
rcrb
andb
in
pop
push
xor
lret
push
enter
aad
add
inc
add
jp
mov
out
bound
mov
jg
arpl
fisttpll
aam
xchg
add
inc
pop
in
add
add
ret
and
adc
lahf
push
dec
imul
movsl
popf
inc
mov
mov
ja
mov
xchg
pusha
movsl
shrb
xor
jne
fucomp
mov
iret
mov
mov
shr
loop
scas
aaa
jl
mov
lods
fsqrt
aaa
movsb
add
clc
dec
imul
mov
jbe
mov
xor
loopne
adc
jp
cld
daa
aas
and
mov
scas
cld
push
xor
mov
pop
push
popa
push
push
movsl
sbb
mov
pop
mov
pop
int3
fidivl
scas
jno
xchg
in
lcall
xchg
daa
cwtl
pop
lods
cs
mov
es
dec
jns
mov
gs
into
test
xchg
clc
jecxz
mov
add
int3
push
mov
outsb
popa
insl
cwtl
push
test
mov
push
jmp
push
sbb
mov
cmpsb
dec
jno
jns
mov
dec
or
scas
and
in
fcompl
xchg
or
sub
sub
filds
cmp
icebp
jae
dec
xchg
psrld
sub
xorl
adc
popa
mov
inc
pop
rclb
out
mov
and
pop
or
adc
divb
mov
or
btc
cmc
mov
imul
inc
or
push
mov
push
in
mov
mov
enter
jns
lret
mov
pop
xor
lahf
or
add
movsl
mov
jge
pop
push
xchg
arpl
push
out
cs
lods
in
nop
iret
scas
ds
jo
lea
and
xchg
mov
loope
mov
mov
pushw
pop
leave
dec
fs
ret
dec
cmp
jo
pop
pop
mov
popa
jmp
push
mov
lods
xchg
cmc
pushl
cwtl
mov
cmp
std
jno
pop
mov
xchg
jl
je
dec
push
mov
or
sbb
pusha
shl
iret
sub
mov
pop
jmp
rol
stc
sti
jecxz
jbe
popa
inc
mov
enter
pop
test
sbb
leave
mov
dec
repnz
dec
icebp
adc
outsb
inc
and
mov
ss
lahf
adc
mov
mov
mov
in
cs
stc
or
mov
loopne
sbb
iret
lret
std
pop
cmpb
shlb
cmp
out
jmp
add
cwtl
into
daa
mov
pop
scas
push
mov
mull
adc
ljmp
sub
mov
mov
cmpb
dec
or
jnp
sub
mov
lret
mov
and
jb
ret
aad
sub
aaa
adc
insb
sbb
stos
jg
cmpsb
jno
cmp
loop
jp
dec
clc
lea
lret
inc
std
fsubs
aas
fs
push
scas
fcmovne
daa
test
adc
xchg
adc
xchg
sub
mov
xor
pop
jl
xor
leave
out
popf
dec
sbb
mov
and
xor
shrl
or
push
dec
inc
rcrl
cmp
or
leave
pop
cli
popf
das
jb
bound
cmp
cmp
lret
push
mov
jp
out
or
sahf
mov
cmp
inc
jno
shrb
cmp
inc
xlat
sbb
stos
clc
dec
pop
je
mov
xchg
cmpsl
test
shll
lret
mov
sbb
mov
icebp
dec
dec
mov
jg
xchg
pusha
aam
pop
fwait
dec
sbb
les
adc
ficoms
stos
adc
aam
fbstp
bound
inc
cmpl
ja
cmp
test
call
aad
inc
xor
insb
xor
push
cmpsl
xor
lds
push
xor
inc
pop
cmc
xchg
jecxz
popa
cmp
test
iret
mov
into
mov
xchg
sub
pop
jo
mov
ss
pop
stos
xor
add
jae
daa
testb
pop
mov
mov
mov
add
out
rclb
sub
repnz
adc
jb
jnp
inc
push
pop
rcrl
mov
lea
insl
sbb
mov
lret
dec
xlat
push
push
dec
add
outsb
bswap
mov
hlt
les
dec
mov
pusha
or
fisttpl
xchg
dec
push
repnz
and
jp
dec
push
and
cmpsb
fidivrs
sub
cmp
incl
insl
cmp
cmpsb
jns
jnp
icebp
loop
adc
mov
repnz
push
mov
mov
dec
pop
jno
jns
pushf
sahf
dec
jmp
je
lcall
negl
mov
mov
push
adc
enter
stos
repnz
sbb
dec
adc
push
sbb
sbb
jge
jle
fsubrl
xchg
push
lret
mov
outsl
and
dec
rolb
jns
inc
ret
inc
sbb
enter
sbb
dec
out
aam
cmp
jno
push
subb
shrl
xorl
pop
movsl
cmp
outsb
pop
loope
mov
out
sbb
xchg
xor
and
sub
fstps
cltd
bound
ret
cld
inc
addr16
ret
xchg
jns
les
int3
daa
inc
in
sub
jg
sub
jle
fdivs
pop
jb
xchg
int3
pop
stc
and
in
imul
add
add
adc
pop
jg
dec
je
dec
sbb
xor
lcall
test
mov
lcall
inc
xchg
inc
inc
mov
push
shrb
lcall
mov
xchg
pop
xor
fsubs
call
cmpb
test
mov
xchg
inc
aad
sahf
xchg
movsl
add
ds
cvttps2pi
aad
push
adc
insl
cmp
insb
pop
mov
sbb
push
shl
addl
sub
test
ss
cmpsb
mov
loopne
mov
cmpb
or
repz
jge
repnz
call
jb
add
mov
cmp
stos
cmp
cs
lds
adc
es
jo
es
jmp
push
or
aam
push
pop
frstor
sub
fs
lds
pop
xchg
aaa
sub
adc
inc
mov
dec
mov
dec
gs
lock
out
enter
xor
adc
adc
pop
cmp
in
pop
sbb
cmp
push
cmp
push
mov
add
scas
dec
loope
test
xchg
sbb
nop
out
inc
xchg
pop
push
jl
and
mov
pop
add
xor
jle
pop
cmpsl
es
mov
mov
lret
aas
pop
xchg
push
leave
dec
fwait
call
mull
jns
jne
or
xchg
lret
mov
jl
in
in
push
push
push
inc
cmp
loope
dec
outsb
inc
mov
mov
sbb
push
sub
imul
lret
fstpl
jg
imul
imul
mov
in
cwtl
aam
pop
mov
rorb
sti
aad
setae
call
in
js
dec
jmp
push
push
into
mov
fsubr
inc
mov
lods
dec
outsl
cmp
mov
mov
mov
and
cmp
ret
mov
in
or
push
inc
loop
inc
cwtl
mov
jo
pop
into
push
cmpsl
test
pop
push
push
xchg
cs
adc
int
pusha
icebp
stc
inc
sub
xchg
int3
cmpl
mov
lea
sub
data16
xchg
in
dec
push
jp
aam
xorb
mov
xchg
movsl
icebp
test
jns
outsl
mov
cmp
jmp
cmp
xchg
ret
add
popa
popf
cmp
xor
mov
jg
cltd
sbb
clc
aaa
jle
int3
lds
inc
xor
jg
leave
out
ljmp
xchg
pushf
mov
je
cmp
jo
aaa
scas
or
ret
je
push
imul
mov
or
pop
xchg
pop
pop
mov
inc
pop
call
rolb
dec
add
fsubl
push
fistl
mov
fdivr
jg
jo
ret
push
sub
add
addr16
stc
sahf
fs
pop
loope
cmc
inc
inc
inc
sub
cmpsb
pop
or
push
cmpsb
movsl
jbe
mov
adc
pop
adc
stos
dec
or
cmc
shlb
adc
mov
lods
jg
outsl
repz
lea
cmp
inc
push
mov
out
sub
or
ja
stos
cmpsl
mov
mov
iret
fwait
jne
roll
xchg
imul
and
jne
aas
out
xor
dec
addr16
or
movsb
scas
mov
pushf
mov
movsb
aaa
xlat
dec
cmp
pushf
push
cmp
pop
stc
dec
pop
in
test
cli
sub
lcall
inc
stos
xchg
movsl
xchg
mov
clc
fsubl
xchg
bound
pop
mov
and
iret
and
inc
pop
push
mov
jecxz
pop
dec
add
int
es
and
cmp
rclb
push
js
cld
rclb
gs
ss
rclb
jmp
push
stos
dec
test
xor
xchg
lock
ja
xchg
outsl
int
ja
xchg
add
add
sti
sbb
add
cli
clc
or
fiadds
or
add
nop
ret
test
xchg
pop
pop
imul
cmp
mov
cld
adc
popf
rorl
cmp
sahf
in
sarb
enter
jne
addb
movsl
jns
jmp
test
cmp
mov
dec
mov
ret
scas
fisubs
sub
fwait
clc
xor
sarb
dec
add
daa
pop
pop
scas
xchg
mov
push
and
bt
sub
mov
cmp
cltd
daa
mov
adc
or
sub
cmp
hlt
ret
xchg
shll
pop
into
add
jnp
push
cmpsl
js
scas
dec
add
test
jno
lock
dec
dec
fimull
imul
addr16
cli
insl
lock
insb
and
das
sub
mov
in
mov
leave
cmpl
les
pushf
add
sti
or
lods
cmp
dec
dec
popl
and
lret
xchg
sbb
push
jbe
out
aas
pushw
subb
push
inc
or
jb
jmp
jmp
pop
mov
in
jle
mov
push
jmp
cmp
jbe
mov
ljmp
lds
push
fst
test
push
pushf
sub
pop
mov
bound
mov
aaa
xchg
rorl
fistl
rcrl
cli
jle
push
fnstsw
dec
les
iret
push
into
xor
or
lret
js
add
jnp
and
xorb
ret
in
pop
inc
push
cmpsl
int3
andl
add
add
mov
jbe
mov
or
cmc
jl
lds
ds
xchg
jl
dec
xchg
mov
pop
mov
xor
adc
test
lret
sub
clc
and
daa
push
mov
and
add
push
sub
add
or
push
enter
or
sub
int3
iret
lret
xchg
std
inc
es
cs
adc
out
push
jp
and
lea
clc
cmpsb
xchg
xor
movsb
outsb
cmp
aaa
sbb
jecxz
inc
sahf
int
pusha
mov
jle
stc
popf
and
mov
aad
cmc
sarb
outsl
and
push
dec
pop
pop
adc
or
push
shrl
push
loop
in
jmp
sub
inc
pop
aad
sbb
popf
es
mov
lea
pop
notb
add
cmc
shll
test
push
js
addr16
add
movsb
jbe
cmp
and
and
and
es
sbb
push
out
cmpsb
movsb
inc
cmp
ja
pop
jae
pop
stos
mov
dec
pop
cwtl
dec
push
movsl
bound
je
loop
cmp
push
dec
cli
pop
push
adc
inc
add
mov
mov
add
sbbb
cmp
cmp
cwtl
pusha
test
cld
cs
mov
mov
sbbb
add
and
pusha
sbb
push
imul
out
add
lea
xchg
out
and
lret
mov
push
jb
ret
add
cmp
pop
ja
sbb
xor
or
xchg
mov
inc
pusha
pop
jno
shlb
addr16
mov
stos
adc
test
aam
mov
in
xor
bound
repz
fcmovnu
push
jp
mov
std
push
and
xchg
icebp
xorl
test
xchg
mov
fldl
cmpsl
js
and
mov
out
jb
push
xchg
pop
dec
sub
jbe
sbb
lcall
pop
inc
in
andl
mov
push
jle
pop
in
push
sahf
cld
arpl
pop
test
lods
xchg
xchg
sbb
ret
xor
movsl
gs
jnp
sub
push
aam
or
in
jno,pt
andl
std
cmpsl
sarb
sti
dec
jg
in
xchg
addr16
inc
mov
stc
or
push
fiaddl
inc
rolb
ss
xor
mov
xchg
adc
and
bound
mov
jle
imul
pop
test
xorl
pusha
and
sub
das
in
out
inc
jo
sarb
xor
xchg
daa
fs
pop
sub
sbb
add
mov
add
inc
cmp
pop
sti
mov
xor
xchg
shlb
mov
ljmp
inc
push
mov
aaa
jg
cld
out
cld
xor
inc
insb
sbb
dec
adc
xor
ffree
adc
mov
inc
insl
xor
mov
mov
dec
in
xlat
mov
sub
pop
imul
cmp
addl
push
int
jnp
and
mov
jg
jmp
jns
cmp
test
shrb
cmpsl
add
cmpsb
cmp
push
add
xor
in
sahf
movsl
cltd
jnp
inc
repz
add
sub
in
fidivrs
sbb
jp
in
fs
mul
mov
aad
pop
fmuls
mov
sbb
sbb
fwait
into
rcrl
lds
hlt
sti
sbb
pop
or
mov
dec
std
mov
out
jmp
je
insl
cld
nop
or
mov
in
push
cwtl
dec
jl
xlat
cmc
xor
bound
mov
jp
xchg
add
pop
fmulp
clc
adc
std
mov
mov
cmpsl
and
loopw
inc
aaa
inc
xchg
jecxz
in
lahf
pop
and
mov
int3
mov
fnstenv
push
adcl
popa
jno
pop
neg
jns
and
js
sub
mov
xchg
cmp
data16
in
jbe
sahf
cld
sti
ljmp
imul
lea
mov
loop
fstpt
lahf
stos
pop
pop
jge
subb
les
jge
mov
pop
or
enter
jo
pop
dec
inc
pop
pusha
adc
xor
xchg
adc
cld
inc
adc
lcall
xor
sti
push
sbb
das
call
sub
mov
xchg
sbb
fistl
dec
sti
arpl
xchg
sub
cmp
xchg
dec
push
or
lret
push
mov
dec
js
mov
test
mov
mov
test
mov
aam
out
mov
mov
adc
mov
mov
pop
cmp
hlt
sub
and
int
add
insb
xchg
sahf
mov
add
cmpsl
sahf
out
sub
hlt
mov
inc
mov
dec
clc
mov
jecxz
lods
add
lea
mov
lret
push
and
and
gs
push
cwtl
add
jp
addr16
adc
nop
xor
adc
add
imul
sbb
mov
xchg
out
ret
pop
mov
fisttps
mov
mov
jo
jo
xchg
push
mov
out
jo
movsl
arpl
orl
or
mov
or
jae
add
stos
xchg
mov
shll
bound
out
inc
repnz
iret
test
in
inc
jecxz
fcoms
fildl
test
shlb
das
mov
push
push
pop
mov
jnp
hlt
push
outsb
insb
sub
xchg
loopne
dec
xchg
sarl
decb
jp
sbb
mov
add
out
mov
cmp
lret
xchg
pop
mov
push
xor
pushf
add
lret
inc
sbb
sbb
cmp
fists
dec
and
repnz
mov
orps
insl
add
push
test
lock
xor
and
fwait
mov
jb
jno
inc
popa
xchg
ja
xor
pop
repnz
pushl
std
aam
and
add
sub
adc
push
push
mov
or
in
cli
mov
jnp
rorb
test
movsl
icebp
es
add
adc
fcoms
data16
cltd
cltd
fistl
adc
sbb
push
mov
imul
jae
fnsave
jne
push
sti
mov
xor
xor
in
mov
andb
push
imul
js
loopne
and
repz
lret
dec
jne
xchg
das
lret
jno
mov
inc
mov
daa
jo
xorb
jno
mov
jmp
sti
repnz
dec
iret
loope
cltd
sub
cmp
and
dec
pop
jmp
xor
cmpsb
xor
sti
ds
in
fdiv
cmpsl
jmp
int3
outsb
sbb
pushf
push
dec
xlat
aaa
sub
test
out
ljmp
sub
push
pop
and
mov
pop
add
stc
sbb
sub
pusha
test
loopne
adc
cmc
into
xchg
pop
roll
ret
push
cmpsl
rclb
pop
data16
call
mov
mov
dec
rclb
mov
sahf
ret
mov
scas
bound
push
addl
leave
out
jne
adcb
or
jge
cmp
sub
mov
daa
push
scas
cmp
sub
shl
mov
pusha
mov
sbb
cltd
add
mov
dec
pop
fsubr
sarl
das
movsb
and
call
mov
adc
and
fidivl
nop
in
repz
call
and
sbb
sub
shl
mov
sbb
in
xchg
mov
push
adcb
sub
scas
cmc
adc
pop
xchg
lods
loopne
cmc
dec
and
mov
xchg
stos
rorl
xchg
rolb
lret
shlb
decl
pop
and
test
pop
sub
cmpsb
stos
xor
inc
addr16
xor
inc
dec
icebp
jnp
stc
stos
dec
adc
and
mov
movsl
std
and
inc
pop
movb
sti
jae
je
or
cmp
sub
rol
add
idiv
lods
mov
xor
inc
out
mov
push
pop
dec
pop
xchg
mov
pusha
sub
imul
shll
enter
dec
fwait
pop
adc
das
mov
lret
jg
mov
dec
out
xchg
jbe
or
loopne
add
xchg
mov
stos
imul
mov
mov
jl
repnz
fmuls
mov
icebp
in
imul
scas
mov
mov
jl
jnp
cmp
sahf
cmp
pop
cli
inc
jle
movsb
sarl
cmovl
stos
loopne
inc
pop
xchg
pop
cmp
cmp
xor
jp
cld
sarl
pop
or
adc
sub
cs
push
ja
mov
push
sub
ja
mov
add
arpl
je
push
aad
lods
gs
rcrl
cmp
aam
cmp
mov
adc
jl,pt
push
and
xor
nop
sbb
cmpsl
add
sbb
iret
int3
mov
jle
das
arpl
sbb
scas
ror
jmp
dec
in
mov
jns
popa
adc
xchg
xlat
stos
in
cwtl
jge
xor
inc
hlt
and
out
out
adc
lods
in
daa
cmp
jnp
out
repnz
cmpsb
ret
inc
push
xchg
xor
add
fnstsw
idivl
icebp
sahf
mov
inc
xlat
dec
ret
mov
nop
cld
out
inc
fwait
rcll
je
sbb
out
mov
lahf
subb
lea
shrl
push
jno
lds
ret
sti
out
dec
outsb
cwtl
inc
shlb
inc
sbb
cmp
clc
insl
mov
in
mov
fcompl
mov
push
and
adc
in
push
inc
mov
pop
xchg
pop
xchg
mov
out
inc
sbb
hlt
insl
or
out
sub
dec
ss
adc
addr16
les
dec
ss
daa
shl
push
pop
mov
or
test
xor
cltd
aam
imul
or
aas
sbb
into
fldenv
or
pushf
aaa
pop
xor
mov
jmp
cmp
xchg
or
inc
mov
cmp
xorl
push
je
jle
out
mov
das
mov
push
loop
in
jne
fprem
cmpl
xchg
push
fs
movsb
jp
or
in
fmul
popa
jp
fimuls
or
jb
out
xor
mov
stos
mov
fs
mov
pop
or
inc
jp
push
adc
rolb
xor
mov
adc
adc
std
repz
cmp
cmp
xchg
mov
mov
jbe
jo
pop
push
test
mov
push
push
lahf
ss
inc
outsb
mov
dec
lods
or
and
xchg
jge
lea
dec
scas
sbb
rorl
cmp
inc
or
in
aas
js
or
in
bound
jb
mov
arpl
mov
mov
enter
cmpb
mov
enter
je
div
mov
add
mov
gs
popa
push
pop
sahf
and
shlb
pop
or
jmp
out
or
iret
inc
idivb
fimuls
rcrb
es
aaa
jbe
sub
call
jne
fmuls
or
shrl
shll
mov
lea
jecxz
jno
repnz
cld
add
sub
push
mov
xchg
sub
std
fucomip
movb
jb
repz
dec
outsl
ljmp
cmp
aas
jnp
ja
push
sub
jl
fisubrl
pop
xchg
les
adcb
fists
lods
push
or
vorps
xchg
sbb
xchg
and
inc
jb
orb
lods
dec
daa
call
inc
lahf
cld
je
inc
bound
bound
aam
cmp
dec
mov
mov
sti
int
imul
jb
xor
loopne
or
loopne
cmp
test
les
stc
adc
inc
xchg
lea
je
and
lahf
out
std
fwait
inc
mov
xchg
call
dec
popa
stc
adc
repnz
fisubrs
sbb
mov
incb
push
push
pop
or
addr16
push
js
adcb
mov
les
fstp
pop
sub
xor
pop
add
push
rcrb
sub
dec
pop
jle
jle
leave
cld
xlat
jg
inc
sbb
cmp
add
mov
push
imul
ljmp
hlt
jp
rcl
sub
and
mov
pop
into
lcall
inc
fs
add
mov
jo
push
xchg
sar
lret
mov
jecxz
movsl
xor
ficoms
xchg
call
sbb
mov
imul
sub
inc
mov
pop
std
jle
lcall
jo
sbb
shrb
scas
mov
gs
push
sub
mov
inc
cltd
mov
sbb
into
push
sbb
jge
clc
rolb
xchg
and
cli
scas
cmp
jge
dec
jle
fnsave
out
mov
and
mov
or
roll
andb
imul
pop
mov
stos
mov
insl
test
xchg
xor
stos
std
sub
add
inc
push
push
add
inc
lds
std
and
lret
ror
cmpsb
mov
sar
test
adc
lcall
lods
adc
in
adc
daa
xor
jne
or
cmp
cmc
imul
jg
js
int
pop
mov
xchg
call
xor
sbbl
cwtl
ret
das
xor
lock
pop
xchg
jb
shrd
iret
addr16
jae
or
cs
mov
pushf
lret
cmc
frstpm(287
mov
insb
outsl
ss
dec
cmp
dec
sbb
xchg
add
dec
addb
cmpsb
test
pop
adc
out
fsubrp
xor
stos
out
sbb
aaa
inc
insl
push
xchg
add
push
fldl
fs
cli
dec
sub
fnstenv
cmp
add
imul
lcall
jg
ficomps
cld
mov
sbb
push
mov
scas
rorl
xchg
adc
ds
or
and
in
rolb
into
pop
dec
call
xchg
push
fwait
icebp
pop
int3
pop
sub
xchg
sti
mov
mov
aas
adc
imul
xor
mov
mov
cmp
cmp
jbe
lcall
jle
adc
or
js
adc
loope
inc
lods
aas
outsb
push
xchg
jne
sti
in
inc
sbbl
or
cmpb
ficoms
or
cmpsb
enter
div
inc
icebp
les
std
push
in
inc
rorl
push
push
push
xchg
scas
sarl
jmp
dec
outsb
mov
movsb
pop
adc
jl
mov
fiadds
mov
insb
les
les
sbb
push
inc
daa
ss
lret
mov
imul
inc
pop
imul
mov
mov
mov
sbb
insl
adc
clc
xor
inc
repz
cli
insl
inc
xor
int3
and
jno
mov
xchg
jnp
fimuls
pop
rdmsr
mov
jbe
ljmp
pop
fisttpl
test
pop
out
mov
out
pop
xchg
aam
sbb
jg
jnp
add
mov
aad
cmpsb
xchg
bound
adc
xchg
or
cmp
shl
loop
sub
lods
add
xor
std
add
dec
rolb
stc
push
pop
cmp
aas
scas
mov
or
sbb
daa
fbstp
xchg
aam
je
cmpsb
xchg
out
mov
push
imul
ret
mov
fistps
dec
add
lea
sub
popa
mov
aas
mov
pop
rcll
push
inc
mov
fs
insl
mov
das
mov
stos
mov
mov
adc
xor
push
mov
scas
testl
sub
xchg
mov
jmp
test
les
loopne
cld
fadds
stos
cwtl
je
jecxz
and
iret
push
add
int3
addr16
fistps
lea
inc
mov
insb
cltd
data16
mov
arpl
jno
lahf
aas
movsb
mov
scas
xor
push
decl
lahf
fstpt
jae
inc
sbb
cli
dec
xor
sbb
cmpsl
jg
call
cmp
add
in
cld
popa
sbb
sti
xchg
push
add
inc
sub
loopne
push
mov
xor
testl
adc
loop
mov
fnstsw
mov
shrl
out
lea
repnz
pop
nop
pop
jmp
in
and
das
mov
mov
fimull
xchg
aad
xchg
mov
pop
xor
or
push
pop
out
shlb
or
out
xor
fstpt
les
out
push
jnp
sub
out
sub
push
add
cmpsb
xchg
sub
pop
cmpsb
fstps
imul
into
sar
outsb
pop
lcall
xchg
pop
enter
mov
and
jg
mov
and
arpl
dec
cli
mov
sbb
mov
sbb
outsl
dec
mov
or
les
cld
xor
insl
sti
dec
movb
int3
in
inc
mov
test
mov
aad
roll
lock
nop
mov
or
ljmp
mov
repnz
fwait
in
or
mov
jae
push
movsl
xchg
jl
gs
adc
call
fisttpl
mov
inc
ds
dec
insl
data16
or
inc
jae
jl
mov
testb
mov
lret
aaa
cld
gs
out
jmp
mov
into
cwtl
call
iret
out
popa
xor
out
inc
popa
fidivrl
xchg
shll
pop
push
cld
mov
cmp
mov
mov
push
test
sarl
cmp
loope
sbb
shr
das
adc
fwait
dec
jnp
mov
or
jge
stos
rorl
or
xchg
int
mulb
sbb
jne
xchg
or
push
add
dec
inc
cmp
repnz
jmp
sub
scas
adc
mov
stos
push
pop
dec
sub
pop
pop
outsl
lret
adc
add
jno
mov
enter
mov
jo
repnz
inc
mov
lcall
popa
loope
jne
dec
subb
jno
mov
push
xorb
sub
scas
clc
jae
mov
pop
xor
pop
fimuls
mov
sbb
sbb
mov
sbbb
addr16
add
cmpsl
jl
pop
test
mov
shll
sbb
push
or
aaa
negb
inc
jae
sub
mov
loop
adc
add
inc
dec
rcll
mov
push
sub
dec
ret
push
sub
mov
add
iret
lcall
xchg
lcall
and
popl
loop
push
add
incl
hlt
cltd
adc
mov
jg
movsl
push
mov
pop
rcll
xor
lcall
inc
add
push
int
mov
dec
imull
sub
lret
or
push
sbbb
iret
mov
mov
jl
call
inc
push
push
in
sub
add
inc
xor
xchg
mov
jae
add
add
bound
inc
clc
out
mov
jge
inc
xor
sub
xchg
aam
sahf
mov
mov
xchg
push
xchg
pop
mov
cmc
pusha
addr16
push
jb
rorl
loop
or
jp
divl
fbld
jmp
adc
xor
js
add
sub
dec
lds
cli
stos
int
testb
cmp
xor
lock
lds
jle
in
push
mull
jg
sbb
mov
arpl
add
pop
or
or
mov
repz
divl
and
loop
into
ljmp
rorl
sub
mov
mov
movsl
icebp
xor
and
and
lcall
xor
xchg
icebp
mov
icebp
mov
mov
cmpsb
jmp
and
mov
ret
push
jmp
push
cmp
pop
leave
imul
adc
test
jecxz
mov
mov
xor
test
dec
sbb
push
in
pop
cmp
mov
xchg
in
push
cmp
jecxz
fsubs
pop
cmp
rolb
mov
mov
movsb
mov
mov
or
cmpsb
fidivs
xchg
das
pop
ljmp
sub
xchg
arpl
and
outsb
push
mov
out
fdivrs
and
adc
jge
fs
mov
sbb
jle
mov
dec
mov
orl
xchg
jnp
cs
out
push
subl
mov
sbb
xchg
or
mov
imul
gs
inc
mov
mov
sti
xchg
adc
rolb
jbe
push
movsl
mov
out
gs
fisttpl
data16
ds
int
inc
add
mov
sbb
loope
xchg
push
ret
cli
and
mov
in
cmp
mov
xor
xchg
inc
lret
push
imulb
cmp
xchg
popa
insl
rclb
or
aad
pop
push
push
xchg
jo
popf
pop
xchg
jbe
call
mov
sbb
pop
jle
mov
das
pop
adc
call
popf
sbb
shrb
pop
out
dec
cmpb
scas
test
xchg
adc
add
sub
dec
or
lret
push
repz
ljmp
mov
dec
sahf
xchg
rcrb
cmp
jns
push
imul
cld
xor
jne
test
adc
and
fstpl
jbe
js
popf
jne
cwtl
inc
pusha
addr16
cmc
inc
fdivrl
insb
pop
add
push
pop
outsl
test
ss
xlat
les
sarb
push
sar
cmp
lds
mov
cmpsl
cmpsb
cmp
mov
shlb
mov
inc
pop
dec
outsl
adc
rorl
push
or
out
xor
jno
jp
lods
sub
jmp
pop
mov
inc
lret
stc
es
hlt
hlt
push
mov
cmp
sbb
test
sbb
jnp
mull
mov
mov
sub
or
aad
or
push
lret
fs
out
je
mov
xchg
ds
push
xor
xchg
fwait
jb
pop
mov
movsb
in
mov
dec
in
lret
or
mov
das
shl
divl
add
jns
movsl
dec
mov
ret
push
into
test
std
ret
xchg
mov
pop
into
xchg
fmuls
xor
lret
ret
lods
int3
mov
pop
shll
decb
jnp
fs
enter
dec
lods
xchg
pop
jp
mov
ljmp
jae
inc
cwtl
mov
sbb
iret
ret
and
mov
adc
mov
mov
cltd
dec
fmuls
push
sbb
dec
gs
push
inc
cmp
out
popf
sub
sbb
cmp
jg
and
xchg
sub
aad
cltd
cwtl
ret
lret
fimull
fdivl
btc
clc
xchg
dec
ja
inc
sub
sbb
cmp
lods
mov
pop
xchg
es
js
ds
cwtl
mov
imul
ret
adc
ljmp
pop
push
fs
mov
scas
jne
ficoml
xchg
lahf
stos
in
push
xor
int3
das
and
loop
lahf
inc
jge
mov
fsubrl
xchg
sub
sbb
pop
fs
jo
mov
or
pop
xchg
movsb
push
pop
jmp
test
xchg
mov
stos
outsl
pop
aas
xchg
jmp
adc
test
and
sub
mov
pop
sbb
cld
repz
iret
fwait
hlt
push
bound
inc
adc
or
subl
sbb
inc
notl
mov
jge
xchg
aaa
inc
jmp
scas
xchg
or
std
adc
mov
call
jg
test
pusha
out
js
mov
daa
es
mov
mov
mov
shrl
sbbb
push
es
in
mov
lret
out
sbb
cmp
out
pop
call
movsb
pop
mov
push
popa
lret
cmp
jae
cmc
test
jl
outsb
ret
movsb
jno
movsb
imul
jg
pop
data16
ret
xchg
pop
push
lea
inc
lock
pop
loopne
movsb
cmp
cmpsl
in
testb
mov
outsb
insb
push
out
pop
lahf
xchg
cmp
mov
cwtl
lahf
sahf
jp
jbe
sahf
jge
test
or
push
sar
mov
ja
add
sti
xchg
rclb
shrl
out
mov
adc
cmp
aas
mov
xchg
aaa
mov
int3
mov
in
sub
push
pop
jge
and
ret
xlat
ret
pop
mov
test
xchg
mov
loopne
xchg
out
shr
fwait
mov
ret
or
je
fidivl
pop
sub
lods
mov
loopne
arpl
cmpsl
fldt
lock
mov
out
hlt
arpl
test
and
dec
jns
sbb
mov
cmp
mov
sbb
xchg
and
fcom
mov
shlb
mov
sub
data16
call
nop
mov
addb
int3
leave
ret
dec
mov
cmp
or
xchg
mov
xlat
mov
adcl
and
out
xor
jl
cmp
mov
aam
mov
popf
in
push
mov
cld
vpbroadcastw
or
xor
mov
test
repnz
movsb
popf
xchg
jge
out
sub
mov
push
and
cmpb
sub
hlt
and
xchg
arpl
mov
sub
mov
fcomps
and
adc
loope
fwait
cltd
mov
into
adc
mov
jae
call
sub
cli
imul
sti
rclb
jae
mov
lret
jns
push
jg
pop
mov
and
pop
jge
xchg
out
adc
sahf
mov
mov
insl
mov
mov
xchg
dec
loopne
add
and
add
clc
jo
cmpsb
inc
ljmp
jecxz
xchg
sub
movl
mov
sub
push
mov
ja
and
jns
cld
stos
sub
dec
je
out
xor
cmpb
dec
push
fistpl
and
cmp
lahf
popa
lods
and
sub
pop
jb
dec
cltd
cltd
sti
push
pop
jg
xchg
es
pop
orb
xor
adc
xchg
leave
add
push
movsl
dec
mov
repnz
or
sub
cmp
or
push
repnz
int
cmpsl
pop
inc
das
loope
inc
dec
jno
sbb
shlb
inc
adc
push
jbe
flds
cmp
sub
inc
cmp
mov
lret
ljmp
outsl
cmp
aam
jmp
cwtl
fstps
lret
ficompl
pushf
jmp
std
jne
shrl
sarl
push
test
lea
pop
out
in
scas
fcmovnbe
jbe
xor
or
add
aad
pop
popf
mov
aaa
ret
sub
clc
pop
lcall
sbb
mov
in
sbb
mov
lock
lahf
imul
jbe
mov
push
in
ja
test
cmc
cmc
xchg
pop
mov
pop
cmp
je
stos
insl
imul
xchg
int3
pop
xor
stc
ret
push
jo
pop
movsl
jo
xor
stos
in
adc
rcrb
sbb
mov
in
inc
xor
aad
cmp
les
push
lret
fsubrl
pop
in
and
inc
call
and
xorb
fiadds
push
movsl
adc
jmp
sti
or
mov
mov
xchg
mov
insw
roll
jecxz
test
into
pop
xchg
jp
mov
adc
pop
aad
shll
jle
mov
dec
mov
mov
sbb
xor
sbb
pop
adc
lret
xor
jl
aas
fimuls
mov
not
nop
fs
push
adc
xor
pop
inc
xchg
push
loope
cltd
insl
andb
jbe
into
rorb
decb
pop
int3
add
xlat
pop
mov
push
addr16
add
push
test
dec
push
pusha
cmp
in
inc
bound
imul
jb
inc
sbb
fldt
ss
push
aas
daa
notl
imul
fidivrl
xchg
sbbl
mov
shrl
cmc
cmp
cs
stc
sahf
xor
add
rorl
push
imul
scas
clc
mov
int
loop
adc
sbb
out
pusha
stos
dec
inc
dec
scas
xor
in
cmc
push
sub
iret
cltd
jns
add
jmp
imul
hlt
pusha
pop
or
sbb
inc
xor
pop
shrb
or
push
adc
lds
adc
inc
or
fcmovnb
or
popf
and
dec
mov
dec
sub
in
sbbl
xchg
jne
or
and
or
leave
imul
and
pop
shlb
sub
mov
or
jl
frstor
popf
mov
test
fmul
in
sbb
cld
xchg
rcr
pop
loop
and
cwtl
sub
mov
push
dec
push
pop
lcall
movsl
dec
or
outsl
xchg
sarb
mov
cmp
sbb
pop
enter
scas
arpl
frstor
mov
sub
sbb
or
jge
out
scas
addb
jbe
aam
inc
xchg
sahf
ds
mov
sbb
ret
pop
outsb
jg
mov
adc
add
adc
negb
jne
sbb
xchg
mov
xor
or
pushf
imul
incb
jae
xchg
pop
shrl
lock
cmp
dec
cli
jae
dec
dec
notb
mov
pop
repnz
add
lcall
ds
es
aas
lods
out
or
test
mov
xor
mov
scas
iret
arpl
jg
xchg
pop
sbb
pop
jb
popl
testl
and
loope
push
mov
cld
loopne
jno
enter
mov
loopne
or
mov
fadd
data16
dec
cmp
sub
pop
push
jne
dec
call
fcmovne
push
sub
imul
pop
loop
scas
in
mov
mov
xchg
shrb
fists
je
or
xor
adc
adc
fistl
mov
adc
jecxz
xchg
and
mov
rclb
push
and
inc
xor
dec
push
and
push
jne
repz
arpl
jecxz
mov
lods
ljmp
mov
pop
or
push
mov
enter
adc
repnz
sub
pusha
mov
inc
scas
push
sti
dec
add
mov
mov
jo
je
pop
dec
pop
cmp
in
test
push
mov
mov
jl
pop
insb
arpl
pop
into
push
test
fldl
mov
lahf
push
sbb
dec
jns
lock
add
ja
mov
cmp
clc
loopne
lret
dec
aaa
pusha
cmp
cs
cmp
ja
mov
ja
xchg
pop
stos
test
repnz
pop
and
dec
mov
int3
mov
cmp
mov
push
sbb
and
aas
fistps
dec
shrl
and
ss
addl
mov
xor
or
orl
in
fistpll
icebp
cmpsb
and
mov
mov
mov
push
int
rorl
rorl
mov
bound
jle
outsb
inc
add
push
test
lret
mov
rorl
mov
outsb
mov
sahf
lret
hlt
dec
ljmp
ss
sbb
clc
imul
xchg
sbb
dec
jno
scas
shlb
sub
or
xlat
mov
mov
lock
xor
pslld
jecxz
int
hlt
push
xor
xchg
ljmp
into
mov
push
aad
sub
inc
inc
mov
sbb
pop
lods
mov
and
mov
fadd
push
pop
out
rclb
cs
test
or
xchg
lret
inc
xor
pop
push
test
mov
dec
add
les
ret
leave
stos
mov
or
aas
xor
imul
xchg
add
xchg
stos
mov
iret
pusha
pop
dec
pop
fs
or
in
sub
cmpsb
sahf
adc
ror
aad
xor
mov
pop
sahf
add
je
xchg
fcomps
cld
stc
stc
and
cwtl
and
hlt
jl
xor
dec
mov
lock
mov
aam
sarb
inc
sti
inc
subl
repz
pop
adc
movsb
adc
jmp
mov
out
adc
stos
ss
cmc
lcall
mov
das
mov
in
mov
out
popa
out
adc
jo
stos
or
je
xor
rcrl
pushf
or
insl
and
test
aaa
xchg
mov
cs
add
hlt
rcrl
lret
das
cmp
xor
data16
aad
jge
jb
and
and
stos
cmp
cli
or
add
cli
call
outsl
xchg
inc
add
push
lods
ficomps
jle
cmp
in
lds
sbb
pop
xor
sbb
call
pop
mov
push
jno
aad
jmp
pop
fs
call
sahf
jmp
scas
jl
jne
push
xor
mov
das
cltd
and
mov
xor
sti
outsb
in
pop
push
push
dec
mov
rcl
adc
cmp
xor
repnz
push
imul
xor
sbb
shll
call
lods
sarl
adc
push
rep
mov
dec
pop
out
mov
das
sar
out
jecxz
test
mov
dec
pusha
jns
cli
imul
insb
hlt
sbb
cltd
inc
das
lret
push
in
or
adc
mov
lods
pushf
adcb
xchg
mov
mov
sbb
in
jns
imul
cmp
mov
daa
and
pop
sub
std
dec
push
xchg
test
xor
movsb
and
mov
es
push
neg
cmp
xchg
or
xchg
pop
mov
test
xchg
xchg
mov
sub
fldl
fs
xor
sahf
sbb
xchg
xchg
add
cmp
xchg
ljmp
cmc
push
pop
cli
or
out
std
jb
sbb
and
in
add
int3
pop
push
dec
lcall
psubq
push
push
jg
js
gs
stos
add
insb
in
or
mov
rorl
sbb
and
ret
je
xchg
sahf
jmp
inc
jg
ljmp
cmp
fstp
xor
loope
jg
add
sbb
and
fnstcw
push
cmp
lods
xor
push
inc
xchg
sbb
jne
sti
addr16
mov
sahf
push
mov
je
cwtl
mov
ficoml
pop
dec
test
pop
andl
lahf
push
ljmp
xlat
sahf
in
inc
mov
push
jl
pop
jmp
dec
push
icebp
cltd
xor
ss
pop
jecxz
jl
data16
int3
aam
pusha
mov
lea
mov
inc
mov
negb
imul
dec
push
push
divb
dec
mov
sbb
fbld
pop
andb
pop
in
or
dec
inc
and
jae
jns
lea
shlb
insb
adc
cmp
and
push
inc
pushf
xor
dec
out
loopne
lods
ds
dec
cmp
xor
icebp
gs
cli
sbb
fwait
popf
call
test
mov
or
sbb
add
inc
jne
pusha
rcll
in
mov
jp
outsb
hlt
outsb
jbe
ja
dec
adc
xor
pop
test
rcrl
loopne
xchg
xchg
jnp
jp
cmp
aam
fidivrl
ss
xchg
and
cld
clc
xor
mov
pop
mov
mov
mov
bound
dec
push
mov
mov
mov
or
aad
cmp
or
insl
roll
pop
clc
fmuls
mov
imul
and
ret
jno
in
sbb
pop
stos
mov
outsb
and
push
pop
pop
lock
push
divl
inc
cld
sub
lods
cli
dec
insb
push
fsubl
mov
insb
xor
cltd
mov
imul
jnp
and
and
xorb
push
push
bound
sub
dec
adc
pop
stos
cltd
dec
fsubp
sbb
mov
nop
inc
mov
mov
adc
js
dec
sbb
jp
out
fsubl
pop
xchg
cmp
dec
mov
lret
lock
enter
repnz
fwait
iret
mov
xor
mov
cwtl
int3
jge
hlt
jns
call
sbb
ret
jno
mov
mov
dec
push
stos
mov
in
jmp
cmpsb
fcmovne
fimull
add
push
pop
ja
jle
xor
loop
jbe
push
xchg
ljmp
pop
fcomip
mov
xchg
mov
hlt
scas
in
rcrb
add
stos
fucom
out
inc
scas
add
push
xchg
mov
stos
mov
cmp
test
or
into
out
lods
daa
mov
cmp
push
shrb
dec
sub
stc
jnp
test
movsl
sbb
add
or
jmp
dec
mov
test
add
and
push
ljmp
fnsave
int
jae
push
mov
sbb
ficompl
jo
int
cmpsl
mov
clc
lret
xchg
sbb
jo
jecxz
push
addr16
stc
push
leave
mov
mov
test
push
int3
adc
pop
scas
or
xchg
dec
add
loop
popa
cmc
movsb
hlt
add
pop
jmp
cmpsb
sbb
push
into
jle
syscall
pushf
sub
mov
inc
cmp
dec
mov
sbb
push
mov
cmpsl
mov
or
and
xchg
outsb
mov
mov
aam
push
sti
push
mov
mov
test
pop
aas
jge
insb
push
in
pop
or
rorl
jno
jmp
mov
ja
popa
stos
pop
sub
lods
inc
xlat
xchg
negb
push
cli
rorb
in
sbb
push
xchg
mov
add
mov
divl
les
and
sub
mov
xor
xlat
stos
push
idivb
add
popa
xor
dec
sbb
add
xchg
arpl
in
mov
sbb
push
push
mov
adc
scas
jnp
inc
mov
push
jmp
jmp
arpl
ljmp
push
xor
stc
mov
leave
or
inc
jecxz
mov
sahf
jmp
sbb
subl
test
popf
xorl
les
jle
inc
jl
ds
notb
nop
fs
loope
adc
jp
out
int
shrb
in
mov
push
xor
sub
jge
iret
data16
push
mov
and
mov
stc
shl
push
imul
divb
icebp
adc
std
adc
movsl
lgs
push
or
dec
shll
jo
es
dec
test
test
int3
push
ret
mov
xor
cmp
out
xor
jge
cwtl
jae
and
js
pop
push
loop
cmp
sti
stos
iret
ds
jb
pusha
idivb
pop
loopne
rclb
and
sti
in
es
repz
xlat
xchg
or
dec
add
repnz
mov
aaa
mov
adc
or
clc
inc
ret
popf
push
int
aaa
inc
loopne
repz
jbe
xchg
testl
int3
mov
out
sarl
lcall
or
xchg
jecxz
or
dec
dec
jp
pop
lods
cltd
sbbl
pop
push
xor
xchg
add
je
dec
xor
jne
jle
repnz
push
cld
cmc
shl
loopne
and
iret
fidivs
in
mov
out
dec
test
cmp
repnz
subb
lcall
pop
inc
test
xor
sarl
jmp
inc
or
rorl
sub
and
ret
mov
fisubrs
pushf
adc
out
call
sub
xchg
scas
popa
cmp
mov
rcrl
scas
pop
lret
add
or
ljmp
dec
adc
aaa
push
cmp
inc
adc
inc
xor
xchg
rcrl
movsl
dec
jl
mov
sub
div
in
mov
imul
hlt
adc
arpl
out
sub
scas
rcl
jbe
xor
pop
cmc
lock
addl
add
inc
mov
mov
icebp
je
cwtl
outsl
shl
out
dec
rcl
outsb
ja
les
push
sti
stos
xchg
or
test
mov
xorl
and
mov
popf
mov
add
sbb
cmp
sub
push
jg
pop
in
pusha
adc
faddl
mov
out
jp
jns
mov
cmp
sub
lahf
sbb
jl
mov
aaa
xorps
pop
fwait
adc
cwtl
stc
je
push
sarl
xlat
mov
cwtl
mull
fiaddl
out
add
inc
addr16
enter
cli
dec
mov
jns
inc
xorb
lds
or
daa
mov
push
cld
lods
je
shl
xchg
test
fchs
out
pop
pop
inc
xchg
push
push
je
fimuls
and
fiaddl
mov
add
xchg
ret
movsb
loop
mov
ds
inc
jo
addr16
dec
sbb
jb
xchg
mov
gs
in
cmp
sub
cld
aas
mov
xor
xor
sarb
popf
dec
fnstcw
sbb
lahf
and
inc
daa
and
subb
and
add
insb
sbb
xchg
test
sbb
sbb
xlat
mov
mov
push
lds
add
loope
mov
dec
cmp
cmp
clc
fldt
iret
jge
test
sahf
dec
or
adc
xor
sbb
movsb
and
or
addr16
and
stos
dec
fisubrl
icebp
test
cmc
inc
sub
push
mov
pop
movsb
loop
mov
rcll
jecxz
fmuls
mov
cmp
cs
sbbb
mov
inc
or
dec
lods
cs
daa
idivl
aas
incl
shlb
pop
enter
and
lods
ret
aas
repnz
jno
js
leave
xor
arpl
mov
jbe
mov
and
push
repz
inc
jg
dec
adc
mov
fisubl
shrb
andl
dec
mov
inc
cmpsb
sub
stos
movsl
pop
push
out
sub
cmp
arpl
sbb
js
cmp
mov
cmp
ds
enter
aas
xchg
dec
and
std
cli
std
lcall
mov
movsb
xchg
inc
or
push
adc
enter
sbb
pop
gs
pop
xor
shl
mov
mov
pop
ss
fdivrl
add
lret
jae
mov
dec
mov
cli
lcall
add
lds
outsb
test
shrb
jbe
cmpsb
mov
sub
sbb
mov
or
std
test
fistl
mov
data16
xchg
in
xor
fnstenv
lahf
fldenv
jg
xchg
jo
mov
push
int
pop
push
test
imul
dec
jns
cmp
mov
sbb
dec
add
dec
mov
sub
inc
pop
shll
pop
pushf
xchg
push
push
xchg
ljmp
pop
dec
xor
cmp
mov
mov
int
pushl
jl
sub
cs
xor
ss
test
pop
inc
adc
xchg
add
fwait
sti
cmpsl
inc
push
rcrl
mov
sub
imul
sbb
imul
mov
popf
inc
sbb
mov
scas
sub
das
dec
popa
xchg
std
dec
push
lods
dec
fisttps
add
or
cld
nop
das
in
ss
cmp
xor
lods
sub
insb
mov
ljmp
in
mov
mov
cli
shrl
insl
imul
inc
adc
push
popa
loopne
jle
jno
and
std
fadds
rorb
into
test
jno
jmp
shll
test
and
adc
cmpsb
push
jno
xchg
sti
mov
inc
lea
fldt
pusha
jne
fldl
imulb
testl
stos
mov
dec
mov
mov
cmpsb
lea
outsl
mov
jle
fstpl
insl
xor
es
in
shlb
sti
mov
jae
push
cmpsl
sub
jnp
imul
nop
add
mov
js
lods
inc
mov
out
pop
addb
inc
aaa
fsubl
jle
jo
popl
xchg
movsb
lock
lahf
xchg
xchg
pop
push
dec
pushf
add
adc
flds
xchg
mov
xlat
out
pop
push
mov
lea
fisttpl
lret
or
mov
mov
pop
dec
jl,pn
xchg
cmp
arpl
add
out
cwtl
mov
lods
mov
ds
cmp
outsl
pop
and
lea
flds
repz
sub
iret
test
jae
je
adc
fs
popf
mov
and
js
pop
ss
scas
fsts
lods
aad
add
fimull
dec
sti
into
pop
rorw
pop
jge
and
push
pop
nop
dec
push
inc
jl
jae
lahf
or
dec
jge
xor
ret
lods
jle
mov
jecxz
mov
test
inc
rclb
sub
dec
lret
mov
cmp
aas
cmp
and
sbb
cli
or
xor
mov
iret
xchg
mov
dec
orl
stos
xchg
xchg
cmp
xchg
cmp
mov
nop
push
pop
mov
or
sbb
imul
fldenv
xor
xlat
dec
ss
pushf
and
loopne
lods
rcrb
lcall
mov
mov
or
repz
mulb
sub
neg
mov
jnp
or
adc
and
xchg
aas
adc
xchg
rclb
lret
insb
out
xor
bound
inc
test
cli
xor
xor
jno
ret
loope
push
sub
jmp
pop
xor
scas
inc
incl
mov
sub
cs
add
jbe
jb
xchg
jbe
inc
add
cvttps2pi
or
imul
movsl
push
pop
or
insl
fistpll
inc
push
shr
ret
push
push
test
test
xor
xor
mov
push
cmp
push
dec
sub
loop
rolb
add
in
movsb
sahf
mov
dec
jb
lds
test
sub
fildl
aad
xchg
mull
push
fdivrl
sub
lock
aas
inc
loop
adc
mov
sarb
pusha
pop
dec
iret
sub
imulb
bound
lret
insb
mov
shrb
push
ret
rol
sub
mov
stos
jne
adc
movsb
das
aas
insl
push
and
pop
rcrb
sbb
sar
cmp
lds
or
dec
negb
sti
cmp
clc
data16
popf
mov
dec
inc
add
jno
pop
out
filds
rcr
and
call
hlt
mov
lods
lret
int
add
sti
lret
int3
push
mov
movsl
lds
int3
and
std
adc
dec
lods
lods
push
aam
rcrl
lds
adc
aas
mov
xchg
cmc
shl
jmp
add
add
lds
arpl
roll
dec
mov
xor
adc
pusha
fwait
test
outsl
fstpl
sbb
lahf
mov
seta
in
test
test
cmp
xchg
cltd
popa
lcall
aad
mov
dec
xchg
lret
mov
or
mov
jbe
jg
test
ret
outsb
xchg
popa
fldenv
xchg
mov
stc
pop
jp
xchg
imul
pop
sub
mov
and
in
cli
or
testl
lods
fbld
bswap
fdivl
lahf
loopne
xchg
xor
dec
inc
pushf
and
adc
mov
add
push
and
je
out
outsl
in
jge
movsl
subb
lock
daa
xchg
add
mov
fnclex
mov
mov
ljmp
add
add
sub
aad
push
addl
or
sub
adc
dec
dec
outsl
add
inc
gs
repnz
jbe
xor
sbb
inc
or
orb
mov
mov
and
test
dec
add
mov
and
ja
sarl
pop
lock
lods
mov
mov
ret
imul
xorl
inc
xchg
push
ret
stos
push
pop
adcb
inc
call
pop
aaa
repz
jns
roll
cmpb
cltd
cmp
xor
movsb
mov
call
jmp
aam
add
sub
stos
test
xor
and
add
dec
xchg
push
cmc
fsubrs
stos
pop
jp
push
mov
pop
jbe
ja
notb
test
adc
les
push
cmp
sbb
mov
xchg
rol
push
or
repnz
mov
and
int3
mov
push
mov
cwtl
outsb
subl
ljmp
scas
cmp
fnstcw
xchg
push
pushf
cvttps2pi
inc
pop
lods
fldcw
push
sbb
out
test
in
mov
lcall
xchg
xchg
sub
xlat
dec
pop
fcmovbe
dec
subb
xchg
adc
and
sbb
mov
push
in
cmc
call
adc
dec
push
sbb
pusha
sbb
aad
repnz
jno
repnz
inc
and
fdivl
inc
push
mov
mov
out
pop
adc
xchg
sbb
dec
sahf
push
ret
das
sub
jae
addr16
cs
push
scas
into
dec
sub
push
psubw
dec
cmp
mov
arpl
push
pop
outsb
mov
jg
aad
movb
jne
mov
mov
loop
inc
sbb
jge
stos
loope
adc
or
cmp
or
mov
int3
sbb
mov
sbbb
xchg
jle
rol
test
andb
lret
cli
int3
push
mov
and
fnstsw
movsl
fwait
mov
adc
popf
in
lods
daa
mov
adc
lock
fwait
lock
jne
push
int3
and
cli
arpl
sub
es
mov
loopne
jmp
mov
mov
scas
lcall
inc
ds
mov
xchg
xchg
imul
ljmp
xor
sbb
add
xor
enter
ret
mov
mov
jge
jmp
rcr
scas
aaa
hlt
fwait
psraw
jge
xlat
cmp
inc
setge
jb
sub
es
add
push
js
adc
push
mov
enter
call
xchg
mov
inc
or
shrl
jae
xor
cmp
test
xor
jp
adc
sub
std
stos
jbe
sub
test
std
mov
push
fisttps
inc
shrl
sub
mov
xor
out
jbe
pushf
dec
imul
and
int3
cmc
jb
in
nop
movsb
or
aas
cmpsb
dec
jecxz
jl
mov
mov
fwait
mov
mov
or
or
inc
popf
mov
hlt
in
imul
pop
repnz
ss
push
push
xor
inc
and
jo
pop
gs
sub
sub
lds
jnp
dec
es
iret
imul
add
mov
out
adc
adc
add
mov
xchg
mov
pushf
inc
sahf
inc
dec
sub
out
test
popa
inc
fbld
movsl
addr16
imul
outsl
scas
in
lods
lods
adc
add
imul
mov
cld
mov
jns
pop
fmull
pop
test
lahf
cmpsl
pop
push
dec
jbe
push
sbb
or
or
loope
addl
mov
add
gs
fisttps
or
filds
in
jb
pop
add
add
rorl
jg
lahf
sub
xor
mov
and
js
movsl
ficompl
sub
sub
pop
aad
mov
mov
lret
push
cmpsl
inc
mov
xchg
outsl
sub
test
je
mov
nop
push
push
shrl
das
add
dec
aad
jg
xor
dec
dec
fisttpll
repnz
mov
sbb
adc
push
je
das
mov
enter
cmpsb
and
insb
inc
add
push
arpl
leave
jmp
mov
fxch
daa
movsl
lahf
int
imul
xor
pop
mov
jmp
jns
mov
mov
cmp
mov
push
mov
sbb
test
mov
fmul
dec
pop
loopne
cmp
mov
mov
lods
adc
cmpsl
lea
jge
addb
push
aas
repnz
sbb
mov
push
nopl
les
pusha
push
mov
out
and
push
fnstsw
bound
andb
xchg
fucomp
push
mov
int
cmc
fcomip
jnp
push
outsb
inc
mov
pop
xchg
sti
fcomps
push
loope
jl
jmp
mov
scas
mov
inc
jno
cmc
jb
sbb
sbb
test
js
icebp
call
dec
adc
ret
mov
lock
mov
in
icebp
sti
push
jae
movsl
sub
test
pop
loopne
jg
xchg
repnz
movsl
pop
ljmp
or
dec
jmp
jmp
bound
imul
mov
lret
int
nop
jno
push
orl
push
pop
cltd
sarl
adc
fiaddl
and
push
adc
in
mov
clc
mov
lcall
sahf
jmp
aam
outsb
push
bound
outsl
gs
sbb
iret
fistpll
mov
dec
fidivrs
pop
mov
pop
addl
inc
out
clc
jecxz
dec
pop
sub
cli
dec
or
push
sarb
ret
pop
push
in
and
or
xor
jnp
leave
stos
jbe
popf
add
xchg
or
inc
orl
and
cmp
jae
xor
xchg
mov
loop
test
pop
xor
lcall
mov
jo
inc
fisubrl
das
dec
nop
xchg
testb
push
and
lcall
xorb
lahf
lret
jne
test
sub
pop
push
adc
xor
in
mov
lock
jmp
loopne
lea
lcall
inc
mov
dec
fildl
popa
xor
jecxz
mov
pop
push
push
inc
js
push
sbbl
adc
stos
incb
out
idivl
pop
mov
lds
sahf
arpl
xchg
orb
pop
jns
lock
mov
jne
les
flds
js
aaa
mov
xchg
cmp
das
sarb
aas
idivb
pop
jecxz
movsl
xchg
fdivrs
setle
test
loop
mov
inc
int
in
inc
leave
jge
sbb
rorb
leave
fldenv
outsl
xorl
fidivrl
and
adc
xchg
sub
mov
add
mov
jnp
out
test
scas
cmp
xchg
xchg
push
add
xchg
stos
out
mov
push
jns
loope
push
mov
sbb
shlb
sub
lock
and
rorl
scas
and
push
test
mov
inc
mov
outsb
mov
sarb
cmp
inc
push
filds
jecxz
je
rcr
dec
xchg
xchg
fwait
outsl
rcll
adc
ret
xchg
loope
hlt
out
xchg
stos
and
add
adc
cmp
fisubl
push
mov
push
arpl
std
jl
cs
scas
rcr
xor
filds
cwtl
pop
or
fwait
pop
or
ja
push
inc
push
adc
jmp
pusha
and
addr16
aas
mov
cmp
pushf
jno
xor
shlb
jmp
addr16
cld
jb
std
inc
fs
ss
lahf
insl
loope
push
mull
imul
xor
mov
push
cli
mov
pop
aas
xor
mov
hlt
dec
pop
xchg
movsb
jle
rclb
jg
test
iret
rclb
jnp
or
mov
mov
xor
jbe
loop
or
out
movsl
mov
mov
mov
retw
cmp
push
sahf
xorl
and
xor
pop
and
mov
mov
mov
or
gs
inc
sub
push
jbe
inc
out
or
aas
pushf
jne
loope
mov
xchg
adc
insl
and
shrl
push
aam
mov
sub
lret
inc
ss
mov
sahf
or
mov
xorb
stos
push
loop
jnp
sbb
test
and
sub
bound
sbb
xchg
mul
mov
push
imul
nop
xchg
and
mov
dec
and
movsl
js
sbb
mov
or
mov
lret
insb
add
cltd
fisubrs
popf
imul
cs
mov
rol
cli
lods
pop
dec
cmc
popa
dec
and
stos
cmpsb
das
push
das
pop
lcall
in
mov
repz
xchg
jno
aad
inc
jl
inc
rsqrtps
and
ja
xchg
outsb
mov
mov
mov
loope
mov
cmp
mov
lods
fsts
leave
mov
je
xchg
jp
testl
xchg
mov
test
pushf
mov
xchg
ret
cmp
or
sbb
lock
lcall
add
popa
outsl
xor
bound
pop
jbe
jno
pop
scas
pusha
push
or
jno
negb
test
or
std
adc
fwait
pop
rorl
int
test
loop
ret
pop
xor
push
movsb
mov
push
mov
adc
in
outsl
push
jge
mov
mov
popl
dec
xchg
imul
push
mov
inc
fwait
mov
or
lea
mov
lds
adc
out
adc
sarl
imul
jnp
nop
sub
imul
add
cld
ljmp
ja
adc
jmp
pushf
pop
sub
xchg
addr16
adcl
xchg
outsb
pop
and
add
or
push
fcmovbe
out
fistps
cmpsl
push
scas
movsb
add
jg
mov
inc
test
ss
cmc
popf
pop
fstpt
test
xlat
shlb
pop
push
sub
notb
in
hlt
xor
imul
sahf
clc
mov
cmpsl
adc
xchg
bound
xchg
std
outsl
cmpsl
test
mov
pushf
mov
mov
and
imul
sarl
mov
arpl
push
pop
cmp
mov
xorb
sarb
dec
sub
enter
enter
fisttps
stos
adc
shlb
in
cmpl
aas
stos
in
sti
je
mov
hlt
xchg
jecxz
or
mov
push
mov
adc
cmp
adc
pusha
int3
mov
hlt
xor
gs
push
jecxz
popf
loope
inc
mov
sub
pop
inc
sub
sub
scas
xor
fwait
adc
mov
fmul
mov
adc
cmp
mov
mov
jnp
std
jmp
jge
mov
cmp
mov
inc
repnz
int3
push
xor
push
jne
jne
ret
ret
fimuls
shll
push
inc
int
pop
lods
xchg
pop
test
inc
inc
loopne
pushf
cwtl
jbe
cltd
fstl
cmp
fcomip
adcl
sarb
mov
gs
lods
popa
das
cltd
mov
cltd
pop
movsb
loopne
add
fs
std
adc
in
aas
sub
push
pusha
xor
or
inc
cmpsl
pop
out
push
mov
sub
mov
sti
jecxz
sbb
mov
enter
into
icebp
jmp
enter
repz
cmp
leave
in
scas
mov
shll
jnp
xchg
pop
cmp
repnz
mov
mov
insb
pcmpeqd
daa
loope
sub
jl
inc
movsb
les
or
or
jnp
push
ret
aaa
pop
out
int
inc
pop
sbb
ljmp
push
or
pop
pushf
fsubrs
inc
pop
sub
out
ja
push
dec
sbb
mov
mov
xor
and
or
jmp
fwait
ds
mov
or
ds
pop
dec
add
pop
outsl
push
xor
mulb
xchg
mov
fildl
mov
popa
rcll
push
add
xor
in
in
inc
int
xchg
cmpb
and
xchg
mov
pusha
push
fsubrl
movsb
repz
or
mov
pop
and
xchg
pop
data16
out
movsl
push
stos
mov
aaa
mov
jns
aad
pop
mov
movsl
lret
jns
xor
xchg
xchg
mov
push
sbb
push
adc
sub
cmc
mov
mov
shll
jg,pt
dec
insl
rclb
mov
mov
flds
ret
sub
push
jbe
into
jge
push
dec
pop
add
scas
inc
sbb
in
xchg
dec
cmp
fwait
push
pop
in
je
jecxz
lods
xor
mov
iret
mov
mov
and
fwait
xchg
nop
leave
icebp
inc
xorl
jns
xor
mov
inc
adc
jmp
int
mov
dec
mov
push
push
das
lret
lock
leave
mov
sbb
fldt
cmp
lods
mov
pusha
pop
dec
icebp
add
adc
mov
sbb
mov
call
in
je
push
mov
fidivs
das
fidivrs
mov
movsb
stc
aaa
adc
jne
or
inc
xchg
mov
jns
shlb
adc
js
rcl
dec
loop
push
dec
shll
pop
movsl
push
xchg
and
mov
repnz
fwait
pop
jle
cltd
outsb
cmp
xor
sbb
lret
and
sub
push
cmovs
or
enter
scas
and
repz
enter
or
inc
cmp
push
dec
inc
push
inc
shll
aaa
dec
sbb
inc
incl
mov
and
sub
sub
mov
aam
lods
pop
and
and
dec
xor
mov
inc
in
aad
test
int
fcoms
cmp
inc
and
push
mov
dec
jbe
push
xlat
or
xchg
sar
and
mov
adc
pusha
pop
sbb
addb
jns
push
cmp
dec
sub
js
and
push
inc
int
outsl
and
push
sbb
insb
lahf
mov
mov
mov
pop
aas
push
shlb
sbb
xchg
lock
jbe
subl
lret
lahf
mov
repz
jecxz
mov
inc
xor
out
mov
bnd
mov
out
pop
subl
mov
clc
xchg
mov
adc
sub
push
fisttpll
jge
in
push
xchg
mov
lcall
push
cmp
jno
mov
sub
aam
jle
test
mov
ljmp
popf
or
jo
ret
les
or
jbe
push
jo
xor
lock
inc
outsb
fcos
outsl
jmp
mov
pop
enter
arpl
lds
inc
in
fmull
movsl
or
push
lods
daa
or
clc
cmpsb
idivb
jl
adc
movsl
jp
in
xor
adc
mov
push
push
lock
cmpb
pop
clc
pop
sti
jb
push
imul
das
scas
xchg
aad
mov
dec
push
mov
inc
mov
iret
dec
sbb
push
cld
sbbl
mov
xlat
xor
mov
pop
mov
cmc
mov
scas
aam
inc
xor
jecxz
popf
sahf
add
jmp
cmp
jb
jno
jno
mov
jmp
mov
pop
ret
outsl
fsubl
cld
xor
in
cmpsb
stos
push
jmp
inc
sbb
push
adc
vmovlps
out
fmull
mov
or
push
push
add
lret
jo
sarb
popf
jmp
jmp
pushf
jg
add
mov
cmc
mov
xchg
xchg
outsb
push
je
loope
mov
sub
in
insl
int
fidivrl
shll
xchg
push
gs
dec
fnsave
adc
scas
out
rolb
movsb
iret
addl
out
jo
cmp
xor
insl
jae
sub
rol
insl
lcall
test
or
out
sub
pushf
xchg
sti
mov
test
icebp
shrb
movsb
mov
rolb
call
cwtl
popa
decb
pusha
je
dec
or
test
rorb
imul
xchg
pop
psubsb
dec
adc
push
lcall
and
pop
xchg
lock
mov
pushf
sub
jmp
mov
jbe
add
pusha
out
cmp
repnz
pushf
pop
sar
mov
add
sbb
sarl
aaa
shl
inc
cmp
les
stc
shll
int
xor
and
sbb
sbb
add
ficompl
mov
daa
pop
xchg
xchg
mov
push
push
push
and
push
imul
lret
les
in
sub
xor
repz
out
or
mov
inc
aas
dec
xchg
mov
sub
cmpl
shrb
or
dec
fdivr
divb
mov
pop
in
test
ds
dec
cwtl
lods
stos
in
stos
xchg
loopne
or
mov
ret
ja
sti
pop
rclb
or
addr16
in
inc
sub
sbb
jmp
sahf
rcrb
mov
inc
in
push
mov
mov
pushf
aas
jg
rol
fnstenv
or
adc
test
in
and
iret
int
imull
fs
movsl
xchg
es
jmp
or
shrb
push
icebp
ds
dec
nop
sbb
xchg
xor
jmp
lahf
xor
jae
fstl
mov
dec
xorb
ja
cmc
mov
popf
in
push
adc
ret
fstps
jp
dec
pushf
subl
sbbl
mov
pop
push
lcall
jno
mov
ja
pop
sub
loopne
aad
push
mov
hlt
push
dec
mov
xor
arpl
fsubs
mov
dec
jl
paddd
and
mov
dec
jle
add
jl
or
or
pop
lcall
fldz
cltd
out
aam
sbb
call
xchg
ss
data16
leave
xlat
shrl
fiaddl
fdivrs
shl
mov
cmp
pop
jbe
push
pop
xchg
xor
jl
add
roll
int
xchg
popa
repz
movsb
dec
inc
call
in
ljmp
inc
sbb
pop
repz
in
call
sbb
imul
scas
aas
xor
mov
sbb
out
xor
repnz
movsl
dec
or
mov
sahf
jecxz
lods
xchg
in
pop
cmp
xchg
lds
stos
or
pushf
pop
stc
push
shlb
pop
les
test
jb
and
jnp
daa
push
sub
mov
add
and
push
jp
sub
rcr
repz
ret
jmp
call
iret
jno
adcb
loope
ret
cwtl
pop
cltd
lock
lahf
jle
mov
pop
lret
stos
fmuls
int3
push
xor
lcall
sbb
cmp
push
dec
or
in
sbb
bound
mov
aas
or
lahf
pushf
mov
pushf
pop
out
lea
sbb
xchg
shl
test
cli
xchg
xor
ficoms
jmp
iret
jge
lcall
icebp
mov
adc
das
add
inc
xor
das
add
dec
pop
les
sub
and
mov
out
add
dec
lahf
mov
out
fiadds
stc
jbe
subb
xchg
sbb
imul
push
in
sar
lods
dec
loopne
sbb
in
pop
in
adc
mov
add
pop
lret
pop
aad
or
jno
es
adc
jle
mov
inc
test
mov
adcb
push
cmp
sbb
sbb
jae
mov
inc
mov
flds
push
fs
das
sub
or
pushf
mov
xchg
int
dec
pop
pop
pop
ret
cmpsb
addr16
jmp
out
pop
push
mov
sub
rcrb
inc
inc
scas
push
imulb
cmc
hlt
mov
pop
std
inc
fsubp
push
lods
out
add
ja
loopne
xchg
arpl
xchg
xchg
mov
fsubl
mov
or
adc
jg
arpl
push
mov
jg
xchg
sti
sti
mov
xor
fwait
add
add
mov
mov
lret
pop
iret
ljmp
daa
enter
fs
hlt
sub
lods
fcmovnb
aas
bound
mov
push
pusha
outsl
mov
xchg
jg
dec
ret
pushf
mov
mov
je
inc
pop
ret
mov
movsl
je
or
pop
lret
filds
sar
icebp
lods
call
sbbb
sbbl
mov
dec
dec
aam
loope
adc
push
std
outsl
iret
mov
or
mov
ljmp
mov
mov
mov
mov
mov
cltd
cmc
sub
lods
mov
push
adc
and
icebp
mov
mov
aas
mov
dec
nop
jmp
jno
adc
insb
lock
mov
mov
cld
mov
mov
enter
jns
and
jb
inc
mov
aad
loope
mov
sarl
rclb
bnd
jmp
cltd
mov
movsl
fwait
fs
xor
push
or
lods
sahf
ljmp
bound
ficoms
jp
jge
das
or
mov
sti
cmp
sti
nop
inc
dec
test
pop
aad
aas
cmp
pop
dec
pop
adc
psubusb
popa
push
xchg
mov
lret
mov
pop
pop
and
or
lret
icebp
push
xor
jnp
push
imul
loopne
inc
in
lret
mov
test
xor
mov
jg
mov
andl
fcompl
add
insl
jecxz
sbb
push
or
outsl
aam
test
xchg
pop
pop
rcrb
xchg
ss
or
es
pusha
shlb
mov
xor
orl
jecxz
sub
cli
xchg
xor
adc
xchg
or
insb
andb
sub
fisttpll
xchg
mov
inc
and
pushf
ret
mov
fbstp
jb
mov
inc
push
sbb
jbe
ret
xor
iret
rcll
jne
jl
push
clc
ja
movl
push
cwtl
mov
orl
test
jmp
sub
movsb
push
test
adc
rorl
pop
std
add
out
scas
mov
jae
andb
add
and
push
out
push
lea
outsl
or
lea
cltd
mov
push
gs
sub
push
dec
pop
sub
jae
mov
jecxz
dec
sbb
outsl
arpl
cld
or
dec
mov
incl
mov
lea
je
mov
mov
je
cld
push
inc
add
pop
xor
cmp
js
mov
jl
jns
test
iret
mov
fnstcw
hlt
cmpsb
insl
daa
test
inc
js
pusha
sbb
cmpb
mov
inc
xor
in
popf
shl
addr16
ret
adc
mov
stos
push
int
cmp
sahf
pushf
call
push
lcall
cmpsl
fwait
lea
push
or
fmuls
or
sub
test
iret
push
xchg
rcl
pop
and
in
cmc
push
enter
call
int
je
cwtl
and
or
in
adc
popa
add
jp
push
sub
out
orb
push
mov
fldenv
stc
or
jnp
aaa
mov
rorb
mov
mov
xor
mov
scas
call
fisubrs
mov
mov
pusha
movsl
xchg
repz
out
mov
xor
int
pop
cmp
in
test
xor
mov
cmpb
mov
sbb
xor
dec
lds
lds
sub
pop
insl
mov
mov
jo
loop
scas
call
mov
das
outsl
icebp
jmp
iret
inc
mov
sub
and
cmp
xchg
jle
mov
sbb
ret
jmp
ror
inc
adc
mov
int
cmp
fs
sti
mov
insb
in
sub
sub
mov
jnp
daa
in
adc
test
jmp
xor
pushf
push
xlat
ret
std
repnz
sbbl
adc
dec
sti
push
sub
or
std
in
jecxz
bound
shrl
cmp
rorl
mov
dec
js
movsl
mov
jg
pushf
outsb
adc
jge
test
adc
inc
push
divb
jmp
testl
stos
out
lds
fsubrs
rorb
jb
xchg
mov
cld
cmp
adc
push
icebp
stc
lods
mov
mov
push
xchg
aad
sub
cmp
out
push
out
adc
xlat
sbb
lods
mov
scas
xchg
lods
js
add
push
add
int3
pop
mov
dec
mov
lret
cmp
fstps
cld
inc
push
xchg
inc
stos
popa
fldcw
sar
push
or
cli
lds
xor
fmul
inc
jle
push
jp
pop
es
xchg
movsb
mov
sub
dec
mov
std
out
negl
outsl
scas
outsl
in
enter
test
imul
push
in
sub
add
mov
aas
add
aam
add
jo
mov
pop
jbe
inc
sub
inc
cld
lret
and
mov
dec
xor
inc
add
push
adc
mov
int
shl
mov
inc
std
pop
adc
adc
dec
loop
mov
xchg
dec
cmp
sbb
mov
dec
ja
push
dec
les
lret
inc
ja
hlt
lock
loopne
add
popa
xchg
xchg
adc
repz
out
and
sti
imul
mov
cmp
lock
movsl
adc
jge
jno
jge
sub
clc
cmc
or
clc
lcall
jle,pn
xor
icebp
in
fs
in
xchg
shrb
or
or
leave
xor
daa
pop
xchg
xchg
sti
data16
mov
pop
ds
inc
and
pop
jno
or
cmp
pop
sbb
aas
push
data16
pop
push
sarb
cmp
jle
fwait
xchg
or
dec
pop
push
out
sbb
adc
mulb
pushf
mov
adc
imul
or
mov
push
nop
std
sbb
or
xor
aam
or
movsl
pop
gs
jmp
mov
xor
xor
nop
aam
sub
cmp
repnz
pop
cld
scas
push
mov
repnz
pop
cltd
cltd
sti
jl
add
xor
add
mov
add
adc
pop
pop
xor
inc
mov
cmp
xor
loopne
mov
pop
or
sub
lcall
jl
sbb
pop
fimuls
or
pop
insb
icebp
mov
push
push
popl
dec
hlt
pushf
repz
jno
loopne
addr16
adc
xchg
xchg
notl
push
push
and
push
leavew
jbe
inc
or
or
mov
mov
movsb
mov
nop
lcall
mov
inc
fcoml
inc
icebp
pop
dec
mov
and
add
mov
jo
dec
xchg
sbb
push
pop
mov
pop
enter
jg
push
jns
outsl
ss
lods
fsubr
pop
pusha
icebp
dec
push
adcl
mov
push
jmp
in
sarl
xchg
enter
pop
push
adcl
lahf
and
test
push
movlps
sub
push
jno
cmpsl
cld
adc
jmp
inc
ret
mov
out
stc
insl
cmp
sbb
mov
dec
add
repnz
pop
fsubl
aas
into
lret
loope
into
adc
data16
ss
mov
jns
or
arpl
dec
jmp
jne
add
push
mov
pop
mov
cli
in
xchg
add
sub
aas
pop
and
std
test
rol
fldt
hlt
es
imul
loope
adc
xor
lock
push
gs
jne
dec
dec
sahf
push
mov
ss
sub
mov
outsl
in
sbb
or
mov
mov
inc
stc
movsb
pop
shr
ds
inc
stos
hlt
addr16
in
lcall
pop
inc
jnp
fmull
fldenv
jne
add
or
cmp
mov
and
lahf
das
adc
inc
and
mov
shlb
cmp
sahf
push
inc
xchg
repz
and
dec
jne
sbb
cmc
push
fistpll
cli
fimull
inc
jmp
sub
add
orb
xchg
lret
cli
ljmp
sbb
outsb
loope
loope
in
pop
xchg
out
mov
mov
ljmp
pop
subl
fwait
arpl
add
mov
inc
cld
mov
out
das
xor
adc
mov
cmp
out
sbb
pop
pushf
xor
push
xchg
jo
sbbl
mov
pop
fcomip
mov
adc
out
shll
sub
icebp
sbb
in
xor
lds
lahf
stos
xor
test
pop
xchg
cmp
mov
xchg
mov
bound
es
mov
test
fisubrs
cli
and
icebp
sbb
push
pop
gs
mov
shrb
sub
jmp
out
lret
into
fcomps
setg
inc
add
cmpl
cli
mov
arpl
ja
fidivrl
ds
jmp
xchg
xchg
lods
jbe
inc
cmp
or
jmp
mov
mov
in
or
mov
mov
push
and
pop
cs
xchg
popa
push
sub
fdivrl
mov
add
xor
push
jecxz
test
xchg
xor
fdivrs
adc
dec
push
add
js
call
call
mov
lcall
mov
negb
aam
dec
ret
loop
dec
insl
push
test
push
jmp
addl
ds
int3
jae
loope
rcl
mov
xchg
je
cmp
mov
jg
mov
lret
fs
cwtl
es
dec
fisttps
nop
jecxz
shlb
loope
fdivl
dec
cmpb
cmovg
xor
pop
sub
mov
cmp
jle,pt
xor
xchg
add
cmpsb
cmp
sub
xchg
mov
inc
insl
mov
mov
mov
jo
dec
dec
fildll
cmp
and
push
cltd
pusha
lret
lahf
mov
test
ljmp
jge
sub
inc
and
shlb
fbld
pushf
mov
loop
nop
jne
and
test
gs
ficomps
iret
mov
cmp
xchg
outsl
aam
aam
xor
cmp
dec
aaa
es
stos
bound
fcoml
add
inc
mov
lcall
push
cmp
fbstp
pushf
push
pop
das
in
pop
or
arpl
add
sbb
ret
sub
mov
dec
push
sbb
cs
call
mov
in
rcl
paddsw
clc
faddp
add
out
ds
mov
in
jge
repnz
inc
or
mov
mov
jecxz
outsb
nop
sub
in
add
fidivrs
movsb
test
lahf
jg
addl
cmp
sub
xchg
jbe
cwtl
fildll
pop
jl
adc
jl
jno
fildll
cmpsl
or
mov
xchg
repnz
outsl
sbb
lods
add
test
cli
nop
aaa
lock
and
jb
and
arpl
comiss
je
sub
xchg
inc
add
aad
fcmovnu
sbb
stc
test
xor
test
lods
mov
adc
test
ja
call
mov
aas
movsl
mov
lahf
push
inc
dec
mov
test
mov
inc
iret
push
cwtl
inc
fcmove
sbb
cmp
mov
push
sbb
mov
daa
mov
call
pop
std
pop
sti
cmpsb
ret
pop
daa
imul
cld
sbb
push
loop
ficoml
imul
mov
lock
cli
clc
mov
lods
or
mov
js
xchg
ljmp
inc
push
repz
push
mov
cmp
sbb
call
test
mov
xchg
scas
inc
cwtl
stos
stc
pop
push
xlat
or
ror
push
loop
mov
mov
xor
pop
cmp
jg
dec
test
jb
sbb
div
inc
jbe
data16
lds
dec
insl
sbb
jl
js
daa
mov
jmp
mov
cli
dec
cmp
or
and
mov
lret
add
xchg
cmp
data16
lods
aad
icebp
fidivrl
xchg
push
add
nop
jnp
mov
mov
out
adcb
adc
push
pop
test
jp
cli
js
cmpsl
mov
imul
push
cwtl
mov
sbb
lret
fsubr
adc
cld
xor
mov
jge
sbb
out
cld
inc
fsubp
pusha
in
dec
and
stc
or
fsubl
lea
adcb
popa
cmc
stos
pop
out
jne
mov
repnz
adc
push
arpl
push
sub
pop
mov
mov
popf
mov
and
add
adc
into
mov
aad
mull
mul
sbb
xchg
enter
repz
mov
ret
mov
sbb
jp
mov
push
rcll
icebp
sub
push
jo
xchg
bound
call
je
jno
ds
cmp
cli
push
mov
call
cld
mov
sbb
sbb
lret
xor
movsb
out
in
test
push
leave
rorb
call
ret
leave
jp
mov
pop
rolb
dec
cmc
aam
lea
push
movsl
inc
imul
cmp
in
nop
cld
mov
xor
mov
jno
sbb
imul
xor
negb
inc
cmc
daa
add
lcall
push
inc
sbb
stos
fs
jle
roll
movsl
sbb
pop
fpatan
imul
inc
into
mov
lock
mov
push
sbb
orl
stos
mov
xor
pop
push
push
mov
movsb
mov
push
aaa
push
dec
pop
or
inc
xchg
in
repz
adc
fsubl
xor
pop
pop
lret
sub
rorl
and
in
push
out
xor
fnstenv
lods
outsb
pushf
pop
push
pop
gs
push
shl
test
adc
add
and
movsl
adc
loopne
mov
orb
scas
xor
add
rcrl
sbb
dec
fdivrl
xor
fxch
gs
pop
sub
lahf
stc
mov
daa
or
mov
fisubrl
mov
dec
jno
mov
xchg
icebp
mov
pop
mov
testl
push
mov
cld
push
pop
ret
xor
and
fcoml
loop
mov
mov
pop
icebp
ds
aas
sbbl
rorb
sub
mov
and
dec
and
and
jmp
aaa
jl
lods
sbb
aaa
fs
xchg
imul
push
jle
jae
test
dec
shrl
dec
sarb
sarb
dec
sbb
dec
dec
pusha
xchg
adc
fdiv
out
jg
repz
xchg
xor
xchg
and
or
cmpsl
xchg
sub
add
sti
outsl
sti
bound
mov
xor
mov
inc
mov
lods
mov
xchg
and
mov
cmp
push
ds
stos
mov
ljmp
repz
cld
divb
shrl
dec
sbb
fwait
ss
inc
jmp
xchg
mov
cmc
fs
mov
int
test
sbb
add
stos
push
mov
xchg
or
push
add
or
pop
and
incl
adc
push
ret
cmp
sub
andl
out
mov
pop
jge
jmp
mov
lcall
lret
loopne
aas
or
xor
int3
int
push
pushf
les
dec
testl
bound
xchg
ror
mov
or
in
push
rcll
sbb
fisttps
cs
push
dec
mov
adc
and
mov
lods
les
dec
pushf
jmp
movsb
sbb
push
push
aam
jne
sarb
testl
out
icebp
test
mov
mov
xchg
push
fsubl
jo
loopne
mov
add
test
popa
mov
movsb
lcall
push
fstp
dec
test
push
cs
filds
jl
insl
inc
pop
add
xchg
pop
mov
adc
cmovne
mov
push
and
xchg
push
mov
adc
mov
push
insb
cmpsb
inc
cltd
mov
stc
cs
dec
mov
test
rolb
xor
rolb
pushf
sarl
jmp
test
mov
dec
in
xchg
and
mov
mov
mov
mov
sahf
pop
in
and
sub
jle
xlat
lods
add
mov
in
add
add
jl
scas
repnz
ret
mov
mov
jecxz
orb
jle
adc
repz
fbld
std
sti
ds
out
jmp
adc
stc
adc
jg
pop
mov
test
rcrb
jecxz
test
mov
fidivl
int3
jno
adc
sbb
lret
dec
aad
enter
or
xchg
icebp
push
ret
std
iret
insl
jo
jnp
and
imul
mov
sub
fiaddl
imul
jg
lcall
cwtl
fbstp
lahf
lcall
cs
mov
push
mov
sub
movsb
cli
mov
fimull
push
sbb
cwtl
adc
leave
cltd
mov
incb
and
loopne
loopne
dec
jle
add
jnp
stos
mov
xor
inc
xlat
sbb
jno
ja
xor
outsb
mov
out
mov
dec
adc
pop
sahf
dec
pop
aam
out
sub
ret
or
clc
inc
js
adc
mov
lods
dec
shlb
xor
les
dec
mov
and
ret
mov
inc
mov
ret
dec
nop
mov
or
lahf
cltd
cmp
pop
mov
adc
cmpb
add
leave
stos
xchg
pop
outsb
sub
jae
adcb
push
stos
jle
mov
ds
popf
loope
mul
fistl
push
sub
bound
movl
add
and
jl
push
xchg
jl
inc
loope
imul
mov
out
addr16
cmp
xor
pop
or
sbb
jns
dec
fs
pop
aam
adc
fwait
mov
rcrl
scas
sarl
and
or
mov
or
cwtl
pop
ds
and
test
mov
dec
ffree
jmp
cmp
adc
ret
cltd
mov
leave
andb
imulb
push
or
in
pop
mov
insb
mov
adc
data16
rolb
push
test
aam
mov
push
inc
repz
push
cmp
lock
add
sub
mov
xchg
lret
sti
cmp
mov
fwait
inc
mov
push
sahf
and
push
inc
sbbl
aaa
xchg
sbb
dec
xchg
fildl
push
sahf
fwait
mov
bound
call
test
mov
fdiv
cwtl
jmp
cmp
in
orl
inc
cli
jno
dec
cli
push
inc
je
xor
mov
push
ds
and
cmpsb
mov
outsb
push
xor
sub
dec
xor
out
mov
rcr
mov
add
or
rol
mov
dec
mov
add
pusha
popa
addl
push
jae
cld
push
repnz
jp
ja
mov
mov
mov
lock
lret
stos
and
int3
es
addl
fdivl
mov
sahf
xor
hlt
sbb
shlb
sub
int
inc
xchg
inc
imulb
push
mov
adc
cmp
add
aas
stc
cmovg
ret
loope
push
daa
add
jbe
les
ret
xor
loope
mov
jb
inc
pop
ret
into
inc
into
inc
movb
and
test
jnp
jle
aad
clc
or
xlat
jne
sbb
dec
cmp
mov
std
adc
dec
into
add
cmp
inc
js
mov
inc
sub
push
mov
xchg
icebp
xor
dec
data16
xchg
cmp
jp
mov
xchg
jle
ror
scas
mov
inc
mov
pop
sbbl
xor
fisttpl
lods
lret
fdivr
popf
aas
xchg
lcall
sub
xchg
inc
aam
les
das
repnz
pop
cltd
imul
mov
mov
clc
xor
in
jno
pop
mov
xor
jecxz
flds
pop
add
bnd
jl
dec
sahf
mov
mov
shll
push
int
mov
jmp
ljmp
cmpb
dec
pop
and
cmp
loope
cmp
jp
mov
push
rcll
and
push
fucom
mov
add
xor
cs
hlt
fwait
mov
daa
fidivs
push
or
pusha
adc
sbb
loope
jmp
std
mov
xor
cmp
jo
mov
push
insb
mov
mov
scas
jbe
gs
mov
jecxz
fisubl
std
cmpsl
pusha
pop
jno
xchg
pop
and
into
mov
aaa
jbe
lods
iret
push
xor
inc
jmp
mov
fwait
sub
daa
fs
lret
xor
inc
mov
mov
loope
sbb
stos
xchg
jae
out
push
mov
dec
sbb
ljmp
jns
xchg
cmp
jns
cwtl
pop
sbb
mov
mov
ffree
ss
outsl
enter
bound
adc
fmul
xchg
sbb
add
mov
sub
mov
test
loope
mov
fldcw
and
dec
sbb
aaa
pop
ret
repz
dec
mov
dec
jle
jae
icebp
outsb
cld
mov
cmp
rorl
mov
dec
pop
push
jle
aaa
ljmp
cmp
sbb
shll
cmp
jp
cmp
andl
push
mov
ficomps
xchg
sub
rcrb
fs
xchg
cld
imul
ficomps
and
jg
hlt
dec
xor
mov
movsl
shll
dec
and
lcall
or
ss
imull
push
idivl
inc
jb
mov
lret
xor
mov
jecxz
push
push
and
mov
jecxz
xor
sub
stos
stos
jae
cli
add
pop
cmpsl
data16
test
cmp
sub
cmpsb
add
iret
clc
ds
push
lahf
xchg
and
mov
adc
jb
addl
inc
mov
mov
mov
push
out
mov
cmc
push
sbb
pop
sbb
bnd
int3
data16
xchg
cmpsb
jae
sbb
jne
adc
shl
sub
sub
pusha
inc
pop
sti
xor
push
js
popa
int3
pop
xchg
dec
cmp
ret
mov
outsb
mov
popa
decb
push
scas
int
push
sbb
cld
cmp
imul
xchg
jmp
sub
jno
icebp
push
shll
mov
sti
stc
pop
adc
addr16
xchg
pop
data16
dec
nop
push
jmp
mov
rcrb
mov
dec
xchg
ret
shl
push
or
insl
test
stos
and
aad
cmc
lea
icebp
stc
dec
mov
inc
mov
push
lahf
adc
cmp
fwait
sbb
pop
xchg
clc
mov
scas
frstor
sub
sbb
mov
pop
cs
loope
lods
stos
mov
fidivs
in
loope
cmp
sub
xor
sub
in
add
push
mov
xchg
enter
mov
and
pop
add
cmp
pop
inc
sbb
cmc
mov
mov
push
sti
mov
bound
add
and
enter
xchg
xchg
jmp
hlt
jg
int
xlat
mov
out
ja
aas
negb
mov
icebp
jg
ja
ljmp
inc
push
mov
das
test
inc
push
std
lock
sub
sti
lcall
lahf
push
push
cwtl
and
and
cmp
pop
js
or
xchg
gs
mov
aam
aad
jno
jmp
nop
cmp
or
enter
imul
cmp
in
mov
repnz
ret
js
fwait
xchg
lods
mov
call
jbe
shrl
data16
and
imul
mov
and
cmc
movsl
fistpll
mov
cs
lea
mov
test
stos
in
jecxz
test
and
fildl
insl
mov
popf
hlt
jmp
ficompl
sti
iret
loop
mov
stos
stc
pop
or
adc
sbb
xlat
shrb
push
iret
sub
lcall
push
fsts
shll
lods
jle
xchg
jp
fldt
mov
and
lea
leave
xchg
cmpsl
pop
ficompl
pop
inc
xchg
xor
fdivrs
clc
sub
dec
cmp
repz
ret
mov
ffreep
push
outsl
push
aaa
push
out
pop
mov
sbb
les
int
add
jmp
icebp
add
loop
push
fisttps
mov
add
out
cmc
test
fnstsw
aas
cld
in
enter
stc
shrl
arpl
dec
sbb
clc
dec
insb
aam
jbe
imul
sbb
fsub
enter
fcoml
dec
push
xchg
pop
divl
dec
add
dec
mov
in
shr
jle
mov
pop
divl
jnp
hlt
ljmp
sub
cmp
push
rcll
int3
in
les
mov
mov
push
xor
insl
clc
push
add
mov
sub
xchg
jne
ss
stc
push
aaa
sbb
and
rcrl
sahf
cmp
add
push
testb
cltd
in
dec
bnd
mov
jbe
mov
mov
in
lea
clc
xchg
ficoml
mov
out
xor
mov
mov
jo
dec
mov
ss
mov
ds
jo
fbstp
push
xchg
adc
xor
or
xchg
dec
cmp
sub
es
jp,pt
pop
and
inc
mov
add
inc
cmp
sbb
inc
je
mov
inc
ss
aas
sbbb
and
pushf
popa
scas
stc
mov
adc
adcl
cli
mov
lods
pop
mov
fwait
or
pop
jecxz
das
ret
mov
repz
mov
push
jae
adc
pop
js
insl
std
shlb
lock
dec
jae
mov
mov
jmp
mov
call
stos
cwtl
test
xor
dec
inc
mov
sbb
out
sbb
mov
repz
adc
nop
jl
stos
push
xchg
or
or
inc
rcrb
cltd
push
flds
dec
dec
out
aad
dec
mov
clc
or
cltd
and
pop
xor
push
xchg
ja
cmp
mov
outsb
jl
loopne
xchg
xchg
repnz
jge
call
mov
add
je
fidivs
dec
xchg
inc
mov
jge
inc
add
das
pop
in
fwait
sub
lock
jb
jmp
cltd
or
mov
adc
mov
add
out
sbb
ror
notl
mov
push
xchg
ja
and
sahf
addr16
es
xor
or
or
andb
push
fnsave
jbe
lret
imul
das
sub
inc
fisubrs
adc
cwtl
ficoms
xor
jge
pop
sub
mov
imul
add
jne
mov
or
call
sub
dec
add
add
sub
mov
cmpsb
inc
adc
or
sbb
sub
mov
add
xchg
jnp
pop
xchg
test
adc
test
mov
xor
fildll
xor
adc
add
or
imul
test
stos
cwtl
add
cmp
cwtl
xchg
push
jo
mov
imul
add
es
mov
jp
pop
in
shl
ret
sub
pop
dec
jns
fwait
jmp
fs
mov
mov
or
inc
lea
repz
movsl
push
xor
rol
or
inc
fstpt
pop
xchg
mov
dec
insb
popa
push
sbb
scas
loopne
das
fistpll
sub
jno
arpl
aam
ror
icebp
pop
mov
cmp
xor
pop
mov
ljmp
sub
jecxz
xor
shrb
out
sub
dec
add
out
cmp
popa
or
pusha
push
push
jp
cmp
pop
nop
push
push
xchg
call
loopne
mov
adc
stc
or
fwait
bound
push
inc
scas
dec
mov
add
movsl
adc
cmp
dec
jne
data16
icebp
xor
pusha
loop
imul
mov
loopne
iret
cmp
lock
or
pop
nop
and
fmuls
mov
lods
clc
dec
negl
aam
adc
daa
jecxz
lock
enter
push
xchg
pop
mov
or
out
pop
daa
add
mov
popf
cli
and
adc
addb
pop
shll
or
jg
adc
into
push
loop
push
inc
sahf
mov
shll
mov
cltd
pop
push
mov
or
mov
inc
js
jle
fwait
das
popf
xlat
dec
ret
and
pop
pushl
imul
imul
das
bound
stos
add
jmp
cld
dec
sbb
stc
dec
mov
xor
mov
mov
pusha
cmpb
pop
or
jmp
jmp
mov
or
aaa
cmp
lock
stc
ficoms
imull
stos
dec
jecxz
popa
xchg
lahf
popf
jne
cs
out
xor
lahf
pop
movsl
xchg
push
xchg
je
cli
movb
sahf
add
mov
loopne
imul
jp
mov
cmp
sbb
scas
pop
daa
sahf
out
mov
popf
inc
xchg
push
call
pusha
fisttpll
les
hlt
lea
add
sti
ret
in
rolb
sbb
arpl
add
dec
hlt
sbb
lahf
imul
ja
ds
fs
cltd
dec
pop
dec
fistpll
xchg
dec
push
out
inc
xchg
in
loop
cwtl
push
imulb
dec
xchg
push
adc
int
jbe
pop
lods
test
lock
inc
je
pop
cs
sub
push
fnsave
sub
stos
cmc
add
and
shll
inc
aad
cmc
mov
cmp
add
mov
or
gs
hlt
repz
mov
dec
xchg
cli
mov
push
andl
outsb
out
sbb
stos
jae
xchg
out
mov
adc
stos
add
pop
push
outsl
sub
sbbb
loop
pusha
xchg
sub
imul
mov
sbb
hlt
lret
repz
lock
sbb
ja
pop
in
test
jmp
or
test
xor
xchg
xchg
dec
dec
into
pop
lock
or
shlb
aam
or
sbb
xor
fs
stos
cltd
cltd
in
es
ja
pushf
cmp
sahf
cmpsl
daa
mull
andl
in
xor
adc
gs
scas
fsubrl
cmp
inc
jmp
fbld
stc
cs
xchg
mov
and
pop
rcr
loop
mov
mov
xchg
leave
xchg
hlt
movsb
fs
xchg
int3
fisubrl
repnz
xor
pop
test
in
clc
dec
xor
push
pop
test
xlat
jne
or
and
jno
bound
mov
imul
lret
xor
mov
jg
xchg
loop
and
push
add
jge
ss
jp
sub
and
in
cmpb
pop
dec
mov
fadds
inc
inc
das
adc
cmp
or
pop
and
add
inc
or
jle
add
les
lock
ja
loopne
cs
push
cmp
stos
pop
xor
and
je
insb
push
fldz
cmp
and
aam
mov
sbb
ljmp
jp
push
inc
pop
or
inc
into
or
fcoms
mov
out
or
mov
jae
in
jecxz
leave
loope
in
cmp
dec
rcl
inc
das
stos
push
pop
mov
sbb
insb
xor
push
dec
test
cmp
in
mov
xchg
mov
xor
jae
and
push
shlb
and
lock
mov
clc
inc
stos
clc
dec
sbbb
or
adc
add
or
dec
out
adc
pop
or
fidivrl
pop
cmp
bound
cli
in
aad
jecxz
lods
fbstp
ja
inc
subl
dec
sbb
notl
mov
cmp
mov
adc
ja
cmp
hlt
jmp
lea
jl
jno
xor
nop
mov
enter
std
lods
mov
dec
in
lret
rorb
jp
jo
xlat
in
jo
in
das
cmp
xchg
fsubl
scas
int3
lea
hlt
pop
test
cli
cmp
pop
mov
sarl
int3
rolb
mulb
lds
cli
mov
pop
push
xor
inc
inc
stos
jge
cltd
test
vcvttpd2dqx
xor
push
and
icebp
dec
xor
jge
adc
adcl
inc
cs
int
xchg
rolb
mov
adc
push
loopne
loope
sahf
insb
sbb
mov
mov
mov
fcmovne
aaa
mov
add
decl
lret
mov
dec
and
dec
lea
xor
and
mov
stos
je
xchg
imul
inc
pop
stos
enter
in
inc
out
or
ja
push
sbb
je
push
inc
pushw
inc
mov
mov
jb
sub
lcall
lds
jbe
xchg
rcrl
sub
fwait
jg
rclb
adc
mov
arpl
dec
jnp
dec
cli
loop
cmpl
lcall
stos
rol
sarl
call
mov
pop
imul
stos
mov
mov
ljmp
inc
push
mov
daa
fmul
nop
dec
cld
fsub
enter
pop
lahf
int
nop
scas
inc
loop
push
fwait
push
push
fisttps
ds
dec
pop
pop
mov
testb
in
js
stos
aaa
in
and
fcompl
pop
or
imul
into
mov
in
inc
scas
aas
dec
push
jl
cmp
mov
call
jl
adcl
movsl
gs
loopne
mov
subl
test
jno
nop
loope
and
xor
inc
xor
cmp
mov
popa
orl
test
mov
mov
mov
lahf
jo
mov
and
pop
sahf
rclb
test
add
cli
jg
lcall
gs
jp
and
mov
dec
jge
cmp
sub
pop
and
inc
jae
cmp
or
inc
add
fcomps
dec
mov
test
inc
aam
sbb
dec
add
sbbb
cmp
pop
mov
inc
push
inc
pushl
imul
ret
adc
into
fisubrl
sarl
std
or
adc
vpmulhuw
add
pop
test
icebp
ss
ja
mov
ficoms
lods
mov
insl
jae
jb
adc
mov
pop
add
xchg
test
sbb
aaa
inc
xor
icebp
aam
and
jmp
dec
leave
push
mov
add
cli
cmpb
add
fdivs
stos
cmpsb
jb
push
and
fs
xor
cmp
push
scas
in
std
xorl
cmp
push
mov
push
mov
mov
clc
test
push
pushf
mov
scas
in
and
movsl
xor
mov
xlat
into
push
gs
scas
xor
leave
inc
out
das
cltd
mov
mov
dec
mov
mov
push
outsb
enter
ds
push
ljmp
loop
mov
xor
inc
dec
daa
inc
dec
adc
xchg
adcl
int3
pop
mov
adcb
xchg
mov
xorb
pop
mov
xor
inc
jl
aad
ds
shlb
outsl
addr16
jo
and
xchg
cmc
sbb
xchg
es
cmp
push
insb
jl
sbb
cmpsb
int
gs
shll
popa
mov
pop
gs
mov
call
outsb
jmp
mov
mov
xchg
inc
sub
cmp
lods
inc
add
mov
cmc
imulb
stos
test
sbb
scas
fpatan
mov
sub
daa
les
add
xor
popa
jmp
fdivl
cwtl
xor
pop
xlat
mov
sub
test
lds
jg
pop
sub
mov
inc
js
rolb
or
sbb
fsub
mov
xchg
inc
fisubrl
ds
test
rclb
icebp
call
inc
pop
sbb
dec
dec
rcll
add
sbb
pop
or
xor
in
clc
cli
and
test
popa
cltd
pop
mov
push
mov
mov
pop
cmpsl
cmpl
jo
je,pt
fs
mov
fisubs
ds
jae
add
dec
fisttpl
cmp
push
mov
dec
inc
jp
cmpsb
sub
test
movl
hlt
sbb
daa
pusha
in
or
add
xor
sbb
mov
rol
aaa
sti
aad
es
lea
adc
sbbb
mov
shr
rclb
push
adc
cmc
cmp
pusha
push
adc
out
push
mov
into
in
push
in
incl
push
cld
and
push
das
xor
cmp
push
mov
cmp
push
out
ret
test
data16
xchg
orb
sahf
pushf
lret
pop
into
jb
aam
aad
movsl
mov
xor
lahf
mov
xlat
insl
cmp
push
inc
jne
add
shll
mov
push
xchg
or
std
inc
jmp
or
or
mov
jns
mov
sbb
outsb
cmp
jnp
aam
imul
iret
cmc
mov
ja
xchg
cs
sub
mov
xor
outsl
or
push
stos
iret
xor
ror
je
inc
or
push
lret
cmpl
lods
ljmp
mov
fucom
push
inc
repz
jo
stos
sbb
aad
mov
jbe
xchg
jmp
or
sbb
inc
fimull
lds
aas
gs
cmc
sub
mov
cli
mov
dec
push
push
jge
xor
mov
enter
pushf
stc
cmp
sbb
jp
xor
push
mov
enter
nop
pop
shrl
lock
in
roll
pop
mov
or
pop
inc
ja
out
imul
inc
mov
pop
xor
push
rcrl
mov
push
ret
sahf
in
jmp
out
scas
jmp
ret
aas
mov
jns
clc
sub
add
cmp
inc
cwtl
pop
sahf
dec
outsl
mov
cwtl
sahf
fs
cwtl
push
pop
and
or
inc
clc
or
add
insb
cmp
pop
sub
faddl
mov
imull
or
sbb
addr16
jnp
stos
push
jge
das
add
cmpsb
fists
jle
scas
enter
xchg
push
sbb
mov
sbb
data16
nop
fisubs
sbb
inc
icebp
pushf
adc
add
xor
inc
sbb
jnp
xchg
sub
dec
popf
popf
aad
cli
les
sti
xchg
orb
mov
ficomps
or
mov
dec
push
in
or
out
sub
nop
fcomps
pop
pop
mov
shld
jno
cmp
mov
mov
divl
outsl
jns
jne
mov
pop
add
cmp
mov
pop
mov
les
jnp
in
adc
jbe
add
in
sub
xchg
out
push
and
mov
xchg
adc
pop
xorl
lods
sbb
shll
lahf
mov
cmp
lea
in
dec
jnp
mov
sbb
and
jb
clc
dec
push
in
sbb
scas
fstl
arpl
push
and
xchg
in
mov
lret
sub
mov
jns
loopne
cmpsl
and
cmp
scas
sbb
mov
aas
pcmpgtd
stos
mov
sbb
xchg
jb
cmc
bound
jp
and
xchg
sub
sub
or
arpl
and
and
mov
cmp
loop
jb
lds
ss
sub
xchg
xchg
add
xchg
fcmove
jmp
in
je
adc
call
jle
inc
mov
ljmp
testb
lods
push
shrl
push
daa
sbb
mov
bnd
out
xor
xor
shrl
sub
test
xlat
das
lret
and
inc
out
mov
ljmp
daa
fwait
pop
add
outsb
stc
sbbb
push
mov
addr16
pop
sbb
hlt
sbb
push
adc
sarl
mov
xchg
cwtl
mov
popf
xor
jle
mov
ret
xchg
in
sub
shll
inc
dec
test
inc
ficoml
jmp
pusha
ret
ret
lds
loop
test
xchg
dec
sub
insb
mov
mov
in
nop
dec
loop
cmp
xchg
push
das
pop
loop
enter
std
or
rol
mov
push
mov
out
cmp
and
es
cmpsl
lret
cmp
sahf
frstpm(287
loope
repz
loop
addr16
jnp
mov
ss
xchg
pushf
add
push
icebp
push
fnstsw
inc
gs
mov
lods
scas
pop
jne
xor
iret
jns
xchg
fisttpll
test
xchg
sbb
inc
in
jb
arpl
mov
sub
mov
mov
dec
pop
add
cmpsb
std
mov
jno
xchg
out
mov
inc
sbb
pop
vcvtsd2si
lds
out
js
clc
je
test
fstpt
xchg
lret
xor
stos
outsl
in
das
xor
add
add
or
xor
movb
hlt
inc
pushf
fistl
mov
hlt
lahf
mov
mov
pop
outsb
jo
xchg
mov
lods
sahf
jp
jle
jns
sbb
popf
pop
xchg
or
test
popf
iret
dec
pop
adcl
xchg
mov
jmp
les
cmpsl
lret
insb
push
gs
jle
fmull
in
aad
push
into
pop
sbb
rorl
outsl
or
addr16
adc
sbb
dec
in
adc
push
sub
mov
add
rcrb
shl
ficompl
fdivs
ret
jg
pop
xchg
cmc
cmp
add
jno
dec
inc
or
push
cmp
dec
and
cmc
inc
dec
inc
mov
in
jg
jns
push
push
mov
push
lds
les
dec
dec
add
inc
test
pop
mov
data16
mov
stos
mov
std
and
inc
lods
dec
loope
cs
aas
jae
and
push
fnsave
or
sub
xchg
or
xlat
loope
push
mov
mov
leave
add
sbb
pop
cs
pop
pushf
sahf
lcall
repz
add
jo
out
sarb
xchg
enter
push
dec
lods
ja
cmpsl
jnp
pop
lock
repz
shll
sub
std
das
dec
mov
imul
mov
mov
not
lcall
in
loop
sbb
xchg
push
mov
or
test
lahf
shl
jb
das
sub
adc
in
dec
pop
sub
adc
xchg
pop
cmp
clc
xchg
rorl
fsubrs
neg
test
rorl
or
push
outsb
movsb
sbb
adc
xchg
adc
lret
in
divl
and
cltd
dec
sbb
jae
fistpll
sbbb
or
pop
outsb
insb
cmp
movsl
xchg
add
cmp
push
in
mov
sub
movsb
insb
movsb
push
jp
or
cld
dec
imul
xlat
adc
push
out
push
leave
aad
es
and
jnp
fbld
push
pushf
xchg
int3
imul
mulb
test
das
mov
arpl
loop
adc
jnp
inc
insb
dec
push
enter
jnp
mov
into
faddl
hlt
fsubl
pop
pop
hlt
add
popa
neg
fwait
iret
sbb
out
pop
shrb
mov
dec
adc
fsubs
fadds
popf
test
scas
inc
and
sub
call
leave
mov
xchg
adc
lds
in
outsl
inc
sbb
add
sub
sar
xchg
mov
mov
jmp
or
sbb
mov
and
dec
sub
mov
mov
dec
push
mov
jmp
xlat
je
test
jno
xchg
xchg
and
pop
imul
sub
adc
push
dec
mov
dec
lcall
or
sub
arpl
add
in
stos
sahf
xchg
cs
add
xor
and
adc
std
mov
addl
std
push
stos
fcoms
cmp
mov
push
addr16
inc
roll
out
cmp
xor
push
push
pop
fwait
jno
movsl
xchg
sub
jle
insb
pusha
in
cmp
es
loope
repnz
into
iret
loope
les
push
in
mov
hlt
lds
scas
dec
jle
sbb
push
pop
ret
push
je
cwtl
aad
ljmp
rolb
aam
mov
lret
or
xchg
pop
dec
mov
divl
or
sbbl
mov
lea
push
loopne
movsb
aaa
cmp
mov
sti
pop
or
mov
std
ljmp
and
fwait
cmpsl
testb
add
adc
add
and
inc
push
cmpsb
aas
adc
in
push
push
dec
jg
inc
jmp
int
je
pop
jg
cmc
repz
mov
data16
sarl
dec
ret
js
out
mov
and
adc
mov
xchg
mov
adc
cmp
inc
pop
aas
sub
inc
cmc
mov
and
clc
adc
xor
lock
push
jl
add
popa
stc
adc
sahf
ljmp
leave
jnp
jns
jp
dec
lds
repz
hlt
aaa
push
testb
fs
mov
mov
in
mov
setg
cli
rol
lods
xor
test
xchg
mov
cmc
insb
je
imul
mov
cmpb
sub
decb
ret
mov
loopne
pop
dec
inc
or
cmpsb
fdivs
add
xchg
ss
sbb
popa
cmpsl
shlb
pop
test
and
iret
mov
sub
out
mov
sbb
and
test
push
or
inc
jo
addr16
clc
dec
fstpt
jmp
mov
fmull
outsl
xor
or
and
add
pop
into
loop
hlt
xchg
dec
cmp
sub
test
lock
stos
hlt
xchg
xchg
inc
mov
les
pop
adc
or
push
rorl
xchg
sbb
push
lea
or
fsubl
imul
push
jp
adc
inc
sbb
pusha
leave
xor
mov
sbb
movsl
push
fucom
mov
addr16
mov
cmp
sub
push
mov
jecxz
out
cmpsl
out
nop
inc
inc
inc
or
std
cwtl
xchg
jle
cmpsl
pop
sbb
pushf
cld
and
and
cmp
int3
cs
gs
or
mov
test
push
lock
repz
js
jno
into
lock
pop
js
lahf
mov
xor
negb
out
cmp
inc
repz
jmp
dec
mov
call
mov
push
dec
std
popf
rcl
jb
in
xchg
addr16
in
pop
outsl
or
add
aaa
jne
adc
inc
xchg
je
out
jbe
pop
subl
pop
and
push
mov
jns
sub
out
sub
int
push
sbb
inc
out
sub
inc
aad
inc
ss
fbld
das
ljmp
pop
mov
fcoms
mov
inc
sbb
cmp
imul
repnz
pop
das
fildl
sub
sub
pop
xchg
cmpl
pop
xor
int
imul
push
repz
shrl
and
jge
fwait
adc
mov
hlt
ret
das
pop
xchg
and
es
bound
jnp
and
imul
cmp
xorb
ljmp
mov
sub
mov
fwait
roll
dec
call
jge
loopne
lea
aad
dec
pushf
jno
imul
adc
call
jno
pop
roll
adc
scas
mov
sub
inc
orl
mov
test
or
js
pop
jecxz
push
cld
nop
lahf
popf
rorl
or
ja
mov
mov
and
and
movsb
xor
xchg
mov
jbe
pusha
sti
fwait
lds
mov
and
xchg
push
popf
cmp
lret
out
lds
adc
fisubrl
push
cli
add
sti
cmp
sbb
les
out
mov
cmpsl
jno
xchg
jne
leave
lods
cmc
add
fildll
movsl
mov
mov
push
test
scas
push
call
icebp
insb
mov
or
ret
das
pop
inc
pop
mov
inc
mov
repnz
stos
shr
jbe
adc
inc
imul
leave
pop
dec
and
sahf
aas
cltd
jns
aaa
pop
mov
ss
shlb
dec
xor
stos
mov
push
add
jmp
sbb
or
stos
addr16
out
add
pop
addr16
cmpsb
pop
or
push
addr16
incb
and
arpl
inc
mov
jle
jl
sub
dec
out
stos
addr16
and
test
adc
add
cli
xor
xlat
sub
shll
dec
cmp
stos
mov
cmpsb
jo
lods
sbb
cmpsl
mov
int
test
enter
push
xor
push
ret
push
xor
mov
push
mov
sbb
sub
cmpsb
jbe
dec
mov
shl
mov
in
inc
add
fucomip
imul
mov
addr16
cmp
adc
gs
jecxz
jp
push
pop
and
jecxz
push
test
divb
jo
add
lods
add
ja
out
leave
js
cltd
cmp
int
loop
mov
and
inc
xchg
mov
pop
fwait
xchg
nop
les
jle
inc
dec
lea
fwait
or
xlat
lock
ds
inc
sbb
or
push
in
mov
jns
scas
fistps
shll
ljmp
mov
test
ljmp
sbb
into
imul
jbe
or
stc
pop
mov
out
xchg
jg
idiv
fists
lea
mov
cli
into
shrb
xchg
addb
arpl
sbbl
ss
out
jle
fadd
out
mov
loop
cld
jb
nop
adc
xor
data16
test
ja
push
push
xor
push
sub
jb
outsb
mov
push
movsb
fwait
push
out
push
out
add
movsl
popf
cmp
ja
clc
xor
cmc
mov
rcll
frstor
sbb
jnp
mov
outsl
loopne
inc
js
in
jbe
push
add
or
adc
jp
les
fdivrs
les
pop
sub
adc
cmp
pop
dec
cmpsb
shlb
hlt
daa
and
sbb
jb
loope
fadd
add
psubw
cmp
icebp
mov
std
mov
mov
jae
ja
bound
fidivrl
ret
aaa
push
add
out
mov
adc
es
scas
mov
push
sbb
pop
add
lahf
test
and
push
js
pop
dec
int3
add
div
loop
js
sti
mov
lock
sarl
cld
call
inc
add
bound
test
inc
jge
add
pop
shll
jl
stc
cltd
sub
hlt
mov
push
xchg
dec
mov
fcmovne
jno
and
das
add
mov
xchg
sbb
mov
push
ja
mov
inc
std
out
aam
test
data16
sbb
scas
sahf
loope
testl
movsb
and
xchg
stos
shlb
out
in
outsl
and
test
or
mov
xchg
and
scas
lret
mov
std
popa
jp
pop
sbb
inc
shll
jne
rcrl
imul
loopne
sbb
pop
xor
adc
sbb
inc
int3
xchg
adc
mov
call
pop
xlat
fstps
mov
push
pop
movsb
test
andb
cmp
fsubp
outsb
leave
mov
sub
xor
push
mov
in
mov
cs
mov
dec
push
mov
sahf
add
pop
adc
xor
mov
push
fs
sub
inc
jp
or
pop
mov
pop
pop
lret
xor
cmpsb
je
scas
push
add
xor
stos
ss
call
ja
inc
shll
add
mov
dec
aam
stos
pop
scas
dec
decb
or
mov
fwait
jmp
xor
adc
insb
in
shl
or
jnp
dec
es
lcall
lcall
cmp
mov
dec
hlt
sbb
iret
into
dec
xlat
inc
cmpsb
cmc
pop
ret
sub
sarb
ss
aaa
cmc
xor
push
pop
pop
insb
pop
mov
xchg
cli
xchg
out
mov
inc
hlt
loope
xchg
jbe
jnp
or
xchg
sbb
pop
daa
fidivs
int3
inc
push
adc
lods
xchg
mov
cmp
mov
lds
mov
loope
push
sub
in
les
sbb
and
idivb
mov
fnstcw
and
mov
lods
test
and
adc
or
ja
mov
cmp
cmp
sub
xchg
and
mov
lds
pusha
mov
adc
cmc
std
inc
dec
sbb
mov
jp
scas
mov
pop
ljmp
adc
dec
mov
mov
lcall
insb
popa
xor
push
and
jae
xchg
sbb
cmp
adc
and
movsb
fidivs
or
pushf
pop
mov
adc
lret
push
out
xor
cmpsb
fs
xor
loope
pop
mov
sub
mov
std
test
inc
mov
adc
xchg
orb
std
or
push
dec
fistl
jp
arpl
js
xchg
popf
mov
iret
loopne
call
mov
mov
pop
mov
lock
dec
dec
into
cwtl
add
xchg
push
subb
sti
jb,pn
cmp
test
cli
push
pushf
add
or
xchg
lds
dec
push
lods
cltd
sub
std
stos
cmp
jecxz
nop
testl
mov
testb
imul
or
jmp
sbb
xchg
xchg
or
and
scas
push
add
scas
adc
imul
jbe
push
mov
imull
daa
add
stos
push
mov
notb
sar
sub
dec
sahf
xchg
andb
icebp
stos
xor
popf
pop
orb
adc
cmc
or
and
loope
std
inc
jb
jge
leave
out
fwait
iret
outsl
mov
xor
rolb
rcll
mov
bound
pop
jnp
mov
mov
add
pop
add
sub
pop
nop
pop
jecxz
jle
out
in
out
xor
loopne
xchg
jo,pn
push
rcr
insb
mov
push
loope
sub
mov
lock
cmp
sub
ljmp
call
sbb
incl
gs
icebp
aaa
addr16
and
xor
push
aad
insl
sbb
andb
jecxz
sahf
mov
cmp
and
mov
jae
inc
scas
pop
in
insl
addr16
in
jmp
mov
cmp
decb
fbstp
jecxz
pushw
push
rolb
stos
mov
orb
test
leave
xor
pop
shl
mov
pop
adc
jae
cmp
pop
pop
shr
ficompl
inc
nop
add
cmp
mov
and
andb
lahf
test
adc
jbe
sub
nop
adcb
push
inc
pop
lret
sub
pop
inc
mov
repnz
stos
mov
movsl
sub
mov
xchg
sub
mov
or
cld
jne
icebp
mov
int3
andl
movsb
mov
mov
aam
les
xor
add
mov
xor
out
cld
adc
and
lock
shrb
lret
mov
rcrb
cli
arpl
pop
je
test
xor
dec
lods
inc
push
and
popa
cmp
pop
xorb
dec
popf
pop
xchg
jp
jl
clc
daa
inc
xor
stos
fnsave
pop
repz
cmp
and
inc
or
mov
mov
pop
add
xor
push
cmp
push
add
std
int
scas
repnz
xchg
fldl
lods
aad
sbb
xchg
jns
push
jp
xchg
divb
pushf
daa
outsl
and
dec
stos
inc
sub
stos
call
or
sub
add
mov
push
mov
pop
and
data16
cmp
aad
leave
pusha
jg
lods
test
shl
inc
sub
aas
push
cvtps2pd
roll
or
movsb
fcmove
pushf
js
push
ret
push
clc
daa
rolb
pop
movsbl
mov
repz
aam
or
mov
sub
adc
push
mov
les
out
cltd
repnz
mov
mov
xchg
sahf
outsb
aam
mov
add
fs
daa
pushf
pop
insl
insl
adc
pop
xchg
sbb
fidivl
add
and
pop
dec
mov
je
inc
imul
cmc
leave
pop
dec
daa
jne
addr16
lods
xchg
mov
out
fld
lret
cmpb
insb
adcb
daa
push
xchg
leave
cmp
jne
lret
inc
js
lcall
call
lret
addl
sbb
dec
sbb
aam
sahf
pusha
les
arpl
adc
xchg
ljmp
mov
lods
jbe
fildll
jb
cmp
shll
pusha
mov
mov
jl
xor
cmpsl
inc
and
bound
mov
insl
fidivrl
ja
das
ja
jmp
or
stos
push
fists
addr16
sahf
into
sub
ja
lret
or
imul
push
jo
mov
outsb
loop,pn
inc
es
bound
pop
or
data16
xor
inc
test
xchg
data16
and
jp
dec
je
xor
xchg
addb
lods
jae
dec
mov
jnp
and
push
add
dec
push
pushf
pop
sub
ret
pop
add
notb
jb
loope
clc
fildl
push
das
shrl
das
cmpsb
jae
xchg
push
mov
stos
xchg
movsb
movsl
sahf
pop
sbb
insb
loop
cmp
imulb
repz
mov
xchg
or
pop
hlt
clc
ret
imul
adcl
xchg
rcl
push
decl
lahf
in
cmpsl
gs
loop
loope
shll
mov
dec
jne
js
je
jle
jle
arpl
nop
cmp
in
insb
bound
cmp
push
mov
pop
mov
dec
lret
jmp
ret
xor
mov
add
mov
rorl
icebp
xchg
movsl
cmc
sbb
mov
lds
cwtl
pop
test
xor
sbb
cltd
mov
xchg
mov
cld
jle
fistl
lcall
mov
test
das
sbb
popa
arpl
cmc
or
sahf
dec
fs
mov
aas
popfw
inc
fwait
out
stos
push
sbb
in
adc
jo
pop
data16
test
leave
out
enter
xchg
jp
push
xor
incb
pop
mov
cmp
dec
stos
mov
loope
mov
mov
insw
mov
push
jecxz
mov
mov
cmp
xlat
mov
insb
imul
mov
loop
mov
jae
ja
pop
loop
adc
imull
lods
push
rcll
dec
scas
xor
aam
stc
inc
lahf
dec
into
stos
push
jns
popf
cwtl
ja
sub
das
cmp
mov
mov
adc
jmp
pop
cmp
ja
packssdw
call
push
repz
add
adc
iret
inc
mov
movsb
xchg
aam
out
popa
cmp
clc
xor
daa
xchg
lcall
xor
je
scas
cmp
mov
cmc
cmp
sbb
or
cli
mov
pusha
sub
call
mov
mov
cmpl
cwtl
ja
xor
jmp
xchg
cmp
xor
mov
mov
aas
cmpsl
jle
nop
rorb
lods
add
out
xchg
rorl
repz
shrb
or
ljmp
test
ffreep
lock
inc
gs
fs
mov
ss
push
jns
in
fisubl
mov
repnz
imul
mov
sbbb
out
outsl
fmul
dec
fcomps
imul
cmp
test
mov
les
aaa
pop
out
pop
xchg
jle
in
mov
push
xchg
sti
cmp
pop
cmp
adc
push
lods
aad
clc
sub
sbb
mov
jbe
pop
cmc
pop
bound
shlb
dec
test
scas
jmp
pop
ret
and
mov
enter
not
pushf
icebp
ret
ret
dec
mov
adc
jae
adc
les
pushf
sti
out
icebp
adcl
push
popa
mov
aas
mov
jp
sbb
dec
fmuls
les
test
pop
mov
daa
dec
lods
sti
cltd
sbb
dec
movsb
xchg
pop
xchg
insl
out
ds
push
xorl
call
int
and
fwait
or
mov
popf
jne
push
aas
inc
cld
enter
inc
mov
lret
sbb
mov
arpl
jae
jns
cmpsl
outsl
mov
arpl
out
out
aas
dec
sbb
cmp
jle
sbb
mov
jb
lods
or
xlat
cli
in
jae
sbb
popa
pushf
call
mov
inc
pop
or
repz
test
pusha
out
add
sahf
lods
lds
shl
nop
xchg
out
fdivr
cmpsl
sub
push
add
pushf
add
nop
and
cmp
or
repnz
cmp
test
xchg
or
mov
and
cmp
loopnew
and
fldt
lods
or
shlb
sbb
and
push
out
leave
popa
gs
cwtl
dec
adc
out
sarb
cmc
je
pop
sbb
mov
jne
test
push
in
cmp
fisubrs
xchg
iret
in
insb
or
inc
jg
outsl
aam
add
sub
and
mov
pcmpeqb
sub
pop
inc
insb
or
cmp
pop
loopne
and
and
sti
daa
sub
sbbb
or
stos
in
jmp
nop
jl
ljmp
dec
insb
jno
movsb
mov
sub
mov
cmp
push
xchg
loopne
sub
negb
mov
mov
rcl
rorl
mov
sub
int
mov
movsl
les
in
add
ret
cmp
lahf
rcr
xchg
scas
testb
test
cmp
je
push
xchg
jne
lods
stos
cmc
das
xchg
clc
mov
pop
jb
sub
ss
js
jg
test
call
dec
mov
rorl
pusha
sbb
push
sbb
push
sub
pop
and
dec
and
cmp
cmp
and
xchg
cmpsl
push
mov
jl
fs
cmpsl
xor
push
test
cmpsl
lea
fdivrl
aaa
adcb
xor
mov
movsb
imul
cli
stos
sti
sub
enter
stos
iret
xchg
cmpsb
mov
mov
sbb
lret
cmc
sbb
mov
add
andb
ljmp
inc
adc
inc
xchg
arpl
cmp
mov
pop
xor
ljmp
inc
mov
scas
jns
out
nop
mov
push
fcoms
xchg
sub
adc
push
and
pushf
aaa
pop
xor
add
out
xchg
sbb
loope
pop
rolb
jmp
dec
cmp
sbb
inc
xchg
add
push
xchg
xor
add
or
push
mov
test
clc
cvtpi2ps
sbb
jnp
or
cmpsl
int3
ja
xor
fsubs
jmp
cltd
mov
pop
cmp
dec
and
dec
aas
sbb
pop
cltd
lcall
jle
jmp
fidivs
xchg
imul
pop
pop
imul
rcll
mov
jne
adc
cmp
pop
stos
fisubrl
jge
enter
loope
mov
add
mov
mov
icebp
or
add
xchg
jle
test
mov
jle
mov
and
cltd
xor
pusha
xchg
jno
jp
add
xchg
pop
xor
sbb
dec
pop
imul
arpl
xchg
xchg
xchg
orb
imulb
adc
gs
xchg
out
imul
or
sahf
pop
xlat
sbb
clc
cmpsb
mov
jbe
jmp
sbb
pop
cwtl
sub
dec
push
dec
dec
fbld
fnstcw
iret
pop
mov
pop
unpckhps
cmpsb
pop
cwtl
aas
inc
arpl
xchg
jp
mov
mov
cs
sti
int3
fsubl
hlt
push
and
jp
lret
incb
inc
jl
sub
pop
arpl
add
ret
inc
add
xor
mov
sbb
jmp
pop
scas
out
js
jo
lcall
scas
mov
lds
dec
lea
inc
inc
sbb
adc
inc
dec
or
push
iret
xor
jbe
sbb
shr
xor
cmp
imul
stos
enter
pop
mov
sbb
lea
je
jle
push
mov
movsl
ljmp
test
adc
aam
adc
into
xor
out
in
xchg
in
inc
sbb
sub
testl
xchg
aam
xchg
xor
xor
and
cmp
scas
xor
inc
add
inc
ljmp
into
mov
pop
addr16
stos
dec
add
push
jmp
and
rcl
xchg
hlt
push
sbb
cmpsl
xchg
stos
test
lds
adc
jmp
mov
data16
xlat
dec
ds
out
pop
std
out
cmp
jmp
ja
lcall
fisttps
and
icebp
into
fadd
xchg
int3
push
cmc
dec
mov
insb
cld
fadds
aad
pop
adc
and
cmpsl
arpl
jno
cmp
xchg
inc
xchg
push
mov
cld
push
outsb
outsb
mov
pop
sti
ret
fistpll
xor
loope
repz
mov
push
dec
ds
int
xchg
lods
lods
cmp
pusha
ljmp
clc
and
test
inc
call
add
push
dec
pop
add
test
repz
and
cmc
xlat
insb
push
jl
adc
push
inc
sub
add
cld
sti
je
or
push
icebp
movb
in
jbe
mov
sub
sbb
lock
add
mov
out
outsb
sar
or
sbb
and
fs
ss
fisttps
inc
sti
add
pop
mov
divb
lcall
jb
aam
mov
mov
fdivl
nopl
sbb
adc
add
mov
xor
cmp
cmpsb
add
xor
das
ret
inc
aad
pusha
sbb
cltd
insb
mov
div
imul
outsl
test
add
imul
mov
call
mov
push
xor
add
out
mov
lods
inc
enter
mov
insl
lock
jno
in
sbb
leave
lcall
add
data16
mov
repz
int3
jb
adc
inc
inc
rol
inc
test
sub
imul
jno
or
arpl
fbld
lock
mov
adc
shll
aaa
lahf
cmp
mov
mov
dec
add
adc
mov
mov
cmp
push
push
sbb
das
or
adc
sub
cmc
test
inc
dec
dec
adc
stos
inc
adc
movsb
icebp
ret
insl
sbb
shlb
std
in
mov
js
xchg
dec
jl
loop
shll
sub
pop
jecxz
xor
or
fsubs
add
inc
xor
repz
mov
shll
mov
sbb
mov
data16
adc
jmp
adc
fadds
push
test
gs
aaa
cmp
fmull
and
inc
or
mov
cmp
fwait
adc
and
loop
in
sbb
pop
xchg
xlat
dec
sub
dec
inc
mov
dec
and
jl
je
in
popa
lcall
out
jne
into
lret
push
dec
push
lods
sub
fimuls
xchg
jns
sti
sarb
hlt
cmp
mov
or
xchg
lock
je
mull
xor
ds
fwait
lret
jne
push
sbb
cwtl
adc
out
fs
inc
xlat
dec
mov
scas
fcom
inc
dec
ljmp
cmpsb
rclb
leave
sub
mov
mov
push
fst
aaa
pop
xlat
stc
mov
das
cwtl
in
cltd
sbb
popf
push
out
xchg
shrb
insl
sbb
pushl
cmc
scas
das
add
shlb
add
push
mov
dec
mov
incl
cld
dec
xchg
mov
xchg
mov
cmp
or
faddl
or
in
mov
jbe
cmp
dec
cs
arpl
or
bound
outsb
stos
das
xchg
push
call
stos
jmp
dec
mov
xor
cmp
lock
stos
jb
mov
jl
lahf
sbb
push
mov
cmp
repnz
fs
loop
sbb
insl
pusha
pushf
dec
adc
mov
dec
mov
subb
imul
xchg
sbb
push
outsb
sub
mov
mov
ja
xchg
stos
pop
dec
js
mov
div
les
dec
push
push
in
sub
mov
shlb
inc
inc
je
mov
bnd
cmc
inc
mov
sti
shrl
pushf
jns
outsb
cmp
push
mov
ds
sub
cld
mov
repz
jb
and
jge
cli
lret
nop
fidivs
les
insb
inc
mov
int
lahf
in
dec
and
jmp
in
in
xor
mov
stos
fstl
mov
test
pop
or
sti
lods
inc
sub
pop
xor
and
adc
ljmp
jmp
ret
popf
add
pop
add
arpl
xchg
push
dec
mov
inc
and
adc
jg
jmp
bound
xchg
mov
dec
pop
test
xchg
das
test
pop
xlat
lret
push
adc
cmp
popa
xor
iret
cltd
inc
mov
lcall
out
fisttpll
clc
imul
jle
punpckhbw
loopne
inc
mov
loope
dec
xor
mov
dec
insb
dec
inc
mov
repz
or
fidivs
loope
dec
sbb
and
mov
jns
loopne
outsb
jmp
sbb
mov
enter
inc
out
les
cmpsb
fidivl
pop
push
loopne
in
lcall
arpl
ficoms
xor
xchg
call
push
sbb
js
fcmovu
and
insb
dec
mov
out
mov
test
rorl
jns
dec
cmp
jp
inc
stc
jb
movsb
jae
cld
cmpsb
cmpsl
scas
sub
notb
pop
mov
dec
incb
scas
mov
dec
jnp
fcoml
xor
cmpb
xchg
cltd
ret
or
inc
jne
and
jg
adc
mov
cmc
mov
pop
repnz
mov
pop
push
mov
mov
mov
cmc
rep
bound
jb
idivb
pop
shlb
cmp
sub
mov
and
dec
xchg
popa
lods
mull
ss
xchg
sub
cltd
jge
mov
adc
mov
gs
inc
out
stos
sbb
pop
subb
lcall
cmpsb
xchg
push
xchg
into
mov
std
push
xlat
aas
je
sbb
adcl
sbb
mov
out
and
and
inc
fdiv
xor
xorl
jmp
xchg
inc
cmp
mov
add
or
xor
push
jmp
dec
pop
out
call
lock
mov
sbb
repnz
jle
add
push
mov
pop
adc
sbb
arpl
adc
nop
cmp
pop
repz
xchg
lock
clc
insb
xorl
insl
ret
pushf
in
dec
push
ljmp
xor
pop
xor
out
test
outsb
xor
or
fsub
jmp
and
mov
arpl
arpl
and
xor
add
sahf
fwait
pop
pop
and
in
out
cmp
movb
leave
imul
jnp
lods
ljmp
xchg
sub
sbb
cltd
dec
dec
in
push
xor
add
mov
fisttps
jecxz
inc
sub
mov
adc
cs
xchg
xchg
push
lods
mov
xchg
insl
scas
out
pop
inc
mov
and
arpl
ja
and
sbb
jp
pop
mov
and
pop
dec
outsl
xchg
sbbb
sub
pop
fs
adc
inc
sbb
imul
popl
jg
push
pop
or
sbbb
and
jns
lds
dec
cmpsb
xor
xor
in
add
xchg
push
rclb
repz
cmp
sbb
arpl
push
dec
fs
std
and
fiadds
cmp
sar
pop
xchg
xchg
fidivrs
dec
in
incl
sbb
mov
outsl
mov
jns
xor
xchg
xchg
xchg
mov
pop
imul
mov
cmp
lret
lahf
outsl
aaa
dec
add
mov
pop
jnp
in
gs
xor
mov
lock
daa
out
inc
out
out
in
xor
lret
test
rcrb
or
sub
sbb
mov
push
cmc
adc
xchg
sub
push
addr16
hlt
mov
xchg
dec
loope
call
in
xor
push
xor
test
pop
mov
in
scas
sbb
nop
mov
jno
push
mov
sbb
es
xor
pop
sbb
xchg
mov
pushf
and
hlt
push
lock
in
sbb
xorl
mov
pushf
xorl
sahf
fninit
mov
dec
movsl
gs
and
xor
out
adc
div
push
shrb
adc
mov
shll
int
and
mov
movb
inc
push
ljmp
aaa
push
scas
xor
sti
cmp
or
ss
je
jnp
test
fsts
add
xchg
mov
mov
push
insb
jle
cmp
jno
js
lds
adc
xor
xchg
jnp
xchg
ss
sarl
pop
xchg
shlb
mov
sbb
dec
setg
or
xchg
xchg
jle
int3
lods
mov
jns
cli
sbbb
lock
aaa
xchg
push
pop
xchg
ret
out
enter
or
cmp
lods
mov
jnp
mov
cmc
sti
cli
cmp
sub
mov
divb
or
fucom
or
fisubl
dec
inc
xchg
inc
sti
test
je
mov
in
or
outsb
into
pop
add
and
adc
inc
mov
loop
xchg
test
dec
cli
lea
icebp
insb
roll
cwtl
imul
outsl
push
or
dec
sub
loop
mov
xchg
jge
add
lods
cmpsl
jmp
and
les
add
mov
mov
adc
pop
in
add
fcoml
pop
pop
sub
js
inc
js
sub
dec
pop
imul
sub
jle
xor
jnp
xor
lahf
call
lret
adc
ja
mov
shr
ljmp
adc
cmp
xor
xchg
aas
lods
mov
adc
add
mov
jle
dec
push
or
add
inc
add
add
leave
inc
inc
dec
inc
icebp
xor
xchg
pop
adc
in
cmp
or
push
lret
cmp
cld
cmp
out
loopne
xchg
pusha
add
dec
pop
mov
sahf
mov
dec
mov
lcall
mov
inc
loop
mov
icebp
pushf
cmp
out
outsb
notl
adc
lods
pusha
pop
nop
in
popa
push
jge
idivb
cmp
inc
cmpl
ret
movsl
xor
into
jl
push
xor
loope
jl
pushl
sti
dec
fildll
push
mov
push
jo
lret
fldlg2
mov
test
nop
mov
rorb
xchg
clc
cmpl
in
sub
cmpsl
dec
imul
xchg
sahf
cwtl
aam
cwtl
out
les
pop
jo
sysexit
dec
xor
mov
jmp
ficoms
iret
fwait
pop
ds
je
cmp
pop
aas
pop
fmuls
lret
je
pop
pop
sbb
lret
and
stc
and
push
fcmovnbe
xchg
pop
hlt
mov
call
popf
jecxz
xor
xchg
add
jns
int
pop
dec
testb
fs
imul
push
xor
stos
add
xor
lds
push
add
fdivr
adc
inc
and
pop
dec
jnp
aad
mov
cmpsb
stos
pop
pop
dec
xchg
push
rolb
xchg
fnstsw
cmp
mov
mov
add
inc
pop
outsb
xlat
sarl
and
aad
in
sbb
pop
cmp
push
pop
cmp
mov
js
outsl
mov
addr16
jle
dec
rcrb
or
js
mov
inc
and
cwtl
call
cmp
xchg
andl
call
negl
in
into
jae
leave
into
mov
stos
mov
shlb
xchg
lods
add
pop
sub
dec
test
jo
mov
dec
cli
fdivrs
cld
pushl
fstps
jno
dec
jg
cmpl
pop
in
in
cmp
mov
repnz
cltd
lret
push
test
aam
xchg
pop
mov
nop
addb
pop
jg
aas
sub
repz
out
inc
inc
arpl
jb
sub
cmp
mov
adc
fadds
xchg
pop
mov
adc
dec
fildl
push
xchg
adc
cmpsb
popf
movsl
sbb
xor
jl
movsl
mov
adc
aaa
cld
jg
xchg
loop
gs
and
inc
ficomps
or
inc
movsb
push
jbe
ret
or
iret
xor
je
jp
xchg
push
test
popa
test
popa
push
rclb
dec
rol
mov
xchg
dec
push
lahf
cmpsb
add
xchg
cmpsb
adc
pop
adc
pop
xchg
inc
sbb
data16
dec
into
mov
movsb
popf
mov
data16
mov
adc
push
sti
inc
mov
add
jne
shll
cmp
push
loop
stos
negb
out
gs
lret
or
stos
and
jnp
sbb
mov
mov
and
push
in
mov
fldl
jo
jae
xchg
std
dec
adc
add
inc
xor
cmpsb
mov
sti
push
mov
pop
es
or
mov
outsb
stos
sub
aam
out
add
fisubl
aaa
inc
cmp
sub
xor
jecxz
scas
das
ja
movsb
in
cmp
pop
dec
and
adc
mov
jecxz
jbe,pn
mov
out
dec
jb
fwait
cltd
shr
inc
push
test
sub
xor
sub
and
dec
jne
jns
push
cmpsb
xchg
movsb
mov
mov
das
popa
loopne
rol
lahf
push
xchg
inc
adc
rolb
xlat
std
incl
sti
cmp
sahf
cmp
daa
fmull
mov
fisttps
and
pop
pop
jbe
fldl
mov
ss
push
xchg
cmp
sub
std
incb
sbb
pop
xor
shll
lret
insl
lds
ficoms
cs
stc
sbb
mov
adc
stc
into
pop
or
adc
push
inc
or
jecxz
lcall
xor
fidivs
comiss
aaa
cmp
lret
dec
jmp
enter
pusha
shlb
fmull
or
dec
inc
and
xor
lock
mov
insb
sbb
movsl
mov
pop
xor
mov
sbb
imul
mov
cmpsl
or
dec
lret
popa
mov
add
xchg
fisubrs
mov
jbe
loope
orb
in
sbb
xor
sbb
add
cs
jge
test
aas
pop
pop
mov
or
mov
mov
and
lock
xchg
mov
sub
push
mov
lods
test
je
add
cmpsl
adc
jp
adc
fcos
test
imul
push
mov
cmpb
push
bound
lea
adc
and
daa
jecxz
in
add
insl
les
jg
test
or
fbstp
aad
outsb
arpl
psllq
popf
dec
out
je
jne
add
add
and
xchg
bound
and
rcrb
mov
pop
sahf
xchg
xor
inc
sub
outsb
sbbl
jns
adc
adc
rcll
clc
dec
stos
push
outsl
push
adc
sub
inc
mov
fidivl
lcall
in
xor
roll
aas
push
ret
add
push
insl
push
pop
mov
push
adc
comiss
sbb
pop
imulb
imul
ja
out
inc
gs
sarb
jno
and
xor
add
cwtl
xchg
cwtl
mov
nop
sub
dec
imulb
jns
jl
fistps
xor
push
mov
jb
clc
push
mov
xchg
xor
dec
lcall
push
sbb
push
xor
pop
dec
ja
lret
xorb
outsb
lods
jne
mov
aas
lcall
test
adc
jl
movsb
adc
xor
out
out
xchg
jnp
push
xor
daa
outsb
xorl
sub
in
cwtl
ret
push
aam
lods
sub
jo
not
xchg
mov
ljmp
jns
mov
push
mov
test
out
fmuls
adc
movsb
rcrb
loopne
scas
jno
add
fcom
out
jmp
xchg
mov
ds
imul
hlt
add
pop
push
rcll
jae
or
test
pushf
push
cmp
jmp
push
call
out
pop
push
adc
push
in
xor
aad
test
lcall
xor
cmp
lahf
xchg
ret
adc
cmp
add
fnstcw
pusha
inc
repz
test
ja
insb
jno
sbbl
test
xchg
enter
fdivs
mov
cmc
orb
imul
mov
js
sbbb
stos
les
mov
mov
movsb
dec
scas
and
and
cs
push
ljmp
pop
scas
or
out
fsubr
push
je
cmp
daa
cmp
fmul
adc
mov
cmp
call
adc
shrb
test
sahf
call
frstor
dec
cmc
xor
xchg
dec
mov
es
jae
subb
jg
ds
sub
push
push
ret
jo
hlt
push
clc
mov
out
cmp
loopne
adc
add
sbb
sbb
rol
mov
xor
xorb
les
or
dec
mov
popa
ljmp
cmc
popf
sti
out
lret
ja
rol
mov
adc
jmp
cmpsb
adc
aas
insl
mov
sub
out
xor
add
ret
mov
add
fidivs
aas
push
or
fisttps
sbb
sbb
dec
out
inc
divl
js
mov
cmpsl
inc
stos
mov
inc
mov
fsubrs
mov
mov
stos
fadds
or
ret
dec
xchg
cmpsb
mov
scas
xchg
cld
and
ljmp
insl
loop
mov
shlb
push
xchg
and
test
loope
rcll
sbb
adc
das
or
jp
and
fsubl
push
ja
jp
aam
mov
popf
mov
mov
fisubs
mov
movb
or
das
mov
pusha
out
ss
scas
inc
imul
icebp
gs
pop
and
pop
add
xchg
or
inc
lea
out
fwait
nop
add
aad
xchg
cmp
not
cmp
movsl
inc
lds
nop
jge
sub
adc
fistpll
xchg
push
xchg
cmc
or
test
jg
or
cmp
mov
pop
mov
pop
sbb
and
lea
pusha
dec
dec
mov
push
cmp
ret
jmp
adc
test
pop
ljmp
xchg
cmc
mov
mov
aam
pop
jne
aad
sub
mov
cltd
push
int3
mov
xor
out
and
inc
cmp
xor
nop
lret
jbe
jg
sub
sbb
std
jbe
icebp
test
adc
mov
adc
aam
aad
and
out
scas
nop
ds
adc
fcmovbe
cmp
cmpsb
jl
dec
int3
nop
leave
insl
mov
push
rcr
paddusb
loope
pusha
mov
pop
ror
fistl
sbb
sbb
add
es
ret
ret
xchg
dec
lcall
dec
in
dec
adcl
and
loopne
clc
jp
jns
dec
mov
nop
lds
mov
push
sahf
aad
cmp
stc
cmp
cmp
mull
shll
mov
mov
mov
aaa
aaa
jge
daa
mov
je
dec
fldenv
inc
icebp
test
inc
fnstsw
sar
dec
andl
pop
aaa
leave
inc
jb
mov
daa
cmp
add
xor
enter
push
xchg
xlat
inc
in
cmpw
or
dec
int
loopne
dec
paddb
dec
out
sub
xchg
pop
js
add
popf
cmpl
lret
mov
mov
dec
shlb
mov
clc
and
test
cld
shll
dec
ret
adc
insb
scas
fsts
imul
push
lret
mov
push
jbe
mov
pushf
and
icebp
lock
fdivrl
lock
jno
fldl
xor
jge
lods
sbb
fs
mov
fisttps
ljmp
sti
mov
and
sub
out
mov
and
mov
dec
mov
dec
stc
jmp
stos
and
pop
add
lea
loopne
scas
xchg
addr16
and
repnz
testl
dec
xor
std
or
stc
test
imul
pop
or
cmp
pop
scas
shll
insl
xlat
mov
mov
fnstcw
jo
call
scas
lock
dec
lret
xchg
sub
adc
jb
cmp
or
dec
loope
cs
sub
push
add
dec
clc
outsl
loopne
sbb
xor
repnz
inc
mov
dec
and
and
es
insl
insl
xorb
lretw
mov
loopne
inc
imul
dec
xchg
add
pop
add
jns
rorb
stos
dec
loopne
jb
int3
sbb
and
push
push
xchg
pushf
aas
lahf
movsb
dec
or
lods
in
fadds
xor
fadds
dec
mov
gs
ja
or
xor
add
xor
imul
jbe
inc
inc
mov
pusha
cmpsl
mov
ret
push
stc
cmpsb
dec
ljmp
mov
cmp
pop
mov
lods
push
sbb
nop
aaa
cmp
loope
xor
sub
lcall
imul
or
out
clc
xchg
into
mov
push
out
fstpl
push
rorl
jmp
xorl
lods
mov
imul
pop
ror
negl
cmp
and
arpl
mov
jp
rcr
push
xor
and
loopne
data16
mov
push
push
mov
push
add
ja
cmp
icebp
jecxz
outsl
sub
ror
sti
jae
sbb
or
adc
aam
inc
xor
lret
cmp
jno
jp
mov
in
pop
push
inc
popf
adc
stc
sub
cld
nop
fs
mov
cmp
mov
or
fwait
xlat
pop
dec
cmp
fdivrs
sub
fisubs
mov
xchg
and
mov
popf
and
jno
mov
sarb
xor
outsl
insl
push
push
jp
sub
test
sub
jb
xor
movsl
into
cmp
mov
imul
and
stc
out
inc
loopne
push
cli
mov
imul
xor
fiadds
lods
imul
cmp
ss
xor
addr16
xor
lret
xchg
jle
int3
inc
scas
add
sub
out
pop
rorb
icebp
js
lods
dec
xlat
xor
sub
xor
subb
mov
mov
and
pusha
ficoml
cmpsl
cmp
mov
repnz
je
mov
mov
adc
adc
jbe
insl
mov
xchg
pop
mov
jbe
cli
fldenv
call
call
and
adc
cmp
mov
addr16
sbb
push
mov
cmpsl
inc
lret
lods
or
jp
ljmp
mov
imul
add
hlt
jmp
sahf
std
arpl
and
push
std
and
lret
mov
sbb
jbe
cltd
xlat
push
add
js
mov
inc
and
jecxz
adc
adc
xchg
cs
andl
xor
or
loopne
aaa
jae
fidivrl
lds
push
scas
dec
jecxz
jge
mov
lret
and
or
cmp
sub
in
sub
pusha
addl
and
dec
sti
test
shlb
scas
aad
shl
repz
inc
sbb
mov
loop
and
xor
mov
insb
xchg
adc
xor
stc
push
adc
adcb
and
adcb
mov
or
movsl
mov
movsl
fdivl
pusha
adc
sbb
addb
jl
pop
jl
bound
xchg
add
fnsave
shl
cmp
inc
enter
daa
in
push
xlat
sbb
dec
ljmp
ss
dec
daa
pusha
cmpsb
divb
shl
enter
sar
nop
cli
inc
enter
cs
and
xchg
push
xchg
scas
insb
int3
fadds
and
add
push
or
lahf
lahf
xchg
out
or
mov
xchg
sbb
jge
das
lret
inc
stc
cs
push
hlt
xchg
les
mov
fsubrl
xchg
fs
push
rorl
iret
or
mov
movsl
nop
movsl
mov
call
gs
xchg
xchg
and
jnp
mov
adc
lea
jns
xlat
pop
add
dec
adc
jae
fadds
les
std
xchg
cmp
push
lock
mov
push
mov
pusha
xchg
jl
cmc
jecxz
repnz
xor
mov
cmp
lret
xor
inc
fs
add
pop
jo
mov
lcall
pop
outsb
fadds
fsubrl
clc
adc
or
lea
mov
mov
fwait
cmc
fisubrs
es
in
push
mov
cmpsl
scas
adc
ja
gs
push
and
xchg
jbe
and
adc
push
adc
in
jo
cmc
insl
negb
push
add
dec
mov
add
in
mov
loopne
rclb
popf
mov
mov
mov
fwait
jne
test
push
pop
push
inc
rcr
lret
stc
adc
out
xlat
jg
xchg
and
dec
inc
test
dec
ret
jmp
fs
push
lock
add
jne
imul
xorl
adc
jnp
push
pop
test
iret
adc
lea
sub
pop
jbe
adc
ljmp
cmp
or
movsb
dec
push
stos
pushf
push
pop
out
and
test
mov
pop
notl
fists
out
scas
aas
arpl
bound
jl
imul
lea
dec
test
xchg
cmp
and
inc
or
mov
addr16
jns
cmpb
cmp
in
scas
out
ss
popf
dec
out
xchg
jo
adc
imul
loopne
mov
pushf
out
jl
imul
and
movsb
lds
pop
fistpll
add
or
ficoml
aaa
jl
sbb
sub
xchg
mov
stos
sub
jns
fbstp
lea
lock
fnstsw
iret
push
scas
xchg
out
popf
pop
cmp
mov
rcll
mov
dec
jmp
je
mov
pop
in
xlat
mov
das
je
fiaddl
mov
mov
mov
xchg
pop
and
cwtl
cs
push
in
fstp
xchg
xchg
inc
dec
mov
sub
jmp
mov
adc
xor
jb
scas
sub
std
das
xchg
push
test
xchg
push
in
pop
bound
cmp
or
cld
xchg
dec
pminub
fs
and
jl
mov
imul
stc
ja
push
mov
lret
xor
fimull
mov
push
push
adc
xor
pop
subl
cmp
xchg
or
xchg
add
cmp
xchg
std
push
mov
xlat
loop
cmc
xchg
sub
jae
dec
sub
jbe
push
add
cltd
into
not
push
es
sub
add
loop
sub
sbb
gs
and
mov
push
je
sbb
push
sbb
xchg
inc
pop
leave
lods
lock
clc
paddd
pushf
cwtl
dec
jmp
dec
dec
lods
push
test
es
aas
popa
cmp
add
mov
flds
xchg
ret
mov
mov
in
lock
jmp
ja
pop
testb
xchg
stos
bound
scas
xor
movsb
sti
mov
or
outsl
div
js
in
in
shll
sub
pop
and
push
mov
inc
pop
call
sub
mov
std
mulb
loopne
jbe
lock
and
push
jg
push
jb
lea
xchg
add
daa
mov
pushf
jmp
or
cmc
icebp
pop
or
sub
nop
out
push
pop
popa
cmp
fcomps
popf
mov
out
mov
movsb
or
mov
inc
xchg
popa
sub
inc
cmp
dec
dec
stc
jb
insb
xchg
push
adc
mov
shll
jne
in
pop
in
add
jmp
dec
dec
inc
popa
sbb
lods
inc
fbld
adc
mov
push
and
shlb
mov
add
xor
jb
out
imul
jge
mov
lock
aas
int3
dec
inc
iret
aas
xor
pop
jnp
sar
daa
dec
push
sub
xchg
xorb
pop
mov
or
fcompl
mov
sub
das
flds
call
mov
nop
push
and
jmp
test
sahf
mov
pop
jg
out
xchg
in
imul
xorb
push
sub
icebp
andb
dec
or
mov
add
inc
dec
pop
subb
cwtl
inc
push
int3
outsl
aaa
jns
faddl
push
xlat
sbb
adc
dec
dec
int
inc
aas
inc
cmpsb
fs
jbe
ss
push
sub
fidivrs
xor
pop
bound
cmpl
xchg
in
and
shrl
leave
or
push
adc
vrsqrtss
jo
dec
data16
lods
jge
mov
pop
fmuls
add
mov
push
pop
out
out
dec
xchg
sub
outsb
shrl
push
imul
push
sub
dec
cmp
out
dec
sbb
xchg
add
push
push
shlb
mov
aas
je
test
push
jae
or
jns
jp
dec
std
cmp
mov
sar
sub
sub
jne
xchg
and
sub
in
insb
rcrb
pop
js
pop
push
dec
or
cli
dec
mov
loop
iret
mov
push
add
add
adcb
sbb
and
fldt
testb
stos
aad
fs
dec
mov
mov
je
jno
cmpsb
popa
jo
and
cltd
push
sahf
push
rcll
js
cmp
pushl
sub
sbb
sub
xchg
scas
ljmp
sbb
std
jl
mov
out
and
mov
mov
gs
rcll
in
pushl
out
int
pop
sti
repnz
cmpsb
ror
hlt
scas
mov
fwait
out
cli
int3
mov
scas
xchg
aas
push
adc
push
test
call
arpl
push
icebp
and
dec
pop
sbb
lock
cmp
in
lds
shll
vmwrite
les
gs
cmp
pushf
mov
add
pop
pop
bswap
fmulp
push
mov
cmp
out
pop
les
sahf
jnp
mov
xchg
les
es
clc
cmpsb
xlat
fists
inc
pusha
or
jmp
jg
adc
mov
gs
jno
lods
lods
jae
outsl
sar
test
push
scas
daa
dec
call
dec
aad
stos
int3
add
std
sbb
push
imul
add
je
mov
jno
popf
or
insl
mov
inc
ja
sbb
les
xorl
pmaddwd
pop
mov
push
dec
into
jbe
jle
adc
push
inc
cltd
mov
bnd
or
adc
xchg
xor
lret
dec
lret
inc
int
jl
and
push
imul
mov
sbb
mov
shrb
setae
or
adc
popa
dec
xlat
xor
mov
xchg
mov
xchg
lods
cmp
or
sbb
pop
jle
movsb
push
in
hlt
cmp
pop
sub
inc
jmp
jg
pop
sub
mov
cld
sub
ss
jmp
hlt
cmp
mov
or
scas
add
aaa
loop
ljmp
ret
inc
testb
aad
fs
sub
stos
out
in
ljmp
ret
shll
cmpsl
sub
dec
sub
sub
dec
jns
jne
fmull
shl
fld
cmp
ds
jmp
inc
iret
orb
sub
xor
nop
icebp
sub
out
loope
pusha
mov
ret
pop
in
sahf
mov
cmpsl
mov
movsb
pop
repz
iret
out
mov
xchg
lret
in
push
lods
fidivl
jmp
scas
lret
xor
add
ret
mov
leave
and
fs
xlat
jns
sti
pop
sbb
pop
aam
mov
ljmp
xor
lahf
test
mov
pop
mov
call
pop
fsts
in
push
sbb
xchg
jns
or
push
inc
shl
cmpb
jmp
in
nop
cltd
out
sbb
ret
pop
jmp
into
add
movsb
pop
jge
call
repnz
xor
ja
and
push
sub
xchg
lret
ficoms
and
mov
sbb
mov
add
in
out
cmpsb
sbb
fdivrs
rclb
lds
jmp
push
or
test
pop
sub
mov
push
cltd
push
mov
xor
xor
test
pop
jbe
inc
loope
es
cmpl
test
mov
clts
dec
and
cld
lret
xchg
or
out
xorl
aaa
sub
push
lret
mov
mov
aam
jmp
pop
sub
pop
mov
shrb
cld
inc
shll
mov
pop
ret
xor
cs
sbb
ja
loope
aam
out
neg
pop
sub
test
or
pop
push
pusha
js
subl
pushf
jmp
push
mov
add
mov
daa
and
sbb
xor
leave
push
and
call
xor
cmpsl
popa
insl
ret
shrb
push
lods
add
sub
das
outsl
pusha
cmp
ds
call
inc
or
mov
mov
repz
pop
mov
adc
shrl
mov
mov
jle
mov
popf
aaa
shll
cmp
lahf
jns
das
lods
push
cmp
dec
add
lock
cmp
in
shlb
fsubrl
mov
popf
orl
movsb
mov
hlt
xchg
add
imul
jge
call
shlb
ljmp
mov
mov
and
aam
stc
loope
lds
in
pop
movsb
les
sbb
fs
dec
cwtl
inc
jg
and
sbb
pushf
push
push
push
push
xchg
xor
adc
repz
scas
and
subb
sub
or
mov
fisubrs
add
fs
jnp
mov
or
hlt
push
cmp
mov
sbb
push
sub
lcall
push
mov
cmp
xor
jp
adc
fiaddl
mov
das
and
jecxz
mov
movsb
lea
mov
and
mov
jae
ja
out
adc
cli
mov
lods
into
cmp
fdivrs
mov
adc
nop
xlat
xchg
insb
das
cmp
xchg
pusha
or
xchg
fbstp
jbe
mov
jp
mov
ljmp
xchg
jmp
or
jecxz
iret
repnz
shll
jl
adc
hlt
xchg
leave
and
sti
scas
dec
and
cltd
and
lds
rcr
push
inc
dec
add
jmp
jl
ret
cmp
jnp
inc
test
idivl
push
push
sbb
xchg
insb
shlb
clc
into
js
fdivrs
cmc
lock
aam
je
xor
dec
jp
adc
nop
jo
lahf
xchg
pop
push
sub
sub
std
aas
cmp
out
push
stos
jp
xor
fldenv
pop
xor
push
adc
xchg
repz
jecxz
std
aad
pop
lcall
push
aaa
mov
mov
jns
push
xchg
fsubr
xchg
insl
or
imul
xor
dec
push
cmc
cmpsl
aad
push
pushf
push
or
adc
inc
insb
fmuls
cmp
outsl
mov
push
xor
inc
mov
or
sub
and
roll
xor
int3
out
xchg
pushf
pusha
ss
jae
push
jbe
ds
cmp
test
fstpl
sbb
es
leave
sub
cmp
mov
sub
mov
pop
and
lods
sbb
ret
push
adc
cmp
push
mov
inc
push
cmpb
mov
movsb
into
orl
int
imulb
cmp
xchg
jge
int
cmpsb
or
into
fistl
mov
mov
mov
outsl
pushf
pop
imul
in
lea
movsb
inc
je
les
sbb
sbb
push
xchg
jb
cmp
cmp
cmp
dec
in
push
inc
insb
push
out
and
push
push
inc
xchg
mov
xchg
sbb
into
cmp
inc
adc
jp
xchg
ss
push
out
sbb
pop
push
hlt
sub
pop
push
jecxz
jge
pop
sbb
mov
hlt
ss
xchg
orl
fbld
adc
cmpsl
mov
icebp
push
pop
push
jo
nop
add
add
mov
repz
fsubrs
jecxz
adc
or
inc
xchg
cmpxchg
mov
add
inc
sub
mov
ljmp
mov
push
out
jp
pop
adc
cmp
xchg
in
int3
mov
int3
sbb
mov
sahf
cli
jl
mov
xchg
in
add
pushf
jo
into
inc
sub
jb
and
ljmp
pop
or
bound
dec
xor
inc
jl
cmp
mov
mov
jns
and
xor
addr16
dec
pop
xorb
lcall
popa
jne
pusha
jp
cmp
mov
aaa
and
shlb
imul
in
xchg
insl
fstpt
cli
or
repz
jae
cmc
pop
sarl
repnz
push
jo
xchg
and
fwait
xor
clc
aaa
adc
add
adc
inc
pop
add
inc
pop
incl
testb
mov
xchg
test
in
out
mov
jle
scas
mov
clc
outsb
sbb
adc
cmp
lret
test
jmp
cld
mov
pop
enter
and
mov
lret
testl
pop
and
lods
mov
das
mov
or
jnp
sbb
inc
ret
mov
into
inc
fisubrl
and
jecxz
out
sbb
insb
and
stos
imul
out
insb
or
pop
cmp
icebp
inc
cmpsl
fsts
inc
push
jns
adc
in
xchg
outsl
insl
sub
lret
loop
or
popf
out
and
and
mov
xor
or
dec
xchg
popa
in
or
loopne
ja
pop
jne
or
dec
jp
outsb
and
outsb
ret
push
jp
mov
inc
xchg
in
sti
lret
and
scas
cmp
sti
cmp
mov
repnz
or
into
push
push
xchg
inc
clc
jg,pt
adc
hlt
arpl
arpl
loope
xchg
inc
std
mov
sbb
lea
inc
rcrb
sub
push
push
enter
sub
cld
int
jl
mov
mov
jbe
cmpsb
pop
and
add
roll
xor
fistps
xor
call
sbb
sub
outsb
fmul
mov
sub
push
pushf
jbe
out
xchg
sub
sbb
rcrl
stc
xor
daa
aaa
pop
cmp
xchg
xor
das
or
or
push
rorb
icebp
mov
sbb
stc
pop
or
lahf
loop
push
nop
mov
insb
pop
in
dec
xchg
push
ss
lahf
jne
int3
xchg
js
or
sahf
or
pop
outsl
mov
mov
int
out
pushf
sub
jo
shlb
rcll
into
pop
pop
mov
sbb
jne
ret
out
cmc
dec
and
inc
inc
test
inc
ret
push
movsl
inc
cld
inc
pop
jne
std
ffreep
leave
into
cwtl
repnz
std
xchg
jle
push
dec
xor
shlb
xchg
mov
addr16
lret
out
dec
sahf
mov
dec
jge
icebp
pop
sub
cli
mov
lods
pop
mov
mov
jb
mov
aam
je
add
dec
or
push
adcb
xchg
shrl
les
std
into
movsb
mov
adcl
out
or
lds
repz
dec
stos
adc
mov
mov
dec
or
fistl
in
cmp
pushf
mov
xor
push
in
mov
push
out
adc
dec
data16
adc
test
cmp
sbb
lods
xor
popf
inc
fiaddl
push
mov
lahf
test
test
pop
dec
jle
ficompl
jne
adc
and
test
pop
xor
mov
jmp
inc
jne
jae
int
insb
aad
or
ja
lcall
sbbb
arpl
push
mov
xchg
leave
mov
adc
jo
or
insl
xchg
push
and
in
add
adc
sub
add
aad
into
jg
mov
dec
cld
mov
out
push
adc
cmp
test
sbb
inc
dec
call
or
mov
jp
and
in
add
pop
and
mov
pop
jecxz
mov
or
in
pop
cmp
and
xchg
sub
sub
pop
in
xor
xchg
and
xorl
rcll
push
lods
cmp
aaa
jo
xor
sub
addl
xchg
xchg
cmp
mov
sar
dec
xor
mov
or
jo
jp
sub
daa
aam
loop
or
movsl
cmpl
out
scas
in
es
cld
scas
ds
inc
and
push
fimuls
lret
adc
cmp
add
data16
jle
lahf
dec
sub
fstps
js
jg
cwtl
in
int
jb
mov
mov
mov
in
sbbb
in
mov
data16
dec
dec
jns
mov
or
out
into
jl
insb
adc
xchg
push
test
popa
or
jno
lret
out
push
stc
jae
jl
ljmp
cmp
add
int
popa
adc
and
pop
inc
fldcw
ficomps
je
pop
jb
cs
pop
in
add
inc
fldt
lds
out
inc
adc
jge
jo
mov
je
cwtl
cmpsl
mov
push
sahf
rorb
sahf
xchg
xor
push
popa
les
mov
mov
popf
pop
aaa
orl
jmp
shlb
jno
cs
dec
sti
rorl
lret
pop
sbb
test
push
fdivp
rorb
dec
cli
js
push
in
xlat
orl
ror
xchg
xor
fisubl
dec
popf
jae
arpl
adc
xchg
jb
lcall
out
xchg
cmp
mov
xor
mov
xchg
scas
cmpsl
mov
push
jb
out
stos
add
sarl
push
scas
fcomps
sbb
enter
dec
insl
xor
mov
inc
cmp
jo
push
cmc
jo
push
scas
cmpsb
nop
add
in
mov
pusha
adc
jno
xchg
pop
roll
and
loop
out
xor
xlat
fsubs
dec
fildll
fimull
adc
add
xchg
xchg
imulb
sahf
cli
hlt
adc
je
xor
stos
pusha
pop
add
lret
or
int
add
das
mov
pop
pop
mov
push
pushf
aaa
int3
mov
lcall
mov
add
mov
dec
out
sbb
scas
and
sarl
lahf
sbb
lds
lock
rcrb
mov
mov
insl
mov
xchg
sub
enter
outsb
push
xchg
sub
leave
ljmp
jp
inc
and
sbb
mov
aas
shld
rolb
pop
fcmove
mov
cmp
cmp
mov
in
loop
push
adc
jle
jl
dec
inc
pushf
pop
fcoml
push
repz
fwait
xchg
stos
jb
mov
sub
inc
xor
decl
ljmp
xlat
fs
repz
xchg
mov
scas
loop
out
gs
lahf
jno
stc
pop
mov
push
jmp
mov
mov
ret
pusha
addl
sub
mov
mov
jge
movsb
dec
pop
out
jns
push
cld
bound
jmp
stos
es
mov
mov
popa
repz
lcall
int3
push
and
stc
jecxz
sub
rcr
lcall
jb
nop
stc
icebp
out
cmp
out
pop
ret
fs
mov
mov
dec
jle
mov
insb
and
mov
sbb
dec
adc
add
mov
push
out
int
lret
sub
test
call
xchg
jnp
mov
hlt
push
loopne
hlt
shrl
push
xchg
into
dec
xor
push
std
xchg
add
mov
sahf
add
push
mov
sub
cld
mov
xlat
adc
enter
add
inc
movsl
cmp
mov
xchg
mov
ficompl
addr16
inc
cmp
mov
int
pop
sub
mov
sub
negb
push
daa
addr16
jbe
leave
into
push
lods
test
lcall
push
nop
add
lret
mov
sbb
mov
adc
cmp
mov
int3
sbb
dec
ficomps
arpl
dec
sarb
nop
sub
fnstenv
lock
push
and
sarb
xchg
pop
les
test
cs
jno
cmp
cmp
sub
dec
cli
jb
mov
jae
sub
cmp
or
imull
add
cmp
pop
xor
mov
mov
sahf
cmp
xchg
bound
add
cmp
xchg
ljmp
imul
lods
push
add
lret
fwait
movsb
dec
push
popa
inc
aas
push
inc
sub
ja
mov
icebp
mov
push
mov
mov
adc
sub
cwtl
aam
xchg
inc
ret
inc
mov
movl
jp
mov
stos
cmp
cmp
jae
fcmovnb
mov
cs
jmp
pop
cmp
frstor
outsb
ds
mov
dec
push
sub
divl
in
jg
inc
test
jge
aaa
scas
push
mov
scas
add
cwtl
je
xchg
sub
cmpsb
jg
jbe
xchg
addr16
cmp
imul
out
jge
xor
sub
pop
cmc
or
mov
insb
push
adc
insl
xchg
mull
xor
push
aad
les
ror
inc
lret
mov
inc
cs
dec
ds
nop
lea
jg
dec
dec
ja
jnp
sbb
fnstsw
ss
in
cmp
push
bound
xor
jecxz
imul
xor
loope
pushf
shll
fbld
push
in
jp
adc
data16
roll
push
in
gs
sbb
aam
push
enter
pop
jo
outsb
inc
add
and
in
into
outsl
adc
mov
js
fldt
push
mov
push
cltd
push
sbb
jnp
xchg
jmp
outsl
ficoms
sub
ror
test
loop
stos
xor
popa
pop
pop
lods
mov
movsb
cwtl
push
andl
inc
sub
dec
inc
mov
iret
push
dec
cltd
ja
jno
xor
shl
out
nop
or
insb
pushf
rcrl
ds
cmpb
pop
popf
lret
pop
xor
mov
imul
cli
addr16
icebp
addl
andb
mov
shlb
es
jmp
mov
mov
pop
ljmp
outsb
xchg
push
jne
imul
adc
ret
pop
mov
movsl
repz
or
inc
aad
or
repnz
aas
adc
cmp
loop
push
imul
cltd
fisubl
jge
shlb
mov
or
movsl
add
lock
scas
outsb
xor
fwait
xor
pop
add
dec
push
dec
mov
inc
nop
or
int3
push
mov
aas
sbb
pushf
sub
leave
inc
les
enter
dec
aad
data16
mov
aam
imul
xor
or
sub
pop
popa
stos
pusha
xchg
cmp
inc
je
clc
or
jge
add
sarb
lock
jmp
mov
movsl
sub
adc
test
sbb
arpl
loope
test
in
push
mov
in
hlt
inc
aas
add
sub
lahf
mul
inc
cmpb
and
ljmp
dec
push
aaa
test
std
xchg
jns
mov
pop
orl
xchg
test
bound
sub
dec
add
ljmp
jmp
or
adc
xor
out
jne
inc
push
adc
mov
gs
je
xchg
int
movsb
cmc
push
scas
xchg
lods
fsubrp
enter
test
fstpl
ret
dec
cmp
sar
xchg
adc
loopne
or
sub
stos
and
or
inc
cmc
fwait
push
jbe
loope
lds
adc
enter
out
inc
jnp
fsub
out
test
pop
out
lods
icebp
movsb
std
sbb
mov
rclb
push
push
cmc
sub
mov
jl
sub
fcoml
cs
jb
stos
addr16
push
mov
or
and
stc
push
push
and
xchg
cmpsl
icebp
lock
sub
js
xchg
in
add
xchg
sbb
push
sub
out
mov
xor
cmp
popa
scas
jle
adc
sbb
mov
cmp
xor
jbe
iret
lret
mov
dec
xor
popf
xor
xor
scas
jne
lock
ljmp
inc
loope
cltd
aad
xor
comiss
pop
mov
mov
inc
jl
arpl
add
and
jecxz
stos
xchg
mov
lret
xchg
sub
dec
lods
fwait
loopne
inc
xchg
xchg
repnz
or
mov
xchg
jle
rcll
inc
pop
fstpt
mov
movsb
dec
out
mov
int3
movsl
jle
leave
test
adc
ja
sbb
mov
jp
popa
xchg
xchg
or
lods
sub
mov
mov
and
mov
pop
add
push
dec
btl
jmp
imul
xor
adc
jnp
push
out
outsl
pop
mov
in
dec
fstpl
adc
sbb
mov
or
mov
imul
adc
ret
imul
xor
mov
mov
push
int3
sub
mov
and
pop
push
loopne
aaa
popf
cmp
fcmovbe
sti
sbb
ljmp
dec
xor
xor
pop
push
mov
fcoms
and
mov
fmuls
paddw
mov
pop
call
xchg
push
lds
ffree
mov
int
pop
arpl
inc
pop
jmp
push
adc
mov
xor
mov
adc
and
jp
and
push
pop
xlat
sub
mov
mov
outsl
mov
rorl
clc
pusha
insl
pop
mov
mov
arpl
sbb
rol
mov
xor
mov
mov
cld
ret
fbld
movsl
mov
adc
xchg
icebp
push
movsb
insl
jmp
lret
mov
jp
or
fs
aas
and
fdivl
stos
mov
addl
inc
mov
push
xor
adc
pusha
pop
sti
out
mov
cmp
inc
add
in
add
insb
mov
pop
aad
adc
jge
pusha
lahf
bound
mov
add
sbb
shl
bound
jge
and
or
jcxz
hlt
jbe
mov
mov
call
outsb
ret
xor
mov
jae
imul
movsl
loope
cli
cmpsb
or
es
inc
fadds
es
and
shl
mov
mov
mov
ljmp
pop
icebp
jle
sarl
pop
sub
stos
mov
and
xor
lods
mov
loopne
fsubrl
das
out
sar
andl
push
dec
pop
lret
sub
sbb
inc
and
out
xchg
stos
and
mov
adc
adc
int
cld
mov
shrl
push
fsts
xchg
loopne
repz
pop
das
rclb
movsb
jae
popf
gs
mov
sti
pushf
cmp
push
sti
jg
cmc
fisttpll
jns
sub
xchg
fdivrp
js
jns
mov
sbb
lret
push
push
mov
sub
stos
sub
dec
popf
lods
mov
jb
pop
sbb
bound
int
jbe
leave
mov
and
mov
cwtl
mov
jle
fnstcw
cmc
xor
insl
xchg
divl
shll
and
lds
movsl
not
bound
es
fistps
out
push
xchg
out
push
int
mov
inc
in
shll
fildll
repz
add
sub
push
popf
mov
cld
test
cld
jnp
pop
shll
dec
mov
dec
lock
pusha
xchg
ljmp
icebp
push
inc
in
imul
rorb
test
dec
clc
push
daa
mov
pop
push
xchg
daa
and
pop
pop
xor
pop
fsubrs
mov
addb
jne
pop
mov
fdivr
add
sbb
mov
adc
mov
sti
mov
sbbb
mov
cmp
stos
push
push
jb
call
cmp
std
xchg
nop
fistl
push
insb
xchg
enter
out
xor
adc
jno
cli
and
mov
icebp
std
push
pop
fs
push
push
dec
adc
push
arpl
adc
ja
push
aam
mov
push
cmp
and
jl
mov
inc
mov
xchg
mov
je
bound
outsb
rolb
mov
aas
jle
das
sub
sub
lea
jne
xchg
pop
add
push
nop
mov
pop
and
cmp
or
movsb
add
cmp
testl
xor
lahf
mov
or
mov
mov
jbe
push
mov
leave
cmp
sub
inc
out
mov
aad
sbb
fcmovnb
call
lods
clc
jns
scas
sub
mov
loopne
nop
lds
cmp
out
push
lret
sub
push
push
movsl
icebp
orb
cli
addb
imul
mov
lcall
repnz
call
fisubrs
or
adc
cmc
jbe
jno
mov
push
xchg
sub
jns
dec
scas
stos
xlat
and
dec
xor
out
into
ret
cmp
ret
scas
sub
fbld
push
outsl
adc
out
add
inc
or
and
cmp
xchg
mov
mov
adc
or
jl
cmpsl
cmp
imul
lods
js
scas
loope
adc
add
sahf
sub
push
and
inc
fstpt
cmpsb
in
sbb
sub
rclb
pop
inc
pop
mov
in
inc
cwtl
repnz
pop
sarl
or
xor
hlt
pop
sbb
jecxz
adc
xchg
in
pop
xor
or
repnz
mov
cmc
stos
cwtl
sbb
das
cmp
call
push
cmc
and
ljmp
inc
jno
cltd
add
mov
mov
cltd
enter
mov
lret
repz
addl
mov
jecxz
je
int3
pop
xchg
mov
fidivrl
sub
movsb
fcomi
sub
aad
movsl
shlb
gs
cltd
insb
stos
ret
ffreep
push
xlat
pop
mov
mov
ficoms
testl
xor
cmpsl
add
inc
cmc
sub
dec
movsb
mov
enter
test
andb
loopne
inc
and
test
daa
fwait
clc
mov
jmp
inc
stos
das
xchg
ss
fcmovnb
fsubr
enter
cmp
inc
scas
xchg
mov
popa
xor
lods
cmp
jmp
ficompl
sbb
bound
mov
jnp
imul
into
sub
adc
das
pop
xor
icebp
leave
dec
int3
fsqrt
iret
inc
fwait
xor
push
arpl
xor
ficoms
fsubrs
cmp
gs
cmpsl
mov
cmp
sub
and
mov
mov
bound
adc
jne
push
loopne
jne
adc
inc
adc
xchg
cmp
cmp
scas
jne
scas
sbb
xor
xchg
scas
aas
shl
jae
push
xchg
ljmp
add
lea
sahf
adc
mov
das
les
xchg
cmp
push
mov
ret
sub
jle
cmp
jg
cli
mov
cmc
imul
adc
repz
pushf
or
lea
out
repnz
adc
jne
fmuls
les
insb
xchg
push
or
test
ds
add
sahf
cmpsb
push
aam
fcmovne
jmp
mov
ds
in
lock
inc
push
or
mov
mov
push
test
xchg
popf
iret
lret
shrb
and
enter
xchg
cmp
dec
sbb
sahf
nop
mov
and
insl
fisubrl
addl
sub
ret
cmp
ss
dec
cli
loope
fs
cmc
mov
mov
sub
cld
out
mov
sub
dec
das
popa
outsb
jno
in
add
mov
jecxz
mov
stos
cli
rclb
or
mov
xchg
push
xchg
adc
adc
mov
inc
dec
inc
jecxz
xchg
cmpsb
lods
push
imull
fnsave
jbe
frstor
mov
sub
int3
inc
push
movsb
mov
notl
stos
adc
dec
enter
cwtl
leave
cmc
insl
test
and
in
push
add
fs
ss
mov
jle
sbbl
xchg
jl
sbb
sbb
mov
push
push
bound
das
mov
loop
enter
arpl
sbb
fadds
push
ficoml
adc
dec
rcrl
xor
and
fsubrl
push
add
sti
ss
push
andl
mov
int3
and
xlat
test
ja
mov
sbb
js
or
sub
les
lods
push
enter
mov
call
xor
lock
std
pop
add
test
xor
sbb
mov
cmc
ljmp
pushf
xchg
dec
mov
xchg
pop
dec
out
lods
lods
cmp
ret
js
fs
mov
lret
jnp
add
ss
cmp
iret
jnp
enter
addb
fadds
sub
cwtl
in
lea
cmp
jnp
in
imul
aam
in
xchg
sub
pop
bound
inc
scas
jge
fs
inc
sbb
insb
mov
and
lret
push
mov
adc
cld
arpl
xchg
jae
mov
in
mov
sbbl
inc
in
mov
cmp
dec
ffreep
mov
inc
mov
xchg
ds
and
into
sub
icebp
rcrl
sti
call
mov
call
xchg
sti
fdivl
stos
gs
ja
divb
sub
and
rolb
pop
xorb
pop
lds
mov
enter
lods
in
mov
and
push
jmp
bound
xor
mov
and
adc
in
testb
push
int
hlt
push
cld
adc
mov
jg
out
rclb
popf
movsl
inc
mov
mov
mov
mov
push
cmp
std
xchg
movsl
cmp
jno
cmpsb
mov
cld
leave
dec
push
int3
sub
ss
or
adc
or
insl
cmc
adc
sbb
andl
jnp
and
js
cmpsl
in
jo
fsubrl
movsb
int3
lahf
repnz
lock
sbb
mov
leave
iret
negl
jp
or
aad
cmpsb
push
jnp,pn
add
xlat
xchg
call
jnp
cs
ret
cmpsl
popf
in
lahf
dec
add
push
or
mov
jno
ret
mov
add
test
dec
inc
fstpl
scas
adcl
add
stos
xor
pop
out
out
cltd
imul
sub
sub
cmp
xor
sub
popf
jmp
push
and
or
adc
loopne
inc
add
sar
cmp
jns
sub
xor
and
sub
dec
pop
es
clc
mov
mov
fdivr
mov
cs
fidivs
ret
clc
loopne
shlb
sar
mov
shl
cltd
xorl
dec
clc
jecxz
stos
in
cmpsl
adc
repz
sub
in
cmp
and
andl
jl
push
push
sbb
pop
mov
mov
cmp
sbb
mov
mov
mov
sbb
fldcw
push
mov
arpl
pop
mov
into
or
and
mov
xlat
cwtl
in
aad
jnp
fwait
pop
xorb
fwait
push
insl
xor
test
ds
mov
gs
movsb
hlt
fcompl
inc
xchg
ljmp
jb
mov
in
sub
lea
and
inc
and
ret
lods
int3
sub
ss
sub
fmull
iret
subb
mov
ja
inc
cmp
mov
mov
cmp
gs
mov
outsb
lods
add
pop
xor
push
dec
negb
dec
sahf
aaa
in
jae
and
push
jb
fsub
cld
mov
loop
cmp
inc
add
imul
dec
loopne
sbb
fimull
aaa
adc
popa
andl
or
enter
pop
mov
mov
sbb
inc
test
out
cwtl
sub
pop
mov
popa
xchg
mov
push
in
jns
popa
push
adc
fs
push
cmp
and
pop
loope
jl
fsubrl
inc
ds
cmp
push
out
fwait
sub
aaa
mov
data16
cmp
movsl
pusha
mov
jno
dec
stc
and
dec
outsl
xchg
test
stos
sahf
testb
pop
xchg
popf
jns
adc
cmpl
mov
mov
hlt
mov
cmp
pop
inc
jmp
pop
jae
lds
mov
iret
stos
popa
mov
shlb
pop
insb
loope
push
push
aaa
lock
push
jl
cltd
mov
mov
lds
cmpsl
fs
sub
mov
jmp
cwtl
jge
negb
roll
adc
push
sub
jl
inc
xor
loopne
in
sti
inc
shr
mov
inc
push
mov
cmp
cmpb
jle
jl
and
pop
dec
cmpb
shrl
push
ret
jno
jmp
mov
inc
mov
out
mov
cmc
insb
ds
pusha
sti
ret
jne
jbe
mov
lret
fiadds
enter
repz
call
sbb
pop
pop
pop
in
lret
cmp
mov
dec
push
dec
pop
scas
inc
sti
push
dec
push
push
lods
xchg
push
iretw
bound
pop
cmpsb
push
lcall
lret
outsb
loope
pop
ds
out
sub
adc
inc
add
sti
arpl
push
mov
xor
clc
test
pop
xchg
lahf
mov
jae
shlb
jmp
jnp
out
fsubs
inc
pop
push
mov
cwtl
mov
mov
pop
cmc
cmp
jg
mov
stc
call
add
cmp
aad
mov
dec
push
xchg
pop
cmp
bound
inc
inc
mov
mov
push
pop
jp
cli
bound
dec
stos
les
out
jns
mov
pop
push
es
dec
rep
mov
fnstenv
leave
js
into
jmp
push
data16
xchg
sbb
inc
aaa
adc
push
movsb
call
lods
mov
hlt
loop
out
sub
test
sbb
add
nop
cmp
scas
cmp
clc
push
test
push
loopne
in
arpl
mov
je
sbb
std
push
push
xchg
cmp
imul
mov
stos
pop
adc
dec
mov
scas
mov
jp
sub
mov
int
jbe
pop
adc
dec
loopne
xchg
jb
pop
popa
dec
dec
lock
pop
mov
sahf
sub
cmp
pop
mov
dec
out
xchg
iret
call
jnp
out
test
push
sub
fidivl
inc
or
stos
sarb
sets
bound
xchg
pop
in
cmp
pushf
lock
sbb
dec
loop
dec
cmp
inc
cmp
xor
test
push
negl
adc
scas
dec
bound
cwtl
mov
mov
mov
in
jp
sbb
adc
mov
addr16
push
cmpsl
jns
mov
outsb
xlat
sub
mov
loopne
lods
cmp
lods
and
psrlw
pop
jge
inc
shlb
fldl
std
or
test
ja
mov
call
and
xor
shl
mov
ljmp
adc
mov
or
aas
aaa
sbb
fdivrs
adc
jecxz
sar
mov
pop
fwait
mov
stc
mov
push
jge
ret
mov
fimull
ja
fildll
fisubl
movsl
adcl
cmp
out
movsb
das
cmp
cmp
pop
xor
es
cwtl
push
sub
mov
pop
das
into
inc
fldt
xor
sub
sbb
mov
arpl
in
or
ljmp
push
imul
addr16
lahf
xor
xor
or
dec
out
enter
fs
xchg
fstpl
cmpb
popa
xchg
or
cmc
push
add
inc
mov
adc
dec
jne
stc
dec
lods
cmp
mov
lods
nop
fsub
add
test
pushf
xchg
jo
rolb
jp
mov
lds
in
out
push
repz
pusha
fdivrl
ret
test
cwtl
adc
adc
ret
sbb
and
addr16
xchg
mov
dec
scas
and
xchg
ljmp
shll
cmp
mov
cwtl
movsl
sti
mov
sbb
xchg
enter
or
or
xchg
repnz
aas
sbb
and
in
pop
lock
popa
cltd
inc
enter
int3
imulb
cli
outsl
mov
pushf
jo
fsubrl
lret
cwtl
or
jb
and
cmp
lahf
push
das
inc
add
inc
fisttps
mov
dec
les
xchg
ja
push
fs
std
ljmp
sub
push
pop
and
es
pusha
dec
lods
sbb
mov
xlat
scas
push
mov
adc
xchg
rolb
out
pop
push
sub
jae
adc
lods
xchg
mov
loopne
pop
mov
inc
push
cmp
in
inc
pop
adc
call
mov
pop
mov
lock
pop
stos
mov
or
jbe
mov
addr16
and
in
lcall
jb
xchg
in
roll
lods
add
or
or
inc
dec
aad
scas
rcrb
cs
pop
xor
xor
lods
insl
popf
call
cmp
jae
and
jns
negl
jl,pn
add
push
mov
mov
jg
in
hlt
xchg
xor
in
mov
std
jb
lea
fistpll
mov
data16
jo
call
aaa
mov
mov
test
sahf
mov
addr16
xchg
mov
mov
or
mov
xor
fdivr
cld
xchg
jo
xor
push
fldcw
mov
pop
pushf
je
in
add
stos
aam
adc
cmc
nop
jne
lret
sub
or
shl
insb
inc
dec
jo
push
movsl
inc
mov
cmp
mov
mov
jne
call
scas
xor
bound
test
lds
flds
je
push
adc
jge
pushw
js
or
scas
aaa
xchg
cld
orb
test
fs
xchg
insl
mov
cmp
in
or
xor
cltd
ret
aaa
shll
jae
adc
xor
cli
xchg
bound
mov
stc
add
mov
dec
and
loop
mov
popf
cwtl
fucomip
sub
fwait
shr
andb
dec
lods
bound
mov
mov
imul
cld
add
stos
mov
clc
or
test
inc
ja
inc
mulb
cmp
xchg
push
cli
or
push
test
jno
xchg
xchg
cmp
in
sbb
cli
or
sarb
scas
cmp
cmp
pop
mov
stos
scas
repz
loope
inc
cmp
cld
inc
cmc
and
addr16
adc
adc
xchg
mov
jp
sub
and
fs
imul
nop
roll
dec
push
loopne,pn
insl
rcll
sbb
hlt
adc
mov
paddb
inc
lret
xor
ds
xchg
lret
int3
or
pop
add
dec
push
add
hlt
pop
out
jl
fbstp
cmp
pop
shrb
push
push
popf
push
addb
push
xor
add
lahf
jo
push
xor
fsubp
inc
jge
ljmp
pop
movsb
rolb
das
test
push
jge
sub
out
mov
inc
push
cli
xchg
pop
sub
out
pop
or
js
cwtl
addb
xlat
outsl
es
jae
push
xor
test
adcb
xchg
xchg
fldl
and
bound
out
lea
xchg
cmc
movsb
out
mov
iret
and
cmp
push
clc
sub
jp
push
xor
sti
gs
mov
insb
andl
repnz
or
pop
xchg
notl
pop
pop
in
mov
mov
push
rorl
insl
jmp
je
pushw
push
icebp
jecxz
rcrb
xor
stc
in
mov
inc
stc
in
das
mov
cmpsl
pusha
int
pop
and
lcall
bnd
inc
pop
cmp
sub
call
mov
or
bound
aaa
jbe
and
addr16
mulps
scas
lcall
outsl
xchg
adc
fsubrl
mov
pushf
mov
aas
imul
mov
xor
inc
test
mov
outsl
mov
jae
jbe
test
ljmp
xchg
dec
mov
xlat
test
loope
shrl
frstor
pop
arpl
mov
sbb
mov
pop
arpl
mov
inc
adc
sahf
lds
adc
scas
fs
incb
cs
adc
sbbb
clc
dec
loope
lods
stos
push
sbbl
sub
sbb
pop
rcrb
or
iret
push
out
pop
imulb
shr
in
pusha
ret
int3
sub
sti
and
pop
ss
cwtl
mov
sub
mov
cltd
xor
repnz
mov
mov
fisubl
adc
sub
loopne
dec
lcall
pop
roll
sub
cmp
mov
jle
dec
add
mov
mov
lea
pop
and
movsl
out
xchg
movsl
stos
imul
orl
pop
mov
lea
push
ljmp
jb
add
scas
icebp
jne
xlat
mov
pop
js
inc
movq
or
fisubrs
xchg
fimull
shl
push
xchg
jno
and
bound
or
jnp
fcoml
in
outsb
ja
icebp
and
push
loop
cli
mov
rcrb
push
cmp
cmc
mov
mov
rcrb
fs
sub
daa
push
and
stos
pusha
lahf
lods
aad
flds
in
lahf
insl
jp
push
ljmpw
xchg
jmp
lds
aaa
sahf
add
lock
xchg
xor
and
add
pop
fucom
mov
scas
idivl
ret
lcall
or
out
xchg
sbb
adc
mov
cmp
pop
test
mov
pop
push
lcall
testb
sbb
pop
jge
cld
sub
pop
aam
jmp
outsb
mov
or
popf
in
and
test
sahf
leave
cltd
sbb
sbb
sub
in
xor
aaa
fidivrs
mov
rcll
cli
mov
test
loope
xchg
stc
mov
mov
and
cmpsl
xor
inc
in
push
adc
mov
cwtl
mov
sub
or
push
mov
cltd
xchg
jo
mov
mov
loopne
cld
xchg
inc
repnz
arpl
out
ljmp
lds
imul
jp
adc
out
out
notb
sub
sbb
dec
adc
lea
jnp
aaa
mov
stos
roll
dec
int3
xor
jge
inc
rol
repz
ds
jns
inc
mov
std
xchg
bnd
test
dec
loopne
jecxz
mov
aam
and
aad
push
iret
insl
add
lds
out
mov
imul
ret
es
push
in
out
pop
dec
ja
fdivrp
pushf
push
daa
sbb
scas
rcll
stos
pop
push
xor
dec
jnp
xchg
rolb
adc
int3
fdivl
out
sub
inc
sbbl
bound
adc
loope
cmc
addr16
mov
sahf
lcall
xor
fnstcw
xor
mov
into
push
adc
rcl
xor
or
pop
outsl
jb
mov
jno
mov
xor
adcb
jmp
imul
rorb
mov
sti
mov
pop
jno
mov
sarl
arpl
push
xchg
and
mov
jo
sbb
jle
push
dec
or
mov
fstpl
aad
jno
push
xchg
loopne
mov
pusha
pop
mov
popf
ret
or
mov
jle
and
mov
cli
xor
and
stos
adc
mov
in
mov
hlt
jne
xchg
gs
push
jnp
ss
mov
jbe
or
cli
mov
inc
mov
dec
cwtl
dec
push
test
mov
pop
ds
mov
mov
jle
jo
and
scas
sub
ja
stos
and
ror
hlt
arpl
pop
xor
mov
insb
aas
stos
fnstsw
sub
cmp
pushf
or
adcb
mov
lods
mov
adc
cmp
cltd
shl
ss
imul
adc
xor
push
jp
xor
cmp
push
dec
ret
int3
push
pusha
push
jnp
inc
and
add
sub
dec
sbb
sub
pop
cmp
push
scas
push
xchg
cmp
test
cltd
pop
ret
in
scas
dec
jp
loope
add
rorb
push
shlb
add
nop
add
in
mov
adc
mov
cltd
sbbl
mov
bnd
movsl
mov
xchg
adc
rcll
mov
lret
mov
mov
pop
sarb
push
fsubr
aaa
dec
xor
addr16
mov
out
test
and
pop
dec
scas
lock
dec
dec
mov
dec
clc
loop
push
std
dec
mov
bound
push
in
fsubrp
xchg
jl
fimuls
sbb
js
inc
jno
push
cmp
lds
push
scas
lret
icebp
fldl
push
pop
jns
pop
int3
cmc
fildl
out
out
addr16
out
mov
jmp
jne
fwait
js
and
shll
xor
mov
cltd
dec
pop
arpl
das
cmp
mov
lahf
sub
iret
mov
dec
mov
xlat
popf
rcrb
adcl
xor
push
les
and
sbb
fcompl
pusha
in
cmp
cmpsl
aam
cmpsl
int
jl
fcmovb
mov
rorl
rol
repz
xlat
out
insb
icebp
ret
xchg
in
ds
lock
pushf
mov
fcmovnu
jmp
xchg
jmp
rorl
scas
aad
mov
call
xchg
inc
test
fnstenv
test
imulb
test
int3
jno
loopne
and
mov
dec
pop
inc
xchg
cltd
pop
aas
cmpsl
pop
xchg
out
pusha
sub
iret
push
pop
xchg
nop
hlt
movsb
je
repz
bound
and
into
cltd
out
dec
mov
insl
xlat
nop
aad
cmp
cmp
or
jg
loope
shll
mov
push
mov
aad
mov
ror
fstl
xor
je
inc
jo
movsl
xchg
movsb
sub
add
shufps
cltd
in
inc
jne
sarl
lock
test
cmpsb
push
or
test
adc
and
movsb
jge
add
nop
pop
int3
rcl
push
mov
lea
sbb
std
arpl
clc
push
hlt
sbb
and
mov
inc
mov
sub
jns
jnp
sbb
pushf
icebp
xchg
movsb
adc
in
int
jae
mov
stos
mov
je
neg
xor
mov
jecxz
mov
cli
iret
mov
cwtl
out
addr16
clc
xchg
inc
pushf
xor
mov
loopne
aas
mov
add
pop
mov
mov
inc
sbb
mov
out
or
mov
xchg
xchg
aam
fmull
addr16
ret
push
cmp
or
push
cwtl
mov
or
in
lret
xchg
xor
mov
xchg
inc
rcrb
pop
imul
jp
out
xor
push
and
mov
lahf
enter
daa
mov
gs
adcl
inc
js
cmp
bound
aad
jns
ja
mov
push
test
xchg
xor
mov
dec
sub
ja
mulb
insl
fildl
es
pushf
in
sbb
mov
push
and
in
mov
cmpl
fwait
ret
push
mov
nop
call
push
inc
mov
jne
mov
orb
das
aaa
mov
nop
adc
dec
sbb
aas
jae
adc
xor
fstps
sti
aad
sbb
and
add
push
xchg
add
jns
call
push
jle
cltd
pop
dec
cld
popa
jae
cwtl
xchg
cmp
adc
push
dec
xchg
imull
imul
mov
movsb
dec
sbb
pop
sbb
jb
cmp
mov
push
std
jo
sub
test
sub
nop
mov
scas
push
js
pushf
push
cmp
jae
cmp
clc
je
push
lods
and
outsb
jae
pop
hlt
int
movsl
das
dec
out
lret
scas
cmpsl
negb
inc
stos
mov
cmp
ror
adc
and
insl
cmc
mov
outsl
and
jge
in
pop
pop
jg
ficoms
rorb
leave
sbb
dec
pop
popf
and
aad
xor
pushl
and
inc
jmp
sarb
inc
cld
mov
and
f2xm1
jl
cmpsb
pop
call
sbb
adc
popa
cmpl
call
or
pop
ret
jb
outsb
and
sub
loop
adc
jmp
and
dec
xchg
popf
lds
pop
jns
xor
xor
jmp
hlt
sub
fcmovu
sti
mov
decl
cmp
call
fwait
inc
fstps
cltd
and
inc
mov
push
aas
lods
jbe
addr16
repnz
cmc
lds
mov
fmull
xor
imul
sub
test
pop
lods
inc
push
or
dec
dec
push
icebp
or
pop
adc
push
and
mov
leave
repz
addr16
repnz
and
or
aas
ja
pop
jge
xor
mov
push
sub
test
push
std
xchg
lods
jge
add
sub
mov
pop
addr16
mov
mov
xchg
push
shrb
scas
xor
push
enter
mov
inc
xlat
or
jno
xchg
movsb
pop
and
jg
jo
jne
cmp
iret
ret
xor
jns
sbb
xchg
mov
ljmp
pusha
and
sbb
mov
xchg
dec
mov
test
fwait
testb
mov
dec
repnz
out
out
outsl
in
jp
xor
jne
aas
mov
lods
andb
mov
and
scas
fmul
jp
pop
jmp
or
push
inc
pop
pop
ja
cmp
cs
mov
push
push
dec
sub
pop
push
and
int
dec
xor
in
cltd
adc
xchg
rolb
mov
jbe
outsl
jb
mov
imul
inc
xor
sbb
pop
mov
push
aas
jnp
mov
icebp
in
push
daa
imul
mov
and
loop
xchg
addr16
ficoml
test
lret
sbb
xchg
and
dec
add
mov
movsb
jae
inc
pop
outsl
mov
xor
push
ret
call
scas
dec
hlt
jge
mov
outsb
push
cli
pusha
push
jbe
jb
mov
dec
xchg
pop
mov
in
ds
loope
dec
add
into
cmp
fbld
les
adc
mov
js
mov
mov
pop
mov
sti
jnp
mov
movnti
xchg
mov
adc
subl
into
testb
adc
cmc
jno
xor
int3
je
jg
xchg
lea
adc
shlb
aas
out
lretw
mov
stc
std
mov
les
ja
xchg
outsb
cmp
push
mov
das
mov
sub
pop
mov
xlat
xchg
or
mov
mov
xchg
arpl
vmovddup
leave
push
xor
and
repz
loop
mov
push
dec
lea
addr16
aam
pop
aam
loope
je
outsb
pop
pushf
loopne
dec
icebp
pslld
pop
push
push
sub
loopne
repz
addr16
shll
cwtl
jne
jne
loop
xchg
mov
push
inc
lods
imul
fistpll
sub
push
mov
stos
and
andl
in
mov
inc
lahf
ret
icebp
cwtl
mov
mov
or
pop
aaa
cltd
cmp
outsb
mov
xchg
xor
imul
ja
push
imul
xchg
sbb
push
adc
adc
lret
adc
fisubl
aad
ret
mov
cmp
je
mov
outsb
pop
push
jl
mov
cmp
jbe
and
pop
fldt
mov
test
and
fwait
pop
jg
sub
jb
ds
mov
cmp
stc
pop
push
ficoml
hlt
leave
dec
popf
push
outsb
sahf
je
xchg
mov
sub
or
test
jmp
mov
sbb
mov
xor
push
mov
jmp
inc
stos
cli
repnz
iret
rol
mov
jae
das
mov
cmp
jg,pt
fists
mov
outsl
push
enter
nop
xchg
lock
sti
lahf
mov
loopne
jecxz
test
stos
stc
xchg
mov
scas
sub
lods
jg
loope
pop
bswap
mov
add
mov
mov
or
ds
xchg
lods
sbb
cs
inc
inc
mov
mov
mov
sub
jno
pop
loope
mov
adcb
sub
adc
data16
fwait
inc
mov
ficomps
pop
scas
xchg
xor
fwait
mov
pop
or
fstpt
outsb
cmp
dec
inc
xor
xor
and
or
mov
jns
mov
or
cmp
movsl
dec
aad
repz
rcl
aas
mov
dec
mov
sub
sti
inc
nop
and
fiadds
iret
ljmp
leave
movsl
dec
lret
mov
ss
test
sub
mov
fwait
fs
jne
jl
lods
enter
cmp
sub
mov
es
jne
enter
in
stc
scas
inc
lahf
std
mov
mov
repz
loopne
jg
sbb
lahf
mov
xor
imul
mov
dec
out
in
lods
int
test
inc
in
mov
ds
clc
xor
cmp
loop
shrb
cmp
out
sbb
pop
cmp
dec
adc
inc
xchg
mov
cmp
mov
cmp
push
into
mov
call
int3
out
sbb
or
dec
pop
and
mov
dec
cmp
shlb
add
xorb
cmp
push
and
mov
or
rorl
mov
xchg
and
mov
mov
xchg
jno
jno
or
insl
xchg
mov
aas
pop
in
mov
arpl
pop
jge
lds
cld
test
testb
insb
js,pt
lock
push
insb
push
add
add
sub
jnp
xchg
mov
filds
imul
push
cs
mov
sub
cmpsb
aad
or
fdivr
out
jnp
push
dec
enter
jb
sub
xchg
ljmp
idivb
dec
insb
mov
in
adc
sub
addr16
sub
fdiv
lahf
add
mov
mov
jne
clc
lea
add
mov
int3
xchg
mov
nop
push
dec
sub
and
mov
mov
ds
icebp
fadd
push
cmp
out
or
jmp
inc
cmp
adcb
jl
pop
pusha
test
cmpsl
sub
jg
lods
xor
xchg
pusha
js
push
mov
dec
stos
pop
insl
stc
pop
mov
test
and
stos
sbbb
lea
movsb
jbe
loopne
insb
js
pop
dec
jp
out
mov
ss
sub
xor
enter
out
push
push
pop
mov
jne
movsl
push
loope
mov
cmpsb
jl
mov
cmp
cmp
aad
xchg
xchg
lods
or
lock
xor
sbb
xor
fdivrl
jb
scas
or
sbb
jnp
in
xor
mov
cmpsl
sub
push
cli
inc
pop
imul
aas
mov
fldenv
xlat
cmp
push
mov
sbb
jbe
es
jae
in
inc
fldenv
inc
or
xchg
ret
sbb
sbb
mov
add
push
mov
bswap
nop
aad
xchg
inc
clc
aas
into
push
in
adc
leave
pop
popa
loop
and
push
and
mov
aaa
sub
fisttpl
scas
out
das
or
mov
adc
out
pop
xor
loopne
es
enter
outsl
and
push
or
push
mov
fbld
and
es
std
pop
fwait
or
xchg
and
push
dec
mov
mov
mov
dec
pop
rol
dec
or
fadd
jnp
or
pop
int
xchg
xchg
mov
and
js
int3
div
fs
inc
lret
stc
xlat
insb
mov
add
jnp
jp
arpl
inc
xlat
xor
inc
mov
push
rorl
mov
or
mov
xor
mov
arpl
xchg
add
rol
ja
jecxz
rcrl
rolb
test
jo
cmp
aam
xchg
mov
add
pop
shlb
in
sarl
xchg
mov
dec
sahf
add
mov
push
mov
or
pop
loop
mov
add
repnz
dec
jns
call
xchg
in
sub
pop
filds
pop
cmc
pop
out
gs
cs
fldt
mov
cmp
in
adc
cmc
data16
sub
cmpsl
movb
push
sbbb
push
mov
aad
jae
inc
imul
dec
lahf
inc
add
mov
out
cltd
cld
fidivs
cld
push
std
mov
jo
or
fsubr
ret
bound
jecxz
mov
push
xor
arpl
aad
int
cld
inc
adc
sahf
xchg
cmp
sti
mov
test
cli
gs
and
or
push
cmp
inc
adc
bswap
test
push
enter
mov
xchg
jo
call
xchg
jp
xchg
push
or
jle
out
cmpsl
int3
fs
sub
sub
test
testb
fadds
scas
stos
clc
cmp
cltd
push
adc
scas
pop
jp
enter
nop
cmpsl
xchg
or
or
adc
mov
repz
pop
mov
iret
jae
xor
cmp
std
scas
mov
push
sub
bound
push
push
push
outsb
xchg
jl
fists
or
stc
pop
stos
test
dec
xchg
mov
mov
das
sub
cmp
es
lods
jbe
hlt
and
mov
test
in
inc
popf
ja
out
data16
mov
sbb
insl
repnz
jmp
push
es
ret
mov
mov
imulb
mov
mov
pop
fs
dec
out
cmc
push
gs
aad
lret
fimull
cmp
enter
push
fbld
shlb
stos
not
adc
sahf
push
arpl
mov
fdivrl
lcall
ljmp
mov
rorb
cmp
out
dec
mov
scas
sbb
mov
mov
sub
xchg
jns
jmp
loop
enter
ficoml
xchg
cld
inc
mov
pop
imul
pop
sbb
push
ret
cmp
jo
xor
inc
pop
adc
pop
pusha
aam
je
xchg
mov
pop
jne
ret
ja
dec
popa
pop
sub
xor
pop
scas
call
stos
jmp
lcall
pop
ficompl
leave
ficomps
or
inc
addr16
dec
pop
sub
outsb
cmc
aas
popl
pop
mov
enter
mov
push
pushf
adc
fwait
pop
js
ret
insl
push
shrl
xchg
cmp
mov
jle
ss
push
sbb
jge
iret
lret
jg
xor
or
test
or
call
rcrl
clc
push
imulb
mov
pop
inc
dec
pop
orb
and
int
push
xchg
mov
loopne
or
hlt
lods
outsl
xchg
sti
sbb
adc
mov
push
lret
aad
mov
les
cmc
push
lret
movsb
in
bound
testb
xchg
shr
mov
inc
daa
loop
stos
and
dec
adc
es
sub
fsubl
dec
into
pop
inc
push
mov
lahf
push
xchg
xchg
xor
jge
outsb
cmc
hlt
jae
pop
int3
add
and
cmp
data16
sahf
cmc
mov
pop
enter
mov
push
repnz
jg
shrl
mov
aad
lea
xchg
call
push
push
sbb
mov
cmc
subl
sub
sbb
fcoms
pop
call
push
notb
inc
add
or
mov
jno
test
js
adc
mov
jmp
out
dec
mov
xor
xchg
fs
mov
adc
and
insb
lcall
add
push
pop
or
adc
push
ret
mov
and
dec
mov
pushf
xchg
jg
or
pop
dec
jle
test
in
jne
clc
cmp
adc
fwait
push
sub
or
movsb
scas
mov
xchg
popf
mov
mov
sub
outsb
push
add
add
and
mov
aad
xchg
jns
xor
cmp
and
mov
loopne
cltd
repz
daa
or
popf
jge
or
xchg
clc
xchg
dec
xchg
xor
iret
lret
xchg
mov
xor
scas
out
push
mov
hlt
inc
fisubrl
rcrb
inc
inc
adcb
aam
lods
sub
mov
sarl
mov
cmpb
mov
pop
pop
jge
cmp
mov
pop
int
int
lods
fdivrl
lea
sbb
sbb
mov
ja
in
push
ss
into
lock
in
push
xchg
xchg
mov
int3
roll
enter
add
bound
ror
push
pop
loope
insl
arpl
movsl
aas
dec
scas
movl
mov
push
push
mov
push
fwait
test
aaa
jno
test
dec
mov
fsubrp
xchg
mov
aaa
fstpt
or
xor
and
or
inc
sahf
out
mov
xchg
mov
mov
xor
fldt
hlt
dec
in
outsl
mov
or
dec
xor
fnstsw
cmp
or
out
js
inc
mov
inc
mov
bound
pop
mov
lds
jb
xchg
pop
inc
sub
popa
cltd
xchg
lahf
xchg
mov
pop
mov
cmpl
enter
adc
das
ja
sub
sub
xchg
loopne
jo
add
outsb
lcall
cmp
jo
loope
mov
repnz
pop
lahf
icebp
mov
push
sbb
ds
out
jno
sub
cmc
arpl
mov
out
mov
xorb
and
imulb
lret
sbb
test
and
mov
push
addr16
and
sub
xchg
mov
ss
xor
movsl
or
or
stos
cmp
clc
pop
fwait
push
push
mov
lods
out
adc
cltd
dec
xor
sahf
into
fs
arpl
lretw
fistps
add
jmp
into
push
adc
rclb
outsl
push
xchg
in
inc
mov
mov
mov
inc
cs
lcall
mov
mov
scas
iret
dec
in
daa
fucomip
shll
or
sub
insb
sbb
stos
enter
mov
adc
jp
jmp
add
add
dec
jb
fisubrs
ljmp
xchg
pop
out
lods
cmp
xchg
jnp
cmc
xchg
and
and
and
sbb
dec
outsb
aas
lods
shll
aas
inc
xchg
int3
push
or
pop
pop
ja
insb
scas
sub
cwtl
and
lret
dec
popa
mov
mov
or
mov
adc
mov
mov
adc
das
sbb
orl
orl
test
xor
sub
cltd
sbb
mov
cs
pop
push
cmp
xchg
pop
lahf
xchg
repnz
shlb
cltd
xchg
adc
cltd
fcmovb
push
es
xor
outsl
nop
mov
dec
shlb
xor
and
test
fistl
jg
nop
inc
mov
cld
push
push
mov
mov
sbb
push
arpl
sub
jae
or
mov
bound
jb
adc
fiadds
shll
fwait
push
js
inc
arpl
mov
adc
or
shll
lea
loopne
shl
mov
xchg
lcall
div
sahf
and
mov
push
icebp
pop
inc
fadds
cmp
je
pop
call
inc
mov
int3
push
shlb
mov
lcall
inc
mov
test
adc
push
pop
mov
popf
clc
int3
lds
ret
mov
adc
push
rclb
add
fisttps
mov
std
and
mov
or
cmp
inc
cmp
cmp
xor
add
in
xchg
fnsave
lds
lods
inc
dec
imul
sti
movsl
cmp
jp
sub
inc
stos
jae
aas
mov
lcall
aas
xchg
cmpsb
jo
mov
lods
mov
pop
insb
je
sbb
pop
ret
add
pop
dec
fbstp
addr16
xor
adc
xor
std
movsl
scas
sub
pusha
add
cli
cmpsl
mov
xor
mov
iret
fwait
notb
stos
lcall
mov
pop
jecxz
and
sub
mov
insb
fistpl
inc
sbb
pop
jno
mov
mov
jg
pop
add
pop
ja
clc
add
xchg
in
push
imul
insb
and
pop
test
add
xchg
add
cmp
xchg
insl
push
mov
xchg
loop
adc
gs
test
inc
pusha
inc
or
adc
arpl
stc
mov
xlat
neg
lret
aas
cmc
sbb
insl
dec
cmpsl
pop
jns
ss
imul
jmp
push
rorb
das
pop
repnz
mov
xlat
sbb
or
add
lods
sbb
cwtl
loope
sbb
add
pcmpeqb
cmpsb
jg
clc
jnp
sarb
insb
test
js
xor
mov
mov
jp
mov
sti
shlb
clc
stos
jle
in
dec
movsb
xchg
xchg
push
add
aaa
jle
test
pop
pop
lods
xor
decl
mov
sbb
push
mov
icebp
fsts
shrb
and
xchg
xchg
jl
shrb
inc
loopne
or
push
out
and
ret
fiadds
xchg
pushf
and
aad
add
int
push
cs
jnp
pop
jae
sbb
movsl
sbb
scas
sbb
push
cs
ds
mov
lods
jae
out
xor
stc
and
test
and
lea
xchg
roll
jno
push
or
cmpsl
outsl
cmp
pop
cmp
out
mov
lret
jno
sarb
and
mov
and
psadbw
inc
sub
push
inc
lahf
int3
pop
loopne
sahf
sbb
out
nop
test
test
sub
add
clc
jo
pop
pop
xlat
mov
sub
adc
clc
out
ret
jmp
adc
in
lcall
sub
lret
jge
shll
shlb
dec
sbb
mov
icebp
or
mov
loopne
and
inc
dec
sahf
jne
jle
cmp
stc
inc
loop
mov
nop
sarl
imul
rep
and
scas
pop
jecxz
adc
mov
out
out
ljmp
pop
add
sbb
add
sahf
aas
dec
cmc
in
cs
mov
or
xchg
js
roll
mov
cmp
xor
cld
pop
loopne
mov
cmp
push
jge
jbe
or
adc
mov
push
inc
mov
out
dec
loopne
out
cwtl
jb
lock
movsl
dec
test
mov
hlt
sbb
int3
jle
cwtl
inc
lahf
jno
or
addr16
xor
push
fcmovb
pushf
stos
inc
clc
cli
push
cmp
jecxz
xchg
adc
outsl
leave
adc
push
repnz
xchg
xor
push
xor
push
mov
jl
js
inc
lret
icebp
ljmp
mov
and
inc
test
addb
add
cmp
outsb
dec
cmpl
movsl
and
rclb
sti
xor
movsb
shl
ret
movsl
arpl
mov
rcr
mov
rol
sbb
pushf
pop
dec
stos
mov
cmp
into
adc
add
int3
loop
stc
in
lcall
dec
push
out
adc
addr16
ljmp
test
mov
xor
mov
or
stc
aam
add
ja
ret
movsl
mov
push
lods
xchg
mov
mov
pop
sub
sbb
pop
lret
push
or
jb
dec
xlat
inc
dec
or
adc
xor
sub
fnstsw
movsb
in
sti
jne
sub
pusha
in
stos
and
lock
push
or
sbb
ja
add
mov
iret
dec
cmc
sub
adc
aad
jb
je
int3
xchg
pop
xchg
inc
addr16
inc
pop
out
cwtl
scas
pop
pop
popa
mov
push
clc
popa
call
leave
sbb
xchg
int
cmovne
sbb
insb
andl
testl
sbb
out
pop
xchg
imul
std
inc
cmpsl
sub
cmp
cld
jmp
pop
mov
push
inc
fwait
aas
mov
popa
fmul
int3
js
xchg
dec
shl
ret
or
das
in
jecxz
xor
sahf
push
sbb
jp
fwait
jbe
cmc
outsb
cltd
pop
scas
mov
test
or
mov
pop
and
pop
sbb
scas
sahf
mov
mov
out
push
push
data16
push
push
cmpsb
push
cmp
shlb
fisttps
xor
dec
shl
pusha
repz
fists
sahf
jne
inc
aam
lods
sbb
push
and
mov
rol
mov
cmp
lods
lret
icebp
push
popf
add
stos
repnz
xchg
pop
loope
dec
test
cmc
mov
pop
sahf
push
xchg
add
lea
mov
out
shlb
xor
cs
push
add
roll
push
sbb
mov
pop
gs
in
ret
sub
lcall
lock
cmp
mov
cld
int3
imul
jp
fstpl
dec
push
dec
scas
mov
cld
add
daa
cs
sub
fldenv
enter
xchg
fldenv
jb
in
int
mulb
cmpb
cld
xchg
dec
mov
gs
mov
mov
stos
or
std
mov
arpl
sub
xor
gs
sub
call
and
das
lods
repz
push
ljmp
fs
push
pushf
pop
cmp
leave
icebp
sub
rcr
in
inc
push
xchg
arpl
lods
xchg
lret
mov
cmp
fsubs
add
push
mov
and
push
test
in
push
pop
scas
out
test
mov
jnp
je
aas
sub
xchg
in
sbb
arpl
out
sub
push
xchg
mov
xor
and
les
pop
adc
push
xlat
rcrb
adc
dec
shlb
stos
scas
cmp
das
int
sti
or
pop
loopne
fmuls
sbb
clc
pop
test
xor
xchg
fisubrl
mov
aad
add
cwtd
or
mov
mov
pop
addb
sti
hlt
sbb
xchg
sub
push
test
es
or
add
xchg
xorb
mov
sti
cmp
dec
ljmp
aad
and
xor
add
scas
adc
xchg
cmp
add
in
sub
and
lds
add
lds
adc
cmc
jno
jns
mov
xchg
xor
in
test
outsb
mov
cmp
addb
xchg
je
int
addr16
mov
jae
sub
sbb
jnp
mov
adc
or
addr16
mov
pop
cmc
pop
or
lods
sub
sub
addr16
gs
adc
xor
adc
shrl
xchg
fsubrp
les
dec
mov
push
and
ja
pop
dec
xchg
in
leave
or
xchg
add
jae
cmp
imul
mov
lret
xchg
lcall
mov
jne
dec
pop
pop
pop
test
js
clc
adcb
sbbb
or
clc
inc
call
mov
mov
orl
cwtl
sbb
jl
mov
call
adc
in
and
pop
jo
in
pop
lahf
stc
inc
xchg
pop
sub
xor
sub
jbe
mov
in
cli
xchg
cs
mov
enter
push
pop
bound
or
mov
ds
dec
fstl
aam
aad
push
mov
inc
xor
pop
insl
leave
or
hlt
outsl
sbb
je
loop
fcmovnbe
jl
data16
add
add
push
inc
cmp
xor
lcall
ret
test
push
push
aaa
cltd
ror
inc
fs
pop
insl
jp
nop
xor
fidivs
lock
add
xorl
popf
rorl
ret
cmp
adc
insl
jno
push
dec
scas
mov
mov
fcoms
sbbb
sbb
and
mov
pop
inc
mov
stc
dec
sbb
xor
push
repz
inc
xor
push
xchg
push
mov
push
push
pop
pop
pop
or
fisttps
jmp
popa
dec
nop
inc
out
push
pop
fistpll
mov
adc
jae
test
adc
xlat
roll
adc
ljmp
sbb
mov
out
adc
js
add
dec
daa
daa
adc
pop
xchg
and
mov
xchg
imul
enter
jle
repnz
je
int3
mov
insl
sti
pop
or
adc
pop
jmp
cli
cmp
adc
lret
hlt
movsb
inc
lods
daa
sub
std
movsb
cmp
fildll
mov
loop
cmpsb
stc
xchg
loop
fmull
lds
add
pop
push
cli
add
sahf
dec
add
and
cwtl
xchg
xlat
arpl
inc
or
sbb
enter
stc
sbb
jmp
fs
mov
fimull
mov
xchg
cmc
rcll
daa
sbb
mov
sbb
insl
jns
dec
int3
cli
dec
mov
push
inc
orb
stc
push
sti
loop
cltd
inc
and
lods
arpl
mov
in
mov
jg
lock
sbb
jg
dec
std
arpl
mov
sub
pusha
mov
jns
mov
jno
andb
pop
nop
mov
or
lods
xor
mov
xchg
mov
sub
sahf
push
into
cs
sbb
xchg
es
xchg
call
fucomi
arpl
push
ja
push
test
mov
dec
pop
test
cltd
lahf
sub
pop
aad
repnz
mov
or
stos
push
sbb
addl
jmp
fstps
or
arpl
test
dec
xor
popa
push
ret
jae
subl
scas
xchg
mul
xor
cmc
push
cld
mov
jb
and
pop
mov
jl
leave
push
push
shl
loopne
fiadds
ljmp
xchg
or
xor
fstl
xor
mov
jge
test
cmp
mov
mov
sbb
xchg
insl
inc
add
loope
and
data16
hlt
jg
cmp
scas
lcall
in
or
daa
idivb
pop
mov
push
sbb
pop
lods
dec
xorb
mov
dec
sbb
push
jg
pop
into
fcompl
test
test
imul
rcrb
push
ja
pop
fnstenv
out
cmp
fdivl
sub
cmp
ret
icebp
movsl
push
jae
and
enter
movsl
and
stc
insb
cld
xor
mov
push
shrl
ljmp
stos
cmpsl
mov
fiadds
dec
sbb
fbstp
cmc
ss
aam
push
xor
fwait
sbb
sbbl
lea
sub
dec
and
sahf
cmp
xlat
fcompl
jmp
js
aaa
roll
cli
xor
das
fbstp
fwait
mov
je
add
dec
jp
lods
add
mov
sub
inc
pop
mov
outsb
cmp
test
cmp
jb
cmpsl
xorl
jae
mov
cld
mov
es
sub
in
mov
es
xorl
jb
sub
mov
inc
les
sbb
xchg
mov
mov
mov
in
out
aaa
sub
mov
mov
sbb
push
aas
xor
xor
leave
adc
xor
add
les
call
sbb
xor
sub
cmp
jno
add
pop
icebp
loopne
push
push
adc
push
jmp
inc
aaa
decb
aaa
std
out
ds
and
leave
int3
aad
cmpsl
mov
xchg
stos
js
add
xchg
pop
daa
rcrl
xor
sbb
pop
or
out
ret
mov
mov
adc
pushf
jg
scas
mov
dec
mov
mov
cmc
jb
shl
push
pop
mov
or
stos
pushf
sub
andl
pop
punpckhdq
mov
sti
mov
push
lahf
push
mov
in
popa
sub
js
xchg
mov
push
push
inc
daa
iret
cmp
imul
pop
clc
ror
push
add
cwtl
add
in
repnz
ss
pop
fsubp
das
add
dec
cmp
sbb
push
aaa
imull
je
jl
dec
movsb
hlt
iret
popf
ljmp
sub
insb
ja
mov
mov
scas
addb
push
jo
iret
pop
sub
fwait
mov
mov
pop
sub
enter
dec
aaa
jb
cmp
jne
or
imul
das
and
psrlq
cmp
pusha
test
loope
inc
bound
mov
cmp
cmp
fldt
out
or
lods
xchg
inc
cld
mov
sbb
pop
jge
test
repz
pop
mov
add
or
sbb
xchg
loop
sbbb
outsb
repz
scas
jl
cwtl
pop
push
sti
ljmp
dec
push
aaa
dec
sbb
fstpl
enter
pop
mov
out
jp
pop
or
pop
pop
hlt
or
test
xchg
sar
xchg
cmpb
or
cmpsl
sbb
loop
mov
in
adc
and
mov
mov
je
dec
pop
jo
push
in
and
jb
adc
out
enter
fisubrl
mov
pop
pop
in
mov
mov
ss
mov
in
pushf
add
and
ficoms
mov
aas
or
out
lret
iret
cmp
add
sub
cmp
xor
in
adc
xor
sub
popa
add
fs
or
xlat
les
jmp
leave
ss
jle
mov
push
in
xchg
mov
test
ficomps
inc
outsb
mov
sub
pop
jl
cld
ds
sbb
iret
push
sbb
pop
subb
pop
hlt
xchg
cmp
mov
fisubs
mov
call
enter
xorl
mov
fwait
jnp
xor
cmp
sbb
mov
rcrl
lcall
sarb
sbb
dec
leave
test
les
mov
cmp
mov
cltd
call
cmc
ljmp
xchg
or
adc
fsubrs
jg
add
mov
and
jnp
mov
std
repnz
insb
push
insl
into
add
aad
and
sub
sbb
add
leave
cs
add
cli
mov
inc
or
add
mov
stc
and
clc
jmp
add
rclb
dec
out
xor
cld
scas
push
stos
outsl
mov
rorb
mov
imul
fmulp
inc
divl
pushf
sbb
hlt
adc
lahf
inc
or
pop
xlat
outsl
pushf
xlat
divl
addr16
in
loope
lods
cmc
mov
decl
jno
cltd
hlt
test
scas
outsl
mov
les
push
out
imul
aad
pop
jns
out
cmp
jge
jo
sub
xor
mov
or
std
xor
inc
mov
inc
pop
pop
pop
mov
xchg
jecxz
fcmovnu
lahf
andb
and
orl
movswl
xchg
xchg
inc
xor
insb
lods
jl
mov
and
mov
loope
jns
imul
imull
dec
pusha
jmp
arpl
mov
lods
hlt
imul
sar
pop
or
sbb
adc
sbb
mov
daa
pusha
sarl
notl
lret
iret
xchg
sahf
push
repz
rolb
push
mov
push
inc
and
xchg
and
push
and
mov
sbb
dec
and
xchg
dec
xchg
jbe
xor
cld
js
cmp
icebp
xor
sbb
inc
pop
lock
dec
push
cmpsl
outsl
and
pop
sbb
stos
and
mov
cmp
scas
adc
dec
mov
fldenv
pop
sbb
js
push
imul
push
sahf
pop
mov
stc
rcll
shrb
insb
mov
shr
push
jmp
ss
inc
add
jmp
mov
js
loopne
iret
hlt
mov
mov
mov
in
inc
pushf
mov
pop
shl
sbb
cvttps2pi
lahf
stc
xchg
xchg
js
leave
leave
mov
nop
les
insb
xchg
jns
inc
jge
loopne
mov
mov
pop
xor
push
repz
ret
shrl
jge
dec
repz
sub
pop
imul
inc
mov
das
and
ja
stos
scas
cld
mov
cmpsb
and
loopne
xor
and
imul
cmp
cmc
loope
push
push
mov
xchg
cmpsl
movsb
les
out
pop
adcl
lea
fxch
or
add
popf
xchg
sar
adc
mov
and
cmp
movb
xchg
cmp
fsubr
vpaddusw
orl
popf
inc
sub
mov
imul
test
pop
add
dec
popa
insb
adc
call
movl
inc
mov
adc
call
cmpsl
mov
xor
cltd
xchg
ss
mov
aas
or
push
push
fmuls
jno
stc
das
cwtl
add
adc
pop
aas
sbb
jmp
jae
cld
cli
lea
and
icebp
imul
jmp
push
lret
out
faddl
sbb
dec
loopne
sbb
mov
rcrl
sets
les
aas
sbb
fcoms
hlt
xchg
xor
and
loopne
mov
fsubl
jae
mov
adc
ret
sub
xor
push
cmp
xchg
or
shlb
pop
mov
repnz
inc
adc
movsl
rcll
div
insl
dec
cmp
test
into
push
xor
mov
loopne
aas
inc
mov
mov
insl
mov
xchg
enter
test
stos
adc
cmp
push
and
adc
insl
dec
fwait
cwtl
adc
inc
jbe
add
cmc
mov
mov
dec
or
addr16
push
enter
pop
push
sub
mull
pop
and
inc
std
popa
jg
pusha
out
dec
xchg
je
push
or
mov
test
mov
ss
enterw
xchg
cmp
test
flds
xorl
dec
cmp
jge
pushf
lock
das
loope
or
mov
mov
sbb
mov
sarl
jmp
pushf
sub
cmp
in
int3
es
push
push
pushf
mov
insl
sbb
orps
icebp
nop
sub
insb
jp
push
pop
inc
push
mov
stos
cli
mov
pop
jge
cmp
cmp
popa
sub
movsl
ljmp
mov
popf
jmp
mov
stos
jp
mov
xor
cmpl
inc
and
xchg
test
movzbl
mov
test
gs
fwait
shr
bound
int
rolb
das
ss
mov
out
push
popa
setb
push
ja
lods
mov
cmp
push
xchg
es
imul
cmp
push
xchg
pop
sbb
adc
mov
mov
daa
mov
mov
mov
xor
push
jp
mov
mov
mov
out
jl
pusha
repz
xchg
mov
orb
jecxz
idivb
out
and
mov
repnz
mov
inc
jne
popf
cmc
xchg
jl
inc
mov
fdivl
test
test
fwait
mov
adc
enter
xor
pop
pop
jae
std
xchg
imull
ja
adc
sbb
dec
mov
sub
cmpsl
mov
mov
stos
dec
adc
jmp
mov
loopne,pn
mov
and
mov
mov
xchg
stc
push
out
sahf
pusha
xchg
fsubs
jno
xchg
xor
aaa
and
mov
rol
pop
fstps
cmp
mov
ficomps
imul
outsb
repnz
sub
cmp
sub
ffree
sbb
cmp
push
movsl
pop
scas
test
mov
nop
ja
inc
lds
inc
faddl
or
xchg
xor
push
and
fs
jmp
mov
test
unpckhps
pop
sti
lods
daa
push
add
out
xchg
inc
cli
and
lea
pop
aas
or
imul
push
sarb
pop
mov
xor
pop
daa
call
popl
cmc
imul
sarb
adc
pusha
jp
cld
mov
into
daa
add
mov
fcoms
jbe
sbb
js
dec
jg
cwtl
lods
add
std
adc
sub
push
xchg
test
fbld
xor
in
lret
cmp
push
loop
stos
cmp
mov
jmp
sbb
lock
mov
stc
jp
bound
ss
or
mov
xor
jp
cs
sbb
mov
sub
pop
ds
aaa
dec
and
stos
mov
imul
ljmp
std
lcall
mov
cltd
lret
xchg
in
push
sub
push
fsubrs
ja
shlb
xchg
add
xlat
sbb
hlt
jb
inc
pop
cs
pop
adc
fnstcw
and
popa
in
lcall
incb
jle
fdivl
cmp
mul
inc
and
lret
add
loopne
mov
inc
push
jg
adc
addr16
fsubl
sbb
jae
es
js
std
mov
add
lods
mov
cmp
mov
js
sub
jo
lds
sbb
mov
xor
stos
outsb
rorl
lods
push
dec
cmpsb
add
push
out
int3
adc
enter
add
test
jb
xchg
or
shl
icebp
setb
popf
xchg
xorl
jg
and
mov
out
pusha
stos
lock
xor
sti
push
cltd
imul
cmp
test
repnz
test
sar
sahf
adc
fnsave
je
push
leave
in
mov
lods
lea
pxor
pop
in
jae
lea
xchg
mov
lret
stos
out
xchg
push
jecxz
xchg
fucomp
dec
inc
jl
xchg
inc
and
ss
cmp
add
clc
rolb
or
fcoms
jmp
pop
sub
outsb
scas
dec
subps
mov
mov
add
ja
jae
push
imul
dec
push
insl
mov
sbb
std
fsts
push
stos
and
dec
mov
std
mov
rolb
daa
andb
mov
dec
sbb
or
lahf
inc
jmp
jo
pop
pop
lods
imul
mov
cld
adc
xchg
add
adc
scas
outsb
outsb
repz
pop
fisubrl
or
push
int3
lds
xchg
xor
jge
mov
lea
mov
iret
sbb
mov
pusha
enter
leave
push
or
in
movsb
pop
push
movsl
sbb
cmc
fsts
xchg
jnp
rolb
rcrl
icebp
pop
ss
pop
inc
cmp
mov
adc
imul
je
dec
dec
js
push
jo
inc
popf
cltd
hlt
adc
inc
das
test
xor
or
lea
xor
lret
xor
mov
pop
or
xchg
mov
pop
inc
lock
popa
rcl
into
jae
cmp
addr16
in
pop
mov
or
or
jnp
pop
mov
fsubr
pop
in
push
dec
stos
loope
add
fsub
jo
mov
stc
push
orl
in
and
jns
push
por
lret
leave
mov
cmp
jne
xchg
repz
pop
xchg
orl
or
std
xchg
mov
ret
mov
sbb
aad
mov
push
sub
inc
frstor
xlat
mul
add
mov
iret
add
cmpsl
jnp
mov
adc
sub
mov
mov
push
repnz
out
jne
popa
sti
pop
cltd
xchg
imul
mov
xlat
adc
dec
dec
loope
jg
mov
fstpt
test
jae
dec
call
add
sub
pop
inc
or
or
int3
jns
mov
xchg
shlb
sbb
sub
movq
dec
mov
das
and
mov
mov
in
dec
xor
jmp
leave
fwait
lcall
rol
and
outsl
push
out
stos
out
shrb
cltd
dec
jmp
mov
xor
ljmp
or
mov
xchg
mov
jl
xor
in
adc
ret
pop
popa
filds
jns
faddl
jbe
in
sbb
movsl
or
add
push
pop
fdivr
jp
test
pop
fcmovb
cld
lret
sbb
xor
pusha
jg
mov
mov
dec
mov
ret
mov
cmpsb
testl
sbb
in
cmpsl
pushf
bound
inc
pop
adc
or
leave
or
std
frstpm(287
stc
xchg
cmp
and
mov
mov
sbb
mov
push
and
insl
lcall
sub
jns
push
sub
ret
lods
inc
into
sbb
subb
cmp
dec
es
stos
add
push
xor
clc
insb
or
in
jae
inc
cmpsl
and
or
mov
jle,pn
addr16
in
int3
stos
inc
sbb
cmp
stos
nop
daa
int
dec
imul
mov
dec
sub
xchg
jb
adc
cmp
and
iret
xchg
dec
mov
mov
or
idivb
pop
cmp
scas
pop
xchg
and
leave
add
xlat
cmpsl
lods
cld
pop
sub
jecxz
dec
movsl
xchg
test
movsl
mov
lods
pop
loop
push
pusha
test
xor
lahf
inc
mov
mov
push
clc
orb
mov
mov
sahf
dec
cmp
jecxz
cmp
lds
jg
sti
mov
xlat
cli
lods
ret
sbb
sub
mov
fs
adc
movsb
scas
lret
push
loope
push
test
or
jmp
push
inc
out
push
inc
or
push
leave
movsb
fucomip
popa
mul
jecxz
into
popa
sbb
or
les
pop
pop
sbb
inc
leave
stos
push
ret
rcll
std
cmp
jns
and
rorl
stos
sub
ljmp
mov
arpl
dec
sbb
test
orb
push
shll
jle
popa
cltd
push
test
int3
pop
pop
add
cmp
pop
xlat
mov
int3
mov
mov
mov
repnz
adc
cwtl
push
fwait
sbb
rcl
mov
fidivrs
insb
mov
mov
sahf
test
icebp
arpl
and
cmp
int3
and
out
icebp
xadd
pop
movsb
leave
stc
leave
pop
sbb
pop
sub
dec
lret
imul
mov
jb
lds
jne
pop
dec
lock
stos
jo
mov
push
inc
mov
mov
pop
icebp
adc
sti
insl
xor
mov
cli
ftst
add
lret
mov
aas
adc
pushf
stc
cs
push
jl
xchg
cwtl
cmpb
inc
or
movsl
in
fidivl
pop
iret
call
xor
pusha
es
or
inc
inc
test
out
adc
pop
lcall
insl
test
lcall
in
scas
xor
mov
sti
fs
xor
inc
xchg
sub
adc
xor
fisttps
test
cmp
mov
mov
pop
push
mov
xchg
movsb
sub
add
sub
dec
lds
sahf
icebp
call
flds
ljmp
push
in
sbb
hlt
sti
outsb
add
jae
mov
add
fimull
sahf
repz
jbe
adc
jmp
sti
pop
and
push
andb
sub
lcall
mov
push
ficoml
hlt
insl
and
cmc
or
sbb
mov
mov
jecxz
mov
mov
push
test
seta
cs
push
cltd
mov
movsb
dec
mov
sahf
xor
push
cs
dec
adc
scas
cmp
push
adcb
push
mov
pop
xchg
pop
cmpsl
mov
popl
js
fdivl
es
rcrb
xchg
jnp
jmp
out
push
enter
and
push
push
cwtl
orb
hlt
jle
aam
sar
mov
das
fimull
movsb
xlat
inc
mov
mov
fsubrs
dec
cmc
cli
inc
mov
mov
dec
aaa
imul
add
dec
xor
dec
cmp
into
pop
mov
filds
push
xlat
shll
inc
ds
xor
inc
scas
inc
iret
je
scas
ds
popf
ret
test
in
cli
mov
test
add
les
xchg
nop
jmp
gs
push
pop
and
icebp
lcall
test
test
mov
pop
fsubr
mov
ds
push
dec
iret
and
push
mov
je
andl
pop
shrb
in
clc
in
es
jmp
loopne
rol
icebp
push
call
and
xor
or
add
jno
push
bound
mov
add
cmpsl
mov
lret
pop
decb
sbb
fcompl
add
addl
into
pop
es
jo
loope
xlat
int
sub
clc
loop
sar
mov
ds
xchg
xchg
shrb
fld
negb
dec
jnp
and
jns
sti
loop
add
dec
add
mov
in
add
and
sets
insl
mov
mov
pop
repz
and
inc
ljmp
fldz
add
lods
in
xchg
xchg
pushf
call
ds
outsb
dec
test
push
mov
mov
je
pop
mov
cmp
scas
jae
jns
lock
iret
icebp
adc
push
out
loop
jmp
insb
cmp
sbb
fs
inc
or
cltd
xchg
fwait
jnp
mov
ret
bound
xor
add
jecxz
imul
xor
cmpsl
mov
scas
stos
mov
push
dec
xchg
push
cmc
mov
cmp
fisubl
sub
push
jbe
inc
xchg
clc
nop
fisubl
push
add
add
int
call
fcomps
and
push
lock
jmp
lods
inc
add
ja
xor
shrb
loopne
insb
movsb
cmp
dec
jecxz
mov
clc
cmp
scas
popf
mov
or
mov
cmc
cwtl
push
add
jnp
sahf
dec
aad
mov
push
add
pop
rorb
stc
orb
sub
push
mov
mov
ficoms
xchg
enter
cwtl
lahf
mov
mov
mov
pop
mov
dec
jl
mov
mov
mov
add
scas
imul
ja
aad
adc
xrstors
and
nop
push
jecxz
sub
sub
push
shlb
mov
loopne
mov
iret
sbb
or
mov
and
fistpl
or
sbb
adc
aam
into
jno
xor
ret
ljmp
ds
cwtl
in
cmp
hlt
dec
pop
fsubr
clc
arpl
cmp
cmpsb
dec
cmp
sbb
jge
pop
cmp
fldl
cmp
cmp
sub
mov
scas
hlt
xchg
int
sbb
test
movl
add
fsts
loop
xor
xor
mov
xchg
cmc
and
ljmp
stos
and
rcll
mov
cwtl
jae
add
in
lahf
jnp
push
fsubr
imul
adc
stc
pop
xchg
push
or
cmpl
stos
mov
inc
out
or
add
pop
mov
mov
gs
xor
jg
xor
aaa
push
xor
sahf
mov
lea
sbb
in
xchg
mov
es
shrl
push
cmpsl
outsl
jbe
mov
inc
aad
push
or
jnp
sbb
clc
fidivrs
add
mov
mov
sub
sbb
mov
xlat
scas
ficompl
out
pop
jns
fistpll
add
inc
fs
popa
add
pop
or
xorl
aaa
inc
inc
mov
or
mull
dec
sub
jmp
movl
and
std
shlb
aaa
sub
add
movsl
xor
test
or
push
cmpb
jns
lods
ja
pusha
dec
mov
ror
sahf
ds
pop
ja
sti
mov
inc
out
pop
mov
ds
in
fucomi
lods
fs
pop
movsb
inc
mov
jne
sub
daa
xor
lods
push
push
mov
sub
call
lods
filds
and
pusha
arpl
sbb
add
xlat
shl
mov
mov
scas
divb
lods
int3
das
sti
mov
pop
ljmp
mov
mov
jecxz
sbb
rorl
jmp
cmpb
push
daa
xor
push
in
inc
insb
jbe
mov
sbb
mov
sbb
ret
daa
cmp
pop
imul
or
sbb
leave
pop
ja
in
cli
rorb
mov
inc
mov
aad
lds
mov
fnstenv
clc
mov
dec
scas
shlb
sub
cld
bnd
fsubrl
sbbb
int3
push
push
lea
and
sahf
and
xor
pop
mov
insl
ds
inc
popa
loopne
fistps
out
sub
scas
adc
in
xor
shll
inc
call
clc
mov
mov
push
mov
ret
pop
push
in
jno
mov
xchg
out
sub
in
pop
or
icebp
or
xor
popa
adc
leavew
push
rcll
hlt
out
jg
mov
mov
pop
xchg
sbb
ja
in
xchg
and
add
iret
call
sub
mov
sbbb
jp
sub
mov
xchg
or
mov
mov
dec
mov
mov
enter
ret
dec
mov
add
enter
dec
mov
inc
jp
popa
dec
lock
imul
add
jo
inc
xchg
xchg
cwtl
es
fisubl
cmp
xchg
aad
insl
je
add
cltd
adc
popa
icebp
loop
sbb
push
mov
cmovno
es
mov
or
in
xchg
lea
mov
push
push
push
inc
cmp
push
mov
in
mov
jbe
pop
jl
mov
daa
push
and
lods
cmpsl
mov
or
insl
mov
imul
aaa
insl
push
call
mov
icebp
es
in
xchg
sbb
pop
or
rcrb
inc
cli
add
lds
scas
xor
call
loopne
sahf
sbb
dec
sbb
arpl
cmpl
lret
addr16
insb
clc
lret
mov
cmp
sbb
loope
bts
outsl
dec
push
add
mov
lcall
test
cld
psadbw
shlb
subl
fdiv
add
lcall
out
or
xchg
sub
xor
dec
fstpl
adc
movsl
sar
call
std
mov
sub
fldenv
mov
rcll
inc
sbbl
movsl
xor
insl
cwtl
and
out
mov
outsl
pop
inc
jmp
dec
call
iret
and
push
sbb
bound
pushl
sub
jb
jne
popf
mov
add
les
cmp
or
cmpl
and
loopne
mov
pop
cmp
ja
das
adc
daa
and
dec
mov
clc
pop
pop
and
push
jmp
std
jl
ds
add
pop
cmpsl
call
out
push
hlt
mov
outsl
pop
pop
jbe
out
xchg
sub
popa
cmpsb
pop
add
repnz
lock
push
lcall
mov
mov
idivb
jge
xchg
and
lea
mov
sbb
repz
sahf
jne
lcall
fdivl
fldcw
data16
mov
in
dec
mov
dec
mov
andl
lods
shrb
dec
cmp
pop
arpl
and
ficompl
ja
xlat
jo
iret
loopne
xor
sub
loopne
fisubrs
mov
mov
mov
aad
mov
mov
lods
adc
insb
jge
iret
in
xor
divl
call
movsb
push
insl
mov
push
ficomps
inc
cmp
int
daa
sub
xor
mov
sbb
bound
or
fadd
sub
mov
pop
xchg
outsb
cwtl
jmp
popf
movsl
push
shll
adc
aas
jno
les
aaa
enter
rcr
push
loopne
push
cwtl
xor
pop
movsl
lock
xchg
push
lcall
sahf
pop
xchg
into
jmp
inc
jne
shll
mov
sub
or
sub
sbb
in
int
in
jno
mov
lret
int3
mov
mov
cs
sahf
add
nop
loope
loopne
in
out
push
aam
clc
xor
imul
dec
ss
hlt
loope
adc
ds
gs
cmp
fcmovne
or
pop
arpl
popa
popf
in
call
lock
dec
into
test
mov
cmpl
test
inc
stos
shlb
js
hlt
outsb
call
xor
pop
cmc
aam
nop
daa
xchg
xchg
addr16
push
les
scas
aad
insl
je
rcrb
push
lds
mov
out
je
pop
xor
enter
inc
sub
mov
push
fxch
push
fcompl
mov
xchg
test
jns
xchg
xor
add
xchg
and
test
fwait
mov
xor
pop
in
or
call
ud2
dec
xchg
loope
arpl
push
xchg
push
xlat
lahf
pop
mov
sbb
loopne
fcoms
xchg
xchg
mov
lods
sub
jl
xor
hlt
mov
fdivp
mov
sub
je
mov
int
lcall
xchg
pushw
lahf
lret
std
cmc
and
jae
imul
je
inc
inc
ljmp
cmp
xchg
std
test
cwtl
pop
jns
add
and
mov
and
out
scas
or
jg
adc
aaa
leave
sbb
adc
inc
decl
stc
hlt
xor
mov
pop
lds
mov
loope
dec
and
jb
int3
into
xchg
ds
movsl
stos
fcmovne
popa
inc
inc
mov
jge
xor
movsl
ss
lea
inc
fmull
je
inc
pushf
and
xor
mov
cli
xchg
flds
cltd
or
inc
mov
bound
in
add
loope
outsb
jl
mov
xor
mov
dec
xor
mov
inc
lahf
shrb
dec
sbb
cmpsl
lock
hlt
jns
lret
lods
sub
cmp
into
sbb
xorb
mov
pop
movsb
inc
xchg
push
mov
popa
pop
popa
les
in
aas
xor
pop
in
daa
test
inc
into
pop
leave
xor
insl
aad
dec
or
aam
mov
xor
xchg
rcl
xchg
inc
inc
mov
push
or
ficoms
xor
push
sub
jno
inc
jne
inc
add
xchg
or
iret
mov
adc
cmp
in
xchg
add
xor
addr16
out
jbe
mov
sbb
add
pop
ss
mov
aas
inc
enter
out
scas
lahf
xor
mov
in
in
mov
and
out
jge
pop
repnz
jg
stos
scas
push
dec
aam
adc
loop
test
mov
insb
push
jae
sti
mov
loop
sbb
and
fwait
lret
mov
ljmp
dec
xlat
js
lods
add
sub
add
rorl
shl
outsl
imul
lret
jae
sbb
pop
ljmp
push
mov
mov
mov
lcall
lds
pusha
fistpl
xchg
xor
mov
rcrb
clc
sub
mov
mov
dec
subb
and
rcll
add
sbb
sbb
jmp
clc
cwtl
js
sbb
jp
icebp
sub
lret
lock
test
enter
lds
dec
xchg
jbe
imul
lret
rcrl
jo
cltd
dec
clc
mov
or
out
pushf
dec
inc
cwtl
cmp
insl
jmp
cmp
pop
js
scas
jb
jns
ja
or
adc
pushf
inc
rcrl
out
sbbl
sbb
push
loop
and
push
push
filds
xchg
xor
sub
imul
adc
jle
cmpsl
lret
clc
and
pop
nop
jl
mov
add
mov
dec
and
jo
pusha
lahf
icebp
adc
jae
pop
daa
repz
pushf
push
xorb
push
dec
cld
lret
mov
xchg
push
cmpsl
xor
in
lcall
push
adc
and
fcmovbe
loop
pushf
jb
popf
cltd
add
outsb
xchg
fbld
xchg
ret
int3
call
frstor
cmc
jne
cmp
xor
cmc
adc
sub
add
lcall
bound
vphsubdq
xor
jg
int3
sub
shlb
sbb
xchg
mov
xor
mov
insl
ja
ss
pop
loop
repz
cmp
in
loopnew
sbb
xchg
fstpl
pushf
cmp
sbb
int
push
push
and
cld
daa
or
fdivrl
cmp
ret
mov
hlt
add
loopne
imul
xlat
jae
outsl
imul
bound
and
dec
stos
cs
mov
bnd
jnp
mov
aas
lock
push
mov
lds
mov
dec
out
filds
imul
loop
xchg
pusha
mov
xchg
jg
and
push
cmp
xchg
lods
dec
jl
or
xchg
and
and
je
cmp
dec
rcrl
add
jp
gs
jae
addl
mov
sub
cmp
sbb
lea
inc
inc
add
lea
mov
sbb
in
and
cs
mov
icebp
xchg
fisttpll
cmpsl
or
addr16
jp
add
sub
sbb
adc
pop
ds
adc
pusha
rclb
mov
sbb
pop
add
ljmp
cltd
xchg
dec
xor
dec
xchg
push
sbb
push
push
xchg
xchg
xor
pop
jge
inc
push
mov
jmp
mov
inc
fnstsw
and
xchg
cmp
mov
mov
push
mov
xchg
jge
xor
fldcw
sar
pushl
jmp
ret
int3
mov
mov
mov
lret
inc
mov
std
mov
dec
addr16
cmc
sahf
sbb
int
mov
xlat
push
fldcw
xor
pop
xchg
lahf
dec
sbb
jne
data16
and
fbstp
arpl
adc
je
lods
mov
ret
into
pop
mov
stc
sbb
pusha
stc
outsl
iret
imul
sbb
in
sti
cmpb
lods
stos
dec
pusha
add
gs
dec
pop
out
dec
mov
movsb
pop
fsubrs
cmp
inc
std
fs
or
or
mov
rclb
cwtl
roll
inc
cwtl
lods
les
or
cmp
push
mov
ss
mov
mov
mov
test
jno
lret
fistpl
and
sub
add
icebp
daa
fwait
and
mov
sub
and
test
and
push
add
dec
sub
sub
cmpsb
outsl
and
and
sbb
lds
adc
iret
adc
aam
and
fnstsw
xchg
aad
pop
xchg
loop
ds
shlb
pop
mov
fsubrp
inc
inc
dec
mov
dec
and
sbb
test
sbb
test
xchg
and
xlat
jo
jle
pushf
jo
mov
inc
adc
shll
push
ret
pop
lea
sub
adc
dec
inc
add
test
sub
mov
xor
cmp
in
xor
inc
cli
push
sbb
outsb
mov
mov
cwtl
mov
cmp
add
push
or
movsl
adc
xchg
aam
lods
pop
sbb
pop
jns
xor
pop
fmull
sub
stos
leave
xlat
xor
cmpsl
jle
mov
aam
dec
sbb
xchg
and
test
int
fcmovnu
pop
jb
add
and
mov
mov
adcb
jne
cmpsb
mov
sti
mov
sub
scas
fisubrs
outsl
pop
andl
jp
lcall
mov
add
fisttpl
xor
add
pop
mov
push
xor
add
xchg
pop
pop
fldcw
dec
jnp
mov
mov
fimull
mov
sub
stos
dec
lea
pop
movsb
push
cli
xor
jno
push
pushf
push
ss
dec
call
lock
ficoms
dec
sti
mov
dec
jle
adc
inc
and
scas
mov
cmpsl
out
cmp
adc
test
jns
gs
or
outsl
test
adc
adc
sbb
dec
in
sub
add
enter
arpl
inc
sbb
mov
inc
scas
ja
insb
cmpsl
jp
ja
in
sbb
scas
js
sarl
ja
dec
jle
mov
mov
adc
mov
stos
andl
xchg
pushf
mov
mov
jbe
mov
xchg
xchg
sub
fsubrl
sbb
jmp
sub
cmp
ficomps
repz
mov
cs
pop
jns
xlat
add
sub
repz
bound
cltd
aaa
cmp
cwtl
add
fldl
out
inc
mov
cs
cli
addr16
mov
adc
jns
pop
cli
sub
pushf
jmp
or
out
fmull
pop
fisubrl
add
adc
sub
test
mov
mov
or
lcall
add
xchg
ljmp
pop
lahf
or
jle
and
in
jno
fsubrl
outsl
dec
icebp
sbb
or
mov
xchg
imul
mov
pop
loope
pop
popa
pushf
insb
inc
pop
fs
mov
push
popa
dec
xor
shl
mov
mov
xlat
mov
rcl
test
xor
icebp
and
jb
adc
ljmp
addr16
sbb
inc
shrb
inc
jno
stos
gs
sbb
jg
ljmp
lret
mov
imul
sti
adc
hlt
sbb
test
mov
inc
fimull
ljmp
xor
cli
in
push
jne
push
jb
adc
dec
mov
sahf
insl
pop
mov
dec
and
jb
cltd
pop
lret
cmpb
lcall
mov
push
sub
xor
and
rolb
ret
pop
push
pop
addr16
mov
fisubl
add
adcb
imul
jmp
inc
pop
call
adc
cmp
les
jne
lock
sbb
shll
cs
ljmp
push
xchg
sbb
int3
and
hlt
dec
mov
mov
arpl
mov
hlt
cmc
rorb
outsl
sub
fsts
mov
fs
add
dec
jle
div
ficomps
imul
mov
cmpsl
in
inc
mov
jb
or
outsl
cmpsl
ljmp
cld
xchg
xchg
dec
or
or
xchg
es
lea
xchg
movsl
sub
mov
fmul
push
mov
icebp
insl
inc
cmp
fldenv
lahf
mov
pop
jmp
hlt
imul
xor
pop
leave
sub
cwtl
mov
popa
and
int
repnz
cmp
addr16
sbb
cltd
data16
jge
dec
pop
pusha
mov
xchg
xchg
out
ja
inc
add
movsl
or
lret
in
out
pop
inc
leave
mov
flds
and
push
push
js
into
imul
push
out
push
clc
cld
ds
push
mov
pop
sbb
jno
pop
xchg
outsl
call
mov
and
pop
jmp
call
inc
aaa
jo
jno
popa
sub
or
sub
mov
xchg
or
fistpll
fisttpll
or
sbbl
lods
test
test
pop
mov
adc
push
test
push
mov
cmpb
mov
into
cmc
adc
and
mov
mov
pop
pop
aaa
or
sub
dec
adc
add
mov
pop
gs
push
cmpsb
fisttpl
mov
xchg
jb
cmpsl
int3
push
pop
cld
popf
cli
jmp
jo
int
inc
pop
sahf
fdivrs
xchg
adc
xchg
movsb
fucomi
cli
loop
out
sub
sub
pop
add
popf
cld
imul
iret
iret
mov
sbb
jg
xchg
cmp
xchg
xchg
mov
cmc
push
inc
xor
dec
aad
lods
popf
or
test
dec
adc
dec
mov
cmpsb
push
xchg
xor
mov
xchg
push
icebp
jnp
movl
mov
mov
movups
decl
pop
fwait
inc
sub
push
cmp
push
pop
lods
ret
icebp
dec
bound
sahf
in
fs
ja
jmp
cltd
sbb
jbe
cwtl
adc
decb
add
xor
test
int3
sbb
jle
test
pushf
mov
mov
sub
mov
out
dec
push
in
in
mov
pop
push
out
mov
or
addr16
loopne
repnz
stos
out
push
mov
int3
dec
push
popa
bound
pop
push
clc
and
rcrb
cmp
push
push
call
add
push
in
movsb
push
sarb
pusha
xor
pop
sub
nop
cmp
subb
xlat
mov
mov
cld
mov
xchg
orb
leave
loope
stc
xor
popf
rolb
bound
sub
dec
out
pop
insl
les
nop
cld
adc
mov
and
jb
ds
xchg
or
xor
push
inc
clc
shrl
sbb
mov
inc
jo
dec
adc
lds
sub
cld
cmpsl
inc
xor
adc
mov
arpl
icebp
pop
ss
sbb
addl
stos
ss
fisubs
ja
push
repnz
mov
and
sti
mov
fiaddl
aam
lock
pop
xor
pop
mov
dec
mov
mov
pushf
xor
lcall
cmp
sub
out
adc
xchg
jmp
cmp
mov
int
jp
ljmp
xor
movsb
add
sbb
enter
into
out
insb
out
jg
sbb
cmp
mov
pop
xor
push
and
inc
inc
cmpsl
pop
js
inc
ss
pop
inc
call
lods
sub
dec
and
stc
popf
jp
jmp
lods
dec
repnz
cs
pop
hlt
repnz
ret
jno
das
mov
sub
in
add
dec
popf
out
fwait
mov
loop
mov
jae
sbb
cli
aad
gs
jb
adc
dec
inc
xchg
push
scas
cwtl
pop
or
and
add
test
push
ret
ret
xchg
mov
sbb
divb
test
push
cmp
or
sarl
sub
ds
xchg
bnd
mov
mov
ja
xchg
sub
push
outsb
mov
mov
xchg
mov
fimuls
xchg
out
shll
dec
sub
ss
ficoml
xor
add
sbb
lods
div
fsts
cli
fisubrs
je
cld
out
pop
mov
clc
jae
jmp
jl
cmc
lea
pushf
fcoml
push
inc
ret
mov
call
sub
fsubl
cmpsb
leave
mov
leave
lahf
imul
jb
add
mov
sub
lods
rcr
mov
bound
add
sbb
push
mov
push
xchg
inc
out
add
push
jmp
adc
ret
js
stos
push
rcr
cld
je
push
fwait
mov
je
ss
leave
rcrb
dec
and
push
sbbl
push
lea
je
insl
cmpsl
enter
fnsave
mov
lock
jb
insb
sbbb
int3
gs
std
pop
mov
push
pop
out
sbb
leave
jg
ds
add
pop
stos
outsl
nop
mov
insl
and
call
gs
mov
jg
outsl
clc
push
testl
cltd
fistpll
insb
pop
dec
loopne
leave
fildl
pusha
lock
xchg
push
sub
cmpsl
js
push
shl
and
pop
loopne
push
cmp
xchg
lods
push
mov
xlat
std
xchg
sbb
xor
mov
call
daa
xchg
gs
cmp
mov
xor
push
cmpsb
cmp
adc
adc
xchg
sahf
fimull
xor
xor
incl
inc
in
cs
jo
fistl
stos
rcrb
mov
ficoms
or
mov
popf
jb
lret
adc
mov
adc
shrb
push
jb
jbe
mov
pop
jo
dec
ljmp
popw
sub
test
sbb
mov
or
test
xchg
out
mov
rcrb
fists
cli
fsubr
push
aaa
pop
pop
xchg
jo
pslld
and
dec
bound
or
fmul
inc
cmp
faddl
jb
cli
mov
pop
popa
icebp
ds
cmpsl
aas
xor
fmuls
xorb
pop
push
or
inc
pop
jg
add
xor
dec
mov
dec
cwtl
pop
mov
pop
jae
lret
jmp
lret
jb
roll
loopne
jecxz
and
inc
dec
dec
orl
cld
xor
ss
enter
in
mov
dec
fisttps
sub
sbb
lret
outsl
stos
add
adc
xchg
or
or
popf
inc
jbe
cmp
mov
sahf
pop
fimuls
dec
fstpt
test
sbb
mov
mov
jb
movsl
hlt
add
nop
mov
orb
stos
mov
pmuludq
xchg
iret
movsl
stos
dec
fisubs
pushf
cmp
enter
or
sub
push
jnp
jbe
popf
flds
scas
mov
in
jnp
pushf
stc
pop
hlt
xchg
cmpsb
or
adc
mov
imul
fwait
mov
test
inc
std
adc
sub
es
dec
das
sbb
and
pop
divps
mov
and
ret
mov
in
lret
int
stc
jecxz
add
insb
mov
jbe
addl
jns
mov
in
sub
lods
jle
jae
incl
xor
jmp
cmp
clc
push
leave
out
movsl
ja
adc
ret
addr16
test
xchg
lods
cmpsb
fisubs
sbb
xor
xor
or
ljmp
sbb
jb,pt
jbe
addr16
out
repz
push
call
xchg
mov
lea
mov
gs
xchg
mov
rol
sbb
push
and
rolb
mov
ret
push
loope
dec
dec
repnz
push
fstpl
mov
rcrl
es
mov
xor
and
push
mov
aaa
sti
pop
mov
outsb
movl
jmp
adc
jmp
xchg
jnp
mov
xchg
sub
ret
push
repnz
mov
test
xchg
xor
push
das
fcompl
in
lahf
out
es
das
in
xor
jl
rorb
cmp
pop
fs
dec
mov
pop
jmp
mov
push
js
fcmovnu
testb
jge
push
pop
cli
jne
pop
push
into
adc
inc
fnstsw
xor
mov
inc
inc
popf
xchg
ljmp
js
ss
in
es
ljmp
ss
out
jnp
mov
in
mov
fs
fisubrs
mov
out
mov
xchg
mov
xor
inc
sbb
stc
dec
adc
ljmp
sbb
nop
in
xor
out
cmp
push
and
adcb
sbb
jl
mov
shrl
aad
sub
cwtl
push
fimull
sub
js
adc
inc
loopne
ret
xchg
cwtl
mov
shll
arpl
xor
or
inc
mov
jae
sbb
jge
clc
adc
jge
nop
push
push
jno
xchg
xchg
mov
icebp
xchg
cwtl
cmp
jp
add
xor
dec
cmp
in
mov
frstor
dec
sub
push
mov
and
mov
push
jns
mov
xchg
sar
push
add
inc
pop
out
fdivrs
loopne
gs
add
and
call
in
ret
add
lcall
push
fisubs
das
mov
sbb
xchg
and
mov
inc
xchg
mov
inc
out
test
xchg
xor
sub
les
mov
mov
adc
ds
popl
nop
stc
xchg
xor
clc
fs
sub
pop
add
stos
xchg
test
sarb
lock
leave
ret
clc
xor
or
sub
call
xchg
jecxz,pt
nop
dec
lock
add
jo
orl
movsl
dec
testl
lock
jbe
cmp
in
push
les
test
jbe
inc
lret
into
ret
in
mov
xchg
mov
lahf
mov
adc
repnz
fdivr
xor
aaa
loope
mov
ja
mov
shll
mov
or
outsl
jmp
add
sub
addr16
dec
xor
insb
sahf
push
sbb
sbb
mov
sahf
pop
out
and
int3
and
pop
pushf
pop
jmp
cmp
or
scas
shl
scas
loope
push
jo
or
int3
outsb
pop
outsl
rcr
xor
insl
in
je
inc
xorl
je
je
add
mov
dec
insl
insl
popf
iret
bound
mov
and
sbb
sahf
in
xchg
shrl
pop
xor
pushf
pop
xchg
and
push
cmpsb
daa
cmp
imul
xorb
jae
jns
aad
scas
add
mov
repz
cmp
sbb
xchg
push
mov
lock
mov
mov
dec
pop
add
ljmp
mov
in
or
es
sbb
out
dec
test
adc
test
push
or
lret
cli
adc
shlb
jl
in
dec
hlt
jmp
shl
jo
pop
cld
das
mov
mov
or
jmp
test
or
inc
and
push
jne
faddl
jno
fistpll
xor
push
push
jg
in
and
int
clc
mov
mov
cld
mov
jno
pop
pop
out
jbe
jbe
iret
outsl
jmp
in
mov
or
fldt
movsb
inc
enter
nop
mov
adc
or
in
jae
jcxz
cmp
aas
sub
or
cmp
jns
popa
jbe
dec
pop
jmp
insb
call
dec
jl
mov
sahf
fucomp
jns
rep
pop
jg
jge
sbb
and
insb
xchg
loop
fsts
inc
mov
jo
cmp
inc
pop
xchg
movsb
fdivl
jle
xor
sbb
imul
je
xor
pop
pop
decb
outsb
rcr
lcall
std
xchg
sbb
xorb
pop
fwait
fwait
and
push
push
sub
cli
ljmp
jp
scas
pop
cmp
lret
leave
fdivl
repz
xlat
mov
or
cmp
push
lds
mov
pop
inc
hlt
insl
jl
mov
out
dec
cmpsl
pop
repnz
adc
popa
aad
icebp
js
pop
jge
shrl
adc
mov
mov
xlat
dec
int3
testl
pusha
inc
pop
sub
out
sbb
xchg
sbb
aam
dec
dec
jnp
push
mov
sub
mov
jmp
push
push
xor
in
mov
out
fmulp
cmpb
testb
mov
mov
test
mov
insl
pop
pop
cli
lds
lahf
pop
cltd
jae
data16
pushf
pop
mov
jl
jns
fscale
daa
dec
push
shrb
xchg
lret
pop
mov
into
sub
lods
fimuls
test
or
lods
and
xor
nop
xor
xor
dec
jo
adcb
repz
push
lock
sub
mov
inc
pop
or
les
adc
lcall
sub
subl
daa
jne
sbb
fildll
xchg
int3
jl
sti
scas
mov
scas
push
shll
or
mov
stos
jbe
inc
jnp
leave
pop
xchg
ret
mov
test
pop
mov
pop
test
sub
jo
mov
scas
mov
ret
sub
sbb
mov
mov
and
je
in
fisttpll
addr16
pop
int
sbb
mov
into
lret
stos
dec
pop
dec
xor
jge
pop
mov
jp
int
jb
rcrb
sub
shll
adc
scas
mul
out
rorl
jbe
cmpsb
ja
int3
xchg
pop
imul
ret
inc
into
loop
shlb
pop
repnz
mov
fcmovnb
push
fwait
pop
push
push
jl
jnp
or
lods
add
daa
jmp
inc
cmc
mov
incl
xchg
loop
cmp
jne
js
sbb
rorl
adc
jecxz
lcall
sbb
xor
jns
pushf
push
push
ds
or
add
pushf
and
cmp
cmp
mov
outsb
pop
sbbb
test
and
outsl
or
mov
xchg
sahf
je
cmp
push
fwait
ss
pop
mov
outsb
pop
dec
stos
hlt
mov
repz
arpl
jmp
shrb
in
jns
sub
movb
jle
mov
push
dec
rorb
adc
add
sub
jge
dec
push
pop
and
cmp
sub
mov
adc
fwait
jb
xor
cmp
movsb
mov
sti
inc
mov
push
subb
in
rorb
out
daa
xchg
pop
std
fs
jmp
add
sahf
out
or
ds
xor
inc
daa
orb
daa
andl
ljmp
cltd
sbb
jnp
add
or
clc
inc
in
mov
in
mov
xor
mov
push
jle
cmc
cmp
inc
movsl
add
mov
inc
jne
sbb
dec
setle
call
mov
and
in
dec
popa
bound
fcoms
testl
ja
adc
mov
mov
push
popa
lahf
xchg
std
dec
mov
int3
add
mov
xor
in
int3
ds
sbb
out
or
jne
and
inc
pop
inc
and
push
mov
fwait
icebp
sti
xchg
mov
xlat
jns
sub
lret
aam
ljmp
mov
pop
ss
incl
xor
lret
mov
enter
cmp
mov
inc
andb
adc
filds
mov
mov
stos
cli
outsb
pop
cmc
inc
nop
loope
stc
popa
subl
jnp
pop
fdivs
push
dec
add
xchg
test
xor
int3
cmp
or
sahf
out
xchg
cmp
push
leave
rol
xchg
jns
aaa
aam
mov
lcall
fcmovnb
xlat
jno
shll
stos
mov
jmp
jbe
decl
in
insl
cmp
iret
pop
push
pop
mov
mov
pushf
cli
jecxz
popf
add
pop
lahf
cmpsl
jle
rcrb
rclb
popa
call
bound
pop
popa
xor
dec
jne
jg
mov
fisubrs
or
in
or
dec
and
cmpsl
sub
ret
rorb
push
cmp
mov
mov
scas
add
mov
dec
out
mov
lea
dec
add
scas
xchg
xor
ljmp
add
popa
rcrb
insb
inc
or
mov
les
jmp
push
push
test
jbe
pop
test
fwait
pushf
rolb
gs
lock
pop
int3
jnp
jns
scas
stc
or
neg
out
push
aas
add
dec
call
test
fadds
ds
mov
je
fadds
or
push
fwait
inc
lret
fbld
fisubrs
mov
cmpsb
adc
inc
in
sbb
jbe
xor
pop
dec
int
xchg
rorb
pop
mov
lock
cmp
fdivrl
pop
jmp
add
mov
test
fistpl
dec
pop
mov
cli
scas
or
dec
jnp
mov
lcall
repz
aad
int3
add
add
dec
daa
mov
pop
out
mov
ja
sarb
xchg
jg
iret
mov
in
hlt
subb
mov
repnz
cmp
pop
push
shlb
jae
xor
add
jb
fwait
or
xlat
sahf
xor
fmulp
in
test
das
dec
pop
lahf
sbb
in
adcl
rorb
or
inc
rclb
cmp
fisubl
sbb
push
in
js
jle
inc
sub
mov
popa
rol
insl
pop
fsubr
not
lock
cmpsb
call
push
jg
xchg
mov
or
push
jge
cld
outsl
addr16
scas
insb
lock
jnp
out
push
insb
pop
jb
jl
pop
jg
dec
push
cmpb
pusha
push
fidivs
inc
js
or
push
stos
xlat
outsl
bound
gs
cmp
lahf
subb
cs
fisubs
fcomi
dec
loopne
sbb
into
movsb
sbb
cs
cltd
fisubl
cmpsl
ret
lods
fstps
inc
or
pop
inc
or
sbbl
jg
jle
push
call
test
negb
xchg
mov
je
inc
lock
push
ret
jl
mov
outsl
out
and
cmp
in
inc
lds
ss
test
gs
je
or
inc
xor
stc
add
fnstenv
cmc
dec
pop
movsb
or
xchg
stos
mov
or
mov
jp
xchg
xlat
into
mov
inc
or
mov
push
sub
or
push
addl
test
clc
pop
add
inc
jl
jmp
sahf
mov
ret
std
rcrl
dec
js
push
inc
in
out
lret
xor
mov
and
dec
cmpsb
xor
push
cmp
movsb
daa
inc
push
push
jbe
stos
inc
fcomps
sub
sbb
fstps
inc
jmp
push
xlat
pop
mov
ficoml
jb
dec
jo
dec
movsl
dec
jmp
dec
mov
mov
out
je
or
xchg
jge
int
lret
jne
sub
stos
xchg
and
add
xchg
repz
out
inc
cmp
repnz
mov
and
repz
ljmp
sub
mov
or
bound
stos
inc
shrl
cmp
adc
or
cmp
scas
adc
fisttpl
ds
test
cmp
xchg
or
push
repz
or
mulb
ficoml
aas
loop
scas
mov
sbb
dec
mov
push
inc
ljmp
andb
js
or
mov
dec
xor
stos
mov
fs
adc
xor
jl
outsl
int3
sub
fcoms
jecxz
jle
roll
movsb
outsl
xchg
outsb
fwait
shlb
push
imul
out
and
das
sub
pop
mov
aaa
xchg
or
mov
sub
stc
inc
jbe
pop
stc
add
nop
sbb
sub
das
xchg
stc
repnz
stos
scas
daa
adc
scas
xchg
fcomps
inc
adc
cmp
lock
imull
pop
and
push
adc
mov
leave
push
jle
pop
jle
mov
rolb
lods
into
xchg
or
jne
out
cwtl
adc
fistpl
xchg
repnz
xchg
stos
ret
jb
push
cmc
mov
les
xor
cmp
lods
mov
and
xchg
push
aam
dec
xchg
iret
dec
sbb
pop
out
jg
dec
sbb
mov
gs
mov
les
inc
sub
cmp
scas
push
lea
mov
sub
sub
sub
mov
jmp
or
clc
pop
xor
lcall
xlat
mov
loopne
jp
data16
dec
mov
cmpsb
mov
mov
fwait
sbb
push
jg
push
mov
psrld
pop
fistpll
fsubrs
pop
repnz
or
loopne
adc
jle
mov
inc
xor
mov
mov
cli
mov
orb
dec
push
outsl
arpl
lcall
jo
inc
test
jecxz
jbe
leave
push
lods
ss
pop
sar
adc
in
movsb
cmp
sub
add
or
mov
sbb
jmp
test
ret
shlb
mov
and
mov
dec
aam
insb
xlat
adc
dec
mov
fdivrs
aad
or
sbb
mov
and
xor
int
fsts
std
adc
mov
sbb
cli
inc
repz
int
mov
mov
inc
mov
or
shlb
mov
imul
xchg
jp
pusha
mov
mov
outsl
jae
add
aaa
sbb
fstpl
sbb
or
inc
cmpsb
cmp
jp
outsl
rolb
aad
push
ret
jl
out
jno
pop
imul
push
jae
out
aam
test
inc
mov
iret
aaa
shld
mov
jge
jge
adc
jp,pn
pop
mov
xchg
scas
std
and
adc
sbbb
fidivs
cmp
fstpl
sub
and
and
pusha
dec
fs
pop
popf
rclb
push
jg
lock
mov
adc
push
rorb
nop
mov
push
arpl
cmp
js
fistps
out
jg
xchg
orb
scas
adc
add
pop
aad
int
or
cmpsl
dec
or
inc
das
pop
addr16
sbbb
jecxz
mov
int
and
int
iret
cmp
mov
xor
sbb
stc
loope
ljmp
icebp
and
cmp
xchg
daa
mov
ja
inc
mov
cmpsl
jns
test
mov
loopne
pop
dec
jae
js
push
mov
sbb
testl
stc
mov
mov
mov
mov
add
lcall
out
adc
repz
fwait
xor
data16
add
xchg
jb
pop
add
lods
inc
repz
and
adc
stos
sub
sub
pop
xchg
cs
fcomip
dec
xor
pop
dec
je
or
xchg
or
mov
subl
popf
sbb
sub
push
cmp
add
mov
ret
inc
sbbl
push
and
shrl
ja
test
movsb
add
cld
push
xor
aad
jns
hlt
or
imul
jae
scas
mov
lcall
sub
pop
and
fmull
jl
out
jb
int3
adcb
call
dec
mov
or
and
out
xchg
xchg
sbb
test
push
mov
loope
jae
mov
movsl
xor
out
aad
aam
es
mov
sbb
popa
js
jp
pop
cmpsb
fidivl
sahf
adcb
jo
loope
xlat
cmp
push
mov
clc
push
inc
in
xchg
rcr
imul
cld
inc
cli
jge
sbb
and
aad
cmp
loopne
mov
lahf
imul
stos
xor
or
jg
scas
scas
adc
pop
aam
clc
movsb
dec
xchg
pop
test
pop
es
leave
mov
idiv
xor
cmp
pop
aaa
mov
mov
in
mov
rorl
push
cwtl
inc
or
fadds
adc
adc
push
jno
insb
test
mov
xor
add
fdivrs
rclb
inc
inc
cmp
leave
adc
xlat
dec
push
lods
lcall
shll
fstpl
fnsave
test
xor
cld
scas
in
cltd
xor
inc
lcall
sbb
sub
fwait
xlat
push
add
cltd
sbb
and
rcl
andl
jmp
xor
sub
sbb
inc
cmp
fcoms
and
call
inc
fsubrs
pop
fidivrl
loopne
out
iret
hlt
sbb
lds
add
adc
push
mov
inc
cwtl
sahf
pop
and
dec
inc
push
push
test
adc
fcomps
jns
mov
and
repnz
adc
adc
inc
cmp
xlat
sbb
fsubr
out
push
je
sub
mov
lcall
push
sub
dec
je
mov
lret
stos
inc
sbb
sbb
int
sahf
or
es
test
adc
sbb
je
inc
inc
aam
sbb
push
nop
inc
inc
in
stos
dec
arpl
das
jbe
jbe
mulb
mov
loopne
adc
mov
movsb
popf
xchg
ss
lahf
daa
lock
and
dec
test
stos
cs
lds
data16
xchg
xor
jmp
int
lods
aad
dec
ret
ss
insb
adc
shlb
mov
push
popa
cmp
bound
add
xor
xchg
cmp
pop
test
nop
test
mov
cs
mov
xchg
sub
out
inc
fbstp
cld
jmp
mov
sub
mov
sbb
add
add
or
cmpb
scas
mov
pop
push
aaa
jp
jb
or
mov
dec
fmull
and
jbe
test
sbb
jo
push
jns
jecxz
push
nop
das
and
fdivs
daa
insl
adc
roll
fisttpl
hlt
fcoms
sahf
mov
dec
inc
outsl
clc
shll
dec
jp
mov
add
jbe
add
shlb
aad
adc
add
mov
into
sahf
mov
pop
inc
mov
je
jle
push
repz
jnp
jmp
xchg
test
pop
or
out
fwait
xchg
jp
mov
adc
push
into
and
cli
sbb
sbb
xorb
sbb
jno
jbe
jbe
add
das
adc
stos
neg
rorb
faddl
xor
mov
sbb
mov
shrl
xchg
pop
cmp
stos
rol
add
push
scas
leave
jmp
dec
mov
inc
sbb
pop
stc
ss
inc
mov
or
add
arpl
cmp
mov
sub
dec
in
mov
nop
xor
sbb
add
dec
insb
std
out
imul
fdivrs
mov
cmp
xor
push
loopne
xor
sbb
mov
jg
nop
lret
xor
inc
in
pop
and
mov
pop
cmpb
dec
xchg
and
pop
movl
sti
cwtl
popl
stos
mov
cmp
aad
enter
inc
xchg
adc
das
in
jl
xlat
into
ret
sbb
inc
ds
inc
mov
adc
repz
les
inc
cmp
sub
leave
scas
daa
sbb
rcrl
je
lret
pop
pop
dec
sub
push
jnp
in
ret
sub
shlb
negb
mov
inc
std
jl
push
cltd
push
insb
mov
popa
daa
xchg
fiaddl
mov
inc
inc
notl
add
jmp
call
cmc
stc
mov
test
incl
pop
test
pop
adc
push
mov
jle
hlt
loopne
call
pusha
ja
lods
pcmpeqd
pushf
jnp
movsb
repz
fldcw
mov
aaa
jmp
inc
push
arpl
lea
xor
ljmp
ret
cs
test
pop
pop
pushf
pop
mov
daa
push
sbb
xor
or
ret
mov
sbb
out
negl
test
sub
cwtl
fstpl
mov
add
inc
cmp
stos
jmp
outsl
cmpsl
pop
inc
push
cs
fistl
xor
clc
lock
imul
leave
mov
cmp
ja
dec
push
sbb
mov
push
pop
dec
dec
sub
xor
mov
outsb
push
push
int
out
aas
mov
test
test
sbb
push
add
in
out
enter
je
scas
mov
sub
sub
js
pop
out
jle
adcl
in
icebp
fnstcw
test
and
add
mov
jg
push
and
fidivl
xchg
pop
lcall
jno
fdiv
sbb
pop
sub
fists
xchg
xor
push
pop
push
mov
decl
shrl
aas
pop
inc
scas
cmp
test
xlat
mov
add
mov
mov
and
out
int3
push
lods
mov
push
adc
jne
insb
adc
shlb
mov
inc
dec
test
and
cmp
cld
jb
ret
lods
mov
sbb
sub
sbb
push
movsb
cmpsl
pop
lahf
mov
loopne
mov
adc
cltd
les
jns
test
fmuls
bound
mov
pop
iret
jns
sarb
push
das
pop
outsb
loopne
dec
jne
lcall
push
mov
pop
lds
cwtl
add
cmpsl
jmp
ds
into
and
dec
mov
divb
gs
in
out
cmp
fsts
in
out
sub
out
or
fistps
push
loopne
jp
insl
arpl
and
jo
rcrl
sbb
and
jbe
cwtl
sbb
jl
jmp
mov
and
lock
pop
sub
loope
shll
outsl
push
mov
testb
hlt
int
gs
push
xchg
test
jns
xor
xor
xor
inc
jecxz
repz
jge
sub
jmp
xor
mov
ficomps
push
xor
les
mov
fnstcw
dec
xor
mov
mov
stc
inc
add
sub
cmp
repnz
sahf
push
xor
js
push
xor
inc
mov
lcall
std
push
add
xor
iret
dec
aaa
aam
movsl
jle
daa
push
xchg
shrb
xor
in
sub
js
cltd
jns
sbb
addr16
jne
mov
jmp
lret
cmp
mov
subb
addr16
add
fisttpl
dec
pop
mov
das
sub
jo
mov
mov
mov
pop
subl
sbb
adc
fistpl
or
pop
out
sahf
and
push
arpl
adc
xlat
call
lret
mov
sbb
in
adc
leave
mov
jno
and
pop
std
movsl
and
add
add
add
add
mov
add
sbbb
add
pusha
add
addb
add
add
add
add
add
add
add
mov
add
cmp
add
add
add
add
add
add
add
sbb
add
add
add
add
addb
in
add
add
add
add
add
add
add
js
add
add
add
add
add
add
add
or
add
mov
add
in
add
add
add
add
push
add
add
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
je
jne
je
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
insb
gs
or
and
and
and
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
and
and
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outsb
outsw
ds
jae
gs
bound
add
insb
mov
add
nop
mov
add
add
add
and
add
lcall
add
mov
add
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
adc
pop
stos
insb
arpl
call
js
popf
mov
imul
fs
loope
scas
addl
or
dec
add
xor
pop
or
in
jb
jne
cmp
or
dec
stc
cmp
addr16
add
rolb
pop
push
mov
push
inc
fcmovbe
jecxz
xor
jge
cli
add
mov
add
mov
loopne
dec
dec
push
jne
add
inc
or
pop
pop
ror
jge
push
call
sbb
xor
mov
push
jecxz
rep
aaa
mov
push
test
pop
enter
jne
pusha
push
or
mov
add
loop
or
pushl
sub
lock
cmp
sbb
xor
pop
pop
pop
leave
ret
jb
and
adcb
loope
add
or
xchg
jae
and
orb
xor
or
loopne
xchg
ds
out
or
or
cmpl
jo
test
sub
xor
sub
cltd
subl
dec
aam
jmp
inc
fmull
add
inc
add
imul
add
pop
lea
lods
or
insb
lahf
in
inc
lock
push
call
or
sub
hlt
shll
nop
push
push
jne
and
addr16
mov
and
xchg
cmpsb
inc
pop
jne
sbb
inc
out
mov
or
repz
fadds
decl
int
xchg
adc
mov
fmuls
adc
je,pt
sub
jae
sbb
jmp
jo
and
xchg
test
jne
ss
into
adc
sub
lock
pushf
outsb
sub
xor
lock
adc
in
and
add
mov
cmp
cmpsb
or
inc
jmp
xor
pop
insl
sti
add
mov
cmp
push
mov
rol
ljmp
push
cmpsb
iret
lea
xchg
mov
lods
incb
mov
xor
pop
push
xor
or
wrmsr
dec
js
xor
mov
push
nop
xchg
jmp
sub
inc
mov
ror
shr
repz
fcmovnu
or
push
push
lea
push
push
rol
adc
subl
mov
clc
xor
lcall
cmpsb
push
ret
mov
movsb
mov
mov
push
inc
push
jae
inc
push
mov
jmp
loopne
xchg
dec
aas
inc
push
adc
jnp
leave
movsb
hlt
add
popf
rorl
mov
pop
or
mov
lea
push
push
jmp
cwtl
sub
je
subl
adc
pusha
cld
adc
js
jmp
and
inc
nop
stos
and
inc
pop
leave
push
and
fwait
fwait
std
fldcw
add
sbb
loope
std
in
or
rclb
imul
test
adc
dec
rcrb
xor
xor
mov
xchg
orl
or
mov
pusha
imulb
push
add
les
cs
jno
sbb
add
jmp
bound
test
or
xchg
inc
adc
pop
mov
sti
fadd
and
add
std
into
loopne
adc
lods
xchg
sbb
inc
mov
push
mov
jmp
repz
cs
push
add
add
xchg
mov
ds
sub
incb
sti
sub
dec
add
lods
outsl
sbb
sbb
sti
fwait
add
add
pop
aas
dec
push
mov
xchg
pushf
cmp
push
add
mov
xchg
xchg
insl
adc
mov
push
mov
mov
add
push
ljmp
or
lret
stc
es
adc
add
stos
packsswb
in
test
add
mov
sub
add
clc
rorl
call
jb
sub
fmuls
lea
sub
je
mov
inc
pushf
mov
aas
test
inc
adc
mov
jmp
dec
add
shrl
data16
or
outsb
lea
add
pushf
inc
mov
adc
loopne
jg
sti
push
jno
add
cmp
ja
test
repz
arpl
dec
hlt
mov
cmp
xchg
push
pushf
adcb
lea
jb
pop
aad
xchg
jb
mov
lock
rclb
enter
in
jne
mov
inc
add
cltd
push
sbb
add
adc
rcrl
inc
xchg
cltd
negl
cmp
loop
mov
push
pop
stc
and
sbb
push
push
call
xchg
push
cmp
cld
clc
cld
push
sti
inc
enter
fldcw
mov
orb
or
pop
mov
loope
jecxz
pop
pop
push
loopne
test
inc
dec
into
or
adc
mov
and
or
les
pop
or
push
out
sbb
inc
add
inc
dec
add
bound
insb
dec
adc
mov
and
push
push
test
out
test
adc
sbb
adc
cmp
xchg
push
dec
cmp
shlb
cmpb
sbb
mov
xorb
mov
sbb
cld
lods
and
or
sub
in
dec
sub
and
lret
add
adc
mov
rorb
sbb
mov
or
subb
mov
lods
stos
and
nop
cmpl
add
jae
test
fmull
mov
into
jnp
test
rep
out
iret
and
cmp
das
aaa
outsl
int3
cmp
mov
mov
push
call
test
das
mov
cmp
or
add
dec
fistpll
cmp
and
call
test
cmpl
enter
mov
cmp
adc
dec
add
call
add
sub
lea
popf
cmp
and
xchg
popa
inc
and
call
mov
cs
setnp
or
add
dec
adc
fmuls
or
and
ror
mov
icebp
int3
mov
rcll
push
push
sub
jg
lea
push
hlt
xor
lods
jmp
sbbb
les
push
nop
aas
and
push
test
sub
xor
lds
mov
xchg
js
jne
inc
mov
dec
add
add
movb
jmp
rorl
nop
add
or
pop
rclb
icebp
sub
and
cmpsb
dec
push
pop
pop
push
pop
pop
ret
and
call
jmp
adc
add
add
push
call
nop
or
ret
shl
sti
nop
xchg
in
add
je
push
mov
pop
inc
xchg
inc
add
pop
add
jmp
mov
ret
lods
push
jne
aaa
scas
leave
push
or
clc
dec
int3
pushfw
inc
xorb
cmp
je
movsb
ja
sarb
push
add
repnz
sub
pop
psubb
leave
bound
test
sub
xchg
in
data16
and
lods
loop
push
jg
jg
outsl
add
mov
jnp
mov
and
sti
loope
call
pop
jne
mov
and
pop
dec
xchg
shr
mov
jbe
jae
shll
adc
sbb
pop
xor
ret
jmp
test
pop
add
push
loop
push
sbb
pop
cmp
or
and
xor
mov
movzwl
test
jge
jne
xchg
or
cld
pop
inc
pop
adc
testb
cmp
jge
shlb
lmsw
sub
and
cli
incb
enter
sbb
cmp
ret
pop
pushf
or
rclb
les
push
add
jle
addb
pop
pop
dec
mov
xor
dec
pop
cmpsb
pop
popa
jmp
jg
push
mov
sub
ret
add
jbe
push
push
and
cmpsl
nop
cwtl
pop
mov
mov
dec
push
out
loope
in
xchg
pop
pop
fistpll
fimuls
int
ss
dec
es
push
sbb
dec
or
stc
add
movsl
add
push
jnp
inc
push
cli
cmp
sbb
lret
pop
shl
cmp
cmp
ret
add
adc
std
adc
push
lcall
push
push
sbb
mov
jge
jno
test
dec
cmp
enter
push
pop
xor
stc
mov
hlt
push
xchg
dec
or
cmp
test
mov
lret
push
in
mov
adcl
mov
mov
adc
lret
sbb
popa
jne
stc
jmp
inc
ficompl
add
outsb
loopne
sub
pop
jns
fcmove
or
xchg
sub
nop
add
jp
fwait
sub
cmp
pop
sbb
and
jae
call
dec
or
into
push
jle
test
and
add
push
push
push
call
sbb
mov
clc
dec
test
xchg
aad
or
addb
sbbl
mov
icebp
or
jno
adc
icebp
sbb
shlb
jle
popf
mov
ss
test
fsubr
inc
mov
push
adc
rcl
add
mov
adc
inc
mov
mov
jg
jno
or
and
jmp
mov
or
inc
cmpsl
data16
pop
push
inc
sbb
inc
sub
pop
outsl
dec
popa
stos
leave
add
lods
popf
inc
pushf
lods
jb
mov
stos
pusha
div
mov
icebp
mov
movsl
call
dec
or
push
adc
hlt
ret
dec
pop
xchg
or
sbb
and
inc
cmp
inc
dec
adc
jl
add
add
mov
push
loope
push
lea
divl
iret
aad
das
mov
pop
test
cmp
cmp
sub
mov
sbb
xchg
mov
adc
mov
inc
and
jmp
inc
adc
dec
scas
test
sbb
mov
lea
jmp
sti
xor
pop
pop
cmpsb
shrl
cmp
pop
subl
bound
adc
popa
je
pop
outsl
outsb
and
push
fsubr
adc
sti
and
add
test
fs
lea
repz
outsb
mov
ljmp
imul
dec
movl
sub
popa
insb
and
push
pushf
sub
xor
cmp
popa
jnp
push
inc
outsl
js
emms
jnp
sbb
data16
mov
aas
inc
js
je
push
nop
outsb
dec
or
dec
popa
outsb
fs
out
pop
dec
jo
adc
je
stos
mov
insb
sbb
jl
imul
mov
hlt
arpl
add
inc
fsubl
addr16
xor
inc
adc
inc
imul
mov
lods
dec
outsb
data16
insl
lea
push
jecxz
push
fs
rolb
jne
jns
sbb
mov
fildl
and
mov
notl
or
add
sub
xchg
or
lods
stos
enter
lds
lea
dec
xchg
cltd
xor
xor
jl
sbb
or
sbb
add
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
mov
add
mov
add
mov
mov
add
add
inc
add
mov
add
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
pop
xor
cmp
jne
mov
push
push
mov
add
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
add
mov
mov
add
add
add
jp
add
cwtl
add
imull
add
mov
add
add
add
dec
out
mov
