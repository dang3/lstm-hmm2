call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
and
adc
dec
sbb
mov
inc
mov
andb
loop
lock
and
xor
ret
add
adc
bound
push
mov
mov
andb
loop
ret
xor
push
sub
sbb
lock
push
pop
dec
push
stos
mov
cmp
popf
jnp
push
test
dec
ret
add
jb
cmpl
call
ljmp
insb
mov
mov
jb
loop
lock
addr16
add
insb
bound
and
xlat
icebp
clc
push
fsubl
add
cmp
iret
dec
xlat
mov
and
adc
loop
and
add
ret
ss
popf
xorb
pop
push
dec
sub
insl
mov
lret
jb
mov
ja
cmpsb
push
rsm
mov
inc
andl
adc
add
outsl
inc
repz
enter
adc
inc
aas
cmp
popf
ret
add
mov
ret
add
clc
jne
bound
mov
jb
cmp
cs
nop
push
shlb
data16
notb
mov
push
negb
loop
xchg
data16
mov
xchg
insl
andl
in
jb
inc
int3
add
loope
xlat
add
pop
rcll
mov
mov
inc
xchg
pop
xchg
outsb
mov
xchg
sub
jb
inc
mov
mov
andb
loop
repnz
and
xor
ret
add
adc
bound
push
mov
inc
mov
andb
loop
repnz
and
xor
ret
mov
sbb
mov
cld
xchg
stc
addl
fcomps
pusha
cmpsb
add
push
jecxz
or
inc
or
imul
cmp
dec
addr16
pop
pushf
jl
jnp
dec
xor
mov
hlt
lahf
icebp
flds
outsb
and
and
mov
mov
add
or
rorl
insb
lcall
out
jo
jge
cmpsb
in
mov
xchg
sub
lret
sbb
cli
movsb
hlt
mov
jl
inc
jo
je
xchg
pop
out
cmc
leave
cli
shlb
mov
movsl
pop
cmp
adc
mov
add
or
pop
mov
adc
sub
mov
loopne
inc
popa
pusha
out
rclb
ds
loopne
and
cs
lret
cli
hlt
adcl
gs
and
fnstsw
sub
pop
push
add
sub
jmp
testl
dec
in
ret
mov
and
aam
add
js
cmp
jbe
cmp
cmpsl
incb
mov
arpl
or
cmp
sub
fmull
push
into
jno
incl
lods
jg
gs
in
andnps
out
xor
mov
adc
clc
mov
inc
nop
dec
test
or
mov
xor
push
sub
lods
or
cmc
xchg
sahf
push
stc
stos
fidivrs
test
dec
xor
mov
and
mov
jbe
jbe
aaa
mov
mov
enter
stos
je
mov
xor
shl
gs
je
stos
testb
ss
cwtl
sub
push
lret
je
mov
or
push
int
mov
mov
sahf
xchg
push
inc
imul
sub
push
test
insl
lods
bound
inc
push
test
int
ljmp
mov
push
repnz
test
inc
mov
int3
pop
stos
or
loopne
outsl
fisubs
push
xchg
mov
pop
or
outsl
mov
pushf
idiv
insb
clc
mov
int3
movsl
popf
lret
cwtl
fistps
arpl
fsubrs
or
push
mov
mov
gs
fwait
jae
xor
or
std
addr16
inc
pop
mov
xchg
xor
gs
cmp
out
jno
repz
cmpsb
add
push
mov
pop
in
test
arpl
push
push
ljmp
sub
cmp
jle
mov
or
sbb
adc
out
push
sbb
adc
loop
pop
pop
sbb
fsub
ds
fldenv
pop
addr16
dec
movsb
fiadds
mov
nop
stc
push
pop
leave
movsb
iret
cmp
jecxz
hlt
jl
fisubrl
cmp
addr16
shlb
mov
xchg
inc
rclb
mov
dec
shll
sbb
cmp
jno
shl
inc
jne
pop
adc
popa
inc
add
dec
gs
pop
pop
xchg
xchg
std
andl
adc
sub
daa
pusha
mov
ret
jg
mov
sbb
jae
mov
jmp
lds
jecxz
mov
insb
mov
pop
sarl
jmp
jno
jge
push
sub
adc
cmpb
inc
sbb
push
jge
cmc
lods
mov
mov
mov
cmp
fcmove
cmpsl
adc
das
pop
jno
imul
add
or
add
repnz
test
mov
loopne
in
inc
mov
pop
lcall
sub
adc
jmp
lcall
mov
std
xchg
test
js
je
std
mov
outsl
clc
or
xchg
cmp
sub
xchg
fs
divb
lahf
shll
sub
loop
cmp
mov
sub
sbb
mov
ss
imul
rolb
insl
mov
xor
fldt
insl
push
cmp
mov
stos
je
fldt
sarl
jae
and
fwait
imul
fists
push
ja
sti
sub
pop
movsb
jg
and
orl
or
movsl
cmp
push
pop
std
lret
cs
mov
fbld
adc
scas
lock
in
cmpb
push
sbb
mov
cld
mov
and
inc
and
in
movsb
inc
jb
mov
lret
stc
aas
push
lods
xchg
xor
or
push
popf
mov
test
popa
shrl
in
inc
out
push
push
enter
or
sbb
jnp
xor
rcll
push
stos
sub
dec
mov
insl
xor
out
lea
les
cmp
popf
movsb
in
lea
cvtdq2ps
sub
dec
inc
sbb
add
pop
xor
xor
aad
push
je
mov
sbb
inc
popf
add
jns
pop
or
aas
dec
and
xor
sbb
sbb
mov
xchg
sub
in
mov
pop
insl
aaa
je
add
enter
fucomip
aas
test
push
sub
je
mov
out
push
push
mov
mov
in
dec
sbb
sub
ljmp
pop
test
xchg
mov
xchg
jle
xor
xchg
shrb
pop
iret
xchg
cmp
pushf
push
icebp
and
ljmp
adc
xchg
cmp
add
add
nop
pushf
mov
enter
fwait
xor
jmp
js
mov
mov
arpl
aam
repz
bnd
idivl
push
mov
in
xorl
cld
push
inc
cmc
xor
inc
and
cli
addr16
movsl
mov
push
fisubrl
orb
aam
popl
loopew
xorl
test
int3
xorl
mov
sub
jge
test
sub
jle
inc
jmp
repnz
lret
nop
dec
sub
pop
jg
fs
xchg
sbb
rolb
pop
xchg
stc
jbe
insl
test
jle
or
pop
xlat
cmpsl
iret
aad
xchg
test
mov
out
cmp
mov
mov
xorl
fwait
mov
mov
aam
push
test
or
adc
push
aam
outsl
rol
fwait
or
dec
jl
mov
cmpl
pop
cltd
aam
pop
xchg
mov
cmp
rcll
lock
std
jmp
flds
mov
es
in
sbb
sahf
push
cmc
jmp
rcrb
lds
mov
orb
out
pop
add
fcmovne
xor
mov
cwtl
dec
mov
ja
sub
jl
pop
and
cmp
ljmp
aaa
mov
std
cmp
cmp
cmp
mov
cmp
fidivs
fistps
ds
fldenv
stos
and
adc
stos
and
mov
sbb
xchg
mov
nop
xchg
push
push
fbld
jp
test
dec
mov
psubb
test
jecxz
and
add
ljmp
xlat
pop
cmc
mov
push
xlat
rorw
push
jge
inc
sysexit
push
jle
divl
out
jecxz
test
scas
mov
or
fldl
int
into
lcall
repz
xchg
loop
pop
cmp
andl
jnp
into
cmpsb
and
and
ss
or
and
jmp
dec
sub
bound
cltd
mov
arpl
ret
test
inc
xor
cmpsl
into
pop
pop
mov
jae
pusha
jmp
xchg
fs
ja
mov
dec
xchg
int3
imul
xor
inc
rclb
arpl
lret
ljmp
pop
insb
pusha
sahf
cmpsb
dec
test
pop
std
jle
xchg
push
aas
fmuls
jbe
sbb
es
mov
jp
les
dec
aad
nop
stc
loop
xor
outsl
jge
xchg
ret
sbb
arpl
push
or
sti
subl
shrb
xchg
mov
aas
lcall
mov
jg
fimull
dec
outsl
idiv
xor
imul
sarl
mov
push
pop
pop
cltd
xchg
xor
fldt
insl
cmpsl
xchg
pop
out
xchg
rolb
aaa
scas
jo
addl
ljmp
mov
shrb
sbb
mov
in
mov
xchg
pusha
adc
and
out
pop
mov
jae
xchg
add
in
inc
mov
pop
mov
adc
or
push
fnstenv
pop
cli
stos
adc
xchg
push
jb
push
das
aam
adc
loope
xor
cmp
int
jne
xor
mov
lods
push
mov
nop
push
push
xor
dec
hlt
lcall
cmpl
inc
and
jmp
mov
mov
pmulhw
and
inc
ret
lds
push
pop
repz
cmp
bound
pop
popf
xchg
and
push
sbb
sbb
jae
xchg
add
mov
push
inc
repz
add
and
sub
pop
insb
mov
mov
scas
roll
sti
hlt
fdivs
aam
fistpll
sbb
xchg
push
or
loop
rol
jg
leave
pushf
xchg
aam
es
icebp
in
mov
sti
fistpll
xor
rolb
pop
insl
push
call
mov
xchg
xchg
cmpb
or
leave
mov
cmpsb
ficoms
in
xor
xchg
jg
jae
sbb
jne
jbe
sahf
pop
mov
data16
mov
push
mov
add
notl
in
xchg
mov
test
push
mov
test
dec
out
pop
mov
xchg
out
inc
xchg
std
push
inc
and
aaa
pop
add
scas
fsts
mov
mov
adc
sbb
aaa
lcall
ljmp
mov
xchg
dec
inc
sbb
out
mov
push
sbb
cmp
pushf
rcrl
mov
and
bound
ja
mov
adc
sub
inc
push
pop
neg
xor
push
subb
mov
les
subb
mov
cmp
add
adc
mov
and
lret
neg
stos
jno
test
iret
sbb
ja
icebp
enter
movsl
push
imul
lock
test
lds
dec
decb
mov
data16
hlt
cwtl
mov
cmc
fmul
lret
push
push
iret
mov
lret
xor
inc
adc
dec
inc
test
sbb
pop
jmp
dec
lods
jmp
inc
scas
xor
lret
push
jecxz
mov
gs
loopne
fisubs
fwait
cltd
bound
lret
pop
mov
mov
and
mov
into
loop
out
out
add
inc
aam
lods
arpl
aam
loopw
jecxz
or
les
inc
sarl
inc
dec
cmp
popf
jg
stc
call
fwait
inc
mov
or
cmp
pop
cld
lcall
imul
in
jg
cmp
mov
data16
ret
cmp
insb
mov
xchg
rol
lea
jmp
iret
push
sti
loop
adc
push
mov
icebp
add
dec
mov
mov
mov
loopne
or
pop
adc
xor
into
jbe
push
addr16
xor
jbe
pop
fs
push
pop
mov
mov
dec
pushf
mov
xchg
ljmp
or
add
sub
sbb
add
in
test
ds
adc
mov
sti
fwait
sub
in
jmp
mov
sbb
sub
outsb
mov
mov
sub
lods
sbb
sbb
orl
dec
outsb
or
sbb
mov
mov
jp
inc
push
movzbl
mov
repnz
ret
icebp
add
mov
mov
les
xorb
mov
dec
xchg
xor
ror
cs
xchg
sub
mov
fdiv
sub
jo
add
ljmp
aaa
ret
int3
cmp
out
fstpl
gs
cmpsl
lods
xor
push
push
jnp
push
dec
dec
fwait
xorb
mov
dec
ret
jle
push
es
lods
scas
and
or
xor
lahf
repnz
inc
cltd
push
inc
xlat
jmp
sbb
into
frstor
and
mov
add
mov
push
es
pop
cs
outsb
sbb
orb
icebp
xchg
sahf
in
xor
cmpsl
cltd
sub
jge
lea
test
xchg
fidivrs
mov
cmpsb
jo
arpl
adc
mov
jle
test
mov
cmpsl
jno
jmp
lock
or
or
cld
shlb
les
add
fimull
js
add
mov
movsb
adc
lcall
lret
sahf
lret
add
mov
fstpl
push
xchg
stc
jno
pop
jb
add
xchg
sbb
mov
adc
inc
mov
cmp
xchg
pop
add
ret
xchg
pop
sub
jne
mov
sarb
ljmp
stc
jle
jae
push
dec
xorl
enter
movsb
scas
jmp
iret
insb
test
adc
shl
dec
idivl
icebp
pop
ret
push
movsl
inc
les
sub
sub
cltd
push
jle
xor
mov
and
iret
xor
pop
inc
xchg
mov
gs
inc
fwait
xchg
mov
add
mov
cmp
adc
inc
bound
dec
sub
pop
lret
insl
shll
mov
sti
lcall
add
pushf
pop
lahf
ss
xor
ret
out
rclb
jmp
sub
inc
jbe
push
pop
adc
xchg
pop
movsl
and
push
aad
xor
sub
lea
fildll
cmp
loopne
mov
push
add
mov
cs
mov
or
mull
push
dec
xchg
mov
add
push
adc
bound
aas
ljmp
cmp
adc
push
jo
fdivs
dec
js
xchg
and
fs
divb
mov
fistps
sbb
lock
idivb
daa
xor
cmp
pop
push
andl
adc
add
out
imul
xchg
push
push
je
pop
jb
movsl
insl
sbb
push
shrb
push
in
xchg
fildll
loopne
popl
aaa
repnz
cwtl
jbe
cld
push
lcall
xchg
mov
jmp
or
repnz
push
test
inc
xchg
pusha
pop
fiaddl
scas
jp
jo
test
add
arpl
xlat
pop
or
fdivl
and
xor
xchg
sub
mov
popf
ret
pop
cmp
push
xlat
movsl
sbb
mov
adc
fimuls
and
out
push
fidivrl
jg
repnz
adc
push
gs
scas
out
in
and
push
clc
clc
inc
hlt
jno
sbb
push
or
cs
sbb
xchg
cltd
lret
dec
jb
icebp
cmp
sub
lcall
push
mov
mov
sbb
adc
nop
cmpsb
fcompl
stc
shrl
pop
sbb
inc
mov
daa
pop
ljmp
push
rolb
xchg
mov
dec
ljmp
ret
pop
lea
or
sbb
lret
in
aaa
adc
cmp
lea
xor
mov
fcmovnbe
and
adc
and
cmp
mov
inc
mov
jns
xor
out
jg
pop
repnz
lcall
shl
data16
and
cli
sti
jns
jecxz
or
sti
push
sbb
dec
inc
mov
stos
in
movsb
mov
stc
mov
mov
pop
push
push
push
push
mov
cwtl
test
mov
leave
mov
aam
sub
sbb
popa
sbb
jmp
ljmp
std
std
inc
out
jb
aam
je
sbb
decl
cmp
dec
cmpsb
push
gs
mov
insl
xchg
sub
rcrl
xchg
je
aad
ret
xchg
inc
or
loop
add
int3
in
jns
inc
and
push
shlb
or
ljmp
outsl
inc
call
add
orl
test
imul
mov
adc
push
arpl
ficoml
fs
jbe
mov
or
fidivs
xor
push
push
loop
mov
jle
push
negl
adc
mov
jb
mov
imul
pop
xchg
scas
pop
ret
push
and
inc
test
and
in
pop
mov
mov
imul
rclb
mov
mov
mov
xor
mov
cmc
and
push
pop
test
in
or
pusha
mov
sub
mov
pop
mov
movsb
out
in
cmp
loope
pop
popa
movb
dec
or
mov
mov
push
int3
mov
lods
adc
dec
mov
ret
adc
cmp
cmp
jbe
or
sbb
icebp
aaa
sbb
xchg
mov
dec
stos
jae
das
push
rcrl
lods
adc
or
mov
xor
scas
fisttpl
insl
mov
movsb
push
add
scas
aad
out
sahf
in
mov
sub
ljmp
add
mov
frstor
dec
test
or
es
sbb
sahf
xchg
pop
dec
sbb
mulb
leave
mov
sub
icebp
xchg
sbb
pop
fsubs
loope
add
repnz
popa
dec
cwtl
add
pop
out
sbb
lea
leave
js
mov
dec
sbb
pop
lahf
dec
lock
cmp
cmp
sub
push
mov
movl
mov
je
cld
push
mov
cli
jne
or
outsb
cld
add
js
test
push
mov
gs
outsl
push
dec
xchg
sti
sbb
mov
test
loop
ret
icebp
jg
iret
sbb
shl
adc
lahf
add
mov
cmpsl
dec
mov
cli
cmp
loopne
aam
sahf
int3
xchg
js
aam
push
xor
testb
or
sub
bnd
mov
push
cmpsl
cmp
pop
mov
enter
adc
jle
dec
sbb
fldt
pop
in
jecxz
push
add
sbb
stc
fdivrl
test
cmpsb
mov
rorl
xlat
out
sbb
mov
and
arpl
cli
xor
in
int3
std
cli
pop
loopne
addr16
stos
cmp
mov
mov
push
cltd
cld
jp
outsl
push
or
sbb
push
push
xchg
mov
inc
xor
jl
pop
or
shlb
or
adc
fimuls
outsb
data16
pop
jp
and
fcmovnbe
js
scas
enter
mov
sbb
sbb
cmpsl
hlt
arpl
lret
shrb
pop
mov
arpl
pop
sbb
mov
fisttps
or
std
loopne
push
mov
aas
xchg
mov
ds
mov
sarb
inc
pop
mov
scas
dec
outsl
mov
repz
cli
xor
jle
mov
jmp
cmc
pop
jle
lods
int
insl
xchg
insb
mov
pop
les
jle
push
fwait
inc
push
das
jp
or
fdivrl
mov
mov
int
movsb
push
dec
hlt
or
xchg
test
adc
pop
popf
pop
ja
loope
das
xchg
fs
xchg
cltd
mov
aas
adc
cld
mov
call
pop
rclb
scas
sbb
nop
or
stos
pop
fs
jmp
xor
mov
mov
fwait
icebp
pop
stos
stos
ljmp
fsubrl
mov
call
test
mov
mov
stos
cltd
push
mov
movsl
loop
mov
sub
mov
push
jns
jecxz
outsb
jbe
mov
sbb
mov
pop
inc
mov
cmp
movsb
inc
xlat
lea
mov
cmpsb
mov
in
jge
mov
mov
sub
leave
mov
in
push
clc
cmp
xchg
das
outsl
sarb
testl
aam
pushf
sti
mov
xchg
mov
leave
pop
aaa
sbb
jecxz
insl
cmp
dec
sub
adc
iret
pop
int3
or
dec
dec
and
das
or
push
in
lahf
ss
or
bound
or
dec
adc
punpcklbw
mov
insb
popf
pop
test
mov
ss
pop
loopne
xchg
scas
shll
mov
mov
fstps
xor
sbb
pop
cmp
jmp
adc
jge
push
sbb
and
or
mov
into
push
mov
call
aaa
push
je
int
loop
shrl
stos
sahf
push
out
enter
mov
push
sub
xchg
lret
pop
sbb
inc
bound
leave
stos
sub
mov
cmp
and
inc
xor
das
pop
int3
lret
std
jns
push
popf
jp
ja
inc
adc
adc
bound
push
mov
inc
mov
andb
loop
repnz
and
xor
ret
add
adc
bound
push
mov
inc
mov
andb
loop
repnz
and
xor
ret
add
jb
inc
mov
mov
andb
loop
repz
add
xor
ret
add
adc
pusha
xorb
and
mov
mov
xchg
add
cmp
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
sbb
or
cmp
sub
pop
sbb
inc
jns
mov
mov
leave
enter
clc
stc
jl
or
push
sub
cmp
dec
pop
js
push
cltd
fldcw
enter
call
sbb
dec
sub
imul
rcr
int
mov
mov
stc
jbe
inc
insl
cmp
aad
vpcmov
fists
and
add
in
xor
add
pop
mov
mov
cmpsb
cmc
gs
outsb
xor
stc
cmp
or
out
dec
iret
dec
fidivrs
push
xchg
push
or
jo
pop
clc
into
dec
mov
lods
test
enter
xor
aam
mulb
les
xchg
mov
lcall
out
add
les
jecxz
mov
push
in
mov
call
xchg
loope
sub
dec
cmpsl
andb
stos
jbe
mov
lods
pop
mov
clc
cld
jmp
inc
or
cmp
sub
mov
imul
cltd
into
test
ret
jmp
jp
dec
outsl
push
jg
es
push
lock
int
stos
movsb
cmpsb
mov
push
dec
insl
push
dec
sub
xor
jns
int3
mov
cmpsb
cmpsl
mov
pushf
test
insl
pop
pop
jnp
or
push
cltd
mov
leave
enter
call
sbb
sub
cmp
dec
pop
js
push
cltd
mov
leave
enter
call
or
fucomi
call
push
ds
nop
jnp
fcomi
cmp
out
mov
sbb
fcmovb
xor
das
cmpsb
push
sbb
dec
xor
das
dec
leave
fisubrs
arpl
sub
out
cltd
imul
jb
cmp
outsb
cld
or
add
fdivrp
mov
sub
ret
xor
xchg
xchg
scas
test
loopne
mov
xchg
loop
jns
xor
outsl
add
mov
rcr
inc
iret
fdivl
cmp
or
dec
scas
ret
pop
mov
sub
cltd
in
inc
in
cmp
jo
push
je
push
popa
pop
arpl
cmpsl
cmpsb
push
dec
rorl
mov
mov
sub
lret
test
cltd
ficoml
cmp
push
shll
pop
or
xchg
out
cltd
fcomip
add
mov
int
jae
lea
dec
sbb
xchg
popa
movsb
push
or
jp
mov
pushf
or
out
and
loope
aad
add
pop
cs
or
push
pop
mov
dec
test
stc
sub
sti
or
push
inc
push
xchg
mov
bound
dec
test
cltd
jbe
xor
and
add
out
pop
je
or
mov
jp
mov
lods
sti
rcl
mov
clc
xchg
je
shrb
ss
popf
lds
sub
cmp
out
jb
and
std
adc
cmpsb
jmp
lcall
add
mov
xchg
test
mov
lods
or
lcall
adc
rcrl
out
push
sbb
add
pushf
in
dec
or
sub
loopne
adc
pop
pushf
out
cmp
xchg
shl
arpl
pop
clc
sub
out
inc
mov
inc
mov
stos
cmpsb
mov
mov
and
jl
imul
lret
fsub
add
push
adc
div
lods
test
adc
inc
cli
out
sub
dec
dec
adc
outsb
fldcw
cmp
or
or
js
add
sbb
pop
repz
mov
lds
push
movsb
jl
sti
repz
add
les
ror
inc
lret
jp
loope
popf
popf
lods
xchg
adc
test
rorb
mov
fimull
add
repnz
mov
fwait
xchg
cmpsl
xchg
mov
outsl
jbe
mov
hlt
addr16
in
adc
xor
mov
mov
push
add
outsl
lods
es
shrb
fdivp
and
pop
push
mov
inc
ja
test
add
arpl
mov
xor
stos
shl
outsl
sbb
aaa
into
outsl
test
mov
cmp
sbb
in
xchg
iret
out
fs
repnz
sahf
sub
outsl
mov
scas
xchg
cmp
test
loope
lahf
cmp
lret
xchg
nop
bound
rolb
mov
repnz
push
jg
fwait
pop
jns
into
jno
bound
cmpsb
jae
xchg
stos
and
mov
pop
mov
aaa
lods
push
mov
rorl
scas
sbb
mov
fwait
insb
and
popa
std
add
dec
out
push
sar
inc
mov
xor
sub
jno
sbb
jnp
popf
insl
into
sbb
out
lret
std
push
leave
mov
aaa
outsb
cwtl
lcall
lret
movsl
pop
cmp
mov
inc
mov
les
mov
lock
sbb
iret
mov
dec
lea
movsb
and
mov
push
rorl
adc
jb
iret
push
loop
stos
add
mov
icebp
sti
jmp
or
int3
mov
and
pushf
mov
test
or
mov
cmpsb
or
data16
lcall
dec
loop
addb
push
xlat
mov
daa
xor
bound
and
sbb
das
fisttps
iret
xor
ss
jo
push
pop
jae
mov
fstpl
mov
outsb
repnz
mov
mov
sub
jp
jge
dec
add
inc
mov
imul
adc
pop
mov
jns
jno
icebp
xchg
insl
pop
push
jno
sbb
xchg
cmp
out
jo
push
imul
jbe
lock
xchg
repz
fs
push
jge
in
adc
cltd
adc
sbb
dec
push
out
mov
imul
fsubrs
ljmp
cli
mov
jl
inc
imul
mov
int3
mov
and
repz
ret
loope
push
outsb
xchg
cli
in
mov
sahf
xchg
mov
push
xchg
push
testl
or
sti
popf
imul
inc
sub
xchg
les
dec
fcomp
cmc
nop
outsl
int
add
cmpsb
pop
cli
mov
xchg
sub
jl
call
insb
mov
repnz
mov
push
xchg
or
cmpsb
fists
push
inc
dec
xchg
call
repz
pcmpgtw
inc
fsubp
lods
rorb
xchg
jns
mov
daa
xchg
dec
inc
shrb
and
gs
shlb
cmp
leave
add
sbb
inc
hlt
xchg
cmp
adc
repz
inc
or
sub
out
or
jb
cmp
dec
je
or
xor
jnp
pop
bound
pop
aaa
insb
sub
jp
outsl
adc
into
jno
pop
int3
inc
add
outsb
ss
xor
mov
aam
sub
outsb
test
loop
stos
sbb
and
fdivs
std
shlb
out
mov
sub
in
fidivrs
cmpsb
and
out
and
pop
hlt
in
add
std
sti
inc
repz
cli
fistl
push
es
jl
idivl
imul
adc
ds
int3
fwait
cmc
cmpsl
pop
cmp
mov
enter
dec
insb
sub
int3
xlat
mov
aad
aas
pushf
jbe
mov
and
lret
mov
mov
xchg
cmpsl
push
inc
rep
popa
aam
push
cmp
mov
push
xchg
or
test
mov
fnstsw
push
xor
fcmovb
mov
cmpsl
outsl
and
in
jb
loopne
mov
sub
lahf
jge
scas
hlt
mov
mov
pop
cmp
cmp
xor
loop
dec
scas
and
add
push
dec
or
adc
pop
cmp
pushf
dec
xor
es
add
adc
push
and
cmp
push
pop
dec
sub
push
mov
data16
ja
lret
push
std
push
mov
aaa
xor
out
mov
mov
sub
pop
sub
fwait
iret
imul
adc
fs
arpl
gs
and
mov
push
sub
int3
mov
in
pop
into
adc
loopne
fiadds
mov
aas
dec
sbb
sbb
enter
jne
push
adc
push
or
mov
subl
mov
fwait
mov
sahf
stos
ja
push
test
les
fst
inc
test
jecxz
dec
lods
cmpsl
cld
movsl
outsl
pop
cmp
sub
adc
xor
and
jns
jmp
ss
jne
pop
lock
xchg
or
imul
mov
sbb
mov
mov
mov
sub
mov
cmc
repnz
std
aad
push
ljmp
jae
fs
stc
inc
scas
xlat
nop
xorb
sbb
lea
mov
notl
sub
xchg
xor
inc
jle
add
jmp
dec
adc
and
sub
mov
jg
dec
or
mov
sti
inc
and
sbb
and
adc
mov
jle
mov
test
add
repnz
jmp
sub
outsb
addr16
mov
dec
pop
int3
sbb
inc
dec
push
inc
movsb
mov
xor
mov
adc
lock
xchg
scas
xchg
out
push
iret
lea
xorl
adc
mov
add
or
out
cs
imul
add
cwtl
ficomps
cmpsb
cmp
adc
call
xor
movsl
pusha
ret
xor
leave
loopne
xor
sub
arpl
movsl
push
ds
nop
mov
mov
fimuls
mov
pop
jge
pop
jnp
repnz
jle
fs
jo
ret
aad
das
fdivs
pop
fidivl
cmp
xchg
int
jne
fwait
sbb
inc
cmp
inc
rcr
into
ja
daa
bndldx
push
fstpl
xlat
test
stc
mov
fwait
or
clc
cmp
cmp
lahf
scas
dec
dec
inc
cmp
jle
xchg
and
and
mov
pop
inc
and
cld
pop
inc
lret
adc
push
push
cld
outsl
ss
movsb
xchg
inc
add
fisubs
cmpb
lods
jo
push
into
call
cmp
jl
jne
popf
outsb
cld
add
js
outsl
adc
rolb
mulb
inc
xlat
mov
or
incb
addr16
enter
cmp
xor
dec
mov
jbe
pop
fistpll
adc
xor
mov
into
xorl
xchg
sub
sahf
jl
imul
mov
aam
or
and
inc
stos
daa
aas
inc
inc
jne
mov
add
aas
pop
cmp
shrb
dec
out
in
fdivl
mov
sbb
jmp
xchg
lods
adc
pop
sbbl
jg
mov
inc
mov
jmp
roll
imul
lods
xchg
pushf
dec
mov
andl
add
xor
js
sbbl
inc
out
out
mov
push
cmp
push
adc
mov
fildll
pop
pop
push
lea
push
cmp
jle
test
push
mov
out
or
inc
repnz
cli
imul
jmp
and
dec
dec
jno
xor
xlat
sub
push
mov
xchg
jmp
mov
cld
notl
stos
jne
fistpl
cmp
adc
imul
xchg
inc
outsb
push
shr
bound
roll
mov
jge
ficomps
and
mov
or
fimuls
add
sbb
pop
int3
xor
jbe
sti
add
lahf
mov
inc
jns
mov
aas
mov
mov
push
aad
xchg
sarb
inc
je
xor
ja
cmp
insb
lahf
pop
aam
push
push
cli
clc
out
and
mov
ss
and
cmovae
mov
loope
lret
inc
mov
and
cli
lcall
loop
xchg
push
mov
popa
cltd
push
gs
mov
sbb
scas
xor
dec
test
iret
movsl
incl
push
shrb
adc
imulb
mov
das
es
and
je
add
sbb
out
jae
dec
popf
jge
sub
lret
lret
ljmp
xchg
lods
shll
js
lahf
push
jmp
dec
shll
add
insl
cmp
bound
push
fidivrl
nop
mov
sub
test
mov
nop
cmp
sub
cli
jecxz
out
iret
mov
mov
cwtl
dec
add
sbb
cmp
fldl
in
ret
mov
icebp
test
adc
dec
test
jo
pop
icebp
mov
stos
int3
and
lods
cmc
xchg
add
arpl
cltd
cmp
push
inc
pushf
pop
mov
cmp
lret
mov
mov
add
out
mov
leave
and
sti
rcr
pop
cltd
mov
mov
push
in
fnstenv
pop
out
add
repnz
lea
outsl
dec
xor
inc
adc
sahf
loopne
es
loop
dec
push
insl
adc
pop
mov
xchg
mov
jo
sti
mov
dec
aas
and
sub
mov
pop
push
adcb
xor
dec
incb
and
cwtl
adc
in
add
push
inc
or
pushf
cmpl
sahf
jmp
lcall
iret
dec
fstpt
shr
pushf
add
add
xchg
jno
xchg
push
out
jns
push
xchg
data16
dec
sbb
mov
fsubp
mov
and
iret
test
jp
aas
mov
push
jbe
movb
xor
or
push
xor
cwtl
leave
push
sub
mov
idiv
inc
subb
lds
add
hlt
mov
and
out
jbe
loop
repz
inc
xor
orl
xchg
mov
lods
and
sti
or
int
lock
aam
and
ret
int
daa
jp
movsb
dec
mov
inc
fcoml
lock
push
fwait
sub
fstpt
pop
aas
stos
cmp
push
pop
aas
cmp
adc
test
loopne
xchg
and
flds
jnp
mov
inc
xchg
mov
adc
jo
xchg
roll
pop
cmp
push
adc
mov
sub
sbb
add
ja
pop
push
inc
dec
lea
mov
mov
sbb
or
out
xchg
inc
jne
int
xchg
mov
mov
and
inc
jnp,pn
adc
rcrl
adc
add
out
xchg
movsl
fdivs
test
and
cmp
sub
test
imul
cmpl
xchg
jo
dec
xchg
mov
push
adc
in
scas
cmpl
jnp
clc
add
add
fwait
addb
inc
add
leave
inc
lea
dec
jns
ljmp
loop
shl
sahf
shll
mov
test
repz
add
leave
int
sbb
mov
int
bound
mov
ret
js
subb
fs
push
aam
cmpsl
jg
int3
ret
jmp
xor
mov
adc
jmp
inc
loop
sub
inc
or
mov
cltd
loope
into
mov
adc
fstpt
aam
into
iret
jae
push
adc
in
xor
push
cmp
fnsave
icebp
mov
sarl
outsl
dec
inc
xor
sbbl
cmpsl
lcall
dec
aaa
sub
jle
sub
cmc
dec
or
imul
pop
push
push
adc
jmp
push
jmp
outsb
adc
fisubrl
dec
out
iret
adc
adc
mov
push
mov
pop
pop
flds
test
mov
xor
xlat
and
cmp
pusha
arpl
imul
ds
nop
bound
shll
inc
cmpsl
add
mov
sub
jg
push
js
aam
shlb
outsl
mov
inc
xchg
cmp
pushw
and
push
addb
loop
add
cmpsb
or
mov
stc
push
mov
pusha
repnz
test
lods
nop
sarb
inc
outsb
or
and
inc
ss
shll
xor
mov
mov
lret
xor
pop
addr16
daa
dec
mov
loope
cwtl
jmp
and
inc
aad
cmp
cmp
add
imul
fistpll
pop
dec
pop
cld
xchg
cmpsb
inc
sbb
movsl
not
xor
movsb
std
mov
scas
or
adc
fnstsw
sbb
xchg
pop
xor
lret
add
push
mov
push
adc
and
ficoml
cltd
test
xchg
dec
sti
rol
daa
lcall
mov
popf
lock
lock
push
test
mov
pusha
inc
imul
sub
sbb
int3
xor
mov
mov
insl
clc
add
add
nop
fistpll
mov
test
push
gs
leave
and
push
push
pusha
and
in
mov
mov
pushf
jmp
xchg
pushf
pop
jmp
push
xor
movsl
jbe
repnz
mull
xor
mov
enter
loop
xchg
dec
cs
jns
jmp
arpl
lret
mov
push
sbb
pop
or
idivb
arpl
sbb
ja
lret
inc
dec
mov
fs
notl
adc
cld
fucomp
lret
adc
jg
add
inc
ja
sbb
inc
cwtl
dec
repz
xchg
arpl
lock
jb
xlat
pop
movsl
jecxz
mov
dec
divb
push
pop
das
jmp
insb
sbb
leave
adc
and
rcll
xor
fstpl
adc
add
test
int
xor
rcl
jecxz
aad
pop
fcomp
jecxz
shrl
sbb
adc
ljmp
enter
and
push
test
test
daa
test
mov
mov
xor
push
mov
stos
fdivl
mov
sub
aas
repz
mov
sub
mov
mov
shrl
js
les
in
pusha
stos
test
test
in
push
mov
in
sbb
pminsw
ja
and
mov
mov
mov
jno
mov
lods
hlt
in
sub
xor
popa
shlb
xchg
das
ljmp
push
inc
sahf
std
sti
push
incb
dec
mov
and
loope
das
mov
fisubrs
pushf
rorl
mov
lods
insl
xchg
jno
jno
mov
enter
push
movsb
je
repz
add
sub
es
insl
sbbl
sub
mov
dec
das
fistpll
shl
ficoms
sbb
and
cld
and
fnstenv
int
ljmp
xor
or
lret
cmpsl
aas
and
and
adc
adc
fwait
and
and
jo
fisttpl
outsb
das
inc
mov
xor
out
imul
pop
xor
cwtl
stos
arpl
mov
cli
inc
addr16
mov
push
lds
leave
push
fisubs
bound
movsb
dec
test
xchg
jmp
inc
xchg
pusha
arpl
lret
lods
mov
rcrl
dec
add
mov
pop
inc
push
addr16
mov
repz
mov
jl
jbe
push
inc
in
aas
lcall
lock
xchg
and
pop
enter
int
std
pop
mov
push
xchg
test
jbe
mov
rcrl
mov
cmp
scas
cmp
push
xor
jns
lods
or
fdivrp
aaa
mov
adc
jp
push
jno
dec
loope
jecxz
aaa
lock
je
inc
je
and
mov
xor
inc
adc
andb
add
in
inc
pusha
ss
sbb
mov
mov
subb
dec
jnp
push
sahf
or
push
lods
xor
js
out
adcb
loopne
sub
adc
mov
dec
sub
rcr
xor
push
arpl
xchg
js
dec
fwait
sub
mov
xchg
xchg
lahf
fcmovnu
aad
sahf
arpl
subb
mov
aas
hlt
cmpsb
mov
outsb
jbe
sub
js
inc
cli
adc
fldl
jge
mov
lcall
sbb
jo
addb
mov
hlt
and
pushf
xlat
cmpb
inc
imul
or
repnz
icebp
mov
push
mov
add
out
lret
lahf
add
jecxz
lret
mov
xchg
jo
adc
clc
jl
inc
xchg
pop
arpl
in
dec
in
loopne
pop
pop
scas
mov
inc
and
sbbl
cmp
out
jns
add
stos
dec
repz
cs
jl,pn
xlat
xchg
pop
movsb
mov
sub
jbe
ja
or
inc
rcll
inc
stos
int
mov
push
mov
jae
stos
pushl
mov
insl
mov
add
arpl
mov
popa
frstor
test
test
add
xchg
bound
incl
or
aad
jmp
ret
loopne
push
or
sar
in
jns
movsl
imul
cld
pop
popa
repnz
sbb
mov
push
inc
std
sub
pop
sub
aad
imul
pop
sarl
stos
dec
lds
stos
inc
mull
jl
jmp
pop
xchg
and
in
jle
mull
jo
or
push
xor
outsl
bsf
int
cli
repz
mov
ss
xor
fisubl
lea
fcmovb
sar
loop
mov
mov
cld
sub
pushf
mull
mov
addl
cmp
push
lret
jle
dec
cmpsb
sub
lods
mov
inc
dec
clc
cmp
in
mov
testl
jecxz
popf
pop
lock
adcb
mov
in
jo
lcall
data16
test
mov
or
cld
xchg
pop
mov
das
push
push
jb
mov
mov
popf
decb
int3
sbb
jbe
bound
add
in
and
mov
xor
xchg
ret
sbb
insb
addr16
movsb
mov
daa
ret
imul
add
in
sbb
sub
pop
dec
dec
pop
js
push
cltd
mov
leave
enter
call
sbb
sub
cmp
dec
pop
js
push
cltd
mov
leave
enter
call
sbb
sub
enter
js
test
cwtl
mov
mov
clc
jmp
push
sbb
or
js
call
xor
test
inc
es
push
pop
push
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
into
cmp
jle
outsb
or
pop
cs
fidivrs
cmpsl
ljmp
add
cmp
sub
sbb
or
jl
insb
ds
cs
fidivrs
mov
fsubrl
ljmp
push
and
push
jle,pn
mov
mov
std
scas
out
sahf
scas
shrl
dec
imul
aaa
int
icebp
fidivrs
loopne
and
out
or
repz
imul
mov
inc
xor
arpl
arpl
jno
mov
push
sbb
inc
paddb
nop
test
fidivrs
adc
cmovle
cmp
cmp
sub
sbb
pop
ficomps
dec
jmp
lea
frstor
and
sub
dec
push
insl
ds
cs
lahf
mov
jl
xchg
out
cmp
dec
shl
imul
lahf
sub
dec
and
sbb
mov
out
xchg
mov
add
outsb
or
jl
insb
ds
cs
mov
out
mov
rorb
sub
inc
adc
pusha
pop
fldcw
jns
dec
or
cmp
adc
fisubl
or
pusha
jnp
push
ds
mov
mov
out
mov
pusha
int3
sbb
xor
insb
ds
cs
fidivrs
mov
fsubrl
sub
sbb
or
jl
insb
ds
cs
fidivrs
mov
fsubrl
jp
popa
cmp
insl
sbb
jae
repz
jge
mov
lahf
sbb
push
mov
aas
jecxz
lea
sti
icebp
dec
push
pop
or
fisubrl
adcb
ss
mov
add
test
xchg
mov
fbld
aas
dec
ret
ficoml
scas
xor
popf
xor
hlt
xorb
dec
and
xor
dec
scas
cmp
push
push
rcrb
mov
push
aad
enter
into
fcoml
jge
xchg
sub
lods
sbb
out
sub
daa
pop
mov
pusha
dec
jo
add
cmp
ljmp
ds
cmp
js
mov
je
cmpsl
das
mov
push
loope
sub
jae
adc
dec
test
lock
je
flds
jne
push
adc
pop
jne
addr16
pop
popf
push
cmpl
or
mov
dec
cmpl
sbb
imul
in
mov
pop
or
push
pop
or
inc
repnz
les
adc
jno
je
mov
out
jo
push
shrl
dec
sarl
adcb
aaa
mov
inc
or
rcr
fsubs
mov
cmp
mov
scas
xchg
mov
push
pop
outsl
jne
dec
push
lods
stos
arpl
xchg
adc
or
push
popf
test
addr16
adc
test
outsb
fld
scas
dec
add
aas
push
inc
enter
mov
into
shll
notl
popa
and
nop
push
jl
and
in
cmp
xchg
push
shll
inc
cmp
ljmp
xor
scas
dec
inc
test
inc
jmp
sti
dec
and
js
lds
outsb
outsl
imul
pop
iret
jmp
or
inc
jns
pop
and
push
mov
add
dec
outsl
lds
bound
mov
imul
push
and
pop
arpl
gs
fidivrl
inc
mov
xor
jecxz
test
movsl
adcb
mov
mov
lahf
pop
into
ljmp
push
mov
sub
mov
out
cmp
aas
xchg
xchg
mov
cmp
add
data16
in
int3
ljmp
lds
imulb
das
fistps
jp
iret
sub
test
jg
cld
xchg
sbb
cli
aaa
test
push
das
jmp
inc
in
sarl
or
les
pop
mov
add
mov
jg
mov
aas
dec
jmp
and
aas
jns
rcl
pop
pop
movsl
outsb
pop
jae
mov
dec
jl
add
hlt
es
inc
pop
jge
xor
loopne
into
push
mov
sbb
xor
fwait
jns
loope
jl
adc
fadds
pop
pop
sbb
into
or
out
push
add
outsl
or
cmpsl
add
mov
dec
lds
ret
aaa
jp
jecxz
push
cmp
sub
ficompl
mov
add
out
dec
xorl
fucomp
test
jb
mov
and
mov
ja
sbb
lret
movsb
xchg
adc
test
and
inc
sbb
das
xchg
adc
nop
popf
sbb
sub
inc
gs
cmp
jno
push
push
or
jnp
in
sbb
mov
xorb
pop
sub
inc
test
dec
cmp
movsl
icebp
mov
data16
add
dec
xor
pop
fistpll
xchg
xchg
sarb
dec
mov
mov
inc
adc
push
std
mov
into
xchg
cs
xor
out
les
in
rcr
mov
jb
les
pop
pop
sub
inc
mov
stos
dec
mov
xchg
jmp
jge
in
jle
xchg
adc
adc
test
lret
ret
pop
loope
in
adc
jne
xor
cltd
push
sub
mov
pop
or
repnz
loop
mov
out
pushf
jmp
insl
jge
add
jo
jecxz
or
xor
jge
or
sbb
jecxz
mov
mov
pop
in
or
out
jle
mov
scas
push
sti
loopne
sbb
stos
rcll
add
jnp
push
cs
out
mov
mov
and
mov
fdivs
xchg
or
sub
push
mov
mov
sub
jns
addr16
sub
loope
cmpb
jno
push
testl
loope
xchg
js
shll
xor
or
aam
nop
nop
push
cmp
les
shrl
mov
fs
mov
lea
push
jmp
jge
mov
lods
sbb
and
fists
loop
add
jno
push
insb
movsb
jbe
mov
cmp
pop
inc
push
dec
cmp
mov
xlat
mov
out
outsb
adc
push
subb
mov
fdivl
push
xor
jmp
xchg
cmp
stos
sbb
jbe
je
push
push
xchg
mov
mov
add
sub
xor
in
clc
repz
xchg
mov
push
lods
shlb
ret
jl
cmpl
xorl
in
add
scas
sub
mov
sbb
push
mov
and
iret
ljmp
pushf
aas
xor
jle
aaa
sbb
jp
jne
adc
jo
and
sbb
lret
jmp
into
mov
inc
xchg
das
dec
add
out
loopne
mov
pop
cld
push
outsb
pop
mov
test
sbb
bound
pop
and
aas
rcl
push
je
push
lea
rcll
jg
push
xor
adc
daa
and
pop
test
nop
das
lcall
sarb
mov
cmpsb
dec
jns
sub
mov
mov
jl
sti
adc
xchg
adc
adc
int
or
push
and
pop
inc
and
inc
in
inc
jbe
ja
fucomp
or
dec
or
push
test
out
fadds
mov
pop
mov
push
ja
scas
rorb
jae
stos
mov
xchg
fdivrl
scas
pushf
iret
cltd
shl
int3
jmp
js
sub
inc
ret
mov
cld
pop
mov
cmp
lret
xchg
mov
in
push
push
add
lea
call
lea
clc
add
add
test
push
cmp
push
push
xlat
sbb
dec
xchg
shlb
insl
out
add
test
ja
out
cmp
dec
adc
repnz
mov
sbb
into
sub
cmc
cmc
je
dec
repnz
dec
sar
lea
aaa
mov
js
mov
fcomps
test
movsb
xchg
ret
cmp
sub
loope
jge
sti
popa
fstpl
sbb
add
jbe
shrl
sub
lahf
sub
ret
jo
lea
jp
push
add
rdmsr
or
popf
aas
mov
cmp
test
or
out
jne
cli
mov
xor
repz
imul
ljmp
test
stos
add
dec
pmuludq
test
xor
mov
jmp
lcall
sub
fs
iret
cmp
ja
add
out
flds
or
push
stos
sub
xor
popa
repnz
das
or
fldcw
pop
sub
xchg
out
add
xchg
adc
pushf
lock
add
push
sub
xchg
jecxz
lcall
lret
sbb
es
inc
sbb
pop
aad
lods
data16
mov
dec
iret
push
int3
idiv
fs
push
lods
add
mov
daa
addr16
push
fs
mov
sub
sbb
sub
sbb
mov
out
pop
lahf
out
lds
lea
mov
mov
imul
into
jmp
decl
sub
push
cli
std
inc
inc
mov
cmp
imulb
fcompl
inc
jo
stos
and
cmp
hlt
sub
int
push
sbb
or
mov
push
addr16
pop
fisubrl
mov
sarl
mov
pop
in
or
les
sbb
idivl
fidivrl
mov
in
lods
xchg
lds
mov
lods
incl
dec
lcall
pop
dec
xchg
pop
push
outsl
xchg
out
add
cmp
mov
push
sahf
mov
stos
in
andl
lods
jp
mov
sub
mov
add
js
cmp
or
out
clc
cld
mov
sbb
scas
cld
negl
push
pushf
jne
sub
insb
and
sub
and
dec
fdivrp
mov
cmpsl
xchg
pusha
or
arpl
dec
jle
push
pop
mov
xlat
daa
sbb
repz
cmp
xchg
test
lds
insl
je
int3
sti
cli
aad
adc
bnd
mov
mov
iret
push
push
pop
inc
outsl
dec
pop
rclb
dec
pop
int3
xchg
mov
in
mov
es
mov
mov
cmp
and
push
xchg
add
jno
sub
lds
adc
xor
mov
push
lods
mov
mov
mov
ss
jae
movsl
loop
orb
inc
sbb
pop
cli
pop
leave
sub
sbbb
push
add
data16
out
fcompl
jne
pop
mov
xor
out
jle
orb
gs
push
mov
ljmp
lcall
jnp
int3
mov
xor
sbb
mov
mov
jg
xor
adc
push
push
jbe
leave
out
and
fadds
nop
push
adc
sbb
xchg
movsb
fstpt
es
mov
dec
outsb
dec
mov
mov
push
push
xor
mov
adc
sub
xchg
rorb
lock
dec
cmpsl
data16
add
xchg
pop
jl
xchg
mov
out
xor
and
mov
cld
adc
xor
ds
shll
or
push
stc
aam
inc
loope
xchg
in
fisttps
pop
pushf
loopne
jp
jnp
sbb
sbb
bnd
push
mov
inc
mov
sub
sub
ljmp
pop
mov
xchg
dec
repz
cmp
jl
inc
inc
call
push
fwait
out
pop
jecxz
mov
mov
ds
scas
cmp
dec
ljmp
pop
rcl
pop
es
popa
mov
outsb
adcb
or
shrl
xor
xchg
mov
jns
stos
test
btc
sub
sbb
clc
repz
sbb
stos
out
cmp
arpl
imul
dec
jg
adc
test
jne
and
stc
jecxz
iret
push
mov
mov
pop
cld
add
cmp
je
in
dec
outsl
loopne
pop
mov
cld
mov
cmpsl
pushf
and
mov
outsl
enter
jbe
mov
mov
sarl
mov
or
mov
xchg
or
or
pop
add
pop
add
mov
xchg
mov
pop
mov
push
gs
ret
mov
fdivr
lret
ret
loope
jbe
insb
adc
das
mov
xor
xchg
xorl
xchg
imul
div
popa
jnp
arpl
repz
repz
or
xorb
fwait
int
inc
pop
fsubs
and
fs
idivl
pusha
adc
aad
aaa
cmp
out
repz
daa
lods
push
fstpt
sbb
xor
movsb
daa
jmp
sbb
xor
aas
push
mov
adc
inc
jno
pusha
movl
xchg
mov
xor
ret
add
fstps
or
std
inc
jne
push
add
push
push
jecxz
insb
outsl
add
dec
rcr
and
push
add
mov
sbbb
sub
outsl
lods
cmp
pop
scas
mov
addr16
dec
push
or
call
sti
sbb
push
bound
fs
jno
fst
ret
sbb
les
or
adc
repz
loopne
dec
cld
jns
lahf
mov
je
cs
cli
xchg
cmpsl
sbb
xchg
das
mul
cli
jg
pop
and
sbb
and
gs
and
xchg
orb
leave
loopne
jno
cmp
or
sub
or
ss
aas
lea
arpl
jge
fs
cwtl
repnz
pop
adc
outsl
jle
add
vmwrite
sbb
or
add
insb
xchg
jecxz
test
or
mov
inc
aaa
xorb
aam
jle
fistpll
push
pop
std
mov
sbb
shll
xbegin
inc
pop
push
dec
and
push
ret
call
adc
add
imulb
cmp
and
adc
ds
stos
leave
mov
and
push
add
sub
cmp
cltd
pop
ret
adc
pushf
or
fisttps
inc
or
or
lock
dec
out
lcall
scas
in
rdmsr
ret
shll
shlb
inc
jle
iret
adc
and
jmp
dec
test
add
xor
ja
outsl
dec
jae
dec
icebp
insl
cmp
xor
mov
pop
test
add
iret
adc
je
fcmovne
push
pop
sub
sbb
andb
stos
dec
rcll
and
cmp
rcll
sbb
xchg
aas
fsts
jnp
xchg
pop
and
inc
mov
push
pop
fnstsw
cld
ljmp
sub
stos
cmp
insb
xchg
mov
sbb
movsl
cmp
lcall
rcrb
repz
push
add
and
mov
out
insl
fiaddl
mov
or
imul
rcr
iret
movsl
out
cmp
inc
add
mov
test
push
sbb
and
cs
dec
mov
and
xchg
xchg
or
cmpsb
dec
clc
or
pop
popf
jae
xchg
fwait
push
inc
sub
mulb
pmulhw
aas
push
cmp
adc
ljmp
aaa
outsb
jmp
std
mov
test
mov
test
imul
mov
cmp
sub
jle
cmc
pop
mov
leave
xchg
mov
shrl
lahf
movsb
in
mov
movsl
add
insb
pop
mov
add
push
xor
pop
pop
and
in
jl
jmp
xchg
fs
xchg
fnstcw
sub
in
les
jne
mov
hlt
aas
or
mov
jne
test
push
jge
ss
pop
xchg
adc
dec
mov
sub
test
mov
sbb
push
mov
sub
movsl
inc
int3
xor
pop
mov
cmp
fcompl
fisubrl
sbbl
dec
fsubs
push
and
mov
push
movsb
jge
and
fnstcw
adc
ror
testb
or
add
out
sbb
add
sbb
into
addr16
pop
pop
lock
cmp
in
mov
jge
int
push
das
or
ja
dec
push
ljmp
sub
add
xor
shl
xchg
inc
mov
repz
add
loopne
add
aad
andl
out
pusha
inc
jg
jb
pop
lret
push
push
imul
subb
sub
mov
or
es
mov
sub
mov
push
test
add
in
out
xchg
test
adc
inc
hlt
idiv
mov
mov
and
xchg
xchg
xchg
xor
pop
es
mov
loope
gs
push
mov
pop
fmul
les
inc
xor
jmp
mov
mov
adc
mov
hlt
rclb
mov
rol
mov
mov
add
or
jnp
inc
pushl
inc
ss
test
stos
push
jns
out
es
icebp
push
sbb
cli
or
gs
aas
in
pop
add
push
cmp
lea
lcall
cltd
or
mov
dec
inc
das
sbb
ret
dec
xor
pop
mov
sbb
jg
out
fdiv
sbb
aad
mov
pop
push
adc
jo
loop
cld
fdivrl
stos
int3
imulb
out
mov
mov
pop
loopne
mov
inc
out
fidivrl
fsubl
sub
xor
sbb
jb
jp
pop
out
dec
movb
jl
push
int3
clc
xorb
push
push
inc
fidivrs
shrl
test
nop
push
dec
arpl
in
jno
or
insl
divl
dec
popa
inc
sub
iret
mov
shlb
in
adc
int
scas
cld
mov
xchg
ljmp
ret
lock
sub
xchg
cs
cmpb
lods
xor
and
xchg
lret
in
fwait
rcrl
and
cwtl
mov
test
out
xor
xchg
out
sub
pop
imull
jge
push
cmpsl
and
sub
ja
mov
lret
scas
push
pop
ds
movsl
xchg
cmp
mov
fwait
mov
or
mov
leave
test
jnp
jnp
fcoms
adc
aam
hlt
xchg
add
negl
inc
in
shll
ja
xor
stc
inc
aas
out
inc
mov
adc
jle
mov
mov
test
jge
mov
and
imul
cmpsb
push
inc
mov
mov
mov
xchg
cwtl
lods
sbb
mov
xchg
sahf
xchg
mov
shrb
pop
inc
loope
mov
movsl
cmc
movsl
cmp
int
andb
mov
push
mov
push
jne
adc
and
pusha
add
pop
pop
add
jle
sbb
sbb
dec
add
xchg
cmp
sbb
in
popf
inc
pop
mov
fildl
enter
or
xor
mov
push
mov
stc
scas
sbb
lock
cmp
ds
cmc
xor
push
push
jo
outsl
shlb
jmp
mov
push
inc
test
mov
xchg
imul
pushf
mov
cmc
xor
mov
cmp
das
js
fdivs
ret
jb
xor
in
pop
adc
add
lea
bound
pop
std
shrb
mov
es
xchg
ja
xchg
or
ss
mov
fidivs
sbb
rclb
inc
and
push
xor
mov
or
mov
sbb
dec
leave
ret
fcmove
jg
jle
mov
int3
jle
adc
outsl
mov
mov
test
test
or
xchg
or
rolb
shlb
das
sub
xlat
jbe
repnz
in
cmp
push
sti
xchg
jne
out
mov
inc
pop
push
mov
or
out
and
les
fwait
repz
mov
aaa
es
ss
adc
pop
arpl
fcomip
mov
add
add
cmp
out
mov
ds
push
add
mov
mov
popa
xor
or
push
cmp
xchg
push
fisubrs
push
pop
mov
cmp
rep
adc
cld
jmp
movsl
sbb
cwtl
jecxz
mov
push
cmp
push
lret
pop
fistl
mov
loope
stos
loope
fwait
cmp
xchg
push
popa
push
mov
inc
sti
sarl
std
out
fadd
pop
clc
push
shl
les
test
sbb
pop
jge
js
ss
or
mov
outsb
dec
adcb
and
jns
mov
sbb
push
clc
xor
addl
add
mov
stc
lcall
or
inc
cmc
xchg
mov
xchg
pop
iret
lods
and
outsb
add
inc
cmp
das
lret
mov
ficompl
lahf
jns
inc
movsb
dec
push
gs
jecxz
xchg
xor
les
push
std
in
test
nop
out
ret
mov
outsb
mov
fisttpl
shl
mov
lea
cmp
mov
je
and
dec
dec
scas
jbe
dec
ret
mov
rolb
stc
ficoms
je
and
fistpl
push
lds
dec
ja
lods
enter
cmpsl
mov
jns
push
out
es
mov
push
mov
notl
and
sti
test
ds
or
nop
adc
mov
mov
xchg
aad
adc
add
add
inc
dec
push
test
das
test
cmp
pop
sbbb
or
bound
mov
dec
cmc
push
std
xchg
mov
xchg
lock
push
rcrl
loop
push
or
mov
xor
or
xor
test
scas
add
test
outsl
mov
fldlg2
xchg
stos
gs
andl
out
dec
mov
insl
cmp
xchg
sub
mov
pop
pop
iret
pushf
mov
jbe
cs
mov
or
imul
pop
aas
xchg
mov
daa
in
movsb
inc
inc
dec
dec
ds
bound
sarl
inc
das
cmpl
jns
stos
fnstenv
cmp
mov
repz
pop
jno
inc
mov
inc
add
pop
leave
loopne
pop
pop
mov
sub
sbb
push
jl
insb
ds
cs
fidivrs
mov
fsubrl
sub
sbb
or
jl
insb
ds
cs
fidivrs
mov
fsubrl
and
outsb
or
jl
pop
ds
cs
fidivrs
out
test
aad
sub
dec
enter
dec
push
jl
insb
fsubrl
mov
inc
into
push
push
pushf
out
sti
jmp
movsb
push
mov
push
jp
dec
mov
push
xchg
sbb
add
xor
and
push
stos
inc
xor
lcall
pop
shrb
ret
or
outsb
inc
out
cli
sbb
and
push
fsubs
mov
dec
jae
arpl
fs
ret
and
adc
add
ljmp
jb
push
into
add
mov
cmp
imul
loope
and
add
mov
xor
jne
jecxz
push
lock
or
cmc
in
adc
leave
and
repz
mov
and
xchg
fiaddl
ljmp
lods
bswap
add
xor
test
mov
or
sub
lahf
pop
or
and
inc
aas
addr16
mov
out
jg
dec
mov
cs
add
add
mov
fsts
pop
pop
xchg
orb
mov
rcrb
cmp
ljmp
and
aaa
mov
mov
push
into
pop
shrb
xchg
repnz
loopne
nop
loop
sarl
xor
push
fwait
loopne
hlt
or
das
int3
aas
mov
cmpw
inc
cli
into
inc
mov
push
in
notb
cmp
mov
jle
sub
sahf
inc
lahf
push
scas
dec
fsubs
fisubl
mov
loopne
mov
ret
pop
xchg
sbb
cmp
or
sbb
ljmp
push
stos
inc
mov
xchg
push
jp
dec
mov
cmp
or
sbb
ljmp
push
stos
inc
mov
xchg
push
imul
mov
xchg
adc
pop
sarl
shr
push
lcall
aam
jno
mov
cs
inc
pop
push
into
and
int
or
xor
xchg
mov
lcall
pop
sbb
test
mov
pop
cltd
xchg
enter
aam
dec
popf
jbe
and
sub
out
pusha
mov
iret
sbb
mov
insl
rorl
xchg
shl
lock
sti
out
sbb
insl
stc
inc
popa
fcomip
fimull
push
aam
jl
jo
arpl
aaa
xor
enter
jns
insl
mov
ret
sub
sti
xor
inc
mov
outsb
js
jo
rorb
sub
mov
jae
dec
shlb
pop
pusha
ss
nop
stos
pop
aam
jns
or
dec
cmc
push
bnd
mov
push
data16
cs
aad
and
sarb
faddl
clc
xor
sub
lcall
or
sarb
repnz
arpl
std
jne
sbb
push
fstpt
repnz
sbb
inc
bound
xchg
xchg
aas
lret
dec
clc
fsubr
mov
daa
dec
loop
pop
xor
cmpsb
ljmp
in
sub
mov
mov
pop
fsubp
rorl
jnp
sub
cmpsl
xor
xor
adc
jmp
test
loop
jge
adc
cmp
sahf
movsl
inc
scas
outsb
mov
int
cmp
sbb
jns
mov
mov
lock
loope
xchg
ficompl
adc
jns
mov
data16
fwait
cltd
push
ret
inc
pop
test
or
fisubrs
xor
add
in
push
push
lds
incb
push
lret
ds
loop
mull
adc
mov
roll
addb
adc
xchg
filds
mov
out
hlt
pop
test
jle
rcrl
inc
lods
mov
add
insb
iret
inc
adc
sub
mov
add
aaa
sub
repz
aam
loope
je
cmp
push
adc
pop
scas
mov
in
adc
icebp
aaa
inc
cmp
pusha
xchg
fptan
xchg
mov
sbb
enter
pop
inc
stc
or
push
icebp
ljmp
push
dec
or
sahf
xor
int
inc
fildl
pop
add
pop
mov
loope
leave
add
popa
inc
xchg
adc
push
jmp
and
add
pop
sub
mov
push
shll
push
outsl
imul
add
test
mov
lods
sarb
rcll
lods
idivb
mov
jns
jae
push
out
mov
mov
push
out
mov
loope
jl
dec
jns
mov
insl
adc
fwait
cmpsb
xor
rep
loope
stc
rorb
orb
mov
cmc
enter
pop
std
adc
push
xor
mov
dec
in
jmp
push
adcl
inc
aad
sub
mov
xor
stos
dec
out
jns
stos
add
movsl
mov
int
ljmp
inc
loop
out
sti
jnp
jo
and
lea
mov
outsl
call
adc
testb
iret
outsb
loope
push
lcall
hlt
push
adc
inc
xchg
test
pushf
sbb
xor
test
jmp
js
sbb
adc
mov
iret
in
insb
lret
lcall
stc
adc
add
lods
sarb
scas
testl
ret
jnp
wbinvd
pop
in
test
mov
xor
iret
ror
test
ds
xchg
pop
mov
mov
ljmp
out
popf
out
pop
add
inc
pop
sbb
mov
movsl
and
ja
pushf
in
mov
in
cmp
fwait
adc
adc
leave
hlt
jecxz
insb
fwait
shlb
mov
mov
adc
push
cmp
push
mov
inc
push
sub
sbb
mov
fsubrs
test
push
lods
das
mov
fildl
mov
sub
cltd
aam
cmc
and
ret
jg
out
jns
insl
inc
ret
popf
push
test
jg
imul
stos
push
pushf
mov
pop
xor
bound
push
loop
jp
sbb
sub
es
dec
jns
dec
lahf
push
jecxz
hlt
push
and
movb
lods
out
repnz
cmp
bound
and
out
xor
inc
cmp
gs
aam
sti
stc
enter
aad
mov
dec
adc
pop
and
xor
les
les
pop
shll
jge
es
jecxz
pop
and
out
out
sub
fisttpl
cmp
push
mov
add
and
inc
mov
or
xchg
inc
pop
sbb
mov
cmpsl
mov
fcmovnb
dec
jnp
int
and
addr16
lret
jne
push
test
xor
cmp
sub
outsb
add
mov
sbb
inc
cmp
push
mov
xor
test
push
and
cs
das
adc
cli
xor
aad
out
repnz
cld
ficoms
jnp
nop
dec
ret
ret
sar
loopne
push
stos
aad
push
outsb
jle
cmp
repz
dec
inc
dec
lods
lret
repz
ficoml
ret
test
push
mov
jge
sarb
mov
jo
adcb
lret
sbb
test
inc
and
aam
xchg
fldt
int3
lock
paddsb
push
rorb
push
xchg
out
adc
fwait
js
sub
pushf
add
sub
pop
jno
sahf
std
cmp
popf
das
adc
ss
adc
add
mov
pop
mov
out
push
adc
sub
cld
xchg
or
cwtl
jle
sar
shll
cmp
enter
push
jne
adc
push
outsb
ret
aas
jg
test
and
mov
sbbl
inc
dec
jns
pop
popf
cmc
out
fwait
push
push
sysexit
sub
mov
pop
jp
lret
cmpb
cmp
and
pop
rcll
loope
out
insl
dec
addr16
sub
insl
mov
lea
mov
or
jecxz
xchg
xchg
cwtl
cmp
mov
scas
mov
cmp
ss
shrb
sbbb
pop
imul
addps
loop
adc
and
xchg
mov
add
daa
cld
int3
jmp
jbe
pop
out
pop
cmp
or
cmp
fdivrp
das
inc
dec
fstpl
shrb
jmp
das
inc
push
jmp
aaa
xchg
push
cmc
loope
xor
pop
outsl
fwait
out
jg
jp
pop
loop
insb
mov
mov
and
xor
outsb
sub
jns
jge
sub
gs
inc
hlt
or
push
mov
out
mov
out
test
pop
std
arpl
test
mov
cs
rclb
inc
fbld
push
gs
lods
subl
das
jle
adc
adc
and
sbb
add
stc
mov
jle
mov
jecxz
int3
mov
hlt
mov
loop
pop
je
mov
movsb
sbb
jle
notl
leave
inc
loop
mov
or
fwait
cmpsl
ja
mov
test
fs
add
inc
inc
pop
lods
fbstp
or
pop
xor
sub
scas
divl
cmpsl
jo
and
cmp
and
add
sbb
test
hlt
movsb
xchg
cmc
sbb
mov
loop
inc
dec
and
inc
lret
setle
ret
cwtl
loop
pushf
in
daa
ds
jecxz
mov
in
pop
push
xchg
xor
xor
mov
in
lcall
repz
sbb
gs
or
mov
mov
repz
mov
jno
fs
pop
xor
cmpsl
cltd
in
stos
push
lret
jne
dec
and
aas
sti
out
dec
jg
push
sahf
xor
xor
das
int3
test
add
sub
insb
in
mov
mov
sbb
lock
lret
sbb
mov
or
lcall
mov
push
sub
ds
sbb
push
pushf
or
ffreep
push
repnz
cmp
push
mov
add
fstpl
js
adc
loopne
dec
testl
dec
xchg
jae
pop
and
js
sub
push
xchg
cli
hlt
push
xor
stos
dec
dec
mov
mov
xchg
xchg
in
push
pop
xchg
mov
imul
fiadds
xchg
mov
movsl
pop
leave
xor
jns
call
dec
dec
mov
dec
mov
add
sbb
pop
ret
mov
mov
loope
popa
mov
cmp
mov
and
or
loopne
test
ret
mov
in
fxch
movsb
add
push
adc
adc
push
cmpsl
andb
jns
insl
shl
pop
fst
ror
retw
adc
cmp
aad
lods
ret
sub
mov
popa
sbb
push
mov
popa
push
nop
lods
pop
ficompl
movb
jne
xchg
lret
repz
push
mov
outsl
scas
bound
dec
subl
in
mov
mov
inc
push
add
push
mov
out
mov
in
xor
test
xor
pop
cmp
mov
dec
add
shll
int
add
rcll
and
mov
xor
cmp
clc
cmp
inc
cwtl
in
push
dec
lahf
sti
shll
aaa
movsb
cmpsl
mov
int3
aad
iret
mov
aaa
shlb
push
push
push
dec
fiadds
movb
sbb
mov
push
call
cmp
daa
sahf
jg
push
push
jecxz
negl
pop
or
pop
push
mov
mov
mov
dec
and
outsb
loope
leave
testl
push
loop
or
pop
push
popa
lods
add
repnz
and
lret
mov
cld
add
jmp
xor
lret
mov
add
xchg
sbb
fisttps
mov
jb
insb
adc
cmp
das
insl
or
pop
sub
ficomps
scas
shl
push
or
inc
sti
scas
xchg
cld
push
xor
sahf
ds
sbb
push
pushf
xor
jge
rcr
xchg
out
mov
sti
popa
scas
sbb
and
enter
push
lds
rcrl
xchg
or
in
pop
clc
dec
fdivr
sub
popf
loope
or
in
fldt
sbb
mov
mov
clc
dec
shrb
push
sti
imul
add
cmp
add
fcoml
xchg
mov
adc
mov
aad
insl
je
push
xchg
call
fdivs
fisubrs
rolb
sbb
pop
pop
mov
pop
mov
pop
lods
pop
pop
fcoml
mov
push
cmp
sub
xor
aaa
repnz
ficoms
xchg
xor
mov
or
dec
outsl
out
dec
adc
or
inc
sub
pop
adc
insl
fisubrl
xor
iret
mov
clc
and
packuswb
mov
das
inc
fwait
aaa
inc
inc
js
mov
mov
mov
dec
daa
adc
cmpsl
inc
out
push
scas
fwait
loope
fs
fwait
pop
popa
pop
cmp
inc
inc
cmpsl
mov
cld
pop
cmp
adc
cld
cmp
iret
adc
jg
mov
push
popa
jecxz
lret
ss
test
xor
push
adc
push
test
xchg
mov
cmpsl
mov
mov
repnz
pop
jno
xor
insl
mov
inc
pop
jae
sbb
cltd
add
inc
repz
pop
shll
dec
mov
push
jge
mov
push
mov
push
sbb
loopne
insl
add
push
xchg
sbb
jecxz
xor
sbb
pop
jecxz
stos
popf
pop
dec
nop
stc
lods
jp
inc
or
push
pusha
mov
adc
pop
jno
sbb
add
jb
cmpsl
cli
adc
pusha
pushf
lcall
data16
imul
xchg
fimull
out
cmp
mov
sti
mov
or
movsb
in
lahf
sub
in
or
add
dec
movl
pop
insb
adcb
lods
cmc
push
mov
xchg
or
mov
pop
es
inc
je
mov
loope
mov
movsb
mov
and
and
pop
sbb
xor
adc
jb
repz
out
lods
jns
xchg
mov
fcoms
enter
cmpl
lds
sbb
incl
pop
push
xor
cltd
push
scas
xlat
mov
xchg
stos
xor
shl
cmp
xor
lret
mov
sbb
icebp
jbe
addr16
movsl
push
cmpsb
subb
mov
cmp
add
sub
into
inc
std
les
lea
call
insl
out
mov
jbe
pusha
dec
xchg
mov
xlat
fnsave
jg
xor
int
sbb
jg
mov
lahf
mov
int
xchg
cmp
hlt
add
inc
fcoms
sub
jno
inc
sbb
imul
scas
or
dec
ret
enter
dec
xor
inc
insl
inc
dec
jmp
cs
jnp
xchg
xchg
cmp
xor
inc
lds
xor
mov
cltd
dec
push
xchg
aam
add
and
jae
xchg
add
dec
iret
mov
shlb
mov
int
and
aas
mov
gs
das
aaa
icebp
daa
dec
outsl
jns
lods
mov
hlt
jle
fimull
mov
and
rclb
jle
iret
fcompl
pop
pop
dec
repz
adc
dec
pop
scas
xor
jge
push
std
xchg
fwait
inc
movsl
jmp
add
aad
loop
xchg
dec
out
fwait
or
lock
sbb
nop
xchg
fisttpl
movsl
addb
cmp
jne
push
jle
mov
mov
mov
inc
dec
fnstcw
mov
push
int3
lret
or
jecxz
pop
ja
call
push
xchg
push
popf
xor
adc
dec
xchg
loop
mov
mov
outsb
and
xor
fsts
fs
aad
add
clc
idivb
mov
je
pop
fistl
in
add
loopne
rorb
xchg
adc
hlt
add
adc
or
enter
sub
popa
push
pop
dec
arpl
mov
cs
mov
cmp
dec
pop
aaa
test
test
loope
inc
hlt
loope
mov
int3
adc
fcoms
dec
push
shrb
pop
xchg
adcl
outsl
mov
jp
es
push
mov
inc
clc
pop
test
nop
hlt
inc
adcl
cld
pop
pusha
mov
jnp
mov
or
pop
push
sub
es
in
push
mov
filds
jg
sarb
aas
sbb
test
and
adc
icebp
pop
shr
push
mov
push
jg
or
sar
adc
pop
push
lahf
xlat
inc
xor
push
pop
dec
jg
mov
mov
arpl
push
or
inc
xchg
ror
mov
dec
sub
ret
sub
dec
push
or
aaa
push
scas
rolb
add
scas
test
notb
jns
insl
mov
pop
cmpsl
cmp
or
in
or
mov
dec
push
jmp
arpl
test
mov
enter
mov
sbb
xchg
add
sbbb
addr16
sti
data16
mov
push
sar
loopne
inc
mov
mov
or
cld
mov
jno
out
idiv
ret
jge
push
rclb
xor
idivb
in
add
xchg
jno
shlb
and
sysenter
ret
xor
fs
movsb
xor
cwtl
cltd
inc
rcll
int3
mov
sti
mov
sub
mov
sub
pop
ret
add
ficoml
adc
jmp
popf
popf
ljmp
lret
repz
ror
inc
push
cmp
push
bound
xchg
fwait
mov
out
and
ficoml
ja
dec
incb
mov
push
xchg
cmp
idiv
lea
shlb
in
pop
adc
push
xor
push
dec
imul
stos
pop
roll
fsts
daa
sub
shrl
cwtl
shl
push
push
arpl
ficoms
push
cmp
dec
adc
cmp
stc
or
push
mov
push
ret
push
arpl
in
sbb
pushl
pop
and
roll
xor
or
subb
lret
push
aaa
jne
daa
testb
dec
test
pushf
xchg
add
fld
xor
adc
dec
push
xlat
sahf
fdivl
scas
dec
mov
imul
ret
mov
int3
sub
push
and
inc
mov
xchg
iret
lcall
int
test
cmp
push
rcrl
cmp
pop
fisttps
test
pusha
mov
aaa
lds
mov
xor
sarl
fnsave
das
ret
push
sbb
sbb
sub
xchg
aam
imulb
jne
pop
lret
mov
xor
mov
xor
mov
jno
cld
push
clc
pushf
inc
inc
int3
mov
sbb
out
lret
das
xchg
enter
shll
fstpl
xor
pop
jo
add
pop
add
int3
sbb
test
lcall
lods
xlat
test
std
lods
aad
mov
mov
or
flds
inc
iret
cmpsb
dec
dec
sub
lahf
xor
mov
inc
xor
sbb
dec
sti
iret
pop
push
in
in
inc
sbb
push
xor
mov
aam
jmp
sub
and
je
inc
daa
ficoml
pop
outsl
fbstp
in
sub
decb
push
push
cmp
sbb
xlat
mov
psubw
adc
jp
in
add
xchg
fs
jnp
scas
xor
and
movsb
xor
mov
cltd
add
inc
cmp
bound
jl
jae
jmp
dec
fwait
lock
add
lods
lret
push
jp
and
imul
sub
icebp
push
lods
sbb
ljmp
cmpsb
xor
mov
xor
pop
pop
pop
cmp
movsl
mov
ss
mov
pop
jl
jmp
dec
push
imulb
in
sub
mov
xchg
nop
ds
or
cli
jns
mov
gs
arpl
popf
sub
insl
in
sbb
sbb
test
and
mov
or
or
add
aaa
out
push
lahf
xchg
mov
icebp
mov
leave
jb
xor
ss
aam
imul
xchg
sahf
ljmp
lods
test
inc
icebp
call
iret
fnstsw
cmp
pop
push
sbb
daa
into
rcll
and
ljmp
aaa
mov
ret
pop
clc
push
fldenv
fistpl
jle
or
cmp
movsb
mov
mov
test
pop
shll
aas
and
xchg
ss
inc
adc
fisttps
mov
rcrl
add
outsb
dec
or
cmp
arpl
in
in
or
push
decl
push
mov
sbb
mov
scas
mov
mov
shrd
aas
xor
test
fisubrs
sbb
nop
repz
dec
imul
scas
mov
mov
dec
or
jg
jecxz
gs
and
cwtl
testl
and
fildl
push
inc
and
pop
stc
outsl
jge
mov
aam
das
cmp
xor
jns
imul
lea
arpl
xor
je
mul
mov
xor
xor
mov
rorl
sub
jmp
daa
lods
xchg
cs
andb
mov
mov
fsubs
fmull
enter
mov
pop
nop
test
and
push
shr
add
add
dec
xchg
addr16
push
or
jns
aas
sbb
dec
mov
adc
sub
or
jne
add
cmpl
inc
ja
shl
movsb
arpl
mov
xor
push
mov
loopne
arpl
jno
lds
sbb
cmpsl
sahf
sbb
sub
and
test
pushf
daa
je
or
stos
scas
jecxz
pusha
stos
iret
mov
loope
arpl
inc
sbb
pop
scas
sub
jb
outsb
movsl
stos
inc
cmpsl
cmp
icebp
popf
sub
mov
out
in
imulb
adc
and
inc
push
mov
mov
das
mov
rcll
push
pushl
xor
int3
stos
shl
pop
add
push
repz
jb
scas
jnp
dec
notl
int3
dec
lcall
dec
mov
mov
cmp
xchg
cmp
adc
cmp
fs
inc
jns
jp
dec
mov
cmp
or
sbb
ljmp
push
stos
inc
mov
xchg
push
jp
dec
mov
cmp
or
sbb
ljmp
push
stos
inc
mov
xchg
push
jp
dec
mov
cmp
or
sbb
ljmp
push
stos
pop
mov
mov
jle
dec
mov
sub
cmp
or
adc
std
push
cwtl
lret
and
cmc
popf
in
adc
imul
imul
leave
outsb
fnstenv
pop
stc
pop
mov
cltd
ds
out
pop
imul
sbb
leave
insb
fnstcw
outsb
stc
pop
mov
out
test
negl
imul
sbb
leave
flds
xlat
pop
loope
cli
push
out
xlat
push
add
pop
xchg
sbb
sbb
adc
pop
or
add
and
or
lds
inc
ret
mov
and
iret
push
aas
out
notl
jbe
mov
push
inc
push
mov
sarb
xchg
icebp
mov
push
cli
xlat
jb
jmp
mov
sub
adc
int3
lock
or
pop
pop
into
clc
out
or
push
popa
leave
ds
andl
shrl
sub
ds
adc
fidivrs
lahf
and
pop
add
fwait
mov
push
lods
loope
loope
push
cs
cltd
adc
mov
adc
pop
mov
dec
test
out
pop
jmp
or
cmp
jmp
ss
sub
mov
decb
sbb
gs
push
rorb
xrelease
fldl
mov
xchg
xor
inc
lock
in
push
in
jae
xchg
sub
cmp
jne
sub
cmp
lods
pop
fistpl
test
mov
push
jnp
scas
cmp
stos
or
sbb
leave
outsb
fnstcw
dec
stc
pop
mov
cltd
ds
out
pop
imul
sbb
leave
outsb
fnstcw
dec
stc
pop
mov
cltd
ds
out
cld
jns
out
pop
int
xchg
mov
nop
xor
jbe
clc
scas
adc
add
push
lcall
inc
or
data16
cli
ljmp
lods
pop
dec
popa
out
mov
xchg
les
cwtl
cs
out
fcomp
shlb
mov
test
test
icebp
or
jo
outsb
xchg
xor
and
das
das
mov
out
in
mov
jno
mov
xchg
out
inc
jge
inc
add
mov
test
repnz
mov
xor
rcll
fcomps
mov
mov
or
jno
push
outsb
mov
jno
add
xchg
xchg
shrb
sub
pop
fwait
xchg
enter
pop
inc
or
jg
insb
js
xor
fsts
cltd
jo
iret
out
pushf
inc
dec
cmpsl
into
cltd
jne
loop
ja
push
sbb
test
repnz
aas
sbb
inc
repnz
mov
push
mov
jle
out
lret
push
rcll
sbb
mov
mov
mov
jb
and
jmp
lcall
pop
push
pusha
or
add
push
inc
push
push
decb
mov
loop
pop
cmc
ds
inc
xchg
pop
pushl
sub
outsb
dec
mov
jl
mov
sbb
lahf
jne
scas
mov
sub
mov
or
imul
ret
scas
push
movsl
pop
lods
call
sahf
xlat
dec
daa
mov
xlat
loope
fs
push
cmp
scas
stos
repnz
jmp
adc
mov
inc
ss
ret
xor
jecxz
jns
js
mov
xor
cmp
xlat
push
or
scas
jmp
pushf
popf
mov
hlt
out
sbb
outsl
movq
inc
shr
dec
dec
mov
inc
aam
ret
or
filds
loop
dec
pop
lcall
jne
stos
icebp
call
inc
dec
mov
mov
sti
xor
jo
pop
push
xor
mov
pop
sahf
int
sbb
sub
ljmp
popa
add
out
cli
pop
insb
push
cmpsl
andl
outsl
scas
sbb
loop
jnp
push
test
mov
mov
es
in
in
out
mov
cmpsb
leave
lea
fsubrs
loopne
add
dec
add
adc
or
push
dec
in
movsl
stos
or
add
cltd
sub
push
sub
adcl
js
clc
add
push
push
pop
xchg
cmp
lcall
std
xchg
jns
int3
icebp
mov
call
push
inc
fidivrs
push
movsl
enter
or
sub
loopne
or
xchg
lret
mov
out
out
mov
scas
inc
test
pop
test
rcr
rcrl
sub
mov
idiv
nop
stc
ja
ret
rorl
repnz
jge
fcomp
jb
mov
sub
hlt
xchg
or
inc
inc
in
fmull
pop
test
mov
cmp
cwtl
xchg
mov
and
or
xor
lahf
imull
insl
sbb
outsb
jg
sbb
aam
pop
inc
loope
xchg
jbe
inc
jl
les
sti
and
ja
cmp
and
imul
lock
nop
fneni(8087
enter
inc
rcrl
pop
rcl
push
cmpsl
nop
loope
add
movsb
mov
dec
in
xchg
dec
cmp
outsl
cmpl
dec
mov
jge
xchg
aad
shl
js
cmpsl
setg
fcmovu
scas
stos
xor
mov
push
mov
arpl
cmp
xor
mov
repnz
mov
jmp
cmp
cld
mov
mov
sahf
test
into
or
xchg
xor
cmpsl
in
sarb
jne
int3
mov
pusha
jg
dec
aas
in
lods
jae
xor
sbb
fdivr
shlb
cmp
mov
mov
cwtl
pop
out
sbb
mov
int
fs
pop
pop
and
lret
lea
adcl
inc
les
pop
int
xchg
inc
and
jb
jge
mov
arpl
dec
popf
jge
adc
outsl
jmp
or
lcall
ret
or
pop
arpl
outsl
and
fisubrs
lea
mov
and
or
data16
hlt
push
lret
mov
fistpl
pop
pop
add
mov
sub
xchg
sbbl
pavgb
icebp
jnp
inc
push
xlat
pop
fsub
mov
in
xchg
jmp
repz
jb
in
in
shlb
int3
cld
push
jb
ret
mov
sarb
mov
cmpsl
int3
adcl
ja
out
insb
fmuls
jno
mov
adc
sub
inc
xor
and
mov
adc
lcall
inc
es
daa
mov
shl
inc
sub
jl
stos
jecxz
cmp
mov
pop
adc
movsl
mov
jge
cmpsb
jmp
ljmp
mov
scas
pusha
scas
and
iret
push
pop
pop
outsl
js
mov
pop
fistpl
out
mov
lods
pop
fidivs
aam
cld
pop
xchg
mov
fidivrs
adc
je
test
dec
cwtl
mov
push
loopne
imul
add
or
repnz
std
pop
int3
xchg
movsb
dec
adc
in
jne
pop
fldz
adc
mov
gs
and
dec
jnp
imulb
insb
mov
and
adcb
jmp
test
mov
stos
data16
cmpsl
daa
jg
lahf
hlt
push
xchg
mov
pop
jge
sti
loop
lret
xor
xchg
or
mov
mov
lods
mov
jo
incb
insl
adc
mov
repz
inc
mov
add
jne
stos
cmp
dec
ret
les
cmpsl
in
in
adc
iret
mov
cmp
jbe
imul
movsl
xor
lret
cli
xor
pop
mov
data16
sbb
jno
mov
sub
xor
fwait
lret
in
cmp
and
jle
or
pusha
rcrl
idiv
adc
jb
push
out
scas
sbb
jle
push
xor
hlt
repnz
fildll
jnp
out
scas
xchg
imulb
mov
lret
or
ss
cltd
sub
movsb
movsb
out
out
or
enter
jmp
jg
std
mov
lahf
cmpsw
sub
pop
dec
jg
jae
test
pop
not
adc
push
jp
ja
shl
out
loope
sub
mov
sbb
call
or
fistl
and
pop
cmpsl
dec
cmp
cmpsb
mov
cmp
add
inc
xchg
mov
pushl
enter
cmp
addr16
inc
fists
scas
xchg
cmpb
loop
or
popf
xchg
imul
or
mov
mov
inc
xor
sub
out
xor
mov
jp
bound
sti
in
js
jle
jmp
and
imul
mov
inc
loope
enter
stc
xchg
enter
jae
dec
into
jo
test
dec
adc
sbb
jnp
mov
or
sbb
mov
das
mov
aaa
jl
scas
jbe
imul
pusha
jns
call
mov
mov
cli
and
jns
jl
dec
outsb
cs
xchg
lret
xor
xor
lahf
jmp
stc
jl
mov
or
ja
cmp
and
jns
icebp
adc
ljmp
xlat
mov
sbb
xchg
add
movsb
inc
or
cmp
xor
rcrb
xchg
push
je
jecxz
mov
insb
lcall
mov
mov
add
sbb
repz
push
pop
cs
mov
add
dec
fstp
lods
mov
loopne
xchg
fdivr
cltd
sub
adc
xor
adc
xchg
push
insl
popf
mov
cmpsb
out
fcomps
sub
stos
inc
xchg
sub
stos
jg
add
xchg
fadd
pop
sub
dec
or
and
call
mov
call
dec
mov
cli
cmp
xchg
inc
mov
fidivrs
lea
out
insl
and
fsts
mov
adc
fdivrl
and
sbb
mov
pushf
out
repnz
jle
cmpsl
adc
jecxz
iret
adc
pop
mov
movsl
lea
push
inc
inc
negb
inc
mov
inc
and
daa
inc
cmpsb
rcl
fisttps
jmp
sub
mov
add
lea
dec
or
mov
and
mov
push
inc
dec
aas
pop
pusha
jae
add
add
pusha
sbb
rcll
add
jg
popa
ljmp
or
js
pop
decb
or
in
dec
in
pop
dec
cmp
sarb
xchg
jae
mov
les
xchg
adc
mov
dec
popf
loopne
je
and
xor
add
mov
adc
lcall
add
shlb
out
rol
or
jno
push
pop
out
sbb
jns
mov
mov
fstpl
inc
fsub
and
sub
sbb
loope
jle
mov
dec
test
fcompl
scas
push
and
enter
enter
dec
les
adc
hlt
adc
fildll
sub
subb
xchg
xchg
rolb
push
mov
mov
jmp
into
jl
movsb
cmp
fisttpl
xor
shll
add
mov
pop
cmc
cwtl
fcmovb
cmp
test
inc
push
push
nop
stos
mov
push
dec
imul
jnp
push
jl
xor
mov
clc
fcomps
jecxz
nop
dec
shll
fisubrs
inc
cmpsl
in
je
pop
aam
jnp
add
mov
pop
mov
mov
stos
repz
andl
imulb
mov
insl
jae
mov
adc
loop
scas
mov
mov
stos
add
cli
in
adc
cmp
sbbl
in
aaa
lods
push
fsubrs
int
cmp
jbe
dec
fidivrl
push
into
or
pop
push
mov
js
in
lret
fsub
xchg
mov
hlt
add
js
pop
mov
data16
ljmp
pusha
aaa
out
adc
xor
sahf
cltd
jae
outsb
mov
test
sub
fiadds
adc
xchg
lahf
stos
iret
fs
mov
jmp
jg
lea
cld
mov
enter
dec
addr16
cs
xor
push
and
repz
aas
adc
imul
pop
pop
xchg
popf
in
cmp
repz
ret
stos
pop
hlt
push
push
mov
shlb
xchg
pushf
pop
and
add
xchg
fldcw
jp
fwait
and
push
pop
shlb
subb
sub
mov
mov
or
jnp
xor
fnstcw
imul
adc
rclb
fs
pop
xor
pop
mov
imul
out
cmp
pop
cmpsl
add
pop
test
scas
fdivrp
xchg
or
movsl
pop
js
sub
mov
ret
into
mov
or
int
test
sub
lods
adc
push
pop
insb
inc
push
mov
lock
int3
mov
push
inc
or
sub
xor
push
jbe
test
ret
mov
fldcw
dec
negb
xor
js
repnz
imul
shl
mov
dec
mov
pop
xor
lods
outsl
es
loope
sahf
xor
jno
sbb
fsubl
mov
ficompl
add
and
adc
jge
xchg
inc
call
mov
xor
cli
xor
jne
or
scas
mov
mov
dec
cmp
rcll
adc
push
or
adc
sub
rcrl
mov
mov
cmp
popa
negb
pop
sub
sub
mov
inc
jp
neg
mov
sub
and
cmpl
das
xchg
jnp
inc
sbb
sub
int3
mov
mov
jg
dec
notb
jno
enter
jae
push
les
jle
jo
addr16
inc
fistps
std
jne
outsl
jle,pn
jne
mov
cmp
mov
and
fisubrl
xchg
test
fildl
imul
iret
add
cmp
fisttpl
aaa
mov
adcb
adc
pop
std
aas
pop
jb
pop
out
or
leave
cmp
shlb
add
inc
mov
nop
or
and
mov
mov
ljmp
into
or
pop
pop
jmp
cld
dec
pop
aas
dec
decl
mov
lahf
aad
mov
cmp
cld
mov
shlb
mov
aaa
and
and
mov
add
pop
push
adc
repnz
pop
sub
mov
lea
or
addr16
push
bound
decb
adc
fsubrs
hlt
and
pop
mov
rorb
mov
repnz
push
sarl
xchg
pop
or
cmpl
out
pushf
mov
mov
popa
pop
fsubs
fsubl
dec
add
xchg
xchg
jbe
in
xchg
addr16
cmp
push
add
sti
pop
mov
lods
pop
xchg
jmp
sbb
pop
mov
jo
shlb
push
mov
xor
xor
adc
cmp
test
int3
pop
rolb
mov
scas
cmp
rcr
test
or
repnz
imul
popa
lea
add
adc
test
jge
or
movsb
popf
mov
cmp
daa
inc
jg
dec
jg
mov
fwait
in
into
cmp
popf
fdivl
inc
rcll
test
cld
jecxz
imul
imul
pop
add
sbb
cmc
or
add
lret
or
repnz
jno
stc
pop
add
mov
push
sbb
imul
sti
pop
or
mov
call
rcl
mov
push
xor
out
dec
cs
fsubs
cld
mov
lea
nop
mov
sub
cli
pop
and
sub
in
ficoml
add
and
fcmovbe
mov
lds
sub
jmp
daa
or
fldcw
jge
mov
push
add
push
sahf
dec
aaa
xchg
das
lret
xchg
add
sub
dec
pop
jmp
push
inc
rcrl
xchg
adc
inc
or
scas
stos
call
cmp
sub
sti
test
les
aas
mov
mov
insb
pop
jl
stos
push
dec
xchg
jl
cltd
mov
in
cmp
push
lea
sub
cli
pop
jae
ss
adc
push
orb
pop
cld
test
sbb
jp
and
out
sub
ds
add
negb
movsb
dec
loope
or
mov
push
daa
mov
decl
inc
pop
stos
retw
xor
stc
sub
mov
out
mov
mov
enter
push
iret
imull
or
jecxz
inc
fstps
and
aam
xchg
fstpt
sub
mov
fnsave
les
xor
mov
add
push
sub
pop
jbe
mov
aas
xchg
xorb
rorl
out
adc
jb
push
cmp
or
mov
xchg
xorl
sti
inc
iret
or
sub
adc
push
push
sarb
mov
cltd
and
repnz
pop
repz
call
mov
jmp
lods
stos
jns
or
out
inc
jns
mov
mov
or
inc
adc
and
xor
and
cltd
jmp
push
push
or
sub
add
cmpsl
push
adc
jnp
es
or
mull
and
ret
fadd
stos
push
ficoml
js
sbb
add
lods
cli
lahf
lahf
mov
popa
and
mov
cmpsl
imul
pop
inc
jns
add
cmp
mov
into
dec
leave
mov
dec
sbb
fnstenv
xor
mov
enter
mov
je
mov
xchg
cmp
out
ds
imul
les
mov
decb
das
ret
scas
aad
inc
in
rclb
adc
or
pop
push
dec
sub
fcompl
iret
incl
jmp
cltd
addr16
mov
sbb
inc
lods
insb
and
push
movsb
in
lret
xchg
mov
mov
cltd
divl
aam
fimuls
xchg
popa
pop
test
call
mov
push
mov
sbb
or
mov
stc
adc
mov
lcall
pop
dec
push
xor
js
mov
xchg
inc
sti
or
loop
stc
sbb
out
add
int3
jmp
inc
lcall
xor
shl
push
mov
rcll
jb
cltd
call
dec
cwtl
test
jbe
or
loop
or
inc
xor
outsl
dec
pop
aaa
repnz
mov
insl
int
dec
es
and
sbb
bnd
and
fstpl
xchg
negl
or
jmp
sbb
xchg
std
pop
jbe
outsl
or
enter
ljmp
and
add
scas
mov
movsb
push
fldl
cmpl
xorb
test
movsb
jg
cltd
outsl
jmp
fsub
loopne
repz
ds
inc
lcall
adcl
jno
pop
in
jnp
test
jl
add
cs
sub
ret
inc
andb
jg
xchg
lds
imul
push
jp
hlt
jl
sbb
sbb
mov
mov
push
inc
mov
pop
popa
into
push
or
dec
xor
add
jecxz
hlt
sub
cmpsl
mov
add
xor
sarl
out
cmp
jbe
sub
ret
xor
add
sbb
sub
or
lcall
lods
les
aaa
scas
push
sahf
sub
push
xor
test
and
xchg
xchg
int
add
test
xlat
and
mov
mov
bound
mov
and
cmpsb
out
mov
pop
je
lods
icebp
xchg
or
sti
lds
inc
ljmp
cs
sub
in
cmpsl
je
xchg
sub
stos
sahf
lds
push
jecxz
add
test
xchg
cs
or
mov
rcrb
enter
loop
sub
pop
sahf
adc
inc
sub
mov
pop
movsb
ja
dec
imul
call
imul
outsl
dec
dec
fildl
aad
in
push
in
loope
fdivrs
push
test
in
rcl
push
clc
push
push
sub
test
and
cld
lea
xor
dec
ljmp
std
outsb
sub
pop
sbb
dec
mov
sbb
dec
dec
mov
sbb
push
movsb
jae
and
fldl
push
or
clc
fadds
adc
and
mov
mov
dec
fwait
cmp
mov
adc
mov
push
sbb
mov
mov
add
ret
push
mov
dec
out
mov
cld
add
cmp
sub
inc
mov
jae
stc
repnz
daa
adc
push
jp
push
rcrl
fisubl
call
add
add
aad
cmp
fsub
repz
jo
or
add
popa
les
int3
mov
cwtl
lret
jge
or
rol
push
or
inc
jbe
incl
nop
push
inc
mov
pop
cmp
xor
or
incl
fstp
fildl
sub
rcr
lods
ja
pop
dec
xor
in
mov
jmp
icebp
movsl
xor
dec
mov
jae
std
push
movsb
and
mov
push
dec
adc
jne
pop
loope
sub
inc
leave
cwtl
cmp
hlt
js
xchg
and
das
inc
mov
jge
fimull
mov
insb
bound
mov
inc
jbe
inc
pop
insl
in
bound
es
in
divb
dec
test
xorl
xchg
les
xchg
aaa
mov
cmove
popa
xchg
out
mov
push
lock
shl
imul
f2xm1
xchg
scas
stos
lret
pop
push
in
pop
es
shrl
out
dec
adc
dec
mov
mov
pop
jmp
inc
xor
mov
stos
mov
outsb
mov
enter
mov
adc
mov
jbe
mov
out
jmp
inc
mov
and
idiv
fwait
pushf
jmp
sti
insb
dec
mov
pop
das
inc
loopne
cmp
idiv
push
add
shl
sarb
xor
sub
pop
lods
jge
mov
jae
bswap
insl
xlat
imul
aam
adc
cs
fldcw
cwtl
and
mov
xor
fmuls
scas
daa
dec
xor
repz
jno
popf
imul
jns
jp
jbe
out
push
int3
nop
mov
repz
lods
jge
jns
or
cmp
jmp
cs
ds
out
pop
imul
sbb
leave
outsb
fnstcw
dec
stc
pop
mov
cltd
ds
out
pop
imul
sbb
leave
outsb
fnstcw
dec
stc
pop
mov
cltd
ds
out
pop
imul
sbb
leave
outsb
inc
dec
stc
sub
cmpsb
adc
push
icebp
inc
loope
ret
xchg
xchg
repnz
test
test
fdivl
push
bound
jb
add
inc
and
cmpsb
ret
xchg
xchg
repnz
notb
es
ss
push
bound
jb
outsb
jbe
inc
and
cmpsb
ret
xchg
xchg
repnz
notb
es
adc
adc
sbb
dec
cmp
mov
fwait
xchg
jge
int
cmp
stc
daa
stos
xlat
or
inc
xor
pop
test
cmp
ja
xor
cmp
mov
stc
ja
push
cltd
add
adc
ret
orl
mov
es
filds
cmp
and
pop
or
and
mov
in
lret
shll
xchg
inc
enter
mov
jl
cltd
add
in
lds
arpl
pop
mov
andb
jg
or
sbb
xchg
xchg
into
mov
imul
mov
push
and
pop
inc
dec
pop
inc
repnz
pop
dec
stos
divl
movb
lcall
add
daa
push
mov
xchg
xchg
repnz
notb
es
ss
push
bound
jb
add
inc
and
out
ret
loop
repnz
test
mov
cmp
push
pop
outsb
push
addr16
jbe
and
cmpsl
shll
out
mov
mov
or
add
push
pop
insb
sbb
sub
ret
xchg
xchg
stos
lods
notb
es
ss
push
bound
jb
add
inc
and
cmpsb
ret
xchg
xchg
repnz
notb
es
ss
push
bound
jb
add
inc
and
cmpsb
ret
sbb
mov
jge
sub
pop
leave
add
faddl
nop
xchg
cwtl
pop
mov
push
jo
fidivl
push
dec
push
popf
jp
out
jmp
outsb
roll
sub
in
mov
stos
xlat
cmp
jp
test
mov
ret
stc
push
notb
xchg
std
fsubrs
ja
mov
dec
ficompl
mov
in
popf
push
sub
addb
out
nop
lods
lock
test
shlw
enter
sbb
cmovg
push
shlb
jle
mov
sub
or
roll
pop
xchg
mov
add
loopne
in
xchg
outsl
and
add
pop
sbb
push
scas
adc
dec
jne
arpl
pop
lahf
or
dec
inc
outsb
enter
addr16
aaa
fxch
mov
ja
jg
stos
cmp
sarb
dec
pop
idivb
jg
push
adc
aaa
mov
cli
push
xchg
pop
stc
out
data16
je
add
push
fmuls
or
mov
pop
bound
imul
cltd
sbb
repz
nop
and
and
push
cmp
sbb
loopne
faddl
xor
push
add
sbb
xchg
shll
insb
stos
in
inc
and
aad
cmpsl
jb
mov
push
sub
frstor
sub
lods
mov
test
and
ja
mov
std
or
jl
test
imul
inc
push
add
or
leave
fsub
bound
mov
repnz
loop
mov
insb
sub
adc
jge
gs
lods
push
jg
imul
cmpb
aad
xor
sbb
add
repnz
or
inc
je
out
pop
xchg
fstpt
pop
sub
loope
lods
adc
in
cld
call
push
mov
out
lret
filds
and
mov
clc
aam
nop
int3
sbb
ljmp
mov
add
push
leave
dec
sbb
jne
in
iret
lea
and
daa
test
outsb
and
jne
fisttps
mov
adc
stos
arpl
nop
cmp
sbb
xor
insb
push
sbb
mov
lods
inc
dec
sahf
push
fisubrs
mov
xchg
cwtl
push
add
sbb
je
nop
out
xchg
notb
mov
mov
ljmp
xor
xlat
notb
int3
sbb
lret
test
movsl
fists
cmpsl
inc
inc
ret
sub
pop
push
daa
or
mov
lahf
inc
push
xchg
outsb
or
jecxz
leave
stos
aaa
cmp
xor
pop
xor
sbb
sub
lds
mov
add
sbb
push
aad
sbb
test
or
lcall
cmp
repnz
mov
flds
in
adc
pusha
sub
out
test
jl
add
sti
sbb
jmp
adc
jl
pop
push
inc
mov
xor
loop
adc
dec
iret
lret
pop
out
jg
mov
fsubrl
cltd
repnz
jae
xchg
push
fcmovnu
into
mov
sub
lcallw
adc
push
mov
subb
dec
out
push
xchg
xchg
pop
cli
sub
rcrb
adc
hlt
outsl
leave
inc
sub
sub
stc
xor
push
jle
je
xchg
fsubr
in
mov
rorb
jae
jp
jo
aas
imul
mov
enter
les
pop
xchg
movl
or
inc
and
adc
nop
cwtl
lds
and
mov
mov
adc
divl
push
into
pushf
fistl
xchg
lahf
lahf
js
dec
fwait
imul
jns
dec
sbb
data16
ja
adc
fsubrs
fwait
dec
mov
xor
or
sub
mov
lret
jns
repnz
and
dec
mov
mov
je
jno
stos
data16
add
push
mov
mov
push
add
push
cmpsb
jnp
push
sub
jae
mov
call
pop
pop
das
aas
in
insb
test
scas
xor
xor
mov
mov
pushw
lea
lods
scas
mov
leave
push
mov
pop
aaa
lret
xchg
lods
adc
cmp
sub
add
mov
call
xchg
xchg
ret
jbe
outsb
xor
aam
push
pop
mov
mov
push
or
xor
std
push
mov
cmpsb
and
js
aad
mov
sbb
shrl
jmp
xchg
inc
jecxz
cmp
jp
sbb
cwtl
ret
test
in
xchg
mov
or
mov
pop
xchg
es
xor
in
cmp
xchg
insl
test
data16
push
push
pop
cmp
movsl
mov
movsl
cmp
adc
ficoml
int
pop
sub
insl
adc
cltd
sbb
sub
xchg
rep
stc
or
add
add
jl,pn
bound
call
xchg
bound
scas
dec
movsl
push
out
adc
jno
outsl
xor
jne
ficompl
stc
fdivs
aad
test
inc
fcompl
cmp
testb
mov
add
mov
int3
bound
repnz
cld
lds
out
mov
push
jb
add
adc
sbb
insb
inc
pop
xchg
orl
inc
push
jne
jmp
mov
loope
inc
fbstp
daa
sbb
mov
jge
std
pop
xor
fdivrl
lea
sbbl
sbb
fs
int3
mov
and
dec
jg
push
xor
clc
mov
loope
fldt
lcall
mov
outsl
imul
jmp
hlt
and
cmp
fnstcw
mov
sub
popf
lods
sub
xor
and
or
adc
jae
dec
ds
or
mov
jns
test
inc
inc
fwait
loope
dec
pop
or
roll
jle
xchg
mov
push
ret
clc
fisubrl
fs
pop
push
stos
data16
pop
xchg
jecxz
int
stos
rorb
push
adc
and
aad
mull
cmp
testl
and
and
mov
jo
adc
pushf
test
and
sbbb
xchg
icebp
test
fistpll
mov
insl
inc
cmp
cmp
adc
pushf
jmp
iret
je
daa
push
es
sti
sbb
in
or
sub
jl
gs
out
test
mov
and
xchg
mov
xchg
les
inc
lret
nop
test
ljmp
push
mov
rcl
sub
mov
xchg
sub
sbb
aas
jg
jmp
pop
lods
imul
mov
rdtsc
sbb
xchg
sub
dec
sbb
lahf
fst
dec
mov
and
add
xor
shl
fwait
insb
stos
mov
inc
ljmp
add
push
cmp
xor
add
sar
mov
adc
in
ret
sbb
or
jp
ds
lahf
mov
dec
sub
mov
add
in
cmp
sbb
or
add
mov
scas
pop
test
aas
sub
mov
mov
loopne
jo
outsb
test
stc
add
jno
ljmp
ret
cltd
ss
push
loopne
jmp
inc
push
leave
les
fs
arpl
lock
pop
sbb
push
lret
add
or
stos
mov
sti
movsl
in
ds
pslld
rorb
cmp
insb
push
push
cmp
insl
testl
sub
sub
mov
sub
mov
mov
arpl
cli
mov
mov
xor
leave
ret
mov
cmpsb
sti
cwtl
notl
lcall
xchg
arpl
aas
cmp
cs
inc
das
movsl
jl
and
scas
call
dec
sbb
xchg
cld
jb
scas
in
pop
xchg
and
pop
in
dec
jno
sbb
jno
pop
sbb
xchg
add
adc
xchg
ja
in
push
jmp
pop
aam
dec
fs
cld
nop
lahf
rclb
addr16
inc
mov
mov
jp
sub
bound
mov
in
sti
cli
cltd
jge
frstor
mov
inc
or
daa
ret
mov
mov
cmp
fs
mov
jmp
sbbb
jae
in
push
fidivrl
and
mov
dec
rcll
ret
xor
push
and
test
rolb
hlt
addr16
xor
cmc
mov
dec
cmp
repnz
in
jae
dec
mov
adc
mov
sahf
call
or
stos
or
test
push
mov
lock
mov
dec
jbe
lock
test
jg
jl
ret
xchg
jle
lods
adc
sub
mov
cbtw
push
mov
adc
xor
or
add
popf
mov
std
hlt
push
jge
jl
mov
shll
cli
leave
xor
je
shrl
mov
jmp
lock
or
inc
outsl
mov
sub
sbb
and
sub
jns
mov
test
shrb
or
cmpb
lods
fidivrl
inc
push
mov
mov
fs
fwait
and
test
dec
add
fsubl
cmp
mov
mov
xchg
mov
jno
push
ficoms
js
jmp
idivl
dec
xor
xchg
in
push
fildll
loope
loop
shlb
inc
adc
xchg
shrb
mov
shlb
add
es
mov
pop
xchg
daa
sub
xor
mov
mov
sub
xchg
lcall
xchg
inc
and
aaa
cmp
sbb
or
and
or
cmp
pusha
cmpsl
das
cltd
cwtl
mov
push
and
lahf
aad
int
pop
pop
xor
mov
cs
jl
jne
dec
shrb
ljmp
pop
mov
or
pop
mov
fistpl
ja
test
fwait
lods
test
add
inc
aas
fistps
sahf
xor
aam
hlt
inc
shll
cmp
lret
mov
push
or
enter
je
xor
sbb
mov
jl
xchg
cwtl
add
cmp
ret
scas
into
insl
test
xchg
in
outsb
pop
enter
jne
faddl
cwtl
gs
in
xor
or
sub
lods
insl
pop
lods
daa
jo
ljmp
inc
pop
pop
ret
aaa
dec
sbb
jne
mov
add
ss
adc
pop
pop
ja
iret
je
mov
push
addr16
scas
in
andb
lret
add
push
add
dec
fsts
and
clc
loop
test
adc
mov
lret
dec
pop
testl
sub
xchg
lods
test
jle
daa
stc
mov
mov
daa
pop
int
nop
and
jmp
leave
fst
cmc
or
push
icebp
mov
pushf
stos
scas
xchg
mov
std
mov
insl
xchg
lahf
push
ds
dec
xchg
arpl
add
scas
cmp
call
jnp
jae
jae
adc
xor
push
mov
push
jecxz
gs
mov
mov
inc
iret
mov
xchg
cmpsl
dec
mov
mov
pop
or
out
mov
pop
out
pop
xor
xchg
add
fst
add
cmp
jnp
shl
lods
scas
or
imul
scas
or
lahf
adc
dec
xor
nop
cmp
dec
cmpsl
loope
mov
xchg
inc
mov
into
out
cmp
pop
push
lret
adc
das
pop
in
dec
lcall
xchg
out
and
stc
je
sti
sbb
mov
xchg
mov
push
cld
jb
sbb
push
sbb
xchg
lcall
pop
imul
clc
and
push
mov
mov
loope
cmc
mov
sbb
cwtl
fisttps
movsl
adc
xchg
mov
cmpsb
jo
xchg
inc
adc
mov
jp
and
or
jnp
popa
lcall
pop
into
jns
pop
es
aas
push
xor
jl
xchg
cmp
lret
push
push
adc
push
std
out
jne
push
mov
aaa
mov
icebp
jbe
push
dec
xchg
outsl
call
inc
in
inc
jmp
jle
aaa
xor
addl
jo
sbb
adc
hlt
mov
mov
add
xchg
movsb
xor
push
insb
xchg
pop
push
sub
fldt
shlb
les
outsb
leave
xor
dec
mov
push
inc
add
mov
enter
cld
data16
ljmp
xchg
push
sub
jbe
jmp
add
mov
dec
pop
cmp
jb
data16
int3
inc
push
xor
fucomip
pushf
mov
inc
jne
stos
dec
sbb
inc
or
fmulp
loope
mov
dec
or
insb
movsb
repz
addb
mov
arpl
push
rorl
dec
notl
xchg
lods
in
outsb
xchg
sub
pop
add
mov
iret
jns
sar
dec
sahf
in
movsb
inc
aad
sub
push
xor
icebp
bound
mov
mov
dec
lods
xor
inc
insl
daa
out
mov
stos
imul
xor
cld
sub
inc
sti
ljmp
dec
popf
jmp
lods
sub
mov
add
adc
mov
dec
fimuls
in
cmp
mov
aaa
daa
in
lods
cmpsb
cmp
and
dec
pop
into
pop
shll
loopne
dec
add
aad
scas
or
xor
aam
mov
cmp
sub
sbb
imul
ret
ret
push
jns
fisttpll
pop
push
jle
dec
int3
sti
fidivl
or
aaa
adc
jle
aam
lds
aad
push
les
ljmp
adc
push
lahf
mov
dec
pop
shlb
jmp
push
lods
mov
cmp
push
aam
adc
ret
xchg
aaa
cmpsl
lock
xor
pop
scas
scas
mov
inc
shl
mov
idiv
mov
mov
cmp
push
mov
xor
or
inc
adc
sbb
jl
mov
add
imul
mov
xchg
adc
or
jnp
push
jmp
mov
mov
mov
mov
mov
add
mov
sahf
xor
sbb
mov
jge
lock
jle
lret
dec
test
pop
imul
pushf
psrld
jne
bound
adc
cmp
sti
pop
push
sub
lea
ja
xor
jo
rorl
inc
xchg
fsubrs
push
xor
cmp
xor
lods
lock
aad
mov
ret
into
mov
mov
or
insl
out
aad
inc
lret
dec
sub
lock
aam
push
push
jns
hlt
int
sti
call
imul
ficompl
pusha
dec
dec
push
and
in
in
aad
pusha
or
insb
pop
xor
test
mov
pop
iret
jne
add
or
push
pop
clc
push
mov
mov
sub
sub
testb
xchg
lea
lcall
jb
lcall
dec
mov
push
jmp
call
stos
std
popf
fpatan
divl
inc
fdivrs
mov
sbb
lret
mov
outsl
fdivl
popa
iret
data16
or
pusha
add
or
push
test
and
and
pushf
dec
bswap
aas
jbe
push
mov
sbb
sbb
dec
lahf
shll
int3
in
insb
mov
mov
sar
fisubrl
out
add
cmp
popa
adc
lret
movsb
fistl
icebp
jb
call
inc
outsl
or
mov
push
mov
addr16
ljmp
lock
jne
sbb
lods
or
iret
cmp
out
sbb
and
mov
sbb
mov
mov
sbb
add
dec
adc
cltd
lock
mov
jbe
movsb
cmpsl
sub
nop
ss
add
sbb
mov
add
popf
in
xchg
xor
outsl
inc
ljmp
roll
repz
out
push
movsl
shlb
shlb
mov
jne
adc
push
sub
pushf
std
in
movsb
fildl
mov
sahf
adc
stos
out
or
mov
jb
sbb
lock
mov
pusha
and
sub
mov
mov
mov
std
ret
aad
fwait
std
andb
push
dec
or
loope
jecxz
ret
aad
mov
mov
lret
mov
repz
push
adc
pop
xor
aam
neg
stos
ja
fwait
add
pop
cmp
mov
enter
cmp
inc
sub
xchg
cmp
dec
inc
xor
das
cmp
xchg
daa
add
stc
push
outsb
jle
or
std
push
sub
lea
jb
adc
add
aas
pushf
and
adc
lahf
mov
push
mull
ljmp
xor
pushf
jle
push
test
jge
mov
jbe
ja
push
xchg
adc
dec
iret
inc
fadd
out
ljmp
out
sub
xchg
adc
dec
push
mov
push
adc
mov
pop
inc
pop
xlat
aam
sub
adc
fnstsw
sbb
dec
adc
aam
cmp
push
daa
out
data16
mov
jp
scas
push
pop
mov
adc
xor
negl
movsl
mov
ret
clc
pop
aas
cmp
test
test
fcomps
sub
sbb
jle
notb
jecxz
not
movsl
jns
ret
sbb
mov
enter
les
das
sbbb
std
jo
clc
adc
in
in
dec
xchg
shlb
int
testl
fistps
push
jnp
test
bnd
clc
ljmp
test
jno
inc
and
cmpsb
outsl
add
bound
pop
out
pop
sti
adc
pop
xchg
roll
ja
dec
enter
and
es
sbb
and
addr16
push
xchg
mov
add
push
and
add
movsl
push
rorl
push
and
ret
add
out
lods
xorl
ret
jmp
imul
outsl
fcomps
mov
aas
push
aam
xor
jb
scas
outsb
in
call
aam
dec
and
rol
inc
lods
dec
outsb
repnz
out
push
out
inc
mov
fiadds
sti
cmc
popf
enter
ret
jmp
sbb
lods
out
xor
or
rolb
scas
outsb
jp
jb
fmul
je
jl
mov
icebp
xor
cli
dec
sub
je
xchg
imul
cmp
cmpsb
inc
lret
mov
sub
aaa
fldl
cmp
mov
shrl
pop
dec
fistl
mov
xchg
xchg
fisttpll
jp
pop
xor
stos
pusha
xchg
push
lcall
fadd
scas
sbb
test
or
pop
sbb
scas
les
pop
or
mov
scas
push
jmp
jge
int
and
sarb
mov
mov
stos
insb
jnp
es
pop
and
mov
mov
inc
ds
adc
mov
insb
add
mov
incl
lods
outsl
ljmp
and
mov
ljmp
sbb
daa
imul
add
inc
in
xor
int
aas
jmp
movsl
push
int
inc
fdivl
outsl
popf
lret
cltd
push
sbb
dec
insl
jno
iret
push
les
and
dec
push
test
mov
outsl
ljmp
mov
jle
sarl
movsl
sbb
push
sbbl
aas
add
mov
fdivl
inc
cmp
xor
test
cld
dec
inc
pavgb
sbb
in
cmp
push
or
imul
and
sbb
xchg
xchg
push
mov
lret
push
lea
movsb
and
insl
fwait
lret
and
arpl
popf
sbb
movsb
repnz
dec
dec
pop
jl
pop
lcall
aad
in
xchg
and
sub
pop
push
in
out
inc
cmp
test
pop
push
or
inc
xor
pop
roll
xchg
ret
mov
push
adc
and
das
stos
push
out
sbb
mov
push
mov
das
shll
dec
xchg
dec
push
pop
outsb
jmp
jae
inc
push
xor
inc
push
pop
in
ds
in
ret
iret
icebp
xchg
jle
out
cmp
clc
ss
jae
les
jg
adc
insl
mov
aad
mov
loop
dec
mov
mov
push
pop
xchg
push
pop
out
push
jl
ss
test
rolb
cmp
mov
cmp
mov
xchg
jno
out
pop
fwait
subb
xchg
popf
popa
imul
cmp
mov
ds
cwtl
xor
pop
adc
lret
pushl
inc
aad
inc
loop
data16
ror
mov
stos
cmp
loope
icebp
cmp
and
push
lret
in
repz
les
rolb
xor
mov
ss
push
bound
jb
add
inc
and
cmpsb
ret
xchg
xchg
repnz
notb
es
ss
push
bound
jb
add
inc
and
cmpsb
ret
push
loop
repnz
mov
ss
push
bound
jb
add
inc
and
cmpsb
ret
xchg
xchg
repnz
notb
es
ss
lods
bound
add
frstor
int
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
xor
and
adc
add
or
jae
inc
mov
xchg
mov
into
ret
xor
and
adc
add
outsb
arpl
dec
inc
mov
xchg
mov
ficoms
and
adc
add
outsb
arpl
dec
inc
mov
imul
cmp
popf
mov
xor
push
jl
push
jno
cmp
jbe
test
jae
gs
shlb
mov
jle
outsb
pushf
mov
pop
and
jno
test
sbbl
je
inc
outsl
sub
mov
scas
add
pop
mov
jle
repnz
into
dec
ds
push
jb
arpl
fmull
dec
push
jno
scas
cltd
out
sbb
sub
dec
insl
shrl
cld
xorl
sarb
add
pop
and
dec
add
icebp
cli
push
push
in
cli
es
mov
outsb
and
sbb
mov
ret
and
adc
add
outsb
arpl
dec
inc
mov
xchg
mov
into
stos
pop
pop
dec
and
dec
push
pop
add
sbb
lret
xlat
in
sti
lret
lds
scas
nop
mov
xor
jge
dec
jno
cmp
inc
int3
lret
leave
jecxz
mov
or
movsb
xchg
pop
jp
jo
jnp
cmp
arpl
dec
inc
mov
xchg
mov
into
ret
xor
and
adc
add
outsb
arpl
dec
inc
mov
xchg
mov
into
ret
xor
andl
fisttps
sub
jge
mov
add
out
movsl
jg
data16
leave
jns
pop
or
mov
mov
xor
lods
pop
repz
dec
adcb
push
xor
push
jg
sub
cmp
jae
pop
hlt
jo
xor
xchg
or
cmpb
xchg
push
rcrl
jno
inc
mov
sti
mov
icebp
lahf
scas
dec
mov
andl
sub
pop
jge
int
or
pusha
sbb
sti
fprem
test
shrl
add
cmp
int
int3
pop
ja
sub
xor
lcall
jmp
mov
out
addr16
scas
inc
cltd
jle
lods
inc
xor
subb
insl
xchg
mov
and
test
insl
mov
fmulp
shll
addr16
call
jg
push
shlb
sbb
and
and
xor
inc
outsl
insl
pop
ljmp
mov
daa
mov
adc
mov
dec
xchg
xor
mov
arpl
pop
sahf
mov
pop
add
mov
dec
or
loope
cmp
out
and
fidivrl
in
out
mov
push
test
dec
mov
movb
push
test
jl
out
xlat
aad
or
pusha
cmpsl
lret
loop
es
outsl
add
sbb
cli
andb
data16
cld
stc
xor
fistl
cmp
mov
cmc
outsb
pushf
dec
arpl
add
nop
pop
sbb
dec
dec
repz
mov
cwtl
pop
mov
mov
sub
aas
out
sti
rcrb
lahf
sbb
sub
jne
cmpsb
mov
scas
pxor
adc
rcll
je
jge
jbe
xchg
in
stos
xchg
push
loope
sub
push
movsb
in
jecxz
push
arpl
dec
jnp
sub
arpl
dec
daa
sar
int3
fisubs
iret
cmp
jne
mov
repz
out
dec
jns
test
lods
xorb
int3
dec
loopne
cmp
popf
pop
cli
adc
sbb
mov
aad
sub
sub
loopne
mov
add
pushf
add
mov
cmp
rol
jmp
popf
orb
in
jno
aaa
dec
mov
aas
pop
push
ljmp
insb
mov
push
cmp
xchg
insl
or
mov
push
jae
jne
or
adc
inc
sbbl
cmpsl
psubd
out
jo
mov
insl
sbb
in
adc
and
shr
in
jle
jo
cltd
ds
or
inc
ret
out
ss
mov
das
stos
test
inc
out
popf
mov
mov
mov
mov
adc
clc
mov
sahf
xchg
data16
lods
inc
mov
dec
jb
inc
and
into
and
movsb
pusha
mov
sti
dec
or
in
addr16
fldenv
dec
mov
pop
rorb
inc
in
outsb
push
jne
inc
jecxz
cmp
cmp
push
and
imul
add
jb
imulb
jne
inc
mov
fistl
push
jmp
push
pusha
pop
cmp
jo
stc
dec
inc
test
jecxz
das
mov
imul
hlt
jne
mov
fsubp
rorl
enter
dec
stos
add
fstpt
addr16
lfs
call
in
insl
pop
cmc
ja
and
negl
cmpsb
leave
out
movsb
push
jp
inc
pop
mov
push
mov
dec
sti
mov
pop
cmp
enter
and
jnp
leave
push
mov
push
adc
out
adc
pop
mov
pop
frstor
movsb
stos
or
call
cmpsb
ss
jg
add
test
das
mov
outsb
cmp
popf
lods
cmc
repnz
out
sbb
jno
es
and
not
push
roll
jo
fistl
mov
cli
mov
add
es
das
mov
mov
out
div
jnp
cltd
shrb
push
xchg
cltd
les
sbb
test
push
or
imul
inc
daa
sub
je
inc
out
sbb
fnstsw
push
insl
shll
jl
aam
sub
xor
lcall
or
dec
sbb
xchg
cmc
inc
ja
roll
out
iret
push
xor
loope
fs
sbb
les
paddb
movl
inc
xchg
pop
add
lea
push
xchg
or
pusha
lea
or
push
xlat
out
les
test
mov
shl
in
jae
cmp
outsb
ficoml
lock
or
mov
lea
shrb
aam
push
loop
lods
inc
and
and
or
test
movsl
adc
cmp
lahf
mov
stos
std
in
lock
jae
sub
sub
adc
mov
fucomp
pop
inc
sbb
cmpsb
bound
or
fnsetpm(287
cld
pop
ret
mov
jg
insl
sbb
cwtl
pop
inc
pusha
test
rolb
imul
push
ret
cmp
neg
jnp
adc
nop
in
mov
dec
in
mov
ficoml
mov
repnz
add
pushf
idiv
mov
cmp
jbe
add
mov
mov
sbb
or
dec
add
and
idivb
push
xor
adcb
adc
in
fwait
mov
or
js
shll
aas
ja
loope
mul
jecxz
and
dec
cs
jg
incb
fidivs
notl
out
fucomi
das
movsb
ret
mov
xor
stos
fwait
gs
sub
adc
mov
xchg
add
jo
in
mov
bnd
lods
cld
call
rol
loopne
push
shrl
scas
icebp
iret
sbb
inc
test
push
jmp
push
scas
sbb
and
aad
or
mov
push
jecxz
ljmp
jnp
enter
fnsave
test
pop
fnstenv
inc
lock
fs
shll
add
loop
sub
frstor
jmp
sar
mov
js
scas
pusha
dec
sbb
iret
paddusb
out
ja
mov
in
rol
les
sti
push
dec
add
js
inc
pop
out
mov
sbb
mov
xor
icebp
mov
popa
fs
movsl
cmp
shll
pop
fistpll
xchg
mov
ret
loopne
cmp
xor
sbb
or
popf
cmp
push
xchg
stos
xlat
outsl
cld
and
sbb
enter
push
push
push
pop
sub
mov
sbb
mov
push
inc
and
or
mov
jno
dec
aaa
shll
mov
popf
stos
std
mov
jns
repnz
movsl
insl
sub
push
hlt
into
mov
hlt
lret
push
imul
scas
add
cli
lods
lods
iret
push
mov
std
les
cli
sub
pushf
push
loope
das
jns
mov
pusha
mov
add
or
out
inc
js
xchg
cmp
inc
xor
and
jecxz
and
sbb
stos
sbb
and
mov
push
inc
in
and
out
inc
adc
mov
jecxz
and
fidivrs
dec
mov
jo
and
fstl
cs
incl
popf
popa
cs
inc
jne
adc
xor
bound
xor
je
shrb
movsb
dec
jge
xor
adc
dec
sub
pushf
mov
dec
ficoms
popf
dec
add
lock
pop
repnz
fiadds
lcall
test
int3
ljmp
mov
pop
sbbl
mov
and
pop
sub
ss
adc
mov
adc
arpl
cmp
roll
inc
in
in
cltd
inc
xor
mov
sbb
fldt
aad
sahf
cmp
shrb
ficoms
add
mov
fiadds
push
in
pusha
loopne
pop
push
repz
iret
in
push
insb
mov
pop
mov
lret
cmpsb
fidivs
aas
mov
sub
jo
inc
inc
pop
aaa
mull
mov
fisubl
and
in
jge
lcall
popf
dec
inc
test
out
rcll
add
ret
scas
adc
cltd
mov
inc
fcoms
dec
and
scas
out
shll
inc
shl
test
je
sti
dec
add
push
push
cmp
mov
ror
gs
sbb
or
add
daa
lds
or
adc
mov
pop
stos
aad
mov
mov
dec
out
mov
test
mov
cmp
roll
xor
dec
and
xor
sbb
shrb
push
lock
dec
flds
mov
je
fwait
inc
cld
mov
lds
call
addr16
xor
cli
cltd
mov
jb
mov
cmp
pop
cmp
and
push
xchg
rcll
out
adc
jo,pn
out
std
aam
loopne
jl
inc
pop
jmp
pop
insl
jbe
jne
mov
jo
xchg
xor
pusha
sbb
push
mov
add
dec
iret
sbb
push
pop
test
int3
sub
bnd
enter
pop
aam
test
cmc
in
mov
cmc
and
stos
mov
gs
push
push
sub
adc
pop
pop
inc
mov
movsl
scas
jne
icebp
enter
daa
test
out
or
popf
cmp
sub
fisubs
arpl
sub
test
pop
sbb
dec
and
mov
imul
fs
mov
roll
icebp
jg
mov
shll
mov
xor
fistps
cmp
cltd
pop
loope
ss
lods
out
pop
nop
or
cmc
mov
push
add
mov
shrl
vaddpd
push
sbb
push
jno
inc
lahf
fdivr
push
xchg
addr16
mov
cmc
and
lock
or
repnz
lret
insb
jecxz
adc
in
sbb
in
cli
mov
add
popf
sub
iret
or
insl
repz
and
mov
mov
daa
lock
push
fcmovu
mov
rcr
stos
andb
and
or
sbb
xor
clc
insl
in
aas
cmp
loopne
or
fwait
ljmp
inc
orl
jb
jbe
je
ficomps
cmp
mov
frstor
or
jae
test
xor
cltd
rcr
scas
sbb
je
out
sbbb
sbb
sahf
pop
mov
cs
push
lock
mov
cmpsb
in
mov
cmp
cli
mov
xchg
pop
push
fidivrs
jp
dec
dec
iret
pop
out
in
push
mov
rorl
add
push
inc
inc
mov
movsb
sarb
pop
test
ficomps
shll
ficomps
pop
es
jp
push
inc
dec
les
mov
rorb
xchg
dec
repnz
push
dec
add
sub
popa
arpl
shll
ftst
lds
mov
popf
push
jnp
sbb
jbe
mov
and
ds
push
out
stos
leave
dec
mov
pop
or
jbe
jno
inc
lock
test
sub
and
cmpsb
aas
mov
iret
mov
out
mov
or
sbb
lret
mov
xchg
outsl
popf
mov
in
jno
dec
std
into
jns
mov
aaa
es
xchg
cmpsl
cmp
mov
jae
jno
xor
or
jle
sarb
fisttpll
sbb
stos
xchg
mov
mov
xor
add
pushf
data16
rcr
outsl
popa
mov
or
outsb
jbe
cmpsl
adc
mov
cmpsb
outsl
aas
icebp
jmp
xor
mov
dec
stos
inc
mov
sbb
pop
jae
sbb
test
int
jnp
jge
cld
fadds
mov
dec
pextrw
adcb
nop
shll
sbb
and
scas
xor
roll
dec
in
push
lcall
test
adc
fcmovne
pop
data16
les
stos
inc
rcrb
mov
cltd
cltd
pop
aam
cli
in
adc
aas
sbb
xchg
mov
rclb
data16
hlt
aaa
data16
pop
jmp
je
fistpl
dec
mov
mov
notb
cld
in
hlt
sbb
add
cmpl
push
dec
test
mov
stos
push
sub
lea
mov
jo
mov
jmp
dec
stc
popf
insb
push
and
lock
xchg
or
es
mov
mov
testl
cli
clc
sub
repz
cltd
test
xchg
repnz
and
add
aaa
test
ja
cmp
jno
test
push
popa
lods
push
repnz
push
test
subb
mov
mov
lret
out
call
sbb
fsubl
mov
nop
cwtl
push
mov
jecxz
mov
loopne
mov
dec
inc
aas
shll
add
pop
add
or
xchg
call
enter
outsb
push
lock
xchg
stos
stos
jno
pusha
mov
mov
cli
imul
lock
add
fldcw
scas
clc
scas
xchg
movq
stos
mov
xchg
dec
xchg
jecxz
push
scas
mov
fcoms
lret
dec
aam
movsl
fidivrl
hlt
sub
int
or
stc
movsb
fsubl
adc
ja
lret
sbb
mov
and
mov
inc
in
inc
dec
enter
or
or
pusha
jge
xor
xor
mov
jge
sti
jns
and
les
xor
cli
pop
pushf
dec
jg
mov
scas
notb
mov
and
cmpsb
sub
jae
rcrl
pop
cmp
mov
testl
movsl
shll
dec
icebp
aaa
mov
andb
push
pop
add
mov
testl
push
jnp
lods
mov
mov
jecxz
out
inc
ret
and
movsl
notb
jle
xchg
in
pop
xchg
xchg
gs
loope
ljmp
fdecstp
shll
in
jno
dec
sbb
mov
fisttps
bound
jae
shrb
add
xchg
pop
and
mov
iret
test
cmp
popf
cmpsl
jb
int
in
out
adc
push
sbb
call
cmpsl
xchg
mull
nop
stos
sti
push
leave
js
or
or
cmpsl
push
sub
aas
daa
jne
ret
dec
clc
lods
outsl
cs
stos
dec
aad
cs
mov
dec
rorb
xor
push
popa
pop
jg
mov
addr16
sub
mov
mov
mov
incl
loop
mov
jle
cmpsl
jmp
push
jmp
xor
scas
xor
sub
mov
pop
mov
sub
movsb
or
inc
jmp
mov
or
jg
nop
pushf
and
sti
mov
or
arpl
ss
std
bound
hlt
test
mov
push
pushl
xchg
gs
clc
fiadds
pop
lret
xchg
cwtl
icebp
lods
add
lea
push
mov
sbb
mov
cwtl
push
dec
dec
pop
jne
push
mov
test
sti
enter
and
pop
cmp
dec
adc
sahf
mov
jb
das
loope
push
inc
int3
in
imul
xchg
mov
loop
sbbl
fnstcw
mov
stos
mov
bound
lea
int3
test
jnp
push
and
dec
jmp
scas
push
in
sub
pop
mov
in
pop
gs
mov
push
addr16
sub
imul
sub
mov
adc
leave
mov
js
repz
mov
cld
and
repnz
lock
mov
fld
pop
pop
lods
cmp
mov
pusha
add
pop
in
popa
movsb
loope
cmc
push
cli
in
mov
cld
hlt
xchg
enter
cmp
sti
push
mov
ret
les
addr16
mov
mov
xchg
adc
mov
xor
pop
and
ljmp
adc
repz
outsl
mov
fwait
sbbl
cmp
loope
dec
add
mov
into
in
jns
mov
push
sub
std
pop
mov
inc
xor
inc
cs
cwtl
movsl
push
lock
xorb
sahf
sarb
cld
push
sbb
jmp
mov
dec
cld
lods
test
push
inc
cltd
cmpsl
or
fiaddl
orl
rclb
ret
inc
xor
push
js
shlb
stos
push
dec
pop
adc
adc
pushf
and
pusha
cwtl
repz
sbb
cmp
jg
dec
cmp
push
xchg
movsl
add
cmp
jl
sub
outsl
cmpl
mov
inc
push
and
sub
push
std
push
lds
jbe
xchg
cld
or
idiv
fs
loope
cmp
cmc
lcall
outsb
lock
dec
xchg
outsl
das
mov
mov
sti
insl
imul
mull
nop
sub
dec
data16
dec
stc
dec
push
sahf
addl
repz
jae
inc
sarl
rorl
xchg
pop
movsl
mov
addr16
xchg
fwait
sbb
je
sub
aaa
jg
inc
pop
sub
xor
and
or
adc
add
cwtl
inc
pop
stc
pop
loop
ficoml
insl
enter
or
out
shr
fsubrl
add
inc
xchg
cmp
adc
jno
cmpsb
xchg
mov
xor
dec
loope
ret
out
jl
mov
pop
sbb
loopne
dec
test
icebp
xchg
mov
les
push
fstpt
xchg
jne
and
je
fnsave
lods
push
dec
or
jae
add
addl
mov
repz
dec
xor
dec
call
std
jl
inc
cmpsl
or
sbb
leave
ss
int
jl
lret
movd
sbb
stc
out
jg
scas
dec
das
aas
sahf
jne
movsb
aam
ficoms
pop
ret
sbb
loopne
push
jecxz
adc
and
sub
mov
inc
jne
data16
std
aaa
push
jl
fmulp
mov
xchg
adc
ss
pop
pop
frstor
rclb
lcall
adc
cli
rcrb
xchg
aas
lods
popf
or
mov
pop
out
jp
je
mov
movsb
sbb
xor
insl
mov
xchg
dec
and
out
dec
sub
fldcw
cs
std
js
pop
mov
xchg
cmp
mov
mov
xlat
sub
fmull
adc
data16
fwait
int
pop
and
je
gs
outsb
xlat
lods
sub
imul
lds
loopne
imul
ret
jl
into
jbe
ja
stos
xchg
and
int
in
inc
cli
add
mov
imul
mov
js
cmpsl
and
mov
or
dec
adcb
adc
and
push
sub
inc
stos
push
mov
add
dec
dec
push
out
cmp
push
addr16
shrl
and
sbb
add
mov
add
or
mov
fsubr
cs
das
mov
push
dec
into
mov
xchg
cli
je
cmp
and
mov
or
inc
ss
std
jnp
mov
jnp
mov
mul
negl
es
mov
jge
out
lcall
mov
popa
mov
rclb
fwait
mov
mov
mov
cs
icebp
jl
fsubs
jo
stc
cli
xor
mov
out
and
fwait
lret
and
pop
xchg
jbe
ljmp
mov
xchg
push
mov
rcrb
push
dec
xor
mov
jne
bswap
test
imul
outsw
adc
data16
movsb
mov
lret
xor
inc
mov
dec
into
mov
sbb
xchg
dec
add
fbstp
inc
dec
xor
cs
push
mov
pop
add
loopne
inc
mov
bound
loopne
mov
push
in
sbb
cmp
fisttps
out
xchg
iret
and
cmpsl
mov
inc
movsb
inc
adc
mov
xchg
rcrl
pop
jg
jg
dec
or
mov
loopne
xor
pop
sbb
stos
les
iret
daa
inc
push
mov
xchg
movsb
dec
cmpsl
out
mov
mov
xchg
xor
xchg
das
push
insl
cld
into
les
repnz
jecxz
movsl
shrb
ret
rcrl
inc
dec
jg
fsubr
inc
ficomps
jno
sub
pop
mov
sbb
add
shlb
xor
or
inc
or
xchg
dec
jae
jno
mov
fsubs
mov
ljmp
mov
jnp
xchg
mov
js
test
leave
into
ret
mov
mov
jg
mov
xchg
stc
inc
or
test
sbb
push
aad
xor
mov
jne
fnsave
jns
in
jb
daa
pop
movsb
out
push
pop
pop
mov
clc
pop
mov
in
out
pop
test
les
jl
jnp
pop
sbb
jge
mov
clc
ficoms
dec
data16
mull
rol
repz
mov
test
insl
jmp
cmp
cwtl
jns
adc
mov
and
adc
add
outsb
arpl
dec
inc
mov
xchg
mov
into
ret
xor
and
adc
add
outsb
arpl
dec
inc
mov
xchg
mov
into
ret
xor
mov
jle
outsl
jecxz
push
dec
inc
mov
xchg
popl
into
ret
xor
and
adc
add
outsb
arpl
push
into
inc
inc
mov
or
mov
mov
sbb
sub
cmp
cmpsl
lret
xchg
xchg
test
stc
xlat
lcall
cmp
sbb
jbe
push
sub
cmpsl
lret
xchg
xchg
lcall
mov
daa
dec
aaa
push
push
test
sbb
or
inc
sub
cmpsl
shll
and
mull
daa
inc
adc
bound
jns
and
dec
and
stos
jmp
mov
test
xchg
pop
jbe
mov
push
shlb
pop
xchg
testb
mov
inc
cmpsl
cli
in
cli
sbb
jne
dec
dec
arpl
aaa
mov
test
add
sub
jmp
ja
push
sub
stos
mov
test
mov
pop
daa
mov
sub
xchg
call
nop
lret
or
fisubl
mov
iret
stos
aaa
outsb
enter
xchg
lahf
ja
xchg
jp
ret
push
cmp
dec
mov
insb
dec
sbb
fdivs
pop
mov
or
das
shlb
mov
addr16
daa
test
jl
dec
sbbl
jb
call
fiaddl
test
cmpsl
lret
xchg
xchg
mov
nop
idivl
daa
push
aaa
bound
jae
add
ja
inc
xor
test
mov
mov
mov
or
jbe
outsb
xor
dec
xor
lret
lret
iret
call
mov
nop
out
stc
pop
inc
dec
inc
aas
pusha
pop
inc
jg
jns
dec
and
add
loop
out
loop
mov
mov
daa
dec
aaa
jp
push
sbb
ja
inc
sub
cmpsl
lret
xchg
xchg
lcall
xlat
pop
daa
dec
aaa
jp
push
sbb
ja
inc
sub
cmpsl
or
mov
cmpsb
je
nop
repnz
sub
mov
jbe
pop
mov
push
or
xor
xlat
dec
ljmp
inc
lcall
pop
mov
dec
idivl
ret
dec
test
mov
roll
pop
xor
dec
sub
mov
rcrl
fs
and
mov
and
imul
pop
adc
insl
popa
cwtl
imul
mov
fsubs
out
gs
dec
cwtl
push
mov
jl
and
jne
jp
lds
ret
xchg
mov
out
pop
adc
mov
cwtl
addl
sbb
jl
mov
pop
cmp
decb
out
push
cwtl
test
ret
fwait
lock
cmp
adcl
cmc
push
loope
jl
shl
mov
cwtl
cmp
jne
aas
adc
mov
cmp
xor
sub
addr16
sub
push
bound
pop
je
push
jl
fmull
add
insb
push
push
adc
xor
ficompl
rorl
or
push
dec
sub
fsubrl
push
push
cmp
inc
push
mov
pop
addr16
cmc
popf
pop
in
mov
push
mov
out
les
adc
add
adc
adc
call
test
xor
movsl
inc
push
je
loop
or
push
push
pushf
test
shrl
pop
test
andl
jmp
leave
movsl
cmpl
loopne
and
sbb
scas
jae
les
inc
mov
pusha
je
dec
fcomps
mov
inc
jns
xor
cltd
insl
fld
movsl
xchg
mov
lret
xor
push
movsl
dec
stc
push
push
jae
sub
js
fcmovbe
sti
stc
mov
dec
cwtl
sti
sbb
sbb
adc
call
jnp
jl
xchg
sub
lods
jmp
pop
rorb
fbld
outsl
xchg
pop
sub
sub
pop
add
inc
cmp
jo
mov
dec
movsl
push
fcoms
int3
add
add
mov
outsb
repz
loop
rcrl
xchg
fidivl
cmp
xor
or
ds
mov
lods
or
testb
pop
jne
gs
mov
sahf
aaa
cli
cmp
bound
mov
adc
pop
std
mov
xlat
loopne
scas
cmp
aad
jmp
push
dec
pop
in
mov
cmp
sbb
cs
clc
hlt
and
mov
xchg
hlt
cld
divb
mov
mov
jp
ljmp
adc
push
ret
push
pushf
pop
jb
mov
stos
push
or
dec
sahf
push
pushf
xchg
add
jae
cmp
and
insb
jo
xchg
mov
inc
cmp
xchg
mov
es
jp
out
mov
mov
stos
into
push
stc
mov
adc
add
push
push
cmpsl
mov
aad
or
bound
stos
or
adc
jp
cmp
push
push
mov
adc
lock
out
dec
or
pop
mov
into
lock
jbe
fs
jae
js
dec
push
movntq
stc
out
imul
or
push
ds
cmp
test
addr16
ljmp
jp
push
test
in
cwtl
repnz
into
adc
mov
xchg
jb
pushf
mov
movsl
scas
mov
fiaddl
scas
shrl
adc
sbb
mov
fwait
mov
cld
cli
call
roll
add
int
jne
dec
mov
dec
jg
sbb
pop
cwtl
xchg
jne
dec
cmp
loope
icebp
sarb
mov
sub
add
add
push
loop
mov
sub
xor
jae
fnstcw
xchg
jp
add
ret
jbe
push
int3
fimuls
pushf
dec
adcb
mov
pushf
add
int3
dec
pop
insl
enter
sub
cld
add
push
data16
je
sub
jecxz
stc
mov
in
adc
cmpsb
push
or
lcall
sbb
shrb
mov
mov
call
sbb
test
mov
push
or
push
out
jle
ss
std
cmp
in
leave
fcoml
lea
inc
mov
fistl
mov
mov
mov
clc
ljmp
adc
mov
pusha
pop
out
dec
lret
pusha
inc
dec
push
pop
mov
cltd
add
inc
adc
push
dec
aad
cmp
mov
mov
shll
mov
jg
and
xor
std
fisttps
and
cmp
das
leave
out
loop
rcll
decl
cs
ss
fidivrs
stos
mov
idivb
fdivrs
dec
cmp
in
arpl
lahf
pop
mov
adc
ja
add
arpl
shll
cli
mov
sub
pop
cmp
jbe
cmpsl
jb
leave
add
sbb
pop
testb
lret
ja
cwtl
out
in
push
push
push
add
mov
or
loope
mov
pop
jecxz
adc
outsb
jnp
or
shlb
in
jne
mov
push
xor
add
cld
jno
fisubs
push
ljmp
inc
sub
cmp
push
push
sbb
shll
inc
lea
orps
addr16
jb
sbb
pop
lds
sbb
imul
or
addr16
dec
mov
inc
jmp
dec
adc
rcrl
aas
sbbb
fwait
pop
loopne,pt
insb
rcrl
in
les
mov
clc
or
into
sub
out
stos
mov
dec
mov
sub
xchg
add
mov
lock
loop
subb
mov
lea
sti
mov
xor
hlt
fistps
or
jmp
cltd
sub
sbb
mov
xchg
jno
leave
and
pop
repnz
orl
lock
cmc
mov
jmp
mov
lods
scas
inc
dec
fwait
popa
cmp
bound
adc
or
jnp
out
jg
andb
mov
idivb
popa
xchg
push
push
out
xchg
pushf
inc
std
movsb
subb
pop
mov
jno
sbb
subb
testl
sub
es
push
xchg
add
add
add
lret
ds
pop
or
xchg
cmp
in
sbb
aam
sbb
mov
orl
aas
mov
icebp
loopne
pop
sbb
sbb
inc
shlb
add
cmc
push
adc
xorl
lret
xor
shlb
in
jge
in
push
sti
push
cmc
pand
or
in
scas
xor
outsl
fisttpll
add
in
sub
jno
dec
dec
mov
aas
or
push
fmul
repz
mov
mov
dec
pop
sti
repnz
ljmp
xor
lock
adc
stc
and
cltd
daa
lds
out
imul
mov
mov
jecxz
shlb
jecxz
inc
adcb
jmp
stos
sub
add
xchg
dec
and
dec
xorb
mov
fsubrl
inc
xor
jnp
mov
lods
je
pmaxub
test
inc
cltd
sbb
cmp
dec
sub
loop
dec
add
subl
push
sti
test
hlt
mov
fnstenv
ret
es
andl
loopne
sbb
repnz
lret
and
hlt
loope
enter
xlat
lods
add
jmp
bound
int3
xchg
ljmp
xchg
fstps
mov
sbb
sbb
jnp
leave
sub
jl
ds
xchg
inc
mov
mov
bound
xor
pushf
add
cld
lds
mov
xchg
call
jg
lea
mov
imul
xor
sbb
scas
std
cmp
pop
stos
sbb
adc
cmpsb
jmp
fs
nop
lods
push
add
cmp
mov
fsubl
fstps
mov
jg
pop
fadds
and
jmp
xchg
loope
fcoms
and
inc
inc
scas
sbb
pop
fs
inc
dec
xor
shlb
xchg
imul
pushf
pinsrw
pop
sub
add
sub
xchg
fistpl
push
push
or
leave
ljmp
inc
xchg
push
es
repz
xchg
jge
cmp
fidivrl
add
addr16
mov
push
sub
cmpsl
mov
mov
cltd
pop
test
cmp
stos
add
inc
insb
mov
jnp
add
out
jmp
in
mov
loopne
sub
negb
push
shll
mov
xchg
and
or
in
mov
mov
stos
jne
pop
mov
xchg
outsb
dec
and
mov
fmull
in
pop
ret
dec
scas
aam
cmp
mov
dec
sahf
cltd
fildl
cltd
or
leave
xor
mov
cld
mov
sbb
movsl
sub
loop
iret
pop
jecxz
ljmp
rorb
lock
frstor
int
stos
movsb
dec
xchg
sbb
jg
mov
mov
pusha
inc
xor
mov
jnp
mov
idivl
mov
xchg
sbbl
push
gs
and
leave
outsb
aaa
and
aam
inc
pop
in
out
rcl
add
mov
sti
fsub
fadds
repz
sub
mulb
lcall
jmp
inc
adc
xchg
stos
out
lcall
jo
adc
xor
mov
insl
pop
stos
in
mov
push
and
cmp
push
xchg
cmp
int3
test
pop
loope
add
mov
jg
xor
adc
adc
pop
mov
test
inc
call
cmpsl
pushf
xchg
stc
fwait
push
jb
mov
cmpb
or
sub
cltd
adc
andb
ss
cld
push
xchg
pop
xchg
jnp
clc
scas
aad
mov
adc
xchg
inc
push
jne
aas
mov
mov
fisubrs
aad
jmp
xchg
sbb
push
pop
rol
jmp
jecxz
push
sbb
adc
fs
or
and
je
jl
mov
rol
shlb
sbb
in
xchg
fstpt
lret
in
xchg
cli
mov
pushf
and
sti
adc
aas
ret
dec
int
cmp
adc
and
mov
pop
jmp
mov
push
or
xchg
in
out
mov
cli
cmpsl
subb
mov
pop
push
divl
pop
std
int
or
adc
hlt
push
repnz
push
repz
mov
hlt
subl
jecxz
push
in
push
xchg
imul
jg
lods
mov
ds
xor
add
ja
jle
int
les
mov
popa
arpl
push
pop
dec
pop
jp
orl
pop
fcoml
aad
push
adc
mov
mov
mov
or
sub
or
inc
mov
dec
jbe
idivb
and
mov
leave
dec
pmullw
xchg
adc
adc
push
arpl
lret
movsb
sahf
cmp
jo
push
inc
fidivrl
sbb
jb
out
cld
in
mov
out
scas
pop
ja
sti
mov
xchg
sbb
fwait
scas
or
mov
mov
inc
and
inc
mov
jmp
adc
mov
js
push
xchg
cmp
into
das
addr16
pop
nop
pusha
mov
dec
aaa
mov
cmpsl
ds
out
push
mov
fldl
jle
adc
mov
icebp
rcll
xchg
sbb
icebp
imul
jae
mov
aaa
and
ret
push
call
xchg
dec
add
mov
outsb
xorb
leave
adc
jp
test
adc
mov
mov
cmpsb
pop
push
enter
pushf
inc
fidivrs
mov
das
mov
loop
cltd
mov
aad
mov
adc
decl
out
and
mov
adc
xor
xor
mov
pusha
xor
mov
xor
rcl
jae
cld
cmp
pop
cltd
jl
roll
pminub
stos
psubq
fwait
jmp
xchg
jne,pt
leave
sub
xchg
bound
movsl
push
ljmp
nop
push
loop
ret
jmp
mov
inc
mov
scas
cmp
jge
sarb
push
lahf
stc
jmp
cltd
xchg
dec
imulb
jg
xor
mov
xor
in
xlat
shlb
xchg
stos
ffree
js
out
mov
andl
inc
mov
pusha
cmp
sub
in
lret
fsubr
sti
dec
bound
loopne
mov
cwtl
fwait
jns
dec
arpl
dec
mov
push
and
mov
or
push
sub
jo
sahf
fsubrp
shlb
mov
leave
sbbb
fisttps
jae
ja
mov
cmp
test
mov
dec
call
aad
mov
pop
xor
shll
jne
shrb
addr16
adc
push
test
pop
adc
push
adc
lahf
fxch
ror
mov
notl
test
repnz
mov
lods
adc
dec
lods
insb
cld
fcmovnu
sub
mov
pushf
in
sbb
cwtl
mulb
jae
pop
repnz
dec
dec
push
subl
jmp
arpl
dec
sbb
adc
dec
cmp
add
jmp
mov
mov
jo
in
je
into
or
dec
ret
lds
fisttpl
das
mov
adc
scas
push
mov
sub
mov
dec
jmp
and
cs
les
fisttps
fs
call
out
leave
cmp
inc
cmp
loope
sarl
ds
sti
divl
popf
sbb
push
mov
leave
shll
movsb
push
cmp
loopne
push
in
repz
push
jno
int
pop
cmp
sub
or
lock
enter
daa
mov
stos
sar
lea
fimuls
cmp
mov
fdivs
xorb
iret
jg
push
dec
sbb
or
xor
js
insl
xor
pop
push
sub
mov
inc
mov
pop
popf
fdivs
mov
sbb
lcall
or
outsl
fisubrl
dec
mov
inc
push
bnd
pop
xchg
add
iret
fidivrs
add
cmp
mov
or
std
push
pusha
in
mov
sti
stos
pushf
sbb
int3
pop
and
fiaddl
bound
mov
pop
dec
adc
and
daa
inc
roll
clc
dec
jl
cld
outsb
in
inc
jb
jnp
cmp
aaa
sub
fucompp
test
and
xchg
sti
mov
nopl
call
stos
std
leave
dec
push
sub
addl
sub
addr16
push
mov
adc
insl
fsubs
inc
idivb
mov
hlt
or
jae
dec
fs
pop
movsl
sub
add
imul
xchg
ficomps
dec
icebp
sbb
sti
push
out
add
add
fstps
movsb
mov
movsl
sbb
cmp
loope
cmp
fs
xor
xchg
popa
mov
popf
mov
lds
lret
mov
pop
dec
das
scas
lods
pop
sti
xlat
pop
add
dec
mov
imul
sub
or
les
lds
test
fisubrs
movsb
sar
sub
into
das
in
mov
push
or
in
mov
test
pop
fmuls
push
das
sbb
or
pusha
and
inc
inc
sbb
adc
adc
testl
pop
adc
nop
xchg
dec
into
pop
popf
and
arpl
hlt
push
add
es
hlt
and
push
fcompl
ror
test
jno
mov
cli
dec
and
dec
push
lcall
add
fsubrl
mov
adc
mov
mov
cmc
lea
out
xor
jnp
or
xchg
adc
nop
addr16
std
icebp
shll
das
mov
cltd
add
sub
xor
lods
push
fstps
out
dec
push
inc
imul
fwait
imul
jge
in
fs
and
mov
cwtl
lret
movl
cmpsb
aaa
inc
dec
outsb
xor
xor
test
add
sub
sub
mov
cwtl
inc
fwait
dec
jmp
add
mov
pusha
xlat
daa
cmp
jge
jne
jle
or
call
fwait
mov
test
push
sti
lret
jp
sbb
cwtl
out
test
stos
leave
sub
and
xchg
sbb
or
sub
xchg
cmpsl
je
sub
cld
mov
enter
cmp
sub
or
jns
xchg
cmp
lret
pusha
mov
faddl
fsts
pop
push
idivb
mov
xchg
jle
jle
ret
shl
leave
test
push
inc
cmp
rcl
mov
xchg
xor
xchg
jbe
ljmp
aas
sarl
push
int3
cwtl
adc
xor
lret
je
idiv
fnstcw
lods
xlat
rclb
pop
jo
adc
ljmp
int3
inc
mov
mov
fidivs
jp
pop
jno
daa
xchg
bound
pop
mov
push
and
mov
sub
sbb
cmp
cmp
xchg
call
lret
int
in
xchg
pop
fisubl
mov
xor
xor
bound
ret
dec
jle
movsl
mov
lcall
xor
dec
add
pop
cli
pop
mov
mov
jae
xchg
mov
cmpsb
push
or
jle
cli
pop
and
hlt
insb
stos
sub
mov
sbb
pop
cs
adc
xchg
pop
enter
nop
rcr
call
pop
cs
mov
das
jbe
mov
sbb
inc
sub
test
cmp
cmp
loop
push
jb
int3
fstps
or
sbb
aaa
aaa
cs
cmp
imul
test
inc
push
stos
ret
push
mov
jno
mov
sbb
lret
or
stc
jecxz
fnstsw
aam
icebp
push
cmpsb
int
xor
rep
mov
xchg
pop
rcl
in
pusha
daa
mov
scas
xchg
dec
scas
or
stos
mov
pop
stos
cmpsb
jno
dec
int3
inc
and
inc
xchg
and
lret
ja,pt
lcall
out
mov
inc
push
jo
popa
int3
inc
inc
pop
fbld
xchg
push
pop
adc
or
or
ds
imul
incl
sbb
ds
cmp
mov
addb
and
pusha
adc
xor
mov
es
bound
mov
repz
pop
push
out
movl
pushf
sub
fists
test
inc
dec
ret
dec
mov
cmpsl
pop
lods
push
jp
jns
xchg
push
xor
into
push
in
cmp
mov
fwait
js
xor
addr16
shrl
dec
ret
pop
sti
mov
jp
xor
sbb
test
xchg
pop
sub
mov
xchg
ret
leave
lds
cmp
mov
add
popa
aam
mov
mov
pop
aad
pop
stos
fwait
sbb
jle
sbb
outsl
xchg
cmp
arpl
in
mov
movsl
iret
push
jl
ljmp
add
pop
xor
lods
test
out
xor
xor
dec
inc
jmp
jnp
and
sub
xchg
fisubrs
vmovddup
push
cmpsb
pop
dec
sbb
mov
test
xorl
push
xor
in
lcall
insl
leave
mov
jcxz
fisttpl
stos
mov
aam
sbb
inc
imul
mov
enter
jl
xor
repz
inc
dec
ds
js
xchg
leave
stc
or
nop
test
mov
adc
fcomip
imul
jns
fistps
add
mov
mov
sub
xor
jbe
fistps
scas
jbe
test
popf
sbb
sahf
clc
shll
mov
je
inc
inc
shll
pop
dec
insl
lds
xor
add
nop
and
repnz
iret
jle
dec
ja
and
dec
pop
pop
dec
adc
jmp
inc
push
repz
sti
sbb
nop
pop
cli
xor
mov
iret
insl
leave
aas
cmc
mov
push
rcll
lea
fmuls
xchg
push
mov
movsb
out
xor
push
and
shrl
mov
repz
sti
in
mov
out
imulb
mov
dec
inc
or
loopne
mov
test
loop
cmpsb
add
pop
xlat
out
or
inc
idivb
push
stc
jecxz
pop
push
pop
sub
out
xchg
jae
rol
adc
sub
iret
push
add
jmp
cmpl
hlt
jl
in
movsl
mov
pop
xor
mov
cmc
or
fbld
push
pop
dec
adc
dec
cmp
mov
sbb
fnsave
popf
cmc
aam
dec
dec
or
add
mov
sub
cltd
enter
dec
jno
cmpsb
push
test
xor
cs
mov
cmp
xchg
cmc
mov
out
fimuls
sub
mov
push
scas
lcall
dec
sub
xchg
out
sbb
dec
testb
arpl
mov
mov
mov
daa
dec
aaa
jp
push
sbb
ja
inc
sub
cmpsl
lret
xchg
xchg
lcall
xlat
pop
daa
dec
aaa
jp
push
sbb
ja
inc
sub
cmpsl
lret
xchg
xchg
lcall
xlat
pop
daa
dec
aaa
jle
push
sbb
ja
inc
sbb
cmpsl
mov
xchg
xchg
lcall
pop
movsl
daa
mov
rolb
push
insl
out
orb
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
xchg
fistpl
daa
cmp
into
jecxz
cmp
or
add
add
push
add
inc
add
add
add
add
add
add
add
add
lea
cmpsb
add
add
add
add
add
add
add
add
sub
push
add
pop
add
or
jmp
add
adc
jmp
add
push
add
add
xor
xor
xchg
add
outsl
add
add
cmpsl
add
add
add
add
faddl
or
xchg
add
add
add
adc
add
pop
add
add
add
add
add
add
pop
push
add
push
add
add
sub
add
add
add
add
add
mov
add
add
add
addl
add
add
adc
fadds
fadds
sub
jne
stos
add
add
add
add
add
add
add
or
mov
add
add
jmp
add
add
add
cmpsb
add
push
jmp
add
add
add
pop
add
hlt
add
add
add
add
add
add
add
add
add
push
add
outsl
add
add
add
push
pop
flds
fadds
xchg
add
sldt
filds
add
add
xor
imul
add
mov
popl
inc
add
add
cmpsl
add
add
add
add
add
adc
jno
cmp
mov
dec
add
sub
add
add
add
add
add
add
add
xor
lret
add
add
add
add
add
inc
add
add
imul
adc
sbb
add
sbb
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lods
add
add
in
test
push
add
add
fadds
testl
push
mov
mov
int3
add
add
xlat
add
add
add
add
add
add
cmpsb
add
add
add
add
adc
test
mov
add
add
mov
add
add
jge
mov
out
add
add
add
add
pop
add
mov
add
dec
add
dec
add
push
les
filds
add
outsl
add
add
in
jmp
add
add
add
add
add
add
add
add
add
scas
add
adc
adc
or
pushf
add
test
lcall
add
add
and
out
add
add
push
imul
or
leave
add
add
inc
add
test
mov
flds
add
pop
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
push
mov
hlt
inc
mov
xor
icebp
dec
imul
dec
xor
pop
sbb
popf
push
inc
xor
push
test
xchg
packssdw
mov
loop
inc
addl
cmp
popa
mov
mov
and
shll
or
sti
test
jg
insl
jp
adc
cvtps2pd
pop
jno
mov
pop
push
dec
test
sbb
out
adc
xchg
dec
orl
push
cmp
mov
es
mov
scas
jle
out
es
stos
adc
aad
jae
faddp
in
sahf
loopne
mov
leave
es
sti
inc
gs
icebp
subl
and
test
arpl
adc
cli
fs
xor
sbb
bound
shll
jne
lea
ret
pop
sub
pop
xor
stos
or
mov
sbb
ds
inc
xchg
pop
xor
ffree
mov
cmpsb
outsb
subb
scas
jb
add
hlt
repz
popa
stos
and
cli
push
adc
loopne
xlat
fisubrl
pusha
xor
rcrb
jno
mov
shr
xchg
dec
inc
ret
jae
lea
push
out
lcall
xchg
lea
and
pop
dec
or
dec
call
mov
sub
negl
ret
orl
mov
pop
dec
push
les
or
enter
fcompl
adc
stc
leave
mov
adc
aad
pop
jb
sbb
or
fbld
adc
add
add
lea
inc
mov
sti
push
mov
adc
mov
jmp
xor
in
xchg
xor
test
lods
imul
fistpll
sub
sbb
and
cmp
lea
pop
mov
mov
mov
and
mov
loop
sbbb
sbb
jl
pop
adc
pop
jbe
roll
fists
stos
push
sub
push
loope
ljmp
add
push
or
xchg
jg
ss
sahf
xor
adc
sub
imul
mov
lcall
movsl
stos
shll
scas
mov
sub
test
imul
jp
pop
sub
jne
mov
dec
insb
addr16
repnz
loope
xchg
fsubrl
int
add
in
std
lods
adcl
add
xorl
orb
jbe
mov
add
sarb
fidivl
mov
dec
call
lret
push
jnp
mov
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
