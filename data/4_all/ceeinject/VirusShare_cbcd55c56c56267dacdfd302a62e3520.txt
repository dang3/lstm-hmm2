loopne
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
xor
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
rclb
jecxz
repz
popf
fimull
sub
sbb
push
jp
pop
and
stos
sarl
sub
cli
mov
sub
add
jae
inc
or
stos
and
pop
jnp
and
popf
repz
shlb
add
jg
sbb
popa
adc
sbb
pop
lods
stos
lahf
shl
lcall
push
cwtl
sbb
pusha
mov
push
decb
adc
mov
add
imull
sti
arpl
jbe
lods
popa
adc
inc
ds
mov
daa
shl
sbb
das
and
pop
cmp
aad
decb
sar
stos
mov
push
cli
jbe
jae
adc
jp
mov
pop
pop
cli
mov
stos
jl
xchg
cmp
and
out
in
cmp
test
shlb
cmp
ficomps
jne
jp
lret
sub
sarb
arpl
sbb
adc
fisttpl
movsl
cmp
dec
pop
loop
or
sbb
push
jo
push
cs
mov
xor
stos
test
addr16
test
leave
and
jb
insl
adc
ds
iret
mov
fwait
in
mov
mov
inc
inc
add
pop
push
jne
pop
jge
dec
dec
push
aaa
mov
mov
xchg
cli
xchg
lahf
ljmp
mov
push
add
jle
pop
jp
jl
dec
es
scas
jmp
filds
xchg
fiaddl
push
cmp
jae
add
jp
dec
xor
stos
sarl
sub
cli
mov
sub
arpl
jae
add
jp
dec
xor
stos
jne
and
jnp
int
adc
sub
push
sahf
adc
push
cli
addr16
pop
mov
mov
xchg
adc
sbb
and
pop
push
fsubrs
dec
movsl
mov
and
inc
jl
loopne
xchg
test
pop
jno
xor
cmpsl
cmp
mov
filds
sbb
hlt
adcb
fsubs
jl
xchg
pop
add
inc
movsb
and
jo
fimuls
orb
das
movsb
loope
decb
ds
push
and
jb
stos
call
sbb
or
pop
adc
adc
jg
aaa
jge
dec
loopne
test
add
and
out
cmp
xchg
cli
punpckhwd
inc
mov
out
pop
mov
pushf
gs
sbb
loope
pop
jp
test
xchg
mov
mov
xor
clc
frstor
fdivr
mov
dec
ret
loop
sub
lock
test
mov
sub
lret
inc
cmp
mov
icebp
push
outsb
lds
dec
aas
ja
jo
pop
in
popf
cmpsb
mov
jbe
int
imul
cmc
divb
inc
cmc
push
xchg
sbb
fwait
jns
ds
stos
jae
xor
negb
add
cmp
das
mov
xchg
mov
and
fcoml
cmp
pop
push
inc
or
pop
and
pop
cmc
add
mov
sbb
mov
mov
cld
dec
lods
or
rcr
out
inc
cmp
cli
insl
xchg
lret
popf
fdivl
das
in
nop
pushf
dec
in
push
lret
push
dec
es
les
shlb
cmp
rcr
xchg
ljmp
shrb
mov
sbb
sarl
push
cmp
xchg
in
inc
inc
std
test
push
rol
mov
mov
push
add
js
mov
pop
xor
add
icebp
mov
nop
inc
test
lea
mov
fsubrs
cli
imul
in
faddl
xchg
pop
out
pop
dec
jbe
mov
jle
jp
test
mov
jge
ja
push
ljmp
push
mov
jmpw
std
jns
daa
xchg
scas
aam
push
push
xchg
push
pop
cltd
inc
cmp
movsb
int
inc
and
adc
mov
sub
insl
das
imul
leave
stc
pop
push
push
cmp
test
cmpsl
rcrb
push
outsb
mov
add
shlb
mov
push
add
and
leave
mov
push
aad
jecxz
stos
daa
cmp
jnp
xchg
jle
fcoml
sti
cmpsb
sti
and
mov
pop
pusha
cmp
into
aas
push
xchg
mov
rclb
xchg
sub
xchg
scas
xchg
ja
sub
xor
mov
ret
push
mull
mov
adc
mov
dec
std
cs
or
jae
dec
imul
push
aam
add
call
lods
ret
or
and
test
lcall
and
jge
lret
fistps
inc
fdivs
xchg
xlat
push
int
mov
inc
nop
or
sti
js
cwtl
movb
int
dec
lock
push
push
in
and
jmp
insb
dec
cmp
pmulhw
and
inc
add
cmc
scas
and
jo
lret
cmc
adc
lods
scas
mov
ss
cmpsl
jae
inc
test
fstp
cwtl
xlat
jmp
pop
xchg
pop
push
sub
scas
add
cmpsl
mov
imul
loope
dec
pop
xchg
mov
sub
fdivr
mov
pushf
sbb
jmp
orb
dec
adc
and
in
rorb
xor
and
add
test
les
fwait
jnp
test
pop
ret
xchg
or
and
fmull
jle
scas
xchg
int
xchg
xchg
cmp
jo
pushf
repnz
scas
cmp
sbb
dec
cmp
fcmovbe
add
das
lds
push
test
adc
dec
enter
xchg
pop
jle
clc
repz
jbe
mov
sbb
fildll
in
push
out
dec
mov
loopne
mov
fs
push
stos
sub
std
enter
andb
lods
mov
push
ret
xor
popf
and
inc
loope
insb
jle
lcall
jmp
add
faddl
inc
in
jns
xchg
imul
xor
jl
xchg
pop
call
popf
pop
rol
jnp
mov
fldenv
insb
std
aad
andl
xor
pop
imul
add
repnz
and
std
gs
push
ljmp
push
leave
pop
aas
mov
pop
mov
jo
mov
inc
mov
add
xchg
xchg
xor
arpl
inc
pop
cmp
sub
xor
xor
add
call
stc
in
mov
stc
dec
push
push
les
sti
pop
scas
sub
fs
push
imul
icebp
shrl
dec
sbb
lock
mov
mov
into
add
lret
xlat
push
and
inc
mov
rolb
mov
sbb
inc
aas
jp
jo
mov
lea
arpl
jge
or
repz
cmp
loopne
inc
je
mov
shrb
orl
sub
test
mov
outsl
bound
jecxz
cmpsl
enter
mov
lods
or
sbb
pushf
inc
pop
subl
jl
es
mov
xchg
sbb
mov
jg
mov
test
rcrl
pop
dec
cld
jbe
int3
adc
cmpsb
mov
stos
leave
insl
mov
rcl
in
outsb
mov
mov
stos
pop
xor
int
call
or
adc
sub
daa
push
test
imul
ljmp
and
fs
dec
into
mov
push
inc
cld
fadd
movb
jp
imul
add
sub
ja
loopne
xchg
cmp
pop
mov
and
adc
js
dec
add
mov
int
mov
sub
push
and
sbb
out
cli
cmp
sub
pop
outsl
fldl
adc
pop
sub
cli
mov
adc
sub
notb
rcll
shl
mov
arpl
pop
add
cmp
out
pushf
imul
ja
sub
insl
rorb
leave
jno
push
mov
cmp
push
push
insl
jmp
out
stos
mov
lods
pop
js,pn
movsl
pop
orl
or
loope
inc
adc
dec
sbb
loope
jge
mov
rcl
testl
out
xor
mov
cmc
jge
pushf
mov
arpl
in
or
or
push
jecxz
leave
pop
cs
into
xor
mov
xor
xchg
xchg
sub
insl
test
adc
icebp
add
test
and
outsb
lcall
sti
into
cmp
xlat
or
repnz
fnstsw
push
bound
adc
lods
or
arpl
jmp
fwait
inc
sbb
rep
mov
sub
les
insl
xchg
dec
lahf
mov
ds
mov
data16
lahf
div
ds
sbb
out
lods
adc
rol
mov
sub
mov
cmp
outsb
call
aaa
adc
jnp
dec
loope
adc
mov
data16
dec
adc
insl
cmpsb
fstps
pusha
cmp
test
out
pop
push
enter
inc
sub
inc
imul
loop
in
mov
jne
and
test
sub
fstpl
popl
ud2
loope
jl
scas
shlb
pop
or
jp
cmp
sbb
int3
jl
fiaddl
xor
rol
sarb
cs
imul
and
stos
jb
xlat
cmp
sti
enter
arpl
cmp
push
bound
dec
push
or
test
fs
pop
adc
jecxz
scas
leave
mov
pop
jnp
daa
ret
adc
or
js
mov
xchg
adc
sbb
pop
xor
test
aam
and
enter
cmp
sbb
xchg
sub
or
loopne
adc
fs
dec
popf
sar
jmp
push
leave
pushl
pop
imul
mov
xchg
push
pusha
daa
sub
pop
aad
repz
mov
scas
mov
xchg
pop
adc
push
popa
sub
stos
sub
pushf
add
in
add
mov
les
lret
mov
movsl
test
xchg
mov
and
inc
push
mov
sbb
cmp
mov
fwait
mov
and
sbb
add
dec
aam
inc
add
ja
cld
pop
dec
testb
cmp
mov
movsb
in
dec
mov
movsb
adc
jno
lea
lahf
insb
outsb
lahf
test
js
sarb
fcomp
xchg
dec
cmp
dec
scas
rol
sbb
pop
jns
push
jg
fnstenv
xor
insb
xchg
int
xchg
call
xchg
out
sub
ss
data16
or
daa
cmp
adc
mov
inc
mov
fucomp
lcall
adc
mov
and
arpl
mov
push
pushf
sbb
pop
popf
sub
mov
inc
sub
inc
mov
push
out
add
aaa
mov
lods
mov
or
rcll
call
dec
shlb
pusha
ljmp
and
add
js
or
inc
ror
rorl
mov
cmc
jns
dec
push
and
imul
cs
sbb
outsl
inc
stos
pop
add
inc
int3
and
dec
fmuls
dec
xchg
pushf
fs
clc
aas
popf
or
pop
aam
pop
adc
aaa
add
test
xlat
test
cld
int
adc
lret
inc
cli
sub
popf
shll
mov
jbe
dec
into
sub
nop
pop
insb
gs
rcr
loope
shrb
mull
jp
inc
mov
and
mov
push
cmc
xor
adc
cmp
in
scas
sub
inc
mov
pusha
xchg
or
mov
cmc
repz
int
xor
inc
xor
stos
jae
fmul
loope
fcmovu
les
imul
and
mov
gs
aas
adcb
dec
sti
fwait
mov
into
pop
lds
xchg
adc
dec
out
movsb
shll
popa
jmp
pop
mov
stc
popa
aas
xchg
mov
aaa
and
shlb
pop
cmpsb
jg
cmp
sbb
rcrb
popa
push
mov
fildll
lds
dec
xor
rol
mov
ljmp
mov
popf
mov
adc
idivb
push
lea
nop
into
daa
inc
or
sbb
aas
cmp
dec
sbb
subl
into
dec
xchg
adcl
jne
pop
add
popf
jp
xorl
pop
cmp
test
inc
loopne
sbb
lds
add
shl
pusha
dec
sub
adc
insl
jno
lods
ret
into
pop
jl
xor
inc
push
pushf
mov
inc
movsb
fbld
push
leave
aas
xor
movsb
vpxor
in
jecxz
testb
lods
outsb
std
inc
add
mov
sti
jle
enter
mov
push
fnsave
pop
pop
mov
xor
dec
mov
pusha
dec
mov
mov
sbb
aam
test
sub
sub
cmp
cmp
inc
cmpsb
shrl
and
sub
imulb
push
jns
xlat
mov
repnz
lahf
push
add
fnstcw
ret
mov
jp
xchg
rorl
xchg
rcrl
mov
leave
mov
inc
nop
fcompl
frstor
inc
call
nop
jo
lods
or
inc
shl
cmpl
clc
xchg
pop
jmp
mov
cmp
lods
and
call
or
call
add
add
fsts
orb
xor
nop
and
ficompl
aaa
dec
roll
cli
mov
mov
les
adc
inc
hlt
pop
add
adcl
pop
cmp
repnz
not
jle
mov
inc
adc
ja
mov
loope
out
or
mov
aaa
sub
ss
pop
mov
mov
jmp
jle
movsb
and
popl
add
push
jp
mov
mov
adc
pop
pop
icebp
lods
bound
inc
cmp
push
in
es
cmp
cmp
sahf
insb
adc
add
jecxz
xor
arpl
jbe
in
into
faddp
mov
and
leave
cltd
gs
lock
pop
movsb
loope
scas
xor
pop
or
lods
adc
jg
add
dec
or
jle
scas
test
pop
std
fs
idivl
sarl
lahf
rorb
mov
dec
lret
push
and
test
mov
dec
xchg
or
sbb
out
jl
fldenv
adcl
in
loope
mov
xlat
ss
jns
inc
aas
test
cld
out
jg
and
pop
push
inc
pop
shlb
nop
aaa
ret
push
bound
stos
sbb
daa
xchg
mov
or
data16
loop
sub
fcmovne
jg
faddp
sahf
stc
mov
sbb
cltd
arpl
imul
or
sbb
insl
xchg
mov
push
xor
xchg
inc
add
arpl
fdivl
add
insl
push
push
jo
or
pop
sti
mov
andb
mov
int
std
xchg
push
shrb
jne
in
out
lods
pop
enter
add
in
in
ret
dec
adc
push
test
push
cld
ljmp
cmp
out
fists
call
mov
imul
xchg
inc
stos
fwait
cmc
mov
dec
fs
repz
into
popf
iret
stos
push
stc
int3
xor
sub
or
notl
mov
cmp
dec
fs
adc
xlat
or
repnz
aad
cmp
or
popa
xorb
addr16
jo
cmc
cmpsl
mov
loop
icebp
insl
je
movsb
mov
in
leave
cmp
movsl
insb
cs
test
xchg
outsb
sbb
out
pop
fwait
dec
xchg
les
cmp
outsl
js
and
and
xor
xor
outsb
aas
add
jb
test
ss
inc
sub
and
adc
pop
pmaxub
int3
dec
stos
lahf
mov
and
daa
movsb
mov
ss
dec
adc
ret
movsb
cmc
xchg
shlb
and
pop
imul
jecxz
or
cmpsl
lds
adc
inc
fbld
jns
addr16
mov
jmp
shrb
push
rcrb
addl
jmp
jo
or
add
lea
shlb
ss
and
xchg
cmp
loope
add
pop
stos
push
out
sub
adc
mov
jle
fcmovnu
xorl
xchg
es
ss
pop
xchg
mov
movsl
ljmp
lods
ret
pop
rorl
jle
jbe,pt
mov
lds
je
popf
jp
mov
push
outsl
mov
cmp
bound
mov
push
xor
adc
mov
ret
xor
adc
loopne
or
rcrb
push
mov
shrl
arpl
xor
adc
ja
push
cld
testl
icebp
push
test
pop
mov
inc
in
movsb
ret
lcall
ljmp
xor
add
out
lods
sbb
icebp
inc
jmp
jns
pop
cmpl
pop
mov
push
xor
insl
sti
mov
cld
lahf
cs
mov
sbb
mov
xor
aas
pusha
cmpsb
aas
jbe
mov
or
or
mov
stc
lds
repz
sbb
addr16
jl
push
mov
in
mov
mov
mov
fnstcw
push
sub
dec
mov
inc
and
cmp
sub
popa
add
enter
inc
rcrl
int
adc
out
xchg
xor
sahf
and
and
push
xor
push
mov
call
jno
mov
and
inc
int
xor
insb
cmp
mov
imul
inc
ss
xchg
mov
or
pop
mov
or
sbb
js
aas
add
loop
inc
fistpll
mov
pop
ret
repz
orb
push
xchg
dec
inc
fdivrs
and
xor
sbb
xor
inc
icebp
imul
xorb
inc
cmpsl
or
rcrb
cmp
sti
xchg
pop
push
imul
in
fs
xchg
iret
dec
xchg
push
int
or
mov
call
push
push
mov
test
fistpl
int3
lds
cmp
or
iret
cmp
pop
in
mov
jecxz
xchg
cmpsb
arpl
or
imul
pusha
dec
sub
or
je
in
shll
push
mov
xchg
dec
sbb
mov
cmp
xorl
mov
or
xlat
test
out
dec
lret
aaa
shlb
lret
je
sahf
lods
ret
icebp
mov
sub
dec
ror
jmp
adc
ficoms
mov
sub
push
scas
je
pop
mov
inc
fstpt
add
daa
les
popa
jmp
in
popa
jp
add
mov
fcmove
pop
mov
popf
mov
add
pop
mov
repnz
push
jmp
mov
pop
add
jno
lods
or
movsl
ficoms
sub
pop
xor
in
adc
stos
jns
sarl
jp
dec
push
loopne
dec
shrl
in
sub
or
mov
mov
xchg
push
inc
push
dec
or
dec
xor
push
fcmovbe
call
jns
xor
into
adcb
rol
lret
jnp
fistpll
ficoml
mov
andb
sbb
pushf
lea
sbb
jns
add
fnstsw
es
pop
mov
push
lds
rolb
aad
sub
add
jl
inc
xor
dec
cmp
into
sbb
fimuls
jl
daa
push
pop
or
outsb
fucomip
fistpll
scas
mov
mov
out
imull
xor
shrl
icebp
stos
enter
pop
stos
test
ja
and
cmpsb
mov
lds
sbb
pop
cmpsl
pop
cwtl
add
sub
lret
shrb
icebp
push
fdivl
xor
popa
lock
pop
sbb
sub
or
clc
int3
cltd
pop
daa
cld
sarb
stos
push
repz
sbb
mov
scas
popl
cli
xchg
or
push
aam
ret
xorb
clc
adc
mov
or
cli
fcoml
lods
aas
push
push
rclb
pusha
cmp
push
fisubrs
mov
int
sub
js
sahf
xchg
sar
je
push
adc
cmpsb
inc
js
aas
pop
jbe
sbb
aaa
adc
lods
sub
dec
adc
dec
jae
xor
aad
jmp
dec
jo
arpl
mov
and
test
into
add
rorb
inc
jae
adc
sub
int
jl
addr16
xchg
mov
jns
outsl
xchg
push
cli
mov
leave
out
push
cmp
test
xor
test
bound
jp
inc
enter
out
push
sbb
and
loopne
xchg
push
popa
shll
xchg
xor
lahf
mov
in
lret
cli
mov
aam
jl
jno
int
sub
std
out
mov
int3
es
rorl
test
mov
dec
test
or
inc
cli
popl
fwait
bound
jge
lds
push
add
or
and
mov
dec
inc
push
mov
mov
fistpll
adc
push
and
or
popa
adc
stc
jnp
cmc
addr16
inc
cmp
lret
outsb
shlb
cmpsb
add
dec
inc
fmuls
sub
shl
testb
jp
cmp
sbb
xchg
mov
jmp
mov
lret
movsl
lahf
std
cltd
std
xor
gs
xchg
adc
push
dec
scas
xor
jmp
das
sub
out
add
loope
cmp
cmc
lds
sbb
dec
pop
lret
jle
dec
out
jge
pop
ret
lret
sbb
insb
or
jno
incl
aaa
cld
shrb
dec
push
int3
xchg
sar
jp
sub
cmp
push
add
xor
pop
mov
add
sub
sarl
ja
cmp
sub
lcall
jne
fistpl
mov
push
in
loope
or
inc
test
call
stos
pop
dec
jp
and
cmpsl
outsb
call
xchg
adc
shlb
inc
or
xchg
sbb
sub
sub
aam
mov
sub
cmp
jmp
orb
mov
shrb
test
jae
jno
or
and
xlat
push
push
rcrl
imul
shlb
iret
xchg
test
movsb
gs
mov
inc
sub
arpl
jae
add
jp
dec
xor
stos
sarl
sub
cli
mov
sub
arpl
jae
add
jp
dec
xor
stos
jecxz
orl
cli
mov
sub
xchg
or
add
jp
dec
fistpl
stos
mov
sub
cli
mov
sub
je
fwait
test
mov
movsl
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
xchg
pushf
js
dec
mov
pop
int3
dec
xchg
sbb
sbb
cs
test
mov
fwait
push
mov
mov
or
insb
push
call
fmuls
mov
xchg
cli
test
loopne
pop
aad
lds
out
add
pop
fwait
inc
xchg
dec
stos
arpl
adc
pop
cld
adc
push
loopne
rorb
fists
inc
in
rcrb
fs
mov
adc
adc
sbb
xor
test
mov
or
mov
adc
in
jle
cmpb
scas
in
push
gs
jl
ret
push
mov
sbb
pop
test
push
jmp
repz
out
pop
je
sub
pusha
and
test
xchg
lret
insb
jge
nop
cmc
sbb
fstpl
in
sbb
jecxz
cmp
cmp
out
pop
mov
insb
test
vmulsd
bound
push
mov
repz
cmp
inc
mov
pushf
mov
cmp
shl
cwtl
adc
fsubs
inc
insb
mov
cmp
js
or
jbe
pop
mov
out
popa
xchg
jge
scas
sbb
pop
mov
cmp
or
sbb
mov
mov
or
lea
imul
jl
in
scas
aas
leave
sbb
in
or
sbb
sbb
sub
cmp
dec
test
mov
mov
js
dec
mov
cmp
or
sbb
sbb
sub
cmp
dec
test
mov
mov
scas
cmc
jmp
je
mov
sbb
movsb
push
and
outsl
nop
shrb
in
test
sbb
mov
aad
cld
in
test
pop
repnz
xor
lret
jg
popf
icebp
stos
testl
dec
cmp
or
rcll
mov
push
out
repz
pusha
addl
adc
mov
push
inc
xor
ret
test
or
jno
inc
lds
mov
adc
out
jae
jle
filds
cmp
lods
or
sub
mov
nop
jbe
in
jbe
mov
inc
jae
loope
jmp
sub
jle
dec
xchg
enter
and
push
test
mov
push
xchg
add
jb
test
rcl
jl
addr16
jns
add
iret
fisubl
sub
push
mov
popa
lds
popa
and
adc
or
fsubp
fwait
js
jp
out
jmp
repnz
push
or
movsb
mov
sar
push
adc
jg
ficomps
xor
mov
scas
push
mov
xchg
or
test
xor
loop
dec
cmc
add
rcr
mov
lods
mov
add
insb
loope
push
cmp
insb
adc
or
jb
nop
pop
jl
jns
lds
inc
daa
push
lahf
js
mov
pusha
cmp
dec
lods
xlat
enter
sbb
xlat
fwait
mov
or
lcall
int3
pusha
cltd
out
int3
lods
pop
into
adc
sub
and
js
adc
lret
add
sub
and
das
jge
mov
jl
loopne
stos
lods
jle
nop
pop
popf
pushl
ret
add
mov
test
push
jg
out
ds
xor
rcll
les
mov
mov
adc
ljmp
cmp
lods
push
sub
ret
adcb
repz
movsl
sub
outsl
imul
pop
popa
das
dec
jno
mov
inc
cltd
xor
mov
inc
jb
fcomi
jl
scas
icebp
xlat
sbb
loope
sbb
push
push
mov
inc
mov
or
and
sbb
aad
stos
insl
fs
cmpsl
bound
cmovl
out
ss
mov
es
test
addb
loope
loope
dec
pop
or
imul
lret
jl
shlb
cltd
out
out
push
pop
outsb
and
repnz
mov
adc
fbstp
gs
pusha
inc
cmpsl
leave
sti
xchg
movsb
pop
cmp
inc
adc
dec
pop
jmp
or
mov
and
cmpsb
push
stos
mov
vmaxss
fiaddl
pop
or
rdmsr
xlat
mov
imul
leave
pop
lock
fiadds
cmp
cmp
push
mov
cltd
pop
sbb
cmp
fcompl
movsb
in
iret
call
ficomps
ret
sarb
pop
push
stos
cwtl
addr16
mov
iret
stos
lods
fwait
imul
lahf
mov
add
push
sbb
jnp
mov
nop
cld
push
jno
icebp
sub
adc
mov
add
mov
pop
mov
adc
sub
mov
jns
loop
or
ds
sbb
out
cmpsl
ja
push
rcrb
mov
arpl
jae
xchg
sbb
test
or
insb
cs
or
mov
sub
test
xor
clc
mov
fsts
pop
dec
push
ret
cltd
mov
test
jl
stos
mov
xor
lods
push
push
mov
bound
xchg
lahf
pop
insb
mov
mov
cmp
test
in
dec
icebp
fistps
or
leave
clc
sub
sbb
fldenv
push
xchg
iret
fldcw
cwtl
add
mov
mov
in
sbb
push
sub
sbb
inc
push
popf
test
in
sub
or
add
adc
repz
and
and
pop
sti
outsb
sbb
xchg
lcall
inc
popa
pop
pop
add
scas
push
mov
cwtl
and
addr16
icebp
dec
scas
outsb
cltd
xchg
hlt
adc
aas
sub
xchg
dec
pop
xor
stos
or
shl
inc
ja
dec
mov
or
iret
add
xchg
ja
push
jnp
addl
push
cmp
lahf
mov
imul
daa
pop
sbbb
xchg
push
dec
imul
sarl
push
jg
outsl
scas
lods
dec
ret
ss
into
das
pop
stos
shr
push
repz
cmc
mov
pop
call
das
not
mov
pusha
mov
cld
and
mov
ret
sarb
mov
inc
push
and
popa
add
mov
jo
push
mov
hlt
xlat
fdivs
addr16
push
cmp
pop
sbb
fstl
xor
cmc
sbb
xchg
or
pop
std
push
mov
in
call
pop
aaa
add
lret
dec
push
adc
pop
dec
addl
addr16
and
push
pop
sahf
sub
stos
lods
jp
popa
pop
push
stc
xlat
fsubl
lods
rcll
jbe
add
push
push
int3
pop
mov
andl
or
cwtl
shl
xchg
imul
out
fists
loop
insb
sti
data16
and
lcall
mov
sub
mov
lcall
jecxz
cmc
ret
and
mov
mov
enter
ret
push
nop
popa
or
scas
in
push
mov
hlt
in
jbe
jae
adc
stos
subb
sub
or
test
orb
dec
repz
dec
jo
loope
addb
lock
enter
jo
cwtl
cltd
xchg
stos
sub
rcr
inc
ret
xlat
aad
adc
lahf
fwait
cld
xchg
push
mov
xchg
movsl
outsb
inc
cmp
cmp
cmp
int3
hlt
fistpll
jl
push
pop
rorl
cltd
adc
outsl
shlb
enter
or
add
mov
call
jbe
addr16
mov
add
or
xor
repz
ret
or
pop
lock
cmovo
pop
mov
or
push
mov
popa
or
outsb
sahf
mov
jne
mov
jne
es
xorl
rol
xchg
inc
xlat
inc
lock
sbb
cmp
testl
push
inc
adc
dec
push
bsr
sbb
and
dec
xchg
cmp
push
icebp
fstpl
push
jp
add
mov
dec
rorl
lods
clc
pushf
roll
jbe
test
inc
jmp
mov
pop
lcall
xor
addl
mov
stc
and
lret
lret
shrl
cmp
fs
ds
test
jno
lock
inc
cwtl
frstor
mov
pusha
rclb
inc
fsubrl
adc
cmpsl
inc
xchg
cltd
xor
xor
rcrb
insl
add
dec
inc
pop
cli
dec
pop
loop
cmp
fs
mov
js
jno
testl
sarl
mov
bound
mov
dec
pop
test
push
cmp
fidivrs
lret
or
pop
pop
popa
negb
jnp
add
cwtl
push
stos
ss
movsl
hlt
mov
stos
or
xor
clc
xor
sbb
push
arpl
dec
sub
out
imulb
sub
and
daa
in
lea
pop
sti
outsl
jne
sub
sbb
xor
gs
jb
jp
jne
xor
lock
adc
or
jp
cmp
lods
fs
pop
ja
ficoms
enter
mov
call
popw
inc
repz
imul
push
cld
sub
inc
jmp
sahf
mov
addr16
mov
cmp
adc
movsl
jb
ljmp
sahf
mov
inc
dec
xchg
push
sbb
loope
subb
push
jbe
sti
adc
adc
push
mov
mov
xchg
out
add
mov
mov
in
dec
out
aad
jno
cmp
icebp
push
push
idivb
fimull
cwtl
sub
push
int
shr
leave
je
cli
pop
mov
das
ljmp
imul
cli
mov
mull
shl
sbb
psadbw
pop
imul
mov
test
pop
push
or
aam
loopne
cmpsb
pop
popa
adc
and
into
pop
cmp
stos
aas
clc
xor
fst
or
mov
mov
jecxz
fdivrl
or
repz
push
push
or
mov
orl
or
cmp
stos
lock
push
shlb
mov
es
dec
jmp
and
test
leave
and
fbld
call
pop
push
sahf
xchg
jg,pt
cmp
fisubrs
imul
and
adc
pop
xchg
loopne
in
sbb
dec
scas
sub
inc
lcall
outsb
adc
loopne
mov
push
mov
dec
shrl
mov
hlt
jmp
pop
mov
stos
sub
adc
scas
aad
and
and
shll
sahf
dec
pop
mov
clc
mov
cmc
and
push
xchg
stos
sub
inc
sbb
data16
ret
jecxz
cld
or
add
imul
pop
stos
mov
fs
aam
icebp
mov
addr16
imul
roll
push
ss
xchg
sbb
xchg
push
loope
sbb
ja
and
lahf
mov
icebp
gs
adc
push
faddp
enter
adc
lock
push
jnp
ja
jecxz
cwtl
cmpsl
jge
fldcw
insb
push
mov
jae
inc
jl
nop
inc
jae
sbb
out
add
jp
mov
lahf
lret
dec
lcall
outsl
jp
dec
mov
int
rcl
jg
xchg
xchg
rolb
mov
test
pop
fwait
cmp
inc
ljmp
push
lods
mov
jmp
sbb
in
test
jl
aad
push
or
jecxz
inc
test
js
inc
jecxz
lahf
call
jb
sbb
pop
insl
push
fisubrs
sbbb
push
mov
mov
mov
aad
cmp
pop
movsb
adc
add
or
ds
jae
cmc
jmp
shrb
in
dec
jecxz
jle
rorl
call
jb
xlat
jmp
xor
mov
cmc
and
xchg
push
and
movsb
push
idivb
imul
push
inc
cmpsb
or
push
popf
mov
push
mov
fmull
pop
ret
icebp
mov
pop
inc
xchg
lock
das
lock
dec
xchg
xchg
xlat
aad
lret
lods
xchg
mov
aad
pusha
nop
popa
xor
pop
and
test
lods
jp
and
popl
aas
les
cmp
jl
into
mov
lret
pop
lea
fsubrs
dec
lahf
inc
rorb
add
fimuls
inc
cmp
mov
jnp
in
dec
adc
jmp
loop
mov
fwait
sbb
cmp
xchg
sub
sub
mov
jecxz
pop
icebp
cwtl
dec
mov
je
test
loope
nop
inc
inc
lahf
insl
adc
mov
cwtl
or
outsl
ja
pop
in
xchg
jg
mov
mov
fldt
test
insl
add
test
in
out
pop
shrb
outsb
mov
hlt
cmp
inc
mov
out
lds
jge
mul
pusha
xchg
das
xchg
xchg
and
movsb
pop
mov
push
and
add
ja
add
jmp
mov
sti
test
add
sub
clc
dec
mov
xor
and
push
pop
add
ret
or
inc
sub
add
popa
sub
pop
stos
jmp
or
jecxz
dec
mov
bound
jp
cwtl
jns
push
mov
inc
pushf
andl
mov
test
into
jno
mov
sub
mov
aad
js
dec
fidivrl
xchg
icebp
push
clc
jbe
add
inc
mov
jae
mov
xor
mov
sub
scas
iret
insl
and
loop
mov
sub
mov
dec
stos
or
aam
clc
jmp
mov
fs
rolb
sahf
int
or
inc
sbb
cmp
fiaddl
push
fidivl
mov
xor
xchg
adc
xor
sbb
sbb
data16
in
inc
cwtl
cmp
ljmp
out
mov
je
jno
cmp
lret
ret
cmpsb
pusha
xor
add
in
pop
fists
and
cmp
jne
push
icebp
cmc
out
repnz
xor
ja
cmp
lret
mov
mov
es
sub
and
jecxz
rclb
int3
outsb
push
outsl
mov
cmp
cmpsb
daa
daa
notb
push
jmp
outsl
push
xchg
dec
or
and
ljmp
mov
ret
adc
aas
inc
sub
xlat
cmc
xchg
stos
push
aam
shlb
xor
jle
jb
inc
cmovs
pop
fsubl
sbb
ljmp
or
shrb
out
sub
mov
pop
dec
inc
insb
lock
jg
mov
cli
adc
and
cltd
jp
push
sub
add
sub
cmpsl
pushf
inc
pop
push
aam
lods
and
das
lods
push
mov
sub
inc
sub
and
popf
sbb
icebp
lds
jle
push
scas
pop
aaa
ret
icebp
bound
adc
mov
andl
das
mov
popf
int
in
push
and
addr16
cmp
cmp
dec
lds
ss
std
dec
jnp
mov
mov
fidivl
rclb
inc
mov
mov
mov
mov
jle
insb
loopne
jb
test
das
negb
in
pop
mov
sub
jns
gs
sub
divps
sarb
and
jmp
mov
cmp
es
aas
push
out
imul
lock
xchg
dec
jg
xchg
fildl
fisttpll
stos
mov
test
inc
movsb
inc
fsubl
and
sub
in
xor
push
xchg
sub
or
sub
sub
jno
sbb
jmp
mov
xchg
call
rclb
inc
dec
and
sub
imul
push
push
push
addb
mov
lahf
dec
sbb
faddl
inc
jnp
mov
addr16
xor
mov
lea
mov
fbstp
fldt
jle
inc
sub
dec
std
push
bound
jmp
rcll
fsubrl
call
push
inc
cs
pusha
fnstcw
sub
in
cld
into
sbb
mov
and
add
or
cmp
out
push
shlb
repz
sti
jbe
pop
xor
and
cmp
addr16
inc
cmp
push
bound
loopne
xor
push
add
xor
clc
iret
mov
push
inc
pop
dec
xchg
sub
cltd
addl
dec
fistps
lahf
and
mov
fcoms
out
sbb
imul
xchg
clc
sahf
out
aas
scas
jge
xchg
cmc
and
mov
sub
dec
mov
enter
out
inc
mov
loopne
sahf
xchg
mov
aad
mov
pop
xchg
leave
add
outsb
stc
xlat
xchg
push
pusha
dec
pushf
mov
or
les
jle
rorl
int
ds
ret
enter
int
sbb
shl
adc
cltd
leave
add
loope
inc
popl
sahf
cltd
dec
xchg
aad
mov
fwait
cmp
fucomp
divb
jle
shrb
dec
out
sub
ds
adc
pop
ds
pop
out
xlat
dec
sbb
popa
int
scas
jl
mov
imul
ds
push
fsub
fdivrs
outsb
subb
or
in
fwait
mov
jge
into
loope
and
mov
push
or
ret
pop
in
dec
in
inc
pop
or
xlat
in
repz
shrl
or
jbe
loopne
jns
in
lods
dec
xchg
mov
dec
inc
packssdw
mov
es
rorl
imul
cmpsl
out
pop
cmc
das
std
pusha
notl
les
sub
fisttps
fs
fcoms
inc
and
ds
fcmovu
xor
dec
cld
xchg
xor
xor
jnp
data16
inc
inc
movsl
clc
pop
fcompl
sbb
dec
jb
jo
adc
fstpl
cmpsb
rcll
lods
jb
icebp
cwtl
fisubrs
dec
gs
aaa
aas
out
mov
repz
adc
decl
pop
pop
push
push
xchg
loopne
incb
or
jnp
mov
jecxz
test
pushl
les
jbe
int
cltd
push
mov
or
cwtl
jge
mov
add
clc
xchg
cld
divb
sbb
fmull
jae
mov
xchg
pop
xchg
repz
mov
mov
fdivrs
push
dec
pop
mov
mov
push
inc
inc
cs
push
cld
xchg
addl
outsl
sti
xor
into
xor
inc
dec
rolb
dec
insl
inc
mov
xchg
inc
rcll
outsl
fwait
jb
outsl
inc
ficoml
cmp
dec
in
mov
and
sub
or
inc
cwtl
xchg
mov
sub
lods
out
pusha
rorl
jnp
push
cmp
mov
xchg
fs
ds
scas
adc
push
cmp
or
inc
mov
and
aad
clc
push
pusha
xchg
out
lret
xchg
test
movaps
aaa
adc
dec
out
jg
cli
inc
xchg
pop
clc
adc
andl
xchg
imul
and
mov
sbb
jne
arpl
or
jo
lret
jg
adc
mov
and
int
add
mov
fwait
mov
jo
ja
mov
xchg
inc
push
lods
cmp
cmpsl
jnp
jle
fidivs
daa
popa
xor
jp
lcall
leave
pushf
cli
imul
pop
cld
ret
mov
or
lret
loop
aam
int
cmpsb
testl
sbb
cmp
cmp
fs
shl
and
mul
inc
mov
jp
cli
xchg
xlat
clc
xor
nop
jmp
sbb
popa
popf
daa
shrl
jns
mov
arpl
imul
in
negl
fwait
pop
jno
popf
add
xlat
pop
cmp
or
jb
push
inc
shlb
pop
jl
pop
dec
xchg
jl
jo,pt
pop
pop
outsb
test
loopne
pusha
xchg
jmp
das
clc
xchg
nop
test
imul
outsb
icebp
mov
fimull
mov
lss
lahf
out
mov
fistpl
jge
inc
lods
push
sbb
inc
out
pop
lds
leave
sahf
jo
inc
cmp
xchg
or
push
push
or
andb
push
outsb
xchg
pop
mov
shlb
add
std
sbb
in
xchg
into
outsl
stos
icebp
in
inc
xchg
sub
in
sbb
fistl
pop
in
or
pop
repnz
jle
and
in
adc
mov
ds
out
aad
push
lock
xchg
adc
data16
jl
out
aaa
orl
pop
mov
ds
dec
push
cmp
sub
xor
xor
subl
test
es
leave
inc
mov
lods
fucomip
jp
pop
mov
adc
mov
mov
rolb
mov
cmp
shl
cmp
int
jbe
scas
fsubs
inc
mov
je
mov
pop
and
jg
push
mov
test
aaa
cli
inc
lea
xor
lods
out
and
shll
test
inc
lds
dec
roll
das
aaa
insl
es
cmpsb
mov
cwtl
push
add
or
adc
dec
add
out
adc
sub
xor
jge
mov
sbb
push
std
sub
test
cld
popa
leave
adc
cltd
negl
outsl
icebp
sbb
hlt
mov
outsl
push
jge
adc
mov
mov
xorb
pop
mov
xchg
push
and
mov
xchg
cld
mov
add
mov
and
out
nop
xchg
lds
xor
cwtl
pop
int
mov
sbb
or
jbe
bound
dec
jo
hlt
jg
mov
xor
das
enter
and
or
mov
in
dec
and
mov
jmp
rcl
scas
jge
cwtl
outsl
std
mov
dec
std
xor
lret
aam
xor
lea
add
rcll
inc
cmp
shr
pop
cmp
imul
psubq
or
ret
aam
sbb
adc
mov
jae
cmp
jg
lock
xchg
lds
mov
in
cmp
ret
dec
es
ss
pop
aad
pop
mov
pop
stc
test
sub
lds
mov
xor
adc
add
rcrl
dec
xor
into
pop
mov
sbb
test
and
nop
jbe
inc
nop
add
pop
jg
pop
in
ljmp
aas
and
pop
int3
sub
cmp
or
sbb
sbb
sub
cmp
dec
test
mov
mov
js
dec
mov
cmp
or
sbb
sbb
sub
cmp
dec
test
mov
mov
xor
fcoml
or
sbb
sub
cmp
dec
test
mov
mov
dec
mov
cmp
sbb
pop
jecxz
xchg
cmp
cmp
aam
xchg
ja
addr16
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
jae
arpl
adc
and
popf
arpl
push
repz
jecxz
xchg
and
sti
push
jecxz
shll
arpl
xor
ret
jge
inc
jecxz
incl
adc
arpl
jae
arpl
xor
jae
pavgb
jg
fnsave
mov
ret
or
xor
push
xchg
mov
pusha
mov
cmp
fwait
call
cmp
cld
incl
mov
jmp
dec
out
adc
cmp
sub
cmpsl
sahf
cmp
out
xchg
mov
repnz
sbb
cmp
rolb
xor
mov
and
pop
sbb
pop
xchg
xor
mov
add
sub
cmp
ja
add
mov
push
adc
add
dec
fwait
and
mov
xor
rol
addl
pop
jbe
jecxz
sub
and
adc
push
cmp
mov
fwait
nop
push
or
mov
and
push
mov
mov
push
jecxz
shll
arpl
xor
and
repz
jecxz
xchg
cmp
lret
xchg
add
jbe
push
jne
ja
stos
and
add
dec
out
lret
repz
push
or
jg
dec
lcall
inc
dec
cwtl
and
inc
std
inc
andb
int3
adcl
addb
cmp
andl
shll
push
repz
jecxz
xchg
and
repz
jecxz
shll
arpl
xor
ret
push
repz
jecxz
xchg
and
repz
daa
sub
pushf
mov
repz
rcrb
mov
xchg
or
mov
stc
push
mov
lea
mov
sub
jns
lahf
aad
in
xor
inc
fistpl
divb
roll
xchg
inc
lahf
jnp
mov
xor
push
add
das
lret
and
mov
scas
stos
call
fdivrp
iret
fistps
pop
cmpsl
cs
cmp
faddl
and
pop
dec
out
ret
lcall
lea
popa
jo
dec
or
push
arpl
sub
je
xchg
test
stc
mov
push
cmp
adc
jecxz
nop
addr16
negl
mov
lock
test
push
or
in
push
sbb
stos
iret
leave
in
or
mov
inc
in
xlat
loopne
sub
dec
test
sub
std
push
test
xor
cmpsl
sarl
filds
sub
fistps
les
stos
cmp
cs
push
inc
dec
aaa
mov
ror
and
cmp
and
nop
repnz
jmp
les
sti
jg
addr16
xchg
inc
fstl
add
push
movsb
xchg
faddl
jo
xor
push
cmc
test
addl
aas
sub
mov
outsl
shl
ds
insl
faddl
arpl
mov
ret
push
call
aaa
fucomip
dec
lods
je
les
pop
pop
pop
mov
into
lds
frstor
push
jge
xchg
rolb
bound
mov
sarb
sti
in
fdivrs
test
dec
gs
popf
stos
fisubrl
inc
lds
cmpb
fcoml
imul
cmp
xchg
adc
add
insb
call
mov
mov
sbb
sub
cmpb
xchg
mov
jnp
mov
mov
aam
xor
cmp
ja
pop
adc
movsb
lods
lods
ja
int
pop
fwait
sbb
pop
cmp
dec
sub
lods
lea
xor
and
sahf
ds
shr
cwtl
pop
mov
ljmp
jno
lcall
jno
cmp
mov
add
das
iret
sahf
push
fwait
dec
xor
in
xor
nop
and
fldln2
mov
sub
test
rorl
lcall
movsb
jns
push
dec
fnsave
sbb
rclb
mov
xchg
data16
push
push
test
sub
sbb
xlat
adc
adc
cmc
push
in
or
pop
or
cmp
stos
sbb
loope
cmp
loopne
sbb
test
pop
sahf
in
call
sbb
and
xchg
xor
xor
push
sub
cmc
jg
ds
push
mov
mov
ret
mov
in
aaa
bnd
stc
subl
fisttps
rcl
jno
xor
xchg
stos
int3
das
mov
fs
push
jmp
insl
movl
ja
mov
aas
mov
jnp
push
xlat
push
out
jno
mov
xor
push
or
cmp
out
scas
sub
clc
or
and
xchg
fnstenv
jge
repnz
sbb
cmp
jo
call
jge
movsl
mov
mov
cs
aas
leave
in
jge
out
in
imul
shl
fmul
cmp
mov
inc
in
jo
push
mov
sub
out
stos
ds
das
pop
mov
jle
push
test
xchg
ret
cs
dec
sbb
and
push
mov
scas
popa
cmp
pushf
push
push
pop
mov
push
dec
ja
push
adc
in
in
push
jp
lea
push
fldenv
push
rorl
pushf
lcall
inc
int3
fsubrs
inc
mov
es
int
sub
dec
pusha
mov
sahf
data16
dec
inc
and
and
dec
xor
repnz
fwait
inc
dec
mov
jno
or
lods
lea
xor
int3
stc
mov
mov
loope
xchg
sti
aas
jl
fwait
inc
cmp
xor
movsl
xchg
pop
cmp
fistl
scas
mov
movsl
ret
sub
std
jecxz
out
fstpt
mov
inc
aad
imul
stos
mov
push
jno
inc
dec
jae
dec
or
pop
test
inc
enter
filds
insl
mov
mov
rorl
inc
mov
jns
idivl
lahf
inc
enter
jnp
cli
sbb
ljmp
adc
cmp
fstps
pop
push
cli
ja
or
mov
mov
add
add
cld
push
xchg
dec
adc
pop
and
xor
xor
out
and
sbb
sahf
xchg
or
aas
int3
fwait
rcrl
mov
push
in
arpl
mov
ret
or
jns
fbld
ficoms
sahf
stos
mov
add
adc
mov
jnp
inc
stc
mov
jle
or
jno
or
mov
pop
ljmp
inc
lods
adc
pushf
aas
int
int3
push
cs
ljmp
jnp
pusha
pushf
addr16
xchg
push
ret
rcrb
nopl
fsubrp
popa
lea
mov
jns
and
xor
cwtl
sbb
cs
imul
iret
push
pop
add
jecxz
sbb
lock
push
test
dec
cwtl
cmp
mov
les
ds
mov
and
leave
sbb
push
mov
mov
dec
xchg
pop
shl
mov
xchg
sbb
ja
test
mov
arpl
and
pop
jbe
imul
xorb
iret
dec
mov
mov
pop
frstor
loop
sbb
adc
dec
xchg
sbb
shll
add
test
mov
xor
cmp
arpl
arpl
jg
pop
add
mov
call
xor
adc
cmpb
test
lcall
pop
scas
jbe
xor
mov
lahf
scas
dec
enter
je
cmp
sbb
and
aam
and
out
andl
xchg
frstor
enter
test
jge
rcrl
aad
int3
xchg
pop
fildll
push
sbb
nop
test
aam
test
out
mov
push
outsl
or
dec
mul
stos
adc
or
inc
xor
jae
inc
jno
jl
in
icebp
adc
jl
cmp
sbb
pop
inc
pop
mov
in
shrl
and
sarl
pop
cwtl
out
or
push
mov
pop
cs
pop
mov
dec
or
dec
xor
shll
jl
inc
jno
xchg
les
sbb
ljmp
ja
cmp
in
xchg
inc
decl
cmp
pop
arpl
mov
lds
mov
rclb
lret
enter
mov
pop
int
aaa
add
popf
cmp
xor
pop
into
xchg
mov
pop
pop
push
int3
pop
shlb
lock
and
leave
mov
mov
push
push
aaa
xchg
jo
mov
push
inc
push
cmpsb
sub
adc
in
lods
dec
cmp
and
pusha
insl
outsl
or
in
ss
mov
test
add
pop
out
add
mov
push
addb
mov
cmp
or
mov
pop
popa
xchg
jae
push
sbb
xchg
fs
movsl
jmp
and
test
test
xchg
sbb
sbb
dec
mov
mov
push
lds
inc
popf
outsb
aas
mov
sahf
sahf
mov
dec
in
inc
push
push
or
fistpll
outsb
arpl
movsl
dec
enter
rolb
adc
sbb
or
dec
clc
dec
sbb
jns
je
loope
and
lcall
inc
adc
leave
inc
or
aam
and
fwait
ljmp
cmpl
cmp
pop
gs
inc
or
or
cmp
cwtl
add
xor
cld
inc
hlt
sbb
outsl
cwtl
out
xor
xor
adc
popf
jmp
or
cmp
out
pop
aam
adc
jl
out
adc
mov
sub
test
push
jae
popl
icebp
mov
cmpsb
aas
ja
pop
popa
mov
rcr
jns
or
rcrb
es
adc
push
test
data16
mov
xchg
test
dec
daa
andl
dec
push
stos
stc
sub
loope
jno
mov
cli
jg
lds
std
push
in
sub
adc
jnp
xchg
push
inc
or
pop
mov
push
icebp
dec
push
add
pusha
dec
jne
or
adc
das
gs
mov
add
test
mov
add
sub
sub
dec
mov
jmp
jns
cmp
adc
scas
mov
push
aaa
push
sbb
xchg
push
out
pop
dec
jb
int3
das
mov
add
sub
pop
bound
or
icebp
mov
jae
xlat
cwtl
mov
inc
rcll
xor
roll
jl
mov
mov
or
mov
mov
lds
add
fwait
es
sbb
mov
mov
ror
xor
enter
loope
adc
mov
dec
cmp
scas
mov
mov
push
push
dec
jl
jle
rolb
test
adc
adc
dec
movb
leave
jo
add
popa
icebp
clc
lret
cmc
xchg
loopne
mov
lods
das
mov
push
out
ljmp
xchg
int3
xchg
fs
pop
stos
mov
pop
inc
jbe
xlat
xchg
lret
pusha
mov
pop
or
add
and
xchg
xor
repnz
sarl
xchg
xchg
and
or
and
xchg
int3
xor
mov
inc
in
addb
sub
outsl
sub
cmp
mov
push
test
or
divb
mov
cli
push
push
cmc
sahf
out
mov
sub
sbb
test
stos
mov
daa
sbb
jae
add
or
scas
out
imul
push
add
xor
int3
inc
loop
stos
lret
call
stc
xor
mov
inc
dec
sti
push
xlat
fidivrl
add
xchg
mov
and
mov
jmp
rorb
adc
or
jle
mov
out
lds
es
jnp
shl
mov
push
into
and
mov
aad
or
loopne
adc
jnp
sete
insb
jb
outsl
loop
add
fbstp
and
mov
jle
dec
mov
xor
lds
loop
lds
arpl
jg
add
repz
pop
jae
push
jmp
icebp
dec
jnp
mov
addr16
shrb
mov
arpl
cmp
fadds
out
push
inc
mov
out
lcall
ds
movsl
cmp
es
sub
test
mov
or
and
bound
or
mov
fs
lahf
ret
call
popf
sub
sbb
cmp
push
cwtl
push
cmpsl
inc
xchg
cmpsl
inc
stc
fwait
cld
push
cs
pop
aam
sbb
mov
pop
dec
jb
mov
aad
popf
mov
mov
enter
cmp
and
xchg
add
xchg
xor
xor
push
test
push
out
xor
push
subb
jno
fnstsw
cld
lds
in
fs
and
mov
aaa
shlb
lcall
ss
sbb
xchg
add
mov
sub
js
pop
std
mov
cwtl
dec
enter
sub
mov
mov
pop
cmp
jecxz
add
jnp
and
ds
stos
xchg
ret
push
add
mov
mov
stos
push
jnp
xlat
cmc
gs
mov
loop
adc
cmpsb
xorb
sti
xor
inc
bnd
pop
std
aaa
pop
jne
les
sbbb
lods
mov
cmpsl
sub
jp
popf
adc
mov
mov
ret
push
adc
inc
stos
adc
cltd
repz
loopew
push
inc
aad
dec
lds
jae
shl
movsb
call
repz
andl
loopne
mov
aad
icebp
inc
pushf
rorb
push
daa
mov
xor
or
adc
nop
fimull
push
jecxz
lcall
xchg
movsb
stos
add
outsb
sub
adc
pop
xchg
repnz
mov
js
push
mov
cwtl
sub
lret
inc
jnp
loopne
insl
jecxz
jnp
aam
or
cmp
fwait
or
cli
xlat
pop
and
leave
loop
stc
nop
insb
pop
movsb
cmpb
mov
push
int
nop
push
jmp
cld
enter
test
jp
sub
in
stc
xchg
sub
daa
out
add
filds
mov
pop
lods
in
cmpsl
jge
xorb
enter
aas
push
sub
scas
mov
xchg
push
fdivrs
push
flds
loop
or
pop
lret
iret
das
addr16
push
push
add
dec
jno
and
adc
mov
shlb
inc
lahf
inc
cmp
mov
das
insl
fnstenv
mov
fucomi
inc
mov
mov
adc
xor
movsb
daa
scas
dec
sub
movsb
int
shl
lcall
dec
push
sbb
cli
mov
ds
sti
cmp
psrlw
js
cli
cmp
scas
clc
jle
out
scas
cmp
sub
dec
inc
shll
push
lret
and
sub
sbb
adcb
jmp
pop
pushl
push
xor
xchg
pop
clc
mov
iret
xchg
mov
cld
push
xchg
repz
sahf
rep
inc
mov
sbb
jno
icebp
xchg
or
mov
xorb
popa
lret
pusha
pop
movsb
pop
lret
pop
inc
orb
imul
add
iret
out
push
jmp
push
pusha
orb
stos
jbe
adc
add
imul
es
test
xchg
clc
push
out
lods
sbb
int
out
jecxz
mov
std
inc
sahf
xor
popa
scas
insl
add
outsl
or
pop
pop
mov
mov
rcll
sub
test
push
mov
xchg
dec
sub
pusha
out
adc
lret
cmp
sub
push
lds
and
mov
nop
mov
dec
into
dec
gs
inc
add
test
inc
or
aad
mov
sti
mov
lea
ljmp
icebp
xor
nop
sub
xor
sub
divl
stos
inc
lods
inc
pop
inc
push
mov
inc
pop
test
in
push
xor
pop
pusha
inc
push
leave
lock
adc
std
lods
xchg
repz
adc
and
cld
xchg
sub
cmpsl
sti
lods
je
ret
test
jne
setno
test
loop
cmp
pushf
orb
data16
repnz
popl
mov
out
xchg
jecxz
mov
lcall
movsl
nop
and
mov
jb
mov
push
cmp
mulb
mov
adc
lret
outsb
cmpsl
popa
xor
cmp
mov
ja
push
pushf
arpl
inc
ret
adc
lock
sahf
or
scas
jp
fwait
or
sahf
mov
pop
std
faddp
pop
jns
imul
jl
xor
xchg
in
pop
fcomps
sub
xchg
mov
stos
sub
in
notl
push
xor
or
cmp
mov
push
ret
fimull
sub
mov
jbe
orl
sbb
xchg
sti
int
push
dec
pop
dec
lods
jb
jmp
hlt
test
stos
adc
aaa
mov
jnp
cld
js
pusha
xchg
movsl
orb
cltd
test
cli
jo
push
cmp
ret
pushf
ja
cmc
xchg
xchg
int3
sbb
xor
and
inc
shlb
ds
testl
mov
data16
xorb
sub
mov
scas
push
dec
dec
xchg
mov
xor
pop
sub
mov
pop
lret
fwait
add
xchg
adc
or
enter
ret
mov
leave
pop
inc
jl
mov
orl
mov
outsl
or
and
fidivrl
shr
shlb
pop
popa
xor
imul
xlat
or
push
cmpsb
jno
fucom
pop
negl
mov
add
sbb
in
inc
das
push
xor
lret
xchg
enter
repz
mov
data16
repz
dec
xor
push
inc
sub
daa
mov
test
xchg
je
sub
out
sbb
cs
add
clc
jle
sarl
fdivs
xor
popf
mov
dec
cmc
pop
stos
inc
lea
xchg
call
dec
cmp
sub
es
mov
cmpsl
lret
and
cmpsl
mov
mov
cmc
gs
ds
push
dec
add
jb
daa
xchg
dec
add
into
jns
cmp
sub
out
xor
cli
push
add
in
cmp
add
or
cmp
inc
imul
xchg
cmp
adc
xchg
test
outsl
push
rcll
stos
cmp
adc
cmp
lahf
mov
xlat
push
loop
add
mov
push
cmpsl
xorb
outsb
mov
add
clc
push
pop
daa
ja
pop
aaa
xchg
stos
outsl
sub
loope
push
out
sbb
mov
sahf
jns
std
cmp
jnp
lea
dec
mov
dec
aas
pop
xchg
sbb
sbb
sub
mov
shrb
adc
js
fwait
insl
push
mov
arpl
in
or
dec
leave
shrl
cmpb
and
leave
out
inc
shl
imul
sar
sub
push
and
in
cli
cmpsb
push
out
dec
mov
jmp
pop
aas
ret
rorb
push
inc
inc
sub
sbb
fsubl
mov
push
dec
jo
adc
lret
stos
pushf
lcall
sbb
in
add
in
inc
inc
jecxz
aaa
mov
fisttpll
jp
mov
pop
lock
lcall
movsl
mov
pop
cmp
fisttpll
jge
rcll
idiv
push
or
in
and
popa
lea
scas
jbe
jmp
fnstsw
sub
nop
jnp,pn
xchg
jnp
push
inc
mov
scas
pop
mov
insb
popf
stos
int3
jbe
pop
out
shrb
jecxz
mov
jbe
movsl
scas
and
fists
pop
int
push
xchg
xchg
fstpl
mov
sub
or
push
pop
mov
sbb
jecxz
inc
pop
mov
mov
into
and
in
adc
and
das
or
dec
and
movsb
adc
push
repnz
xor
clc
loope
xor
dec
leave
ljmp
jl
inc
mov
inc
pop
dec
std
fld
sub
dec
scas
ret
clc
fldenv
xor
icebp
cwtl
lahf
jge
aad
imul
in
inc
dec
movsb
adc
clc
push
cmpsl
sub
test
movb
dec
push
jo
jae
andb
mov
xchg
pushf
divb
xor
popa
fildll
scas
mov
sub
arpl
ljmp
mov
mov
ja
or
jno
push
mov
pushf
jbe
xor
mov
cmp
mov
jo
mov
add
sub
scas
cmp
or
arpl
lea
dec
mov
xor
xlat
hlt
and
push
jne
mov
jnp
pop
dec
push
in
pop
mov
rol
in
xchg
fdivs
lea
xchg
scas
lret
inc
lret
mov
rclb
loopne
roll
add
mov
leave
mov
cld
cmpsl
ja
ds
cmc
in
adcb
and
orl
xor
push
rorl
mov
mov
and
dec
addr16
add
loopne
sub
jno
xchg
or
lods
mov
push
out
pop
xchg
dec
push
loope
test
xor
out
xchg
jae
and
pop
stos
and
sub
addr16
loop
mov
mov
lock
mov
lods
jmp
xor
mov
inc
jp
mov
fldenv
stc
hlt
enter
mov
test
clc
popf
lea
pop
mov
subb
out
cmovb
mov
add
pop
inc
inc
add
inc
test
jl
jl
jl
adc
nop
dec
imul
or
insl
cmp
or
sti
cld
push
mov
and
cmp
cltd
aam
lods
mov
pop
scas
aam
mov
adc
imul
xor
ret
std
inc
rorl
jnp
pop
mov
into
jnp
outsb
pop
fcmovnu
mov
lods
xchg
cmc
scas
in
pop
adc
out
mulb
das
into
add
lret
or
insl
cmp
inc
jnp
fbld
adc
and
arpl
push
repz
jecxz
xchg
and
repz
jecxz
shll
arpl
xor
ret
push
repz
jecxz
xchg
and
repz
loopne
ret
jae
arpl
xor
ret
pop
repz
jecxz
xchg
cmp
jmp
iret
inc
pop
jae
arpl
xor
and
pushf
imul
sbb
pop
pusha
xchg
inc
mov
inc
mov
ret
jne
loopne
lock
adc
xor
arpl
xchg
inc
mov
xor
add
adc
loopne
lock
mov
andb
pusha
and
push
lds
repz
loopne
lock
adc
xor
sub
jo
xor
and
pusha
int3
xor
mov
xor
mov
in
or
fsubrs
fwait
mov
cmp
or
mov
fisttpll
mov
or
or
cld
fsubrp
dec
fcoml
pop
push
movsl
or
call
sti
lret
fadds
das
and
jge
test
add
int
mov
scas
in
push
mov
xorl
cmpsl
shll
and
loopne
loopne
dec
fdiv
xor
fcomp
sbbb
sub
dec
fwait
lock
add
adc
lock
rol
pop
ret
sub
xor
insb
pop
mov
fmuls
repnz
lcall
sub
sbb
pshufw
ret
xor
add
adc
add
mov
mov
jnp
inc
sbbl
and
data16
gs
push
mov
inc
hlt
arpl
add
cmp
pop
les
arpl
add
adc
xor
addl
xchg
add
or
push
repnz
nop
add
lock
sub
push
fbld
xor
add
adc
loopne
lock
and
xor
arpl
xchg
inc
mov
xor
add
adc
loopne
lock
and
xor
arpl
je
cli
movsb
pushf
fidivrl
dec
xchg
mov
cmpsl
sub
or
sub
into
je
pop
mov
aas
shlb
test
jg
inc
adc
mov
mov
xchg
xchg
fcompl
push
stos
mov
mov
dec
test
out
rcr
sub
ja
outsl
addb
xchg
jmp
das
lcall
jg
bound
leave
cltd
shll
leave
out
or
adc
xchg
inc
fcomp
enter
lret
and
into
mov
jbe
jne
sbb
and
arpl
icebp
pop
aam
dec
shlb
out
hlt
sbb
adc
cli
int
orl
xchg
sub
inc
call
lahf
dec
inc
sub
hlt
popf
mov
pop
stos
fiaddl
jecxz
dec
dec
ljmp
std
sub
sub
lea
ds
push
in
aaa
lods
sub
jns
sahf
push
add
add
stos
cmp
imul
dec
mov
inc
inc
stc
adc
cmp
cmovg
mov
rorl
addr16
inc
fxch
dec
sub
cwtl
fimull
ds
enter
pop
push
fisubrl
dec
mov
in
aaa
roll
jg
or
mov
sti
add
mov
jo
xor
and
call
bound
imul
in
test
insb
mov
loop
ror
sbb
xchg
pop
jnp
loop
adc
lahf
aam
addr16
lret
or
rcrb
std
iret
lods
and
or
lret
mov
and
sbb
jnp
pushf
and
rorl
popaw
stc
rclb
icebp
inc
lods
sub
adc
xor
addr16
sbb
mov
aad
xchg
mov
sti
sbb
sbb
adc
sti
jae
sub
adc
sbb
mov
push
aam
out
ret
cmc
lods
push
push
mov
xchg
mov
dec
and
cmp
nop
mov
mov
loope
jae
divb
pcmpgtb
sub
sti
repz
cmp
xchg
mov
sbb
shrl
mov
pop
out
fwait
add
jge
dec
ret
lret
pop
pop
test
push
loopne
dec
adc
int3
mov
and
fsubrs
xor
sub
pusha
insl
ret
sub
mov
or
inc
and
fidivrl
jns
aam
int3
loopne
subl
lcall
fs
pop
imul
adc
aas
lods
push
sub
sub
or
mov
popf
add
sbb
mov
jecxz
popa
negl
icebp
sbb
loop
dec
adc
repnz
push
not
int
dec
xchg
xchg
arpl
xor
jl
lock
sahf
andl
or
popf
in
lahf
movsl
inc
jp
fidivrs
dec
sbb
shll
addr16
push
xor
inc
loop
loop
rcll
xor
sub
fcmovbe
inc
loope
mov
test
dec
shll
cmpb
inc
xchg
arpl
cmp
or
repnz
mov
or
xchg
sbb
mov
add
mov
daa
fsubrs
fstpl
or
aam
rcrb
and
xchg
stos
and
push
pop
cmp
icebp
mov
sbb
or
hlt
sbb
cwtl
cwtl
mov
push
dec
inc
xchg
push
sbbl
cmp
sbb
cmpsb
cli
sub
push
push
sbb
int3
pop
adc
pop
shl
int
jns
or
dec
fldt
lds
ljmp
in
and
cld
nop
movsl
fldcw
ja
loop
sti
adc
cmpl
add
inc
push
es
and
ret
or
push
je
out
clc
adc
inc
imull
jne
dec
loope
jge
xor
imul
pop
xchg
aam
push
jg
jecxz
cwtl
cmpsb
inc
or
test
xor
shll
lods
jge
nop
mov
jns
loop
fimuls
mov
enter
xchg
jne,pt
xchg
int
js
mov
mov
cmp
cmpsb
out
outsb
movsb
dec
or
mov
mov
push
mov
xlat
imul
aad
jae
gs
ss
loope
pop
xor
cmp
gs
aad
data16
lret
pop
push
xchg
test
mov
mov
ds
or
lock
inc
jns
push
lods
and
fstps
clc
jb
pop
mov
sub
sub
adc
xchg
sub
movsb
loop
stos
sub
loop
mov
jbe
rcl
pop
js
js
jle
cmp
aad
sbb
out
data16
pop
decl
pusha
adc
stos
mov
testl
pop
lock
inc
push
call
xchg
adc
jmp
mov
arpl
mov
cmc
aas
scas
mov
aaa
dec
push
cs
jp
sti
jbe
inc
pusha
mov
loope
lcall
dec
insb
inc
dec
cld
sub
push
in
adc
test
inc
sbb
out
je
mov
xchg
repnz
xor
lock
add
jae
push
test
mov
loope
packsswb
ss
imul
imul
shlb
ljmp
push
xchg
pop
adc
mov
mov
cmp
mov
sbb
add
pop
pop
add
mov
push
pop
dec
aas
sti
test
mov
jp
inc
mov
sbb
and
adc
mov
and
negl
shl
scas
or
imul
jnp
in
ror
ljmp
aad
int3
mov
sbb
sub
scas
mov
les
int3
fwait
push
sahf
lock
test
pop
jne
pop
lret
jl
xor
push
xor
dec
repnz
mov
sahf
mov
mov
pop
inc
mov
cmp
pop
dec
sub
out
pop
sbb
pop
push
aad
arpl
ss
pop
push
xor
sub
sbb
into
dec
aas
jb
jno
mov
dec
or
xchg
lea
adc
add
add
pop
and
mov
addr16
lods
mov
push
addr16
jecxz
mov
shll
je
clc
jne
lea
jl
dec
lret
gs
mov
rorl
fmull
jnp
xchg
xchg
hlt
and
out
insb
icebp
popf
orb
dec
mov
outsb
jle
cmp
xlat
lahf
and
aad
inc
mov
mov
inc
pop
cmp
push
call
mov
adc
xchg
cltd
fdivl
adc
sbb
loope
clc
adc
mov
lock
inc
and
aas
or
adc
and
dec
inc
mov
gs
lcall
arpl
mov
xchg
lock
loope
mov
testb
pop
mov
cmpb
mov
jns
ret
out
fmuls
push
mov
mov
loop
pop
add
out
sbb
in
push
jne
in
lds
and
or
mov
out
lret
lea
jp
rcll
lods
push
xor
das
lds
mov
mov
jle
mov
shlb
cmp
jp
inc
fs
xchg
call
lret
cmpsb
and
xchg
frstor
mov
inc
das
fsubl
clc
adc
and
xchg
jne,pt
jle
and
loopne
out
adc
or
pop
xchg
add
scas
or
adc
jecxz
or
mov
push
dec
cmp
cmpl
loope
jno
mov
ret
and
shll
sub
lds
mov
gs
mov
les
and
mov
nop
filds
aam
scas
clc
mov
loope
sbb
pop
mov
add
int
mov
push
loope
test
jg
jl
mov
lock
pop
jae
andl
ffree
call
sbb
idiv
sbb
mov
inc
popa
adc
je
add
xchg
pop
xor
adc
call
sbb
sbb
mov
jb
lods
ds
cmp
pop
loope
fidivl
out
out
mov
mov
jno
and
mov
ljmp
ret
cmp
fldl
push
sub
clc
outsl
dec
enter
xor
pop
jno
mov
push
jp
xorl
sbb
pop
adc
not
and
cli
xchg
dec
mov
sub
dec
xchg
add
xor
add
sar
mov
pusha
inc
scas
ljmp
sub
mov
ljmp
and
sub
dec
xchg
sbb
sbb
and
inc
dec
lret
lea
ret
xor
jnp
lea
bound
rol
mov
push
hlt
mov
es
inc
xchg
push
mov
in
xor
cmp
lahf
adc
mov
ds
cmc
xchg
jle
mov
dec
lods
push
in
sub
cmp
daa
pushf
xorl
loopne
xchg
lcall
jno
push
sbb
sahf
popf
rclb
mov
data16
and
xor
lret
call
in
inc
and
jne
sub
jno
or
dec
ja
xor
stc
mov
xchg
stos
xchg
mov
jno
sub
sub
outsl
mov
loop
xor
test
xchg
decb
pop
push
or
loop
repz
or
out
dec
pop
sub
xor
pop
insl
mov
xchg
mov
aas
cmp
push
fldt
or
dec
xchg
mov
pusha
cmpsb
sub
inc
out
or
inc
xchg
fisttpl
inc
mov
sbb
adc
je
sub
pop
jnp
cli
dec
ret
cmp
aas
xor
ss
xlat
adc
mov
cltd
cmp
jmp
adc
jmp
push
mov
xchg
adc
test
xorb
xor
jbe
xchg
icebp
mov
xchg
jmp
test
xchg
cld
idiv
push
push
shrl
or
or
inc
pop
pop
aas
push
jle
and
xor
cmp
ds
push
sbb
sti
sbbl
sbb
cld
dec
jns
test
add
mov
cmp
xchg
and
inc
mov
mov
xlat
cwtl
aaa
sbb
push
mov
lea
cmp
dec
pop
repz
cli
sahf
xor
fwait
popa
or
pop
mov
xchg
mov
jo
stos
dec
repz
pop
cmp
aaa
dec
cmc
imul
pop
or
loope
testb
mov
sub
loope
cli
cld
jnp
test
jb
rol
js
leave
pop
cmpsb
pop
sub
push
jl
and
dec
out
mov
not
stos
stos
aad
xchg
imul
aam
in
out
mov
mov
mov
mov
ss
pop
mov
add
test
lods
cmpsb
xchg
ljmp
xchg
test
cmp
inc
test
mov
add
xchg
cmp
pop
out
jae
je
push
je
sahf
aas
sub
cmc
push
push
and
dec
leave
mov
mov
mov
xlat
xor
fwait
pop
dec
xchg
test
test
fldenv
pop
bound
mov
xor
fisubrl
inc
or
aad
stos
cwtl
pop
into
mov
dec
lea
es
ss
add
rorl
add
or
jecxz
mov
das
scas
and
and
sbb
rol
mov
mov
sub
cmpsl
adc
das
mov
mov
inc
pop
or
mov
mov
pop
inc
sub
xchg
push
cmp
xor
push
repz
mov
fisubs
xor
call
popa
sarl
and
pop
adc
adc
xor
fs
movsl
les
mov
jmp
sbb
cmpsl
inc
jno
cmp
add
pop
js
xchg
enter
nop
jae
stos
out
std
jb
adc
fadds
xor
or
lea
add
mov
pop
int
jne
inc
inc
dec
inc
lcall
adc
mov
or
xorb
or
fwait
lods
call
pop
adc
sbb
xor
push
call
add
push
add
test
mov
sbb
out
mov
mov
fnstsw
jo
sbb
xor
mov
inc
xor
stos
pop
cltd
cmp
hlt
inc
mov
sbb
hlt
adc
data16
ja
cs
aaa
data16
sbb
sub
fwait
divb
fildl
insl
mov
jb
add
adc
inc
fisubrl
outsb
xor
outsl
lahf
mov
add
fimull
or
xchg
sarb
push
mov
dec
dec
mov
jae
fdivl
test
mov
add
xchg
loope
test
and
add
pop
or
sub
in
sub
shlb
push
xor
sbb
lret
adc
faddl
lds
push
pop
mov
mov
arpl
sbb
mov
pop
sub
int
push
out
mov
sti
lods
shrb
arpl
sub
adc
lret
test
pmulhw
fwait
popf
cld
mov
ret
adc
in
mov
xor
and
xor
loopne
jo
mov
jmp
enter
and
cwtl
rclb
ret
ret
repz
mov
iret
cmpb
jg
mov
pop
movaps
xor
fbld
lds
xchg
mov
jmp
inc
fildl
sbb
jno
push
in
dec
push
adc
cmpsb
mov
loop
inc
ret
inc
insb
cld
and
scas
in
dec
js
pop
cmp
jae
sbb
icebp
adc
mov
add
or
sub
icebp
rcll
xchg
sbb
pop
mov
dec
xchg
mov
or
testl
cmp
jge
mov
sbb
mov
sti
sub
filds
jmp
jg
fidivrs
jge
pop
fwait
hlt
sbb
mov
shlb
mov
mov
sbb
addr16
add
xchg
iret
and
imul
push
dec
lock
jle
imul
inc
cmp
clc
add
test
rcrb
popf
dec
in
aaa
fidivrl
aad
aaa
jnp
xor
xor
xchg
dec
insb
sub
nop
jbe
popa
push
jmp
dec
add
scas
adc
jp
sahf
push
xlat
cmp
cmp
pop
mov
adc
fdiv
mov
mov
loopne
mov
add
sub
adc
test
jle
mov
repz
test
sahf
leave
gs
jne
dec
pop
jecxz
cmp
aam
lds
scas
jle
mov
jl
movsb
sub
aaa
xor
pop
xchg
push
filds
mov
dec
rorb
mov
movsb
ja
cli
pop
rcll
pcmpeqw
and
pop
mov
pop
imul
test
or
adc
gs
push
sub
mov
fldenv
xchg
outsl
pop
mov
sbb
cmp
movsl
mov
shll
dec
loopne
push
addr16
lret
int3
mov
mov
pop
mov
loopne
xor
bound
lods
jno
out
out
xor
rorb
add
lods
jnp
cmp
fsubs
arpl
repz
mov
ds
call
sbb
dec
push
pop
test
sub
xor
pop
bndstx
xor
aas
adc
aam
xor
pop
pop
mov
jp
pop
loopne
or
mov
jge
cmp
std
add
pop
rcll
pop
or
fimull
pop
cmp
les
out
jns
cmp
int3
flds
mov
test
aas
jb
dec
and
test
jg
jge
addr16
divb
out
inc
xor
jmp
and
mov
enter
int
pop
inc
mov
pop
popa
stc
inc
pop
es
pop
lds
lock
sub
pusha
outsb
xlat
cmp
mov
lahf
fcom
dec
and
or
imul
das
imul
push
daa
sub
cmp
fsubl
insl
lods
mov
repnz
in
bnd
dec
imul
in
dec
push
loopne
sub
mov
mov
lods
imul
xchg
xor
frstpm(287
cwtl
adc
mov
shll
movsl
ret
mov
sti
mov
in
stos
mov
rorb
cmp
mov
enter
jecxz
fwait
data16
sbb
adc
repnz
fadds
leave
xor
ss
cmpsb
mov
fadd
xor
xchg
jecxz
dec
clc
divb
xchg
pushf
or
outsl
jl
mov
add
pop
jge
ja
mov
xchg
push
imul
ficompl
out
adc
mov
ret
lret
inc
mov
notl
and
imulb
adc
test
jb
std
xchg
or
ficoms
push
stos
pop
outsl
jbe
subl
aad
jns
std
mov
cmp
and
aaa
jge
pop
iret
stc
addl
xor
mov
shll
cwtl
fistpl
and
jge
inc
add
stos
scas
lds
add
movsl
jbe
inc
repnz
push
push
jns
das
jmp
bound
inc
mov
je
insl
lds
pop
adc
push
outsb
and
inc
addr16
daa
push
dec
fstpt
adc
adc
mov
adc
push
sbb
lret
push
or
push
pushf
fnsave
dec
push
cwtl
pop
jae
movsb
or
sahf
scas
imulb
sarb
lds
push
add
jae
sbb
sub
leave
test
dec
xchg
and
mov
jl
adc
enter
cmc
xchg
pusha
dec
sbb
mov
sbb
stos
loope
mov
sahf
inc
arpl
cs
push
movsb
movsb
outsb
mov
xchg
outsl
pop
add
dec
xor
add
pop
and
das
scas
pop
shlb
mov
or
adc
call
mov
shll
insl
aas
cmpsb
repnz
mov
js
loop
outsl
pop
mov
insl
and
aas
add
sbb
pop
hlt
push
push
dec
adc
cmpsb
jno
jge
nop
xchg
cmpsb
out
inc
dec
cmp
ror
std
add
push
adc
adc
xchg
add
adc
ja
xor
incb
inc
adc
pop
dec
out
jmp
dec
and
aad
int3
push
out
cmp
xchg
push
enter
lcall
jp
lock
leave
sbb
or
mov
bswap
or
push
mov
cld
in
mov
ret
and
subl
xchg
xchg
xchg
mov
mov
jns
cmp
and
daa
and
inc
pop
into
aaa
test
movsb
call
icebp
mov
cmc
hlt
cs
ret
xor
int3
outsl
dec
fldt
ja
jge
repz
mov
js
sub
out
roll
pop
jno
movsb
hlt
inc
idivl
jmp
jns
pushf
add
pop
aas
bound
je
dec
xchg
vmovntpd
leave
dec
imul
mov
shrl
cmp
out
mov
adc
lds
adc
sub
mov
adc
and
bound
jg
xchg
popa
add
fidivs
cld
pop
lods
xchg
mov
lods
fisubrl
ljmp
sbb
ss
iret
scas
xchg
adc
test
mov
rorb
sub
pop
repz
movsb
push
lahf
jle
daa
mov
mov
xchg
lret
mov
and
inc
and
push
mov
clc
popf
mov
jecxz
mov
mov
xchg
lcall
sbb
jecxz
loope
mov
push
mov
mov
and
add
cmp
pop
xor
stos
test
cmp
mov
sub
dec
cli
in
loop
testl
filds
rcl
in
shr
inc
in
xlat
jns
mov
xor
andl
dec
adc
add
in
int
xchg
and
mov
jae
mov
mov
cwtl
xchg
xchg
sahf
call
push
decb
add
xlat
inc
stc
loopne
fistpl
jl
jl
pop
sarl
add
cmc
subl
mov
movsl
js
xchg
xor
test
cltd
push
pop
cmp
pop
scas
mov
cmp
fisubs
pop
hlt
arpl
mov
iret
cmovno
fnstsw
sbb
adc
decb
icebp
stc
popf
xchg
adc
stc
dec
pushl
decl
jno
int
jae
mov
jg
out
movsl
jp
mov
out
cmp
out
test
xor
popf
pop
scas
xchg
dec
pop
inc
iret
and
push
xor
cwtl
xor
test
sbb
xchg
es
xor
and
pop
mov
movnti
into
pop
fbstp
stc
add
xor
jl
add
add
sub
je
pushf
sbb
cld
call
push
and
push
and
and
inc
inc
outsl
call
addl
xchg
cmpsb
push
mov
ret
xor
add
adc
loopne
lock
and
xor
arpl
xchg
inc
mov
xor
add
adc
loopne
lock
and
xor
arpl
popf
inc
mov
xor
loopne
lock
shlb
cmp
push
xchg
pusha
addr16
inc
inc
push
repz
xor
add
xor
cld
lock
xlat
cmp
sub
outsl
or
mov
mov
pushf
fucomp
in
adc
and
jb
bound
popf
orb
ffree
int
std
loop
adc
and
jb
bound
popf
orb
ffree
int
std
loop
adc
and
pop
insl
int
out
mov
into
cld
sbb
dec
cs
daa
sbb
jae
int
mov
lcall
fcmove
or
sub
sti
pop
lods
out
cmc
xchg
int
frstor
and
lds
rcrl
sbb
mov
push
repnz
loop
add
pop
andb
mov
lods
cmc
int
jb
adc
ret
lods
aaa
add
insl
jge
jb
cmp
mov
ret
call
push
pop
mov
pop
in
add
mov
andb
or
jno
sub
xor
mov
or
int
or
dec
iret
mov
imul
lea
ffree
int
std
loop
adc
and
jb
bound
repnz
mov
int
mov
mov
xor
imul
adc
sub
popf
out
xlat
mov
xchg
ja
push
js
pop
and
ds
push
sbb
cmp
fst
into
enter
int
std
loop
adc
and
jb
bound
popf
orb
ffree
int
std
loop
adc
and
jb
bound
popf
cmpsl
les
jge
jno
adcl
xor
dec
mov
in
sbb
ja
es
push
scas
fwait
mull
int3
push
cmp
fsubr
inc
cmpsb
mov
inc
adc
push
adc
shlb
mov
push
icebp
sub
call
mov
cmp
sar
sar
jne
dec
out
rcrl
lahf
or
add
sti
pushf
inc
inc
mov
rcl
pop
or
pop
sub
and
pop
test
push
into
dec
sub
stc
gs
aam
popa
mov
pop
fbstp
cwtl
dec
push
pop
and
pop
pop
mov
in
sarl
mov
cmp
xchg
jns
mov
push
icebp
xor
pop
clc
cmp
jg
lds
js
adc
xchg
xor
jb
ja
xchg
push
adc
mov
lahf
js
and
int
aaa
xlat
dec
sub
cmp
jne
ljmp
sbb
xor
int3
jb
mov
mov
stos
jns
aas
inc
pop
add
mov
pop
je
pop
push
popa
inc
cltd
pushw
sbb
push
adc
scas
lret
js
push
stc
insb
mov
imul
hlt
sbb
push
jnp
aas
out
sub
jl
pop
mov
movsb
iret
lods
jle
lea
xor
mov
dec
in
outsb
sbb
mov
shlb
jns
jb
std
fldenv
jge
mov
push
ret
inc
mov
call
ja
sub
mov
pop
mov
inc
mov
xchg
sub
hlt
add
div
popf
ret
out
and
lret
cmc
scas
lahf
and
jle
into
andb
pop
mov
out
mov
cmp
adc
fsts
sbb
test
or
mov
shl
sub
insl
push
aaa
leave
scas
sbb
das
inc
shll
pop
ret
sbb
inc
dec
movsb
or
daa
inc
imul
mov
shll
or
dec
adc
adc
daa
mov
jl
movl
jae
repnz
push
add
xlat
cmp
fnsave
pop
rcll
jno
ficomps
inc
lahf
inc
lret
pop
add
cmp
outsb
cmp
jb
add
jo
cmpsl
or
inc
dec
sbb
lea
jno
pop
mov
xchg
sbb
loopne
imul
push
fistpl
adc
sub
fwait
cmp
lahf
add
jae
inc
xchg
add
out
cmp
inc
or
imul
jmp
sti
pop
popa
jns
insb
xchg
not
fstp
xchg
xor
out
mov
or
inc
fwait
dec
rorb
jno
aad
cld
cmp
or
jge
inc
gs
loop
mov
dec
add
out
ss
mov
xchg
fcomp
xor
or
loopne
ss
mov
std
aaa
pop
adc
mov
adc
mov
popl
sbb
add
cmp
mov
lds
ljmp
test
cld
push
icebp
and
icebp
sub
push
or
arpl
and
mov
or
pop
push
imul
jne
inc
pop
inc
mov
cmp
cmp
jne,pt
lret
idivb
fs
dec
dec
push
pushf
pop
out
in
add
cmp
xorl
push
jle
dec
adc
adc
pop
dec
in
cli
sarb
and
insl
mov
cli
or
and
scas
jae
lods
into
mov
sbb
jnp
adcl
dec
jmp
push
mov
sub
pop
insb
cmp
in
lahf
sbb
dec
into
hlt
add
jae
mov
in
push
mov
inc
lds
test
adc
xchg
mov
std
popa
inc
std
test
pop
cltd
cmp
bound
pusha
fwait
pop
insb
leave
lss
pop
fadds
lock
dec
add
fiaddl
cmc
outsb
les
mov
notl
data16
and
imul
dec
push
mov
cs
xor
xchg
inc
mov
dec
xor
inc
jg
iret
movsb
icebp
imul
ret
shl
int3
stc
test
outsb
push
pop
pop
jno
popf
loop
sub
imul
xchg
popa
sub
push
adc
pop
dec
add
xor
dec
shl
inc
adc
iret
mov
in
and
and
mov
or
mov
add
data16
insb
stc
push
in
jl
int3
or
cmpsl
les
dec
pop
cmp
movsb
push
call
arpl
out
mov
and
outsl
shr
mov
icebp
xchg
cli
or
int
push
push
xor
pop
and
sbb
pop
and
pop
jbe
cwtl
cmc
and
pop
jne
insb
xlat
in
pop
add
mov
push
fbld
fcoms
ds
mov
add
fiadds
adc
xchg
fadd
mov
xlat
mov
rorb
andl
ja
ds
cmpl
in
test
int
aaa
fsubl
shll
mov
int
je
scas
cmpsl
sub
and
js
mov
jae
lret
push
fisubl
mov
dec
insb
inc
or
sub
xchg
jns
inc
cmpsl
into
test
ret
in
pushf
inc
lods
sbb
ljmp
out
adc
jne
xchg
xor
fldl
push
push
inc
mov
pop
add
les
out
aam
test
add
shl
push
mov
fdiv
dec
push
and
mov
pop
cltd
cwtl
push
or
mov
ja
xchg
push
mov
xchg
fprem
push
ds
fucom
inc
rclb
add
mov
addr16
mov
rcrb
pushf
hlt
or
and
add
xchg
enter
pop
sub
mov
imul
addl
mov
lret
dec
mov
mov
pop
imul
inc
mov
push
jl
mov
xchg
outsb
sbbb
shrl
push
fwait
ja
mov
mov
fwait
adc
cli
std
cwtl
out
cs
mov
sub
out
push
mov
jle
std
pop
xor
dec
mov
cmp
mov
or
icebp
pop
jl
popa
dec
jns
in
add
xor
jle
shll
mov
push
push
push
movsl
pusha
sbb
loop
mov
data16
push
lret
xor
out
sbb
push
jno
mov
js
sub
out
mov
mov
dec
pop
adc
xor
adc
sub
adc
das
ret
std
add
insb
pop
shrl
ds
mov
pop
shrb
repz
in
mov
out
cmp
xchg
sub
outsb
add
in
sub
pop
jo
xor
daa
fsubrl
jo
pop
xor
jo
add
rorl
mov
add
xor
pop
or
int
and
in
fcomps
loop
mov
xchg
jmp
jo
jb
pop
pop
movsl
jo
mov
pop
lods
mov
fcompl
test
mov
mov
jl
sbb
das
in
xchg
xlat
wrmsr
xor
sub
jbe
mov
fwait
repz
loope
adc
dec
xchg
cmpl
mov
xchg
cwtl
decl
sub
insb
jle
hlt
jg
or
outsb
in
pushf
xchg
sbb
adc
mov
shlb
push
mov
aad
nop
clc
imul
cmpsb
insb
ljmp
add
data16
mov
test
push
inc
into
or
dec
inc
scas
adc
in
imul
les
sub
test
shrl
test
sahf
mov
shr
or
mov
lcall
add
pop
mov
inc
cmp
daa
sub
inc
cld
out
pop
mov
jmp
gs
inc
imul
xchg
js
enter
push
test
rorb
test
outsl
sbb
cmp
fcomps
in
mov
cmc
fimull
es
into
outsl
pop
popa
pop
hlt
repnz
xchg
in
aad
jge
xchg
loop
dec
sub
out
or
add
jmp
sti
push
roll
mov
fisubs
cmp
rorb
bound
dec
test
and
pop
push
add
fisttpl
stos
fadd
inc
xor
xchg
daa
rorb
aam
fwait
int
ja
push
adc
add
pop
int
jno
out
cld
adc
pop
push
jo
rcrl
scas
mov
cs
pop
xor
push
clc
adc
pop
dec
das
push
inc
lcall
adc
es
push
push
mov
mov
ret
pop
push
pop
xchg
and
int3
flds
lock
jmp
enter
push
fisubl
mov
subb
mov
mov
cmc
outsl
mov
jge
mov
fcompl
pop
push
jp
sub
mov
jge
mov
sub
lahf
fcmovb
imul
rorl
jmp
je
add
adc
inc
push
imul
mov
outsl
outsb
xchg
push
xchg
jl
sahf
pop
dec
mov
dec
cltd
aaa
test
cld
cmp
pop
mov
and
mov
mov
jg
push
roll
adc
ret
xor
je
inc
ficomps
addb
imul
mov
pop
cmp
in
lds
iret
pop
lds
adc
sbb
adc
push
movsb
or
in
imul
push
jl
inc
pusha
push
loopne
inc
loop
xlat
xor
jecxz
addb
in
inc
bound
jb
jecxz
or
xor
ja
lock
cmp
roll
insl
fwait
lahf
test
adc
mov
cli
sub
dec
aaa
pop
and
sbb
fs
out
int3
call
sub
in
rcll
rcll
jo
cli
call
mov
fldl
xchg
or
xchg
pop
jge
lret
gs
call
dec
pop
sbb
sbb
pop
dec
xor
push
xchg
jg
nop
cmp
jle
jns
adc
call
test
mov
push
push
in
xor
pop
inc
ljmp
sahf
std
xchg
sbb
das
idivl
mov
out
push
loop
sub
jmp
cmpsb
mov
lea
ss
stc
js
test
sub
aam
or
mov
jo
test
cmp
adc
imul
cmp
push
fbld
imul
add
inc
dec
add
xchg
mov
push
aad
dec
stc
lock
xchg
push
out
pushf
test
xchg
mov
icebp
negl
out
movsb
lock
xlat
popw
adc
fs
sahf
test
jp
xchg
adc
pop
jne
sbb
xchg
mov
in
stc
pop
popa
fs
jo
adc
sbb
xchg
jg
xor
fwait
cltd
add
mov
sbb
dec
enter
or
and
sti
and
sbb
cmp
sub
sbb
jno
or
mov
cmp
xchg
pop
std
xchg
aaa
test
or
or
mov
imul
jne
mov
sbb
int3
or
mov
mov
into
jle
inc
decb
mov
int
leave
mov
addr16
mov
mov
mov
es
xor
dec
fisubs
into
imul
test
sub
lds
push
jecxz
fistps
mov
push
js
sub
pusha
sbb
cmp
ret
lds
pop
test
fwait
repz
out
into
pusha
push
pushf
out
add
aam
repnz
jg
or
cmpsl
jp
cmc
inc
inc
mov
xor
mov
clc
inc
push
jns
sub
rclb
and
sbb
mov
or
jns
hlt
cmp
std
shl
and
cmp
mov
lods
jge
ss
ljmp
sbb
jmp
nop
inc
scas
insb
hlt
jl
inc
movsb
ljmp
popa
push
shr
mov
sbb
ret
shlb
mov
pop
or
or
cmc
outsb
push
adc
push
push
xchg
jl
push
add
imul
push
test
repnz
jle
sahf
add
add
dec
sbb
in
add
scas
test
mov
cld
call
outsl
out
dec
jae
jmp
push
popa
cmp
das
ret
lret
xchg
xor
int
call
push
inc
cmpb
hlt
pmuludq
inc
ret
jnp
lods
outsb
pop
mov
sbb
cltd
imul
stos
cmc
or
cmp
inc
add
xchg
inc
in
cmc
movsb
pop
cli
adc
xor
push
xor
sbbl
xor
push
arpl
pop
into
into
mov
xadd
pusha
dec
cmpsl
rcrl
popa
mov
negb
sub
mov
fmuls
cmp
sti
jo
mov
cmpsl
push
fistpll
push
outsb
lahf
mov
fidivrs
dec
jl
lcall
rolb
rcll
sub
xorl
adc
xor
insl
cltd
jnp
cmpsl
aaa
scas
cmp
imull
fs
jbe
aas
loopne
pop
out
ds
and
pop
das
aaa
sub
dec
xchg
mov
les
mov
mov
sbb
mov
cmp
fcoml
pop
inc
andb
jbe
jmp
and
je
sarb
jb
pmaxsw
pop
rcrl
lock
test
xchg
jl
xlat
rcrb
push
mov
rolb
popa
jl
sub
jl
fisubl
push
jmp
testb
mov
lods
nop
imul
repnz
add
loop
adc
js
sub
push
aam
lcall
aad
pop
sbb
push
mov
lret
mov
inc
dec
lods
jge
orl
test
jne
adc
dec
sbb
xor
call
or
mov
dec
out
push
std
imul
ret
push
fsubrl
xchg
mov
or
mov
xchg
enter
dec
add
mov
movsb
fsts
add
cmc
test
fwait
push
out
add
iret
bound
push
mov
outsb
jns
mov
insb
les
adc
push
hlt
aam
test
push
in
test
inc
iret
push
imul
mov
ret
popf
push
push
sbb
stos
dec
cmpsl
bound
lea
ljmp
std
sub
xchg
jle
jge
jg
adc
aad
imul
loope
inc
cmp
mov
cld
call
push
leave
or
popf
mov
inc
push
fsubr
lods
sbb
dec
pop
lcall
in
add
fdivr
push
mov
dec
imul
inc
jo
sub
push
out
and
fstl
movsl
sbb
in
outsb
aam
fs
imulb
xor
addl
mov
add
out
in
lahf
xchg
scas
or
sub
imul
orl
mov
or
xor
jmp
adc
jae
adc
cld
mov
mov
cmp
xchg
add
mov
sbb
call
adc
outsl
mov
sahf
arpl
fsubl
dec
inc
clc
xchg
rcll
outsl
sub
into
arpl
mov
fwait
repz
in
loopne
jne
mov
in
testl
mov
jl
pop
imul
push
in
jmp
jne
cmc
popa
jecxz
inc
in
loop
dec
enter
arpl
sahf
daa
aas
pop
mov
imul
push
pop
push
insb
and
push
or
pop
popf
mov
imul
inc
fs
sarb
js
mov
movsb
cli
jecxz
hlt
cltd
mov
std
clc
mov
test
jmp
xor
xlat
int
push
jge
mov
mov
mov
sbb
pop
push
std
aas
aam
loopne
aas
inc
push
lea
jge
rol
inc
bnd
mov
inc
jge
push
rolb
ljmp
mov
stos
mov
mov
cmp
notl
sti
jae
sub
push
test
cmp
mov
es
arpl
pop
sbb
cs
aad
pop
test
inc
pop
hlt
push
sbb
loop
call
cmp
negl
sahf
mov
aaa
loopne
sbb
mov
ds
sahf
outsl
jmp
ret
xchg
cli
push
sbb
popf
cmp
out
jbe
push
cmp
pop
mov
fwait
adc
fnsave
movsb
or
pop
roll
stos
bound
inc
mov
mov
hlt
aaa
push
cmp
out
mov
adc
out
pmulhuw
es
out
pop
xchg
int
lock
adc
enter
cmp
pop
icebp
ja
mov
in
loope
fwait
mov
sub
inc
daa
lods
movsl
out
aas
ja
cmp
pop
pop
psubq
dec
jmp
dec
shll
pop
or
adc
lcall
addr16
movsb
xchg
rorl
adc
movsl
jb
es
and
iret
push
lock
xchg
sub
js
xor
xor
sub
fs
jne
lret
or
mov
ret
push
lea
and
xchg
aam
jp
lcall
xchg
and
mov
mov
in
ret
cwtl
fwait
ja
jecxz
movsb
pop
leave
jl
cld
int3
ljmp
sub
imul
aas
lahf
cmc
aam
jecxz
xor
stos
mov
in
ficoml
arpl
mov
mulb
jb
inc
enter
sub
sbb
rcll
jo
hlt
sub
stos
out
and
push
xor
jge
or
jns
mov
ljmp
pop
fwait
dec
lock
cli
sub
das
pusha
pop
add
icebp
mov
ds
stc
push
mov
adc
sarb
test
daa
mov
add
push
fdivrl
insl
lods
aas
pop
lds
jp
int
xor
mov
imul
sub
mov
negl
pushf
aad
loop
outsl
cltd
jge
lds
xchg
xchg
fwait
mov
je
sahf
jp
pop
popa
ljmp
aam
sbb
test
push
inc
ljmp
cmc
jecxz,pt
sbb
cmp
loop
std
sbb
fdivl
push
xorb
and
or
shr
rolb
fldl
pop
rorb
jmp
mov
adc
repz
mov
sbb
movsl
movsl
in
insb
inc
mov
jmp
mov
fldt
dec
add
rcll
out
mov
jno
lods
mov
cmp
pop
or
dec
sub
mov
xor
xchg
xor
adc
stos
mov
jle
cmc
icebp
pushf
add
push
cmp
lods
idivb
insb
mov
shll
or
loope
in
cs
data16
inc
pop
les
out
test
jecxz
or
addb
insb
xor
ss
or
in
mov
adc
jmp
scas
mov
jae
mov
mov
xchg
js
mov
cmpl
outsb
xchg
scas
ret
lds
arpl
dec
mov
dec
shrb
xlat
imul
in
mov
insb
xor
pop
mov
or
xchg
jl
lock
push
xchg
mull
in
int3
mov
out
stc
aas
ss
jl
dec
push
je
mov
ja
leave
push
fsts
scas
xchg
addr16
inc
mov
xchg
or
ret
loopne
xor
adc
test
call
iret
imul
pop
cmc
popa
nop
fwait
pop
xor
jmp
rcrl
int
dec
cmp
xchg
pmaddwd
push
adc
mov
enter
icebp
lock
je
dec
outsb
mov
mov
pop
rol
out
lods
xchg
push
jmp
jnp
aaa
xchg
cmp
mov
xchg
fnstsw
add
insb
das
mov
cmpb
ret
mov
lock
inc
in
mov
bound
mov
jnp
dec
out
push
and
mov
inc
pop
xchg
movsl
rolb
in
nop
mov
fdivp
fnsave
insl
lods
jle
adc
scas
mov
mov
popf
and
js
jecxz
in
push
cmp
out
xor
xchg
loope
pushl
ret
jno
mov
and
xor
and
inc
mov
jb
lahf
insb
adc
jnp
and
sbb
dec
cmp
or
test
cmp
pop
loop
inc
add
fs
sub
sbb
mov
daa
testb
mov
jo
lea
scas
lods
adc
xor
adc
pop
repnz
add
xchg
inc
xlat
push
xor
pop
mov
xor
out
dec
icebp
loop
into
test
int3
stos
jnp
in
dec
shrb
lds
sub
not
insb
rcrl
cmp
test
pusha
sbb
loope,pn
sub
lods
rcr
ret
std
loop
adc
and
jb
bound
popf
orb
ffree
int
std
loop
adc
and
jb
bound
popf
add
push
ffree
dec
repnz
in
adc
and
jb
bound
popf
orb
ffree
int
std
loop
adc
and
aad
mov
adcb
addl
adc
inc
mov
xchg
push
jo
adc
inc
rcll
lock
addl
adc
inc
rcll
pusha
repz
and
push
shlb
jae
addl
adc
inc
rcll
pusha
repz
xorb
push
lds
inc
xchg
mov
test
xchg
dec
repnz
mov
cli
test
lret
add
insb
sub
xor
into
dec
fsubs
outsl
add
dec
dec
mov
pop
call
sahf
outsl
fstpl
movsl
adc
push
mov
adc
ror
repnz
notl
mov
push
xchg
xor
fsubr
loopne
jae
orl
stos
inc
sub
mov
jl
outsl
ret
xor
fwait
xchg
clc
lock
push
out
fisttps
cmp
repz
add
test
xchg
rol
pushf
mov
mov
sahf
dec
cmp
addps
inc
ljmp
rcl
pop
dec
cmpsl
roll
andb
adc
inc
rcll
pusha
repz
adcb
and
push
shlb
jae
out
lock
pop
mov
add
lock
push
repz
lds
xchg
cmc
insb
out
shrb
cmpsb
add
pop
jno
je
pop
xor
mov
ss
or
xchg
inc
in
dec
xchg
push
jecxz
repz
adcb
and
push
shlb
jae
addl
adc
inc
rcll
pusha
repz
adcb
and
push
shlb
jae
addl
cmp
dec
int3
notl
mov
shll
nop
rorb
mov
ret
sti
mov
push
popa
jge
inc
cltd
in
xchg
sub
or
pop
xor
out
mov
mov
popa
out
fcmovnb
hlt
insb
jmp
adc
into
stos
out
imul
rcrb
jns
jecxz
sbb
pusha
push
adc
dec
jae
sub
movsl
dec
loopne
or
mov
lret
inc
lds
jo
or
add
mov
mov
lea
and
and
mov
out
shlb
mov
stos
jae
dec
mov
in
mov
pop
pop
jp
mov
lock
jae
xor
cmc
es
xor
out
imul
mov
loop
lds
push
cmc
pop
inc
testl
sub
popf
frstor
jne
mov
sarb
fidivs
sbb
mov
dec
es
mov
addr16
shrb
mov
xor
fwait
xchg
push
mov
dec
fiaddl
shl
jnp
mov
jmp
add
sub
xchg
scas
sbb
sti
jge
xlat
jb
dec
cwtl
xor
pop
push
popf
shl
cmp
and
lret
sub
adc
pop
jnp
imul
inc
cwtl
lahf
and
mov
push
les
inc
jo
mov
cmp
iret
push
cmp
mov
sbb
push
lcall
stos
out
cltd
test
jnp
cs
or
dec
stos
hlt
push
dec
lcall
in
nop
shll
aam
sub
testl
lds
lea
mov
pop
xchg
jge
sub
mov
xchg
fisubl
gs
sub
push
movsb
jle
sbb
jg
or
lds
mov
push
cmp
cwtl
adc
enter
enter
sbb
cmp
push
mov
call
xchg
fs
pop
dec
mov
sub
pop
pop
or
testb
dec
mov
jbe
dec
xchg
std
adc
sub
and
cpuid
cmp
std
nop
ss
icebp
pop
stos
pop
lea
es
scas
adc
les
cmp
push
cmp
mov
sub
imul
mov
pop
repz
cld
mov
push
jle
int3
push
pusha
ret
enter
hlt
rcrb
or
inc
mov
ror
cmpsb
and
ja
lret
jp
mov
in
mov
cmc
divb
test
repnz
and
outsl
dec
test
or
aaa
iret
clc
int
imul
mov
dec
mov
stc
adc
test
pusha
lock
xchg
push
jno
cmp
sti
aam
pop
pop
push
mov
mov
loop
add
aas
loop
adc
push
inc
mov
call
sahf
lahf
jnp
inc
test
imul
sub
inc
popf
stc
push
es
test
popa
outsb
fisttpl
shll
mov
mov
into
sbb
fnsave
or
lods
adc
jne
rorl
ja
mov
xorl
pop
mov
mov
xchg
test
int
xor
jl
fimuls
xchg
xchg
mov
leave
rcr
dec
push
push
aam
test
pop
inc
adc
dec
bound
push
aaa
fwait
dec
mov
in
sbb
mov
or
pop
sub
scas
es
icebp
push
fistpl
push
imul
pop
push
xor
fcompl
cmpsb
adc
insb
sbb
repz
shrl
sub
or
cmp
push
sahf
push
stos
cli
sbbl
xchg
cli
pop
repnz
lret
pop
repnz
xor
into
adc
xchg
mov
stos
jle
sub
popa
xor
call
dec
mov
lds
push
mov
cld
and
mov
bound
in
xchg
loope
push
sub
pop
dec
call
push
je
mov
and
push
dec
mov
fdivrp
shrb
and
or
push
outsl
les
imul
insl
enter
loope
int
and
sbb
mov
xlat
in
js
arpl
aam
fs
mov
lock
imul
push
pop
je
pop
fisttps
or
daa
pop
sahf
and
ret
ss
cmc
inc
ljmp
cmp
push
cmc
rcll
rep
test
lock
mov
cmpsb
xor
jo
test
or
das
pushf
or
nop
pop
jnp
or
enter
push
xor
and
in
lea
mov
or
xor
bound
mov
idiv
mov
xchg
arpl
xchg
fisubl
rcrb
mov
incl
shrb
xchg
inc
xor
adc
cmp
fisttps
into
jns
add
add
leave
dec
pop
fs
popa
test
inc
testl
sub
inc
lods
scas
out
xor
ljmp
popa
bound
in
sbb
lret
pop
xor
mov
mov
xchg
ljmp
dec
xchg
inc
push
xorb
sbb
sahf
popf
nop
iret
sahf
mov
pushf
add
dec
mov
cwtl
out
lea
andb
sahf
xchg
xchg
lcall
xchg
inc
int
mov
aad
inc
sbb
out
fldenv
inc
stc
push
jns
or
enter
mov
lret
pushf
fmuls
inc
test
cmc
and
xchg
scas
scas
cmpsl
aaa
pop
js
and
jne
nop
jp
adc
in
lods
dec
mov
mov
enter
mov
repnz
inc
pop
or
test
or
lret
dec
dec
sahf
or
in
mov
dec
sub
sbbl
sti
stc
jmp
adc
mov
rcrl
jb
mov
out
lock
shll
je
rcrb
lock
pop
xor
pop
bound
rep
add
xor
popa
clc
sub
pushf
fmuls
test
int
pop
cmp
fstps
push
sbb
sbb
xor
gs
sbb
lock
lret
inc
mov
push
outsb
inc
mov
mov
stos
dec
lcall
push
xchg
push
add
lock
xor
xor
mov
sub
inc
cmp
in
xchg
jl
pop
mov
jae
xor
in
ret
add
mov
dec
insl
dec
and
aas
inc
leave
sub
sahf
mov
out
jns
sbb
push
je
jmp
xchg
aas
shrl
fs
dec
or
or
xchg
or
outsb
icebp
inc
dec
pmaxsw
insb
sti
push
xor
sbb
lahf
loopne
cli
add
jno
pop
test
and
jnp
cwtl
fwait
cmp
mov
mov
loopne
xchg
imul
xchg
ss
mov
push
aas
xor
lcall
movsl
pop
clc
pop
mov
mov
scas
adc
dec
and
cltd
cld
and
out
mov
jmp
push
setg
and
sub
mov
mov
in
shll
movb
mov
xchg
adc
dec
mov
push
repz
add
lcall
pop
sbb
lret
mov
shr
or
dec
in
inc
mov
mov
mov
ret
sarl
push
adc
sbb
inc
into
cwtl
incl
lock
pop
jo
sbb
mov
xor
je
and
xor
jp
lret
je
xchg
pop
aas
inc
jb
fldenv
aaa
lret
mov
push
aam
lcall
shrl
cmp
into
adc
and
jbe
jl
jno
sbb
out
and
mov
jmp
xchg
jp
fwait
mov
int3
add
pushf
lret
arpl
xlat
mov
inc
inc
xor
pushf
std
push
jg
cmc
lahf
cwtl
aad
xchg
push
adc
push
cmp
sbb
loope
cmpsb
test
mov
mov
dec
pushf
cmp
dec
jmp
into
push
outsb
jbe
in
stos
and
adc
xchg
cli
and
in
mov
inc
stos
imul
dec
loop
pop
pushf
pop
mov
mov
not
push
add
or
push
out
outsl
mov
rcl
fs
aam
iret
xor
dec
mov
test
mov
rorl
pop
fidivrs
sti
mov
cmovnp
sub
out
lods
pop
pop
or
ja
push
mov
push
mov
js
jle
es
ret
add
xlat
fisttpl
push
or
leave
and
push
mov
inc
cmpsb
sarl
inc
jg
adc
aam
je
or
cmp
sti
lods
xchg
add
jmp
data16
mov
fstpl
jbe
cmp
dec
xchg
sub
ret
pop
out
in
lcall
xor
fists
pop
lret
ficompl
cmp
js
loope
xchg
xchg
cmp
jg
arpl
lret
rep
jae
outsb
les
cmp
mov
fisttpll
fwait
xor
pop
or
fstpt
cmp
cld
xchg
stos
imul
pop
xor
xchg
mov
adc
cmp
pop
es
add
xchg
or
mov
mov
mov
pop
or
pop
xchg
ds
push
or
mov
lea
inc
push
test
pop
lahf
pop
mov
cld
test
scas
cmp
push
adc
in
pop
jle
add
outsb
mov
in
sub
xchg
sub
xchg
stc
ja
out
arpl
cmp
fmull
inc
jl
mov
mov
lods
jge
fcomp
or
jae
popa
push
das
dec
mov
jle
fisttpll
shlb
pop
pop
and
xor
sbb
gs
or
push
out
inc
shll
pop
data16
jecxz
pop
or
movsl
xor
push
jl
jne
rorl
sbb
stos
xchg
call
sub
sbb
arpl
mov
push
aas
xchg
shll
jne
pusha
decb
jo
push
jp
int
andb
inc
nop
add
lret
sub
shrl
xchg
lahf
popa
dec
jno
xor
fwait
add
adc
cs
ljmp
sahf
in
jp
xchg
iret
sub
push
lahf
imul
cmp
jecxz
mov
repnz
or
xchg
and
sbb
ret
adc
mov
push
orl
stos
rol
adc
lret
or
xchg
aaa
and
and
pop
repz
cltd
pop
pushf
mov
popa
inc
cwtl
mov
lea
rcll
lret
pop
mov
dec
dec
xchg
icebp
in
sub
fs
cmp
ret
mov
xor
es
sbb
je
xor
loop
mov
testl
mul
cmp
addl
add
lock
jmp
mov
xchg
out
sbb
pop
sbb
adc
int
adc
cmovl
jp
xchg
lods
xor
scas
adc
or
jo
stos
cmp
sahf
stos
pop
into
cmp
icebp
pop
loope
adc
jge
enter
inc
and
js
stc
mov
mov
arpl
mov
movsl
leave
scas
add
cld
add
pop
fists
fisttpll
adc
es
mov
insl
leave
inc
ret
xchg
ret
sub
cmc
cmp
and
repz
pop
jmp
xor
mov
dec
jno
inc
pop
push
pusha
push
mov
mov
cltd
inc
lods
xor
inc
arpl
or
jnp
jg
fyl2xp1
jbe
filds
stc
lds
or
aad
hlt
push
add
lret
imul
xchg
cmpsb
mov
xchg
pop
popa
and
sti
xor
inc
pop
arpl
mov
div
push
test
pusha
sbb
call
adc
jle
hlt
ret
or
int
push
jl
leave
loopne
dec
jmp
push
fisttpll
xchg
cmp
push
mov
lds
cmp
push
jns,pt
aam
data16
sti
cmp
cli
mov
push
mov
add
mov
mov
jnp
xor
shll
lahf
mov
mov
lahf
push
add
mov
cmp
mov
mov
loopne
add
aaa
adc
repz
jb
les
cmp
jge
roll
mov
push
mov
aam
mov
adc
mov
jle
js
repnz
pop
xchg
dec
lret
mov
in
mov
adc
push
push
dec
jmp
cmp
outsl
jae
lods
outsl
cmpsl
cmp
push
jge
jp
xchg
stc
notl
stos
gs
pop
clc
and
in
cmp
aaa
xor
ss
mov
inc
shll
cli
sarb
call
aaa
jl
cmc
mov
clc
rclb
inc
add
pushf
fistpll
xchg
push
lret
adc
data16
ja
mov
pop
jnp
inc
push
cmp
paddq
fwait
mov
sub
icebp
mov
popf
cltd
jle
mov
jns
push
inc
sub
sub
data16
adc
pop
inc
ret
jno
lock
pop
cs
and
pop
shl
cmp
jl
inc
aam
sub
and
lods
ljmp
cltd
mov
jge
in
mov
scas
cmc
sub
sbb
lahf
and
test
in
jne
loop
movsb
les
mov
jns
push
mov
mov
mov
pusha
fdivrs
sbbb
mov
enter
xchg
test
repz
cmp
pop
adc
stc
or
mov
sbb
add
ret
stos
data16
cmp
dec
stos
aad
push
jp
lods
push
stos
leave
cmpsl
dec
dec
clc
pop
repnz
jecxz
outsl
ljmp
push
in
and
lock
lea
pushf
test
cli
adc
cli
jno
imul
out
pusha
out
mull
mov
cwtl
adc
cmp
scas
repz
dec
enter
jecxz
popf
insb
roll
pop
ret
js
pop
sbb
jl
mov
out
or
mov
push
neg
in
pop
xchg
or
leave
xchg
mov
fisttps
lock
test
pop
adc
and
aad
xchg
push
inc
xchg
div
test
cld
xchg
sbb
sarl
lods
hlt
mov
inc
sub
scas
inc
pop
adc
les
inc
adc
cmp
fldl
jne
cmp
and
test
cmp
movsb
inc
mov
dec
aad
mov
jae
dec
fwait
xchg
xchg
add
or
xor
fcoms
flds
repz
dec
shlb
shrl
fucomi
pop
fisttps
rcrb
in
mov
mov
int
mov
je
cmp
mov
std
dec
shlb
insb
ret
pop
out
daa
pop
out
sbb
mov
out
cld
sbb
loopne
cmc
out
ds
loop
add
cmp
mov
inc
sub
cmp
or
stc
xor
mov
cmp
imul
ja
sub
addr16
or
or
mov
inc
scas
fdivrl
sub
xchg
adc
jp
dec
ret
dec
call
std
push
add
inc
std
loope
ret
cmp
into
cmpsb
adc
in
pop
pop
or
cmp
fwait
mov
or
dec
int3
mov
jnp
xchg
imul
test
push
sub
push
add
sbb
pop
popa
lds
and
adc
leave
arpl
mov
int
lret
sub
pusha
gs
push
push
psubd
and
xor
mov
test
add
movsl
cmp
cwtl
dec
hlt
cs
mov
js
enter
xor
lret
pop
push
jg
iret
xlat
push
jecxz
sub
jle
mov
aas
xchg
fidivl
leave
inc
dec
les
push
out
aas
stos
nop
nop
jb
stos
mov
mov
add
dec
add
jmp
sub
cmc
add
kandnb
lea
stos
stc
jecxz
clc
sbb
mov
cltd
in
out
sbb
xchg
lods
fidivrl
rep
mov
sbb
imul
sar
pop
mov
cmp
movsb
sub
ret
push
add
inc
sbb
push
mov
insl
inc
jl
sbb
stc
jge
jno
mov
mov
movsb
inc
jnp
cmp
insb
nop
and
cmp
and
xchg
cltd
xor
mov
sbb
fidivs
ret
push
adc
sbb
andps
cmpsl
lahf
gs
orl
push
pusha
xchg
add
xchg
mov
and
pop
fldl
outsb
mov
push
xlat
mov
bnd
and
ret
in
in
or
cmpsl
stos
cmpsb
dec
ljmp
bound
out
and
and
jp
loope
sahf
imul
or
sub
test
add
dec
test
cmp
xor
mov
adc
sti
jle
pop
cli
dec
nop
mov
mov
call
inc
sarl
sahf
enter
lcall
mov
daa
dec
out
daa
and
ds
inc
fisttpll
dec
or
rolb
das
loopne
xchg
out
mov
orb
add
test
push
add
daa
inc
test
sahf
test
jne
mov
loop
out
xchg
or
out
and
fsts
jl
mov
jne
int3
mov
mov
addr16
xor
or
stos
pop
lods
dec
mov
sub
leave
stos
cmc
ret
mov
push
jno
inc
loop
iret
mov
push
xchg
or
sar
and
test
imul
jo
jno
out
add
jno
addr16
cmp
xchg
sbb
daa
cli
add
lcall
aaa
xchg
and
push
or
mov
dec
test
jo
xor
adc
xor
xlat
mov
add
mov
loope
sub
inc
cmpsb
movb
inc
mov
cmpsb
leave
or
push
aad
into
fiaddl
aam
imul
lods
aad
or
inc
xchg
adc
push
mov
push
ja
fsubl
lds
push
lahf
dec
sub
mov
lret
pop
jl
pop
insl
jo
lret
test
and
sub
rorb
jbe
jbe
cmp
inc
xor
xchg
jmp
ret
lret
movsb
mov
cmpsb
notb
mov
repnz
pop
push
push
fisubrs
mov
pop
sub
test
pop
lcall
in
ljmp
int3
or
sbb
sbb
mov
cmp
jbe
cmpsl
or
fdivrp
jns
inc
data16
ljmp
lret
arpl
push
mov
xor
xor
mov
inc
cmpsl
and
add
sbb
add
mul
mov
sbb
mov
aad
pop
or
or
clc
sub
sub
and
orb
xchg
repnz
sbb
inc
jecxz
cmp
mov
pop
dec
fsubr
aad
mov
inc
mov
cli
dec
mov
mov
or
ror
inc
notb
adc
sub
cwtl
inc
mov
inc
jmp
cmp
icebp
fbstp
rcrl
xlat
add
loop
dec
jl
or
rolb
les
std
ret
iret
sbb
adc
jae
adc
outsb
sbb
call
sarb
xchg
rclb
xchg
faddl
jg
cmp
sub
mov
pop
mov
and
or
daa
clc
adc
out
cs
and
push
je
xchg
add
bound
rol
mov
into
jb
outsb
insb
nop
xor
xchg
push
jmp
cmp
push
insl
mov
xchg
das
cmp
mov
xchg
fstl
xor
pop
imul
fmull
cmpsl
es
or
ljmp
mov
xor
es
vpsrlw
sbb
push
cmp
fldln2
or
lahf
mov
inc
push
loope
sbb
out
gs
jmp
imul
push
lea
and
fwait
enter
add
adc
mov
dec
jae
iret
xchg
add
push
pusha
cmp
mov
loop
jnp
mov
pusha
xlat
shll
push
push
and
add
fistps
jae
sub
fcomps
jae
inc
out
jecxz
xor
call
inc
in
mov
mov
lods
push
pop
out
pop
or
adc
in
dec
fisttpl
lea
adc
enter
add
nop
pop
clc
sub
dec
inc
paddb
xor
cmpsb
cmp
adc
outsl
mov
mov
into
xor
cld
cmpl
dec
ror
aaa
pop
xchg
pop
mov
jg
jbe
adc
test
adc
jbe
and
dec
jae
push
adc
pop
dec
shrl
lcall
rcll
pushf
and
push
jecxz
repz
adcb
and
push
shlb
jae
addl
adc
inc
rcll
pusha
repz
adcb
and
push
shlb
jae
addl
adc
inc
rclb
pusha
repz
adcb
and
push
shlb
jae
addl
adc
inc
rcll
pusha
jae
cld
sub
mov
fldt
fwait
pop
mov
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
push
mov
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
cmpsl
sub
mov
mov
pop
mov
gs
inc
fiaddl
mov
cmpsl
sub
jp
push
pop
dec
daa
mov
or
push
fiaddl
scas
cmp
or
jp
push
pop
dec
test
dec
ljmp
or
enter
icebp
out
mov
add
sahf
lcall
push
jbe
xor
out
or
cmc
fldl
push
inc
mov
push
lret
stc
mov
cmp
push
fidivrl
cld
fs
shll
arpl
pop
pop
pop
lret
pusha
jp
push
das
lahf
mov
cli
fsts
inc
lret
mov
mov
pop
sbb
jp
mov
sbb
clc
jne
test
inc
jmp
cmpsl
sub
sbb
testl
movsl
aaa
sbb
jmp
stos
push
idivw
test
push
lcall
js
or
iret
iret
enter
push
push
mov
add
inc
lret
mov
or
jp
push
pop
fimuls
mov
push
mov
jg
dec
fiaddl
fistl
stc
repnz
repz
test
cmp
dec
ret
fs
arpl
ja
add
fdivrs
pusha
clc
sbb
pop
fwait
pop
out
xlat
xor
inc
pop
int3
inc
out
xchg
or
and
lret
pop
sti
outsb
out
jle
push
out
xlat
pop
dec
aaa
mov
pop
mov
addr16
cmpsl
sub
jp
push
pop
dec
aaa
mov
pop
mov
addr16
mov
sub
hlt
fistpl
or
outsb
sti
rcrl
mov
xor
fmull
in
fidivl
jmp
pop
push
mov
and
das
adc
push
ss
ret
push
mov
xor
divl
or
fcoml
pop
roll
push
idivl
xor
insb
pop
cli
xchg
leave
add
jmp
mov
shll
aaa
dec
push
mov
fstpt
sti
in
insb
dec
cmpsl
xor
and
mov
cmc
or
sti
mov
xchg
pop
and
clc
pop
pop
popf
fcoml
pop
dec
cmp
push
push
das
rclb
nop
std
dec
add
test
sbb
fildl
add
inc
lea
stc
in
pop
fs
icebp
pop
fsubs
push
mov
or
ss
xor
jne
push
mov
inc
aas
jecxz
add
xchg
cmp
cltd
insb
mov
xchg
test
lret
jne
test
mov
sbb
decl
jp
sbb
mov
inc
fcompl
cmp
and
inc
mov
mov
cmpsl
sarl
adc
cmp
sbb
ljmp
fcmovne
out
sub
lea
loopne
into
push
aaa
ss
fdivl
sub
insl
in
xor
loopne
movb
ja
mov
adc
dec
adc
xor
or
js
cs
test
dec
daa
test
and
imul
mov
fisubs
push
jo
out
or
dec
mov
daa
dec
jge
adc
and
jns
push
bound
ja
or
sbb
sbb
cmpsl
cli
pop
repnz
cmp
mov
sbb
std
rorb
jno
test
pusha
repnz
jb
mov
loope
in
dec
jns
push
nop
inc
es
or
iret
cmp
in
les
push
mov
cmpsb
pop
std
hlt
jbe
aad
insb
in
jb
add
call
cmp
sub
lock
sbb
in
xor
mov
jo
cmp
mov
movsl
cltd
sub
pop
mov
cmp
subb
and
lock
rolb
fidivl
in
movsl
xchg
ficompl
stc
sahf
lret
mov
dec
and
fsubr
rol
rol
aas
dec
or
dec
push
mov
in
sbb
cmp
mov
mov
jns
pop
lcall
adc
push
outsb
call
jecxz
push
mov
mov
flds
pop
enter
in
arpl
dec
in
add
sub
mulb
decl
imull
call
nop
scas
mov
jne
int3
dec
scas
bound
in
test
or
repz
inc
mov
and
cmp
aam
and
wbinvd
jp
leave
stos
nop
cwtl
pop
and
insb
push
shl
sub
test
add
jle
repz
sub
mov
mov
int
inc
pop
jge
daa
cld
pop
stc
dec
push
xchg
pop
pusha
xor
push
or
data16
xlat
xchg
xor
add
repnz
jl
test
ret
lret
or
loop
adc
dec
popa
mov
std
jecxz
mov
jbe
adc
add
loop
add
sbb
xchg
cmpsb
cwtl
and
inc
clc
add
push
or
pop
cltd
cltd
insl
addr16
inc
mov
cld
aaa
out
pop
sti
fmull
out
adc
in
add
idivl
push
out
mov
into
fadds
mov
lods
lcall
push
mov
dec
shll
into
pop
dec
xchg
xchg
aad
repnz
push
daa
cmp
test
es
dec
scas
dec
mov
test
xor
lock
mov
addr16
inc
jle
std
testb
mov
jg
pop
std
aas
lret
inc
cmp
sub
push
push
mov
nop
int
sahf
jmp
pop
jnp
shlb
int
push
dec
sbb
adc
aad
lds
mov
adc
xchg
jns
cmp
popa
jae
mov
sbb
mov
mov
and
lret
xchg
cmp
jge
stc
loop
add
scas
cmp
inc
jmp
jle
decb
xchg
push
jo
sbb
out
ret
in
dec
pushf
adc
scas
js
or
scas
cli
int
dec
sbb
in
jb
andl
int3
adc
dec
xor
aad
loope
out
add
fucom
adc
dec
and
in
cld
push
xlat
aas
xchg
jo
pop
jecxz
adc
out
into
aaa
jmp
clc
jle
inc
movb
mov
dec
ja
sti
int
mov
or
jmp
pusha
lcall
dec
push
arpl
add
pop
pop
sbb
js
in
les
push
pop
xchg
push
jg
push
loopne
mov
rclb
bound
lcall
fldt
mov
fistl
mov
xchg
mov
lahf
ss
in
push
cwtl
push
mov
das
outsb
bound
mov
xor
dec
mov
sub
push
daa
push
mov
mov
lret
mov
jo
movsl
mov
inc
adc
push
xchg
push
lock
mov
roll
lock
popa
mov
mov
add
ja
jle
xor
sub
jbe
xlat
bound
movsb
push
pop
sbb
dec
in
jge
add
lret
stos
ds
sbb
lds
fildll
bnd
dec
rol
call
jo
fidivl
ret
push
gs
ret
mov
or
xchg
outsb
dec
inc
xchg
jnp
stos
mov
andb
inc
xor
push
cmp
push
faddl
dec
jbe
repz
xchg
dec
fwait
cld
les
pop
push
cmp
outsl
push
pop
dec
out
inc
push
in
mov
jmp
push
pop
mov
data16
fsubr
int
jbe
pop
inc
sub
lea
jne
xchg
sub
mov
andl
push
pop
pop
jg
int
test
jne
and
out
mov
pusha
sbb
mov
adc
mov
leave
in
stos
jl
mov
xor
mov
pop
push
mov
outsl
insb
mov
lods
stos
jbe
leave
je
pop
nop
insb
pop
dec
and
jle
sti
adc
popa
lret
pusha
sti
push
je
cwtl
push
xchg
out
or
add
adc
popf
mov
xor
in
mov
mov
and
ljmp
cmp
push
xor
xor
shll
in
jmp
std
mov
mov
xchg
adc
ficompl
jno
nop
add
adc
push
xchg
mov
fldl
pusha
cld
in
ss
pop
sbb
push
jecxz
jg
xorl
push
dec
xor
movsb
das
dec
test
sub
add
inc
push
sub
stos
test
xor
sbb
loopne,pt
mov
pop
jmp
push
gs
jge
push
bound
daa
cmp
adc
xor
xor
xor
sbb
clc
scas
fdivp
in
mov
mov
ret
popf
sub
fimull
mov
test
inc
pop
cmp
add
popa
dec
mov
imul
jne
rorl
cmpsb
test
hlt
cwtl
int3
icebp
mov
jb
lods
or
mov
push
fisttpl
call
xchg
lcall
and
ss
mov
lock
add
sar
push
dec
adcl
loopne
shlb
out
cmp
scas
stos
out
jecxz
outsb
or
sbb
pop
test
mov
icebp
mov
cwtl
lret
mov
xchg
in
cli
dec
xor
xchg
out
int
adc
mov
inc
hlt
mov
adc
pop
aas
out
xchg
sarl
xor
repz
jge
icebp
dec
pop
rcrb
adc
stos
mov
stc
xchg
pop
mov
jmp
cmp
push
add
fs
and
inc
dec
mov
mov
sbb
dec
cwtl
push
pop
mov
push
testl
or
test
xlat
fmuls
sti
out
pop
out
cld
lahf
adc
js
mov
xchg
ret
add
xchg
rcr
cmp
pop
jmp
sub
in
fstl
add
jno
mov
sbb
xor
sub
aam
scas
repnz
es
test
cmc
mov
xlat
outsb
scas
imul
jmp
cmp
push
inc
xor
shrl
push
jmp
scas
into
shlb
cmp
xchg
scas
je
push
loopne
popf
mov
je
std
jo
lahf
mov
jmp
sahf
icebp
or
fbld
test
scas
mov
ret
dec
inc
cmc
cmpsb
push
inc
leave
mov
xorl
mov
or
into
or
cmpsb
adc
mov
cwtl
pop
cmc
adc
push
dec
sub
data16
movl
outsb
mov
and
or
xchg
bound
mov
mov
jmp
jae
sbb
xor
jne
fs
push
lret
lahf
cs
push
test
and
hlt
adc
pop
mov
xlat
ficoml
jl
xor
adc
loop
dec
push
enter
push
push
pop
pushf
pop
pop
lret
push
xchg
sbbb
fs
mov
enter
dec
or
ss
ss
cs
cltd
jb
xchg
xlat
rcll
mov
pop
aas
cmp
sbb
pop
bound
and
add
jmp
mov
mov
jno
pop
dec
mov
and
mov
cmp
xlat
pusha
jb
pop
dec
xchg
dec
dec
mov
jo
jp
push
sub
mov
icebp
aas
sar
sub
pushf
nop
jns
popa
xor
fldl
sub
bound
out
scas
arpl
inc
xchg
and
dec
pop
and
pop
test
mov
mov
out
popf
jne
push
stc
pop
pop
add
pushf
gs
or
xlat
jp
in
sub
adc
sarb
jmp
rorl
xchg
push
nop
in
lods
mov
adc
push
rcrl
lret
and
js
adc
xor
cs
jl
xchg
adc
movl
pop
and
enter
cmpsl
add
shlb
push
jg
cmp
mov
sahf
sbb
or
mov
add
add
jb
cmp
add
push
aas
mov
jl
cwtl
loop
xchg
fwait
imul
sahf
inc
imul
mov
mov
popf
inc
roll
subl
dec
or
cmp
or
fsts
adc
mov
mov
call
or
push
mov
in
mov
jl
ds
mov
push
adc
ljmp
push
dec
sub
leave
xchg
jl
adc
jb
fsts
js
xchg
addb
mov
and
adc
sbb
jns
stos
loopne
and
lods
lock
mov
ljmp
out
rcrb
xchg
js
int3
sbb
mov
sbb
cmpsb
cmpsl
ja
adc
stos
sbb
das
in
add
inc
mov
subb
mov
cwtl
test
rcl
ljmp
mul
data16
fucomip
cmc
push
lods
fdivl
insl
jo
icebp
aas
cmp
sub
push
rolb
cmp
jge
and
stos
mov
and
mulb
pavgb
int
sub
jnp
test
xchg
pop
push
stos
cmp
sbb
js
pop
push
fcoms
sahf
shlb
mov
out
sub
icebp
stc
loope
into
fdivrs
sbb
pop
out
sbb
imull
and
pop
scas
loop
test
pop
data16
das
cltd
dec
dec
or
imul
inc
xchg
cli
stos
pushf
roll
and
call
cmp
insb
fsts
movl
cltd
cmp
aam
lock
inc
mov
leave
xor
push
and
stos
jno
sub
rolb
in
filds
cltd
xchg
repz
sbb
add
xchg
ret
mov
out
mull
push
test
lods
in
xor
jmp
ljmp
sarw
xor
mov
fldenv
iret
jnp
pop
mov
xor
xchg
ja
ja
stos
daa
jno
lea
dec
loop
cmp
xor
mov
xor
inc
jp
sub
push
sarl
jnp
ds
dec
into
and
jo
jecxz
scas
test
cmp
sbb
insl
aas
sub
mov
mov
fwait
or
shll
fbld
out
sbb
pop
aad
test
xor
outsb
movsb
aas
out
clc
enter
sti
pop
aam
loopne
and
lods
lahf
in
addr16
mov
adc
dec
adc
icebp
or
adc
fwait
in
push
fsubr
subb
xchg
cmp
mov
and
gs
jge
and
jl
add
cmpsb
in
cmp
fdivl
insb
bound
movsl
ficompl
movsl
imul
inc
popa
jnp
jp
adc
mov
mov
or
sarb
test
xorl
dec
push
jmp
or
dec
pusha
rcrl
push
fidivl
adc
das
adc
jno
fldenv
fwait
out
dec
and
pop
fcompl
and
outsb
xchg
outsb
jmp
fstpt
insl
imul
push
push
movsb
loope
xchg
adc
bound
inc
lret
repz
jp
ret
pop
in
dec
repz
ret
in
ja
outsb
mov
movsl
cld
inc
addb
aam
jmp
fildl
lcall
imul
jg
adc
jae
rclb
stc
rolb
es
push
sub
subb
jmp
inc
lret
mov
jle
jge
cltd
sti
ja
fstl
addl
and
clc
adc
clc
in
fucomi
jbe
add
lock
adc
xor
pop
out
mov
pop
in
mov
call
shrl
xor
shll
jmp
les
push
mov
push
or
mov
jle
dec
loope
out
mov
inc
pop
daa
call
out
pop
cld
int
mov
in
lods
mov
test
jmp
push
into
insb
xor
mov
ficompl
inc
loopne
insl
pop
xorl
mov
adc
aas
inc
jo
push
scas
push
sbb
xchg
add
add
imul
pop
insl
xor
or
mov
les
cmp
pop
sarb
not
mov
scas
ss
ret
les
cld
pop
in
pop
sub
jns
ljmp
out
fldcw
cld
mov
adcl
ror
jns
std
xorl
nop
sub
pop
test
inc
sub
adc
scas
mov
mov
call
xchg
mov
xor
stc
mov
push
push
and
mov
xorb
cwtl
shl
cltd
popa
lcall
movsb
mov
clc
add
ljmp
callw
loopne
cmp
out
aad
pop
mov
dec
add
imul
das
xchg
rcrb
sarb
jb
stc
icebp
jno
sbb
daa
in
addb
mov
mov
jge
adc
xchg
xlat
inc
outsl
ljmp
fadds
inc
mov
aas
int3
mov
pop
out
sub
push
in
mov
or
dec
push
mov
jno
sahf
rcrb
mov
mov
xor
lods
adc
inc
inc
pop
or
push
mov
sbb
cmp
test
jl
inc
sbb
nop
inc
cs
out
sub
loop
cmp
insb
cmp
insl
and
push
pusha
mov
sub
pop
outsl
mov
mov
test
or
jo
cmp
in
out
mov
shrb
cmp
sub
jb
jmp
sti
inc
dec
inc
mov
gs
sub
sbb
imulb
dec
xor
inc
xchg
and
lret
aad
xor
cmp
push
xor
mulb
sub
mov
lret
popf
ret
cmp
mov
sarb
push
cmp
mov
jp
adc
stos
adc
call
jmp
inc
pop
iret
xchg
in
mov
jecxz
outsl
stos
gs
sub
mov
cli
shrl
cmp
shr
out
sbb
icebp
insl
loop
mov
xor
inc
push
inc
cmp
or
inc
fsubrl
jle
push
sahf
adc
es
subl
aaa
mov
mov
push
lods
pusha
scas
fs
dec
add
ret
ficoms
mov
pop
mov
xor
and
mov
cli
clc
data16
xchg
mov
mov
ss
adc
jg
pop
mov
xor
cmp
or
and
ss
fiadds
mov
mov
roll
pop
ror
pushf
mov
inc
fidivrs
jmp
lcall
push
and
xchg
insb
pop
lcall
cmpsb
orb
stos
ret
cmpsb
xor
push
scas
jl
add
stc
jg
movsb
and
sub
loop
sbb
xchg
and
cmpsb
fistl
mov
pop
xor
sarb
xchg
idivl
sarb
mov
jl
jl
arpl
mov
add
inc
ds
push
jp
out
adc
push
xchg
adc
mov
into
xor
and
daa
std
adc
ja
mov
push
insb
imulb
adc
jbe
cmp
sbb
in
inc
or
shlb
jmp
stos
push
enter
mov
inc
mov
add
pop
test
cmp
push
mov
xchg
mov
push
or
ljmp
push
sbb
inc
in
fisttpll
lock
mov
mov
push
inc
loopne
sub
push
mov
popa
mov
mov
mov
adc
cmpsl
test
mov
rolb
int3
mov
andb
dec
dec
in
push
hlt
out
sub
ja
adc
cmp
stc
mov
movsl
cmc
popf
test
dec
stos
scas
rcl
ljmp
mov
jl
push
sbb
push
lods
jmp
sbb
mov
mov
inc
js
sub
and
cs
out
jo
inc
xchg
icebp
pop
dec
repz
into
lea
daa
jmp
mov
and
cmp
jnp
aaa
xchg
shl
adc
repnz
cmp
adc
inc
or
adc
fistps
lahf
stc
inc
test
add
xor
jp
lds
scas
js
dec
jo
loope
xor
leave
insb
xor
xor
sbb
add
dec
jno
add
daa
sub
inc
clc
daa
dec
hlt
in
cmp
xchg
and
mov
nop
or
test
xor
lret
arpl
jb
popf
mov
popf
jbe
mov
and
std
clc
xor
dec
mov
nop
js,pn
dec
rorb
subb
adc
sbb
mov
lock
in
and
test
xchg
cld
cmp
test
sarl
inc
xor
pusha
lods
daa
movsb
or
inc
lods
pop
cmp
cmpsl
sub
push
mov
add
rorb
xor
sub
adc
lret
and
cli
scas
push
xchg
xor
iret
jno
sarb
fistpl
rolb
lds
loope
aam
and
push
test
cli
cltd
shlb
xor
movsl
aaa
or
mov
std
and
cmp
sub
pop
fmul
scas
dec
mov
pop
shl
mov
test
xchg
lret
mov
in
rcll
adc
xchg
dec
lock
and
shll
jne
pop
add
bound
sbb
and
inc
pop
insb
cmp
sti
xchg
arpl
call
jo
cmpsb
and
xor
repnz
mov
cmpsl
xor
cwtl
std
xor
insl
push
and
jp
fwait
leave
mov
inc
push
sarb
stos
into
leave
jne
es
dec
fistps
pop
pushf
int
or
lds
jno
pop
lds
push
das
sbb
iret
cmp
xlat
pop
out
dec
movsbl
out
int3
cld
cwtl
mov
repz
cmp
xor
ret
filds
pop
jns
and
fdivl
adc
shll
mov
push
mov
popf
vmulss
outsl
jb
xor
inc
movsb
push
lods
inc
scas
jge
adc
mov
mov
jg
jo
gs
dec
push
xchg
hlt
enter
dec
rcll
je
aam
add
jbe
cltd
push
ffree
rorb
xlat
cld
lret
add
jnp
pop
and
test
cmp
fdivl
push
pushf
mov
mov
imul
mov
mul
cmc
cmp
or
es
mov
lods
pushf
scas
mov
jecxz
sub
rorl
inc
inc
jbe
incl
push
outsb
xor
mov
mov
repnz
fcmovnb
shll
rorb
in
outsl
sub
outsl
scas
sub
jp
push
pop
dec
aaa
mov
pop
mov
addr16
cmpsl
sub
jp
push
pop
dec
aaa
mov
pop
mov
addr16
cmpsl
sub
jp
push
pop
dec
aaa
mov
pop
mov
ljmpw
mov
movsl
sub
jp
ljmp
fadds
mov
jb
adc
mov
xor
fld
push
add
xor
dec
mov
mov
and
adc
inc
pop
push
cmp
popf
xchg
jecxz
repz
ret
fst
int
and
xor
add
jae
inc
inc
push
push
mov
in
clc
xorb
mov
dec
js
push
mov
lods
mov
addr16
mov
addr16
and
jbe
mov
pop
bound
es
inc
dec
push
fcmove
push
jb
popf
or
lret
sub
xor
jb,pn
addr16
inc
enter
mov
imull
pop
xor
xchg
mov
arpl
shlb
loop
pop
arpl
jge
sub
mov
jne
andb
add
mov
fstp
mov
push
jns
mov
push
and
shll
xor
lcall
dec
fcmovnb
xor
in
xchg
pop
xchg
sbb
mulb
jb
aad
or
jl
xor
arpl
insl
inc
pop
push
push
mov
test
cmc
ret
ror
push
cmp
pop
push
add
ss
rolb
lods
in
cltd
imul
xchg
cwtl
mov
mov
ja
pop
bound
jge
and
sub
leave
fmulp
sti
clc
testb
mov
sbb
dec
and
insl
inc
pop
push
dec
mov
popf
xchg
jecxz
repz
ret
fst
int
cmp
adc
inc
pop
push
dec
mov
popf
xchg
jecxz
repz
ret
fst
int
cmp
inc
movups
js
xor
ljmp
or
fstl
jno
jae
out
pop
push
push
pop
insl
xlat
or
adc
mov
and
jae
push
xlat
jae
stos
add
mov
inc
jg
jbe
mov
pop
call
outsb
out
iret
test
cmp
out
pop
in
addr16
and
xor
out
leave
enter
or
sbb
inc
mov
mov
xchg
ss
inc
sub
adc
cmp
push
popf
xchg
cltd
fs
fdivrl
lret
loope
jmp
movsl
sbb
int3
pop
xorb
pusha
pop
les
xor
loop
aad
iret
cli
jle
jno
aam
int3
clc
and
sub
addl
jp
xorl
push
inc
mov
scas
mov
fcom
movsb
notb
out
out
sbb
test
fcmovb
pusha
xchg
jge
std
jle
lock
nopl
hlt
shll
rorl
dec
pop
push
std
fidivrl
jb
repnz
mov
lods
int
ljmpw
push
rorb
jecxz
bound
aad
xor
shll
rolb
xor
jmp
fimuls
cli
push
push
sub
repz
insb
daa
pusha
rol
xchg
mov
loop
mov
cmp
mov
push
mov
xor
sbb
ret
add
adc
sbb
mov
inc
mov
test
ret
je
gs
scas
sarb
aad
shlb
xchg
pop
jb
cwtl
mov
out
popf
xor
dec
xorl
imul
xchg
pushf
sahf
inc
shr
add
into
lds
mov
fs
jo
mov
sub
jecxz
push
gs
xlat
cmp
roll
cmp
out
fidivl
ficomps
lods
movl
push
les
je
jo
xchg
addr16
xor
std
sub
lock
out
cmp
cmp
pop
xor
lock
cmp
mov
std
cwtl
mov
or
push
lret
jnp
ret
stos
or
jle
std
sbb
fwait
cmp
lods
add
and
lods
dec
push
sub
adc
inc
lock
mov
or
push
lret
je
cmp
inc
xorl
nop
loope
mov
adc
outsb
in
fwait
stos
inc
push
das
pop
sbb
adc
xchg
gs
enter
xor
jae
or
xchg
loop
sub
inc
popa
inc
mov
popa
adc
mov
jb
cli
inc
fistpll
dec
adc
pop
or
mov
xchg
aam
pop
push
mov
les
and
adc
dec
sbb
cmp
lock
adc
jmp
lret
testb
mov
xorl
or
xchg
test
push
shl
pop
sub
add
jno
jae
or
sbb
in
popf
pop
sbb
or
inc
outsl
mov
aaa
inc
mov
adc
out
mov
or
mov
rcll
add
iret
das
mov
and
xor
xor
outsb
fidivrs
repz
repnz
xchg
xchg
jne
les
lret
in
fwait
hlt
adcl
lret
cmp
push
mov
lods
sbb
and
inc
stos
js
fistl
push
insb
imul
inc
dec
push
mov
inc
subl
cmp
inc
fdivrs
mov
xchg
icebp
imul
sahf
cmp
decb
iret
adc
push
lock
jb
mov
out
cwtl
inc
jmp
loop
adc
rcl
les
sub
adc
pop
mov
mov
xor
loopne
xlat
adc
adc
mov
mov
pop
das
and
fdivr
fwait
pop
aam
sti
mov
adc
out
dec
push
or
sarb
cmp
mov
loopne
mov
sbb
mov
mov
pop
mov
pop
mov
xor
fcomps
jnp
mov
jo
in
fcomps
mov
mov
push
jnp
pop
ss
scas
addb
sbb
inc
aam
push
sub
mov
imul
outsl
sar
test
out
or
ret
fbstp
test
add
jmp
fs
push
push
mov
sub
fsubl
adc
mov
ret
push
ja
or
ds
cmp
and
adcl
stc
testb
stc
dec
and
sbb
jge
ja
jp
push
test
imul
aaa
test
stc
push
imul
hlt
orl
inc
inc
lods
add
daa
adc
jmp
mov
and
ds
mov
jns
hlt
int
in
fstpt
jne
je
jne
pop
test
or
ss
add
outsl
xor
sub
sbb
pop
adc
dec
mull
sti
jmp
mov
in
mov
test
stc
lods
add
shl
add
jle
shll
jge
ljmp
js
cmp
lods
adc
adc
or
subb
jns
in
push
movsl
add
pusha
imul
mov
lret
mov
pusha
out
iret
mov
nop
pusha
cmp
bound
scas
lret
push
cmpsl
xchg
std
mov
bound
and
mov
inc
jl
movsb
jg
or
add
sbb
test
adc
lea
rcl
mov
sbb
cli
scas
fstpt
test
lret
dec
xchg
rorb
push
les
mov
pop
dec
lret
push
and
adc
dec
je
loopne
mov
sub
jno
adc
aad
jns
add
mov
sub
dec
mov
cwtl
imul
pusha
xchg
sbbb
and
cmp
fmulp
lret
andb
push
cli
sahf
rorb
mov
mov
cmp
fcmovbe
subl
and
adc
call
or
sbb
or
pop
stos
jge
pop
adc
mov
fstl
xchg
jae
int3
push
jg
cmp
mov
jb
xor
pop
inc
cmp
or
xchg
push
inc
add
sbb
cltd
gs
arpl
mov
xchg
repz
fsubp
xor
sbb
mulb
ss
sub
xor
pop
int
inc
dec
and
stc
cmpsl
and
push
dec
and
pop
push
insb
push
sti
push
aam
in
mov
add
sub
xchg
add
stc
out
push
xchg
adc
mov
pushf
loopne
sbb
dec
aam
sbb
pusha
push
aaa
lock
movb
pop
out
xchg
maxps
xlat
xchg
pop
and
adc
fmul
push
js
ffree
xchg
adc
aaa
lcall
shll
xchg
mov
ja
popf
push
dec
jae
jp
mov
insl
mov
in
mov
and
in
addr16
mov
pop
mov
scas
clc
int
testb
lds
jmp
into
mov
sbb
out
mov
jle
sti
mov
mov
int3
cld
sahf
cmpps
cmp
stc
ret
add
aam
sub
andl
push
ficoml
cmc
arpl
insb
testb
nop
xchg
jb
pop
rcr
into
leave
aad
cmp
pop
adc
jp
dec
mov
test
jno
cld
push
push
arpl
mov
push
into
aad
mov
mov
push
cmp
pushfw
jp
mov
lcall
hlt
sub
fnstcw
jno
or
arpl
shlb
mov
add
sti
pushf
sbb
lret
mov
or
mov
jns
push
insl
push
or
dec
jb
ljmp
or
lods
les
repz
rorl
repz
mov
pop
pop
pop
stos
data16
mov
insl
dec
sbb
iret
jecxz
pop
hlt
xor
push
cld
push
pop
gs
test
repz
dec
es
xchg
inc
ret
fwait
mov
or
xchg
mov
aam
push
inc
nop
inc
add
aas
xlat
rcrb
xchg
jo
mov
xchg
dec
ja
jecxz
sbb
daa
push
jp
cmp
jecxz
aas
dec
jo
jl
and
sar
hlt
cmp
sub
inc
bound
mov
cmc
mov
add
mov
jle
out
jp
push
sbb
aad
shr
jb
mov
mov
jns
out
dec
shrl
lods
cmp
xchg
jns
pop
cwtl
shlb
xchg
sub
xor
jae
pop
fldt
imul
iret
mov
mov
xor
adc
filds
inc
shlb
ljmp
xor
cltd
add
inc
push
sbb
cmp
fsubl
pop
repnz
push
xor
inc
xchg
dec
mov
imul
nop
mov
imul
mov
loopne
outsb
mov
movsl
andb
fistps
test
sub
adc
cmpsl
cmp
cs
push
mov
iret
sarl
push
mov
das
jmp
jg
aad
xlat
mov
inc
lcall
fldt
rorl
dec
inc
mov
aad
nop
je
dec
fisttpll
outsb
std
faddl
mov
fld
cltd
jge
inc
push
repz
cli
lods
sbb
and
jmp
lock
pop
sub
inc
test
jmp
inc
push
dec
cmp
cld
mov
ret
mov
fidivs
pop
mov
cld
pop
cmp
or
add
jnp
dec
push
xor
cltd
fmull
bound
mov
std
add
lcall
gs
xchg
jne
inc
jmp
gs
fmull
xchg
insb
pop
out
aaa
inc
mov
aas
adcb
adc
or
pusha
dec
lods
in
pop
pop
push
insl
sbb
push
mov
out
pushl
push
leave
ret
adc
scas
mov
ds
sub
jg
rclb
lods
inc
pop
aas
jmp
ret
push
xchg
test
adc
push
scas
dec
movups
or
imul
sub
mov
mov
in
pop
and
or
fimull
aaa
push
and
mov
popf
jecxz
pop
xchg
lret
inc
sti
jno
mov
js
push
sub
mov
in
adc
stc
fwait
add
pop
and
sub
ja
jo
out
dec
xchg
ret
mov
dec
loopne
cli
iret
bound
adc
popa
inc
fisubs
insl
cld
shlb
jmp
andb
xchg
dec
inc
mov
popf
jb
aas
adc
pushf
cmc
add
add
xor
or
cmc
sbb
and
and
mov
pop
das
bound
out
aad
movsl
xor
outsb
and
sub
mov
std
pusha
jecxz
sbb
push
and
pop
outsl
xchg
sbb
imul
je
imul
mov
xor
pop
dec
xsaveopt
inc
sbb
xchg
sub
sahf
idivl
outsb
rcrl
push
jo
or
nop
fs
inc
clc
jle
gs
enter
iret
sbb
aas
adc
enter
push
add
movsl
push
arpl
push
inc
lcall
push
mov
jae
mov
std
sub
in
rcll
sbbl
xchg
int
ror
cmc
adc
xlat
pop
pop
aaa
cmp
dec
dec
inc
cs
pop
adc
jmp
ficoml
inc
inc
adc
stc
mov
push
les
pop
lods
ss
lret
out
mov
mov
dec
xor
mov
popf
mov
push
xor
imul
jmp
xlat
in
lods
mov
ss
xchg
cmpsl
shlb
pop
jecxz
in
inc
es
inc
pop
mov
rcl
cli
mov
cmpl
xlat
pop
jbe
sub
sti
mov
push
jne
fistl
inc
pop
and
or
clc
inc
popf
imul
mov
int3
loope
cmp
mov
outsb
subb
adc
into
sbb
movb
pushl
std
xchg
push
aas
shll
jge
shrb
adc
dec
add
jecxz
inc
or
js
rorl
xchg
xor
test
and
dec
mov
cli
out
pop
inc
sub
mov
imul
out
lret
std
fwait
out
outsb
xchg
sbb
adc
lods
mov
shlb
add
jl
aaa
fisttps
jle
lret
dec
push
loopne
dec
xor
in
out
das
es
push
nop
mov
mov
fimull
movsb
lods
rcll
inc
cmpsl
sub
loope
insb
js
mov
push
xchg
push
lcall
sub
and
enter
loop
aas
fnstenv
sbb
shr
adc
mov
push
sbb
dec
scas
push
outsl
fwait
xchg
sub
push
lock
pop
push
inc
mov
or
push
mov
add
stos
jbe
pusha
sub
fcompl
jne
adc
fdivr
mov
loop
clc
enter
enter
xor
inc
push
or
sub
xacquire
mov
lcall
movsl
jne
xchg
outsl
orl
loop
nop
test
push
repz
outsb
shlb
aaa
xchg
negb
jno
subb
sub
sbb
sub
jmp
pop
lock
dec
mov
dec
pop
jno
incb
stos
loopne
mov
or
add
push
es
adcl
loop
xor
sbb
inc
sarb
in
lock
out
push
call
dec
sahf
xchg
ljmp
dec
mov
inc
cmp
push
gs
cmc
test
add
dec
cmpsl
inc
cmp
pop
mov
mov
gs
mov
les
xor
push
cmp
cltd
jae
push
into
int3
lahf
cmc
into
arpl
mov
loope
cmp
idivb
sar
sub
lcall
out
pop
mov
test
jmp
ss
imul
mov
cmp
repnz
enter
lock
mov
sub
sub
inc
repz
cmp
inc
pop
push
xchg
pop
jo
xchg
ja
mov
hlt
inc
movsl
lahf
pop
add
std
mov
mov
pop
scas
and
negb
mov
xchg
int
push
mov
inc
loop
jnp
and
pop
inc
pop
sub
cwtl
inc
push
sbb
push
mov
arpl
push
stos
xchg
mov
sbb
push
jp
int
mov
stc
sub
jl
out
dec
test
xchg
aam
aaa
cmpl
xor
ficoms
cmpsl
loope
es
or
push
inc
fisttpl
dec
ljmp
repz
pop
fistpll
rcl
rcrb
dec
clc
lahf
mov
lods
jae
jp
mov
push
lahf
and
popa
ja
es
mov
push
pushf
add
cmpsl
or
imul
jno
push
add
movsl
jmp
sarb
inc
repz
dec
repnz
cmpl
push
inc
in
dec
mov
in
sbb
hlt
jae
dec
sbb
clc
adc
lds
stos
test
mov
addr16
sub
fimull
inc
and
or
dec
mov
xor
jg
lcall
inc
inc
ss
xchg
out
and
inc
inc
ret
outsl
shll
lcall
ret
test
xchg
aaa
inc
fprem1
outsb
mov
and
xchg
adc
aam
mov
jno
sub
fnstenv
fisubrs
stc
or
dec
ret
adc
push
lret
inc
imul
jp
inc
sbb
mov
nop
aaa
inc
and
mov
inc
stc
xor
push
int
popa
mov
aad
add
jp
dec
mov
mov
xchg
psllw
arpl
lea
enter
fadds
mov
dec
push
push
subl
hlt
push
add
or
aas
or
pop
xor
mov
movsb
faddl
in
andl
lret
push
data16
mov
dec
dec
mov
nop
cli
loop
je
dec
mov
loop
xor
dec
loop
push
mov
inc
dec
mov
and
shr
jbe
jns
mov
xlat
pusha
or
and
mov
out
pushf
pop
and
pop
leave
xchg
test
popa
mov
call
sarl
adc
fmull
ret
outsb
ds
mov
push
out
leave
push
cmp
pop
loope
adc
bound
cmp
or
mov
ret
ljmp
lods
mov
cltd
add
push
dec
sub
call
cmpsb
lret
addl
mov
ret
jle
dec
movsb
mov
adc
xchg
xlat
mov
dec
jno
jno
in
pop
cld
fnstcw
adc
rorl
and
insb
pop
dec
mov
test
mov
ret
inc
adc
aam
lret
out
loope
mov
push
fldt
sbb
addl
mov
cmp
xor
adc
in
arpl
pop
dec
lahf
rcr
int
std
popf
mov
aam
lock
sub
xlat
xchg
pop
lret
test
pop
test
fdivl
add
or
add
mov
pop
stc
test
inc
mov
faddl
add
push
repnz
sub
ret
stos
sbb
shlb
ljmp
inc
and
sarb
fsub
out
popf
ja
jno
pop
negb
aas
xchg
push
jmp
cmp
nop
jo
push
test
imul
bound
mov
scas
pop
testb
cmp
stos
je
test
cmpsl
loop
outsb
lods
subb
xor
arpl
adc
adc
roll
in
jl
pop
insb
add
test
adc
daa
push
xchg
push
inc
rcr
or
lret
int
push
cmp
cmp
or
jecxz
xlat
add
xchg
flds
inc
inc
clc
mov
push
dec
jo
notl
fstpt
dec
jb
push
xor
and
sub
inc
movsl
push
scas
xchg
xor
pop
stc
into
int3
icebp
hlt
add
test
push
push
jp,pn
jno
mov
mov
xchg
lods
add
sub
movsb
inc
push
xor
or
push
out
divb
mov
fnsave
fmul
popf
push
push
fsts
cltd
jle
stos
lcall
aam
jne
pop
pop
lea
popf
iret
cmp
int3
movsl
jle
mov
add
sbb
dec
xchg
enter
sbb
shll
xor
shlb
xlat
arpl
lret
inc
mov
stos
pop
andb
or
out
in
sub
pop
adc
mov
or
sub
test
jb
add
add
cmp
jbe
addr16
push
adc
jp
push
js
inc
ss
dec
mov
jb
push
ja
push
pushl
test
in
sub
incl
jbe
test
pop
dec
xor
dec
btr
jmp
add
xchg
xchg
sbb
sahf
mov
js
and
inc
mov
cmp
adc
fcompl
shl
test
cwtl
dec
gs
imul
jo
or
jg
xor
xchg
lods
daa
jge
cmpsb
insl
jno
nopl
inc
inc
stc
mov
mov
adc
jg
mov
in
and
or
repz
ret
sub
push
jne
adc
sti
lahf
pop
xchg
sbb
xorb
call
cmc
adc
push
sahf
mov
xor
jmp
cmp
sarb
mov
sbb
stos
xor
mov
in
pop
aam
push
imul
pmaddwd
xchg
adc
or
movsb
dec
xor
les
call
aas
jp
repnz
out
sub
insb
mov
mov
rcll
test
mov
sub
push
add
xor
mov
mov
sbb
bnd
xchg
xlat
idivl
mov
pop
scas
aaa
dec
data16
xor
inc
out
push
pop
mov
mov
into
shl
outsb
cwtl
lret
or
fsubrl
inc
inc
xor
outsb
inc
mov
sub
push
lcall
mov
or
adc
in
sub
out
aad
cmc
fs
out
in
push
cld
sub
insb
jmp
stos
bound
test
push
enter
sbb
or
inc
jo
or
in
loopne
repz
lahf
shll
cmpxchg
ds
lahf
dec
les
in
or
push
stos
call
insb
add
xchg
popa
shl
mov
andl
ret
and
fadd
jp
lods
jo
orb
and
outsl
arpl
add
lret
in
ja
adc
mov
jle
bound
jecxz
mov
scas
pop
add
daa
es
mov
and
xchg
add
lea
sbb
sub
arpl
insl
inc
pop
push
dec
mov
popf
xchg
jecxz
repz
ret
fst
int
cmp
adc
inc
pop
push
dec
mov
popf
xchg
jecxz
repz
ret
fst
int
cmp
adc
inc
pop
push
dec
mov
popf
xchg
mov
std
repz
ret
leave
and
xor
add
adc
inc
pop
push
lea
popf
xchg
cli
xchg
jne
xchg
cmp
sub
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
repz
arpl
mov
xchg
mov
pop
cmpsl
xor
add
or
pop
push
add
add
pop
add
lret
add
add
add
or
add
add
add
ds
add
add
add
jp
mov
add
add
add
add
jle
movl
push
add
add
sbb
add
and
mov
add
add
add
xlat
add
add
cltd
add
inc
add
add
add
jbe
jle
add
repz
dec
add
add
add
push
add
add
add
add
add
popa
add
add
add
add
sub
jno
push
add
inc
add
add
jns
jno
ss
add
push
js
outsb
add
add
add
add
insb
add
xor
sbb
mov
std
add
add
inc
add
jbe
inc
add
sbb
push
or
add
xor
imul
xor
xchg
add
add
add
add
test
addl
add
add
add
add
add
add
mov
add
add
mov
xchg
add
jo
push
add
or
test
add
add
add
jb
lret
add
or
push
lds
sub
out
add
add
add
cmpsl
add
add
add
add
add
add
pushf
add
add
add
add
add
add
add
add
add
add
add
addl
test
add
test
outsb
add
add
and
jge
into
add
add
add
pop
add
add
cmp
xor
std
add
add
add
movl
push
add
add
add
add
push
add
push
add
addl
sub
add
add
add
add
add
add
sub
lret
add
add
add
push
xchg
push
rolb
lods
add
add
add
add
add
add
add
insb
add
mov
add
add
add
add
add
add
add
add
cmpsl
add
jae
add
or
dec
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
and
and
cmp
insb
add
add
add
add
dec
add
add
add
add
add
add
add
add
sub
mov
addl
repz
add
pop
add
add
out
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
pop
add
add
add
add
add
add
jbe
lods
add
add
add
add
add
add
jecxz
xor
add
add
add
add
add
add
add
add
add
add
add
add
aam
mov
add
jecxz
das
add
push
add
dec
add
add
add
add
add
add
push
add
add
rorl
xlat
outsb
push
fcomps
jp
repz
mov
xchg
cmpsb
ljmp
jb
sub
imul
pop
int3
mov
lods
inc
fnstenv
aam
arpl
sub
xor
ret
add
sub
mov
sbb
pushf
push
outsl
adc
test
jbe
xor
cmp
add
mov
dec
jbe
push
aas
in
add
insl
ds
mov
inc
or
push
loopne
fst
pop
out
adc
adc
inc
cmpsl
cmp
mov
aam
je
mov
mov
xchg
sti
adc
fnsave
imull
and
loopne
xor
push
add
pop
mov
outsl
gs
mov
bound
add
xlat
inc
ss
jns
leave
and
outsl
add
or
lds
pop
jecxz
mov
add
xchg
mov
jns
cmp
mov
pop
stc
clts
fadd
test
lret
out
push
mov
lea
jge
aad
add
jl
push
or
je
sub
jp
mov
sbb
mov
leave
mov
or
pop
jmp
cld
leave
mov
out
add
xchg
in
andl
movsl
arpl
aas
pop
xchg
les
notl
adc
adc
std
outsl
xchg
adc
ret
aas
adc
jno
mov
or
add
adc
loope
test
fisubs
rorl
scas
jle
lahf
test
jns
and
and
iret
in
in
cmpl
inc
dec
push
jge
mov
adc
cmpsb
add
shl
push
adc
mov
lea
andb
sbb
pushw
add
pop
push
outsl
jne
sub
push
loop
xchg
ljmp
mov
mov
push
fcomi
ja
outsl
mov
xchg
cmp
mov
cltd
leave
std
dec
cltd
subl
mov
push
pusha
push
sub
nop
mov
fildl
jno
dec
push
cwtl
insb
test
xchg
push
inc
int3
test
push
in
rorl
sahf
inc
out
and
call
add
inc
xlat
imul
mov
cmp
clc
cmp
test
cmp
push
and
test
repz
fsubs
das
xchg
push
shl
push
mov
arpl
fists
gs
das
adc
xchg
scas
lock
xchg
das
push
sub
daa
push
mov
subl
or
and
pop
lea
sbb
mov
or
popf
or
aas
mov
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
pop
hlt
add
xor
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
push
add
in
hlt
add
in
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sbb
add
and
add
sub
add
inc
cmc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
cmc
add
add
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
push
testb
pop
testb
testb
insb
testb
je
add
jl
add
test
add
xchg
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
mov
testb
fdiv
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
add
int3
clc
add
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
clc
add
add
add
or
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
stc
add
mov
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
pop
cli
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
cli
add
cwtl
cli
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
