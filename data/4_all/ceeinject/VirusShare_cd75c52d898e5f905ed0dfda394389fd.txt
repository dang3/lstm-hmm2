call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
and
dec
mov
push
stos
jp
jae
mov
cmp
sub
jnp
imul
mov
pop
stos
fstpt
inc
push
sti
push
lahf
mov
cmp
sub
cmp
mov
adc
mull
adc
xchg
push
mov
and
paddsw
fwait
pop
in
into
sub
movsl
in
jnp
or
sbb
mov
stc
push
imul
lret
ds
xor
jbe
xlat
pop
jle
shll
mov
add
push
xor
mov
jp
out
lcall
cmpsb
mov
jp
es
scas
xchg
add
push
jnp
dec
jge
sarl
push
fwait
xor
shll
in
pop
fimuls
and
and
mov
xchg
popa
cmp
mov
cs
mov
jmp
dec
scas
sbb
cld
pop
or
xchg
jmp
jle
mov
sti
xchg
mov
mov
push
arpl
fidivs
sub
mov
jnp
out
pop
fwait
jle
dec
aas
xor
push
and
int
sub
arpl
ja
mov
jnp
add
or
xor
sbb
pop
mov
inc
xor
aas
cli
cmp
or
test
ficoml
clc
bound
mov
dec
fisttpll
fildl
sti
sbb
add
pop
enter
lret
push
sti
push
jmp
sbb
or
cmp
sub
jnp
imul
mov
pop
stos
fstpt
lret
push
sti
push
jmp
sbb
or
cmp
sub
jnp
imul
pop
out
add
outsb
movsl
jp
lods
fisttpl
jmp
cmp
bound
sbb
mov
pop
in
mov
dec
lret
dec
bound
pop
cmp
pop
popf
cmp
jnp
cmp
lcall
sbb
jbe
fcomp
loop
sub
sub
jl
nop
fwait
or
out
mov
jl
test
push
out
xchg
mull
out
lock
imul
cltd
ljmp
enter
and
ds
xor
mov
push
mov
aam
mov
dec
popa
arpl
fldenv
in
adc
cmp
call
ljmp
mov
xor
loop
sub
sub
lahf
mov
popl
and
xchg
subl
imul
lds
dec
xor
pop
ret
mov
call
jle
stc
jns
jle
xchg
rcll
std
ljmp
mov
push
push
dec
xor
push
xchg
shll
and
push
leave
popa
or
xor
pop
popf
cmp
fsts
push
jnp
push
and
aas
int
cmp
lret
pop
add
cmp
nop
cmp
dec
fidivs
and
es
out
mov
or
xchg
pop
insb
cltd
adc
or
push
cmp
adc
push
mov
adc
negb
push
cmpsb
pop
cmc
cltd
fwait
prefetch
mov
cmp
inc
add
imul
dec
cmpsl
mov
pop
imul
pop
lret
dec
and
xchg
loop
das
test
push
lds
leave
frstor
inc
in
mov
cltd
int
jecxz
adc
push
push
mov
cli
add
imul
cmp
lcall
sbb
or
xor
xorb
sub
dec
pop
js
push
and
fildll
xchg
push
xsha256
cmpsb
rcrl
lahf
outsb
div
cltd
sbb
cmc
adc
pop
jp
in
pop
popa
mov
cmp
add
and
js
push
fcomip
sbb
and
pop
add
lods
mov
xlat
cltd
sbb
rolb
stc
sub
enter
mov
mov
xchg
cwtl
sbb
and
movsb
cmp
or
call
sbb
xor
push
dec
scas
dec
add
inc
fwait
mov
punpckhwd
arpl
mov
int3
mov
enter
in
mov
jl
and
add
add
inc
ss
cmp
jl
jl
imul
sub
loope
sub
call
mov
or
lret
insl
jb
out
je
or
jl
mov
ja
jmp
inc
loop
popa
xor
adc
adc
mov
arpl
adc
pop
inc
push
inc
push
insb
ss
adcl
cmp
sub
lret
add
adc
int
adcb
rcl
outsb
jbe
pop
popf
pop
sarb
xlat
ret
test
adc
shr
xchg
scas
xor
icebp
lcall
pusha
add
cld
stos
add
add
jnp
pop
mov
push
iret
es
xchg
add
push
loope
mov
loope
repz
push
sbb
adc
clc
xchg
jno
int3
jg
push
sub
jge
test
mov
mov
add
insb
in
movsl
jno
jns
mov
js
mov
xchg
mov
adcl
orl
fistl
dec
cwtl
test
lret
and
sbb
push
jae
dec
or
sub
add
insl
xor
jecxz
fisttpl
push
dec
xchg
mov
dec
test
inc
pop
mov
add
arpl
lods
add
sbbl
push
outsl
das
or
cmp
pop
pusha
cmovno
in
dec
movsb
cmc
cld
jmp
sub
push
popf
inc
xorl
int3
jne
inc
cmp
and
mov
fimuls
dec
push
pop
outsb
lock
push
test
inc
xlat
or
xor
imul
inc
mov
jmp
lret
test
push
fwait
dec
and
outsb
mov
out
adc
adc
les
arpl
mov
out
fidivs
adc
out
jmp
sub
mov
mov
jae
jecxz
scas
clc
dec
jecxz
push
imul
or
bound
add
hlt
lahf
rcr
xchg
jnp
xchg
fst
mov
adc
or
push
cli
test
mov
call
adc
lock
add
mov
xchg
test
jae
fcoms
mov
lret
pop
popa
xchg
sub
mov
dec
das
and
and
in
inc
stc
daa
jae
cmc
push
jg
mov
pushf
sti
inc
add
jb
popl
jge
push
xor
and
sub
jg
pop
and
out
mov
or
adcb
or
or
lea
cmpl
dec
idivb
pop
pop
dec
mov
loopne
push
mov
mov
jns
daa
xchg
pop
push
or
mov
ret
mov
bound
into
add
lret
jmp
add
in
xor
loop
push
xor
imul
jbe
lcall
inc
out
jecxz
mov
pop
loopne
mov
pop
movsl
xor
pusha
jg
xchg
inc
push
jae
sbb
test
arpl
stc
jnp
jg
insb
movsb
xor
sub
lock
iret
push
inc
sti
sub
xchg
mov
mov
js
pop
add
ja
imul
hlt
push
cmpsl
mov
fidivl
adc
lds
in
or
cmp
mov
and
jge
dec
sbb
out
ss
aaa
cmpb
and
dec
fmull
aam
add
pop
rcll
push
xor
mov
ss
in
dec
cwtl
sti
or
out
aad
bound
xchg
mov
subps
pop
adc
jnp
mov
cmp
lcall
cld
jo
mov
lds
mov
sbb
ret
stc
add
inc
pop
aad
sub
aad
mov
loop
fadd
xlat
out
out
stos
pop
scas
andl
loopnew
xchg
lcall
mov
test
dec
stc
sub
xor
xorl
dec
inc
les
mov
push
adc
adc
lret
insb
xor
jae
daa
jle
pushf
xchg
test
das
jle
mov
mov
adc
ror
push
lods
dec
outsb
jge
xor
dec
or
mov
out
in
sbb
xchg
push
and
orl
lds
pop
gs
add
and
fdivrs
mov
cwtl
mov
icebp
fcmovnu
subb
pop
fs
imul
icebp
roll
push
add
aam
jmp
int
jne
sti
and
scas
sub
aam
sahf
push
push
insl
lret
xchg
popa
fisttpl
ret
rclb
xor
mov
and
mov
mov
enter
pop
subb
pop
scas
xor
movswl
push
cmp
bound
pop
aam
scas
mov
leave
xorb
xchg
fs
push
cmc
dec
add
shlb
lret
sahf
stos
mov
and
push
js
imul
clc
aad
std
insl
sbb
mov
pop
push
mov
add
cs
cmp
mov
lcall
roll
jno
sbb
jmp
imul
jg
cmp
xchg
into
push
mov
out
lea
dec
cli
mov
xchg
incl
fcom
cli
inc
ljmp
mov
sub
push
push
push
jg
mov
jns
ljmp
xor
icebp
clc
pop
xorl
dec
mov
dec
add
jecxz
rcll
ss
out
pop
mov
repz
lods
mov
in
sub
addl
jb
inc
adc
xlat
fwait
lcall
ss
cmp
int
pop
insl
jecxz
std
rcl
mov
lds
pop
call
cwtl
in
cmpsb
jp
loope
xor
pop
test
push
mov
inc
mov
cs
orb
mov
cwtl
push
mov
push
int3
push
or
movsb
push
arpl
lahf
mov
mov
inc
adc
xor
cltd
mov
jp
in
popa
add
jle
mov
sub
clc
loope
mov
add
loopne
pop
es
sbb
call
pop
cli
hlt
mov
aas
jae
cmp
cmpsl
addr16
adc
lock
aas
push
adc
jae
into
xchg
aas
push
cmpsl
vpcomq
shl
jnp
cs
shll
lods
or
aam
jle
test
mov
or
loop
icebp
aad
ret
imul
lcall
nop
sub
std
or
ret
mov
and
pop
sbb
pop
aas
int3
add
or
movsl
shll
scas
int3
faddl
xchg
enter
ds
and
mov
push
jno
jl
cli
mov
sub
in
sub
stos
dec
add
sub
js
arpl
in
mov
sbb
data16
sbb
out
mov
shld
cmp
nop
sub
stos
jne
xchg
jae
xchg
pop
sub
mov
aam
jno
lret
mov
xchg
test
inc
push
sbb
and
pop
mov
popa
rclb
iret
cli
jb
mov
sbb
in
ljmp
movsb
mov
ss
and
repnz
ljmp
clc
ds
aad
adc
adc
pop
lret
repz
mov
jmp
addb
sbb
and
sbb
and
lcall
pop
mov
mov
push
int
mov
xor
icebp
daa
dec
insl
sarb
dec
pop
mov
sub
mov
jp
inc
scas
in
int3
fs
fcoms
push
fmull
loopne
xchg
sub
bound
addb
outsl
ds
shll
mov
mov
lods
lahf
orb
and
dec
jae
scas
push
xchg
pop
inc
mov
dec
push
inc
addr16
jg
cmp
pop
push
or
je
loope
in
pop
fdivl
popa
inc
movsl
addl
loop
mov
mov
dec
sub
call
cmp
and
jae
xor
pop
loop
icebp
sub
out
pop
pop
leave
cvttps2pi
add
xor
mov
cmp
jbe
pop
jne
add
mov
ret
push
xchg
mov
inc
cmp
in
push
loopne
sbb
inc
sub
push
imul
dec
jge
hlt
jle
mov
inc
std
lods
addl
mov
or
add
jl
loope
es
adc
lahf
mov
dec
shll
stc
jmp
jne
adc
mov
jl
cmp
xor
aad
dec
push
jmp
notl
in
repnz
sbb
fcomi
xor
push
push
in
jo
sarb
mov
stos
push
and
sub
pop
pusha
add
jge
sbb
xchg
inc
mov
xor
or
ja
outsl
orb
cwtl
mov
lods
jo
sub
xchg
cld
into
ret
lahf
fistpl
mov
inc
aas
fistpl
sbb
adc
cmc
sbb
lods
jecxz
jmp
loopne
cli
jle
cmc
xor
sbb
add
inc
push
dec
imul
insb
adc
icebp
or
mov
or
add
xchg
pusha
inc
jbe
or
lock
mov
clc
xorl
mov
or
sbb
adcb
pop
ljmp
pop
cmc
movsb
xor
adc
test
xor
mov
fcmovne
test
mov
xlat
mov
xor
fiadds
je
mov
sbb
sub
in
fdivl
int
ljmp
insb
adc
and
testl
sbbb
fnstsw
push
imul
jns
add
jmp
push
inc
mov
mov
mov
aam
inc
jns
jo
xor
cmp
dec
pop
mov
push
inc
outsb
pushf
mov
pusha
loop
jns
sub
push
movsl
mov
shll
sub
aad
jp
mov
in
mov
mov
xor
lds
data16
dec
sahf
xor
jnp
mov
mov
jne
cmpl
jg
popa
ret
cmp
repz
lret
ss
movsb
popf
ss
adc
nop
xor
nop
movl
fdivr
insl
jne
test
lock
inc
push
arpl
jmp
ret
and
ret
or
mov
jl
xor
add
mov
push
ds
pushf
sub
fisubrl
ds
test
out
pop
mov
sub
fisubs
pop
inc
out
xor
xchg
xchg
aad
das
xor
adc
push
cmp
repz
add
es
jnp
bound
add
pushf
testl
in
sub
pop
xchg
dec
adc
fwait
sub
jns
clc
mov
in
cmp
adcb
sub
mov
add
cli
andb
aas
icebp
test
xchg
lret
mov
movsl
push
pushf
into
xchg
mov
jns
push
xchg
pusha
jns
inc
loopne
sbb
or
mov
mov
enter
inc
fwait
sub
leave
bound
mov
pop
cmpsb
cmc
inc
incb
into
scas
in
dec
stc
addr16
jg
mov
cmp
xor
das
cmpsl
mov
aaa
test
push
lds
test
add
insb
mov
cmp
sub
aam
aaa
decb
and
xor
enter
fisubl
push
ds
div
mov
or
push
cli
leave
repz
test
add
clc
or
inc
inc
mov
leave
dec
jle
js
shll
sbb
iret
jge
add
dec
not
push
xchg
sub
dec
push
xor
inc
fs
int
call
xorb
mov
jo
xchg
cmp
repnz
mov
or
test
xchg
cmpb
jg
or
xorl
in
stos
fisubl
jp
xor
nop
sti
imul
and
addl
adc
mov
dec
imul
fsub
sbb
cwtl
aam
xchg
out
gs
jnp
mov
add
and
es
adc
jle
sub
xchg
adc
sbb
mov
out
cmpsb
sbb
xchg
call
xor
inc
les
add
xor
push
mov
xor
jns
loope
mov
outsl
mov
dec
cmp
or
inc
dec
sbb
jmp
and
dec
out
jl
fidivrl
in
iret
call
and
jbe
mov
mov
imul
jmp
jp
pop
inc
and
push
lret
or
push
mov
adc
jmp
cs
jge
cmpsl
jle
xchg
push
and
cs
arpl
sbb
xchg
shll
inc
cmp
test
jl
or
arpl
pop
cmp
adcl
stos
jp
mov
test
fcoms
popa
push
insl
inc
ds
cli
mov
inc
lea
and
xor
mov
cltd
ret
xor
lcall
stos
fcom
inc
iret
mov
call
cmp
jno
scas
cmp
fcoml
dec
mov
jl
test
movaps
aaa
mov
repz
mov
pop
fidivrl
mov
mov
push
ja
mov
faddl
subb
xchg
add
adc
and
lcall
xor
mov
dec
mov
ret
inc
mov
imul
add
add
xor
push
adcb
test
mov
sbb
cli
leave
imul
cmpsb
pop
hlt
mov
mov
mov
ds
jge
push
test
shrb
subb
nop
mov
setp
das
adc
pop
dec
mov
inc
int
fisubrs
fnstsw
push
or
mov
testb
stc
imul
mov
xor
sub
sbb
popf
inc
xor
stos
repz
fsubrs
jle
dec
xchg
icebp
popa
repz
loopne
and
cmp
aad
mov
lahf
push
fstpl
js
and
loop
std
out
xchg
movsb
loope
andl
addl
bound
or
mov
xchg
pop
push
jb
shrl
cmp
and
mov
pusha
sti
xchg
jg
and
int
insl
cld
mov
stc
movsl
adcb
cmp
push
mov
orb
dec
pop
aas
adc
dec
arpl
movsl
pop
jae
cmc
or
shlb
jbe
sbb
hlt
push
lock
xorl
mov
xchg
xchg
cmpsb
lock
addr16
outsl
pshufw
jle
mov
sub
cmpsl
js
jbe
push
pushf
xor
push
sbb
scas
push
cmc
push
push
arpl
ja
es
in
sbb
xchg
add
cltd
lods
sbb
mov
movsl
pop
or
in
sub
out
xchg
adc
cmp
fbstp
repz
cs
mov
aam
imul
push
xlat
cmp
addb
cld
mov
jle
cmp
jle
mov
cli
hlt
cmc
adc
and
pop
jge
cli
ja
inc
xor
sbb
jecxz
out
jle
jo
aad
cmpsl
jecxz
loop
aaa
in
outsl
jnp
push
cmp
jo
fsubrl
mov
cmp
pop
mov
in
jns
mov
add
leave
mov
inc
push
cs
fs
repz
jo
jnp
sub
movsl
mov
sub
cmp
or
pop
into
push
push
cmpsl
leave
movsb
mov
jl
sbb
mov
push
pop
fimull
add
xlat
rolb
pop
push
adc
sub
arpl
adc
or
and
repz
imul
aad
sbb
adc
or
adc
inc
dec
test
dec
cmp
stos
insl
or
or
push
call
cltd
sbb
push
push
jno
dec
sbb
add
loope
dec
inc
or
shl
push
push
aaa
adc
mov
xlat
push
jns
add
lcall
sbbb
std
aas
pushf
xchg
call
cmp
jge
inc
mov
sti
jns
dec
cli
pop
adc
or
testl
test
ret
mov
ret
xor
push
inc
cmpsl
or
jne
mov
pop
push
mov
push
in
pop
add
mov
js
pop
sub
push
inc
and
or
pop
ret
jmp
jo
and
xor
jns
out
mov
inc
std
mov
outsb
sbb
adc
add
pop
fsts
or
xlat
push
jbe
loopne
xchg
pop
jo
lahf
outsb
je
pop
mov
pop
and
xchg
jg
jmp
mov
ja
jb
mov
dec
leave
lret
jne
cmp
insl
movsl
jge
inc
popa
aas
add
scas
adc
stos
cld
fwait
in
daa
pop
mov
add
mov
cmp
aad
adc
and
mov
imul
cmpsl
xchg
dec
ja
pop
sar
mov
xchg
popf
jns
insb
fcompl
mov
fildll
sub
cmpsb
hlt
xchg
test
cmp
xchg
pop
xchg
std
jmp
stos
cmpsb
or
mov
ja
xor
push
scas
lock
xchg
fimull
pop
sbb
dec
fsubrp
inc
mov
loopew
or
lds
jmp
cmp
mov
cltd
inc
lret
pop
lret
jno
out
fwait
pop
subb
jnp
dec
pop
adc
into
dec
pop
mov
jmp
sbb
mov
loopne
cli
gs
inc
imul
fdivr
std
in
mul
xchg
and
xor
add
hlt
adc
sub
iret
mov
pop
sub
test
test
popf
shrb
test
pop
push
lret
mov
in
hlt
lods
dec
imul
leave
je
lret
dec
jecxz
sub
sub
std
divl
push
iret
leave
out
lock
dec
mov
popa
ja
sti
out
push
lcall
sub
mov
or
mov
xchg
enter
and
ret
call
xchg
out
repnz
or
xor
or
into
xor
aam
inc
push
testb
ljmp
in
add
hlt
outsl
pop
inc
ljmp
and
fisttpl
jg
mov
or
mov
xchg
mov
out
mov
sbbl
pop
push
cmp
jb
jnp
fidivl
sub
add
int
test
jo
loope
mov
fisubs
sahf
push
jge
adc
ret
cld
mov
and
jbe
lds
or
mov
hlt
lahf
adc
into
stc
push
incb
lret
das
rorl
call
push
arpl
in
cwtl
sub
mov
or
and
jp
ds
scas
jg
push
dec
mov
imul
inc
mov
adc
mov
and
fstpt
lret
push
sti
push
jmp
sbb
or
cmp
sub
jnp
imul
mov
pop
stos
fstpt
lret
push
sti
push
jmp
sbb
or
cmp
sub
jnp
imul
ret
pop
ret
pop
stos
das
fstpt
arpl
sti
pop
jmp
ret
decb
cmp
sub
pop
scas
imul
mov
mov
cs
push
jnp
jmp
in
mov
ss
test
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
add
nop
xor
popl
lock
test
xchg
and
jo
in
push
cmc
inc
add
nop
xor
loopne
shlb
test
xchg
inc
rcll
mov
lds
pusha
in
cmc
inc
add
nop
xor
loopne
shlb
test
fwait
add
and
call
inc
roll
or
sub
out
dec
mov
jmp
pop
mov
mov
test
jg
jae
pop
outsb
addl
adc
lea
add
or
std
call
mov
xor
nop
fwait
sub
int
fistps
gs
mov
inc
movsl
adc
push
pop
mov
inc
icebp
inc
loopne
pop
sbb
dec
sub
xchg
push
cmp
mov
int
push
popa
pop
dec
adc
pop
cmc
lds
int3
imul
pusha
xlat
pushf
add
es
jns
test
aad
jmp
pop
add
add
gs
in
popf
inc
pop
mov
mov
inc
lock
loopne
shlb
test
xchg
and
jo
pusha
in
cmc
sub
jl
inc
stc
push
jmp
add
xchg
push
js
inc
mov
push
mov
mov
add
jne
loopne
xchg
push
in
lock
mov
xor
jno
dec
clc
xor
inc
lock
loopne
shlb
test
xchg
and
jo
pusha
in
cmc
inc
add
nop
xor
loopne
shlb
test
xchg
and
jo
pusha
in
cmc
inc
add
and
lahf
cmp
pop
fsubrl
loop
aaa
mov
lds
gs
insb
dec
dec
sub
jns
pop
push
cs
fisubl
test
insl
arpl
sub
jp
filds
sub
xchg
or
xor
mov
lods
mov
adc
mov
cltd
mov
push
sub
shll
lret
mov
aas
jne
push
out
xchg
and
pushf
clc
push
cwtl
test
outsb
xor
or
sahf
xlat
sub
sbb
int3
jnp
addr16
sbb
fsubrs
lcall
xchg
xchg
out
bswap
mov
push
sub
jecxz
inc
dec
jo
fnstenv
pushf
jb
and
mov
std
jp
add
addl
inc
dec
push
lea
xor
fisttpl
addl
adc
xchg
pop
out
outsb
rep
xor
sub
fidivrl
mov
and
adc
push
sub
or
scas
loopne
shrb
xor
cmpsl
test
jmp
rclb
mov
mov
cmpsl
and
and
inc
cmp
jnp
pop
int
add
and
mov
subl
int
jmp
pop
cwtl
push
xchg
adc
arpl
inc
sbb
fcomip
push
mov
cltd
dec
test
mov
scas
cmp
mulb
test
enter
into
cmp
adc
jno
mov
lret
test
cmp
int3
sub
les
movsl
js
aaa
popa
add
pop
rolb
sub
mov
fstpl
pop
fisubl
bound
sbb
andl
mov
jne
sub
in
xor
push
sbb
pop
inc
call
dec
adc
in
mov
or
in
inc
fisttps
xchg
xchg
cmp
push
jge
dec
call
call
movntps
out
aam
mov
lods
ss
mov
jg
bound
lods
call
jmp
pop
mov
int
mov
cli
jns
xchg
xor
xlat
leave
mov
inc
push
lret
push
mov
in
and
or
ljmp
mov
hlt
or
es
dec
push
add
jb
test
push
push
sbb
add
jl
sub
cmpsl
ljmp
test
je
lock
andb
imul
mov
or
adc
inc
add
cmp
rcr
push
mov
xchg
add
sahf
mov
lods
lock
jp
movsl
outsl
xor
dec
xor
add
ret
xchg
shll
jle
mov
arpl
mov
pop
mov
in
inc
inc
aam
push
scas
into
sub
inc
rcrl
push
nop
xor
outsl
dec
add
dec
dec
mov
pop
jp
ds
scas
cmovb
sub
scas
pop
inc
push
hlt
mov
and
int3
sbb
adc
sbb
adc
lret
scas
dec
rorl
mov
xor
call
cmc
int
popf
insb
fnstsw
cli
inc
mov
inc
add
xor
out
sti
bound
bound
rcrl
pop
inc
sbb
sbb
cmp
pop
out
mov
int3
ljmp
aas
cltd
xlat
sub
or
imulb
cmp
inc
and
rcr
cmp
sbb
fsubrs
cmp
inc
in
imul
ljmp
adc
ret
lret
xor
sbb
push
ljmp
ljmp
and
div
inc
xchg
cltd
loopne
mov
inc
shll
cmp
cmpsb
aaa
cmp
mov
mov
cmpsb
notb
arpl
push
stos
imul
mov
dec
loopne
aam
dec
sub
fcmovbe
and
adc
xor
sbb
das
pop
sub
call
pop
lret
push
xlat
aas
loop
jl
xor
pop
or
adc
mov
push
jg
icebp
jmp
add
push
mov
push
jnp
inc
clc
enter
movsl
jl
insb
sbb
mov
pop
pop
ret
add
push
xor
jg
or
adc
cmp
xchg
fnstsw
pop
jle
mov
mov
leave
push
cmp
mov
mov
aaa
imul
enter
mov
lahf
rorb
xor
xor
idiv
mov
in
sbb
dec
add
mov
jnp
into
popf
int3
mov
test
test
mov
mov
xchg
test
or
imul
push
inc
inc
int
sbb
push
clc
pop
cmp
aad
hlt
dec
ljmp
push
pusha
fs
jnp
pusha
decb
push
cmp
pop
cmp
sbb
jae
or
xchg
aam
jae
inc
pusha
inc
gs
cmp
outsl
mov
pop
pop
mov
jb
popa
xchg
ss
and
sbb
ljmp
inc
repz
push
out
movsb
cmp
xchg
push
lahf
mov
shl
dec
xchg
push
xor
cmpsl
cltd
jmp
mov
lods
mov
mov
rcl
cmp
insb
dec
adc
dec
adc
lcall
push
xchg
daa
push
int3
mov
lods
dec
dec
lea
lds
jle
out
leave
add
pop
dec
pop
adc
push
mov
add
xchg
test
data16
fidivrs
push
jmp
xchg
rcl
std
stc
inc
sarb
ret
lret
enter
fwait
add
hlt
mov
mov
pop
fdivrl
mov
push
adc
enter
mov
movsl
aad
ss
jge
xor
add
cmp
sbb
xchg
sbb
mov
aad
rcrl
in
lods
out
mov
stos
aad
push
mov
and
jmp
xor
pop
mov
lods
dec
pusha
sar
mov
call
ss
adc
shrb
cmp
mov
and
push
mov
sahf
prefetchwt1
xor
mov
scas
add
fsub
sbb
sbb
add
sub
rcr
nop
mov
das
sarb
inc
jl
sar
inc
mov
dec
sub
push
fnstsw
sahf
stos
sti
sar
dec
idivb
cmp
pop
std
fnstenv
daa
and
push
addr16
cwtl
pop
sbb
xor
fisttpl
aad
push
frstor
cmp
adc
les
jg
sbb
sahf
pusha
jle
les
out
cmp
pop
iret
cli
stos
pop
pop
cmpsb
add
mov
jl
and
or
in
or
push
dec
mov
repz
xlat
stos
inc
sub
aaa
jns
fstpl
repnz
jnp
loop
das
packssdw
pop
add
jle
repz
js
movsb
pop
xor
xchg
iret
adc
xchg
cs
pop
ret
ljmp
cmpsl
lods
push
xchg
enter
and
pop
fcoms
es
clc
push
loopne
dec
fildll
cmc
sbb
inc
inc
or
fnsave
jo
cmp
mov
jmp
pop
stos
cmp
push
xor
xorl
adc
cmpsl
cmpsb
and
fstl
std
jno
jl
xlat
cmp
dec
jns
fnsave
cmp
addl
pop
int
jecxz
data16
sub
stos
popa
xchg
mov
xor
jae
add
jne
pop
popf
inc
std
push
enter
add
in
out
jl
sub
mov
sbbb
xchg
dec
and
and
lahf
shl
stos
push
or
repz
call
inc
aaa
stc
mov
ret
and
test
cmp
pop
lds
call
mov
test
xor
or
cmp
ficoms
jle
mov
mov
sbb
xchg
shl
pop
insb
mov
or
add
iret
cltd
loop
movsb
ljmp
add
add
dec
fs
sub
imul
in
inc
xchg
ror
jmp
xorl
jle
xchg
mov
push
push
adc
fnstcw
dec
cmp
and
or
xor
lea
xor
inc
cmpsl
pop
hlt
std
rclb
xor
mov
mov
jmp
fs
test
insb
add
rol
aam
mov
xchg
je
shlb
lea
push
movsl
mov
push
ljmp
outsl
cmpsb
inc
stc
push
pop
es
or
cld
xchg
jmp
ficoms
test
inc
jae
imul
xchg
scas
ret
jne
shll
mov
not
pop
and
cmpsl
pop
sahf
or
mov
cmp
add
or
sti
imul
movsl
jbe
into
or
shll
or
pop
xor
repz
cs
fsubrl
out
xchg
ret
mov
xorb
push
scas
pop
lock
ljmp
add
inc
test
xchg
inc
xlat
movsl
lcall
adc
imul
adc
mov
cwtl
sti
pop
loope
dec
jne
jmp
push
lret
sub
imul
mov
data16
xchg
stos
sbb
aad
or
arpl
jge
mov
cwtl
dec
in
xchg
hlt
cmpsb
cli
gs
imul
or
mov
bsf
dec
stos
jo
inc
cmp
add
mov
xchg
dec
or
jno
dec
fimuls
movsl
mov
sarl
sbb
pop
jp
scas
int3
in
mov
fdivr
popa
fld
fs
ds
lds
test
imul
push
sub
jmp
incl
fmuls
bound
sbb
neg
xrelease
cmp
adc
xchg
daa
xchg
push
add
loop
and
or
aad
or
testl
int3
jle
jae
mov
cmpsb
sbb
mov
mov
arpl
cmp
leave
and
outsb
fiaddl
movsb
push
test
lods
jns
aaa
movsl
mov
imul
bound
mov
and
jno
scas
rclb
jp
loope
push
and
ja
mov
ja
push
mov
popa
enter
mov
xchg
loopne
dec
out
in
mov
fcmovnbe
lock
mov
std
fcoms
popa
sub
scas
pushf
lret
in
mov
xchg
cmp
jmp
mov
mov
dec
push
lret
inc
leave
xchg
xchg
leave
ja
pop
sbb
stos
or
pop
mov
cmpsb
mov
rorl
jl
mov
jmp
inc
push
push
int
cmp
push
adcb
add
rol
lods
mov
int3
cmp
gs
jnp
or
push
pop
mov
loopne
mov
lea
iret
adc
pop
and
int
push
cltd
jnp
xor
call
xchg
cmp
int3
mov
push
xchg
loop
mov
aaa
xchg
outsl
push
cwtl
mov
xor
out
jbe
roll
inc
adc
iret
in
popf
clc
mov
fcoms
cwtl
fsubr
movb
and
jne
ficompl
inc
shrb
insb
cmp
in
je
pushf
dec
adc
aad
xchg
inc
imul
adc
adc
jae
addr16
jg
sbb
mov
and
ljmp
add
lods
call
adc
shrl
popa
sub
loopne
cmp
sahf
mov
cs
sahf
notl
aad
push
addl
inc
icebp
adc
hlt
xor
add
adc
scas
dec
push
xchg
cmp
fbstp
mov
push
push
xchg
std
xchg
and
pop
sbb
neg
pop
outsb
cli
mov
gs
lods
push
inc
sub
lcall
dec
fstpt
rorb
lahf
test
or
push
out
out
xor
imul
cmp
sbb
jmp
sbb
pop
lds
out
enter
test
das
jnp
test
call
sbb
xor
sbb
inc
iret
fiaddl
jl
push
jl
int3
pop
add
clc
imul
lret
pop
test
aaa
cltd
xlat
adc
ret
sbb
iret
pop
add
popa
pop
aam
shll
test
outsb
or
push
test
aaa
fsts
cltd
dec
mov
xchg
fists
out
and
xchg
pop
test
popa
rcl
dec
lcall
add
sub
ret
mov
or
xchg
pop
mov
loop
mov
add
cmp
push
std
inc
aaa
f2xm1
dec
xchg
out
lock
loopne
xchg
add
iret
add
ss
sti
push
cmp
adc
js
stos
push
xlat
add
sbb
dec
test
mov
mov
jno
cmp
mov
sub
mov
out
adc
nop
sbb
hlt
push
gs
mov
push
cltd
call
fcmovnbe
scas
cmp
add
or
jo
pop
dec
inc
mov
test
aad
mov
jg
xchg
mov
push
add
mov
jle
add
in
dec
js
daa
adc
push
sub
es
pop
data16
inc
xchg
loope
inc
lods
adc
ret
and
outsb
or
or
or
out
leave
hlt
push
sbb
inc
repnz
xor
mov
add
clc
movsl
pop
cli
mov
incb
fcoms
xchg
push
dec
add
adc
es
xchg
jmp
adc
pop
inc
imul
aaa
or
cmp
pop
aad
sahf
test
enter
mov
das
aaa
jbe
insb
syscall
shll
inc
cmp
clc
lahf
sub
xchg
addb
cwtl
xchg
imul
mov
jae
pop
jb
push
or
or
xchg
mov
divl
fs
xor
lods
std
in
popf
sbb
mov
lahf
mov
insb
bound
gs
and
hlt
movsl
mov
add
in
clc
dec
aaa
decb
push
and
mov
or
sub
add
xor
addr16
test
pusha
sbb
or
test
idiv
mov
cld
mov
fstpl
ret
inc
mov
popf
shrl
stos
stos
repz
pop
movsl
cmp
call
inc
mov
xchg
lock
dec
mov
cmp
and
stc
xor
mov
jno
pop
pop
roll
cltd
nop
jno
mov
mov
mov
mull
ljmp
into
mov
mov
push
rolb
add
lods
stos
mov
and
in
mov
adc
inc
mov
stos
out
xchg
mov
enter
or
adc
dec
leave
mov
xor
mov
and
adc
jmp
cmpsb
mov
pushf
pop
scas
pushf
movl
movb
cmpsl
idivb
push
or
inc
jl
out
push
movsl
jns
dec
fsubs
inc
mov
pushf
push
int3
pop
lock
addr16
lcall
push
insl
pushf
push
jmp
jno
fnsave
or
stos
sbb
push
mov
inc
push
mov
fdivrl
inc
in
jno
in
test
jo
or
out
mov
mov
jae
add
movsb
cltd
in
sub
push
cmc
inc
rcrb
aaa
cmp
mov
sub
stos
cli
loop
daa
pushf
sbb
test
iret
jmp
xchg
data16
jecxz
and
sub
fcoml
sbb
fcompl
pop
sbb
faddp
mov
push
in
fnstenv
xchg
cmp
adc
test
icebp
iret
fwait
dec
into
mov
push
rcr
mov
inc
lods
sbb
cmp
push
popf
inc
mov
dec
fcoms
mov
xchg
and
mov
sti
add
rclb
jl
adc
movsl
dec
gs
sub
cmpsl
pop
push
outsb
repnz
shl
sbb
push
sbb
or
pop
stc
mov
ja
stos
andb
dec
jne
push
push
xchg
inc
mov
fistps
add
loop
data16
sbbb
push
or
ja
inc
mov
xor
cld
std
sar
mov
stos
xor
nop
mov
xor
rorb
loop
sbb
lods
jno
fisttpl
in
jg
sbb
sbb
out
xor
out
add
sub
leave
jecxz
mov
in
sahf
cmc
or
inc
pop
inc
mov
incb
mov
push
out
sbb
push
pop
pop
jge
int3
adc
mov
pop
movsb
push
inc
mov
enter
jl
add
ds
insb
xor
sbb
les
popf
sub
sbb
test
add
mov
pop
sbb
sti
pusha
test
test
mov
cltd
les
lahf
and
jnp
xor
mov
sbb
push
xor
xor
pop
subl
bound
icebp
hlt
xor
fwait
sbb
imulb
xor
aam
rolb
xchg
stos
ss
clc
dec
cmc
xor
inc
sahf
fwait
mov
and
into
adc
sbb
stos
jae
cmp
pop
or
lock
idiv
sub
mov
push
xchg
xchg
lds
shrb
mov
imul
mov
mov
jmp
shll
xor
mov
mov
push
or
in
icebp
sti
roll
lahf
lcall
adcb
or
jl
icebp
hlt
and
pop
mov
insb
mov
jecxz
mov
xchg
xchg
int3
lock
imulb
mov
leave
add
shll
sub
mov
adc
or
fnstcw
stc
test
pop
hlt
jae
loop
and
dec
das
mov
gs
or
test
add
popa
in
into
cmpsl
mov
int
lods
push
dec
or
xlat
mov
das
mov
repnz
push
mov
inc
inc
jecxz
or
movsb
pop
mov
mov
leave
xchg
fmul
add
sub
shrb
enter
lds
jecxz
arpl
lcall
out
lds
inc
mov
stos
rcll
sbb
sub
mov
repz
push
pop
or
jl
pusha
std
sbb
mov
int3
cmp
inc
imul
movl
xchg
cmpsl
lods
loope
sub
mov
aad
mov
mov
lcall
or
icebp
pop
sbb
inc
in
inc
add
stos
int
ljmp
jmp
sub
cmpsl
inc
sti
sub
xor
fadds
bnd
dec
inc
jmp
addr16
int
mov
xor
dec
mov
add
mov
hlt
data16
jmp
adc
cmpsb
loop
and
rcl
sub
mov
adcb
mull
add
mov
mov
pusha
lock
mov
rcrb
push
clc
das
in
mov
pop
adc
icebp
insb
mov
dec
xchg
std
fwait
jg
xor
pop
int3
sub
stc
or
outsl
adc
jmp
aam
out
loop
jnp
and
aas
push
movl
xor
xchg
or
lods
ret
enter
cmpsl
addb
mov
sbb
adc
xchg
and
roll
pop
fisttps
inc
xchg
mov
std
divb
jecxz
movsb
sbb
xor
or
push
int
xor
or
jne
incl
adc
or
aaa
lea
ja
incb
jbe
add
out
roll
scas
hlt
insl
dec
adc
push
shlb
mov
lret
cltd
xor
sub
loop
lock
rcrl
push
mov
pop
push
shlb
xchg
adc
les
push
test
ja
lds
int
pop
pop
xchg
daa
mov
std
icebp
xchg
movsb
sub
xlat
test
test
and
mov
sbb
iret
dec
pop
ja
pop
insl
xor
mov
mov
mov
in
arpl
mov
jbe
adc
cmp
xchg
dec
dec
pop
and
cmpsl
sub
push
iret
movsl
fscale
cmp
aam
xor
aad
xchg
or
inc
mov
mov
and
adc
std
andb
push
or
push
movsl
nop
pop
push
mov
movl
out
mov
mov
or
cmp
aas
mov
and
sbb
std
adcb
jecxz
or
test
cmc
loop
jbe
repnz
into
enter
adc
imul
test
sub
pop
sub
xor
sbb
push
mov
jae
push
jb
shl
mov
mov
sbb
pop
in
dec
mov
xor
std
ja
das
outsb
ljmp
adc
sub
fwait
daa
or
mov
in
mov
gs
pushf
xor
loope
cmpsl
xor
lea
xchg
sbb
xor
xor
push
cmpsb
or
fimull
mov
aas
repz
nop
xor
loopne
shlb
test
xchg
and
jo
pusha
in
cmc
inc
add
nop
xor
loopne
shlb
test
xchg
and
jo
pusha
in
cmc
inc
add
adc
pusha
shlb
test
mov
lds
pusha
in
cmc
inc
add
nop
xor
loopne
shlb
test
xchg
mov
adc
lahf
sbb
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
aaa
bnd
dec
rcrb
xor
dec
int3
sub
jb
iret
push
std
inc
lods
xor
bound
bnd
jge
pop
ret
cmp
and
std
bound
xor
je
fs
rolb
xor
and
adc
dec
idivb
mov
pusha
lock
ja
add
mov
cs
xchg
in
push
outsb
add
adc
test
lock
ljmp
mov
add
xor
inc
adc
ljmp
out
xor
and
cmp
pop
xchg
add
pushf
popf
push
and
daa
in
pop
add
rcl
or
sbb
ja
lods
cmpl
lea
push
adc
sub
jge
std
pop
sbb
aaa
add
scas
fnsave
cli
mov
push
lea
sbb
rcl
mov
jns
mov
adc
faddl
int
insl
pop
popf
add
rorb
cmp
xchg
add
hlt
jb
aad
les
xor
inc
push
lahf
sbb
sub
jecxz
divl
cltd
push
std
or
pop
fstps
nop
clc
insl
mov
test
rcrb
pop
xlat
push
mov
pop
sub
std
push
mov
cs
std
addr16
insb
add
dec
xchg
sub
cmp
sub
std
int
fldl
xor
add
jge
dec
rcrb
sub
xchg
sbb
int
fldl
xor
add
mov
adc
ja
mov
lds
ret
imul
adc
test
xchg
repz
int3
mov
testl
pop
xchg
loop
testb
mov
dec
xlat
test
ss
aaa
push
popf
out
hlt
movsb
inc
cmp
jle
mov
and
cmpsb
mov
and
icebp
lods
lahf
xchg
and
cmp
adc
iret
into
lcall
cmpsl
in
cmp
nop
stos
dec
sbb
xor
stc
fs
das
pop
in
icebp
add
mov
push
clc
push
push
inc
dec
xchg
out
xchg
xchg
lahf
gs
imul
cld
jg
xor
iret
push
pop
arpl
clc
jg
mov
js
dec
fs
mov
xor
jmp
aam
ljmp
addb
mov
bound
sbb
popa
push
loope
out
inc
push
in
out
mov
jb
in
sbb
inc
das
push
adc
notb
mov
mov
ficompl
mov
mov
test
test
fdivrl
jmp
clc
mov
movsb
mov
sbb
pop
mov
sub
cmpl
pop
sub
cltd
cld
sub
pop
dec
std
rolb
jg
repnz
insb
or
cltd
insb
movsb
popf
inc
jmp
xor
pop
pop
imul
scas
sbb
int
or
stc
inc
xchg
mov
pop
xor
pop
insb
dec
jnp
icebp
cmp
mov
jns
ja
int
das
mov
andl
shl
xor
cmp
xchg
mov
aam
dec
xchg
push
or
andb
or
add
aaa
fidivl
dec
movsl
cmp
mov
push
das
inc
cmpsl
movsb
lock
dec
ljmp
sbb
inc
push
jl
int3
lods
inc
movsl
lds
or
mov
into
out
jb
lods
add
jb
sub
mov
lea
es
pop
enter
enter
push
pop
repnz
inc
pop
into
cmp
mov
xlat
and
daa
jmp
add
loopne
inc
and
shll
cs
add
cmp
js
push
xlat
mov
adc
fstp
out
mov
or
outsb
push
sub
nop
popa
icebp
and
xor
adc
int
xor
fstpl
xchg
dec
mov
push
mov
loopne
add
dec
cmp
sub
test
lcall
rcll
push
cli
xchg
sahf
jns
lahf
out
push
shll
pop
ret
dec
repnz
enter
lods
stos
sub
js
js
popa
add
inc
push
divl
jg
insb
xchg
data16
daa
cmp
ss
shl
dec
imull
jno
scas
aad
f2xm1
movsb
push
data16
adc
fs
and
iret
nop
testl
inc
gs
cmc
or
int
mov
sub
xor
add
sub
mov
jno,pn
sub
push
loop
fwait
push
lcall
sbb
and
sub
pusha
in
pop
data16
mov
pop
xor
push
and
fldcw
roll
ja
movsb
inc
loope
pop
out
lods
arpl
dec
pusha
clc
sbb
out
test
iret
movsl
push
shlb
push
movsb
insl
nop
pop
sbb
sahf
cltd
icebp
pop
xor
mov
adc
sbb
sahf
dec
movsl
call
mov
xchg
mov
sbb
stos
jge
mov
inc
popf
sarl
iret
xor
xor
adc
mov
aam
stc
sti
out
fs
das
inc
add
adc
dec
adc
xchg
and
xchg
xchg
push
pop
rcrl
cmp
mov
mov
clc
sub
bound
rcr
adc
inc
and
mov
pop
or
mov
and
cmp
push
ds
jo
sbb
lock
push
dec
inc
cltd
mov
pop
sub
jb
mov
movsl
sar
xor
and
int
ss
mov
cmp
xchg
jb
faddl
scas
and
mov
es
and
jb
and
jl
lahf
mov
gs
xchg
sub
pop
iret
cmp
insl
inc
mov
test
xor
data16
outsl
imul
sub
popf
jne
mov
addl
in
adc
adc
push
mov
mov
pop
das
sbb
imul
inc
repz
mov
sub
les
add
dec
dec
sub
or
push
int
pop
and
mov
xchg
imul
adc
fs
aaa
sub
inc
loope
jg
cli
mov
xchg
int3
xor
pusha
das
aad
in
mov
dec
xor
jns
xor
sbb
imul
aam
add
stos
cmc
mov
mov
out
and
rorl
lock
mov
mov
frstor
scas
add
push
push
jg
add
enter
dec
fs
adcl
das
subb
into
mov
or
xor
loop
movl
pop
test
incl
mov
push
test
mov
inc
cmp
ret
cmp
rcrl
mov
or
int
dec
fcos
repz
sbb
pop
jo
cmpsl
mov
vmovsldup
loope
lds
push
jbe
test
std
xor
pop
shrl
or
imul
dec
ret
scas
dec
sbb
xlat
or
add
imul
incl
test
test
repnz
push
pop
jge
cmpsb
pop
mov
sbb
js
insb
cmp
pop
mov
mov
lret
fwait
pushf
dec
push
into
ret
mov
dec
dec
outsl
sbb
jecxz
xor
fs
jg
rcrb
fs
sti
push
cmpsb
fadds
jae
je
gs
sti
or
cmpsl
out
inc
enter
mov
push
pusha
fstpt
mov
insl
xchg
data16
push
int3
fdivl
bound
inc
dec
in
fcmovu
sub
cli
cltd
or
fstpt
ljmpw
insb
lret
imul
pop
fistpll
aad
int
mov
rorl
fidivrl
fidivrl
aad
xor
sbb
sbb
data16
test
pop
cmp
dec
add
loope
jns
add
jmp
les
pop
pop
adc
clc
stos
loopne
sub
imul
movsb
aad
push
mov
mov
clc
scas
sub
mov
mov
int3
mov
cmp
jmp
addb
inc
and
pop
cmp
inc
xchg
pop
in
cmp
or
xor
lahf
cs
pop
jmp
dec
insl
sub
pop
ljmp
mov
cmpsb
test
cmp
imul
stos
jae
rcl
sbb
or
insl
aaa
inc
icebp
mov
mov
call
ljmp
adc
add
jb
pop
push
dec
stos
icebp
mov
jg
mov
aas
scas
sub
adc
xor
push
mov
ds
jge
xchg
sbb
pushf
mov
push
xchg
jmp
cmp
inc
sbb
outsl
mov
pushf
rorl
mov
ret
out
cwtl
inc
push
fdivr
call
push
mov
lahf
mov
sti
enter
je
cs
xchg
jmp
arpl
ss
xor
leave
and
popa
sbb
push
dec
shlb
int3
or
pusha
jbe
xchg
bound
xchg
cmp
int
bound
xor
fsubrl
movsl
mov
mov
fwait
push
ret
cmp
js
leave
frstor
mov
stos
lea
adc
sbb
repnz
jbe
lahf
mov
scas
iretw
xor
orb
dec
in
xor
popf
jae
sub
jae
inc
inc
mov
popf
sbb
in
pop
xor
int3
cmc
sbb
cmp
inc
insb
sti
daa
pop
dec
insl
and
repnz
fidivrl
sbb
push
pusha
xor
cltd
mov
xor
mov
mov
mov
mov
mov
mov
and
push
scas
imul
dec
testb
int
in
dec
shll
mov
mov
and
das
or
lret
adc
xor
jmp
cmpsb
add
loopne
xchg
inc
shlb
rcrb
test
and
dec
push
jb
mov
stos
mov
dec
cmp
sbb
mov
shl
xor
andb
mov
xchg
dec
mov
outsl
sbb
fdivs
dec
lcall
inc
mov
add
add
mov
push
call
test
iret
mov
pop
xor
sahf
int
gs
add
int
mov
add
mov
sub
sub
xchg
ror
test
and
bound
in
data16
cmp
scas
enter
jae
xchg
push
jo
mov
jb
pop
cmp
pop
es
mov
divl
mov
mov
out
xchg
addr16
and
xchg
push
leave
pop
mov
mov
into
adc
pop
sbb
icebp
das
adc
leave
mov
jnp
addr16
in
test
dec
out
inc
or
push
pop
ljmp
daa
mov
paddw
daa
movsb
mov
pop
les
nop
jecxz
mov
inc
sbb
scas
cmp
add
cpuid
push
xor
lods
dec
sbb
push
je
mov
jne
lods
imul
test
cmpsl
jbe
insl
push
jecxz
aas
dec
adc
int3
ss
cli
dec
xor
xchg
iret
pop
lds
sub
jmp
ficoms
mov
aaa
sahf
out
mov
mov
iret
pop
push
into
mov
mov
or
bound
and
mov
jb
adc
adcb
das
pop
and
nop
push
ljmp
pop
stos
loopne
mov
push
xchg
mov
pusha
xor
inc
mov
enter
mov
pop
and
or
push
jnp
mov
stc
insb
mov
mov
sarb
scas
pop
mov
div
pop
or
jno
je
mov
xor
sbb
cmp
sbb
inc
outsb
mov
push
or
xor
mov
nop
shlb
pop
outsl
mov
mov
xor
test
cmpsb
fdivl
shlb
add
sbb
scas
pop
shl
insl
scas
stc
pop
lods
fisubs
leave
jecxz
jae
icebp
add
rolb
sbb
ror
and
cwtl
mov
test
repz
add
imul
jl
xor
mov
adc
in
xchg
xchg
stc
and
and
xchg
xchg
mov
or
rolb
test
sahf
out
cmpsb
dec
ret
sbb
mov
xchg
pop
je
insl
imul
add
inc
push
imul
push
insb
sub
pop
inc
dec
pop
stos
jle
dec
sub
stos
mov
cmp
in
add
pop
jae
in
mov
mov
dec
pop
sti
add
or
andb
imul
push
aam
sub
daa
mov
test
lock
pop
out
pop
clc
addr16
loopne
mov
or
cs
cmp
out
cmp
bound
dec
enter
cmc
movsl
mov
or
out
rcrb
lods
sbb
push
mov
stos
loopne
mov
adc
jbe
sub
sti
jbe
into
gs
add
sbb
lcall
repz
xchg
jne
push
pop
push
dec
xor
mov
jnp
shlb
mov
push
in
mov
lret
mov
cmpsb
and
fistl
cmc
jge
jnp
fwait
leave
jbe
push
fiadds
aad
mov
sub
pop
xor
cmc
dec
jle
repz
jo
imul
sbb
mov
xchg
xchg
lea
inc
aas
in
test
lcall
push
jle
cmp
dec
xchg
xchg
test
push
push
sbb
in
xor
pop
xchg
jle
fnsave
xchg
adc
push
jne
insl
out
inc
into
inc
inc
mov
jmp
dec
nop
das
and
fnstenv
mov
gs
adc
lcall
lea
addr16
xchg
or
push
and
ret
mov
test
sarb
xchg
flds
cmp
pop
mov
cmpsl
sbbb
arpl
leave
js
jecxz
adc
pusha
data16
or
cmp
imul
push
dec
xchg
cli
fwait
into
xchg
mov
mov
sub
cmc
movsl
cmp
mov
ja
dec
repnz
divb
std
mov
jns
fsubrl
cmp
or
xor
out
movsb
dec
mov
cmpb
pop
xchg
mov
and
arpl
jae
xor
pop
pop
call
sbb
inc
mov
mov
xchg
add
mov
fwait
sub
shlb
frstor
jmp
jmp
aaa
sub
sub
and
cli
stc
sbbl
mov
cmp
test
push
ret
daa
fisubs
sub
push
adc
add
adc
pushf
popa
pop
xlat
or
cmpl
jmp
lods
mov
inc
aad
es
in
or
iret
imul
jl
mov
adc
mov
jb
mov
fiaddl
fsubs
inc
pop
pop
xchg
cmpsb
dec
cli
cmp
dec
pop
add
mov
lcall
mov
xchg
mov
xchg
adc
xor
cmc
test
push
xor
cmpsl
nop
test
rol
adc
lcall
inc
jl
test
or
test
inc
lret
cltd
arpl
les
mov
add
fnstsw
jg
decb
cld
push
xor
xlat
push
pushf
lea
cmc
jecxz
dec
ja
mov
repnz
sub
sbb
or
mov
test
add
jge
das
repnz
pop
ljmp
mov
enter
adc
insb
mov
inc
hlt
fcoms
pop
enter
ja
arpl
fmuls
jne
adc
push
cmp
cld
cmpsb
scas
pop
push
subb
jnp
and
lods
jmp
lret
sbb
cmp
fistpl
fistpll
push
ret
and
fimull
xchg
subl
fisubs
push
pop
daa
into
mov
pop
lret
mov
adc
outsl
insb
call
shr
xor
cmp
loopne
mov
sahf
or
mov
sub
xchg
shrl
je
mov
inc
sub
testl
addl
and
test
dec
xor
loopne
sub
mov
xrelease
lea
jnp
add
fs
ss
lret
lock
pop
jle
and
in
xor
scas
cmp
jl
xor
xor
mov
cmpsl
movsb
sahf
or
xor
mov
das
mov
or
or
loopne
test
pop
mov
xchg
jl,pn
jo
xor
sarl
test
mov
movsl
cld
dec
stos
mov
push
aaa
out
jge
test
pop
inc
filds
sub
add
sbbl
imul
lods
mov
cmp
lods
test
fucomip
rol
or
mov
jle
mov
enter
and
movsl
loope
pushf
test
mov
sbb
sub
pop
popa
ret
xchg
mov
sub
xchg
xor
orl
add
adc
adc
lahf
pop
dec
xor
inc
sarb
mov
and
aam
xor
aas
dec
inc
mov
sahf
jmp
xor
scas
int3
pop
pop
mov
std
addr16
nop
mov
mov
mov
in
je
jmp
imul
subb
cmp
rorb
pop
adc
notb
pop
mov
int
icebp
jmp
xchg
aad
and
popa
mov
cmp
and
jl
push
mov
sbb
jne
xor
sub
push
jg
adc
jns
mov
leave
sub
packuswb
hlt
or
inc
hlt
mov
outsb
cmpsb
fmulp
sarl
in
jmp
pop
mov
pop
lret
adc
mov
jmp
out
movsb
stos
dec
int
push
and
scas
arpl
sbb
notw
jp
add
mov
push
inc
lea
lret
and
xor
mov
cwtl
test
and
add
mov
pop
pop
cmp
jno
in
adc
ja
inc
in
pop
mov
pop
aad
insl
ss
rep
mov
outsl
sbb
subb
sub
or
dec
orb
movsb
push
sub
cmpsl
aam
fwait
pop
out
sub
jecxz
pop
sub
sbb
push
inc
cmp
sub
roll
mov
test
push
dec
cmp
mov
aad
xor
fisttps
lahf
add
cmp
rcrb
shr
lret
fdivs
stos
mov
pushf
sbb
and
jb
cmp
xchg
xchg
sbbl
enter
mov
dec
out
cwtl
lea
sub
in
or
aad
push
mov
aad
push
and
in
ds
shrb
sbb
in
mov
mov
cwtl
aas
fldcw
mov
xchg
repnz
pop
cmpsl
movsb
jnp
inc
fsts
jl
test
jg
cwtl
lods
push
cmp
jmp
out
call
mov
jo
js
fcompl
fistl
fadds
mov
xchg
jmp
lock
outsl
bound
adc
ss
inc
imul
out
mov
xchg
inc
lea
inc
fcmovne
add
scas
into
cmpsb
lcall
dec
notb
lret
mov
mov
pop
dec
adc
popf
jg
in
add
sbbb
mov
cwtl
cmp
enter
jb
cmp
inc
adc
xlat
loop
dec
nop
jge
sub
mov
cmp
jge
dec
cmp
movsb
or
push
jmp
lret
xchg
int
inc
jmp
or
lock
jno
fdivrp
sti
stos
and
jl
push
add
dec
add
sbb
push
adc
out
nop
mov
mov
aad
jl
sub
scas
xchg
and
fucom
jl
xchg
stos
pop
xor
shll
adc
sarb
sbb
jbe
adc
sub
and
daa
in
xor
or
in
ret
or
imul
les
lcall
cltd
jnp
data16
and
sahf
mov
ret
cmc
sub
iret
push
pop
shll
filds
out
jl
outsl
outsl
and
aam
clc
jmp
push
fadd
int
xchg
sbb
add
inc
daa
in
ds
cmp
sbb
imul
push
js
in
dec
xor
sub
popf
xchg
orl
sub
lahf
cltd
call
nop
faddp
xchg
es
ret
sub
lods
inc
je
and
push
outsb
xor
sub
mov
mov
fstpl
sbb
jo
int3
xor
mov
test
and
adc
shll
out
inc
dec
aam
xor
push
cmpsb
scas
scas
mov
or
push
mov
mov
dec
push
and
sub
mov
es
ljmp
jle
mov
push
push
xchg
mov
js
pop
cmp
sub
lcall
mov
mov
imul
or
outsb
ljmp
imul
in
sbb
shr
gs
ljmp
dec
cmp
pop
and
push
adcb
push
sub
mov
int3
mov
rcl
mov
jp
test
add
test
nop
and
fistl
push
sahf
jecxz
mov
pop
das
mov
dec
mov
dec
sbb
inc
aam
out
into
inc
movsl
das
and
pop
adcl
xchg
iret
andb
in
mov
cwtl
sub
ret
movsb
int3
imul
fnsave
aaa
add
dec
repnz
iret
cmpsb
fucomp
jmp
aam
jp
sub
jmp
and
ret
minps
dec
call
mov
insl
mov
add
or
ret
ret
push
sub
bound
jmp
fstpt
aaa
mov
ja
andl
mov
pop
stc
adc
xor
hlt
xchg
xchg
icebp
adc
and
dec
loopne
andb
jne
adc
dec
outsb
push
leave
xlat
push
arpl
sbb
aas
or
sarw
and
jns
push
adc
mov
rcll
pop
dec
fists
cltd
sub
aam
in
sub
cmp
jb
int
and
xchg
ss
rcrl
sub
xchg
sbb
int
fldl
xor
add
jge
dec
rcrb
sub
xchg
sbb
int
fldl
xor
add
jge
dec
rcrb
sub
xchg
sbb
arpl
push
fldl
xor
add
dec
loop
rcrb
sub
adc
enter
xor
jb
std
sub
cmp
or
sbb
movsb
in
test
cwtl
test
dec
cwtl
pop
jmp
or
sbb
call
sbb
imul
mov
pop
sub
leave
or
sbb
call
sbb
imul
lcall
jl
outsl
mov
fwait
pop
mov
mov
repnz
enter
add
mov
inc
popa
mov
out
xchg
test
cmp
push
sbb
xchg
data16
sub
icebp
sahf
or
call
insb
fsubp
mov
pop
int
ds
cmc
mov
pop
or
fldenv
arpl
sbb
int3
loop
data16
cmp
ja
repz
dec
add
sbb
pushf
fldcw
xor
jns
lret
mov
or
in
mov
or
out
insl
jne
fcoms
jo
sbbb
jns
sub
mov
mov
or
in
cmp
or
sbb
imul
mov
pop
jmp
or
jno
in
dec
mov
imul
pop
int3
test
sub
stc
pop
stos
jno
push
dec
lea
lods
jne
imul
or
int3
and
add
inc
xchg
cmp
lods
cmp
and
mov
test
dec
cltd
pop
jmp
or
sbb
call
sbb
imul
mov
pop
jmp
or
sbb
call
sbb
pop
scas
fcmovu
orl
mov
inc
sub
test
test
out
lret
sbb
outsl
xchg
addl
xor
pop
stos
data16
adc
mov
mov
outsl
xchg
lret
aad
pop
and
push
fbstp
xchg
stos
cli
rorb
push
lods
and
sub
test
xor
add
ret
adc
cli
js
popa
jl
mov
repnz
pop
xchg
js
lcall
or
loopne
and
mov
stos
fnstenv
gs
cli
std
shrl
push
gs
lahf
dec
xchg
fldcw
fadds
xor
and
xchg
int3
mov
add
mov
mov
fdiv
in
subl
push
mov
push
add
cs
mov
xchg
push
push
and
pop
cmp
loopne
lods
push
jmp
inc
enter
adc
call
in
or
mov
xlat
xchg
mov
xchg
outsl
xchg
ss
pop
in
fldenv
popa
pop
pop
outsb
setb
lret
rclb
jb
xlat
fstpl
or
xchg
pop
leave
movsb
imul
push
mov
lret
lods
clc
or
sub
lds
or
mov
dec
mov
cmp
incb
std
push
insb
out
or
jle
ret
shll
push
xchg
mov
ljmp
daa
and
cmp
mov
hlt
cmp
int
mov
shll
adc
shrb
xor
test
add
sti
adc
and
cld
insl
repz
sub
xchg
repnz
lods
loopne
in
mov
inc
test
jne
jp
cmp
mov
jge
jl
out
stc
int3
mov
add
sti
jne
adcl
nop
int3
int3
dec
and
leave
stc
repz
lods
inc
sbb
sbb
dec
xchg
lcall
repz
add
mov
fdivr
fisubl
adc
cmc
mov
nop
sub
leave
cmp
add
pop
movsl
mulb
mov
jnp
xor
sub
cli
lea
jg
dec
xchg
mov
loopne
mov
stos
jne
popa
dec
std
xorb
test
inc
mov
adc
sbb
loope
push
sbb
ret
and
pop
pop
call
loop
insl
mov
or
movsb
or
mov
mov
out
jp
sbb
enter
xor
mov
push
pop
iret
fdivp
xor
push
push
inc
rolb
cmp
sarl
dec
pop
std
push
fdiv
stc
xchg
sahf
mov
mov
ljmp
and
push
sbb
push
test
inc
push
jg
popa
inc
cmp
cmp
in
pop
cmpsb
data16
in
mov
fbld
add
jno
jle
adc
pop
adc
int3
jne
loopne
adc
fchs
add
xor
xor
cld
xlat
pop
hlt
in
cmpsl
ret
push
cwtl
jno
xor
mov
jmp
jp
decl
loop
inc
jg
mov
mov
lret
push
lahf
xchg
iret
xor
adc
xorb
mov
out
iret
dec
mov
sub
lahf
xchg
loope
adc
dec
add
mov
inc
leave
fs
mov
int
xchg
cmp
jp
cli
mov
push
scas
ds
xchg
add
orl
sub
and
call
pop
push
inc
lods
dec
pop
xchg
jns
or
arpl
adc
cmpsl
adc
mov
fcoms
cld
loopne
into
cmpsb
mov
lds
mov
mov
or
push
aaa
test
int
push
out
pop
movsl
dec
fistps
into
int3
icebp
cmp
fistpll
cltd
and
call
jg
movsl
cmp
lret
repz
mov
pop
mov
mov
pop
mov
rorb
mov
lock
lret
pop
stos
mov
lods
push
in
addr16
mov
push
push
mov
mov
aaa
inc
jo
jbe
das
insb
mov
ror
pop
pop
mov
sbb
push
push
inc
push
push
xchg
dec
ror
cmp
or
movsb
stos
mov
ret
ret
movsl
or
sub
popf
aaa
in
subb
rep
sbb
add
shr
cmc
je
insb
scas
out
inc
jge
dec
fstp
jb
mov
cld
mov
repz
or
mov
mov
sub
imul
scas
adc
inc
mov
mov
xlat
dec
xchg
addr16
adc
mov
inc
adcb
cmc
lahf
cmp
je
pop
xchg
iret
push
movsb
sbb
scas
adc
mov
jg
cmp
mov
int3
imull
cmpsb
aas
xchg
add
shr
out
outsl
mov
fisttpll
lods
adc
test
pusha
mov
out
jl
push
out
adc
clc
ljmp
pop
add
lret
mov
push
lods
testl
pop
push
mov
adc
xor
push
rorb
leave
imul
inc
pop
push
adc
cmc
jmp
lock
lods
sub
xchg
mov
sbb
fdivrs
cmp
lock
pop
fstpt
lahf
add
sbb
push
rolb
mov
sbb
pop
jae
inc
call
cmp
jns
cmp
das
clc
clc
out
jb
cmp
cmp
insl
xchg
sti
sbb
dec
add
adc
dec
inc
push
je
pusha
mov
push
mov
iret
xor
or
and
push
aad
push
mov
jmp
sub
int3
fdivrs
inc
push
inc
and
inc
fnstsw
inc
jl
nop
mov
repnz
adc
cmp
push
sti
mov
push
repnz
rolb
add
lret
ljmp
outsl
sub
or
testl
xchg
int
xchg
lea
mov
inc
roll
lods
jne
scas
dec
je
dec
dec
pusha
testb
pusha
imul
sbb
sbb
jb
mov
cltd
mov
adc
movsb
pop
add
jl
xchg
dec
jmp
mov
mov
movsl
jmp
test
out
cwtl
sub
in
xor
xchg
rorb
cltd
pop
inc
js
xchg
or
mov
cltd
adc
mov
in
iret
sub
mov
roll
cmp
xorl
inc
aas
push
push
dec
outsl
push
ret
popf
jl
movsl
jecxz
xchg
push
lea
sub
lock
outsb
das
pop
cmpsb
adc
mov
mov
adc
adc
leave
add
cltd
nop
mov
pusha
dec
popa
jns
test
outsb
pop
cmp
xorl
sbb
pop
sti
fsubr
mov
sbb
pop
sub
cmp
or
fimull
cmc
mov
and
adc
xlat
adc
cli
nop
or
popa
sub
xchg
jo
add
push
fcom
mov
lret
cmp
and
jo
dec
sub
dec
sbb
stos
mov
sti
or
mulb
or
test
pop
mov
insb
outsl
mov
out
lods
xor
aaa
popf
enter
pop
insb
lret
pop
add
sub
into
dec
pop
lret
inc
mov
out
hlt
xchg
cmp
jns
sub
xchg
imul
sub
cmp
dec
push
test
cld
out
ss
jg
fisubrs
subl
adc
sub
mov
pop
or
inc
sbb
je
jge
movsb
cli
test
cmp
xchg
pop
or
mov
testb
lock
sbbl
cmp
jmp
sub
or
iret
mov
ss
mov
shl
mov
and
subl
jae
and
dec
pop
dec
xchg
rcll
jno
mov
in
inc
push
in
sti
mov
dec
test
cli
xchg
xchg
sahf
dec
pop
cli
pop
fstpl
lock
xchg
push
rclb
mov
clc
mov
in
adc
xchg
aaa
cmpsb
outsb
shr
icebp
adc
test
out
push
inc
out
or
mov
xor
inc
adc
jnp
dec
pop
inc
jns
cld
repnz
pop
into
sub
push
movsl
sbb
mov
sbb
in
or
dec
sub
jp
call
jnp
je
pop
mov
stos
outsb
jae
js
mov
aam
std
and
fildl
cmpl
or
hlt
sbb
jo
cmc
push
cwtl
pop
mov
jmp
mov
cwtl
loope
pop
clc
sbbl
cmp
sub
mov
mov
add
and
or
inc
pop
xchg
mov
cmpsb
pop
testl
mov
into
xchg
mov
movsb
mov
jg
je
icebp
and
sbb
cld
out
sti
lahf
in
mov
movsb
in
stos
in
adc
adc
and
pop
sarb
sbb
inc
je
or
fcmovnbe
mov
int
sbb
pop
sbb
lods
mov
imul
cmpsb
pushf
push
shlb
lds
gs
or
pusha
and
sbb
sbb
lea
in
sub
ret
inc
cs
into
dec
jno
adc
frstpm(287
notl
insl
xchg
sub
out
out
or
dec
test
fcmovu
pop
das
push
je
popa
loope
lret
pop
ja
inc
and
js
dec
or
and
or
dec
mov
ret
push
aaa
insb
pinsrw
ret
dec
and
stos
lret
loope
or
mov
scas
jmp
dec
out
out
sub
fdivr
clc
mov
ficoms
ja
xor
jge
scas
and
or
cmpsb
jmp
lock
dec
xlat
sub
dec
jg
inc
sub
ljmp
inc
dec
scas
into
movsb
repz
jnp
out
or
jae
aad
jge
mov
and
push
rorb
fsubrl
int
fstl
rcrl
add
filds
inc
push
das
and
jmp
nop
js
les
pop
adc
dec
out
lods
fisubrl
sbb
cwtl
xchg
sbbb
jg
out
xlat
mov
xchg
push
rcr
in
xchg
or
inc
jmp
outsl
mov
fwait
out
mov
xchg
xlat
add
sbb
dec
pop
and
inc
push
push
sub
out
popf
fs
rorl
je
scas
rclb
movsb
xorl
jnp
push
outsl
dec
or
out
and
dec
cmp
nop
test
cli
mov
push
cmp
aad
ret
inc
or
xlat
testb
xchg
push
outsl
orb
sbb
xor
fdivl
lahf
mov
pop
inc
outsb
sarl
jo
out
pop
push
test
inc
lahf
add
and
mov
or
jmp
jne
rol
lcall
enter
xor
jno
push
add
cmp
xor
loopne
rorl
mov
cmp
sub
clc
mov
imul
pop
call
out
jb
rclb
out
fdivs
mov
test
pop
call
xor
test
mov
shll
sti
test
inc
call
pop
xchg
icebp
push
mov
jne
dec
sbb
jns
or
daa
dec
dec
xor
addr16
mov
cmp
and
repnz
iret
jnp
stos
ss
lea
scas
sub
movsb
pop
jns
xor
and
or
xor
xor
pop
sub
cmp
jno
dec
outsb
mov
sub
jbe
pop
push
jp
ja
fdivrl
sbb
popa
cld
inc
inc
push
insl
xor
and
into
pop
fidivrs
mov
loope
imul
subl
lods
icebp
xor
jo
push
sbb
dec
inc
insb
arpl
sub
cmpsl
std
jg
xlat
mov
lock
leave
jmp
xchg
mov
mov
xchg
bsf
jmp
stos
fs
or
sub
ret
xor
addb
fcmove
lea
or
push
add
sub
mov
hlt
adc
cmp
repnz
cmp
pusha
push
add
push
sbb
and
sti
mov
inc
push
mov
push
mov
cmp
push
cmpsb
push
mov
js
xor
pop
cmp
mov
mov
and
test
inc
leave
sahf
sbb
xor
lcall
mov
push
popa
mov
and
lahf
fwait
stc
stc
sub
js
mov
add
fsubrl
jmp
add
sbb
adc
and
lea
mov
outsb
negb
jnp
pop
dec
dec
out
rcll
aad
mov
push
pop
das
mov
and
sti
sbb
ret
dec
or
sbb
lea
iret
inc
dec
dec
mov
xchg
xor
mov
ja
mov
jmp
nop
loopne
push
repnz
rcrl
dec
mov
scas
fsubl
jbe
sbb
arpl
ja
hlt
cmp
xor
sbb
aam
loopne
push
ret
push
mov
sub
fdivs
mov
fwait
pusha
lcall
inc
push
lds
outsl
fnstenv
sbb
fisubl
lods
arpl
and
inc
cmc
and
pop
push
mov
and
sbb
cld
and
mov
scas
fcomps
push
shr
ret
sub
leave
jns
ljmp
or
aaa
pop
iret
xlat
sbb
jmp
pop
mov
mov
push
pop
mov
adc
inc
loopne
out
in
mov
clc
dec
in
xor
mov
mov
in
and
aas
loop
inc
pop
or
jo
fsubp
shl
hlt
mov
cmpsl
adc
adc
hlt
xchg
mov
mov
int
cld
rclb
sti
inc
jnp
lcall
xchg
es
dec
stos
inc
clc
cmp
test
push
pop
hlt
fs
mov
xchg
add
gs
clc
dec
adc
sbbb
mov
clc
fwait
mov
mov
inc
sub
cmpsb
push
xor
sbb
icebp
out
push
jl
push
imul
ret
ljmp
sub
inc
xor
and
mov
in
pusha
cmp
jl
test
jle
movhps
and
mov
pop
push
enter
inc
leave
sub
cmpsb
sbb
fidivrs
sub
rorl
sub
dec
es
and
mov
xor
mov
push
jmp
das
movsl
jg
sbb
in
dec
js
or
fiaddl
jg
sbb
xchg
sbb
fucomi
iret
pop
or
jo
dec
adc
sbb
jge
inc
out
in
sbb
insl
adc
clc
in
adc
mov
sbb
pop
sbb
inc
push
outsl
ja
xchg
movsl
push
fmull
push
sub
dec
rclb
outsl
sub
or
cmpb
adc
jecxz
dec
mov
push
inc
iret
or
mov
repz
popf
seta
or
das
and
jae
ret
pushw
cmc
scas
or
test
dec
xchg
fstps
iret
dec
jmp
jle
jbe
mov
cmpsb
das
enter
mov
es
dec
xchg
movsb
lahf
sbb
jbe
and
and
inc
add
or
xor
stos
je
sub
push
xchg
shlb
dec
or
das
out
jg
dec
adc
flds
mov
data16
xlat
or
imul
push
inc
jl
mov
ds
imul
test
imul
in
scas
pop
adc
dec
cmpsb
icebp
dec
xor
ljmp
mov
je
dec
push
xchg
into
testl
xor
movsl
add
xor
es
outsb
push
stos
and
xchg
stc
xor
das
nop
aas
jb
sub
dec
cmpl
ret
pop
scas
je
insb
mov
push
jne
and
test
sbb
mov
ret
mov
in
cwtl
fwait
and
push
insl
dec
mov
jl
mov
jns
sub
or
sbb
fbld
int
cltd
out
leave
sub
mov
sub
bound
ja
sbb
pop
out
lds
jo
xchg
test
shrb
sub
cmpsl
xchg
cmpsb
lcall
sub
xor
jle
pop
loop
mov
cmp
push
mov
imul
data16
add
push
testl
push
inc
lea
das
sbb
scas
rcrl
sub
mov
scas
lea
bound
cmpsl
mov
pop
xor
push
mov
mov
xchg
or
leave
mov
xchg
enter
mov
in
out
scas
pop
push
mov
pop
add
adc
xor
lret
das
adc
call
xchg
lea
mov
and
ds
shlb
dec
xlat
je
or
cs
and
repz
xlat
adc
mov
jl
and
test
xor
enter
nop
std
cmpsb
shl
aad
jmp
adc
cltd
dec
mov
insl
or
adc
lock
loopne
pop
cwtl
gs
push
pop
subl
push
inc
les
sub
out
sbb
xor
ss
scas
and
and
or
pop
pop
cwtl
rcrb
dec
sarb
sbb
aaa
int
mov
push
outsl
ss
lock
cld
clc
adc
dec
lods
fisttpl
sub
cli
sti
cmpb
mov
add
outsl
dec
adc
loopne
mov
scas
mov
cs
pop
add
into
pop
mov
mov
jns
inc
loop
subl
insl
or
pop
pop
pusha
jg
cmp
jle
aam
ret
dec
or
cmpb
loopne
ret
xor
dec
inc
in
xchg
fistpl
push
push
stos
sti
mov
add
jge
ja
mov
lock
gs
dec
sub
inc
push
add
pop
add
mov
lds
xor
push
loopne
scas
jb
cli
cld
iret
pushf
repnz
xchg
cmc
xor
push
adc
pop
movsl
testb
or
cmp
sbbl
inc
xor
gs
inc
es
pop
in
xlat
adc
sahf
ret
or
cmp
int
mov
mov
pusha
popa
ds
fildll
jnp
push
inc
loopne
fwait
or
pushf
rcr
push
test
arpl
aam
mov
jbe
sub
xor
js
shll
out
inc
in
popf
fcomp
inc
inc
lods
shrl
xchg
rolb
cmp
adc
stos
mov
cmp
pop
outsb
cltd
mov
inc
dec
jae
dec
add
pop
xor
lock
imul
in
and
fwait
jp
jae
lea
cs
repnz
adcb
push
pop
into
xchg
lods
mov
fs
imul
daa
and
les
adc
pushf
or
adc
cmp
ss
test
sbb
push
insl
mov
aas
add
js
mov
pop
ret
push
gs
pop
push
stc
addb
in
mov
push
fs
mov
push
mov
das
je
mov
fs
repnz
fsubrl
fldenv
je
and
xor
lcall
xorb
xlat
in
popa
or
pop
arpl
or
movsl
mov
fstpt
pop
in
jp
jmp
push
test
insb
jne
mov
jns
clc
rolb
pop
dec
xchg
dec
push
fildl
outsl
cmpl
or
scas
roll
ljmp
xor
divb
push
cmp
pop
sbb
sbb
jns
mov
loopne
dec
pop
movsl
cs
jge
mov
dec
jo
ljmp
test
out
xor
jns
pop
pop
cmp
scas
jo
push
inc
add
scas
push
mov
lahf
add
cmp
xor
add
pop
ds
dec
xchg
push
jnp
or
xchg
repnz
ja
sti
push
sbb
jmp
dec
mov
mov
xor
push
add
xchg
xchg
rcl
in
movsb
push
out
aas
cltd
sub
insl
add
clc
lret
iret
jnp
cli
inc
xchg
lret
jb
jo,pt
aam
inc
xor
or
jae
push
xchg
paddusb
cmp
dec
sarl
orl
fadds
ret
fisubrs
mov
and
mov
in
mov
sbb
adc
xor
xor
gs
fimull
cmc
addr16
push
mov
in
scas
and
shll
mov
fnsave
aam
out
add
mov
jmp
icebp
mov
sbb
sbb
mov
sub
pop
cmpsb
mov
mov
push
mov
sub
mov
out
mov
mov
fisubl
test
js
and
ret
popa
mov
imul
out
mov
xchg
imul
mov
pop
dec
or
cmp
sub
mov
das
xor
push
cli
bound
fiadds
jne
popf
lock
fsubrs
jns
dec
mov
test
dec
cltd
pop
jmp
or
sbb
call
sbb
imul
mov
pop
jmp
or
sbb
call
sbb
jmp
mov
cwtl
test
dec
cltd
pop
jmp
or
sbb
call
sbb
imul
mov
das
cltd
mov
test
add
pop
in
cmp
pop
sbb
gs
mov
stos
mov
aad
dec
cli
cmc
cli
in
adc
sub
jp
push
lcall
movsl
lcall
in
or
sbb
sub
sub
insl
push
xchg
test
shlb
xchg
jne
push
inc
inc
pop
popf
dec
test
dec
mov
cmpsb
lahf
sub
out
pushf
notb
scas
jne
and
out
insb
push
jnp
in
pop
and
add
dec
outsb
dec
push
cmp
xchg
fimuls
outsb
jb
pop
cmp
xchg
mov
lret
jl
cmc
mov
jbe
push
dec
push
test
push
fwait
jne
jnp
dec
push
sub
or
cmc
in
pop
cli
sbb
mov
cmpsb
xchg
ret
jge
or
mov
xlat
lret
cmpsb
out
in
xchg
jno
int
scas
movsl
fbld
xor
xor
pop
push
std
cltd
and
inc
add
sub
and
jp
int3
jl
xchg
adc
xchg
int
out
ljmp
push
push
inc
xor
sbb
lcall
shrb
outsl
insb
dec
inc
dec
dec
xor
or
loope
loopne
rcl
cmpsl
mov
xchg
stos
xchg
jbe
add
jns
or
inc
jp
push
lcall
movsl
fcmovbe
lret
cmc
ljmp
xor
dec
inc
jp
push
lcall
movsl
fcmovbe
lret
cmc
ljmp
mov
daa
xchg
fisubs
jp
or
jns
lods
xor
and
lret
dec
clc
push
mov
inc
cmp
ror
pop
out
and
mov
cmp
add
xor
dec
pop
xchg
sbb
cwtl
pop
mov
add
sahf
mov
test
gs
inc
sub
sub
xor
cwtl
je
insl
sub
fsubrs
push
cmp
pop
faddp
jle
xchg
add
mov
cli
into
mov
xchg
inc
or
jle
out
cmpsb
and
mov
je
jecxz
fwait
mov
lcall
and
sbbb
int3
cmpsb
jns
fldl
dec
int
add
inc
lret
in
jecxz
push
fcoml
adc
jecxz
sbb
sahf
movsl
pushl
xor
out
adc
or
icebp
mov
fsubp
outsb
ljmp
cli
xchg
add
pop
sahf
mov
in
sub
pushf
data16
popf
mov
dec
fcomps
mov
std
out
and
add
fcoms
sub
or
xchg
fmuls
idivb
pop
xchg
cmp
test
xor
in
mov
push
outsl
jb
fistl
push
hlt
jns
fwait
cwtl
lock
mov
jge
or
subb
in
mov
inc
jg
repnz
sub
repz
bnd
mov
xor
in
and
arpl
mov
inc
iret
adc
sub
into
repnz
lahf
dec
sbb
push
sbb
into
sub
jns
sbb
inc
xchg
jecxz
test
push
add
xor
rcl
rol
mov
stc
cmp
or
jmp
mov
and
dec
test
pop
sbb
pop
ja
mov
jb
cmpsb
jo
clc
cltd
sbb
pop
or
pop
xor
jle
jno
test
mov
les
mov
jo
jb
mov
scas
fildl
push
cmp
cltd
gs
pop
jecxz
sub
std
mov
sub
addr16
test
es
jno
in
lods
pop
int
insb
cli
cmp
xlat
ljmp
cmp
aaa
push
jns
add
jne
dec
sub
cmp
push
in
mov
jg
repz
jle
ja
push
nop
ss
das
out
test
add
int3
push
lahf
inc
outsb
pop
idivb
fwait
jp
mov
inc
add
mov
cmp
sbb
aas
add
add
dec
or
jnp
xor
push
or
and
cmp
ror
pop
push
in
fdivr
push
inc
loop
pop
sub
imul
imul
dec
sbb
inc
jae
cs
push
addl
sahf
dec
loopne
xchg
inc
push
cwtl
aas
out
mov
xlat
lods
pop
fdivl
inc
pop
mov
push
add
adc
and
jp
mov
bound
loopne
test
push
mov
rol
jno
and
pop
mov
mov
adc
ss
les
sub
lcall
test
jp
inc
mov
ds
stos
push
inc
cmp
lret
xor
jg
adc
ror
fiadds
ja
test
movsb
outsb
arpl
cmp
shlb
lods
xor
ss
int
and
or
bound
repnz
test
out
out
repnz
xchg
ret
cmp
shll
lahf
loopne
scas
gs
xchg
cld
adc
inc
mov
add
or
lret
scas
push
mov
or
rcr
bound
inc
push
add
aaa
enter
mov
nop
mov
pop
sub
cmpsb
sti
scas
and
sub
aaa
cld
repz
pop
out
lret
jo
jle
cmp
push
mov
cmp
int3
cmp
sahf
int3
mov
jns
fadds
inc
pop
dec
jae
jmp
mov
sbb
lods
rcrl
jbe
sahf
iret
inc
xchg
out
sbb
and
mov
sub
push
push
push
mov
fwait
lods
into
test
or
in
add
adcl
test
test
inc
arpl
push
mov
add
popf
mov
jne
mov
or
lcall
es
pop
push
add
jo
cmpsb
mov
sahf
pop
xchg
xor
cmp
sti
adc
cmp
mov
or
test
or
nop
mov
sub
loope
out
popl
pop
pop
jbe
or
or
lds
push
shll
or
jmp
xor
push
sti
xchg
aad
jne
aas
stos
test
xchg
movsb
pop
or
loopne
jne
and
push
mov
and
iret
sub
dec
dec
xchg
jl
insb
cmp
hlt
sbb
pop
or
scas
xchg
mov
ljmp
jmp
jae
push
in
imul
push
add
les
icebp
sbb
popa
dec
fs
jb
and
movsb
lahf
push
into
addr16
loopne
loop,pn
sbb
xchg
jp
js
call
pushaw
xchg
jmp
in
insb
mov
out
sbb
test
xor
dec
fisubrs
push
push
xor
sbb
sub
outsb
sbb
dec
mov
sbb
data16
lret
nop
jo
mov
pop
mov
icebp
in
sbbb
out
fsave
out
rol
lahf
repz
or
jnp
insb
sti
jg
loop
repz
dec
sub
int3
fstl
cmp
aas
mov
sbb
sahf
mov
outsb
dec
outsl
mul
rcll
push
jbe
leave
inc
insb
shl
fidivrs
and
jo
clc
leave
cli
pop
xlat
mov
out
ret
sarl
adc
repz
adc
pop
mov
xchg
mov
xchg
xlat
stc
imul
mov
mov
inc
pop
mov
pop
insb
mov
sti
and
inc
lds
call
adc
cmpl
mov
jbe
mov
fdivs
sbb
mov
jne
stos
mov
test
clc
mov
jmp
push
sub
push
mov
cmpsl
sarb
add
test
pop
mov
sbb
cli
push
scas
xchg
popf
and
pop
jecxz
movsb
pop
jae
mov
push
sub
sbb
xchg
hlt
adc
xor
imul
subb
mov
cmpsb
pushf
cmp
hlt
ds
in
fdivrs
idivb
inc
cmp
movsl
cmp
aad
sub
jg
and
dec
repz
mov
call
iret
mov
lds
cwtl
cmp
nop
mov
mov
in
adc
aaa
sbbl
cmpsb
pushf
loop
push
ret
push
mov
movsb
notb
aad
je
inc
lea
out
aas
xchg
push
xor
idivb
cli
mov
aad
call
jmp
sbb
jnp
addr16
dec
xchg
xor
dec
loop
int3
addr16
adc
loope
stos
and
xor
test
dec
cmpsb
arpl
adc
sbb
or
ror
jecxz
mov
pop
sahf
xchg
lock
dec
movsb
cmp
add
cs
shll
cmpsl
frstor
pop
pusha
out
push
rclb
sahf
add
push
push
out
pusha
sub
jo
push
jo
mov
xchg
adc
lock
outsb
inc
outsb
imul
mov
out
imulb
cmp
out
clc
inc
test
fisubl
loop
cmp
cmp
arpl
clc
rcll
int
push
dec
gs
pop
pop
out
lods
ss
mov
inc
dec
aam
je
mov
sub
xor
adc
xor
xchg
sbb
stos
cmpsl
pusha
and
jmp
cmc
mov
pop
lret
mov
mov
jae
test
cmc
or
outsl
cmc
sbb
es
xchg
adcb
enter
iret
and
mov
sub
dec
inc
cmp
enter
xor
ret
or
fsubrl
hlt
mov
adc
outsl
mov
cmpsb
inc
push
sbb
repnz
jae
mov
mov
outsl
mov
sbb
int
push
ret
sbb
imul
out
repz
push
inc
cmp
sub
adc
cmp
shl
stos
lar
push
js
imul
mov
mov
imul
dec
stc
lret
orl
lcall
push
inc
xchg
push
dec
dec
cmp
inc
fs
lods
out
push
and
imul
adc
rcll
loope
xlat
les
jns
push
test
insl
in
and
hlt
jnp
sbb
jb
push
mov
addl
mov
fwait
add
adc
incb
ficoms
sub
sub
frstor
pushf
inc
in
test
dec
ret
pop
arpl
add
aaa
xlat
add
and
movsb
imul
xchg
aam
mov
movsl
adc
pop
mov
sarl
dec
cltd
loope
xchg
mov
mov
or
out
pop
mov
push
aaa
icebp
sub
outsb
loop
mov
push
scas
xchg
test
dec
jne
lret
leave
cmp
mov
xchg
mov
rorb
sbb
sahf
add
outsl
subb
lods
dec
or
jle
lea
mov
cmp
lock
fisubl
enter
sub
fwait
pop
inc
sbb
lret
pop
pop
roll
hlt
iret
add
rcr
iret
sbb
mov
mov
mov
int
push
out
in
add
sbbb
outsb
adc
cmc
fadd
jne
lahf
mov
femms
adc
les
pop
jl
or
mov
xchg
push
fwait
cmp
xchg
inc
scas
dec
dec
and
repnz
cmc
mov
je
jecxz
pop
mov
sub
or
mov
ljmp
and
test
test
in
fs
and
in
adc
mov
pop
mov
adc
xchg
loopne
stos
pop
pusha
or
jne
daa
pop
mov
ds
sub
adcb
xchg
pop
je
adc
mov
xchg
jmp
gs
pop
lahf
shlb
or
testb
test
ret
rolb
xchg
mov
das
cmp
mov
push
cmpb
dec
mov
inc
jmp
cltd
push
hlt
lock
inc
mov
sahf
popf
mov
mov
jbe
and
int
fwait
dec
outsb
rolb
into
xchg
dec
and
clc
xor
jmp
add
sub
jnp
cmp
fldl
call
lods
js
es
stos
adc
push
push
mov
mov
fmuls
ds
push
test
fcompl
cmp
gs
in
test
push
pop
iret
fistpll
fistpl
ljmp
lods
fwait
push
lods
jmp
notw
out
push
mov
push
jp
call
andb
or
sahf
out
movsb
push
xchg
outsl
dec
call
insl
inc
popa
adcl
mov
loope
cltd
adc
jg
sbb
jns
test
in
add
adc
pop
pop
cmpsb
rorl
xchg
andb
push
push
pop
push
aam
sub
or
ficomps
adcb
bound
sub
les
adc
sub
mov
adc
pushf
pop
mov
adc
jb
mov
shlb
cmp
cmp
popa
or
out
faddp
rolb
xor
push
clc
in
adc
stos
sub
lahf
out
or
das
call
sbb
sbb
aaa
inc
rclb
call
outsl
test
push
aas
cmp
or
adc
dec
cs
insb
push
mov
adc
add
int
cmp
int3
outsb
sbb
and
dec
cmc
movsb
adc
stos
mov
push
out
dec
lret
adc
inc
call
push
cmp
push
mov
pop
test
test
call
mov
scas
filds
lret
push
sub
rcll
mov
cmp
xchg
inc
arpl
mov
xlat
subb
inc
adcb
pop
xchg
or
pop
divl
xor
sub
insb
xor
mov
loopne
jp
mov
aad
mov
enter
adc
nop
add
cmc
sbb
xor
xchg
or
xchg
pop
out
cs
aas
fmull
cmp
cltd
popf
ss
cltd
test
mov
cmp
mov
adc
imul
adc
lds
push
fildll
cwtl
out
xchg
mov
cltd
fsubrl
adc
dec
sahf
fs
inc
lea
and
jns
jno
xchg
and
mov
add
loopne
xor
ja
ljmp
adc
ds
xor
sti
cmovbe
mov
outsl
sub
insl
cmp
sbb
aas
inc
xor
cmpsb
stos
jg
inc
scas
dec
out
addr16
stos
pop
inc
sub
pop
push
adc
xlat
push
mov
jno
mov
push
scas
sub
sub
cli
fwait
int
pop
xchg
inc
jnp
mov
push
mov
lock
and
dec
dec
xor
adc
cmpsl
and
js
std
mov
pusha
outsl
mov
and
fidivs
add
lret
fnstenv
jae
push
push
add
lret
push
mov
setl
je
or
out
leave
inc
inc
fbld
stos
pop
cld
jno
mov
mov
sub
sbb
loope
jb
lret
add
neg
gs
aad
jmp
sarl
cs
ja
jg
pop
sbb
jnp
or
filds
pop
mov
pushf
mov
movsl
cmpsl
std
jo
sub
ja
xchg
xor
cmp
push
jnp
insl
dec
and
shrl
dec
jnp
and
fwait
and
adc
stos
aas
aas
xchg
in
mov
sbb
insb
jno
imul
mov
and
adc
or
jl
fsubrl
lret
adc
mov
sbb
inc
xchg
adc
jmp
inc
test
int
ffree
xchg
mov
jle
sbb
into
lods
mov
push
sub
sbb
lods
pop
or
jae
and
mull
data16
sahf
aaa
inc
shl
xor
add
or
xchg
cmp
and
or
bound
add
sub
fmulp
ficompl
shl
les
push
outsl
xor
es
jge
icebp
jmp
sbb
cwtl
adc
iret
andb
movsl
sbb
into
xchg
adc
mov
lcall
dec
add
aad
ret
add
mov
in
cmp
dec
cmp
ja
or
and
jp
pop
inc
mov
mov
mov
les
adc
stos
clc
adc
sub
jo
outsb
mov
scas
cmc
inc
add
jmp
divb
into
xlat
sti
pusha
jno
rorb
outsb
daa
rcll
loop
adc
fwait
push
aas
daa
call
fidivl
pop
pop
dec
out
mov
outsl
rcrb
fsubl
imul
jl
push
or
in
xor
pop
add
add
sbb
psubq
sbb
xchg
loopne
sub
and
aam
loopne
test
test
imull
xchg
das
fldenv
repz
cmp
iret
andb
jmp
push
imul
mov
cmc
dec
adc
aam
rorb
lahf
std
sahf
xchg
arpl
bound
icebp
lcall
imul
or
cmp
loop,pn
push
or
and
sbb
xlat
mov
xor
loopne
inc
sub
idiv
shlb
mov
jb
mov
xchg
out
orb
or
jp
mov
mov
js
dec
mov
push
fsubr
and
and
push
lods
push
mov
repnz
mov
xchg
stc
ror
jmp
leave
xor
jp
rcr
in
out
ret
jno
push
adc
xor
xchg
and
clc
icebp
xchg
in
cmp
mov
pop
xor
dec
test
loop
dec
adc
pop
and
std
pop
fchs
jp
sub
test
xchg
xor
jbe
dec
adc
mov
icebp
lds
adc
mov
in
dec
xchg
add
cmc
mov
mov
add
push
and
add
pop
and
out
cmp
fsubrl
sbb
scas
mov
test
cmp
repz
ud0
add
jmp
icebp
push
scas
sub
test
ret
nop
mov
mov
push
and
pushf
mov
inc
cmpsl
shll
dec
mov
in
lret
inc
mov
fidivrs
fldcw
push
mov
std
mov
js
pop
push
int
ds
cmc
sbb
in
mov
push
aas
test
rcrl
sub
in
jno
scas
inc
sahf
ljmp
fisttpl
xor
movsl
push
adc
and
loope
jns
lahf
or
jbe
add
and
leave
aam
jb
ret
fwait
cmp
inc
and
pop
lods
ret
clc
sub
repz
mov
fisubs
add
xor
cmp
ret
pusha
sub
mov
in
pop
inc
and
cmpsb
sbb
imul
dec
gs
push
ljmp
mov
fisubl
das
dec
add
rorl
subl
test
inc
xchg
stc
or
stos
ds
in
lret
mov
je
int
cli
push
stos
out
test
jo
mov
repnz
in
fwait
mov
fmulp
mov
inc
jbe
jnp
xor
pop
call
jnp
sbb
sahf
cmp
or
add
lret
or
shl
dec
dec
cmp
sub
ret
lods
fildl
or
mov
xchg
jg
hlt
mov
leave
add
xor
mov
dec
push
xchg
xchg
les
repz
scas
adc
jae
das
dec
mov
out
daa
imul
outsl
insb
stc
lret
popf
test
imul
xorl
jg
sahf
add
dec
xchg
leave
mov
inc
popf
inc
ja
xlat
lahf
loop
xchg
sbb
addr16
xchg
repnz
mov
or
cld
pusha
outsl
mov
inc
lock
ficompl
cmp
xor
mov
add
pop
push
mov
jo
repnz
pop
jp
or
arpl
scas
fidivrs
pushf
shlb
lcall
subb
pop
lcall
sub
pop
xchg
out
in
inc
xrelease
dec
aas
cmp
mov
frstor
loop
mov
inc
adc
pop
mov
add
mov
cmc
xchg
pusha
stos
pop
iret
sbb
sbbb
mov
cmp
inc
data16
insl
fistpll
sub
add
adc
popa
add
cmp
aaa
push
mov
sbb
in
push
cwtl
insb
push
push
cli
or
out
fisttpll
lret
jl
incb
sub
in
in
out
movsb
sbbb
adc
mov
repz
scas
loopne
fsubrp
fs
lock
mov
mov
push
roll
sub
xor
repz
jl
gs
int3
movsb
xor
dec
or
das
mov
mov
ja
push
adc
adc
cltd
cld
xor
dec
mov
sarl
std
sub
push
jl
xchg
cli
loope
repz
rcll
cmp
adc
movsl
stc
in
jnp
aaa
add
add
int3
fdivl
movsl
jbe
xor
out
lret
rcr
xchg
cmp
and
inc
xor
push
fisubrs
jle
push
push
movsb
cmc
add
jg
stos
and
adc
cmp
mov
add
cltd
scas
mov
mov
jecxz
mov
cmp
andl
insl
int3
add
or
icebp
xlat
push
or
enter
push
pop
das
or
dec
push
in
loopne
lods
jnp
sub
insb
dec
popf
aas
addr16
stos
adc
sbb
jmp
dec
cmp
and
mov
test
xchg
cs
fcmovnu
movsl
jne
daa
jmp
pop
popa
jg
addr16
sbb
fwait
insl
fistpll
rolb
test
mov
sub
push
pop
lock
scas
rcrb
sub
sbbl
popf
xchg
or
push
fcmovu
mov
pmulhuw
orps
mov
adc
jecxz
clc
pop
push
into
in
sbb
cli
stc
xorl
lahf
mov
adc
pop
xor
add
pop
push
dec
inc
jp
push
lcall
movsl
fcmovbe
lret
cmc
ljmp
xor
dec
inc
jp
push
lcall
movsl
fcmovbe
lret
cmc
ljmp
xor
dec
inc
jp
stos
gs
mov
cli
icebp
add
push
adc
pusha
xor
and
jp
ljmp
mov
shrb
mov
xor
inc
mov
xchg
and
xor
and
lcall
hlt
or
js
push
dec
test
mov
inc
mov
call
cmp
in
hlt
sbb
push
aam
mov
pop
test
mov
ficoms
jl
push
enter
or
inc
movsl
jo
js
pop
rolb
pop
lock
xor
stos
sub
int
xchg
aad
outsl
rorl
xchg
xchg
jo
imul
loopne
xor
shlb
call
jmp
sbb
or
cmp
test
mov
jmp
movzwl
inc
or
sub
cmp
insb
int
hlt
or
in
in
lds
dec
pop
push
dec
push
mov
inc
lods
push
pop
xor
add
leave
cltd
mov
sub
mov
cmp
jnp
call
adc
pop
lock
cmp
out
mov
or
mov
push
fwait
dec
mov
xor
pop
imul
sub
mov
movsb
adc
cmp
push
mov
cwtl
xor
xor
add
xchg
in
pop
add
adc
pusha
cwtl
jo
inc
pushf
dec
cmpsb
aam
int
std
sub
cmp
jno
push
cmp
insb
mov
jecxz
fldt
lock
xor
aaa
clc
cmp
fwait
daa
jnp
dec
sbbl
jmp
mov
loope
out
pop
les
push
enter
sub
sbb
or
js
push
xchg
mov
inc
mov
call
adc
in
hlt
sbb
or
js
push
xchg
mov
cmp
mov
fisubrl
push
inc
addl
adc
shrl
pop
outsb
add
std
dec
pop
lea
dec
repz
test
movl
dec
adc
fildll
cwtl
adcb
adc
arpl
inc
sahf
lret
fsub
mov
dec
negb
inc
int
xchg
cmc
mov
cltd
jle
add
rcrl
push
and
loope
in
cmp
mov
cli
sub
cwtl
lods
inc
dec
test
and
pop
fisubl
jb
fidivrs
icebp
mov
mov
jb
cmpsl
mov
sahf
rcr
jecxz
rol
add
xor
jns
call
mov
mov
gs
push
xchg
pop
rorb
mov
icebp
pcmpeqb
jg
popf
mov
fldt
add
pop
sbb
subl
cmp
fxch
loopne
mov
cmc
cltd
bound
cmc
inc
jmp
inc
jge
xor
pop
out
fidivl
jbe
jne
faddl
inc
mov
lret
dec
xchg
insl
iret
or
loop
push
add
or
mov
sahf
ss
dec
sahf
xor
mov
inc
push
insb
iret
xchg
dec
aas
and
sbb
hlt
cld
pop
push
lods
icebp
cmpsb
pop
ret
dec
lret
cltd
push
adc
test
lods
pop
scas
notl
add
jnp
push
cmp
repnz
push
mov
mov
xorb
out
xor
mov
stc
dec
mov
cmp
pop
or
repz
adc
inc
mov
jb
cmp
fs
mov
push
sbb
adcb
lcall
cmp
cli
add
jo
fcomp
jge
jns
dec
xchg
test
cltd
fs
lea
mov
cmpsl
ljmp
adc
sbb
pop
scas
xor
cmpsl
divl
add
repnz
sbb
push
test
adc
mov
call
fpatan
fs
call
jns
sbb
add
shl
add
stc
jge
pop
mov
push
push
pop
nop
dec
sub
adc
xchg
loopne
sbb
mov
scas
mov
inc
call
mov
lret
testb
lods
pop
ds
mov
add
insl
jns
insl
sti
mov
aaa
jmp
fmuls
pop
cmp
push
xchg
lods
ss
lcall
sbb
push
mov
dec
ds
out
xor
xorb
dec
push
loop
xchg
mov
sbb
push
mov
mov
es
inc
add
xchg
in
xchg
pop
cmp
sbb
cltd
popf
xor
adc
into
outsb
imul
cs
pop
imul
sub
ja
pop
push
cmpsb
icebp
mov
inc
aaa
xchg
cmp
add
dec
xor
rcr
cltd
mov
inc
dec
loope
adc
mov
mov
push
mov
mov
mov
lahf
lcall
sub
mov
dec
xor
sbb
fnstcw
insb
mov
xchg
imul
in
mov
or
push
or
xor
sbb
into
pop
push
sub
sub
or
xchg
mov
test
jae
rolb
cli
xchg
mov
jg
ret
sub
or
cmp
int3
push
fisubrs
mov
pop
adc
or
dec
fwait
stc
adc
ja
sbb
adc
sbb
jno
sbb
or
pop
xchg
dec
popf
ja
xchg
arpl
inc
es
jle
mov
sbb
cltd
push
push
and
adc
xchg
push
fsubrs
xchg
ja
dec
mov
xchg
ljmp
pop
jp
dec
mov
dec
ret
add
cmp
pop
adc
pop
mov
inc
xchg
jns
lea
inc
dec
movsb
or
pop
jnp
in
adc
das
imul
mov
roll
bnd
insb
jg
icebp
cmp
pop
scas
push
jae
push
out
mov
and
int
aad
out
xchg
lea
mov
test
sbb
sub
leave
stc
adc
jge
in
mov
mov
sbb
xor
xor
sub
push
pop
jmp
movsl
ret
xor
inc
pop
adc
int3
pop
pop
xchg
inc
xchg
in
ljmp
andl
xchg
xchg
cmp
std
andl
mov
aam
adc
fnstcw
sbb
mov
jecxz
sub
or
adc
rorl
dec
mov
sahf
or
cmc
add
jge
sbb
daa
test
mov
xchg
shrl
stos
cmpsb
lock
and
sub
inc
inc
shl
xor
add
push
inc
into
lret
inc
or
pop
add
jno
xchg
add
jae
mov
adc
movl
jg
or
pop
in
test
lahf
xchg
adc
leave
mov
adc
mov
and
ret
or
xor
mov
std
ljmp
stos
cmc
fwait
push
xchg
jecxz
sbb
inc
outsl
cmpsl
insb
movsb
popa
cmp
frstor
xor
push
ljmp
add
jno
pop
mov
imul
sti
pop
fistpl
arpl
fisttpl
inc
icebp
imul
pushf
out
mov
xlat
clc
icebp
pop
loope
shl
push
xchg
adc
mov
mov
mov
loope
inc
and
adc
mov
and
add
xchg
xlat
imul
dec
mov
mov
into
les
lret
xchg
lcall
and
das
fs
jmp
iret
imul
add
mov
jno
xchg
adc
aad
imul
pop
xchg
decb
movsl
dec
add
rcr
loopne
mov
lock
xor
xchg
sti
lock
mov
test
dec
xchg
push
adc
mov
js
pop
dec
mov
dec
adc
jecxz
das
cmp
popa
imulb
les
into
or
out
sahf
xor
mov
fwait
out
loopne
push
icebp
test
js
xor
or
lea
loopne
jg
sarl
pop
mov
and
lcall
dec
sub
ss
in
dec
mov
fstps
add
sbb
push
arpl
fists
jae
mov
push
dec
pusha
rol
push
jmp
inc
popa
addl
xor
sub
cmp
and
pop
jno
out
fcomps
test
fdivrp
and
adc
ljmp
cmp
mov
test
lahf
pop
shll
cmp
in
decl
popf
out
cmp
cmp
negb
dec
or
enter
cmp
outsl
jmp
sbb
sub
out
xchg
and
aad
scas
push
test
and
imul
shlb
sbb
sbb
rclb
aam
in
lods
xorb
jle
or
push
add
sub
cmp
push
notl
pushf
jb
dec
daa
mov
outsl
cmpsl
scas
jg
sub
inc
hlt
test
mov
pop
scas
addl
mov
mov
sbb
dec
mov
leave
jg
inc
test
adc
adc
lret
out
popf
daa
setle
scas
test
mov
or
idiv
cmp
jbe
pusha
addr16
inc
sub
add
fs
loop
popf
scas
and
add
mov
sub
decb
inc
scas
fiaddl
mov
sbb
repz
loope
cwtl
mov
int3
xlat
and
hlt
loopne
fcmovnbe
jb
cs
shlb
das
push
insl
call
push
rcrb
insl
je
inc
inc
cmpb
out
out
popf
fadd
aam
or
push
pop
lahf
leave
pop
pop
rcrb
push
push
and
sahf
add
and
stos
sbb
jge
mov
mov
mov
sbb
push
push
jbe
lcall
lret
punpckhwd
jae
les
fistpl
push
xchg
into
add
pushf
xchg
call
xor
out
inc
mov
or
lahf
cmp
fmuls
mov
stos
jge
push
insl
ja
push
loop
in
mov
xchg
leave
fdivrp
pop
mov
xchg
jge
inc
jae
cltd
xor
and
sub
xor
aam
lret
nop
lahf
fidivrl
mov
mov
cltd
decl
stos
pop
cmp
outsb
dec
repz
ljmp
xor
pop
jb
rcr
in
xchg
jne
sahf
fnstsw
fcom
xchg
mov
and
popa
cmp
xchg
xor
out
fists
add
jo,pt
fsub
fistl
cli
adc
push
xor
lea
ljmp
mov
std
leave
push
push
test
xlat
lods
mov
sbb
push
mov
shrb
popf
and
and
and
or
dec
int
sbb
ss
sub
cld
orl
mov
or
xchg
out
arpl
cmpl
add
dec
and
shl
ss
sub
fldenv
sti
xchg
scas
add
movsb
mov
pop
or
jmp
lock
cld
pushf
sahf
imul
dec
xor
imul
outsb
jbe
dec
cwtl
fstl
mov
dec
ds
xchg
stc
gs
repz
xor
stos
jecxz
mov
sbb
insl
mov
pop
push
or
lds
lea
cmp
cmp
xor
mov
jb
repnz
xor
sti
mov
sbbl
inc
lock
sub
jg
xor
loop
in
into
mov
pop
loopne
mov
cmp
nop
push
mov
in
xor
pop
scas
into
dec
pop
ret
add
sub
adc
add
adc
inc
or
cmp
mov
outsl
aaa
push
xchg
fprem
daa
jmp
dec
loopne
inc
and
jmp
xlat
pusha
dec
in
shll
das
andl
sub
fs
cld
xor
jns
pop
dec
mov
sub
jb
movsl
rol
dec
mov
sub
push
imul
mov
xchg
or
sti
inc
dec
test
sub
je
or
xor
popf
adc
mov
sub
cmp
and
lret
jl
push
in
xchg
mov
out
es
stc
cmc
incb
ret
gs
pop
mov
push
inc
push
mov
push
or
xor
test
in
sahf
jmp
lods
xchg
or
cwtl
add
outsb
scas
xchg
mov
adc
xchg
mov
sbb
push
add
dec
test
inc
mov
cmp
or
jnp
dec
mov
shrl
int3
sbb
or
aaa
test
call
dec
inc
loope
adc
jae
pop
push
jae
sub
xchg
js
out
sbb
mov
mul
out
adc
jbe
mov
sbb
jle
fidivs
xchg
cwtl
dec
xchg
popf
out
jg
pop
adc
aad
sub
and
pop
cwtl
popf
dec
pop
dec
cmpsl
dec
add
repz
adc
push
gs
rorl
xchg
sub
sbb
movsb
push
fdiv
cs
repz
lds
stos
out
bound
fxam
dec
ret
sbb
fiaddl
rolb
lret
adcl
scas
cmp
mov
dec
dec
adc
cwtl
jge
cld
pop
cmpsl
es
cmp
mov
int
push
push
mov
mov
filds
out
fbld
add
ja
hlt
mov
shlb
xor
mov
sbb
jnp
push
ljmp
mov
ret
rorb
enter
jne
ficomps
push
out
stos
sub
pop
adc
cwtl
push
ror
sub
inc
mov
jg
pushf
lret
jbe
iret
mov
rcrb
mov
adc
jo
cmpsl
outsl
cmpsb
xchg
xchg
les
push
jnp
fwait
lea
xchg
les
push
push
imul
cli
shlb
mov
and
stos
test
inc
stos
adc
mov
in
push
enter
call
mov
add
insb
xlat
popa
pop
mov
imul
out
inc
rorl
pop
mov
dec
adc
jg
xchg
lods
jno
push
push
xchg
stos
xchg
clc
mov
adc
bt
movsl
mov
loope
hlt
sub
scas
jecxz
dec
xor
and
dec
rep
jl
cs
push
jo
sub
test
mov
nop
inc
inc
lods
out
lds
or
or
cli
cld
sub
or
push
enter
ficompl
lret
icebp
ret
dec
cmp
int3
push
incl
adc
sbb
std
lock
mov
stc
test
fsubl
rcll
lods
test
shll
sar
mov
ret
or
stc
aaa
out
xor
inc
xlat
inc
jo
in
sbb
insl
sbb
daa
aas
mov
das
add
aad
sbb
mov
sub
mov
out
inc
cmp
sbbl
mov
out
adc
test
or
imul
daa
pop
sub
mov
imul
loop
ret
push
fstpl
push
push
loope
jl
hlt
aas
xchg
xchg
mov
xchg
add
add
cwtl
outsl
lods
and
roll
mov
cs
pop
push
inc
in
mov
es
jmp
inc
aam
or
into
push
mov
jecxz
add
fdivl
push
and
push
xor
jle
dec
add
dec
cmp
jns
and
pop
or
pop
dec
test
push
and
shl
cltd
int
lea
lock
std
cltd
push
pop
bound
add
add
inc
sub
dec
mov
push
loop
orb
sub
fisubrl
dec
fstpt
loopne
jl,pt
int
pop
jno
sahf
mov
mov
or
jp
inc
jmp
push
xchg
mov
mov
cmp
jb
mov
mov
fisttpll
dec
fistl
mov
pop
dec
sbb
xchg
test
scas
mov
dec
out
mov
xlat
ljmp
push
dec
jno
mov
in
cmc
movsl
jns
stos
repnz
inc
inc
push
cmp
mov
and
and
ret
cmp
shlb
filds
cwtd
divl
mov
sti
notb
xor
rorb
ljmp
cmc
cwtl
inc
push
jno
test
fucom
imul
pushf
push
ja
mov
push
fld
pop
cmpsl
sbb
lcall
fcmove
fcmovbe
cmp
xchg
add
outsl
push
dec
adc
pop
jne
lock
sub
xchg
xor
in
cmp
int
dec
fwait
inc
outsl
adc
leave
sub
sub
sub
adc
repz
pop
mov
mov
mov
jo
daa
outsl
out
push
std
xchg
jle
popf
pop
add
lock
xchg
gs
addb
daa
and
test
jl
std
mov
in
lcall
cmp
jbe
fs
cmp
xor
mov
das
mov
push
sbb
adc
pop
in
push
test
pop
out
js
lret
sbb
decl
inc
sahf
sbb
dec
add
icebp
pop
aam
pop
repz
sbb
push
cmp
adc
xor
inc
popa
jg
cli
dec
les
bound
pop
jbe
dec
pop
dec
sub
pushf
loope
outsl
mov
hlt
push
cmp
adc
pop
lds
sub
ret
jmp
push
andl
imul
push
mov
jnp
lcall
jmp
fbld
mov
mov
or
mov
loopne
lcall
cld
jecxz
inc
cmpsb
dec
call
cmp
or
lret
pop
addr16
inc
add
cmp
pop
sub
xor
pop
fisttpll
dec
out
lret
data16
lret
xchg
push
and
int3
sarl
int3
cmp
xor
repz
ret
jge
test
add
dec
mov
outsl
and
xor
jne
movsb
pop
out
sbb
dec
and
add
orl
lods
fst
daa
nop
insl
sbb
add
adc
mov
fisubl
out
cmp
cli
xchg
sub
dec
pop
ret
fildl
repz
add
imul
hlt
clc
daa
test
and
out
out
adc
mov
inc
mov
inc
scas
jge
lods
mov
aas
movsb
pop
or
pop
mov
mov
mov
addr16
and
mov
cmp
and
scas
out
inc
movsl
dec
jae
or
mov
sub
and
pop
test
test
pop
stc
pop
leave
xchg
popf
int3
dec
jns
lret
pop
push
inc
inc
std
push
test
js
add
pop
rcr
and
test
dec
ret
push
inc
jge
pop
or
and
int3
add
sub
or
clc
sbb
cmp
arpl
psubsw
mov
das
jl
das
scas
mov
mov
sti
inc
mov
movsb
cli
xorb
or
pop
add
cmp
inc
push
jnp
sbb
mov
mov
std
push
ret
fcomi
mov
aad
pop
into
add
stos
imul
loop
mov
push
fnstsw
shl
mov
inc
push
mov
jle
lahf
jge
sbb
fwait
test
mov
lea
jno
cmp
dec
divl
loope
out
pop
jg
push
fmuls
mov
jle
xlat
xchg
stos
pop
popa
mov
vmwrite
push
int3
aas
mov
inc
sbb
push
adcb
cs
das
out
scas
mov
lds
push
mov
mov
mov
stos
mov
scas
insb
xchg
stos
jnp
xchg
rcl
ret
mov
mov
cltd
movsb
pop
push
mov
fcom
insb
sahf
cmp
pop
pop
rol
test
fists
mov
xor
inc
push
roll
roll
aam
mov
cmc
cmp
loopne
pop
je
cmp
loope
out
adc
inc
push
repnz
ljmp
cmp
shrb
dec
sbb
mov
sarb
lods
aaa
xchg
addr16
cmpsl
fstpl
mov
push
or
popf
popf
cltd
sbb
sti
popa
loop
xchg
pop
or
sub
pushf
scas
outsl
testb
jbe
push
sbb
mov
daa
mov
subl
lds
cmpb
pop
cwtl
pop
arpl
or
pop
cld
add
ret
popa
mov
sub
shrb
mov
inc
and
fnstsw
popf
lahf
or
in
lods
xchg
testl
in
inc
cmp
pop
jge
mov
dec
fstps
inc
lcall
call
jae
mov
xchg
mov
movsl
and
lcall
and
mov
mov
mov
subb
pop
inc
jle
in
insb
sbb
and
dec
das
lods
stos
rolb
cmp
das
inc
sub
cmpsb
mov
and
lods
out
in
or
data16
into
stc
cld
sub
add
shrl
movsl
mov
lret
xchg
fldl
mov
enter
mov
popa
das
inc
pop
fld
mov
std
out
pop
sbb
xor
adc
xor
lea
add
adc
dec
xchg
aam
test
add
xor
or
sbb
mov
out
mov
xchg
imul
xchg
out
dec
pop
mov
repnz
fwait
cmp
mov
daa
out
sbb
jp
gs
pop
mov
call
push
sub
shr
or
outsb
mov
scas
inc
outsl
mov
pop
pop
cld
in
mov
xor
push
test
aaa
jg
mov
scas
movsl
fidivrl
fldt
cmc
sub
iret
add
mov
lret
jbe
lock
jmp
or
mov
stc
cmpsl
pop
ret
bound
sbb
jo
push
xchg
xor
push
mov
push
pop
push
cmp
push
icebp
pop
mov
mov
mov
mov
fdivrl
xor
mov
cmp
and
or
mov
add
test
std
xchg
outsb
std
sub
roll
sti
loope
in
cmpsl
js
add
push
cmp
hlt
sbb
repnz
jne
js
xor
ss
inc
inc
push
add
pusha
rol
outsl
out
out
andb
mov
insb
movsb
sti
xchg
ljmp
imul
mov
pop
xchg
imul
movsb
fs
popa
test
push
and
in
mov
rcrb
leave
or
enter
push
adc
jl
pop
xorb
mov
pop
xor
repz
sub
jge
in
addr16
xchg
mov
out
mov
in
cmp
inc
mov
aam
outsb
mov
movsb
scas
cs
xor
push
out
lret
xor
fidivl
inc
jne
les
sbb
aad
add
mov
push
mov
and
dec
in
pop
in
inc
and
repz
xor
dec
and
xchg
inc
pop
sbb
rclb
outsb
fistpl
stos
pop
ljmp
test
jne
or
je
inc
mov
call
adc
in
hlt
sbb
or
js
push
xchg
mov
inc
mov
call
adc
in
hlt
sbb
or
js
push
xchg
mov
pop
mov
and
pop
fadds
enter
sub
sbb
or
js
imul
mov
call
aam
sbb
pop
mov
or
cmpsl
cld
mov
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
cmpsb
mov
pop
xchg
out
sub
fstpt
cld
push
data16
inc
mov
mov
xchg
out
negb
sub
cmp
into
faddl
int3
push
cld
out
ja
inc
lods
push
mov
xchg
out
testb
es
adc
cld
data16
repnz
dec
xlat
xor
jmp
mov
std
out
inc
sbb
stos
jmp
std
mov
dec
adc
jns
imul
cmpsb
ds
dec
mov
cld
xor
jbe
adc
fucomi
xor
sbb
pop
mov
cwtl
dec
and
push
xchg
jns
pushf
std
pushf
lds
mov
inc
insb
xchg
dec
mov
fcompl
pushf
mov
add
fbstp
mov
je
mov
sbb
loopne
jl
cmp
mov
notb
mov
inc
dec
mov
int
jge
bound
mov
int
enter
in
sbb
jmp
gs
mov
xchg
out
negb
xor
les
cmc
push
in
xchg
jbe
inc
lods
push
fadd
sub
pop
shrb
sbbl
test
movsl
push
movsb
jne
push
xchg
loopne
aaa
iret
and
pop
in
xlat
jns
jg
orl
push
mov
mov
xchg
adc
das
sarb
or
repz
sub
cmp
int3
faddl
in
push
cld
data16
inc
lods
push
mov
xchg
out
negb
sub
cmp
int3
faddl
in
push
cld
data16
inc
lods
push
mov
sbb
outsl
xor
xchg
nop
dec
aam
pop
in
cmp
lock
testb
and
lcall
adc
cmp
ret
xchg
mov
ljmp
loop
xchg
cmpsl
fsubrl
es
jb
push
popf
orl
cld
movsl
les
mov
push
imul
push
faddl
jg
cs
mov
xor
mov
sbb
and
ffreep
clc
xchg
or
pop
clc
add
and
pusha
lret
ja
and
sub
stc
pop
fsin
push
pop
imul
scas
pop
cmp
call
or
adc
add
mov
or
cmp
pushf
adc
popa
jmp
xchg
outsl
mov
ss
pop
pop
mov
jns
dec
loopne
les
jg
in
add
lea
jo
dec
xchg
jmp
fnstcw
cmp
out
lea
inc
test
test
mov
dec
push
sub
mov
adc
popa
lods
fildll
pushf
mov
shll
sbb
adc
jno
into
mov
popa
loop
das
xor
sahf
push
push
sub
inc
cld
and
xchg
mov
mov
mov
fcompl
lock
addr16
sub
mov
cmc
xchg
repnz
fiadds
mov
sub
leave
mov
loope
xor
cmp
jmp
dec
loopne
shll
cmp
in
jae
mov
test
mov
jle
test
xor
scas
cmp
xchg
in
lret
sbb
jge
in
push
jb
push
inc
xchg
sbb
mov
xorl
dec
cmpsl
mov
mov
dec
mov
add
add
sbb
add
cmp
pusha
or
nop
aas
ret
mov
push
jp
ret
cmp
out
out
stc
inc
js
fimull
das
leave
mov
push
mov
push
loop
xchg
mov
mov
les
mov
sbb
push
cs
sub
pop
cs
mov
xchg
movsb
mov
loop
or
dec
pop
jae
fists
push
jmp
loope
cld
and
or
test
mov
lock
xor
repz
and
cmp
js
repz
ret
sub
mov
fisubrs
std
cmp
into
cmp
push
and
inc
jecxz
sbb
icebp
mov
ret
jecxz
aas
fdiv
pop
add
pop
inc
leave
nop
clc
rcrb
jo
jmp
and
push
cs
xorl
stc
sbb
das
into
stos
add
clc
int3
cmp
fwait
aam
xchg
pop
jne
cli
fs
js
cmp
out
mov
jne
xor
sti
cmp
or
xchg
push
adc
xchg
call
xor
ficoms
mov
sub
std
mov
ds
cmc
dec
stc
imul
xchg
and
push
not
subl
inc
pop
stos
roll
fwait
dec
xlat
inc
js
sbb
and
sbb
hlt
sbb
test
push
in
scas
mov
xchg
xchg
add
jbe
push
or
xchg
dec
je
dec
cmp
adc
pop
out
add
inc
lods
repz
lea
cmp
stos
sbb
int
mov
out
xchg
negl
jae
mov
mov
clc
push
jecxz
jae
inc
cmp
repz
xorb
push
push
sahf
aad
xchg
push
sub
fs
iret
out
mov
push
jg
lcall
or
add
pop
adc
xchg
cmp
mov
imul
push
xchg
xchg
dec
xchg
scas
loopne
dec
cmp
pop
into
movsl
rorl
cmp
pop
xor
hlt
or
add
jnp
dec
mov
das
aaa
jecxz,pt
movsl
test
cs
push
xor
fsub
inc
cmpsb
stc
mov
xor
cmp
jns
testb
in
fstpl
jg
clc
jmp
xor
cmp
ss
in
aam
jmp
mov
xchg
arpl
je
lea
push
test
inc
in
sub
shll
xchg
push
sub
fwait
or
fstl
fistl
push
loopne
dec
pushl
pop
fucomi
mov
xchg
out
pop
into
cwtl
lods
sbbl
aad
sub
and
and
xchg
add
or
mov
shll
sub
nop
dec
adcl
push
aas
jne
addr16
pop
sub
stos
dec
inc
incl
sub
and
rorl
push
test
adc
and
mov
xor
leave
xlat
mov
test
mov
out
and
sarl
xchg
sub
xor
mov
jp
and
jg
jnp
or
lret
stc
xchg
popa
push
stc
xor
insl
sbb
jae
sub
xchg
add
push
push
mov
pop
mov
xlat
out
mov
dec
mov
mov
inc
loope
mov
xor
xchg
pop
adc
jae
xchg
fnstsw
xchg
jp
xor
pop
add
jno
xor
sub
xchg
lret
iret
and
out
push
lea
fisttpll
mov
add
popa
and
lret
rorb
pop
aas
cltd
add
or
movsl
push
adc
or
dec
jmp
jnp
ret
xor
scas
sbb
es
add
xor
pop
push
xor
fcomps
adc
jmp
lods
vmwrite
loop
loop
mov
das
ja
cli
xor
orb
lea
jg
lahf
sahf
mov
test
xor
into
mov
scas
mov
jp
pop
lods
jno
adc
pop
movsl
mov
ficoms
mov
imul
mov
out
sarb
mov
inc
mov
orb
repnz
iret
imul
test
mov
pop
loope
aam
lret
xor
gs
call
push
int3
fwait
push
mov
testl
jo
notl
pushf
sbb
add
xchg
cmpsl
cmp
gs
mov
shlw
or
jnp
dec
sbb
mov
in
mov
daa
adc
hlt
ja
lock
xor
mov
in
inc
mov
inc
cltd
dec
and
pop
int
push
mov
pop
clc
or
movsl
dec
xlat
popa
pop
mov
add
out
ja
or
inc
xlat
dec
scas
js
movsl
aad
sarb
imul
pop
xor
stos
je
xorl
std
push
lods
jmp
sub
fdivl
inc
das
adc
fwait
dec
inc
push
sbb
cmp
push
xchg
fcomps
sbb
jae
cltd
fcmovne
add
inc
inc
das
div
push
sub
mov
dec
pop
mov
int3
out
or
mov
pop
cltd
je
adc
and
sarb
incb
or
mov
dec
cvtps2pi
pop
jns
dec
js
sbb
ret
pop
or
xchg
mov
dec
xor
nop
popa
nop
cmp
test
push
cmp
sub
and
push
xchg
subl
lret
dec
rcr
add
lret
jmp
pushf
adcl
push
inc
fcmovbe
mov
sbb
stos
jge
mov
bound
std
addr16
or
imul
push
ja
and
add
sub
rorb
and
and
pop
in
and
xchg
or
xchg
xchg
sbb
filds
xlat
add
or
lcall
gs
and
sub
out
shlb
xor
andl
xchg
mov
aad
sbb
add
mov
and
pop
dec
shlb
sub
mov
lcall
inc
pop
das
sub
popa
dec
xchg
sub
dec
and
pop
mov
loope
popf
ficompl
lret
clc
cmpsl
ret
rep
mov
rcll
scas
leave
mov
stos
shrb
pop
push
push
mov
mov
sub
andnps
popf
or
lock
pop
mov
outsb
jp
adc
mov
jae
and
daa
inc
enter
inc
daa
ss
aam
or
fcmovnbe
xchg
popa
ljmp
xor
adc
lods
mov
or
cwtl
inc
mov
outsl
push
mov
or
pop
cmpsb
fsub
xchg
outsl
rcll
loopne
jl
sahf
add
mov
ds
aad
inc
std
or
xchg
arpl
sbb
cmp
loope
xchg
jmp
jle
jle
jmp
push
xchg
jno
lahf
mov
std
aad
imul
imul
rorb
mov
sbbl
dec
dec
adc
mov
inc
add
insl
roll
push
pop
mov
or
hlt
xchg
je
xchg
insl
pop
pop
mov
jnp
mov
leave
fiadds
loop
mov
jl
xchg
pop
in
pop
pusha
cld
test
je
fcompl
jl
cltd
sub
sbb
rclb
dec
mov
xchg
insb
push
adc
xlat
test
lcall
jmp
xor
xchg
inc
push
mov
scas
xorb
sub
sahf
lods
inc
ss
cmp
push
aaa
xor
bound
or
xchg
xor
mov
mov
push
jno
repnz
fistps
lahf
lcall
xchg
shlb
clc
push
or
cs
data16
jae
iret
movsl
push
shl
adc
mov
pop
or
and
cmp
roll
sbb
std
mov
mov
add
aam
imul
xchg
sub
icebp
aaa
pop
lahf
dec
pop
out
pop
loopne
jle
outsb
nop
sbb
mov
addr16
cmp
add
hlt
jb
mov
int
xchg
arpl
js
call
jne
xor
cmpsb
test
nop
out
arpl
clc
jbe
push
leave
or
loopne
jno
lret
fimuls
pop
jns
aaa
xchg
jg
xor
mov
lea
push
push
inc
scas
xor
push
jge
inc
push
pop
sub
stos
lahf
mov
xchg
fldt
scas
mov
aad
mov
out
cwtl
push
or
fcmovne
movsl
and
or
data16
out
xor
movsl
addr16
mov
sub
pop
cmp
int
mov
hlt
insl
iret
mov
jp
test
test
sbb
ret
mov
stos
negl
int3
mov
out
icebp
sbb
repz
xchg
mov
xchg
pop
aam
cs
adc
or
mov
or
xchg
sbb
mov
shrl
xchg
mov
mov
inc
inc
loope
cmp
cli
stos
mov
mov
xor
lret
cmp
fld
arpl
cmpsl
cmp
das
frstor
pop
add
xor
or
int3
out
repnz
jge
mov
dec
fsubs
loop
adc
mov
shrb
je
push
cltd
adc
jle
es
call
xor
add
or
movsl
nop
idivb
pop
test
test
sbb
adc
iret
mov
dec
cmc
jg
mov
rcrl
mov
aas
ljmp
xchg
or
stos
imul
test
fdivrl
orl
mov
fsubs
xor
xchg
or
ja
jge
inc
push
addb
jbe
and
push
out
inc
je
mov
mov
jnp
rcrl
mov
arpl
cmpsb
sarl
inc
scas
pop
fadds
sar
mov
or
jae
ret
cmpsl
fcomp
and
ss
cmpsb
inc
scas
fadds
ret
repz
lods
jecxz
adc
mov
dec
test
jl
jl,pn
imul
in
fcmovb
popa
repnz
pop
subb
sahf
cmp
out
aam
scas
cmp
movl
aam
and
sub
lock
dec
cmc
xor
shll
arpl
dec
notl
adc
dec
mov
lock
sbb
or
leave
mov
lock
adc
repnz
divb
shrb
jl
sahf
cmp
and
outsb
mulps
mov
andb
mov
in
int3
nop
jecxz
xchg
outsl
mov
repnz
push
push
nop
mov
imul
xchg
mov
sbb
push
dec
xor
xchg
dec
cs
fs
cmp
adc
push
xchg
outsb
mov
cltd
mov
popa
imul
adc
xor
stos
sbb
movsb
leave
daa
lret
adc
pop
dec
aaa
in
sbb
sub
hlt
sbbl
jno
fdiv
sub
xor
sub
gs
lret
and
push
dec
xchg
cltd
cmp
or
and
aaa
and
push
cmp
hlt
call
mov
inc
insl
out
pop
cmp
jns
sbb
jge
mov
or
pop
adc
jle
cli
sbb
dec
stos
bswap
rcll
dec
mov
cmc
outsl
jecxz
mov
and
mov
dec
inc
out
sbb
mov
fnstsw
popf
addl
pushf
daa
cmpsb
fcmovu
fldenv
leave
jb
ja
jge
mov
mov
cld
cmp
add
adc
push
add
sti
testb
add
adc
movsb
lcall
adc
pop
dec
sbb
rdpmc
push
stos
loop
dec
loop
ljmp
cwtl
inc
pop
inc
mov
out
in
insl
inc
call
add
pop
mov
cltd
inc
fdivp
cmpsb
xor
mov
sti
pop
mov
inc
push
mov
sbb
arpl
int3
mov
xchg
mov
movsl
mov
pusha
or
mov
mov
sub
cltd
lock
int
cmp
shl
pop
jecxz
enter
mov
in
cmp
shr
and
push
cmp
ret
lock
daa
add
mov
std
push
add
push
add
add
dec
inc
lock
sbb
movsb
cmpl
in
ficoms
in
push
leave
jae
and
shlb
mov
dec
test
cmovns
sarb
sub
jle
int3
aam
xchg
add
xchg
mov
sbb
push
in
mov
jecxz
mov
xlat
mov
jp
sbb
ffree
jl
add
push
and
sbb
jo
out
adc
movsb
mov
lcall
sti
add
sbb
push
in
mov
xor
das
sub
jo
adc
inc
je
adc
xchg
jle
gs
push
adc
or
mov
sub
dec
xchg
or
mov
pop
sbb
sbb
mov
xchg
stc
push
push
enter
test
jl
aad
pop
jns
xor
push
or
das
int3
sbb
pop
pop
inc
xchg
insb
mov
inc
mov
ret
cmpb
pop
popf
aaa
fsubr
xlat
mov
mov
sbb
and
rolb
jmp
adc
jmp
hlt
inc
add
lods
stos
pusha
cmc
jo
xchg
insb
push
pop
mov
inc
daa
jb
mov
cwtl
sti
hlt
pushf
call
xchg
fstpt
xchg
rcrl
or
adc
test
sub
xor
push
or
or
addl
and
add
stos
inc
lret
or
add
pop
cmc
mov
fbstp
or
cmp
shlb
sti
jge
outsl
xchg
in
dec
pop
pop
ds
push
cld
mov
pop
jg
push
insb
in
adc
jg
jmp
xlat
test
test
mov
mov
loop
dec
stos
jg
jg
out
sub
lds
data16
add
stos
in
sbb
xor
jbe
pop
iret
sbb
hlt
fcoms
insb
inc
sbb
xchg
jns
imull
adc
divl
test
xor
push
hlt
sbbb
imul
addr16
push
andb
mov
pop
mov
inc
pop
jns
cmp
or
shrb
pop
inc
mov
inc
cmp
adc
lea
mov
xchg
cmp
sbb
or
mov
fisubl
xor
push
mov
gs
inc
push
hlt
push
sub
loope
sbb
pop
or
neg
jno
mov
dec
dec
adcb
das
arpl
test
movsl
cmp
and
cmpsb
dec
stc
int3
sbb
adc
mov
inc
cmp
popa
loopne
mov
jmp
dec
pop
loope
sbb
sbb
fidivl
aas
ret
lret
inc
dec
mov
push
sub
nop
xchg
lret
pushf
ja
inc
lcall
orb
clc
sub
inc
ja
and
lcall
fcoms
sub
adc
push
adc
xlat
inc
inc
dec
pop
mov
sub
lods
lret
ss
repz
xor
or
aaa
insl
and
jbe
test
sbb
gs
std
lds
loop
test
stos
repnz
add
imul
inc
jp
dec
mov
mov
cmp
pop
out
test
shrb
mulb
fadds
cmp
mov
jb
outsl
cli
or
roll
adc
mov
test
popf
ds
xlat
cld
mov
push
shlb
int
jle
int
sbbl
push
and
popa
xor
movsl
xor
lret
or
daa
sbb
push
xchg
pop
jo
mov
mov
add
shll
sbb
cmp
ds
mov
push
push
dec
je
adc
dec
ljmp
xorl
fs
cmc
adc
mov
imul
ficomps
dec
mov
pushf
mov
mov
cmpsb
xchg
xchg
bsr
imul
cwtl
push
lret
xchg
jnp
cmc
mov
pop
or
imul
dec
mov
jecxz
or
out
sbb
rol
xor
std
test
and
pop
xor
cld
or
cmp
int3
lea
fcompl
add
pop
dec
inc
fstpt
cmp
negl
ss
call
int
in
stc
ret
mov
mov
and
add
lds
xchg
cltd
add
lods
in
fistl
add
push
cmp
cmp
mov
mov
dec
mov
pop
xchg
rorl
loop
and
xchg
and
ret
mov
stos
or
mov
repz
inc
adc
push
repz
sahf
nop
loopne
push
inc
and
out
mov
cmp
mov
movsl
mov
jp
sub
mov
jecxz
cmp
test
pop
adc
mov
push
jl
xchg
lret
cmp
jg
inc
sbb
aam
aam
aad
in
push
int
mov
mov
inc
add
mov
test
icebp
push
lahf
loop
mov
call
inc
pop
imul
jb
js
jb
cmc
aad
ds
sahf
fnstsw
adc
aad
sbb
scas
mov
add
imul
shrl
out
ss
cmp
push
stos
insl
out
inc
mov
mov
js
test
stos
fisubrs
inc
add
sbb
movsb
add
insl
cmp
lret
adc
mov
and
data16
sub
jg
das
leave
pushf
xor
sarb
sbb
inc
fs
fcoms
adc
add
stos
jle
push
add
les
dec
mov
xchg
int
or
mov
adc
cmp
pop
outsl
ret
cmp
loop
aam
loopne
mov
cli
clc
dec
jmp
test
xor
icebp
push
jp
push
push
xchg
jl
mov
and
pop
outsb
aaa
pop
fiadds
ffree
pusha
sub
cmp
aaa
lods
cmc
mov
lods
cltd
adc
pusha
int
xchg
imul
or
fcoml
pop
mov
stos
das
xor
mov
jge
sbb
int3
cmpsb
cmovns
inc
nop
adc
in
hlt
movsl
sbb
mov
mov
ficoms
lods
fistl
roll
add
std
into
push
outsb
inc
stos
adc
push
iret
jmp
pop
jl
adc
je
inc
xor
sbb
popa
lret
or
pop
fimull
movsl
popf
pop
jae
loopne
stos
enter
inc
jecxz
push
stos
xchg
int3
outsb
push
add
cltd
and
mov
aas
imul
loopne
ret
dec
int
mov
dec
insl
ret
aam
lret
push
xchg
dec
sub
pop
cmp
cmp
inc
sub
repz
jle
add
repz
ret
js
or
mov
add
sbbb
fwait
mov
pusha
sahf
jg
or
pop
stos
add
ljmp
push
push
iret
push
in
ss
stos
ret
xor
ret
jg
push
les
lds
imull
jno
test
mov
test
rorb
rcr
add
jl
or
sbb
sub
cmp
int3
faddl
in
push
cld
data16
inc
lods
push
mov
xchg
out
negb
sub
cmp
int3
faddl
in
push
cld
data16
inc
lods
push
mov
xchg
out
negl
sub
cmp
int3
faddl
in
pop
std
data16
inc
lods
push
mov
xchg
out
negb
sub
cmp
int3
leave
jbe
in
push
mov
add
arpl
cli
push
ljmp
xor
ret
pusha
jecxz
repnz
cmpl
sub
cli
push
ljmp
adc
ret
push
pop
repnz
sbbb
mov
cli
push
ljmp
adc
ret
dec
cmpl
and
jl
jbe
jg
jge
mov
lcall
xor
cltd
add
in
add
pop
cmc
in
into
pop
cli
pop
mov
inc
add
inc
add
movsl
jg
jg
insl
jno
mov
push
sub
adc
test
jp
imul
push
and
push
incl
sahf
pushf
add
xor
xchg
bound
ror
outsl
mov
adc
ljmp
mov
movsl
repnz
shrl
cmp
jb
ljmp
test
ficoml
hlt
add
das
jg
imulb
xchg
jp
sbb
ljmp
adc
ret
push
pop
repnz
cmpb
sub
cli
push
xchg
push
fwait
cmp
inc
std
ja
call
stos
or
lea
xchg
cmp
dec
fisubrs
push
adc
addr16
jbe
and
dec
movsb
nop
pop
mov
sbb
pop
loope
bnd
pop
xor
jl
add
adc
ret
push
pop
repnz
cmpb
sub
cli
push
ljmp
adc
ret
push
pop
repnz
cmpb
sub
cli
push
ret
and
push
int
outsb
aad
mov
scas
popf
sbbl
mov
dec
ljmp
push
ljmp
ss
mov
push
push
dec
pop
lret
push
rcl
or
dec
pop
sub
lods
rorl
jae
data16
leave
push
cmp
loopne
std
sub
and
pop
ljmp
mov
or
scas
cs
stos
lea
cmp
enter
scas
popa
outsb
aad
in
mov
jno
and
out
xchg
or
sub
call
adc
add
adc
xor
popf
stc
in
fisubl
data16
push
pushf
mov
dec
cmpsb
aad
pop
pop
xor
insb
add
add
mov
sub
pop
lods
inc
xchg
xlat
jle
dec
das
scas
jmp
adc
adc
inc
and
push
or
and
mov
push
cmp
popa
stos
add
das
aaa
leave
or
test
les
sbb
dec
cmp
jmp
sub
sub
sti
cmp
jbe
test
outsb
xor
mov
add
icebp
inc
cmp
mov
sbb
xchg
in
or
xchg
cmpsl
gs
pop
mov
stc
jne
andb
xor
inc
je
test
xchg
hlt
mov
int3
aad
pop
addr16
pop
cmc
pop
mov
orl
arpl
fsubrl
jbe
stos
lea
jl
jl
ja
push
movsb
dec
call
inc
mov
aad
cli
lods
and
test
xchg
int
cmp
mov
jnp
and
fimuls
out
fs
jle
out
pop
and
pop
mov
fwait
mov
fcomi
cld
movsl
pop
sub
outsb
int3
popf
loopne
scas
in
pusha
stos
adc
adc
mov
std
js
or
stos
push
ja
pop
adc
pop
dec
andl
fsubp
das
dec
sub
lea
test
aas
or
mov
out
mov
mov
mov
sub
fisubrl
hlt
sbb
push
mov
cmp
data16
imul
fstps
inc
aad
or
push
xor
movl
ja
mov
ds
adc
xchg
cmp
jbe
jno
pop
mov
inc
push
es
jae
mov
sub
add
mov
and
test
ss
cmp
jp
gs
ljmp
cmp
lahf
jns
mov
fnstcw
aad
insb
test
dec
popf
adc
mov
mov
and
mov
cmp
and
insb
pop
jno
dec
nopl
js
cmp
cmp
jle
and
push
adc
jae
mov
adc
inc
sub
or
cmp
movsl
sbb
cmp
pop
pop
inc
dec
lahf
inc
jns
fmuls
mov
adc
fists
aas
xor
aaa
sbb
push
dec
jmp
stos
pop
jg
jae
sti
lds
mov
mov
pop
and
sar
mov
movsl
adc
xor
and
mov
cmp
sahf
cmp
jno
loop
sahf
jo
decb
pop
pop
mov
jmp
loopne
or
pushf
leave
and
arpl
add
xor
xchg
dec
mov
push
jb
push
push
push
inc
xchg
inc
daa
xchg
js
maxps
xor
xchg
mov
jge
xchg
sbb
addl
test
cmpl
ja
xor
pop
xchg
xchg
mov
cmp
cmp
sub
cmp
add
jae
call
pop
sar
jnp
mov
shlb
lret
xchg
mov
mov
scas
bnd
sti
ret
popf
jmp
push
inc
jg
fdivs
xor
cs
jno
rcll
imul
lods
ja
ret
mov
js
adc
inc
outsb
pop
inc
icebp
addl
pushf
scas
xchg
xchg
pop
mov
mov
stc
fwait
push
fidivs
xorb
repz
xchg
inc
jb
ds
fimuls
jno
pusha
xchg
jo
stc
dec
std
pop
xchg
pusha
sub
jns
inc
push
lea
inc
fiaddl
ja
pop
sub
push
cli
inc
in
ljmp
inc
arpl
dec
notl
ss
inc
aad
jle
mov
fwait
loop
push
mov
loop
fimull
add
mov
inc
repz
sbb
mov
sbb
lock
inc
jmp
mov
sub
mov
nop
fwait
or
mov
mov
add
mov
cld
stc
int3
lret
pop
mov
and
mov
aaa
dec
or
loopne
dec
outsb
lods
jl
into
ljmp
pop
mov
pop
pop
in
push
sub
jne
rcrl
cmp
mov
xor
int3
add
jl
push
psubd
iret
mov
sub
mov
dec
pop
inc
in
push
ds
dec
add
shlb
xor
and
cmp
jge
xor
jle
mov
push
jb
bound
dec
xchg
push
and
jp
mov
lret
mov
je
rolb
push
stc
movsl
mov
jo
sahf
jmp
cmp
or
xchg
cwtl
pop
mov
pop
sbb
lods
into
dec
dec
dec
dec
std
dec
loopne
mov
out
lret
ret
hlt
jl
sahf
stc
lcall
inc
insb
out
mov
pop
in
arpl
in
lods
inc
sbb
dec
xor
inc
dec
mov
ds
fidivs
adcb
pop
aad
cmp
stc
daa
repz
in
ss
push
cli
clc
loope
xchg
or
xchg
jg
adc
mov
pop
imul
or
add
mov
pop
cmpsl
std
sub
aam
orl
mov
xchg
dec
js
jmp
stc
fistpl
popa
adc
pop
into
jae
cmp
sbb
mov
mov
lret
sbb
mov
mov
pop
mov
sub
rolb
xlat
mov
ret
jmp
arpl
xchg
pop
pop
in
inc
jno
mov
loope
adc
std
sbb
lret
adc
push
stos
loopne
sub
insl
mov
out
jns
repz
push
jmp
cmp
and
lock
ljmp
add
mov
xor
lret
xor
repz
pop
je
jmp
mov
scas
stos
ljmp
mov
fs
movb
ret
cmp
lods
leave
leave
roll
ret
jmp
adc
dec
cli
jmp
xor
inc
add
lds
cmp
dec
daa
mov
std
sti
add
dec
xchg
loop
jg
mov
adc
shll
mov
cmp
cmp
sbb
xchg
or
sbb
pop
rcrb
or
orb
jmp
out
mov
sbb
mov
fs
jne
cli
cltd
inc
arpl
popf
addr16
into
pop
jbe
jge
lods
xor
sarl
data16
or
jl
int3
adc
inc
pop
dec
jnp
popf
hlt
xchg
lods
sub
add
pusha
pop
sbb
or
aaa
push
rclb
add
mov
andb
push
iret
mov
push
sti
in
stos
jmp
add
push
ds
pop
addb
in
jo
imul
xchg
cltd
sahf
stc
jbe
scas
lods
ja
jg
lock
in
push
add
xchg
adc
outsl
dec
xor
ljmp
push
out
jecxz
mov
pop
mov
das
movsb
sub
or
jp
out
test
ljmp
push
sti
daa
pop
mov
pop
pusha
adc
inc
xorl
lods
out
cltd
xchg
xchg
sub
and
lcall
icebp
add
in
pop
jge
iret
hlt
std
pop
dec
pop
adc
addl
mov
out
push
xchg
cmp
pop
xchg
cmp
cmp
das
clc
jg
ret
addr16
ds
mov
fidivs
aaa
clc
and
shll
neg
ljmp
shr
loope,pn
push
ret
inc
adc
lods
mov
mov
loope
pop
lock
rolb
mov
mov
xchg
cli
or
shrb
mov
adcb
hlt
pop
shr
dec
sahf
push
fwait
dec
pop
jbe
or
cwtl
xor
mov
push
mov
cmp
movsb
sbb
cltd
call
sbb
inc
jae
fcmovne
call
test
mov
fstps
leave
movsb
add
lret
std
jnp
pop
in
cmp
dec
test
adc
jg
add
add
xchg
xchg
sbb
aas
jb
cwtl
push
cmp
adc
movsl
jp
jbe
test
and
shl
out
push
sbb
in
mov
mov
adc
pop
orb
jae
fsubs
fisttpll
mov
inc
testb
adc
scas
int
pop
jb
push
inc
mov
sbb
cmp
jns
sub
adc
sbb
mov
adcb
lret
cmp
add
xchg
out
xchg
mov
mov
pop
and
addb
bnd
dec
sahf
clc
mov
xchg
mov
add
mov
aam
and
vpslld
rorl
push
imul
pop
sub
add
cs
jb
nop
pop
xor
lds
sahf
adc
and
test
push
mov
fistpl
movsb
iret
jle
dec
jns
cld
inc
fisttps
add
in
and
dec
mov
add
in
cmpsb
push
adc
ljmp
jmp
xorb
xchg
fdivr
inc
pop
out
mov
bound
jnp
out
mov
and
jge
loopne
sbb
loop
ljmp
je
in
lock
jbe
mov
add
mov
lds
lods
sbb
outsl
push
xchg
sbb
pop
jo
push
xor
loopne
mov
dec
test
mov
fisubrs
inc
out
ds
jmp
insb
stos
and
mov
test
je
add
pop
pop
aaa
fsubs
dec
mov
fldl
jl
outsl
push
mov
jns
sti
test
test
inc
add
mov
mov
hlt
test
lret
sbbl
mov
imul
cmp
daa
and
lahf
inc
test
scas
scas
pop
inc
daa
shrb
add
cmpb
inc
sub
cmc
imul
dec
cmp
fsubp
jp
dec
xchg
scas
push
data16
fs
outsb
cmp
mov
ds
jge
in
cmp
sub
ljmp
pop
call
ss
movsb
xchg
addl
negl
or
sub
pop
stos
jge
cld
sbb
imul
push
icebp
and
sub
pop
sahf
adc
add
std
std
js
test
mov
and
xor
push
subb
xchg
sti
clc
push
jecxz
incl
fwait
popa
or
mov
fldt
adc
insl
mov
push
daa
stc
jp
lcall
or
out
pushf
aam
push
bound
shlb
fdivl
movsl
and
cmp
xchg
shl
mov
es
lret
movsb
cmp
es
xchg
xchg
pop
add
flds
aam
es
cs
fs
pop
pop
xor
out
pushl
sub
jnp
xor
pop
pop
fcmovu
and
out
shrb
in
pop
xorb
ss
add
mov
shrl
hlt
rcr
addr16
shll
xor
push
pop
sbb
or
in
dec
xchg
jno
fdivl
cmp
mov
bound
pushf
mov
fnsave
adc
imul
shrb
pop
xchg
movsb
ss
mov
pop
xchg
sub
and
lahf
movsl
cmp
lods
jl
aad
pop
pop
int3
xchg
mov
pop
inc
xor
loope
fwait
int3
fadds
call
ljmp
push
stos
push
les
fidivrl
shrl
rolb
ss
mov
jle
adcl
fwait
or
int
sbb
popf
insb
das
pusha
push
inc
dec
out
pop
jl
imul
jmp
cmc
mov
dec
daa
out
mov
cltd
push
outsb
pop
jle
adcb
inc
decb
or
add
xor
stc
rolb
push
sahf
jp
loope
jecxz
mov
push
std
dec
out
dec
mov
mov
adc
xchg
xchg
scas
gs
jle
mov
push
imul
xchg
adc
scas
dec
aam
loope
fnstenv
scas
adc
dec
sbb
mov
push
and
test
xor
jmp
add
pop
xor
fwait
sbb
je
test
xor
subb
std
xor
sbb
inc
mov
mov
fwait
or
or
pop
aaa
pop
bound
sbb
mov
mov
test
in
jmp
cli
es
lret
sti
mov
lock
aam
pop
cmpl
mov
pand
inc
rcrl
mov
inc
movsl
cmpsb
es
cwtl
cltd
push
fisubs
mov
and
fstl
aad
xchg
int3
cmp
adc
nop
push
inc
shl
inc
in
push
mov
push
fcoml
into
cltd
add
inc
mov
push
cmp
les
fisubl
mov
sahf
pop
int3
fildl
insb
andb
lock
clc
jb
les
loope
aaa
aad
dec
cmp
je
mov
sbb
pop
enter
xchg
push
loopne
enter
or
cs
dec
pop
fcoms
push
or
lret
mov
dec
cmpsb
add
mov
push
and
iret
push
fld
pop
pop
jae
jae
pop
dec
jb
cmp
sbb
jb
xchg
dec
pop
ret
dec
jb
dec
xor
jle
add
xchg
div
sbb
mov
jl
mov
dec
xlat
mov
jmp
xor
jns
andb
jne
je
cmpl
push
inc
daa
pop
sbb
sub
sbb
push
and
dec
dec
aam
push
mov
push
int3
lods
xchg
cmpsl
jmp
cltd
xchg
sbb
popf
orb
jecxz
sbb
push
push
pusha
or
xor
test
pop
gs
iret
mov
imul
dec
or
lods
lods
lea
sbb
jmp
ss
cmpb
push
add
jp
out
pop
sti
out
popl
cs
lcall
and
aas
jns
ss
fildll
dec
hlt
mov
xor
pop
pop
jo
mov
fstps
scas
ss
push
lods
and
add
mov
cmpsl
nop
lret
or
pop
pop
inc
fists
push
arpl
xor
insl
in
add
sbb
xchg
lret
and
jnp
hlt
sub
pushf
loopne
adc
mov
or
mov
pop
sbb
out
mov
stos
pop
fnstcw
cmpsl
and
into
mov
insl
inc
sub
inc
pop
mov
inc
popf
aam
add
xchg
mov
out
outsl
sbb
mov
jo
enter
jnp
sarl
mov
icebp
insl
add
jg
dec
xor
push
push
std
shlb
sbbl
add
pop
fcmovu
push
out
and
out
dec
xchg
test
mov
rcl
ror
mov
lods
dec
movsl
xor
pop
rcll
leave
or
dec
add
xor
sub
inc
iret
data16
cmp
bound
jns
ret
sbb
pusha
dec
test
sub
testl
inc
inc
mov
xorl
gs
outsl
insb
add
cmc
pop
mov
add
push
inc
std
mov
pop
rcl
adc
shrb
fs
lahf
dec
aaa
cmpsl
imul
sbb
xor
movsl
push
add
sti
out
sub
inc
sbb
sub
lock
aaa
scas
movsb
sbb
add
lret
jp
push
xor
cli
inc
push
ffree
xor
or
jns
add
popl
and
cmp
jae
test
xchg
xor
fsts
push
or
fadd
icebp
xor
repz
sbb
idiv
dec
test
test
xor
jecxz
xchg
jmp
cs
inc
mov
sbb
lds
popf
inc
pop
inc
mov
inc
mulb
jns
in
adc
pop
mov
mov
xchg
loopne
xchg
pop
push
es
faddl
lret
jns
insl
sub
adc
lcall
pop
jns,pn
sbbl
add
mov
jle
xchg
rol
addl
dec
aam
repz
sbb
loop
cmc
cwtl
int
leave
mov
sti
popa
add
adc
call
outsl
xchg
pop
loope
insb
in
scas
add
xchg
test
and
imul
push
cmp
pusha
imul
add
mov
pop
cmp
iret
push
in
loopne
lods
dec
jns
jmp
adc
inc
into
imul
jge
sbb
cmp
imul
mov
iret
cld
int3
lret
mov
and
mov
adc
mov
mov
push
jge
cmc
and
jne
in
int3
or
xlat
insl
call
pop
lock
dec
and
jge
scas
movsb
sahf
add
add
les
mov
push
ret
stos
aas
jge
dec
lea
aad
fistpll
push
stos
in
insl
cmpsb
fsts
dec
dec
sbb
rcrl
shrb
jp
ss
pushf
xchg
mov
ficompl
sub
jge
lcall
jo
cltd
and
fwait
in
jae
cmp
adc
adcl
daa
dec
xor
dec
push
pop
sahf
push
in
jle
sub
movsl
andb
xlat
xlat
mov
push
xchg
fistl
sub
sbb
and
jne
fnstsw
adc
cmp
daa
repnz
popa
push
lods
scas
test
cs
lcall
negl
push
adc
in
fs
push
xchg
push
cmp
arpl
test
jle
xor
aas
fisubs
fcoms
fcmove
ljmp
lds
xor
ret
jns
push
test
enter
pop
mov
enter
fisubl
add
sub
data16
dec
and
lds
insb
xlat
jns
in
pop
fptan
fisubl
in
mov
lahf
orl
adc
xchg
retw
mov
addr16
jb
cli
mov
outsl
leave
shlb
cmp
xor
jae
pop
mov
sbb
call
xor
fnstcw
jo
add
add
or
arpl
adc
test
inc
mov
data16
sub
hlt
arpl
jae
pop
jl
dec
cmp
sbb
popa
std
mov
cmpsl
jbe
cwtl
add
lds
in
jecxz
sbb
stos
clc
jl
test
fbstp
push
mov
es
orl
mov
sbb
sti
pop
loope
push
push
int3
or
cmpsl
out
out
fs
imulb
mov
add
inc
enter
or
inc
mov
add
cmp
cmp
ss
mov
scas
sub
lret
popa
aam
test
lahf
rcr
xlat
in
ret
jmp
lea
lods
cmp
pop
movsb
adc
ret
cmp
jg
jb
and
ss
push
xchg
rcrb
gs
jo
sbb
push
lods
lcall
sub
lret
mov
mov
mov
pop
or
xchg
data16
lods
sub
sarl
sbb
jmp
mov
or
jnp
or
mov
mov
insb
repnz
rcll
xchg
push
mov
stc
cltd
imul
push
daa
cmc
pop
lods
sub
push
and
daa
pop
xchg
cmc
push
inc
push
lds
hlt
or
xlat
in
adc
ret
and
ret
rcll
xchg
add
xchg
dec
dec
sbb
les
sbb
in
and
or
adc
daa
movsl
ds
or
dec
mov
in
aad
js
sbb
cmp
cmpsl
push
iret
dec
pop
insb
bound
test
sub
and
scas
ret
mov
adc
cmp
aas
clc
js
mov
movsb
addb
movb
mulb
mov
ds
adc
add
jg
mov
mov
push
inc
mov
jmp
jecxz
ljmp
lea
fwait
xchg
push
cld
jns
sub
jo
cmp
cli
sti
sbb
fwait
gs
sbb
inc
sub
sub
insb
cwtl
loop
iret
pop
shlb
xchg
add
in
pop
bound
loopne
xchg
and
add
lods
lcall
xor
mov
sti
out
imul
mov
imul
ffreep
jno
xlat
cmp
jmp
bound
scas
ds
ja
adc
push
icebp
inc
adc
sub
lea
mov
xrelease
mov
pop
aad
jno
mov
call
lret
adc
ret
push
pop
repnz
cmpb
sub
cli
push
ljmp
adc
ret
push
pop
repnz
cmpb
sub
cli
push
ljmp
adc
ret
push
pop
repnz
cmpb
sub
cli
push
ljmp
adc
ret
rorb
cmp
pop
in
cmc
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
outsb
insb
inc
push
push
mov
lock
inc
cld
mov
add
add
add
faddl
inc
add
nop
add
add
add
or
or
dec
add
add
xlat
add
lea
xchg
add
outsl
add
mov
incb
pop
add
add
test
lea
push
add
add
add
add
pop
add
movsl
add
cmp
pop
add
jae
xor
add
add
add
pop
add
or
push
ja
add
inc
add
add
pop
add
add
sub
jae
push
add
add
add
dec
add
add
add
add
sub
add
add
add
add
jno
xlat
add
jle
dec
add
inc
add
add
add
add
add
add
add
add
add
out
lods
add
add
and
and
and
push
add
add
add
add
add
add
add
add
add
add
ds
add
add
incb
inc
add
daa
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
popf
add
add
sub
and
xor
add
add
xlat
add
add
add
inc
add
add
cs
add
add
add
add
add
add
add
cmpsl
add
and
popf
add
dec
add
add
or
xchg
add
add
add
xchg
add
add
roll
add
add
imul
in
add
add
xor
add
xchg
jb
cmp
nop
add
add
add
dec
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int
sbb
mov
add
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
movl
pop
add
add
in
add
add
xor
pop
add
and
xor
add
add
add
add
xlat
add
add
add
int
ja
icebp
add
mov
sbb
xor
dec
add
lock
add
movl
add
test
addb
add
add
das
add
add
test
xchg
cmp
filds
pop
add
add
sbb
popf
add
add
add
and
add
add
stos
add
cmpsl
add
add
add
add
add
add
add
add
sub
dec
add
mov
bound
sub
outsb
add
push
add
add
add
jle
insl
add
and
adc
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
mov
push
add
add
add
cmp
cltd
add
add
add
add
add
out
xchg
fsubrl
arpl
sub
and
popf
adcl
ljmp
fwait
or
sub
ss
insl
add
sbbb
mov
cmp
fcomp
mov
rcl
sub
jae
decl
fcmovu
add
ret
lods
adc
inc
pop
jle
orl
or
adc
add
cmp
sbb
pop
enter
gs
sbb
fwait
or
test
or
push
sub
addl
mov
addl
mov
mov
or
xchg
popf
bound
repz
xchg
pop
or
jb
sahf
push
mulb
sub
ror
cmp
pusha
cld
cmc
mov
test
ljmp
sub
cmp
in
inc
jmp
orl
imul
mov
and
cmpsb
mov
sbb
fldln2
sbbl
pop
into
push
push
lds
outsb
arpl
leave
sarb
mov
ficoms
push
mov
inc
es
cs
jmp
ret
mov
ds
mov
xor
das
imul
add
push
jno
aad
das
inc
pop
or
mov
push
data16
pop
pusha
popa
jp
pop
mov
and
and
aas
cmp
dec
mov
shl
aad
sub
sahf
cmpsl
mov
jbe
pop
rorl
outsl
addr16
in
adc
ficomps
adc
pop
mov
std
ret
out
or
fwait
dec
push
pop
and
ljmp
inc
sub
sub
dec
adc
daa
sub
jb
or
cmp
sbb
leave
popa
mov
popa
inc
xchg
movsl
adcb
add
or
fs
pop
stos
mov
pop
jno
adc
mov
mov
pop
into
push
frstpm(287
inc
aas
fildll
inc
and
insb
cmpsl
xchg
frstor
bound
pop
mov
add
sarl
int3
pop
lock
outsb
mov
dec
mov
inc
dec
mov
lock
and
xchg
mov
int3
jp
leave
jo
mov
cmp
xchg
ja
or
cmpsb
jmp
pusha
data16
ret
mov
gs
ret
push
mov
xor
xor
icebp
lods
pop
adc
ds
mov
loopne
out
jecxz
dec
sete
fstps
jge
cmc
test
and
add
lock
sbb
test
mov
pop
add
enter
sbb
pushf
mov
inc
pop
das
rorb
cld
in
rcrb
movsl
push
xor
clc
roll
mov
ja
fnstenv
outsb
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
