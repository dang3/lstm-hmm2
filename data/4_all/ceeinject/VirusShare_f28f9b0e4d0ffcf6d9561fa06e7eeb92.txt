mov
call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
imul
gs
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
pop
xchg
insl
mov
jecxz
xchg
addl
inc
daa
bound
inc
out
xor
xchg
rolb
loop
xchg
movl
push
jp
bound
inc
add
and
add
push
lret
out
pop
push
pop
popa
push
adc
xor
cs
inc
or
xchg
xchg
pop
popf
out
or
aam
xchg
flds
pop
lret
and
in
imul
xchg
sbb
jge
xchg
pop
bound
stos
xor
mov
xchg
sarl
jnp
inc
xchg
stc
pop
push
push
push
popa
jae
pushf
jmp
out
in
rolb
loop
xchg
mov
jb
das
pop
xlat
shll
pop
adc
addr16
pop
push
js
in
mov
aas
mov
out
jg
jb
addr16
daa
xchg
add
das
pop
repnz
cwtl
scas
outsl
sub
and
aaa
fisttpll
jno
ret
call
movsb
stos
or
jp
inc
jbe
dec
enter
mov
cmpsl
loop
xchg
movl
aaa
jo
pop
push
cs
in
ja
addr16
rol
lods
fistpl
mov
in
adc
add
push
or
inc
adc
xchg
les
shlb
inc
xor
dec
and
sbb
xor
daa
push
js
loope
test
mov
mov
mov
aaa
jb
bound
inc
add
and
ret
cmpsl
loop
xchg
movl
aaa
jb
bound
inc
add
and
xchg
cmp
int3
mov
sbb
jp
push
hlt
adc
xchg
cmp
inc
loopne
js
scas
aam
jae
push
dec
bound
jns
int
jno
sbb
jl
pop
and
jae
push
adc
ds
jnp
pop
mov
sbb
dec
xchg
jb
mov
push
dec
mov
mov
push
test
dec
sbb
sar
push
pop
adc
out
jmp
stos
pop
inc
pop
inc
mov
inc
or
fidivl
xor
xor
add
add
mov
push
sti
lock
push
dec
jp
jg,pt
pop
outsl
jbe
jl
test
test
cmc
jmp
icebp
and
dec
in
and
test
sub
push
cmpsl
push
out
in
loop
daa
and
addb
js
cmp
das
fs
mov
xor
and
mov
testb
lcall
aaa
mov
xor
fdivrs
out
fmuls
hlt
mov
hlt
lahf
mov
sahf
orb
inc
and
cld
cmp
mov
pop
in
pop
adc
push
add
xor
sbb
mov
ss
imul
mov
and
mov
jns
mov
jmp
sbb
adc
rol
fisttps
testb
in
nop
aaa
bound
or
and
or
cli
hlt
fcoms
dec
xchg
gs
movsl
mov
push
xchg
test
and
dec
push
cmc
cmp
push
or
mov
into
adc
cmc
push
jae
dec
fs
and
push
mov
shlb
test
scas
sbb
sbb
adc
inc
xor
sub
dec
inc
cmpl
int
movsl
sbb
adc
mov
addr16
fnsave
and
pop
add
out
sub
xchg
xchg
sti
jno
repnz
sbb
int3
push
shlb
leave
sbb
call
pusha
dec
and
leave
movsl
rcr
notb
ret
dec
cli
jmp
jp
dec
cmp
xor
xchg
sbb
stos
pushw
popf
xor
pop
inc
dec
outsb
lcall
xor
js
xor
or
push
inc
icebp
jnp
pop
test
pop
sbb
xchg
xor
mov
add
fisubrl
jbe
and
pop
out
add
enter
push
and
and
fs
mov
test
icebp
aam
and
jb
mov
adc
outsl
js
adc
sbb
out
lods
cwtl
jns
imul
lods
cmp
addr16
rcrb
push
pop
jg
jnp
or
js
icebp
xor
notb
mov
or
pop
in
dec
adc
jge
das
fwait
xorl
mov
repnz
nop
push
add
icebp
aad
sbb
cmp
loopne
pusha
rcr
sbb
or
cmc
and
sub
sbb
jmp
lret
xchg
push
shll
adc
ret
imul
stc
sar
or
cmp
cmp
testb
adc
xchg
cmpsb
lret
lret
rclb
sarw
and
sarb
xor
ljmp
cmp
mov
sbb
outsb
dec
dec
cmpb
sbb
mov
sbb
inc
mov
jmp
loop
adc
pop
and
loope
les
pop
sbb
movsl
push
je
mov
js
cmp
adc
xor
push
xor
fidivrs
repnz
push
dec
push
nop
enter
sti
xor
and
imul
rolb
adc
inc
pop
ss
xor
xchg
ds
sub
push
pop
addr16
pusha
push
adc
cmpsb
into
jne
xchg
cmpsl
fdivrl
mov
jbe
iret
outsl
in
sbb
scas
stc
cmpsb
loopne
dec
mov
cmp
in
mov
sahf
sub
jns
or
repz
mov
pop
stos
xchg
sbbl
sbb
in
mov
subl
pop
mov
scas
push
inc
addl
cmp
pop
jbe
sti
in
xor
pop
jg
mov
sbb
imul
cmpsl
sub
iret
lods
movl
mov
or
cmpb
or
jp
shrb
lods
jp
and
dec
xchg
cld
mov
jb
pop
bound
push
cmc
cmpsl
dec
pop
es
enter
scas
push
lock
push
mov
in
lock
shr
testb
hlt
out
adc
repz
movsl
outsl
aam
xchg
std
movsl
jbe
fildll
pop
xchg
shlb
xor
aas
outsb
ret
mov
pop
jae,pn
push
fwait
inc
lds
fstps
loope
jge
ret
hlt
shll
cmp
mov
daa
adc
pop
insl
mov
sbb
fistpl
fs
mov
cmpsl
pop
sbbb
jle
loop
testb
sub
je
call
popf
cmp
jl
adc
negl
inc
add
fs
fs
add
rorb
push
icebp
lea
add
call
cli
adc
mov
cltd
xchg
test
mov
mov
mov
and
push
out
add
dec
inc
jmp
lods
arpl
mov
loope
xchg
mov
adc
test
cmp
mov
xchg
repnz
mov
inc
enter
dec
jle
adc
test
mov
pop
popf
stos
call
sbb
push
push
fildll
xorb
push
push
xchg
ret
xor
mov
es
shrb
lret
movsb
cld
nop
or
inc
fadds
jns
je
push
cli
mov
out
lret
xchg
and
adc
imul
call
movsb
pushf
adc
in
dec
adc
xchg
sbb
mov
mov
int3
aas
jge
rolb
mov
jp
lea
sub
cmc
fiaddl
inc
popw
jo
out
sbb
shrl
ljmp
imul
pop
xchg
sub
ja
inc
daa
aas
js
test
mov
mov
movsb
mov
cmpsl
out
dec
push
fwait
or
add
sbb
pushf
xchg
pop
push
in
gs
shl
pop
xchg
xor
mov
add
push
dec
cmp
xchg
pop
xor
shlb
es
dec
in
insl
int
mov
push
mov
mov
lahf
mov
ljmp
aaa
cmp
popa
or
imul
mov
loop
and
mov
cs
dec
pop
stos
pop
fisubrl
cmpsb
stos
mov
movsl
sub
add
lock
int3
fisttpl
ss
dec
cmovge
mov
dec
mov
aam
or
in
mov
jnp
hlt
xchg
mov
in
inc
cmc
xchg
adc
cmp
in
insb
cli
ljmp
pop
xor
les
sbb
mov
mov
cld
or
imul
lock
sub
repnz
and
push
cmpsl
xor
stc
das
psllw
push
je
sbb
sbb
mov
sub
pop
xchg
fsts
or
xlat
testb
leave
jno
icebp
sub
pop
push
xor
adc
adc
adc
decl
jle
dec
and
sti
shlb
dec
movsl
push
cmp
sti
adc
mov
lret
jne
xchg
mov
add
sbb
sbb
leave
xchg
sub
lret
cmc
jecxz
jp
in
mov
push
roll
loop
xchg
lahf
add
pop
mov
shrl
mov
xchg
fmull
push
ret
loopne
or
push
mov
push
les
dec
inc
mov
jecxz
jg
adc
lock
cmp
arpl
movsl
addl
dec
movsb
frstor
clc
pop
mov
sbb
sub
ja
loope
dec
adc
mov
out
jae
push
jnp
dec
adc
std
push
xchg
adc
mov
test
and
jae
cmpsb
and
gs
mul
push
test
add
xor
dec
jmp
xchg
jge
or
test
insl
pop
ret
test
push
mov
in
jl
sti
push
lret
scas
jg
data16
lods
fwait
rclb
lcall
int3
mov
rorb
outsl
ret
or
pop
fs
xchg
add
and
pop
cmp
js
fs
cmp
scas
cmp
dec
ficoms
call
int3
adc
push
add
sub
jae
icebp
or
mov
pop
mov
sbb
xor
gs
or
pop
subb
jmp
arpl
xchg
in
sbb
cmp
jg
or
and
pop
ds
ja
test
aad
mov
je
dec
aaa
jns
lret
dec
imul
dec
or
jmp
cmpsb
loopne
aaa
cli
jb
mov
stos
jmp
add
add
mov
js
cmpsb
popf
jae
xchg
lret
movsb
sbb
repz
push
add
sbb
daa
inc
std
fbstp
ljmp
aad
enter
mov
mov
add
adc
or
ror
jecxz
and
and
xchg
push
xacquire
and
mov
sub
enter
or
shrb
sub
mov
insb
adc
out
hlt
fmull
mov
incl
or
push
aas
fdivp
add
mov
scas
xchg
add
mov
push
movsb
push
test
fwait
sbb
inc
pop
ficoms
cli
pop
mov
push
lea
aam
stos
out
es
and
faddl
cmp
lret
out
rcrl
out
enter
mov
or
sub
dec
orb
mov
adc
pop
sub
jae
inc
push
pop
mov
call
xchg
fcomi
addr16
outsl
lret
call
fmull
daa
out
adc
insl
lods
unpcklps
jne
shrl
jb
lods
mov
inc
stos
mov
or
or
and
cmpsb
push
cmpsb
nop
fstl
mov
loop
scas
popf
addr16
fnsave
pusha
sbb
inc
loope
lahf
decb
lock
aam
movsl
mov
test
arpl
inc
or
jbe
addr16
pop
repz
in
lahf
imul
popa
jb
push
repnz
stos
or
gs
pop
mov
fiaddl
pop
pushw
in
dec
je
andl
roll
pushf
sub
xchg
out
inc
jle
and
rol
loop
inc
imul
mov
sub
cs
xor
push
inc
mov
dec
int
push
shrl
jmp
test
add
dec
xor
filds
dec
or
pop
movsl
bswap
and
sbb
xor
or
xor
mov
or
adc
mov
add
add
int3
pop
in
loopne
mov
mov
out
pushf
mov
xlat
push
sbb
mov
adc
aad
adc
mov
es
call
jl
je
loope
fsubp
mov
fstl
stos
das
cmp
xchg
loop
fcmovnb
shr
mov
dec
jns
loop
rolb
stos
cmc
xor
xorb
mov
outsb
mov
dec
push
dec
jno
add
cli
shrl
and
dec
in
or
bound
sub
fiaddl
mov
or
rcrl
aad
test
imul
mov
lret
mov
xor
jbe
and
and
aaa
and
mov
mov
add
mov
pop
jmp
cmp
pop
test
cmp
hlt
daa
lods
xor
test
fwait
shlb
pop
es
ds
icebp
and
jecxz
push
ja
lods
enter
mov
or
rep
test
pusha
sbb
aaa
mov
scas
pop
mov
addl
leave
and
js
mov
pop
imul
repz
fs
sbb
rcr
xchg
bnd
sbb
roll
subl
ret
hlt
jb
mov
fiadds
sub
ss
mov
fildl
push
dec
test
imul
cmpsb
cli
lahf
add
xchg
add
xor
mov
jp
add
pop
sbb
mov
cmc
lock
pop
xor
sbb
adc
das
fwait
bound
sbb
or
jbe
cmpsb
lret
cmpsl
scas
push
call
and
and
mov
je
push
nop
repz
xor
fs
call
sbb
pop
adc
pop
xchg
push
ds
adc
or
and
push
lea
cmpsl
mov
cmp
sbb
repz
mov
add
out
push
pop
fcoms
fcoml
push
cmp
cwtl
xlat
outsb
cmpsl
jmp
imul
adc
jmp
call
ficoms
sub
mov
inc
mov
dec
lock
dec
fwait
jecxz
xor
mov
mov
sub
jbe
loopne
out
push
sbb
mov
adc
rorl
xchg
fmuls
sarb
testb
sahf
out
jle
mov
lret
cmp
cli
pop
out
push
pop
push
jno
inc
imul
xor
mov
stos
bound
cmp
dec
mov
mov
jno
pop
dec
sbb
lahf
cmp
leave
shr
and
jnp
inc
outsl
loop
std
pop
iret
pop
loop
ret
jmp
add
addl
xchg
pushf
mov
mov
jae
stc
testb
aad
lock
jp
add
shll
ffreep
mov
push
icebp
int3
xchg
inc
pop
xchg
lret
inc
mov
adc
mov
bound
cmc
mov
pop
and
jle
popf
dec
decl
fistpl
push
ret
icebp
xchg
or
mov
push
sub
pop
inc
pop
test
and
inc
jmp
test
mov
ret
lahf
mov
xchg
dec
pop
and
jle
cmp
dec
cli
cltd
pop
shrb
inc
mov
cmpsb
mov
flds
pop
inc
loopne
mov
push
imul
std
dec
cmp
push
xor
aaa
std
jae
and
mov
push
or
mov
insl
mov
mov
mov
sub
jo
jl
int3
enter
xchg
inc
enter
fwait
out
bound
cli
insb
mov
adc
jae
sub
push
fwait
jbe
push
adc
pop
scas
inc
out
das
into
jo
mov
sub
ljmp
lahf
sbb
ss
mov
xor
out
popf
popl
lods
xor
jecxz
inc
jl
in
mov
iret
or
fldz
push
out
cmpsl
pop
jmp
add
or
or
dec
lock
cmp
inc
sbb
mov
jge
or
add
push
jo
clc
std
adc
adc
scas
andl
adc
lcall
dec
loopne
sarb
std
mov
mov
fsts
test
cmp
mov
bound
xorl
add
arpl
lret
int3
jecxz
scas
xchg
mov
nop
ljmp
adc
mov
cmp
pop
shlb
mov
das
xor
xchg
cmpsb
icebp
jno
inc
mov
dec
adc
xlat
shr
sahf
push
arpl
mov
dec
xchg
aaa
sub
add
add
mov
push
shlb
aam
jmp
test
cmpsl
sbb
add
cmp
popa
cmp
mov
lea
mov
cmc
mov
scas
push
push
popf
jle
or
sub
cmp
stc
pop
or
lret
imul
push
cmp
loop
pop
je
mov
ss
jno
stc
mov
fbld
lods
adc
syscall
push
popa
add
mov
sbb
xchg
add
dec
and
rclb
xor
jno,pt
sbb
idivw
movsb
jnp
mov
cmp
and
hlt
push
loopew
jnp
adcb
push
gs
cs
mov
cmp
aad
push
test
out
aaa
enter
cld
xchg
testl
mov
out
outsl
adc
push
mov
arpl
enter
lds
loope
xor
test
dec
rolb
out
mov
jae,pn
xchg
fisttps
jae
test
mov
mov
sbb
xor
dec
mov
xlat
xchg
stos
leave
imul
push
push
push
dec
xlat
inc
stos
sbb
mov
push
lahf
push
aad
imul
int3
insl
js
jne
cli
lret
mull
pop
mov
jns
or
xchg
adc
cmp
fcmove
xchg
dec
je
clc
adc
addb
jg
rorl
lret
mov
dec
xchg
xchg
jne
cmpsl
mov
mov
cld
stos
xchg
std
adc
dec
bound
je
in
gs
arpl
add
push
imul
jl
dec
lret
lahf
jae
ret
jp
out
scas
push
adc
pop
jne
jns
xor
sbb
sbb
mov
add
icebp
repz
add
jo
orb
adc
je
inc
push
xor
jge
popl
pop
and
adc
mov
xor
jmp
mov
xchg
mov
mov
mov
add
mov
xchg
push
or
hlt
mov
mov
sti
dec
out
cmp
mov
mov
stc
test
insb
pop
ss
mov
push
push
loop
dec
dec
ret
push
in
cmpsb
aaa
sahf
xchg
arpl
cltd
lahf
fdivrl
fwait
pop
add
mov
enter
dec
push
pop
mov
jg
mov
pop
fdivl
ja
loopne
push
fs
lock
cwtl
out
xor
xchg
adc
cs
mov
lret
icebp
hlt
xor
sbb
xchg
jl
mov
and
fistl
pop
imul
shrb
mov
push
add
int
push
scas
outsb
imul
adc
and
aam
dec
jb
scas
dec
test
pop
sbb
fwait
dec
sti
pop
sub
jns
nop
adc
pushw
cmp
sbb
dec
fs
fwait
add
mov
add
popf
and
inc
clc
mov
lret
imul
andl
fisubrl
jbe
mov
out
enter
out
mov
ret
loopne
or
sbb
loop
sbb
cmp
sbb
and
popf
mov
sti
inc
cmp
add
dec
xchg
orb
movsl
jae
xchg
test
loope
sub
sbb
lea
lods
jae
jb
test
push
cmpsb
scas
sub
mov
pusha
or
stos
out
js
ljmp
mov
dec
mov
push
jmp
xor
mov
inc
inc
xor
enter
dec
or
movsb
sub
lock
jbe
shl
push
adc
jns
fs
cmp
push
jbe
jae
mov
push
insl
arpl
mov
adc
mov
loopne
pusha
push
mov
jae
add
or
popa
lcall
lds
sub
xor
inc
jge
pop
jne
adc
je
ljmp
js
push
js
jae
add
dec
loopne
mov
add
mov
lret
lcall
xchg
mov
pop
adc
mov
lods
mov
fwait
loopne
outsb
fcmovbe
insb
xor
mov
out
mov
shlb
fistl
xchg
divb
testl
and
cltd
jno
pop
add
sbb
fidivrl
mov
cmpsl
leave
inc
aas
pusha
imul
sbb
xchg
dec
inc
adc
sub
inc
scas
aad
push
int
les
daa
mov
cmp
mov
jbe
inc
test
cmpsb
pop
loop
jno
jg
xor
xor
xchg
pop
ret
cmp
jmp
sub
xor
loop
jecxz
ljmp
test
xchg
add
loopne
sbb
inc
js
xor
test
pop
adc
out
cmp
bound
mov
push
fsubrs
jno
mov
sub
push
mov
mov
dec
ljmp
mov
or
scas
inc
sbb
cmp
cld
sub
lds
loope
dec
mov
add
cmpsb
xchg
mov
mov
push
fsubs
mov
push
imulb
jmp
sub
jge
sbb
cmpl
mov
adc
pop
push
sar
pop
pop
lock
insl
xchg
pop
imul
cmpsb
mulb
dec
lods
sbb
lahf
xrelease
and
iret
or
clc
push
lock
mov
in
movsl
pop
or
pop
mov
mov
cmpsl
leave
call
jb
mov
jle
xor
cltd
dec
pop
ss
lcall
xchg
mov
push
mov
shl
movsb
ret
add
push
pop
popf
imul
das
je
pop
sahf
fsubs
xor
loop
xchg
movl
aaa
jb
bound
inc
add
and
ret
cmpsl
loop
xchg
movl
aaa
jb
bound
inc
add
and
int3
mov
cmpsl
out
xchg
jmp
pop
push
pop
inc
aaa
jb
imul
add
data16
xchg
xchg
mov
cmpsl
mov
divl
out
pop
lods
pop
call
and
jp
dec
cwtl
pop
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
inc
pop
push
dec
arpl
insl
mov
jl
push
sbb
ror
jecxz
repz
sbbl
lods
inc
pop
push
dec
arpl
insl
add
xor
fst
int
std
std
in
xor
lea
pop
dec
dec
jnp
imul
or
fcmovu
lock
mov
leave
cld
shl
fisubrs
cs
arpl
adc
loop
hlt
cmpsb
inc
sub
mov
xchg
popf
jnp
xor
push
lods
lds
and
call
cmpsb
xor
cli
xor
call
addl
cld
mov
pop
xor
lea
mov
lea
sbb
stos
push
push
cmp
mov
xor
dec
and
xor
jns
or
sub
ficomps
cld
xchg
or
and
jmp
pop
mov
mov
and
mov
shlb
pop
sahf
sahf
add
rcr
mov
dec
dec
arpl
insl
adc
add
fcmovu
lret
int
std
ljmp
mov
ss
jge
insl
jo
jne
outsb
jnp
jns
movsb
mov
cltd
sbb
call
sub
xor
or
add
jno
inc
and
adcb
mov
jmp
ret
aas
add
dec
xor
or
ret
fst
int
std
repz
sbbl
lods
inc
pop
push
dec
arpl
insl
add
xor
jecxz
repz
sbbl
lods
inc
pop
jl
fcoml
jno
and
xchg
push
bsr
mov
por
fnsave
xor
or
xchg
roll
cmpsw
mov
jne
sub
and
sbb
adc
inc
pop
xchg
xchg
stos
or
pop
loopne
push
push
iret
addb
xchg
fnstcw
push
arpl
aas
xor
mov
movsb
xor
dec
scas
sub
xadd
pop
sbb
sub
ss
and
cmc
call
inc
inc
stos
cltd
arpl
inc
adc
or
in
jmp
jmp
cmp
int
cmp
fnstcw
fsts
popf
or
sbb
jge
clc
jno
lcall
lods
sub
pop
push
push
test
push
adc
scas
mov
push
xchg
inc
sub
push
or
fidivrs
lcall
in
ljmp
xchg
mov
sub
std
pushf
shll
push
xor
or
leave
imul
out
loopne
cld
xchg
iret
mov
sub
push
rclb
test
data16
jo
add
into
in
sbb
ret
add
pop
push
xchg
sbb
lahf
dec
test
add
pop
sub
push
mov
in
inc
fwait
roll
pusha
pop
or
nop
pop
push
aas
imulb
arpl
add
pop
in
add
cmp
test
push
mov
mov
and
pusha
call
mov
movsl
test
xchg
push
daa
lea
mov
sbb
lahf
xchg
push
sbb
xor
cmc
jl
xchg
pop
icebp
rcrl
mov
cmpsl
cmpsb
gs
ret
enter
cli
cmp
jp
push
xchg
fcomip
or
push
cmpl
cwtl
lret
repnz
pop
stos
lds
push
mov
push
arpl
dec
jnp
xor
out
ret
pop
int
mov
sbb
and
sbb
out
add
mov
test
fimuls
pop
mov
sbb
add
mov
outsb
ja
add
dec
push
je
jne
mov
repnz
stos
paddusw
pop
ret
in
adc
addr16
sub
scas
mov
mov
or
dec
imul
dec
push
scas
lret
sub
out
adc
sahf
adc
pop
dec
ss
pop
add
lahf
push
clc
sub
push
inc
clc
in
pop
xchg
in
fistpll
jl
insb
loope
mov
repz
inc
fcmovu
aas
jo
push
mov
mov
sub
xor
jb
orb
inc
cmc
xor
jecxz
cmpsb
lods
hlt
les
inc
jnp
in
out
cld
cmpsb
or
push
push
adc
jo
out
xor
cmp
sbb
ss
jg
push
cmpsl
jne
ret
fiadds
xor
das
loop
in
adc
into
lret
mov
xor
mov
sti
in
in
fisubl
or
push
mov
mov
out
fs
lret
xchg
mov
mov
or
fcoml
jmp
push
pushf
inc
push
jecxz
jl
loope
add
ss
insb
test
cmp
data16
sub
std
int3
shlb
lea
fcompl
jbe
xor
mov
fs
insl
mov
mov
push
push
and
xchg
add
popa
sub
xchg
xchg
mov
pop
cmp
mov
ja
fnstsw
out
shl
jne
mov
adc
cmp
pop
sub
sbb
sarb
mov
enter
clc
push
cmp
or
lahf
push
xor
loop
fwait
jp
and
outsb
add
in
test
hlt
outsb
ficompl
out
and
lds
or
lods
addl
xor
push
cmc
lret
cwtl
popa
lods
sbb
es
cld
int3
add
repz
inc
cmp
mov
loop
imul
mov
call
jbe
cmp
dec
rorb
cmp
movsb
or
mov
mov
add
stos
jmp
add
or
lds
xor
push
jmp
in
cmpsl
add
cwtl
inc
das
add
add
out
jno
sbb
fmuls
adc
and
pop
int
int3
or
mov
xchg
pop
hlt
in
xlat
and
cli
xchg
push
in
adc
cwtl
xor
hlt
cmp
jne
movsb
cmp
xchg
or
leave
out
adc
or
xchg
jp
xchg
push
test
inc
hlt
add
mov
sbb
mov
xchg
sub
pop
xchg
mov
fdivrl
xor
pop
insb
lret
inc
jle
bndldx
add
insb
push
dec
xor
pusha
addb
aas
add
mov
sub
pop
push
cmp
jle
lcall
jns
sbb
sub
inc
mov
mov
inc
cld
sub
fisttpll
mov
and
push
scas
add
scas
inc
mov
mov
adc
or
fwait
sub
and
fildl
ja
ss
mov
xchg
add
pop
pop
mov
mov
mov
out
insb
shr
xor
xchg
jns
mov
mov
mov
mov
pop
xor
jp
jne
pop
sarl
popa
fwait
icebp
mov
insb
test
mov
lea
outsl
test
int
push
add
dec
js
sahf
insb
sbb
pop
leave
fsubrl
cld
jbe
dec
mov
cltd
xchg
fadds
jo
sub
ficompl
repnz
icebp
in
pop
cmp
and
ret
cmp
or
les
lcall
cli
cld
sbb
or
ds
aad
sub
into
imul
fwait
pop
jmp
testl
arpl
adc
push
cmpsl
fdivrl
dec
xchg
insl
sub
xlat
into
hlt
mov
pusha
std
negb
std
jns
mov
mov
pop
test
sub
mov
movsb
push
js
into
inc
mov
inc
mov
mov
cmpb
add
mov
in
or
bound
js
sbbb
stc
repnz
dec
ds
and
lret
sar
js
push
mov
pop
out
lds
pop
nop
shlb
in
sub
ss
scas
and
repnz
cmc
aam
push
pop
outsb
aad
mull
or
sbb
lcall
inc
enter
and
lahf
mov
leave
jecxz
or
and
dec
jmp
out
adc
pop
xchg
mov
jo
and
aaa
or
mov
inc
jg
push
stos
mov
jb
adc
pop
adc
fldl2e
cmpsb
mull
cmp
into
jo
lock
sub
in
jno
repnz
jle
push
dec
das
jae
inc
movsl
or
pushf
fildll
jecxz
fidivs
push
mov
mov
mov
and
imul
or
popf
jbe
xor
into
mov
sub
pop
bound
str
and
sub
fsubr
ds
push
cs
or
or
inc
icebp
out
push
mov
mov
mov
imul
and
aad
dec
jle
ja
lcall
fisubs
lock
jns
fwait
inc
jecxz
cmp
mov
inc
and
inc
insl
decl
lcall
shrb
pop
lahf
daa
adc
and
jecxz
mov
jno
add
mov
push
fsubs
push
cmpsl
ret
repz
call
leave
cs
leave
push
dec
mov
dec
fwait
inc
je
add
fcom
xlat
push
mov
push
jb
cmp
mov
test
mov
repnz
test
inc
stos
mov
aaa
dec
in
movsl
push
inc
lock
aad
mov
push
outsb
es
sahf
mov
orl
lret
mov
or
jp
shrl
out
push
mov
sbb
xchg
cmpsb
sahf
xchg
xorl
fildll
jmp
cld
pop
inc
ja
insb
adc
mov
jp
cs
mov
cs
enter
jg
into
jne
mov
cmp
out
push
sub
add
lods
mov
xor
ds
mov
xor
cmp
movsb
int3
inc
insl
push
icebp
outsb
pop
xor
sar
pop
pop
fstl
dec
push
inc
cld
ljmp
test
push
out
clc
shlb
push
aad
dec
cmp
arpl
fisttpl
mov
std
test
or
inc
cmpsl
je
cmp
jnp
ret
inc
push
ret
fstl
jnp
testb
ljmp
mov
inc
add
rolb
xlat
scas
leave
jne
push
mov
dec
cmovge
imul
loopne
mov
lret
out
cld
cltd
xor
shll
mov
imul
rcll
int
add
or
sbb
push
popa
add
enter
ret
hlt
add
mov
hlt
in
inc
fsubrs
sbb
mov
movsb
xchg
jnp
test
jmp
xor
xchg
jge
cmpsl
mov
adc
jns
outsb
jge
xchg
cwtl
and
sub
sbb
sub
fcoms
mov
push
pop
in
sbb
sub
lahf
loopne
shrl
or
or
aaa
lahf
adc
jae
stos
push
test
negb
rclb
stc
mov
sahf
data16
sbb
testb
sti
lahf
mov
fdiv
push
xchg
andl
repnz
test
shll
jl
mov
push
and
pop
and
hlt
aad
xor
cs
fcompl
or
sub
and
testl
lock
rorl
mov
arpl
xchg
faddp
adc
outsl
icebp
jmp
pop
mov
or
les
inc
dec
into
outsb
stos
hlt
in
inc
jnp
rcll
cli
sbb
xor
mov
fistl
in
lea
repz
inc
fsubs
inc
inc
cmp
imul
mov
lea
inc
mov
mov
mov
cmp
add
gs
fbld
push
jge
xchg
push
shl
pop
xor
sbb
sbb
cmpsb
inc
test
mov
test
or
adc
faddl
lock
mov
cmp
mov
sahf
push
call
pop
push
dec
push
xchg
scas
adc
cmp
out
jg
cmp
into
push
je
jge
pop
insw
in
jb
enter
enter
imul
lds
loop
mov
insb
xchg
scas
cwtl
mov
inc
xchg
movsb
test
fiaddl
pop
loop
mov
jle
and
fdivrl
and
loope
aad
dec
lahf
loope
or
pop
popa
push
xor
repnz
xchg
xor
dec
loopne
dec
cvtdq2ps
push
xor
subb
jae
lods
ret
mov
sbb
push
jbe
lcall
and
xchg
cmp
cmc
cmp
cmp
jae
ja
mov
lds
in
cmp
pop
mov
cltd
daa
mov
push
push
push
and
gs
shll
jle
jns
cmp
rorb
sub
jg
test
aad
je
add
lods
push
lods
push
cmpsl
testl
js
sub
jns
pop
adcb
shlb
sbb
int
lcall
ret
cmp
loop
jo
xchg
arpl
out
in
paddw
hlt
ss
push
push
loopne
cmp
nop
lods
subb
jns
or
dec
aam
cmp
push
inc
pop
addr16
pusha
std
pop
testb
loopne
sahf
sub
jmp
cmp
test
pop
movsb
cld
mov
and
and
popf
imul
int
mov
and
xor
add
fs
pop
adc
ret
sub
addr16
push
in
dec
xor
xchg
les
or
dec
arpl
and
movsl
and
test
sahf
fisubrs
std
jae
in
das
xchg
lock
and
test
sar
adc
and
sub
sbb
and
leave
mov
pop
cwtl
out
out
je
sbb
pop
popa
adc
rolb
hlt
lahf
shr
out
outsl
jne
pop
fs
cmp
adc
sbb
popf
addb
stos
shll
clc
sub
int3
xor
aam
or
sar
ror
inc
cwtl
pop
rorl
pushf
jae
in
cmpsl
arpl
mov
mov
ja
cli
dec
not
insb
or
xor
stc
dec
dec
mov
out
pop
addr16
jp
int
mov
ljmp
repz
adc
fsubs
lea
or
mov
jae
fsubs
ja
sahf
aas
jmp
outsl
scas
addr16
and
popf
xchg
push
adc
aaa
data16
jns
int
xor
cltd
add
int3
push
clc
xlat
sbb
or
add
int
sbb
lods
mov
ret
cmp
mov
in
inc
lahf
jl
and
das
arpl
mov
dec
lahf
daa
fs
sbb
movsb
jle
xchg
cmp
push
lods
xchg
and
sti
jge
dec
scas
popa
push
test
or
cmp
hlt
fistl
aaa
ret
rcrb
add
xchg
popa
pop
nop
pop
fcmovbe
mov
push
and
mov
jbe
xchg
add
xchg
test
sbb
jecxz
mov
xchg
mov
popl
je
or
jl
xor
inc
cmp
xor
cmp
sbb
jl
mov
jmp
sarb
js
sbb
pop
lods
call
add
std
inc
ret
pop
sbb
xchg
pop
and
and
popf
ficoml
sub
sbb
pop
jnp
sahf
push
inc
add
andnps
mov
mov
inc
mov
es
fidivl
outsl
test
dec
test
leave
shlb
lret
icebp
fwait
add
jb
push
cmp
std
and
sub
push
out
cmp
inc
in
xor
cmp
pop
frstor
xchg
insl
and
jno
mov
push
dec
jl
ret
jno
js
pop
bound
pop
jnp
sbb
stc
inc
mov
nop
ficomps
dec
sub
jmp
jl
xchg
add
ret
add
imul
add
movsl
jp
imul
jo
sub
or
jns
cmc
jbe
sub
scas
iret
lods
int
and
dec
aam
xchg
add
mov
push
addr16
es
aad
mov
adc
test
dec
ljmp
aad
or
sub
je
sub
sub
mov
mov
in
stos
test
int
lods
sbb
dec
and
or
xor
xchg
cmp
inc
outsb
fs
cmp
jp
cmp
sub
mov
cmp
mov
inc
mov
pushf
ljmp
clc
ret
int
daa
cmp
movsl
pop
aam
sbb
mov
fdiv
outsl
outsl
sbb
pop
out
aam
sbb
pop
push
gs
or
insl
cmp
xchg
ret
xchg
dec
mov
movsb
jb
ficoms
cwtl
xor
cmp
bound
cwtl
xchg
ljmp
add
stos
movsb
ljmp
and
ss
cmp
push
daa
ret
repnz
repnz
inc
stos
loopne
es
push
fisubs
add
mov
lock
or
es
cmpsl
xchg
leave
mov
jecxz
inc
mov
dec
xor
cmp
scas
and
nop
out
sub
or
hlt
push
out
addr16
push
je
and
dec
pushf
xchg
cmp
bound
sahf
ficoml
xor
or
das
scas
inc
ja
insb
sar
in
lcall
inc
xchg
add
sbb
popa
mov
aas
mov
icebp
test
sbb
std
leave
loope
dec
scas
mov
inc
in
cmp
mov
sub
in
loope
dec
jo
pop
testl
mov
repz
in
andl
or
inc
xchg
lods
xor
out
imul
mov
mov
lret
call
push
xchg
aad
cmp
xchg
jmp
icebp
pop
fwait
out
jp
and
jo
sub
addr16
pop
inc
jne
mov
cmpl
inc
in
lcall
xchg
and
in
mov
stc
call
xchg
xor
icebp
aam
sbb
imul
sbb
xor
inc
cld
loopne
xchg
mov
or
or
mov
scas
leave
mov
and
mov
ficoml
into
push
jne
jnp
fdivr
pop
dec
adcl
inc
testl
mov
in
aad
cmp
mov
and
mov
pop
xchg
mov
ljmp
sub
push
sbb
jbe
hlt
adc
push
fstpl
mov
xchg
in
dec
std
push
sub
pop
dec
or
shll
aas
loop
insl
cmp
rolb
dec
cmpsb
push
data16
jne
enter
clc
sub
lods
scas
or
mov
pop
sub
mov
lahf
jp,pt
jno
fadds
sbb
popf
jge
xchg
aad
mov
and
xor
out
xchg
inc
in
dec
push
xor
mov
xor
lock
jbe
fldl
xchg
pop
mov
pop
mov
jl
cmp
push
inc
leave
sub
inc
roll
fcoms
test
push
mov
jnp
mov
clc
inc
mov
or
iret
dec
shlb
test
iret
bound
cmp
mov
add
mov
out
mov
outsl
jmp
out
fcompl
xor
cltd
add
xor
lock
daa
pop
popa
jle
dec
cmp
popf
data16
mov
shrl
mov
xlat
clc
xchg
mov
iret
sbb
sub
lcall
adc
xchg
test
lea
out
cmp
enter
jnp
adc
adc
jecxz
sbb
xchg
jge
dec
sbb
pop
ud1
fistpl
jae
mov
cmpb
daa
mov
add
push
stc
arpl
add
xchg
in
sbb
jge
divb
adc
sub
xlat
outsb
push
cltd
sub
or
cmp
jge
fistps
pop
dec
push
in
out
xchg
push
sbbl
add
pop
adc
insb
lock
cmp
loop
dec
clc
out
lret
cli
bound
popf
int
mov
xchg
lods
lock
xchg
loopne
jle
pop
popf
nop
ficomps
or
pop
outsl
fxch
and
fwait
pop
jge
into
andl
leave
popf
xchg
data16
xchg
push
mov
sub
into
aaa
adc
rclb
sbb
sahf
pop
dec
fidivl
arpl
push
dec
arpl
cmp
xchg
inc
arpl
mov
mov
push
repnz
out
inc
xchg
mov
xchg
cmc
lods
test
adc
fdivp
xor
ljmp
mov
or
sub
cmp
jge
test
cmp
mov
ja
imul
pop
push
movsb
clc
cmc
xchg
fsts
push
push
fldt
int
cmp
in
test
push
fadds
insl
jl
ss
or
inc
test
aaa
inc
sub
fidivs
cmp
cwtl
push
pop
mov
add
sub
cli
mov
and
cmpsb
fsubrs
and
imul
dec
test
paddb
cmpsl
aaa
jns
dec
popf
aaa
subb
cmp
lret
jo
ret
sbb
or
mov
jnp
jb
setbe
jne
sub
aaa
in
pushf
jnp
jbe
and
jb
cmp
shlb
frstor
out
mov
imul
ds
imul
pop
fcmovu
int
jb
out
out
inc
fistpll
ljmp
xchg
mov
sub
dec
mov
push
mov
mov
aad
lods
in
test
sbb
aas
push
sub
aam
mov
sbb
cmp
sbb
js
imul
ret
out
or
sbb
cmc
icebp
pop
aad
or
lods
lods
inc
cmp
cmp
mov
rcrb
jl
hlt
pop
lods
data16
data16
sbb
xchg
iret
dec
jae
loop
xchg
add
mov
pushf
in
sbb
jle
sahf
or
mov
push
xor
imul
filds
pop
popa
or
xor
lret
divl
scas
push
div
jl
stos
and
push
rolb
jge
cli
int
cmpsb
addr16
adc
inc
jge
pop
cmp
mov
cmp
and
xlat
xor
xor
mov
scas
mov
sarb
aas
sub
cli
dec
add
push
mov
pushw
cld
xchg
xchg
adc
inc
data16
pop
and
imul
xchg
ret
mov
stos
ror
adc
push
or
imul
pop
enter
and
pop
mov
fwait
pop
sbb
insl
mov
jne
in
dec
jmp
int3
or
pop
and
inc
loop
add
add
xchg
cmpsl
mov
ja
and
pop
add
lcall
imul
pop
test
les
jg
test
ret
pop
adc
dec
xchg
fwait
dec
imul
or
ret
fst
int
std
repz
sbbl
lods
inc
pop
push
dec
arpl
insl
add
xor
jecxz
repz
sbbl
lods
inc
pop
push
dec
arpl
insl
add
xor
jecxz
repz
sbbl
lods
inc
pop
push
dec
bound
insl
add
mov
cmp
sub
dec
std
repz
dec
push
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
jno
popa
xor
inc
adc
fistl
je
fs
icebp
xchg
loope
rcll
mov
shll
popa
xor
inc
adc
arpl
arpl
inc
add
icebp
scas
loope
movsl
add
mov
mov
shll
popa
sub
inc
or
jp
imul
add
mov
out
out
lods
ret
mov
mov
and
je
stos
and
xor
sbb
mov
sbb
shrl
or
inc
sbb
movsl
sbbb
imull
roll
xorl
mov
leave
dec
outsl
call
out
push
icebp
mov
stos
insb
adc
dec
hlt
ret
inc
xchg
xor
pusha
int3
daa
cld
rolb
xor
aaa
imul
pop
jl
push
dec
jbe
cmp
ret
mov
jns
mov
add
loope
sbb
sub
mov
push
mov
pop
inc
push
sti
mov
out
inc
mov
mov
jl
insb
lret
mov
aad
xor
and
inc
adc
arpl
jae
inc
add
mov
rorl
flds
inc
xor
and
pop
popa
push
ss
in
mov
lods
not
xchg
icebp
aad
aad
jb
adc
jo
jl
arpl
adc
add
xlat
jecxz
nop
out
xchg
aam
cmc
repz
andl
xor
jae
inc
add
mov
rcll
ret
adc
push
add
xor
jae
inc
add
mov
rcll
ret
adc
ljmp
in
test
push
dec
cwtl
cmp
les
adc
xor
sbb
dec
jae
push
mov
push
aaa
mov
das
mov
clc
inc
roll
shll
and
ljmp
dec
mov
lds
ss
cli
push
or
scas
fildl
pop
lods
xchg
addb
push
dec
pop
testb
jmp
pop
sbb
jg
xor
cmpsl
int
sbb
jmp
mov
daa
dec
insb
xor
je
ljmp
jl
push
pop
mov
lret
jno
mov
repz
icebp
dec
je
les
das
test
inc
dec
push
pop
iret
sub
adcb
adc
orb
cmc
mov
push
cmpsl
mov
and
push
and
mov
push
pusha
jecxz
dec
mov
decb
push
aaa
shr
mov
and
loope
xor
in
or
cmp
xchg
subb
inc
push
inc
lods
rol
xor
xchg
add
mov
push
sub
ds
xor
pop
mov
ss
jnp
mov
mov
insl
iret
cmp
cli
int
add
dec
andl
mov
xchg
fs
les
fcoml
cs
pop
sbb
mov
in
mov
cmp
add
stc
xchg
clc
out
inc
out
outsb
jecxz
out
int
mov
and
fs
stc
mov
dec
xchg
push
push
clc
sbb
loope
popa
jne
fcomi
pop
mov
adc
enter
int
std
and
push
push
add
test
ds
and
shll
sub
dec
sub
and
les
int3
repz
getsec
dec
jmp
and
push
dec
dec
sub
xor
add
dec
sub
add
in
sbb
rcrb
and
rcl
sbb
stos
sbbl
adc
xor
pop
popa
sbb
inc
icebp
into
data16
mov
jo
aas
sub
scas
out
popf
out
repnz
and
cmpl
pop
adc
lahf
push
data16
adc
push
fwait
in
data16
inc
jno
push
inc
and
pop
sbb
jo
js
scas
shlb
mov
cmp
mov
addl
stos
pop
pop
loope
pop
mov
mov
rcrl
js
dec
stos
addr16
cltd
jp
sub
fmuls
aam
pop
jge
gs
les
pop
inc
lea
push
bound
sbb
icebp
mov
mov
push
iret
jecxz
xor
les
scas
test
shll
or
enter
aam
scas
leave
or
push
mov
pop
insl
daa
cmp
sbb
xchg
daa
jg
push
lock
push
and
dec
cmp
in
mov
testb
mov
adc
js
test
mulb
inc
daa
lods
sub
lcall
mov
pop
sbb
cmp
lods
repz
add
arpl
lahf
popf
scas
inc
popa
shll
pop
das
cmpl
sbb
mov
pop
mov
cmp
adcl
shll
js
out
mov
rclb
stos
rcrl
jo
ret
outsb
js
cltd
inc
popa
push
cmp
or
push
ds
dec
in
sub
cwtl
int
sub
push
stos
inc
cli
dec
sbb
js
or
lcall
nop
jbe
aam
jae
cs
ss
adc
mov
data16
xor
cwtl
sahf
jle
repnz
or
into
dec
jl
call
loope
mov
jp
cld
or
fistl
xchg
lds
and
inc
decb
cmpsl
dec
jp
cmp
xchg
aaa
inc
pop
imul
ret
sub
mov
je
push
mov
inc
mov
jle
leave
in
or
cld
sub
lock
push
fisubs
push
stc
mov
loope
add
add
push
dec
enter
lea
add
dec
xor
jmp
mov
sub
cmp
sbb
push
inc
xor
jl
mov
jbe
push
dec
add
sbb
fsts
pop
xor
scas
ret
jnp
in
sbb
mov
dec
jno
aaa
mov
ret
sti
rcrl
adc
push
pop
cmp
lcall
mov
cmp
test
lods
and
pop
inc
cli
xor
pop
dec
pop
adc
sbb
vcvtps2pd
int3
or
ja
sub
and
cmp
jbe
jp
ss
mov
popl
adc
xchg
das
sbbb
jmp
xlat
adc
or
mov
in
aas
pop
outsb
xor
in
std
movsb
or
xchg
cltd
mov
pop
xchg
movsl
jp
jns
lahf
in
or
pop
adc
add
mov
mov
xchg
testb
aad
dec
in
mov
mov
add
pmaxub
gs
ret
lea
pop
cmp
scas
and
and
daa
cmpsl
push
shll
fstpt
test
mov
insb
icebp
arpl
inc
js
rol
sub
xor
cmp
sbb
pushf
or
lret
scas
out
inc
inc
cs
out
pop
lods
sub
test
mov
or
or
es
movsl
mov
pop
enter
sbb
add
and
inc
repz
dec
cmpsl
pop
add
outsb
cmp
es
dec
cltd
or
jae
push
mov
push
adc
push
xor
cmc
jne
jge
inc
cmp
sub
jns
xchg
std
pop
rcll
push
adc
mov
imul
lods
dec
pop
gs
bswap
fs
xor
mov
scas
xchg
jno
cmpsl
test
movsl
xchg
pop
push
pop
adc
push
call
outsb
in
insl
rol
mov
lcall
mov
cmpsl
jg
sub
pop
adc
aam
cli
push
xor
mov
leave
test
dec
lahf
ret
push
jo
imulb
adc
data16
stos
inc
pop
mov
fimull
or
and
xchg
and
dec
out
jg
sbb
pop
rep
lret
jg
inc
mov
test
push
or
pop
push
pop
mov
mov
sbb
jo
cmp
and
pop
mov
inc
push
inc
adc
xor
add
jae
outsl
mov
fstps
fmull
scas
and
fdivs
pop
je
push
mov
xor
mov
loopne
in
pop
rcr
stos
and
xor
mov
dec
nop
dec
int3
cli
dec
pushf
lock
fldt
loopne
pop
cmp
mov
mov
mov
xor
decl
pushf
repz
rcr
out
rol
add
push
outsl
xlat
popa
aas
jp
xchg
inc
rcrb
jmp
adc
dec
jp
push
xor
sub
rol
pop
dec
inc
lret
xor
cltd
mov
mov
fwait
mov
insl
jno
cltd
repz
inc
mov
lea
std
fwait
cmp
or
pop
push
dec
out
and
pop
sub
push
pop
fldenv
push
jge
cwtl
add
jp
or
add
cs
outsb
loope
lods
dec
add
int3
stc
bound
enter
dec
popf
jo
cmpsb
subb
test
je
mov
shrl
inc
mov
scas
lret
roll
push
sbb
adc
mov
test
mov
and
xlat
and
or
mov
call
or
call
negb
jb
in
cmp
or
out
or
dec
mov
jmp
adc
mov
mov
out
imul
shrl
movsl
outsl
mov
ret
xchg
dec
mov
adc
inc
jnp
mov
sti
or
inc
sub
mov
mov
fs
stos
or
xchg
cld
mov
insb
pop
ds
pop
add
cli
jb
fists
iret
mov
mov
add
pop
pop
test
adc
sub
xchg
ss
cmc
push
stos
adc
cmpsl
nop
leave
xor
adc
popa
or
adc
add
push
insb
sti
cmpsb
push
mov
pop
ss
and
sbb
in
lods
icebp
rorb
push
ja
ljmp
dec
sti
loopne
loopne
mov
xor
les
cmpsb
add
cmc
mov
dec
and
or
pusha
out
icebp
cmp
cli
pop
add
jg
or
lret
pop
inc
xchg
mov
int3
jecxz
push
cmp
orb
inc
jo
xor
xor
or
imul
cwtl
sbb
adcl
dec
mov
jmp
inc
rcl
adc
js
fdivl
xchg
xchg
push
gs
loop
sub
jnp
rcr
push
int3
cmp
shr
addr16
imul
dec
jecxz
adc
dec
cli
stos
scas
sbb
mov
mov
iret
ret
ss
ja
pop
lahf
sub
outsb
rcl
mov
in
sbbl
and
stc
xchg
js
and
inc
adc
mov
pushf
mov
inc
mov
testb
xchg
add
or
das
xchg
imul
push
insb
push
xlat
pop
xchg
or
mov
stc
pop
or
js
adcl
mov
adcl
inc
shr
sbb
jno
push
cli
or
dec
ljmp
cwtl
out
cmp
dec
fdivrs
test
cmpsl
jp
outsb
outsb
pop
dec
ds
pop
inc
popf
lsl
das
xchg
clc
xchg
les
mov
bound
rclb
repz
lods
pop
cmp
imul
mov
rcrb
ret
je,pn
scas
lds
shrb
loop
mov
in
jmp
movsb
dec
js
inc
dec
sti
in
mov
sbb
out
test
into
or
mov
cmpsb
lock
push
xor
push
lret
scas
xor
inc
lods
cld
mov
fdivl
mov
imul
iret
mov
adc
push
ss
es
clc
out
adc
in
jl
sarb
dec
pop
subl
test
xlat
lds
jns
dec
xor
mov
addr16
cmp
mov
cmc
sti
jns
nop
mov
and
adc
je
push
mov
pop
inc
pop
jecxz
movsb
mov
iret
nop
jmp
ds
mov
jge
insb
push
out
push
imul
hlt
ror
loop
xchg
out
scas
cmp
dec
cli
jne
insb
mov
and
cmp
xchg
mov
adc
fs
push
jbe
aad
test
dec
dec
push
adc
push
xchg
mov
lea
cmpsb
call
aas
and
movsl
shr
gs
sbb
dec
in
loopne
inc
test
mov
pop
std
push
mov
pop
inc
insl
xor
sarl
mov
push
jnp
adc
jae
outsb
pop
jl
cli
lods
out
sbb
or
and
pop
movsl
popf
sub
sbb
adc
into
test
and
fwait
cmp
arpl
stos
out
xchg
mov
nopl
aad
jae
pop
mov
mov
fiadds
mov
ds
mov
adc
xlat
xchg
movsl
fs
jbe
pop
bnd
adc
fistps
push
out
loopne
sbb
icebp
cwtl
sbb
pop
ja
jne
and
sub
mov
enter
movsl
test
jmp
aam
out
subl
mov
xchg
xor
sub
cmp
insb
add
enter
adc
in
mov
xchg
das
loope
rcl
dec
adc
mov
fincstp
adc
xchg
test
out
stc
mov
xchg
mov
push
jecxz
pop
mov
cmp
and
mov
pushf
cmp
add
mov
out
mov
dec
push
outsb
push
cmp
jo
mov
xor
dec
outsl
cmp
dec
in
sbb
push
push
in
in
mov
incl
push
lahf
adc
sbb
pop
shl
inc
sub
pop
in
or
daa
cltd
inc
cmp
or
cmp
cmp
std
ja
fadds
push
shr
or
outsl
dec
add
jno
add
jmp
ret
jecxz
add
fdivr
movsb
dec
outsb
mulb
jmp
imul
out
inc
insb
pop
lock
push
pop
fldt
fiadds
fsubs
mov
aad
add
arpl
adc
add
insb
cmp
pop
adc
cmp
ljmp
sahf
rcrl
stos
outsb
dec
jnp
inc
xchg
or
sub
xchg
loop
cmp
stos
mov
movsl
addr16
mov
xlat
into
xor
adc
out
jl
mov
push
pop
scas
imul
imul
mov
pop
fdivrl
cmpsl
sbb
movsb
push
mov
pop
adc
mov
test
scas
sbb
sarb
add
jge
shrl
mov
xor
scas
cmpsb
insb
insl
pushf
and
sahf
jmp
out
int
mov
sbb
psrlw
data16
loopne
aaa
hlt
or
cmp
pop
sbbb
nop
pop
inc
push
lods
dec
adc
xor
repz
adc
rcrb
outsl
inc
inc
pop
lcall
adc
inc
pop
addb
xchg
stos
addr16
dec
sub
lret
jb
mov
xchg
adc
adc
mov
push
ljmp
mov
mov
pop
fwait
push
leave
push
adc
inc
sub
sub
loop
cmp
cmp
xor
mov
clc
pop
or
jp
push
stos
lret
je
inc
push
shr
cmpsl
clc
js
sub
and
lcall
js
mov
pop
push
cmp
popf
pop
leave
out
out
aad
cwtl
xor
fistpll
jb
sbb
fwait
aam
shll
lahf
dec
xchg
pop
mov
js
jne
ss
outsl
xchg
movsw
dec
mov
in
rorl
jle
loope
jge
jmp
push
adc
pop
in
dec
addb
mov
enter
xchg
inc
cmp
sbb
pop
cmp
dec
mov
pusha
sbb
mov
xlat
jg
or
ja
jge
test
out
imul
iret
test
daa
jmp
imul
push
cld
ljmp
mov
dec
fsubrp
cmp
je
scas
mov
sahf
add
push
xor
mov
add
sbb
sti
push
or
inc
mov
mov
pop
xchg
cmc
dec
add
jbe
pop
lock
shlb
mov
pop
add
and
hlt
jecxz
mov
mov
icebp
cmpb
jb
mov
mov
cmp
add
hlt
xchg
cmp
push
mov
aad
leave
add
mov
mov
and
stos
jmp
or
inc
lods
push
inc
iret
mov
cmpsl
ret
mov
pop
mov
push
pop
loope
popa
test
or
insl
fwait
hlt
xchg
adc
in
xor
xchg
jnp
ret
repz
cmp
add
pop
into
punpcklbw
or
push
xor
sbb
cmp
mov
nop
sbb
pop
cmp
xchg
mov
and
int3
arpl
sahf
pop
inc
push
mov
xchg
out
cmp
orb
bound
shrb
mov
dec
pop
mov
mov
xor
std
out
cmp
in
jge
outsb
xor
in
outsb
add
push
addb
gs
or
mov
mov
std
sbb
int
xor
imul
sub
sbb
mov
rorl
test
dec
inc
neg
in
and
fildl
movsb
sbb
leave
aas
daa
xor
emms
aas
testb
int3
les
add
add
and
pushf
mov
mov
adc
insb
int3
xchg
cmp
cmp
data16
les
ret
push
cmp
xchg
cmp
fwait
inc
sahf
push
jb
popf
xchg
adc
cltd
jns
push
push
push
jnp
int3
mov
add
sub
mov
test
loopne
push
iret
mov
pop
cltd
jge
imulb
inc
in
es
shrb
sbb
shlb
aad
ret
inc
movsw
dec
and
mov
sbb
mov
mov
jo
pop
inc
mov
mov
xchg
adc
push
inc
inc
or
test
or
mov
sti
mov
cmp
push
push
pop
mov
push
jle
cmp
pop
dec
add
add
mov
dec
daa
inc
imul
adc
push
xchg
repnz
popf
mov
aas
jmpw
xor
dec
sub
add
jbe
ret
loopne
xlat
jg
imul
out
iret
sbb
mov
xchg
negb
push
cmp
sub
mov
mov
cli
adcb
sbb
addb
insb
frstor
or
cltd
out
lahf
jle
std
mov
data16
cmpb
dec
cli
mov
jns
clc
push
jp
stc
push
in
pop
add
adc
cwtl
cmp
dec
pop
sarl
add
rorb
imul
cmpsb
xor
and
pop
xlat
inc
cmc
lret
and
loope
push
data16
push
jmp
stc
push
loope
pop
int3
jl
fcmovne
arpl
std
cmpsb
std
pusha
push
add
xchg
jo
mov
or
addps
add
in
pop
popa
xchg
mov
sbb
jge
push
xchg
pusha
cmp
sub
sub
insb
icebp
stos
jmp
test
addl
out
in
into
or
or
loopne
rorb
pop
sub
cmpb
xchg
mov
sub
pop
outsb
adc
stc
insb
lcall
scas
in
xchg
scas
cmp
je
inc
repnz
lret
ret
jp
dec
enter
fwait
sub
sbb
pusha
rclb
ficomps
mov
push
movsb
ja
bound
mov
cmp
mov
pop
sub
push
adc
dec
nop
out
pusha
mov
ret
fdivp
xchg
jl
jo
stos
ja
sub
sbb
gs
add
push
pop
jmp
push
fcoml
fildl
add
ds
lret
pushaw
cs
hlt
stc
or
adc
fildl
cwtl
push
mov
add
ljmp
adc
ss
in
lret
shll
jno
xchg
and
jne
lods
in
ret
addr16
xor
dec
loop
int3
mov
push
add
pusha
lahf
sbb
sub
icebp
xor
cli
icebp
ja
adc
cli
popf
cmp
mov
call
mov
jle
mov
mov
pop
pop
sub
cmp
xchg
js
lret
or
repz
jns
arpl
lds
mov
dec
mov
jno
mov
dec
notl
lcall
in
imul
pop
adc
jo
mov
sub
shll
inc
jp
pusha
shl
pop
xchg
pop
xor
mov
mov
repz
incb
pop
push
cmp
mov
push
imul
inc
cmp
pop
mov
and
jp
lret
bound
push
bound
and
adc
imul
mov
lods
push
jl
icebp
sub
jg
sbb
push
mov
out
mov
or
inc
dec
out
fiaddl
cli
std
sbb
lcall
adc
test
aas
mov
test
adc
cli
inc
mov
sub
int
lds
mov
inc
out
or
push
js
jl
jae
and
cwtl
out
sbb
test
push
into
and
faddp
fcmovnb
shll
mov
js
jnp
xchg
imul
popa
mov
xchg
pusha
rcr
push
and
push
cmpl
push
xor
mov
inc
ja
jmp
push
mov
dec
mov
aas
sarl
xlat
iret
in
pushf
lret
mov
push
daa
nop
adc
mov
or
decb
mov
sarl
dec
fdivr
aam
imul
imul
jg
in
inc
push
inc
leave
hlt
xlat
xchg
cmp
mov
jo
in
mov
dec
xor
inc
sub
mov
sub
jb
or
xchg
shll
mov
cmpsb
push
imul
fwait
cltd
ds
in
call
out
mov
arpl
je
movsl
push
pop
pop
add
cmp
imul
dec
xor
mov
jne
and
jae
clc
and
dec
ja
cmp
int
mov
call
pop
mov
sbb
jnp
inc
mov
les
enter
shl
cmp
fsubrp
jmp
out
or
push
mov
adc
rorl
pop
xorb
ret
sub
push
aaa
shl
nop
lcall
push
pushf
add
lods
insw
in
or
jno
cmc
popf
push
aam
fistpl
mov
push
push
xlat
sub
dec
jbe
das
subb
aaa
les
test
stos
bound
lods
mov
jbe
xchg
int
xchg
rorl
sub
xchg
push
add
inc
sahf
add
push
mov
push
jo
jb
pop
jl
mov
imul
cld
cmpsb
xor
add
xor
jae
inc
add
mov
rcll
ret
adc
push
add
xor
jae
inc
add
mov
rcll
ret
adc
push
add
xor
jae
inc
add
mov
rcll
movl
adc
arpl
jae
inc
add
jnp
shl
imul
outsb
mov
cwtl
sbb
dec
stos
jns
pop
bnd
aaa
sbb
dec
enter
stc
js
mov
cwtl
sbb
dec
fcomps
imul
cltd
sub
pop
fldcw
js
mov
cwtl
sbb
dec
fcomps
imul
mov
dec
aaa
test
inc
cld
imul
push
jl
or
mov
inc
sbb
cmp
hlt
inc
inc
mov
pop
fcom
push
loope
repz
cltd
popf
data16
push
lods
mov
pop
cmpb
cmc
test
sbb
incb
lods
xchg
arpl
dec
cwtl
sub
and
xor
ret
outsl
out
dec
int
insl
popa
clc
cltd
test
data16
outsl
push
cmp
fstps
cmp
pushf
dec
stc
ja
js
dec
inc
xor
ret
imul
jns
jbe
mov
lcall
jne
packssdw
or
sub
gs
lock
mov
popf
xlat
fcoml
inc
sbb
aad
sub
or
cmp
dec
fcomps
imul
cltd
sub
pop
fldcw
js
leave
or
pusha
shrl
enter
mov
or
sub
inc
leave
dec
mov
ds
in
gs
jne
popa
aam
enter
nop
ds
push
insl
in
dec
jmp
into
cmp
dec
lods
ss
add
or
dec
dec
aam
test
pop
call
mov
cltd
sub
pop
fldcw
js
mov
cwtl
sbb
dec
fcomps
imul
cltd
sub
pop
fldcw
js
mov
mov
ss
setge
sub
int3
stos
sub
hlt
sbb
ja
sbb
pop
out
adc
dec
push
pop
sub
cmpsb
js
add
shr
xor
mov
pop
sub
sub
in
xlat
jg
mov
jecxz
sub
popa
mov
fnstcw
rorl
in
adc
dec
sbb
sbb
add
lds
insb
fisttpl
mov
jo
subl
add
jge
inc
imul
ret
dec
lret
pop
jno
dec
add
sub
and
add
dec
sbb
sti
jae
test
dec
sbb
or
cltd
stos
or
sub
ficompl
add
bound
xchg
mov
sbb
outsl
pop
pushf
jns
stos
lahf
sahf
hlt
cwtl
dec
mov
mov
add
xchg
push
mov
push
and
or
inc
xchg
add
or
in
cmpsb
shl
popa
add
cwtl
pop
mov
aaa
xchg
mov
sub
mov
inc
sahf
xor
addl
xchg
call
mov
mov
lret
inc
into
cwtl
loope
mov
mov
cmc
hlt
fdiv
adc
push
scas
add
xchg
dec
pop
or
push
inc
xor
xor
mov
out
fnsave
test
and
mov
push
sbb
fidivrs
xchg
cld
int3
outsb
sbb
repz
ret
xlat
xchg
sub
jg
sti
nop
cmp
stc
mov
pop
stc
xor
dec
fcoms
mov
mov
add
push
jae
xor
add
sbb
lret
subl
jne
sbb
mov
nop
adc
idivl
push
dec
or
adc
mov
adc
js
int3
fsubs
push
scas
or
mov
cmpsl
pop
add
stos
hlt
and
sahf
and
stc
lret
dec
clc
je
xchg
mov
push
xchg
mov
xchg
outsb
and
push
jl
test
arpl
pushf
aaa
roll
sub
mov
jnp
jl
lock
jge
mov
sbbl
pop
sub
mov
ret
sub
in
movsl
rcrl
pop
dec
ret
xor
int3
inc
imul
out
adcl
in
loopne
dec
adc
aaa
subl
in
push
adc
mov
ja
mov
jbe
lahf
xor
mov
stc
adc
jg
hlt
push
gs
mov
in
jne
mov
loop
scas
xor
sub
sub
int3
mov
jne
lret
inc
add
pop
iret
sbbb
adc
popa
dec
int3
lock
lods
out
aas
dec
dec
mov
fcos
push
and
pop
es
push
pop
in
add
push
mov
push
xchg
stos
lds
outsb
or
pop
repnz
js
cmp
in
or
jne
xchg
jmp
cmp
adc
inc
pop
in
mov
pushf
pmaxsw
and
sti
dec
std
cmp
std
test
push
xchg
stos
cmp
shrl
in
or
sub
xchg
loope
mov
mov
add
pusha
or
inc
xor
in
filds
sbbl
mov
rolb
sbb
imul
dec
cmp
int
and
in
lcall
fdivr
xchg
loop
subb
pusha
fdivr
ret
sbb
mov
mov
mov
movsb
sbb
stc
pusha
xchg
data16
cmpsb
test
popa
sti
test
xchg
cmp
and
mov
and
leave
out
mov
icebp
addl
movsl
lcall
mov
dec
lods
xor
pop
sti
sbb
xor
es
mov
cli
mov
loop
pop
jmp
jmp
pop
mov
mov
int3
jne
in
nop
aaa
arpl
clc
and
xchg
stos
and
push
clc
loope
test
cltd
lcall
es
jbe
popa
sub
sbb
cmp
movsl
push
push
cmp
jae,pn
and
add
inc
pop
loop
loop
mov
call
xchg
push
mov
inc
ja
mov
sahf
lock
cmp
cwtl
sub
mov
or
movsb
mov
bound
test
xchg
popa
jg
je
jmp
shlb
in
test
xchg
test
jae
mov
xor
jbe
inc
add
std
das
out
inc
mov
out
mov
repnz
sti
aam
iret
repz
xchg
xchg
mov
mov
xlat
sub
sahf
cmp
scas
add
jecxz
xor
xlat
cmp
loop
stc
cmp
inc
test
xchg
clc
mov
inc
lea
mov
sub
xchg
jmp
test
fbstp
scas
in
cmp
xchg
lret
jle
int3
pop
add
scas
pop
out
lret
cmp
push
out
in
adc
test
repz
pop
push
sub
xor
mov
xchg
cmp
sbbb
loopne
aad
mov
dec
push
in
fimull
aas
cmp
das
jnp
aam
fdivrl
push
cmp
mov
das
repnz
xchg
and
mov
mov
mov
scas
xchg
sub
aas
mov
push
adc
dec
jl
pop
sbb
push
mov
add
and
not
movsb
iret
loop
xor
pop
or
dec
nop
dec
es
das
xlat
imul
mov
out
cltd
adc
xor
adc
pop
and
add
insb
jns
incb
mov
push
repnz
inc
and
push
rolb
aad
aad
stc
cmp
push
xlat
inc
xorl
inc
mov
push
jl
das
mov
dec
cmp
push
dec
cmp
xchg
test
cmp
add
sbb
inc
xorb
mov
sub
psubsw
lods
fidivs
or
jno
jae
add
pop
nop
sub
jne
dec
xor
jge
pop
mov
xlat
aaa
sub
std
addr16
shrb
sti
mov
aas
adc
imul
shll
cmp
sub
clc
sub
push
push
cwtl
fistps
cmpsb
out
fs
loopne
movsl
cmp
pop
jle
lret
mov
add
mov
push
mov
pop
insb
inc
out
fsubr
aaa
lret
sbb
lods
pop
insl
aam
mov
test
xchg
pusha
ss
or
inc
dec
xlat
sub
mov
pop
mov
lods
mov
pop
ss
or
inc
mov
das
dec
jecxz
pop
push
pop
icebp
movsl
out
test
ljmp
outsl
pop
rolb
cwtl
sub
or
test
xchg
jns
push
cmp
jg
fwait
mov
cmp
inc
cmc
je
add
test
aaa
jo
sbb
outsb
pop
std
inc
push
sub
rcl
dec
dec
std
push
jmp
lods
mov
test
push
xchg
push
jge
lock
lea
mov
cs
and
pop
jae
daa
mov
mov
sub
lds
in
outsl
mov
pusha
out
xchg
mov
dec
mov
aam
dec
adc
dec
push
and
cs
arpl
in
or
pushf
repz
ds
sbb
push
fisubl
mov
sub
lds
out
push
sahf
cld
add
pop
add
mov
pop
jmp
in
lret
loopne
push
not
repz
mov
mov
rcll
adc
in
xchg
sbb
adc
mov
cmp
das
or
insl
jbe
dec
push
stos
dec
std
sbb
popa
mov
push
in
adc
and
or
xor
dec
add
mov
mov
ljmp
mov
mov
add
or
ljmp
push
out
and
sbb
aaa
sub
push
mov
jg
mov
in
jo
sbb
outsl
test
arpl
sbb
lds
mov
fnsave
dec
add
adc
jl
mov
ljmp
mov
jbe
or
push
adc
pop
les
mov
and
outsb
or
xor
sub
dec
loopne
mov
xor
enter
mov
mov
push
jns
mov
cmp
les
or
lds
add
sbb
mov
push
xchg
or
out
cmp
aad
fstpl
xchg
xor
les
sbb
dec
test
subb
pop
lods
fisubrs
fnsave
push
cmp
add
scas
and
mov
and
cmp
inc
lret
imul
mov
and
arpl
scas
jbe
loop
add
or
test
pop
iret
icebp
lods
cmp
adc
jbe
cld
inc
pusha
rcll
cmp
adc
loop
gs
add
dec
in
gs
ret
jecxz
clc
push
fidivs
add
mov
fists
xor
adc
jnp
cmp
jp
aas
adc
dec
outsb
jecxz
xor
jg
mov
popf
cwtl
fcom
outsb
xchg
sub
test
cwtl
inc
xchg
idiv
cmp
clc
pop
insb
ret
addr16
out
sbb
pop
jp
push
xchg
ds
jmp
or
fistps
fs
add
mov
test
incl
clc
das
ja
int
nop
imul
es
inc
idivb
sub
lahf
xchg
mov
out
push
shll
pop
and
mov
addr16
adc
lret
sub
mov
pop
enter
or
sub
cmp
scas
sub
and
pop
test
mov
leave
and
aad
inc
fstps
mov
cmpsl
xor
pop
in
mov
jo
and
ljmp
clc
sbb
ret
cmp
push
rolb
imul
ja
jb
dec
sbb
xchg
sbb
pop
fwait
movsb
jmp
mov
cltd
sar
imul
adc
outsb
mov
and
jns
es
int
push
shlb
push
sub
adc
push
arpl
int3
rorl
xchg
xor
cmp
std
xor
addl
jmp
out
add
fwait
divb
xchg
fcompl
or
lock
sbb
add
mov
inc
lret
hlt
js
int3
jno
fwait
and
cli
adc
int
add
pushf
ds
outsl
mov
sub
pop
icebp
mov
cmp
push
jns
pop
aam
pop
pop
cmpsl
push
rcll
call
scas
arpl
adc
dec
not
cmp
stos
cs
clc
call
add
lahf
pop
rcll
cmovl
cmp
loop
xchg
pop
mov
outsl
pop
adc
fsubrs
insl
sub
add
les
jbe
sub
aam
sbb
in
stos
mov
xlat
and
andb
leave
jge
mov
loop
pop
sbb
fs
pusha
push
or
clc
jecxz
shlb
mov
aas
leave
mov
lods
out
out
hlt
icebp
int3
repz
cmc
popf
pop
pushf
addr16
nopl
sahf
ljmp
subl
and
mov
popf
mov
test
push
and
xor
mov
push
lods
aad
test
sti
das
cmp
mov
fsub
data16
inc
mov
repz
cmc
mov
and
push
fmuls
mov
lock
dec
js
jnp
mov
add
flds
andl
ret
push
jl
push
shrl
mov
jl
fwait
je
hlt
js
arpl
je
jae
jg
cld
add
inc
daa
xor
aam
push
or
call
fcmovbe
out
jnp
push
jns
paddusw
ret
and
inc
mov
cmp
fwait
mov
imul
pop
int
add
out
pop
cmp
in
aam
mov
cli
jge
mov
mov
pushf
lock
push
or
dec
lods
fucomip
push
mov
xor
in
add
push
push
lea
int
mov
pop
mov
cmpl
mov
lret
lahf
jge
push
aas
rcrl
pop
dec
out
jae
out
sbb
push
shll
add
out
sub
mov
add
addr16
inc
lods
inc
out
sub
mov
aaa
sarb
test
inc
xchg
sbb
scas
inc
pop
cmp
test
xchg
cmc
lahf
push
mov
clc
sbb
scas
pop
ficompl
enter
and
jns
add
pop
aas
insb
out
add
negl
lahf
dec
xchg
cmp
mov
invd
ror
and
loope
mov
push
ret
pop
ficoml
push
pop
push
pushf
cmpsb
mov
mov
test
insl
popf
lcall
out
cltd
popf
lods
push
mov
add
into
dec
jns
or
xchg
stos
jae
add
mov
push
std
cmp
xchg
mov
call
pop
mov
xchg
push
js
or
mov
test
testl
inc
adc
je
rcll
pushf
fwait
cwtl
inc
cmpsb
pop
adc
lods
jmp
fisubs
push
cmp
mov
lcall
dec
mov
das
rcr
pop
lea
cltd
in
aaa
js
lret
mov
jecxz
mov
in
push
ret
inc
scas
jns
inc
and
pop
cwtl
gs
xor
sbb
jle
jecxz
fistpll
psubw
jmp
out
mov
std
xlat
jecxz
vpcmpgtd
fsubrp
les
mov
xchg
mov
call
push
xchg
ds
lods
cmp
mov
push
testl
or
test
arpl
imul
cli
add
rcr
pop
ret
and
sahf
cld
add
push
jg
stos
push
int3
lods
lods
popa
dec
enter
leave
jmp
int
pop
mov
repnz
sbb
cmp
xor
inc
dec
and
jp
out
fildl
arpl
push
mov
mov
mov
shll
mov
sarl
arpl
dec
or
cmpsl
adc
loop
sbb
mov
ficomps
aas
daa
inc
stc
push
outsl
movsb
push
aas
add
insb
je
movsl
and
push
rcrb
xrelease
mov
xchg
dec
lret
inc
adc
jo
xchg
ds
jb
dec
mov
fwait
idivl
outsl
mov
test
nop
enter
push
dec
xchg
and
xcrypt-ecb
cmpsl
or
sub
shll
das
fiadds
sbb
sbb
ss
das
cltd
and
in
adc
or
dec
inc
add
add
mov
dec
mov
mov
xchg
xlat
xor
dec
orl
test
fwait
adc
pcmpeqw
mov
in
divl
dec
jl
jl
add
jnp
inc
xor
pop
loopne
push
out
imul
cmp
xchg
jae
dec
jl
push
test
xchg
or
adc
aas
adc
sub
cmp
pop
xor
fs
jbe
lahf
pop
lods
popf
addr16
les
jb
ljmp
je
dec
data16
sbb
insb
inc
xor
sub
and
cmc
int3
jg
cmp
arpl
cld
aaa
loop
insb
jo
dec
std
jo
ss
gs
insl
fiadds
mov
cmp
fwait
sub
in
mov
or
bound
adc
jge
cmc
call
jg
push
pop
mov
cli
ds
mov
sbb
cld
sti
dec
fsubr
sub
mov
into
dec
icebp
xchg
sbb
jns
push
scas
cli
cmpsb
movsl
loope
rcl
bound
xchg
inc
xchg
mov
push
dec
or
push
sub
pop
sub
cmp
rcrl
or
sbb
lret
sbb
out
push
fbstp
push
adc
loopne
pushf
pop
sub
sbb
movsb
adc
hlt
add
xor
or
sti
ds
fisttps
push
add
repnz
je
add
lea
push
adc
js
jbe
sbb
or
xchg
push
sbb
lahf
pop
push
mov
mov
or
out
or
fwait
sbbb
add
jns
xchg
jno
xor
test
add
jae
rcrl
xchg
mov
jle
pop
sub
jae
loope
sbb
xchg
or
dec
mov
inc
xchg
mov
jecxz
push
int
or
sub
xor
mov
xchg
nop
cmp
int3
push
xor
pop
and
das
dec
jmp
fbstp
add
lcall
mov
jo
testb
aaa
xlat
or
enter
in
and
pop
jge
jb
int3
pop
mov
xlat
clc
dec
pop
fisttps
sbb
add
jnp
jge
cmp
mov
ret
in
repz
pop
inc
mov
sub
out
inc
enter
push
pop
test
movsb
jge
insl
push
xchg
xchg
shll
aas
jmp
dec
je
pop
push
test
jp
jl
mov
or
lea
xchg
sbb
arpl
add
mov
out
in
movsl
and
cmp
lods
js
fcoml
lea
lods
xchg
nop
pop
aad
ss
repnz
outsb
mov
xor
dec
mov
shlb
or
or
je
mov
sub
movsl
jns
ds
mov
call
pushf
mov
mov
or
add
mov
icebp
mov
loope
jmp
fnsave
inc
insb
popf
dec
fisubrs
gs
mov
and
pop
add
add
lds
push
dec
inc
add
mov
mov
cwtd
iret
imul
dec
inc
stc
adc
adc
loopne
fcoml
pushf
int3
and
adc
sbb
mov
arpl
adc
jb
mov
ficoms
xchg
shll
imul
popf
push
push
mov
out
xchg
jmp
outsl
inc
mov
jecxz
xorl
jmp
repz
jne
mov
and
test
mov
pop
inc
cltd
rclb
jmp
mov
xorl
sbb
rcr
mov
mov
rolb
and
xor
push
enter
cmp
mov
cmp
lcall
movsb
xchg
data16
jecxz
pop
lea
mov
sbb
sti
push
mov
mov
and
sbb
ficompl
clc
cmc
push
jnp
push
aaa
and
mov
icebp
out
ja
push
fldenv
out
scas
and
icebp
jne
xchg
out
xlat
mov
iret
cmp
out
lea
mov
in
dec
faddl
mov
mov
pop
std
sti
push
repz
cmc
sub
jns
dec
sub
mov
lds
sub
div
das
arpl
cltd
int
xchg
test
and
mov
mov
or
and
mov
pop
ja
dec
sbb
cwtl
shll
imul
nop
pop
imul
mov
aad
pushf
pop
insl
shrl
inc
lock
pop
dec
inc
xchg
iret
mov
fwait
and
jmp
jne
and
idiv
pmullw
mov
xlat
adc
ret
mov
xchg
lcall
mov
xchg
icebp
sub
in
xchg
sub
outsb
loopne
dec
sbb
xor
scas
xchg
push
xchg
adc
insl
cmp
fcoml
loope
pop
xor
mov
mov
jo
cld
dec
fcmovnu
imulb
or
testl
dec
pop
cltd
addr16
push
js
in
fistpll
es
arpl
das
es
cmpsl
cmp
xchg
fs
fistl
mov
gs
xor
pop
cmp
cltd
loopne
cmpl
xchg
lea
xchg
inc
add
dec
add
lret
rcr
cld
pusha
push
xor
cmp
jecxz
push
pusha
out
xor
sub
loopne
jbe
enter
inc
cmp
call
movsb
lret
or
sti
out
fcomps
mov
dec
or
jo
inc
cmp
adc
xchg
push
in
sti
hlt
imul
enter
shlb
sbbb
shl
fadds
dec
es
movb
rcl
imull
push
dec
mov
xor
mov
mov
orb
mov
adc
mov
int3
fs
push
jae
sbb
mov
jb
cmpsb
repnz
lret
stos
jge
push
xchg
roll
xchg
dec
mov
jo
in
pop
aam
mov
loope
push
int3
pop
xchg
sbb
add
lea
test
push
jbe
mov
xchg
jbe
add
outsl
or
sbb
test
or
invd
push
leave
loop
mov
or
xor
pop
inc
nop
and
and
dec
fadd
and
cli
pop
outsb
jno
push
xchg
pop
loop
jecxz
loopne
mov
sbb
and
jne
push
push
test
pop
sti
gs
mov
push
push
aad
clc
lret
mov
xchg
ljmp
test
mov
cmp
dec
fcomps
imul
cltd
sub
pop
fldcw
js
mov
cwtl
sbb
dec
fcomps
imul
cltd
sub
pop
fldcw
js
mov
sbb
sub
mov
pop
call
mov
cltd
sub
pop
fldcw
js
mov
cwtl
sbb
dec
fcomps
imul
xor
inc
sub
sbb
or
movsl
ds
push
jp
ljmp
push
sub
cli
sahf
ljmp
fisubrs
push
jp
push
sbb
dec
cmp
scas
fidivrl
ljmp
fisubrs
push
rcrb
push
dec
aam
xor
movsl
sti
cltd
out
int
jecxz
into
mov
pop
pop
pop
and
emms
aas
popa
sub
aad
data16
stos
arpl
pop
lcall
pop
icebp
and
outsb
sbb
mov
mov
adc
xor
mov
mov
push
dec
fs
push
inc
cmp
xor
stos
dec
sahf
ja
addr16
mov
fidivrs
int
sbb
push
sbb
aad
and
popa
push
mov
push
push
stc
jge
mov
out
xchg
ds
dec
mov
aad
scas
mov
ljmp
ficoms
lcall
inc
pop
cmc
mov
jp
jmp
add
lods
jne
mov
ds
outsb
sbb
dec
loopne
stos
scas
pop
mov
mov
into
mov
pop
dec
dec
cmp
or
and
dec
ficomps
subl
stos
sti
scas
lret
pop
pop
dec
or
pop
dec
or
cmp
push
sbb
mov
sahf
lea
lret
cmpsl
dec
sub
sub
or
pop
sub
cli
sahf
ljmp
fisubrs
push
jp
push
sbb
dec
cmp
scas
fidivrl
ljmp
fisubrs
xchg
fldenv
mov
shll
insl
mov
xbegin
outsl
sbbb
ja
pop
leave
xchg
xchg
arpl
lcall
inc
sar
adc
movsb
cmpsl
int
push
cmp
add
movsb
pop
jecxz
sub
shlb
fistl
int3
sti
mov
int3
sbb
lret
adc
push
xchg
negb
mov
fidivrs
fmull
addl
test
jbe
add
in
repnz
lcall
mov
mov
push
mov
adc
cmpb
int3
frstor
fucomip
gs
mov
int
lret
dec
fcmovnu
aam
mov
push
pop
aaa
icebp
movsb
mov
and
shll
xor
inc
je
in
sbb
in
out
pop
pop
into
outsb
scas
pop
pop
xchg
out
pop
and
lods
xlat
sub
push
xchg
push
sbb
lret
cmp
mov
or
rcr
mov
adc
pusha
sbb
ljmp
addb
jae
mov
js
orb
jns
mov
mov
mov
daa
fwait
lret
inc
push
insb
mov
repnz
mov
push
pop
inc
in
or
imul
adc
movsb
nop
adc
fs
xchg
les
dec
pusha
movsl
insl
leave
ljmp
push
dec
cs
ja
pop
sbb
mov
push
xchg
mov
leave
xchg
call
push
popf
je
xor
test
dec
iret
aaa
xchg
stos
int3
sub
stos
xlat
dec
jecxz
inc
pop
fs
fsubrl
and
cmp
addr16
inc
or
mov
pop
mov
add
ret
in
in
inc
shr
mov
imul
pop
outsl
sbb
adc
jp
pop
into
sub
mov
dec
mov
push
and
jecxz
fmul
rcr
lahf
and
sub
ret
std
or
test
test
pop
enter
lods
inc
push
into
inc
xchg
xor
dec
jae
adc
loop
aad
xchg
imul
pop
pop
lds
sti
cmp
jp
insb
into
std
lcall
mov
les
sti
fwait
or
out
push
xchg
repnz
out
repz
loopnew
outsb
and
cwtl
sub
fwait
incl
bound
sbb
push
mov
xor
fcmove
sub
jmp
dec
mov
mov
paddsw
movsl
mov
shrb
sbb
jnp
cmp
inc
xor
lock
pop
mov
jmp
push
std
jecxz
shl
adc
adc
adc
mov
xor
cmp
push
ljmp
sbb
inc
rcll
add
test
mov
or
popa
inc
mov
out
test
ror
or
jge
xchg
sti
cld
add
push
pop
inc
or
loopne
dec
repnz
xlat
add
lods
sbb
mov
sub
clc
popa
sbb
es
pop
testl
and
sub
sub
lret
shr
jmp
outsl
iret
push
xor
inc
test
push
je
andb
mov
js
lret
sar
cli
fucomp
aas
cld
dec
xchg
push
std
pop
jno
cld
mov
nop
or
or
or
insb
mov
ret
andb
mov
and
xchg
fdivs
push
sub
mov
movsl
in
icebp
jmp
dec
repnz
push
or
jge
cmp
add
das
sub
lods
mov
out
fdivrl
fdivrs
pop
or
push
adc
je
cmpb
insl
outsl
out
jns
stos
mov
cmpsl
push
mov
mov
jg
imul
cltd
cmp
je
rorb
imul
fldenv
and
adc
fimuls
out
out
pop
imul
dec
loopne
cmp
repz
out
aaa
gs
iret
xchg
out
xchg
daa
scas
mov
push
adc
cmpsl
mov
faddl
or
test
xchg
xchg
movsb
jo
in
mov
cmpsb
fisubrs
xor
mov
xchg
sbb
mov
mov
cld
aas
movsl
dec
call
fstps
shll
sbb
add
mov
jmp
pop
insl
outsb
icebp
mov
jne
cmp
cmc
call
mull
call
cmp
scas
sarb
xchg
int3
mull
movsl
dec
lret
movsl
shl
pop
mov
les
cmpl
pop
pop
adc
pop
add
inc
dec
dec
push
call
sbb
inc
enter
pop
jl
jns
pop
mov
sbb
add
je
or
insl
in
mov
dec
iret
arpl
mov
cltd
in
rorb
je
xchg
xor
aam
mov
shr
add
xchg
xchg
dec
insl
and
ror
mov
pop
push
es
gs
push
scas
mov
add
in
shll
pop
out
jno
lret
push
push
add
or
loopne
xor
mov
dec
movsb
test
and
jg
lds
xchg
pop
add
stos
xor
testl
mov
adc
rcrb
xchg
add
and
jae
in
mov
cmp
das
repnz
stos
adc
imul
in
stos
or
mov
out
mov
fstps
push
cmovne
inc
push
cwtl
sbb
arpl
test
xlat
cmp
cmp
in
mov
popf
stc
mov
data16
add
gs
inc
pop
int3
adc
sbb
cld
mov
ljmp
pop
imul
and
clc
inc
mov
or
cmpsb
test
jmp
adcb
or
out
incb
xor
pop
idivl
fwait
movntq
mov
mov
and
movsl
movsl
nop
jnp
cmp
out
lcall
loop
cmp
test
or
sets
add
or
ds
mov
rorb
scas
push
int
jmp
push
incb
loope
into
jno
dec
into
das
sarb
int3
jo
negb
jne
cmp
push
bound
mov
adc
and
ljmpw
xchg
test
stc
push
icebp
push
push
insb
outsl
xor
movsb
mov
repz
xchg
sub
andb
scas
ret
mov
repz
icebp
pusha
inc
dec
repnz
lock
or
sub
push
jne
sub
push
jle
repnz
mov
inc
sti
jl
sub
cmc
stos
je
hlt
fwait
sub
scas
inc
dec
imul
pop
mov
movsl
pop
mov
inc
cld
adc
adc
in
xchg
out
loopne
outsl
insb
adc
or
adc
mov
cld
cmp
cmp
pop
lds
sbb
repz
cli
aam
fsubr
jl
fisubs
pop
jbe
inc
test
scas
jge
sbb
imul
icebp
adc
add
mov
push
pop
daa
mov
es
nop
test
adc
enter
xchg
jno
inc
subb
mov
pop
cmp
imul
or
fcoml
sub
push
neg
xor
repz
fnstcw
test
add
les
flds
mov
jbe
push
add
clc
jb
inc
fsubl
loop
es
test
pop
mov
out
xor
inc
jecxz
cmp
dec
mov
daa
inc
neg
mov
inc
and
fdivrs
test
lods
in
movl
mov
push
xchg
minps
adc
inc
cmpsb
adc
or
mov
xchg
push
idivl
scas
int
sbb
movsb
stos
inc
lds
stc
jae
out
out
xchg
js
test
je
mov
iret
mov
cmp
sub
jmp
add
cmpsl
pop
loope
inc
pushf
imul
aaa
pop
xor
cli
or
fisttpl
dec
xor
dec
jbe
mov
insb
cmp
push
fcomps
add
lret
jns
cmpsl
stos
ljmp
pop
call
scas
push
test
mov
aaa
data16
lock
xchg
inc
mov
mov
jge
dec
sub
or
inc
and
xchg
push
test
cmp
ud2
push
stos
call
pusha
dec
sub
inc
lods
sbb
sbbl
sub
test
cmp
push
mov
dec
leave
das
xor
ret
lret
pop
in
rorl
ffreep
xchg
sbb
dec
and
lods
adc
pop
ret
inc
mov
mov
divb
adc
xchg
sub
leave
icebp
stc
push
lock
mov
fbstp
jl
xor
lock
and
push
daa
dec
out
lret
dec
mov
sub
jb
add
or
jmp
test
xchg
mov
sbb
or
cmp
xchg
mov
test
jae
ljmp
or
shll
daa
mov
lahf
outsl
xchg
jge
add
sub
xor
pop
inc
mov
bound
insb
fnclex
sub
fwait
int3
mull
movsb
pop
cmp
es
push
sub
push
enter
mov
aad
and
loop
xor
fs
jns
out
add
or
pop
add
div
cmc
pop
daa
sbb
pop
sti
sbb
enter
inc
pop
mov
test
int3
push
outsl
mov
and
data16
xchg
cs
xchg
pop
push
test
cmp
lods
out
ror
jb
and
cmp
sub
push
pop
mov
pop
mov
inc
cwtl
cmp
cbtw
ja
xchg
dec
xchg
hlt
push
adc
mov
mov
mov
jo
jl,pn
mov
lods
xor
push
add
dec
insl
sub
sbb
test
outsl
stos
mov
push
mov
jg
jl
ljmp
mov
mov
out
cmp
jg
outsl
xchg
adc
pop
sbbl
lds
push
sub
faddl
jmp
sub
je
sbb
mov
ja
mov
test
ss
ret
std
enter
pop
addr16
inc
xchg
popf
inc
rclb
neg
mov
inc
push
mov
adc
scas
in
pop
sub
pusha
xchg
bound
mov
push
hlt
lret
xchg
or
add
xchg
sbb
add
push
jns
adc
pop
mov
inc
repz
add
xor
mov
xor
int3
mov
in
fwait
cmp
shll
jbe
xorl
push
xchg
inc
push
mov
xchg
jge
loope
aam
adc
outsb
rorb
mov
add
mov
jl
cltd
push
sub
xor
rol
mov
xchg
dec
lcall
or
out
push
pop
dec
repnz
clc
pop
sbb
movsb
std
ret
fidivs
repz
cld
jne
jbe
xchg
fisttpl
aas
inc
jl
int3
pop
mov
inc
cmpsb
pop
adc
rcll
and
push
les
lret
pop
arpl
inc
data16
shlb
sbb
add
xchg
sbb
xchg
or
mov
popa
cli
lret
sbb
sub
pop
xor
stos
inc
or
ds
ljmp
jmp
incl
adc
in
sub
push
mov
sub
rcrl
inc
stos
sub
inc
adcl
es
data16
adc
arpl
push
fwait
lods
add
out
lcall
int3
sbb
dec
imul
mov
xchg
stos
xchg
cmp
xchg
testb
mov
into
push
hlt
push
imul
cmp
rcrl
dec
add
jl
add
adc
pop
sub
ds
jge
jnp
add
enter
pop
xlat
jge
out
addr16
insb
adc
mov
add
aad
sahf
mov
scas
jno
js
cmpb
mov
xor
mov
cmp
leave
mov
clc
sub
pop
cmp
add
push
decl
enter
loope
into
out
pop
jmp
negl
mov
lcall
js
and
adc
push
icebp
nop
mov
nop
mov
xor
fisttpll
das
adc
xchg
sub
pop
or
mov
jge
jg
repnz
bound
incl
mov
pusha
mov
mov
rcl
js
and
xor
movsb
repnz
cmp
xor
orb
and
int
sub
xchg
cmpsb
cmp
test
or
jo
ss
das
jae
out
and
or
jg,pn
fistl
xchg
and
adc
pusha
ror
insl
sbb
xchg
call
gs
in
ret
insb
pop
insb
pop
mov
push
inc
test
lret
xchg
pop
das
push
xor
jno
cld
aam
aad
xchg
jae
in
daa
rcl
mov
jl
aaa
stc
lods
outsl
roll
fcomps
std
iret
mov
inc
repnz
iret
pop
xor
xor
or
lds
stos
call
test
adc
outsb
les
fcoms
cmpsb
jmp
inc
push
scas
fnstenv
insl
rorl
cmc
adc
lret
aad
xchg
inc
dec
jo
fadds
xchg
push
xchg
shlb
inc
insl
popf
pop
arpl
xlat
jmp
sub
repz
pop
aad
jnp
imul
sub
mov
push
jns
bnd
mov
daa
pusha
push
pop
ja
fnsave
insb
ja
ficomps
and
ss
push
aam
push
sbb
mov
int3
cs
push
ds
jo
mov
pop
stos
mov
lods
outsl
fstpl
cltd
mov
aaa
xor
in
or
test
xlat
mov
rorl
imul
mov
and
arpl
sub
push
sbb
sub
jg
xchg
dec
dec
mov
jbe
sub
pop
cld
adc
addr16
test
pop
dec
push
inc
fisubrs
mov
jbe
sahf
repz
cmp
cmpb
mov
mov
adc
imul
popf
popa
add
and
mov
stos
ja
sub
jmp
int
xchg
adc
dec
xchg
inc
ljmp
and
sub
and
pop
shl
lds
testl
in
data16
xor
mov
jmp
mov
ss
movsl
orl
jle
testl
outsb
pop
jbe
stos
fnstsw
cmc
jmp
std
scas
add
and
jg
push
pop
xor
daa
or
sbb
insb
mov
xor
jmp
mov
inc
mov
in
pop
mov
sbb
xor
pop
add
mov
shrl
jg
xor
mov
jecxz
lock
popf
mov
mov
mov
dec
cmp
es
jle
ret
shrb
enter
inc
xchg
inc
shlb
rcrl
out
jle
pop
call
mov
pushf
adcl
aad
imul
sahf
fcom
cwtl
gs
inc
lret
mov
fidivl
push
xchg
sbb
inc
add
gs
pop
cmpsl
cmp
daa
pop
lods
js
add
daa
adcb
faddl
adc
loop
pop
jmp
mov
and
into
xchg
adc
jge
add
push
aas
ds
xorl
test
mov
jmp
imul
mov
fmuls
mov
push
add
sbb
cmpsb
ds
xchg
and
cmp
xchg
jnp
pop
scas
outsb
hlt
test
cmp
ret
push
arpl
xor
xchg
fwait
outsl
xchg
test
lret
fildl
dec
mov
insl
adc
rcr
imul
pushf
aaa
inc
sub
js
ja
mov
adc
dec
repz
pop
icebp
cwtl
inc
adc
aad
test
outsb
dec
mov
jae
cmpsl
pop
stos
scas
cmp
in
pop
cmp
decb
or
roll
or
into
mov
push
and
movsb
clc
xchg
shrb
mov
cmpsl
adc
cmp
loop,pn
adc
outsb
lds
mov
xchg
add
rorl
stc
mov
jmp
jnp
inc
movl
and
addr16
jb
push
fiadds
pop
incl
lods
mov
xchg
lods
push
and
xchg
sti
test
fwait
jmp
loope
cwtl
mov
xor
loopne
je
addr16
xchg
jmp
fiadds
lahf
xor
push
shlb
jno
push
push
fisttps
js
mov
jle
add
sub
insb
and
push
int3
sbb
xor
mov
insb
pop
pushf
push
nop
clc
xor
sub
and
ret
pop
cmc
sbb
nop
xchg
pusha
xor
adc
cmpsl
cmp
push
cmp
xlat
inc
ret
loop
mov
mov
in
addl
dec
mov
mov
outsb
out
xor
lcall
sub
sbb
outsb
mov
sbb
shlb
js
pop
jne
mov
jg
ficompl
cmp
sbb
cs
cmpsl
mov
hlt
outsl
jmp
adc
daa
cmp
mov
jb
icebp
xor
scas
jnp
cli
lahf
or
dec
mov
mov
and
icebp
je
lcall
cwtl
dec
aas
push
test
fcomps
cmp
xchg
and
push
mov
imul
mov
aas
cmp
out
les
inc
sub
ds
pop
and
mov
outsl
lahf
dec
mov
nop
cmp
imul
fisttps
push
movsl
sbb
push
xchg
pop
add
sub
imul
in
ss
mov
jge
sub
cmpsb
jb
in
and
lret
mov
push
mov
ljmp
into
sub
or
jae
pusha
test
shrd
add
mov
mov
addl
cltd
fistpll
aaa
aaa
add
xor
fcmovb
xchg
xor
xchg
ljmp
xor
lods
sahf
cmovbe
xchg
mov
xlat
cltd
dec
ss
aas
push
cltd
outsl
addr16
push
pop
lock
hlt
push
and
mov
rcrl
pop
mov
xlat
das
lret
mov
icebp
cmp
push
pop
cld
mov
xchg
dec
sbb
jno
mov
sbbl
push
sub
iret
paddsb
mov
test
or
addb
dec
ret
push
adc
gs
cltd
inc
test
icebp
dec
andb
mov
cli
xor
aaa
cmp
sbb
stos
push
popf
pop
mov
push
cmpsb
int3
push
stos
inc
and
push
cmp
xor
fidivl
dec
fsubrl
movsl
xor
dec
add
push
bound
inc
shrb
stos
stos
cmp
cmp
dec
dec
xor
inc
filds
aam
fsubrl
inc
into
push
ja
jno
dec
sub
repz
push
push
ret
xor
loope
repz
push
mov
pop
dec
cmp
inc
mov
xchg
xor
cltd
jl
rclb
fdiv
add
mov
or
lds
or
inc
movl
xchg
cmp
sbb
or
jns
mov
iret
out
fadd
push
in
bound
cli
dec
inc
jae
int3
xor
jge
test
add
cmpsl
inc
clc
jo
lods
stos
adc
or
xchg
and
lds
push
std
call
mov
mov
pusha
jb
aaa
ljmp
cmpsl
jl
jnp
add
fldl
jo
push
ja
cltd
hlt
sbb
xchg
jnp
iret
imull
sbb
scas
mov
adc
fists
sbb
mov
ficoms
pushf
mov
into
and
mov
sub
xor
xchg
mov
out
push
push
push
jge
icebp
punpcklwd
dec
sub
loope
das
std
dec
fdivl
sbb
xchg
cld
jge
insb
jo
mov
or
lock
vpmacssww
popa
push
mov
fidivrl
xchg
dec
test
pop
test
mov
ja
outsl
jecxz
dec
or
inc
inc
jecxz
imul
ja
or
dec
jmp
insb
sbb
pusha
and
sbb
mov
lret
stos
cmp
inc
test
lods
mov
xor
sbb
lret
outsl
shr
iret
jp
cmp
mov
arpl
out
pop
in
cld
push
xchg
dec
xor
cmpsb
popa
jge
push
test
addb
js
mov
or
call
leave
addr16
sub
stc
loopne
cmc
stos
movsb
inc
and
scas
shrl
push
xchg
das
mov
ficoml
and
sub
dec
test
jmp
and
into
add
push
fwait
lds
fisubrl
cltd
leave
jns
repz
sbb
pushf
ss
in
aaa
sub
pop
and
scas
adc
popf
xor
fldz
jmp
and
gs
leave
fmul
inc
xchg
mov
insl
push
js
add
nop
rorl
cli
movsl
fists
or
fsubrs
pop
lret
repz
ss
xor
lcall
and
lcall
push
sbb
dec
cmp
scas
fidivrl
ljmp
fisubrs
push
jp
push
sbb
dec
cmp
scas
fidivrl
ljmp
fisubrs
push
add
push
sbb
dec
cmp
scas
add
ljmp
fisubrs
push
jp
imul
or
mov
inc
pusha
and
sahf
popf
cltd
adc
ss
es
leave
roll
loope
lds
mov
xor
popa
push
adc
inc
jae
arpl
test
add
icebp
mov
xor
push
add
jno
popa
push
adc
jae
arpl
mov
lcall
xchg
fiaddl
adc
sbb
jl
push
add
jecxz
xorl
push
aas
inc
shlb
adc
jno
ss
push
mov
call
mov
mov
adc
cmp
add
cld
and
jno
pusha
out
rcll
lahf
xor
fstpl
les
lea
mov
and
xchg
cld
mov
lods
adc
xor
into
movsb
and
xchg
rclb
cmc
notb
jecxz
daa
bound
xor
adc
iret
mov
jae
jl
ljmp
jle
dec
repz
adc
inc
lea
push
stc
flds
xor
cmp
lock
outsb
pop
dec
adcb
enter
cld
push
int3
jne
popa
xchg
out
push
cmc
xchg
and
and
add
icebp
mov
ret
xchg
flds
or
inc
sub
popa
dec
adc
jae
jp
loopne
out
mov
cmpsl
mov
scas
shl
mov
addr16
dec
jl
js
mov
inc
xchg
nop
orl
hlt
lods
scas
lahf
fisubs
sub
ss
outsb
add
cli
xorl
xor
push
add
jno
popa
push
adc
jae
arpl
xchg
roll
loope
xchg
ret
xor
push
add
jno
popa
push
adc
jae
arpl
xchg
roll
ljmp
xchg
dec
out
fistpll
sub
out
aas
repz
jle
into
shl
repnz
pop
je
loope
les
add
or
xchg
fsubrl
adc
clc
test
add
dec
jecxz
lock
mov
push
mov
addl
jle
mov
ss
out
out
xchg
jg
rcl
movsl
pop
jle
aaa
cltd
test
jbe
xlat
pop
push
sbbb
jl
xchg
rclb
nop
cmpl
inc
aas
fisubrs
ss
mov
mov
enter
jb
pushf
bound
push
add
dec
sbb
pushf
and
xchg
jp
ljmp
into
mov
adc
repz
ret
out
mov
xchg
test
adc
lcall
test
std
in
ret
sub
inc
inc
jmp
xor
mov
adc
scas
xor
std
pop
movsb
aad
out
in
cmp
jb
sub
or
jle
imul
out
push
ljmp
arpl
lret
cmpsl
jo
sub
clc
jne
clc
xchg
inc
cmp
pop
mov
in
pop
and
les
insl
cld
adc
out
rclb
pop
xor
or
pop
mov
or
lret
inc
jg
pop
sti
roll
jne
sub
mov
fstpl
lret
data16
adc
adc
psubw
push
pushf
sahf
inc
xchg
cmp
cmp
xchg
rcl
lock
jecxz
out
jecxz
loope
lahf
xor
lahf
stc
mov
flds
lods
jmp
out
fwait
cmp
cmp
mov
in
aas
insb
or
pop
shll
xor
push
es
enter
insb
mov
sbb
stos
stos
adcb
loop
mov
test
xor
pop
repz
loopne
jae
inc
das
cwtl
stos
fimuls
in
pop
int3
in
je
mov
int3
aaa
cli
pop
insl
cmpsb
filds
jb
push
cmp
sarl
arpl
cmc
pushf
pop
adc
scas
sbb
xor
jle
dec
cmp
cmp
push
arpl
mov
out
rolb
inc
adcb
in
add
js
into
jns
push
addr16
add
ja
mov
test
pop
imul
mov
adc
xchg
push
jne
in
jmp
jecxz
jge
enter
and
and
sahf
or
rolb
leave
cmp
ljmp
xchg
test
jl
sbb
xchg
mov
leave
xchg
pop
jnp
mov
push
or
add
dec
cmc
push
cmpl
adc
loopne
fmuls
fcoml
lock
test
add
push
and
cmp
pusha
mov
xlat
push
or
lods
cmp
pop
addr16
outsl
dec
stc
add
sbb
push
rcll
ret
mov
scas
sub
movsl
add
pop
out
jae
sub
dec
sbb
gs
pop
push
scas
mov
and
xchg
into
inc
pop
or
enter
mov
or
xchg
pop
xor
movsb
adc
xlat
hlt
mov
test
dec
push
xor
jmp
push
iret
lret
inc
adc
outsb
pushf
xchg
cmp
dec
pushf
jmp
fsubs
push
xadd
mov
ss
push
in
mov
in
fs
adc
imul
push
rorl
sarb
out
jecxz
push
dec
inc
add
sub
dec
add
test
fwait
push
mul
fsubrs
jge
lahf
fldcw
scas
jge
iret
into
loope
leave
popa
add
mov
loop
in
out
sbb
rolb
mov
cmp
mov
shll
testb
push
aam
jp
xchg
add
mov
shlb
jmp
push
imul
xor
je
lock
arpl
negl
loop
scas
xor
roll
in
push
cmpsl
lods
cmp
sbb
push
mov
cmp
xor
sarl
xlat
cmp
mov
pop
in
nop
mov
mov
dec
add
jmp
pusha
push
cmp
fisttpl
bound
ljmp
stc
cmp
addl
test
sbb
mov
fists
out
lds
fmull
sbb
mov
inc
shrl
add
out
jnp
xlat
test
inc
loope
xchg
push
ss
cmpsb
scas
movb
jnp
mov
lds
xchg
add
icebp
dec
adc
mov
es
dec
ss
loope
inc
lods
cmp
lcall
into
in
add
dec
jae
pop
xor
add
andb
shll
in
push
mov
ss
mov
and
lcall
cwtl
daa
imul
xchg
in
dec
lret
xchg
ret
addr16
jmp
cmp
mov
sbb
mov
ret
rol
pop
stc
std
test
lock
xchg
stc
mov
popf
push
repnz
mov
jmp
das
ficomps
jp
ljmp
cli
mov
sub
ret
cmp
fdiv
ds
add
jnp
or
popa
cmpsb
jae
fimuls
ret
inc
pop
dec
sti
jg
mov
loopne
sarl
shr
bound
jl
push
in
inc
stos
imul
cwtl
pop
ret
in
mov
cmc
and
jae
xor
jmp
cmpsl
mov
jae
pop
and
lret
sub
dec
cmpsb
and
jl
jo
pop
lcall
out
sbb
sahf
dec
sbb
out
push
les
mov
adc
xlat
fidivrl
pop
ss
cmp
cs
push
cwtl
lods
ror
jbe
jg
std
xlat
popf
xor
jne
outsl
mov
int
inc
imul
sub
xchg
int3
mov
pushf
insb
nop
fists
sub
ret
mov
inc
cmc
mov
sahf
lods
sub
loope
cmp
push
cmpsl
clc
push
or
test
scas
stos
shlb
xor
mov
cwtl
inc
mov
dec
push
push
popf
push
xlat
out
scas
js
imul
dec
andl
adc
dec
inc
and
push
pop
out
xchg
or
mov
jl
inc
inc
adc
imul
dec
adc
in
stos
mov
pop
fisubrl
ja
aaa
mov
loope
adc
bound
rorb
out
popf
push
xor
xchg
add
push
xchg
inc
pusha
fwait
aam
stc
hlt
stos
popf
sbbl
divl
sub
push
add
sti
inc
pop
push
insl
sub
sbb
mov
or
cmpsb
icebp
mov
in
mov
adc
xchg
lret
out
jmp
int3
sub
dec
je
nop
lret
out
inc
ljmp
and
dec
or
mov
push
ljmp
dec
flds
cmp
xchg
jb
or
fisttpl
add
scas
jmp
push
stos
inc
jb
xorb
je
mov
lret
in
out
jecxz
test
ljmp
mov
jge
pop
data16
inc
jbe
fcompl
fnstcw
cmc
push
dec
dec
lret
push
xor
roll
popf
push
or
js
jno
loop
or
out
fwait
insb
cmpsl
ret
inc
arpl
mov
mov
sbb
sub
loopne
xor
mov
lcall
jg
inc
arpl
lods
add
rcrb
pop
sbb
aad
jge
cltd
jns
cmpsb
lods
xchg
cwtl
cltd
test
call
fcoms
or
sbb
xorl
sbb
mov
push
xor
in
and
andb
mov
lret
mov
aaa
adc
cmp
ss
pop
cs
lcall
loope
and
outsb
sbb
mov
int3
cwtl
dec
jb
cmp
aam
in
mov
ja
lahf
xchg
outsl
in
test
cld
andl
out
nop
shll
mov
cmp
add
xchg
clc
lea
mov
sbb
test
sub
xor
lcall
mov
clc
xchg
in
addr16
mov
cwtl
outsb
ret
mov
ds
or
stos
mov
loopne
inc
cs
mov
jecxz
and
add
or
lcall
int3
fcompp
fmull
loop
and
jmp
lret
pop
dec
or
push
adc
outsl
adc
and
ret
jl
cli
add
push
dec
push
sbb
ljmp
pop
push
dec
sub
mov
mov
jbe
in
dec
stos
in
sub
jle
cmpsb
mov
adc
dec
sahf
daa
sbb
mov
lret
jecxz
rolb
adc
add
cld
ss
jmp
lods
insl
push
xchg
je
xor
mov
ret
sbb
mov
adc
lcall
adc
test
fisubl
mov
or
jo
sbb
shrl
pop
mov
sub
mov
and
lods
and
in
call
out
inc
xchg
fidivrs
sub
repnz
pop
push
push
mov
aas
fwait
cmc
add
dec
js
je
in
sarb
out
cmp
inc
cmp
filds
mov
mov
xor
push
mov
cmp
pop
add
in
xlat
lahf
mov
cmp
scas
xor
outsl
out
xor
in
loopne
aad
rorl
cs
inc
cld
push
decb
aas
out
in
outsl
pop
dec
mov
pop
cmp
shll
cmp
lret
add
les
cmp
call
xor
or
mov
stos
cmp
pop
push
sub
sub
ja
adc
cltd
pop
out
mov
xchg
popf
pop
or
xchg
push
je
clc
out
sbb
shr
fcos
xchg
sub
lahf
mov
outsl
cmc
push
cmp
flds
imul
mov
push
inc
lea
mov
jl
pop
xchg
cmp
inc
adc
sbb
int3
data16
das
lds
push
adc
jnp
inc
clc
sarb
popa
and
ds
add
cmp
hlt
stc
xor
pop
pop
adc
ljmp
mov
xor
xor
sub
arpl
das
ds
addb
inc
xchg
out
cmpsb
pushf
icebp
dec
xchg
mov
andl
movsl
popf
or
aas
outsb
inc
xor
jmp
xlat
bound
inc
fsubrl
fwait
adc
xchg
call
inc
stos
mov
arpl
fsubrl
lods
sub
mov
cli
push
test
sbb
mov
pop
dec
aas
xor
ficoms
out
divl
mov
push
fadds
lds
out
adc
outsb
push
cwtl
fcoml
or
add
clc
movq
xchg
and
cmp
in
pop
mov
add
push
fxtract
push
das
or
dec
push
adc
cld
sar
jb
sti
add
or
ja
pop
mov
pushf
testb
add
leave
nop
mov
negl
dec
cli
mov
mov
loope
mov
aaa
fisubs
mov
test
jmp
inc
mov
aas
test
in
xor
dec
inc
inc
nop
push
xchg
mov
mov
pop
lds
cltd
insb
aas
shrl
stos
fmul
inc
pop
cld
clc
sbb
xor
sub
sub
in
or
popa
dec
loopne
adc
mov
orl
stos
jg
movsl
dec
lods
test
hlt
cmpsl
xchg
mov
add
sbb
xor
cmp
popw
or
mov
sbb
sbbb
dec
shl
sbb
pop
mov
pusha
xor
add
jg
outsb
sahf
adc
jne
out
sub
out
inc
adcl
call
and
mov
jle
add
stos
mov
popa
pop
ja
pop
xchg
rcr
mov
divb
adc
leave
movsb
cltd
data16
lret
cmpsb
stos
xorl
pop
scas
divl
fcmovu
pop
mov
sub
lods
mov
jmp
fwait
outsb
imulb
pop
subb
call
gs
mov
mov
push
push
sub
lods
je
mov
xor
cltd
fistps
cmp
pop
imull
arpl
ret
jnp
adc
shl
xor
aam
cmp
sbb
and
or
pop
std
shll
das
xchg
jno
xor
add
daa
jno
clc
dec
xchg
mov
enter
xor
jecxz
out
sbb
jne
xchg
daa
lods
mov
jnp
mov
mov
aaa
dec
dec
push
loop
and
dec
fcmovnu
rorl
sbb
mov
out
xchg
or
fbld
les
out
popa
lahf
xchg
xlat
sub
test
pop
inc
jp
jb
notl
sub
fbld
add
and
sahf
sub
xchg
push
icebp
sub
or
or
int3
inc
mov
aam
inc
shlb
notl
ds
lods
xor
mov
sub
mov
sbb
and
cli
sub
cmp
popf
add
mov
rclb
sbb
test
inc
pop
fnsave
pop
mov
push
pop
ljmp
xchg
mov
sbb
test
push
add
in
cwtl
loop
mov
mov
es
jbe
lret
mov
jg
icebp
mov
ret
sub
insl
and
or
dec
dec
insb
pop
out
lret
dec
test
add
xor
imul
movsl
into
inc
adc
xchg
fmull
dec
adcl
mov
andb
or
pop
cltd
pop
sbbl
xor
or
sbb
fdivl
xor
cmp
scas
lret
xchg
int3
arpl
mov
movsl
xchg
mull
gs
xchg
push
shrb
sbb
push
jo
rep
adc
stc
mov
jl
inc
mov
push
icebp
fcmovb
fcmovne
mov
lcall
arpl
arpl
imul
iret
adc
cmp
inc
xchg
ret
std
xchg
jecxz
adc
es
jns
push
and
cmc
fistpll
pop
subl
into
ret
lret
xor
scas
mov
aas
bound
mov
push
sti
mov
xlat
add
hlt
lods
lret
xchg
sbb
inc
push
adc
jae
mov
push
outsb
sbb
lea
gs
aas
dec
stos
and
clc
movsl
lea
cmpb
clc
push
adc
roll
push
ret
mov
xchg
fs
les
jmp
jae
sub
adc
out
aaa
popa
xchg
loopne
push
push
or
pop
mov
xchg
pop
fldl
movsl
cmp
push
lret
jo
and
add
cmp
test
stos
pop
and
ljmp
ds
inc
sbb
mov
mov
sbb
ljmp
adc
mov
push
cmc
lcall
dec
xor
lcall
ljmp
bnd
add
addl
mov
lcall
cmpsb
cwtl
popf
ja
inc
shll
mov
ljmp
pop
jl
cmpsb
ficompl
lods
push
adc
jl
mov
ljmp
and
sarl
icebp
test
fs
scas
sbb
push
add
jbe
xchg
test
mov
mov
xor
fadds
icebp
dec
fwait
dec
adc
jecxz
mov
lods
push
aam
stos
cmp
stos
or
ret
push
mov
call
inc
pop
adc
or
int
sub
mov
inc
inc
sbb
add
mov
mov
loopne
jno
dec
cmp
data16
sub
fbld
or
pop
cs
movsl
inc
mov
sbbb
xchg
mov
aam
xchg
inc
lret
pop
pop
ficoms
icebp
jne
cld
daa
cmp
addr16
mov
jns
or
xchg
dec
notl
cwtl
mov
xchg
cs
sbbl
in
and
cmc
xor
cltd
out
inc
pop
ss
call
sub
xor
sub
sar
mov
pop
jno
or
ds
stc
loope
mov
pop
jno,pn
cmp
mov
stc
hlt
test
aaa
cld
mov
loope
mov
push
xchg
sbb
push
hlt
jno
and
and
jp
aam
hlt
xchg
dec
add
add
or
sbb
insb
push
int3
sbb
mov
mov
xchg
inc
scas
notl
jno
jne
fsubl
sub
cmp
fstp
adc
add
dec
cltd
push
fucomip
int3
xchg
mov
nop
lcall
jns
in
scas
pop
push
mov
movsl
pop
add
add
outsb
xchg
xor
jg
aad
pop
xor
add
repz
sar
push
jp
stos
jp
push
imul
jne
lret
in
shrb
xchg
shll
sub
pop
xor
and
imul
xor
push
rcll
mov
dec
sub
xlat
cli
xchg
leave
aas
inc
jmp
push
xor
ja
cli
lahf
mov
aam
ja
lahf
orl
rclb
fstpl
cmp
outsb
mov
xchg
negb
push
lret
in
mov
lods
and
push
negb
inc
or
push
movsb
xchg
test
movsb
dec
int3
sahf
pushl
mov
gs
hlt
push
je
mov
adcb
xchg
inc
out
jp
xlat
pop
xor
aam
push
aas
rcll
push
stc
mov
in
or
cmp
mov
dec
xor
scas
adc
xchg
popa
adc
dec
jle
fimuls
sub
ja
jae
or
lret
js
test
lods
add
xor
andb
jne
hlt
or
jae
in
loopne
ficoml
sbb
js
pop
push
ljmp
xchg
mov
mov
out
lock
push
push
cld
dec
shll
and
add
mov
dec
cmp
inc
cmp
scas
add
cmp
cltd
jo
insl
gs
xchg
iret
mov
sarb
add
adc
and
in
int
call
push
out
rcrb
int3
mov
mov
js
adcl
daa
ficomps
sub
into
pop
and
inc
inc
mov
sbb
or
addr16
das
loope
mov
mov
pop
ret
xchg
and
or
int
and
pushf
and
ficoms
insb
cmpsl
stc
dec
arpl
imul
mov
and
sub
push
mov
mov
mov
pop
rclb
cmc
popf
xor
ljmp
iret
push
pop
push
sub
mov
jne
dec
push
mov
lea
sahf
push
push
inc
sub
mov
aad
add
jns
lods
hlt
int3
mov
mov
pop
lods
mov
cmp
push
fcomps
push
mov
push
inc
mov
out
cmpsl
xchg
and
insl
in
fildll
das
xor
pop
mov
test
insb
push
notl
pushf
add
in
inc
out
sti
dec
sti
add
arpl
mov
icebp
xor
xor
push
out
imul
cmp
mov
ljmp
push
push
cmp
or
and
scas
or
add
xor
js
dec
scas
xchg
out
and
inc
in
xor
popf
inc
cmp
mov
push
dec
pop
stos
push
jp
ret
mov
fucomip
cmpl
mov
mov
adc
mov
or
and
lock
adc
adc
sbb
into
pushf
aas
or
sbb
into
xor
or
xchg
scas
mov
push
pop
adc
jno
jnp
cwtl
fstl
xlat
fs
shrb
lods
js
jns
loope
scas
xchg
mov
jecxz
inc
fiaddl
add
mulb
movsl
inc
pop
sub
push
xchg
ret
aam
jb
pushf
dec
cld
push
push
cmc
jo
shl
jecxz
out
jno
jmp
dec
test
int3
xchg
xor
inc
aaa
test
xor
jns
fisttpll
or
push
cmp
jmpw
push
insl
fstpl
loope
pop
or
xchg
mov
mov
aam
mov
enter
je
scas
addr16
sub
mov
mov
xchg
mov
icebp
test
iret
sbb
stc
mov
test
imul
imull
aaa
repz
push
push
nop
adc
fwait
sub
cmp
dec
cltd
repz
jmp
aaa
es
outsb
or
cmpsb
sbb
mov
push
and
lret
inc
pop
loopne
dec
iret
mov
fsubl
test
and
pop
addl
scas
fwait
jnp
inc
xor
popa
iret
popa
outsl
push
test
in
xor
les
or
jno
shlb
adc
movsl
jbe
dec
icebp
cs
cltd
test
sahf
adcl
stos
imull
frstor
pop
shlb
subb
cmp
cmp
or
xor
loopne
push
inc
sbb
lea
stos
sub
xchg
scas
loop
js
adc
pop
outsb
lods
add
jnp
pop
mov
fisttpll
mov
jb
in
and
repz
mov
or
mov
xor
push
add
jno
popa
push
adc
jae
arpl
xchg
roll
loope
xchg
ret
xor
push
add
jno
popa
push
adc
jae
arpl
xchg
aad
shll
ret
xor
push
add
jno
popa
push
adc
jae
push
and
icebp
mov
add
arpl
scas
cld
jmp
jno
push
and
lret
decb
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
outsl
nop
mov
insb
mov
aas
loopne
adc
and
push
repnz
sub
adc
inc
lock
loopne
adc
and
push
xchg
inc
ret
pusha
clc
nop
mov
test
cmp
outsb
lock
loopne
mov
repz
adc
mov
filds
gs
jmp
sub
xchg
mov
movsl
cmp
jecxz
cs
add
fwait
pop
xor
aas
imul
dec
jge
jns
addr16
pop
xor
and
ljmp
or
in
dec
jge
insb
fstpl
jmp
jg
inc
mov
inc
jg
pop
mov
loope
xchg
iret
insl
jo
cmp
mov
cmpsl
jo
jg
xor
icebp
aad
in
arpl
loop
jge
xchg
loopne
inc
repnz
cmpsl
push
xor
mov
out
movsl
mov
test
add
inc
xacquire
nop
xor
shlb
rolb
loopne
adc
add
mov
adcb
ret
or
inc
addb
leave
or
pop
rclb
mov
jne
je
pop
repz
pushf
xor
nop
mov
rorb
cwtl
adc
push
decb
xor
xor
add
jb
push
lds
shlb
inc
lock
loopne
adc
and
push
repnz
ret
pusha
and
adc
inc
lock
loopne
adc
and
push
repnz
ret
pusha
and
dec
out
sbb
jl
mov
es
add
test
popa
inc
lods
push
popa
cwtl
add
and
cmc
mov
jae
ja
movsl
inc
out
mov
inc
rcl
pop
or
mov
sub
outsb
stos
xor
adc
repnz
je
jl
inc
sbb
xor
fsubs
outsl
orl
imul
xor
shll
fldenv
push
xor
adc
pop
sbb
rorl
dec
inc
jecxz
mov
mov
adc
pop
icebp
xor
xchg
cmp
call
in
adc
fbld
lods
mov
jle
jo
xor
repnz
rorl
testl
xchg
mov
pop
int
iret
popa
sub
xlat
scas
lods
cmp
ljmp
subb
fcompl
jbe
or
and
pusha
mov
aas
push
ja
mov
std
and
and
lea
cmp
mov
inc
adc
mov
inc
rclb
push
jl
inc
push
dec
mov
test
sub
jo
rclb
dec
jno
xor
xchg
ss
gs
push
hlt
stos
adc
add
xchg
out
mov
imul
stos
fwait
and
push
lock
inc
je
call
xor
xchg
fcmovb
or
aas
mov
or
movsl
pop
sbb
jg
mov
inc
cmp
test
subl
pop
in
jbe
leave
pop
cmp
enter
and
xor
shr
mov
add
lret
insb
popa
xlat
loop
jb,pn
lock
sbb
and
in
dec
lret
outsb
mov
movsb
inc
fmull
adc
rcrl
cwtl
mov
sub
repnz
mov
in
dec
inc
bnd
mov
and
aaa
sub
pop
addl
in
fdivl
sahf
test
mov
xlat
mov
or
out
inc
or
xorb
in
jae
xchg
mov
imul
jno
in
lahf
icebp
or
pop
pop
pop
push
dec
gs
clc
ret
push
jp
arpl
jle
pop
xchg
cmp
mov
sub
adc
cwtl
lahf
pop
div
cmpsb
pop
inc
test
sbb
xchg
aam
jbe
push
xor
jae
adc
fcompl
in
pop
mov
lock
aam
ja
rclb
out
call
mov
push
fildll
adc
jp
add
rcr
add
push
cwtl
inc
repz
int3
sub
insb
push
adc
test
pushf
sub
adc
and
sub
dec
mov
jmp
push
hlt
jmp
push
cli
stc
in
dec
xchg
mov
jp
aad
push
mov
push
scas
xor
mov
pushf
cwtl
mov
or
repnz
sbb
mov
sub
lods
aas
xor
mov
hlt
sub
aam
and
mov
jno
or
fwait
movsl
mov
rcrb
das
xchg
and
sti
addl
movsl
pushf
pop
pop
push
out
add
mov
pop
es
sbb
es
mov
mov
adc
lahf
mov
bound
jp
mov
ss
repnz
jbe
add
mov
add
or
clc
xchg
and
xor
out
icebp
sbb
outsl
jns
jbe
inc
adc
xlat
pop
sub
mov
xor
scas
repz
cmpsb
xchg
push
mov
dec
and
cmc
test
push
in
jne
mov
sbb
cmp
mov
mov
in
inc
and
je
inc
fistpl
cs
lret
movsb
xchg
aaa
scas
fmuls
inc
adc
and
je
push
sti
out
leave
mov
outsl
pop
mov
xor
jae
cmpsl
cwtl
mov
jnp
scas
inc
imul
jae
or
adc
daa
inc
xchg
pop
stos
dec
sub
jnp
push
jle
lret
sub
cld
push
add
lret
out
test
xchg
inc
lods
sub
mov
in
xchg
cmpsb
xor
inc
sbb
push
adc
pop
push
and
nop
addb
hlt
sbb
sbb
cltd
ja
out
or
cmp
das
insl
ja
ljmp
adc
pop
call
adc
fstps
sub
sub
pop
sub
mov
mov
sub
push
popa
push
imul
in
movsb
xor
push
mov
add
aas
scas
pop
and
sti
in
and
cwtl
repnz
data16
iret
push
pop
and
sarl
je
xor
call
jo
in
push
xchg
out
pushf
lds
sbb
cmp
and
xor
add
push
movd
lahf
data16
jns
mov
mov
push
jg
push
mov
in
and
movsb
xor
mov
lds
inc
ss
inc
aaa
in
outsb
push
cs
repz
aas
sub
lods
cli
add
shrl
int3
fldl
mov
fsubr
nop
sub
in
jge
loop
sub
and
xchg
inc
sarl
fwait
jmp
inc
sub
and
rolb
jge
in
jbe
fwait
mov
mov
push
out
add
pop
out
in
add
pop
and
loop
inc
cwtl
pop
cmp
cmp
int3
dec
imul
scas
pop
aam
lahf
push
cli
push
das
lods
outsb
repnz
dec
sbb
data16
jbe
scas
pop
adc
xchg
or
jbe
dec
mov
test
xchg
mov
ljmp
add
mov
and
cmp
mov
leave
pusha
adc
mov
inc
inc
sub
jnp
nop
xorb
dec
inc
push
add
sub
mov
inc
das
out
xchg
cs
jp
les
sub
cli
iret
mov
jnp
push
int3
call
loope
ret
mov
sbb
and
dec
mov
jb
in
daa
clc
cmp
test
mov
cmp
mov
stos
mov
inc
sbb
loope
in
cmp
jb
mov
cwtl
lret
add
js
out
dec
pop
incb
les
xor
lret
scas
add
inc
inc
xlat
pushf
pop
pop
xchg
jg
jl
jb
or
pop
nop
add
jg
mov
fmul
scas
cli
adc
rorb
xchg
lahf
pushf
push
outsl
pop
pop
or
mov
inc
sti
test
push
mov
lahf
jae
fsubr
inc
insb
or
xchg
fildll
cmp
push
loop
mov
and
mov
out
in
mov
mov
pushf
insb
repz
xrelease
data16
mov
pop
dec
sbbb
fstp
sbb
or
mov
je
sbbl
sahf
test
fbstp
mov
pop
inc
test
cmp
sbbl
push
repz
pop
pop
fstp
adcb
ss
les
pop
cmovnp
enter
add
rcll
test
or
idiv
pop
cwtl
mov
or
cmp
sub
sbb
sub
in
in
loop
mov
lret
fistpll
arpl
in
cmp
add
cmp
sub
popa
cli
lods
mov
stos
and
sub
sub
outsb
dec
imul
xor
adc
jae
jnp
push
cltd
jle
mov
fistpll
out
and
sub
call
adcl
inc
pop
xlat
pop
repz
cmpl
mov
addb
in
ljmp
cmp
sub
pop
in
add
inc
repnz
in
enter
and
xchg
pop
lods
push
pop
xchg
je
cs
mov
outsl
sbb
out
repnz
rol
lds
cli
sti
push
cmp
push
xchg
add
jnp
sti
cmpsl
movsb
les
sub
push
call
xor
mov
mov
iret
and
dec
and
xchg
pop
lods
push
es
fsubrs
xlat
test
mov
push
jb
nop
inc
jno
iret
xor
jnp
aaa
aam
subb
rcrl
pop
cltd
xchg
repz
jecxz
sub
pop
ret
push
push
xchg
mov
icebp
mov
sbb
ficompl
lods
jns
xchg
mov
pop
push
mov
test
pop
push
mov
es
hlt
dec
xorl
mov
fistpl
xor
add
push
ret
or
rclb
in
xor
call
in
je
sub
enter
pop
mov
cs
cmc
fnsave
ss
sbb
lcall
fcmovnbe
dec
or
mov
inc
nop
insb
inc
test
xchg
adcb
push
pop
sti
jnp,pn
add
ljmp
pop
in
and
mov
mov
imul
cmp
and
xorb
sbb
sbb
jecxz
mov
rcrl
stos
push
inc
test
jecxz
push
push
cmp
inc
or
jge
es
int3
add
inc
fnstcw
or
adc
dec
dec
xorb
adc
pop
andl
sti
and
sbb
imul
dec
aam
pop
sbb
xchg
cmp
dec
inc
push
ljmp
fstpt
ficomps
subb
clc
mov
jmp
ljmp
push
mov
mov
xor
add
int
in
dec
and
imul
mov
sbb
jle
insl
pop
ss
xchg
nop
aaa
enter
inc
shl
cmpsl
cmp
addl
or
hlt
cmpsl
sbb
hlt
fwait
cltd
lock
movsl
mov
subb
jg
dec
jo
mov
push
push
or
mov
roll
clc
push
inc
mov
mov
ficoml
mov
sahf
cli
mov
sti
adc
pop
pop
cs
lahf
lcall
inc
dec
xor
mov
cmp
cwtl
cs
pop
jb
std
dec
gs
imul
xchg
adc
movsb
dec
aad
aad
cld
dec
sbb
add
mov
push
test
cmp
loope
mov
push
mov
into
pop
lods
lock
outsl
out
gs
push
inc
mov
sub
xor
js
lods
ss
or
cmp
xchg
pop
sar
stos
or
scas
jne
stc
dec
add
mulb
ud0
inc
push
lcall
and
fiaddl
dec
pushf
jg
adc
adc
out
pusha
sbb
in
cmpsl
aam
insl
push
xor
jo
adc
add
sub
push
xchg
out
mov
jmp
out
aam
mov
mov
or
and
ja
cmc
fisttpl
call
insb
gs
in
lds
mov
loopne
xchg
sub
arpl
xchg
ja
mov
sbb
rcr
mov
add
push
push
or
or
stos
xchg
test
lahf
mov
fwait
mov
mov
cmp
leave
jne
inc
push
mov
cmp
ss
test
mov
je
stos
fiaddl
jb
xor
lds
cmp
mov
gs
pop
and
push
pushf
cli
push
stc
inc
push
sar
out
roll
sub
repnz
ja
sbb
xor
insb
adc
push
repnz
negb
mov
sub
mov
pop
adcb
cmc
cwtl
mov
mov
lods
pop
cmp
pop
mov
aam
sbbb
inc
popf
nop
or
rol
sub
fimull
mov
mov
ds
add
jne
jae
int3
adc
iret
inc
rolb
push
in
xchg
rcrl
nop
push
rcll
fwait
rcrl
out
sub
inc
mov
stos
bound
jecxz
in
mov
or
dec
aam
subb
push
pop
push
rcr
in
fists
int3
xchg
repz
adc
dec
cmc
push
jmp
fidivrl
inc
xor
movsl
or
outsl
lea
repz
or
fnsave
push
pop
cmp
jbe
dec
inc
sbbl
arpl
pop
movsb
xchg
cmc
cmc
mov
sti
mov
jmp
cmp
mov
movd
pushw
jb
mov
imul
inc
xor
daa
ret
inc
lahf
arpl
aaa
jno
mov
mov
adc
mov
push
repz
leave
jo
das
daa
jmp
fildll
gs
jmp
pmovmskb
icebp
jb
mov
and
mov
pop
dec
or
shll
sbb
aas
stos
rorl
cmp
lock
push
cmpsb
cmpsb
std
fs
int3
mov
mov
pushf
adc
mov
call
pop
jmp
cmp
movsl
mov
jbe
and
test
cltd
not
lods
mov
out
aaa
mov
insb
or
sti
repnz
push
int3
or
push
cmpl
aam
adc
mov
aam
out
adc
push
sbb
push
out
push
daa
mov
mov
add
test
mov
jbe
push
xchg
hlt
mov
add
cmp
arpl
inc
cmc
ret
mov
push
pop
arpl
mov
inc
into
mov
aad
cwtl
loope
jmp
icebp
xchg
hlt
repnz
xor
fmulp
mov
addl
inc
push
cld
push
and
fmulp
aad
sarl
aas
test
sbb
decl
rcrb
sub
hlt
mov
lods
mov
jmp
dec
mov
dec
mov
sub
cmp
xor
inc
popf
xchg
subb
and
jnp
xchg
mov
shrl
loope
sar
sbb
bound
xchg
pop
hlt
out
je
mov
sti
or
jg
push
push
stc
popa
aaa
and
add
mov
and
xchg
adc
rolb
jecxz
sbb
ret
cld
lcall
dec
out
dec
cmp
sbb
in
or
into
data16
shlb
xchg
and
addl
lods
mov
scas
adc
movsl
das
in
cmp
jo
dec
sub
inc
pop
adc
adc
adc
cmpsl
imull
cmc
add
adc
or
push
mov
bound
push
xor
xor
pop
push
test
mov
xor
rcl
shlb
movsb
in
or
cmp
ret
cs
pop
sahf
fidivrs
fisubrl
lods
xchg
data16
jae
lcall
dec
ret
pop
jmp
clc
in
cmc
or
mov
lcall
subl
outsl
je
xor
add
xorl
add
pop
js
movsb
or
jno
imul
cwtl
mov
pop
cltd
sub
in
xchg
jb
cmpsb
fiaddl
insl
lea
repnz
push
aas
push
or
adc
dec
cwtl
fucomp
imul
mov
mov
les
cld
ss
rclb
aam
fldl
mov
sbb
in
adc
fsubrl
aaa
or
add
push
sbb
fbstp
mov
inc
aad
sahf
mov
divl
lret
std
jno
out
test
push
add
pop
jl
int3
xor
xchg
add
xor
movb
imul
inc
gs
mov
mov
movsl
ja
mov
sub
push
pop
call
cli
test
sarb
insb
add
add
ss
mov
imul
pop
repnz
push
fsubs
gs
lock
cmp
inc
pop
pop
pop
fcmovnb
jbe
lds
out
outsl
xor
or
jo
clc
inc
cmp
mov
inc
sahf
cltd
mov
mov
outsb
xor
cmp
xchg
loopne
push
out
les
rorl
mov
mov
popa
adc
outsl
push
mov
inc
lcall
lret
out
ret
and
fmull
dec
icebp
sbb
ja
insl
lds
mov
pop
dec
or
or
xchg
rorb
sbb
cld
xchg
lcall
push
push
ret
gs
sti
jo
jecxz
mov
sub
add
or
or
lock
sar
pop
dec
jbe
xchg
pop
cmp
in
insb
fcomi
or
scas
cmp
mov
dec
lods
dec
lock
mov
jecxz
add
pop
icebp
cmp
fnstenv
and
xchg
ljmp
sub
daa
fucomi
mov
in
add
ja
insl
mov
push
and
or
inc
xor
lds
xor
xorl
shrb
jmp
aaa
mov
mov
adc
js
pop
movsl
mov
jnp
fdivr
adc
aaa
jb
nop
imulb
fbstp
cld
add
imul
pop
pop
idiv
pop
rclb
pop
push
movb
ds
inc
or
or
xchg
mull
pop
jo
jecxz
dec
inc
adc
cmp
jne
mov
stc
sahf
jbe
or
xchg
mov
mov
sbb
pop
mov
jne
pop
stos
push
out
push
inc
loopne
cs
jnp
fldt
push
fs
xchg
mov
dec
or
jb
pusha
test
bound
mov
mov
jmp
decl
inc
aam
push
xchg
out
loopne
out
push
shrl
arpl
cld
icebp
jmp
push
aas
clc
pop
aaa
push
arpl
push
imul
scas
dec
adc
adc
lahf
adc
hlt
rclb
ds
sub
mov
rolb
adc
ret
pop
mov
cli
popf
xchg
lock
mov
std
xlat
mov
int
sbb
add
fimull
mov
cs
dec
jnp
rol
aas
cmpsb
xor
nop
sbb
mov
stc
lahf
mov
xor
lods
sub
cltd
out
das
sahf
repz
or
das
shrl
or
loop
int3
pop
insl
push
in
pusha
jle
enter
jg
pop
sub
andb
loop
mov
mulb
int3
mov
and
or
fistpll
cmc
daa
out
sub
mov
scas
clc
rol
mov
mov
push
and
adc
fdivrl
and
xlat
cmp
xchg
loope
scas
cs
pop
popa
fistpll
int3
adc
add
adc
vpsrlq
push
insl
mov
mov
and
insl
push
jmp
mov
pop
test
pop
or
mov
scas
add
push
pop
das
cltd
push
mov
popa
ret
sbb
dec
cwtl
gs
jns
iret
xor
mov
cmpsb
xor
push
xor
xorb
ljmp
lahf
pop
adc
sub
sbb
mov
int
hlt
inc
push
ret
sbbl
lret
cmp
int
adc
bound
dec
jb
scas
sbb
xchg
push
sub
jo
ret
mov
es
es
mov
or
sub
mov
pop
int3
push
dec
adc
pop
in
push
mov
cmp
mov
idivb
outsb
stos
or
mov
in
pusha
pop
imul
inc
xchg
iret
ss
mov
sub
mov
js
mov
push
inc
loopne
dec
jne
andl
movsb
repz
stos
jge
lcall
repnz
and
jge
cld
fcom
cmp
mov
mov
pop
jns
loopne
cltd
push
stc
push
rcrl
pop
adc
xchg
push
cmp
mov
jae
test
and
sub
pushf
and
mov
xorl
sar
jecxz
add
imul
push
out
dec
jge
in
sbb
lret
add
mov
push
dec
lcall
sub
push
jno
and
imul
sub
adc
fwait
mov
data16
jbe
mov
loopne
sahf
andl
int3
inc
sub
pop
jns
xchg
je
pop
mov
mov
adc
cmp
adc
subb
out
add
dec
mov
std
cltd
lock
inc
or
or
jns
pusha
mov
in
cmp
inc
mov
add
cltd
pop
jp
aas
pop
lahf
std
pushf
aaa
in
cmpsl
xchg
fisubl
sbb
cmp
sbb
stc
scas
pusha
aam
cld
pushf
xor
inc
popa
mov
in
xor
xchg
push
jno
xchg
pop
pop
out
data16
test
jge
popa
fists
sbb
dec
stos
pop
sub
out
mov
out
push
xchg
fs
push
lock
shr
jg
scas
push
dec
in
sbb
mov
sub
push
insb
lahf
jb
xorb
mov
in
or
mov
dec
les
pop
clc
mov
fcompl
leave
sub
int3
mov
test
jne
xchg
int
and
dec
ret
jp
inc
in
aad
mov
es
outsl
or
sub
jge
in
lds
sub
ljmp
nop
sbb
xor
and
push
push
sti
aaa
push
out
cmp
sar
int
inc
pop
push
sbb
gs
lods
adc
lret
or
and
das
test
mov
rorl
xchg
test
in
adc
inc
sbb
in
adc
cmp
aaa
mov
aas
sti
mov
jle
subb
mov
inc
lock
loopne
adc
and
push
repnz
ret
pusha
and
adc
inc
lock
loopne
adc
and
push
repnz
ret
pusha
and
adc
inc
lock
loopne
nop
mov
mov
xchg
and
push
jmp
jo
pusha
cmp
cmp
inc
lock
mov
xor
mov
and
xchg
add
add
out
pop
push
sbb
inc
repnz
ret
ja
xchg
xchg
outsb
cmpsl
adc
inc
out
mull
pop
xchg
aaa
mov
shlb
sahf
rclb
ficoms
iret
pop
call
in
sub
mov
cmpb
xor
incb
sarl
data16
cwtl
jns
ss
sbbl
fwait
sub
fcmove
subb
dec
dec
dec
repnz
insl
fistpll
xchg
incl
aaa
outsb
aaa
sbb
addr16
adc
add
stos
xchg
xor
dec
xchg
popa
sbb
xorb
repnz
mov
or
pop
xchg
out
incb
mov
push
mov
push
insb
enter
test
in
rcrb
and
push
sahf
out
sub
mov
testb
xlat
aaa
cmpsl
das
repnz
fimuls
scas
ja
cmpsl
in
jl
std
fwait
ss
push
mov
or
data16
outsl
adc
and
cwtl
shll
xchg
mov
lods
xchg
or
inc
hlt
out
fs
sub
hlt
mov
inc
lock
dec
loop
xchg
jbe
push
or
mov
mov
jb
pop
nop
sub
outsl
call
jo
jae
or
fwait
lds
jbe
push
ljmp
or
repnz
inc
ret
jb
inc
out
mull
daa
xchg
aaa
loop
repnz
ret
ja
xchg
xchg
add
jb
inc
out
mull
daa
xchg
aaa
loop
repnz
ret
ja
xchg
lods
cli
lcall
xchg
inc
jl
lods
mov
jle
dec
je
xor
fisttpl
stc
and
cmp
fwait
iret
aad
mov
cmp
sti
loope
sbb
scas
stos
popa
sub
aas
dec
incb
mov
fsubrs
dec
xchg
stc
or
lods
sbb
jg
in
repz
imul
xor
xchg
imul
aaa
mov
aam
hlt
outsb
mov
aam
xchg
fs
dec
gs
jmp
xchg
xchg
lds
pop
mov
mov
xchg
dec
negb
jno
xor
sar
inc
sbbl
cmpsb
inc
pop
xchg
sub
push
xchg
bound
popa
cmpsl
mov
outsl
xor
mov
push
add
stos
jb,pt
fnstsw
push
push
pop
sub
fwait
lahf
aam
shlb
push
lret
sbb
dec
arpl
push
xor
jns
fs
dec
cmp
out
lods
mov
mov
int
mov
push
add
cwtl
jmp
ss
jmp
aas
jle
lock
leave
cld
cmp
movl
pop
or
loopne
mov
ljmp
mov
cmp
fnstsw
push
enter
xchg
movl
pcmpeqb
push
scas
inc
sub
gs
mov
pop
pop
xchg
paddusb
into
pop
sbb
dec
lahf
out
dec
out
negl
xor
loope
adc
mov
rcll
pop
push
xlat
cli
and
dec
cmp
sbb
ss
xchg
leave
mov
enter
mov
sub
cmc
jmp
je
aad
mov
call
lret
scas
into
xchg
cwtl
sub
ja
push
int
outsb
cld
out
add
sbb
add
shrb
mov
fdivl
sbb
clc
jbe
repz
scas
mov
loop
xchg
cmp
mov
adcb
dec
in
sti
je
sbb
sbb
or
dec
sbb
aam
push
loopne
and
mov
cmp
sbb
cld
test
lods
dec
neg
hlt
dec
imul
pop
or
adc
in
cli
test
mov
cmpsl
loop
and
in
sti
imul
pop
fisubrs
std
mov
call
jmp
jge
into
push
adc
and
rorl
jmp
out
je
mov
pushf
sarb
inc
in
cmpsl
call
inc
sub
push
cmp
cmpxchg
jbe
cmp
jb
stc
mov
adc
iret
pusha
in
aaa
out
mov
sbb
add
in
jnp
push
shl
sahf
stos
push
mov
inc
xor
cmc
inc
test
or
daa
fwait
add
popa
mov
insb
xchg
sbb
xchg
arpl
repnz
out
dec
cmp
insb
loope
enter
fcmovu
dec
mov
mov
aad
nop
iret
lock
lods
and
enter
xchg
fbld
push
test
or
jmp
fcmovne
sti
sbb
adc
pop
pop
xlat
in
shl
stc
movsb
fidivrl
and
or
lcall
in
aam
ja,pt
lcall
jns
call
arpl
cmpsb
sarl
and
mov
mov
and
sbb
mov
in
clc
inc
scas
cmpsl
fmull
sub
fs
insb
sub
fidivl
fs
fnstenv
xchg
insl
ror
out
mov
push
pop
xchg
add
mov
pop
addr16
orl
add
rcll
cmp
repz
lcall
or
pop
into
adc
std
mov
cli
sarb
add
mov
add
stos
mov
sub
insl
es
cmpsl
mov
rcrl
out
cmpsb
lret
jmp
mov
jne
cmpsl
add
orb
bound
add
pop
mov
inc
add
int3
lcall
jbe
in
mov
add
and
lret
add
ljmp
out
adc
sub
shll
sti
jecxz
mov
jae
dec
mov
fildl
pop
in
repz
cmc
or
push
je
iret
and
pop
notb
sub
mov
mov
xchg
addl
cmc
cmp
neg
or
push
xor
and
fmull
outsb
cmpsl
dec
add
loope
mov
xchg
ds
pop
cld
pusha
imul
pop
gs
or
decb
icebp
mov
push
jns
pop
aam
in
es
inc
mov
or
sbb
gs
pop
mov
mov
popa
cmp
mov
adc
lea
loop
insb
inc
movsl
in
je
lret
test
xchg
fiadds
mov
shll
mulb
ds
fs
in
enter
roll
ds
loope
mov
jno
push
mov
in
shl
jns
cltd
sub
cmpsb
or
loopne
mov
pop
mov
dec
mov
pop
jg
out
cmpsb
cmp
sbb
imul
and
loopne
fs
in
roll
ja
mov
mov
int3
adc
notb
mov
ret
mov
into
mov
push
dec
sub
mov
and
inc
jbe
ficoms
std
add
push
xchg
cmp
jge
aaa
pusha
pop
out
test
mov
enter
dec
mov
add
jb
loopne
jg
outsb
dec
jmp
adc
mov
in
sub
sbb
rclb
iret
mov
mov
fs
adc
mov
out
aaa
sub
sub
jnp
lods
jmp
mov
inc
jnp
imul
pushf
std
jns
sub
or
outsl
mov
scas
loop
sub
das
sub
es
xchg
jecxz
popf
das
sbb
inc
mov
ja
xor
sbb
cmc
lods
out
jmp
imul
push
push
test
cmpsb
fdivrl
shl
jp
jo
scas
cmp
mov
popf
pop
jns
int3
cmpsb
into
sub
js
and
idiv
mov
xchg
ja
into
add
shrl
movsl
aas
xor
insl
pop
shrl
fisubrl
fs
in
add
cmpsl
cld
jp
sub
or
xchg
iret
call
ret
cmp
loop
sar
push
push
pop
fisttpl
test
sub
sbbb
test
mov
adc
ljmp
mov
inc
pop
hlt
mov
sub
lret
dec
dec
insb
stc
std
push
inc
add
xor
xchg
lock
leave
xor
inc
dec
xchg
add
adc
fldenv
popf
sub
aaa
xchg
jae
mov
nop
call
loopne
cld
leave
in
cmp
lock
shlb
lret
pop
mov
inc
mov
lcall
add
imul
bound
packssdw
lahf
mov
das
fs
sub
push
ret
sbb
cmp
outsl
mov
push
jecxz
outsl
sub
jg
push
out
out
xor
jmp
mov
pop
inc
xor
loopne
mov
cli
dec
in
es
and
in
test
add
hlt
push
or
push
imull
xor
hlt
out
push
into
sbb
in
push
add
cwtl
sbb
cmp
pop
test
dec
scas
imulb
pusha
test
pop
adc
jb
daa
cwtl
cmc
sbb
mov
push
fdivr
out
push
cmp
xor
cmc
lret
xor
test
mov
je
stc
ret
sub
jmp
inc
sub
mov
aam
iret
sub
pop
jb
adc
sbb
sbb
icebp
movsb
scas
cmp
push
test
inc
xor
xor
xor
xor
mov
dec
cmp
push
mov
adc
iret
test
dec
out
or
xor
mov
stos
ljmp
cmc
ret
cmpsl
push
sub
sti
inc
xor
push
fwait
out
out
push
xor
jp
pop
cmp
fs
xchg
test
stos
in
mov
jne
popa
repz
adc
mov
in
pop
jno
jnp
in
fdivl
in
shrl
fwait
nop
inc
jne
in
fwait
ds
push
test
int
into
push
xor
test
aaa
ljmp
clc
test
fnstsw
in
lds
push
push
loop
gs
xchg
dec
les
xchg
fisttps
test
es
in
popf
test
inc
loop
popa
dec
adc
or
push
pop
mov
bound
xorb
or
adc
mov
push
enter
mov
inc
nop
aam
je
or
lea
mov
xchg
mov
jmp
mov
mov
in
xchg
adc
shrl
and
dec
fst
jge
or
cmp
ds
mov
push
add
sahf
js
inc
adc
std
stc
xchg
cmp
jns
aas
sub
inc
jns
out
sub
sub
or
decb
xchg
mov
xchg
push
fxch
inc
jne
jp
out
scas
stc
sbb
mov
fstps
dec
in
jne
xchg
push
mov
lcall
pop
enter
xchg
stos
lret
sub
or
jecxz
push
popa
ret
out
mov
aaa
push
adc
and
pop
jne
or
aam
repnz
mov
hlt
lret
jmp
jge
mov
dec
out
cmc
jle
pop
ljmp
mov
test
mov
fstpt
cmp
fbld
clc
sbb
xchg
mov
test
mov
push
popf
daa
add
sbb
mov
inc
mov
xchg
push
je
addr16
inc
cmp
mov
or
add
scas
sub
pop
sahf
jbe
inc
lods
dec
mov
push
lods
inc
adc
pushf
cmp
roll
jmp
adc
and
sahf
aaa
ljmp
xor
test
std
ds
iret
pop
cmc
cwtl
lret
cmp
inc
int3
sbb
in
sub
imul
adc
aaa
fisttpl
outsl
daa
inc
mov
mov
dec
jb
aad
pop
arpl
mov
sbbl
mov
jle
call
mov
push
sarb
rcr
ja
lret
pop
icebp
adc
mov
mov
cmp
xor
lret
hlt
out
aaa
push
icebp
push
mov
aaa
das
mov
mov
mov
stc
jg
dec
int
push
pop
sub
aam
in
xchg
push
nop
jl
les
pop
out
xchg
lcall
rcrb
rclb
push
mov
out
and
jno
sbb
add
mov
ljmp
cmp
jb
sub
pop
sahf
pushf
test
iret
nop
scas
cmp
int
cld
xor
rcl
add
inc
ret
cmp
scas
mov
xlat
in
rcrb
out
inc
sub
and
loope
movsb
cmp
inc
ficoms
scas
daa
mov
test
xchg
cs
cmp
or
lock
jae
out
cli
mov
out
stos
pop
ret
mov
inc
mov
lcall
sbb
xchg
arpl
pushf
mov
sti
cmp
jo
fcmovne
nop
xchg
cmpsl
jns
mov
and
xchg
inc
test
mov
outsl
mov
dec
ficoms
sub
outsb
xor
xchg
push
and
inc
xchg
xor
adc
mov
dec
imul
and
inc
xor
icebp
mov
pop
adc
fists
sub
cmp
lahf
rolb
xchg
cwtl
xor
cmc
jecxz,pt
cli
popf
adc
sub
sbb
add
mov
xchg
shl
jl
pop
inc
fildll
mov
fisttpll
ror
sub
mov
xchg
mov
les
loop
sbb
mov
arpl
jmp
mov
int3
mov
xor
fwait
lods
xchg
movl
and
mov
notb
jno
icebp
mov
sub
addr16
test
cmc
mov
jmp
loope
or
xor
add
pop
sbb
jle
xor
addr16
stc
jmp
fiaddl
mov
adc
dec
lods
inc
pop
jne
xor
inc
out
aam
fadds
and
jmp
sub
adc
js
subl
or
inc
mov
jno
mov
sti
mov
scas
push
mov
imul
pushf
adc
mov
les
cmp
xor
mov
dec
add
mov
dec
sbb
mov
xor
sub
mov
rolb
pop
clc
xor
addr16
adc
out
cli
pop
cmp
adc
jg
ss
xchg
aaa
bnd
jns,pn
inc
call
fists
add
out
stos
xchg
aas
ss
in
and
cmp
loopne
fisttps
loope
jmp
pushf
fildll
mov
mov
loope
jo
and
push
push
mov
iret
insb
xor
inc
aad
std
mov
jmp
push
addb
dec
in
add
inc
into
test
sbb
sbb
sbb
mov
imul
inc
lahf
jmp
sti
xchg
inc
inc
mov
cmp
in
ljmp
lahf
aad
jp
push
out
pop
iret
repz
pop
imul
jns
sahf
popl
fstps
fucompp
sbb
clc
test
pop
jge
jmp
repnz
idivl
das
xchg
int3
xor
pop
push
mov
and
pop
add
imul
mov
pop
scas
test
ljmp
inc
ret
scas
enter
imul
sbb
jecxz
mov
iret
xorb
dec
dec
jne
sarb
add
mov
test
loope
je
xor
push
cmpl
cli
push
pop
repz
jmp
fnsave
jg
inc
push
cmp
and
fisubrl
clc
stc
test
mov
enter
mov
mov
push
dec
lods
aam
sub
movsl
out
testl
xor
cld
adc
sbb
push
lret
xchg
stos
pop
push
pop
and
inc
insl
mov
pusha
popf
rcll
pusha
pop
and
dec
aaa
jne
jl
push
or
or
mov
mov
outsb
pop
lret
xchg
mov
add
mov
outsl
fisttpl
mov
jo
push
and
movsb
adc
popf
es
jl
xor
imul
push
dec
inc
insl
pop
pusha
mov
xor
outsl
xor
xchg
add
movsb
sbb
jmp
xchg
mov
sti
bound
and
test
pop
rcll
insb
jp
adc
or
inc
fs
aas
sub
mov
js
stc
movsl
ja
pop
jge
mov
xchg
xor
jo
subl
in
sbb
fisubl
lcall
mov
int
mov
imul
enter
mov
jne
in
mov
js
aad
adc
adcl
push
leave
outsb
int3
cltd
fs
pop
mov
or
imul
leave
mov
dec
sbb
or
out
mov
lods
dec
push
lods
cmp
adc
fs
dec
inc
out
and
inc
in
inc
jbe
xor
fists
rorl
dec
rcr
daa
jb
mov
cs
mov
rcll
sar
sti
cmpsb
xchg
push
jp
mov
mov
stos
jbe
xor
inc
out
aad
dec
in
fdivl
fistpl
push
into
pop
outsb
sahf
fs
mov
dec
rorl
out
mov
mov
pop
cld
inc
jle
test
out
xor
adc
rorb
sbb
jae
outsl
stc
bound
popl
mov
std
insl
pop
and
cmp
andl
jg
sbb
pop
pop
mov
idivb
scas
fdivl
jecxz
jno
out
shrb
je
and
xor
ds
inc
ret
sbb
leave
scas
cltd
mov
cmpsl
xchg
sub
dec
les
ss
inc
lcall
fsts
or
sub
fnstsw
xor
fdivl
pushf
arpl
das
test
sbb
lret
mov
sbb
jg
sbb
out
jae
cmpsl
inc
xor
jnp
fs
roll
inc
push
push
pop
inc
addr16
pop
cs
fdivs
movsb
sbb
std
pop
icebp
xor
aam
out
out
loope
sar
ja
fs
mov
mov
adc
cmp
xchg
jl
ret
xchg
out
jmp
pop
adc
jmp
push
stos
sti
sbb
or
incb
rcll
sub
xor
lods
stos
xor
popa
mov
outsb
xor
mov
hlt
xlat
adc
dec
xchg
xchg
ficoms
aad
xor
and
int3
test
push
subl
cmp
xchg
in
andl
ja
jne
cld
mov
loopne
imul
rorl
push
pop
jecxz
in
aam
stos
jl
inc
clc
pop
jecxz
mov
leave
popa
jnp
je
enter
push
pop
arpl
xchg
into
pop
gs
jge
push
cld
pop
pusha
pushf
inc
popa
cmc
jnp
cwtl
ret
ret
mov
adc
adc
adcl
shlb
push
mov
je
push
pop
dec
outsb
imul
pop
imul
fsubrl
dec
shl
pop
cmp
mov
xchg
push
inc
inc
pop
mov
pop
inc
leave
jmp
add
adc
repz
mov
lretw
mov
stos
mov
aam
add
ja
sbb
into
xor
mov
adc
jno
xchg
push
xchg
cmp
sti
and
imul
sar
pusha
fs
jns
jecxz
leave
pop
leave
das
leave
out
inc
popa
jbe
fistpll
insb
ret
push
test
cmc
hlt
add
add
fidivl
ret
out
cmpsl
or
pusha
inc
aad
push
loop
mov
sbb
add
xchg
lods
inc
loope
pop
dec
mov
push
test
jmp
lods
out
sbb
repnz
sbb
mov
sub
pop
xchg
aaa
sbbl
xor
pop
std
dec
dec
jae
push
es
pop
clc
inc
test
jge
mov
pop
or
insl
lret
push
adc
mov
idivl
mov
in
sbb
inc
dec
fdiv
push
sub
pop
and
std
xor
add
rcl
popf
in
into
mov
cmp
sub
faddp
enter
rcll
test
cli
mov
out
cs
add
lods
pop
pop
ffreep
leave
and
adc
sub
lock
out
shll
cmp
roll
xor
shlb
outsb
mov
cmp
aad
in
dec
dec
mov
outsb
subb
adc
mov
cmp
mov
icebp
fidivs
xor
out
sbb
movsl
lods
lods
out
leave
aas
mov
xor
inc
mov
inc
jae
xor
repz
roll
loop
add
mov
subb
das
push
lods
mov
push
push
push
pop
les
jge
jl
dec
lcall
lcall
xchg
rcl
push
insb
pop
cld
mov
in
mov
and
mov
lock
subl
mov
mov
and
lret
arpl
xlat
mov
pop
sub
aad
mov
data16
rcrl
cltd
jle
jne
jmp
fstpl
scas
inc
add
aas
dec
push
scas
lret
mov
mov
mov
adc
jecxz
xchg
rolb
jge
mov
inc
sbb
insl
pop
sbb
in
lods
inc
ds
movsb
sti
adc
mov
lock
pop
cltd
shlb
add
repz
mov
or
outsb
outsl
xchg
sahf
or
inc
dec
mov
mov
add
dec
xor
pop
js
adcb
push
lods
mov
pop
push
ja
sbb
inc
icebp
sti
stc
lahf
lods
or
repnz
sbb
mov
cmpsb
and
push
sbb
stos
push
xchg
pop
cmpsl
or
dec
in
mov
pop
shlb
mov
std
cltd
sarb
sbb
inc
xor
test
orb
test
ja
test
hlt
stos
fwait
cmp
in
imul
dec
mov
xchg
sbb
lock
call
inc
into
and
jns
decb
frstor
inc
mov
adcl
mov
adc
ret
cvtps2pd
pop
jl
or
or
or
in
mov
jno
pop
mov
ljmp
aam
ret
sub
les
inc
mov
inc
ljmp
movsb
mov
shrb
mov
jge
push
xchg
push
lods
mov
inc
hlt
pusha
cmp
lret
xchg
aas
mov
dec
ja
and
inc
sbb
pshufw
jbe
add
jmp
adc
mov
shll
jp
repz
in
test
jge
mov
xchg
mov
lods
inc
bound
sbb
clc
adc
xor
repnz
pop
test
jb
sbb
cmpsl
mov
push
mov
jg
or
clc
lods
fwait
mov
inc
dec
adc
inc
out
mull
daa
xchg
aaa
loop
repnz
ret
ja
xchg
xchg
add
jb
inc
out
mull
daa
xchg
aaa
loop
repnz
ret
ja
xchg
xchg
bound
jb
inc
out
mull
daa
xchg
ss
loop
ret
ja
xchg
pop
cmpsl
xor
inc
out
mull
daa
xchg
inc
xchg
iret
jp
cmp
xchg
xchg
jb
inc
sub
push
mov
lahf
pop
push
add
or
add
add
add
or
ds
add
add
mov
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jae
jno
jae
incl
fiaddl
popl
stos
add
add
add
add
add
add
add
push
add
add
add
add
inc
add
adc
sbb
cmp
push
add
mov
adc
sahf
add
add
add
ljmp
add
add
add
and
sbb
jnp
pop
add
add
add
pop
add
add
add
add
add
pop
add
or
icebp
add
add
add
add
pop
add
add
add
add
add
add
aaa
add
jg
and
push
add
add
mov
filds
push
add
add
add
add
add
add
add
add
jbe
cmpsl
add
add
add
add
mov
pop
add
add
fiadds
stos
add
loopne
fiaddl
dec
add
add
add
add
add
add
daa
add
add
add
add
add
add
or
mov
stos
add
push
add
add
outsl
add
add
add
add
jae
add
add
add
repnz
add
fildl
jnp
mov
add
add
add
add
lret
add
repz
add
adc
aad
loopne
pop
add
push
add
add
add
add
add
cmp
mov
xchg
add
jno
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
icebp
add
xor
cmp
add
mov
add
add
add
add
filds
aas
add
sub
into
add
add
add
add
add
add
loopne
and
mov
jae
sub
push
add
mov
outsl
add
and
dec
add
xor
add
add
add
jae
test
pop
add
add
mov
sbb
cmp
fildl
add
sub
add
add
add
add
add
add
add
jnp
mov
mov
mov
add
add
add
add
add
add
add
add
add
add
add
fiaddl
pop
add
add
add
add
nop
add
add
test
es
add
add
add
add
pop
add
mov
bound
pop
add
add
add
add
add
add
add
add
add
add
sbb
pusha
add
xchg
ret
add
add
jae
mov
scas
add
add
add
add
add
add
add
xchg
add
add
iret
add
iret
add
add
jae
dec
add
add
add
add
add
add
bound
pop
add
xchg
add
jae
iret
add
add
sub
jae
add
xchg
add
add
add
add
jnp
into
daa
movsl
int
jo
outsl
xchg
push
pop
or
jae
sbb
sbb
xchg
adc
jnp
lds
adc
loope
mov
sub
loopne
in
sub
pop
test
outsb
fadd
ljmp
pusha
ret
xlat
jbe
push
lcall
xchg
pop
xchg
iret
jo
inc
adc
test
adc
js
sbb
sbb
out
add
pop
stos
enter
fidivrl
enter
fistpll
lods
popa
pop
add
iret
pushl
xor
sbb
xchg
mov
andb
or
jo
stos
cmp
xchg
out
daa
outsl
fisttpl
push
xor
sbbb
mov
adc
inc
sub
fwait
je
or
cmp
mov
dec
out
rcrl
in
pusha
cmpsl
popa
push
jle
popa
push
jbe
xchg
add
lods
test
dec
add
incb
cltd
mov
daa
cs
fwait
dec
xchg
mov
mov
ficompl
ret
adc
ret
push
into
mov
or
mov
push
popa
dec
pop
adc
xchg
loopne
ret
xchg
dec
jb
sub
or
push
test
in
stc
dec
cld
jno
inc
and
in
loop
into
in
jp
stc
outsl
adc
sarb
pop
out
adc
lret
stos
mov
ds
shlb
jb
jecxz
cwtl
and
ja
hlt
mov
xlat
daa
outsl
and
mov
loopne
sti
loop
mov
popa
jno
stos
mov
push
lcall
lods
xchg
lcall
out
jg
aad
sti
fmuls
dec
jl
pop
mov
std
test
or
sti
test
push
je
xchg
jno
mov
es
sbb
jns
inc
scas
mov
dec
or
cmp
push
ss
inc
hlt
xor
push
rorl
mov
add
incb
test
popw
xchg
out
xchg
stc
sbb
mov
lock
xchg
mov
pop
mov
adc
jno
xchg
jg
dec
push
pop
addl
and
dec
dec
ret
mov
pop
push
mov
aad
mov
loop
in
stc
pop
xchg
dec
adcl
pop
adc
lret
mov
and
mov
adc
mov
aas
mov
inc
mov
movsl
jns
stc
push
jne
mov
xchg
push
xor
cltd
push
adc
lds
cmpsb
lcall
int
loope
cmp
out
sbb
mov
add
or
fldenv
push
adc
push
adc
shl
cmpsb
adc
mov
leave
adc
and
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
