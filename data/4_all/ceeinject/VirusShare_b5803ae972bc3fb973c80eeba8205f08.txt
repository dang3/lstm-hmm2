call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
movsl
sub
sbb
roll
aaa
and
pop
mov
movsl
mov
hlt
jmp
sub
sbb
imul
movsl
mov
cmc
fwait
in
aad
xor
add
gs
push
push
inc
inc
mov
movsl
lcall
mov
inc
gs
jle
mov
jbe
xor
cmpsb
hlt
lcall
jb
ss
mov
pusha
add
sbb
fbstp
pop
inc
int3
data16
cmp
push
sbb
fs
jno
out
push
fidivrs
add
test
jp
dec
dec
and
pushf
bnd
xor
imul
movsl
dec
arpl
jbe
adc
aad
jl
ss
leave
enter
inc
notb
insl
popf
test
inc
xor
push
rolb
jno
and
lcall
lahf
icebp
adcb
dec
orl
shll
jbe
add
aam
fildll
and
sbb
gs
dec
inc
inc
mov
movsl
mov
cmc
icebp
in
aad
sub
jns
dec
jl
imul
adc
pop
mov
orl
push
popa
jp
jbe
imul
imul
enter
loopne
mov
scas
fisubrl
jbe
and
jns
dec
inc
pop
mov
movsl
mov
cmc
jmp
sub
sbb
gs
dec
inc
pop
mov
movsl
mov
cmc
jmp
sub
sub
loop
out
xchg
inc
push
xchg
fmul
hlt
sbb
push
sub
xchg
xchg
imul
mov
xor
mov
mov
arpl
aam
cli
xlat
cwtl
mov
lea
sbb
push
nop
ja
mov
cmp
push
lcall
lea
inc
lret
mov
stc
ja
scas
lret
add
fistps
pusha
leave
enter
shrl
int
mov
sbb
fwait
xor
jl
imul
ljmp
insb
dec
stos
outsl
push
outsb
cmpl
pop
pop
shll
jg
add
lods
popa
jl
mov
dec
cmpsb
add
jne
and
sbb
dec
stos
ret
daa
insl
js
mov
in
sbb
cmp
mov
sarw
mov
adc
mov
mov
xor
das
push
mov
fs
push
mov
xor
in
xor
mov
outsl
mov
xor
mov
es
scas
inc
xor
clc
mov
insl
imul
cmp
push
dec
cmp
jl
mov
and
clc
popf
mov
frstor
jbe
je
fdivs
test
push
fisubrs
dec
push
jp
movsl
shll
sub
and
in
add
out
pop
inc
sbb
popa
mov
bound
adc
aad
pusha
orb
jne
mov
mov
lods
sub
mov
lret
stos
out
ret
xor
sti
jbe
inc
insb
mov
enter
ds
shr
int
inc
push
sbb
jl
aam
das
push
sti
outsl
les
mov
negl
mov
sbb
inc
cmp
jnp
mov
and
xor
mov
xor
add
mov
dec
dec
scas
sbb
sub
mov
ss
pop
repz
inc
jl
cltd
lds
jns
cli
fdivrl
stc
aad
pop
cmp
sub
push
mov
jmp
outsb
mov
sbb
lahf
mov
lcall
hlt
imul
xor
fld
loopne
add
mov
shlb
sbb
push
fimull
cmp
outsl
insl
add
cmp
loopne
xor
mov
jecxz
or
add
dec
push
jl
rcrl
leave
inc
data16
in
sub
adc
pushf
lahf
mov
sub
sbb
mov
cmp
in
mov
pusha
cmp
dec
mov
adc
aad
mov
jb
cmp
dec
pushf
fstpt
inc
push
popa
jp
push
fldcw
hlt
adc
adc
in
rcrb
xchg
int
xor
cmc
jne
and
gs
hlt
push
ljmp
pushf
add
mov
insl
and
cmp
int3
call
sub
push
jno
clc
mov
scas
jmp
ficomps
rorl
add
jle
xor
fdivrs
cli
adc
pusha
popa
jmp
push
xor
pop
pushl
jnp
pop
jge
inc
out
xchg
jns
jl
adc
shrb
and
int
aas
lock
cmpl
sub
lock
inc
dec
loop
mov
and
cltd
icebp
and
mov
popf
rcrl
sub
sbb
es
add
jg
cmp
lods
dec
push
repnz
mov
mov
sub
mov
imul
paddq
lcall
or
dec
rorb
sbb
sbb
leave
mov
test
and
icebp
fistpl
adc
and
movsb
or
sbb
aad
or
inc
pusha
dec
push
pop
xor
aaa
out
rolb
arpl
cwtl
mov
pusha
ret
mov
xchg
repnz
mov
imul
aas
in
rorb
pop
mov
pop
push
xchg
inc
jno
xchg
orb
fcomps
ljmp
mov
inc
repnz
aaa
ret
lods
push
and
orb
movsl
xchg
jp
outsb
aad
and
test
dec
jl
mov
mov
addr16
imul
and
inc
sti
loop
rcl
mov
xor
push
call
xor
xchg
ret
dec
stc
scas
aas
fidivs
sahf
xchg
rolb
push
arpl
divl
shrb
fidivs
add
xor
ficoml
ds
xchg
cmp
push
push
test
bound
ds
dec
fildl
inc
jnp
mov
ret
int3
jl
cmp
inc
mov
sbb
jns
xchg
movsb
inc
pushf
test
mov
cmp
mov
aas
inc
out
jmp
adc
jnp
aas
sbb
jnp
cmc
mov
inc
sbb
push
xor
in
cmp
je
adc
mov
fmuls
cmp
jle
js
or
pop
imull
and
jns
mov
sub
sbb
jge
leave
mov
xchg
lcall
stos
fidivrs
jne
xor
jb
xor
enter
pop
push
stos
pop
mov
out
movsl
jae
addl
ss
jae
popa
dec
jae
jb
leave
je
insl
mov
xor
stos
sbb
test
ljmp
cmp
test
lock
div
je
in
pop
mov
in
sbb
lock
mov
testb
or
or
clc
scas
arpl
sub
mov
mov
ljmp
adc
movsl
rcr
shl
sub
sbb
icebp
xchg
test
mov
cli
in
lods
sarl
push
icebp
jmp
add
arpl
push
test
stos
sub
cmp
cmpsb
imul
and
fistpll
ret
lret
test
lock
lds
in
jle
lods
and
dec
insb
sbb
cmpps
cwtl
mov
push
add
pop
pop
inc
jns
mov
adc
mov
pop
cmpsl
or
sti
test
subb
add
jle
jmp
cmpsb
pop
in
out
les
shr
call
inc
inc
inc
cwtl
int3
addr16
clc
mov
js
mov
pop
push
dec
test
lods
fs
lock
push
or
xchg
xchg
jmp
mov
scas
fisubs
or
ret
inc
or
ljmp
mov
sub
lds
cmp
shlb
add
pop
xchg
orb
sbb
xchg
xor
mov
mov
out
mov
ret
aad
in
and
jb
sbb
lds
add
ss
scas
push
jle
mov
push
aad
jecxz
xor
inc
dec
lahf
jae
xor
sbb
in
arpl
mov
inc
jne
sbb
pushf
mov
cmp
push
inc
dec
inc
adc
inc
jge
pminub
jb
sbb
xor
cmp
lods
mov
mov
into
fisubrl
push
lret
das
push
mov
stos
lret
bound
mov
fnsave
mov
bound
les
bound
cmp
pop
inc
subb
adc
mov
into
sub
sub
imul
xor
pop
xor
mov
xchg
jnp
hlt
cmc
push
test
arpl
gs
ds
push
sub
mov
jp
test
and
ret
arpl
sub
inc
out
pusha
repz
mov
xor
pop
movzbl
pop
ror
insl
jae
outsb
add
mov
ldmxcsr
gs
push
adc
push
inc
ds
and
dec
insb
mov
clc
aaa
inc
dec
inc
pop
fldt
pushf
das
push
push
lea
in
mov
inc
rcl
test
and
fiaddl
mov
push
xor
in
scas
out
sub
jno
push
outsb
cmp
jns
cmp
aas
cmp
or
xchg
xchg
sti
pop
test
mov
xchg
cli
inc
xor
mov
or
mov
and
adc
shl
shlb
inc
fdecstp
cmp
push
mov
or
lahf
loop
aas
in
popf
inc
ret
ljmp
sbb
xchg
and
add
mov
lcall
or
and
gs
aad
nop
sti
push
out
and
les
test
sub
outsb
mov
orl
dec
push
shrl
jmp
adc
mov
push
test
pop
mov
cmp
jnp
sub
xor
sahf
rorb
sub
imul
mov
xor
lcall
fcmovnbe
pusha
adc
scas
adc
test
lcall
push
xchg
cwtl
aad
clc
daa
stos
jmp
adc
ret
xchg
push
shrb
cmpsl
hlt
das
test
das
mov
rolb
sbbb
loopne
aam
push
out
outsb
scas
lds
mov
adc
into
jae,pt
test
jns
dec
or
sbb
fisubrs
pushf
into
addr16
loopne
xor
sub
mov
insb
push
xor
adc
test
lcall
imul
or
dec
or
jnp
push
ret
adc
ja
movsb
bnd
and
dec
xor
or
sub
cmp
xor
mov
popa
test
stos
sbb
ja
or
sarb
jle
dec
jg
divb
or
and
fwait
lcall
fiadds
mov
or
std
shr
inc
jmp
cltd
xor
out
scas
dec
in
and
call
sub
shr
mov
dec
jae
insl
pushf
divb
shrl
or
xor
lahf
mov
leave
stos
fidivl
cmp
fwait
outsl
pop
ljmp
mov
hlt
adc
mov
in
xchg
lea
push
push
pop
stos
xlat
das
stc
inc
pop
xor
or
or
xchg
lock
fwait
das
fcomps
rcr
jmp
insb
data16
stc
jg
loope
mov
or
int
stos
sub
mov
mov
popa
addr16
shl
dec
int
outsl
cmp
mov
jne
lods
xchg
loop
in
jne
mov
mov
lods
je
mov
inc
and
or
xor
rcl
or
and
inc
adc
mov
add
int3
mov
mov
stos
pop
fnstcw
xchg
cli
pushf
mov
std
es
cmp
arpl
fnstenv
sub
pop
adc
sbb
sub
xor
out
mov
mov
loope
daa
icebp
test
ljmp
mov
test
jne
test
adc
xor
lds
pop
push
hlt
stc
shlb
inc
mov
fidivrl
js
fcoml
lods
cmpsb
cwtl
dec
jnp
loopne
outsl
cs
jmp
jp
jge
js
mov
add
adc
pop
xor
leave
sbb
pop
and
adc
pop
adc
xchg
and
xor
icebp
mov
in
clc
cmp
pop
push
adc
cmp
das
sub
neg
push
mov
jno
scas
scas
push
push
les
in
jns
iret
mov
xor
push
in
or
lcall
sub
mov
xor
and
push
sbbb
ss
daa
xchg
insb
dec
add
adc
add
les
fdivrl
jg
das
loopne
add
mov
pop
repz
push
daa
fistl
jb
jecxz
popa
ret
inc
insb
jno
cmp
jmp
test
popa
leave
stc
aas
fldcw
mov
mov
call
adc
insl
into
lds
xchg
sbb
test
mov
jo
in
jl
outsb
dec
push
inc
in
inc
pop
iret
int
push
pushf
sbb
movsl
or
iret
outsl
orl
mov
pop
popa
movsl
cmp
fs
or
and
jne
movsb
mov
dec
push
fisubs
dec
pop
in
in
addl
dec
jle
adc
stos
xor
or
sub
fwait
cmp
out
pop
pop
sub
pop
aam
mov
pop
sbb
or
push
and
loop
or
xor
adc
push
insb
sub
andl
aaa
mov
dec
nop
in
mov
sbb
cwtl
sub
push
cmpsl
leave
insl
sahf
mov
jbe
test
inc
cmpsb
mov
into
imul
pop
fldenv
repz
mov
and
cmp
jnp
xchg
sarb
xchg
fildll
mov
lret
les
popa
stos
hlt
sub
subl
lods
mov
mov
add
mov
gs
jl
lcall
loopne
sub
and
cli
sub
incb
lret
movsb
push
popa
lret
inc
mov
arpl
out
xchg
jecxz
jo
in
adc
or
jo
loop
das
add
test
pop
mov
or
out
or
fsts
inc
jnp
xchg
outsb
dec
pushf
mul
sub
mov
push
bound
xchg
loopne
imul
popa
int3
ja
sbb
mov
loop
dec
inc
mov
jp
inc
repz
xchg
sub
cmp
mov
inc
sbb
mov
mov
mov
dec
xchg
push
int3
and
mov
in
nop
out
add
or
imul
imul
dec
xchg
test
push
jl
mov
mov
mov
pop
lahf
das
incl
movsw
push
dec
mov
in
loope
mov
ja
lahf
aaa
xchg
inc
add
or
pushf
mov
jno
inc
call
jl
cmp
cmc
mov
cmp
or
mov
pop
cmpsl
and
push
andb
push
cli
pop
jg
inc
sub
jecxz
jmp
and
jo
xchg
loop
sbb
push
outsb
push
icebp
std
sub
call
sub
cmc
add
jmp
jle
inc
stc
ja
mov
add
loop
js
adc
pop
daa
in
pop
stos
ja
adc
lea
insl
inc
jne
andb
mov
pop
mov
rolb
push
xchg
leave
mov
jmp
dec
fldcw
ja
adc
pop
xor
dec
jns
mov
dec
popa
adc
lock
pop
inc
jbe
fcomip
aaa
ret
shrl
arpl
jge
leave
ljmp
push
movsb
data16
xchg
aaa
aaa
push
mov
stc
in
lods
pop
cld
fucomip
int
jne
fwait
mov
mov
jo
aam
mov
inc
push
sub
cld
fwait
loop
sub
push
loopne
and
popf
jne
jns
mov
aaa
dec
daa
call
inc
or
xlat
xorl
pop
fucomip
rcrl
xchg
xchg
nop
dec
pop
call
adc
add
lret
iret
cli
xchg
push
jecxz
outsl
jmp
je
mov
jle
mov
andl
rol
mov
repz
lods
loopne
mov
mov
dec
or
nop
cltd
sbb
and
adc
cmc
cwtl
dec
lahf
cld
arpl
xchg
inc
adc
or
add
mov
cmp
cli
dec
inc
push
add
push
adcb
sbb
test
cmp
mov
dec
pop
dec
out
out
maxps
jno
aas
sbb
andb
xor
inc
test
stc
add
jmp
xlat
lcall
scas
out
scas
repnz
inc
enter
int3
and
scas
xchg
dec
cmp
jne
cmpb
bound
iret
add
lock
scas
mov
push
aaa
aaa
dec
or
push
aam
mov
mov
xor
fbld
outsl
outsb
cmp
cmp
xchg
call
popf
out
pop
lods
loop
scas
sbb
ret
sub
aad
xor
mov
mov
and
pop
fs
and
mov
mov
push
xor
xchg
pop
sbb
cmp
stc
sub
xchg
fistpll
insl
push
and
dec
pop
sbb
mov
add
dec
dec
push
push
fstpt
sti
or
add
bound
mov
inc
mov
jo,pn
jae
mov
mov
mov
xchg
add
xor
add
imul
repz
jns
xor
push
or
jae,pn
and
sub
sub
test
mov
pusha
data16
adc
mov
cmp
xchg
cmp
mov
mov
push
cwtl
dec
xor
cmp
or
and
lock
dec
cmp
dec
cli
inc
leave
mov
sti
arpl
scas
imul
outsl
xor
fidivrs
mov
out
test
ja
pop
mov
hlt
or
mov
cmp
loope
inc
out
push
and
daa
mov
mov
stos
aaa
clc
orl
notb
das
inc
push
lret
sbb
std
hlt
lods
adcl
mov
test
dec
xchg
cmp
stc
lret
adc
sbb
lcall
shll
mov
imul
pop
outsl
cmp
jbe
xchg
insl
loopne
pop
aad
inc
fbstp
test
divb
shl
pop
orb
in
add
adc
mov
mov
jecxz
movsb
pop
into
loopne
and
dec
mov
add
faddl
addr16
sbb
lds
or
inc
int3
aad
dec
push
adc
pop
into
add
negb
adc
xchg
xchg
push
or
cmp
fs
pop
inc
lahf
loop
mov
andb
jecxz
lret
xchg
fwait
inc
jae
inc
enter
imul
add
lods
negb
pop
xor
test
pusha
xlat
xchg
jns
stos
and
push
clc
lahf
daa
cmpsl
movsb
scas
push
and
fstpl
les
movsl
or
push
call
adc
aam
xchg
mov
mov
cld
out
sub
mov
addr16
sub
add
rclb
xlat
cmc
pop
fldt
xchg
mov
adc
mov
in
cmp
aam
gs
into
je
mov
sbb
std
inc
add
dec
push
jge
gs
pusha
shld
mov
mov
cmp
push
sub
push
xchg
mov
jmp
int3
jne
or
into
sub
dec
ret
inc
cmpsl
sub
mov
mov
testl
sbb
iret
loope
jns
jno
jg
xor
ret
cli
inc
lods
sbbb
ss
test
sbb
out
push
mov
pop
mov
xor
insl
dec
pusha
shl
cltd
nop
mov
call
jg
cmp
in
cmp
test
push
pop
xchg
pusha
or
pushf
mov
es
nop
ljmp
hlt
and
loopne
jae
adc
cli
int
and
repz
push
and
xor
mov
test
ja
out
sub
adc
cmp
pop
pop
sub
xchg
sti
and
mov
mov
cmp
fidivl
sti
into
cmp
filds
jmp
dec
mov
push
enter
lods
stos
hlt
adc
insl
je
xor
mov
cltd
dec
sete
ficoml
cwtl
test
jns
sub
jl
jnp
leave
fdivs
xchg
push
in
fldpi
cmp
int3
in
fwait
cmp
jb
adc
shrb
lea
andb
mov
xor
ja
cmp
mov
imul
repz
mov
jmp
lods
add
mov
sub
arpl
shl
xchg
shll
pusha
xchg
sti
or
ficoml
imulb
dec
xchg
js
addr16
test
and
and
ror
jo
nop
iret
mov
add
sub
mov
imul
or
push
repz
ret
mov
notl
adc
stos
lea
jg
pop
jne
pop
bound
xor
jae
sub
xchg
jl
shll
sbb
ljmp
pop
xor
inc
lods
repz
push
inc
cmpsl
and
mov
rclb
cld
and
das
ret
add
and
sub
test
es
rcrb
xchg
in
xor
and
jo
addr16
movsb
sub
ss
cmp
lcall
fidivs
mov
sbb
fimuls
cli
sti
add
sbb
fcmovnb
inc
int3
repnz
sahf
fisubl
mov
push
cltd
jl
cmp
jne
sub
ljmp
and
dec
xorl
unpcklps
add
sub
mov
and
repnz
ljmp
sbbb
cld
push
repnz
adc
push
inc
sbb
popf
gs
repnz
pop
xchg
repz
test
cwtl
movsl
and
test
mov
jne
pusha
test
lds
arpl
shlb
fxch
ljmp
sar
in
fisttpl
lds
pop
fildll
repnz
mov
mov
shrl
push
mov
xchg
cltd
or
aad
and
jmp
aam
mov
lods
lods
mov
mov
gs
aaa
fstp
mov
aas
push
jecxz
push
sub
xor
aas
in
and
and
fisttpll
or
clc
cs
jp
leave
mov
or
cmp
gs
dec
inc
pop
mov
movsl
mov
cmc
jmp
sub
sbb
gs
dec
inc
pop
mov
movsl
mov
cmc
jmp
sub
sbb
gs
dec
inc
pop
mov
movsl
mov
cmc
jmp
fnsave
add
jns
dec
inc
cltd
mov
movsl
adc
mov
xchg
mov
cmpsb
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
inc
insb
push
cmp
ja
lret
pop
dec
sub
repz
neg
xchg
mov
inc
push
ja
pop
sub
cmp
or
ss
call
neg
inc
xchg
cwtl
inc
into
push
mov
pop
sbb
jo
add
sub
call
imull
sar
frndint
sbb
cmp
sbb
sub
iret
fldenv
mov
xor
jo
mov
ja
rorl
imul
cmp
cmpsl
clc
cmp
lret
pop
push
add
aaa
or
lock
aad
add
pusha
adc
test
les
lods
clc
imul
leave
aaa
xlat
pop
ljmp
push
ja
and
or
insl
push
sbb
aaa
popf
fnstcw
xlat
xor
mov
mov
cmpsl
pop
sbb
cmp
subl
neg
mov
mov
cmp
in
stos
js
sbb
push
fbstp
loop
aaa
repnz
push
pop
addr16
pop
pop
sub
cmp
or
mov
call
mul
xchg
stos
push
push
push
xor
lea
inc
jge
pop
stos
mov
out
mov
cld
icebp
icebp
and
xor
add
sbb
jp
push
popa
sub
lcall
lret
in
ret
sbb
or
xor
fs
cmp
or
sbb
call
neg
xchg
mov
inc
push
ja
pop
sub
cmp
or
sbb
call
neg
xchg
mov
inc
push
pop
mov
dec
adc
daa
mov
out
in
into
dec
add
add
mov
inc
or
int
mov
xor
sti
mov
ret
pop
inc
pop
lds
shlb
mov
jle
jae
scas
cmp
test
or
cmpsb
jg
data16
add
cmp
push
les
push
mov
push
mov
cmp
pop
ds
sbb
add
push
xchg
add
in
sub
decl
inc
or
test
mov
shll
dec
loopne
mov
add
or
cmp
and
ljmp
jb
repz
call
push
popa
sbb
das
pop
fstpl
mov
fimull
cmpsb
pop
mov
mov
sbb
dec
outsb
xchg
cmp
jg
push
and
xor
fwait
sbb
mov
xchg
out
mov
into
loope
mov
and
in
rolb
xor
xor
and
inc
push
mov
mov
xchg
jle
out
mov
in
sub
lock
or
and
and
sbb
roll
fisttpll
in
inc
fsub
std
sbb
mov
and
lcall
pop
je
xor
fs
cmp
addr16
ljmp
lret
repnz
flds
cmp
test
cmp
ljmp
jecxz
inc
jb
arpl
fistpll
pop
adc
ljmp
addl
sbb
adcb
jmp
sbb
jmp
cld
mov
sbb
sbb
mov
and
fisubrl
push
imull
sub
enter
adc
es
mov
push
addb
mov
add
or
pop
inc
into
arpl
jg
sub
loopne,pt
or
mov
and
or
push
loope
dec
pop
sahf
sbb
jbe
mov
lahf
fsubl
dec
sarb
ret
cltd
xchg
arpl
mov
aaa
scas
jae
adc
movsb
jnp
and
adc
stc
dec
cmpl
pop
mov
das
xchg
adc
aaa
add
lock
arpl
mov
imul
dec
mov
mov
mov
mov
in
loop
cltd
xor
or
cltd
js
push
mov
nop
push
daa
ss
pusha
mov
lods
subl
or
sub
inc
test
aaa
lods
lea
dec
cmp
mov
std
subl
pop
insb
ljmp
cmpsb
and
add
loope
adc
test
sub
push
jo
aad
pushf
mov
add
pushf
pop
sbb
popl
scas
push
push
roll
pop
cwtl
or
xchg
lret
stc
in
mov
sbb
inc
xchg
mov
movsb
and
pushf
mov
xor
and
jo
and
inc
jle
clc
dec
insb
lcall
xor
cmp
xor
jbe
jae
push
cli
fwait
sub
pop
dec
and
movsl
pop
jns
mov
or
into
out
mov
mov
or
mov
dec
mov
cmp
bound
xlat
dec
push
add
addr16
pop
jns
arpl
cmp
popf
pop
xorb
inc
sub
leave
out
je
or
stos
mov
xlat
xchg
dec
mov
fstl
rorb
adc
cmpsl
xor
xor
lds
repz
sbb
mul
ss
lock
jno
mov
cmp
movsl
lret
xchg
rorb
stc
pop
mov
push
pop
pop
or
loop
cs
sbbb
sub
outsb
inc
scas
scas
call
fdivr
and
push
loopne
and
cmp
xlat
xchg
stc
dec
or
dec
and
and
repnz
insl
arpl
sarl
jp
xchg
jae
lret
repnz
xchg
es
scas
ljmp
pop
jns
aam
cmp
adc
stos
pop
jb
pop
jb
imul
in
dec
cmpsb
dec
cld
mov
xchg
inc
push
mov
out
fs
jecxz
fisubl
mov
shll
jmp
stos
mov
lret
adc
jnp
xchg
xchg
adc
clc
adc
dec
inc
sahf
adc
fldenv
add
dec
sti
mov
in
pop
in
sahf
fs
mov
xchg
fisttpl
sbb
xor
loopne
fnsave
lcall
lcall
loop
jae
jecxz
lret
div
lods
cmp
pop
xlat
rclb
insb
mov
jmp
xor
rcr
fdivrp
jne
jge
lea
add
fnsave
test
sub
orb
in
xchg
roll
inc
shl
ret
and
lea
ret
dec
and
shlb
xor
outsl
dec
pushf
sub
push
aas
lcall
mov
jne
cmp
ja
or
inc
mov
ljmp
aad
push
daa
leave
push
dec
sti
jns
cli
cli
jo
lahf
xchg
push
fwait
cmp
adc
lahf
and
sub
sub
int3
cmc
fwait
int3
inc
pop
push
sbb
hlt
cmp
mov
stos
sti
or
xchg
dec
adc
xor
inc
sarl
nop
inc
jbe
dec
mov
test
sub
iret
and
lods
xor
cmp
cmp
add
push
hlt
adc
mov
mov
jnp
scas
in
jmp
rdpmc
lea
data16
cmp
inc
or
mov
mov
test
adc
mov
daa
cmp
bound
mov
sahf
pop
xchg
ficompl
mov
push
stos
cmp
push
orl
rorl
xor
loope
xlat
adc
xchg
adc
adc
loop
test
xor
out
dec
sub
add
mov
sub
jns
sbb
inc
mov
or
dec
mov
or
mov
mov
mov
sub
out
add
daa
jmp
push
xor
stos
sbbb
xor
ficompl
xchg
mov
inc
mov
push
stos
cwtl
push
in
mov
outsl
xor
lock
mov
pop
and
stc
inc
sub
push
pop
xor
std
dec
shr
ret
push
push
movsl
and
mov
mov
sub
mov
xlat
cli
sub
aaa
popa
es
push
inc
scas
aam
test
jno
push
or
jle
sub
mov
pop
mov
insb
add
scas
dec
mov
mov
fdivp
iret
inc
and
shll
mov
ja
xor
and
jle
jle
test
cwtl
mov
fidivrs
shrb
ret
lret
repz
fnstenv
push
push
fidivrl
mov
fwait
xchg
aas
jmp
xchg
sub
in
insl
push
dec
pop
push
inc
and
cmp
push
adc
mulb
jl
pop
xor
xchg
sub
ret
stos
sub
jb
ret
mov
fimull
push
pop
sub
shll
sub
jle
shr
jo
test
in
pop
dec
adc
jae
adc
imul
addb
andb
lahf
out
test
fs
jp
insl
insl
movsl
adc
jmp
outsl
pusha
aam
stc
les
mov
and
pop
adc
out
fldt
lods
or
enter
dec
pusha
pop
push
pop
in
mov
loop
mov
xchg
pop
into
roll
out
push
mov
lcall
xchg
inc
xchg
add
sub
ret
pop
fcmovnu
xchg
sbb
dec
or
cmpb
lods
or
movsb
movsb
cmc
inc
cmp
mov
scas
push
fs
icebp
in
dec
adc
std
hlt
mov
movsb
inc
out
dec
add
fiadds
push
loop
int
ds
push
xor
sub
or
roll
xchg
ror
lock
in
mov
lret
xlat
lds
sti
std
lret
into
sbb
popf
mov
mov
fcomps
insl
mov
pop
rclb
jno
xchg
mov
cmpsl
ficoml
je
pop
movsl
push
xor
scas
int3
or
cmpsl
pop
or
lcall
jo
push
mov
call
rcrb
aaa
mov
xchg
loopne
daa
cmpsl
pop
fsubp
test
mov
loopne
mov
pop
mov
lret
xor
mov
mov
mov
push
pop
jno
cwtl
int3
enter
loopne
clc
das
test
imul
dec
insl
aaa
adc
cld
pop
scas
fldcw
imulb
js
sub
pop
aam
adc
sub
adc
test
lret
mov
int3
popf
stos
mov
xor
xchg
push
incb
insl
jl
mov
push
gs
inc
dec
inc
stos
subb
sbb
mov
or
fwait
cli
inc
sbb
stos
ja
dec
insb
dec
loopne
div
adc
push
popa
sub
xchg
and
pop
adc
xchg
in
add
push
mov
loopne
inc
cmp
pop
or
in
sub
inc
xlat
mov
nop
mov
lods
sti
scas
int
fidivrs
and
repnz
or
repnz
dec
sarb
pop
shll
test
inc
and
scas
jns
mov
push
fiaddl
add
jo
movsl
xor
cmp
mov
stc
adc
xchg
popa
fistpll
cmp
stc
xchg
pop
pop
out
int
inc
jecxz
jge
ss
leave
movsb
invd
pop
add
jp
sbb
adc
xchg
movsl
xor
cld
shll
xor
push
std
movsl
dec
bound
and
lods
insb
loopne
sub
inc
int
push
scas
sbb
jecxz
ret
shl
ljmp
mov
je
inc
xchg
icebp
bound
adc
sbb
jb
push
enter
and
dec
neg
fidivs
cmpsb
jo
das
loope
cli
pop
mov
xchg
and
cli
sbb
sahf
dec
mov
sbb
xor
orl
mov
xchg
nop
inc
cmpsb
push
pusha
pop
rorl
fs
push
out
sbb
movsl
mov
inc
imul
popa
sub
stos
xor
leave
stc
mov
lret
jl
cmpsb
mov
push
hlt
movsl
fildl
int
pop
pushf
xchg
sub
shlb
push
mov
leave
and
es
xchg
popf
push
ret
sbb
out
pop
xchg
add
pop
jne
mov
mov
or
out
and
loope
mov
test
or
dec
mov
xchg
jecxz
pop
loopnew
mov
stos
mov
into
jbe
dec
mov
stc
push
dec
or
xor
lret
push
aas
push
popf
lret
jecxz
jb
cmp
ja
test
popa
dec
mov
aaa
ret
sbb
es
outsb
inc
xor
xor
orl
push
cs
cmp
aas
addr16
dec
clc
mov
adc
sub
dec
mov
jae
push
ss
sub
mov
ss
clc
sub
imul
xchg
mov
xor
mov
inc
data16
repz
xchg
pop
adc
shrb
std
sahf
cmpsl
dec
add
xchg
adcl
mov
stos
cs
cmpsl
push
les
fstl
cli
roll
aaa
loope
jno
jge
ljmp
push
inc
or
adcb
adcl
aad
out
stos
inc
scas
xor
add
cmp
nop
lea
mov
out
or
sbbb
or
bound
dec
jl
sub
push
pop
adc
jp
sub
sub
rcrb
inc
mov
sub
xchg
cmp
decl
lds
outsl
in
sbb
into
jge
jecxz
rcrb
pop
sahf
adc
and
rorb
jmp
or
imul
nop
rcr
pop
adc
mov
hlt
cmpsb
lahf
aas
movb
push
rorb
mov
ss
adc
loope
addl
jge
int
aaa
loopne
or
repnz
clc
and
dec
sbb
outsb
pop
push
int
pop
fbstp
mov
addl
movsb
xlat
cltd
pop
dec
push
dec
dec
cmc
mov
nop
sbb
dec
xchg
filds
sbb
scas
jp
cmp
idivb
stos
mov
and
sbb
negl
xchg
cwtl
daa
mov
ja
mov
pop
aam
loopne
repz
mov
pop
mov
popa
aad
in
push
sub
inc
cmc
add
daa
jge
mov
sub
sub
xchg
bound
clc
push
sub
repz
sbb
fists
jmp
ret
xchg
inc
arpl
mov
pop
aam
ljmp
cld
imul
push
pop
ss
pop
adc
or
fs
push
insb
cmp
sub
es
test
xorl
mov
inc
lahf
enter
aaa
pop
cltd
nop
push
cmpsl
inc
scas
xchg
lea
stc
cld
scas
mov
and
cmpsb
jmp
fsubrl
cmp
fwait
or
cs
into
lahf
outsl
stos
sarb
adc
int
lock
mov
insb
scas
hlt
inc
movsl
mov
shll
pop
sbb
cmc
ficoml
adc
mov
lds
cmpsl
pop
sti
rcrl
push
test
pop
mov
xor
pop
andl
jmp
xchg
ljmp
jo
xchg
lret
pop
call
sti
imul
or
les
outsb
shlb
daa
fildl
push
stc
add
out
sbb
fstl
xorb
stos
ficompl
cmpl
sbb
cltd
xor
cmp
inc
mov
push
jb
or
cs
xlat
inc
adcb
adcl
jle
jnp
cmp
or
jmp
adc
push
push
mov
jle
nop
mov
out
sbb
sub
xchg
or
cmp
addr16
and
sub
dec
and
and
inc
stc
mov
jmp
ja
dec
inc
aam
dec
js
add
cwtl
cmp
mov
adc
cmovge
leave
add
jmp
movsl
push
pop
and
testl
inc
inc
mov
inc
in
testl
add
sbbb
pop
je
stc
jecxz
scas
inc
inc
sbb
lock
jae
lret
je
es
imul
inc
jae
out
aas
push
mov
mov
mov
xor
lret
xchg
pusha
ss
inc
hlt
scas
loopne
stc
ret
mov
and
xchg
add
leave
test
fimuls
addl
push
addr16
or
and
xchg
dec
adc
inc
in
mov
pop
add
xchg
movsl
dec
add
shlb
je
ret
and
insb
inc
ret
and
xchg
inc
push
add
and
push
push
stc
fisttpll
daa
mov
pushf
and
push
sbb
push
push
sbb
cmp
dec
xchg
mov
adc
pop
or
fldl
je
cs
xchg
sbb
clc
loope
mov
inc
test
cmpsb
pop
mov
add
mov
incl
daa
in
daa
or
mov
leave
js
mov
lods
loope
and
out
enter
rclb
test
test
aaa
mov
dec
cmp
mov
xor
lahf
xor
and
les
and
xor
jnp
arpl
test
neg
fcom
pop
movsl
push
pusha
scas
sbb
cltd
ficoml
xor
outsb
mov
push
and
lock
jle
inc
pop
imul
test
add
hlt
pop
xlat
xchg
mov
push
xchg
sahf
and
xlat
push
int3
push
pushl
fwait
xor
xchg
xchg
adc
nop
adcl
repnz
mov
dec
aaa
jb
xchg
int
and
aas
jo
jne
nop
pop
stc
sub
call
inc
xchg
sub
xchg
aam
sbb
push
sbb
push
std
inc
xor
stos
push
adc
cmpsl
addr16
push
cmpl
mov
incl
lock
sbb
jo
fidivrl
jb
mov
ds
in
push
lret
arpl
outsb
ss
das
sub
mov
xlat
pop
inc
add
mov
mov
iret
mov
add
mov
add
pop
jo
loope
pop
mov
fwait
jns
xchg
sbb
cmc
mov
cmp
cmp
lcall
aas
daa
pop
aaa
mov
cmc
stos
mov
pop
cmp
push
sbb
int3
sti
and
cmp
insb
into
dec
dec
stos
lods
decl
push
jnp
add
jle
sahf
mov
or
or
and
and
mov
js
lea
push
fstpt
cmc
leave
call
ret
fwait
out
push
dec
mov
inc
in
mov
dec
add
popf
jge
outsb
shl
out
jb
or
in
imul
mov
jp
pop
int3
push
lods
mov
xor
jne
ficomps
mov
push
ja
ja
push
jbe
jecxz
sbb
shll
int
testl
mulb
jae
xchg
lret
cltd
mov
mov
mov
lret
inc
sahf
xorl
mov
cmp
cmp
xor
xor
sbb
sbb
mov
lret
pop
mov
cmp
jmp
xor
jecxz
repz
xor
rcrl
sbb
sbb
imul
lods
leave
pop
xor
inc
xor
insb
mov
adc
sarb
and
call
cmpsl
fisubrl
or
sbb
or
xchg
bound
js
inc
mov
xchg
inc
mov
jo
jmp
jne
jae
jecxz
or
inc
xor
cmpsb
dec
int
fs
jnp
insb
mov
movsb
pop
pop
mov
mov
fstl
cmpsb
or
lods
mov
cli
cmp
inc
inc
jo
mov
cmc
cltd
fcmovu
sbb
xor
xchg
addr16
loopne
cmp
insb
push
adc
mov
fdivrs
loopne
pusha
lret
adc
add
and
pop
xchg
sub
dec
rclb
pop
movsl
cmpsl
imul
ret
repz
data16
or
outsl
lret
ret
jae
jle
addr16
pop
pop
push
leave
push
loope
adc
enter
ss
je
adc
stos
repnz
lret
rol
dec
outsb
in
sbb
sbb
int
mov
das
or
daa
sub
cli
adc
mov
jg
mov
push
into
pop
in
jg
sub
dec
imul
sti
daa
mov
daa
or
or
inc
adc
pushf
call
jmp
pop
jl
pop
in
imul
push
mov
addr16
in
shll
mov
sub
stc
xor
stos
std
iret
neg
jo
mov
cmp
and
mov
ret
xor
xchg
jmp
sahf
sbbl
int
jl
mov
imul
dec
negb
mov
mov
shl
in
pop
and
mov
add
mov
jge
and
mov
or
test
mov
movsl
data16
fdivs
rorl
addr16
addl
xor
xor
jne
call
into
cmp
pushf
cli
imul
stc
adc
xor
jl
call
test
fstps
jo
mov
addr16
insl
push
out
add
daa
dec
adc
xchg
jo
push
insb
leave
sbb
push
pop
pop
insl
mov
lods
data16
clc
xor
jns
insl
push
call
xchg
jmp
dec
or
sahf
or
les
gs
sub
test
dec
arpl
sub
nop
lcall
jo
stos
xor
insl
xor
sub
pop
nop
stos
insl
adc
sub
sbb
fnstcw
repnz
insb
ljmp
je
mov
in
fnstsw
adc
add
lcall
leave
sbb
ja
repz
jp
ja
out
jmp
sbb
dec
pop
sub
mov
fadds
jecxz
lcall
inc
data16
jae
jmp
jns
je
outsb
out
pop
inc
sahf
sub
xchg
ficoml
mov
xchg
inc
gs
and
adc
in
outsb
or
push
and
jl
or
movsl
mov
push
or
inc
push
popa
scas
xchg
leave
push
jne
and
bound
xchg
iret
and
push
lret
cmpl
push
mov
enter
inc
mov
mov
dec
out
add
pop
loope
and
ret
cmp
in
fs
jecxz
dec
and
loopne
push
mov
inc
pop
insl
inc
cltd
mov
xchg
out
in
shl
movsl
and
mov
or
xchg
jns
bound
fwait
xor
iret
ret
sub
enter
pop
cs
push
mov
jg
js
hlt
cltd
aaa
ret
cmp
sahf
cmp
xchg
adc
mov
xchg
mov
dec
ja
pop
sub
cmp
or
sbb
call
neg
xchg
mov
inc
push
ja
pop
sub
cmp
or
sbb
call
neg
xchg
mov
inc
insb
xlat
jbe
push
ja
xchg
pop
push
daa
or
sbb
jmp
not
xchg
jl
mov
lods
ja
pop
sub
cmp
mov
fadd
pop
xlat
push
dec
enter
shl
rcl
loopne
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
jae
arpl
push
sub
cmp
push
jnp
mov
fwait
shrl
mov
sti
jae
arpl
push
sub
xor
xlat
adc
psllq
ret
mov
xchg
stos
cmp
cltd
arpl
push
addl
ja
adc
repz
sar
hlt
cmpsb
enter
mov
lahf
ljmp
pop
sub
jl
sar
ja
mov
fldcw
sti
ds
sub
scas
les
lods
jno
xchg
dec
and
dec
scas
outsb
lret
sub
lret
jbe
or
push
cmp
or
fxch
pop
lock
push
negb
ret
es
ss
sub
adc
sub
lret
inc
or
dec
fdivl
dec
nop
add
sahf
cmp
jecxz
mov
test
push
out
js
mov
out
arpl
mov
dec
mov
insb
cli
addl
fwait
cmpsb
imul
test
mov
adc
and
push
lret
push
jmp
jg
or
push
scas
inc
xor
dec
and
mov
sti
repz
ret
repz
mov
xchg
push
pop
add
adc
aas
dec
xor
add
fisubs
movsb
loop
imulb
pop
pop
xor
push
push
and
push
sub
ret
faddl
xchg
cli
mov
nop
adc
arpl
es
jbe
and
imul
repz
fwait
shrl
mov
sti
jae
arpl
push
sub
xor
pop
adc
jnp
mov
fwait
shrl
mov
sti
jae
add
into
mov
jecxz
sarl
xor
xor
in
int
adc
jg
rorb
fnstsw
ja
mov
lcall
call
out
in
dec
pusha
pop
in
dec
icebp
addr16
nop
cmp
pop
dec
push
add
repz
outsb
repnz
jecxz
sbb
mov
add
dec
je
mov
mov
push
inc
repz
adc
sub
inc
inc
adc
mov
aas
push
xor
lods
rcl
xor
insl
push
mov
sbb
inc
sarb
sub
push
movsb
fwait
sub
sbb
push
xor
mov
mov
mov
ja
and
rcll
jl
pop
insl
frstor
dec
sbb
mov
in
pop
pop
mov
lret
push
testl
repnz
aad
ficomps
popa
dec
cs
test
aas
repz
lcall
sarl
les
subb
pop
es
jmp
loopne
dec
pop
xor
mov
jae
and
cmp
cmc
add
outsb
push
repz
inc
or
jae
subb
fiaddl
cmp
mov
cmp
add
push
mov
pop
add
xlat
sub
push
lock
out
subb
out
xor
cli
and
dec
daa
repnz
cmc
jae
jns
mov
and
sbb
fidivrl
pop
jg
jae
xlat
inc
fmull
ljmp
in
adc
mov
add
bound
mov
sub
cmc
ds
lahf
dec
movsb
enter
insl
sub
dec
push
mov
mov
int
cmpsb
stos
sbb
enter
out
cmpl
sbb
add
cld
mov
vpshld
stos
testl
or
xor
xor
cmp
scas
movsb
loop
std
adc
jmp
data16
xchg
lods
lahf
pusha
jecxz
into
pop
sbb
push
mov
and
mov
push
jle
stos
pop
cmp
test
cwtl
leave
dec
pop
mov
xchg
inc
xor
pusha
mov
jle
cmp
mov
in
pop
in
sbb
pop
mov
nop
test
and
pop
aam
push
pop
lahf
out
ds
xchg
sub
into
mov
sub
jge
movsb
sub
jbe
jmp
out
jge
and
cmp
pop
lea
cmp
pop
xchg
sbb
sub
test
mov
mov
xchg
or
js
sbbb
rcrb
rolb
cmp
push
sbb
xor
test
insl
xor
mov
inc
pop
xchg
add
xchg
mov
mov
xor
push
or
cmp
pop
pop
ret
std
lds
addb
lods
dec
push
divl
dec
xchg
pop
adc
stos
fdivs
cmp
andl
and
adc
lock
cmp
adc
jns
add
mov
jle
daa
mov
pusha
jg
mov
push
inc
mov
test
movsb
sub
or
mov
insl
xor
xor
hlt
gs
and
fdiv
jnp
cmc
bound
sub
mov
mov
in
mov
decb
iret
xor
cwtl
and
negl
xlat
lods
adc
ja
sbb
jmp
subb
xchg
add
jl
inc
int3
leave
and
add
les
adc
popa
lret
cs
lea
cmp
test
xchg
pop
sbb
das
pop
and
push
mov
cmp
pop
jb
pop
sahf
inc
sub
or
mov
inc
and
out
jge
xor
dec
jg
xchg
cmp
in
call
push
mov
aas
rclb
xor
lcall
je
shll
rorl
mov
insb
sub
xchg
dec
dec
mov
mov
lret
cmpsb
xchg
scas
icebp
test
mov
pop
shrb
sub
dec
loope
mov
ret
enter
mov
add
aaa
testb
scas
hlt
xor
in
xchg
xchg
aam
fs
aam
and
inc
sbb
and
jbe
clts
jmp
pop
inc
ret
pop
popf
repnz
lods
add
loopne
loopne
mov
cmpsl
mov
xor
inc
adc
in
jecxz
cmp
out
jg
mov
fsubrl
pop
hlt
sahf
loope
lret
lds
out
dec
dec
lret
popf
inc
inc
xor
and
push
or
inc
shll
or
sbb
mov
notl
xchg
aad
xor
mov
xchg
dec
and
xchg
mov
nop
bnd
popf
jbe
mov
subb
aam
cli
push
push
loop
mov
lods
subb
scas
mov
dec
ds
jo
int
fcmove
lret
fidivl
test
xchg
xor
jo
fwait
inc
xor
cli
mov
sarl
outsb
fistpl
repz
inc
bound
xchg
mov
xor
sbb
lods
jae
out
rorb
and
cmpsl
mov
push
mov
stos
add
add
or
fcomps
das
push
mov
and
dec
jecxz
lods
jb
jge
xchg
test
jg
jo
add
add
lock
imul
push
lcall
jb
or
pop
outsb
out
out
or
xor
sub
loopne
xor
mov
and
and
pop
repz
add
test
xchg
and
les
jo
jns
and
inc
mov
loopne
lock
sbb
sahf
jmp
add
daa
xor
push
stos
mov
xchg
ret
adcb
adc
and
outsb
aad
or
aam
cli
popa
les
mov
mov
pop
hlt
mov
ds
sbb
jae
add
jno
sbb
fwait
cs
sbb
jge
outsl
pop
cmpsb
push
ljmp
dec
jecxz
ds
jb
and
aam
test
ret
fbld
cmp
mov
xlat
repnz
iret
test
mov
ror
ret
cmp
sub
adc
aas
jae
call
sub
outsb
dec
cmp
mov
clc
ret
dec
cmp
mov
stos
data16
enter
mov
push
mov
adc
sub
sub
rol
or
orb
arpl
fstpl
loopne
jmp
hlt
loope
xchg
sub
addb
jbe
mov
and
adc
sbb
adc
adc
iret
dec
bswap
mov
ds
enter
xchg
sahf
xchg
iret
lret
in
addr16
mov
adc
hlt
in
lods
icebp
icebp
mov
mov
sub
adc
ljmp
xchg
jo
cltd
mov
or
mov
repz
mov
cld
pop
fs
popf
shll
out
sbb
push
sub
js
addr16
jecxz
stc
add
fiaddl
outsb
xchg
xchg
test
fsubs
aam
repz
mov
addr16
shrb
cmpsl
test
sub
hlt
lods
out
scas
lods
insb
jp,pn
mov
int3
in
fadd
mov
cld
and
divl
xchg
xor
sbb
cli
xcrypt-ofb
cmpsl
out
cld
mov
fstl
jmp
ja
dec
lahf
jbe
lret
xor
out
dec
inc
mov
jmp
aaa
inc
mov
push
mov
test
sub
insb
jae
sub
lods
sub
inc
sti
in
inc
cmp
es
fists
je
sbb
and
sbb
fdivp
xchg
nop
pop
push
movl
iret
adc
enter
cmpb
in
adc
aam
mov
sub
das
adc
sarb
scas
and
nop
stc
cmp
call
pop
xor
pop
in
jns
sub
lds
hlt
sahf
cmpsl
or
scas
into
pop
adc
sbb
xchg
inc
mov
dec
mov
mov
cmp
sbb
shl
clc
pop
popa
jbe
sub
fists
xor
mov
xor
xchg
add
aad
jecxz
cmpsl
cli
jl
mov
push
sbb
repz
out
mov
mov
clc
popa
dec
xchg
outsb
pop
sbb
lret
mov
sbb
mov
clc
mov
adc
stos
in
mov
sub
cld
mov
mov
nop
mov
scas
sbb
les
mov
push
xchg
sub
inc
sub
hlt
test
mov
sub
pop
jns
jae
psubusw
or
mov
daa
lock
fsubrs
cmpsb
cmpsl
fimull
mov
xchg
dec
stos
lret
fiadds
out
sbb
push
js
jle
push
fadds
fidivs
nop
xor
in
push
dec
mov
fisubs
pop
push
mov
and
add
mov
dec
inc
loop
xchg
push
jecxz
xor
cmpsl
rcrb
fwait
mov
lret
push
mov
sarb
repz
repz
out
cmp
loope
loope
ret
loopne
roll
nop
mov
pop
cmpsl
fildl
pusha
sub
enter
mulb
xchg
push
lcall
mov
xchg
lret
mov
inc
outsb
pop
xor
or
push
dec
mov
jo
jnp
mov
loop
ss
cmp
inc
loope
ret
sbb
dec
xchg
sub
xchg
ror
in
xlat
fstps
adc
sbb
into
movsb
pop
sar
cld
jle
and
ret
pop
aam
inc
cs
xor
pop
push
cmp
out
adc
mov
cmpb
movl
sbb
pop
inc
xor
sub
insb
xlat
movsb
mov
movsl
push
add
add
push
inc
stos
gs
cmp
repnz
rcr
xor
out
xchg
sub
sub
cwtl
mov
push
das
data16
mov
insb
mov
or
mov
test
iret
push
lret
dec
in
es
fwait
iret
fcompl
ret
xchg
push
dec
test
xchg
push
stc
js
loop
inc
mov
int
push
xchg
and
push
pushf
ljmp
xchg
mov
sub
dec
idivb
insb
imul
je
or
outsb
inc
sub
sbb
rclb
test
pop
in
mov
bound
not
sbb
or
cmp
int3
adc
std
out
xor
mov
jne
push
pop
adc
xchg
dec
insl
xchg
out
mov
xor
xorl
inc
push
mov
jge
decb
mov
push
push
ret
in
mov
adc
gs
mov
push
inc
add
aam
in
cmpsl
out
adc
in
jp
test
inc
pop
jl
add
adc
mov
xchg
pop
imul
out
test
decb
xchg
lgs
add
push
aas
adc
xor
push
add
inc
dec
or
nop
xchg
xorl
std
or
decl
cmpsb
add
pop
mov
clc
cmp
into
gs
push
icebp
test
das
xor
bound
xchg
sub
and
add
jge
fbstp
inc
lods
mov
cltd
push
pop
xor
push
pop
jns
repz
rolb
pop
cwtl
jl
xchg
aad
adc
cwtl
fistps
add
inc
ljmp
lret
pop
rol
and
or
inc
popa
jg
fildl
mov
mov
insb
adc
jb
leave
lea
es
daa
cmp
sbb
loop
cmc
cmp
push
push
pop
pop
shll
sbb
or
inc
xchg
bnd
and
repz
ror
xor
shr
mov
sbbl
mov
pop
hlt
in
arpl
dec
mov
pop
lret
cmp
js
fidivs
add
or
push
mov
jns
mov
cmp
stos
icebp
and
push
pop
in
idivb
insb
dec
leave
pop
movsl
add
sub
mov
insl
xor
movq
jbe
cmpsb
neg
lret
lcall
mov
sbb
not
aad
pop
loop
mov
sub
mov
jle
test
mov
and
cmp
cmp
push
ret
cltd
mov
in
jbe
sub
sub
mov
inc
jnp
cmp
cmp
dec
ljmp
xor
cs
imul
xchg
or
aas
pop
fildl
stos
mov
cmp
dec
mov
xor
hlt
std
in
imul
or
push
sbb
jmp
jnp
xchg
ret
adc
adc
pop
xchg
ja
shrl
rolb
lea
mov
or
xor
lret
ret
push
sub
lret
mov
or
xor
xchg
mov
push
and
inc
push
mov
sbb
imul
roll
mov
mov
sub
mov
jns
cmpsb
leave
inc
push
adc
adc
sar
lahf
adc
fldenv
dec
jae
jmp
lea
cvttps2pi
repnz
out
fsqrt
push
inc
xlat
mov
hlt
or
jge
lahf
mov
xor
mov
xor
mov
sbb
std
cmpb
xlat
add
sahf
lds
mov
lods
adc
jmp
xchg
adc
push
icebp
gs
out
push
add
and
mov
movsw
mov
mov
adcb
xchg
add
bound
adc
fcmove
lret
jb
adc
insb
insb
addb
iret
insb
mov
jg
dec
jp
inc
xchg
sarl
sbb
ret
and
push
and
xor
xchg
xchg
in
xor
mov
jl
mov
repz
insb
movsb
outsb
daa
xlat
out
xor
sbb
or
in
inc
cmpsl
rcr
cmp
popf
mov
inc
jo
mov
mov
in
sbb
adc
mov
xchg
lods
sbb
arpl
mov
scas
push
ds
cmpsb
xor
scas
jle
inc
stos
xor
dec
lds
imul
out
rorl
mov
mov
jb
daa
xchg
add
inc
push
and
in
daa
cmc
push
push
hlt
mov
pushf
mov
lds
clc
xchg
out
push
dec
stos
dec
adc
push
sub
test
insb
or
xor
cmp
jnp
sub
mov
jl
add
stc
push
sahf
and
inc
int
pop
cmp
cmp
cmp
roll
enter
and
pop
addr16
mov
or
inc
push
mov
fmuls
jmp
outsb
push
fs
lods
pop
mov
test
out
lods
imul
lret
in
test
mov
dec
lahf
inc
xor
mov
push
xchg
jg
fildl
sbb
jg
jbe
pop
int3
sbb
into
ror
call
xchg
sbb
inc
mov
mov
jae
xchg
cmpsl
out
into
ljmp
setns
jo
stc
mov
push
aas
push
jnp
xchg
pop
add
cmp
movsl
js
imul
and
lret
in
xor
std
cmp
jecxz
insb
ror
pop
sbb
ret
push
sub
in
or
mov
or
inc
cpuid
pop
lret
adc
and
fldt
cmp
sub
daa
out
jp
push
xchg
mov
sub
std
adc
fs
jle
es
dec
jp
jno
inc
out
dec
lods
daa
scas
fsubp
sbb
dec
fisttps
mov
mov
outsl
test
and
aam
push
and
cli
and
stos
xchg
addb
and
lret
jno
and
push
jns
inc
sub
call
mov
mov
fistl
shll
jo
test
pop
repz
dec
lock
pushf
scas
xchg
ljmp
in
jne
mov
adcb
jne
mov
adc
ret
repnz
in
mov
or
push
adc
sbb
push
movsl
jbe
lock
and
or
sub
cld
push
add
mov
mov
xchg
adc
lret
adc
ret
test
mov
pop
and
cmp
lds
adcl
fists
addr16
adc
call
les
lods
imul
or
xchg
outsb
mov
fisubrs
sbb
dec
shll
call
add
test
fcoms
jnp
and
push
loopne
pusha
in
test
push
out
jmp
lods
negb
imul
mov
fidivs
pop
roll
lret
addl
fwait
mov
rorl
pop
mov
out
cmp
cmp
mov
or
xchg
jmp
xchg
out
mov
out
insb
jecxz
aam
incb
imul
mov
dec
mov
ss
inc
pop
jbe
cmp
push
dec
arpl
insb
out
arpl
in
or
fldcw
pop
bound
add
inc
push
loop
cld
mov
push
sub
jmp
add
ja
push
pop
sub
xchg
enter
cmc
nop
pop
jns
or
loopne
push
mov
insb
sub
in
cmpsb
mov
pop
in
es
in
inc
pop
aaa
sahf
jno
sbb
jo
xorl
and
shrb
pop
gs
out
ljmp
arpl
sbb
jmp
inc
xlat
lahf
adc
inc
inc
cmp
cmpsb
push
push
gs
xlat
fsts
push
cmp
adc
popa
add
lock
xor
aad
sbb
mov
lds
xchg
cmp
jne
mov
test
xchg
stos
cmpsl
fstpl
sbb
cmp
stos
mov
mov
movsl
lods
mov
sub
fs
cmc
mov
xchg
jmp
out
mov
stc
popa
stos
in
scas
in
popf
aad
jp
and
or
xlat
fcoms
xlat
inc
cmp
add
scas
and
inc
out
dec
insb
xchg
dec
hlt
adc
mov
jl
test
or
daa
in
lahf
jmp
cwtl
je
cld
mov
mov
pop
hlt
mov
imul
je
shrb
pop
push
cmp
dec
xchg
test
dec
addr16
or
iret
sub
rcpps
dec
cli
popf
inc
bound
shll
jecxz
adc
mov
pop
xchg
iret
out
movq
aad
inc
xor
inc
addr16
sbb
add
cmc
fwait
arpl
push
push
inc
lock
push
cmp
les
sub
arpl
int
mov
xor
cwtl
lret
loop
cld
jo
push
cld
fs
adc
call
jp
inc
xchg
ret
pushf
jno
xchg
cmpsl
inc
cld
pop
loop
xor
jg
in
scas
cmpsb
nop
cmp
xchg
mov
sbb
push
pop
mov
rcl
bound
cmpsb
je
push
stc
adc
adc
aas
gs
dec
ss
ja
jns
mov
jo
jecxz
std
test
jae
int3
mov
mov
call
test
sbbl
cmp
and
inc
and
loopne
lahf
adc
mov
xchg
inc
and
mov
fs
neg
aaa
stos
adc
sbb
push
jno
out
aas
adc
hlt
cld
jmp
adc
out
loop
mov
int3
imul
jmp
xlat
jno
lahf
or
popa
movsl
push
xlat
xchg
test
xchg
pop
adc
mov
mov
loopne
mov
cmp
sti
push
mov
push
outsl
jl
xchg
mov
cli
mov
cltd
dec
cwtl
pop
sbb
test
fists
repz
arpl
test
mov
mov
test
inc
enter
lods
fcomi
insb
mov
test
ret
lret
adc
mov
repz
loopne
adc
in
cli
pop
jno
popa
lds
cwtl
std
pop
mov
out
iret
lods
cs
shrl
lret
cs
dec
jl
cld
xchg
push
pop
adc
aaa
add
dec
aas
push
push
cmp
mull
into
push
pusha
ud0
add
mov
mov
es
jl
mov
mov
push
fcomp
push
pop
and
fcoms
dec
frndint
mov
mov
popf
fs
int3
sub
lock
into
and
out
sub
adcl
jno
stc
ja
into
imul
imulb
out
pop
and
mov
mov
cli
adc
ja
xchg
ljmp
pop
cld
cmpsb
adc
out
jbe
js
mov
fidivrs
adc
inc
shr
cs
mov
ss
arpl
popf
nop
negb
sub
stc
lock
sbb
in
add
int
imul
test
es
or
ret
xorb
jge
mov
push
daa
div
sub
repnz
push
rclb
mov
sbb
insb
inc
inc
cmp
dec
and
imul
repz
fwait
shrl
mov
sti
jae
arpl
push
sub
xor
pop
adc
jnp
mov
fwait
shrl
mov
sti
jae
arpl
push
inc
cmp
dec
and
adc
jnp
push
jecxz
shrl
mov
sti
jae
arpl
push
sub
xor
pop
xchg
jmp
jnp
je
xor
ret
int3
les
and
adc
add
mov
mov
cli
mov
sub
sbb
sub
jp
sub
pop
imul
mov
mov
lret
or
sbb
enter
imul
dec
jnp
mov
mov
ret
sti
cmp
jle
push
sbb
aas
sub
and
mov
push
repnz
xor
rcll
dec
shrl
out
push
dec
xchg
adcl
mov
andl
lcall
and
out
repz
jnp
sub
cmp
mov
xchg
sahf
stos
dec
rcrl
mov
jmp
enter
cmp
aad
dec
cs
sti
test
push
push
mov
scas
dec
xor
lret
cmp
sbb
push
lcall
cmp
sbb
push
addr16
jge
inc
stos
lret
sub
adc
lods
xor
sbb
xlat
or
rolb
mov
pop
push
stos
arpl
stos
pop
into
inc
add
cmp
loope
or
das
or
mov
jle
jnp
mov
mov
sar
and
xor
add
adc
bound
pop
pop
imul
out
dec
in
out
std
sahf
movsb
xchg
dec
sub
inc
fs
push
es
and
jmp
stos
sar
stos
mov
mov
sti
cmp
ja
jge
push
pop
and
xor
push
dec
adc
fisttps
fcmovnu
jmp
sti
cmp
sub
sbb
or
jp
push
pop
imul
mov
mov
lret
or
sbb
sub
cmp
push
pop
imul
mov
ret
pop
loop
aad
int
mov
pop
jo
jge
fimull
push
lcall
mov
fdiv
xlat
mov
lret
xor
loope
push
jmp
sbb
or
mov
push
xchg
sbb
lods
push
mov
adc
sahf
cmpsl
pushf
fwait
sub
dec
ss
dec
out
sbb
ret
ret
movsb
inc
pop
mov
dec
pop
das
int3
mov
iret
inc
data16
lea
cmp
xor
push
sbb
pop
fisubs
mov
dec
jbe
mov
out
mov
ret
xchg
aad
xchg
xor
outsl
fstpl
mov
cmc
repnz
jmp
lahf
mov
and
out
push
lds
mov
dec
sbb
in
dec
lcall
pop
xchg
sahf
push
inc
sbb
dec
push
mov
adc
insl
addr16
jo
sti
xchg
int
lret
push
bound
mov
cmp
lret
je,pt
sbb
loop
shrl
adc
jne
loopne
sbb
mov
add
dec
cld
sbb
or
push
sub
hlt
cmp
pop
rcrl
jl
mov
push
test
cmc
cwtl
ret
jo
fucomp
push
mov
sbb
pop
nop
test
stc
ret
or
out
sbb
mov
in
adc
lcall
sbb
icebp
or
in
lods
pop
sbb
xchg
and
pusha
inc
dec
sub
jb
bound
sub
fwait
or
mov
std
adc
inc
cmp
jecxz
add
mov
sti
fisubs
mov
or
dec
popa
inc
and
jae
xchg
iret
mov
mov
xchg
das
dec
jecxz
stos
lret
cwtl
arpl
or
js
mov
xlat
dec
dec
mov
cwtl
jle
scas
sahf
daa
or
aaa
jno
loop
loop
outsl
imul
in
call
mov
fs
scas
sub
jo
lea
and
adc
mov
repz
jg
jp
mov
movsl
mov
push
call
call
inc
xor
outsb
stc
mov
jl
lcall
mov
test
pop
test
aad
je
and
xchg
or
jl
scas
mov
mov
sub
jl
popf
mov
testl
cmp
or
cmp
push
jge
xchg
int3
push
mov
xor
push
scas
mov
inc
adc
ror
jl
loopne
fists
and
in
orb
repnz
loope
push
icebp
in
divb
in
aas
cmp
mov
std
adc
mov
mov
enter
cmp
fisubl
cmp
push
dec
cli
xchg
ja
mov
sub
push
or
pushf
jno
push
pop
cwtl
cs
cmpl
mov
mov
rcl
push
push
mov
outsl
fldl
sbb
adc
idivl
inc
fdivrl
fs
mov
int3
mov
sbbb
sti
push
sbb
in
push
xchg
cmp
fstpl
adc
rolb
cs
imul
mov
je
out
icebp
clc
bnd
outsb
add
mov
push
cwtl
mov
xchg
mov
pop
sub
rol
lahf
frstor
enter
mov
js
xlat
divb
mov
insb
sbb
ss
jp
out
aas
push
xor
hlt
scas
aad
sub
clc
daa
xorw
push
lcall
inc
stos
mov
inc
rcrl
inc
xor
aas
sbb
test
xor
mov
pop
fwait
rol
mov
mov
scas
das
aas
jge
xor
cmpsb
xchg
sub
call
jl
in
lret
pop
mov
sbb
dec
cmp
adc
xchg
push
rcl
inc
sbb
rorb
or
mov
insl
mov
cwtl
mov
push
mov
xor
ret
repz
out
dec
ss
cs
mov
test
dec
in
ss
dec
imul
pop
dec
mov
and
call
fldl
or
rorb
clc
in
cwtl
scas
mov
mov
sbb
mov
dec
insl
jecxz
jp
out
stos
push
mov
loopne
mov
pop
lahf
mov
pushf
add
ja
xchg
hlt
mov
fimull
cmp
insl
jl
xchg
push
jge
add
jb
mov
cltd
xor
es
cmp
pop
rclb
cmpsl
xchg
inc
push
mov
sub
pop
iret
xchg
dec
dec
test
jnp
scas
test
sub
and
cwtl
jbe
mov
in
jmp
loope
jp
jbe
mov
jns
mov
pushf
xchg
int3
das
cs
pushf
push
jbe
imul
push
popa
scas
sti
stos
pop
adc
dec
fisubs
cmp
lret
sar
mov
inc
in
jp
insb
loop
sti
xchg
fldt
dec
cmp
xchg
mov
pop
aaa
aas
lods
cli
movsb
xchg
and
push
and
test
sti
mov
andl
or
push
sub
inc
sahf
adc
aaa
cmpsl
in
add
repnz
mov
cmp
loopne
add
adc
dec
aas
into
jns
push
iret
sbb
je
cmp
jno,pn
movsl
jle
adc
mov
fisttpll
pop
mov
sbb
jle
adc
sub
dec
push
inc
mov
mov
in
or
fidivs
push
jmp
inc
inc
add
add
xchg
dec
rcr
lret
test
mov
xor
lea
cli
cmp
push
ficoms
xchg
inc
pop
std
mov
mov
loopne
xor
movsb
iret
sbb
jmp
push
test
insb
cltd
add
mov
insb
lods
clc
imul
ret
sbb
out
xchg
sbb
adc
cmp
test
fnsave
add
and
filds
push
xor
or
jge,pt
fsts
aaa
adc
sub
mov
shlb
push
lahf
inc
xchg
data16
xor
mov
insl
sahf
mov
push
mov
xor
inc
lahf
add
push
jge
bound
add
dec
ds
pop
adc
std
inc
push
mov
jle
push
pop
movsl
lods
push
xor
sbb
pop
rcl
sbbb
mov
arpl
daa
add
sbb
mov
cmp
movsb
or
xchg
push
stos
sub
and
sbb
sbb
jecxz
xor
icebp
popl
jp
cmpsl
mov
mov
pop
scas
push
and
mov
and
pop
imul
daa
dec
cmp
mov
push
popa
or
call
fcmovnu
mov
dec
mov
xlat
jle
mov
imul
repnz
hlt
sbb
orb
std
pop
push
ret
int3
fcoms
inc
cmp
xor
iret
pop
inc
popaw
push
dec
out
mov
in
jp
cwtl
ja
in
xchg
dec
push
adc
stos
leave
dec
mov
test
out
sub
lds
xchg
ds
test
aaa
cmc
popf
ss
pushf
insl
and
inc
fwait
xchg
or
dec
incb
insb
stos
mov
or
clc
jp
sub
ss
xor
aam
aam
les
bound
fisubs
cmp
popl
inc
push
inc
shll
lods
loopne
pop
lods
in
addr16
add
outsb
fnop
ret
sub
inc
cmpsb
dec
jecxz
jp
fs
jg
pop
imul
ss
fwait
or
out
std
xchg
sbb
rclb
xchg
je
mov
rorl
mov
popa
mov
test
rcr
int
pop
and
ds
xchg
push
into
scas
addr16
xlat
stc
inc
daa
cmpsl
inc
mov
xor
pop
xlat
hlt
cmc
dec
mov
adc
mov
mov
pop
push
js
incl
leave
dec
rcll
mov
ret
jb,pt
adc
unpcklps
movl
je
dec
cmp
movsb
add
lea
in
and
shlb
test
push
push
pop
es
clc
xor
mov
inc
and
mov
movsl
aas
adc
test
jg
or
push
mov
jge
scas
lcall
push
ljmp
inc
lcall
mov
and
mov
clc
repz
add
push
xchg
pushf
mov
stos
rolb
lahf
sbb
bound
and
jge
ret
in
insb
lret
lods
xor
add
and
mov
fimuls
cltd
loopne
adc
and
cmp
and
or
cmc
cmc
ss
icebp
repz
cmp
jl
mov
mov
push
jecxz
cmp
xchg
arpl
scas
adc
mov
adc
pop
mov
int3
in
imul
cmpsb
out
cmp
cmpsl
pop
fsub
add
jg
rolb
icebp
lods
xchg
sahf
clc
iret
jg
push
outsl
cmp
inc
mov
xchg
pop
out
mov
sub
pushf
aam
fs
push
test
xor
add
repnz
adc
lds
outsl
xlat
das
xor
cmp
pop
add
inc
test
push
xchg
out
dec
shlb
test
adc
jne
inc
cltd
xlat
jnp
cmpsl
xchg
or
cmp
jecxz
and
adc
dec
and
pop
fidivs
les
mov
rdpmc
cmp
cmp
adc
jl
sbb
lcall
xchg
or
movsb
or
paddb
pop
fsubl
jg
sub
adc
inc
fs
push
and
xor
add
std
xlat
gs
push
idiv
pop
jge
insb
test
sub
cltd
pop
cmp
sbbb
iret
out
sub
mov
les
test
sub
js
icebp
lods
push
outsl
arpl
inc
dec
mov
mov
dec
ja
pop
inc
fdivs
mov
sbb
xor
sbb
pop
clc
xchg
nop
xor
adc
pop
aam
insl
cmp
and
cmpsl
insb
adc
and
inc
mov
add
add
scas
mov
sbb
je
lcall
xchg
sbb
pop
ret
movsl
in
adc
dec
lock
adc
loop
sti
es
dec
stos
in
mov
dec
lret
cmp
cltd
mov
pop
mov
dec
fs
mov
mov
adc
push
cmp
sbb
mov
xor
mov
in
mov
push
pop
and
sub
loope
test
insb
push
pop
testb
mov
push
mov
xchg
or
in
outsb
mov
ds
mov
mov
insb
jmp
and
jmp
pop
lret
pop
add
or
hlt
fwait
xchg
push
jl
in
enter
mov
outsb
pop
andl
icebp
pop
jbe
cld
push
pusha
out
xchg
out
jo
jecxz
jns
jnp
js
ret
lret
mov
xchg
and
mov
xchg
and
add
cmp
ljmp
iret
cli
xlat
mov
aaa
mov
cwtl
mov
dec
push
cmp
mov
lahf
out
pop
inc
fs
inc
adc
into
movsb
loop
fidivl
outsb
bsr
pop
lcall
inc
dec
scas
push
frstor
dec
mov
jmp
iret
sahf
imul
mov
repnz
mull
stos
ret
inc
aad
adc
pop
ds
push
sub
lods
inc
aaa
xchg
pop
push
iret
jae
fadds
ljmp
stos
adcl
scas
adc
dec
dec
mov
cmpsb
ss
roll
fsubrl
dec
and
loop
pop
mov
or
lds
mov
mov
gs
cmpsb
sub
inc
subl
jo
add
in
lcall
add
jae
addr16
push
dec
leave
dec
xchg
fnstsw
and
jnp
out
loopne
flds
sbb
jg
js
xchg
cli
enter
popa
ljmp
into
or
mov
inc
movb
inc
mov
test
scas
adc
ffreep
adc
xor
subb
rclb
xchg
pop
dec
sub
pop
cmpsb
xchg
insb
loope
fwait
insb
add
pop
lea
xor
cs
cmp
or
ret
xor
lret
les
fisubs
iret
inc
sub
xlat
xor
fstp
dec
in
in
xchg
jbe
xchg
repnz
popl
adc
mov
sbb
stos
out
mov
mov
fnstsw
std
jnp
or
in
lods
std
es
pusha
stos
jle
push
test
loopne
xchg
cmpsl
std
xor
add
clc
push
test
or
sub
add
inc
call
inc
pop
pop
pop
outsl
pop
mov
scas
and
sub
xor
or
jg
mov
scas
or
popf
test
push
jle
lret
loope
and
movsl
add
sbb
lcall
loope
insl
xor
aaa
rcrl
mov
sbb
sti
cmp
xchg
dec
sbb
xchg
cmp
les
add
sarl
jg
inc
push
jmp
or
stos
arpl
rcll
mov
sbb
inc
out
mov
lret
or
stos
aad
jge
xor
rcl
cmc
fwait
popf
jle
lcall
add
addr16
dec
fs
lods
pushf
aaa
lods
sbb
mov
add
outsb
arpl
inc
andl
fiadds
push
mov
out
shrb
mov
inc
mov
into
jmp
enter
inc
xchg
decl
pop
adc
popf
and
push
sub
movsb
fiaddl
outsb
mov
adc
inc
mov
sbb
movsl
mov
adcb
jo
or
and
cmpl
mov
mov
sarl
shrl
adc
and
xchg
pusha
call
and
cmpsl
aad
inc
xor
in
inc
pushf
sub
imul
xor
add
pop
xchg
dec
sbb
loopne
inc
cltd
aas
pop
test
add
mov
jecxz
push
cmp
enter
les
and
cmp
sahf
lods
xor
ja
sub
fistpl
add
iret
or
cltd
jle
xlat
pop
add
aas
mov
and
pop
leave
inc
mov
pop
loope
loope
in
sbb
xlat
arpl
push
cmp
jecxz
jg
cmc
jae
xchg
xchg
mov
mov
stos
add
mov
repz
cmc
fisttpl
xchg
sbb
add
mov
and
gs
add
push
gs
lods
cltd
adc
and
imul
aam
push
jns
lea
test
pop
jne
jge
leave
sbb
add
adc
dec
mov
loop
sub
lock
es
jg
in
mov
dec
mov
das
push
test
pop
pop
scas
lds
jne
arpl
mov
jmp
sub
data16
aad
int
and
icebp
cmp
mov
ds
jbe
or
push
out
popa
mov
xor
lea
stc
sahf
xchg
and
dec
jecxz
adc
cmp
aaa
pushf
mov
test
jbe
mov
xor
sub
push
ljmp
mov
and
pop
subl
outsl
jnp
hlt
mov
sbb
stc
ljmp
pop
mov
scas
lods
and
test
cmp
sub
pushf
sub
jg
xchg
push
sti
and
jmp
sub
jle
rcl
in
add
sti
lahf
int
cmpsb
jge
jb
in
dec
cltd
jp
mov
mov
mov
cld
mov
mov
les
addr16
and
arpl
xchg
imul
loope
andl
pop
mov
arpl
scas
out
cmpsb
and
jp
pop
cwtl
mov
sbb
xor
icebp
sbbl
adc
movsb
bound
fisubrs
fstl
cmc
icebp
add
mov
mov
pop
popa
pop
inc
inc
filds
sbb
add
lcall
js
in
add
jmp
jecxz
aas
xchg
pushf
inc
repnz
ss
mov
sub
pop
mov
xchg
cmovae
push
push
mov
push
addb
cmp
or
push
testb
sub
inc
or
mov
or
mov
xor
push
es
push
cld
data16
adc
fmuls
inc
cltd
popl
js
movsl
div
and
lea
inc
cmpxchg
and
dec
movd
out
es
xor
xor
xor
add
inc
pop
xor
enter
dec
cmp
pop
jbe
cmovle
and
xchg
pushf
call
pop
sbb
insb
bound
add
iret
and
mov
loopne
cwtl
sbb
sub
add
rorl
nop
inc
in
xchg
addb
mov
jae
cmp
cmp
push
push
test
pop
push
lgs
add
aaa
pop
mov
cltd
filds
mov
xor
fidivl
js
stos
xlat
inc
sbb
or
lret
and
int
out
fwait
xlat
outsb
add
and
roll
and
enter
lds
cwtl
inc
lret
push
fs
iret
js
imul
mov
stos
sti
lahf
inc
ret
cwtl
ss
repnz
inc
dec
xchg
add
scas
pop
nop
fmuls
sarl
xchg
cltd
popf
fldenv
int3
xchg
xchg
stos
mov
repz
jl
test
in
xchg
out
mov
xor
mov
out
jns
jns
cmp
jmp
hlt
push
sti
cmp
jbe
shll
jnp
fcoms
shr
sbb
lret
repz
mov
jb
push
adc
js
ss
jbe
and
lds
adc
stos
nop
hlt
js
dec
mov
shrl
push
call
rorl
loope
dec
pop
dec
mov
cmp
cmp
sub
ljmp
sbb
pushf
mov
aam
pop
dec
cmp
inc
fwait
scas
imul
pop
out
js
movsb
or
mov
cmpb
mov
mov
cmpsl
inc
mov
push
ret
or
add
jl
pop
fs
cmpl
fstp
enter
and
in
xchg
jge
xor
popa
stos
dec
leave
in
push
xchg
mov
loopne
jo
inc
inc
ljmp
dec
movsb
mov
dec
xor
mov
jecxz
adc
mov
mov
scas
mov
mov
jge
lret
mov
mov
xor
rcr
dec
xorl
fwait
dec
iret
vpmacsdql
push
push
jne
pop
jae
aam
in
cld
adc
popf
push
push
sbbl
adc
mov
xor
cmp
mov
push
push
lret
jns
push
mov
sbb
push
mov
and
test
mov
sub
sbb
rolb
mov
add
paddd
add
lds
xorb
and
and
mov
das
sub
push
scas
leave
ja
xlat
inc
cli
clc
dec
test
jnp
jle
push
iret
es
pushf
loopne
pop
jno
mov
lea
push
cmp
inc
xchg
outsl
push
jp
add
ret
jnp
sbb
rolb
push
sbb
adc
icebp
jae
enter
and
das
xchg
bts
cli
and
sti
icebp
test
loope
xchg
xor
add
fdivr
dec
int
lret
call
mov
pop
add
xchg
push
push
jnp
scas
not
gs
adc
loope
fstpl
addr16
pop
or
nop
mov
mov
dec
mov
clc
dec
std
out
mov
xchg
add
cmp
xor
pop
out
sbb
cmp
insl
mov
mov
inc
pop
cltd
inc
stos
and
dec
inc
dec
loope
gs
outsl
push
popf
inc
xchg
pop
mov
fcmovbe
inc
fs
notb
lock
adc
mov
dec
xchg
mov
xchg
leave
mov
jecxz
cmp
lahf
fldln2
negl
hlt
sti
push
push
sub
loopne
and
adc
es
imul
ds
int
sbb
lock
nop
xor
push
int
sub
sub
pop
xor
rcll
push
xlat
or
ret
shlb
stos
inc
xchg
dec
inc
dec
cmpsl
out
mov
sub
arpl
fwait
cmp
xchg
mull
icebp
and
cmc
dec
gs
dec
xchg
int
xchg
aad
pop
xor
jb
xchg
add
sahf
das
and
fists
or
rorl
and
inc
lods
dec
mov
inc
sbb
cmp
into
cs
popf
xor
pop
mov
jle
enter
or
mov
dec
test
and
sarb
or
aas
lock
push
dec
out
rolb
loopne
outsb
lds
sub
in
mov
and
loopne
dec
cmp
js
and
mov
sbb
out
xorl
ja
lods
push
jg
adc
adc
mov
push
movsb
dec
cmp
push
push
adc
ret
repnz
mov
cltd
data16
and
std
fwait
adc
ljmp
or
sbb
sub
cmp
push
pop
imul
mov
mov
lret
or
sbb
sub
cmp
push
pop
imul
stos
mov
lret
or
sbb
sub
cmp
outsb
pop
pop
imul
mov
mov
pop
imul
hlt
aad
mov
or
loop
movsl
xchg
mov
dec
pop
out
idivb
stc
jne
or
fisubl
jbe
push
mov
ss
ss
out
idivb
or
cmp
push
mov
push
mov
lcall
iret
pop
push
jp
or
cmp
jne
cmp
jns
jp
popa
mov
out
subb
int
stc
addr16
rclb
mov
pop
adc
mov
sub
sahf
or
test
and
and
lcall
jbe
cli
leave
jmp
adc
dec
adc
xchg
lret
sub
aaa
test
pop
push
mov
pop
es
ss
pop
fldcw
cmpsb
sarb
or
vmovupd
push
adc
push
lods
push
ss
xchg
stos
pop
movsl
imul
test
mov
jmp
inc
mov
addr16
push
data16
aaa
fdivl
movsl
mov
jg
xchg
push
pop
mov
ficompl
cli
es
inc
lahf
inc
pop
es
iret
pop
out
idivb
or
cmp
dec
fidivrl
outsl
cli
push
mov
lcall
mov
addl
adc
data16
fs
inc
scas
cmp
push
jmp
jmp
test
push
or
inc
xchg
jle
pop
in
add
mov
xchg
push
jmp
push
ljmp
sahf
pop
into
or
cmp
push
fisubl
jbe
push
mov
lcall
pop
out
idivb
or
cmp
push
fisubl
jbe
push
mov
lcall
stc
adc
test
movsb
push
jae
sub
jae
aas
std
jns
lahf
outsb
fcompl
mov
repz
rcrl
rcrl
aaa
pop
or
ror
sub
into
mov
or
stc
cwtl
xor
lock
xchg
mov
sbb
add
adc
test
stos
inc
pop
xor
shl
repnz
fwait
loop
imul
and
int3
movsl
push
inc
add
add
add
mov
arpl
pusha
pop
cwtl
gs
cmp
jge
lock
loope
xchg
xchg
cmp
fidivrs
rorb
fwait
std
std
lea
sarl
cmc
jl
or
cmp
idivb
adcb
sub
cmc
daa
fstps
in
and
jb
push
call
enter
mov
inc
pop
mov
or
lods
pop
mov
adc
into
adc
shlb
mov
sub
pop
jne
sbbl
imul
fcmovne
pop
add
inc
mov
das
outsb
sahf
and
in
dec
hlt
jbe
adc
push
std
lret
loop
cmp
daa
ret
cli
inc
add
sub
xor
inc
clc
mov
and
or
mov
dec
icebp
xchg
cmpsl
push
jmp
or
or
lahf
push
xor
mov
scas
sbb
pop
push
fimuls
and
loop
mov
fcmovbe
xchg
lds
cli
cmp
out
jecxz
inc
or
cltd
data16
loope
sbb
test
andb
jae
mov
xor
out
sahf
popa
and
mov
test
rorl
sbb
mull
mov
push
out
lret
jecxz
xchg
sti
cli
int3
mov
cmp
jecxz
cmp
mov
sbbb
paddsw
aas
sahf
into
cmc
mov
sub
xchg
loopne
pop
jmp
mov
mov
loope
jne
rcr
and
nop
xor
getsec
fs
mov
mov
nop
idivb
cmc
cmp
mov
lods
aad
cmpl
mov
les
pop
mov
push
pop
push
mov
rolb
mov
push
enter
dec
gs
cli
mov
cmp
pop
leave
mov
and
or
xchg
in
incl
stos
icebp
or
push
scas
fdivl
rorb
dec
vmovaps
add
out
in
aad
sti
in
loop
movsb
enter
sbbb
es
inc
lret
dec
dec
dec
jb
jnp
dec
cmp
mov
inc
and
ss
jbe
insl
mov
mov
jl
cmp
pop
aam
data16
push
sbb
mov
popf
inc
stc
jo
cmp
sbb
jl
gs
xor
mov
dec
and
mov
mov
adc
cmp
pop
jno
outsb
movsb
and
into
test
xor
push
mov
mov
mov
and
rolb
out
mov
push
sub
mov
je
or
aaa
fwait
cli
xor
mov
push
push
dec
sub
xchg
cmp
rorl
gs
mov
add
mov
cmp
adc
notl
hlt
and
pop
mov
cmp
sub
mov
ja
push
add
sub
sub
dec
test
jne
add
or
out
push
sbb
pop
xchg
mov
adc
je
cli
aam
or
outsb
lock
mov
pop
inc
daa
xor
test
mov
shrl
mov
popa
adc
lahf
lods
mov
pop
or
clc
xor
push
hlt
lods
xchg
cs
add
test
in
int3
leave
xor
popf
popa
adc
pop
inc
inc
lret
bound
out
xor
pop
out
lock
cmpsl
ds
and
sbbb
push
bound
inc
scas
pop
add
int3
bound
out
jno
outsb
flds
sahf
sbb
sbb
aas
test
add
jae
js
cmp
je
cmpsb
push
jne
xor
jge
nop
scas
in
cmp
out
xchg
sbb
enter
bound
gs
xor
xor
popa
mov
mov
cmp
into
inc
pop
mov
add
fdivl
out
mov
leave
add
out
mov
inc
stos
call
dec
test
jo
imul
ds
mov
cwtl
stc
stc
jnp
in
pop
std
dec
xchg
lea
xchg
loopne
enter
out
leave
cmpsb
mov
loopne
and
pop
les
cmpsl
insb
fs
mov
stos
lret
inc
xchg
jecxz
xchg
sub
mov
dec
jne
loop
dec
dec
arpl
ret
shlb
mov
mov
frstor
js
push
lock
push
mov
mov
jmp
cltd
jecxz
push
dec
loope
xor
jge
movsb
aam
xorb
push
aam
out
mov
or
aas
mov
sbb
imul
cmp
lret
ds
fsubr
xchg
jg
stc
leave
outsl
mov
pushf
xchg
add
pshufw
cmp
xor
arpl
jbe
xor
leave
pop
xor
sarl
mov
dec
pop
fldenv
dec
stos
push
or
xor
push
and
movsb
jnp
or
or
xchg
ljmp
dec
and
cmp
cld
mov
out
imul
cmp
add
mov
push
pmaxub
cmp
push
popa
movsl
movsl
fldenv
fsubl
sbb
mov
gs
mov
dec
js
shll
rcl
sbb
test
aaa
push
ret
and
outsb
in
jp
sub
mov
lock
imul
nop
push
jne
imul
ljmp
test
fiaddl
xchg
xchg
loop
sbb
mov
and
push
rclb
push
mov
fnsave
and
icebp
xchg
and
outsb
or
sbb
aaa
addr16
xor
fildl
jbe
nop
xchg
hlt
jne
int
xchg
mov
popa
dec
push
pop
rorl
jle
pop
movsb
cmp
lcall
xlat
mov
xor
mov
dec
int
xor
int
pop
and
rcll
in
shrl
cmp
lcall
mov
mov
or
in
cmp
je
sbb
mov
std
push
cmp
and
test
test
addr16
enter
xor
in
data16
and
cmp
testl
aad
ret
insl
enter
inc
and
aas
repnz
cwtl
xor
push
sbb
xchg
popf
mov
mov
insl
cmp
inc
aad
lret
jbe
jg
int
lea
sbb
shrb
int
negl
or
push
sub
push
cmovb
stos
pushf
inc
int
jbe
out
sbb
aad
cltd
inc
jno
dec
dec
out
mov
push
fcomi
and
mov
mov
xchg
or
fadd
pusha
push
out
mov
popf
test
cmpsb
imul
ljmp
loop
mov
cmp
arpl
not
jmp
or
fidivrl
scas
pop
mov
xchg
les
jp
mov
adc
aaa
xchg
stos
push
inc
xor
aaa
ret
imul
aam
add
movsb
jmp
cli
sub
stos
mov
pop
cltd
pop
sahf
test
out
mov
out
add
shlb
fdivs
ljmp
aas
stos
sub
and
dec
cltd
int
cmpsb
xchg
test
xlat
test
push
popa
and
popf
fmull
cmp
mov
mov
stos
jbe
or
je
test
jb
sbbb
cli
ja
in
jo
fstpl
repnz
shrb
out
pop
shll
xor
push
push
mov
cmp
cmp
pop
rcrb
mov
xchg
negb
push
jp
xlat
add
mov
adc
in
xchg
ja
xor
lea
push
aas
mov
sbb
mov
lea
jp
out
insl
inc
cli
cmp
mov
imul
dec
and
xor
leave
mov
arpl
cli
mov
jnp
add
scas
out
shlb
and
imul
fistpll
sbb
jmp
and
in
mov
in
loop
jmp
adc
push
jg
outsb
push
cld
cwtl
xlat
arpl
fs
cs
sub
inc
hlt
mov
xor
dec
add
mov
sbb
lds
imul
jns
jp
cld
imul
lods
pop
outsb
clc
jg
mov
adc
sub
outsb
cmp
loopne
pop
xlat
fisubs
scas
mov
xor
pop
sub
fldt
and
dec
dec
sarl
iret
push
push
sbb
pop
inc
mov
cmp
mov
and
jae
and
xlat
jl
adc
in
push
stos
rcrl
mov
in
inc
mov
inc
lahf
imul
stos
test
or
push
sbb
int3
and
out
int
outsb
xor
fsubr
std
enter
push
mov
jno,pt
inc
xchg
cs
es
push
jge
mov
and
pop
dec
xor
push
cmp
nop
frstor
add
aaa
lret
jmp
ficoms
mov
cld
mov
inc
fs
js
imul
dec
jnp
dec
inc
popa
std
sahf
jns,pt
shl
cmpsb
leave
jb
ret
sub
inc
fcoms
mov
orl
dec
mov
into
ljmp
arpl
dec
aad
mov
xor
dec
pop
xchg
xor
push
sub
xchg
mov
inc
cld
js
xchg
leave
pop
mov
lcall
cld
jo
jbe
xor
add
adc
lods
pop
jbe
in
insb
out
imul
rclb
push
xchg
movsb
sub
or
mov
out
lret
mov
sub
mov
out
sbb
or
sub
icebp
sub
pop
sub
xchg
mov
clc
loope
push
addr16
in
add
arpl
push
into
mov
xor
in
push
daa
xor
mov
shlb
jb
and
cmp
js
mov
inc
mov
mov
mov
popf
insb
mov
cli
repz
mov
daa
sbb
dec
out
clc
out
adc
insb
insl
jge
cltd
popa
into
notb
pop
fadd
stc
loop
subb
insl
push
jne
jle
push
xchg
pop
xor
into
js
lcall
push
fwait
pop
cld
mov
int
bsf
fimuls
imulb
and
push
insb
shlb
outsb
mov
dec
mov
in
cmp
std
cmp
notl
jecxz
aaa
cltd
or
pop
push
fdivl
mov
in
test
mov
inc
mov
in
fmul
jecxz
in
enter
xor
in
cwtl
mov
outsl
dec
aam
ss
push
or
inc
dec
push
cltd
std
fsubrl
cmp
sbb
push
adc
pop
call
cmp
xor
das
mov
fs
xchg
sbb
xchg
cmpsl
faddl
adc
lods
idivl
call
jne
scas
movsl
sbb
mov
dec
and
ljmp
addl
bound
sarb
lret
push
mov
stos
and
adc
and
xor
inc
push
testb
lret
lret
xlat
into
pusha
push
push
and
jo
inc
clc
enter
adc
lods
mov
mov
adc
arpl
xchg
pop
add
movsw
jne
mov
adc
fcomp
xor
test
daa
cmp
jno
insl
dec
pushf
insl
mov
inc
fucomi
cmc
mov
add
test
mov
push
jnp
aam
mov
xchg
movsb
and
sbb
iret
ret
dec
xchg
insb
loope
mov
xlat
inc
mov
mov
test
fwait
shl
mov
inc
pop
fxch
cmp
stos
mov
movsl
hlt
ror
push
add
mov
jmp
arpl
data16
xchg
mov
cmp
das
fistpll
add
inc
fnstenv
movsl
out
int3
je
sbb
mov
jmp
aad
repnz
and
ss
jle
dec
ret
in
arpl
cmp
inc
or
push
sbb
adc
aam
popa
mov
int
fildll
incl
inc
enter
push
lods
pop
cs
pop
daa
call
jne
mov
xchg
mov
dec
jmp
shll
push
scas
jae
cmp
sub
ror
imul
xor
test
shll
cmp
mov
mov
inc
pop
add
js
int3
fimuls
or
dec
rcll
ret
dec
das
adc
mov
add
add
add
sub
lea
jae
push
aaa
sub
cmc
mov
jno
in
je
push
insb
mov
xor
fisubrs
mov
xor
sub
outsl
inc
xchg
push
repnz
dec
mov
cmp
fwait
jecxz
mov
movl
movsb
daa
ret
outsb
fwait
js
loopne
scas
mov
push
les
add
jp
fdivp
lock
shlb
leave
je
aas
notb
pop
aas
daa
mov
cs
and
jl
mov
pop
test
sti
out
dec
mov
out
inc
mov
sarb
sbb
js
jle
inc
pushf
jbe
fcmovne
xlat
mov
dec
shrl
inc
jl
sub
addr16
sbbl
cmp
call
stc
or
andl
pop
sbb
xchg
mov
rolb
cld
jne
loope
pop
mov
stos
out
jp
jbe
cmpsb
push
xor
in
sub
xlat
sahf
arpl
mov
sbb
scas
cmp
clc
jne
fstl
stc
jae
push
mov
cmpsl
and
or
sub
imulb
fstsw
out
inc
cmpsl
inc
jp
push
sahf
sub
pusha
mov
inc
cmpsl
fsubl
dec
add
and
dec
cmp
popa
and
mov
mov
jl
sbb
mov
push
movsl
inc
cmp
ljmp
jno
cmc
rclb
scas
inc
mov
stos
roll
cmp
pop
addr16
insb
mov
aad
mov
dec
loop
dec
pop
ljmp
and
iret
dec
sbb
outsb
rcrb
jmp
mov
xor
push
mov
shll
aad
xchg
sub
arpl
add
push
add
pushf
lret
dec
fdivl
pop
mov
movsl
out
jg
imul
dec
lods
hlt
sbb
cli
test
push
arpl
inc
cmpb
pop
ljmp
pusha
cwtl
jge
cmp
popa
push
adc
dec
cwtl
adc
pop
mov
dec
fildll
iret
imul
and
dec
mulb
ret
movsb
sbb
loop
push
pop
adc
rcll
scas
cs
and
push
js
mov
scas
outsb
shl
repnz
pop
cmc
cmpsb
xor
dec
fistps
push
add
daa
sub
mov
leave
dec
xchg
pop
mov
sbb
push
aaa
incb
decl
ret
and
out
mov
adc
in
aas
add
lahf
inc
xor
iret
cmc
jbe
mov
in
les
hlt
push
pusha
jo
mov
add
iret
enter
in
jl
popf
outsl
mov
enter
lds
inc
cmc
cli
movsb
xchg
inc
loop
pop
iret
repz
daa
sbb
adc
pop
push
sbb
cmpsb
add
incl
imul
add
mov
sub
sbb
push
sub
insb
push
fwait
jo
lods
pop
mov
sahf
add
gs
push
push
inc
std
lret
test
dec
add
loope
xor
movsl
inc
fwait
outsl
rcll
mov
test
cltd
jae
addr16
aad
mov
jno
sahf
test
xor
into
mov
add
push
cwtl
in
or
enter
cs
sub
ds
sub
iret
popf
mov
in
loope
imul
imull
jae
dec
cmp
and
mov
orb
cld
repz
mov
cmp
sub
dec
mov
shl
lcall
jno
rcll
dec
and
and
adc
inc
pop
add
xor
add
mov
pop
fdiv
ucomiss
mov
out
jp
pop
add
jl
dec
add
jle
add
into
pop
incl
pop
aad
aaa
push
cli
loope
fwait
and
add
inc
lahf
cli
hlt
xor
subl
shrb
mov
cmp
scas
mov
shr
sbb
sbb
enter
int
pop
repnz
inc
mov
xor
xchg
lahf
cli
and
sbb
sub
out
push
cmpsl
push
shlb
loope
mov
out
pop
jns
mov
stos
lods
dec
test
or
sub
mov
mov
orl
loopne
arpl
in
test
sar
jl
push
or
int3
mov
sub
aad
stos
shlb
mov
mov
inc
inc
into
add
dec
add
sub
int3
push
mov
stos
adc
or
xchg
js
xor
push
add
jmp
js
cs
mov
in
mov
mov
sub
mov
fstps
dec
or
sti
jecxz
sub
inc
push
pushf
stos
jecxz
test
push
add
adc
icebp
mov
mov
sarl
sbb
stos
pop
mov
cmp
inc
arpl
inc
mov
cmp
lahf
jo
hlt
xlat
stc
add
test
nop
cmp
pushf
das
clc
inc
mov
clc
movsl
cwtl
out
je
imul
jb
push
push
push
fstps
flds
lods
dec
push
aaa
stc
sbb
mov
test
inc
in
jns
inc
data16
add
arpl
or
cwtl
sbb
jo
lret
data16
or
cltd
in
dec
out
jnp
adc
mov
lock
jecxz
xchg
out
sbbl
xor
fwait
shl
mov
dec
mov
into
cmp
jb
or
and
jge
cmc
rcl
jne
jl
scas
xlat
mov
pop
push
jne
std
jle
mov
ret
addr16
lods
and
cli
enter
movsl
adc
mov
sbb
sub
popa
xlat
push
push
out
cmpsl
outsl
ja
mov
popa
push
or
aam
mov
dec
rclb
jmp
xchg
xor
pusha
adc
cmp
or
adc
xor
fldl
outsl
gs
cmpsb
sahf
mov
jne
adc
dec
sbb
ror
sbb
xor
jecxz
out
das
pop
hlt
jl
xor
mov
stos
je
sbbl
bound
popa
mov
jmp
jg
jle
arpl
sbb
cld
mov
sub
dec
sbb
sub
or
jl
cli
ss
mul
imul
sbb
cmpsl
sbb
ret
dec
dec
sbbl
pusha
fiadds
repz
push
rcr
outsl
fidivl
and
leave
pop
jb
add
outsb
and
inc
fsub
scas
aad
and
repz
inc
cmp
cmp
stc
dec
stos
pop
xor
popa
or
mov
xor
pop
out
mov
and
xor
and
jns
dec
scas
jmp
mov
adc
dec
and
sbb
scas
inc
insb
xor
dec
xchg
cmp
aas
xor
or
lds
shrb
lods
es
push
push
fs
sar
imul
pop
cmp
out
enter
lret
mov
sahf
pop
adc
out
popa
stos
test
jecxz
cmpsl
and
lea
mov
test
mov
sti
loope
popa
push
sub
es
iret
int
es
lcall
sub
cwtl
stos
lret
hlt
xchg
mov
or
inc
fsubr
inc
nop
sub
ficomps
mov
std
pop
gs
sti
jne
je
shr
pop
test
adc
and
adcl
push
mull
push
push
inc
mov
add
push
push
addr16
cltd
and
jge
testb
dec
adc
fdivrs
fucom
shlb
push
adc
inc
jne
daa
outsl
dec
js
or
outsb
pop
call
movsl
xlat
and
movsl
dec
dec
pop
repz
dec
adc
pushf
cmpsl
inc
and
mov
mov
leave
std
add
jno
mov
mov
xor
aad
shl
mov
cmpsb
test
mov
ss
les
cmp
out
es
pop
mov
mov
lock
notb
sbb
movsb
fwait
and
adc
mov
out
jge
scas
lods
inc
loop
roll
inc
je
fldt
into
fldenv
aad
pop
inc
mov
pop
push
outsb
and
pusha
adc
les
das
ljmp
int3
dec
loopne
mov
mov
mov
jnp
in
mov
sub
mov
stc
pop
ss
cmc
push
inc
lret
and
sub
pop
test
xchg
mov
ljmp
or
cmp
push
fisubl
jbe
push
mov
lcall
pop
out
idivb
or
cmp
push
fisubl
jbe
push
mov
lcall
ljmp
cmpsb
sub
fisubl
jbe
push
mov
lcall
aam
out
idivb
or
cmp
ljmp
fsts
inc
mov
mov
in
std
pushf
xchg
lods
mov
cmpsb
lods
xor
and
jge
insl
jae
arpl
sub
mov
in
repz
jecxz
sarl
and
jl
insl
jae
arpl
mov
mov
in
repz
jecxz
sarl
and
sbb
push
sbb
xchg
mov
mov
mov
stc
mov
es
es
xchg
jae
faddp
add
cmp
pop
frstor
push
pusha
xor
mov
addb
push
test
or
lods
shl
inc
scas
sub
pop
dec
dec
in
jnp
xchg
shl
ljmp
push
mov
mov
sub
mov
and
in
push
dec
inc
sub
stc
add
and
mov
dec
popa
sbb
dec
test
in
shlb
push
sub
dec
and
pop
dec
dec
jmp
inc
xchg
dec
or
pop
push
cmp
mov
in
repz
jecxz
sarl
and
jge
insl
jae
arpl
cmc
mov
mov
stos
stc
mov
sbb
sub
outsl
sbb
pop
dec
pop
dec
mov
shll
mov
ret
adcl
aas
push
sbb
push
js
fwait
and
jns
pushf
sahf
cli
cwtl
adcb
mov
and
jge
insl
jae
arpl
mov
mov
in
repz
jecxz
sarl
and
jge
insl
jae
arpl
mov
push
in
xchg
cmpsl
sub
push
fmull
dec
push
push
orl
shlb
xchg
push
stos
xchg
push
inc
aaa
dec
daa
adc
jle
fldenv
inc
xorl
fneni(8087
popf
cmc
push
dec
and
cmp
roll
mov
pop
xor
lock
test
inc
nop
sbb
jnp
insb
neg
push
dec
jecxz
cmp
hlt
lods
lds
sbb
cmp
pop
push
sbb
cs
fnstenv
sbbb
aas
or
stc
mov
sbb
inc
pop
fcom
sub
enter
cmp
iret
sub
loop
xchg
cld
push
or
int
mov
scas
and
mov
adc
hlt
inc
mov
jo
fwait
movsb
test
rcl
sub
popf
int
in
pop
xchg
mov
scas
lret
jp
es
cs
xchg
fldl
faddp
popa
xor
sub
ja
add
ret
imul
cmpsl
and
leave
push
push
xchg
scas
loopne
pop
lahf
cmp
add
mov
or
ljmp
aaa
lret
test
jno
in
or
jns
inc
cmp
int
lcall
or
sub
jne
outsb
flds
push
and
dec
dec
inc
subl
aaa
loop
and
xchg
repnz
lret
fsubr
inc
pop
fidivrs
and
dec
adc
int3
rorl
jne
pop
cmpsl
ret
inc
hlt
push
cmpsb
cmpsb
sub
cli
xchg
out
and
int3
cmp
das
nop
mov
in
mov
pop
scas
stc
enter
fwait
sbb
sahf
pop
add
les
jae
jmp
xchg
jno
pop
ljmp
push
cmp
mov
or
sti
push
xchg
loop
mov
shrl
test
cltd
and
adc
mov
inc
addps
mov
dec
jns
aad
pop
mov
mov
pop
and
jmp
dec
test
push
shlb
push
mov
jne
aam
ret
inc
add
mov
popa
mov
leave
cltd
mov
sbb
mov
leave
add
push
fmuls
mov
insb
pop
fwait
mov
sbb
adc
jg
jbe
xchg
sbb
dec
sbb
inc
insb
test
sub
daa
mov
mov
lds
dec
rorb
add
pop
rcll
mov
adc
addr16
cmp
js
lods
push
xor
std
lcall
mov
cli
popa
mov
mov
sbb
add
in
inc
pop
cmp
mov
jge
pusha
int
xor
aam
fucomi
test
cld
dec
dec
bound
xor
xchg
pop
cli
jo
es
scas
mov
nop
dec
sub
cmpsb
and
mov
adc
xlat
je
repnz
push
cltd
cmp
xlat
scas
jnp
call
xbegin
les
imul
repz
xor
pop
pop
movsb
sar
xchg
lods
enter
cltd
daa
xchg
test
add
in
fsts
cld
xchg
scas
sbbl
sbb
fsub
jo
pop
sarb
inc
or
sub
pop
or
stos
pop
into
cld
or
sarl
mov
push
scas
prefetch
int3
daa
iret
js
sbb
ss
adc
adc
cld
mov
movsl
mov
pop
scas
mov
call
ja
int3
sub
and
sbb
jns
jecxz
call
cltd
cs
xchg
pop
lcall
ja
cmpsb
test
xchg
pop
gs
lock
das
loop
je
ss
movsl
rcll
cmp
daa
dec
dec
andl
mov
fldl
mov
sti
pop
jmp
dec
insl
xchg
aam
jno
cmc
push
loopne
sub
push
inc
mov
jg
cmp
add
ret
fst
jp
sbb
pop
inc
mov
sahf
stos
test
into
test
int
xor
movsb
scas
mov
dec
cs
psrlq
mov
and
sub
repnz
cmp
aad
repnz
mov
mov
jae
push
xchg
inc
push
lahf
add
pop
dec
mov
lcall
jno
add
adc
or
cli
stc
in
insl
xor
mov
sub
mov
fsubrl
and
and
pop
mov
mov
mov
aas
xchg
xor
mov
int3
sub
xor
cmp
and
mov
pop
mov
movl
mov
jmp
loop
adc
addr16
lret
sub
jo
mov
pop
jecxz
push
xlat
imul
movl
xchg
pop
pusha
mov
sbbb
outsl
insb
pop
ret
xchg
lods
adc
jae
cmp
cmp
stos
repz
or
xlat
popf
fiaddl
dec
cmpsl
sbb
add
fmul
ret
pop
fidivl
rcrb
mov
lock
cmpsb
pop
mov
jl
jecxz
mov
xor
or
outsb
mov
and
cmpl
rcrb
jge
test
popf
idivl
dec
pop
pop
or
addl
fisttps
xchg
test
cmp
xchg
repnz
cmp
jo
inc
mov
dec
pop
cmp
cmc
cmpsl
and
orps
shl
jmp
xchg
sub
stos
and
call
add
or
imul
aaa
xor
insl
cmp
xchg
fdivp
stc
out
scas
in
ljmp
dec
xchg
pusha
add
je
leave
shll
mov
jmp
xor
mov
pop
push
notl
pusha
sbbl
hlt
mov
popa
pop
mov
sbb
fimuls
cltd
xlat
out
rcll
or
test
ss
std
jmp
mov
insl
inc
jg
and
adc
xchg
movsl
adc
call
push
lods
or
adc
daa
mov
arpl
mov
por
jp
aaa
jl
cmp
inc
js
lea
pop
and
sbb
jns
inc
add
popa
inc
jns
es
int
pop
and
jb
lods
add
mov
pushf
mov
sub
dec
dec
aad
cmpsb
in
lret
nop
cwtl
mov
lods
add
mov
jne
jns
enter
inc
dec
fcom
clc
sub
mov
shlb
dec
shlb
dec
sub
lods
xorb
data16
rcr
push
gs
mov
test
add
adc
pop
in
jae
mov
int3
inc
lock
mov
orl
mov
cmp
ret
push
shll
out
es
in
test
lock
dec
adc
inc
mov
fwait
dec
fistpl
jbe
dec
and
out
out
xchg
cmp
xchg
and
mov
sar
iret
mov
inc
dec
out
inc
add
and
sbb
dec
dec
cmpsl
and
xor
push
or
jg
and
in
push
int3
push
in
add
enter
mov
in
dec
outsl
sbb
in
daa
mov
sub
fwait
nop
pop
push
addr16
aad
or
enter
out
sub
or
pusha
out
lea
xor
mov
jo
test
push
pushf
cmp
push
sub
cs
push
mov
add
decl
xchg
push
pminub
es
push
push
popaw
pop
lock
xchg
roll
popa
ret
sub
dec
cmp
fldl
mov
dec
push
push
xchg
jno
jae
fs
and
jae
mov
xchg
pop
shlb
sub
mov
pop
xchg
add
hlt
jecxz
data16
pusha
dec
sbb
push
sarb
adc
sbb
mov
xchg
insb
jnp
pop
in
fsubrl
mov
mov
lods
mov
jae
movsb
outsl
test
loopne
mov
fistpl
adc
mov
push
in
out
mov
sub
xchg
pop
mov
aaa
loopne
iret
xor
shrl
or
or
iret
jl
fistpl
dec
cld
addr16
mov
ss
mov
lahf
cmpb
data16
xor
pop
pop
and
fs
fisttps
mov
inc
adc
ret
add
sbb
xor
call
ds
stos
rolb
fistl
mov
mov
or
int3
test
add
add
dec
adcb
loop
aam
xor
addl
fstpt
arpl
xor
nop
push
pop
shrb
xchg
les
into
add
inc
or
lahf
jnp
jnp
xchg
movzwl
daa
dec
inc
jg
mov
mov
cmpsb
cmp
stos
cmp
inc
cmp
sti
jmp
imul
push
popa
jmp
jmp
and
movsl
dec
adc
iret
ss
and
stos
imul
cmp
repnz
cmp
pop
in
call
andb
test
out
icebp
xchg
mov
das
adc
andb
negl
fstpl
and
cs
jnp
outsb
outsb
sub
jo
or
aad
mov
into
jns
out
icebp
sahf
xchg
xor
jo
add
mov
in
pushf
cmpsl
sti
test
mov
mov
fcompl
movsb
xor
lods
xchg
cld
cltd
adc
add
or
jae
mov
cmpsl
mov
jae
xor
je
or
jmp
pusha
xor
ftst
lock
scas
test
stos
adc
adcl
sub
bound
call
push
out
add
xchg
add
push
push
pop
mov
mov
fldenv
jl
lret
cmp
fnop
cmp
add
loopne
jmp
jmp
shlb
fisttpll
scas
xor
fisubs
aam
xchg
int
cmp
pop
sbb
outsb
and
scas
dec
mov
push
scas
sub
mov
sub
sub
arpl
sub
mov
ret
rorb
push
push
jmp
or
inc
scas
aaa
scas
sub
jp
rclb
pushf
sti
xlat
pop
mov
loopne
cmp
or
addr16
jle
mov
loope
mov
gs
fdivrl
fistps
cld
je
pusha
cmp
push
popf
or
push
aas
sbb
mov
cmc
outsb
mov
insb
inc
or
mov
mov
mov
pop
repz
jbe
pop
sub
push
sbbb
xor
pop
inc
fidivrl
pop
jp
lret
push
jp
or
mov
loopne
mov
mov
or
fsubr
fistpll
sahf
scas
pop
add
jl
pop
data16
mov
stos
aaa
push
iret
rolb
loop
add
pop
call
out
sbb
cmp
inc
mov
nop
push
sbb
ret
jecxz
and
xchg
leave
xlat
js
and
fstpl
mov
jg
and
sbb
pushf
adc
out
insb
inc
mov
int3
push
mov
inc
jge
sub
iret
loopne
sub
movsb
bound
pushf
mov
dec
arpl
test
inc
inc
inc
cltd
lea
loopne,pn
inc
add
icebp
push
or
sbb
loope
jp
outsb
subl
out
mov
adc
push
aam
sub
jbe
call
mov
lods
xchg
dec
fistps
inc
cs
mov
sbb
inc
adc
jle
push
out
jmp
sub
add
fdiv
fimull
loop
inc
mov
aam
nop
fldcw
xchg
sbb
sub
xlat
outsl
mov
mov
push
xchg
xchg
inc
push
push
xor
adc
add
rcll
jp
xor
adc
stc
jmp
sub
hlt
sbb
dec
pop
lahf
dec
fs
outsl
push
aas
push
loop
cwtl
enter
sbb
push
inc
jnp
or
ljmp
lods
push
ret
mov
inc
mov
xchg
in
pop
mov
pop
mov
or
sbb
in
xor
xor
fisubrl
mov
iret
and
xchg
cs
sbb
es
fisubs
les
push
or
cs
jmp
jge
repnz
gs
inc
inc
sub
out
and
dec
repnz
pop
cmp
xor
fldenv
jno
push
pop
fidivrl
roll
addr16
push
xchg
test
into
push
fcmovnb
test
insl
out
gs
fadd
and
test
mov
cld
lods
inc
or
adc
pop
clc
lea
sub
movsl
int3
dec
pop
mov
movsl
lods
aas
mov
pop
adc
bound
sbb
inc
imul
cli
xchg
icebp
or
lret
cmpsb
jb
aad
inc
jg
pop
or
stos
loopne
ds
and
mov
fadd
mov
pop
repz
sub
mov
xchg
lods
push
ret
aaa
arpl
and
loope
xor
into
mov
loope
movsb
jecxz
int3
popf
mov
sarb
mov
int3
push
mov
push
and
push
ret
mov
ja
out
sahf
xor
and
pop
rol
stos
and
jo
fs
pop
cli
push
outsb
pushf
into
sub
js
or
mov
pop
mov
inc
dec
mov
push
test
scas
fwait
mov
sub
mov
scas
xchg
or
mov
movsl
jo
push
out
call
mov
sbb
lods
fdivr
rcrb
icebp
lea
imul
bound
push
xchg
movsl
sbb
leave
neg
test
push
jns
rcrb
push
lcall
adc
dec
aad
push
inc
push
and
or
xchg
xchg
pop
jne
sarl
xchg
les
insb
dec
rcl
pop
inc
popf
ja
adc
lock
mov
or
push
jmp
fistl
dec
fwait
cmp
sti
xor
cmp
pusha
ss
sub
loope
dec
push
adcb
mov
cmp
sbb
cld
into
sbb
shll
mov
es
xchg
sbb
jg
add
xchg
in
mov
jnp
pop
add
cmpsl
add
add
pop
pop
test
fdivrl
lret
movsl
and
sarb
fnstenv
jnp
mov
loope
xor
popa
xor
call
sbb
mov
add
jl
cli
cltd
addr16
nop
sbb
pushf
test
shl
nop
push
jmp
mov
jle
mov
pop
cmp
sbb
mov
mov
sbb
stos
loop
mov
pop
repnz
add
mov
and
adc
repz
mov
ljmp
fildll
xchg
inc
pop
fcmovnu
inc
lods
inc
ds
mov
pusha
pusha
inc
add
sti
mov
jns
pop
int3
nop
lretw
cmp
or
aaa
cwtl
dec
dec
inc
ss
lcall
insl
mov
cmp
pop
cmp
mov
jg
mov
add
pop
out
adc
idivl
repnz
aad
lea
in
jns
outsl
inc
dec
sbb
inc
repz
ljmp
xchg
fsub
cmp
add
pop
jno
mov
aam
std
andb
stos
out
jb
inc
and
mov
push
jl
and
xchg
inc
xor
daa
inc
in
into
sarb
adc
stos
dec
lcall
push
sbb
andb
push
sbb
or
add
orl
ja
movsl
cld
cmpsb
fiaddl
push
movsb
mov
xchg
es
enter
inc
les
add
shrb
das
add
in
mov
mov
mov
or
out
push
mov
pop
ficoml
popa
sti
sahf
movq
das
xor
fdiv
popa
aaa
mov
clc
adc
cmp
sbb
repz
mov
jae
in
push
inc
inc
rol
and
gs
leave
cmp
cmc
dec
dec
dec
xchg
jmp
xor
pop
mov
add
ret
fldt
mov
jecxz
and
mov
and
mov
shr
inc
mov
inc
xor
call
sti
fists
sub
shlb
pop
and
pop
pop
repz
mov
pop
das
push
pushf
into
and
jb
adcl
loopne
cmp
sbb
lahf
pop
dec
xor
and
mov
add
push
xorb
in
inc
jl
sti
ja
inc
sti
jp
icebp
mov
inc
fmull
std
xchg
mov
mov
jno
pop
addb
jbe
xor
dec
stos
push
jmp
test
add
cmp
mov
mov
mov
mov
add
dec
and
test
mov
xchg
rcrl
or
out
and
int3
in
mov
test
and
sbb
imul
into
testb
int
lds
add
sbb
cwtl
xchg
pop
xchg
pop
stos
inc
adc
push
mov
adcb
insb
xchg
into
push
sbb
ret
mov
dec
push
int
xor
dec
cmp
pop
mov
mov
xchg
fst
xchg
sub
and
aam
xchg
cmp
pop
popf
and
outsb
push
lea
cld
ficomps
or
das
mov
mov
ja
cltd
stos
mov
shll
mov
bound
jns
adc
mov
xlat
jno
mov
sbb
xor
jp
mov
roll
jnp
jae
mov
mov
adc
hlt
pop
test
cmp
aad
jae
xor
movb
jg
mov
sahf
pop
and
adc
rcrb
enter
pop
les
test
pop
pop
xor
xchg
inc
es
mov
xchg
ss
cmc
movsl
cmc
popf
mov
mov
movsb
push
mov
popa
cmc
shl
pop
outsb
cmpsb
adc
or
push
dec
add
and
and
stos
jl
mov
cmp
fs
or
adc
inc
mov
ds
test
mov
orl
out
xorb
aam
in
fistl
sarb
xor
sbbl
cmp
jl
push
push
jmp
aad
push
or
stc
sarb
xchg
add
mov
popf
inc
repz
mov
inc
int3
inc
mov
inc
aad
out
cmp
jg
push
jns
cmp
test
jecxz
xchg
cmpsb
out
in
pushf
mov
out
mov
inc
mov
xor
popf
mov
add
and
mov
rcrl
clc
out
insl
ja
imul
arpl
jl
mov
int3
cld
daa
test
pop
sahf
push
stos
mov
mov
test
mov
cmpsl
mov
fsubs
or
movsl
and
notb
adc
mov
dec
mov
mov
cltd
sub
stos
jecxz
jl
movsb
or
aaa
push
lcall
popa
sbb
imul
xchg
push
lahf
lss
cld
popf
inc
add
cmpsb
jg
cmp
jne
mov
or
inc
push
int3
in
in
adcb
rolb
ret
insl
shrb
sbb
incl
dec
mov
adc
mov
scas
inc
fstl
rol
mov
test
cmpsl
xchg
pop
cld
dec
sbb
mov
das
sti
jmp
mov
push
shlb
dec
pusha
pop
movsl
xor
outsb
mov
rcll
cmp
popf
push
pop
lods
lcall
sub
les
and
in
out
adc
imul
add
js
in
add
leave
mov
das
stos
pop
pushf
daa
pop
mov
mov
xchg
dec
test
mov
data16
cmp
call
ret
insb
adc
cmp
icebp
xor
or
add
mov
andps
xchg
call
dec
xor
or
fs
loop
dec
stos
fcomip
adc
scas
or
mov
fisubrs
repnz
sbb
mov
and
mov
mov
movsb
ret
add
cmp
pop
iret
out
rcll
cmpsb
shl
pop
xor
ss
jmp
add
enter
xchg
fwait
jmp
lcall
out
cli
inc
adc
pop
popa
mov
or
loopne
sub
xorl
xchg
inc
and
pop
or
sarb
das
bnd
sbb
popf
lea
sub
test
cmpsb
jg
push
int3
dec
mov
int3
sti
ss
daa
push
popa
adc
and
dec
pop
xor
stos
shll
mov
imul
cmpsb
xchg
rcll
xchg
or
push
pop
scas
ja
mov
loope
int3
sbb
or
or
gs
cmc
mov
out
int
push
scas
xor
punpckldq
lgdtl
mov
fsubl
sub
xchg
add
pop
cmp
sbb
or
lret
push
loopne
test
fimull
mov
test
daa
push
out
fnstsw
xchg
push
dec
fs
pushf
inc
data16
jnp
or
sarb
inc
out
sbb
jl
test
and
cli
push
dec
test
testb
mov
movsl
xor
cmpsb
cmp
sahf
sbb
adc
or
xor
mov
aad
push
fstpl
jns
or
jge
push
cmp
xor
xchg
pop
xor
mov
cmp
sub
mov
ss
stc
adc
dec
pop
xor
enter
xchg
aam
ds
mov
int
std
sub
popf
jecxz
sarl
and
jge
insl
jae
arpl
mov
mov
in
repz
jecxz
sarl
and
jge
insl
jae
arpl
mov
mov
in
repz
jecxz
sarl
and
jge
insl
jae
arpl
mov
mov
in
repz
jecxz
sarl
and
mov
xchg
jmp
lods
ret
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
ds
pop
sbb
das
pop
jo
popa
arpl
icebp
into
dec
rcrb
mov
sahf
fnstsw
sub
jle
push
insl
push
pop
cs
ds
into
mov
scas
int
test
pop
jbe
arpl
or
and
sub
call
lock
xchg
mov
sbb
loope
movl
ljmp
fsts
in
adc
pop
popf
out
adcb
loopne
movsb
shlb
jno
add
mov
push
sbb
jle
jmp
lods
push
mov
jnp
sahf
test
adc
push
inc
pop
clc
outsb
loope
subb
fisubs
sahf
lods
and
push
jae
add
in
popa
fsubl
mov
subl
aas
popf
inc
ficomps
out
adc
inc
mov
sbb
repz
xor
jmp
iret
test
out
jo
mov
scas
dec
jnp
sbb
push
adc
daa
jnp
aaa
jmp
mov
mov
scas
int
push
sub
imul
jo
inc
dec
push
mov
mov
or
scas
test
jo
dec
pop
outsl
push
insb
jnp
jge
sub
dec
sbb
mov
mov
test
xor
ret
push
cmovno
jl
pop
or
bound
pop
cs
ds
out
std
mov
sahf
sub
jle
push
insl
push
pop
cs
ds
out
std
mov
sahf
mov
fisttps
insl
mov
test
xchg
out
aam
pop
mov
cmpsb
repnz
hlt
or
xchg
and
aad
sub
push
stc
cs
cltd
pinsrw
and
scas
sti
push
fimuls
das
pop
mov
int3
jl
test
dec
cmp
out
xor
inc
popl
iret
ljmp
xor
jb
les
int
popf
adc
jae
sub
into
repnz
aam
aad
and
cld
mov
orl
xchg
fdivs
xorl
lret
xchg
mov
mov
imul
les
lcall
nop
mov
ret
pop
movsb
cld
out
out
daa
data16
xlat
cld
iret
add
inc
xorb
sbb
aas
and
mov
jmp
cli
rolb
dec
push
test
fisubrs
add
leave
jmp
sti
data16
jp
std
mov
sbb
ds
js
loopne
jle
out
hlt
sbb
call
pop
jg
add
jae
sbb
xlat
adc
loopne
or
pop
xor
jae
fs
push
and
mov
test
push
test
icebp
rolb
xchg
mov
cmp
out
add
sbb
and
cmp
pop
daa
jmp
inc
negb
sub
and
mulb
xchg
xchg
pop
sub
scas
inc
repz
push
stos
aaa
sbb
dec
push
imul
flds
nop
and
push
std
ljmp
call
je
movsl
dec
and
xchg
jmp
int
fiadds
adc
lahf
sub
jmp
push
test
cmp
mov
xchg
test
add
xchg
adc
aaa
lods
loopne
iret
lea
sbb
push
aas
cltd
mov
orl
cmpsl
cmp
fcmove
inc
cmp
jmp
dec
mov
outsl
xor
jno
mov
cmp
sbb
add
inc
push
aas
das
xor
notl
pusha
cwtl
sahf
xor
push
jmp
mov
pop
arpl
dec
pop
insl
sbb
add
dec
xchg
cwtl
int
adc
xor
cltd
movsb
fistps
imul
adc
cmp
lock
scas
in
scas
dec
mov
out
cs
jecxz
insb
xchg
lds
push
lods
stc
lahf
pop
or
ficoms
mov
cmc
dec
jbe
movsb
leave
aad
sbb
pop
cwtl
cmpsb
fs
mov
cld
cmp
adc
pop
xchg
pop
dec
jo
pminub
enter
shll
js
xchg
cltd
scas
in
test
fwait
adc
call
movsb
xor
scas
dec
jbe
xlat
sbb
imul
mov
jle
and
push
pop
lret
es
push
push
lds
loope
push
or
out
ja
imul
and
mov
jmp
filds
in
sub
jge
out
shlb
adc
in
scas
push
mov
enter
clc
aas
lret
ret
jg
push
and
int3
dec
mov
or
jo
or
int3
and
hlt
cmc
xor
fwait
push
push
pop
in
jl
pushf
push
xchg
insl
inc
scas
into
decl
cmp
dec
push
sbb
pop
add
and
or
sbb
ja
cmp
mov
aam
movsl
popa
data16
pusha
es
mov
gs
xchg
sub
push
and
loope
xchg
outsb
fldcw
fwait
daa
pop
adc
scas
add
imul
lcall
ret
roll
lods
das
in
inc
pusha
pop
sbb
adc
mov
ficoml
mov
sub
jb
push
pop
popf
out
loope
cwtl
mov
adc
cld
in
xchg
cwtl
push
jae
inc
dec
outsb
lods
nop
xchg
cmp
adc
mov
jp
dec
dec
pop
jbe
adc
sub
jl
loope
jnp
push
sbb
xor
fstpt
and
cmp
faddl
cmp
cmp
sahf
repnz
bound
rcr
std
or
gs
jp
pusha
or
lods
repz
sahf
dec
int
sbb
jp
or
fs
mov
dec
mov
clc
sub
loop
mov
jno
insb
js
jmp
xor
adc
inc
inc
vmovq
mov
and
test
cld
ds
sub
jmp
in
add
jge
mov
pop
dec
ret
sbb
cli
mov
and
ret
and
xor
push
mov
mov
mov
jmp
add
cwtl
or
mov
dec
lods
mov
enter
lea
or
cmc
cmc
stos
or
sub
xchg
add
popa
or
loopne
xchg
lods
pop
mov
repz
loopne
imul
sub
js
out
lods
inc
fwait
cmpsb
pop
adc
dec
xor
push
xor
jb
jbe
sub
outsb
mov
mov
int
aas
xchg
push
or
jns
xchg
cmc
jmp
shll
add
out
or
pop
sahf
aas
dec
sbb
push
sbb
mov
imul
push
jg
xor
ret
jg
jecxz
nop
inc
cmp
push
pop
pop
add
mov
or
and
in
mov
pushf
cld
nop
mov
lcall
mov
inc
mov
fld
adcb
int3
sti
les
lret
jo
ljmp
lahf
call
mov
ret
outsb
xor
test
sub
test
push
push
xlat
pop
pop
adc
out
xor
ret
lea
adc
sub
loopne
aam
fmul
daa
jns
clc
add
stos
and
lock
pop
mov
data16
jnp
inc
test
ljmp
cmp
and
mov
adc
cmc
push
push
ret
adc
pop
cmc
and
push
mov
cwtl
aam
inc
sar
mov
adc
loopne
ss
and
cli
inc
nop
mov
xchg
push
mov
sbb
les
push
fisttps
jmp
into
stos
repz
jmp
loopne
je
xchg
jle
cmpsb
mov
inc
mov
jmp
test
and
out
mov
xor
shr
dec
sub
cld
bound
pop
xchg
fwait
xor
aaa
cmp
aad
cmp
iret
les
mov
xor
add
inc
sahf
adc
lcall
fistpll
lahf
mov
mov
mov
mov
jno
out
into
mov
sahf
mov
aas
dec
dec
pop
repnz
or
sub
and
xor
jne
inc
and
ljmp
aaa
adc
mov
push
loop
fcoms
rcrb
sub
dec
dec
icebp
pop
cmp
icebp
sub
mov
aas
cmpsl
jmp
push
jmp
add
loop
loope
mov
xchg
mov
xor
sbb
insl
xchg
iret
dec
cmc
mov
mov
pop
jl
les
cmovl
sub
arpl
mov
cmpsl
mov
sub
add
jge
lret
das
sub
sbb
push
imul
pushw
and
dec
mov
mov
dec
das
or
scas
dec
enter
add
or
cmp
test
jp
mov
addr16
rcrl
inc
jnp
aam
sti
aad
outsl
shll
fistpl
aas
xlat
ja
sub
or
ss
push
cmp
ret
dec
pop
mov
push
mov
push
ret
sbb
fwait
sbb
lods
cli
imul
leave
aas
mov
mov
mov
out
cli
test
inc
lret
lahf
mov
in
rcl
fwait
push
lods
fidivs
movb
cmp
ficompl
out
dec
mov
adcl
dec
push
dec
and
mov
jecxz
cmp
pop
jb
inc
arpl
jae
and
in
cmp
shlb
adc
mov
mov
jge
cmpsl
minps
sub
mov
sub
pushf
ret
ljmp
mov
fs
xor
out
ret
fsubrs
movsb
push
or
xchg
aaa
mov
jmp
neg
ss
and
out
movsl
pop
sub
cmp
pop
mov
test
movsb
push
in
iret
push
sahf
adc
mov
mov
mov
fistpll
xor
push
daa
push
fists
add
pop
jns
fildll
testb
xor
pop
sub
popa
cltd
jne
es
lea
call
add
pop
cmpsb
xor
jg
jecxz
leave
xchg
mov
scas
inc
les
popa
sub
mov
dec
iret
pusha
loope
sbb
ss
cmpsb
aaa
push
cwtl
cltd
adc
cmp
fnstenv
sbb
jno
sub
and
cwtl
fisubl
popf
fcoms
mov
in
push
ljmp
mov
push
mov
mov
mov
pop
xchg
xor
shll
push
sbb
jno
and
fdivl
jecxz
inc
faddl
std
pop
cwtl
sbb
int3
scas
push
inc
fistps
ds
inc
inc
imul
iret
xor
xchg
repz
mov
sbb
add
mov
jb
xchg
les
and
jp
sbb
xchg
in
ret
negl
and
sub
pop
add
sbb
dec
ja
mov
scas
or
cs
xchg
nop
dec
roll
mov
xchg
push
dec
cmp
add
mov
jg
dec
mov
pop
sahf
inc
decl
mov
in
js
inc
loop
pop
pop
or
stc
adc
mov
hlt
mov
inc
cmp
data16
icebp
imul
sbb
xchg
add
mov
mov
sub
ret
and
jno
cmp
ret
pop
mov
lret
xchg
stos
cli
or
sahf
jmp
add
jne
leave
xchg
mov
es
jae
push
mov
jmp
scas
jno
cwtl
mov
pop
mov
in
push
push
or
cmp
inc
test
aam
fdivp
adc
out
popa
cmp
cmpsl
inc
adc
adc
and
clc
adc
dec
mov
aas
xor
sbb
cmc
dec
mov
jne
and
cmp
out
adc
mov
mov
cmp
lcall
cmp
out
xor
out
xchg
jecxz
or
push
jle
lret
aas
push
out
add
arpl
and
shlb
shr
mov
xor
js
xchg
aas
or
xchg
ret
adc
lret
gs
jge
cmp
loope
push
movsb
xor
or
jns
lods
push
imul
pop
stos
cld
ss
mov
shll
push
inc
xlat
push
sbb
pop
ljmp
arpl
clc
push
xchg
stos
sub
dec
cltd
into
lods
xchg
mov
addb
adc
jg
dec
pop
imul
and
aad
push
jns
cmpsb
rorl
sub
cs
add
push
dec
je
divl
push
ret
and
rorb
in
movsb
bound
pop
adc
cld
add
sar
push
pusha
out
dec
mov
std
pop
dec
mov
push
subb
mov
push
xchg
shrl
sbb
mov
icebp
xchg
data16
shlb
pop
mov
fcomps
cltd
aas
jle
fimull
sbb
int3
push
aam
int
mov
aam
or
clc
aaa
lock
mov
jle
lahf
stos
loop
mov
push
or
int
lret
leave
popf
outsb
mull
jl
lods
test
fdivrl
or
inc
jb
bound
loopne
xchg
inc
push
mov
int
mov
roll
mov
sub
push
dec
outsl
out
dec
aam
push
jmp
out
les
into
mov
fistl
push
cli
les
jmp
xor
test
dec
jecxz
aaa
inc
mov
adc
fs
mov
push
xor
inc
nop
daa
cmp
or
cld
jbe
push
fildll
sub
pop
jns
dec
out
sbb
push
xchg
cmpsb
stos
xorb
in
ds
out
ljmp
add
push
sbb
nop
sub
mov
fldcw
inc
sbb
test
cli
popf
mov
mov
rcrl
and
mov
jb
adc
int
outsb
bound
jae
inc
jecxz
inc
and
es
bnd
dec
jbe
pop
idivl
imul
xchg
cmc
sbb
loopne
sub
loop
cmp
jns
inc
fimull
aad
push
fsubrs
mov
in
int3
mov
fwait
out
hlt
inc
lds
es
push
jle
test
cmpsb
mov
adc
mov
push
test
xor
mov
popa
addr16
outsl
testb
xchg
cmp
lret
push
lods
add
sbbb
rcll
xor
enterw
movsl
lret
stos
mov
loope
and
adc
fistps
jg
mov
push
popf
outsb
sbb
or
or
jg
adc
repnz
fwait
pop
scas
dec
xchg
cmp
mov
xlat
cs
dec
pop
cmp
or
js
add
jns
test
dec
or
xchg
shlb
xor
enter
push
js
fdivrl
or
cmp
faddl
popa
aas
int3
ja
adc
std
faddl
adc
divl
fs
mov
jg
and
jno
lods
xchg
fstps
xchg
jp
mov
mov
sbb
les
mov
in
in
loop
enter
xchg
mov
sahf
pop
ds
dec
fsubrp
mov
cli
cltd
lds
arpl
fldenv
out
std
movsl
mov
mov
jp
mov
in
mov
push
mov
adc
rcll
sbb
adc
imul
sub
jb
rclb
stc
icebp
mov
inc
loope
and
addr16
inc
bound
nop
xor
push
dec
or
push
push
mov
fnstenv
aam
xchg
aaa
shl
pusha
sub
xchg
jecxz
ret
add
add
mull
push
pop
cmpsb
adc
daa
cmc
or
lcall
or
jne
sbb
and
xchg
mov
mov
ud2
jae
popa
mov
scas
xlat
shlb
xchg
aas
int3
lcall
push
pop
xchg
imul
adc
sbb
rcrb
sub
filds
jle
mov
fisttps
testl
es
test
fmuls
nop
mov
sbb
mov
mov
or
mov
push
test
adc
dec
in
int
mov
dec
cmpsl
loopne
push
cmp
in
mov
fisubs
mov
scas
ret
mov
pop
jge
mov
adc
mov
repnz
mov
les
pushf
adc
mov
adc
or
repnz
lret
mov
jno
pop
lea
sbb
divb
xor
xor
and
cmp
mov
cs
xor
int3
imul
mov
ret
ret
or
pop
and
lds
pop
sahf
fs
pop
mov
fwait
subb
mov
push
outsl
xlat
cmpsb
lret
mov
mov
cmp
jp
add
test
mov
mov
popa
cmpb
imul
fucomip
vphaddudq
push
sbb
mov
mov
std
daa
and
mov
or
mov
jae
mov
fimuls
sub
pop
sub
push
daa
inc
pop
addr16
repz
adc
imul
ljmp
mov
mov
jp
in
dec
xchg
pop
mov
pop
jmp
shlb
insb
cmp
in
push
enter
or
mov
bound
push
adc
loope
andb
or
ss
ds
jae
lock
mov
inc
sti
pop
mov
cmc
push
hlt
jae
push
gs
jecxz
lret
pop
fwait
es
data16
sbb
mov
adc
sub
rorl
sahf
stc
cltd
cmp
adc
fcoms
adc
dec
sub
in
cmpsl
xlat
mov
push
das
test
mov
mov
clc
aas
fmuls
xchg
cltd
sub
data16
pushf
mov
stc
dec
or
xor
or
mov
push
bound
xchg
add
sub
push
stc
cmp
pop
mov
je
lcall
aad
sub
pop
nop
sub
mov
out
jns
mov
aaa
in
xchg
addr16
roll
fmul
push
dec
mov
and
xchg
push
xchg
das
or
mov
mov
jno
push
pop
push
jmp
rcrl
adc
bound
jecxz
mov
addr16
insb
cmp
nop
jae
and
sbb
or
jb
popf
inc
inc
and
out
jl
out
pop
out
imul
add
add
jecxz
adc
mov
testl
dec
lahf
inc
dec
fdivrs
push
and
test
loope
addl
xchg
in
daa
cltd
fmuls
pop
mov
push
push
das
cmp
out
mov
jb
or
push
loopne
sbb
mov
xor
and
dec
in
gs
xchg
push
fisubl
or
cmp
mov
enter
jne
dec
xchg
cwtl
cmpsb
daa
pop
inc
and
testb
xor
in
fists
lret
dec
addr16
add
pop
inc
lods
bound
xor
test
in
inc
jg
outsl
xchg
imul
cmp
and
leave
xchg
sub
fldt
es
mov
sub
jb
fcoms
pop
or
push
mov
loopne
mov
pop
in
aam
push
xor
xor
add
lcall
out
stos
cs
repz
jp
insb
imul
sub
jp
nop
jmp
add
xlat
mulb
xor
dec
mov
cmp
ret
adc
jno
xchg
lods
lods
aam
cltd
shlb
lret
sar
pop
enter
aad
adc
dec
into
in
push
iret
movsb
inc
cli
dec
mov
outsl
jge
fistps
adc
push
ljmp
sbb
cmp
in
test
lcall
jb
xchg
vmovlpd
mov
fcmovu
adc
test
cltd
arpl
ficompl
adc
sar
add
push
push
jmp
adc
mov
or
or
bound
sahf
lods
sti
cmpsl
mov
xchg
sbb
mov
push
data16
add
ret
pop
scas
jecxz
outsl
mov
push
cs
out
es
xchg
add
lcall
popa
sti
pop
pop
call
inc
cmpsl
and
fcmovnu
inc
cmp
in
xchg
jg
add
into
mov
cmc
sbb
jg
mov
repnz
test
in
sbb
icebp
push
ss
mov
pushw
cmp
jp
sbb
lea
fcoml
loopne
mov
lret
xor
sbb
jge
sbb
es
dec
mov
jg
cmpsl
mov
test
stc
stc
insl
push
test
inc
fcom
enter
in
xchg
cld
les
aam
jle
int3
sbb
je
xchg
lods
test
ss
jne
sub
sti
mov
dec
jbe
and
cmp
cld
roll
mov
ja
sub
mov
cmpl
jbe
pop
mov
scas
ja
inc
lret
lahf
cmp
add
add
and
std
ljmp
sub
lods
clc
pop
movsl
lds
incl
enter
jb
test
and
repnz
sbb
mov
push
js
insb
stc
inc
stos
xchg
adc
xor
sbb
insl
fidivl
sub
dec
mov
scas
mov
mov
mov
es
icebp
mov
comiss
outsb
inc
jecxz
ret
mov
jp
adcb
sbb
push
mov
jns
das
sub
and
xchg
outsb
dec
inc
and
clc
mov
xchg
mov
and
aaa
cld
pop
push
push
mov
bound
xor
pop
and
cmp
or
mov
fmull
out
loop
mov
pusha
xor
lods
mov
lahf
cmc
xor
cmp
cld
aaa
aad
lcall
clc
nop
lret
adc
popf
pop
mov
lret
stc
shlb
ucomiss
xchg
imul
pushw
cmc
stc
popf
mov
mov
insl
popa
movsb
cmp
jae
cmpsl
dec
in
ljmp
aaa
dec
inc
dec
jne
push
test
lcall
clc
add
in
mov
sub
or
dec
sub
pop
icebp
sbb
pop
pop
orl
ds
out
std
mov
sahf
sub
jle
push
insl
push
pop
cs
ds
out
std
mov
sahf
sbb
jle
push
insl
push
pop
lea
mov
out
std
mov
sahf
jno
inc
outsb
sub
push
pop
cs
mov
out
lea
and
inc
repz
push
pop
mov
jbe
dec
stos
cmp
ljmp
outsb
stos
pop
lcall
sahf
pop
mov
cmp
sub
sbb
jb
cli
cs
or
fs
push
pop
dec
dec
out
cmp
or
cli
inc
leave
js
outsl
stos
pop
out
xor
sub
cmp
and
xor
dec
jne
stos
das
ficoml
sub
mov
ljmp
mov
mov
stc
loop
push
pop
iret
scas
cmp
scas
cmc
adc
mov
iret
in
sti
mov
ret
fucomi
jp
addr16
xor
dec
jbe
lahf
stos
stos
jmp
shll
xor
subl
dec
jecxz
fistpl
fbstp
hlt
sub
icebp
sub
mov
mov
cmp
push
cmp
dec
movl
jo
sub
add
or
stos
push
lcall
popa
dec
sub
jae
push
loop
adc
dec
jmp
mov
sti
mov
pop
lahf
lea
push
pop
loop
cmp
or
cli
mov
lret
jo
pop
lcall
ficompl
dec
nop
pop
fwait
inc
int
scas
pop
pop
subl
mov
add
sub
or
mov
aas
inc
dec
xchg
push
data16
mov
xchg
jnp
bound
sub
pmulhw
ds
and
sub
das
mov
sbb
or
cli
cs
outsb
stos
pop
lcall
sahf
pop
mov
cmp
sub
sbb
or
cli
cs
outsb
stos
pop
lcall
ss
mov
xchg
stos
dec
jge
lahf
jno
lcall
xor
std
pop
mov
cmp
push
lods
jg
insl
aad
add
jge
or
xor
out
cmp
cmp
jmp
mov
int
out
sbb
imul
js
lds
sub
fisubs
push
sbb
fmuls
test
call
and
push
std
leave
inc
sub
ss
mov
adc
lcall
cmp
mov
xchg
add
push
inc
cmpsl
es
jmp
xor
loope
lock
and
in
or
fstl
or
xchg
cmp
aas
pop
movsb
jmp
paddd
jno
sbb
leave
mov
sbb
loopne
dec
cltd
jbe
cmp
fwait
arpl
inc
loope
pop
push
cmp
lods
ds
cmp
fwait
sarb
sarl
or
imul
stc
push
jns
lods
adc
cli
sbbb
mov
nop
mov
movsb
or
lret
jbe
and
rcll
fiadds
mov
inc
pop
test
and
push
pop
mov
stc
inc
pop
jg
nop
and
std
cli
fs
adc
push
pop
sbb
test
dec
adc
outsb
mov
sbb
jnp
lcall
jp
sbb
mov
xchg
push
lods
pop
sbb
jmp
xchg
fstl
dec
mov
sbb
fsubrl
pop
dec
scas
pop
xor
cmc
ja
cmp
je
push
outsb
pop
aad
xor
mov
mul
loope
mov
dec
aas
in
imul
test
add
cmp
pushf
inc
xchg
push
xorl
mov
stc
pop
fnsave
adc
pcmpeqb
rcl
xor
inc
popa
push
mov
and
jbe
outsb
pop
cli
out
sub
cmpsl
lods
stc
inc
mov
flds
dec
movsl
ficompl
das
ret
icebp
jmp
add
cmp
mov
add
fldenv
ret
fdivs
and
mov
subb
pop
lcall
out
mov
into
stos
mov
jae
sub
int
cld
mov
data16
mov
das
aas
in
scas
aam
dec
iret
test
push
xchg
mov
cmp
push
xor
popa
xor
adc
xor
sub
mov
jne
mov
lods
inc
push
jbe
repnz
and
dec
and
les
or
jecxz
cld
scas
test
in
in
xlat
adc
and
pop
push
loope
mov
and
mov
mov
xor
cwtl
mov
rolb
adc
imul
xchg
sub
inc
aam
icebp
mov
cs
gs
xor
mov
jle
dec
bound
stos
jp
inc
fcomps
insl
and
xchg
sahf
sbb
inc
jo
dec
cmc
mov
mov
mov
ror
add
imul
cmpsl
jo
aaa
mov
mov
inc
adc
or
test
jge
cld
jb
xchg
in
cli
cld
lods
shl
loopne
adc
nop
jg
pop
stos
cs
add
ja
sbb
pop
ljmp
adc
loope
push
pop
sub
movsl
jmp
or
sti
jb
pop
mov
inc
xlat
das
imulb
fwait
xor
ss
pop
mov
rcrl
in
arpl
sbb
leave
mov
adc
xchg
mov
dec
in
je
inc
cwtl
add
call
cs
imul
and
xor
in
loop
jmp
repz
clc
mov
insb
int3
mov
into
fildl
les
xchg
nop
cmp
jne
inc
popa
push
leave
stos
pop
pushf
mov
xor
pushf
mov
adc
xchg
add
xchg
xlat
subb
jle
mov
stos
imul
out
ja
pop
imul
pusha
in
mov
jnp
andb
mov
lods
adc
add
cmp
adc
and
fsubrs
sbb
jae
outsb
jle
into
xchg
or
lahf
pusha
or
adc
sbb
sub
xchg
mov
mov
mov
ret
mov
mov
ror
dec
mov
pop
pop
les
ljmp
mov
mov
aas
pop
add
push
cmp
cmp
and
lods
outsl
sbb
addb
mov
lds
fs
mov
inc
movsl
jne
xor
and
mov
jno
inc
jnp
and
es
mov
sbb
push
mov
test
enter
push
mov
push
jbe
aam
adc
testb
mov
daa
lds
insb
aas
push
in
mov
out
stos
add
lahf
sbb
ret
fsubrl
pop
mov
mov
lret
jns
stos
mov
cltd
fstpl
andb
adc
mov
adc
movsl
fists
ret
xor
jae
pop
lock
mov
or
mov
fists
and
repnz
cltd
pop
adc
jg
xchg
jb
push
clc
jg
xor
mov
inc
test
xchg
les
sbb
repz
cmp
push
ljmp
iret
stos
jg
xchg
sbb
adc
push
sahf
mov
inc
repz
cs
push
pop
pop
ljmp
call
mov
inc
push
jecxz
and
fistpll
mov
jecxz
mov
es
push
ret
sub
loop
popf
xchg
jle
iret
fcmove
mov
jo
mov
jl
inc
pushf
dec
aad
pop
sbb
push
imul
jns
sub
sbb
sbb
push
or
jb
ss
xlat
das
pop
test
adc
fcom
sbb
shll
pop
aad
cmpsb
adc
mov
xorl
xorl
jecxz
cmp
cmp
jbe
xchg
ja
and
test
xorl
stos
xor
leave
orb
arpl
mov
jae
mov
sbb
rorl
dec
or
mov
cmc
push
pusha
xchg
sti
jl
jg
sbb
cmp
cmpsl
add
xor
lahf
push
push
cld
movsl
sbb
or
jnp
sub
mov
pop
or
inc
lcall
lods
cmc
sarb
subb
mov
jl
adc
leave
popa
stos
shr
push
out
inc
pushf
and
adc
mov
sbb
hlt
xor
cli
sub
push
imul
aam
cmp
mov
into
mov
jge
and
js
mov
loopne
xchg
ds
dec
sahf
push
je
and
test
cmp
les
lds
ds
cmpsb
jge
cltd
pop
ret
mov
js
push
inc
inc
ficoml
lods
mov
lea
cmp
mov
fcmovnb
push
pushf
movsl
dec
xchg
mov
mov
lret
push
out
out
inc
aaa
cmp
sub
pop
dec
jo
test
call
insb
xchg
cmp
mov
sbb
outsb
ja
inc
bound
in
loop
push
aaa
repnz
add
jo
push
fwait
xchg
jb
and
in
cltd
rorb
std
mov
jo
pop
fwait
mov
repnz
cltd
mov
jmp
mov
inc
lods
pop
push
mov
inc
adc
push
out
cmp
push
aaa
or
enter
dec
adc
ficomps
loope
adc
icebp
or
cmp
lret
lret
xor
popa
test
mov
lds
ja
popf
repz
mov
push
mov
rolb
or
xchg
jp
js
mov
stos
xor
out
call
pushf
arpl
sub
mov
imul
daa
fstl
xchg
push
push
push
jbe
jne
or
and
push
inc
dec
fcoms
jge
or
mov
add
jg
add
lret
lock
or
sbb
mov
enter
push
repnz
lahf
xor
rolb
push
jbe
lods
scas
push
push
push
xchg
mov
lock
dec
in
mov
jne
ljmp
sahf
or
xor
clc
push
ds
pop
icebp
bound
dec
andb
xlat
mov
jb
jno
notl
add
pop
push
movsb
push
ret
jle
stos
sbb
test
pushf
stos
mov
push
lret
push
std
add
and
mov
jb
mov
cmpsl
push
and
fsubrs
out
out
cs
cli
pop
xor
xchg
mov
stos
lock
push
dec
imul
jp
inc
xrelease
push
lret
paddusb
in
ret
call
push
cld
mov
mov
jb
mov
rcrb
fnstcw
add
shrb
or
stc
sbb
test
movsb
add
mov
xchg
push
jmp
mov
mov
ret
or
clc
shlb
aam
dec
jo
sbb
ffreep
mov
stos
jmp
mov
mov
pusha
fnstcw
and
mov
cwtl
mov
addr16
insb
adc
ljmp
sbb
jge
mov
xor
pop
pop
push
aad
pusha
push
sbb
add
sub
iret
cli
pop
stos
pop
ret
xchg
das
or
sub
push
sbb
scas
sub
inc
or
and
scas
rol
dec
fs
sbb
rorl
cmp
push
mov
dec
test
stos
cmp
pop
pop
popa
das
insb
mov
popa
or
ljmp
adc
mov
out
fsubr
dec
nop
popf
lret
inc
push
lcall
or
shll
pop
test
pop
push
mov
or
xchg
dec
in
and
bnd
push
and
inc
dec
shll
mov
pop
mov
stos
dec
push
ror
out
outsl
popa
subl
out
adc
push
iret
arpl
stc
pop
shrl
jne
ret
fldenv
add
jo
ljmp
incl
insl
dec
fadds
int3
sub
cmp
xchg
or
push
pop
rcrl
insb
jbe
lock
pop
ret
sbb
inc
push
test
inc
push
sub
hlt
and
jb
addr16
cmc
xchg
xor
imul
xchg
fmuls
dec
out
rol
pop
cmp
jg
sahf
adc
into
addr16
jp
mov
inc
test
xchg
out
sub
in
push
call
lret
adc
ja
mov
test
and
xchg
out
icebp
leave
imul
adc
cmp
repz
or
lock
ret
push
xor
movb
mov
in
ja
mov
fsubl
push
add
nop
in
stos
xor
pop
jecxz
jle
sar
adc
into
ret
cmpsl
loope
adc
mov
test
mov
inc
addl
out
decb
cltd
and
fmull
insl
jo
push
dec
out
outsb
scas
pop
or
jg
cwtl
xchg
ja
ja
dec
fidivrl
or
cmp
mov
stos
popa
pop
pop
or
inc
add
test
or
mov
xor
ljmp
jmp
or
and
push
mov
fsubs
fimuls
adc
adc
repz
dec
inc
pusha
lods
mov
ret
lods
jo
cwtl
test
cmp
insb
arpl
out
shl
push
lret
cs
mov
fistpl
cld
mov
addl
movl
xchg
adc
aas
and
repz
adc
divl
repnz
cltd
jp
movsb
xorl
cmpsb
clc
jmp
dec
xchg
cmp
lret
fdivr
xchg
loop
sbb
lcall
cmp
cmp
mov
decl
mov
ror
mov
dec
or
dec
xor
lahf
and
dec
jno
sbb
sub
ss
sbb
mov
jbe
push
cli
imull
fisubl
add
addr16
cld
dec
push
popa
insl
frstor
ficompl
mov
and
cmp
jle
movsl
pop
push
int3
cmp
rcrl
lea
cltd
ret
fldenv
fstl
in
lret
es
push
mov
pop
popa
inc
mov
mov
fimull
scas
push
mov
ja
xchg
push
dec
jb
pop
mov
jecxz
loopne
loop
outsb
iret
inc
adcb
roll
insb
mov
mov
lret
cmp
sub
mov
mov
dec
or
addr16
sbb
aam
movsb
jp
das
mov
xor
jge
pushf
push
icebp
test
push
mov
cmpsb
pusha
clc
movsl
pop
je
ds
rclb
dec
jb
or
cmp
das
add
pop
pop
jg
outsl
into
outsb
test
stos
pop
cmp
add
movsl
xchg
lret
xchg
es
mov
dec
out
fnstcw
iret
cmp
xchg
mov
jne
and
add
adc
iret
and
out
adc
mov
mov
inc
int
dec
and
add
adc
pop
in
cmp
aas
mov
sub
imul
xchg
pop
bswap
ret
xchg
pop
sahf
pop
adc
lods
sub
clc
mov
scas
jle
lds
dec
jmp
xchg
mov
xchg
push
sbb
icebp
leave
cmpsb
mov
shll
mov
add
mov
xchg
add
les
shrl
push
sbb
addr16
inc
sub
cld
out
push
outsb
xchg
ret
out
cli
xor
lods
add
cwtl
into
cmp
into
int
je
fisubs
pushf
add
into
aam
les
test
mov
jne
insb
jb
inc
and
mov
jno
pop
test
inc
mov
aaa
dec
add
adc
or
enter
or
outsl
and
mov
shrl
mov
ljmp
sub
testb
pop
sbb
push
xchg
mov
xor
xor
lret
sbb
jg
sbb
cltd
adc
testl
xor
xor
cmp
jg
loop
adc
shlb
test
je
shl
sub
ret
xchg
jno
xor
imul
push
das
sbb
loopne
or
int
scas
outsl
sub
fwait
sbb
call
dec
shlb
pop
test
ret
pop
repnz
testl
pop
xor
pop
push
cmp
pop
repz
enter
in
std
jmp
or
mov
pop
mov
inc
movsl
out
sbb
popf
xor
inc
sbb
xchg
adcb
out
xchg
sub
mov
mov
mov
inc
testl
mov
dec
pop
insb
addl
in
lock
mov
lock
xchg
add
loop
pop
xlat
cmp
stc
dec
stos
out
nop
push
or
add
jmp
mov
cltd
pop
icebp
inc
push
sub
ljmp
inc
imul
or
ljmp
xchg
pushf
xchg
es
ljmp
inc
rolb
dec
outsl
mov
cmc
jne
lea
js
pop
cmp
mov
inc
leave
repz
test
fisubl
adc
loopne
aas
mov
dec
xchg
sub
out
jae
cmp
mov
sbb
push
jo,pt
fsubs
shll
or
push
in
xchg
xchg
mov
pop
aas
das
lock
pusha
adc
popa
mov
jns
aad
cmp
gs
push
in
aam
std
jle
add
mov
inc
push
push
sub
in
insl
clc
in
cmpsl
rolb
insl
dec
jmp
outsb
and
movsb
push
es
daa
loopne
mov
clc
dec
icebp
jl
mov
xchg
jb
iret
es
cmp
in
mov
inc
sub
jne
cmp
addr16
push
aas
inc
je
and
and
lock
fsubs
mov
movsl
je
out
mov
in
pop
addr16
mov
mov
pop
adc
ret
mov
pop
movsl
les
sbb
cmpsb
and
cmp
shl
pop
fwait
mov
gs
jle
das
pop
sbb
mov
std
dec
jge
insb
jne
subl
xor
mov
subb
mov
jl
sub
neg
inc
pop
mov
xchg
inc
pop
pop
dec
imul
shll
or
imul
push
or
in
inc
call
inc
pop
cmp
mov
mov
and
and
xchg
stos
pushf
cmp
cmpsb
xchg
popa
stos
cmpsl
push
mov
push
filds
ret
adc
icebp
xchg
mov
add
inc
gs
or
hlt
or
rcll
mov
pop
pop
push
popf
test
mov
jmp
dec
insl
in
repz
decb
cmp
push
fcoms
sahf
jle
std
loopne
shlb
lock
nop
lahf
push
pop
mov
inc
xchg
or
mov
pop
daa
aad
inc
mov
mov
push
loopne
gs
xchg
fwait
dec
dec
cmp
out
and
lcall
outsb
fwait
jmp
les
cltd
dec
cli
sbb
icebp
xchg
push
cmpsl
mov
sub
xchg
inc
jb
stc
mov
inc
mov
leave
dec
adc
sub
mov
or
sub
xor
lock
sbb
outsl
sub
aaa
fsub
xor
or
inc
jne
pop
es
fisttpl
xor
mov
sub
cmp
divb
mov
test
add
push
mov
inc
lock
scas
daa
cmp
cmp
icebp
sub
push
adc
nop
sub
out
inc
loopne
lock
aad
inc
test
cmpsb
or
shlb
adcb
cmp
mov
adc
andl
clc
sbb
dec
mov
ja
pop
addb
lds
pop
loope
lahf
xor
rcll
sbbb
mov
or
icebp
popf
aam
mov
hlt
arpl
out
dec
jg
push
mov
xor
arpl
pop
jg
jne
aad
cmp
and
sbbl
sub
inc
cmc
and
aaa
out
clc
inc
clc
cld
dec
in
xor
arpl
pop
push
jle
mov
jno
sbbl
adc
mov
xor
push
idivl
mov
addb
je
push
mov
push
stos
push
lret
push
mov
stc
scas
add
iret
jnp
push
pop
mov
pusha
xchg
rcrb
lods
mov
push
stc
sti
insb
inc
inc
scas
adc
fistl
add
popf
je
in
jb
mov
ret
ds
cs
leave
mov
decl
adc
dec
insl
scas
in
mov
sahf
and
fistps
jnp
push
inc
mov
ret
pop
cmp
dec
loopne
fidivrl
add
call
sub
js
xchg
fmull
dec
arpl
adc
cltd
cmc
das
gs
xchg
sbb
inc
fwait
add
scas
mov
push
mov
xchg
xor
xor
add
out
and
jo
psubsw
inc
xchg
jo
xchg
sub
mov
jle
or
or
pop
xor
mov
rolb
dec
mov
dec
fwait
aad
xchg
push
and
in
sbb
jnp
fcoms
inc
fisttpl
or
sahf
push
lcall
testl
mov
test
pushf
or
std
pop
sbb
jg
sbb
push
pop
cmp
test
cmp
stos
or
clc
dec
and
push
pop
mov
or
mov
and
xlat
cmp
mov
jno
popl
jb
popa
dec
adc
jg
aas
jne,pt
setnp
push
hlt
pop
mov
aad
pop
inc
ficoml
xchg
clc
sbb
adc
movsb
mov
cmc
cmp
aaa
fmuls
shl
int3
inc
das
adc
inc
cmp
adc
xor
mov
or
push
stc
sub
aad
cmp
mov
push
push
mov
clc
add
xlat
add
xor
pusha
pop
and
xlat
xchg
fs
inc
into
mov
xor
pushf
enter
fisubl
addr16
adc
or
cmp
add
push
negb
sbb
sbb
push
pop
sbb
push
ljmp
test
loop
adc
ss
jno
sbb
jge
lds
push
or
mov
or
sarl
cmc
data16
cltd
dec
or
xor
or
xlat
lods
daa
pop
aam
in
xor
mov
nop
ljmp
cmp
aam
int
test
mov
out
jo
inc
arpl
mov
mov
push
pop
pop
or
mov
out
fcoms
jecxz
pop
ljmp
sub
fists
daa
outsb
loopne
shrl
insl
adc
fdivs
cmp
lahf
pop
out
das
shrb
or
cmp
movsl
inc
test
push
gs
inc
xor
xchg
je
push
xchg
jge
out
mov
mov
sub
lret
daa
push
adc
stos
cmp
jo
push
jo
popf
shll
mov
ficompl
adc
push
test
pop
fwait
scas
or
xchg
xchg
sbb
push
pop
xchg
dec
cmp
sub
sbb
or
cli
cs
outsb
stos
pop
lcall
sahf
pop
mov
cmp
sub
sbb
or
cli
cs
outsb
stos
pop
lcall
mov
dec
cmp
sub
sbb
or
cli
cs
ja
pop
lcall
push
pop
cmpsb
dec
cmp
sub
sbb
ds
roll
fimull
mov
mov
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
mov
ret
jne
pusha
and
jno
inc
test
add
push
pop
add
push
or
pop
add
pop
add
add
add
add
push
pop
add
add
add
test
push
add
mov
mov
add
add
mov
pop
add
xor
lock
adc
add
add
add
xor
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
sub
or
es
push
add
out
sbb
call
add
add
add
push
rolb
push
add
add
add
add
mov
dec
add
add
pop
add
add
add
push
add
add
pop
add
add
add
add
add
rolb
mov
add
mov
sub
and
jmp
add
add
loop
inc
add
add
add
test
dec
add
add
add
pop
add
add
cmp
inc
add
add
add
add
add
jl
add
add
add
add
add
mov
add
cmp
add
pop
add
add
add
add
add
add
cmp
mov
popf
add
add
scas
add
add
add
add
add
add
add
add
add
imul
add
pop
add
add
add
add
addl
add
add
add
add
pop
add
mov
add
add
mov
es
lds
cltd
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
mov
add
add
add
jnp
add
add
add
adc
add
add
add
add
add
add
popf
add
fiaddl
mov
inc
add
add
jl
dec
add
add
add
add
add
add
add
add
add
add
xor
push
add
add
add
add
cltd
add
add
stos
add
push
add
add
xchg
add
add
leave
add
xor
push
add
add
add
add
add
add
add
mov
add
add
push
add
add
add
add
add
add
add
add
push
add
add
roll
and
sbb
push
pop
add
leave
add
es
cmp
adc
add
add
xor
es
es
cmp
adc
add
add
pop
add
add
test
xor
cmp
add
mov
add
add
add
add
add
add
add
add
add
and
clc
add
add
push
push
add
pop
add
add
add
add
addl
es
add
push
add
cmp
or
add
add
add
add
add
and
cmp
cmp
mov
dec
add
add
nop
add
into
add
xor
add
xchg
add
add
add
sub
jl
jmp
add
add
push
add
jmp
fnstenv
shll
mov
ds
lret
dec
mov
jecxz
aas
leave
sub
jp
rol
dec
popa
dec
jge
inc
xor
dec
adc
mov
mov
dec
sub
xor
push
add
xor
jg
fcomp
mov
mov
mov
rol
call
rcrb
dec
push
pop
push
orb
jns
pop
sbb
xchg
sarl
ret
jge
add
push
pop
mov
in
mov
fistl
mov
push
rorl
sub
lea
nop
xchg
or
fucomip
addl
addr16
xchg
inc
add
sub
lods
dec
daa
inc
add
imul
nop
in
fstps
sub
scas
xchg
xlat
dec
rol
pop
push
imul
sub
idivb
pushf
shll
xor
lret
xor
aaa
fisttps
mov
dec
lods
repnz
adc
sbb
es
adc
test
cmpsl
push
jns
add
inc
add
xchg
mov
jnp
cli
cld
mov
loope
test
cmp
ljmp
mov
test
rcl
rcr
pop
cmpsb
adc
sub
int
inc
idivl
cmp
es
lock
xor
clc
dec
testl
inc
pop
cltd
int
sub
jmp
pop
es
jo
in
jmp
sbbb
negb
ret
scas
sar
shlb
gs
outsl
jno
sub
inc
push
mov
call
xchg
sub
push
aas
sbb
icebp
or
fistl
push
xchg
aad
push
lcall
dec
pusha
jecxz
and
mov
xchg
inc
aas
or
loope
jl
push
xor
push
repz
push
mov
mov
scas
xchg
imul
in
pop
push
mov
sbb
or
fsts
fisubrs
adc
xor
arpl
sub
scas
xchg
jp
mov
cmp
dec
fisttpl
sub
lret
fistpl
push
xchg
fistpl
pop
cmpsb
adc
xchg
cs
roll
movsb
mov
enter
repnz
cmp
sarb
adc
dec
jmp
sahf
decb
mov
into
jle
aad
ret
adc
lods
mov
fcoms
push
push
push
xchg
cltd
add
hlt
mov
and
pop
in
jno
add
mov
sub
xchg
mov
mov
jb
lret
fsubs
clc
sbb
test
stos
fs
repnz
shlb
clc
sub
cmpsl
sub
dec
cmc
mov
bswap
cmp
mov
int
sti
fsubrp
mov
cwtl
fisttpl
leave
mov
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
