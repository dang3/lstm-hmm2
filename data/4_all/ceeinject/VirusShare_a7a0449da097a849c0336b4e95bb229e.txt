fsubr
loopne
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
mov
aas
lret
jle
cs
pop
push
pop
fisubrl
sbb
or
in
pop
ljmp
pop
stos
dec
lcall
ds
scas
cmp
sub
sbb
or
jecxz
repz
ret
pop
mov
jne
pop
jp
popa
lods
fidivrs
fstl
lea
mov
dec
xchg
insb
movsb
dec
mov
push
mov
cld
jae
adcl
inc
dec
pop
ret
adc
add
int3
fimull
sarb
push
les
inc
nop
mov
xchg
jae
inc
inc
incl
je
mov
xchg
data16
hlt
mov
mov
xchg
xor
sahf
xchg
lahf
or
outsl
xor
pop
cli
inc
das
lahf
dec
mov
loop
sbb
outsl
pop
inc
push
scas
mov
add
xchg
sbb
adc
shr
insb
push
mov
xchg
fmuls
dec
pop
nop
mov
ficoml
loopne
lock
dec
inc
incl
adc
mov
test
xchg
fbld
mov
mov
adc
test
xchg
ljmp
pop
mov
lcall
daa
inc
mov
xor
sbb
adc
mov
pusha
mov
cli
and
fsubrl
sub
and
push
cwtl
dec
mov
cli
pop
ljmp
or
iret
pop
js
push
pop
in
aas
lahf
pop
nop
pop
iret
push
or
push
lret
adc
outsl
jp
push
pop
mov
sub
sbb
or
cli
pop
ljmp
pop
stos
dec
lcall
pop
mov
sub
sbb
or
cli
pop
sub
inc
mov
inc
and
rcrb
cmc
movsb
jge,pn
xchg
lcall
mov
mov
or
or
mov
sub
imul
call
push
or
shrb
mov
add
adc
jge
outsb
cmp
mov
pop
dec
fildll
xor
adc
cltd
xchg
pusha
pop
mov
push
add
mov
xchg
xchg
subb
es
shrb
out
cmp
ljmp
push
sahf
loop
sub
movsb
push
xor
aaa
pop
fxam
test
pop
aad
popf
addr16
jb
mulb
imul
add
push
inc
cmpsb
leave
into
sub
popa
or
pop
lcall
cltd
decb
mov
shrb
mov
push
aas
push
clc
jp
inc
sub
inc
in
xchg
lods
mov
in
scas
insb
adc
lea
xlat
mov
in
jle
jb
inc
dec
cmp
ret
sbb
not
and
repz
or
xchg
push
push
gs
sbb
adc
or
fs
add
jge
or
fistpll
repnz
push
les
aaa
adc
arpl
xchg
int
push
jmp
in
pop
mov
mov
ja
popl
mov
movsl
roll
push
stos
daa
jne
fs
inc
inc
fistpl
enter
mov
out
push
icebp
or
arpl
pop
addr16
xlat
cmp
pop
loopne
pop
shll
dec
mulb
movsb
or
lret
lds
jg
cli
cld
sbb
add
idivb
loopne
jno
inc
std
shlb
scas
sbbl
mov
sbb
cmp
aaa
and
mov
mov
das
dec
ss
add
stos
test
test
adcb
adc
and
sbbl
adc
roll
dec
pop
pop
sbb
nop
mov
pop
xor
lret
adc
aaa
sub
pop
aam
movsl
push
adc
flds
xor
pop
jle
iret
and
add
dec
gs
xor
cmp
ficoml
sub
mov
cltd
and
jle
mov
call
xorl
call
jmp
sub
loope
xor
lds
mov
pop
dec
or
loope
dec
dec
push
xchg
fcoms
mov
dec
jg
mov
pop
push
hlt
jne
repz
nop
xor
dec
inc
loope
pmuludq
inc
outsl
sbb
inc
pop
mov
ret
cltd
lea
mov
xor
jmp
mov
dec
adc
in
in
decl
addr16
fisttpl
mov
dec
outsl
imul
loop
push
xorb
jg
and
xchg
push
pop
stc
loope
push
adc
into
insb
aad
leave
xor
mov
inc
int
ljmp
push
and
cmp
popf
inc
pop
aaa
push
inc
dec
in
push
jns
jecxz
imull
clc
pop
mov
sub
rcr
clc
insl
aas
insl
and
loope
ss
add
das
pop
fidivrs
jns
pop
fimuls
jmp
mov
fnstsw
fiadds
sbb
rclb
movsl
js
xlat
dec
sar
js
rolb
or
xor
idiv
pop
andl
mov
pop
adc
push
enter
mov
setb
lds
mov
clc
inc
dec
dec
mov
outsb
pop
and
mov
int
div
sub
dec
in
imul
pop
pushf
xadd
adc
addb
fwait
sub
adc
in
cmp
test
jmp
mov
and
mov
in
cwtl
pop
aam
xor
inc
mov
hlt
aad
mov
fsubrl
xchg
mov
lock
jmp
mov
xor
pusha
add
lods
sub
outsb
mov
das
popf
aam
mov
test
pop
fld
insb
adc
scas
add
nop
mov
mov
xchg
mov
mov
pop
push
jae
jge
pop
cmp
enter
flds
mov
xchg
add
call
sbb
or
sub
or
data16
ret
into
push
and
pop
in
sti
cld
dec
xchg
jge
dec
and
pop
mov
ret
data16
push
stos
fst
cmpb
cmp
cmp
adc
push
mov
mov
mov
mov
mov
les
fmuls
or
out
pop
mov
cli
pop
jecxz
and
sub
jge
cld
int
pop
clc
mov
call
add
aam
adc
lea
add
sbb
sbb
push
cs
inc
iret
stos
test
mov
test
jns
or
dec
xor
or
inc
push
pop
add
adc
sbb
sub
and
or
push
shrb
imul
arpl
aad
xor
shrl
jl
inc
pop
mov
aam
lods
sbb
jnp
out
adc
sub
mov
and
addr16
sbb
xor
cmp
jnp
ljmp
xor
es
push
xor
sbb
xcrypt-cfb
cmpsl
loop
test
and
push
dec
mov
scas
mov
sahf
pop
cltd
mov
js
mov
clc
dec
jl
dec
push
sub
pop
fwait
mov
cwtl
adc
or
and
mov
add
aaa
imul
jb
push
adc
fsubl
dec
cmp
and
xlat
insl
stos
mov
ret
lcall
lahf
int
mov
lret
mov
negb
lea
sti
lcall
push
jbe
rorb
call
mov
or
aad
inc
add
dec
int3
mov
xor
jp
lds
pop
add
insl
dec
sbb
cmp
jl
add
and
xchg
enter
popf
cmp
fcoml
aas
sti
lock
test
lock
or
fisttpl
rcrl
mov
arpl
lods
or
dec
lahf
dec
push
sub
jmp
mov
sti
xor
test
adc
cmp
or
mov
shlb
test
mov
nop
stc
cmp
xchg
and
jecxz
mov
pop
lds
vmovupd
xchg
aaa
in
leave
xor
xchg
fwait
jmp
outsl
popa
test
fwait
or
xchg
sbb
stc
cmp
mov
mov
out
roll
callw
lret
popa
shlb
push
mov
push
adc
loopne
and
xchg
or
cmpsl
xor
mov
inc
movsb
or
mov
mov
sub
testl
dec
pop
mov
lea
mov
inc
inc
adc
loop
sbb
lcall
mov
into
test
ret
call
int
xchg
jl
mov
fcom
dec
out
sub
xor
or
repz
sbb
cwtl
lcall
mov
mov
xchg
push
insb
push
xchg
mov
in
mul
add
fs
mov
add
cwtl
das
cld
push
out
xchg
bound
iret
inc
ja
mov
shll
and
movsb
stos
mov
xlat
xor
test
fmull
negb
jbe
loopne
fldenv
jo
add
sar
cmpsb
mov
sub
adc
add
int3
jp
xlat
and
sti
notb
mov
aas
push
insl
outsb
insb
adc
dec
ds
insb
or
outsl
push
mov
jae
pop
add
dec
xchg
adc
scas
adc
cmp
movsb
xlat
add
dec
rorb
lahf
mov
mov
mov
inc
sbb
cld
cli
mov
lds
mov
out
jle
jne
idivb
adc
jnp
scas
adc
jecxz
insl
mov
cmc
xor
add
mov
rcr
pop
enter
mov
mov
sub
xchg
push
js
popa
fstpl
xchg
out
enter
in
cwtl
ds
in
push
std
lods
int
dec
mov
fs
add
aad
pop
lock
cltd
push
add
insb
mov
xchg
scas
jnp
cmp
xchg
inc
jle
xchg
xchg
movsl
xchg
jmp
cmp
addb
std
fists
add
mov
lock
inc
sbb
shll
xor
insl
xchg
add
jp
pop
fidivl
enter
out
push
aam
sub
je
aam
push
xor
sbb
fwait
nop
pop
in
add
mov
jns
xor
mov
fisttps
sbbb
outsb
movsb
es
cmpsb
or
and
jb
mov
lods
fildll
mov
mov
test
std
inc
pushf
push
sbb
cld
xchg
or
xchg
cwtl
push
ja
push
lcall
into
test
sbb
sahf
cmp
jp
jnp
dec
lods
aam
in
add
idivl
sahf
jmp
pop
or
pushf
jno
bound
cmpsl
or
cmp
sarb
scas
pop
rcll
xor
push
mov
test
or
arpl
sub
fs
pop
jns
test
pop
arpl
push
inc
sub
pop
outsb
xor
mov
pop
int
imul
leave
aad
rorl
scas
or
out
lods
and
add
add
imul
testl
out
sub
xchg
std
or
dec
inc
ficoml
mov
stc
jne
mov
inc
scas
and
int3
call
cmp
jne
ret
inc
js
mov
sti
add
xchg
shrl
fldl
fwait
test
ret
mov
dec
mov
and
cmp
xchg
inc
adc
sbb
jecxz
mov
dec
mov
mov
into
mov
mov
popf
cmp
lods
push
daa
ds
xchg
adc
ds
and
pop
sahf
cs
push
loop
xchg
and
add
ret
ret
rcl
cmpsb
xlat
aaa
dec
mov
pop
jno
jno
mov
pop
test
or
out
mov
push
mov
test
sbb
xor
test
mov
sbb
adc
call
push
popf
xchg
push
adc
push
iret
or
inc
inc
mov
lret
sti
pop
mov
imul
int
xor
inc
mov
andl
js
test
push
ljmp
adc
xchg
mov
cmp
xor
enter
fcoms
add
scas
lds
in
sub
aad
sub
cmp
xlat
mov
cmp
out
aas
sbb
icebp
les
cli
fiaddl
aaa
icebp
mov
mov
jb
sbb
fstl
fdivrl
jmp
mov
testb
xchg
cli
pop
cmpsl
pop
cs
lret
push
in
movsb
cmp
add
aam
mov
popf
push
jbe
xor
add
outsl
adc
lea
cli
push
sbb
ds
fcoml
sarl
icebp
movsl
jno
pusha
cmp
pushf
mov
es
js
dec
js
bound
jnp
fdiv
sbb
lds
dec
xchg
stc
adc
shl
adc
push
dec
adc
sbb
xchg
outsl
pop
mov
mov
push
pop
adc
repnz
popf
mov
stc
inc
sahf
in
imul
ljmp
and
loopne
addr16
adc
mov
inc
dec
jbe
sub
add
call
aaa
movsb
pop
mov
out
cmp
lds
lods
or
dec
mov
adc
in
mov
xor
dec
dec
subb
inc
scas
clc
push
dec
push
jbe
jle
stos
out
mov
loop
es
loop
mov
fdivr
cmp
lret
fcmovnu
jb
hlt
cs
xor
stc
cmp
fs
or
cmpsl
sub
or
push
xchg
pop
movsb
dec
pop
in
and
jb
or
arpl
std
js
adc
repz
inc
clc
insl
push
mov
fisubl
rclb
cmpsl
lods
int
mov
iret
adc
cs
bound
push
loope
mov
cmpsb
lahf
cmp
clc
adc
cmpsb
sub
data16
dec
sbb
lds
pop
scas
pop
das
test
jno
js
push
add
cmpsl
xorb
mov
mov
pop
mov
sub
dec
dec
mov
pop
mov
das
test
adc
adc
adc
xchg
aam
shrl
sub
sub
and
xorl
xor
arpl
pop
cmpsb
test
cmp
sbb
push
pop
iret
adc
mov
cmp
jmp
xor
cmpsb
imul
pop
and
fistl
ds
stos
adc
stos
lret
test
aad
sbb
push
push
test
cmp
insl
xor
add
push
test
lret
fisubl
jno
xchg
rclb
or
add
lcall
fstps
or
mov
std
mov
and
sbbb
insb
lods
add
cmp
push
jp
int3
movsb
sbb
sbb
push
iret
xchg
jbe
inc
jp
and
pop
pushf
mov
jg
and
leave
push
les
xor
addr16
cmp
or
mov
inc
out
and
bound
pushf
xlat
mov
xchg
gs
andl
cmp
and
stos
cmp
sti
xor
pop
cmp
insb
xchg
lcall
mov
inc
fsubs
sbb
rol
jle
push
data16
xchg
or
out
nop
dec
mov
in
sbbb
repnz
or
xor
lds
cmp
dec
add
and
mull
jae
jnp
xchg
push
iret
cmpsl
add
push
clc
cmc
bound
xorb
sbb
add
sub
movsb
les
cmp
sub
arpl
dec
out
loop
xor
lret
sbb
mov
fs
pop
faddl
mov
mov
shlb
mov
pop
and
sub
add
lods
shrl
xchg
and
sti
sub
xchg
pop
xchg
data16
outsb
lods
in
lcall
fdivr
loopne
mov
arpl
les
jns
xchg
or
adc
lret
shrl
push
push
or
jecxz
scas
fisttpl
dec
cmpsb
push
shlb
jne
cmc
idivl
cmp
js
push
cmpsl
inc
stos
xchg
adc
cwtl
sarb
pop
xchg
adcb
push
repnz
push
xor
addr16
les
inc
xchg
mov
cli
mov
gs
loopne
xlat
dec
aad
int
aad
shlb
rcr
js
in
and
insl
add
inc
mov
push
les
stos
and
mov
std
pop
jb
mov
jle
push
test
popa
push
add
sahf
jbe
push
push
fsubl
mov
mov
bound
arpl
mov
inc
pop
fidivs
ror
ljmp
int
mov
push
aad
push
mov
or
fnstenv
mov
sub
push
sub
mov
sub
xor
mov
xchg
inc
callw
push
roll
aam
or
adcl
enter
inc
xor
fldcw
cmp
adc
in
psubw
mov
mov
popf
ficompl
les
mov
jg
jne
dec
lea
sbb
dec
movsl
jnp
pushf
xchg
jae
jnp
push
lret
dec
or
cld
mulb
pop
sahf
ja
adc
dec
push
push
sub
fisttpll
inc
sbb
ret
pop
loope
xchg
jbe
xchg
jl
mov
mov
push
and
jb
cwtl
mov
jb
and
jl
ror
fwait
or
lret
xchg
jp
loope
pushf
test
enter
into
psllw
mov
mov
adc
out
mov
and
push
clc
push
and
ljmp
and
outsb
xor
mov
lahf
push
fsubrl
push
fwait
push
daa
or
jno
jnp
mov
daa
push
or
fistl
pop
lea
and
das
iret
cmp
push
pop
clc
mov
pop
jp
cmp
mov
lahf
dec
jl
popf
aas
iret
add
adc
cli
in
pop
xchg
sahf
adc
jne
push
adc
fisubrl
fdivp
stos
xchg
je
push
jg
push
mov
mov
pop
mov
jne
mov
test
addr16
jg
mov
mov
out
mov
out
adc
loopne
push
add
test
jne
in
imul
mov
xchg
jle
or
fcoml
data16
ljmp
dec
dec
dec
add
mov
mov
lock
xchg
ja
cmpsl
leave
pop
iret
sub
cmp
xor
rorl
xor
fcomi
fcom
xor
loope
xor
icebp
cmp
mov
cmpsb
in
xor
in
or
cmpsb
clc
add
xchg
pop
pushf
pop
cmp
jno
inc
xchg
or
dec
adc
pop
adc
aaa
movsb
jne
mov
pop
add
addr16
call
sbb
pop
out
xor
add
mov
sti
adc
mov
jl
push
aam
add
loop
dec
in
jbe
test
mov
fdivp
dec
xchg
gs
adc
cmp
lcall
lcall
lahf
wbinvd
cltd
mov
jo
imul
push
add
xchg
hlt
lods
paddb
pop
or
test
repnz
test
stos
stos
fadds
add
fs
pop
jmp
scas
pop
outsl
rcrl
dec
jmp
cltd
test
leave
sub
popa
test
xor
dec
js
out
jae
in
repnz
or
mov
mov
mov
ja
xor
push
push
aas
rol
andps
dec
xor
stos
push
add
cli
stc
add
adc
lea
cmpl
aam
lods
mov
enter
popa
jge
cmp
sbb
lods
or
aam
mov
mov
popa
dec
or
cmc
mov
mov
out
mov
mov
test
ret
ret
call
jmp
or
nop
xor
dec
mov
sub
dec
ljmp
jmp
adc
cmpsb
rcrb
cli
test
fidivrl
enter
inc
test
sbb
test
add
test
fsubl
xor
pop
mov
mov
mov
inc
arpl
xor
in
sbb
push
icebp
fucom
clc
aam
mov
ds
mov
xor
cmp
or
adc
fldl
jmp
in
pop
stos
jmp
lcall
adc
jnp
push
nop
in
lds
frstpm(287
jae
add
push
or
test
lret
pop
idiv
inc
jne
stos
mov
std
inc
and
fwait
sbb
mov
int
jo
cmc
gs
outsl
or
pop
int
arpl
aas
je
rorl
push
cmpsb
jns
or
gs
stos
add
xorl
inc
mov
je
cmp
mov
pop
mov
xchg
mov
dec
push
jge
mov
or
push
inc
adc
bound
loop
dec
cmpsl
inc
rorb
xchg
ret
sbb
inc
cmp
lahf
or
jge
scas
insl
push
jns
jl
fldt
jne
movl
xor
fistpl
xor
out
and
mov
imul
out
xor
insl
xchg
mov
lahf
int
pop
jbe
sbb
idiv
xor
jmp
sbb
inc
int3
mov
or
roll
xchg
sti
mov
mov
out
pop
fwait
les
int
shlb
ds
into
mov
push
pop
adcb
in
stos
mov
daa
mov
xor
adc
call
insb
js
and
call
fstpt
mov
mov
mov
in
or
and
push
mov
scas
sbb
sahf
xor
jo
and
hlt
mov
mov
mov
dec
cmpsb
stc
xor
mov
sbb
lret
aaa
xchg
pop
and
shll
cmp
pop
int
hlt
scas
inc
or
loope
ret
jmp
mov
imul
add
aad
mov
mov
dec
add
add
les
in
sub
add
sti
pop
jg
lret
adc
mov
or
cmpsl
pop
add
jnp
mov
inc
push
lahf
test
mov
dec
add
pop
sbb
sub
sahf
std
push
jae
fsubr
cmp
and
mov
and
js
iret
xchg
or
cltd
bound
loopne
imul
pop
and
add
ds
mov
fmulp
mov
leave
test
pop
outsl
popa
aaa
mov
lret
push
push
icebp
lret
fnstsw
inc
cli
aam
fiadds
xlat
aam
jmp
loop
mov
ret
sar
or
insb
pop
out
dec
fidivl
jbe
cmp
mov
sbb
mov
out
jg
sub
jo
ss
push
repnz
das
mov
jg
outsl
jp
push
pop
mov
sub
sbb
or
cli
pop
ljmp
pop
stos
dec
lcall
pop
mov
sub
sbb
or
cli
sbb
add
daa
lret
pop
stos
and
jnp
outsl
jp
push
pop
mov
cs
sbb
cmp
into
sti
fsubrp
in
fcmovne
outsl
mov
decl
scas
test
and
dec
cmpsl
mov
xchg
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
inc
add
adc
and
xor
inc
fs
or
les
aam
in
hlt
mov
lds
inc
add
adc
and
xor
inc
adc
and
xor
les
mov
mov
mov
inc
add
adc
and
xor
inc
adc
and
xor
les
xor
ljmp
fs
ja
push
inc
adc
scas
addr16
jno
pop
push
push
cmovge
iret
add
add
dec
stc
mov
das
in
ret
xchg
cli
imul
mov
movsl
pop
dec
movsl
mov
idiv
repz
or
mov
test
dec
and
sbb
cmp
mov
adc
cmc
bound
pop
xchg
les
imul
xor
cld
xor
xchg
mov
mov
fisttpl
iret
pop
mov
aam
sub
or
mov
add
lcall
fucomi
mov
nop
sbb
mov
mov
in
or
add
adc
and
xor
inc
adc
and
xor
les
mov
les
add
jne
add
inc
add
test
rorb
loope
std
xchg
loopne
loopne
inc
push
adc
pop
js
and
xor
mov
ret
mov
loope
rolb
mov
sub
inc
jne
add
adc
and
xor
les
mov
les
inc
add
adc
and
xor
inc
adc
and
xor
les
mov
les
inc
add
cmp
dec
push
repz
sub
jbe
cmpsb
arpl
pop
sub
ja
pop
mov
test
xchg
out
nop
cmpsl
dec
fwait
orl
and
scas
sub
jl
inc
rclb
movsb
jno
mov
cmpsl
sub
jle
inc
leave
jno
dec
hlt
test
mov
call
push
dec
sbb
cmp
fdivrl
ret
loop
frstor
inc
jo
and
out
push
sub
dec
xorb
dec
aas
dec
test
call
ljmp
divl
aas
test
shll
imulb
jae
xor
fdecstp
mov
in
sarl
les
ljmp
sub
data16
notl
adc
mov
call
fistl
mov
push
or
out
jmp
jb
mov
aam
jb
xor
out
xchg
ja
popa
inc
jns
xor
imulb
push
test
pop
test
mov
adc
cmp
dec
mov
inc
ljmp
ds
out
popf
inc
jne
mov
insb
inc
sub
fwait
leave
out
mov
sahf
dec
push
and
ror
mov
push
aaa
sub
push
cwtl
pop
adcl
dec
pop
pushf
push
adc
sbb
je
cmc
fs
jp
sbb
xchg
fsubs
mov
pop
jno
add
add
adc
cmp
notb
mov
into
je
jb
jo
push
mov
jbe
out
aad
sbbb
mov
jbe
or
sbb
scas
jno
sbb
jp
andl
and
mov
dec
jb
push
ljmp
shl
push
imull
popf
fstpt
pop
push
add
xchg
loopnew
or
mov
cmp
repz
movsb
jnp
xor
roll
test
xchg
fs
sbb
jg
lret
ljmp
flds
push
push
xchg
orl
adc
xchg
ret
ror
mov
shlb
jp
add
addr16
add
mov
jb
out
and
xor
mov
aaa
inc
or
push
xor
xor
mov
mov
sub
imul
sahf
test
sub
add
ret
mov
imul
lcall
popa
les
movsl
adc
aaa
push
inc
rcrl
ljmp
and
jl
jp
dec
loope
mov
dec
add
cmp
and
mov
popf
rcr
adc
xlat
push
loop
dec
dec
push
xchg
adc
lahf
xchg
dec
xor
sbb
mov
pop
xchg
out
push
and
shrl
fs
in
fsubrp
ljmp
pusha
outsl
pushf
neg
nop
out
negb
push
and
lret
add
out
fistps
out
push
and
out
fnsave
mov
xchg
cmp
imul
rcr
or
push
lahf
in
xchg
xlat
cmp
mov
and
lds
xchg
cmp
cmp
sbb
push
cmp
cmp
mov
jg
inc
mov
jae
push
lea
rcrb
movsl
stos
push
sub
aaa
imul
pop
into
movl
mov
mov
lret
mov
push
into
push
jle
sub
cmp
ret
adc
mov
adc
push
push
push
jb
rep
sti
fidivrs
jmp
loopne
jnp
shrb
mov
mov
in
mov
sbb
or
adc
mov
xor
sub
add
xor
or
cli
dec
cmp
loope
mov
inc
dec
fcmovb
ja
cmp
add
xchg
pop
mov
insl
sub
fstp
lahf
leave
mov
add
and
jae
lcall
mov
lahf
jo
jle
sbb
adc
fmuls
and
dec
f2xm1
inc
inc
inc
arpl
sarl
dec
jmp
iret
xchg
pop
inc
or
inc
mov
cmp
outsl
cmp
adc
aad
leave
insb
outsl
loopne
fsubs
inc
rcll
ret
sbb
shl
sub
sbb
sub
daa
and
push
movsb
xor
negl
and
mov
insl
push
fldenv
pop
aam
ds
mov
divl
fistpll
mov
mov
push
orb
sbb
cmpb
lret
lods
insl
lret
out
andb
xchg
pop
cmp
fstl
lcall
shl
icebp
xor
pop
popa
add
xchg
pop
fdivs
incl
push
mov
dec
push
push
movb
fistl
outsl
stos
mov
push
sbb
jl
xor
inc
sub
movsb
cmpsb
adc
int
xor
mov
adc
xor
dec
push
cmpsl
jg
xor
cmp
js
mov
inc
imul
jge
xlat
dec
fcoml
ljmp
xlat
js
insl
or
xor
and
repnz
adc
insb
mov
loop
loop
std
jge
das
xor
mov
sbb
movsb
inc
xor
mov
sbb
dec
aaa
lods
jecxz
inc
in
data16
or
jp
fstpl
xchg
repnz
es
leave
mov
fcomps
in
enter
ret
scas
stc
fs
jg
sub
cmpsb
and
mov
bound
fadds
int3
pop
dec
nop
aam
xor
jne
cmpsb
shl
maxps
bound
xor
movsb
pop
mov
inc
sbb
cmp
add
cmp
push
lea
mov
stc
imul
int
pusha
xchg
inc
roll
mov
jae
push
stos
in
adc
add
jno
adc
ljmp
mov
mov
stc
dec
xor
xor
jl
sub
mov
cli
fldcw
stos
aas
test
pop
jl
notb
xor
mov
xorb
repnz
xor
loopne
push
push
sarl
movsl
sbb
ljmp
outsl
push
das
into
lods
push
iret
stos
ror
in
xor
testl
dec
mov
popa
cwtl
out
inc
out
test
xor
sahf
xor
out
in
jo
aad
lock
movsl
movsb
pop
gs
sbb
or
push
cwtl
cltd
jmp
mov
and
or
or
shl
cs
push
and
addb
jp
in
test
sbb
mov
cmp
pop
or
pop
mov
sbb
sti
outsl
test
push
faddl
sbb
adc
test
xor
cmp
and
push
pop
cmpsb
pop
nop
inc
daa
mov
push
adc
stos
js
adc
std
lods
aaa
je
fcmove
lret
mov
divl
or
inc
cmp
mov
scas
lock
xor
mov
dec
mov
cli
into
cld
mov
push
push
mov
inc
out
insb
jnp
push
xor
xor
insl
pop
dec
popa
divb
inc
mov
mov
inc
and
dec
xchg
jge
pop
jecxz
icebp
out
insb
je
daa
mov
test
push
mov
xor
push
movsl
or
outsl
inc
enter
test
sub
js
cld
inc
cmpb
enter
push
xchg
mov
in
imul
mov
gs
and
and
xchg
jle
loopne
es
loop
push
gs
xor
jb
out
pop
iret
in
push
stos
sub
sar
cmpsl
pop
ds
cld
repz
out
adc
out
jl
xor
push
loope
es
out
push
fisttps
adc
lcall
cmc
jmp
ja
and
fmuls
jns
mov
fs
popf
jb
mov
inc
mov
jb
mov
cmp
addb
xchg
jp
imul
push
xchg
aad
ss
or
adc
or
adcb
jne
inc
aam
out
jns
call
mov
cmpsb
ja
xor
adc
sbb
pop
xor
dec
aam
rclb
or
test
or
fnstsw
jnp
dec
inc
sub
sub
pushf
adcl
push
in
sbb
imul
push
or
cmpsl
xchg
and
xchg
jg
sbb
in
push
out
xor
add
mov
add
fwait
pop
mov
sbb
sti
mov
push
xchg
ret
lahf
ss
push
inc
pop
inc
out
sbb
lcall
inc
lock
cmp
adc
test
adc
out
mov
sbb
inc
pop
repz
sub
cmpsl
out
adc
sub
jno
movsl
sub
divb
mov
popf
dec
fcmovnu
sub
out
loop
mov
inc
out
mov
sub
cmp
imul
je
out
pushf
xor
pop
daa
push
jo
pop
daa
or
rcr
mov
fistl
xor
dec
lret
mov
mov
sub
push
dec
out
lds
xchg
pop
pusha
arpl
add
push
mov
dec
mov
push
or
stc
bound
cmpsl
insb
and
dec
scas
mov
adc
int
adc
pusha
cmp
filds
in
sbb
bound
sbb
arpl
fwait
das
dec
inc
xor
pop
xor
dec
add
popa
aad
pop
mov
lock
or
sbb
mov
mov
pop
ffreep
dec
cmp
jge
sub
mov
xchg
xor
jecxz
ja
sarb
ja
mov
popf
int
clc
push
sbb
sub
aad
cmp
ljmp
mov
jns
add
jb
pop
cmc
fdivs
mov
inc
popa
jno
xchg
imul
mov
push
cmp
xor
inc
cmp
mov
cmpb
mov
jge
cli
clc
fst
jne
jle
loope
std
lret
scas
adc
fld
push
sub
xchg
fisttpl
loopne
cmp
adc
mov
dec
adc
insb
add
out
ret
xchg
push
push
cmp
test
insb
mov
push
jo
iret
outsb
add
popa
and
mov
jp
out
mov
xor
popf
pop
jle
jmp
mov
dec
into
mov
cmc
push
push
dec
mov
and
pop
mov
clc
scas
packuswb
jp
or
insb
sti
stos
lock
sarb
push
popa
inc
ss
jne
xor
shlb
jge
lret
daa
lods
in
je
sub
or
pop
adc
lret
cld
sub
jp
xor
in
jnp
adc
mov
das
repz
jle
xchg
gs
fisubs
jbe
mov
pop
inc
insb
fwait
mov
iret
sub
and
cmpsb
insl
mov
pop
inc
mov
addr16
adc
lock
xchg
pop
orb
push
sahf
push
xor
sbb
mov
push
dec
movsl
mov
and
adc
out
adc
dec
push
push
and
or
out
jnp
iret
ja
xchg
sbb
pop
mov
testl
ficoml
adc
sbb
adc
test
pop
pushf
ljmp
sub
sub
lret
fcomip
int
fstps
adc
mov
push
rcll
pop
aas
jecxz
inc
insl
jmp
shlb
cmp
mov
xor
in
lahf
sub
sub
divl
test
hlt
ret
daa
arpl
and
mov
dec
mov
pop
xor
lods
adc
xlat
lds
popf
sub
cmc
pop
mov
insb
add
adc
shlb
mov
movl
hlt
fisubs
sahf
inc
lea
jo
insb
dec
push
push
cwtl
daa
cmpsb
push
xchg
outsl
icebp
lret
xor
cwtl
call
cmp
add
mov
xchg
sbb
xchg
mov
lods
adc
sti
or
ja
mov
xchg
add
inc
das
les
xchg
push
lcall
test
addb
jb
xchg
dec
fadd
dec
push
lret
add
jne
jae
sub
fbstp
call
fisubs
iret
iret
daa
push
jecxz
mov
ss
roll
inc
jmp
xchg
xchg
icebp
pop
mov
adc
dec
not
test
sbb
push
stos
repz
xor
dec
add
pop
or
cmp
test
test
orl
test
mov
dec
inc
test
test
loope
pop
rcll
popf
fstpl
cmp
cmc
sbb
pop
cmp
cld
inc
int
xor
pop
popf
out
loop
mov
push
inc
shll
jmp
insb
push
sub
mov
pop
pop
es
clc
sbb
xlat
push
xchg
sbb
inc
pop
aad
or
sub
clc
and
cmp
sbb
adc
test
scas
add
xor
or
push
movl
loop
lods
popf
int3
cld
cmpsl
orb
scas
in
lret
sahf
arpl
imul
dec
ljmp
jbe
jae
push
mov
adc
shr
jg
insl
scas
repnz
or
or
test
cmpsb
addr16
push
gs
jp
aas
or
imul
push
and
push
dec
jg
xchg
push
adc
shrb
sbb
es
dec
cmc
ja
xchg
pop
mov
dec
adc
mov
and
xchg
jp
je
in
movb
into
sarb
sbb
dec
dec
insl
add
jbe
mov
sub
pop
mov
inc
push
dec
mov
inc
insb
inc
push
and
adc
push
int3
in
pop
sti
int3
mov
lods
sbb
movsb
xor
mov
lods
and
outsb
dec
add
sbb
push
mov
jecxz
push
repnz
pmaxub
mov
jl
xchg
stos
mov
shrb
dec
rep
cmpsl
sub
shll
enter
stos
cmpsb
lret
pop
mov
mov
pushf
mov
ja
xor
push
sub
dec
rclb
push
xor
popf
fdivl
cmp
dec
xchg
test
pop
movsl
sbb
or
or
cmc
jb
sarl
movsb
mov
jp
jmp
ret
imul
mov
inc
in
aad
leave
xor
mov
mov
fisttps
push
aam
loop
imull
sbb
cld
or
add
jns
dec
ret
sub
lods
mov
add
sub
jecxz
jae
ret
push
hlt
testb
or
jecxz
inc
mov
mov
test
add
in
jmp
gs
cmp
ret
aaa
fldl
inc
sub
push
ja
jns
daa
testl
and
ret
pop
cld
cmp
js
loope
or
in
jg
sbb
stos
fdivrs
fcmovbe
ret
and
cli
test
cmc
imul
push
stc
pop
fistpl
jb
sbb
inc
add
std
cltd
pop
ret
mov
call
push
lods
jb
stos
sub
jmp
loope
jmp
ret
xchg
mov
mov
mov
jb
inc
jmp
addl
arpl
adc
aam
negl
jne
lahf
xor
or
mov
push
fcos
scas
cmp
ja
cmpsb
push
mov
inc
in
hlt
lock
movsb
xchg
test
xchg
sbb
jmp
jecxz
fstpl
dec
test
stos
sub
or
clc
cltd
and
xor
mov
and
jne
fisttpl
stos
fimull
insw
or
mov
jno
cmpsb
xchg
mov
mov
subb
or
cmpb
mov
push
lret
cltd
mov
dec
ljmp
inc
jp
insl
xor
stc
int3
mov
xchg
outsl
inc
and
pusha
xor
add
mov
movsb
repnz
ds
adc
sbb
dec
movsl
sub
push
sbb
push
ret
dec
or
sub
iret
mov
cmpsb
mov
enter
repz
and
dec
pop
pop
jmp
daa
out
shl
mov
in
outsb
dec
xchg
stos
fbld
fisubl
adc
addr16
lret
mov
pop
jl
jne
pop
jp
loope
repz
cmpsb
pop
repz
mov
insl
jp
add
push
dec
mov
sbb
jge
mov
xor
into
pop
cmp
stos
dec
push
adc
ret
sub
imul
aad
int3
mov
add
into
mov
fbstp
outsl
sbb
sub
pop
mov
xor
scas
mov
lds
je
clc
mov
sbb
call
hlt
sbb
outsb
jmp
jp
sti
fwait
in
sub
mov
cltd
outsb
xchg
lods
push
fmull
fsts
out
outsl
imul
and
sbb
sahf
and
adc
test
mov
imul
mov
call
sub
jnp
arpl
fcomp
popf
fcompl
popf
push
outsl
xchg
sub
mov
and
and
sub
out
cmpsl
push
xor
mov
jbe
das
insb
es
sub
inc
aad
pop
out
push
xchg
lods
push
inc
push
iret
ljmp
or
sbb
mov
and
push
jp
jl
xor
jp
call
aad
cmp
sbb
and
fwait
pop
into
flds
push
adc
subb
and
push
lods
jo
jp
xchg
xchg
sbb
js
test
inc
int3
imul
or
pop
faddl
rcrb
xchg
mov
push
cmp
sti
in
xchg
jae
in
in
outsb
sahf
xchg
fcomps
ret
pop
aas
push
jge
ljmp
fdivl
shlb
repz
and
test
dec
mov
mov
xorb
sub
push
push
out
in
cmpsb
lcall
sbb
jg
xchg
jnp
pop
lret
sub
mov
mov
in
clc
xchg
inc
jg
in
in
jne
lret
popa
inc
add
por
sbb
mov
sub
out
mov
aad
adc
inc
jnp
call
push
adc
xchg
stos
jle
pop
fs
and
mov
dec
xchg
adc
xor
push
popf
ficoml
addr16
pushl
sbb
imul
inc
jmp
stc
addb
push
jne
sub
insb
movl
push
movsb
loopne
testl
popl
aam
cmp
mov
lcall
push
stc
clc
fistpll
adc
inc
ret
xor
adc
mov
out
scas
and
cltd
xor
in
sbb
loopne
mov
mov
push
sub
push
in
push
sbb
xor
or
mov
adc
sbb
lret
aam
jbe
lcall
insb
aad
mov
or
or
scas
dec
cmp
mov
sub
movsb
ret
stos
cmp
adc
lds
stos
aad
mov
cltd
add
cwtl
int3
lods
inc
lcall
inc
fs
and
pop
mov
loop
xchg
sub
push
pop
je
nop
push
xchg
leave
aam
pop
sub
lods
mov
sub
jo
sbb
mov
sti
sti
ret
fildl
dec
fldcw
mov
dec
adc
dec
out
mov
xchg
mov
daa
jle
rorl
scas
in
dec
andl
fdivrl
mov
in
mov
je
outsl
add
push
mov
int3
dec
scas
lods
mov
sbb
xchg
pop
dec
lcall
repz
ss
cmpsb
ljmp
inc
orb
mov
cmp
fs
sahf
pop
push
mov
cmpsb
xchg
pop
lods
mov
mov
jns
sub
inc
or
cmp
sbbb
icebp
in
mov
sub
pushf
pop
mov
mov
xor
inc
fidivrs
push
xchg
lcall
movsb
rcrb
cmp
lods
inc
and
outsl
scas
jns
dec
stc
fcoms
mov
cmp
pop
lock
lcall
mov
mov
pop
or
fcmovnu
sub
sbb
sub
hlt
sti
push
daa
mov
std
xor
stc
scas
fnsave
lcall
lods
jmp
mov
ljmp
sbb
pusha
pop
mov
and
in
insl
addb
repnz
mulb
rolb
inc
mov
xor
cmpsl
out
inc
stc
sahf
or
fstpl
sbb
sbb
xchg
insb
arpl
mov
jge
jns
mov
xor
xchg
mov
dec
xchg
pop
dec
add
jl
std
sub
les
lret
mov
jp
cwtl
outsl
test
sbb
dec
xor
dec
stc
fidivs
iret
loope
adc
and
xor
inc
adc
and
xor
les
mov
les
inc
add
adc
and
xor
inc
adc
and
xor
les
mov
les
inc
add
adc
and
xor
inc
adc
and
xor
les
mov
les
inc
add
adc
and
xor
inc
adc
and
xor
les
ret
repz
sbb
pop
sbb
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
dec
jg
outsl
imul
or
adc
out
jmp
sti
fisttps
lahf
stos
das
jg
outsl
pop
pop
jnp
or
sbb
sub
cmp
repz
mov
sti
iret
lret
int
lods
stos
lahf
mov
jbe
inc
mov
aaa
xor
clc
int3
andl
in
out
and
cmp
sub
negl
out
icebp
cld
adc
mov
jbe
into
inc
fwait
and
pusha
mov
in
push
pop
and
loopne
lock
popl
xor
icebp
stos
outsl
inc
ja
jecxz
add
insb
insl
adc
mov
add
sub
push
popf
fucomi
mov
xor
lahf
xchg
xchg
and
nop
mov
sbb
aam
cmp
outsl
and
sub
cli
push
nop
dec
mov
xchg
pop
mov
add
jmp
mov
mov
mov
sbb
test
hlt
mov
mov
push
push
pop
clc
xchg
filds
push
xchg
enter
mov
jg
inc
jnp
out
aas
arpl
sub
popf
push
or
lret
ret
cmpsl
xchg
mov
test
sbb
fs
cmp
nop
mov
mov
sahf
stos
stc
lods
ret
jecxz
push
ds
sbb
and
jle
fisubrs
cmp
jmp
or
iret
hlt
scas
ret
sti
daa
jg
outsl
or
sub
pop
or
das
sub
cmp
lret
fucomi
jmp
sti
iret
mov
mov
outsl
imul
or
sbb
sub
cmp
lret
fucomi
jmp
sti
iret
mov
mov
jl
fdivrs
mov
rcrl
adc
dec
jg
jb
sbb
pop
and
jle
adc
mov
mov
mov
dec
inc
xchg
decl
or
adc
jmp
dec
xor
lahf
pop
stos
lahf
add
lcall
enter
rcrb
fisubs
or
xor
xor
xchg
jnp
lock
jbe
or
fldenv
jp
adc
jns
pop
jns
jnp
mov
sbb
mov
push
popa
popa
sub
sbb
mov
jle
std
add
nop
mov
jle
or
es
movsb
rorl
sub
push
xor
jl
jae
jle
int
out
inc
adc
add
sub
xchg
pop
rcr
in
jmp
js
mov
push
or
add
jg
js
arpl
sub
mov
jnp
pop
mov
daa
dec
mov
adc
pop
out
loope
int
xchg
xlat
fstl
loopne
inc
add
enter
mov
sahf
mov
push
push
hlt
loope
loop
sbb
lock
jl
xor
pop
cmp
dec
test
xchg
inc
sub
test
mov
cwtl
pop
cmp
xchg
leave
mov
dec
mov
pop
ss
outsb
add
inc
push
lds
movsb
inc
mov
movsl
ret
jecxz
adc
sbb
sub
adc
push
mov
mov
mov
push
cli
leave
fbstp
cmp
pusha
or
mov
pushf
daa
lock
inc
jle
xor
lret
jecxz
jge
out
add
pop
xchg
call
xchg
adc
shll
popf
dec
je
cmp
xchg
xor
fwait
cmp
sbb
sub
push
and
adc
push
rcrb
cmpsb
scas
icebp
notl
aam
sahf
or
testl
test
push
inc
dec
call
fsubrl
ret
pop
mov
jae
sbb
add
imul
jge
xchg
jecxz
inc
pcmpeqb
inc
in
adc
xor
stc
mov
push
add
mov
or
ss
pop
sbb
jle
fscale
sub
pop
mov
in
mov
fchs
mov
mov
mov
dec
pop
repz
mov
pop
push
push
xchg
andl
sti
insl
inc
cmp
insb
test
in
les
scas
fs
adc
repz
mov
stc
mov
cmp
push
inc
xor
or
jmp
sub
mov
fisttps
repnz
pop
mov
icebp
in
sbb
call
testl
xor
pop
or
sub
and
xchg
xlat
insl
sbb
inc
inc
sub
xor
scas
out
pop
and
xchg
mov
hlt
xor
mov
sbb
mov
push
testl
push
loope
pop
push
stc
cmp
les
pop
lods
adc
mov
aas
adc
jae
cmp
mov
stos
je
adc
jae
lods
mov
movb
sub
orb
cs
js
rcl
aam
dec
insb
pop
loop
into
loop
mov
ret
mov
in
clc
shll
dec
push
pop
loop
out
xor
mov
push
dec
pop
xor
add
push
jecxz
out
aaa
push
sti
ficoml
add
fs
cli
inc
xchg
pop
test
sbb
shll
jecxz
xorb
mov
and
out
imul
aam
dec
fisubl
imul
push
mov
jmp
loopne
cmc
nop
pusha
pop
mov
push
in
dec
jae
mov
icebp
mov
push
stc
jno
int3
leave
out
mov
xorl
cmp
cld
fiadds
sub
xchg
loope
int
cld
cltd
inc
mov
pop
int3
add
xchg
jno
pushf
xlat
push
xchg
popa
xchg
repnz
and
out
jl
movsl
dec
sti
lea
sub
lods
push
cs
pusha
dec
jp
adc
mov
lods
movsl
sahf
call
push
mov
pushf
test
mov
shrb
mov
stos
xor
arpl
ret
xchg
jns
jp
lahf
mov
dec
mov
pop
addl
push
ss
inc
xor
sub
repz
icebp
jno
stos
push
outsl
into
test
in
jnp
jae
sarl
outsl
sbb
mov
mov
push
ror
adc
push
outsl
cmp
push
xor
fcomps
fwait
pop
test
cmpsl
hlt
sub
xchg
cmp
cld
mov
sahf
fildl
push
pop
or
pop
fcomps
push
add
add
fmull
inc
pop
push
std
push
sub
mov
bound
mov
xor
mov
imul
pop
imul
and
or
adc
mov
cmp
cs
mov
cmpsl
mov
lret
lods
pop
icebp
pop
jp
dec
lea
arpl
mul
loop
loope
dec
repnz
and
sub
sbb
and
rcll
xchg
cmpsl
mov
in
cmp
aas
sbb
mov
sbb
in
call
imul
andb
rcrl
jmp
lods
jne
out
test
cmc
mov
stc
mov
mov
loopne
int3
pop
shlb
sarb
xchg
out
js
jnp
or
push
clc
xor
insb
mov
xchg
push
jo
mov
xchg
test
shrl
pop
pop
sbb
xchg
sub
cld
lcall
stos
insl
xchg
mov
shll
and
mov
xor
std
in
int
xorl
fistps
cmp
inc
mov
leave
xchg
je
mov
in
inc
int
movsb
inc
in
sub
insb
pop
imul
fnsave
lret
mov
cltd
fisubs
pushf
add
cmc
sbb
pop
add
and
mov
cmc
lahf
mov
and
daa
adc
or
aaa
aad
dec
test
push
test
ss
clc
sarb
dec
or
mov
test
and
rclb
stos
push
pop
leave
add
repz
dec
shrb
inc
loope
out
dec
aam
arpl
lock
xor
jmp
push
jnp
ja
ret
pushf
jecxz
jbe
or
mov
inc
lods
adc
mov
or
hlt
pop
xor
or
push
mov
repz
jmp
push
dec
push
ret
sbb
das
mov
adc
xor
jecxz
xor
adc
cmp
adc
and
sbb
pop
pop
lods
push
fiadds
out
pop
sub
outsl
and
and
xor
outsl
cli
out
mov
das
ret
aam
mov
incb
lods
xlat
or
sbb
mov
mov
test
out
mov
decb
outsl
sub
xor
hlt
fldl
mov
test
xlat
test
in
mov
jns
arpl
inc
movsb
es
lods
mov
adc
sarb
in
lret
es
cli
xor
cwtl
push
sbb
bound
xchg
outsl
mov
sti
mov
inc
sar
cmc
sub
fldl
jg
js
sbbl
hlt
or
fincstp
dec
cmp
jmp
leave
leave
and
push
mov
adc
scas
sahf
daa
jmp
rcl
fldl
dec
inc
pop
mov
mov
pop
cmp
loope
popa
in
push
pop
dec
ljmp
fisubrs
ljmp
jmp
sahf
or
mov
mov
popa
mov
mov
add
addr16
pop
adc
inc
call
sub
test
fists
add
jae
iret
bound
iret
dec
mov
shrb
sbb
push
xor
dec
ljmp
xchg
cmc
and
mov
dec
xchg
ds
or
lea
jg
scas
test
sbb
lcall
frstor
mov
or
xor
mull
cmpsb
je
outsb
scas
aas
xchg
mov
leave
es
inc
push
xor
inc
xor
orl
pop
jb
sbb
or
xor
negl
test
cmpsb
push
push
shrb
push
push
add
jmp
insl
aad
push
push
push
inc
rcrl
mov
and
jbe
sub
mov
cmp
mov
ret
pop
pop
mov
stc
test
push
sub
xor
xchg
sbb
lret
cltd
xchg
xchg
mov
mov
repnz
cltd
mov
icebp
repz
pop
and
jle
xlat
fstpl
push
stos
cmp
out
fstpl
jecxz
nop
sahf
aaa
sub
pushf
sbb
fsts
jecxz
repz
jp
pusha
int3
movsl
mov
lock
dec
xor
mov
pop
gs
aad
rcrl
push
sub
or
loop
jl
inc
pop
cltd
pop
mov
cmpl
adc
and
sbb
sub
aad
adc
sbb
mov
iret
mov
lods
mov
pop
movb
aam
mov
inc
inc
in
adc
push
or
jne
jo
pop
dec
add
add
or
lods
mov
push
not
or
clc
mov
out
and
in
mov
test
lahf
push
adcl
imul
rcr
mov
xor
inc
jbe
and
pop
bound
mov
sbb
popf
dec
inc
xchg
insb
sub
les
push
sbb
xor
data16
mov
dec
sbb
insl
or
fnstsw
leave
mov
ret
stos
insb
imul
repz
lods
inc
xor
dec
movsl
mov
add
ds
aam
mov
fsts
pop
mov
pop
push
mov
push
sub
sti
insb
imul
and
cmp
sbb
imul
add
and
loope
fmul
ret
movsl
pusha
insl
adc
cmp
jae
cmp
xchg
mov
scas
aam
inc
fldl
lret
pop
inc
shlb
push
or
push
test
cmc
mov
or
or
fstpt
mov
repz
imul
arpl
das
xchg
add
xorb
repz
mov
xchg
mov
scas
gs
rcr
xchg
and
mov
rclb
mov
ljmp
test
rcrb
xadd
fcmovu
cmp
das
lahf
mov
or
fldl
lret
mov
repnz
aad
mov
aad
andb
arpl
sbb
or
pop
mov
adc
popl
sti
push
fidivrs
cmp
mov
dec
sbb
cmp
out
sbb
cmp
lret
mov
xlat
jecxz
dec
adc
ds
jnp
and
sahf
cmp
mov
je
loopne,pn
inc
outsb
inc
int
mov
add
ret
mov
pop
pop
shll
sub
push
cld
mov
pop
add
mov
into
xor
push
fs
loopne
lods
cmpsb
mov
popa
adc
push
xchg
scas
fsubl
clc
clc
jbe
test
dec
jne
mov
add
ret
push
out
inc
add
adc
lods
mov
in
in
aas
outsl
les
xchg
mov
addl
addl
inc
fdivp
push
xor
mov
pushf
imul
rorb
das
mov
fadd
mov
inc
popa
aas
movsl
jp
mov
lock
jl
hlt
or
adc
add
iret
cmp
xor
repnz
in
push
sub
cmc
cld
cs
enter
or
addr16
mov
sub
test
test
ds
mov
test
jecxz
mov
rorb
jge
out
sbb
call
mov
sarl
ss
cwtl
iret
push
test
jae
repz
cld
sub
mov
loope
aam
jge
cmp
sarb
arpl
ljmp
cmp
adc
adc
push
inc
dec
pop
imull
in
xor
into
lret
sub
sub
inc
cmpsb
cwtl
mov
jp
ror
or
jno
sbb
mov
lods
roll
sbb
enter
xor
xor
xor
scas
int3
cmc
inc
inc
mov
cs
push
push
lods
jecxz
popa
outsb
call
mov
jb
cltd
imul
shll
add
jmp
test
mov
sub
adc
sbb
jp
mov
bnd
mov
adc
jl
xor
sti
or
mov
add
push
mov
repz
mov
and
cmpb
inc
addr16
js
inc
inc
adc
or
stos
in
fadds
push
push
loopne
jecxz
jp
pusha
inc
fcompl
xor
aaa
cmp
es
sbb
xchg
mov
popf
sub
bound
dec
inc
push
mov
stos
dec
inc
aad
dec
mov
movsb
or
je
or
lahf
mov
repnz
test
ficoms
test
scas
jl
imul
push
and
jp
pusha
arpl
cmc
xchg
sub
mov
jo
jo
push
or
addr16
pop
imul
mov
inc
xchg
mov
cmc
add
subb
popa
pop
add
ret
sbb
jae
add
in
and
aad
daa
jmp
dec
out
sar
sbb
push
in
push
ret
inc
xor
shrl
xor
orb
pushf
adc
ljmp
sub
cld
fidivs
and
call
pop
inc
add
dec
sbb
mov
hlt
adc
jb
adc
loope
pop
sub
cmp
inc
addr16
cmp
jns
push
leave
xorl
mov
movsl
jle
adc
and
add
arpl
jmp
nop
push
mov
xchg
lods
push
xchg
mov
and
stos
mov
repz
dec
rorl
fdivs
mov
mov
aam
data16
cmp
mov
jl
dec
adc
inc
ss
daa
cmc
mov
jmp
test
daa
mov
loope
jp
stos
jg
es
fistpll
xchg
aaa
scas
ja
adc
test
ss
push
adc
mov
push
jnp
and
lret
lods
push
arpl
outsl
fidivrs
jbe
cmpb
test
into
push
push
jne
or
sub
ss
push
imul
mov
ss
ljmp
lahf
addr16
push
push
cmp
dec
orb
into
emms
inc
test
hlt
cmp
into
jno
push
scas
aaa
jecxz
jl
fdivrl
push
cltd
lahf
jp
js
or
mov
push
repz
mov
hlt
stos
push
jns
repz
inc
aaa
movsl
inc
xchg
cld
cmpsb
clc
dec
outsl
inc
jno
jae
jle
dec
dec
insb
jp
dec
xchg
fs
adc
mov
cli
cs
inc
rcrb
cmp
jg
sahf
mov
jb
daa
jnp
sbb
loop
xchg
popf
shl
mov
inc
cltd
jae
jbe
pop
adc
xchg
pop
jl
inc
cmpsb
push
or
gs
das
mov
jmp
mov
mov
jb
test
sub
push
push
cs
jmp
out
vpmulhw
cmpl
cmp
shl
jb
add
and
or
stos
mov
inc
pop
test
lods
test
adc
pop
inc
fimuls
dec
scas
xchg
adc
or
cli
mov
cli
mov
mov
pop
jl
inc
std
pop
cmp
imul
addl
pusha
es
pop
or
xchg
pop
xchg
dec
fisubl
insl
mov
addr16
dec
or
mov
pop
mov
pop
sub
cmpsl
lahf
mov
imul
cmpsb
fldcw
lret
adc
loopne
in
xor
mov
stc
pop
sbb
mov
and
out
sub
mov
push
cwtl
fsubrp
or
aaa
aam
pop
adc
mov
mov
dec
fmull
mov
push
movsl
pop
int3
xchg
stos
icebp
and
out
push
adc
lahf
jb
out
jl
xchg
decb
xchg
or
sbb
jo
dec
xor
sbb
xchg
ja
imul
insb
mov
notb
ljmp
and
pushf
xchg
pushf
jns
pop
push
jle
jmp
xchg
es
push
repz
fst
add
dec
pop
shl
sarl
mov
add
sub
add
fldt
ret
stos
or
lods
je
push
lods
cmpsb
test
fwait
or
ret
mov
jno
ja
ss
sbb
mov
or
xchg
sub
xchg
push
xlat
into
dec
lock
stc
pop
inc
in
ja
ljmp
in
sahf
cmc
cld
or
and
in
mov
flds
sub
icebp
fsubrs
fs
arpl
sub
mov
bound
jge
cmpsb
dec
sub
enter
and
out
in
rcrl
inc
xor
cld
mov
repz
xchg
mov
push
mov
and
inc
cmp
push
mov
jle
xchg
stos
aad
mov
push
out
sbb
hlt
xchg
add
test
sbb
push
scas
sarl
jbe
pop
sub
rol
and
or
dec
movsl
jnp
sub
jg
lret
jae
in
mov
jp
popa
push
dec
lcall
xlat
push
lahf
jmp
leave
repz
push
out
fwait
xchg
pop
or
inc
or
mov
gs
std
dec
mov
mov
mov
push
jae
lret
xchg
test
xor
push
xchg
outsl
push
adc
xchg
inc
mov
and
into
out
and
fucomp
and
mov
push
sbb
cmp
add
dec
and
pop
mov
xchg
or
test
outsl
loopne
aaa
and
inc
es
xchg
cli
sub
outsl
pop
ret
aas
jp
add
jnp
lds
fistpl
dec
xor
jle
mov
adc
jl
cmp
nop
dec
and
std
cli
xchg
lret
or
mov
scas
jno
ficompl
inc
sub
sahf
push
not
fnstsw
pop
dec
rol
push
shrb
mov
adc
lahf
pop
pop
aam
pop
push
and
les
call
jns
addr16
js
mov
cmpb
jb
out
sub
dec
jae
lret
movsl
pop
fwait
repz
addb
xor
lods
stc
loope
aam
mov
jecxz
test
in
aam
fstps
ljmp
pop
lea
out
mov
test
and
adc
bound
mov
mov
sahf
in
in
push
inc
add
xchg
mov
cmpsb
icebp
push
or
mov
clc
xchg
adc
outsl
mov
cld
mov
nop
ret
ja
jge
out
pop
sub
movsb
jns
adc
push
pop
int3
imul
into
jmp
lret
mov
sbb
mov
test
cmc
inc
xchg
js
jmp
adc
ds
cltd
dec
dec
jecxz
out
stos
loope
or
mov
out
xchg
ret
inc
fistps
mov
ret
addb
xor
add
jge
cltd
inc
pop
push
pop
test
jae
fs
mov
jl
and
mov
and
adc
movsb
cli
loopne
repz
cli
jecxz
add
and
fsubrl
xchg
mov
scas
lea
pop
or
pop
je
jbe
xlat
sbb
or
push
daa
popf
mov
jle
outsb
sbb
insl
insl
adc
out
mov
scas
xor
lock
xlat
push
shll
aaa
sub
xchg
nop
mov
sub
push
mov
push
out
or
enter
imul
pop
repz
jle
rcll
adc
xchg
mov
into
or
xchg
and
or
movsl
out
cmpsb
shll
xchg
mov
cli
fsubr
loopne
out
into
adc
repnz
sbb
outsl
bound
mov
jl
mov
adcl
xor
pop
adc
mov
and
mov
add
jnp
sub
xchg
sub
mov
mov
fs
or
mov
xchg
sub
aam
test
divl
les
andl
push
jno
or
stos
mov
adc
ljmp
sahf
jg
jae
shll
int
xorl
fidivs
push
in
in
lahf
inc
icebp
mov
dec
int3
pop
or
shll
jecxz
scas
cmpsb
out
mov
fs
gs
cld
jmp
mov
arpl
fld
sbb
ss
pushf
cmp
mov
push
or
mov
inc
aam
and
cmp
jmp
push
in
cltd
jb
push
dec
inc
mov
lods
jmp
sahf
shrl
pop
shll
arpl
sarl
data16
dec
std
in
adc
push
lods
les
stos
jne
jmp
mov
dec
adcb
mov
outsl
ror
cld
inc
cmp
add
xchg
xorl
or
sbb
sub
cmp
lret
fucomi
jmp
sti
iret
mov
mov
outsl
imul
or
sbb
sub
cmp
lret
fucomi
jmp
sti
iret
mov
mov
outsl
or
dec
fwait
aas
sbb
sub
sti
bswap
fucomi
sbb
sti
lret
mov
push
mov
pop
imul
pop
dec
or
or
sub
mov
inc
inc
mov
push
loopne
lock
hlt
add
xor
and
and
push
sahf
arpl
addl
and
xor
add
adc
in
hlt
add
xor
and
xchg
sbb
addl
in
xor
add
adc
in
hlt
add
xor
and
xchg
arpl
mov
and
pop
xchg
jno
jp
mov
pop
mov
inc
clc
insb
call
int
xchg
jno
push
js
mov
cwtl
outsl
sub
jp
imul
cmpsb
stos
fcmovnbe
xor
mov
adc
push
ret
pop
mov
ret
jo
and
inc
ljmp
popa
jbe
pop
in
hlt
daa
scas
sbb
je
lock
popf
jmp
aaa
ds
fcmovnbe
je
xchg
and
sbb
push
and
sub
pop
sbb
inc
mov
rorl
or
push
repz
mov
and
push
inc
mov
jnp
xor
jl
je
mov
imulb
adc
add
xor
and
xchg
arpl
addl
and
xor
add
adc
movsl
pop
addb
mov
sub
xor
adc
and
mov
xorl
and
movb
fsubs
and
movsl
popa
mov
inc
mov
inc
test
arpl
addl
and
xor
add
adc
in
hlt
add
xor
and
xchg
arpl
addl
and
xor
add
adc
in
shrl
fdivrp
loope
daa
mov
outsl
cld
arpl
adc
sbb
insl
mov
dec
pop
sub
stos
adc
lods
mov
cli
test
lret
lods
mov
jg
cmp
icebp
outsb
gs
or
push
pop
and
inc
mov
jle
and
lea
int
jnp
jo
push
shlb
imul
std
cmp
mov
loopne
pop
cli
fwait
dec
fistpll
push
jmp
fildll
outsl
add
in
xor
jae
in
call
movsb
test
adcb
sbb
sbb
mov
xchg
dec
sub
hlt
sbb
daa
xor
stos
push
icebp
test
je
mov
xchg
push
movsl
or
nop
out
sub
scas
lret
push
test
or
xchg
lods
xor
mov
lods
bound
ret
xchg
xchg
sbb
sbb
in
sbb
push
int
bound
and
jo
ret
push
stc
mov
xor
std
adc
imul
subl
lret
hlt
push
pop
jne
bound
lea
jae
mov
iret
mov
sub
pop
cmp
sub
adc
dec
imul
add
out
cmp
loope
jmp
popf
cli
xor
or
push
scas
test
push
cs
in
xlat
or
cltd
cmpsb
lock
xorl
xchg
insb
clc
and
flds
xor
iret
xor
lcall
dec
pop
pushf
inc
sbb
loope
arpl
ud2
push
and
push
mov
cmp
dec
jl
lods
test
scas
daa
ds
dec
fmuls
jne
add
mov
iret
ljmp
lret
stc
stos
pop
dec
sub
dec
lret
bound
lahf
xor
xor
frstor
call
sti
xchg
pop
jno
dec
sarb
outsl
jp
loopne
outsl
nop
int
adc
loopne
inc
fstl
mov
rolb
sti
enter
inc
jle
pop
int3
out
inc
ret
mov
pushf
mov
add
adc
or
hlt
or
hlt
mov
inc
jmp
adc
jle
fidivrl
movsl
inc
push
shl
mov
out
cmp
into
mov
loope
mov
das
add
pop
jp
cmpsl
mov
push
cmp
mov
lods
daa
repnz
scas
push
push
add
and
test
pop
jecxz
lret
and
scas
fsts
push
xor
ljmp
jg
clc
mov
testl
in
dec
push
or
push
inc
int
lods
sbb
dec
cmp
or
stc
loope
rorb
daa
mov
arpl
shrb
lret
dec
mov
in
xor
inc
mov
test
ds
xor
mov
ret
mov
push
inc
int
hlt
mov
jnp
push
test
push
pop
cltd
ds
cmp
jbe
cwtl
pop
out
inc
cmp
movsl
or
inc
fildll
out
test
shlb
arpl
sub
fsts
std
xor
into
outsb
jmp
pusha
or
repnz
loopne
pushl
add
xchg
les
sub
and
add
daa
mov
insb
lcall
sub
dec
aaa
cmp
inc
popf
je
es
insb
cmc
pop
aaa
dec
add
mov
pusha
jge
jmp
push
iret
popf
sbb
ss
jle
bound
dec
xor
movsb
dec
xchg
jle
lods
pop
das
nop
pop
rcr
inc
or
sub
add
ljmp
subb
xor
push
fmulp
add
stos
cmp
test
sub
and
into
cmpl
rcrb
mov
dec
xor
adcl
push
mov
loop
outsb
mulb
pop
dec
mov
jne
popf
jbe
jae
and
push
es
xchg
hlt
hlt
cmp
adc
mov
and
mov
mov
out
arpl
mov
mov
jno
scas
popf
cmp
ds
xlat
ja
movsb
and
adc
out
dec
shlb
cld
mov
jns
repz
loopne
rolb
les
and
orl
fsubrp
sub
or
inc
sbb
dec
gs
loopne
cwtl
mov
popa
test
ss
xchg
fwait
cmp
fxch
jae
aam
adc
nop
xchg
jno
xchg
and
rorb
jge
jge
inc
inc
adc
mov
ficomps
js
push
or
jg
push
dec
pusha
push
xchg
inc
stos
mov
jle
into
inc
and
mov
mov
lods
mov
out
adc
cmp
in
mov
push
xchg
repnz
dec
cmp
jne
fs
repz
push
and
sbbl
cwtl
pushf
lret
push
pop
orb
sub
aaa
movsl
scas
iret
lret
stc
jg
adc
dec
lahf
imul
notb
dec
and
icebp
dec
popa
mov
aas
cmc
and
sub
jb
mov
or
mov
leave
sbb
jo
out
mov
je
cld
jle
into
sbb
inc
mov
mov
adc
jo
mov
movb
stos
push
adc
adc
decl
clc
mov
fdivl
add
fcoms
xchg
mov
hlt
clc
jbe
mov
cmpsl
push
int
push
mov
push
stos
add
mov
rcr
icebp
pop
mov
mov
lret
testl
jmp
enter
jle
mov
jo
rorl
xlat
call
xchg
pusha
jno
leave
lock
jae
fidivrl
push
scas
das
pushf
lock
mov
and
pusha
test
cs
sarl
cld
xor
adc
xchg
xlat
out
push
xor
jecxz
stos
dec
aaa
stc
fwait
jbe
decb
inc
faddl
mov
das
push
packuswb
pop
cmp
outsb
push
inc
cmp
aaa
sahf
daa
decb
cmpsb
push
push
punpcklwd
mov
jge
imul
ja
and
mov
or
lret
mov
add
lea
jne
and
out
sbb
push
hlt
je
adc
movsb
ljmp
movsl
test
pusha
push
ljmp
cmp
fwait
xor
rcrl
adc
cmpsl
push
test
or
out
outsb
pop
xor
add
add
ja
cmp
jecxz
xchg
jo
adc
add
mov
into
add
imul
cmpsl
jl
xor
les
testb
xchg
lret
movsb
inc
push
xchg
xchg
mov
gs
push
rorl
movsl
mov
mov
daa
addl
aaa
xor
push
mov
cmpl
mov
pushf
xchg
sub
jge
xchg
add
cmpsb
pop
imul
xor
mov
cmp
leave
hlt
pop
dec
movsl
dec
cmp
cmp
push
gs
jle
jecxz
push
dec
movsb
mov
adc
xchg
out
jnp
pop
int3
inc
inc
adc
adc
mov
mov
mov
mov
xchg
inc
push
mov
add
ret
cwtl
adc
pusha
push
test
cmpsl
cmp
push
jmp
jo
xor
and
or
je
mov
repnz
repnz
sbb
jle
mov
gs
arpl
adc
xor
pop
inc
pop
jns
adc
stos
and
add
mov
je,pt
movsb
popa
in
orb
es
xor
stos
push
mov
ss
repz
aaa
sbb
lcall
int
outsl
arpl
cmp
mov
leave
inc
nop
sbb
pop
jle
pusha
or
inc
and
imul
xchg
adc
fsubrs
es
sub
dec
jmp
fdivl
inc
and
ds
out
popl
mov
mov
jmp
xor
xchg
mov
add
xchg
jecxz
jmp
push
inc
rol
sti
inc
and
dec
or
jo
dec
sbb
push
mov
sbb
mov
pushf
loope
cs
nop
sbb
pop
ftst
ss
mov
loope
andl
adc
mov
pop
test
js
imul
push
jle
imull
bswap
stc
stos
sbb
outsl
sbb
xchg
cmp
push
cmp
in
xchg
icebp
or
jmp
in
aad
leave
dec
aam
add
popf
xchg
and
jne
mov
and
aas
adc
fisubs
push
adc
xor
inc
lods
mov
loopne
sbb
jg
jle
xchg
int
xor
mov
lds
test
gs
jbe
jno
cmp
bound
clc
inc
nop
mov
add
cld
sbb
pop
push
insl
roll
in
adc
adc
outsl
js
sti
and
out
mov
gs
fcomp
mov
aam
pop
jno
add
not
and
push
ret
push
cwtl
xchg
push
add
movsl
insb
push
xchg
mov
or
jns
insl
sti
jp
dec
push
cmc
add
arpl
jae
xor
inc
jb
xchg
ror
add
cld
push
fsub
push
jl
clc
jae
in
out
xor
jle
cwtl
pop
or
inc
out
mov
add
and
jge
fs
ja
jno
inc
pop
push
popa
or
jmp
mov
sub
jae
push
orb
cmp
inc
jge
rcl
mov
dec
cmp
arpl
mov
fstp
fsubrl
mov
inc
push
pushf
jp
scas
mov
shl
push
out
inc
scas
cmp
out
leave
clc
scas
out
rorb
pop
push
je
or
xor
loope
in
in
testl
sbb
pmaxsw
je
xor
sarb
jmp
bound
jge
aas
cmp
mov
cmp
push
jns
popa
in
mov
jmp
xchg
in
and
push
orb
lock
or
test
jg
mov
jecxz
mov
lds
sti
jl
push
cmpsb
or
xor
fbld
in
repnz
mov
jb
mov
sub
insb
out
sub
fcom
mov
cmp
aaa
lahf
cmp
roll
into
dec
inc
arpl
sbb
jl
cwtl
mulb
dec
jp
scas
adc
ljmp
inc
dec
setp
push
mov
jge
sub
add
fs
enter
sub
sub
leave
lea
insb
aam
or
jge
jge
insl
push
pop
and
lcall
jno
sbb
aas
adc
insl
jbe
pop
data16
imul
push
xchg
push
cmp
jb
in
rcrb
aas
fiadds
push
sbb
outsb
sbb
mov
or
push
call
inc
adc
iret
orb
jo
sbb
imulb
add
mov
das
pop
outsb
push
cs
mov
dec
clc
sub
adc
js
and
pusha
sbb
inc
add
mov
pop
xchg
jnp
xchg
sbb
lods
aas
push
mov
mov
inc
sub
subb
xor
icebp
into
fmul
sub
mov
pop
push
cmc
aas
push
sti
push
add
lods
xchg
sub
mov
lds
mov
mov
dec
xor
xchg
xor
rcll
sub
fcompl
test
notl
in
in
or
cld
cmp
shl
push
aaa
ss
cmpsb
sub
movsl
sbb
loopne
repz
jo
push
mov
cmp
popf
addr16
bnd
daa
fcoml
dec
in
daa
aam
push
mov
aas
pop
repnz
aas
add
dec
call
cmp
in
pop
pop
call
mul
mov
out
bound
jl
mov
mov
ret
pop
mov
sub
stc
mov
les
lods
call
iret
dec
das
sub
daa
fidivs
and
shlb
jl
xchg
lods
aas
sarl
jge
sbb
mov
xlat
dec
xor
into
inc
add
test
pop
arpl
out
xchg
rolb
int3
mov
out
xor
ja
and
adc
sub
js
imul
pop
loop
sub
inc
pop
sbb
mov
addr16
jne
dec
push
push
mov
inc
xchg
push
cmp
sub
repz
scas
and
push
xor
orl
adc
test
lret
xor
inc
push
cmc
shlb
sbb
popf
subb
pop
or
loop
sahf
cmp
shll
pop
das
test
xor
jmp
int
adc
and
loop
fiadds
aad
ja,pn
cmovge
std
pop
mov
and
add
in
dec
mov
dec
insl
fsts
mov
adc
mov
cmpsl
mov
add
ret
jnp
int3
pop
stos
pushf
cmpl
enter
lret
push
adc
and
aas
cmp
call
in
adc
add
mov
xorl
hlt
sbb
out
data16
int
add
shrl
aad
adc
lret
insl
or
lock
sbb
shrb
subl
pusha
in
bnd
int3
int3
pusha
flds
cmp
dec
imul
sub
cmp
gs
mov
in
shl
inc
daa
mov
jge
icebp
pop
mov
xor
fildl
or
iret
insl
push
js
mov
int3
adc
and
int
fadd
into
decb
xor
xor
cmp
sbb
in
out
out
addr16
aad
shrl
in
jmp
mov
lcall
fdivrl
insb
mov
xor
sub
cmpsl
repnz
js
xchg
xchg
push
pushf
cwtl
shl
inc
sti
in
jae
and
pop
xor
xchg
mov
lods
rorl
dec
test
ja
cli
hlt
mov
dec
jno
sbb
outsb
or
cmp
xor
outsb
add
faddp
nop
jp
in
aas
adc
cmpl
jae
sbb
push
mov
lods
mov
xchg
sub
mov
mov
mov
inc
insb
fabs
test
lea
rcrl
jg
or
xchg
inc
fisttpll
rcrl
int
push
inc
push
out
cld
xlat
lds
fisttps
aaa
dec
sbb
andb
jp
sahf
push
mov
push
out
gs
test
xor
dec
mov
cmp
xchg
cmp
icebp
add
xchg
add
and
lret
dec
push
dec
xor
pop
mov
ss
jo
movsl
loope
add
insb
out
cmpsl
inc
and
mov
mov
sbb
lods
imul
cmp
call
cli
insl
mov
lods
cmpb
xchg
and
xchg
imul
out
lcall
movsb
loope
cmp
lds
in
es
inc
loopne
pop
add
pop
test
mov
lret
dec
sub
dec
mov
lea
cmp
jg
push
sti
jb
imul
pop
pop
rcl
push
test
sbb
cmp
mulb
push
aam
and
mov
xlat
dec
fbstp
mov
push
lods
push
adc
jno
movsb
cwtl
imull
daa
cmp
push
mov
movsl
loopne
loopne
out
in
idiv
lahf
iret
sarl
dec
scas
test
aad
roll
sub
push
jle
xor
mov
ret
test
add
mov
int
fiadds
mov
adc
xchg
inc
mov
pop
sbb
insb
dec
dec
movsb
pop
insl
rcrb
std
inc
enter
clc
and
xor
add
pop
xchg
sbb
xor
orl
lods
and
fiaddl
leave
clc
mov
ret
mov
out
fisubrl
pop
out
xor
iret
les
hlt
sub
daa
fistpll
xor
dec
les
pop
loopne
ret
sbb
mov
xchg
fsubrs
testb
test
stc
mov
add
xchg
les
mov
sub
lahf
mov
enter
xchg
cld
sbb
pop
pusha
shll
pop
lea
xor
cmp
jl
sbb
jmp
push
mov
es
xor
add
mov
push
xor
test
jp
lods
sub
bound
mov
jp
push
xchg
outsb
mov
inc
push
outsl
mov
cld
cmc
push
cmpsl
pop
jae
sbb
insb
daa
cld
iret
inc
lea
dec
test
xlat
clc
bound
pop
ret
dec
jno
fst
mov
lods
sti
push
popf
int
push
pop
inc
out
jo
stos
in
xchg
test
enter
adc
push
xchg
outsl
mov
add
pop
pop
fs
push
in
aas
mov
popf
mov
or
lods
lds
mov
stc
sub
adc
sbb
addr16
xchg
mov
pop
addb
aad
cmpsb
jno
popa
inc
out
lcall
jmp
xchg
enter
daa
bound
leave
or
sub
arpl
sbb
scas
push
int3
clc
mov
dec
jecxz
ret
sbb
xlat
jnp
nop
shrl
and
testl
fidivl
fs
sti
jnp
in
outsl
andl
das
cmp
xor
inc
sbb
sarl
mov
leave
cli
hlt
sbb
int
popf
icebp
std
and
imul
push
ds
sub
cmp
das
cmpsb
cli
mov
pop
sub
ret
pop
mov
mov
and
mov
inc
pop
lods
inc
jp
push
jl
iret
stos
popf
pop
imul
xor
dec
mov
xorb
and
sub
pop
push
scas
insb
sahf
bound
mov
xchg
in
inc
in
cmc
jg
cltd
call
fwait
xchg
push
xorb
sarl
popf
sbb
xorb
mov
lea
dec
fldenv
jp
add
cmp
pop
test
loopne
sub
jge
and
in
xchg
inc
les
add
or
test
push
int3
push
dec
mov
jmp
jecxz
pop
adc
negb
in
lods
adcl
sub
sub
lods
test
loopne
inc
into
xchg
mov
sahf
sbb
sahf
inc
jmp
pop
or
not
xor
ret
mov
inc
push
inc
or
sti
push
push
rclb
pop
pushf
sbb
movsl
out
cld
cmc
pop
xchg
mov
hlt
out
jge
repz
aam
push
daa
adc
xor
jae
jecxz
mov
movsb
scas
gs
cltd
int
lods
cmp
ljmp
cmp
mov
push
js
rorb
hlt
jbe
pop
push
sbb
pop
stos
pop
pushf
push
mov
sbb
add
and
bswap
clc
adcl
loope
sub
sub
fcompl
clc
outsl
fwait
mov
stos
out
xchg
int3
fiaddl
stc
mov
mov
mov
ret
sub
out
in
icebp
std
out
test
pop
push
cmc
insl
xchg
mov
mov
xchg
jmp
rolb
xchg
in
inc
test
cli
or
pop
and
test
jl
jns
loopne
lcall
adc
push
fisttps
fists
fmull
mov
xchg
gs
ret
dec
sub
int3
jle
xchg
mov
pop
aaa
cmp
cmp
popa
cmc
cltd
or
add
sbb
jecxz
mov
imul
mov
push
and
fisubl
adc
scas
es
aaa
lock
int
mov
or
mov
mov
sub
imul
sti
inc
mov
mov
mov
add
xchg
push
cwtl
sbb
push
fdiv
mov
jp
lds
push
incl
dec
out
rcrb
orl
mov
xchg
fiadds
mov
arpl
pop
xchg
testl
loop
add
inc
mov
iret
sub
test
xor
adc
dec
add
mov
dec
test
out
push
sub
inc
adc
out
pop
adc
ljmp
lret
sub
or
or
xor
add
inc
pop
dec
pop
sbb
addl
mov
cmpsl
dec
mov
xor
mov
in
fucomi
cmpsl
movsl
int3
imul
icebp
imul
inc
push
scas
jo
adc
scas
mov
mov
jl
xchg
mov
out
jo
mov
test
push
push
mov
push
mov
mov
xor
cs
movsb
pop
sub
adc
shrb
lcall
add
jg
xor
lcall
push
fdivl
dec
jmp
lea
leave
sub
mov
mov
cmpb
in
mov
pushf
or
jmp
mov
pop
fcmovb
or
cltd
mov
test
and
mov
sbb
ret
inc
push
mov
xchg
pop
or
adcl
call
imul
add
adc
rcll
dec
mov
out
test
pop
push
mov
mov
mov
pop
sub
stc
in
adc
inc
pusha
enter
jnp
sahf
stc
inc
pop
std
fwait
les
jbe
push
xlat
insb
out
push
dec
fprem
add
xor
and
xchg
arpl
addl
and
xor
add
adc
in
hlt
add
xor
and
xchg
arpl
addl
and
xor
add
adc
in
je
inc
xor
and
mov
test
arpl
addl
and
xor
add
adc
in
hlt
add
xor
and
xchg
arpl
sub
mov
aam
pop
inc
cmp
or
sbb
adc
sti
push
lret
push
pop
outsl
adc
xor
pop
fwait
movsl
imul
sub
cmp
or
sbb
jmp
sti
push
lret
push
jbe
inc
mov
cmpsb
imul
out
idivl
dec
sbb
jns
sti
push
arpl
fldenv
jbe
inc
gs
andl
repz
jl
push
test
sbb
push
xchg
push
mov
and
lods
xchg
fldl
push
xchg
sbb
jge
cs
xchg
inc
lret
ljmp
jbe
mov
dec
cmp
js
imul
or
insb
rcrl
xor
movsb
orl
xchg
adc
out
jge
inc
lret
or
sub
jmp
fistl
arpl
stos
mov
pop
jo
fs
xchg
cmp
addr16
cmpsl
mov
test
jecxz
dec
jne
mov
sbbl
mov
cmp
pop
mov
jbe
cmp
in
sub
inc
cmp
jmp
cmp
lret
inc
loopew
repz
cld
inc
add
movsl
les
or
lahf
in
or
dec
push
shll
jbe
inc
push
push
sbb
pop
xchg
adc
pop
test
or
jne
mov
push
cmc
add
sbb
sub
sar
sub
shll
pusha
inc
mov
mov
scas
inc
mov
add
cmp
not
push
shrl
adc
ja
push
jo
mov
jae
and
jbe
inc
mov
cmpsb
imul
out
idivb
or
sbb
jmp
sti
push
lret
push
jbe
inc
mov
cmpsb
imul
out
idivb
or
sbb
jmp
sub
push
test
adc
sub
sub
lahf
addr16
cmp
adcb
out
cmovno
test
cltd
sbb
arpl
je
rcll
leave
aas
xor
std
sub
jns
pushf
lahf
sti
and
addl
mov
mov
and
mov
mov
es
in
push
xorl
je
pop
pop
imul
mov
or
loop
iret
or
iret
decl
xor
mov
in
aas
imul
test
jne
mov
aam
cmpsl
add
pop
jno
in
jmp
push
in
repz
loop
std
arpl
push
push
mov
loopne
adc
sbb
add
cwtl
adc
sbb
cmp
pop
cmp
addr16
xor
pusha
lret
test
and
cmpsl
outsb
loope
orl
mov
fadds
cmpsl
push
pop
adc
cmpsb
dec
sbb
sub
ja
pop
sub
jmp
inc
inc
add
sbb
sub
mov
ds
mov
shrl
imul
out
dec
addb
fisttpll
lret
push
mov
call
cmpsb
into
push
adc
cltd
push
inc
xor
lock
sub
add
out
dec
xor
mov
out
fisubrl
cwtl
ret
adc
mov
out
in
cmc
test
dec
xor
pop
into
push
jae
adc
in
into
addr16
stos
lahf
pop
lds
addr16
inc
sar
dec
pop
cmp
sbb
jp
cmp
inc
xchg
shl
and
popf
aam
cmp
pop
dec
push
in
dec
cld
jo
jae
incb
in
cmpb
imul
mov
fidivs
cmc
dec
aam
lds
aad
imul
push
rcrl
sub
nop
pop
cmpsl
ficoms
add
xchg
and
fnstsw
inc
movsb
jecxz
cmp
pushf
sbb
push
lret
fwait
jne
imul
mov
xchg
cmc
mov
push
pop
in
mov
xchg
int3
lcall
mov
jecxz
sti
out
movsb
mov
dec
dec
mov
push
jo
sbb
cmp
mov
xchg
or
xchg
adc
fcmovu
into
test
mov
jno
or
shlb
lods
test
and
adc
xorl
je
in
enter
ror
push
inc
mul
and
cmpsb
test
push
stc
stos
stc
rol
ds
bound
cmpb
jns
sti
and
add
pop
cld
or
push
mov
lret
std
cs
out
inc
aas
pop
mov
daa
push
xchg
data16
cmpsl
adc
mov
mov
lods
push
adc
out
hlt
xor
xor
fstps
ljmp
push
mulb
scas
push
stc
sbb
aaa
jns
jns
loope
rcrl
das
fucom
adc
or
adc
out
adc
push
scas
call
pop
push
test
add
inc
rcl
adc
into
push
sub
imul
jmp
sbb
push
pop
stos
out
xchg
sbb
mov
inc
test
inc
jbe
push
movswl
repz
cld
loop
jb
mov
rcrl
daa
pop
addr16
mov
lret
in
jecxz
filds
sbb
inc
jmp
mov
inc
pop
ret
inc
testb
divb
in
fwait
mov
jp
int
out
popa
sub
or
cwtl
sub
mov
pop
xchg
sub
xchg
imul
popf
pop
rcr
hlt
and
test
add
ret
xchg
mov
insl
pop
mov
clc
mov
jg
jbe
idivb
inc
js
pop
pop
outsb
add
mov
jmp
movsl
sbbb
jnp
cltd
mov
pushf
divl
and
sahf
xor
fildll
arpl
nop
pop
insl
ret
mov
loop
jne
addl
jo
jl
es
or
imul
jb
rcll
mov
mov
mov
xchg
inc
in
push
push
clc
mov
adc
sbb
mov
imul
sub
ret
loope
cmpsb
pop
jbe
sbb
cmpsl
mov
push
sahf
xchg
sub
push
movsl
add
pop
push
xchg
add
mov
je
repz
push
mov
jp
fs
or
cli
stos
cltd
and
mov
repnz
pop
sbb
xchg
pop
mov
mov
mov
addr16
xchg
pop
gs
inc
push
ficomps
outsl
lds
add
xor
add
add
push
movsb
movsl
xchg
add
pop
dec
inc
in
icebp
inc
cltd
pop
stc
add
and
cs
sub
fiadds
add
and
cs
in
out
push
lds
fwait
or
bound
inc
sub
and
lods
adc
pop
lds
xor
cli
xchg
adcb
inc
mov
add
mov
leave
push
out
jb
mov
in
ror
xor
nop
incl
pusha
jl
xchg
xor
or
pop
mov
adc
andl
xor
test
inc
sbb
movsb
lahf
out
sub
addr16
or
leave
push
or
jb
addr16
std
mov
pop
jg
fildll
add
scas
mov
jo
pop
clc
out
std
popa
data16
mov
cmp
adc
jmp
pop
sub
mov
xor
xchg
icebp
or
inc
lret
mov
dec
sub
or
pushf
add
pop
or
gs
scas
xchg
mov
add
sbb
and
cld
in
in
jecxz
sbb
lret
lret
sti
cmpsb
ja
shrb
adc
xchg
or
inc
push
push
jmp
push
sbb
add
stc
cltd
jb
sbb
xlat
arpl
push
cmp
pop
das
in
sbb
xchg
jb
loop
xchg
xchg
push
push
jns
cmpsb
jg
fnstcw
cli
mov
ja
pop
cmp
mov
das
xorl
adc
insl
mov
mov
aas
shrl
jle
in
mov
into
fidivl
push
sub
in
dec
xor
cmp
sti
dec
jmp
cltd
loopne
stos
outsl
sbb
sbb
subb
ds
mov
cmp
pop
adc
push
mov
adc
mov
xchg
xor
pop
pushw
stos
pop
imul
stos
adc
pop
pop
shl
es
xor
mov
scas
jg
mov
incl
push
xchg
dec
mov
pusha
sub
inc
ss
loopne
mov
jb
sbb
push
cmpl
jne
out
insb
clc
dec
fdivs
icebp
pop
faddp
xchg
fisubrs
fs
add
lea
mov
jg
push
pushf
push
negb
cmpsb
in
sbb
add
lret
out
xchg
hlt
cmp
push
jnp
loop
nop
jmp
sbb
sbb
lods
mov
out
xchg
mov
push
pop
cs
inc
ljmp
mov
mov
ds
adcb
arpl
cltd
dec
mov
hlt
push
mov
xchg
xchg
jo,pt
aaa
dec
data16
shrb
and
mov
lock
test
push
and
enter
or
inc
dec
push
dec
add
dec
inc
jbe
push
imul
sbb
test
in
adc
cmpsl
fnsave
dec
aaa
jno
push
shlb
sbb
push
xor
and
adc
cmp
movsl
js
scas
sub
in
arpl
loop
and
xchg
mov
sub
push
sahf
loop,pn
mov
testl
test
cli
lods
cltd
jecxz
xchg
lret
lret
adc
std
xchg
das
dec
mov
inc
pushf
lcall
pop
pop
mov
dec
movsb
les
push
ss
xchg
mov
jno
xor
mov
push
ror
and
lahf
cmpsb
decl
jl
push
push
inc
shl
pop
xchg
mov
inc
inc
outsb
call
fwait
mov
push
add
mov
fwait
neg
and
xchg
adc
dec
fucom
std
push
jecxz
pushf
adc
jb
mov
loop
fcoml
popa
lods
push
lds
cmp
cld
int
fiadds
in
sti
loopne
push
jecxz
in
aas
daa
test
cmp
jb
jbe
jbe
mov
movsl
jae
cmpsb
pop
outsb
xchg
test
pop
xchg
dec
js
inc
int
mov
mov
sbb
sbb
aad
mov
fbstp
jnp
mov
lea
pusha
jb
sbb
sti
cmpl
mov
lods
mov
jbe
push
cmpsl
dec
rep
filds
scas
loope
pop
xchg
mov
mov
xor
mov
inc
jb
pop
pop
mov
mov
mov
cltd
mov
iret
rorb
mov
push
cs
xor
outsb
cld
in
or
jns
cmpsb
ljmp
movsl
mov
fsubp
inc
leave
and
sbb
iret
mov
cltd
rolb
mov
andb
mov
mov
loope
xor
sub
data16
cmc
stos
icebp
aam
mov
out
lods
repz
int
mov
dec
cld
xchg
insb
mov
mov
xchg
outsl
fldt
mov
pop
ljmp
sarl
dec
xor
add
out
pop
ss
sbb
loopne
aaa
pop
pushf
jae
and
or
xchg
movsb
mov
pusha
dec
rsm
and
lods
aas
subb
dec
scas
jmp
sbb
cld
sbb
mov
dec
insb
adc
add
fsubrs
push
adcl
xor
mov
dec
call
es
call
dec
sub
and
xor
mov
lcall
shr
out
lock
jge
and
xor
test
cli
nop
cld
enter
sub
adc
inc
cmp
mov
ret
stos
push
out
adc
popa
sahf
inc
call
movsb
jge
fwait
cmp
sbbb
xor
icebp
xchg
cltd
ficompl
out
rcr
or
inc
and
ret
sbb
pop
mov
into
movntq
mov
push
cmpl
lret
fstpl
shlb
lcall
or
or
test
insl
jo
sbb
fs
orb
mov
jl
imul
mov
xlat
popl
sbb
iret
jbe
pop
out
inc
bound
clc
mov
shl
jo
mov
and
adc
mov
push
mov
sub
mov
dec
and
inc
mov
int
push
loop
dec
pop
jmp
fidivl
insl
pop
lahf
mov
hlt
nop
mov
jl
repz
sbb
push
xchg
push
aas
and
sbb
push
repz
ljmp
xor
xor
int
sarl
fidivrl
clc
cwtl
push
mov
mov
cld
mov
xchg
loopne
loop,pt
sub
pop
xchg
shll
sub
adc
xchg
and
mov
es
scas
xor
aas
call
mov
je
mov
cmp
scas
push
add
sbb
mov
insb
addr16
mov
jg
mov
pusha
aad
lahf
imul
das
push
test
jle
xor
inc
cmpsb
out
std
jecxz
jo
cwtl
or
xchg
fsts
mov
cld
movsb
icebp
test
push
mov
stos
sbb
nop
out
add
movsb
push
adc
or
andl
testl
les
nop
xchg
jmp
jl
adc
in
push
popa
xor
iret
lods
dec
dec
aam
xor
pop
mov
mov
shl
mov
sbb
sub
inc
repz
ja
dec
jg
mov
data16
adc
push
out
push
mov
jmp
test
aam
dec
lret
mov
out
mov
addl
in
xchg
ja
lcall
add
imul
nop
xchg
jno
adc
xor
lcall
nop
mov
ds
xor
lds
das
fsubs
add
fistpll
jo
mov
sahf
cmpsb
loope
gs
divb
leave
dec
ds
mov
adc
repnz
xchg
mov
mov
mov
roll
inc
mov
lret
popf
addr16
xlat
shll
jg
stos
test
xchg
cs
imul
xchg
hlt
push
jno
mov
sub
mov
fistpll
movsb
and
adc
fmulp
jbe
and
or
push
mov
push
repz
repz
add
or
jmp
mov
fs
add
dec
dec
fisttpll
arpl
movsb
scas
negl
cmp
mov
cmpb
mov
cmp
push
and
mov
je
mov
shll
cltd
or
and
in
orb
clc
dec
sub
pop
aas
sbb
cmp
pushf
and
mov
adc
dec
lds
pop
ljmp
clc
fs
popa
mov
notl
xchg
lahf
jbe
aad
mov
leave
lret
pop
imul
les
jp
imul
ds
adc
test
sub
dec
aad
pop
fists
pop
test
cli
mov
push
sbb
add
push
loop
shl
into
faddl
lods
leave
xchg
pop
stos
mov
enter
mov
jbe
stos
add
jo
imul
dec
dec
push
sub
outsl
scas
inc
dec
push
jmp
sbb
out
idivl
add
lock
cmp
cld
mov
int3
fists
std
jno
pusha
enter
leave
pop
into
pop
push
xchg
pop
stos
mov
cmp
inc
mov
scas
push
stos
dec
jne
loopne
cmp
inc
cmp
sub
out
or
arpl
fcompl
leave
xor
xchg
les
dec
xor
mov
push
arpl
mov
sbb
inc
mov
jo
bound
insl
ljmp
popa
outsb
jle
stos
inc
cwtl
aam
lock
push
cltd
push
pop
cmp
ret
xor
cmp
shl
inc
test
inc
dec
in
lcall
lea
adc
lods
ficoms
scas
lea
into
or
leave
inc
mov
ja
je
cmc
sbb
mov
scas
xchg
imul
shlb
movswl
shll
data16
dec
and
inc
push
rcr
push
test
stc
aas
cmpl
mov
add
or
push
mov
jne
xchg
adc
and
cltd
cmp
outsb
cmpsb
nop
sahf
xorl
pop
ret
sahf
pop
inc
or
in
push
out
adc
cmp
insb
sbb
lods
out
cmp
adc
or
in
rorl
clc
stc
adc
out
cmp
sbb
pusha
movsb
imul
adc
arpl
loop
xor
and
repnz
rcll
push
stc
pop
inc
into
jo
jbe
repz
test
daa
sbb
imul
js
dec
addr16
fcmovu
test
bnd
cmpsl
jae
inc
int
lock
bound
dec
push
cmpsl
cltd
in
leave
aad
and
mov
hlt
xchg
adc
lret
pushf
inc
xlat
je
inc
movsb
aas
adc
jge
xlat
cmp
xchg
mov
and
sub
lcall
popl
sub
sti
test
inc
xchg
adc
xchg
arpl
xor
lods
lea
iret
push
out
stos
aad
mov
lcall
mov
jmp
rorl
loop
pop
cwtl
je
scas
push
and
inc
push
jbe
cmp
jnp
out
mov
cmp
cmc
jne
push
adc
xchg
push
and
add
dec
pop
mov
push
aaa
pop
mov
inc
pop
mov
or
dec
mov
push
scas
lret
lods
mov
aaa
inc
pop
push
pop
in
sub
or
ja
dec
dec
fistpl
push
mov
movsb
gs
mov
sbb
insl
xor
je
addl
xchg
xchg
adc
and
dec
ret
mov
scas
roll
popf
inc
adc
cmp
es
pop
jl
int3
int
in
mov
mov
aaa
sub
gs
cld
outsl
leave
test
popl
adc
or
loop
cmp
insl
daa
in
stc
std
xor
bnd
adc
jl
ds
adc
jno
shlb
adc
xlat
enter
mov
xorl
iret
mov
jmp
fiadds
rcrb
xchg
ds
sub
push
rorl
ljmp
cmp
aas
dec
ja
ja
rcr
sub
fwait
outsb
jl
add
pusha
cwtl
mov
xchg
bound
sbb
xchg
mov
fcoms
cld
dec
adc
outsb
and
shll
scas
sub
out
or
mov
or
sahf
pop
aad
cmp
jl
jno
insl
add
das
shl
aaa
mov
aas
jp
out
jmp
inc
ret
outsb
adc
sbb
pop
jl
xchg
dec
and
insb
adc
xchg
testb
shlb
call
fmull
xor
jg
inc
xchg
adcl
add
inc
pop
pop
rcrl
pop
xor
jp
xor
or
jne
push
push
xchg
or
inc
cmpsl
and
js
dec
sbb
cmpsb
insb
out
cmpsb
insb
add
pop
and
icebp
arpl
pop
adc
or
mov
cmc
jbe
dec
adc
push
ret
sbb
sub
out
xchg
imul
fstps
mov
adc
mov
xchg
insl
pop
sbb
push
or
jo
hlt
jo
pop
loope
xlat
or
popa
scas
stc
push
mov
insb
pop
push
inc
sbb
jmp
pop
cs
pusha
stos
sbb
mov
jo
sbb
in
pop
push
push
ffree
sahf
shl
int3
jo
mov
aad
clc
mov
scas
fstp
scas
cmp
mov
arpl
dec
mov
jecxz
and
shlb
pop
push
xor
lods
add
mov
insl
inc
mov
push
inc
test
cmpsl
aaa
xor
mov
push
icebp
mov
xchg
sysret
sahf
clc
out
les
push
ljmp
xorb
aam
mov
hlt
lods
in
sbb
testl
pusha
scas
dec
das
xchg
ret
sar
jecxz
inc
mov
and
jb
xorl
cmp
mov
cmp
shl
push
add
sbb
push
and
jecxz
andl
mov
mov
inc
test
out
rcll
mov
bound
fistpll
ljmp
mov
sarb
push
mov
mov
out
pop
pusha
insl
mov
scas
mov
es
es
jns
bound
lds
mov
outsl
sbb
roll
out
lock
sbb
adc
xlat
add
rclb
cs
jl
push
add
das
out
cmp
mov
stc
iret
js
adc
mov
adc
mov
cmpsl
insb
fwait
inc
orb
add
fldl2e
ljmp
cmp
sbb
jmp
and
pop
loopne
incl
loop
or
ret
dec
mov
or
xchg
lcall
jnp
sub
addr16
add
mov
popa
mov
inc
daa
std
jbe
jo
in
mov
adc
clc
mov
dec
jnp
cmpsb
cs
sub
mov
sub
in
aaa
movsl
addr16
fs
pop
repnz
mov
cmp
fisubl
roll
cmp
pop
lahf
mov
imul
in
and
sub
mov
cli
cld
push
ja
lds
in
es
pop
inc
xchg
hlt
es
fcomip
mov
scas
mov
push
adc
jbe
and
hlt
mov
pop
xor
xor
push
fnsave
loop
pop
cmp
cmp
ror
dec
adc
aas
mov
pusha
fbld
sub
sahf
pop
adc
mov
sub
jno
or
xor
cmp
jbe
jg
jb
dec
mov
add
add
and
jae
add
adc
xchg
scas
sbb
in
les
inc
dec
add
sub
out
add
or
sub
pushf
push
push
mov
push
mov
mov
cmc
cmc
or
add
test
sahf
and
cmp
adc
mov
push
jo
jno
sbb
push
clc
sub
or
xor
jecxz
rorb
mov
pop
je
das
bound
outsl
aam
popa
sbb
into
push
lret
inc
das
pop
push
xchg
mov
inc
add
aaa
sti
cmp
jbe
inc
mov
cmpsb
imul
out
idivb
or
sbb
jmp
sti
push
lret
push
jbe
inc
mov
cmpsb
imul
out
idivb
or
sbb
jmp
mov
mov
ja
inc
mov
cmpsl
mov
jnp
dec
xchg
pop
out
idivb
sub
sbb
jmp
sti
push
lret
push
fisubl
jbe
or
fwait
pop
xchg
dec
shrl
xchg
sub
mov
cs
leave
aam
in
hlt
stc
xor
sti
not
mov
pop
imul
sub
leave
aam
in
hlt
stc
test
mov
push
dec
push
cmp
jns
or
and
xor
int
cld
jmp
mov
pop
loope
pop
cmp
jnp
js
arpl
lods
leave
mov
test
dec
xchg
jp
jae
mov
in
cmp
cld
or
adc
sti
inc
lahf
sub
or
shll
hlt
push
jl
cmc
and
lret
push
pop
push
mov
inc
add
dec
das
jmp
stos
cmpsb
pop
test
call
mov
fadd
pop
sub
mov
inc
iret
xchg
push
xor
sti
arpl
scas
xor
xchg
sub
imul
jmp
mov
push
gs
test
fcmovnbe
and
sub
xor
mov
cld
xchg
adc
fdivrl
sbb
js
sbb
fisubs
int
in
hlt
stc
xchg
mov
pop
dec
dec
pop
jl
insl
jns
or
sub
test
mov
addl
mov
inc
sub
sub
add
jno
push
sub
stos
leave
mov
mov
test
movsb
fsubp
mov
or
jb
dec
push
imul
mov
inc
dec
push
pop
imul
sub
leave
aam
in
hlt
stc
test
mov
inc
dec
push
pop
imul
sub
leave
sti
nop
pop
pop
xchg
cmpsb
xlat
jno
gs
adc
mov
imul
jne
mov
jge
mov
mov
and
lret
movsb
in
stc
iret
or
rep
outsb
cmp
cmpsl
cmp
loop
mov
push
jecxz
cld
cli
push
fldt
fmulp
and
xchg
or
popf
push
dec
cmpsb
int
or
bound
into
ds
and
push
bswap
fildll
mov
clc
pop
stos
xchg
inc
cmp
pop
pusha
leave
nop
clc
jmp
xor
es
pop
in
lret
aaa
xor
popf
dec
out
push
sbb
cltd
jbe
cld
sbb
jge
fadds
or
xchg
nop
mov
dec
test
leave
dec
sbb
repz
cli
add
test
inc
loop
dec
push
mov
jg
aam
xor
cmc
pop
jp
imul
ja
mov
jo
adc
lods
xor
daa
lahf
jmp
cs
xchg
xchg
fwait
cmpsb
cwtl
xchg
into
xchg
gs
cmc
movsb
ret
pop
sub
clc
mov
cmc
mov
loopne
push
outsb
aam
jnp
jle
sahf
stos
mov
xchg
cmp
dec
mov
cmpsb
dec
xchg
aad
std
mov
mov
push
inc
and
lock
loopne
int3
inc
test
cld
jecxz
push
into
jecxz
adc
mov
fcmovnb
std
or
enter
lret
sarl
inc
dec
pop
movsl
sbb
stos
push
clc
imul
sub
mov
mov
repz
push
add
adc
sub
add
xchg
push
pop
scas
xchg
clc
cli
inc
pop
and
pop
in
and
dec
dec
movq
jle
out
xchg
mov
fcoms
pop
roll
popa
in
gs
jo
adc
push
push
or
iret
push
mov
fadds
adc
shrl
jecxz
lods
clc
jbe
push
mov
push
add
jge
cmpsb
jge
push
inc
repnz
jbe
lcall
and
lahf
mov
sub
ss
loopne
pop
xchg
orl
adc
cli
insb
jge
adc
push
adc
outsb
mov
adc
in
adcl
dec
cld
lahf
and
scas
cmc
sub
jno
aad
pop
inc
xchg
xor
mov
lods
push
stc
xor
test
filds
push
rcrl
pushf
jae
mov
repnz
les
dec
cmp
bound
adc
mov
lock
push
push
repz
orb
and
in
notb
movsb
sti
insb
push
mov
mov
lods
sub
add
push
sub
adc
lods
or
mov
lea
add
xor
cmpsl
dec
cmc
pop
insb
adc
insl
and
fstpl
je
mov
mov
ret
popf
xor
and
push
in
and
into
lds
dec
sti
cwtl
mov
mov
je
xchg
inc
mov
int3
shl
stos
inc
aad
or
inc
movd
add
test
lock
lock
subb
addl
mov
pop
icebp
add
sbb
addr16
add
fnsave
fnstsw
pop
daa
and
dec
cltd
hlt
insb
addr16
js
es
ljmp
dec
mov
inc
add
imul
bound
cwtl
fimuls
adc
sbb
in
scas
stos
stos
sbb
stos
aad
push
jl
ror
push
dec
inc
fsubrs
insl
loope
js
rcr
leave
push
aaa
ret
mov
in
popa
cmp
jge
in
pop
jecxz
mov
jg
sub
push
popf
dec
loop
ss
xchg
mov
mov
push
sahf
xchg
stos
pop
and
pop
dec
popf
rcrb
cmpsb
das
test
outsl
sbb
call
int
fmul
inc
push
dec
push
push
inc
xor
sub
xor
fcoms
shll
push
shr
loop
cltd
sti
fcoms
aad
lods
add
sbb
shll
sti
rclb
xchg
repnz
fwait
inc
lahf
fisttpl
dec
fmull
clc
jbe
addl
mov
lret
sub
jnp
push
es
loopne
ljmp
aas
ja
aad
push
sbb
mov
xchg
cmp
push
inc
dec
jge
scas
jno
je
and
loope
xor
out
add
xchg
xchg
xchg
sub
push
repz
aam
ret
lahf
je
icebp
fdivrs
lret
push
dec
call
sub
aam
stc
add
or
xchg
push
add
push
cli
sub
lods
xchg
mov
dec
dec
fs
push
sbb
dec
pop
mov
addr16
xchg
aas
or
aad
pop
push
sbb
cmp
adc
in
cmp
lret
sti
xchg
cmpsb
sbb
jns
mov
cs
pop
and
test
mov
push
addr16
mov
push
cmovnp
cmp
insb
dec
jmp
dec
inc
scas
push
cli
and
push
loope
fcomps
add
out
les
xchg
lock
imul
loope
subb
xor
jg
cli
push
and
ret
idivl
mov
nop/reserved
xor
js
lahf
xchg
cmc
ljmp
jmp
jg
loope
psubusw
sbb
pop
jns
xlat
mov
sbb
add
push
push
lahf
icebp
repnz
imul
jmp
outsl
pusha
jl
ja
push
dec
push
add
mov
cmp
imul
je
sub
sbb
lret
fs
movsb
cmp
push
jo
cmpsb
mov
repnz
adcl
push
jge
inc
cmp
iret
mov
loope
pop
push
imul
pop
xchg
les
mov
sub
jae
enter
mov
cmp
mov
and
test
call
negb
xor
jmp
cld
fsubs
ljmp
js
loop,pt
push
gs
cwtl
mov
dec
add
push
mov
pop
popf
stc
stos
add
jle
jno
ljmp
ss
add
ret
inc
aaa
xchg
addr16
arpl
aam
cmp
pop
lcall
out
jg
subb
shll
mov
insl
mov
pop
sub
inc
push
sbb
mov
pop
dec
insl
int3
cld
add
fldenv
push
popa
hlt
lea
adc
jp
adc
or
gs
les
scas
cli
ret
xchg
jnp
loopne
pop
cmp
mov
call
sbb
in
ljmp
loop
mov
outsl
cmpl
in
xchg
lods
iret
cli
test
arpl
sti
and
pop
dec
push
movsb
pop
sti
scas
loope
pop
add
jnp
loope
inc
sbb
and
sub
cli
sub
mov
pusha
clc
ds
aaa
rclb
or
jne
out
repz
hlt
dec
notl
gs
cmp
mov
lods
hlt
hlt
lret
sbb
xchg
jae
sbb
push
movsl
int3
pop
mov
and
fldenv
sahf
push
fiaddl
aaa
mov
sub
xchg
pop
push
xorl
enter
jl
icebp
imul
aam
mov
lcall
pop
outsl
push
xchg
cmpsl
outsb
out
cmc
sbb
lea
lcall
cmpsb
or
pop
mov
jl
in
fnsave
mov
aad
mov
inc
out
lds
and
out
test
jg
mull
fdiv
jmp
test
cmp
xchg
shlb
lea
jl
sbb
dec
or
mov
ljmp
lret
xchg
in
jb
inc
repz
clc
push
repz
shlb
loope
cmp
jbe
ss
scas
fnstcw
in
arpl
jle
mov
sbb
push
addr16
cmp
dec
push
call
sbb
fists
add
push
inc
pop
pop
sub
pusha
jl
daa
inc
inc
lret
or
sub
in
into
pusha
jl
sbb
jle
movl
jecxz
fs
fisubs
jmp
lods
dec
mul
add
push
push
inc
popf
or
mov
xchg
ret
pop
inc
outsb
sub
int
mov
repz
cmp
leave
jno
dec
inc
push
shrl
mov
loopne
push
jge
push
int
mov
fsubs
aad
in
adc
push
aam
or
add
mov
aaa
cmpsl
lods
xchg
or
mov
int3
pop
xor
xchg
aaa
bound
or
mov
mov
insl
xchg
ss
inc
add
and
push
fsubrl
test
in
loope
pusha
cmc
lea
mov
mov
dec
loop
sub
jbe
flds
ljmp
inc
add
insb
add
jo
stos
jmp
xchg
in
adc
icebp
pop
lods
movsb
lcall
sub
sub
notb
mov
cmp
inc
das
sub
mov
mov
mov
fstpt
sbb
and
notb
ds
clc
jp
bound
js
inc
outsl
push
cs
in
scas
jmp
push
sub
cli
mov
lcall
jo
popf
ffreep
push
mov
adcb
jl
rclb
dec
std
sbb
sub
ljmp
ss
aam
xor
xchg
xor
fsubrl
lock
xorl
xchg
les
sarb
jne
cmp
or
call
dec
mov
sub
popf
sbb
add
cltd
shlb
mov
loopne
insb
dec
int
sbb
dec
es
fsubrs
sub
mov
es
out
adc
mov
pop
cmp
inc
xor
pop
or
jnp
sub
jae
aad
popa
out
movsl
fsubp
mov
xor
insb
dec
and
iret
and
out
shl
and
sbb
or
push
cmove
sar
mov
sbb
pop
mov
xchg
ljmp
pop
pop
outsl
les
mov
and
xchg
push
xchg
inc
pop
mov
int
pop
or
lcall
adc
gs
cwtl
jmp
call
inc
jg
stos
lock
fnsave
cmpsb
push
xchg
out
insb
rcrl
push
lods
sbb
psrlw
and
notl
repnz
test
inc
add
cli
cwtl
lcall
in
notl
push
push
notl
mov
in
ret
insb
push
jo
std
push
xor
fildl
push
loope
shl
push
cmpsl
popa
pop
pop
cltd
das
dec
mov
cvtpi2ps
cmpsl
dec
pusha
push
or
repz
mov
rclb
imul
sbb
xor
ret
pop
les
mov
popf
push
adc
jne
cltd
nop
ds
daa
adc
cmp
push
ret
dec
sti
pushf
shll
test
popa
mov
cmp
sub
fadds
xchg
mov
lret
dec
and
cmp
fistl
add
das
in
mov
or
aas
aam
popf
mov
mov
xor
and
dec
daa
pop
fimuls
mov
dec
fadds
cmp
sub
sbb
inc
dec
adc
outsb
cmp
adc
in
addr16
outsb
sub
ljmp
cltd
and
les
lret
sahf
popf
test
aad
dec
fdivs
sahf
das
lcall
pop
mov
fs
xorl
sbb
sub
mov
push
gs
pop
enter
stos
push
add
les
jl
adc
es
fiaddl
mov
xlat
dec
leave
int
and
rcl
jne
sub
ja
add
and
scas
pop
cmpb
gs
fnstcw
xor
jae
movsb
aaa
pop
xchg
mov
mov
into
sub
push
push
xor
mov
jmp
mov
fiadds
mov
mov
nop
mov
lcall
outsl
push
mov
dec
js
scas
je
dec
rorb
mov
xchg
div
enter
and
loope
add
xor
jno
adcb
mov
sbb
mov
out
mov
fstpt
push
add
xchg
shrl
dec
xchg
popf
arpl
cmp
mov
and
and
cli
mov
fadds
inc
xlat
dec
adc
cmc
pop
mov
sti
inc
fs
fwait
push
orb
adc
adc
pop
nop
push
inc
pop
inc
sbb
rcl
push
xor
mov
stos
mov
xlat
negb
jnp
shl
sub
leave
pop
dec
test
arpl
mov
test
jo
push
jno
cmc
jns
sub
xchg
push
andl
pop
mov
cmp
ja
cmc
in
xor
lret
ljmp
out
jg
adc
push
mov
loope
cwtl
lcall
add
fiaddl
lods
scas
jp
lods
pop
push
lret
jecxz
scas
mov
pop
daa
repnz
mov
xor
arpl
and
cmp
je
dec
add
dec
sbb
imul
xor
mov
mov
test
jns
ja
cwtl
xchg
push
xchg
stos
lcall
lock
insb
test
in
pop
xor
lock
rcrl
or
ds
imul
fdivrl
daa
fbstp
int3
adc
decl
fwait
aas
lods
jae
dec
jne
outsl
loope
push
inc
pusha
call
outsl
bound
pop
rcrb
addr16
push
adc
cltd
std
xchg
popf
mov
xor
xorl
faddl
and
insl
mov
dec
push
add
mov
enter
std
roll
ss
adc
nop
mov
fldcw
push
sbb
mov
int3
pop
out
adc
dec
dec
or
mov
out
fwait
mov
fstpt
sbb
repnz
xchg
inc
sub
out
dec
into
pushl
nop
lock
mov
ret
mov
movsl
fs
or
dec
pop
addr16
out
dec
jg
jmp
jns
sbb
fildll
sub
and
dec
dec
jnp
out
adc
scas
repz
adc
push
cmp
mov
scas
mov
xor
pop
dec
nop
and
das
push
jle
jne
push
mov
inc
cmp
negl
shlb
je
inc
sbb
scas
jb
dec
jp
cmpsl
lea
out
mov
rorl
aas
xchg
pop
int
outsl
loop
push
mov
xchg
test
test
inc
mov
inc
mov
dec
aaa
inc
fst
sbb
aaa
push
pushf
out
test
fdivl
sti
mov
test
cmp
mov
setns
sbb
cli
push
shr
stos
mov
jae
mov
stc
inc
or
outsl
stos
inc
xchg
mov
dec
inc
pushf
mov
dec
mov
cmp
dec
push
lahf
or
cmpsb
cmovp
cmpsb
loopne
pop
ljmp
pop
mov
adc
loopne
jo
push
xor
test
mov
fucomi
fisttpll
lods
aas
daa
cmpsl
jle
inc
pusha
cmp
data16
gs
mov
xchg
jecxz
lods
dec
addr16
pop
fwait
cli
jl
jnp
out
dec
jg
cmp
xchg
fstpl
mulb
jg
mov
dec
ss
mov
popf
xor
pushf
lcall
es
test
vfrczsd
enter
ret
test
imul
add
pop
mov
or
mov
sbb
xchg
add
ja
int
sahf
je
xlat
and
movsb
sub
aaa
mov
in
dec
jae
add
aad
adc
lcall
inc
ffree
out
cmp
and
mov
cmc
lret
jne
and
jg
mov
jge
cmp
and
pop
fxam
push
mov
dec
out
cmpb
aas
pop
roll
daa
sbb
mov
stc
loopne
das
inc
xchg
dec
and
outsl
dec
push
cmpsl
push
sbb
jnp
je
sarb
lcall
les
and
lahf
pop
adc
fsubrs
and
jge
inc
xor
lds
push
cli
lods
ds
bound
lock
jae
fildl
test
sbb
movsl
in
or
pop
dec
test
add
cmp
cmpsb
shl
xchg
inc
mov
lcall
call
xchg
xchg
lods
xor
adc
mov
xchg
jns
xor
sub
test
psllw
mov
sbbb
xchg
xor
sti
popa
and
test
inc
shll
jo
iret
sub
add
push
outsl
mov
or
mov
jmp
and
sbb
jg
loope
push
sub
ds
add
movsb
cmc
and
lods
movsl
clc
out
sarb
fists
stc
cwtl
ret
ret
push
sbb
mov
lods
xlat
stos
mov
aam
or
mov
sti
and
repnz
mov
pop
mov
adc
jne
mov
mov
nop
jnp
jp
test
les
push
stos
xlat
jo
out
dec
test
xlat
sbb
subl
sbb
add
test
addr16
add
or
dec
ljmp
aad
mov
shrl
popf
and
cltd
add
pop
out
cmpsb
in
lret
xor
xchg
adc
inc
cmp
dec
and
movsl
scas
sub
gs
enter
sbb
in
dec
ja
mov
xor
and
xor
sahf
inc
add
lret
popa
pop
out
jl
adc
or
pushf
mov
cld
xchg
jp
xor
push
and
test
lret
outsb
nop
stc
nop
jp
jmp
mov
adc
jle
clc
dec
in
sti
xchg
or
push
cltd
push
les
clc
into
sbb
xor
out
dec
and
sarb
mov
mov
sbb
testb
subl
mov
add
pop
or
cwtl
dec
aas
add
cwtl
sbb
lret
push
arpl
and
movsl
insl
inc
or
jp
push
pusha
xor
push
call
push
add
int3
gs
jb
mov
xchg
insl
sub
xchg
mul
jo
fwait
push
adc
push
mov
sub
xchg
shlb
shll
or
jne
shld
dec
lret
roll
and
rcl
insl
push
in
add
or
out
popf
push
sub
ret
add
stos
subl
sub
ds
stc
outsl
pop
scas
or
mov
fwait
lcall
cmp
pop
mov
ljmp
ret
data16
bound
shll
push
xchg
inc
lret
fisubs
xor
repnz
popf
fisubrl
xchg
fcomp
inc
adc
mov
in
or
push
mov
das
rclb
loopne
jge
sbb
dec
inc
mov
dec
movsl
xchg
or
xor
ss
nop
movsl
ret
jno
ss
mov
lds
call
push
in
cli
cmc
and
mov
in
aas
mov
shr
mov
xchg
xorl
into
jl
push
pop
mov
jnp
sbb
xchg
cmpl
xlat
lods
pushf
push
and
icebp
cmp
sbb
lahf
cmpsl
adc
popa
sbb
sarb
cmp
outsb
scas
inc
stos
jne
cmp
push
in
stc
scas
jmp
mov
lods
mov
mov
fimull
fs
pop
pop
aas
jnp
push
pop
cwtl
sti
lahf
addl
scas
dec
lds
cs
into
mov
sahf
xor
cmp
addr16
mov
mov
cld
test
jbe
sarl
pop
and
xchg
jmp
loop
sub
pusha
push
mov
mov
add
inc
mov
cmp
adc
movsl
stc
push
pop
jge
mov
cmpsl
dec
scas
popf
inc
pop
fstl
pop
in
mov
bound
or
mov
popa
cmpsb
pop
inc
add
cmp
adc
call
push
mov
lret
or
daa
inc
loope
xchg
mov
lods
xlat
test
mov
test
jne
arpl
ret
aaa
loopne
jge
daa
dec
sbb
out
test
mov
dec
jmp
mov
and
xchg
mov
sub
cs
and
inc
mov
xchg
popa
add
jo
push
cli
adc
jns,pt
xor
jo
jns
test
je
sub
adc
fcomps
data16
cli
sub
add
mov
add
dec
sbb
sbb
pusha
ficoms
adc
rcll
cwtl
mov
adc
daa
mov
xchg
fwait
inc
pop
and
loop
out
sbb
add
sbb
cmp
cmp
lahf
mov
pop
mov
push
in
lods
out
xor
inc
adc
addl
test
mov
inc
dec
push
pop
imul
sub
leave
aam
in
hlt
stc
test
mov
inc
dec
push
pop
imul
sub
leave
aam
in
hlt
stc
test
mov
inc
leave
push
pop
imul
sub
cmp
leave
fxam
jmp
xchg
cltd
and
xor
mov
imul
lret
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
inc
ljmp
sub
mov
lcall
bound
sub
jp
or
sbb
ljmp
xchg
stos
cmpb
push
jp
dec
bound
sub
cmp
or
sbb
ljmp
xchg
stos
cmpb
push
inc
adc
pop
pop
jno
imul
dec
sbb
scas
mov
sbb
dec
mov
das
jge
xor
subl
and
cmp
mov
pop
out
ljmp
push
inc
sub
cmp
or
cmp
adc
sub
or
adc
push
into
xchg
stos
scas
stos
push
arpl
outsl
jae
mov
and
sub
das
ja
push
mov
stos
mov
jne
int3
cmp
aaa
jnp
mov
imul
fisttpll
outsl
ret
lret
scas
jb
dec
mov
lods
xchg
xchg
imul
out
pop
data16
into
xor
and
ljmp
xchg
stos
cmpb
push
jp
dec
bound
sub
cmp
or
pop
cmpsb
xchg
pushf
rol
out
cmc
out
ljmp
push
xor
inc
dec
inc
pop
mov
lea
stos
test
ficompl
or
ss
inc
jno
bound
je
mov
ret
movb
push
push
jp
dec
bound
sub
cmp
or
sbb
ljmp
xchg
stos
cmpb
push
jp
dec
bound
sub
cmp
or
sbb
ljmp
loope
mov
jae
mov
adc
loop
and
movsb
test
shlb
pop
jmp
mov
cmp
fwait
lds
stos
jno
cwtl
mov
div
mov
cmp
repz
rorl
test
push
xor
mov
rorb
sarb
fstl
dec
and
cmp
add
inc
fsubrl
xor
xchg
xor
mov
cmp
test
xchg
add
inc
add
pop
cltd
add
dec
dec
repnz
dec
mov
int3
inc
subl
xchg
push
pusha
mov
unpcklps
imul
fisttpl
inc
xor
aam
dec
js
aad
adc
das
out
mov
or
in
mov
mov
mov
xor
xor
lahf
sbb
sub
outsb
sub
movsl
sbb
sbb
pop
adc
out
jb
pop
pop
dec
push
mov
cmc
ljmp
lret
xchg
data16
dec
insl
cmp
add
outsb
inc
or
mov
fwait
sub
les
clc
jae
mov
addr16
pop
sub
xchg
jmp
ja
add
xchg
aaa
in
repz
and
decb
js
push
mov
mov
cmpsl
mov
cmp
push
testl
mov
aaa
jae
mov
mov
pop
andb
imul
lret
add
stc
cmp
sahf
out
jle
rorb
out
or
fs
pop
test
stos
push
mov
test
fwait
aad
jle
cltd
push
loop
fs
iret
xlat
cmp
lret
or
or
mov
jnp
divl
mov
dec
mov
dec
mov
mov
testb
adc
push
xchg
mov
in
sbb
jle
dec
mov
pushf
sti
js
cld
lock
negb
add
les
jle
sti
push
andl
sub
das
scas
mov
push
outsl
stos
cmp
pop
cmp
dec
pushf
cli
mov
out
fadd
daa
fs
add
and
cmpsb
push
jmp
ret
cmp
daa
pop
xchg
xor
push
popf
stc
adc
fbstp
cmp
add
cmpsb
add
or
adc
xchg
jg
in
mov
mov
cmp
mov
xlat
icebp
cmpsb
cmpsl
pop
fsubs
call
sbb
jno
jb
mov
scas
dec
add
mov
inc
imul
jg
lcall
bound
scas
inc
imul
dec
gs
xor
das
mov
loope
sub
enter
sub
insb
jle
out
xchg
dec
pop
cmpsl
vunpcklps
jecxz
and
shll
adc
xchg
stos
stc
or
push
add
lret
or
lods
mov
dec
cld
cmp
push
pop
sbbb
fdivp
hlt
sti
jae
mov
sub
mov
xchg
lret
cmp
push
pusha
jg
mov
xchg
xchg
mov
in
pusha
loopne
mov
and
add
mov
in
mov
popf
pop
pop
inc
adc
test
sub
inc
addr16
das
stos
sbb
sahf
movl
mov
pop
inc
cmp
and
xchg
pop
dec
out
sbb
push
push
sbb
fistps
mov
lock
sbb
push
iret
loop
xchg
push
dec
sbb
xchg
test
fdivrs
sbb
shl
dec
and
mov
jnp
movsl
shl
xor
xor
or
insb
jge
stos
cmp
clc
icebp
jno
jo
ret
cmp
lcall
add
and
add
jge
fnstcw
movsl
ljmp
mov
ljmp
jnp
insb
cmpsl
mull
call
xchg
psubd
add
pop
sub
push
xchg
xchg
cmc
add
test
sti
sub
sub
add
push
mov
lret
push
pop
repnz
pop
shlb
cmp
ja
fcmovnu
lret
and
repnz
popa
fwait
sub
mov
ja
adc
cli
xchg
jns
jo
pusha
inc
sub
pop
dec
test
sub
xor
dec
pop
mov
sub
out
mov
mov
cltd
adc
lock
inc
pop
adc
dec
lcall
sar
jne
mov
stos
xor
arpl
nop
fwait
outsb
adc
rol
push
add
mov
shl
xchg
cwtl
add
push
shlb
jg
imul
jns
fsubrs
out
sbb
jl
repz
subb
int3
popf
push
mov
sahf
loop
mov
xor
xor
fisubrs
jo
or
call
dec
push
rorl
xchg
das
xor
dec
sbb
and
aas
xor
xlat
cld
and
jmp
xlat
jp
xor
in
nop
push
xlat
arpl
or
pop
xor
pop
cli
jnp
xchg
push
push
and
out
xlat
pusha
imul
sbb
push
add
adc
add
push
cmc
outsl
fmuls
and
pop
dec
out
jge
and
sbb
inc
cmp
cmp
lods
cmpsl
push
adc
pop
das
pop
shlb
imul
cltd
out
dec
mov
pop
aam
xor
mov
dec
dec
dec
and
je
rorb
jl
adc
mov
test
inc
test
sar
mov
es
imul
int
inc
mov
in
mov
push
adc
mov
das
add
cli
mov
shlb
xor
push
xchg
int
pop
imul
push
lea
sub
xchg
add
es
ret
popf
ja
inc
sti
dec
ds
int3
inc
cmp
dec
dec
push
mov
stos
les
movsl
ja
jb
sub
mov
pop
cs
sub
add
repnz
mov
dec
xor
mov
or
or
dec
pop
push
fsts
dec
scas
push
xor
pop
and
in
aad
mov
in
cmp
data16
rcl
sub
dec
push
or
xchg
cmpsl
js
loop
push
jb
inc
mov
rcr
in
in
mov
das
mov
pop
fwait
pop
mov
fnstcw
sti
mov
jb
mov
lret
lcall
push
cwtl
sub
adc
jmp
mov
inc
out
pop
xor
repz
mov
decl
out
das
push
and
mov
test
inc
push
jecxz
sti
aaa
push
call
jne
ds
stos
jnp
mov
pop
in
mov
popf
mov
into
pop
pop
push
icebp
repnz
into
loopne
insb
shrb
cmp
cli
icebp
daa
addr16
mov
xor
call
fwait
push
fwait
arpl
xchg
xor
mov
push
cmp
int3
dec
sahf
lock
xchg
aas
rcll
push
cmp
cs
inc
gs
sub
mov
pop
pop
fwait
in
mov
sub
adc
stos
popa
lahf
outsl
shlb
int
lods
add
jmp
popa
mov
sub
into
mov
scas
in
pop
je
popa
push
ret
pop
inc
mov
imul
adc
push
mov
pusha
jecxz
jl
mov
add
out
jo
clc
mov
into
adc
and
inc
jmp
add
or
jl
cmp
mov
ja
lods
lods
pusha
mov
in
rclb
sbb
push
xor
out
cmp
xor
jmp
subl
pop
pushf
andl
add
inc
lret
movl
sti
mov
aam
inc
sti
stc
or
sahf
stos
add
jle
jae
jo
in
movsb
xor
push
push
xchg
in
bound
pop
push
push
pop
dec
mov
adc
jle
call
nop
enter
xorb
insl
dec
jl
mov
mov
dec
cs
pop
xchg
sahf
cs
xlat
or
sbbl
adc
jno
in
lahf
inc
addr16
mov
dec
jmp
mov
mull
jb
add
aaa
sahf
dec
es
lahf
inc
mov
jle
cmpsl
pop
lock
int
xchg
fldt
and
loope
mov
testw
add
imul
daa
cli
mov
mov
popf
ljmp
push
mov
xchg
nop
xchg
cmp
jbe
aas
sub
test
into
mov
into
test
or
lahf
jge
aas
cmp
pop
stc
ss
mov
mov
mov
mov
mov
inc
in
sub
mov
out
inc
mov
add
loop
mov
sbb
in
pop
mov
fyl2x
sbb
mov
repz
sbb
jecxz
stc
mov
cmp
sub
adc
mov
in
or
loop
and
xchg
push
pop
in
mov
test
es
orl
mov
test
fisubs
cmp
push
push
and
dec
or
dec
ret
outsb
sbb
inc
jge
cmc
mov
xchg
js
xor
mov
jg
std
loope
mov
or
and
in
push
scas
xchg
mov
repz
xorl
jb
ret
je
pop
shlb
addr16
sarb
jg
cs
fadds
loope
and
inc
test
push
xchg
imul
jae
lahf
int3
std
ljmp
loope
hlt
push
ss
lret
sub
clc
or
clc
test
ja
aam
pop
ljmp
adc
push
mov
mov
push
xchg
rcrb
gs
notb
or
jl
adc
and
int
push
push
mov
cwtl
mov
cmpsl
add
mov
popa
lret
test
sub
mov
xchg
hlt
lds
shrl
lret
sub
nop
inc
fwait
popa
add
xor
out
mov
and
sbb
adc
jmp
fwait
adc
pop
mov
push
mov
mov
mov
ret
xlat
negl
pop
fdivl
dec
mov
int3
mov
iret
pop
int
or
imul
fsubrs
sbb
lds
xor
pushf
sbb
or
hlt
mov
js
pop
cwtl
in
nop
jmp
int
cli
mov
sub
int
mov
rcrb
push
push
add
xor
aam
aad
sub
xor
pop
push
lea
cltd
sahf
mov
iret
mov
ja
clc
stos
and
dec
pop
pop
sub
js
jmp
pop
cli
cmp
and
gs
sarb
pop
loopne
mov
xchg
nop
xchg
inc
push
adc
and
cwtl
imul
fimull
jb
cli
jns
insb
jl
sub
mov
inc
addr16
pop
iret
mov
mov
pop
pop
or
mov
out
sub
dec
mov
mov
adc
pop
pop
pop
into
pop
shl
jo
and
std
in
repnz
inc
sub
jne
push
jno
push
clc
insl
mov
js
icebp
cmpsl
mov
insl
add
mov
mov
fdivl
aaa
lahf
into
out
aaa
scas
sbb
bound
mov
push
xor
fisubrl
add
xchg
out
sbb
test
mov
pop
xchg
movsb
in
mov
dec
inc
es
sub
sbb
loopne
add
int3
xor
roll
mov
cmp
mov
aad
jo
test
iret
jg
mov
push
arpl
icebp
test
enter
inc
negb
mov
bound
mov
call
mov
xor
test
push
out
call
cmpsl
jns
das
lahf
repnz
add
mov
loop
xchg
adc
adc
dec
add
setp
cmp
jns
jecxz
das
shlb
inc
push
or
inc
mov
xor
fadds
gs
add
sub
adc
add
add
je
movsl
mov
sbb
shll
test
sub
mov
push
call
loopne
dec
cld
xchg
mull
scas
inc
pop
dec
data16
out
jb
xchg
in
dec
xchg
mov
leave
imul
gs
shl
call
xor
test
dec
xlat
mov
mov
sub
or
lea
fcomip
js,pt
xchg
in
push
add
aas
movb
jo
push
hlt
imul
inc
into
out
pop
leave
push
cmpsb
mov
mov
movsl
push
aam
movsl
mov
mov
xor
sub
dec
cwtl
mov
add
lret
popf
fidivrl
out
sbb
aaa
aas
les
stos
or
addr16
xchg
lret
inc
scas
testl
scas
outsb
aaa
imul
aam
sub
aas
js
and
mov
jo
iret
pop
into
lcall
scas
inc
outsl
xchg
dec
fcomps
add
lret
or
dec
dec
push
pop
inc
pop
xorb
pop
repz
bound
mov
hlt
inc
mov
in
add
outsl
mov
xor
lret
push
inc
cmp
cli
sub
mov
subb
hlt
cmpsb
insb
jp
add
cmp
mov
xchg
out
inc
pop
pop
cs
cmp
cmpsl
ljmp
iret
push
mov
lret
punpcklbw
div
pop
fwait
sbb
clc
mov
cwtl
fidivrs
fistl
addl
cli
sbb
mov
adc
sbb
rcl
jno
ss
jle
scas
or
cli
aas
filds
mov
xlat
loop
insl
push
dec
filds
push
sub
xor
js
pushf
popa
mov
pop
insb
aam
cli
push
jl
dec
add
add
daa
enter
pop
test
sqrtps
outsb
push
lcall
lods
jo
cli
loop
adc
mov
sbb
pop
sbb
mov
or
aam
mov
daa
mov
add
sbbb
mov
add
mov
jno
scas
xchg
jle
ss
jno
dec
nop
enter
xor
enter
inc
jge
in
adc
or
mov
js
lods
jno
mov
mov
xchg
cld
icebp
and
xchg
jno
mov
gs
xor
cs
xchg
mov
jo
nop
jmp
pop
iret
es
stos
jo
cmpsb
mov
out
cmp
xchg
dec
repz
repz
xor
fsubl
adc
adc
in
lret
hlt
lret
inc
jmp
aas
mov
pop
or
cmpsl
rolb
mov
fs
and
cld
jge
lods
sbb
push
and
mov
pop
lcall
mov
je
fs
sbb
lahf
dec
mov
arpl
pop
add
and
dec
pop
and
pop
fnstcw
ret
xchg
dec
in
xchg
jecxz
out
test
add
idivb
jnp
pop
fdivrl
js
xchg
sbb
in
add
popa
push
stc
cmp
fwait
push
push
cmp
xchg
fsub
pusha
test
jmp
jno
sub
jnp
lahf
pop
cmp
nop
dec
sbb
into
in
mov
sub
pop
and
in
dec
lahf
xor
mov
inc
hlt
adc
icebp
mov
jbe
mov
insl
scas
push
mov
leave
scas
lods
jbe
add
pop
js
and
icebp
loope
dec
scas
fcmovnu
or
add
enter
arpl
pop
cld
test
enter
push
and
test
and
dec
dec
cmp
or
mov
mov
cmp
sbb
test
out
mov
imul
lcall
and
shl
xchg
inc
inc
sarl
jl
push
enter
cmp
push
subl
push
jae
mov
clc
imul
jl
push
jp
daa
in
in
sbb
push
movsl
dec
mov
and
sbb
jb
ss
and
inc
sahf
pusha
xchg
addr16
dec
push
jmp
subb
mov
xor
popa
adc
push
cmp
cmpsl
jge
inc
sub
inc
fwait
mov
shl
push
shrl
pop
or
mov
int
dec
es
xor
in
nop
in
cmc
testl
sti
leave
int
mov
pop
jae
lea
inc
push
dec
inc
mov
mov
push
insb
xchg
jbe
push
pop
xor
ljmp
add
and
pop
push
jle
mov
lock
dec
xchg
jp
push
mov
movsl
aas
push
cpuid
popf
add
cmp
pop
test
cmpsl
mov
jmp
test
xor
sbb
adc
cmpsl
inc
testb
loop
cmp
jmp
dec
sub
sub
push
sar
cmpsl
clc
repz
push
push
popf
lds
inc
ljmp
arpl
divps
pop
dec
and
and
ja
inc
dec
das
and
mov
mov
cmp
xchg
stos
xor
rcll
push
cmp
cltd
jbe
mov
xor
dec
sub
gs
cmp
xor
cmp
lea
jnp
int
int
adc
shrb
ja
sbb
shlb
mov
xchg
dec
mov
incl
movsl
push
aam
dec
ficoml
adc
inc
cmp
ss
adc
es
and
loop
inc
push
push
cmc
dec
call
and
fcmovbe
scas
pop
lea
mov
sbb
in
gs
fisttps
cmp
mov
scas
aam
cmpsl
mov
decb
aad
push
pmuludq
pavgb
adc
inc
cmp
pop
lods
or
xchg
push
daa
out
pop
in
call
out
daa
lods
repnz
lret
jle
lret
jecxz
add
rorb
iret
mov
imul
jns
jle
shll
mov
mov
jp
add
stos
sbb
dec
sbb
mov
int3
jp
xor
xchg
js
or
push
add
enter
add
add
sbb
mov
push
ret
stos
into
nop
and
je
xor
sub
call
and
lcall
or
scas
dec
fsubs
stc
dec
push
mov
dec
xlat
mov
mov
mov
lahf
jmp
adc
sub
push
stos
pushf
cmpsl
test
loop
xchg
or
dec
adc
mov
pop
je
frstor
jle
pop
stos
sbb
imull
mov
or
adc
mov
int
xor
push
adc
je
jae
xchg
pop
sti
and
jge
jne
dec
lret
jnp
sub
jl
jp
adc
and
dec
ds
stos
subl
cmp
xchg
dec
sbb
cmpsb
shlb
sar
icebp
cmp
pop
and
shrb
lahf
fsub
pop
sub
xor
loop
xchg
in
pop
xchg
push
addr16
stos
add
xor
test
in
xor
sbb
mov
jecxz
loopne
out
in
repz
push
inc
test
cs
jp
mov
mov
lret
mov
iret
stc
stos
mov
ds
jb
mov
xor
divl
sub
out
xchg
sbb
adc
fiaddl
cmc
mov
imul
xchg
inc
sti
push
pop
ljmp
push
ret
mulb
in
fsubrl
or
fwait
xlat
ja
fimull
lea
dec
dec
ret
xchg
mov
in
jl
repnz
or
pop
repz
mov
inc
or
jne
inc
xor
xor
es
lcall
bndldx
imul
test
pop
pop
jae
xor
aam
mov
push
mov
xchg
push
cli
push
inc
sub
mov
cmp
mov
push
push
push
iret
movb
sbb
sbb
lock
mov
xchg
sub
fwait
sti
dec
cmpsb
test
jno
cmp
xor
jmp
jg
sbb
xor
sti
lret
xchg
movsb
fidivl
test
xchg
nop
mov
sarl
pop
cmp
outsl
lods
adc
scas
ss
lea
or
adc
sbb
fsubrs
xor
dec
mov
cs
lods
xor
cmp
xlat
pop
in
lods
xchg
lahf
lds
int
jmp
mov
in
pop
popa
pop
ljmp
rcrb
mov
jo
sub
frstor
dec
push
jno
subb
and
movsb
push
xor
pop
xchg
ss
dec
cmp
mov
or
and
sub
lcall
or
pusha
into
int
inc
xor
mov
cmp
dec
call
cmp
cmpsl
mov
or
addr16
adc
dec
cli
js
loop
xchg
stos
cmpb
push
jp
dec
bound
sub
cmp
or
sbb
ljmp
xchg
stos
cmpb
push
jp
dec
bound
sub
cmp
or
sbb
out
ret
lret
xchg
stos
cmpb
push
jnp
dec
bound
sub
cmp
or
sbb
ljmp
xchg
stos
cmpb
or
rcr
dec
bound
int
fucom
pop
mov
bound
imul
dec
das
sbb
ret
repnz
loop
xchg
lahf
orb
pop
inc
dec
jb
bound
pop
add
xor
and
sbb
iret
loop
xchg
cld
out
mov
mov
dec
hlt
movsb
jbe
push
dec
pop
push
daa
fidivl
xchg
mov
loope
jmp
bound
or
mov
roll
mov
testl
push
dec
imul
xchg
inc
xchg
std
icebp
sbb
aas
daa
or
sbb
fidivl
mov
push
enter
or
dec
sbb
xchg
pop
cmp
push
jg
pop
movq
pop
adc
std
iret
xor
rol
xchg
xor
pop
sbb
jo
xor
mov
in
aas
xor
adc
iret
or
testl
scas
lea
movsb
lahf
and
repz
testl
pop
jb
push
jne
pop
inc
rdmsr
es
out
div
xchg
and
xor
ss
outsb
jl
ja
and
inc
mov
xorl
repnz
fadd
mov
lret
pop
push
insb
arpl
ljmp
lods
loope
out
shl
lret
jno
add
and
push
jae
rdmsr
aas
and
rcr
ret
jmp
out
xchg
lahf
orb
pop
inc
dec
jb
bound
pop
add
xor
and
rcr
ret
jmp
out
xchg
lahf
orb
pop
xchg
ficompl
jl
and
push
addl
dec
jae
aad
cmp
cmpsb
fstl
dec
das
arpl
insb
pop
jge
out
jg
xor
lods
lcall
add
stos
xchg
lcallw
and
mov
mov
mov
cld
push
mov
xor
mov
imul
jecxz
add
jmp
pop
inc
aaa
shll
mov
dec
inc
mov
jp
ret
aaa
scas
add
push
jmp
mov
lcall
fwait
xor
mov
data16
xor
fsubl
cmp
in
mov
xor
adc
ror
mov
in
sbb
mov
inc
stos
mov
dec
and
repz
push
loopne
xor
rcrb
xor
pop
cmpsb
cltd
test
xchg
out
es
xor
push
jp
mov
xor
sbb
sub
add
xchg
movsl
add
cmp
xor
lret
push
mov
pop
inc
mov
bound
mov
bound
jbe
dec
repz
jl
xchg
mov
fisttpll
pop
xor
lcall
sub
jecxz
jne
sbb
rcrl
xor
cwtl
shlb
stos
dec
dec
out
lods
push
mov
add
stos
icebp
ret
out
cltd
call
test
mov
cmp
inc
repz
sbb
dec
xor
mov
mov
sub
mov
mov
iret
push
push
in
sbb
mov
scas
into
mov
mov
popl
pusha
inc
scas
xor
fiaddl
nop
jecxz
test
inc
ds
cmp
je
loopew
pop
cmp
and
lods
push
adc
mov
inc
push
mov
and
mov
jmp
cmp
pop
lahf
cmp
xchg
lds
push
adc
fadds
mov
xchg
lods
adc
and
xor
push
rcrl
and
push
or
adc
stos
add
jle
mov
punpckhdq
imul
sarl
sbb
cmp
inc
cwtl
fstpl
jecxz
fcmovnbe
lret
test
mov
inc
push
and
stos
imul
int
push
adc
cmp
ss
mov
cmpsb
add
call
jb
cmc
lret
icebp
das
mov
lret
fwait
lret
popa
jecxz
aaa
mov
or
in
push
adc
push
dec
jecxz
mov
mov
push
loop
jne
nop
or
aam
stos
out
mov
aad
cs
sbb
hlt
insb
into
lods
inc
xor
gs
stc
push
xchg
sbb
sub
repnz
lods
shrb
xchg
sbb
sahf
insl
or
movsl
dec
dec
and
pusha
push
push
inc
adc
mov
std
and
js
in
dec
mov
and
dec
push
movsb
xor
scas
sbb
mov
aam
push
mov
into
imul
xchg
test
fists
popf
sub
fsubl
push
sti
adc
pusha
repnz
xchg
jg
int3
cmp
dec
fstpt
sti
jle
cmp
lds
int3
dec
push
popf
aam
lock
adc
cmp
cmc
xchg
inc
dec
aam
mov
xchg
jecxz
shl
pop
pop
ja
mov
mov
loope
mov
pop
mov
lret
sahf
in
ds
clc
popf
std
mov
loope
sbbb
stos
nop
sbbl
sbb
es
add
cmpl
lret
jbe
pop
frstor
adc
add
mov
push
out
cmpxchg
mov
mov
pop
mov
xor
cmpsl
shrl
pusha
fs
jo
mov
inc
mov
sahf
push
cli
mov
cwtl
mov
aas
shlb
je
pop
cwtl
test
or
repnz
jne
push
icebp
xchg
inc
cli
xor
or
or
sub
lea
pop
outsl
test
inc
sub
push
in
or
idivl
adc
cmpsb
inc
pushf
insb
insl
push
cld
mov
push
test
add
inc
sub
cltd
mov
xor
jbe
jne
fwait
and
repz
cmpsl
in
pop
out
inc
es
stc
or
adc
lds
icebp
pop
out
mov
adc
arpl
pop
ss
adc
aam
add
dec
dec
cwtl
inc
cwtl
jmp
aaa
mov
dec
int3
dec
jge
out
cli
cmp
scas
cmpsb
in
das
pop
cmp
mov
pusha
out
mov
sbb
push
xor
pop
je
rcl
les
pusha
insb
test
or
jne
cs
and
scas
je
xchg
jmp
dec
mov
iret
add
mov
cmpsl
movsl
into
cwtl
lods
xor
inc
push
sbb
sbb
jbe
loope
or
mov
ljmp
lea
lret
test
xchg
adc
das
pop
dec
cli
pusha
pop
test
js
jne
fimull
pushf
pop
scas
mov
das
or
mov
hlt
cmpsl
sbb
andb
es
xchg
movsb
in
es
mov
inc
cmp
push
push
dec
xchg
setbe
in
popa
addr16
push
jl
lock
test
lods
sbb
stc
sub
scas
popf
push
and
xchg
mov
sti
out
aam
push
adcl
aas
fs
push
xor
sbb
push
push
pop
lret
pop
jmp
dec
dec
pop
sarb
je
pop
add
cmp
dec
jl
xor
lods
adc
xlat
lea
arpl
xchg
test
movb
lret
sbb
outsb
pop
je
scas
adc
dec
filds
pop
cmp
call
jl
mov
inc
fiaddl
jbe
sbb
ret
or
nop
adc
mov
orl
sub
mov
push
mov
mov
in
fdivl
cmp
mov
pop
xchg
cmp
not
out
push
ficomps
leave
pushf
ja
int
and
xchg
xchg
movsl
iret
jne
bound
cltd
adc
fwait
cli
sub
sbb
imul
leave
sbb
cld
cmp
push
mov
sbb
mov
das
fadds
xlat
add
les
cvtdq2ps
cli
inc
and
and
int
inc
xlat
cmpb
adc
pop
aas
fisubl
xchg
repnz
sub
shrb
jno
mov
ss
cmp
cltd
jle
das
setne
xchg
adc
mov
adc
lea
inc
lods
cmp
lret
cmp
or
movsl
std
mov
xorb
adc
aad
cmpb
lret
fcomp
adc
or
loop
int
adc
fs
sub
aas
and
xlat
jb
sub
xchg
cmp
mov
sbb
icebp
imul
iret
jecxz
mov
call
adc
sbb
dec
jns
shl
xchg
xchg
xor
arpl
add
mov
push
dec
sub
cmp
lcall
in
pop
aaa
mov
arpl
dec
nop
mov
push
push
ret
fs
nop
ret
inc
mov
cwtl
inc
inc
fcomps
aas
pop
mov
and
xchg
or
cmp
pop
mov
adc
add
sti
fdivrs
cmp
jne,pt
cmp
inc
adc
push
mov
out
or
test
mov
add
lock
jno
push
pop
and
ja
fs
jae
mov
sub
or
jo
jg
add
add
sub
loopne
fldt
add
sub
or
jns
mov
mov
fbstp
mov
test
cmp
inc
data16
cmpsl
adc
mov
in
imul
mov
insb
into
loop
arpl
dec
cmp
fs
loope,pt
jecxz
lds
daa
aam
mov
fldt
repz
cmpb
lea
daa
int
jg
adc
add
xchg
cld
pushf
add
lods
mov
stc
shl
test
jecxz
push
jmp
sbb
dec
pop
aad
push
xchg
inc
in
sbb
lcall
inc
daa
cmp
sub
adc
test
outsl
mov
dec
pop
movsb
jg
jge
hlt
mov
rclb
or
scas
push
jg
and
jecxz
idiv
or
jbe
xchg
pop
mov
adc
daa
xor
je
iret
sub
cmpsb
pushf
jbe
xor
or
js
dec
sbb
std
adc
outsb
sbb
ds
je
cmp
dec
mov
test
pop
xor
sbb
loope
movsl
fisubrl
cs
add
popf
in
lock
jns
xor
cwtl
inc
adc
mov
ljmp
lods
push
push
lahf
les
sub
in
das
add
iret
call
lock
dec
gs
inc
jb
movaps
ja
sub
ljmp
or
es
sahf
push
in
cs
in
imul
imul
cmp
push
das
mov
movsl
mov
loope
aas
iret
jo
sub
dec
test
test
jecxz
jae
mov
gs
sub
or
jle
imul
arpl
leave
mov
ret
mov
dec
sbb
pop
and
pop
lock
out
xchg
jae
sti
repnz
sti
aaa
in
pop
adc
xchg
icebp
lods
hlt
cmpsl
adc
insl
xor
arpl
in
divb
add
loop
rol
sub
lret
repnz
dec
adc
popf
dec
into
repz
insl
sbbl
add
arpl
aas
in
adc
cmpsb
add
ficompl
popf
fdivrl
gs
pop
outsb
cmp
fiadds
inc
sub
nop
add
data16
mov
std
sub
mov
mov
divl
push
inc
out
inc
bound
push
adc
out
push
ljmp
prefetchwt1
pop
inc
aaa
pop
inc
insl
pushf
aaa
jg
test
and
jae
outsb
loope,pt
nop
out
add
je
hlt
lds
cmp
push
xchg
les
mov
nop
testb
mov
and
js
mov
mov
inc
popa
xor
stos
ja
mov
and
lock
mov
mov
sbb
fnstsw
push
cmp
xchg
insl
divl
or
mov
popa
aad
pop
mov
push
cmp
cld
adcl
dec
sub
das
aam
sbb
mov
inc
lret
popa
leave
and
enter
mov
adc
mov
cmpsb
jl
leave
mov
std
in
popa
pop
and
mov
mov
aam
xchg
outsb
pop
shl
or
iret
adc
imul
aam
add
jbe
loopne
sub
dec
mov
movsb
jle
push
mov
dec
bound
xorl
aad
dec
sub
sub
fnstsw
jo
inc
add
loope
push
jbe
clc
subl
das
pushf
loopne
in
lahf
mov
xchg
in
fwait
jmp
mov
dec
mov
adc
aas
fucomi
xchg
out
inc
pop
fdivp
cld
cmpb
ss
add
je
inc
test
icebp
decl
jl
or
cli
mov
pushf
or
loope
outsl
mov
adc
pop
call
js
cmpsl
insb
xchg
inc
in
lods
jo
stos
xor
pop
add
iret
xchg
and
dec
or
int3
sub
sbb
push
xchg
fwait
cmp
jo
iret
rcrb
jo
sbb
pop
movsb
cmp
dec
sub
jno
daa
loopne
outsl
nop
repnz
aaa
add
mov
xlat
mov
or
sti
pop
enter
adc
xchg
clc
dec
push
mov
dec
mov
sti
push
cmc
data16
call
pushf
insl
xchg
pop
mov
test
inc
ja
pop
arpl
sbb
jb
fistps
ss
mov
ficompl
enter
in
cmpsb
pop
fcompl
cmp
mov
aam
pop
xchg
vcmpsd
test
jg
add
and
sub
dec
xchg
je
inc
jne
dec
arpl
mov
ljmp
pusha
mov
mov
sbb
leave
mov
pushw
cmp
mov
aad
push
out
inc
stc
push
jge
cltd
test
xchg
push
mov
mov
scas
ljmp
mov
xchg
mov
push
aas
dec
outsb
pop
out
jnp
pop
pop
out
outsb
jge
push
mov
lods
outsl
es
jnp
pop
enter
movsb
mov
sarl
andb
push
fwait
je
dec
jmp
imul
es
jns
roll
dec
sub
lds
fcmovu
ds
mov
cwtl
push
call
out
daa
mov
les
jge
push
mov
jbe
fistpl
sti
xchg
jle
sub
jmp
stc
out
sub
rcrb
aas
lcall
popf
mov
shrb
push
cs
pop
dec
mov
fmuls
jno
movsl
sbb
inc
mov
xchg
mov
mov
sub
aad
mov
divb
lods
sbb
and
aas
mov
call
push
add
pushf
cmpsl
and
aam
jno
mov
or
dec
xchg
aam
pop
push
stos
int
mov
lods
pop
xchg
jle
sbb
aam
mov
pop
cmp
dec
pop
outsl
shl
adc
leave
call
xor
ss
aaa
repnz
jge
xor
and
fxch
sbb
pop
xchg
cmpsb
mov
xor
fmuls
jo
jnp
mov
adc
in
movsb
jae
xorl
add
add
push
adc
mov
js
jb
outsb
inc
dec
xchg
faddl
inc
adc
sub
xor
fcompl
mov
or
ret
xchg
in
clc
or
mov
jne
pop
nop
add
lcall
lock
pop
test
test
imul
ss
mov
adc
fsubl
stos
adcl
in
or
loop
sbb
fwait
xchg
enter
hlt
mov
inc
mov
or
pop
or
xchg
imul
daa
xor
cmp
sti
mov
imul
mov
or
push
jns
sub
xchg
xchg
lods
dec
das
test
jnp
mov
pop
pop
fs
pop
sbbl
push
fcomp
push
sbb
out
cltd
stos
dec
jl
add
shll
sbb
in
ret
fists
mov
xchg
cltd
test
inc
jbe
dec
or
lret
lods
jb
test
dec
jnp
inc
and
jb
cmp
ror
movsb
in
mov
jae
jb
mov
mov
sub
ret
mov
jmp
aam
loope
push
ret
jne
push
or
cmp
xor
sub
pusha
test
cld
mov
cmp
push
cmp
adc
cmpsb
inc
mov
mov
jge
mov
fldenv
sub
xor
adc
cmpl
mov
cmpsb
in
mov
roll
call
rcr
sar
out
dec
inc
pusha
pop
pop
in
pusha
out
dec
ljmp
fcompl
push
xchg
loopne
call
sbb
stos
insb
sub
lret
lock
xlat
aad
cmc
mov
scas
jg
mov
loope
sub
icebp
cmp
inc
sub
jl
fst
xor
mov
orl
cmp
lods
jg
inc
fwait
loopne
fwait
push
xor
cwtl
push
imul
jae
in
push
xor
pop
fisttpl
gs
mov
aaa
sub
mov
mov
or
dec
lret
jmp
add
adc
add
xchg
push
repz
mov
or
add
lahf
sbb
push
out
adc
adc
push
mov
clc
arpl
xchg
xlat
lret
mov
ljmp
mov
and
lods
loope
inc
rcrl
call
sub
loope
push
popa
pop
jae
mov
xchg
fsts
xchg
lahf
divl
jns
rcl
test
xchg
fsubrs
ljmp
xchg
jnp
adc
adc
inc
clc
fsubrs
and
mov
or
or
mov
adc
in
fdiv
mov
rorl
loop
push
pop
mov
xor
jae
sahf
sbb
sub
mov
push
test
dec
stc
dec
mov
mov
push
mov
ja
sub
jge
jg
mov
jg
icebp
mov
ss
data16
push
sbb
sbb
out
pop
xchg
mov
negl
pop
lods
dec
xchg
xorb
jo
fwait
adc
inc
mov
imul
loope
fildl
dec
mov
adc
jmp
lret
adc
lods
pop
ja
sub
aaa
hlt
das
aas
testb
cmpsl
repz
add
fldl
fstpl
sahf
out
xor
movsl
imul
sbb
aad
pop
int3
lods
test
jl
out
pop
repz
call
es
push
mov
adc
fnstenv
lea
loopne
pusha
cmp
jecxz
xchg
sti
pop
adc
sbbb
inc
das
unpckhps
hlt
pop
pop
loope
mov
inc
pop
das
leave
and
pusha
js
dec
int3
jns
xor
or
insb
aam
sbb
outsb
cmc
mull
inc
or
mov
cli
das
mov
push
dec
fs
pop
lods
adc
lock
add
mov
hlt
pop
or
add
adc
outsb
pop
call
push
outsl
fcomi
iret
loope
pusha
popl
mov
data16
push
pop
mov
dec
mov
and
lds
aaa
jp
stos
mov
pop
sub
es
dec
mov
cmp
testb
aas
daa
aad
xchg
or
jbe
inc
cmp
cmp
add
pop
bound
sbb
sbb
mov
pop
int3
dec
sbb
dec
or
push
xor
push
push
xor
sbb
fs
dec
mov
pop
mov
rcr
test
aad
icebp
lahf
push
mov
cs
mov
addr16
leave
jp
pop
push
xor
xor
mov
imulb
push
in
movsb
sbb
iret
and
mov
std
fiaddl
mulb
cmp
dec
xor
xchg
int
scas
or
mov
push
fdivrl
jle
xor
jnp
imul
in
mov
sbb
inc
bound
mov
dec
sbb
lock
repnz
xor
loop
aas
cwtl
or
dec
push
mov
mov
repnz
mov
cld
aam
test
mov
pop
xchg
popa
or
and
jmp
pop
je
xlat
pop
lret
push
pop
lret
push
bound
push
aam
cmpsb
int
push
sbb
loop
dec
shrl
lods
fisubrs
or
int3
add
and
lods
movsb
in
addr16
push
shlb
stos
inc
cmp
mov
lcall
dec
sub
mov
cmc
lret
mov
jecxz
out
stos
add
mov
push
add
stos
cltd
fiaddl
rcrb
lock
mov
mov
cmp
mov
xlat
mov
push
xchg
in
fistpll
mov
les
lahf
ljmp
sub
cltd
movnti
inc
scas
mov
dec
fldl
daa
test
pop
and
fwait
pop
popf
lds
inc
sahf
test
dec
insl
adc
mov
mov
out
test
sub
xchg
mov
push
aas
test
pop
pop
jmp
notl
inc
inc
mov
sub
mov
and
lahf
mull
aaa
les
jl
add
mov
imul
adc
jge
bound
sbb
bound
in
jp
into
sub
cmc
insw
jmp
sub
scas
repnz
stos
test
outsb
lds
adc
cwtl
jge
shl
popf
push
and
mov
push
pop
fldenv
xor
cltd
dec
sub
out
pushf
lahf
pop
jmp
cmp
sub
and
icebp
add
lods
mov
jl
int3
pusha
popa
jbe
push
nop
aas
mov
std
mov
imul
mov
pop
cmp
fistps
pop
dec
pop
clc
mov
icebp
and
out
pop
pop
xchg
jle
mov
pop
xor
mov
push
push
pop
xor
cwtl
mov
stc
pop
and
movsb
xchg
aas
ja
jge
or
xor
add
or
cmpsb
mov
push
sbb
testb
es
js
adc
lret
sti
adc
loopne
sahf
sub
mov
jns
inc
mov
and
add
rorb
push
int
push
pop
mov
and
in
adc
xchg
xchg
cs
mov
pushf
into
sbb
test
cmp
ret
cli
jg
adc
sbb
xchg
jno
mov
inc
mov
lret
sub
sahf
je
movsl
rclb
xor
push
or
and
mov
loop
aam
lret
xor
add
test
fcoml
mov
fsts
push
mov
mov
push
sbb
pop
movb
inc
cmp
adc
cmp
scas
in
sub
add
jae
pushf
jb
xor
lods
mov
xchg
fnsave
push
cmp
sub
mov
jle
adc
add
xor
and
rcr
ret
jmp
out
xchg
lahf
orb
pop
inc
dec
jb
bound
pop
add
xor
and
rcr
ret
jmp
out
xchg
lahf
orb
pop
inc
dec
bound
outsl
adc
push
rdmsr
aas
and
ffreep
iret
sti
jmp
out
xchg
lahf
fwait
mov
xchg
scas
dec
pop
outsb
dec
cli
jg
outsl
adc
adc
xor
mov
gs
jmp
cwtl
in
or
inc
pop
push
push
sti
rolb
shll
pop
jbe
sbb
push
in
or
pop
add
push
add
add
or
push
mov
add
add
cwtl
add
add
sbb
cwtl
add
lock
or
roll
je
mov
add
add
push
add
add
lods
add
cmp
add
bound
add
cwtl
add
int
les
imul
add
add
les
js
movb
cltd
add
or
add
add
add
add
add
scas
add
cwtl
add
mov
dec
add
adc
add
aas
add
add
add
add
add
add
add
stos
add
add
add
add
add
add
je
call
add
add
call
add
rorl
jnp
xor
push
add
add
pusha
add
xchg
add
les
test
jnp
jnp
faddl
adc
cmp
add
add
add
call
add
add
add
add
add
outsb
add
ret
add
dec
add
stos
add
insl
add
add
les
scas
add
add
pop
add
add
add
xchg
mov
add
addb
add
add
add
add
add
mov
add
das
add
add
add
flds
hlt
add
call
add
pushf
add
add
push
add
imul
movsb
add
add
mov
add
add
add
add
add
add
add
or
push
add
push
add
sub
rorl
add
add
add
pop
add
add
adc
mov
add
add
add
add
add
insl
add
add
fwait
add
popf
add
cmp
mov
push
add
add
dec
add
add
add
add
add
add
add
hlt
add
add
stos
add
add
push
push
add
add
push
int3
add
push
add
jnp
insl
add
add
add
outsb
add
inc
add
add
call
add
add
add
add
add
add
add
add
insl
add
add
add
add
sbb
mov
outsl
add
add
movb
addb
add
add
add
int
call
add
rolb
dec
add
push
add
sbb
add
add
or
call
add
add
dec
add
add
add
inc
add
add
cwtl
pop
mov
add
add
add
add
inc
add
add
outsl
add
add
hlt
add
imul
add
add
add
add
add
add
jle
sub
xchg
pusha
add
add
add
add
outsl
add
pop
add
add
add
push
add
pop
add
add
leave
add
cwtl
add
push
add
dec
add
add
add
add
add
push
add
xchg
add
add
add
jns
add
add
push
push
add
loope
addb
add
push
dec
add
add
dec
add
push
outsb
add
add
das
add
add
dec
add
push
add
les
push
add
add
add
add
add
add
add
add
jno
cmpsl
mov
push
cwtl
ficomps
leave
push
mov
add
ret
lea
movsb
jns
push
xchg
mov
enter
pop
sti
fidivl
add
es
cmp
cli
inc
inc
insb
in
xchg
data16
mov
mov
leave
ret
stos
xchg
inc
xchg
rcll
mov
mov
imull
sub
in
ss
filds
mov
xor
mov
movl
jb
dec
mov
push
shrl
sarb
dec
fs
jmp
out
iret
icebp
adc
shll
sbb
rorb
divl
in
shlb
scas
stos
ljmp
or
shlb
inc
mov
mov
rolb
sbb
daa
cltd
int3
dec
xchg
mov
mov
imul
cmp
cmp
or
dec
mov
pop
sbb
lret
inc
push
push
cs
xchg
fldt
mov
lods
shlb
sbb
cld
mov
and
push
mov
aam
cmovs
jmp
add
ret
push
rcl
clc
adc
imul
scas
ja
mov
sbb
inc
les
lret
jae
cmp
movsb
inc
movaps
out
jg,pn
pop
and
nop
sub
xor
insl
fwait
sbb
jb
mov
xor
inc
mov
pop
xlat
jnp
addr16
inc
mov
sub
pop
push
mov
mov
aas
movsl
mov
xor
mov
pop
je
cmp
orl
addr16
xchg
das
jmp
mov
les
scas
pop
aas
sub
xor
fildll
stc
test
fistl
push
push
jno
aad
cmp
jg
cmp
cmc
les
xchg
out
repnz
xor
jl
add
dec
and
cmpsb
in
adc
mov
push
fcoms
cmp
mov
test
out
aad
push
les
pop
fbstp
loope
bnd
nop
popf
xchg
and
hlt
push
subl
out
jb
dec
mov
mov
and
mov
and
add
leave
mov
mov
mov
lea
movsb
inc
add
adc
je
mov
add
rcl
test
fwait
push
imul
xor
inc
in
pushf
jl
xchg
call
mov
jno
fs
lds
mov
mov
inc
and
outsl
adc
adc
popl
idivl
mov
jns,pn
push
pusha
lock
mov
shrl
jnp
pop
arpl
frstor
push
iret
jecxz
mov
sarb
ljmp
pushf
push
outsl
push
mov
filds
dec
push
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
