fsubr
loopne
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
jge
std
pop
int
fnstsw
or
cmp
jge
dec
call
cmp
sbb
dec
std
pop
int3
push
mov
pop
insl
enter
jmp
cmp
mov
int
fnstsw
or
cmp
jge
sub
cmp
sub
add
sub
mov
divl
scas
cmp
inc
mov
mov
add
jl
dec
jo
mov
sbb
mov
fadds
in
rcrb
in
push
mov
aaa
push
repz
fstps
out
mov
movsb
mov
std
dec
in
jge
lods
or
fdivrs
mov
jge
cwtl
outsb
js
fstl
mov
sahf
xchg
enter
mov
lea
cmp
pop
pop
clc
jle
push
mov
adc
dec
inc
pop
jo
inc
jne
jne
pop
mov
enter
popf
rolb
pop
cltd
cmp
inc
mov
std
pop
int
fnstsw
or
cmp
jge
dec
call
cmp
cltd
dec
mov
cmp
dec
fsubrs
clc
dec
add
mov
jno
pusha
fisubrl
mov
mov
sbb
dec
fstps
jg
push
aas
lods
adc
in
dec
push
pop
int
in
fwait
or
or
cmp
cmp
jge
dec
call
cmp
mov
int
fnstsw
or
cmp
jge
dec
call
cmp
mov
inc
pop
mov
jg
fdivrl
and
into
lcall
adc
mov
mov
clc
push
leave
inc
rolb
insl
repz
scas
add
pop
enter
fdivs
int3
fcomp
int3
scas
pop
mov
xchg
lock
or
or
inc
outsl
test
jo
movsl
mov
xchg
push
clc
cmp
out
loop
lret
or
sub
in
jb
imul
in
shrb
inc
es
push
enter
js
ror
call
fdivrs
outsl
fsub
sbb
jl
add
sbb
js
stos
leave
cmp
add
mov
repz
jbe
xor
add
loopne
mov
pop
daa
sub
xchg
and
je
out
aaa
jl
xchg
ret
outsb
lea
mov
and
add
adc
divb
mov
int3
movsl
lcall
xlat
adc
cmpsb
pop
pop
or
dec
imul
out
xchg
cs
or
repnz
dec
push
loopne
stos
aas
imul
cli
aas
pop
stc
sbb
mov
inc
lods
les
sub
adc
ss
ret
out
sbb
cli
xchg
insb
mov
dec
jbe
out
jnp
into
jno
xchg
add
mov
fcomps
cmp
pop
arpl
and
jbe
and
addr16
popf
jae
jg
insb
xor
fmull
aad
aaa
cli
cmp
notb
pop
jle
lcall
subl
jnp
push
jbe
sbb
test
adc
test
mov
cmp
mov
mov
imul
imul
lret
test
or
xchg
cmc
mov
dec
pop
xor
vpcmpeqw
push
in
mov
mov
jns
adc
ja
int3
push
lcall
xchg
add
sub
jecxz
xchg
in
xchg
hlt
xor
push
mov
out
mov
enter
repnz
es
xchg
addl
xor
mov
cmp
pop
shl
jp
sbb
aam
ret
fwait
out
xchg
jl
dec
stos
pop
mov
xchg
xlat
sahf
outsb
out
adc
sbb
cltd
xchg
pushf
insb
xchg
pop
mov
into
cs
mov
inc
and
and
jo
xchg
mov
test
lock
dec
xor
xchg
inc
push
in
mov
lret
cmp
dec
mov
pop
fs
cld
orl
int3
inc
xchg
roll
add
mov
push
ja
inc
jg
jg
dec
dec
mov
roll
sbb
jmp
testb
lock
and
sbb
out
test
mov
les
jbe
push
inc
push
mov
pushf
loopne
xchg
pop
add
nop
ljmp
sahf
push
push
jl
sub
jge
push
xor
jp
cwtl
adc
das
jmp
loope
or
and
cmp
xor
ret
sub
adc
dec
movsb
stc
jle
icebp
ds
addb
sbb
lock
dec
mov
mov
pop
aad
add
sbb
nop
lds
lods
push
gs
pop
rorl
movsl
add
jns
ja
roll
leave
adc
add
leave
scas
pop
in
rcrl
divl
xchg
mov
xchg
mov
rcr
pop
xlat
xchg
mov
add
pusha
push
adc
xchg
xchg
in
adc
into
adc
fmull
xlat
push
mov
sahf
or
icebp
fidivrl
std
ja
leave
test
add
xlat
jae
xchg
xor
iret
aad
jb
fisubs
stos
dec
int
popa
mov
lods
mov
mull
sbb
xlat
pop
jae
add
cli
cmp
xor
xor
pop
loop
insb
popa
mov
xchg
jg
cmp
mov
nop
daa
adc
mov
adc
xchg
outsb
test
leave
movsb
adcb
mov
jae
jo
mov
or
inc
and
stos
mov
movsb
loop
scas
outsl
fnsave
cld
jp
jbe
xchg
cmp
mov
rcrb
in
idivl
test
std
jp
ljmp
sub
xlat
leave
ret
mov
nop
cli
cmp
sbb
stc
pop
repz
loopne
outsl
aas
inc
adc
insb
and
imul
mov
lds
imul
scas
xor
les
adc
lds
push
mov
test
push
aas
sarb
xchg
mov
cmpb
shrl
add
ret
stos
addb
sahf
jnp
in
mov
mov
popa
adc
lods
arpl
cmp
insb
movsb
and
ret
nop
sbb
inc
mov
jne
xchg
ljmp
dec
cmp
outsl
imul
call
mov
push
and
outsl
shrl
push
popaw
pop
loope
mov
and
push
imul
jo
lret
push
push
cmp
lea
cmpsb
ficompl
rclb
call
or
cld
mov
lods
dec
loope
scas
movsl
or
popa
scas
dec
movsb
jbe
sti
xchg
jg
sbb
leave
mov
pop
inc
negl
fdivs
dec
mov
jl
loop
dec
ret
imul
sbb
mov
jle
mov
in
es
xchg
push
lcall
mov
jno
adc
popa
in
aad
ss
add
gs
xchg
dec
popa
cmp
or
mov
mov
lds
fs
sarl
push
jp
es
or
nop
pop
push
call
lret
and
mov
inc
pop
mov
cmc
iret
test
pop
jle
sbb
push
inc
popa
arpl
jns
jg
push
jo
dec
push
mov
out
mov
insb
fwait
mov
stc
and
jge
mov
lahf
cld
je
in
or
xchg
dec
fsubr
daa
mov
mov
fucomp
shrb
push
push
in
sbb
or
imul
iret
mov
test
sub
fidivrs
push
fimuls
mov
sbb
test
int
sub
xlat
xor
lods
mov
sbb
or
pop
fisubrl
xor
inc
cs
push
daa
sub
loop
sbb
pop
fsubs
adc
mov
adc
push
test
add
scas
mov
inc
or
out
cmp
push
cmp
push
fdivs
bound
addr16
sti
mov
imul
dec
xor
inc
jae
jmp
sub
jbe
jecxz
nop
push
loop
jno
jb
sub
mov
stc
dec
mov
sbb
mov
test
mov
insl
xchg
push
mov
repnz
cmp
xchg
cwtl
outsl
bound
jbe
andb
xlat
aad
shl
stos
inc
or
jbe
sahf
jbe
inc
repz
js
inc
or
mov
dec
gs
fnstsw
mov
sub
out
enter
push
cmp
sbb
and
lret
lods
leave
rcll
pop
lret
ja
ret
xor
test
push
dec
push
rcrl
fidivrs
push
sub
ret
ljmp
jae
shl
and
add
es
call
daa
lret
pop
sahf
shrb
ret
mov
lock
out
daa
scas
cwtl
xchg
loop
jnp
lret
pop
lods
xchg
or
xor
or
ss
scas
daa
jle
sub
mov
mov
roll
outsl
or
lds
fs
sbb
adc
pop
or
mov
inc
addr16
xchg
inc
out
sahf
add
xlat
jbe
ljmp
xlat
inc
fs
int
test
cmpsb
adc
sbb
clc
lret
jb
lahf
xchg
push
xchg
ret
mov
sbb
ret
lret
and
test
cmp
fwait
data16
xor
dec
ffreep
xchg
add
sub
std
lods
ds
fsubrp
push
mov
mov
sarl
mov
dec
mov
mov
and
jg
mov
ja
push
scas
lret
or
mov
mov
inc
or
push
mov
imul
adc
mov
mov
pushf
add
fildll
mov
test
scas
ret
test
inc
lcall
ret
mov
jecxz
in
xchg
cld
int
clc
cmc
inc
ljmp
mov
orl
sub
dec
xchg
xor
jle
pop
gs
in
outsl
inc
xchg
jmp
jno
mov
repnz
shlb
test
inc
jo
cmc
paddw
sub
inc
pushf
inc
sti
push
enter
outsb
mov
scas
push
jp
cltd
lods
pop
shll
push
jbe
push
cwtl
loop
inc
and
adc
push
scas
les
shl
push
push
mov
jb
push
icebp
xchg
xchg
addr16
in
mov
imul
subb
cmp
push
mov
add
mov
repnz
ljmp
imul
arpl
sub
jns
mov
lods
cmp
jns
loope
popa
push
mov
xor
test
popf
cld
xchg
loop
mov
add
mov
stos
call
add
imulb
sahf
dec
mov
arpl
subl
pop
mov
call
inc
lods
jo
cmp
in
pop
mov
outsb
mov
mov
mov
lds
cmpsl
pop
popa
xchg
lods
fs
stos
sti
loop
fwait
jbe
adc
jge
aaa
cmc
in
xlat
xor
cmp
pop
or
xchg
lret
cmp
shl
clc
stc
out
int3
xor
fwait
rolb
leave
and
lret
cmp
in
inc
fwait
lahf
sti
sahf
sub
jnp
in
jl
outsb
push
popa
ja
xchg
nop
and
inc
es
js
test
mov
mov
js
push
cmp
enter
pop
leave
sbb
int3
jecxz
or
xor
loopne
jp
mov
popa
jae
mov
mov
push
mov
loope
push
and
xlat
xorl
fisttpl
ficoms
popf
inc
in
stos
lcall
sub
add
push
dec
adc
repz
ja
shrb
aas
mov
lcall
aam
jmp
ds
movsb
pop
adc
inc
xchg
lret
pop
cwtl
int
lret
insb
aad
je
mov
push
add
out
imul
ljmp
add
aaa
les
mov
pop
cmc
in
xchg
jnp
repz
pop
lahf
cmc
sbb
mov
loope
into
mov
add
mov
sahf
ljmp
jns
or
sahf
rcll
pop
sbb
push
and
mov
ret
mov
adc
out
xchg
pop
jnp
test
xchg
mov
pop
xor
mov
dec
dec
push
cwtl
outsl
test
dec
xchg
aas
xchg
lods
rcll
and
lds
mov
adc
cmp
adc
sbb
scas
mov
mov
lock
test
lcall
imul
in
scas
lahf
out
dec
aaa
dec
push
iret
or
sub
in
mov
or
lock
xchg
loopne
in
scas
dec
sbbl
adc
cmc
xor
das
cmp
nop
data16
dec
scas
mov
mov
dec
lahf
pop
adc
push
cmp
pop
pop
jmp
or
aas
xor
inc
stos
cmp
shlb
inc
jg
test
xchg
sbb
in
mov
jmp
xorl
pop
mov
and
rclb
dec
mov
mov
mov
pop
cmp
or
cmp
lahf
repz
inc
xchg
jmp
jne
cmp
mov
add
push
ret
jl
jle
push
xchg
loop
jp
and
jae
fsubr
sbb
out
fwait
pop
shll
fcoms
xor
orb
idivl
cmp
int
and
dec
sub
mov
test
mov
mov
mov
loope
je
dec
pop
hlt
push
push
mov
stos
fwait
pop
ret
inc
scas
inc
xor
xlat
aaa
aaa
push
or
or
fstps
and
testl
decb
mov
insl
insl
popa
mov
adc
loope
add
mov
scas
dec
out
int
cmp
inc
jno
xor
ljmp
inc
call
inc
loopne
test
adcl
push
mov
dec
lock
push
mov
fwait
sarb
xor
sbb
decb
jecxz
sti
inc
lcall
ss
mov
in
dec
cmp
mov
fdiv
adc
dec
leave
in
insl
jnp
jne
mov
sti
sub
ret
lock
ljmp
cmpsl
sub
sub
mov
dec
jnp
jl
popa
pushf
xchg
iret
inc
xchg
repz
bound
cmp
insl
jmp
cmp
mov
xlat
mov
mov
adc
xchg
xchg
and
inc
icebp
push
mov
adc
mov
jg
xchg
push
arpl
inc
mov
inc
icebp
mov
inc
aad
ljmp
jg
push
cli
mov
fs
adc
add
aaa
mov
call
test
insb
cmp
or
fisttps
popa
mov
bound
ja
fstl
imul
or
das
sbb
pop
xor
pop
sub
and
mov
adc
adc
mov
cmp
dec
in
arpl
mov
pop
xchg
and
xor
push
pop
mov
pop
fwait
lret
inc
inc
fmuls
sub
jmp
and
orl
inc
jge
pop
sahf
in
dec
icebp
pop
les
inc
mov
inc
cmp
hlt
aam
testb
insb
lock
mov
je
iret
and
dec
lahf
jae
dec
sbb
mov
mov
jp
xchg
loop
lods
or
lret
inc
jg
sbb
fwait
push
fisttpll
add
call
enter
shll
push
cltd
adc
cmpsb
or
js
ficompl
dec
sti
jbe
punpckldq
pop
pop
jle
and
cmp
jb
and
stos
jl
push
sub
add
push
push
out
jecxz
mov
stc
into
ret
mov
fidivrs
repnz
lahf
sbb
jno
fisttpl
daa
movsb
sarl
jnp
push
iret
adc
aas
sbb
out
xchg
popf
adc
push
and
xlat
sahf
popa
push
push
das
ljmp
jp
pop
test
and
cmp
popf
or
popf
pop
push
insl
and
sahf
call
in
mov
in
add
and
and
and
fidivs
sub
fcomip
cltd
push
imul
cmpsb
cltd
cmp
mov
lahf
arpl
sbb
inc
xchg
mov
mov
inc
pop
mov
jb
cmpsb
adc
das
mov
sbb
jmp
mov
adc
pusha
mov
pop
out
enter
lods
jmp
push
fstpt
xor
jp
mov
dec
and
notb
mov
fdivs
jns
push
push
pop
scas
mov
adc
rcll
dec
jle
mov
mov
push
mov
sahf
pop
mov
push
mov
jbe
add
jns
inc
call
pop
xor
jae
mov
xchg
add
push
push
cmp
push
lods
rcll
push
push
add
sub
rcll
cmp
mov
iret
cmc
cmp
fmuls
inc
cli
xor
mov
sbb
pop
sub
out
jmp
pusha
movsl
mov
mov
aaa
mov
inc
mov
rcrl
push
push
pushf
out
cmp
enter
mov
dec
fmull
imul
cmpsl
lret
je
data16
dec
mov
or
xchg
jb
sbb
cmp
mov
pop
pusha
push
jbe
mov
fdivs
push
sub
jbe
sub
dec
and
mov
and
js
imul
sub
daa
fldcw
add
icebp
xor
repnz
xorl
rcrb
aad
mov
sbbb
lret
mov
sub
and
fadd
stos
shr
out
in
fucom
dec
jp
popf
shr
daa
mov
iret
or
les
or
loop
ror
dec
lea
aam
jmp
sbb
xor
dec
jg
jle
sbbb
shlb
jl
sub
mov
or
jl
pop
sbb
pop
out
pop
cmp
in
in
outsb
out
pop
push
enter
adc
xor
mov
je,pt
mov
iret
shlb
xorl
outsl
nop
xchg
cmp
push
lcall
das
sub
adc
inc
ficompl
movsb
jge
insl
in
cli
fwait
cmpsl
sbb
lret
inc
in
mov
insb
pop
movsb
mov
fistps
loop
sbb
mov
sbb
mov
pop
ja,pt
cwtl
xchg
cmpsb
leave
and
lock
cmp
icebp
cld
sti
ss
arpl
mov
sub
shrl
fs
adc
cmp
hlt
lds
mov
insl
loopne
imul
loopne
dec
push
mov
js
es
stos
daa
fsubs
or
sbb
cwtl
out
cmp
loop
xor
out
and
mov
cmovs
jo
daa
test
cmp
imul
sub
lods
ucomiss
mov
out
ljmp
dec
icebp
filds
lods
sub
aam
mov
pop
fsubrl
xlat
fdivrl
dec
or
dec
mov
and
sub
jnp
mov
inc
lcall
cmp
jns
sbbb
mov
push
push
inc
pop
sub
das
xor
or
jmp
lret
adc
adc
ret
jb
push
or
sbb
cmpsl
ljmp
dec
ret
in
cmpsb
lret
mov
adc
sub
pop
pushf
out
push
pop
enter
mov
pop
loopne
mov
daa
jge
imul
jbe
into
or
push
enter
xor
adc
mov
push
insb
jo
cmpsb
jns
sbb
mov
jecxz
mov
or
pop
faddl
xchg
push
mov
pop
sub
push
cmc
xorb
out
jne
nop
jne
lret
out
xchg
xlat
lret
mov
inc
ljmp
cld
jne
lods
jb
push
test
dec
mov
int3
inc
jbe
xchg
xchg
fsubrl
pop
inc
outsl
lret
sub
sbb
scas
lret
stos
sub
and
mulb
lahf
pop
push
addr16
negb
setns
xor
repnz
push
xor
cmp
jne
iret
les
xor
xor
aam
das
std
stos
push
inc
cmpsb
int3
cwtl
xchg
decb
iret
ljmp
dec
pop
and
sub
jne
orl
stos
aaa
add
gs
aaa
xor
sub
addl
fs
scas
mov
testb
push
cs
call
cwtl
ljmp
int
shrb
and
mov
aam
mov
aam
mov
ret
stos
add
mov
cmp
pop
jno
jmp
mov
cmp
je
addb
pushf
adc
inc
pop
cmp
mov
jmp
repz
movsl
shlb
mov
jno
or
pop
imul
notb
pmulhuw
shrl
ja
mov
mov
pop
xchg
mov
dec
or
mov
dec
ja
enter
cwtl
dec
pop
cmp
dec
xlat
aam
and
sbb
ljmp
fsub
lods
mov
ret
imul
std
pop
pushf
xchg
sub
adc
adcl
jg
pusha
sahf
push
add
xchg
mov
xchg
ja
xor
push
xchg
mov
ficoml
jecxz
scas
pop
sarl
cs
inc
pmullw
or
adc
pop
ficoml
or
add
push
and
sub
cmp
jmp
push
in
gs
scas
lret
out
or
inc
fsubrl
and
gs
and
pop
insl
insl
insb
and
cmpsl
lret
jmp
xchg
pop
or
or
push
cmpsl
mov
inc
mov
pusha
xchg
mov
movsl
in
pushf
push
sbb
or
cmpb
or
push
pop
ss
int
mov
sub
xor
fisttps
xlat
xchg
mov
add
in
ljmp
xchg
xor
and
mov
ret
sub
sbbl
pop
or
in
xor
mov
dec
cmp
pop
stos
push
mov
cmp
jge
dec
call
cmp
mov
int
fnstsw
or
cmp
jge
dec
call
cmp
mov
int
fnstsw
or
cmp
jge
dec
call
cmp
mov
int3
push
mov
clc
insl
enter
call
mov
repnz
loop
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
sbb
or
cmp
sub
adc
lods
mov
xchg
inc
xabort
call
push
cmp
sub
jbe
inc
js
sbb
xchg
mov
xchg
test
clc
call
push
and
xor
jbe
inc
pusha
push
jb
cwtl
xchg
stos
ljmp
mov
jns
push
js
pop
jp
scas
nop
std
mov
scas
xchg
inc
jns
bsf
mov
pop
rclb
pop
xor
js
sub
mov
xor
call
notl
jbe
arpl
or
in
roll
arpl
dec
or
xchg
push
push
mov
mov
clc
lods
es
imull
jnp
pop
arpl
or
in
sub
jbe
inc
cld
and
inc
pop
jecxz
fstps
jmp
cmp
dec
fs
add
adc
stos
xlat
insl
leave
jl
rcrb
lret
jns
cmp
lock
loop
inc
mov
sub
sbb
and
sub
jbe
inc
js
jno
cwtl
mov
xchg
not
loop
jmp
outsl
pop
jg
pop
add
and
or
xchg
lret
nop
test
push
popa
arpl
inc
pop
xor
ds
pop
ret
in
out
test
xchg
stos
out
cwtl
enter
pushf
inc
sbb
or
jp
sub
dec
inc
js
push
xchg
test
clc
call
push
cmp
sub
jbe
inc
js
push
xchg
test
clc
call
fwait
mov
je
lods
mov
ja
add
jmp
xchg
push
mov
pop
mov
popl
dec
std
jp
or
dec
mov
jbe
sbb
mov
and
jp
ret
flds
and
cmpsb
mov
pop
call
in
cld
cmp
add
mov
add
xor
and
push
inc
xor
sbb
movsl
cwtl
insb
mov
movsl
pop
xorl
mov
rcll
pop
sti
into
sti
outsb
mov
ljmp
aaa
pop
aas
arpl
mov
ljmp
sti
addr16
sbb
jae
leave
jae
stos
inc
out
or
pop
jns
jmp
test
push
into
sbb
jp
sarb
cmp
movsb
popa
scas
iret
mov
jne
shlb
mov
pop
out
aaa
cmp
rolb
xlat
mov
scas
jge
pop
add
sub
in
pop
sbb
iret
ljmp
hlt
addb
inc
inc
fwait
enter
xor
lock
in
gs
lods
pause
xchg
test
or
fsts
rorl
insb
xchg
sub
mov
or
sbb
mov
mov
ret
movsb
add
aad
cmp
dec
rcrb
cmp
push
test
sahf
jge
in
loope
jb
out
hlt
cli
dec
lods
pop
or
and
arpl
and
mov
loope
addr16
enter
sbbb
pushf
cmp
mov
jo
xchg
pop
test
insb
loope
or
pop
je
add
scas
bound
ljmp
inc
subl
push
push
inc
addr16
mov
lods
cmpsb
jno
cmpsl
ret
or
in
jo
imul
js
or
rorl
inc
aam
cld
sbb
test
inc
and
cld
push
lods
pusha
pop
orb
out
lahf
sbb
cltd
insb
jle
mov
mov
mov
popf
mov
sub
fiadds
add
xor
pop
aas
jbe
sahf
insb
int
and
movb
mov
lcall
rcl
ja
lcall
stos
imul
xchg
ret
repz
or
xchg
mov
mov
dec
and
xor
ds
mov
cmp
pop
mov
xchg
inc
mov
push
sub
jno
mov
les
cltd
jne
aad
jne
fdivrp
pop
ja
cmpsb
adc
pop
addr16
push
or
and
sub
out
mov
xor
cmp
adc
stos
lcall
fldl
insl
cmp
pop
js
jnp
clc
sub
cmpsb
mov
rclb
push
addb
xchg
loopne
lods
adc
mov
rclb
shlb
fdivs
adc
and
cwtl
daa
inc
int
scas
cmc
loope
jbe
andb
pop
in
insb
mov
sbb
out
fsubl
inc
in
push
adc
mov
sbbb
rol
lock
test
rclb
cmpb
sbb
enter
dec
inc
and
testb
cmp
add
stos
sbb
mov
cmpsl
or
pop
pusha
es
imull
rcl
cmp
out
mov
aad
ret
ja
ret
scas
test
divb
xchg
out
mov
leave
pusha
mov
stos
popf
into
repnz
adc
adc
xor
lcall
mov
mov
xchg
scas
dec
shll
mov
call
aas
jo
pop
and
sbb
pushw
adc
int
cmp
out
pop
cld
and
sarb
lds
xchg
or
jo
ret
jmp
pop
ja
jno
xor
js
mov
or
inc
cmp
mov
pop
dec
les
sbb
sbb
xor
cltd
jbe
jmp
jle
repnz
int
sub
dec
fidivrl
jle
into
xor
enter
ficoml
vmovmskps
pop
sbb
dec
shlb
sbbl
mov
cmc
in
and
insl
hlt
js
fcomps
cmp
xchg
mov
xor
jb
int
and
dec
movsl
stc
dec
mov
inc
push
clc
and
stc
and
scas
mov
stc
cmp
fcmovbe
iret
rcrb
test
or
mov
jmp
push
cmp
or
out
jmp
sub
mov
sbb
scas
mov
subl
stc
xor
pop
imul
sti
mov
frstpm(287
sub
out
push
sarb
popf
dec
out
cs
ret
cmpsl
adc
addr16
push
arpl
mov
inc
repz
pusha
addr16
adc
mov
out
outsl
dec
cli
push
loopne
mov
int3
imul
xor
out
js
mov
insb
fstl
les
aam
popa
add
sbb
cltd
mov
dec
in
enter
mov
testb
ficoml
xor
aaa
xchg
xchg
xchg
push
sub
std
stos
arpl
into
push
xchg
loope
inc
sahf
mov
lds
mov
lods
xlat
xchg
xor
cltd
loopne
pop
aad
iret
sub
icebp
movsb
rdpmc
mov
mov
andl
popf
jl
or
mov
sbb
jge
mov
dec
cwtl
rcl
adc
iret
insb
mov
xor
mov
imul
inc
xor
sbb
adc
sub
ljmp
cmp
jns
dec
jg
lcall
fmuls
shrl
xor
mov
aaa
loopne
scas
mov
daa
mov
test
jne
push
test
pop
inc
sbb
fnsave
mov
scas
jnp
mov
loop
mov
jmp
ret
adc
mov
adc
lock
mov
cmp
xorl
out
mov
inc
push
out
pop
loopne
xchg
shrb
and
inc
mov
das
bound
mov
fildl
mov
shlb
cmpsb
pushf
test
ljmp
nop
xchg
lock
dec
dec
add
dec
mov
lds
in
pusha
sbb
or
cmpb
mov
dec
sbb
lcall
popa
fstl
xchg
dec
mov
mov
add
lret
scas
cs
mov
testb
fnstcw
xor
sbb
sbb
sti
or
aad
inc
sbb
call
jns
test
mov
inc
xor
add
shrl
lcall
pop
push
lret
sub
aas
shlb
out
xchg
in
fcoml
iret
decb
inc
add
push
inc
and
gs
push
into
mov
mov
jmp
mov
shrd
les
es
xchg
notl
cmp
push
pop
insl
popf
push
in
push
pop
popa
mov
or
aas
cmp
and
mov
outsl
jge
push
or
sub
ret
es
out
xchg
clc
fnstcw
lock
mov
aam
cld
data16
mov
stos
rcrb
or
xchg
loop
or
leave
repz
mov
fs
push
push
loopne
inc
mov
adc
out
js
fldl
test
lea
iret
mov
push
xchg
sub
out
xchg
fisttpl
ja
sbb
dec
std
pop
lock
push
pop
jne
leave
mov
adc
or
incb
xchg
popa
insl
xor
dec
call
push
pusha
push
cmpsb
xor
lcall
jb
xchg
and
movzwl
mov
adc
movsb
data16
cmpsl
movsb
scas
dec
dec
pop
nop
call
mov
add
rcr
sub
fidivl
pop
cltd
inc
in
push
add
pop
add
mov
std
xor
stos
add
sub
cmc
cwtl
gs
xorl
sub
into
das
jmp
faddp
and
mov
je
mov
popa
and
sahf
sbb
mov
rclb
adc
notb
adc
mov
sub
fistl
mov
popf
xor
sahf
mov
in
adc
push
test
decb
inc
fsubl
mulb
cmpsb
mov
mov
ret
dec
adc
mov
xlat
push
cmp
shlb
iret
into
outsl
enter
xchg
xor
scas
sahf
and
jmp
ret
rolb
and
mov
sub
arpl
dec
jae
jl
into
cmpsl
outsl
sti
sti
nop
aad
dec
fcom
pop
dec
jg
cmp
mov
mov
clc
jns
xchg
rcr
jecxz
lock
mov
loopne
jge
cli
daa
test
fidivl
insb
adc
cmc
xor
mov
or
xchg
popf
mov
outsb
lcall
lods
fldl
popa
gs
jae
rol
pop
push
mov
cmp
fisubs
lret
scas
stc
jbe,pt
dec
cs
mov
xchg
stc
cld
ret
mov
test
ficomps
xor
cli
test
hlt
inc
call
xor
jp
sti
mov
and
push
idivl
or
iret
int3
int
mov
inc
pop
jns
mov
cmpl
fs
lods
xchg
pop
daa
xor
lods
and
aad
mov
mov
push
pusha
test
in
adcl
dec
insb
imul
fs
test
lcall
andb
mov
cmpsl
gs
std
enter
dec
rorl
push
into
mov
test
jg
fldl2t
push
iret
mull
pop
mov
jno
or
inc
dec
stos
xchg
lods
nop
xor
lahf
cmpsl
aad
pop
xchg
sbb
repz
dec
xchg
loope
fldcw
icebp
jmp
je
or
out
dec
jge
pop
ror
add
xor
jbe
dec
popa
mov
add
adcb
out
repnz
lods
imul
mov
mov
call
mov
inc
popf
imul
lcall
or
pusha
sbb
inc
mov
orb
sbb
nop
cmp
mov
push
dec
jae
ficompl
in
lock
dec
inc
into
das
mov
and
jge
push
loopne
lret
imul
mov
sarl
lods
das
loope
into
inc
cld
jnp
add
dec
leave
test
adcb
lods
pop
push
test
xlat
imul
jne
jbe
pop
sbbl
mov
fistpll
dec
mov
add
test
sub
jne
nop
sbb
int3
cmp
adc
xchg
arpl
adc
dec
lcall
xchg
pusha
pop
or
add
xor
fldcw
insl
es
mov
or
sbb
out
mov
jl
inc
lret
mov
xor
lock
push
xchg
xlat
xor
xor
inc
stos
cld
mov
fisttps
xchg
and
mov
pushf
sub
lods
xor
lea
dec
dec
pop
pushf
cmp
jne
fstpl
test
add
stc
push
xchg
inc
xor
sub
pushf
stc
aad
xor
mov
insb
cmc
loop
popf
jecxz
ret
add
push
scas
sub
imul
ss
call
in
mov
inc
mov
inc
push
test
sub
lock
dec
push
jb
cmpsb
push
pop
sub
or
sbb
mov
ror
and
data16
pop
ljmp
sbb
inc
cmp
cmp
ror
push
and
nop
dec
sub
js
and
cmpsl
ja
pushl
or
in
data16
icebp
push
hlt
shlb
bound
pop
repnz
jns
inc
repnz
or
mov
adc
xor
cmp
dec
rorl
imul
dec
pop
cli
imulb
cmp
mov
cmp
cmp
lea
sti
pop
cmp
adc
add
jae
mov
fs
fdivrs
pop
ljmp
testl
out
sti
mov
jecxz
arpl
pop
push
cmp
adc
and
cli
leave
stc
push
and
mov
iret
dec
xlat
icebp
or
xchg
sahf
mov
dec
and
sbb
mov
pushf
pop
in
inc
scas
in
test
addr16
mov
add
mov
sbb
mov
pushf
jnp
mov
push
js
adcb
pop
inc
mov
mov
fisubl
test
pop
push
inc
repnz
xchg
lahf
push
xchg
mov
in
sub
into
lock
or
rcrl
jecxz
sbb
mov
mov
push
jecxz
and
mov
popf
or
jo
sub
and
aaa
test
in
roll
cltd
or
in
mov
clc
lods
jg
push
fldcw
ds
ret
xchg
call
fnsave
mulb
push
mov
fwait
sub
cld
cmc
shll
popa
jmp
ret
xchg
or
mov
and
cs
shl
xor
add
inc
orb
push
in
jnp
mov
mov
rorl
mov
adc
fwait
mov
cli
push
or
ja
inc
arpl
mov
lret
adc
mov
xor
arpl
cmp
movsb
or
jle
cld
insl
fs
add
xor
bound
repz
push
add
cltd
push
sub
lods
hlt
outsl
ret
lock
out
arpl
nop
fsubp
cltd
leave
and
inc
xchg
scas
jmp
xchg
jne
int
and
sub
sub
cmp
out
inc
lret
pop
rorb
jo
and
stos
sbb
sbb
sub
cs
inc
mov
xchg
and
icebp
mov
addb
aam
cltd
jp
js
cld
out
mov
jl
dec
pop
cmovs
popa
in
mov
xchg
fnsetpm(287
cmp
scas
mov
hlt
mov
cmp
bound
mov
cmpl
cmc
test
mov
repnz
pop
jae
enter
adc
dec
pop
lock
sbb
das
iret
mov
popa
or
mov
arpl
adc
cs
jmp
push
out
lahf
inc
outsl
lret
rorb
cwtl
or
mov
out
fbstp
jnp
xor
ret
cmpl
fucomi
roll
and
jns
pop
addr16
rolb
or
mov
mov
aad
mov
xlat
pop
aas
idivb
add
xchg
outsb
xchg
xchg
jo
mov
sub
xor
add
icebp
sbb
pop
shrl
cmp
inc
in
in
enter
or
xchg
movsb
or
lock
das
or
add
clc
push
inc
stos
jo
pop
add
shlb
pop
mov
sub
jl
roll
pop
sbb
popf
mov
add
pop
adc
lcall
add
out
movsb
mov
push
test
xor
and
cmp
int3
mov
jle
dec
mov
icebp
xchg
loope
movsb
jl
jecxz
mov
les
popf
dec
popa
lea
popa
pop
popa
clc
push
iret
loop
aad
ja
inc
mov
mov
adc
mov
cmpsl
repnz
push
cmp
cmpb
lcall
pushf
enter
out
aad
push
rol
jmp
sbb
into
mov
mov
jg
mov
jns
and
outsb
clc
enter
jmp
adc
pop
mov
adc
pop
push
cmpsb
jns
or
lock
or
je
dec
clc
cli
adc
or
shrl
inc
into
mov
cmp
adc
daa
lods
jecxz
test
daa
mulb
adc
pusha
or
push
subl
sbb
xchg
sbb
je
inc
dec
cmp
sbb
xchg
outsb
add
lea
out
jae
int3
adc
iret
pop
addr16
out
xchg
testl
cmpsl
gs
mov
jg
xorl
xor
jnp
addr16
jne
pushf
jmp
sub
push
mov
je
inc
pop
and
add
in
mov
xchg
nop
loopne
push
inc
xchg
fimuls
outsl
pop
or
adc
push
sub
mov
mov
loope
fisubrs
add
sbb
cmp
mov
and
cmp
ficoms
jns
jns
sub
or
push
mov
aam
xchg
mov
mov
js
jae
sbb
std
and
in
mov
rcll
and
mov
xchg
mov
xchg
sub
add
out
xor
inc
mov
and
pop
fisubrl
mov
sub
popa
sbb
fnstcw
inc
mov
or
ss
icebp
cmp
and
in
cmp
leave
mov
pusha
cmp
je
cs
or
outsl
add
mov
fnstcw
out
jnp
adc
out
into
mov
out
xor
insl
lcall
in
jg
lods
ret
or
mov
jmp
repnz
mov
enter
ret
inc
adc
fisubrs
pop
lods
add
mov
xchg
mov
lods
jl
outsl
adc
hlt
movsl
out
in
xor
sub
ds
stos
jbe
and
push
fcoms
mov
or
add
stc
daa
pop
popa
fidivrl
push
jbe
inc
jmp
daa
pop
dec
jne
dec
pop
fstps
push
daa
mov
sti
or
les
sti
add
int
adc
dec
sub
sbb
shlb
das
fsub
shl
jmp
inc
xor
imul
pop
in
cmpsb
enter
cs
add
and
sbb
sbb
cli
mov
fsub
ret
data16
mov
loopne
push
jg
scas
xchg
imul
push
push
cmp
push
mov
int3
lcall
outsb
and
jne
pop
icebp
movsl
mov
popf
mov
inc
push
jae
pusha
test
and
fisttps
mov
inc
pushf
popa
sub
cld
aaa
je
mov
aam
aad
mov
fs
add
or
and
imul
rorl
mov
or
xor
rclb
or
cld
aam
les
pop
cld
popa
jb
ret
iret
and
sbb
lods
ljmp
nop
cmpsl
sub
xor
add
je
in
mov
fiadds
daa
push
and
mov
sbb
stos
repz
insb
xor
cwtl
mov
mov
sti
add
cmpsb
cwtl
inc
push
sbbb
and
test
cld
pop
push
pushf
popa
inc
cmp
cmp
and
rorl
ljmp
imul
push
ret
iret
fwait
xchg
lods
cmpsl
sub
pop
dec
ljmp
jge
lret
adc
lcall
lss
pop
fsubrl
lret
test
sahf
sbb
sub
push
fldcw
js
mov
orl
addr16
adc
ds
test
cmpb
sub
das
ljmp
jno
outsb
popa
xchg
or
mov
fsubs
mov
adc
dec
and
push
sub
mov
inc
mov
bndldx
fwait
cmpb
sub
jbe
stc
dec
pop
cwtl
dec
aad
lret
jbe
cmpsb
loopne
jbe
or
divl
push
into
adc
ss
and
fcmovnb
scas
sub
xlat
insl
push
mov
call
subl
loop
cmp
jl
mov
les
jge
cmp
xor
test
xchg
dec
es
arpl
neg
xchg
jns
cmp
les
push
negl
xor
data16
imul
iret
sub
test
push
int
ss
movsb
jg
lcall
mov
sbb
popa
xchg
and
imul
add
mov
mov
andb
dec
test
jmp
sbb
dec
test
pop
hlt
jb
adc
adcb
stos
xor
sbb
ljmp
insb
push
mul
cmp
cmp
mov
add
stc
pop
sub
nop
adc
cld
iret
scas
xchg
cmpb
cltd
insl
mov
push
arpl
insb
jae
mov
dec
fs
push
daa
loopne
repnz
mov
test
scas
jo
xor
out
mov
iret
lea
sub
sub
mov
movsb
cmp
mov
xor
pop
pop
das
inc
loope
rorl
fwait
in
out
jmp
ficoms
rolb
xlat
xchg
iret
xchg
xor
pop
into
pop
dec
inc
jge
jae
push
mov
adc
loopne
dec
mov
inc
not
jno
mov
movsl
cltd
in
popa
mov
dec
push
jbe
jae
cli
rcrb
xchg
hlt
and
mov
lcall
shrl
or
hlt
ror
test
jmp
mov
xchg
adc
out
lret
shl
pop
mov
push
xor
inc
cmp
test
bound
sbb
sub
push
pminsw
shr
push
push
inc
pop
adc
loopne
call
out
sbbb
in
sti
pop
out
ret
xor
lods
lds
mov
dec
rolb
into
hlt
push
inc
xchg
fdivrs
adc
xor
pop
cmp
sub
jbe
inc
js
push
xchg
test
clc
call
push
cmp
sub
jbe
inc
js
push
xchg
test
clc
call
xchg
push
sub
pop
jbe
inc
js
push
xchg
test
cld
in
es
or
cmp
sub
jbe
inc
js
test
cwtl
mov
sub
xchg
fists
xchg
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
ror
rcr
ljmp
nop
mov
pop
jo
pusha
jp
or
sbb
sub
cmp
loopne
nop
mov
ret
inc
pop
adc
jp
data16
xor
and
push
ljmp
scas
stos
mov
jns
sbb
dec
fs
jl
mov
orb
push
mov
pop
test
in
add
add
xor
and
cmp
cmp
jo
gs
mov
pop
cmp
ds
cmc
jg
push
out
or
sub
imul
test
test
rcrl
pop
xchg
out
push
sbb
xlat
xor
add
inc
sbb
scas
sbb
or
test
adc
sub
inc
push
mov
movsl
hlt
out
sahf
lcall
and
das
mov
jge
insb
add
adc
shrb
jo
ret
push
jo
and
sbb
sub
das
dec
pop
push
icebp
cli
push
mov
dec
mov
inc
or
xchg
xchg
outsl
popf
or
xor
and
mov
xchg
ljmp
mov
push
mov
push
push
jp
or
sbb
sub
push
mov
ljmp
in
mov
pop
adc
dec
outsb
jg
push
inc
je
scas
movsl
mov
stc
out
inc
ret
cmc
fidivs
add
and
sbb
imul
mov
cwtl
mov
ret
movsb
sbbb
dec
inc
pop
jo
pusha
jp
or
sbb
sub
cmp
lret
lock
mov
mov
pop
jo
pusha
jp
or
sbb
sub
cmp
lret
xor
and
pop
push
clc
cmp
dec
pop
aam
cwtl
jmp
inc
inc
mov
icebp
test
sbb
push
fdivrp
and
filds
fcoms
imul
sbb
jb
cwtl
xor
pop
fs
push
lret
sub
rcrl
xchg
dec
aas
insl
dec
cs
xchg
call
push
inc
lahf
dec
call
mov
out
jg
sti
out
push
loop
stos
xchg
roll
mov
push
mov
xor
jae
gs
adc
cwtl
in
pop
addl
or
cmp
pop
jl
lret
mov
cli
clc
scas
mov
addr16
shlb
imul
stos
add
add
lock
mov
sub
lret
cmp
out
jnp
mov
adc
cmp
cmp
mov
dec
push
xchg
cmc
pop
mov
or
aam
jns
mov
add
fst
sarb
movsb
cld
int
rol
decb
icebp
shl
or
push
jae
jbe
lahf
ljmp
dec
cmpsb
sbb
ljmp
enter
in
stos
and
ss
ja
dec
xor
xchg
push
in
xchg
jnp
adcl
lahf
dec
and
pushf
cmp
popf
push
iret
mov
repz
ret
and
repnz
and
dec
aam
adc
fildl
jno
repz
mov
add
repnz
sbb
cmc
adc
dec
cmp
and
lahf
and
inc
pop
int
and
popf
data16
or
lock
icebp
pop
jg
mov
fimuls
mov
or
mov
xchg
fwait
or
mov
and
stc
insb
xchg
mov
in
cmp
lea
lods
lret
stc
out
jb
fwait
pop
push
push
add
sbb
lret
clc
jge
mov
mov
xor
sti
pop
mov
pop
pop
popa
xchg
fs
icebp
cmpsb
lock
or
push
mov
pop
popf
pop
mov
ficoms
movsb
aas
xor
cmpsl
adcl
dec
push
mov
sti
mov
pushf
xchg
jbe
or
cmc
popa
inc
enter
xchg
sbb
sahf
inc
test
sbb
adc
lods
fnsave
sub
mov
fisubrs
aad
mov
cltd
in
inc
mov
xor
xorb
push
enter
sub
int
push
daa
daa
jge
mov
cmp
std
fistpl
sub
inc
xor
push
mov
pusha
imul
les
out
xchg
cmp
and
jmp
and
stos
test
jae
ss
shll
ret
sbb
fimuls
in
lret
xchg
fimull
sahf
cmp
stos
das
lods
rcll
inc
cmp
hlt
mov
inc
pop
pop
push
mov
repnz
mov
pop
and
cmp
test
pop
jle
repz
push
int3
mov
xor
mov
pop
lcall
lcall
test
mov
mov
fsub
mov
dec
cmp
xor
cmp
or
lcall
xchg
test
insb
fnstenv
fnstcw
mov
xchg
cmc
sub
lods
push
xchg
fsts
dec
and
add
cs
je
out
cmpsl
dec
mov
and
xorl
std
dec
fbld
fidivl
pop
lret
mov
jecxz
xchg
jns
mov
fsubl
adc
sub
mov
jl
xor
add
sbb
les
rorb
push
mov
cmp
xchg
and
or
push
pop
in
push
int3
fistpl
clc
outsb
jo
xchg
out
add
mov
clc
dec
clc
mov
inc
das
iret
cmpb
lahf
hlt
pushf
add
je
out
aad
jp
dec
loopne
rorb
mov
aaa
stos
aas
add
pushf
cmp
les
xor
jge
scas
adc
imul
data16
loop
fwait
and
stos
xchg
jg
sub
out
pop
push
cltd
clc
aad
daa
and
aam
pop
inc
fdivrs
add
dec
repz
xchg
scas
lds
dec
mov
and
xlat
push
and
sarb
xchg
in
enter
pop
mov
mov
jle
push
pop
push
mov
pop
xchg
loope
xor
aam
repnz
jae
sti
cmc
jno
lds
fwait
cwtl
xor
push
std
inc
push
pushf
shr
sub
lea
int
add
mov
mov
push
add
mov
cmp
adc
cwtl
fcmovu
rcrb
cmp
inc
mov
xor
mov
lock
push
push
sub
pop
push
cli
in
cli
fistpl
loop
xorb
insl
pop
mov
js
mov
aad
jb
jecxz
add
mov
test
gs
hlt
mov
mov
mov
lret
sub
push
jl
dec
aam
sbbl
xchg
xchg
inc
aas
push
xor
or
lds
dec
xchg
xchg
int3
iret
ljmp
fsubrs
xchg
mov
out
sub
pushf
fdivp
mov
xchg
pop
push
add
daa
jge
movsl
pop
jne
pop
test
mov
fsubs
imul
jnp
adc
push
insl
adc
cmp
mov
sbb
jns
clc
imul
jo
xlat
mov
cmc
pushf
mov
loope
mov
test
lcall
cld
add
div
andl
in
xchg
adc
sub
jo
adc
in
jnp
push
test
test
or
sbb
mov
sarl
je
add
int
lret
enter
in
and
cmc
repnz
in
in
out
or
hlt
mov
daa
cltd
push
adc
pop
add
xchg
and
leave
and
jmp
xchg
and
int
cmp
cmp
add
cmpsl
in
loope
out
inc
mov
sbb
in
fwait
lret
sbb
inc
pop
mov
xchg
mov
mov
imul
sahf
lret
imul
divb
sub
mov
jmp
lock
add
fwait
push
faddp
jnp
ficompl
adc
cmp
adc
push
push
roll
enter
inc
cmp
lea
mov
test
daa
ss
cli
jae
pop
es
sbb
adc
dec
xor
mov
movsb
testb
push
out
or
repz
sti
sub
push
jl
nop
sub
call
lahf
push
in
and
das
iret
loope
cmp
arpl
lock
loop
or
cmp
loope
cmpsl
mov
cmpsb
cmc
testl
add
adc
inc
aaa
jb
icebp
gs
xchg
ljmp
clc
aad
aaa
mov
jo
rcll
loopne
fucom
fistpll
pop
icebp
pop
lret
mov
cli
pop
adc
cwtl
insl
sbb
jl
sti
mov
cmp
test
mov
stos
pop
bnd
pop
lret
xor
mov
push
pop
add
sahf
pop
push
insb
mov
mov
sub
dec
ss
insb
mov
cmp
pop
aaa
cmc
cmp
dec
orb
imul
pop
mov
mov
rorb
sub
dec
inc
mov
out
aaa
loope
out
int3
inc
xor
mov
mov
lods
addl
in
sub
test
insl
pop
xor
ficoml
jb
push
bound
cmp
loop
inc
subl
jecxz
imul
shrb
addl
pop
lock
repnz
inc
aad
push
push
or
sbb
cwtl
push
cmc
lea
add
rclb
sub
arpl
roll
cld
mov
sbb
in
out
pop
sub
add
test
popf
xor
xor
cs
cmpl
mov
sub
ljmp
movsb
pushf
repnz
ret
jae
aad
negb
pop
out
int
cmp
out
cli
push
pushf
sbb
jne
lods
jns
pop
cmp
cmpsb
xor
das
add
push
add
fsubrl
add
sub
adc
and
test
call
pop
scas
int
and
inc
das
in
int3
adc
cmpsb
xor
movsb
cmp
push
mov
sub
fisttpl
imul
xor
add
or
and
mov
mov
cmpsl
fadd
fwait
and
je
fs
xchg
and
sub
rorl
icebp
imul
stc
xchg
mov
mov
inc
cmp
lret
sub
call
mov
pop
insl
js
fdiv
add
xchg
pop
test
icebp
mov
in
push
loopne
mov
inc
nop
inc
cmpl
and
sub
adc
loop
or
fcomi
mov
mov
cld
movsl
stos
lea
dec
loop
inc
pop
xlat
and
jo
orb
adcb
sbb
pusha
and
or
fbstp
push
xchg
out
pop
xchg
ja
daa
lods
mov
jnp
imul
sbb
andl
sti
ljmp
xor
push
in
ficoms
into
repz
fnstcw
cld
fbld
inc
fcmovnb
out
dec
int3
cmp
xor
xchg
jle
in
xor
cltd
aam
fcoms
sbb
add
or
pop
popa
inc
xor
data16
fdivs
repnz
dec
fnsave
pop
fstl
sub
pop
dec
outsl
out
push
popa
sub
mov
aad
jg
pop
sti
pop
jmp
lods
adc
sti
out
dec
lret
xchg
enter
xor
jo
jg
les
out
sti
jb
jno
mov
cmpsl
mov
scas
xor
loopne
xor
add
dec
int3
mov
mov
mov
andl
cld
sub
popa
mov
dec
xchg
aas
jg
jecxz
outsl
scas
inc
sub
dec
cs
imul
jb
out
sbb
ror
aad
por
inc
ljmp
and
xchg
adc
sub
loopne
bound
aam
lcall
mov
cwtl
stos
push
sub
mov
test
mov
int3
jo
xor
cli
rorl
mov
cmp
in
xor
sbb
cltd
fs
cmp
aaa
dec
dec
into
adc
rclb
add
ss
mov
icebp
mov
sub
xchg
cmpsl
pop
and
jp
jo
mov
ret
test
fisttpl
daa
nop
mov
movsb
adc
dec
jle
ljmp
arpl
push
push
pop
gs
loop
mov
popf
int
mov
or
mov
mov
adc
loope
push
and
mov
and
fcmovbe
add
in
hlt
xchg
or
push
jle,pt
lods
sbb
fldl
es
pop
mov
mov
fistl
add
sar
roll
add
rcrb
and
push
xor
fwait
mov
pushf
je
cmp
enter
dec
cmp
cmpsb
scas
fisubrs
push
movsb
fmuls
add
sub
and
stos
stos
push
rcll
xlat
mov
or
jecxz
shlb
nop
lret
out
xor
jae
lods
mov
jp
es
repz
cwtl
fsubl
jle
cs
icebp
cmp
or
clc
sahf
scas
jmp
jle
xor
lret
inc
mov
repnz
sbb
leave
stos
mov
and
mov
adc
mov
in
adc
sbb
repz
stos
add
adc
xor
mov
bound
outsl
imul
xchg
push
mov
sbb
cltd
jae
lods
out
pushf
sahf
out
xchg
mov
xor
test
dec
mov
subl
rorl
popa
sbb
pushf
fisttpll
repnz
js
sub
jne
pop
fidivl
push
cmpb
xor
lcall
movsb
subl
sti
mov
idivb
movsb
je
sbb
fdivl
mov
les
rorb
cli
lcall
stos
jl
pop
movsb
and
call
dec
inc
mov
cld
and
xchg
jae
cmpsl
pop
scas
in
mov
sarl
das
pushf
cwtl
xchg
cmpsl
push
aam
test
mov
mov
stc
jp
jecxz
push
andl
inc
cmp
fdivs
pusha
pop
outsb
cmp
jnp
mov
test
xor
pop
add
int3
xchg
mov
sub
cmpl
mov
test
mov
jmp
inc
int3
lcall
pop
pop
lds
rorb
cmp
aam
in
cmpsb
push
dec
mov
stos
cmp
cmp
mov
test
mov
test
sub
repz
mov
cmpsb
dec
and
inc
addr16
ja
mov
mov
mov
scas
out
mov
idivb
nop
js
sarb
cld
ja
jns
call
test
jno
mov
adc
test
cltd
mov
cmp
adc
bswap
or
popf
dec
or
sub
inc
clc
lcall
std
icebp
mov
pop
int
cltd
fucomi
aaa
loopne
movsb
pop
sahf
xor
mov
stos
shll
adc
inc
ljmp
clc
jno
push
xchg
bound
adc
daa
icebp
sub
sahf
adc
inc
pop
pop
mov
mov
xorb
sub
hlt
fldl
or
cmc
imul
sub
adc
mov
push
lret
or
jno
mov
sub
setno
les
xor
push
or
pop
icebp
mov
mov
sbb
js
push
jge
dec
mov
sub
push
xor
shlb
push
cltd
pop
int3
flds
mov
jl
dec
mov
jle
ret
xor
jno
movsl
sarb
clc
sbb
int3
insb
and
mov
mov
scas
fdivrs
bound
jecxz
je
lret
add
jecxz
lahf
cltd
xor
scas
cmp
mov
dec
arpl
mov
in
test
cmp
enter
sbbb
mov
inc
sbb
daa
add
out
mov
notb
lret
add
jne
loopne
shll
sub
scas
jae
or
dec
addr16
or
pop
aaa
repz
inc
iret
jnp
sub
cmp
movsl
js
out
add
mov
jne
jle
mulps
out
cwtl
scas
jo
clc
push
out
xor
mov
jp
xchg
jg
add
stc
into
cld
daa
jg
das
out
dec
and
aad
movsl
cmpsl
jb
or
xor
je
inc
pushf
ja
rcrl
pop
loopne
xchg
xchg
out
mov
lret
addr16
mov
fisubrl
imull
jne
mov
push
imul
lret
mov
jbe
mov
vmovupd
mov
test
xchg
mov
inc
xchg
pop
ds
icebp
mov
add
outsb
dec
lods
std
sbb
push
inc
mov
jno
cmp
jge
sub
ja
fidivl
push
ret
inc
jb
ret
xor
inc
xor
out
inc
cmc
xor
xchg
or
sub
es
lods
nop
mov
test
rolb
test
jns
bound
cmc
nop
dec
jb
pop
cmc
rolb
gs
outsb
rcll
rorl
push
mov
mov
xor
ficompl
xchg
sahf
inc
mov
adc
mov
daa
fldt
pop
icebp
adc
xchg
nop
test
outsb
xor
dec
fs
popa
aam
push
jge
push
inc
out
imul
fwait
dec
xchg
notl
js
adc
and
outsb
leave
lods
dec
notb
mov
xor
bound
dec
in
or
adc
and
ret
lret
push
filds
xor
inc
and
or
xchg
stc
push
xchg
mov
pusha
fnstcw
cs
cmp
in
aaa
mov
xchg
les
scas
push
mov
mov
rolb
aas
adc
mov
sub
mov
leave
pop
insl
in
in
inc
push
ret
pop
aad
imul
add
fs
or
pop
gs
jp
push
jecxz
int
hlt
push
pop
sub
inc
lret
scas
or
xor
xchg
out
pop
int3
loop
in
test
cltd
add
sub
xchg
add
aaa
mov
test
fs
mul
addr16
cmp
add
or
xlat
dec
mov
mov
js
cmc
pop
int
ljmp
test
ljmp
xor
idivl
je
cli
repz
or
fcom
movsl
push
inc
dec
add
or
or
push
shlb
push
adc
popa
pusha
xchg
stos
inc
out
cltd
cmc
ss
sbb
call
xor
push
sbb
mov
int3
jl
cmpsl
pushf
xchg
mov
je
leave
out
loop
subb
jno
repz
inc
mov
fidivrs
xor
or
lds
loopne
adc
mov
leave
popf
xor
fsubrl
push
outsb
dec
fimuls
xchg
xchg
or
inc
add
aaa
leave
repz
push
clc
xchg
iret
lods
repz
dec
icebp
add
jmp
rcrl
cmp
insl
iret
mov
ret
aaa
inc
fwait
and
add
add
cwtl
dec
bound
lret
lret
cmc
xchg
sbb
dec
cltd
pop
and
push
cmpsl
cmp
xor
xor
mov
mov
mov
gs
jecxz
or
push
or
lods
rcll
adc
push
mov
jbe
or
out
dec
es
pop
sbb
in
mov
loopne
dec
cmp
add
rcrl
xchg
jmp
insb
in
sti
ljmp
int
scas
mov
add
insb
clc
push
push
or
mov
xchg
js
lahf
aaa
sub
cmp
pop
add
into
adc
cmpsl
ret
pop
cmp
dec
test
and
jb
fidivrs
imul
xchg
stc
sub
imul
shrb
sahf
addr16
in
adc
sbb
adc
or
insb
test
daa
mov
enter
xchg
in
mov
mov
inc
cld
push
clc
or
sbb
mov
leave
sub
aaa
lret
scas
pop
jle
push
jae
jmp
adc
xor
sub
cmp
lret
loope
add
add
loopne
mov
negl
iret
mov
rorl
and
insb
test
pop
sub
push
mov
dec
or
lods
sbb
add
mov
shlb
in
sub
cli
in
push
in
cmp
jno
sbb
pop
js
mov
add
clc
and
test
cmpl
cs
pop
dec
out
lea
mov
and
cmpsl
push
popf
popf
pushf
add
and
ss
push
or
xor
std
push
and
in
xor
adc
imulb
pop
in
dec
mov
xchg
inc
add
or
in
cmp
movsl
aad
inc
xchg
fdivrs
loope
pop
int3
inc
add
rcrl
inc
out
inc
cmp
jl
mov
push
push
push
loope
mov
inc
inc
and
mov
sbb
dec
jecxz
push
test
mov
stos
jp
outsl
mov
jns
outsb
test
aaa
adc
pop
cmpsb
dec
movsl
jne
aaa
mov
call
push
sbb
clc
das
fisubrl
fwait
or
repnz
cltd
testb
jecxz
sub
push
mov
imul
dec
stos
adc
cmpb
cmp
leave
icebp
fmuls
fwait
scas
push
cmp
inc
stc
sti
mov
mov
ss
stc
xor
jmp
icebp
inc
call
and
faddl
push
jecxz
add
rolb
arpl
out
xor
aas
push
pop
rcll
fstp
pusha
pop
popf
mov
test
xor
repnz
je
mov
push
sbb
addr16
cmp
out
mov
pop
cmpsl
hlt
mov
testl
mov
xor
pop
orl
jp
mov
shrl
jge
bound
mov
sbb
dec
push
daa
jp
sub
iret
imul
leave
and
popl
imul
sub
dec
fwait
test
push
call
cmp
outsl
jo
ret
sub
int
lret
lds
mov
mov
sub
sbb
hlt
test
ljmp
js
out
sbb
adc
inc
lahf
sahf
inc
dec
movsb
call
mov
jp
mov
or
popa
xor
mov
inc
sub
cwtl
xchg
int
loope
push
into
add
jb
xchg
dec
out
xchg
push
cld
sub
mov
push
daa
xor
pusha
xchg
pop
sub
cwtl
enter
cmp
or
push
dec
push
mov
mov
ljmp
mov
mov
pop
jo
pusha
jp
or
sbb
sub
cmp
lret
lock
mov
mov
pop
jo
pusha
jp
or
sbb
sub
cmp
lret
nop
ljmp
mov
pusha
mov
subb
adc
adc
xor
enter
pushf
fisubrl
mov
mov
fisubrl
or
iret
aad
lds
iret
mov
ficomps
stos
sbb
cmp
sub
imul
pop
mov
fwait
ljmp
scas
fstpt
or
jg
inc
cmp
add
imul
pop
mov
cmp
lahf
fcomi
jmp
sti
lods
or
pop
pop
cs
sub
sub
jnp
stos
cli
mov
les
jo
ret
in
andb
cmp
not
xor
in
fs
mov
jo
pusha
mov
xchg
adc
les
sbb
pop
pusha
cmp
xchg
cmpsb
rcll
inc
and
les
dec
mov
ret
call
out
mov
fbld
dec
sti
adc
ljmp
sbb
pop
mov
lock
cmp
add
xor
xor
sti
mov
or
cmpsb
scas
mov
sbb
sub
arpl
xchg
mov
push
dec
dec
jmp
dec
cmp
das
fistpl
or
jecxz
jne
arpl
scas
fstpt
or
xlat
sub
arpl
pop
shrl
jnp
out
out
clc
nop
in
mov
mov
test
jg
jnp
jle
pop
ljmp
push
jnp
jbe
test
cli
mov
std
nop
in
scas
out
lods
jns
jl
push
sbb
ds
add
insb
in
pushf
fwait
pop
in
mov
fstpt
or
jg
dec
cmp
das
pop
aas
imul
pop
mov
fwait
ljmp
scas
fstpt
or
jg
dec
cmp
das
pop
aas
imul
pop
mov
cli
test
sbb
sub
mov
ficoms
leave
push
push
push
lret
pop
clc
movsl
jo
inc
pushf
add
ret
pop
scas
clc
cmp
fldt
cmp
xchg
push
ds
push
xchg
adc
int
sti
out
iret
movsl
fisubs
pop
dec
pusha
lods
rcrl
mov
loope
in
jp
sub
pop
cli
xorb
daa
lahf
aam
test
in
in
out
push
xchg
cmp
std
rol
adc
je
adcl
movsl
je
and
push
mov
or
push
dec
insb
jmp
jg
jne
mov
inc
add
sub
lods
pfpnacc
pop
add
cmc
push
daa
fcmovnu
cmpsb
push
in
pop
cltd
dec
lahf
mov
fiaddl
mov
fcmovnu
shll
and
insb
fildll
loopne
pop
ret
or
add
jp
push
mov
in
cmp
sbb
jbe
cmp
mov
loopne
mov
add
mov
cmp
icebp
out
ficoms
arpl
and
push
inc
cmc
mov
push
inc
sub
push
lds
movsb
push
movsl
jl
push
fldenv
jnp
out
push
aad
cld
inc
popf
repz
or
pop
pop
stc
jno
sub
sbb
movsl
lcall
testl
pop
cwtl
jg
mov
jbe
jb
sbb
jmp
push
imul
sub
adc
jb
cmp
dec
std
int
fisttps
notb
loopne
imul
lret
fs
les
iret
loope
add
inc
push
or
add
dec
cmp
lret
arpl
sub
mov
adc
shll
push
and
mov
mov
stos
or
jp
xchg
ds
fstps
mov
clc
jo
dec
or
out
shll
inc
fimull
bound
mov
lods
push
dec
mov
stos
xor
fcoml
dec
push
push
inc
push
mov
xor
inc
and
sbb
push
mov
scas
mov
xorl
fadd
lret
jne
sub
mov
andb
push
add
sbb
loop
mov
jge
dec
ja
sub
nop
xchg
cmpsb
js
mov
movsb
xchg
es
inc
xor
aad
sbb
push
jbe
sub
pop
in
movsl
ret
insw
pop
fstps
xchg
mov
xchg
rorb
out
mov
jg
jl
cmp
in
add
fiaddl
push
dec
enter
fwait
cmc
popa
add
add
push
out
in
mov
sahf
cmc
jno
mov
fs
stos
fidivs
push
das
push
and
aad
adc
test
sbb
mov
data16
jp
dec
xor
daa
in
rorb
call
jbe
movsb
outsl
test
cmp
mov
cli
shlb
lds
pop
fs
aas
xchg
hlt
dec
sub
or
or
lcall
xor
cmp
out
les
bound
call
je
sbb
stc
aad
push
daa
movsb
and
leave
cmpsl
pop
xchg
jbe
pop
shlb
cwtl
insl
sbb
add
cltd
add
pop
inc
jno
push
cmp
sub
imul
xor
mov
cmp
aad
sub
jmp
int3
cmp
into
sbb
test
stos
or
jnp
sbb
pop
popf
mov
mull
ja
clc
scas
pop
inc
sbb
ret
insl
add
and
imulb
fldpi
mov
mov
movsb
pop
or
xchg
cld
popf
or
aam
push
aas
les
dec
iret
lods
stc
mov
dec
sbb
icebp
inc
xchg
pushf
nop
pop
test
dec
push
lret
std
and
inc
aad
cwtl
aad
adc
lcall
xchg
push
xor
in
das
xor
out
testl
push
aaa
mov
fadds
or
mov
pop
mov
mov
mov
pop
jns
dec
xchg
and
mov
fsubl
pusha
push
movl
add
cltd
aas
out
fstps
jge
pop
test
pminub
insb
push
push
rol
cld
add
jle
cltd
or
sbb
inc
test
addb
loop
or
aad
rcll
sbb
jmp
dec
pop
mov
mov
stc
mov
mov
cli
pop
ljmp
ret
xchg
mov
lret
cli
xchg
and
lock
es
xor
scas
xor
push
leave
mov
push
je
aad
xchg
or
inc
xchg
jno
fnstenv
adc
out
lret
jne
sti
push
les
fs
cli
stos
and
int
push
dec
cmp
imul
popf
mov
imul
inc
dec
dec
sbb
iret
outsl
ljmp
pop
rcl
mov
jle
ss
xchg
inc
or
adc
push
mov
mov
iret
movsl
jbe
or
mov
pop
popa
adc
das
insb
push
adc
sub
mov
notl
push
int3
fstpl
and
pop
xchg
idivl
daa
rcl
es
rclb
inc
jns
test
leave
daa
ficoms
dec
cs
shl
fisubrl
aam
mov
dec
fisubs
cwtl
sub
xor
mov
or
xor
add
xchg
cmp
xor
jae
mov
sbb
sub
nop
clc
bound
rcrl
movsb
cld
add
sbb
push
daa
test
sbb
jo
out
mov
mov
mov
inc
push
add
loop
lcall
pusha
pop
xchg
fldenv
mov
divb
push
and
rclb
gs
jle
pop
pop
and
mov
outsb
add
fs
je
sbb
mov
dec
add
push
lcallw
dec
push
fldl
dec
mov
scas
or
out
inc
dec
aaa
jnp
push
inc
cmc
mov
sbb
cmp
stos
add
subl
std
lret
push
or
mov
push
jb
icebp
clc
add
jg
inc
fs
jge
out
shl
sarb
dec
ret
sbb
xor
cmp
mov
cld
or
orb
jmp
or
cld
fiadds
test
sbb
add
dec
popa
jl
jbe
call
inc
fildll
lods
outsl
icebp
sbb
shll
sarl
sub
xor
cli
arpl
addl
xlat
outsb
in
push
mov
int
bound
adc
lahf
push
mov
adc
dec
dec
mov
xchg
pop
aam
loope
jae
adc
ret
leave
push
add
enter
in
lds
popf
xchg
loop
mov
add
ss
call
mov
cwtl
das
dec
xchg
xorb
lock
orl
mov
and
loope
mov
adc
xchg
wrmsr
ret
js
notl
mov
jg
int
fiadds
clc
mov
and
lahf
or
xchg
jo
push
imulb
push
sub
repz
push
push
jge
mov
cwtl
fwait
pushf
daa
dec
dec
inc
inc
xlat
fsubl
xchg
adc
jle
fs
insl
ret
cltd
scas
push
bound
scas
das
cmp
and
je
inc
les
or
jp
adc
pop
or
pop
add
cltd
les
test
sarl
jne
pop
sbb
mov
fldl
mov
lahf
adc
xchg
mov
mov
mov
mov
mov
scas
scas
enter
lret
and
fwait
xor
inc
in
cmpl
cmp
js
jp
and
out
cmp
shll
lea
int
pop
loope
gs
jo
movsl
movsb
sbb
push
std
pop
mov
ret
dec
fistpll
scas
sbb
cs
out
mov
subl
outsl
add
testb
aam
cmpsb
cmp
push
in
cld
pop
pop
iret
outsb
mov
ljmp
aaa
out
in
aam
xor
sbb
int3
add
addl
mov
pop
stc
dec
stos
sub
dec
xchg
js
shll
and
fwait
cmp
dec
sahf
cmp
adc
and
scas
inc
sbb
sbb
push
test
in
mov
inc
ficompl
push
ja
rol
cmp
ja
jo
fnstenv
cmp
add
mov
mov
cmp
std
cmc
ja
js
xchg
xor
jbe
mov
pop
dec
stos
and
orl
pop
push
outsl
inc
push
pop
mov
enter
lds
xor
adc
into
outsb
inc
jb
jl
mov
fs
lcall
cmp
jo
sub
push
decl
xchg
mov
rorb
mov
pop
jns
int3
in
pop
ja
add
jae
jnp
push
adc
xor
das
push
ljmp
rcrl
mov
rorl
inc
dec
loopne
enter
sbb
nop
push
data16
mov
ljmp
add
mov
sbb
test
sub
scas
dec
mov
lods
das
aaa
xchg
daa
pushf
dec
adc
xor
lcall
adc
xchg
dec
cmp
loop
xchg
aam
mov
sbb
inc
sbb
outsl
pop
sahf
hlt
incl
and
push
mov
push
cld
outsl
xchg
test
insl
or
dec
sarb
ret
cli
adc
fs
jmp
lcall
aam
cmp
jecxz
xchg
and
jno
orl
jnp
ss
enter
jmp
aam
pusha
xchg
or
lret
xchg
xchg
or
insl
in
mov
insb
jns
ficoml
pop
dec
xor
or
imul
fsub
insl
push
pushf
test
dec
or
push
sub
scas
dec
out
jg
jb
cmc
js
into
push
pop
mov
xchg
pop
or
imul
jle
call
int
out
test
cld
test
hlt
aaa
andb
scas
imul
cmpl
pop
push
stc
popf
jl
or
push
mov
subb
dec
ret
inc
outsl
popf
les
pop
js
fnsave
fsts
fldl
and
dec
jns
hlt
or
stos
subb
out
cs
sub
xor
xchg
data16
xor
dec
in
or
movsb
repnz
mov
add
inc
cltd
mov
outsb
test
iret
adc
std
mov
add
xchg
clc
fbstp
sti
jl
out
dec
xor
and
imul
mov
data16
add
adc
sbb
pushf
or
push
pop
lds
cmp
fimuls
je
mov
cmc
dec
pop
stos
lcall
add
mov
mov
lock
out
xchg
sub
arpl
add
mov
add
mov
and
dec
hlt
pop
add
inc
jnp
xchg
mov
inc
fs
fdivs
mov
inc
dec
xor
je
push
adc
lcall
dec
aaa
cmp
outsl
xlat
int3
into
faddl
in
pusha
pop
add
mov
int3
mov
xchg
push
cmpl
pop
ljmp
cmp
nop
inc
pop
mov
inc
test
mov
inc
jp
stos
push
test
cwtl
or
out
jge
sbbl
push
jmp
sti
add
xchg
mov
mov
in
fnstcw
xchg
outsb
jne
jns
sbb
sub
in
rol
nop
push
in
out
mov
aam
out
sbb
jecxz
dec
mov
dec
dec
daa
in
push
xlat
xchg
xor
cmpsl
movsl
push
push
dec
push
push
mov
sti
jbe
xchg
add
dec
lret
fists
dec
fnstcw
jo
push
mov
jb
adc
sub
cmp
icebp
jnp
orl
clc
or
dec
mov
mov
lods
cli
ret
sbb
out
push
inc
or
pop
cwtl
and
mov
cs
mov
sbb
adc
xor
aas
add
aad
mov
sbb
imul
inc
push
sbb
scas
or
dec
jno
dec
add
inc
mov
and
xor
inc
rcl
leave
and
mov
or
lahf
enter
adc
incl
daa
push
cwtl
sarb
in
cmc
cmp
out
add
call
in
cmp
jge
lods
ljmp
push
xor
fidivrl
dec
inc
es
das
sub
xlat
add
sub
fisttpll
rorb
mov
mov
push
cltd
sbb
ljmp
push
or
pop
fmuls
stos
or
lds
shlb
fs
dec
sbb
icebp
pop
jmp
and
test
dec
out
pop
mov
mov
inc
xor
and
cs
xor
xchg
sbb
sbb
push
fmuls
dec
lret
push
inc
sbb
rcl
adc
mov
call
sub
pop
out
data16
subl
shlb
ds
ljmp
lret
pop
sbb
movl
cmpb
mov
mov
in
divb
test
inc
outsl
pop
gs
cltd
rclb
push
jle
mov
rcll
cltd
add
adc
add
les
jle
xor
je
and
or
fiadds
dec
movsl
jl
or
orl
mov
and
jnp
dec
and
jne
lds
fdivr
pop
repnz
repz
mov
push
and
mov
or
push
mov
sub
and
mov
jno
call
ss
ds
mov
mov
outsl
jnp
mov
aad
out
xor
or
nop
add
push
iret
cmovl
xchg
stos
nop
mov
syscall
mov
je
xchg
jmp
add
and
pop
popf
fsubrs
cmp
or
jge
xchg
mov
xor
mov
xor
jmp
sbb
movsl
jbe
rcl
jbe
mov
cmpsb
push
adc
add
stos
fistps
data16
sbb
sub
das
sub
pushl
adc
cwtl
lods
in
scas
movsl
stc
fisubs
sub
lcall
popf
dec
movsl
cmp
clc
addr16
bound
xor
out
cmp
sub
inc
in
and
addr16
insb
popa
cmpsb
mov
xchg
or
mov
sarl
xlat
das
inc
daa
add
dec
xor
sub
leave
int3
in
nop
shr
repz
or
test
outsl
xadd
cwtl
loop
bound
mov
jecxz
test
adc
cmp
jl
aam
arpl
xabort
js
fimuls
and
fisttpll
push
cli
dec
inc
add
add
jo
test
add
ss
sub
sbbl
sub
cs
push
jle
fldt
int3
sbb
sub
fistpll
sbb
loopne
push
out
ds
and
jne
je
push
or
into
addr16
mov
push
push
cwtl
clc
sub
add
shlb
or
lods
loopne
daa
loopne
jl
mov
mov
movsl
mov
cmp
loop
sbbb
push
cld
jle
popa
mov
jecxz
hlt
fstpt
inc
test
xor
insb
jbe
fistl
adc
out
aam
test
adc
test
xchg
addr16
push
cmp
push
sub
dec
pop
pop
push
into
adc
add
sbb
push
loopne
sbb
outsb
test
icebp
mov
repz
lret
int
loop
hlt
xchg
sarb
inc
rorb
mov
push
and
inc
push
jnp
fbstp
icebp
and
js
adc
jmp
out
xor
push
out
push
fmull
data16
inc
rcr
xchg
fidivrl
js
jb
insl
out
test
and
xor
cmpsb
fldt
xor
mov
sbb
sahf
pop
jg
mov
or
cmpsb
in
outsb
jl
insb
fldl
xlat
push
jno
xchg
ljmp
and
mov
push
adc
aad
push
stos
daa
test
push
loope
imul
aam
dec
je
gs
push
adc
jp
leave
pop
enter
sub
in
cmp
adc
movsb
push
mov
cmp
ss
push
xor
gs
jg
gs
xor
popf
push
scas
fsubs
jecxz
add
dec
rcrb
push
xchg
jp
test
fiadds
bnd
sbb
adc
cmp
int
repnz
rcll
pusha
push
movsb
xchg
mov
or
push
icebp
sbb
jge
inc
les
in
sbb
push
inc
lret
mov
movsb
sub
jbe
mov
cmpsl
cwtl
mov
mov
movsl
xchg
mov
dec
iret
mov
out
loopne
test
cmp
out
int
nop
cmp
pop
add
mov
jge
xchg
scas
cmpsb
push
pop
mov
inc
lcall
mov
cmpsb
lcall
pop
mov
shll
ret
cld
sar
scas
mov
push
adc
pop
mov
cmp
add
iret
push
lret
cmp
aaa
inc
test
lcall
pop
sahf
dec
lcall
ret
enter
mov
push
ss
cli
fstpl
xchg
sahf
inc
loopne
loopne
pop
jl
nop
pushf
pushf
pushf
add
out
cld
cmp
inc
scas
sbb
xor
xchg
aam
mov
inc
int3
push
pop
iret
es
call
cwtl
mov
sub
hlt
add
sub
push
xchg
or
push
inc
jg
les
lcall
cmp
test
add
mov
xlat
fs
add
cmp
mov
ret
mov
fidivrl
imul
inc
loop
xor
adc
test
sbb
xchg
les
sub
mov
jae
fnstsw
pop
out
sub
adc
mov
push
addr16
out
jno
or
popa
leave
xchg
mov
jbe
sub
fcomps
xchg
sub
sub
movsb
sbb
sbb
xor
push
addr16
rcl
daa
pop
iret
xor
js
jg
jo
sub
dec
xor
add
push
mov
cmp
dec
mov
adc
push
ficompl
lret
add
neg
pop
mov
jbe
lods
or
xchg
popf
cmpsl
or
cmp
imul
lcall
lods
fnop
pop
jno
mov
inc
add
lcall
es
and
filds
mov
jge
pop
add
cmpsb
cmpsb
data16
dec
push
pop
rol
adc
pop
out
movsb
lea
mov
cmpsb
jmp
mov
dec
lahf
das
mov
jg
jmp
scas
cmc
cmc
in
lahf
insl
ljmp
xchg
push
mov
adc
jp
dec
mov
sub
test
inc
adc
arpl
outsl
in
push
sbb
pusha
shrb
mov
dec
pop
popf
jnp
int
jmp
mov
inc
pop
jmp
cltd
push
jo
pop
nop
sbb
mov
sbb
bound
add
sbb
test
adc
cwtl
das
fimull
mov
adc
jg
addl
lods
jmp
repnz
adc
mov
imul
xchg
jp
sbb
arpl
dec
jo
and
sub
pop
cmp
ljmp
adc
aam
sbb
outsl
mov
add
fimuls
and
leave
in
lods
inc
pop
popa
sub
shll
mov
insb
imul
lret
mov
mov
mov
xchg
sub
dec
repz
lcall
jns
lock
pop
mov
xchg
fldl
stc
jo
push
hlt
jnp
mov
ds
sbb
push
pop
sbb
jns
adc
lea
hlt
xor
add
gs
xchg
movsb
aad
adc
out
sub
jo
mov
imul
pop
mov
push
mov
out
andb
jle
dec
push
jecxz
cmp
enter
movsl
pushf
or
lds
out
dec
lods
dec
adc
gs
and
lcall
pop
loop
aad
dec
out
jg
push
iret
cli
sub
jno
push
leave
xchg
sbb
arpl
es
mov
adc
neg
arpl
inc
sub
out
testb
pushf
loop
icebp
sbb
outsb
or
push
dec
pop
aam
or
ja
lods
decl
std
pop
cmc
adc
mov
mov
shll
cmp
repnz
xchg
std
mov
cmpsl
shlb
pop
stos
outsb
and
adc
test
xchg
mov
cwtl
push
xchg
lods
aaa
outsb
add
push
pop
and
xchg
dec
pop
xchg
dec
xchg
mov
xchg
push
sub
adc
sub
popa
or
add
jl
push
xchg
xchg
adc
std
movsb
out
ret
adc
or
in
imul
mov
mov
aaa
aaa
xchg
call
fstpt
or
jg
dec
cmp
das
pop
aas
imul
pop
mov
fwait
ljmp
scas
fstpt
or
jg
dec
cmp
das
pop
aas
imul
pop
mov
fwait
icebp
stos
xlat
mov
aam
mov
lahf
or
jnp
dec
cmp
sub
push
jnp
mov
fwait
sbb
scas
fstpt
hlt
nop
in
orl
inc
xchg
ja
addr16
insl
add
dec
and
and
popa
cld
xchg
in
sbb
shrl
loope
adc
pop
xor
cmp
jno
popa
in
xchg
in
sbb
rcrl
loope
adc
xor
and
xor
popa
in
into
fldl
add
rcll
pop
push
cmp
outsb
xchg
sub
cmpb
aam
mov
divb
jp
sub
sbb
ficoms
test
cwtl
imul
xor
popf
icebp
jb
addb
scas
or
push
test
loopne
push
adc
mov
popa
mov
push
loopne
out
jge
xchg
xor
ret
push
loop
or
jbe
in
xchg
call
subb
sub
out
fadd
push
xor
aaa
std
aam
sbb
cmp
test
popf
mov
xchg
stc
sbb
mov
ret
inc
out
mov
pusha
nop
mov
cs
xor
mov
je
pop
xor
sub
inc
sbb
xchg
cmc
add
shll
cmpsl
adc
cmp
addr16
ds
add
or
call
mov
jae
test
push
or
xor
cmp
outsl
sbb
aam
in
fucom
mov
mov
test
sbb
jne
inc
and
inc
sbb
xchg
in
sbb
shrl
loope
adc
pop
xor
cmp
jno
popa
std
xchg
in
sbb
shrl
loope
adc
loop
ds
xchg
dec
push
pop
es
lods
inc
xor
shl
inc
stc
xchg
aad
jecxz
jecxz
dec
push
mov
pusha
push
cmp
es
xor
decb
roll
lahf
push
repz
fiadds
in
dec
hlt
jns
in
iret
dec
sbb
sti
std
sbb
incl
push
mov
lahf
push
shl
inc
push
adc
out
fdivl
dec
push
add
inc
and
mov
lcall
ss
lock
jb
jl
dec
cmpsb
cmp
sar
inc
fs
clc
fwait
out
adc
jge,pt
sarl
int
inc
lcall
pop
lea
pop
mov
or
out
in
sbb
mov
cs
fstpt
jmp
int
add
cmpsl
or
and
push
cli
imul
or
clc
mov
inc
cmp
or
cmp
sbbl
popa
push
scas
jp
repnz
ret
add
xor
mov
and
mov
sbbl
mov
push
sbb
mov
outsb
xor
adc
aad
fs
cmp
sub
adc
cmp
andl
sub
fs
movsb
repz
xchg
popa
adc
sidtl
scas
mov
and
jbe
push
xor
inc
adc
dec
pop
jle
jae
pop
pop
in
gs
filds
std
flds
shl
adc
mov
pop
add
lret
xchg
lds
scas
xchg
and
adc
sbb
call
loope
clc
shrb
push
loop
fnsave
sub
lea
lret
xor
clc
ja
ficompl
sbb
ret
jmp
gs
and
dec
mov
js
jne
and
pop
jle
and
pusha
fnstcw
inc
inc
or
in
xchg
inc
loope
inc
xor
int
sbb
mov
pop
cmp
xchg
sbb
push
push
sub
ffree
fdivp
lret
in
lcall
or
cmp
arpl
mov
leave
xchg
lahf
inc
test
sub
cmp
ss
enter
iret
divl
gs
adc
dec
mov
inc
push
push
and
pop
mov
fcos
mov
push
mov
pop
rcrl
ja
loop
mov
int3
into
jecxz
dec
sbb
fyl2x
pop
popf
bound
jle
sub
dec
inc
xchg
jo
pop
adc
push
aam
pop
dec
mov
dec
clc
sbb
and
dec
pop
rcll
pushf
mov
push
repz
adc
popf
lahf
and
insl
mov
jecxz
pop
xchg
hlt
pop
out
mov
jg
push
dec
mov
mov
pop
mov
mov
lcall
test
and
xchg
cmp
xchg
cmp
and
scas
jp
leave
cmp
inc
add
or
jp
inc
pop
inc
and
mov
ja
jb
adc
fsubl
cld
inc
in
repz
nop
clc
inc
arpl
adc
adc
sbb
jg
pop
clc
and
xchg
cltd
cmp
push
dec
xlat
test
mov
int3
outsl
scas
fmuls
inc
lea
lock
or
not
mov
outsb
std
inc
sbb
jecxz
mov
ret
imul
mov
push
or
jl
cmpb
mov
lret
es
push
jb
into
mov
push
and
fwait
or
push
iret
xchg
sub
and
mov
cwtl
and
sti
lret
mov
pushl
or
cltd
and
push
std
sub
sbb
lds
aas
lret
stos
repz
loopne
dec
insl
test
sub
xor
pop
out
ljmp
int
mov
mov
mov
aam
int
add
jb
mov
movsb
push
into
sbb
push
aas
push
sbb
sub
push
int3
int
lods
or
dec
add
jge
arpl
les
pop
xchg
xorl
mov
mov
jbe
xchg
popf
inc
push
cmp
xchg
ds
pop
mov
nop
lea
sbb
frstor
fcmovne
xchg
loop
outsb
add
fisubs
data16
je
lods
sti
jns
mov
out
cwtl
mov
sbb
cmpsb
lods
aam
incb
or
sarl
mov
testb
popa
xchg
xchg
cmp
and
repnz
or
pushf
clc
add
dec
dec
addr16
add
xchg
xchg
push
jle
jecxz
mov
mov
mov
shlb
jge
sbb
mov
lret
loop
addr16
and
or
xchg
int
or
xchg
sub
sbb
mov
scas
push
add
sbb
push
xchg
mov
aas
and
stos
pop
test
pop
push
cmpsl
mov
out
jae
popf
inc
gs
popf
sti
mov
xor
inc
xchg
jg
fistps
add
and
xchg
pop
xor
and
outsb
and
cmp
cmp
aas
xor
mov
cmp
fsubrp
repz
fcompl
rolb
clc
gs
lods
lahf
xchg
or
mov
addr16
and
mov
dec
xor
mov
pop
add
mov
test
add
hlt
in
sub
leave
and
sahf
movsb
push
movb
cltd
push
sbb
in
jl
jb
movzbl
mov
pextrw
add
xor
sub
push
in
lods
mov
xchg
sbb
into
jne
cs
insl
shll
pop
daa
loopne
mov
arpl
dec
outsb
fidivs
sub
movsl
outsl
pop
lods
pop
push
cs
cs
cli
loope
outsl
sub
leave
push
pop
and
mov
leave
addr16
jnp
jge
push
arpl
adc
dec
or
lods
fwait
dec
mov
and
pop
lds
arpl
fdivrp
mov
popf
lea
push
sub
push
ss
inc
fdivrl
jae
cmp
add
fldl
cmp
jo
adc
pop
loopne
cs
das
insl
sub
mov
aam
pop
clc
jmp
rorl
adc
cmp
imul
arpl
or
xchg
inc
pop
pop
pop
mov
orb
js
mov
cmp
or
push
add
enter
adc
cwtl
pop
adc
mov
dec
cmp
lea
sbb
cmp
mov
pop
or
mov
fsubl
push
std
pop
int3
into
mov
push
cltd
or
sbb
js
daa
inc
daa
xchg
xchg
js
mov
and
out
aaa
insl
lret
into
pop
pop
push
popf
sti
fists
sub
repnz
cmp
stc
or
bound
enter
lods
pop
pop
and
rcrb
xchg
adc
mov
arpl
mov
clc
mov
push
out
aam
shrb
add
das
dec
loope
addb
and
add
or
jecxz
gs
in
daa
ret
or
mov
je
cmpb
push
jno
ja
je
js
in
outsl
jnp
pop
scas
mov
jp
repz
sub
jne
out
pop
mov
push
jne
xchg
and
or
mov
inc
pop
mov
and
cmpsb
add
add
aaa
popf
movsb
lcall
incl
jmp
jne
push
xor
lret
out
pusha
ret
clc
sub
dec
push
orl
cmc
sbb
out
imul
popf
test
aaa
add
push
fidivl
add
or
pop
cmpsl
sub
mov
into
mull
mov
dec
outsb
mov
jmp
cli
daa
inc
push
enter
and
sub
push
lods
sub
cltd
lret
in
jb
push
jnp
stc
push
jne
sub
jns
jno
nop
outsb
hlt
push
adc
sahf
add
mov
pop
neg
pop
inc
call
xchg
xchg
push
sub
adc
adc
pop
mulb
or
fnstcw
fdivr
movsb
out
leave
movsb
insb
std
and
sub
neg
push
and
jnp
mov
xchg
dec
mov
repz
push
xchg
cmp
test
adc
adc
pop
mov
xchg
adcb
cld
outsb
aaa
pop
fwait
int
inc
inc
jb
jl
inc
jge
mov
mov
pop
mov
push
sbb
mov
insb
push
mov
lret
mov
push
push
pop
and
imul
or
cmp
int3
cmpsl
icebp
cmp
fwait
hlt
sbb
frstor
fdivrp
hlt
lea
push
out
repnz
xor
jo
mov
hlt
mov
mov
xchg
lds
mov
and
sub
shlb
mov
jmp
dec
cld
ja
divb
pushf
jecxz
inc
push
cmpsl
and
add
mov
inc
cwtl
push
fs
fs
rcll
push
push
cs
mov
mov
sbb
shll
and
or
js
mov
frstor
lods
jp
add
pop
loopne
mov
sub
pop
clc
inc
out
sbb
mov
xor
push
in
ss
add
fbstp
mov
xchg
aas
sbb
das
inc
cmpl
add
addr16
roll
repz
aam
jp
lea
scas
push
notb
lret
movl
or
mov
and
mov
push
test
lea
mov
add
int3
arpl
mov
mov
sub
data16
push
xchg
sub
outsl
mov
rol
sbb
xor
jbe
fcmovnu
mov
jns
inc
jmp
in
lret
repz
jp
add
ret
mov
jb
and
cli
push
jmp
pop
faddl
ficompl
enter
push
out
jmp
inc
daa
mov
insb
jmp
jmp
mov
pop
enter
add
inc
and
mov
pop
pushf
cmc
fs
add
adc
hlt
je
test
push
popf
rep
jle
dec
lock
or
mov
jp
jno
insb
mov
xchg
add
imul
inc
xchg
mov
cmpsl
sub
sub
push
in
lahf
je
leave
inc
sti
test
lahf
adc
fisubs
lcall
push
mov
add
jge
ja
sti
xor
xor
stos
mov
add
inc
cwtl
pop
lock
xor
pop
in
addr16
sbb
and
xor
cmpsl
sub
mov
push
jle
cmc
push
push
and
rcr
mov
push
dec
arpl
pop
sahf
push
jbe
fmuls
jne
gs
stos
xchg
ljmp
pop
cmpsb
ret
or
push
cmp
xor
test
gs
mov
xor
out
sub
xor
jl
mov
xor
test
push
stos
pop
push
or
iret
dec
pop
jp
adc
int
pop
or
jl
pushf
dec
stos
cmpsb
and
push
aas
inc
add
push
sbb
inc
mov
push
sahf
mov
mov
icebp
fstl
je
movsl
in
test
xchg
pop
seta
mov
push
sbb
and
dec
xchg
sbb
cs
mov
dec
sahf
popf
inc
mov
sbb
jbe
add
in
mov
ds
fs
call
pop
dec
xchg
xchg
xor
es
imul
pmullw
je
inc
inc
xor
daa
mov
jno
nop
jne
add
rorl
ss
lahf
inc
mov
adc
cmp
shr
pop
xor
popa
mov
shrb
and
out
mov
jmp
mov
xor
xor
in
adc
mov
sub
leave
sub
mov
outsl
inc
dec
xorb
or
dec
add
das
mov
movsb
mov
pop
cmc
into
sub
add
adc
lods
pop
fisttpl
add
jl
ljmp
xchg
lret
daa
les
cmc
in
in
cmp
inc
adc
mov
cmp
pop
xor
andl
xchg
lret
loopne
data16
fs
aam
ret
and
imulb
sbb
insl
jp
sbb
mov
imul
rcrl
mov
add
or
push
stc
iret
add
push
call
and
imul
sbb
mov
cmp
cmp
stos
cwtl
add
cwtl
push
fninit
sti
mov
loopne
mov
lock
push
xlat
je
test
or
sbb
jl
bound
inc
xchg
dec
cltd
xor
mov
jmp
or
mov
cmpl
sbb
or
or
pop
lret
pushf
cmp
mov
inc
loop
sub
hlt
xor
mov
push
jne
inc
or
mov
mov
mov
stos
je
and
inc
sarl
pop
mov
jbe
js
shll
cmp
cld
adcb
dec
mov
psubsb
aas
mov
in
pop
mov
jge,pt
and
or
loope
mov
push
pushf
sub
daa
push
xor
jbe
rcl
inc
lret
cmp
xor
mov
lcall
popa
sbbl
out
jg
fsubrl
inc
imul
outsl
inc
push
pop
mov
iret
dec
cmp
sub
frstor
and
xchg
sub
lcall
stc
cmc
fsubl
pop
pop
xchg
sub
mov
iret
call
stos
sub
in
mov
scas
repz
andps
push
mov
mov
xchg
out
and
movsb
movsb
lret
cmp
clc
cmp
rol
ss
pusha
loopne
and
cmpsb
repz
jnp
xchg
lea
jge
test
idivb
lods
cmp
xor
jg
push
mov
xchg
movsb
xchg
add
pop
jne
aaa
mov
and
xchg
icebp
loope
or
std
test
adc
hlt
mov
jne
xchg
test
or
dec
in
mov
pop
add
cwtl
mov
xchg
mov
pop
loopne
cmp
bound
out
call
dec
push
mov
push
stc
test
xor
xor
movsb
fcmovnbe
subl
jge
mov
shll
dec
xor
mov
lret
faddp
and
pop
stos
cs
repnz
pop
mov
push
and
sbb
fdivrs
stos
push
and
js
shll
dec
push
out
dec
add
clc
xor
cwtl
and
ret
push
stos
insl
faddp
xchg
clc
cs
jb
mulb
mov
dec
sub
add
insl
mov
insl
lods
sub
and
out
ljmp
insb
mov
mov
inc
xlat
sub
xor
outsl
sti
push
leave
and
mov
out
pushf
push
mov
lods
jmp
pop
ret
test
pop
loop
int3
xchg
dec
pop
push
mov
sbb
fildl
cmp
xchg
mov
push
or
jmp
push
hlt
cmpb
mov
jo
push
or
xor
or
push
pop
in
add
mov
lahf
mov
clc
dec
mov
jl
stc
inc
ret
adc
mov
out
pop
adc
xchg
jp
jmp
push
lock
add
jmp
shll
fcmovne
push
push
add
call
sub
dec
mov
cmp
push
inc
lret
jecxz
sub
inc
inc
sub
inc
jae
scas
repz
lods
imul
push
sub
cmp
lar
xor
sahf
movntq
xchg
in
bound
cmp
insl
push
lods
test
push
aas
and
fists
fwait
cmpsl
add
or
imul
imul
rol
mov
mov
and
and
les
jle
pop
jns
hlt
push
jle
add
jbe
xchg
push
sbb
and
adcb
test
repnz
test
cs
cmc
add
sbb
iret
loopne
mov
or
ret
or
mov
mov
mov
jge
cmp
sub
jmp
add
jnp
and
mov
mov
and
test
mov
stos
adc
outsb
jb
shlb
test
and
jns
mov
insb
mov
out
cli
pop
bnd
xor
jbe
jns
ljmp
fmuls
ret
cmpsb
sub
cli
push
xor
ret
pop
pop
jno
insb
cwtl
popa
notl
fwait
pop
clc
add
mov
aas
mov
pushf
gs
sti
sbb
andps
jnp
cld
mov
jns
mov
aam
pop
dec
out
fiaddl
insb
sbb
xchg
push
popf
mov
xchg
sbb
add
test
out
mov
jnp
call
mov
loop
nop
mov
cmp
dec
sarl
add
fcomi
movsb
pop
xchg
shll
or
add
stc
jmp
xor
mov
push
repz
inc
imul
gs
and
xor
leave
pop
mov
cs
cmp
repz
jns
outsb
jge
mov
das
xchg
aad
pop
ret
fbstp
in
mov
enter
loop
sbb
adc
cmp
icebp
imul
mov
in
call
frstor
inc
stos
movsb
jb
jle
dec
mov
cmp
add
je
pop
loopne
in
jnp
lds
push
in
sbb
popa
roll
test
inc
int3
out
arpl
dec
fstp
lock
cmpsb
mov
orl
dec
lahf
jg
movsb
iret
out
add
sub
push
jns
stos
dec
or
xchg
xlat
or
testl
push
or
cmpsl
pusha
shll
mov
push
jmp
test
insb
push
aas
and
xchg
stc
mov
ds
lret
or
testl
jnp
cmpsl
inc
test
adc
subb
repz
dec
stos
in
jp
cmpsb
popa
out
sarl
mov
or
clc
iret
sbb
sbb
mov
xor
jne
dec
mov
or
cmp
and
dec
addr16
ja
in
pop
fisttpl
jmp
inc
dec
movb
xor
jecxz
xchg
xchg
xchg
aad
addb
cmpsb
push
xorl
push
cltd
inc
out
mov
sbb
fnstsw
sub
inc
inc
rorb
mov
xchg
adc
sbb
popa
cmpb
xlat
mov
push
xor
dec
in
adc
aas
xchg
dec
mov
not
in
fldenv
pop
andb
mov
push
ss
loop
leave
ds
mov
inc
cmp
bound
int3
dec
sbb
loopne
movsl
pushf
sub
xchg
test
or
aam
ret
es
or
and
pop
or
out
sbb
out
mov
mov
adc
loop
dec
out
cmc
inc
cli
jmp
test
jno
add
or
mov
shll
cltd
fwait
pop
push
xchg
clc
or
rclb
fs
jns
cld
fnstenv
mov
inc
pop
mov
adc
push
mov
lret
pop
push
cmp
insb
into
test
scas
jnp
push
xor
pop
mov
icebp
in
cmpsb
dec
and
lret
dec
in
das
sbb
fcmove
gs
imul
shrl
mov
daa
push
mov
xor
mov
je
xor
sbb
sub
add
js
jge
std
test
push
dec
push
push
push
lods
out
xchg
cmc
push
inc
pop
ret
adc
add
clc
lret
icebp
outsl
jno
adc
popa
arpl
ret
mov
test
and
pop
fxch
imul
mov
jmp
add
mov
in
push
add
loop
inc
add
cmp
dec
scas
aas
push
xor
loop
stos
sub
pop
fwait
or
subl
fwait
and
dec
fdivrs
xor
xchg
fucomip
sbb
pusha
addb
dec
mov
lds
mov
popf
dec
cmpsb
xchg
push
pop
mov
mov
xor
xchg
lds
mov
jle
imull
xchg
adcl
insb
push
fcoms
push
pop
test
xchg
pop
je
stc
movsb
dec
leave
jno
repnz
psllq
xchg
xor
fcompl
push
lret
pop
sub
movsb
icebp
cmp
out
daa
aas
mov
mov
les
fnstcw
fwait
and
jnp
mov
ss
adc
or
int3
xor
ja
or
test
mov
pop
or
aaa
rcll
xorl
push
cmp
sub
popa
scas
push
xchg
loop
pushw
add
enter
cmpsb
mov
cltd
fwait
push
loopne
ret
jae
or
dec
lret
lods
jns
lahf
mov
mov
jns
mov
imul
sbb
push
ds
pop
mov
js
mov
fld1
test
push
mov
xchg
sbb
js
rclb
enter
xor
cmp
jno
popa
std
xchg
in
sbb
shrl
loope
adc
pop
xor
cmp
jno
popa
std
xchg
in
sbb
shrl
loope
adc
dec
and
jo
popa
std
xchg
in
sbb
int
mov
icebp
loope
adc
pop
xor
aas
push
sub
sahf
add
sub
int
lret
bound
jb
sti
test
lret
cltd
mov
fistl
jnp
imul
or
cmp
cld
sbb
pop
sti
test
lret
cltd
mov
leave
mov
jnp
imul
dec
sbb
imul
pop
sti
test
lret
cltd
mov
leave
mov
jnp
imul
insl
sbb
dec
push
push
cmp
mov
jmp
test
mov
sbb
adc
mov
pop
sbb
inc
dec
fwait
jo
push
cmp
out
inc
xchg
push
push
nop
iret
jge
roll
or
xchg
les
xchg
sbb
cmc
or
icebp
pusha
stos
adc
cmc
in
mov
xor
movsb
leave
and
fwait
push
lret
sarb
inc
dec
cltd
mov
inc
jecxz
jnp
jnp
imulb
lds
inc
xchg
mov
aam
dec
lahf
inc
mov
repz
mov
pop
imul
outsb
dec
test
mov
sub
add
roll
out
sub
pushf
push
fs
add
mov
jl
mov
movsl
test
lret
cltd
mov
leave
mov
jnp
imul
or
cmp
jns
dec
or
mov
loopne
lock
test
stc
incb
outsl
dec
cmp
pop
pop
or
pop
dec
pop
sbb
test
scas
jmp
mov
mov
push
push
imul
jg
imul
ljmp
stos
stc
fwait
leave
mov
jnp
imul
or
cmp
jns
dec
or
test
lret
cltd
mov
leave
mov
jnp
imul
or
cmp
jns
dec
or
test
out
fisubs
pop
inc
and
sbb
leave
nop
sbb
mov
lcall
pop
adc
cld
mov
cmp
ja
pop
jb
mov
or
sbb
sbbb
faddl
lock
inc
adc
xor
pop
pop
add
icebp
sub
mov
fildll
in
aaa
xlat
andl
push
dec
mov
xor
insl
sbb
fiaddl
mov
pop
xchg
stos
scas
outsb
xor
cmpl
jno
fstpl
xor
cld
out
jb
xor
and
sbb
sti
sub
cmp
mov
jne
push
and
xor
jae
ss
dec
add
jecxz
lret
lock
cmp
and
stos
stc
cs
cmc
cmp
fidivs
inc
sub
das
aad
aaa
sarb
fstl
aas
imul
leave
outsb
jno
scas
push
mov
ss
insb
test
xchg
push
dec
xor
in
out
aaa
ja
and
mov
pop
dec
daa
loopne
or
shrl
jnp
xchg
leave
sub
stc
jle
push
mov
outsl
cs
dec
mov
outsb
cmp
loop
mov
xchg
mov
sub
push
dec
mov
mov
and
or
add
sbb
incb
test
shlb
or
ds
jae
xchg
rol
jbe
lods
lods
cmp
pop
mov
jmp
or
cltd
mov
test
lock
jecxz
outsb
xor
fcoml
sbbl
movsb
jbe
inc
adc
stos
sbb
popa
pop
dec
xor
inc
xchg
fucomp
lahf
sbb
mov
psllw
scas
fdivrl
cmp
mov
sbbb
xor
outsl
popf
fcoml
out
xchg
hlt
loopne
or
cltd
sbb
mov
in
xor
out
leave
jb
fisubrs
mov
outsl
inc
xor
jo
sbb
movsl
stos
sbb
sub
xor
gs
lods
in
mov
xchg
or
adc
cli
cltd
jecxz
mov
fchs
lods
in
fisubs
xchg
test
mov
sti
adc
or
cli
mov
inc
arpl
movsl
sbb
cmpsl
jno
adc
or
add
dec
mov
data16
shll
inc
js
dec
mov
stos
and
xchg
je
push
cmp
mov
std
in
mov
cld
loopne
pop
ds
add
xchg
adc
xchg
je
push
mov
cmp
push
nop
or
clc
mov
push
and
in
lock
jo
mov
test
popa
lods
push
cmp
push
mov
lods
dec
and
aas
imul
sbb
les
std
addr16
in
out
lea
mov
dec
sub
hlt
andl
inc
jae
pop
imul
sub
leave
xchg
xor
jbe
insl
test
cmp
push
push
roll
sbb
divl
cmp
lcall
lret
and
sub
mov
icebp
mov
dec
ljmp
jl
enter
test
add
mov
popa
test
sub
test
xor
ficoml
mov
gs
pop
aaa
lock
ds
and
dec
inc
mov
sub
in
aaa
push
add
cli
lock
popa
fisttps
ret
sarb
cmpsl
mov
outsb
jecxz
xchg
out
std
add
and
lods
push
sbb
aad
ret
sub
cmp
add
sahf
jb
int3
add
hlt
inc
adc
hlt
pop
xor
add
xchg
adc
and
mov
lret
mov
mov
fwait
lock
fnstenv
enter
out
pusha
xlat
cmp
pop
push
aas
test
out
imul
dec
xchg
sub
mov
mov
jge
add
xor
and
push
test
test
mov
jmp
loope
lret
pushf
mov
leave
dec
std
test
popf
sbb
out
cmpsl
ret
loopne
enter
jl
iret
fsubp
and
mov
push
xchg
pop
push
out
push
adc
push
and
jge
outsb
xor
lods
xor
mov
call
or
addr16
inc
cli
pop
xchg
lret
sbb
test
stos
mov
out
jb
mov
mov
arpl
add
mov
and
lcall
mov
or
out
mov
xor
aas
sub
shll
adcb
les
xchg
push
sbb
pop
fistpl
sahf
add
sub
and
ja
lock
cwtl
fbstp
data16
inc
shll
push
stos
jo
popf
inc
in
jne
mov
js
add
jnp
cmp
fwait
and
cmp
dec
lret
jmp
cwtl
out
mov
leave
cmp
in
int3
push
sarl
test
jo
sub
push
jnp
pop
xchg
ret
not
or
rclb
cmpb
in
hlt
and
mov
es
dec
cmp
xchg
push
sbb
cmp
add
div
jnp
mov
jae
lds
mov
jp
daa
lahf
lret
jnp
push
test
out
adc
stos
ds
hlt
bound
std
xchg
jge
jge
jb
insb
fidivrl
xor
cltd
loop
or
out
sbb
jo
jl
aaa
out
jne
jecxz
out
inc
inc
enter
pop
inc
jae
ja
or
or
je
lock
mov
insb
call
inc
loop
pusha
cmp
aas
adc
xchg
mov
xchg
push
mov
dec
pusha
dec
push
out
rorl
or
inc
xchg
mov
jae
xor
push
outsb
outsl
pop
test
and
xchg
clc
lret
mov
adc
push
mov
cwtl
inc
push
jno
jecxz
jp
hlt
cli
imul
sub
shrl
cmp
dec
pop
mov
js
sbb
rcll
and
mov
out
dec
test
sub
sbb
mov
cwtl
ss
sarb
mov
stc
pop
cmp
pop
in
shrb
xchg
stc
lock
xchg
mov
jae
sbbl
mov
pusha
scas
jb
adc
ret
sarl
xchg
dec
daa
loopne
or
jb
push
mov
bound
xchg
jb
lgs
sub
and
hlt
cs
ljmp
enter
inc
shrb
dec
insb
mov
test
push
test
jg
cli
imul
and
mov
mov
jns
xchg
xchg
hlt
dec
add
push
imulb
fcom
inc
sbb
jp
sub
jb
mov
xor
adc
dec
fmull
cmpsb
or
pop
das
cltd
xchg
push
dec
xchg
adc
jne
inc
loope
cmpsb
push
shrb
pop
fsubr
mov
je
jmp
pop
xlat
das
add
and
fistps
repnz
pusha
loope
jg
in
xchg
icebp
mov
in
dec
clc
lea
dec
mov
sub
jmp
or
push
push
jl
mov
xchg
jg
aad
add
std
pop
pop
sbb
jb
outsl
mov
imul
fidivs
or
test
sbbl
adc
mov
adc
jb
mov
push
add
in
jno
ret
pop
mov
shr
sbb
jb
mov
rolb
sbb
out
or
test
dec
jo
jne
push
call
sbb
arpl
mov
adc
negb
jns
mov
fwait
imul
test
dec
mov
cli
pushf
pop
dec
enter
jge
adc
stos
icebp
or
sbb
shrl
ret
call
mov
mov
cmp
out
cltd
xlat
jns
jae
xor
fs
out
and
mov
mov
xchg
lods
push
dec
movsl
mov
jp
jecxz
lahf
int3
mov
inc
fisubs
les
ret
dec
add
cmp
sub
stos
inc
dec
repz
test
mov
push
rcll
inc
dec
cmpsb
mov
je
xchg
sbb
scas
mov
pop
jb
lcall
pop
popf
imul
lret
jmp
dec
cmp
or
cltd
and
cmp
fcmove
mov
sbb
cld
xor
clc
in
xor
jno
pop
add
addb
sub
dec
pushf
cmp
or
mov
and
xor
xchg
mov
shll
cltd
push
lock
xchg
addr16
inc
mov
jb
rcrl
fsubrp
addr16
xor
fs
cltd
or
cmp
adc
jmp
dec
es
sbb
push
loope
xchg
pop
scas
and
adc
orb
mov
je
cltd
fdivs
out
int
cmp
rep
add
ret
in
sub
aas
fnstsw
jmp
adc
cmp
test
loope
out
lahf
xor
pusha
imul
fistpl
sub
repnz
and
imul
mov
fdivp
sub
sbb
push
xor
sarb
and
jle
mul
xlat
add
outsb
adc
or
fnstcw
in
cmp
add
push
cmpb
xor
cmc
arpl
testl
push
lret
add
xchg
xchg
js
push
shl
xchg
in
stos
out
cmp
icebp
scas
dec
pop
xorb
inc
mov
popf
in
push
lret
inc
sarl
sti
dec
clc
mov
and
xlat
pop
sahf
imul
les
shrl
fwait
std
xor
mov
dec
movsb
clc
pop
scas
sub
lahf
jne
je
inc
inc
in
je
xor
data16
fwait
sub
ljmp
les
out
jmp
test
pop
outsl
jg
in
xor
mov
test
aas
sbb
xchg
sub
mov
mov
sbb
mov
into
mov
das
jb
push
adc
mov
sbb
xchg
mov
adc
or
adc
push
mov
xchg
pop
cmp
repnz
stos
pop
mov
jge
rcrb
stos
cmc
lcall
or
pop
and
cmp
mov
xor
or
inc
ret
enter
add
xchg
pop
push
jecxz
int
mov
cmpsb
xchg
add
rcl
cltd
ds
cmp
mov
push
lods
addr16
mov
imulb
in
mov
lahf
mov
cs
jl
inc
inc
insb
mov
lret
pop
jo
xchg
cld
loope
mov
mov
dec
clc
pop
sub
pop
repnz
std
shrb
pop
sbb
pop
mov
xchg
popa
mov
iret
jbe
fists
fildl
enter
xlat
pop
mov
dec
sub
mov
test
cld
jo
xchg
subb
ja
adc
inc
sbb
add
jnp
loop,pt
idivl
and
bound
stos
and
mov
sbb
imul
fcompl
sbb
aad
fildl
cmpsb
scas
lcall
cmp
mov
jmp
and
adc
jne
jb
lea
pusha
jecxz
icebp
fisubs
hlt
scas
sub
out
or
iret
xchg
lds
add
test
cltd
xchg
cmc
xorl
jbe
pop
sub
outsl
push
fiaddl
xchg
dec
ljmp
stos
pop
jno
dec
push
cmpsl
push
test
or
xchg
call
push
add
xchg
jae
scas
lret
js
add
enter
rcr
pop
int3
outsb
lcall
sub
add
cmp
mov
jns
aaa
or
mov
and
lret
push
rcrb
in
cwtl
adc
jno
rcrb
inc
fdivs
jl
mov
mov
cmpsb
push
mov
lea
xor
push
stos
and
fsub
xchg
pushf
fcmovnu
mov
inc
lods
lods
js
fnstcw
mov
inc
lahf
sub
sbb
jne
lahf
push
xchg
lea
int
sbb
add
and
fwait
xchg
inc
lahf
fwait
pcmpeqw
cli
pop
mov
inc
sahf
jno
loope
cmp
das
xlat
xchg
repz
adc
xchg
pop
mov
sbb
xchg
sti
fwait
movb
pop
pushf
movsl
mov
cmp
sbbl
xor
outsb
push
jle
ss
or
sub
aad
lock
dec
lahf
dec
ljmp
dec
inc
lret
stos
mov
imul
mov
lea
push
inc
jmp
adc
dec
aad
rcrb
out
xchg
cmp
or
xchg
loope
nop
dec
mov
push
push
push
push
sbb
mov
sub
fwait
adc
inc
add
addl
out
fs
and
push
pop
lods
sbb
jo
dec
fiaddl
fsubrl
cmp
aam
mov
lcall
jmp
xchg
xor
int3
xchg
pop
lret
adc
insl
loopne
xor
sub
cmp
iret
xlat
or
xchg
out
dec
popa
inc
fstl
sbb
mov
enter
cltd
icebp
pop
gs
mov
mov
jle
movb
mov
jo
push
push
call
stc
inc
jg
faddl
jo
add
push
mov
sbb
out
shl
pop
mov
cmpsl
or
push
cmc
inc
and
mov
add
mov
test
pop
enter
sbb
cmc
or
or
lods
sti
inc
adc
pop
lods
xlat
imul
ja
jl
ret
add
jnp
inc
push
push
xchg
rcll
test
add
shrb
ja
sbb
icebp
test
jns
out
mov
sub
jae
xchg
push
dec
mov
push
xor
js
test
das
out
clc
inc
mov
lock
and
pop
xor
leave
scas
popa
icebp
sub
loope
jl
outsb
add
fisttpll
cltd
rorl
mov
outsl
mov
imul
adc
dec
stos
mov
mov
addr16
and
jg
mov
add
add
cmp
xor
and
rcll
mov
mov
es
pusha
mov
loope
dec
lcall
push
mov
and
dec
mov
aad
and
cmp
jae
and
mov
pop
sbb
xlat
shl
cmp
shlb
out
xchg
fdivrl
pop
scas
inc
cmp
scas
push
xlat
push
movsb
mov
jne
repnz
in
mulb
add
jb
mov
ret
lret
pop
inc
into
and
add
cs
mov
xor
mov
mov
dec
cmp
out
bound
out
rorb
xor
movsb
sbb
adc
dec
cmp
iret
mov
xchg
out
sti
fbld
orl
mov
push
out
clc
test
std
lds
and
insl
daa
lock
ja
fbld
imul
adc
ret
adc
ljmp
ret
repnz
jp
xchg
sub
and
rolb
sbb
sbb
test
orb
adc
xchg
pop
dec
jo
test
cmp
out
xlat
push
lods
cmp
es
mov
gs
loop
loop
xchg
inc
and
push
lock
iret
inc
out
lcall
jcxz
jb
sub
gs
cwtl
jecxz
fcomps
daa
sarl
sbb
cli
or
adc
ffree
push
jg
dec
mov
fcmovnb
sbb
sbb
push
xor
mov
movsb
ss
loopne
lods
in
adc
mov
xchg
iret
addr16
outsb
and
jp
inc
popl
stos
cmp
xchg
add
bound
adc
int
iret
std
inc
mov
dec
stos
mov
das
pop
cmp
les
jmp
sbbl
insl
aad
fcoml
out
pop
mov
pop
lcall
out
dec
xor
lret
and
out
out
jbe
xlat
dec
adc
push
outsl
xor
mov
jbe
add
das
cmp
ljmp
xchg
inc
push
or
sub
leave
xor
fst
dec
lods
xchg
and
sahf
inc
test
and
popa
adc
pop
mov
inc
cmp
or
lods
xbegin
iret
and
insb
or
xor
push
or
out
fs
xchg
js
push
jae
sar
sub
xchg
add
xor
mov
and
or
jle
mov
aam
aam
int
lds
rorb
mov
push
dec
jle
sub
fdivr
mov
dec
lock
add
outsb
std
movsl
adc
mov
xchg
mov
cmpsb
dec
jbe
rorl
adc
cmp
imul
sbb
jmp
inc
int3
fidivrl
sbb
pop
out
jnp
sbbb
lret
icebp
pop
jp
add
test
ret
es
and
lret
xor
inc
test
fwait
movsb
pushf
mov
xor
push
lret
sub
mov
in
mov
popf
mov
fsubr
jmp
adc
mov
or
out
jnp
clc
imulb
aad
inc
iret
xchg
cmp
fistps
nop
push
stc
stc
and
repz
or
cmp
mov
or
popf
xchg
sti
add
xor
xlat
cmpl
or
add
cvttps2pi
in
insb
push
lock
int
stc
cmc
mov
fcmovne
sub
or
cmp
xlat
hlt
addb
mov
insl
jl
add
lea
and
in
pop
testl
adc
pop
movsb
test
lahf
cmp
xchg
push
cmc
repnz
imul
or
lds
xor
sti
jmp
inc
pop
push
outsl
int
aad
lea
jg
ds
dec
cmp
pop
pop
xlat
inc
pushf
and
jp
pusha
pop
outsb
fstps
enter
push
out
mov
fsubp
loope
mov
subb
push
mov
cmpsl
dec
add
in
push
scas
mov
pop
jnp
jo
xchg
and
ret
cwtl
jle
fidivrl
cmc
movsb
test
sub
jmp
xor
mov
fistpll
addb
sub
mov
xchg
in
cmpsl
mov
mov
push
dec
or
lcall
xchg
dec
jae
sti
or
js
jnp
add
jmp
sahf
xchg
fldt
outsl
sahf
sarl
leave
lods
das
and
repnz
movsl
fsubl
push
cmpsl
mov
inc
nop
xchg
fimull
fldt
cltd
movb
push
jno
into
lods
pop
cmp
inc
in
rcrl
les
fldenv
leave
push
pmuludq
das
jne
or
cmpsb
imul
lcall
aad
mov
mov
loope
sub
enter
or
dec
es
pop
xchg
lret
push
ret
dec
jo
lahf
mov
movb
das
popa
std
pop
ret
enter
sahf
insb
flds
int
xor
sbb
push
js
sub
mov
mov
add
jp
inc
jge
dec
cmpsb
jb
ret
jl
or
jl
xchg
xor
scas
xchg
lcall
pop
sub
test
xchg
add
test
inc
sub
bound
dec
push
inc
inc
ja
repz
dec
mov
dec
pushl
xor
cli
mov
rcrl
mov
aas
mov
sub
mov
je
cmpb
test
dec
iret
jns
lahf
jge
or
pop
adc
jo
inc
mov
sarb
adc
push
aas
sbb
fmulp
test
xor
popa
mov
pop
cmp
leave
push
std
adc
mov
fildl
xchg
dec
or
repz
pushf
dec
dec
mov
inc
adc
jp
sbb
push
std
rcrl
cld
inc
adc
lock
dec
movl
dec
int3
jl
int3
push
add
aaa
mov
int3
nop
xchg
jne
aam
jmp
stc
cmp
in
inc
shlb
jb
ret
adc
fisttps
mov
daa
xor
sub
loop
loope
inc
shll
push
xorb
popf
mov
jge
lret
das
jne
xchg
nop
mov
aaa
leave
and
push
out
xor
sbb
shlb
xor
mov
mov
ljmp
shr
dec
jecxz
iret
cmp
push
xchg
add
dec
imul
inc
shrb
jne
sbb
mov
push
dec
mov
jg
xor
xchg
aam
cmp
jecxz
pop
pop
in
sahf
mov
adc
push
mov
add
lock
mov
lds
xchg
jno
and
mov
sti
rcl
test
jo
jecxz
aam
xchg
cmp
sti
in
jl
dec
xchg
movsl
mov
scas
stc
icebp
repnz
dec
std
subl
call
shlb
std
push
rcrl
pop
ret
jmp
mov
adc
adcl
xor
aas
into
incl
push
or
jecxz
mov
rolb
jne
push
add
lret
into
inc
loop
movsb
rclb
inc
shr
jo
ficompl
pop
sub
std
pop
xchg
jo
das
dec
aaa
and
int3
gs
sbb
cmp
popa
cmp
lret
cltd
mov
leave
mov
jnp
imul
or
cmp
jns
dec
or
test
lret
cltd
mov
leave
mov
jnp
imul
or
cmp
jns
dec
or
test
lret
cltd
mov
leave
mov
jnp
imul
or
cmp
jns
dec
or
test
lret
cltd
mov
leave
mov
jnp
imul
loope
xchg
mov
cmpsb
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
jnp
xor
add
adc
jle
add
popa
fidivrl
test
jne
imul
add
xor
xor
adc
popa
mov
movsl
inc
xchg
push
test
jne
inc
loope
lock
rcll
in
int
fdivrl
push
lahf
mov
and
inc
into
je
dec
mov
mov
mov
jg
imul
inc
pop
decb
dec
push
jge
xchg
fimuls
pop
and
add
cmpsb
mov
pop
cwtl
or
jle
pushf
inc
pop
mov
jo
adc
xor
mov
mov
push
loope
imul
and
push
add
loope
lcall
int
jp
and
int
data16
outsl
ror
add
sub
xor
inc
test
adc
test
adc
xor
fmull
jp
pop
je
jno
inc
nop
push
and
push
and
rcll
add
push
fbstp
imul
insl
test
pop
stc
sub
enter
push
in
aam
les
stc
cmp
aad
mov
repz
sub
adc
xor
movsl
adc
adc
icebp
adc
mov
and
push
test
dec
mov
shll
mov
andb
sbb
jno
inc
xchg
push
test
push
xchg
inc
loope
icebp
and
and
xor
add
adc
popa
mov
movsl
inc
xchg
push
test
push
xchg
inc
loope
icebp
and
and
repnz
jns
dec
mov
sub
insl
jecxz
push
jg
cmpsb
dec
pop
dec
inc
or
cmp
xchg
iret
mov
cld
imul
jmp
fmulp
sub
ja
out
fabs
mov
pop
repz
mov
inc
mov
mov
sub
mov
nop
inc
outsl
jge
jg
add
jbe
nop
inc
mov
pop
or
adc
int
mov
in
shlb
mov
scas
fcoml
sbb
jne
sbb
add
lock
xor
repz
mov
lret
fwait
lds
test
lods
dec
mov
cmovg
add
sub
int
mov
stos
jno
bound
pop
fadd
mov
pop
and
xor
cmp
adc
xlat
fmull
xchg
aad
sbb
insl
and
jp
mov
adc
sub
cmc
ret
mov
pop
jns
jae
push
roll
xor
xor
push
add
adc
ja
xchg
test
push
imul
jle
jp
and
enter
add
std
mov
insl
shlb
jbe
clc
lcall
jmp
stc
aad
xchg
mov
sahf
cli
ds
mov
sarb
mov
rolb
mov
jmp
dec
pop
enter
mov
bound
inc
and
fildll
or
sub
jmp
addr16
mov
inc
lcall
das
enter
or
repz
aad
test
inc
add
or
dec
enter
jns
imul
mov
mov
dec
lea
push
xchg
adc
and
and
pop
cmpsl
subl
test
insl
int
insl
add
push
mov
rclb
adc
insl
test
dec
cld
mov
cli
nop
out
fwait
fwait
mov
jo
sbb
sub
in
mov
repnz
mov
dec
std
test
subb
je
imul
jo
xchg
mov
sbbb
add
and
mov
std
hlt
push
dec
scas
out
push
fstpt
mov
lods
shl
std
sti
sub
arpl
out
mov
jo
in
pop
sbb
ss
pop
cmpsb
in
fnstcw
scas
mov
and
and
subl
or
nop
pop
in
cmc
dec
test
call
inc
data16
into
gs
rclb
or
mov
in
mov
push
and
int
xor
push
mov
fwait
js
aas
inc
push
sbb
mov
popf
adc
aam
insb
mov
in
xlat
mov
out
push
stos
jecxz
fsts
ret
jecxz
shr
mov
push
jno
jg
jg
ja
mov
fsubrl
push
add
sbb
xchg
sub
mov
ja
push
sbb
cmp
sub
lret
xchg
cmpsl
push
aaa
int
xchg
cmp
mov
ret
sub
inc
push
jbe
ds
ljmp
aad
jbe
out
popa
dec
jb
push
pop
or
icebp
stc
mov
pushl
inc
mov
ja
cmp
into
shr
xchg
adc
pop
xchg
mov
cwtl
sti
outsl
jge
cmpsl
adc
jnp
shrb
inc
sti
sbb
or
jmp
daa
std
maxps
mov
adc
out
sub
pop
lods
adc
push
fs
rcrb
pop
in
xor
nop
or
iret
jo
fiaddl
jge
inc
pop
daa
nop
jecxz
les
push
mov
mov
jno
push
fistpll
lret
xlat
dec
and
mov
test
push
test
jae
arpl
mov
into
add
xor
pop
mov
mov
out
push
mov
jl
cmc
xor
ss
cmp
pop
jne
cmp
add
jns
in
ds
es
mov
imul
divl
jmp
pop
in
jle
ficompl
xchg
and
and
pushf
cltd
std
adc
cmp
inc
stos
ret
outsl
test
lahf
in
test
cwtl
fisubrs
adcb
mov
xchg
lods
nop
add
sbb
mov
or
cs
sbb
mov
pop
bound
sub
xor
stc
xor
xchg
add
enter
pop
mov
jbe
rcrb
cld
inc
push
cmpsl
sbb
push
pop
fdivr
std
in
pop
incl
andb
xchg
pop
lds
scas
hlt
insb
and
lret
fcmovnu
adc
icebp
jb
outsl
jno
or
ret
ds
pusha
mov
and
push
les
andb
mov
movsb
and
pop
push
mov
lret
sahf
and
ffreep
jp
out
xchg
lods
lret
loop
mov
rol
ret
in
adc
popa
mov
mov
test
cmpsl
jns
js
rorl
shll
fnstcw
inc
adc
or
push
push
dec
movsl
pop
cld
and
inc
mov
repnz
sub
ja
arpl
cmp
sub
fidivrl
ret
xchg
push
std
cltd
inc
or
or
xor
or
dec
jnp
jnp
pop
testl
repz
ljmp
xchg
les
cmp
adcb
popf
js
push
xchg
inc
inc
fs
push
arpl
gs
push
movsb
sbb
fcmovnb
pop
icebp
cs
orb
outsb
sub
test
xchg
lret
xor
fadd
out
adc
adc
and
cmpb
popf
sub
push
out
test
adc
pushf
inc
movsb
icebp
idivl
pusha
sub
iret
cmp
mulb
xor
in
iret
hlt
inc
push
inc
dec
xchg
cmp
loopne
lahf
ficoms
lods
xor
call
jno
add
push
flds
cli
test
jns
mov
in
outsl
outsl
lea
test
xchg
addr16
es
lahf
lret
push
lahf
adc
shlb
outsl
xchg
add
adc
push
lret
sub
sub
in
mov
adc
and
leave
sbb
insb
cmp
arpl
lret
xchg
sub
addr16
stc
mov
shlb
movsl
nop
xchg
popf
repz
xor
in
mov
cmp
pop
repnz
arpl
or
push
fisubl
aam
jmp
sub
cmpsl
pushf
sbb
jnp
dec
inc
shrl
jb
loope
inc
dec
pop
in
das
aas
jle
icebp
cmp
out
push
fnstcw
xlat
jg
fldcw
or
cmpb
jmp
mov
int
es
mov
add
sahf
cli
test
frstor
mov
jg
dec
test
ds
sbb
pmaxub
cmp
cmp
pop
mov
scas
cmpsl
or
jp
fiaddl
push
pop
inc
into
clc
aam
mov
lock
cltd
adc
jp
xor
dec
sbb
outsl
mov
and
jae
fistpll
sub
push
movsb
mov
lcall
xlat
gs
mov
in
pop
addr16
mov
addb
mov
pop
cmc
in
lds
test
add
leave
mov
stc
lea
cwtl
mov
pop
mov
imul
std
mov
cmp
or
jmp
push
shl
clc
adc
add
sahf
xchg
inc
mov
jns
cwtl
mov
call
xor
push
jo
out
iret
and
xor
add
sbb
arpl
pop
sti
sarb
out
test
mov
add
pushf
jns
or
sbb
cld
cmp
in
sti
in
push
cmp
xor
sarb
fwait
js
xchg
in
or
xorb
add
movsl
xchg
in
add
ljmp
negl
adc
imul
dec
jp
dec
or
mov
sbb
xchg
mov
mov
movsl
pop
xchg
insb
mov
pushf
dec
lods
rcr
mov
jg
or
iret
pusha
push
sbb
lock
fdivs
lds
roll
fs
movsl
and
push
sti
mov
iret
aad
add
jl
jnp
test
mov
jecxz
sub
xchg
xlat
dec
add
icebp
jbe
ljmp
lret
scas
mov
jecxz
jne
js
inc
dec
insl
dec
sbb
sub
mov
xchg
in
movsb
out
xchg
pushf
dec
xchg
inc
sbb
jl
mov
pop
comiss
repnz
sbb
mov
mov
fimull
mov
xchg
les
pushf
and
outsl
lods
xchg
aam
xor
loop
sti
xor
clc
mov
cmp
lods
push
pop
mov
and
jmp
ja
xchg
daa
jbe
add
pop
in
jp
pop
cmp
mov
inc
out
stos
lods
pop
inc
out
push
imul
call
nop
jmp
cwtl
jecxz
aas
xchg
push
fldl
rcll
fdiv
popf
loope
pop
sub
xor
sub
mov
adc
xchg
or
lret
jecxz
inc
loope
hlt
jl
mov
mov
jp
repnz
rclb
mov
push
sarl
add
and
jnp
out
mov
mov
nop
loope
negb
jno
cs
dec
shlb
dec
inc
data16
pushf
aas
sub
mov
jp
mov
mov
imul
push
adc
mov
daa
push
cmp
and
mov
nop
mov
pop
shl
or
xchg
mov
xchg
hlt
out
repz
add
fsubrl
xchg
lds
out
mov
pop
sub
int
aaa
out
xor
dec
fcompl
xchg
inc
dec
cltd
gs
inc
pop
cli
dec
jno
mov
add
mov
cmp
and
fistpll
jp
loope
gs
cs
push
mov
notb
pushf
out
lcall
jnp
out
pop
jae
rcll
scas
gs
out
mov
cs
aas
pushf
inc
and
aad
push
mov
sbb
sbb
aaa
xchg
add
mov
adc
cmp
sbb
sarl
inc
dec
mov
adc
lea
bound
xor
pop
xchg
insl
dec
dec
iret
divb
out
pop
pop
out
sbb
mulb
dec
lock
into
xlat
rclb
rcrb
inc
adc
cli
mov
test
testl
inc
sub
or
and
ret
xor
pop
inc
stos
mov
xor
test
and
ret
xlat
inc
andl
inc
xor
xor
or
in
cwtl
cmp
imul
push
cwtl
test
push
xchg
xor
mov
ret
movsl
out
cmp
movsb
sub
push
push
adc
fildll
pop
cld
pusha
adc
xor
inc
stc
ljmp
fnstenv
cmp
iret
jne
stos
repnz
pop
fisubrl
inc
cld
and
pop
lret
push
fadd
in
push
lcall
aas
xchg
test
in
das
ret
add
dec
enter
fcoms
add
push
cmc
testl
dec
mov
cli
pop
bound
outsw
dec
inc
dec
sti
jle
jecxz
add
sti
dec
fwait
loope
inc
ljmp
cs
xchg
ror
cld
xchg
aas
jae
in
movsb
lret
arpl
inc
and
xor
add
movsl
mov
iret
cmp
mov
jge
fstpl
mov
mov
sbbl
jo
xor
mov
push
in
insl
aaa
mov
mov
clc
pushf
pop
push
pop
iret
rcrb
dec
or
daa
inc
fcmovbe
sbb
inc
dec
pop
push
lods
jp
sub
aam
lods
mov
xchg
cmpsl
out
sub
lods
test
cltd
fdivl
or
dec
int3
mov
ss
push
and
cmp
je
lock
scas
sub
lods
das
xchg
incb
dec
iret
and
jmp
sbb
adc
cmp
inc
push
aam
xor
pop
adc
push
fs
adcl
mov
push
ja
fucomip
pop
sbb
push
pop
imul
nop
ret
adc
pop
or
jmp
data16
sub
cmp
idivl
sbb
icebp
xchg
sbb
aad
repz
inc
dec
and
xor
xor
dec
bswap
outsb
out
cmpsb
xor
jg
lods
shrl
fsubp
insl
dec
inc
daa
daa
lods
and
pop
and
fwait
pop
cmpsl
jmp
je
pop
aad
jae
mov
or
les
mov
and
or
or
scas
mov
sbb
or
mov
gs
xor
lret
sahf
aaa
dec
inc
inc
in
pop
in
dec
dec
adc
subb
ret
pop
outsb
jecxz
popl
jmp
lods
xchg
stc
add
inc
int3
mov
int
dec
addl
outsb
sub
das
sub
popa
add
push
and
addr16
push
in
cmp
rclb
and
sub
or
movsl
adc
ja
cmp
mov
xchg
add
jle
outsb
imul
and
stos
pop
loope
or
jne
pop
jb
jle
push
jb
pop
imulb
dec
andl
push
add
push
enter
in
inc
cmp
sbb
leave
rolb
test
in
rorl
sbb
and
daa
aaa
adcl
cmc
fimuls
add
xchg
ret
lock
decb
jmp
stos
sbb
outsb
xor
dec
loop
cwtl
addr16
fidivrs
in
pop
dec
xchg
cli
pop
mov
movb
xchg
rolb
gs
icebp
out
cld
xchg
sahf
sub
mov
into
idiv
mov
lret
gs
int
movsb
loopew
and
jno
jnp
inc
xchg
xor
add
jnp
das
ret
xchg
out
jae
or
out
mov
pop
cmp
xor
jle
push
cmp
fcmovb
pushf
insl
out
les
inc
arpl
hlt
fnsave
dec
inc
lods
ds
lods
rcr
xor
inc
sbb
std
dec
cltd
and
insb
outsl
push
sbb
insb
nop
int
jns
fwait
adc
rclb
xor
je
cmp
inc
gs
xchg
jp
mov
sbb
jp
repz
mov
xchg
and
lea
cmp
adc
test
mov
lods
jbe
pop
cmp
dec
sub
mov
call
lahf
sub
jl
dec
call
xchg
adc
call
aaa
add
add
jno
outsl
hlt
mov
mov
cld
add
mov
outsb
mov
jl
xchg
add
dec
and
test
adc
repz
out
cmp
jne
in
inc
xchg
cmp
aas
push
mov
fs
cmp
andb
into
pusha
aaa
jo
aas
add
sub
cltd
cmp
push
shll
lret
push
frstor
jne
es
pop
pop
and
jbe
into
xor
lcall
push
sbb
dec
je
mov
test
cli
fisubs
dec
lret
notb
mov
idivb
aas
cmp
inc
jns
das
inc
inc
sahf
insb
fisubl
bound
add
cmp
fldt
iret
in
cmc
and
ret
je
mov
ss
or
in
or
sub
call
and
call
xor
test
jle
std
cmpsl
int
xor
fs
mov
push
adc
jns
xchg
xchg
inc
sub
sarb
or
push
outsb
jle
imul
addr16
push
pop
adc
push
inc
jae
add
push
mov
subl
loope
ljmp
ljmp
fnstsw
xchg
aas
loop
clc
lahf
xchg
mov
jbe
lahf
cli
xchg
sbb
xor
adc
movsb
cmp
scas
mov
fwait
cmpsl
xor
mov
andb
repz
push
fimuls
mov
rolb
or
xchg
dec
out
push
xchg
rdpmc
sbb
ljmp
gs
stc
stos
sub
push
and
cmp
dec
or
lea
push
cmpsb
push
pushf
enter
int
push
jne
mov
dec
je
sbb
pop
push
out
stos
scas
mov
mov
sbb
push
mov
arpl
sub
je
adc
mov
jle
addl
jmp
pop
inc
icebp
lcall
fmull
jp
dec
dec
insb
push
das
mov
push
je
xchg
pop
fidivrl
xchg
test
push
jle
shr
bound
cli
js
loopne,pn
mov
adc
stc
mov
jg
dec
sub
aad
mov
fisttpl
adc
pop
cmp
in
dec
ljmp
test
in
inc
repz
cs
pop
data16
test
cmp
shll
scas
fstpl
std
les
insl
sti
pop
ljmp
push
dec
and
loope
cmp
in
out
lods
cmp
dec
push
aam
rorl
mov
mov
aas
shrb
outsl
andl
pop
push
jl
dec
dec
sbb
arpl
sbb
mov
jle
sarb
add
jecxz
adc
subb
mov
sbb
in
xor
xchg
int
lret
lds
jno
stos
aam
hlt
mov
orb
dec
xacquire
push
insl
xchg
mov
std
adc
lods
leave
dec
push
es
arpl
scas
sub
in
push
or
inc
push
jo
adc
es
mov
or
dec
inc
xchg
fidivs
cmp
gs
adc
imul
movsl
or
fiaddl
mov
cld
cli
push
add
fisubrs
cmp
mov
push
movsb
cmp
sbb
enter
leave
cmpsb
mov
inc
inc
jo
dec
mov
mov
adc
outsl
sti
cmpsl
gs
inc
fidivrs
icebp
fdiv
sub
daa
mov
cmp
and
ja
fwait
std
insl
insl
mov
in
ret
aas
mov
pop
sti
sub
add
mov
cmpsb
daa
xchg
je
sub
enter
je
and
rolb
cmpb
mov
cmp
addb
xchg
adc
adc
mov
xchg
ja
imul
into
add
xchg
mov
or
into
test
cmp
das
jno
jns
popa
cmp
dec
pop
icebp
aad
jp
mov
pop
add
mov
out
mov
sarl
xchg
repnz
mov
arpl
imul
xor
arpl
sub
pop
shll
out
inc
lds
mov
inc
movsb
add
jmp
and
sti
xchg
sbb
mov
fistpl
pop
cmpsb
jno
cmp
hlt
lret
test
aaa
pop
stc
cmpl
and
repz
dec
std
push
jmp
adc
out
fwait
mov
cmp
shlb
xchg
das
loope
mov
out
ss
stos
out
sahf
mov
inc
ja
mov
pop
jae
mov
mov
xchg
std
xchg
push
cmpsl
mov
mov
and
iret
push
sub
sbb
sarl
add
mov
loop
jbe
and
jl
loope
dec
sarb
lods
aad
pop
aas
inc
sti
sbb
popl
data16
mov
popf
jl
dec
dec
aad
push
leave
xor
sbb
push
insb
aaa
subl
mov
aaa
cwtl
test
bound
fwait
pop
mov
mov
mov
add
sysret
loop
push
xor
inc
jb
loope
ret
jmp
xchg
rclb
and
and
cmp
dec
cs
or
cmpsl
test
cmp
push
dec
dec
int
js
shrl
pop
pop
and
flds
pop
mov
loope
xchg
mov
xor
cmc
mov
pop
je
cli
mov
cli
xchg
push
mov
cmc
ret
xlat
mov
sub
ret
shlb
fidivrs
out
sub
lods
cmp
daa
jecxz
mov
mov
dec
jmp
jae
mov
push
cmp
lds
cmp
cli
insb
or
ds
in
and
adc
js
adc
mov
xchg
xor
popa
rolb
pop
cmp
mov
add
and
imul
xor
pusha
and
sarl
add
je
ret
aad
mov
ffree
jecxz
push
sub
xor
or
xchg
rolb
testb
push
imul
add
mov
shr
mov
scas
stos
outsl
jge
xlat
scas
stos
std
stc
jmp
pop
pop
sub
addr16
sub
inc
mov
or
je
lea
push
mov
jmp
adc
bound
xor
and
xor
or
insl
xchg
sub
adc
fcmovu
ds
xchg
sub
mov
mov
sub
aad
popa
imul
mov
movsl
inc
xchg
push
test
push
xchg
inc
loope
icebp
and
and
xor
add
adc
popa
mov
movsl
inc
xchg
push
test
push
xchg
inc
loope
icebp
and
and
xor
add
adc
popa
mov
movsl
inc
xchg
push
test
push
xchg
inc
loope
cmc
and
adc
aad
lds
jno
rcll
iret
sub
xor
ljmp
addl
cwtl
pop
mov
mov
mov
xchg
xchg
fs
hlt
inc
push
test
push
xchg
push
loope
icebp
cli
roll
jno
xor
popa
mov
jnp
xor
pop
scas
push
adc
pop
mov
dec
and
aad
fnstenv
inc
mov
lahf
ss
loopne
xchg
pop
lds
inc
push
mov
lds
mov
movsl
xor
inc
lcall
andl
lods
out
mov
addr16
mov
push
push
adc
or
out
cli
xchg
out
xor
icebp
daa
mov
cmp
orb
jmp
xor
or
sbb
push
push
in
leave
es
push
les
sarb
out
mov
push
out
or
test
dec
fidivrs
push
xchg
push
inc
jb
test
push
loope
popa
cmpsb
incb
xchg
xchg
mov
notl
xlat
and
and
mov
jle
xor
insb
and
cmc
inc
push
sub
add
mov
out
or
inc
push
xchg
es
addl
imul
fsts
outsl
push
inc
xor
lds
cmp
das
mov
inc
loopne
repz
bnd
or
push
mov
arpl
ja
addr16
xor
sub
loopne
jecxz
icebp
adc
adc
icebp
push
shlb
add
jbe
inc
rcll
cmpsb
xor
popa
out
testb
mov
push
xchg
push
loope
icebp
jbe
inc
rcll
cmpsb
xor
popa
out
testb
mov
movsl
into
cmp
sbb
fisubs
loopne
cmp
test
out
push
loop
mov
scas
shlb
pop
adc
mov
cmp
sti
sbb
mov
inc
test
enter
sub
sbb
xchg
adc
xchg
aas
pop
pop
clc
jmp
in
pop
sbb
das
xchg
mov
lret
jg
cltd
cmp
lods
rcrb
sub
pop
movsb
mov
sbb
mov
jmp
stos
add
dec
mov
popa
jne
add
mov
xchg
pop
push
mov
outsb
movsl
clc
push
ds
mov
popa
jne
xor
ss
ret
mov
and
adcb
out
mov
mov
in
xorb
lods
sbb
cmp
je
movsl
stc
imul
adcb
push
lock
testl
push
fbstp
xor
repz
rclb
sbb
lods
pushl
xlat
dec
out
rcrl
jle
mov
jmp
adc
ja
ss
int
xchg
mov
nop
jl
cmp
ror
ss
ja
mov
xchg
sbb
call
xor
filds
xchg
cwtl
enter
xor
mov
fcomps
outsb
stos
sarl
stos
mov
sbb
addr16
jmp
xlat
in
and
mov
imul
clc
lods
inc
movsb
sahf
into
popa
pop
xor
adc
pop
add
inc
js
jl
adc
push
sub
in
roll
fsubrp
int3
xor
sbb
push
xor
or
mov
or
or
mov
popa
push
mov
out
jmp
inc
jle
cltd
addl
sti
adc
ret
int3
aas
movsl
lds
shrb
adc
mov
push
cmp
int3
pop
movsl
sti
mov
aad
hlt
inc
push
popf
dec
ds
dec
stos
lret
cld
sbb
dec
test
jge
add
lea
in
inc
rcll
fsin
fistpll
lods
insl
call
imul
dec
adc
mov
push
cmp
xchg
inc
inc
fstl
mov
out
xor
clc
es
dec
mov
pop
sbb
xor
mov
jno
sbb
inc
sbb
lods
pop
imul
nop
mov
or
int3
pop
mov
jg
rolb
cmp
jne
aad
mov
insl
js
and
scas
insl
nop
xor
lods
fdivp
scas
in
scas
sarl
mov
jno
lret
jecxz
jmp
mov
inc
je
mov
xlat
mov
je
idivl
call
es
push
mov
adc
mov
xchg
mov
pop
imul
scas
out
insb
mov
and
mov
sub
push
jge
mov
movsb
outsl
jge
ret
test
sub
ss
in
cmpsl
sbbl
mov
rorl
or
ss
rorb
aad
sbb
mov
add
push
and
mul
mov
dec
pusha
inc
mov
add
loop
pop
stc
ljmp
stos
jno
decl
sub
in
xor
xbegin
pop
icebp
cmc
push
fcompl
ja
fldl
test
add
jns
adc
out
clc
and
int3
mov
pop
xor
add
outsb
clc
clc
cmpb
dec
lods
dec
ror
inc
mov
xchg
scas
scas
test
aad
or
rol
push
push
mov
jmp
mov
adc
fistps
jne
ljmp
ss
pop
sbb
mov
jmp
roll
hlt
xchg
mov
pop
cmp
loop
loop
mov
test
mov
lea
out
pop
inc
mov
push
fdiv
jbe
pusha
inc
gs
jg
mov
xlat
je
push
outsl
jnp
pop
mov
push
mov
in
xor
mov
std
xorb
inc
xchg
adc
repnz
inc
mov
xor
fld
add
cwtl
mov
add
fwait
cmovns
outsl
and
iret
imull
fwait
mov
loop
ja
loope
xchg
cmc
setb
repz
aam
push
dec
icebp
pop
and
cwtl
dec
out
xor
mov
mov
test
ljmp
ret
xor
call
je
andb
jno
push
sub
fildll
popf
shrl
loope
jae
rcll
adc
jle
jnp
iret
clc
xchg
jbe
xlat
mov
xchg
in
mov
daa
add
sbb
push
add
fildl
dec
mov
popf
dec
sub
add
gs
jle
jmp
out
jmp
mov
mov
lea
mov
mov
ja
pop
mov
push
adc
mov
jns
hlt
mov
jo
inc
mov
inc
jnp
arpl
out
inc
lods
test
xor
int
or
es
or
or
mov
scas
mov
jb
mov
jge
adc
mov
jo
leave
mov
adc
fwait
mov
mov
aam
subl
aas
mov
std
addr16
or
sub
faddl
int3
arpl
jae
orl
data16
pop
outsb
lods
stos
faddl
sbb
imul
mov
aaa
movsb
aas
dec
out
or
push
js
mov
fstpt
sbb
mov
sub
add
iret
pop
xchg
jbe
bnd
xchg
bound
repnz
jle
outsl
xor
jb
cmc
std
or
sub
fwait
jns
in
cmpsl
clc
ja
inc
iret
std
xor
mov
adc
jne
mov
out
sbb
fstpl
stc
ret
mov
sub
push
out
je
in
mov
aaa
popa
mov
mov
ss
adc
inc
hlt
test
mov
dec
lea
pop
cmp
aaa
aas
xor
shlb
sbb
pop
pushf
inc
cmpsb
cmpsb
cmp
mov
dec
sub
repz
cmp
lcall
add
add
xchg
adc
fsubs
out
test
pop
arpl
push
xor
les
aas
nop
pop
fdivs
nop
jo
push
sbb
mov
push
mov
add
repz
mov
ret
push
daa
push
and
lret
ret
jns
inc
add
enter
sar
mov
bound
cmpsl
push
cmpsb
pop
pushf
dec
sbb
test
flds
cltd
mov
mov
xchg
sub
xor
arpl
hlt
inc
mov
add
sub
cld
rcrl
push
add
dec
inc
jl
addr16
idivl
aas
xchg
cltd
xor
ds
pusha
clc
mov
popa
mov
sub
filds
mov
lahf
ror
shrb
cmp
mov
pop
out
stc
repz
fwait
ds
mov
push
xor
aam
dec
cmc
mov
arpl
out
jmp
addl
jle
pop
mov
jmp
adc
int3
or
xor
pushf
test
mov
in
xchg
mov
int
sbb
mov
jecxz,pn
pop
mov
dec
call
mov
insb
push
test
and
dec
or
jno
jne
sub
les
loope
jle
push
push
cmp
pop
bound
rclb
pushf
daa
dec
jmp
cmp
jb
or
lcall
pop
pop
popf
inc
pop
xor
and
pop
mov
mov
mov
sarb
or
xor
sub
adc
add
push
adc
mov
pop
rolb
lcall
mov
sbb
divb
xor
xor
jecxz
in
push
dec
mov
in
lods
lea
add
mov
sub
rorl
lea
sbb
push
push
jecxz
xor
sub
imul
stos
inc
jnp
sub
mov
repz
aaa
mov
inc
adc
dec
dec
loopne
bound
mov
dec
out
jo
dec
jg
rorb
test
adc
imul
dec
and
sub
jl
inc
std
mov
xchg
sub
sbb
lods
or
dec
pop
out
sub
leave
mov
push
mov
mov
push
jne
in
sbb
in
fdivrl
push
rcrl
shr
sti
jne
xor
fwait
lret
xchg
jmp
imul
adc
in
std
in
bnd
dec
sub
iret
mov
mov
inc
mov
jbe
mov
cmp
adc
pop
lea
mov
cmpsl
stos
pop
dec
or
inc
xchg
lret
cmp
popa
cmpsb
lods
xor
inc
leave
adc
ss
inc
inc
mov
pop
ret
jns
jne
inc
lret
sbb
adc
pop
fs
mov
inc
or
out
out
xchg
fsubr
cld
mov
loop
int3
popf
pop
paddusb
ret
or
and
inc
add
mov
aaa
inc
xchg
subb
mov
setge
push
and
js
cmp
push
or
add
or
int
add
outsb
insl
arpl
int
mov
stos
dec
test
xor
out
dec
and
adc
jp
push
popa
mov
inc
dec
dec
sub
xchg
add
xchg
cmpsl
mov
pushf
sbb
addr16
mov
or
mov
in
xor
loope,pt
shrl
jmp
lods
push
cmp
cmp
xchg
ss
fnstenv
xor
xchg
inc
cld
adc
daa
mov
sbb
push
daa
inc
lock
adc
pop
pop
mov
shrl
push
pop
jns
push
sbb
inc
stc
out
jmp
cltd
inc
test
into
sub
out
sbb
sbbb
scas
jae
push
push
mov
and
cmp
add
repz
and
xor
or
and
mov
fnstsw
pop
adc
pushf
xor
xchg
sahf
jbe
xchg
inc
mov
aas
fs
stos
in
and
nop
rol
push
fisttps
sbb
pmaxsw
inc
push
in
or
sahf
xchg
or
in
mov
xor
fdivr
jbe
cld
stos
mov
shlb
orb
mov
adcb
pushf
mov
aas
pop
andl
scas
mov
ljmp
insl
sbb
pop
mov
insl
clc
sbbb
out
test
xor
or
sub
std
or
repnz
xor
loop
sub
mov
xchg
mov
icebp
inc
or
add
fnstcw
mov
push
adc
or
pop
inc
xor
les
xchg
xor
jae
sub
xchg
xchg
lahf
adc
ret
out
cwtl
cmp
bound
mov
jnp
pop
xor
push
xchg
out
push
inc
movsl
mov
mov
je
sbb
lods
or
outsl
sbb
cwtl
mov
cmc
cmpsb
sub
sbb
jo
jle
fidivl
pop
adc
ret
test
pop
ret
jecxz
mov
mov
xlat
pop
dec
add
push
cs
ret
iret
push
mov
fcomps
inc
mov
aaa
bound
cs
pop
xor
push
push
insb
movsl
jle
jle
mov
stos
mov
xchg
inc
loop
add
mov
mov
inc
rcll
or
add
in
mov
push
dec
jl
jae
adc
imul
inc
sbb
push
lods
or
add
sbb
orb
cmp
call
rcrb
jg
mov
adc
dec
jecxz
fmuls
or
lods
sahf
rcl
inc
testb
sub
sub
cmp
xchg
fisubrs
add
aam
fdivl
notb
mov
lds
jno
scas
xor
popf
mov
jnp
lea
lahf
add
shl
jmp
push
dec
gs
hlt
cmc
ret
mov
lret
arpl
scas
movq
inc
fwait
adc
inc
mov
inc
adc
cmp
xor
sub
dec
leave
and
or
xor
mov
push
stc
mov
cmp
jb
cmp
xchg
inc
mov
and
in
fidivrs
test
push
push
dec
dec
out
js
aas
pop
inc
and
outsb
pop
js
out
dec
push
cmp
lcall
xor
out
inc
sbb
es
ret
jle
je
lds
ljmp
sub
std
or
scas
pop
sub
mov
fisubs
mov
inc
subb
push
jp,pn
cli
hlt
or
in
imul
jge
int3
jbe
out
lods
mov
cli
mov
ds
loopew
inc
ss
xchg
clc
jle
test
insb
inc
rcrl
imul
lods
and
xchg
inc
jns
inc
dec
lods
pop
xor
mov
icebp
insl
insl
xor
fs
cld
in
add
cli
xchg
lcall
loope
xorb
cmp
testl
rcrb
inc
jmp
movsb
mov
xchg
clc
scas
scas
push
rcr
insl
add
jmp
loope
decb
or
xchg
imul
push
xor
out
xchg
pop
mov
cmp
cmp
lods
push
js
push
outsl
dec
jecxz
cmp
and
mov
pop
xor
fisttpl
sub
inc
xchg
das
test
mov
sub
outsb
mov
inc
fisttpll
inc
int3
outsb
mov
or
push
in
adc
repnz
inc
nop
push
dec
inc
xlat
push
and
ret
outsb
test
rorl
stos
push
dec
fisttpl
loop
lret
lret
jmp
push
shlb
js
xor
pop
sarb
nop
fcmovbe
test
shlb
lcall
jns
mov
pusha
mov
mov
imul
mov
sub
dec
mov
mov
adc
push
sarb
cmp
mov
sahf
in
shlb
cmp
pushf
insb
scas
mov
jns
cmp
jno
fsubrl
es
inc
leave
js
cltd
lret
movsb
rcrb
jl
cs
out
jns
out
and
arpl
sub
sub
sub
cmovae
test
mov
push
data16
into
lret
xchg
inc
jbe
pop
lahf
out
test
and
ljmp
mov
notl
gs
repz
icebp
push
sub
mov
mov
and
mov
ret
pop
ljmp
mov
mov
and
xchg
popf
jl
add
mov
push
dec
aam
mov
adc
lret
inc
and
pusha
push
pop
push
mov
push
xchg
test
jecxz
mov
lret
inc
push
lret
ja
dec
test
cmp
fsubrl
add
and
dec
mov
std
mov
test
dec
jno
mov
add
arpl
cmpsb
ds
pushf
repz
cmp
loope
lahf
mov
xor
mov
rorb
das
dec
adc
pop
imull
xor
add
adc
dec
inc
aad
dec
aam
adc
add
insb
in
xchg
test
xchg
mov
inc
cld
ficompl
movsb
xor
clc
pop
or
js
jno
je
mov
mov
subb
add
inc
sbb
cmp
ja
sbb
add
aaa
push
insb
fwait
dec
xor
cmp
imul
adc
mov
mov
adc
jle
rol
popa
xchg
and
inc
mov
push
jnp
jge
xor
dec
testl
popa
pop
lcall
push
adcl
testl
pop
fisubl
out
jecxz
mov
popf
dec
push
pushf
jecxz
sbb
mov
test
or
leave
andl
add
test
push
out
insl
outsb
lret
dec
pop
push
mov
in
or
mov
push
sbb
je
scas
sbb
and
daa
je
xor
sahf
into
xor
xchg
mov
inc
lret
lods
js
xchg
sahf
in
sbb
xchg
adc
lahf
pop
jo
notl
leave
mov
stos
mov
mov
lea
inc
lods
push
out
stos
int
cld
jecxz
aad
mov
cli
push
lret
bound
in
dec
ud1
pop
outsl
jg
adc
outsl
movsb
mov
cld
push
fst
lods
xlat
jecxz
xor
sub
xchg
pop
sti
dec
adc
push
fisubrs
ss
inc
jae
gs
dec
in
mov
arpl
sbb
in
insl
jp
sbb
jno
push
or
xchg
sti
jmp
push
pop
mov
cmp
fdivr
cmp
rorb
mov
push
repz
cltd
sub
fwait
imul
xor
xchg
loopne
sub
test
add
mov
cmp
in
lret
stos
sbb
fildll
cmp
ficompl
lret
cmp
out
mov
cwtl
jp
push
insl
or
fs
jae
shrl
cmp
mov
pop
cltd
loope
mov
data16
mov
call
lea
stc
mov
xchg
scas
or
cmp
ljmp
fsubs
lods
out
jecxz
push
mov
cmp
out
dec
push
outsl
jmp
cmpsl
inc
outsl
or
gs
ret
inc
cmp
mov
dec
push
incb
iret
je
imulb
add
cmp
pop
push
jne
mov
ret
shlb
and
push
inc
sub
lret
mov
adc
mov
or
pop
cmc
mov
cmc
xchg
movsb
mov
xchg
mov
push
scas
mov
xor
stos
sbb
scas
mov
xchg
push
xchg
andl
adc
addb
fstl
jle
mov
pushf
mov
xchg
loop
lahf
xlat
push
lods
pop
fwait
nop
aas
stos
jge
insb
aas
push
fwait
imul
mov
lahf
push
loope
adc
mov
insl
out
dec
pop
sbb
cmpsl
lcall
mov
fwait
mov
lret
out
loop
add
xor
ret
mov
inc
aas
mov
mov
cmpsb
popa
jne
mov
cmp
rcrb
mov
mov
jno
lret
sbb
leave
aaa
pop
jns
jb
test
push
add
mov
adc
daa
jbe,pn
pop
xchg
add
or
mov
rorb
cmp
outsb
lods
nop
mov
mov
dec
out
das
push
mov
inc
dec
jp
jae
fdivl
sub
pop
out
cmp
inc
mov
mov
sbb
dec
push
adc
mov
sbb
call
or
xor
ror
sub
add
insb
xor
test
add
mov
je
in
xor
lods
inc
ljmp
cmpsl
jnp
mov
mov
pop
enter
xlat
sub
sub
xchg
xor
pusha
mov
push
add
sti
dec
push
lahf
les
push
adc
popa
fwait
mov
aam
imul
fdiv
lahf
sub
sbb
xchg
sub
adc
sbb
fcom
inc
daa
sbb
hlt
and
add
in
inc
lret
loopne
inc
add
aas
push
ret
push
mov
pop
pop
leave
or
jle
jno
imul
imul
lret
mov
pop
sbb
pop
cli
pushf
dec
lcall
xorl
pop
bound
frstor
mov
insl
mov
xchg
pop
push
push
sbb
out
inc
jge
jg
imul
and
jmp
mov
xchg
sbb
sub
popa
fdiv
or
xchg
xchg
or
mov
div
les
addr16
sahf
or
in
aas
fdivrl
rolb
and
mov
sbb
inc
cmp
fcoms
mov
mov
inc
push
jle
mov
outsb
ljmp
roll
pop
call
mov
in
int
mov
lcall
rol
fimuls
les
sub
mov
addr16
js
xchg
xor
add
mov
mov
xchg
or
ret
pop
and
pop
stos
mov
out
lcall
test
mov
inc
mov
dec
xor
mov
jmp
fstp
nop
pusha
and
add
or
int
or
enter
je
mov
enter
roll
stos
and
sar
ret
jne
into
aam
adc
cmpsb
mov
imul
jb
mov
mov
dec
mov
frstor
pop
mov
sub
cmp
std
popf
les
ja
pusha
aam
push
mov
pop
rcrb
out
out
fsts
test
dec
orl
xchg
insb
daa
pop
out
test
xchg
cmp
push
jmp
in
xor
sub
jp
decb
movsb
aas
mov
fst
mov
pop
jne
ja
inc
pop
adc
mov
push
in
cmp
mov
outsb
xor
adc
adc
fimuls
pop
inc
pop
jp
mov
or
ror
ss
lea
loope
icebp
jbe
inc
rcll
cmpsb
xor
popa
out
testb
mov
push
xchg
push
loope
icebp
jbe
inc
rcll
cmpsb
xor
popa
out
testb
mov
jle
push
loopne
cmc
faddp
inc
rclb
jle
mov
xchg
testb
mov
push
mov
jbe
push
push
and
sbb
xchg
loope
outsb
stc
or
and
clc
aam
lea
out
inc
shrl
pop
cmpsb
or
add
add
add
or
add
add
sbb
arpl
test
add
inc
add
add
call
add
add
loop
enter
les
adc
cmp
inc
add
add
push
add
jno
inc
add
add
jmp
sub
rolb
add
add
add
add
push
add
add
adc
pop
add
inc
add
add
add
push
add
add
add
xchg
add
mov
push
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
add
adc
stos
add
add
add
add
add
add
add
stc
add
push
add
xchg
add
add
add
pop
add
rolb
push
add
das
add
add
add
cltd
add
xchg
add
add
add
add
imul
add
add
add
add
add
out
inc
add
sbb
sbb
cmp
add
add
add
inc
add
add
add
add
add
add
filds
xchg
add
add
add
enter
mov
int3
add
add
add
add
add
or
xor
int
push
add
add
add
add
add
add
add
add
add
add
loop
outsl
add
add
outsl
add
add
add
add
testl
das
add
add
add
addl
rolb
add
add
add
and
and
inc
add
add
add
add
mov
arpl
add
mov
add
add
add
xor
cltd
add
leave
add
add
arpl
push
add
add
add
or
add
add
push
int
push
add
sbb
push
add
add
add
add
add
or
arpl
imul
add
add
add
jne
into
add
add
inc
add
leave
add
add
lds
inc
add
in
data16
add
add
fildl
xchg
add
add
push
add
mov
test
jne
test
add
add
add
add
sbb
mov
add
in
inc
add
add
add
lods
add
add
cmp
loope
or
das
add
add
sub
add
testl
loope
or
jne
xchg
add
add
loop
aaa
add
add
add
add
add
gs
add
add
add
add
pop
add
push
xchg
push
cmp
inc
add
add
add
outsl
add
add
popa
add
add
add
add
add
add
add
and
adc
call
add
loope
push
rolb
xor
int
push
add
add
add
add
add
add
lea
daa
push
int
push
add
pop
add
add
add
add
add
jno
push
add
outsl
add
outsl
add
add
add
add
add
add
add
add
add
push
add
inc
add
add
mov
and
mov
add
add
stos
add
sbb
arpl
dec
push
inc
adc
push
test
cmc
pop
scas
pop
dec
sbb
popa
push
movsl
sbb
pop
mov
adc
xchg
add
shlb
test
or
lret
jbe
rorl
cltd
arpl
sbb
jno
cld
or
mov
push
jmpw
popf
test
ret
jecxz
addl
mov
push
cmc
mov
push
adc
dec
test
clc
add
rsqrtps
mov
ret
nop
out
or
je
or
cmpsl
jg
daa
mov
xor
lods
sbb
call
push
mov
imul
xchg
outsl
jp
ds
js
sub
or
xor
sar
aaa
inc
aad
cmpl
adc
shlb
add
loopne
xchg
push
pop
and
cs
adc
fsub
lods
inc
add
imul
lods
mov
dec
add
es
dec
sahf
mov
jne
outsl
and
or
lret
or
je
mov
test
mov
pusha
xchg
sub
cwtl
mov
jecxz
cs
fstl
icebp
jno
roll
adc
ja
mov
into
dec
or
fdivrs
mov
mov
lahf
test
rcrb
mov
fstp
cltd
xchg
out
imul
cmc
test
aaa
rsm
dec
fsubl
shr
fdivrl
daa
divps
lds
or
jns
push
arpl
fsubp
pop
and
fwait
adc
cmp
mov
jp
add
xchg
aaa
mov
adc
xchg
push
out
push
pop
ja
dec
fs
call
cltd
sbb
lods
test
into
mov
inc
mov
push
mov
fidivrs
dec
pop
stc
ret
push
fldt
test
ss
ds
dec
stos
test
mov
jb
xor
mov
sub
and
lea
push
dec
imul
outsb
int
xchg
sub
push
shrl
loop
push
xor
xor
xor
jge
in
repnz
ljmp
and
cli
inc
xchg
fistpll
inc
jl
xor
jmp
sti
ja
push
mov
fcmovu
jg
or
pusha
jecxz
inc
fcmovnb
imul
scas
test
das
insb
sbb
dec
and
jns
ss
sbb
sahf
inc
mov
push
jl
sti
in
mov
mov
rcl
xor
adc
pop
cli
pminub
sbb
mov
fsubl
cmpsl
inc
mov
imul
test
fistpll
xchg
aas
test
jnp
imul
mov
movsl
push
xchg
sub
and
add
mov
xchg
sub
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
