call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
cmc
icebp
out
aad
lds
mov
mov
push
gs
inc
xor
enter
add
mov
mov
movsl
xchg
xchg
xchg
aaa
pop
inc
inc
jbe
es
dec
push
adc
inc
dec
push
mov
test
in
mov
inc
inc
ds
aaa
pop
push
inc
inc
addr16
popa
cwtl
mov
movsb
xchg
pop
dec
push
lods
inc
xor
push
lcall
sub
ljmp
push
mov
es
jp
mov
cltd
shrl
jp
push
sahf
stc
dec
or
shlb
sahf
gs
and
inc
push
inc
mov
faddp
cmp
sub
mov
xor
sub
dec
mov
xchg
ja
test
stos
mov
test
ljmp
imulb
pop
cmp
movsb
sbb
push
in
push
mov
mov
pop
es
inc
or
xlat
mov
dec
push
imul
bound
mov
stc
add
mov
mov
movsl
xchg
xchg
and
mov
cld
int
push
jbe
jle
sub
and
push
aaa
lahf
cmc
xchg
mov
adc
enter
ret
xor
es
jb
dec
jg
arpl
andl
out
mull
shll
push
pop
jne,pt
jp
and
lcall
test
xchg
xchg
xchg
push
push
inc
inc
ss
push
add
aad
lds
xchg
xchg
push
push
inc
inc
ss
push
add
adc
push
sub
dec
lods
clc
cmp
mov
xor
rol
sahf
iret
dec
mov
shl
insb
aaa
dec
adc
mov
data16
sbb
stos
add
les
cltd
test
xchg
aad
mov
sbb
lods
inc
cmc
push
cltd
xchg
mov
sub
xor
imul
hlt
test
xor
les
lcall
int3
push
jmp
push
cmp
or
mov
adc
and
mov
sub
movsl
cmp
icebp
push
inc
jnp
popf
outsb
inc
and
sbb
cmp
push
shll
adc
aam
out
in
cltd
jg
sahf
test
inc
sti
das
insb
sub
push
mov
jns
sbb
leave
xor
mov
inc
into
dec
mov
psrad
dec
sbb
or
movsb
mov
cmc
pushf
cmpsb
push
aaa
sub
dec
jbe
lock
jmp
adc
das
in
stos
ds
hlt
iret
cmp
out
sub
push
insl
pusha
lcall
cmc
xor
xchg
ljmp
mov
dec
mov
clc
lahf
mov
sbb
out
jl
pushl
sahf
lret
push
ret
fstpt
xchg
loop
inc
jns
adc
xor
and
or
jge
std
loopne
mov
jge
or
xor
push
pop
fimull
rcl
sahf
push
test
cmp
and
aas
or
or
jnp
es
mov
inc
ljmp
lcall
scas
in
cmp
mov
int3
cmp
mov
push
or
roll
loope
push
cmp
in
test
mov
insb
lds
jne
xor
dec
in
dec
sub
sarb
mov
mov
xchg
es
xor
int3
xchg
jge
mov
push
sbb
outsb
lcall
repz
in
es
lods
xor
inc
dec
iret
ss
outsl
js
mov
mov
inc
sti
adc
fsubrs
mov
movsl
mov
dec
mov
ss
repnz
sub
push
jge
test
out
xchg
lret
add
xlat
nop
push
insb
sub
aaa
xchg
dec
jmp
add
lods
popf
jo
push
adc
hlt
xor
pusha
mov
adc
or
mov
ja
insb
lock
enter
ficompl
outsl
arpl
add
jge
jg
mov
std
rorl
xchg
lds
shrb
lahf
mov
mov
ljmp
xchg
lea
or
pushf
lret
jb
xlat
xchg
xchg
ds
and
ja
jmp
ljmp
push
xchg
push
mulb
and
sarb
mov
loop
xor
bound
cwtl
or
popf
outsl
inc
daa
hlt
test
rol
xor
fsubrs
aas
fsubrp
jne
outsl
mov
xor
sbb
stos
xchg
mov
jbe
addr16
fidivl
ds
sub
jns
and
nop
mov
les
mov
loopne
test
fwait
pop
jl
add
pop
sub
xchg
push
pop
jmp
insl
lds
in
and
sub
or
xor
inc
jae
arpl
call
and
movsl
add
test
cmp
dec
xlat
ss
mov
cmp
imul
rcrb
mov
jecxz
ljmp
sub
push
movsl
mov
mov
mov
mov
cmpsb
mov
fs
cmp
leave
ja
out
movsl
and
pop
fcoml
sbb
aaa
loope
mov
jle
notb
and
lret
fmull
stos
push
sti
ret
mov
orb
in
mov
inc
mov
fsts
stos
adc
xchg
movq
iret
xchg
adc
xchg
mov
insb
das
outsl
mov
and
decl
or
push
mov
in
fs
or
outsl
xchg
adc
and
sarb
lea
mov
mov
sbbb
xor
and
or
and
mov
mov
jle
sbb
mov
adc
andb
test
mov
mov
jbe
sahf
push
jmp
adc
mov
dec
fsubr
lock
lods
cmp
push
data16
sub
mov
sbb
mov
in
sbb
mov
int
sub
mov
or
xchg
pushf
cwtl
xchg
and
sub
mov
sbbb
adcl
orl
xor
pop
and
xor
pushf
loopne
sub
or
jl
dec
xchg
int3
sahf
adc
add
mov
mov
loop
lahf
add
leave
rolb
testb
mov
sbb
cmp
lods
imul
outsb
aaa
and
xchg
sub
jl
pop
jno
out
flds
insb
mov
cmp
xor
inc
jns
mov
mov
imulb
pop
repnz
adcl
mov
fdivrp
xchg
stos
cld
dec
or
pop
add
mov
imul
js
fwait
lods
push
stc
mov
pushf
std
in
dec
add
jno
out
push
jmp
cmp
xor
and
adc
push
push
mov
push
xor
mov
arpl
js
les
adcl
into
xchg
push
fnstenv
data16
das
jmp
popf
push
jo
icebp
add
adc
mov
dec
xchg
rcrb
in
pusha
pusha
enter
fidivrs
jge
lret
cmpl
push
xor
ffreep
cwtl
xor
sahf
xchg
je
hlt
sbb
in
xlat
mov
xchg
sub
arpl
add
sarl
loope,pn
dec
pop
and
add
add
inc
mov
repnz
data16
inc
xor
cmp
psrlq
fnstenv
lahf
mov
inc
dec
loop
ja
lods
outsb
pop
mov
inc
insl
sti
stc
and
jle
pop
les
mov
sbb
mov
enter
shrb
cmp
pop
arpl
clc
ss
lods
pop
push
outsb
and
addb
jp
cmc
fwait
mov
inc
push
aas
sbb
jae
mov
orb
or
cmp
fildl
inc
call
loopne
sub
stc
imul
dec
xor
pop
addb
sbb
jae
int3
mov
aaa
xchg
rcll
lock
hlt
in
mov
test
lret
call
push
nop
add
fcompp
hlt
aad
mov
cmc
mov
sub
adc
push
mov
lret
cmp
or
cs
jmp
mov
loope
out
mov
cld
xchg
test
xor
rcl
sub
out
sub
xchg
jae
in
cmc
bound
jae
pop
xlat
cmc
sahf
lcall
sub
mov
jg
xor
push
in
test
and
push
dec
cmpsb
push
aam
ja
push
dec
fistps
jl
cmc
xlat
sbb
xchg
lods
sub
sbb
cs
xchg
xchg
push
cld
dec
inc
cmpl
xor
cmp
or
out
sbb
or
loopne
mov
movsb
mov
vmread
movsb
and
lock
fisubl
xor
inc
xchg
fcoml
out
shl
and
arpl
aad
out
pop
mov
leave
pop
ss
add
insl
jp
loopne
outsb
mov
push
and
stos
jmp
sbb
loopne
mov
or
ss
sbb
and
and
jbe
out
pop
roll
inc
inc
add
scas
inc
mov
cmp
mov
push
ja
mov
jae
int
xlat
pop
pop
jns
daa
mov
dec
les
shl
std
sbbb
jmp
push
push
and
pop
mov
cwtl
adc
mov
jb
pop
sti
inc
mov
pop
das
pop
in
inc
sbb
inc
sub
jg
sub
subb
push
mov
jns
lock
push
cmp
decb
adc
cltd
test
loopne
cld
and
cwtl
jmp
in
in
sub
mov
aad
sbb
inc
insl
pop
dec
cli
xor
jecxz
movsb
mov
sub
pop
mull
and
pop
arpl
pop
pop
imul
ja
dec
pop
mov
push
mov
icebp
ja
sar
fcoml
xor
stos
inc
aaa
xchg
inc
adc
mov
nop
adc
lds
movsb
jno
xor
mov
mov
sbb
out
aas
loop
mov
push
jmp
push
lcall
xchg
and
jae
les
mov
sub
cmp
call
int3
mov
sbb
pop
hlt
push
or
nop
ficoml
xchg
rcrl
int3
add
cmp
and
sbb
xchg
js,pn
push
mov
cli
cmp
idivl
aas
rorb
rclb
inc
inc
fdiv
out
arpl
sbb
add
jno
cmp
in
mov
ja
std
and
or
or
shll
test
fstps
mov
hlt
xchg
lock
or
loop
test
xorb
int3
pop
mov
repz
sub
fnstenv
jo
repz
test
or
adc
cmp
push
lock
pushf
and
pop
rcl
pushf
push
mov
sahf
sbb
lock
outsl
or
scas
repnz
aas
ficoml
pop
pop
xchg
sbb
push
pop
lea
test
jno
jge
lds
mov
pusha
add
add
pop
adc
movsb
pop
mov
jmp
lods
sub
fiaddl
ljmp
ret
imul
or
aam
jg
je
inc
iret
test
jns
cli
data16
cmp
mov
jo
out
cmp
inc
test
push
add
xor
xor
pop
mov
int
mov
popa
push
mov
pop
mov
xchg
inc
xlat
xchg
mov
ss
push
mov
jl
iret
mov
jp
aaa
add
mov
or
cli
ljmp
fwait
out
and
adc
fwait
xor
in
cs
in
xor
adc
and
sbb
pop
subb
sub
fcomp
ret
add
fnsave
jp
nop
push
jg
sub
sbb
mov
cmp
sbb
or
fimuls
add
ret
mov
mov
aas
xchg
insl
movsl
or
jnp
sub
mov
dec
bound
stos
int3
stos
mov
loop
add
jnp
notb
rcr
pop
and
out
cmp
aad
dec
fadds
and
jo
push
mov
mov
repz
sbb
mov
dec
stos
popa
divb
jl
dec
jno
aas
adc
xor
add
test
ret
mov
loope
mov
sbb
std
pushf
mov
or
mov
and
adc
cmc
dec
js
push
or
iret
cmc
add
mov
call
outsl
insb
adc
sbb
jmp
je
imul
push
cli
adc
mov
out
fcoml
xchg
shll
push
out
mov
pop
aaa
insl
aas
pop
cmc
lret
push
stos
pop
xchg
mov
shr
or
and
sarl
mov
inc
fldt
in
gs
mov
pop
icebp
cmpsb
shl
fstpt
add
add
jo
sbb
push
shrl
out
sbb
test
pop
ret
jae
push
hlt
rol
in
in
xchg
xor
aad
shl
mov
mov
popa
mov
leave
push
pop
dec
daa
clc
mov
sbb
push
div
aam
push
mov
pop
into
test
xor
dec
xchg
out
arpl
jg
in
dec
sbb
pop
sub
mov
in
stos
inc
inc
pop
xor
lods
pop
cld
or
cmpsl
fsubs
ds
mov
mov
xor
clc
es
in
and
cmc
inc
call
fiaddl
mov
jg
mov
sbb
ds
mov
fcomi
or
aaa
xchg
in
ds
lods
xor
pushf
imul
jcxz
fsubrl
or
cmp
insl
dec
add
shl
and
cwtd
test
nop
mov
cmp
xor
inc
cmp
sub
lods
ret
push
xchg
je
sub
icebp
ficoms
sub
scas
push
and
js
cmpsl
std
cmpsl
gs
mov
sub
loope
mov
cs
aaa
pop
testb
ljmp
lahf
add
jbe
je
int
sahf
pop
cmc
aas
lcall
filds
push
inc
mov
in
and
outsl
clc
mov
repnz
cmc
push
test
xchg
mov
cmpb
dec
dec
jo
subl
inc
mov
inc
add
xchg
mov
addr16
dec
sbbl
jle
arpl
adc
xor
xor
and
jl
daa
lcall
or
mov
xor
pusha
inc
mov
scas
push
dec
jae
cmp
mov
pop
insb
rep
add
loope
ss
inc
and
jbe
jae
sub
inc
subb
mov
movsb
xchg
push
cmpsl
daa
enter
lret
lods
cmp
inc
push
push
inc
stos
subl
mov
ftst
in
popf
repnz
push
xchg
inc
inc
or
and
push
addr16
repz
bound
ss
cmpsb
add
sbb
icebp
rcrb
mov
cmp
sub
das
hlt
ret
cmc
mov
scas
xchg
fidivrl
in
fucom
dec
pop
sub
pop
inc
pop
inc
xchg
lods
subl
cwtl
inc
mov
popa
mov
sbb
dec
in
ja
or
loop,pt
push
cmp
adc
add
jp
adc
pop
movsb
rclb
popa
inc
aam
cmp
xchg
and
push
push
iret
in
icebp
movsl
adc
popl
dec
xchg
add
mov
xor
jne
adc
dec
in
jl
loopne
sbb
and
push
inc
sub
mov
jae
xchg
lods
and
add
pop
mov
call
mov
sub
fisttpl
das
repz
jl
sti
mov
sti
mov
test
pushw
cmp
das
mov
iret
jecxz
dec
stos
cmp
or
addl
pop
jp
mov
and
es
lods
je
sbb
pop
xor
add
iret
sbb
mov
ret
lock
fdivp
lret
icebp
fwait
ss
js
lret
mov
jne
mov
lahf
cli
aaa
mov
adc
arpl
jnp
sub
or
shll
cmpsl
push
hlt
leave
movsl
push
or
orl
mov
pop
mov
xor
cmp
xor
popw
loop
mov
mov
sbb
pop
add
dec
xlat
mov
in
leave
add
pop
push
adc
mov
mov
push
adc
cmpsb
xchg
push
shlb
fisubs
mov
movsl
xchg
popf
mov
pusha
lret
push
ja
imul
lds
mov
shlb
and
xor
sbb
icebp
bound
lods
mov
roll
cwtl
cmp
clc
test
sahf
or
pop
daa
gs
lds
loope
jno
mov
bound
pop
das
pavgb
aad
ss
add
add
xor
sub
cmp
js
mov
scas
push
aam
into
adc
xlat
and
mov
push
dec
nop
add
stos
jo
iret
rorb
add
stos
xor
scas
dec
pop
mov
mov
mov
add
sub
movsl
push
fmull
push
jl
push
daa
push
dec
mov
jge
out
icebp
jmp
outsb
xlat
inc
add
sub
imul
shlb
into
sbb
fs
pop
movsb
mov
and
or
pop
scas
cli
xor
fisttpll
cs
add
ljmp
fsub
jns
push
lcall
aam
pop
dec
rorl
or
rolb
adc
pusha
and
cltd
push
push
jl
das
lods
mov
call
gs
in
xorb
out
cmp
cmp
inc
xchg
jge
pop
movsl
xchg
repnz
pop
lock
vprotq
mov
popa
loop
cmpsb
inc
push
sub
xor
or
pop
and
arpl
or
ja
inc
jecxz
sub
data16
fs
cmp
das
bound
icebp
dec
mov
mov
cmove
insb
mov
or
insl
sahf
sub
and
xchg
mov
push
test
add
sbb
push
lret
lahf
and
out
dec
xchg
jmp
cmp
pusha
adc
adc
loope
mov
cmp
adc
mov
sub
add
lcall
mov
adc
inc
jmp
dec
ljmp
inc
inc
jp
sti
push
fdivl
or
sbbb
add
fldt
cmp
bound
sbb
test
push
sti
inc
fimull
mov
pop
addr16
pop
push
test
icebp
dec
sub
loope
stos
mov
mov
or
in
and
inc
lock
int
enter
ss
cltd
subb
sub
mov
xchg
pop
imul
pop
cli
sbb
mov
push
nop
jbe
int
fbstp
jae
lahf
lcall
data16
or
and
xchg
call
sub
push
mov
lcall
and
ret
pop
xor
fsubs
push
or
sub
pop
xchg
int
adc
sbb
jne
add
and
ljmp
sbb
cmpsb
insl
add
inc
xor
imulb
and
jo
out
fidivl
jle
fbstp
cmpb
stc
mov
sbb
test
jb
sub
mov
push
jcxz
addr16
and
scas
lods
fidivrl
sbb
xchg
push
cmp
mov
leave
xor
enter
adc
push
loope
aad
hlt
jl
bound
sarb
add
cmp
xchg
mov
pop
pop
adc
cmp
dec
repnz
inc
pushf
or
mov
in
in
and
les
gs
pop
xchg
movsb
and
gs
pop
push
inc
leave
lods
iret
insb
decl
rolb
dec
inc
mov
cmp
ret
pop
pop
add
int
jmp
fmul
insb
xchg
fdivrl
popl
sbb
fiaddl
mov
mov
lahf
lret
add
cmp
cmpb
dec
sahf
jnp
imul
jp
pop
jb
arpl
push
addl
nop
outsl
loop
movsb
add
in
subl
lcall
orb
and
imul
and
mov
cmp
movsb
or
aas
popf
jmp
dec
inc
clc
dec
jp
cwtl
loope
cmc
jbe
adc
xor
lcall
push
jbe
mov
fsubrp
outsl
ficoml
movsl
mov
lret
jb
add
xorl
sbb
sbb
or
mov
jnp
rcll
ds
cld
testb
je
lods
cmpsl
test
mov
sub
cwtl
push
aam
nop
xchg
push
adc
andl
xchg
jg
loop
jae
xor
outsl
in
fstpl
xor
add
in
repz
iret
sbb
jns
rclb
push
add
insb
inc
daa
xor
subb
jecxz
push
mov
dec
daa
cmpw
rcll
repz
mov
xor
xchg
stos
inc
loope
lret
xchg
mov
cld
das
cmc
popf
les
testl
test
aad
loop
push
pop
cmp
or
jmp
and
jmp
adc
and
enter
jmp
cmp
dec
dec
add
xchg
xchg
sub
out
mov
xor
arpl
pushf
rep
cmp
mov
stos
mov
aas
push
gs
sub
cmpb
repz
mov
pushf
mov
in
sbb
adc
add
gs
fst
sbb
jle
dec
cmp
call
es
enter
pop
ja
mov
lds
dec
repz
outsl
mov
adc
mov
sti
data16
sub
sub
andb
rol
pop
add
add
scas
xchg
rcll
pop
jmp
and
stos
add
and
push
mov
or
mov
xor
call
hlt
lahf
add
xchg
rol
lds
xchg
xchg
push
push
inc
inc
ss
push
add
aad
lds
xchg
xchg
push
push
inc
inc
ss
push
add
mov
mov
mov
into
xchg
xchg
inc
test
popaw
cmpsb
push
inc
dec
xor
and
loop
mov
test
adc
cltd
iret
cld
push
inc
xor
scas
pop
jmp
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
pop
pop
xchg
insl
ret
out
xchg
lea
ds
adc
inc
jb
push
addr16
xchg
mov
cmpsl
xchg
xlat
loop
repnz
pop
xor
daa
adc
inc
mov
xchg
mov
cmpsl
mov
sti
ljmp
pop
or
inc
adc
cs
adc
push
out
xchg
sti
div
sbb
sub
aam
xchg
test
jbe
pop
mov
dec
and
or
ret
outsb
imul
pop
bound
stos
adc
inc
lahf
pop
adc
xor
shll
ds
cmpsl
push
repnz
mov
xchg
mov
xchg
xlat
ret
pop
lcall
ss
in
mov
adc
addr16
lcall
aas
ret
notl
jb
addr16
daa
adc
das
push
inc
cwtl
lods
outsl
lods
xchg
andb
aaa
fmuls
adc
clc
and
and
es
pop
stos
add
xor
jbe
inc
enter
mov
cmpsl
mov
loop
repnz
out
pop
cmp
sub
sbb
or
inc
gs
ss
ret
mov
sub
xchg
mov
pushf
mov
cmpb
push
inc
jge
ud2
and
inc
adc
enter
ret
repnz
xchg
mov
mov
mov
dec
jbe
push
sbb
xor
daa
js,pn
loope
test
out
mov
repnz
pop
xor
add
adc
inc
jb
inc
addr16
xchg
mov
cmpsl
xchg
xlat
loop
repnz
pop
xor
add
adc
inc
jb
inc
addr16
xchg
mov
cmc
andl
pop
pop
mov
jp
push
sbb
pop
imul
or
dec
inc
add
adc
jle
mov
repnz
dec
push
sbb
movsb
push
mov
daa
loope
jbe
push
sub
aam
cli
clc
ret
daa
arpl
call
sub
jp
jnp
std
lock
loop
xor
adc
jmp
imul
aad
push
out
cmpsl
pop
adc
hlt
mov
or
icebp
rcl
dec
ret
mov
dec
cwtl
dec
mov
lret
xor
arpl
ds
sub
pop
dec
fmulp
adc
sti
or
shl
adc
jg
add
mov
sub
lcall
sub
and
jb
loopne
es
outsl
bound
iret
xor
pop
cmc
sti
mov
push
popa
sub
add
lea
dec
mov
sti
outsl
jmp
in
stc
jle
lock
sub
mov
popf
dec
push
jle
jge
sub
xor
xor
dec
mov
inc
inc
add
stc
lret
mov
jo
jle
pop
sarl
testb
add
adc
cmp
cmpsb
divb
loop,pt
mov
xchg
mov
adcb
rclb
jle
clc
int3
mov
lea
outsl
shll
cmc
adc
push
inc
cld
fmul
cli
incl
push
xchg
out
mov
mov
and
or
and
aam
ss
pushf
mov
das
hlt
push
mov
or
push
dec
push
mov
xchg
add
inc
xchg
out
xchg
clc
and
mov
adcb
rcrb
mov
sarb
fiaddl
lea
mov
in
add
addr16
sub
xor
repnz
ror
cs
inc
xor
adc
pop
sub
sbb
stc
xchg
mov
fdivl
ds
mov
mulb
out
mov
cmpsb
lcall
ljmp
fistpll
pop
inc
movsl
jg
cmp
xor
pop
sub
cmpsl
jle
adc
and
adc
test
mov
cmp
rolb
out
je
mov
mov
les
cmp
xchg
or
arpl
mov
mov
sbb
ss
std
repz
push
int3
rcrb
push
enter
fistpl
ud0
outsl
pop
push
push
pop
out
pop
fstp
mov
and
pushf
and
and
into
movsl
lea
cmp
sahf
lods
dec
and
mov
inc
cmp
insb
jge
xor
jae
in
mov
cmp
aam
gs
orb
pop
lods
lds
pop
in
sbb
inc
jnp
pop
xlat
sarb
jl
ss
xlat
sti
xor
or
fsubr
dec
ss
adc
pop
lea
jmp
jmp
xchg
pop
xchg
mov
shl
xchg
bound
xor
xchg
mov
cmp
sahf
pop
sub
test
out
sub
push
ljmp
adc
push
inc
test
sub
lret
jg
out
sbb
ret
shlb
iret
sub
sbb
pop
add
mov
outsl
xchg
unpckhps
repnz
mov
inc
fcoml
dec
in
cmp
les
aam
cmp
sub
inc
and
gs
sbb
and
nop
mov
mov
mov
cmp
add
push
add
or
cmp
mov
push
mov
cmc
sub
pusha
mov
ret
cmpsl
xor
loope
push
sbb
js
mov
fsubl
dec
or
sub
sbbb
fs
gs
out
shrb
cmovae
cmp
add
jmp
rsm
in
push
idivb
fs
adc
dec
jae
insb
sub
in
outsb
fdivrp
jno
mov
in
es
cmpsb
pop
lret
sbb
or
cmc
sarb
leave
mov
sub
mov
xchg
adc
or
not
sahf
cmp
outsb
fisttpll
or
ret
lahf
mov
inc
fiadds
push
scas
clc
dec
fwait
add
mov
int
inc
mov
fcmovnbe
orb
sbb
test
pop
aaa
out
mov
int3
fs
sub
sbb
prefetchw
das
push
pusha
push
xor
sub
addr16
out
stc
mov
dec
call
outsl
pop
pusha
cmp
stc
mov
jae
push
adc
out
das
push
test
stos
popa
dec
mov
xchg
mov
mov
push
fwait
mov
pop
push
mov
sbb
mov
addl
addb
push
or
inc
sahf
sahf
xchg
jmp
lods
lds
mov
jbe
xchg
mov
xchg
icebp
repz
jae
xchg
xchg
cmpsl
dec
cld
cmp
shll
movsl
and
cld
mov
jl
add
sbb
sar
jbe
cli
out
jb
or
insb
idivb
push
cmc
xchg
ja
jg
je
inc
mov
push
mov
stos
mov
sbb
mov
mov
and
cmp
pop
jne
loopne
ljmp
add
mov
mov
lock
flds
cmpsb
mov
jp
add
neg
shlb
icebp
xchg
rcll
sbb
icebp
push
ljmp
jmp
hlt
insb
pop
loopne
mov
or
mov
jbe
xchg
icebp
outsb
popa
enter
test
icebp
xor
enter
add
or
popa
mov
or
jmp
push
xchg
add
out
test
bound
leave
jnp
pop
mov
sub
aas
jp
add
sub
and
popa
sub
enter
sahf
mov
movb
shl
ja
sti
dec
lea
mov
int
mov
mov
inc
jecxz
stos
loop
cmp
negb
scas
cmp
addr16
push
repz
ficoml
shrb
test
cltd
pop
cmp
push
mov
sarb
mov
stos
cwtl
and
hlt
and
jmp
pop
pop
dec
enter
inc
movsb
xor
jno
repnz
lret
arpl
lods
aad
push
lcall
add
jbe
pop
int
fisubrs
fimuls
shl
daa
sbbl
neg
pop
pushf
iret
rcrl
iret
cli
jns
push
mov
inc
enter
sub
inc
and
cmp
fildl
lcall
cltd
lret
push
xchg
adc
jo
div
jecxz
xchg
insl
in
mov
and
shrl
in
push
je
cmp
test
mov
rcll
imul
insb
stos
icebp
push
or
movzbl
outsb
pop
sbb
and
pop
repz
mov
stos
xor
les
sti
movsl
ja
test
mov
nop
js
mov
jbe
cmp
into
inc
push
inc
rolb
mov
shl
addr16
mov
jg
jge
test
leave
xchg
add
push
jnp
int
xchg
xor
push
inc
int
jecxz
add
mov
mov
imul
popa
jno
repz
xor
ret
cmp
sahf
pop
shlb
jbe
jnp
mov
fnstcw
push
inc
mov
inc
es
aaa
mov
inc
out
jns
xor
pop
add
outsb
ss
mov
push
ds
sbb
and
mov
in
ret
lods
jge
int
insb
fucomi
xor
scas
dec
push
in
jns
push
arpl
jns
jne
or
adc
pop
roll
popf
lcall
and
inc
and
imul
cld
out
jae
xchg
fs
and
jg
fucomi
into
loop
ja
aas
clc
jl
add
cli
and
fildl
pop
xor
out
push
or
fsub
sbb
jne
popf
les
stos
adc
jno
push
cmp
jns
pop
xchg
jmp
mov
adc
xor
int
mov
xchg
imul
sbb
inc
jae
jecxz
mov
test
in
cwtl
sub
mov
mov
std
shlb
inc
xchg
mov
xchg
mov
aaa
lret
mov
nop
mov
enter
lock
testl
cmp
jmp
pop
pop
sti
orl
sub
pop
cmp
pop
in
rol
inc
push
mov
sahf
gs
das
add
add
mov
sub
loope
xor
mov
push
cmp
xchg
cmpb
add
aad
mov
adc
xor
popa
jnp
sub
push
out
fisubs
sub
insb
sbb
add
adc
cmp
pop
pop
mov
pop
packsswb
inc
test
out
fidivrs
mov
pop
pop
scas
addr16
lods
adc
sbb
lock
push
mov
movsl
xor
aas
xor
popa
adcb
mov
sub
bound
xchg
lods
sbb
pop
jmp
jno
push
icebp
dec
inc
cmpl
mov
and
jno
lds
mov
mov
fildll
cltd
mov
xor
fiaddl
mov
add
dec
fwait
mov
jnp
loopne
xchg
push
pushl
out
sub
add
xor
rclb
or
sbb
jae
in
inc
jns
scas
and
pop
push
mov
aas
loopne
push
add
das
insb
dec
in
sub
popa
into
push
pushl
repz
inc
aad
test
pop
jb
cmp
jl
das
imul
mov
dec
or
enter
mov
or
pop
ja
xchg
je
rolb
or
pop
fimull
fcom
jno
mov
jle
mov
shl
mov
lock
jmp
outsb
lea
push
xor
cmp
dec
dec
adcl
dec
or
nop
jbe
or
add
pop
add
mov
push
cld
jbe
out
lcall
cmc
or
iret
sbb
pop
fdivrl
jg
popf
loope
imul
jne
pop
sub
inc
loop
xchg
pop
mov
je
cld
push
xchg
pop
out
xor
adc
lcall
cmp
mov
push
adc
cmp
mov
rclb
shr
xor
gs
jns
mov
arpl
cli
push
aaa
cmpsb
mov
cld
adc
int
pop
pop
sub
cmp
pop
or
call
call
mov
je
adc
rorb
loopne
xchg
daa
in
jb
push
rclb
jno
adc
pushf
dec
sbb
jb
xchg
adc
sub
pusha
mov
fcmovnu
mov
setae
adc
xor
cmp
mov
jae
loope
bound
push
and
lret
icebp
popf
lret
xor
sbb
shlb
ret
js
insl
xor
stos
cld
les
enter
cmpsl
lods
lds
sbb
lds
enter
mov
loopne
cwtl
mov
jp
adc
lock
or
xchg
or
inc
xchg
ds
in
imul
pop
iret
pop
pop
mov
into
xchg
les
inc
jns
add
outsl
cmp
mov
or
mov
push
shll
ja
ds
mov
mov
inc
cmp
js
pushf
out
add
xor
pop
cwtl
add
scas
fimuls
cmp
insl
sarl
pop
mov
cmp
cltd
movsb
mov
imul
adc
lcall
inc
rolb
pop
mov
int3
gs
sbb
push
aad
cmp
lods
cmp
imul
addl
shlb
adc
push
sar
in
pop
fsubrs
push
mov
push
cli
mov
js
pop
xorb
xchg
stos
lcall
clc
cmp
dec
mov
sub
inc
xor
push
subb
pop
mov
add
jae
jo
sbb
and
inc
mov
notb
pop
imul
test
xor
pushl
ja
js
in
mov
ret
outsl
daa
xchg
xor
jno
xchg
and
pop
sbb
std
data16
or
shl
lds
stos
rolb
cmpl
mov
rcrb
mov
push
loop
popa
std
int3
add
test
push
pusha
jg
cmp
ss
out
push
mov
sbb
ret
mov
bound
mov
adc
movsb
adc
fwait
mov
xchg
rclb
push
or
push
jle
pop
sahf
jbe
xor
sarl
push
fists
xor
jae
loopne
cmpsl
xor
mov
std
dec
mov
cmc
lret
fsts
mov
add
insl
jo
imul
flds
push
gs
sub
pusha
xchg
xchg
movb
cli
mov
cmp
or
das
jae
js
inc
ret
push
cltd
iret
or
or
xor
andl
adc
and
adc
pop
or
pusha
lcall
push
movsb
and
fsubs
andl
dec
mov
cmp
jmp
lods
cli
cli
lahf
loopne
fcom
mov
fsubrs
fsubr
mov
in
add
adcb
and
or
sbb
jo
jg
js
std
xchg
daa
out
or
add
clc
cmp
js
outsb
add
out
dec
push
and
je
rcrb
adc
sbb
add
jns
mov
pop
clc
loop
in
lea
mov
adc
xchg
xor
cmp
lds
fwait
call
pop
push
movsl
ds
push
jl
je
inc
and
int3
cmc
icebp
jecxz
subl
ljmp
xor
mov
cmp
mov
xchg
andl
out
or
cwtl
and
sbb
push
imul
rclb
stos
and
nop
aaa
aam
sbb
mov
fcoml
test
mov
addr16
cmp
pop
outsl
jnp
sbb
cmp
jmp
mov
inc
sbb
punpckldq
cwtl
push
xor
cmp
in
into
icebp
call
cli
in
push
test
jmp
aas
inc
and
lcall
mov
inc
push
mov
cltd
mov
repnz
mov
pusha
push
sbb
in
mov
xchg
test
in
mov
dec
ret
mov
out
ret
out
repz
lods
dec
jmp
push
inc
rcrb
dec
pop
inc
cli
pop
mov
enter
cmp
and
dec
out
inc
push
stos
push
dec
lock
mov
fwait
cltd
es
arpl
repnz
inc
imul
call
mov
je
stc
out
dec
out
push
dec
dec
sti
add
cld
leave
lock
xor
icebp
jnp
lret
loop
pop
lods
in
cmp
arpl
cld
jno
stos
push
jns
push
lcall
adc
lahf
jle
mov
sub
xor
testl
and
mov
mov
xchg
imul
inc
lods
push
pop
fsubrs
call
lods
or
mov
and
add
mov
cmp
scas
je
in
cld
pop
pop
stos
push
incb
dec
sti
xor
sbbb
mov
popf
pop
and
lock
mov
test
lret
mov
movsl
movsl
jecxz
push
cmp
lock
loopne
jno
sub
enter
xchg
push
push
jmp
fisttps
call
loopne
cmpsb
jge
dec
fisubrs
pop
sub
insl
push
cmc
dec
pop
test
test
jns
inc
lret
in
jae
mov
mov
pop
sub
mov
lods
pop
push
mov
jae
lods
movl
stc
xchg
lahf
in
sub
cmpb
fsubrp
add
push
popa
dec
mov
fistl
scas
mov
test
movsb
xor
sbb
int3
int3
pop
push
jecxz
pop
mov
pop
fdivs
ret
push
jle
sbbl
mov
jnp
mov
cmp
mov
mov
popa
dec
and
enter
pop
mov
push
das
push
mov
iret
loopne
xor
pop
lret
rcrl
jmp
fwait
xchg
fwait
movsb
cmc
lcall
pop
enter
sbb
in
or
xchg
cs
dec
in
inc
jmp
or
in
shlb
pop
xor
push
mov
out
push
adc
fsub
ljmp
loope
lock
inc
stos
lcall
mov
clc
adc
mov
fisubl
cmp
js
pop
add
jecxz
push
fbstp
sahf
bswap
nop
sbb
dec
xchg
mov
sub
sub
and
xchg
lcall
cmpb
dec
lahf
add
inc
mov
mov
leave
inc
jg
jecxz
ss
addr16
arpl
inc
inc
cmc
fcoml
rol
test
inc
mov
adc
xchg
lods
subl
sub
fwait
jg
dec
into
lret
aas
mov
mov
lret
mov
cltd
adc
mov
dec
adc
clc
dec
int
dec
mov
nop
cmp
xchg
cmpsb
and
lods
dec
adc
outsb
loop
cld
mov
push
icebp
xchg
adc
fidivs
sbb
push
push
imul
cmp
loope
jae
xor
lcall
dec
and
scas
mov
stc
dec
adc
imul
adc
out
dec
mov
enter
sub
pop
adc
or
jbe
push
and
outsb
aaa
stc
outsl
jl
pushl
sub
xlat
icebp
pop
push
popf
arpl
adc
call
jmp
mov
iret
jl
fdivrs
nop
and
loop
icebp
pop
xlat
mov
out
imul
dec
frstor
push
mov
aaa
es
cmp
lcall
imul
xor
out
movsb
sti
or
inc
aas
and
aaa
jmp
int
and
add
mov
clc
and
xor
xchg
fadd
es
dec
sub
push
mov
xorb
push
jge
pop
mov
xor
push
push
dec
jp
or
pop
out
or
mov
mov
jb
fs
vmread
into
in
add
movsb
imul
or
mov
loop
idivl
ficompl
sub
dec
lods
sub
jae
std
mov
pop
fs
mov
jbe
cmc
mov
test
jo
jbe
mov
clc
jecxz
cld
nop
out
stc
or
add
in
ds
adc
shll
sbb
pop
je
les
and
addr16
pop
pop
mov
mov
insl
loopne
mov
neg
cmpsb
dec
jg
es
bound
dec
jle
testl
cmp
dec
pop
paddq
and
repnz
sub
push
icebp
mov
mov
icebp
mov
add
rorb
in
add
cltd
lret
sbb
adc
sbb
adc
cltd
jnp
mov
xchg
xlat
lahf
dec
out
std
es
push
inc
lock
shlb
test
jno
lret
or
call
in
and
inc
divb
cmp
into
arpl
hlt
push
xor
push
jae
cmc
mov
movsb
jno
dec
stos
jbe
mov
aam
push
sub
xchg
dec
sub
test
or
cmp
cli
xorb
int
push
and
add
icebp
adc
push
in
cmc
adc
dec
nop
loop
dec
shrb
std
xor
hlt
aam
push
cmp
mov
loop
jmp
adc
out
fisubl
gs
add
in
lods
pusha
out
pop
dec
pop
fwait
jecxz
jnp
pop
je
push
fnstenv
sub
or
pop
or
movsb
and
jne
and
loop
dec
and
in
dec
mov
and
xor
not
push
xchg
in
mov
repz
sti
adc
mov
jmp
mov
lods
cmpl
in
jne
mov
jmp
shlb
mov
xchg
out
testl
mov
pop
push
adc
xor
ds
adc
mov
pushfw
les
pop
ljmp
mov
aas
ljmp
lds
sub
ss
add
sub
mov
sub
imul
mov
xchg
xchg
iret
mov
sub
je
jae
sub
dec
sahf
in
mov
mov
stc
ror
imul
lods
jecxz
mov
add
insl
dec
scas
ret
push
inc
xor
into
push
int
cmp
fcmovnb
push
fimuls
inc
ret
push
lret
out
aad
in
and
test
cld
push
loope
pusha
or
mov
xor
mov
aam
push
pop
repz
lahf
cmp
inc
jl
ljmp
mov
push
in
sbb
imul
and
mov
insl
cmpsl
xchg
xlat
loop
repnz
pop
xor
add
adc
inc
jb
inc
addr16
xchg
mov
cmpsl
xchg
xlat
loop
repnz
pop
xor
add
adc
inc
jb
inc
addr16
xchg
mov
cmpsl
xchg
xlat
loop
repnz
pop
xor
add
adc
inc
jb
inc
push
xchg
mov
cmpsl
xchg
xlat
loop
repnz
pop
cwtl
popf
add
gs
iret
lea
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
or
je
or
adcb
iret
xchg
or
cs
hlt
pop
cmpl
dec
dec
mov
je
add
adc
and
xor
xchg
xor
das
lret
je
pop
mov
sahf
cmpsb
aam
loop
mov
adc
pop
testl
aas
mov
jp
xor
sbb
sub
je
and
add
aaa
push
and
and
in
jmp
jg
pop
xchg
in
mov
add
push
jmp
mov
xor
sub
sbb
lock
add
mov
and
lods
hlt
rorb
or
test
sub
sbb
lock
sbb
push
pop
jmp
add
sub
sbb
faddl
stos
ss
rcr
xchg
hlt
loopne
orb
xchg
ljmp
test
sti
sti
aas
xchg
lcall
test
sbb
divl
hlt
or
lret
push
fistpl
jne
dec
mov
push
sub
in
hlt
lock
loope
movsb
dec
ja
push
mov
add
push
out
and
mov
ss
inc
aaa
cmp
ljmp
inc
rorb
mov
sbb
push
popa
mov
mov
stos
movsl
push
xchg
das
mov
xchg
push
sbb
insl
shlb
repz
and
mov
mov
cld
dec
xchg
dec
cmpl
outsl
sarl
cmc
cmp
mov
xor
out
and
xor
les
aam
in
hlt
je
pop
mov
inc
mov
je
add
adc
and
xor
les
aam
in
hlt
je
pop
mov
inc
mov
sub
inc
adc
xchg
sub
mov
lods
lret
adc
inc
push
shrl
sub
cwtl
mov
shlb
pop
jecxz
sub
in
add
push
xor
les
add
jo
jno
cmp
testb
push
xor
repz
and
int
enter
scas
mov
pop
or
shrb
test
shlb
inc
out
ljmp
sahf
lds
rolb
sbb
inc
and
movsl
xchg
mov
ds
cld
or
jbe
outsb
repnz
add
mov
xor
aad
jne
test
xor
inc
pop
emms
cltd
pop
std
add
das
stc
mov
push
push
jmp
push
add
out
inc
into
ja
sub
jnp
scas
cmc
dec
aaa
sti
xor
ss
mov
popf
add
add
rorb
pop
fistl
sbb
incl
daa
or
das
loop
cmpsl
mov
push
sbb
adc
sbb
inc
sub
outsl
shrb
fisubl
outsl
jbe
dec
or
repz
pandn
in
cli
mov
shlb
mov
pop
xor
icebp
mov
sbb
xchg
jbe
mov
jl
jg
mov
sub
pop
mov
outsl
pop
nop
pop
rcrl
test
jbe
mov
out
outsl
dec
pop
pop
in
stos
pop
mov
stos
cmovo
jno
push
addr16
fs
lods
jg
sbb
daa
fsubrl
pop
sub
lret
dec
adc
into
je
stos
xlat
les
add
mov
lods
mov
jae
aaa
jae
adc
mov
mov
sbb
jo
loope
rorl
pop
ret
adc
and
cwtl
fadds
sti
fisubs
repz
push
and
jno
mov
pop
insl
inc
lcall
and
add
hlt
xor
rorb
fdivl
insl
rorl
icebp
lcall
push
jmp
cmp
mov
adc
inc
addr16
dec
jge
pop
dec
adc
dec
adc
sbb
fisttps
dec
mov
xchg
lret
dec
sbb
shlb
mov
repz
aam
scas
stos
mov
or
add
testb
xor
mov
ficomps
mov
out
add
sti
frstor
mov
scas
rorb
clc
push
scas
jecxz
sub
inc
cmpsb
cmp
dec
xchg
mov
ljmp
clc
fs
mov
push
pop
cltd
xlat
cmp
inc
jp
arpl
sbb
xor
cmpsl
adc
jmp
push
adc
imul
aam
cs
icebp
adc
js
pop
orb
insl
test
jno
jmp
jb
pop
shlb
cmp
cld
mov
aam
fcmove
and
and
mov
xchg
pushf
insb
cli
int
xchg
bound
lods
enter
lret
jo
adc
cs
sub
leave
lcall
sub
push
cmp
and
sti
pop
push
cmp
adc
fidivrs
sbb
arpl
orl
leave
sbb
nop
or
mov
xchg
in
adc
pusha
loopne
adc
add
rolb
cmp
push
xchg
sbb
xor
ret
xlat
loop
insl
push
scas
pop
mov
sbb
mov
movsb
arpl
mov
inc
xor
inc
test
sub
dec
incb
lahf
je
test
mov
sub
fprem
cmovge
push
into
pop
lock
push
icebp
js
popa
xor
mov
jmp
out
das
ficompl
mov
out
mov
into
ficoml
inc
add
inc
shr
repz
outsl
hlt
sbb
stos
mov
clc
insb
clc
jmp
loop
ljmp
dec
lods
stos
cmp
sahf
sbb
cmp
aas
fimull
xchg
pop
mov
dec
mov
cmp
xor
xchg
iret
js
leave
jbe
jo
fmul
jo
sub
and
xor
cmpsb
data16
sbbb
lea
push
dec
lds
pop
std
roll
fdivrp
rcrl
daa
mov
pop
add
lods
imul
leave
scas
jne
out
clc
add
je
mov
mov
mov
push
push
loop
mov
pusha
sbb
sarb
pop
lea
adc
add
dec
sub
out
push
xor
pop
ss
add
dec
xor
dec
sub
sub
outsl
fdivrs
xchg
push
dec
push
cs
lahf
insl
out
pop
add
and
jecxz
inc
fcomp
push
and
jno
fdivrl
xchg
out
sbbb
lcall
cmp
cmp
out
loope
adc
ja
aam
ja
mov
les
push
lds
pusha
jmp
rcll
or
repnz
stos
stc
adc
daa
movsl
shl
loopne
jne
jo
add
divb
sbb
int3
imul
aaa
mov
mov
pop
lcall
mov
outsb
add
es
ljmp
dec
and
jmp
int3
cmpsb
out
test
int
or
inc
mov
fcompl
adc
xor
add
inc
xor
pop
mov
imul
stc
lods
popf
jb
push
push
or
adc
mov
or
adc
inc
xchg
adc
and
lea
imul
movzwl
jnp
rcrl
xchg
aad
out
add
mov
or
jg
mov
sbb
cmp
ret
inc
call
roll
loop
push
lret
jmp
in
push
xor
jnp
lret
mov
pop
scas
or
outsb
subb
scas
xchg
arpl
fdivrl
xchg
cmp
mov
add
sub
push
fistps
push
or
and
fisubs
add
or
in
stos
lea
and
add
or
or
loope
sbb
inc
loope
push
test
inc
add
xor
jl
lods
rorb
sahf
mov
mov
sbb
mov
sbb
das
call
push
ja
xchg
and
add
dec
inc
jae
popa
imul
dec
sbb
push
jle
jb
sbb
insl
fs
lock
loope
rcrl
pop
cmp
lods
mov
aad
fistl
daa
in
jge
cmp
and
sub
mov
ss
mov
jae
or
out
push
inc
fldl
shr
xchg
jb
inc
loopne
cmp
push
aad
mov
lds
scas
pop
add
or
dec
sbb
out
rclb
ficomps
jge
adc
cld
fninit
mov
push
adcb
and
in
pop
or
mov
jb
xor
popa
addr16
call
inc
and
pop
xor
test
shrl
push
adc
lea
aaa
movsb
cwtl
in
in
mov
mov
dec
fwait
dec
inc
xor
cmp
cmpsb
ficomps
addr16
out
cmp
push
pop
adc
std
pop
fscale
and
cwtl
mov
sub
dec
push
pop
out
and
pop
das
cli
or
mov
adc
sub
outsl
mov
pop
push
add
and
xchg
sub
in
lret
add
pop
lret
pop
ret
push
push
mov
outsl
mov
inc
rep
push
lcall
dec
clc
sub
jmp
fsubrs
sbb
add
mov
mov
movsl
jge
inc
sub
adc
in
loope
les
push
scas
jne
push
pusha
dec
divl
cmpsb
hlt
lahf
pop
sub
push
enter
lret
test
xchg
lea
inc
js
add
pop
je
push
enter
fldcw
pop
jle
pop
cmpsl
dec
sub
out
enter
mov
mov
aaa
xchg
xor
out
pop
in
rclb
sbb
ret
rclb
imul
mov
aas
fwait
jae
test
popf
sahf
inc
mov
out
ret
xchg
jne
xor
test
adc
cmpsb
das
rolb
mov
add
add
sub
and
pusha
mov
lods
hlt
xchg
mov
aaa
mov
xchg
mov
cmpsb
fs
cmp
popa
mov
leave
icebp
jecxz
lret
lods
adc
aad
xor
pop
add
andl
push
mov
jmp
push
mov
add
jl
call
pop
push
jle
push
pop
mov
xchg
jmp
ret
outsb
test
fnstsw
outsb
in
hlt
fcomi
dec
pop
stos
sbb
sbb
xor
test
xor
push
in
sbb
outsb
adc
jne
jo
insl
inc
stc
fmulp
xchg
popl
pop
std
stos
imul
jg
outsb
cmp
adc
cmpsb
cmp
dec
jge
xchg
and
jo
flds
shl
das
mov
inc
push
jmp
cmp
ss
pop
sbb
jo
xchg
cmpsl
imul
push
arpl
sbb
adc
jmp
stos
shr
ds
mov
cmc
xor
mov
jnp
push
call
call
cmp
cmp
lds
sti
lods
jnp
loopne
xchg
addr16
into
btc
mov
xchg
popa
push
sahf
nop
push
leave
inc
xchg
inc
xchg
mov
adc
sahf
fnstsw
jno
jp
mov
lret
loope
xchg
xor
pop
gs
ds
add
lea
pop
push
mov
into
scas
push
pop
mov
xchg
shl
mov
aaa
mov
or
in
adc
and
popa
setle
xor
addr16
cltd
fdiv
insl
addb
decb
and
or
aam
inc
lahf
cmp
dec
shll
xchg
out
sbb
adc
sbb
fdivl
dec
in
fidivl
sub
xchg
pop
movsl
xor
mov
divl
fiaddl
inc
pmaxub
je
movl
loop
pop
inc
cmpl
mov
push
adc
cmpsl
aaa
shrl
data16
pop
lock
daa
cmpsl
dec
xchg
enter
xchg
push
cwtl
daa
and
enter
sbb
adc
das
cli
popf
test
or
mov
fs
dec
jmp
sahf
pop
into
in
adc
imul
pop
cltd
mov
dec
stos
test
dec
mov
mov
push
sub
fcmovne
xor
push
and
mul
popl
cld
int3
mov
mov
in
lahf
bnd
ja
jg
nop
cmp
cmpsb
xchg
outsl
fdiv
mov
int3
in
leave
lahf
mov
adc
lcall
fstpt
iret
and
pop
mov
cwtl
jmp
push
push
leave
in
iret
out
cs
add
orb
xchg
lss
push
or
pop
jecxz
mov
sub
pop
or
sbb
jbe
mov
scas
mov
bound
fistpl
mov
push
or
outsl
mov
ljmp
dec
inc
setnp
aas
lds
sub
movb
iret
sti
push
pushl
ja
inc
popl
mov
cltd
cs
call
pop
pop
push
cmpsl
add
jns
jne
sbb
xor
mov
cmp
lods
in
mov
jb
ja
jb
ret
stc
and
jge
jle
cmp
sbb
in
sub
inc
je
popf
ficoml
insl
insl
insl
int3
sub
sbb
mov
fistps
pop
xor
cmp
pop
out
mov
or
xchg
sbb
test
ss
je
inc
push
rcrb
rcll
dec
add
sbb
stos
jae
lcall
stos
leave
adc
pusha
cmpsl
ds
mov
pop
das
je
mov
scas
and
push
ja
outsb
outsb
or
xor
sub
jp
cld
sbb
lret
add
loope
je
jne
or
les
les
pop
repz
jp
fisubl
cmovp
sub
or
mov
aaa
jmp
add
divl
scas
insl
pop
xor
cld
mov
mov
xor
test
add
in
xor
imul
fcmovnbe
ret
notl
lahf
sarl
cmpsb
faddp
adc
adc
mov
enter
fstl
lock
xlat
cmpsb
lcall
xchg
gs
xchg
cli
mov
cmp
or
in
push
inc
lds
movsb
fidivrs
sahf
test
aam
das
aam
rcrb
jb
or
out
shll
loopne
popf
mov
pop
inc
in
lods
jns
xchg
mov
daa
mov
dec
pop
lods
mov
pop
in
pop
bound
jnp
shl
xorl
fildll
lock
popa
pushf
sub
nop
mov
inc
push
lahf
hlt
jo
and
mov
push
and
out
ss
add
and
push
outsl
mov
in
sub
push
xlat
inc
mov
out
dec
add
popa
enter
mov
and
shrd
lods
ja
outsb
xchg
sbb
in
and
adc
ljmp
or
adc
sub
gs
inc
gs
aaa
ds
ja
adc
lea
cmpsl
cmp
or
popa
insb
pop
in
cld
shrl
inc
add
cmc
hlt
hlt
movsl
daa
inc
xchg
push
mov
scas
lods
mov
ret
jl
push
dec
dec
out
sbb
out
roll
loop
pusha
test
dec
mov
sahf
mov
movl
repz
mov
scas
pop
stos
out
jne
mov
bnd
scas
shr
mov
mov
scas
xchg
mov
jns,pt
dec
xor
dec
outsb
mov
xchg
lods
mov
nop
cmp
sub
cwtl
add
pop
repz
push
adc
jg
adc
int
mov
push
jp
repz
xchg
mov
mov
cltd
pop
mov
paddusw
addr16
xor
popf
jbe
shl
inc
outsb
movsb
sub
out
xor
sbb
lahf
and
adc
pop
mov
xor
pushf
jg
xor
inc
or
push
push
mov
cltd
fildll
out
in
arpl
sti
les
sbb
imul
push
push
test
cmpsl
int
and
and
xor
in
dec
mov
xor
ds
sbb
repnz
test
imul
sub
inc
cmp
fsubr
pop
clc
mov
ja
loope
mov
pop
loop
push
jne
ret
inc
mov
lcall
jl
pop
ss
cmp
dec
imul
sub
mov
clc
xor
push
xlat
sub
sahf
jo
pop
push
or
cmc
add
sbb
cld
or
mov
mov
test
in
roll
into
jle
enter
fistpll
loopne
jp
jge
insl
push
xor
stos
pop
in
dec
jnp
cld
je
lods
int3
cmp
xchg
inc
mov
mov
testl
push
lods
mov
clc
add
jl
xchg
xor
arpl
pop
dec
pop
inc
push
aad
pop
pusha
cli
lea
mov
push
movsb
into
nop
cli
add
fildll
inc
xchg
shr
jne
inc
in
insl
xchg
cltd
pushf
pop
and
in
in
cld
jno
sbb
and
xchg
data16
lcall
adc
mov
fidivl
sarb
push
jmp
push
or
add
jecxz
mov
inc
inc
pop
pushf
dec
sbb
xor
and
cld
sub
xchg
mov
jmp
orl
add
jle
ja
imulb
jae
popa
call
xchg
gs
push
sub
xor
sub
mov
mov
rcrl
jl
jle
in
loope
inc
inc
mov
lahf
ss
ss
rorl
push
test
sub
xchg
movsl
loop
mov
rcll
pop
and
dec
xor
mov
hlt
out
xor
push
adc
jle,pt
movsl
and
inc
dec
cmp
shlb
and
xchg
leave
ljmp
xor
pop
sbb
dec
adc
bound
jne
int3
push
movsl
aad
and
ret
jnp
jmp
jns
cmp
rclb
jae
je
int
in
pop
pop
int3
add
add
xchg
test
setns
dec
pop
dec
sbb
mov
and
push
nop
hlt
outsb
push
inc
mov
mov
and
adc
iret
out
imul
icebp
imul
roll
fs
in
sti
dec
inc
sub
add
arpl
xchg
insb
adc
incl
jle
pop
add
test
clc
push
shlb
cli
or
sbb
jmp
mov
sub
movsb
out
scas
jbe
sarl
jno
cmpsb
out
xor
pushf
xor
and
xor
xchg
mov
outsl
cltd
cld
cwtl
cmp
push
arpl
or
fistpll
push
mov
jg
gs
xlat
rorb
jae
fwait
lret
ljmp
pusha
and
xor
cli
cmpl
daa
sbb
sbb
sti
scas
lcall
push
enter
dec
inc
rcrl
and
mov
mov
or
pop
jb
or
arpl
loope
popf
cwtl
mov
xchg
xor
mov
push
cli
std
xchg
mov
mov
test
or
push
or
or
lock
pusha
jb
jecxz
adc
dec
repz
movb
stos
or
loope
hlt
dec
ret
push
or
xorb
ficompl
int
frstor
mov
push
or
mull
xchg
fistpll
bound
in
sbb
add
jno
fsubrp
into
push
loope
ljmp
addr16
and
add
dec
fnclex
stos
and
adc
pop
cmp
dec
xchg
fs
pop
shr
mov
dec
inc
ret
cmp
sbb
ret
mov
sbb
push
add
hlt
cwtl
dec
aad
jo
adc
icebp
insb
mov
mov
mov
mov
lods
push
cmp
fwait
mov
mov
xchg
int3
mov
dec
mov
mov
shll
rorb
xchg
call
aad
lods
xor
or
mov
add
mov
hlt
jmp
pushf
aas
jno
sbb
gs
push
fcmovb
lock
jle
lock
cltd
movsb
mov
jmp
mov
push
sbb
dec
mov
mov
insb
in
sbb
scas
pop
popa
out
inc
inc
mov
sahf
mov
cltd
daa
lret
push
repz
ret
bound
mov
push
push
and
dec
leave
loopne
jecxz
nop
pop
loope
sub
push
clc
push
jno
push
jp
push
xchg
inc
mov
adc
js
into
push
mov
cmp
and
cmpsl
stos
imul
pusha
enter
pop
nop
jg
or
dec
mov
fst
fbld
cmpsb
int
mov
ret
dec
xor
pop
inc
pushl
or
xchg
push
lods
add
scas
mov
in
sub
movsl
jge
sbb
repz
cmc
inc
fisubrs
in
test
fs
mov
fsubs
push
inc
mov
lret
add
push
jmp
or
adc
lret
jg
imul
mov
or
cmp
lret
jg
dec
cmp
out
aad
out
jns
push
out
je
mov
pop
mov
cmp
cmc
push
aaa
test
andb
inc
push
sbb
xor
imul
popa
mov
cmp
lds
mov
inc
scas
in
repz
cmp
dec
push
aad
mov
inc
pop
add
xchg
push
dec
or
in
stc
outsl
pop
mov
fldl
jl
idivb
cmpsl
fcoms
or
and
push
lods
mov
add
and
or
jge
and
mov
movsb
inc
xor
inc
stos
dec
adc
or
sub
or
push
pop
roll
sbb
cmp
jge
xchg
addl
pop
ficomps
insb
jecxz
repz
mov
xor
je
repnz
adc
push
mov
cmp
inc
xor
add
dec
out
mov
std
push
inc
aad
sarl
and
call
ret
xchg
mov
shr
xor
mov
scas
out
jne
sub
lds
inc
cld
cmp
fwait
mov
movsl
cmp
test
loope
incb
loop
pop
rcr
movsl
xchg
pop
dec
lods
jbe
xor
jecxz
and
int3
adc
cmp
lret
cmpsb
jecxz
mov
and
sub
testl
push
enter
mov
pop
dec
and
cmp
cwtl
or
sbb
pop
repz
sbb
and
insb
xchg
mov
dec
adc
mov
push
and
cmp
xor
xchg
pop
mov
mov
and
testb
push
pop
inc
pop
cmc
mov
in
push
jb
xchg
lock
pop
fwait
push
imul
add
adc
and
xor
les
aam
in
hlt
je
pop
mov
inc
mov
je
add
adc
and
xor
les
aam
in
hlt
je
pop
mov
inc
mov
je
add
fbstp
das
in
pop
lock
test
mov
pop
popl
add
and
mov
les
sub
repz
pop
and
ret
fucom
in
bnd
inc
std
cld
shr
mov
pop
bound
jge
or
xor
loop
repnz
orb
leave
push
dec
push
jge
insl
jl
add
sbb
fistpl
inc
ljmp
inc
mov
pop
xchg
jno
cmp
pop
jge
jle
gs
loop
test
arpl
test
cmp
cli
push
sub
inc
test
xchg
popa
daa
in
daa
inc
push
mov
or
fisubs
sub
mov
int3
fcoms
divl
sub
jb
adc
loopne
lock
xor
sub
inc
jge
xchg
cmc
pop
push
mov
leave
mov
or
std
or
loop
lds
outsb
xchg
fcomps
outsl
mov
mov
out
movsl
inc
mov
arpl
adc
or
or
push
push
in
mov
xor
inc
or
loop
sub
lret
sub
xchg
lea
cmp
jp
imul
sub
mov
xchg
hlt
repnz
les
sbb
sbb
adc
bound
push
insb
pop
pop
lods
mov
fsubr
loop
scas
mov
sub
or
xor
add
push
push
dec
push
push
cmpsl
fwait
mov
sahf
lret
popf
mov
dec
push
pop
bound
jge
or
xor
loop
repnz
orb
mov
bound
jge
or
xor
pop
dec
adc
mov
lea
xor
stc
outsl
inc
or
add
xor
sbb
mov
mov
jle
sbb
out
outsl
or
stc
int
push
push
lods
push
jnp
cmpsb
jno
adc
in
push
push
xor
dec
push
push
push
xor
jno
pop
dec
and
pminub
cltd
lods
out
push
enter
pop
cmp
and
cmpsb
dec
sub
lahf
nop
xor
or
ret
xor
mov
fdivl
pop
ret
stc
push
lret
cld
in
lods
enter
mov
xlat
cmc
sub
cmp
inc
lahf
pop
xchg
daa
pop
push
cmp
fbld
or
mov
mov
push
push
cltd
push
sub
lds
jae
dec
mov
loopne
dec
or
mov
into
enter
out
in
pop
cmp
lds
pop
jle
data16
fwait
out
daa
arpl
jmp
and
out
mov
fstps
push
addl
scas
bound
fbld
das
icebp
nop
sahf
xchg
mov
loop
cmpsb
or
xor
xor
jmp
rcrb
push
mov
test
es
push
data16
add
divb
icebp
es
popf
movsb
cmp
mov
std
xchg
jnp
adc
pop
aaa
test
out
loopne
in
mov
inc
je
push
adc
xchg
ret
imul
frstor
movsl
cmp
mov
xor
stos
pop
xchg
test
aas
jle
xchg
sub
xchg
lret
into
out
int
cs
and
jo
lods
popf
jg
cmp
sbb
push
dec
sbb
sub
mov
pop
dec
das
loope
cmc
roll
sub
cmpb
cmc
mov
fwait
js
sbb
mov
add
push
mov
mov
enter
xlat
mov
lcall
popa
mov
or
jl
adc
int3
fadds
sarb
sbb
imul
cmc
mov
adc
in
push
inc
mov
idivl
daa
stos
jl,pn
fwait
and
lods
inc
cmpsl
adc
aaa
gs
mov
mov
mov
dec
orl
mov
ficomps
popw
sti
xchg
scas
leave
cmp
mov
test
das
andl
push
scas
mov
inc
cmp
fcomip
hlt
push
or
aaa
popf
sbbb
scas
pop
insl
int
pop
adc
cmpsl
arpl
cli
inc
xor
fcomps
scas
jecxz
popf
stc
xor
loopne
xchg
filds
add
mov
das
adc
shll
or
dec
inc
fdivrl
out
outsl
mov
imul
cmp
add
and
xchg
fs
mov
jl
sub
jno
pushf
sbb
or
aad
xchg
push
add
sti
clc
negb
sbb
inc
int3
outsb
jp
test
inc
adc
xor
xchg
jnp
in
popf
or
dec
shll
div
and
jbe
dec
xchg
mov
push
iret
jp
lock
mov
fnstsw
or
insb
les
popa
xor
stc
mov
scas
test
out
cmpsl
sub
fisubrs
lods
cmp
and
pop
test
popa
push
inc
out
pushf
cltd
mov
mov
push
mov
in
sbb
aad
outsl
pop
mov
andb
jecxz
in
int3
jmp
iret
push
test
cmp
xchg
and
push
aad
loope
sbb
ret
ja
sbbb
cltd
xchg
xchg
adc
lea
rorb
cmp
cli
bound
std
lods
dec
stc
out
test
mov
xor
pop
sarb
mov
adc
adc
lret
fbstp
adc
mov
xor
sti
faddl
mov
sub
lcall
imul
add
xor
nopl
fsubs
cmp
div
or
mov
jecxz
subb
scas
adc
outsl
bound
dec
sub
push
nop
inc
mov
or
loopne
lods
jns
lock
xrelease
inc
ret
subl
fstps
imul
jns
js
inc
xorl
dec
add
out
inc
shrl
fcmovne
imul
push
out
xchg
lea
and
mov
jno
pop
sbb
repnz
fadd
mov
dec
sahf
les
jae
rorb
mov
iret
mov
ffree
adc
popa
cs
push
xchg
mov
lea
loope
mov
cs
cmp
adc
das
pusha
movsl
popa
dec
stos
in
pusha
cs
push
sbb
inc
sbb
and
inc
fmull
dec
loopne
push
call
pop
mov
rolb
pusha
adc
insl
xor
das
jge
jl
mov
fcmove
mov
inc
out
jb
fnstsw
mov
xchg
lods
or
sub
loop
push
push
shll
push
insl
and
inc
cmpl
adc
aad
iret
nop
mov
fmul
loopne
mov
jb
out
popf
jl
popa
movsl
fistl
in
arpl
data16
test
mov
into
loope
adc
jge
arpl
sbb
iret
push
out
insb
leave
fdivr
jle
loope
push
lahf
jp
lods
repnz
inc
jae
aaa
cmp
xchg
jecxz
iret
jg
push
inc
mov
out
push
sub
lret
sub
aaa
cmc
pusha
ja
push
push
cli
xor
mov
mov
aad
fidivl
rcll
jb
arpl
jle
outsb
je
mov
bound
dec
push
lret
repz
loope
mov
aad
pop
push
ficoms
mov
xchg
push
lcall
dec
xor
shlb
pop
fs
pop
fcmovb
cmpsb
jb
testl
push
dec
jns
test
adc
push
mov
or
shrb
out
pop
mov
xlat
cmp
xchg
repnz
xor
jecxz
fldl
enter
cld
notl
jle
sub
sub
xchg
fldenv
sbb
and
pushf
aaa
les
push
shrb
lock
xor
fisttps
loop
xor
lods
sub
mov
xlat
mov
mov
inc
xchg
sub
gs
jge
cmc
stc
mov
pop
int
orl
add
test
jecxz
fidivrl
push
mov
add
fidivs
dec
and
loopne
mov
xchg
cmpsb
outsb
jmp
int3
stos
stc
daa
cmpsl
add
mov
hlt
fs
add
and
cli
pop
dec
ret
dec
mov
cli
mov
rolb
sub
push
sbb
cmp
cmpsb
push
cld
push
jle
xor
mov
outsl
add
inc
out
pop
pop
movl
cld
mov
aam
pushf
mov
or
mov
mov
int3
fmuls
into
clc
push
jbe
jae
pop
test
lret
xor
jmp
push
lcall
test
sahf
pusha
mov
shl
jae
hlt
mov
adc
popf
out
daa
hlt
call
mov
jno
jg
cli
jne
inc
icebp
repnz
sbb
lret
cmpb
mov
cmpsb
push
shlb
mov
imul
enter
mov
std
mov
imul
mov
add
loope
mov
or
push
test
arpl
xchg
jns
push
icebp
add
out
shlb
out
hlt
push
out
xchg
inc
sahf
dec
pop
push
and
pop
fcmovnbe
inc
repz
in
and
pushf
adc
add
push
mov
xor
ljmp
xchg
jg
jne
insb
cwtd
mov
xor
aas
vmwrite
outsb
adc
or
addr16
pop
shrb
mov
mov
les
adc
xlat
xor
aas
jmp
out
mov
jl
repz
lahf
or
scas
and
aad
mov
stos
fildll
dec
and
call
dec
xchg
push
ljmp
pop
jmp
movsb
xchg
add
cmc
js
xor
mov
pop
add
dec
push
adc
in
push
sbb
cmpsb
sub
sbb
loope
and
popa
xlat
test
stos
mov
or
int3
inc
ja
mov
push
rorl
aas
shlb
adc
ljmp
inc
xor
and
pusha
pop
adc
call
or
inc
insl
repz
lock
clc
mov
fsub
dec
rcll
cmp
cli
xlat
clc
push
std
pushf
popa
faddl
test
push
dec
lahf
and
cmp
jo
sbb
clc
sbbb
imul
pop
imulb
push
and
adc
cli
push
cmpsl
sub
nop
fsub
add
mov
xchg
dec
mov
fs
xor
pop
stc
sbb
push
ljmp
fldl
mov
pop
push
xchg
lcall
bswap
xor
fwait
cld
adc
push
jle
sahf
lds
cmp
repnz
and
pop
jnp
push
pop
sbb
dec
sbb
mov
andb
and
hlt
jle
pop
xchg
cmp
out
adc
xchg
out
push
sbb
push
jns
xor
movsl
cmpsb
bound
movsb
popf
adc
inc
jns
test
jl
push
mov
fdivp
int3
cwtl
aaa
mov
gs
pop
cmp
dec
sbb
imul
mov
or
popf
popa
js
jl
push
aas
mov
sub
mov
add
rorl
enter
incl
adc
imul
xlat
or
rolb
adc
mov
mov
mov
in
jl
clc
pop
leave
es
push
mov
rorl
sbb
cmc
inc
inc
add
repnz
add
mov
xor
loope
adc
sub
addr16
mov
push
push
cmc
mov
mov
leave
pusha
scas
jno
xchg
cwtl
cmp
andb
sbbl
mov
test
roll
test
cltd
movsb
pop
dec
xor
mov
ljmp
sbb
repnz
push
pop
and
addr16
add
or
mov
and
mov
fwait
imul
xor
aad
andl
psadbw
decl
add
imul
stc
mov
dec
pop
dec
les
sar
mov
cmp
xor
jo
orb
mov
je
fcmovne
jg
ds
and
movb
mov
pop
test
fcmovu
iret
lods
xchg
and
push
nop
dec
pop
jns
cmpb
cwtl
inc
xchg
les
dec
pop
adc
xor
mulb
jp
sti
push
enter
into
iret
sub
dec
push
adc
xor
shrb
or
dec
xor
pop
sbb
jb
push
sahf
mov
jmp
test
loope
ret
adc
mov
and
ljmp
sub
mov
and
push
push
push
call
cs
and
fldenv
adc
ds
shll
dec
fwait
mov
mov
testb
and
lds
into
pushf
mov
arpl
enter
push
xchg
sbb
cmpsb
or
faddp
fdivr
clc
pop
test
out
adc
pop
pop
push
out
push
movsb
mov
rcrl
dec
cld
xor
test
mov
add
stos
push
xor
shrl
rcr
imul
mov
cs
inc
int3
sbb
push
xchg
stos
fists
inc
push
test
in
jg
adc
and
int
pop
or
xlat
out
push
outsb
sub
dec
stc
xor
xchg
mov
lods
add
flds
les
xchg
clc
ss
push
cmpsl
movsb
sbb
mov
mov
mov
in
push
shlb
mov
add
stos
pop
jge
lods
out
std
mov
push
aad
jo
nop
pop
xor
fimuls
adc
lock
jae
iret
mov
xchg
movsb
add
ficoml
dec
jno
test
in
sbb
xchg
cmpsl
lock
cmp
les
je
aam
adc
aaa
orl
and
xchg
jmp
push
cltd
or
xor
sbb
stos
pop
sub
push
mov
xlat
xorb
or
fcompl
sbb
cmp
je
ss
jle
cmp
xor
push
lcall
lahf
ficomps
fimuls
scas
mov
mov
es
cmp
push
test
mov
mov
mov
push
mov
repz
mov
repz
out
pop
cmpsb
mov
insb
jae
cmpsl
or
mov
testb
mov
adc
int
jns
xchg
mov
pcmpgtw
fsubrp
lock
cmp
lock
jle
dec
scas
lock
fcomps
cs
push
fistl
jae
xor
push
adc
gs
mov
or
push
fcoml
xlat
out
rcrl
dec
cmpsb
dec
outsl
mov
add
addr16
addr16
mov
push
popf
sbb
vmread
dec
jge
inc
aaa
outsl
dec
sahf
jbe
call
out
push
nop
jnp
adc
adc
pop
addr16
imul
inc
pusha
cltd
xchg
mov
cmc
jmp
adc
adc
or
adc
bound
mov
std
orb
mov
pop
lcall
cmc
mov
mov
ss
mov
fwait
lods
xor
adc
movsl
outsl
inc
jae
mov
in
mov
insl
push
mov
pop
mov
out
sub
mov
push
mov
cmp
ds
push
push
inc
inc
ficoml
cmp
mov
ljmp
nop
les
popf
loopne
ficomps
pop
sub
nop
add
mov
stc
mov
pop
pushf
std
mov
mov
mov
xchg
dec
leave
sarl
inc
inc
jbe
test
ficompl
loopne
mov
imul
adc
push
pop
data16
inc
popf
dec
dec
popa
mov
jmp
lahf
cwtl
pop
ficoms
push
jle
mov
sbb
loope
xchg
lock
jg
out
jle
out
loope
aaa
rcrb
add
lods
std
in
or
test
into
cmp
test
cld
inc
into
movsb
xchg
out
rorb
insl
adc
jge
fwait
testl
aaa
mov
or
fistpl
into
xor
cmpb
and
shlb
sti
rcl
mov
cmp
adc
jb
mov
scas
sti
call
push
jb
movsb
sbb
sti
mov
mov
xchg
cmp
dec
movups
call
mov
jmp
xor
dec
mov
sbb
push
cmp
test
push
lds
sub
mov
cmpsl
xlat
cmp
xchg
insl
repnz
add
and
mov
jbe
sbb
insb
shlb
and
lock
ret
loope
sub
sub
int
jbe
shlb
mov
or
insl
xchg
mov
test
dec
push
pop
mov
bound
into
shrl
nop
cmp
push
inc
xchg
ret
cltd
mov
inc
les
jbe
adc
sbb
rcrb
aaa
mov
imul
gs
bound
scas
fidivl
xor
arpl
xchg
aaa
inc
pop
loope
loope
cmp
jmp
fwait
jge
cmpsl
aaa
sub
push
enter
and
out
add
xchg
cmc
xchg
lcall
sbb
adc
cmp
xchg
dec
ljmp
sbbl
pop
mov
loope
mov
mov
xor
inc
lock
hlt
push
adc
not
mov
cli
fs
jl
sbb
mov
ret
mov
or
sbb
jmp
stc
lcall
movsl
pop
adc
repz
arpl
mov
xor
pop
pop
lds
xchg
mov
sbb
dec
call
lret
jge
in
outsl
into
cli
inc
mov
xchg
xor
mov
test
fcoml
or
popf
mov
cmp
sub
mov
hlt
xchg
cmc
popa
call
jo
xchg
and
adc
add
xchg
mov
mov
ss
pop
adc
push
std
insb
sbb
int
push
test
xchg
push
jae
jle
cld
cs
sub
sbb
repnz
sarb
negb
ss
add
out
pop
sbb
imul
dec
mov
testb
ficoml
cld
inc
xor
fidivrs
fnsave
pop
sbb
popf
nop
test
lods
add
xchg
xor
sub
lock
mov
outsl
rcll
loope
or
sub
inc
and
fs
outsb
ss
inc
clc
dec
notb
push
mov
cltd
iret
addr16
jp
popf
repnz
popa
jns
pop
cmpsl
inc
arpl
repnz
repz
imul
xchg
enter
xor
cmp
std
lcall
xchg
sub
repnz
cltd
std
ret
sub
and
and
jo
xlat
inc
in
mov
xorl
mov
adc
into
jae
dec
sub
cmp
push
add
push
loopne,pt
mov
in
pop
adc
and
fldl
jp
pop
push
cmpsl
cli
mov
arpl
pop
push
inc
fwait
in
mov
or
mov
add
adc
lea
sbb
fbstp
in
ficompl
push
jge
adc
dec
fldenv
lods
inc
jmp
popa
jg
call
jg,pn
sti
sbb
fisttpll
lret
testl
adc
imul
cmp
adc
dec
ss
lods
push
insb
jae
add
das
or
jb
mov
fildll
stos
xor
inc
bound
fsubrs
fiadds
test
push
cld
inc
lds
inc
inc
xchg
out
stos
sbb
dec
and
stc
sbb
mov
iret
cmp
pusha
aaa
sbb
sbb
ljmp
je
xor
mov
cmc
movsl
pop
shl
inc
pop
ret
rol
aam
adc
mov
aaa
adc
mov
or
mov
inc
sbb
clc
adc
jnp
pop
inc
pop
nopl
lcall
xor
mov
push
add
dec
jnp
inc
pop
push
fidivs
leave
sbb
xor
outsb
andnps
inc
adc
inc
xchg
pushf
cmpsl
pop
add
daa
jno
jns
int3
leave
jp
les
push
call
dec
cmpsl
fimull
add
and
pop
jb
inc
fnsave
in
sub
into
add
or
mov
dec
xor
insl
fidivl
scas
dec
ffree
mov
xchg
or
jnp
cmc
ljmp
add
xchg
xchg
fisubs
hlt
dec
repz
loope
in
sub
or
adcl
in
pushf
jle
stos
jno
jne
sbb
and
sub
mov
mov
and
xor
adc
and
xlat
cmc
imul
jecxz
rorl
ja
into
or
rcll
ja
xchg
push
cmp
xlat
and
das
mov
adc
fsubl
inc
cmp
cld
out
jg
test
sbb
aas
mov
and
inc
adc
ret
js
dec
call
int3
mov
mov
jns
push
out
and
sub
ret
xor
xor
jne
ret
jne
cmp
jp
add
cmp
dec
mov
rcr
mov
adc
sbb
and
out
fcomps
arpl
aaa
cmp
vsqrtss
rorl
pop
repz
add
dec
sub
out
and
mov
sbb
mov
data16
mov
jl
cmp
daa
notl
pop
pop
and
xchg
jbe
mov
aam
adc
pusha
adc
pushl
jno
roll
aaa
pop
insb
fistpll
inc
out
sub
ja
test
pop
lret
jmp
sbb
mov
bound
mov
into
dec
movsl
jl
xor
dec
push
aas
pop
fwait
std
add
xchg
fldcw
xchg
cmc
fmuls
sub
aad
fistl
adc
and
nop
pop
or
int
push
inc
je
sbb
enter
adc
cmc
add
js
or
mov
sahf
fcmovbe
addr16
mov
sub
roll
arpl
xchg
sub
mov
scas
pop
mov
pop
arpl
cs
add
gs
cli
loopne
rclb
jg
adc
and
jno
cmpsl
ljmp
add
cmp
jne
xchg
push
mov
pushf
mov
adcb
imul
dec
fidivrs
bound
jmp
mov
faddp
stos
cltd
add
call
lea
mov
bound
jge
or
xor
loop
repnz
orb
mov
bound
jge
or
xor
loop
repnz
orb
mov
bound
jge
or
xor
jecxz
repnz
orb
mov
enter
jne
lcall
cmp
sub
sbb
or
ds
sbb
je
mov
mov
test
fdivr
enter
sub
sbb
or
pop
push
mov
mov
call
or
sbb
sub
cmp
dec
js
push
mov
fmull
stos
mov
js
sub
inc
mov
repnz
inc
movsb
mov
mov
call
add
add
xor
push
dec
sbbb
push
xchg
inc
xor
cwtl
inc
mov
fsubrs
incb
jo
sbb
mov
mov
js
push
mov
clc
push
fldt
stc
leave
or
ds
sbb
sbb
jns
js
mov
sbb
adc
dec
inc
ja
stos
fnstcw
pop
movsl
pushf
aam
into
cmc
mov
jns
xchg
cmpsl
repnz
mov
xchg
test
cltd
xor
push
fyl2xp1
cwtl
xor
sbb
jge
mov
imul
imul
pop
pushf
rorl
cs
enter
sub
sbb
or
pop
push
mov
mov
call
insb
push
jp
outsl
pop
jg
sub
sub
cmp
cld
rcr
cld
out
xchg
cwtl
xchg
mov
lods
jg
insl
bound
js
sub
adc
aaa
cmp
sti
std
inc
aam
mov
xchg
push
pop
jl
adc
push
mov
mov
call
or
sbb
sub
cmp
dec
js
push
mov
mov
call
or
js
mov
inc
fstps
cmp
aam
loopne
call
cmp
ret
fwait
mov
out
mov
stos
inc
sahf
mov
iret
adc
dec
mov
rcll
ss
mov
and
pop
adc
xchg
std
and
fs
adc
push
jl
insl
jecxz
cmp
cmp
sub
lods
push
or
or
dec
jp
cmpsl
dec
sub
es
inc
mov
mov
mov
jge
push
jp
pop
add
out
mov
int
lds
push
or
icebp
push
mov
je
test
std
push
lea
cmc
pop
mov
out
mov
pop
add
mov
ds
add
push
repz
loop
out
xor
sub
popf
mov
cwtl
mov
mov
pop
adc
cmc
mov
les
jle
ret
divb
or
test
sub
push
ss
jo
out
bswap
mov
ja
das
dec
jl
or
lea
push
or
rolb
test
jge
jbe
enter
mov
inc
sub
add
and
cmp
inc
pop
jp
add
fwait
xor
push
pmuludq
cwtl
jge
das
enter
aam
in
xchg
push
movsl
mov
jbe
dec
push
fldt
xor
dec
lcall
fcmovne
movsb
push
in
stc
pop
cs
shrb
adc
sar
xchg
stos
pop
mov
enter
ret
in
cmp
cwtl
sbb
ret
dec
sbb
dec
int
mov
xor
out
xor
cmp
cmp
mov
pop
mov
jo
xor
mov
lods
aas
xchg
pop
icebp
mov
jns
or
scas
outsb
sub
adc
movb
lods
jne
pushf
mov
push
ss
stos
daa
add
aaa
mov
in
jno
adc
push
cmp
aad
and
lret
push
int3
mov
imul
sti
bswap
pop
sub
adc
roll
xchg
mov
cmp
movsb
xchg
and
jbe
dec
inc
or
and
cld
jno
es
cmpsl
sar
mov
dec
dec
dec
mov
sbb
out
add
inc
inc
and
bound
dec
adc
aaa
mov
cltd
add
mov
sbb
adc
push
pop
aad
out
dec
mov
xchg
sti
pop
mov
cmpsb
fsubrs
mov
dec
dec
cmpsb
jge
addr16
dec
int
daa
test
xchg
xchg
add
andb
cmp
xlat
cli
jo
push
mov
scas
sub
push
xchg
hlt
xchg
cmp
jl
or
cmp
es
or
fs
inc
pop
outsb
scas
stc
xchg
and
mov
pusha
mov
adc
loope
out
inc
mov
repz
sbb
sbb
sbb
lret
dec
push
mov
stc
js
xchg
jne
inc
imul
decb
fnsave
mov
push
cmp
insb
fidivl
pushf
gs
int3
jp
sub
sbbb
inc
pop
popa
add
stc
dec
sbb
pop
mov
mov
mov
sub
pop
sbb
and
adc
mov
dec
xchg
daa
pop
push
js
jge
pop
cmc
lock
mov
or
mov
lea
dec
push
lahf
jbe
das
ret
cmp
sbb
xchg
xchg
sbb
jns
ljmp
arpl
push
and
and
add
and
and
testb
lods
dec
mov
or
or
xor
mov
sbb
dec
aad
repnz
in
shlb
push
lahf
push
mov
call
dec
jno
aad
add
sti
les
mov
jbe
adc
adc
inc
mov
ret
pop
mul
jmp
push
cld
pusha
hlt
pop
add
xchg
dec
xor
ljmp
daa
push
pop
lret
mull
lds
lahf
dec
mov
or
mov
inc
xorb
adc
hlt
fcomps
cld
mov
xor
lods
scas
das
sub
ljmp
dec
aam
out
xor
pop
jb
sub
adc
sahf
pop
add
outsb
mov
adc
lock
aam
and
insl
out
pop
dec
mov
aas
xor
in
push
into
inc
mov
fs
xlat
faddp
adc
bound
ja
cmc
cmp
mov
in
insl
ret
fbstp
imul
mov
lea
inc
push
bswap
je
and
mov
shrb
int
dec
pop
inc
ljmp
sbb
aam
xor
aaa
test
pop
push
rcrl
call
mov
imul
adc
push
cmp
in
push
xor
cmpsb
lea
push
pop
xchg
enter
mov
das
or
sbb
aam
push
mov
xor
in
cmp
mov
or
rolb
mov
iret
insl
dec
lcall
xchg
js
fcomi
push
dec
cmp
dec
pop
xor
enter
iret
cltd
popf
lock
mov
or
sbb
les
lods
pop
inc
dec
mov
cmp
pop
popf
add
movsl
and
push
xchg
rolb
andl
sub
or
mov
sub
rorl
imul
push
pop
push
sbb
fwait
popl
imul
fwait
mov
cmpsb
lock
jle
int
mov
mov
movsb
mov
jecxz
xchg
add
mov
leave
sbb
in
sbb
push
dec
pushf
popf
jmp
xchg
je
int3
push
fcoml
dec
cwtl
in
scas
sarl
stos
pop
ss
cwtl
or
ret
scas
mov
sbb
dec
shl
inc
push
jg
cs
fs
sahf
fnstcw
pop
incb
imul
mov
adc
mov
jo
orb
and
sti
mov
sbb
mov
repnz
and
dec
sti
repz
pop
xchg
cmp
sub
test
cwtl
xor
cmp
sub
movb
sbb
fwait
int3
cmovno
int
push
xchg
xor
xor
inc
cmp
arpl
js
ret
jge
mov
mov
jge
xlat
in
jle
rcrl
xor
mov
add
or
cmp
out
ds
dec
ja
popa
pop
xchg
adc
push
jb
sti
mov
subb
mov
shrl
pop
rcrb
inc
int3
decl
mov
repnz
arpl
mov
pop
mov
dec
popl
rcll
clc
out
aas
into
fdivrs
sbb
mov
xor
out
jl
out
add
dec
fnstsw
push
sbb
xchg
out
cmpsb
lock
mov
jle
mov
stos
cltd
ss
cmp
in
mov
xchg
inc
push
arpl
imulb
pusha
stos
sbb
outsl
pop
dec
shll
aas
daa
cmp
sub
add
lods
jbe
xchg
mov
xchg
sti
push
pop
shlb
xchg
xor
dec
cli
jne
shll
xor
scas
jecxz
cld
inc
mov
pop
mov
popa
cmp
fsubrs
jecxz
push
xchg
sti
mov
outsl
mov
mov
pop
push
fprem
mov
jnp
roll
sbb
movsl
shll
inc
sbb
stos
push
sarl
pushf
inc
mov
mov
lea
scas
fistpl
pop
or
adc
inc
mov
cmpsb
adc
xchg
fidivs
sbb
out
jae
sbb
movsl
cmp
insl
xor
lods
cmp
mov
lock
push
sub
jmp
cmp
inc
or
cmc
mov
mov
loopne
sub
sahf
xchg
gs
mov
push
xlat
fsubrl
sbb
cli
test
es
idivb
call
push
gs
cltd
adc
testb
push
push
push
popa
mov
loopne
je
fisttps
stc
mov
or
outsl
jnp
pop
push
imul
mov
push
fimuls
inc
xlat
or
rolb
lods
sbbb
arpl
mov
mov
push
push
sahf
ret
js
jns
lods
cmp
fisubrs
sti
cmpsl
mov
cmp
shrl
jge
pop
in
cmp
and
sbb
mov
stc
cmp
loopne
loope
ds
ret
pop
dec
cmpsl
insl
or
xor
jns
ror
cmpl
xlat
inc
jo
mov
dec
xor
mov
and
daa
mov
jl
int
enter
dec
int3
xchg
sarl
push
call
ret
xor
jno
jno
and
lretw
mov
inc
jne
and
add
aas
lret
shr
xor
dec
xlat
mov
or
imul
cmpsb
aas
in
pop
inc
jmp
and
les
shlb
rcrb
dec
sub
dec
cwtl
in
mov
mov
lods
sub
lods
addr16
shll
int3
push
rorb
mov
test
mov
pop
shlb
add
leave
pop
inc
xor
test
aas
aaa
popf
xor
dec
out
or
inc
mov
xor
xchg
jge
test
add
push
aas
fimuls
cwtl
ret
inc
insb
add
in
mov
or
rolb
stos
xor
xorl
dec
pop
ja
cmp
fists
inc
mov
arpl
jp
jns
pop
mov
jns
loope
out
jne
mov
sbb
js
fisttpll
add
imul
imul
sub
addr16
loopne
dec
je
out
add
int3
hlt
enter
pop
jbe
jb
and
xor
mov
in
sub
cltd
std
jae
dec
or
les
mov
jg
das
in
repnz
dec
push
dec
lea
outsb
pop
xchg
inc
and
hlt
mov
daa
sbb
sbbl
insb
xchg
sarw
nop
sub
lret
test
push
inc
fdivp
push
lds
sub
jmp
cmpsb
adc
push
push
fisttps
jb
pop
xchg
push
insb
loope
jo
and
and
mov
cmpsb
test
xlat
mov
adc
cmpsb
adc
fwait
adc
dec
or
neg
adc
or
mov
jbe
fldcw
mov
mov
jae
shll
cld
cmpsl
add
adc
movsb
out
xchg
push
loopne
push
ss
frstor
movsb
mov
aad
imul
cmpb
mov
and
divl
fdivp
lret
dec
into
push
iret
inc
cli
jg
aaa
push
daa
out
pop
fidivrs
dec
inc
sarb
daa
movsl
nop
pop
jg
adc
imul
adc
or
pop
imul
dec
pop
int
in
and
test
lret
sub
cmp
iret
lcall
aad
js
pop
in
loope
test
jle
mov
orb
fimull
shll
roll
xchg
shrl
decl
jbe
loope
add
movsl
cmp
insl
movsl
ret
push
mov
das
es
dec
nop
sub
shll
cmp
inc
idivb
imulb
and
orb
mov
jp
arpl
jb
dec
je
xor
in
pop
push
push
rol
test
movsl
dec
mov
movsb
jnp
sbb
add
or
pop
call
cmp
xchg
cmp
pop
gs
ret
jecxz
xchg
fsubrl
repz
jmp
in
mov
push
rcl
pmaxub
jo
push
jb
jbe
adc
inc
push
addl
push
stos
mov
inc
pop
mov
push
cmp
and
fidivs
aam
sbb
cmc
in
push
arpl
sbb
mov
push
push
pusha
mov
xor
hlt
sahf
pop
and
mov
mov
insb
enter
dec
insl
cmp
dec
add
mov
inc
movsb
outsb
sbb
inc
push
push
cmp
dec
movsb
insb
mov
rolb
pop
aam
xchg
cmpsl
dec
rcl
andb
jb
pushf
call
push
dec
adc
hlt
push
push
lcall
mov
jp
je
xlat
push
sbb
cld
xchg
or
fcomp
mov
icebp
cmp
out
fstl
pushf
scas
or
xchg
and
sahf
mov
jle
sub
pop
inc
adc
mov
rorb
mov
insb
gs
addr16
dec
xor
ss
movsb
mov
inc
push
jo,pn
iret
cld
daa
xorb
xor
mov
sbb
sub
pop
insb
out
or
and
loop
int
mov
rclb
shrl
push
cmp
subl
js
and
add
mov
out
leave
or
push
and
push
test
xor
gs
into
xor
loop
cs
fbstp
std
push
fiadds
ja
jo
js
gs
mov
mov
cmp
and
sbb
cs
push
lret
hlt
cmp
jnp
xchg
xchg
aaa
and
mov
insb
xor
fcoms
pushf
stc
mov
and
jo
cmp
mov
push
cmp
imul
pop
sub
or
out
mov
andb
xor
add
in
cld
sbb
mov
mov
sub
jne
stos
sbb
sbb
cli
fs
clc
popl
shrl
in
jo
pop
mov
stc
pop
push
movsbl
xor
pushf
jmp
data16
in
pop
push
lcall
js
cmpsb
ss
gs
sahf
jmp
lahf
mov
std
mov
mov
les
inc
xlat
jg
outsb
adc
mov
out
int3
sti
dec
xor
push
dec
ret
ficompl
stos
aaa
mull
xor
jmp
dec
jl
adc
ret
xor
xchg
push
mov
inc
jle
push
sti
aaa
sbb
test
xor
int3
in
insb
psubusb
inc
push
pop
fcmovbe
hlt
sbb
es
mov
in
loope
sbb
je
icebp
add
dec
sarl
bound
or
lods
sbb
insb
lods
ljmp
sub
add
push
pusha
jp
or
js
xor
test
sub
pop
in
push
cmp
cmpsb
xchg
jbe
es
cltd
iret
inc
sub
jae
xchg
ret
xchg
loopne
xchg
loopne
mov
addr16
daa
mov
out
inc
pop
lret
shll
mov
pop
cmp
sbb
les
movl
sahf
xchg
pop
out
fsubrs
test
adc
roll
gs
xor
addr16
outsl
fisubrl
pop
push
adc
inc
dec
cmpsb
scas
push
jno
and
sarb
push
mov
push
xlat
adc
test
push
and
shr
int3
sbb
jne
pop
sbb
inc
aad
lahf
nopl
push
jecxz
mov
rcrl
in
loop
arpl
iret
inc
lret
cltd
push
jl
sub
inc
xchg
inc
cmp
mov
dec
push
xchg
sub
dec
cwtl
incb
cld
daa
idivb
mov
repz
stc
ja
push
mov
out
dec
jno
mov
mov
dec
lahf
mov
adc
lcall
or
push
cmpsl
cmp
xlat
cmp
xchg
test
inc
push
out
aaa
lods
iret
add
roll
fsubp
lcall
jmp
or
ret
add
dec
rorb
pop
xchg
mov
add
mov
orb
test
add
iret
pop
loopne
dec
insl
inc
stos
popa
pop
mov
aam
pop
loopne
inc
cmp
jl
rcll
dec
mov
enter
repnz
push
dec
pop
das
stos
cmc
stos
lret
mov
scas
jbe
and
xchg
bnd
pop
dec
pop
pushf
addr16
aaa
mov
adc
lods
pop
lahf
lock
ds
lcall
push
jl
jbe
adc
push
bound
xor
mov
jno
pop
ficoml
dec
mov
sbb
out
or
jo
lahf
mov
pop
or
ja
cmp
idiv
mov
push
lods
ss
xchg
out
fwait
sub
push
sbb
addb
xor
mov
je
mov
cs
test
inc
lahf
aas
imul
sbbl
not
and
mov
push
cmc
cmp
jb
pop
shlb
in
jno
arpl
dec
cmp
cmovno
mov
cmp
je
daa
lds
popa
add
js
repnz
mov
and
fdivrs
pusha
sub
je
or
dec
xchg
and
mov
lds
imul
adc
lahf
cli
out
repz
and
adc
cmp
or
cs
or
out
aam
outsb
mov
mov
mov
gs
ftst
mov
xorl
sti
or
loope
inc
mov
and
in
scas
cld
inc
cmpsl
aas
stos
jecxz
inc
nop
sub
cltd
and
fldt
dec
bound
adc
pop
lock
jo
mov
sub
xor
xor
and
mov
testb
mov
mov
cmp
and
lods
test
jb
pushf
add
cld
mov
inc
sti
test
or
dec
xchg
cltd
fcomps
mov
in
fnstsw
pop
inc
das
int
out
subl
sarb
inc
and
je
scas
adc
ror
lods
inc
rorb
and
cmp
aas
icebp
pop
mov
orl
sti
gs
xchg
sub
xor
in
dec
xor
hlt
xchg
hlt
pop
cmp
dec
mov
pop
pop
popa
sub
jbe
xor
xchg
orl
xchg
lahf
push
push
iret
push
stc
shll
loop
int
and
test
or
sbb
cmp
out
push
mov
lret
add
or
xchg
adc
divb
adc
aam
cmp
es
lock
inc
mov
fs
stos
cmp
mov
mov
lret
pop
pop
mov
mov
pop
fs
imul
dec
pushf
sub
ljmp
xchg
jno
fcoml
int3
add
dec
dec
out
add
push
and
sub
mov
jle
lret
adc
lock
insl
repz
insb
repnz
int3
push
inc
or
imul
jo
into
push
adc
arpl
lea
call
jp
or
cltd
jl
loopne
pop
pop
fldl
cmp
mov
xor
jl
rcr
sub
add
and
sbb
inc
add
push
push
cwtl
fucomi
repz
test
sbb
clc
dec
or
adc
movsl
dec
loop
sub
xchg
pop
jg
mov
mov
dec
orl
sub
jl
xchg
es
jo
clc
mov
sbb
pop
iret
lahf
mov
jns
jp
xor
dec
pop
mov
aas
pusha
or
push
sbb
xchg
and
xor
jae
jp
sti
je
push
hlt
gs
bound
pop
mov
mov
or
lret
int3
ja
pop
arpl
jo
js
inc
xorb
fwait
test
push
push
mov
data16
jae
push
mov
data16
and
rcr
shl
push
or
mov
xor
jecxz
loope
lea
cmpsl
push
mov
sub
mov
loope
sub
sbb
fistl
push
mov
mov
int3
sbb
and
scas
fwait
movsl
test
outsl
sarb
and
jge
cmp
push
mov
popa
xor
inc
ss
in
filds
sbb
fstl
das
fmuls
or
aam
es
pop
push
pop
inc
mov
push
mov
or
xchg
mov
addb
ljmp
gs
mov
pop
jb
and
mov
je
push
subl
pop
xchg
adc
clc
pop
mov
xchg
ds
aad
jae
jle
pop
inc
outsb
mov
jb
sbb
ret
push
sbb
test
insb
xchg
mov
fnstenv
pop
ljmp
mov
mov
push
cmpb
clc
add
aas
scas
jnp
jbe
jo
cli
push
test
gs
fmull
fbld
mov
stos
sarb
loopne
pop
pop
iret
fbld
xor
and
mov
cmp
pop
sarb
mov
daa
or
jae
sub
adc
scas
les
daa
cwtl
fcomps
sub
pop
pop
dec
pushf
mov
rclb
jb
shll
dec
jp
fimull
ds
mov
or
jno
rolb
lea
inc
das
shlb
pop
mov
pusha
fdivrp
dec
loop
fs
movsl
loopne
add
jp
pop
rorb
or
cmp
adc
xor
pusha
testl
mov
add
subl
jmp
js
dec
rcll
inc
in
xlat
test
xchg
das
mov
test
leave
cli
aam
loopne
les
test
insb
sbbb
shlb
lock
dec
xchg
mov
mov
cmp
stc
leave
dec
inc
jmp
xchg
pop
lods
mov
dec
ja
push
call
lcall
or
pop
push
mov
mov
call
or
sbb
sub
cmp
dec
js
push
mov
mov
call
or
sub
sbb
or
pop
push
mov
mov
call
or
sbb
sub
cmp
js
call
jbe
data16
cwtl
mov
pop
adc
add
pop
call
insb
fcom
in
fistl
es
fsubl
int
cld
dec
in
pop
pushf
sub
pop
call
insb
fcomps
or
cmp
sub
fsubrl
js
dec
in
pop
pop
inc
mov
mov
call
insb
fcomps
or
cmp
sub
fsubrl
pop
nop
cmp
cmp
ret
fwait
sub
aad
xchg
mov
subl
inc
adc
jo
xchg
xchg
pop
jecxz
or
ret
xchg
and
xchg
pop
adc
sub
dec
or
inc
cmc
jnp
sbb
xchg
mov
jb
fdivrl
cwtl
cmc
cld
adc
int3
cmp
lods
mov
push
loopne
cmp
sbb
push
xchg
dec
xchg
int3
xchg
aas
add
test
cwtl
xchg
push
inc
and
mov
xchg
lcall
jnp
cmp
or
jne
fsub
cwtl
fisubrs
sub
mov
sub
mov
dec
int3
sub
imul
sub
nop
call
insb
fcomps
or
cmp
sub
fsubrl
js
dec
in
pop
pushf
sub
sbb
enter
int
rcrl
cs
fcoml
test
sub
imul
lea
popf
sbb
dec
hlt
inc
loope
cld
mov
sbb
cmp
rcrb
ja
lods
dec
mov
mov
or
cmp
sub
fsubrl
js
dec
in
pop
pushf
sub
pop
call
insb
fcomps
or
cmp
sub
fsubrl
js
dec
in
pop
pushf
sub
pop
call
inc
sbb
fmull
push
xlat
pop
fcmovnu
stos
cmp
cmp
insb
mov
test
fdivrl
lods
push
outsl
repz
js
test
cmp
cmc
enter
test
inc
repz
ja
lcall
inc
jmp
jl
scas
into
arpl
mov
mov
sbb
outsb
push
cmpsl
das
adc
aad
sbb
int3
insb
add
fimull
add
push
out
fwait
mov
icebp
mov
and
add
ljmp
adc
lret
ret
ja
xor
mov
push
xchg
sbb
stos
test
popf
pusha
ss
mov
xchg
dec
push
cwtl
xchg
clc
ret
out
into
cmc
add
push
mov
add
call
stc
push
scas
adc
cltd
clc
sti
insb
ss
es
or
movsl
push
mov
push
sbb
sbb
and
shl
push
pop
in
xor
adc
mov
movsl
xor
inc
push
arpl
fiadds
adc
dec
push
sbb
adc
shrl
js
mov
pop
mov
or
push
sti
loope
in
fs
call
mov
pop
mov
bound
hlt
jo
movsl
inc
jbe
add
mov
mov
fucomi
or
rcrl
xchg
loop
fnsave
sub
mov
push
fs
imul
icebp
mov
xor
leave
dec
and
mov
movsl
into
mov
subb
adc
jecxz
std
xchg
andb
xchg
mov
jg
out
mov
outsl
xchg
hlt
cmc
fdivl
push
dec
sbb
repz
dec
and
sbb
gs
jp
scas
mov
add
xchg
pop
out
mov
or
xchg
test
inc
fisttps
jnp
or
sbb
inc
xor
sbb
pop
sar
push
xchg
stos
fistl
loope
dec
cwtl
rcr
js
mov
mov
and
inc
hlt
arpl
ret
test
mov
fcmovnu
xor
xor
inc
loop
push
out
loopne
loope
lret
aaa
sbb
pusha
arpl
bound
bound
jp
arpl
dec
into
dec
daa
sub
xlat
xchg
dec
xchg
mov
mov
out
fistps
lock
iret
mov
push
pop
mov
push
ds
cmpsl
cmp
xchg
enter
test
push
sub
lret
lods
sbbb
mov
insl
inc
loopne
xor
sub
lcall
push
ret
push
out
sub
pcmpgtw
push
cmp
jns
gs
mov
xor
dec
addr16
jp
and
mov
inc
fwait
adc
filds
cs
add
jle
cmp
neg
arpl
les
ja
mov
sub
stos
les
jbe
lods
addr16
fcomip
iret
popa
xchg
stos
push
mov
mov
jbe
jo
xchg
and
pusha
cltd
add
mul
sub
add
dec
push
aam
negb
push
out
stos
sub
add
xor
rcrl
mov
cmpsb
outsb
sbb
pop
xor
mov
fsubl
mov
dec
cltd
cmp
repnz
mov
push
mov
out
imul
and
imul
scas
fs
push
and
cmp
or
test
dec
insl
inc
ficoms
daa
pusha
dec
jnp
push
pop
sbb
adc
adc
lods
lods
push
inc
cmp
mov
mov
js
fs
js
pop
mov
dec
inc
push
dec
negl
push
xchg
ja
pop
xchg
cli
aas
mov
jne
cld
xor
sub
in
adc
mov
jle
adc
pop
mov
ss
popl
jge
cmp
xor
in
push
mov
inc
xchg
sti
into
cmpsb
ds
inc
dec
pushf
in
loop
fiaddl
stos
mov
sbb
adc
push
int3
mov
out
and
das
leave
bound
push
mov
push
mov
cmp
mov
sbb
push
or
cmpsl
sub
mov
add
push
ljmp
inc
insl
subl
adc
mov
loope
add
rolb
jmp
nop
mov
enterw
push
mov
cmp
pop
hlt
add
mov
rcrl
leave
mov
cmp
lret
mov
mov
iret
sahf
ret
inc
pop
int3
ror
sub
loopne
mov
jbe,pt
outsb
fucompp
rorb
js
jns
xlat
mov
stc
adc
lcall
cltd
cmp
sbb
pop
dec
insl
mov
push
loop
push
call
shl
cmp
xlat
inc
scas
ljmp
mov
stos
mov
in
mov
push
xchg
rcll
lock
inc
pop
and
lahf
je
dec
in
dec
lcall
fsub
mov
and
loope
in
fsubrs
xchg
add
cmp
dec
pusha
mov
adcb
xor
pop
jmp
cmpl
mov
nop
dec
mov
out
lods
out
push
jo
pop
inc
and
pusha
in
mov
mov
and
fabs
insb
mov
je
fmul
imul
ljmp
cmpsb
jl
lea
into
sub
bswap
dec
inc
call
add
pop
jmp
sahf
jmp
repz
or
aaa
mov
cmp
pop
mov
mov
fwait
leave
or
loopne
cld
cmpb
or
xor
call
fwait
mov
pop
push
scas
push
es
pop
dec
mov
or
das
dec
pop
jne
sti
xchg
sub
mov
xchg
ds
jns
loope
adc
mov
add
or
sbb
adc
pop
pop
xlat
int3
mov
jge
or
popf
inc
ret
pop
dec
cmpsb
xchg
daa
in
mov
push
add
adc
test
popf
imul
mov
les
ret
movsl
xor
cld
bound
leave
push
mov
pop
incl
inc
xchg
ret
push
in
cmp
jno
or
scas
jmp
jno
add
lahf
in
sub
sbb
sbb
fcomp
pop
bound
add
imul
adc
dec
sbb
pop
push
shll
dec
adc
push
iret
outsl
add
das
std
out
test
pop
jae
adc
leave
sbb
push
or
adc
jle
sbb
mov
xor
insb
bnd
push
jo
flds
jns
cwtl
xchg
inc
mov
cmp
sbbb
ret
sub
dec
lahf
iret
cli
xor
pop
xchg
adc
shll
lcall
or
push
pop
rcll
add
call
scas
dec
arpl
sub
sbb
mov
adc
jnp
adc
pop
push
xchg
push
hlt
push
mov
mov
cli
lret
and
add
mov
lea
pop
enter
mov
ljmp
sub
je
icebp
xchg
les
push
icebp
jbe
push
sbb
sub
xchg
cs
pop
rclb
arpl
out
in
sbb
pusha
mov
jmp
icebp
ds
add
gs
outsb
ljmp
sarb
loope
sahf
push
test
lock
xor
pop
mov
mov
nop
xchg
mov
sub
mov
jne
mov
inc
adc
xchg
lods
call
xlat
adc
fcmove
xchg
pop
hlt
xor
push
sbb
cmp
jle
inc
cmc
out
cltd
jmp
cmpsl
or
stos
jno
into
sbb
movsb
fsub
push
jmp
ljmp
scas
lea
inc
out
and
add
imul
mov
mov
rol
mov
sarl
shr
outsb
das
cmpsb
mov
push
xor
nop
dec
scas
jb
mov
scas
enter
daa
aad
out
fcmovu
movsb
mov
pop
and
push
push
or
int
and
push
dec
sbb
mov
xchg
ja
sahf
mov
pusha
mov
bound
push
in
test
or
xchg
mov
cmc
stos
jnp
dec
fs
pop
bound
jnp
jb
ja
push
adc
dec
mov
sbb
cs
into
adc
sub
push
mov
mov
xchg
push
ss
jl
mov
inc
aam
jmp
outsb
sbb
js
xchg
jp
push
out
mov
cli
mov
add
push
lea
xor
and
add
add
inc
movsb
cld
dec
cmp
push
addr16
std
inc
lret
mov
insl
cmovp
xchg
adc
cs
outsl
mov
shl
xor
inc
sub
ljmp
int3
divl
dec
push
mov
subb
mov
testl
outsb
insl
mov
xor
jbe
rclb
dec
and
cli
movsl
sub
stos
pop
adc
loope
outsl
call
ror
mov
add
imul
sbb
adc
sub
jl
stos
adc
movsb
pop
mov
or
imul
fstpt
call
scas
jo
std
cld
test
or
leave
jecxz
xchg
and
and
dec
push
or
arpl
test
and
pop
rcl
inc
or
imul
inc
mov
mov
adc
rcrl
push
inc
cmc
mov
cmp
outsl
mov
fbld
cmp
sub
xchg
data16
test
sub
fistpll
push
jae
icebp
dec
cmp
lods
in
fldenv
mov
rolb
cmp
dec
insb
jb
je
in
shl
mov
pop
xor
push
push
js
leave
dec
notb
inc
jns
adc
pop
add
mov
repnz
es
cmp
adc
push
ja
cmp
testb
xor
xchg
scas
cmp
push
sahf
fstpt
push
out
pop
stos
movsb
push
out
dec
and
xor
push
push
sbb
repz
repnz
dec
popf
movsb
adc
insl
pop
jg
loope
cmp
jnp
mov
sti
sub
sub
sub
jle
mov
imul
popf
aam
notb
lahf
cltd
out
sbb
mov
add
cmp
jp
inc
stos
push
jns
xor
loopne
jnp
jmp
xor
xchg
xchg
in
or
lahf
add
aaa
and
cmc
xchg
les
sub
lock
cmp
repnz
sub
ror
adc
mov
imul
shl
pop
mov
mov
aaa
jne
faddl
pop
arpl
xor
inc
adc
movsb
arpl
repz
icebp
push
jle
icebp
mov
mov
dec
cwtl
test
aaa
out
shlb
out
in
add
and
cmp
xor
mov
out
pop
cmp
mov
std
push
cli
jae
pop
mov
cltd
push
stc
pop
mov
xor
jb
inc
in
pushf
mov
les
call
outsl
mov
popa
fiaddl
jecxz
bound
movd
shrb
iret
lahf
cld
pop
test
stos
rcl
push
jg
xchg
sbb
test
jnp
push
mov
mov
mov
pop
dec
nop
and
roll
shrl
cmp
pop
addr16
ds
mov
sbb
in
shlb
insl
mov
adc
int
daa
popa
out
inc
js
xchg
mov
mov
or
dec
adc
out
adcb
pop
mov
jl
leave
lret
add
cmovne
pop
pop
lcall
xchg
inc
sub
mov
gs
xchg
in
cmpl
inc
pop
scas
insb
and
inc
jns
addr16
movsl
or
and
jno
sub
mov
test
nop
push
in
in
mov
cwtl
stos
mov
inc
out
mov
jle
insb
mov
add
mov
hlt
add
std
in
ljmp
sub
adc
dec
popf
cmpsb
loopne
inc
cmp
lods
ljmp
in
inc
jmp
ja
push
fildl
jmp
push
pop
in
out
fmuls
or
and
mov
mov
out
cs
pop
js
cltd
aaa
jp
clc
or
sbb
sbb
sbbl
xchg
xor
nop
cmp
stos
fwait
or
fs
sbb
cmpsb
sub
stc
cld
adc
subb
sub
dec
mov
repnz
jl
mov
add
push
mov
cmp
loop
push
in
int
push
cltd
push
xchg
pop
and
mov
js
rorl
xor
mov
inc
mov
dec
xchg
jle
sub
inc
ljmp
test
lods
mov
xchg
imulb
test
shll
popf
cwtl
fmuls
adc
xchg
aaa
cwtl
ss
mov
add
push
adc
test
sbb
test
rclb
lret
test
and
cmp
pusha
in
xor
gs
lahf
arpl
cs
out
les
xchg
xor
dec
adc
jp
popa
pop
xchg
cltd
adc
sbb
out
xchg
and
cmp
stos
decb
adc
mov
mov
or
mov
and
and
cmpsb
cmc
pop
pop
lea
and
jl
lret
cld
scas
stc
jmp
dec
add
adc
add
into
fsubrs
aam
stc
sbb
lret
std
clc
xchg
jb
dec
push
and
gs
mov
iret
imul
cmp
mov
imulb
addr16
dec
xchg
movsl
cwtl
inc
jg
mov
or
jns
dec
jno
test
inc
xorl
xchg
push
jo
aas
pop
pop
pushw
or
das
adc
pop
pushf
xor
lahf
outsb
push
rorb
cmpsl
jle
daa
xchg
mov
cmp
dec
loopne
clc
xorl
cs
negl
mov
mov
fdivl
jg
imul
add
or
pop
mov
lds
xor
xchg
cmp
cwtl
jmp
inc
mov
adc
xchg
jg
fldl
inc
shll
fcoms
dec
sub
cmpsb
mov
cmp
arpl
dec
cmpsb
push
call
bound
mov
sub
stos
sub
loop
add
xchg
iret
adc
call
push
test
dec
insl
push
jp
cmpsb
mov
adc
aaa
jp
lret
adc
iret
pop
pop
nop
and
enter
mov
mov
imul
repnz
andl
inc
dec
xor
mov
sbb
sbbl
mov
or
mov
fisubs
jecxz
in
loope
xchg
lcall
push
mov
loop
mov
pusha
mov
add
lds
cmp
mov
fsubl
mov
repz
inc
inc
dec
jns
inc
pop
mov
push
pushf
adc
pop
insl
xchg
js
sbb
xor
jp
mov
sarl
rcrb
ja
insl
into
inc
and
push
mov
fcoml
xchg
mov
mov
inc
mov
push
call
sbb
clc
or
mov
cmpsb
in
xlat
fwait
pop
dec
ret
sub
lahf
popf
sarb
mov
in
lret
lods
dec
adcl
mov
jg
inc
loopne
fistps
push
js
jns
shrb
and
adc
jl
push
sbb
imull
mov
aam
fdivrs
or
fstpt
jnp
jns
sti
mov
jmp
cmp
sbb
mov
push
in
pop
pop
mov
movsl
add
js
jmp
adc
jecxz
add
sbb
sbb
ljmp
repz
add
mov
mov
sarb
add
in
push
ficoms
int
push
cli
imul
loop
mov
jmp
dec
cmpsb
addr16
push
push
icebp
fnstsw
shlb
sub
sbb
test
ja
test
ds
jo
imul
xor
fdivs
push
or
repz
mov
or
cmp
fs
xchg
pop
imul
js
inc
je
xchg
jne
popf
popa
sti
jmp
sub
sub
movsl
icebp
and
iret
mov
test
cmp
and
cmp
push
fcoms
fildll
jne
cwtl
out
mov
jo
xor
shlb
fnsave
push
lods
mov
adc
push
dec
or
test
fnstcw
jnp
sub
pop
xchg
popf
pop
sbb
or
loope
stos
sbb
cmp
stos
xor
dec
mov
jmp
or
mov
out
test
jp
fstp
lds
cli
mov
jle
inc
xchg
pop
cmp
jle
mov
jg
pop
adc
push
mov
jns
lahf
insl
mov
aaa
xchg
mov
scas
ljmpw
pop
jmp
insl
inc
pop
scas
popa
add
jle
xlat
xchg
mov
mov
aaa
sub
jl
push
xchg
xchg
push
xor
mov
stc
rol
repnz
out
mov
dec
dec
mov
ljmp
or
stc
lods
movzbl
push
sub
fidivrs
popa
push
pop
jmp
inc
sahf
fisttpl
fistpl
mov
mov
sbb
popa
popf
call
push
xchg
nop
jg
xor
add
aaa
rcrb
jmp
adc
jl
cmp
aam
scas
aad
push
lret
jge
jns
ret
xchg
xchg
imul
or
xor
dec
imul
add
mov
mov
mov
pusha
sub
int
nop
movsb
mov
jmp
lds
rclb
dec
clc
into
popa
aaa
shrb
cld
aad
xor
ja
ja
or
sub
popa
dec
fildll
xchg
notb
aas
or
into
je
push
in
push
arpl
or
push
jecxz
outsb
out
les
mov
bound
mov
jno
sarl
mov
pop
pop
cmp
cmp
mov
add
xor
sub
push
ds
jnp
dec
sub
ljmp
ja
jle
scas
daa
pop
repz
mov
fadd
pop
inc
stos
arpl
or
push
cli
std
lea
mov
jle
xor
loopne
fsubs
pop
mov
mov
add
and
out
or
dec
movsb
pop
push
pushf
icebp
pop
sbb
push
xor
pop
mov
aad
mov
sbb
aaa
mov
push
out
push
inc
sbb
shr
push
sbb
popa
pop
jl
and
mov
pop
mov
cmpsl
lods
mov
fimull
or
and
imul
test
fwait
std
int3
mov
add
cld
jae
cmp
fistl
in
cwtl
push
adc
sbb
mov
jmp
push
int3
sbb
sahf
aas
in
mov
pop
popa
scas
psrad
ljmp
sub
push
dec
data16
push
roll
inc
mov
mov
inc
xchg
jmp
xlat
fcoms
fwait
xchg
jcxz
ljmp
and
lret
dec
imul
lea
dec
adc
addr16
xor
fstp
fisubrs
bound
adc
mov
js
test
add
and
dec
xchg
lds
dec
out
xchg
lret
test
test
jo
fistps
or
cli
and
lret
adc
in
sub
je
jae
rcrb
lea
repnz
mov
fsubr
repz
negb
not
loopne
loopne
adc
dec
lret
pop
jns
mull
cltd
repz
add
sahf
lods
or
out
mov
mov
mov
pusha
inc
jns
push
pop
lds
push
and
out
int
inc
pop
out
out
push
sub
mov
cwtl
pop
mov
in
jo
daa
jns
lret
sbb
rcll
inc
push
dec
cmp
not
xor
jmp
dec
sahf
je
imul
or
cld
mov
cmpsb
xor
lret
pop
sbb
sub
jnp
rcrl
shll
jnp
pop
jns
icebp
push
push
mov
push
lret
pop
add
out
mov
inc
inc
adc
add
xchg
xchg
push
cmp
testl
mov
pusha
dec
push
mov
sbb
lea
rcll
mov
movsl
lods
sbb
ret
add
push
aam
in
into
dec
nop
or
shl
stc
loopne
or
scas
rcll
aas
cwtl
mov
push
cli
hlt
ss
sbb
lret
call
add
mov
add
or
stos
xchg
fucom
adc
call
sub
shrl
aad
fbstp
in
mov
and
js
inc
xchg
mov
xor
iret
sahf
orb
stos
mov
and
adc
xlat
adc
imul
cmp
jecxz
jp
adc
mov
xchg
xchg
push
mov
out
mov
jge
xor
movl
cmpsl
into
dec
mov
clc
adc
jb
leave
add
out
mov
mov
and
mov
loopne
pop
mov
push
add
fwait
push
xor
aad
lods
xlat
imul
pop
shlb
cmpsb
pop
mov
fcmovbe
push
and
clc
jge
insb
fcomps
or
cmp
sub
fsubrl
js
dec
in
pop
pushf
sub
pop
call
insb
fcomps
or
cmp
sub
fsubrl
js
dec
in
pop
pushf
sub
pop
call
insb
fcomps
lods
cwtl
fsubrl
js
dec
in
pop
pushf
sub
pop
call
insb
fcomps
or
cmp
sub
fsubrl
rclb
in
das
in
mov
fsub
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
stos
call
rcr
test
out
cwtl
xor
popa
jb
dec
popa
pop
xor
popa
cmp
sbb
sbb
call
rcr
test
mov
jnp
popa
js
dec
sbbl
and
adc
add
call
enter
test
mov
jno
push
cmp
outsb
insb
bound
outsl
andl
push
mov
jmp
test
mov
push
fdiv
call
rcll
mov
dec
adc
mov
dec
lea
jbe
std
mov
dec
jl
loope
cwtl
sbb
pop
jmp
mov
pop
jae
sahf
jns
dec
mov
add
test
aam
gs
in
xor
dec
mov
cmpl
mov
fcoms
call
pop
mov
mov
loope
popa
push
sbb
sahf
insl
inc
mov
pop
fwait
jnp
sub
loope
sahf
jbe
rorb
sub
jno
stos
adc
cmp
xor
or
out
call
fsubs
mov
js
dec
pop
pop
sub
cmp
adc
sbb
call
movsl
cltd
aad
int3
int3
xchg
in
in
in
add
sbb
sub
inc
jg
jp
jge
test
xchg
mov
ret
mov
std
ffreep
mov
or
xor
push
dec
push
scas
popa
insl
add
shrl
leave
lcall
jno
popa
js
dec
inc
pop
xor
and
adc
add
icebp
call
rcr
test
mov
jno
popa
js
dec
inc
pop
xor
and
adc
add
icebp
call
test
cmp
jl
js
scas
cmp
lea
push
sbb
lods
in
pushf
mov
test
push
sahf
add
mov
or
in
arpl
inc
push
les
push
pop
jge
mov
fsubrs
fcmove
sti
sbb
add
push
push
jl
push
adc
jg
sahf
push
cld
dec
inc
mov
cmp
jbe
lods
push
sbb
sti
data16
test
sbb
pusha
push
lock
jmp
jnp
add
popf
ja
fldcw
out
jp
fcmovbe
jbe
aas
sub
addr16
fwait
push
xchg
fstl
or
pusha
dec
dec
pop
dec
mov
je
add
sti
xlat
call
out
arpl
in
rclb
aaa
xchg
fstpt
or
outsb
and
mov
int
pop
mov
addr16
fidivrs
and
add
or
adc
faddp
sbb
icebp
cmc
sbb
fildll
xor
add
ss
push
lsl
test
roll
cmc
add
pop
dec
stos
pop
shlb
test
or
sti
sahf
andb
lret
push
je
lds
shlb
out
je
outsb
nop
int
dec
sub
xchg
mov
mov
iret
movsb
mov
xchg
mov
mov
jl
inc
jo
sbb
dec
pop
lods
nop
cmp
xchg
push
xor
mov
enter
outsb
clc
xchg
push
sbb
cmpsb
pop
add
dec
pop
sub
dec
mov
sub
xor
lods
lock
add
push
cmp
fisttps
pop
inc
fs
xor
push
jg
pop
dec
cmp
in
add
cmc
stos
mov
inc
mov
scas
mov
mov
lcall
push
pop
pusha
or
pop
jecxz
nop
and
dec
inc
mov
test
jno
lods
pop
ljmp
clc
sub
ja
dec
add
jecxz
inc
cmpsb
mov
inc
test
dec
cmp
pop
mov
mov
aad
jmp
mov
lods
shld
jmp
mov
xor
hlt
cmc
cmp
cmpsb
loopne
add
sub
test
cmp
test
ret
push
aam
pop
jmp
adc
inc
outsb
mov
jecxz
pop
dec
sub
push
xchg
cli
jae
jmp
sbb
sbb
push
nop
popf
cmpsb
inc
dec
sbb
and
fcmovb
or
mov
xchg
or
dec
lods
inc
decb
pop
mov
mov
lcall
pop
xchg
dec
mov
xchg
push
nop
ret
leave
xchg
add
and
dec
sar
popf
into
imul
sub
mov
xor
and
pop
adc
xorb
jnp
push
fidivl
stc
vmovntps
add
xlat
jge
lea
pusha
aaa
dec
dec
repz
shll
into
cmp
mov
pop
adc
mov
je
adc
std
inc
xchg
mov
gs
pop
hlt
push
adcl
mov
ret
iret
cltd
fs
sub
pusha
cld
lcall
xchg
push
sarl
sub
fidivs
and
pop
mov
insl
mov
ljmp
icebp
repz
pop
roll
mov
mov
add
addr16
loope
in
iret
jg
shll
xor
movsb
aad
mov
adc
adc
xor
pop
jo
jo
mov
cmpsl
fdivl
mov
in
mov
int
in
adc
stos
xor
imulb
jle,pt
sarb
mov
push
arpl
sti
inc
into
inc
sbb
jno
bound
add
adc
xor
push
test
in
mov
loope
and
gs
mov
shll
xor
dec
out
cmp
sub
fmull
hlt
ds
or
ret
stos
mov
lcallw
out
push
sti
and
pop
daa
insl
repnz
inc
pop
push
add
mov
and
out
sbb
adc
das
mov
mov
add
adc
dec
icebp
cltd
jg
sbb
push
in
jecxz
fcoms
jle
and
aaa
nop
and
movsb
mov
clc
fs
add
pushf
fisttps
das
movsb
mov
push
sbb
rcl
add
push
cmp
jb
cmpsl
jp
xlat
xor
lods
push
test
sub
hlt
push
leave
or
cmp
pushf
movsb
xor
int3
loope
jp
loop
add
js
or
call
sahf
jbe
lret
jp
mov
sbbb
push
mov
mov
push
mov
pop
call
adc
in
lock
addr16
fisttpl
scas
fdivrl
pop
mov
mov
leave
add
jp
dec
xchg
icebp
mov
add
lcall
fcompl
xchg
mov
cli
cmp
sub
dec
fwait
repnz
repnz
bound
xchg
movsb
test
rolb
jecxz
cmc
jecxz
cltd
andl
aas
xchg
push
fsubrl
pop
jecxz
mov
push
dec
int
fisubs
inc
mov
dec
imul
fwait
pop
pop
popf
sbb
sbb
jmp
in
mov
scas
jge
iret
outsl
movsl
stos
in
xchg
pop
sbb
and
push
or
and
sbb
fiadds
xchg
or
sub
out
int
insb
dec
not
inc
out
int
bound
sub
enter
sbb
ss
fiaddl
push
push
dec
loope
mov
fs
sbb
mov
sahf
fninit
push
pop
hlt
xchg
inc
les
fadds
mov
lcall
xchg
sub
mov
ss
jne
xchg
pop
dec
shll
ror
pop
into
mulb
mov
inc
and
xchg
lret
jno
add
sti
rclb
adc
dec
mov
pop
mov
scas
xchg
dec
or
incb
lahf
xchg
int3
aad
psubd
jle
mov
add
or
xchg
xor
std
test
or
insl
push
cwtl
dec
cmp
inc
mov
or
stos
ds
lock
xchg
es
push
inc
xchg
or
cli
dec
mov
mov
jl
pop
pop
fsts
sbb
jne
ret
in
popf
sub
andl
ds
cmp
mov
lods
jmp
and
lods
xor
imul
pop
movsb
loop
imul
fwait
stc
cwtl
in
adc
nop
ret
xor
sbb
pop
cmp
xor
sbb
cmc
leave
es
and
jne
roll
pusha
cmpsl
xchg
xchg
cwtl
fs
jmp
out
test
mov
popf
mov
push
cmp
cmpsb
jo
dec
inc
xor
push
xor
into
jle
imul
in
pop
or
mov
push
sbb
adc
sbb
pop
xor
nop
mov
out
notl
pop
mov
or
push
or
outsb
and
cli
lea
out
push
pop
push
pop
xor
sbb
fisubl
jle
pop
mov
push
jae
dec
fld
lock
pusha
data16
ds
mov
lods
dec
lock
mov
push
jecxz
imul
add
rcll
inc
pop
cmp
or
arpl
inc
xor
ficompl
das
xor
ds
ror
mov
sub
dec
inc
sbb
aad
mulb
lods
fcoml
iret
cmp
dec
mov
sbb
bound
dec
out
test
aaa
movsl
aaa
jne
mov
fldl
cld
xchg
sbb
mov
rcll
fwait
out
int
mov
clc
sub
xor
pop
and
pop
and
mov
or
add
adc
jbe
inc
in
call
ja
mov
and
jmp
dec
into
push
push
mov
mov
es
push
add
cmp
xchg
jns
mov
cmpsl
cwtl
dec
stc
sub
dec
push
or
xchg
setno
testl
and
xor
fildl
jne
decb
shll
push
mov
inc
lahf
cmpsb
aas
push
xchg
daa
sahf
arpl
and
jno
out
lcall
aas
leave
mov
mov
inc
imul
and
inc
jg
adc
imul
hlt
xchg
ja
xor
ss
xor
push
out
add
push
out
lret
out
pop
mov
dec
pop
jmp
ss
lret
pop
and
pop
adc
sbb
test
shll
jno
in
adc
push
sub
fldl
jle
testl
mov
pushf
mov
dec
pop
std
lahf
daa
cli
pop
push
dec
pop
aas
imul
fs
dec
ja
imul
into
ja
mov
jg
ja
out
iret
fistl
sti
mov
mov
jae
jmp
test
jecxz
add
mov
punpckhdq
aad
outsb
mov
push
loop
jo
sub
inc
daa
lods
aam
scas
loopne
mov
xchg
mov
out
push
fwait
sarl
lret
cmp
std
lods
or
pop
adc
or
dec
xor
dec
imulb
sub
dec
je
adc
xor
ljmp
sub
addb
lea
pop
stos
dec
mov
cli
push
pop
cmp
add
jmp
push
push
idiv
or
lret
inc
sub
mov
cmp
jae
pusha
int3
lods
xor
pop
into
lock
hlt
jp
lret
pop
shll
insl
sbb
xchg
jle
mov
mov
cwtl
mov
add
jecxz
loope
pop
dec
inc
cmp
xchg
ret
pop
mov
test
sub
mov
imul
call
cmp
add
mov
insl
sahf
cwtl
jmp
les
push
push
iret
cmp
std
jecxz
clc
mov
cmpsb
outsl
bound
xchg
mov
inc
popf
mov
jae
add
or
mov
add
sahf
jb
xchg
out
imul
xchg
jmp
adc
inc
popa
or
repz
lock
sub
js
mov
scas
push
je
rcrl
aas
sbb
pushf
mov
scas
xchg
pushf
sti
jbe
dec
lods
adc
jl
mov
fdivrs
aas
cmp
jb
xchg
mov
lods
push
pop
sbb
hlt
pop
loopne
dec
or
mov
mov
movsl
fistpll
in
sti
movsb
jno
and
and
inc
xor
cli
pusha
repz
jne
mov
daa
iret
rcl
adc
fistl
cmp
fildl
xor
push
or
pop
flds
mov
add
arpl
outsl
fdivrp
cmpsl
xor
push
shrl
les
sbb
sbb
mov
xchg
xor
faddl
add
inc
in
sbb
jbe
adc
pop
insl
pop
sbb
rcrl
mov
clc
push
shl
imul
and
push
adc
xchg
stos
or
push
pop
test
sbb
ret
mov
cltd
mov
add
push
lods
inc
lock
jae
je
push
aaa
pop
push
loopne
cmp
jae
ds
push
movsl
adc
jno
ljmp
bound
call
and
repnz
iret
mov
push
inc
sbb
dec
outsb
shll
pop
xchg
mov
cmp
mul
jae
mov
pop
fisubrs
call
jne
mov
push
push
imul
hlt
pop
sti
in
or
mov
dec
sahf
imul
sahf
xchg
inc
mov
insb
sbb
rorb
add
xchg
out
pusha
hlt
popf
loope
inc
xchg
bound
mov
and
xchg
xchg
add
sbb
cwtl
enter
popl
inc
cs
mov
movsb
faddl
adc
loop
aaa
popf
dec
shlb
cmc
push
cmp
mov
insl
pop
cli
imul
dec
xor
orl
sbb
push
aaa
push
jp
push
adc
xor
inc
test
insb
pop
cmp
ja
fiaddl
sub
mov
rorl
jge
stc
push
mov
cmp
insl
jnp
push
push
outsl
sub
fs
xor
rcll
in
cmpsb
mov
sub
movsl
in
out
cmp
in
xchg
mov
outsb
in
lcall
and
mov
mov
repz
dec
pop
loopne
mov
call
xor
pop
xchg
add
movsl
and
sub
and
lods
push
mov
mov
fldenv
mov
pop
sbb
jp
pop
aad
aaa
sub
test
pusha
aaa
add
jge
call
xor
ds
mov
mov
out
jne
lahf
pop
mov
addr16
adcl
jmp
or
and
jge
cmp
pop
jecxz
mov
in
js
pop
loopne
inc
add
std
mov
jl
inc
es
mov
push
pop
insb
lahf
mov
sbb
daa
out
imul
cwtl
lods
jns
outsb
pop
cmp
out
arpl
mov
nop
lcall
mov
ret
dec
xor
jle
sbb
lahf
inc
cmp
mov
nop
outsl
xchg
pusha
xlat
mul
ja
mov
jge
fnstenv
pop
sub
pop
daa
out
push
lods
adc
imul
jae
sbb
xchg
mov
add
cmpl
cmpl
iret
das
jle
add
fwait
inc
jb
addb
sarl
in
pop
sub
pop
cmpl
add
jb
pop
push
sbb
test
out
jae
push
out
outsb
inc
sub
push
xchg
push
sub
in
xor
scas
in
orl
sti
ret
sub
outsb
mov
dec
gs
scas
leave
cli
or
mov
adc
xor
outsb
cmp
push
in
xlat
dec
add
jle
outsb
out
or
pop
in
push
mov
cmp
cwtl
xchg
popa
and
in
push
dec
push
sbb
outsl
mov
fldln2
sub
inc
push
mov
sbb
fisubrs
jbe
mov
mov
sahf
or
jns
daa
push
xor
mov
mov
stos
call
and
out
std
sbb
sbbl
sub
neg
test
repz
cmpsl
out
and
mov
data16
push
lcall
popa
pusha
ds
xchg
iret
adc
mov
adc
sbbb
aam
push
sti
dec
loope
cmp
bound
pop
or
push
xchg
mov
jbe
outsl
sbb
and
add
sbbb
mov
dec
xchg
xchg
mov
in
ss
subb
ja
jmp
ret
and
insb
les
jge
jle
inc
repz
mov
fwait
mov
xor
clc
daa
pop
loope
aam
add
jnp
imul
xchg
adc
inc
lea
daa
psubsw
mov
mov
xor
arpl
pop
inc
inc
cwtl
arpl
adc
test
shrb
sub
inc
mov
mov
or
fisubrl
pushl
dec
jle
push
sub
xor
mov
inc
mov
pop
scas
add
cmp
aaa
lahf
idivl
cltd
out
cmp
lods
xchg
imul
sarl
pop
mov
sahf
pushf
imul
lret
ss
mov
int
push
mov
xchg
cmp
lret
sbb
mov
add
sar
lods
imul
pushf
int3
shr
inc
mov
pop
xlat
mov
push
fisttpll
and
lahf
mov
mov
out
adc
test
pop
out
incb
mov
sub
mov
sub
aas
stc
mov
movb
cli
inc
jmp
clc
sbb
mov
sar
imul
outsb
rorl
rolb
insb
push
inc
inc
jb
cmp
dec
repz
sub
or
mov
ja
xchg
pop
loop
xchg
sarl
in
cwtl
pop
jp
rolb
cmp
add
scas
lahf
sbb
lods
cmpl
xchg
insb
loop
insb
daa
pop
test
jmp
inc
mov
js
mov
mov
push
pop
rolb
pop
dec
inc
ficoml
sub
push
shl
inc
aaa
popf
jnp
insb
out
std
mov
into
sbb
cmp
mov
inc
mov
adc
xlat
fmuls
xchg
stos
xchg
cmp
cli
int3
or
jecxz
sbb
in
pop
int3
gs
insb
mov
shlb
push
xchg
mov
pushf
xchg
mov
out
pop
xor
push
mov
xor
mov
je
rorb
das
hlt
xor
test
pop
fisubs
dec
or
cwtl
pop
aas
inc
mov
test
test
fstp
test
mov
add
push
sbb
andb
rcrl
inc
or
jb
xchg
ss
jns
dec
jno
pop
xor
out
pop
mov
vcvtps2pd
jns
adc
mov
scas
ss
mull
add
sbb
popa
add
cli
cmp
js
jmp
jae
lds
mov
loope
fnstenv
sbb
push
es
pop
pop
add
and
aaa
hlt
jae
and
adc
push
fisttpll
test
mov
dec
scas
pushf
les
cwtl
aad
mov
push
dec
jo
rorl
aaa
test
push
js
xorl
dec
xor
adc
cmp
xchg
push
mov
mov
pusha
sub
inc
xchg
sbb
fwait
sti
push
pop
or
dec
lods
lret
jnp
push
adc
or
push
mov
xlat
repz
inc
rcl
std
inc
cltd
icebp
pop
mov
xchg
push
ljmp
dec
mov
mov
jnp
icebp
inc
jge
dec
mov
adc
test
fidivrl
pop
jmp
mov
mov
stos
in
mov
out
enter
sbb
jmp
inc
xchg
mov
imul
test
adc
into
add
mov
adc
jle
lea
xchg
stos
cmp
lret
stos
out
sarl
cmp
sbbb
dec
in
mov
pop
rcl
fstpt
psllq
dec
fcoml
jbe
dec
cmc
cmp
lods
pop
xor
in
int
xor
enter
lods
out
jecxz
inc
mov
sub
repnz
imul
jno
nop
pop
xor
fcmovbe
xchg
mov
dec
pushf
push
jecxz
lret
cs
mov
cmp
inc
xchg
mov
pop
fadd
fwait
mov
jp
call
xchg
loopne
fwait
xchg
hlt
xor
gs
mov
fnstcw
push
mov
lcall
ffree
imul
fstpl
cmp
mov
adc
ss
mov
or
xor
outsl
test
xchg
shl
jp
mov
ds
xor
outsl
test
notl
pop
sbb
lods
imul
imul
sub
xlat
cmp
mov
mov
ljmp
test
xor
sbb
sti
dec
xchg
jnp
xchg
loope
push
lcall
mov
pop
pop
int
pop
and
cmp
mov
jmp
jecxz
ljmp
inc
inc
dec
or
cld
pop
popa
enter
mov
inc
les
push
jo
int3
lods
adc
imull
adc
jmp
imul
out
pop
push
sub
inc
ljmp
les
hlt
insb
xchg
sbb
cmpb
scas
mov
pop
fdiv
sbb
push
dec
sbb
movsb
cmpsb
sub
jbe
xor
add
inc
push
jg
test
inc
add
popf
mov
ljmp
xchg
inc
pop
test
jns
sub
xchg
push
outsb
sub
adc
mov
hlt
leave
inc
dec
scas
in
push
mov
loop
xchg
lahf
sub
adc
mov
pop
pop
mov
fimuls
push
lea
pop
inc
dec
mov
jmp
and
cmp
jl
cmp
outsb
test
movsb
lea
xor
notb
cmp
out
push
inc
cld
push
push
mov
mov
or
out
sub
mov
sub
sti
adc
xchg
push
push
imul
cwtl
test
out
gs
push
pop
pop
sub
inc
int
jnp
cmp
es
jl
mov
dec
jbe
jne
repz
lods
push
xchg
out
addr16
outsb
pop
add
xchg
iret
add
jno
and
mov
adc
wbinvd
sub
pop
lahf
subb
add
scas
jg
int
fbstp
sub
lcall
and
shrb
xchg
movsb
xchg
mov
jbe
into
inc
ja
fldt
imul
mov
mov
das
xchg
mov
lods
xor
xchg
rcrb
push
inc
dec
adc
xor
sbb
inc
fwait
test
add
repz
enter
xlat
les
push
sbb
push
add
aad
daa
mov
addr16
jp
inc
adc
scas
mov
push
js
adc
ds
adc
push
lods
pushf
in
inc
icebp
js
popa
jns
jge
or
dec
bound
int
cmp
add
test
xchg
mov
orb
rcrb
idiv
mov
test
mov
jno
popa
js
dec
inc
pop
xor
and
adc
add
icebp
call
rcr
test
mov
jno
popa
js
dec
inc
pop
xor
and
adc
add
icebp
call
rcr
test
mov
jno
popa
js
dec
inc
pop
xor
and
sbb
call
rcr
test
mov
mov
sar
dec
inc
das
inc
mov
out
test
mov
lods
mov
sub
sbb
dec
gs
jne
test
mov
enter
sub
sbb
dec
daa
pop
jne
test
mov
enter
sub
ss
push
pop
ss
test
in
add
ss
aas
and
ljmp
mov
subb
insl
sbb
jge
adc
sub
jecxz
mov
in
push
ljmp
insl
mov
push
fnsave
xchg
adc
mov
jmp
sbb
clc
push
ljmp
icebp
xchg
sub
nop
mov
mov
call
or
fisubrs
jns
fidivrl
gs
das
adc
push
gs
push
and
ror
fnstenv
stc
les
ficoml
test
push
adc
dec
adc
push
adc
lock
jns
dec
jno
je
test
mov
enter
sub
sbb
dec
gs
sbb
ljmp
test
cltd
movsl
imul
jae
and
es
or
stos
test
xchg
fsubs
xchg
mov
xchg
fdiv
dec
jge
pusha
dec
inc
pop
pop
or
add
ror
loope
cltd
shr
enter
sub
sbb
dec
gs
jne
test
mov
enter
sub
sbb
dec
gs
jne
test
repnz
push
imul
dec
dec
lcall
push
mov
rorl
mov
movd
decb
mov
adc
pop
and
push
dec
add
in
jns
adc
lcall
test
cli
and
pop
mov
mov
jp
gs
and
sub
std
mov
cmp
and
dec
ret
aas
cmp
loope
push
fcompl
lret
lods
pop
cld
call
sbb
sarb
or
jecxz
in
xchg
loop
inc
xor
add
insb
cmp
movl
dec
pop
jg
and
pop
mov
add
shlb
sub
iret
inc
add
je
xchg
mov
ja
imul
jge
xor
push
cmp
idivb
test
dec
push
sbb
outsl
xor
aad
push
xchg
dec
inc
push
cmp
dec
push
cli
sub
cmp
or
filds
cmpsb
lret
adc
xor
ror
jne
mov
mov
in
mov
push
ficomps
pop
idivl
mov
loop
leave
stos
pop
hlt
xchg
adc
inc
cwtl
scas
push
and
sbb
mov
mov
dec
push
add
adc
xchg
jnp
loopne
push
mov
push
mov
inc
test
out
mov
adc
lret
adc
bound
mov
js
xchg
mov
out
and
push
mov
push
mov
daa
int3
mov
add
mov
pusha
push
addr16
push
lret
mov
les
scas
cwtd
rsm
inc
enter
xor
inc
adcb
mov
mov
leave
fdivrl
stos
adc
int
mov
movl
xchg
test
xchg
inc
sbb
cltd
out
mov
nop
xchg
pop
xor
xor
into
arpl
pop
arpl
fwait
pop
mov
movsb
dec
bound
icebp
cltd
jge
daa
movsl
jne
in
or
in
fists
inc
push
add
fadds
popf
std
mov
xchg
shlb
cmp
xchg
push
mov
mov
inc
and
movsb
test
ds
mov
cmp
js
xchg
stos
mov
or
sbb
jns
arpl
call
xchg
mov
xchg
add
and
jp
xorb
xlat
and
mov
cwtl
pusha
rcrb
and
ss
or
pop
das
loopne
dec
xor
sbb
incb
mov
roll
out
inc
sbb
dec
dec
xchg
jnp
mov
dec
push
mov
xor
and
dec
prefetch
iret
and
jbe
jl
out
cld
adc
dec
xlat
fwait
ljmp
mov
or
pop
xchg
or
mov
inc
xchg
pop
cmpb
out
insb
xchg
and
movl
push
sar
subl
mov
es
movsl
or
mov
rorb
push
xor
push
xchg
lcall
in
in
mov
sbb
xorb
iret
repz
jmp
push
sbb
cmp
jbe
fwait
test
push
loope
push
aaa
jmp
cmp
repnz
orl
mov
test
mov
pop
outsb
cmpsl
jmp
in
test
or
mov
cmp
mov
mov
pop
pusha
mov
daa
stos
sbb
test
cwtl
pop
jno
je
mov
inc
push
daa
and
int3
xlat
pop
mov
hlt
fsts
adcl
sub
arpl
lahf
xlat
mull
add
rorb
sub
js
ss
add
movsl
xor
push
cmp
sub
outsl
mov
pop
lcall
testb
inc
cmp
adc
sbb
push
pop
mov
mov
sbb
push
jp
jge
adc
rorb
or
jmp
dec
mulb
add
fstl
inc
sbb
xor
xchg
cmp
jno
bound
xlat
fs
out
xchg
loope
cltd
dec
rcl
bswap
mov
cmc
stos
push
fisttps
das
xlat
fidivl
jmp
fucom
push
repnz
inc
dec
mov
push
int3
sbb
mov
or
sti
adc
add
and
mov
push
mov
xchg
push
das
xchg
into
pop
fldl
inc
test
inc
and
vpsrad
gs
jnp
jnp
into
adc
insb
inc
lea
test
cwtl
dec
aam
jg
mov
sub
int
mov
jnp
dec
push
scas
xchg
mov
fcomps
adc
rorb
lcall
lret
sbbl
dec
stc
pop
xlat
movsb
mov
lock
insl
jnp
mov
sub
mov
xor
pusha
leave
outsl
je
sub
xor
push
movsb
mov
jbe
movsb
and
call
sbb
in
xchg
int
mov
int
shrb
icebp
jp
pop
lahf
out
sbb
rcll
pop
or
sub
jecxz
or
fucomp
sbb
xor
add
and
mov
cmp
push
inc
mov
mov
data16
arpl
test
pop
sub
scas
push
out
repnz
sub
cmp
push
out
sbb
push
sub
adc
or
mov
dec
out
inc
xchg
gs
adc
out
push
cmc
add
loop
mov
frstor
and
lcall
ds
add
dec
dec
pop
push
dec
push
popa
ja
out
sbb
jbe
xor
xchg
cld
ret
sbb
xchg
leave
and
push
and
adc
enter
add
test
or
lret
arpl
push
icebp
adc
mov
xchg
and
in
std
dec
sub
icebp
cld
lret
sub
pushf
dec
lods
pop
mov
xchg
jb
jmp
ss
sbb
ja
push
mov
xchg
jns
adc
jge
outsl
adc
ret
aas
insb
cli
scas
adc
roll
lds
lret
mov
in
cli
stos
mov
enter
pop
jbe
pusha
cmp
mov
pop
rclb
xor
ja
ret
mov
jle
lea
aas
int
sahf
adc
enter
or
xor
dec
rcrl
mov
push
data16
mov
xchg
fildll
and
sbb
push
mov
or
aam
fisttps
popa
cli
lock
pop
sub
push
out
imul
inc
inc
xor
outsb
loop
sub
sti
push
lods
sub
loope
cli
pusha
es
fnsave
add
pop
fdiv
cmp
or
jg
push
or
repz
rol
hlt
inc
xorb
leave
push
lds
cmpsl
cmp
jp
imul
pop
sub
icebp
shl
scas
lods
xor
push
jle
daa
push
jmp
dec
sbb
inc
cli
and
or
gs
testb
insb
xor
testb
decb
jle
test
gs
xchg
xor
and
fwait
repnz
shll
imul
cltd
jg
clc
jae
dec
push
sub
ss
mov
push
and
add
cld
mov
std
arpl
cmp
mov
xchg
enter
sub
sbb
icebp
fnstcw
jmp
sahf
mov
pop
add
lock
inc
add
cmp
adc
inc
mov
fisubrs
jb
add
jne
push
jo
sbb
cli
add
dec
outsb
push
pop
fistpll
mov
lods
shlb
ret
add
inc
mov
sub
cmp
hlt
cmpsb
jnp
popa
das
cmp
push
aaa
movsl
or
xchg
dec
popa
push
jp
rcll
sub
lret
mov
loope
add
or
dec
mov
jbe
jmp
push
push
daa
and
mov
repnz
das
fisttpl
pop
iret
mov
das
inc
and
fcoml
push
out
inc
adc
adc
adcb
mov
inc
fwait
push
lcall
insl
xor
std
std
push
fadd
jge
mov
push
les
movsl
jb
xchg
and
pop
mov
or
mov
inc
sub
or
int
divl
adc
aad
and
fsubrp
fistpll
xchg
cs
aaa
fsubl
rorb
fstpt
and
cmp
mov
in
daa
bound
sub
mov
pusha
sub
fists
lock
cltd
add
test
dec
cli
fcmovnbe
je
les
out
mov
lea
jb
in
pushf
mov
pushf
cmpb
pop
orl
inc
or
mov
call
dec
push
mov
test
xchg
out
out
insb
push
mov
push
pop
pop
shll
push
pop
mov
shl
les
or
inc
out
insl
jle
xchg
jecxz
sbb
inc
and
xchg
stc
fchs
stc
gs
in
test
cmp
movsb
iret
nop
dec
mov
jecxz
jmp
cltd
mov
popf
dec
dec
iret
jle
dec
pop
test
push
xlat
mov
pop
fdivr
push
cld
mov
rorb
jge
scas
sbb
inc
outsb
mov
in
in
sbb
lea
push
adc
push
cmp
xchg
inc
fldenv
xchg
mov
xchg
or
sub
jae
iret
dec
fwait
aas
add
and
sbb
out
aas
jmp
out
inc
jb
mov
mov
ja
mov
xor
inc
add
jns
jnp
js
dec
stc
mov
cli
mov
fisubs
outsb
lods
add
push
cmp
xchg
jle
out
movsl
dec
test
f2xm1
or
mov
sbb
hlt
test
popa
outsb
dec
mov
aaa
mov
idivb
push
inc
jns
inc
jnp
jg
and
xor
arpl
fs
dec
sub
pop
dec
pushf
mov
bound
cmp
fnstenv
ret
ljmp
push
mov
mov
sub
push
cmpsb
jno
jb
pop
and
repnz
xor
lock
push
out
ret
cmp
jmp
pop
ja
mov
and
mov
jae
push
fisubs
or
fldl
lds
or
ljmp
inc
fs
or
dec
fstps
mov
and
dec
push
fiadds
fdivr
ja
xchg
jge
mov
daa
xchg
mov
lds
ret
push
test
or
out
sub
cmpsb
pop
jle
cltd
mov
mov
lock
test
pop
rcrl
insl
pop
insl
xor
sbb
inc
mov
and
adc
out
add
je
jle
aad
inc
ds
jns
mov
daa
jecxz
cwtl
pusha
mov
shlb
subl
rorb
jbe
loope
push
mov
pop
adc
nop
cmpsb
or
out
push
int
add
sub
mov
adcb
adc
cmc
cs
xchg
mov
fisttpl
sub
mov
cmp
mov
xchg
dec
cmp
mov
jmp
sub
xchg
pop
lret
xchg
pop
add
lods
jmp
mov
pop
jl
sub
popf
mov
roll
movsb
inc
sbb
std
mov
cmp
test
inc
leave
xchg
mov
test
adc
adc
test
mov
dec
sub
xchg
sub
lock
ds
mov
fimull
repnz
mov
jae
movsl
sub
xchg
test
xor
rcrb
and
or
ds
lahf
push
dec
jmp
clc
aad
je
stc
add
mov
out
mov
test
sub
mov
push
popf
cltd
lds
mov
xchg
aam
js
and
jb
lret
xlat
movsb
mov
enter
into
push
mov
cmc
and
pop
mov
out
cmc
in
push
call
insl
pop
cmc
js
inc
push
or
lock
inc
push
adc
dec
mov
jl
xchg
adc
pop
cld
push
enter
test
fsubs
iret
dec
xor
jb
loopne
mov
in
jmp
xchg
ljmp
mov
in
out
inc
and
pusha
pop
shll
aam
fisubrs
loop
xor
rcl
aam
mov
shr
test
rcr
and
inc
mov
jge
int3
cmp
inc
cmp
xor
cmp
lds
xor
es
xchg
repz
or
inc
testb
testl
les
and
lea
ds
jge
add
adc
and
icebp
lret
lahf
inc
imul
ss
mov
mov
pop
jp
cmp
sbb
insl
lret
dec
data16
orb
cwtl
push
xchg
pop
inc
sbb
jne
subl
mov
push
and
push
aas
pop
cmp
rcr
inc
cwtl
dec
cltd
sub
or
pop
stos
cli
inc
dec
dec
cwtl
push
cwtl
mov
std
or
dec
dec
mov
sbb
push
hlt
imul
jmp
add
sbb
push
inc
jp
sar
aas
jl
or
pop
mov
push
jbe
out
and
mov
pushf
and
bound
lcall
or
inc
inc
add
int3
dec
ret
jo
sahf
pop
dec
aam
adc
rolb
cld
jl
pop
or
adc
inc
xchg
mov
iret
sub
mov
mov
daa
cmp
jne
mov
loop
cmp
xor
call
aam
dec
and
jecxz
dec
outsl
sbb
dec
dec
mov
leave
or
icebp
jmp
outsb
jmp
jp
scas
mov
inc
xchg
xor
rcrl
inc
and
cs
sub
add
and
add
push
push
push
sbb
mov
movsb
adc
pop
aam
pop
mov
mov
cmc
jnp
stc
in
lods
cmpsb
cltd
jge
mov
ja
das
mov
push
and
adc
cmc
mov
mov
mov
popf
dec
das
test
mov
mov
adc
sub
pop
xchg
decl
in
sub
sbb
pop
stc
cld
sub
adc
pushf
test
inc
pop
push
mov
fcoms
lret
pop
mov
inc
and
push
adc
sar
add
mov
outsb
xlat
xlat
out
pop
cmpsl
add
mov
jbe
xor
xor
sbb
cmpsb
inc
xchg
je
cltd
negb
ss
lret
popa
cmpb
emms
sbb
pop
xor
pop
xchg
inc
and
gs
mov
test
mov
mov
inc
das
gs
lods
loopne
jns
xchg
jb
xchg
push
mov
and
jecxz
jecxz
xor
pop
jns
insl
loop
les
jbe
ss
dec
xor
xchg
mov
in
in
xchg
roll
adc
in
mov
psubsb
or
subl
mov
mov
iret
cld
xor
cmp
cmp
lea
fnstcw
push
mov
inc
testb
sbb
push
repz
xor
mov
cmp
pop
shlb
popa
cmp
stos
insb
das
stos
shr
xchg
aas
sti
loope
mov
xchg
movsl
dec
jge
mov
sbb
cmpsb
xchg
xchg
sub
insb
dec
fdivl
into
mov
add
mov
insb
fdivs
mov
xor
int3
adc
jl
sbb
mov
mov
add
sbb
push
xchg
inc
test
ds
mov
xchg
add
and
scas
xchg
test
push
cld
gs
aaa
or
enter
stos
and
jle
pop
jl
or
jnp
xchg
inc
mov
addr16
mov
ret
add
fwait
outsb
or
ds
xor
loop
mov
xchg
jg
sub
jns
cwtl
push
fs
fisttpl
sarl
lock
call
divb
iret
aam
ja
mov
xchg
mov
add
popa
add
and
outsb
mov
sti
call
mov
movsb
push
adc
addr16
or
xor
mov
jne
xchg
lock
imul
sbb
insb
cld
aam
lcall
ljmp
in
xlat
push
mov
jmp
in
mulb
scas
push
adc
out
adc
cltd
push
hlt
jne
call
ds
lods
inc
sbb
mov
cmpsl
push
push
enter
mov
mov
pop
jmp
cld
and
adc
dec
addb
std
or
loop
or
inc
xchg
dec
xor
fisubs
ljmp
loope
or
xlat
enter
pop
fsubs
enter
repnz
inc
and
aaa
mov
jg
pop
mov
jp
repz
push
jecxz
daa
mov
dec
aaa
gs
jb
fbld
ds
or
lds
cmc
add
sub
mov
out
jg
rclb
into
push
mov
movsb
lods
jl
jno
dec
movsl
mov
pop
inc
inc
or
add
xor
outsb
adc
xchg
xchg
outsb
xchg
in
arpl
rcll
adc
imul
cmp
addr16
int
outsl
int
lcall
cwtl
das
pusha
sbb
rolb
fldl
std
inc
divb
sbb
sub
movsb
pop
es
mov
pop
push
push
fistpll
sbb
mov
adc
cmp
in
cmp
mov
imul
test
stos
xchg
cmp
shll
inc
or
movsl
pop
int3
test
inc
jns
shrl
popf
divl
cmp
faddp
xchg
in
or
adc
jno
das
dec
mov
ja
cmc
pop
pop
les
jmp
pop
fisubl
mov
jle
inc
fisttpl
or
nop
fistpll
sub
sbb
cmp
push
shll
mov
aas
ds
pop
pushl
out
inc
jecxz
cmp
in
ljmp
stos
mov
cmc
add
loope
mov
js
sbb
movsb
out
repz
stc
or
das
pusha
mov
rorl
pop
outsb
xor
data16
shl
sbb
icebp
and
call
lock
hlt
push
fisubrs
adc
pushf
xchg
and
clc
rcrl
orb
addr16
mov
ss
shll
add
loope
adc
pop
lcall
int
jl
lock
stos
pop
fcmovnb
xchg
dec
imul
testl
xchg
cs
dec
or
ja
movsb
dec
adc
add
ljmp
add
cli
xchg
pop
mov
jb
pop
shll
mov
sbb
mov
in
cmp
orl
jbe
or
mov
push
cs
xchg
xchg
in
or
mov
sub
int
sti
adc
xor
ds
xor
out
fwait
jbe
pop
push
fstps
pop
jne
cmpsb
lret
xchg
mov
arpl
jecxz
scas
xchg
int3
xor
push
loopne
je
test
and
sbb
push
cmpsb
jo
dec
jnp
outsl
sub
and
sarl
xchg
xchg
lds
movups
sahf
mov
aam
adc
sbb
lods
stos
sub
push
sti
mov
andl
mov
nop
nop
and
call
fnstsw
dec
mov
cmp
enter
mov
inc
bswap
inc
push
pop
lret
or
push
jno
ja
sbb
jo
outsl
popa
add
adc
clc
inc
jne
xor
or
push
pop
fildl
js
jae
pusha
inc
push
je
jecxz
sbb
mov
xor
nop
cmpsb
add
mov
push
aad
cltd
sub
and
popa
cmp
xchg
ja
fsubp
mov
stc
sub
cmp
das
add
jp
pop
daa
push
sti
aaa
mov
insb
and
repz
mov
adc
xchg
inc
addr16
xchg
xor
add
movsl
movsb
jnp
mov
arpl
mov
pop
jg
xchg
mov
cmp
dec
dec
jns
pop
cmp
in
sub
xchg
gs
icebp
adc
insl
pop
mov
cmovae
adc
frndint
clc
cmp
ja
lahf
in
imul
repz
mov
scas
push
loopne
adc
ja
jb
mov
pop
jno
and
xchg
xchg
stc
ret
xchg
and
xchg
shrb
addr16
adc
mov
dec
cmp
arpl
out
mov
fiaddl
jno
cmpsb
js
or
adc
subl
popf
jb
fcomp
dec
icebp
push
sub
negl
mov
cmp
out
push
push
adc
xchg
sub
cld
sarl
jne
jns
push
leave
repnz
test
mov
and
xchg
add
enter
sub
sbb
dec
gs
jne
test
mov
enter
sub
sbb
dec
gs
jne
test
mov
vandnps
in
cmc
sub
sbb
dec
gs
jne
test
mov
enter
sub
sbb
int
stos
mov
cmpsl
mov
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
inc
lock
stos
repnz
cvtdq2ps
mov
jecxz
scas
mov
pop
add
add
push
add
add
add
add
add
add
add
add
sbb
mov
add
sub
cltd
add
xchg
rolb
dec
add
add
add
add
cltd
add
cmp
add
add
add
xchg
mov
add
add
add
testb
add
or
add
add
add
xchg
add
add
add
add
add
add
add
int3
add
add
sub
cmpsl
add
add
add
add
add
icebp
add
add
add
and
mov
add
add
sub
add
add
push
add
add
loope
xchg
sub
add
add
dec
add
add
add
add
add
add
adc
jmp
add
add
add
add
add
add
daa
add
add
add
add
add
add
add
add
mov
add
push
sbb
xchg
mov
icebp
add
inc
add
add
ret
add
add
add
add
add
mov
insl
add
add
add
xchg
add
daa
add
add
add
add
add
sub
mov
add
add
mov
xchg
mov
add
add
push
add
add
add
add
add
cmpsl
add
mov
adc
mov
add
add
add
xchg
faddl
scas
add
sub
add
sub
push
add
add
add
add
dec
add
add
xchg
add
add
add
add
testl
and
push
add
add
and
leave
add
add
add
or
jb
or
mov
add
pop
add
add
popl
testl
insb
add
add
add
add
add
add
test
push
add
add
add
add
rolb
add
add
add
icebp
add
dec
add
add
inc
add
add
add
add
add
icebp
add
add
push
lock
add
add
dec
add
add
add
add
add
add
add
add
cmpsl
add
add
dec
add
add
add
cmp
add
add
dec
add
add
add
add
jns
sbb
xchg
push
add
add
add
add
add
insb
add
add
add
add
jno
aaa
add
add
add
add
add
push
add
add
add
add
add
movb
add
xchg
add
push
add
add
into
add
add
add
cmpsb
add
mov
add
add
lahf
add
add
add
js
inc
add
xchg
in
add
add
pop
add
add
add
add
icebp
add
addl
roll
add
add
gs
add
add
add
jp
sub
cmpsb
sbbb
in
mov
test
shl
sub
push
mov
jo
fwait
pop
fisttps
loop
sub
aaa
cmp
aad
je
lock
push
lret
lds
adcb
or
jbe
dec
jb
adc
push
mov
mov
inc
adc
mov
test
icebp
add
add
push
cmp
fdivs
iret
addr16
pop
cmp
movsl
or
jp
inc
shl
mov
popf
jno
in
fcoml
sub
sbb
lock
pop
aam
negb
cmp
rorl
xor
adcw
pop
rorl
inc
push
add
adc
xchg
add
pop
fildl
adc
push
subb
arpl
mov
arpl
outsl
out
inc
mov
daa
jne
add
loopne
mov
pusha
scas
mov
sub
inc
jmp
dec
fldt
testb
and
mov
mov
mov
into
in
mov
push
cmp
hlt
outsb
out
movsl
ja
rcrl
hlt
cmp
pushf
add
mov
mov
movsl
mov
mov
adc
xchg
xchg
cmpsb
insl
or
mov
mov
ret
imul
and
inc
and
and
pop
ss
mov
jae
adc
mov
xchg
sub
cmpsb
shrb
out
cltd
cmpsb
gs
sub
mov
ja
and
cli
add
repz
push
cmp
or
xor
das
lds
push
pop
notb
shlb
inc
out
add
fdivr
dec
and
add
cmp
push
inc
add
sti
lods
pop
das
push
repnz
jle
cmpsb
out
jecxz
mov
seto
imul
mov
cmc
aad
pop
std
pop
insl
insl
pop
push
sarl
push
adc
push
bound
jl
pushf
xor
subb
mov
mov
leave
or
lods
movsl
xchg
lret
in
in
popa
repz
sbb
aas
xlat
sub
test
jecxz
std
xchg
jns
push
in
fsubs
mov
lods
ja
ret
cmp
mov
sarl
aad
xor
bound
mov
insl
push
jbe
stos
insb
into
addr16
aas
test
pop
fmuls
xor
mov
popf
jns
scas
loopne
xchg
xor
aaa
pop
dec
push
pop
fadds
sbb
xor
inc
arpl
dec
or
push
es
pusha
mov
pop
jns
xorl
push
and
addr16
add
push
ja
lds
push
pop
aaa
mov
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
