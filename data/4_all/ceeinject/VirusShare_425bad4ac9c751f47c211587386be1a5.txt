call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
stos
mov
push
ret
test
filds
push
sti
add
repz
inc
rcll
and
push
sub
mulb
push
inc
cmpsb
xor
ja
repz
push
fcoml
push
rcll
cmpl
arpl
adc
paddd
stos
std
outsb
sbb
sbb
push
in
lret
andl
mov
test
setne
push
lock
dec
adc
cmp
jae
inc
daa
fucomp
clc
mov
push
xor
lods
push
adc
mov
mov
xchg
fwait
push
mov
out
dec
push
insl
cs
sbb
mov
mov
jle
mov
dec
fsts
dec
xchg
mov
inc
cmp
xor
xchg
xchg
cld
jae
and
aas
stos
mov
pop
adc
shlb
or
pop
pop
xor
add
adc
ret
aad
mov
arpl
jae
sub
add
lcall
sub
xchg
push
pop
aad
notb
cmpsb
xor
and
jne
and
inc
lahf
sub
xchg
jb
xchg
and
insl
enter
xchg
jp
popw
mov
cmpsb
push
cmpsl
aaa
stos
dec
fcompl
jb
push
loop
ss
xorl
xlat
adc
jge
outsl
pop
xchg
aaa
mov
mov
movsb
push
jecxz
out
jae
push
call
mov
xchg
and
push
mov
xchg
xchg
add
jbe
inc
rcll
es
mov
out
mulb
push
inc
cmpsb
xor
add
jbe
inc
rcll
es
mov
out
xor
stos
flds
out
repnz
and
mov
imul
loope
das
leave
shrb
lock
mov
fnstsw
out
or
fldl
and
xor
nop
fdivrs
and
push
inc
adc
hlt
and
outsl
popf
andb
and
cmp
movsb
lods
jnp
scas
call
fldl
fmull
stos
repnz
xchg
cs
and
imul
jmp
sbb
lahf
inc
sub
or
mov
iret
fsubl
out
test
mov
mov
and
pop
sbb
daa
pop
aaa
aad
popf
cmp
out
jp
aam
loopne
lea
ret
mov
dec
lretw
jl
jecxz
lret
test
clc
cmp
mov
in
or
sub
imul
mov
mov
mov
pop
dec
mov
xchg
scas
fs
mov
push
bound
mov
daa
or
and
push
psubq
add
sbb
or
insb
xchg
mov
adc
and
outsl
sbb
ja
sbb
mov
ret
add
aaa
push
mov
add
adc
mov
dec
popa
or
outsl
cmpsb
push
and
test
lds
sti
daa
mov
add
mov
rolb
out
in
repnz
cmpsb
lods
shr
ss
xchg
pop
cltd
leave
xchg
lods
enter
jns
lea
jge
or
ret
add
add
ja
pop
sbb
frstor
mov
cmp
dec
call
push
hlt
and
lea
rolb
in
inc
mov
and
data16
fdiv
nop
jecxz
push
ficoml
pop
sbb
enter
in
cmp
stos
mov
pop
inc
mov
jne
jns
in
sub
in
lea
movsb
inc
pop
movsb
std
push
outsb
iret
in
inc
jae
mov
mov
jb
inc
repz
jb
fdivrl
inc
fildl
gs
rclb
outsl
aam
rol
xor
fisttpl
popa
xor
movsb
sbb
int3
add
mov
movsl
aas
cmp
divb
mov
aam
pop
mov
inc
xor
mov
lock
mov
fisubrl
adc
sbb
dec
scas
dec
cmp
push
enter
jle
mov
loopne
inc
push
icebp
ss
jo
lret
test
aam
subl
je
xchg
std
cld
repnz
pushf
mov
mov
sub
lret
push
dec
sahf
jae
push
mov
stc
lahf
pop
and
or
int3
imul
cmc
sahf
mov
add
cmp
scas
test
cwtl
test
notb
lock
or
xor
adc
or
mov
int3
sbb
and
push
ret
in
sbb
and
je
jge
mov
popf
movsb
pop
fsubrl
ss
daa
imul
sub
fwait
aas
stos
sub
into
or
push
xor
out
int
mov
div
insb
clc
cmp
jle
xor
and
xchg
xor
not
fmul
pop
sub
and
or
cmc
es
in
decb
aaa
aas
jae
decl
xchg
or
sub
mov
sub
xchg
iret
out
sbb
dec
rcl
bound
lcall
cld
sub
out
lcall
mov
cmpsb
add
xor
jle
pop
lds
xchg
ds
insb
push
mov
sub
push
pushf
popf
pushf
jo
dec
bound
lea
mov
jae
lods
and
int
cltd
fadds
add
jae
cmp
notb
ljmp
aaa
roll
cmp
dec
test
jmp
pop
or
aas
xor
jnp
and
mov
sti
mull
jbe
add
in
xor
push
lock
leave
inc
int3
fwait
sub
sub
mov
int3
jp
cmp
mov
cmp
imul
cwtl
add
or
push
cmp
cs
lcall
loope
shll
fwait
sbb
fs
into
in
icebp
jns
pop
cld
jo
clc
cmp
cwtl
xchg
add
repz
cli
out
xor
adcb
adc
es
mov
repnz
cmpsb
idivb
scas
dec
insb
sbb
jne
lcall
sub
sbbb
int
lret
jg
inc
cmp
xor
push
push
pop
lods
sbbl
gs
pushf
mov
push
iret
int3
ret
pop
inc
rcll
mov
jns
in
insl
and
jb
movsl
cmp
loopne
cmp
lds
dec
mov
sbb
dec
or
sub
pop
test
push
jge
in
fst
js
mov
xor
xchg
outsl
sarl
dec
adc
outsl
lahf
dec
pop
sti
xchg
outsb
pushf
mov
add
cmp
andb
fs
fcoml
lock
inc
mov
sub
cld
and
adc
inc
push
jbe
adc
mov
xchg
add
shll
leave
mov
lods
jmp
xor
dec
add
lods
cmp
ljmp
xchg
idiv
push
rclb
loope
jnp
mov
rclb
xor
sub
xchg
mov
pop
movsb
std
sbb
cwtl
jl
rorb
test
fsubrs
add
mov
icebp
jmp
out
mov
mov
dec
jg
fildl
sub
insl
dec
mov
xchg
ss
insl
ljmp
sub
cmpsb
psubq
add
stos
stos
cmpsl
loope
ss
adc
rorl
or
mov
mov
xor
in
mov
outsb
lods
fs
mov
and
dec
push
ss
or
jae
push
jge
fiadds
aad
aad
mov
or
testl
sbb
das
addb
repz
in
or
inc
xchg
or
xchg
rolb
sub
fisubs
pop
jp
ds
js
pop
mov
cmpsl
dec
sub
ss
pop
stos
mov
outsb
adc
outsb
icebp
sti
pop
adc
pop
mov
data16
push
out
dec
gs
push
adc
mov
push
push
cmp
adc
sub
clc
fisubs
insb
imul
cmp
roll
pop
shll
inc
in
cwtl
fldcw
insl
shrb
xchg
lret
sbbl
sbb
pop
roll
out
cmp
loop
shr
pushf
mov
lock
scas
push
insl
in
test
or
xchg
xchg
adc
cmpsb
scas
movl
out
sbb
pop
repnz
push
mov
ljmp
sbb
inc
shlb
add
arpl
cmp
mul
lahf
or
or
rorl
lret
xor
loopne
sti
movsl
sarl
mov
daa
sub
dec
bound
or
pop
cmp
mov
dec
rclb
cltd
xchg
add
inc
mov
adc
scas
ds
push
mov
popa
cmp
adc
out
jns
inc
push
and
dec
nop
sbb
mov
mov
sbb
leave
sub
ds
and
sub
in
js
cwtl
or
jns
mov
cmpsb
pop
mov
in
popl
adc
or
jl
inc
or
push
mov
mov
xchg
and
dec
cs
adc
cmp
or
cmpsb
fsubl
sub
or
sub
mov
cwtl
movsl
lods
lahf
rcr
test
test
add
cli
sub
cmpb
aam
ljmp
outsb
inc
in
push
arpl
and
xor
mov
pop
or
jb
mov
adcl
inc
pushf
pop
xor
mov
daa
shl
pop
xchg
mov
mov
jge
clc
xchg
sub
lret
jne
jp
imul
outsl
inc
hlt
sub
inc
sub
sbb
fstps
enter
mov
cmp
lahf
mov
hlt
mov
jnp
repnz
push
xchg
pusha
stos
push
dec
or
adcl
into
fnstsw
inc
mov
pop
imul
add
or
ret
xor
mov
push
mov
sub
mov
out
loope
sub
xor
cwtl
inc
inc
adc
test
test
cwtl
mov
scas
stos
lds
and
or
jbe
dec
add
sbb
inc
mov
inc
mov
mov
mov
jmp
inc
sub
push
lahf
ljmp
insb
push
adc
cmp
inc
ret
mov
imul
lea
or
movsb
xchg
push
sarb
sbb
xor
pop
in
mov
fdiv
push
add
or
sbb
daa
leave
push
int3
ds
pop
sbb
dec
out
mov
adc
insb
xchg
in
out
jne
adc
arpl
pop
stc
jg
movsb
fidivs
dec
fsubrs
fistpll
cmp
sub
jge
xor
addl
dec
popa
hlt
enter
push
adc
ss
inc
mov
add
mov
sar
fildl
adc
or
xor
frstor
sbb
dec
push
push
dec
mov
shll
add
mov
xchg
vunpcklpd
test
or
rcrl
jns
sub
or
jp
mov
orb
and
pop
add
jmp
mov
cmp
cli
mov
mov
push
ror
iret
outsb
rorb
rcrl
adc
push
jnp
pop
pop
and
mov
push
push
and
mov
jnp
icebp
dec
pop
adc
mov
xchg
mov
aas
pop
cmpsb
mov
and
and
jle
decl
pop
mov
mov
orl
stos
scas
repz
xchg
dec
cld
mov
fcoml
addb
shll
stos
pop
addr16
mov
mov
in
xlat
and
pop
cwtl
mov
fsts
leave
repz
mov
push
push
scas
out
incb
push
or
push
inc
push
rclb
or
or
xchg
push
mov
sbb
lahf
js
fsubrl
cmp
orl
add
jbe
popa
jg
and
and
aas
leave
jle
pop
jo
cwtl
test
xchg
cmp
xchg
and
pop
int3
cltd
push
sbb
or
and
mov
lds
sub
pop
out
inc
daa
xor
cli
pop
push
add
fmull
icebp
or
xchg
sbb
aad
dec
add
xor
test
ret
fs
push
xor
scas
push
cs
aaa
loope
xor
mov
es
daa
mov
andl
pushl
dec
insl
ss
and
cmp
fdivs
fldenv
sbb
add
js
jns
daa
push
outsb
repz
cmp
lahf
adc
xchg
cmp
lods
loopne
push
es
pop
jne
lods
hlt
push
push
xorb
pop
adc
ljmp
xor
mov
lahf
roll
ret
test
jne
sub
jecxz
enter
cmp
xchg
or
add
sahf
flds
inc
in
mov
or
cs
inc
shl
pushf
push
popf
orb
or
xchg
movsb
fsubrl
xchg
push
push
xchg
cmc
fsubr
mov
cmpsb
lock
stos
repnz
sbb
push
loope
jae
inc
mov
xor
cmpsl
imul
out
shl
movsb
push
lods
cmpl
push
mov
adc
std
mov
jmp
dec
sahf
jo
sti
lahf
add
dec
fdivs
or
sub
xlat
pop
mov
lahf
mull
push
scas
xlat
rorl
lahf
rcl
dec
aam
xor
jecxz
cwtl
or
xchg
and
push
lods
insl
or
sbb
dec
test
jle
sbb
jmp
ret
enter
or
xorb
cmpsl
jo
cmp
aaa
fnstsw
push
pop
push
cmpsb
pop
lret
jp
jp
mov
xor
mov
loop
insl
jmp
dec
inc
or
cmc
rep
cmpsl
pushl
jne
cmc
cs
jae
xor
or
push
fimuls
sbb
lds
out
add
std
sbb
lods
outsl
lock
push
mov
stos
push
sbb
inc
pop
jmp
xlat
dec
mov
dec
btc
insl
cmpsb
xchg
and
lds
push
xor
nop
pop
mov
lods
adc
inc
cmpsl
icebp
adc
push
cmp
cmc
negb
fdivrl
xor
test
les
cld
or
lea
loopne
dec
fldcw
aaa
imul
push
adc
jb
ja
aad
dec
cmpsb
push
sti
adc
push
not
sub
and
roll
test
arpl
rclb
out
pop
mov
xchg
dec
jge
sub
es
fcompl
scas
jnp
cmpsb
mov
cmp
add
jnp
shll
lea
fs
or
les
xchg
adc
pusha
push
fsubrl
dec
out
jge
xor
jae
int
inc
daa
rcrl
fistpl
ja
push
adc
fstl
or
pop
lret
test
or
lds
movsl
xchg
sbb
mov
fisubrs
and
ret
inc
xchg
sub
dec
lahf
fstps
mov
mov
adc
repnz
syscall
in
out
incl
sbb
sti
sub
std
mov
shl
push
hlt
out
cli
jns
push
jne
and
push
xchg
iret
out
je
aas
push
cmp
test
mov
cmp
push
notb
in
cltd
loopne
daa
push
mov
mov
shrb
cli
cld
pop
sub
xchg
aad
lret
in
add
mov
mov
ret
mov
jns
cmc
xchg
or
cmc
cmp
cwtl
in
jne
mov
loopne
xchg
addr16
mov
icebp
test
fildl
orb
push
test
shrl
lret
repz
sub
lea
adc
fidivrs
in
mov
cwtl
daa
mov
jb
jg
mov
mov
mov
pop
in
out
jle
leave
andb
dec
xor
inc
lea
sub
and
inc
mov
mov
dec
imul
call
loopne
jnp
jg
cmc
pop
jne
lds
subb
loope
mov
int
mov
adc
aas
into
ret
cmp
jmp
fistpll
sbb
dec
movsl
mov
fisubl
xchg
pop
movsl
mov
inc
cwtl
loope
pushf
mov
shll
pop
addr16
push
cmp
test
mov
sub
xchg
mov
push
push
jp
inc
mov
push
pop
lret
ljmp
inc
add
lock
push
cmc
mov
mov
xlat
jne
xchg
jmp
xchg
push
dec
lret
or
mov
xchg
and
ds
fbstp
popa
popa
pop
aad
lret
jae
test
rcrl
push
or
mov
jmp
jbe
popf
je
mov
jnp
testl
push
inc
xor
or
andl
lret
jge
mov
fxch
mov
xor
enter
cltd
outsl
pop
sti
mov
fdivp
jnp
cltd
enter
add
outsl
and
xchg
adc
xchg
push
loope
dec
lahf
mov
xor
mov
psrlq
arpl
pop
test
shlb
test
adc
lea
shll
pushf
sbb
daa
insb
into
cld
inc
sub
and
or
sbb
std
adc
inc
jp
jmp
push
out
pop
jno
dec
aad
cmp
fistl
jmp
jo
ret
adc
inc
int
jno
arpl
jo
popl
das
mov
js
fs
or
int3
out
push
into
popf
jno
cld
iret
dec
fidivrl
add
mov
mov
and
pop
push
push
adc
shll
mov
push
jnp
ret
out
or
adc
cmp
mov
mov
mov
jg
popa
push
out
push
mov
frstor
pop
in
aas
mov
pop
xchg
iret
dec
pop
into
sbb
cs
test
or
aas
shll
jnp
fnsave
hlt
aad
push
loope
mov
sbb
fsubrl
fdivl
lods
xchg
dec
xlat
push
pop
popa
mov
sahf
push
xchg
cmp
enter
or
jecxz
inc
or
or
addl
push
adc
imul
sub
arpl
popl
lcall
out
mov
ss
into
jb
dec
aam
mov
mov
sbb
pop
gs
iret
and
mov
pop
push
nop
push
or
and
inc
cvtps2pd
sbb
push
insl
out
movsb
cmp
push
mov
push
cmp
mov
push
jb
cmc
std
xchg
das
test
push
aad
and
hlt
xchg
mov
sti
xchg
adcl
insl
adc
lcall
jl
test
clc
pushf
jl
lahf
icebp
mov
cwtl
sub
lods
xchg
jnp
push
mov
inc
and
fistps
pop
rol
pusha
std
sub
and
sbb
sub
popa
aad
and
pop
xchg
mov
or
cwtl
push
insl
ret
inc
les
inc
mov
gs
cld
divb
jl
stos
outsb
mov
loope
mov
negl
nop
into
lcall
and
mov
sahf
rorb
cmc
into
in
sbbb
sbbb
int
mov
xor
cmpsl
mov
or
lret
fstpt
test
xchg
popf
push
idivb
xor
jbe
jge
js
mov
daa
dec
adc
repnz
mov
add
or
jnp
pop
out
mov
sti
das
sub
mov
pusha
xchg
leave
repnz
inc
and
cmovb
mov
adc
sub
inc
pop
clc
decl
xorb
push
scas
fiaddl
mov
jnp
dec
in
xor
jle
enter
stos
test
inc
add
jmp
adc
outsl
sbb
sbb
cmpsl
rcr
mov
jne
push
adc
and
addr16
mov
cli
jb
stos
insl
or
test
xor
pop
mov
cld
push
mov
or
iret
mulb
sbb
test
fimuls
mov
sbbb
in
pop
push
insb
and
frstor
out
push
in
shlb
push
les
adc
xchg
inc
cld
das
sbb
sbb
cltd
notb
call
push
mov
sbb
aad
and
sti
fimull
cltd
mov
dec
push
test
in
mov
cltd
lret
minps
or
xlat
cmp
imul
fstpt
push
xchg
andb
or
pop
aas
movsb
pushf
addl
sbb
pop
out
jl
pop
xchg
imul
xchg
fisttpl
bound
push
xlat
sbb
sbb
in
movsl
in
pop
sbb
push
jne
ret
jne
data16
xchg
mov
loopne
fnsave
aaa
xchg
sbb
loope
jno
xchg
and
xchg
fistps
adc
enter
push
jo
call
push
mov
mov
jl
add
xor
mov
pusha
add
pop
insl
xorl
mov
mov
je
into
outsb
push
inc
out
inc
mov
push
sub
cmp
push
jg
mov
pop
movsl
fnstsw
add
sub
loope
sbb
push
pop
nop
mov
jge
push
sbb
and
out
lahf
pushfw
mov
inc
add
cmp
add
dec
jno
dec
in
cmp
jb
iret
jno
push
jmp
adc
add
div
sub
mov
mov
pop
jle
iret
jl
gs
iret
sbb
sub
repz
pushf
add
test
sub
js
mov
push
push
inc
lret
sbb
sub
ret
aas
pusha
jmp
xchg
adc
jp
mov
add
mov
scas
dec
xchg
mov
icebp
pop
lahf
push
mov
cmp
js
jne
pop
sub
dec
or
pop
out
into
fldenv
or
vandps
sbb
push
cmp
dec
cmpsb
push
in
push
and
dec
mov
out
sbb
call
inc
ds
dec
insl
pop
dec
pop
loopne
stos
jno
shlb
adc
bound
hlt
ljmp
jae
dec
lock
add
shlb
dec
scas
fimull
inc
mov
out
addl
test
cmp
add
bound
xlat
lcall
sub
sbb
in
sub
mov
arpl
aas
lret
xor
add
jbe
inc
rcll
es
mov
out
mulb
push
inc
cmpsb
xor
add
jbe
inc
rcll
es
mov
out
cmc
sub
sub
inc
cmpsl
xor
add
jbe
dec
rcll
es
mov
jae
arpl
incb
xor
add
mov
rcll
push
cmp
jl
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
xor
mov
test
xchg
aas
pop
dec
aam
cmpsb
add
xchg
add
into
jne
push
call
lfs
test
xchg
aas
in
hlt
pop
les
sbb
xor
gs
adc
fs
je
inc
out
push
jmp
xchg
aas
in
hlt
pop
les
jg
xor
gs
pop
mov
mov
inc
mov
enter
outsl
cmc
aam
aas
insb
out
movsl
or
arpl
hlt
inc
hlt
push
adc
cmp
psllw
mov
pop
sti
rorb
mov
pusha
pop
push
cltd
stos
cltd
fisttps
scas
and
mov
mov
cmc
clc
loopne
jle
dec
mov
mov
push
test
mov
bound
xor
mov
movsb
cmp
in
fcomps
addr16
xor
repnz
add
fbld
aas
push
lcall
xlat
rolb
mov
ds
dec
jo
mov
mov
roll
or
xchg
adc
add
cmp
cmp
adc
fisttpl
cltd
inc
adc
je
inc
out
push
add
lfs
test
xchg
aas
in
hlt
pop
les
jg
xor
add
adc
fs
je
inc
out
push
mov
call
or
or
xchg
jo
adc
and
lock
or
sbb
cmp
jl
jno
das
stos
pop
dec
adc
dec
stos
rorb
dec
out
mov
movsl
jge
pop
les
jg
xor
add
adc
fs
je
inc
out
push
jmp
xchg
aas
in
hlt
pop
les
jg
xor
add
adc
fs
je
inc
out
push
jmp
xabort
mov
and
xchg
dec
push
pop
push
lock
lods
mov
and
lcall
or
dec
pop
jns
out
xor
inc
jmp
xchg
es
pusha
aaa
lcall
jb
outsl
push
mov
jne
bnd
outsb
lahf
das
je
adc
iret
insl
mov
in
mov
cmp
insb
push
sbb
and
rep
or
repz
sbb
jl
test
add
jo
addr16
test
inc
sbb
mov
xchg
sub
mov
adc
jnp
imul
add
imul
cmpl
mov
inc
je
pusha
inc
dec
mov
lea
xor
lea
es
xlat
inc
lahf
sarl
adc
in
fimull
mulb
movsl
push
or
jne
mov
pushf
mov
xor
add
icebp
adc
jge
or
pop
mov
dec
push
mov
sbb
push
sarb
or
mov
mov
insl
cmp
xchg
cmp
dec
ror
xor
push
jns
in
and
xchg
adc
xor
fucomp
push
popa
sti
dec
mov
mov
outsl
inc
addr16
repz
insb
cmpsl
inc
mov
pusha
xchg
adc
insb
nop
les
sub
dec
or
push
or
test
clc
sahf
push
inc
dec
stc
sub
lret
sbb
loope
ja
movsl
mov
adc
adc
mov
jb
fcomps
cmpsb
xlat
mov
sbb
mov
dec
ss
add
dec
fldl
je
data16
mulps
lret
scas
and
in
mov
addr16
loop
pusha
sub
popa
and
test
jo
pushf
gs
call
int3
sbb
xchg
jmp
les
xor
mov
lods
jne
lcall
in
sub
ja
ret
push
iret
pop
cltd
or
fmull
enter
adc
enter
add
repnz
xchg
xchg
fisttpl
pop
xchg
int3
sub
mov
rcll
lret
mov
mov
outsb
imul
int
jp
icebp
mov
jno
push
dec
aas
lret
adc
jno
ja
cltd
or
es
jbe
enter
jno
outsb
mov
push
mov
loop
ud0
test
sahf
mov
xlat
fdivl
out
sbb
xor
sbb
lods
mov
enter
mov
sbb
pop
and
movsb
mov
sahf
fs
inc
xchg
in
mov
call
fs
aas
sub
ljmp
outsl
jl
std
es
std
push
inc
fcompl
jb
xlat
or
jnp
dec
adc
mov
mov
jo
adc
pop
sub
rorb
sbb
mov
les
and
and
push
in
mov
outsl
daa
or
xchg
or
pop
cld
mov
pop
lret
xchg
je
adc
dec
sub
pop
dec
out
xor
xor
jnp
add
jns
mov
jge
dec
jg
inc
sub
jle
mov
sbb
dec
xor
lea
push
and
popf
xchg
aas
add
mov
and
adc
push
adc
pop
jbe
inc
fs
mov
add
adc
push
hlt
movsl
push
cli
push
jmp
test
pop
std
dec
repnz
fcoms
xor
ret
inc
adc
outsl
mov
arpl
and
je
outsl
push
fsubl
sbb
pop
jl
and
shrl
sub
jmp
dec
stos
pop
sub
lods
pop
and
jns
addr16
fiadds
inc
movsb
sub
sub
imul
leave
loope
sbb
add
jp
cmpsl
iret
fs
sub
out
mov
or
call
mov
or
test
leave
test
test
jl
mov
sahf
inc
mov
cltd
repz
cmp
imul
push
test
shrl
ds
cmp
sar
push
lahf
iret
xchg
add
push
add
mov
adc
imul
lahf
adc
xor
lret
mov
mov
push
lods
jne
pop
dec
push
cmp
jle
mov
shr
pop
pop
sbb
push
sub
or
xchg
aam
popa
adc
fldt
mov
cmp
repnz
sub
sbb
sub
cmp
dec
lcall
xorb
pop
rcrb
mov
or
xor
xchg
cmp
loope
into
mov
sbb
neg
mov
mov
in
mov
ret
testb
add
jae
push
adc
andb
shll
xchg
cwtl
out
pop
cltd
mov
scas
xchg
pop
sbb
push
incl
loop
push
popa
mov
imul
cmpsb
push
add
xlat
pop
movsb
movb
aaa
int3
loope
insl
sbb
mov
adc
imul
add
xchg
sbb
mov
lds
lret
scas
mov
fsubrs
gs
jle
icebp
adc
filds
jmp
pop
and
idivb
xchg
cmc
fnstcw
cmp
sbb
out
in
jb
stos
in
cmp
insb
outsb
push
adc
xchg
and
jl
ja
rorl
jns
sbb
fidivl
mov
jl
fsubrs
test
add
mov
push
jb
dec
fs
ss
mov
jbe
lock
xchg
push
mov
fsubl
cltd
mov
mov
out
adc
push
jno
nop
jns
cltd
int
xor
dec
sub
orl
add
xorb
aaa
out
fcomps
lret
loop
cmp
iret
mov
mov
cs
cmp
push
pop
mov
cltd
pop
jne
cwtl
dec
aas
jb
inc
xor
xchg
xor
or
pop
mov
jmp
test
in
jp
dec
jno
icebp
mov
jecxz
inc
sbb
or
in
cmc
stc
pop
mov
rcr
aaa
dec
stos
repnz
add
mov
arpl
cmp
add
in
add
mov
rcrl
iret
insl
and
jp
fisubl
dec
mov
and
and
pop
push
lahf
es
mov
pusha
out
jb
mov
sub
adc
inc
xchg
sahf
lcall
lret
call
cmp
cmp
sub
loope
sbb
sbb
lea
scas
int
lock
mov
shlb
cmpsb
loop
sti
jp
inc
jbe
push
fadd
in
jnp
mov
add
stos
js
cmp
dec
dec
lods
dec
adcl
push
adc
xchg
fmulp
sbb
jne
int
or
dec
mov
or
jl
fstp
fcmovnbe
test
jmp
clc
icebp
xchg
and
jbe,pt
cs
xchg
pop
pop
popa
ret
sahf
push
inc
fwait
add
jnp
inc
cmpsb
or
dec
enter
popl
jge
pop
jmp
nop
jbe
sarb
out
cmc
push
ds
fwait
and
jbe
pop
xchg
test
ret
dec
sub
sbb
je
mov
xchg
loope
xchg
push
push
xor
mov
xorb
roll
cmpsl
ja
stos
mov
dec
and
outsl
cld
dec
fcomip
mov
and
adc
add
in
les
add
lcall
ds
or
jecxz
xchg
daa
dec
push
adc
adc
cmp
and
popf
inc
push
insb
pop
push
loope
outsb
ja
or
cmp
pop
pop
nop
add
mulb
cs
push
xor
sbb
and
mov
xor
mov
in
xchg
jle
inc
jbe
adc
xchg
sub
mov
jp
insb
sbb
lds
push
mov
ret
out
dec
xchg
pop
popf
add
test
xor
mov
push
mov
mov
adc
je
in
jbe
and
pop
pop
inc
sub
inc
mov
jae
pxor
mov
xorb
or
clc
jns
std
gs
and
gs
mov
test
mov
in
sbbl
push
lock
pusha
fistpll
xchg
cmpsl
jb
sub
loope
stos
inc
jb
outsl
cmpsl
mov
mov
arpl
imul
jmp
imul
iret
pop
and
mov
rol
rclb
pop
xchg
push
test
out
or
adc
mov
cmpsl
aas
pusha
xchg
jp
jp
dec
cmpsl
fcoml
cmp
push
pop
push
xchg
and
sbb
cmc
sub
push
jmp
jbe
mov
int3
inc
dec
cmp
sbb
adc
cld
stos
cld
aam
sbb
out
call
xor
inc
pop
push
insb
mov
push
mov
outsb
xlat
mov
int
adc
mov
mov
in
ds
sti
iret
push
push
shlb
cs
mov
aas
xlat
add
xchg
adc
sub
imul
sbb
jl
ja
mov
pop
pop
xchg
lock
into
and
or
dec
jbe
add
dec
xor
dec
movsl
xor
jo
add
and
sbb
fsub
push
push
fs
push
mov
cmpl
js
fnstcw
aas
add
notl
mov
fnstsw
mov
lret
mov
jl
test
ret
sbb
mov
test
and
add
or
lret
lret
add
sub
mov
les
test
addr16
insl
dec
sbb
inc
and
mov
dec
sti
sub
dec
pop
icebp
mov
add
shll
mov
sbb
shlb
inc
pop
mov
mov
inc
xchg
add
lods
lcall
pop
mulb
iret
mov
shrb
arpl
push
out
lret
jb,pn
clc
js
mov
bound
adc
fistpll
mov
mov
aad
movsb
push
int3
xor
out
add
mov
dec
mov
enter
stc
clc
jle
repnz
insl
mov
cmc
iret
xchg
ds
push
mov
or
inc
jmp
sbb
out
int
cld
gs
insb
cmpsl
in
adc
jo
iret
frstor
lcall
jne
int3
inc
dec
adc
jbe
ret
dec
mov
lcall
mov
mov
pusha
pop
loope
pop
aam
mov
fdivr
adc
in
mov
out
adc
mov
sbb
xor
pop
testl
add
xchg
hlt
fs
xchg
dec
adc
test
lea
call
or
hlt
mov
pop
pop
jle
dec
pop
pop
mov
xchg
mov
daa
incb
rcrl
sub
jb
shr
xlat
cmp
and
mov
aas
stos
sub
sub
mov
int3
clc
pandn
push
xor
adc
mov
stos
sub
lret
mov
sub
leave
subb
sbb
arpl
mov
cmc
mov
lret
rcrl
out
fistpl
in
test
or
dec
push
inc
lods
push
bound
jecxz
jecxz
cltd
nop
loopne
adc
movsl
lcall
mov
call
adc
es
in
cmp
hlt
mov
test
mov
fwait
push
outsb
shrb
mov
sahf
cmc
test
mov
push
sbb
fdivr
out
dec
mov
mov
stc
xor
aas
pusha
push
loopne
xchg
xchg
icebp
dec
aad
in
mov
rcrb
sub
mov
or
push
aaa
mov
lds
adc
pop
lret
je
stos
cmpsb
xor
lret
scas
repnz
jae
rorb
jecxz
lds
sub
xor
dec
rol
push
fisubrl
sarl
cs
lahf
adc
mov
fsubp
je
jno
loop
cmpsb
jnp
inc
push
or
lods
sahf
xchg
test
xorl
incb
jne
xchg
adc
or
clc
xchg
push
jmp
mov
or
mov
push
jns
outsb
mov
decl
dec
cmp
or
inc
incb
cmp
addr16
or
lods
jae
bound
test
decl
inc
mov
mov
xorl
js
dec
mov
loop
and
in
mov
inc
out
insl
lcall
pop
pusha
dec
xchg
cmc
fwait
xchg
mov
stc
clc
jecxz
cmp
or
arpl
stc
les
mull
cmpsb
push
dec
pop
aas
es
stos
lods
or
call
push
outsb
jg
mov
mov
sbb
outsl
xchg
aad
lret
push
fwait
in
pop
into
addl
ret
mov
faddl
pop
cmp
roll
mov
ror
push
pop
or
aaa
pop
cmc
and
sti
pop
cmp
push
xchg
push
sarl
icebp
jmp
in
rcrl
xchg
fildl
jle
inc
insl
movsb
or
inc
pop
movsl
gs
sub
push
popa
nop
mov
cmp
adc
femms
fs
fsubs
inc
gs
jnp
mov
sbb
outsb
sub
fisttpl
adc
mov
mov
filds
push
pop
icebp
cmp
or
mov
jecxz
cmp
dec
adc
pop
js
push
int3
mov
mov
pop
cmp
xor
outsb
test
and
sub
imul
test
xchg
jns
mov
mov
clc
stos
imul
cmp
mov
mov
mov
pushf
inc
leave
push
inc
and
lret
popf
add
mov
xor
push
pushf
stos
jecxz
mov
jb
and
inc
clc
mov
std
mov
push
mov
or
cs
cltd
popa
jl
inc
lods
adc
jl
leave
add
repz
and
int
enter
leave
aad
sti
fstp
scas
ss
add
out
inc
pop
lret
push
setle
xchg
or
ljmp
pop
add
and
cmp
rcrl
mov
jg
mov
lea
std
xchg
add
pop
aas
dec
xor
cmp
aas
mov
jle
dec
imul
pop
ja
into
repz
push
xlat
lea
push
sbb
sbb
pop
sub
lods
leave
cmpsl
outsb
imul
pop
inc
gs
and
loopne
dec
pushf
test
lcall
inc
mov
jge
mov
enter
stos
sbb
pusha
data16
jmp
inc
aam
in
xor
clc
imul
dec
sbb
ret
jle
mov
ljmp
inc
add
inc
sarl
es
out
add
xchg
mov
mov
call
inc
mov
cwtl
pop
pop
and
pushf
inc
in
inc
mov
jg
pop
out
cmpl
jae
inc
aas
push
inc
jbe
sbb
xchg
test
pushf
push
add
cmp
stos
out
inc
aam
push
pop
cmp
sarb
jg
xchg
iret
mov
les
mov
repz
fcmovnbe
inc
clc
jb
add
mov
dec
mov
or
push
pop
ja
mov
xor
fnstsw
sub
mov
loop
sbb
shll
testb
cmpsl
or
sbb
sbb
adc
movsb
dec
fs
pop
out
push
pop
xor
lcall
loop
sahf
rcrb
je
mov
in
or
xchg
sbb
in
imul
cld
div
push
and
mov
ds
fcmovu
mov
sbb
lock
dec
pop
xchg
les
sbb
or
popa
ret
ret
add
repz
adc
mov
push
div
jbe
ret
stc
rolb
test
fisubs
ds
sbb
sbb
fwait
adc
mov
in
pop
cli
and
and
clc
mov
ret
or
mov
sarl
insb
dec
add
push
sbb
cmp
inc
lahf
xchg
cwtl
xchg
xchg
mov
loop
in
push
subb
dec
test
pop
lock
and
sbb
lret
lret
add
adc
loope
cmp
and
adc
dec
out
arpl
das
bound
enter
repnz
add
scas
imul
xchg
daa
pop
jmp
cmp
mov
aad
or
push
insb
rcl
cli
scas
sbb
out
sbb
inc
dec
int
and
iret
jmp
jp
adc
aaa
hlt
add
xor
cmp
jbe
jge
jnp
pop
mov
fsubrl
fbstp
popw
les
pop
loop
cld
xchg
pop
push
xorb
test
cmpb
xor
add
jae
adc
and
repz
cmp
into
jmp
sar
mov
sub
pop
fidivrl
adc
ret
sub
pop
adc
unpcklps
ljmp
sbb
jp
aad
lret
or
or
jg
loopne
fwait
jp
pop
mov
push
fwait
push
gs
insb
repnz
jp
jle
jne
xor
aaa
fwait
xor
jle
mov
cld
cmpsl
jnp
cmp
mov
pavgw
lods
fiadds
fs
nop
adc
cmp
and
sbb
mov
popa
cmp
inc
dec
sarl
push
mov
movsl
adc
fistpl
mov
cmpsl
stos
stc
jp
adcb
sub
movl
cmp
and
sub
test
add
push
sbbl
in
pop
xchg
jcxz
inc
imul
cmpsl
mov
xchg
or
ljmp
sub
push
test
mov
es
adc
fsubrp
jo
inc
mov
mov
inc
lods
outsl
cwtl
imul
push
repz
mov
outsl
cmp
inc
inc
mov
loope
jmp
mov
sub
fmull
xchg
aam
fsubrl
xor
dec
pushf
scas
or
loopne
fs
inc
pusha
test
call
dec
cmp
mov
popa
sub
inc
xchg
and
mov
sbbl
jp
aam
inc
mov
inc
imul
fidivrs
ss
mov
cmpb
out
aas
mov
ret
out
xchg
xchg
rcrl
adc
mov
into
or
loop
cmp
push
lods
std
xor
cmp
pop
cmp
mov
into
cld
out
cmp
fisubs
push
jnp
jp
cwtl
pop
push
jno
dec
outsb
lcall
sbb
adc
and
add
sub
mull
pop
movsl
ficomps
cli
leave
ret
jb
mov
sti
adc
lret
adc
mov
cmpsb
mov
xor
adc
sbb
int
and
add
stos
gs
push
rcl
fadds
mov
stos
push
movsl
stos
test
jne
pop
or
mov
inc
ja
fcoms
repz
dec
sub
shr
mov
gs
fsub
mov
push
pop
aad
in
xchg
sarl
imull
push
subl
cmc
cmp
add
pop
adc
pop
fsubs
push
ret
ja
test
mov
or
imul
insl
ret
negb
jne
adc
jbe
inc
cli
inc
mov
or
lahf
idivl
add
fdivrs
std
incb
imul
ret
add
mov
sub
jbe
shll
jge
fsubrs
jp
lea
cmp
jp
mov
or
adc
mov
fsts
sbb
jmp
mov
in
fdivl
sub
mov
mov
movl
gs
mov
push
js
dec
push
clc
std
stos
sbb
mov
sbb
idivl
bound
mov
in
inc
int
pop
rcll
out
cld
outsb
mov
cli
dec
fbstp
iret
mov
stos
cmp
imul
out
cmp
inc
dec
push
pop
mov
fiadds
clc
js
leave
ljmp
fistpll
fmuls
shll
test
or
mov
inc
lock
adc
loopne
add
mov
and
dec
test
repnz
insb
xor
pop
data16
sbb
sub
shlb
stos
ret
mov
sub
jecxz
enter
das
mov
push
jne
xchg
mov
xor
movsl
cmp
inc
scas
xchg
ret
xor
and
loopne
inc
ficoms
lock
inc
xlat
fdivrl
inc
adc
pop
and
xchg
aas
in
hlt
pop
les
jg
xor
add
adc
fs
je
inc
out
push
jmp
xchg
aas
in
hlt
pop
les
jg
xor
add
adc
fs
je
inc
out
push
jmp
xchg
aas
in
hlt
pop
les
jg
xor
add
adc
fs
je
inc
out
push
jmp
das
xchg
aas
in
hlt
pop
les
mov
scas
scas
adc
adc
and
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
xor
les
cmpsl
sbb
and
ja
daa
aad
dec
pop
cmc
pop
in
adc
xlat
and
xchg
adc
ja
and
movl
or
sbb
sub
scas
pop
lahf
insl
cmpb
jl
sub
and
or
jle
xchg
pop
divl
push
mov
test
mov
dec
sbb
cmp
jne
and
pop
lcall
pop
pop
fwait
mov
fwait
jmp
lcall
push
adc
outsb
xchg
inc
cmp
mov
fdivs
jl
cmc
shlb
daa
lret
adcb
outsl
add
jnp
dec
or
mov
or
cmc
pop
nop
or
sahf
lret
notl
xchg
push
dec
push
sbb
xlat
ss
cmpsb
out
pusha
pop
ljmp
sbb
cmp
addr16
xor
mov
std
daa
and
daa
add
adc
mov
lods
inc
xchg
jl
xchg
outsl
popf
pop
lods
dec
mov
pop
out
push
in
adc
mov
ret
push
fisubl
cli
ja
xor
mov
bound
imull
aad
rcll
or
add
push
gs
loopne
shlb
cmpsl
inc
movsl
inc
lds
pop
xchg
mov
xlat
pusha
fbld
inc
xchg
gs
ja
inc
mov
movsl
daa
aad
lds
cmc
pop
in
adc
xlat
and
xchg
gs
ja
inc
mov
movsl
daa
aad
lds
cmc
pop
in
adc
mov
fstpt
mov
add
mov
and
push
or
and
enter
push
addr16
xchg
rcrl
jns
jmp
xchg
repz
push
out
mov
shld
sub
jns
sub
cmpsl
jge
xlat
dec
and
fldcw
add
ret
mov
inc
stos
inc
lods
clc
mov
vpmacssdqh
test
sbb
or
xchg
push
mov
mov
inc
xchg
mov
dec
mov
ljmp
cmp
mov
das
roll
sub
mov
pop
push
or
sbb
in
shrl
push
or
leave
mov
push
jecxz
enter
jbe
xchg
cmp
pop
scas
mov
add
insb
roll
out
out
sbb
mov
cmp
xor
fidivs
xchg
pushaw
mov
xor
adc
repnz
mov
fs
push
xchg
push
dec
fcmovnb
ret
adc
jno
shl
out
lods
push
dec
shl
mov
bound
jae
sbb
xchg
inc
adc
inc
aas
icebp
popf
and
ret
test
sqrtps
icebp
cwtl
add
lahf
sbb
and
xchg
mov
and
jns
les
push
dec
xlat
mov
iret
xchg
loope,pt
testb
xor
int
jmp
scas
pushf
xchg
out
sbb
mov
movsb
jb
sub
cmpsl
das
test
testl
loopne
jmp
sarb
xchg
aas
jge
in
cmpb
shll
and
cmp
loop
mov
add
push
leave
std
push
cs
xchg
inc
shlb
out
roll
mov
mov
mov
notl
cmpsb
movsl
call
mov
das
scas
imul
ljmp
lods
daa
outsb
rclb
jno
repz
jecxz
ficoml
xchg
cmp
repz
aam
stos
adcl
sub
adcb
addb
add
pop
lcall
push
mov
rol
adc
lret
je
frstor
ret
outsl
xchg
andb
push
test
std
sub
and
mov
bound
lods
mov
movsb
decl
jo
mov
xlat
pushf
add
loope
inc
mov
ds
mov
mov
and
mov
stos
mov
pop
fcmove
mov
mov
jnp
out
mov
jb
data16
fadds
push
ss
and
cwtl
xchg
sahf
mov
mov
inc
ret
inc
jbe
add
cmp
bound
xchg
fwait
clc
aas
aad
fnstcw
push
jbe
pusha
subl
rsm
aam
cmpsb
nop
divw
pop
jp
ja
pop
repnz
xorl
mov
xchg
sbb
push
out
loopne
xor
cltd
sub
mov
outsb
je
inc
mov
jmp
ficompl
mov
movsl
lret
jns
pusha
popf
mov
push
inc
cmp
pusha
mov
in
xchg
movsb
mov
or
cs
int3
push
inc
mov
fsubr
imul
leave
aas
movsl
lahf
pusha
shll
sar
mov
rclb
pop
mov
incl
add
ds
mov
pop
cs
mulb
mov
mov
add
xor
imul
out
or
mov
inc
add
push
mov
mov
jge
movsb
subl
push
nop
repz
fcompl
ds
out
mov
out
pushf
inc
mov
out
inc
jbe
dec
mov
mulb
test
inc
aad
mov
popf
push
popf
int
cmp
ret
movsb
fwait
lcall
pop
push
sbb
rorb
lods
inc
pop
outsb
mov
inc
inc
out
mov
mov
popf
cmp
popa
nop
pop
jg
das
push
mov
adcb
lods
ret
loop
adc
fmuls
sub
out
pop
ja
mov
mov
pop
push
pop
fs
and
xor
sbb
mov
mov
js
ficoml
mov
aaa
aaa
out
gs
mov
mov
dec
xor
sbb
cmc
and
jns
loopne
ljmp
adc
push
jl
cmp
mov
js
dec
push
dec
sub
int3
nop
cmp
repnz
in
mov
sub
dec
dec
jl
ja
insb
rorb
jg
dec
jno
imul
and
fs
loop
pop
jae
push
jae
rclb
jg
outsl
repz
out
inc
cltd
push
out
push
mov
add
xchg
sbb
dec
scas
enter
pusha
mov
inc
fcoms
mov
xor
xor
jg
cmc
mov
ss
cmp
or
dec
iret
stos
xor
rorb
clc
popa
add
gs
ret
cwtl
dec
push
js
sub
jae
xorl
test
add
je
jbe
sub
sub
or
mov
inc
sbbb
pop
push
add
adc
daa
fs
sbb
inc
xchg
lods
rol
push
xlat
mov
ja
dec
imul
les
js
xor
dec
push
xlat
roll
test
sti
cwtl
cmpb
jnp
push
int
es
loopne
or
jecxz
mov
adc
js
adc
adc
loope
in
push
shrb
sub
add
cmc
pusha
and
test
xor
pop
jg,pn
adc
and
pop
sub
mov
pop
cmp
jnp
cld
scas
std
bound
je
aas
popf
inc
pusha
jbe
imul
sbb
idiv
push
imul
push
sub
hlt
adc
scas
mov
jp
fs
add
xor
add
dec
loope
decb
mov
mov
idivb
fbstp
aaa
jmp
hlt
jnp
pop
dec
push
add
aas
mov
sbb
lods
call
cmp
lods
lods
and
mov
lcall
je
in
pop
push
jns
in
in
xchg
test
cld
pop
and
jecxz
and
arpl
cmp
add
cwtl
pop
sbbl
push
nop
sti
pop
mov
inc
test
jns
in
aas
lods
sbb
jle
ja
lea
xchg
in
aaa
dec
jns
inc
cwtl
xor
fbld
iret
push
inc
xchg
nop
shr
or
mov
or
jg
xchg
imul
sahf
fwait
jns
jbe
dec
loope
sub
inc
cmc
cmpsl
mov
test
arpl
mov
and
jbe
and
mov
fwait
xchg
mov
mov
popa
push
test
xlat
rclb
xor
outsl
cmp
mov
cs
dec
and
mov
int3
test
mov
subl
in
inc
outsb
fldt
cwtl
test
imul
xchg
lods
popl
lea
lret
rcrb
cltd
mov
cmp
mov
sub
fwait
cmp
inc
rclb
dec
sub
imul
sarl
push
test
pushw
pop
mov
xchg
push
mov
dec
loope
loop
pop
pop
or
test
sub
fisubl
popf
pushf
mov
out
maxps
bound
inc
fs
adc
and
rclb
sar
push
adc
add
out
aad
push
sub
push
mov
jp
adc
push
adc
pop
movsb
adc
and
mov
out
stos
sub
push
mov
shrl
inc
sbb
mov
test
inc
pusha
sub
iret
sub
push
mov
jge
dec
ja
sti
std
push
frndint
loopne
inc
ljmp
in
ja
xor
xchg
fidivs
jp
pop
repz
jge
or
rol
xlat
ss
imul
xchg
mov
stc
insb
xchg
push
add
push
sti
sub
cli
cmp
outsl
cmc
faddl
jp
or
clc
sarb
aaa
mov
add
xlat
cmpsb
pop
cmp
dec
jp
mov
sbb
jns
jg
sbb
das
in
out
mov
pop
std
out
jnp
mov
dec
jecxz
mov
cmpsl
stos
insb
mov
repz
xchg
aam
lock
xor
scas
adc
cmpsl
push
sub
mov
aaa
add
and
fcompl
sbb
push
test
aaa
dec
push
movsl
daa
and
mov
stos
das
sub
adc
into
out
into
push
lock
and
add
stc
roll
js
fldt
mov
adc
xchg
add
aas
cltd
std
jo
pop
das
cmpl
jge
xlat
loopne
ja
mov
insl
cmpxchg
aad
mov
jnp
jmp
nop
inc
mov
cs
lock
es
xor
outsb
mov
push
cwtl
jae
flds
outsb
xor
je
ja
jo
pop
int
cmp
out
std
xchg
sti
iret
xor
or
adc
decb
test
cmpsl
push
outsl
es
movsb
mov
daa
sub
push
cmc
out
arpl
icebp
imul
inc
dec
cmp
jge
data16
loope,pt
jnp
out
imul
add
add
cmpsl
push
pop
rcr
jl
icebp
enter
imul
push
rcrl
jmp
std
pop
sub
add
call
or
hlt
frndint
pop
fdivrs
sbb
inc
xchg
pop
mov
adc
jmp
lret
push
mov
pop
add
ret
test
push
xor
inc
inc
into
in
jecxz
js
cltd
bound
pop
push
fnstenv
pop
mov
loope
enter
fcomps
jb
enter
xchg
sbb
mov
push
push
xchg
test
outsl
aad
mov
inc
inc
push
adc
stos
inc
dec
mov
enter
rcl
scas
call
and
inc
xchg
int
mov
call
inc
and
fcompl
and
shlb
lods
mov
outsl
pminsw
sbbl
sbb
in
repz
mov
jge
dec
xchg
jno
loope
mov
in
incl
mull
mov
mov
test
add
or
push
or
stos
mov
xchg
add
movb
pop
mov
je
pop
clc
or
stos
xchg
bound
xor
movsb
jae
push
push
fsubs
mov
pop
testl
js
lret
adc
icebp
dec
cvttps2pi
xchg
arpl
icebp
fwait
stos
push
sbb
int
add
int
dec
add
jno
fcompl
nop
lods
mov
sbb
add
inc
pusha
test
leave
adc
ss
insl
xor
ds
cmp
test
sub
add
cmp
mov
adc
loop
cs
repnz
test
fdivrp
out
mov
mov
insb
dec
dec
add
or
ret
xor
andl
cwtl
movb
pop
sub
fnstenv
jbe
push
cmp
scas
iret
out
lret
rcrl
mov
fistl
jp
mov
daa
cs
jae
repnz
jne
push
inc
mov
mov
push
pusha
maxps
pop
sar
or
aas
jno
pop
ja
xchg
adc
push
es
dec
mov
sub
loopne
dec
pop
jp
gs
add
pop
je
ficomps
out
adc
or
dec
aaa
pop
ret
idivl
cmp
push
pop
inc
call
inc
bound
stc
inc
and
cmp
test
es
pop
fistl
push
inc
mov
ljmp
push
add
xor
cld
jl
rorl
sub
lods
xor
stos
shll
jp
aas
xor
popf
xor
mov
inc
aam
pusha
rclb
jge
loopne
sub
mov
das
sarl
stos
cmpsl
insb
mov
out
lret
push
sar
mov
adc
or
enter
in
xor
or
adc
mov
inc
pop
sub
or
es
push
mov
pop
lret
mov
xor
cmpsl
jnp
call
incb
pop
dec
loope
scas
das
clc
xchg
and
xor
imul
xor
mov
add
mov
mov
sub
jbe
sbb
xor
testb
lea
mov
ss
jp
push
push
mov
lahf
mov
pop
xchg
rclb
mov
out
enter
mov
decb
out
mov
dec
jge
pop
xor
movsb
outsl
repz
jp
ja
push
sub
adc
jmp
outsb
sub
adc
addr16
pusha
xchg
xor
insl
movsb
iret
pop
jo
pop
cmp
leave
push
aam
out
pop
dec
jp
nop
xchg
dec
paddsw
and
or
arpl
mov
das
xchg
fs
sub
aaa
xorb
rcrb
mov
push
fbstp
push
andb
xchg
mov
cltd
adc
loopne
data16
jb
pop
mov
jae
lret
mov
mov
jno
aas
cmp
pop
jmp
adc
outsl
xchg
mov
js
and
or
aas
adc
pop
push
std
sbb
and
and
loop
push
sub
or
ljmp
jo
jle
jno
arpl
out
jnp
inc
bound
inc
adcl
js
fs
into
mov
xor
das
je
mov
movsl
es
iret
shrl
ds
lods
lahf
push
push
sbb
pop
push
push
xor
je
mov
xlat
dec
pop
mov
mov
xchg
btc
mov
or
xchg
gs
bnd
movsb
or
iret
push
inc
mov
sub
sub
mov
adc
insb
outsl
sbb
and
push
ret
or
aam
testb
or
cmp
ret
xor
fiaddl
sub
add
cmpsb
fnstcw
insb
or
xchg
add
cmpsl
sbb
jae
popf
adc
push
cmp
mov
or
and
sub
pushf
jae
mov
jno
fbld
xor
js
mov
mov
pop
in
cmp
mov
fisttpl
add
pop
call
pop
jge
notl
imul
xchg
das
mov
dec
push
outsl
jl
push
mov
mov
mov
mulb
pop
mov
push
fsubrs
jp
pop
daa
les
test
xor
jge
mov
adc
push
adc
xor
jecxz
or
loop
push
or
lret
adc
dec
pop
nop
loope
fistl
mov
nop
push
mov
jae
clc
xor
cwtl
fwait
cltd
cmp
jb
adcb
rcr
sbb
addr16
dec
shlb
pop
push
mov
mov
sti
addr16
mull
or
xorb
test
xor
xor
xlat
adc
jmp
orb
cmpsb
stos
cmp
shrb
xchg
daa
imul
aas
xchg
call
loop
or
fwait
pop
sbb
mov
xchg
sbb
inc
cmc
mov
cmp
lods
repnz
loop
xor
cmp
push
cmc
pop
xor
insb
movsl
fmull
cmp
les
sbb
pop
and
push
xchg
call
add
movsl
inc
es
sbb
call
mov
inc
add
push
cmc
cwtl
inc
sub
sub
add
xor
outsl
in
inc
jae
pop
mov
cld
test
mulb
push
jns
adc
test
jno
scas
loopne
dec
dec
push
xor
lock
and
stos
push
mov
jne
adc
out
test
mov
sbb
mov
xchg
jnp
or
pusha
inc
ja
mov
cli
ss
mov
push
sbb
jmp
mov
jae
dec
dec
ss
outsl
cwtl
xor
push
nopl
imul
cmp
rcrl
jnp
subb
iret
jo
cmpsl
cmc
mov
pop
lahf
repz
xor
push
in
xchg
gs
mov
insb
cmp
adc
push
inc
movsb
rclb
icebp
adc
ja
jns
lds
inc
aad
push
xlat
sub
mov
mov
lcall
dec
push
xor
cltd
pop
jg
fwait
jp
jbe
cmp
push
out
repz
cmp
jb
adc
fimull
sub
ret
dec
cmp
in
stos
movsb
mov
adc
sbb
sub
scas
notb
in
xchg
leave
mov
loop
aaa
scas
repnz
sub
aas
add
aad
adc
pop
jno
or
jns
mov
sbb
enter
in
cltd
push
lods
mov
jne
jne
and
test
insl
shll
push
outsl
insb
std
leave
cmp
test
inc
lcall
mov
or
leave
lds
xchg
in
push
movsl
mov
xchg
out
sti
mov
data16
jl
jmp
icebp
lock
stc
out
std
xor
adc
aam
sbb
pushl
inc
rorb
sbb
jle
xchg
jmp
or
sahf
xor
jl
push
out
stos
xchg
mov
adc
mov
fucomp
leave
mov
cltd
jl
sub
fst
mov
cmp
jbe
pop
incl
jl
dec
mov
aam
jb
jns
int3
add
jp
xlat
mov
lret
shr
mov
inc
xchg
jl
mov
add
inc
xor
stos
jmp
dec
push
xor
mov
adc
insl
test
insl
mov
jb
out
data16
dec
pop
imul
inc
das
ret
addr16
push
scas
pop
syscall
and
in
iret
dec
cmpsl
or
mov
mov
outsl
or
jg
fmull
push
mov
scas
xor
jge
pop
pop
jge
icebp
push
inc
push
popf
or
fcmovne
das
mov
in
jmp
ret
and
movsb
mov
scas
mov
mov
into
and
add
loop
ret
es
and
adc
jb
sub
hlt
mov
jmp
adc
cltd
les
popf
xlat
jae
lods
xor
xchg
ret
xchg
mov
lods
je
jl
push
stc
push
aaa
jp
cltd
or
mov
dec
sbb
ret
adc
fisubs
sub
add
jg
sahf
adc
dec
cmp
pop
sub
push
xchg
lock
pop
push
and
add
lock
cwtl
or
call
jmp
mov
out
clc
sti
ret
fs
mov
dec
or
push
mov
fwait
popf
addr16
orb
dec
cmc
fisttpl
xchg
inc
mov
js
mov
out
jl
xor
loope
lods
cmp
mov
les
push
les
cltd
imul
mov
aad
jnp
rcrb
inc
ret
jno
repz
xor
cmp
jecxz
outsl
pop
xchg
xchg
lock
outsl
and
cltd
xchg
xchg
xor
pushl
sahf
pop
xchg
pushf
fiadds
cli
test
push
stc
test
mov
push
and
ljmpw
scas
fwait
mov
lock
imul
mov
lods
xor
sbb
lret
push
insl
int3
leave
mov
shrl
cmpl
pop
mov
adcb
push
push
pop
lret
pop
aas
adc
ret
ret
inc
loope
mov
pop
mov
cli
dec
test
xlat
sub
cmpsl
xor
adc
push
xchg
or
sbb
leave
and
xor
cmp
rolb
push
xchg
mov
mov
scas
test
fstps
imul
mov
xchg
and
mov
xchg
lods
mov
push
mov
cmpsb
sbb
loopne
mov
sarl
pop
mov
or
mov
hlt
dec
inc
popf
push
xchg
push
insb
ret
out
outsb
jae
xchg
clc
fwait
sub
into
in
pop
adc
push
sub
jns
js
sub
pushf
mov
scas
loope
sub
fs
jecxz
ret
shll
lods
adc
or
test
dec
pop
lret
push
sub
ljmp
jge
pop
jb
mov
mov
lcall
sbb
out
lret
les
js
xor
mov
dec
ja
mov
and
insb
push
fs
sub
xchg
xchg
or
xor
xchg
mov
sub
insl
cwtl
xchg
aad
xor
outsb
push
pop
fwait
inc
lcall
or
je
das
jb
fstps
daa
add
ja
imul
stos
lods
mov
and
pop
sub
dec
and
ret
pushf
leave
cli
sti
mov
addb
mov
cltd
shrb
ror
mov
das
nop
jmp
mov
shll
inc
scas
sti
push
gs
push
movsb
add
mov
pop
addl
inc
mov
xor
mov
xchg
gs
ja
inc
mov
movsl
daa
aad
lds
cmc
pop
in
adc
xlat
and
xchg
gs
ja
inc
mov
movsl
daa
aad
lds
cmc
pop
in
adc
xlat
and
xchg
gs
ja
inc
mov
mov
pop
icebp
es
adc
add
xor
and
pop
jne
movsl
cwtl
xchg
mov
in
mov
rclb
mov
lcall
iret
pop
mov
add
inc
xor
dec
xchg
imull
cmpsl
pop
xlat
pop
fwait
aaa
out
daa
mov
iret
pop
mov
push
popl
mov
cmpsl
ds
dec
xchg
das
out
xlat
inc
aaa
sbb
pop
mov
push
popl
mov
out
xchg
orl
xchg
aaa
mov
jmp
mov
cmpsb
inc
push
movsb
movsb
cmp
ret
lock
aas
sbb
adc
adc
push
dec
clc
xchg
das
cwtl
adc
dec
mov
sbb
ficoml
jae
pop
xlat
lock
and
imul
in
xchg
push
mov
pop
dec
xchg
dec
inc
das
imull
xlat
sub
and
xchg
cmp
and
inc
jbe
ja
mov
outsl
mov
imul
out
stos
loop
inc
push
cli
inc
ja
cwtl
adc
add
pop
repnz
cmpsb
pop
imul
jp
das
mov
add
xor
mov
mov
mov
xchg
mov
adc
ret
movsb
aaa
mov
pop
pop
ja
addr16
push
sub
mov
cmpsl
sub
and
adcl
sbb
es
aaa
jg
cmp
cmp
sub
dec
lcall
mov
mov
pop
scas
push
adc
dec
push
fiaddl
repnz
jmp
cwtl
inc
mov
dec
test
mov
sbb
inc
jg
outsl
cmpsl
pop
xchg
dec
xchg
imull
out
xlat
rdseed
aaa
out
daa
fists
iret
pop
mov
push
popl
mov
cmpsl
pop
xchg
dec
xchg
imull
out
xlat
rdseed
aaa
dec
xor
mov
jno
add
arpl
shll
test
push
loope
push
push
ss
jle
jg
cmovno
stos
rcr
dec
jl
lahf
push
insl
cmp
sarb
test
arpl
add
mov
mov
sub
inc
dec
pop
mov
cmp
pop
dec
add
pop
push
pop
repz
mov
inc
jno
cmp
inc
jno
roll
ret
mov
testb
xchg
movsl
and
sub
adc
sbb
in
xchg
cmp
sub
push
add
andl
test
sub
sbb
xchg
out
lock
jno
mov
rol
je
sub
inc
xchg
adc
pop
imul
jbe
add
mov
repz
dec
jecxz
inc
mov
jl
scas
and
ja
cld
repnz
out
repz
push
mov
std
imul
popa
adc
sbb
push
jbe
xor
aas
stc
lods
hlt
xchg
aad
jge
inc
sbb
jo
or
ror
mov
dec
sub
shlb
push
pop
xchg
int
sar
arpl
add
mov
push
arpl
push
sub
add
mov
rorb
jb
out
mov
add
int
sti
xchg
adc
sub
mov
sub
call
scas
pop
inc
cmp
aaa
add
cs
xchg
sbb
xor
dec
pop
cmpsb
test
repz
jge
rolb
pop
ja
test
lea
push
loop
ficompl
inc
arpl
pop
dec
scas
rcrl
das
in
mov
loope
jp
stos
stos
mov
insl
movsl
into
ja
insb
cmp
adc
dec
or
adc
loop
jns
mov
or
jne
or
jbe
fpatan
mov
lcall
add
dec
fiadds
push
sbb
sub
add
scas
mov
xchg
pop
xchg
ret
pop
popa
inc
jnp
repz
jle
add
mov
imul
aaa
insb
cli
and
sbb
clc
dec
popa
out
jge
mov
cmp
rolb
sub
push
outsl
ja
jae
cld
add
mov
scas
lret
adcl
sbb
push
inc
icebp
sub
idivb
mov
mov
dec
sti
mov
sub
ds
or
xchg
nop
test
std
inc
mov
leave
and
fwait
loopne
js
sub
mov
addr16
popa
mov
outsb
data16
mov
out
je
mov
mov
xlat
adc
imul
pop
flds
inc
popa
mov
clc
cmp
mov
inc
cmp
in
pop
insb
outsb
xchg
lret
fdivrl
push
pop
imul
stc
inc
subb
mov
cmp
cmp
in
test
loop
ficoms
pop
jo
mov
jl
xchg
and
flds
jo
test
xchg
sub
fnstsw
sbb
jns
push
mov
jb
pop
mov
sti
aad
in
pop
or
leave
ret
jo
daa
fcmovnbe
inc
xor
dec
xchg
add
or
enter
clc
mov
sbb
js
daa
and
mov
lods
mov
leave
popf
or
cmp
outsb
enter
sbb
adc
shrb
fs
push
fdivp
rorl
aas
push
sub
sldt
int3
aaa
jne
sub
jle
pop
out
push
fmuls
fcmovnb
popl
jo
and
xor
bnd
popl
enter
inc
insl
and
test
lcall
out
ljmp
pop
lahf
loop
push
test
aam
cmp
jle
mov
sub
pop
out
popa
and
push
xchg
ss
add
dec
aam
in
repnz
push
loope
mov
inc
jo
mov
lcall
jmp
sbb
sub
testb
push
pop
push
aad
or
inc
adc
mov
inc
ss
add
xchg
jge
jmp
cmpsl
in
mov
test
aaa
xlat
mov
push
mov
aam
mov
daa
inc
rolb
inc
in
sbb
sub
pop
mov
jge
mov
fisubrs
sti
stos
push
push
add
cwtl
fnstcw
test
dec
ret
or
loope
loop
ja
pop
push
mov
xor
and
adc
xchg
ficomps
test
dec
inc
shrb
arpl
inc
push
insb
popa
ss
lods
scas
fmul
scas
and
pop
xchg
sub
lcall
or
insl
insl
fs
repnz
and
enter
ss
std
enter
push
sub
mov
inc
xchg
ror
cli
loope
js
inc
inc
adc
dec
mov
ljmp
dec
or
pop
xchg
mov
push
out
cmp
add
or
fsubs
xchg
lods
mov
enter
sbb
lret
jl
and
ret
xchg
enter
and
ret
add
adc
stc
test
mov
jnp
cld
dec
and
mov
aad
popa
cwtl
fsubrl
push
fwait
cmpsl
ljmp
jp
sbb
aaa
jns
push
sbb
adc
or
jae
push
scas
or
dec
dec
filds
js
cmp
mov
pop
cmpsb
daa
dec
push
inc
lret
ljmp
mov
test
jge
stc
je
push
out
je
xor
lea
and
jbe
mov
in
insl
int
adc
jl
ja
jno
leave
xor
dec
push
or
fcomi
mov
pcmpeqb
dec
lret
rolb
vmovq
sbb
or
or
jo
arpl
xchg
lods
push
cs
fstl
fiaddl
cmp
lcall
mov
pop
gs
pop
sub
mov
adc
fs
cmp
aam
xor
out
inc
mul
sub
mov
test
and
icebp
mov
rorl
pop
out
and
add
push
outsb
scas
cmp
xlat
aam
fiaddl
pushf
mov
mov
insl
repz
xlat
stos
push
stc
repnz
aam
mov
sub
cwtl
shlb
mov
xchg
cs
ljmp
lods
cltd
and
and
shrb
ljmp
orb
jno
leave
or
cld
ret
out
or
adc
sbb
mov
adc
cmp
int
andl
fbstp
lock
subb
jae
adc
andl
lds
lret
fisttpl
enter
pop
mov
fwait
cmp
shlb
call
jg
cwtl
or
pop
or
cmpsl
into
and
inc
into
or
mov
xchg
cmp
je
rorb
iret
or
shlb
and
xor
cmp
cmp
xchg
and
stc
mov
out
outsl
jl
sahf
test
adcb
jbe
or
ret
filds
enter
lret
mov
std
int3
push
xchg
fnstsw
inc
outsb
xchg
or
dec
sub
flds
add
fwait
es
inc
sar
adc
push
in
rolb
mov
mov
push
out
int
xor
push
lahf
add
push
mov
and
shl
dec
arpl
stos
fildll
pushf
jnp
pushf
dec
aaa
outsb
fucomi
out
movsl
push
sbb
mov
or
pop
cmp
push
aam
xchg
add
jne
icebp
mov
cmp
ret
jnp
push
aam
sub
push
test
inc
pop
cmp
push
xor
cmp
ljmp
nop
mov
enter
outsl
and
push
mov
insb
push
xor
test
mov
mov
sbb
mov
addl
into
aas
add
jae
out
loop
sbb
aam
cmpsl
lcall
xchg
push
pop
jbe
scas
lret
in
pop
or
and
pop
adc
mov
shl
mov
icebp
repz
mov
mov
xor
aad
cmp
dec
outsl
dec
mov
lcall
pop
dec
jge
addr16
xchg
lods
int3
cld
insl
or
push
jle
push
loope
sahf
in
push
cmpb
mov
int
xor
xchg
inc
jns
jnp
ds
pop
mov
ret
flds
fstps
loop
test
push
pop
in
popf
movsb
adc
add
add
ret
mov
xchg
mov
outsb
jbe
push
dec
xchg
mov
sub
stos
xchg
jg
loopne
popf
sbb
cs
sub
test
mov
push
in
mov
xchg
daa
jb
xor
fxch
jge
or
push
push
or
pop
pop
test
sti
fsub
mov
mov
iret
add
mov
cmp
cmp
jbe
or
dec
sarb
jg
pop
sbb
pop
dec
in
fildl
pop
pop
lret
in
adc
adc
dec
clc
sub
cmp
aad
iret
pop
jg
es
dec
mov
daa
mov
pop
xlat
or
mov
cmp
xchg
fsqrt
push
push
ret
lods
call
inc
dec
mov
push
add
pop
or
roll
test
cltd
clc
jecxz
test
in
mov
xor
rorb
movsl
jmp
cmpsl
xlat
mov
std
push
mov
ficompl
pop
cltd
out
mov
push
sub
data16
arpl
iret
test
cmp
out
cmp
fmull
pushf
fadds
xor
push
leave
sub
add
xor
cmp
enter
mov
fnstcw
cmc
push
jb
adc
mov
stos
loopne
adc
rorl
adc
xor
jnp
je
jecxz
pop
pop
pop
adc
sub
push
enter
adc
es
jnp
sbb
jecxz
mov
jns
mov
mov
shl
lahf
inc
push
popf
scas
push
cs
jbe
iret
sbbb
xor
mov
sub
gs
leave
mov
lock
test
hlt
pop
sub
push
movsb
int
cmp
out
xorb
es
out
repz
rcll
fnsave
jmp
scas
push
push
and
test
mov
scas
jle
jle
out
dec
xchg
fldenv
repz
loopne
jmp
loope
and
jmp
sbbb
mov
loop
jne
scas
mov
and
mov
pop
adc
inc
div
sbb
std
push
mov
lcall
test
push
jle
mov
inc
sbb
push
inc
sbb
sbb
inc
mov
fcoms
jge
adc
mov
wrmsr
in
cmp
inc
cs
int3
mov
movsl
fmul
jae
pop
mov
pop
pop
pushf
sbb
mov
rcll
imul
and
push
xchg
and
mov
dec
jecxz
xchg
movsl
push
loopne
pusha
je
clc
out
stc
mov
sbb
outsl
jb
dec
lods
sbb
mov
and
sub
shll
sbb
xchg
cmp
mov
xchg
cmc
push
cmc
lea
sbb
mov
dec
repnz
mov
cld
loopne
int3
sti
mov
adc
push
test
fildll
mov
mov
sbb
push
mov
scas
pop
fldl
xchg
scas
rol
movsb
jns
jbe
push
mov
push
pop
repnz
xor
adc
mov
push
lcall
and
mov
pop
mov
jg
push
mov
test
mov
or
idivl
in
flds
mov
leave
test
or
loop
sbb
xchg
and
call
ljmp
pop
lock
mov
movsl
dec
push
fdivrs
imull
jnp
jo
das
xor
mov
stc
stc
punpckldq
insl
mov
stc
mov
cmc
stos
mov
dec
push
enter
inc
jg
inc
out
ja
xchg
push
pop
adc
aad
fstpl
ljmp
data16
bound
sbb
inc
hlt
call
shll
mov
rolb
sbb
sub
push
lods
xchg
lea
push
mov
es
jae
lods
inc
xchg
xchg
pop
sbb
push
stos
idivl
jg
hlt
loopne
mov
ds
inc
stos
inc
aas
push
ret
pop
cmp
pusha
std
mov
or
iret
mov
xor
mov
mov
ss
in
imul
cltd
pop
inc
jl
in
jle
movsl
adc
popf
push
mov
scas
pop
mov
cs
jg
in
mov
xor
clc
jno
or
push
mov
out
cmpsb
cmpsl
sbb
ret
lahf
mov
popa
dec
xor
inc
mov
jbe
adcb
xchg
jbe
test
shll
mov
mulps
fld
xor
outsl
outsb
inc
int3
dec
xchg
data16
je
push
orl
cltd
sub
je
frstor
inc
inc
testl
mov
pop
mov
push
jae
dec
mov
sbbl
push
and
inc
push
rol
mov
loope
lahf
inc
gs
in
std
imul
outsb
push
or
fidivs
jns
push
cwtl
jnp
pusha
jmp
fimull
sahf
push
inc
repz
hlt
rorb
test
xchg
mov
xor
or
adc
mov
pop
loop
jmp
lods
lds
in
ss
sub
inc
cmp
fcomps
repnz
adc
pop
mov
mov
hlt
mov
mov
movsl
xor
out
arpl
cld
push
dec
cli
inc
xchg
loopne
mov
outsl
inc
cld
adc
jnp
and
mov
inc
faddl
sahf
mov
xchg
daa
sbb
inc
pop
mov
ds
bound
rolb
xor
pop
bound
and
das
pop
test
stc
and
jecxz
and
cld
popa
fsubl
push
cwtl
mov
cmp
adc
mov
xor
adc
lods
shl
pop
sub
cmpsl
out
lret
cmp
icebp
test
mov
cmp
mov
push
mov
outsb
sub
call
sbb
adc
mov
cmp
lock
adc
icebp
xor
lret
outsl
dec
xor
jbe
cmp
push
gs
cs
loop
jb
cmpsl
out
test
sub
arpl
fisubs
cwtl
cmp
jmp
stos
add
push
add
pop
or
imul
dec
or
and
stos
mov
imul
jb
fisubl
lcall
repz
adc
dec
add
sub
ljmp
sub
inc
and
or
lock
sub
and
aad
scas
sbb
int
lcall
jne
or
inc
xor
xorl
mov
enter
add
sbb
pop
imul
xor
into
push
mov
pop
nop
push
jnp
clc
push
dec
push
cmp
ds
js
loope
and
push
rorl
mov
jb
inc
jbe
shl
xor
mov
cltd
adc
xchg
mov
outsb
in
dec
arpl
sahf
aaa
ja
inc
out
and
stos
mov
push
mov
daa
loop
sarl
xor
sbb
push
pop
adc
outsl
out
push
xchg
pop
dec
test
xlat
push
pop
out
je,pt
jecxz
xor
scas
call
push
sbb
lods
push
fstpt
xchg
add
std
jcxz
mov
jns
lods
jb
mov
xor
jo
mov
sub
dec
aaa
lods
cmpb
xlat
or
dec
add
gs
gs
daa
inc
js
stos
or
lahf
call
xor
stos
les
push
lds
pop
mull
sub
lahf
jecxz
push
arpl
mov
bound
xor
fmuls
xchg
out
dec
xlat
es
push
jg
mov
out
aas
and
in
cmpsb
je
cwtl
rcll
shrl
rolb
out
adc
and
add
iret
test
cmp
inc
out
rcrb
imul
mov
mov
cmpsl
scas
mov
push
mov
inc
ja
dec
and
add
or
lret
and
iret
sbb
data16
jle
gs
test
xchg
call
int3
imul
or
push
inc
gs
mov
iret
rorl
add
pop
inc
adc
mov
cmp
repnz
mov
push
xor
test
es
sub
cmp
movsb
jnp
call
cltd
popf
cs
cmp
push
lahf
stos
xchg
mov
adc
dec
sbbb
lods
push
mov
mov
outsl
cmc
adc
aas
dec
push
in
pop
inc
sub
and
dec
cmp
mov
test
ret
nop
inc
cmp
int3
pusha
pop
pop
push
aad
xchg
jp
jnp
xlat
and
test
xor
push
xor
mov
lret
xchg
or
push
jb
and
out
mov
ljmp
xchg
mov
jno
daa
jecxz
sahf
mov
xchg
xchg
or
mov
or
sub
and
or
aam
jge
ret
out
xchg
xchg
outsl
inc
xchg
pusha
dec
jge
sahf
mov
fdivrs
or
cmpsb
repz
out
mov
arpl
arpl
add
sbb
jg
fnstcw
into
stc
gs
xor
cmp
sub
adc
in
lahf
dec
cmp
ficoml
imul
push
mov
mov
mov
vprotb
jno
pop
pop
stc
sbbl
jae
outsb
ret
into
jecxz
cmp
mov
jle
test
push
jmp
js
imul
test
dec
mov
jecxz
xchg
and
add
add
add
stos
mov
movsb
push
les
outsb
jne
inc
dec
mov
sub
cwtl
mov
sbb
in
outsb
adc
aaa
sub
fcmovb
push
push
xchg
add
lods
mov
adc
imul
mov
stos
xor
orl
or
jo
dec
dec
adc
push
jl
jmp
icebp
ds
and
test
ret
jbe
jge
jl
out
pop
mov
daa
loopne
adc
xor
lock
cmp
inc
not
cmp
popf
fdiv
fidivrl
jo
jnp
lret
cwtl
inc
push
lret
sub
xchg
jl
and
js
mov
or
mov
out
adc
add
mov
scas
dec
pop
jecxz
inc
push
xor
push
lret
xchg
xchg
rclb
std
add
movsb
insb
sti
cwtl
add
mov
daa
testb
rcrl
ljmp
int
cmp
repz
adc
imul
add
in
push
sahf
gs
leave
insb
inc
fsubp
mov
scas
jae
shll
sahf
stos
mov
mov
jecxz
sbb
sub
movsl
sub
cmp
vshufpd
dec
out
jb
dec
sahf
mov
dec
in
int
sbb
fwait
xchg
pop
or
xchg
addr16
stc
sub
repz
dec
sbb
mov
mov
and
dec
arpl
iret
inc
sbb
adc
fcomps
aad
aaa
insl
cmovo
pop
xchg
jle
jb
push
sbb
inc
dec
leave
es
fcmovu
cmpsb
and
cmc
repz
xchg
das
movsl
push
arpl
mov
jge
add
push
mov
inc
leave
xor
mov
pop
je
sbb
js
in
sub
add
push
in
pop
sbb
xchg
jge
push
pop
loop
bound
mov
nop
ja
mov
lret
repz
mov
and
adc
cmp
mulb
or
mov
push
cmp
ret
shlb
testb
inc
xor
nop
dec
push
and
adc
add
adc
fdivs
mov
cmp
mov
cmpsl
mov
xchg
xchg
iret
dec
loope
xchg
in
pop
nop
mov
pusha
mov
mov
or
push
xchg
mov
add
push
add
push
xchg
push
hlt
divl
das
ljmp
and
push
dec
mov
clc
lret
xor
outsl
shlb
daa
xchg
adc
pop
arpl
pop
hlt
mov
push
jp
in
adc
je
mov
aas
push
push
insb
push
adc
jae
std
popa
xor
mov
loopne
lret
sti
in
xchg
cwtl
popf
mov
shr
cmp
mov
xchg
mulb
xchg
pop
sub
pop
add
xchg
sbb
repnz
dec
cmp
add
dec
jo
dec
inc
push
jbe
ficoms
push
int3
dec
dec
and
cmpsb
jle
sarl
in
out
xor
dec
mov
push
xchg
dec
sbb
inc
ljmp
push
jbe
mov
pop
in
xchg
iret
sub
fxam
mov
test
mov
push
jp
mov
popa
in
iret
stc
mulb
fcmovu
add
cmp
inc
sbb
insb
push
loopne
inc
daa
cwtl
push
iret
pop
mov
push
popl
mov
cmpsl
pop
xchg
dec
xchg
imull
out
xlat
rdseed
aaa
out
daa
fists
iret
pop
mov
push
popl
mov
cmpsl
pop
xchg
dec
xchg
imull
out
xlat
rdseed
xor
daa
mov
ja
addr16
push
dec
inc
jg
outsl
cmpsb
scas
xchg
dec
xchg
idivb
out
xlat
out
jmp
mov
test
out
add
xlat
jg
nop
or
dec
jg
sbb
sub
cmp
sub
repz
int
mov
mov
add
adc
int
ffree
sub
repz
mov
lods
push
frstor
jae
ret
in
adc
and
sarl
subl
mov
add
jae
add
pop
fstpl
lahf
dec
dec
stos
sbb
and
pushf
mov
fdivs
jbe
lds
pop
mov
mov
jl
xchg
sbbb
sbb
pushf
mov
je
mov
das
in
xchg
loopne
lods
sub
pop
inc
arpl
pusha
push
in
outsb
cmp
ret
cmp
mov
movsb
insb
xchg
ret
into
jbe
rcrl
xchg
mov
int
ret
or
fisubrl
and
fisubrs
jb
pop
push
std
in
add
xor
mov
js
inc
sbb
cmp
mov
push
clc
sahf
cmp
mov
cvtps2pi
cmp
subl
mov
lods
push
mov
add
adc
and
xor
fs
add
leave
arpl
or
add
pushf
cmpsb
sub
lahf
outsl
andl
pop
es
enter
repnz
inc
lea
gs
js
insl
xchg
jge
dec
mov
inc
lods
push
mov
add
adc
and
xor
ret
sub
repz
mov
lods
push
mov
add
adc
and
xor
ret
sub
fcompl
mov
inc
fwait
xor
pusha
adc
pop
xchg
clc
repz
in
popa
shrb
out
lcall
stos
ljmp
cmpsl
aas
xchg
cmpsb
jns
dec
sub
push
push
hlt
jo
cmpsb
mov
adc
pushl
mov
push
xchg
xchg
jecxz
mov
push
shrb
jns
or
xor
cmp
dec
mov
mov
pop
rolb
xchg
fs
mov
jo
test
daa
sbb
icebp
adc
adc
stos
add
mov
push
fnstenv
call
pop
jns
sub
pushf
push
cmpsl
push
dec
push
jp
imul
push
in
data16
aad
jl
repnz
pop
adc
dec
std
aas
add
add
cmp
outsl
js
inc
shll
gs
jnp
or
lods
movsb
pop
shr
int3
mov
out
lock
test
dec
push
arpl
lcall
jle
mov
jo
outsl
push
mov
cmpsl
cmp
pop
push
loop
dec
not
sbb
test
cli
mov
aaa
or
aad
lahf
dec
lods
test
jle
inc
sti
shlb
lcall
add
mov
push
pusha
pop
orb
aas
push
cmp
mov
cli
jecxz
imul
sarb
adc
dec
push
sub
and
icebp
hlt
mov
or
test
fmul
mov
add
int3
mov
jne
push
mov
cmp
adc
std
jae
test
flds
sbb
and
inc
xor
int
fcmove
out
push
ds
and
out
push
insb
xor
dec
fmuls
sbb
ljmp
cmp
xlat
sbb
add
stos
test
jle
stc
or
adc
test
lds
lods
test
fldt
cmp
in
cld
es
inc
sub
mov
ror
rcrb
cmc
imul
leave
mov
ficoms
int
mov
cmp
inc
mov
mov
cli
lea
pop
dec
inc
movl
adc
testb
stos
ss
mov
cmpsb
jecxz
xor
sub
filds
mov
xchg
pop
je
dec
push
es
jg
adc
test
insb
push
jnp
hlt
mov
mov
fbstp
cmp
add
mov
sub
clc
js
adc
fisttpl
jae
push
out
sub
mov
and
cmpsb
push
or
insb
and
hlt
sarl
sbb
cmp
out
aaa
mov
imul
dec
cmpsl
mov
rorb
mov
adc
icebp
dec
jbe
mov
sub
ja
inc
insb
xor
mov
shll
and
in
lahf
add
loopne
inc
loope
not
adc
es
push
mov
stos
xor
fucomp
imul
dec
mov
xchg
sub
lret
mov
and
scas
pushf
das
ja
hlt
test
mov
xor
mov
scas
xor
or
dec
push
test
and
cltd
xchg
popf
push
or
loope
inc
and
sbb
fs
push
xchg
fs
sub
shll
jnp
and
jl
shlb
and
dec
in
push
push
out
xchg
test
xchg
sub
inc
mov
lods
lock
ds
std
test
sub
cmp
add
outsl
mov
dec
mov
adc
mov
jbe
cli
push
int3
loopne
adc
push
insb
clc
aam
xchg
xlat
pop
cltd
mov
in
dec
mov
pop
sbb
or
dec
lods
fldl
push
cmp
pop
and
adc
jp
pop
push
jno,pn
xor
sbb
cmp
pop
addb
cmp
inc
mov
leave
cld
jle
sub
inc
ja
adc
cmp
adc
mov
sbb
cmc
push
outsl
cmp
inc
popf
pop
push
adc
xor
fnstenv
lods
jns
add
pusha
lahf
test
fucomip
repz
lahf
movsb
in
cmp
jo
mov
bound
cmc
stc
mov
adc
sbb
cmpsl
push
jmp
push
sub
sub
sub
std
xor
push
imul
fists
mov
test
les
mov
leave
mov
rcll
out
xlat
sbb
jmp
aas
inc
into
lods
mov
cmp
outsb
fsts
jl
mov
mov
mov
test
push
xchg
cmp
mov
ficoms
xor
cmp
pop
test
sub
inc
fstps
icebp
daa
adc
notb
adc
sbbb
push
rorb
test
lea
or
mov
pop
mov
lahf
test
add
out
pop
fwait
mov
lock
arpl
and
jnp
push
js
xor
mov
xchg
sbb
xchg
xchg
xor
jae
push
mov
cmc
les
dec
mov
cmc
sub
push
decb
imul
and
xchg
roll
lock
xchg
sahf
decl
mov
movsl
cmc
inc
adc
mov
pop
mov
je
in
push
sbb
daa
add
hlt
jp
les
sub
xchg
sbb
sub
decb
in
push
and
cwtl
rclb
inc
in
mov
mov
daa
lret
nop
push
push
sub
roll
push
repnz
scas
jmp
or
pop
cwtl
inc
xor
mov
imul
push
xor
mov
inc
inc
sahf
addl
add
mov
jnp
iret
aam
mov
aad
cmpsl
aad
cmp
jns
mov
push
inc
lea
mov
insl
mov
mov
jle
pop
sub
mov
mov
push
loopne
in
in
outsl
insb
push
stos
sub
movsb
inc
data16
pop
mov
pop
or
aam
dec
dec
cmc
out
mov
dec
fmuls
arpl
pop
mov
aam
loop
cmp
ficompl
outsl
bound
adc
xor
in
pop
imul
xchg
mov
add
or
mov
shrl
xor
fidivl
orl
and
add
nop
mov
xchg
adc
cli
inc
mov
loopne
ss
cmp
pop
inc
add
add
scas
push
js
xor
sbb
jno
mov
mov
jb
outsb
lea
jecxz
aas
xorb
push
js
int3
cmp
lret
fldz
xor
inc
mov
jb
mov
filds
cwtl
cmp
cmp
jb
inc
xchg
addr16
sbb
jae
hlt
sbb
movsb
push
into
incl
lods
add
test
mov
jmp
add
lods
aas
jmp
xchg
inc
dec
mov
jge
mov
out
out
push
xor
daa
stos
pop
xchg
pop
lcall
repz
repnz
xchg
movb
fs
addr16
inc
sbbl
or
iret
mov
and
loope
and
mov
pusha
mov
std
in
pushf
jl
mov
adc
adc
inc
movsb
into
dec
out
pop
xor
call
mov
jo
cmp
adc
fdivrs
out
scas
enter
fwait
cmpb
inc
inc
xchg
mov
fstpl
xchg
sub
or
dec
add
mov
push
and
cmp
scas
das
sbb
outsb
xor
imul
ljmp
mov
sub
data16
mov
sbb
in
mov
inc
add
jbe
jp
mov
jmp
mov
sahf
push
test
cmp
loopne
out
popf
cmc
jns
cmp
push
aad
loope
mov
into
push
dec
loope
and
test
mov
dec
frstor
test
xchg
mov
cmc
xor
mov
sti
push
gs
jge
call
aad
jp
fsts
dec
enter
push
fcmovu
mov
mov
std
mov
leave
pushw
sbb
xchg
sub
sub
jp
and
rorb
sbb
cmpsl
sub
lods
and
cmp
iret
dec
xlat
adc
test
dec
subb
sub
mov
nop
shrb
lahf
push
pusha
shll
lods
jge
pop
fmul
fistps
pushf
outsl
cld
filds
aad
pop
enter
lret
pop
aaa
mov
mov
add
push
sbb
jbe
enter
xor
jecxz
mov
sti
dec
cmp
push
cmp
sahf
cmp
outsb
data16
dec
in
add
push
out
in
es
out
mov
rcr
sarb
cmpsl
mov
or
and
mov
addr16
inc
push
fmul
loop
cmpsl
out
cmove
jb
addr16
pop
icebp
rcrb
ds
and
mov
inc
ret
inc
insl
mov
cld
nop
mov
inc
xchg
popa
dec
jmp
mov
mov
xchg
mov
sub
adc
lret
test
out
cmpsl
mov
mov
mov
jns
ds
and
sub
mov
clc
fisubrs
ljmp
lcall
es
mov
in
push
mul
jp
xchg
outsb
cmp
lret
dec
sbbb
mov
mov
mov
mov
push
jmp
loop
jp
mov
jge
ret
jge
cmp
lret
mov
inc
push
xor
or
xchg
or
movsl
cmpsb
dec
xchg
into
fstpl
mov
jl
shrl
mov
or
out
pop
or
pop
xchg
pop
scas
jp
sub
jle
xor
pop
inc
aad
xor
ljmp
cmpsb
and
mov
push
movb
mov
dec
filds
orb
cmp
imulb
dec
fdivs
mov
mov
push
sbb
out
xchg
jae
mov
mov
int3
mov
pop
or
out
ficoml
xchg
xor
add
rcrl
mov
aam
out
sub
cmp
insl
sub
push
movl
pop
fldt
add
sbb
mull
cmpsl
nop
jmp
fldenv
pop
dec
sti
imul
push
add
ljmp
cmp
push
in
jbe
in
lret
push
jp
sub
mov
xchg
fidivl
pop
das
and
inc
mov
sbb
ss
lea
iret
push
aas
dec
pusha
in
loope
repz
in
jno
xchg
cmpsb
popa
in
inc
pusha
pop
into
popa
dec
xchg
test
mov
push
pop
and
fidivs
arpl
addr16
mov
cmp
xor
add
in
jno
mov
add
test
inc
jecxz
fcomp
and
cli
xchg
in
push
imul
imul
xor
into
jne
add
cli
pushf
xchg
aam
and
adc
repz
xor
jg
icebp
repz
inc
dec
filds
mov
je
bound
mov
pop
out
movsl
inc
mov
pop
adc
sub
in
xchg
inc
jp
cwtl
test
cld
or
xor
mov
push
add
or
roll
ljmp
insl
mov
or
cmpsb
inc
sti
add
add
xchg
les
ret
and
popa
inc
cmp
mov
cmp
cmpsl
dec
sub
out
xchg
test
xchg
push
jecxz
aaa
sahf
iret
ds
adc
push
lea
sahf
cmp
cmc
ljmp
jl
pop
cmp
outsb
mov
cld
fwait
fwait
jno
xchg
clc
cmp
push
push
imul
fidivrs
pushf
pop
aas
dec
cmp
arpl
loope
dec
xchg
jecxz
addl
das
dec
dec
pop
enter
and
into
and
out
sub
push
jne
fs
and
cli
pop
rcrl
sbb
xor
mov
push
adc
sbb
sub
idivl
xchg
dec
lock
pushf
arpl
pop
into
insl
or
cmp
adc
out
inc
es
sub
mov
push
mov
push
outsl
dec
subb
insw
xlat
movsb
lcall
aaa
gs
sbb
or
xchg
pop
ret
mov
jp
sub
or
mov
cmp
sbb
roll
mov
fimuls
mov
jl
call
addl
daa
sub
pushf
das
ret
enter
inc
mov
icebp
daa
or
sti
mov
or
mov
add
sub
jbe
mov
mov
fdivrl
mov
dec
mov
popa
xor
inc
cmpb
popf
inc
imulb
hlt
sbb
mov
data16
cmp
loopne
add
shlb
push
sbb
ret
rolb
adc
or
rcrb
fsts
shrl
sbb
fldlg2
pop
mov
adc
fidivl
adc
inc
loope
enter
lock
fsubl
pop
add
cmp
cmp
sbb
inc
pop
cmpl
xchg
pop
sbb
je
inc
adc
iret
adc
push
es
xchg
imul
adc
cmp
dec
dec
or
pop
xlat
orb
mov
or
es
push
rcrb
sbb
adc
mov
jle
xor
nop
xchg
or
xchg
arpl
or
fiaddl
push
pushf
sti
out
adc
in
mov
sub
in
fidivs
idivb
fisubs
and
lds
pop
pusha
test
mov
lods
enter
jp
fcmovb
iret
mov
mov
jge
mulb
ss
fnstenv
icebp
sbb
insb
mov
fldt
std
repnz
sbb
ss
jo
in
xchg
mov
imul
popa
xchg
cmpsb
cmpsb
and
mov
push
sarl
mov
push
addr16
std
push
mov
pop
in
in
lcall
add
xorl
loope
rolb
mov
sub
int3
clc
mov
push
lods
mov
and
pop
jns
push
cs
or
push
jno
aas
cs
icebp
push
out
lret
sub
pop
adc
out
xchg
dec
loop
ja
or
cwtl
adcl
and
addb
das
lds
icebp
lea
pop
sahf
addr16
fistpll
lea
out
xchg
adc
inc
test
stc
pusha
pop
ljmp
inc
jbe
pop
pop
inc
xor
ret
cmp
push
bound
push
enter
or
jns
mov
cmp
bswap
ds
int
mov
adc
test
stc
or
add
fimuls
adc
aad
xor
aad
sarl
push
push
dec
pop
push
inc
sarl
orl
push
sti
pop
xor
insb
mov
pusha
push
lods
ret
mov
dec
xchg
divl
xchg
imul
ja
in
int3
daa
and
push
and
outsb
das
and
leave
lock
ret
xchg
test
fxch
jne
scas
aam
jbe
sub
in
fs
call
and
hlt
cmpsl
and
addl
mov
mov
fistl
outsl
addl
or
out
adcl
xchg
inc
lea
sub
shlb
mov
fimuls
jle
sub
mov
inc
nop
jmp
pop
in
jnp
mov
lret
test
pop
xchg
and
sbb
inc
fcmove
sub
daa
pushf
adc
sub
test
pop
je
pop
addr16
jne
adc
stc
push
jae
jg
in
pop
data16
add
outsb
aaa
dec
call
enter
jecxz
mov
lahf
fs
dec
mov
and
call
inc
pop
test
add
dec
ljmp
or
sbb
bound
xchg
xchg
and
or
cmp
in
push
or
int3
push
lret
jmp
push
aad
inc
cmp
jbe
in
jmp
enter
sub
int3
lea
nop
insl
mov
sti
jp
mov
test
push
or
imul
outsl
and
stos
stos
cmpsb
adc
adc
in
cmpsl
shlb
les
rcrb
dec
jl
leave
and
push
iret
ret
loop
pop
adc
add
and
mov
std
inc
pop
push
mov
andb
xchg
mov
jecxz
sub
fimull
stc
mov
leave
jg
out
jl
mov
rorb
sbb
fisubrl
inc
in
xchg
sti
divb
and
lods
cmp
dec
dec
adc
mov
jg
flds
push
je
enter
sahf
jne
mov
adcl
mov
int3
adc
jle
mov
xlat
mov
sub
fwait
pop
movsb
rorb
jecxz
in
outsl
dec
push
or
dec
cmp
jo
jae
mov
stos
insl
out
leave
shrl
cltd
mov
xor
push
lds
lds
stos
or
cmc
into
dec
jae
dec
outsb
add
dec
sub
mov
add
std
xchg
jns
scas
stc
movsb
mov
cmp
in
es
push
cmp
pushf
rclb
pop
mov
xor
push
scas
push
insl
movsb
test
jns
push
test
mov
sub
mov
pop
jb
bound
mov
and
insl
jae
lret
and
push
push
mov
jno
mov
jmp
gs
push
fwait
mov
scas
insl
test
xor
add
mov
push
mov
ss
mov
push
ljmp
insl
scas
xchg
mov
and
pop
cmp
push
into
push
das
test
cmp
mov
mov
iret
adc
and
inc
mov
cmpb
movsb
inc
fdivl
pushf
add
or
in
or
mov
inc
adc
mov
addb
js
jo
mov
pop
test
jno
imull
cld
pand
mov
test
arpl
jl
addr16
aas
lea
pop
mov
xorl
mov
jae
xchg
jnp
das
cmp
pop
arpl
scas
xor
jmp
mov
int3
cmp
adc
add
ljmp
jl
ret
lea
jns
dec
leave
xchg
push
fucom
push
and
imul
shlb
xchg
mov
jl
mov
loop
fwait
mov
scas
loope
push
jle
cmp
jb
repnz
jg
add
mov
in
mov
jnp
adc
push
and
repnz
dec
cmp
sti
sub
dec
pusha
loope
xchg
das
push
or
cltd
jge
adc
pop
add
shl
add
cld
pop
xor
lock
rorl
sbb
cs
outsl
ja
push
and
repnz
jns
mov
sub
push
pop
loop
mov
rorb
push
les
out
sbbl
std
repz
inc
adc
bound
lret
dec
jo
inc
adc
shrl
or
out
push
movsb
cmp
cmpsb
data16
movsl
imul
pop
mov
imul
jbe
jl
cmp
pop
or
hlt
gs
sbbl
and
sub
repz
xchg
mov
xor
push
rcl
sbb
test
pop
lods
push
add
daa
xchg
fnstsw
mov
xor
call
adc
fsubp
mov
stos
jle
xchg
add
fisubrs
imul
xor
ljmp
in
test
or
push
push
push
pop
aas
mov
xchg
mov
pop
mull
or
ja
push
fcoms
orl
ja
mov
mov
xlat
in
pop
fisubs
outsl
mov
inc
cmpsb
mov
fcomi
fs
jo
stos
fisubl
fsub
add
stos
mov
ret
push
jno
lock
dec
mov
dec
inc
fdivrs
fs
fistpl
jecxz
sbb
int
std
dec
imul
xlat
pop
sbb
fildl
jp
mov
bt
sub
push
sarb
sbb
addl
ljmp
outsb
stos
call
mov
jo
lods
outsb
test
sbbl
lods
mov
cmp
in
das
andl
cld
inc
and
inc
pcmpgtd
lahf
fmull
aaa
lea
pop
repz
arpl
xor
push
insb
out
fcompl
adc
xchg
xchg
cmpsl
pop
push
int
adc
mov
fildll
inc
mov
rcrl
push
add
sbb
dec
movsb
pushf
mov
push
repnz
pop
xor
sbb
not
daa
jmp
call
roll
mov
xor
adc
adc
mov
call
lea
xchg
cmp
xlat
loop
cmp
subl
mov
lods
push
mov
add
adc
and
xor
ret
sub
repz
mov
lods
push
mov
add
adc
and
xor
ret
sub
repz
mov
sub
jae
add
adc
and
xor
ret
sub
repz
mov
lods
push
pop
leave
lea
jae
arpl
push
xor
adcb
mov
pop
mov
and
pushf
adc
and
xor
inc
xchg
push
xorb
mov
mov
adc
add
xor
pop
adc
adc
and
loop,pt
pusha
andb
mov
mov
adc
add
xor
and
shlb
loope
orb
aas
aad
fsubl
shr
and
or
xor
pop
and
jmp
test
xlat
push
xchg
mov
add
fsubrs
or
ljmp
sub
out
xchg
xchg
inc
dec
pusha
mov
repz
insb
dec
push
sbb
add
push
subb
ja
test
dec
sbb
lods
andb
sbb
pop
xchg
xor
pop
pop
icebp
fmull
jbe
add
mov
sbb
out
aas
lcall
add
shl
rcll
mov
pop
push
bound
aas
adc
lret
clc
addr16
popf
xchg
pop
or
add
mov
mov
push
mov
jb
xlat
adc
add
xor
and
rorb
ret
sub
pop
xchg
dec
cmpb
lret
in
push
cmc
add
jb
bound
je
jbe
stos
jl
push
xchg
push
xchg
inc
shll
in
out
aaa
icebp
daa
iret
pop
shlb
rorb
pop
mov
mov
inc
cld
cmp
in
cld
or
add
pop
mov
add
xor
and
rclb
ret
xor
inc
xchg
push
andb
mov
mov
adc
add
xor
and
rclb
ret
xor
inc
xchg
push
andb
mov
pop
lahf
ret
mov
loop
xor
pop
int3
mov
xchg
or
xlat
jo
insb
dec
adc
lahf
push
sarb
adc
scas
xchg
xor
mov
nop
mov
pop
lahf
popa
leave
pop
and
ret
mov
push
dec
and
mov
mov
xchg
or
sarl
pop
jns
push
jb
cmp
push
adc
jp
and
sbb
push
jb
das
adc
lret
stos
out
mov
out
fwait
mov
jmp
dec
lret
movsl
icebp
inc
movsl
dec
sbb
xlat
push
add
jecxz,pt
mov
iret
sbb
adc
and
mov
lock
adc
jno
push
stos
movsb
outsb
jno
psrld
push
lea
ret
push
pop
popa
dec
push
jl
or
mov
push
inc
push
pusha
mov
jp
and
out
jmp
test
js
inc
js
mov
mov
iret
inc
push
mov
icebp
cs
imul
rcrl
push
push
in
xchg
dec
lea
sbb
mov
xchg
pop
pop
es
leave
cld
ret
mov
dec
ficompl
lds
mov
aas
stos
sbb
out
imul
xor
lods
fwait
and
pop
es
fsubs
in
pop
xlat
stc
cmc
adc
and
iret
repnz
int
and
repnz
test
cmp
cmp
mov
pop
mov
jae
pop
jl
pop
stc
icebp
adcl
xor
imul
stos
out
pop
xor
xor
ss
fdivs
adc
pop
pop
pop
test
push
pop
les
aaa
push
pusha
push
jno
mov
push
add
inc
fs
sbbb
shl
test
iret
call
out
cmp
cmp
sbb
or
jae
push
or
fs
push
dec
xor
rcr
lods
pusha
jns
lcall
imul
js
mov
mov
or
sub
mov
mov
hlt
cwtl
sbb
cs
out
or
jmp
mov
jno
inc
cmp
out
int3
sub
arpl
pop
dec
inc
lahf
sbb
pop
lock
xchg
enter
pop
out
inc
aas
push
sbb
js
outsl
inc
and
in
mov
lods
add
lods
and
pop
jecxz
enter
test
push
pop
sbb
imull
mov
mulb
jmp
or
mov
or
cmpsb
lea
push
adc
testb
adc
clc
mov
pusha
in
xor
mull
test
insl
sub
insb
cmp
dec
daa
lock
jmp
sub
jno
jmp
enter
inc
out
pop
testb
mov
out
pop
xchg
pop
test
cwtl
jbe
inc
mov
mov
rcll
mov
lea
test
lds
adcl
sub
gs
fists
or
push
dec
sar
fidivl
sti
dec
sub
cld
mov
lcall
xchg
das
out
mov
dec
sbb
jge
out
adc
sub
mov
ljmp
mov
insl
rcll
das
inc
pavgb
aam
movsl
mov
addr16
les
mov
in
or
repz
or
xchg
lcall
adc
xchg
aad
push
ja
dec
decl
loope
rcl
rcrl
out
daa
sbb
xchg
stc
mov
add
push
or
cmpsb
push
or
or
jmp
loopne
xchg
cmp
or
in
out
mov
int
dec
sarb
lea
ret
pushf
xor
popf
fadd
xchg
call
jecxz
cltd
add
sbb
sbb
push
mov
sub
ds
adc
js
xchg
nop
insl
jbe
clc
aam
xchg
cmp
lahf
mov
mov
in
mov
imul
gs
pop
or
popf
mov
test
inc
call
call
icebp
sub
cmpsb
fstps
add
test
ficompl
outsb
iret
push
into
in
xor
aas
cmp
test
pop
sbb
mov
test
mov
pushw
stos
mov
decl
sbb
out
cmp
and
sbb
pop
sub
cmpsl
repnz
lods
mov
mov
cmpsl
adc
jno
div
mov
push
fdivl
or
negl
iret
into
sbb
fnstenv
sub
push
or
pusha
sbb
mov
and
roll
sub
pop
std
test
fstl
push
add
mov
lods
out
push
lret
adc
clc
inc
test
push
into
jbe
imul
sbb
xor
movsb
sbb
aaa
jle
stos
inc
mov
mov
xor
mov
xor
pop
mov
sub
iret
ds
jle
adc
mov
repz
and
or
adc
lcall
add
test
push
repnz
jmp
bnd
xchg
push
sub
adc
repnz
mov
pop
in
xchg
or
jo
dec
sbb
push
mov
xchg
fldcw
jne
pop
inc
inc
lret
dec
stc
ja
inc
stos
not
fcoml
pop
pushf
repz
dec
sub
and
push
cmp
test
xchg
adcl
aas
jl
sub
pop
ret
xor
lret
cmp
pop
xchg
inc
mov
in
sub
repz
nop
pop
mov
xlat
adc
cmp
and
jnp
pop
cmp
pop
repnz
aad
pop
insb
xchg
mov
mov
sbb
xorb
daa
cs
pop
xor
mov
inc
pop
js
ss
js
enter
es
sub
adc
mov
sub
mov
outsb
pusha
cltd
sub
push
inc
dec
cli
or
push
shll
cs
cmpsl
inc
rcrb
aam
or
inc
mov
pop
cmp
push
push
leave
imul
push
je
mov
mov
cmp
adc
outsl
jb
xchg
sub
in
pushl
jp
jecxz
mov
mov
mov
inc
lret
xchg
inc
push
sbb
pusha
mov
aad
loope
xchg
xor
xchg
inc
sub
push
je
mov
mov
jnp
pop
int3
ret
sbb
test
cmp
shrb
ja
push
push
cld
sbb
push
sub
outsb
sub
lds
cwtl
push
jecxz
lret
cmpsl
imul
push
mull
test
xchg
sub
sbb
vpsubsb
add
imul
dec
imul
loop
test
pop
popa
pop
xchg
std
int3
jae
jbe
sub
add
sti
mov
out
jecxz
gs
sbbl
les
xlat
jnp
repnz
icebp
shlb
inc
inc
loopne
sti
int3
mov
adc
dec
dec
jo
and
push
out
push
insb
and
hlt
insl
jbe
inc
out
pushl
mov
arpl
dec
or
ret
xchg
lcall
stos
sub
push
inc
js
xor
movsb
push
ja
jno
mov
push
dec
cmp
xchg
cmp
jo
imull
int3
dec
pcmpeqb
pop
cmp
adc
jo
mov
xchg
add
in
xchg
or
stc
cmp
stos
push
xchg
lock
aam
mov
loopne
dec
subl
and
or
lock
sub
add
clc
pop
addb
sbb
mov
xor
xor
sbb
push
or
ret
cmp
mov
inc
sub
inc
mov
jl
jno
sbb
das
andl
jmp
xchg
outsl
xchg
xor
inc
pop
lods
lahf
mov
push
shll
in
xchg
and
sbb
xlat
sub
jno
xchg
mov
push
stos
xlat
mov
sub
fmull
mov
cwtl
sub
shr
out
push
pop
dec
jnp
out
jbe
pop
enter
insl
data16
xchg
xchg
outsb
mov
mov
mov
jo
mov
fstpl
pop
dec
in
push
arpl
sbb
add
xor
or
stc
jb
adc
test
mov
shr
sahf
mov
in
push
fsubrl
dec
lods
outsb
fnstenv
fldcw
enter
arpl
ja
cmp
jp
jge
jmp
inc
je
aam
push
inc
cmp
cmp
mov
ret
test
int3
push
stos
sbb
and
pusha
and
pop
add
mov
pop
adc
xchg
in
rcr
cltd
xchg
popf
xchg
dec
cli
incl
xchg
sub
pop
push
insl
jne
sub
or
std
ss
scas
flds
imul
movsb
sub
xchg
fwait
loopne
lcall
insb
out
test
fldcw
lea
jmp
mov
push
mov
icebp
sbb
sbb
mov
push
dec
cmp
insb
xor
clc
jecxz
clc
and
out
lods
xchg
adc
adc
mov
dec
xlat
inc
stc
imul
pop
cli
mov
sub
add
mov
loop
mov
out
inc
xor
xor
xor
cmp
sti
and
data16
movsl
dec
psrad
jp
cmpsb
fnstsw
and
and
popa
or
xor
cltd
fwait
jnp
and
push
or
leave
sbb
push
in
or
sub
fwait
mov
cmp
sahf
or
push
and
aam
cli
xor
dec
call
lahf
mov
jmp
mov
test
scas
and
or
push
and
shll
sbb
daa
icebp
push
sarl
movsl
pop
xchg
mov
std
insb
mov
sub
in
lods
adc
xchg
adc
xor
in
or
or
pop
pop
sub
loop
popl
repnz
js
sahf
outsb
fdivrs
call
incb
insb
mov
cmp
scas
lret
fucomp
jbe
pop
jge
adc
adc
outsl
xchg
mov
cmp
fbstp
lahf
pop
loop
inc
ficompl
stos
fld
push
jne
pop
iret
mov
pop
and
xor
add
jge
xchg
rclb
xchg
insl
test
lea
lods
test
push
addr16
out
adc
adc
rolb
mov
lods
sub
subl
rcrl
cmp
stos
or
lret
sub
int3
mov
xor
subl
adc
and
sahf
sub
ret
lret
xchg
pop
mov
aad
mov
cmp
xchg
jo
mov
clc
arpl
and
cmpsb
ss
xor
push
insl
not
leave
cmc
cmp
push
loop
xchg
mov
stos
mov
ljmp
cld
mov
flds
idivb
jmp
and
add
inc
sub
addr16
hlt
or
fisubrs
jmp
or
cmp
int
sahf
in
aam
dec
ret
aaa
lock
and
jnp
sub
jae
mov
cmp
movsl
pop
push
lods
nop
jns
mov
repnz
pop
bound
inc
mov
into
xchg
fwait
xchg
jp
sbb
mov
jge
outsb
cs
scas
xchg
ficoms
fsts
popf
enter
or
xor
aad
sub
mov
mov
icebp
pop
test
dec
dec
insl
pop
lahf
adc
mov
jno
outsb
xorb
lcall
mov
stos
xchg
dec
data16
lods
xchg
mov
adc
mov
push
xlat
in
lcall
pop
sub
and
sarl
cmc
out
mov
mov
push
test
mov
push
fsubl
icebp
xchg
jg
adc
dec
jnp
dec
repz
and
inc
push
fiadds
ret
cmp
mov
xchg
xchg
pop
mov
add
popf
arpl
inc
fnsave
imul
lahf
sbb
dec
xchg
scas
xchg
sbb
adc
clc
jo
push
shl
and
ss
ds
mov
test
sbb
js
xor
jmp
out
cmpb
pop
pop
ror
push
fdivrs
nop
mov
je
and
into
jns
jle
sub
fnstsw
rcll
fwait
hlt
call
ret
xchg
pop
pop
push
pop
sti
in
mov
jg
cmpsb
inc
cmp
xchg
movsl
cmp
inc
jo
enter
pop
jae
lds
cmp
in
dec
nop
stc
mov
out
sub
cmp
xchg
push
pop
lgs
cli
dec
and
add
test
mov
jae
scas
imul
pop
xor
lods
jno
test
add
fs
jecxz
jecxz
ja
pop
ds
inc
cli
fbstp
pop
call
fcompl
jb
mov
lock
jae
pop
loopne
hlt
fistl
icebp
in
movsb
mov
aad
pop
jns
pusha
push
stc
sbb
mov
lds
in
push
and
mov
adc
aaa
arpl
add
cld
stos
lods
mov
leave
pop
add
push
mulb
sub
or
push
jb
add
inc
and
push
dec
inc
xchg
sbb
inc
outsb
pop
push
xlat
cld
daa
sbb
push
mov
mov
xchg
or
mov
mov
push
fsts
push
subl
stc
cmp
or
in
std
shrb
lods
cmpl
or
sarb
dec
arpl
fldt
or
inc
pop
das
mov
sub
sub
ret
xchg
jecxz
jmp
cs
fldenv
pop
mov
jecxz
movsb
sahf
jecxz
mov
lret
hlt
add
push
xchg
hlt
das
cli
daa
adc
insb
sbb
pop
std
xor
movsb
out
push
sbb
dec
cmp
adcb
push
das
mov
dec
int3
clc
or
in
movsb
xchg
push
sub
pushf
loopne
cmc
mov
jae
mov
jno
xchg
jo
and
mov
outsl
out
push
call
xchg
mov
cmpsb
mov
mov
aaa
add
pop
sbb
sub
xor
jl,pt
arpl
icebp
call
and
inc
inc
insl
or
pop
mov
or
popa
dec
jg
sbb
jmp
xor
mov
mov
or
mov
int
and
outsb
jecxz
js
enter
jbe
aad
notb
ja
lock
jle
ds
popf
cmp
fstl
in
lret
add
mov
mov
int3
lea
push
push
aas
xlat
dec
xchg
push
mov
aaa
js
mov
and
xor
mov
inc
cwtl
fiadds
and
into
cmp
daa
mov
int
xor
outsl
enter
adc
mov
gs
ja
push
shll
stc
es
add
jbe
sbb
pop
ja
inc
std
mov
jge
test
cmp
adc
fldenv
sub
imul
std
xor
imul
insb
aam
mov
mov
lahf
and
jmp
insl
push
cmpsb
stos
cmp
fisubrs
inc
jecxz
std
sub
pusha
std
or
mov
jg
bound
lret
ret
sbb
dec
sbb
or
push
add
fwait
mov
leave
push
mov
jno
push
mov
cld
dec
dec
xor
pop
shll
loop
lds
test
mov
mov
cmp
test
mov
loop
jg
je
sub
xor
mov
in
xor
div
call
in
sbb
shll
add
movsb
lahf
or
gs
mov
iret
inc
inc
push
jno
jge
xchg
xor
fcmovbe
push
das
cltd
cmp
jp
pop
data16
or
or
jnp
insl
mov
into
je
daa
ss
loop
mov
leave
sub
and
add
daa
add
fwait
shl
mov
mov
add
inc
dec
mov
fldenv
fldcw
test
mov
pop
jl
je
movl
xor
cltd
fwait
lahf
add
sub
inc
sub
cmpsl
push
cmp
inc
arpl
pop
enter
mov
pop
adc
ljmp
mov
cltd
sub
loop
mov
xchg
adc
fmul
pop
cli
add
movhps
mov
jnp
jnp
jp
xchg
rol
push
xchg
pop
popf
es
mov
sbb
sub
sbb
push
pop
mov
push
push
cmp
dec
push
fwait
lds
gs
or
incl
cmp
in
aaa
jnp
out
pop
add
ret
pop
out
push
int
sub
adc
xchg
sbb
pop
cmp
lret
adc
loopw
pop
out
lcall
dec
mov
cmpsb
dec
inc
xor
fwait
stc
mov
insb
and
dec
or
push
in
outsl
in
sbb
pop
mov
xchg
and
pavgw
pusha
jmp
and
add
sub
push
movsb
lret
xchg
lahf
sub
push
xor
rcpps
push
xchg
inc
mov
mov
pop
outsl
out
cs
mov
push
xor
leave
in
scas
adc
sbb
jno
push
ss
rclb
out
test
fsubs
sbb
andl
or
test
dec
mov
cld
and
xchg
daa
lret
out
lcall
pushf
dec
dec
jp
xlat
and
imul
lods
js
adc
push
enter
pop
and
sub
je
cmpl
mov
mov
aad
push
push
fmull
xchg
mov
and
test
or
pop
in
jmp
mov
sbb
mov
ret
jle
sub
outsl
in
xor
daa
aam
pop
cmpsl
inc
sub
test
mov
add
cmp
movsb
push
push
and
adc
ret
cltd
or
sahf
push
aad
mov
cwtl
es
cmpsl
aas
imul
out
out
loop
lahf
cmp
fldl
jne
jg
std
in
push
or
fistpll
sbb
iret
gs
jge
popa
shlb
lahf
mov
sbb
adc
xchg
insb
dec
lea
stc
jns
das
add
gs
out
and
or
incb
or
clc
or
fists
xor
shll
ret
push
das
push
xchg
loope
fwait
lods
xchg
repz
xchg
fiadds
les
or
lahf
pop
push
stos
mov
arpl
inc
imul
jo
adc
push
fs
sub
xor
in
sub
fsubl
enter
hlt
sub
negl
clc
adc
or
pop
mov
xor
ljmp
fiadds
sbb
pushf
or
jp
cmp
sbb
fld1
inc
push
xchg
inc
jle
jnp
cmp
push
mov
cmpsb
xchg
mov
fldl
scas
loopne
push
repnz
test
movsl
out
sbbl
adc
or
iret
mov
pop
aas
ja
cmp
repnz
out
mov
in
jne
mov
mov
xor
push
or
rcrb
push
int
aaa
dec
insb
push
adc
sub
lret
jle
dec
sahf
into
xor
out
add
xor
test
pop
mov
xor
push
shl
and
in
jp
out
and
int3
loope
cmp
dec
shl
dec
pop
test
push
imul
cmp
outsb
out
xchg
sahf
sbb
insb
lret
mov
into
addr16
test
scas
mov
scas
or
fsub
cmc
and
addr16
arpl
insl
xchg
cmp
push
mov
outsb
aaa
dec
not
mov
or
xchg
push
outsb
xor
or
mov
mov
mov
test
push
xchg
jns
gs
push
mulb
jge
movsl
lock
mov
jl
mov
jae
dec
mov
fidivrs
mov
out
iret
adc
pushf
inc
ss
push
push
imul
fisttpl
push
leave
aam
pushf
mov
dec
and
xchg
daa
lret
jl
xor
call
ret
inc
cmpsl
andb
pop
gs
out
xor
xor
push
pop
jns
cs
pushf
sbb
add
in
dec
fmul
pop
loop
aam
movsl
mov
mov
jmp
jg
sbb
pop
inc
or
sbbb
push
and
loope
in
push
or
or
pop
jne
mov
leave
xor
push
fistl
popf
out
push
push
and
subl
cmp
jp
inc
xchg
mov
pop
or
adcb
leave
sarl
nop
scas
cltd
add
xchg
rclb
push
inc
ljmp
aas
popf
mov
pop
jbe
insl
fwait
xchg
cmp
jmp
pusha
test
add
adc
nop
call
and
int
mov
stos
mov
roll
push
and
cld
popa
lret
sahf
push
push
lods
xchg
lcall
into
cmp
xchg
jmp
lds
add
outsb
lcall
aam
scas
cs
bnd
mov
div
sbb
daa
in
dec
jbe
icebp
dec
fst
in
orl
lods
lahf
xor
xchg
nop
in
shrb
mov
xchg
stc
inc
lret
lea
mov
inc
stos
jb
rclb
add
xor
and
rclb
ret
xor
inc
xchg
push
andb
mov
mov
adc
add
xor
and
rclb
ret
xor
inc
xchg
push
andb
mov
mov
adc
add
xor
and
rclb
ret
xor
inc
xchg
push
andb
mov
mov
adc
add
jo
call
out
push
aaa
sbb
jge
dec
pop
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
bnd
add
xor
and
jne
sub
cmp
mov
inc
cmpsb
xor
and
adc
add
repnz
add
xor
and
push
mov
fs
bound
mov
adc
hlt
add
repnz
ret
dec
mov
jle
ja
mov
xor
imul
adc
insl
rolb
scas
mov
ljmp
pop
mov
repnz
or
push
dec
sbb
fdivs
push
into
adc
insb
lods
movsb
mov
xchg
inc
hlt
push
test
mov
add
pop
add
mov
adc
inc
or
and
les
in
inc
lds
xor
adc
je
test
sub
fwait
add
jnp
push
mov
cmp
jle
mov
lret
aas
les
cmpb
sbb
fcomip
leave
movsb
bound
sbb
sbb
in
xor
out
cltd
outsb
sub
xor
mov
jno
aad
add
xor
adc
and
ds
mov
jge
mov
push
lods
inc
mov
adc
add
xchg
xor
int
std
sbb
or
std
pop
cld
and
pop
lret
mov
arpl
test
mov
andl
daa
jmp
or
in
add
out
cmpsb
inc
stos
jnp
push
popa
xchg
push
cmpsl
push
idivl
mov
fs
bound
aam
les
hlt
add
repnz
add
xor
and
push
mov
fs
bound
aam
les
hlt
add
repnz
orl
aaa
bound
and
enter
add
test
scas
adc
fnstenv
mov
mov
jne
sbb
out
inc
sub
les
and
jno
iret
mov
sbb
pop
sbb
adc
add
dec
gs
repz
mov
or
popa
std
xchg
and
cs
jo
jbe
lret
dec
inc
push
adc
push
mov
jno
negb
ljmp
iret
mov
arpl
dec
mov
enter
imul
aas
jge
dec
cmp
xchg
mov
jecxz
lcall
sbb
xchg
or
leave
and
dec
fisubs
and
cli
jmp
cmpsb
jg
mov
ret
outsb
sbb
push
xorb
repnz
xor
lret
jecxz
in
mov
call
cmp
add
std
pop
inc
jle
mov
orl
daa
xchg
lahf
jp
mov
inc
mov
mov
dec
fucomi
or
xchg
cmp
xchg
inc
leave
add
dec
cwtl
xor
xor
dec
sarb
or
dec
dec
pop
jmp
outsb
jmp
sbb
mov
mov
das
mov
pushw
push
or
pop
or
insb
scas
cmpb
xchg
add
xchg
sbb
push
je
out
push
repz
mov
mov
sub
ds
stos
clc
push
outsb
ds
jle
popa
std
jo
jb
mov
adc
push
sub
mov
adc
mov
mov
mov
pop
adc
les
test
jne
repnz
sbb
rcll
jge
test
aas
loope
bound
jmp
into
imul
ficoml
andb
clc
jns
popa
addr16
lret
add
shlb
cmp
repz
push
mov
cli
addr16
dec
jns
add
inc
jnp
outsl
pop
insl
xchg
mov
jle
mov
addl
js
mov
sbb
test
mov
mov
xchg
xchg
scas
jge
hlt
daa
pushf
and
xchg
push
xchg
push
adc
mov
adc
arpl
xorl
orl
dec
cltd
and
outsl
add
cmc
pop
cmpw
inc
xor
aaa
push
dec
icebp
pop
sub
loop
pop
and
push
xchg
sbb
pop
sbb
xchg
pop
pop
pusha
push
push
jmp
scas
popf
enter
xorb
loopne
lds
in
cwtl
dec
and
loope
mov
inc
sbb
rclb
daa
pop
cmp
inc
mov
cmp
addr16
mov
aas
loop
insl
and
cwtl
repz
mov
out
out
mov
jge
aas
lods
add
sub
push
mov
mov
lea
xlat
movb
push
sti
pop
pop
cld
imul
mov
sahf
xor
ret
dec
mov
xor
jg
dec
pusha
lahf
icebp
je
out
fadds
cmp
jmp
sbb
adc
mov
and
ret
mov
jecxz
outsb
popa
data16
and
mov
movsl
cmp
ljmp
push
int3
cwtl
mov
lds
jle
shrb
jmp
push
xlat
test
pop
jl
aad
mov
movsb
add
dec
lods
test
cmp
arpl
mov
loope
cmp
shrl
and
or
sub
cmp
sub
adc
sbb
aas
xor
or
aaa
ja
push
xchg
jl
cmp
inc
jecxz
jne
pusha
pop
mov
xchg
mov
and
push
jge
add
mov
dec
jecxz
jns
pop
xor
repz
js
dec
sahf
and
pusha
mov
and
iret
das
negb
sti
adc
clc
out
and
inc
out
lret
pop
dec
sarl
dec
cmp
ret
jle
stos
das
jbe
xchg
clc
and
xor
ds
sbb
pushl
fistps
pop
mov
fsts
int
inc
jo
pop
iret
scas
imul
mov
add
imul
fwait
and
push
mov
mov
push
mov
int
jns
cmpsb
pop
stos
test
adc
adc
dec
xor
aaa
insl
inc
add
ds
push
mov
inc
test
es
or
mov
lock
push
mov
int
sbbl
push
ret
and
loope
jno
das
mov
test
insb
push
outsl
push
xchg
fldenv
pop
mov
je
jae
sub
in
lret
lcall
mov
xchg
test
ret
mov
inc
mov
pop
add
stos
movsl
push
push
push
mov
xlat
sub
jg
iret
dec
mov
push
push
mov
inc
fdivr
shlb
sbb
mov
dec
pop
push
leave
mov
add
xchg
jp
push
std
dec
mov
in
fsincos
je
sub
jne
pop
lret
push
jns
mov
mov
shrb
sub
mov
jo
pop
gs
lds
xchg
lret
or
cwtl
iret
add
js
std
icebp
movsl
outsl
sbb
cld
pushl
int
ret
sub
es
rcll
fs
cli
leavew
mov
xor
stos
test
dec
arpl
sub
ret
aas
add
and
inc
sub
test
das
int3
loope
push
scas
push
mov
pop
sar
mov
jmp
aas
inc
int
mov
xor
out
push
add
mov
push
add
mov
in
icebp
cltd
mov
sbb
addr16
inc
or
inc
cwtl
mov
jnp
cmp
xor
imul
pop
es
add
lods
mov
inc
cs
mov
jbe
addl
or
fimull
dec
push
cmp
leave
nop
rcrb
jnp
push
add
das
mov
js
adc
xlat
cmpl
in
mov
mov
pop
xchg
hlt
add
inc
push
jo
aam
les
sub
push
lcall
outsl
bnd
loope
cli
sub
push
js
push
addl
rclb
push
das
dec
dec
ret
xor
sbb
xor
pop
adc
jmp
insl
mov
xor
dec
xchg
mov
popf
mov
mov
in
lds
push
and
mov
xchg
test
pop
sbbl
movl
mov
inc
js
and
or
or
and
sub
xor
xchg
jge
out
cmpsb
sub
movsl
out
and
or
mov
dec
jge
lcall
js
push
popa
xorb
jle
sbb
popf
pusha
push
inc
sbb
adc
jge
rcrb
fistps
pushf
jecxz
sub
push
nop
add
cmp
call
pop
call
and
fwait
jbe
sub
int
rcrb
pop
pop
mov
das
jle
xchg
addr16
cmp
add
add
dec
dec
or
adc
roll
adc
dec
cmc
mov
ja
out
or
and
mov
inc
pop
mov
insl
enter
cmp
out
adc
dec
test
jno
mov
cmp
mov
jge
incl
outsb
cs
loop
mov
cmpb
sbb
add
popf
lods
or
aad
shl
jne
int
mov
mov
test
aam
sub
negb
movsb
cs
mov
div
sub
test
aas
jns
jl
enter
pop
imul
jge
shr
out
xchg
addr16
roll
movsb
and
push
addr16
mov
xor
mov
pop
sub
mov
or
and
imulb
push
loope
mov
cmp
xor
das
js
pop
stos
jo
lret
jge
out
push
jp
ret
into
mov
and
popf
pop
jne
mov
addr16
adc
imul
push
gs
outsb
or
sbb
mov
cmp
popf
lock
bound
fwait
sar
lods
mov
cmp
stos
jns
cs
jb
push
ljmp
test
mov
or
test
insl
icebp
lds
jge
push
insl
arpl
std
mov
pop
or
scas
sbb
xor
adc
fisttpll
push
mov
in
mov
pusha
mov
or
or
js
xor
fwait
insb
xchg
fistpl
push
adc
int
or
adc
add
pop
mov
leave
ret
mov
pushf
and
sub
imul
pushf
iret
loope
mov
adc
pop
int3
scas
rorl
or
popf
lea
neg
jge
adc
out
sub
ftst
cli
repz
and
sub
xchg
hlt
ljmp
test
xor
jle
aad
push
xor
adc
or
gs
sbb
bound
xchg
repnz
sarl
xchg
push
adc
ds
xchg
rcrb
dec
insb
jne
dec
call
addr16
out
jle
popa
stos
sub
clc
push
push
imul
mov
les
cld
lahf
push
push
mov
andl
out
mov
pop
std
xor
push
fsubr
and
loope
mov
enter
jbe
out
pop
loope
xor
xchg
call
out
xchg
add
jb
xor
mov
sbb
sub
mov
xchg
cltd
or
loope
mov
les
inc
adc
adc
push
shl
test
dec
ss
stos
xlat
and
adc
mov
adc
aaa
pop
arpl
sti
adc
and
adc
daa
mov
into
push
mov
cmp
imulb
fisubs
sub
loopne
push
jmp
sbb
xor
shrl
and
xor
scas
sbb
sub
cli
mov
mov
lret
sub
cld
cmp
xor
add
mov
or
cmpsb
xchg
add
cmp
xor
jno
test
pop
jnp
sub
fimuls
xchg
xchg
dec
xchg
lds
aas
add
push
cmp
mov
inc
push
es
sbb
sti
pop
pop
lcall
nop
push
mov
out
cltd
pusha
out
mov
sub
or
mov
jle
ljmp
lods
pop
arpl
mov
ret
push
mov
sub
mov
sbb
jnp
inc
pop
jmp
mov
mov
into
cmp
jl
xchg
cmp
les
fstpl
xor
scas
cmp
mov
push
dec
fs
inc
sub
cld
push
pop
jl
ret
pop
dec
dec
xchg
pusha
dec
neg
enter
xor
add
test
or
jecxz
push
and
mov
mov
push
cmp
xchg
add
ds
jae
addb
mov
in
inc
jnp
jge
dec
jnp
cmp
lds
dec
nop
stos
shr
ret
lods
notl
inc
and
loop
jp
cmp
and
add
sub
add
pop
hlt
fmull
dec
mov
aaa
push
stc
push
dec
sbb
cmp
cwtl
push
mov
jb
fcos
arpl
scas
stos
jg
jno
ljmp
mov
mov
shl
nop
mov
ret
add
dec
fadd
jo
cmp
leave
push
pop
mov
popa
sub
inc
pushf
sbb
jp
jb
hlt
xchg
sti
pop
xchg
enter
sbb
inc
mov
xchg
mov
inc
iret
mov
scas
fsubs
pop
test
lods
xchg
xor
push
fdivs
iret
mov
ret
xchg
out
jns
popf
pusha
lea
cmp
add
test
scas
ss
cltd
cmc
mov
lcall
stos
pop
cmc
inc
mov
cmpl
push
idivb
int
xchg
fxtract
xor
add
popa
stos
dec
sbb
sbb
mov
icebp
xorb
in
push
push
sub
dec
pusha
js
sub
subb
push
mov
iret
leave
stc
fcompl
les
jnp
push
mov
ja
dec
in
mov
xchg
fisttps
mov
mov
movsl
pop
jnp
jno
sbb
iret
add
jp
mov
out
dec
cltd
popl
mov
mov
out
into
inc
das
pop
inc
cmpsb
pop
sub
aas
pop
pop
cmp
push
mov
dec
xchg
xchg
adc
xchg
les
mull
ret
mov
inc
ljmp
es
cmp
mov
int3
lds
jle
pop
mov
lret
scas
xorl
push
dec
ja
int
lahf
xor
rcrb
leave
inc
jl
gs
push
fidivrl
mulps
orl
arpl
xchg
rolb
push
pop
jb
out
das
sub
add
cmp
call
loop
popa
test
imul
es
xchg
mov
out
push
stos
outsl
mov
pop
dec
insl
test
sbb
adc
ds
popa
sbb
mov
dec
nop
xchg
sbb
cs
and
lret
js
jg
add
or
cli
mov
xor
and
in
les
sbb
adc
push
es
push
daa
jl
cwtl
cmpsl
mov
mov
fs
push
out
xchg
es
sub
out
les
das
or
pusha
push
int
sbb
pushf
aam
cmp
or
push
xchg
ret
dec
pop
fistl
into
ds
pop
ss
test
mov
cmpsl
sbb
les
aad
in
cmp
add
push
dec
ret
pop
xchg
test
pop
mov
scas
or
add
cli
out
mov
call
cmp
fwait
jns
fwait
xor
cltd
sub
push
repz
sbb
lock
xchg
lahf
inc
xor
inc
push
jno
cmp
xchg
fwait
lea
out
sbb
sub
sbb
add
or
ljmp
lea
imul
ficoms
xchg
dec
adc
xor
push
negl
sbb
loopne
lret
or
shl
insb
movsl
or
mov
faddl
ror
hlt
pop
sbb
ja
inc
pop
xor
jne
shll
mov
jne
cmovne
and
jmp
add
pusha
sub
xchg
arpl
mov
not
and
filds
jecxz
outsb
adc
push
push
int
fmuls
and
hlt
mulb
sbb
or
insl
imul
out
pop
je
pop
cli
adc
jo
push
into
sbbb
mov
sbb
or
push
push
jns
sbb
arpl
test
sbb
pop
pop
movsl
call
dec
lret
mov
jg
jmp
je
mov
in
mov
push
rcrl
mov
adc
pop
xchg
and
sbb
call
test
cs
or
and
cmp
clc
adc
imul
loopne
ljmp
sub
pop
or
lret
popf
push
pop
or
mov
push
mov
imul
daa
mov
and
hlt
sbb
jae
xor
pushf
pop
push
das
fcomp
les
push
jae
xor
scas
jge
sbb
and
xor
lods
popf
js
mov
arpl
dec
fs
and
sub
jns
pop
inc
sub
inc
jmp
mov
test
fbstp
js
jo
mov
add
sub
mov
orb
decb
adc
xchg
scas
add
mov
pop
xchg
jb
mov
rcll
jne
xchg
or
mov
test
stc
insl
mov
ja
inc
insl
adc
add
arpl
jae
or
dec
sbb
scas
je
je
out
push
mov
or
loopne
mov
jo
jl
aas
and
adc
add
je
popa
movsl
inc
push
mov
inc
aad
fsts
jbe
xor
cs
push
lret
movsl
or
or
in
cmp
dec
outsl
fwait
pop
or
les
xor
xchg
pop
pop
pop
bound
nop
lcall
jecxz
jle
and
in
cmpb
dec
sub
jge
inc
mov
dec
out
mov
in
mov
push
inc
mov
xor
lret
loope
jb
add
xor
cmp
cmp
adc
pop
mov
lret
xor
fsubrs
and
jbe
insl
test
mov
mov
xchg
bound
int
fwait
rcrl
jbe
adc
das
inc
jns
pop
mov
mov
jbe,pn
negl
rorb
push
mov
mov
repz
popa
ja
scas
nop
push
mov
dec
jno
jecxz
xor
lds
neg
add
mov
int3
fldl
loop
push
loope
or
imul
cmpsl
pop
bound
orl
sub
fcoms
lret
lret
xchg
shr
pushf
rcrb
mov
sub
mov
add
xchg
jnp
enter
jl
mov
arpl
pop
pusha
scas
jge
imul
ficomps
xchg
mov
fildl
setb
add
push
xor
je
mov
add
div
sub
mov
pusha
ja
cmpb
inc
jmp
push
push
fmulp
cli
mov
cli
daa
push
sub
and
daa
f2xm1
mov
popa
push
out
mov
test
mov
pop
out
loop
out
call
pand
xchg
jb
jno
clc
add
or
xor
outsl
and
cld
aaa
call
pop
mov
lcall
push
add
add
call
mov
push
push
testb
xchg
adc
jbe
sub
ja
jbe
loope
or
call
mov
test
add
xchg
mov
dec
into
imul
pop
cmp
fdivrl
sbb
and
adc
dec
jle
dec
rcl
cmpsl
pop
fcomip
hlt
jae
sbb
xchg
dec
cs
rol
ds
and
pop
mov
test
cmp
stos
stos
jae
add
sbb
mov
aad
or
lret
cmp
fisubs
fisubl
fs
sub
fwait
xlat
mov
mov
adc
add
mov
loop
clc
pop
push
scas
pop
adc
popa
xchg
lods
enter
test
repz
push
loope
xor
mov
mov
dec
je
fwait
or
cmp
sbb
dec
out
cwtl
test
popf
test
add
cmp
cmpsl
repz
insb
cwtl
ret
xchg
paddd
lret
xor
pusha
sahf
loope
outsl
clc
int
push
cltd
mov
pop
sub
adcb
adc
pushf
movsl
sub
scas
pop
sti
sub
rorl
sti
outsl
rorb
cltd
mov
cli
mov
push
out
inc
push
test
clc
mov
sub
or
mov
clc
xor
jecxz
lcall
lods
jne
mov
rol
push
lret
lods
pushf
inc
mov
mov
lret
pop
inc
movsb
cmp
mov
outsl
inc
bound
mov
aam
adc
lock
test
pop
pop
mov
pop
xchg
mov
xchg
mov
sbb
outsl
dec
xor
dec
xchg
xor
xchg
mov
fimull
push
pop
sbb
stos
push
sub
cs
cwtl
stos
push
xchg
add
and
adc
or
sub
xchg
into
subb
inc
push
insb
test
xor
mov
inc
sbb
push
adc
out
ja
gs
add
mov
sub
je
inc
sahf
idivl
jmp
adc
aas
lret
xchg
sti
inc
mov
sahf
xor
push
push
mov
mov
push
aam
cmpsb
into
sbb
mov
ds
fnstcw
jnp
gs
cld
fs
bound
ficoml
popl
push
ss
pushf
das
loopne
loope
add
rcl
mov
dec
jae
mov
mov
ljmp
icebp
out
cmp
adc
fsubl
rorb
mov
sub
icebp
sbb
push
sub
movsl
sarl
pushf
shll
pushf
sbb
sbbl
inc
subps
add
jb
andl
dec
fcomps
ss
and
inc
faddl
or
fmuls
push
inc
xchg
pop
out
clc
shlb
fadds
pop
inc
popf
pop
test
inc
bound
lcall
fmul
add
or
nop
xchg
push
lret
shrb
pop
sbb
sub
add
lret
scas
push
aas
jnp
scas
popf
push
mov
xchg
inc
or
test
jp
lea
leave
gs
cmc
add
leave
repnz
int3
mov
push
mov
aad
test
loope
int3
ds
mov
mov
or
mov
jno
lds
sbb
mov
jmp
sti
loope
ret
xor
in
add
sahf
pusha
inc
push
mov
jp
xor
stos
bound
mov
in
fcmovnb
and
push
mov
fs
bound
aam
les
hlt
add
repnz
add
xor
and
push
mov
fs
bound
aam
les
hlt
add
repnz
add
xor
and
push
mov
fs
bound
aam
les
cmc
add
repnz
add
xor
and
push
mov
lea
roll
stos
cmp
or
sbb
and
cmp
inc
inc
sub
or
sbb
mov
mov
leave
in
sbb
sar
or
sbb
sub
cmp
dec
popa
pop
jno
inc
jns
mov
mov
icebp
jmp
xchg
imull
fwait
cmp
push
pop
cmp
jns
mov
xchg
jecxz
mov
xchg
cmpsl
mov
mov
sbb
push
dec
je
outsb
pop
mov
ret
dec
sub
popa
ret
ljmp
ds
repnz
out
arpl
bound
mov
and
cmp
ss
int3
scas
call
dec
xchg
push
pop
lea
adc
xchg
or
adc
imul
cmp
dec
and
xor
mov
inc
xchg
adcl
push
and
lahf
nop
aaa
hlt
mov
jmp
imull
inc
cld
add
repnz
push
jo
cmpb
andb
popa
xor
mov
in
xchg
in
pop
neg
and
outsb
je
shll
repnz
fptan
repz
push
cld
sti
cmc
mov
mov
sub
sbb
sub
adc
pop
jno
inc
jns
mov
mov
pop
jmp
and
dec
insl
pop
jge
les
sbb
xor
push
enter
lret
repnz
cmpsb
mov
lods
mov
mov
jns
pop
jge
xor
in
rcrb
lods
scas
icebp
fwait
movsb
stc
mov
inc
insl
cmp
sub
jns
mov
mov
icebp
jmp
and
xor
add
adc
pop
jno
inc
jns
mov
mov
icebp
jmp
and
xchg
push
cmc
js
call
out
lret
cmp
jmp
inc
pop
push
lret
add
inc
and
repz
mov
icebp
test
std
loop
cmpsl
adc
nop
or
pusha
cmp
adc
imul
xor
movsb
pop
adc
dec
cmpsl
int3
adc
sbb
add
scas
shlb
and
es
cmp
fiaddl
inc
insb
cmp
push
add
inc
jecxz
or
ret
ret
pop
cmp
jmp
rcr
sub
mov
jo
sub
jb
inc
mov
jmp
push
mov
cmpsl
inc
adc
lret
gs
sti
mov
push
pop
fildl
xor
lahf
movsl
xchg
jmp
lret
push
push
jne
cmpsl
imul
popa
pop
sbb
cmpsl
xchg
ds
push
add
cmp
in
enter
pushf
sbb
inc
dec
pop
cmp
test
inc
sbb
fisubs
popa
lahf
or
dec
lcall
dec
mov
mov
push
jne
sbb
xor
mov
jne
push
jns
xor
mov
adc
pop
test
std
daa
outsl
cwtl
xchg
popa
nop
cmp
mov
push
inc
data16
dec
addl
fwait
mov
popf
jg
mov
aaa
loopne
push
xchg
daa
test
pushf
jp
jmp
mov
push
imul
or
sub
icebp
out
mov
dec
or
push
notl
xchg
prefetchwt1
adc
into
outsb
cli
xchg
mov
inc
clc
cmp
fimuls
insl
pop
jbe
scas
pop
imul
fsubs
add
jmp
outsl
jo
lret
je
push
jmp
gs
xor
sbb
cmpsb
cmp
sbb
jno
xchg
xchg
pop
mov
ss
loope
cmp
jge
iret
ljmp
jmp
mov
mov
out
fcoms
jnp
cmp
stc
push
cmp
xlat
int
out
lods
mov
nopl
stos
mov
roll
sarl
mov
arpl
pushf
pushl
lahf
outsb
or
adc
sbb
mov
scas
pop
call
sahf
push
test
ja
in
outsl
push
std
dec
pop
jae
mov
dec
iret
cli
aam
jne
leave
mov
push
decb
push
pop
inc
in
cmp
xor
ds
mov
pop
jmp
ja
lcall
pop
int
cmp
xchg
lods
les
push
movb
and
enter
mov
out
fwait
or
movsl
decb
inc
xchg
int
xchg
fsts
daa
pop
aam
xor
cmp
shl
nop
repz
inc
aas
sub
pusha
rorb
xchg
fldt
xchg
stos
push
or
filds
or
pusha
outsb
nop
hlt
and
cltd
addl
test
adc
and
pop
mov
xchg
iret
jl
fisttps
fisubl
pushf
and
sub
push
mov
fsubrl
pop
jl
mov
or
in
push
push
pop
test
cld
scas
sbb
add
xchg
cmp
jo
inc
sub
or
aaa
fsubrl
call
sbb
xchg
sbb
es
cwtl
test
imul
pop
out
mov
daa
cld
shr
jns
cltd
rcrl
or
mov
addr16
jg
loop
sbb
xor
sbb
ret
pop
cmpb
movsb
push
adc
fldt
out
dec
insl
test
push
hlt
je
adc
sub
cmp
cmp
mov
inc
loopne
xorb
cmpsb
xor
lret
cli
insl
cld
push
fisubrl
push
arpl
jae
push
imul
add
mov
mov
cmp
mov
mov
and
mov
or
mov
add
decl
sbb
cmp
pusha
arpl
push
and
out
fcoml
fimull
pop
inc
pop
movnti
mov
mov
cmpsb
int3
cmp
cmpsb
popf
adc
cmp
sar
mov
movd
adc
js
stos
xchg
subb
mov
and
pop
inc
sub
imul
ret
iret
aad
test
adc
xlat
sbb
jge
add
outsb
mov
sbb
out
rclb
or
mov
pop
jae
fstpl
fadds
add
jecxz
adc
pop
dec
mov
sub
int
push
and
push
xchg
or
fstps
adc
inc
mov
mov
mov
cwtl
mov
scas
dec
mov
lds
ja
cmc
xchg
mov
dec
daa
mov
cs
in
ss
ss
xchg
fmuls
mov
xor
cmp
xchg
loopne
mov
test
pop
cwtl
mov
mov
andl
cwtl
ss
add
insl
push
and
dec
das
push
fdivr
scas
inc
xor
jno
cld
inc
repnz
push
std
mov
jns
shll
fldt
jmp
push
pop
ljmp
mov
mov
mov
jge
mov
xor
stos
pop
lcall
int
aad
pop
cs
cmpsl
mov
les
sbbl
lds
cmp
mov
das
adc
aas
mov
sbb
xchg
scas
out
in
add
and
rep
xor
inc
adc
xchg
cld
in
dec
jmp
sbb
hlt
add
cmpsb
lea
rcll
jmp
imul
loope
xchg
mov
mov
clc
test
dec
sbb
jmp
push
cmpsl
pop
xchg
sahf
push
pop
dec
fdivs
xor
mov
jo
dec
fstpt
inc
arpl
notb
das
fadd
test
fsts
fs
popf
bound
push
add
pop
sbb
fwait
in
xor
inc
test
and
dec
lea
ret
cld
inc
mov
lea
insb
pop
stc
jae
cld
xor
mov
shr
mov
sbb
loope
push
jp
iret
enter
popf
sub
adc
ss
jnp
or
cs
iret
push
push
aaa
sahf
test
xor
icebp
inc
mov
push
fistpll
xor
push
and
lods
mov
xor
lcall
aam
mov
out
jno
jle
cld
push
pop
shlb
mov
jnp
mov
push
scas
nop
xor
hlt
je
insl
push
xchg
leave
ds
pushf
fstpl
aam
inc
lret
not
pop
fimuls
cmp
je
push
gs
mov
ds
sbbl
icebp
mov
jecxz
jns
out
fwait
adc
hlt
ljmp
and
dec
sbb
ja
push
stos
mov
cmp
std
enter
add
dec
sub
xor
aad
mov
fwait
stc
test
cmc
pop
mov
pop
into
push
inc
in
add
mov
aad
ljmp
and
mov
test
xchg
jbe
push
out
inc
mulb
jns
push
xchg
jle
mov
push
ljmp
cmp
jl
bound
cmp
xchg
jge
sub
icebp
sahf
lret
outsb
dec
mov
loope
push
push
xchg
das
in
xchg
cli
test
test
rolb
push
in
into
cmpl
xor
repz
and
adc
jne
in
and
mov
and
inc
xchg
jge
fs
mov
in
xor
jecxz
lock
ret
xor
jae
repz
jge
out
sbb
lds
lcall
in
jg
pop
insb
sbb
dec
lock
fdiv
cmp
pop
mov
loopne
dec
push
das
jp
mov
enter
jbe
mov
stc
jp
cs
pop
cmp
das
xchg
fcmovne
out
jle
pop
adc
sbb
xor
or
xchg
shll
mov
ljmp
repnz
scas
es
inc
iret
inc
inc
nop
stos
cmpsl
xorl
adc
add
mov
ja
or
lcall
cwtl
cmpsl
dec
mov
cli
push
imul
imul
movsl
insl
mov
bound
pop
pop
xlat
js
fistl
mov
enter
repz
or
shrl
mov
sub
push
out
pop
inc
cltd
and
mov
arpl
mov
sbb
loopne
fcmovu
outsb
add
push
daa
cmpsl
or
mov
push
cltd
outsl
and
aas
int
jne
sub
or
into
adc
jno
in
sbb
ljmp
add
int3
daa
xchg
jbe
mov
bound
inc
mov
cwtl
lahf
popf
rclb
sub
cs
add
ss
cwtl
adc
mov
pop
push
jae
cltd
aaa
cmp
in
repz
dec
sub
jp
out
repz
push
or
and
lds
icebp
push
push
dec
inc
push
xor
fistpll
pop
mov
in
jmp
mov
sti
pop
repnz
inc
fs
andb
or
pop
outsl
push
subb
push
addl
sbb
and
cmovne
es
sbb
jmp
mov
daa
xchg
mov
iretw
fwait
xor
insb
jl
add
rcrl
mov
push
sub
sub
adc
cs
or
or
and
or
sti
fmulp
int
lods
fst
jo
int
in
divb
sbb
sbb
das
mov
sbb
push
inc
pop
mov
push
je
push
or
dec
xchg
stc
push
in
inc
cltd
cld
pop
mov
sbb
fs
jae
or
addr16
cmpsl
cmp
insb
ret
rclb
pop
lahf
movsl
sub
fsts
insb
mov
stos
adc
scas
scas
je
and
popf
stc
mov
push
sbb
loope
test
push
lock
jno
mov
xchg
xchg
lcall
or
mov
fdiv
aam
cmpsb
pop
and
pop
xor
mov
in
mov
add
sub
xor
dec
push
fstp
clc
push
rcrl
inc
sub
shl
stos
jno
std
jne
ljmp
ss
push
xlat
and
shrb
and
mov
sbb
adc
outsb
add
inc
mov
mov
mov
adc
mov
sarl
xchg
lcall
mov
aam
cmp
mov
out
cmp
xchg
add
cmp
aaa
pop
cs
xchg
inc
pop
adc
mov
xor
popf
cli
adcl
mov
mov
fwait
mov
push
jbe
xorl
mov
pop
cwtl
xchg
and
es
cmpsl
cli
mov
adc
dec
fcompl
pop
gs
std
nop
sub
xchg
sbb
xor
sub
call
ja
and
dec
imul
repnz
imul
mov
ficoml
or
xchg
shlb
cmpsl
mov
xchg
scas
sbb
pop
adc
lods
int
aad
sub
and
jo
sbb
sbb
in
fbstp
adc
fwait
mov
scas
loopne
fimull
or
test
jno
dec
jae
and
and
dec
mov
xor
mov
test
jne
lcall
bnd
push
adc
push
xor
xchg
clc
mov
ja
cmpsl
ds
push
mov
sub
xchg
inc
dec
call
push
into
imul
mov
xlat
lods
nop
pop
lcall
push
push
sbb
aaa
add
xchg
jae
ret
in
mov
add
pushf
or
add
in
adc
jmp
lahf
inc
push
sbb
dec
and
aam
cmp
xlat
fsubl
pop
jle
jnp
flds
jmp
negl
sti
sub
mov
mov
jg
aaa
fnstcw
stc
add
jae
cmp
jb
mov
inc
ret
add
outsl
out
inc
lods
lock
ds
sbb
mov
test
rclb
sbb
sub
jae
lret
cmpsl
testb
divl
and
push
pop
mov
push
push
inc
mov
cmpl
mov
sbb
push
and
adc
adc
lcall
mov
mov
jp
cwtl
and
dec
mov
scas
stos
test
jae
jecxz
jb
mov
jp
mov
enter
hlt
mov
clc
jp
dec
loopne
movl
pop
lods
enter
mov
pop
dec
mov
shlb
push
in
and
xchg
and
xchg
pushf
sub
pop
lea
sarl
outsl
lret
xlat
xchg
cld
jg
xor
in
push
push
and
push
adc
ds
mov
loope
lods
dec
sbb
aas
mov
mov
fdivrl
mov
loop
lret
shlb
dec
ja
push
movsb
jp
fldt
inc
inc
or
mov
cwtl
rclb
fsubs
ja
fcomps
xchg
icebp
sahf
test
lds
inc
jecxz
push
movsb
jge
ret
addr16
pop
inc
stos
stc
cli
rolb
xchg
das
sub
mov
lods
movb
rcll
outsb
mov
cmp
mov
jmp
xchg
repnz
lret
inc
jno
out
inc
jb
insl
mov
cmp
push
arpl
cld
in
or
dec
sub
jne
push
pop
sub
adcb
xchg
xor
pushf
xor
pop
xchg
mov
xor
and
test
fstl
dec
cmp
out
call
sbbb
nop
dec
loope
xor
ret
mov
sahf
dec
dec
fs
mov
ss
nop
je
mov
lahf
push
jns
jge
popa
cmp
jne
mov
mov
dec
mov
out
push
mov
addb
or
hlt
dec
jmp
scas
test
ss
pop
daa
jne
sahf
daa
fmuls
lods
push
clc
lcall
icebp
ficompl
jne
xchg
inc
jae
je
cltd
and
sti
stos
lret
out
aad
mov
fstpt
push
mov
imul
and
fstpl
add
rcrl
call
mov
mov
xor
bound
iret
bound
int3
cmpb
mov
nop
ja
or
loop
incl
and
xor
test
ljmp
outsl
ss
lods
and
pop
stos
rcll
pop
and
xor
push
dec
cmp
xchg
xchg
pop
or
mov
xor
nop
sub
push
and
add
lahf
hlt
mov
sar
push
fisubs
push
push
data16
sbb
cmpsl
ror
andl
dec
outsb
sbb
mov
mov
cltd
xor
pop
sbb
stc
push
cmp
sahf
daa
pop
dec
sbb
movsl
int
sub
cmovno
jo,pt
cmp
lock
jl
mov
pop
mov
mov
outsl
loop
lods
bound
out
dec
cltd
into
dec
push
mov
inc
mov
fstpt
push
add
dec
adc
jge
add
add
xchg
sbb
xlat
dec
push
pop
clc
dec
ljmp
test
or
pop
lods
mov
mov
cmp
push
cmp
and
mov
sbb
loop
jb
out
loopne
popa
popf
and
int3
inc
dec
cmpsb
jno
mov
dec
es
jns
insb
mov
mov
cmpsb
test
mov
inc
mov
pop
adc
rorb
subl
adc
adc
push
dec
push
sub
xchg
jmp
mov
addb
sahf
mov
sub
adc
sub
lahf
cmp
xor
pop
out
or
movb
dec
pop
push
adcb
andl
iret
sub
or
lret
mov
testb
sti
cmp
lods
clc
scas
pop
cs
mov
jge
out
inc
daa
xor
int
cli
lods
andb
pop
cmpsb
pusha
inc
daa
xor
xlat
lock
pop
jmp
test
sbb
jnp
in
lods
jl
cmp
fstpt
imul
jge
cmp
cmp
pop
imul
jl
scas
push
push
pop
inc
mov
and
dec
sbb
in
out
and
pop
and
shll
jb
push
or
mov
pop
mov
sub
aaa
push
lods
jae
stos
sbb
xchg
enter
dec
cmp
mov
pop
ja
sbb
in
bound
mov
xchg
xor
aad
mov
mov
pop
push
mov
sar
pop
mov
push
lret
mov
test
aam
sub
sub
out
sarb
jb
xchg
or
outsl
jl
cmp
movsb
stc
mov
and
fsubl
pop
sbb
mov
pop
or
sub
jmp
lcall
and
mov
xor
test
xor
jb
mov
mov
cli
sbb
push
popf
xor
xor
jl
daa
mov
gs
scas
dec
out
lahf
test
scas
dec
pushf
mov
mov
dec
pop
mov
mov
test
mov
jb
psrld
or
fwait
pop
out
cmp
out
scas
pop
pop
mov
xchg
jg
lret
jge
mov
push
xchg
into
mov
int
mov
arpl
mov
xchg
loope
cmp
mov
push
dec
pop
sti
fs
loope
scas
xor
aad
arpl
lods
adc
mov
inc
inc
movsl
ficoml
leave
lea
push
sub
ja
lret
into
fstl
push
sub
adc
popa
push
mov
dec
mov
pop
xchg
push
inc
jns
or
notb
lahf
imul
inc
bound
imul
pushf
fs
push
pop
sarb
out
sbb
dec
or
jmp
push
xor
ret
xor
add
cmp
dec
icebp
adc
jmp
and
nop
outsb
mull
dec
sbb
push
nop
inc
movsl
ljmp
outsb
loope
mov
decb
outsl
mov
or
and
jp
or
mov
imul
sub
jecxz
push
sub
testl
sahf
mov
push
add
loope
aam
lock
aad
jge
lret
scas
and
gs
imul
and
icebp
inc
push
rcrl
mov
dec
call
jo
mov
mov
mov
sti
rorl
aaa
rol
loope
adc
push
je
jne
clc
addr16
out
adc
loope
enter
shlb
pop
movsl
adc
test
sub
sub
adc
xor
mov
pop
cld
dec
adc
sbb
aad
adc
insb
and
or
add
popl
adc
aam
push
sbb
mov
xchg
enter
imul
ds
cmp
test
sbbl
or
aaa
sahf
lcall
test
mov
out
jl
loop
divl
pop
js
fsubrs
adc
rcll
dec
sahf
cs
mov
hlt
xchg
jmp
dec
popa
inc
xchg
mov
subl
pusha
loopne
fadds
cmpsl
cmp
mov
imul
pop
xchg
inc
adc
add
mov
daa
cld
add
xchg
enter
lods
sub
inc
xchg
mov
aaa
sbb
iret
pusha
sub
xor
push
aas
dec
adc
aam
lahf
adc
inc
imul
mov
dec
push
test
add
or
push
xchg
aaa
xor
ljmp
mov
gs
out
mov
imul
cld
lahf
ja
xor
adc
mov
fisubs
shr
sub
mov
xchg
xchg
insl
pop
outsb
rorl
lods
and
ja
punpcklwd
ss
outsb
and
subl
pop
mov
mov
aam
bnd
mov
imul
sbb
mov
outsb
mov
pop
repnz
decl
int
lds
rcl
add
loope
add
outsl
in
mov
popa
add
test
lods
mov
or
cmp
add
inc
cmc
adc
pusha
mov
inc
int3
sub
pusha
mov
push
xchg
adc
pop
dec
arpl
dec
repnz
lea
mov
mov
push
inc
mov
lock
fwait
mov
aas
dec
jle
bound
xor
sub
xchg
adc
shll
pop
xchg
jecxz
mov
or
xchg
pop
imul
movsb
jmp
imul
xchg
xor
gs
dec
dec
bnd
push
and
je
xchg
into
xor
lea
and
loope
pop
pop
mov
int
outsl
inc
jns
movsl
xlat
out
add
ds
xor
xchg
push
ja
cmpsb
rolb
out
imul
imull
data16
xchg
jb
adc
jge
push
jne
fsubrl
push
pop
xchg
push
xorb
mov
mov
jecxz
lods
sub
mov
push
sahf
cmp
jl
mov
sub
xchg
inc
adcl
ja
mov
and
pop
xor
cmp
dec
popa
pop
jno
inc
jns
mov
mov
icebp
jmp
and
xor
add
adc
pop
jno
inc
jns
mov
mov
icebp
jmp
and
cmp
imul
mov
cmpl
xor
sub
cmp
popa
pop
jno
sarl
pop
cltd
sbb
cmpl
test
in
adc
inc
lock
add
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
out
cmpsb
or
test
les
sbb
pop
jg
cmp
add
add
add
pop
add
add
add
inc
add
add
add
add
and
xchg
add
add
stc
add
repz
add
add
add
add
add
add
add
xor
sub
movsb
add
push
add
dec
add
add
add
add
push
add
stos
add
add
pop
add
add
add
add
sti
add
or
leave
add
adc
dec
add
add
dec
add
add
add
add
test
popf
add
add
add
movsb
add
add
adc
add
insl
add
testb
add
add
faddl
aas
add
add
add
jbe
adc
outsl
add
adc
push
add
add
add
add
add
add
add
add
add
addl
add
push
add
sub
sub
mov
add
add
jne
loop
mov
or
cmpsb
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
inc
add
add
add
add
jnp
jecxz
rolb
add
add
dec
add
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
sub
test
lcall
add
add
fildl
dec
add
add
add
insl
add
scas
add
jne
ljmp
add
add
add
add
dec
add
add
add
add
add
mov
add
add
lcall
add
add
add
add
add
add
add
add
jo
sbb
cmpsb
add
add
add
add
stos
add
add
add
add
add
add
clc
add
add
and
outsb
add
add
add
add
add
add
add
add
add
add
jecxz
dec
add
add
nop
add
add
add
add
inc
add
movsb
add
add
add
add
add
add
add
ljmp
add
mov
add
add
add
filds
pop
add
add
add
add
add
aas
add
add
add
add
add
add
add
and
int3
add
add
jno
ljmp
add
add
add
add
add
add
add
add
add
sub
push
add
add
add
add
inc
add
add
mov
add
add
sbb
movsb
add
add
add
add
add
add
add
mov
sub
and
and
dec
add
add
add
add
add
loop
cmp
add
add
add
mov
movsb
add
add
add
add
add
add
movsb
add
add
add
in
xchg
adc
sub
fisubl
pop
push
xor
jg
cmp
in
jmp
mov
lea
mov
and
push
jae
pop
dec
pop
xor
pop
shlb
repnz
sbbb
movsb
mov
push
es
inc
insb
cmpsl
enter
add
cmp
mov
jecxz
and
add
mov
xorb
xor
outsl
jge
add
xchg
pop
scas
push
mov
insl
sahf
inc
les
sub
push
int3
push
push
push
xchg
pop
imul
cmp
add
fldl
inc
and
mov
pop
clc
imul
jl
cmc
adc
cli
sarb
mov
mov
scas
mov
jne
sbb
pop
stc
dec
xchg
fsubrl
lea
xchg
sub
fnstsw
ja
frstor
addr16
cmp
mov
ficomps
mov
insl
scas
cwtl
mov
in
or
lock
arpl
fs
sub
or
outsl
in
xchg
rclb
or
mov
ret
test
dec
lcall
mov
mov
js
cmp
pop
mov
movsl
xor
or
and
inc
mov
xchg
sub
jno
outsl
out
xchg
orb
mov
mov
mov
or
or
mov
ljmp
pop
cltd
out
adc
mov
pusha
xchg
or
loop
push
sub
add
aas
rcr
sahf
aas
imul
xorl
loop
jnp
jno
push
stos
sahf
mov
je
xor
add
dec
int
andb
shll
dec
and
inc
cmp
cmpsl
sbb
push
sub
ja
cltd
ffreep
scas
or
xorb
jg
lods
inc
jmp
repnz
insb
aad
xlat
mov
aaa
mov
lret
mov
add
aam
insb
xor
or
test
mov
mov
les
repnz
cli
enter
xchg
cmp
mov
cmp
dec
lods
lea
xor
aam
das
iret
addr16
inc
repz
lahf
loopne
and
je
cmpsb
cltd
sbb
lea
jge
scas
out
xor
mov
dec
pop
ss
push
addl
sarl
les
adc
test
xchg
dec
in
push
filds
cs
int3
inc
xchg
add
cmp
pop
rcl
xchg
cmpsb
repz
jo
push
mov
lea
sahf
lahf
inc
inc
adc
jbe
mov
lahf
je
ss
pop
pusha
push
inc
mov
popf
mov
test
sysexit
jp
movsl
mov
int
xorl
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
