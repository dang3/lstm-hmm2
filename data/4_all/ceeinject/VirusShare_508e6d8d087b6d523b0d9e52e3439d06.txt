call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
cmp
jecxz
ficomps
bound
ja
and
repz
cli
xchg
ljmp
push
sub
jae
arpl
push
pop
xor
mov
repz
cli
cld
ljmp
shrl
sbb
or
das
push
pop
fisttpll
mov
lods
movsb
nop
xchg
les
mov
imul
push
shrl
mov
js
jo
push
xor
mov
push
testb
out
sub
call
mov
xchg
pop
fwait
psllq
mov
cs
inc
shrb
dec
and
jnp
daa
xchg
movsb
test
pop
rolb
loopne
pop
mov
cmpl
sub
arpl
imul
xchg
pop
lods
pop
add
cmpb
lock
stos
jo
xor
shll
inc
pop
cmp
stos
adcb
xor
jecxz
shr
cmp
adc
pop
ljmp
jae
fucomip
rol
stos
bound
sti
xchg
jmp
fidivl
sub
jp
push
pop
jmp
stos
add
cli
mov
lret
add
jg
outsl
dec
push
and
pop
or
xchg
scas
xchg
xchg
mov
repnz
ret
pop
add
outsl
inc
cmp
push
xor
dec
dec
fbstp
iret
test
ror
enter
add
and
add
push
pop
xor
mov
repz
cli
xchg
ljmp
push
sub
jae
arpl
push
pop
xor
mov
repz
cli
xchg
ljmp
push
xchg
mov
mov
and
insl
push
push
or
pop
xchg
sbb
push
testb
popa
pushf
int
clc
rcrl
mov
mov
and
cmp
fcompl
mov
xlat
test
mov
js
sbbl
adc
cmc
sub
jnp
fs
shrl
lea
push
out
insl
mov
sub
cmp
out
pop
test
pop
push
sahf
pop
ret
mov
stos
pushf
pop
lret
mov
je
das
push
aam
xlat
lcall
sub
ljmp
mov
das
hlt
scas
add
bound
jge
scas
mov
xchg
adc
adc
sbb
add
mov
sti
mov
sub
jle
insl
insb
and
cmc
xchg
out
or
jae
sub
aad
sbb
sbb
ret
andb
push
pop
sbb
popa
sbb
adc
pusha
jnp
sub
mov
xchg
xor
jo
add
mov
push
pop
stc
xor
jg
adc
xlat
ror
xchg
xor
fstl
or
call
lea
jl
mov
sbb
scas
gs
mov
bswap
xor
jmp
pop
sub
mov
pop
dec
adc
add
pop
ret
sbb
xor
fwait
in
mov
jns
or
dec
jge
imul
sti
aad
xchg
shll
add
fldt
enter
ljmp
pop
icebp
adc
sbb
xchg
xchg
cs
stos
fcomip
cmp
mov
dec
and
cmp
adc
sub
js
mov
sub
mov
movb
push
jle
dec
dec
in
popa
inc
mov
aad
lods
pop
data16
inc
fadds
cmp
and
mov
mov
sbb
and
sub
fsubrs
dec
jg
sti
mov
out
mov
pop
jmp
push
aaa
cwtl
inc
lret
lods
outsl
jge
in
xor
fwait
dec
inc
or
mov
adc
in
bound
int
aas
dec
dec
cmpb
mulb
add
andl
roll
sti
fidivs
test
shrl
loope
movsl
or
or
inc
pop
or
pop
fsubl
popf
xchg
scas
push
stos
pop
and
clc
mov
aam
les
pop
mov
scas
lcall
aad
xchg
ss
daa
or
scas
mov
jl
loop
mov
cmp
imul
mov
xor
loope
mov
pushf
loopne
shlb
rorl
insl
pop
sahf
adc
jmp
xor
push
push
cli
xor
pop
js
push
ret
mov
push
sti
aas
push
je
mov
scas
in
call
test
cli
cs
xlat
and
ret
test
pop
push
dec
push
mov
fldenv
cmpl
push
jmp
cmp
das
clc
mov
jg
fs
mov
jae
mov
insl
dec
push
xchg
fnsave
mov
popf
into
mov
scas
arpl
out
add
fucom
add
cwtl
shl
stos
inc
xchg
stc
in
loop
mov
jl
sub
in
pop
iret
push
lahf
je
inc
or
es
cwtl
ja
adc
or
xor
pop
or
xchg
fisubl
cltd
mov
addr16
cmpsl
imul
outsl
xchg
jbe
sbb
push
pop
lods
lods
int
mov
mov
mov
and
insb
sbb
pop
out
daa
inc
cmp
bound
push
adc
or
cltd
sbb
sbb
imull
lret
lods
pop
mov
jecxz
fstpl
mov
jns
fnsave
sub
pop
jns
out
and
insb
add
mov
xor
arpl
popa
xor
test
dec
push
dec
jle
jnp
xchg
xchg
shrl
popa
sbb
cmpsb
mov
mov
rorl
adc
lds
or
mov
adc
decb
xchg
cmpsl
loopne
fwait
mov
inc
adc
rcrb
test
sahf
enter
fs
cltd
jp
or
mov
xlat
pop
scas
xor
sbb
cmpsl
dec
in
dec
jp
notb
or
xchg
xchg
mov
add
loope
cmp
dec
fadds
fucomp
int3
and
out
xor
jne
fstps
repnz
jp
dec
lock
mov
mov
shlb
test
push
mov
cmpsl
repz
inc
das
pop
push
or
lds
dec
inc
idivb
sti
cmp
cmp
mov
in
jle
std
dec
pop
sub
sub
sarl
rorl
and
pop
andb
sahf
fsts
jg
sbb
int3
fdivrs
jge
ljmp
mov
mov
mov
cwtl
jle
loope
jl
lds
lods
dec
sbb
mov
jmp
jl
popa
jb
mov
fadd
fsubs
adc
std
repz
mov
xchg
cli
mov
push
mov
sub
loope
push
lcall
nop
les
xor
mov
in
cmpsb
nopl
pushf
add
jo
bound
loop
andl
push
dec
frstor
jg
jbe
jae
fsubrl
pop
psadbw
in
cs
call
test
xor
sub
pop
mov
shlb
mov
lds
or
pusha
or
mov
jne
cltd
jns
test
out
insb
add
mov
pop
lods
adcb
xchg
test
and
mov
xor
push
inc
xor
push
push
push
mov
jb
and
fsubs
movsb
insb
sub
cld
jnp
pop
test
xchg
adc
mov
in
movb
cmp
test
push
ret
repz
inc
mov
and
outsl
pushf
ret
and
sub
fcomp
inc
pop
or
add
lret
xor
loope
fisubl
mov
in
push
loopew
pop
and
xchg
int3
jmp
inc
adc
cmc
add
fldl
outsl
lods
out
lods
imulb
and
into
lret
rorb
xchg
call
fldt
add
mov
les
mov
and
fmul
adc
cmp
lds
pop
jns
jno
inc
xorl
jmp
mov
cli
push
xchg
xchg
push
sub
push
test
test
test
sahf
jae
cmp
aad
in
es
outsl
xlat
fsubrs
lods
leave
pop
loope
mov
add
mov
dec
ljmp
sub
aas
mov
mov
fadd
fs
loop
dec
outsl
or
std
sarb
arpl
jl
pop
xchg
repnz
pop
test
sbb
adc
cmpsl
adc
cmp
dec
subl
icebp
or
dec
in
sub
sub
jg
sbb
cmp
enter
cmp
movsb
out
inc
pop
rclb
or
mov
cltd
cmp
mov
xor
and
mov
mov
data16
in
pop
fsubrl
test
orb
out
es
mov
mov
call
pop
or
repnz
xor
mov
nop
scas
jae
xor
fiadds
call
mov
rcll
dec
lcall
inc
les
mov
cmp
mov
mov
stc
sub
or
xor
pop
sbb
xchg
pusha
or
repnz
jne
dec
sbb
adc
pop
lret
test
out
xchg
fidivrs
cmpl
adc
sbb
cmp
lret
mov
data16
pop
push
test
add
les
int3
sub
call
jmp
test
mov
ret
push
shl
or
in
subl
dec
cmp
push
or
pop
sahf
jl
jl
pop
add
cmp
outsb
add
lret
sarb
mov
nop
popa
mov
shr
out
mov
insb
es
mov
mov
mov
divl
fprem
ja
rcr
loope
jge
cltd
mov
add
add
push
pop
fsubrl
push
jne
add
out
cmp
mov
popa
std
sub
xor
pop
inc
xor
sbb
mov
sbb
movsb
leave
cmp
loope
test
jp
mov
jmp
or
cmp
test
mov
inc
sbb
sub
xor
dec
cld
lock
mov
jg
filds
cmp
test
scas
mov
push
cmp
fwait
das
jmp
inc
push
fdivr
in
pop
push
divl
mov
cmp
leave
xor
dec
jb
hlt
push
popf
pop
cmp
loopne
in
mov
hlt
sahf
test
pop
mov
sbb
jno
lret
add
xchg
outsb
jl
fsubs
xchg
xchg
sbb
sbb
mov
mov
sub
lcall
pop
lds
push
lods
into
jmp
mov
pop
lret
das
in
or
sub
out
xor
push
push
bound
in
emms
pop
push
sbb
test
cmpsl
push
incb
pop
repz
and
divl
mov
jp
pop
shll
cmp
push
push
in
dec
sub
out
call
ret
jle
jecxz
xchg
jb
xchg
lret
mov
js
xor
cmpsb
push
jo
cmpsb
inc
pop
pop
loop
xor
outsl
jmp
outsl
sub
subb
popa
xor
nop
daa
mov
mov
test
shl
mov
xchg
imul
sbb
or
or
sbb
push
xor
jb
add
sahf
aaa
push
cmp
mov
ficomps
xchg
jo
mov
or
jb
push
mov
jnp
cmp
and
fsub
mov
push
inc
iret
xchg
rcrb
or
aas
mov
sub
inc
les
inc
in
cwtl
cmp
loope
test
out
sahf
mov
lock
sbb
out
loope
xchg
and
outsl
test
movsl
bound
std
jne
and
out
daa
mov
add
push
pop
add
rorl
push
lahf
test
imul
xor
mov
out
xor
jmp
mov
sbb
pop
das
mov
inc
and
repnz
sbb
aam
adcl
ja
imul
test
dec
imull
pop
rcll
push
ficompl
icebp
sbb
xchg
push
repz
mov
repz
mov
mov
xchg
outsb
in
repz
sub
xor
cmpb
lret
insl
addb
xchg
cmp
out
or
push
mov
xlat
outsl
cwtl
mov
dec
loopne
das
insb
xor
outsb
mov
push
dec
clc
aas
mov
mov
adc
lahf
mov
cmp
lahf
jg
cmp
pop
sub
sbb
icebp
pop
lret
stc
push
jmp
or
insb
int
fnstenv
sub
mov
and
rcll
dec
cld
inc
je
push
cmp
jbe
std
cmp
out
in
jg
dec
cld
jns
pop
xchg
pop
mov
sub
dec
cs
stos
mov
hlt
sub
lods
inc
dec
mov
es
mov
inc
dec
nop
rclb
insb
fldl
add
pop
lock
mov
test
rolb
or
jne
sub
leave
pop
mov
adc
pop
mov
cmp
fs
in
lret
inc
imul
addr16
cmp
cs
pop
push
add
jbe
jae
add
add
cmp
int3
sarl
std
push
stos
in
pop
mov
jne
dec
add
in
dec
shlb
and
xor
call
fstpl
in
add
push
out
dec
in
and
test
xchg
adc
aam
adc
frstor
pop
cmp
jl
int
push
pop
mov
and
das
mov
push
xchg
sbb
push
outsl
xchg
ljmp
cwtl
xchg
sbb
xor
adc
mov
ja
adc
push
pop
lret
push
sub
add
push
daa
aaa
lar
pop
cmp
inc
dec
dec
jmp
scas
insl
inc
add
in
int
dec
inc
ds
rorb
dec
pop
xor
xorl
fucom
and
lahf
mov
jbe
call
cmpl
mov
sbb
push
in
and
jle
jnp
leave
pop
sbb
stos
cmpsb
inc
sub
je
std
cmp
fs
js
mov
shll
mov
inc
enter
in
inc
push
xchg
mov
in
push
mov
pop
dec
pop
xchg
daa
scas
sti
imul
lock
ljmp
rcll
arpl
fdivrs
dec
aam
sub
push
sub
dec
mov
or
jbe
jle
cmc
or
pop
out
inc
and
sarb
cmpl
enter
mov
add
out
xorb
or
icebp
push
decb
repz
or
jg
test
lea
xor
mov
adc
inc
add
icebp
gs
ljmp
fcompl
lock
mov
and
dec
xor
mov
and
pop
ficoms
or
es
pop
jae
decb
mov
add
sbb
adc
sub
xor
ds
pop
test
dec
adc
jne
mov
mov
dec
in
mov
adc
sti
xor
adcb
mov
mov
inc
adc
repnz
mov
jg
jb
in
test
xchg
pop
shll
adc
dec
lods
roll
mov
xlat
push
lcall
fxch
int
aas
mov
pusha
lret
jmp
or
inc
cmp
cmpsb
das
jo
not
std
xchg
addr16
add
inc
imul
sbbb
rorb
out
in
dec
out
mov
jmp
inc
push
sub
js
push
xlat
ret
mov
inc
fisttpl
outsb
pop
aam
cmp
lock
mov
dec
inc
mov
xor
test
jle
xchg
jmp
push
pop
xlat
rcrl
fisttpl
out
mov
arpl
or
mov
pop
daa
shll
mov
xchg
adc
cmpsb
ja
pop
or
js
out
ret
jo
inc
xor
cmp
xchg
mov
test
lahf
push
sbb
jno
dec
mov
xchg
push
push
addb
cli
and
fcmovne
dec
inc
out
cmp
jo
repnz
sbb
sbb
fs
jne
jnp
dec
lods
sub
cmpsl
mov
repz
idivl
pop
mov
or
xchg
sbb
ds
lcall
cmpsl
push
inc
push
mov
cmp
cmp
mov
add
xchg
dec
movsb
movsl
dec
fucom
nop
push
mov
dec
mov
in
push
cld
mov
push
pop
sahf
insl
fwait
adc
pop
icebp
mov
dec
es
inc
adc
sub
notb
and
inc
ljmp
shl
mov
les
mov
sbb
popa
insb
jl
cltd
je
pop
xlat
push
shll
mov
in
adc
cmpsl
ja
jnp
mov
cmp
loope,pn
and
xor
aam
and
out
repnz
xor
mov
fldenv
and
dec
dec
insb
insl
jmp
mov
mov
pop
arpl
loope
mov
adc
mov
sar
adc
and
fstpl
enter
lahf
push
std
pop
lret
movsl
jne
scas
adc
icebp
sar
pop
shlb
dec
cmpb
jp
popf
or
cmp
push
cli
orb
cltd
pop
ret
sbb
xchg
mov
sub
cmc
pop
rorl
push
jmp
pop
sub
rolb
xlat
data16
lods
in
pop
movsb
dec
aas
adc
cmp
mov
cwtl
sub
cmp
ficoms
mov
add
dec
arpl
frstor
mov
sub
dec
outsl
bound
clc
fldenv
sub
mov
adc
sbb
push
mov
adc
fcmovnu
jae
jne
cld
loopne
mov
xlat
sbb
cmp
jge
mov
mov
xchg
and
xor
das
mov
scas
rcll
mov
cmpsl
push
bound
subb
push
orl
mov
or
cmpsl
sub
cmc
das
ljmp
dec
popf
popa
xchg
cmp
add
inc
lret
inc
mov
cli
popa
sti
insl
in
outsb
ss
sbb
imul
aad
mov
nop
loope
in
or
adc
ret
cmp
js
lea
sbb
lds
xor
sub
adc
enter
call
xor
fcompl
mov
dec
leave
popf
pop
bound
jnp
mull
dec
faddl
psubb
mov
add
movsl
lods
cmpsb
nop
dec
jo
push
xorb
lahf
jle
xchg
fisubrl
xor
push
fiadds
fmuls
xchg
call
nop
mov
add
inc
jp
mov
mov
push
and
adc
push
inc
insb
mov
jl
mov
adc
je
repnz
in
inc
inc
sub
cmp
cmpsb
in
jo
repnz
mov
mov
push
popa
push
sub
movsb
insl
gs
dec
add
sub
enter
stos
lret
test
mov
rorl
out
adc
mov
std
mov
fwait
rclb
insl
xchg
test
dec
mov
or
sub
lahf
jae
sub
clc
pushf
movsl
adc
mov
flds
inc
fistps
adc
mov
test
push
hlt
lock
fistps
xchg
jb
xor
enter
xchg
pop
pop
xchg
mov
gs
mov
repnz
dec
outsl
rol
xor
mov
xor
fstps
mov
xor
xor
repz
stos
push
fbld
scas
xor
clc
add
es
aad
hlt
and
pop
jne
pop
lods
clc
sbb
aad
pop
mov
lret
popl
js
loop
fldcw
mov
and
mov
jo
fsubrl
pop
dec
sbb
cmp
push
dec
push
add
xchg
inc
adc
in
lock
popf
fnstsw
jne
in
addr16
xor
push
jecxz
sub
or
xor
lea
xor
add
imul
int
fwait
push
mov
js
movsb
pop
pop
flds
mov
idivb
push
sub
ja
jb
and
xlat
push
addl
mov
movsl
pop
arpl
imul
in
push
ss
push
jecxz
stc
xchg
sub
fcoms
cmp
adc
dec
push
fwait
repz
aaa
outsl
cmc
push
aam
cmc
sbbl
mov
cmp
pushf
test
in
mov
add
ja
mov
testl
pop
cmp
xor
xchg
xor
notb
pop
jne
xor
xchg
daa
mov
xchg
popf
hlt
adc
rclb
mov
dec
mov
loope
lock
adc
bound
lahf
test
orb
in
sub
add
push
and
mov
xchg
adc
inc
mov
scas
icebp
outsl
hlt
sub
lock
dec
mov
jle
mov
or
adc
lahf
mov
cmp
jae
jecxz
addb
push
xor
or
xchg
inc
pop
and
cmp
sahf
leave
aas
pushf
movsl
es
ret
mov
cmp
sub
sub
adc
pop
in
gs
mov
sahf
repnz
movsb
xchg
dec
loope
iret
jnp
mov
into
mov
mov
cltd
lock
ds
lock
aad
imull
pop
pop
add
mov
scas
test
xchg
clc
rcll
mov
xchg
dec
mov
xor
in
xor
xlat
repz
adc
push
lea
add
scas
mov
in
daa
outsl
mov
inc
dec
lcall
mov
repnz
push
shlb
mulb
in
xchg
out
add
out
aam
cwtl
jb
inc
sub
xchg
rcrb
jb
mov
xchg
xchg
jmp
push
push
push
mov
adc
xor
xchg
dec
dec
pop
mov
mov
push
sahf
jb
test
sbb
subl
mov
and
jl
push
mov
dec
cmpsb
sti
ss
aam
mov
cmp
pop
fwait
sarl
pop
cmp
insl
dec
sub
push
outsl
cmpsl
loopne
call
jp
cmp
outsl
mov
jl
mov
dec
rclb
imul
sbb
xor
lods
mov
xor
sti
insl
push
mov
mov
mov
scas
dec
fcmovnb
loop
fdivs
mov
arpl
mov
movl
push
pop
xor
mov
repz
cli
xchg
ljmp
push
sub
jae
arpl
push
pop
xor
mov
repz
cli
xchg
ljmp
push
sub
sbb
or
adc
pop
xor
mov
repz
cli
xchg
ljmp
push
sub
jae
bound
push
pop
mov
and
repz
dec
xor
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
lret
xchg
ljmp
neg
mov
sbb
es
or
push
cmp
jbe
xchg
xchg
ljmp
stos
out
xchg
pop
push
pop
push
push
je
or
sub
data16
xchg
xchg
repnz
loop
xchg
movb
push
push
jns
xor
add
jbe
insl
add
cmc
mov
fnstcw
imul
repz
test
jge
iret
sbb
repnz
or
xchg
int3
inc
cmp
outsb
das
jl
push
jae
xchg
flds
sub
lds
xor
je
jno
mov
sbb
cmp
movsl
pop
push
and
leave
or
cmp
and
fwait
push
out
mov
jmp
cmc
push
sbb
lcall
mov
out
dec
testb
add
mov
repnz
sub
lods
sbb
pop
pop
insb
mov
mov
xlat
adc
push
sub
dec
push
dec
push
sub
mov
xchg
xchg
ljmp
stos
out
notb
inc
push
jb
arpl
adc
push
xor
xor
out
idiv
cmp
orb
nopl
inc
or
jg
pop
adc
adc
out
mov
out
lcall
arpl
fs
cmp
jno
pop
add
scas
mov
xchg
xchg
into
ret
stos
out
testb
push
push
jp
or
push
sub
jbe
xchg
xchg
ljmp
stos
out
testb
push
push
jp
or
push
sub
jbe
xchg
mov
out
clc
push
test
jg
imul
or
and
push
out
scas
mov
or
inc
mov
fidivl
test
dec
mov
je
sub
ss
lods
scas
sbb
sub
pop
xchg
mov
clc
cli
and
xchg
xchg
outsl
lret
mov
pop
pop
dec
add
sub
push
scas
mov
rcll
loope
stc
pop
jnp
lds
cmp
inc
and
fldt
test
mul
sub
lahf
pop
jmp
jmp
inc
cmpsl
shrl
and
add
mov
xchg
stc
sub
cld
or
popa
or
cltd
repnz
dec
stc
sub
and
sub
iret
ja
and
add
imul
sbb
mov
jg
mov
test
loop
sbb
push
mov
rol
and
xchg
aaa
xor
out
movsl
ficompl
add
mov
jecxz
adc
jecxz
dec
dec
ja
int3
inc
sub
test
out
shl
pushf
in
fnsave
mov
lcall
test
in
in
lcall
out
fisttpl
aaa
pusha
or
xor
sbb
ss
roll
xchg
mov
lret
adc
pop
icebp
mov
test
ds
lret
mov
cwtl
orb
lcall
push
dec
jmp
fcmovbe
mov
cmp
test
sub
or
jmp
cwtl
mov
pop
xor
push
push
repnz
xor
inc
inc
test
out
stos
and
mov
cwtl
rcrb
push
out
clc
or
int
mov
jge
bound
hlt
outsl
std
or
les
lods
enter
or
lods
xor
pop
xchg
decb
jle
pop
scas
cld
test
push
sar
inc
or
shll
xlat
fistl
xchg
sbb
sbb
iret
pop
add
inc
jae
mov
inc
stc
and
out
xchg
pop
aas
lret
lds
dec
stos
fsubrl
outsl
test
mov
cmp
add
leave
sbb
or
push
sbb
inc
ja
out
sahf
dec
pop
in
mov
inc
mov
mov
inc
outsl
sbb
cmp
cmp
mov
or
push
stc
add
fcmovb
ret
popf
in
sti
pusha
jl
lret
aaa
jne
aam
gs
int
pusha
mov
xchg
sahf
sub
repz
dec
lds
dec
mov
mov
adc
lcall
sub
outsl
lahf
mov
add
sti
push
rorb
dec
subl
pop
push
rclb
test
dec
aas
mov
adc
and
mov
fldt
sub
adc
sub
mov
inc
jns
mov
cmp
test
dec
add
xchg
je
jl
sub
test
fidivl
sub
adc
push
mov
fs
andl
mov
xchg
or
jno
movsb
cmp
cmp
mov
inc
cli
inc
outsl
fnsave
inc
arpl
ds
fucom
repnz
and
jp
xchg
push
pop
push
xor
pop
daa
loopne
jg
mov
add
adc
dec
xchg
cltd
push
xchg
sub
pop
insb
lcall
or
adc
out
pop
das
test
or
cmp
pop
andl
inc
fdivrs
xchg
ret
adc
push
mov
pop
push
push
and
stos
int
mov
push
sahf
sbb
loopne
push
adc
movsb
repnz
dec
jb
rcrb
bound
loop
adcl
cmp
clc
dec
sub
fldt
jl
shll
sub
push
sub
pusha
push
push
cmpsl
cmp
mov
or
mov
orl
rolb
and
jno
pop
orl
pop
outsl
test
outsb
jb
icebp
xchg
movsl
cli
pop
sahf
sub
mov
xchg
dec
nop
cmp
jne
inc
roll
les
pop
mov
and
clc
pop
jnp
andl
mov
and
pop
dec
lahf
addb
sbb
std
mov
inc
push
ljmp
mov
add
mov
fisubs
pushf
cli
mov
addl
cwtl
jp
pop
sahf
es
xchg
loopne
insl
cmp
mov
add
pop
sbb
xchg
cmpsl
jl
pop
jnp
mov
cld
push
sbb
and
stos
arpl
add
xchg
int
movsl
dec
test
jle
pop
cmp
clc
pop
gs
iret
sbb
aas
add
jmp
xor
xchg
push
inc
out
or
and
mov
push
add
mov
nop
xor
xchg
sahf
mov
jmp
pop
sub
ret
int
mov
into
push
xchg
cltd
inc
bound
xor
inc
inc
das
ret
fsubr
jns
inc
inc
cmp
movsb
add
adc
es
inc
xlat
add
lds
out
sbb
movsl
pop
add
es
cmp
jae
fadds
mov
arpl
mov
xchg
sbb
inc
arpl
or
mov
lock
jae
inc
ret
out
mov
jbe
aas
mov
cli
lea
cltd
xor
pop
je
cltd
jo
movsl
xor
push
scas
ljmp
mov
repnz
xchg
pop
mov
and
cmp
in
in
cmp
fcmovnu
inc
sub
mov
les
out
iret
inc
jl
adc
movsl
fistl
or
push
mov
xchg
es
mov
mov
adc
fwait
daa
out
adc
mov
xchg
enter
sub
int
imul
sbb
in
dec
mov
stc
cltd
add
sub
cld
fstpl
pop
add
sbb
les
cmpl
mov
pop
jmp
std
add
adc
pop
arpl
adc
gs
xchg
push
jge
loop
aad
setnp
popl
enter
sbb
inc
sub
mov
subb
ja
or
pop
adc
add
mov
pop
adc
aad
shll
mov
adc
xchg
or
or
and
and
shll
push
loope
mov
cld
mov
adc
jbe
sub
pop
mov
jae
pop
xor
ror
scas
aaa
loope
data16
outsl
pop
movb
dec
cmp
iret
and
inc
subb
sbb
xor
out
push
loopne
jecxz
test
xchg
jae
roll
pop
fsub
inc
std
aad
xor
adc
dec
lret
and
mov
cmpsl
adc
cld
les
es
decb
addb
xchg
movsl
jg
mov
test
mov
add
xchg
jmp
add
outsl
xchg
push
or
dec
ljmp
movsb
out
sub
xchg
push
sbb
jle
cmpordps
movsb
repz
adc
push
aam
mov
add
or
sti
imul
mov
leave
dec
xor
dec
pushf
test
add
adc
pop
dec
cmp
jmp
insl
or
add
shll
adc
daa
pop
pop
mov
lods
push
adc
sbb
sub
int3
jb
adc
inc
inc
int
shr
call
mov
jmp
cmpsb
and
mov
les
push
ds
inc
mov
iret
cmp
xor
mov
lret
mov
out
into
sti
xchg
pop
daa
insl
lock
inc
in
addr16
cmp
dec
shll
inc
adc
xor
clc
out
test
add
shrl
add
aad
mov
jae,pt
dec
ja
js
jo
sbb
pop
lods
daa
sbb
mov
sbb
push
loopne
ret
xchg
pop
sub
imul
inc
les
addr16
les
repz
inc
fnstsw
shrl
add
lret
and
and
xchg
dec
lcall
test
xchg
push
mov
mov
mov
cmpsl
xor
sarb
push
aas
mov
mov
mov
xor
into
mov
dec
cmp
cmp
lcall
adc
cli
mov
or
sub
xlat
mov
add
cmp
arpl
jnp
adc
lds
adc
fisttpl
mov
outsl
test
inc
dec
mov
out
test
xchg
lret
mov
pop
jge
xor
dec
xchg
add
mov
jns
andb
mov
inc
mov
push
mov
adc
jle
shlb
cmp
iret
insl
aaa
mov
pop
test
pop
jl
jno
lock
xor
js
jne
insl
and
xor
push
cmp
xor
mov
cmp
or
loope
cmp
adc
std
jnp
movsl
mov
cmp
xor
pushf
mov
divl
es
cmp
xchg
or
cmpsl
mov
enter
rorb
or
xor
cmpsl
inc
xchg
adc
sub
xlat
push
adc
jg
xchg
sbb
subb
rorb
jbe
loope
mov
adc
sub
pushf
inc
mov
dec
pushf
scas
sahf
mov
lea
inc
out
repnz
dec
mov
mov
and
movsb
mov
mov
cmp
xor
pop
pop
add
mov
inc
mov
lods
xlat
cmp
dec
sbb
enter
pop
jecxz
mov
dec
test
jp
pop
fwait
push
cwtl
mov
stos
dec
lahf
add
jle
add
sub
pop
xchg
mov
jmp
jnp
lea
xchg
out
nop
push
xchg
push
cmp
cmp
sbb
sbb
jne
fistl
dec
ss
cmp
sub
lods
hlt
sti
xor
or
inc
lds
pop
mov
push
pop
mov
push
das
pop
xchg
xchg
jecxz
and
in
cmc
nop
xor
mov
sub
pop
sub
pop
popf
cmpsl
orl
arpl
out
jae
mov
shr
xchg
adc
adcb
cmpsb
pop
mov
sbb
sub
les
jmp
jge
test
cmp
out
std
fcom
sarl
imul
dec
shll
mov
xchg
movsb
pop
scas
movsl
test
lcall
xor
mov
hlt
mov
subl
popf
addr16
xchg
pushf
sbb
cmp
mov
idiv
xchg
xchg
inc
fdivl
mov
fstpt
lret
dec
jno
addr16
sub
popf
mov
jmp
rcr
mov
loopne
jnp
ljmp
loopne
mov
jg
jne
std
ja
dec
pslld
mov
rolb
sahf
push
jns
sub
inc
cmpb
pop
ja
push
lcall
shrb
lock
dec
push
or
jo
data16
aaa
push
ret
into
and
dec
pop
out
imul
loopne
aam
ds
sub
bound
repz
adcb
mov
pop
fldcw
cmpb
ja
ss
or
and
leave
pop
adc
movsb
lods
cmp
mov
icebp
sub
imul
std
ret
movsb
leave
pop
dec
mov
int
lret
push
push
add
ret
push
pusha
sarl
or
cld
xchg
js
push
dec
aas
mov
adc
sbb
movsl
loopne
jp
dec
in
xor
xchg
add
stos
daa
repnz
mov
mov
mov
mov
xchg
pop
xchg
fdivl
jecxz
loop
xchg
sub
push
pop
fsub
sahf
dec
mov
jno
mov
pop
pop
repz
insb
ss
push
or
sub
cmpsl
fwait
push
clc
and
movsb
orb
lea
xchg
outsb
les
xor
subl
mov
or
loopne
dec
test
test
mov
jp
lds
cli
cmp
and
cltd
hlt
ret
fdiv
or
mov
inc
mov
or
xor
sbb
jbe
xchg
das
mov
lock
mov
xchg
mov
xchg
pushf
and
arpl
and
push
fmull
cmpsl
inc
sub
in
xor
jno
icebp
cld
out
in
mov
into
push
dec
adc
xchg
or
adc
sub
jg
rol
rol
mov
jecxz
jmp
das
outsb
cmc
cli
inc
lods
ret
ds
outsl
mov
dec
add
ret
fwait
jge
adc
call
shll
mov
test
in
mov
mov
pop
mov
das
hlt
icebp
sub
mov
test
sahf
push
lret
xor
jae
add
push
mov
pop
lock
or
xchg
incb
repz
sub
push
pop
jle
lds
mov
ljmp
pop
inc
mov
jle
add
push
xor
xchg
sbb
sbb
cmp
mov
push
dec
test
cmp
jp
shl
imul
sub
push
out
lcall
insb
int
xchg
jg
test
subb
sub
je
cmc
jb
xchg
cmc
xchg
mov
mov
mov
in
xchg
sbb
inc
mov
push
ds
mov
iret
lods
inc
int
lcall
ja
jbe
jo
jb
and
or
fiadds
fistps
or
mov
pop
mov
xor
inc
push
push
or
popa
ljmp
cmp
js
das
add
lea
frstor
pop
jecxz
cmp
roll
jge
add
sbb
ja
xor
jae
inc
std
sbb
push
mov
ja
stos
cwtl
callw
pushf
imul
movsl
sbb
push
mov
inc
sbb
pop
push
xlat
mov
js
repnz
out
inc
stc
loopne
pop
sub
shll
jo
shr
cli
xlat
mov
sbb
jg
in
in
and
adc
movb
lcall
cmpb
fistps
xchg
jp
pusha
push
mov
shrb
ret
shlb
lret
add
inc
fisubl
inc
mov
sti
fdivr
mov
xchg
add
mov
ss
loopne
mov
jb
gs
je
in
cmp
sub
jg
xor
xchg
sbb
fadd
js
adc
cwtl
or
mov
int3
ljmp
shl
cmp
scas
cmp
ror
xor
movsl
sbb
movsb
in
xchg
jnp
pop
mov
data16
inc
dec
lods
out
mov
push
scas
stos
aas
cli
push
outsl
or
cmp
push
popl
inc
mov
or
iret
jb
call
and
adc
or
pop
push
cmp
dec
inc
fwait
ja
movsl
cmp
mov
or
fisubrs
das
mov
dec
sarl
ficoml
imul
sub
or
icebp
dec
sub
pop
sarl
inc
test
ret
sahf
cmc
push
subb
aam
jl
push
outsl
or
stos
ljmp
adc
ret
mov
lock
inc
push
sbb
mov
in
loop
out
rcr
outsl
je
inc
xor
sbb
push
icebp
jp
or
jecxz
mov
out
cmp
xchg
dec
iret
fwait
scas
inc
mov
mov
scas
dec
xor
pop
jnp
cmp
mov
in
das
jns
xrelease
in
in
test
aad
aad
fmul
mov
inc
lret
jl
fdivs
mov
jmp
pop
loop
hlt
sbb
inc
enter
aam
loope
notl
lods
add
cmp
js
int
xchg
jmp
fildll
mov
fsts
pop
sbb
jns
mov
negb
and
mov
aad
and
sub
mov
push
xchg
fwait
xchg
adc
sub
shl
aas
inc
cli
sti
aas
jmp
jmp
jle
test
cmp
out
test
mov
lods
nop
jge
jl
mov
mov
mov
jae
out
outsb
cmc
pop
adc
lods
insb
fst
and
outsb
dec
add
xor
adc
mov
mov
sub
inc
dec
push
jecxz
mov
or
test
push
inc
aam
adc
stc
insb
mov
bound
daa
mov
cwtl
sub
movsl
icebp
or
dec
xor
notl
mov
inc
jae
mov
jno
pop
lods
cmp
inc
cwtl
push
mov
ret
enter
loope
mov
decl
jne
xchg
jge
mov
and
pop
mov
sub
sub
xchg
jg
push
inc
imul
leave
xor
mov
dec
and
mov
cmp
movsl
dec
aad
dec
ja
lea
test
jb
out
lcall
dec
sbb
cmp
adc
pop
in
jno
movsl
xor
xchg
mov
std
out
sub
mov
inc
aam
sub
jne
leave
sbb
nop
daa
mov
push
push
adc
add
add
out
mov
jb
mov
popf
fisubl
mov
push
pusha
into
inc
aam
and
xchg
jmp
jmp
xchg
pop
cmp
js
and
cmp
jle
and
mov
adc
xchg
ficoms
inc
imul
dec
jbe
mov
clc
les
divb
fisubs
mov
pop
sub
or
jle
mov
out
sti
les
jle
sahf
or
idivb
repnz
repz
add
xor
push
out
inc
inc
out
hlt
jae
pop
ds
lahf
bound
fisubrl
inc
imul
int3
push
lcall
sahf
es
jp
aam
aam
sbb
mov
xchg
int3
adc
mov
mov
push
xor
rcll
lock
movsl
rcl
pop
cmp
jnp
mov
aaa
in
adc
cmp
lods
dec
jge
sbb
hlt
mov
push
xchg
mov
mov
inc
ss
mov
xchg
cmp
call
pop
mov
push
jp
or
imul
aam
icebp
test
jne
ss
jecxz
mov
dec
jmp
inc
mov
jbe
jo
call
pop
sahf
or
out
inc
rcl
inc
xchg
mov
mov
add
scas
hlt
cmpsb
arpl
cmp
pushf
ret
dec
lea
les
mov
out
xchg
push
into
sbb
inc
push
pushf
jecxz
mov
addr16
sub
mov
bound
xchg
lock
mov
sbb
repnz
insb
insl
nop
xchg
add
les
shlb
ret
vpunpckhwd
dec
mov
mov
daa
mov
mov
pop
divb
fidivrs
adc
movq
arpl
inc
pushf
push
les
loop
mov
mov
aad
jne
mov
jne
jp
loope
dec
adcb
mov
xchg
mov
out
add
fbld
or
inc
aad
nop
lcall
rcrl
sub
lods
xor
pop
mov
mov
repz
adc
inc
dec
mov
aas
fistpl
popa
repz
faddl
and
insb
add
out
loopne
sahf
xchg
aam
dec
ss
jne
fs
outsb
out
xchg
ret
lret
sbb
mov
in
nop
enter
cmp
mov
xchg
iret
sub
imul
mov
sbb
xor
sbb
pop
add
push
jbe
xchg
loopne
sub
jl
cmp
pushf
pop
fdivrl
adcb
dec
shl
ljmp
lds
cld
sbbl
sbb
and
pushf
push
or
pop
movsl
add
inc
test
mov
test
aam
lcall
jae
fisubrl
jecxz
cmpsb
imul
cmpb
add
ficomps
adc
pop
xchg
or
outsb
data16
sbb
stos
push
jo
aaa
cmpsb
mov
lcall
outsl
lods
ret
dec
loop
loopne
loopne
std
dec
and
mov
mov
or
repnz
xchg
popf
dec
sbb
mov
push
inc
pop
lret
leave
mov
out
pop
push
xor
clc
xchg
insb
stc
xor
pop
push
pop
xor
jge
cli
sub
das
xor
lahf
sbb
adc
fimull
jb
xchg
sbb
ret
jbe
inc
push
call
dec
icebp
sbb
pop
iret
pop
xchg
push
sub
xor
orl
jns
out
adc
negb
cld
add
cld
test
ss
push
push
pushf
xchg
shr
or
cmp
stos
add
dec
push
and
pop
popf
mov
xlat
add
cmc
mov
xchg
icebp
inc
mov
inc
sub
sbb
and
sub
sub
repnz
js
jmp
sbb
fcmovb
jmp
and
out
xor
rolb
int
sti
out
adc
or
mov
test
push
in
pop
pushf
addr16
das
sub
je
mov
daa
push
push
mov
push
cld
arpl
repnz
mov
inc
push
cli
mov
lcall
push
pop
push
push
jp
or
push
sub
jbe
xchg
xchg
ljmp
stos
out
testb
push
push
jp
or
push
sub
jbe
xchg
xchg
ljmp
stos
out
testb
push
push
jp
or
push
sub
jbe
xchg
xchg
jmp
cli
mov
lcall
push
movsl
mov
jge
xchg
test
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
dec
mov
cwtl
pop
cli
sub
cmp
lret
cld
or
jp
push
pop
mov
fisubrs
testb
sub
cmp
or
xor
in
sub
jnp
or
cmp
dec
pushf
add
pop
mov
in
mov
lret
in
or
jb
outsl
scas
adc
sbb
push
push
clc
aam
out
lcall
lds
loope
jge
sbb
inc
mov
mov
jae
xlat
push
outsl
push
mov
aam
push
push
repz
jecxz
adc
lahf
xor
mov
pop
mov
inc
add
and
xor
stos
stc
inc
insb
in
sub
bswap
or
push
das
inc
xchg
pop
jbe
data16
ret
dec
pop
add
int3
lret
imul
fldl
jae
loopne
mov
pop
mov
push
int
loopne
iret
test
sub
push
mov
xchg
aaa
sbbl
add
and
mov
mov
les
stc
pop
pusha
dec
mul
loopne
pop
lcall
cmp
or
mov
in
mov
insb
into
cmp
xor
dec
scas
shrl
out
and
xor
jns
pop
cmp
outsl
mov
xor
das
cmc
imull
iret
cmp
aas
jmp
xchg
jle
outsb
das
gs
das
pop
lea
sbb
add
out
pop
pushf
sti
and
xor
or
sbb
in
sub
sbb
or
jp
push
pop
mov
mov
dec
mov
ljmp
in
sub
sbb
or
jp
push
pop
mov
mov
xor
xor
movsl
push
xchg
and
dec
mov
adc
adc
ficoml
mov
and
push
inc
cmp
adc
sarb
out
nop
inc
mov
out
dec
xchg
pop
mov
jmp
andb
inc
push
inc
add
fsubr
jo
sbb
mov
aas
mov
push
into
or
aaa
mov
cmpl
in
icebp
dec
mov
xor
shll
and
popf
insb
mov
enter
es
lea
pushf
push
imul
cli
lret
xor
dec
lahf
jg
scas
icebp
mov
fadd
out
repz
into
jle
nop
sub
mov
jb
mov
cmp
push
lds
add
scas
pop
xchg
je
in
in
fcomps
jne
out
fcmove
movsl
outsb
sbb
cli
out
inc
stos
std
ret
cmc
clc
xor
fs
loope
mov
and
shl
cmp
ret
fs
add
cwtl
negb
js
xchg
adc
cvtdq2ps
cltd
je
scas
int
addr16
loop
pop
aam
mov
and
xlat
cmpsb
mov
xchg
rcll
push
cmpsb
addr16
out
shll
xor
sub
or
cmp
mov
mov
pop
push
cmp
jno
ret
mov
pop
cmp
mov
imul
mov
je
mov
pop
mov
lcall
jae
cmpsl
out
inc
roll
cwtl
imul
test
xchg
jae
sbb
jle
or
or
cmp
pop
jl
popf
mov
popf
inc
ljmp
ret
ja
stc
sbb
es
sub
leave
mov
jmp
jecxz
incl
push
popa
popf
jge
mov
test
mov
sub
lret
add
sti
or
dec
addr16
adc
dec
test
fwait
jnp
insb
int3
lahf
cli
mov
divl
or
mov
push
and
cld
jo
ret
jbe
jbe
rorb
mov
lock
mov
pop
daa
or
cmc
dec
por
dec
mov
push
stc
rcrl
iret
or
dec
movsb
je
add
in
aas
xor
xchg
jo
mov
mov
gs
lcall
rcr
sbb
push
frstor
xchg
inc
iret
jno
ret
sbb
pop
bound
mov
mov
add
and
test
cmp
or
sbb
xchg
add
jecxz
dec
adc
push
xchg
sbb
jne
or
pushf
cmp
test
mov
dec
enter
aaa
cwtl
in
push
ret
addb
push
fwait
out
fildl
inc
mov
push
dec
pop
aam
pusha
aam
std
cmpsl
mov
adc
insl
push
and
adc
jg
and
test
leave
fists
xor
pminub
cmp
fistpl
gs
mov
into
popa
call
jl
mov
jns
add
ja
mov
cld
or
stos
add
pop
mov
outsl
push
mov
and
xor
adc
ret
movsb
imull
js
in
movsb
mov
aad
sahf
ljmp
pusha
mov
mov
or
gs
pop
ljmp
sbbb
sub
jecxz
iret
xor
fs
xor
je
pop
mov
cmp
and
xchg
push
out
inc
fs
repnz
and
xchg
lods
mov
or
scas
or
fidivl
lret
cmp
mov
rclb
cwtl
lods
jnp
push
cmpsb
movw
inc
lahf
loope
add
mov
gs
repnz
adc
ret
jb
fidivrs
pop
push
test
cmp
fisubl
dec
sub
js
insb
rorb
jo
stc
cs
fsubs
jmp
push
mov
xor
stos
xlat
jmp
jo
fdivs
fidivs
adc
jecxz
movsl
jb
push
jmp
push
mov
cmpsb
mov
ret
or
add
mov
and
pop
ror
pop
mov
xor
sti
fldt
sub
dec
dec
xor
stos
int3
adc
push
call
mov
and
adc
cld
sub
stc
push
ret
xchg
leave
push
adc
repnz
je
stos
cmp
add
popa
dec
xlat
aaa
movsl
dec
cmp
mov
ror
sub
cld
jge
repz
and
sub
insl
jge
rolb
cltd
in
lea
mov
and
out
jge
sub
out
sbb
push
dec
sub
push
sbb
lods
idivl
mov
rclb
adc
mov
add
dec
cmc
lods
fcoms
jge
sub
cmp
mov
ret
cmp
daa
adc
pushf
adc
ja
fcomps
dec
push
aas
mov
sub
testb
fisttpl
cmpl
popf
pop
imul
ss
lret
push
push
repnz
inc
int3
cld
or
mov
cld
jae
es
das
xor
pop
cmp
push
aad
stc
sbb
inc
push
push
jle
mov
push
and
jno
cmpsl
andw
cmpsl
dec
or
xchg
sbb
xchg
inc
pop
int
enter
inc
adc
pop
mov
or
gs
mov
xchg
push
and
inc
iret
test
shrb
mov
sbb
fcom
xorb
cli
sbb
leave
scas
push
or
fcmovnbe
cmp
fsts
mov
imul
sub
popa
sti
pop
cmp
test
daa
sub
add
adc
inc
mov
arpl
imul
sub
inc
push
sahf
sub
jmp
testb
mov
stos
and
jne
out
cwtl
ficoml
cld
orb
int3
sub
out
adc
test
out
adc
imul
pop
imul
cld
ljmp
push
add
outsl
lcall
ret
push
stc
loope
dec
sbb
adc
leave
pop
push
add
daa
ljmp
dec
adc
or
adcl
inc
sub
pop
les
mov
or
dec
xchg
mov
into
dec
loop
sub
int3
jmp
data16
movsb
repnz
dec
jecxz
adc
cmp
fnstenv
aad
sbb
inc
pop
xrelease
sahf
xchg
popa
cmp
sbb
cmp
enter
or
add
dec
gs
mov
ret
xchg
sbb
insb
cmp
aaa
sbbb
xchg
xchg
pop
push
mov
cmpsb
sub
dec
jb
icebp
stc
xchg
mov
mov
js
jge
add
je
push
rol
xor
xchg
cmp
adc
mov
add
fcmovbe
daa
int
out
add
inc
pop
or
ret
mov
orl
addl
jp
lock
cwtl
mov
mov
jle
sub
push
xchg
test
notl
or
fwait
mov
adc
in
rorl
jo
sbb
out
mov
insl
xor
sub
jge
xchg
negl
xchg
cmp
mov
ret
mov
das
cltd
shlb
shrl
addr16
daa
jne
lret
push
sbb
out
repnz
jb
mov
push
jb,pn
mov
xlat
js
adc
aad
mov
mov
lea
inc
xor
fnsave
xchg
sbb
pop
rol
mov
or
daa
loop
lds
arpl
int3
movsb
outsb
or
mov
lds
mov
aaa
sahf
dec
popa
xor
pop
mov
ret
ljmp
dec
inc
mov
pop
pop
enter
ror
data16
mov
pop
cmp
ja
fwait
scas
pop
pop
mov
adc
sbb
cmpsl
mov
push
or
sarl
ja
sbb
fcompl
jb
jo
arpl
int
lock
ret
int3
test
pop
aas
xchg
push
jecxz
jbe
dec
cwtl
inc
xor
inc
shll
stc
stc
pop
jmp
add
adc
push
jae
fs
scas
mov
xchg
sbb
xchg
mov
std
push
fcmove
and
xchg
add
add
int
push
xor
stc
filds
lock
xchg
call
fmulp
mov
testb
ret
in
nop
sub
and
dec
xlat
mov
dec
aas
sub
test
xor
outsb
add
gs
mov
push
es
mov
dec
jae
aad
dec
lret
rorb
mov
or
shlb
loop
jb
and
insb
enter
into
mov
xlat
cmpsb
push
pushf
dec
aaa
daa
and
xor
cwtl
fadds
or
rcl
jp
dec
hlt
and
test
pop
mov
loopne
push
loop
and
pusha
insb
cmp
inc
sub
add
cwtl
mov
test
hlt
fs
push
pop
or
mov
orl
idivb
or
adc
in
mov
lock
push
fidivl
add
pop
lret
lret
and
lcall
aad
dec
mov
outsl
sub
adc
pushf
test
cmp
sahf
sti
ljmp
jno
sub
ret
dec
sub
xor
mov
add
push
sub
pop
xchg
adc
xchg
mov
add
mov
mov
data16
xchg
jno
push
and
leave
push
sar
cs
mov
ret
mov
jl
fwait
test
inc
push
inc
dec
mov
dec
scas
jge
xchg
call
jo
fldcw
pop
mov
mov
mov
cmp
repz
add
in
xor
pop
stc
fwait
rclb
inc
xlat
mov
jle
mov
jne
or
mov
mov
xchg
mov
add
lea
mov
ret
test
and
daa
mov
jo
sti
dec
popl
lods
stc
xchg
push
cmpb
sbbl
addr16
lret
cltd
mov
test
jae
push
xor
cltd
pop
mov
mov
or
and
shll
xchg
test
popf
or
pop
andl
scas
sahf
leave
xchg
dec
loopne
std
bound
pop
es
rcr
xchg
and
or
sub
mov
push
divb
popa
and
xchg
adc
cld
ret
adc
sarl
adc
inc
scas
or
jp
test
addr16
fcompl
jl
or
cmp
insb
shrl
test
push
pop
push
dec
or
imul
stos
mov
in
sub
cs
add
and
sub
test
mov
pop
sbb
and
xor
pop
adcl
adc
mov
sub
fcompl
mov
sub
lcall
push
stos
mov
xor
and
loop
push
pusha
or
and
inc
jge
out
push
mov
fisubl
cmp
lret
mov
leave
mov
cwtl
push
sti
aam
int
xchg
jle
pop
sar
dec
in
sbbb
fisubrl
nop
sbb
sbbb
pusha
ret
xlat
dec
pop
lock
fwait
sbb
fs
mov
hlt
std
jne
pop
jecxz
xchg
fistpll
or
inc
xor
and
stos
aad
cli
enter
or
push
adc
cmp
add
push
mov
push
add
ret
mov
mov
mov
int
clc
add
or
pop
pop
jmp
and
sub
test
mov
aaa
push
aaa
mov
jmp
adcl
out
outsb
inc
sbb
xchg
mov
cmpsl
sbb
cmp
shl
xchg
add
jns
mov
cld
loop
mov
test
mov
ljmp
nop
lock
outsl
and
inc
das
das
pop
and
movsb
leave
fisubs
aas
fbstp
mov
pop
dec
dec
mov
ja
dec
pop
and
fsubs
lahf
cmpsb
fdiv
xor
mov
mov
int
and
and
push
sbb
clc
test
push
pop
outsb
push
lret
or
cwtl
add
inc
sbb
aad
frstpm(287
mov
and
dec
arpl
cltd
test
inc
mov
mov
pop
inc
mov
add
pop
cmp
sbb
nop
adc
inc
stos
or
sbb
pop
jmp
jo
adcl
adc
dec
xor
jecxz
dec
mov
adc
dec
cmc
hlt
add
lahf
pop
sub
push
ret
add
negl
dec
loope
xchg
push
pusha
sarl
sti
fiaddl
xorb
mov
add
out
mov
pop
ja
inc
cmpsl
hlt
jb
rorb
mov
lock
mov
cltd
aas
fimull
test
popa
cmp
push
into
sbb
idivb
jnp
in
fwait
mov
mov
jge
out
sarl
inc
sahf
adc
add
xchg
cwtl
gs
out
nop
cmp
and
dec
adc
mov
gs
push
lea
outsl
sarb
bound
in
pop
test
dec
mov
scas
pop
loope
imul
faddl
jle
andb
bound
mov
dec
es
adc
mov
add
mov
cmpsb
xor
mov
mov
mov
icebp
jmp
movsl
sbb
loopne
stc
stc
push
mov
sarb
pop
jo
adc
adc
cmp
rorl
push
mov
ret
fcompl
push
push
mov
add
adc
cmpsl
in
shlb
scas
and
add
jmp
and
cmp
gs
sub
sbbb
jge
lods
pop
repz
push
mov
push
shl
pop
and
dec
data16
mov
mov
sbb
inc
inc
test
xorl
or
lods
data16
rcll
add
pop
movsl
loopne
mov
sti
push
sub
into
call
mov
inc
adc
jbe
mov
cld
les
xor
and
ja
or
mov
mov
adc
inc
and
xchg
negb
imul
arpl
dec
cmp
lret
in
push
aad
mov
pop
cmp
idivb
sub
shl
addl
insl
mul
inc
lods
rcll
mov
faddl
nop
add
jo
loope
test
insb
clc
aam
pop
or
lock
jg
sahf
push
cmp
dec
cmpxchg
sbb
ror
xor
xchg
add
decb
sbb
lret
outsl
jo
jb
xchg
push
add
in
pop
sti
mov
xor
jo
insb
dec
inc
mov
movsb
int
std
push
dec
and
mov
sub
aaa
cli
fisubl
aad
cmp
xor
dec
icebp
test
jb
dec
jle
add
dec
mov
jae
notl
scas
push
test
add
call
sbb
sbb
adc
mov
pop
sub
jne
cltd
xlat
rorb
mov
jl
ja
mov
movsl
subb
xchg
inc
test
movsb
js
mov
dec
sbb
movsl
mov
adc
sbb
push
ret
inc
in
xchg
xlat
in
sbb
insb
ja
lds
insl
lcall
les
or
mov
push
add
mov
daa
pop
or
dec
add
push
adc
mov
dec
daa
cli
push
cmp
int
add
or
mov
imul
loopne
int3
adc
int
sub
xor
xor
fcoms
inc
leave
mov
sarl
inc
stc
adc
stos
mov
sbb
popf
adc
and
jl
mov
cwtl
or
cmp
sub
lods
imul
and
mov
daa
rol
int
in
arpl
lock
ret
adcl
sarb
xor
add
fwait
test
data16
jecxz
iret
pop
out
mov
push
dec
xor
push
testl
dec
sub
sbb
div
xor
popf
dec
cmp
fisubrl
mov
push
bound
and
lock
cmp
pushf
rorb
pop
pop
mov
lods
aas
sbb
jae
mov
mov
sarb
xor
cmp
pop
and
push
push
fmulp
in
out
call
mov
testl
aas
ret
icebp
push
cmp
jne
mov
mov
sbb
xchg
loopne
xchg
aaa
or
into
icebp
or
ljmp
data16
arpl
ja
cmp
test
ds
lods
daa
lea
aas
cwtl
add
xchg
cmovs
xchg
cmpsl
repz
xchg
cmc
and
flds
sub
mov
or
dec
repnz
xchg
pop
jno
or
adc
fstpl
iret
divl
repz
push
nop
xchg
xchg
mov
scas
fistps
pop
nop
xchg
lret
loopne
stc
inc
out
adc
test
mov
jle
dec
cmp
lods
pop
dec
mov
rorl
xchg
lcall
or
les
test
popf
sbb
or
lahf
pop
push
bound
popa
lcall
jnp
popw
cltd
in
push
and
sub
adc
mov
fidivrs
roll
push
cmp
arpl
push
pop
std
fucomip
dec
in
mov
cmp
hlt
inc
fwait
scas
loopne
jae,pn
inc
xchg
fnstsw
push
jbe
rolb
push
push
push
add
ror
mov
fisubrl
xchg
cmp
movsl
aam
push
imul
scas
inc
cmc
cli
and
xlat
mov
nop
jl
adc
aad
loope
cmpsl
lea
dec
adc
dec
hlt
clc
push
scas
imul
fisttpll
sub
push
jl
push
pop
cld
or
into
pusha
sahf
divl
jne
inc
pop
aad
adc
dec
push
dec
out
enter
sub
out
dec
gs
mov
fsub
mov
ljmp
lods
mov
icebp
cmp
push
jns
inc
popl
xor
int
cwtl
cmpsl
pop
stos
loope
pop
mov
test
or
loopne
js
fcoml
dec
cmpsl
hlt
icebp
or
mov
xchg
pop
xor
rcll
fisttpl
add
mov
inc
sub
in
les
idivl
mov
sbb
cmp
in
es
out
cltd
cmp
pop
inc
cmpsl
jns
jae
loope
fwait
int3
pusha
add
dec
sub
lcall
sub
sahf
sub
negb
xchg
sub
pop
dec
dec
mov
sarl
or
and
push
dec
mov
xlat
js
sub
mov
imull
dec
cld
and
xlat
or
jecxz
lret
jg
test
add
hlt
testb
xlat
cmpsb
inc
movsb
lods
push
lret
scas
sub
cmp
orb
popf
mov
loop
popa
sub
cltd
cmp
addr16
cwtl
insb
and
jae
adc
movsb
mov
jl
cmp
orb
repnz
mov
xor
jne
xor
jo
les
xor
mov
aam
fmuls
push
sub
sahf
addr16
push
push
or
inc
adc
stc
pop
push
push
mov
sbb
xor
repnz
jmp
xor
adc
shrl
inc
gs
xor
or
jnp
dec
test
adc
jns
in
sub
mov
movsb
insb
mov
mov
and
jo
sbb
cld
lock
push
scas
fs
idivl
test
addr16
xor
lahf
and
mov
fnstsw
lds
aaa
arpl
jg
rclb
sahf
stos
cltd
pop
mov
jl
add
test
inc
sbb
xor
leave
sub
sbb
mov
mov
pop
cltd
clc
imul
mov
incb
out
dec
push
dec
in
sahf
out
push
ret
jb
mov
or
jbe
sub
mov
adc
jo
pop
jmp
push
dec
jae
xchg
out
mov
xlat
lods
and
xchg
mov
sbb
cmp
sbb
mov
fs
inc
dec
push
mov
fstpt
xchg
sahf
mov
adc
push
mov
lcall
es
mov
ja
test
lret
cmp
xorl
jns
lds
jb
lds
push
aad
or
movsl
mov
int3
adc
loope
mov
ss
addr16
jmp
into
repnz
out
in
cld
mov
out
mov
adc
into
cmpsb
repnz
pop
lds
int3
sub
mov
mov
test
mov
js
sarb
jl
dec
mov
ljmp
in
sub
sbb
or
jp
push
pop
mov
mov
dec
mov
ljmp
in
sub
sbb
or
jp
push
pop
mov
mov
push
mov
sub
push
fimull
or
in
sub
ljmp
mov
scas
mov
cwtl
shrb
cmp
mov
cmp
aad
mov
or
movsl
hlt
mov
imul
push
lods
sub
stc
bswap
push
fldcw
jg
pop
mov
scas
imul
cmp
or
sbb
jmp
push
fldcw
jle
dec
lret
pop
cltd
scas
imul
cmp
or
sbb
inc
ds
outsl
lods
jnp
or
sti
xor
ret
or
xor
ja
icebp
add
xor
adc
stc
sti
das
fbld
inc
bts
add
push
push
enter
faddl
enter
imul
je
inc
dec
stos
cmc
cs
push
pop
or
and
test
jns
jbe
adc
mov
pop
out
sub
cmp
xchg
out
xor
xchg
testb
jbe
adc
mov
mov
into
sbb
lcall
push
sbb
jbe
adc
mov
mov
ss
stc
rcrl
fcomps
mov
pop
cwtl
icebp
imul
cmp
or
sbb
jmp
push
fldcw
jle
dec
mov
fiaddl
cli
jns
and
xor
inc
mov
lea
jp
sbb
xor
and
std
jnp
dec
sub
jle
sbb
mov
jnp
and
in
inc
leave
fsubs
nop
sub
and
cmp
or
sbb
jmp
push
fldcw
jle
dec
mov
scas
imul
cmp
or
sbb
jmp
push
fldcw
jle
dec
mov
scas
imul
test
cmpsl
lea
sbb
pop
sub
mov
outsl
insb
mov
mov
stos
xchg
cbtw
push
movsl
and
repnz
dec
jno
mov
lret
mov
mov
mov
and
pusha
push
addl
adcb
sub
ljmp
insb
push
push
inc
adc
aaa
sbb
mov
xchg
jno
ss
mov
je
fucomi
std
xchg
jae
cmp
adc
dec
and
sbb
add
ret
imull
bound
repz
shll
dec
inc
sub
sub
xchg
mov
loopne
cmp
sub
adc
lods
lods
xor
adc
aam
sti
cmp
push
mov
loope
jmp
rcl
scas
sbb
ret
into
cmp
dec
mov
pusha
pop
bound
je
and
cmp
sub
fwait
sub
sar
call
call
jo
jl
subl
cmp
xor
rcll
mov
addr16
add
ret
jecxz
lcall
in
loop
int
sbb
fs
jle
fs
int
cld
xchg
dec
push
sbb
lds
jecxz
dec
mov
ljmp
bound
stos
xlat
pushf
or
mov
adc
repnz
fldcw
cltd
iret
sub
jbe
mov
cmp
insl
mov
push
js
dec
mov
orl
xor
mov
mov
call
pushf
cs
or
lock
aas
adc
xor
loop
loopne
icebp
or
scas
repz
mov
jns
dec
xchg
int
les
adc
rcll
std
dec
je
add
mov
aas
cmp
sbb
test
mov
jle
xor
test
in
mov
sbb
pop
out
mov
push
mov
fsubs
adc
jne
inc
adcl
cmovne
outsl
ficoms
jo
xor
fucomi
out
cli
dec
jne
jae
outsb
dec
int3
pop
in
xchg
adc
push
push
push
sub
lds
ljmp
fisttpll
inc
adc
fiadds
orb
jmp
int3
or
dec
sub
inc
bound
and
inc
outsl
popa
push
mov
inc
mov
and
or
scas
cs
xor
mov
pop
icebp
imulb
lea
or
loop
loopne
xchg
icebp
rolb
cmp
fs
push
adcl
jmp
daa
cmp
popf
add
fs
scas
lock
daa
cmp
in
mov
mov
mov
std
lret
int3
and
xor
dec
lahf
push
mov
ljmp
test
arpl
pop
inc
mov
push
dec
das
adc
jne
adc
add
xchg
loop
cmpsb
mov
jmp
jno
clc
push
int3
lea
push
add
mov
shl
pop
cmp
ljmp
stc
xlat
and
fstps
fistpll
push
sarl
adcl
xchg
fmull
push
push
pop
mov
aad
jo
sbb
push
mov
jle
push
sub
pop
mov
imul
mov
push
jecxz
fcmovne
jne
mov
jge
cmp
sub
enter
es
sbb
adc
jl
xchg
jo
push
arpl
xchg
jno
mov
jo
xchg
add
or
arpl
ljmp
push
push
push
loop
mov
push
pop
xchg
fwait
cmpsb
adcb
outsl
es
mov
xchg
mov
pusha
lods
hlt
lods
push
hlt
xchg
ret
lar
rorb
xchg
std
in
mov
adc
jmp
push
xchg
call
scas
aaa
xchg
add
mov
add
popa
mov
xchg
and
nop
cwtl
push
movsb
lds
xor
pop
mov
jecxz
sbb
sbb
xchg
jns
movsl
lret
push
inc
enter
sub
out
jbe
out
sbb
addb
xor
outsb
push
add
es
or
pop
call
hlt
xchg
cs
mov
inc
cmp
dec
xchg
push
xchg
jno
sahf
outsb
outsb
xor
bound
and
ljmp
xchg
cmpsl
lds
sbb
or
add
std
lret
in
cmpsl
loope
pop
stc
add
mov
stos
adc
mov
or
push
pop
sbb
inc
push
lods
leave
jmp
fucomip
xchg
fistpl
stos
popa
or
sbb
and
mov
cmpsl
mov
pop
sub
pusha
aad
cmp
ficomps
addb
jge
pop
push
sub
jns
insl
mov
sub
and
pop
and
xchg
loope
xchg
loope
or
mov
and
push
xchg
dec
or
pop
jbe
fldenv
inc
inc
push
fldt
jle
mov
xlat
pop
inc
inc
cmp
sub
push
xlat
xor
addr16
or
insb
pop
and
mov
jge
enter
ds
xchg
jmp
sub
nop
pop
or
mov
xor
adc
pop
inc
push
push
xor
jb
sahf
cmp
cmp
loop
loopne
push
jp
subb
push
sub
inc
sbb
adc
popa
dec
sbb
divb
aad
jg
adc
or
mov
insl
mov
xlat
outsl
fmuls
out
les
mov
shr
aam
xor
xor
cmpsb
pop
push
adc
push
mov
popa
dec
inc
cmp
arpl
or
pop
push
test
loop
gs
lret
xchg
aad
dec
je
jp
cltd
mov
in
movsb
stos
mov
int3
dec
xchg
xor
add
add
rcrb
push
fcomip
or
sbb
pop
and
insl
inc
and
xchg
dec
inc
mov
add
mov
mov
mov
pop
pusha
cmpsb
add
xchg
out
dec
or
xor
pop
mov
xor
movsb
pop
push
add
cmp
mov
adc
shrl
out
repz
repnz
xchg
rep
fidivrl
cmp
jmp
xor
lods
inc
pop
add
fsts
dec
mov
imul
int3
and
jns
xchg
call
popf
push
add
aad
testl
loope
sbbb
sbb
cmp
xor
leave
add
lahf
ret
aad
imul
or
das
fnstsw
inc
pushw
xchg
sbb
je
fdivs
or
push
inc
xchg
dec
xchg
inc
repz
bound
aas
ret
jge
sarb
xchg
inc
std
fildll
and
and
out
dec
add
sub
mov
push
push
adcl
pop
fidivrs
mov
test
ret
jle
jnp
lahf
insl
outsb
js
movsb
xchg
fmuls
lock
or
add
push
loop
cmp
mov
sbb
mov
jo
shlb
dec
mov
fisubrs
cmpsl
insl
test
nop
lret
mov
sbb
test
cltd
imul
pop
test
addr16
mov
adc
pop
lret
add
sbb
dec
jl
in
jbe
mov
icebp
stos
sahf
xor
aas
adc
xor
fs
xor
nop
test
push
jge
movsb
je
fcompl
sub
lret
imul
adc
je
imul
jno
ret
cmp
xor
icebp
cmpsb
mov
cmp
pop
outsb
int3
movsb
inc
lock
lahf
sahf
gs
shlb
inc
out
sbb
mov
and
xchg
jb,pt
sbb
lret
mov
cmp
and
inc
xor
mov
and
or
xchg
inc
mov
js
inc
mov
lock
inc
jmp
mov
gs
mov
mov
cmp
jae
lods
or
mov
jnp
test
xchg
mov
lea
mov
dec
xor
xchg
repz
and
jmp
jge
es
adc
sbb
mov
rclb
daa
adc
pop
in
repz
mov
movsb
push
lock
fmuls
fildll
push
in
pop
dec
push
addl
mov
inc
lock
cwtl
adc
mul
push
xor
xor
popf
iret
xchg
dec
jb
mov
pand
jns
pop
mov
cmc
and
ret
int
je
inc
out
imul
clc
cltd
jge
mov
mov
gs
dec
xor
clc
mov
push
mov
ficompl
push
enter
pop
cld
cmp
inc
repz
inc
rorl
or
xor
sbb
sbb
cli
filds
sbb
xchg
mov
ret
jne
lods
mov
repnz
pop
fsubs
sub
fs
loop
and
ljmp
dec
nop
mov
add
add
jge
fs
add
pop
or
or
test
in
out
push
adc
das
clc
push
int3
stos
lret
popa
push
int3
outsl
sbb
sub
lret
push
fidivrl
jne
adc
data16
xchg
pop
add
sbb
scas
jl
dec
dec
lcall
movhps
or
call
notb
imulb
fwait
jmp
notl
imul
lcall
sbb
pusha
enter
test
lods
test
dec
clc
mov
call
repz
sbb
mov
shll
test
cltd
jmp
jl
lahf
dec
cli
outsl
ljmp
push
cmp
cmpsb
push
jns
dec
data16
adc
sub
cmpsb
es
popa
sub
stos
xchg
cltd
enter
roll
in
out
pop
sti
xchg
xor
shl
push
nop
stos
movsb
cmp
lock
or
or
js
mov
mov
push
jnp
inc
jmp
pop
pop
ss
jge
negb
push
lahf
push
mov
lret
pop
sub
fldl
flds
inc
inc
mov
fs
clc
fsubrp
enter
sub
cmpb
sbb
sbb
mov
pop
mov
hlt
clc
mov
pop
cmc
pop
mov
mov
bound
or
imulb
stos
mov
adc
clc
jg
fidivl
adc
xchg
or
lock
xchg
mov
lea
in
loope
ljmp
nop
or
cmpsb
xchg
inc
mov
cmp
mov
jae
xchg
ss
jle
mov
loope
mov
inc
adc
shlb
adc
mov
outsb
pop
add
add
xor
cmp
xchg
fsub
mov
sbb
stos
fsubrs
jmp
xor
jp
out
mov
test
mov
cwtl
jo
and
clc
and
xchg
addr16
mov
imul
cmpsb
inc
mov
popa
mov
imul
data16
push
cmp
aam
and
and
inc
je
mov
sbb
aam
loope
out
mov
inc
mov
test
cmp
leave
shrl
push
adc
and
xor
movsb
xlat
and
push
adc
enter
mov
sbb
add
int3
das
inc
fisubl
inc
mov
cmpsb
icebp
call
stc
cmp
and
mov
or
or
inc
hlt
cmc
les
add
push
imul
dec
lcall
xlat
sahf
inc
in
inc
or
and
mov
lahf
pop
xor
pushf
les
push
mov
or
vcomisd
fs
mov
mov
add
xor
insl
dec
jae
inc
sbb
sbb
out
imul
or
xchg
adc
aad
fiadds
sub
mov
mov
mov
pop
jns
dec
push
xor
xor
sbb
mov
std
add
das
int
gs
jmp
pop
push
cwtl
ret
loop
es
jmp
in
dec
mov
push
cmp
jns
and
scas
out
js
stc
incb
lds
in
mov
loop
inc
faddl
call
sub
out
mov
stos
jge
cmp
nop
lds
adc
shlb
push
pop
das
imul
xor
xchg
jo
sbb
test
jmp
fadds
xchg
jnp
dec
sub
orb
inc
fcoms
rep
lock
iret
sbb
and
fsubrs
push
jecxz
jg
fsubrp
das
mov
fcompl
mov
jle
push
xchg
xchg
inc
daa
inc
outsl
paddusw
loope
xor
dec
jae
adc
mov
stos
insl
sbb
push
int3
mov
test
and
mov
stc
xor
lds
mov
ljmp
xor
cli
mov
jbe
mov
mov
cmpsb
jbe
adc
movd
test
ds
imul
mov
jle
and
punpckhdq
xor
imul
fldenv
xchg
stos
mov
pop
push
scas
xlat
insl
pop
mov
pusha
mov
leave
inc
xchg
xchg
cwtl
add
sub
sbb
mov
pop
push
add
insb
sarl
sub
addr16
inc
lock
jg
scas
xchg
jg
andb
dec
mov
scas
mov
daa
orb
dec
ret
push
test
lcall
jg
in
lea
xchg
adc
addl
nop
cmp
mov
mov
js
daa
or
and
inc
div
push
data16
sub
stc
push
pop
int
andl
sbb
jb
push
lcall
fwait
push
out
mov
mov
sbb
pop
dec
test
xchg
mov
and
push
xor
insb
test
je
dec
dec
pop
outsl
pop
jo
or
sub
outsb
aad
test
fsubrp
mov
xchg
cwtl
inc
sbb
jne
xchg
lahf
cmp
xchg
pusha
mov
pop
ds
push
push
inc
arpl
jmp
and
pop
dec
push
adc
or
das
rorl
mov
lea
push
dec
sbb
scas
lock
popa
cld
cmpsl
mov
lock
call
xchg
movsb
loop
shl
std
mov
jbe
adc
das
imul
dec
jne
loope
add
hlt
sbb
dec
imul
hlt
sub
mov
pushf
repz
in
mov
mov
dec
aad
xchg
scas
outsb
add
dec
imul
movsb
push
in
inc
leave
pop
test
fildll
mov
and
mov
or
or
jl
xrelease
adc
pop
or
add
xor
xlat
jo
push
divl
sub
mov
in
jae
movsl
push
mov
imul
sahf
push
mov
aad
jl
add
or
loop
in
xchg
stc
iret
push
pop
sub
jae
mov
jo
mov
and
xchg
inc
cmp
adc
mov
xorb
scas
push
sub
cld
sub
lds
xchg
mov
mov
push
fdivs
out
cmp
insb
mov
icebp
or
push
sbb
jge
mov
push
shl
aas
xchg
pop
jecxz
sahf
push
mov
and
xor
out
push
and
mov
ffreep
imul
les
popf
pop
stos
pop
jns
icebp
pop
jo
cmpsl
outsl
dec
lahf
adc
add
fimuls
pop
fcoml
lock
adc
and
ret
shlb
in
jp
inc
mov
xchg
clc
ret
mov
xchg
and
cli
lea
jne
sbb
subl
mov
lahf
dec
int3
sub
mov
dec
aas
mov
pop
cmp
jns
dec
loopne
ljmp
add
call
stc
mov
sub
adc
mov
cld
lds
adc
insl
idivl
xchg
sub
ljmp
or
iret
mov
xchg
and
jle
or
jle
mov
inc
cmp
in
inc
call
jnp
dec
xlat
hlt
jg,pn
cld
aaa
int
incl
jae
test
mov
jecxz
jbe
and
inc
mov
cmpsb
inc
jae
ds
fisubrl
adc
pop
inc
fildll
call
xchg
lods
mov
shrl
sub
arpl
push
fisubrl
in
add
insl
js
rcrl
pop
adc
adc
cld
mov
sahf
jl
cmpsb
mov
shlb
call
xchg
mov
outsb
adc
jmp
das
jns
sbb
mov
in
push
sub
je
mov
jno
sbb
stc
sbb
arpl
pop
lcall
loopne
test
and
xchg
fildll
adc
push
lock
xchg
cmc
xor
addl
inc
cltd
movsb
int
push
adc
xchg
in
es
xor
xchg
nop
and
pop
movsl
mov
int
dec
popa
inc
dec
fldcw
add
jl
sar
stos
add
push
add
leave
loope
fists
cmpsb
lods
pop
pop
cmp
scas
addr16
addr16
inc
push
inc
jb
test
dec
outsl
rolb
popf
sub
fistps
adc
xlat
insl
inc
je
pop
mov
iret
pop
cmp
adc
ljmp
add
mov
test
xchg
shrb
rcll
dec
outsl
push
ss
push
imul
cltd
dec
or
outsl
sub
xor
fistpll
aam
mov
daa
shrl
pop
inc
fs
aad
xor
aas
push
mov
lods
sub
inc
out
imul
sbb
xlat
inc
leave
jbe
dec
notb
test
mov
enter
dec
push
sbb
xor
repz
dec
enter
sahf
stc
pop
scas
stc
movsb
cltd
and
jns
pop
sbb
loop
dec
pop
jmp
adc
inc
jae
loope
mov
or
mov
ss
inc
cltd
js
and
xchg
and
jg
mov
addr16
out
sub
iret
mov
cli
xchg
mov
push
stc
lcall
and
and
add
adc
ret
rcll
or
icebp
mov
pop
pop
sbb
xchg
pop
nop
cmp
imul
and
stos
mov
jae
sbb
pushf
mov
adc
lds
and
pop
sbb
pop
aaa
cmpsl
ja
lret
in
inc
ret
outsb
dec
int3
lods
iret
out
push
ret
adc
out
mov
loopne
lods
and
mov
adc
inc
loop
arpl
xchg
pusha
xor
pop
fcoml
sbb
stos
mov
je
sahf
imul
scas
daa
add
xchg
jmp
in
pop
mov
and
jmp
out
bound
mov
cltd
push
mov
jns
add
das
pop
adc
popf
popa
andb
cmc
jo
sub
je
mov
nop
repnz
add
adc
aaa
roll
inc
inc
mov
mov
xchg
mov
inc
out
inc
cwtl
cmp
add
inc
test
in
inc
sbb
pop
sbbb
cs
add
movsl
test
ds
out
scas
outsl
mov
pop
push
fiadds
inc
aas
ss
negb
push
sub
add
inc
mov
gs
cmpsb
inc
negl
lock
jbe
loopne
sbb
sub
inc
sub
repz
in
pop
sub
sbb
sbb
std
inc
movsb
push
jne
outsl
rcr
jp
pop
fsubrl
cs
mov
dec
lods
pop
loope
inc
imul
jno
mov
imul
push
dec
adc
iret
xor
cmp
scas
adc
sub
arpl
mov
and
data16
out
clc
cmp
inc
data16
jmp
das
rorb
insl
pop
pop
adc
bndstx
mov
outsb
jp
mov
movsl
ds
inc
in
mov
inc
jl
lret
sbb
clc
inc
pop
shl
inc
pop
inc
inc
out
xor
xchg
sbb
fdivr
mov
pop
xchg
clc
rclb
mov
mov
fsubr
out
iret
jg
adc
and
jl
cld
popa
sbb
out
xor
cmpsl
shll
fwait
cmp
jg
dec
lods
push
sub
sub
jnp
mov
ret
ljmp
lea
and
inc
adc
icebp
fidivl
pop
xchg
fisubrs
fimuls
jnp
in
cwtl
outsb
in
pop
mov
mov
call
push
sbb
fsubrl
mov
mov
jno
stos
lcall
imul
push
jae
pushf
mov
dec
push
mov
pushf
out
loop
cmp
mov
mov
pop
mov
decl
outsb
or
clc
xchg
push
sbb
fidivrs
das
xchg
xor
dec
imul
cmp
arpl
jb
push
fisubl
mov
inc
cmp
flds
inc
push
push
xchg
loop
gs
jl
mov
jecxz
lods
lods
or
pop
fists
cmpsl
iret
lahf
cmpsl
sub
jecxz
inc
add
xlat
mov
outsb
dec
sahf
pop
out
sub
cmp
or
sbb
jmp
push
fldcw
jle
dec
mov
scas
imul
cmp
or
sbb
jmp
push
fldcw
jle
dec
mov
scas
imul
mov
imul
fldcw
jle
dec
mov
scas
imul
cmp
or
sbb
jmp
push
scas
sbb
testb
mov
subb
mov
pop
mov
fldl
out
xor
and
jb
bound
pop
subb
mov
das
repnz
loop
adc
add
xor
and
jb
bound
pop
subb
mov
das
repnz
loop
sub
pop
lahf
inc
lcall
pop
bound
xchg
imulb
push
dec
add
add
icebp
mov
pop
push
hlt
push
in
clc
jne
push
adc
inc
stc
clc
stos
mov
mov
pop
cmp
jae
push
bound
xor
and
xchg
lahf
leave
stc
jb
sahf
mov
xor
into
pop
test
dec
in
pusha
arpl
lret
aaa
jp
mov
jno
lea
subl
shlb
aas
mov
and
push
int3
add
filds
lahf
adc
xor
sbb
fidivrl
sbbb
aas
cmp
into
push
xlat
add
je
fistps
mov
jp
mov
xlat
and
xchg
rorl
lcall
lods
int3
mov
addr16
subb
mov
das
repnz
loop
adc
add
xor
and
jb
and
cmp
sub
cmp
push
jo
inc
xchg
mov
imul
cmp
lock
pop
cmp
sub
or
ds
push
push
in
push
jp
mov
decl
cmp
aad
sub
pop
imulb
sbb
dec
mov
aas
loop
adc
add
xor
and
jb
bound
pop
subb
mov
das
repnz
loop
adc
add
xor
and
jb
bound
ds
repnz
add
pop
in
aam
movsl
mov
shrb
cmpsb
jl
adc
mov
push
adc
stos
mov
jo
cmpsl
int3
std
call
dec
cmp
jmp
adc
addr16
sbb
imul
xchg
dec
push
popf
xchg
cmpsl
adc
popa
ljmp
clc
scas
fst
mov
pop
les
sbb
imul
adc
scas
push
orl
pop
xlat
movsb
lret
lret
stos
roll
jnp
addl
xchg
inc
jno
shrb
inc
sbb
nop
adc
dec
and
cmpsb
xchg
enter
pop
sbb
sbb
lret
sub
ss
push
sub
push
adc
mov
iret
rcrb
xor
mov
into
jbe
ss
xor
xor
fildll
loopne
mov
mov
add
sbb
mov
les
add
mov
mov
outsb
out
in
dec
mov
aam
lea
mov
xchg
push
mov
jno
ds
pop
in
and
adc
sub
cmp
or
mov
xor
pop
pop
in
mov
pop
loopne
and
cmp
out
pop
push
daa
dec
loop
cmp
in
mov
clc
les
or
sbb
jg
or
add
xor
push
inc
sub
out
jp
pop
xchg
push
adc
ljmp
add
movsb
lahf
push
mov
loopne
mov
ftst
jnp
and
mov
shr
incl
mov
and
sbb
rclb
fisubl
fdivr
dec
sti
lods
xchg
iret
jmp
lret
cmp
lret
bnd
test
adcb
fadd
push
flds
test
shll
je
movsl
sub
xorb
ja
orb
loopne
sti
int
push
and
cld
pop
aaa
mov
jmp
jmp
arpl
adc
test
test
pop
sub
jl
sbb
jb
mov
cmp
js
lock
lds
stos
pop
fbld
in
jmp
jno
jbe
jge
mov
jp
cli
out
cmp
mov
mov
icebp
loop
cld
add
and
in
mov
icebp
pop
in
adc
inc
xchg
xlat
lcall
mov
mov
out
or
pop
jns
stos
xor
notb
sahf
inc
stos
mov
inc
mov
test
scas
pop
xchg
adc
cmp
lds
ret
cli
loop
xchg
xor
mov
repnz
xor
adc
push
in
mov
jne,pt
mov
flds
cmp
pushf
adc
loope
cmp
imul
lods
loop
outsl
mov
popf
and
cmp
or
lock
xchg
decl
pop
loopne
sahf
out
jne
mov
mov
sahf
incb
rcl
jno
ds
popf
jmp
mov
add
ja
mov
loope
repnz
out
xchg
hlt
lea
out
je
test
adc
pop
sbb
cs
dec
xchg
push
cmpsl
clc
sti
in
bound
sub
inc
inc
xlat
inc
outsb
stos
jle
pop
jmp
leave
sbb
in
sahf
jecxz
xchg
dec
ja
iret
mov
es
cmp
scas
jg
roll
jne
xor
outsl
fadds
scas
sbb
bound
cs
outsb
jmp
jl
dec
jno
sbb
mov
jle
jbe
cmpsb
gs
and
push
xchg
lcall
mov
mov
cld
movsb
imul
in
js
lahf
fisubl
sar
in
mov
xor
pop
std
cmpsl
movsl
ret
shrl
cwtl
or
inc
dec
outsb
add
xlat
and
ret
fiadds
lods
push
lret
idiv
mov
push
nop
stc
inc
sub
inc
add
pusha
cmp
cmp
mov
jbe
iret
shrl
pop
mov
scas
xor
out
faddl
ret
mov
pop
inc
pop
pop
dec
fdivl
ds
scas
popa
lret
mov
movhps
mov
xchg
mov
out
test
push
outsb
pop
mov
pop
test
jle
jmp
push
sub
push
ss
dec
adc
pop
and
sbb
pop
jno
cmc
sub
sub
add
cld
fisttpl
popa
xchg
pop
fisubl
pop
stos
cmp
dec
std
jmp
lds
pop
aam
fsubrl
cmp
outsl
jle
push
push
push
lods
scas
mov
sub
pop
add
mov
outsl
mov
loopne
or
daa
je
sbb
arpl
and
fwait
ljmp
scas
mov
mov
lcall
inc
rcll
ret
fstps
adc
mov
mov
lret
mov
sbb
fwait
mov
or
call
aam
add
dec
mov
inc
pop
xlat
les
hlt
jmp
and
pop
jg
flds
popa
out
cmp
jbe
iret
xchg
xchg
pop
sub
in
inc
mov
shlb
adc
movsl
inc
add
sbb
pop
push
insl
dec
sahf
or
xchg
lods
sahf
add
push
cmp
or
ljmp
outsb
cmpl
mov
mov
mov
gs
sahf
cmp
add
pop
aad
push
addr16
and
xor
das
mov
mov
ja
and
cmp
arpl
mov
sahf
sti
aad
mov
in
rcl
lahf
movsb
ja
jl
andl
mov
hlt
or
push
addr16
sub
fdivl
inc
stos
test
push
sub
movsl
js
inc
mov
in
fstp
xchg
xchg
add
mov
cmc
inc
ss
cmp
mov
addr16
and
push
cmp
jmp
mov
mov
lret
enter
loop
mov
mov
dec
or
cmpsl
int3
xchg
movsl
pop
lret
adcl
ja
push
pop
sarb
xor
add
mov
adc
inc
fisubs
or
push
lahf
pop
add
sbb
shrl
mov
xor
inc
cmpl
pop
scas
jge
sarl
pop
shl
xor
fdivrl
push
rclb
ret
rcr
fstpl
and
adcb
pop
xchg
lcall
aad
jb
fistl
int3
fisttpl
cmp
lret
xchg
in
adc
and
aam
pop
cmc
sbb
cvtps2pi
inc
push
mov
mov
cmp
shlb
cmpsl
imul
loope
mov
lods
outsl
movsl
xor
pop
jae
push
sub
xchg
xor
add
adc
sub
lahf
fwait
or
test
inc
clc
mov
cld
sti
cmc
jp
pop
dec
pop
ja
push
sub
int3
cmp
js
and
pop
adc
jnp
inc
push
adc
imul
insl
inc
fwait
dec
je
pop
jae
addb
cwtl
iret
mov
sub
xor
call
stc
stc
pop
arpl
adc
dec
cli
andl
mov
shrb
jl
test
loop
shll
in
mulb
jmp
flds
mov
xchg
sbbl
jnp
cmp
lds
xor
sar
fimull
out
fs
lea
les
outsb
mov
mov
pop
cmp
rcll
mov
mov
mov
xlat
ret
add
sbbl
inc
pop
push
pushf
mov
pop
push
stos
sarb
aaa
scas
sub
out
es
incb
es
out
loop
jmp
lcall
sbb
xchg
sarb
sahf
ret
mov
mov
push
sbb
fstps
je
and
jb
repnz
dec
pop
lret
lods
mov
mov
xchg
iret
ret
ret
jb
jnp
sahf
ret
inc
iret
inc
push
cmpsb
adc
fildll
loope
jle
pop
ret
jns
fcoml
add
jne
sti
jge
stc
movsb
inc
xor
je
ljmp
mov
inc
aaa
mov
push
jg
mov
jbe
mov
mov
push
lret
nop
adcl
xchg
ret
mov
insb
testl
inc
inc
cmp
arpl
cmp
inc
xchg
inc
push
and
jmp
or
out
sbb
daa
push
xchg
adc
test
cmpsl
out
xor
push
loopne
movsb
lret
xor
lock
lret
fmuls
loopne
sbb
sbb
xchg
ret
xor
icebp
fmuls
js
or
ja
mov
int3
outsb
jl
push
imul
movsb
mov
lcall
ret
sub
fdivs
xor
test
out
mov
pop
pop
add
loopne
mov
mov
clc
ret
xor
loop
into
scas
repnz
mov
dec
dec
push
cmc
and
int
sbb
add
fs
nop
mov
cmp
pop
sub
push
cmp
mov
int
ljmp
lret
shl
xor
addb
mov
test
shrb
sub
stc
scas
movsl
sub
xor
adc
ss
mov
mov
mov
imul
jl
push
fs
addl
bound
sahf
bound
test
xchg
jns
push
lret
inc
cmp
add
pop
lea
dec
jns
nop
inc
dec
out
sbb
xor
adcl
mov
jle
cli
add
add
push
xor
pop
adc
mov
movb
dec
sbb
cld
movsb
fldl2t
add
mov
adc
pop
xchg
mov
pop
pop
add
fcmove
aad
mov
or
ds
push
cs
cld
shlb
loop
mov
adc
xorl
test
cli
push
ficompl
fnstsw
cmp
js
inc
jl
mov
test
mov
fbld
repnz
push
das
sbb
fdivr
test
faddl
cltd
sub
dec
imul
mov
aam
es
fs
cltd
loop
or
adc
fwait
decl
jns
lea
or
jl
jge
outsl
sbb
mov
mov
icebp
push
je
and
call
lods
in
mov
sbb
outsb
pop
lret
jl
bound
roll
iret
pop
jg
cmpsl
hlt
and
clc
enter
sbb
test
mov
shrb
outsb
dec
fmuls
mov
mov
and
push
dec
mov
mov
xchg
repnz
ja
sub
lods
add
pop
mov
cmp
subb
and
sub
nop
scas
loopne
jno
call
inc
popa
jns
fdiv
imull
repz
sub
dec
js
sub
popf
jge
lcall
insb
sbb
lret
call
push
cmp
cmp
push
in
ds
movsl
sub
ret
add
pop
push
or
xchg
mov
mov
jns
xlat
js
cs
jns
aaa
in
movsl
lahf
dec
fs
or
mov
jns,pn
xor
jnp
fstp
mov
sbb
mov
pop
rcrl
test
dec
das
aaa
xchg
dec
push
ja
jmp
fistpl
loop
cs
popa
xchg
sub
xchg
shrl
pop
test
andb
movsb
push
out
mov
out
cmp
add
dec
sub
out
btr
faddl
mov
test
lcall
sbb
xor
mov
loop
jl
mov
pop
call
out
loopne
lret
mov
push
sub
push
loope
sbb
add
out
ret
jle
pusha
daa
sti
roll
pop
mov
inc
sti
cmp
adc
jns
nop
pop
dec
inc
push
lods
jge
cmp
adc
cld
sub
jnp
int3
cmp
out
and
cmp
loope
push
mov
jl
mov
mov
sub
ljmp
sbb
movntps
mov
imul
inc
push
in
repz
sub
cmpsb
or
xor
stos
dec
adc
xlat
andb
adc
or
div
test
jb
clc
sub
cmp
int3
push
mov
pop
push
pop
hlt
insb
fwait
lds
sbb
cs
loopne
fs
data16
mov
scas
imul
pop
movsl
mov
test
push
ljmp
mov
jecxz
cmc
inc
mov
orb
ret
insl
shll
mov
fwait
xchg
out
call
cmpl
push
hlt
xchg
push
loop
push
nop
or
push
push
pop
addb
stos
vpinsrw
jp
faddl
inc
mov
sar
mov
sti
fistl
insl
addr16
inc
fisttpll
int
jno
push
and
xor
enter
mov
aam
aaa
or
sbb
cmp
xchg
xor
inc
je
jae
loop
fucomi
inc
jae
aam
es
rcr
iret
je
lock
mov
rcll
push
clc
inc
ret
testl
push
sub
jno
pop
stc
dec
es
pop
cmp
or
xchg
mov
jp
inc
shrb
xlat
mov
sub
mov
roll
add
std
scas
int3
mov
mov
fistpll
cli
adcl
in
cmp
incb
ret
mov
insb
and
add
push
ss
imul
mov
mov
fnsave
cs
shl
icebp
sbb
adcl
mov
dec
mov
repz
ss
test
mov
sub
int
ljmp
lret
mov
sub
gs
push
testb
sub
fisttpl
pushf
jecxz
mov
jecxz
pop
xchg
sarb
xor
xchg
mov
adc
mov
nop
mov
and
cs
xchg
rcrb
std
xchg
jnp
pop
std
lahf
pop
cmpb
out
cmp
sahf
imul
rolb
das
pusha
push
lahf
mov
lcall
je
jle
xor
pushl
mov
xchg
fimuls
lods
xchg
out
pop
stos
lods
sbb
lods
fsubrl
inc
stos
nop
loope
push
push
jg
jle
out
in
mov
jns
mov
mov
or
pop
je
movsl
push
clc
ret
jmp
in
das
jle
ss
or
sbb
add
test
leave
enter
aam
into
adc
pushf
mov
jb
add
outsl
mov
dec
sbb
scas
mov
js
push
ja
dec
inc
fcoml
dec
es
push
test
or
insl
cmpsl
sub
sub
mov
add
aad
mov
cmp
arpl
xor
in
inc
xchg
lods
mov
movl
mov
add
outsb
orb
sub
stos
subl
addr16
add
int3
aas
push
subb
divl
push
jmp
or
cmp
mov
mov
add
inc
jne
xor
mov
dec
xchg
cmc
xchg
loope
into
or
pop
int3
jne
cmp
jmp
addr16
mov
fs
jl
xchg
sub
cwtl
out
daa
add
pop
dec
dec
aas
aad
cmp
inc
cmpsb
pusha
cli
pop
jle
inc
add
out
arpl
fldenv
arpl
xchg
lea
sub
rep
xchg
je
orb
push
aas
nop
in
jmp
mov
cmp
sub
ljmp
pop
push
mov
adc
outsl
xchg
sub
lret
pop
jbe
iret
xchg
add
iret
movsl
jno
xchg
aam
je
aaa
imul
dec
stc
adc
and
aaa
ja
or
lock
das
mov
test
stc
pop
rolb
sub
jecxz
pop
mov
pop
loopne
out
sub
arpl
mov
popf
lret
cmp
rorb
repz
xor
dec
jecxz
pop
mov
mov
scas
pop
push
xlat
xor
mov
pop
or
popf
xchg
das
and
fimull
cmp
cmp
cmpsb
pop
sub
cmp
mov
cld
scas
cltd
sub
pusha
in
out
lock
mov
adcb
fidivl
inc
mov
jecxz
xchg
inc
ja
fwait
aaa
inc
test
imul
dec
out
jo
mov
mov
sbb
push
lret
imul
mov
jle
jge
ss
pop
jl
cmp
xchg
sub
and
dec
adc
push
jb
push
nop
push
mov
xchg
lcall
fcompl
mov
jmp
ret
jns
jge
cmc
int
cwtl
outsl
pop
addr16
rcr
insb
loopnew
jmp
mov
addr16
inc
or
push
jmp
arpl
dec
mov
inc
xlat
les
sub
cs
repnz
nop
frstor
or
out
popa
sti
cmp
adc
dec
jbe
mov
jno
or
mov
insb
sbb
cs
lahf
in
mov
jg
scas
xchg
subl
cmp
inc
push
mov
stc
lcall
adc
ss
aas
scas
outsl
inc
jl
outsb
outsl
add
pushf
push
xchg
xchg
and
aam
mov
inc
in
mov
push
out
mov
repnz
in
or
sub
mov
into
xchg
mov
xor
mov
jge
std
ret
loop
dec
mov
aad
aad
push
js
adc
dec
add
push
inc
inc
and
and
mov
jb
xor
or
int3
lret
or
int
adc
adc
sbb
jo
nop
dec
fsubrl
xchg
cmp
lods
mov
push
rorl
je
ljmp
lock
xor
in
in
scas
pop
insb
aad
mov
adc
outsl
stc
stc
lds
lea
aam
scas
rcl
cmp
nop
dec
mov
mov
sti
push
jl
mull
adc
in
xor
sbb
cmp
das
pop
fcoml
roll
xchg
dec
pop
inc
cmpsl
sub
adc
or
dec
cld
outsl
test
repz
ljmp
ret
push
inc
inc
je
xor
test
dec
inc
fsubp
clc
stos
adc
xchg
jmp
mov
or
stc
pop
and
cmpsl
push
notb
lods
shrl
push
idiv
add
lea
mov
mov
or
jge
sti
xor
sbbl
cs
pop
mov
ret
push
push
clc
cld
sbb
rclb
mov
dec
jle
shll
test
test
hlt
scas
in
shll
sbb
jae
outsl
lods
push
out
pusha
fdiv
xchg
lcall
mov
in
shrl
mov
push
pop
or
scas
aad
inc
jns
lcall
xchg
mov
mov
ljmp
mov
cmp
nop
cli
ljmp
mov
xchg
and
sub
cwtl
xchg
xchg
sbb
jecxz
jb
xchg
mov
mov
mov
sbb
faddp
jp
xor
mov
mov
sahf
mov
cltd
divb
andb
shrb
sbb
cs
sbb
sub
adc
add
sbbl
pop
in
stos
sbb
dec
jmp
cmp
mov
xchg
stos
dec
data16
repz
shrl
mov
jbe
push
add
ror
ds
popf
jns
inc
and
push
lcall
lods
loopne
and
jbe
shl
adc
mov
jmp
jmp
adc
notl
fwait
lods
aam
push
outsb
rorb
in
cmp
cmpsb
pop
jno
sti
push
test
inc
mov
add
dec
pop
pop
sub
sub
mov
imul
push
jecxz
inc
ljmp
vmwrite
shlb
aam
in
in
dec
ret
push
add
pop
push
pop
mov
cs
mov
pop
mov
mov
test
xor
adc
or
adc
ss
xchg
movsl
pushf
jp
sub
pop
int
mov
mov
inc
add
mov
mov
out
inc
mov
ret
dec
mov
sar
mov
xchg
jecxz
or
fisubl
mov
icebp
sub
cli
jae
and
dec
and
std
ss
scas
and
or
jg
xchg
rclb
lret
mov
aad
cmpsb
mov
jne
ret
xchg
ret
pop
sub
dec
fidivrl
pop
popa
ds
jge
out
xchg
fwait
push
push
jae
mov
fcmovnu
icebp
push
mov
sbb
lea
dec
sarl
bnd
cmp
mov
lock
adcb
mov
das
repnz
loop
adc
add
xor
and
jb
bound
pop
subb
mov
das
repnz
loop
adc
add
xor
and
jb
bound
pop
subb
mov
das
repz
loop
adc
add
xor
and
jb
bound
pop
subb
cmpsb
psrld
inc
scas
jb
sbb
inc
xor
push
clc
ficoml
mov
cmc
jae
pushf
lods
lahf
mov
out
mov
aas
adc
dec
aas
pop
dec
jl
jl
mov
mov
iret
in
and
or
cmp
das
jle
dec
insb
pop
jl
xchg
cmpsb
pushf
xchg
mov
movsl
not
out
xlat
hlt
enter
xor
arpl
cmp
or
ss
mov
aaa
out
add
aam
xchg
sub
push
cmpsl
andl
push
daa
scas
shll
fisttpll
inc
add
aas
pushw
je
mov
hlt
lock
cmp
leave
sub
mov
jae
sbb
repz
fsubs
cwtl
adc
nop
loopne
nop
pop
cmp
cwtl
jl
fsubrl
mov
in
ljmp
pop
push
jecxz
int3
inc
ret
ljmp
push
dec
mov
jge
push
jmp
mov
mov
rcrb
pop
cmp
and
rol
insb
cmpsl
orl
jl
lods
adc
divb
hlt
jno
or
push
sub
pop
outsl
sub
mov
cmpsb
dec
in
iret
cmc
in
adc
add
xor
addr16
dec
insb
inc
sbb
jmp
sti
mov
int
mov
pop
gs
fs
jno
add
sbb
sub
scas
hlt
mov
mov
mov
jne
jge
pop
push
or
or
aas
add
int
stc
ljmp
fmul
in
das
or
sbb
sub
cmp
dec
jg
dec
insb
pop
jl
mov
mov
iret
in
das
or
sbb
sub
cmp
dec
jg
dec
insb
pop
jl
mov
imull
jo
xchg
lcall
shll
iret
jne
inc
repnz
dec
lret
or
mov
pop
icebp
xor
xlat
arpl
negl
push
int
push
cli
sub
adc
aas
arpl
mov
push
mov
fsts
bound
pop
hlt
pusha
shll
mov
mulb
outsl
sub
cmp
stos
bound
inc
rep
push
sti
in
frstor
ds
adc
insl
call
cmp
mov
cmpb
rcl
in
jnp
mov
in
and
jns
pop
push
mov
adc
les
adc
cwtl
add
lock
xor
out
enter
mov
cmp
idiv
lods
fdivs
das
add
sub
fdivrl
cmp
or
jmp
imul
clc
dec
cmp
inc
sub
jmp
es
cmp
sub
repnz
iret
jmp
adc
cmp
mov
jl
and
or
lods
push
scas
inc
pop
mov
jne
jns
cmp
ud0
jns
decl
shl
jmp
loop,pn
inc
xchg
push
sub
mov
lea
mull
xor
outsb
aad
js
sahf
fdivrp
stos
sbb
es
xchg
pop
xlat
jg
pushf
jp
bswap
fucom
aam
lret
mov
mov
vrcpss
fiadds
push
pop
movsl
cmpl
add
dec
ja
jbe
call
int
cwtl
xchg
or
inc
stos
mov
xchg
aam
inc
pop
cmpsb
xchg
ljmp
rol
stc
in
insb
arpl
iret
sha256msg1
sbb
rcrb
xor
and
inc
and
cwtl
jo
into
lods
lock
clc
ret
xor
jnp
mov
and
or
push
adc
test
push
daa
leave
subb
pop
xchg
dec
mov
roll
pop
test
push
push
jmp
mov
cs
repz
pop
jne
out
mov
fwait
pop
sbb
push
test
xchg
push
roll
cli
add
test
f2xm1
and
mov
rcll
lods
mov
imul
shl
subb
lret
mov
into
adc
xchg
mov
mov
les
cmc
test
mov
jp
aas
adc
imul
adc
sub
ret
cmp
or
out
out
mov
push
ljmp
mov
dec
jno
and
out
std
push
imul
mov
sbb
shll
push
dec
mov
add
mov
rorl
sti
call
push
loop
pop
and
inc
xchg
lcall
cld
outsl
out
mov
jne
xchg
lret
xchg
mov
lea
testl
jnp
mov
jmp
cwtl
decl
arpl
pop
cs
adc
in
pop
or
xor
iret
icebp
gs
xor
jnp
cmc
std
scas
jne
jge
mov
mov
xor
cmpsl
fimuls
fsubrs
mov
in
lods
push
jnp
jbe
cmp
faddl
jne
cmp
jl
out
shll
out
addr16
repz
lods
xchg
and
ds
lea
inc
cmp
push
scas
sub
sbb
mov
adc
mov
nop
sbb
aad
dec
and
xchg
fs
mov
pop
adcb
icebp
arpl
sub
lret
aad
push
outsl
lods
adc
jecxz
jne
jno
test
aaa
cld
add
movsl
in
mov
add
mov
xor
lret
sub
call
and
cwtl
cmpsb
imul
dec
lods
mov
daa
pop
orb
scas
sarl
mov
mov
cmp
std
adcb
sub
pop
sub
mov
sub
adc
popa
dec
mov
cmp
cmp
adcl
inc
mov
mov
jmp
push
test
push
mov
or
sub
mov
sbb
xor
leave
mov
and
mov
xchg
fimull
mov
das
pusha
outsl
loopne
mov
mov
add
insb
sbb
xchg
in
cs
mov
clc
cmp
stc
cmpsl
daa
push
aam
cld
in
outsl
xlat
mov
pop
mov
mov
pop
or
inc
scas
pop
ficomps
adc
lret
les
xchg
int
push
fisubrl
lahf
popa
fs
arpl
jg
rol
scas
pop
mov
pop
jmp
push
stos
stc
popa
sub
push
adc
sub
mov
mov
dec
inc
stos
dec
std
cmp
ss
dec
push
jbe
cld
mov
and
rorl
pop
sbbb
pusha
outsl
push
or
js
repnz
daa
lock
scas
push
adc
fstl
sub
dec
pop
push
ret
repz
pop
mov
adc
jns
jp
ret
jb
rcll
daa
sbb
push
fs
das
sub
pop
loop
and
add
ss
xchg
pop
mov
dec
push
scas
mov
popa
test
hlt
jne
hlt
jb
scas
jns
es
pushf
out
xor
mov
and
clc
push
mov
rcrl
inc
cmp
jb
jl
das
jp
xchg
lcall
mov
repnz
jg
int3
adc
or
cmp
or
push
cmp
xchg
add
ret
sbb
inc
popf
cmpsl
fsub
adc
dec
mov
cmp
xor
push
stos
es
adc
popa
xlat
mov
cmp
pop
fdivl
inc
pop
and
adc
pushf
or
repz
add
cmpsb
sbb
mov
mov
fiaddl
jnp
lock
and
aad
mov
dec
push
cmp
pop
out
int3
or
sbb
cld
fdivrl
add
repz
jecxz
xchg
mov
inc
pop
cmp
les
lods
xor
dec
fisttps
or
pop
jge
jo
sbb
push
and
sbb
outsl
dec
test
push
out
mov
xorb
out
jnp
dec
mov
add
mov
fadds
dec
std
adc
es
push
std
jb
mov
pop
stos
cld
pop
call
inc
rclb
cmp
out
sbb
int3
fsubrp
je
dec
cmpsb
shlb
mov
insl
cmp
jb
mov
lods
sub
hlt
enter
xlat
and
fnsave
cs
leave
pop
jle
stos
shrb
jl
cli
cmp
mov
push
dec
mov
mov
jp
cmp
call
nop
add
cli
mov
pop
cmp
ret
adc
lcall
mov
push
gs
fwait
mov
fldenv
lret
or
into
fsts
es
push
mov
lds
scas
std
mov
cmp
cmp
sub
aad
xlat
cmp
jecxz
mov
stos
and
mov
jg
adc
iret
mov
insl
jmp
test
cld
mov
out
pop
dec
subb
insl
jae
sbb
outsl
loope
inc
inc
mov
dec
adc
dec
inc
inc
xchg
push
lock
aas
neg
jne
sbb
or
ffreep
sbb
mov
fnstsw
jns
add
push
ljmp
stos
loopne
lret
mov
aaa
mov
push
xchg
es
sub
jbe
aam
stc
jg
cmp
dec
inc
pop
sbb
leave
lahf
out
or
jl
sub
out
in
cwtl
dec
jl
sbb
pop
and
iret
adc
pop
out
xor
dec
and
inc
mov
xor
sti
cmp
ret
push
movl
cli
pop
cmp
pop
inc
lods
out
push
fimull
lock
cmp
sti
test
and
xor
sub
lcall
iret
in
xor
mov
aad
stos
adc
imul
inc
inc
sbb
outsl
inc
cwtl
fidivl
daa
mov
sbb
stos
sahf
jo
mov
out
lcall
test
ds
mov
cmpsl
ret
mov
cmp
fnstenv
sub
rcrb
repnz
test
sbb
out
xor
call
dec
add
js
loope
lahf
mov
xor
mov
icebp
lcall
in
lods
cmp
cmp
cmp
aaa
xchg
ljmp
mov
cmp
jle
dec
inc
push
xor
xchg
inc
jne
popf
or
in
and
mov
xlat
scas
outsl
pop
mov
fwait
out
ljmp
rorl
push
hlt
sarl
das
pop
in
pop
mov
pop
stos
dec
mov
sbb
sti
adc
js
adc
xchg
call
xor
cmp
es
xor
rcll
mov
lret
loopne
aam
fadd
in
ss
jbe
inc
mov
call
adc
testb
mov
std
dec
icebp
inc
fdivl
test
or
sub
xor
test
sub
lret
mov
mov
sub
dec
sub
movsl
mov
push
aam
dec
fsubrl
or
pop
addr16
les
add
dec
cld
add
jno
stos
dec
jb
xchg
jg
dec
push
inc
jp
and
push
sbb
pop
cmpsl
popa
jo
and
popl
aas
movsb
and
ljmp
xchg
mov
sbb
xor
adc
inc
movsb
cmpsl
sbb
daa
in
push
ja
cli
stos
int3
dec
sub
shl
push
inc
mov
pop
mov
pop
inc
outsb
xchg
push
adc
inc
dec
xchg
loop
mov
pop
add
dec
icebp
pop
push
inc
xchg
dec
fstps
jecxz
xorb
fimuls
dec
or
push
cmp
dec
ja
add
xchg
mov
adc
xchg
dec
and
sub
loope
xchg
cmpsb
sub
popf
cmp
jmp
or
jmp
pop
adc
dec
pop
cmpb
xor
repnz
xchg
stos
cmp
shrl
dec
adcl
popf
cmpsb
popf
arpl
xorb
adcl
mov
cltd
or
inc
stos
push
add
add
push
cmp
imul
gs
cmpsb
test
and
fwait
push
push
jns
push
push
lahf
mov
cli
pop
pop
jecxz
cltd
insl
mov
mov
inc
and
loopne
jle
push
or
fcomps
ja
lods
adc
inc
ds
add
inc
jno
loopne
or
jmp
mov
dec
scas
pop
jo
mov
lahf
mov
xchg
sbb
fidivrs
mov
ret
add
sahf
mov
sbb
loopne
add
out
mov
pop
mov
jae
sahf
mov
lcall
and
sub
ret
cmp
push
xchg
push
orl
repnz
adc
in
push
jae
imul
outsl
jb
je
mov
adc
adc
mov
sub
call
adc
pop
push
pop
lret
add
cmp
nop
clc
jge
push
mov
mov
out
arpl
sub
cmp
xchg
push
inc
cmc
les
jg
mov
les
mov
movsl
add
outsl
jp
push
in
call
xor
test
nop
outsb
push
clc
in
imull
repnz
loop
cltd
mov
push
and
dec
lods
xor
dec
mov
loopne
notl
mov
cli
add
adc
insl
sub
sub
je
ds
add
sub
adc
and
sbb
test
lock
or
aaa
jbe
xchg
push
aaa
xchg
push
addr16
aad
lds
popa
movaps
loop
js
jge
push
mov
or
lds
adc
inc
dec
test
pop
mov
mov
sbbl
fmuls
scas
jmp
cmp
inc
jle
adc
sbb
es
mov
scas
adc
fcmovne
xchg
sarl
icebp
push
push
sbb
cltd
jnp
je
jge
imul
movsb
or
pop
clc
push
shll
daa
movsl
sbb
xchg
push
pushf
inc
hlt
ss
xor
lret
out
lret
out
jg
insl
jl
sub
es
cmc
leave
ljmp
mov
mov
imul
inc
pushf
in
insl
sti
sbb
orb
jb
sub
fcoms
jbe
fwait
add
orb
jge
dec
clc
pop
xor
jbe
or
loopne
push
mov
xchg
imul
dec
mov
cmp
jmp
mov
lods
dec
outsb
dec
rolb
pop
out
inc
in
nop
mov
fldenv
lock
lcall
inc
inc
pop
and
repnz
dec
out
sbb
sub
and
or
out
push
pop
pop
popa
pop
dec
add
cmpsl
xchg
add
xor
pop
das
ja
sbb
pop
push
movsl
xchg
subl
test
adc
sbb
bound
ss
fwait
sti
inc
pop
xlat
pop
int
lcall
ret
lock
repnz
pop
xor
and
inc
out
or
inc
ret
sbb
stc
jnp
je
fsubl
repz
pop
inc
mov
inc
jb
xchg
rol
andl
stos
sub
stos
inc
and
mov
clc
lret
mov
jno
sub
mov
loopne
lods
add
fisubl
and
jle
cmp
cli
fiaddl
jne
inc
sahf
out
fsubrl
lahf
lock
pop
popl
or
sbb
or
inc
cltd
insl
mov
dec
mov
cld
stos
aaa
out
jns
inc
fcomip
scas
sbb
mov
push
insl
xchg
sbb
mov
movsl
out
push
mov
sbb
xchg
or
add
shll
bound
adc
pusha
xchg
xchg
jno
cmp
flds
cltd
mov
jno
arpl
call
fstps
test
cltd
xlat
dec
xlat
out
mov
jns
pop
jmp
mov
lock
enter
add
decb
retw
or
aam
aaa
pop
xchg
loop
and
inc
shlb
pop
lds
pop
lcall
fdivp
sbb
popa
shlb
stos
pop
shl
mov
inc
push
js
ret
pop
mov
sub
mov
sarl
rorl
lret
ja
stos
inc
or
andl
cmp
mov
daa
xchg
adc
xor
sbb
sarb
sbb
sub
mov
addr16
mov
pop
mov
cmc
pushf
push
mov
fildl
out
push
in
orb
out
push
add
add
loope
jnp
stos
jbe
push
or
aam
out
mov
inc
sbb
cld
shll
dec
push
push
sub
leave
and
sub
aaa
or
aam
jnp
fwait
push
mov
mov
jmp
decl
cltd
and
inc
loopne
enter
std
inc
add
xchg
mov
fucomip
ret
aam
adc
pop
scas
sbb
push
decb
imul
stos
mov
aam
add
or
mov
enter
dec
outsb
push
out
leave
inc
test
and
cli
movsl
push
mov
rcrl
std
int3
mov
ljmp
rcll
pop
jmp
inc
data16
xchg
jle
repz
roll
popf
xor
dec
shr
inc
mov
mov
lret
lret
lods
scas
xchg
fbstp
push
je
cltd
jle
xor
and
xchg
ss
inc
sub
rolb
jne
pop
rcll
sub
mov
stos
mov
jp
xchg
inc
test
imul
loope
lahf
pop
mov
hlt
jle
push
jg
mov
pop
das
js
pop
clc
cmc
pop
jge
lcall
ljmp
inc
sbb
icebp
xorb
jp
sub
or
or
mov
sub
call
repz
jle
dec
push
cmp
cmp
ret
or
jb
mov
pop
xchg
sub
lods
nop
pop
shll
call
push
dec
mov
sbb
pop
cmp
xchg
mov
mov
or
push
lea
mov
inc
cmp
add
int
fadds
or
cltd
xor
in
xchg
xor
pusha
repnz
pop
cmp
outsl
andl
popa
or
rorl
fwait
in
jg
daa
imul
dec
scas
sub
fimuls
jmp
xchg
test
xchg
mov
pop
mov
mov
or
dec
xor
inc
inc
mov
cwtl
jp
xchg
add
and
inc
imul
aam
or
aaa
fsts
inc
aas
out
pop
fwait
inc
imul
add
add
push
xchg
mov
mov
xlat
or
cwtl
loope
inc
add
inc
or
or
or
cwtl
popa
ss
jmp
pop
mov
mov
jp
jg
dec
lcall
cmpsb
out
int
or
loopw
std
xor
and
add
push
cmp
insl
data16
or
loopne
xor
mov
daa
out
movsl
mov
ss
in
pusha
adcl
mov
cmp
insl
adc
jg
mov
xor
xor
add
sarl
repnz
or
xorb
lock
cs
sbb
adc
push
lahf
push
jl
sbb
shr
out
in
add
xlat
sbb
mov
aaa
sbb
sti
outsl
fs
lcall
std
subl
icebp
push
aas
nop
mov
fcompl
push
pop
cmp
jge
jle
mov
lods
dec
mov
cmp
out
rorl
scas
push
jp
inc
leave
lods
xchg
xchg
in
and
xchg
jnp
and
and
and
das
pop
jl
cmp
pop
test
fs
filds
jno
cmpxchg
pop
rcrl
pusha
jle
les
mov
push
sbb
nop
sub
aas
fs
adc
div
test
push
hlt
inc
xlat
mov
xchg
pop
adc
scas
rcrl
sub
roll
lods
xor
aaa
mov
inc
sub
mov
inc
pop
sub
call
rorl
jne
gs
pop
int3
or
ret
out
lret
popf
les
cmp
scas
push
mov
subb
leave
pop
cmp
push
push
ss
pop
dec
xchg
adc
xor
dec
mov
jbe
and
xchg
incl
frstor
lea
jns
clc
mov
xchg
int3
xor
lret
push
pushl
dec
pop
add
sbbl
jns
js
mov
jp
mov
out
in
xor
lea
fbld
dec
pop
xchg
jns
jno
out
xchg
popf
roll
jno
push
inc
xchg
imul
insl
pushf
insb
xchg
dec
mov
jmp
loope
ljmp
rolb
mov
js
lods
pop
mov
mov
ds
and
xchg
aam
lret
in
fidivl
sub
loope
mov
and
fxch
popf
mov
cmp
in
sbb
adc
subl
cmp
sti
pushf
cmp
or
pushf
dec
cs
mov
lds
jae
sbbb
mov
adc
lcall
pop
jle
inc
inc
sub
xor
inc
bound
data16
lret
jl
mov
lods
adc
pop
into
fs
push
pushl
adcb
xchg
cld
pop
mul
adc
les
xor
mov
mov
sbb
xchg
and
fwait
cmp
dec
flds
pop
dec
pop
fcom
scas
in
fiadds
dec
mov
outsb
lds
fcoms
mov
pop
insb
mov
pop
dec
repnz
aad
pop
test
push
cwtl
push
out
inc
lret
add
fmul
das
leave
pop
fldl
pop
loopne
int3
hlt
leave
ret
test
fstpl
ja
jmp
je
popa
sub
popa
insl
push
mov
add
lods
xchg
lock
adc
and
mov
imul
add
xchg
nop
addr16
cmpsb
push
mov
out
mov
aas
jne
push
sbbb
push
and
pusha
stos
xchg
movsb
add
mov
mov
cmp
inc
cmpl
bound
sub
xchg
cmp
push
inc
daa
push
es
hlt
orb
out
je
int3
add
call
jle
pop
jmp
jmp
arpl
frstor
push
dec
jnp
and
arpl
jg
mov
push
push
cmp
and
test
movsb
jmp
inc
ret
stos
aad
mov
inc
int3
out
mov
mov
mov
iret
in
das
or
sbb
sub
cmp
dec
jg
dec
insb
pop
jl
mov
mov
iret
in
das
or
sbb
sub
cmp
dec
jg
dec
insb
pop
jl
mov
mov
iret
in
das
or
sbb
sub
cmp
dec
insl
outsb
jl
mov
mov
dec
in
pop
cld
rorb
mov
sub
dec
sbb
mull
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
fwait
jnp
imul
mov
or
mov
jmp
fldt
lret
pop
mov
imul
pop
stos
dec
fstpt
lret
sub
sbb
jae
sti
or
cmp
sub
fwait
xlat
dec
stos
jnp
imul
pop
stos
dec
fstpt
lret
sub
sbb
or
sti
sub
push
test
and
push
cmc
add
and
sbb
lock
adc
mov
ljmp
adc
shrl
add
out
push
into
and
lret
scas
add
mov
into
aam
movsb
mov
out
lret
jnp
mov
dec
push
xor
pop
sbb
jmp
or
imul
mov
jae
sbb
cwtl
fisubrs
jle
jmp
xchg
add
adc
pop
inc
sub
pop
mov
cmp
push
movb
scas
sub
add
cmpsl
mov
call
push
data16
je
js
and
sbb
cmp
jbe
jmp
dec
ljmp
or
jmp
push
jnp
imul
lret
sub
sbb
or
sti
or
cmp
sub
pop
mov
imul
jg
sub
pop
ret
pop
mov
pop
sbb
push
mov
sbb
sub
push
fidivrs
dec
fistl
xorl
jle
pop
xchg
cmp
and
in
aas
mov
aam
cs
adc
jmp
sbb
or
cmp
sub
pop
mov
imul
pop
stos
dec
fstpt
lret
sub
sbb
or
sti
or
cmp
sub
pop
mov
imul
mov
mov
xchg
sbb
insb
adc
jo
fwait
adc
stos
and
test
insl
in
daa
out
lods
push
ret
pop
mov
dec
cmp
add
cltd
sti
mov
push
mov
add
push
add
xchg
or
mov
insb
orb
pop
cs
push
push
iret
leave
jne
xchg
inc
out
outsb
mov
pop
imul
stos
aam
sbb
cmp
push
sahf
sbb
mov
or
add
xchg
xchg
scas
clc
jnp
das
je
lods
in
cmp
fwait
adc
inc
daa
push
fcmovnu
lcall
data16
mov
repz
push
jmp
xchg
mov
push
lds
hlt
int3
adc
adc
adc
lcall
es
std
pop
aaa
dec
inc
in
add
mov
xchg
out
cmpsl
xchg
or
mov
xchg
push
and
mov
repz
rorb
fsts
jmp
sub
push
lock
out
scas
push
push
movsl
adc
cmc
testl
out
cmpsb
rcrb
cwtl
fsubr
pop
in
int3
aas
fldenv
or
stc
inc
cld
popa
sub
inc
dec
popa
unpckhps
into
mov
mov
lods
sahf
sarl
pop
xlat
pusha
mov
or
mov
popf
xor
xchg
enter
stos
xlat
das
dec
call
jl
aas
or
and
mov
adc
shlb
push
int
shl
mov
or
pop
mov
or
test
lds
push
xlat
mov
sub
clc
sbb
daa
sub
rorb
cmp
pop
ds
sub
cmp
inc
xchg
jo
and
mov
cmp
push
inc
les
sbb
addr16
pop
shlb
push
fwait
std
rcrb
or
pop
and
cmp
cmpsl
dec
stc
in
push
nop
jnp
leave
add
jb
mov
iret
mov
leave
inc
popa
out
pop
or
ds
or
jae
jmp
sbb
outsl
or
mov
and
jae
lcall
and
pop
dec
mov
fdivrl
sub
sub
lock
fidivs
jbe
lods
fxch
loopne
cmpl
jo
cmp
mov
pop
cmpsl
fsubs
add
lods
ds
and
sti
sub
fstl
ss
or
lcall
dec
repnz
dec
mov
jge
movsl
push
or
cli
cli
xor
adc
sahf
int3
imul
mov
test
xchg
push
test
mov
int
mov
sbb
out
out
js
ss
mov
hlt
add
jle
insl
arpl
push
push
mov
adc
and
lods
rcr
push
pop
inc
add
push
mov
shr
shll
nop
mov
imul
mov
inc
dec
movsb
and
and
sub
pop
lods
pop
or
cwtl
push
push
cmp
stc
or
ljmp
inc
mov
fistpll
lret
sbb
inc
stc
jbe
cli
cld
lods
mov
popa
jae
out
shll
mov
xchg
ficomps
js
pop
jbe
ret
add
pop
dec
sub
stos
dec
insl
inc
dec
adcl
inc
push
or
inc
out
sbb
xchg
add
xor
repz
popa
outsl
xor
jns
out
lock
fsubs
mov
mov
pop
cs
jne
cmp
adc
out
xor
cmp
and
jp
out
sbb
mov
or
loop
dec
and
lea
pop
cli
in
jo
inc
daa
jbe
mov
pop
lret
out
dec
add
imul
loope
stos
pop
or
mov
mov
in
rcrb
cmpsb
fcoms
jg
fisubl
cmp
aas
xor
pop
scas
jle
out
movsl
adc
popa
in
dec
push
xchg
xchg
push
pop
inc
dec
jns
addr16
and
push
add
cmp
xchg
out
ret
sbb
test
sar
enter
cli
push
cmp
mov
inc
mov
iret
push
push
dec
lret
xchg
mov
ret
mov
enter
add
dec
aas
jp
adc
and
fidivl
andl
xchg
adc
repnz
loopne
les
popl
mov
or
add
or
jne
or
cwtl
inc
pusha
dec
pop
sbb
jecxz
inc
xchg
xchg
fistpl
fnsave
hlt
mov
lret
xchg
aas
xchg
cld
mov
adc
mov
mov
fbld
mov
stos
mov
test
dec
jbe
dec
leave
xor
mov
aaa
jge
or
inc
pushf
test
arpl
cmp
aad
ret
imul
in
mov
mov
jne
je
xchg
cli
loop
or
std
pusha
xor
push
popa
ret
push
lcall
outsb
and
mov
push
xchg
jge
lret
mov
popl
test
cmp
pop
sbb
add
jge
pop
sti
or
adcb
mov
push
mull
mov
add
scas
ret
push
out
stos
add
mov
jmp
mov
or
mov
pop
pop
sbb
rolb
xchg
adc
push
xchg
jnp
or
cld
mov
pushf
xor
push
repz
jb
inc
jno
ds
out
and
xor
push
fldcw
lea
in
cmpsl
push
inc
subb
mov
fcoml
jge
add
xchg
sahf
insl
pusha
xor
and
pop
push
jbe
pop
mov
xchg
aas
pop
jge
neg
xor
movsl
mov
sbb
stos
cmp
nop
popf
gs
cmp
inc
ret
cmp
and
pop
xchg
and
push
pop
stos
sub
fwait
nop
jns
mov
les
xchg
inc
xchg
in
adc
lea
mov
push
filds
jbe
jl
add
and
fimuls
adc
xor
xor
add
ficompl
xchg
mov
mov
in
icebp
push
jnp
jns
or
sub
pop
faddl
push
std
mov
xlat
pushl
test
in
rorb
fiadds
pop
cmp
in
jmp
fistpll
lret
jmp
js
mov
xor
ss
mov
popa
test
sbb
xor
sbb
inc
addr16
out
mov
lret
add
mov
mov
in
sbb
mov
inc
stos
arpl
and
pusha
xor
decb
out
rorb
daa
idiv
xor
cmp
push
xor
out
jnp
movsl
test
mov
fdivrp
jno
sahf
out
pusha
jnp
inc
sub
add
ja
scas
cmpsb
push
movb
std
loop
int
rcrl
xchg
aam
or
adc
push
pop
cmp
cltd
push
sbb
insl
call
sbb
pop
jecxz
push
idivb
jae
dec
push
inc
add
out
test
pop
cmp
or
dec
sub
pop
insb
bound
cwtl
or
fidivl
iret
sub
enter
jg
les
int3
mov
flds
arpl
je
add
js
test
xchg
cmp
push
cwtl
xor
shrl
jecxz
mov
lret
mov
dec
lcall
sub
xchg
mov
and
dec
mov
jecxz
jne
adc
jge
nop
xor
xor
sti
push
mov
or
adc
dec
sbb
iret
adc
adc
push
pop
jg
dec
test
addr16
jnp
and
sub
shlb
pop
and
iret
fcom
pop
out
cmp
dec
mov
shrl
mov
sub
jnp
cmp
adc
gs
js
cmpsl
insb
mov
pop
scas
cmpsb
cmp
add
in
icebp
xor
icebp
in
inc
testb
rorb
ljmp
add
push
loopne
adc
out
fsubl
mov
sub
xchg
jns
push
add
adc
daa
stc
lret
inc
inc
mov
lea
scas
pop
stc
sub
cmp
mov
xchg
in
xlat
aaa
ds
imul
lods
enter
jg
sub
fsts
push
xchg
dec
fdivs
xchg
cld
adc
sbb
ja
add
fistpl
dec
xor
push
mov
jbe
xchg
pop
xchg
imul
mov
filds
or
sub
inc
xchg
imul
mov
push
xchg
xor
rorb
mov
xor
std
push
rol
cwtl
outsb
fcompl
mov
cmc
iret
imul
lock
or
int
js
xor
es
mov
ret
outsl
adc
fcoml
mov
loopne
fwait
inc
shr
hlt
xchg
and
andb
imul
or
mov
scas
bound
push
cwtl
mov
add
pop
pop
dec
mov
add
psubsb
stos
pop
jle
cmp
jp
lret
call
jb
scas
or
push
rcll
popa
dec
faddl
inc
or
mov
inc
cwtl
or
repnz
int3
jbe
sbb
ljmp
in
jnp
jge
iret
push
lahf
loopne
cwtl
leave
and
das
mov
into
lock
pop
mov
ljmp
push
add
push
mov
mov
dec
iret
xchg
ret
mov
movsb
loopw
xchg
mov
push
sub
stos
pop
outsb
es
sbb
js
stos
push
xor
push
loope
fiaddl
xor
rcrl
pop
jmp
sub
shrl
sbb
lock
xor
mov
gs
pop
nop
fildll
xchg
insl
inc
cmpsb
mov
ja
sti
ret
or
add
aas
sbb
adc
scas
lock
jae
adc
fwait
outsl
repz
pusha
mov
mov
adc
into
and
cld
lret
pop
jle
push
hlt
sbb
sbb
out
xchg
ljmp
sbb
mov
push
jo
cwtl
je
mov
cmp
xchg
sub
out
jge
inc
mov
insb
dec
dec
xchg
shr
mov
pop
pop
adc
inc
mov
rolb
movsl
lret
jnp
jno
enter
je
dec
loop
sbb
dec
movsl
gs
clc
mov
testb
mov
fmul
dec
xor
mov
jb
inc
jns
inc
rorb
lahf
cmp
mov
jge
mov
subb
mov
jmp
sarb
test
inc
xor
aas
push
xor
filds
in
adc
sub
sahf
xchg
in
push
test
pop
mov
push
dec
mov
push
pop
pop
lahf
cltd
stos
inc
xor
pop
leave
inc
xor
mov
pop
jmp
mov
pop
lods
mov
flds
mul
sbb
int
inc
jnp
loop
fwait
mov
xchg
mov
test
call
pop
js
inc
pop
ret
push
nop
loope
testb
ja
nop
xchg
cld
icebp
inc
push
fld
fcoml
jo
inc
ret
jg
addr16
sub
in
shll
mov
or
cmp
mov
cmp
outsl
pushf
loop
push
sbb
jne
fdivl
lock
insb
rol
push
mov
cmp
mov
ja
inc
pop
outsl
xchg
push
aam
add
push
or
inc
sub
push
add
dec
test
cmp
rol
xchg
xor
cld
push
push
call
add
push
mov
in
js
ja
and
cs
sub
imull
or
sub
pop
ss
cwtl
xchg
cs
mov
arpl
push
fsubl
lret
aad
add
pop
cs
popf
mov
cmp
pop
pop
into
dec
and
lds
out
cmp
aaa
xor
sbb
add
add
cmpsl
or
lcall
and
mov
je
pop
stc
popf
shrl
cmovle
jns
push
test
cli
inc
out
shll
pop
lods
pop
cmp
inc
scas
push
inc
or
jl
xor
daa
add
or
outsl
out
lret
xchg
xchg
pop
mov
push
add
dec
enter
xchg
movsl
sub
lock
sahf
ds
dec
les
or
inc
jbe
loop
jle
jge
fwait
test
pop
fistps
sub
rolb
cmp
and
lret
in
mov
pop
sub
lea
out
in
and
mov
inc
mov
mov
mov
test
or
notl
sbb
aam
inc
enter
insb
add
fsubrs
or
xor
rcrl
dec
sbb
ljmp
inc
ret
push
add
mov
pop
and
push
rep
dec
or
imul
adc
mov
aas
cld
jb
push
shl
rcrb
xor
dec
or
mov
fnsave
ljmp
xchg
add
ljmp
subl
add
pop
fsubl
dec
cltd
cltd
aam
test
xor
push
push
out
xchg
add
mov
mov
movaps
insb
and
mov
movsb
je
subl
cs
adc
cmp
cmp
mov
or
mov
stos
sub
sub
stc
sub
sbb
jmp
sbb
pop
fstpl
mov
rorl
mov
sbb
sub
xor
cli
adc
pushf
incb
pop
es
xchg
add
stos
addr16
jno
xchg
jecxz
dec
or
in
mov
imul
bound
xor
lahf
das
sub
clc
sbb
addr16
mov
cmp
jl
mov
xor
lock
pop
sub
push
mov
out
leave
jno
inc
rolb
aaa
dec
pop
adcb
and
lods
mov
sub
push
jb
inc
aam
ds
xor
sbb
lahf
dec
cmp
xchg
hlt
in
into
xchg
gs
add
mov
mov
pop
int
cmp
mov
lods
pop
nop
pop
fcmove
jne
imul
das
fs
dec
and
aas
and
pop
fbld
sbb
and
xchg
add
add
xor
icebp
dec
mov
aam
push
xchg
push
mov
imulb
fwait
cmpsb
mov
mov
sbb
mov
ss
insl
cs
inc
push
enter
outsb
loopne
mov
xchg
mov
enter
pop
xor
adc
push
jge
pop
mov
mov
inc
or
jge
in
imul
ljmp
repnz
aas
sbb
and
mov
inc
arpl
scas
mov
and
shlb
hlt
xorb
inc
sub
icebp
mov
loop
cmp
insb
adc
adc
mov
dec
aaa
out
inc
hlt
out
std
cli
iret
mov
loop
loop
fcmovb
pusha
int3
ret
xchg
push
data16
xlat
xchg
sub
jl
popa
or
jo
mov
in
adc
jo
sarb
jnp
sarb
call
push
mov
inc
dec
and
dec
xchg
jae
pusha
outsb
out
and
jmp
mov
push
inc
testb
lcall
idivl
xor
out
or
jmp
ds
or
imul
cmc
dec
scas
xlat
sub
leave
xchg
lock
notl
cmp
dec
js
imul
arpl
insb
push
flds
fildll
iret
int3
mov
inc
inc
clc
cld
ja
lods
lods
inc
mov
lcall
lods
sbb
xor
daa
aam
cmpsl
and
hlt
jmp
adc
cmc
xlat
call
and
adc
stos
jp
jg
pusha
dec
jp
dec
popf
les
add
xchg
sub
and
inc
jp
and
daa
pop
bound
or
movsl
fxch
fdivrp
xchg
out
data16
or
adcb
xchg
loop
sbb
adc
mov
push
push
ljmp
cmp
add
int
into
fadds
nop
and
idivb
je,pt
hlt
aaa
out
pop
enter
push
ja
xor
stc
in
xor
mov
pop
add
inc
nop
cld
mov
cmpsb
lcall
dec
pushf
into
jno
mov
push
mov
push
mov
gs
push
icebp
ffree
je
icebp
pop
sub
ja
out
stc
shlb
pop
call
minps
shl
fwait
or
outsb
xor
dec
pop
and
lahf
cvtps2pd
bound
loop
das
xchg
adc
mov
test
lcall
inc
pop
fadds
pop
stc
cmpsl
jg
mov
lods
mov
mov
and
xor
inc
repnz
xchg
jnp
mov
adc
pop
cmp
arpl
jp
shlb
dec
ds
pop
movsl
mov
push
fdivl
rcrb
lods
imul
push
dec
outsl
data16
in
xor
pop
lods
and
and
test
into
add
inc
push
sub
or
push
inc
dec
in
add
fsubs
sub
and
sbb
xor
fadds
test
testb
cwtl
sarb
outsb
dec
gs
out
stc
jmp
and
fisubrl
ss
rcll
mov
xchg
lods
pop
andb
icebp
sub
loop
lret
and
lahf
jl
and
movsl
sub
mov
jns
loop
roll
mov
mov
push
cmp
mov
icebp
add
enter
dec
fs
call
call
push
dec
in
adc
and
hlt
fwait
jbe
int3
imul
mov
sub
pop
aam
fidivl
pop
pop
in
cs
cmp
mov
xchg
mov
idivl
mov
adc
jmp
lret
mov
xchg
push
dec
out
pop
popa
pop
xor
ja
mov
stc
fprem1
inc
inc
dec
pop
call
jo
es
popf
jle
and
xchg
jo
hlt
push
stos
andb
mov
frstor
dec
arpl
push
mov
sub
jb
and
or
sbb
mov
arpl
push
in
mov
and
ljmp
int
sti
stc
sub
pop
xchg
shld
fdivrl
lret
push
daa
imul
xor
loop
bswap
pop
mov
push
add
xor
ds
ret
xchg
lcall
or
add
aas
add
mov
inc
lret
lret
ror
xor
cwtl
iret
daa
imul
mov
cltd
popf
pushf
clc
jb
jno
popa
pop
pushf
fnstsw
int3
pop
dec
movsb
xchg
or
pop
sahf
mov
jb
sbb
shlb
outsl
push
dec
inc
jle
out
push
inc
mov
notb
push
incl
xchg
lock
inc
loop
insb
pop
pop
mov
inc
dec
ds
pop
inc
add
and
jb
jl
xorps
xor
insl
xor
mov
add
imul
insl
push
or
jmp
xor
movsb
jno
mov
rorb
push
jbe
stos
loopne
jae
lods
and
dec
mov
test
dec
cmp
arpl
pop
mov
mov
insb
imul
jb
rol
jmp
js
movsl
fstpl
hlt
sbb
out
in
leave
ret
in
insl
test
aad
mov
jmp
lds
insl
xchg
cltd
daa
pop
pop
icebp
icebp
shl
loope
adc
in
push
leave
fidivs
sbb
add
mov
sbb
sub
push
mov
pop
in
sarb
pusha
xor
daa
out
dec
je
loop
pop
outsl
mov
pop
and
jp
add
or
subb
adc
in
aaa
sti
lock
add
dec
jns
ficompl
enter
push
aam
inc
mov
pushf
adc
js
dec
pushf
pushl
in
jge
mov
stos
and
pop
inc
test
mov
jae
add
cmp
ja
cmp
cld
xor
adc
mov
mov
loopne
push
rcrl
jp
mov
mov
pop
sbbb
stos
mov
and
fs
add
inc
std
inc
sti
mov
xor
pop
jmp
cwtl
call
fwait
lock
sbb
sbb
sub
ret
lret
scas
mov
es
ret
xchg
lods
push
cmp
add
push
jo
push
ret
push
aaa
inc
rolw
addb
push
test
addr16
fidivl
jae
rcrb
andl
jecxz
popa
loop
xchg
das
jb
outsl
pop
loopne
js
imul
inc
imul
imul
lods
scas
add
jo
movsl
xchg
cli
jmp
rcrb
mov
movsl
push
push
jmp
lar
lcall
dec
stc
fnstcw
xor
push
push
aam
lret
icebp
ret
dec
push
push
xor
das
scas
bound
and
dec
jge
fidivl
push
lock
pop
sbb
stc
push
mov
pop
pop
cmpsb
cs
cmp
shrl
sub
and
xchg
sub
jb
sub
and
fsubs
add
outsl
push
cmp
xor
xor
pop
cwtl
cmpsb
mov
mov
sbb
popf
addr16
jg
mov
imul
lret
sub
sbb
or
sti
or
cmp
sub
pop
mov
imul
pop
stos
dec
fstpt
lret
sub
sbb
or
sti
or
cmp
sub
pop
mov
imul
pop
stos
dec
pop
cmp
sub
sbb
sbb
or
cmp
sub
pop
mov
imul
pop
stos
dec
fstpt
lret
sub
sbb
or
sti
or
fldt
mov
or
popf
lock
lock
rcrb
int
add
popa
jo
pusha
push
adc
adc
add
lock
shl
rclb
mov
pusha
pop
push
pusha
inc
adc
and
adc
add
jmp
fadds
mov
push
jo
inc
push
sub
xor
inc
bound
xchg
mov
xchg
cmpsl
sbb
popa
mov
mov
sub
lret
enter
out
adc
lock
push
fldcw
rol
push
fwait
outsl
and
aam
mov
mov
mov
lods
clc
subb
jecxz
lahf
sbb
icebp
mov
mov
mov
mov
ret
adc
xchg
scas
mov
xchg
xchg
mov
mov
in
add
pusha
scas
lahf
int
or
movsl
and
jne
pop
comiss
mov
jo
aad
cwtl
call
lahf
jecxz
add
pusha
inc
push
test
rclb
js
xor
sbb
mov
jne
xor
jecxz
shl
leave
mov
nop
mov
mov
mov
dec
jle
jo
push
cmp
or
lock
mov
mov
mov
pop
add
push
add
inc
jg
insb
rcrb
sub
fsub
shll
adc
inc
and
popa
je
lock
mov
test
addl
push
jo
pusha
jo
pusha
inc
adc
add
xor
and
shl
shl
shl
rclb
mov
pusha
jo
pusha
inc
adc
add
xor
and
shl
add
pop
push
mov
rcrb
lahf
adc
icebp
pushf
push
dec
mov
jecxz
pop
xchg
mov
pop
and
or
mov
int
sbb
sbb
lret
iret
loopne
jle
jb
xchg
jge
mov
addb
jno
movsb
in
clc
adc
aad
popa
shll
push
rolb
jle
mov
mov
mov
movsb
rep
ret
lea
pop
ss
std
fists
mov
mov
rcrl
adc
test
cmp
cmc
fwait
push
jle
bnd
mov
movsl
sahf
xlat
or
sarl
xchg
scas
mov
add
mov
push
ja
sbb
push
jl
dec
pop
mov
pusha
sahf
popl
add
mov
lcall
rcll
out
pop
mov
scas
pop
lock
insb
out
mov
push
cld
jecxz
nop
loopne
outsb
enter
ret
inc
movsb
mov
lods
xlat
dec
xchg
cmp
dec
and
mov
pop
sbb
lret
xchg
popa
or
inc
lret
push
xchg
pop
sbb
lret
mov
lcall
fisubl
add
nop
mov
loope
jae
inc
insb
mov
cmpsb
mov
pop
lods
mov
and
jns
sbb
dec
jge
cmpsb
mov
cmp
adc
mov
jae
push
outsb
lds
cmpsl
gs
dec
push
mov
ss
cltd
scas
out
jecxz
dec
sub
lea
mov
or
inc
pop
add
loopne
xchg
stc
enter
sub
subl
popa
les
loop
jbe
mov
xchg
adc
inc
stos
mov
fmuls
in
imul
pop
js
sub
mov
mov
jg
and
push
jbe
aam
je
jbe
sbb
test
out
rcr
mov
mov
xor
add
push
sbb
inc
stc
jo
out
pushf
or
addr16
lods
js
push
mov
push
or
mov
in
hlt
push
and
dec
lret
lds
shl
adc
mov
int
cmpsb
and
fadds
rol
lahf
mov
pop
sub
jb
cltd
push
scas
cmp
addr16
cmp
cld
dec
adc
addr16
rclb
scas
xchg
cmpsl
xlat
cmp
mov
mov
cs
lods
dec
rclb
mov
inc
xchg
jmp
shll
jge
std
or
or
push
aas
ret
outsl
into
push
lock
rorb
in
and
lret
sbb
inc
and
push
jp
hlt
push
mov
repnz
cmp
aaa
push
fs
shrb
scas
pushf
and
add
inc
push
out
sqrtps
xchg
leave
pop
push
xor
mov
outsb
xchg
test
mov
xor
dec
es
or
ljmp
cmp
pop
imul
pop
push
pop
push
scas
adc
cmp
mov
xchg
add
in
call
xchg
sub
cmp
sbb
pop
xchg
imul
rcll
jmp
jae
stc
cltd
xor
in
test
mov
mov
mov
mov
mov
dec
and
shll
out
loop
or
cld
or
lds
cltd
mov
xchg
ret
adc
popf
aad
jae
mov
xchg
xor
sub
sub
js
mov
mov
xlat
dec
out
xor
add
sti
stc
lods
imul
outsb
mov
mov
ljmp
xor
cwtl
insb
or
sbb
popf
pop
movsb
mov
cmp
mov
fsubl
cmp
test
idivl
cmp
adcb
fs
sbb
mov
inc
incl
nop
mov
fisubrl
pop
and
sbb
xchg
jbe
rorl
notb
std
push
xchg
mov
mov
scas
fisubs
xor
mov
lds
xchg
push
dec
jo
iret
lock
scas
or
pushf
fsub
mov
pop
jl
aad
xchg
jmp
repz
mov
mov
mov
inc
mov
xor
in
jle
adc
movsl
mov
icebp
dec
fwait
dec
movsb
lret
movl
sbbb
ror
test
fdiv
adc
test
insb
jle
fsts
jg
push
jp
mov
and
jb
cmpsb
movb
scas
movsl
enter
js
fs
insb
sbb
imul
and
nop
pop
add
cli
jae
push
cwtl
and
xchg
xchg
sbb
push
int
clc
sbb
std
stos
fcoml
inc
enter
or
repz
sbb
jne
mov
jnp
nop
xchg
js
mov
and
cmpsl
enter
stos
imul
cmp
or
add
sub
mov
push
in
icebp
mov
mov
xchg
shl
aas
stc
xchg
mov
rclb
xor
cld
sahf
testl
pop
mov
fcmovu
adc
lcall
loopne
ss
xor
mov
mov
push
mov
mov
into
pop
mov
mov
movsl
pop
hlt
test
sub
ds
xor
lret
adc
mov
push
xor
hlt
ss
lea
mov
add
imul
rcrl
insl
mov
pop
leave
iret
loop
movsb
je
mov
stos
jo
cmpsl
shll
pop
test
mov
xchg
xlat
and
jecxz
push
lret
pop
rcrb
lock
dec
lret
negl
mov
imul
insb
out
frstor
stos
lret
mov
imul
dec
push
push
out
xchg
in
test
mov
js
jmp
iret
fwait
mov
fs
push
and
ja
xchg
pop
sbb
sarb
in
loop
dec
xorb
movsl
roll
mov
mov
lods
testb
sub
xlat
repnz
mov
insl
aam
sbb
inc
xor
rolb
into
std
and
xchg
or
add
fs
popf
jle
fwait
subl
out
leave
rcll
lret
pop
in
xchg
sub
into
dec
mov
pop
pop
inc
aaa
scas
shrl
gs
mov
sub
decl
jae
mov
in
and
xchg
pop
das
pusha
push
push
sbb
fildll
aam
cs
shll
rorb
in
sti
enter
add
repnz
scas
mov
aaa
pop
sbb
dec
pop
sarl
in
pop
xor
sbb
fsubrs
pop
sub
repz
mov
sub
shll
jecxz
inc
pushf
aaa
push
test
mov
mov
and
push
hlt
mov
shll
inc
ss
icebp
and
push
icebp
xchg
mov
lcall
mov
add
mov
inc
pop
stos
movsl
pop
lret
and
jmp
lcall
adc
pop
ja
jbe
loope
stos
inc
pop
add
shlb
stos
cltd
lcall
insl
cwtl
mov
pushf
outsb
aas
movsl
pop
cwtl
sub
xor
inc
push
test
lock
lahf
subb
insb
in
cmc
jbe
fisttps
test
lds
sub
inc
mov
lds
jecxz
div
mov
and
addr16
xor
shl
sub
push
test
adc
or
ds
bnd
pop
push
roll
je
jge
and
xchg
adc
fdivrl
fcomps
mov
cli
xchg
push
imul
xor
pop
ljmp
popa
loopne
push
std
push
mov
inc
pop
hlt
ret
and
pop
inc
sub
int
mov
hlt
jmp
outsl
pusha
pop
rol
mov
sub
mov
jecxz
lret
out
out
pop
sub
inc
popa
aam
movsb
fcmove
into
sub
inc
mov
xrelease
lahf
rol
sub
gs
pop
xor
mov
adc
movsl
or
dec
push
nop
mov
es
pop
inc
add
mov
jle
fnsave
adc
push
xor
aam
push
adc
cmp
sahf
mov
or
push
inc
pop
mov
mov
movsl
sub
cmp
gs
jge
cmp
rcl
daa
ss
or
mov
inc
push
mov
pop
jmp
out
mov
fs
and
andl
cmp
ret
xchg
stos
nop
sub
sbb
add
scas
out
dec
and
cwtl
lock
or
and
push
je
xchg
pop
fcoml
pop
jo
addb
and
aas
jb
insb
cmp
mov
sarb
sbb
pushf
int3
sub
nop
ret
icebp
cmp
jl
push
mov
in
push
data16
and
inc
add
sbb
testl
xchg
jne
hlt
aad
enter
bnd
adc
jno
leave
addr16
jnp
jmp
cltd
adc
nop
jp
out
sbb
cs
fucomip
sysret
add
cli
out
insb
popf
mov
jp
jae
pop
pusha
sub
xor
scas
pusha
sbb
cmp
cmp
cld
xchg
push
fisubs
mov
adc
fwait
lods
popf
and
cmp
add
loopne
aam
hlt
test
inc
cwtl
or
inc
les
adc
sbb
jl
lds
inc
jmp
sub
mov
inc
and
cmpsb
mov
outsl
stos
loopne
dec
add
xchg
dec
punpckhbw
loop
outsb
int3
and
pop
hlt
jae
clc
mov
or
xchg
ds
out
mov
pop
push
sar
outsl
mov
out
cmp
outsb
xchg
xchg
inc
push
xor
scas
std
xchg
movsl
mov
adc
adc
xchg
cmpsb
dec
outsl
add
adc
js
in
int3
mov
sarl
popa
inc
and
mov
movsl
pop
ret
hlt
mov
inc
scas
cli
aad
imul
and
and
cvttps2pi
mov
test
pop
jae
add
rorl
sbbb
add
ja
xchg
cmpl
sbb
push
jecxz
mov
fs
push
xchg
dec
jge
jp
cmp
lahf
imul
dec
xor
pop
sbb
mov
jne
push
add
insb
loop
ss
xchg
dec
cmp
in
inc
adc
lods
lock
jmp
cmpsl
pop
sahf
shlb
dec
mov
mov
sahf
rcll
adc
ficoms
pop
les
movsb
lea
mov
add
cmp
dec
jbe
or
mov
sti
xchg
in
mov
jmp
imul
sbb
and
jmp
in
ss
mov
call
jnp,pn
or
sbb
mov
popf
cmp
pushf
loop
sarb
and
icebp
out
and
xchg
inc
ljmp
dec
fdiv
inc
insb
dec
cli
push
lret
cli
inc
mov
ficoml
dec
pop
cltd
andl
xchg
inc
shl
pop
into
cmpsb
cltd
and
sbb
lods
jno
or
sub
pop
jmp
into
dec
mov
push
inc
mov
shrl
pop
cmp
xchg
jbe
or
xor
cmc
dec
lret
xor
addl
into
mov
mov
dec
fimuls
adc
mov
jmp
mov
push
leave
test
aad
sbb
stc
xchg
shrb
mov
or
or
scas
pop
idivb
inc
sub
cwtl
outsb
int3
sub
clc
push
repz
pop
dec
or
aaa
sub
jmpw
or
repnz
pop
inc
sbb
push
es
icebp
or
cmpsl
arpl
insb
add
mov
daa
push
enter
mov
inc
jae
mov
sub
and
fucom
mov
adc
pushf
jle
mov
leave
jle
out
xchg
sahf
decl
push
vmovshdup
mov
sub
fildl
and
mov
mov
inc
mov
xchg
mov
inc
cmp
inc
insb
push
fstps
lret
shll
imul
repnz
mov
jbe
gs
ja
mov
ret
sub
add
and
mov
into
movsb
pop
inc
and
enter
int3
adc
aam
xor
fisubrs
add
mov
pop
sbb
xchg
xchg
enter
inc
push
sahf
push
icebp
scas
jae
lock
mov
sbb
jg
xchg
mov
push
sbb
mov
and
jmp
mov
out
lcall
mov
pop
int
xor
insb
xchg
xchg
std
out
mov
lods
dec
into
sub
lahf
fsts
aas
add
pop
add
mov
mov
and
shl
movsb
ror
dec
mov
lock
test
dec
jmp
out
test
sbb
mov
enter
jg
pusha
dec
sbb
cltd
cmp
fiaddl
push
pop
lods
out
loope
or
in
xor
inc
cmp
cmp
lock
fsubr
cmp
aas
pop
push
cmp
adc
xchg
mov
data16
ss
sub
shlb
pop
sbb
dec
pop
stos
xorl
mov
aas
mov
mov
leave
push
dec
loope
ljmp
fimuls
fcoml
pop
shlb
aaa
jbe
cwtl
cltd
outsl
movsl
sub
movsb
push
inc
jecxz
dec
sbb
test
xchg
cmp
or
cmc
call
imul
mov
push
aaa
xchg
xor
mov
movsl
stos
xchg
clc
cmp
dec
jae
lret
inc
push
cmp
mov
mov
clc
ds
mov
and
mov
in
js
shlb
mov
aas
inc
xchg
xor
call
adc
xor
scas
cwtl
jns
or
lds
rorb
es
jecxz
cltd
lret
or
add
xor
jmp
mov
mov
fisubs
sub
test
dec
scas
xchg
push
pop
inc
test
adc
pop
int3
xchg
mov
xor
xchg
iret
leavew
sbb
mov
add
out
fs
and
adc
aas
and
mull
cmp
mov
inc
jae
iret
jo
gs
pop
jne
cmp
pop
mov
mov
aas
fcoml
dec
cmpsb
mov
cli
push
or
jo
adc
lret
lret
jb
std
popa
mov
das
movsl
xchg
shlb
xor
fcmovbe
test
cmp
xchg
xchg
pop
popf
js
movsl
subb
jo
xor
adc
es
cmovno
pop
loope
aaa
in
scas
sbb
xchg
inc
bound
inc
fsubs
loopne
sub
bound
dec
push
jae
inc
mull
or
dec
in
adc
xor
imul
aam
jne
test
or
mov
xchg
lods
aam
hlt
sub
or
sub
mov
jno
pop
lds
xchg
adc
jno
xor
sub
push
fidivs
cmp
sbb
push
mov
jp
fcmovnbe
lea
dec
pop
lret
out
cmp
lahf
push
es
jg
mov
lea
stc
xor
stos
sub
outsl
outsl
pop
insb
pop
cmp
shll
loope
jg
cmp
and
inc
sbb
cli
inc
dec
xor
cmpsl
add
mov
adc
jge
cmp
into
shl
cmc
mov
aaa
fwait
imul
jl
aaa
sub
push
imul
xor
mov
testl
adc
add
xor
mov
je
arpl
or
jno
popf
inc
ss
bnd
pop
out
xchg
or
sti
nop
cltd
stc
xchg
cmp
stc
jg
ja
rcll
insl
js
into
xor
outsb
adcl
inc
pop
lret
pop
inc
adc
hlt
dec
std
shr
sbb
and
jmp
lock
sbb
in
iret
and
cld
into
test
add
aam
and
ljmp
jb
jecxz
les
cmp
sbb
pop
loop
out
sahf
cmp
jne
lods
xchg
mov
push
sahf
inc
sub
mov
out
lods
xchg
jp
ljmp
jne
hlt
xor
in
mov
int
popa
aad
push
les
icebp
out
pop
mov
push
call
ret
cmp
notb
call
int3
cmpsl
jo
mov
je
jle
mov
dec
scas
popa
jo
jb
jb
push
ds
mov
xchg
push
mov
push
cmp
outsl
loopne
or
cltd
into
dec
jo
jg
mov
and
mov
cs
rcll
lret
popa
mov
push
cmpsb
ds
das
insl
cmp
pop
push
insl
aad
push
or
add
lods
ficoms
add
and
xorb
insb
sub
xchg
lods
and
ss
lret
cmp
test
or
aaa
dec
jl
test
outsl
aad
mov
sub
sti
mov
sub
lds
cmp
adc
jne
test
repz
jo
inc
addr16
shrl
cltd
stos
dec
fcmovne
jo
mov
out
lods
leave
xchg
xor
mov
dec
mov
or
xor
dec
xchg
and
adc
pop
xchg
outsl
jbe
xchg
scas
xlat
mov
inc
push
out
and
inc
sub
cmpb
mov
test
push
pop
cmp
test
jp
movsb
push
outsl
aas
sub
mov
lret
in
xchg
in
mov
dec
push
popa
andb
icebp
mov
sbbb
gs
sti
push
ss
fsubl
pop
pop
cmp
pop
sahf
orb
shrl
subb
ret
push
jmp
popa
push
inc
lods
and
pop
jns
lds
push
shrl
pushf
in
or
sahf
push
xor
inc
stos
cmp
xchg
push
cld
sbb
sbb
mov
cwtl
sbb
sti
xchg
add
dec
jecxz
xchg
repnz
adc
adc
or
mov
ja
es
inc
sub
shl
xlat
pop
jo
fincstp
add
in
das
cwtl
js
faddp
jg
xchg
loope
dec
rcll
setl
jg
sub
push
mov
mulb
enter
int3
int3
mov
pop
mov
popa
inc
enter
fidivrl
hlt
aad
mov
repz
pop
add
fnstsw
f2xm1
jl
fcoml
ret
ljmp
popf
cmp
cmpsb
adc
ljmp
mov
mov
xchg
rcl
xlat
lcall
fnstsw
imul
inc
and
mov
imull
pop
dec
xchg
rclb
icebp
shlb
leave
pushf
lret
les
jecxz
scas
cmp
jns
push
rcrb
insl
inc
pop
inc
inc
push
lods
jmp
cmp
xchg
test
push
pop
stc
dec
push
push
scas
or
cmp
cmp
movsb
ret
xchg
pop
js
stc
nop
pop
pop
lcall
sbb
repz
jnp
or
mov
xchg
pop
je
cmpsl
sahf
dec
cmp
lods
jnp
inc
jge
flds
xchg
push
cmp
push
lods
repz
mov
xor
mov
mov
aad
psubusw
sti
rcrb
add
das
mov
in
ss
or
loopne
orl
pop
xchg
idiv
pop
push
jo
push
cmpsb
fidivl
xchg
xchg
mov
jp
dec
adc
sbb
incb
loopne
mov
pop
add
loop
xor
cmpsb
inc
push
mov
sbb
out
push
jnp
mov
sti
loop
xchg
stc
xchg
cmpsl
rol
lahf
fisttps
imul
adc
cltd
aaa
xchg
cli
mov
pusha
cmc
xlat
sub
mov
push
or
hlt
jmp
fidivl
icebp
test
pop
fildl
dec
shr
and
mov
fdivl
outsb
jbe
sub
add
dec
xlat
or
and
mov
pop
jle
inc
adc
or
add
jns
mov
pop
sub
iret
sub
pop
movsb
xor
mov
js
push
sbb
fmul
es
insb
jae
inc
cwtl
jnp
cmp
or
or
scas
sub
lds
mov
adc
xchg
into
cmc
dec
xlat
out
ds
mov
int3
cmpsb
xchg
pop
loop
xor
arpl
loop
sarl
movl
lea
xchg
pop
and
inc
sbb
pop
lods
lods
add
or
insb
lahf
js
adc
negl
xchg
sbb
dec
lahf
xchg
fdivrl
mov
push
jne
xchg
xchg
and
lcall
mov
int
sbb
sbb
or
popa
pop
aam
push
in
adcl
xchg
popl
xchg
dec
and
cltd
in
mov
add
inc
add
jae
dec
pop
in
je
leave
loopne
sar
rclb
mov
pusha
jo
pusha
inc
adc
add
xor
and
shl
shl
shl
rclb
mov
pusha
jo
pusha
inc
adc
add
xor
and
shl
ret
loopne
shl
rclb
mov
pusha
jns
fs
adc
sbb
xor
adc
hlt
in
in
aam
rclb
and
jo
lret
pusha
aaa
addr16
fistpll
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
shrb
dec
pushf
fs
mov
sbbl
add
add
add
add
add
add
push
add
testl
mov
pop
add
add
cmp
imul
mov
jae
cld
add
or
push
add
loop
inc
add
jae
add
jne
sub
jge
into
add
sbb
xor
or
aad
cmp
add
add
add
add
add
add
add
or
jg
sub
inc
add
aad
les
outsl
add
pop
add
add
dec
add
data16
add
dec
add
push
add
add
add
add
arpl
cmp
addb
add
stos
add
add
and
popa
add
add
add
mov
lret
add
add
add
add
add
sub
add
push
add
add
add
scas
add
out
add
add
add
mov
mov
xor
push
add
add
xor
add
leave
add
add
push
into
add
add
js
enter
push
add
add
or
jno
xor
sahf
add
daa
add
adc
data16
mov
cmp
add
add
add
das
add
add
add
inc
add
add
add
add
add
add
add
ret
add
stos
add
add
add
add
add
mov
sub
dec
add
add
cmp
lcall
add
add
add
test
fadds
jge
pop
add
rolb
sbb
pop
add
add
push
lcall
add
add
push
add
add
add
aaa
add
mov
cld
add
or
inc
add
dec
add
add
add
add
mov
popf
add
add
add
add
push
dec
add
cmp
enter
add
add
add
dec
add
add
add
add
add
add
sbb
add
addr16
add
lcall
add
arpl
add
add
add
add
add
add
jno
sub
loop
jae
in
add
add
add
add
add
pop
add
add
enter
inc
add
add
aad
testl
xor
or
jno
popa
add
add
add
testl
sub
add
add
imul
mov
pop
add
pop
add
add
xor
dec
add
add
dec
add
add
push
add
inc
add
pop
add
add
inc
add
add
add
inc
add
pop
add
add
mov
add
pop
add
add
add
roll
push
add
add
out
add
add
jb
push
add
add
add
loop
inc
add
add
add
dec
add
add
repnz
daa
add
addb
add
add
add
add
add
add
add
add
add
insl
add
add
add
add
add
nop
add
add
leave
add
xlat
add
add
add
jns
insl
add
add
add
add
xlat
add
add
add
add
add
add
dec
add
add
scas
fisubs
shl
mov
imul
out
push
int
xchg
jnp
adc
imul
ljmp
movsl
les
loopne
leave
or
cmpb
movsb
dec
jae
sub
adc
adc
bswap
jnp
sbb
sbb
cmp
ljmp
push
mov
inc
mov
lret
adc
dec
cli
mov
or
ja
adc
daa
ja
inc
idivb
fisttps
int
cmp
daa
and
mov
aas
sbb
mov
test
adc
fistl
dec
mov
or
subb
cltd
mov
fldcw
test
push
sar
int3
xor
addl
inc
mov
sbb
lds
shlb
dec
fldlg2
push
push
hlt
out
lea
jns
aaa
arpl
mov
adcb
pop
out
mov
xor
test
mov
xor
jo
hlt
mov
outsl
jnp
sbbb
leave
mov
leave
mov
mov
cld
jg
add
add
aaa
repnz
pop
in
repnz
pop
movsb
rcrb
cmp
add
gs
cmp
out
or
mov
stos
das
jo
xchg
insl
inc
out
and
ret
in
insl
jge
test
sbb
out
sub
jg
lret
cwtl
sub
mov
xor
popa
cld
xor
mov
and
gs
cmp
cmpsl
cmpsl
fs
push
xor
call
push
aas
das
shrl
mov
mov
sub
xlat
push
jg
movsl
out
add
add
push
stos
adc
mov
inc
lret
adc
pushf
mov
cmp
jp
ja
pop
sbb
xor
xchg
and
xor
lret
insb
lcall
iret
or
sub
lahf
push
jmp
mov
cmp
std
xor
dec
rcrl
dec
lods
dec
arpl
mov
sahf
hlt
in
push
inc
jbe
cmp
push
repz
jo
cmp
je
jp
out
jns
pop
outsb
xorps
mov
fisubrl
ret
in
in
repnz
push
fwait
mov
jecxz
mov
sbb
rcrb
lds
sub
push
dec
push
in
stos
divl
pop
pop
icebp
popf
lods
jmp
shll
test
push
xchg
aas
push
aaa
scas
jae
lods
jb
add
setle
xor
xchg
flds
sbb
packssdw
sbb
pop
sub
xchg
sbb
xchg
cli
cs
adc
fildl
cmp
sbb
call
hlt
shrb
sub
add
push
add
rcrb
ljmp
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
