call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
xor
and
daa
add
data16
and
push
mov
mov
mov
ret
ret
out
divl
pop
and
adc
add
jae
arpl
addr16
pop
mov
scas
lea
shl
ret
imull
mov
sbb
ja
pop
dec
insl
inc
inc
stos
xchg
mov
pop
inc
dec
push
adc
and
scas
xchg
in
mov
or
push
sti
pop
loop
or
repnz
imul
pop
push
arpl
cwtl
mov
js
imul
out
shl
mov
insb
cmp
int3
outsl
fisttps
jle
mov
out
fcoms
pop
xchg
xor
sub
xor
xor
pop
xor
fisubl
daa
aaa
mov
lods
cmpsl
inc
cli
cmp
mov
mov
shl
pop
pop
sbb
mov
scas
ljmp
jnp
push
cmpsb
mov
mov
rclb
jecxz
sub
sarl
clc
ret
call
mov
popa
movsb
mov
aam
out
jno
fnsave
or
popf
cli
mov
aaa
adc
aaa
fs
jae
push
addr16
in
xchg
mov
sti
sti
cmp
inc
lds
inc
js
dec
ja
add
add
xor
add
aam
addb
pop
inc
inc
push
jl
jae
pop
adc
adc
loop
cmc
ret
mov
test
dec
idivl
imul
arpl
addr16
ja
xchg
mov
jecxz
shl
ret
divl
pop
and
adc
add
jae
arpl
addr16
ja
xchg
mov
jecxz
shl
ret
divl
pop
or
lods
pop
jo
pop
and
pop
push
into
xchg
enter
ss
and
and
mov
cltd
xor
jb
jae
out
scas
inc
push
punpcklwd
adc
sbb
cmpsb
jp
mov
adc
or
jbe
cmp
and
jp
test
cmp
jb
int
testl
int
loope
push
aas
shr
leave
jne
or
ss
mov
mov
in
movsb
lret
and
inc
rorl
xchg
rclb
testl
popa
and
stos
orl
shrb
mov
shlb
fsubrl
xor
jo
dec
inc
test
mov
repz
cli
addb
or
in
mov
or
mov
push
out
sub
mov
cmp
mov
mov
imul
xor
dec
stos
addr16
inc
dec
das
in
lahf
jge
movsb
cmpb
hlt
push
adc
inc
mov
repz
sub
clc
in
loope
pop
mov
cs
xchg
push
bound
aam
out
adc
stos
sub
mov
dec
fs
xor
mov
inc
add
fisubl
xor
dec
mov
push
mov
frstor
scas
mov
out
sbb
dec
int3
cmp
jb
adc
insb
insb
mov
xchg
daa
mov
bound
adc
add
sbb
push
aas
scas
scas
jp
xor
in
shl
push
jmp
pushl
add
pop
pop
and
jle
jge
add
sbb
push
lea
xchg
sbb
jp
and
add
push
and
xorl
rclb
add
xlat
push
cs
or
fidivl
jl
lret
lret
aas
mov
mov
and
das
pushf
mov
push
push
and
dec
dec
add
add
arpl
sbb
push
ret
mov
mov
adc
clc
and
fcomps
pop
cmc
mov
in
cmp
int3
sbbb
xor
cmp
insb
xchg
fcoms
inc
subb
fs
int
push
enter
jle
sub
mov
mov
push
movb
aas
adc
int
mov
rolb
out
testb
lock
or
mov
in
pop
mov
sub
hlt
cld
or
movsb
jle
fpatan
xor
and
or
pop
mov
sub
adc
movsl
mov
adc
out
adc
push
xor
inc
jns
mov
mov
mov
push
mov
push
add
pop
sbb
fadd
jno
rcl
daa
mov
dec
mov
jo
aad
ret
rorl
ja
sub
dec
shrb
push
or
pop
push
in
sbb
fnstsw
dec
mov
cmp
adc
cwtl
adc
cmp
push
xchg
jmp
push
sarb
loopne
or
movsb
jecxz
ja
xchg
ret
adc
push
ja
sbb
nop
ja
jo
xchg
das
jnp
push
sub
sbb
lock
cmp
mov
stos
cmpsl
std
pushf
push
xor
and
mov
mov
fnstsw
push
test
push
inc
andb
add
xor
xor
mov
fistpll
push
das
icebp
jo
data16
pop
out
ljmp
andl
adc
cld
cmp
cmc
data16
addr16
aam
ljmp
dec
ja
add
aad
outsl
pop
scas
cmpl
les
push
mov
pop
add
jb
int3
subw
mov
repz
mov
add
dec
leave
repnz
inc
mov
cmp
lods
xor
inc
push
shlb
xlat
adc
cmp
ljmp
jge
adc
push
jl
mul
xor
adc
or
stc
fwait
mov
imul
pop
xchg
sub
loop
xchg
push
das
aas
sbb
dec
lcall
lods
int3
stos
push
pop
lret
mov
sub
sub
inc
inc
add
mov
mov
icebp
jl
add
dec
pop
or
int
cmpsl
xchg
hlt
jmp
jns
out
pop
inc
jbe
enter
rcrb
dec
jae
fidivrs
mov
jl
stos
sar
mov
testl
pop
xchg
movsb
out
repnz
icebp
lcall
jl
in
jne
frstor
loopne
xchg
jbe
cmpl
jmp
pop
xchg
xchg
shrl
int3
out
into
mov
stos
dec
add
inc
fs
stos
xchg
and
inc
or
mov
xchg
fmull
cmc
inc
jae
nop
fs
pop
or
or
sub
mov
sbb
aad
jb
shrb
xchg
and
faddl
cmpsb
pop
ja
ss
inc
xchg
jl
mov
push
xchg
js
imul
ja
jne
fsts
xchg
data16
inc
outsl
jb
frstpm(287
mov
call
mov
pop
jl
outsb
jbe
or
and
sub
inc
shll
inc
sti
xchg
inc
movsl
mov
push
cmpsb
andl
repz
ss
cli
fiaddl
dec
mov
or
inc
inc
mov
mov
aas
xor
inc
scas
mov
cmp
add
push
jo
jno
pop
push
and
cld
cmovo
inc
ja
xor
cs
and
dec
into
clc
and
sti
push
mov
fisubl
daa
xlat
xor
xor
sub
sbb
js
pop
cmpsl
fdivrl
jnp
add
xlat
jbe
push
in
stos
pop
clc
in
imul
imul
ret
dec
inc
push
shrl
outsl
xor
sub
xor
aaa
xchg
stos
xchg
scas
xlat
cmp
cld
push
fs
aad
out
cli
insl
aam
movsl
mov
sbb
shll
repnz
sub
std
int
sub
mov
icebp
or
sahf
jecxz
divb
cmpsb
or
xchg
gs
jno
pop
dec
testl
pushf
shlb
rclb
fs
stc
insl
adc
ret
inc
mov
fidivrl
out
mov
adc
cmp
leave
sub
and
dec
scas
cwtl
insb
ja
xlat
mov
outsl
arpl
js
or
gs
pop
lea
shrb
inc
jae
and
outsl
inc
mov
imull
lret
lock
leave
or
ss
jns
mov
into
ret
xchg
jge
mov
mov
add
or
cmp
cmp
or
and
ja
pop
and
loope
daa
sub
push
or
pop
dec
lea
mov
inc
lahf
push
jnp
in
inc
sub
mov
movsb
incl
imul
loopne
cmp
fs
outsl
add
pop
adcl
mov
add
bound
dec
push
mov
mov
sub
popa
ja
xor
xchg
xchg
lret
rcrl
lret
scas
imul
fadd
shll
dec
add
inc
jb
jmp
adc
out
and
dec
inc
sbb
xor
adc
nop
cmp
inc
shll
dec
jnp
add
les
mov
iret
cmp
mov
xlat
outsb
xchg
fsubrl
lds
push
aas
push
idiv
inc
lock
das
test
repz
jge
xchg
imulb
mov
xor
or
outsb
mov
std
sub
sub
mov
cmp
push
js
loope
popf
mov
sub
mov
sti
or
inc
pusha
sbb
or
repz
push
jp
or
stos
ja
dec
rclb
and
mov
insl
stc
mov
jne
add
dec
mov
jne
int3
ret
arpl
inc
gs
xor
or
cmpsl
out
cmp
ss
xchg
ret
shl
inc
scas
scas
adc
mov
faddl
sub
pop
cwtl
ljmp
inc
push
xchg
cmp
pop
pushf
lea
lret
aas
sub
jmp
nop
fwait
dec
popf
std
test
or
xchg
mov
testl
add
call
data16
in
lahf
ja
or
sti
popa
pop
idiv
fs
pop
jge
test
sbb
outsl
loopne
sbb
and
fisttpl
mov
cmpb
negl
push
mov
pushf
leave
sub
or
jp
and
mov
xchg
mov
lret
add
pop
xchg
mov
outsb
pop
xlat
js
pop
cmpsl
add
and
jae
xchg
mov
adc
jno
sub
or
add
popf
mov
adc
inc
xchg
nop
inc
aas
in
int3
dec
jge
fpatan
mov
push
xor
jbe
iret
out
sbb
push
jo
fbstp
movsb
push
mov
sub
lods
adc
decl
mov
xchg
idivl
addr16
lds
hlt
push
rol
incl
call
xchg
repnz
sarl
adc
push
fcompl
pop
aad
fiadds
or
orb
mov
xorb
mov
cmpsb
imul
sub
cld
add
fxtract
and
ja
sub
inc
popa
aas
sbb
adc
mov
xchg
dec
or
gs
aad
inc
push
xchg
mov
call
shr
push
shl
nop
in
pop
jg
cmpsl
mov
sbb
arpl
int3
pop
aas
inc
test
jge
jb
inc
testl
adc
std
jmp
insb
loop
ss
lret
into
idivb
push
popa
hlt
data16
sahf
hlt
ljmp
test
das
pop
xchg
shr
aaa
sbb
je
ljmp
dec
dec
jle
adcb
into
adc
les
cmp
mov
or
lods
cmp
testl
movb
repnz
xor
cmp
jbe
push
push
push
sarl
add
outsl
cmpsl
jbe
and
daa
jnp
mov
shll
xchg
cmpsl
push
sbb
add
hlt
stos
or
movsl
fiadds
ds
sarl
imul
iret
add
sbb
cli
aas
adc
pop
add
dec
les
adc
inc
movsl
inc
push
rep
and
jmp
or
pop
jo
push
cmp
push
rorl
outsb
xor
std
sbb
addr16
in
mov
out
mov
es
push
and
cwtl
rcll
sub
pop
int3
icebp
jmp
jmp
in
cwtl
fsubrs
add
lods
popa
fldt
loope
clc
fs
out
repnz
add
pop
lea
insb
push
jns
mov
pop
loope
jae
push
sub
jno
jno
cmpsl
insl
xor
pop
sbbb
jae
mov
adc
roll
adc
out
xchg
push
daa
xor
loope
sbb
push
fwait
in
dec
aas
mov
xchg
dec
cmp
fs
int
push
iretw
stos
cld
movsb
test
bound
jae
out
jae
inc
mov
pop
push
lcall
inc
add
dec
jne
xchg
mov
lock
bound
jne
shr
and
inc
repnz
sbbb
jb
jo
xchg
add
sahf
fnsave
push
rclb
pusha
sahf
pop
fiadds
repnz
shrb
loop
mov
add
cmpsl
mov
orl
dec
jo
out
push
dec
xchg
push
incb
in
les
or
mov
iret
adc
inc
xchg
and
bound
lret
movsb
std
xor
push
scas
and
sub
imul
xchg
scas
outsb
and
add
adcl
scas
push
add
icebp
sbb
int
xor
aas
inc
jp
xor
or
pop
mov
xchg
cmpsb
inc
sub
js
lret
cmp
pop
enter
fstpt
xor
dec
fstp
hlt
shlb
cmp
push
jge
and
inc
ret
in
aam
mov
sub
ja
mov
loop
scas
mov
je
cld
loop
add
dec
sbb
push
cmpsl
lahf
aaa
sub
orl
popa
push
sub
xchg
in
xor
mov
mov
xor
nop
and
mov
inc
xchg
mov
cmpsl
xorl
sbb
daa
fimull
insl
idiv
xchg
lret
mov
loope
lock
and
xchg
in
movsb
push
pop
mov
and
lahf
shrl
xchg
cmp
mov
inc
xor
jo
out
jae
testl
push
mov
nop
jecxz
cmpsb
pusha
xchg
movntps
stc
mov
pusha
mov
js
xchg
mov
pop
movl
test
adc
push
cltd
mov
aas
sbb
push
xlat
cmp
cmp
mov
js
jb
cld
pop
pop
pusha
xor
inc
pop
inc
movsl
lds
jl
jns
out
in
sub
lods
add
sbb
outsb
sbb
outsl
jmp
and
out
lret
add
mov
push
das
adc
pop
dec
mov
jae
arpl
mov
mov
outsl
ljmp
and
add
roll
les
dec
into
xor
sub
fmuls
roll
mov
pusha
jl
popf
sub
mov
cmp
stos
lcall
pop
xchg
loope
pop
mov
mov
fsts
cmp
into
jmp
and
iret
dec
test
cmp
cmc
ret
cli
jmp
lea
sbb
inc
jne
ds
push
aas
mov
jo
jle
jb
push
xor
stc
insl
das
dec
out
sbb
add
fs
imul
pop
push
adc
and
and
les
adc
jae
mov
dec
jne
push
cmp
outsl
ficoml
fstpl
scas
nop
mov
aam
clc
jns
xchg
mov
test
mov
push
or
cmp
and
inc
sub
stos
test
addr16
outsl
lcall
lods
adc
sahf
call
addl
cmp
lds
fisttpll
add
and
fistps
jl
fimull
or
mov
pop
insl
mov
xchg
loopne
push
insl
testb
inc
dec
in
les
pop
mov
mov
or
ficoms
outsb
pushf
mov
sbb
xor
test
ficompl
neg
adc
nop
shrl
mov
jp
dec
ficompl
cmpsb
xchg
sub
sub
movsb
test
pop
arpl
fldl
adc
out
and
add
mov
repnz
add
adcl
shrb
mov
into
sbb
icebp
insb
flds
cmp
push
sbb
mov
mov
in
andl
test
jo
inc
dec
pop
dec
or
sbb
or
dec
xchg
sti
add
jecxz
mov
icebp
es
imul
outsb
jb
aad
popl
jbe
in
mov
pop
sbb
xchg
ffreep
jmp
stos
lcall
iret
icebp
jge
outsb
cmpsb
pop
push
in
movsb
jnp
out
addb
push
call
jl
inc
inc
shl
rcrb
mov
mov
ds
push
sbb
and
pop
cmp
jae
cmp
jae
sbb
inc
stc
mov
pop
imul
inc
nop
lahf
into
rcl
shlb
ds
in
and
inc
lods
fdivl
inc
test
xchg
sub
push
cmp
and
ja
incl
int3
mov
outsl
movsb
push
jnp
jae
loopne
cmc
add
loope
movsl
lock
add
test
push
inc
pusha
inc
fld
mov
sbb
xor
int
cmp
xor
jnp
loop
mov
pop
or
aas
movsb
je
lock
pop
shl
ret
jnp
insb
xchg
fstl
jno
jo
mov
mov
imul
test
movsb
or
pusha
sbb
xlat
jle
mov
jmp
insl
inc
movsb
push
inc
je
push
out
jae
dec
xor
cmp
fbstp
adc
mov
lock
shll
or
mov
inc
dec
xchg
lea
jno
xor
shrl
test
dec
dec
cmp
aam
int3
adc
or
out
repz
jne
hlt
dec
fildl
daa
imul
pushaw
adc
and
or
outsl
gs
test
and
movsb
mov
mov
inc
popa
clc
pop
cmp
pop
push
andb
sbbl
ret
mov
out
mov
cmp
jl
outsl
pop
push
mov
lds
sbb
insl
or
out
push
je
sbb
ret
sbb
add
lret
xor
pop
repz
ret
push
cmp
cli
jne
ficoml
sub
cmp
sub
fwait
mov
jmp
rorb
and
and
repnz
mov
fwait
jns
pop
sbb
lds
scas
ret
jmp
insl
ret
jb
pop
mov
cmpb
mov
shll
popa
mulb
dec
sub
rcr
dec
xor
stos
hlt
neg
sub
mov
aam
cmp
stos
aam
lods
lock
scas
lret
ja
lds
and
sbb
add
push
cmp
xlat
xchg
or
inc
scas
or
aad
sub
xchg
aad
fstp
fstps
or
arpl
xchg
pop
lock
scas
sarl
mov
jg
mov
aas
sub
filds
pop
stos
mov
pushf
and
imulb
pop
sahf
and
mov
ret
dec
hlt
shrl
jb
mov
outsl
mov
push
xchg
sbb
mov
scas
jecxz
mov
mov
data16
lods
jb
ja
push
adc
aaa
mov
or
cmp
imul
outsb
push
and
mov
outsb
iret
jbe
add
push
mov
in
inc
pop
mov
xchg
pop
dec
sub
fcomi
lods
cmpsb
push
add
fsts
mov
dec
and
pop
insb
bound
lcall
or
imulb
mov
and
es
pop
jne
mov
cmp
mov
popf
in
jecxz
leave
xlat
cmc
xor
out
enter
add
push
mov
gs
movsl
mov
cltd
test
call
fimuls
or
push
ljmp
daa
dec
dec
inc
jp
das
push
push
mov
imul
stos
aad
or
add
ret
rcrb
mov
pop
insl
sub
out
push
pusha
ret
sti
mov
xchg
adc
out
pavgw
fldt
cmp
stos
sar
fistl
xor
dec
add
mov
push
pop
and
inc
dec
sub
jmp
cmpsl
int3
mov
push
jns
mov
int
xchg
rcr
sub
cmpsb
inc
icebp
mov
mov
pop
int
adc
mov
add
movsb
les
dec
adc
lds
push
lods
jne
test
cltd
out
mov
out
rorl
xlat
xor
push
call
pop
xchg
je
jle
sub
mov
mov
popa
int
dec
loope
adc
mov
imul
push
shr
dec
pop
push
cmovs
dec
and
sub
jnp
adc
aas
push
mov
inc
xor
jl
lods
push
jle
sbb
ljmp
clc
ss
adc
push
dec
xchg
mov
jg
into
add
lret
jns
sub
xor
inc
dec
addl
sub
and
testb
mov
add
or
out
dec
roll
inc
test
test
out
mov
stc
jge
jns
jg
jno
cmp
or
nop
jnp
or
and
pushf
xor
mov
cs
jle
sub
stos
or
mulb
inc
mov
loop
push
jbe
das
xchg
mov
sub
adc
mov
cvtdq2ps
xor
fsubr
ret
inc
ljmp
or
xor
cld
jae
xchg
push
std
lret
add
push
inc
add
or
adc
adc
jle
adc
mov
in
add
pop
dec
cli
dec
fisubs
adc
jmp
mov
xchg
test
or
loop
mov
xchg
push
stc
and
lret
cli
enter
in
push
jns
aas
or
adc
gs
mulb
ret
mov
insl
enter
scas
scas
or
lahf
movsb
iret
stos
leave
subb
neg
mov
outsl
jnp
sti
wrmsr
mov
xorl
call
lds
mov
in
mov
jne
dec
lds
cmp
loop
ret
pop
mov
outsl
stos
xor
fisttps
gs
adc
lock
insb
mov
lea
leave
push
fsubrp
sub
mov
cld
int3
bound
add
sub
fstpt
mov
xchg
cmp
xchg
adc
adc
andb
mov
cmc
pop
mov
out
repz
rclb
or
sbb
cmp
imul
or
pop
clc
into
fiadds
sub
inc
mov
cmpsb
test
fldt
or
icebp
jbe
pusha
fyl2xp1
jp
xchg
fwait
or
push
popf
dec
pop
mov
aaa
jae
arpl
addr16
ja
xchg
mov
jecxz
shl
ret
divl
pop
and
adc
add
jae
arpl
addr16
ja
xchg
mov
jecxz
shl
ret
divl
add
sbb
aas
add
jae
arpl
arpl
mov
mov
mov
shr
rcll
jecxz
repz
add
inc
arpl
out
mov
js
cmp
test
cmp
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
lret
and
adc
add
stc
add
jno
inc
pop
decl
jnp
push
sbb
or
cmp
sub
lret
and
adc
add
push
stos
cmp
dec
mov
fistpl
sub
lret
and
adc
add
push
stos
inc
pop
mov
adcb
imul
movsl
fs
mov
scas
push
push
push
add
push
lret
test
repnz
stos
stc
pop
mov
icebp
push
das
sahf
xchg
bound
cmpsl
dec
adc
fs
in
pop
push
dec
cmpsb
vdivss
or
insb
shll
sub
jnp
pop
adc
loope
mov
pop
sub
enter
in
loope
push
sub
je
add
mov
cmp
pop
test
dec
pop
mov
inc
sub
inc
adc
ret
call
mov
sbb
test
hlt
loope
shrl
aas
es
lods
cmp
pusha
inc
pop
jo
test
or
mov
xchg
dec
icebp
xchg
pop
xor
and
adc
add
push
stos
inc
pop
mov
mov
sbb
or
cmp
sub
xchg
adc
or
pop
test
mov
sbb
insl
mov
je
add
cmp
and
jns
imul
lahf
gs
xchg
mov
arpl
popa
mov
mov
mov
sbb
or
cmp
sub
lret
and
adc
add
push
stos
inc
pop
mov
mov
sbb
or
cmp
sub
out
dec
data16
vpermilpd
sub
jp
js
push
in
das
jp
jmp
and
mov
inc
push
cmp
mov
mov
mov
add
mov
insl
adc
ljmp
scas
push
lea
dec
hlt
loop
loopne
sub
pop
leave
or
mov
jnp
sbb
xor
push
dec
adc
lahf
inc
mov
testl
cmp
outsl
mov
insl
or
in
sub
mov
outsb
aad
mov
pusha
xchg
and
push
jb
popf
mov
mov
in
sub
jo
push
mov
xchg
or
ds
cmp
sbbb
enter
ds
jg
fwait
or
adc
mov
xchg
ret
ret
cld
pop
insb
xor
test
arpl
mov
inc
and
xor
sbb
js
ficoms
adc
dec
loop
and
inc
or
scas
mov
push
xorl
je
lds
inc
cmpsl
loope
xchg
aad
jnp
mov
sarb
xor
fdivrs
mov
aam
insb
clc
aas
push
inc
add
cmp
movsb
add
fiaddl
adc
cmc
push
push
push
xchg
mov
dec
xor
xor
imul
jp
movsl
push
pop
arpl
add
jae
ror
cltd
into
and
popf
and
jmp
cs
inc
mov
in
pop
incb
add
mov
out
add
js
fistl
test
outsl
gs
pop
fcomi
push
sub
cwtl
and
cmpsl
scas
fldcw
mov
repz
ja
push
add
cmpsl
stos
jge
xor
cwtl
dec
clc
ss
pop
cld
hlt
divb
or
or
push
cmpsl
popa
std
mov
or
sub
cli
stc
adc
insl
inc
pop
and
xlat
add
hlt
pop
cmp
sbb
fcmovu
or
addl
mov
in
mov
xor
pop
xor
and
mov
inc
mov
mov
pop
mov
cmpsl
cmp
mov
and
lea
lret
add
add
cmp
rorb
pop
ljmp
xchg
xlat
imul
cs
sbb
or
xor
mov
js
push
cld
int
out
loopne
mov
in
addr16
jae
xchg
fwait
insb
aaa
insl
xlat
fidivs
sahf
mov
icebp
test
mov
jge
jnp
or
adc
mov
jmp
cmp
test
and
cmp
push
add
dec
mov
leave
cmp
sub
mov
dec
ds
outsb
jae
cmp
in
sbb
jnp
outsb
mov
mov
push
xor
scas
adc
insl
neg
daa
jns
icebp
scas
inc
out
or
cmp
jnp
mov
mov
repz
mull
lds
mov
pop
mov
out
in
ror
ljmp
loop
push
psubusb
add
jecxz
dec
dec
mov
lret
cmp
icebp
push
mov
aam
or
test
xorb
add
mov
xor
xor
push
push
ds
or
dec
mov
ret
out
mov
rcl
aas
stos
jnp
call
sbb
push
adc
push
cli
stos
sbb
loopne
cmp
movsb
iret
pop
cmp
insb
mov
cli
movsb
lods
out
mov
cwtl
test
dec
xchg
inc
clc
mov
xor
jb
push
loop
xchg
mov
jg
jecxz
imul
movsl
in
mov
sti
clc
cmpsl
scas
push
js
mov
in
mov
pusha
and
jp
pop
or
xor
addr16
roll
les
pushf
pop
sub
gs
mov
cmp
pop
sub
popf
fdivrl
xor
in
and
sar
cmp
sub
push
inc
jmp
in
popa
stos
test
push
push
das
das
xchg
loopne
popf
fmull
movsl
lcall
das
sub
sahf
add
outsb
sbb
pop
test
jle
sub
dec
rclb
in
push
ret
pop
stos
adc
jecxz
lret
jne
popa
pushf
ljmp
sub
je
inc
push
imul
push
jg
rcll
xor
mov
jge
xlat
aam
lcall
imul
push
cmpsl
xchg
inc
insb
cltd
inc
arpl
xor
inc
fisubrs
pop
test
pusha
bound
int
orb
shll
sarl
inc
ret
shl
inc
rcrl
sub
adc
add
xchg
and
sarb
test
or
les
inc
ss
notl
push
movsl
and
rcr
fildll
imul
mov
enter
mov
shll
cmp
imul
negb
insb
out
jp
ja
pop
xchg
push
int
cmp
xchg
int
test
mov
pop
in
nop
popa
xchg
aam
les
sbb
push
scas
mov
mov
inc
or
lds
cld
cmp
push
mov
in
jmp
scas
shl
in
sti
jl
pop
cld
pop
int
lods
or
and
movsb
sub
subl
repz
je
pop
fs
rolb
jl
decl
pushf
xor
mov
cmpsb
pop
lahf
test
xlat
fs
mov
repnz
jnp
shll
sub
mov
push
shll
fldt
fsts
xchg
mov
test
int
enter
cmp
les
lcall
cmp
jbe
js
cmpl
pop
pop
ljmp
push
into
inc
int
jns
jo
cmc
scas
and
lock
pop
popa
test
jmp
and
mov
adc
cli
fists
mov
jne
mov
adc
unpcklps
xchg
shr
mov
repz
outsb
jecxz
shr
xchg
push
adc
addr16
add
imul
test
xchg
cmp
xchg
pop
aad
mov
xor
es
scas
js
bound
mov
shl
fldenv
cmpsb
xchg
test
sbb
test
sti
inc
or
rcr
jl
rcrl
ds
inc
loope
xchg
pop
cmpl
push
cmpsl
iret
xchg
je
adc
or
xor
daa
out
dec
push
cwtl
mov
rorl
pop
or
mov
add
jl
xchg
dec
mov
lcall
out
add
push
cmp
enter
mov
mov
add
sti
jge
ds
les
xlat
cld
xor
shr
mov
fsubr
mov
fs
lcall
xchg
into
push
mov
out
lret
sbb
mov
pop
or
pop
insl
fwait
nop
sbbb
popa
clc
std
cs
mov
xchg
sub
push
cmp
rorl
popl
and
pop
dec
orb
dec
xlat
int
pushf
loop
gs
mov
or
xchg
sub
or
in
rclb
mov
mov
fsubrp
adc
movsb
push
mov
pop
inc
mov
ljmp
add
or
adc
stos
jne
sbb
jp
subl
ds
lret
fucompp
add
int
cwtl
addb
xor
cmpb
add
cmp
out
pop
inc
dec
cwtl
xor
and
shrb
cs
daa
stos
pop
scas
push
decb
loope
sbb
jo
mov
stos
ja
add
push
dec
mov
insl
rcrl
loope
sbbl
add
inc
xor
push
sub
inc
add
sarl
dec
stos
xor
cli
cmp
icebp
jle
cmp
pop
xchg
les
mov
gs
jno
mov
and
push
adc
mul
movsl
dec
aam
lods
push
aam
mov
jns
xchg
jo
push
ljmp
popa
in
cmp
push
in
mov
jne
mov
dec
test
mov
lahf
dec
aas
std
scas
or
pusha
mov
xchg
push
sub
xorb
jmp
movsb
xchg
fmulp
dec
sbb
enter
mov
mov
xchg
sub
jp
mov
clc
movl
pop
ljmp
sub
inc
and
pop
xor
jmp
cmp
push
mov
bound
pop
fisttps
add
jge
jns
or
jne
cmp
fwait
out
cmp
push
sbbb
dec
xchg
lret
push
ficoml
aam
xor
dec
leave
arpl
out
fiadds
scas
xor
sbb
subl
jecxz
les
and
shll
mov
pop
pop
test
and
pop
dec
popf
and
dec
std
inc
cmp
bound
xor
fisubrl
xchg
add
dec
mov
bound
or
repz
inc
mov
inc
or
pop
inc
lahf
adc
jae
xchg
pusha
rcll
xchg
mov
js
lret
and
jl
shrl
mov
sub
ret
inc
ret
push
je
pop
out
cmpsb
inc
mov
imul
jp
dec
les
push
mov
aas
adc
xor
enter
pop
jns
enter
xor
cwtl
add
xchg
stos
ljmp
rorl
dec
lea
xchg
adc
sbbl
cmpsb
mov
mov
iret
fucom
and
sti
push
xchg
push
mov
out
dec
xlat
xchg
adc
sbb
dec
test
xchg
cltd
aas
out
sub
outsb
pop
and
cmpsl
xor
fs
fs
sub
and
test
out
pop
or
cmp
xchg
in
movsl
mov
dec
pop
scas
jbe
cld
mov
xchg
mov
add
lret
add
jp
push
xlat
cmp
sti
andl
or
mov
mov
jecxz
aaa
push
je
lock
dec
push
xchg
jle
push
cs
out
push
out
dec
mov
lds
sahf
push
mov
out
xor
shll
push
lods
mov
jl
std
lret
lcall
stos
int
sub
insb
out
jnp
jb
jns
sbb
es
or
mov
insb
sbbl
pop
inc
xor
adc
aas
mov
cmp
ja
xchg
shll
jb
mov
roll
jmp
unpcklps
stos
inc
pushf
ret
pop
and
int3
je
arpl
dec
popa
pop
shlb
sbbb
mov
std
xchg
cs
adc
lods
std
je
movsl
arpl
add
sahf
cmp
ret
jp
push
push
cmp
mov
sarl
jmp
xor
outsb
ss
enter
ficompl
out
mov
add
popa
push
subl
sti
jo
jne
lea
stc
lret
jl
stc
gs
nop
pop
dec
push
icebp
enter
loopne
enter
mov
mov
push
or
ss
stos
test
sbb
xchg
ret
push
pusha
ficoms
nop
out
addr16
cmpsb
rclb
incb
out
enter
pushf
pop
cli
mov
cmc
in
bound
outsb
mov
or
dec
pusha
xor
cltd
jns
pop
stos
dec
movsl
mov
dec
rcrl
call
fmuls
xor
das
mov
cmp
pushf
jl
je
mov
push
subb
aad
scas
cmp
xchg
pop
xchg
xchg
mov
loop
cmc
and
in
std
pusha
sub
mov
stos
and
jle
pop
in
and
popf
or
inc
std
arpl
hlt
adc
outsl
dec
js
test
pop
sub
mov
adc
movsb
call
push
ss
hlt
sub
and
outsl
jg
or
xor
call
xchg
cld
in
mov
inc
jp
adc
in
loope
fprem
popl
mov
mov
test
idivl
sbb
orb
bound
divl
jnp
minps
jb
sub
adc
mov
xchg
rcl
orb
cltd
jno
jae
in
sbb
mov
lods
test
push
lea
cmpsl
xchg
fisubl
inc
pop
and
xchg
rdpmc
clc
xor
es
and
fdivrs
lcall
inc
ljmp
js
xchg
insb
subl
sbb
and
xchg
and
mov
fmulp
leave
sar
cmp
inc
stos
ret
pusha
in
or
mov
clc
pop
pop
lods
add
in
push
dec
popf
or
sbb
sub
dec
sbb
dec
sub
mov
pop
test
xchg
or
dec
xor
cmpsl
notl
sbb
sahf
adc
arpl
cmpsl
mov
mov
xchg
out
push
lods
mov
xorl
pop
pop
ret
or
sahf
addb
mov
fldl2e
push
or
mov
daa
cltd
pop
repnz
mov
cmp
inc
mov
mov
sbb
dec
stos
pop
ficompl
jl
std
aad
push
int3
sbb
add
sbb
sbb
dec
test
lcall
sub
xor
pop
pop
sahf
mov
shll
pop
adc
inc
add
ljmp
lret
jecxz
fsts
adc
fldl2e
ror
jb
ja
lds
pop
cmpsl
clc
mov
add
xorb
pop
mov
inc
shrl
xchg
xchg
pop
push
addr16
shlb
cli
mov
inc
jge
mov
pop
pop
xchg
xchg
push
push
cld
lds
push
popa
out
sub
push
into
xchg
lcall
mov
add
and
enter
clc
es
pop
test
mov
in
out
das
pop
inc
sub
xchg
sti
pop
fldl
jbe
lods
xor
test
imul
push
mov
roll
test
push
ljmp
and
nop
xchg
shll
shrb
ret
std
addr16
push
cmp
outsl
rolb
inc
icebp
inc
sbb
fsubs
ficomps
fcompl
fsts
jp
xor
sarb
xor
stos
ret
pusha
push
test
je
jbe
pop
mov
pop
fs
adc
xchg
dec
pop
leave
adc
dec
jg
in
push
nop
push
mov
ljmp
fisubs
dec
push
adc
out
fldl
jl
mov
shl
sub
lret
push
pop
push
push
or
repz
push
adc
inc
in
mulb
mov
pop
pop
mov
xchg
movsb
xor
fisubrl
ret
out
outsl
dec
add
sbb
insl
loop
into
test
sti
ret
mov
clc
cmp
leave
inc
loop
repnz
mov
std
movsb
dec
lock
dec
add
movsl
cli
cmp
js
sti
and
out
pop
ljmp
out
or
addr16
outsl
add
lea
xlat
pop
pop
jp
clc
add
sub
int3
lea
lods
cmc
sahf
aad
dec
iret
xorb
lods
mov
or
test
lds
sahf
sarb
xchg
add
leave
call
mov
jecxz
cmp
stos
mov
jbe
scas
fmull
test
stos
dec
mov
movsb
pop
xchg
or
pop
or
inc
inc
and
aad
sbbl
dec
or
dec
stc
ljmp
es
mov
xor
xchg
xlat
inc
jb
jne
jmp
test
imul
cmp
stos
sbb
inc
lret
push
cwtl
out
test
mov
cs
mov
roll
sbb
ret
ja
xor
mov
stos
jb
mov
aad
int3
sbb
sub
mov
and
aad
cmp
divl
sbb
outsl
mov
mov
out
mov
xchg
or
cmpb
loopne
pop
stc
dec
xchg
mov
das
mov
ljmp
aad
or
std
and
add
test
push
lds
sub
sbb
cmp
jmp
jmp
jae
arpl
cmpsl
aad
mov
pusha
sub
mov
div
inc
push
dec
pop
incl
mul
and
xchg
and
mov
push
pop
icebp
mov
ljmp
lods
xor
cmp
js
push
call
jns
out
jecxz
cmp
mov
int3
test
test
cmp
xor
mov
rorb
ficoml
lods
xor
xchg
xchg
cmp
push
in
mov
fldl
mov
lock
roll
and
je
lock
cmp
bound
push
or
adc
and
fcmove
pop
out
mov
cli
mov
aam
out
test
xlat
xchg
lds
jmp
push
iret
jl
stc
mov
add
jle
sub
add
pop
mov
sarl
fsubr
inc
xor
fisttpll
push
and
sar
xchg
jp
bnd
iret
adc
xchg
aaa
repnz
inc
push
sub
mov
push
or
jle
scas
push
xor
inc
adc
pop
pop
adc
cmpsb
push
add
das
sbb
jl
dec
mov
inc
aam
and
or
sub
push
inc
mov
fwait
sub
rcll
xor
jl
pushf
sti
pop
or
out
mov
test
jno
dec
imul
xor
jo
mov
das
fisubrl
or
lods
jns
pop
call
mov
dec
stos
stc
into
dec
je
scas
push
or
movsb
leave
test
stc
popa
sub
call
sbb
fcmovu
sub
fistl
inc
mov
dec
and
push
mov
into
mov
test
pop
jecxz
pop
test
xor
gs
mov
data16
mov
fsubrl
cld
adc
rcr
jb
dec
cmp
jb
pop
and
test
mov
aad
outsb
and
jbe
cmovnp
mov
mov
stos
cwtl
xchg
mov
test
mov
sub
jb
mov
test
sbb
int3
sbb
or
movsb
outsl
popa
jae
mov
cmp
mov
scas
imul
adc
add
lods
ret
stos
xorb
sub
out
mov
fsubr
shrb
lret
push
rolb
xor
mov
mov
mov
fs
pop
orb
pop
mov
lea
add
sbb
ja
loope
repz
sub
mov
mov
jl
inc
imul
pop
mov
fisubrs
out
jno
mov
dec
js
sub
add
jo
adcb
fsubrp
push
sub
mov
pop
notb
sbbb
fsubrl
out
sarb
xchg
jmp
xor
mov
or
xchg
mov
aad
xchg
mov
fwait
je
mov
jecxz
rcrl
pop
sbb
push
pop
xchg
xlat
out
mov
cmp
popa
test
test
aam
test
repz
cmp
je
mov
shl
jecxz
sub
jg
sub
cmp
mov
lea
fcoms
outsb
cmpl
aas
shrl
mov
iret
mov
and
in
mov
outsl
in
dec
push
inc
out
mov
aaa
sub
or
jb
inc
xchg
mov
xchg
jecxz
loopne
add
jbe
inc
push
test
inc
cmp
adc
mov
loope
or
push
ret
inc
push
mov
ljmp
ljmp
faddl
fsubr
push
adc
mov
sets
ret
fwait
add
and
mov
roll
repz
dec
addr16
push
add
mov
xor
ret
fildl
adc
scas
push
push
cmpsl
out
xchg
mov
in
int
adc
scas
pop
frstor
pop
popa
ja
sbb
sbb
imul
push
test
xchg
jge
fmulp
mov
push
adc
leave
movsl
add
mov
jp
mov
shl
outsb
stos
in
or
push
push
daa
and
jg
xchg
lcall
mov
mov
add
out
stc
sub
jne
shlb
dec
inc
adc
sub
lds
imul
sbb
add
lea
adc
jmp
movsl
and
int3
inc
fcmovnb
bound
mov
faddl
mov
xchg
dec
pop
mov
push
sbb
in
adc
pop
sbb
push
or
add
xchg
push
xor
and
push
outsl
mov
lock
push
pop
addr16
pop
sub
icebp
call
fists
js
lret
xchg
shl
shll
mov
cli
mov
andl
clc
sbb
lds
loopne
or
sub
jnp
lret
mov
test
ja
xchg
push
or
adc
std
mov
mov
dec
dec
adc
dec
roll
cld
fidivs
sbb
fwait
scas
movsb
push
cmp
ret
sbb
cli
adc
add
push
stos
inc
pop
mov
mov
sbb
or
cmp
sub
lret
and
adc
add
push
stos
inc
pop
mov
mov
sbb
or
cmp
sub
dec
and
jmp
sbb
popa
mov
mov
mov
sbb
or
cmp
sub
lret
and
adc
add
push
stos
inc
pop
mov
or
xchg
imul
jns
push
dec
cs
ds
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
sub
cmp
or
sbb
push
mov
mov
clc
fcmovne
jmp
cmp
sub
cmp
js
dec
imul
jmp
cmpsb
clc
fxch
test
lret
add
gs
xchg
int3
push
fwait
cli
loopne
std
lret
mov
inc
or
pop
jno
insb
jle
rclb
mov
stc
lods
xor
fsubl
mov
test
clc
movsl
lds
aad
pop
lods
int3
leave
or
enter
call
jge
jge
push
pop
mov
iret
imul
add
sbb
and
xor
jmp
in
hlt
leave
push
or
cmp
adcl
jbe
leave
or
inc
pop
enter
add
stos
xlat
sbb
icebp
sub
mov
ret
popa
sarl
fidivrl
mov
lcall
xlat
leave
movsl
movsb
or
out
xchg
push
xchg
fidivl
mov
gs
jmp
outsb
jmp
mov
pop
dec
mov
stc
outsb
mov
mov
repnz
jmp
dec
sbb
pop
pop
cmp
pop
sbb
iret
jmp
in
rcrb
test
cwtl
gs
pop
pop
jp
jns
add
sbb
adc
mov
loopne
xchg
cltd
xchg
xchg
mov
pop
push
pop
imul
pop
dec
imul
mov
clc
fxch
jmp
cmp
or
sbb
push
imul
mov
clc
fxch
jmp
sahf
into
lret
adc
es
cli
xor
dec
dec
icebp
jmp
mov
jne
sbb
adc
into
loop
pop
stos
pusha
nop
adc
loopne
out
enter
cmp
ss
push
sbb
add
jno
and
xchg
mov
fnstenv
cld
mov
mov
adc
mov
rol
mov
xchg
mov
dec
jmp
mov
xlat
divb
cmp
out
test
inc
movsl
xchg
aad
in
rcr
xor
ljmp
sahf
outsl
addr16
negb
je
cmpsl
pusha
dec
cld
xchg
mov
or
or
push
cs
lcall
mov
test
int3
jmp
cmp
aaa
mov
sbb
mov
hlt
add
jae
dec
lcall
push
int3
dec
dec
push
int3
xor
ljmp
out
cmpsl
cmp
aam
push
ret
cmc
je
cmp
adcl
popa
jp
in
test
shl
popf
les
pushl
adc
xchg
repz
cmp
xor
arpl
mov
push
xchg
popf
dec
shll
test
sub
scas
or
xor
mov
sbb
push
or
or
mov
dec
and
cmp
adc
out
cltd
ret
pop
jne
ret
les
fstpt
cmp
shrb
outsl
fildll
xchg
pop
mov
fcmovnu
sub
mov
cmp
add
dec
adc
add
imul
inc
fwait
repz
lret
or
adc
mov
and
pop
jp
mov
lock
cmp
nop
inc
jmp
jmp
adc
cs
mov
pop
out
dec
lret
jae
repnz
xor
std
cmpsb
cmp
dec
or
and
fdivrl
cmp
cmp
es
sahf
test
hlt
jo
es
ss
lret
and
pop
jbe
and
out
comiss
mov
in
mov
add
mov
mov
scas
fadds
rcl
or
ret
jne
lret
mov
test
out
adc
push
pushf
mov
sbb
inc
sti
push
lret
rcr
mov
test
pop
sub
xchg
mov
sahf
push
jo
dec
mov
xchg
xchg
iret
les
inc
je
int3
push
jb
cmc
and
sahf
xchg
or
sbb
repnz
jg
rcl
iret
sub
sarb
push
push
scas
and
pop
shrb
xor
das
rolb
test
dec
xchg
jp
adc
mov
sarl
addr16
xchg
in
jno
jmp
lret
cmp
sbb
push
mov
outsl
sub
sahf
popf
fnstsw
std
push
in
imul
sub
movzwl
movl
inc
ret
leave
mov
std
sbb
xlat
sbbl
lea
jg
xor
mov
mov
inc
adc
int
inc
cmpl
adc
add
pop
call
and
or
sub
sbb
shr
data16
rclb
or
jp
fimuls
rclb
and
clc
xchg
rorb
pop
aas
pop
add
xor
or
sbb
mov
adc
adc
pop
mov
sahf
sbb
xchg
adc
jge
lcall
dec
pop
dec
or
inc
aaa
cmp
mov
mov
mov
fcmovne
xchg
xchg
aaa
mov
or
jge
fstl
mov
cmp
push
inc
insl
pop
test
fmuls
xchg
jl
aad
sahf
and
movsb
mov
push
mov
inc
jecxz
out
pop
stc
test
mov
jne
inc
arpl
sub
xor
push
ja
out
scas
inc
call
int
push
cmp
mov
sbb
cmc
xor
dec
das
orb
insl
insb
lock
and
sub
mov
sbb
out
jnp
jge
pop
adc
and
mov
test
aad
add
push
lds
mov
mov
test
in
ret
mov
jp
jle
push
mov
sub
mov
loopne
lea
or
lahf
sub
jno
sub
pop
aam
test
cmp
sbbl
movsb
pop
in
jb
dec
mov
rorl
lcall
jnp
mov
adc
in
inc
sbb
jl
cmp
xchg
out
aas
cltd
fisubrl
js
std
jne
cwtl
int3
rcll
rol
sub
jae
push
add
and
popa
orl
mov
xchg
push
and
inc
iret
push
and
jbe
mov
in
lcall
adc
sbb
cmp
cli
les
cs
fldt
lds
pop
ret
inc
dec
mov
in
fwait
cvtps2pd
sub
les
push
enter
cmc
push
dec
adc
xchg
cmc
outsl
or
push
shrb
sub
pop
fwait
inc
jne
mov
lret
add
lock
mov
pop
push
jnp
outsb
sbb
and
jb
dec
jp
mov
sub
dec
sub
out
cmp
push
data16
shl
or
lahf
das
or
std
add
lea
adc
sbb
fstps
lahf
mov
pop
inc
inc
xor
decl
lret
mov
aas
repz
or
sbbl
mov
xor
cmp
xchg
cmpsb
outsb
mov
xchg
cmpl
cld
jo
add
sbb
sarl
adc
ljmp
lods
push
orl
out
lret
mov
int
lret
aaa
mov
outsb
add
in
std
fists
and
das
aad
es
cmp
fdivl
jmp
mov
ffree
lahf
js
pop
push
jnp
push
sahf
mov
add
scas
mov
daa
cmp
inc
lret
or
lret
mov
xorb
sbb
imul
lret
andb
aam
fmul
jnp
sbb
mov
adc
xchg
ror
or
mov
adc
pop
sbbb
cmp
inc
shld
push
scas
ret
jne
fidivrl
jo
ret
xchg
jecxz
in
xor
or
mov
adc
and
pop
cltd
cs
lds
jge
shlb
negb
sbb
inc
xor
dec
arpl
clc
flds
cmpsb
mov
sarb
add
push
clc
cmp
push
xchg
or
in
lock
cmp
mov
jl
xchg
outsb
cmp
push
icebp
adc
jp
jmp
dec
iret
jge
in
aas
stc
sbb
in
ret
push
jbe
xor
cmp
fldcw
push
movsl
cmc
adcb
and
jnp
out
mov
iret
mov
xchg
mov
fcmovnu
mov
lods
inc
lods
adc
cmp
sbb
or
rcll
dec
mov
push
xchg
arpl
cld
out
sbb
gs
and
cltd
push
pop
jecxz
jmp
inc
cwtl
push
xchg
inc
xchg
xchg
loope
mov
and
cltd
push
movq
xor
adc
in
adc
adcl
inc
pusha
and
sbb
adc
sub
lods
and
sub
int
jecxz
ds
push
cmp
lret
sbb
outsl
jae
icebp
enter
lcall
inc
mov
lret
adcl
dec
pop
fcoms
fcompl
lret
loopne
push
ljmp
pop
neg
test
stc
inc
jne
dec
out
sti
out
pop
lock
xchg
and
and
push
fildl
inc
jl
aad
ja
jmp
das
aad
repz
rorl
jecxz
or
push
fsubs
clc
and
sub
bound
inc
sub
ficomps
cmp
xor
dec
loopne
mov
arpl
xchg
or
and
add
mov
pop
inc
cmp
fwait
push
lds
and
test
gs
ds
aas
mov
cli
test
inc
sbb
xchg
mov
fisubrs
fiaddl
test
adc
xchg
pop
add
xchg
pshufw
pushl
icebp
mov
xor
or
sub
inc
cmp
je
push
cmp
inc
je
mov
sub
pop
xchg
xorl
push
xlat
jno
mov
inc
cmp
in
adc
in
fmuls
mov
xchg
aas
int3
cmp
cmp
ffree
call
cmpsl
aas
or
jns
adc
addb
jae
or
sbb
iret
jns
or
sub
cli
adc
shlb
int3
mov
mov
enter
inc
shufps
in
outsl
jl
push
lea
and
jb
ret
into
pop
ror
jns
mov
mov
and
mov
movsb
fcmovne
in
mov
repz
ds
leave
pop
aad
addr16
jge
jg
lea
orl
dec
imul
mov
push
dec
adc
cmp
push
int3
push
add
or
cs
pop
nop
dec
jle
add
xchg
push
shll
pop
push
repz
inc
maxps
ret
and
jle
int3
loope
push
test
mov
mov
or
dec
call
fldt
sub
sbbb
addps
pop
cli
in
sarb
sub
add
push
fmuls
leave
fucomip
das
xchg
xchg
stc
js
aaa
roll
fsubrl
ja
sbb
or
pop
add
sub
sbb
lock
sub
test
cld
mov
je
pop
popa
or
scas
test
mov
pop
test
test
hlt
cmp
sbb
rcrb
popa
push
xchg
clc
push
subl
cmp
insl
loop
test
je
mov
out
scas
or
push
xchg
cmp
repnz
ljmp
jnp
push
fisubrs
xchg
cmc
mov
sbb
sbb
mov
pushl
dec
mov
jno,pt
sahf
cmc
les
xlat
xchg
and
inc
rorl
lods
sub
or
in
and
push
and
sbb
shlb
jo
aaa
stos
mov
aaa
insb
push
cmpsb
cmp
adc
pop
icebp
bound
mov
sub
adc
leave
dec
inc
out
mov
mov
iret
outsb
cs
iret
ja
cs
jne
arpl
in
andb
push
xchg
jo
mov
loope
xlat
fnstcw
or
pop
lcall
pop
cmpsl
cmpsb
jo
pop
mov
dec
popa
loope
cmp
sbb
add
jae
test
push
lahf
lret
or
int3
and
fistpll
repnz
repnz
test
xchg
and
bound
xchg
es
ss
aas
cmpsl
sbb
in
pop
mov
dec
mov
inc
mov
adc
out
loope
ss
rcrb
sbb
xchg
in
mov
mov
jmp
aaa
inc
dec
mov
into
insl
push
clc
add
mov
std
dec
sbb
jecxz
repnz
movsb
push
addl
jo
mov
mov
push
test
stc
jnp
cmp
jae
pop
jns
jo
add
scas
fmul
mov
mov
push
test
xorb
es
hlt
inc
cmp
sahf
mov
jecxz
enter
movsb
adc
scas
mov
sub
mov
jl
repz
xchg
je
notl
test
imul
ljmp
push
jge
cmc
add
cs
dec
ja
or
sub
inc
roll
scas
xchg
out
lret
int3
cmc
fcompl
out
lret
and
cmp
pusha
imul
loopne
cmp
clc
add
sbb
push
jo
popf
imul
xchg
jnp
scas
pop
cld
push
lods
inc
loop
sbb
andb
xchg
popa
cmp
add
lret
cli
das
fmul
fwait
cmp
xchg
ret
cmpsb
xlat
and
sbb
sbb
insb
lods
int3
jnp
inc
jecxz
add
jge
movsl
dec
xchg
push
lods
and
fadd
mov
add
aaa
rcrl
loopne
add
push
lcall
repnz
repnz
cs
xor
inc
sbb
jae
jns
mov
cmp
out
dec
jo
addr16
jl
inc
sbb
dec
jne
cmp
aas
movsb
sbb
mov
addr16
cmpsl
xor
into
pop
sub
mov
pop
leave
mov
xor
or
mov
sub
adc
stos
lds
aad
nop
mov
nop
fidivrs
cmp
popl
jp
xchg
out
jbe
or
sti
or
jge
xlat
xor
cmp
jmp
scas
xchg
int
mov
push
imul
mov
xchg
jns
xchg
xlat
enter
imul
sbb
movsb
inc
push
dec
stos
xchg
dec
jle
andb
mov
and
aam
push
pop
imul
mov
push
and
xchg
stos
dec
cmpsl
mov
int3
into
add
jns
cmp
jno
jno
xchg
xchg
repnz
jae
insl
mov
and
aam
pop
pop
pop
sbb
insb
xchg
out
icebp
adcb
dec
ja
hlt
and
icebp
in
out
jns
fdivs
inc
pop
and
push
jns
dec
clc
fs
leave
cld
mov
mov
inc
in
and
cmpsb
lock
pushf
xlat
iret
dec
in
jo
adc
mov
stos
pop
mov
nop
popa
dec
pminsw
sub
jge
sub
pushf
stos
lret
in
fistps
adc
xor
cmp
add
aas
je
add
arpl
dec
mull
and
repz
mov
cmpsb
js
ret
popa
movsl
rcrb
push
out
mov
xchg
jo
inc
xchg
sub
xchg
mov
ret
push
mov
jae
filds
jge
fldcw
ret
dec
inc
jle
out
mov
jecxz
je
scas
sarl
lea
orb
xchg
adc
call
mov
jne
jmp
outsl
inc
rep
rcr
repnz
std
adc
jb
in
scas
pop
pop
pop
fldcw
mov
dec
sbb
inc
int
or
popf
jge
pop
in
jmp
dec
dec
adc
mov
aaa
js
adc
mov
aaa
loop
call
ret
pop
insl
mov
mov
adc
jp
or
fwait
xor
int
mov
xchg
enter
or
add
divb
pop
pop
jo
xchg
jno
cltd
out
out
xchg
movsl
in
sbb
lcall
iret
rolb
fwait
xor
and
sarb
loopne
out
cmc
mov
push
adc
or
mov
imull
xor
in
clc
aas
rcrl
lret
imul
ret
insb
popf
sarl
popa
lea
adc
shrb
sbb
pop
js
pushw
xor
adc
push
xchg
add
jmp
clc
imul
sbb
inc
xchg
dec
sbb
fs
jmp
mov
xchg
stos
cmpsl
mov
rcrl
fsubl
aas
in
aam
int
sti
xor
pop
xchg
mov
repz
pop
sub
inc
clc
pop
adc
xchg
hlt
mulb
add
fld
and
jge
loope
ret
out
pop
adc
cmp
daa
pop
or
call
lret
in
enter
adc
jne
das
test
fdivrs
pop
sub
je
mov
or
insb
push
int
mov
and
xchg
std
fstl
cmpsb
xchg
or
add
sahf
or
fidivrl
mov
dec
das
sub
mov
mov
pop
and
jbe
lcall
andl
mov
push
sbb
nopl
sub
gs
insl
hlt
push
mov
ficoml
incb
or
sbb
adc
mov
sub
and
pop
mov
cld
fs
jb
cmp
das
cmp
test
sbb
outsl
adc
fnstsw
and
mov
mov
into
xchg
inc
aam
repnz
sub
or
or
fdecstp
cmp
inc
and
mov
ds
xchg
jg
mov
adc
cltd
cltd
roll
or
jl
lret
aas
imul
ret
jne
jae
sbb
lock
xchg
ret
aad
sarb
loop
fidivl
test
imul
jno
pop
ljmp
mov
clc
xchg
add
js
push
outsl
pop
cmp
lret
sub
mov
add
stos
orb
mov
cmp
fwait
dec
adc
call
jne
addb
xchg
mov
fdivl
dec
push
mov
inc
jno
in
out
mov
sub
cld
in
out
orl
fisubl
nop
sbbb
push
or
or
xor
cmc
mov
inc
pop
mov
es
xchg
jbe
cmpsl
sbb
imul
push
mov
testb
add
and
and
lea
mov
or
fmull
jnp
mov
das
mov
jl
push
and
scas
shll
lds
and
int
in
stos
ljmp
pop
cwtl
xor
pop
out
cli
mov
in
xor
and
mov
les
xchg
xchg
aaa
imul
pop
je
mov
dec
sub
fucom
pop
adc
mov
dec
fidivl
stos
inc
cmpsl
xchg
aam
sbb
inc
push
push
adc
mov
mov
aad
jge
mov
jle
ja
xchg
rorb
outsb
scas
icebp
das
dec
stc
mov
pop
mov
sub
mov
mov
sub
inc
sub
aaa
sub
fcmovbe
pop
mov
mov
xor
dec
cmc
jle
cmp
mov
sub
mov
jg
pop
push
movb
mov
jo
mov
cmp
mov
pusha
lods
inc
out
xchg
imul
out
pop
fadds
inc
inc
inc
jo
fsubrl
mov
je
mov
loop
inc
out
mov
aaa
lahf
or
or
stos
mov
stc
pushf
clc
sbb
pop
icebp
dec
shrb
sti
jl
dec
fidivl
add
cld
cmp
lcall
movsb
jnp
lret
sbbb
xchg
pop
andl
scas
cld
and
mov
push
outsb
lods
pop
push
pop
aas
aaa
mov
out
jne
push
xor
sub
mov
stos
pop
mov
repz
mov
mov
or
and
in
and
loop
inc
jg
in
cmp
mov
adcl
inc
push
fcomp
leave
out
sarb
or
rolb
insl
gs
divl
movsl
gs
xor
test
ror
xchg
sub
aaa
lock
out
das
aaa
mov
cmpsb
add
dec
xor
xor
pop
xor
sbb
imul
repz
in
xor
sarb
cmp
into
test
hlt
sub
xor
in
repz
xchg
pop
nop
mov
call
mov
fcomi
stos
mov
into
mov
mov
xor
imul
mov
loop
aas
adcl
and
mov
out
xchg
or
loop
jo
dec
js
fcmovbe
cmpsl
xor
movl
inc
cmpsb
xchg
add
into
ljmp
cld
repz
aas
jecxz
sub
cltd
sub
jp
push
bound
cvtdq2ps
push
or
adc
std
divl
hlt
mov
pop
ljmp
push
leave
stos
aaa
dec
adc
cmpsl
pop
into
mov
push
pushf
inc
rcrl
pushf
xchg
daa
pop
aaa
ljmp
dec
clc
and
cmp
aas
aaa
inc
mov
leave
das
rclb
jne
rcrb
mov
inc
push
es
or
or
add
subl
imul
jb
inc
or
jecxz
push
and
or
jo
ret
mov
leave
mov
pusha
fs
fimull
xor
pop
inc
add
lahf
leave
insb
dec
mov
xorb
mov
or
pop
fs
fists
in
in
fs
push
mov
dec
push
mov
adc
jno
dec
push
dec
movsl
mov
pusha
jo
mov
mov
jg
scas
push
js
or
mov
push
les
inc
dec
xchg
sub
mov
stc
jecxz
push
loope
idivl
mov
pusha
popa
and
in
fnstenv
cmp
mov
cmp
out
daa
sub
dec
sti
push
out
mov
sbb
stos
mov
add
and
ja
mov
shlb
outsl
adcl
shlb
test
mov
or
jo
stos
dec
mov
jle
and
and
mov
pop
in
cmp
fsubr
sbb
dec
push
mov
scas
or
fsubrl
in
pop
fdivrp
pop
nop
mov
ret
xchg
inc
mov
lahf
dec
ret
dec
enter
hlt
nop
aad
mov
shll
xchg
inc
roll
sub
addr16
pop
std
pop
cmpsb
jne
inc
jno
push
cld
daa
loop
loope
mov
dec
leave
lret
enter
mov
cmp
js
dec
imul
mov
clc
fxch
jmp
cmp
or
sbb
push
imul
mov
clc
fxch
jmp
or
push
sbb
clc
dec
js
dec
imul
mov
enter
cmp
sbb
cmp
push
jmp
inc
xor
test
jo
aaa
push
daa
push
jmp
decl
or
loope
in
insl
scas
stc
pop
jmp
outsl
mov
aas
mov
jns
imul
cmp
or
mov
pop
test
das
jns
imul
cmp
or
mov
dec
shrb
out
or
imul
loop
cmp
ljmp
sbb
out
xlat
in
sub
or
cmp
jo
mov
cmpsl
mov
push
das
cmpb
inc
fists
xchg
aas
jno
cld
lret
push
or
cmpl
jl
stc
lahf
mov
scas
pop
pop
imul
and
jns
movsl
sti
cmp
or
jmp
andl
pop
mov
orl
inc
xchg
xor
sub
lahf
and
inc
or
xchg
sbb
ljmp
jg
pop
imul
fsts
loope
iret
sub
mov
inc
outsl
int
test
das
fildll
pop
decl
cmp
or
fnstcw
outsl
mov
aas
mov
mov
sbb
mov
dec
into
pop
fisubrl
xor
mov
lods
add
jb
jbe
mov
sub
pop
cli
dec
mov
stos
sbb
bnd
pusha
leave
dec
xchg
inc
jg
imul
stc
pop
jmp
outsl
mov
aas
mov
jns
imul
cmp
or
fnstcw
outsl
mov
aas
mov
jns
insb
fcmovbe
or
and
out
inc
mov
pop
and
sub
into
sub
mov
cld
les
add
dec
mov
or
cmp
and
jne
lds
cmp
fs
popa
fisttpll
and
jbe
loope
es
cs
jne
clc
movsb
cmp
sub
sub
cmpsl
stos
inc
inc
pushf
and
mov
js
jp
jle
test
xor
lret
inc
cmp
ret
pop
jg
push
mov
ljmp
popf
or
jp
imul
loope
fidivl
add
mov
fbld
sub
sbb
dec
fisubl
dec
outsb
and
cwtl
aad
jns
cmpsb
mov
mov
lret
xchg
add
xor
jl
jns
cmc
enter
inc
mov
sahf
vpmuludq
add
out
or
or
push
mov
mov
das
xor
xor
pusha
or
xor
loop
ja
test
pop
mov
ds
lods
mov
dec
mov
sub
rclb
iret
and
int3
jg
out
sar
cmc
outsb
or
and
xor
repnz
js
xchg
push
fstpt
dec
jmp
push
je
in
mov
mov
jge
test
andl
ds
inc
inc
sti
in
push
lret
cmp
sub
jae
jnp
xor
jecxz
shrl
inc
orb
cmp
push
ret
adc
lret
mov
xor
bound
push
mov
cmp
push
js
mov
outsb
push
lds
push
out
mov
lret
xor
les
repz
ret
mov
jg
and
aad
mov
pop
xchg
int
mov
les
enter
sahf
mov
jg
inc
cli
add
lock
sub
les
fsubrl
cmp
sub
ss
js
sbb
add
imul
aas
inc
push
dec
scas
cmp
fmull
or
not
or
mov
mov
push
jae
in
push
repz
dec
xchg
jne
rolb
add
xchg
sub
xor
jbe
arpl
repnz
arpl
mov
lret
pop
das
and
push
jg
adc
rclb
inc
add
in
insb
add
mov
jne
cmp
inc
out
jae
xor
gs
add
movl
mov
jo
pop
insl
pop
sbb
xor
pushf
jl
inc
outsb
xor
test
and
inc
inc
lea
push
inc
in
add
jl
xor
dec
push
mov
adc
pop
mov
mov
mov
mov
stc
mov
dec
inc
cmpsl
sbb
dec
cmp
sar
fnstcw
sbb
mov
les
inc
rorl
xorb
inc
jbe
psraw
cwtl
ss
xchg
stc
lret
pusha
and
fwait
lcall
lahf
jno
adc
push
jae
mov
pusha
inc
push
ror
mov
dec
pop
add
pop
ret
fldl
hlt
jle
fistpll
xchg
adc
mov
cli
bnd
rcrl
inc
xor
jo
loop
pop
mov
out
and
mov
cmp
mov
pop
pop
pushw
fcmove
popf
jns
lods
call
aad
lods
lods
jnp
mov
pop
dec
mov
and
out
or
jecxz
add
cwtl
jae
in
je
test
adc
sub
xchg
cmp
data16
xchg
xor
idiv
sbb
pusha
repz
and
sub
lahf
aad
push
out
filds
aaa
adcb
and
add
adc
push
scas
fsubrs
loop
cmp
or
xchg
jecxz
mov
jnp
and
cmp
stc
ret
mov
rcrl
or
cmp
inc
dec
outsb
inc
mov
push
mov
xchg
hlt
les
loopne
mov
jmp
mov
xchg
ds
mov
or
add
jl
push
adc
and
or
and
jns
fcompl
test
pop
push
loop
stc
dec
xchg
mov
inc
dec
push
and
or
mov
jae
jne
xor
in
mov
stos
bound
out
popw
aad
in
dec
sahf
test
cmp
and
enter
inc
clc
mov
in
loopne
scas
movhps
into
rorb
bound
jb
out
fldt
inc
nop
in
jmp
loop
sbb
cli
pop
xor
jb
mov
pop
gs
stos
in
js
xor
insl
aas
imul
push
fnstsw
dec
arpl
cmc
ljmp
add
mov
jmp
mov
jns
or
aad
inc
leave
jl
popa
sub
mov
xchg
outsl
xor
int
xor
xor
sub
jl
scas
add
test
push
mov
add
cltd
aam
int
lret
mov
xor
outsl
push
out
inc
xchg
pop
icebp
sarl
xor
ret
call
mov
arpl
push
lcall
pop
stos
dec
xchg
hlt
dec
loopne
push
in
das
push
lock
adc
add
mov
lods
bound
outsb
adc
imul
push
rcll
mov
sub
gs
sub
cmp
aad
mov
dec
inc
or
sahf
loopne
jae
popa
or
sbb
icebp
dec
mov
mov
or
xchg
mov
xor
aam
loopne
add
js
sti
pop
xchg
sbbl
subb
dec
testb
fdivp
xor
test
insb
mov
inc
ds
or
push
aas
push
adc
xor
mov
or
arpl
sbb
repz
out
rol
fists
xchg
data16
shl
sbb
jmp
jmp
bound
enter
test
popf
ret
fnstsw
jmp
mov
and
out
shl
sbb
pop
fstl
aam
add
mov
inc
push
ss
inc
loopw
stos
imul
pop
add
mov
ret
adc
mov
in
ja
jmp
sbb
test
inc
push
icebp
imul
call
ja
cwtl
in
inc
dec
or
roll
pop
jae
push
rcrb
cmpsl
pusha
ljmp
in
and
invlpg
and
inc
aad
or
popf
nop
sub
rclb
out
cmc
push
jmp
mov
lret
pop
faddl
xor
aam
cld
loop
jne
adc
daa
cs
sub
in
loop
leave
je
cltd
jnp
scas
xacquire
mov
or
xchg
shll
jp
negb
or
sbb
vmread
ss
cmp
pushf
loop
std
cmp
sbb
lahf
bswap
pop
outsb
rcll
test
sub
xor
push
scas
scas
mov
pusha
daa
add
leave
xchg
mov
rcll
jae
adc
jno
cmc
and
inc
ja
jl
pop
test
xor
lods
int
jns
iret
add
jp
incb
arpl
clc
jge
sbb
xchg
jbe
and
aad
inc
sub
cmp
ja
sub
pop
arpl
mov
mov
test
sub
cmp
dec
mov
out
or
dec
ror
cltd
dec
mov
cmp
cmpl
jns
mov
mov
mov
push
and
fwait
push
ljmp
das
rclb
xchg
loop
cmpsl
dec
push
lahf
mov
and
stc
hlt
sub
xlat
push
sbb
sbb
push
loop
and
out
push
mov
xor
jmp
mov
shll
shl
out
lcall
enter
subb
cmp
xor
movsl
stos
imul
in
sub
les
stos
mov
into
xchg
gs
xor
sbb
clc
popf
sub
inc
ret
mov
popf
fwait
or
xchg
inc
sbb
xchg
mov
dec
pop
jb
mov
mov
adc
movsb
cmp
sbb
int
into
dec
ret
and
or
sti
imul
dec
add
pop
dec
les
adc
lret
roll
fistpll
mov
popf
sub
jno
pop
lahf
cli
or
xchg
negl
mov
ret
xchg
add
lds
icebp
fdivl
popl
mov
inc
iret
pushf
adc
sbb
cmpsb
jp
and
lret
inc
add
insl
mov
and
jmp
cmc
cwtl
shl
xchg
cmp
icebp
les
jp
mov
sub
sub
int3
outsl
pop
lahf
lret
sub
arpl
movsl
fldcw
add
mov
je
pusha
jmp
ja
mov
sbb
mov
fists
cmpsl
int3
gs
push
and
loop
inc
lds
jb
inc
add
dec
jnp
add
mov
mov
pop
mov
cltd
dec
mov
add
mov
xchg
hlt
cmp
mov
repz
call
out
lods
mov
dec
cli
rorb
cs
cmp
fisubrl
cltd
xchg
pop
das
mov
scas
std
push
jb
mov
insl
enter
push
jmp
jne
or
inc
cltd
and
outsb
mov
fldl
rolb
mov
xor
inc
lock
add
mov
mov
loop
pushf
out
push
mov
lods
mov
push
stos
add
mov
mov
les
outsb
testl
push
scas
scas
mul
rorl
add
inc
pop
pop
pusha
sub
fmuls
loope
mov
movsb
pop
push
mov
mov
cmpsb
mov
or
jp
push
pop
stc
test
pop
insb
pop
xchg
pop
sbb
and
wrmsr
or
shr
inc
bound
in
frstor
call
out
nop
popl
outsb
fiadds
out
jnp
int
ja
ss
pushl
fidivrs
or
orb
xor
mov
stos
mov
mov
popa
shl
leave
enter
mov
or
or
jp
mov
pop
mov
es
outsb
jge
movsb
xor
xor
mov
push
ret
pop
mov
inc
loop
gs
ret
xchg
cmpsb
pop
cmpsb
adc
popf
push
mov
push
push
mov
in
arpl
ret
mov
and
out
or
fmuls
pop
hlt
repz
dec
inc
fists
lcall
sub
add
cmpsb
shlb
and
jns
mov
loop
clc
xor
mov
shlb
push
das
jmp
sbb
es
mov
sub
cmpsl
mov
adc
jp
lock
outsl
dec
into
and
jg
dec
data16
mov
stc
xor
inc
pop
mov
mov
or
cmp
jle
sbb
push
sbb
or
inc
icebp
fnstsw
inc
xor
nop
imul
mov
and
jmp
fadds
arpl
cmpsb
push
arpl
mov
jnp
mov
jg
mov
lahf
jecxz
cmpsb
dec
mov
push
cmp
aad
stos
orb
mov
push
push
incl
std
cmp
lock
imul
push
push
push
xchg
mov
jae
jb
jge
cmp
movsb
push
xor
call
es
mov
xor
mov
or
sti
incb
clc
imul
xor
icebp
jne
mov
pusha
ficoml
push
xchg
cs
mov
in
push
call
scas
push
shll
or
dec
rcrl
fcmovnu
and
insl
iret
dec
sbb
gs
in
idivb
decl
jo
test
out
insl
push
ss
mov
inc
inc
push
add
push
xchg
lods
push
pop
lahf
neg
cmp
andb
flds
cs
sub
xchg
pop
mov
mov
rcll
jo
fwait
das
xor
push
adc
or
sahf
push
push
and
adc
cmp
sbbl
fnstenv
insb
scas
add
cmp
mov
ja
movsb
rcll
and
push
add
clc
lret
or
pop
test
cmp
addl
push
gs
fnsave
dec
cmp
sbb
out
add
popa
fidivl
iret
nop
and
inc
xor
ja
mov
add
stos
sbbb
mov
xchg
aaa
sub
cmp
or
add
mov
movsl
movsb
ret
ss
data16
lds
pushl
stc
inc
cmpsl
xchg
fidivs
xor
sahf
cltd
xorl
or
mov
add
mov
inc
sbb
or
lcall
rcr
ljmp
adc
out
daa
add
ret
cmp
repz
nop
pop
sbb
pop
repnz
pop
adc
fisubrl
lods
ret
mov
mov
rorl
out
dec
push
jo
sbb
push
push
push
ss
dec
fucomp
and
inc
cmp
into
ja
jmp
jnp
jle
shlb
inc
jbe
icebp
and
adc
or
rcll
lds
ss
dec
adc
fdivl
out
shrb
push
mov
pop
adc
or
xchg
adc
jae
insl
xchg
jae
cld
shrl
pop
fldt
sbb
jo
sub
test
out
enter
or
es
scas
outsb
push
cmp
mov
and
movsl
in
popa
xlat
and
pop
sarl
or
std
scas
lods
inc
xchg
mov
pmaddwd
call
sbb
xor
xchg
or
jbe
pop
mov
xchg
adc
xchg
pop
fs
outsl
lock
repz
xor
fnstenv
lods
test
dec
mov
je
pop
aad
lret
xchg
pop
sub
xchg
sbb
xchg
sub
aad
jle
mov
loope
lcall
lea
xchg
rolb
pusha
das
cmc
lret
outsl
mov
pop
repnz
or
hlt
mov
mov
enter
ds
scas
pop
flds
test
xor
int
jnp
test
jo
inc
dec
pop
or
xchg
lcall
jb
jp
mov
fiadds
push
sub
lods
add
stc
and
mov
jg
subl
dec
lods
addr16
ret
test
jb
ret
je
inc
add
mov
xchg
and
repz
sbb
fwait
daa
in
ds
into
dec
cmc
xchg
shrl
pop
cmpsb
cmp
sbb
std
cmc
mov
jg
rol
xorl
pop
fwait
pushl
pusha
inc
inc
sahf
push
js
sub
or
xchg
rcll
mov
hlt
jge
mov
dec
fdivl
adc
icebp
sbb
jne
jbe
sub
push
inc
subl
sahf
mov
jnp
data16
movsb
pop
dec
sub
bound
mov
out
jp
sti
sub
adc
imul
in
mov
fists
test
cmp
inc
test
inc
enter
lahf
imul
mov
dec
bound
es
in
imul
jnp
sbb
jbe
xlat
clc
xchg
add
jecxz
je
adc
sub
pop
pop
stc
mov
cmp
push
iret
ljmp
repz
daa
insb
sub
cmp
out
adc
push
jmp
pop
in
sbb
inc
and
push
push
push
mov
std
data16
xchg
mov
mov
mov
int3
enter
arpl
in
jg
pushw
push
push
mov
inc
xchg
mov
ror
ds
jp
inc
rclb
imul
loop
inc
push
fsubrl
add
pop
ret
xor
aaa
jmp
pop
loop
xchg
add
jl
xor
mov
add
xor
movsl
imul
rcrb
pop
inc
mov
xchg
scas
sahf
test
lods
stos
addb
sbb
or
mov
mov
pop
cmp
dec
icebp
mov
xchg
int
cmp
jge
pop
mov
test
xchg
push
or
mov
cltd
sub
stc
pop
pop
lret
lock
dec
cmpsl
in
add
cld
aam
cmp
adc
mulb
popf
xor
dec
inc
or
mov
dec
ficompl
push
sbb
jmp
push
lea
or
pop
push
daa
mov
dec
fistps
stc
pop
insb
cld
adc
mov
imul
push
sub
push
cmpsl
cmpsb
dec
aad
sub
xor
add
mov
sarl
xchg
xchg
mov
in
aam
sub
xchg
cs
mov
das
out
cmc
cmpsb
out
pusha
mov
sbb
cmp
sbb
mov
mov
xchg
xchg
inc
mov
push
pop
sbb
popf
sbbb
push
cs
scas
subb
mov
mov
pop
dec
mov
dec
nop
pop
les
pop
xor
mov
and
push
leave
inc
inc
inc
push
lahf
mov
or
nop
insb
iret
cltd
dec
sub
or
mov
mov
adc
fwait
int
mov
xchg
bswap
pmuludq
test
rcll
mov
pop
ss
inc
xor
popa
or
push
mov
dec
popa
in
add
popa
inc
pusha
dec
pop
outsb
dec
fists
mov
jl
push
ljmp
xchg
mov
jp
pusha
push
mov
or
dec
jg
mov
sbb
ja
notb
arpl
pop
mov
dec
aam
jns
pop
xchg
roll
fdivr
dec
cmp
dec
inc
imul
out
mov
int
mov
jl
scas
push
lret
push
stos
sbbl
adc
sub
push
iret
stos
and
or
data16
xor
cld
ds
cmp
out
cs
mov
lods
push
pushf
push
jmp
out
xchg
das
mov
xchg
insl
xchg
in
dec
mov
jle
mov
cmp
xchg
popa
adc
mov
mov
mov
cwtl
adc
iret
sub
mov
movb
or
inc
dec
jnp
ja
sub
inc
mov
sub
pop
sub
cmp
pop
inc
clc
faddl
pop
pop
ljmp
jbe
dec
cmp
sar
aaa
imul
rolb
cmpsl
lock
jnp
cli
adc
idivb
add
pop
xlat
dec
jecxz
jbe
mov
cmp
xorb
adcl
rcrb
sbb
aad
insl
jecxz
subb
dec
movsb
xor
jb
rorl
cwtl
adc
hlt
test
dec
fisubrl
jp
sahf
mov
cmpsl
inc
push
mov
lock
test
cmpsl
push
insb
iret
mov
out
subb
loope
jl
pop
mov
sub
jecxz
arpl
out
lds
insb
stc
movsb
stos
ds
stos
xchg
std
movsl
sbb
jp
adc
push
test
lahf
shrb
mov
fmuls
rorl
pop
push
and
inc
xchg
inc
dec
pop
jg
stos
inc
rcll
orl
and
mov
into
std
adcl
jno
and
push
lahf
mov
add
mov
hlt
pop
cltd
xchg
or
or
rcrl
adcl
mov
push
movsl
mov
loop
xchg
push
xor
push
mov
and
xor
repnz
insl
mov
shll
xor
fbstp
mov
sub
ljmp
add
frstor
xchg
xor
dec
inc
jns
fimuls
lock
fcoms
cmp
mov
push
in
mov
cmpsb
or
pop
mov
and
int
data16
nop
inc
push
mov
outsl
daa
and
ss
adc
ret
lea
lret
fcomps
mov
andb
xchg
cmc
dec
mov
roll
and
enter
out
ret
jge
testb
movsl
adc
push
stos
sbb
popf
jno
push
pop
scas
lods
xor
andl
js
xor
popa
ljmpw
call
mov
ret
cmp
and
and
ds
subb
mov
mov
or
lcall
sarb
xchg
add
movsl
ja
and
and
mov
cmp
in
addr16
popf
inc
ret
je
fxch
cmp
mov
xchg
and
dec
jnp
fldt
xchg
push
pop
sub
push
aam
aas
xlat
out
sbb
test
sub
mov
xchg
fldt
insl
lds
pop
sub
lret
jne
push
pavgw
lods
mov
movsl
jl
pop
std
test
xor
or
mov
add
stos
jo
sub
jo
xor
or
stc
dec
inc
dec
lret
cmp
mov
iret
mov
lahf
sub
stc
pop
jmp
outsl
mov
aas
mov
jns
imul
cmp
or
fnstcw
outsl
mov
aas
mov
jns
imul
cmp
or
fnstcw
outsl
mov
aas
mov
js
push
jmp
lahf
sub
sbb
or
mov
leave
sbb
xchg
and
data16
cmp
or
adc
dec
dec
mov
sbb
imul
lret
fwait
sub
jp
push
pop
sti
dec
add
stc
mov
pop
ljmp
subb
sbb
push
pop
in
dec
or
adc
fs
adc
sti
cmp
pop
ret
mov
add
and
mov
aas
cmp
je
mov
stos
jl
cmc
or
and
sbb
ret
push
aam
ss
testl
fwait
cmp
in
jns
test
fidivrl
or
push
jnp
les
sti
push
sub
and
mov
out
jnp
push
aad
mov
popa
jae
sub
fcmove
nop
or
imul
aad
lahf
iret
cmc
fwait
jnp
jg
dec
jmp
add
std
ds
ljmp
imul
jbe
push
out
das
shrb
aam
cmp
mov
jnp
dec
cmp
or
jp
push
pop
loop
adc
and
imul
mov
into
jae
arpl
adc
sbb
sbb
pop
repnz
int3
daa
fwait
aas
cltd
push
fcomps
mov
sbb
push
xchg
sbb
outsb
sti
dec
in
cltd
sub
loop
test
outsl
mov
fldt
pop
sti
dec
or
cmp
imul
lret
fwait
sub
jp
push
pop
sti
dec
or
cmp
imul
lret
pop
arpl
test
dec
in
not
push
and
mov
add
testl
xor
aas
adc
xchg
inc
imul
fs
rolb
pop
xchg
xlat
and
jle
sbb
inc
add
sbb
mov
in
ja
sbb
and
mov
xor
push
jecxz
lods
mov
fdiv
push
filds
rcrb
dec
pop
data16
nop
mov
jae
mov
mov
pop
in
sbb
scas
jmp
arpl
push
mov
insb
imul
cmc
dec
sub
mov
sbb
lret
into
adc
fisubrl
in
cmc
popf
add
xchg
and
dec
push
mov
fdivp
jl
test
push
push
or
adc
mov
das
cmp
cltd
pop
int3
and
pop
loop
lar
mov
mov
sbb
les
adc
ror
loop
inc
lret
pusha
in
xchg
fisttps
lret
jno
mov
pop
lods
sub
or
mov
gs
cmp
sbb
hlt
in
push
inc
hlt
out
call
loope
and
loop
adc
enter
out
frstor
sbb
divb
inc
or
jle
sub
xchg
test
push
push
jb
dec
scas
mov
jle
mov
jns
push
insb
js
testb
dec
add
or
xor
fists
lea
insb
xor
sbb
lcall
push
sub
or
mov
decb
pop
xor
lcall
std
and
mov
loope
jg
mov
aaa
fs
sbb
sahf
xchg
in
leave
dec
rcrl
mov
fisttpl
mov
cld
and
inc
xor
mov
cmpsb
jno
jge
ficompl
test
aaa
in
mov
jb
lock
lods
sbb
cli
cmp
push
in
mov
inc
jns
in
in
cltd
cmp
jle
lea
roll
and
push
int3
fidivrl
insl
movsb
mov
iret
mov
dec
add
jmp
sub
rcrl
mov
inc
push
push
stos
push
nop
scas
addl
adc
push
and
jnp
cmc
lds
les
idivb
ds
shll
dec
outsl
mov
sbb
sbb
repz
faddl
jbe
out
jg
pop
lods
push
dec
pop
adc
lret
rcrb
arpl
inc
sahf
les
push
nop
mov
js
xor
out
pop
mov
arpl
mov
inc
movsl
sbb
cmp
in
fadds
sbb
out
imul
cmp
js
add
jmp
les
imul
mov
pop
xchg
popa
xchg
mov
out
jg
movsb
mov
les
lcall
sub
fcomp
fs
mov
insl
or
cmp
mov
cmc
rorb
out
cmp
insb
cltd
xor
js
adc
cmp
sti
shlb
add
popa
dec
push
and
dec
inc
mov
test
or
mov
imulb
orl
mov
ss
rclb
and
call
shll
pop
lret
mov
xor
mov
mov
push
dec
cs
inc
dec
adc
jecxz
jle
sbb
pop
lret
sbb
and
ret
divl
jp
iret
push
mov
daa
or
test
andl
addr16
inc
das
cmpsl
mov
mov
mov
adc
leave
stos
repz
into
negl
or
mov
jle
jns
push
mov
adc
shlb
ljmp
iret
hlt
pop
xchg
rcr
stos
inc
aas
dec
sub
fildl
in
jmp
or
loope
push
cmpsb
mov
inc
pushf
cs
es
push
push
scas
out
popa
iret
jge
insb
sti
sub
or
xor
adcl
jbe
aad
sbb
inc
mov
push
bnd
in
push
iret
leave
je
leave
movsb
jg
mov
ret
in
xor
cld
insb
inc
je
mov
inc
subb
mov
in
out
icebp
scas
or
xchg
sub
jecxz
into
ja
add
push
sub
pop
setl
mov
adc
sub
mov
test
lcall
push
popa
lahf
xchg
dec
cmp
jb
stos
insb
scas
xchg
xor
out
mov
iret
xor
and
idivl
mov
mov
mov
ja
push
and
sbb
and
pop
mov
or
cli
psubsb
movsl
loope
pusha
and
dec
push
dec
fxch
gs
pop
cld
mov
adc
sub
sbb
cli
sub
adc
sub
stc
andl
jecxz
and
sub
mov
orb
sti
cmpsl
and
imul
push
mov
sbb
js
dec
push
fiaddl
lods
jmp
adc
jns
ret
or
cmp
sti
push
xchg
mov
push
push
mov
stc
test
mov
xchg
pop
mov
pcmpeqb
inc
mov
cltd
inc
add
repz
fwait
push
jle
adc
adc
lret
aaa
fcmovnb
mov
adc
jecxz
pop
pop
sub
mov
or
idiv
lret
and
cmp
ret
leave
popa
dec
cmp
sbb
lret
repnz
inc
ljmp
fsub
aam
adc
cmp
or
jle
ljmp
cwtl
inc
add
sub
pop
jae
push
stos
icebp
stos
scas
out
test
test
jnp
mov
dec
sbb
adc
in
or
xchg
inc
clc
pop
jnp,pn
stos
jns
or
inc
sbbl
cmpsl
jnp
cmp
pop
out
pop
mov
sbb
push
dec
sti
inc
jle
out
cmp
inc
test
arpl
scas
dec
iret
pop
aam
fdivr
int
mov
push
packuswb
jns
stc
fisubl
mov
mov
pop
stos
insb
cmc
push
lret
add
fnstcw
cmpsl
jp
popf
movsb
add
jb
int3
push
fldcw
pop
lahf
xor
test
cltd
sbb
cmp
les
sahf
xor
or
dec
jmp
loop
mov
lret
test
cmp
dec
pop
xor
out
sti
fcomp
and
lahf
clc
fistpll
aad
xchg
xchg
roll
popf
mov
xchg
leave
xor
pop
into
rorl
adc
mov
xchg
rorb
ljmp
scas
shll
cmp
shll
sbb
std
sbb
aam
out
out
jge
int
jnp
push
int3
cmc
loop
cs
jns
gs
xchg
and
push
adc
cmp
jns
sbb
cmpsb
jno
xor
loopne
cmpsb
push
or
jle
in
sbb
mov
idivl
cmpl
mov
ret
mov
notl
push
cmpb
fadds
loope
ret
fs
ret
repz
adc
filds
in
pop
mov
xchg
mov
ret
vmread
inc
push
sbb
cli
aas
into
shl
cwtl
mov
lds
xor
mov
fadd
push
out
xor
aam
rcrl
push
ret
xor
out
call
inc
movsl
mov
mov
frstor
fcmovnu
hlt
dec
pop
imul
lcall
inc
je
adc
aam
inc
inc
jle
mov
out
jmp
add
lahf
scas
leave
repz
insl
dec
inc
push
insb
push
and
test
test
adc
ficomps
jge
ljmp
sub
inc
mov
fildl
lret
aaa
and
das
adc
mov
loope
imul
outsb
pushf
ss
jbe,pn
add
sti
pushf
aaa
cmp
xchg
or
xchg
outsb
clc
das
movsl
mov
or
pop
int
jp
pop
sub
jne
mov
rcrb
iret
fldenv
in
inc
pop
repz
hlt
jmp
add
adc
cmp
cli
lea
daa
or
arpl
mov
addl
inc
pop
cmp
jg
xchg
jne
push
mulb
xchg
sbb
xlat
mov
mov
push
cwtl
dec
orl
iret
cmp
jbe
dec
jae
fcmovu
mov
roll
mov
addb
call
push
pusha
ja
push
popf
mov
mov
pop
loop
enter
inc
push
popf
ljmp
adc
mov
mov
and
in
js
adc
in
inc
xor
push
mov
mov
mov
pop
jp
mov
les
mov
lods
pop
fmulp
adc
imul
xchg
sub
jae
test
push
pushf
dec
and
push
dec
sbb
je
lock
jmp
adc
stos
lret
pop
clc
mov
and
les
mov
and
jne
test
push
xchg
jnp
mov
push
es
fwait
mov
hlt
mov
sub
pop
lods
adc
xchg
in
imul
aas
stos
fidivl
ds
into
std
jbe
out
inc
push
lahf
test
pop
mov
in
je
int
in
cltd
or
pushl
add
adcl
mov
jg
dec
jle
sub
inc
adc
les
add
pop
imul
mov
int3
dec
ja
aas
insl
in
pop
loop
sub
inc
stos
imul
sub
mov
sbb
xor
or
cmp
bound
repz
mov
or
mov
sub
lds
pusha
sbb
cmpsl
pushf
fildll
or
lock
addl
aaa
mov
mov
sub
xor
outsl
fiadds
sar
mov
inc
jecxz
vxorps
and
popa
xor
mov
subb
dec
lock
jo
mov
out
sbb
loop
cmpsb
mov
in
add
mov
icebp
lds
dec
push
insl
repz
xor
dec
jo
xor
cld
subb
sbb
xor
mov
dec
xor
ror
repz
sub
fsub
or
addr16
mov
es
mov
stc
in
mov
xchg
and
mov
or
sti
cmp
cmpsl
andl
mov
jle
push
cmpsb
js
dec
fdivrs
out
je
mov
push
pop
nop
mov
repz
cmp
xor
jle
mov
adc
aad
stc
cld
pop
ret
pop
lcall
roll
and
loope
inc
ljmp
stos
inc
push
jmp
pop
xchg
scas
jbe
adc
mov
mov
xchg
out
cmp
xchg
test
movsl
and
add
jbe
push
jb
push
in
adc
movsb
lods
pop
ret
clc
add
mov
sbb
and
add
inc
xor
test
aad
daa
xor
out
insb
pop
cmp
or
push
pusha
add
data16
stos
and
out
or
pop
xor
add
les
stos
mov
mov
pop
sbb
add
leave
mov
jo
jbe
nop
dec
aad
ret
outsb
jo
mov
pop
cmpsl
or
shlb
xor
mov
outsl
mov
push
loopne
xor
xchg
test
lods
into
xor
adc
mov
xchg
out
mov
jp
test
shll
daa
add
jne
inc
fsubr
inc
sti
xchg
pop
push
out
mov
dec
into
jae
add
xchg
cli
mov
negl
pop
aas
cmp
movsl
fisubrl
and
xor
cmp
shlb
add
and
push
repnz
rorl
test
mov
push
call
andb
sbb
or
gs
addr16
pusha
ficoml
test
inc
adc
mov
adcl
insl
jne
jle
iret
fidivs
pop
repnz
ret
or
and
jge
mov
mov
xlat
xlat
cmp
sbb
sub
bound
jecxz
shll
call
push
lea
or
pop
outsb
shrb
mov
ret
and
xchg
dec
pop
fldcw
nop
pop
xchg
xchg
inc
ficoms
pushf
push
jno
or
mov
in
push
loopne
add
add
sub
cld
mov
clc
pop
scas
aad
dec
adc
inc
inc
gs
cmp
add
cld
inc
sbb
jge
das
push
pop
pop
loope
push
in
sbb
dec
ret
cmp
adc
mov
mov
fsubr
push
fs
outsl
ja
sbb
aas
push
mov
rorb
fstpl
shll
scas
inc
add
fstl
das
ret
int
push
aam
sub
in
push
mov
icebp
adc
scas
mov
aam
jle
adc
xchg
dec
or
cli
pop
dec
pop
pop
jns
pop
std
mov
sub
imul
dec
xor
incl
dec
pop
and
icebp
mov
mov
adc
lods
mov
lods
add
or
and
daa
ficompl
pop
mov
pop
rcrb
xchg
out
fisttpll
addl
push
scas
adc
lds
lds
les
push
imul
mov
xchg
mov
aam
xchg
out
sbbl
and
jne
rolb
shll
fdivs
lcall
popa
fs
add
aam
test
sti
push
push
and
sbb
int
sub
loopne
mov
mov
dec
addr16
sub
or
mov
scas
xchg
out
movsl
cmp
xchg
test
hlt
aad
push
fisubs
mov
out
cmc
dec
sub
add
xchg
or
jno
cli
sub
incb
stos
in
in
xor
addr16
inc
xchg
aaa
mov
xchg
dec
fst
fdivs
xor
mov
and
pavgw
es
loopne
test
xor
inc
add
scas
fsubl
jo
shll
add
dec
dec
stc
loopne
ret
pop
scas
scas
cmpl
filds
or
int3
test
mov
into
pop
enter
out
call
mov
fsubs
xor
insb
test
add
push
gs
fnstcw
mov
add
pop
sti
sub
movl
push
push
cmp
sub
scas
mov
fidivl
cs
or
xchg
xor
xchg
lret
add
lret
dec
pop
mov
lods
hlt
sbb
mov
xlat
adc
bound
sbbl
fdivl
jnp
pop
lret
or
insb
pop
cmp
mov
jne
cmp
test
mov
sub
push
ja
into
mov
sub
xchg
jge
push
in
movsb
or
jno
mov
mov
rclb
sbb
jle
adcb
lret
and
ljmp
sbb
sbb
push
inc
mov
out
cmp
fstps
jecxz
movsl
cli
stc
jecxz
jbe
or
insb
or
scas
push
inc
adc
imul
lret
ror
loope
adc
int
mov
sbb
push
pop
sbb
xor
pop
mov
insb
push
fstpt
imul
xor
scas
mov
jge
and
aam
dec
stc
mov
sbb
mov
sbb
or
lock
pop
pop
push
cli
adc
and
mov
fldcw
sbb
add
imull
mov
arpl
pushf
sub
repz
mov
outsb
sub
pusha
enter
outsb
loopne
fcompl
insl
dec
cmpsl
fisubs
in
push
stc
xor
adc
lea
add
insb
push
pop
popa
lds
shll
push
lret
sbb
cmp
hlt
inc
mov
xchg
cwtl
mov
clc
daa
adc
add
stos
into
and
mov
jge
icebp
cld
mov
jnp
mov
fstps
fnstenv
push
dec
fsubp
cwtl
test
stos
arpl
or
call
sar
mov
fidivrl
jl
mov
outsl
mov
in
dec
push
aam
mov
mov
int3
imul
lods
fwait
daa
add
xchg
pusha
dec
into
mov
ret
and
sub
dec
shrb
adc
cwtl
or
cld
nop
movsb
hlt
dec
sub
inc
negb
xchg
int
jp
cmp
iret
movsl
and
mov
mov
inc
pop
or
imul
mov
ret
ror
insl
lods
dec
lret
mov
or
lods
sbb
lock
cmc
enter
lahf
movsl
mov
inc
mov
mov
xchg
jge
dec
fistl
jge
add
cmp
inc
fdivrl
dec
inc
ds
mov
jp
or
mov
and
cmp
out
popa
iret
gs
fmuls
sbb
sbb
lahf
pushf
mov
das
and
push
out
lahf
repz
roll
jnp
cli
aam
lcall
jae
cld
das
int
xchg
mov
testb
sub
pop
sbb
mov
dec
lahf
sbb
cmpsb
ret
cmp
sar
lahf
cltd
adc
scas
pop
jl
lods
xlat
adc
ja
mov
loop
arpl
or
cmp
sub
adc
roll
cmc
clc
loopne
fs
push
inc
mov
pop
or
lods
repnz
test
testb
cmp
xlat
sub
lods
lret
divb
jbe
icebp
jg
mov
adc
cwtl
pop
stos
lahf
loop
mov
add
push
adc
cmp
leave
add
mov
jp
adc
jmp
out
cmp
mov
pop
sbb
int3
jo
fisubs
inc
call
das
in
sub
fadds
cld
popf
sub
pop
inc
mov
jno
add
scas
cwtl
adc
add
add
adc
jb
aam
mov
popf
scas
cmp
mov
lds
mov
ror
iret
mov
push
shl
pop
jg
push
mov
loopne
test
lret
pop
test
rorl
out
xchg
sti
push
mov
mov
js
test
xor
mov
clc
mov
leave
and
mov
arpl
pop
jecxz
cmp
ljmp
or
pop
stos
adc
cmp
pushf
dec
sahf
xlat
repnz
inc
scas
cld
and
test
repz
hlt
addl
hlt
sahf
xor
xor
mov
mov
mov
js,pt
test
bound
sbb
stos
cmp
mov
lcall
adc
pusha
mov
adcl
jnp
in
cmp
out
push
lods
jl
pop
mov
and
pop
dec
and
lahf
loope
xor
or
mov
addl
es
movsl
mov
ss
scas
and
mov
shll
mov
gs
adc
and
dec
aam
clc
and
push
cmpsb
add
mov
repnz
fists
add
repz
adc
fiadds
mov
aaa
cmp
enter
push
jo
push
arpl
arpl
xchg
stos
sahf
mov
pop
clc
test
jo
imul
xchg
jg
pop
jmp
lea
xor
cmp
mov
jnp
jb
int
dec
ret
and
sub
mov
dec
call
inc
aas
and
dec
pusha
jge
sbb
inc
and
loope
out
jo
inc
push
fs
push
jge
xchg
sahf
inc
fildll
nop
mov
mov
lret
mov
fdiv
cmc
icebp
cmpsl
xchg
lock
aam
subb
rolb
popf
in
xchg
cltd
gs
dec
scas
dec
push
lret
push
mov
sbb
pop
mov
lock
scas
pop
mov
push
push
aas
xor
push
clc
jo
rcl
fisttpl
jge
bound
inc
inc
mov
push
out
jae
dec
mov
xchg
inc
add
cmp
imul
loopne
or
mov
cld
sarl
xor
clc
jo
mov
je
aaa
mov
pop
fadd
movsl
add
jge
mov
sbb
sub
xchg
xor
sbb
fistpll
in
mov
push
xlat
push
das
into
jecxz
push
dec
repz
inc
push
jbe
push
bound
dec
push
scas
xlat
inc
cmc
jmp
push
sbb
mov
mov
decb
push
mov
dec
rcl
fisttpll
outsl
inc
pop
divb
xor
sub
push
add
sub
mov
roll
dec
outsb
sbbb
mov
mov
jne
rorl
sub
adc
test
sti
popf
sti
sahf
cmp
or
scas
mov
push
daa
repz
cmp
cmp
add
sub
cli
push
test
mov
andb
cs
inc
push
pop
or
cmc
mov
aas
sub
sbb
push
pop
sti
dec
or
cmp
imul
lret
fwait
sub
jp
push
pop
sti
dec
or
cmp
imul
lret
fwait
stos
stos
lcall
jmp
sti
dec
or
sbb
dec
cli
pop
ljmp
scas
sub
jp
push
pop
jnp
hlt
mov
cmp
cmp
rcll
or
mov
test
xchg
inc
les
fwait
jp
lcall
fidivl
push
cli
push
or
cmp
push
jp
mov
lcall
push
fisubl
or
mov
pop
in
push
jp
mov
lcall
and
sbb
sbb
pop
icebp
dec
push
or
pop
sub
pop
adcl
add
inc
inc
mov
dec
addr16
cmpsb
hlt
fisttps
fimuls
popa
dec
mov
movsl
mov
daa
adc
iret
and
inc
add
repnz
xchg
xor
fidivl
cmc
pop
mov
cmp
mov
push
jne
mov
sbb
dec
lds
xchg
popf
adc
mov
lret
pushf
ljmp
clc
aas
cmc
popf
outsb
push
inc
jp
jne
lds
imul
xor
inc
or
out
stos
cmc
stos
and
test
pop
mov
fwait
adc
push
pop
fisubl
and
incl
ljmp
mov
dec
in
cmc
push
jp
mov
mov
ljmp
mov
test
es
fwait
pop
cmp
leave
push
jp
or
cmp
jp
pop
nop
or
ss
push
jp
out
pop
cwtl
push
jmp
call
pop
mov
cwtl
sub
xor
jle
inc
in
loopne
mov
push
jp
mov
mov
jne
inc
cli
push
or
cmp
push
jp
mov
mov
jne
inc
cli
push
or
push
xchg
jns
cmp
cmp
imul
push
cmpsb
aas
sbb
dec
pop
pop
jg
lock
cmp
or
aaa
or
add
lods
cmpb
cmp
sub
mov
sbb
jmp
insl
xchg
adc
loopne
or
sbb
loop
test
es
outsl
mov
push
popl
dec
jnp
inc
ja
mov
xor
out
push
das
mov
ja
xchg
das
dec
in
fneni(8087
stos
jg
or
dec
iret
int3
mov
xorb
lcall
shrb
push
jae
inc
push
jmp
xchg
pop
in
mov
test
nop
ljmp
dec
adc
jo
or
xchg
hlt
pop
shll
cmc
sub
add
mov
sub
dec
adcb
test
cmp
arpl
and
repz
pop
aaa
xchg
xor
mov
xchg
pop
mov
lock
ljmp
xlat
mov
pop
cmp
stc
sub
arpl
ljmp
je
jl
push
ror
xor
push
loop
sub
repz
xlat
inc
jnp
outsl
or
pop
subb
sbb
andb
ja
mov
xor
lock
sbb
cwtl
ret
inc
fdivs
mov
pop
lock
mov
insb
cmp
xchg
shlb
and
cmpsb
int
pop
sub
cld
in
inc
lahf
jl
xchg
mov
xor
dec
pop
push
mov
pushl
cmc
test
enter
or
jo
inc
jnp
les
sub
sbb
sbb
inc
or
push
pop
pop
xchg
push
je
cmp
test
mov
sub
dec
push
iret
mov
cmp
test
loop
sub
adc
adc
sbb
arpl
add
and
mov
loop
sub
pop
clc
scas
xchg
inc
inc
fwait
mov
push
inc
fstl
out
xchg
subb
xchg
dec
loope
lea
jle
add
inc
leave
sarb
stos
shlb
hlt
xchg
cmp
adc
cmp
icebp
dec
scas
dec
and
jne
and
mov
leave
mov
or
sbb
inc
clc
jg
cs
jge
negl
push
imul
jo
cmp
mov
pop
mov
xchg
out
jne
enter
arpl
cwtl
sbb
push
jmp
mov
je
pop
in
xchg
cmp
sar
sub
leave
sbb
add
jno
stos
rorb
add
add
les
pushf
pop
jmp
imul
mov
and
stos
mov
lods
add
xor
ret
xchg
out
push
push
and
push
loopne
ret
movb
les
push
push
fwait
add
jp
lds
in
js
mov
inc
xor
sub
jmp
push
mov
or
mov
inc
adc
inc
cmp
in
adc
push
movsb
cmp
mov
inc
add
mov
cmc
lds
push
push
mov
xor
ja
mov
sbb
cs
sub
repz
rorb
dec
mov
fsubs
mov
pop
inc
in
stos
es
jge
push
xchg
dec
popa
ret
fisubrl
sub
sti
and
xor
mov
sbb
adc
add
movsb
sbbl
icebp
ss
jne
cli
sub
sbb
pop
gs
add
xchg
push
loope
xor
mov
sbb
fisubs
push
xchg
rcll
xchg
out
pushf
stc
call
js
sbb
in
outsl
xor
cmp
dec
data16
push
loop
mov
push
in
aas
sbb
int
in
push
ds
nop
jl
adc
adc
mov
push
dec
mov
pop
sti
popa
xor
and
push
call
cmc
pushf
je
outsb
dec
dec
mov
shlb
std
out
hlt
ret
push
out
insb
ja,pn
iret
imul
fimull
mov
push
mov
cwtl
xorps
repz
cld
dec
out
ficoms
mov
xchg
insl
xor
pop
xor
test
cmp
push
pop
es
movsb
push
adc
mov
fstl
lods
fnstsw
stos
insb
pop
pop
iret
xchg
data16
sub
fildl
push
and
daa
inc
mov
inc
cmpsl
add
sbb
fwait
push
ja
in
pushf
or
adc
js
cmpsb
test
sahf
insb
popa
js
jg
enter
js
cld
xchg
cmp
adc
stos
sub
test
scas
sbb
ret
scas
cmc
outsl
test
xor
mov
stos
mov
sbb
sbb
inc
mov
mov
pop
ficoms
mov
xchg
iret
mov
pop
dec
sub
xchg
mov
jne
mov
adc
pmaxsw
test
lea
leave
popa
aad
jbe
adc
xor
test
cmpsb
sub
mov
popf
nopl
and
in
push
bound
mov
dec
cmp
imul
push
fcmovbe
push
or
stos
pop
pop
mov
into
insl
xchg
dec
std
scas
jb
cwtl
mov
add
mov
ror
add
push
mov
sub
cli
test
adc
jb
lods
cltd
cmp
mov
adc
movsl
jge
mov
mov
xchg
mov
jmp
jae
add
popf
add
mov
fwait
movsb
inc
add
mov
rcl
fisttpll
push
icebp
and
lret
push
out
stos
js
cmpsl
jmp
mov
aad
jge
mov
xchg
sarb
dec
push
es
push
mov
or
or
or
or
loope
fwait
dec
mov
and
sbb
out
cmp
and
movsb
pop
dec
mov
mov
adc
fsubr
cmp
and
lods
mov
fstpt
or
xor
dec
stos
mov
test
mulb
jle
test
dec
cs
and
lret
xor
mov
sbb
test
in
xchg
mov
sub
insb
push
stos
mov
pop
pop
inc
cmp
data16
jo
dec
mov
ret
xor
dec
jle
sbb
hlt
lahf
sbb
lret
xlat
jns
test
fprem1
push
and
or
sbb
lcall
mov
sub
pop
pushf
jl
adc
out
xchg
das
cmpsl
xchg
pop
call
jp
aas
sbb
cmc
jg
dec
mov
repnz
xchg
xor
push
xor
loopne
insb
xchg
xchg
push
cmp
fidivrs
dec
or
testl
pop
pusha
lcall
cmp
pop
rcl
leave
pop
out
imul
xlat
rolb
push
cmp
dec
loope
aas
pushf
dec
mov
mov
pusha
cmpsl
in
cld
lods
mov
adc
push
dec
test
out
pop
cltd
test
push
xchg
mov
je
dec
sub
xor
sbb
out
mov
gs
cwtl
movsb
js
xchg
cmp
jg
cmpsl
and
fstpt
fmull
in
pop
movsb
sub
leave
mov
rorl
lret
cmpsl
jecxz
push
mov
push
mov
cmp
or
push
sbb
sub
mov
sahf
vunpcklps
mov
mov
xchg
daa
push
jnp
inc
das
jno
mov
add
aad
xchg
mov
dec
loop
sub
cmpsl
fwait
sbb
jecxz
sub
or
shrl
popa
shrl
xchg
dec
out
add
and
ljmp
xchg
adc
adc
out
push
faddl
andb
gs
loope
xor
cltd
push
jge
xor
stos
test
and
outsb
outsl
fnsave
lods
or
movsb
subl
xor
loop
cmp
xchg
sbb
pop
cmp
in
rorb
mov
inc
jnp
jle
fcmovb
fs
fsts
data16
dec
sub
push
or
and
lods
lock
mov
inc
and
inc
cltd
or
arpl
fmuls
and
test
rorb
imul
rclb
test
jl
push
mov
es
out
dec
movsb
jle
out
jmp
fmuls
roll
pop
icebp
imul
imul
and
addr16
dec
mov
cmpsb
xchg
cmc
les
mov
ficompl
into
ficompl
xchg
rclb
sub
es
jp
lret
stos
jo
mov
lret
pop
inc
shrl
adc
pop
xchg
cli
js
mov
xor
jb
sub
lcall
jle
cmp
sbb
iret
cltd
push
xchg
sbb
cmp
mov
insb
icebp
loopne
je
nop
dec
cmp
loop
sbb
stc
mov
hlt
filds
jle
mov
jnp
push
dec
pop
xlat
xor
test
loopne
mov
sbb
inc
sub
das
jns
xchg
jo
filds
and
xchg
popa
shll
shll
dec
push
jno
lret
xlat
jbe
mov
cmc
js
pop
test
dec
xchg
add
sub
rdtsc
inc
cmpb
mov
and
mov
mov
repz
mov
sub
dec
xchg
test
mov
add
pop
out
sarl
iret
mov
mov
leave
aaa
xor
int3
imul
push
sub
sbb
adc
lret
dec
pop
sbb
sahf
mov
call
shlb
fisttps
pop
push
lock
ja
jp
cmp
js
cmpsl
mov
add
dec
mov
push
dec
test
loopne
pop
scas
out
cmpb
sbb
cld
adc
testl
mov
sub
and
mov
ret
pop
les
or
bound
ficoml
movsl
and
add
sti
xchg
cli
ja
push
push
outsb
rcll
sub
cwtl
inc
dec
add
clc
daa
and
cli
push
inc
int
mov
loope
fs
mov
xchg
aaa
cmp
fs
push
add
aam
hlt
int3
pop
jg
mov
and
jo
sqrtps
sbbl
jne
pop
ret
jg
loop
push
xchg
in
pop
negb
mov
insl
ror
and
call
xor
ret
shrb
into
cld
sbb
mov
outsb
pop
jl
xchg
outsl
shll
push
pop
sub
shlb
mov
sub
nop
daa
pop
ficoms
pop
fcoml
mov
mov
dec
mov
gs
cmp
imul
es
in
daa
xor
fildll
cmp
ljmp
scas
lret
pushw
or
int
lahf
popf
fstps
and
mov
jbe
jno
fsubrp
sarl
add
sub
stos
and
push
mov
add
leave
pusha
cwtl
cmpsb
les
xchg
push
lock
aad
stos
mov
out
jne
jb
push
loope
movsb
out
call
xchg
pop
or
imul
ss
imul
outsb
inc
push
inc
insb
ja
push
fsts
adc
in
stos
xlat
pop
popa
jb
adc
inc
cmpsb
inc
and
xchg
pop
fcmovnbe
xchg
sbb
mov
mov
arpl
imul
daa
adc
mov
inc
fisttps
xor
clc
test
cmp
mov
jg
jp
jg
mov
test
stc
mov
mov
mov
lock
mov
call
fwait
neg
pop
sar
jp
dec
push
outsb
dec
movsl
addb
pop
cmp
imul
call
adc
jg
scas
movsl
adc
int3
push
push
sbb
and
xchg
push
or
js
lcall
in
cmpsl
jg
js
adc
xchg
in
imul
jg
adc
fisubrs
cs
pop
pop
lret
and
mov
imul
mov
xchg
fs
loop
jns
popa
mov
xchg
pop
cli
push
stos
dec
xchg
rorl
xchg
cmp
push
or
add
pop
rcrb
faddp
mov
mov
inc
push
lds
inc
push
in
test
adc
repz
inc
mov
sub
pop
sub
inc
add
or
push
call
enter
mov
pop
ja
xor
or
xor
lds
cmc
or
xchg
lahf
and
xchg
push
xchg
rclb
dec
mov
fnstsw
nop
aam
hlt
sbb
popa
mov
sub
mov
fdivl
das
bound
jbe
mov
nop
or
in
test
cmp
or
lock
inc
lods
mov
arpl
lahf
mov
xor
jmp
add
cmp
push
imul
sub
aam
xchg
dec
and
cltd
adc
insl
lahf
aaa
clc
inc
lds
shl
loop
sub
hlt
push
or
scas
add
leave
imull
dec
js
mov
push
fmull
bound
xor
push
loop
sub
xchg
dec
arpl
xchg
dec
sti
sbb
test
pop
cmp
imul
push
mov
pop
cli
das
ret
and
gs
cmp
xor
imul
dec
jmp
int3
out
push
daa
push
jne
and
out
xchg
in
nop
sub
xchg
int
mov
das
sub
sub
mov
aad
sbb
adc
xchg
insb
aaa
push
cmp
jbe
mov
insb
aad
cmp
in
imul
mov
stc
xchg
es
cmp
cltd
mov
pop
inc
enter
subb
adcl
mov
dec
dec
mov
or
mov
jns
fistl
mov
mov
jg
sub
mov
pop
or
xor
ds
and
sub
push
mov
push
cmpsb
movsb
pcmpgtb
fsubs
loopne
cmpsl
mov
mov
icebp
fimuls
std
xchg
pop
js
jp
mov
pushf
mov
bound
dec
mov
pop
pop
jae
gs
test
pop
add
or
xchg
lcall
je
into
xchg
mov
cmpl
jbe
push
sahf
mov
mov
adc
pop
es
sbb
cmp
sub
cmc
mov
dec
jo
ljmp
push
shll
xchg
adc
sbb
sbb
sbb
leave
out
adcb
sarb
push
cmp
in
ja
dec
mov
subl
mov
in
jge
int3
xor
loop
stc
inc
dec
jbe
stos
adc
and
movsb
cmc
cmp
ret
aaa
js
adc
jns
push
sub
frstor
adc
adc
adc
fcmovu
push
adc
adc
push
pushf
dec
sub
jo
stos
lock
vsqrtpd
paddq
mov
xor
mov
ds
sarl
syscall
and
jae
cmp
sahf
xor
rolb
cmp
test
mov
xchg
aaa
push
lods
in
ljmp
cmp
popa
dec
push
iret
cmp
jnp
mov
arpl
cld
cld
cmp
fstps
sbb
cmp
or
test
mov
xor
popf
repnz
data16
nop
frstor
xchg
and
jnp
pushf
mov
pop
sbb
test
outsb
pop
xchg
sbb
xchg
sbb
out
mov
mov
imul
adc
sub
jbe
mov
in
mov
mov
push
cmp
out
dec
ss
xor
sbb
rorl
xchg
lret
mov
sub
add
int
add
inc
mov
incl
jmp
mov
fxch
ljmp
mov
scas
pop
shrb
cltd
loope
call
adc
push
sub
xor
daa
cmpsl
and
cmp
inc
lock
es
lcall
aaa
fsubl
push
les
ja
pop
push
inc
call
inc
sti
sti
inc
je
cli
xchg
dec
cmp
scas
mov
in
push
sbbl
ja
mov
loopne
dec
adc
or
xchg
cld
mov
push
sub
push
xchg
jb
or
movsb
jge
sbb
xchg
mov
dec
sub
pop
cmpsl
mov
jp
add
jl
xchg
push
iret
insb
std
lcall
pushf
mov
in
popa
jnp
dec
adc
pop
pop
dec
dec
ret
iret
xchg
test
rcrl
add
das
jg
cmp
xchg
adc
or
imul
in
add
imul
je
mov
pop
enter
orl
test
fwait
pop
arpl
xchg
ljmp
push
or
mov
jbe
faddl
mov
adc
xchg
jge
iret
shl
loopne
test
sub
orl
outsb
mov
push
lods
cmpsl
dec
jmp
int
shrl
fcoms
repnz
inc
dec
pop
xor
jns
pop
aad
std
lea
cmc
pinsrw
popf
aaa
fldl
rcrb
stos
and
jl
jecxz
jmp
xlat
sub
addb
insl
sub
ss
sub
repz
cwtl
daa
std
sub
call
lea
mov
mov
add
lds
or
cmp
mov
sub
add
js
repz
stc
sub
and
push
push
sbb
or
movsl
iret
jl
mov
mov
cli
rorl
negb
ja
addr16
nop
pop
push
xchg
inc
test
cwtl
jae
xchg
push
jmp
stos
pop
inc
pushf
faddp
mov
adc
lock
sti
and
sbb
sahf
or
jg
mov
mov
test
hlt
pop
out
rol
pop
lods
inc
or
push
or
add
movsb
hlt
lock
xor
stos
or
popf
pop
outsb
clc
std
fwait
adc
cwtl
push
cmp
pop
sbb
outsb
sahf
popa
adc
dec
nop
sub
clc
loop
mov
sbb
add
push
aad
dec
popf
lahf
sub
data16
test
lsl
pop
adc
sbb
test
jg
loop
test
repnz
mov
addr16
insb
pusha
mov
aaa
push
sbb
std
and
adc
pop
and
cmp
mov
jge
mov
in
push
xor
stos
mov
lcall
and
lods
ret
push
pop
push
cmpsl
and
pop
addl
out
sbb
cmpsl
cmp
mov
insb
dec
pop
mov
sub
icebp
sti
jb
loope
push
fs
mov
mov
jb
cmp
pushf
int3
xchg
lds
xchg
add
xchg
xchg
repz
mov
jl
shr
testb
je
xlat
je
bound
pop
notl
jmp
es
mov
jge
pop
sti
pop
int3
cmp
inc
int
add
push
orl
jno
shr
les
ret
fistpl
lret
mov
adc
inc
dec
and
or
sbb
popf
jecxz
nop
out
push
stos
rorl
add
and
mov
jecxz
or
stos
ds
movsb
mov
mov
adc
xchg
les
xorb
mov
mov
cltd
xchg
jnp
repnz
adc
loope
cmc
movlps
adc
inc
jp
pop
lret
and
das
add
mov
jl
das
adc
loope
adc
fcoms
out
mov
add
mov
xor
cmp
in
cmp
xor
mov
mov
push
mov
xchg
icebp
divb
aas
push
outsb
mov
pop
shl
xor
shrl
stc
lock
cmp
sub
in
adc
popf
leave
mov
lods
fstl
pop
test
jge
mov
mov
inc
ret
or
js
and
push
fidivrl
jmp
sbb
dec
adc
nop
add
dec
pop
dec
pop
loopne
dec
fwait
loop
outsl
fcom
push
int3
mov
sub
cld
adc
xor
out
ss
bound
cmp
mov
out
cmp
jg
sub
mov
add
sarl
icebp
xchg
add
out
lea
push
sbb
dec
ret
add
je
lock
and
mov
mov
push
jl
test
es
dec
mov
stos
mov
xchg
add
jp
mov
xor
insb
xchg
jns
jp
dec
and
repz
in
dec
mov
and
pop
and
lret
and
jge
dec
xchg
mov
gs
mov
mov
cmp
mov
add
lea
out
mov
adc
aaa
push
pextrw
fsubrs
push
into
sub
sub
fwait
pop
and
sti
pop
jnp
mov
loope
or
int3
das
movsb
xchg
xchg
shrb
jne
arpl
mov
push
xchg
dec
in
cmc
push
jp
mov
mov
jne
inc
cli
push
or
cmp
push
jp
mov
mov
jne
inc
cli
push
or
cmp
push
jp
mov
mov
jne
inc
cli
push
or
cmp
push
jp
mov
mov
mov
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
xchg
lds
cmc
filds
mov
sti
add
ss
add
adc
xor
xchg
mov
cmpsb
cmc
test
xchg
mulb
push
push
ss
pusha
inc
adc
xchg
lds
cmc
test
xchg
mulb
and
sbb
xor
inc
loop
out
mov
iret
nop
fnstcw
xchg
jp
cmpsb
insl
mov
sub
fisttpl
icebp
jp
jns
dec
pop
js
xchg
sbb
sub
mov
add
aaa
fs
out
xor
jle
jbe
inc
adc
mov
sub
test
stc
xchg
dec
mov
mov
scas
lods
out
out
mov
push
adc
in
xor
xor
pop
clc
sub
out
or
insl
mov
mov
lods
jne
push
movb
pushf
jle
mov
std
std
lret
push
das
idivb
inc
inc
push
adc
adc
inc
mov
fs
xchg
mov
cmpsb
cmc
test
xchg
mulb
push
push
ss
add
data16
lock
loopne
mov
test
shll
dec
inc
arpl
adc
push
loopne
repnz
mov
shlb
and
dec
add
daa
mov
inc
or
icebp
test
lea
movsl
out
push
inc
push
push
ss
add
xor
xchg
mov
cmpsb
cmc
test
xchg
mulb
push
push
ss
add
xor
out
sub
xor
cmpsb
bnd
movsl
push
aad
or
dec
mov
dec
sahf
xlat
push
and
loope
ficoms
pop
nop
mov
sub
sbb
mov
fidivrs
lret
jmp
dec
int
mov
nop
push
scas
cltd
mov
dec
add
es
divl
push
sti
test
repz
cmp
push
mov
test
or
ds
jle
xchg
lods
out
test
rorl
inc
fs
jmp
test
int3
dec
pop
ss
les
lahf
inc
inc
push
sbb
lahf
mov
fldenv
jecxz
popf
fcoms
pushf
jno
xchg
sub
mov
xchg
ds
xchg
loopne
pop
repnz
cs
sub
ss
mov
mov
mov
stos
adcb
pop
sbb
pop
mov
jne
jg
or
pushf
xor
lret
pop
enter
cmp
dec
idivl
jp
pushf
ror
shl
dec
sub
sbb
dec
int
enter
jae
jl
push
popf
fstl
pop
int
dec
fimuls
imul
mov
fildl
ficoms
shlb
pusha
leave
xchg
push
xor
movsb
iret
jnp
leave
aaa
and
xor
and
addb
fstpl
jecxz
sti
adc
jl
lcall
sub
outsl
out
ljmp
mov
fnstcw
lret
frndint
imul
sub
sub
sahf
adc
in
ljmp
cmp
sbb
loop
and
cmpsb
fcomp
outsl
outsl
imul
and
cmpl
cmpsl
mov
mov
cmc
push
fstpl
jle
sbb
divl
out
sar
cmp
ds
adc
dec
adc
jg
loop
fsubl
cmp
push
xchg
stc
lret
insb
xor
in
sbb
pop
and
hlt
cld
in
push
lcall
call
daa
or
mov
sar
ljmp
sbb
lds
xlat
testl
jns
in
mov
xchg
mov
inc
mov
iret
push
xor
or
dec
into
xor
std
je
add
addl
xchg
push
or
out
dec
jecxz
cmp
xchg
cld
mov
sbb
or
repz
adc
jne
faddp
xchg
mov
push
fadd
adc
bnd
pop
icebp
lret
add
shr
in
xchg
inc
mov
scas
daa
or
dec
outsb
lods
rcrl
ja
ret
insl
insb
adc
or
jne
xchg
pop
xor
fcmovnbe
outsb
mov
sti
ss
mov
out
jnp
stos
nop
aad
or
movsb
cmpsb
gs
imul
xor
ret
rcl
mov
js
lret
cmpsb
cmc
inc
out
dec
pop
outsb
and
push
not
pop
or
imulb
cmc
xor
mov
sbb
aam
jg
loope
adc
add
xor
mov
lea
stc
fdivs
and
xor
adc
add
in
mov
or
mov
jge
jb
adc
mov
cld
add
int
mov
lret
incl
inc
scas
int
imull
and
pop
jbe
loop
imul
dec
cld
add
aaa
nop
mov
clc
sub
jmp
mov
adc
xlat
and
ljmp
pop
inc
xchg
lds
dec
and
inc
xchg
mov
inc
or
add
loope
sti
imul
aas
cmp
fldl
mov
cmp
pop
out
hlt
sub
xchg
inc
pop
sub
jns
ljmp
ljmp
add
xchg
or
jno
add
jns
movsl
popf
decl
icebp
mov
mov
stos
xor
aas
mov
cmp
mov
mov
test
jecxz
push
pop
cmp
fstpt
xchg
lret
ficoml
fdivl
jmp
jecxz
mov
imul
negb
mov
stos
pop
into
lahf
lock
aam
fisttpll
ss
bound
dec
fwait
add
jns
daa
cmp
cmpsb
inc
mov
dec
mov
fwait
adc
push
jmp
sub
pushf
jl
insb
mov
fildl
ja
je
dec
and
inc
test
sbbb
aaa
inc
outsb
xor
cmp
test
es
add
jnp
add
dec
cmp
adc
inc
xor
incb
pop
jl
cwtl
fwait
je
cmc
pop
jge
cmc
out
mov
fwait
int
push
push
cmp
inc
hlt
outsb
lea
orb
das
dec
xor
cmc
mov
cli
sub
fcmovbe
pushf
out
in
outsl
xor
dec
xchg
add
sti
xchg
and
inc
cmp
adc
pop
push
test
roll
aam
and
les
or
pusha
pop
xor
rcll
sub
loope
and
push
cmp
dec
cmp
out
jge
leave
sub
inc
jp
sbb
lcall
leave
sti
shrb
mov
xchg
cmp
adc
sbb
stc
and
mov
out
add
jns
das
lret
call
test
push
loope
cmpsb
mov
je
add
jbe
inc
outsb
push
jnp
shrb
push
mov
sub
arpl
into
test
mov
dec
dec
or
aaa
cmp
xchg
or
adc
mov
in
dec
mov
out
loop
jl
mov
arpl
dec
aaa
cmpb
pusha
call
mov
imul
inc
and
inc
xchg
out
xchg
leave
std
push
pop
mulb
cltd
imul
mov
pop
call
sti
popa
test
or
int3
mov
sbb
fsubrp
xchg
and
mov
adc
and
and
push
pop
clc
lods
cmpsl
push
call
stc
insl
mov
ret
mov
lods
dec
pushf
std
jle
or
pop
add
cmp
repnz
js
gs
mov
sub
push
xor
lahf
mov
sbb
add
mov
push
push
cmp
rcrb
xchg
out
insb
scas
hlt
frstor
mov
loop
inc
jmp
adc
mov
push
and
sub
sbb
popf
js
js
jns
sahf
ficomps
insb
sbb
jge
jbe
cmpsl
or
push
xchg
call
inc
test
cmp
testl
cmpsl
jmp
xchg
iret
lcall
xor
stc
out
sub
push
cs
and
cmp
mulb
xchg
jno
cmp
nopl
push
cmpsb
shrb
sbb
cltd
cmc
fstpt
aam
jecxz
inc
dec
outsl
adc
stc
test
pop
out
pop
repz
inc
inc
ss
jns
push
and
scas
mov
ret
les
mov
mov
xor
int3
push
outsb
aam
movsl
shl
sbb
ret
push
add
leave
lcall
or
icebp
push
sbbb
mov
cmp
sub
loop
out
add
in
push
add
jno
in
test
out
dec
imul
popa
call
xchg
rcrb
roll
pop
mov
notl
test
cmp
jmp
push
or
icebp
jp
fistps
mov
add
lods
ret
pusha
mov
push
movsb
sub
lret
xor
test
adc
test
lods
mov
cmp
in
sub
or
pop
jmp
das
xor
or
adc
and
lahf
inc
jecxz
mov
push
or
call
xor
inc
call
xchg
dec
out
hlt
inc
bswap
fwait
jae
jge
repnz
xor
jl
jbe
mov
jae
popa
ds
mov
hlt
mov
lds
xchg
cli
inc
out
jle
je
sarl
push
sti
int3
add
mov
sub
lods
inc
pushf
ret
and
add
jge
gs
push
scas
sbb
xchg
push
mov
mov
imul
int
lock
fnstsw
dec
cmp
insl
jecxz
sahf
and
rcrl
js
cmp
test
popf
mov
jmp
push
push
ss
dec
stos
push
jns
xchg
sub
add
jnp
xchg
inc
sbb
imul
sub
or
jae
mov
and
sarb
jns
pop
mov
test
ds
mov
mov
push
or
inc
in
mov
jne
test
pop
ret
cmpsb
lret
sti
push
sbb
jnp
and
icebp
dec
sub
jp
mov
adc
and
mov
and
aas
cmp
mov
inc
lods
cltd
cmp
mov
std
jno
sahf
sahf
pusha
xor
sub
outsb
leave
and
mov
mov
movsb
sti
mov
je
das
mov
jle
mov
cmp
jge
pop
les
inc
xchg
xchg
aam
xlat
mov
test
sbb
mov
loopne
mov
mov
cmp
unpckhps
mov
mov
cmp
hlt
leave
pop
pop
aad
negb
jo
pop
xchg
loop
icebp
xor
icebp
dec
mov
loop
adc
lahf
adc
cmc
shlb
out
test
sti
xlat
int3
out
movsl
ffreep
pop
aad
adc
mov
bound
les
rcrl
dec
mov
rorb
xchg
xchg
data16
mov
jg
xchg
std
loop
inc
in
lahf
add
aas
sbb
jle
inc
shr
mov
push
push
or
mov
jg
xor
pop
decl
call
pushf
mov
aam
inc
mov
jnp
ljmp
cmpb
mov
shlb
into
sbb
cmp
push
sti
add
mov
les
fwait
and
push
sbb
pop
xchg
or
sub
push
je
dec
into
inc
repnz
shl
clc
cmpsl
andb
inc
push
cmc
jne
jbe
mov
xor
pushf
cld
nop
cmp
mov
ja
in
lea
dec
push
leave
ds
pop
mov
je
hlt
mov
cmpsl
lahf
movsl
jge
fcomip
scas
clc
cmp
cwtl
inc
sub
or
cmp
xor
sahf
fidivl
insl
jmp
fcmove
loope
mov
insb
xor
aaa
cs
fs
jo
adcb
movzbl
push
sbb
shr
jo
sub
cli
mov
cmp
fidivs
into
divb
aad
or
push
and
jae
icebp
ss
lahf
or
push
add
shl
lcall
xchg
iret
xchg
cmp
cli
add
dec
arpl
or
mov
out
push
jno
cwtl
and
or
cmp
dec
jg
subl
insb
lret
fcomps
outsl
adc
jmp
sub
ss
mov
lret
lret
xor
fsubp
std
jnp
test
in
stc
xor
jnp
outsb
inc
pop
daa
add
cmpsb
cmp
sub
add
sahf
and
mov
outsl
push
pop
fnstsw
mov
xchg
leave
dec
pushf
push
loope
jne
inc
pop
mov
faddl
aam
stc
nop
lcall
gs
loopne
or
or
das
push
jmp
sbb
dec
setle
adc
sub
and
nop
adcb
out
and
add
xor
insl
arpl
push
mul
add
xor
mov
sbb
sub
sbb
inc
mov
inc
dec
mov
xchg
fdivrs
inc
lock
jle
mov
add
push
ret
rclb
pushf
pop
stos
xchg
dec
ljmp
insl
mov
mov
or
cmp
cmp
iret
xor
mul
pop
sbb
pop
in
out
cmp
jbe
icebp
ss
js
pop
jbe
mov
pop
mov
fbstp
sbb
insl
shll
shl
cs
jge
mov
aaa
fidivs
adc
dec
mov
cmp
test
pop
cli
jecxz
shr
inc
int3
xchg
imul
sbb
pop
inc
mov
punpcklbw
cs
pop
jmp
pmullw
inc
pop
xchg
stos
popa
js
jb
jns
scas
cmp
loope
push
pop
mov
mov
icebp
mov
jns
rcl
popf
jb
add
daa
inc
rorb
dec
out
cwtl
mov
xacquire
mov
call
sbb
dec
icebp
lahf
or
test
mov
adc
mov
movsb
pop
xchg
lods
icebp
das
sub
mov
lret
xchg
or
cmp
jl
mov
cmp
jp
xor
inc
add
out
inc
rclb
cli
mov
push
nop
dec
dec
loope
shl
fdiv
mov
push
int3
mov
xor
fdivrl
jbe
adc
dec
lret
adc
nop
cmpsb
dec
sub
cs
bnd
mov
jne
cmpsl
pop
aaa
jecxz
push
int3
cli
adc
sbb
inc
popa
dec
mov
lock
xchg
out
or
cmpsl
mov
or
add
pop
clc
not
sub
add
rorb
dec
sbbb
xor
repnz
andl
lcall
ret
jbe
or
ss
ss
ss
mov
pop
sarl
xchg
adcb
push
enter
jle
jns
pop
mov
inc
imul
jl
lods
clc
stos
ljmp
idivb
les
push
shlb
testl
into
cmp
mov
scas
cmc
jg
inc
ret
sub
add
dec
lfs
lods
add
pop
pop
in
jne
pop
dec
lcall
sub
mov
in
adc
push
sti
scas
mov
call
out
test
ds
ret
popf
movsb
aaa
jbe
mov
ss
mov
mov
hlt
push
lret
scas
stos
cmp
insl
ficomps
mov
cmp
mov
sub
jg
add
mov
pop
jecxz
faddl
fidivrs
enter
dec
jbe
mov
push
pop
dec
dec
mov
dec
and
dec
or
dec
into
pop
dec
cmp
dec
mov
frstor
xor
add
dec
sub
shlb
adc
xchg
jg
shlb
or
js
es
cmpsl
xchg
aad
pop
push
lock
fiaddl
xor
cltd
push
out
outsl
ret
mov
inc
cmp
insb
inc
add
in
ljmp
call
push
mov
cmpsl
mov
dec
push
jg
dec
int
repz
addb
sbb
movsb
push
lret
int3
aas
les
cmp
mov
dec
adc
ljmp
pop
mov
or
dec
into
jbe
dec
sti
fs
cmp
dec
and
js
je
mov
in
jbe
cmpsl
ror
outsb
jnp
test
sub
movsb
adcb
mov
and
nop
pop
bound
aaa
addl
xlat
mov
mov
or
cwtl
ret
fdivl
mov
sahf
pusha
ljmp
xchg
cmp
sahf
or
icebp
inc
pop
pop
mov
cmp
cs
xchg
xor
or
or
fsubr
jge
fsubr
cli
test
gs
flds
mov
jle
inc
in
mov
gs
lea
stos
mov
fimull
fidivs
insb
popa
xor
pop
and
xchg
repnz
test
loope
cwtl
in
or
mov
inc
mov
cmpsb
xchg
and
mov
mov
xor
xchg
int3
jle
leave
mov
mov
mov
xor
and
jae
sbb
sbb
pop
fisubl
mov
lds
add
leave
sahf
out
dec
idivl
inc
arpl
push
lcall
mov
or
stc
test
cmp
icebp
cltd
jg
sub
push
shlb
dec
int3
les
pop
sbb
adc
mov
dec
orb
out
pop
js
mov
loop
aaa
cli
mov
icebp
into
loopne
std
cmpsb
mov
arpl
or
stos
repnz
enter
cmp
inc
sahf
lods
mov
and
mov
pop
fsts
ja
je
ret
or
push
nop
mov
insb
scas
push
imul
dec
stos
cmp
fucomp
ljmp
inc
xchg
or
jns
outsb
mov
mov
movhps
cs
lret
xchg
and
ret
xchg
cmp
push
add
shll
orl
mov
xchg
dec
fwait
lock
jg
fadds
push
fistpll
mov
push
out
dec
popf
call
dec
mov
inc
jle
ret
inc
mov
adc
nop
int
mov
fimuls
ss
into
mov
setp
leave
orl
xor
rcl
xor
cmpsl
ds
and
int
ljmp
inc
xchg
into
mov
stc
mov
cs
int
and
inc
ja
and
xlat
mov
into
shll
mov
pop
adc
inc
dec
xchg
mov
lock
lea
mov
xor
adc
rorb
xlat
aas
arpl
inc
and
adc
mov
or
int
push
sbb
cli
pushf
mov
iret
mov
out
jb
loopne
xor
lods
rorb
or
sbb
sahf
lods
inc
sahf
loop
enter
in
into
dec
scas
cmp
imul
jecxz
movsl
test
in
xchg
pusha
push
jmp
sub
dec
inc
and
lcall
sbb
leave
mov
push
xchg
and
dec
mov
dec
xor
sbb
sahf
jns
test
sub
mov
mov
loop
hlt
sbb
cmc
sub
icebp
arpl
pop
pop
jnp
jecxz
test
xchg
clc
mov
mov
sahf
ja
adc
dec
hlt
sub
pop
sbb
rcrb
test
aas
xchg
icebp
mov
mov
push
dec
int
xor
add
add
push
dec
jl
mov
push
rcl
inc
sar
psubq
les
cmp
dec
leave
orl
and
sbb
push
inc
pop
test
jb
sub
mov
pop
mov
mov
push
xor
sahf
ja
gs
mov
cmc
mov
push
iret
aam
test
enter
dec
xor
xchg
movsl
bound
or
and
mov
ds
mov
cmpb
adc
xor
popf
push
gs
push
jecxz
jae
jle
sbb
jp
cmp
xor
or
lds
lcall
call
loopne
and
push
and
jo
sahf
jbe
lock
sub
fidivrs
xchg
nop
rorb
sub
jp
xchg
lahf
leave
adc
dec
rcrb
outsb
mov
ss
pop
sahf
into
data16
insb
xor
fiadds
cmp
loope
or
sbb
jae
push
jg
cmp
mov
icebp
lcall
sbb
je
popa
dec
sub
jecxz
out
pop
stc
push
mov
dec
inc
pop
lods
je
outsb
push
je
ret
sub
dec
fsubrl
xchg
sbb
xor
movsb
jge
movsl
or
movsl
or
shr
cmpsb
test
pop
mov
push
int3
inc
scas
sahf
mov
jns
aaa
fs
mov
inc
dec
mov
cli
and
sahf
loope
adc
cld
sub
inc
pop
push
mov
cmpsl
mov
imul
imul
imul
dec
stos
sub
ret
cmp
enter
xchg
xchg
adc
push
shl
mov
mov
push
mov
pusha
lods
push
cmp
addr16
adc
ljmp
jge
push
data16
inc
jno
adc
out
into
in
ljmp
mov
mov
fucom
lahf
xor
leave
cs
pop
in
mov
add
push
pop
pushf
mov
punpcklwd
es
sub
incl
gs
mov
xor
data16
push
addl
push
pop
scas
xchg
dec
inc
pop
dec
pop
adc
aaa
idiv
rcrb
and
and
or
sbb
addr16
push
mov
rclb
pop
sbbb
jp
sahf
push
inc
cmp
and
mov
lock
sahf
mov
and
test
sub
sub
xchg
sahf
sbb
xchg
ret
mov
flds
lock
cmp
insb
addb
sbb
mov
push
scas
pop
push
aas
push
push
mov
outsl
dec
and
out
cs
fnstenv
push
mov
push
xchg
mov
or
clc
call
xlat
dec
push
cmp
inc
jl
xor
std
shrb
or
lret
sahf
adc
adc
lea
add
mov
add
mov
and
jb
pusha
scas
push
sbb
clc
pushf
iret
xor
pop
add
add
and
mov
mov
in
ds
test
xchg
adc
pop
pushf
sbbl
outsl
jnp
jns
adc
jae
les
add
sbb
mov
lock
dec
dec
mov
aad
in
cmc
test
xchg
mulb
push
push
ss
add
xor
xchg
mov
cmpsb
cmc
test
xchg
mulb
push
push
ss
add
xor
xchg
mov
cmpsb
cmc
test
xchg
mulb
push
push
ss
jne
add
xor
xchg
mov
cmpsb
cmc
test
xchg
jbe
data16
inc
stc
lcall
into
ljmp
xchg
test
jb
add
leave
in
or
sub
in
out
pop
int3
dec
xor
sub
sbb
or
jl
insb
stc
pop
xor
mov
cld
or
dec
out
lods
mov
or
icebp
jo
mov
mov
pusha
in
jl
ss
stos
sub
fstps
jnp
divl
sub
pop
cmp
jecxz
fs
sbb
test
xor
mov
test
sub
xchg
sbb
enter
push
xlat
arpl
idivb
jge
pop
test
cmp
sbb
mov
hlt
jb
ret
je
cld
cmp
arpl
testb
popa
shrb
pop
xchg
or
out
push
popa
pop
fidivrl
xchg
stc
pop
lods
dec
dec
test
out
test
out
in
leave
cmpsb
xor
cmp
push
jecxz
int3
std
cmpl
pushf
sbb
add
jl
cld
arpl
mov
jnp
jns
or
fucom
popa
test
dec
mov
inc
push
push
inc
popf
out
idivb
in
mov
scas
sub
sbb
pusha
mov
jmp
dec
cmp
xor
adc
test
dec
mov
in
adc
sbb
fstl
sub
sbb
subb
mov
pop
ljmp
xor
in
dec
stc
jl
or
lea
insb
std
dec
int3
cmp
insb
jmp
mov
sbb
fcompl
dec
cmp
sub
sbb
or
jl
insb
jmp
mov
sbb
fcompl
dec
cmp
call
mov
jb
ja
pop
sub
jmp
push
pop
push
adc
mov
bound
stc
ljmp
mov
aad
aas
push
pushf
xchg
cli
xor
sbb
and
out
rolb
xchg
dec
dec
xchg
loope
adc
xchg
enter
and
fwait
jmp
push
dec
popa
cmp
cmp
sub
mov
fs
and
push
dec
jl
mov
push
je
mov
lock
xchg
dec
add
data16
mov
adc
pop
out
scas
sbbl
mov
dec
loope
pop
loopne
int
xchg
leave
sbb
cmp
push
jp
shll
mov
cli
mov
arpl
xlat
aad
fstpt
pop
push
adc
loop
jg
aad
inc
add
jmp
or
dec
sub
gs
push
inc
adc
mov
into
rol
sbb
enter
sbb
shll
and
sub
js
nop
jne
jb
fs
out
das
mov
dec
or
scas
in
stc
ds
int
push
jne
leave
sbb
test
sbb
js
xor
inc
adc
inc
stos
dec
push
clc
dec
pop
xor
dec
call
and
movsb
push
data16
bound
xchg
xchg
push
movsb
sub
sbb
or
mov
in
ret
stos
adc
std
cmp
sbb
stos
call
dec
adc
in
cltd
cmp
inc
aaa
cmp
dec
adc
mov
push
andb
push
lret
sub
fsubr
movsl
ret
push
shll
cmp
xchg
dec
fwait
xchg
orl
in
push
cld
ss
sub
mov
push
xor
xchg
xchg
inc
fdivrs
push
sbb
clc
jl
and
add
outsl
xchg
cmp
dec
les
test
enter
ret
ljmp
sub
and
add
inc
popf
mov
movsl
sbb
pand
or
cld
jmp
iret
movsb
test
inc
stos
out
daa
mov
pop
push
int
sbb
shlb
call
pop
mov
ret
xor
test
adc
int3
outsl
cltd
arpl
pop
stc
cmp
lret
sub
sbb
fcoml
mov
mov
mov
jmp
dec
xor
or
pop
int
cmpsl
jecxz
pop
push
iret
inc
ljmp
or
jg
dec
inc
lret
mov
and
popa
add
les
into
add
add
movsl
dec
pusha
outsl
push
ffree
add
xor
mov
test
xchg
push
jmp
sti
mov
gs
mov
jp
dec
imul
rcrb
jne
xchg
in
repnz
sti
scas
xchg
ljmp
xlat
add
and
in
sub
dec
pop
cmp
ja
lret
ljmp
fildll
dec
inc
push
std
mov
lea
sbb
push
adc
xchg
cs
arpl
movl
in
aas
ficoml
into
int3
fs
cmc
mov
cmp
jl
dec
or
cmp
adc
sbb
xor
les
notl
cs
lahf
iret
push
jmp
add
ja
lods
cmp
bound
pop
pop
adc
add
lock
leave
es
add
mov
dec
inc
es
popa
jns
stc
in
push
into
mov
xor
negb
add
or
test
ja
mov
or
mov
dec
lock
and
mov
cmp
jmp
sub
std
adc
mov
cltd
sub
dec
dec
movsb
cs
jmp
mov
dec
jmp
cmp
in
into
sbb
insl
sahf
jle
addr16
cmp
push
jbe
ret
dec
mov
repnz
sub
shrb
enter
rcll
and
push
xchg
xchg
mov
mov
hlt
and
nop
loop
cmp
mov
clc
cmpsb
jmp
in
outsl
pop
icebp
repz
fs
dec
test
cmpsl
ficomps
pop
gs
mov
jl
inc
add
repnz
adc
sbb
push
adc
imul
jp
push
xchg
fimull
insb
push
lock
stos
testl
inc
mov
data16
push
mov
and
and
out
outsl
std
mov
call
fucomi
movsb
push
sub
mov
xor
push
push
incl
stos
xor
inc
push
cmc
push
mov
call
add
or
fcoms
nop
mov
imul
pop
aaa
fisubrl
inc
ljmp
in
orl
pusha
enter
rclb
jge
mov
ja
lods
mov
imul
into
shlb
cltd
scas
dec
xor
jbe
or
pop
call
popf
iret
cs
popf
sbb
enter
push
sbb
std
xchg
call
lcall
mov
jae
movsb
xchg
pop
mov
inc
negb
pop
mov
imul
add
mov
push
lcall
lahf
lcall
cmpsb
mov
rolb
iret
xchg
ds
in
ja
mov
mov
imul
lock
mov
pop
inc
push
frstor
leave
fisttpll
mov
inc
cmp
bound
into
pop
stos
and
jle
mov
jbe
jecxz
add
popf
push
cmc
and
call
data16
mov
mov
nop
jns
pushf
mov
les
sbb
jae
ja
pop
roll
mov
pop
fistpl
ds
leave
or
xor
lret
in
enter
mov
pop
xchg
fldcw
les
jae
lcall
adc
xchg
cmc
jns
dec
xor
inc
cwtl
mov
scas
repnz
es
xchg
in
mov
not
xor
rorl
jno
sub
push
dec
mov
inc
push
mov
jmp
dec
notl
xor
inc
lods
and
adc
scas
adc
jnp
push
xchg
icebp
mov
xlat
shlb
cltd
aaa
icebp
fdivl
call
out
lock
movsl
inc
add
bound
and
xor
jno
push
test
jge
mov
mov
push
or
int3
inc
mov
popa
lcall
popa
test
enter
xchg
cs
rcl
push
cwtl
stos
int3
call
sub
pop
movsl
jmp
cli
push
add
movsl
sub
mov
or
insl
dec
jl
and
add
jno
lods
inc
pop
jecxz
push
dec
nop
mov
rol
push
scas
dec
nop
push
daa
insb
jnp
xchg
out
mov
mov
imul
aad
inc
jl
movsb
mov
xchg
push
xor
aam
clc
cltd
lods
inc
add
out
add
sbb
in
cmpsl
divl
pop
add
or
push
jnp,pn
fcmovb
xor
daa
dec
push
jecxz
add
dec
in
adc
in
mov
add
pop
aad
rcrl
inc
mov
sbb
aas
pop
call
pusha
mov
adc
cld
out
push
add
ljmp
pop
or
sub
mov
pop
idivl
in
cli
adc
int3
inc
ss
aad
inc
es
mov
lahf
xlat
popa
test
shr
dec
dec
loope
inc
xor
mov
into
mov
daa
and
sub
popf
jmp
mov
cs
xchg
ja
cwtl
rcrl
mov
pop
xorb
test
mov
int
in
stos
jo
cmp
adc
lods
and
xchg
insb
cmpb
fsubs
push
add
dec
icebp
pusha
xlat
add
aas
lock
push
xor
mov
cmp
movsl
aas
pop
ja
push
inc
push
ja
xchg
mov
jae
iret
cmpxchg
gs
cmc
jp
es
xor
xchg
xor
in
repnz
in
dec
mov
sub
in
mov
xor
fiadds
loop
xor
mov
das
jae
into
in
cli
mov
sub
fwait
icebp
add
xchg
sbb
jg
push
push
repz
sub
cld
test
repnz
cmp
xchg
pop
movsb
test
cmpsl
in
out
mov
add
add
adc
in
xlat
mov
push
mov
rcl
or
jne
push
out
aaa
jecxz
sbb
inc
test
sub
clc
aam
ja
pop
xor
lock
insb
xchg
and
jmp
in
stos
lcall
out
or
outsl
test
icebp
loop
pop
in
loop
sbb
lcall
mov
pusha
adc
add
or
shr
xchg
xorb
mov
sbb
push
iret
pusha
inc
cmp
aaa
mov
enter
mov
ds
xchg
dec
mov
das
xchg
inc
das
push
das
add
pusha
in
shrl
jns
dec
sbb
and
pushf
fstps
shr
mov
bound
jg
ljmp
jbe
xchg
inc
xchg
pop
movsb
popa
dec
xchg
xchg
xchg
mov
sbb
test
dec
jecxz
sbb
mov
out
adc
cmc
std
dec
cmp
rcrl
sub
cltd
xor
fimuls
lcall
jecxz
cwtl
iret
inc
sub
sub
add
inc
sbb
cs
loopne
inc
adc
std
jecxz
insl
or
push
clc
jo
jp
aad
fbld
adc
sub
pop
lock
push
jl
js
je
and
hlt
inc
jmp
cmp
movsl
icebp
ljmp
or
push
fnop
fs
ret
lods
leave
scas
jo
mov
jl
dec
push
imul
mov
movsb
lock
pop
xor
pusha
ds
decb
gs
jno
int3
mov
or
in
sbb
adc
pop
lcall
insl
ficoml
into
aaa
mov
and
loopne
pusha
and
test
xchg
and
sbb
dec
sub
jge
push
ja
lcall
movsl
loopne
add
in
inc
adc
loopne
jbe
nop
sqrtps
arpl
adcb
das
gs
daa
rcll
and
jae
into
pop
xorb
sbb
int3
mov
arpl
rcrb
out
lret
or
mov
sbb
sar
out
sub
lds
and
rorb
pop
andl
dec
clc
add
cltd
jp
pop
lods
in
inc
cmp
insb
mov
xchg
jmp
jbe
in
fidivrs
jmp
notl
cmpsl
jle
pop
add
dec
push
mov
sbb
shr
enter
out
shrl
ja
rcl
push
push
jbe
insl
xchg
dec
and
push
cld
fsubrl
mov
jl
ds
xor
out
pop
sbb
std
stc
xchg
lret
popf
dec
xor
loopne
fistps
xlat
sbb
mov
xor
sub
fadd
sarb
sub
mov
in
xlat
les
iret
mov
out
cs
roll
jp
scas
adc
outsb
stc
jo
popa
lret
cmp
and
andb
divb
mov
push
lea
jp
sahf
cmpsl
sbb
jg
pushf
int
fisubl
out
mov
mov
xor
test
es
das
filds
push
es
xchg
inc
mov
jo
sbb
popf
push
xchg
xorb
mov
arpl
cmovo
movsl
test
scas
sub
movsb
sarb
adc
sbb
int
ljmp
adc
mov
lcall
inc
jecxz
mov
xor
adc
loop
and
sub
push
in
call
dec
hlt
push
mov
and
dec
push
rcr
add
xor
cmp
inc
or
jp
xor
jg
xor
dec
repz
loopw
mov
nop
push
outsl
push
stc
pop
rol
ds
icebp
lret
mov
xchg
adc
adc
pop
or
dec
pop
jno
lcall
jne
dec
neg
sub
data16
movsb
or
fldenv
mov
data16
and
pop
js
aam
or
add
mov
arpl
lcall
scas
scas
pop
jle
dec
gs
fbstp
xchg
fidivrs
mov
pop
xor
lods
push
cmc
lcall
arpl
outsb
and
test
cmp
jmp
cmc
insl
mov
int3
loope
cmp
xor
mov
pop
jle
in
sub
test
dec
sub
insb
push
pop
cltd
mull
jecxz
lret
cmp
add
add
and
rorb
push
enter
mov
cmp
daa
insb
mov
arpl
insl
fwait
sub
mov
test
sub
test
jge
arpl
cmp
test
jg
mov
and
cld
sub
lret
inc
xchg
fwait
es
pop
rorl
mov
add
xchg
test
xlat
loopne
xor
sbb
sub
fldenv
push
daa
mov
jecxz
lcall
xchg
xchg
sub
pop
mov
cmpsl
pop
int3
xor
aad
fstpt
das
mov
add
icebp
aad
cmp
insl
and
mov
mov
in
out
daa
inc
adc
jp
dec
and
sbb
add
jo
push
lahf
jp
aam
cmpsl
pushf
ss
and
xlat
xor
pop
pop
jnp
dec
cltd
aam
or
in
sbbb
int
pop
sub
movb
inc
mov
or
mov
add
adc
xchg
sub
dec
int3
pop
iret
lcall
push
cmp
into
mov
jg
fsubrs
inc
xchg
negl
jge
xlat
repz
push
arpl
push
jmp
out
inc
cli
mov
push
sbb
push
pop
mov
sbb
addr16
call
mov
sbb
sbb
out
pop
xor
mov
lds
add
xlat
pop
and
inc
pop
mov
xchg
lock
mov
ljmp
scas
popf
xor
xlat
mov
icebp
pop
sahf
or
test
nop
jae
push
push
cmp
call
mov
sub
cld
fists
movsl
pop
mov
jecxz
mov
jle
cld
sub
fnstcw
int
in
or
ljmp
push
enter
xchg
dec
fsubrs
pop
aad
xchg
sub
dec
push
dec
pushf
fstps
cmp
push
xlat
loop
cmp
sbb
mov
in
scas
sbbl
imul
add
movsl
out
mov
mov
in
out
mov
loope
es
and
add
pop
shll
movsl
mov
bound
sub
jmp
push
dec
cmpsl
jb
mov
mov
push
xor
mov
jmp
jmp
fistpll
sbb
imul
push
das
ljmp
int3
mov
or
adc
cli
push
je
pop
shll
pop
xchg
ret
mov
fldt
lahf
cmp
mov
jne
psubq
iret
stos
scas
cmp
add
repz
xchg
mov
add
push
popf
movb
enter
imul
push
or
xchg
push
stos
mov
mov
imul
ret
xorb
and
mov
fdivrl
pop
xlat
addr16
sub
xor
cmc
das
sub
in
mov
adc
adc
repnz
ret
in
adcl
jo
in
mov
popf
push
mov
sti
pop
daa
into
enter
mov
das
xor
aam
jns
lods
sub
mov
mov
jbe
int
push
adc
ret
mov
lods
insl
btc
imul
adc
leave
adc
sub
leave
xor
adc
mov
xchg
test
lods
pushf
xchg
xchg
xchg
jbe
add
jg
push
sbb
jbe
cltd
pop
xor
push
jne
push
ds
xchg
sahf
stos
shll
push
adcl
pop
push
sbb
enter
icebp
aad
negb
mov
sbb
jmp
imul
pop
out
pushf
call
pop
sub
fsts
mov
sub
pop
push
xchg
gs
xchg
push
push
lods
mov
or
insb
push
sub
cs
jecxz
out
lds
fs
lcall
ljmp
push
jbe
mov
pop
sbb
fdivr
and
adcl
mov
pop
pop
jb
lahf
mov
test
inc
pop
std
shrb
pop
and
imul
push
xchg
ja
ja
jne
nop
rcrb
data16
xor
pop
mov
mov
push
pushf
test
dec
inc
or
add
lret
ljmp
adcb
cs
jg
and
leave
insl
clc
jbe
lds
cmp
out
mov
shrl
adc
jo
mov
test
jge
test
mov
or
xchg
cmp
mov
fildl
andl
sbb
hlt
arpl
pop
mov
insb
push
lods
jb
sbb
jecxz
adc
mov
mov
mov
test
daa
and
push
adc
pop
add
mov
repz
push
push
popa
pop
push
arpl
or
xchg
push
bound
stos
dec
xor
mov
and
test
loope
sub
pop
lock
pop
test
xchg
andl
mov
or
xor
xchg
adc
mov
jo
ss
push
bound
js
mov
fidivrl
fdivl
imul
iret
and
stc
stos
clc
or
sbb
cwtl
mov
lret
in
mov
push
arpl
or
lahf
sub
inc
aas
popf
je
out
out
scas
or
mov
jmp
dec
lahf
outsb
clc
jns
es
xchg
push
push
sbb
inc
mov
push
cmc
fiadds
movsl
inc
jmp
pusha
push
andl
and
shlb
data16
in
out
push
frstor
not
popa
lret
pop
lds
stc
fistpll
mov
int
hlt
mov
jnp
je
dec
jecxz
mov
int
jg
stos
nop
xor
in
sub
xchg
and
movsl
dec
or
jg
mov
popf
xor
xor
push
sbb
inc
lods
notb
xor
rep
lret
ret
mov
xchg
pop
jnp
pop
lock
xchg
stos
inc
lds
adc
mov
lock
pop
xor
cmpsb
pop
ds
jbe
outsl
ficoms
jmp
movsl
leave
dec
or
outsl
lret
adc
dec
cmp
aaa
test
imul
aaa
jo
fstps
je
xor
nop
clc
lcall
mov
and
xchg
pop
in
cmp
mov
stos
adc
and
push
icebp
and
sbb
repnz
insb
pop
dec
inc
ss
mov
ret
and
xor
xor
pop
mov
xchg
out
jne
mov
jo
inc
sub
pop
insb
cmc
mov
push
fs
adc
sbb
mov
daa
push
test
pop
sub
arpl
dec
adc
push
in
pusha
and
enter
div
pop
loop
out
int
adc
lret
xchg
push
jae
pusha
xor
sub
push
inc
add
mov
add
pop
inc
pop
xor
popl
jge
jp
or
xchg
rcl
cmp
shl
xchg
les
or
sub
cltd
lock
inc
mov
xchg
and
cmpsl
int
cmp
xchg
rolb
sub
pop
or
mov
ljmp
push
std
outsl
xor
test
fmuls
lcall
arpl
or
popf
bound
xchg
push
add
nop
mov
jmp
xlat
pop
ffreep
js
inc
lea
or
rcrb
sub
arpl
mov
xor
movl
jnp
mov
cmp
push
push
cmp
pop
jne
inc
fcompl
sbb
inc
test
imul
jno
inc
mov
test
lods
xchg
push
mov
push
push
scas
dec
adc
pop
enter
pop
sbb
fcomps
xor
imul
test
fcomip
lds
inc
push
mov
mov
or
inc
fiadds
aad
mov
add
rcrl
lods
dec
push
xchg
cli
mov
aam
cmp
pushl
out
mov
mov
mov
imul
pop
mov
insb
xor
nop
loop
sti
add
dec
cmovl
mov
xor
pop
popl
or
adc
jl
pop
mov
lock
mov
arpl
icebp
rorl
popf
xor
cltd
scas
gs
rcr
test
in
popf
and
mov
inc
adc
push
icebp
pusha
hlt
push
inc
push
popf
pop
in
mov
stc
insb
jmp
mov
sbb
fcompl
dec
cmp
sub
sbb
or
jl
insb
jmp
mov
sbb
fcompl
dec
cmp
das
test
jge
push
leave
mov
sbb
imul
mov
and
jl
jl
pop
fxch
or
mov
icebp
fs
and
xor
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
cmp
jnp
sub
nop
fmull
mov
cmp
add
pop
add
or
add
push
add
xor
jecxz
xor
scas
add
add
add
lret
add
sub
xor
push
add
add
add
adc
sbb
add
stos
add
incb
stos
add
add
rolb
add
cmpsb
add
js
xor
push
add
add
roll
add
push
add
push
add
add
add
add
xchg
add
add
add
adc
inc
add
add
add
add
mov
inc
add
add
add
add
dec
add
add
jle
flds
push
add
add
add
pop
add
add
add
sbb
add
add
add
add
mov
sbb
cs
add
xchg
add
rolb
add
daa
add
add
add
add
add
add
add
iret
add
add
xchg
xchg
add
add
add
push
add
sbb
enter
roll
add
push
add
pop
add
xor
push
add
lret
add
sub
cmp
cs
add
xchg
add
add
sbb
movsb
add
add
add
ret
add
add
add
add
inc
add
or
add
add
inc
add
push
add
js
add
mov
add
ljmp
add
add
les
imul
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
and
fiaddl
lret
add
add
add
add
add
sbb
mov
add
add
nop
add
add
movsb
add
js
push
add
add
ret
add
add
add
add
add
inc
add
add
movsb
add
push
add
add
daa
add
nop
add
add
add
add
add
add
pop
add
add
add
add
or
push
add
add
aam
mov
dec
add
add
add
add
cmp
sub
sbb
or
add
add
add
add
push
add
add
cmp
movsb
add
mov
add
add
add
add
mov
add
insl
add
add
lret
add
add
add
add
add
add
add
add
add
popf
add
add
add
add
sbb
inc
add
add
add
add
push
add
add
push
add
add
dec
add
cmp
add
add
out
add
add
add
add
add
movsl
add
and
str
add
add
xor
fiaddl
stos
add
add
add
add
add
stos
add
add
add
add
sub
add
add
add
add
push
add
add
add
add
pusha
add
add
add
add
add
add
add
or
dec
add
add
mov
sub
push
add
add
imul
sbb
mov
cmp
das
or
mov
xchg
cmp
jge
ljmp
or
in
xor
or
push
mov
repz
cmp
sub
dec
xchg
xor
and
jo
xchg
mov
testl
andl
shrl
cmp
add
xchg
cmp
mov
jmp
push
leave
dec
adc
pop
fiaddl
add
mov
int3
hlt
jge
xorb
out
mov
fdivrp
pop
loop
les
out
mov
cmp
xchg
adc
mov
cld
adc
xor
mov
xchg
clc
das
js
stc
pop
enter
test
inc
sub
mov
int3
jmp
pop
pop
out
lods
insl
test
inc
sahf
jns
mov
pop
sbb
jns
add
or
clc
movsb
test
inc
mov
xchg
push
pop
inc
stc
mov
mov
pop
mov
loop
shrb
ficomps
cmp
push
insb
xor
mov
adc
sbb
dec
das
mov
outsb
add
popf
mov
out
jl
mov
pusha
clc
fstps
mov
lahf
dec
insb
fstpt
js
xchg
jnp
movsb
popf
call
push
in
pusha
dec
push
divb
xor
cs
outsb
rcrb
subl
and
xor
push
inc
or
or
mov
mov
mov
test
lcall
stos
hlt
jno
or
inc
cltd
push
inc
gs
cmc
out
xlat
std
mov
lret
loop
in
nop
and
xorl
sbb
loope
enter
cli
pusha
std
leave
add
jne
fiaddl
frndint
dec
loop
fs
mov
nop
push
les
aaa
push
fwait
xchg
daa
testb
int
outsb
sub
inc
xor
fildl
rol
into
cmp
shlb
sub
sbb
mov
xchg
outsb
std
ficomps
outsl
adc
in
mov
mov
daa
lcall
pop
pop
cmp
lods
cmp
pop
sbbl
pushf
ret
jb
mov
jbe
jnp
add
in
and
jle
out
pushf
lahf
ss
dec
push
idivb
adc
subb
jo
mov
inc
clc
mov
in
hlt
mov
test
push
mov
inc
and
pop
jl
fsubp
mov
mov
fldenv
push
out
test
pop
out
dec
negb
push
dec
insl
mov
pop
out
sbb
fdivl
mov
xchg
cmp
adc
jbe
cwtl
cs
and
and
data16
shll
pop
xchg
or
mov
mov
fadds
inc
scas
lcall
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
