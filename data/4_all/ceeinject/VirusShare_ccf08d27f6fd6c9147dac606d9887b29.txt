call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
cmp
inc
cmpsb
cmp
dec
cmpsl
arpl
push
cmpsl
shl
or
mov
cmpsl
stos
xchg
jbe
data16
xchg
inc
cmpsb
aaa
daa
pop
testb
cmpsl
push
out
stc
ds
es
ret
inc
xchg
jbe
lods
xor
inc
shrl
shlb
out
mov
cld
call
notl
mov
xchg
add
hlt
add
rolb
adc
xor
mov
jne
daa
les
dec
int
mov
dec
rorb
xor
ret
addr16
fmuls
or
cli
sub
sub
xor
sbb
std
or
daa
ja
push
out
push
mov
push
aas
mov
sub
cmp
dec
movsl
sub
xor
adc
push
ss
out
leave
cmp
cmp
lret
orb
jnp
dec
xchg
in
push
aaa
dec
sbb
xor
inc
cmp
push
and
addr16
ret
loop
mov
xchg
out
inc
pop
push
loopne
dec
xor
cmpsl
add
lcall
push
ret
aaa
arpl
pop
idivb
scas
sysenter
fstps
xlat
push
test
outsb
jecxz
add
fisubrl
lret
push
stos
add
mov
xchg
leave
sub
add
emms
shr
rclb
mov
pop
test
jnp
je
iret
ja
jae
fs
push
les
ret
adc
adc
daa
fiaddl
lret
daa
pop
testb
notl
out
xlat
ss
es
cmpsl
inc
xchg
jbe
data16
xchg
inc
cmpsb
aaa
daa
pop
testb
notl
out
xlat
ss
es
cmpsl
inc
xchg
jbe
data16
mov
dec
jnp
dec
iret
ja
arpl
mov
push
jl
cmpsl
sbb
clc
cs
mov
stc
data16
mov
and
xchg
or
iret
add
fadds
lock
cmpb
push
dec
and
mov
pop
jge
sahf
mov
enter
shll
add
call
mov
lds
dec
inc
out
icebp
cmp
jns
mov
pop
div
aad
push
mov
negb
faddl
dec
pop
leave
and
mov
mov
and
cli
lods
add
decb
mov
xor
sbb
mov
arpl
scas
lahf
das
dec
popa
dec
popa
movsb
lret
push
outsb
and
shll
xchg
sbb
btr
rol
andb
scas
inc
rcl
fldl
pop
sbb
sarb
rorl
es
jns
rcrb
cmpsb
repnz
pop
fcoml
sub
popa
cmpl
inc
fsubs
pop
cmpsb
movsl
mov
add
int3
adc
xor
bound
push
sbb
int
leave
hlt
in
imul
stos
mov
lret
ret
aas
push
into
mov
ficoms
stos
jnp
xor
jge
adc
les
mov
stos
outsl
xor
pop
jo
adc
mov
sbb
cmp
ret
pop
jae
in
xchg
cmp
dec
push
and
or
adc
xor
sarl
arpl
repnz
jne
pop
pop
repnz
xchg
add
push
add
adc
ret
shlb
xor
pop
pop
mov
std
add
push
lcall
pop
add
or
xchg
xchg
add
aam
bound
imulb
xchg
sarb
jl
ja
icebp
cpuid
in
arpl
and
mov
push
lds
js
push
dec
hlt
imul
test
imul
add
add
stc
arpl
mul
xor
imul
mov
xchg
xchg
sub
lahf
dec
or
ss
add
xlat
lret
lds
test
sbb
in
mull
sub
add
addr16
lret
pop
rcrb
jb
cmp
lods
mov
pop
and
lret
in
mov
xchg
shr
lahf
pop
mov
and
pushf
ret
xor
dec
xchg
pop
add
xor
sti
or
xor
es
push
in
mov
lahf
aaa
push
mov
and
ss
out
push
dec
inc
mov
shll
mov
push
xchg
mov
shll
cmp
sbb
push
cmp
mov
or
add
jl
das
mov
imul
bound
xor
or
mov
aas
daa
mov
faddl
cmp
imul
mov
sahf
es
pop
outsl
das
jecxz
ret
icebp
test
inc
mov
mov
clc
in
push
int3
test
mov
mov
xor
aas
mov
xor
mov
jnp
push
pushf
mov
inc
dec
cwtl
cmp
push
jns
cmpsb
mov
into
iret
rorl
fsin
test
ret
cltd
cmp
push
clc
sbb
dec
stos
xlat
popf
lahf
mov
xchg
xchg
sbb
mov
cmc
adc
push
mov
sbbl
ds
cltd
or
loopne
sbb
gs
cmp
imul
fmull
sub
adc
mov
mov
push
les
push
or
mov
dec
stos
lods
jne
repnz
ja
push
daa
pop
pop
add
outsb
pop
das
faddl
pop
test
sub
sar
into
dec
adc
dec
cli
jmp
je
sub
rolb
cs
mov
sbb
insl
and
pop
xchg
sbb
xchg
aad
xor
hlt
std
jnp
adc
jo
ljmp
ljmp
or
add
sub
pop
pusha
jbe
adc
in
jno
jb
or
ffree
sub
pop
hlt
cmpsl
stos
adc
test
and
sub
call
or
jbe
test
cmp
in
cmp
inc
imul
sbbb
lahf
mov
push
stos
sub
push
sbb
fs
pop
sbb
mov
inc
scas
mov
inc
sub
in
pop
pop
cmpsb
xor
fdivrp
add
adc
test
icebp
aas
loope
push
adc
push
cmc
jno
sub
call
and
fcompl
jmp
es
ret
xor
mov
inc
dec
mov
adc
push
pop
dec
aaa
mov
mov
xor
test
pop
scas
add
fdivrs
aas
jns
mov
mov
mov
add
pushf
nop
push
xor
ret
stos
add
in
cmp
mov
or
dec
push
add
ja
das
mov
pop
ficompl
mov
push
dec
jle
cs
pop
pop
rolb
testl
inc
sbb
aam
cld
popa
sub
popf
mov
mov
cmp
mov
movsl
sbb
xor
ret
add
sub
jo
lret
pop
aaa
pop
mov
xor
cmp
sub
pop
xchg
repz
cli
aad
adc
loopne
push
or
div
jno
paddsw
cltd
lods
sahf
movsl
das
sub
sub
aaa
pop
xchg
testb
cli
lea
out
sbb
mov
test
loope
aad
sub
out
jp
roll
push
mov
loopne
data16
xchg
mov
sbb
ret
je
pop
das
and
imul
jp
jp
inc
imul
out
pusha
mov
inc
outsb
jnp
sarl
cmc
pop
insb
cmc
lock
dec
mov
in
jecxz
lock
dec
inc
sub
push
inc
imul
imul
imul
inc
push
push
lea
mov
data16
rcrl
push
sub
andl
or
xchg
mov
hlt
fnstsw
orl
rorl
cwtl
dec
pop
jge
xchg
lret
adc
sub
shlb
out
jmp
inc
push
jmp
je
mov
mov
jmp
push
dec
mov
add
loopne
ret
inc
push
or
sbb
xchg
mov
cmpsl
int3
rclb
jbe
mov
mov
push
add
hlt
xor
cmp
inc
int3
ret
pop
mov
aas
gs
incb
and
popf
andb
adc
ficoms
cmp
leave
scas
xor
ss
imul
inc
add
mov
adc
mov
js
outsl
jp
xchg
out
pop
push
fmulp
testb
inc
fldl
mov
test
int3
jno
in
push
out
and
jo
jno
cmp
mov
cmp
in
test
xchg
and
insl
outsb
in
es
cmp
nop
lcall
in
push
pusha
mov
aad
xchg
mov
pop
lds
mov
leave
stos
fwait
ja
out
jb
loopne
fidivrs
ds
mov
lahf
mov
add
pop
or
andb
cltd
loopne
mov
sub
jb
push
fsubrs
mov
mov
jecxz
jge
dec
push
rclb
data16
hlt
add
inc
das
hlt
cltd
test
sub
enter
jno
mov
push
int3
mov
decl
adc
jno
mov
or
bound
pop
xor
js
pop
add
sub
push
imul
push
mov
call
xchg
add
mov
loope
rcll
pop
sub
xchg
cmp
fcmovne
inc
mov
jae
cs
inc
das
inc
mov
lds
jg
add
daa
faddl
sbb
jno
cmp
nop
cmp
test
data16
jns
mov
inc
out
pusha
int
popa
and
xchg
sarb
sub
sbb
xor
inc
fstpt
mov
inc
dec
and
roll
ficomps
add
movsl
in
xor
xlat
mov
cmp
sbb
xchg
or
sub
sti
test
or
js
and
mov
out
lret
xlat
push
aam
popf
lods
lcall
cltd
cmp
jne
add
dec
test
in
repnz
fisttpll
push
xchg
add
inc
scas
push
leave
inc
add
jno
push
inc
sarb
jmp
es
out
shr
adc
les
cmpsb
xchg
ret
cmpsl
jmp
xor
cwtl
call
mov
arpl
mov
jne
pushf
xorl
lcall
dec
adc
mov
lcall
je
inc
jle
std
subl
cmp
mov
std
outsb
dec
cld
ret
mov
sub
mov
mov
xchg
mov
jo
mov
mov
fistps
xchg
outsl
push
fsubrs
jge
sbb
cld
data16
lcall
mov
xor
lret
mov
mov
add
fimuls
jge
addr16
fisttpll
insl
int3
in
imul
adc
pop
jg
jb
sti
push
adc
mov
lods
dec
icebp
xchg
icebp
jmp
fadds
push
pusha
dec
xchg
mov
jmp
mov
clc
jmp
icebp
adc
mov
in
sub
jae
test
mov
sub
cld
mov
mov
adc
or
rol
fldt
adc
sahf
mov
pop
dec
repnz
jno
rorb
imul
inc
and
fcompl
repz
mov
and
inc
stc
ss
xor
iret
jmp
loop
int3
mov
mov
outsl
repz
bnd
arpl
cmpsl
mov
lahf
fldenv
cld
js
not
es
adc
ljmp
mov
dec
adc
popa
or
loop
jecxz
pop
or
mov
jae
pop
or
movsb
lcall
cmpsb
popf
rcrl
ficomps
daa
push
dec
push
push
cmp
and
inc
pop
int
sarb
inc
out
outsl
cwtl
and
ljmp
inc
pop
inc
aad
int
pushf
xor
ret
cmp
adc
push
jns
xor
lock
jae
mov
aas
mov
sub
sbb
jae
sub
cltd
cmpsb
daa
mov
and
ja
jb
xchg
daa
xor
pop
rolb
add
mov
lret
ret
pop
push
push
sbb
pop
cmp
mov
push
das
xchg
inc
std
ljmp
fists
lods
inc
fdivl
dec
mov
nop
push
xlat
xor
test
push
jae
jmp
sub
fwait
jmp
and
test
sbb
sbb
xor
hlt
push
push
icebp
inc
test
cmc
imul
cwtl
lods
fisubrs
push
movsb
cld
lea
orb
sbb
jno
addr16
lods
cs
pop
adc
sbb
loop
pop
pop
push
loop
mov
nop
shlb
or
jecxz
outsb
jb
rcrl
aas
sub
or
popa
stos
fs
adc
lods
or
movsl
or
lret
dec
cmovno
xchg
jp
sub
fistl
call
cmp
sti
xor
inc
rcll
and
fnsave
movb
cltd
mov
adc
pop
insl
cs
mov
jnp
je
inc
sahf
mov
xchg
in
movsb
dec
xchg
mull
mov
inc
inc
adcb
int
pop
fcomps
repz
adc
mov
sbb
testb
test
sahf
mov
dec
mov
push
shrl
cwtl
push
std
push
call
adc
adc
repz
cltd
xorb
jne
sbb
mov
adc
jg
out
insl
mov
mov
xchg
sti
arpl
mov
lret
les
sub
inc
xor
lahf
and
notl
out
or
les
dec
loop
push
pop
ja
testl
pushf
jp
lock
pop
fdiv
bound
dec
cmp
adc
inc
pushl
mov
mov
js
mov
cmc
mov
loopne
and
mov
mov
sub
sbb
mov
je
inc
pop
mov
adc
mov
int3
mov
adc
or
sbbl
nop
jne
or
or
xchg
addl
loopne
cwtl
xchg
incb
lds
test
stc
idivl
adc
ds
lock
add
bound
nop
stos
pop
mov
test
cmpl
mov
or
popf
adc
mov
push
mov
test
insl
xor
leave
dec
jge
sub
sbb
pop
std
sarl
das
adc
enter
sbb
outsl
mov
pop
push
inc
sub
xchg
or
lock
mov
popa
push
lret
pop
sub
sti
sarb
repnz
inc
outsb
fisttps
nop
ret
andb
xchg
xchg
inc
xchg
and
out
sbb
lods
push
jns
sub
dec
dec
inc
fwait
and
daa
pop
dec
jecxz
leave
add
or
pop
ljmp
inc
dec
test
aaa
cmp
pop
mov
pop
add
or
leave
inc
jae
jno
test
xor
fsubs
out
loopne
adc
out
shll
aad
jb
mov
adc
lods
fs
movsb
sarb
mov
ficomps
lods
mov
out
fdivp
leave
ret
cmp
test
dec
xor
jecxz
xchg
and
mov
mov
mov
cmp
cmpsb
outsb
stos
push
xchg
pop
fisttpl
lock
aaa
jo
and
lcall
lret
fs
pop
in
iret
popf
outsb
fldl
cs
mov
div
xchg
into
sbb
movsl
movsl
fisubrs
pop
movsb
neg
and
sub
pusha
mov
push
or
fs
adc
pmulhw
dec
mov
push
lret
inc
xchg
or
xchg
in
inc
xor
mov
fmul
lods
cltd
xchg
push
enter
es
and
loopne
js
cmp
add
lea
sar
imul
leave
cmp
popa
push
insl
xchg
xor
subl
lods
imul
repnz
ljmp
inc
add
mov
in
fildl
insl
jle
ret
sbb
push
loopne
jl
add
or
cmp
xor
shll
icebp
mov
mov
adc
cmp
mov
js
lret
pop
test
in
pop
push
and
or
adc
pop
sub
push
and
cmp
sub
sarl
daa
ljmp
sub
int
rclb
sbb
jae
outsb
mov
sbb
cld
sarb
sub
pop
push
mov
push
cs
mov
testb
dec
testl
sub
or
clc
xor
rclb
pop
scas
fcomi
fists
sbb
and
sub
scas
jg
xor
out
les
xchg
sbb
dec
insl
aad
dec
pushf
movsl
adc
mov
lea
movb
aad
pop
or
mov
ret
jecxz
jae
and
xchg
nop
btc
pop
add
cmp
shr
add
xor
scas
push
inc
scas
sub
pop
inc
setne
dec
loopne
mov
les
cli
inc
pop
mov
and
enter
mov
push
lret
test
inc
jnp
mov
neg
ficoml
mov
mov
sbb
jb
pop
and
arpl
fidivs
pusha
pushf
call
jl
stos
pop
xchg
xor
and
ja
ffreep
jp
rcll
sbb
jge
push
cmpb
icebp
das
jl
jl
jge
cmp
mov
mov
mov
dec
or
jle
sub
inc
leave
mov
mov
cs
jg
jbe
sbb
mov
scas
mov
outsl
cmc
mov
sbb
add
imul
sbb
xchg
dec
in
gs
test
movsl
cmp
int3
insb
push
dec
pop
mov
cmp
lret
icebp
cmpsl
inc
mov
xchg
es
decl
scas
mov
fiaddl
xchg
or
adc
aas
bnd
cld
pop
pop
inc
sbb
testl
ljmp
mov
je
lahf
cmc
sbb
fsubl
test
cmp
in
and
in
push
es
outsb
pop
mov
in
xchg
add
test
cld
inc
pop
or
in
mov
or
push
andb
bound
fdivr
jo
repz
pop
leave
pop
dec
mov
sti
xlat
mov
xchg
ja
adc
lds
mov
xchg
pop
mov
inc
test
xchg
gs
fs
test
shrl
mov
and
ret
xchg
cmp
sahf
sub
mov
mov
add
inc
in
sub
mov
jecxz
xchg
mov
roll
ljmp
aam
aam
dec
pop
ret
pop
icebp
jl
insb
xchg
mov
or
inc
dec
adc
cwtl
push
xor
jbe
xchg
int3
mul
cmp
int
repnz
cli
push
mov
jp
sub
mov
inc
mov
xchg
lods
andb
insl
andb
jmp
ds
fnstenv
sbb
inc
repz
and
and
addr16
pop
mov
push
fsubrl
mov
push
fdivl
mov
dec
cld
stos
adc
push
and
cmc
les
mul
stos
mov
jbe
cmp
mov
testl
jno
repz
bound
dec
orl
lahf
les
xor
std
fcompl
push
das
and
mov
mov
iret
fisttpl
push
sub
inc
call
data16
inc
xor
lcall
testb
pop
mov
mov
aam
out
pop
loopne
out
inc
xchg
mov
jb
pop
xchg
push
cmp
notb
ret
scas
outsl
push
mov
sub
aad
xor
mov
rorb
popf
aas
mov
push
adc
jnp
push
popa
inc
adcl
xchg
aad
imul
subb
lret
add
subl
push
cmp
out
shlb
or
sub
add
out
pop
cmp
xchg
or
dec
cmpsb
sbb
adc
test
scas
nop
arpl
test
lods
mov
mov
adc
lods
inc
push
lahf
mov
mov
or
arpl
push
sahf
test
pop
push
popa
add
pop
lret
push
fsts
and
cltd
or
mov
fidivrs
ss
pushf
adc
pop
mov
scas
out
add
repnz
sti
mov
inc
bound
dec
dec
mov
lods
push
or
movsb
clc
mov
in
adc
pop
movsb
jp
rorl
cmp
jge
imul
bound
cmp
xor
cltd
or
fimull
ret
test
cli
jl
aad
sub
xchg
pop
pop
clc
cmpsb
mov
ret
scas
out
shll
sub
mov
decb
fcompl
jae
jmp
int3
push
push
push
popa
lods
sbb
lret
push
pusha
mov
jnp
and
das
repz
adc
loop
mov
sti
fcompl
adc
dec
pop
mov
xor
pushf
out
cmpsl
and
mov
inc
xchg
sbb
adc
das
aad
dec
sti
xchg
and
jne
rdmsr
inc
xlat
dec
cltd
arpl
dec
jne
fs
lret
hlt
xor
cmp
outsl
inc
ret
fwait
xchg
test
xor
fldt
pop
sbb
andb
lret
enter
clc
inc
daa
cmc
and
into
fcompl
les
jbe
xor
pop
mov
mov
fsubl
imul
dec
cmp
fcoms
xchg
push
add
out
dec
or
jno
pop
and
cmc
adc
rol
shlb
shll
mov
inc
mov
jmp
movsl
sub
roll
test
rol
dec
or
loop
insl
loopne
mov
mov
push
xchg
out
aas
pop
pop
inc
call
jnp
cmp
ror
push
leave
and
ficoml
inc
pop
jecxz
xchg
jmp
mov
mov
mov
fsubs
scas
stc
lods
lods
inc
cmp
jmp
xlat
loopne
ds
jecxz
add
push
sub
out
mov
sub
out
or
and
int3
pop
fs
push
call
insb
xlat
mov
lock
imul
dec
push
mov
pop
mov
nop
sbb
rorl
aad
repnz
xor
pop
aaa
xchg
mov
cmpsb
aaa
daa
pop
testb
notl
out
xlat
ss
es
cmpsl
inc
xchg
jbe
data16
xchg
inc
cmpsb
aaa
daa
pop
testb
notl
out
xlat
ss
es
cmpsl
inc
xchg
jbe
data16
mov
inc
mov
pop
repnz
out
pop
out
fidivs
ret
das
mov
mov
subb
fists
out
aaa
pop
jbe
es
sbb
cs
ds
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
cltd
mov
dec
xor
mov
cmp
sub
sbb
or
imul
mov
mov
fcmovnu
lret
mov
sbb
add
imul
mov
xorl
mov
ret
aaa
lret
shll
out
dec
inc
inc
jae
jnp
add
pop
sub
fwait
in
std
fsubrl
lds
mov
fistl
jae
push
sbbl
cmp
push
mov
sar
jmp
pop
cltd
pop
mov
jno
sbb
js
stos
pop
pop
mov
inc
mov
int
cmp
or
mov
lods
and
imul
mov
xor
ljmp
sub
sub
cmc
test
xchg
shlb
es
push
lret
add
rep
xchg
sarl
leave
cmp
cmp
fdivrp
or
dec
pop
mov
jns
adc
mov
mov
ret
xor
data16
adc
js
xchg
pop
pop
dec
int
mov
mov
fildl
rorb
mov
adc
push
jae
inc
pop
dec
daa
xlat
jmp
test
mov
lret
lods
cmp
insb
push
push
push
sbb
aam
lret
clc
sti
lods
xchg
xchg
jmp
dec
jg
jl
outsb
jnp
add
fsubrp
out
test
jmp
fcmovnu
lret
leave
cmp
sub
sbb
or
jnp
imul
dec
dec
mov
cltd
mov
fcmovnu
lret
leave
cmp
sub
sbb
or
jnp
imul
dec
dec
mov
cmp
movsl
xchg
pusha
mov
flds
imul
push
mov
adc
and
inc
push
xchg
ds
fidivl
cltd
xchg
scas
mov
rcrb
xor
fdivrl
cmp
sbb
xor
push
mov
mov
fs
in
pop
sub
shrb
orl
roll
xchg
adc
xor
sub
and
mov
stc
inc
lea
mov
sub
sub
inc
sub
popa
pusha
dec
insb
mov
in
sub
pop
pop
dec
call
hlt
mov
mov
mov
sub
dec
or
push
pop
out
mov
dec
je
mov
lds
loope
or
push
xor
jle
sti
cli
mov
shrl
lds
lods
sbb
jle
mov
cld
mov
pop
loope
sbb
or
mov
rolb
or
adc
out
es
leave
outsl
sbb
pop
scas
jns
imul
inc
je
sar
jb
movsl
pop
xchg
dec
push
jl
mov
push
ret
and
and
lret
outsb
es
shl
mov
es
scas
cmp
aaa
dec
mov
push
out
inc
pop
push
testb
iret
int3
push
sub
mov
andb
or
sub
lds
movsl
jae
mov
andb
enter
aad
outsl
insb
mov
push
les
or
lret
sbb
lret
daa
push
movsb
mov
mov
pop
adc
cld
or
in
pop
pop
rcrb
add
push
xlat
and
mov
add
incb
mov
cmp
lea
pop
inc
inc
mov
sbb
sub
repnz
fwait
nop
sbb
cmp
adc
pop
add
imul
rcrl
and
in
outsb
mov
mov
mov
push
sub
movsl
ret
mov
scas
mov
jae
push
out
and
sbb
cmp
lods
andb
in
xor
loop
mov
mov
hlt
clc
in
inc
or
jp
cmp
lods
aam
cs
mov
andb
out
mov
stos
imul
add
ffreep
sbb
test
nop
arpl
xchg
and
movsb
mov
adc
mov
cld
mov
sbb
adc
sti
movsb
jo
pop
jmp
pop
mov
cmp
mov
adc
adc
add
mov
dec
shl
or
jo
xor
jmp
or
jle
es
or
aaa
sti
or
out
shrl
inc
jnp
push
cmp
sarl
out
pop
xor
jns
jg
and
mov
repnz
cmp
pop
repnz
clc
mov
je
push
fisubrl
sub
aam
cmp
cld
mov
pop
or
jl
rcl
inc
dec
xchg
inc
mov
lret
pushf
sub
mov
es
imul
sar
ret
mov
add
scas
push
mov
scas
xchg
inc
fldenv
das
out
arpl
stc
jnp
inc
pop
sbb
inc
gs
outsb
push
mov
cs
stc
stos
mov
jl
cmc
bound
in
das
fwait
xor
dec
out
push
in
lock
mov
gs
repnz
rcll
sub
cmc
int3
es
sub
aad
adc
jbe
clc
cltd
mov
push
aam
xor
mov
or
fs
mov
in
cmp
fs
mov
mov
leave
jmp
xor
cmp
loope
pop
shr
mov
out
mov
test
cmp
insl
clc
pop
loope
sub
lock
xchg
hlt
dec
or
inc
movsb
mov
xlat
xor
push
fsts
popa
ja
gs
add
mov
outsb
add
out
pop
jmp
mov
cmp
push
dec
test
push
test
sbb
sbb
jo
or
pop
pop
ret
fidivrl
pop
lcall
adc
cli
mov
movsl
jmp
lods
fwait
xchg
fsubr
and
adc
xchg
stc
jl
jecxz
add
jmp
inc
mov
cmp
jecxz
jecxz
gs
mov
loope
jae
pop
inc
xchg
test
in
xor
and
and
iret
mov
add
add
mov
mov
add
cmc
mov
push
ljmp
lret
inc
test
loope
js
out
inc
in
movsl
inc
ja
minps
xchg
mov
insb
sub
sub
aam
cmp
xor
pop
mov
mov
add
leave
mov
mov
push
pushf
std
xor
mov
cmp
and
xchg
leave
xchg
nop
or
lret
mov
push
popf
jae
das
dec
testb
fsubs
push
pop
rcll
pop
imul
lods
ja
xor
lock
xor
cmp
aam
fcmovnu
je
mov
idivb
pushf
pop
push
xchg
cmp
leave
push
movsl
inc
lcall
sbb
pop
mov
leave
insb
jb
cmp
incb
imul
dec
mov
mov
aam
fs
push
daa
or
enter
repz
jmp
fxch
into
inc
mov
loopne
cld
je
push
mov
arpl
sub
mov
xchg
pop
loopne
ret
pushf
sbb
cmp
add
dec
lahf
aaa
or
cmc
pop
fildl
aad
cmp
pop
outsl
jo
aaa
xchg
or
repnz
test
cmp
mov
push
daa
movsl
std
xor
roll
or
in
jle
adc
mov
dec
add
jnp
test
insb
xchg
les
and
aas
cmp
stos
pop
stc
movsb
das
fs
std
add
nop
push
imul
fdivp
xlat
lock
sub
jl
pop
bound
in
loopne
jp
stos
or
outsl
inc
scas
lock
out
push
in
inc
in
jae
rcl
cmp
divl
cmp
das
dec
or
push
dec
adc
arpl
imul
fsubrl
push
mov
dec
in
cmp
popa
sbb
pushf
ja
dec
and
fildl
sub
pop
lret
cmp
not
mov
std
add
mov
push
jmp
push
inc
adc
movsb
xchg
jge
loope
sahf
loop
arpl
mov
mov
mov
and
mov
adc
xorb
cmp
cmp
sub
jb
cmc
cld
pop
xchg
pusha
divb
jbe
fwait
adc
sbb
daa
or
int
mov
ljmp
and
cld
sbb
cmp
mov
daa
push
mov
push
mov
adc
cld
jl
lods
inc
mov
in
outsb
popf
idivl
adc
cmp
or
mov
in
pop
dec
int
mov
jns
jmp
lea
and
shlb
lea
lahf
jg
insb
movsb
mov
mov
test
into
bound
mov
jmp
js
mov
xor
jle
jmp
jp
in
fsub
fwait
popa
and
or
push
stos
mov
ljmp
fmul
add
mov
push
sahf
sbb
mov
adc
outsl
adc
jecxz
stos
in
xchg
sub
aas
testl
fs
iret
pop
icebp
mov
xor
sbb
into
adc
sbb
cld
push
pop
jne
pusha
mov
stos
adc
cmp
xor
pop
aaa
mov
or
xor
mov
cmpl
insl
in
mov
jno
cwtl
xchg
dec
clc
or
lret
xor
pop
jbe
adc
cmp
cmpsl
push
ss
lods
xorl
xlat
fsubrl
lods
cmp
call
mov
push
insb
test
xchg
lods
cmp
mov
xchg
lock
shll
outsl
es
xchg
sbb
mov
movsb
lcall
cmpsb
sub
addb
ds
inc
jle
adcl
xchg
cli
inc
xor
mov
pop
and
jno
or
xchg
xor
push
les
in
or
shll
pop
adc
pop
lret
in
mov
xor
jb
push
into
jae
cmp
or
adc
leave
cmp
rclb
cmpsb
sahf
jne
ss
stc
rcll
adc
xor
sub
stos
pop
xchg
ljmp
es
je
fidivrl
sbb
add
pop
sahf
pushf
test
jnp
or
test
adc
test
or
divl
test
push
lock
cmc
xchg
pop
mov
cmp
push
mov
dec
in
les
test
subb
lcall
movsl
add
enter
imul
dec
lock
jge
jmp
test
out
lock
test
rorl
jge
push
imul
out
inc
in
jg
test
or
jge
jo
mov
xor
rcr
add
shl
adc
mov
into
jmp
push
push
jg
cmpsl
popa
lret
test
cmp
sbb
into
sub
test
lret
sti
and
lods
pop
pushf
pop
mov
mov
repnz
xchg
aas
cld
jecxz
and
sbb
data16
jnp
loope
mov
lods
push
outsb
xor
dec
pop
add
call
pop
or
push
icebp
cld
sub
lods
mov
or
loope
fists
je
sbb
pop
add
insl
push
mov
jmp
mov
cmp
jp
xchg
ds
fisttpl
fimull
jmp
loope
fmul
dec
cmp
sbb
mov
js
dec
stc
insl
mov
sub
sub
or
xchg
cmp
das
fnstcw
aam
jne
xchg
inc
mov
outsb
test
dec
xchg
das
sbbl
aad
test
enter
in
icebp
movsl
mov
sbb
push
mov
dec
dec
and
popa
pushf
mov
in
jecxz
aam
sbb
repnz
orb
sub
pop
and
pop
ds
inc
call
inc
jbe
fs
mov
or
xchg
xlat
lods
mov
cwtl
add
ret
stos
adc
mov
or
addb
inc
pop
ds
mov
jnp
and
and
cmp
mulb
data16
xor
push
sbb
cmc
cld
adc
mov
xchg
das
mov
push
outsl
push
cltd
fistpl
rcr
sbb
mov
inc
xchg
mov
sub
jl
add
lods
ljmp
xlat
cs
jno
or
outsb
lock
mov
into
cmovne
xchg
addr16
mov
push
movsl
xor
inc
bound
push
cmpsl
loope
daa
xchg
es
nop
aam
shlb
popa
add
add
insb
fstl
adc
xor
outsb
pop
movsl
cmc
lods
pop
push
jp
mov
inc
movsb
dec
add
sub
dec
dec
dec
testl
add
mov
repz
or
aam
sub
int
aam
subb
cltd
sbb
inc
ja
adc
loop
jmp
or
or
sbb
popf
mov
cmpsb
addb
and
shlb
int
fcomp
popf
in
dec
xor
stos
call
xor
push
xchg
stc
test
inc
lahf
ret
fstpt
dec
mov
cli
movsb
ficompl
mov
and
jns
xchg
cwtl
cs
push
mov
dec
insl
inc
sbb
sahf
cmp
cmp
adc
jecxz
inc
xchg
out
aaa
sub
lods
enter
pop
xor
adc
mov
js
aaa
jnp
mov
aad
pop
sub
jg
les
mov
inc
pop
pop
cwtl
xchg
adc
lods
test
mov
lods
add
pop
jge
push
out
outsb
fsub
adc
addl
sbb
pop
shrl
jo
imul
push
pop
xchg
out
movsb
adc
hlt
jl
sbb
inc
push
mov
jb
pushf
xlat
ss
cwtl
shll
in
fs
push
adc
xchg
push
push
lds
mov
stos
push
pop
mov
repz
stos
scas
sti
jno
adc
ret
mov
pop
jae
mov
xchg
jp
mov
sbb
cltd
adc
pusha
movb
outsb
insl
iret
dec
fsubs
cmp
xchg
mov
test
les
je
jns
jecxz
xor
inc
xchg
xor
jge
push
hlt
fdivs
lahf
push
sahf
mov
xor
cli
inc
push
gs
clc
arpl
es
add
pop
imul
pop
pop
inc
repz
and
xchg
mov
scas
out
jb
jge
sar
sub
push
mov
push
jecxz
add
adc
outsb
shlb
push
sub
lock
sub
pop
dec
mov
test
and
sub
repz
mov
and
adc
lock
cmp
sbb
pop
jnp
push
push
pop
push
push
jne
adc
jge
cmp
jnp
fmuls
adc
popa
inc
lcall
sbb
mov
xchg
add
sub
xchg
xchg
ja
jecxz
mov
ds
fstpt
adc
lock
or
and
or
mov
and
and
loope
in
pop
xor
jnp
dec
mov
push
dec
sub
xchg
pop
stos
aas
pop
xor
and
dec
inc
pop
in
das
out
cmc
inc
and
int
insl
int
scas
scas
and
movsl
inc
andb
fwait
subb
std
imul
in
test
inc
sahf
insb
aas
pop
fiadds
mov
dec
out
mov
sarb
xor
sbb
pop
push
inc
and
loope
nop
ja
pop
scas
mov
jle
add
aas
cmc
adc
adc
insb
test
std
xchg
cmpsl
push
fsts
mov
mov
cmp
mov
add
jno
mov
fwait
fwait
xchg
cmpsb
jae
shr
out
and
pop
sbb
movsl
inc
cmp
orl
push
imul
push
push
js
push
mov
repnz
and
pop
leave
dec
sub
dec
lods
mov
mov
iret
sbb
scas
xchg
dec
rcr
mov
xor
mov
vmwrite
xchg
addr16
imul
clc
pop
popf
jmp
inc
push
jno
fisttps
insl
dec
inc
sahf
and
das
xchg
lock
scas
in
lret
enter
popf
mov
push
xchg
ret
scas
iret
push
insl
cmpsl
mov
pop
lods
pop
dec
xor
imulb
jbe
filds
dec
test
mov
repnz
adc
lock
imul
xchg
int
mov
jo
imul
cmp
dec
cmc
shll
inc
and
add
pushf
gs
dec
mov
mov
sti
movsl
push
mov
sti
and
loop
adc
mov
insl
xchg
add
cs
mov
sbb
lods
or
divl
jl
push
pop
cmp
cmp
imul
jecxz
lret
lahf
adc
mov
cwtl
imul
cmp
adc
addb
sbb
xchg
add
mov
sub
iret
lahf
bound
inc
loope
lahf
mov
cs
js
xor
pop
xchg
orl
and
jg
les
insl
sarb
das
fdivs
mov
sub
es
mov
ljmp
jno
insl
cmp
push
jbe,pt
jp
or
xchg
mov
out
orl
xor
js
lcall
push
sbb
jns
xor
jle
pop
mov
fmuls
inc
in
mov
je
cmp
jmp
mov
fcoms
xor
insl
xchg
xchg
scas
sbb
fwait
inc
inc
pushf
push
and
lods
jbe
and
insl
in
jg
cs
fcompl
mov
and
inc
cmp
cmc
sbb
mov
ss
cmp
jp
mov
xor
scas
sbb
out
and
pop
and
jno
mov
sub
in
notb
jp
test
fs
js
jnp
xor
and
mov
in
push
xchg
repnz
pop
std
subb
mov
stc
jl
add
xlat
out
add
xchg
mov
xor
push
push
dec
mov
icebp
push
movsb
rcl
pushf
div
insb
dec
movsl
outsb
inc
int
dec
adc
add
jge
loop
incl
lcall
pop
cmc
aaa
cmp
push
xorb
adc
jmp
dec
aam
mov
sbb
pop
iret
push
out
hlt
or
ss
push
inc
loop
leave
movsl
iret
lahf
xor
ss
or
insl
pop
mov
hlt
popa
pop
int
das
fwait
lcall
xor
push
push
xor
jp
leave
dec
fs
inc
outsb
push
push
int
pop
sub
adc
cld
dec
mov
daa
dec
out
in
xor
push
push
mov
pop
dec
dec
mov
mov
mov
pop
scas
jno
repz
repnz
subl
icebp
sar
and
bound
or
sbb
jg
ret
inc
pop
cmp
push
fcomi
aaa
mov
inc
or
lods
sbb
pop
jge
out
cwtl
orb
movsb
frstors
or
dec
mov
test
repz
mov
jle
inc
adc
sbb
mov
bound
adcl
xchg
or
nop
negb
cmpsl
push
std
orl
and
mov
fmuls
call
in
push
rclb
dec
pop
leave
adc
and
or
xchg
sarb
sbbb
xor
pop
xor
out
sub
push
fwait
mov
jne
dec
push
mov
scas
cmp
rcll
or
jl
cmpsl
bnd
outsb
loopne
jmp
and
mov
inc
movsl
mov
inc
add
clc
xor
insl
cs
hlt
push
cmp
loope
add
mov
or
sti
mov
movsl
xchg
push
test
pushfw
repz
adc
sub
inc
mov
pop
push
rolb
mov
sbb
aaa
mov
pop
das
rolb
and
shl
xor
add
inc
mov
cmp
add
and
mov
pusha
dec
dec
fdivrp
dec
imul
cwtl
leave
jge
mov
jl
lock
subb
outsb
dec
filds
add
jne
mov
scas
push
inc
or
popa
add
and
pusha
dec
push
mov
not
pop
jno
xchg
xor
pop
dec
fwait
je
add
adc
movsl
cmp
sbb
cmc
repnz
sbb
pusha
call
insb
icebp
int3
dec
pop
jbe
pushf
dec
cltd
xchg
mov
inc
std
insb
fmul
cli
sub
push
call
in
or
imul
fidivs
dec
mov
shll
dec
mulb
cld
adc
mov
inc
add
lods
push
loope
sbb
xorb
adc
jge
in
jns
pop
sbb
out
or
cmp
push
push
pusha
xchg
aam
mov
mov
lods
fwait
stos
test
dec
dec
je
stos
mov
ret
rcr
and
pop
push
mov
icebp
sub
pop
or
push
push
enter
mov
inc
xor
push
push
iret
vcmpss
dec
xor
std
cltd
adc
dec
pop
movsb
movsb
sbb
sbbb
movsb
mov
aas
ljmp
mov
pop
adc
jge
idivl
jno
bt
sbb
or
lret
mov
cmpsl
dec
addb
sti
sbb
insl
out
and
adc
repz
test
repnz
jmp
fidivrl
fisttpll
aaa
jp
shrl
leave
push
xchg
cmpsb
popf
pop
ret
mov
sbb
xchg
or
icebp
push
repnz
aaa
inc
xor
jae
stos
jle
rorl
test
bound
or
add
pop
popa
jae
mov
add
scas
lahf
scas
push
dec
dec
and
and
pusha
mov
cltd
lcall
icebp
inc
lcall
cld
dec
inc
rclb
popa
jb
lock
call
or
mov
sub
outsl
lret
xor
pusha
and
add
xor
push
lds
mov
xchg
pop
jmp
xchg
loop
outsl
xchg
mov
icebp
andb
dec
sahf
push
or
xchg
push
scas
ja
imul
std
data16
xchg
out
je
imul
icebp
fisubs
xor
lods
xor
movsl
jb
push
int3
xlat
inc
popa
call
js
lret
in
shl
sbb
jmp
lcall
sub
mov
xchg
cld
push
mov
or
insb
xlat
cmpsl
sub
lahf
mov
data16
cld
movsb
xor
inc
or
aas
int3
xchg
inc
test
data16
test
sti
stc
jmp
fcmovnu
lret
leave
cmp
sub
sbb
or
jnp
imul
dec
dec
mov
cltd
mov
fcmovnu
lret
leave
cmp
sub
sbb
or
jnp
imul
dec
dec
mov
loope
mov
stc
jmp
fcmovnu
lret
leave
cmp
sub
sbb
or
jnp
push
pop
jns
dec
mov
cltd
mov
pop
pop
dec
leave
aam
mov
or
icebp
jecxz
movsb
cmpsb
mov
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
pop
movsl
xchg
mov
test
lcall
pop
xor
inc
gs
lock
ja
xchg
mov
in
cmc
out
not
pop
and
aaa
adc
addr16
ja
xchg
mov
in
cmc
out
not
pop
lea
xor
and
sbb
sbb
movsl
xchg
ljmp
notl
sbb
roll
push
xchg
dec
mov
cld
xchg
shl
sbb
data16
insl
ret
adcb
add
cwtl
mov
adc
xchg
cmpsl
test
stc
ret
push
cmpb
fadds
jno
enter
xchg
mov
mov
xchg
xchg
xchg
in
cmc
pop
dec
imull
pop
rcrl
cli
filds
mov
jge
jp
push
push
in
loopne
shl
push
outsl
fldenv
ja
aaa
aad
jne
mov
mov
xchg
dec
sub
nop
pop
js
mov
xor
push
adc
push
mov
push
jbe
fsubs
mov
in
cmc
out
not
pop
and
aaa
adc
addr16
ja
repz
lret
in
stc
cld
test
xchg
test
movsl
inc
dec
insl
push
push
xor
push
or
adc
movsl
aam
roll
mov
out
aad
pop
jp
pop
fs
jp
push
and
aaa
and
icebp
in
mov
lock
xlat
cmc
out
not
pop
and
aaa
adc
addr16
ja
xchg
mov
in
cmc
out
not
pop
and
aaa
adc
addr16
ja
xchg
in
mov
fmull
mov
dec
imul
jo
xor
jp
pusha
xchg
imull
xchg
jecxz
loop
fistpll
and
ror
mov
outsl
jb
or
dec
int3
shrl
shlb
rorb
in
fst
cmp
cmp
inc
je
scas
dec
hlt
add
jl
and
int
sahf
lods
aad
addb
loop
popf
jne
push
loope
xchg
mov
popf
jle
or
adc
sub
das
test
and
jmp
enter
push
pop
sar
insb
enter
jge
xor
adc
cmp
mov
xchg
pop
in
xor
cmp
imulb
subl
push
ljmp
fisttpll
jae
mov
mov
cmp
push
lds
rcll
and
cmc
mov
bound
test
inc
movsl
jg
push
fldt
xchg
push
xor
inc
ljmp
mov
mov
inc
pop
out
jmp
mov
out
out
ss
repnz
jmp
sbb
pop
lret
icebp
and
movsl
mov
mov
xchg
pavgb
repz
push
xchg
jp
jb
mov
mull
sub
gs
nop
add
es
dec
or
xor
in
cmp
adc
jl
and
xchg
movsb
daa
inc
lret
pop
fldl2e
or
in
xchg
js
pop
dec
push
push
mov
or
loope
adc
imul
cvttps2pi
int3
pop
mov
sbb
cltd
test
movsb
mov
lcall
jo
xchg
icebp
or
scas
sahf
mov
data16
push
pop
shlb
lret
ret
mov
xchg
push
jg
jbe
mov
xlat
mov
jmp
xchg
dec
bnd
add
xor
pop
push
aam
pushf
xchg
xor
insb
push
mov
xchg
sub
push
mov
addr16
out
xchg
das
mov
xor
syscall
shrb
ds
enter
iret
sbb
push
push
xchg
loop
shll
in
pushl
pop
adc
rcl
sub
adc
in
dec
ja
sub
cld
push
mov
mov
add
pop
pushf
mov
cld
out
jns
lea
dec
mov
mov
push
lret
test
or
testl
les
orb
enter
mov
sbb
ret
loopne
sbb
hlt
sub
lods
mov
sbb
push
jmp
iret
jb
stc
andb
inc
cmp
add
and
lds
dec
mov
pop
fs
pop
push
stos
rol
repnz
mov
lea
sub
out
sbb
lock
rorl
jne
insl
lret
hlt
or
push
rcrb
pop
mov
outsl
shrb
xchg
cli
lods
into
sahf
sahf
lea
not
pop
cmc
arpl
mov
lods
xchg
push
xchg
int
fst
cmp
jns
scas
shll
testl
adc
fwait
xchg
inc
push
adc
xor
cmp
clc
xor
lods
push
fnstcw
xchg
mov
push
xchg
lahf
sub
aam
xor
inc
fdivl
pop
in
mov
rclb
and
outsl
mov
aaa
call
notl
adc
fsubp
pop
dec
or
sbbb
loop
cmpsl
out
insl
mov
adc
hlt
lret
mov
xor
call
push
push
push
sub
inc
out
shll
enter
rclb
jae
mov
loop
pop
out
jbe
pop
lret
gs
and
jmp
add
push
jg
and
lea
enter
xchg
popf
lods
pushf
dec
fwait
or
push
insb
into
xchg
inc
cmp
pop
xchg
in
adc
mov
dec
popa
pop
push
lods
or
sub
stos
push
xor
dec
ret
mov
addr16
in
test
shll
push
test
popf
pop
ss
cmp
pop
pop
and
and
negb
sbb
adc
mov
shlb
lret
cmpsl
mov
test
pop
xor
xchg
cmpsb
hlt
cmpsl
mov
jne
repz
and
imul
idivl
mov
push
cltd
loope
add
sub
pop
xor
xchg
xor
jns
pop
cmpsb
lret
jg
lret
test
lods
cmp
mov
js
pop
scas
mov
sti
adc
daa
mov
jmp
mov
cmp
push
adc
mov
pop
testl
push
sub
repnz
mov
fwait
mov
ffreep
movsb
pop
xchg
clc
pop
imul
inc
rorl
insl
pop
mov
mov
mov
cmp
int3
lock
xchg
inc
mov
decb
icebp
je
pop
inc
jmp
adc
cmp
add
xchg
ljmp
pushl
clc
add
sbb
leave
xlat
int3
jge
jo
dec
dec
push
pushf
cltd
and
mov
mov
pop
jae
arpl
sbb
ret
scas
je
fs
mov
and
lock
ss
imul
sti
insb
pop
cmp
xor
cs
xor
les
enter
js
jne
cli
in
repnz
mov
addl
xchg
aaa
jp
mov
jo
test
shl
inc
jl
ds
push
ja
sarl
add
and
push
add
loopne
pop
xor
shll
into
divb
pop
sub
sbb
loop
cmp
pop
adc
dec
sbb
mov
xorb
in
adc
in
sub
jno
jae
sbb
in
jns
out
lret
scas
dec
mov
aaa
addr16
aas
icebp
in
pop
adc
lret
mov
out
shrb
pop
push
sbb
xchg
pop
jge
push
jns
shlb
pop
mov
mov
lahf
inc
cmp
test
sbb
rorl
popl
mov
and
jg
fmuls
xor
sti
add
fsubrs
outsb
ds
dec
jg
push
add
sti
and
roll
std
mov
inc
cmp
xor
or
push
mov
pop
hlt
lcall
insb
fdivrs
inc
pop
or
push
mov
testl
mov
fisttpll
mov
ja
and
repz
mov
stos
mov
into
xchg
sbb
xor
push
add
xchg
loopne
pop
rcrl
aaa
inc
jg
movsl
or
pop
push
out
pop
lea
sub
sub
mov
ret
mov
push
fcomp
mov
adc
or
xor
or
inc
cmpsb
push
fs
fs
adc
adc
cmp
mov
aaa
xchg
push
int3
lahf
cli
xor
aam
loop
dec
cmp
and
rolb
loop
loopne
pusha
sub
cs
push
xor
jo
aam
hlt
cmp
or
ss
icebp
mov
fdivr
add
pop
lcall
cmp
mov
je
mov
xor
sbbb
jae
push
and
mov
mov
push
cmp
xchg
test
rcrl
jmp
mov
bound
jle
cmpsl
popf
xchg
push
mov
ljmp
test
cmp
inc
mov
sti
pop
sub
ffree
mov
or
nop
lahf
addr16
xchg
into
inc
leave
push
outsb
cmpl
dec
shl
cmp
sub
push
shlb
xchg
bound
pop
xlat
push
pop
push
lods
pop
push
pop
push
outsl
xor
aam
xchg
outsb
rorl
cmp
lahf
ret
add
push
cmpsb
dec
aas
or
jnp
mov
xchg
je
xor
cmp
xchg
adc
cmp
pop
mov
add
fadds
movsb
fidivrs
push
lret
sbb
das
pop
push
ret
inc
jnp
inc
mov
addr16
sbb
out
mov
xor
mov
int3
icebp
das
pop
cmpsb
daa
dec
and
cmc
into
inc
mov
mov
mov
mov
out
or
or
push
cs
push
mov
xor
fimuls
pop
xchg
rorl
sbb
add
jl
das
xchg
test
in
sbbb
dec
repnz
mov
hlt
push
lds
pop
inc
mov
lock
out
mov
xlat
xor
dec
push
aaa
rcrb
fwait
aas
dec
push
sub
pushf
sahf
out
pop
fstps
jge
inc
and
insl
int
je
insb
jmp
xchg
push
loope
sub
adc
pusha
pop
out
pop
stos
xchg
mov
dec
adc
mov
lcall
stc
addb
das
out
popa
mov
test
push
mov
rcr
in
stos
push
enter
mov
xor
out
and
and
xchg
mov
mov
lcall
mov
out
push
pop
xchg
push
and
push
add
cmp
sbbl
into
inc
mov
aaa
add
inc
leave
loopne
mov
push
cli
rolb
mov
cld
test
mov
dec
aaa
arpl
mov
sbb
imul
inc
xchg
sub
sbb
xchg
mov
cli
inc
dec
jle
cmp
xor
lcall
sub
inc
push
jl
iret
imul
mov
mov
fidivrs
jg
mov
pop
fcomps
pop
inc
loop
fstpt
dec
adc
and
pop
jne
mov
push
pop
xlat
xchg
shlb
xchg
ljmp
aas
and
mov
jo
into
fs
xlat
push
popf
push
incl
test
mov
jecxz
cmpsl
jns
mov
adc
inc
clc
lahf
int3
mov
icebp
fdivl
pextrw
push
sbb
pop
fildll
dec
pop
jbe
testb
push
ret
push
into
xor
out
jae
dec
push
xor
test
rorb
inc
ret
mov
sbb
mov
adc
sarl
pop
iret
adc
add
pop
mov
push
xchg
mov
cs
sbb
or
leave
fwait
jns
cmp
xchg
pop
je
pop
cmp
fildl
aaa
lods
jmp
pop
mov
popa
fisttpll
jae
mov
jp
lods
movsl
adc
xchg
sti
push
lds
jnp
inc
divl
insb
mov
pop
repz
lods
insl
in
or
inc
xchg
je
hlt
sub
fimull
mov
enter
repz
push
fs
mov
push
mov
ficomps
inc
loop
mov
push
es
scas
inc
aad
mov
ret
or
xlat
arpl
in
inc
sbb
jmp
mov
clc
sub
adcl
adc
mov
nop
xchg
dec
pop
pop
push
pop
inc
pop
arpl
cmpsl
push
stos
iret
fdivrl
stos
lods
popf
imul
popf
scas
or
lods
xchg
cltd
adc
cmpsl
out
mov
shufps
jno
mov
inc
call
mov
inc
dec
loope
shrl
testb
mov
jbe
adc
cli
std
icebp
frstor
sbb
fcoms
inc
xchg
gs
mov
ss
movsl
mov
addr16
pop
mov
pop
pop
fists
arpl
mov
dec
test
stc
pop
in
dec
sbb
cmp
sub
and
stos
cmp
push
push
mov
fsubr
mov
das
aaa
inc
pop
sbb
out
jecxz
test
xchg
rcrl
mov
movsl
jp
lds
xchg
mov
mov
cwtl
mov
fwait
out
ss
lret
scas
mov
stos
gs
popa
xchg
fildll
imull
mov
jns
je
and
mov
adc
fstps
insl
dec
popa
jg
scas
pop
leave
sahf
sbb
js
in
mov
iret
cmp
adc
push
out
cltd
push
roll
xchg
cs
aad
out
push
clc
out
add
xor
std
jg
push
pop
pop
test
inc
ja
scas
pop
add
xchg
jl
test
pusha
fistpl
bound
lock
cmp
jne
mov
nopl
cmc
or
adc
rclb
mov
scas
fucom
adc
xor
and
aas
xchg
push
lcall
fistpll
test
xor
sub
outsb
icebp
adc
bound
popl
cmp
ljmp
ret
divl
xchg
pop
stos
mov
insl
push
je
sti
imul
cmpsb
notb
jo
mov
jb
std
inc
shll
xor
mov
push
leave
sti
incl
sub
add
adc
pop
scas
pop
xor
fisubs
icebp
sbb
or
mov
dec
and
inc
xor
mov
cli
xchg
bnd
std
stos
jle
call
inc
daa
addr16
add
lcall
cmp
pop
mov
sbb
lods
enter
xchg
push
sbb
or
movsl
inc
and
frstor
shll
test
rcr
jg
push
inc
sbb
xchg
mov
rolb
mov
addr16
dec
loopne
ds
sbb
pop
fs
push
or
lret
jmp
jp
ret
out
fs
in
or
jmp
dec
mov
clc
cmp
or
cmpsb
mov
inc
cli
dec
out
add
ljmp
dec
pusha
mov
mov
pop
enter
je
imul
inc
inc
mov
jmp
cmp
les
es
fnstcw
push
notl
sub
leave
dec
inc
cltd
dec
fstpl
lock
testb
push
cmp
test
dec
sub
out
out
pop
sbb
outsl
mov
fdivr
jg
fs
clc
mov
inc
pusha
scas
scas
cmc
inc
cmc
jnp
jge
jecxz
mulw
push
pop
sarb
mov
lret
pop
xchg
mov
lret
pop
rolb
mov
xchg
imul
gs
jmp
mov
dec
xor
outsl
test
inc
shl
xchg
stos
lahf
ret
mov
xchg
or
into
sub
push
icebp
mov
cltd
cmpsb
ss
fnsave
xor
xor
in
jle
stos
xlat
inc
cmpsl
mov
dec
mov
sbb
imul
scas
cwtl
push
cmp
incb
or
push
popa
xchg
into
xlat
imul
sbb
adc
out
jb
sub
cs
mov
mov
in
adc
cwtl
nop
daa
cltd
xchg
mov
push
fistps
sbb
mov
add
imul
addr16
sub
mov
movsb
push
xor
cwtl
fdivl
and
cmp
adc
les
add
scas
aam
jns
or
cmc
push
xchg
std
stc
dec
push
pop
aas
mov
test
dec
push
hlt
dec
popf
dec
in
jg
stos
or
js
mov
dec
lret
rcrb
mov
adc
xchg
cmpsb
inc
sbb
mov
xor
dec
inc
jle
in
push
xor
or
jnp
lret
orb
inc
pop
jne
push
jb
pushf
adc
jp
stos
sub
xor
call
bound
cmpsl
lods
or
push
mov
mov
cwtl
jmp
lods
or
push
out
jo
add
pop
mov
push
es
sbb
mul
es
push
das
push
mov
adc
push
out
cmp
imul
decl
stos
js
add
enter
mov
mov
or
cmp
in
xchg
adc
orb
mov
sub
or
add
cmp
pop
push
rclb
movsb
push
adc
push
dec
das
add
pop
push
adc
sbb
push
stos
lahf
lcall
cmpb
push
clc
push
pusha
loope
mov
lods
sbb
mov
xlat
push
lret
das
jmp
sub
push
test
leave
jbe
jmp
dec
call
mov
mov
add
test
bound
xorl
adc
rcll
pushw
push
sbb
jno
xor
pop
cld
jae
out
imul
test
mov
sub
repnz
sahf
into
sbb
jb
jge
and
icebp
push
inc
fcoml
ret
daa
lods
imul
dec
sub
aad
enter
dec
xor
dec
mov
mov
xor
jmp
loop
and
push
xchg
jg
out
enter
les
sub
jne
shr
rcll
cmpsb
jbe
sub
adc
shrb
pusha
pop
mov
lock
push
xlat
sahf
pop
ficompl
lods
lds
popf
mov
sbb
das
xor
xor
int3
adc
push
nop
mov
and
sub
xlat
xchg
bound
repnz
pop
jno
jns
dec
std
jg
test
popl
push
call
test
into
jae
repz
xor
fisubrl
jae
stos
icebp
add
adc
imul
push
lea
gs
adc
fcoml
icebp
in
arpl
xor
push
or
notb
repnz
mov
mov
and
pop
pop
adc
lcall
xchg
aam
inc
icebp
push
je
vpaddb
push
pop
mov
loop
push
push
aad
inc
inc
sbb
adc
cmp
and
mov
lret
call
push
push
xlat
mov
pop
xchg
adc
pop
repz
sbb
rorb
xor
lret
sbb
fs
iret
dec
shrb
aas
push
adc
push
xor
mov
daa
sbb
icebp
sarl
aam
test
dec
outsl
sub
xchg
inc
and
ret
push
popf
mov
insb
jb
lret
mov
test
into
cmp
xchg
pop
in
sub
ljmp
sarb
dec
mov
push
xor
aad
add
sbb
add
and
or
mull
filds
mov
xor
mov
inc
testb
xchg
fcompl
cmpb
jl
test
mov
rol
cmp
daa
xchg
pop
in
hlt
outsb
jae
stos
mov
and
sbb
outsb
lcall
popf
dec
mov
cwtl
xchg
movsb
js
sub
dec
xorl
fs
stos
lahf
std
pushf
mov
mull
jae
mov
cmc
mov
pushf
jb
imul
jecxz
fnclex
pop
ljmp
jg
jecxz
cmc
aaa
addb
repz
push
fistpll
inc
scas
xor
or
cld
pop
jnp
imul
mov
push
add
sbbl
mov
xor
ja
ja
mul
clc
adc
mov
mov
fdiv
lcall
or
or
movsb
addr16
jne
sbb
pop
pop
xchg
and
push
dec
add
sub
cltd
lret
iret
mov
jle
scas
test
ret
mov
adc
add
loopne
bound
ret
push
shll
adc
push
sbb
arpl
or
test
push
jo
push
pushf
add
or
cmp
or
pop
xor
test
and
pop
loopne
bound
xor
fsubs
mov
test
fcoms
push
lock
out
aas
jbe
data16
mov
jno
fisttpll
jne
cmp
mov
ljmp
xchg
mov
sbb
ja
push
add
subl
dec
and
sub
inc
lret
loope
pop
test
mov
or
aad
int3
jmp
shll
in
lcall
lods
inc
sub
addr16
add
nop
inc
lea
add
loopne
inc
aaa
mov
mov
stos
mov
push
lret
or
filds
pop
adc
push
pop
arpl
hlt
sub
push
sbb
and
test
jbe
push
aam
popa
dec
orl
and
int
mov
push
mov
push
js
pop
popa
jg
adc
inc
pop
out
pop
dec
and
adc
bsr
lock
push
adc
jl
leave
fstpl
clc
mov
jecxz
stos
scas
je
sbb
aaa
inc
xchg
cmp
stc
movsb
xchg
push
pop
in
or
je
loope
enter
outsb
icebp
data16
ja
orb
sub
fbstp
push
mov
mov
out
adc
adc
xchg
and
rol
insl
xor
dec
mov
fsubrl
xor
ss
pop
aam
add
out
lea
cmpb
add
push
push
xchg
push
insl
jbe
jge
lcall
lahf
fbstp
adc
or
pop
pop
imul
or
jno
or
stos
add
adc
mov
inc
mov
stos
push
imul
xlat
clc
pop
fstpl
cwtl
cltd
out
jbe
jle
aad
or
mov
mov
shr
nop
jmp
xor
mov
push
or
and
push
sub
xlat
stc
xlat
pop
jo
out
adc
adc
stc
and
das
push
cmp
arpl
lret
add
mov
xor
sub
adc
xlat
cmc
out
not
pop
and
aaa
adc
addr16
ja
xchg
mov
in
cmc
out
not
pop
and
aaa
adc
addr16
ja
xchg
mov
in
jne
pop
movsl
pop
xor
inc
gs
jne
inc
jbe
xchg
mov
in
cmc
out
not
pop
and
aaa
bound
in
fisttps
push
bound
ja
addr16
pop
lcall
fwait
xlat
daa
repz
out
xchg
mov
mov
xor
jb
inc
addr16
pop
and
and
add
data16
out
repnz
ret
xlat
rolb
xchg
out
jnp
imul
mov
sub
sbb
or
mov
cmc
jecxz
sti
std
cmp
or
ja
push
xor
in
loope
std
nop
cmp
mov
rcrb
cmp
bound
add
push
xchg
mov
sbb
sbb
mov
pop
push
incb
sbb
jno
or
aas
xor
and
out
xchg
ret
sbbb
xchg
mov
pop
and
jbe
xchg
add
or
cmp
xchg
mov
cmpsl
subb
cli
es
popl
or
idivl
mov
mov
test
fiaddl
jbe
cltd
fsubr
test
xchg
enter
in
ret
cwtl
jle
adc
mov
movsb
xchg
or
adc
pop
addr16
repz
aaa
add
ljmp
lea
bound
aaa
js
imul
lea
in
jmp
sbb
and
add
and
ret
and
cmpsl
lahf
shr
shr
mov
in
out
bound
jb
es
inc
adc
xor
add
adc
loop
repnz
xchg
push
bound
ja
addr16
pop
and
xor
add
adc
loop
repnz
xchg
push
popa
mov
cmpsl
push
fsubrs
test
xchg
fcmove
test
push
arpl
iret
add
in
sbb
jo
jne
cmp
add
jecxz
xlat
rcr
pop
pop
mov
js
and
or
add
mov
add
jge
add
popfw
or
jno
int
ja
adc
pop
gs
shrl
or
into
xor
je
lahf
or
push
inc
clc
xor
aas
sbb
ret
xor
int3
les
pushf
cli
cmc
mov
sub
dec
lods
cmp
out
and
pop
dec
rcrl
fisubl
sub
xor
push
mov
nop
push
jge
outsl
stc
lret
push
add
xor
shlb
imul
push
test
fldenv
nop
es
inc
fistl
pop
push
movsb
mov
xor
js
loop
xchg
cli
mov
cmpsb
test
flds
or
insl
sub
add
orb
push
in
aaa
mov
mov
test
jp,pn
cmp
jne
adc
xor
jno
fwait
sub
add
lret
inc
arpl
push
push
int
inc
or
jo
xchg
cmpsl
add
sbb
jmp
push
sbb
jecxz
sbb
sbb
pop
popa
sahf
mov
jb
push
jge
pusha
enter
xor
inc
pop
jno
negl
stos
push
jnp
movsb
jp
int3
stos
and
xchg
cmp
shlb
push
hlt
add
cmp
hlt
mov
push
outsb
adc
jnp
dec
lcall
cmp
sbb
xlat
ljmp
in
jl,pt
inc
mov
fwait
and
push
sub
call
mov
aas
ljmp
mov
fiaddl
or
fs
or
add
push
decb
mov
adc
pushf
add
repnz
mov
xlat
mov
es
push
sbb
adc
dec
test
arpl
out
mov
stc
mov
sti
aam
xchg
dec
add
out
mov
aam
movsb
test
test
pop
sahf
mov
mov
std
fwait
mov
leave
out
fdivs
or
enter
mov
dec
or
out
or
insb
icebp
xor
jg
jns
dec
jge
and
jge
in
add
xchg
rcrl
inc
xchg
dec
mov
lret
outsb
add
in
adc
dec
repnz
jae
mov
fwait
adc
xchg
icebp
mov
cmpsb
fs
sub
cmp
dec
xchg
pop
lea
mov
mov
dec
jne
lds
inc
or
stos
lret
sti
sub
shll
xchg
sub
or
cmp
xlat
sarl
scas
insl
popf
push
je
lds
mov
aas
ss
mov
into
adc
push
jle
mov
addr16
loope
push
and
mov
and
push
fnsave
pop
mov
inc
jmp
pop
lods
cwtl
mov
lods
mov
ror
sub
cmp
pop
subps
out
and
es
pop
es
fs
add
out
and
push
jecxz
insb
jns
sub
sub
lea
adc
add
fstpt
xor
cmp
repz
inc
push
and
fstl
dec
in
cltd
jb
je
mov
and
jbe
rorl
sbb
fisttpl
icebp
or
cmp
test
hlt
int
ret
filds
xchg
int3
push
sub
cmp
add
orb
fs
pop
add
dec
pop
insb
xchg
std
cmc
sarl
adc
ret
mov
dec
dec
loop
adc
cmp
mov
sbb
mov
arpl
jle
push
cmpsb
xor
mov
sbb
insl
cmp
je
aam
stc
push
push
call
mov
outsl
shll
dec
push
out
stos
xor
and
jae
cld
arpl
pop
xchg
movl
bound
rcrl
adc
repnz
notl
cwtl
and
cmp
mov
add
inc
into
mov
inc
rcrl
xor
test
inc
xchg
enter
aad
fmuls
sahf
push
frstor
adc
sub
pop
cmp
movsb
lock
test
sub
push
inc
repnz
ret
add
inc
push
pop
sub
mov
insl
ret
je
ss
adc
out
pop
mull
ljmp
pop
xor
ljmp
mov
je
in
stos
insl
sbb
fldt
int
notl
sub
dec
inc
loop
mov
sbb
push
add
inc
sbb
cmp
jno
push
fimuls
pusha
mov
mov
fbstp
sub
sub
divb
sbb
sti
cmp
mov
xchg
lods
pushf
mov
mov
xor
add
adc
mov
and
adc
mov
xchg
xchg
test
sarl
mov
adc
or
bound
push
cmp
add
jb
ret
sbb
push
imul
xlat
lea
mov
cmp
ds
xchg
call
jl
mov
bound
dec
rcll
jge
fidivrs
add
mov
dec
mov
scas
js
inc
out
or
and
jmp
psrlw
aad
cli
ss
jbe
sub
push
xchg
iret
cmp
leave
imulb
mov
push
insl
loope
push
adc
insl
outsb
inc
fs
stos
ljmp
sahf
mov
mov
aas
adc
push
repnz
fwait
orb
push
ret
cmp
into
and
sarb
xchg
out
xchg
in
xchg
add
stc
cmpsl
mov
xchg
or
popl
arpl
imulb
add
xchg
mov
pop
or
mov
xor
inc
daa
sti
test
mov
cltd
mov
xor
xchg
cltd
xor
fcmovnbe
ffreep
mov
test
loopne
push
adc
cmp
lock
push
jp
jmp
xchg
imul
je
xor
jne
jns
jg
push
or
out
mov
xor
in
enter
sub
pushf
push
pushf
roll
in
cmp
ja
insl
aaa
add
in
xor
mov
push
push
rolb
xlat
dec
aas
imul
xchg
insl
xor
jmp
mov
cmpl
inc
fs
jmp
shl
out
gs
mov
mov
cmpsb
das
push
mov
js
cmp
dec
cmp
cmpsl
loope
out
mov
dec
and
loope
in
sub
sahf
jle
and
cltd
test
icebp
jo
add
int3
jb
shrl
pusha
xchg
jmp
or
push
mov
fstpt
outsl
jmp
jecxz
inc
mov
cwtl
repnz
jne
dec
pop
lods
pop
jo
mov
movsb
data16
add
mov
cmp
jno
cmpsl
jbe
xchg
xor
inc
cltd
fists
inc
sbb
inc
add
psadbw
inc
or
jno
rorb
rclb
or
or
pusha
inc
les
aaa
sub
fucom
ljmp
lahf
pop
xchg
fsts
test
and
mov
sub
outsb
fucom
pop
das
roll
and
push
sbb
test
mov
xor
mov
sub
rorl
aas
fnstsw
xchg
jno
loopne
add
lds
loope
insl
movsb
in
lock
rcrl
out
out
mov
push
cmp
arpl
mov
adc
ss
xchg
mov
incb
lock
mov
adc
push
push
loop
inc
inc
pop
aam
mov
cmp
mov
and
outsb
test
pop
adc
rclb
mov
mov
ffreep
or
lods
adc
mov
outsb
sti
sti
push
jp
cmc
rcll
outsb
jg
and
jnp
imul
sbb
xor
lcall
push
jo
inc
pop
testb
adcl
shrb
imul
pop
dec
mov
dec
lcall
pop
push
shll
sub
jno
mov
cmpsl
lahf
test
mov
clc
mov
xchg
fbld
cmp
mov
push
xor
dec
cmp
pop
inc
insl
jmp
xor
and
dec
push
arpl
jno
in
pop
and
pop
sbbl
in
fnstenv
add
push
add
bound
imul
ja
inc
pop
dec
mov
das
pusha
test
andb
out
test
sub
ja
xchg
push
mov
jl
lock
orb
mov
stos
loope
jno
jno
cmp
pusha
imul
sub
mov
lret
das
xchg
pop
roll
fwait
loope
loopne
lcall
cli
stc
fadd
xchg
add
repnz
jns
jecxz
sbb
mov
jmp
xchg
jecxz
push
push
jge
push
test
adc
sub
ljmp
xchg
ss
mov
loope
aad
mov
outsb
outsb
into
sbbl
inc
int3
dec
xor
ret
jmp
mov
jecxz
xlat
cli
stc
pop
xchg
insl
pop
and
test
inc
xchg
mov
fldt
test
pop
mov
xor
cmp
mov
pop
or
inc
cmp
out
cmpsl
sti
aad
sub
mov
xchg
mov
push
cmp
out
scas
xchg
xorb
sbb
loopne
es
fwait
push
mov
jb
xchg
push
jb
lock
inc
test
aas
iret
fdiv
cmp
mov
inc
cmc
sbb
xorb
xor
mov
lret
out
pop
pusha
das
sbb
arpl
push
jo
hlt
test
mov
jns
sbb
inc
add
addb
dec
sub
sbb
subb
cmp
jbe
inc
call
out
mov
jns
mov
jl
aam
sub
add
jae
fistl
pusha
clc
adc
adc
xchg
and
outsl
aaa
data16
test
stos
dec
addr16
xchg
dec
push
cli
push
dec
fldt
test
lcall
and
enter
dec
aam
mov
mov
daa
stos
and
insl
pop
or
cmpsb
in
fdivl
pop
icebp
add
inc
cli
push
xchg
repnz
mov
fs
mov
fmuls
int
outsb
dec
jl
aam
shrb
imul
dec
lret
dec
add
lahf
jg
movsb
sub
jne
push
and
push
cwtl
mov
push
ja
shlb
pop
xchg
rcl
sub
push
jmp
bound
push
adc
fs
icebp
sbb
xchg
jg
je
sub
loope
mov
inc
sbb
loope
frstor
jp
push
cmp
sub
mov
xchg
xorl
mov
sbb
stos
dec
push
inc
imul
pushf
rsm
jmp
jmp
xlat
idiv
cwtl
mov
sbbl
cmp
inc
aaa
add
cmp
or
shlb
andl
jge
in
or
pop
lds
insl
mov
shl
cmpsl
loop
mov
mov
jne
jb
or
cmp
outsl
xchg
out
xor
frstor
dec
sbb
lds
cmp
lcall
jle
adc
mov
add
js
xchg
insb
clc
push
lea
and
or
decl
mov
push
cmpsl
inc
movsl
out
and
ja
push
idivl
shl
sahf
loope
add
in
xor
repnz
mov
icebp
into
pushf
jle
pop
or
mov
int
mov
or
push
sbb
nop
pop
aas
lock
or
sub
cmp
jmp
pop
scas
pop
jb
mov
pop
mov
dec
out
pusha
jmp
lods
cld
int3
cmp
pop
sub
and
sahf
cmp
jmp
xchg
mov
cmpsb
sub
sub
adc
cmpl
es
ret
xchg
pop
pop
jp
xchg
mov
out
ljmp
mov
cmp
dec
pop
jnp
mov
xor
mov
popa
and
sbb
jno
add
outsb
aas
arpl
sub
sub
sub
adc
dec
inc
int3
repnz
add
lods
adc
repnz
shlb
jns
add
js
sbb
inc
sti
adc
jmp
pop
xor
clc
pop
jp
movsl
pushf
clc
mov
int3
inc
stc
test
lret
mov
or
pop
lea
add
adc
jb
cmpsb
pop
int3
inc
inc
hlt
cmp
hlt
mov
shll
aad
sub
es
stc
in
sbbb
popa
add
repz
adcb
int
pop
ret
inc
mov
xchg
mov
sti
sbb
xor
int3
xchg
jp
incb
mov
pop
popf
or
add
jg
sahf
cmp
loopne
and
cwtl
out
or
call
arpl
adc
and
clc
in
and
scas
insl
xchg
scas
nop
aaa
fyl2xp1
mov
or
mov
jnp
push
dec
mov
lea
jle
sbb
mov
jns
leave
and
pop
sbb
popf
sbb
dec
mov
pop
imul
sbb
mov
xchg
inc
lcall
mov
sbb
cmp
je
mov
loopne
push
dec
pop
pop
lods
enter
movsb
lcall
bound
push
mov
jae
cmpsl
out
inc
jae
mov
mov
pop
fs
cwtl
in
movb
fdivp
xchg
hlt
call
insl
push
mov
push
xchg
test
cmpsb
cmp
fsubrl
subb
pop
dec
test
rcrl
popa
push
mov
pop
cmp
lea
xor
iret
dec
dec
mov
pop
or
inc
jns
push
data16
mov
adc
mov
iret
aad
xlat
ret
mov
loope
and
xchg
xor
jl
ret
xchg
lret
and
mov
jle
xor
mov
cltd
add
push
xor
or
dec
dec
and
mov
loop
sub
lret
push
push
in
mov
ret
lahf
pop
ja
or
repz
or
cltd
cld
jge
adc
dec
ljmp
or
xchg
aam
xor
jb
or
mov
imul
dec
xchg
testb
dec
jne
adc
jae
leave
jmp
xchg
mov
popa
int3
test
mov
ja
mov
jmp
mov
movsb
or
xchg
mov
testb
cmc
pop
inc
mov
int
mov
imul
aas
test
adc
add
sbb
pop
sub
lock
out
fimuls
stc
cmpsb
adc
jo
sub
jge
push
push
cmpl
add
test
in
push
jns
xor
clc
jb
cltd
jl
in
imul
xchg
dec
icebp
lret
ret
sub
loop
imul
sbb
mov
pop
mov
inc
push
mov
insb
daa
out
fisttps
mov
mov
int
insl
shlb
sbb
sbb
sub
out
enter
int3
insl
push
dec
popf
aas
add
insb
mov
ljmp
stos
les
aaa
repnz
daa
cmp
or
sbb
xor
jmp
sti
jmp
inc
cmpsl
and
outsb
jmp
outsl
ds
andb
dec
mov
sub
iret
and
clc
xor
xchg
xchg
lds
lret
inc
xchg
xchg
in
movsb
jp
mov
popf
mov
dec
dec
js
sub
cwtl
mov
mov
mov
fsubs
xchg
push
sub
inc
inc
or
and
xchg
ret
shl
setge
mov
fdivr
scas
and
out
pusha
mov
mov
insb
repz
jmp
je
in
adcb
dec
addr16
cwtl
test
add
sub
stos
mov
cmc
imul
aam
lret
xchg
push
push
lods
and
jo
pop
sbb
xchg
xchg
adc
add
outsb
jle
data16
popf
in
pop
mov
negb
cli
jno
or
cwtl
das
lods
inc
push
dec
lods
cmpsb
loop
xchg
int3
das
stc
cmpsb
fsubrs
add
mov
rol
xor
loop
mov
inc
jae
icebp
jmp
push
push
inc
cmp
add
xchg
cltd
popf
outsl
xlat
and
push
xor
jbe
jmp
mov
lods
push
fbld
dec
fmul
mov
pop
cwtl
mov
das
adc
stos
andb
adc
jle
imulb
icebp
push
notl
out
stos
cmp
jle
xchg
sbb
ljmp
and
into
fld
jnp
ss
add
dec
aas
xlat
hlt
rcr
in
stc
pushf
cli
jmp
mov
sub
popa
jecxz
mov
fildll
fwait
int
mov
xchg
jp
repz
push
or
fadds
mov
pop
shrb
cmc
push
nop
mov
mov
aas
push
xchg
and
enter
mov
push
mov
addr16
jnp
pop
sar
test
mov
inc
and
nop
pop
loopne
cltd
jne
shlb
fldt
arpl
lcall
jne
xlat
pop
pop
inc
fldz
rorl
mov
out
mov
mov
jo
pop
push
mov
ret
test
stc
pop
adc
jge
cmp
stos
loopne
inc
std
jne
mov
inc
shll
cmp
and
xor
pop
js
popf
dec
cmp
into
mov
and
xchg
aas
jnp
jle
inc
xor
mull
fs
ret
aam
lret
movsb
lahf
and
or
pop
inc
sbb
xor
loope
add
das
push
and
daa
sub
mov
stc
cwtl
xchg
lds
repnz
in
mov
lcall
insl
dec
lret
lock
or
mov
iret
loope
jmp
mov
xchg
jbe
jecxz
or
or
lcall
mov
adc
enter
cltd
inc
and
ljmp
addb
inc
xlat
test
dec
add
test
inc
jnp
in
repnz
mov
lock
add
or
mov
lds
or
fistps
shll
sbb
fsts
repnz
jne
xor
sbb
call
scas
dec
pop
or
dec
adcl
push
add
sub
or
pop
stos
mov
in
mov
xchg
out
loopne
dec
sbb
xchg
fsubrs
cmpsb
xchg
popa
add
adc
push
lea
arpl
and
fdivs
jecxz
mov
mov
jno
loop
sarl
lods
pop
xorb
sti
add
add
xor
dec
popf
mov
jno
lahf
xor
sub
sub
mov
xor
add
or
cs
jo
push
int
fldt
loop
gs
gs
push
arpl
xor
push
cmp
xor
mov
scas
adc
nop
or
mov
adc
cltd
lahf
dec
inc
pop
push
sahf
fwait
std
cmp
jge
int
xor
dec
sti
dec
addr16
xlat
outsb
stos
mov
xor
inc
andb
mov
rorb
mov
inc
mov
pushl
pop
punpcklbw
lret
xor
pop
mov
mov
negl
test
mov
xchg
xor
add
jg
call
stos
lock
jl
dec
xor
pop
jl
lock
sub
inc
fistl
mov
lret
mov
pop
xor
jo
fstps
mov
je
xor
dec
insb
mov
mov
sbb
imul
cwtl
sub
les
xchg
aad
fldl
in
pop
movsl
push
jno
pop
insl
daa
cmp
ja
mov
inc
lds
rolb
loop
add
div
xor
xchg
outsb
mov
les
sahf
hlt
out
jbe
pop
push
jbe
inc
pop
ja
stos
loopne
lods
and
stos
rorl
or
decl
mov
pushf
lds
ret
aad
dec
push
bnd
loope
addr16
data16
inc
imul
mov
dec
lds
mov
incl
aaa
push
sbb
dec
sahf
xchg
mov
repz
movsb
xor
aam
inc
mov
fistps
aam
cltd
les
ja
mov
fiaddl
inc
adc
aaa
or
pop
test
sbb
js
enter
popf
dec
in
hlt
stos
sti
or
loope
cmpsb
arpl
and
ljmp
addr16
pop
and
xor
add
adc
loop
repnz
xchg
push
bound
ja
addr16
pop
and
xor
add
adc
loop
repnz
xchg
push
bound
pop
inc
addr16
xchg
pop
xor
add
adc
loop
repnz
ret
xchg
mov
dec
xchg
inc
sbb
inc
inc
push
pop
and
xor
add
pop
pop
ret
loopne
bswap
dec
std
pop
in
popf
icebp
loope
shrl
adcl
push
sub
pop
xor
jge
insl
add
shrl
mov
sbb
push
sub
and
insl
add
shrl
mov
sbb
xor
das
pop
ja
jge
je
jbe
mov
shll
adc
popf
mov
in
or
mov
imul
loope
push
dec
and
adc
loopne
mov
mov
test
test
mov
cld
mov
inc
sbb
push
in
mov
sbb
hlt
xlat
les
mov
nop
lea
les
fs
add
insl
push
pop
cs
int3
test
int
jle
test
cmc
mov
mov
bound
loope
test
idivl
es
pop
aas
sub
in
or
std
gs
mov
cmp
in
push
icebp
loope
shrl
mov
sbb
push
sub
and
insl
inc
fdiv
stc
cwtl
aam
les
cltd
hlt
out
cmc
sbb
add
pop
inc
dec
pushw
arpl
fs
popf
call
mov
test
mov
adc
ss
mov
je
push
clc
mov
mov
mov
mov
std
xchg
in
sbbl
xor
jge
insl
add
shrl
mov
sbb
push
sub
and
insl
add
mov
iret
and
sbb
popa
cmp
and
fsts
dec
lods
stos
adc
sbb
fisubrs
bound
lretw
or
popf
jg
test
add
mov
je
les
lcall
ror
lret
xor
mov
jp
xchg
mov
stos
imul
xor
jo
fildl
stos
insl
sub
mov
or
je
sbb
mov
sub
loopne
repz
popl
insb
mov
movsl
and
inc
ja
mov
inc
scas
lods
je
pop
push
lods
fcmovbe
stc
sbb
std
iret
adc
sub
cs
aaa
int3
push
jg
jge
mov
mov
jmp
gs
test
int3
pop
mov
mov
cmp
movsb
cmpsl
cwtl
sbb
and
mov
sbb
in
push
mov
jns
cmp
push
adc
movsl
fldt
cmp
adc
je
sbb
dec
mov
in
ja
push
pop
int
dec
cmp
push
and
jge
leave
and
sarb
adc
outsl
gs
adcb
cmp
adc
pop
and
and
fwait
dec
mov
xlat
sbb
inc
pop
jne
cmpsl
nop
jb
mov
inc
mov
ljmp
add
repnz
dec
outsl
jno
hlt
xor
jb
dec
lahf
or
push
mov
mov
inc
int3
jg
xlat
cmp
xchg
sub
cli
icebp
adc
hlt
lret
jo
jne
imul
push
fcmovnu
fs
sbb
adc
in
cmp
divl
ret
movlps
xor
fstp
xor
cmp
sbb
out
pop
stos
dec
mov
jmp
add
cli
dec
sbb
cmpsb
and
push
aad
push
mov
iret
cld
pusha
into
lcall
hlt
cmp
sbb
icebp
mov
inc
leave
or
adc
jle
pop
jne
out
mov
in
aam
ret
arpl
pop
push
push
xchg
jmp
cmc
test
outsb
sbb
popf
xchg
in
scas
and
popa
inc
add
xchg
mov
loop
mov
jno
sub
xor
out
insb
imul
cli
lcall
lcall
packsswb
pop
cmp
js
push
mov
sbb
xor
jo
test
in
push
and
mov
dec
loopne
mov
mov
mov
notb
scas
sbb
inc
int3
pop
jae
pop
test
pop
or
adc
add
jl
cmp
and
or
adcb
outsl
in
sti
sarb
mov
fistps
cmp
sub
sbb
repnz
jno
scas
pushf
mov
jbe
fld
adcb
mov
fsubrl
fucomip
jmp
fimull
out
cltd
loop
mov
js
lock
jg
sub
xchg
movsb
stc
push
mov
inc
cli
jle
fiadds
add
fnsave
inc
xor
xchg
lods
push
iret
or
sbbl
jo
jb
mov
adc
cmp
push
dec
adc
sbb
mov
jno
loop
inc
sbb
fcoml
out
lret
cmp
lahf
lret
out
ret
in
or
push
pop
fwait
pop
les
outsl
xchg
bound
pushf
shl
jecxz
pop
or
cli
xchg
pop
inc
shr
out
and
insl
lods
insl
pop
divl
inc
lock
push
imul
pop
inc
iret
mov
cli
push
dec
push
aad
xchg
js
mov
lods
rorb
stos
stc
jmp
stos
pop
enter
dec
inc
jge
int3
push
or
mov
ja
dec
dec
les
dec
scas
mov
inc
push
and
sbbl
pusha
shl
fcmovnu
fdivp
pop
out
and
test
jns
jb
js
add
js
shrb
add
xchg
stos
dec
int
jo
imul
mov
adc
cmp
jge
cwtl
aaa
and
mov
and
mov
shrb
popf
insb
aas
dec
cmp
pop
xchg
iret
daa
popa
inc
xchg
push
mov
push
sub
inc
movsl
sahf
pop
fcoms
push
xor
sub
push
cmp
popa
jge
mov
bound
add
inc
jg
mov
rcrl
push
xor
shll
sbb
cmp
jno
mov
dec
into
in
push
rcrb
dec
sbb
mov
roll
incl
mov
push
ret
sbb
in
dec
stos
xchg
add
push
pushf
rol
and
stos
push
mov
pop
sbbb
jo
push
cltd
add
xor
cmc
pop
dec
and
jmp
js
hlt
test
lret
mov
loope
test
add
mov
mov
movsl
push
xor
push
mov
lcall
addl
std
or
push
mov
jae
push
jecxz
in
out
mov
pop
cli
mov
xor
test
call
add
aas
sbb
adc
fimull
push
aad
add
fadd
mov
lock
sub
inc
mov
movsl
jecxz
test
ss
xchg
in
mov
outsb
pop
clc
add
test
sbb
push
jmp
xchg
ja
sbb
cmp
push
sub
or
mov
popf
mov
ss
jno
stos
fstps
add
add
loope
incl
aam
leave
sub
roll
push
iret
mov
out
or
mov
out
js
xchg
insb
sub
jns
pop
inc
out
movsb
std
movsb
mov
dec
mov
adc
je
sbb
pop
ds
pop
popf
divl
inc
mov
fs
lret
out
adc
inc
push
inc
mov
inc
push
in
push
data16
dec
pop
cmp
and
inc
ja
aas
inc
daa
in
dec
js
pop
ss
jg
insb
push
jle
shlb
mov
sbb
outsl
jb
mov
das
mov
mov
pop
or
ret
sbb
mov
push
mov
sub
lret
mov
jo
add
sahf
mov
jp
cltd
xchg
scas
cmp
fbld
idivl
and
xchg
jp
mov
push
add
or
test
imul
xchg
push
fdivrl
dec
and
add
inc
test
lcall
add
lahf
ds
xor
mov
adc
mov
iret
xor
dec
sbb
cmpb
mov
in
sbbl
mov
sbb
inc
cli
jmp
or
mov
test
popa
xor
sbb
repz
sub
xor
shrb
push
lods
das
stos
mov
sub
inc
shl
insl
loopne
mov
mov
ljmp
or
cli
ss
cmp
ss
arpl
insb
lods
lret
pop
daa
inc
fcomps
js
jne
pop
icebp
jge
and
xchg
lds
out
inc
out
dec
jo
or
sub
pusha
hlt
adc
popf
mov
movsb
or
dec
push
mov
aad
cwtl
push
cwtl
test
lods
push
inc
lea
les
aas
stos
mov
add
out
cmp
movsl
sbb
and
xor
sbb
push
enter
pushf
mov
adcb
add
mov
andb
div
loop
rorb
jne
ds
mov
or
lahf
mov
das
jb
cmp
add
je
shlb
or
mull
jne
arpl
xor
inc
in
push
sbb
and
cmpsb
lcall
pop
hlt
or
push
pop
dec
lds
or
dec
test
into
push
sub
pop
aam
push
sbb
mov
test
mov
aam
push
hlt
ds
out
stc
popf
and
xlat
das
sarl
das
mov
mulb
mov
or
mov
outsl
mov
and
bnd
add
arpl
and
bound
mov
int3
or
popl
pop
call
lock
fs
aad
sub
fdivl
or
inc
js
out
push
test
jge
ret
push
xor
gs
jne
jo
outsb
mov
lret
in
lods
insl
push
dec
add
aaa
push
sub
mov
insl
xlat
mov
fimull
mov
popf
repz
fwait
in
adc
leave
lods
xchg
jle
and
lea
leave
sub
dec
imul
daa
arpl
stos
mov
and
int
lds
hlt
ror
lret
imull
cmp
cltd
xchg
cmpsb
ret
cmpl
lds
xor
adcl
aaa
pop
iret
push
pop
dec
sub
rep
aaa
jbe
push
int
cmpsb
push
jbe
dec
lock
data16
mov
xor
incl
rcrb
mov
push
rol
sub
pop
dec
xchg
push
ficompl
push
hlt
sub
outsl
xlat
sbb
mov
inc
movsl
mov
out
fisubl
int3
scas
add
clc
je
sarb
jno
fisttpl
and
pop
jbe
mov
test
cmp
shrb
xor
call
fiaddl
and
cmp
out
aas
test
lret
leave
xor
or
adc
pop
dec
bound
sbbb
mov
out
cmc
inc
jne
imul
in
or
inc
fucom
jo
shrl
out
imul
sahf
dec
in
lds
fisttpl
cmp
mov
cltd
or
mov
into
daa
mov
cmp
jnp
imul
mov
out
scas
lds
mov
into
mov
push
mov
fidivl
add
mov
bnd
insb
xlat
sub
stos
pop
add
lcall
pusha
mov
lea
jle
xor
sarl
sbb
add
cmp
iret
and
in
mov
lret
in
push
mov
mov
push
mov
mov
sbb
popa
jp
pop
xor
xchg
cwtl
lods
out
ljmp
lock
es
mov
xchg
lea
ljmp
adc
adc
jp
cld
in
leave
or
xor
pop
mov
nop
in
inc
mov
xchg
fisubl
pop
loopne
iret
mov
sbb
clc
iret
push
std
loope
jle
sbb
arpl
pop
lock
mov
nop
loop
push
cmp
sahf
icebp
jecxz
cwtl
and
cmp
sub
js
pop
nop
sbb
dec
aaa
mull
dec
jbe
jne
xchg
sbb
clc
xlat
dec
mov
iret
add
mov
imul
xor
sbb
call
ficomps
xor
test
push
mov
add
cmp
lea
clc
push
int3
call
jne
mov
loop
rcl
push
cmpsl
lock
push
pop
clc
pop
out
dec
inc
jno
test
jno
push
xchg
sbb
popl
add
cli
push
inc
repz
push
pop
fnclex
push
pusha
fcmovnu
xor
addb
mov
stc
out
cmc
mov
popa
insb
xor
xchg
mov
cli
subl
shlb
gs
les
sbb
ds
xor
adc
scas
and
push
pop
lea
ret
cmp
rorb
subb
xor
loope
aam
sbbl
leave
scas
stos
pusha
sub
dec
nop
adc
or
rcr
ja
ljmp
fwait
push
out
orb
xchg
test
aam
dec
mov
pop
sahf
subb
jbe
cmc
xorl
push
enter
push
and
dec
push
dec
sub
jbe
cmp
imul
out
data16
cmp
add
pop
jns
mov
push
jl
xchg
lahf
clc
sub
dec
inc
pop
lock
roll
mov
xor
ret
jns
clc
shr
inc
jle
iret
inc
call
lcall
jle
push
push
idivl
jecxz
ret
pop
mov
int3
push
rcr
push
xchg
shrl
iret
aaa
pop
push
stos
cs
sub
imull
mov
adc
lds
mov
mov
stos
sbb
xchg
mov
loopne
dec
mov
sub
jmp
dec
data16
test
adc
push
cs
sahf
stos
pop
ljmp
mov
mov
outsb
jl
mov
das
fwait
dec
push
int
fstps
ret
or
or
or
cmp
cmpsl
jl
leave
pop
inc
pop
iret
mov
mov
push
call
shrl
or
cmp
ds
stos
sti
popa
inc
int
jl
push
fwait
cltd
rclb
rorl
cmp
mov
adc
xchg
call
mov
sti
jle
sbbb
push
xor
mov
daa
dec
push
gs
adc
or
ds
adc
stos
aaa
fcompl
pop
out
into
lods
sbb
cli
in
push
add
lds
adc
xchg
fisubl
aas
les
mov
dec
sti
xchg
sub
jmp
push
das
mov
push
loop
mov
mov
mov
scas
psubq
push
sub
jecxz
ja
mov
xlat
adc
enter
dec
in
decl
cmp
sti
jb
ja
push
jg
je
push
sbb
jnp
sti
aaa
jns
lods
aad
mov
sub
scas
dec
int3
mov
jbe
fs
loop
in
icebp
mov
xorb
addr16
push
push
or
cmp
pop
xchg
sub
dec
and
repnz
jae
nop
outsl
clc
into
mov
fucom
adc
adc
pusha
mov
sbb
lcall
pop
cli
mov
into
adc
lods
mov
aad
test
inc
loop
push
xlat
fldenv
mov
pop
jno
sbb
inc
cltd
fcoml
cmpsb
rolb
dec
int3
ss
sub
clc
mov
dec
push
xchg
lahf
in
cltd
int
xor
push
dec
xor
lods
stos
and
jns
mov
ret
repz
ret
sub
sub
fcomp
inc
pop
xchg
in
je
lahf
std
mov
cmp
jecxz
out
sub
pusha
out
ret
add
addr16
cmp
out
and
nop
int3
cmc
je
push
cmp
push
lds
mov
and
repz
iret
je
xchg
jmp
ficompl
push
dec
int
test
imul
scas
mov
test
repz
mov
fs
jno
lods
addb
in
xor
pop
jp
or
dec
ret
xor
add
mov
jl
mov
pop
dec
sub
dec
jae
call
pop
sub
and
mov
imul
xchg
test
leave
push
cmpsb
xor
ret
xchg
jns
sbb
xor
enter
pop
fiaddl
and
lea
fwait
popf
push
lahf
loopne
inc
adc
push
stos
or
adc
rorb
pop
jle
cwtl
xor
cmc
adc
xor
jno
flds
mov
in
jle
add
insb
ret
xchg
push
add
mov
push
mov
and
sub
call
push
sub
shr
lahf
js
mov
xor
dec
or
fimull
mov
gs
add
xor
fbstp
pop
push
inc
hlt
sub
hlt
mov
xchg
out
mov
mov
in
lret
das
ss
clc
iret
pushf
cmp
xor
ss
cmp
int
fdiv
cmp
int
ret
ret
push
mov
sub
ljmp
jo
mov
cmp
sbb
enter
mov
cmp
loop
fisubrs
adc
int
int3
dec
sub
das
add
and
mov
mov
stos
adc
adc
cmp
shlb
or
cs
shlb
or
inc
les
cltd
lret
stc
decl
test
loope
es
lock
add
xchg
sub
dec
loope
aas
cmp
inc
mov
mov
mov
int3
test
mov
cmp
gs
mov
inc
mov
rolb
lea
jns,pn
mov
mov
rcll
bound
mov
mov
sbb
adc
fwait
stc
mov
mov
pop
and
scas
movl
inc
fstl
push
ljmp
sub
mov
dec
fwait
loop
je
pop
enter
icebp
sbb
aad
jmp
mov
jge
lods
inc
add
xorl
mov
mov
enter
mov
push
out
into
cmp
fsubp
int
mov
popa
das
sub
stos
sub
lods
ss
or
xchg
das
xor
faddl
call
sub
movsl
add
rol
sbb
stos
or
mov
int3
das
dec
cld
outsb
mov
adc
cmp
int
cs
lods
hlt
dec
test
xor
subb
rolb
adc
pop
stc
sti
cli
shlb
cld
dec
mov
loopne
xchg
or
sub
ffreep
lods
jne
mov
hlt
sbb
ficompl
mov
movsl
ret
iret
or
pusha
movsb
or
fldcw
fs
push
push
inc
mov
popa
sbbb
daa
sbbl
jo
cld
sarl
cltd
or
insb
int3
pop
xchg
cmp
jns
mov
icebp
inc
iret
xchg
enter
push
add
lret
ja
test
and
push
movsb
jg
pop
into
mov
xor
and
and
dec
js
and
shlb
add
xor
int
mov
jb
cmpsl
out
lahf
xchg
mov
push
imul
js
daa
es
pop
mov
or
mov
lcall
imul
arpl
add
popf
xchg
fiadds
repz
ds
sbb
jle
pop
int
cltd
mov
movl
shrl
out
add
nop
mov
loopne
pop
xor
xchg
dec
fcomps
adc
shll
push
gs
mov
mov
sbb
mov
cwtl
mov
and
inc
dec
lea
sbb
bound
cmp
out
and
push
inc
cmp
sbb
lods
into
push
clc
inc
or
fisubs
out
push
movsb
inc
xchg
lock
sarl
rolb
scas
test
ds
mov
insl
push
sarl
jle
into
stc
mov
sbb
icebp
mov
mov
into
inc
ss
scas
pop
fildll
divb
mov
mov
fwait
aam
mov
fs
inc
jno
popa
cmp
adc
lock
push
fwait
aas
leave
pop
movsb
hlt
dec
ret
stos
lea
push
sbb
push
stos
and
inc
dec
dec
jl
pop
arpl
popa
stos
pop
xchg
aas
sbb
aaa
setnp
lock
inc
sub
pusha
cmpsb
popf
mov
dec
inc
push
std
mov
mov
cmp
fcom
lds
loopne
sbb
jge
sbb
cld
cmp
jmp
pusha
adc
enter
pop
imulb
addr16
add
nop
inc
mov
aaa
notb
sub
sub
sub
mov
cmpsb
das
aas
inc
jbe
lock
and
push
scas
dec
jmp
mov
nop
push
xor
shrb
push
and
call
or
xor
test
pop
daa
mov
sbb
repz
sub
jge
aam
out
lret
sti
cwtl
stos
lcall
imul
sbb
in
mov
rcrl
bound
inc
data16
xor
dec
adcb
scas
and
or
sahf
pop
out
pop
imul
mov
jge
inc
push
add
data16
insl
js
lcall
mov
mov
shll
push
sub
lds
pop
xor
mov
mov
popa
ficoml
loopnew
pop
xchg
faddl
js
roll
movsb
lds
int3
les
xchg
rorb
inc
pop
jns
ret
cwtl
imul
insl
push
fisubrl
fwait
mov
pop
sbb
loopne
sbb
aam
add
loopne
bound
sahf
adc
cmpsb
imul
test
fiaddl
dec
popf
jmp
jae
mov
lret
cli
loopne
ret
stos
loope
push
repnz
xor
shll
not
jmp
cmp
clc
ss
pop
and
stos
es
and
mov
dec
mov
ds
bound
das
xor
pop
or
ss
leave
dec
aaa
sbb
fsubrl
mov
movsb
popf
or
xchg
data16
adc
xor
ljmp
flds
in
adc
sub
incb
pop
cmp
xchg
xchg
nop
sub
fisubs
mov
cltd
or
jl
iret
imul
dec
lret
pusha
jp
dec
pop
mov
stos
mov
mov
inc
ss
stos
adc
in
dec
fistpll
std
mov
hlt
xor
push
pop
lea
xchg
sub
mov
xor
mov
arpl
scas
jge
scas
iret
jg
and
adcl
jns
push
dec
mov
lahf
adc
mov
mov
mov
sbb
push
sub
and
insl
add
shrl
mov
sbb
push
sub
and
insl
add
shrl
mov
sbb
push
sub
and
insl
add
shrl
mov
sbb
push
sub
fimuls
sbb
out
xchg
xchg
and
xor
push
addr16
inc
push
push
push
cmpsl
out
testb
divl
daa
fs
jbe
popw
push
addr16
jbe
inc
push
push
push
cmpsl
pushl
iret
out
imull
daa
test
ja
jb
addr16
add
ds
shl
lahf
xchg
mov
push
out
in
sbb
or
int
or
mov
push
out
testl
out
sahf
stc
push
call
arpl
push
push
pop
pop
sbb
jno
cltd
fidivs
or
jecxz
mov
cli
xchg
shll
cld
ss
clc
push
push
cmpsl
mov
testb
popl
xlat
imul
cmpsb
call
leave
mov
fidivs
pop
add
push
sbb
pop
xchg
es
jbe
add
mov
jmp
push
push
arpl
notl
inc
xorl
cmp
push
fs
loope
xchg
int3
out
divl
daa
jle
outsb
pop
pop
pop
dec
addr16
inc
push
push
jb
adc
rol
xlat
xor
fsubrs
rsqrtps
je
push
cmp
dec
ss
daa
jnp
sahf
ret
mul
mov
roll
loop
cli
push
pop
push
pop
jp
pop
adc
cs
jae
cmpsl
mov
shll
mov
xchg
xchg
daa
data16
jbe
inc
pop
push
addr16
inc
push
push
push
cmpsl
out
testb
divl
daa
data16
jbe
inc
pop
push
addr16
inc
push
push
push
cmpsl
out
jno
out
lds
fwait
add
jle
lock
cmp
jp
dec
pop
inc
pop
jnp
out
sub
sar
outsb
out
sub
sti
rep
fimuls
sarb
cmpsb
fimull
std
mov
jp
xchg
lds
inc
inc
add
adc
mov
sbb
mov
jecxz
pop
dec
out
mov
rcrb
or
hlt
outsl
jnp
in
push
add
insl
add
or
mov
cmpl
mov
dec
sub
pop
or
nop
sbb
xchg
xchg
fbstp
repz
imul
lods
sbb
jle
cmp
xchg
jb
jl
cmp
subl
xor
arpl
mov
insb
jle
jl
or
cmp
mov
inc
cmp
insb
dec
jecxz
inc
ja
inc
scas
iret
push
lcall
sub
loopne
pop
push
popf
adc
cmc
lock
sub
adc
add
push
icebp
cmpsb
into
ret
jecxz
iret
dec
xchg
sahf
mov
scas
mov
xor
ss
lea
push
popf
jmp
cs
pop
mov
xor
xchg
jle
cwtl
pop
testb
gs
xchg
add
sbb
mov
and
xor
rcll
xor
push
mov
repz
sub
mov
inc
sub
ljmp
xor
loopne
les
sub
fcmovnu
stos
adc
xchg
mov
fwait
push
scas
mov
add
in
loopne
jp
push
mov
rorb
inc
and
adc
aaa
adc
out
push
les
lret
int
call
xchg
nop
js
rep
test
ficomps
das
scas
xchg
cmpsl
dec
fucomip
lcall
out
mov
imul
ljmp
test
ss
lahf
fstpl
sub
mov
jge
rcr
mov
jg
or
pop
movsb
jno
xor
enter
nop
bound
ss
testb
loop
push
call
dec
mov
loope
and
lds
sub
pop
fcmovnbe
sub
xor
aad
sbb
dec
call
pop
dec
std
cmp
cmpsl
pop
cmp
fsubl
rorl
push
arpl
xchg
adc
in
out
das
mov
fdivrl
pop
xlat
jae
jno
cltd
or
mov
dec
out
pop
push
movsb
stc
mov
pop
jnp
xor
or
mov
movsl
andb
push
cmp
loope
mov
shl
insl
push
stc
add
mov
ljmp
mov
outsb
mov
cmp
xor
lcall
or
push
lods
adcl
ljmp
jae
out
repnz
aas
jmp
jbe
xor
mov
push
inc
outsb
xor
mov
mov
push
inc
jb
dec
lods
pop
and
iret
jo
inc
subb
dec
sbb
inc
and
or
add
sub
xor
insb
cmp
fs
mov
pop
mov
pop
and
ret
mov
cmp
xor
cmp
jae
and
in
fmulp
xchg
lcall
cmp
dec
lret
xor
mov
repnz
std
and
inc
dec
or
in
sbb
lea
xor
dec
adc
scas
bound
repnz
lahf
lahf
outsb
and
into
cmp
addr16
mov
inc
sub
aad
mov
stos
xchg
mov
or
sub
scas
push
ljmp
ja
fs
xchg
aas
sbb
and
xchg
cs
cmp
fs
into
call
or
or
jne
bound
aas
imul
into
adc
int3
push
adc
adc
adc
cmp
sti
jb
jo
push
imul
sub
pop
inc
inc
cmpsl
cmp
movsl
sub
ja
fxch
cmp
or
mov
fs
je
cmp
xor
sarl
adc
lret
jp
jp
data16
out
negl
mov
imul
mov
insb
jl
add
nop
divb
unpckhps
imul
daa
imul
unpcklps
jl
sbb
xor
je
mov
in
xchg
shl
icebp
jl
add
inc
dec
mov
xchg
jnp
test
icebp
mov
and
sub
shl
ja
lret
xor
adc
dec
dec
cmp
fnsave
or
fstpl
cld
adc
push
pop
fs
add
jno
xchg
pop
mov
mov
mov
jno
das
xchg
mov
adc
pop
in
std
dec
add
lds
pop
rolb
mov
enter
jl
inc
mov
adc
pop
lock
shl
dec
into
sub
imul
cmp
std
pop
mov
inc
push
fnstenv
mov
mov
icebp
andl
mov
xchg
in
mov
cmpsw
test
adcw
bound
int3
cmpsl
in
inc
dec
mov
sbbl
push
insl
adc
xchg
imul
cmp
xor
and
scas
outsb
dec
add
mov
shrl
daa
adc
mov
into
adc
pop
outsl
lock
outsb
lahf
adc
inc
aad
loopne
test
xor
arpl
fisubs
lock
test
or
push
loopne
jne
repz
sub
aaa
sbb
xchg
pop
jg
and
and
sub
fs
pop
adc
sub
enter
cltd
out
das
in
out
scas
ljmp
xchg
hlt
mov
mov
inc
xchg
addb
xor
cmp
cltd
dec
ret
insl
movsl
or
and
mov
add
or
movsl
mov
pop
in
rcrb
movsl
inc
xchg
pop
lret
std
loop
inc
movsl
push
and
mov
xchg
aas
cmp
iret
sbb
push
imul
clc
daa
mov
cli
dec
and
fs
arpl
push
add
mov
addb
push
jb
fsts
mov
in
dec
mov
sti
cmp
rcrl
movl
jp
jb
add
lds
mov
dec
xchg
ret
push
scas
adc
add
lret
popa
adc
fcoml
dec
gs
xor
pop
jno
pushw
xor
mov
jns
inc
sti
fistpll
add
cli
aad
adc
int3
adc
add
aas
sub
mov
lcall
hlt
std
xlat
or
out
or
sub
pop
cli
js
dec
notb
clc
mov
call
xor
mov
out
dec
jnp
hlt
sbb
out
mov
xor
das
leave
pop
cmp
mov
or
hlt
cmc
movsl
dec
outsb
jmp
mov
jmp
inc
xchg
test
adc
sbb
fdivr
rolb
xchg
cmp
sub
xchg
movsb
gs
stc
cmp
mov
ss
adc
imul
cmp
sbb
sbb
mov
push
jp
fmull
inc
int3
xor
insb
jbe
mov
orb
inc
das
pop
jb
jg
pop
inc
cmpsb
jb
out
fwait
sub
gs
pop
test
imul
cmpsl
inc
cmp
ljmp
adc
jp
fsts
imul
adc
xchg
fs
rorb
push
outsl
clc
sub
pop
jbe
cmpsl
mov
sbb
imul
cmp
inc
out
jns
dec
sbb
sub
sti
pusha
jno
push
cmp
repnz
jo
inc
adc
out
movsl
or
lahf
cmp
ret
xchg
cmp
lcall
cmp
jnp
pop
jmp
adc
xchg
stos
mov
jbe
and
clc
cmc
adc
imul
stos
in
add
mov
jns
mov
and
xor
or
and
dec
xchg
jno
mov
xchg
movsl
es
lock
and
fsubrl
xchg
push
repnz
push
xchg
inc
leave
orl
cmp
xchg
xor
lcall
in
daa
into
add
cs
lods
push
adc
addb
std
aam
or
adc
iret
cmc
pop
insl
sub
xor
mov
or
mov
cmp
jp
or
jle
frstor
adc
jg
jl
scas
jne
xor
in
call
or
jmp
pop
into
sbb
and
xchg
loope
jnp
outsl
push
idivl
mov
pop
lret
aaa
xchg
cwtl
sbb
int
les
in
push
aaa
add
pop
lcall
sahf
add
stos
adc
pop
xchg
xchg
roll
out
mov
cmp
fldt
sbb
or
cmpsb
in
mov
xor
js
insb
popf
xor
loopne
pushf
cld
xchg
aas
mov
cld
jg
cld
push
xchg
sub
and
fdiv
cmp
scas
xchg
hlt
mov
mov
cltd
pusha
sbb
ret
adc
test
aad
orb
mov
add
push
ja
movsl
iret
test
push
xchg
in
cmp
into
add
js
push
test
shld
dec
dec
fstl
daa
push
rcrl
lcall
adc
mov
add
insb
ret
jns
hlt
sbb
shll
rcr
and
push
test
and
mov
fwait
sahf
cmpsl
shlb
inc
sub
leave
sahf
push
out
and
mov
aaa
int3
cmp
aam
inc
ret
or
sahf
cmp
push
lret
sbb
add
pushl
outsl
push
js
inc
sub
jb
xchg
test
js
inc
cwtl
bound
or
adc
inc
push
enter
arpl
mov
cwtl
add
fxch
and
xchg
insl
pop
iret
fistl
fidivl
or
and
push
sbb
fstpl
test
jmp
pop
popl
loopne
jp
rcrb
ss
pusha
test
shll
mov
xchg
hlt
rcll
mov
test
fiadds
pop
pop
pop
in
xor
test
add
sbb
xor
loope
fdivrs
mov
push
pop
ficoml
push
xchg
lret
repz
aam
int
addr16
lahf
das
pop
add
pop
and
pushf
movsl
mov
sbb
xchg
dec
dec
es
mov
imul
mov
dec
rcrb
scas
data16
cs
packssdw
lret
pop
lret
ffree
jno
sub
daa
mov
movsb
imulb
loope
cmc
inc
sahf
inc
jmp
stos
mov
fldenv
call
pand
movsb
adc
mov
ficoms
cmp
jne
dec
cmp
xor
mov
jo
add
jge
iret
mov
sub
stos
or
xor
lea
and
push
or
je
test
les
popa
mov
jne
fcompl
pushf
sti
lea
xor
pop
test
in
imul
jnp
into
jno
cmp
pushf
cmp
push
cmp
sarb
lods
sbbl
imul
xchg
popa
stos
or
mov
in
repnz
aaa
repz
decl
or
push
adc
fistpll
lahf
sahf
pop
int3
loop
repz
fstps
nop
jae
sub
dec
push
sbb
push
mov
jl
push
addr16
adc
lods
push
cmc
dec
movsb
pop
test
mov
fcmovnb
and
nop
in
je
stos
xlat
call
push
add
add
fwait
mov
cltd
xchg
xchg
out
insb
xor
notl
rorl
xor
push
push
decl
jecxz
inc
adc
mov
and
fisttps
fwait
xchg
or
fs
es
ficomps
nop
outsl
jns
xchg
jb
lods
sti
pusha
cmp
xchg
lock
push
int
inc
call
icebp
inc
pop
pop
popa
cmp
lods
cmp
outsb
clc
sub
mov
aas
negb
pop
icebp
mov
cli
cmpsl
and
jnp
sub
push
test
mov
fdivl
xchg
shlb
sbb
adc
mov
ficomps
sub
mov
xor
cmp
dec
js
push
inc
fisttpll
push
inc
or
cwtl
nop
push
bnd
nop
push
xor
adc
fisubrl
jns
in
ret
aas
or
push
or
fs
adc
jge
das
movsl
jmp
pop
sti
dec
xlat
mov
or
ret
jge
scas
mov
outsb
cli
in
jp
jp
mov
ja
xor
sarl
test
shrd
push
dec
xor
and
pop
fldt
outsb
daa
inc
loopne
cmp
sar
aas
pop
jnp
into
dec
std
lret
mov
push
dec
cmp
shrl
mov
repnz
scas
addl
test
in
xor
adc
cmp
jmp
sub
cmpsl
mov
inc
daa
scas
mov
mull
lods
out
mov
pop
ror
icebp
pop
imul
dec
lcall
scas
hlt
dec
sub
mov
rorb
sbb
lock
rcl
pop
lahf
mov
sub
mov
fnstcw
xchg
test
mov
call
push
das
xchg
in
xchg
lods
frstor
cltd
test
int3
insb
xchg
in
loopne
leave
aaa
fildll
cmp
add
inc
push
fbstp
sbbl
lcall
mov
into
mov
cltd
mov
sti
adc
cwtl
mov
mov
mov
dec
das
jnp
data16
sbb
cmp
ficoml
inc
not
inc
sbb
or
sti
mov
int3
mov
aad
mov
test
dec
loope
int
out
pop
test
or
imul
jg
aaa
mov
iret
xor
mov
lock
sbb
shll
andb
push
mov
dec
out
pop
addr16
cmpl
outsb
aaa
lahf
cs
jnp
sbb
sub
insl
nop
in
and
sub
outsl
aam
lea
pop
sbb
inc
sub
loop
mov
pop
mov
idivl
aad
push
pop
jbe
repnz
cltd
adc
test
mov
cmpsl
xchg
in
mov
inc
push
xor
inc
pop
faddl
arpl
pop
or
pop
jl
insb
push
mov
adc
in
sbb
adc
dec
and
scas
out
in
into
subb
mov
adc
out
jp
js
test
xchg
jae
ljmp
repnz
jo
ret
jbe
stc
xorb
and
or
dec
pop
mov
push
fwait
cmp
mov
mov
mov
ret
popa
jl
ss
stos
add
ret
jbe
fldcw
daa
aas
fdivrs
cwtl
xor
and
pushf
or
cmp
sahf
fcomps
lods
jp
lret
pop
std
lea
test
or
aaa
pop
mov
aas
cmp
sub
sbb
mov
sub
mov
xchg
xor
lret
fmull
aam
mov
addb
xchg
call
mov
das
push
and
iret
int3
cmpsl
xchg
mov
cmc
rcrb
jne
fs
lds
ret
xor
addr16
jae
cmp
cmpsb
aaa
jl
and
push
lea
push
sbb
inc
push
loope
lods
inc
push
sub
push
daa
jno
pop
ror
repz
mov
lahf
jl
inc
cmp
cmp
dec
sarl
push
jbe
imul
sbb
cmp
push
ror
jne
rcll
and
je
and
cmc
mov
aad
cmpb
cmp
pop
xor
jle,pt
stos
loopne
repz
xchg
jns
push
aad
add
add
pop
iret
xchg
pop
ljmp
mov
leave
int
ja
fidivs
es
ss
xor
test
cmpl
adc
lods
leave
or
sub
fldl
btc
push
lock
inc
test
dec
rcll
xor
lcall
imul
fistps
stos
and
push
pop
fistpll
leave
sbb
jl
and
in
cs
sub
push
imul
xchg
jl
add
and
xchg
cld
push
outsb
xchg
add
and
repz
add
and
int3
inc
mov
scas
sbb
ficomps
js
cmpsb
and
jo
ss
out
sbb
xchg
shll
mov
scas
add
scas
pop
imul
mov
mov
pushf
or
push
adc
cmpsl
push
mov
test
repz
push
shlb
cli
mov
and
xor
jb
or
sub
adc
in
ret
loopne
or
fistpll
inc
int
xor
testb
push
xchg
jne
sbb
push
sbb
stos
incb
cmp
lret
adc
xadd
mov
cmc
jne
dec
in
mov
mov
xchg
fbld
inc
xor
xchg
adc
mov
pusha
std
mov
fisubl
adc
rolb
shl
js
pop
negb
pop
sub
nop
mov
inc
int
xor
ds
shl
or
ficomps
xchg
pusha
or
inc
ja
push
mov
inc
and
lock
arpl
add
test
add
cmp
push
jecxz
daa
pop
lcall
rclb
xchg
sarl
mov
jo
test
push
mov
push
stos
inc
sub
ljmp
jnp
decl
add
or
adc
cmp
testb
iret
mov
mov
rcll
rol
pop
jmp
sbb
aas
repz
cmp
pusha
sbb
cmp
add
stos
test
sbb
cmpl
jmp
dec
je
cs
test
push
adc
add
rcll
int
stc
call
pop
pop
sub
or
inc
add
or
es
push
dec
mov
or
out
push
ds
jg
mov
jp
rclb
je
or
jne
test
push
repnz
loopne
pop
cli
sbb
ja
movsl
arpl
sub
es
popa
cmc
sbb
leave
icebp
ja
in
or
mov
cmp
jbe
push
dec
mov
cltd
cmpsl
sbb
fs
sub
aam
cmpsl
dec
pop
jo
mov
add
xchg
adc
sbb
int3
and
adc
sahf
aam
jge
out
cmp
mov
cli
rol
ja
fidivl
and
dec
pop
cld
inc
and
mov
inc
int3
ds
int
lea
cmp
lock
outsl
sub
je
xchg
lahf
mov
push
cmp
inc
addb
sub
aad
add
out
hlt
mov
fnsave
hlt
sub
andl
fs
out
dec
lret
jne
fcoms
and
pop
jl
stc
xchg
xor
test
push
inc
mov
push
sahf
aas
mov
test
int
std
movsl
xchg
adc
and
mov
xorl
jns
cmp
pop
xchg
aas
xchg
repz
adc
jle
fs
push
pushf
add
xor
in
data16
sbb
push
cmp
xchg
mov
into
push
in
cmp
dec
add
rcr
push
jp
in
stos
adc
mov
mov
and
jmp
and
fcompl
mov
add
and
stc
rcr
or
mov
cmpsb
aaa
xor
das
mov
sbb
fwait
jp
adc
inc
jle
xchg
dec
mov
mov
ficompl
in
cs
popa
jnp
lahf
pusha
and
mov
add
nop
mov
iret
and
test
scas
imul
js
pop
lods
jae
outsb
mov
mov
leave
out
mov
adc
notl
cmp
xchg
xchg
orb
jl
int3
nop
mov
jns
mov
inc
xor
mov
insl
je
mov
push
ss
lret
mov
in
xchg
data16
hlt
dec
lret
fistl
jp
mov
push
sbb
xor
hlt
push
pop
xorb
cmpsb
jg
xor
push
es
mov
stos
push
dec
adc
out
lods
dec
andl
ret
arpl
jl
in
sbb
inc
add
mov
inc
pop
in
mov
daa
gs
or
pop
leave
or
jae
rorb
inc
mov
mov
cs
push
and
scas
int3
imul
xor
jg
mov
mulb
and
mov
jge
mov
push
jno
cld
dec
mov
stc
adc
lods
mov
rep
mov
xor
inc
cmp
mov
lods
mov
imul
and
cmpb
xlat
push
mov
or
push
adcl
pop
mov
loopne
aad
bound
lret
sub
cmpsb
add
inc
fildll
pause
loopne
push
add
imul
jnp
cmp
out
divl
daa
data16
jbe
inc
pop
push
addr16
inc
push
push
push
cmpsl
out
testb
divl
daa
data16
jbe
inc
pop
push
addr16
inc
push
push
push
cmpsl
out
testb
divb
es
jbe
inc
push
push
addr16
inc
pop
push
push
cmpsl
out
testb
divl
fsubs
fsubrl
scas
dec
mov
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
cmp
inc
inc
jb
bound
inc
inc
insb
and
and
repnz
xchg
lock
nop
mov
jo
push
bound
adc
add
xor
and
shl
ret
adc
mov
mov
mov
pop
jb
bound
adc
add
xor
and
in
sti
sahf
lods
andb
xlat
stc
mov
or
mov
aam
ret
xor
jmp
xchg
or
cmp
aam
dec
pop
mov
lahf
imul
add
inc
popf
out
iret
std
lock
sub
mov
sbb
out
insb
mov
pop
in
inc
jo
or
xor
loop
nop
imull
and
cmc
mov
dec
push
mov
mov
adc
jb
loope
xlat
rorb
and
dec
jns
or
mov
jo
lock
adc
add
aad
rcl
or
or
xlat
jo
fstl
popf
fnstcw
cmpsl
pop
sub
shl
pusha
insl
mov
mov
inc
jb
bound
adc
add
xor
and
shr
ret
leave
loop
xchg
test
xorb
xchg
and
jge
inc
add
push
xchg
mov
mov
sti
in
cmc
pusha
adc
and
ja
sub
pop
push
and
xchg
lock
test
in
lock
nop
int3
or
inc
ss
jle
add
xor
and
shl
ret
shl
mov
mov
mov
inc
jb
bound
adc
add
xor
and
shl
ret
shl
mov
mov
mov
sbb
sbb
mov
lret
addl
test
add
lea
loopne
lcall
add
xchg
adc
sbbl
inc
add
mov
ja
pop
in
divb
out
pop
cmp
lods
inc
sbb
xchg
mov
int3
jl
mov
cmpsl
jno
pop
xchg
lcall
xchg
gs
iret
mov
test
push
and
adc
repz
insl
add
pop
aad
sbb
ret
andl
addr16
inc
and
sbb
fstps
fstpl
pop
jp
mov
dec
dec
ljmp
je
xor
push
fwait
adc
cmp
loope
sarb
jle
stos
loopne
testl
lahf
daa
and
sbb
movsb
inc
sbb
jae
lea
fimuls
fucom
pop
lret
mov
xchg
push
leave
nop
pop
and
iret
insb
pop
cwtl
mov
and
pop
int
dec
inc
aad
jae
inc
int
xor
jl
inc
and
inc
rcll
call
xchg
jb
push
push
add
aas
push
mov
ss
sbb
mov
sbb
dec
call
mov
jle
lcall
ret
mov
adc
in
jl
aaa
pop
out
sbb
adc
adc
cmpsb
iret
movsb
popf
fwait
and
inc
movsl
adc
cld
jne
inc
outsl
pop
xchg
gs
mov
sub
pop
lds
pop
fsubl
dec
inc
shl
push
std
jo
pop
xchg
in
ret
cmp
incl
pusha
aad
shrl
shrl
lcall
insl
lret
mov
mov
jge
pop
shr
mov
rclb
sti
and
jne
mov
sub
ja
push
fcomps
cmpsl
xlat
dec
xlat
jno
call
loopne
sub
push
shr
xor
iret
xor
imul
mov
add
sub
jb
xor
lods
addr16
dec
rorb
addb
push
aaa
outsl
mov
scas
jno
sbb
cmp
insl
mov
mov
push
mov
test
movb
mov
xor
cmpsb
mov
daa
faddl
mov
mov
push
cmpsb
lods
movsl
pop
lods
cltd
aas
out
stc
psrlw
pushf
add
dec
leave
adc
sbb
cli
cmp
inc
or
xchg
or
dec
ja
inc
pop
shlb
rcr
pusha
push
ljmp
arpl
icebp
and
dec
dec
ret
cmp
mov
adc
out
scas
cmc
push
pop
xor
ja
ret
or
jno
pusha
cli
push
dec
xchg
mov
movsl
into
out
mov
xchg
sub
or
stc
mov
mov
inc
icebp
negl
pop
clc
insl
jle
jmp
fldt
sbb
out
aaa
xchg
hlt
sub
inc
enter
notb
int3
pop
movsb
sub
int
js
aas
ds
mov
pop
dec
dec
xchg
hlt
lret
pusha
inc
mov
or
dec
mov
sbb
push
mov
fisttps
leave
popa
push
mov
les
mov
movsl
add
sub
xchg
into
or
mov
dec
mov
test
adc
mov
arpl
push
mov
dec
jb
ja
push
into
push
xchg
outsb
lods
mov
shl
cltd
aas
mov
jns
sbb
outsb
and
int3
shl
push
es
ljmp
mov
outsl
push
jg
idivb
std
js
mov
and
shl
adc
pop
movsb
lret
mov
or
pushf
push
fsubr
dec
cld
shll
fsts
cmpb
push
imul
loop
mul
lods
leave
xchg
mov
inc
ret
aas
in
iret
and
or
insb
jno
aam
mov
daa
rcll
int3
out
mov
add
cld
sub
push
sahf
popa
push
call
lret
loopne
add
xor
aaa
movsb
or
mov
add
pop
sub
jae
clc
loopne
ret
int
mov
popl
mov
rcrb
test
lret
je
lods
adcb
shlb
sub
std
mov
jmp
les
movsb
clc
push
iret
sub
dec
cmpsl
fistpll
xchg
ljmp
fstpt
add
aaa
xor
and
sbbb
sub
ja
add
pushf
inc
mov
adc
adc
jmp
imul
mov
xor
lret
shll
mov
xorl
shl
sbb
in
lcall
push
xchg
iret
daa
movsb
sahf
xor
arpl
mov
orl
fdivr
mov
xchg
add
leave
scas
popa
cmc
test
xchg
jmp
aaa
leave
mov
mov
addr16
movsl
add
or
loopne
inc
in
cmpsl
int3
jle
dec
outsb
jb
or
mov
out
nop
inc
lds
lods
mov
and
lret
hlt
xchg
and
mov
mov
enter
cmp
and
xor
xor
cmpsl
loop
xor
jb
jl
add
lea
and
test
and
lods
mov
notl
stos
dec
or
decl
or
sub
dec
and
pop
lret
repnz
mov
xor
jns
mov
aam
jbe
pop
loope
fistpl
sbb
sbb
sub
add
call
lock
and
dec
inc
into
push
or
clc
sub
lea
and
nop
xchg
mov
dec
jne
pop
in
rorl
or
ror
dec
or
xchg
jmp
or
push
and
movsl
fdivrp
push
movsl
xchg
sbb
pop
ljmp
and
lcall
sub
loopne
pushf
dec
insb
adc
cli
shll
shlb
mov
hlt
mov
mov
xchg
and
mov
sub
and
jl
pop
pop
mov
daa
pop
mov
adc
dec
mov
adc
popf
mov
dec
xor
xlat
pop
push
xchg
xor
add
test
mov
in
dec
push
pop
adc
ljmp
test
lret
icebp
stos
stos
dec
push
ljmp
mov
xchg
jbe
sbb
shll
pusha
or
test
and
ror
mov
dec
outsl
xchg
xchg
jecxz
dec
pushf
mov
jecxz
jno
lret
xchg
jne
stos
daa
sub
mov
stos
in
iret
push
mov
gs
add
lret
mov
rorb
test
data16
xorb
loop
add
negb
push
lcall
cmp
insl
add
jno
bound
dec
arpl
add
mov
repnz
stos
testb
lahf
ja
scas
fldl
mov
dec
stc
mov
mov
in
imull
es
mov
fst
xor
jb
imulb
xlat
pop
in
xchg
pop
dec
mov
pop
add
test
push
xlat
mov
subb
push
or
rcrb
out
pop
iret
cmc
std
imul
adc
add
mov
sub
daa
fucomip
cmp
or
mov
repnz
movsb
in
daa
pop
into
and
inc
outsl
shlb
gs
mov
adc
jecxz
inc
dec
dec
and
mov
dec
fbstp
fs
pop
mov
and
je
ficomps
or
repz
cwtl
fcomps
aad
xor
jmp
cltd
cld
add
mov
add
or
jmp
repz
jno
fs
movsl
orl
pushf
bound
orl
jo
pop
mov
aad
cmp
dec
xchg
leave
jmp
popl
cli
and
push
sbb
insb
out
mov
aad
mov
mov
mov
jb
jge
ja
lret
imul
sbb
adc
cmp
insl
cmove
lret
mov
adc
add
popf
test
mov
or
sbb
je
inc
icebp
push
mov
in
mov
adc
in
icebp
inc
and
ss
dec
iret
fnsave
clc
jmp
dec
xchg
mov
daa
dec
aas
inc
xor
add
inc
xchg
call
dec
pop
lea
out
inc
int
mov
mov
pop
pop
jne
into
mov
nop
outsl
movsb
xlat
in
lods
xor
push
lock
push
cmc
push
sbb
xor
sbb
and
ret
jg
out
cmpsl
adc
pop
adc
cld
icebp
ljmp
data16
pop
repz
clc
ret
cmp
stc
in
insb
inc
mov
pop
push
movsb
sar
dec
imul
mov
push
imul
sub
sbb
fnstcw
mov
and
pop
call
call
movsl
ret
lret
sbb
test
push
pop
ja
jmp
pop
daa
dec
fisubrl
push
lcall
jl
in
scas
adc
dec
xchg
insl
sbb
sti
push
movsl
leave
in
and
dec
clc
mov
dec
call
jecxz
pop
inc
fcomi
lcall
mov
jecxz
imul
daa
cli
fisttps
gs
or
xor
outsl
je
fildl
hlt
test
rorl
or
push
loopne
xlat
lret
bound
push
pop
lret
sub
push
lds
and
sub
scas
lea
mov
xchg
jno
mov
outsb
or
imul
lods
cwtl
mov
xchg
xchg
pop
mul
push
mov
cli
adc
test
push
jecxz
push
adc
dec
lret
mov
mov
rol
cld
inc
int
popf
insl
or
cli
lods
sub
cmc
popa
ret
fsubrl
add
adc
js
dec
int
xor
inc
push
pop
iret
cmp
and
ss
fisttpll
leave
mov
shl
inc
rcrl
je
and
in
notl
lock
popf
jno,pt
cs
sbb
aas
sub
hlt
scas
cwtl
shl
add
rcrb
xorl
or
mov
fldl
sbb
lahf
jp
in
lahf
or
lea
sbb
loopne
pusha
mov
orl
sub
mov
jmp
push
outsb
pusha
xor
mov
popf
cmp
inc
inc
ds
cmpsl
or
sub
adc
cmp
aaa
jne
xor
stos
enter
or
shrb
sbb
arpl
and
inc
or
and
test
dec
cmp
lea
in
xor
lods
roll
adc
sub
cli
dec
jge
sarb
std
pop
repnz
dec
sbb
pop
ficoml
jnp
sahf
adc
fwait
bound
push
xchg
mov
clc
push
xchg
pop
aad
rcrb
xchg
pop
xchg
jnp
stos
addr16
and
imul
mov
sbb
ja
hlt
jge
add
mov
push
outsl
sarl
stc
mov
daa
mov
jae
jno
sub
jmp
push
cmp
in
ja
cmp
sub
pop
stos
jp
scas
inc
pushf
mov
xchg
clc
mov
pop
pop
pop
push
jmp
cmc
popa
mov
xor
lcall
iret
movl
aaa
mov
push
subb
movsb
xor
ljmp
xor
rorb
cmpsb
mov
sub
push
gs
push
pusha
movl
in
dec
mov
xor
nop
ret
ds
bnd
xchg
mov
ja
or
xor
cmp
pop
sbb
mov
cli
and
test
xchg
fisubs
jp
adc
add
xchg
pop
in
mov
mov
testb
cld
outsb
adc
aam
add
mov
int3
jns
imul
cmp
mov
dec
cld
idivb
fbld
popf
in
rcrb
hlt
or
mov
mov
lods
pushf
add
push
jno
into
in
mov
mov
jne
pop
adc
cmp
in
adc
fmul
jecxz
push
mov
jmp
inc
jl
sub
cmpsb
mov
out
out
or
ljmp
mov
repnz
leave
and
xor
fsubrl
cmc
aas
cmp
cmc
push
mov
mov
mov
xchg
jle
daa
imul
sub
jmp
dec
shlb
shll
test
jns
imul
xchg
sub
cmp
andl
fstpl
inc
outsb
in
int
imul
mov
cld
aaa
rcr
filds
xchg
lcall
add
call
fwait
and
mov
sbb
enter
scas
in
rcl
pop
push
mov
mov
gs
divb
cmp
fimull
adc
push
xchg
inc
inc
xlat
adc
jle
dec
int3
pop
fcomps
xchg
test
mov
sub
jl
cmp
rclb
xchg
adc
push
sub
jnp
lea
xchg
jns
stc
xorl
and
fwait
jmp
adc
cmpsl
ljmp
cmp
adc
imulb
mov
add
pop
fnstenv
jno
mov
rcll
bound
aas
in
jle
test
sub
ja
shll
sti
push
psrad
sub
pushf
jl
cmp
inc
inc
jbe
sbb
sub
cmc
rcrb
ja
mov
xchg
cltd
push
push
cmp
fadd
cmp
mov
or
ret
add
mov
mov
into
cmp
inc
sbb
xchg
sub
adc
pop
mov
pusha
mov
cmpl
in
and
enter
jae
leave
or
push
xchg
rcr
pop
push
nop
mov
popf
cmp
xor
movsl
lods
xor
push
adc
add
gs
fsts
sbb
adc
xchg
or
lock
lahf
icebp
adc
xor
xchg
lahf
xchg
lods
enter
inc
inc
inc
push
cmc
fwait
insb
or
and
sub
std
adc
xor
and
pop
mov
clc
fimull
lods
and
mov
sti
inc
lahf
cmpl
nop
testl
sub
fldcw
cld
or
rcl
adc
out
xor
stos
pusha
test
jne
xchg
bound
test
add
xchg
int
cmp
orb
popa
enter
mov
scas
fisttpll
push
pusha
test
cs
hlt
pop
jb
dec
cmpsl
xchg
lods
repz
fcmovbe
cmp
clc
dec
xchg
dec
daa
subl
cmp
in
mov
jg
aas
leave
ffree
shlb
push
and
sbb
xchg
dec
adc
faddl
lcall
cmc
shll
xchg
repz
or
inc
enter
jno
insb
push
or
or
inc
mov
loop
es
clc
cmc
sbb
sub
mov
out
adc
cwtl
test
fcoms
xchg
sub
iret
bound
cmp
out
out
fistpl
cmp
xor
push
inc
sbb
mov
xor
sub
lea
pop
jo
mov
lret
inc
std
adc
enter
pop
mov
mov
js
stc
pop
pop
push
mov
pop
dec
lahf
fldenv
push
incb
sahf
loop
push
dec
and
scas
xchg
dec
sub
xchg
shll
je
xor
mov
push
ljmp
in
sahf
fisttpl
scas
shr
mov
hlt
lea
lock
adc
sbb
clc
or
inc
pop
pop
divb
push
push
push
and
pop
mov
test
add
pusha
popa
cmpsl
sbb
or
inc
lret
loop
rcll
cmpsl
xor
lock
add
cmc
testb
jmp
cmp
mov
inc
sarl
imul
roll
cs
and
cltd
adc
das
sbb
xor
clc
bnd
pop
imul
jmp
iret
lock
pop
xchg
imull
lret
testl
and
enter
inc
push
push
mov
int3
cmp
scas
pop
mov
or
test
jo
dec
xchg
insl
lahf
inc
and
xchg
add
mov
sub
xor
xor
and
dec
xor
out
ret
jl
ret
hlt
pop
fwait
jl
xor
sub
mov
ljmp
addb
aam
mov
pop
enter
dec
lret
mov
jl
cld
and
ret
call
cmp
pop
xchg
imul
dec
add
inc
adc
std
sbb
jbe
lahf
sbb
das
nop
mov
xor
xchg
data16
sbb
pop
sbb
push
mov
imul
cmp
xchg
add
fbstp
xchg
repnz
dec
push
mov
cmpsb
dec
mov
jge
loop
jbe
add
cmp
stc
and
pop
add
pop
ficompl
mov
les
push
cli
adcb
cmp
push
cli
adcl
imul
out
add
cmpsl
pop
fnstcw
mov
jnp
jge
xchg
push
testb
ss
and
mov
nop
data16
je
in
sbb
iret
pop
mov
pop
ljmp
xchg
inc
xchg
sbb
adc
sti
or
sar
add
bound
inc
bound
or
out
push
xor
js
int3
cmp
in
inc
jnp
jns
iret
test
sbb
out
cmp
dec
push
xor
mov
xor
out
test
stc
inc
sahf
mov
es
testl
sub
cwtl
stc
in
xor
cmp
push
inc
shll
dec
cld
cmp
sbb
dec
gs
in
push
ljmp
push
orb
or
lret
and
sarl
and
sbb
in
stos
xchg
and
dec
mov
pop
scas
out
mov
mov
jno
push
cmp
inc
nop
xchg
fisttpl
jmp
xor
jecxz
fcomi
mov
cmc
in
stos
aas
lds
je
push
and
addl
pop
out
sub
call
nop
jecxz
pop
hlt
stos
out
cmp
nop
pop
lcall
in
outsb
mov
fwait
jmp
aaa
stc
adc
lock
insb
mov
ror
lock
xchg
mov
outsb
in
push
mov
push
mov
cmpb
push
cld
repnz
clc
or
nop
imul
xlat
pushf
xchg
xchg
fstpt
mov
popa
fstps
adc
xchg
js
mov
mov
popf
sbb
ljmp
and
shl
cmpsl
in
inc
mov
pop
push
enter
xor
mov
dec
iret
adcb
add
push
js
int
lahf
adc
repz
and
das
jns
add
data16
mov
lcall
lds
data16
ficompl
inc
clc
movsl
cmp
push
ljmp
sarl
add
fdivp
push
cmp
scas
push
add
cmpb
inc
sar
or
jmp
push
pop
std
push
lret
mov
fsubr
pusha
mov
out
jmp
rclb
data16
cltd
sarb
cmp
dec
adc
xchg
into
xchg
das
es
and
xchg
add
sub
nop
mov
mov
add
and
popf
jno
ret
xchg
pop
dec
in
inc
ds
push
imul
addb
dec
jne
popf
mov
pop
jl
insl
rcl
loop
cmp
into
mov
push
add
mov
dec
sub
lret
inc
out
ja
inc
pushf
subl
insb
cli
jge
inc
jnp
add
in
rclb
or
mov
pop
add
push
rcrb
nop
cmp
lods
in
push
jb
cmpsl
pop
inc
js
outsb
push
jne
inc
leave
inc
push
popf
das
and
cmp
pop
les
jns
ljmp
aad
lods
xchg
push
fdivs
clc
lahf
repz
sub
mov
cmp
and
push
xorb
pop
test
mov
incl
cmp
add
sahf
adcb
jns
in
add
lods
jp
or
in
cmp
leave
enter
xlat
out
pop
mov
lret
add
jmp
sub
inc
mov
out
xlat
das
inc
push
or
ret
adc
test
and
fcoms
sbb
jmp
in
fsubl
icebp
dec
xchg
loopne
loop
in
aas
mov
sbb
mov
push
dec
pop
push
in
in
xorl
inc
pop
cmc
popl
cltd
dec
xchg
inc
sub
or
mov
out
jecxz
jo
dec
fsubrp
pop
and
xor
ror
gs
scas
clc
jl
pop
test
insb
pop
mov
call
mov
fadd
aad
xor
xchg
jae
bound
adc
add
xor
and
shl
ret
shl
mov
mov
mov
inc
jb
bound
adc
add
xor
and
shl
ret
shl
mov
mov
mov
inc
jb
arpl
adc
add
xor
and
shl
ret
repnz
mov
mov
mov
jbe
push
data16
xor
pop
sub
rclb
jg
outsl
pop
mov
mov
stos
mov
sahf
call
sub
cmp
dec
pop
pop
dec
imul
mov
mov
enter
nop
or
sbb
pop
cmp
sub
pop
dec
imul
mov
mov
enter
call
pop
dec
adc
pop
and
jmp
rcr
leave
test
clc
fcmovne
pusha
jae
arpl
sti
sarl
push
pop
out
cmp
add
daa
add
ss
loopne
or
mull
pop
dec
subl
adc
xchg
ror
dec
xchg
or
test
popa
push
js
dec
rorb
std
mov
lods
fstl
lret
leave
adc
out
mull
pop
xor
je
out
fadd
call
rolb
xchg
cli
enter
inc
cmp
mov
or
mov
xchg
je
mov
call
adc
jo
pop
or
rol
jle
ja
pop
sbb
adc
cwtl
fwait
mov
fcomp
enter
call
sub
cmp
dec
pop
pop
dec
imul
int
repnz
into
mov
xchg
mov
dec
popa
pop
or
push
pop
sbb
sub
mov
jmp
test
mov
test
xchg
sti
mov
sbb
imul
cmovns
jnp,pn
loop
inc
ret
int
neg
enter
call
sub
cmp
dec
pop
pop
dec
imul
mov
mov
enter
call
sub
cmp
dec
pop
pop
dec
imul
mov
lahf
push
lods
ja
push
ja
stos
js
dec
ret
lret
loop
cmc
mov
movsb
jl
insb
jns
xchg
rcrb
addb
mov
repz
aam
sbb
adc
idivl
fnstcw
movsb
outsb
test
pushf
push
dec
test
and
xlat
add
pop
test
ljmp
adc
mov
out
bnd
push
js
or
inc
xchg
mov
sbb
sti
bound
aaa
add
dec
adc
pop
mov
sar
adc
js
jp
stos
ret
sbb
mulb
sbb
repnz
add
int3
fidivs
mov
lcall
push
test
add
dec
mov
pop
push
xor
mov
or
leave
fsub
jne
cs
lock
insb
cmpsb
es
ficoml
xlat
jne
in
mov
jae
jle
lods
insl
jp
inc
out
jecxz
pop
jg
icebp
xchg
ss
add
sub
sub
pop
jecxz
and
mov
cmp
std
in
into
push
je
add
cmpl
xchg
dec
shlb
ret
adc
mov
cld
sub
or
cld
repnz
or
jecxz
pop
mov
or
sti
push
lret
mov
xor
mov
cmp
inc
fimull
fiadds
pop
out
jns
push
pop
jb
xor
xor
push
fmul
aas
mov
ss
pop
add
addr16
ds
adcl
jle,pn
push
lods
je
aad
cmp
in
add
mov
mov
lcall
jno
arpl
push
ret
mov
adc
sub
push
cmp
adc
inc
and
in
and
mov
dec
lret
sub
adc
mov
jns,pt
enter
in
mov
ret
test
rorl
xchg
dec
fidivrl
out
popf
xor
out
mov
xchg
ljmp
fwait
fs
mov
mov
cmp
dec
lret
dec
xchg
mov
rcr
xchg
jg
add
mov
insb
cmc
ss
pop
dec
cld
push
xchg
add
or
xchg
neg
push
adc
mov
cmp
outsl
loopne
inc
aas
or
cs
add
dec
adc
jno
lcall
jno
scas
jl
mov
inc
cmpsb
stc
lea
mov
dec
and
pop
push
cmp
pop
ja
iret
nop
aam
rcll
mov
push
pop
push
mov
pop
clc
aad
mov
sbbl
data16
xor
cld
orb
sub
mov
arpl
dec
imul
and
cmc
mov
inc
dec
sti
call
rcrb
mov
jno
jne
lds
imul
xor
mov
mov
add
pusha
xor
pusha
cmpsl
add
lahf
jne
jge
xor
and
mov
xor
cwtl
pop
stos
xchg
inc
mov
mov
lds
es
andl
rcrl
scas
cs
lret
pop
test
int
dec
cmp
push
fidivrl
pop
add
sub
pop
aam
jmp
lcall
push
out
adc
in
mov
shrb
pop
stc
nop
enter
mov
jns
inc
psllq
and
insl
push
lret
pop
mov
inc
sub
lods
cwtl
cmpsl
stc
out
sbb
ficompl
loope
out
inc
mov
mov
std
jl
insb
or
push
ds
repnz
aam
fldln2
outsb
aas
jecxz
dec
lcall
pop
mov
repnz
stos
and
ja
xchg
cmp
jns
fsubs
icebp
and
out
push
jg
and
sti
add
add
lock
cmp
stos
std
jle
cld
lahf
cmp
push
sahf
imul
dec
sub
pop
ret
insb
ja
xchg
lret
pushl
mulb
cmp
push
fwait
mov
cmp
dec
test
jbe
addr16
loopne
fcomps
jmp
push
dec
pushf
mov
inc
fwait
jae
pop
iret
lret
xor
mov
outsb
push
ret
in
jl
aam
mov
dec
cs
fisttpl
xor
inc
lret
sti
insb
stos
jo
enter
mov
jge,pt
test
daa
int3
mov
int3
sahf
test
shll
xor
adc
test
lret
xchg
adc
ljmp
orl
loopne
in
inc
push
inc
jmp
xchg
pop
cmp
dec
fildl
or
mov
xchg
fwait
inc
out
cmp
add
jmp
fldcw
or
aaa
push
or
testb
je
xchg
ret
popa
xchg
add
clc
pop
sub
inc
in
rorl
out
jl
sbb
adc
push
insb
icebp
xchg
aaa
pop
mov
jns
stos
mov
dec
inc
lret
mov
dec
adc
push
pop
push
pushf
fisttpll
insb
mov
mov
orb
pop
call
lea
jge
fnstsw
and
pushf
test
sbb
dec
int
ja
pusha
xchg
xchg
les
push
mov
sub
jnp
mov
pusha
xor
mov
sub
test
sub
pop
cmpsl
fcompl
repz
add
enter
jne
dec
dec
stc
arpl
aam
push
push
sbb
mov
dec
mov
mov
lcall
aam
in
clc
orl
stc
inc
fistps
mov
sbb
and
pusha
push
cmpsb
ljmp
jp
mov
sahf
iret
inc
and
jae
cmovge
fldl
out
and
imul
addr16
icebp
pop
fwait
pop
cmp
in
mov
in
ja
cmp
aas
pushf
aad
jno
test
movsl
xor
push
or
nop
mov
sbb
push
rclb
sarl
mov
loopne
imul
mov
push
in
cli
sbb
mov
xor
fwait
das
int3
pop
divb
popf
pop
fdiv
shrb
rorl
addb
add
jg
sar
clc
cmp
pusha
movsl
ret
fldt
enter
jns
or
add
test
cs
cld
in
fstl
leave
and
pop
roll
movl
mov
xchg
sbb
adc
shr
xchg
stc
pop
push
adc
mov
rcrb
mov
sub
fstps
ss
dec
cmpsl
pop
out
or
test
xor
sub
outsl
frstor
jle
inc
jno
popa
jb
fcomp
sub
call
rcr
data16
mov
add
sub
gs
out
push
pop
jne
push
loop
push
enter
clc
addr16
rol
pop
sbb
into
add
enter
loop
cmp
pop
mov
mov
in
xchg
test
rorl
es
dec
jg
fsubr
idivl
add
pop
mov
std
mov
ja
mov
jp
clc
inc
les
in
popa
lock
decb
pop
shll
or
or
cwtl
or
mov
cmp
mov
push
ret
push
lods
inc
ret
fcomps
mov
push
mov
cmpsl
jp
unpckhps
mov
jg
out
cmp
mov
lods
cmp
push
add
and
and
inc
int
adc
xchg
pop
sbb
mov
or
clc
outsl
mov
push
sbb
or
push
in
shll
push
stos
pop
cmp
in
sti
aas
loopne
push
sarl
cld
lods
inc
add
loope
mov
cmp
inc
pop
pushf
and
xor
ror
jmp
inc
inc
es
into
and
sbb
leave
jo
sahf
mov
push
push
inc
lret
sub
xor
adc
jno
iret
inc
out
adc
and
mov
arpl
adc
and
dec
out
int3
stos
loop
sti
es
xchg
lods
cld
xchg
idivb
loop
xor
inc
sahf
test
cmp
stc
push
and
mov
pushf
ucomiss
xchg
fcmove
inc
add
rorb
out
scas
test
js
clc
rcrb
andb
sub
jae
mov
jg
and
dec
sbb
stc
mov
cmp
push
push
add
lret
cwtl
sbb
fs
aad
sbb
mov
repnz
xorl
mov
sbb
adcb
shlb
cmpsl
mov
mov
shlb
adc
mov
mov
pusha
cmp
in
iret
inc
cmp
iret
imul
jo
mov
mov
xchg
std
adc
stos
push
mov
jno
xor
lock
insb
lahf
in
ss
test
or
cmp
test
jne
stos
sub
or
cli
test
lock
ss
lea
cmp
adc
sbb
push
aas
xor
push
add
add
rorl
pop
test
cli
stc
lods
dec
pop
cld
testb
push
movsl
cld
ds
xchg
sub
lret
mov
imul
lret
mov
daa
hlt
and
imul
das
push
loope
jns
sti
mov
in
mov
jle
push
mov
test
mov
pusha
outsl
jge
pop
inc
adc
icebp
cmp
mov
cwtl
add
inc
push
mov
movsl
ss
dec
jbe
popf
sbb
bnd
sbb
mov
les
icebp
cmp
imul
push
xchg
repz
inc
pop
mov
xchg
cmpsb
sbb
push
inc
mov
mov
jnp
arpl
cmpsb
jg
mov
ffreep
lcall
jb
push
ja
cmp
in
sbb
pop
rorb
fisttpll
push
ss
movsl
loope
push
imul
xchg
pushl
cmpsb
or
mov
lock
xor
and
cmp
rclb
or
mov
out
shl
inc
mov
inc
mov
adc
push
lret
adc
insl
jp
punpcklbw
dec
and
mov
or
xor
int
inc
jnp
dec
scas
adc
mov
mov
mov
xchg
mov
fcoml
aas
add
xchg
xor
outsl
clc
orb
jnp
sti
mov
or
fiadds
sub
jae
add
inc
mov
sub
fisubrs
mov
es
add
jnp
pusha
mov
lret
cld
mov
rcll
scas
and
pop
adc
mov
shlb
repz
nop
shlb
shll
js
xor
cmp
xor
inc
loopne
aaa
mov
cmp
push
push
jo
sub
mov
fnsave
dec
mov
and
cld
inc
push
je
mov
xor
add
mov
jno
xor
inc
sbb
dec
mov
je
or
dec
les
push
repz
sbb
jl
or
jne
or
gs
cwtl
dec
lret
inc
add
int
jno
ja
push
jmp
negb
sub
jns
ljmp
test
iret
lahf
push
jg
ss
in
cmp
mov
subb
push
movsb
fst
inc
lcall
popa
push
add
xchg
sti
xor
mov
and
in
adc
cmp
nop
sti
inc
mov
jle
cmpsb
movsl
cltd
call
push
and
jns
cmp
cltd
sub
xor
add
iret
hlt
test
iret
jns
or
and
mov
icebp
sub
pop
xchg
test
cmp
mov
out
jo
sub
push
in
rclb
pmaxsw
fisubrl
pop
and
push
cltd
xchg
popa
mov
jg
dec
sbb
inc
pop
mov
leave
adc
lcall
xchg
inc
mov
mov
cmp
and
les
test
in
ret
jge
lret
shlb
xchg
lds
lcall
hlt
ror
dec
jmp
pop
dec
and
aas
or
icebp
clc
or
pop
inc
adc
rolb
mov
mov
loope
arpl
inc
inc
fstl
lds
in
push
rcll
stos
fisttps
in
mov
arpl
lods
adc
push
test
jbe
mul
push
mov
xor
sub
lahf
inc
jle
mov
sahf
push
shll
sbb
ret
out
in
movsl
int
bound
add
push
pop
mov
test
push
or
cmp
jns
add
cmc
pop
mov
lahf
mov
imul
inc
test
sbb
ja
ret
mov
xor
jg
xor
scas
popa
and
mov
sub
fs
sbb
jg
mov
add
flds
out
jb
xchg
push
stos
ret
adc
ja
inc
sbb
add
lret
xor
cmp
cmpsl
push
pusha
jg
dec
inc
adc
in
call
cmp
push
push
mov
jl
adc
sub
and
mov
fildll
stos
push
jo
sbb
stc
mov
add
adc
xor
and
cmpsl
adc
mov
iret
cmc
fdivp
sbb
test
mov
cwtl
ret
insb
fistpll
icebp
inc
clc
adc
sub
out
add
pop
mov
mov
lock
test
and
fidivs
gs
pop
bound
mov
lds
push
jne
outsb
sub
and
sbb
filds
cmp
insb
fildl
lahf
adc
nop
pop
push
andb
cmc
sbb
shr
outsl
jp
xor
stos
lcall
jmp
push
dec
dec
dec
push
fstpt
shll
xor
or
repz
ljmp
fadds
jmp
ss
imul
cmp
mov
mov
ret
outsl
mov
fdiv
cs
jmp
test
inc
mov
or
xor
push
xchg
test
bound
pop
sub
pop
out
cmc
pop
mov
dec
test
sbb
daa
iret
cmpsl
mov
out
cmp
adc
test
lret
add
cmc
add
out
jecxz
ja
xor
pop
jb
mov
sbb
jl
mov
sahf
adc
push
test
aas
stos
pop
pushl
adc
arpl
pminub
mov
push
lahf
or
mov
cmp
bound
xchg
data16
test
shll
pop
aad
mov
cltd
rorb
mov
mov
sbb
sbb
and
aas
bound
jnp
xor
call
ret
loop
aam
add
adc
mov
loopne
and
or
add
mov
test
adcb
jp
xchg
dec
mov
je
jae
dec
subl
dec
das
clc
xor
dec
stc
xchg
and
xchg
loopne
rol
push
add
mov
xchg
fmull
add
push
fdivrp
adc
jmp
mov
push
fwait
xchg
inc
out
icebp
add
inc
jno
push
mov
mov
out
push
xchg
icebp
inc
sub
and
xchg
aas
pop
das
in
jge
adc
xchg
shlb
test
push
sti
sbb
subl
mov
iret
add
jnp
pop
idivb
cmp
and
sbb
aam
xchg
lret
nop
nop
test
aaa
inc
lods
les
mov
adc
movsb
in
xchg
push
cmp
mov
pop
push
lret
push
out
cmp
sbb
test
or
jo
movsb
jg
and
xchg
lret
and
loopne
xchg
inc
rcl
or
and
mov
ds
cltd
sarl
cmp
xor
push
jle
and
outsl
sub
aas
call
dec
popf
imul
push
and
js
pop
mov
xor
sti
cmp
test
aas
imul
das
push
hlt
xor
and
pushf
pop
push
push
or
in
inc
roll
movsb
pop
xchg
inc
or
and
iret
sbb
ret
and
sbb
lahf
lods
dec
add
popa
rorl
dec
into
or
sbb
sahf
fstpl
mov
scas
adc
outsb
sahf
or
in
xchg
sub
xchg
ljmp
lods
xor
lock
fsub
xchg
mov
ss
add
pop
xor
jp
jle
addr16
ds
lea
lahf
imul
push
push
push
jl
sbb
je
jne
xchg
inc
cmp
pop
pop
add
cmp
mov
insb
mov
shll
mov
push
test
sub
jno
inc
out
ret
xchg
scas
adc
pushf
leave
push
je
movsb
jle
iret
dec
cmpsl
mov
popf
test
loope
pop
fidivl
sub
jg
jecxz
mov
stos
cmp
dec
and
pop
lea
dec
setb
neg
add
mov
cmc
cmp
lcall
cwtl
push
push
xorb
dec
xchg
xchg
or
loopne
xchg
das
popf
dec
aam
xchg
out
sbb
mov
cwtl
xchg
mov
mov
push
aaa
push
mov
sti
insl
hlt
jb
enter
jp
das
lret
nop
cld
outsl
cmp
jge
xchg
mov
xchg
mov
test
mov
ret
movsl
push
and
test
daa
pop
mov
add
ficomps
mov
jmp
inc
jb
and
les
push
outsl
aam
ret
push
ds
cmp
jle
xchg
mov
out
fiadds
jbe
push
testl
cmc
pop
add
dec
pop
jge
inc
lock
call
shrb
mov
test
mov
xlat
movups
mov
add
out
xchg
enter
add
push
into
cwtl
mov
shrl
inc
adc
jb
insl
hlt
sbb
cmp
outsl
add
or
out
clc
enter
adc
leave
cli
mov
imul
popa
repz
and
add
adc
test
hlt
bound
movsl
jp
sub
push
xchg
das
push
lods
pop
mov
pushf
movsb
add
mov
pop
pop
mov
jns
xor
in
lahf
jl
nop
outsl
cmc
or
scas
mov
outsl
test
add
xchg
fimull
cltd
jmp
add
inc
push
popf
sub
jle
js
aaa
add
push
jge
cmp
cwtl
or
mov
push
push
rep
cltd
lahf
shlb
insl
test
cmp
test
or
or
pop
dec
mov
cli
out
sbb
lods
pop
pop
test
push
incb
or
call
sub
lea
clc
mov
xor
dec
popa
inc
movsb
dec
in
inc
mov
inc
mov
test
sub
fisubrl
pop
out
adcl
dec
ja
pop
xchg
add
iret
xchg
push
xchg
lock
stos
or
xor
inc
and
adc
imul
bound
add
scas
test
jns
jno
push
mov
and
lods
push
xor
mov
pop
mov
jo
mov
mov
or
cld
add
mov
aaa
loope
aas
mov
stos
jmp
outsb
aad
mov
movsb
and
fisubs
inc
lret
hlt
enter
inc
pop
movsl
jnp
push
sbb
pop
imul
jbe
inc
inc
jbe
mov
aad
lcall
or
mov
gs
cmp
nop
mov
add
lcall
push
cwtl
jp,pn
mov
decb
int
dec
mov
xor
leave
ret
xor
adc
leave
jno
adc
cmc
data16
test
sub
jns
mov
addr16
enter
pop
lods
inc
outsl
aas
ret
push
test
shrb
jnp
add
lahf
fstpl
sub
aaa
gs
loope
adc
cmp
lret
test
xchg
test
sub
push
jg
popa
in
pop
int
mov
test
or
xor
push
mov
inc
cmp
xor
cmpsl
sub
dec
pop
mov
imul
call
jno
mov
inc
lret
fstps
inc
in
push
pushf
and
pop
xchg
push
push
adc
jmp
or
pusha
out
xchg
outsb
mov
pop
add
and
xchg
leave
lcall
adc
xor
or
sub
es
pop
fnstenv
xlat
call
adc
addl
add
cltd
fdivl
test
test
inc
out
jecxz
andb
pusha
orl
mov
mov
mov
dec
insl
mov
es
or
in
sti
jns
mov
inc
in
out
scas
mov
jmp
push
repz
inc
push
inc
imul
push
mov
and
mov
fidivl
inc
jmp
push
add
fldl
loop
and
dec
mov
xor
xchg
dec
jecxz
mov
fisttpll
insb
lcall
cmc
test
das
adc
dec
sbb
loopne
xor
inc
xchg
out
mov
fcomp
enter
call
sub
cmp
dec
pop
pop
dec
imul
mov
mov
enter
call
sub
cmp
dec
pop
pop
dec
imul
mov
mov
enter
call
sub
cmp
dec
pop
pop
dec
imul
mov
mov
enter
call
cmpl
shll
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
ja
test
sahf
imul
mov
pop
stos
add
add
add
push
add
add
pop
add
add
add
add
scas
add
push
add
add
add
mov
add
add
add
add
mov
push
xchg
add
add
push
push
add
add
add
leave
add
incl
dec
add
add
add
push
ret
add
sbb
jp
push
dec
add
pusha
add
add
add
add
add
push
add
add
movsl
add
stos
add
add
add
outsb
add
push
add
mov
ret
add
test
ljmp
add
add
add
add
jmp
add
xlat
add
push
add
pop
add
add
add
add
add
sbb
push
jnp
cmp
dec
add
push
push
inc
add
add
ljmp
add
add
stos
add
add
add
add
lret
add
add
push
add
add
js
pop
add
add
lds
adc
filds
pop
add
add
add
add
add
push
xchg
add
add
mov
add
lret
add
add
add
add
add
add
add
add
add
adc
push
or
jbe
cmp
lds
mov
inc
add
mov
add
add
add
add
add
add
add
add
cmp
xchg
add
add
add
add
add
add
add
add
add
test
or
or
add
add
aas
add
add
xchg
add
xchg
popl
leave
add
add
adc
add
jge
pop
add
add
ja
add
cmp
sbb
and
aaa
add
add
xchg
add
add
push
add
add
add
sbb
mov
enter
sbb
mov
lahf
add
add
add
aas
add
add
add
add
add
add
add
mov
add
add
add
scas
add
lahf
add
push
pop
add
xchg
add
dec
add
add
add
add
add
adc
roll
and
add
add
xchg
add
add
add
ljmp
add
inc
add
testl
scas
add
push
lds
adc
add
and
add
add
add
add
add
add
add
push
add
filds
push
add
add
add
add
add
add
add
add
xor
pop
add
add
add
add
add
add
push
add
add
xchg
add
add
enter
cmp
push
add
push
mov
add
add
add
add
add
or
addl
inc
add
or
ljmp
add
sub
xchg
add
add
add
add
add
insl
add
add
test
ljmp
add
add
add
add
das
add
add
add
add
add
and
test
filds
push
add
xchg
jbe
ret
add
add
add
add
add
push
add
push
leave
add
sub
adc
mov
add
add
jmp
or
xor
movsl
ja
sub
aaa
pusha
loope
jnp
movsl
test
iret
imul
ljmp
mov
xor
jnp
jnp
mov
test
sub
mov
subl
mov
mov
fisubs
mov
mov
insl
adc
sti
pop
lret
xlat
mov
cmp
pop
xchg
sbb
or
ss
push
lret
sbb
aad
dec
js
dec
jb
clc
lods
or
jg
and
mov
and
pop
das
shlb
push
mov
fs
xchg
js
inc
mov
insb
repnz
dec
push
mov
std
inc
dec
cmp
or
xchg
jae
cmp
jle
mov
test
repnz
inc
test
std
push
adc
rcrb
xor
repnz
cmp
sbb
int3
pop
pushf
jbe
data16
ja
cli
lret
adc
ror
pop
leave
mov
test
cmp
lea
xor
push
dec
xchg
jo
pop
pop
push
test
daa
xor
cmp
call
punpcklwd
ss
jbe
push
sbb
adc
jg
das
mov
loop
decl
sub
fcmovu
inc
scas
add
ror
mov
pop
lahf
sub
sub
addr16
mov
xchg
xchg
push
ret
fidivrl
int
push
hlt
sbb
xchg
sbb
cmpsb
testb
adc
pusha
inc
inc
lods
das
mov
inc
adc
mov
cs
clc
mov
jge
loop
shll
repz
insl
rorb
into
shrb
sub
frstor
rorb
daa
pushf
jmp
cmpl
daa
popf
xchg
or
mov
pop
dec
push
out
mov
ja
cli
jnp
pop
xor
and
sbb
cmp
das
cmpsl
mov
stos
xlat
add
rcl
mov
inc
push
rep
ficoml
add
in
mov
add
cmove
cmp
enter
jge
or
xor
or
sub
sbb
sub
cmpsl
pop
jb
sub
xchg
adc
and
and
pushf
inc
aas
test
sbb
arpl
dec
add
mov
sti
in
push
int
add
inc
sbb
dec
xchg
jle
inc
jbe
cs
insb
xor
xor
sbb
into
pop
cmp
sti
pop
rol
ss
rcrl
sub
dec
sub
loope
adc
pop
add
add
arpl
cmp
and
cmc
add
cmpsl
push
das
add
ret
sub
es
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
