call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
dec
pop
pop
insb
outsb
jl
adc
push
ds
out
cli
fsubr
mov
mov
pop
pop
outsb
jl
or
sbb
sub
cmp
mov
fimuls
cld
popf
pushf
lods
scas
mov
inc
je
fs
push
xor
sub
into
xlat
std
adcb
ljmp
pop
and
adc
add
loopne
pop
int
shll
adc
xchg
and
jbe
adc
dec
dec
rcl
insb
insb
cs
jle
in
cmc
roll
icebp
add
out
lret
rolb
inc
rcl
xor
inc
test
arpl
into
and
mov
sub
daa
push
scas
jnp
pushf
adc
xchg
imull
les
mov
in
adc
sbb
push
push
scas
lods
lret
mov
or
imul
push
les
and
stc
push
cld
inc
mov
cmp
icebp
hlt
mov
xchg
mov
xor
std
add
jle
lods
mov
dec
insb
ja
jle
push
push
push
sub
and
hlt
mul
out
xchg
test
aas
dec
cmp
or
sbb
jno
cs
push
pop
mov
ljmp
leave
rcr
dec
daa
pop
aaa
or
jb
inc
pop
jns
into
mov
mov
jmp
leave
mov
pop
or
jl
je
sbb
sub
cmp
int3
into
in
out
cld
decb
mov
pop
insb
outsb
jl
or
sbb
sub
cmp
int3
into
in
out
cld
decb
mov
dec
xor
test
adcb
scas
and
test
xor
pop
mov
stos
mov
mov
jae
cmc
xor
mov
rorl
sbb
aas
xchg
iret
add
pop
shlb
push
pop
xchg
jns
fsubrl
outsb
inc
ret
leave
fisttpl
add
enter
xchg
inc
add
push
andb
scas
dec
push
and
adc
sub
or
rorl
enter
xchg
lret
jg
lods
mov
xchg
adc
mov
cmp
test
psubq
cmp
jmp
lods
dec
inc
xchg
nop
jle
mov
movsl
sub
loope
pop
pop
repz
add
int
mov
xor
push
jge
mov
fwait
sub
mov
lods
ret
push
jl
test
rorb
mov
fidivrl
lea
aas
and
mov
loop
aad
fdivs
fs
dec
stos
sbb
call
fwait
cmp
and
and
in
mov
xorb
adc
mov
loopne
cmp
jbe
adc
push
mov
cltd
jo
sub
and
fwait
cmp
cmpsb
mov
pop
in
jl
fdiv
dec
js
xor
cmp
mov
jb
aad
data16
cmp
fimuls
xchg
movsb
push
push
loopne
enter
push
mov
jp
ja
lahf
leave
xor
adc
sbb
mov
cltd
dec
mov
pop
aam
mov
push
inc
adc
jle
adc
push
stos
mov
sub
stc
and
lods
out
mov
lea
aaa
xor
or
lea
jb
int
pop
jae
push
ljmp
popa
xor
dec
scas
push
xor
outsl
xor
call
mov
mov
sbb
mov
xor
pop
lods
xchg
repz
lds
ljmp
push
add
jmp
xchg
xchg
outsl
gs
adc
jne
test
cmp
rorl
push
incb
ljmp
or
pop
add
gs
mov
mov
in
sub
xchg
jl
push
nop
pop
adc
aaa
jo
and
je
testl
int3
or
add
leave
cmp
cwtl
add
xchg
sub
pusha
fwait
mov
jno
lcall
inc
pop
mov
jmp
adc
pop
jge
stos
jg
mov
call
push
jmp
pop
xchg
mov
cmp
dec
adcb
push
xchg
jp
out
lock
jmp
xchg
movl
rdpmc
or
into
mov
iret
and
and
idiv
pop
jne
or
push
out
nop
mov
jbe
fdivrl
fwait
cltd
hlt
cmc
call
inc
sbb
fstl
addr16
or
aad
lods
movsb
scas
fdivr
lret
push
and
nop
mov
sbb
subl
mov
push
mov
dec
inc
test
nop
xchg
lcall
cwtl
stc
popa
addr16
xchg
pop
mov
xchg
push
iret
xor
lret
cli
sub
add
cmpb
xlat
aad
in
lret
xchg
scas
stos
das
stos
adcl
pop
jae
out
cli
fldl
sub
cmpsl
lahf
mov
call
mov
mov
loopne
sbb
xor
pop
adc
inc
mov
dec
sub
imul
jge
mov
sub
mov
out
sarl
inc
ficompl
ret
xor
push
dec
int
adc
sub
pop
cmp
dec
std
pushf
mov
scas
cs
mov
aas
lods
xchg
stos
cmpsl
aaa
lret
inc
xor
sbb
mov
adc
xor
test
ror
sub
imul
adc
jmp
pusha
jl
fiaddl
add
test
mov
loope
and
mov
in
test
es
xchg
daa
jo
mov
jecxz
xlat
adc
adc
mov
lds
dec
push
outsl
pushf
or
int3
xchg
jge
das
lahf
repnz
andl
ljmp
jmp
insl
sub
mov
jnp
jo
lahf
sahf
lds
mov
pop
and
add
pop
ss
in
in
mov
mov
icebp
push
inc
out
popf
inc
fstpt
cltd
dec
dec
ja
or
pushf
out
fistpll
xchg
in
loope
add
mov
xchg
out
adc
int3
je
xchg
test
fadds
adc
jl
dec
mov
das
jae
cmpb
aam
dec
cmp
jecxz
mov
out
loop
test
aad
gs
cld
fucom
lahf
test
or
adc
mov
inc
or
fcmove
mov
fisttps
dec
pushf
bound
dec
inc
xor
mov
insb
movsl
mov
test
in
push
push
inc
iret
sbb
mov
cmpsb
ffreep
push
ss
test
inc
out
sub
cmpb
test
push
ret
sbb
dec
cltd
sahf
scas
mov
inc
jl
lods
inc
sbb
pop
and
xor
mov
outsb
pop
leave
mov
ss
movl
jle
nop
cmp
push
in
mov
inc
xor
in
pusha
mov
incb
dec
inc
scas
ss
je
call
sbb
dec
sbb
jb
subl
sub
ret
adc
icebp
out
mov
or
adc
movsb
or
aad
inc
push
jmp
dec
add
ret
push
cli
or
adc
das
int
pop
and
gs
or
adcl
incb
aaa
cs
enter
mov
add
xchg
cmp
stc
je
cmp
jge
inc
sti
adc
jae
mov
loop
cli
test
sub
push
mov
mov
dec
insb
add
pop
imul
cmp
or
das
xchg
out
int
lock
sahf
pop
ds
pop
sarl
aaa
das
or
data16
mov
cmp
sahf
xchg
cs
iret
fmuls
repnz
cmpsl
push
leave
or
xchg
sbb
imul
imul
sbb
push
adc
lcall
call
or
mov
mov
cmpsl
repnz
add
mov
or
and
mov
shrl
jne
sbb
ret
in
xchg
jle
push
jne
sar
dec
popf
das
shr
pop
add
mov
push
aad
fistpl
pop
xchg
inc
sahf
mov
mov
and
rorb
xor
dec
xor
sbb
inc
imul
rcrl
outsl
clc
pusha
ret
leave
fldl
push
test
jmp
in
out
jecxz
add
test
cmp
xchg
aaa
mov
jbe
shr
sar
mov
mov
rolb
mov
xchg
pop
jl
or
adcl
mov
push
das
gs
xorb
cltd
pop
mov
mov
ss
mov
shrb
bound
dec
xchg
inc
push
cmc
xor
xchg
inc
lds
mov
data16
push
add
lcall
xchg
out
shl
adc
dec
pusha
xchg
addl
inc
or
jp
aam
addb
push
shlb
sub
push
add
dec
mov
sbb
xor
sbbb
mov
out
push
dec
sub
shrl
sub
shr
cmp
adc
sbb
addr16
xor
sub
insb
xor
dec
jno
repz
and
mov
and
repz
mov
rorl
or
mov
xchg
ds
or
mov
or
popf
test
jmp
jae
test
andb
pop
outsl
int
mov
shlb
bnd
adc
or
stos
pop
dec
mov
daa
inc
jp
xchg
sbb
xor
inc
leave
mov
push
shlb
pop
enter
cmc
or
mov
aad
and
inc
and
js
push
leave
dec
rol
ret
out
pop
test
xchg
xchg
fwait
or
repnz
loop
shrb
aam
js
or
hlt
call
jnp
les
pop
ss
iret
add
sub
jbe
dec
lea
arpl
sub
push
out
out
in
mov
and
push
in
into
mov
mov
incl
and
gs
pop
pop
adc
sti
cmp
jne
sbb
loopne
subb
aas
jo
test
mov
dec
jmp
mov
enter
xor
or
stos
popf
out
dec
pop
xchg
shl
push
data16
xor
daa
mov
xchg
cmpsb
rcl
add
cmpsl
scas
xor
xor
or
jmp
push
sub
and
into
shll
fs
scas
divb
push
mov
mov
das
fs
jp
mov
ss
and
and
mov
push
popf
shlb
dec
lock
lds
test
sub
inc
rcrb
cs
cmpsl
mov
push
ret
xchg
aad
out
les
fs
jg
or
ljmp
fs
sbb
and
push
sbb
jp
in
repz
jnp
iret
mov
xchg
outsl
and
rolb
push
dec
sbb
inc
jmp
fs
cmp
shrl
addr16
pop
mov
test
ds
out
addr16
inc
adc
nop
pop
mov
add
lods
in
hlt
repnz
and
std
mov
xor
jmp
mov
fs
push
dec
mov
pop
xor
lods
mov
out
sub
loope
add
mov
leave
out
test
call
sub
mov
push
fistpl
xchg
jmp
ficoms
repz
xor
cmpsb
mov
js
cs
cmpsl
or
outsl
jno
push
push
negl
sub
mov
add
xor
int
stos
push
sbb
loop
xor
outsl
ljmp
pop
cmp
fistpl
sbb
and
dec
cli
out
xor
fidivrs
loop
sub
inc
mov
sbb
into
loopne
push
pop
call
pop
inc
dec
xchg
js
ss
xchg
subl
mov
insb
aad
sbb
xor
iret
popa
dec
sbbb
popa
cmp
pminub
idivl
lock
hlt
sub
pop
cwtl
push
add
mov
mov
pop
inc
xchg
subb
jp
mov
mov
repz
dec
sbb
jp
cld
sahf
add
js
mov
in
adc
out
push
in
mov
sbb
mov
outsb
adc
mov
dec
in
in
insl
push
imul
mov
dec
out
pop
jmp
sub
sar
movsl
lea
js
aam
fidivl
and
data16
cli
or
adc
fstps
push
adc
push
pop
cmpl
jge
or
testl
lds
mov
add
out
pop
mov
popa
daa
sub
sub
push
pop
cli
ds
xor
mov
into
fistpl
es
dec
xchg
jno
loopne
dec
jmp
push
lret
mov
sbb
das
inc
xchg
int
fs
aam
xchg
dec
adc
sub
push
icebp
notb
outsb
push
cmp
inc
pop
sbbb
pop
mov
lahf
mov
nop
adc
mov
or
or
jmp
mov
aas
mov
inc
jb
les
fdivrl
add
push
sbb
pop
in
fnstsw
jg
mov
movb
mov
sbb
sub
mov
scas
ja
imul
jnp
lret
cmpsb
test
mov
inc
mov
popf
std
scas
jnp
xor
mov
pop
mov
sbb
not
sbb
adc
pop
jb
push
aas
loope
sahf
cmp
sbb
jb
rolb
clc
lods
xor
push
aad
test
lock
mov
inc
pop
out
dec
mov
xor
xor
call
pop
pop
in
mov
imul
mov
jns
or
mov
jmp
pop
fs
cmp
dec
or
icebp
sub
xor
lods
push
sbb
push
xor
adc
add
adc
lahf
mov
imul
and
dec
lods
rcr
inc
rcrb
out
out
aad
mov
push
les
lods
pop
mov
dec
rcrl
sub
cmp
xchg
add
dec
loop
mov
jp
and
out
mov
popf
repnz
test
loop
insb
in
in
push
sbb
pop
dec
loopne
pop
mov
aaa
add
pushf
mov
aam
scas
repz
test
lret
ja
cwtl
inc
jecxz
jnp
pop
add
jne,pn
inc
test
test
jle
mov
stos
cmp
outsb
sarb
mov
sub
int
out
push
push
aas
icebp
xor
pop
scas
adc
jno
push
jg
dec
in
int
mov
filds
mov
cmpsl
cli
xchg
lahf
ficoms
xchg
aad
iret
adc
imul
mov
add
and
mov
pop
jns
mov
insb
or
enter
jnp
adc
leave
pushf
dec
inc
mov
es
sub
fbld
out
pop
test
add
ljmp
jl
mov
cwtl
test
popf
sahf
sbb
cmp
and
ret
xor
cmp
xlat
sub
inc
pusha
add
sti
cwtl
xchg
movb
and
and
int3
xchg
in
clc
inc
insl
mov
fwait
sbb
jns
adc
add
add
stc
adc
mov
sbb
inc
xor
popa
xchg
mov
xor
iret
lahf
xor
or
lods
cld
mov
in
pop
cmp
cmp
mov
cwtl
data16
pusha
aad
stos
lcall
cmp
pop
or
cmpsb
xor
sbb
rcl
sahf
cmp
mov
mov
adc
sbb
negb
mov
imul
cmpsl
xchg
andb
sub
fdivrs
push
pushl
clc
sbb
fidivs
sti
xor
jle
jle
call
pop
mov
and
mov
xor
sbb
mov
and
pop
lods
fdivr
mov
pop
add
xchg
xchg
out
adc
jae
nop
and
negl
pop
jge
out
cmp
ret
sub
cs
xchg
push
jb
mov
das
int
push
out
enter
lcall
das
mov
scas
jge
enter
push
push
movsl
dec
cs
loop
mov
and
int
inc
arpl
outsb
cmp
sbb
push
sbb
pop
and
test
mov
xor
arpl
cmp
dec
push
sti
rcrb
fcoms
xchg
test
into
sub
bound
push
mov
and
orb
xchg
les
pop
mov
sbb
push
and
cli
push
int3
mov
adc
test
sbb
xchg
jne
cld
pop
cltd
stos
movsl
and
cmp
and
dec
xchg
jb
jmp
lock
pop
loop
divb
add
lahf
cmp
test
or
sbb
mov
adc
cld
arpl
cmpsl
lea
test
inc
loopne
scas
xchg
iret
inc
test
repnz
inc
mov
push
add
jmp
bound
insl
add
aam
int3
jg
inc
stc
aad
push
lcall
mov
rol
inc
movsb
mov
mov
push
dec
jmp
jne
sub
adc
sbb
fistpl
repnz
jb
ficompl
inc
add
in
ja
mov
sub
std
and
call
jo
test
movsb
sub
cmpsb
dec
jge
ss
je
pop
and
test
leave
arpl
in
js
mov
push
or
fdivl
pop
pop
fbld
jb
jge
ret
mov
mov
push
adc
xchg
cld
aas
out
mov
cmp
nopl
jg
enter
mov
jle
push
jno
lds
int3
mov
ss
stos
xchg
or
test
push
aam
cmc
sub
jl
mov
clc
inc
and
outsl
mov
push
lea
leave
mov
mov
movsb
shrb
inc
cmp
dec
or
mov
push
movsl
rorl
inc
sbb
pop
dec
inc
repz
fs
adc
sub
std
loopne
mov
xchg
pop
retw
xchg
mov
jecxz
mov
rclb
bound
test
push
or
pushf
or
scas
xchg
mov
test
mov
les
cmp
cmp
dec
or
sbb
add
ret
xchg
inc
push
sub
or
scas
pop
add
scas
dec
sbb
add
sti
dec
push
imul
aaa
add
sbb
inc
fs
inc
mov
and
sarl
std
cmp
push
xchg
push
jnp
inc
push
daa
push
ljmp
xchg
or
push
nop
mov
cmp
cmp
loop
mov
inc
das
push
int
out
out
mov
loop
xor
ljmp
mov
adc
movl
pop
cmp
dec
jbe
cmpsl
aad
loop
movsl
adc
adc
lea
sub
int3
xchg
jmp
xchg
popf
in
repnz
stc
inc
inc
shrl
dec
bound
fsubs
popf
out
add
push
push
pop
fwait
push
movsb
push
ja
pop
xchg
stos
lret
loop
and
push
fstpt
movsl
cltd
jb
outsl
mov
popa
movsl
lahf
xor
mov
sbb
mov
inc
outsb
jp
sbb
ss
mov
test
lods
jmp
or
fistpll
pushf
out
movsl
inc
cmp
sarb
mov
sub
fs
pop
notb
pop
adc
or
adc
cltd
inc
mov
int
sub
mov
add
xchg
das
dec
ret
push
je
int3
imul
jmp
sbb
mov
stc
or
and
out
dec
loopne
test
push
iret
repnz
push
xchg
pop
fs
lods
std
sub
jge
pop
cmp
and
in
enter
repz
xchg
subb
mov
outsb
jae
mov
fstps
loopne
mov
jnp
outsb
add
inc
dec
shlb
cld
cmp
jp
mov
fsubs
xchg
nop
gs
xchg
scas
and
adc
aad
mov
dec
mov
or
pushf
pushf
pop
adc
out
inc
outsb
or
dec
mov
sti
scas
movsl
outsl
pop
adc
leave
jge
push
mov
mov
mov
dec
sub
jno
jp
ret
lea
and
out
daa
push
mov
cmpsl
repz
and
fidivrl
shll
idiv
outsl
xchg
xchg
test
daa
outsb
push
hlt
mov
pop
push
dec
stos
push
out
add
mov
xor
inc
add
popa
lret
xor
inc
insb
dec
cwtl
data16
cld
mov
test
lea
pop
or
dec
lret
rclb
adcb
dec
sbb
icebp
out
mov
testb
mov
dec
mov
sub
jbe
mov
pop
inc
inc
jae
mov
sti
test
adc
cmc
rolb
cli
daa
scas
int3
lock
xor
or
pusha
pop
aaa
ja
imul
fldenv
xchg
xor
jbe
dec
mov
and
push
orl
sbb
xchg
sub
test
mov
push
cmpsl
sbb
sub
stos
insb
and
xchg
lret
cmpsl
call
sbb
pushf
and
call
and
idivb
mov
sbb
xor
jle
pop
jle
and
push
fisubs
cmp
cmp
push
sub
mov
pop
or
jmp
mov
xor
push
xor
sbb
jcxz
jbe
test
in
adc
pusha
ss
cli
das
aaa
inc
ret
xor
loope
aaa
pop
pop
adc
arpl
sbb
sub
insl
jmp
jle
dec
addl
push
and
jmp
sbb
stos
push
daa
inc
std
push
push
cld
out
pop
rorb
add
mov
repnz
lods
adc
dec
jo
test
mov
ss
mov
test
lock
repz
inc
add
mov
popf
add
adc
mov
push
js
cmp
cs
xor
xor
int3
jae
cmp
adcl
or
add
sbb
leave
fisubrl
stos
lods
push
loope
loop
loope
fildl
sub
push
or
and
push
sbb
jae
fimuls
sahf
push
subl
cltd
pop
adc
in
or
push
jo
cmpsl
bsr
pushf
movsl
push
push
pop
mov
or
mov
xchg
pop
scas
cmp
outsb
add
test
es
lea
pop
adc
lea
outsb
jl
or
sbb
sub
cmp
int3
into
in
out
cld
decb
mov
pop
insb
outsb
jl
or
sbb
sub
cmp
int3
into
in
out
cld
decb
mov
pop
insb
outsb
jl
or
sbb
sub
cmp
int3
into
call
mov
mov
pop
push
jle
push
sbb
lods
cs
je
out
cld
mov
push
adc
push
roll
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
jl
insb
jbe
dec
mov
cmp
or
mov
in
neg
out
xchg
mov
cmpsb
mov
inc
insb
jbe
dec
push
cmp
sub
sbb
je
cld
in
neg
call
lods
mov
cmpsb
mov
pop
insb
outsb
pop
jle
push
sub
sbb
or
cld
in
test
call
icebp
aas
movaps
inc
sbb
sub
xchg
loope
push
pop
cmp
mov
stc
xchg
das
mov
leave
cmp
push
test
push
mov
adc
leave
sbb
mov
pop
and
xor
lods
mov
stos
cmp
test
xchg
test
cmpsb
xor
cmp
mov
lahf
pop
sub
pop
add
adc
pop
sbb
mov
cmpsb
lea
or
cmp
or
shr
push
movsl
jnp
sub
add
mov
outsb
out
xchg
stc
cmpsb
loope
dec
cltd
or
cmp
cs
sub
dec
mov
sarl
cltd
lahf
jl
insb
jbe
dec
add
sub
sbb
or
cld
fsubrp
out
fdivr
int3
mov
in
js
sub
gs
pusha
inc
jnp
es
test
mov
in
ret
daa
or
cmp
dec
jp
push
pusha
ss
push
testb
lods
ror
jecxz
cmp
and
cs
sub
push
sub
sbb
or
cld
in
neg
out
xchg
mov
cmpsb
mov
inc
insb
jbe
dec
push
cmp
sub
sbb
or
cld
in
neg
out
xchg
mov
cmpsb
mov
imul
dec
fs
xor
jecxz
notl
sti
test
es
icebp
imul
and
adc
movsl
sbb
in
dec
insb
mov
out
cld
inc
cmp
test
xor
testl
jb
jno
cmp
dec
out
and
mov
data16
jae
sahf
inc
ret
add
push
cmpsb
inc
jmp
incl
lea
push
sahf
or
mov
aas
sbb
in
scas
lock
test
in
test
mov
jbe
enter
add
js
dec
cmp
jae
adc
test
lcall
shl
lcall
out
inc
lret
cltd
outsl
jae
mov
mov
lahf
sbb
outsl
bnd
mov
mov
cmp
and
xor
imul
cltd
dec
xchg
mov
aaa
mov
mov
fs
fidivrl
fnstenv
mov
push
and
xor
jne
xchg
mov
adc
sahf
es
fisubs
lea
xor
xchg
add
inc
inc
cmp
jo
jae
ljmp
inc
cmp
xchg
and
bound
sub
test
outsb
nop
cli
pop
mov
cmpps
ret
push
test
pop
jbe
mov
dec
jbe
add
adc
outsl
xor
insb
pop
and
sub
adc
repnz
jae
jl
mov
mov
inc
sbb
maxps
inc
imul
adc
scas
add
cmp
xchg
adc
xor
insb
jnp
jnp
mov
cmpsl
notl
mulb
movb
into
sbb
xchg
fistps
add
adc
mov
shl
sub
popf
stos
cli
cwtl
fwait
sti
jle
lret
mov
test
pop
push
popf
mov
or
xchg
int3
clc
scas
mov
sub
sub
repz
sbb
push
test
mov
shll
lahf
mov
fldln2
out
loopne
mov
data16
aas
adc
ljmp
sbbl
pop
xor
mov
mov
add
inc
cltd
cmp
pop
sbb
je
mov
mov
adc
pop
les
sub
sub
cmp
push
pushl
ds
mov
pusha
addr16
push
mov
xor
ss
sbb
rcrl
sub
jbe
inc
sbb
mov
sti
sbb
stos
or
shrl
and
or
sub
lret
jp
lea
fwait
daa
cmp
aas
gs
sub
out
xchg
ret
movsb
pop
ja
mov
dec
les
mov
mov
orl
sub
sbb
push
gs
and
mov
push
outsb
fcoms
cmc
ret
sbb
mov
inc
xchg
mov
jmp
adc
or
loope
push
cld
outsb
mov
cmp
nop
aad
sahf
push
int3
sbb
mov
test
xchg
sti
sub
xor
push
mov
jne
cltd
adc
add
fs
aad
add
mov
push
push
mov
inc
jmp
or
dec
lods
sub
and
dec
sarl
pop
mov
clc
outsl
fisubs
xor
leave
ror
les
cmpsl
ret
fsubrs
dec
sti
shlb
ja
sub
mov
mov
and
test
jmp
pmullw
xchg
fisttpl
test
ffree
jl
sub
sub
fildll
mov
out
sbb
incb
cltd
or
pop
push
sub
ds
daa
lret
mov
into
add
jl
xor
pop
pop
popf
add
pusha
lods
add
push
push
add
xor
outsb
lods
pop
lea
mov
in
fiadds
sbb
cli
out
loop
jnp
mov
mov
and
push
jae
nop
fcmovnu
xchg
jmp
jmp
add
push
cmc
adc
mov
outsl
and
mov
mov
fucomi
test
aad
out
lods
adc
insl
outsl
dec
mov
gs
nop
cmp
bound
or
cmpsb
fnstsw
inc
xchg
pop
dec
jecxz
std
mov
out
mov
jbe
test
js
sarl
stos
sarl
mov
xchg
call
in
pushf
leave
xchg
mov
aam
daa
cs
pushf
insb
fdivl
adc
popa
adc
sahf
out
pop
dec
jle
inc
xor
jge
sub
aas
test
les
mov
push
into
gs
rorl
mov
or
sub
mov
push
or
call
icebp
cmp
pop
int3
sbb
adc
sti
cmpsb
fidivl
daa
mov
dec
fcmove
and
or
es
fadd
push
in
xor
jle
aad
outsb
jno
jle
sub
push
dec
push
orl
leave
lods
ss
out
xor
inc
dec
push
gs
shr
outsb
push
stc
addr16
pop
lods
nop
les
mov
aaa
mov
inc
aaa
mov
xchg
mov
pop
arpl
xchg
jo
outsb
xchg
jle
jmp
popf
xchg
fistl
mulb
out
pusha
adc
xchg
bound
mov
dec
mov
dec
push
js
jge
push
repnz
int
addr16
jecxz
adc
in
test
leave
js
sbb
mov
dec
mov
sub
sbb
xchg
and
xor
leave
or
popa
xorl
std
dec
rcrl
testb
repz
xor
sub
xchg
inc
mov
aas
cmp
dec
jbe
jnp
test
or
enter
add
sub
data16
xor
and
sub
and
cmp
mov
ljmp
outsl
xorl
cli
xor
mov
lea
inc
ret
lcall
adc
or
mov
mov
pop
daa
divl
arpl
sbbb
daa
dec
dec
xchg
lea
xchg
sub
dec
sub
xor
jecxz
mov
mov
aas
xor
nop
sbb
xor
jecxz
or
xchg
mov
rolb
ljmp
rcl
mov
aas
cmp
pslld
xlat
jmp
xor
fstps
sbb
push
push
pop
dec
or
lock
xchg
idivl
mov
hlt
push
insl
or
mov
or
mov
ljmp
dec
push
cmp
jbe
push
add
push
jns
and
sahf
xor
movsb
movsb
jge
rorb
arpl
clc
inc
push
into
cmp
movsb
imul
lcall
pavgw
in
inc
cmp
jecxz
adc
orl
xchg
push
shrl
or
pop
xchg
test
fisubs
ss
div
sub
loopne
ss
mov
pop
mov
leave
mov
add
ja
inc
lret
fistpl
aad
aas
push
dec
pusha
pushf
fnstcw
xchg
rcr
cmp
loopne
mov
push
xchg
call
les
pop
sbb
fstl
pop
pop
pop
inc
inc
sub
mov
xlat
sbb
xchg
xlat
scas
add
push
pop
push
ljmp
cmp
test
lret
pop
movsb
xor
sbb
iret
dec
das
js
in
movsl
lea
push
inc
daa
inc
shlb
add
test
add
pop
shl
lea
lock
cmpsb
sub
lods
sarb
stc
add
lea
movsb
xchg
test
arpl
xchg
adc
stc
push
add
ljmp
adc
shl
jno
addr16
int
lods
rolb
and
in
and
into
imul
jne
clc
imul
add
push
and
pop
inc
ror
mov
jns
fs
jle
sub
int3
cwtl
xor
aad
jg
pop
adc
stos
push
fbstp
sbb
pop
inc
dec
cld
xchg
iret
jl
mov
outsb
xor
ljmp
lret
les
jecxz
push
addr16
pop
lods
mov
inc
jle
popa
mov
mov
mov
mov
push
xor
push
xor
adcb
fsubr
sbb
icebp
pop
push
fldt
test
insb
xor
int
mov
outsb
sbb
adcl
lret
addl
popf
dec
inc
lcall
aad
lea
mov
or
sub
sbb
and
jp
adc
pushf
out
sahf
aas
pop
xor
int3
jecxz
aam
fcmovnu
add
add
sbb
xlat
int3
push
cmp
mov
fs
inc
cld
fadds
test
jmp
pop
mov
add
mov
loop
push
les
add
loope
pop
add
cltd
push
sbb
sbb
popf
int
call
mov
or
cmpsb
cmp
push
enter
sub
xor
dec
push
test
mov
ret
xchg
and
imul
sub
test
cmpsl
mov
pop
mov
jle
xchg
mov
pop
test
es
pushf
repz
and
idivb
nop
jg
or
mov
outsb
sbb
cltd
inc
inc
push
mov
add
outsl
loope
dec
cmpb
jb
aaa
sbb
push
dec
mov
xchg
nop
out
scas
and
sbbl
arpl
add
popf
ret
mov
fistpll
pop
shlb
aaa
es
cwtl
scas
xchg
mov
fiadds
or
ret
lods
mov
loope
dec
or
mov
lods
les
mov
ljmp
sbb
negl
cmpsb
int
icebp
adcb
mov
inc
and
mov
test
pop
or
dec
fidivrs
scas
mov
pop
dec
adc
xchg
sbb
sbb
cltd
fistps
cwtl
adc
add
and
dec
scas
push
jl
icebp
testb
std
adc
rol
aaa
out
outsl
add
jbe
sbb
mov
jge
loop
jl
aaa
outsl
sti
jae
outsb
and
sarb
or
outsl
jmp
xor
hlt
imul
inc
stos
fisttpl
jecxz
adc
sbb
sti
xchg
jecxz
adc
dec
add
jns
dec
cmpsl
mov
push
test
sbb
mov
movsb
pop
xchg
push
shrb
add
dec
jg
mov
leave
ljmp
ret
aad
fstpt
adc
jbe
pop
jmp
sbb
sbb
sbb
jbe
pop
das
pop
addr16
mov
insb
mov
rorl
dec
adc
mov
xchg
mov
in
fildl
cmp
enter
and
out
jnp
aas
pop
insb
dec
dec
mov
mov
out
ret
repz
add
adc
cmp
sub
insl
out
and
pop
insb
iret
pop
jbe
or
loope
xchg
inc
int
or
jnp
addb
xchg
out
mov
pop
pusha
imul
jbe
dec
pop
mov
jnp
fsubr
icebp
fldenv
inc
jo
pusha
pop
fcomip
adc
mov
cmpsb
insl
in
and
inc
dec
into
xchg
xlat
push
movsl
pop
pop
test
iret
inc
lret
pop
add
je
dec
xor
movsb
xchg
cltd
into
iret
call
jge
inc
pop
imul
bound
jl
push
aam
xor
or
pop
mov
ret
pushf
xor
dec
out
sub
shll
in
lcall
push
jae
std
jp
xchg
mov
test
outsb
sub
lahf
ja
xlat
jne
in
mov
data16
aaa
cs
add
lahf
cmc
rolb
addr16
adc
jg,pn
mov
movsl
mov
pop
xchg
aad
inc
push
movsb
popf
and
mov
mov
mov
in
test
dec
test
cs
xchg
xchg
inc
mov
icebp
xor
pop
in
adc
mov
adcb
lret
mov
mov
push
movsl
sti
inc
pop
mov
sbb
jl
popf
xchg
dec
sub
pop
js
insb
xchg
push
dec
in
std
lret
adc
cmpb
shlb
lods
mov
aaa
insb
ja
push
or
in
mov
and
cmpsl
mov
push
sub
lret
push
mov
jge
dec
add
imull
ljmp
stos
lret
mov
sub
fbld
push
dec
sub
or
shll
daa
jmp
sbb
inc
leave
jl
outsb
in
mov
shrb
lea
mov
aas
cmpsb
lahf
dec
adc
xor
out
jp
mov
jmp
push
mov
je
sahf
mov
sub
jmp
jecxz
cmpb
sbb
sub
lret
add
insb
ss
pop
lds
add
lods
pop
dec
dec
mov
fldt
xchg
or
lock
arpl
aas
add
jno
inc
adc
out
mov
dec
pop
xchg
movsb
fsubr
cmc
mov
pop
in
xchg
popa
mov
hlt
fsubrs
ret
cmp
and
inc
mov
pop
nop
mov
mov
and
adc
push
sub
xchg
xor
sahf
das
lods
in
or
push
sub
or
sbb
cld
in
stc
adc
xchg
jp
inc
ljmp
scas
inc
pop
ljmp
push
ja
cmp
das
push
pop
lret
hlt
jecxz
lahf
push
mov
mov
outsl
mov
das
and
pop
gs
test
hlt
jb
jmp
insb
mov
mov
push
pop
sti
fwait
insl
loope
aaa
mov
dec
push
pushf
push
int
arpl
pop
out
jp
hlt
add
mov
and
scas
cld
and
mov
adc
jo
add
mov
mov
sbb
jg
xchg
lds
ret
test
and
pop
cli
sbb
cltd
fists
testl
scas
and
ret
inc
jg
and
push
jae
mov
xor
ret
xchg
jmp
sub
sbb
mov
lret
jge
pop
stc
push
push
outsl
and
stos
sahf
xchg
or
sbb
movsb
add
or
jae
add
enter
loope
int3
mov
cltd
call
out
sub
cmp
js
lahf
add
adc
addl
mov
inc
test
adc
adc
sbb
movsb
push
adc
fst
iret
pop
into
orb
out
mov
rorb
fsubrl
data16
loopnew
pop
insl
xor
sub
push
daa
jmp
xor
int3
jle
fsubl
lahf
shr
or
call
xchg
xor
push
cmp
mov
xor
mov
xor
add
mov
xchg
scas
add
das
or
js
loop,pn
imul
outsl
pop
push
mov
leavew
push
lds
xlat
int
add
imul
das
repz
jns
out
adc
sti
sbb
sub
jb
icebp
xlat
xchg
imul
das
push
loop
call
sub
les
pop
mov
subb
and
loop
jmp
xor
fadd
pop
mov
adc
into
inc
popf
sub
mov
loopne
iret
xchg
sbb
insb
mov
sub
insl
xchg
scas
mov
fistpll
pop
pop
mov
pop
sub
hlt
fld
les
shl
ja
mov
mov
xor
mov
mov
mov
std
aaa
into
imul
xchg
ret
push
repz
nop
inc
cmp
pusha
mov
jge
jno
mov
cmc
les
adc
arpl
push
sub
jae
in
mov
lea
xor
ror
pop
xchg
ljmp
movsl
stos
les
cmc
pop
fidivs
dec
aas
insl
inc
test
jg
hlt
push
and
xor
xor
pushf
cmp
sahf
cld
ret
sub
push
lods
dec
out
out
dec
out
pop
stos
and
add
xor
insb
xor
stc
pusha
inc
dec
push
incl
in
pushl
insb
aaa
pop
pushf
mov
fcoml
dec
xor
int3
pop
or
arpl
dec
imul
mov
outsb
in
fnstcw
jge
mov
add
dec
loop
mov
sbb
pop
xchg
and
notl
push
int
mov
or
icebp
mov
sbb
enter
jl
call
fcomps
test
std
lret
fmul
daa
inc
dec
addl
test
add
mov
int3
stos
push
dec
es
lret
stc
or
and
cld
es
jbe
jecxz
pop
icebp
inc
das
fidivrs
loop
js
jno
sti
arpl
loopne
push
dec
adc
fcompl
and
adc
mov
pop
dec
mov
add
pusha
testb
xor
add
dec
adc
jl
sbb
cli
shll
add
pop
inc
xchg
dec
sbb
mov
out
lret
pop
arpl
xchg
in
inc
inc
mov
stos
jg
dec
xor
loopne
stos
inc
push
lock
pop
xchg
mov
test
pop
loope
imul
dec
push
ljmp
shlb
sbbl
std
xchg
mov
inc
pop
sbb
pop
xchg
pusha
add
pop
mov
pop
fadds
push
inc
pusha
ss
cwtl
sub
jne
leave
lods
popa
popa
jo
mov
or
nop
mov
ljmp
push
imul
cmc
jmp
fiaddl
inc
testl
cmpsl
pop
icebp
movsl
fmuls
mov
nop
ljmp
lea
and
pop
xchg
fmuls
popf
scas
inc
mov
cmp
stos
daa
or
jno
add
or
mov
hlt
lods
add
mov
js
movsb
pop
pop
or
xchg
ret
std
in
xor
outsl
subb
lcall
popa
xchg
repz
addr16
mov
mov
inc
stos
push
movl
mov
stc
pop
push
mov
ja
dec
fdiv
sbb
cmp
xchg
mov
xor
lods
jecxz
insl
das
repnz
ja
mov
mov
rorl
sub
or
xor
mov
pop
subb
daa
popf
inc
add
fmull
faddl
xor
jecxz
sahf
cmp
enter
cmp
test
push
fmull
mov
cld
lcall
loop
xchg
jl
loope
xor
in
lods
xchg
and
test
fisubrs
add
adc
xchg
aas
mov
mov
mov
jp
dec
push
rorl
ret
arpl
repz
pusha
mov
stos
jb
or
xlat
jae
fdivs
data16
fs
push
leave
std
sub
ret
sub
lods
and
in
cmp
add
push
push
add
adc
btr
cmp
jge
cli
cmp
dec
lahf
jae
push
outsb
inc
shrl
insb
jge
dec
in
xchg
scas
cld
jg
jmp
loop
orl
repz
or
clc
sub
cli
lcall
rcll
rorb
cld
mov
xchg
mov
cmpsb
imul
cmp
aad
mov
in
icebp
int3
jge
push
ret
cmp
daa
gs
jge
push
sbb
xchg
mov
lds
push
fbld
mov
imul
les
sarb
dec
adc
or
decl
in
outsb
jp
inc
and
jge
test
outsb
push
and
hlt
leave
fcmovb
test
jmp
sbb
push
lods
in
lahf
mov
lods
aam
pusha
repz
fs
cmp
in
lock
flds
clc
push
inc
sbb
and
sbb
push
popl
mov
mov
fs
cmc
add
ds
repnz
call
jl
pop
mov
xor
daa
adc
push
mov
mov
push
rol
fdivrl
addr16
push
test
jno
pop
fcmovnb
scas
lea
fildll
dec
aad
repnz
push
pop
cmp
fidivl
xlat
addl
push
cmp
icebp
mov
fnstenv
cs
js
stos
in
mov
sub
inc
inc
add
loope
adc
fcoms
in
pop
in
cmp
fildl
std
pop
xor
sub
sub
pop
fyl2xp1
inc
jmp
lods
lods
call
jo
ret
rorl
shlb
jne
cmpsb
lcall
pop
push
dec
pusha
fisubrl
aas
scas
js
jno
in
lods
dec
dec
dec
jp
rcrl
and
out
xorl
or
cmp
sarb
gs
jne
cs
pop
stos
sahf
stos
adc
cld
mov
xor
incb
jno
icebp
in
cmp
inc
shrb
dec
enter
rcrb
filds
dec
fildl
dec
add
push
push
inc
sub
dec
outsb
inc
inc
sbb
xchg
mov
dec
lcall
or
insb
jl
dec
push
cmp
sub
sbb
or
cld
in
neg
out
xchg
mov
cmpsb
mov
inc
insb
jbe
dec
push
cmp
sub
sbb
or
cld
in
neg
out
xchg
mov
cmpsb
mov
inc
insb
jbe
dec
push
cmp
sub
sbb
or
cld
in
neg
out
xchg
mov
movsb
mov
inc
insb
ja
dec
adc
push
sub
sbb
or
cld
cmp
fsub
mov
dec
arpl
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
adc
cli
and
jmp
incb
stos
xchg
pop
test
jp
push
sbb
or
cmp
sub
cli
and
push
jne
ficoms
jp
push
jne
or
jp
sub
push
and
mov
push
gs
test
sbb
dec
mov
pop
fiaddl
mov
cmpsb
sahf
jb
pop
pop
lock
imulb
pop
out
xchg
movsl
je
push
mov
push
jg
shll
xchg
call
cmp
and
sbb
leave
hlt
cmp
cmpsl
in
fisttpl
les
leave
push
mov
sbb
and
test
or
sbb
inc
ljmp
mov
push
xchg
movsl
xchg
sbb
dec
adcl
shl
jns
iret
jno
pop
test
dec
iret
je
fs
test
jns
movsl
mov
or
sbb
shrb
cli
out
push
lds
and
loopne
jmp
cmp
cmp
lcall
xchg
faddl
and
ss
cmp
inc
push
mov
mov
or
adc
and
aam
orl
mov
lods
jle
jnp
dec
push
lahf
ja
gs
inc
iret
adc
sub
lock
xchg
pop
loopne
mov
xchg
inc
xchg
inc
jl
popa
lea
mov
inc
mov
gs
xchg
pop
test
jp
push
sbb
or
cmp
sub
cli
and
mov
gs
xchg
pop
test
jp
push
sbb
or
cmp
sub
pop
add
popl
jmp
loope
lcall
pop
js
sbb
jl
in
jnp
stos
test
inc
shr
mov
dec
inc
xlat
sub
call
lret
xor
in
adc
cmpsb
rcrl
or
sbb
sbb
scas
xor
sarb
pop
sub
fsts
mov
cmp
jmp
stc
jns
inc
sbb
fbld
ja
loop
push
xchg
lret
enter
sub
cmc
fnsave
cmpsb
fists
and
xchg
test
cmpsb
fldenv
insl
push
jae
repnz
cmp
notl
es
dec
pop
fnstcw
sub
les
mov
fs
jg
lods
fs
or
inc
jecxz
xchg
sti
lcall
stos
push
or
mov
dec
or
stos
or
pop
movsl
mov
rcrl
sbb
aaa
adc
jns
das
int
xchg
sbbb
inc
out
addr16
xor
adc
cwtl
testb
outsl
nop
mov
pop
orb
out
sahf
lea
cmp
int
inc
cwtl
or
adc
dec
push
nop
inc
repz
or
jmp
ja
cmp
add
cld
imul
shl
movsl
sbb
int3
scas
and
clc
add
lcall
rcrl
inc
inc
xor
pop
sar
add
aad
aam
es
lret
cmpsl
and
mov
outsl
inc
icebp
or
xchg
test
mov
xchg
test
cli
mov
out
mov
out
mov
aam
mov
pop
jb
scas
sub
data16
add
aam
and
test
xlat
in
cmp
out
cld
int
and
sub
jb
into
inc
cmpsb
gs
jmp
enter
cmpsb
in
mov
in
sti
push
decb
push
inc
subb
cld
lods
xchg
test
mov
xlat
js
dec
mov
mov
scas
out
mov
mov
shll
sub
mov
outsb
mov
and
pushf
ret
xchg
dec
adc
test
jecxz
fwait
sarw
out
jmp
orl
jbe
std
js
sti
cmp
test
pop
leave
push
push
es
sub
mov
and
lret
addb
cmp
inc
xchg
push
lea
mov
mov
sbb
inc
xchg
adc
inc
mov
fstpl
bound
or
dec
xor
push
mov
mov
repnz
ret
outsl
aas
test
test
add
lcall
decb
imulb
mov
push
rcrb
pushf
pop
stos
ja
mov
xor
fwait
sbb
adc
mov
rdtsc
sar
pop
jo
mov
push
mov
es
fsubrs
pop
stos
adc
pop
pop
test
dec
pop
cmpl
outsl
jl
xor
sub
gs
jb
add
cltd
push
mov
lahf
push
mov
fcmovnbe
orb
insb
add
lret
adc
iret
push
test
loopne
clc
add
dec
test
cmpsb
jl
lock
and
xchg
pop
lahf
add
dec
ret
jmp
int
orb
mov
mov
fadds
jo
xlat
pop
gs
sbb
mov
inc
mov
aas
popf
outsl
sbb
mov
pop
mov
pop
ljmp
push
stos
insb
cmpsl
stos
fwait
stc
mov
mov
test
btc
jl
add
pop
int
int3
jmp
inc
mov
lods
scas
repnz
jl
popf
into
test
call
cmpsb
inc
xor
jg
icebp
sub
push
push
aaa
in
pop
enter
push
repnz
mov
dec
enter
pop
into
sub
notl
mov
je
leave
ja
out
push
sub
inc
push
jb
rcr
in
pop
xlat
jno
jns
push
das
pop
std
push
pushw
adc
rorl
mov
mov
clc
lds
fisttpll
into
test
mov
cmp
lret
popa
test
roll
cwtl
ja
mov
or
dec
mov
ds
push
xchg
mov
jb
push
push
loop
and
pop
repnz
push
cltd
push
sbb
test
sub
pop
int3
and
dec
jbe
cmpsb
sub
push
push
push
loop
jo
add
cmp
mov
ret
stc
and
sub
test
ss
jg
add
out
test
scas
cmp
mov
loopne
cmp
jle
dec
push
xchg
stc
loope
hlt
outsb
int
jb
cmpxchg
aad
lret
inc
add
dec
mov
stc
sub
test
int
int3
xchg
mov
xor
aad
cmp
icebp
lods
adc
negb
pop
sbb
xor
add
in
enter
das
in
mov
mulb
xchg
mov
add
adc
mov
nop
sbb
pop
sbb
mov
iret
insb
ss
rorb
push
inc
adcl
je
lret
cmp
mov
test
add
dec
outsl
xor
jle
in
sub
rcrl
or
mov
out
dec
xchg
push
out
jmp
in
jp
or
cltd
popa
aam
jg
outsl
xchg
add
lahf
sbb
cld
insl
dec
mov
pusha
jns
popa
ret
jg
xor
or
outsb
fiadds
scas
lods
inc
xchg
movsl
mov
mov
in
imul
lea
jbe
scas
pop
lea
cmp
dec
push
lds
xchg
bound
inc
or
xchg
jecxz
pop
in
popf
add
test
sbb
aam
jo
shl
jb
fcompl
movsl
cwtl
xchg
jle
jg
push
ret
lcall
lahf
xor
dec
outsb
repnz
in
or
dec
push
pop
mov
mov
push
inc
xor
lahf
mov
sub
lods
jge
in
add
pop
push
enter
iret
pusha
cmc
pop
lret
xchg
push
cltd
xor
cmpsl
pop
jae
inc
lock
jbe
loope
iret
int3
fstpt
dec
mov
clc
sub
pusha
fwait
jae
pop
jp
mov
decl
jmp
popa
mov
adc
les
mov
xchg
adc
das
repnz
xor
push
or
sbb
shlb
push
imul
or
and
pop
je
inc
jnp
inc
mov
dec
shl
shr
and
sti
pop
fwait
or
idivb
xor
dec
or
cmp
aam
jl
lret
out
in
test
repz
push
cmp
pop
or
sub
sbb
xchg
dec
imul
push
call
push
cmp
jmp
jmp
cmpsb
or
push
fwait
hlt
cmp
mov
call
leave
je
jno
leave
ja
out
xchg
cmp
ljmp
mov
andb
xor
jne
test
outsb
and
daa
mov
mov
mov
loop
sbb
sbb
mov
adc
or
clc
mov
fsubrs
adc
lret
jne
mov
and
mov
std
mov
jge
into
push
ret
xchg
mov
xlat
test
or
ss
mov
std
movsb
pop
xchg
add
in
sbb
mov
pop
push
jge
inc
loop
xchg
xchg
pop
pushf
cmp
lods
aam
pop
test
mov
scas
in
negl
js
pop
shrl
dec
cli
rolb
ds
inc
sub
fcmovnb
mov
lret
dec
ja
adc
rcll
sarb
imul
xchg
jne
push
fstpl
sbb
shl
cmc
xchg
push
hlt
les
dec
mov
inc
push
popa
push
out
inc
or
pop
sbb
inc
fisttps
popa
mov
inc
mov
and
push
imul
or
imul
pop
lock
ja
stc
icebp
adc
pop
pop
sti
xchg
xchg
push
push
push
icebp
xchg
repz
arpl
mov
ret
cmp
addl
mov
test
xchg
test
sbb
inc
icebp
xor
ja
jle
bound
add
js,pt
clc
inc
bnd
fistpl
dec
jbe
adc
xor
xchg
mov
leave
jmp
cmp
out
cli
mov
sbb
inc
pop
sbbl
inc
add
rcr
sub
movsl
xlat
into
xor
and
jno
and
and
sbb
ds
add
ja
std
mov
add
xchg
sub
aaa
ucomiss
jge
das
inc
insl
jae
pop
inc
xchg
sub
mov
push
add
out
push
pop
lods
jbe
add
sbb
call
mov
sbb
outsb
push
out
pop
daa
mov
sti
xor
hlt
jecxz
jno
xchg
pop
cwtl
inc
mov
insb
dec
stos
or
lds
cwtl
xchg
xchg
cmp
mov
cli
cwtl
fs
push
jle
icebp
mov
push
mov
out
inc
neg
adc
js
cmpsl
add
lahf
push
sbb
nop
mov
pusha
xchg
jb
dec
leave
insb
cmp
jbe
or
push
adc
lods
stos
dec
cmpsl
nop
in
adc
xchg
test
test
and
add
mov
xchg
notb
sub
mov
repz
fadd
mov
push
ja
test
ret
push
or
inc
cmpsb
rol
ss
lods
sub
xor
out
popa
sbb
orl
dec
adc
push
frstor
ja
or
cld
adc
and
loope
aad
arpl
push
inc
popa
out
lret
mov
stos
scas
iret
subb
stos
dec
lea
jne
xchg
aaa
mov
repz
jl
push
xor
dec
pop
adc
xor
jl
arpl
test
call
scas
mov
mov
mov
mov
aad
subb
out
sbb
or
dec
xor
xor
imul
push
into
sub
mov
fnstcw
loop
and
sbb
lret
and
ud2
movb
mov
jle
imul
or
fists
fs
fsubrl
das
jge
xchg
aad
jge
mov
loope
pop
cli
xchg
mov
adc
mov
icebp
adc
jne
xor
insl
push
inc
fisubl
dec
and
push
clc
adc
push
adc
and
sbb
mov
pop
lds
xlat
push
mov
iret
xchg
xchg
dec
cmpsl
and
or
mov
sub
push
flds
cmp
clc
cmp
movsb
push
and
xor
je
mov
xorl
out
cmp
sbb
js
push
popf
sarb
mov
roll
adc
push
mov
pop
daa
fs
bound
push
pop
cmp
and
sub
popf
xor
sub
nop
outsl
inc
lock
jle
in
fwait
push
lods
stos
or
in
imul
lahf
or
cmp
mov
pushf
cmp
ret
inc
or
out
pop
aam
xchg
insb
xchg
test
mov
insb
pop
dec
in
lea
inc
jmp
loope
pop
push
movsb
cmc
mov
pop
std
movsl
mov
outsl
arpl
cmpsl
popa
mov
stos
rorb
or
jge
cmpsl
pop
movsb
cli
adc
and
inc
push
jbe
xor
enter
inc
jno
mov
fwait
aas
lds
jb
cmp
inc
xor
hlt
xchg
jae
adc
cmpsb
add
cltd
fbld
arpl
cmp
out
push
loop
in
pusha
sbb
call
push
xor
inc
pop
mov
fcomp
lret
jno
pop
fs
adc
sub
mov
out
jne
imul
sub
cmpsl
test
icebp
rcrl
sbb
adc
sbb
scas
test
aas
dec
xor
sbbb
push
mov
test
lds
jg
mov
leave
outsl
das
adc
dec
pop
push
lret
out
jecxz
mov
pop
dec
add
xor
cmpsl
insl
xchg
outsl
pop
orl
sbb
fs
dec
jns
push
xchg
outsb
xchg
xchg
push
iret
mov
mov
add
dec
in
lret
jne
adc
dec
ud2
mov
xchg
hlt
loop
mov
inc
xchg
clc
sub
negl
loope
negl
xchg
aaa
nop
fs
lods
les
fildl
mov
lds
daa
addr16
sbb
pop
mov
cli
xchg
pusha
outsl
addl
push
adc
mov
pop
mov
outsb
add
cli
das
xor
hlt
orb
cltd
cmp
out
enter
pop
push
fs
and
add
sub
mov
ret
outsl
stos
jns
jg
ljmp
push
pop
sub
pop
sub
leave
lods
xor
nop
xchg
jle
push
popf
sub
pop
inc
sti
mov
rcrl
sub
push
test
aad
in
scas
ret
push
xchg
dec
xor
les
sub
out
cmp
ficomps
jp
test
je
pop
push
lods
sbb
leave
incl
mov
movsl
pusha
push
push
repz
push
shlb
sub
push
and
adc
popf
stc
pop
es
popf
mov
sub
pop
fucomp
aas
cs
jnp
fsubs
shl
lea
mov
pusha
je
push
mov
xchg
leave
es
mov
and
repnz
pop
xchg
popf
addb
addr16
push
sbb
ror
lahf
fwait
jmp
cmp
test
in
in
loope
stc
fnstcw
stos
das
int
push
jne
pop
aam
pop
or
xor
ret
stc
push
call
loop
fdivrs
pop
clc
fisubrs
mov
out
dec
and
mov
insl
popa
idivl
jp
inc
sbb
xchg
flds
or
outsb
mov
in
adc
aas
stos
xor
imul
out
ret
sub
jae
in
adc
jp
jnp
xchg
sub
adc
adc
das
out
dec
xor
setb
mov
pusha
or
andb
pop
filds
fcoml
inc
sbb
mov
movsb
and
aad
leave
jle
or
insb
mov
mov
push
dec
jns
hlt
imul
push
cwtl
popa
xchg
jle
and
pop
andl
pop
dec
or
xor
icebp
sub
adc
jl
push
inc
rorb
popa
jo
sub
lods
daa
jle
test
stos
push
mov
stos
pop
mov
out
scas
push
je
inc
or
jne
fst
jbe
imul
int3
popf
ss
movsl
pop
pop
iret
cmp
enter
and
outsl
pop
dec
imul
jns
int
push
sbb
fildll
push
dec
stc
push
aam
or
and
and
or
pop
pop
mov
mov
mov
mov
imul
sbb
mov
pop
mov
rep
cmp
or
jae
adc
adc
rcll
sarl
cmpsb
sub
pop
pop
mov
or
xchg
inc
pop
sti
fldt
aas
push
sub
push
dec
std
xor
insb
mov
insl
sub
fwait
sub
or
mov
cltd
mov
sub
test
xchg
dec
xlat
mov
shrb
icebp
dec
out
data16
sbb
mov
jne
fwait
xor
xor
mov
mov
fisubrs
je
ss
cmp
xchg
push
popf
aad
dec
mov
xchg
shrl
jno
js
xor
or
xchg
es
sub
pop
pop
int
stos
pop
add
xchg
or
aaa
es
int
repz
loope
push
aaa
sarb
inc
les
cmp
lock
mov
sbb
or
or
jmp
or
faddl
and
loop
div
test
lret
pop
lods
pop
repnz
mov
mov
pop
fisttpl
test
mov
add
or
inc
jae
dec
shrb
pop
mov
xlat
cmp
enter
adc
mov
cmp
dec
adc
ret
inc
sbb
loop
and
cmpsl
es
cmp
jo
inc
sub
jle
cmp
aas
mov
test
pop
in
pop
xchg
fiaddl
push
pop
mulb
in
lret
pop
mov
mov
push
in
jns
or
xchg
paddw
mov
lock
push
out
push
and
pushf
mov
frstor
xchg
fmul
int3
jg
mov
cmp
inc
cmp
cmp
adc
cs
sahf
es
inc
or
push
repnz
sub
dec
dec
mov
addr16
fwait
loopne
jmp
mov
out
xchg
pop
jns
or
and
xlat
xchg
in
push
sub
xor
lods
pop
and
aas
and
jg
cmp
sub
jle
push
cmp
or
movsl
imul
mov
mov
push
jle
adcb
pushf
test
mov
data16
fistpll
rorl
cmp
fstpt
data16
addr16
inc
nop
jne
jb
movsl
loope
mov
pop
push
cmp
sbb
and
fisttpll
mov
jae
push
jnp
mov
adc
lea
xchg
or
fists
popa
jge
js
mov
lcall
pusha
push
cmp
inc
push
daa
sub
xchg
addr16
xchg
ljmp
mov
movsl
mov
dec
cmc
add
stos
sti
pop
lock
test
adc
xor
or
into
sub
int
in
je
jl
xlat
adc
in
aam
les
mov
loop
imul
xchg
outsb
out
sbb
or
mov
cmp
jg
aaa
les
inc
inc
pop
jo
mov
jecxz
mov
fiaddl
dec
pop
cs
ret
or
xor
dec
or
mov
scas
dec
fstl
xchg
in
rcrb
pusha
adc
inc
mov
dec
pop
xor
mov
pushf
push
mov
push
push
les
push
xchg
int3
clc
push
imul
gs
rcrl
xor
vminps
mov
push
int3
cwtl
add
cmp
movsl
sbb
xchg
or
push
and
outsl
inc
sbb
xchg
jle
mov
ret
jne
mov
cmp
push
cmp
fdivr
popa
push
sarl
push
xchg
jnp
jecxz
xchg
lea
lret
add
lret
mov
cmp
out
jp
mov
jecxz
aaa
es
pop
mov
mov
add
mov
sbb
stos
xor
mov
mov
lods
clc
loop
xor
shll
aam
and
fimull
lock
adc
mov
pop
dec
mov
xor
xchg
dec
push
add
dec
lcall
repz
pop
insl
push
or
cmpsl
bound
or
sbb
sbbb
sub
data16
bound
inc
ljmp
mov
and
or
out
push
outsb
popf
mov
movsb
stc
fisttps
popa
jne
and
jle
adc
or
xor
mov
fdiv
mov
fdiv
sbb
xchg
aas
pop
bound
jle
lcall
cmp
push
and
nop
aas
lcall
push
xchg
jmp
loopne
cmc
mov
inc
push
and
out
lret
insb
xor
mulps
sbb
dec
mov
subl
sub
adc
roll
fdivs
add
ror
pop
ret
and
insl
lods
push
imul
cmp
ds
sub
inc
xor
enter
and
insl
mov
sbb
leave
mov
sub
roll
das
dec
repz
adc
jge
xchg
popa
sub
mov
push
sub
and
add
mov
push
int
gs
jmp
loope
int3
sub
mov
sub
shll
add
adc
jo
dec
jp
mov
mov
push
fnstsw
mov
pusha
imul
xchg
mov
lds
sbb
xor
sub
loop
enter
inc
scas
inc
push
and
xor
fdivrp
xchg
cltd
lock
lahf
shufps
js
loopne
add
or
xchg
jp
iret
adc
icebp
mov
ret
lods
rorb
test
cmpsb
daa
and
xor
pop
loop
push
jns
mov
cmp
fstpl
cmp
dec
push
add
ficomps
jo
cmpsl
stc
jno
daa
mov
fwait
xchg
xor
loopne
and
dec
inc
jge
xor
cld
lcall
lcall
xchg
adc
xor
aam
add
jnp
push
jge
inc
lret
jo
pop
mov
in
jno
incl
repz
leave
push
jae
push
mov
and
push
pop
mov
and
push
dec
out
sub
sbb
xchg
jmp
insb
sbb
lock
pushf
add
inc
into
sbb
pop
xlat
mov
aam
sub
adc
call
dec
sub
sub
jns
adc
inc
insl
int3
loopne
loopne
adc
pushf
scas
sbb
mov
or
push
insl
test
cmc
sbb
pop
sub
orl
aam
call
mov
mov
daa
xchg
mov
inc
mov
gs
xchg
pop
test
jp
push
sbb
or
cmp
sub
cli
and
mov
gs
xchg
pop
test
jp
push
sbb
or
cmp
sub
andb
jne
gs
xchg
addb
aad
lds
cmc
sbb
sub
cli
and
mov
gs
xchg
movsl
test
pop
jp
sbb
or
sbb
lcall
sub
jge
and
xor
insb
mov
scas
lret
int3
cli
in
cli
in
or
or
cmp
sub
pop
pop
dec
push
jp
mov
mov
sbb
cld
cli
in
or
cmp
push
jp
mov
mov
leave
fildll
stos
xchg
in
jp
sbb
dec
push
shll
lods
or
cltd
pop
movsl
mov
dec
lock
inc
xchg
dec
pop
mov
rorb
push
mov
testb
lcall
lods
aaa
pop
and
mov
and
or
dec
loope
jo
cld
add
je
sbb
imul
sbb
cmp
sbb
jl
mov
int3
pop
jae
pop
push
push
sub
lock
and
in
jns
das
int3
mov
sub
insl
loop
out
mov
stc
mov
inc
outsl
cld
add
in
mov
xchg
lods
xchg
inc
mov
cwtl
fildll
fidivrl
push
sbb
sbb
sub
ss
pop
pop
dec
push
jp
mov
mov
fcmovu
ljmp
or
cmp
aas
and
cmc
sub
vpmaxub
mov
cld
mov
pop
dec
jb
das
das
jle,pt
sbb
add
in
in
ror
fucomip
subl
xor
dec
pop
sbb
xor
push
jp
mov
lods
lret
int3
ljmp
or
cmp
sub
pop
pop
dec
push
jp
mov
lods
lret
int3
ljmp
mov
popa
push
sub
rorb
sub
out
lret
cmpsb
in
rcrl
insl
roll
sbb
pop
cltd
sahf
jmp
jns
mov
sub
mov
adc
icebp
xchg
daa
mov
cld
gs
fisubrs
sbb
sahf
sub
xchg
bound
pop
nop
rcrl
and
jae
inc
rcrl
adc
xor
sbb
pop
imul
push
dec
adc
pop
jmp
add
stos
sub
jmp
add
test
in
mov
mov
mov
aad
daa
shlb
sti
jns
mov
inc
pop
cmp
and
jae
es
mov
pop
cmp
orb
pop
dec
out
or
bound
sbb
cmp
loopne
jmp
push
adc
leave
cwtl
mov
adc
jecxz
hlt
jg
push
push
mov
jp
sub
xor
iret
stos
mov
loope
in
push
mov
lds
adc
cmp
ljmp
outsl
adc
push
jle
cmpsl
jns
ficomps
xchg
jbe
in
jl
addr16
or
lock
cmp
in
mov
cmp
andb
add
int
mov
cmp
addr16
xlat
fdivs
mov
adc
sbb
jns
call
xchg
ret
out
mov
scas
repnz
in
or
sbb
scas
cmpsb
clc
cwtl
cmc
and
imul
sbb
ds
ljmp
push
cld
enter
and
mov
int
xor
jg
mov
or
shl
dec
idivl
add
jo
sub
scas
cmc
and
adc
les
xchg
js
inc
dec
dec
in
mov
cmpsl
mov
xor
and
fldt
rolb
or
mov
into
cltd
movsb
mov
aaa
xchg
nop
sar
mov
mov
daa
cltd
into
jg
loope
adc
or
or
shll
in
mov
cmp
int
movsb
push
sti
lods
and
leave
repz
bound
pop
cmp
and
insl
leave
mov
out
pop
cli
mov
mov
shl
mov
sbb
push
ret
add
xor
cwtl
mov
fbld
lods
and
ss
in
xchg
aas
sti
xor
movsb
and
loop
push
repz
ds
test
push
test
cmpsl
pushf
pop
divl
pop
cmp
test
cs
ljmp
negl
lcall
std
xorl
fnstsw
cld
shlb
mov
pop
jnp
insl
test
pop
orb
sbbb
movsb
mov
int
lods
xchg
adc
cli
pxor
push
es
ja
inc
dec
xchg
inc
cmp
loope
roll
mov
movsl
icebp
leave
lds
test
fnstenv
mov
cmp
cmp
inc
and
les
les
out
cmp
jo
jns
mov
add
inc
je
out
outsl
mov
ds
push
adc
fcomp
aad
std
loopne
mov
fcmovnu
rolb
scas
add
sbbl
pop
sub
xor
jge
stos
cwtl
ret
xor
adc
xchg
mov
xchg
or
cmc
repz
pop
inc
int
xchg
or
bound
outsb
mov
mov
test
pop
pop
test
ffree
in
lds
sbb
push
jg
push
loop
scas
enter
sbb
sarl
dec
add
pop
stos
sub
sub
xchg
scas
mov
cwtl
inc
mov
inc
mov
mov
cmp
movsb
cmpsl
test
js
cwtl
fs
mov
leave
cmpsb
repz
pushf
mov
and
mov
inc
jmp
int
adc
testl
sbb
daa
ret
js
push
cmpsb
inc
mov
or
cld
sti
daa
sbb
lock
lods
mov
and
push
and
push
hlt
sub
movsl
cld
repnz
in
imul
mov
mov
mov
rorl
imul
add
subb
int
or
xor
div
cmp
pop
lahf
call
inc
imul
jmp
mov
inc
ja
xchg
sub
test
leave
insb
in
adc
mov
sbb
xor
lds
fldl
jbe
mov
mov
xchg
pushf
mov
sub
push
xor
push
std
scas
xor
rcrl
lahf
adc
jge
insb
adc
lods
mov
xchg
push
ret
sbb
xchg
in
mov
xlat
pop
xchg
push
or
icebp
fists
sub
lcall
mov
inc
mov
dec
pop
aaa
subb
sub
mov
cmpsl
dec
cmp
add
adc
mov
imul
dec
adc
jp
lret
jnp
cmp
xchg
xchg
lret
loop
xchg
jp
xor
out
cld
mov
and
jne
xchg
les
popl
inc
lods
fnsave
fimull
pop
xchg
xchg
lds
into
imull
test
mov
mov
jle
shlb
js
fwait
push
mov
adc
lods
pop
sbb
mov
and
cmp
adc
xchg
xchg
vfrczpd
lret
add
inc
adc
or
push
and
mov
sbb
jo
movsl
bound
pushl
negb
push
movsb
sub
enter
jmp
addr16
xor
cmp
mov
fisttpll
push
mov
push
adcl
test
loope
sbbb
sbbl
enter
mov
loop
rcr
ret
xchg
inc
movsl
or
daa
or
mov
add
inc
aaa
sbb
out
sahf
jo
dec
test
int
in
int3
sub
push
insl
cmp
cmpsb
sub
andb
out
jmp
out
movsb
sub
push
test
das
int3
dec
mov
xchg
push
dec
repnz
movsl
aad
cmp
jae
mov
add
jl
loopne
add
add
out
or
lock
xor
pop
pop
jecxz
jns
mov
sbb
pop
dec
lods
js
xchg
push
cmpsl
repnz
test
in
fcmovne
loopne
xchg
and
mov
movsb
jle
inc
jmp
outsb
dec
mov
in
outsl
out
loopne
push
dec
clts
fldenv
rclb
call
outsl
mov
and
sub
jg
sbb
iret
in
js
push
gs
dec
xor
cli
aas
aas
int
hlt
mov
ret
in
repnz
cmpsb
rorl
add
fwait
or
addr16
lret
in
sbb
mov
cmpsl
fs
movsb
inc
cmp
leave
fnstenvs
mov
mov
sub
jmp
cmc
mov
dec
aas
stc
mov
jecxz
inc
sbb
dec
loopne
lret
adc
ret
and
inc
out
cltd
cmc
or
mov
daa
les
sbb
loop
lret
inc
jnp
or
adc
sub
repnz
in
scas
mov
aas
mov
movsl
nop
mov
jno
orl
addr16
xchg
jno
in
add
pop
add
pusha
sub
push
gs
fmulp
inc
mov
xchg
push
ds
inc
jmp
sbb
shlb
addr16
in
daa
popf
cwtl
test
cmpsb
mov
lods
fisubrs
xor
jno
pop
movsl
dec
out
and
aaa
jb
mov
sysret
xchg
mov
push
int3
push
ds
fisttpll
mov
dec
sahf
fidivs
push
rcr
jnp
xchg
pop
sub
and
sti
mov
mov
jb
pop
mov
ret
mov
xchg
out
inc
test
or
sub
xchg
leave
push
call
xor
lcall
int3
mov
imul
nop
andl
mov
cmc
ja
ficoml
adc
and
and
mov
jecxz
push
xchg
aam
inc
sahf
jae
in
dec
push
mov
push
jg
sbb
jle
add
push
mov
lret
or
adc
xchg
inc
dec
push
inc
and
jb
rorb
cs
repnz
mov
adc
mulb
adc
xchg
and
inc
icebp
fwait
sub
dec
sbb
std
and
jmp
mov
cld
lods
sahf
icebp
cltd
inc
mov
jno
mov
sub
push
jnp
pop
inc
ret
mov
mov
inc
mov
cli
xchg
jmp
mov
pop
inc
adc
sub
fdivs
ds
mov
sti
filds
mov
or
shll
cmp
lock
jecxz
out
sub
inc
mov
jbe
dec
lcall
loop
enter
lock
adc
add
xchg
rolb
stc
ds
loopne
adc
int
sbb
push
sub
mov
xor
data16
mov
xchg
insl
mov
int
into
mov
inc
mov
cmc
xor
pusha
aas
push
sub
mov
scas
mov
xor
shlb
jno
push
mov
enter
cs
lock
fists
inc
out
in
inc
add
gs
pop
out
adc
push
orl
lock
mov
add
jg
fucom
sbb
cltd
mov
out
out
sub
shll
lock
ss
cltd
adc
or
ret
push
out
js
shlb
into
sub
mov
sbb
mov
and
dec
repz
or
adc
insl
or
sub
xor
dec
jl
inc
mov
sti
mov
inc
jp
es
shr
cmp
out
push
jns
xchg
xor
xor
loope
les
dec
andb
repnz
pusha
sub
pop
popa
pop
repnz
inc
int3
jo
rorb
sub
push
mov
mov
int
test
xor
mov
outsl
push
bound
adc
jo
xor
jae
mov
inc
mov
add
xor
mov
sub
daa
add
xchg
cmpsb
mov
loopne
loope
sbb
jae
mov
or
addr16
nop
sub
jb
jnp
pop
xchg
cmc
push
or
or
cwtl
dec
arpl
js
and
add
lcall
add
jb
jecxz
dec
scas
jp
pushf
cmp
out
pop
test
loopne
popf
jb
cmp
lds
xchg
adc
push
shll
xor
sub
pusha
xchg
fbld
sub
fidivs
je
adc
shl
dec
jg
fisttpll
mov
jmp
in
or
das
shlb
mov
push
xchg
es
data16
stos
insb
sbb
outsl
push
js
leave
cld
xor
fidivrl
push
fmull
mov
leave
movsl
sbb
cmp
neg
aad
sub
shlb
xor
mov
xorb
sbb
sub
sti
into
sbb
push
and
jge
ljmp
daa
rcrl
lahf
jmp
bound
test
lods
cmp
and
mov
popf
insl
push
jo
jmp
push
jno
lds
je
pushl
nop
pop
sub
imul
sub
inc
add
sub
ficoms
cmp
inc
filds
lea
jmp
imul
push
js
lods
insl
daa
cmpl
mov
lock
fdivrs
jne
insb
sbb
cmpsl
cmp
xor
leave
lea
in
lahf
hlt
sahf
ja
mov
jmp
rol
and
cmp
shlb
adc
adc
add
daa
aas
lods
ret
rolb
push
jg
mov
call
xchg
arpl
push
mov
dec
inc
inc
clc
outsl
xchg
stos
add
xchg
push
aas
in
loopne
rorl
push
clc
stos
imul
mov
mov
cmp
iret
mov
dec
or
xchg
sbb
test
cmpsb
test
push
xchg
ja
nop
xchg
jle
clc
jne
mov
sbb
fistps
lods
cmp
pop
mov
out
loopne
pop
mov
lahf
out
sbb
cmp
add
insb
sbb
repnz
pop
out
xor
cmp
cltd
out
std
int
rcrb
mov
rolb
fstl
jnp
xchg
in
adcb
loopne
inc
sar
and
fimull
push
xchg
xorb
loope
in
sbb
push
movsl
test
jge
push
xor
pushf
cmp
lds
ljmp
push
int3
pop
xchg
mov
xor
pop
out
push
or
movsl
and
cmp
out
cltd
and
jecxz
loop
sub
jae
xchg
rcll
sahf
pop
push
outsb
pop
jle
fistpll
sbb
scas
xlat
add
cmpsl
cmpsl
lods
notb
xor
lods
stos
inc
pop
adc
pusha
jl
jmp
or
inc
insb
ror
gs
pop
xor
insl
inc
sbbb
add
ret
lods
push
data16
popf
adc
dec
bound
cmp
and
push
leave
jno
gs
mov
xor
repnz
lods
arpl
mov
jae
add
or
adc
loop
xchg
mov
push
mov
dec
and
inc
loop
out
int
push
test
int3
popa
mov
mov
push
jge
test
int3
test
in
fst
add
xor
push
mov
mov
dec
leave
sub
push
jns
fmuls
add
inc
mov
mov
adc
mov
in
cmp
ss
outsl
inc
setl
fwait
mov
inc
inc
mov
pop
jmp
inc
jo
fidivrs
adc
mov
xor
adc
fnsave
imul
dec
ret
inc
cmp
cmp
hlt
insl
xor
lock
fcomi
std
daa
fcmovu
iret
aaa
cwtl
xchg
ret
mov
pop
ret
adc
jecxz
dec
loope
cmp
jp
mov
aad
sbb
pop
ss
mov
pusha
adc
jbe
popa
mov
or
faddl
aad
xor
xchg
in
divps
xchg
dec
mov
or
push
mov
iret
out
cmp
stos
cmp
pop
sti
js
popa
pop
mov
sahf
fnstcw
mov
mov
adc
fs
or
lahf
add
xchg
mov
mov
or
inc
sub
push
ds
and
scas
add
insb
lret
popa
out
mov
push
push
scas
push
cs
scas
out
scas
nop
cmp
inc
adc
fwait
jns
mov
in
aad
fxch
mov
cmpl
xor
arpl
ffree
out
ss
stos
mov
and
popa
and
or
loopne
push
xchg
sbb
mov
shlb
popf
mov
data16
stos
ss
sar
imul
fmull
xchg
add
xor
ja
data16
or
inc
cs
fnstsw
ret
mov
pop
and
sub
pushf
sub
pushf
ds
in
and
loope
std
fnstcw
ret
stos
in
sbb
sar
inc
push
jb
hlt
and
jge
hlt
bound
sub
jnp
or
push
xor
sbb
dec
push
icebp
outsl
fldcw
nop
cmpsl
xor
jnp
xchg
aaa
mov
div
push
push
mov
sbb
ja
divl
mov
pop
inc
popa
mov
dec
repnz
stos
inc
lcall
jg
jno
popl
dec
sub
inc
push
mov
push
fs
push
test
push
fdivs
sbb
push
ja
enter
hlt
mov
xor
imul
push
out
jl
mov
js
jecxz
inc
sub
pop
sbb
mov
xchg
cmp
inc
out
test
popf
pop
test
and
lds
aas
pop
ret
lret
subl
jecxz
repz
in
lcall
dec
jns
xor
and
loop
sbb
pop
jae
inc
mov
pop
jno
cmp
and
leave
ret
xor
pusha
cmp
jl
scas
dec
xlat
fistpl
aam
jle
mov
add
iret
fistps
lret
pop
pop
sahf
and
pop
loope
jae
into
xlat
inc
ret
ret
ja
divl
mov
mov
push
pop
cli
cmp
jae
mov
lods
xor
into
fldt
add
or
cmc
ds
test
cmp
repnz
sbb
out
jle
adc
js
cs
sub
imul
push
fidivrs
aaa
fs
fiaddl
xchg
dec
adc
pushf
cmp
pop
inc
call
lods
push
and
push
ret
insb
push
jmp
mov
mov
add
shrb
mov
fsts
xor
jp
lds
ss
inc
mov
sti
in
pop
leave
int3
xchg
mov
dec
dec
adc
mov
enter
xor
add
out
dec
lret
cmp
jmp
sub
cmp
and
dec
mov
mov
jb
enter
sub
mov
or
in
cltd
addb
xchg
add
fsubs
add
fldt
shrb
mov
mov
jmp
sub
scas
aam
add
pop
cmpsl
dec
sub
ss
jmp
inc
add
loope
push
add
pop
mov
sub
movsl
push
out
movsl
xorb
out
or
push
mov
pop
mov
push
lods
xchg
mov
cwtl
inc
aam
or
push
and
dec
adc
mov
rorb
nop
mov
inc
pop
jmp
push
pusha
or
in
cwtl
fucomi
or
sbb
fidivl
sbb
iret
inc
test
and
cmc
push
aam
mov
jmp
jo
pop
pop
mov
push
sub
push
test
mov
xchg
mov
adc
pop
or
xor
jb
mov
das
xor
and
add
lea
push
sarl
mull
jb
in
sub
sub
loop
mov
add
pop
sbb
ret
insl
sarl
push
daa
call
rolb
adc
push
into
adc
test
insl
mov
mov
pop
pop
lcall
std
fmull
pop
std
xchg
xchg
pop
fsts
in
mov
lods
shlb
mov
mov
dec
add
mov
add
stc
aas
push
enter
mov
mov
xchg
jle
bound
pop
mov
sbb
pop
jle
ja
push
addl
loop
leave
aas
addr16
roll
es
iret
sub
mov
mul
ss
sub
stos
and
push
add
mov
in
mov
cld
stc
aas
xor
jae
sbb
xchg
xchg
in
es
cmp
out
in
jl
push
ret
pop
add
lods
fnstsw
jp
in
dec
dec
cmp
fstp
popa
mov
pop
mov
xchg
inc
xor
sahf
movsl
xchg
jns
cmp
and
push
or
jmp
pop
or
mov
int3
mov
movsl
test
mov
iret
test
stc
dec
dec
cmp
sbb
or
pop
mov
out
xchg
pop
or
pop
cmc
and
cs
jnp
pusha
pop
rcr
pop
sti
cs
jbe
insl
pop
leave
test
inc
test
mov
enter
cwtl
sub
pusha
outsb
mov
mov
shrb
enter
dec
loop
fs
fsubrs
mov
call
xor
sub
lcall
jb
push
adc
jb
xorb
push
dec
leave
push
fcmovnbe
leave
out
push
and
dec
cmp
adc
and
dec
jae,pt
cmc
pop
mov
dec
sbb
stc
mov
push
mulb
loopw
jecxz
xchg
mov
mov
jecxz
loope
aam
inc
lcall
ds
rcrl
dec
add
ret
mov
cmc
mov
mov
jp
jle
aam
lods
sar
dec
test
out
fdivs
jb
push
push
mov
aas
data16
sub
stos
movb
push
xchg
xchg
pop
idivb
ljmp
in
test
scas
sarb
outsb
mov
push
loopne
sarl
aaa
cmpsb
pop
movsl
sbb
dec
pop
mov
test
fdivrs
in
or
sbb
and
lock
shlb
iret
pop
loopne
cmp
add
in
push
sub
adc
fstps
xor
sti
cltd
inc
loop
adc
std
rcrb
mov
push
push
push
mov
pop
push
mov
mov
ret
dec
cmp
loopne
jne
je
pusha
add
push
or
int
cmpsl
icebp
pop
test
xor
fsubl
hlt
jge
xor
bound
xlat
hlt
pop
jp
jmp
sbb
lret
imulb
iret
rorl
push
aad
ret
push
jl
scas
mov
out
xlat
lds
push
pushf
push
xchg
aam
inc
mov
mov
dec
pop
pusha
or
sarl
sub
pop
pop
dec
push
jp
mov
lods
lret
int3
ljmp
or
cmp
sub
pop
pop
dec
push
jp
mov
lods
lret
int3
ljmp
or
cmp
sub
pop
pop
dec
push
jp
mov
lods
lret
int3
ljmp
or
cmp
sub
pop
pop
dec
push
jp
mov
fstpt
add
imul
jne
push
ja
or
inc
shl
loop
repnz
cmpb
mov
push
imul
adc
and
xor
shr
loop
repnz
sbb
test
inc
jns
imul
adc
and
xor
ret
lret
xchg
cmpsl
cmp
cmc
loope
ss
sbb
sbb
adc
wrmsr
sbb
dec
data16
dec
scas
jns
jns
xor
movsb
ficoms
pop
push
sbb
or
repnz
and
fdivrs
mov
mov
shl
ret
jl
call
addl
and
inc
inc
hlt
jne
mov
cmp
sub
xor
xor
or
dec
pop
in
cmp
out
popl
xor
fimuls
or
push
outsl
es
shr
adc
jle
stos
jg
out
inc
sub
mov
test
xchg
in
adc
stc
gs
mov
cmpl
dec
add
adc
and
xor
ret
jmp
cmpb
iret
daa
jns
adc
xor
addr16
pop
dec
jl
jge
mov
mov
jmp
in
xor
es
addr16
insb
addr16
ja
mov
mov
lahf
mov
idivl
lret
cld
fcomp
and
cmp
xor
adc
and
xor
ret
jmp
cmpb
mov
push
imul
adc
and
xor
ret
jmp
cmpb
mov
xor
ss
stos
jb
lods
in
jno
add
mov
inc
aaa
push
pop
shll
fimull
mov
push
jne
scas
pop
movsb
in
rcrb
sbb
mov
ja
repz
out
ret
int
daa
xchg
clc
xor
popf
xor
in
push
pop
and
test
fdivrl
pop
cmp
push
popa
cld
in
fwait
mov
sbb
gs
leave
jbe
mov
stc
mov
pop
jle
xchg
lahf
and
in
lea
ret
mov
pop
xchg
xchg
and
adc
int3
dec
out
push
stos
cmp
pop
lods
xor
or
mov
test
dec
fdivp
pop
pop
shlb
adc
and
push
jne
cmp
jns
mov
add
pop
lcall
jbe
dec
mov
pop
pop
push
xchg
mov
gs
int3
scas
es
cmp
enter
and
outsb
push
shrl
push
or
push
mov
stc
fiaddl
sub
jp
xor
add
int
movsl
xchg
jg
int3
sub
stos
leave
cmp
int3
sbb
ds
xor
lcall
cmp
mov
mov
mov
jo
pusha
xor
jmp
push
mov
lcall
inc
cs
mov
loope
adc
mov
std
sub
xor
xor
fstl
hlt
and
dec
leave
lock
insb
pop
and
inc
sbb
rorb
adc
and
cmp
sub
cwtl
fcomp
and
xchg
pop
inc
jnp
dec
push
sbb
cli
inc
mov
stos
es
or
jmp
pop
out
fidivs
and
js
mov
jmp
roll
push
jl
mov
insb
repz
in
sub
je
sbb
adc
ljmp
pop
lock
push
lret
xor
movl
pop
or
pop
cmp
fsubrs
test
jg
andb
and
std
test
pop
jg
jns
mov
pop
pushl
dec
ss
int3
inc
mov
je
or
push
add
insb
pop
insb
and
sti
fs
xchg
mov
imul
repz
lcall
out
imul
fsts
mov
arpl
js
sub
in
pop
jmp
popa
push
bnd
jne
fisttpll
dec
scas
or
adcb
push
jg
je
test
cs
adc
in
mov
test
lret
movsl
cld
cmc
push
sub
lcall
add
out
stc
xor
mov
push
xchg
gs
pop
call
xchg
mov
mov
mov
mov
xchg
dec
mov
pop
xchg
push
and
cmpsb
popa
addr16
test
xchg
mov
push
push
addb
fdivl
add
xor
add
movsb
mov
push
xchg
push
sub
jecxz
cli
insb
aas
mov
or
pop
sahf
sub
out
xchg
cmp
fstl
sub
xchg
lahf
es
adc
stc
out
or
cmpsl
mov
mov
in
cs
fbstp
pop
ret
icebp
stos
aas
out
call
xchg
adc
cmpsb
aam
loope
fs
mov
mov
jecxz
jns
andl
gs
ja
add
add
add
pushf
stos
or
push
xchg
out
mov
hlt
nop
mull
inc
xor
enter
jbe
fmull
mov
mov
data16
mov
adc
test
ljmp
inc
or
loope
dec
ret
add
xchg
dec
dec
mov
in
push
arpl
js
dec
scas
pop
or
movsb
push
sbbl
divl
sbb
inc
es
fnsave
test
daa
dec
sub
clc
imul
dec
je
pushl
mov
lds
mov
cmp
or
jg
rclb
enter
add
jge
addr16
ljmp
mov
ds
out
push
pop
aas
lret
mov
mov
into
fwait
arpl
outsl
xchg
lcall
dec
mov
test
fsubrl
cwtl
cmp
out
xchg
xor
aad
aam
mov
and
push
in
dec
movsb
add
lea
mov
imul
sub
or
out
sub
xchg
push
loopne
call
and
lret
or
jle
dec
rolb
pop
pop
sub
mov
cmpl
xchg
push
shll
outsl
loop
shlb
lds
insb
dec
fdivp
lret
ret
in
mov
in
add
insl
es
or
sub
test
leave
ret
mov
fnstsw
xchg
pop
loope
cmpsb
or
sbb
mov
mov
test
and
inc
pop
xlat
jg
sbb
repnz
sbb
jns
pusha
ret
pop
or
pop
jae
jmp
fs
sub
add
jecxz
jmp
xchg
pop
int
mov
int
fsubrs
pop
aas
pushf
gs
adc
inc
ds
pop
cli
dec
iret
mov
clc
mov
insb
push
sbb
outsl
int
ret
lods
clc
sbb
clc
ds
push
insb
cmc
sub
sbb
xor
inc
inc
scas
in
jmp
shlb
scas
mov
sub
xor
enter
adc
cmc
jns
rolb
sarb
popf
mov
das
add
minps
int3
cmpsl
push
xlat
popa
addr16
insl
dec
jmp
xor
dec
icebp
outsl
xchg
lret
enter
mov
push
cmp
repnz
mov
push
jl
stos
clc
push
sub
int
jp
inc
lods
mov
mov
cmp
fnstsw
sub
inc
jp
adc
adc
lods
mov
dec
js
dec
xchg
sub
lret
jno
jbe
cmp
int3
inc
mov
loope
out
imul
pusha
inc
cld
pop
into
mov
cmp
inc
mov
and
adc
repnz
mov
inc
lods
div
inc
jl
bound
test
cwtl
sub
cmp
inc
cmc
sti
in
sarl
andl
push
imul
in
mov
inc
sub
sub
jge
in
pop
push
scas
outsb
aam
stos
and
cmp
sub
inc
das
mulb
lods
push
push
lret
orl
inc
ror
stc
jbe
dec
cltd
mov
jno
in
lret
add
mov
mov
inc
outsl
jecxz
jge
aaa
lods
dec
jl
add
dec
stc
mov
pop
push
cmc
repnz
popa
jae
movsl
xor
call
rclb
out
sbb
inc
jo
jb
push
mov
mov
scas
jle
mov
leave
dec
int
mov
lcall
test
js
push
adc
adc
orl
xor
inc
xor
bound
or
fildll
xchg
fcmovnbe
mov
sub
mulb
and
aas
popf
sbb
cmp
sub
addb
daa
stos
call
push
jbe
js
fistl
inc
or
test
into
push
adc
push
xlat
leave
push
mov
cld
push
stos
mov
icebp
sbb
xchg
in
fidivrs
mov
sahf
mov
dec
mov
out
cltd
inc
mov
insb
push
mov
dec
xchg
bound
rolb
xchg
mov
mov
pop
dec
rcrb
cli
pop
cmp
dec
jae
sbb
mov
cwtl
fmuls
shll
xchg
inc
pop
pop
sbb
xlat
enter
and
xchg
cmp
adc
sub
mov
cli
outsb
nop
clc
mov
test
jle
sub
sub
shlb
das
scas
pushf
cmpsl
scas
les
sub
jg
das
ds
xchg
xor
aas
push
xchg
cmpsl
scas
pop
mov
mov
pop
inc
lcall
adc
add
cwtl
in
rclb
cmp
cmp
clc
jo
push
lods
into
push
outsl
cmp
stc
into
jmp
cmpsl
jmp
cld
fs
rcll
adcb
or
and
test
les
or
out
popa
hlt
cld
inc
mov
into
jb
aaa
loope
sbb
mov
gs
je
repnz
loope
push
inc
mov
lods
lahf
jb
js
mov
xchg
cld
jnp
sahf
loopne
mov
or
adc
iret
outsb
test
pop
aad
pop
loopne
mov
adc
adc
or
inc
iret
in
jb
shll
cmp
or
shll
es
outsb
mov
inc
inc
movsb
adc
pop
add
jbe
mov
mov
std
movsb
adc
stos
leave
repnz
sub
sarl
adc
lahf
sub
mov
adc
fistpl
cmp
and
xor
out
fwait
lret
xor
and
fcom
xchg
scas
jae
fldl
les
xor
mov
mov
mov
pop
mov
lock
scas
xchg
iret
mov
pop
enter
movsb
enter
jnp
std
cmp
mov
push
pop
mov
lods
ss
lock
add
les
mov
xor
ds
movsl
and
push
and
inc
lcall
mov
sti
xchg
pushf
fsub
dec
sbb
stos
push
inc
cli
jmp
pop
xor
pop
and
mov
and
sarb
adc
xchg
aas
fcom
mov
dec
test
ljmp
fmull
test
ror
sbb
cltd
sbb
mov
bnd
add
pop
clc
jae
xorb
pop
inc
sti
pop
cli
push
push
pop
call
and
loope
in
lcall
shrl
mov
mov
push
and
test
and
ds
div
pop
mov
add
push
cmp
cs
push
mov
and
movsl
cli
fiadds
mov
int3
out
mov
jbe
push
ffree
outsb
lds
pop
insl
lea
sbb
int3
mov
jecxz
clc
cmovbe
js
push
movsl
jp
pushf
mov
or
adc
stos
jmp
mov
push
ret
push
inc
mov
push
mov
push
cwtl
xchg
or
xchg
push
dec
sub
and
jmp
pop
jbe
pop
push
mov
dec
imul
xor
sbb
loopne
xor
ja
test
js
pop
sahf
bound
inc
arpl
inc
xor
sbb
pop
ret
push
push
testl
movsb
cmc
shll
hlt
mov
add
sbb
and
repnz
or
or
cld
pop
sahf
adc
test
iret
mov
push
mov
aam
out
pop
stc
xchg
cmp
jmp
adc
fnstenv
shrl
ss
cmc
mov
xchg
mov
mov
dec
mov
pop
push
and
push
jo
lds
mov
iret
jp
sbbb
xchg
out
je
rclb
cld
pushf
seto
mov
mov
push
and
sarl
sbb
fwait
inc
adc
jg
aaa
push
fiaddl
pop
xlat
mov
or
dec
cmp
mov
ss
mov
clc
sahf
dec
xor
dec
or
int
lldt
mov
mov
push
sbb
cmpsl
push
cmp
and
ret
cwtl
cmp
rorl
insb
movsb
in
stos
fwait
arpl
into
cld
push
mov
sarb
test
jmp
int3
mov
mov
decb
xchg
and
dec
sbb
and
mov
xchg
push
mov
test
rclb
push
test
push
sub
cld
cmp
sarl
pusha
aad
fmuls
stos
inc
loope
orb
or
dec
push
lea
push
jnp
sbb
nop
sbb
imul
ja
inc
push
or
mov
stc
mov
xchg
mov
xchg
out
je
inc
mov
es
jnp
sub
movsl
cmp
sbb
mov
lea
mov
cld
push
aas
test
repz
call
mov
outsl
icebp
xor
adc
stos
loope
adc
jg
stos
fists
or
cli
mov
into
repz
pop
xor
xor
rclb
out
mov
sbb
inc
cmpsl
push
inc
mov
icebp
stc
enter
dec
sahf
out
mov
fidivl
cmp
mov
pop
inc
mov
test
sahf
mov
mov
call
mov
shlb
and
ljmp
add
sub
loopne
jmp
loop
repnz
outsb
lret
out
ss
inc
lods
aaa
fcomi
mov
pop
je
cwtl
jbe
ficoms
ljmp
dec
pop
pop
iret
lods
add
aaa
mov
fnstsw
jae
xor
sbbb
or
sbb
mov
cmp
cmp
gs
repz
adc
xor
mov
adc
push
sub
or
sbb
fldenv
push
fcmovnbe
pop
xor
push
sti
mov
dec
mov
mov
sbb
lret
flds
sub
jne
sbbb
lret
fcomp
dec
cmp
bnd
jns
sub
xor
cmp
testl
dec
mov
pop
das
dec
test
xchg
dec
fcoms
adc
mov
push
jp
push
shl
xor
or
sub
fs
leave
jmp
movsw
insb
mov
push
das
pop
mov
ja
pop
adc
in
dec
test
fistpl
das
decb
and
mov
test
clc
daa
push
pop
pop
out
cmpsb
out
sbb
add
stc
or
fisttpll
mov
popf
add
mov
inc
cwtl
dec
xorl
cli
loope
loope
jle
ss
repz
shll
roll
shll
mov
jge
ss
dec
into
mov
or
cmpsb
jge
push
fistps
push
test
fcompl
mov
xchg
jnp
inc
lea
sbb
inc
insl
pushf
mov
pop
ss
push
mov
jge
stos
es
ljmp
sbb
dec
jl
push
cld
std
into
in
outsb
lock
lret
outsb
call
leave
sub
xchg
aad
shl
mov
push
add
test
xchg
pusha
xchg
sbb
outsl
mov
movsb
mov
notb
dec
mov
cmovp
outsb
leave
or
cmp
inc
inc
mov
add
mov
aad
jl
lods
lret
jge
add
mov
inc
mov
loopne
mov
out
aam
movsb
std
sub
fs
lods
mov
mov
cmpsl
js
lret
jg
je
rcrl
fiaddl
subl
cli
pusha
or
xor
arpl
and
mov
inc
and
push
sub
lods
xchg
insl
jbe
cmp
jo
call
jns
sub
into
lea
nop
je
dec
mov
push
and
pop
mov
jle
add
ljmp
std
scas
mov
sub
cmp
xlat
sub
roll
jl
out
mulb
jns
mov
mov
dec
mov
mov
lock
cmp
or
out
ja
sub
and
jge
mov
insb
lahf
and
adc
cltd
rcl
ja
pop
fstpl
or
push
lret
lods
leave
mov
icebp
call
std
es
xorb
iret
rol
div
adcb
xor
jg
jne
lea
mov
or
sub
or
mov
push
mov
daa
jecxz
mov
out
xchg
push
jl
stc
loopne
ja
fdivrs
add
dec
adc
rol
popf
sahf
fdivrl
shl
loopne
jecxz
mov
push
insl
or
or
mov
test
adc
dec
inc
mov
cli
xchg
adcb
dec
dec
adc
shr
scas
push
mov
inc
sbb
or
addr16
push
cmp
add
inc
jecxz
ljmp
call
sqrtps
or
push
test
inc
xchg
sti
in
pusha
xchg
and
loopne
fsubs
mov
xchg
mov
or
pop
call
ret
push
xchg
aam
mov
shll
sub
stos
testb
mul
adc
js
movsl
test
movsl
std
cld
test
mov
int3
and
jbe
add
push
js
aad
imul
iret
pop
lods
jnp
mov
and
mov
popa
adc
jecxz
mov
out
rcrl
cmp
in
pop
imul
cmp
lock
inc
pop
test
add
jecxz
cmpsb
mov
sbb
push
movsb
pop
lahf
cwtl
rcrb
test
scas
lret
or
pop
cmp
lock
insl
adcl
add
cmc
jmp
and
sbb
out
js
mov
fidivrl
int3
add
clc
sbb
sbb
ds
clc
mov
or
jle
nop
jo
lcall
add
rorw
xor
aaa
adc
stos
pop
xor
mov
jg
or
arpl
imul
lds
mov
sbb
and
push
aam
int
sbb
scas
mov
arpl
lds
inc
inc
inc
lods
jmp
jp
mov
mov
or
aam
std
ljmp
adc
jnp
jecxz
scas
mov
cld
push
leave
mov
jmp
in
loopne
repnz
lods
inc
sbb
dec
or
and
dec
cltd
jmp
leave
out
aaa
push
pushf
push
xchg
dec
jle
inc
enter
insl
in
sbb
test
lret
dec
leave
xchg
inc
lea
adc
inc
mov
inc
sub
test
jne
mov
outsb
inc
cmp
iret
push
or
inc
pop
je
lret
mov
fisttpll
xchg
mov
test
jg
cmp
clc
push
jns
pop
cmp
cld
sub
jle
sub
jae
cmp
inc
ret
rorl
xor
out
iret
pop
mov
jae
jne
adc
outsl
jo
mov
xlat
stc
lret
sar
hlt
mov
lods
inc
and
repz
dec
out
dec
test
test
pop
adc
pop
loopne
jo
nop
add
cmp
fnstenv
pop
mov
xchg
pop
insl
pop
sbb
adc
mov
cmpsb
outsl
mov
rcll
fmul
aad
cmp
nop
cld
jmp
mov
dec
sbb
fimull
outsb
ja
repz
jno
dec
rolb
fsubs
ffreep
cmp
jge
fnstsw
aam
cmpsl
xor
rclb
bound
pop
flds
rcrb
outsl
sbb
adc
mov
pop
mov
arpl
or
sbb
sub
jp
movsl
xchg
inc
incb
add
outsl
push
dec
pop
sub
xor
pop
push
insl
mov
mov
jbe
sbb
hlt
pop
jo
push
and
out
mov
add
xacquire
addr16
sub
and
pop
mov
fnsave
rcl
push
not
std
push
xchg
inc
sub
and
les
pop
repz
sbb
dec
add
push
mov
adc
mov
add
pop
jg
lds
push
outsb
es
xchg
fcmovnb
or
jo
mov
rolb
jge
and
xor
movsl
int
add
pop
xchg
mov
jnp
adc
and
pop
lods
fnsave
cwtl
rcrl
xchg
lods
add
stos
push
xor
xor
in
popa
mov
pushf
andl
cmp
pop
xor
in
shl
jbe
ja
jge
and
jb
bound
mov
int3
push
ret
lods
rolb
lea
cmc
sub
xorl
mov
xchg
sahf
mov
and
jae
aad
cmp
jge
scas
inc
and
jns
or
repz
inc
orl
and
jne
or
mov
mov
sub
stos
inc
rclb
int
movsb
rcrb
jmp
mov
mov
sub
sbb
xor
lock
test
mov
mov
sub
shlb
pop
pop
add
push
sbb
fs
mov
sbb
jb
push
dec
fwait
test
aaa
sub
inc
adc
mov
adc
jo
push
mov
cmp
lods
test
push
adc
bound
mov
fcmove
je
js
cli
push
pop
icebp
dec
sub
testl
sbb
es
ret
and
and
inc
push
cmp
jl
xchg
sub
sbb
jl
loopne
sti
out
in
test
sbb
aas
xchg
xor
mov
add
mov
lcall
cltd
inc
outsb
push
adc
push
hlt
xor
sub
negl
pop
push
outsb
inc
xchg
or
stos
add
fs
inc
add
sub
into
pop
les
pop
mov
mov
jb
add
adc
and
xor
ret
jmp
cmpb
mov
push
imul
adc
and
xor
ret
jmp
cmpb
mov
push
imul
adc
and
xor
ret
stc
shr
loop
repz
cmpb
mov
push
imul
adc
mov
stc
sub
mov
pop
dec
jbe
fldl
int
std
daa
in
push
cmc
xor
lods
fistpl
dec
mov
cmpsl
insl
xlat
sbb
imull
pop
std
daa
in
push
popf
inc
lea
lods
xchg
pop
xchg
xchg
sbb
out
scas
int
std
in
dec
popf
daa
lea
lods
repz
movsb
dec
fistps
ret
pop
mov
mov
fisttpll
aaa
xchg
dec
mov
lods
addr16
test
call
fcmovb
xchg
xor
sti
dec
mov
mov
jb
mov
repz
jl
loopne
push
sbb
inc
filds
xor
jg
push
inc
shll
nop
sbb
int
ret
lret
enter
xor
in
test
inc
lea
xchg
cmp
test
mov
pop
js
adc
test
cs
add
mov
loop
xchg
or
jmp
call
fsts
call
push
dec
movsb
sub
insb
pop
or
dec
fstl
aaa
std
daa
in
mov
aas
lea
shrl
jge
insl
lahf
sbb
out
jle
jne
inc
xchg
pop
test
icebp
sub
xchg
cmp
cmp
adc
test
insb
pop
frstor
inc
std
inc
lahf
ds
jmp
lock
filds
scas
jle
data16
pop
cmpsb
jge
xchg
imul
popf
inc
lea
lods
xchg
pop
xchg
jge
insl
xlat
sbb
out
pop
fldl
int
std
daa
in
push
popf
inc
lea
lods
xchg
pop
xchg
jge
insl
xlat
sbb
out
pop
frstor
stos
cwtl
push
scas
xor
ret
lds
mov
mov
cs
inc
xchg
gs
fcmovne
sti
xchg
movsl
add
cltd
sub
push
xor
mov
in
lock
sub
push
loop
add
pushf
dec
sbb
les
jo
xor
adc
mov
test
jb
or
dec
imul
out
nop
push
lret
cmc
mov
xor
fbstp
sub
lds
icebp
int
mov
lds
jne
inc
orb
dec
and
test
and
repnz
ljmp
jl
leave
scas
hlt
add
shrl
push
insb
movsl
or
pusha
mov
aam
fdivs
mov
pop
cld
xor
lahf
adc
leave
sti
repz
aad
sub
into
mov
cmpsl
mov
add
rolb
out
cltd
in
scas
cli
outsl
or
pop
fildll
adc
push
pop
shrl
or
adc
daa
inc
cmpsb
inc
fistps
cld
mov
scas
inc
jl
jbe
jl
popa
jmp
jp
add
popf
dec
add
xor
cmpsb
repnz
dec
inc
lahf
xor
rclb
in
sbb
mov
cmpl
push
jo
push
dec
fisttps
or
jge
mov
popf
subl
sti
insb
cmpsl
sbb
mov
push
xchg
xor
or
mov
add
push
cltd
xor
lods
jnp
cmp
cmpsl
outsb
pop
mov
jmp
pop
aas
jl
mov
rorb
add
push
dec
mov
fdivrs
mov
dec
jge
dec
add
adc
js
lods
mov
dec
bts
xchg
mov
mov
movsl
xorb
push
dec
mov
push
dec
int3
gs
mov
popfw
cmp
jg
push
in
roll
add
test
lahf
cmpsl
arpl
and
mov
push
dec
lods
sub
pusha
xchg
inc
pop
push
xor
data16
xchg
or
negb
incl
call
xchg
pop
lds
repz
or
roll
addb
xchg
jmp
mov
roll
das
mov
push
lods
stos
mull
rorl
cltd
daa
mov
sub
icebp
adc
pop
fst
cmp
xchg
test
push
aaa
insl
mov
loopne
ss
xchg
pusha
sahf
or
daa
jp
sbb
clc
jne
push
jle
mov
fdivl
or
sarb
lret
stos
pop
mov
fwait
xlat
jb
filds
push
cmp
sub
sub
mov
jo
popf
jp
xchg
pop
mov
and
loop
adc
dec
mov
push
push
and
pop
sbb
jg
adc
inc
shl
mov
fnstcw
outsb
pop
mov
addr16
or
mov
adcb
xchg
sbb
add
sbb
pop
outsb
push
push
rolb
rclb
cmpsb
sahf
sbbb
xchg
push
mov
mov
dec
movsb
pop
mov
xchg
sub
jl
push
rolb
inc
cld
inc
pushf
dec
lods
cmc
cmp
mov
lods
movsl
inc
jl
jb
and
cmp
fsubrl
roll
adc
mov
xor
sahf
or
test
cmp
push
aaa
push
cs
adc
or
dec
push
movl
xchg
movsb
repnz
inc
lds
into
gs
cmp
sbb
cmp
adc
mov
cmc
aas
aaa
stos
push
adc
adc
test
test
clc
jp
jae
add
xor
ljmp
mov
inc
fwait
jg
xor
adc
or
leave
fcoml
inc
subb
mov
or
sub
lock
shll
mov
pop
outsb
xchg
aas
lock
je
lods
fimull
xchg
mov
vpinsrw
or
inc
dec
js
call
test
pop
sbb
mov
roll
ficomps
cmp
and
sbb
lods
xor
stos
cs
sub
mov
jae
enter
das
fwait
pop
jae
cmpsl
loopne
mov
lcall
mov
mul
sub
mov
or
push
lds
rol
cmp
addr16
mov
outsb
mov
insl
push
cmp
mov
mov
and
xchg
inc
jmp
ljmp
push
sbb
sub
mov
dec
sahf
sahf
stos
orb
imul
int3
hlt
mov
outsl
ret
leave
loopne
fnstsw
fadd
jecxz
sbb
scas
xchg
stc
mov
mov
jmp
mov
fs
negb
push
lods
ficoms
and
sbb
pop
jns
push
mov
jl
sbb
lret
push
mov
jo
pushf
cwtl
jo
mov
inc
scas
and
fsubl
ss
in
xor
jne
mov
bound
push
xor
push
loop
and
jp
jae
or
stc
push
call
pop
lret
shll
aaa
sub
jns
cltd
inc
cwtl
adc
push
cmpsl
lahf
mov
popl
dec
nop
xorl
jns
ljmp
xor
or
add
jp
jg
mov
stc
cmp
sub
outsl
stos
pop
jbe
loopne
sub
loope
mov
or
pop
cmp
test
lcall
push
popf
sub
std
mov
shrl
nop
xchg
mov
fisubl
lret
loopne
ja
repnz
push
bound
dec
xor
cmc
pop
jbe
lcall
push
or
jmp
lret
mov
push
hlt
insb
cmp
out
cmp
jns
sbb
push
sub
push
xor
cmp
lods
ficomps
pop
add
fimull
pop
sti
loop
sub
loope
jecxz
rcll
mov
fiaddl
lea
out
std
popf
sarl
ss
sbb
xchg
arpl
lock
xor
ljmp
mov
ud0
mull
sub
push
push
sub
mov
cld
mov
das
shrb
mov
sti
clc
test
jnp
mov
mov
lret
inc
jge
dec
lret
movsb
movsl
push
cltd
push
xor
cmpsl
pop
cli
arpl
pusha
jne
or
adc
ds
arpl
or
pop
or
mov
adc
and
xlat
sti
and
hlt
mov
shlb
jno
cltd
push
pop
xchg
mov
pop
jle
fcmovu
arpl
push
insl
mov
fidivs
xor
sbb
loop
cmc
stc
pusha
data16
adc
jmp
inc
mov
adc
fbstp
pushl
in
pushf
and
movl
pop
mov
imul
push
sub
xor
jge
dec
stos
dec
gs
loopne
test
jns
add
test
push
push
inc
lret
inc
insb
dec
aad
xchg
ja
sbb
fs
std
in
push
mov
mov
and
cwtl
stos
inc
cli
icebp
addr16
sarb
sarl
les
mov
fcoml
enter
mov
adc
xchg
shlb
into
ja
pop
mov
into
sub
jae
add
pop
pop
jbe
in
add
add
xor
dec
push
sbb
xchg
mov
popf
mov
mov
test
enter
mov
xchg
xchg
add
or
fistl
mov
in
mov
sub
cmc
cltd
dec
loopne
lea
cs
mov
enter
sarb
cltd
add
outsb
jbe
repz
inc
cwtl
out
mulb
add
cmp
std
dec
cltd
aam
mov
adc
push
gs
and
lea
sub
lods
or
nop
add
mov
mov
dec
sbbb
shl
ret
mov
ds
push
repnz
add
enter
cmpsb
arpl
les
xchg
xor
adc
pop
in
and
mov
clc
or
pop
pop
mov
mov
xor
movsb
negb
test
and
jae
daa
xchg
mov
nop
pop
jns
icebp
or
and
cmc
test
cmp
sti
insl
movsl
scas
xchg
and
pushf
or
cltd
popf
fistpll
jge
jecxz
out
in
das
sbbb
and
call
shlb
adc
xor
std
out
xchg
xlat
cmp
adc
mov
inc
push
out
sbb
push
out
xchg
dec
inc
or
bound
fadd
mov
sub
add
cltd
sub
bound
stc
mov
cld
aad
push
mov
iret
insl
es
leave
int3
ljmp
pusha
cwtl
mov
lcall
mov
imul
adc
or
pop
adc
lahf
js
mov
popf
pop
add
sbb
and
xor
fsts
aas
imul
repz
and
cmp
inc
push
xchg
xor
jns
adc
orb
fistpl
jns
mov
in
dec
xchg
mov
sub
scas
dec
cmc
lret
and
imul
lea
in
js
jbe
inc
xor
or
xchg
mov
shlb
mov
add
pop
cmp
fisubs
pop
inc
sub
add
je
push
cld
out
push
adc
and
pop
mov
and
mov
pusha
jecxz
xchg
or
adc
add
add
movsb
enter
rcrb
pop
xor
mov
in
sub
jle
push
lock
and
popa
outsl
fstps
scas
in
inc
jns
cli
dec
enter
ss
dec
icebp
fistl
mov
repnz
mov
add
mov
lods
cld
outsb
cmp
dec
sbb
repnz
push
loopne
add
rcrl
cmp
out
and
or
mov
xchg
jp
lods
cmpsl
loope
sbb
mov
push
movsb
jae
sub
mov
mov
lods
sbb
andl
mul
ret
mov
js
mov
and
add
idivl
aam
aam
jnp
cmpsb
xor
push
test
shll
mov
dec
imul
test
hlt
jmp
xor
xlat
test
dec
dec
pop
jp
jmp
add
sub
pop
mov
pop
subl
sbb
sbb
inc
add
and
stos
inc
jo
xchg
bswap
cwtl
pop
je
xlat
daa
jg
fsubrs
ljmp
int
xchg
ja
iret
jp
adc
xor
mov
cmp
or
jecxz
fisttpl
xchg
jecxz
fdivs
add
dec
popf
cmp
dec
lods
cmp
push
movsl
xor
push
das
lcall
dec
mov
cltd
or
inc
cltd
dec
adc
fimuls
ljmp
pop
mov
lds
lahf
cmpsb
notb
bound
sub
call
shlb
and
les
xlat
sbb
add
adc
inc
push
ficoml
xchg
in
inc
repz
daa
mov
roll
fstpt
add
jne
and
xchg
jecxz
xlat
dec
push
roll
and
lods
jo
ror
cmpsb
xlat
jl
xchg
divb
rorb
push
and
lahf
clc
cmpl
and
cmpsl
lea
out
or
call
cmc
inc
inc
sub
sub
jne
mov
sbbb
fdivl
adc
mov
mov
sub
shll
mov
sbb
inc
mov
xchg
popf
lret
scas
int3
and
mov
add
mov
pop
leave
cltd
cvttps2pi
arpl
std
adc
push
lods
scas
imulb
cmp
cmp
fildll
adc
dec
icebp
jmp
jbe
adc
ljmp
xchg
addl
xchg
rorl
pushf
mov
ss
inc
or
insb
dec
cli
xchg
fadd
lock
loope
push
dec
ljmp
call
or
pop
sub
pop
mov
call
mov
test
jno
test
push
and
push
jb
adc
gs
pop
push
test
fs
imul
cmp
adcb
mov
mov
or
pushf
push
and
scas
dec
sub
std
aad
lret
loope
and
mov
xchg
stc
call
push
dec
mov
pop
cmpsb
jle
dec
sub
into
out
push
inc
push
adc
out
sti
leave
mov
jmp
inc
shl
jo
push
lds
mov
movl
loop
popf
in
mov
test
out
mov
enter
cli
cmp
cli
pushf
lea
cmp
xor
lds
cmp
add
frstor
and
and
pop
xlat
rorl
push
sbb
dec
jne
aad
aad
xchg
mov
movsl
jp
arpl
cmp
cmp
sub
jmp
jp
lahf
sarl
test
pushf
xchg
jp
lret
or
dec
adc
mov
xlat
inc
inc
loopne
jb
jmp
sbb
dec
cmp
fs
fimuls
add
mov
pmaxub
mov
and
jmp
rcl
vpshaw
ja
mov
mov
xor
mov
das
int
cwtl
jecxz
mov
or
fistpl
adc
lcall
push
lret
push
clc
push
mov
cli
repz
push
sub
mov
mov
sub
imul
in
jg
scas
outsb
cmp
jg
test
repnz
cmpsl
loop
pop
inc
pop
jno
mov
icebp
mov
sbb
dec
test
cmpsl
push
subb
cmp
mov
mov
and
and
ljmp
dec
adc
inc
sub
add
scas
mov
fs
sub
pop
int
mov
fadd
sti
rclb
adc
cmp
inc
ljmp
sub
leave
add
or
mov
ja,pt
sbb
and
pop
mov
mov
andb
inc
adc
xor
cs
pop
xchg
xlat
mov
or
loop
stos
cmp
dec
xchg
sub
aad
inc
adc
icebp
jo
jecxz
and
rcrl
or
lods
les
add
fisubs
pop
jne
cltd
jne
pusha
jae
jae
xor
dec
and
nopl
sbb
cltd
mov
pop
dec
mov
jne
insb
xor
inc
xchg
mov
inc
jnp
mov
mov
sub
lods
mov
sbb
dec
jo
sub
pop
xor
adc
es
adc
loopne
push
sub
ret
cmp
sahf
pop
push
int3
mov
ret
push
mov
hlt
in
or
and
jg
jl
sbb
out
mov
dec
mov
in
sti
jp
sbb
dec
jb
enter
aad
push
xchg
pop
jmp
xor
mov
pop
and
add
mov
pop
in
and
or
jmp
jnp
stc
cmpsb
movsb
popa
ds
pause
or
popf
pop
decb
fiadds
mov
sub
aas
push
lcall
int
sbbb
inc
sarl
icebp
popl
insl
xchg
adcl
pop
xchg
cmpl
clc
call
out
lahf
xchg
aas
or
mov
repz
or
fadds
push
negb
mov
xor
ret
icebp
sbb
imul
aad
popl
push
jo
xor
mov
subb
mov
fidivrl
lods
mov
mov
mov
push
mov
jecxz
outsl
ss
mov
pop
mov
in
movsl
xor
and
smsw
out
sti
fsubl
jnp
mov
je
sbbl
ja
sub
xor
loope
push
les
add
in
imull
imul
movsl
sub
aam
stc
push
aaa
cmp
adc
adc
sub
pop
jge
dec
test
les
mov
xchg
daa
sub
pusha
ret
ljmp
je
inc
lret
sub
cmpsb
sub
lret
or
pop
cmp
sbb
xlat
arpl
call
aam
sbbl
sub
push
ds
and
mov
xor
aam
call
adc
mov
rcrl
cwtl
push
insl
pop
mov
push
mov
dec
cmp
add
aam
xor
popa
repz
and
clc
or
add
push
sarb
xor
leave
jmp
dec
adc
addr16
cmpsb
fwait
push
pop
jge
ja
xchg
pop
sbb
sub
cmc
js
push
xor
stc
cli
popf
and
dec
dec
ret
inc
iret
hlt
dec
enter
je
push
jb
adc
inc
inc
or
add
les
push
mov
imul
pushf
or
adc
idivb
xor
mov
in
sbb
int
xchg
lods
jmp
sti
cmp
cld
jg
mov
movsl
jge
rdmsr
addb
push
xchg
push
jg
sbb
add
mov
sbb
fucomip
mov
ds
dec
pop
sub
out
sub
push
adc
das
fdivs
loope
into
inc
add
fldcw
mov
enter
or
pop
iret
lcall
adc
xor
ds
mov
sub
xchg
dec
push
stos
stc
add
decb
inc
out
lret
xor
out
xchg
adc
leave
aad
outsl
out
sub
mov
mov
ss
push
and
sbbb
xor
ss
out
rorl
jb
pop
call
fimuls
adc
cmp
pop
dec
in
scas
mov
mov
fsub
out
inc
and
mov
add
dec
add
push
mov
fs
int3
push
dec
rclb
push
shl
inc
add
pop
ret
icebp
or
add
rol
test
adc
js
fdivrp
idiv
hlt
jge
jns
negl
aaa
xchg
inc
hlt
lahf
jne
sub
outsl
sbb
cwtl
mov
rol
mov
add
lea
leave
lods
es
mov
shrl
push
mov
outsl
mov
inc
cltd
test
outsb
stos
or
xchg
push
test
push
leave
cmpsl
sub
inc
push
fiadds
sti
jnp
xchg
inc
add
sub
inc
or
jp
sbb
ret
test
or
notl
cs
mov
push
cmc
cmc
jne
shll
out
andl
fwait
push
fsubl
push
imul
cmpl
arpl
mov
push
sbb
push
in
insl
adc
jbe
sub
ljmp
jo
cld
mov
outsb
and
clc
ret
test
xor
mov
sub
xorl
movsl
loopne
mov
shll
inc
fsubl
sbb
faddp
xchg
out
popa
int
ss
addr16
outsl
aam
dec
xchg
xchg
jo
gs
negb
mov
lea
cli
xor
in
mov
add
xchg
or
cmp
fists
in
out
daa
lods
inc
mov
fiadds
adc
or
cs
sub
fdivl
fists
test
cmp
mov
xor
or
insl
stos
push
sbb
sahf
adc
out
xchg
mov
ljmp
dec
leave
std
lahf
clc
out
jl
mov
mov
imul
addb
or
stos
loope
xor
dec
in
stc
negb
adc
mov
shlb
push
and
jmp
mov
mov
cmp
jae
xchg
gs
dec
pushf
inc
lcall
and
cmc
pop
pusha
xor
icebp
inc
push
stc
loope
lcall
test
cmp
shrl
add
adc
outsb
adc
test
mov
add
adc
aam
adc
lods
push
jae
fsubs
jl
xchg
mov
int3
mov
loop
push
mov
ja
pop
or
clc
mov
or
or
fldt
in
roll
pop
mov
imul
inc
or
mov
sbb
iret
push
sbbl
outsb
and
dec
mov
cpuid
pop
nop
nop
int
mov
mov
cmpsb
and
pop
lea
outsl
negb
fsub
scas
in
xor
call
pop
push
xchg
push
cwtl
add
insb
pop
xchg
push
xchg
cmp
addr16
jmp
inc
inc
out
into
sbb
pop
hlt
cmpsb
add
dec
lahf
and
or
dec
jns
pop
sbbl
and
das
xchg
adc
fcomps
fimull
cmp
movsb
mov
xor
ret
cli
out
mov
cmp
pop
test
jb
push
in
popa
xor
loopne
mov
or
push
or
daa
flds
lea
inc
shrl
jp
xchg
stos
xchg
popa
lret
nop
gs
shrb
sahf
cmpsl
xor
aam
push
testb
mov
das
jnp,pn
mov
mov
in
push
popf
inc
lea
lods
xchg
pop
xchg
jge
insl
xlat
sbb
out
pop
fldl
int
std
daa
in
push
popf
inc
lea
lods
xchg
pop
xchg
jge
insl
xlat
sbb
out
pop
fnsave
dec
push
jge
in
popf
inc
or
xchg
fldl
insl
xlat
sbb
cvtps2pi
fstpl
insl
std
pop
in
push
popf
push
lea
out
xchg
pop
js
sbb
xchg
dec
repnz
sbb
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
sbb
or
or
es
sub
mov
mov
pop
mov
jnp
sbbl
or
pop
fisttpl
js
push
add
fdivrs
enter
call
sub
pop
xchg
dec
js
push
dec
enter
mov
lods
sbb
or
lret
jl
pop
int3
les
sahf
mov
jnp
mov
test
frstor
mov
nop
fistps
adc
jae
and
sub
xlat
fwait
mov
jg
and
shrb
ljmp
fisubrs
rsm
ret
lahf
jg
jmp
aam
lds
fcom
sti
cwtl
pop
and
into
out
or
cmp
cmp
pop
and
ljmp
popf
cmp
push
mov
jle
test
push
test
push
out
jnp
xor
pop
mov
xchg
mov
inc
cmp
cmp
push
mov
push
cmp
pop
inc
xchg
and
mov
in
repz
sub
cmp
in
imul
sbb
sub
pop
lahf
dec
jmp
inc
push
repz
inc
enter
scas
stc
jne
fucomi
jle
outsb
movsl
aaa
scas
or
sbb
pop
loope
pop
and
cmp
mov
inc
in
cmp
mov
pop
mov
fstpl
dec
out
push
les
mov
cmpsl
push
lea
xchg
dec
test
fisttpl
mov
dec
jmp
sti
push
sub
pop
enter
call
stos
cmp
dec
jmp
sti
push
sub
pop
enter
call
add
in
xchg
lahf
push
dec
subl
lcall
inc
push
pushf
mov
mov
imul
add
jp
add
jp
dec
out
lods
loopne
add
aam
xlat
xchg
mov
inc
iret
dec
test
test
and
mov
adc
inc
test
and
cld
sbb
movsl
cmpsb
cmp
push
mov
roll
pushf
adc
ds
mov
pop
jbe
or
cmp
mov
lods
adc
dec
imul
push
and
jb
decb
mov
adc
fs
fcompl
xchg
jo
mov
jnp
mov
cwtl
lcall
inc
arpl
sbb
xchg
mov
push
mov
gs
push
sub
inc
mov
sub
ret
fiadds
push
movsb
xor
mov
lea
or
rcrl
xchg
cld
sub
fcomps
cs
pop
fisubrl
cli
dec
mov
aam
nop
and
cmp
sahf
xor
inc
aad
add
test
popa
cmp
dec
push
dec
iret
daa
shrb
iret
and
jns
add
push
or
aad
mov
xchg
mov
mov
mov
jb
mov
out
lcall
int
mov
jae
int3
cli
pop
or
dec
ds
xchg
adc
sub
inc
push
pop
fstps
mov
pop
insb
xchg
cld
cmp
jmp
shl
push
aaa
je
fmull
inc
add
mov
cld
cmc
divb
xor
or
imulb
sub
pop
inc
mov
ret
push
adc
pop
xchg
dec
mov
adc
lods
adc
cmp
cmp
mov
pop
cmp
jecxz
adcb
xor
xchg
ret
mov
das
nop
xchg
je
les
fimull
sub
push
lahf
cmp
into
fistpl
sub
cmc
dec
or
jae
inc
lcall
jmp
mov
pop
add
or
bnd
sbb
add
test
mov
movsb
or
jp
bound
push
in
or
cmp
mov
inc
ds
mov
adc
iret
mov
imul
mov
imul
lods
sbb
xchg
js
or
lods
cmp
xor
push
shl
cld
push
xchg
push
mov
aaa
int
adc
xchg
dec
clc
xor
mov
jns
sbb
dec
or
shll
das
das
mull
fidivl
mov
adc
xchg
adc
sbb
loopne
rorl
jmp
pop
xor
nop
add
jbe
scas
and
cmp
pusha
dec
ja
aaa
inc
leave
faddl
call
xchg
inc
aam
push
testl
mov
cwtl
sar
fwait
ljmp
test
mov
add
inc
sbb
repz
sbb
dec
or
jb
jne
loopne
stos
mov
dec
loope
shrl
mov
test
xchg
xor
adc
or
loope
and
cmc
sbb
mov
push
cmpl
leave
jno
mov
xlat
xchg
ret
adc
sbbb
jl
cmp
dec
mov
lods
lahf
pop
cmp
pop
jno
sbb
enter
mov
mov
cltd
mov
and
pop
out
popf
adc
dec
lds
sub
loop
add
addb
lock
icebp
loop
iret
fldcw
sbbb
out
jnp
xchg
leave
and
mov
dec
cmc
sub
clc
xor
movsb
test
mov
scas
pop
pop
xchg
dec
lock
nop
adc
xor
fbstp
jnp
mov
stos
push
push
rcrl
fwait
mov
pushf
stos
add
push
mov
daa
ss
inc
in
rolb
xor
sub
push
xchg
sub
push
jo
push
movsb
in
inc
and
popa
out
mov
lods
fistpl
aam
add
sahf
cmp
pop
das
test
je
roll
lcall
es
pusha
add
adc
lods
pop
xchg
adc
pop
pop
and
fiaddl
cmp
loop
call
dec
testb
hlt
xchg
xor
dec
cmp
and
mul
in
hlt
daa
dec
add
ret
xorl
sub
jo
push
push
ret
xchg
adc
clc
sub
jecxz
jno
mov
pop
add
xchg
loopne
add
mov
mov
xlat
or
xchg
loope
int3
js
pusha
outsl
ds
sub
iret
jmp
movsl
dec
mov
nop
or
or
cmpsb
insb
mov
pop
xchg
adcl
mov
mov
leave
cmp
cmc
pop
mov
mov
push
lahf
jo
testb
xor
mov
lret
test
xlat
insb
or
daa
or
rorl
out
rcrl
inc
adc
mov
and
stos
mov
rolb
in
push
xor
test
add
js
dec
cmp
xor
adc
push
cli
or
cli
data16
mov
test
jb
push
cmp
idivl
dec
jnp
mov
mov
sbb
sbb
add
fwait
in
outsl
jo
inc
dec
movsl
inc
push
leave
sti
into
call
and
insb
lret
xlat
lea
scas
push
out
mov
bound
repnz
xchg
add
rcr
jbe
cwtl
stos
loopne
mov
das
mov
and
adcb
dec
sbbl
mov
idivb
dec
ret
jnp
xchg
mov
sbb
data16
mov
xor
bound
pop
and
add
test
js
jno
jns
push
mov
jecxz
jmp
add
inc
xor
outsl
insb
rorl
jne
lods
mov
or
sub
clc
xor
push
mov
inc
int3
pop
idivl
cmc
mov
dec
lods
mov
dec
out
insl
push
adc
dec
cmp
jb
popa
mov
xchg
scas
jl
pop
ret
pop
lcall
cmp
aam
mov
pop
lea
shr
inc
shrl
cmp
push
push
out
cmc
mov
fucomip
xchg
enter
pop
push
fsts
les
rcrb
xchg
mov
inc
test
sbb
or
sbb
mov
in
mov
lret
mov
add
rcll
sti
lahf
inc
in
sbb
stos
fcoms
mov
mov
rclb
shl
sahf
add
and
xchg
ljmp
mov
xor
cld
push
fdivrl
and
pop
jne
sti
icebp
fbstp
mov
inc
xor
std
aam
add
js
adc
fsubl
mov
dec
push
and
xchg
lcall
dec
in
mov
jle
pop
call
dec
rclb
or
movsb
or
pop
inc
pop
mov
mov
xchg
and
add
fmull
xlat
rolb
lcall
addb
mov
imul
cwtl
sub
daa
enter
pop
loope
faddl
inc
sahf
mov
adc
cmp
mov
mov
dec
lahf
jbe
andb
pop
ss
xchg
arpl
out
enter
push
data16
push
sbb
insb
dec
or
jne
push
push
ret
xor
cmpsl
adc
test
inc
in
ja
sbb
loopne
insl
pusha
adc
iret
dec
inc
je
imul
dec
ss
pop
popf
scas
inc
ljmp
subb
pushf
fstl
cmp
jl
mov
call
je
lret
lock
ljmp
mov
fidivl
sbb
xchg
push
cmp
mov
mov
in
push
sbb
aas
adc
pop
addr16
fcmove
aas
movsb
dec
js
pop
jle
cmp
lret
in
or
movsl
mov
movd
mov
fidivs
data16
jmp
loopne
jl
mov
fmull
add
and
cmc
mov
testl
dec
adc
dec
dec
rcl
fcoms
mov
jnp
lea
notl
push
jns
inc
adc
cli
out
pop
xor
sarl
insb
mov
test
pop
mov
and
pop
sbb
in
mov
pop
adc
dec
lock
xchg
pop
mov
lea
pop
adc
pushf
fs
call
mov
bound
mov
lahf
cmp
in
mov
loopne
aad
fisttpl
or
nop
or
lods
dec
lods
dec
leave
xchg
aam
inc
out
jmp
cmpsl
jo
and
test
push
push
in
icebp
out
jmp
cmp
jo
push
sub
sub
push
gs
in
sub
sbb
sbb
cmp
inc
in
adc
dec
pop
cmp
push
xor
icebp
pop
jg
add
outsl
shr
in
test
lret
nop
loop
cs
incl
lods
push
outsl
lock
cmc
xor
in
inc
inc
and
sahf
icebp
rolb
mov
add
mov
bnd
inc
or
out
fcoms
xchg
or
dec
add
pop
movsl
push
cld
ds
mov
jecxz
jge
ficoml
adc
insb
xchg
shrb
lds
pusha
mov
mov
add
hlt
ret
enter
pop
and
fists
shlb
pusha
in
ljmp
lcall
mov
jnp
orl
mov
adc
ss
int
fbld
cmp
xchg
mov
mov
pop
mov
add
and
arpl
rorl
mov
push
call
mov
xorb
in
push
cmp
sar
xlat
xlat
fimull
outsb
mov
add
mov
call
lock
jge
mov
xor
and
ja
lret
out
lock
aas
fs
xor
or
inc
cmp
and
add
bound
daa
push
ja
sbb
cmp
dec
call
jge
dec
push
in
push
movsb
pop
xor
pop
adc
jmp
mov
sbbb
lret
dec
push
insl
data16
sub
push
dec
and
cmp
popf
dec
add
loopne
fsubl
test
clc
or
stos
push
mov
jae
in
nop
test
mov
mov
repnz
and
add
mov
lahf
clc
add
ss
stc
clc
cwtl
mov
loopne
loop
xor
fs
outsb
test
mov
xlat
mov
xchg
mov
stos
sub
scas
outsl
mov
in
test
mov
cs
push
inc
mov
xchg
in
rcr
flds
pushf
sarb
hlt
int
cmp
lea
ja
and
xchg
xor
and
movsl
scas
mov
sbb
xor
pop
rolb
les
add
subl
gs
xchg
sti
out
mov
mov
movsl
femms
mov
fsubr
cs
ficompl
lcall
sub
enter
lock
shll
ja
aad
pop
add
call
fisubrl
xchg
stos
cltd
adc
jne
lret
push
sub
in
mov
int
mov
or
sub
jge
xor
iret
cmpl
jnp
cmc
lea
popf
jmp
sub
xor
add
sub
mov
jb
inc
pop
pop
pop
cmc
jmp
push
loopne
shlb
repnz
push
fistpll
mov
sub
push
dec
stc
dec
into
cld
out
dec
pop
mov
fdiv
lock
push
pop
lea
jbe
pop
mov
mov
sahf
mov
dec
iret
sub
xor
pop
xchg
cmpsb
dec
cmp
pop
arpl
not
xor
test
mov
fdiv
or
push
mov
lret
jl
pop
in
xlat
dec
push
jne
or
jp
sahf
mov
xor
popf
sub
inc
xchg
nop
push
dec
sub
sbb
pop
xchg
fsts
lods
mov
lds
adc
sbb
arpl
fisttpll
and
mov
test
in
insb
stc
xor
mov
popa
cs
inc
xchg
push
loopne
or
fs
loop
cs
sarb
sbbb
insb
adc
scas
lods
mov
mov
inc
sbb
sti
mov
push
aaa
inc
inc
daa
push
mov
cwtl
push
push
mov
push
xchg
imul
xor
insb
cmp
leave
pop
xchg
adc
or
mov
mov
add
int
mov
cli
imul
pop
pop
adc
dec
mov
add
push
lds
out
ds
or
cmpsl
shll
fs
imul
xchg
add
dec
adc
bound
push
fwait
cwtl
adc
fs
sbb
push
iret
sbbl
pop
call
enter
clc
out
sbb
cmc
jp
nop
mov
stos
test
inc
insl
cwtl
scas
and
push
mov
adc
push
nop
push
and
leave
push
cli
xor
pop
cltd
push
std
xchg
in
and
ds
rolb
add
pop
das
fs
jns
pushf
jo
loop
adc
xor
mov
sti
mov
pop
in
or
cmpsl
rcr
subl
mov
inc
ret
dec
dec
popl
inc
pop
decb
mov
add
shll
pop
ret
pop
xor
xchg
out
stc
adc
mov
std
repz
cmp
sbb
shl
jb
mov
push
mov
pop
pushl
in
mov
imul
fsubl
loopne
fisubs
push
xchg
enter
inc
add
imul
mov
dec
add
adc
inc
mov
xor
je
mov
cmp
xchg
jmp
out
aaa
fs
pop
and
das
mov
adc
cltd
arpl
add
pop
repz
fucom
sbb
ds
adc
cmp
clc
push
push
push
sub
cwtl
ja
gs
mov
leave
out
xchg
ret
xor
aas
mov
lcall
ss
pop
ljmp
inc
popf
insl
in
addl
shll
fdivr
adc
out
test
addr16
and
or
loop
and
daa
pop
movsl
lret
mov
movups
push
mov
lahf
lock
or
pop
cmp
cmpsl
dec
mov
jno
pop
sub
sbb
ljmp
mov
xchg
jnp
stos
loopne
xchg
push
pushw
clc
shll
mov
pop
not
ficompl
xor
inc
xchg
cli
or
jmp
mov
rorl
mov
adc
and
push
cmpb
shll
popf
push
sbb
pop
mov
mov
js
rol
in
xchg
pop
pop
pusha
dec
lock
lods
popf
leave
call
mov
xor
insb
loopne
sub
lock
arpl
nop
pop
sub
xchg
lea
push
xor
int
inc
lahf
xor
sti
adc
mov
jbe
mov
mov
mov
movsb
cmp
fdivrs
cld
jp
add
mov
mov
inc
clc
ljmp
add
scas
xchg
mov
loope
xchg
xor
pop
cs
push
mov
push
or
cltd
js
negb
outsb
loopne
repz
xor
mov
jnp
fldcw
mov
leave
mov
cwtl
cmpsl
mov
xor
mov
mov
or
dec
and
int
mov
mov
sub
inc
cli
mov
lea
cmp
jno
insl
iret
pop
mov
pop
sbb
in
addr16
sub
ljmp
mov
es
test
mov
les
jb
dec
mov
jp
arpl
inc
xchg
adc
das
jne
adc
xchg
shlb
and
mov
cmp
sbb
daa
aad
clc
rcl
fidivrs
sti
push
add
add
cmpsb
in
das
shlb
adc
adc
lahf
or
fs
idiv
push
call
int
dec
jb
shl
pop
jmp
jo
xor
frstor
js
xor
mov
ret
addr16
ror
and
xorb
lock
mov
sbb
fs
push
cmp
addb
xchg
pop
fisubrl
adc
or
push
int
mov
push
cmp
dec
orb
aad
in
lea
je
mov
movsb
dec
scas
in
inc
xor
jmp
mov
cmp
scas
xchg
lea
je
into
sub
sbb
pop
arpl
gs
icebp
and
fiaddl
inc
push
jae
sahf
sbb
popa
cltd
icebp
nop
cmp
add
mov
sahf
dec
enter
sub
mov
divb
cltd
ds
mov
pop
mov
test
lea
sub
test
mov
ret
into
aaa
sbb
int3
movsb
ljmp
cs
sbb
mov
inc
gs
lret
xor
outsl
mov
jne
insb
add
fucomi
mov
in
adc
jp
cs
inc
iret
push
int
lret
les
add
pushf
fldenv
mov
repz
out
into
inc
xlat
push
fiaddl
and
les
jg
push
in
lods
mov
cmp
gs
lea
das
int
in
mov
jp
out
mov
sbb
mov
jbe
loop
sarl
dec
ret
mov
movsb
jmp
cmp
push
leave
popa
das
cmp
fsub
popf
push
sub
push
add
or
aas
xor
mov
outsl
mov
pop
stc
jle
in
loop
sub
das
push
stc
adc
sbb
lahf
push
std
xchg
cmp
push
sbb
aad
out
pop
push
roll
sub
into
bswap
jbe
mov
cmp
aas
jp
test
cmp
mov
scas
sbb
inc
push
jns
jg
mov
popa
mov
in
sbb
jb
clc
adc
mov
lahf
loopne
push
nop
cmpsb
sub
lahf
mov
or
pop
inc
add
js
mov
rol
pop
das
fs
adc
pop
lret
fldl
jo
and
data16
xor
inc
int3
fbld
or
mov
and
cmc
sbb
or
repnz
in
dec
popa
mov
push
mov
or
pusha
cltd
pop
rcll
enter
xor
or
aad
mov
pop
inc
lds
mov
jae
cltd
fstps
cmp
jl
jbe
mov
or
or
pop
rolb
mov
fidivs
mov
mov
mov
pop
jne
sahf
push
xlat
js
aaa
sahf
mov
fisubrs
push
divb
push
adc
mov
sub
sbb
data16
mov
call
popf
scas
pop
pop
mov
ret
mov
dec
lea
inc
inc
ja
push
aad
pop
stc
mov
xor
mov
mov
loope
fwait
mov
mov
cltd
stos
jbe
push
test
mov
ds
je
test
push
jns
or
jae
mov
xor
add
adc
rcr
push
addr16
cmp
sti
mov
push
arpl
dec
jnp
add
mov
xchg
push
movsb
out
out
sub
push
cmc
lret
das
insb
push
int
movsb
cli
dec
mov
out
outsl
cmp
xchg
jl
inc
es
and
cmpsb
push
inc
lods
sub
push
jnp
enter
jle
dec
cs
jbe
shl
mov
adc
inc
inc
out
pop
lret
cltd
pop
cmp
es
arpl
pusha
leave
and
sbb
add
ja
shrb
repnz
repnz
lds
ljmp
sbb
xchg
jnp
jge
lds
cs
jge
or
sub
cmp
adc
and
xchg
lahf
jb
jge
pushf
insl
mov
and
xchg
push
aas
mov
inc
dec
dec
ljmp
mov
incb
dec
gs
mov
ljmp
lods
test
cmp
ljmp
push
jb
jge
push
lods
rcrb
cmp
xlat
test
je
mov
mov
xor
repnz
inc
loopew
roll
mov
gs
or
test
jg
push
ds
repz
adc
dec
sub
jb
imulb
sti
fisubrl
xchg
ds
xchg
in
push
mov
outsb
int
lret
pop
xchg
pop
jle
out
mov
inc
fdivl
cmp
add
sub
std
add
ljmp
dec
pushf
mov
ret
or
enter
xchg
mov
aaa
mov
and
mov
cmp
mov
lods
adc
loopne
pop
cmp
nop
clc
sub
loope
add
mov
mov
xor
ret
cmpsb
cmp
jae
xor
mov
adc
in
sub
cmp
cmc
in
lahf
adc
movsb
stos
mov
adc
xchg
out
xor
mov
aad
adc
mov
or
pop
fisttpl
js
push
sub
pop
enter
call
stos
cmp
dec
jmp
sti
push
sub
pop
enter
call
mov
pop
fisttps
jns
push
and
inc
enter
call
and
xchg
sub
pop
lret
enter
xchg
or
and
push
shll
xchg
pop
test
adc
sbb
imul
sahf
sub
jp
or
xchg
jb
sti
rorl
jecxz
adc
pop
xor
jnp
or
jae
arpl
mov
mov
fwait
rep
jecxz
adc
add
push
cmp
jae
arpl
xchg
lret
mov
mov
fsubrs
dec
packuswb
xor
dec
push
lcall
cli
repnz
dec
and
test
xchg
pop
dec
mov
lods
push
inc
nop
aam
les
push
daa
dec
adc
stos
sub
ret
and
inc
and
add
push
mov
out
loop
fstpt
lret
mov
arpl
xchg
jg
jl
dec
add
outsl
and
pop
push
sub
jmp
mov
dec
push
cmp
leave
cli
sub
adcl
push
in
popf
jecxz
rcll
inc
sbb
ljmp
ss
or
clc
loop
out
mov
movsb
lock
test
xchg
inc
mov
pop
arpl
les
mov
mov
arpl
ffreep
add
pop
and
or
jae
arpl
mov
mov
jne
mov
mov
ja
pop
pop
dec
pop
push
scas
xor
pop
popa
jl
mov
stos
mov
fistpl
nop
fbld
sbb
push
pop
push
dec
or
or
stos
shrb
rol
lods
fwait
lahf
into
xchg
enter
mov
pop
inc
inc
sbb
arpl
xchg
lret
sbb
jmp
sti
rorl
jecxz
adc
pop
xor
jnp
or
jae
arpl
xchg
lret
sbb
jmp
sti
rorl
jecxz
adc
or
lods
insb
inc
adc
test
outsl
push
insl
mov
and
call
inc
clc
outsb
rolb
mov
int3
mov
pop
pop
scas
mov
test
xor
push
test
popf
or
fmuls
jle
dec
cmpsl
dec
sbb
sbb
cmp
pop
pop
fildl
jecxz
adcb
ss
pusha
and
dec
leave
pop
int
dec
mov
cmp
mov
outsl
scas
mov
xchg
repnz
inc
into
mov
jmp
imul
repnz
ror
into
cmc
sub
xor
or
sub
jecxz
daa
ret
nop
jns
iret
jns
bound
jae
cmp
fiaddl
jne
adc
fidivrl
sub
fisttpl
jns
movsb
or
ja
in
loop
lret
and
jge
mov
sub
lds
jns
inc
dec
icebp
or
inc
cltd
and
jne
divb
mov
sti
jb
lea
push
movsb
inc
sub
pop
and
test
adc
int
inc
mov
inc
inc
fsubs
and
std
pop
and
lcall
adcl
push
xchg
and
rclb
mov
daa
cmp
inc
les
cmpsl
inc
ficoms
jecxz,pt
notl
sub
cmp
push
test
push
mov
mov
cmpsl
xchg
push
ret
xor
test
mov
push
jae
adcb
aam
jle
fwait
in
sbb
or
mov
push
jo
lods
sub
xlat
jmp
sub
and
add
mov
ror
fs
mov
mov
push
cmpsl
into
or
lret
push
or
xchg
dec
roll
lock
push
repz
into
test
mov
mov
test
imul
test
inc
mov
pop
or
inc
loop
push
cwtl
hlt
js
daa
jp
fidivl
or
mov
add
adc
fwait
cmp
hlt
sub
fisttps
in
fiaddl
mov
arpl
xor
sets
mulb
in
les
mov
push
sbb
pop
sub
jns
dec
lods
sub
xchg
loopne
and
add
enter
pop
jl
pop
mov
das
in
inc
hlt
imul
bound
pop
mov
daa
cmpsb
loopne
lret
pop
test
mov
push
mov
mov
lret
inc
cwtl
jnp
mov
js
imulb
aaa
fmuls
mov
push
inc
jno
dec
clc
inc
inc
dec
inc
lods
cmpsb
xchg
and
test
dec
cmp
mov
sub
iret
ja
mov
fistpl
push
insb
or
add
ja
jle
insl
jb
xor
inc
scas
fdivl
or
dec
or
xchg
adc
fisttpll
mov
jp
movsl
lods
adc
inc
push
shll
call
mov
sbb
and
or
aad
inc
xor
xchg
cmove
adc
imul
sbb
pop
test
cmp
add
lret
mov
call
fcomps
je
add
sbb
inc
sub
outsb
das
ja
leave
ss
lahf
cltd
shrl
sub
pusha
test
mov
inc
sub
clc
int
push
pop
mov
adc
jmp
pusha
and
cwtl
xchg
jnp
add
sarb
hlt
ror
mov
inc
cmp
jnp
aaa
popa
enter
das
cld
cmpsb
in
adc
mov
adc
in
loopne
mov
cmc
xchg
test
push
gs
lock
insb
jbe
into
pop
or
push
nop
imul
insl
loop
in
jge
repz
dec
sbb
jb
mov
pop
shrl
in
ljmp
and
lcall
ffreep
mov
sub
add
sbb
dec
xlat
je
insl
push
imull
cmp
xchg
mov
fmulp
stos
clc
push
rol
xor
loope
aas
leave
pusha
jo
mov
add
fstp
jae
adc
xchg
dec
in
xchg
mov
pop
inc
test
test
cmpsb
push
cmp
je
mov
leave
mov
sbb
fdivrs
in
sti
pop
pop
pop
dec
icebp
stos
insl
and
dec
daa
in
fnsave
insb
pop
inc
mov
mov
or
adc
sbb
jmp
sbb
mov
aam
push
addr16
aam
lds
xchg
mov
jo
cli
insl
sub
aad
mov
or
scas
orl
pop
push
pusha
xchg
into
in
cmp
xchg
fimuls
pop
push
insb
or
and
mov
mov
into
pusha
imul
pop
sbb
mov
mov
xchg
mov
and
lcall
mov
stos
and
jp
aam
push
push
rcll
in
ds
inc
rcrb
xchg
xchg
cmpsl
fs
call
mov
push
icebp
sub
push
dec
rclb
inc
mov
jmp
enter
cmp
or
add
lods
es
test
or
mov
mov
mov
nop
push
mov
aaa
adc
mov
mov
push
push
inc
imul
sbb
test
pop
sbb
xor
insb
mov
nop
adc
fucomi
outsl
dec
sub
scas
push
inc
sarb
mov
mov
push
pop
popa
repnz
cmp
repz
add
scas
cmpsl
movsl
mov
std
xor
push
mov
mov
fcmove
adc
cwtl
in
adc
xlat
lret
jns
sub
xor
pop
ficomps
scas
incl
xor
jl
test
lret
popaw
call
adc
lods
sbb
leave
andb
add
mov
lods
in
lods
cmp
or
rcrb
sub
imul
popa
xor
lock
sarb
sub
bound
mov
lcall
shll
mov
or
mov
popf
mov
ss
mov
add
int3
jp
xchg
neg
jge
mov
int
sahf
sbb
mov
mov
imulb
cmp
popf
test
ja
clc
daa
sub
dec
or
xchg
inc
dec
cmpsb
xor
or
aas
enter
loopne
cmp
mov
clc
sbb
mov
in
mov
xchg
div
lret
sub
adc
in
pop
addr16
jbe
cmc
rolb
into
fwait
or
fs
outsb
fdivrs
lods
dec
xor
push
es
sub
dec
movsb
xor
push
popa
mov
adc
mov
cmp
call
shl
and
xchg
and
ljmp
sub
sub
test
push
pop
jp
mov
je
clc
sti
nop
sarl
ds
push
mov
mov
lahf
fsts
cmp
mov
xchg
pop
bound
mov
lret
or
lock
stc
and
ljmp
mov
popf
lds
cli
inc
mov
push
sub
iret
jnp
mov
das
mov
hlt
push
out
gs
push
and
loop
je
cwtl
or
pop
fnstenv
jl
leave
lods
mov
jge
push
lahf
out
inc
push
push
adc
sbb
jl
and
push
ret
popf
pushf
shr
movsl
std
adc
add
adc
mov
aad
repz
stos
iret
jb
mov
or
pop
jmp
jg
rorl
cmpsl
int
ss
dec
or
aaa
nop
cwtl
push
and
loopne
sub
cltd
dec
add
adc
int
insb
lock
daa
mov
sbb
fstpt
lds
xor
adc
mov
pop
shrl
pop
and
sub
loope
jo
jge
test
jle
loope
fidivl
add
mov
shll
add
lock
data16
mov
mov
fnsave
xor
mov
mov
pop
je
xchg
xlat
add
mov
sub
add
mulb
in
call
aad
lret
sbb
dec
test
std
mov
jne
shr
xor
jle
xor
add
add
xchg
jno
ret
in
aad
xchg
pop
jno
jo
ss
lahf
xor
add
push
fwait
lret
sbb
lods
les
push
repz
fnstcw
jge
pop
lds
xchg
mov
sub
repz
pop
jbe
sarl
pop
popa
mov
mov
sub
int3
aad
jo
or
push
repz
in
in
out
mov
adc
sti
xchg
inc
mov
nop
mov
adc
add
adc
dec
mov
out
mov
ljmp
add
leave
loopne
push
rcrl
test
mov
leave
pop
pusha
mov
nop
outsb
insb
xchg
xchg
loopne
jb
mov
into
int3
jge
adc
aad
mov
sbb
jns
cmc
cld
ljmp
push
ljmp
sub
sti
inc
lds
adc
add
shl
or
push
adc
mov
outsl
adc
test
inc
adc
mov
out
rolb
in
and
loop
push
cltd
lret
jbe
lods
push
inc
insb
adc
enter
ret
push
jl
adc
bound
inc
ficoms
mov
ja
popl
repz
cmp
fs
leave
repnz
and
sbb
lret
les
nop
cmp
lsl
hlt
pshufw
jmp
daa
clc
fistl
mov
flds
xor
mov
mov
cmp
pop
cmp
test
cmp
xchg
js
and
or
mov
leave
mov
jb
mov
ja
push
lcall
xchg
outsb
and
insl
adc
push
ret
cs
add
push
push
adc
jl
pop
mov
mov
scas
inc
jae
nop
add
or
insb
js
mov
shr
jmp
je
jecxz
sbb
rorb
dec
adcl
sub
sbb
inc
movsl
push
mov
push
mov
out
repnz
and
xchg
in
bound
lcall
dec
repnz
dec
adc
mov
out
push
pop
gs
pop
mov
aad
and
inc
push
ja
dec
cwtl
adc
or
imul
loope
dec
scas
xchg
outsl
cwtl
pop
inc
ss
sub
cmp
mov
sbb
lods
test
adcl
and
out
ljmp
inc
out
cld
inc
mov
mov
jno
cltd
movsl
push
adc
testl
mov
lods
xor
sti
gs
stos
mov
jl
stc
push
jge
sub
out
fimull
adc
inc
cli
add
xor
ja
cmp
add
stos
and
jnp
adc
or
dec
push
mov
lret
mov
fisttps
dec
mov
inc
test
or
gs
cmp
sahf
mov
pusha
pop
in
frstor
push
pop
test
sub
cmp
xchg
push
scas
mov
inc
jnp
dec
xchg
out
int
lds
das
push
push
jns
and
inc
je
xor
into
cmovne
sbb
or
pop
adc
in
push
adc
push
rcll
clc
sbb
aad
out
pop
inc
adc
adc
and
push
int
repnz
insb
je
xlat
xor
cld
test
mov
negl
movsb
je
inc
out
mov
in
mov
dec
xchg
and
xor
rcrb
xchg
jg
jbe
test
in
inc
mov
mov
test
pop
adc
int
test
add
xchg
sub
in
xor
adc
dec
mov
andl
call
rolb
xchg
xlat
jo
sbb
cli
inc
lods
jbe
xchg
or
out
xchg
ljmp
or
jne
popa
xor
inc
pop
loope
mov
xchg
mov
cmp
jno
jns
ret
cmp
sub
xor
int
or
sub
mov
push
xchg
xchg
add
jp
inc
lahf
dec
jmp
loopne
lds
jp
mov
sub
xchg
insb
ja
iret
popa
xor
pusha
pop
aaa
sarb
adc
mov
test
imul
test
aaa
sarl
inc
and
or
add
sbb
adc
daa
in
cmp
movsb
sbb
jbe
xchg
mov
movsb
dec
dec
sub
sbb
insb
out
aaa
xchg
ljmp
xchg
and
cli
fsts
mov
push
or
dec
or
xlat
cmp
inc
shl
cmpsb
mov
stos
cltd
xor
movsb
cmp
add
xlat
aaa
add
pop
stos
inc
xor
sti
insb
pop
int
push
jbe
addb
xchg
adcb
aad
stos
or
mov
enter
mov
jae
dec
out
ss
cmp
xchg
ret
sbb
mov
cmp
in
inc
icebp
adc
int
mov
sub
adc
push
leave
dec
mov
lock
inc
mov
pop
mov
cmpb
xlat
es
add
and
frstor
ret
push
neg
jnp
inc
and
xor
sub
loopne
bound
jns
add
rclb
andb
adc
xchg
or
in
sub
jle
dec
mov
xchg
inc
incl
inc
in
jns
imul
ffreep
cli
mov
in
clc
enter
mov
pushf
or
push
in
xor
les
popa
sub
dec
pop
mov
xchg
sub
sbb
push
sbb
ret
es
mov
lods
call
cmpsl
fisubrs
pop
fdivrp
notl
cwtl
stc
mov
sub
pop
pop
fldt
or
test
inc
enter
loopne
shlb
add
cmp
dec
inc
mov
push
pop
das
mov
inc
lcall
test
mov
pop
sub
lcall
test
fiaddl
out
cli
inc
ret
stos
das
scas
dec
mov
xlat
lcall
in
pop
lock
push
push
int
dec
mov
ja
adc
push
fidivs
cmp
mov
aaa
add
movsl
jbe
repnz
push
stc
xchg
xchg
rol
mov
pushf
mov
sbb
dec
movsb
stc
cmc
mov
les
stc
and
lret
insl
lea
mov
xor
sub
adc
mov
xor
and
jne
dec
cltd
mov
xchg
negb
shr
sti
mov
or
adc
bound
inc
movsb
jg
mov
out
xchg
mov
stos
in
sub
lea
out
hlt
cmp
pop
sti
sub
xchg
add
mov
mov
aas
sub
mov
std
ret
stos
mov
int3
test
mov
pop
cwtl
ret
cli
push
icebp
dec
shr
mov
jb
mov
or
shrb
out
jno
or
and
movsl
sahf
notl
stos
lcall
lahf
clc
push
int3
xchg
scas
push
sub
insl
dec
sti
push
jge
push
enter
fistps
mov
push
loope
ret
push
cmp
xor
stos
insl
test
loope
int
adc
test
xor
addr16
cltd
aaa
mov
xchg
popa
cmp
pop
mov
sbb
dec
jle
dec
setno
and
mov
pop
mov
popf
fidivrs
and
invlpg
fdivrl
cli
stc
xchg
mov
js
icebp
pop
adc
in
push
or
xorl
jae
daa
fstl
sub
and
mov
div
sti
pusha
or
cli
pop
arpl
pop
int
pop
cmpsb
in
std
int3
sbb
leave
icebp
xchg
mov
and
add
mov
sbb
mov
mov
shll
pop
into
xlat
ret
lret
int3
aas
clc
push
inc
cmp
loop
mov
pop
cmpsl
xor
mov
lea
movsl
movsb
pop
cmp
push
mov
push
movsl
sbb
and
faddl
pop
push
push
jmp
fisttpl
stc
xor
test
adc
ss
jp
arpl
push
adc
sbb
scas
test
sub
add
jae
stos
enter
loop
insb
cmp
xchg
fstp
sub
bnd
fimuls
jbe
cmp
test
lret
fs
sbb
cltd
xchg
call
imul
pop
mov
mov
mov
fsubs
andl
push
lods
imul
add
por
mov
xchg
jmp
xchg
jno
xor
xchg
inc
mov
jecxz
movsb
and
jno
push
mov
jae
lret
or
cmpsl
jne
mov
sbb
sbb
cmpsl
out
imul
jle
popf
inc
add
iret
fdivrs
pop
orb
out
push
push
push
fmull
dec
mov
mov
add
shr
icebp
in
add
push
sbb
lods
xor
scas
sbb
pop
and
inc
outsb
in
cmc
popa
push
jmp
xor
add
add
push
mov
jge
xlat
scas
jmpw
push
push
xor
lahf
mov
or
cmp
stos
jge
out
scas
pop
xor
push
sbb
adc
mov
mov
push
push
sbb
cltd
or
xchg
in
dec
les
pusha
cmp
push
mov
repz
mov
xchg
int3
pop
xor
out
mov
push
faddl
aad
fisttpl
rolb
xchg
jne
pop
les
add
lods
aas
ljmp
scas
fcompl
cltd
int
or
mov
fcompl
mov
test
pop
sbb
sbb
dec
push
push
out
movsb
pushf
sbbb
xor
scas
or
jge
mov
lret
insl
pushf
mov
push
fbstp
les
repz
cmc
mov
pop
inc
in
fwait
shll
cmp
push
enter
addr16
pop
and
dec
stc
add
xor
push
enter
pop
or
and
mov
push
and
add
push
mov
mov
ja
call
into
movsl
push
ja
rcll
mov
inc
jge
ret
rclb
sbb
inc
dec
jne
sahf
lahf
rdtsc
push
adc
and
insw
inc
pop
popf
jae
push
js
or
pop
or
and
sbb
lods
popa
cwtl
push
shll
cmpsb
repz
bound
lret
rcrl
mov
inc
pop
xor
les
bound
test
rcrl
sbb
cmc
int
arpl
sbb
aad
and
lret
add
xchg
mov
je
daa
xor
scas
popl
fidivrs
cmp
mov
push
js
fwait
push
int
pop
insl
test
mov
cmc
outsl
lea
adc
popf
cmp
rcll
sub
and
push
lret
cld
jne
jl
pop
outsl
ret
xor
pushf
pop
mov
repnz
xchg
pop
lds
mov
push
xchg
jns
lret
inc
jmp
and
dec
push
dec
in
jp
fists
push
mov
cmp
sti
andb
jge
ja
loope
movsb
mov
out
outsb
xchg
dec
add
xor
push
mov
gs
stos
fwait
mov
rcr
xlat
sbb
cmp
clc
faddl
sar
pop
arpl
xchg
xchg
out
imul
in
lock
loop
lods
push
rcrl
jge
sarb
dec
dec
movl
repz
into
fisttps
adc
js
movsb
hlt
and
mov
dec
push
add
data16
cmpsl
and
test
adc
jo
pusha
daa
and
lahf
movsl
testl
scas
mov
std
repz
cmpsb
test
mov
mov
sbb
push
shl
fiaddl
mov
mov
inc
jb
lret
mov
divb
xchg
ficoms
fstpl
aaa
aam
pop
stos
ja
cmp
scas
xor
jns
stos
cmc
add
shlb
cli
movsl
mov
push
pusha
les
or
test
dec
subl
in
mov
jl
scas
or
sbbb
add
or
imul
push
popa
mov
or
cmp
xor
orl
mov
sbb
je
out
mov
outsl
repz
and
das
lods
dec
test
int3
or
out
push
mov
lcall
push
sub
pop
in
mov
idiv
jecxz
popa
pusha
push
pop
jnp
repnz
rclb
in
fsubl
push
fwait
notb
push
dec
lcall
sbb
repz
pop
cmpsb
xlat
outsb
int
call
push
dec
jae
xlat
enter
jbe
pusha
ds
les
sbb
clc
mov
mov
sbb
cli
fbstp
push
loopne
mov
jmp
call
imul
lret
and
icebp
push
jecxz
adc
outsb
and
or
jae
arpl
xchg
lret
sbb
jmp
sti
rorl
jecxz
adc
pop
xor
jnp
or
jae
arpl
xchg
lret
sbb
jmp
sti
rorl
jecxz
adc
push
mov
and
or
jae
jecxz
xchg
lret
mov
mov
fwait
repz
add
push
or
jae
arpl
xchg
xor
jno
jmp
mov
rcll
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
mov
push
adc
adc
inc
jae
adc
rolb
add
push
add
add
add
push
cmp
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
roll
or
add
add
add
add
movsb
add
add
add
xchg
add
add
add
add
sbb
addb
add
sahf
add
add
add
add
or
add
add
jno
push
cmp
push
add
add
flds
pop
add
add
add
arpl
add
add
aas
add
add
add
adc
sbb
jns
pop
add
add
add
add
add
add
mov
test
xchg
add
add
and
lahf
add
add
add
add
add
add
add
add
add
incb
pop
add
add
add
add
add
add
xor
add
cmp
das
add
lret
add
repz
add
add
add
add
add
add
add
dec
add
mov
addb
add
add
add
add
add
xor
xchg
add
add
add
or
addl
sub
mov
lcall
add
add
add
add
jno
xor
xchg
add
add
add
add
add
add
add
mov
jg
add
mov
incb
mov
mov
add
xlat
add
add
jbe
mov
and
pop
add
add
add
add
xchg
add
add
roll
das
add
add
add
into
add
add
add
addl
jg
push
add
add
adc
movsb
add
add
add
fiaddl
add
add
add
add
jbe
add
sub
mov
sahf
add
add
add
add
add
add
add
sbb
addb
add
add
roll
add
add
add
cltd
add
sbb
or
add
add
add
add
pop
add
inc
add
add
add
add
add
adc
add
add
add
add
pop
add
add
addl
jae
mov
or
das
add
mov
addb
add
outsl
add
push
add
jae
inc
add
movl
lcall
add
add
cmp
add
add
add
movsb
add
add
add
add
mov
xchg
add
add
add
add
add
add
add
mov
lcall
add
sahf
add
add
add
add
add
add
add
add
jae
mov
inc
add
add
add
add
pop
add
or
add
add
add
add
add
add
add
add
add
addb
add
sub
add
popf
add
add
add
pop
add
or
add
add
add
add
add
add
add
out
sti
xor
push
inc
sbb
pop
fisttpll
jae
imul
imul
inc
cmc
and
sub
out
mov
xchg
cmc
adc
mov
cmp
pop
xchg
mov
push
into
inc
idivb
or
and
dec
xor
nop
pop
inc
subl
push
xor
push
negb
out
movsl
popa
rcrl
ljmp
mov
data16
test
mov
push
mov
add
aas
decl
inc
out
mov
xor
lock
jecxz
repnz
add
pop
cwtl
mov
pop
pop
fidivs
mov
data16
mov
iret
xchg
push
in
jg
inc
inc
jnp
cli
jge
lods
sar
stos
push
jge
pop
sub
aam
cmp
inc
sti
jne
ja
lcall
pop
inc
cwtl
push
mov
mov
gs
fucomp
dec
xchg
std
mov
pop
xchg
popl
sbb
cmp
jae
daa
ss
test
sub
pop
xor
mov
pusha
jb
and
add
addr16
and
lret
or
sbb
or
push
sahf
xor
lods
fistpl
das
inc
stc
inc
mov
push
and
in
in
jg
ss
jl
xchg
inc
dec
jg
aaa
out
es
or
roll
mov
rcr
adc
push
mov
imul
jmp
mov
xchg
dec
shll
lcall
xchg
jne
cmc
icebp
pusha
jnp
ror
ljmp
pop
lods
dec
mov
sbb
lods
mov
push
dec
and
inc
lea
sbbl
mov
inc
stc
xor
mov
xlat
out
pop
pusha
dec
sbb
dec
and
sub
dec
xor
test
pop
pop
fcomps
xor
mov
bound
imul
lds
and
ja
mov
mov
jmp
xor
stos
fcoml
push
mov
dec
aas
adc
dec
sahf
sbb
ljmp
dec
or
pop
inc
fdivl
and
pop
and
inc
jl
push
hlt
mov
xchg
mov
int
les
pusha
scas
pop
xor
popf
push
dec
cmp
xchg
pop
lock
fdivrs
adc
stos
bound
and
mov
adc
clc
stos
rcl
rcll
cmpsb
mov
sbb
imul
xchg
out
fistps
mov
test
fwait
rol
int
andb
mov
in
jmp
pop
mov
mov
iret
out
sti
jecxz
mov
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
