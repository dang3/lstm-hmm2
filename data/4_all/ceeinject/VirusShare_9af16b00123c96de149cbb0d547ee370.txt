sub
add
add
add
adc
add
sub
mov
andl
jmp
mov
add
add
inc
mov
mov
cmp
jge
mov
add
movsbl
sub
mov
add
mov
pusha
mov
add
inc
clc
sub
int
clc
movb
leave
ret
push
mov
add
add
adc
or
push
mov
sub
mov
xor
mov
or
inc
add
push
add
add
inc
lock
push
pushl
pushl
push
call
xor
xchg
push
call
cmp
jne
call
add
clc
mov
mov
add
loop
push
push
pushl
call
incl
add
add
cmpl
jne
cmpl
je
push
push
push
add
add
call
mov
rcrb
add
in
lcall
push
push
sbb
fisttps
call
sbb
ret
and
push
sub
or
mov
or
mov
and
rorb
adc
adc
or
inc
add
popa
or
push
adc
adc
or
inc
or
aaa
sbb
add
sbb
or
mov
rol
sbb
adc
push
adc
jp
movsb
dec
mov
mov
mov
orb
adc
inc
add
adc
or
test
jo
add
adc
adc
and
adc
adc
adc
adc
jno
adc
and
mov
sub
test
in
and
and
fcoml
rcll
add
sbb
push
ret
add
call
mov
mov
adc
inc
mov
adc
add
jg
mov
andl
loopne
mov
mov
add
sbb
cmp
jae
mov
inc
loopne
mov
add
mov
add
dec
loopne
xchg
xor
jmp
push
dec
pushl
add
sbb
jno
add
mov
lea
push
xor
call
sbbl
add
les
jne
ja
xor
pushl
add
add
or
pop
push
jae
pop
mov
add
inc
add
decl
dec
cmp
dec
fsubrl
jno
add
dec
sub
add
add
adc
mov
pushl
pushl
and
adc
add
add
push
add
push
pusha
push
push
scas
or
push
inc
fmull
mov
push
cmp
jae
pop
add
add
test
clc
add
add
sub
sbb
sub
rorl
js
add
jmp
push
add
adc
ud0
or
add
push
mov
mov
mov
adc
test
inc
and
add
add
clts
mov
mov
mov
push
xorb
push
mov
sbb
je
cmp
cmp
add
loopne
je
xor
add
jmp
push
mov
cmp
add
pushf
mov
push
add
jmp
movl
pop
add
add
pushl
add
mov
movb
inc
faddl
movsb
outsb
inc
add
sbb
faddl
inc
sub
int
push
push
or
xor
add
or
sub
mov
mov
add
add
inc
xor
hlt
cmp
ja
or
mov
jmp
lret
or
sub
inc
lock
sub
pop
or
dec
clc
cmp
add
inc
and
or
sahf
jge
add
jge
sti
jne
andl
mov
sub
mov
mov
adc
push
add
add
adc
inc
or
daa
pushl
pushl
pushl
add
sub
add
dec
or
or
xor
bound
inc
add
jne
call
sub
add
ret
ret
sbb
sub
test
jmp
or
sub
or
dec
sub
xor
sub
dec
cld
mov
hlt
mov
mov
sbb
add
rcll
sbb
add
sub
pusha
adc
mov
andl
mov
mov
mov
sbb
mov
mov
mov
mov
or
dec
sbb
and
sub
bound
mov
je
pop
push
cmp
adcl
sbb
mov
mov
mov
add
and
sub
dec
lock
jae
or
sub
dec
and
add
inc
shr
mov
sub
inc
lock
mov
mov
mov
push
int3
add
nop
add
xchg
test
jmp
cmpl
jb
add
and
dec
in
mov
or
mov
or
dec
sbb
dec
clc
mov
or
sub
mov
add
mov
add
mov
mov
pushl
pushl
mov
pushl
add
add
inc
in
mov
adc
adc
sbb
xor
add
mov
pop
not
aam
enter
inc
enter
add
adc
je
xor
cmpl
setne
lea
mov
mov
jmp
rolb
xchg
inc
or
dec
in
dec
adc
in
add
in
aam
inc
call
orl
and
jmp
jno
adc
call
add
cwtl
rorb
cld
movzbl
add
add
or
or
inc
call
inc
call
and
sub
mov
and
mov
lea
add
add
mov
es
add
cmp
movzbl
add
rolb
dec
call
call
loopne
jge
add
cmp
mov
rorb
pusha
add
in
add
add
ds
je
or
sub
sub
xor
shrb
cmp
mov
lea
test
mov
je
cmp
push
cmp
js
movl
movl
pop
xor
rolb
push
dec
filds
jp
sub
dec
aam
call
mov
and
adc
sbb
sbbb
rclb
dec
aam
pop
mov
movl
xchg
lcall
pushf
sbb
repnz
and
movl
add
mov
sub
mov
aas
sub
add
sub
sub
add
hlt
xor
add
jmp
mov
cmpl
je
add
test
mov
subb
cmp
jne
or
cmp
je
mov
lret
adc
push
push
lret
mov
and
mov
movsb
xchg
add
mov
inc
sarb
jg
sub
inc
in
cs
mov
js
add
mov
mov
mov
mov
mov
inc
pushf
hlt
inc
or
dec
dec
push
push
loope
in
jne
dec
rorb
in
inc
add
sub
add
setns
inc
pop
scas
mov
imul
inc
mov
sbb
mov
in
inc
add
dec
mov
inc
mov
lods
pop
lods
mov
or
add
call
call
mov
arpl
dec
inc
lods
repnz
mov
jns
xor
cmp
ja
dec
or
xlat
cmc
sub
adc
mov
inc
adc
add
add
pop
add
loopne
ret
lea
add
inc
add
inc
add
sbb
out
sbb
add
add
add
inc
add
inc
add
and
mov
and
popf
outsl
add
test
push
and
pop
pop
add
shll
cmp
into
dec
cmp
cmpl
je
and
pushl
xor
test
sbb
sbb
xchg
push
add
sbb
adc
pop
sbb
sub
sbb
andl
or
push
push
or
pop
das
jp
aam
pop
sbb
lahf
sarb
nop
or
mov
add
push
lcall
idivb
add
shlb
jne
and
pop
xor
jmp
incl
pusha
sbb
jne
pop
aaa
sub
sub
jne
mov
pushl
or
xor
pop
dec
xor
add
lahf
std
inc
sub
push
cld
mov
push
dec
or
dec
cmp
and
jne
xchg
adc
adc
jl
cmpsl
ds
and
int
xor
cmpsb
lods
hlt
add
into
call
adc
mov
subl
sbb
jge
or
xchg
dec
test
and
aad
inc
add
mov
into
jbe
mov
mov
loop
mov
mov
add
sub
jno
jecxz
jbe
jbe
fnsave
orl
push
mov
and
lret
loopne
add
add
call
movsb
je
cmpl
je
cmpl
je
cmp
movsb
add
test
add
sbb
call
add
in
orl
or
inc
jno
sub
call
or
add
dec
or
lea
push
lea
push
lea
push
lea
lock
push
rolb
pushl
ja
faddl
and
add
sbb
or
add
popf
add
add
jne
movl
sbb
inc
fisubl
int3
cli
or
pop
cmc
xor
clc
push
roll
jge
and
sbb
rol
call
lock
jmp
and
jo
test
xchg
daa
dec
daa
mov
test
andl
mov
mov
inc
mov
neg
sbb
dec
sahf
or
mov
aam
clc
or
sub
sahf
mov
cs
cld
aaa
add
pop
push
mov
mov
mov
mov
aad
push
in
cld
cmpb
mov
pop
cwtl
pop
lock
je
cwtl
mov
push
sub
mov
xchg
test
pop
cld
aaa
pop
inc
push
add
inc
clc
jbe
mov
pop
mov
jne
insb
fs
call
sub
sbb
hlt
call
inc
add
inc
call
pop
push
pop
sub
sbb
mov
and
and
in
push
mov
mov
mov
inc
sub
add
add
jnp
and
cmp
ja
mov
shr
addr16
add
pop
add
sbb
mov
add
test
shll
orb
pushl
push
inc
or
loopne
sbb
or
or
repnz
push
push
in
orl
pop
xchg
or
andl
ds
inc
add
xlat
push
add
call
mov
cmp
jae
sub
dec
or
add
mov
mov
mov
addr16
or
and
out
dec
pop
aas
add
adc
sbbb
es
add
inc
dec
or
and
adc
shrl
inc
adc
inc
sbb
or
add
push
push
adc
pushl
adc
add
sbb
xor
add
mov
sbb
sahf
pcmpeqb
adcb
jge
std
jne
mov
and
push
push
mov
push
xor
scas
out
sbb
cmp
stc
xor
sub
sub
cmp
sbb
push
mov
lock
mov
ret
jl
es
sub
rolb
add
enter
adc
adc
sar
mov
mov
adc
jmp
cmpl
adc
enter
movl
sbbb
nop
mov
xchg
enter
rorb
in
orb
inc
in
push
dec
pop
mov
and
orl
add
mov
es
es
sbb
add
or
add
mov
and
mov
shr
and
add
mov
push
cmp
ja
jns
test
daa
or
jae
sar
das
scas
mov
inc
jmp
mov
mov
mov
jmp
andl
mov
jns
xor
ret
mov
les
and
test
loope
dec
int3
mov
and
andl
mov
or
movl
stos
and
add
in
lea
push
lea
push
lea
push
lea
cmp
sbb
lcall
add
xor
les
mov
jge
test
jb
shl
pusha
xor
sar
mov
jne
pop
mov
cmpl
push
jne
lds
mov
inc
rclb
jno
or
lock
cmpsb
jg
je
test
and
rcr
xchg
xchg
mov
cmp
mov
mov
js
add
repz
scas
bound
shll
push
cmpsl
rorb
fs
outsb
test
mov
ss
push
test
ss
lods
pop
mov
pop
xchg
mov
aam
mov
jl
gs
shlb
aad
pop
lahf
push
cli
leave
ret
sbb
add
add
inc
add
inc
add
inc
add
das
inc
add
xor
add
ss
add
aaa
inc
add
cmp
jae
inc
jmp
jle
pushf
int
mov
jl
xor
mov
add
inc
popa
addr16
clc
idiv
add
add
cld
out
push
or
mov
mov
pusha
test
xor
test
inc
mov
mov
mov
add
add
mov
jne
mov
inc
or
adc
andl
xor
jmp
add
xor
mov
mov
mov
movl
push
or
push
or
push
cmpl
cmpl
je
jmp
jmp
adc
cmp
add
pop
adc
sbb
movl
adcb
xchg
cmpl
je
mov
dec
loop
inc
movsb
mov
add
movsb
mov
or
lea
mov
xor
inc
mov
or
xlat
adc
lock
adc
clc
or
pop
or
mov
dec
lock
push
jns
push
pop
add
rorl
pop
sbb
add
andl
mov
lea
lea
andl
or
inc
dec
xor
imul
addb
loop
movsb
cmc
xchg
sub
dec
clc
add
add
mov
test
je
adc
mov
mov
add
mov
mov
inc
sub
movsb
cmp
jb
mov
test
movsb
lcall
dec
hlt
jbe
fsubs
add
test
movsl
push
push
push
push
or
dec
sbb
inc
out
add
mov
movsl
adc
or
add
rorb
xchg
and
add
sub
mov
bnd
call
add
push
sub
mov
push
sub
adc
jbe
cmpsl
mov
jmp
sbb
mov
push
xor
xor
pusha
pop
inc
lods
inc
cmp
jbe
add
inc
mov
pop
inc
lea
es
pop
jae
or
jne
sbb
mov
push
ljmp
jmp
push
sub
xor
icebp
add
lods
movsb
dec
mov
mov
add
cmp
addr16
sub
lea
bound
or
test
lea
mov
add
mov
cmpl
je
and
test
add
test
decl
sub
sub
inc
or
cmp
movsb
shr
ficomps
mov
sar
sub
push
or
cmpsl
mov
test
mov
sub
or
mov
add
or
mov
adc
inc
cld
addb
add
cmp
jb
mov
jmp
or
inc
adc
mov
cmp
clc
cmpl
shlb
adc
addr16
xor
or
es
add
add
sub
pusha
mov
push
adc
add
xor
cld
xor
inc
jg
xchg
ret
xchg
xchg
add
push
jmp
out
sub
adc
and
in
or
roll
pop
push
and
fs
bound
push
xor
fs
or
inc
movsb
and
les
movsl
add
cs
or
loopne
mov
xor
or
or
cmp
je
mov
jo
lcall
xor
lret
add
jge
add
add
cmpl
je
cmpl
subl
and
andl
inc
add
xor
andl
push
push
cmpsb
add
shrl
push
pop
jmp
jnp
cmpsb
add
lea
push
pushl
adc
or
adc
sub
testb
hlt
std
mov
movl
jmp
cmpl
in
adc
or
cmp
jne
sbb
jle
into
js
jnp
jbe
mov
xchg
push
and
xchg
or
lcall
popf
and
cmp
add
inc
add
add
inc
testb
adc
inc
push
add
shlb
mov
cmpl
rorl
lds
adc
xor
or
jg
pushl
push
cmp
lahf
orb
dec
adc
addl
popa
cmpl
sub
add
xor
jmp
inc
lock
inc
add
sbb
sbbl
jmp
adc
gs
fmull
adc
add
inc
js
shl
movl
mov
in
dec
imull
lea
mov
les
or
sbb
in
cmp
js
or
prefetcht0
in
lods
mov
out
sbbb
in
or
ficoml
add
push
mov
cmpl
jae
sbb
jno
add
add
jecxz
and
in
rorb
jne
notb
dec
push
inc
or
scas
add
aam
jne
push
sbb
int3
mov
lret
test
dec
in
in
rorb
inc
add
in
inc
ret
int3
dec
mov
jmp
sub
mov
sub
aam
loopne
je
or
and
xchg
aam
dec
call
clc
mov
add
mov
pop
leave
xchg
stc
and
in
divb
mov
lock
mov
or
add
aam
into
fsubl
add
inc
int3
sub
loopne
sub
popf
enter
sbb
sub
sub
sbb
and
gs
loopne
jb
or
push
adcb
loopne
fdivrs
inc
aam
push
mov
pop
fsubrs
test
clc
aam
mov
jne
cmp
jbe
sub
jne
jmp
and
stos
push
std
push
pusha
jmp
orl
inc
jne
popf
mov
stc
lods
rorb
into
ret
cmp
lock
sub
fidivs
jne
add
cmp
jae
or
push
mov
sbb
fadds
andb
in
cld
mov
shl
jne
sbb
or
rcrl
mov
add
rcrl
test
adc
addb
mov
and
add
or
or
in
in
or
add
jl
je
imul
shrb
inc
or
std
sub
rolb
cmpsb
pop
xchg
push
int
daa
movsb
jg
mov
mov
mov
movsb
int
incl
ret
add
cmpl
jae
mov
lods
jecxz
or
push
lods
and
jne
push
inc
mov
lock
adc
jb
add
xor
and
shr
xor
mov
lret
incb
inc
push
sbb
into
mov
jmp
or
push
aam
cmp
inc
adc
cmp
pop
jl
movsbl
xor
popf
lods
or
jg
stc
or
jg
fildl
push
cmpsl
mov
imul
les
push
add
shr
dec
inc
mov
xor
dec
or
das
or
add
cmc
fnstenv
xor
imul
shr
jmp
add
cmp
pop
movsbl
clts
inc
fildl
mov
mov
inc
pop
cmp
or
inc
std
ss
cli
push
int
mov
mov
jge
and
add
xor
add
cmpl
add
add
jae
mov
cmp
movl
and
cld
mov
xor
xchg
pop
cld
adc
mov
mov
jbe,pt
les
outsb
add
sbb
add
lock
or
push
orl
or
or
push
pop
or
or
jl
adc
or
loopne
lock
or
rorb
add
lods
cld
ret
adc
or
call
mov
sahf
lods
push
xor
cmp
add
in
gs
mov
xor
mov
div
mov
clc
sbb
ret
dec
xchg
adc
daa
jge
lahf
jl
and
je
sub
add
sub
adc
aas
bound
push
mov
xor
add
cltd
cmpl
jne
push
pop
jmp
or
add
jg
andl
mov
mov
xor
add
ret
mov
mov
rcrb
sbb
and
test
and
popa
and
push
adc
jp
mov
cmpl
je
sbb
test
inc
sub
cmpsl
or
jo
add
push
inc
pusha
sbb
sbb
addb
jmp
cmp
hlt
add
add
add
inc
hlt
movsbl
movsbl
push
cmpl
je
push
mov
adc
inc
cld
icebp
jmp
sbb
in
js
xor
movl
pusha
sub
mov
out
lods
add
sbb
or
inc
mov
nop
pop
jmp
push
or
jge
mov
mov
push
cmp
rcll
or
jge
movd
sbb
and
arpl
mov
adc
adc
or
fcoms
not
and
push
in
adc
aaa
adc
push
adc
add
add
cld
pop
jmp
or
or
push
sub
pop
dec
mov
fs
lret
cltd
xor
sbb
std
cmpl
cmpsl
hlt
dec
add
mov
hlt
jmp
inc
or
inc
clc
adc
adc
adc
lock
jo
jmp
sbb
mov
inc
std
lcall
fnstsw
jg
add
inc
jns
int3
sbb
outsb
scas
or
or
je
mov
add
xor
dec
inc
add
je
inc
shr
popa
adc
orl
inc
adc
mov
inc
jmp
adc
loop
incl
push
push
sub
mov
xor
push
pop
div
test
dec
push
in
adc
xchg
cld
and
les
adc
outsl
sbb
lods
in
shl
inc
mov
stos
test
pop
mov
adc
or
mov
loope
adcb
mov
dec
fs
adc
fs
fs
dec
cmpb
inc
or
push
adc
push
pop
movb
adc
call
add
xchg
pop
cmp
pushf
mov
adc
jne
sbb
and
loop
cmp
push
dec
shrb
cmpl
in
sbb
rolb
jne
mov
loop
insb
ljmp
out
dec
push
mov
stos
dec
sub
sahf
push
stos
fs
push
fs
and
inc
push
jb
push
cmp
jns
adc
inc
sbb
dec
push
pop
repnz
inc
jmp
stos
dec
adc
shll
rolb
push
pop
jmp
addl
add
cs
push
leave
ret
mov
inc
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
add
add
mov
sub
push
inc
add
push
inc
add
inc
add
push
inc
add
push
add
push
inc
sub
ljmp
aas
add
jge
add
add
add
ret
rorl
movb
add
add
and
movb
xor
xor
or
adcb
inc
cld
and
cmp
push
addb
add
push
jle
adc
cld
pushl
add
imul
add
cmc
adc
push
add
insb
lock
xchg
rorb
sbb
jbe
pop
and
sub
cmc
jle
dec
mov
movb
and
hlt
mov
mov
mov
sub
push
hlt
stos
add
inc
dec
hlt
and
mov
movzbl
test
je
jno
or
mov
hlt
cltd
hlt
movb
and
inc
mov
iret
es
jno
hlt
cld
sbb
pop
mov
adc
and
push
mov
jmp
je
es
mov
rclb
dec
imul
sbb
loop
ss
imulb
test
pop
dec
mov
mov
test
je
incb
add
addb
sbb
daa
or
test
je
mov
mov
or
inc
or
sbb
push
es
push
xor
jmp
scas
pop
mov
test
dec
outsb
or
iret
jne
dec
mov
sahf
and
jmp
subl
jp
cmp
add
add
add
push
xor
jmp
jmp
les
push
dec
ja
push
pop
jmp
jmp
jae
insb
xor
pop
sbb
sub
add
mov
jmp
pop
into
sbb
sbb
sbb
add
adc
xor
lea
push
movsl
adc
lods
sub
nop
xor
pop
mov
movb
mov
add
inc
lock
divl
jmp
mov
jne
mov
cmp
jbe
adc
adc
add
inc
sbb
inc
sbb
inc
clc
pushl
mov
add
push
aam
stos
pushf
movsl
es
sbb
inc
xor
add
cld
pop
loope
push
pushl
push
push
lea
mov
dec
loopne
dec
or
les
jne
cltd
push
add
and
add
sarb
jb
pusha
xor
inc
sub
loop
xchg
pop
jge
adc
mov
sbb
and
pop
adc
or
pop
test
mov
mov
mov
mov
add
test
je
or
jmp
mov
add
dec
repz
mov
movl
call
mov
push
cmp
mov
jne
test
clc
inc
inc
hlt
fdivp
cmp
in
or
jbe
jo
xchg
mov
or
cld
adc
cmp
in
in
popa
jbe
movl
popl
sbb
ret
inc
loopne
in
mov
aam
pop
sbb
adc
cmp
je
jmp
out
add
shlb
mov
test
jl
mov
add
dec
pop
loope
mov
push
jne
add
add
add
movsl
sub
push
insb
in
and
fidivrl
clc
jmp
jmp
mov
inc
xchg
push
pop
dec
pop
adc
xchg
or
clc
jne
in
mov
push
fldt
or
dec
push
andl
cmp
pop
flds
pop
orl
lret
mov
sbb
dec
push
pop
or
pop
jo
sbb
sbb
sbb
mov
or
lcall
push
mov
push
lods
sbb
jne
cmpl
xor
pop
test
cltd
cmp
cmp
out
dec
cld
xchg
push
ja
add
cmp
jae
cmpl
shll
je
inc
dec
xchg
jae
sub
mov
xorl
loope
pop
je
test
inc
test
xchg
add
push
mov
clc
push
pop
lea
movsl
pushl
call
mov
pop
in
shrl
dec
xchg
inc
rsm
sarl
sbb
out
or
xor
push
inc
int
mov
cltd
xchg
shll
les
js
or
cld
and
shr
dec
adc
and
add
pop
jmp
adc
and
push
and
adc
add
orl
sub
push
push
andl
adc
shlb
or
cmpsl
push
xchg
mov
aam
mov
pushf
ja
xchg
add
dec
pushf
incl
sub
dec
or
push
fldl
sbb
clc
push
dec
loop
add
add
inc
pushf
cmpsl
lea
sub
test
add
pop
mov
mov
mov
fcoms
mov
push
push
sub
pushl
call
pop
pop
popa
xchg
add
pop
enter
mov
test
pop
rol
cs
ret
pop
fcoms
faddl
pop
inc
pop
mov
add
add
pop
cmpl
je
mov
cmp
jae
mov
inc
adc
inc
enter
push
mov
les
add
mov
cmpl
jbe
cmpl
jbe
push
insl
cwtl
pushl
jo
ds
insl
pop
sub
add
cmpl
je
mov
cmp
xor
cmp
mov
mov
adc
dec
movsb
push
dec
jne
loopne
rorb
int3
jp
jp
aam
pusha
adc
int3
sub
add
add
inc
movsb
cmp
jge
add
add
add
out
add
out
mov
xchg
sub
pop
ret
pusha
xchg
add
pop
lea
lea
jbe
test
add
adc
lea
mov
rep
push
push
mov
mov
fwait
mov
scas
mov
js
pushl
divb
jle
lahf
fmul
xor
les
push
gs
fadds
inc
mov
mov
push
addl
and
fadds
adc
js
shrb
add
pop
dec
mov
lret
add
shlb
mov
fs
push
add
or
or
add
jge
or
add
adc
cmp
adc
mov
dec
lea
xor
cmp
mov
lahf
fcoms
bound
pop
movsl
les
jae
gs
adc
push
dec
or
jo
cs
iret
cmc
push
add
mov
hlt
and
orl
push
dec
shlb
lock
xor
sub
call
loop
pop
sbb
and
popa
pop
sbb
cs
movsb
pop
or
push
push
xor
push
aas
stos
push
sbb
ss
cmp
or
sbb
add
mov
mov
cmp
les
dec
dec
not
add
xchg
mov
mov
mov
lea
add
repz
lea
mov
sahf
test
add
clc
fs
popf
dec
mov
push
mov
pop
pop
in
or
inc
inc
inc
mov
mov
lods
or
cmp
sbb
cmp
pop
mov
push
sbb
inc
sbb
cs
stos
adc
mov
push
dec
mov
rcll
inc
aam
pop
jle,pt
inc
push
adc
xor
sbbl
sbb
xchg
rcrl
jg
mov
add
push
inc
adc
dec
or
mov
or
pusha
orb
or
dec
push
jge
add
or
dec
xor
ss
lock
rolb
mov
insl
lock
inc
dec
inc
mov
mov
cwtl
add
inc
mov
lock
mov
add
push
lock
adc
adc
inc
testl
shlb
clc
or
cmp
mov
lock
test
adc
cmp
adc
and
add
inc
insb
inc
and
dec
inc
jl
jo
push
xor
call
je
addr16
and
js
js
xor
fmull
faddl
inc
faddl
and
mov
dec
mov
add
or
and
jo
fucomi
sarb
gs
inc
push
lock
lock
lock
fs
cmovs
in
inc
push
xchg
push
fs
fwait
push
pop
push
daa
adc
dec
test
inc
ret
cmpl
clc
ficoms
inc
repz
cvtps2pi
sbb
lods
push
add
cmpsb
sbb
pop
jbe
outsl
inc
mov
jns
pop
push
fwait
add
inc
leave
clc
cmpl
jne
cmpsb
or
add
xchg
add
sub
inc
call
in
ret
scas
jne
les
sbbl
add
ja
dec
clc
add
push
mov
pushl
cs
add
pop
lods
pushl
and
mov
lods
and
and
inc
cmp
lahf
clc
push
jle
ficoml
cld
mov
mov
push
dec
jp,pt
je
clc
add
and
cmc
test
je
adc
in
inc
aam
xor
lret
add
pop
push
loopne
clc
sarb
pop
pop
mov
add
mov
jmp
lcall
clc
jo
ret
adc
fdivrp
fiadds
aad
outsl
rolb
push
add
dec
in
mov
mov
subps
mov
mov
push
adc
mov
addb
sbb
add
dec
add
add
mov
clc
movsbl
or
in
inc
or
and
test
inc
adc
inc
or
cmp
sarb
or
jmp
gs
fadds
add
inc
sbb
add
dec
adc
aam
or
fmuls
adc
xlat
pushl
mov
mov
bound
and
aam
adc
push
cmp
adc
xor
add
dec
adc
or
testl
dec
sbb
lods
addl
adc
add
push
divl
mov
enter
push
or
pop
mov
pushl
xor
mov
mov
mov
das
xchg
int3
pushl
pushl
sub
aad
push
pop
xor
hlt
cmpl
fcoml
loope
insb
sbb
and
sub
pop
out
jne
pop
add
jle
mov
call
inc
pop
repz
jns
adc
inc
push
sbb
inc
loope
xchg
loope
andl
pmullw
inc
or
pushf
xlat
add
or
dec
sbb
and
clc
and
xchg
aaa
cld
andl
add
add
xchg
cwtl
add
rorb
add
lods
xor
aad
rcr
mov
add
pop
xchg
push
hlt
mov
fsubrs
clc
mov
add
lahf
sbb
mov
or
clc
or
mov
inc
call
pcmpgtd
loopne
data16
sub
mov
movzwl
sar
or
loopne
mov
add
inc
repnz
hlt
xor
mov
loopne
adc
call
lea
mov
orb
mov
subb
xlat
or
inc
mov
xchg
je
mov
int
add
pop
loopne
add
hlt
cmpb
jne
mov
ficoml
fcoms
call
or
sub
dec
cld
mov
addb
cltd
sub
pop
xchg
in
fisttpl
adc
inc
sub
mov
fsubl
xorb
inc
add
push
adc
and
lds
sub
or
mov
lret
shlb
sti
call
aaa
add
js
pushl
cltd
jmp
mov
sbb
movsb
add
push
push
push
es
pusha
adc
add
inc
add
mov
mov
fiadds
cmpl
jne
add
or
sar
mov
mov
push
mov
clc
cmp
je
or
add
or
mov
aam
mov
insl
add
add
inc
rolb
add
mov
mov
movsl
sub
adc
or
jo
test
mov
out
test
jne
jmp
add
inc
lods
push
pop
push
inc
popl
or
push
test
pop
xor
hlt
shlb
pop
mov
aad
pop
pop
leave
mov
add
mov
jl
mov
or
or
dec
add
dec
add
aam
clc
daa
push
sbb
adc
mov
mov
fcomp
or
mov
and
mov
mov
pop
cmpsb
adc
jne
outsb
add
int
add
rorb
loope
or
mov
or
sbb
loope
loope
sbb
and
and
sub
adc
or
or
dec
adc
cmpsb
and
in
mov
mov
cmp
mov
inc
or
sbb
loopne
add
or
adc
test
call
test
call
push
xchg
adcl
add
and
lea
ss
inc
jp
pop
or
adc
push
sbb
daa
mov
bound
jno
insb
or
test
sub
and
inc
push
pushl
xorb
xchg
lea
je
nop
incl
mov
push
push
cmp
mov
pop
add
mov
push
push
rol
cmp
inc
sbb
test
add
or
sub
adc
jne
push
call
add
add
or
popl
das
sbb
popl
or
xchg
or
mov
mov
or
or
mov
rorb
jmp
jne
sbb
sub
cmp
mov
xor
arpl
mov
lahf
mov
insb
mov
mov
inc
add
xor
mov
pop
or
mov
or
aad
sub
and
test
fs
adc
add
inc
mov
movb
movb
movb
mov
and
jmp
push
or
add
je
cmpl
je
cmpl
jo
push
jne
cli
fisubrs
cmp
adc
adc
push
add
fisttpl
adc
arpl
loope
test
push
mov
add
adc
mov
repz
push
loop
mov
adcb
enter
or
mov
rorl
sub
ficompl
fdivs
push
add
pop
add
inc
fistpl
sbb
lea
mov
push
mov
push
jns
test
inc
adc
lcall
data16
rcr
inc
pop
xor
inc
aam
sbb
cmp
sbb
xchg
and
or
mov
add
adc
loope
popf
push
add
ret
adc
adc
rorl
lret
add
popl
add
inc
in
add
inc
faddl
inc
cld
mov
mov
test
test
inc
test
decb
hlt
test
cld
and
xor
leave
call
xor
xor
inc
add
or
jne
cmpb
sbbb
pop
loop
inc
add
addl
adc
sbb
adcl
mov
andl
rolb
decl
mov
add
inc
add
cld
lea
mov
loopne
loope
xor
push
add
mov
adc
test
mov
dec
adc
add
pusha
push
cmp
add
verw
cld
movzbl
shl
or
push
add
loope
push
or
loope
or
mov
mov
bound
mov
cmc
pop
mov
and
lea
jge
adc
les
cmpsl
loopne
pop
xorb
orb
or
mov
andb
orb
mov
jno
adc
movzbl
subb
push
push
or
add
add
xchg
or
or
lea
xor
adc
lea
push
xor
sub
cmc
adc
cmp
inc
jo
ljmp
popf
jne
addr16
push
or
movsl
add
mov
in
fcmovb
cmp
or
lods
inc
insl
inc
xchg
sub
mov
jl
dec
adc
sub
je
cmpl
aam
adc
mov
jo
sbb
test
add
mov
test
jnp
bound
mov
bound
test
fwait
aaa
mov
jb
sbb
cmovno
nop
jecxz
lret
or
insl
ret
cmpxchg
add
push
pop
pop
cmp
add
test
xchg
mov
inc
and
andb
pop
lds
add
push
das
push
sbb
ret
inc
and
jo
xor
mov
pop
adc
adc
jmp
int
mov
inc
or
lea
in
call
je
ffreep
pop
adc
test
push
mov
and
jl
mov
adc
lret
or
push
add
test
jne
inc
or
loopne
je
andl
test
add
add
je
or
push
test
je
pushl
cmp
push
pop
pop
jmp
adc
mov
inc
add
sbb
jno
sbb
outsl
pop
or
adc
add
add
pop
inc
cmp
add
push
or
pop
jne
insl
cmp
mov
jmp
pop
je
lcall
push
or
add
sbb
sbb
lea
sub
sbb
add
cmpw
jne
adc
inc
or
jmp
sbb
sbb
addl
mov
shrb
jle
or
pop
je
or
xchg
inc
or
popf
fs
add
add
popf
push
test
je
pushl
add
push
push
dec
adc
add
cs
push
mov
rorb
push
push
inc
push
mov
adc
aam
push
jne
cmp
gs
cmp
and
sub
inc
out
pop
mov
cmpsl
jne
adc
orb
sbb
and
fildl
or
inc
lea
pushl
sub
insb
push
nop
insl
mov
add
test
pop
pop
add
add
add
pop
add
add
aas
push
lea
or
mov
pop
data16
xor
mov
add
mov
xchg
daa
movzbl
jmp
push
add
adc
and
outsl
adc
adc
shll
pop
and
adc
inc
test
push
popf
cld
leave
sbb
dec
ret
mov
pop
pop
cmp
push
movsb
mov
adc
insl
lret
push
mov
jg
fistl
or
js
ret
jecxz
cld
aas
sbb
jbe
push
add
push
mov
push
sub
inc
inc
adc
push
lea
fs
push
repnz
push
cld
add
mov
adc
jne
mov
pop
mov
cmpb
add
gs
mov
orl
push
mov
ret
or
and
cmp
insb
inc
add
repnz
push
mov
mov
je
push
mov
add
mov
add
rolb
xor
jmp
push
pop
les
push
cltd
in
cmpsb
in
push
or
mov
rcrb
or
pop
fistpl
dec
repz
jno
lret
dec
icebp
xor
imul
mov
add
cmpsl
pop
push
jo
add
mov
pop
pop
xchg
je
imul
push
push
push
cmp
adc
add
cmp
inc
js
fxch
push
mov
add
mov
inc
or
or
jmp
das
xchg
push
pop
movsb
mov
lcall
adc
rolb
ds
inc
pop
daa
cmp
sub
daa
arpl
sbb
adc
and
jb
add
cmc
mov
mov
mov
jg
jg
jo
sarl
arpl
mov
loop
and
mov
call
inc
in
pushl
inc
mov
in
lcall
repz
jmp
add
add
push
xchg
jne
test
je
cmpl
jne
adc
incb
inc
jnp
pop
popf
push
or
rolb
stos
test
je
push
loope
ficomps
movl
mov
shlb
jne
jmp
add
jmp
cmp
pop
ret
push
push
pushl
add
lret
inc
add
sbb
jns
mov
xchg
adc
inc
jns
mov
pop
cmpb
lea
sbbb
or
xor
ja
push
xor
push
or
jbe
inc
aaa
and
add
inc
sub
call
in
push
mov
cmp
ja
mov
mov
add
call
push
call
add
mov
add
add
test
je
add
add
mov
jmp
xor
inc
push
jmp
cmp
jne
jg
xor
test
jne
add
push
add
jae
mov
test
jne
push
pop
cmp
add
test
je
jge
jne
add
pop
add
mov
add
push
pop
mov
pop
jmp
pop
lea
adc
leave
push
sti
or
je
repnz
lea
jne
cmp
je
aam
je
aaa
stos
or
push
stos
or
mov
pop
mov
add
add
pop
or
cmpl
push
mov
je
movzwl
test
je
movzwl
sub
add
or
sbb
mov
pop
sub
mov
or
mov
sub
jne
inc
inc
data16
add
cmp
jne
cmpw
je
inc
inc
movzwl
inc
inc
test
jne
xor
pop
pop
pop
ret
mov
jmp
xor
pop
jmp
mov
push
push
push
inc
add
icebp
call
movl
mov
pop
ret
movl
movsl
sub
adc
xor
icebp
sbb
movsl
testb
je
add
pop
pop
ret
es
dec
pop
orb
sbb
in
or
jg
addb
or
jg
out
ret
testb
mov
loopne
inc
add
orl
push
xchg
popa
push
push
lea
inc
push
fcoml
or
js
fs
gs
pusha
add
sub
pop
ret
push
push
mov
add
push
loopne
push
call
push
pop
mov
mov
data16
add
cmp
jne
mov
cmpl
or
add
add
push
mov
push
sbb
add
jbe
xor
cmp
setne
mov
mov
in
add
inc
push
loopne
orb
sub
lock
movsl
adc
cwtl
add
mov
pop
aaa
xchg
cmc
test
jge
push
sahf
addb
lods
xchg
sbb
lods
xchg
cwtl
mov
cld
iret
sbb
xchg
ljmp
add
or
or
jb
push
pop
cmp
je
sbb
add
add
jne
pop
les
mov
enter
or
push
push
push
add
add
cmp
jne
mov
add
mov
jmp
filds
adcb
or
call
pop
pop
ret
mov
popa
mov
add
sbb
add
jmp
xor
inc
sub
mov
jg
mov
lahf
xor
add
jbe
scas
sub
mov
mov
add
or
add
add
hlt
popa
inc
add
sbb
data16
adc
sbb
push
and
call
inc
add
add
or
mov
mov
jl
add
inc
add
inc
add
add
add
inc
add
add
or
rol
add
add
test
cld
jmp
std
les
push
popa
inc
add
lcall
adc
push
cld
test
and
pushf
sbbb
push
dec
call
mov
add
add
xor
cmp
je
inc
cmp
jb
lea
cmp
ja
push
pop
pop
ret
add
and
mov
pop
ret
add
cmp
sbb
xorb
and
add
pop
push
fwait
jecxz
mov
ret
repnz
adc
rorb
xor
cmp
push
push
adc
adc
dec
daa
inc
mov
inc
mov
xor
mov
add
add
cmpl
add
rclb
mov
push
pushl
add
fsubs
test
cmp
jl
xor
inc
add
ret
andl
icebp
mov
push
mov
push
mov
adc
ds
je
cmpl
je
push
call
push
andl
add
cmp
jl
sub
push
mov
add
add
rcrl
out
pop
roll
adc
call
or
call
lret
jb
mov
xor
cmp
loop
mov
lea
cmp
je
mov
add
jmp
push
mov
cmp
jne
mov
add
test
jmp
push
jnp
pop
mov
cmp
jne
or
rorb
or
bound
bound
in
or
add
jb
in
inc
sti
push
sti
mov
push
lea
mov
inc
fiaddl
push
jp
pop
or
add
add
call
mov
mov
add
add
imul
add
jmp
mov
sub
cmp
jb
add
cmp
jb
cmpb
xlat
shrl
ljmp
adc
add
mov
push
mov
sub
add
shr
mov
imul
lea
jns
lock
dec
mov
test
jne
push
lea
mov
add
adc
push
cld
mov
mov
mov
test
jne
sar
adc
add
cmp
jbe
push
pop
mov
cmp
jne
mov
add
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
and
js
sbb
decb
jne
sbb
add
pop
or
push
or
pop
add
dec
hlt
mov
mov
mov
mov
mov
add
das
lcall
jecxz
mov
jne
xor
jne
mov
sar
push
mov
dec
pop
cmp
jbe
dec
add
add
clc
xor
jbe
mov
cmp
je
add
or
mov
or
mov
pop
mov
shr
not
and
incb
add
and
loopne
mov
jp
lcall
jno
or
xorb
dec
or
or
add
adc
cmc
jne
cmp
je
lea
mov
add
add
dec
or
add
dec
add
jno
mov
cmp
jne
mov
mov
incb
sbb
add
and
jne
mov
push
shr
mov
or
rolb
or
mov
sub
lea
sbb
sbb
dec
loopne
pminsw
decb
push
push
mov
mov
mov
add
pusha
ret
adc
test
mov
add
test
lret
loope
add
mov
push
push
call
or
xchg
xor
push
or
mov
mov
andl
decb
or
add
add
cmpb
jne
andl
adc
gs
push
pushl
call
imulb
jge
adc
jo
popf
inc
add
rorb
adc
adc
add
enter
in
push
lea
push
sub
call
xor
shrl
add
insl
or
and
inc
or
pop
pop
mov
add
add
xor
cmp
jne
add
imul
push
pushl
add
xchg
add
jne
xor
jmp
addl
adc
adc
das
push
fsubl
mov
je
push
push
pusha
orb
adc
jne
pushl
add
add
in
jmp
orl
mov
mov
incl
add
inc
add
decl
loopne
push
lds
push
push
mov
data16
adc
fucomi
add
rolb
jge
mov
imul
stos
or
push
mov
pop
mov
mov
dec
jne
push
bound
or
out
add
push
pop
gs
test
xchg
add
add
add
add
ja
mov
sub
shr
lea
inc
orl
orl
addb
cld
sldt
mov
lea
movl
movl
or
addr16
jne
mov
add
cld
push
dec
or
dec
add
inc
or
cld
lcall
sahf
and
add
xor
inc
test
mov
mov
jne
or
arpl
push
add
not
and
mov
pop
pop
pop
xor
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
add
add
cld
and
dec
cmp
lea
mov
mov
mov
push
or
add
add
ret
add
test
add
add
cmp
jg
add
cld
sar
dec
mov
cmp
jbe
push
pop
addr16
add
adc
inc
arpl
push
pop
orb
es
jmp
add
and
push
or
nop
loopne
dec
or
add
pusha
jne
mov
mov
sub
add
aaa
sbb
movsl
mov
sar
add
add
lea
cmp
pop
mov
lea
mov
mov
add
cwtl
add
mov
mov
push
dec
or
or
mov
mov
bound
inc
pop
add
jmp
jae
cmpb
iret
mov
lcall
inc
mov
jmp
sbb
lea
or
cmp
inc
or
mov
add
rcrb
mov
jmp
mov
lea
mov
mov
clc
sbb
ljmp
lea
inc
add
add
pop
or
jne
lea
mov
lea
mov
sar
dec
mov
mov
cmp
adc
add
pop
testb
jne
sbb
dec
add
dec
push
push
into
shr
lea
sub
sub
push
push
dec
mov
sbb
outsl
ja
ja
rolb
mov
jne
add
mov
xchg
add
mov
mov
dec
add
pop
or
loopne
jno
push
mov
push
add
sbb
push
mov
mov
mov
push
into
push
xchg
dec
mov
sbb
push
dec
push
inc
adc
adc
adc
add
add
add
imul
add
and
mov
sar
sarb
push
dec
cmp
push
push
jge
or
shr
insb
jmp
add
add
or
xor
shr
cmpsl
or
mov
mov
inc
add
add
push
clc
and
or
jne
add
mov
cmp
jb
cmp
jne
mov
in
and
jb
cmp
jne
jmp
cmpl
adc
rorb
cmp
jne
cmp
sbb
jb
cmp
jne
call
pop
push
add
mov
mov
test
jne
xchg
sarb
xchg
jg
pop
mov
inc
adc
mov
movsb
inc
adc
cmp
je
mov
and
iret
loopne
mov
jne
push
mov
lea
mov
cmpsl
push
xor
cld
mov
jmp
insl
add
shrb
jmp
into
jne
pop
and
push
mov
add
pop
jmp
add
inc
test
jge
mov
mov
mov
sub
mov
call
mov
jle
cmp
je
xor
dec
add
dec
or
cmp
lea
mov
sub
lea
add
add
rorl
mov
mov
jne
mov
mov
and
jmp
lea
push
lret
pusha
pop
cld
lea
jns
push
push
adc
mov
and
sub
add
dec
or
add
dec
add
jp
je
add
cltd
dec
or
and
sbb
inc
cmp
pushf
jge
cmpb
jne
mov
into
shr
or
movsb
cld
or
lds
inc
add
or
lea
dec
loopne
shr
or
mov
test
je
mov
mov
pusha
add
hlt
dec
clc
mov
add
xlat
or
jne
mov
lea
mov
add
sbb
sbb
adc
addr16
jne
andl
inc
add
cmp
nop
in
loopne
inc
add
sub
insb
and
lea
add
add
sub
push
push
push
jbe
inc
cld
xor
push
mov
std
fnstenv
ds
jle
mov
dec
lock
sbb
pop
pop
mov
pop
push
ret
int3
add
add
das
push
push
mov
xor
movb
orb
in
jnp
cmp
je
mov
add
xor
sub
es
mov
mov
mov
cmovne
testb
add
push
adc
lea
mov
mov
mov
mov
cmp
je
das
add
pop
lea
lea
mov
lea
add
movsb
ja
cmp
mov
call
movb
test
jl
jg
add
inc
inc
xor
cmp
jne
cmpb
je
mov
add
cmpb
inc
hlt
in
movl
cmc
jmp
mov
cmpl
jne
cmpl
adc
push
cmpsl
lret
add
push
add
and
push
call
sbb
movsb
add
cmp
je
push
push
inc
push
mov
or
lock
adc
dec
or
in
mov
je
push
jecxz
sbb
push
jmp
mov
call
add
addb
add
pusha
jge
push
or
add
ja
ficomps
dec
sub
xor
push
lahf
adc
call
add
sub
subl
sub
jnp
jl
cmpsl
pop
inc
sub
add
add
sub
sarb
aad
call
int3
dec
jnp
xchg
sub
cltd
push
mov
jmp
ds
add
movb
or
sbbl
xorb
shlb
push
test
je
call
and
in
mov
add
cmpl
pop
or
add
inc
int3
inc
or
cmp
inc
add
in
sub
bound
je
rolb
lret
mov
add
movl
cmp
mov
pop
je
push
add
adc
call
push
jae
sbbb
inc
cmp
je
sub
mov
mov
add
add
push
and
popf
pusha
xor
pop
mov
mov
test
je
pushl
push
adc
mov
mov
mov
sub
mov
cmp
jb
and
push
clc
lcall
divl
pushl
push
adc
movsl
lcall
mov
dec
mov
les
jge
jne
cmp
je
push
jge
or
add
popa
mov
jmp
push
mov
push
mov
pop
cmp
dec
mov
sbb
mov
and
mov
idivl
in
imul
xor
inc
xchg
rorb
jmp
mov
mov
sub
dec
pop
adcl
inc
and
adc
mov
push
lcall
add
add
stos
pop
add
add
xchg
push
test
repz
xchg
add
mov
in
pop
adcl
test
decl
add
cmp
je
inc
mov
cmp
jb
cmp
jae
cmp
call
pop
cmp
je
jne
cmpl
add
add
test
data16
xor
add
inc
je
push
mov
push
mov
add
mov
je
push
add
filds
leave
gs
add
add
add
rorb
push
push
or
incb
xor
push
add
add
pop
cmp
jbe
or
out
cmp
push
mov
jge
or
out
lods
dec
add
add
push
shlb
test
jmp
xor
push
sub
inc
add
lods
xlat
push
in
clc
xor
in
push
and
adc
add
push
xor
dec
xor
call
test
fdivrs
fidivs
sti
pushl
cmpsl
add
add
push
lea
pop
push
pushl
push
fstl
xchg
rolb
sbb
adc
pop
ja
push
push
int
rorl
jecxz
mov
mov
or
xor
jmp
add
add
lock
add
fsubp
cmp
je
add
jbe
push
pop
xor
div
cmp
sbb
inc
jne
fwait
andb
push
add
xchg
mov
imul
sahf
add
add
cmp
jne
xor
inc
xor
mov
cmp
ja
mov
dec
cmp
xchg
add
mov
sbb
add
jmp
in
fbstp
jne
push
cld
scas
dec
add
cmp
jne
push
es
cmp
jne
cmp
xorb
and
test
push
push
adc
je
add
jmp
xor
mov
cmpl
daa
je
and
add
mov
movl
mov
test
je
push
scas
or
aaa
sub
je
pop
pop
mov
adc
xor
push
jo
inc
mov
add
addr16
movl
pop
pop
filds
mov
movl
mov
add
ret
outsl
xor
inc
add
inc
or
push
je
imul
dec
rcrb
clc
inc
xchg
jp
pushl
push
add
or
add
jns
jns
add
add
and
add
pushl
jae
pop
ret
mov
test
jne
mov
fcomi
cmpsb
mov
or
js
push
movl
lds
adc
xor
xor
inc
or
rorb
add
add
pop
sbb
pop
inc
pop
push
push
push
push
mov
shrl
and
adc
testl
sub
lea
cmp
jb
add
ret
mov
lea
pop
cmp
jae
pusha
cmp
jae
mov
add
out
scas
or
jb
sub
sub
push
push
lea
cmp
jb
adc
add
xor
add
mov
mov
add
out
rclb
sbb
mov
incb
mov
loope
jb
inc
sub
cmp
pop
pop
ret
andl
push
pop
push
shrl
add
nop
cmp
std
cmp
cli
xchg
pop
call
movsb
bswap
sub
mov
pop
dec
in
in
add
add
add
pop
mov
lea
rep
imul
inc
cld
pop
add
sbb
hlt
add
add
jmp
testb
xchg
inc
jnp
push
cmpl
adc
jne
mov
and
add
je
cmp
and
pop
cmp
jnp
test
xor
lret
push
and
ret
pushf
push
push
sbb
testb
inc
add
adc
cli
push
pop
mov
or
je
mov
imul
add
add
cmp
jb
imul
add
cmp
jae
cmp
jne
mov
jo
lret
lock
mov
setae
sti
add
jne
cmp
adc
add
and
pusha
jo
or
dec
pusha
mov
andl
ljmp
mov
mov
sbb
add
stc
cmp
jge
imul
mov
andl
mov
add
add
add
add
cmp
jl
mov
mov
mov
cmp
jne
movl
xchg
pop
cmp
dec
cmp
sbb
push
jmp
cmp
cs
adc
orb
cmp
push
cmp
js
pop
movl
push
call
pop
mov
jmp
in
dec
or
call
mov
pop
mov
or
and
xor
xor
mov
out
stc
and
in
or
daa
jecxz
cmp
jne
xor
or
sbb
test
sete
mov
inc
inc
jmp
and
inc
inc
sub
leave
jne
inc
add
test
mov
test
jne
add
jg
cmp
je
inc
mov
je
add
mov
test
jne
or
add
mov
pop
mov
sub
mov
inc
pushf
addb
aaa
mov
inc
cmpw
pop
je
push
xor
mov
lds
mov
dec
sbb
dec
sbb
ret
add
xor
lretw
mov
push
fcoms
or
andl
movl
add
pop
pop
ret
pushl
mov
or
adc
xor
loope
adc
add
add
push
or
dec
or
xor
cmp
jne
mov
sub
add
add
inc
inc
mov
pop
jmp
incl
test
je
mov
mov
inc
inc
movzwl
inc
pop
inc
pop
push
leave
je
adc
push
cmp
inc
sbb
test
je
loop
shlb
shlb
xchg
jp
cmp
je
or
jmp
cmpsl
and
in
dec
dec
jmp
pop
addl
inc
xor
jmp
inc
inc
inc
cmpw
je
cltd
cmp
add
je
lea
cmpw
pop
or
incl
xor
cmp
mov
cmovp
add
shrb
in
addl
mov
add
add
mov
pushl
divb
inc
inc
jmp
test
je
and
dec
xor
adc
popf
push
and
mov
je
mov
incl
je
mov
add
inc
add
shlb
push
mov
inc
push
xchg
cwtl
add
lcall
cmp
je
mov
cmp
jne
mov
add
rclb
xor
mov
call
mov
pop
pop
cmpl
jae
mov
cmpl
add
add
add
cmp
jb
adc
pushf
mov
pop
test
je
add
cmp
inc
lea
push
lea
inc
inc
cld
dec
pop
mov
pop
mov
sbb
jp
add
adc
add
xor
cmp
sbbl
cmp
je
inc
inc
cmp
jne
add
addb
sub
inc
push
inc
mov
mov
test
jne
push
das
adc
adc
adc
pop
pop
ret
push
push
mov
pop
jmp
jmp
push
iret
push
lea
push
call
sbb
push
pop
or
inc
ret
test
test
lea
add
inc
mov
add
orl
movb
mov
movb
movb
add
and
or
xor
add
mov
cmp
inc
stos
mov
jb
cmp
sahf
add
jl
je
pop
add
add
mov
mov
sub
jl
mov
movl
or
push
lea
dec
loopne
or
push
mov
addl
and
xchg
jl
pusha
and
add
sbb
xchg
andl
xchg
adc
cmp
jb
incl
cmp
aas
jl
jmp
mov
cmp
jle
add
test
fimuls
cmp
je
cmp
je
mov
test
je
sahf
add
add
call
mov
mov
add
add
ret
shl
add
push
mov
mov
cld
dec
xchg
or
invd
add
daa
test
and
or
inc
loopne
addl
cmp
jl
xor
mov
add
inc
xor
pushl
push
orb
jmp
mov
add
inc
add
test
negb
or
shl
addl
cmp
je
test
je
push
fwait
xor
and
lock
icebp
cmp
jne
inc
jmp
add
orb
xchg
je
incl
jmp
jge
inc
add
movl
add
mov
xor
lock
add
jo
or
jo
mov
shlb
mov
cmp
jae
mov
cmp
jne
loope
jb
pop
iret
push
mov
dec
lock
push
xchg
mov
mov
pop
sub
and
je
les
call
call
arpl
fisubrs
daa
mov
push
or
loop
push
mov
sbb
or
and
inc
dec
jae
or
pop
pop
ret
rcrb
adc
push
pusha
imul
mov
ja
adc
ja
jne
pushl
add
jae
and
push
push
decl
addl
cmp
lcall
rolb
cs
enter
push
push
call
ss
subb
dec
push
push
add
or
or
inc
pop
mov
inc
orb
mov
and
mov
and
adc
jge
lcall
jo
lahf
add
add
inc
movb
movl
push
xchg
test
pushl
call
cmp
jo
push
pop
dec
fcoms
stos
jbe
insb
movsb
mov
add
jbe
call
icebp
fisubl
sbb
sarl
jne
pop
sbb
mov
lret
incl
dec
xor
shlb
push
fisubrl
add
pushl
sbb
dec
adcb
call
decl
add
and
adc
dec
adc
ret
mov
push
pop
jns
je
mov
ret
push
mov
sub
xor
cmp
das
mov
inc
or
rorl
lea
jle
test
je
push
call
pushl
mov
jnp
adc
mov
test
je
sub
scas
je
cmp
roll
add
aas
add
mov
xor
and
inc
xchg
mov
call
or
mov
mov
je
push
or
pop
mov
insb
add
rorl
fs
call
cmpl
add
je
cmpl
inc
inc
and
data16
xchg
add
movl
ror
cmp
mov
je
cwtl
int3
rclb
test
mov
mov
jae,pt
and
bound
cmovg
pop
stos
or
add
insb
call
jecxz
test
jnp
inc
add
mov
testb
frstor
cmp
mov
lcall
sbb
adc
add
push
push
mov
mov
cmp
je
test
je
not
mov
cmp
pusha
push
cmp
adc
mov
jne
xor
call
pop
fadds
jmp
pop
pop
adc
xor
xor
cmp
jne
mov
jmp
test
jne
mov
add
jo
es
not
mov
leave
ret
andl
xchg
popf
dec
in
push
sbb
push
inc
clc
dec
scas
mov
andl
aam
push
aam
in
dec
jns
push
addr16
in
mov
insl
shlb
les
test
loopne
or
add
fadds
rolb
mov
data16
push
popf
filds
ret
movsl
add
add
mov
mov
pushf
popl
lea
adc
test
dec
lea
cmpb
dec
cld
mov
jmp
xchg
pop
fwait
lods
insb
mov
repz
mov
mov
lea
jne
test
jne
push
jne
or
inc
inc
lcall
xor
pop
adcb
movsl
xor
pop
jmp
dec
mov
ds
lahf
fbld
out
pop
push
push
mov
adc
jmp
or
fiadds
or
xor
cmp
adc
cmp
int3
sarl
or
cmp
call
std
mov
add
fisubs
cmp
jbe
push
or
dec
mov
cmp
jmp
lock
jne
mov
test
fs
pop
mov
dec
ret
add
lock
mov
xchg
sub
inc
or
rclb
or
add
cmpb
mov
push
rorl
push
adc
clc
jb
jb
or
add
cmpl
push
and
and
cmp
pop
pop
jne
pop
pop
add
add
ret
lods
jne
shr
and
cmp
jb
add
add
rep
jmp
nop
mov
mov
jb
and
add
jmp
or
lea
inc
add
daa
sbb
inc
add
inc
sbb
add
add
rorl
inc
add
add
jmp
add
add
add
sub
pop
lea
and
add
add
test
and
add
add
add
add
sbb
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
mov
add
inc
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
lock
and
adc
hlt
or
inc
add
mov
add
or
pop
pop
leave
ret
nop
mov
mov
add
mov
sbb
in
and
cld
pop
test
arpl
add
test
jmp
fcos
and
inc
mov
mov
stc
xchg
sub
nop
dec
add
add
inc
add
mov
add
mov
sub
out
push
mov
sub
stos
rorb
or
test
inc
add
add
push
incl
add
add
lea
inc
mov
add
add
add
add
add
add
add
add
inc
xchg
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
mov
and
add
insb
mov
mov
mov
add
adc
or
mov
mov
or
pop
lds
add
sbbb
int3
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
mov
sbbl
mov
fs
sub
call
or
dec
and
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
out
or
mov
cmpl
jne
xchg
mov
sarb
adc
dec
mov
mov
pop
add
sbb
dec
and
testl
daa
mov
inc
and
mov
xor
adc
push
mov
pop
test
sub
test
jecxz
add
adc
and
mov
mov
dec
and
mov
pushl
pushl
or
es
pushl
sub
push
push
push
mov
xor
mov
call
pop
jo
ljmp
mov
or
dec
sbb
jmp
lcall
aad
pop
mov
add
fcomps
ret
push
mov
push
push
pushl
jb
inc
mov
or
pop
es
dec
or
je
or
inc
cmp
roll
loope
subb
sbb
xchg
ret
pop
popl
add
add
inc
or
movzwl
push
push
movzwl
xor
push
lea
test
add
add
jbe
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
or
dec
dec
push
push
hlt
jmp
arpl
cmp
sub
jns
clc
loop
test
gs
in
or
cmp
push
mov
sub
adc
jnp
les
mov
shrl
lds
call
loopne
mov
and
mov
shlb
xorb
add
cmc
das
stos
mov
jnp
add
decl
cltd
xchg
add
pop
mov
cmp
jb
pop
xor
cmp
add
pop
mov
test
je
js
jmp
inc
mov
loopne
loop
add
rolb
add
test
push
push
rorb
clc
hlt
or
test
or
add
sub
add
add
addl
or
xor
je
mov
imul
add
add
cmp
jb
imul
add
pop
and
cmp
jae
push
lahf
pushl
inc
xchg
ret
push
push
clc
mov
or
je
mov
push
sub
add
pop
sub
je
sub
je
sub
je
sub
jne
jae
lcall
stos
dec
mov
mov
pushl
mov
jae
mov
fldl
add
jmp
mov
sub
je
sub
je
dec
je
aas
jecxz
scas
cmp
cmpsb
adc
cmpsb
jmp
scas
mov
inc
mov
repz
cmc
mov
add
inc
in
xor
pop
or
loopne
push
pop
or
pop
mov
jnp
pop
xor
add
add
or
cmp
jne
mov
mov
mov
cmp
jne
scas
and
inc
mov
mov
movl
out
leave
dec
push
cmpsl
or
cli
mov
dec
fdivrl
mov
movsb
add
andb
pop
mov
incl
jmp
mov
mov
shrb
adc
pop
pushl
push
call
pop
jmp
xchg
jge
cmpsl
xchg
mov
adc
sbb
pop
inc
xchg
push
ss
fs
mov
mov
adc
mov
push
push
sub
xchg
lcall
cmpl
dec
mov
inc
adc
aam
fldt
push
fucomi
mov
dec
adc
cltd
xor
add
movl
call
adc
adc
add
xor
adc
adc
adc
mov
and
je,pn
push
into
testb
dec
cmp
out
cmpb
mov
lcall
test
je
test
je
pushf
je
lea
push
push
lea
push
push
push
call
add
lock
testb
jne
orl
jmp
mov
xchg
cmp
je
dec
jns
adc
jbe
cld
mov
push
pop
test
sbb
out
cmp
xor
pop
jp
int3
and
mov
xor
push
push
enter
sti
ja
push
add
pop
jns
push
pop
mov
push
add
mov
jmp
add
add
jne
cmp
jne
mov
jmp
mov
cmp
je
inc
dec
jne
cmp
je
mov
mov
inc
inc
add
je
dec
jne
cmp
jne
mov
pop
mov
loopne
pop
or
icebp
jmp
jae
xchg
or
fldt
cmp
dec
adc
pop
or
adc
cmp
add
add
mov
cmp
push
jmp
mov
cmp
or
cmpl
mov
cmp
add
jne
mov
mov
inc
inc
cmp
je
dec
jne
jmp
push
or
add
adc
and
cmp
mov
cmp
jne
xor
pop
inc
and
push
mov
lods
push
jbe
mov
enter
rcrl
add
je
pusha
test
adc
rorb
add
add
mov
add
xor
xor
add
test
je
mov
test
je
test
je
mov
add
incl
je
sti
pushl
int
inc
ljmp
cmp
gs
ret
lea
or
or
shrl
mov
lret
xor
nop
mov
jo
inc
inc
cmp
mov
mov
push
sbb
test
addr16
xor
sahf
add
idivb
into
jl
cmp
jle
cmp
jne
mov
adc
addb
or
pop
add
push
push
sbb
enter
mov
add
and
mov
xor
mov
test
jne
cmp
jae
lds
add
stc
cmp
jb
neg
and
je
or
add
sub
mov
sbb
add
mov
or
add
add
mov
and
shr
je
rep
test
je
test
add
daa
ljmp
mov
lahf
js
cmp
dec
pop
mov
add
pop
test
je
mov
mov
jbe
cwtl
push
cmp
jne
mov
mov
xchg
add
pop
pushl
add
push
scas
jle
mov
push
mov
and
lds
sub
inc
movb
cmp
jne
or
je
cmp
jne
or
je
add
add
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
add
add
add
ret
test
add
jne
addl
pop
add
add
shlb
add
mov
add
add
shlb
or
je
add
jmp
push
push
add
xor
mov
fisttps
xchg
sarb
jne
mov
dec
pop
movsl
scas
pushl
mov
mov
jmp
cli
push
dec
jno
lret
addb
je
mov
sub
mov
jmp
mov
mov
mov
mov
cmp
jne
push
ret
std
or
scas
lock
test
xor
push
xor
xchg
nop
push
xlat
je
mov
cmp
ja
iret
pushf
test
xor
jne
or
mov
fwait
add
aam
lret
add
mov
inc
inc
inc
inc
cmp
je
dec
jne
xor
cmp
jne
mov
mov
outsb
inc
and
mov
imulb
inc
or
clc
dec
lods
in
das
push
movsl
add
repnz
ret
mov
jmp
inc
add
ret
call
sub
add
jg
lea
imul
add
ret
inc
add
inc
add
inc
add
inc
add
inc
add
ret
inc
add
ret
inc
add
ret
ror
stos
cli
jecxz
insb
test
and
inc
add
adc
jae
std
cmc
sub
daa
adc
adc
inc
lods
lods
mov
jg
lds
in
sub
out
xchg
pop
add
pop
jg
les
inc
add
inc
add
mov
pop
fnstcw
fwait
and
lods
cld
push
stos
jg
cwtl
mov
test
add
mov
add
les
int3
les
add
add
aam
inc
add
les
in
inc
add
les
hlt
les
pop
flds
adcb
insb
mov
and
inc
add
lds
cmp
inc
add
pop
pop
sub
mov
insb
dec
mov
andb
loopne
mov
outsl
cmp
lock
je
mov
pop
cmp
jne
mov
ljmp
or
add
jae
pushl
leave
push
pop
mov
push
adc
adc
mov
pop
jae
cmp
cmp
bound
jne
mov
dec
add
jae
mov
mov
rorb
add
pop
mov
cwtl
pop
inc
add
add
inc
cwtl
xchg
jne
sub
nop
pushl
es
pop
lea
movl
in
jg
push
cmp
je
cmp
jne
jae
pop
cmp
je
mov
push
subl
decl
jne
lea
and
andb
push
mov
lock
stos
push
inc
cmp
dec
or
or
or
popf
inc
loope
or
pop
xchg
jnp
or
ja
enter
jnp
mov
add
lods
add
ret
xchg
mov
dec
or
xchg
push
lcall
pop
pop
mov
pop
pop
ret
test
je
test
je
push
mov
cmp
je
push
mov
les
mov
clc
sbb
cmp
fiadds
cmpl
pop
jne
cmp
push
sbb
pop
mov
pop
ret
xor
dec
mov
sub
lock
test
je
cmpl
pop
rcr
sbbb
pop
mov
rcll
xor
jl,pt
inc
insb
mov
jmp
mov
mov
add
add
jp
pop
mov
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
and
testb
ret
mov
add
test
sub
lea
add
xor
nop
scas
dec
xor
movzwl
mov
mov
mov
mov
add
or
lea
stos
stos
stos
mov
movb
sub
mov
mov
inc
dec
jne
lea
mov
or
testl
in
sbb
pop
add
es
push
push
lea
add
adc
mov
aaa
sti
fcmovnb
mov
add
test
cli
add
and
add
popf
out
cli
clc
enter
cmp
ja
sub
inc
push
lea
pop
push
push
ret
or
mov
inc
test
jne
push
pushl
lea
cld
cli
push
add
push
lea
push
add
imul
xor
push
pushl
lea
push
or
cmp
push
push
pushl
ret
add
and
popa
movsl
das
andb
lret
addb
and
roll
push
orb
mov
addl
roll
adc
decl
or
test
inc
or
or
ljmp
in
lcall
loop
sub
mov
push
add
lea
add
add
cmp
ja
orb
mov
add
jmp
cmp
ja
adc
mov
sub
push
add
and
add
inc
cmp
jb
mov
pop
mov
push
push
inc
jo
sbb
push
cld
sub
add
push
xchg
mov
mov
cmp
je
dec
in
add
push
out
sub
xor
adc
mov
inc
push
in
inc
pusha
adc
mov
pusha
or
enter
add
and
xor
stos
mov
mov
mov
mov
aas
add
or
or
inc
add
jns
cmp
inc
or
add
add
dec
mov
mov
testb
jne
orl
movb
jmp
ret
or
inc
add
xchg
add
mov
xor
push
lea
add
mov
cmp
jne
movl
cmp
add
inc
shll
jmp
cmp
jne
lcall
fildl
adc
inc
add
jmp
cmp
mov
sarb
jp
in
and
jle
lods
xorb
iret
add
clc
xor
mov
cmp
jne
lods
mov
lahf
adc
cmp
mov
xchg
jns
lcall
add
add
cmp
and
je
out
mov
adc
test
add
or
lds
push
sahf
adc
sbb
fwait
repnz
loop
add
add
dec
xor
inc
fnstcw
mov
cmp
sbb
inc
pop
add
add
add
test
fbstp
mov
test
add
mov
decl
mov
jmp
subl
dec
in
les
leave
xor
cwtl
and
sub
adc
ds
test
add
add
mov
or
movzbl
inc
cmp
jbe
mov
inc
inc
cmpb
jne
mov
add
add
incl
add
cmpl
mov
jb
mov
mov
movl
and
or
inc
adc
add
mov
inc
mov
add
add
inc
inc
inc
dec
jne
mov
call
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
test
push
xor
inc
loopne
shlb
mov
inc
dec
jne
mov
mov
add
mov
jmp
mov
add
mov
xor
inc
dec
jo
jmp
cmp
xchg
xor
aam
enter
mov
clc
mov
or
mov
mov
fs
mov
mov
or
inc
add
std
mov
je
cld
push
out
and
andb
mov
mov
rep
andl
push
scas
leave
stos
or
push
fneni(8087
fisubl
dec
or
xorb
test
mov
cmp
pop
mov
mov
adcb
mov
inc
jo
jne
testb
adc
test
dec
movsb
add
cmp
add
ret
mov
js
cmpb
loopne
clc
add
orb
add
mov
inc
jmp
sbb
dec
sbb
and
sbb
mov
sbb
sbb
sbb
flds
call
sbb
cmp
mov
mov
es
mov
rcll
jmp
lods
popf
push
clc
adc
and
xor
inc
xor
mov
loopne
mov
xchg
adc
adc
call
pop
movl
push
js
xchg
std
mov
xchg
jmp
add
rcr
jne
push
lret
mov
xor
adc
es
adc
jge
ja
push
mov
je
dec
outsb
pop
dec
push
push
ljmp
jno
je
and
add
cmp
je
mov
dec
cmp
jb
clc
pop
add
push
mov
sti
dec
mov
ljmp
fiadds
cmp
jne
xor
pop
xchg
outsb
cmovbe
sub
mov
xchg
sub
sub
push
pushl
dec
adc
bound
outsb
shll
jne
movsl
sub
sub
subb
jmp
mov
mov
jle
and
lcall
test
adc
ret
ret
adc
mov
insb
or
mov
jmp
cmp
movsb
cmp
and
push
xor
jno
addb
lock
scas
xor
je
cmp
jbe
movlps
sub
xchg
adc
or
test
fisttpl
mov
shlb
jne
call
add
pop
jmp
lea
push
movdqa
movdqa
movdqa
add
add
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
add
add
movq
movdqa
movdqa
movdqa
movdqa
movdqa
lea
insl
lea
jne
mov
add
sahf
mov
sub
mov
mov
mov
stos
and
inc
add
sbbb
sub
and
push
cltd
mov
xor
sub
and
push
mov
adc
jne
mov
mov
and
mov
cmp
je
sub
ja
or
aaa
std
lcall
push
add
je
mov
add
sub
mov
add
sub
mov
push
sbb
jne
mov
rep
mov
jmp
cmp
mov
iret
jne
neg
add
imul
or
adc
rep
cmp
in
aas
rcll
push
push
sub
xchg
bound
add
popa
jmp
sub
mov
shr
rep
mov
and
push
cmp
imul
push
roll
xor
and
fcomps
idivb
add
cmp
mov
or
sbb
sub
and
sub
xor
push
mov
jge
pushf
pop
mov
xor
insb
push
popf
pushf
pop
sub
je
push
popf
xor
cpuid
sbb
jg
mov
mov
jge
mov
inc
clc
pop
testl
add
in
je
je
adc
clc
add
rcrb
ret
les
and
shlb
push
aam
lcall
pop
lret
aas
xchg
inc
fbstp
jp
add
dec
cld
fists
mov
push
mov
sub
sti
add
les
push
lds
xorb
push
lea
and
ret
mov
add
push
inc
stos
movsl
pushl
jl
sub
je
cmp
jbe
lea
mov
or
mov
cmpsb
jl
add
jne
test
inc
mov
lds
addr16
mov
stos
sub
xchg
test
shlb
add
cmpl
push
or
push
or
push
or
fcmovb
push
push
mov
js
inc
add
or
mov
or
or
push
push
pop
pop
mov
add
pop
ret
call
ret
dec
mov
and
inc
add
push
je
fwait
sbb
lret
popl
mov
mov
test
inc
ja
daa
nop
jne
sti
gs
lea
ja
das
repnz
xchg
mov
mov
push
push
inc
std
and
push
test
inc
sbb
add
adc
mov
lods
pop
push
test
inc
stc
or
add
or
add
adc
bound
add
bound
jmp
sub
jmp
lea
mov
lahf
inc
js
jae
xchg
jo
shlb
cmp
outsl
adc
or
pushl
lret
adc
or
mov
cmp
je
sub
xchg
stos
fiadds
adcb
or
je
add
sub
add
add
xchg
mov
mov
rep
or
adc
cli
or
or
lock
add
mov
sub
push
push
movl
cmp
jne
jge
sbbl
pop
scas
push
test
adc
dec
pop
stos
or
and
out
or
cmp
add
es
mov
inc
mov
aad
xor
inc
sub
fadds
inc
xor
pop
add
pushl
or
jbe
or
push
pop
pop
dec
pop
dec
pop
adc
ret
pop
push
pop
pop
pop
pop
pop
sub
dec
cmc
sysret
fs
push
pop
lret
pop
je
inc
or
pop
js
jl
subb
pushl
and
nop
add
xchg
or
jg
or
rolb
or
jbe
movsb
xchg
je
mov
cmp
outsl
lcall
xor
cmp
jae
pop
inc
jle
inc
or
add
adc
add
add
inc
adc
add
inc
adc
add
call
jo
sbb
add
add
and
add
cmp
adc
call
sbb
push
push
rorb
mov
or
cmp
pop
mov
add
stos
add
jmp
cwtl
leave
decl
dec
add
sbb
add
mov
mov
add
add
fists
mov
push
push
xor
push
mov
jge
stc
cmp
jne
cld
xor
inc
push
push
mov
je
mov
xchg
jo
cmp
jne
push
pop
mov
clc
add
ret
je
push
test
pop
aaa
orl
pop
testb
xor
push
sarb
and
pushl
setne
loop
jb
scas
add
movsb
push
sbb
add
mov
loop
test
cmp
push
jg
xor
inc
aas
mov
cmp
add
xchg
sarl
mov
cmp
je
movl
jmp
je,pt
pop
cmp
je
movl
mov
add
push
add
es
mov
jne
pusha
xchg
jno
daa
sbb
adc
jne
cmpsb
inc
sub
addb
daa
mov
jmp
xor
cmp
mov
sti
sub
leave
int3
rorb
insl
cmc
js
cmp
je
push
push
lea
and
push
pushl
int3
and
push
sbb
sub
cmp
je
mov
cmp
std
in
xor
repnz
lea
sbb
inc
mov
add
sub
pushl
and
jne
sahf
jb
sbb
xchg
inc
cmp
add
or
scas
pop
test
add
mov
decl
dec
icebp
lea
inc
mov
mov
sub
dec
inc
cmp
add
icebp
cmp
jne
push
push
xor
inc
push
inc
push
push
push
call
jmp
dec
adc
add
adc
and
add
je
inc
adc
sbb
cmp
jne
or
mov
sub
dec
cmp
out
mov
jge
inc
mov
mov
fstps
test
mov
jae
jne
mov
test
and
jae
jae
pop
add
popl
add
jle
push
xor
pop
div
cmp
jb
lock
dec
push
ja
add
add
cmp
je
inc
xchg
jle
sahf
jne
jne
test
nop
mov
adc
and
mov
orb
cmp
shl
inc
or
je
cmp
jnp
mov
cmp
jg
add
cmp
add
into
mov
lret
jle
mov
add
mov
hlt
cmp
je
movl
mov
sbb
mov
enter
mov
repz
pushl
push
arpl
and
or
push
push
jmp
mov
push
fcoml
sub
clc
push
inc
pop
add
inc
mov
add
push
mov
mov
cmp
mov
adc
inc
or
in
dec
clc
fwait
dec
clc
call
xorb
je
dec
adc
pushl
mov
clc
aad
sub
popf
hlt
cmp
je
mov
push
push
shlb
cmp
jne
xor
sti
jle
cmp
ja
add
cld
add
dec
add
sti
je
movl
jmp
xor
cmp
je
xor
jne
push
and
jne
push
fnstsw
ror
jno
xor
jmp
pushl
leave
jg
mov
sbb
sbb
pop
adc
test
mov
neg
sbb
and
dec
mov
sbb
xchg
sub
dec
adc
pop
hlt
add
pop
dec
and
cmp
je
cmp
sub
sbb
lea
lret
ss
xor
test
pusha
aaa
int3
mov
sbb
push
adc
aaa
lea
call
lea
and
aas
jns
ja
sbb
push
sub
mov
mov
add
jmp
mov
sarl
fadds
leave
push
mov
add
dec
adc
mov
mov
add
lock
cmp
leave
mov
movb
inc
mov
push
incl
add
adc
jo
adcl
or
push
call
orb
hlt
lock
shr
bswap
pop
popa
add
or
jge
mov
mov
out
js
add
push
lea
sub
and
add
sbb
or
mov
mov
pop
adc
and
or
jne
mov
mov
lea
mov
add
icebp
mov
mov
mull
mov
mov
pop
add
jmp
mov
mov
add
inc
xchg
push
inc
and
shr
rcr
shr
rcr
or
jne
div
mov
testl
and
mov
and
out
shll
cmp
ja
jb
cmp
add
add
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
push
cli
sub
mov
addr16
ret
add
loope
test
enter
inc
add
inc
pop
mul
ret
push
mul
cmpsb
fs
add
loope
pop
adc
rcrl
adc
or
fildl
in
filds
movzbl
sbb
mov
inc
and
call
push
xchg
add
repz
adc
lret
or
sbb
mov
or
pop
movsl
xor
icebp
push
push
pop
sbb
notb
inc
add
or
add
mov
mov
mov
cmp
je
cmp
dec
call
xchg
or
pop
cmpl
jne
xchg
pushf
add
call
jne
movl
jne
xor
in
mov
or
idivl
cmp
outsl
push
lea
das
and
cmp
je
or
outsb
imull
fdivr
jne
rorb
call
mov
ret
test
mov
mov
jge
cmp
pop
fs
je
lea
push
adc
add
in
mov
shlb
int3
cmp
je
sbb
push
and
pop
test
je
mov
pop
add
jmp
mov
jne
xchg
lahf
sbb
and
mov
jmp
push
push
and
pop
in
enter
add
add
jge
jmp
cmpl
je
mov
mov
sahf
mov
inc
loopne
gs
cmc
mov
enter
mov
and
mov
and
cmp
jb
mov
or
pop
xchg
mov
mov
ret
sub
jmp
fists
or
loop
or
or
dec
xor
mov
cmp
jne
jns
pop
mov
sub
pop
sbbb
mov
sbb
jne
jmp
cmp
push
add
mov
adc
jl
cmpl
jg
mov
push
mov
daa
je
inc
sbb
add
pop
mov
jmp
movzbl
push
nop
shlb
dec
in
inc
add
test
adc
movzwl
and
add
inc
ret
add
movl
jmp
cmp
jne
mov
inc
mov
or
cli
or
pop
test
add
push
or
cmp
sub
pop
rol
adc
jmp
mov
cmp
je
add
cmp
adc
adc
inc
add
add
or
cmp
jne
and
add
bound
mov
jne
movzbl
movzwl
test
je
add
add
movsbl
sub
jmp
test
je
mov
sub
cmp
movsbl
ja
sub
add
add
add
cmp
jae
orl
cmp
jb
jne
cmp
jbe
orl
push
adc
mov
inc
sbb
or
inc
inc
add
adc
je
mov
ret
mov
imul
add
mov
pop
inc
and
cli
mov
sbb
or
jge
sbbb
test
jne
cmp
jbe
mov
movl
adc
push
inc
jmp
testb
push
pop
setne
add
cmp
mov
pop
je
idivl
rorb
xor
mov
sbb
xor
outsl
cs
andb
fistps
add
push
push
inc
dec
mov
add
aam
or
add
adc
push
mov
or
je
add
sarb
mov
mov
xlat
es
mov
je
or
add
add
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
addb
rcl
xor
cmp
je
mov
inc
pop
sbb
inc
lcall
sub
ret
int
fs
pop
cmp
inc
push
mov
shl
addr16
or
or
lret
je
test
je
adc
loopne
add
jmp
fcoms
ret
shl
push
or
mov
mov
testl
lret
add
add
xor
mov
ret
loope
add
cmp
je
push
add
and
cltd
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
add
pusha
sbb
test
je
cmp
je
test
je
jmp
pop
pop
andb
pop
pop
push
std
push
cld
push
jmp
mov
stc
inc
jae
cmp
imul
add
shrd
sar
ret
mov
sar
and
sar
ret
sar
es
push
push
mov
push
or
jns
mov
pop
add
popl
mov
mov
jmp
pop
mov
pop
pop
xchg
jmp
cmp
mov
mov
movl
fldenv
icebp
xchg
iret
push
pop
mov
xlat
loop
std
or
cmpb
cmp
mov
mov
aas
std
sub
cmp
out
mov
push
add
dec
call
mov
pop
ror
sbb
jne
mov
pop
adc
xor
jae
push
push
pushl
pushl
jno
inc
pop
and
cmp
aaa
add
sub
push
cmpl
xor
inc
push
out
loopne
les
movl
sub
inc
xor
mov
xchg
ds
cmp
sub
or
outsl
stc
xchg
insl
clc
adc
outsb
or
fmuls
inc
enter
dec
mov
int3
js
cmp
lds
inc
add
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
push
push
aam
test
inc
enter
loop
push
push
ret
mov
fidivrl
ja
out
xor
and
dec
or
outsb
or
inc
and
insl
hlt
pop
inc
insb
jmp
xchg
jne
xlat
xor
or
jo
sub
dec
xor
xor
jg
icebp
or
lds
repnz
dec
call
add
or
xchg
cmp
arpl
imul
loopne
rolb
adc
inc
adc
jmp
and
mov
mov
dec
mov
add
add
add
dec
adc
dec
add
add
add
loopne
add
or
lret
pusha
sub
or
mov
mov
cmp
ja
cmp
jbe
inc
inc
cld
mov
inc
mov
mov
mov
fcoms
cmp
xchg
mov
pushf
pop
sbb
and
adc
pusha
adc
dec
or
inc
xor
pop
decb
or
mov
aas
jne
cmovle
mov
js
divps
dec
or
je
ja
out
xor
dec
push
push
mov
test
cs
add
rclb
in
sbb
pop
cmpl
in
aam
hlt
mov
inc
movl
inc
pushf
jmp
mov
pop
call
lock
dec
call
xor
add
mov
rolb
add
inc
or
xchg
add
jl
fadd
push
jo
int
cmp
pop
and
repnz
fsubs
movl
inc
lea
cmpb
je
test
shll
or
xacquire
and
add
testb
je
testb
je
aaa
add
in
fisubs
test
add
pusha
lret
add
mov
dec
dec
inc
loopne
sbb
sub
mov
adc
test
xchg
pushf
pop
add
js
nop
test
cmc
mov
mov
cmpl
push
push
movsbl
jmp
mov
mov
les
add
ss
gs
jle
cmp
jl
adc
mov
add
mov
mov
sub
rclb
jns
add
jae
push
and
mov
pushl
jmp
cld
ficoml
push
frstor
lret
inc
xor
push
add
mov
mov
push
cmpsl
adc
add
sbb
fidivs
jne
mov
xchg
movsb
sub
icebp
xchg
jle
jle
mov
cmpl
jg
cmp
orb
stc
xorl
lea
mov
mov
orb
test
dec
and
add
sub
and
fs
movsb
pushl
push
pushl
push
mov
fdivrs
inc
sbb
xchg
shl
lcall
or
add
add
sub
push
add
inc
push
rorb
add
add
in
sub
push
icebp
cmpsb
sbb
dec
aas
add
iret
loopne
ss
push
or
incl
fimull
sbb
jle
lock
mov
inc
mov
sbb
push
push
mov
add
stos
or
fadd
divl
dec
add
test
jg
jmp
loopne
ret
incl
cmp
jl
add
mov
pop
mov
leave
ret
push
mov
call
or
push
add
subb
and
insl
mov
repnz
sub
int3
push
push
mov
jne
mov
andl
mov
mov
pushl
add
inc
sbb
insl
mov
dec
sahf
stos
sbb
mov
dec
call
pop
adc
adc
adc
inc
data16
nop
xor
inc
mov
cld
pop
hlt
mov
aad
xor
adc
mov
and
inc
jne
dec
mov
mov
add
mov
jge
cmpl
addl
adc
cmp
jae
loopne
add
add
lret
cmp
jg
adc
sub
mov
les
push
mov
stos
jg
mov
or
inc
and
xchg
add
incl
jmp
adc
inc
cld
add
adc
fcmovnbe
mov
jmp
jg
cmpl
jne
mov
aad
inc
push
push
jg
jne
push
pop
push
jne
aaa
inc
mov
cmp
inc
xor
insb
or
jne
mov
nop
pop
stos
or
jle
push
mov
dec
inc
lret
pop
add
add
push
or
test
std
test
add
cmp
jne
test
adc
aaa
add
test
js
lea
mov
popa
test
mov
add
jge
pushl
jmp
repnz
adc
insb
inc
sbb
or
movsb
or
fsubp
pop
pop
mov
jmp
mov
jnp
mov
test
je
ss
add
out
sub
mov
pop
sbb
adc
jne
lock
or
pushf
cmp
jne
inc
and
or
je
dec
je
pushl
and
ret
and
cmp
sub
les
testb
lret
dec
and
push
pop
mov
inc
in
push
das
arpl
lds
mov
movsb
nop
jle
inc
adc
add
or
push
or
pop
adc
mov
push
add
clc
mov
add
outsb
add
dec
je
dec
jne
push
lea
or
mov
fdivrs
pop
sbb
xchg
ja
xlat
inc
out
cwtl
sub
cltd
rorl
sbb
insl
loop
sarl
repz
push
jmp
dec
lcall
aaa
adcl
add
pushl
inc
pushl
mov
pop
add
add
mov
cmp
scas
fmuls
xor
ficompl
les
mov
add
lea
addr16
cmp
je
cmpl
test
in
mov
repz
cmp
inc
mov
cmpl
inc
lods
aas
add
pushl
push
clc
mov
add
lock
les
inc
clc
jae
push
cmp
jl
cmp
jg
mov
mov
shl
mov
or
add
mov
test
je
cmpb
pop
lock
inc
jne
pushl
mov
adc
sub
sbb
les
push
and
sti
sub
mov
push
mov
cmpsb
adc
mov
cmp
jbe
loop
and
jmp
add
enter
ret
or
test
lods
jle
add
popl
cmp
je
add
popa
arpl
add
test
jne
cmc
cmp
test
sti
pushf
pop
mov
mov
push
push
push
mov
jmp
cmp
jne
and
and
or
push
sbb
sub
addb
mov
xor
mov
test
sub
add
jne
xor
cmp
jle
mov
mov
push
shrb
or
cmp
jl
pop
test
aas
rclb
pop
dec
enter
and
jb
test
pop
aam
pop
leave
test
js
mov
jle
add
test
push
dec
mov
jbe
inc
push
sub
mov
jle
daa
or
xchg
push
gs
xchg
pop
inc
clc
cmp
jg
mov
inc
add
jl
inc
adc
mov
dec
inc
incl
inc
xchg
lea
xor
shrb
and
jbe
mov
push
pushl
mov
add
and
add
cmp
jg
decl
push
pop
add
addl
jmp
mov
sub
pushl
cmpsb
jb
cli
dec
mov
sub
mov
lock
jmp
mov
subb
push
push
sub
jne
lcall
decb
cmpb
mov
xor
loop
popl
mov
ja
fwait
pusha
jns
jnp
jne
jmp
add
inc
imul
mov
push
push
movsl
pusha
adc
rcr
mov
add
cmpl
jbe
mov
mov
mov
mov
lds
in
add
dec
pop
imul
jmp
xchg
push
test
push
adc
fisubs
push
stos
insl
adc
add
mov
jne
mov
cmp
je
cmp
sarb
add
and
cmp
jb
testb
jne
data16
mov
sahf
cwtl
push
xchg
decl
ljmp
in
cmp
fucomp
push
jne
cmp
pop
jb
push
je
cmp
jne
cmpl
jb
cmp
jbe
sbb
push
sbb
push
or
mov
and
pushl
add
push
insl
notl
rolb
add
pop
pushl
sbb
sbb
in
add
pop
jmp
shlb
adcb
lahf
mov
push
jo
orl
pop
dec
add
push
push
call
pop
pop
mov
pop
mov
push
mov
inc
jne
out
mov
dec
mov
pop
pop
pop
add
mov
lea
sub
push
push
push
mov
mov
and
jae
lock
jnp
loop
cld
xor
add
xchg
test
rolb
and
out
sub
xchg
mov
mov
mov
loopne
lock
dec
fstps
sbb
sbb
sbb
in
sahf
jbe
add
mov
xchg
movsl
ret
sahf
add
fiadds
stc
mov
inc
add
aam
add
mov
roll
popa
and
insb
outsl
arpl
imul
outsb
add
shlb
add
xchg
rcrb
sarb
inc
js
je
jb
arpl
jae
add
push
adc
add
arpl
outsl
add
add
add
add
add
add
je
insl
and
jb
jb
add
or
dec
dec
push
push
adc
add
add
dec
inc
push
add
inc
dec
dec
add
add
push
xor
xor
or
and
jo
imul
sbb
add
and
and
je
insl
jo
and
insb
outsl
popa
and
and
add
add
jnp
imul
imul
arpl
or
gs
jae
and
add
sub
outsb
je
arpl
daa
jae
jae
jo
outsl
jb
and
xor
add
and
jb
insl
outsl
jb
and
outsw
jb
and
fwait
add
and
lahf
xor
xchg
and
dec
dec
and
add
add
and
outsl
insl
and
jae
popa
jae
gs
bound
fs
imul
push
inc
adc
xchg
je
popa
insb
imul
add
das
imul
popa
and
and
and
jne
add
add
stos
and
and
and
jae
and
gs
jns
jb
jae
insb
je
addb
arpl
insb
insb
popa
outsb
xchg
sub
imul
addb
insb
jb
and
outsb
arpl
popa
xchg
outsb
mov
je
jne
je
jb
outsl
jb
inc
insb
insb
dec
popa
imul
divl
imull
je
outsb
outsl
jne
push
arpl
test
adc
insb
aam
xor
pusha
js
adc
xor
das
sti
gs
add
outsl
je
popa
outsb
and
arpl
andps
and
arpl
arpl
fadds
or
pusha
fs
xor
pop
jne
popa
bound
adc
gs
jo
daa
aaa
daa
inc
mov
ja
cmp
and
fs
xor
adc
and
jb
jne
insb
mov
push
or
xor
pop
pop
outsl
outsb
gs
je
popa
je
add
add
and
aaa
xor
aaa
mov
rolb
imull
outsb
jmp
insb
and
imul
and
jo
arpl
sbb
and
and
insb
je
je
jb
popa
lods
aam
and
lods
push
add
popa
je
or
pusha
push
adc
jb
jno
gs
sub
je
and
and
imul
out
out
jne
jne
inc
ja
sbbl
repnz
xor
inc
aad
add
ret
outsb
jbe
jb
outsb
insl
outsb
je
or
inc
data16
js
popa
jb
jne
jae
dec
test
add
insb
outsl
popa
je
jo
imul
and
faddp
add
dec
imul
je
push
imul
inc
sub
cmovl
daa
or
add
cs
add
add
jb
addr16
insl
and
insl
and
imul
outsb
add
xor
cmpsb
and
or
cmp
xchg
push
ror
xor
sti
push
xor
gs
gs
popl
nop
push
add
add
add
lahf
inc
add
jns
adc
add
orl
sub
add
adc
call
or
in
push
sarl
push
jo
or
lcall
cmpsl
push
or
or
or
stos
sbb
inc
outsb
pop
push
add
add
dec
gs
add
dec
add
push
add
inc
add
add
add
add
add
inc
pop
sub
inc
sub
jae
jb
gs
push
gs
popa
insb
mov
or
inc
sub
inc
nop
or
jno
xorps
outsl
ja
je
pop
sub
adc
jb
bound
arpl
or
add
popa
jae
inc
arpl
outsl
jo
jo
add
add
jae
popa
addr16
outsl
js
add
inc
push
add
add
xor
cs
dec
dec
add
add
add
or
or
push
movups
adc
adc
push
pop
sbb
add
add
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
add
add
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
add
add
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
sbbb
jge
jg
xchg
and
insl
jo
gs
and
xor
add
and
jb
sbb
jae
dec
imul
popa
jb
push
jae
jb
jo
add
inc
mov
inc
jb
popa
jns
adc
and
xchg
inc
lods
add
sub
and
gs
add
and
jae
arpl
addr16
jb
daa
add
popa
outsb
popa
addr16
inc
sbb
jbe
ret
arpl
jns
push
rol
aam
je
jb
pusha
and
jg
out
push
loope
sub
popa
xor
imul
clc
loopne
push
push
inc
and
gs
pushl
mov
sub
push
std
mov
add
xchg
or
mov
es
dec
jo
popa
arpl
add
cmpb
pop
and
outsl
jae
jb
push
push
push
pop
mov
insl
outsb
imul
orl
pop
outsb
gs
js
xchg
rcr
jbe
mov
add
and
add
push
push
dec
jnp
dec
add
fs
jb
je
mov
outsb
imul
inc
adc
outsl
es
mov
ds
test
aas
imul
insl
popa
jo
cmp
pop
sub
sub
sbbb
sbb
add
arpl
popa
aas
insb
gs
lcall
fs
cmp
das
pop
sub
pop
aas
push
lcall
je
pop
inc
mov
movsl
mov
lods
pop
je
pop
nop
or
jo
outsl
or
jmp
flds
add
xchg
in
add
add
jl
add
es
cmp
adc
add
add
cmp
add
sub
jl
add
add
jl
add
test
or
add
sub
add
sub
add
ds
out
or
add
add
add
add
rclb
sub
es
sub
sub
add
sub
add
outsl
jo
add
inc
dec
cmpsl
cmpsl
and
add
and
add
ds
daa
pop
pop
jne
popa
insb
imul
or
add
jb
imul
ss
pop
pop
arpl
adc
pusha
repnz
jae
or
pop
mov
jae
or
popa
push
pop
arpl
adc
add
insb
add
ja
sub
add
cmovno
or
inc
add
add
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
add
add
add
or
aam
inc
add
or
mov
or
movsb
push
inc
add
add
orb
add
push
inc
add
push
inc
add
push
inc
add
inc
add
add
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
add
push
inc
add
push
inc
add
inc
add
add
inc
add
inc
add
push
inc
add
add
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
add
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
or
inc
add
add
add
or
inc
add
or
inc
add
inc
add
inc
add
inc
add
add
add
or
inc
add
or
add
or
add
or
add
add
add
add
add
or
add
or
add
inc
add
inc
add
inc
add
or
fmuls
inc
add
or
add
add
mov
or
orb
add
inc
add
or
or
inc
add
or
rorb
mov
add
add
inc
add
add
or
add
sbb
add
add
fiadds
jg
add
add
test
pop
add
add
add
add
add
ljmp
mov
aaa
add
add
add
pop
push
clc
inc
add
adc
aaa
bound
addl
add
hlt
xchg
aaa
add
add
test
add
adc
add
mov
xor
and
ret
add
add
add
add
addb
xchg
mov
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
add
add
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
add
lret
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
call
ljmp
mov
inc
jg
jp
mov
add
imul
dec
cmp
cmp
fs
dec
dec
dec
dec
and
jns
jns
add
das
fs
jns
push
dec
add
inc
dec
pop
cs
gs
bound
add
orb
arpl
push
gs
adc
jne
jne
je
add
add
sbb
insb
inc
dec
jne
gs
inc
jo
imul
adc
jb
adc
rclb
dec
popa
outsb
or
pop
push
push
test
and
popa
jns
aas
addb
push
popa
je
jb
popa
inc
inc
jb
or
jb
addb
push
gs
gs
jne
dec
outsl
outsb
adc
addb
push
jne
popa
je
aaa
das
add
and
dec
outsl
outsb
push
jne
push
add
xchg
gs
push
xor
popa
jb
jo
dec
popa
jns
jne
test
add
jne
inc
jne
push
gs
arpl
jbe
aas
add
insb
add
sub
add
inc
add
push
add
bound
jae
popa
add
jb
sbb
shlb
or
stos
addr16
mov
add
in
minps
mov
add
add
add
add
pop
or
adc
add
add
pop
add
ljmp
add
mov
jg
inc
add
pusha
cmp
xor
add
push
adc
add
add
popa
inc
sub
push
pop
push
pop
jo
xor
pop
add
or
add
mov
push
xor
pusha
pop
jne
xchg
adc
add
str
js
lret
pop
cmc
or
sbbb
loopne
cld
pop
pop
add
or
pop
sbb
or
push
pop
add
cmp
add
add
or
add
cmp
or
add
iret
and
add
invd
xchg
mov
loopne
pop
jl
add
scas
add
and
jb
pop
dec
or
add
or
add
jg
or
add
adc
pop
adc
add
push
or
add
jg
adcb
adcl
pop
xor
or
add
jg
or
test
push
add
fs
xchg
or
add
adc
std
sbb
pop
mov
inc
pop
mov
rcrl
add
test
push
pop
dec
pop
aas
leave
jg
add
cmp
or
add
push
test
pop
invd
add
push
inc
push
pop
push
test
or
lahf
or
ljmp
pop
push
pop
adc
xor
inc
jg
jmp
pop
out
xlat
adc
pop
xor
or
add
call
les
add
adc
and
push
adc
rolb
mov
inc
push
and
add
or
add
jg
pop
pop
xchg
adc
sbb
or
add
mov
add
jp
cmp
or
add
add
sar
adc
or
pop
and
mov
cmp
lahf
jo
stos
or
pop
dec
pop
or
add
mov
or
add
add
mov
xor
or
add
mov
or
add
mov
or
jnp
popw
cmp
jo
add
inc
pop
or
add
jg
cs
mov
sub
sub
adc
mov
push
or
adc
in
pop
das
pop
fdivr
sbb
cmp
add
or
add
pop
or
add
and
movsb
rorl
push
pop
dec
aaa
add
pop
dec
pop
or
add
lea
or
addl
xor
xor
or
add
mov
andb
sbbl
pop
or
or
pop
mov
inc
scas
sub
aas
pop
pop
insl
insl
movb
or
inc
cmpsl
jno
dec
pop
cmp
or
add
and
mov
scas
pop
imul
or
add
mov
or
pop
mov
xchg
adc
fwait
adc
jg
or
lahf
push
pop
adc
lods
cld
sbb
jne
and
pop
mov
add
pop
jg
mov
or
and
mov
pop
and
push
pop
or
add
jg
or
add
ficoml
add
lcall
jge
repz
push
inc
pop
mov
jmp
jle
cmp
mov
dec
pop
or
add
jg
std
sahf
rorb
addr16
ficompl
push
xor
decl
pop
mov
movl
adc
add
cmpsb
pop
or
mov
iret
or
add
sbb
or
adcb
pop
iret
or
or
jnp
ljmp
or
add
mov
les
wbinvd
add
ljmp
mov
add
mov
or
jo
dec
pop
or
add
jg
mov
pop
dec
cmp
and
inc
or
add
pop
or
add
call
repnz
jmp
sbb
test
filds
movl
out
jg
pop
pop
push
stc
mov
outsl
or
add
jmp
xlat
pop
jecxz
ficomps
mov
mov
das
or
add
xchg
adc
ud0
test
pop
or
mov
sub
sarl
mov
inc
pop
mov
aas
jmp
repz
lret
mov
out
call
jg
and
pop
jg
arpl
icebp
jg
push
std
sahf
push
lcall
aaa
pop
call
maxps
jmp
jg
lcall
jecxz
inc
call
jle
lahf
scas
pop
gs
pop
icebp
xlat
cmp
cmp
stos
push
mov
fistps
les
jmp
jg
pop
jl
adcb
xchg
decl
call
jmp
lds
pushl
sub
lret
loop
dec
call
and
pop
push
in
push
jmp
jg
mov
pop
jl
nop
pop
fistpll
hlt
cmp
inc
push
mov
lds
ljmp
in
pop
mov
test
ljmp
aas
pop
mov
jg
jl
mov
call
jg
pop
shll
pop
ljmp
jg
and
loop
or
mov
ljmp
maxps
dec
xchg
pop
cmpsl
jg
and
dec
call
clc
ljmp
lahf
ds
cmp
jp
sub
movsl
adc
addr16
nop
mov
pop
wbinvd
lea
and
add
std
mov
les
and
maxps
iret
or
lds
jg
pop
push
or
mov
test
call
ljmp
sub
mov
cld
xchg
inc
scas
sarb
icebp
lea
dec
ljmp
cmp
pop
out
mov
jno,pt
lahf
lcall
lret
push
das
dec
xor
pop
mov
jo
lahf
incl
push
inc
enter
lahf
push
pop
out
add
dec
pop
movups
add
pop
pop
add
push
add
mov
fistps
orb
add
add
push
add
jb
pop
packsswb
jl
add
pop
jg
adc
pop
sarl
sbb
mov
jg
push
fmuls
jg
jg
or
jg
jg
jo
push
or
mov
inc
or
inc
jmp
repz
outsl
and
adc
daa
test
and
out
push
mov
and
pop
aas
arpl
daa
xor
test
inc
aas
dec
push
dec
dec
inc
cmp
mov
ja
outsl
ret
and
mov
cmp
rorl
xchg
add
lret
je
popf
push
fwait
aas
mov
add
add
mov
mov
loope
add
add
pop
and
add
and
and
div
fbld
cmpsl
adc
adc
and
dec
iret
jae
adc
xchg
pop
pop
test
and
add
add
add
and
add
push
stos
add
test
mov
incl
lret
add
xchg
add
add
xor
ja
popa
push
out
mov
les
hlt
push
xor
xchg
fs
xor
add
add
aad
mov
rclb
mov
sub
mov
sbb
add
mov
dec
jno
repz
test
ficompl
jmp
mov
hlt
movl
add
add
std
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
add
add
imul
addr16
add
aam
dec
std
test
movsl
cli
test
xor
add
mov
lods
jecxz
fdivs
jne
filds
or
shrl
cmp
add
add
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
or
add
add
or
and
or
adc
stos
sbb
data16
inc
fdivl
add
add
jno
add
aad
mov
mov
movsl
in
lahf
xor
mov
js
add
add
stc
add
mov
push
loope
or
insl
or
pop
arpl
hlt
push
imul
add
add
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
add
jmp
mov
cld
fistps
ficoml
gs
aam
pop
popa
mov
into
add
add
push
mov
je
mov
aam
movsl
fisttps
xchg
fdivrs
sti
hlt
shrl
imul
fldcw
inc
mov
sarb
add
in
add
pop
dec
or
cmp
add
add
inc
add
adc
or
and
test
or
mov
popa
into
push
stc
ficomps
add
add
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
add
add
mov
lcall
ljmp
fildl
push
fdivl
or
test
add
add
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
rolb
add
add
add
inc
push
imul
xorb
sbb
push
imul
aam
loopne
add
add
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
add
add
xchg
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
add
sbb
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
add
add
andl
shrb
ss
push
xchg
ja
int3
add
mov
das
es
lds
add
add
or
sub
mov
cmpsl
call
ret
shlb
sbb
ret
add
add
repnz
pushf
mov
insl
add
ss
jmp
addr16
jb
push
add
adc
add
add
loop
sub
or
mov
xchg
or
out
fdivrl
fisttpl
aam
roll
add
aam
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
or
add
dec
cmp
pop
or
adc
sahf
gs
clc
sar
imul
insb
push
js
or
add
or
dec
ret
cmp
cmpsl
notl
pusha
rorb
imul
push
scas
faddl
add
add
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
repnz
add
ret
xor
mov
add
push
xlat
int
push
ficoms
fldenv
jp,pn
mov
add
add
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
insb
insl
add
insb
fsubrl
outsb
addr16
pop
add
pop
dec
add
imul
or
xchg
dec
and
bound
mov
adc
outsl
jb
sub
daa
adc
dec
testb
outsl
outsl
and
outsb
jns
rcrb
or
jns
bound
jae
insl
addb
bound
es
jo
mov
jbe
jb
push
fcoml
jae
bound
dec
pop
add
cmc
sub
je
mov
dec
cs
mov
loop
jecxz
inc
pop
inc
lret
xor
aas
sbb
sbb
scas
jns
and
je
movsl
and
mov
imul
xor
inc
popa
and
jb
jae
shrb
push
add
das
ja
and
jp
add
fs
arpl
arpl
pop
insl
or
add
movsl
add
test
sub
ret
pop
add
add
or
dec
mov
das
or
push
push
jo
test
xor
add
add
dec
ljmp
add
xor
pop
xchg
std
jecxz
pop
add
aaa
mov
roll
inc
add
add
cld
add
inc
add
push
mov
pop
sub
inc
push
and
hlt
sysexit
inc
add
mov
pop
orb
push
add
cmp
les
add
dec
dec
sub
sub
test
inc
add
mov
xor
pop
add
xor
lods
add
ret
fcmovnbe
xor
mov
pop
add
add
add
loopne
add
js
add
pop
aam
add
add
add
into
stc
add
jmp
pop
add
or
pop
aam
paddw
nopl
pop
adc
test
jbe
scas
mov
inc
add
mov
inc
das
test
pop
sub
sbb
inc
pop
mov
inc
add
inc
add
sbb
inc
add
jo
lock
pop
xchg
ja
pop
je
pop
enter
lcall
mov
pop
pusha
mov
add
pop
getsec
test
pop
aas
mov
mov
sub
mov
sbb
push
inc
pop
punpckldq
outsl
inc
pop
mov
inc
add
pop
into
mov
push
andl
and
adc
pop
out
xor
pop
rolb
rcrl
jle
arpl
cli
pop
dec
lret
pop
int3
pop
sbb
popf
iret
pop
jg
roll
pop
xchg
roll
mov
inc
mov
adc
push
cmp
add
aaa
or
jb
add
addr16
in
inc
add
in
iret
outsl
inc
sbbl
roll
mov
cmp
pop
add
les
inc
mov
mov
fwait
jg
cmp
in
sbb
inc
or
add
mov
cs
add
maskmovq
jne
lock
add
lahf
test
pmaxub
inc
add
repnz
sysret
adc
push
add
jnp
pop
xchg
in
pop
xchg
cmp
mov
or
or
sti
sub
cmp
add
scas
or
add
adc
add
add
sbb
add
cmp
add
add
inc
cmp
add
add
cmp
add
add
add
mov
add
cmp
add
cmp
add
cmp
add
add
add
cmp
add
cmp
add
cmp
add
add
cmp
add
xchg
add
add
add
mov
cmp
add
push
add
sbb
add
sub
add
add
add
add
dec
add
add
jle
add
mov
add
pushf
add
mov
add
mov
add
add
add
add
in
add
add
adc
add
cs
add
dec
aas
add
pop
aas
add
insb
add
add
aas
add
jp
add
mov
add
lcall
add
add
aas
add
out
add
add
add
cld
aas
add
adc
add
cs
add
ds
add
push
inc
add
outsb
inc
add
xchg
inc
add
mov
inc
add
mov
add
mov
inc
add
aam
add
loopne
add
repnz
add
add
add
push
dec
cli
mov
inc
add
sub
add
pop
fists
inc
sarl
add
or
pop
xchg
add
iret
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
outsl
lock
gs
jbe
rclb
out
xchg
adc
lock
add
add
inc
fs
add
ret
add
mulb
dec
outsl
fs
gs
popa
outsb
fs
dec
inc
add
outsl
sub
sub
jae
add
add
je
imul
add
jns
je
insl
push
imul
add
jecxz
inc
add
push
jb
je
jp
push
imul
jmp
jb
outsl
dec
dec
inc
jns
add
push
gs
fs
push
and
and
jg
or
and
add
add
jb
outsb
je
imul
mov
cmp
xor
inc
push
dec
inc
dec
xor
cs
ja
add
int
jo
imul
mov
aaa
jo
add
in
cmp
je
jo
push
add
add
xchg
inc
inc
test
xchg
adc
add
outsb
push
pop
mov
insb
cmp
je
roll
dec
jae
bound
add
jne
addr16
jb
jae
outsb
je
lahf
xchg
pop
add
push
insl
pusha
scas
sub
jo
mov
add
inc
jb
je
arpl
push
gs
add
add
jbe
mov
flds
inc
les
push
adc
adc
cli
add
jecxz
add
add
add
insb
gs
add
or
sub
cmp
xor
add
push
inc
test
popa
pop
add
imul
cld
add
cmc
daa
push
add
dec
add
inc
adc
cmp
push
add
add
add
inc
outsl
insl
insl
popa
outsb
fs
imul
push
add
xchg
nop
inc
outsl
jne
je
add
and
jle
addl
mov
or
add
push
adc
cmp
or
xor
mov
push
insb
gs
outsb
arpl
push
or
jnp
lods
add
push
fisttps
add
mov
cmp
add
gs
push
gs
or
data16
arpl
gs
data16
imul
adc
add
add
cmp
inc
jae
sbb
jbe
cmpsb
or
outsb
fs
jo
outsb
cwtl
or
pop
xchg
add
insb
push
outsb
fadds
icebp
test
ret
adc
add
cmpsb
and
add
push
add
add
add
inc
inc
push
add
adc
inc
dec
or
add
push
or
xchg
popa
addr16
dec
and
daa
mov
add
rolb
inc
add
inc
adc
add
add
popa
jo
imul
adc
add
vmread
aaa
push
add
add
inc
add
jl
add
addb
pop
adc
add
outsl
jae
sub
je
gs
add
das
adcb
inc
add
push
pop
subb
dec
inc
jae
fs
inc
mov
cmc
cmp
jne
lock
lahf
mov
mov
sbb
adc
test
pop
inc
cmpsb
jl
and
inc
push
inc
mov
xchg
cs
pop
pop
and
inc
cmp
and
inc
sbb
nop
lcall
rorl
xchg
sahf
rorb
pop
movsb
test
push
std
or
ret
test
pop
pop
nop
sub
pop
jnp
pop
push
xchg
sahf
sub
mov
fisubrl
das
stos
mov
std
or
xchg
pop
mov
test
sub
shrl
mov
nop
stos
pslld
cli
outsl
add
inc
scas
or
or
sbb
or
ret
mov
add
pop
cmp
xchg
sysret
add
pop
cmp
add
or
push
xchg
add
pop
shlb
stos
add
sbb
sbb
add
push
inc
cmp
inc
mov
sbb
sbb
add
inc
jnp
add
inc
push
sbb
jbe
add
inc
xchg
mov
add
add
add
mov
or
add
sbb
inc
xchg
sbb
inc
orl
mov
addb
xchg
mov
inc
sbb
add
js
add
pop
gs
stos
enter
mov
sbb
cmpsl
add
sbb
add
or
inc
inc
addr16
dec
lret
mov
test
add
add
add
inc
mov
add
add
jb
mov
faddl
loope
or
xstore-rng
cmpsl
add
add
mov
push
inc
add
hlt
dec
add
or
pop
push
pop
adc
sbb
push
sbb
test
sbb
inc
scas
arpl
sub
add
add
cmp
add
add
stos
pusha
cmpb
sub
mov
add
int3
daa
sbb
add
dec
mov
addb
add
add
mov
mov
das
pop
mov
add
or
inc
pop
mov
add
iret
mov
in
call
shlb
das
inc
jle
or
subb
push
ficompl
and
pop
fisubrl
syscall
add
clc
add
stc
add
xor
pushf
adc
mov
push
mov
das
rcrb
inc
add
sbb
enter
les
inc
add
sbb
mov
sbb
mov
sbb
test
inc
add
sbb
mov
inc
add
add
jo
inc
add
inc
add
add
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
add
push
add
xor
inc
add
sbb
and
sbb
inc
add
sbb
or
inc
add
sbb
add
add
hlt
sbb
call
sbb
fcomps
inc
add
sbb
enter
mov
inc
add
iret
loop
add
cmp
push
push
pop
inc
add
inc
add
pop
mov
inc
aas
pop
add
cmp
icebp
xchg
push
push
jl
mov
inc
aas
mov
inc
add
pop
inc
and
daa
str
sbb
pop
roll
xchg
popa
xchg
es
mov
mov
add
xor
add
dec
add
add
fimull
jp
jl
es
jg
push
inc
loope
mov
mov
jle
add
test
dec
add
add
fimull
push
in
add
add
xlat
loop
and
pop
jle
loope
sbb
jmp
jp
in
add
das
cmpsl
push
adc
add
add
xchg
jbe
or
push
repz
dec
stc
fdivp
pusha
pusha
sbb
push
cmp
int3
push
dec
mov
lock
push
and
jno
inc
enter
mov
daa
fwait
int
sub
addl
add
and
enter
sub
fldl
inc
aas
pop
inc
je
push
mov
out
pop
adc
lcall
out
test
xchg
test
mov
add
add
aam
mov
pushf
push
inc
sbb
pop
fisubl
js
sub
fcompl
das
js
pop
sub
fiadds
add
add
jbe
xor
xor
jle
ss
lahf
subl
push
mov
sbb
add
add
repnz
mov
mov
pushf
mov
std
out
push
add
in
pop
add
inc
xlat
mov
add
add
xchg
pushf
inc
out
inc
shlb
sub
sub
movb
pop
gs
insb
cmc
add
add
call
fdivr
cmp
jge
aam
out
gs
loopne
pop
mov
xchg
sbb
add
inc
or
push
ja
daa
mov
loop
sti
call
mov
push
loope
mov
popa
nop
cmp
orl
neg
movsl
mov
pop
sbb
add
add
sub
adc
xor
movsb
call
mov
inc
push
or
xor
mov
add
add
arpl
xorl
add
daa
or
sti
jmp
jae
pop
jle
add
add
mov
and
pusha
push
iret
fisubrs
add
iret
fsubrl
mov
aaa
push
data16
subl
add
add
xchg
adc
movsb
xor
repnz
jp
lcall
add
lret
add
add
add
jnp
sahf
popa
mov
daa
lcall
xor
add
add
jbe
add
orl
sub
arpl
cwtl
inc
lcall
add
add
pop
lcall
popa
cmpsl
push
cwtl
cmp
dec
scas
push
lcall
add
add
cmp
cwtl
and
push
sahf
dec
test
inc
cmpsl
sub
add
cwtl
cmp
sub
cmp
cmpl
dec
mov
cmp
add
add
and
and
bound
pop
movsb
and
xor
cmpsl
push
test
pop
mov
mov
daa
jp
lods
inc
mov
sahf
dec
cmpsl
dec
test
add
cmp
movsb
pop
test
dec
test
xor
pop
test
add
add
sub
xor
lcall
inc
lcall
add
add
pop
xchg
inc
cltd
sub
movsb
aas
mov
cmp
ds
add
add
dec
popf
pop
cmpsl
cmp
cmp
sub
arpl
xchg
add
add
mov
cmp
cmp
add
js
cmpsl
push
lcall
xor
add
add
test
test
jbe
jl
lcall
sub
daa
stos
aas
movsl
push
add
add
jle
mov
xor
subb
push
cmpsl
mov
pop
push
and
sub
add
add
pop
test
pop
mov
mov
cs
dec
sti
lahf
add
add
div
mull
div
divb
div
div
div
div
cld
sti
inc
inc
inc
clc
inc
addb
adc
std
idiv
dec
dec
div
testb
sbb
div
push
add
testb
andb
pop
sub
mov
mov
testb
adc
testl
inc
add
cltd
cmc
mov
cmp
test
pop
xchg
pop
roll
add
add
ror
les
dec
shrb
add
add
xor
fdivrl
add
add
cmpsb
ret
subb
lahf
cmpsl
inc
xchg
insb
mov
pop
push
cmp
xor
insb
mov
std
push
add
add
xchg
outsb
shl
bound
or
and
bound
cmpsb
xchg
xlat
and
in
movsl
repz
loopne
pop
add
xor
sbbb
xchg
xchg
sub
sbb
mov
add
cmp
xchg
add
lods
jnp
movd
jo
int
jnp
add
mov
push
fldl
and
add
add
mov
mov
fiadds
je
fcoms
push
into
scas
mov
pop
cli
cmp
enter
pop
jl
cmp
add
add
xchg
ljmp
stos
stc
mov
sahf
mov
mov
orl
add
add
loop
lea
pop
loope
inc
movsb
js
pop
repnz
rcrl
das
imul
push
cld
jg
loopne
add
add
mov
cwtl
iret
or
sbb
jle
mov
add
mov
cmpsl
daa
imul
std
sub
faddl
mov
dec
push
ret
int
adc
repz
sti
xor
add
add
sub
dec
jbe
test
push
inc
push
jge
add
or
test
xchg
inc
cli
xchg
orl
add
pushf
and
pop
test
mov
ds
add
push
neg
jb
mov
js
add
add
mov
daa
jns
push
cli
jge
push
cmp
pop
int3
in
jb
add
lods
inc
mov
xchg
mov
add
add
jno
fs
loope
popa
mov
fiaddl
lret
lea
sbb
cmp
cltd
cmc
popl
add
add
ficomps
out
push
lret
inc
sbbb
dec
in
dec
jnp
or
xchg
adc
xchg
fiaddl
add
add
sbb
push
push
mov
in
mov
inc
xlat
add
popa
iret
lods
or
fildll
cs
adc
add
add
mov
sbb
enter
push
jge
push
stos
cmp
call
sub
add
add
jne
repnz
xchg
and
xchg
ret
cmpsl
test
push
loop
add
add
sub
inc
mov
enter
aas
push
jae
mov
ljmp
das
mov
sbb
jo
inc
jae
jne
xchg
in
notl
jnp
mov
inc
inc
imul
rclb
mov
add
add
pushf
push
fiaddl
test
pop
jne
push
pop
sbb
mov
lcall
jg
mov
dec
jno
bound
cld
inc
add
cmpsb
je
cmpb
or
and
add
add
inc
push
out
roll
jne
hlt
fucomip
push
repnz
mov
outsb
lods
scas
insl
push
addl
lret
sbb
loopne
xor
mov
std
jnp
add
adc
inc
popa
add
jbe
add
add
push
out
js
cld
xchg
or
add
popf
movsl
or
fidivl
inc
add
add
mov
mov
lahf
mov
popa
and
cld
pop
mov
add
add
loope
adc
jg
or
jns
jle
lcall
adc
stos
sbb
or
add
add
inc
add
shll
loope
mov
lods
out
mov
ljmp
shlb
lods
sub
push
push
xchg
pushf
cmpxchg
int3
sub
add
add
cmp
sbb
sbb
xchg
mov
xor
addr16
pop
mov
mov
jecxz
lods
add
add
gs
push
int
in
int
dec
cmp
std
add
or
imul
leave
adc
shrl
pop
popl
add
add
aad
outsb
jbe
loopne
fisubrl
add
por
sbb
pushf
xchg
push
jmp
dec
fsubp
mov
add
add
lret
push
das
scas
repz
jl
lods
addr16
out
mov
jne
mov
out
rolb
add
add
push
or
dec
fidivl
std
call
cli
mov
or
hlt
adc
jge
add
add
jb
lock
fists
inc
repz
jo
ljmp
stos
push
lods
cmp
add
add
xor
fbld
jne
and
push
fmull
sbb
inc
out
in
arpl
dec
add
add
fwait
jno
fs
mov
loopne
jecxz
and
fs
jae
pop
neg
jae
insb
ss
clc
call
add
add
and
sub
cmp
sbb
fisubl
fldl
cmp
cmp
jecxz
iret
sub
add
add
mov
daa
insb
scas
iret
pop
shll
aaa
xchg
daa
jns
sbb
dec
in
movsb
add
add
jge
call
jmp
imul
mov
dec
and
ss
js
add
add
mov
pop
jecxz
iret
and
sbb
out
jge
and
cmp
add
add
sbb
test
jo
movsl
sub
fwait
test
pop
sub
jns
jle
clc
jb
dec
push
adc
add
add
divl
sub
jb
mov
out
sub
jle
loopne
cmp
gs
ret
push
dec
movsl
sbb
pop
fcmove
mov
add
add
lock
sbb
fwait
call
out
xchg
mov
cmc
pusha
hlt
fildl
sbb
add
add
cmp
jp
mov
pop
add
punpckhbw
xor
jp
jb
rcll
insl
add
add
icebp
push
hlt
rolb
test
scas
insb
jnp
lods
test
pop
iret
mov
add
add
sbb
sub
cmpsb
fldpi
mov
bound
out
cli
jno
adc
push
dec
pop
lea
cltd
xor
add
lret
fcompl
sahf
fbld
rorl
and
das
xchg
outsb
loope
pop
add
add
iret
inc
test
repz
inc
pop
arpl
add
pop
rcrl
or
mov
add
add
xor
push
and
sbb
sbb
loopne
lds
mov
cmc
xchg
add
add
je
int
and
sub
sbb
xor
stos
fstps
push
leave
xlat
pop
mov
add
add
iret
pushf
stos
mov
xor
test
imull
in
rclb
jl
mov
add
add
inc
jp
cmp
or
xchg
xchg
and
popf
fwait
adc
dec
shlb
and
add
add
lods
dec
test
mov
shr
sbb
pop
sub
push
add
add
fmuls
cmp
std
out
mov
fldl
xor
xor
jns
jmp
inc
add
add
ljmp
adc
flds
lahf
stos
inc
mov
push
shlb
xchg
or
add
add
mov
fstpl
sahf
dec
mov
mov
pop
lret
adc
cmp
xor
add
add
dec
into
gs
fstps
ljmp
jmp
lret
jno
fisttpl
push
cmpsl
mov
add
push
insl
pop
xchg
sbb
adcl
stc
xchg
adc
push
scas
and
add
add
add
push
out
add
orl
push
ficomps
lods
fsubrl
xor
mov
cmpsb
push
dec
jns
xchg
dec
scas
or
add
add
sub
aad
test
dec
daa
insb
mov
test
scas
sbb
into
push
add
add
cmpsb
fs
xorb
add
je
cmp
xchg
addr16
push
add
add
daa
xor
jb
outsl
lods
pop
adc
outsl
scas
inc
mov
lret
ret
jmp
and
add
add
pop
ret
ret
cltd
inc
mov
cld
fs
push
stc
out
js
cli
mov
add
add
add
imul
mov
dec
dec
mov
clc
push
mov
clc
testb
or
add
add
mov
ljmp
mov
loope
inc
cmc
inc
mov
fildll
jmp
int
add
add
xor
icebp
xor
in
shl
test
mov
nop
test
cs
pop
add
add
pop
pop
pushf
push
or
andb
std
sbb
lods
stos
inc
addl
orb
adc
xchg
add
add
xor
jns
xchg
in
lds
and
iret
imul
add
add
andb
out
mov
popa
cmc
jmp
fstpt
pop
mov
ret
fwait
ret
sbb
add
add
sbb
mov
mov
sti
mov
out
mov
scas
mov
add
iret
ret
dec
mov
movswl
mov
mov
pop
rcrb
rcrb
pop
mov
mov
mov
mov
xchg
ret
pop
rclb
mov
mov
mov
aaa
mov
add
ja
ja
test
hlt
mov
mov
mov
mov
xor
xor
aam
aam
aam
add
add
push
mov
xchg
mov
in
in
in
fs
movsb
mov
and
add
add
les
inc
rolb
cmc
pop
cmp
push
icebp
push
jno
mov
mov
rcrl
push
add
add
push
pop
xchg
pop
adc
pop
popa
pop
popa
push
mov
pop
inc
pop
sbbl
push
or
push
add
add
repz
rcrl
pop
stos
push
fistl
cmpsl
push
cmpsl
lret
cmpsl
push
cmpsl
out
xchg
in
frstor
add
add
jno
popa
sub
daa
aaa
daa
adc
imul
sub
es
daa
sub
cld
sub
xchg
sub
add
add
es
daa
fisubl
lcall
daa
es
es
sub
xor
enter
add
ficoms
fmulp
fisubrs
divb
div
push
neg
mov
ret
shl
lret
lret
sbb
sti
fiaddl
add
add
fldt
repz
imul
leave
push
fstl
repz
adcl
roll
add
mov
pusha
pop
cmp
cs
femms
decb
fmuls
cs
dec
shlb
push
jmp
add
add
or
pop
push
adc
fsubs
push
cmc
xlat
jno
xchg
inc
ret
and
adc
addb
add
add
jg
cmc
and
adc
or
and
sbb
mov
inc
lock
popa
and
or
add
add
inc
and
shr
out
inc
cmpsb
mov
ljmp
or
test
les
or
cld
sub
add
add
jp
movsb
stos
sub
cld
xchg
sub
cmp
les
or
sub
sbb
cmp
xchg
lods
test
add
add
xor
sub
out
adc
jl
sbb
inc
cld
shlb
push
mov
lock
add
add
in
jae
xchg
in
pop
aad
in
cmc
aam
popf
mov
call
jle
mov
add
add
lahf
fcoms
movsb
ds
and
mov
cltd
xorb
mov
push
mov
sbb
add
add
les
sub
or
jae
mov
adc
icebp
xor
sub
add
pop
cld
mov
mov
or
cmp
stos
push
inc
outsb
inc
xchg
cld
mov
leave
js
add
add
pop
adc
mov
rcl
lods
xchg
es
xor
jge
xchg
adc
add
add
mov
ss
aas
xchg
mov
lret
mull
js
dec
mov
js
add
add
sbb
push
pop
pop
xchg
sub
loope
addr16
and
mov
or
iret
sub
push
inc
aaa
loope
add
add
pop
inc
add
fbstp
out
xchg
mov
bound
daa
mov
xchg
add
add
imull
les
lock
mov
or
vcvtpd2dq
cmp
cltd
mov
scas
add
add
and
xor
sbb
ret
xor
inc
inc
mov
push
mov
or
add
xchg
push
lret
add
jne
insb
loope
pop
sub
nop
aam
push
xor
xor
sbb
add
add
aaa
mov
scas
leave
push
ret
sub
pop
nop
popf
add
cmp
andb
test
add
add
sarb
test
mov
xor
bound
sbb
add
add
js
sub
aas
pop
lret
and
mov
inc
inc
or
add
out
or
add
add
or
push
xchg
inc
pop
jl
jae
inc
test
pop
into
enter
jle
jo
jge
pop
cli
add
add
inc
mov
adc
movsb
sbb
movsb
roll
fdivrs
jne
add
cmc
hlt
add
add
lret
dec
fcomip
in
and
inc
mov
stos
push
xchg
cmc
mov
hlt
xchg
mov
add
add
mov
and
cmc
dec
icebp
xor
icebp
push
ljmp
lods
mov
stos
sbb
add
add
sub
and
and
clc
inc
ds
jae
push
pushl
add
add
pusha
push
add
hlt
dec
loopne
in
test
gs
shl
fbstp
xchg
add
add
xchg
out
jg
andl
sbb
fwait
adc
mov
jecxz
adc
pushf
mov
imul
add
mov
in
add
cmp
clc
push
mov
push
mov
mov
mov
add
add
fnsave
xchg
xchg
lds
push
daa
ret
push
mov
add
add
ror
adc
adc
cmpsb
jge
adc
jp
sbb
push
ja
cmp
out
cmpsb
add
add
enter
dec
and
xchg
lds
adc
push
mov
xor
sub
inc
add
add
sbb
dec
loope
fidivrs
imul
dec
or
leave
fisttps
and
lret
jge
sub
repz
lret
les
add
add
fbstp
push
pop
arpl
xchg
jnp
xlat
or
or
rcrb
cltd
push
pop
daa
insl
and
add
add
sub
loop
push
and
xchg
popa
in
pop
mov
mov
popa
sub
lock
xchg
add
add
test
mov
mov
bound
xchg
or
test
add
add
jno
fs
ja
mov
mov
clc
sahf
in
add
fsts
std
cmpsl
push
ljmp
movsb
repz
add
mov
shlb
iret
jecxz
fistps
fdivrp
mov
js
movsb
sbb
add
add
outsb
mov
pop
movsl
insb
cmp
xor
insb
sti
add
int3
cmove
add
push
shll
pop
xor
xor
mov
mov
jo
mov
test
add
add
xchg
xchg
dec
mov
jge
jae
sub
popa
cli
repz
fdivl
nop
add
add
ret
mov
jg
scas
fcompl
inc
int3
cmp
add
decl
cmp
add
add
push
enter
cmpsl
jecxz
dec
call
sub
xor
nop
repz
insb
scas
lods
nop
in
xchg
add
mov
pop
mov
jbe
outsb
scas
xor
cwtl
nop
mov
add
cs
repz
push
mov
or
imul
mov
in
cld
add
add
add
xchg
in
subl
fsqrt
or
stos
dec
push
shll
lahf
popf
cmp
pop
rolb
add
fisttpl
jne
lret
sbb
dec
aaa
lcall
push
cmpsl
fcoml
outsl
es
add
add
data16
enter
in
cmpl
cmp
in
scas
sub
jnp
cmp
int3
pop
add
add
push
repz
test
ljmp
ljmp
inc
insb
iret
lods
jmp
add
xchg
cmp
inc
adc
pushf
mov
cmc
pop
push
inc
push
arpl
sbbl
xlat
test
add
add
repz
lahf
jnp
xchg
scas
inc
cmpl
mov
push
iret
mov
cmc
xor
xor
add
add
pop
add
stc
loope
jge
dec
js
addl
testb
mov
inc
xor
test
das
scas
shrb
dec
fidivrs
sub
jecxz
push
mov
icebp
les
xchg
mov
popf
add
add
enter
jb
pop
sub
pop
test
xorl
jb
arpl
pop
in
int3
pop
repnz
add
cmp
cmp
loop
push
cmc
jecxz
mov
cmp
loopne
add
add
add
cmp
xor
rcll
int
mov
fistl
xchg
insl
addb
gs
add
adc
xor
push
or
in
in
xor
sub
shlb
aam
mov
add
add
insl
xchg
xchg
lea
sahf
lods
lea
add
cmp
xchg
push
lds
add
add
xor
sub
xor
andl
mov
xchg
or
scas
mov
adc
xchg
cld
imul
jle
add
add
into
push
inc
fstl
rcrb
and
xchg
sub
inc
mov
add
aad
pusha
rol
and
push
shrb
push
das
shl
xor
inc
push
std
xor
xor
sbb
add
add
das
pop
sub
inc
enter
daa
sbb
push
cwtl
cmc
gs
xor
add
add
mov
pusha
daa
repz
test
rcrb
xchg
jecxz
add
test
add
add
or
cmp
sbb
aaa
es
cmp
pop
je
mov
mov
lods
jo
inc
mov
add
insb
cmp
popa
dec
xchg
cmp
es
idiv
cmp
imul
popa
inc
iret
lds
add
add
mov
inc
inc
pop
dec
ror
add
xchg
mov
jno
test
mov
add
add
and
pop
sbb
test
sub
push
stc
dec
pop
fldcw
cmp
mov
cmp
cmp
add
pop
int3
jmp
push
jmp
jge
lods
mov
jecxz
or
lahf
lds
pop
jmp
test
add
sbb
insb
jge
int
in
or
repz
std
xor
shl
lcall
daa
pusha
inc
lods
cmp
cli
xchg
daa
stc
pop
das
aam
scas
push
sub
out
cld
lahf
lds
cmp
add
add
lahf
insl
lods
clc
sahf
dec
jbe
int
adc
mov
push
popf
popa
fsubrl
pop
xchg
ret
aad
xchg
popa
roll
add
vsubsd
mov
mov
lcall
add
fstpt
add
add
sub
or
imul
into
or
sub
dec
mov
in
cmp
xor
out
jl
xor
add
add
mov
test
or
lret
sbb
cmpsl
xorb
in
iret
push
insb
ret
xor
insl
inc
cmpsb
or
sbb
add
leave
pushf
loope
scas
add
faddl
add
add
sahf
je
fnstsw
mov
lods
mov
cmp
inc
ret
mov
xchg
lea
int3
lahf
add
add
mov
and
xchg
sahf
cli
rol
shlb
mov
test
js
jp
push
stc
out
popa
inc
add
add
lret
xchg
or
lret
addr16
mov
and
mov
ljmp
add
lea
jns
sarl
or
ljmp
loop
insb
cmp
mov
pop
les
inc
add
add
mov
sbb
fsubr
aaa
jge
std
jnp
fwait
mov
mov
jmp
loopne
lds
add
add
jbe
dec
out
mov
adc
ret
cmpsb
popf
xchg
inc
lods
loopne
inc
and
sbb
add
add
loopne
or
loope
xor
jne
jecxz
sbb
dec
pop
ret
mov
add
xchg
sbb
std
pop
notb
lret
mov
pop
jg
fisttps
cmp
test
xor
add
add
push
mov
int3
sub
mov
jge
mov
fiaddl
add
add
fucom
sbb
and
cmp
mov
or
mov
add
mov
mov
sbb
jns
and
xor
loopne
cld
into
popf
inc
add
add
mov
fcmovu
test
adc
mov
mov
push
repnz
sub
add
dec
mov
push
ss
lea
cmpsl
jle
xchg
scas
int3
fxtract
mov
xor
add
add
fldt
or
sub
fldpi
sub
mov
sbb
lods
fdivrl
sarb
pop
lds
add
fcomp
mov
cmp
add
mov
out
ret
push
inc
daa
imul
mov
out
add
add
cmp
push
jmp
jecxz
sbbl
dec
push
mov
add
roll
sbb
jle
pop
out
fucomip
jmp
adc
inc
mov
mov
jmp
add
or
insl
jl
mov
orb
push
add
add
xchg
add
add
lcall
push
aaa
xchg
movsl
lock
mov
mov
arpl
mov
pop
cltd
int
nop
sub
nop
mov
add
fcoms
and
addb
jl
jbe
pop
test
and
add
add
lret
sub
dec
data16
mov
faddp
repz
out
mov
cmpsl
jnp
sbb
add
add
clc
lcall
push
icebp
push
add
cltd
ret
and
xor
add
add
iret
push
frstor
push
jecxz
mov
cmp
push
ljmp
cli
aaa
mov
cmp
add
add
sbb
enter
inc
xlat
pop
jne
outsl
std
ret
push
sub
inc
sbb
rcrl
lret
add
add
pop
mov
aaa
mov
orb
dec
ja
push
inc
inc
cwtl
stc
inc
leave
add
add
pop
pop
jg
scas
mov
jae
pop
repnz
int3
xchg
mov
hlt
lds
in
fldl
inc
mov
add
add
pop
mov
clc
xchg
js
and
shrb
add
movsb
sti
lret
add
add
mov
adc
stc
xlat
or
rcll
jno
sub
add
add
dec
xor
jle
shrl
loopne
add
lock
mov
out
jl
sbb
add
add
adc
mov
int
nop
arpl
leave
xor
push
xchg
out
push
popf
jns
push
out
add
add
cli
call
inc
lahf
call
or
add
push
ds
imul
add
or
in
push
gs
sub
rclb
fdivl
outsl
xor
fstpl
js
add
add
adc
js
push
xchg
ret
pushf
xchg
test
jno,pt
jbe
cmpsl
add
shr
adc
add
and
clc
stos
pop
push
imul
cmpsb
xchg
xchg
addr16
xchg
push
push
push
adc
pop
decl
in
jns
cmp
xor
out
mov
adc
test
inc
aaa
jp
mov
mov
add
jne
roll
add
jg
stc
ja
jne
xor
inc
shrl
sbb
lock
jne
xor
into
pop
movl
pop
dec
sbb
imulb
mov
shl
inc
xor
mov
xor
pop
jl
imul
js
add
add
loopne
icebp
and
fs
pop
addl
bound
xor
in
ja
sub
xchg
add
add
lock
aas
insb
mov
xchg
fs
mov
out
mov
sub
sbb
add
add
cmp
ds
shl
lock
fimuls
ds
cld
add
add
test
lahf
sub
dec
ss
xchg
repz
inc
test
mov
jp
dec
insw
mov
add
add
aad
mov
lret
std
adc
sub
je
lret
or
or
enter
in
adc
inc
cmp
jne
jno
cmp
xor
sub
add
add
mov
movsb
lock
adc
fcmovbe
mov
and
out
adc
dec
jno
aas
or
add
add
fs
jbe
or
inc
adcb
outsb
pushf
das
xchg
das
jecxz
dec
fistps
aaa
add
add
jmp
add
int3
adc
lea
stos
xor
sbb
sbb
lcall
nop
pop
addl
inc
pop
icebp
dec
xor
mov
icebp
clc
insl
or
cmp
push
inc
int3
ja
loop
adc
add
add
adc
fsubs
js
imul
and
mov
add
jne
loope
add
add
mov
adc
sarl
scas
mov
add
sub
cli
ror
add
add
dec
shr
lock
push
shrb
inc
lods
xor
in
rcpps
or
lret
xchg
add
add
and
daa
pop
mov
data16
sub
pop
mov
js
inc
add
add
out
into
or
adc
and
push
pop
sbb
mov
shl
mov
add
add
out
repnz
rcll
daa
daa
inc
ds
sub
cmc
add
add
mov
jne
push
jge
ja
inc
adc
shrb
popf
hlt
enter
lods
mov
add
add
jl
mov
fisubrs
fimuls
sbb
mov
jns
and
add
add
sub
fisttpl
lock
mov
mov
sbb
mov
mov
add
add
pop
repz
pop
xchg
stos
cs
jp
mov
in
aaa
cli
push
div
cli
mov
fisubs
mov
add
in
lods
shll
cmp
cwtl
dec
sbb
mov
sub
cmp
rcrb
jne
add
add
sub
cmc
xor
lds
inc
ss
jp
jmp
adc
add
add
ss
push
push
ja
shlb
in
imulb
inc
idivb
and
add
add
mov
adc
sbb
push
lods
ror
push
cmpsb
lods
pop
cmc
xor
xor
loopne
cmc
jne
repz
cmpsb
mov
jo
repnz
lret
mov
or
add
add
sbb
and
push
xchg
pusha
push
lods
jne
imulb
repnz
icebp
neg
push
cmp
nop
movsl
add
add
repnz
pop
or
inc
jge
or
daa
cmc
idiv
clc
mov
insb
jne
push
cmc
test
cmc
out
cmp
add
or
in
sbb
adc
sub
mov
inc
add
add
add
add
leave
push
rclb
les
add
xor
jae
ret
mov
enter
add
add
scas
hlt
popa
popf
fmulp
push
adc
sub
popf
cmp
push
mov
cmp
add
jg
aas
jne
add
add
outsb
aas
pop
dec
pop
cmc
cmp
add
xor
fcmove
cmp
dec
aam
out
fstpt
push
xor
add
add
inc
mov
add
sarb
loopne
sub
mov
scas
aas
jmp
les
add
add
and
or
sbb
jns
and
aaa
mov
cmp
push
adc
add
add
fidivl
mov
sub
imul
jl
popa
in
je
insl
int3
adc
nop
add
pop
fiaddl
add
add
pusha
stc
push
dec
add
xchg
lock
jbe
xor
add
add
es
lret
mov
jno
xor
push
mov
and
xor
test
xor
cwtl
jno
add
add
loopne
lds
cmpsb
jle
jno
popf
xchg
add
cmc
enter
mov
mov
add
add
and
out
mov
lods
inc
in
adc
push
nop
push
pop
jbe
sbb
dec
incl
add
add
in
pop
inc
sbb
mov
movsl
test
push
cmp
je
fiadds
add
add
pop
mov
jmp
cmp
in
mov
xchg
div
mov
fucom
jb
jbe
jle
add
add
int
xchg
xlat
adc
cmp
repnz
cmc
mov
cmc
pop
cmpsl
out
xchg
cmp
and
add
icebp
dec
popf
pop
fcomi
add
xchg
mov
cmc
dec
lahf
pusha
cmp
inc
test
out
hlt
cmp
cmpsl
jbe
xchg
mov
cmc
mov
movsb
pop
mov
repnz
cmp
test
out
cmp
lret
add
add
jmp
nop
cmc
dec
sbb
je
data16
outsb
mov
jecxz
cs
jne
mov
ljmp
test
xchg
cwtl
imul
sbb
push
mov
and
daa
into
mov
add
add
or
push
mov
addr16
out
pop
push
mov
lret
xor
add
add
inc
into
cmp
and
xor
loop
jg
mov
mov
cwtl
xor
sbb
in
mov
dec
out
std
add
add
lock
push
adc
xor
sub
sbb
out
sub
aam
pop
fchs
sbb
popf
add
add
jp
dec
mov
stos
add
cmpsb
aas
stos
je
xchg
pop
pop
std
sub
lcall
pushf
neg
hlt
cmpsb
out
add
add
mov
sahf
rorl
repz
dec
inc
cltd
jecxz
inc
inc
xor
jb
sub
pop
ja
out
add
add
lds
or
xchg
dec
lea
fucomip
push
xor
push
or
pop
bound
ja
add
add
push
or
lds
mov
cld
icebp
xchg
mov
mov
fisttpl
nop
add
add
mov
shl
in
push
pushf
aas
popa
lcall
adc
insl
pop
in
adc
add
scas
mov
mov
inc
adc
mov
dec
popf
mov
mov
add
add
jbe
aaa
add
call
cmpsb
xchg
int
sub
test
xlat
push
inc
xor
push
add
add
add
into
sahf
mov
mov
mov
aaa
mov
jb
shlb
loopne
pop
add
add
cmp
pop
out
add
pop
aaa
aad
push
inc
cmpsb
xchg
add
pop
aaa
xchg
ret
xor
loope
pushf
xlat
mov
add
add
cmp
sbb
cmpb
jnp
in
movsl
jl
fistpll
add
add
mov
dec
das
dec
mov
mov
sbb
leave
push
das
pop
imul
pop
inc
lock
pop
or
add
add
mov
lret
das
popa
sbb
jp
jecxz
loop
add
jmp
flds
add
add
or
sub
or
mov
push
js
lret
mov
out
mov
mov
pop
xor
mov
jnp
add
add
pop
mov
inc
or
cmp
adc
cmp
xor
adcb
sub
add
add
in
jnp
mov
or
adc
mov
int
shll
scas
movsb
dec
je
pop
shlb
mov
dec
and
add
add
mov
push
out
mov
inc
mov
arpl
jns
add
add
cmpsb
xor
xchg
mov
test
mov
jae
mul
in
jg
add
leave
iret
xorl
add
add
and
xchg
popa
or
pop
mov
sub
cmp
mov
push
std
sub
mov
add
add
fcmovbe
lahf
add
stc
outsl
or
adc
icebp
xor
mov
dec
mov
repz
sbb
add
add
and
mov
push
imul
popa
cmp
mov
cltd
lret
add
dec
add
add
mov
cmp
aas
jns
mov
xchg
mov
sub
in
insb
pop
inc
pop
add
dec
sbb
stos
sbb
add
add
dec
xchg
jno,pn
arpl
xchg
fmuls
xor
scas
xchg
or
xor
inc
add
add
aam
lret
shll
aad
add
xchg
incl
dec
outsl
in
mov
les
sub
add
add
fidivs
gs
dec
xor
mov
in
jns
repz
push
or
mov
add
or
mov
std
mov
xchg
lcall
pop
push
push
mov
add
add
push
jns
inc
mov
out
xchg
movsl
loope
push
loope
lods
sub
movsl
sbb
xchg
pop
xchg
cwtl
incl
add
add
cs
lret
cmpsb
pop
fwait
das
aas
push
addr16
test
pop
stc
sahf
jcxz
and
decl
add
add
mov
enter
sbb
add
rep
stos
cmp
pop
xor
rolb
add
add
pop
mov
es
lahf
in
jmp
xor
inc
cmp
sub
mov
sbbb
into
add
add
daa
aad
and
dec
aas
movsl
negb
xor
inc
pop
sbb
iret
stc
je
mov
mov
pop
cmpsb
and
and
sub
pusha
jp
in
push
add
cltd
setg
sub
jp
jne
mov
add
add
lods
mov
ds
pop
lcall
stc
test
notl
sbb
pop
pop
clc
add
add
popf
fsincos
lods
orb
or
into
clc
ds
ret
repnz
out
imul
add
mov
mov
jp
into
andl
cmpsl
mov
rclb
add
movl
insl
sar
ja
adc
cmp
push
idivb
out
lret
add
add
outsb
push
ficoml
jmp
inc
xor
adc
pop
mov
pop
cltd
sub
push
loope
popa
jbe
xchg
add
add
addl
ja
out
inc
xchg
rclb
jb
out
imul
jne
pushf
add
add
add
js
add
lods
addb
andl
push
orl
lahf
ret
add
add
aad
std
notb
push
sti
insl
jecxz
data16
aam
sbb
lret
mov
addr16
jecxz
stc
ficoml
push
dec
add
add
shl
and
imul
loope
jmp
ret
inc
call
dec
popl
test
add
mov
test
add
out
mov
rorl
mov
push
daa
mov
add
fwait
jp
inc
shrl
sbb
add
mov
adc
inc
lods
ror
cwtl
add
add
faddl
lds
imul
cld
mov
clc
adcb
fnsave
rcll
pop
add
add
jbe
sub
lcall
jnp,pt
pop
adc
or
pop
scas
dec
idivb
add
jae
xchg
ljmp
clc
mov
popf
pop
test
dec
rcll
add
cmp
mov
sti
test
dec
push
and
jbe
and
fs
xchg
sub
jb
add
add
loope
xor
ss
jg
inc
dec
xor
push
push
int
add
inc
inc
dec
push
add
add
sbb
adc
xor
cs
xchg
lods
mov
testb
inc
ret
je
adc
add
add
adc
daa
sbb
adc
fwait
xor
and
jp
add
add
out
ss
sbb
insb
mov
jg
inc
xor
popa
outsb
xor
add
or
inc
clc
test
rorl
testb
pop
pushf
add
push
hlt
cltd
cmpsb
mov
add
lods
dec
stc
or
sarb
shrb
mov
xchg
out
iret
movsb
sbb
lret
add
add
fsubrl
mov
push
test
rcrl
insb
fwait
xor
push
lea
add
add
add
lods
mov
shlw
jbe
pushl
xor
pop
lods
test
lods
sbb
jmp
add
add
sub
sarb
int3
pop
cmp
es
pushf
ds
mov
push
aad
ja
mov
add
add
daa
enter
outsb
out
xchg
ret
push
bound
adc
adc
add
xchg
add
add
mov
pop
sub
popf
fadds
fcomps
adc
lock
xchg
pushf
sbb
lahf
add
add
pushf
movsl
mov
mov
cmp
or
inc
addb
mulb
xchg
inc
cmc
push
ret
enter
add
push
xorl
arpl
rcr
mov
pop
pop
ret
add
add
ficompl
ja
inc
lcall
fisttpl
add
push
add
fistps
push
bound
add
add
pop
stc
xorl
sti
arpl
dec
outsl
iret
inc
mov
xchg
shlb
dec
lods
and
add
add
ficompl
dec
xchg
lahf
xchg
cmp
pop
push
inc
jb
mov
mov
sarl
sahf
add
add
std
cmpsb
or
mov
or
leave
aas
push
repnz
stc
test
test
mov
add
add
shlb
inc
idivb
lahf
xor
jp
sbbl
sbb
and
mov
mov
add
add
sbb
scas
sub
incl
aaa
push
adc
addr16
je
stos
insb
jae
or
fcmovnbe
pushf
lcall
fstl
scas
adc
jbe
xor
in
lock
cmc
lods
addb
xchg
test
add
fisttpll
fimull
mov
push
push
xor
call
ret
rorb
push
ds
add
add
fisubl
pop
out
adc
out
outsb
insb
mov
sbb
clc
pop
aas
scas
inc
in
test
fnstenv
add
add
and
dec
or
xor
ds
mov
stos
mov
ret
insl
mov
add
add
stos
adc
mov
ds
pop
inc
stos
mov
adc
jg
and
add
xchg
arpl
aaa
inc
adc
mov
test
add
inc
push
int3
sbb
add
add
add
pop
mov
out
xor
lods
call
insb
sbb
mov
add
enter
jge
add
xlat
xchg
and
lahf
dec
ds
and
push
mov
scas
call
add
jge
mov
sbb
or
pushf
leave
push
push
xchg
das
push
mov
inc
sti
add
sbb
add
add
mov
jp
inc
cmp
sti
jl
mov
lret
mov
fimull
cwtl
push
ficoml
add
loope
add
movsb
test
sub
es
xor
xor
pop
test
repz
add
sarb
jge
rcrb
jae
mov
adc
mov
loope
jle
push
dec
add
add
jno,pn
sbb
cmp
stc
fsubl
mov
pop
nop
subl
stos
adc
aaa
inc
fmulp
outsb
jge
push
testl
dec
lret
jmp
pop
mov
cmp
push
push
pop
aaa
in
pop
jo
cmp
dec
inc
cmp
add
add
mov
cli
add
popa
pop
enter
repnz
test
xor
ljmp
test
cmp
mov
pop
sub
test
daa
lret
rcll
jbe
push
insb
xchg
sti
mov
inc
sbb
add
add
std
test
inc
pop
gs
shlb
test
insl
mov
xchg
das
les
std
inc
add
add
and
fldt
shl
pop
dec
inc
ds
loopne
pushf
ss
ss
add
aam
or
mov
jecxz
pop
xchg
mov
xor
insl
and
scas
lret
pop
lods
cmp
add
add
add
xor
xorb
jle
xor
pop
mov
pop
cmp
in
push
lods
mov
movsb
add
add
jle
icebp
lods
adc
rcll
lock
lret
and
or
stc
ds
rcr
leave
nop
xor
xor
add
add
inc
push
sub
xor
repz
sub
notl
std
outsb
in
sbb
xlat
aas
dec
popa
push
cmp
std
inc
add
add
jae
div
xchg
addb
cli
fs
mov
lcall
pop
xor
cmp
add
add
mov
cs
xor
xchg
inc
mov
inc
test
cmc
call
lret
aad
add
add
jg
int
test
repnz
or
add
mov
cmp
icebp
cmp
cmc
and
cmp
movsl
clc
cwtl
and
and
inc
jne
shrl
push
jmp
jo
outsb
into
mov
add
add
pop
add
xchg
push
adc
sub
sub
fwait
stc
or
lret
clc
fwait
xor
repz
out
add
add
aad
repnz
jne
jno
in
xchg
cld
inc
mov
test
inc
lods
or
mov
xchg
mov
lods
xor
add
add
cli
in
insl
add
mov
pop
xchg
loopne
mov
sub
add
add
insl
and
or
dec
ds
jno
std
adc
and
or
jne
mov
xor
popl
add
add
loop
hlt
hlt
cmpsw
pop
and
enter
sub
mov
mov
ljmp
mov
add
add
jmp
sub
inc
mov
insb
jno
cmp
mov
add
fbld
popa
xchg
popa
ficoml
shrb
in
cmp
ret
mov
or
fucomi
adc
jae
dec
lea
adc
mov
inc
adc
sbbb
or
add
add
mov
add
xchg
ret
rorl
dec
leave
outsb
popa
jb
xor
push
stc
mov
jmp
add
add
pop
mov
or
xchg
fwait
int
int
scas
shll
jns
add
add
dec
add
aas
mov
or
mov
jb
stos
and
stc
shlb
add
add
ljmp
cmp
shr
jg
adc
cmp
sbb
aaa
add
add
push
test
fwait
pop
dec
out
jns
btsl
mov
repnz
pop
in
outsl
ljmp
pmaxsw
je
pop
leave
stos
add
cli
xorl
int
je
cmp
rorb
sub
add
jo
push
test
fcmovnu
pushf
sahf
cmp
or
pop
fcoms
pop
pop
jg
js
add
add
xchg
ljmp
sbb
cmp
lret
adc
ret
rol
call
add
add
sub
push
mov
sbb
icebp
scas
lock
je
jne
and
sub
cld
pop
iret
imul
les
scas
push
and
imul
mov
mov
insl
outsl
mov
enter
cmpsb
call
add
les
sahf
mov
ffree
jmp
lret
cli
mov
adc
add
add
or
mov
test
adc
xchg
leave
sbb
mov
roll
add
add
and
xlat
fimuls
cmp
cmp
cmc
pop
idiv
divl
jmp
jecxz
and
pusha
or
add
add
dec
aaa
pop
aam
push
xor
mov
xor
xor
ret
stc
ret
idivl
xor
add
mov
xchg
and
movsl
add
subb
outsb
dec
mov
std
pop
jp
outsb
jb
outsb
add
add
xlat
jg
xlat
adc
pop
imull
les
mov
addr16
push
int3
mov
mov
dec
add
add
mov
dec
scas
xchg
scas
sub
in
adc
pop
push
jg
dec
fwait
push
iret
xor
pop
pusha
add
clc
add
add
jle
stos
test
test
idivb
fwait
push
ja
mov
add
scas
icebp
add
add
mul
lods
xchg
mov
xor
pop
push
jns
imul
add
or
orl
cld
inc
fidivrl
add
in
add
mov
add
add
arpl
push
sbb
clc
sahf
mov
mov
mov
or
shlb
xor
xor
add
add
xor
xor
xor
scas
add
xor
sub
fcmovbe
fidivrl
inc
add
add
sahf
jno
je
leave
sub
bound
mov
mov
in
aam
clc
add
add
xchg
cwtl
das
fcmovbe
shll
jne
and
lea
adc
lcall
mov
add
add
sub
pop
xchg
jae
inc
lods
adc
inc
inc
inc
roll
pop
dec
add
adc
mov
jmp
add
cmp
insl
scas
in
mov
xchg
mov
xchg
pushf
jle
popf
mov
fnstsw
and
add
add
add
add
outsb
and
iret
rcrb
cmp
sub
dec
adc
cmp
add
sub
jne
pushf
loop
data16
cmp
jbe
jbe
xchg
sahf
bound
je
jb
lcall
add
dec
in
in
adc
bound
sbb
pop
add
jo
dec
and
rcrb
xor
jl
ret
gs
fs
and
sub
gs
xchg
fs
and
test
push
add
add
or
out
mov
sbb
gs
push
test
iret
inc
adc
push
lds
cmp
add
xchg
pop
xchg
sub
insl
jnp
mov
sbb
in
scas
call
jno
jno
mov
add
add
mov
pop
push
das
push
jnp
outsl
sarl
sub
add
add
sti
les
add
add
sbb
add
mov
stos
in
ljmp
mov
mov
fwait
pop
scas
popf
and
add
add
push
inc
cmpl
lea
add
in
popa
push
sahf
inc
push
add
jl
js,pt
jecxz
mov
add
add
add
xor
jecxz
sbb
jmp
rolb
xor
push
mov
add
add
cltd
cmp
sbbl
or
mov
mov
mov
jns
jns
dec
add
xchg
sbb
push
add
adc
fiadds
adc
cld
push
in
xchg
jmp
jmp
sub
add
add
sbb
or
mov
add
js
daa
es
xchg
stos
adc
add
add
lods
and
jle
add
cmp
into
and
shll
and
add
add
xor
add
lds
mov
jno
mov
or
jno
jno
add
add
jno
jno
mov
jno
enter
jbe
fisttpll
iret
outsl
outsl
rcr
aaa
lahf
push
sti
mov
sbb
in
das
test
mov
xchg
sbb
sbb
inc
fstpl
insl
int
jmp
cmp
call
mov
push
inc
mov
inc
rcrl
sub
jmp
out
imul
or
push
scas
lea
add
add
in
int3
test
sbb
jno
test
jae,pn
cmp
movsl
outsl
loop
add
add
cmp
adc
mov
push
add
sub
pop
mov
lock
add
add
insl
push
lret
in
scas
add
scas
or
sbb
push
arpl
lret
loope
jecxz
loopne
ret
add
add
sbb
pop
mov
mov
sbb
jb
jns
mov
sub
and
scas
add
add
jecxz
pop
jno
add
dec
popf
cmpsl
xchg
sahf
sbb
pop
push
out
loopne
into
shlb
insb
ljmp
movl
ds
sti
cld
mov
adc
jl
add
mov
xor
js
jl
stos
add
add
popa
fstpt
cmp
pop
mov
lea
xchg
xor
add
addb
das
dec
add
add
mov
inc
mov
cltd
push
pop
cmp
sub
inc
das
pusha
xor
push
jp
dec
add
in
mov
int
add
add
add
cmp
xchg
jl
fcmovne
jmp
dec
mov
repz
out
test
add
add
mov
aam
fcmovbe
jp
stos
jb
push
outsb
sbb
xlat
mov
cli
std
add
add
rcrb
out
bound
cmp
jns
dec
xor
xchg
scas
dec
test
loop
dec
pop
lds
dec
add
add
data16
mov
add
in
aad
addb
rolb
or
in
sbb
lret
add
add
dec
sbb
xlat
fcompl
push
mov
ja
pop
int
in
add
shlb
add
add
lret
cmp
in
dec
call
jp
xor
out
popa
or
cmp
mov
push
cmp
pop
inc
xchg
dec
ss
add
xorb
int
adc
insl
aam
or
mov
add
add
sub
add
imul
or
pop
xchg
call
sub
add
add
xor
inc
xor
and
shlb
es
push
lret
dec
cmp
int
mov
jne
in
jnp
in
addr16
lahf
xor
mov
mulb
add
add
movb
and
int3
sbb
imulb
cmp
scas
fisubrl
mov
push
mov
dec
out
icebp
push
xor
add
add
mov
cli
or
cmp
gs
div
push
jmp
into
add
add
stos
jno
jle
shl
mov
sub
bound
icebp
mov
call
cltd
icebp
cmc
mov
imul
add
add
out
iretw
js
test
cs
inc
test
in
das
lock
loop
aam
in
filds
add
add
inc
in
rorb
mov
xor
lods
das
in
test
mov
inc
add
add
mov
sub
mov
add
daa
out
push
mov
xchg
jl
mov
push
mov
popa
add
add
in
inc
mov
es
cmc
dec
jmp
imul
adc
cmp
lret
jecxz
add
add
jae
xor
fimuls
out
jecxz
lcall
cmp
test
sub
enter
jge
mov
xchg
sbb
scas
fildl
fwait
subb
aaa
mov
add
add
outsb
cmc
mov
mov
fildl
xchg
shlb
inc
outsl
test
rcrl
add
add
sar
pop
cld
ljmp
fisubrs
outsb
fwait
cmp
and
add
pop
in
dec
stos
leave
or
push
fcoml
fnstcw
or
imul
mov
add
add
loopne
xor
pop
ret
adc
sbbl
cmpsb
cmp
out
sub
mov
les
add
add
aas
lcall
push
add
andl
mov
cmp
pop
mov
xchg
imul
mov
or
scas
call
lahf
jno
lea
xchg
lcall
lock
add
iret
mov
aaa
cwtl
sub
fcoml
cmpsl
call
fsubrl
or
movsb
push
loop
mov
repz
jecxz
mov
in
and
push
call
int3
outsb
and
mov
icebp
xor
mov
add
add
jl
movsb
lea
xor
jge
movsb
xlat
lret
xchg
cmp
mov
out
mov
cmp
add
add
out
stos
pop
jg
fsubr
pop
pop
fisubrs
cmp
ficoml
pop
addr16
scas
into
add
add
lods
rcr
mov
xchg
pop
jo
cmc
mov
scas
sbb
mov
daa
out
xor
add
scas
push
imul
mov
repnz
mov
xlat
dec
daa
daa
lods
cmp
addr16
add
add
sbb
pop
fsub
outsl
pop
inc
das
arpl
aas
lock
cmpsl
add
add
scas
pop
push
lock
mov
lock
lret
jns
jle
adc
sub
adc
add
add
cmpsl
shl
sub
mov
mov
mov
push
out
add
faddl
cmpsl
lahf
mov
out
add
add
out
fstl
xchg
lahf
pop
rcrl
repz
scas
push
daa
mov
add
rcrb
jne
push
imul
mov
pop
out
movsl
mov
repnz
iret
pop
push
fbstp
add
add
jl
scas
mov
push
lcall
add
inc
repz
push
fisubs
lahf
rcrb
fistps
outsb
mov
jl
mov
jns
pop
mov
mov
mov
stc
xchg
scas
push
add
push
shlb
outsl
jo
sbb
pop
mov
mov
subl
pop
fisttpl
addr16
scas
fcomip
in
je
add
add
rolb
mov
mov
ljmp
push
daa
cmp
loopne
xor
in
call
aam
add
add
out
ds
mov
sti
shrb
lret
cltd
cmp
jne
lods
fcmove
mov
jmp
inc
lahf
lahf
xchg
add
add
scas
pop
mov
out
pop
pop
adc
ja
sbb
fucomip
fsubs
ljmp
ljmp
call
xlat
mov
lret
mov
shll
enter
lock
push
add
add
and
dec
lods
ss
dec
pop
pop
rcll
subb
cmpsb
xlat
test
test
add
add
jb
arpl
scas
rcll
fwait
loopne
icebp
pop
jne
pop
jo
fdiv
lahf
push
lahf
in
popa
outsl
ljmp
fwait
cmp
dec
mov
cs
push
lock
loopne
push
inc
sbb
dec
fwait
sbb
imul
aaa
dec
out
jno,pn
data16
lret
dec
mov
cltd
dec
out
inc
fbstp
add
add
add
loopne
push
out
out
fistps
out
lcall
pop
out
loopne
scas
pop
stc
aaa
dec
out
add
add
aas
pop
js
adc
fcompl
out
in
cmp
add
add
arpl
sbb
lret
dec
add
add
mov
lahf
adc
jl
pop
sahf
stos
negb
lahf
test
and
mov
lahf
add
add
cmpsl
stc
outsl
cld
jp
mov
cmp
outsl
jne,pn
push
sbb
sbb
pop
sbb
mov
add
add
in
out
lds
pop
ficompl
sub
mov
xchg
mov
jp
lcall
add
add
cmp
jo
inc
outsl
adc
inc
ficomps
xchg
sub
push
fbstp
lock
lahf
xlat
add
add
adc
mov
in
mov
pusha
mov
es
stos
or
add
add
je
push
fldenv
mov
aam
jae
in
ds
xor
sub
insl
sub
mov
add
add
jae
fstpt
xchg
xlat
in
sub
shlb
xor
adc
js
mov
add
add
loope
insl
in
hlt
fmull
js
or
std
inc
sub
test
jno
mov
or
add
add
fnstsw
mov
loop
dec
repz
inc
in
dec
fwait
pushf
mov
pop
jmp
add
add
int3
cmp
loopw
mov
mov
pushl
in
or
mov
mov
dec
jne
add
add
bound
movsb
dec
shll
fsubrs
stc
push
ret
jmp
cmc
xor
jg
add
add
bound
imul
rol
lods
mov
inc
jg
sub
pop
aad
leave
ret
add
add
inc
xchg
or
or
fs
pop
jecxz
mov
iret
push
jno
out
repnz
add
lock
xchg
aaa
sub
push
push
ljmp
fwait
arpl
mov
shl
shlb
add
add
and
jno
addr16
pusha
push
es
or
pop
cltd
cmp
push
add
add
xchg
ror
push
or
or
sarl
xchg
scas
and
cmp
lods
xor
push
add
add
rorl
jle
xchg
nop
outsb
cmp
test
in
push
push
add
cmp
data16
sbb
add
add
jl
repnz
jne
lcall
ja
in
clc
daa
pop
sarl
dec
pop
insb
fimuls
mov
add
jb
adc
cmp
mov
repz
js
mov
out
add
add
add
loop
fnstenv
insl
sub
gs
or
fisubrl
jecxz
push
cld
inc
lods
adc
and
fdivs
and
mov
sub
and
jo
mov
pop
sub
cmp
add
add
inc
lret
cmpsl
repz
add
mov
les
add
sbb
adc
add
add
or
daa
mov
lods
push
pop
pop
aas
or
out
add
adc
add
xchg
add
add
add
sub
and
cltd
adcb
or
xor
int
int
add
add
xor
cmpsb
int
add
into
sarb
mov
cmpsb
sar
cmp
enter
shll
push
fildll
fwait
jle
fistps
stos
test
movb
and
hlt
or
pop
scas
xchg
jb
fcoml
call
sub
out
pop
mov
mov
pop
pop
add
add
pop
mov
stos
jno
jae
pop
jl
outsb
leave
fcmovbe
cwtl
inc
xchg
loop
dec
enter
add
scas
repnz
pop
shll
icebp
dec
cmp
push
mov
shrb
and
or
add
add
inc
scas
fidivrl
cmc
push
push
fdivrs
sub
ljmp
jmp
jne
add
add
push
int
push
cltd
repz
scas
in
fbstp
call
subb
cmpsb
jo
fiaddl
add
add
xor
xor
xor
jb
jg
jo
jae
out
out
mov
pop
add
add
push
shrb
imul
inc
mov
dec
rol
pop
jp
xor
push
lods
insb
add
add
data16
pushf
dec
lock
fwait
mov
inc
xor
lret
cmp
loopne
sysret
push
or
inc
adc
add
add
enter
ret
mov
xor
mov
pop
mov
dec
mov
bound
dec
je
jmp
or
add
in
lock
dec
repnz
outsl
rorb
sub
inc
dec
mov
pusha
je
incl
sbbb
jl
add
add
push
repnz
push
cmp
sbb
cmp
add
cmpsb
roll
test
ss
dec
ja
add
add
vcvtsi2sdl
add
xchg
filds
xchg
xor
push
scas
pusha
in
add
add
xchg
dec
adc
repnz
js
xor
es
mov
movsl
push
iret
lahf
dec
add
add
mov
adc
outsl
jp
fsts
adc
xchg
jmp
in
pop
cmp
sbb
add
add
sbb
call
enter
lret
mov
std
xor
ss
xchg
rolb
add
add
push
xor
mov
add
jle
pop
pop
rolb
out
sbb
fbld
aas
cmpsl
call
xchg
out
dec
mov
dec
xchg
inc
ret
adc
add
xchg
add
add
xchg
ljmp
jo
addr16
jmp
jge
lret
daa
pop
daa
push
cmp
cli
jae
les
add
add
loopne
leave
jg
mov
insb
cs
sbb
or
pop
lahf
and
or
rolb
add
add
sub
fldl
into
mov
js
adc
stos
push
aaa
inc
test
scas
ret
add
add
repz
scas
fistpl
hlt
sub
orb
jg
cmp
loop
mov
push
lret
add
add
dec
mov
cmpsb
push
cmpsb
jb
hlt
imul
orb
mov
sbb
add
int
inc
cld
inc
movsl
mov
nop
xchg
push
ds
ret
dec
in
mulb
int
scas
outsb
add
add
pop
xor
pop
push
jbe
incb
or
xlat
hlt
jnp
pop
es
push
xor
add
add
shrb
dec
sahf
cmp
insl
push
imul
cmp
inc
std
jecxz
outsb
xchg
cmp
repnz
cwtl
add
add
pop
mov
push
in
xor
jb
shlb
mov
outsl
cmpsb
mov
push
pop
add
add
shr
pop
loopne
xor
dec
mov
push
mov
sahf
pop
push
fimuls
repnz
add
add
js
popf
movsl
loopne
xor
xor
testb
push
dec
sub
and
add
dec
add
add
sub
hlt
and
push
stc
es
popf
es
or
insb
adc
mul
popa
or
mov
xor
stos
lds
xchg
or
inc
mov
sti
mov
ret
mov
gs
cmp
popa
aam
add
add
sub
addr16
dec
fs
xchg
push
mov
xchg
test
mov
aad
inc
adc
push
pop
add
dec
or
add
add
rorl
cwtl
adc
jne
lods
stos
mov
stos
add
or
xlat
and
add
add
scas
jns
out
push
fdivr
insl
dec
push
jno
push
pop
or
stos
add
dec
test
int3
ret
add
add
inc
ds
xor
push
mov
rol
addl
jb
dec
dec
into
cmp
pop
lods
push
add
add
in
add
ficomps
xor
bound
outsl
mov
imul
pop
shll
add
xchg
test
cmp
xchg
out
cs
int
pop
inc
mov
xchg
mov
punpcklwd
add
add
mov
das
sbb
jmp
lods
push
lea
fisubl
mov
and
add
mov
stos
add
xchg
push
fstl
xorb
ds
jo
into
js
pop
imul
add
jl
rorb
mov
gs
add
movsb
dec
bswap
xchg
xchg
movsb
rcll
pop
loop
add
add
push
out
jne
scas
mov
mov
gs
mov
lds
mov
cwtl
mov
out
aad
add
push
inc
dec
add
add
in
dec
dec
and
ss
push
test
imul
xchg
jmp
mov
inc
sar
xchg
add
add
andl
iret
sar
lcall
pop
repz
imul
adc
push
add
add
inc
mov
movsl
xchg
xor
sub
mov
inc
imul
mov
mov
add
jno
repnz
pop
dec
call
leave
ret
rorb
scas
mov
jle
scas
jnp
inc
leave
aad
add
add
dec
mov
mov
les
add
data16
inc
mov
add
add
stc
add
and
push
int
or
pop
inc
add
jae
xlat
sbb
sbb
shrl
add
mov
pop
int3
subl
add
push
inc
mov
dec
push
cmp
add
add
int3
mov
sub
cmc
adc
mov
xchg
test
in
in
mov
in
hlt
jge
cmp
ljmp
fsubr
mov
pop
into
jge
addr16
xchg
adc
dec
test
sbb
cmc
jmp
add
jno
mov
insl
jno
scas
push
out
sbb
jmp
xor
jno
add
add
dec
mov
nop
daa
sub
inc
cmp
mov
aas
stos
cmpsb
jle
outsb
mov
add
mov
lret
pop
pop
push
push
idiv
cmp
or
outsb
add
add
dec
cli
fs
push
inc
jbe
mov
xchg
mov
push
xor
sub
add
add
aad
adc
mov
dec
popa
je
loope
rolb
dec
imul
sbb
jae
add
add
jecxz
sub
sub
dec
mov
xchg
and
or
mov
mov
pop
test
add
add
inc
lods
clc
sbb
jp
mov
out
inc
lock
imul
loopne
add
add
cli
mov
lods
mov
addr16
mov
js
sbb
add
add
pop
aam
jne
cltd
inc
sub
adc
lret
insb
mov
inc
dec
imul
shl
lods
add
add
mov
lds
ss
lods
jb
aas
repnz
xor
or
int3
xchg
jecxz
rcll
add
adc
ret
add
mov
out
sbb
add
mov
mov
xor
mov
into
sub
mov
add
xor
cmp
loop
sub
xor
ret
test
xchg
mov
inc
jmp
or
add
add
jmp
iret
test
xchg
cmp
imul
or
mov
shr
pop
sub
add
sub
out
ljmp
inc
loope
pop
inc
adc
push
push
faddl
test
imul
add
xchg
pop
mov
or
ljmp
loope
scas
and
aam
lret
add
add
dec
test
daa
sub
outsb
dec
je
push
or
fisubs
lock
repz
dec
mov
mov
mov
je
cltd
das
shl
div
sbbl
or
in
aas
ret
lret
inc
cmp
mov
je
repz
mov
xlat
dec
add
add
pop
jp
lock
leave
cmp
fistpll
sub
cmp
mov
cmpl
sbb
fidivl
mov
xlat
xor
lods
mov
mov
js
push
and
add
add
clc
jmp
pop
push
and
nop
mov
mov
int
jns
fs
lea
lahf
push
dec
fdiv
and
mov
add
add
cmp
adc
cmp
cltd
icebp
or
adc
shrb
and
aas
jecxz
cltd
fimull
add
dec
pop
inc
out
out
popa
sub
mov
fbstp
inc
sub
rol
add
add
adc
cmp
cmp
adc
fisttpl
xor
dec
loope
test
or
add
add
pop
adcl
xchg
cmp
adcb
mov
shrb
or
add
cli
sub
adc
pop
push
lods
push
aaa
add
out
ds
adc
inc
mov
popa
push
outsb
out
add
add
fs
mov
adc
ret
aas
push
icebp
xchg
lret
and
js
dec
add
addr16
adc
rcll
dec
mov
aaa
es
pop
shlb
push
cmp
in
add
add
in
popa
cmpl
and
pop
outsl
movsb
int3
testl
in
and
add
add
test
sub
mov
cmp
add
cmp
mov
dec
aaa
jno
add
add
push
cmp
mov
and
aaa
add
mov
xchg
lock
and
mov
add
add
lods
shl
xor
cltd
lret
sub
call
dec
xor
mov
aam
add
add
stc
add
lds
xor
imul
mov
xor
out
pop
pop
adc
add
add
rcrb
mov
mov
imul
xchg
or
inc
xlat
jbe
add
add
push
cmpsl
mov
mov
jmp
lahf
jne
lret
pop
outsb
ret
je
mov
add
mov
add
sarl
and
dec
pusha
or
lea
out
negl
fwait
add
push
mov
add
add
int
aas
das
sbb
in
mov
fildll
popa
and
adc
inc
pop
add
add
add
pop
js
xor
push
sub
dec
enter
push
loope
adc
hlt
xor
ret
add
add
adc
in
sbb
mov
imul
xor
hlt
jl
mov
insb
shlb
mov
mov
dec
fcom
repz
mov
movsl
add
out
xor
add
add
popa
outsl
add
ret
outsb
sbb
fnstsw
jo
mov
repnz
jnp
ljmp
add
add
aam
mov
lcall
pop
sbb
and
inc
fidivl
or
in
out
mov
adc
andb
push
stc
lods
mov
add
add
add
cmpsl
or
jge
pusha
and
aad
inc
mov
das
sub
dec
mov
subl
add
je
pop
addr16
cmp
fstl
ljmp
or
xchg
mov
or
inc
lret
add
add
rcl
mov
xor
cmp
push
cmpsb
leave
cmp
lock
clc
fimuls
add
add
pop
xchg
subl
icebp
dec
cwtl
ljmp
xor
lea
rorl
scas
mov
and
add
add
ret
xchg
sub
hlt
aas
xchg
ja
enter
jmp
mov
ror
int
add
add
add
cmp
lods
jae
stos
ja
and
push
das
jno
repnz
mov
aam
add
add
inc
out
rcr
repnz
mov
stos
arpl
hlt
adc
int3
shrb
int3
leave
aam
sub
mov
icebp
add
add
add
fstps
mov
mov
inc
push
push
popf
in
sbb
add
sbb
inc
fstps
pushf
add
add
xchg
in
cmpsb
stos
jne
xchg
lods
xchg
jecxz
pop
push
daa
pop
inc
lcall
pop
fwait
imulb
fwait
add
add
bound
hlt
ret
push
orl
movsb
popf
gs
or
mov
mov
inc
add
add
loop,pn
popa
adc
mov
or
mov
fnstsw
loop
adc
bound
add
jmp
xor
jns
inc
xlat
aam
fucomi
xchg
kaddb
mov
stos
pop
jge
mov
add
add
push
pushf
dec
push
adc
sbb
iret
fcoml
js
mov
pop
sahf
ljmp
arpl
add
add
add
xchg
jp
cmc
pop
int3
test
pop
movsl
frstor
cmp
movsl
mov
mov
frstor
or
loope
movsb
push
out
xchg
and
mov
sbb
dec
xor
add
fdivl
push
jge
sbb
pop
rcrb
das
rcr
test
fwait
xor
dec
and
fistpll
testb
add
cld
int3
in
push
or
add
mov
ja
add
bound
pop
ja
shrl
add
add
xchg
lret
insl
test
sub
add
xor
xchg
cmp
ss
inc
add
add
test
mov
sbb
out
into
hlt
pop
shll
shll
cmc
dec
push
sub
lea
add
add
cs
xchg
dec
cs
inc
mov
in
jl
int
inc
lods
mov
pop
cmpsl
fsubrl
filds
add
add
add
mov
adc
insl
mov
cltd
adc
sbb
add
add
out
lahf
jmp
inc
shll
pushf
push
imul
xchg
jle
inc
dec
loop
ret
add
add
add
mov
nop
mov
xchg
dec
mov
ds
aas
add
lods
sub
add
add
lahf
movsb
fldt
iret
mov
mov
ja
xchg
divb
inc
insl
dec
jle
pop
mov
cwtl
add
add
pop
aaa
add
mov
ret
jno
stos
je
cmp
add
das
es
lret
fdivr
add
add
es
cmpb
out
or
pushf
adc
cmp
mov
mov
sbb
iret
adc
add
add
cmp
cwtl
adc
sarl
insb
cmpsl
add
lods
insl
mov
and
mov
sldt
add
xor
adc
fucom
repnz
fdivs
xchg
fs
inc
cmpsb
jae
jb
jb
frstor
add
jmp
dec
in
sub
or
mov
sbbl
push
dec
add
add
cmpsl
or
daa
pop
adc
dec
and
jno
loopne
iret
test
xchg
ja
gs
fadds
add
add
out
adc
cmp
cmp
jnp,pn
dec
enter
xor
clc
cmpsb
pop
pusha
cmpsb
lock
pop
adc
jp
cli
or
push
shll
xor
int3
push
mov
lods
mov
dec
adc
ja
out
xor
cs
testb
add
pop
ds
adc
and
inc
daa
fwait
and
push
pushl
rorl
jge
xor
inc
cmp
add
pop
and
popf
sub
test
les
test
decl
dec
sbb
add
add
imul
mov
mov
jg
xchg
mov
lahf
mov
cli
or
add
add
loop
int
ss
mov
push
mov
jecxz
call
js
adcb
and
stos
add
add
hlt
test
xchg
mov
repnz
adc
cmp
xchg
ret
je
push
add
add
fildll
pop
ds
cmovle
inc
xor
repz
fcoms
jge
icebp
and
mov
je
pop
lds
jp
fsubl
jecxz
xchg
test
add
add
jne
in
sbb
scas
mov
adc
out
nop
incl
outsl
jecxz
and
fildl
add
add
rcll
mov
jae
push
sar
xchg
mov
jns
sbb
cmp
pushf
pusha
or
add
add
fbld
push
insb
cmp
cmp
ds
fsubrl
inc
out
ja
push
outsb
add
add
popa
jno
out
jb
lea
outsb
shl
push
shll
inc
sar
cmp
cmp
xchg
stos
jmp
int3
lret
fcmovbe
fsubp
adc
adc
jecxz
inc
leave
int
sub
adc
mov
add
in
mov
and
outsb
pop
aaa
and
addr16
out
push
jg
shll
add
add
cmc
in
cmp
sbb
arpl
mov
dec
and
xchg
xor
sbb
sti
dec
pop
in
jno
jbe
in
add
add
cmp
sahf
xor
loopne
jno
or
add
pop
sbb
int3
cmp
shl
pushl
add
add
mov
inc
fistl
pop
and
lahf
jnp,pt
sti
test
std
cli
push
add
add
jns
xor
xor
sub
jno
pop
xor
push
xor
dec
sub
sub
add
add
mov
int
add
pop
or
adc
loop
sbb
xchg
outsb
xor
sbb
loope
push
jecxz
leave
sbb
or
arpl
sub
dec
stos
mov
fwait
iret
jle
add
add
mov
xor
or
xchg
icebp
rorl
mov
xor
adc
sbb
add
add
loop
gs
and
mov
and
mov
sbb
mov
add
loope
and
cmp
dec
sbb
imul
sub
test
pop
xor
mov
xchg
xor
stc
push
mov
clc
jno
adc
roll
dec
lret
pop
add
add
movsl
out
mov
push
fisttpll
sbb
pop
out
testb
scas
daa
mov
dec
jnp
add
add
lahf
in
das
lock
ror
push
cltd
push
cmpsl
push
push
mov
fisubrl
iret
mov
aaa
jbe
test
jbe
jb
push
movsb
cmp
popa
lahf
movl
jns
repz
add
xchg
pop
adc
sbb
fucom
ja
scas
push
subb
xlat
fdiv
out
icebp
add
add
lea
push
cmp
sub
shrb
insl
push
mov
sbb
add
add
jb
popa
pusha
cli
xchg
or
push
push
xor
cli
sub
pushw
pop
mov
add
add
aam
mov
xor
cmp
lock
pushf
sahf
mov
arpl
mov
loope
ja
or
cmpsb
stos
jb
addb
ret
adc
fcoms
movsb
mov
push
jmp
add
pop
sbb
popf
jmp
push
sub
lret
xor
dec
lret
lcall
add
add
mov
cld
fbld
fistpl
rcrb
adc
cmp
xor
xchg
sbb
add
add
jnp
std
das
das
in
mov
in
xlat
das
jmp
idivl
mov
inc
mov
jp
add
add
mov
xchg
inc
icebp
sbb
mov
ljmp
adc
inc
jo
and
add
jnp
xchg
sub
pop
sahf
fstl
jno
cmp
lds
jbe
fs
fst
loopne
addb
inc
add
add
or
out
jmp
adcl
test
jg
repnz
in
pop
test
add
add
fwait
jne
fimuls
bswap
mov
push
sub
scas
ss
call
add
add
shl
pop
ret
std
add
lahf
out
adc
rcrl
loop
mov
aaa
and
bswap
adc
roll
add
add
insb
gs
dec
push
hlt
movsb
ljmp
mov
sbb
dec
push
lods
ja
push
mov
add
add
dec
inc
jbe
clc
xchg
icebp
cmp
lods
adc
rol
ret
hlt
adc
push
mov
add
dec
iret
adc
jno
push
adc
lods
pushf
mov
pushf
rolb
std
xor
adc
ja
jl
cmpsl
add
add
mov
jge
cmp
push
xor
ljmp
xchg
arpl
xchg
pop
jg
mov
pop
add
add
loop
lcall
add
add
popa
add
stc
sbb
xchg
inc
scas
dec
add
add
jns
std
lods
test
adc
add
jp
cmpsl
fwait
sahf
jo
pop
sub
addr16
into
call
add
mov
cli
sub
or
fsubr
xor
and
add
add
mov
ror
addl
mov
jmp
jge
inc
sub
inc
pop
mov
dec
mov
add
add
xchg
shll
push
cs
sub
jo
clc
adc
add
adc
pop
push
inc
pop
mov
adc
insl
loope
das
jne,pn
es
mov
mov
call
cmpl
push
jb
add
add
popf
flds
mov
jno
inc
std
xor
pop
leave
jmp
test
lret
and
add
add
mov
dec
sub
cmp
shl
aaa
test
out
mov
mov
cwtl
sti
sti
jecxz
stc
mov
add
add
into
inc
xchg
sbb
popf
orb
mov
push
inc
xchg
xlat
clc
sbb
add
jp
inc
sub
dec
pop
xlat
cmp
and
rcrl
rclb
mov
sbb
mov
jmp
in
add
adc
add
fucomp
push
pop
inc
subps
mov
add
test
loopne
xlat
iret
fcmovne
cld
fcmovu
loopne
mov
add
fs
addl
add
add
shlb
cmpsl
cmp
aam
and
nop
adc
sti
aaa
jno
movsl
mov
push
add
add
pop
cmc
jmp
sbb
mov
icebp
cmpsl
imul
dec
mov
push
sub
jns
add
add
loop
js
jle
fdivrs
jo
iret
xchg
andl
jns
js
cmp
add
xor
sti
xor
adc
mov
mov
inc
or
pop
aad
jne
roll
xor
xor
add
add
push
mov
mulb
xorl
cltd
cmp
lods
pop
mov
mov
ja
faddl
add
add
les
xlat
push
mov
mov
jns
sti
inc
cmp
mov
add
add
test
hlt
xor
mov
jns
cmovnp
mov
data16
add
add
leave
imul
push
jl
nop
jmp
sub
shrl
call
vminpd
aaa
test
mov
jnp
nopl
jle
and
stc
sub
loope
inc
add
add
xor
xchg
shll
push
add
and
cmp
push
add
imul
add
add
mov
popa
cmp
push
loope
jp,pt
sub
test
add
pop
repz
xchg
je
test
add
add
out
sub
shll
push
cmp
push
ret
sub
sub
outsl
add
add
add
add
jnp
sahf
mov
mov
out
dec
fisttpl
sbb
stos
adc
add
sub
aad
dec
jecxz
lcall
in
dec
xlat
pop
push
and
inc
cmova
add
add
fstps
mov
lcall
sbb
andb
in
ljmp
xor
add
addr16
cmp
movl
push
mov
call
jmp
les
inc
mov
mov
fldcw
cmp
or
xchg
jl
ss
jo
test
mov
add
add
fucomi
cltd
xchg
dec
lea
adc
enter
and
subw
insb
mov
or
adc
xor
sub
test
pop
push
cmp
add
push
repnz
mov
add
add
and
int
add
inc
push
data16
xor
out
cmp
mov
add
gs
mov
into
bound
pop
pushf
jno
pop
dec
mov
xchg
adc
add
adc
inc
jno
or
roll
xchg
stos
enter
inc
dec
pop
bound
popf
addl
add
call
adc
int
dec
jne
sub
add
lahf
sbb
add
add
andl
ret
jecxz
mov
insb
pop
insb
pushf
es
ds
cmp
or
and
je
add
add
add
or
mul
sbb
pop
pop
sub
mov
stos
dec
call
add
mov
outsl
cmp
add
add
add
pop
add
in
imul
test
jne
jl
sbb
add
add
mov
aas
shrb
pop
jmp
and
lea
leave
cmpsb
adc
add
in
mov
filds
mov
xor
ret
subl
pop
imul
repz
sub
shrl
jo
loope
cmpsb
adc
pop
and
test
inc
subl
xchg
cmp
sub
add
mov
inc
insb
jne
fs
add
add
push
xor
pop
popa
es
sub
push
fs
aam
push
fisubl
dec
in
shl
cwtl
dec
fmull
adc
ret
je
jno
xchg
adc
cmc
xor
fisubl
mov
jl
icebp
mov
cmc
mov
dec
stos
add
add
test
daa
xchg
pop
addb
sub
ljmp
jne
faddl
das
mov
add
add
sub
adc
pop
das
mov
or
fsubrs
and
and
add
outsl
inc
mov
add
add
sbbl
push
lock
je
jne
push
je
inc
mov
sbb
add
add
jge
lea
jns
insb
xchg
pop
jge
or
mov
xlat
jne
sbb
mov
fbld
cmp
and
add
in
in
scas
lret
pop
bound
insl
repnz
add
add
dec
push
dec
cmp
pop
lahf
sub
scas
lret
loopne
and
arpl
in
add
jmp
add
add
mov
mov
add
mov
fcoml
mov
pop
push
add
nop
add
push
push
sbb
add
add
dec
inc
repz
cmp
nop
adc
pop
or
mov
xchg
arpl
test
push
add
add
fwait
pop
push
and
sbbl
clc
ljmp
mov
jb
ss
xchg
addr16
dec
call
js
mov
or
add
and
xlat
out
pop
and
jo
mov
add
push
add
add
inc
xchg
mov
adc
inc
inc
or
pop
sub
sub
mov
jge
adc
fwait
pop
add
add
inc
out
jnp
xchg
sahf
sub
imul
ss
test
mov
xlat
add
add
stos
xchg
lods
or
mov
icebp
fbstp
bound
std
stos
and
adc
sarb
add
add
cltd
push
xacquire
sub
cmp
movsl
and
push
xchg
adc
clc
mov
xacquire
add
add
jle
mov
inc
loopne
cmp
stos
sub
shlb
dec
push
add
dec
sbb
mov
push
mov
add
push
aas
cmp
icebp
cltd
lods
dec
ss
dec
sub
mov
push
stos
fwait
xchg
push
jo
push
lret
add
add
cmp
ret
mov
jbe
mov
dec
ficoml
rcr
lret
mov
add
add
cmp
mov
test
add
scas
popf
jno
adcl
add
add
jbe
and
int3
jge
or
leave
push
insl
out
jb
inc
xlat
mov
pop
mov
push
pop
xchg
add
add
or
rorb
out
fiadds
cltd
mov
movsl
or
xor
adc
add
add
clc
xor
mov
ss
out
mov
pusha
mov
scas
int3
dec
add
cld
lret
mov
add
add
sahf
mov
pop
or
inc
sub
and
ret
sbb
arpl
les
xchg
add
add
cli
outsb
and
mov
ds
pop
adc
mov
in
es
nop
out
mov
mov
add
add
out
xchg
ret
js
mov
negl
dec
outsb
inc
sbb
mov
xor
orl
add
out
sub
sub
or
outsl
ss
jo
jno
inc
sub
push
add
add
or
push
mov
sbbb
int
lcall
jb
jp
mov
cmp
add
add
dec
push
fstpt
mov
sbb
lcall
adc
lds
add
add
scas
and
js
mov
inc
xchg
fwait
adc
adc
pop
cmpsb
les
repnz
ljmp
add
add
dec
sbb
or
or
pop
std
leave
mov
sub
imul
add
and
xor
add
loope
or
lcall
orb
add
enter
fiadds
inc
push
mov
jp
mov
sti
or
jle
inc
inc
sbb
aad
add
add
imul
nop
pop
and
xlat
fidivl
jge
xor
rcrl
fnstcw
add
add
in
pushl
adc
push
push
mov
repz
xchg
gs
mov
daa
add
add
pop
xchg
and
in
xor
mull
push
arpl
jae
pop
sub
inc
xchg
add
add
loop
shlb
loop
pop
je
xor
bsr
fdivrl
mov
xchg
add
add
cli
stos
rorb
stos
or
mov
jo
inc
aad
je
pop
xor
and
scas
aam
lret
add
add
scas
or
dec
sub
mov
xchg
cld
outsb
and
mov
jmp
sarb
or
add
add
rorl
jne
pop
fwait
push
mov
outsb
xchg
jo
les
in
inc
xchg
cli
sbb
add
add
repnz
lock
ss
scas
adc
jge
inc
test
cld
sbb
iret
mov
add
add
inc
popa
sbb
movsl
stos
jne
or
inc
hlt
push
lahf
cmpsb
push
pop
and
cmp
add
add
or
out
cmp
lock
dec
push
hlt
pop
sub
adc
or
mov
add
sbb
dec
mov
push
jecxz
xor
xchg
mov
sbbl
test
pop
icebp
bnd
sub
add
add
out
call
jle
adc
mov
adc
inc
mov
movd
cmp
repnz
add
cmp
adc
fwait
lret
pop
jl
push
out
stos
js
mov
mov
aad
cmp
push
pop
jo
sldt
add
sbb
mov
aad
ret
out
sti
movsl
arpl
add
ljmp
adc
add
add
mov
sub
push
enter
cltd
xchg
pop
or
stc
and
dec
inc
adc
add
dec
js
stos
inc
in
add
movsl
out
dec
jne
pop
mov
inc
notb
fisubs
push
adc
add
add
push
or
and
cmp
jp
outsl
test
in
bound
add
add
outsb
out
test
hlt
sbb
adc
js
shl
lock
outsb
scas
das
dec
xchg
xchg
imul
mov
aam
out
nop
fstpt
push
shrl
enter
aas
jmp
xor
add
add
bound
inc
shlb
aaa
arpl
fucomp
push
shrb
xor
pop
mov
dec
push
movl
sarl
arpl
xor
lods
loop
xchg
lods
negb
loop
jb
xor
arpl
xor
add
add
mov
pop
push
and
test
mov
sbb
pop
jg
mov
popa
loop
push
mov
add
add
sbb
dec
aam
sbb
push
mov
into
adc
lret
in
add
mov
mov
add
add
out
mov
dec
imul
jbe
ja
shrb
ss
insb
test
fnstsw
adc
add
add
fnstsw
insb
fmul
xor
sarb
jg
jno
mov
jecxz
fcoml
mov
test
add
add
jae
push
mov
mov
and
pop
xchg
cmp
call
mov
ret
nop
movsl
daa
add
add
cld
das
mov
pop
out
add
jmp
movsl
jnp
and
cmp
push
lea
add
add
xchg
or
js
arpl
call
aad
sub
mov
sarb
sub
sbb
add
fildl
mov
cmp
jmp
dec
and
mov
popf
cmp
push
mov
sub
jge
rcrl
sub
xchg
xlat
loopne
jl
or
or
out
into
pop
cmp
sub
add
add
jg
inc
stos
jl
lret
negb
mov
divb
inc
rcrb
popa
sub
shl
aas
jns
fxch
cmp
loopne
adc
orl
dec
mov
add
xor
add
out
add
test
mov
call
iret
add
add
push
cmpsl
add
fcmovbe
adc
std
mov
std
addr16
int3
jecxz
dec
data16
xchg
push
or
xor
dec
jb
addr16
push
fidivs
out
fsubl
xor
and
imul
aas
mov
add
add
bound
mov
aam
cmp
ss
add
aaa
push
or
mov
add
add
lret
lock
mov
sbb
ffreep
loop
mov
push
pop
push
fcmovu
cmc
fs
add
add
mov
sbb
adc
iret
shl
inc
xor
add
add
add
add
iret
outsl
sbbl
stc
pusha
mov
cmp
mov
jg
inc
test
push
sub
push
xchg
add
add
cltd
inc
cltd
sbb
pop
mov
xor
lahf
jb
shrb
cli
lahf
xor
xchg
xor
xchg
dec
fstpt
add
add
pop
jmp
ds
mov
das
sbb
xor
sub
dec
jp
dec
sbb
add
add
jmp
dec
sbb
mov
mov
lahf
pop
sub
and
pop
pop
adc
je
sbb
add
aad
xchg
int
push
xchg
mov
push
xchg
gs
adc
push
mov
inc
dec
mov
cltd
xor
add
add
das
lahf
cmpsb
loope
or
es
test
pop
jle
ljmp
add
inc
mov
pop
out
rorb
loopne
cmpb
mov
lret
dec
popf
imul
add
data16
xor
imulb
cli
and
outsb
scas
sbb
or
out
rolb
jbe
add
add
ds
dec
dec
orb
xchg
xor
mov
xchg
fmull
pop
outsb
adc
add
add
adc
xchg
or
arpl
mov
xor
mov
cmpsb
fcomip
xor
add
add
add
stos
mov
xchg
sbb
mov
cmp
shl
lret
imul
jmp
add
add
inc
mov
in
mov
or
inc
dec
ds
xor
cli
mov
ds
inc
push
cmp
add
add
xchg
push
xor
scas
and
cli
pop
lcall
cmpsb
loope
mov
pushf
test
xchg
cmp
add
add
pop
add
outsl
cmp
mov
testb
push
sahf
fnstsw
jge
insb
loopne
mov
dec
filds
add
add
or
add
xlat
cmp
xor
jo
lcall
add
add
add
pushf
test
fistpll
lret
adc
and
push
mov
cmc
mov
pop
jne
sub
cmp
add
add
rol
imul
mov
fsub
inc
addr16
sub
fcoml
cltd
ja
adc
hlt
nop
mov
mov
movsb
sbb
sarl
cli
adc
pop
mov
loopne
xchg
out
jecxz
add
add
sbb
mov
add
iret
pop
xchg
imul
mov
sub
lods
add
add
xchg
mov
cmpsl
mov
insb
movsl
sbb
into
pop
mov
xchg
cmp
rcrb
shl
add
add
ret
das
les
aam
inc
lds
rcrb
gs
out
mov
xor
xor
cmp
add
add
fldt
lods
shlb
xchg
jns
push
push
and
xor
das
or
add
add
leave
xor
xor
mov
sarl
dec
adcl
fcmovbe
jg
pop
jecxz
aad
aaa
test
add
xchg
leave
push
aas
pop
in
sahf
and
aas
pop
push
sti
xchg
hlt
sahf
jecxz
aad
mov
add
add
lods
xor
or
fldenv
call
push
push
push
call
add
add
mov
outsl
out
in
es
gs
xchg
cmp
dec
or
sub
mov
add
add
ja
mov
in
lret
hlt
cs
idivb
inc
pop
inc
call
loope
cs
add
add
cmp
mov
mov
stc
or
bound
lds
push
int3
or
add
sbb
rorl
xchg
imull
xchg
sub
ret
jecxz
or
jnp
and
dec
dec
add
add
sbb
sarl
fcom
movsl
gs
in
stc
mov
mov
sub
mov
add
add
mov
or
xor
aad
xchg
and
dec
test
jecxz
mov
mov
fldcw
add
add
out
lock
dec
sahf
or
rcll
cld
mov
and
cmovp
jne
stos
lret
mov
push
add
add
movsb
popf
popf
jecxz
mov
imul
and
sbb
cmp
cmpl
cltd
movb
add
push
fildll
dec
xlat
nop
sbb
lods
stos
aad
sub
adc
and
lds
dec
xchg
adc
add
inc
pop
out
mov
dec
xchg
in
mov
and
mov
or
addr16
xor
add
add
pusha
std
or
dec
shl
notb
xchg
das
xchg
sbb
call
mov
add
pushf
popf
mov
gs
mov
push
dec
fcoms
jb
repz
data16
xchg
xor
add
mov
scas
xchg
std
xchg
sahf
stos
aad
punpckldq
sti
adc
insl
aam
mov
nop
add
add
xor
push
push
add
or
xchg
inc
jp
jecxz
das
in
push
test
pop
iret
inc
or
add
rorb
popf
inc
adc
nop
pop
inc
adc
inc
cli
jmp
sbb
out
daa
add
add
arpl
cmpsb
mov
jp
ljmp
data16
orb
mov
push
std
mov
add
add
rcrb
sub
mov
push
aas
jl
ss
negl
outsl
fldl
imul
xor
mov
xchg
loopne
xlat
or
mov
stos
divl
add
xor
mov
pop
xchg
lret
jge
incb
or
xor
imulb
inc
inc
dec
pop
xorl
add
add
or
xchg
mov
or
loope
mov
adc
lahf
gs
sub
add
push
jnp
pop
jmp
push
in
fwait
lods
xor
sbb
popf
jnp
adc
mov
cmp
cmp
add
add
stos
outsb
jmp
test
gs
fwait
mov
dec
cmpsb
xchg
jb
push
dec
das
pushf
add
add
and
inc
jmp
das
stc
mov
xor
xchg
mov
jg
xchg
sub
push
add
aas
mov
add
add
js
push
pushf
dec
cmp
mov
jno
push
push
loopne
test
test
icebp
addr16
inc
cmp
xchg
push
add
add
sub
jmp
mov
xchg
mov
pop
addr16
in
xlat
mov
jge
movsb
and
xchg
aam
test
cmpl
cmp
ljmp
push
mov
ljmp
fists
inc
add
lods
adc
mov
sbb
leave
enter
int3
and
jge
adc
add
add
dec
scas
ror
sbb
mov
pop
repnz
push
jbe
lods
lret
fst
mov
dec
add
add
dec
pushf
imul
lcall
lret
pushf
in
in
xchg
popf
push
add
inc
cmp
test
add
rclb
addr16
jnp
jp
lods
xor
rcrl
ja
lret
adc
adc
sbb
loop
pop
xor
add
add
stos
decl
cli
mov
lock
inc
inc
popf
or
mov
pop
cmpsl
outsb
movsl
and
add
arpl
loope
jecxz
add
aas
jae
mov
pop
sub
jl
nop
mov
add
ljmp
in
in
neg
and
pusha
push
adc
adc
add
repz
sub
fs
es
out
jmp
std
adc
cld
vmovsd
popf
mov
popf
pop
jae
add
add
or
inc
hlt
pop
mov
jg
imul
pop
pop
xchg
mov
add
imul
push
sub
aad
mov
cmpb
mov
add
add
jbe
cmp
jle
mov
mov
jnp
or
mov
inc
sbb
fadds
add
add
push
pop
jbe
fsts
pop
dec
subb
xor
ret
add
add
movb
mov
pop
dec
pop
inc
xchg
xor
dec
push
mov
adc
add
add
popa
ja
imul
adc
cmpsb
popf
rolb
cmpsl
pop
pop
xlat
xor
pop
add
add
sbb
lods
mov
movsl
test
mov
mov
movsb
cmp
add
in
out
pop
push
outsb
xor
popf
add
add
cltd
inc
insb
js
mov
cmp
insb
call
pushf
fbld
outsl
add
inc
mov
add
sbb
in
xchg
sub
call
jmp
push
xor
sbbl
add
or
js
add
jno
jno
xor
inc
movsb
sub
or
daa
addb
sub
add
add
sbb
shll
push
bound
insb
mov
jbe
mov
adc
adc
add
push
lea
ja
pop
fstcw
adc
lahf
sbbb
aam
cmpsb
fiaddl
add
add
add
mov
push
sbb
cmc
xorl
out
jle
add
add
jp
in
xor
mov
sbb
lock
push
push
inc
inc
push
xchg
outsl
or
addl
nop
shrl
jmp
and
test
or
push
jbe
push
cmpsb
leave
pop
inc
inc
pop
bound
add
add
or
loope
cmp
decl
or
in
sbb
inc
adcb
add
lcall
shrb
push
gs
mov
pusha
mov
mov
je
add
add
adc
add
push
repnz
sub
es
jp
mov
cmc
aam
lock
push
mov
pop
add
add
sub
push
jle
sbb
or
cmp
cs
sarl
lock
mov
sbb
add
pop
sbb
outsb
sub
or
popa
push
add
cwtl
clc
jnp
push
fmulp
mov
enter
add
add
add
movsb
hlt
enter
inc
add
jmp
idivb
mov
icebp
je
fbstp
add
xorl
lret
imul
dec
stc
enter
and
or
add
or
movsb
int
loope
dec
dec
mov
lret
or
or
lock
daa
mov
inc
adc
add
add
cltd
adc
scas
cmp
fmul
cmp
xor
mov
fsubs
add
add
cmp
cmpsl
mov
cmp
mov
fisubs
stc
lahf
adc
xchg
mov
jno
add
add
into
jg
je
push
aad
jne
insl
ficomps
notb
xchg
pushf
scas
aaa
subl
outsl
xchg
and
add
pop
testl
in
imul
loop
jnp
test
or
mov
ficompl
add
add
add
clc
negl
add
adc
xchg
les
sbbl
add
add
xchg
outsl
iret
or
arpl
xchg
es
pushf
mov
repnz
je
je
push
jae
xchg
out
paddd
add
add
lock
in
loop
cs
loopne
jo
popf
out
push
push
dec
cwtl
aaa
into
dec
mov
stos
insl
imul
lods
cltd
hlt
pop
xor
sbb
xchg
mov
mov
cmp
sub
add
add
fstl
mov
popf
mov
jno
push
dec
inc
pop
lods
mov
add
sub
aas
movaps
and
std
hlt
mov
nop
xchg
inc
in
sub
movsb
cld
sbb
add
add
inc
fidivrl
sub
cmp
cmc
sub
and
inc
rcl
pop
add
out
into
dec
imul
xchg
loope
add
add
cmp
out
popa
stc
sub
add
rcr
inc
into
outsb
jnp
jo
enter
cmp
add
sahf
pusha
sbb
adc
test
dec
cmp
xor
xchg
in
sbb
add
or
mov
cmp
sar
mov
pop
sbbb
xor
test
cli
sub
lods
or
add
add
sbb
dec
xor
mov
sbb
enter
sbb
add
push
imul
add
mov
ret
mov
mov
mov
test
daa
es
inc
lret
add
imul
cwtl
mov
icebp
popa
push
xchg
les
sar
rcrb
push
xchg
bound
add
inc
cmp
mov
jmp
push
sbb
ds
or
add
add
push
in
push
jb
sub
lcall
jno
scas
mov
cmp
mov
add
adc
xchg
cltd
mov
lds
dec
lock
mov
mov
adc
repz
enter
add
xchg
push
aam
scas
loop
inc
pmaxsw
jmp
jnp,pt
int
add
add
add
shufps
test
int
mov
lret
lret
pop
out
fcomp
movsb
ret
and
clc
sarl
add
add
ret
mov
repz
fdivp
mov
add
adc
fiadds
add
add
and
dec
sarb
aas
fnsave
lock
xlat
pop
pop
test
cmp
pop
aas
rorl
add
add
insl
xor
shll
cmp
fldcw
pop
adc
es
and
int3
sti
add
add
jae
shr
test
jle
pop
xor
xchg
add
cmp
add
jno
add
add
movsl
mov
in
xchg
frstor
lds
in
imul
les
aaa
lahf
xor
test
add
jns
cmp
mov
add
pop
pushf
mov
out
daa
movsl
out
mov
jb
in
or
dec
push
dec
add
add
xchg
jnp
inc
aaa
xchg
inc
stc
add
cltd
adc
cltd
dec
sti
popa
xchg
dec
add
add
add
or
loopne
aad
mov
ret
movsl
scas
cmp
fcoml
mov
movsb
loope
scas
push
mov
mov
add
sbb
ljmp
or
jno
xchg
lret
and
addr16
imul
sarb
cmp
pusha
int
add
add
cli
rolb
jp
mov
stos
lret
push
push
mov
adc
in
add
add
aad
mov
and
jae
test
jl
add
outsl
inc
loop
jmp
xor
idiv
int3
scas
test
outsb
mov
mov
push
hlt
mov
aam
lcall
outsb
stos
cmp
add
add
popf
adc
push
sub
push
out
imulb
mov
xchg
in
clc
inc
add
add
ror
das
xchg
es
inc
movsl
xchg
pop
push
inc
in
xchg
and
push
inc
fcmovnbe
and
sub
add
add
mov
sub
gs
sub
cmp
cmp
inc
test
mov
rcrl
add
jnp
add
sbb
pop
inc
mov
scas
popf
into
or
mov
cmpsb
add
add
xchg
aad
clc
lahf
cmp
inc
cmp
pop
jae
xor
lods
adc
adc
inc
in
push
add
add
outsb
enter
test
adc
leave
sbb
or
lods
stos
incl
add
mov
div
xchg
cli
int3
stos
push
daa
add
aas
inc
sub
push
out
test
and
push
add
push
mov
xchg
jbe
aas
cmpl
movups
out
roll
pop
xchg
add
add
mov
das
mov
jne
out
sub
cs
xchg
jl
xchg
mov
push
add
add
mov
xchg
jle
sbb
call
lret
pop
and
xor
mov
add
add
push
div
and
insb
lock
out
mov
je
movsl
push
pop
xchg
lret
shrb
mov
add
add
hlt
push
mov
jge
and
cmpsb
divl
mov
stc
sub
push
add
add
jl
sbb
call
outsb
aaa
add
pop
sbb
mov
sub
loope
add
add
xor
stc
std
ret
xchg
sbb
sub
xchg
jl
jae
out
popf
mov
inc
cmp
add
add
xor
adc
xorl
push
inc
aas
inc
inc
out
imul
sbb
mov
mov
add
add
frstor
gs
mov
dec
cmpb
fwait
popf
cs
sbb
add
add
sbb
jge
call
sti
incl
inc
mov
push
out
sbb
mov
dec
aaa
mov
hlt
xor
push
rcrl
test
mov
push
and
movsl
mov
add
dec
pushf
cld
pop
rolb
mov
add
or
int3
cmp
rorb
stos
mov
add
push
cmp
in
dec
jns
aaa
lds
mov
xchg
cmpsb
jle
sarb
jecxz
pop
movsl
cli
dec
jp
add
add
ss
movw
pusha
testl
push
test
pop
sub
adc
add
add
pop
shlb
lods
addr16
mov
mov
mov
push
sti
push
hlt
out
ret
mov
add
add
jno
inc
fstp
dec
in
mov
sti
push
mov
es
mov
dec
cmp
add
add
add
stc
jne,pn
scas
movsb
cli
rcrb
stc
sub
mov
jmp
pop
ja
mov
add
jge
inc
repnz
clc
jmp
inc
arpl
pop
add
cmp
scas
incb
pop
add
flds
add
add
stos
das
es
xchg
out
mov
arpl
push
or
mov
daa
aaa
or
pop
pop
pcmpgtw
mov
stos
inc
pop
popf
sub
aaa
push
mov
cmp
leave
sbb
insl
add
add
pop
fbstp
sub
cmp
cmp
mov
inc
in
rcrb
lods
push
sub
add
stos
xor
ja
mov
aad
clc
in
fs
lea
pusha
mov
mov
in
mov
add
mov
repnz
inc
ljmp
push
aas
pop
dec
fucomp
mov
mov
jg
push
rorl
xor
pop
notl
xor
in
lods
add
add
fimull
cwtl
adc
adc
out
lahf
adc
jl
out
cmpb
dec
mov
add
add
cld
shll
cmp
adc
arpl
in
scas
stc
mov
inc
cltd
push
or
add
add
repz
xor
inc
popf
stc
mov
data16
movsb
sbb
bound
add
lods
mov
xchg
push
or
sbb
data16
jmp
sbb
inc
lret
cmc
call
add
mov
sbb
daa
adc
sahf
mov
push
jg
pop
sarl
inc
data16
add
pop
clc
ja
stc
lea
push
inc
push
push
lret
rcrl
xor
mov
add
add
sbb
outsb
pop
sub
pop
jg
inc
dec
and
call
movl
aad
mov
in
stc
inc
std
scas
jo
push
repz
push
add
add
inc
inc
insl
add
jae
push
and
push
cmp
sub
xor
pusha
sbb
pop
mov
out
add
add
out
rcrl
cmc
sub
pop
or
fldt
cmp
add
inc
xor
rcr
inc
jecxz
daa
das
fs
sbb
cmp
out
sbb
nop
insl
out
loop
add
add
xor
inc
push
paddd
pop
sub
aad
push
sbb
cli
sub
hlt
push
jle
imul
add
sti
xor
dec
cli
mov
add
jbe
lods
adc
xchg
scas
mov
add
dec
xchg
mov
outsb
pminub
ss
push
push
or
sbb
mov
movsb
inc
mov
add
add
xlat
dec
adc
jae
sahf
jmp
xor
int
and
mov
pop
and
add
add
mov
and
mov
jo
movsl
cmp
mov
xchg
mov
in
push
mov
add
add
sar
scas
mov
lcall
insl
cmpsl
out
add
lods
or
jbe
adc
pop
mov
add
add
jbe
jae
lahf
hlt
mov
ja
scas
pop
sbb
ds
js
ds
pop
sbb
jno
scas
sub
add
cltd
add
add
inc
dec
divps
test
adc
push
push
inc
adc
inc
pushf
cmp
mov
xor
xchg
or
push
aaa
add
add
pushl
or
mov
mov
xor
push
inc
or
sbb
or
push
inc
pop
add
add
adc
mov
out
lret
or
jp
pusha
nop
jae
cld
loope
int
nop
jmp
mov
icebp
jmp
stc
aam
add
add
and
dec
adc
test
mov
mov
or
add
add
add
or
outsb
mov
xorb
stos
fistpl
cmp
aas
add
add
out
xchg
lods
in
cltd
out
adc
test
es
pop
and
or
add
out
shr
ljmp
pop
xchg
jb
jp
or
push
pop
lds
inc
dec
insl
add
fcompl
add
add
pop
cmp
repz
mov
inc
sub
stc
and
adcl
jle
fsubrl
leave
das
sbb
sbb
add
add
mov
inc
xchg
jg
mov
test
push
rcl
insl
enter
and
sub
xchg
add
sub
fisttpl
pop
aam
mov
push
stos
lea
out
sub
push
dec
pop
mov
add
add
testb
jl
push
mov
jge
ljmp
jnp
mov
lea
add
add
jb
pop
xor
xor
mov
fnsave
cmp
hlt
lods
sbb
push
add
add
push
inc
mul
aad
cmp
imul
into
and
cmp
les
sub
shrb
add
sahf
mov
pushf
sub
insb
push
in
stos
adc
xchg
adcl
lcall
add
add
xchg
mov
fimull
iret
movsl
push
lods
inc
subb
mov
in
js
mov
push
stos
dec
inc
cmp
add
hlt
aas
popa
sbb
lea
xchg
std
ret
pop
and
lret
add
add
mulb
int3
xor
outsb
pop
push
xlat
mov
sbb
loope
push
sub
add
add
aad
or
and
test
xor
shrb
fwait
adc
mov
xor
in
lods
imul
nop
xor
aaa
adc
xchg
fistps
sti
sti
pop
dec
dec
push
pop
add
add
add
aam
xor
fwait
pop
xchg
leave
nop
xor
lcall
lods
bnd
div
sarb
dec
jmp
int
push
pop
add
add
shr
xchg
mov
jne
mov
lods
aaa
mov
sub
addb
dec
cld
mov
add
add
sbb
pop
jb
push
cmp
inc
leave
clc
shld
dec
loopne
dec
push
sub
sbb
jecxz
add
add
push
mov
aas
ljmp
dec
push
and
cmp
sub
add
mov
loope
enter
lods
xlat
mov
mov
add
gs
push
add
add
pop
fildl
das
xchg
cmp
lcall
sub
pop
xchg
mov
sub
shrl
mov
cmp
mov
mov
arpl
dec
daa
fstps
jl
dec
dec
lahf
add
add
popf
xchg
cmpsb
adc
and
loop
cltd
sbb
daa
jle
mov
int
in
sahf
dec
adc
add
xchg
arpl
inc
cmp
test
cmp
sbb
push
je
nop
push
pop
jle
push
xor
ss
cmp
add
add
mov
cmp
cmpsb
andb
dec
or
fs
jns
adc
sbb
add
adc
into
mov
mov
test
push
mov
inc
xlat
mov
scas
jbe
adc
gs
test
add
lods
icebp
inc
clc
push
mov
jbe
mov
sbb
cmpsb
jns
sbb
les
add
add
negb
or
ss
popf
es
mov
mov
pop
lods
scas
mov
gs
popf
add
add
mov
cli
int
cmp
jae
outsl
dec
mov
add
cmp
sldt
add
aad
fists
mov
pop
and
and
mov
mov
aad
adc
or
lods
add
add
in
mov
iret
add
xor
in
xchg
adc
popa
sbb
lods
ja
test
cli
add
add
mov
sub
sub
ret
fcoml
xchg
inc
jae
test
add
cmpsb
dec
call
test
outsl
or
roll
adc
outsb
movsb
das
mov
sbb
add
cli
sbb
push
mov
loope
add
add
roll
pop
push
lea
into
pop
mov
jnp
pop
mov
lds
sahf
mov
jle
add
add
mov
mov
test
repnz
pushf
hlt
rcrl
dec
jne
test
in
add
add
daa
mov
jl
addr16
fdivr
mov
cmp
or
sbb
fidivrl
xor
add
add
mov
shll
xlat
xlat
mov
cld
mov
sub
bound
jmp
pop
and
add
add
or
pop
and
push
add
and
cltd
jb
or
insb
out
sbb
jecxz
add
add
pop
inc
xor
xchg
scas
mov
push
sbb
dec
loop
iret
mov
push
inc
cwtl
in
jnp
into
inc
adc
jo,pt
mov
adc
add
cmp
push
dec
ret
add
add
aam
popa
daa
xchg
mov
xlat
inc
sbb
add
xlat
inc
cwtl
pop
popf
mov
dec
enter
push
add
add
mov
mov
into
or
movsb
xorb
stc
mov
pop
xchg
movsb
dec
inc
add
add
sbb
insl
shll
fisubrl
mov
dec
pop
stc
psubd
iret
lock
or
clc
jnp
movsl
popf
add
add
aad
adc
sub
scas
enter
shll
sub
test
loope
pop
pop
loope
lods
add
add
inc
mov
and
fisubrs
mulb
fdivl
stos
dec
cmpsl
adc
cmp
notb
cmp
mov
sar
sbb
and
jl
and
test
and
and
jle
mov
and
sub
jp
add
sbb
mov
push
mov
push
adc
mov
add
add
push
movsb
adc
lahf
mov
cmp
xchg
and
push
add
jmp
pop
clc
int
xchg
jb
add
add
push
mov
lcall
lret
push
xor
adc
cmpsl
push
das
rolb
add
add
jle
cmp
mov
sbb
lret
add
jl
dec
xchg
adc
add
add
int
movb
inc
adc
push
inc
es
in
add
pop
cltd
ss
mov
add
shl
sbb
addb
cli
jns
scas
and
std
scas
or
lret
fldt
es
lret
and
add
add
imul
or
mov
push
pop
xchg
shrb
jle
loop
mov
andl
add
shl
mov
sbb
scas
cmp
insl
sbb
ret
in
pop
xchg
cwtl
or
or
ss
pop
add
add
arpl
mov
mov
lock
sub
cwtl
sbb
daa
pop
sbb
stos
dec
add
add
cli
out
lock
outsb
pop
push
sbb
cwtl
xchg
movsl
pop
push
adc
inc
xchg
mov
add
add
push
sub
mov
jne
or
mov
pop
imul
sub
es
mov
add
add
and
rorb
add
mov
mov
or
sub
add
jle
sbb
add
add
mov
orl
jne
or
xchg
pushf
sarb
lret
ds
add
cmp
fstpl
xchg
stos
repnz
test
je
pusha
orl
push
mov
mov
add
add
add
xor
shlb
imul
lods
fcmovu
mov
push
ja
push
sub
add
mov
cmp
je
cmp
push
push
pop
cltd
imul
xchg
xchg
add
add
mov
das
mov
stos
and
movsl
fs
jns
pop
add
icebp
mov
cli
add
add
shll
cmp
lea
popa
out
out
cmp
mov
mov
xchg
add
add
out
pop
fidivl
icebp
test
and
inc
inc
out
and
inc
dec
and
dec
add
add
dec
inc
xchg
mov
int
add
in
insb
ja
jg
xchg
ret
outsb
popf
sbb
xchg
pop
std
cld
add
add
cmp
test
pop
and
fsubp
jg
inc
add
pop
int3
rclb
call
int
add
add
cmpsb
mov
pop
push
inc
mov
loop
sarb
sarl
dec
sub
add
add
mov
fcmovbe
jge
mov
pushf
push
popf
sarb
jno
fldcw
in
into
cli
ds
scas
mov
int3
dec
jp
add
add
sbb
xor
daa
sbb
pop
pusha
pusha
pop
xchg
fwait
jbe
arpl
xchg
scas
incb
jnp
sbb
add
add
sub
leave
andb
rolb
lahf
rcr
mov
mov
andl
ja
add
add
leave
jns
or
or
cmp
imul
push
rcll
fcmove
shr
xor
lock
add
add
aaa
mov
arpl
cmp
add
mov
popa
rcll
add
add
clc
fiadds
cmp
xor
xchg
mov
repz
filds
pop
cmp
add
fildll
fstpl
test
enter
sbb
aas
jp
sub
add
push
jb
mov
cmp
sub
pop
frstor
lds
dec
push
jecxz
les
add
add
cmp
nop
sbb
lea
sbb
sbb
call
in
adc
stos
pop
jp
add
add
mov
adc
cltd
add
jle
mov
xlat
mov
decb
mov
add
jo
sti
sbb
sbb
or
add
xchg
jge
fdivrs
xchg
xor
mov
add
in
rcrl
sub
mov
sbb
in
and
inc
fcmovu
dec
cmpsl
das
sarl
add
add
xor
and
push
cmp
ret
rolb
or
mov
add
add
decb
jecxz
mov
mov
iret
mov
sbb
and
push
mov
jbe
or
inc
add
add
and
insb
xchg
mov
mov
pop
mov
push
mov
fs
xor
mov
inc
add
add
push
add
fimull
pop
orl
adc
push
mov
fmull
add
add
or
cmpsb
lret
rcll
pop
shlb
sub
sub
jne
js
add
add
mov
inc
pushl
mov
ficomps
repnz
scas
xchg
test
das
add
add
mov
mov
ret
jge
lahf
sub
cmp
dec
pop
fstpl
and
ffree
mov
push
dec
test
fldt
outsl
cmpl
push
jno
rcrl
add
add
and
add
push
pop
dec
lods
insb
test
and
sbb
jmp
test
cmp
in
outsb
add
add
iret
cmpsb
lahf
lods
shll
jge
sarb
popf
bnd
sbb
insb
int
sub
outsl
imulb
add
xor
push
dec
mov
xor
nop
pop
stos
dec
add
mov
and
jmp
mov
add
add
ret
pop
into
jbe
jge
lahf
int3
sub
jg
repnz
push
xlat
push
fs
add
add
mov
push
cmpsb
stc
gs
jae
cmp
jae
ret
mov
sbb
add
add
subl
sbb
pop
mov
adc
add
add
mov
or
out
aad
add
outsl
cmpl
loopne
pushf
pushf
inc
movsb
add
add
xchg
mov
inc
mov
filds
mov
jle
mov
xor
test
add
add
fisubs
idivb
push
pop
pop
pop
xor
cltd
jp
adc
add
add
mov
sub
dec
outsb
xor
pop
iret
scas
stos
nop
xor
ds
les
xor
add
add
pop
jb
out
insb
mov
ret
mov
lcall
iret
iret
dec
rep
add
add
sub
xchg
jp
push
push
and
testb
out
mov
test
outsl
push
add
add
and
inc
imulb
add
push
repnz
add
enter
mov
adc
adc
cmp
add
add
xchg
mov
cmpsb
lcall
sbb
ja
xchg
add
je
pop
dec
dec
clc
push
or
jo
arpl
add
add
movsl
dec
or
clc
jl
lds
push
out
xor
out
mov
cmp
mov
add
inc
cmp
cmp
sbb
hlt
dec
mov
aam
aam
scas
loopne
movsb
jmp
ret
movsl
cltd
xchg
call
add
push
xchg
daa
mov
pop
dec
mov
adc
lret
push
repnz
jle
add
add
or
lcall
xrelease
jo
push
push
jg
sbb
dec
and
add
add
add
sahf
dec
jmp
jl
or
insl
push
xchg
pop
test
sub
arpl
adc
add
shll
and
enter
pop
mov
fdivrs
jle
push
je
cmpsl
mov
hlt
add
add
fdivrl
mov
cmpsb
jecxz
pop
lods
sbb
xchg
add
mov
xor
stc
ljmp
add
add
jl
je
sub
out
insb
push
mov
sub
icebp
in
test
add
add
lret
add
jge
loope
adc
hlt
or
rorb
push
movsl
add
xor
add
add
add
popf
xor
push
mov
or
sub
imul
movsb
sub
dec
leave
clc
inc
dec
add
add
add
mov
push
icebp
adc
push
inc
and
notl
jbe
ds
add
ds
sub
and
cmc
scas
scas
mov
dec
pop
test
std
int
jns
dec
sti
sbb
add
add
cmp
sbb
repz
into
add
adc
lods
sbb
cli
and
pop
add
add
jmp
mov
mov
lret
inc
lret
or
xchg
pop
sub
andl
and
add
add
mov
cmpsb
xlat
bound
and
and
add
stc
jge
sub
andl
fcomi
add
add
out
test
lahf
ja
cltd
leave
mov
dec
movl
loop
das
sub
ja
jns
add
add
mov
scas
mov
mull
mov
clc
lods
mov
divl
nop
adc
sbb
mov
add
add
xor
push
push
rcrl
inc
xchg
aas
jp
lods
jge
push
sub
jbe
lods
cmp
test
add
xor
push
xor
addr16
sbb
push
or
int3
sub
push
adc
sbb
push
and
out
add
add
fs
push
movsb
push
pushf
sub
in
lds
testb
or
aad
out
add
fcom
int
sahf
and
add
add
pop
scas
sbb
arpl
out
jo
test
xchg
adc
stos
je
add
add
add
out
xor
movsb
mov
js
and
pop
jle
insb
sbbl
dec
lods
out
out
and
add
dec
pop
dec
pop
scas
mov
and
and
andnps
test
add
add
pushf
rorb
push
inc
or
xchg
scas
popf
or
inc
inc
bound
cmp
lcall
add
add
dec
push
jb
fucom
notl
fcoml
or
fimull
pop
aas
pop
cmp
push
mov
xor
add
add
sbb
adc
fs
sbb
xchg
pop
jbe
mov
jmp
mov
or
dec
push
add
xor
cmpsb
add
mov
cmp
icebp
rcrb
scas
les
call
inc
xchg
movl
cmp
notb
and
pop
addb
mov
insl
ficomps
xor
add
add
mov
fcoms
std
lret
adc
xchg
fs
cmp
outsl
dec
arpl
xor
add
add
mov
mov
sbb
add
xlat
rolb
xchg
push
adc
push
popf
add
add
out
push
loop
sbb
sbb
sbb
inc
clc
dec
aad
cmp
sbb
mov
aam
loop
imul
pushf
jge
sub
add
dec
cld
push
fcomi
pcmpeqd
add
add
and
or
xor
test
jmp
cmp
test
jmp
add
add
sub
ret
sbb
scas
pop
push
scas
movsl
push
clc
dec
mov
xor
fnstsw
mov
negl
add
add
push
repnz
pop
mov
imul
mov
testl
and
add
add
xchg
or
inc
daa
or
faddl
and
adc
in
call
int
add
add
jle
out
ret
stos
or
adc
pop
or
pop
inc
bound
inc
add
add
ljmp
lds
fs
push
cs
mov
sbb
jo
popw
test
add
add
xchg
xor
addb
lahf
loopne
cmp
roll
jno
lret
mov
pop
push
cmpsl
mov
add
sub
das
mov
cmp
cmp
insl
ds
fwait
push
sub
arpl
add
add
out
dec
int3
add
xchg
movsb
sbb
leave
pop
aas
into
je
jae
add
dec
sahf
lret
inc
inc
loopne
lods
mov
ljmp
pop
xchg
mov
lock
int
ljmp
fwait
add
add
or
in
sti
cli
lret
lods
outsl
xchg
inc
add
mov
jge
lea
rol
jae
inc
fwait
repnz
add
add
push
mov
test
fwait
je
add
cld
adc
mov
ss
push
outsb
mov
in
lock
add
test
sbb
test
push
mov
inc
cwtl
or
mov
loop
adc
dec
negb
jle
add
add
das
sbb
aaa
sbb
inc
xchg
adc
pop
andl
gs
cwtl
addb
add
add
test
arpl
stos
inc
rcrb
add
xor
ljmp
mov
jb
ljmp
add
aaa
cs
loop
jg
fisubrs
xchg
xchg
aas
cmpsl
pop
mov
mov
or
out
push
leave
add
add
add
fdivl
daa
test
jo
lods
sub
sahf
sbb
lds
shrb
mov
jl
scas
mov
adc
mov
movsl
test
sti
rcll
ret
pop
cli
jecxz
popa
xlat
lds
add
add
xor
adc
shll
movsb
push
mov
movsl
in
cmp
add
add
mov
fcomp
out
fwait
sub
test
sbb
add
sbb
add
jge
adc
sahf
lea
mov
notb
push
lret
fs
mov
add
add
rcrl
mov
dec
mov
ljmp
ret
lock
jnp
dec
jmp
and
shr
add
add
or
inc
andl
loop
lds
stos
push
arpl
lcall
je
add
add
loope
sbb
sbb
dec
pop
cwtl
mov
cmp
into
pop
sbb
mov
add
lods
lcall
inc
push
mov
xchg
repnz
cmpsb
mov
mov
icebp
pop
add
add
enter
rclb
and
orl
sahf
fcomp
test
cltd
push
jb
push
dec
pop
das
jl
pop
add
add
sbb
aaa
push
scas
jp
add
fcoms
adc
scas
or
cmp
add
add
fstpl
cmp
aam
insl
mov
dec
xchg
pop
mov
pop
scas
pusha
jl
push
out
or
add
add
push
lock
repnz
xor
es
les
js
sub
xchg
stos
arpl
aaa
jo
add
add
subl
icebp
popf
sbb
adc
andl
xchg
xor
in
xor
add
add
mov
mov
lods
lcall
mov
pop
add
add
add
add
pop
push
jbe
mov
cmpsl
mov
cmpsl
ud1
int
out
push
unpckhps
xor
scas
mov
inc
rol
mov
les
into
pop
adcb
xor
xor
cmp
add
les
ja
adc
xor
or
jmp
mov
pop
imul
sbb
and
in
arpl
add
add
iret
or
push
cmp
xchg
inc
inc
or
cli
mov
mov
dec
sti
stc
mov
add
push
ret
dec
adc
arpl
arpl
mov
xor
push
ret
es
mov
mov
add
add
sbb
dec
out
pop
cmpsb
jmp
adc
xchg
scas
movsl
sbb
dec
push
and
enter
in
dec
add
add
shrl
outsl
cmp
and
jg
and
cmp
or
add
add
imul
jecxz
sub
daa
mov
sti
fs
cwtl
leave
fiaddl
xchg
loope
adc
xchg
add
add
xchg
cmp
sbb
and
pusha
ficomps
mov
and
push
clc
inc
test
fst
cs
add
add
stos
mov
push
adc
out
jl
rcrb
gs
push
mov
cli
pusha
inc
popf
hlt
and
add
add
lcall
jl
mov
sbb
popf
je
push
jae
push
out
mov
mov
add
add
addr16
int
push
dec
stos
jmp
push
mov
sbb
aad
pop
mov
sahf
jmp
out
xchg
add
add
dec
push
lods
jmp
call
add
fsub
les
ss
shrl
pop
or
inc
lock
add
call
fcompl
add
pushf
push
sub
adcb
add
mov
add
fadds
push
test
push
loope
movsl
scas
cld
ss
lods
ret
cmp
stos
push
mov
cli
pushf
or
add
xor
add
js
xchg
push
add
adcl
lret
ret
mov
add
add
adc
sahf
andl
test
mov
adcl
insb
andl
add
add
shll
fistl
inc
mov
cs
xlat
outsl
shlb
rcr
inc
pop
xor
add
add
aam
jne
xor
sbb
call
xchg
lret
xchg
fwait
add
inc
mov
xchg
nop
xchg
add
add
nop
xor
pop
pop
jle
push
je
fidivrs
lock
add
jae
mov
iret
insb
add
bound
push
xchg
in
add
add
xlat
push
jp
pop
repz
data16
sub
and
xor
subl
add
add
jb
popf
aam
jmp
dec
pop
inc
sahf
jmp
xchg
pop
lahf
fwait
mov
test
aaa
add
add
inc
sarb
in
jne
fadds
jmp
loopne
lock
loope
mov
mov
xchg
sub
add
add
outsl
adc
aam
je
cmp
fwait
mov
fsubr
cmc
xor
enter
fwait
or
add
push
dec
aam
pushf
rclb
mov
mov
mov
jge
rcr
sub
add
push
inc
mov
adc
cmp
fsubr
xchg
call
ja
aam
cltd
push
add
fisubrl
xchg
cmp
enter
push
icebp
lret
add
add
aam
out
or
mov
shr
dec
push
xchg
sbb
ret
popf
cwtl
mov
xlat
xor
xor
lds
add
add
jne
fldcw
pop
in
xchg
or
mov
loopne
test
stos
repnz
mov
add
add
out
jno
aad
xor
inc
sub
inc
sub
shrb
aam
fstl
add
cmc
mov
sbb
insl
adc
je
movsl
sub
pop
xchg
and
adcl
iret
popa
add
add
cs
fwait
mov
adc
aad
sbb
scas
fstl
repz
add
add
fbstp
das
mov
fnstsw
inc
inc
and
jb
push
push
mov
add
add
test
push
push
mov
in
into
xor
jns
scas
scas
setns
in
loop
insb
push
push
add
add
jmp
fstpl
stos
loop
test
xchg
dec
mov
stc
lcall
sub
mov
out
xor
insl
test
ret
test
pop
je
push
sbb
mov
sub
add
add
movsl
xlat
jecxz
xchg
jmp
ret
cmp
xor
lcall
add
cmc
mov
push
popa
push
mov
imul
cmp
xor
pop
and
add
in
cwtl
lock
dec
jb
inc
push
test
scas
jne
and
sub
cltd
jecxz
xor
stc
in
icebp
addr16
je
jmp
loop
pop
mov
jno
call
negl
movb
add
ds
cmc
leave
sub
shl
icebp
xchg
cmp
test
movsl
fs
pop
jne
pop
jb
mov
add
add
ljmp
jp
adc
cmp
pop
shl
mov
lods
fsubp
fistps
imul
add
out
jo
inc
std
das
add
push
iret
ljmp
out
shrl
adcb
xchg
mov
add
push
jmp
and
out
add
addr16
lds
ljmp
add
mov
xchg
bound
mov
pop
pop
das
mov
mov
loopne
out
xchg
lods
test
xor
add
add
mov
xor
adc
cmp
push
mov
sbb
jo
add
add
jns
jle
icebp
je
xchg
and
xor
adc
adc
jo
pop
das
add
add
adc
ret
jmp
test
xor
movsb
dec
mov
jae
out
ret
mov
mov
mov
fildl
add
add
mov
test
gs
loop
adc
add
ljmp
enter
add
jne
pop
adc
xor
cmp
push
dec
test
imul
fcoml
xor
rcll
add
push
jmp
cmp
das
rcrb
xchg
jo
xor
int
in
push
add
add
and
xlat
mov
in
mov
iret
xchg
gs
lret
clc
pop
xor
xor
rolb
add
add
int
dec
std
imul
sbb
in
out
push
in
mov
dec
or
inc
movsl
pusha
hlt
or
inc
aad
add
add
jo
push
mov
iret
xor
jae
fmul
arpl
add
add
add
jo
sub
nop
sarl
pop
cmc
cwtl
xchg
cmc
shrb
inc
mov
icebp
mov
lods
push
pop
add
add
insb
in
inc
hlt
addl
test
mov
mov
mov
in
jmp
rcl
add
add
in
bound
push
jb
insl
push
sbb
stos
in
push
fstpl
and
outsl
hlt
dec
rolb
add
xchg
jb
faddl
frstor
dec
lahf
scas
test
mov
xchg
in
mov
add
add
insb
mov
and
in
loope
pusha
jle
mov
xlat
fs
add
or
add
add
xor
ret
scas
out
call
pop
fstpt
xor
pushf
out
jmp
push
in
add
add
fwait
pop
loope
sbb
fsts
add
ss
insb
push
or
mov
shll
movsb
leave
add
add
aad
repz
loop
hlt
xor
mov
aad
movsb
mov
enter
xchg
xor
sub
add
add
shll
mov
jns
push
inc
hlt
jo
rclb
pusha
lcall
mov
add
add
push
mov
repz
aam
das
test
add
aaa
xchg
dec
cmp
ret
dec
mov
sarl
add
add
data16
lds
in
xor
lods
lret
jno
mov
lods
pop
repz
outsl
aam
add
add
pop
lds
cmp
dec
push
add
js
sbb
cmp
inc
test
jbe
imul
mov
pop
pop
fistl
mov
mov
mov
scas
inc
jae
mov
add
add
stc
ret
lock
andl
outsb
test
std
xchg
fsubrl
push
jecxz
xchg
sahf
and
int
ffreep
popa
cmp
add
add
push
fisubrs
lock
loope
lock
jecxz
lock
lock
insb
lods
mov
add
add
in
mov
mov
rcrb
pop
loope
iret
dec
or
fs
pop
cmp
add
add
sbb
outsb
ret
lds
rcr
repnz
mov
and
leave
ret
mov
adc
add
pushf
sarb
lahf
lds
xor
ret
inc
mov
lahf
rep
insb
mov
movsl
xchg
fadd
out
add
add
add
lods
mov
lods
push
jne
out
jne
in
mov
mov
xchg
jae
xor
movsl
add
add
out
lods
sub
fisubrs
add
add
cli
js
ficomps
int
pop
out
mov
mov
add
into
mov
stos
insb
xor
in
xchg
xchg
int3
js
fwait
push
pushf
pop
mov
mov
inc
jne
loop
add
add
jg
xchg
call
repz
je
xchg
adc
icebp
rolb
movsb
add
add
fnsave
jge
test
mov
sub
sub
cmpsl
xor
pushf
mov
test
add
add
sbb
int
sub
add
adc
xchg
xor
scas
in
pop
jae
mov
repnz
in
mov
sarl
xchg
push
gs
nop
imul
inc
rcrb
lds
xor
std
pushf
or
xchg
out
jne
sub
mov
inc
lds
addr16
dec
loope
popa
sub
cmpsl
hlt
push
xchg
add
add
in
mov
popf
mov
add
jno
pushf
test
xchg
repnz
cmp
mov
popf
cmpsl
add
add
sarb
pusha
sub
ret
repz
out
fsubr
push
push
dec
jle
out
dec
addr16
in
in
out
add
add
cmc
and
push
add
lods
iret
out
int3
push
leave
or
addr16
mov
imul
in
xlat
daa
dec
add
add
mov
lods
call
gs
test
jmp
and
int
jl
add
add
ljmp
out
in
icebp
or
cmp
push
jmp
repz
xchg
and
jmp
lods
xor
add
add
in
lock
mov
dec
movsl
fldpi
xor
adc
jne
loope
lock
push
scas
loope
shl
add
add
cmpsl
cmpsl
xor
push
mov
adc
adc
fisubrs
lds
add
fsubrp
xchg
adc
push
sbb
aam
jae
lods
inc
inc
int
mov
les
xchg
pop
add
add
ror
leave
lods
adc
add
aas
test
mov
mov
fisubrl
int
mov
add
add
in
gs
mov
rorl
pop
xchg
addr16
inc
arpl
aam
lods
repz
mov
js
ja
push
shr
jnp
gs
cmpsb
scas
xchg
imul
test
inc
in
mov
add
add
out
push
repnz
xchg
inc
pop
inc
ret
inc
nop
push
xchg
xchg
jge
ret
ret
fists
cmp
jae
adc
jle
ret
jecxz
add
add
mov
ljmp
cmpsb
fcomi
imul
ljmp
add
add
cvtdq2ps
cld
cmpsl
mov
or
inc
in
or
mov
movsb
inc
fisubs
add
xlat
push
cmp
or
push
pop
sub
mov
inc
in
lds
add
add
cwtl
push
cmpsl
ja
jbe
jb
xchg
sti
xor
scas
sbb
pop
mov
xchg
gs
mov
add
add
outsb
xorl
mov
les
add
dec
sub
repz
lods
mov
aad
das
add
add
sbb
repnz
pop
in
mov
rolb
and
cmpsl
and
cmc
mov
cmp
les
mov
add
add
add
popf
scas
xor
push
xchg
xor
pop
xchg
cmp
iret
pop
aad
scas
mov
imul
test
mov
negb
add
or
pushl
mov
push
jmp
sbb
push
mov
and
add
add
int3
push
sbb
dec
mov
inc
pop
std
adc
and
add
sti
bound
add
mov
push
pop
mov
inc
adc
cli
scas
jns
cld
push
mov
push
inc
dec
cmp
stos
add
add
push
sub
insl
xchg
les
out
popf
push
int3
aad
mov
imul
orl
add
les
in
jnp
arpl
repnz
test
ja
fbstp
test
sti
aam
pop
lock
cmc
mov
in
inc
int3
insb
mov
shl
scas
push
ds
pop
and
mov
mov
stos
push
jno
pop
add
add
cwtl
fnstenv
inc
sub
int3
jge
aad
repnz
push
outsl
xchg
out
xlat
cmc
repz
add
repz
inc
es
rol
daa
in
hlt
rcr
sub
mov
sbb
jge
mov
add
jnp
outsl
daa
lret
sbbb
test
and
pop
lock
repz
mov
pop
cmc
ret
add
add
sti
jge
aad
movsl
popa
sub
icebp
dec
cmc
mov
xlat
sub
int3
xchg
lea
and
gs
add
push
call
jns
push
aad
cld
jmp
xchg
cld
mov
je
fsts
fdivs
add
push
test
aad
mov
push
outsb
into
pop
inc
enter
fwait
in
inc
lahf
jae
add
add
mov
xor
cmpsb
dec
out
bound
jne
stc
lods
ljmp
dec
arpl
into
into
pop
add
add
in
sub
dec
jae
movsb
cmc
and
sub
cli
xor
sbb
mov
add
call
fbld
dec
mov
iret
lods
pop
out
movsb
jno
dec
mov
xor
addb
add
cmp
and
add
rorb
mov
jno
rcl
add
dec
out
lcall
add
add
mov
lea
out
in
xorl
scas
iret
dec
pop
out
sbb
mov
add
add
call
repnz
sbb
add
out
lock
aas
add
add
lock
or
pop
inc
pop
inc
sbb
xchg
or
and
jle
filds
pop
jae
movsl
iret
shll
je
cs
test
movl
shlb
sub
adc
jo
mov
mov
cmp
jg
aad
cmc
cmp
add
pushf
inc
cmp
xor
jno
aad
xchg
sahf
jge
or
imul
add
add
jne
mov
int
lock
sub
int
jbe
icebp
int3
mov
fnstcw
jg
inc
in
add
add
shll
in
iret
push
test
or
jne
push
loopne
add
add
add
sub
xchg
test
lock
aad
pushf
mov
adc
mov
xor
add
add
or
or
ret
fdivp
ret
sub
jle
int
xlat
bound
jne
test
test
pop
xor
aam
add
add
cmp
pusha
adc
std
add
rolb
mov
lock
mov
dec
xor
sti
popa
fdivrs
je
iret
jno
rorl
pop
repnz
pop
popa
sahf
test
push
inc
cmpsl
mov
add
add
xchg
loope
sbb
jno
lods
cmp
mov
add
mov
mov
imul
add
and
ror
aas
imul
into
aad
mov
inc
mov
push
add
add
xor
lret
pop
sbb
xor
pop
fucom
imul
add
add
xor
js
push
shl
push
inc
push
xchg
jnp
es
je
mov
sti
fwait
int
test
in
lahf
sub
add
add
push
mov
or
inc
add
in
lock
cmp
mov
mov
pop
xchg
rcl
add
add
push
lock
into
adc
jg
loop
loop
dec
jecxz
loop
jae
add
dec
add
add
repnz
pushf
lret
out
ljmp
mov
xchg
test
mov
add
add
out
xor
mov
xor
int3
dec
pop
adc
dec
mov
arpl
cltd
sahf
lret
ficompl
mov
push
cltd
add
add
vxorps
cmpsl
stos
addr16
lret
ret
int3
push
jno
cmovne
leave
push
dec
movsl
movsl
add
add
sbb
out
lods
cmc
push
sbb
mov
ljmp
test
push
dec
pop
mov
arpl
movsl
loopne
repz
mov
fsubr
jb
mov
mov
inc
in
hlt
popa
push
add
add
je
mov
jne
mov
cmp
ds
fnsave
ss
fidivrs
mov
sbb
inc
dec
mov
cmp
mov
pop
lea
dec
int3
cltd
sub
std
xchg
push
jl
add
add
andb
rorl
sub
sbb
cmp
out
fwait
jb
mov
sub
push
mov
hlt
xchg
test
xchg
xchg
mov
dec
vpshufd
aam
shrl
add
rclb
xchg
clc
sub
and
pop
test
mov
mov
mov
outsl
xor
gs
loopne
xchg
out
xchg
add
add
and
push
mov
jle
mov
mov
inc
jmp
dec
mov
aaa
or
mov
add
add
das
or
les
mov
nop
jns
xchg
mov
jns
push
out
or
fs
outsl
xchg
add
add
fildll
punpckhdq
and
js
fwait
rcr
xor
out
pop
pop
xor
ret
ds
add
add
pop
mov
aas
ljmp
cmp
mov
jg
loopne
jg
mov
dec
mov
fmulp
and
test
xchg
aaa
jmp
mov
jb
rcll
mov
xchg
xchg
sbb
add
add
lods
xor
lds
cmc
shll
hlt
or
pop
sbb
dec
lods
adc
add
das
jne
add
and
xchg
scas
test
lods
sbb
test
sub
roll
add
pop
mov
cmpsl
sti
popl
es
xchg
imul
add
lahf
or
ja
add
add
add
jecxz
xor
mov
xlat
fcmovb
aad
xor
enter
add
add
imul
std
andl
jmp
rcl
sbb
fwait
imul
add
test
jmp
mov
iret
lahf
ljmp
inc
ss
xor
add
add
in
je
inc
daa
xchg
ja
int3
popf
hlt
fdivr
loopne
pop
imul
dec
xchg
data16
mul
sbb
add
add
adc
sbb
xor
push
testb
aam
dec
pop
push
mov
push
mov
mov
incl
add
add
mov
xchg
mov
insb
je
dec
add
push
js
test
lds
test
iret
int3
sub
xor
mov
cmpl
cmpsb
add
scas
xchg
pop
sbb
add
add
shrl
ficoms
adc
add
cltd
lcall
sahf
push
int3
adc
gs
add
add
jp
lahf
mov
icebp
jns
ret
and
inc
in
fs
clc
rolb
add
add
add
dec
and
test
sbb
push
sti
imul
or
iret
loop
and
sbb
add
add
test
mov
lods
or
scas
pop
or
fnstenv
out
call
xchg
hlt
add
add
out
push
in
test
in
pop
fstpl
loopne
or
lds
pop
in
mov
xor
add
add
adc
in
icebp
xchg
pop
fisubs
inc
inc
jne
mov
jne
add
jne
rcr
add
add
call
aam
icebp
push
jl
lcall
in
push
inc
jo
in
loope
shll
add
add
push
hlt
popf
scas
rcrb
jmp
pop
je
jne
lret
pop
mov
shll
loopne
sub
add
add
loopne
leave
ljmp
mov
cmp
hlt
daa
dec
pop
xchg
mov
loope
fildl
lahf
loope
add
add
int
imul
arpl
jmp
jno
in
jne
xchg
push
lret
in
xor
add
add
jb
xchg
push
inc
insb
shll
cltd
mov
aas
jmp
xchg
enter
imul
les
add
add
orb
pop
loope
mov
xor
jne
jne
mov
imul
lds
jmp
add
add
inc
dec
mov
jl
loop
in
notl
push
and
lea
jl
xchg
xchg
loope
arpl
xor
add
add
in
pop
jne
filds
ror
pop
or
jae
pop
push
lcall
sub
popf
stos
push
and
sbbb
add
lods
bound
hlt
add
mov
fiadds
lock
add
add
repz
cltd
push
pusha
push
sti
dec
dec
pop
les
add
push
ret
es
or
add
add
jno
je
jmp
mov
adc
xor
fmull
sub
scas
cmp
add
sbb
or
rorb
lds
mov
pop
sub
sub
add
mul
out
fcmovnu
out
insl
cmp
mov
aad
stos
insl
ja
sti
mov
mov
push
add
add
sbb
ss
es
ss
stc
ss
jb
cmp
xchg
jp
inc
add
add
jnp
mov
adc
adc
jb
fdivl
inc
loop
jg
aas
and
movsb
jle
fisubrl
popa
xor
mov
out
sub
and
clc
inc
mov
rclb
adc
add
add
call
mov
jp
xchg
mov
cmp
mov
inc
je
jae
sbb
add
mov
xchg
or
ret
ljmp
les
sti
daa
mov
in
xor
popf
cmp
imul
xor
mov
jp
push
mov
dec
inc
sbb
or
mov
out
add
add
xor
stos
pop
jne
xchg
mov
pop
mov
ds
in
jg
cmc
adc
cmc
add
add
mov
hlt
mov
ljmp
fistpll
out
add
jmp
inc
imul
add
push
addr16
fdivl
fbld
aad
repz
in
repnz
add
shr
insl
dec
xor
aad
add
add
mov
test
xor
dec
jae
add
cmpsl
jne
pop
fucomip
jb
add
add
mov
fldl2t
stos
je
adc
rcr
je
lods
in
out
aam
jmp
jne
movsl
arpl
add
jne
loope
outsb
push
mov
out
xor
into
lock
arpl
adc
inc
das
add
add
add
xchg
out
mov
aam
loope
push
in
inc
sub
lret
int
divb
add
add
repz
xchg
repnz
cmc
xor
jne
fisttpll
pushf
aad
push
xchg
imul
add
add
outsl
rcrb
push
cmp
sub
repnz
xchg
fcmovne
into
popf
mov
or
jmp
or
add
add
adc
leave
repnz
hlt
xchg
jecxz
jmp
sub
aas
jns
jbe
es
stos
xor
add
add
add
mov
clc
dec
mul
mov
push
inc
lahf
fisubrs
cmp
xorb
inc
adc
add
pop
sti
bound
push
rclb
push
ljmp
outsl
jbe
mov
es
sti
add
add
push
sbb
add
es
cli
sbb
emms
jp
sbb
es
adc
or
testb
faddl
add
add
mov
pop
add
pop
mov
mov
push
outsl
es
es
ret
negl
js
mov
push
ret
mov
add
add
jmp
mov
pop
clc
mov
insl
mov
jmp
es
mov
add
add
adc
add
xorb
dec
jmp
pusha
adc
pop
mov
mov
push
rcrl
mov
mov
add
add
mov
push
push
dec
lret
sbb
rcll
sti
ret
and
cld
sbb
inc
sbb
add
add
test
or
xor
push
push
imul
push
pop
aas
repnz
outsl
xlat
test
mov
pushf
mov
add
add
mov
clc
and
subb
pop
negb
ret
dec
lahf
hlt
aaa
jge
xchg
cmp
add
add
test
xchg
and
or
cmpsl
lea
jns
xor
mov
into
icebp
xor
inc
cmp
add
or
rol
cmp
pop
arpl
jge
outsb
mov
add
sti
js
push
add
add
xor
testb
inc
pushf
dec
es
fdiv
xlat
leave
mov
test
cld
enter
add
call
mov
dec
add
daa
popf
out
sbb
mov
mov
aad
and
fs
cmp
add
add
sbb
clc
push
cs
mov
dec
sub
push
jmp
mov
insl
aad
jne
aaa
jne
or
fistps
roll
ljmp
jne
int
mov
fs
add
dec
ja
add
add
out
sub
ret
pop
cmpsl
push
and
jmp
popf
mov
adc
adc
add
add
aad
adc
mov
dec
mov
cmp
mov
das
push
pop
push
out
xchg
sbb
add
add
testl
cmpsb
sub
sbb
and
lahf
repz
dec
js
in
lds
add
add
jne
inc
lahf
cmp
in
mov
inc
sub
cmpsb
cs
test
mov
lods
xor
add
add
cmc
pop
xchg
mov
data16
inc
jnp
fwait
xorl
mov
dec
push
adc
roll
add
add
push
push
mov
daa
mov
jl
adc
xchg
mov
jp
scas
add
add
or
loope
imul
out
out
cmp
dec
cmp
mov
fcompl
add
add
push
fstpt
pop
inc
and
ds
out
dec
cmpl
stos
and
ss
and
add
add
insb
test
je
and
arpl
mov
fwait
mov
addr16
cmpsl
xchg
mov
add
add
in
pop
out
mov
dec
jmp
imul
pop
mov
mov
xor
inc
int3
inc
cmp
in
aas
mov
sub
sarl
lock
adc
into
insb
sahf
add
add
pop
xor
add
stc
sub
je
jbe
inc
mov
inc
lea
stos
aam
xchg
or
add
add
sub
es
add
sub
sub
cmpsl
xchg
shll
jmp
push
sbb
or
adc
outsl
dec
mov
pushf
fimull
jno
ret
pop
pop
aas
iret
xchg
sar
pop
dec
vcvtpd2psy
test
sbb
add
add
sub
lret
xor
push
or
or
xor
push
arpl
rolb
add
add
int
dec
mov
aas
out
cmpsb
inc
jns
in
sub
xor
ret
rcrl
lods
idivl
xchg
mov
ror
cmpsl
dec
push
loop
js
or
call
loope
xchg
out
dec
fcoml
add
add
test
cmp
adc
pop
cs
mov
es
dec
lret
and
mov
add
leave
insb
stc
or
scas
aaa
pushf
mov
test
mov
sarl
lahf
add
add
add
inc
xor
push
xchg
adc
fcmovnu
stos
into
fisttpl
out
fwait
call
sbb
pop
add
add
pop
adc
and
mov
mov
mov
or
cld
sub
pop
arpl
cmp
adc
add
iret
or
lret
arpl
mov
loope
lret
sahf
outsl
add
hlt
pop
int
cmpsb
add
fiaddl
add
push
mov
iret
ja
add
fwait
imul
pop
ret
push
fnsave
sub
add
add
mov
lods
mov
shlb
loop
and
test
inc
dec
test
add
add
fs
stos
loop
pusha
dec
mov
and
out
or
aas
push
rol
jo
dec
jb
test
add
mov
mov
mov
repnz
mov
aaa
iret
rorl
xlat
jae
add
add
xchg
ficoml
xor
sub
sbb
xchg
gs
loopne
mov
cwtl
cmc
mov
daa
bound
call
stc
mov
xor
sub
jbe
movsl
mov
or
data16
repz
fldpi
add
add
push
and
jbe
shll
outsl
rcl
insb
and
adc
int
sub
cmpsl
cmp
add
add
outsl
sti
stos
dec
mov
dec
test
mov
sbb
rorl
sbb
xlat
outsb
add
add
push
inc
sub
cmpsb
and
sbb
xchg
push
xor
cmp
scas
fcmovnbe
sbb
add
add
jle
push
push
dec
clc
lea
dec
popa
stos
mov
xor
test
mulb
add
add
insb
shlb
or
mov
fs
ja
push
and
fisubrl
jle
ss
stos
stc
add
add
rorl
add
movsl
call
mov
iret
sti
sti
pop
ss
add
add
mov
sub
ret
loop
mov
insl
cmp
test
icebp
jnp
or
mov
dec
or
or
xchg
add
jbe
jne
jns
out
dec
mov
mov
pop
or
movsl
cmp
movsb
out
push
or
add
add
fsubrl
jmp
cltd
lods
xchg
jne
xor
shll
js
or
mov
add
add
add
insb
xlat
call
imulb
scas
insl
and
jo
aad
xor
add
add
pop
xor
cmp
fstpl
fsub
test
sub
test
xor
mov
add
add
ds
shl
sub
xchg
mov
sahf
mov
jmp
fwait
mov
rolb
add
add
fs
fsubs
je
mov
sti
cmp
inc
xor
mov
mov
add
fwait
jl
xor
jae
adc
outsl
in
movsb
xchg
nop
and
mov
pop
add
add
cmp
pop
enter
mov
adc
in
popa
mov
cmpsl
loopne
ljmp
dec
ja
pop
subl
or
stc
in
ljmp
lods
loopne
out
push
xor
add
jge
mov
les
pop
mul
hlt
shll
cwtl
xor
pop
dec
push
lods
mov
add
add
clc
loop
xlat
bound
nop
lret
push
xchg
push
jne
or
mov
nop
mov
inc
add
add
or
insb
popa
mov
mov
push
ret
pusha
dec
repz
and
repnz
and
out
sbb
add
add
mov
aam
mov
out
dec
in
sti
repnz
mov
and
shl
mov
add
add
and
lret
jae
sub
ret
lcall
mov
pop
les
pop
jne
add
add
mov
or
inc
test
fbstp
jne
rol
mov
rcr
jo
add
add
push
nop
in
pop
or
push
pop
shrl
ja
ret
and
sub
or
iret
fimull
pop
add
add
jmp
push
test
xchg
xchg
xchg
shlb
jecxz
call
shr
js
ret
add
add
jnp
xchg
xor
loop
mov
rcl
jecxz
sbb
fwait
call
push
mov
push
add
add
lds
subb
icebp
lds
pusha
test
in
shl
lock
jno
loopne
or
inc
pop
push
in
in
pop
jno
add
add
add
rorl
mov
push
dec
fucomip
xor
insl
rcll
leave
sbb
jno
add
add
adc
jae
mov
push
mov
mov
xchg
gs
jne
aam
int
mov
add
inc
insl
fsts
mov
insb
shrl
int
dec
out
lods
fbld
roll
add
cmp
xor
cmc
mov
in
aad
sub
xor
push
aad
pop
in
push
out
add
add
push
int3
inc
test
mov
fcmovnb
in
inc
ret
fs
pusha
cmpsb
jb
in
mov
es
fs
add
add
repz
fs
adc
out
adc
mov
insb
adc
fldl2t
je
add
add
repz
dec
jecxz
sbb
test
or
xor
test
jae
aam
add
add
test
push
lcall
xor
dec
in
arpl
mov
test
mov
in
add
add
mov
jecxz
ret
cmp
inc
out
jae
mov
mov
mov
mov
lret
add
lds
lds
outsl
lock
test
call
lods
mov
pop
mov
push
add
add
cmp
shll
out
and
dec
or
sbb
push
inc
mov
sub
add
add
mov
popf
test
and
fldcw
and
push
jne
add
add
fcomip
je
mov
xor
hlt
in
pop
sub
mov
jmp
out
mov
lea
add
jae
xor
test
cmp
rcrb
imul
std
push
test
fistpl
add
add
fst
pop
add
lods
sbb
cwtl
in
out
jb
aam
dec
lds
enter
add
add
out
iret
in
adc
add
sub
popa
and
cmp
push
out
or
adc
lds
ja
mov
add
add
sub
out
push
mov
fucomi
jae
push
xchg
mov
fs
mov
push
xchg
add
add
cmc
cmp
inc
lock
ljmp
insl
xor
iret
mov
outsb
ret
mov
push
xchg
dec
out
outsl
xor
add
add
popf
xor
mov
mov
cmpsb
icebp
shr
mov
mov
in
mov
push
imul
add
mov
sbb
into
andb
xor
rcr
pop
mov
roll
push
mov
add
add
mov
mov
mov
xchg
pop
or
icebp
add
jecxz
mov
repnz
add
add
fs
jg
ret
mov
xor
mov
xor
jno
lds
add
add
repz
dec
jne
icebp
and
xchg
and
int
in
and
jae
aad
lret
iret
push
imul
popl
add
add
hlt
cmc
scas
inc
pusha
jne
jnp
or
fs
sti
imul
arpl
push
jmp
test
add
add
push
cmp
mov
mov
push
movsl
and
lock
jne
into
aad
lock
insl
xor
add
add
xchg
pop
movsl
cmp
outsb
jmp
ret
test
hlt
imul
cmp
add
add
adc
outsb
jae
xor
xchg
out
mov
mov
xchg
leave
repnz
xchg
pushf
flds
add
add
icebp
adc
icebp
pusha
pop
pop
sbb
lods
lret
loop
sbb
stos
jnp
cmc
lret
outsb
dec
ja
add
add
push
xchg
in
lock
mov
out
adc
icebp
mov
into
cmc
in
hlt
pop
push
loop
add
add
pop
repnz
jb
bnd
lea
pop
outsb
xchg
push
xchg
lea
dec
test
loopne
push
add
add
push
jmp
xchg
sti
mov
fcoml
fidivl
mov
push
enter
lret
xor
add
add
and
xor
gs
mov
je
jne
shl
dec
repnz
add
add
xchg
xchg
xchg
loop
into
cltd
cmc
int3
and
out
xchg
lret
pop
mov
add
add
lods
jmp
xor
fsubs
mov
xlat
push
loop
fstl
loop
or
mov
add
lahf
jne
dec
fwait
or
scas
xchg
insl
and
xchg
fwait
lret
xlat
loope
push
test
bound
enter
enter
enter
enter
enter
enter
enter
add
add
or
in
or
stc
enter
aad
scas
xor
clc
loopne
aas
fcomi
add
xchg
es
add
add
jmp
push
rcll
cmp
repnz
push
sub
mov
cs
lcall
add
lcall
dec
je
dec
xor
or
outsl
dec
xchg
scas
sbb
add
add
ret
rol
movsl
aad
pop
sbb
jg
dec
fsubs
xor
push
mov
lods
mov
movsb
or
add
mov
pop
fcmovu
dec
shrl
mov
inc
push
scas
jecxz
cmp
dec
arpl
sbb
add
add
sub
ds
or
in
lock
inc
call
fwait
jb
mov
dec
mov
xor
add
add
push
mov
aad
jecxz
mov
push
and
adc
jno,pt
or
ljmp
call
sbb
inc
push
mov
add
dec
lds
aad
je
jmp
add
add
xor
or
aas
ss
dec
mov
sti
popf
test
in
adcl
sbb
sbb
cmc
ret
cmc
jmp
push
shll
cmc
out
jge
xor
cmc
add
add
fcoml
in
jne
jge
xor
cmc
ret
cmc
out
jge
mov
es
cmc
xchg
xor
add
add
mov
cmc
mov
cmc
fcoml
fdiv
repnz
mov
cmc
mov
cmc
fldl
in
add
add
cmc
fcoml
out
jge
xor
cmc
fcoml
icebp
jne
jge
push
repnz
cmc
push
cmc
fcoml
mov
add
mov
xor
in
cmc
fcoml
jmp
repnz
cmc
adc
cmc
hlt
add
add
aad
ret
cmc
out
jge
push
int
fcoml
lret
push
loope
fcoml
mov
add
mov
in
cmc
fcoml
mov
cmc
cmc
es
cmc
les
shlb
faddl
or
add
out
cmc
out
jge
jp
cmc
fcoml
shll
jge
jp
out
add
out
call
jae
dec
cmc
xorb
fwait
leave
iret
push
aad
mov
adc
sbb
mov
add
out
fldcw
out
sbb
mov
sbb
dec
mov
ds
sub
iret
add
add
sbb
fsts
out
fwait
test
aad
push
out
fwait
cmp
mov
or
daa
add
add
fists
ja
fsts
xchg
jl
mov
insl
out
mov
add
add
pop
lret
push
repz
lock
fmuls
sub
inc
mov
add
mov
test
pop
dec
in
aas
or
mov
cmc
xorb
lcall
fiaddl
add
add
test
call
cmc
adc
lock
iret
and
add
add
or
repnz
scas
jne
adc
repnz
inc
iret
sbb
jne
xor
add
add
aad
inc
cmp
shr
jne
inc
xor
in
out
inc
mov
add
add
test
or
out
sbb
push
hlt
inc
xchg
out
mov
xchg
add
add
push
mov
inc
xor
repz
mov
pop
xchg
or
pop
loop,pn
adc
mov
mov
insl
out
fwait
sbb
sbb
cmc
mov
lea
dec
cmc
push
add
add
iret
and
pop
inc
jb
sbb
lcall
repnz
mov
data16
jae
lahf
pop
repnz
add
add
mov
xchg
mov
lods
mov
mov
pop
add
aas
add
sub
add
add
pop
and
sbb
aas
icebp
lock
icebp
repnz
jne
and
jmp
icebp
test
xor
scas
add
add
jb
dec
out
fwait
or
out
sbb
cmpb
scas
xlat
inc
lock
xor
lcall
add
add
mov
fnstsw
mov
out
shr
fldl
out
out
pop
aad
dec
xor
test
mov
movsl
fistl
adc
rolb
mov
or
fwait
adc
xchg
add
add
loop
xchg
mov
repnz
pop
iret
and
pop
gs
fwait
pop
mov
and
inc
mov
sub
add
add
scas
out
int3
mov
repnz
loope
lea
xor
popa
pop
cmpsl
jb
push
outsb
add
add
jp
cltd
sahf
inc
cmp
xchg
jge
xchg
outsb
pop
xlat
or
ret
xchg
pop
push
outsl
ret
cmp
mov
add
add
and
pop
dec
mov
bound
ds
push
std
mov
clc
cmp
push
adc
call
xchg
cltd
add
add
mov
xchg
and
push
in
adc
clc
mov
mov
es
add
fiadds
add
add
mov
mov
inc
inc
jecxz
mov
jo
add
lds
add
add
into
or
pop
stos
rol
mov
dec
movsl
pop
dec
popa
stos
movsl
pop
lea
xchg
lcall
add
add
arpl
xchg
xchg
mov
lcall
arpl
mov
jae
push
cmp
push
movsl
mov
add
or
push
lret
int
out
push
aad
sub
cmc
sarl
push
addr16
hlt
jl
add
in
enter
add
cli
subl
adc
add
arpl
cmp
mov
push
push
loop
and
add
sahf
mov
lahf
dec
js
or
rolb
and
rorb
add
add
fildl
in
shl
xor
sahf
xor
xchg
scas
jae
arpl
mov
jecxz
cmp
rorl
add
add
jns
js
mov
es
es
insb
mov
jmp
mov
jmp
push
add
add
cmp
sub
cld
sub
adc
std
mov
jns
sbb
xchg
es
faddl
add
shlb
ds
pcmpgtw
or
xor
add
inc
es
mov
add
add
inc
cli
test
mov
jl
push
jnp
imul
push
fdivr
xor
pop
pop
testb
add
mov
inc
mov
cmp
xchg
out
inc
es
lahf
jbe
es
add
jbe
es
xor
add
add
add
es
push
jbe
xor
repz
and
mov
cs
ficomps
add
repnz
out
cmp
out
enter
lret
cmp
dec
push
cwtl
bound
inc
lret
sub
xor
jne
mov
add
add
imul
add
test
call
mov
pop
mov
stc
fidivl
cmp
mov
cmpsl
mov
push
ss
push
xor
loop
fwait
inc
in
add
push
dec
xchg
add
add
pop
push
xchg
pop
les
xchg
iret
xchg
push
cmp
and
insb
repnz
inc
inc
gs
jge
sub
add
add
in
xor
test
dec
testl
cmp
mov
inc
in
les
mov
lret
add
add
mov
push
jbe
stos
je
imul
push
jo
mov
xor
push
inc
add
add
fildll
mov
pop
xchg
loop
enter
and
cltd
aad
mov
out
in
gs
add
add
mov
xlat
out
lds
mov
scas
sub
outsb
outsb
int3
adc
repnz
sbb
add
add
aas
std
add
push
inc
in
aam
fwait
in
push
cmp
in
sbb
sbb
xor
rorb
add
jmp
adc
and
sbb
mov
lcall
out
add
add
fistpl
inc
xchg
jl
lcall
adc
mov
call
add
cmpsl
ja
xchg
aad
gs
int3
or
jg
push
imul
add
iret
ljmp
add
push
out
and
lea
loopne
test
lcall
add
pop
addl
add
add
rcl
sbb
lahf
mov
loop
ret
xor
add
add
stc
leave
in
mov
pop
sbb
mov
popa
sub
aaa
xchg
xlat
lods
jecxz
or
add
add
data16
insl
cmp
inc
leave
testb
add
xor
adc
ss
int
popl
add
add
sbb
pushf
bnd
sbb
mov
aaa
movsb
push
add
jge
mov
rorb
into
push
add
add
push
int
mov
hlt
sbb
daa
inc
mov
ret
dec
cltd
xchg
out
sub
add
add
adc
pop
js
popl
stos
mov
push
jo
notb
xchg
ljmp
pop
fiaddl
lret
add
add
push
test
les
stos
dec
adc
xchg
mov
call
lea
dec
add
add
outsb
leave
imul
les
jp
ror
adc
xchg
subb
dec
pusha
add
add
mov
bnd
dec
adc
xchg
adc
or
bound
adc
stc
lock
add
add
xor
or
lcall
mov
loope
les
add
mov
in
mov
notl
ja
mov
jge
xor
xchg
mov
add
add
pop
insl
sahf
lods
dec
lahf
mov
mov
mov
cmp
int3
aaa
xor
pusha
filds
add
add
xor
mov
sbb
gs
addb
xchg
or
push
rolb
add
add
movsb
jmp
test
sbb
jb
xchg
cmpsl
jns
or
sub
xlat
add
add
std
mov
add
adc
mov
and
ficomps
shrl
repz
in
add
add
lock
cs
cmpsb
mov
cmp
mov
test
ds
popa
add
hlt
add
add
adc
jns
sbb
cmp
cmpl
push
cs
mov
mov
mov
add
add
sahf
push
mov
mov
in
xor
sub
or
jbe
inc
cs
mov
add
add
xor
dec
inc
add
inc
sbbl
imul
cs
or
add
add
sbb
jb
sbb
mov
test
scas
fnstsw
mov
add
clc
or
adcl
add
fs
xchg
mov
mov
cmp
fwait
pop
xchg
divb
xlat
insb
aad
cmpsl
and
jge
jmp
jecxz
clc
aam
leave
and
std
aaa
shr
add
add
in
stos
xchg
leave
cld
sbb
inc
jns
xchg
mov
jle
jecxz
pusha
pop
and
stos
sbb
js
add
add
sarb
repz
xor
pop
jecxz
sub
es
aam
xchg
adc
add
jle
push
add
add
adc
imul
out
lea
sahf
sub
ss
sti
add
add
or
ficoms
ss
sub
mov
pushf
mov
sbb
lret
stc
cs
int
and
add
add
inc
mov
fnstsw
stos
cld
shl
add
mov
push
or
pop
push
xor
add
fildl
in
fstl
loopne
frstor
mov
push
adc
push
add
add
fisttps
jl
xor
out
sbb
dec
incb
mov
repnz
add
jne
adc
xor
adc
scas
repnz
orl
aaa
pop
stos
dec
mov
jae
add
add
mov
fs
sub
or
icebp
ds
jne
adc
cmp
add
add
or
xchg
sub
pushf
add
loop
lret
aaa
pop
jns
ja
idivl
es
xchg
jp
adc
add
add
jg
stos
je
and
pop
fmul
pop
xorl
sub
xor
mov
xchg
and
add
add
mov
xchg
push
scas
clc
pop
movsb
ret
xlat
or
in
dec
fs
add
add
xchg
push
or
push
dec
lahf
hlt
pop
add
xchg
mov
leave
pop
pop
push
add
add
clc
outsl
dec
in
xchg
sbb
mov
fs
dec
sti
mov
fs
mov
add
add
addr16
add
xchg
cmp
push
ss
add
mov
mov
push
repz
incl
add
add
mov
mov
aam
aas
js
xorb
cmpsl
pop
enter
pop
pop
movsb
xchg
add
add
in
inc
sub
mov
sarb
clc
fistl
pusha
int
shlb
mov
add
add
jae
sub
sbbb
sub
add
xchg
shl
mov
xchg
popa
lcall
nop
inc
or
add
add
repnz
hlt
xor
pop
push
repz
dec
lock
cmpb
mov
in
clc
push
out
sbb
add
add
xor
inc
out
iret
pop
dec
cmp
pop
icebp
pop
cmpsl
push
daa
bound
push
dec
repnz
mov
add
add
sbb
into
jg
fwait
imul
xorl
insb
sbb
pop
xor
gs
andb
cmpsb
inc
add
add
add
inc
jb
mov
sub
cltd
lea
aam
xor
jg
jae
push
fdivs
adc
xchg
mov
das
lcall
cmp
nop
inc
rorb
and
jp
les
jl
inc
faddl
add
ror
addr16
into
popa
xor
cmp
add
sbb
jp
sub
shll
cmpsl
lahf
sete
add
lcall
into
daa
xor
jnp
or
fmull
push
mov
test
add
add
fmuls
cld
xchg
adc
orl
cmp
inc
sub
cmp
add
add
sbb
loop
xor
popa
inc
jo
loopne
aaa
ss
aad
loopne
popf
mov
add
add
in
scas
mov
xor
repz
loopne
add
bound
add
add
scas
mov
push
xchg
rcll
test
xor
and
push
or
add
add
inc
or
jle
cmp
fstps
int
push
jg
adc
nop
lods
inc
cmp
fidivrl
jns
add
add
cltd
xchg
mov
lret
in
popl
push
dec
stos
sbbl
bound
out
sub
add
jge
ss
leave
or
shlb
push
dec
imul
cmp
push
and
xchg
adc
add
add
mov
xlat
lret
loop
loope
mov
xorl
mov
xlat
or
inc
push
add
add
add
into
sarl
xor
sub
xchg
insb
mov
leave
lret
pusha
cmp
stos
enter
add
xchg
push
xchg
jl
add
sbb
es
andl
inc
or
cli
scas
cwtl
adc
ja
mov
add
loopne
mov
lods
jmp
movsb
stos
addr16
fadds
push
jle
js
outsb
scas
fidivl
testl
xor
push
daa
cmp
xlat
mov
loope
push
lds
jbe
out
jmp
mulb
add
xlat
push
or
and
and
xchg
icebp
out
xor
mov
mov
sbb
add
aad
mov
fwait
outsb
jne
popf
stos
cmpl
push
and
pop
ljmp
or
add
add
push
pop
jle
pop
inc
xchg
xchg
push
cmp
adc
shr
cltd
cmp
xor
pop
inc
fstl
add
add
popa
xchg
inc
subb
aad
loopne
orl
in
adc
add
add
cmp
or
sahf
mov
iret
sbb
loop
mov
aas
push
fiadds
add
add
les
movsl
mov
inc
aad
mov
mov
dec
out
xchg
outsl
fcmovnbe
mov
add
add
out
arpl
xchg
jno
addr16
jb
mov
add
je
xchg
addb
add
lods
push
out
loope
xchg
cmc
mov
lods
mov
push
outsl
imul
sbb
add
add
fsubl
in
push
inc
lds
jns
sbb
xchg
xchg
or
inc
mov
add
cmpsl
aaa
pop
and
into
inc
mov
xchg
loop,pt
push
push
insb
sbb
xorb
add
add
inc
out
cmpsl
or
insb
sbb
mov
stos
outsb
mov
jg
cltd
xchg
out
mov
es
add
add
pusha
into
xorb
ss
sbb
jo
mov
adc
scas
pop
sahf
jmp
insl
xlat
mov
xor
jmp
leave
mov
int3
jb
fwait
push
mov
out
xor
inc
scas
int
pop
fwait
adc
xchg
add
arpl
xor
inc
add
jb
stos
aaa
xor
out
push
insl
and
lods
ret
add
add
push
aam
add
pop
pop
lock
ret
xchg
cmp
sbb
mov
push
test
and
jle
add
add
rcl
sub
into
es
jbe
shr
jb
notb
and
add
sub
fcoml
ljmp
or
pushf
daa
pop
in
ljmp
push
dec
in
cmp
add
xchg
inc
test
mov
daa
inc
push
nop
cwtl
cs
inc
aad
pushf
sti
es
es
rorb
add
and
test
sub
and
xchg
inc
mov
fucomip
jae
mov
cmp
aad
add
add
out
aaa
cmp
cmc
jg
mov
mov
push
cli
lods
mov
lret
or
add
add
add
push
or
movsl
jne
jecxz
mov
xchg
mov
gs
sub
mov
jae
mov
add
add
outsb
inc
out
pop
fiaddl
iret
sbb
or
dec
inc
adc
repz
cld
add
imulb
add
mov
mov
jne
push
cmp
shll
mov
out
int3
out
add
add
stos
out
in
shrb
ljmp
xchg
mov
imul
scas
test
cli
loopne
add
add
in
int
dec
push
mov
mov
insl
or
jp
push
push
add
add
lret
dec
mov
fisubs
lds
cs
jbe
popf
fwait
popf
fisttpll
pushf
pushf
dec
in
cltd
or
add
add
adc
shll
dec
mov
dec
pop
push
rorb
jle
add
add
loope
hlt
sbb
pop
cmp
jecxz
xor
stc
mov
fdivrl
test
push
leave
or
add
add
test
ljmp
repnz
pop
cmp
xlat
inc
outsb
xor
jns
adc
add
add
pop
jae
add
xorl
stos
xor
stos
repz
mov
add
add
jne
in
cs
pop
daa
xchg
lret
fs
cmp
jae
movsl
add
dec
iret
clc
insb
in
int
add
add
shll
push
stc
jmp
cmc
movsb
jnp
mov
mov
repz
xchg
push
aam
add
add
jb
lds
xchg
xchg
sbb
xor
les
mov
out
add
icebp
mov
add
add
insb
push
sbb
dec
jo
mov
sbb
insl
xchg
in
push
sub
cmp
mov
mov
aas
add
add
jg
adc
jb
lods
ds
xchg
jne
xchg
sti
jl
inc
aaa
mulb
mov
add
add
adc
lds
mov
fbstp
out
dec
adc
mov
fsubr
inc
dec
ds
loopne
jno
jmp
push
orl
pop
adc
popa
subb
repz
pop
stc
add
leave
cs
mov
mov
cmp
mov
rcll
xor
and
fincstp
or
sbb
pop
add
add
addb
call
cmc
sbb
dec
ret
in
push
and
dec
jge
sbbb
lret
add
add
push
cmp
loopne
push
jecxz
into
xorb
out
cmp
lods
push
mov
xor
jne
add
add
xchg
ret
adc
and
pushf
popfw
std
or
lea
outsl
test
add
or
xchg
shlb
aam
ss
mov
inc
loopne
int
fs
adc
mov
add
add
outsl
mov
cltd
add
cwtl
jmp
xor
jle
mov
mov
dec
cmp
add
add
adc
jmp
mov
movsb
add
test
mov
sbb
and
add
add
mov
out
sbb
push
out
test
mov
int
sub
out
jl
das
mov
add
add
jecxz
dec
push
mov
pop
fcoml
imul
cs
jb
fstpt
mov
add
add
push
pop
push
jo
jns
or
or
xchg
sti
sub
scas
xorl
push
icebp
xchg
testl
push
into
mov
lods
fxch
ret
pop
scas
add
jbe
sub
clc
ja
ja
add
add
cmpsb
jmp
pop
call
pop
movsb
and
ja
add
mov
mov
and
add
add
mov
data16
sahf
jge
push
cs
in
imul
loopne
adcb
shlb
add
jmp
xor
mov
mov
daa
ja
push
jg
inc
sahf
add
fcoml
xor
add
add
cmp
and
push
dec
sahf
sar
dec
adc
int3
sahf
in
mov
cli
mov
pusha
add
add
inc
pop
outsb
pop
std
push
outsb
push
xchg
adcl
push
into
lods
aad
xor
or
add
lret
or
aad
cltd
outsl
cmc
ret
lahf
cmpsb
addb
test
pop
pop
xchg
lret
dec
fcompl
stos
cmp
arpl
dec
mov
cmp
push
dec
out
jl
stos
mov
add
add
mov
pop
pop
sub
sbb
and
xchg
aam
pushf
sub
test
movsb
sbb
add
add
sbb
jae
shrb
pushf
scas
fs
sub
dec
stc
inc
pop
xor
inc
jg
dec
sldt
add
xchg
mov
jns
add
std
pop
js
sbb
sbb
ret
inc
jecxz
push
or
push
pop
in
jb
pop
add
add
outsl
ficompl
push
adc
jmp
cltd
orb
jg
xor
mov
movsb
aaa
sbb
jno
add
add
pushl
daa
ficompl
adc
inc
xor
out
mov
xchg
cmpsl
push
fstps
std
mov
add
add
lret
mov
dec
push
mov
pop
mov
fs
iret
add
adc
add
adc
shl
adc
stos
arpl
nop
cld
and
aas
hlt
xchg
dec
jecxz
cmpsl
dec
add
push
jno
outsb
xor
inc
sbb
lods
mov
mov
andl
stc
pop
cmpsb
jae
jb
enter
add
add
pop
cld
cmp
and
add
and
and
mov
inc
inc
push
inc
add
add
stos
push
movb
inc
push
daa
scas
fildl
xor
outsb
fistpl
and
mov
addr16
xchg
outsl
add
add
ret
es
xchg
jne
jno
jg
stc
xchg
add
dec
dec
mov
dec
jnp
or
add
add
add
mov
notb
mov
xor
xchg
mov
push
jg
shlb
add
mov
add
add
mov
push
push
push
mov
fimuls
or
cli
fwait
pop
in
in
sbb
add
add
and
jp
aaa
daa
sbb
dec
xor
int
pop
inc
pop
xchg
push
dec
and
xor
les
out
add
add
lret
dec
adc
test
aad
leave
gs
hlt
and
sar
out
sub
mov
mov
pusha
add
add
mov
clc
add
push
das
mov
jl
push
ds
dec
pop
xchg
fwait
je
mov
mov
add
sub
insl
mov
xchg
cmp
add
in
stc
jne
pop
or
or
mov
add
add
pop
inc
pop
mov
adc
cs
mov
jbe
mov
xchg
dec
adc
out
add
add
icebp
je
mov
popf
je
dec
and
je
bound
dec
jp
addr16
add
add
sbb
or
lret
adc
lods
lods
out
mov
push
inc
adc
push
mov
add
add
adc
loop
lds
fiaddl
jae
dec
and
pop
jmp
sbb
dec
sbb
cli
pop
add
sub
add
add
test
les
and
call
test
dec
cltd
adc
popa
ret
and
ret
add
or
outsl
addr16
mov
pop
mov
add
mov
fsubrs
nop
add
add
scas
filds
ret
bound
andl
mov
pop
adc
fsubp
sbb
cmpsb
cmpsl
add
add
add
pop
xlat
push
in
mov
fistpll
nop
mov
hlt
hlt
adc
jle
inc
cmpb
add
add
push
jp
sbb
outsb
sbb
mov
cltd
bound
mov
push
sbb
add
add
ja
push
fxch
cwtl
popf
mov
iret
fiadds
push
xor
scas
inc
es
sbb
jg
add
add
sbb
bnd
jg
pusha
sub
jns
scas
sub
arpl
sahf
cwtl
pop
imul
xchg
sub
mov
push
adc
sub
mov
call
mov
xchg
add
add
cltd
repz
xchg
pop
inc
jno
movl
push
push
insl
fwait
aad
mov
aaa
jns
mov
daa
mov
outsl
flds
repnz
push
jno
cltd
pop
pop
movd
add
add
xchg
cmp
xor
aad
test
push
jnp
cmp
js
test
jle
fcomp
add
add
daa
adc
mov
outsl
fidivs
jno
scas
jl
cmp
aaa
lods
inc
xorb
mov
dec
add
add
dec
and
hlt
adc
int
pop
jno
test
lods
int
movsl
add
iret
adc
add
mov
dec
cmc
gs
mov
movsb
inc
adc
lods
clc
pop
add
addb
fcoms
add
loope
jge
clc
jno
hlt
mov
xlat
add
adc
pushl
rorl
xchg
les
es
add
mulb
jno
sti
imul
imul
data16
sub
cld
je
add
add
jbe
cmp
loope
inc
xchg
xor
dec
mov
cmp
cmp
xchg
inc
add
add
cmp
loopne
push
std
fwait
cmp
xchg
push
fmull
xor
lret
add
das
test
shlb
dec
mov
and
xchg
fdivr
sub
dec
and
imul
add
dec
xchg
insl
xchg
pop
mov
xor
ljmp
shl
rcll
pop
repnz
cmpsl
or
mov
push
scas
out
enter
mov
arpl
jge
adc
scas
mov
push
sbb
rcrb
add
add
dec
inc
out
mov
je
out
add
decl
inc
bound
mov
std
xor
add
add
mov
stc
out
cmp
lock
outsb
aam
adc
sbb
add
add
xlat
sbb
popf
imul
call
mov
sub
add
add
push
cmpsb
pop
push
jno
cmc
xchg
adc
divl
xchg
add
add
cmc
push
dec
adc
insl
or
sub
jbe
stc
out
mov
lahf
lret
adc
mov
add
jle
or
xor
scas
loope
lcall
ds
push
or
add
add
push
dec
sub
insl
push
add
rclb
adc
lret
or
popf
int3
lcall
add
cmp
mov
xchg
push
fmuls
bound
mov
jbe
inc
mov
add
add
adcb
sbb
sbb
xchg
inc
or
inc
dec
fildll
xchg
shr
pop
incb
add
add
bound
iret
subl
shrb
pop
and
mov
stos
xchg
ds
add
add
add
xchg
xchg
pavgb
cmp
movsl
or
sbb
xchg
ljmp
lods
mov
hlt
adc
and
shll
in
in
movsb
divl
sbb
dec
aam
adc
add
add
and
sbb
test
jns
jae
outsb
das
dec
mov
pusha
test
insl
pop
pop
cmpsb
add
add
cmpsl
popa
test
lods
or
in
and
dec
sub
mov
jg
add
sbb
inc
adc
or
add
stos
and
ret
mov
jecxz
adc
add
shl
sub
mov
add
mov
in
add
add
add
sbb
and
jno
sbb
fimuls
shl
mov
and
cmp
inc
ret
repz
add
loopne
and
and
test
scas
hlt
fists
push
insl
and
xor
add
xchg
jo
xchg
and
xlat
and
cmp
xchg
or
iret
mov
clc
inc
cmp
add
add
filds
cmp
fmuls
call
imul
add
add
repz
ss
or
mov
pop
adc
xor
out
imul
scas
jns
or
repnz
pusha
fimuls
dec
or
enter
fistl
sahf
push
push
add
add
and
cmp
incb
hlt
push
sbb
stos
repz
xlat
in
push
or
je
cld
inc
cmpsl
mov
mov
loop
dec
xchg
add
inc
pop
push
out
dec
loop
stos
add
popl
add
add
push
in
test
mov
jb
mov
pop
mov
add
add
shll
je
lret
mov
imul
out
mov
in
sahf
add
add
adc
xor
mov
mov
mov
sub
xlat
jmp
push
add
add
in
xchg
mov
add
sahf
in
jecxz
les
cmp
jge
stos
pushf
rorl
xor
add
add
cltd
das
dec
dec
jp
jbe
pop
popa
loope
mov
mov
clc
loopne
hlt
add
push
add
and
shrb
mov
aad
inc
cltd
mov
cmpsl
jno
cmp
xchg
aas
dec
pop
adc
add
add
negb
loop
inc
rorb
aam
pop
mov
cld
fucomp
dec
lret
insl
sub
inc
jbe
add
add
cmp
shrl
ret
loop
mov
test
adc
imul
andb
loope
test
movsb
lret
inc
add
add
jge
lods
pop
fptan
sbb
cmpsb
pop
lock
push
xor
je
ret
imul
adc
aam
or
add
add
adc
push
clc
and
dec
or
popf
mov
imul
mov
daa
add
add
rcrl
lock
jle
xor
push
mov
sub
and
cwtl
or
mov
jmp
and
add
add
ret
dec
loop
jne
lods
movsl
pop
sbb
mov
mov
cwtl
inc
ret
mov
xor
sub
add
pusha
movsb
jg
les
xchg
in
ret
xchg
xchg
ja
lds
xchg
lea
add
inc
xlat
out
enter
add
in
pop
inc
stc
cltd
mov
popa
mov
xor
pop
imul
loop
sahf
add
add
sub
mov
fnstcw
dec
pop
mov
fistps
imul
aad
nop
xor
add
add
sub
xchg
stos
mov
jns
push
jl
mov
mov
push
lds
xchg
fadds
add
add
push
imul
fistl
xrelease
out
dec
adc
add
inc
push
scas
add
add
mov
inc
std
mov
push
push
loopne
scas
cmp
fwait
dec
jmp
in
xor
stc
add
add
aas
xor
cwtl
pop
fsubrl
lahf
fistl
cld
mov
jmp
stos
xlat
sbb
mov
add
add
and
push
and
sbb
movsl
test
in
xor
push
outsb
xor
enter
or
add
add
mov
faddl
cmp
mov
pop
jmp
fiadds
les
push
repz
movsb
rcrl
addr16
lods
stos
push
divb
xor
cmp
cld
adc
cwtl
and
out
dec
leave
cld
mov
add
add
xor
in
stos
addb
loopne
push
mov
cld
add
sub
stc
aam
hlt
int
add
add
mov
je
sahf
rorl
stc
aam
cmc
shrl
mov
xor
adc
cld
mov
push
add
add
dec
add
xchg
mov
clc
push
xor
jne
repz
adc
in
ljmp
inc
or
and
add
add
mov
aad
icebp
jb
stc
aam
shr
ss
cmc
lock
push
mov
mov
add
add
aad
rcrl
cmp
jl
cmp
cmp
cmp
or
mov
std
mov
jge
ss
mov
push
adc
add
add
mov
pop
test
addr16
ja
mul
andb
repnz
adc
gs
into
xchg
xor
add
add
rclb
stos
dec
ljmp
xchg
pop
cmp
xchg
cmc
stos
xchg
rcrb
xor
aas
push
add
add
xor
jae
inc
dec
lcall
sbb
in
cmp
out
subl
stc
or
add
cmp
les
cmp
adc
ret
ss
int3
fnstenv
mov
jp
jo
and
adc
cmpsl
mov
jg
mov
jge
hlt
lret
xor
mov
movsb
add
add
inc
pushf
jecxz
mov
test
fldenv
sub
enter
mov
add
add
daa
dec
in
cmp
and
inc
scas
cmp
pop
fnstcw
mov
or
push
add
lcall
add
out
xor
sbb
mov
mov
scas
js
cmp
stos
or
imul
add
add
mov
mov
lea
add
lods
aaa
mov
sbb
sahf
lcall
jns
mov
arpl
in
jle
int
inc
shll
mov
push
push
add
add
pop
sub
xlat
test
mov
push
xor
clc
jmp
or
sub
daa
fcoms
add
add
add
push
cs
and
mov
in
sbb
mov
push
cs
and
add
add
sbb
adc
cmp
xor
imul
pop
rorl
pop
popa
in
lcall
aam
movsb
shl
push
std
xor
out
movsb
cltd
outsb
pop
cmp
xorb
mov
jecxz
iret
add
add
cmp
mov
stos
les
cmp
movsl
sub
lods
movsl
adc
push
add
add
in
movsb
js
mov
pop
repz
into
pop
outsb
popf
test
das
mov
mov
test
add
out
jecxz
push
lret
and
or
loopne
mov
lret
pop
xchg
jmp
loope
add
add
mov
mov
push
pop
inc
enter
shlb
add
add
add
add
sbb
adc
std
mov
pop
into
sbb
add
add
add
filds
jg
addr16
inc
es
and
testb
into
popf
adc
mov
cwtl
test
dec
test
out
add
push
testb
push
jl
xchg
je
xor
pop
and
test
add
add
mov
jno
cli
repnz
data16
js
outsl
outsl
sbb
mov
sub
push
inc
add
add
fistpl
out
fnstsw
iret
push
dec
xor
pushf
add
push
into
push
adcb
insl
test
dec
shrl
add
sub
adc
fdivrs
dec
insl
add
call
adcb
and
add
je
lret
mov
cmpsl
mov
dec
pop
jmp
fidivs
jle
adc
add
fisttps
dec
push
ret
xchg
rorl
xchg
loope
jp
in
push
xchg
or
add
add
xchg
dec
ds
std
lods
adc
pop
mov
cmp
repnz
dec
sub
test
xor
add
add
test
int3
mov
lret
mov
lock
dec
std
int3
movsb
mov
jnp
jo
push
push
add
add
cli
stos
adc
pop
or
popa
mov
jne
add
arpl
test
add
add
xchg
bound
jbe
and
xchg
dec
fdivrl
sbb
push
and
add
inc
xchg
int3
test
es
nop
lret
mov
je
and
fstpl
jmp
loope
cwtl
add
add
adcb
dec
pop
xchg
loopne
in
repnz
or
inc
lcall
add
jbe
lods
enter
mov
mov
sub
or
push
add
add
xchg
pop
push
imul
add
pop
or
pushf
add
jnp
fsubrs
or
rclb
jo
add
add
mov
repnz
test
std
subb
imul
arpl
sub
add
add
push
sti
mov
jge
xor
push
adc
out
imul
dec
add
insb
jae
insl
loop
es
aam
jno
or
popf
scas
push
repnz
push
jno
push
stc
add
add
and
push
mov
ds
out
js
push
and
sub
dec
scas
mov
lods
lcall
add
inc
add
mov
loopne
test
cltd
mov
mov
jno
leave
jbe
add
add
lock
xchg
jge
es
outsb
inc
repz
das
int
jp
loope
push
fistpll
lea
sbb
lret
add
cwtl
push
fs
add
xchg
mov
js
pop
fidivl
add
add
and
add
fnsaves
aam
push
andl
scas
loope
in
inc
dec
cli
jnp
mov
test
add
mov
mov
pop
mov
sub
mov
enter
add
and
sub
inc
and
xor
aaa
outsb
xorl
daa
rolb
stc
in
repz
add
add
jge
imul
cmc
in
xchg
out
fs
or
adc
and
or
add
add
xor
mov
adc
inc
inc
adc
sub
dec
cmp
push
xor
sbb
sub
call
pop
inc
mov
add
cmp
pop
rcrb
add
add
cmpsb
and
jno
imulb
sbb
cltd
sbb
mov
push
add
fstl
int
mov
add
xchg
xor
adc
out
jnp
cmp
push
movsb
scas
fsts
std
fistpll
sbb
add
jno
mov
aaa
push
test
push
aas
mov
scas
pop
or
cs
sub
insb
mov
xchg
repnz
cwtl
inc
lahf
movsl
dec
aas
and
repz
test
adc
int
imul
push
add
movsb
or
xchg
inc
fidivrs
pushf
sub
dec
out
cwtl
mov
pop
add
add
mov
cmc
movsb
inc
mov
xchg
adcb
sbb
push
mov
push
add
add
add
shrl
addr16
cld
popf
add
shll
xchg
push
or
in
pop
sahf
mov
add
add
fisttps
notl
je
sub
pop
ljmp
sbb
leave
pop
xchg
sub
adc
add
add
push
or
pop
add
in
rolb
dec
out
cmp
xor
xchg
jnp
pop
or
insl
add
add
sub
xchg
jge
or
fs
mov
sbb
sahf
movsl
add
jmp
add
or
fcomps
lret
xchg
popf
es
inc
mov
add
add
popf
into
adc
enter
jnp
pop
mov
xor
sbb
dec
cmpsb
jge
cmc
pop
add
add
or
add
sub
ror
mov
adcb
fwait
sub
rolb
push
add
add
mov
popa
push
add
movsl
std
sub
or
int3
xor
shl
sub
add
add
mov
mov
scas
sbb
test
rclb
in
fdivl
mov
add
adcl
or
enter
jle
ljmp
sti
inc
mov
iret
mov
mov
add
add
jno
lret
in
loope
aad
xchg
js
iret
mov
dec
jp
lret
sarb
mov
add
add
mov
inc
or
test
aaa
adc
unpcklps
repnz
push
dec
cli
cli
add
add
mov
loop
inc
sbb
inc
lea
xchg
mulb
lret
out
andl
fdivs
xchg
cmc
loop
sbb
cmpsl
negl
mov
outsb
adc
mov
in
cmp
add
add
roll
push
ss
or
mov
adc
mov
out
or
jno
cmp
add
add
arpl
cmp
jns
pop
stc
fiaddl
icebp
mov
ss
hlt
add
and
add
add
fists
insb
push
push
sbb
inc
pushf
repnz
cmp
cmp
loopne
adc
mov
add
add
into
inc
cmpsb
adc
mov
sub
hlt
or
aam
fisttpll
cltd
adc
mov
test
add
add
cmpsb
or
and
loopne
cmp
into
sbb
into
movsb
add
dec
jo
fdivl
addr16
add
add
dec
pop
popf
add
mov
push
cmp
cmpb
push
xchg
cmp
ljmp
sbb
add
add
sbb
push
cmp
or
sbbb
and
xor
cltd
mov
add
and
das
jo,pt
xlat
inc
in
insb
cli
in
xlat
test
push
fnstenv
add
add
mov
pop
les
cmp
jno
mov
mov
and
aas
cmpsb
mov
bound
add
dec
xchg
xor
xor
scas
lds
xor
and
into
jg
mov
mov
add
add
xchg
std
ficompl
jb
push
std
jle
fistpll
test
mov
insl
fcmovnb
push
push
js
add
add
mov
cltd
mov
and
xchg
rol
mulb
dec
jnp
and
and
mov
mov
xchg
inc
inc
jne
lds
flds
mov
ds
add
add
mov
adc
push
sub
das
scas
mov
iret
push
push
or
add
add
in
out
dec
jae
js
ret
push
ja
push
rolb
ljmp
out
leave
add
add
bound
push
hlt
adc
inc
mov
inc
or
daa
cmc
push
xchg
int
jle
jmp
add
push
fcoms
ret
subl
push
movsb
dec
mov
clc
or
movsl
lock
insb
add
add
add
cmpb
cltd
pusha
jns,pn
mov
mov
cmp
cs
pop
jmp
add
out
lods
mov
jl
push
in
cltd
push
jns
cli
movsb
pop
rcl
test
jno
adc
push
add
add
or
add
ja
dec
push
test
mov
and
scas
dec
adc
inc
orb
fistpll
dec
add
add
sub
dec
cli
xlat
or
inc
into
mov
inc
push
mov
and
push
mov
inc
daa
add
add
bnd
daa
cmp
repnz
fsts
push
daa
lea
call
add
dec
sub
cli
iret
or
push
shrd
pop
cltd
jge
fimull
and
add
jae
sbb
add
outsl
mov
xor
insl
push
int
dec
xchg
pmaddwd
or
ss
sub
add
pop
ds
out
push
sub
push
xchg
add
loope
mov
inc
and
call
xlat
xor
add
add
push
inc
push
jle
mov
daa
or
dec
sbb
flds
mov
sahf
pusha
mov
add
nop
jge
ret
ds
mov
add
in
das
rorb
jne
xorl
add
add
hlt
adc
repnz
pop
cmp
cmp
xor
out
out
adc
movsl
mov
jl
add
add
notl
addr16
scas
pop
push
popa
mov
jecxz
mov
inc
insl
pop
fcmovu
add
andl
add
cmp
sub
repnz
sarb
sbb
clc
gs
and
add
into
arpl
mov
add
add
or
add
mov
lea
add
pop
repz
test
andb
push
cmp
xchg
add
add
in
jb
imull
movsb
cmp
push
out
xchg
pusha
out
int3
adc
fadds
cmp
jmp
add
add
sub
dec
push
sub
mov
es
adc
or
add
add
add
jmp
pop
or
mov
mov
iret
adc
ficompl
iret
dec
push
push
mov
out
out
mov
dec
lcall
pop
push
inc
cld
cmc
stc
call
xchg
jne
cmp
add
add
or
or
sbb
adcb
cmp
dec
mov
stc
in
pop
out
add
add
inc
sbb
in
test
jns
jo
sub
cli
sbb
inc
or
add
add
cmp
stc
push
mov
outsl
aas
mov
mov
pusha
out
jbe
xchg
jp
jp
je
add
add
stc
adc
or
mov
xchg
and
cmp
cmovnp
test
jge
add
add
dec
jb
pmuludq
and
popf
iret
dec
sub
je
or
ffree
add
mov
add
xchg
clc
loope
enter
xchg
test
iret
sti
test
daa
data16
outsb
aaa
hlt
mov
ljmp
in
push
sub
idivb
dec
lret
notb
xchg
push
stos
xor
or
imul
rol
dec
cmp
imull
sbb
cmp
sub
lods
faddl
add
add
mov
enter
bound
cmp
jbe
movsl
add
aam
xchg
jl
aad
jg
cli
mov
add
add
adc
ffree
xor
jge
ficompl
scas
scas
in
pushw
sbb
mov
add
subl
add
outsb
add
std
xor
mov
xchg
fstl
jne
add
add
out
js
jnp,pt
popf
sub
orl
pop
repnz
aas
push
xor
jnp
jo
add
add
push
jno
dec
cmpsb
xor
inc
mov
cmpsb
xchg
sub
idiv
jne
addb
loop
adcb
add
add
fistps
mov
popa
cmp
mov
lret
xor
ret
add
insl
adc
push
je
mov
lock
sarb
sbb
jp
call
xchg
add
add
jb
imul
or
push
into
push
fisttps
and
out
push
lea
lret
rolb
add
add
bound
pop
push
jp
mov
pop
outsl
xor
loopne
scas
fs
insb
dec
test
adc
add
add
gs
mov
ds
in
xlat
inc
xchg
enter
inc
push
idivb
push
sbbb
add
pop
or
push
neg
jno
inc
testb
movsl
pop
inc
xacquire
pop
adc
fcom
adc
add
adc
outsl
cmovnp
testl
mov
sub
sub
add
out
int3
dec
jp
jno
push
out
add
add
ret
test
xchg
mov
inc
adc
mov
xchg
cmp
insl
sbb
xor
xor
dec
inc
ret
gs
pop
int3
or
stc
cmp
sahf
arpl
add
add
stc
add
inc
mov
inc
xchg
pop
inc
mov
inc
orl
fldl
add
lret
adc
add
fnstenv
adc
push
test
rclb
mov
or
add
add
push
mov
jecxz
sbb
sahf
jp
jbe
scas
dec
lret
add
add
ss
sub
push
sbb
fdivs
leave
dec
push
jb
out
leave
iret
or
sbb
add
add
loope
cmp
add
arpl
adc
jbe
rcr
add
jg
inc
cmp
iret
dec
xchg
add
add
mov
out
pop
movl
jo
jns
or
mov
add
mov
int
cwtl
aaa
loope
xor
nop
adc
test
mov
mov
jge
into
in
add
add
sub
jecxz
scas
int
jbe
jmp
cltd
clc
aaa
es
scas
sahf
cmpsb
jle
jp
add
add
pushf
mov
out
frndint
and
mov
outsl
repnz
pusha
adc
add
add
and
cmc
mov
jp
add
addl
fadd
sti
xchg
add
add
dec
sbb
stos
and
jge
push
sbb
leave
adc
mov
xchg
dec
cmp
add
in
sbb
inc
push
shr
or
sub
jb
sahf
push
loop
jmp
imul
cmp
add
pop
into
and
add
add
in
xchg
dec
popf
sbb
push
sub
sti
mov
jns
jae
pop
test
dec
cli
pop
fldl
add
add
imul
inc
pop
fxch
dec
loope
data16
iret
cmp
les
fsubl
push
cld
jg
ret
and
add
add
pushf
outsl
dec
push
push
jl
sarb
out
rclb
mov
inc
cmp
ja
pop
add
add
imul
mov
rorl
jl
and
and
inc
dec
push
sub
or
add
add
add
sub
popa
dec
or
pop
ljmp
fnstcw
mov
jo
mov
add
add
push
test
andl
test
xchg
jg
cmp
mov
insl
loope
add
add
aam
mov
xor
int
sub
or
inc
les
pop
lcall
dec
test
add
add
movsb
cmc
add
sbb
daa
movsbl
repnz
clc
icebp
mull
div
les
add
mov
add
sub
packuswb
mov
push
push
popa
jns
xorl
mov
daa
add
add
dec
aad
stos
sti
test
test
xchg
pop
cltd
sub
sti
leave
stc
mov
push
ror
dec
pop
xchg
add
push
int3
loopne
or
shll
jbe
imul
adc
cmpsb
mov
fmull
push
shlb
outsb
add
add
sub
cmpsb
push
sub
cmp
fimull
add
sbb
xor
or
sbb
xchg
add
add
stc
not
inc
mov
jl
cmp
mov
xchg
pop
cmc
push
pop
call
dec
or
imul
sahf
int3
inc
xor
enter
pop
mov
jge
roll
iret
in
ror
and
add
add
mov
sub
out
ja
xchg
xor
pop
mov
popa
cs
cmpb
add
add
pop
in
out
sub
enter
push
iret
sbb
lcall
sub
adc
xlat
out
std
add
add
idivl
mov
frstor
pop
inc
stos
ret
test
popa
rorl
sarb
mov
add
add
adc
inc
push
and
je
js
or
in
inc
fs
mov
iret
dec
add
add
pusha
gs
and
icebp
rolb
sub
mov
mov
mov
pop
cmp
add
adc
mov
xor
mul
fadds
lds
inc
out
mov
add
add
addr16
jb
jb
or
insl
jns
pop
or
xor
pop
add
add
or
push
scas
addb
je
bound
rcrl
adc
ja
jecxz
dec
add
add
sahf
mov
mov
in
dec
not
add
sti
fs
inc
icebp
sti
sub
int
addb
add
insl
clc
or
xchg
inc
fs
add
mul
push
ror
loopne
orl
daa
out
movsl
mov
add
add
xchg
out
sub
imul
lcall
or
add
jo
sbb
add
add
push
in
xchg
shrb
pusha
call
movsl
lcall
cld
xor
jl
sbb
cmp
adc
dec
push
adc
mov
gs
or
enter
adc
cmp
cmp
cmpsl
add
add
lds
das
lods
xlat
sbb
or
bound
sub
mov
dec
add
add
mov
jae
jl
ja
cld
cltd
cmp
dec
rcl
inc
shlb
sbb
jns
inc
insl
call
add
inc
sub
dec
sub
les
int3
das
inc
out
or
jne
add
adc
rcrl
cmp
fs
lods
mov
sub
mov
cmp
dec
fldenv
cli
jmp
add
add
hlt
adc
gs
hlt
pop
jae
dec
push
xor
sub
push
adc
dec
movsl
xor
add
add
or
add
lock
insl
push
hlt
and
cmp
enter
mov
add
add
xor
out
bound
sahf
sbbb
fldcw
sbb
mov
sbbb
add
add
insl
stos
and
mov
jp
sub
and
jmp
pop
lods
push
scas
lret
or
add
aaa
xlat
lret
or
add
aam
mov
inc
cwtl
sahf
jg
xchg
int
mull
or
decl
mov
add
add
je
test
dec
xchg
add
test
cmpb
and
push
loope
add
test
sub
add
add
xorl
mov
or
mov
aam
sarb
scas
pop
dec
int3
add
add
add
mov
and
imul
lret
repnz
jg
dec
add
cmp
mov
sbb
add
add
dec
pushf
inc
loop
or
mov
xchg
jns
test
test
xor
add
inc
lahf
jle
xor
fidivs
mov
mov
rcl
out
clc
ss
cmp
sahf
add
add
inc
lret
repnz
aaa
orb
aad
dec
std
arpl
lret
cs
shlb
xlat
add
cmp
movsb
pusha
es
mov
in
les
mov
iret
adc
add
add
dec
loop
movsl
add
das
or
in
xchg
sub
or
call
inc
lods
insl
fwait
mov
jno
dec
add
add
and
and
inc
add
les
nop
push
cmp
cmp
jbe
cmpsb
mov
add
pop
push
repnz
cltd
sub
sub
mov
mov
dec
add
add
sahf
xor
sbb
aas
mov
in
out
push
scas
push
and
leave
fnstsw
fwait
or
cltd
cmp
add
add
aas
inc
pop
stos
sub
outsb
loope
hlt
sahf
test
roll
pop
xchg
add
add
das
imul
mov
push
jmp
or
add
inc
sub
ds
inc
mov
add
ds
xchg
cmpsl
dec
repz
shrl
xchg
stos
mov
rcrb
add
add
mov
sub
or
cmpsl
cwtl
jg
push
ss
push
inc
loope
fcompl
daa
xor
je
add
add
bound
lods
pop
dec
enter
xchg
sbb
fcoml
cltd
test
fdiv
loopne
in
clc
cmp
add
add
stos
ja
mov
fbstp
rorl
sti
xchg
xor
ret
mov
add
push
adc
div
outsl
clc
aaa
popa
push
sub
mull
sbb
andb
jl
add
add
push
xor
pushf
ret
fidivs
jne
inc
cwtl
test
idivb
lock
add
add
lds
mov
cmp
and
movsl
xchg
cs
and
mov
adc
add
std
and
aam
out
movsl
pop
pusha
dec
xor
adc
test
mov
xor
add
add
push
lds
mov
call
jae
ja
orl
xor
push
xchg
xchg
add
mov
out
movsb
cmp
mov
adc
clc
jp
aaa
pop
nop
and
outsb
int3
fisubs
or
jae
add
add
lea
sbb
icebp
fisttps
push
outsb
pop
cmp
rolb
add
out
jle
adc
sub
mov
lea
lcall
outsb
jle
dec
inc
sbb
add
add
fcompl
lret
sbb
sbb
jbe
clc
add
mov
dec
mov
shrl
add
pop
pop
out
push
jg
adc
push
fwait
sbb
pop
into
popf
fstl
clc
jecxz
lea
cmp
sti
movl
cwtl
sbb
iret
aaa
xor
inc
jns
adc
and
nop
jle
das
add
or
out
add
add
repz
jle
movsb
bound
aaa
push
add
out
stos
dec
stos
iret
pushf
push
popa
xchg
jmp
xchg
jge
mov
or
cltd
adc
push
imul
lods
mov
jg
sub
cmp
sbb
add
mov
inc
add
add
jns
xchg
fmull
loope
insl
adc
mov
cmpsl
dec
dec
mov
inc
mov
add
data16
add
add
adc
adc
fistpl
xchg
pop
fldcw
mov
mov
add
outsl
dec
das
shll
push
test
int
jle
movsl
adc
sbb
jl
mov
jno
hlt
jecxz
push
xor
xor
idivb
movsl
cs
xlat
pop
xor
notl
sbb
or
add
sti
fnstsw
cmc
adc
in
xor
adc
push
cltd
mov
and
fnstcw
iret
adc
outsb
mov
add
push
sub
or
jecxz
sub
sub
xchg
sbbl
out
je
push
xchg
xchg
fucomi
outsb
xchg
add
add
outsb
mov
jle
xchg
fisttpll
sub
mov
and
cli
cmp
add
add
fisubl
mov
or
test
dec
mov
ja
xchg
or
ficoms
fstp
and
add
add
outsl
jmp
inc
cmc
or
sub
cmpsl
fucomi
xchg
sub
pop
imul
je
es
xor
and
add
sbb
dec
stos
lock
sbb
push
or
pushf
mov
or
ret
or
pop
scas
sub
inc
fwait
dec
push
add
add
mov
dec
movsb
mov
jno
adc
lods
bound
sbb
out
mov
and
mull
add
cmp
ja
imul
lcall
mov
cmpsb
mov
push
pushf
mov
add
adc
mov
pusha
pop
and
sub
xchg
xchg
inc
sub
inc
popa
xchg
or
add
jbe
sbb
mov
int
mov
gs
pop
out
ret
out
insb
xchg
inc
stc
testb
add
add
adc
sbb
xchg
pop
adc
in
adc
cli
mov
sub
xlat
cmpsl
add
add
jo,pn
sub
jle
xlat
into
out
lods
push
stos
lods
divb
sub
fcompl
add
add
sbb
mov
test
pop
fldenv
sub
loopne
mov
sbb
or
sarb
scas
gs
dec
out
clc
add
add
pop
xchg
mov
ffreep
push
das
mov
pop
std
test
enter
lods
mov
add
add
add
out
imul
jbe
cltd
movsl
test
gs
popf
jl
mov
ja
add
aad
repz
add
pushf
xchg
or
xchg
fsts
push
mov
movsl
sbb
or
lret
add
add
mov
mov
push
mov
or
push
cmp
add
cmp
dec
sub
test
add
ret
and
int3
pop
loope
cmp
dec
bound
loope
andb
lock
push
sbb
daa
sbb
sbb
add
add
and
pop
jns
pop
pop
je
xor
sbb
shlb
insl
inc
push
add
mov
int
mov
or
orl
inc
xchg
loopne
jno
and
add
pop
rorb
enter
test
cli
insl
pop
mov
add
pop
mov
add
add
xor
lret
pop
push
mov
loop
pop
mov
jecxz
aam
out
dec
mov
add
add
pop
dec
add
sub
sbb
rcrb
arpl
into
les
mov
add
add
cli
sub
test
jo
xchg
lahf
mov
cmpsl
pop
pop
push
push
inc
aas
inc
aaa
arpl
add
add
cs
out
sbb
cmp
sub
cltd
xchg
pop
pop
subl
xacquire
add
dec
sub
fsubs
sarl
imul
dec
lcall
jae
pop
mov
add
add
mov
jo
add
sti
add
shlb
test
cmp
add
add
xorl
cwtl
pop
dec
test
mov
bnd
ret
pop
fs
rclb
movb
add
mov
scas
loopne
adc
movsb
mov
pop
addl
mov
sub
push
inc
and
push
loop
add
add
aas
sub
shl
adc
push
shrb
sub
sub
pushf
jp
rolb
add
add
ret
mov
imul
sub
inc
push
push
mov
mov
mov
add
or
mov
cmc
xor
jmp
mov
and
pop
cltd
pop
mov
add
add
or
int3
jp
lea
faddl
dec
xchg
xor
jns
dec
inc
inc
movsl
cmp
popf
xchg
stc
add
add
jne
pusha
cmpsl
push
arpl
pop
pcmpeqb
dec
jp
lret
fnstenv
inc
bound
jg
filds
add
add
xchg
cmpsl
or
out
and
incl
fimull
mov
inc
mov
sub
add
add
pop
xchg
mov
dec
xor
xchg
mov
daa
cmp
push
movsl
and
mov
ss
and
add
add
mov
xor
sub
push
pop
pop
jge
xchg
dec
cmpl
mov
add
pop
mov
and
lods
jnp
in
ss
shll
push
addl
mov
pop
add
add
mov
mov
jo
mov
jecxz
pop
lret
xlat
int3
cmpsb
fs
xchg
stc
add
add
or
cmp
lds
dec
pusha
or
sbb
aam
daa
or
mov
or
add
inc
les
inc
incb
mov
ss
pop
jnp
rcrb
lret
sbb
cmpsb
sbb
mov
add
incb
xchg
mov
sbb
mov
xchg
mov
and
dec
sub
sub
inc
outsl
add
add
push
or
and
dec
fmuls
insb
cmpb
dec
and
pop
push
jp
in
add
fildl
add
add
ds
lcall
mov
fwait
adc
inc
xchg
out
inc
or
add
add
inc
sub
or
and
xchg
jle
fwait
dec
pop
mov
jl
and
add
and
and
cmp
jecxz
mov
cmc
negb
dec
sbb
inc
insb
sub
add
mov
mov
dec
lcall
lcall
and
lahf
sbb
subl
inc
lea
test
pop
data16
mov
sub
out
fwait
les
lahf
mov
dec
das
rcrl
in
add
add
sbb
lahf
outsb
mov
lret
push
or
imul
js
mov
xchg
mov
add
add
sub
sub
push
pop
add
or
pop
adc
stos
movsl
sbb
stos
sub
pop
nop
lods
add
add
cmp
iret
adc
xchg
push
mov
aad
jo
aad
sub
add
add
add
es
xlat
test
xchg
leave
pop
push
repnz
push
mov
and
cwtl
popa
sub
add
adc
inc
mov
lahf
xor
jg
psubb
and
xor
ret
dec
add
add
imul
jecxz
xor
cmp
sub
mov
add
add
out
add
pop
fimuls
aad
rorl
pop
push
gs
mov
and
lea
add
add
pusha
bound
fsubs
int
pop
sub
dec
pop
push
int3
lret
popa
int
inc
adc
dec
test
add
add
les
xchg
mov
lea
shll
stos
shld
push
bound
xchg
add
add
in
dec
sbb
pop
cmp
lret
scas
mov
popa
mov
jp
lods
in
jmp
hlt
addr16
rorb
out
push
mov
loope
in
mov
in
popa
filds
popf
pop
add
add
pop
cltd
stos
pop
mov
enter
sbb
push
jmp
divb
push
leave
cmpsl
out
push
stos
and
add
add
sbb
fbstp
push
and
push
jnp
sub
pusha
sbb
add
adc
out
mov
jmp
mov
pop
ror
arpl
xlat
in
sub
dec
scas
lret
jp
push
lret
inc
sbb
data16
push
add
add
in
into
cmp
or
cwtl
scas
mov
iret
fsts
sub
in
jns
push
cmp
add
add
jle
jle
xchg
cmpsl
mov
mov
cmp
push
out
in
cmp
ja
push
nop
and
add
add
push
cmpsl
mov
dec
sbb
jno
movsb
mov
pop
cmp
xor
into
sbb
xchg
jnp
pop
in
add
add
cmpsb
sub
push
xchg
mov
mov
push
clc
jne
add
mov
jp
add
add
jne
adc
jmp
bound
cltd
out
lahf
mov
nop
xor
and
add
push
sub
cmp
loope
cs
out
pop
loop
shll
add
arpl
push
and
add
add
in
inc
mov
leavew
or
pop
aas
xor
xchg
dec
mov
xchg
cli
call
sahf
loop
add
add
dec
cmp
stos
and
xor
dec
push
out
lret
shlb
or
sti
sarl
arpl
add
add
dec
mov
xor
and
aas
insb
fidivrl
add
shll
push
inc
add
add
scas
adc
jbe
add
sub
xchg
pop
push
in
subl
movsl
insl
and
filds
fsts
mov
iret
jnp
push
es
mov
mov
xor
mov
ret
add
add
je
ret
jns
bswap
push
stos
inc
mov
jnp
mov
jge
cmp
mov
inc
cmpsb
mov
add
popa
mov
or
or
and
pop
push
lods
xchg
mov
out
rolb
add
add
jmp
cmp
jge
out
test
int
loope
movsl
mov
jae
shrb
mov
dec
add
add
mov
xchg
out
pop
add
pop
shl
fcomps
mov
shlb
mov
push
in
iret
xchg
xlat
stos
add
add
daa
pop
and
call
mov
sub
add
loopne
outsb
dec
call
add
push
inc
add
add
fldenv
out
stos
imul
sbb
dec
xchg
xlat
movsl
add
sbb
ds
add
add
add
fisttpl
fimuls
adc
dec
dec
andb
cs
inc
cmp
mov
and
add
or
mov
andb
inc
inc
out
add
pop
loop
inc
xor
add
add
xlat
inc
les
push
sub
bound
sarl
push
inc
jg
fld
jl
inc
cmpsb
js
pop
adc
add
add
pop
movb
cmp
pop
xchg
lret
xchg
mov
mov
movsb
lea
add
add
pop
das
std
xchg
jno
mov
pop
mov
adc
into
adc
pop
out
outsb
add
ret
add
add
sbb
jp
mov
and
aaa
ficoms
xor
jmp
xchg
cmp
add
add
pop
lea
push
cmp
inc
adc
inc
imul
imul
add
and
std
xchg
dec
out
mov
out
jo
dec
xchg
js
sub
sti
jns
push
imul
gs
lret
adc
mov
mov
dec
push
lea
aas
dec
push
or
add
add
xchg
lcall
mov
push
push
mov
cld
out
sbb
push
add
mov
sbb
out
ficoml
aad
fdivrs
bound
push
and
add
add
xchg
cmpsl
andb
cmp
cmpl
or
adc
test
repnz
imul
flds
add
add
add
lods
xchg
pushf
inc
or
jno
cld
addr16
outsl
xchg
pop
loope
testl
add
int3
sbb
mov
popa
ja
xchg
aad
inc
inc
hlt
sbb
in
fnstsw
test
add
cmp
mov
jecxz
repz
mov
cmpsl
pop
xlat
int3
adc
adc
jno,pt
add
add
inc
dec
push
xor
movsb
jmp
fnsave
pop
mov
mov
and
add
and
mov
push
add
pop
test
add
pop
sub
scas
sub
cld
inc
faddl
or
push
lock
add
orb
mov
mov
pop
mov
and
aas
shll
fwait
dec
pop
mov
pusha
push
add
add
push
pusha
mov
xor
or
mov
aaa
sub
aas
adc
sbb
or
dec
cmp
add
add
movsl
lods
clc
or
addr16
push
cmpb
cmc
xorl
sbb
jmp
add
add
fsts
mov
stos
sub
repnz
pop
fst
inc
pop
sbb
jmp
add
add
mov
cmp
cmpsb
insb
xor
or
adc
fnsave
jns
add
add
arpl
lods
fiaddl
outsl
cmp
dec
xor
sbb
jae
daa
jb
roll
jo
inc
add
add
iret
ljmp
loope
mov
pusha
pop
outsl
xor
adcb
jmp
add
add
lret
sub
lcall
arpl
cltd
lock
and
adc
pop
inc
stos
xchg
push
add
add
aaa
das
jns
and
and
pop
xchg
add
sub
ja
mov
jns
roll
add
push
cli
cld
repnz
out
int
negl
fcomps
inc
mov
push
sarl
push
insl
add
add
pusha
sbb
xlat
repnz
outsb
jb
ss
lret
sbb
or
nop
scas
add
add
addb
test
add
out
divl
cmp
rcll
fucomp
mov
call
add
outsl
xchg
mov
push
sahf
je
mov
cwtl
inc
mov
adc
and
add
cmc
mov
sub
aaa
out
cmpsb
fldenv
mov
cmp
ljmp
add
add
jg
xor
int
push
int
or
lret
jl
push
out
testl
mov
mov
add
add
jg
push
clc
push
inc
sbb
jb
clc
and
loopne
mov
clc
push
jne
lret
pop
add
add
push
gs
xchg
dec
addl
popa
in
addr16
mov
sub
repnz
add
mov
andb
cmc
rcrb
inc
sti
fisubrl
dec
add
dec
xchg
inc
add
add
xor
sub
inc
add
inc
in
dec
xor
cmp
jno
fucomp
ds
iret
add
add
push
sbb
out
or
xchg
ja
xchg
xchg
mov
out
imul
push
icebp
rolb
add
add
mov
inc
sbb
out
or
outsl
aas
aas
ss
jl
mov
mov
add
mov
int3
imul
insb
xchg
pop
mov
or
ds
add
add
jbe
addl
mov
mov
ret
mov
dec
adc
add
add
xor
sahf
sahf
rol
pop
leave
daa
stos
jo,pn
mov
or
cmpeqps
ret
inc
stos
or
push
inc
data16
cmp
cmc
jp
adc
fdivrs
inc
pushf
xor
add
js
inc
mov
cmpsl
xchg
pop
in
push
mov
out
cmp
lods
adc
pop
fwait
cmp
add
add
pop
and
pop
gs
jbe
sub
xchg
mov
aaa
mov
mov
mov
pusha
insl
inc
or
rcrb
mov
test
sub
ret
push
sbbb
je
test
add
add
scas
shlb
imul
insb
int3
outsl
ss
mov
test
push
fwait
cmp
add
add
jbe
fistpll
leave
or
imulb
mov
pop
cmp
xor
push
sbb
loope
pusha
fcompl
jns
add
add
dec
idiv
mov
sbb
mov
movsl
add
mov
sub
xorl
add
add
dec
xor
mov
movsl
or
add
push
stos
dec
movsl
add
add
add
mov
shrb
out
xchg
jno
cwtl
fdivl
xchg
adc
add
jg
pusha
stos
aaa
add
add
shll
stos
ds
outsb
fidivs
mov
dec
inc
inc
es
dec
scas
dec
cmp
add
std
inc
jg
jl
sarb
push
sti
mov
js
push
pop
add
xor
lahf
lods
imul
add
or
orb
pop
push
mov
mov
lcall
mov
repnz
mov
add
mov
ja
movsb
sbb
pop
movsl
subb
or
out
push
adc
or
add
add
add
mov
sub
repnz
mov
cs
imul
mov
repnz
add
add
and
mov
xlat
fidivl
add
rcrb
push
aad
cmp
mov
add
add
cmp
cs
aad
push
pushf
fdivrl
dec
lods
int3
add
in
test
mov
jle
add
add
jg
jp
and
or
xchg
pop
mov
sub
fsubp
ret
adc
sub
add
insb
jl
sbb
push
push
and
lods
imulb
inc
pop
adc
sub
jp
sahf
sbb
cmpsl
add
add
out
cmpl
mov
sub
add
inc
mov
mov
adc
sub
adc
add
add
sbb
sti
sub
sahf
adc
cmp
aaa
test
xor
in
mov
enter
jecxz
add
add
mov
nopl
jae
call
push
sbb
cmp
inc
xbegin
add
lret
mov
push
movsl
in
orl
and
idivl
iret
sbbl
add
mov
call
xchg
xchg
cmc
adc
out
stos
cmp
pop
dec
cmp
add
add
and
cmp
daa
cmp
jno
pop
pop
dec
xchg
pop
add
lcall
add
pusha
je
xchg
jge
sahf
xor
das
cmp
addb
mov
lret
hlt
pop
cltd
pushf
mov
enter
mov
add
iret
jge
xor
sub
inc
sub
inc
dec
add
add
and
jg
or
loopne
es
fiadds
imul
aad
or
xchg
inc
ljmp
mov
outsl
je
sahf
roll
mov
cmp
lods
add
sub
push
cli
mov
push
test
add
mull
cli
aad
add
es
ret
ja
es
ret
cld
arpl
into
insl
add
add
jne
sub
loopne
jle
mov
loopne
adc
aam
dec
push
fildl
enter
movsl
test
add
add
or
je
lcall
xlat
call
cmp
test
add
add
dec
mov
inc
mov
push
push
add
enter
shlb
ror
stos
int3
cmc
mov
add
add
xor
lahf
sub
lock
icebp
inc
stos
in
sbb
loop
cli
pop
jno
lods
dec
push
jle
in
addl
add
stc
push
mov
jg
cmpsb
or
outsl
push
out
dec
ja
push
mov
add
add
shll
push
or
insb
add
xor
or
jae
jg
xor
movsl
add
sbb
add
mov
mov
push
xchg
push
dec
outsl
bound
sahf
flds
test
mov
mov
adc
add
add
mov
xchg
adc
adc
mov
jbe
cs
iret
outsb
call
add
inc
in
movsl
sbb
repnz
loop
inc
je
xor
out
loop
daa
pop
aam
adc
cmp
jnp
and
add
add
jb
add
pop
or
mov
adc
cli
and
movsl
mov
adc
aad
xor
add
add
and
push
mov
xor
push
cmpsl
nop
and
rcr
dec
je
dec
je
daa
pop
in
or
add
add
sub
lahf
test
xchg
loop
fidivs
int
cmp
mov
fstpt
sub
stos
stc
xchg
add
add
outsl
push
mov
xorb
xor
subb
out
push
scas
addb
add
add
cmp
mov
mov
negb
mul
inc
push
ja
std
ficomps
imul
add
add
add
or
push
lret
iret
or
xlat
cltd
clc
je
dec
add
add
inc
iret
mov
shll
push
xchg
inc
rcrl
pop
or
fcmovbe
push
pop
test
dec
out
add
add
ret
jge
fcom
push
jne
sub
movsb
xchg
loopne
in
push
mov
adc
pop
test
jno
imul
add
add
pop
jecxz
add
jp
stc
mov
icebp
cmp
idivb
adc
mov
add
mov
xor
nop
rcrl
pop
icebp
inc
pop
mov
lahf
xchg
add
add
cmc
dec
outsb
mov
gs
sahf
dec
dec
loopne
inc
pop
int
xlat
in
test
out
imul
and
or
dec
mov
mov
cmpsb
mov
xor
and
sbb
add
int
pop
stc
xchg
cmp
es
dec
inc
dec
pop
testl
add
add
add
cmp
es
cmpsb
cmp
mov
xlat
loop
jbe
jp
push
jbe
push
lea
dec
add
add
ds
cmp
outsl
test
fldcw
fsubr
cltd
inc
mov
mov
cld
push
or
add
add
pop
mov
cli
loop
out
push
into
cmpb
xor
idiv
iret
dec
pop
vunpckhps
or
das
push
lea
cmp
add
add
std
rorb
pop
adc
mov
fs
adc
sub
add
add
std
mov
sbb
loopne
loopne
or
arpl
adcb
xor
mov
je
add
add
out
push
mov
sbb
dec
sbb
mov
les
fdivrs
xchg
rcrl
inc
inc
push
add
add
push
inc
in
push
negl
inc
push
adcl
pop
mov
cltd
cltd
rclb
add
add
jecxz
sarl
push
shlb
push
insl
das
fs
cmp
push
xchg
cld
sti
add
add
mov
jbe
pop
fbstp
stos
shlb
test
push
outsb
jns
outsl
enter
xor
filds
add
add
fs
fs
test
insb
fimuls
push
sahf
jno
pop
shlb
adc
adc
add
xor
dec
cmpsb
lea
or
je
or
test
inc
inc
add
add
mov
outsb
cmp
out
xlat
test
or
push
adc
jl
adc
xor
mov
cli
fistpll
sbb
mov
inc
lods
xor
sbb
clc
push
adc
imul
add
add
outsl
adc
or
mov
push
repnz
scas
test
test
andb
loopne
add
add
or
les
inc
int3
ss
jecxz
fidivrs
stos
stos
cmp
jae
xchg
roll
add
add
pushf
ss
shlb
mov
stos
push
mov
mov
shlb
nop
push
mov
add
and
xor
icebp
pop
outsb
daa
mov
mov
lods
push
mov
test
inc
cmp
add
add
sbb
dec
inc
bswap
sub
or
sub
mov
add
add
scas
out
es
imul
mov
and
shlb
sbb
add
add
xchg
es
lcall
and
dec
gs
fs
adc
shlb
cmp
xchg
add
add
mov
sub
dec
xchg
jmp
push
fcoms
mov
dec
lock
pop
and
add
add
add
or
jecxz
dec
sti
pusha
cs
mov
orl
pop
push
mov
roll
cmp
add
or
mov
popf
test
decb
ds
divl
int
jnp
push
outsl
or
add
add
jo
dec
cmpsb
aas
mov
ficoml
rcrl
xor
jl
xor
dec
dec
cli
sub
mov
mov
add
pop
push
push
add
push
pop
xchg
bound
pop
popa
or
mov
daa
push
mov
adc
ss
adc
sbb
repnz
mov
mov
out
clc
bound
into
inc
in
xor
push
add
add
adc
push
mov
sbb
subb
pop
mov
ds
fcmovu
push
and
cltd
stos
add
add
xchg
jnp
fidivrs
les
mov
push
mov
sub
sbb
xor
sahf
jbe
add
add
std
call
pand
subb
lcall
pop
into
push
add
add
pop
mov
mov
out
pop
xor
add
ljmp
outsl
cltd
cmp
add
add
mov
js
cmc
mov
inc
mov
stos
and
sti
sub
xchg
add
add
dec
jnp
data16
std
ret
fxch
dec
pop
inc
push
test
popa
incl
mov
jmp
mov
add
add
dec
add
das
sub
mov
jns
or
mov
dec
pop
lds
pop
sahf
movsl
add
add
and
roll
es
int
fcmovnb
mov
lret
jle
xor
pusha
and
add
add
stc
dec
fmull
dec
ss
push
lods
jge
int
inc
mov
sahf
enter
int
adc
pop
add
add
xor
das
out
nop
sub
cmpsb
mov
xchg
pop
sahf
pop
fmull
nop
out
sub
loop
pusha
jae
add
add
ret
popa
fisubl
sub
dec
movsb
js
push
into
or
and
and
push
add
add
pop
into
add
cltd
mov
dec
jb
lods
adc
jb
out
scas
iret
loope
mov
xor
mov
jns
jmp
cld
hlt
push
mov
cli
pop
mov
ss
jbe
stc
xchg
mov
add
cs
inc
jg
mov
bound
cmp
fs
popa
adc
mov
add
jno
mov
cld
cmc
fcompl
and
sbb
jecxz
cmp
or
out
mov
cltd
loop
push
adc
clc
jmp
call
push
int
jecxz
dec
or
test
je
add
jbe
addb
add
pop
scas
mov
je
out
in
gs
and
movsl
into
enter
daa
mov
mov
add
dec
add
add
out
insl
jmp
or
cmp
adc
inc
rcrb
inc
insl
test
xor
add
add
or
fdivs
nop
fnstsw
stos
shll
or
mov
sbb
xchg
add
add
and
cmpsb
int
mov
add
or
outsb
and
xor
loopne
cmp
sub
add
add
loope
adc
add
stc
xor
ja
mov
std
mov
xchg
jp
std
add
add
insl
lds
sti
cltd
mov
out
xlat
cmp
pop
push
les
sbb
add
mov
sub
and
push
lret
aaa
in
push
in
jge
insl
mov
adc
inc
add
add
jae
jmp
js
mov
sub
sub
sbb
loopne
aad
inc
push
sbb
int
mov
add
add
nop
shl
mov
adc
fistpll
jns
jp
push
sbb
inc
jns
es
loopne
iret
xchg
ret
add
or
inc
jbe
ja
ja
popf
sahf
xchg
xor
jmp
imul
hlt
add
add
mov
aas
aam
mov
cmp
mov
cs
repz
mov
and
add
add
iret
fsub
movsl
out
or
pop
mov
repz
or
mov
clc
fwait
inc
cli
mov
push
pusha
fsubs
add
loopne
test
dec
jo
jae
jbe
aas
inc
add
jo
int3
push
int3
and
mov
add
add
mov
and
or
repz
cmpsl
xor
stos
xor
pushf
xchg
add
add
stos
lcall
cmp
dec
int
mov
xchg
dec
icebp
js
add
add
dec
mov
fwait
add
pop
and
xor
sbb
mov
or
das
test
add
add
cmp
cwtl
or
cmp
mov
xchg
cli
xor
loopne
push
push
jb
fldenv
add
add
pop
push
xlat
xchg
popf
icebp
push
xchg
bound
arpl
or
push
push
cld
test
add
cmp
add
pop
data16
loope
adc
xchg
scas
adc
repnz
add
add
fnstsw
dec
push
mov
orb
mov
or
insb
jbe
clc
cmp
add
add
lods
xchg
push
and
cmp
fldcw
dec
sti
fdivs
jns
xlat
add
add
add
lcall
dec
inc
xchg
movsb
adc
repnz
int3
add
inc
lods
sti
xchg
mov
sub
add
int3
add
mov
lret
add
dec
mov
fisttps
loope
cltd
dec
out
rorb
into
add
add
sbb
testb
inc
mov
jo
jns
jmp
fisttpll
andb
aaa
popf
push
sbb
xor
lret
add
add
pop
adc
dec
mov
aas
mov
mov
adc
jmp
sti
adc
jmp
cs
mov
push
icebp
ficompl
test
cs
sub
loop
mov
popa
pop
movsb
daa
cmp
add
add
bound
xorb
dec
popa
pop
push
lods
push
int3
in
std
push
test
or
and
add
add
mov
ljmp
imul
mov
push
std
inc
lret
mov
aam
outsw
scas
add
add
sbb
push
push
data16
pusha
js
pop
xchg
dec
add
jns
sbb
xor
lcall
pop
add
mov
or
fcoms
push
mov
mov
pop
out
jne
aaa
mov
add
add
test
mov
dec
cltd
stos
adc
leave
iret
orb
repnz
xor
daa
fiaddl
add
add
push
jnp
xchg
cmp
xchg
lcall
cmpsb
dec
mov
lahf
jns
dec
negb
add
rcrb
xor
jp
jl
andb
sub
pop
rorl
add
push
mov
cmp
inc
inc
xor
mov
sbb
cmp
mov
add
add
inc
sub
xchg
xor
xchg
lods
mov
jae
dec
shll
xlat
loop
add
add
orl
out
and
adc
iret
or
jns
xchg
push
dec
orl
add
add
mov
inc
pop
push
inc
jmp
movswl
mov
xchg
popa
call
add
mov
push
divb
mov
out
scas
loope
mov
scas
notl
imull
lea
add
add
cmp
pushw
and
scas
loop
inc
xorb
das
and
sub
push
lods
add
add
add
mov
jae
pop
shl
inc
inc
adc
xor
data16
cltd
addl
add
add
mov
xchg
out
mov
stos
push
adc
jnp
daa
inc
popf
movzbl
sub
repnz
mov
add
test
sbb
xor
testb
xor
sahf
lret
cli
or
xor
pop
fmuls
bound
add
add
js
or
ja
loopne
popf
push
in
sub
jbe
adc
loop
push
iret
movsb
add
or
add
fisubrl
sbb
ficompl
test
sub
stc
cmp
dec
hlt
xor
add
pop
loopne
mov
int3
cmp
cmp
lds
test
mov
je
add
add
push
xor
test
adc
pop
loope
sub
cltd
pop
jle
roll
add
add
imul
mov
lcall
dec
mov
addr16
les
pop
dec
data16
add
push
or
negb
push
xchg
push
dec
cltd
cmpsb
cmp
into
mov
js,pt
add
add
inc
shrb
mov
addl
adc
or
jl
add
add
mov
inc
loop
faddl
stc
push
mov
jle
das
sub
add
mov
add
add
scas
negl
add
add
cmp
jb
xchg
inc
insb
or
cltd
push
clc
shl
push
pop
add
add
inc
movsl
lods
test
stos
imul
jb
lret
fisubrs
arpl
inc
mov
add
add
jecxz
push
mov
filds
pop
or
scas
add
mov
jle
add
add
clc
out
jnp
test
jnp
jle
push
sub
push
clc
fdivr
loopne
aas
add
add
imul
or
add
dec
mov
adc
sub
fnstsw
add
sti
push
lods
bound
adc
pop
loope
out
enter
mov
push
and
add
add
inc
test
aam
pop
dec
push
and
xor
fstl
mov
add
add
add
or
add
out
data16
cs
xor
mov
negl
js
add
add
arpl
adc
mov
or
xor
jp
cmp
sub
add
add
cmpsl
sbb
jae
das
jno
push
jns
mov
push
push
sti
mov
rorb
stos
sub
scas
cmpsl
add
add
push
or
scas
inc
adc
test
ret
pop
test
or
aam
ret
inc
push
sbb
add
add
test
mov
mov
jmp
push
pop
fistps
out
mov
xchg
andl
add
add
mov
mov
fs
pop
lds
mov
addr16
jp
jle
add
add
or
jmp
xor
nop
add
loope
xor
and
mov
add
add
lods
movsb
push
lods
and
test
push
push
fisubl
insl
dec
mov
jle
clc
out
add
add
sbb
push
es
jo
adc
je
rcrl
vandps
notb
pop
add
add
aam
adc
repnz
movsl
repz
or
popf
bound
jl
iret
jnp
xchg
imull
cmpeqps
add
add
sub
xor
dec
fcmovbe
lret
jle
pop
push
test
sbb
aas
and
enter
add
jns
fcomps
pop
roll
push
les
test
dec
and
insb
jne
repnz
jb
push
add
add
rclb
fwait
push
je
xchg
idivb
leave
sbb
dec
or
xor
inc
xchg
and
repnz
add
xchg
mov
ja
cmp
imul
jbe
xchg
jae
cmp
mov
mov
add
add
cmp
pop
xor
test
lret
jbe
adc
mov
call
icebp
outsb
fisubl
add
add
mov
js
push
and
lods
inc
ja
jns
jne
xchg
call
pop
jns
shll
add
mov
pop
mov
in
popf
int3
jo
pop
mov
dec
mov
add
add
sarb
push
xor
xbegin
cmp
stos
aas
pushf
ret
xor
add
add
inc
shrb
outsl
sbb
fnstenv
xchg
test
mov
lea
pop
xchg
push
add
add
xchg
xchg
iret
sub
xor
or
ds
call
imul
mov
xchg
add
add
inc
fadd
adc
xor
test
bound
cli
mov
push
adc
add
add
dec
adc
cs
mov
pushf
push
xchg
std
adc
lods
data16
add
jle
fsts
add
add
mov
rcrl
sub
hlt
hlt
out
rolb
jbe
cmp
add
arpl
and
jg
add
add
or
pop
jecxz
mov
dec
ret
cmp
enter
mov
add
add
mov
pop
int
mov
pushaw
add
mov
insb
outsl
push
es
roll
mov
insl
inc
xor
scas
jnp
xor
inc
add
imul
ret
xor
xlat
mov
mov
add
add
adc
mov
repnz
stos
ja
mov
sbbb
adc
adc
stos
jecxz
rclb
add
add
adc
mov
adc
sbb
out
lds
xlat
les
add
add
hlt
js
jo
mov
xchg
stos
cmp
or
cmp
int
pop
cmpsl
decb
dec
dec
push
or
add
add
cmp
cmpsb
pop
testl
xchg
das
sub
out
pop
cmp
add
add
and
sub
lock
jns
movsb
fiaddl
dec
sti
xorb
add
add
xchg
xor
shr
lahf
out
leave
std
jl
mov
outsl
and
fnstenv
sub
add
add
fcmovu
xchg
adc
jae
cmc
cli
fwait
je
cwtl
jle
mov
loope
sbb
test
imul
adc
adc
mov
add
adc
jns
lret
pop
addr16
jl
in
push
inc
and
add
add
inc
mov
lahf
out
mov
in
out
dec
pusha
jne
jle
idiv
cli
adc
dec
dec
add
add
add
jecxz
movsl
sbb
xor
xor
mov
pop
pop
and
insl
inc
shrb
sub
clc
pusha
mov
stc
stos
sub
add
icebp
adc
cmpsl
inc
enter
adc
sub
imul
xchg
add
add
sub
xor
pusha
scas
or
cmpsb
aam
mov
iret
test
add
add
nop
stc
mov
sub
mov
fs
pop
mov
out
out
or
and
add
mov
data16
xchg
stos
inc
lahf
and
in
adc
fdivs
or
hlt
inc
jns
dec
sbb
gs
add
mov
ja
sub
fldt
ss
xlat
loopne
mov
bound
fidivrl
mov
push
mov
mov
jle
pop
ja
jo
scas
or
cmp
cmpsb
sbb
repnz
adc
mov
sbb
add
add
jp
adcl
clc
sbb
les
xlat
adc
scas
add
jns
add
add
dec
push
inc
xchg
mov
sarl
scas
lods
inc
mov
fwait
dec
sub
mov
add
mov
add
add
mov
sub
shrb
in
add
mov
stc
xor
add
mov
mov
das
dec
push
cmpsb
pop
add
xchg
shrb
sbb
jnp
push
xor
add
add
add
mov
add
jb
mov
and
inc
push
cltd
ret
mov
sub
add
add
stc
mov
clc
cmp
jbe
andl
sti
hlt
pop
cmp
shlb
add
and
xorb
mov
stos
and
les
mov
xor
std
and
stos
inc
pushf
add
add
inc
mov
jo
push
jl
dec
mov
js
pop
cli
into
inc
xchg
ret
mov
aaa
test
sub
add
add
xor
lcall
int3
outsb
mov
xchg
sub
cmp
add
add
negl
adc
sub
push
aam
jno
xchg
xchg
sti
add
sub
pop
adc
sbb
inc
add
add
jl
jle
imul
lods
adc
push
lcall
lds
mov
add
add
inc
aam
inc
sbb
jno
stc
outsl
insb
and
dec
test
xchg
sub
add
add
adc
adc
add
push
mov
mov
mov
pop
or
or
xchg
add
jg
sbb
xchg
popa
cmpsl
pop
add
xchg
pop
insb
ficoms
cmp
daa
shll
add
clc
or
adc
sbb
add
mov
xchg
jo
mov
divb
add
add
icebp
mov
aas
jno
shrb
mov
and
scas
call
jmp
icebp
add
add
pop
inc
mov
imul
xchg
mov
or
leave
sub
xchg
pop
xor
add
stc
enter
pop
jb
sub
mov
xor
ljmp
movsb
push
add
add
mov
cs
mov
leave
ja
mov
cs
or
mov
dec
ret
stos
add
add
and
clc
or
sub
cld
ss
pop
test
and
add
add
xchg
add
data16
adc
out
test
push
icebp
int3
std
es
xor
xorb
add
add
fmul
mov
in
jmp
push
repz
clc
adc
xchg
fsubrl
pop
aam
add
add
xor
fistl
outsl
fstpl
push
or
shr
cwtl
fidivrl
jno
mov
xchg
mov
mov
movsl
add
add
mov
cmova
into
cmp
repnz
push
imul
mov
add
dec
jo
cwtl
popa
mov
nop
rol
mov
jp
dec
repnz
adc
fcomps
lea
add
add
cmpsb
negb
push
jnp
mov
rcrl
inc
cmp
dec
push
add
add
adc
and
jbe
imul
arpl
lock
jne
aas
sub
mov
push
adc
pop
xchg
insb
add
add
pop
scas
mov
ss
clc
cli
push
shll
rclb
dec
cmp
cmp
add
and
enter
push
fistps
add
or
dec
adc
movsl
cwtl
mov
jno
push
jnp
add
add
imul
xor
or
mov
aas
mov
jns
test
mov
xchg
xchg
je
mov
add
add
addr16
clc
cmp
or
push
mov
clc
cmc
or
mov
add
xor
inc
pop
sbb
cmp
movsl
into
dec
andl
add
scas
add
add
in
out
shlb
inc
mov
jne
jbe
xor
cmc
nop
cmpsl
push
push
addb
add
fadd
das
jns
or
imul
or
in
subb
rolb
add
push
int
das
lcall
idiv
sbb
adc
cmc
or
test
cmp
lea
mov
add
add
ss
enter
dec
js
mov
cwtl
or
jecxz
pop
mov
add
add
add
subb
push
cld
movsl
push
pusha
call
clc
inc
in
shrb
inc
ds
sahf
add
add
jne
loop
insb
ja
imul
fnsetpm(287
xchg
mov
adc
je
push
popa
mov
enter
add
adc
cwtl
test
insl
jmp
push
xchg
leave
push
int
popa
lods
sti
in
in
add
add
or
ds
cmpsb
scas
mov
mov
outsl
std
lea
movl
dec
add
add
gs
test
pop
subb
mov
and
sahf
icebp
add
into
jno
mov
jge
pop
cmpsb
mov
add
mov
cmpsb
mov
cmpsb
mov
sbb
jecxz
add
aam
add
js
aaa
add
add
in
sbb
popf
add
push
jo
in
jno
mov
jge
pop
mov
ret
jl
add
add
in
adc
roll
fneni(8087
fadd
dec
xchg
mov
xchg
pop
adc
sbb
arpl
popa
mov
outsl
mov
sub
add
add
mov
js
aas
adc
mov
pop
ss
lods
imul
dec
pop
adc
scas
lods
in
add
add
in
add
enter
out
sbb
out
gs
xchg
sub
xchg
jnp
cs
jmp
add
add
add
test
and
sahf
loopne
mov
jno
push
mov
out
fst
test
out
dec
jge
add
add
das
lock
push
ss
aam
mov
add
pop
fldcw
sldt
add
jbe
cmpb
or
mov
add
dec
xchg
mov
mov
jl
add
add
ret
jo
subb
gs
xor
sub
sbb
daa
cwtl
push
inc
add
add
add
mov
fmull
cmc
or
shl
push
ret
push
mov
stos
popa
jns
test
add
lahf
psubw
xor
push
aas
cmpsb
lea
sbb
stos
addr16
jne
mov
add
test
inc
js
aas
rcrl
xlat
mov
and
push
mov
addb
and
add
jmp
mov
sti
jge
inc
jno
addr16
push
pop
or
add
add
push
imul
and
xchg
cltd
call
adc
pusha
xlat
xchg
cmpsl
xlat
xchg
loope
push
add
add
stos
sbb
push
fwait
or
cmp
cmp
inc
lods
or
push
cmp
fmull
pop
in
rcrb
adc
push
mov
sub
push
cmc
nop
push
sbb
cmpsb
add
add
cwtl
pushf
or
adc
cmovle
divb
lea
cmpb
dec
cmp
js
add
add
xor
add
orb
scas
jns
rorb
pop
mov
outsl
or
addr16
add
add
inc
mov
subl
dec
jbe
mov
aaa
mov
divb
sbb
xchg
xchg
add
pop
mov
cmp
lret
sti
ret
mov
and
add
scas
jb
jns
ja
add
add
sbb
sbb
insl
into
mov
into
sub
mov
xor
pop
or
cli
xchg
jae
sti
sbb
add
add
lods
pushf
dec
dec
imul
lret
mov
jmp
fwait
out
ret
aas
and
xor
js
jo
add
add
xchg
out
je
pop
mov
pop
cs
lcall
adc
aaa
in
add
add
push
xchg
xlat
rolb
testl
in
pop
sbb
inc
or
insb
add
jp
add
add
dec
ja
and
insb
dec
dec
pop
and
subb
js
adc
fsts
add
add
push
insb
int3
movaps
pop
mov
xchg
outsl
dec
and
loopne
sub
push
pop
mov
add
add
add
iret
sahf
pop
mov
and
fstps
push
jns
xor
jae,pn
push
pop
pop
cmpb
add
add
out
pop
lods
pop
arpl
inc
dec
mov
inc
adc
mov
aaa
stos
cmp
jl
lods
mov
cmp
sarl
or
imul
ds
and
add
test
ret
cli
jmp
add
add
or
aam
inc
scas
dec
mov
pop
scas
data16
outsb
test
es
jecxz
stos
addr16
cmpsb
jmp
add
add
in
dec
cltd
scas
or
loop
push
dec
dec
mulb
scas
add
push
leave
push
mulb
das
xchg
testl
adcl
push
fsubl
push
mov
jle
inc
mov
push
fistpll
add
add
lea
push
jnp
movsb
mov
mulb
je
sub
or
lcall
movsl
mull
add
add
jg
out
mov
jnp
ret
fwait
bound
cmpsl
out
mov
ja
add
add
scas
cmp
sub
xchg
ljmp
sbb
out
adc
out
imul
fldl
add
cmpsl
clc
add
cli
movsb
and
cwtl
dec
ds
hlt
divb
add
add
aam
sub
lret
push
and
int3
pop
adc
icebp
aaa
rcll
jp
fnstcw
add
add
cli
repnz
or
and
inc
jp
xlat
cwtl
inc
dec
scas
dec
int3
adc
push
push
into
add
add
push
mov
mov
xor
jl
pop
mov
test
addr16
lods
mov
add
add
inc
sarl
movsb
lret
mov
jecxz
stos
and
sbb
mov
mov
add
iret
and
mov
and
jno
lea
lea
mov
xchg
mov
sub
add
add
cmc
mov
js
mov
loop
out
stos
push
jl
stos
dec
fsubrp
dec
scas
mov
addb
add
ss
cmc
test
int
dec
pushf
lcall
dec
jbe
xor
hlt
dec
lods
insb
mov
add
add
inc
nop
cmp
mov
test
fdivrl
mov
or
iret
mov
pop
mov
mov
pushf
inc
add
add
cltd
scas
sub
flds
jo
scas
xchg
aas
adc
leave
out
repnz
out
inc
cmp
add
add
ljmp
dec
mov
test
mov
mov
jl
pop
in
popl
mov
mov
out
sub
fdivr
sbb
lcall
push
jge
mov
loop
add
add
push
and
fisttpl
fcoms
push
out
ret
add
call
xlat
ja
lret
sbb
add
add
dec
mov
pop
cmpsb
sarl
lret
pop
push
clc
sbb
push
cmp
ja
fidivrs
es
add
add
fs
mov
test
bound
les
lods
scas
mov
hlt
jp
sbb
dec
dec
add
add
and
dec
add
loope
dec
xlat
xor
and
icebp
push
mov
fwait
movsb
aaa
add
test
add
add
call
or
mov
xchg
ja
jg
sti
mov
pop
push
dec
testb
add
add
ffree
add
outsl
outsl
and
pop
rorb
clc
sbb
xor
jl
dec
fs
add
add
add
lret
fistl
mov
into
int
ficoml
sbb
adc
sti
imul
mov
add
ja
dec
jbe
mov
sub
out
cld
ss
adc
cmp
add
lea
es
add
add
push
mov
or
cmp
push
aas
and
adc
test
jg
jmp
xchg
outsl
movsb
leave
fwait
out
jae
add
add
jge
mov
mov
jbe
inc
sbb
push
mov
sbb
cld
cmc
and
add
fiadds
sub
jle
fs
shrb
or
mov
xchg
inc
mov
add
add
ds
test
inc
inc
imul
aas
out
cmp
mov
sbb
add
add
dec
sbb
ljmp
adc
insl
inc
outsl
stc
push
mov
jl
cmpsl
movsb
cmpsb
ss
push
mov
sbb
add
add
push
sahf
pop
lods
jmp
or
push
xchg
ja
adcl
stos
jno
mov
clc
push
dec
fisubrs
add
add
fbstp
xchg
jl
mov
mov
xchg
inc
loope
dec
jnp
call
xor
sbb
add
add
fwait
mov
dec
cld
cld
subl
aaa
mov
insb
nop
cltd
xchg
cmp
loopne
loope
add
add
sbb
stos
inc
outsl
jp
fistpll
mull
cmp
xchg
pop
sbb
or
add
add
rol
clc
shlb
mov
mov
inc
adc
add
scas
xlat
xchg
es
test
jg
push
ljmp
xchg
enter
mov
das
add
add
add
cmp
mov
inc
addb
ds
bound
arpl
shlb
ljmp
dec
divl
lods
stos
push
sbb
stos
push
dec
sti
mov
adcb
int3
add
add
pop
jbe
ret
insl
cmp
sub
iret
push
test
push
andl
fldl
add
icebp
not
push
dec
mov
sarb
rcrb
subl
add
push
out
sahf
mov
test
aaa
cmp
dec
add
aas
jbe
popf
inc
jg
xchg
add
add
out
xchg
sub
imull
mov
dec
mov
xchg
sub
add
add
mov
std
out
aaa
fs
mov
jecxz
xchg
test
movsb
dec
je
sub
pusha
jb
aam
add
add
jge
das
int3
jo
arpl
popa
std
out
push
rorl
clc
push
inc
cmp
aad
int3
leave
add
add
aad
stc
aaa
mov
xor
int3
cld
mov
add
test
sub
xor
add
add
mov
into
icebp
test
mov
lret
ja
adc
push
idiv
es
clc
adcb
jl
add
add
adc
mov
cld
cmpsl
addr16
add
pop
callw
jmp
addr16
xlat
jg
xchg
sub
lods
roll
add
or
mov
mov
mov
idiv
sbb
inc
lret
pop
jmp
push
jbe
add
add
add
cli
or
sarl
pusha
call
mov
popf
imul
push
cmp
out
add
add
jl
ficoml
addr16
fsub
mov
add
cmp
inc
mov
pop
sub
add
add
loope
dec
sbb
dec
pusha
or
inc
dec
mov
iret
dec
xor
add
aaa
addr16
xchg
push
fildl
add
add
scas
dec
cli
sub
in
ret
push
les
xchg
pop
xchg
idiv
push
aam
mov
ds
into
xchg
jl
push
and
add
add
xorl
push
loope
data16
push
push
mov
add
cmp
fldenv
lds
add
add
lock
adc
imul
mov
sub
rcl
or
pop
cs
cmpsb
sub
add
add
int3
es
cmpsl
or
jo
addr16
and
mov
sub
jmp
pop
adc
in
fcmovu
add
add
daa
xor
das
push
repnz
and
dec
sahf
in
push
mov
lea
dec
add
add
sub
pop
aaa
mov
add
push
jmp
lock
and
lret
mov
ret
sbb
cmp
add
add
ret
mov
xchg
test
xchg
int3
inc
call
sbb
inc
fiaddl
add
add
mov
inc
dec
fistpl
mov
ds
and
and
pop
cmc
std
add
aaa
aas
cmpsb
add
add
dec
push
push
mov
mov
mov
dec
pop
or
lds
lods
dec
push
inc
pushf
mov
les
fistl
pop
mov
sti
fistps
push
inc
jnp
xchg
xorl
bound
push
add
add
sub
test
jo
push
xor
jae
cmpsl
aas
cmpsb
cli
comiss
cmpsl
outsb
jge
add
add
adc
je
push
xchg
lock
sub
outsb
push
add
dec
xor
fisubrs
inc
dec
cmpsl
xchg
add
add
xor
repnz
outsl
out
pop
mov
ficoms
call
pop
inc
and
add
or
mov
sub
fcompl
push
mov
mov
mov
add
or
xchg
pusha
sbb
insl
sbb
dec
into
mov
ret
mov
mov
add
clc
mov
fldl
add
add
inc
in
mov
mov
lods
sub
xchg
sbb
fwait
inc
js
bound
add
add
bound
test
pushf
ret
xchg
dec
into
lea
mov
test
add
add
jnp
push
pop
or
repnz
movd
xor
dec
pop
dec
jnp
jns
vpsubb
add
add
mov
lock
inc
iret
sbb
cli
js
push
in
cli
mov
pop
sub
ss
add
orl
jbe
movsl
into
loope
mov
push
cmp
sbb
push
or
add
add
int
xchg
clc
and
add
mov
es
and
and
add
add
neg
cmpsl
arpl
dec
dec
imul
push
jo
add
sub
or
test
mov
incb
add
add
sub
and
sbb
mov
cmpsb
cmp
fwait
cmp
pop
jmp
mov
add
cmpsb
popf
mov
in
pop
dec
cmp
pop
ja
dec
pop
pop
mov
mov
testb
add
dec
shlb
push
add
pop
sub
aas
imul
sahf
sbb
aas
inc
xchg
faddl
add
add
pop
add
pop
outsl
decl
xchg
bsf
mov
push
add
add
inc
int
inc
aad
mov
push
cmpb
das
and
ret
cmp
push
roll
add
add
rcrl
aad
leave
sbb
mov
out
into
addr16
dec
cmpsl
test
inc
or
mov
mov
test
add
add
scas
scas
mov
or
sub
or
dec
push
loope
aam
dec
dec
std
xchg
push
push
dec
fisubrs
add
add
scas
pop
punpckhwd
xchg
adc
dec
and
pop
packuswb
fimuls
dec
add
add
dec
loop
ss
cs
repz
out
jge
sti
ljmp
adc
cmpl
add
xchg
cli
in
cmp
out
cmpsb
mov
xor
jmp
out
xchg
leave
ret
add
add
mov
lcall
pop
cmp
mov
sbb
mov
sub
into
scas
or
add
add
sbb
mov
cmc
mov
ss
dec
adc
cmc
cmp
std
jo
mov
push
mov
and
push
cmc
fs
hlt
jle
cld
cwtl
filds
in
add
add
pusha
xor
das
and
adc
test
orb
jns
and
sub
jne
fnstsw
jae
cmpsl
add
add
push
adc
iret
xchg
testb
movsb
imul
mov
rcrb
push
add
add
or
pushf
add
loop
xor
pmullw
pop
lods
inc
sbb
sahf
fnstsw
lods
ret
cmpsb
inc
mov
add
add
lock
adc
rorl
leave
faddl
sub
lahf
push
bound
arpl
or
push
add
add
pop
cmp
xchg
pop
inc
pop
inc
repnz
xchg
xor
push
pushf
dec
dec
pushf
xlat
sti
aas
loop
jb
add
add
jbe
xor
into
sahf
sub
rorl
lcall
pop
cmpsl
jns
add
add
ss
push
jp
dec
pushw
rolb
inc
xchg
and
cs
add
add
es
cli
es
cmp
in
and
dec
ret
add
add
loopne
out
add
cmp
mov
jp
xchg
sub
stc
dec
decb
add
add
push
push
jp
lods
ss
or
daa
stc
adc
push
mov
mov
inc
fsubrs
add
add
ljmp
in
inc
jbe
test
pop
aad
push
jae
inc
loop
jnp
add
add
daa
in
jp
movsl
iret
sbb
pop
cs
and
jp
lcall
cmp
sbbl
add
add
mov
out
in
dec
push
ljmp
mov
push
pop
mov
push
pop
add
add
idivl
imul
in
push
std
into
daa
sar
pop
out
imul
clc
jmp
add
add
push
push
push
xchg
xchg
push
pop
fs
xchg
and
scas
cmpl
lods
inc
jbe
cld
mov
or
mov
pop
inc
les
arpl
ja
jl
std
add
add
cld
mov
loop
fldl
push
mov
pop
push
divb
into
nop
mov
lds
dec
jmp
add
jae
pop
sahf
ljmp
push
js
pop
adc
jmp
inc
into
push
or
add
add
or
inc
add
adcl
leave
xor
push
cli
jg
add
xchg
pop
jl
add
add
and
xlat
mov
and
inc
cmp
add
add
xchg
insl
mov
dec
adc
add
add
and
jl
or
addr16
and
call
xor
in
push
mov
jmp
xor
xchg
add
mov
push
push
daa
or
inc
ja
push
shrl
mov
add
add
add
push
pop
adcb
sahf
cmp
and
repnz
out
inc
pop
shl
leave
and
nop
loopw
test
add
add
data16
sub
test
push
into
rcr
jbe
ds
shlb
dec
xor
cmp
add
add
stos
sti
std
mov
adc
pusha
cmp
push
inc
mov
int3
lods
ljmp
add
add
xchg
sarl
and
js
xchg
cli
lods
push
jl
ja
mov
jo
xor
add
add
pop
imul
stos
int3
cmp
fwait
push
addr16
cmp
mov
mov
or
ja
shl
add
add
outsb
sbb
jecxz
pop
pop
sub
xor
loopne
mov
sbb
stos
jmp
pushf
add
add
push
cli
stos
pushl
mov
rorb
xor
push
sub
add
sar
mov
aaa
faddl
dec
mov
add
add
mov
jae
ss
fmuls
add
rcl
test
imul
xchg
nop
into
or
add
add
cmpsl
lds
push
add
mov
jle
mov
scas
mov
add
add
add
inc
clc
outsb
shlb
in
jp
js
dec
add
or
mov
cmp
dec
jbe
cmpsl
lret
add
add
fistps
xorl
adc
push
and
push
repz
lods
lahf
add
add
pop
lods
fcmove
jl
xchg
in
test
xchg
ds
pop
cli
and
jmp
repnz
add
add
lahf
add
movsl
sbb
adc
hlt
pop
xorb
xchg
mov
add
cmp
dec
divb
add
bound
add
add
pushf
mov
sbb
fwait
stos
jmp
clc
int3
inc
sbb
pop
sbb
push
sbb
jne
testl
push
sbb
repz
daa
imulb
mov
jle
lahf
push
xchg
fildll
mov
mov
ret
adc
repz
mov
cli
mov
inc
notb
std
pop
fsubl
add
lret
arpl
xor
sbb
add
push
gs
mov
or
xchg
lock
scas
adc
or
mov
roll
clc
xor
inc
rolb
sub
movb
add
xor
add
xchg
cli
mov
adcl
iret
sub
ds
adc
add
add
testb
popa
adc
mov
sbb
fnstcw
stos
pushf
shll
cmpsl
add
add
add
push
pop
fidivl
xchg
xchg
or
push
aaa
add
rcl
dec
pop
mov
enter
cld
sub
stos
lcall
stc
repnz
arpl
call
cmp
or
into
cmp
lods
and
cli
add
add
push
fsts
mov
test
mov
sti
inc
and
pop
sub
cld
sarb
or
test
add
add
xchg
mov
fst
xor
and
pushf
ret
sbb
lods
and
arpl
iret
add
add
sub
clc
jmp
mov
les
and
rcll
mov
bound
arpl
sbb
outsb
notb
pop
or
popf
jo
sub
pop
dec
jae
dec
fwait
cmp
xchg
iret
orl
add
add
bound
ret
inc
jle
adcb
lahf
sbbb
xor
popf
lcall
andb
mov
orl
test
sbb
mov
dec
out
enter
jl
add
add
add
push
popa
and
and
jns
adc
pop
xor
mov
or
push
stc
add
add
addb
stos
imul
add
add
cld
nop
andl
sub
rolb
add
add
cmp
imul
push
xchg
pop
pop
add
mov
into
in
and
ja
pusha
add
add
xchg
call
ds
incb
adc
sub
je
cli
or
jle
repz
cli
add
add
xor
data16
popa
xchg
arpl
div
je
xchg
mov
dec
cmp
xchg
int3
cltd
cli
sbb
add
add
push
into
lcall
fimuls
inc
push
push
inc
pop
adc
inc
xor
mov
stc
scas
mov
scas
dec
jp
push
mov
mov
cli
xor
pop
ja
mov
or
sbb
cmp
add
add
inc
xchg
add
arpl
xlat
jg
sbb
jnp
ds
and
test
rclb
addr16
push
add
and
mov
mov
pop
shlb
mov
int3
lcall
dec
jge
add
add
dec
inc
pop
lock
lahf
cltd
rcrl
add
add
mov
push
rorb
add
sbb
movsb
mov
stc
shlb
push
lahf
cmpsl
push
cltd
stos
push
in
xchg
icebp
orb
movsl
add
add
jnp
mov
jne
lock
inc
jne
in
stc
inc
stc
bound
rcrb
or
xor
add
hlt
sar
pop
lret
das
mov
jne
mov
daa
dec
inc
jmp
xchg
imul
sti
inc
or
sahf
mov
add
cmc
add
in
dec
subb
pop
stos
rol
test
mov
mov
add
add
cmpsb
insb
stos
loop
addr16
and
imul
leave
stos
std
stos
inc
pop
mov
fistpll
add
add
cltd
xchg
pushf
cltd
pop
push
xchg
mov
mov
sub
fldt
pop
std
mov
fistpl
fisttpl
add
add
adc
notl
adc
mov
mov
pop
xor
fcoms
cmpl
add
add
inc
and
adc
xor
push
and
cmpsl
std
hlt
mov
or
push
popa
in
sbb
add
sbb
lods
mov
and
xor
mul
push
mov
fs
xchg
popf
cmp
add
add
cli
cmpsb
gs
xchg
jno
and
adc
push
lahf
dec
xchg
sub
aas
insb
mov
fldt
nop
add
add
push
xchg
push
dec
call
dec
fdivrl
into
jo
ljmp
mov
jne
add
add
loopne
jne
cmp
cmp
jbe
sbbb
inc
xor
aas
iret
nop
ret
test
mov
movl
aad
in
aad
aad
jo
xlat
aam
popa
cmc
pop
dec
sti
and
pushf
jecxz
stos
lahf
mov
add
add
negl
and
popf
jge
int3
xchg
shl
xor
insb
shll
js
cltd
pop
sbb
dec
add
add
jg
cld
clc
xchg
aaa
adc
cwtl
mov
xchg
sahf
mov
clc
cmp
add
out
and
testb
add
add
dec
divb
push
pushf
stc
push
mov
cmp
scas
cmpsb
sti
insb
or
movsl
adc
cmp
outsl
cmp
mov
add
push
and
incl
inc
into
sti
dec
sub
pop
pop
push
adc
jbe
inc
push
push
push
pop
pop
push
pop
pop
addr16
add
pop
push
out
enter
fnstsw
cmp
notb
clc
mov
inc
xlat
jg
mov
add
push
inc
inc
inc
dec
dec
inc
pop
pop
or
fbld
pop
lldt
add
add
inc
and
xor
add
and
or
push
add
add
add
or
and
push
add
add
pop
add
sbb
add
or
add
add
add
movlps
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
mov
add
add
add
add
enter
fimull
add
add
add
add
add
add
add
mov
cmp
add
pop
add
inc
stos
into
push
xor
sbb
clc
ljmp
xor
adc
xor
sbb
add
push
add
add
add
add
add
add
add
and
add
cmp
cmp
push
add
add
rorb
add
mov
add
add
insl
add
add
add
sub
jb
insl
add
pop
add
add
add
pusha
add
inc
pop
inc
add
lods
ds
roll
or
cld
cli
movsl
or
add
add
xor
add
add
add
add
add
add
rolb
add
sub
add
sbb
pusha
add
add
ltr
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
push
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
or
dec
add
addb
add
add
push
add
inc
mov
add
add
clts
add
add
add
add
add
add
and
and
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
xchg
add
add
add
sbb
add
or
add
add
add
add
dec
jno
dec
and
push
add
add
add
push
fldcw
stos
aas
or
cmp
icebp
add
cmc
xor
add
add
roll
or
or
adc
sbb
add
add
add
push
sbb
sbb
push
add
add
add
add
add
addb
pop
mov
sbb
or
adc
add
add
add
add
add
add
or
inc
add
add
sbb
add
add
add
daa
add
add
add
popl
add
popa
add
pop
add
sbb
sub
or
shll
arpl
or
jp
sbb
sub
add
add
add
add
jns
test
or
aas
add
add
add
or
or
adc
or
imul
jne
add
add
sbb
add
sbb
add
add
add
or
inc
add
add
add
add
xor
adc
pop
xchg
pusha
push
push
add
add
xor
add
test
cwtl
popa
int
add
sbb
addb
sldt
add
add
add
push
add
add
aam
add
add
sbb
add
and
or
cmp
or
dec
add
add
mov
enter
add
mov
xor
add
sti
insl
pop
add
jno
pop
and
and
or
xor
stos
lldt
add
shl
add
add
xor
add
push
sbbb
add
add
imul
add
pusha
je
xor
add
add
add
or
dec
cltd
add
or
add
add
xor
or
ret
nop
or
xor
push
jmp
dec
add
add
add
jmp
fsubl
push
add
add
add
add
add
pop
add
mov
ltr
push
sbb
push
addl
add
dec
add
add
add
add
sbb
add
add
add
sub
rclb
cmp
inc
add
add
add
mov
jmp
dec
add
add
data16
add
add
add
cmp
mov
cmp
add
add
sub
or
add
inc
push
adc
mov
aaa
add
add
add
insb
add
add
or
adc
adc
sbb
pop
add
jmp
jg
daa
add
add
dec
sar
push
add
add
xor
add
push
add
push
add
and
xor
inc
add
mov
adc
adc
add
add
js
sbb
or
xor
or
and
les
or
add
add
add
add
or
sbb
add
push
jne
mov
or
xor
xor
xchg
add
negl
jae,pt
add
add
lock
add
add
add
add
add
add
add
add
add
or
add
add
add
rolb
add
add
add
jg
sbb
pop
incb
push
add
add
add
and
icebp
xor
pop
add
sub
xorb
add
add
cwtl
pop
or
mov
ljmp
call
or
mov
add
push
cmp
icebp
adc
mov
or
and
push
add
or
or
aas
or
adc
cmp
sbb
add
dec
and
sbb
add
and
or
sbb
or
sub
add
movl
aas
sub
add
mov
and
pop
adc
dec
adc
out
aaa
sbb
rolb
cmp
test
js
sub
aas
add
or
adc
pushf
push
adcb
add
add
add
add
push
or
test
add
add
add
int3
ret
add
add
add
add
add
pusha
add
xorb
add
jo
add
loopne
add
and
add
add
add
add
add
add
add
mov
add
dec
add
addb
add
add
add
add
add
add
add
sbb
add
add
add
add
in
add
add
add
add
add
add
add
nop
add
addb
add
mov
add
add
add
add
add
add
add
or
add
loope
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
lea
add
clc
add
addb
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
or
add
add
test
add
pop
add
add
add
add
add
add
add
inc
add
sub
add
adc
add
and
add
add
add
add
add
rolb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
clc
decl
clc
decl
mov
jg
xchg
popl
add
xchg
popl
add
mov
jg
xchg
popl
add
xchg
popl
add
mov
jg
xchg
popl
add
xchg
popl
add
mov
jg
clc
div
add
jg
clc
divl
add
ja
ja
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
rorb
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
mov
mov
add
add
clc
clc
clc
clc
add
add
clc
clc
clc
clc
add
add
clc
clc
clc
clc
add
add
clc
clc
clc
clc
add
add
clc
clc
clc
clc
add
add
mov
mov
add
add
js
js
js
js
js
clc
add
add
incl
mov
add
add
js
js
js
js
js
clc
add
add
incl
mov
add
add
js
js
js
js
js
clc
add
add
mov
mov
add
add
js
js
js
js
js
clc
add
add
incl
mov
add
add
js
js
js
js
js
clc
add
add
incl
mov
add
add
js
js
js
js
js
clc
add
add
mov
mov
add
add
js
js
js
js
js
clc
add
add
incl
mov
add
add
js
js
js
js
js
clc
add
add
incl
mov
add
add
js
js
js
js
js
clc
add
add
mov
mov
add
add
clc
clc
jg
jo
add
pop
clc
clc
jg
add
add
pop
clc
clc
js
add
add
pop
clc
clc
pushl
add
add
pop
clc
clc
pushl
add
add
pop
ja
ja
ja
ja
ja
add
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
add
jmp
add
incl
add
add
add
adc
add
add
sub
add
add
and
adc
add
add
call
add
add
add
add
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
je
jne
je
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
insb
gs
or
and
and
and
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
and
and
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outsb
outsw
ds
jae
gs
bound
mov
insb
out
add
add
out
add
add
add
out
add
add
add
lcall
add
out
add
jb
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
mov
cmpb
pushl
call
pop
pop
andl
cmp
je
xchg
mov
mov
rolb
test
add
or
add
push
add
pusha
mov
mov
cld
lods
test
je
xor
lea
movsb
cmp
jae
add
add
and
add
jae
call
xchg
call
dec
dec
inc
inc
shl
lods
inc
push
mov
sub
add
add
rep
pop
jmp
add
jne
xchg
lods
xchg
add
inc
ret
xor
inc
call
adc
call
addb
add
ret
sub
mov
popa
ret
add
add
add
outsl
mov
add
rolb
add
out
add
add
add
lea
add
add
jo
add
mov
rolb
pop
add
xor
ret
xadd
add
add
mov
or
add
add
adc
add
incl
addb
jb
add
add
jg
in
adc
sbb
add
adc
sbb
add
sbb
add
add
sbb
das
adc
add
jge
add
test
or
or
add
adc
or
add
add
add
js
aaa
or
add
add
adc
add
add
add
call
dec
adc
adc
adc
add
add
sub
cld
mov
mov
mov
add
lea
lods
stos
add
cmpl
je
mov
test
je
mov
add
mov
add
rep
mov
lea
add
add
add
add
add
lea
push
call
mov
test
je
or
add
push
xor
push
push
lea
push
push
dec
push
call
add
je
sub
or
mov
push
push
push
xor
pop
stc
das
add
pop
nop
add
inc
addl
pop
call
test
je
dec
mov
mov
push
adc
and
push
call
mov
add
add
add
xor
add
push
call
add
add
add
test
je
push
push
call
add
add
test
je
mov
mov
test
jne
lea
jmp
test
add
add
loope
jg
lea
push
lea
push
call
inc
lock
jmp
mov
add
inc
inc
push
push
lea
or
adc
addb
test
sub
cltd
das
add
pop
lds
jnp
mov
add
add
ja
adc
dec
inc
mov
add
movb
add
sub
mov
mov
add
pop
cmp
pop
iret
push
call
push
push
add
adc
pushl
xor
or
pop
pop
pop
pop
ret
push
mov
add
push
and
add
push
push
or
sub
mov
mov
add
push
call
add
inc
cld
mov
mov
add
add
xor
add
je
push
mov
add
push
pushl
call
add
add
stos
pop
add
jmp
add
add
jne
pop
pop
pop
leave
ret
pop
clc
push
push
push
mov
add
add
mov
mov
cmp
je
mov
test
je
add
mov
sub
mov
lods
mov
add
add
dec
ficoml
aas
mov
sub
test
je
movw
lods
cmpw
je
add
add
add
mov
mov
and
add
shr
cmp
jne
mov
add
add
pop
dec
dec
jne
jmp
jne
jne
mov
mov
pop
sub
add
mov
jmp
and
push
sti
call
xor
add
add
leave
add
je
pop
incb
xchg
add
mov
movzwl
ljmp
jne
test
mov
add
add
xor
mov
movzwl
mov
add
cmp
jge
mov
inc
movzbl
add
sub
mov
add
add
je
dec
mov
jne
mov
cmp
jne
shr
rol
xchg
sub
mov
add
addl
add
movb
add
jmp
pop
pop
xor
add
je
cmp
je
lcall
add
mov
jmp
push
mov
mov
add
sub
movl
jbe
push
push
call
pop
add
dec
jne
mov
add
loopne
xchg
pop
in
addl
fimuls
mov
adc
dec
push
mov
mov
mov
add
mov
and
add
sar
rep
add
and
rep
mov
adc
mov
sbb
add
sbb
mov
add
mov
xor
ret
sbb
pop
aas
push
dec
jne
outsl
mov
cmpsl
push
add
inc
add
push
nop
je
add
xchg
in
mov
mov
sub
mov
mov
add
in
cmpsb
add
mov
mov
dec
mov
inc
dec
add
push
push
pushl
call
push
pushl
pushl
incl
and
rorb
xor
add
je
sub
popl
jmp
push
add
lret
mov
add
cmp
jne
add
jmp
mov
lea
add
loopne
sub
mov
dec
pop
pop
pop
sub
or
or
pushl
rolb
pop
pop
pop
xor
inc
jae
ljmp
add
lcall
cmp
jne
cmp
je
add
je
add
mov
add
mov
inc
add
adc
jnp
push
push
push
push
call
dec
xchg
add
adc
sbb
adc
add
push
add
xor
mov
inc
mov
pushl
call
inc
add
jae
pushf
test
jne
dec
jne
xor
push
adc
cmp
adc
push
adc
shlb
mov
test
addl
push
jne
mov
insl
mov
inc
push
jle
add
and
push
mov
add
xor
mov
add
or
push
inc
inc
cmp
test
je
mov
mov
ret
add
add
lods
test
add
lret
or
sub
mov
xor
pop
pop
add
or
add
sub
or
add
inc
cld
insl
or
adc
sbb
or
inc
cmp
dec
adc
jl
sbb
shr
roll
movl
inc
cld
push
je
xchg
aad
add
mov
test
je
sub
insb
or
adc
jne
sbb
adc
push
adc
lock
and
insl
inc
shlb
and
and
adc
add
cmp
mov
push
xor
pop
les
add
add
jbe
add
insl
add
jo
imul
and
jb
jb
arpl
add
add
jne
je
add
and
outsl
arpl
jne
and
jne
and
sub
add
je
bound
insb
outsl
arpl
gs
and
and
and
add
jb
imul
xor
add
gs
xor
add
add
dec
gs
popa
addr16
outsl
js
add
jo
imul
gs
gs
xor
add
add
add
js
je
jae
add
outsl
jae
dec
popa
outsb
fs
add
outsb
add
or
pop
inc
gs
outsl
fs
sbb
push
imul
jb
je
add
add
je
dec
jae
bound
addr16
jb
jae
outsb
je
inc
jb
popa
je
inc
imul
inc
jne
cmp
insb
insb
add
push
gs
jo
addb
outsw
jb
and
gs
fs
xor
push
add
push
jne
jb
sbb
add
inc
add
add
add
add
mov
add
call
add
or
add
adc
call
add
inc
das
add
pop
rcrb
add
mov
lea
add
lea
fcoms
das
add
xor
das
add
in
add
cmc
xor
add
ficomps
adc
sbb
add
add
add
je
and
jl
sub
lods
test
je
xor
lea
movsb
cmp
jae
call
jae
call
xchg
call
dec
dec
inc
inc
shl
lods
inc
push
mov
sub
rep
pop
jmp
add
jne
xchg
lods
xchg
add
inc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
aam
add
test
add
xchg
add
add
lock
sub
add
sub
add
add
inc
add
out
add
add
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
pop
xor
cmp
jne
mov
push
push
mov
add
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
add
add
add
mov
repnz
add
add
add
xchg
add
js
add
pop
aam
add
add
add
into
stc
add
jmp
icebp
add
add
add
dec
out
mov
