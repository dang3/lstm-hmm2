call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
sti
ficompl
mov
mov
stos
mov
es
push
dec
push
outsb
jae
data16
ds
cs
incb
mov
mov
es
cmp
outsb
jbe
add
push
ds
cs
js
or
fs
cwtl
out
scas
cli
mov
pushf
ss
dec
insl
jo
addr16
dec
cmp
dec
xor
shrb
mov
outsl
add
cmp
test
shll
or
cmpsb
mov
add
mov
repz
push
xlat
mov
arpl
mov
xchg
xchg
cmpsl
push
push
jle
xchg
ja
dec
cmc
jbe
fstps
jg
nop
mov
jmp
movsl
ljmp
jmp
shr
testl
jne
push
cmp
addl
push
xor
pop
xor
inc
adc
lods
gs
xchg
jg
push
idivb
sbb
sahf
add
sbb
insl
xor
imul
aas
scas
into
or
push
add
jbe
dec
adc
push
inc
test
out
xchg
mov
out
negb
jle
les
out
jl
push
push
and
push
and
mov
cwtl
cmp
jmp
inc
pop
pop
or
dec
add
cwtl
cs
lea
lahf
int3
xchg
mov
aas
cmp
push
add
pop
pop
pop
les
movl
ss
es
push
jle
outsb
jbe
pushw
push
ds
cs
cmpsb
into
xchg
incb
mov
mov
es
push
jle
outsb
jbe
pushw
push
ds
cs
bound
mov
pop
mov
xor
out
fsqrt
loop
cmc
mov
data16
or
jp
int3
sbb
imul
ljmp
mov
xor
xchg
xchg
mov
xchg
mov
push
ret
and
loope
mov
mov
cmp
data16
pusha
mov
mov
push
imul
outsb
out
push
addr16
mov
pop
in
test
mov
jns
daa
cld
dec
sbb
js
or
and
adc
stos
dec
adc
add
test
mov
mov
scas
jle
cmpsb
movsb
mov
jle
xorb
dec
pop
leave
xlat
cmp
mov
cmp
dec
ds
dec
aas
scas
jne
add
cmpsb
inc
and
rcrl
and
daa
add
clc
inc
ficomps
out
push
ficompl
adc
or
adc
jle
cmp
sbb
dec
ljmp
pop
dec
or
xor
push
jnp
sub
push
jae
loopne
inc
arpl
xchg
fisttpl
aas
scas
test
cs
pop
or
add
lods
jae
add
fiadds
xchg
push
sti
cmpsb
mov
push
mov
ss
pop
and
inc
push
into
or
and
aas
jno
push
jl
lods
mov
inc
mov
sbb
lea
loopne
andb
adc
mov
jecxz
fbstp
ja
mov
cmp
adc
or
cld
int3
insl
xchg
xlat
xor
lret
shlb
push
jns
shll
xor
and
jecxz
cltd
popf
pop
repnz
jmp
js
int
js
test
call
shl
dec
mov
dec
aas
pop
cmp
push
sub
in
adc
cmp
cmp
scas
xor
lahf
imul
mov
imulb
subl
jnp
mov
fs
insb
scas
repnz
pop
in
adc
mov
fisttpl
sbb
lret
les
xchg
stc
inc
das
dec
insl
fsubs
cmp
std
fwait
pop
cmp
mov
xchg
xor
std
cmp
cmp
cmpsb
insb
add
sahf
ret
adc
xor
push
movsl
mov
lea
bound
ds
nop
ljmp
mov
icebp
xchg
or
cld
push
xor
pop
jecxz
add
xor
mov
push
adc
cs
outsb
pop
icebp
scas
inc
or
mov
sub
out
rolb
add
sbb
test
std
sahf
inc
lods
in
jmp
xlat
movl
adc
xor
lret
int
pop
ja
je
sub
stc
rclb
mov
xchg
xchg
sub
sub
dec
fldenv
pop
mov
add
inc
mov
push
and
mov
adc
or
sub
adc
pop
jmp
iret
sbb
loop
arpl
aam
sub
pop
pop
lahf
repz
mov
test
data16
cltd
mov
mov
jl
sbbb
and
jno
movsl
arpl
xchg
inc
dec
cli
enter
inc
or
aam
and
sub
les
jmp
adc
fisubl
mov
xchg
jecxz
xor
fsub
ficomps
movsb
inc
pop
xlat
lods
les
dec
fisttps
inc
mov
negl
mov
pop
sbb
js
cmp
out
movsl
push
cwtl
clc
inc
das
and
pop
jge
std
jne
adc
and
repz
and
aam
xchg
imul
add
fs
xchg
iret
subb
test
mov
scas
pop
jb
add
cmp
add
push
xor
into
xchg
into
sub
pop
mov
cmc
cmp
mov
jo
ror
xor
push
fcompl
in
or
stos
lods
inc
sarl
xchg
sti
mov
dec
shrb
ljmp
daa
jmp
call
cmpsb
movsb
cmp
xor
add
sbb
adc
xchg
int
stos
mov
call
add
mov
cmp
pop
xor
sub
cmpl
in
orl
cmp
jge
or
cmp
js
jp
cwtl
push
enter
scas
xchg
mov
movsb
jmp
neg
rcrl
fmul
push
jg
cmc
add
int
adcb
xchg
cmpb
das
sub
lds
repz
inc
cli
sub
pop
sbb
std
sub
mov
aas
push
mov
js
movsl
out
xchg
mov
push
adc
pop
std
inc
mull
leave
jbe
xchg
dec
ret
loop
dec
and
cmp
mov
in
jns
fdivrl
mov
popf
adc
loop
push
fs
stos
dec
push
mov
push
leave
dec
nop
das
lea
mov
mov
out
cmc
mov
lcall
sbb
sbb
orb
cmp
jo
push
xor
and
shl
fsubs
cmpsl
xchg
add
sub
add
pop
call
repz
dec
jmp
movsb
inc
adc
cmpsl
mov
in
jb
fsubrs
je
addr16
sarb
pusha
cs
mov
stos
arpl
mov
push
data16
pop
loope
sahf
dec
je
outsl
sti
pop
imul
mov
xor
xchg
adc
or
pop
push
ljmp
repz
or
jp
daa
mov
mov
int3
clc
cmp
add
pop
sub
sbbb
loope
jb
stos
enter
test
push
dec
adc
push
sub
mov
push
mov
mov
mov
xchg
jp
cmp
xchg
and
inc
and
jbe
sbb
out
mov
push
jne
add
sbb
dec
fcoml
and
rorl
mov
fsts
push
or
xchg
xor
rorb
out
mov
xor
push
addl
pop
clc
ss
aaa
mov
js
adc
orb
sarb
lds
push
xchg
mov
div
gs
or
sub
adc
jbe
outsl
mov
movsb
popf
cmp
cmpsl
add
and
dec
arpl
lea
lret
mov
pop
push
ss
mov
inc
jmp
jne
dec
jno
adc
pop
pop
cmc
mov
adc
or
gs
fnstenv
inc
insb
cmp
daa
outsb
push
mov
xor
inc
mov
mov
fmull
in
add
adc
mov
pop
mov
jne
dec
lret
or
call
fistps
sub
push
movsl
pop
or
push
out
call
js
mov
sbb
sub
in
inc
inc
aas
xchg
fistpl
push
xor
cmpb
adc
aam
push
cwtl
push
testl
jp
test
mov
loopne
cmp
test
pop
jle
mov
mov
mov
sbb
rol
rcrl
js
clc
xlat
mov
and
movsl
and
mov
push
sub
xchg
popf
int3
int3
mov
stos
out
fiadds
push
leave
insb
call
into
hlt
and
sbb
pop
out
xchg
movsl
aas
in
fidivrs
mov
and
xchg
push
sbb
sbb
mov
inc
or
add
cltd
cmpsb
mov
pusha
and
negl
push
push
add
pop
nop
lea
cmpsb
mov
and
sub
insl
sub
push
cmp
cmpsb
cmp
sbb
mov
xchg
mov
test
jecxz
xor
shll
sbbl
push
out
dec
cmp
pop
jmp
mov
lea
movsb
sar
sbb
rclb
rcrb
xchg
sub
leave
mov
fldenv
mov
in
or
in
repnz
aam
cmp
lock
push
sub
daa
sub
push
inc
mov
pop
pop
ftst
xchg
lock
sbb
xchg
loopne
push
mov
loop
sbb
fnstcw
jbe
ret
int3
dec
jo
push
sub
dec
add
loop
subb
mov
jbe
mov
sub
adc
xor
leave
sbb
aaa
pop
loop
xchg
loop
sub
push
test
fwait
inc
inc
push
daa
jg
mov
jmp
jne
add
pop
sbbl
test
fisttpll
imul
lcall
fidivrl
jg
aaa
sbb
icebp
jmp
arpl
arpl
fld
sub
xchg
and
pop
ja
lea
jg
pop
jne
sbb
sub
cmp
and
je
push
inc
daa
and
jbe
cli
or
cld
add
cwtl
inc
ret
jle
dec
dec
mov
pop
jp
pop
in
push
jne
test
adc
sub
shlb
loopne
jnp
ja
jg
xchg
lret
das
fnstcw
mov
clc
pop
cmp
mov
fsubr
lods
mov
loope
mov
inc
dec
dec
inc
push
das
jmp
cli
cmp
std
subb
leave
out
jno
mov
push
lret
dec
pop
out
or
lods
and
lcall
sub
dec
sbb
movsl
fildl
cltd
or
dec
clc
pushf
mov
in
ret
mov
sub
and
fstpl
out
and
lds
dec
push
test
mov
add
mov
xor
cmp
jns
roll
scas
cltd
ds
enter
dec
xchg
xchg
in
gs
pop
ret
test
popf
fdiv
mov
ljmp
dec
xor
loop
daa
js
sahf
mov
sarb
lods
pop
stos
lock
shrl
pop
fldl
pop
sbb
rorb
push
rolb
mov
jne
in
test
sub
arpl
cmp
sub
add
test
mov
xchg
mov
mov
mov
ljmp
inc
addl
xor
mov
mov
std
out
idiv
xadd
cmp
negl
add
inc
cmp
add
sbb
mov
leave
mov
pop
pop
push
pop
and
dec
xchg
mov
adc
add
loopne
loop
lods
data16
cmp
add
xchg
mov
or
enter
sub
cwtl
or
push
ja
retw
pop
jp
sbb
cmp
mov
mov
mov
loope
cmp
adc
inc
les
and
push
push
hlt
imul
arpl
fcompl
in
cwtl
cmp
dec
jp
aam
int
jo
cmp
dec
test
sbb
sub
adc
jae
push
es
and
pop
adc
mov
jnp
and
mov
insl
test
jae
ja
sub
call
and
test
es
xorl
mov
cmpsl
jle
sahf
fstl
fwait
jecxz
call
push
mov
pop
movsb
jnp
sbb
lahf
hlt
in
in
inc
int
sub
rcrb
lret
cmp
inc
dec
inc
dec
xchg
arpl
sbb
mov
data16
jns
movsl
push
pushf
cwtl
cmp
mov
xchg
sub
xlat
adc
xchg
outsb
pop
lods
pop
jo
popa
mov
je
dec
fsts
push
fidivl
fisttpl
dec
leave
pusha
jmp
ja
test
push
mov
nop
adc
xchg
je
sub
outsb
ds
shr
or
dec
mov
fimuls
out
aas
or
mov
rorb
test
fisttps
sti
jne
fisttps
out
jno
imul
xchg
jns
xchg
cmc
lahf
mov
addr16
mov
popf
xor
loope
and
bound
jg
fcompl
lahf
subl
subl
imul
rcr
push
pop
aaa
mov
sub
pop
cwtl
xor
sbb
mov
rcrb
call
aad
rcrb
sub
mov
cmp
inc
xor
movsl
sbb
sbb
popa
fs
lods
out
fwait
and
repnz
stos
testb
mov
lods
xorb
jmp
dec
pop
mov
pop
lret
aas
lahf
mov
fwait
hlt
jo
test
cmp
imul
stos
ljmp
dec
aad
aam
xchg
out
push
addr16
push
fcmovu
mov
inc
lea
orb
xor
jge
insb
push
mov
mov
push
cmp
into
scas
stos
adc
shll
inc
cmpsl
pop
lret
cmpsb
mov
dec
movsb
loop
mov
popf
xchg
sub
test
push
xchg
xchg
lock
push
sbb
mov
pop
das
push
inc
clc
xor
out
popa
adc
into
iret
mov
sbb
movsl
fisttps
pop
rolb
jl
enter
in
out
sub
push
ret
push
inc
mov
shr
scas
imul
push
cmp
adc
sbb
lods
pop
cmp
cmp
mov
cmp
data16
stc
push
divl
enter
cld
stos
leave
bound
aaa
mov
xchg
and
ljmp
sub
jle
and
mov
leave
rcrl
add
jp
push
and
sub
add
loope
adc
adc
push
add
fiaddl
sub
clc
mov
sbb
xchg
int3
testb
jbe
and
adc
shrl
jae
das
cmc
int
jne
into
inc
xchg
mov
mov
inc
movups
inc
aaa
daa
imul
stc
push
stos
pop
pop
mov
cmp
lods
mov
pop
or
push
adc
ljmp
js
test
xchg
ljmp
cli
arpl
xchg
lods
fsubp
push
mov
adc
in
outsb
xor
fcmovnbe
icebp
mov
push
out
hlt
rcr
nop
dec
pop
xchg
andl
mov
call
sbb
jns
cwtl
add
jg
pop
cmp
outsl
shll
xchg
inc
icebp
cmp
push
xchg
cmp
ss
ret
add
pop
mov
push
pop
nop
push
lods
rcrl
imul
push
repnz
add
pop
lods
xchg
lock
in
sub
fcmovnu
mov
cmpsl
lods
loope
lret
cli
sub
std
loop
ja
mov
lods
scas
xchg
sub
fistpll
repnz
cmpsl
cltd
cli
cli
aam
test
dec
and
xlat
in
decb
stc
jle
push
xlat
nop
mov
jge
and
adc
daa
outsb
fisttps
gs
rclb
jbe
pusha
nop
je
stos
test
in
icebp
lret
mov
mov
hlt
outsb
bound
adc
mov
hlt
jmp
sub
insb
aaa
lcall
notl
out
ret
sbb
fdivs
mov
fyl2x
shll
shr
cmp
cwtl
and
ss
jl
pushf
stos
sub
popa
test
pop
xor
out
ja
sbb
scas
adc
jb
xchg
fdivrp
or
cli
sbb
jb
sbb
stc
ror
jb
lcall
jns
xchg
scas
ret
dec
mov
xchg
adc
clc
je
xor
mov
out
xor
gs
inc
add
clc
mov
mov
out
pop
dec
andb
sub
icebp
mov
loop
adc
setb
movsl
mov
in
xchg
push
ljmp
in
sbb
roll
lds
popf
pop
jb
lea
inc
lock
repnz
imul
stos
sub
mov
mov
loopne
mov
dec
pop
adc
iret
xchg
add
push
add
xor
loope
jecxz
test
push
adc
rcll
adc
add
push
xchg
fistl
adc
divl
iret
mov
add
adc
call
mov
dec
ret
rcll
xchg
flds
sti
xchg
scas
adc
pop
popa
dec
xor
ret
mov
clc
test
mov
pop
mov
adc
pop
cmp
push
mov
or
es
dec
push
pop
mov
or
jno
mov
popf
jno
push
mov
in
inc
sub
xlat
and
shr
adc
test
out
scas
enter
mov
sub
adc
repz
movsb
adc
cmp
imul
or
pop
outsb
int
pop
pop
adc
imul
push
pop
pop
cs
pop
mov
inc
sbb
insb
adc
inc
cmp
inc
jmp
push
sub
shrb
mov
lds
lds
pop
jmp
jo
pop
mov
xchg
lret
push
lcall
test
leave
push
push
fdivrs
or
pop
inc
mov
adc
icebp
cmp
mov
xchg
fwait
ja
lock
stos
test
addr16
in
mov
jle
scas
jae
adc
and
outsb
jbe
cmp
call
les
mov
push
sahf
dec
add
sbb
shlb
jae
inc
xlat
test
out
sub
push
inc
add
inc
pop
inc
push
sti
fsubrl
aam
and
in
movsl
xor
or
mov
sbb
xchg
ja
inc
lea
insl
out
mov
insb
notb
arpl
cmp
ret
cwtl
jnp
pop
jbe
push
sbb
mov
or
dec
pusha
lret
int3
push
nop
aas
push
adc
sbb
mov
ja
in
subb
jbe
and
sub
aaa
das
dec
push
or
pop
lret
aad
inc
imul
xchg
lock
pop
sbbb
lock
pop
lea
cld
add
mov
ficoms
into
imul
and
jnp
push
xor
sub
and
jmp
test
xchg
dec
in
add
adcl
jno
push
out
stos
dec
ljmp
cmpsl
nop
cltd
jg
and
push
lcall
rclb
add
repnz
add
sub
mov
ds
fdivrp
xchg
sbb
jge
fdivrp
sbb
mov
xchg
lods
and
and
test
outsl
xor
mov
push
jecxz
sbb
jo
test
and
rclb
fld
mov
stc
lcall
aad
xchg
mov
into
sbb
dec
mov
ret
xor
repz
mov
popf
lods
mov
loope
pop
imul
pop
fcoms
test
jp
or
les
cmp
arpl
pop
mov
nop
inc
cwtl
aad
cmp
sub
xor
jg
bnd
jp
fisubrl
xor
jg
int3
cld
dec
gs
jno
push
and
cld
sahf
mov
pop
jp
xor
add
pop
inc
popl
push
mov
out
lahf
roll
or
out
lea
cmp
cmp
shl
mov
lahf
mov
add
fisubrl
pusha
push
mov
stos
testl
mov
add
mov
repz
shrl
mov
sbb
dec
sub
mov
in
mov
push
mov
bound
inc
pop
mov
xor
in
shl
mov
xlat
bound
lds
test
and
xor
aaa
test
rol
push
or
loop
shrb
mov
and
adc
std
lods
pavgb
iret
addr16
cltd
and
imul
out
nop
jno
jge
sub
les
add
mov
adc
xor
repnz
int
mov
int3
gs
push
das
jge
and
lods
xchg
or
mov
pop
mov
xor
cmp
insb
mov
jne
push
into
dec
ds
jmp
out
outsl
xchg
imul
cmc
outsl
or
cmp
xor
out
ret
sub
xor
test
sbb
repz
mov
adc
jp
dec
mov
mov
cmp
sbb
pop
enter
mov
inc
mov
push
sub
push
outsb
jecxz
xor
xor
repnz
push
cwtl
inc
cmpb
or
jmp
cmp
pop
sahf
sbb
repnz
imull
fs
inc
mull
pop
jle
das
insb
shl
dec
xor
and
jl
rcrl
jg
lds
adc
push
inc
in
int3
loope
cmpsl
pushf
and
cmp
adc
inc
dec
add
mov
movsb
xchg
mov
cmp
pushw
leave
out
into
in
fs
inc
aaa
push
jge
test
xlat
cmpsb
das
jecxz
nop
clc
xor
data16
test
and
out
xor
shlb
stos
imulb
nop
ret
gs
or
jp
jno
scas
loope
pop
cmp
in
push
sub
bound
xor
mov
cs
cld
and
xor
movsl
mov
push
fstl
sub
shll
and
movsl
sub
cmc
rcll
data16
sti
lcall
mov
es
push
jle
outsb
jbe
pushw
push
ds
cs
cmpsb
into
xchg
incb
mov
mov
es
push
jle
outsb
jbe
pushw
push
ds
cs
movsl
rolb
loop
mov
es
pop
jle
addr16
jg
push
aaa
jbe
scas
cmp
scas
negb
inc
outsb
mov
push
sbb
data16
jbe
inc
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
dec
insl
pop
subb
mov
pop
mov
fisttpll
in
and
and
bound
subb
mov
sub
adc
add
adc
and
jb
bound
xorb
mov
xor
icebp
cmp
adc
sub
and
bound
xor
insl
or
pop
cmp
cli
and
mov
je
mov
mov
int3
iret
mov
pop
daa
pop
sbb
push
xchg
hlt
ljmp
lea
lods
jb
das
mov
mov
into
test
push
lcall
cmpsl
lea
inc
lods
mov
andb
add
stos
cmp
inc
inc
fdivr
fcom
add
jb
popf
mov
sbb
dec
popf
inc
repnz
jecxz
lahf
sbb
in
ja
and
popf
iret
push
jb
popf
movsl
popf
mov
imul
enter
adc
nop
daa
lods
xor
add
aaa
lods
lea
xchg
insl
mov
or
sti
aam
lds
cmc
sub
cmp
jb
push
and
cmp
jle
jnp
pusha
sahf
cmp
jp
addr16
dec
lea
clc
adc
jb
mov
cmp
add
or
lock
imul
lea
imulb
sub
xor
add
adc
ret
cmp
add
xor
and
jb
bound
pop
subb
mov
sub
adc
add
xor
and
jb
bound
jb
rclb
jg
das
dec
clc
or
test
jbe,pn
leave
imul
rorl
out
pop
mov
xchg
std
adc
das
push
sub
mov
inc
jl
push
outsl
imul
test
pop
xchg
mov
lock
pop
cs
stos
mov
mov
inc
dec
sbb
or
mov
daa
adc
push
call
cmpsb
das
aad
stos
imul
jg
in
mov
adc
push
cmp
jne
xchg
or
fdivl
pop
dec
test
xchg
or
xchg
push
push
std
aad
cmpsb
out
popf
push
sub
loopne
lock
aaa
adc
push
testb
or
sbb
pop
mov
dec
add
test
leave
bound
cmpsb
mov
xchg
sbb
fisttpll
mov
out
xchg
scas
rolb
shld
cwtl
cmp
inc
hlt
out
aaa
sti
add
mov
push
dec
or
fs
mov
jbe
jb
aaa
rolb
xchg
jg
adc
push
mov
sub
mov
js
mov
sub
call
pop
aad
je
jbe
test
cld
mov
mov
push
das
lods
push
pop
push
in
pop
out
cltd
add
cmpsl
mov
jns
pop
adc
xchg
add
sub
cli
jle
incl
pop
jecxz
test
jae
fwait
shrl
mov
cli
adc
movsb
sbb
cmp
stos
rorb
mov
cltd
xchg
fdivrl
out
jmp
ffree
std
mov
repz
hlt
pop
loopne
orl
pop
dec
in
sub
adc
adc
fs
mov
pusha
lcall
frstor
adc
cmp
int
push
mov
jle
ret
lods
xchg
fildll
test
sub
pop
pop
mov
adc
pop
clc
push
jmp
movsl
mov
sub
jl
or
rorl
loop
enter
sub
or
fisubrl
jb
inc
fimuls
fcoml
jg
mov
sub
mov
dec
inc
daa
nop
mov
push
inc
dec
dec
aad
rcl
call
pop
push
add
jge
popa
mov
dec
ja
subl
mov
cmp
add
pop
jge
lahf
adc
push
insl
filds
popa
std
aaa
cltd
xor
mov
jno
mov
ljmp
adc
addr16
push
cmp
lock
nop
fstpl
inc
out
ja
or
or
sub
imul
andl
push
push
arpl
inc
sbb
into
sbb
sahf
mov
xlat
xchg
int
test
negb
int
xchg
int3
fsubrs
push
jns
or
std
jg
sbb
add
pop
cmp
movsl
adc
xchg
aas
cmp
and
pusha
xchg
lea
adc
adcb
pusha
fimuls
sub
movsb
or
stos
push
fwait
push
push
add
in
jae
daa
mov
ss
stos
lret
or
jecxz
inc
cmp
mov
cmp
loop
out
sub
cmp
sub
das
shrl
cmp
and
notl
mov
sub
dec
pop
in
inc
xorb
xor
jns
scas
mov
pop
lods
dec
mov
out
cmpsb
mov
into
sub
pop
sbb
in
mov
subl
ja
xor
mov
jmp
xchg
pop
lea
mov
add
jp
lcall
bnd
fs
iret
inc
lahf
xchg
inc
aad
mov
xchg
rorb
pop
dec
or
xchg
arpl
mov
cld
sbb
std
hlt
mov
xchg
aam
xor
fistps
pop
ret
inc
stos
jge
das
push
test
fstpt
imul
gs
mov
or
stos
or
sub
or
or
cmpsb
sbb
jne
cmp
jle
ja
fwait
xchg
mov
pop
daa
adc
test
add
std
cltd
xchg
add
cltd
inc
sub
xor
add
sub
jecxz
rcrb
cs
adc
loope
test
push
sub
mov
repnz
outsb
jne
or
aaa
xor
les
xchg
mov
mul
loope
mov
notl
add
test
fwait
jno
push
iret
fdiv
dec
and
cmp
mov
mov
pop
inc
mov
int3
das
mov
xor
cmp
mov
push
xor
mov
xchg
dec
cmc
inc
xchg
movsl
lock
mov
clc
push
pop
mov
sbb
pop
arpl
xchg
and
sbbb
adc
adc
jl
std
dec
and
aaa
or
mov
and
mov
mov
mov
cmp
testb
jl
mov
mov
mov
daa
push
fistps
mov
fwait
sub
mov
mov
mov
jg
jmp
add
sub
outsb
mov
andl
inc
aaa
cmp
clrssbsy
mov
inc
insb
mov
mov
mov
jae
mov
jnp
arpl
jle
out
sbb
pop
xchg
shrl
cmp
pop
sub
popf
sub
ljmp
repnz
out
push
or
test
in
jge
lds
loop
cmpsl
in
out
das
dec
push
sub
bound
stos
mov
add
inc
rcrb
sub
pop
cs
sbb
mov
adc
rolb
les
dec
push
popa
adc
mov
mov
jmp
cltd
repnz
loopne
je
mov
fistpll
mov
mov
loope
gs
sbb
inc
xchg
jo
inc
out
in
mov
ret
imul
movsl
fwait
call
and
mov
push
enter
arpl
lock
sbb
inc
mov
das
loope
aad
mov
sbb
jmp
repnz
out
lahf
aaa
mov
mov
inc
mov
pop
icebp
es
es
jge
push
mov
jo
ja
cwtl
out
or
add
sbb
mov
push
push
cmp
movsl
or
scas
dec
fisttps
mov
adc
or
add
lods
loopne
fcompl
sub
arpl
xchg
jg,pt
jg
bound
xchg
mov
pusha
std
ljmp
icebp
jnp
dec
lahf
and
sbb
repz
adc
inc
inc
lods
cmp
aam
shl
outsb
adc
inc
je
xchg
adc
xor
insb
stos
ret
dec
cs
loope
xchg
scas
fidivl
arpl
pop
xchg
scas
push
lret
mov
adc
push
sub
cmp
mull
mov
sbb
cmp
repnz
lcall
addr16
pop
mov
pop
mov
or
jmp
lds
mov
insl
dec
filds
imul
iret
mov
cltd
add
int3
lods
fisttpll
xchg
and
xchg
cltd
inc
cmp
jecxz
dec
xchg
xlat
xor
into
sub
fistl
dec
pop
add
mov
add
mov
loopne
pop
mov
and
cld
xorb
aam
push
lods
adc
xor
dec
and
cwtl
ffreep
das
or
push
sbb
repnz
push
outsl
scas
cli
sbb
lea
push
sub
sub
adc
push
repnz
in
mov
push
adc
and
push
xor
add
cltd
stos
movsl
insl
add
stos
xchg
pop
sti
xchg
popf
pushf
add
add
sbb
push
test
es
xor
insb
ja
lret
test
push
xchg
in
pop
aaa
scas
mov
fistpll
xor
adc
pop
lock
repnz
sub
inc
adc
das
bound
inc
mov
iret
mov
std
sti
in
pop
js
cli
mov
adc
in
jae
lods
nop
jge
mov
cmp
jb
inc
sbb
xchg
adc
sub
mov
jge
shl
cmpsl
repnz
cld
dec
int3
cltd
sub
repz
pop
shrb
or
cmp
sti
cmp
les
divl
loope
mov
pop
in
cmpxchg
inc
xor
decb
into
and
push
jp
lods
sbb
xor
pop
insb
adc
loope
loop
sub
add
mov
iret
xchg
pop
mov
outsl
outsb
inc
repz
dec
jecxz
push
cli
lahf
adc
jns
cmp
lcall
push
sbb
call
sbb
mov
test
or
jnp
shr
cmp
mov
cmp
pop
sbb
fwait
xor
sub
adc
daa
push
push
xchg
das
sbb
dec
sub
pop
push
lods
jno
lods
iret
sahf
lods
neg
push
fdivrl
mov
mov
cmpsl
pop
mov
lret
fs
xor
loopne
lret
sbb
filds
fistps
cmc
loop
daa
icebp
adc
fsts
inc
dec
add
inc
shlb
or
jne
mov
int3
xchg
xor
je
jle
imul
dec
ret
adc
inc
andl
xor
adc
mov
jae
addr16
mov
jl
pushf
mov
jg
sarb
movsl
and
popl
icebp
fldt
push
dec
out
sbb
lods
xor
xor
mov
add
repnz
imul
enter
push
mov
sbb
int3
dec
mov
into
fldt
jb
jg
add
mov
cltd
push
dec
mov
push
jb
retw
cmpsl
and
or
repz
pop
pop
call
mov
pop
fmull
test
bswap
and
or
scas
adc
cwtl
lret
adc
gs
gs
jmp
rcrl
data16
fstpl
mov
push
lods
sbb
hlt
mov
roll
push
stos
popa
push
repz
mov
sbb
inc
pop
mov
sub
cmp
popa
jle,pt
aam
imul
sub
mov
mov
ficompl
sub
lret
cmpsb
lds
int3
mov
into
mov
pop
or
fucomp
xlat
xchg
sub
stos
or
shl
add
leave
pop
dec
test
inc
push
cmp
bound
mov
mov
icebp
cmp
cmpl
adc
jne
or
pop
push
divb
dec
loope
add
add
icebp
in
xor
jge
rol
nop
xor
sbb
jae
dec
inc
es
pop
popa
iret
pop
push
mov
test
ret
inc
lret
enter
adc
push
mov
js
cli
cmpsl
jge
or
dec
and
nop
push
and
dec
cmpsl
sarb
or
jns
fmull
jg
scas
sbb
mov
inc
mov
rcl
repz
fmull
push
loope
push
xor
out
inc
fistps
xor
xchg
xchg
mov
loop
arpl
test
int3
xchg
mov
mov
push
push
aad
and
sbb
cmpsb
insl
aad
inc
aaa
ljmp
sti
pop
jb
pop
rolb
mov
mull
mov
out
and
jmp
jp
jo
and
mov
mov
repz
mov
imul
inc
sbb
xor
sbbb
imul
es
popl
xor
jno
outsl
xor
jl
jle
mov
mov
call
cmc
in
pop
xchg
xor
imulb
xchg
dec
xchg
ja
shlb
add
loop
out
sbb
in
mov
pusha
mov
inc
sbb
push
lea
dec
jp
aas
scas
sbb
sbb
cmpsb
rcll
mov
notb
mov
test
push
loope
shrl
dec
add
adc
hlt
xchg
jge
cmpl
add
int
mov
call
arpl
mov
or
xchg
rcrl
mov
pop
sbb
lods
mov
cmp
mov
pop
insb
adc
inc
mov
int
mov
cmc
lret
or
aad
xchg
cmp
mov
les
iret
repz
mov
jge
inc
push
xor
in
aad
loopne
cmp
pop
dec
inc
pop
mov
inc
gs
aad
popfw
push
test
in
adc
ljmp
sbb
dec
movsl
bound
sbb
inc
mov
pop
dec
or
adc
push
cld
addr16
jo
enter
xor
xor
ds
ficoml
or
les
mov
fiaddl
xchg
in
pop
pop
dec
push
adc
adc
leave
lea
int
rcr
adc
ss
pusha
mov
mov
add
out
sbb
jge
inc
or
int
int3
jno
mov
mov
pop
xchg
xor
dec
std
cmp
roll
movsl
dec
sbb
or
xchg
dec
outsl
mov
push
sbb
aad
dec
sti
leave
jo
aad
sar
pop
loop
faddl
imul
xor
sub
popa
add
add
mov
mov
mov
iret
mov
mov
jbe
jl
xchg
jne
fs
dec
sub
hlt
test
dec
mov
lahf
fcmovnbe
sub
aaa
xchg
inc
sub
cmp
popa
decb
mov
pop
dec
inc
push
xorl
push
sub
cmpsb
pop
mov
pop
cmp
jns
in
inc
outsl
in
ds
test
lock
filds
sbb
inc
shrl
pop
add
pop
or
bnd
adc
mov
xor
imul
sti
pop
mov
icebp
gs
aam
js
and
or
in
data16
mov
dec
xor
rcrb
pop
mov
mov
and
into
dec
pop
testb
in
mov
and
int3
xor
ror
pop
add
mov
xlat
or
mov
movsb
lcall
jno
in
add
out
sub
lcall
and
lods
xchg
test
jg
test
push
fwait
cltd
push
gs
xchg
loope
rep
call
ret
subl
xchg
xchg
loop
push
xchg
mov
mov
or
jmp
clc
cmp
fcoms
dec
and
imul
out
adc
mov
das
mov
test
ret
aas
adcl
xchg
push
or
push
xchg
cltd
hlt
je
fwait
lds
sub
and
test
dec
mov
inc
outsb
aaa
and
das
in
fnstenv
push
pop
push
ja
sti
ljmp
mov
stos
lods
dec
mov
pop
test
js
lcall
in
mull
dec
mov
pop
stos
mov
test
xor
pop
iret
mov
aas
jo
sbb
cltd
out
es
idivl
in
pop
sbb
jmp
inc
push
dec
cltd
movl
shrl
xchg
daa
cmp
incl
shlb
and
addb
mov
dec
das
loope
mov
mov
push
jecxz
mov
push
push
push
sub
lcall
cmp
inc
dec
stos
rorl
lcall
dec
sbb
mov
mov
add
and
je
add
aam
and
scas
mov
push
push
sbbb
mov
cld
adc
mov
or
repz
push
fldcw
mov
pusha
dec
xchg
adcb
shlb
inc
push
fldcw
loope
cmc
repz
aam
adc
adc
pop
cs
repz
dec
sbb
shrb
sbb
fimull
push
mov
and
pop
inc
add
push
in
jmp
fwait
mov
sub
xchg
pop
push
and
popf
test
cmp
movsb
gs
xor
orb
xor
adc
pusha
bound
aaa
cmp
mov
mov
and
outsb
inc
in
or
jg
mov
sbb
or
cmc
fsubr
out
mov
jp
adc
inc
and
and
lcall
push
inc
cmc
sbb
or
xchg
imul
xlat
sbb
or
or
xor
fdivs
mov
aad
mov
arpl
inc
lcall
movsb
imul
add
push
outsl
xchg
mov
ds
sub
xchg
loop
mov
repz
arpl
xchg
sub
lret
popf
lahf
ja
repz
xlat
bound
inc
jp
push
por
out
aad
in
adc
lea
inc
leave
pop
mov
xor
pop
jg
and
add
adc
sub
inc
add
adc
stos
cmp
mov
test
popa
lret
rorb
and
imul
and
les
scas
or
test
sub
mov
sbb
mov
je
mov
cmp
xchg
jmp
cmc
cmp
stc
aad
iret
xor
inc
cwtl
fs
mov
iret
push
loop
sbb
scas
xchg
out
out
and
dec
push
dec
mov
mov
out
stos
adc
xchg
inc
and
lods
pop
mov
pop
daa
stos
inc
inc
mov
ja
sub
xchg
test
pop
imul
scas
mov
popf
fiadds
add
ret
mov
add
push
jge
and
adc
xchg
sbbl
daa
mov
cmpsb
cmpsb
sahf
or
popf
es
lds
push
mov
negl
inc
test
subl
sarl
inc
sbb
fadds
sbb
pop
aas
or
adc
inc
add
repz
xchg
dec
shl
fsub
cmp
push
out
and
xchg
mov
push
mov
js
add
mov
add
ss
iret
pop
hlt
sbb
les
push
jo
outsl
cmpb
rcr
fcmovb
shlb
clc
pop
je
dec
ficoml
sbb
mov
lds
fld
mov
lods
pop
mov
xchg
sti
inc
ficompl
lcall
mov
add
sub
test
mov
inc
pop
cli
andl
stc
lahf
adc
in
out
push
pushf
lret
adc
pop
mov
push
jle
mov
test
xlat
cmp
sub
lret
stc
pushf
jmp
lcall
dec
and
inc
fisubl
and
dec
sub
in
sbb
popf
icebp
jae
pop
les
fisttps
out
push
lret
negl
push
push
mov
jle
std
lods
and
push
add
in
push
fisttpl
push
fildll
jecxz
ljmp
pop
les
add
in
fcmovnb
cmc
pop
adc
cs
mov
mov
nop
pop
mov
mov
push
lret
repnz
pop
outsl
xor
push
shlb
xor
in
pop
pop
fdivrs
xchg
iret
fwait
sub
xchg
or
adc
or
sti
inc
jge
int3
rorb
divb
xchg
fs
and
in
fdivrl
shrl
in
insb
popf
insl
ja
jmp
or
outsb
adc
push
enter
aam
adc
pop
push
add
and
mov
rclb
mov
or
shrl
push
sbb
lcall
dec
xorb
scas
sub
add
xchg
in
fs
mov
sub
insb
cmpsb
pusha
les
adc
push
mov
das
insl
addr16
addr16
sub
jnp
sahf
or
inc
lock
mov
sbb
dec
add
cmc
mov
lods
rclb
sub
cli
inc
and
adc
mov
push
adc
in
sub
push
inc
mov
incb
shrb
push
inc
pop
xchg
pop
xchg
sbb
jge
fstp
ret
inc
xor
lret
popa
xchg
push
les
test
hlt
and
test
xchg
fs
in
push
movsl
roll
leave
mov
cmpsb
sub
jo
or
dec
nop
lock
adc
sbb
in
push
inc
dec
cmp
pop
sub
mov
mov
cmp
and
js
xchg
push
neg
xchg
fsubl
mov
sbb
xchg
ds
and
cmp
xchg
and
loopne
push
mov
jp
out
cvtpi2ps
das
push
mov
adc
jbe
dec
add
xchg
jge
jecxz
shlb
jbe
aaa
nop
pop
dec
pop
int
mov
repnz
and
fdivl
into
lds
cmpsl
push
ja
stc
aad
adc
or
push
insl
lcall
cli
in
push
or
mov
leave
pushf
xchg
shlb
adc
cmp
xchg
mov
jmp
ret
jo
fcmovnb
push
mov
cmpsl
and
pop
jge
or
repnz
add
xor
and
jb
bound
pop
subb
mov
sub
adc
add
xor
and
jb
bound
pop
subb
mov
sub
adc
add
xor
and
jae
bound
pop
subb
psrld
loop
adc
test
xor
push
cli
ficoml
popf
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
pop
dec
lahf
jge
insl
mov
pop
iret
dec
fldl
pop
std
das
in
aas
popf
dec
lea
outsl
lods
jg
dec
lahf
jge
insl
mov
cmp
bswap
pop
mov
in
aas
popf
and
jg
dec
lahf
jge
insl
mov
cmp
bswap
cmp
pop
ret
pop
cmc
sbb
or
add
or
cld
dec
push
pop
mov
mov
je
in
pop
push
out
inc
push
or
and
fdiv
pop
mov
loopne
aaa
iret
mov
out
cmc
sub
loopne
cmp
bound
xchg
mov
pop
xchg
mov
in
inc
sbb
inc
sbb
stos
fstpl
xchg
add
outsl
cmp
ljmp
or
sbb
add
lock
jo
lret
fbld
in
mov
sti
cmp
pop
call
cmpsb
inc
push
push
cmp
sub
int
xor
shlb
sbb
pop
pop
outsl
mov
adc
mov
int3
pop
ret
mov
add
dec
mov
dec
lahf
jge
insl
mov
cmp
bswap
pop
std
das
in
aas
popf
dec
lea
outsl
lods
push
sbb
or
pop
test
leave
push
sahf
dec
orl
push
stc
xor
aas
cli
sub
mov
sub
mov
pop
clc
and
pop
iret
cmp
xlat
adc
insb
ficompl
out
sub
pop
std
das
in
aas
popf
dec
lea
outsl
lods
jg
dec
lahf
jge
insl
mov
cmp
bswap
pop
std
das
in
aas
popf
dec
lea
outsl
lods
jg
inc
dec
jge
mov
xor
outsl
outsl
mov
fnstsw
fidivrl
stos
in
add
xor
cmpsb
mov
lock
add
add
or
pop
data16
push
cmp
ja
test
adcl
push
rclb
fstpt
push
arpl
lods
sub
push
arpl
cltd
iret
fisubrl
pavgw
and
adc
dec
mov
in
bnd
mov
fstpt
nop
lods
push
in
pop
out
xor
dec
loopne
or
push
dec
cli
xor
cmp
jae
adc
mov
pop
push
adc
sar
sahf
and
addr16
pop
dec
mov
out
loop
test
mov
mov
ds
mov
inc
xchg
mov
pop
sub
jl
sub
xor
mov
mov
cmc
adc
mov
lret
jnp
inc
mov
out
adc
xchg
sub
fwait
out
sbb
iret
scas
jp
test
movsb
rorl
add
mov
jge
pushf
add
mov
push
inc
test
jbe
sarb
mov
lds
jbe
in
je
adc
ja
xchg
jo
bound
inc
jle
fwait
push
sbb
xor
aaa
test
or
ss
cmp
int3
repz
jmp
or
dec
xchg
mov
xchg
or
xor
xchg
and
dec
mov
sbb
jmp
pop
aad
repz
clc
rorl
inc
lods
jl
mov
and
divb
and
in
ja
sub
sbb
and
jne
jg
xchg
lds
loopne
push
rcrl
pusha
jb
cwtl
xchg
mov
mov
pop
mov
xchg
mov
movsl
ret
add
stos
js
cli
loop
jge
push
fcmovb
gs
pop
add
popf
mov
mov
repz
jbe
or
mov
fcmovbe
jnp
data16
out
je
mov
ds
enter
imul
shlb
sub
add
xchg
and
fcompl
and
xchg
jb
lcall
rclb
int3
es
sub
call
adc
xchg
fs
or
xchg
or
lods
push
mov
push
into
push
mov
push
leave
inc
test
xor
imul
into
mov
cwtl
or
xor
loope
test
int
adcb
rclb
add
xchg
inc
add
xor
cld
mov
inc
loopne
adc
sub
or
xlat
ficompl
aas
call
iret
fisubl
push
jnp
test
sub
cmpsb
jae
jmp
in
nop
cmpsl
pop
loope
xor
sbb
xor
pop
cmp
sbb
stos
std
xor
cmpsb
mov
aaa
int3
and
lea
and
or
push
and
xchg
xchg
xchg
call
or
aaa
dec
loope
push
xchg
xor
imul
mov
gs
leave
and
jg
aam
fisttpl
xchg
pop
sarl
xchg
loope
lret
push
or
push
cmp
lcall
fdivs
jb
sbbl
or
stos
aaa
arpl
call
scas
std
and
shrl
fucomp
push
mov
fldl
fcom
lods
jnp
repnz
int
push
cltd
rolb
xor
call
push
pushf
jae
dec
gs
scas
mov
push
sti
sbb
xchg
or
jmp
pop
or
aad
int
mov
in
inc
pop
cmp
xchg
andb
aas
pop
xchg
lcall
ljmp
mov
jmp
mov
ds
or
jo
scas
dec
sbb
jb
test
xor
push
fstp
lret
mov
jle
ds
cmp
mov
xlat
or
push
mov
xor
repz
fmull
dec
aaa
sub
and
bound
inc
jp
add
jns
sahf
sarl
xchg
rclb
lods
sub
pop
ss
cmp
add
shll
jle
jae
roll
push
pop
shll
imul
out
repz
mov
jo
add
xchg
dec
ljmp
test
xchg
inc
popf
mov
push
cwtl
sahf
xor
leave
pushf
xor
sbb
nop
dec
movsl
mov
mov
adc
hlt
movsb
sbb
das
movsl
ret
or
sub
je
imul
subl
mov
lds
fsubl
mov
push
int3
pop
scas
fcmovb
mov
lahf
aas
pop
jge
notl
movsb
add
or
fbstp
popf
add
adc
mov
jae
xor
pushf
popf
dec
hlt
add
in
mov
fbstp
popf
mov
xor
ljmp
popa
dec
mov
scas
stc
movsb
lods
out
shrl
cwtl
divb
and
mov
enter
push
js
gs
lods
imul
push
push
outsb
push
mov
xchg
jle
and
ljmp
aas
push
leave
and
sbb
push
xchg
push
insl
movsl
xlat
push
ret
adc
adc
fldenv
imul
test
in
dec
jns
pushf
cli
mov
add
mov
mov
pop
arpl
mov
and
mov
or
repz
sub
stos
stos
sub
enter
mov
cmpl
mov
mov
iret
jnp
enter
pop
shlb
add
cs
sti
gs
add
cli
add
inc
push
cwtl
mov
xor
scas
adc
sbb
loop
adc
jl
scas
lods
xlat
push
mov
loope
push
andb
outsl
pop
loope
mov
or
fsubs
iret
jae
lds
xchg
sub
ss
add
test
mov
fwait
in
mov
push
xor
or
test
into
pop
xabort
pushf
sub
mov
dec
sbb
in
adc
mov
mov
sbb
or
xor
push
sti
hlt
gs
sbb
and
out
push
hlt
add
mov
xchg
xor
shlb
fmull
mov
add
test
mov
clc
test
outsb
push
out
int3
shll
aaa
aas
dec
cmp
mov
jno
fmull
push
cmp
adc
pop
lret
lods
bnd
sub
push
es
push
lods
sbb
shll
cmp
dec
cmp
mov
jmp
dec
out
rcll
mov
je
loop
mov
add
jne
ret
ljmp
jmp
sub
aad
nop/reserved
mov
push
push
cld
xchg
mov
popf
jbe
pusha
cmp
rclb
sbb
call
lods
mov
dec
sbb
je
adc
das
sbb
aad
shrl
mov
dec
cmp
cli
fnstcw
jns
mov
loopne
lcall
ja
pusha
push
ja
push
lods
and
fistpl
leave
repnz
mov
or
cwtl
mov
mov
mov
enter
xor
loop
cmp
jg
cs
xchg
iret
fldcw
add
add
in
sub
testl
stos
jne
jecxz
inc
call
or
pop
int3
out
xor
movsb
xchg
jbe
test
scas
sti
int3
push
fistps
in
xchg
inc
mov
ljmp
lds
add
push
sbb
data16
push
adc
cmc
in
pop
inc
insl
dec
call
push
jecxz
inc
in
xor
mulb
and
stos
cmp
mov
push
xchg
insb
or
scas
cli
mov
outsl
into
sbb
jb
and
mov
xchg
sbb
in
dec
cmpsb
ret
xchg
sub
or
repz
xor
and
sub
fiaddl
xlat
stos
pop
pop
shlb
sub
xchg
adc
notl
scas
push
pop
mov
ror
mov
adc
out
jnp
ljmp
in
push
sbb
add
cmp
jecxz
or
sbb
xchg
cmp
cld
push
notl
pop
movsb
nop
pop
sub
test
cmpsl
add
cmp
inc
movsb
ljmp
dec
es
lea
jmp
mov
inc
or
rol
add
xchg
cwtl
bound
mov
adc
push
lahf
stos
stc
out
adc
cmp
cld
scas
ds
cs
push
cwtl
scas
add
mov
fdivrl
adc
fstpl
lods
sub
outsl
push
addr16
cld
cmc
insl
outsb
out
icebp
test
jmp
mov
lcall
pop
sub
push
fisubl
sbb
adc
icebp
adc
call
dec
addl
or
jno
push
mov
push
lcall
addr16
rcr
push
int
push
add
lahf
scas
and
jb
cmp
je
sub
xchg
roll
mov
outsl
mov
cmpb
inc
rcrl
and
mov
mov
out
cmp
aam
sub
cmp
movsb
ja
push
or
jmp
sti
pushf
dec
das
lret
mov
filds
adcl
je
mov
push
lock
jl
addr16
jle
iret
stc
fcmovne
bound
or
inc
mov
mov
out
jmp
test
push
xchg
add
or
add
es
sub
xchg
xchg
cwtl
and
jmp
sbbl
xor
xchg
push
jl
popa
add
in
ja
push
xchg
stos
mov
in
inc
push
mov
add
push
bound
push
outsb
les
xor
add
popf
shrb
sbb
fdivrs
mov
pusha
loope
and
fcmovb
pop
mov
push
jae
cs
and
test
lea
jb
stos
mov
mov
pop
add
mov
rcll
mov
sbb
sahf
bound
adc
ret
add
mov
ja
cmp
push
cmpsb
into
xorb
iret
mov
je
xchg
outsl
sub
pop
xchg
fwait
jle
xchg
sub
adc
lods
or
out
hlt
insb
sbb
lods
popa
mov
xchg
inc
cmp
test
imul
sub
and
lret
cmpsb
int
outsl
dec
inc
inc
xchg
mov
inc
les
lret
cmp
push
cmp
cmp
arpl
sahf
add
sti
icebp
push
xor
add
cli
cltd
mov
mov
orb
mov
xchg
push
dec
sub
fdivs
dec
test
lahf
in
pop
inc
cmp
push
rcll
rorb
stc
pop
cmpsl
lret
or
jo
xchg
cmp
push
inc
jnp
and
iret
shlb
jo
ret
aad
lahf
add
repnz
pop
fdivs
or
negb
cmp
mov
loopne
faddp
cmp
push
add
test
das
pop
mov
test
push
pop
in
cmp
add
call
test
in
fwait
sti
mov
and
stos
push
dec
shll
xchg
bound
mov
out
ret
int3
xor
push
aaa
icebp
fsub
inc
stc
dec
add
sti
inc
in
xchg
imul
leave
idiv
dec
push
or
cmp
lcall
mov
outsb
jno
jne
orl
fdivrp
or
xchg
or
lea
and
xor
or
jmp
adc
cwtl
push
orl
dec
sub
mov
inc
dec
jg
fwait
jne
or
lcall
xchg
sbb
negb
lds
mov
mov
mov
add
push
push
loopne
mov
in
cmp
movmskps
stc
push
push
cmpb
mov
in
loop
jle
out
repnz
sbb
add
aam
adc
mov
bound
mov
out
sbb
popa
adc
clc
xor
mov
pusha
cld
stos
adc
push
jle
sub
jg
mov
adc
imul
mov
jne
leave
push
jbe
enter
in
cli
cmp
mov
je
pop
imul
jnp
jmp
movaps
les
jg
out
lahf
push
dec
test
or
or
mov
nop
dec
xchg
andb
add
movsl
aam
cld
icebp
add
or
stos
insb
dec
hlt
push
pusha
ss
add
mov
dec
aam
xor
fucomip
fdivs
and
adc
fldt
movl
mov
adc
dec
repnz
mov
popf
xchg
push
mov
fsts
rolb
fs
nop
inc
ja
or
les
scas
fdiv
lods
insl
xchg
xor
jp
roll
mov
mov
add
lret
push
loopne
scas
inc
mov
rcl
inc
adc
mov
shrb
mov
cmpsb
je
dec
xchg
sub
inc
push
jns
adc
ljmp
mov
cmpl
mov
lcall
pop
pop
jae
sbb
push
ss
push
int3
fisubrs
adc
push
and
dec
cwtl
fstps
cmpsb
out
out
in
or
jae
xchg
push
sub
pop
and
dec
pop
shrl
int3
lret
or
pop
xchg
jp
cmc
stc
js
lret
dec
push
adc
cmp
push
mov
xchg
stos
ja
stc
rol
sub
mov
jnp
test
out
aam
loop
mov
pop
nop
mov
mov
dec
pop
movsb
pushf
mov
push
add
xor
jno
cmp
adc
or
mov
add
jbe
into
sbb
mov
adc
dec
pop
loope
gs
repz
aaa
lret
aad
movsl
ret
les
xor
xor
sti
sbb
rcr
or
lret
sbb
jo
inc
mov
in
fadds
jb
pop
rolb
inc
daa
in
sbb
mov
subb
aas
mov
jo
push
jmp
jl
cld
xchg
ret
fwait
sbb
and
out
aas
shlb
incl
les
xor
jg
adc
jge
ret
cmp
dec
jbe
pusha
cltd
jbe
xchg
jle
cs
adc
dec
lahf
push
fcmovne
jnp
scas
cli
cmpb
mov
fdivl
and
and
int3
test
inc
roll
out
pop
lods
pop
test
lahf
cmpsl
leave
test
test
mov
imul
lea
lock
rcl
xor
sarb
stc
in
cmpsb
in
iret
sbb
mov
cmc
or
mov
xchg
fiaddl
in
cld
repnz
jmp
mov
and
xor
cmpsl
dec
lret
mov
sub
jg
push
scas
data16
dec
les
ror
mov
inc
jbe
fimuls
add
add
sub
add
xchg
sub
mov
lahf
lock
inc
sti
mov
nop
fnstenv
std
stc
add
jnp
xchg
jle
lods
xlat
mov
inc
stos
xor
divb
sub
sbb
and
xor
add
sbb
xor
sbb
mov
add
fdiv
int
xor
jae
mov
jb
mov
bound
sub
mov
push
push
call
xlat
mov
lahf
mov
and
pop
shll
mov
jecxz
jg
mov
and
aaa
fwait
add
inc
add
xor
jmp
mov
xchg
adc
mov
and
xor
ja
cmpsl
mov
sahf
aad
xchg
ret
popf
in
mov
push
add
mov
pop
push
jnp
push
or
push
out
mulb
shlb
les
cs
clc
insl
aad
cltd
ret
sbb
stos
pop
popf
sub
mov
push
xchg
lret
mov
pop
dec
aad
jg
mov
scas
ss
icebp
sti
in
lods
subb
cli
in
daa
adc
mov
lret
jno
cmp
test
fadds
jnp
lock
mov
xor
fidivl
cmpsl
cmp
fucomip
push
shr
popa
mov
and
mov
out
test
jbe
mov
aam
jno
repnz
mov
cltd
stos
mov
and
pusha
dec
fisubs
cltd
push
outsl
test
data16
cmc
ss
add
dec
out
pop
test
sub
je
mov
pop
jbe
xchg
mov
inc
mov
popw
xlat
cltd
dec
mov
std
jg
xchg
add
lcall
dec
or
push
stos
mov
add
out
je
cmpsb
test
hlt
jno
shll
clc
insb
cmp
pop
jp
aas
cmp
mov
hlt
or
cmp
sti
and
inc
in
outsb
out
push
cwtl
mov
lods
mov
inc
mov
adc
es
sbb
and
test
lret
adc
mov
mov
arpl
or
xchg
dec
aam
push
das
mov
std
js
rep
xchg
mov
lods
neg
jae
sub
xchg
push
aam
jmp
mov
cmpsb
aam
cwtl
or
pop
notb
and
rcrb
test
sbb
sbb
sub
sti
or
mov
mov
push
iret
cwtl
push
icebp
xor
and
jmp
xor
jge
xchg
out
repnz
pushf
mov
mov
shll
mov
pop
sbb
scas
jecxz
jmp
imul
xor
push
xlat
lods
dec
push
mov
xchg
xor
sub
xchg
mov
shll
inc
xchg
movsl
les
push
jl
scas
imul
insl
pushf
and
fwait
xor
outsb
xor
ljmp
rcrb
in
out
sub
ljmp
fwait
lods
ffreep
clc
xor
adc
das
dec
push
push
adc
fmuls
mov
rorl
fcoml
dec
test
fcmovbe
dec
cmp
cmp
cmpsb
jae
pushf
jnp
and
pop
sub
mov
xchg
je
fsubp
pop
jo
out
fs
fcmovbe
pop
xor
jns
or
test
xor
lcall
movsl
out
xlat
mov
mov
mov
and
repz
sbb
callw
pop
sub
movswl
xchg
lret
or
fists
inc
push
in
stos
ja
push
pop
mov
rolb
jge
out
clc
pop
aaa
lods
cld
scas
pop
sbb
lret
call
sub
pop
sbb
jmp
mov
popa
xor
mov
out
les
test
cmc
adc
cmp
addr16
cmp
out
hlt
fwait
pusha
mov
add
jge
shrb
mov
jbe
fisubl
scas
sbb
lret
sub
mov
xor
jb
ja
or
inc
jecxz
push
pop
rorb
pop
xchg
das
dec
inc
rol
push
cwtl
sub
mov
cmp
xchg
pop
into
push
jne
add
cmp
ljmp
and
je
push
pop
lds
push
push
enter
jne
jl
enter
adc
inc
addl
xchg
and
in
or
sbb
or
or
lods
cwtl
pop
xorb
mov
inc
out
push
sahf
pushf
shlb
xor
xchg
push
fdivr
xchg
test
or
mov
cmpsb
push
push
jg
xor
es
out
pop
cmp
push
or
dec
out
hlt
repz
dec
sti
fucomip
push
inc
leave
in
fsubrl
mov
sbb
xchg
xchg
sti
scas
jne
mov
mov
pop
sbb
pop
movsb
loop
pop
add
sbb
fstpl
jmp
fimull
insl
cwtl
pop
insb
sub
adc
cli
xchg
outsl
cld
push
jb
adc
ret
jbe
fadd
xchg
pop
stc
inc
cmp
mov
iret
pop
js
sub
xchg
dec
push
ret
sub
ret
push
pop
fadds
xchg
push
insb
xor
insb
aas
in
mov
mov
pop
sbbl
xchg
jns
imul
movsl
or
adc
mov
mov
push
rclb
pop
cmc
jb
cmpps
insl
inc
jo
loop
mov
daa
jno
and
inc
sti
ja
mov
mov
popa
imul
enter
mov
pop
das
xlat
jp
into
pushf
xchg
mov
jns
fisttpl
into
push
test
inc
out
imul
popa
mov
in
hlt
arpl
dec
xchg
rcrl
daa
mov
stc
shrl
cmp
or
mov
jae
pop
adc
dec
sub
scas
xchg
add
sbb
test
incl
mov
xchg
mov
inc
pop
xchg
push
or
xchg
mov
xor
lods
mov
add
or
xchg
cmc
test
imul
int
lea
sub
or
pop
inc
and
ljmp
lret
in
mov
arpl
repz
popa
sti
mov
fwait
mov
js
ja
and
xchg
dec
jns
jp
out
pop
jge
inc
idivl
adc
pop
das
subl
mov
cld
insb
int
adc
jns
xchg
push
xchg
jge
mov
add
popf
test
int
scas
jbe
pop
inc
fistpll
cmp
dec
adc
fsubl
add
das
scas
insl
mov
cmp
bswap
pop
std
das
in
aas
popf
dec
lea
outsl
lods
jg
dec
lahf
jge
insl
mov
cmp
bswap
pop
std
das
in
aas
popf
dec
lea
outsl
lods
jg
dec
lahf
jge
insl
mov
cmp
bswap
pop
std
das
in
aas
popf
dec
lea
outsl
lods
jg
dec
lahf
jge
insl
mov
cmp
bswap
mov
das
in
dec
ljmp
andb
xor
imul
mov
orb
sbb
imul
rorb
and
adc
inc
lret
push
or
jnp
dec
rcrb
stos
xor
pusha
jmp
sti
inc
lret
push
jnp
sbb
cmp
pop
push
stos
push
iret
add
jns
outsl
sub
fstpt
push
or
mov
int3
mov
in
fs
adc
mov
xchg
cmp
sbb
dec
andl
xor
int3
cvtps2pd
jmp
lds
imul
mov
pop
and
ret
mov
vpmacssdqh
and
push
sbb
in
cmp
sub
mov
jp
ss
test
data16
jmp
add
xor
lea
negl
sub
dec
rorb
sbb
enter
out
out
dec
and
clc
in
inc
pop
out
cmc
sub
cli
sbb
mov
pop
jecxz
xor
pusha
jmp
sti
inc
lret
push
or
jnp
dec
rcrb
inc
int
fldl
scas
aam
rolb
push
repz
pushw
mov
movsl
leave
mov
icebp
arpl
cmp
add
outsb
xlat
push
std
pop
nop
ja
add
adc
ds
iret
inc
pushl
and
lret
push
or
jnp
dec
rcrb
stos
xor
pusha
jmp
sti
inc
lret
push
or
jnp
dec
rcrb
stos
push
scas
popf
jns
dec
mov
sub
pushf
iret
movsl
adc
arpl
mov
inc
shrl
mov
nop
insl
out
cmpsl
sub
rol
adc
and
pushf
mov
or
mov
sahf
into
jne
xchg
add
pop
mov
inc
jbe
mov
add
and
mov
outsb
fldenv
dec
rolb
and
ret
ljmp
fnsave
ficoml
inc
in
scas
sub
adc
cmpl
std
jl
pop
xchg
loop
sub
aas
adc
sahf
loope
inc
adc
and
xorb
xchg
adc
ret
rcll
cmp
and
push
mov
xor
push
ret
ret
test
push
movb
adc
mov
insl
inc
inc
lds
inc
pop
nop
lods
fiadds
jg
xor
cmpsl
mov
jge
ret
enter
lods
ficoml
gs
cmp
mov
adc
hlt
stc
adc
cs
cmp
test
pop
movsb
jo
xor
dec
jne
daa
movsl
mov
jecxz
or
nop
sub
dec
repnz
icebp
jg
push
mov
in
ja
stos
shl
and
roll
loope
sub
sub
test
mov
or
pop
add
inc
aam
pop
dec
das
dec
js
jae
mov
pop
cwtl
jb
push
icebp
push
sarb
popf
dec
jb
test
pop
lcall
je
testb
arpl
adc
mov
sub
inc
push
ss
fisubrs
adc
xchg
adc
add
and
ret
pop
je
mov
xchg
inc
sahf
mov
cmpl
xchg
push
ror
int3
xchg
in
mov
sahf
pop
mov
inc
sub
push
sbb
cld
or
iret
mov
sbb
mov
test
fisttps
or
pushl
push
sbb
jno
sub
ret
mov
add
or
jl
push
andb
push
jp
xchg
lret
adc
popa
sub
cmc
and
sbb
push
js
ret
mov
cwtl
repz
sbb
xor
push
int
cmpsb
pop
xchg
call
push
and
lcall
push
inc
adc
icebp
mov
fdivrl
xor
sub
rolb
adc
mov
outsb
mov
and
push
xchg
push
mov
ljmp
jmp
push
push
fld
jecxz
cmp
add
sub
in
ficoml
xchg
mov
jl
pop
cmp
xchg
jecxz
jmp
sub
cmp
in
stos
or
test
sub
js
neg
xchg
inc
int
stos
sahf
cmp
xor
test
dec
push
xor
xchg
xchg
sbb
roll
pop
add
lock
jo
sub
lods
hlt
push
mov
mov
in
sbb
mov
mov
das
dec
pop
sbb
push
shll
cwtl
outsl
sbb
lock
inc
sub
cmp
jge
dec
ret
jecxz
push
dec
jecxz
adc
sub
jecxz
cmovp
adcl
in
mov
mov
mov
cltd
mov
mov
inc
pop
stos
das
fidivrl
push
inc
aad
jne
pop
insb
cltd
mov
pusha
jns
and
imul
mov
cmpsl
and
jecxz
xor
jne
ret
and
or
ss
push
repz
fwait
mov
adc
pop
cmp
pushf
lret
fldcw
inc
int
sbb
push
imul
loope
push
aam
jp
xchg
xor
test
aad
mov
jo
pusha
cmp
pop
jp
scas
and
fistl
jle
pop
pop
imul
ret
mov
and
test
test
mov
ja
adc
ljmp
ds
xchg
sahf
mov
out
clc
jns
pop
mov
clc
stos
sti
inc
fnstsw
jns
ja
leave
pusha
hlt
cs
mov
negl
push
jle
mov
test
into
icebp
cmp
imul
xlat
movsb
sahf
xchg
xor
push
fiadds
shll
aad
hlt
mov
mov
sahf
rep
sub
cmp
mov
xchg
sbb
cltd
js
call
dec
dec
repnz
sub
xchg
jg
imul
mov
sbb
adc
orl
lods
sbb
dec
mov
xchg
mov
pop
mov
sbb
les
xor
out
mov
arpl
xorl
mov
leave
lcall
xchg
fwait
hlt
jns
test
push
cmc
icebp
aam
jbe
cld
fcmovnu
mov
cmp
out
not
pop
add
jo
cwtl
cmp
jno
pop
nop
dec
mov
adc
ljmp
dec
dec
or
pop
lods
lahf
mov
pop
mov
pop
sub
movsl
ret
sub
xchg
dec
push
adc
push
cmp
add
mov
and
add
pop
stos
mov
xchg
lret
loope
out
repnz
push
jle
insb
mov
xlat
mulb
repnz
popa
adc
or
lahf
test
nop
mov
scas
loope
in
xchg
mov
in
xchg
sbb
daa
adcb
pop
lret
pop
add
xchg
shll
cmp
movsl
adc
stos
clc
mov
mov
outsl
bound
out
cmp
fmul
fimuls
xor
jae
mov
fs
push
lods
jns
push
push
aaa
shll
mov
adc
stos
in
clc
xchg
jnp
pop
xor
pandn
arpl
sbb
repnz
mov
ret
cmp
sbb
nop
mov
xchg
mov
cmp
push
mov
gs
mov
mov
sub
enter
rcrl
popa
loop
lret
les
lock
adc
cld
movsb
in
mov
jle
fidivs
mov
push
push
cmp
rcl
jne
mov
shrl
test
rcrb
xor
fidivrs
aaa
notl
fistps
sbbb
jb
ds
mov
cmp
cmp
or
into
popa
mov
addl
dec
xor
xchg
dec
aam
mov
movsl
add
adc
mov
mov
test
jne
sbb
imul
inc
fdiv
xor
push
insb
pop
arpl
inc
sub
imul
jg
aas
push
xor
cmpsb
mov
inc
xor
loopne
mov
xlat
mov
xchg
test
xor
dec
notl
fbstp
daa
adc
lcall
dec
push
dec
jno
ja
xor
push
push
xchg
sub
xchg
sahf
push
push
call
and
aaa
inc
movsb
xor
test
inc
das
movsl
testl
inc
or
push
jns
clc
push
ret
xchg
out
dec
inc
mov
arpl
sar
shlb
sti
push
mov
pop
dec
pop
push
fwait
push
enter
repnz
inc
daa
ja
mov
ss
testb
shl
jo
pop
es
xor
inc
clc
loope
jmp
inc
dec
popa
cmpsl
lock
outsl
out
lret
das
sub
sbb
out
inc
pop
cmp
push
jae
cs
add
adc
fdivr
sub
pop
mov
lret
loop
daa
negl
jnp
xor
xor
mov
loopne
mov
ljmp
in
push
es
sub
in
pop
jle
fs
in
push
ds
int3
imulb
loope
fcoms
mov
and
mov
cwtl
in
xlat
and
xchg
inc
and
pop
adc
rcll
mov
test
insl
or
xchg
pop
cmp
cs
push
int3
movsl
xchg
bound
lock
or
pop
xor
jno
inc
adc
sahf
stos
push
data16
xchg
lret
dec
fidivs
shrb
lods
je
add
mov
xchg
gs
push
mov
sahf
mov
cmpb
subl
dec
inc
ret
js
push
adc
fcompl
repnz
dec
in
repnz
adc
aad
pop
int
push
cltd
test
push
fisttps
call
imul
and
pop
fisttps
loope
ret
lds
and
push
test
in
mov
shll
cs
xchg
and
adc
sub
hlt
mov
add
mov
outsb
jge
out
loop
insl
jbe
adc
sahf
mov
std
das
cli
dec
popa
mov
call
inc
mov
xor
leave
int3
mov
insb
sahf
mov
mov
jo
les
inc
add
les
dec
inc
test
subl
sub
mov
add
mov
sub
sahf
and
push
or
pop
roll
and
dec
mov
out
es
mov
cli
out
arpl
shl
pop
sub
jno
bound
mov
push
scas
xchg
xor
test
xchg
repnz
xor
pop
sub
inc
fwait
xor
jne
xorl
adc
push
or
fwait
lods
xchg
jecxz
mov
lahf
aad
or
clc
or
notb
cmpsb
sbb
add
pop
out
or
insb
jbe
xchg
add
mov
enter
stos
sti
pop
in
sbb
fidivl
js
xlat
and
and
push
out
adc
outsl
mov
xchg
sbb
mov
fidivrs
loop
sub
ja
lods
pop
lds
jg
sbb
pushf
cmp
xor
sahf
into
adc
jp
flds
mov
jae
lods
outsl
pushf
jbe
faddl
icebp
popa
and
loope
fsubrs
adc
jmp
jns
pop
sti
lea
mov
add
sub
add
int3
mov
jg
hlt
addr16
and
enter
ljmp
add
lcall
pop
cmp
mov
or
clc
fidivs
into
adc
sbb
es
lods
enter
adc
pop
xchg
mov
mov
xorb
scas
add
push
pop
or
mov
cmp
mov
cmpsl
mov
adc
push
xchg
cmp
loop
inc
inc
ljmp
jnp
popf
bound
sbb
js
pop
pop
mov
int
clc
jge
imul
mov
jle
test
arpl
insl
cmp
imul
hlt
fcomps
test
lahf
aad
loop
push
inc
mov
inc
lds
lret
jl
adc
sbb
lret
cmovs
mov
mov
mov
mov
mov
sarb
push
cmp
xor
jo
insl
pusha
xchg
inc
jl
inc
mov
and
cmp
testb
xor
fcompp
aam
xchg
or
push
mov
outsb
mov
subl
shl
xor
data16
mov
fxch
push
sar
repnz
insl
scas
inc
jne
fstps
lret
cmp
or
jg
sahf
or
sub
add
in
mov
fbstp
sbb
or
pop
mov
pop
dec
test
xchg
or
xor
addr16
sbb
into
cmc
fimuls
add
add
inc
inc
cld
lcall
int
ret
sahf
dec
xchg
jl
call
xor
loopne
fildll
pushf
pop
je
xor
es
std
sub
push
mov
inc
adc
lds
rep
push
insl
int3
cwtl
or
sbb
xor
mov
pop
xchg
std
rolb
ret
and
mov
push
stc
pop
in
add
sarl
inc
daa
inc
adc
mov
mov
xchg
push
je
in
imul
xor
cmp
test
ljmp
jno
test
mov
rolb
scas
js
xchg
sbb
adc
mov
rorb
sub
mov
or
movntps
int3
inc
movsb
movsl
xor
push
or
in
mov
in
pop
push
inc
inc
int3
stos
fisubrl
cs
dec
xchg
pop
cltd
out
push
sub
lret
lds
cmp
xchg
pop
jne
dec
jnp
push
adc
mov
pop
cmpsl
pop
sarb
movsb
pop
enter
inc
xor
or
test
lret
insb
enter
movsb
outsl
push
inc
fldt
insl
inc
lret
cmp
or
out
in
jb
push
jbe
jb
mov
aad
jae
jmp
push
or
movsb
in
or
push
adc
daa
inc
ret
fs
lods
lods
pop
mov
jnp
outsl
int3
mov
xlat
dec
cmp
push
inc
lods
in
xchg
dec
lock
ds
xor
inc
jae
sbb
mov
repnz
or
xchg
test
xor
out
outsb
push
cmpsl
pop
pop
cs
dec
fwait
mov
and
mov
in
jb
hlt
dec
push
push
cltd
fstpt
pushf
sbb
rorl
rclb
imul
xlat
sbbl
cli
pop
aaa
aas
jg
jb
sub
movsb
cld
xor
imul
push
clc
jp
jge
jb
adc
clc
repz
jo
int3
inc
jle
imul
mov
xchg
mov
pinsrw
sbb
std
std
mov
test
int3
or
lods
push
decb
jl
sub
ret
mov
int3
js
sbb
mov
push
push
push
ret
mov
insl
add
dec
pop
das
clc
insl
push
test
lods
jp
inc
in
mov
mov
pop
add
sbb
fimuls
or
repz
imulb
add
pop
dec
fwait
sahf
shll
cmp
adc
mov
imul
arpl
sub
lea
std
das
iret
sub
repz
out
test
sti
inc
fsubp
mov
fsubrs
jmp
outsb
xor
test
inc
out
jbe
into
aam
iret
sarb
jo
daa
sbb
mov
jne
or
pop
jg
pop
insb
aam
add
jnp
negl
inc
push
icebp
clc
scas
xchg
mov
add
sbb
mov
out
aad
mov
pop
pop
into
aad
das
and
mov
xor
loop
adc
mov
push
ret
cs
add
clc
or
outsl
shl
mov
lcall
push
mov
xchg
push
gs
xor
rolb
mov
pop
icebp
sub
mov
nop
mov
lret
cmpsb
aad
stos
dec
rorb
push
adc
push
xchg
cwtl
loope
hlt
inc
mov
aas
out
cld
add
xlat
push
or
jne
mov
xchg
pushf
inc
jno
xor
imul
xchg
ret
and
xchg
fcomi
clc
das
stc
cmpsl
add
and
cli
pop
in
icebp
sti
sbb
lea
mov
mov
push
jb
add
xchg
pop
cmp
jb,pt
cld
leave
cmp
cmp
mov
sti
push
cmp
lret
out
xor
xchg
pop
push
mov
in
pop
xor
fstps
dec
adc
or
repz
loop
fcmove
gs
pop
pop
fdivrs
or
add
or
mov
add
jno
xchg
sbbb
push
ss
inc
imul
stos
inc
outsl
daa
imul
and
loope
das
and
andb
xchg
imul
ret
pop
ljmp
bound
cbtw
xchg
in
outsl
pop
fstpl
cmp
flds
sbb
lods
in
outsb
sti
and
inc
insl
jns
push
fs
pop
mov
sub
sti
mov
ljmp
cmp
nop
sbb
xchg
iret
sbb
cs
mov
fbld
and
mov
shrb
xchg
cmp
pop
push
xchg
inc
fistpl
movsb
arpl
lret
mov
gs
addr16
adc
mov
pop
out
push
lods
and
cmp
bound
aas
cmp
and
sbb
jmp
int
rcll
push
jp
pop
mov
jmp
das
xchg
pop
push
stos
mov
sarb
push
mov
pushf
fstps
stos
mov
into
test
fcmovbe
movsb
sbb
test
add
daa
sarl
mov
mov
mov
xor
movsb
adc
mov
sbb
xchg
negl
out
mov
jle
add
sub
mov
je
and
lcall
lahf
ss
pop
fiaddl
pop
cmc
cwtl
inc
and
mov
and
push
add
jmp
sbb
cmp
addb
orb
pop
pop
outsl
sub
jl
and
pop
out
sub
add
sub
add
ds
std
lods
out
xchg
loop
rorl
fisttps
pop
add
insl
dec
cmp
lahf
in
xor
fcoml
js
adc
adc
ljmp
mov
push
jle
aas
and
xor
cmp
push
inc
mov
aas
or
lock
jnp
icebp
adc
loope
mov
push
push
adc
adc
out
mov
imul
aad
popa
shrl
popf
xchg
or
mov
mov
aaa
mov
stc
push
ficompl
fldl
jmp
push
mov
adc
adc
jmp
cli
push
pop
lcall
jne
into
fs
jae
arpl
or
mov
mov
dec
lea
pop
aas
int3
pop
lock
pusha
cmp
sarl
call
cmc
sbb
sbb
push
push
jp
pop
cmp
push
jns
mov
jmp
add
das
shrl
int3
mov
fldenvs
lcall
out
movsl
iret
mov
bound
cmp
xchg
mov
les
lret
popw
pop
stc
out
pop
jb
xchg
cmp
add
aad
adc
cmp
xchg
mov
in
add
es
iret
adc
fstp
pop
test
push
mov
in
adc
aaa
lods
push
pushf
add
out
das
mov
jnp
ljmp
cmpsl
xor
clc
mov
test
mov
iret
xchg
fsts
sar
mov
divb
mov
es
notb
cmpsl
outsb
rcll
xor
cmp
cmp
adcl
jmp
xor
mov
or
cwtl
cmp
pusha
sti
xor
push
lds
pop
ds
mov
mov
ja
inc
lcall
xchg
push
sub
add
stc
mov
loop
inc
cmc
stc
sbb
leave
inc
into
sbb
mov
cmpsl
cmp
sub
rcrb
xchg
inc
mov
pusha
lahf
cmp
scas
mov
and
nop
mov
jne
arpl
mov
add
enter
loopne
nop
and
cmc
aam
mov
or
ret
lea
jp
sahf
sub
sbb
sub
lret
int3
insl
inc
or
sub
aad
popf
or
xor
addr16
jo
inc
jl
mov
inc
pop
mov
xchg
or
mov
mov
cwtl
dec
dec
mov
out
cmp
pop
jg
sub
xorl
ljmp
mov
and
mov
mov
xor
arpl
fstpt
mov
dec
call
push
movsl
pop
sarb
sbb
mov
mov
fwait
int3
xchg
mov
xchg
push
shr
cmp
jbe
jle
data16
lds
lcall
dec
cld
call
mov
xor
mull
mov
jbe
lods
mov
outsl
pop
mov
jg
xchg
stc
std
clc
adc
int
subb
and
push
mov
aaa
sub
jns
shrb
push
mov
rorl
push
and
sub
jns
shl
sahf
mov
test
and
leave
ljmp
jnp
and
dec
fadds
mov
inc
jnp
cltd
std
cltd
jmp
adc
outsl
roll
dec
dec
inc
xchg
sbb
fisttpl
or
jb
xchg
int3
sbb
inc
sub
mov
int
pop
mov
scas
inc
test
ficoml
lahf
fmul
enter
loopne
repnz
pop
shl
in
cwtl
xchg
jbe
insl
rorl
lret
jg
or
xchg
aas
cli
jns
loop
lret
incb
lods
fcompl
into
data16
pop
das
mov
pop
test
inc
ljmp
push
xchg
sub
out
into
jne
pop
or
mov
insb
xor
lcall
ljmp
sub
ds
insl
inc
add
pop
daa
lds
or
jecxz
mov
mov
stos
push
arpl
or
xadd
or
push
int
cmp
dec
lcall
mull
jg
dec
std
out
and
out
in
xchg
mov
dec
mov
jo
int3
xor
dec
xor
dec
call
mov
insb
loop
xchg
mov
xchg
jnp
sub
mov
jmp
fisubl
add
rcrl
and
push
and
jno
outsl
popa
and
je
and
mov
pusha
jmp
sti
inc
lret
push
or
jnp
dec
rcrb
stos
xor
pusha
jmp
sti
inc
lret
push
or
jnp
dec
rcrb
scas
xor
pusha
jmp
sti
inc
lret
mov
or
jnp
dec
rcrb
stos
xor
pusha
jmp
jnp
dec
shlb
aam
xchg
sub
nop
insb
xchg
jecxz
test
mov
movsb
add
mov
mov
jnp
add
xor
les
aam
in
hlt
push
test
popa
movsb
popa
mov
inc
adcl
rcll
loope
adc
add
test
jno
popa
mov
inc
adcl
rcll
loope
adc
push
addb
sub
push
push
mov
inc
orl
pop
ret
loope
or
shlb
nop
pop
add
ds
jno
inc
aad
lods
ljmp
add
mov
xchg
jmp
and
push
icebp
mov
in
sbb
inc
mov
mov
jp
xchg
fcoms
cmp
addr16
or
test
cmp
xchg
test
je
add
loope
add
mov
mov
adc
pop
imul
movsb
jle
loop
mov
cmp
loope
jns
je
popa
sbb
xor
xchg
sub
pop
sahf
cmp
subl
or
aam
mov
aam
hlt
lods
cmc
and
mov
mov
inc
adcl
rcll
loope
adc
add
xor
and
push
test
jno
popa
fucom
sub
push
fisttpll
movsb
adc
push
fs
mov
pop
mov
and
cmpsb
adc
push
lds
mov
movsl
jo
push
cltd
xor
mov
inc
fwait
sbb
xor
and
jle
out
scas
pop
rorb
adc
and
xor
les
aam
in
hlt
push
test
jno
popa
mov
inc
adcl
rcll
loope
adc
add
xor
and
push
test
jno
popa
mov
inc
test
mov
pop
adc
mov
ja
xchg
outsl
rol
aad
and
mov
add
dec
mov
push
mov
xor
pop
dec
xchg
pop
sbb
push
inc
adc
lods
mov
les
adc
push
pusha
jo
and
pop
into
pslld
andb
jp
fdivrl
mov
pop
push
out
js
push
rclb
dec
push
push
xlat
add
mov
jg
jp
je
aaa
jnp
dec
enter
or
out
clc
in
popa
aaa
add
mov
lock
fcom
sbb
enter
and
enter
xor
inc
mov
or
pop
push
mov
and
es
mov
pop
rorl
out
mov
mov
cltd
xchg
dec
fldcw
adc
or
or
mov
xor
mov
cli
mov
and
push
dec
out
sbb
mov
mov
inc
pusha
scas
out
jp
mov
divl
shl
cmpsb
call
push
xor
pop
xchg
mov
dec
add
cld
addb
sbb
sub
dec
das
test
in
cli
push
or
mov
adc
adc
xor
pop
sub
stos
mov
xor
test
mov
push
xchg
push
xor
negb
cmp
imul
test
movl
jle
bound
mov
inc
push
sub
jbe
and
ret
xchg
aad
add
lods
imull
sub
std
in
mov
jo
jmp
shlb
pop
jl
push
in
test
cmp
adc
mov
xchg
pushf
sub
pop
push
in
push
adc
xchg
sub
xchg
push
aaa
dec
xor
mov
pushf
addr16
xchg
or
adc
out
pop
dec
ret
push
test
adc
mov
out
jmp
ret
jno
sub
int
push
rclb
in
cmp
pop
into
push
add
mov
outsb
adc
inc
pop
add
or
mov
jns
jg
pop
ja
cmp
pop
push
aad
aas
pushf
xchg
js
jne
mov
push
lock
test
jge
xchg
and
mov
cmpsl
gs
mov
call
xor
in
loope
inc
outsl
sub
push
dec
mov
scas
pushf
sbb
bnd
mov
imul
popa
bound
jle
dec
mov
xorb
add
cmp
fwait
idivb
pop
mov
cmp
ljmp
push
mov
int3
test
popa
pop
xor
ja
test
shll
out
shll
pop
inc
out
ja
lahf
adcb
ss
adc
mov
fstpl
sub
mov
pop
cld
int3
cli
popf
mov
sbb
dec
cmp
daa
jge
js
jo
cli
rclb
dec
jae
xchg
push
imul
ret
xchg
leave
cmp
loope
xlat
jae
push
stos
or
movsl
adcb
jecxz
pop
outsb
or
and
imul
xor
xchg
insb
into
ja
adc
jle
popl
lods
push
mov
test
es
pop
outsb
xchg
sbb
xchg
jge
mov
mov
mov
test
mov
or
jg
aam
push
movsl
psrlq
mov
adc
sbb
jp
ds
jno
outsb
pop
int3
stos
les
pop
cmp
xor
mov
mov
gs
shll
inc
movb
pop
push
aam
in
cmpsb
or
push
mov
mov
pop
mov
push
sub
arpl
mov
sub
fmulp
sbbb
aam
jecxz
enter
or
or
mov
mov
lret
sub
stos
js
mov
or
ss
in
dec
ja,pn
xor
push
adc
xor
scas
gs
leave
push
and
cli
adc
jmp
pop
add
push
clc
xchg
loope
sbb
sbb
scas
sub
and
xchg
int
mov
mov
cltd
cs
insb
dec
mov
push
jnp
xchg
fs
adc
dec
sub
xlat
pop
inc
lcallw
or
cltd
mov
ffreep
jmp
and
scas
mov
ja
push
call
mov
xchg
cmpsl
and
pusha
leave
xor
fwait
sti
jae
imul
sbb
std
or
xor
stos
iret
rcrl
dec
lahf
mov
jmp
adc
fwait
lods
or
int3
push
mov
adc
mov
jb
cmp
jmp
push
or
mov
popa
cmp
stos
add
js
dec
outsl
lret
scas
sbb
rcl
xor
int
push
loope
rcl
mov
loopne
ds
loope
in
push
ret
mov
jecxz
out
lea
mov
lea
imul
movsb
pushf
mov
bound
js
movntps
jbe
out
jno
mov
enter
push
sti
neg
xchg
inc
in
cli
inc
sbb
or
cmp
push
stc
dec
adc
cs
pop
mov
aad
adc
xor
adc
jno
jg
pop
sub
dec
scas
aam
xor
push
sbb
pop
inc
pop
push
push
xchg
mov
pop
mov
movsb
out
xchg
lods
mov
inc
mov
lret
pop
fmull
scas
dec
xchg
adc
das
lods
roll
movb
inc
sub
inc
cmpsl
xchg
and
or
push
xlat
jns
lret
jno
inc
dec
nop
mov
sbb
shlb
push
dec
fistpll
repz
daa
stc
and
lods
xchg
jl
add
loopne
in
aad
sahf
mov
movzbl
mov
push
mov
adc
loop
lock
inc
push
jno
mov
data16
mov
ljmp
call
mov
cmp
push
fsubrp
fnstcw
xchg
xchg
mov
sub
xlat
push
or
std
lea
inc
mov
lret
fs
arpl
xor
mov
aaa
adc
fsubrl
mov
or
push
pop
add
jae
jne
push
shrb
mov
fs
les
jbe
mov
xlat
aas
je
mov
addr16
xor
lret
xchg
sub
fnsave
mov
sub
sub
das
call
subl
jecxz
fistps
mov
push
adcb
and
cltd
mov
insl
cmpb
ja
rorl
ja
in
and
in
adc
xlat
je
jle
enter
dec
mov
jmp
enter
loop
movsb
cmp
mov
add
cmp
and
lods
xor
push
jb
add
adc
add
cltd
stos
fiaddl
inc
fdivrl
or
repnz
je
xchg
ljmp
shrl
push
mov
or
inc
jmp
in
hlt
jecxz
shl
cli
cli
lret
leave
mov
rolb
add
fisttps
jecxz
dec
cmpsb
repz
inc
mov
out
or
loopne
scas
xor
mov
in
mov
mov
xor
dec
jle
movsb
inc
insl
xor
jecxz
insb
cmpsl
bound
push
cmp
sar
out
movsb
andb
inc
sahf
dec
loopne
add
stos
in
test
ret
aaa
cltd
test
jecxz
push
addr16
imul
mov
add
adc
hlt
arpl
outsl
jl
pop
sbb
lods
pop
pop
in
pop
mov
je
sub
sub
mov
stos
jno
jo
clc
daa
cmp
pop
lcall
mov
aaa
std
mov
cmp
add
fidivrs
jns
add
mov
adc
pop
jmp
ret
add
mov
pushf
adc
shl
orl
push
gs
mov
xchg
fs
scas
imul
popf
movsb
out
inc
and
call
jecxz
lds
jae
xchg
mov
loopne
sub
and
call
adcb
shll
orb
clc
jle
insl
push
sbb
add
pop
mov
cmp
cmp
loopne
js
or
call
inc
fnstcw
or
mov
daa
jg
shll
dec
sbb
push
pop
lret
or
aas
ja
push
loop
popf
imul
mov
js
or
shlb
pop
push
into
sub
cli
loop
in
mov
ja
cmp
outsl
sub
mov
pop
jmp
inc
loop
cltd
push
push
fdivs
loope
xlat
flds
jns
push
mov
shrl
and
lea
cmpsl
loop
sbb
sahf
jp
push
jo
and
pop
adc
mov
insb
mov
pusha
sub
mov
lods
mov
data16
adc
sub
mov
and
sub
out
add
mov
xor
cmpsl
sub
mov
sbb
fimuls
adc
adc
pop
mov
ret
pop
int3
inc
movsb
xchg
nop
pop
xchg
mov
dec
xchg
lds
xor
add
fwait
xor
out
cmp
xor
call
icebp
adc
mov
xchg
cmp
sbb
jg
xor
lock
jo
loop
rolb
push
inc
adc
lea
xchg
xchg
sub
data16
test
and
inc
aas
add
inc
push
cmp
imul
je
and
stos
cld
xchg
jno
clc
jge
jne
and
mov
divl
out
add
in
sbb
or
outsl
sbb
subl
lcall
adc
nop
and
or
sub
jbe
pop
leave
adc
mov
movsb
fucom
cmc
pop
jl
xor
pop
scas
jp
mov
sbb
push
testl
pop
loope
push
lock
push
pop
movsb
sub
push
rorl
adc
mov
pop
mov
lcall
ret
push
mov
int3
mov
aas
insl
adc
or
data16
stc
xor
cld
dec
cmp
xchg
jo
test
mov
inc
and
mov
dec
faddl
or
xchg
rcll
pop
rclb
jnp
sbb
adc
pop
or
fisubrs
dec
rcrl
dec
fdivrl
push
std
mov
or
rolb
sub
loopne
fldcw
mov
jno
push
out
cmp
pop
add
loopne
mov
test
mov
fsub
xor
repz
sub
mov
js
xor
mov
lds
mov
jl
dec
sub
xor
repz
lods
and
bound
pop
push
mov
fnstcw
insl
dec
sub
cld
jnp
pop
cwtl
inc
lahf
jo
jmp
into
sub
push
pop
xor
in
rcl
jo,pt
pop
inc
pop
fdivrs
mov
insl
inc
repnz
in
inc
mov
xchg
gs
ljmp
mov
orl
pop
dec
cli
dec
mov
jae
inc
out
movsb
lahf
push
mov
popa
jge
daa
or
ret
outsb
call
mov
push
sbbb
dec
or
incl
jecxz
mov
ljmp
loop
sbb
sbb
jle
adc
sar
fisttpll
mov
adc
adc
jecxz
into
xchg
cli
scas
pop
jecxz
push
in
aas
xchg
je
adc
lcall
inc
push
cltd
inc
stc
into
imul
cmp
jg
je
int3
idivb
leave
jle
mov
pop
std
and
nop
mov
push
in
das
daa
cltd
push
pop
xchg
cld
das
dec
sbb
call
inc
mov
gs
jle
jg
dec
mov
dec
mov
add
sysenter
outsb
inc
push
push
adc
sahf
ja
mov
loopne
int
test
pop
loopne
push
bound
sub
mov
dec
js
push
out
outsb
int
lret
xchg
fnstenv
mov
sbb
push
ret
cmp
cltd
sub
jg
or
cs
mov
xor
xor
rorb
insl
mov
pusha
mov
adc
inc
lret
add
pop
xchg
xor
clc
negl
movsl
shll
adc
mov
jg
fimuls
mov
scas
stos
xlat
xor
jns
adc
lret
clc
inc
test
cmp
ret
mov
adc
xchg
xorl
mov
stos
xchg
jnp
mov
push
and
pushf
or
int3
mov
push
loope
lds
lds
mov
xor
sbb
les
out
cmpsl
add
iret
cmovle
inc
mov
gs
push
push
mov
adc
out
arpl
inc
popa
mov
adc
int3
dec
jecxz
mov
mov
js
jae
sbb
sbb
inc
call
adc
add
xchg
xchg
ds
jno
popa
jo
inc
sub
sbb
mov
es
sbb
xor
test
enter
or
int
add
sub
inc
gs
xchg
call
addr16
and
dec
in
imull
into
js
adc
push
xor
loopne
mov
pop
jne
scas
test
xor
ficomps
cmpsb
rcrb
fstpt
jno
push
out
sbb
rorl
je
mov
xchg
xor
and
or
add
call
in
xor
int
cmpl
sub
jns
dec
pop
sub
adc
pop
mov
cmpsl
sbb
mov
stos
sbb
and
jmp
jge
xchg
push
and
insl
mov
cmpsl
xchg
stos
mov
inc
movsb
adc
loope
out
insb
jb
aam
sub
je
ret
xor
jle
aad
adc
fcmovnb
push
xchg
pop
jecxz
sbb
push
scas
mov
and
ljmp
inc
fnstcw
popf
push
sbb
mov
in
popf
jbe
push
scas
mov
mov
push
inc
mov
ds
cmp
mov
adc
jb
mov
sbb
jge
sti
jecxz
in
int
xchg
rorb
jnp
cmp
not
loope
loop
pop
in
movlps
cs
adc
clc
ss
dec
jecxz
add
push
insb
mov
lock
xchg
jbe
in
lds
dec
jo
jle
test
aas
aaa
lcall
scas
fcomip
xchg
jns
aaa
jo
and
test
add
push
inc
adc
int3
mov
jp
jae
xor
or
xchg
push
lret
test
enter
scas
enter
push
out
jmp
xchg
ret
push
xor
or
mov
fs
pop
jne
xor
mov
fs
out
pop
jecxz
int3
int3
push
or
xor
mov
in
imul
inc
scas
fsubp
xor
fisttps
cs
mov
dec
ljmp
bound
pushf
mov
inc
je
js
sub
orb
pop
pop
xor
ret
into
decb
inc
mov
mov
inc
sub
and
xchg
loop
cmp
and
imul
outsl
mov
sub
repz
fdivs
icebp
xor
adc
push
mov
and
iret
out
mov
mov
es
decl
shl
cmp
dec
jo
aam
dec
inc
or
add
mov
scas
xchg
mov
loop
in
insb
cmpl
xchg
testl
add
fcompl
shlb
cld
dec
in
jbe
sub
dec
push
and
jb
adc
cmp
out
add
lcall
lahf
adc
push
pusha
and
adc
ljmp
dec
sub
xchg
xor
js
aas
dec
adc
adc
sar
stos
sbb
mov
add
sbb
leave
ds
insb
inc
sub
adcl
gs
push
push
xchg
adc
cmc
fsubp
or
or
mov
das
and
xor
bound
mov
out
idivb
ds
jnp
dec
sbb
lea
lods
mov
inc
es
cld
xor
and
sarl
lock
add
sub
and
mov
lods
pop
xor
jo
mov
and
inc
in
pushf
sti
add
icebp
push
cmp
add
mov
add
jae
cmpsl
jae
or
xor
xor
add
and
sub
fs
mov
das
ror
xlat
fisttps
scas
icebp
fsubs
pop
lds
xor
sbb
pop
and
scas
sbb
or
pushf
jle
rolb
jecxz
sbb
cmp
sub
jl
push
jle
xchg
jbe
and
ljmp
xchg
push
movsb
call
cmp
int3
pop
ljmp
into
adc
sbb
in
or
mov
push
icebp
ror
sub
mov
mov
mov
push
pop
scas
mov
aad
xchg
sbb
jns
pop
nop
loop
cwtl
sbb
movsl
push
mov
adc
lods
sti
je
inc
lods
stos
inc
jb
or
xchg
cltd
xchg
inc
loop
mov
addr16
add
insb
inc
in
adc
pop
mov
pushf
jle
lret
xor
and
xor
jecxz
fiadds
aas
adc
mov
ss
and
sub
add
in
ds
jg
call
mov
push
lahf
dec
std
leave
push
or
into
cmpsb
xchg
mov
jno
mov
ret
dec
or
scas
hlt
roll
repz
pushf
imul
inc
sbb
int
lock
std
mov
jge
lods
or
add
pop
mov
push
mov
stos
mov
push
clc
sub
faddp
or
bound
iret
rcrb
mov
test
mov
push
std
adc
and
mov
aaa
jbe
push
dec
jge
lret
cltd
data16
test
sbb
inc
mov
ds
fyl2xp1
or
sbb
test
cld
int
jle
out
dec
lahf
outsb
pop
nop
divb
and
out
inc
outsb
arpl
test
push
sbb
cltd
jl
cld
add
and
fisubrl
push
test
add
in
fstl
pop
fidivl
pusha
pop
dec
insb
pop
sub
sbb
mov
in
inc
pop
adc
jle
stos
je
imul
adc
ss
notl
mov
and
in
push
popl
aas
std
jecxz
out
jb
jl
mov
mov
lret
push
pop
push
push
rcr
pop
pop
das
in
fcoms
dec
test
push
cmp
pop
mov
lret
pop
add
dec
outsb
in
mov
and
clc
pop
push
mov
mov
lea
fwait
dec
les
insb
push
fidivl
lcall
or
subl
shl
push
out
and
in
dec
push
leave
dec
rcrl
dec
xchg
adc
and
fs
inc
adc
stos
insl
imul
test
popa
sub
mov
cli
fs
repz
dec
iret
mov
sbb
aad
add
mov
lock
jle
aas
int3
sub
xchg
mov
je
rclb
inc
push
sti
scas
loop
mov
mov
or
cld
push
xchg
sbb
imul
or
pop
pop
jae
sbb
in
inc
jo
into
loope
daa
ja
fcompl
mov
lret
push
mov
jp
jb
xchg
pusha
push
jb
inc
andl
xchg
iret
es
fwait
cmpsl
jns
out
push
xor
push
and
adc
mov
pop
jbe
cld
xorl
push
cmc
lret
sbb
push
cmp
jl
cmp
push
sbb
lods
stos
call
mov
iret
fbld
in
cmp
xor
cmp
movsl
decl
das
aad
add
fs
sub
insl
mov
fistpll
xor
ja
enter
cmp
mov
mov
es
or
ficompl
dec
out
loopne
push
repnz
fstps
cmp
and
imul
out
dec
and
das
lahf
jne
mov
or
mov
mov
xor
sbb
sub
cld
es
and
jne
xlat
test
mov
cli
aaa
inc
xor
jnp
lock
int3
push
out
xchg
xchg
or
bound
out
xchg
loop
add
js
pop
sub
jge
movsb
sub
loop
adc
dec
sub
mov
lods
imul
inc
push
repz
hlt
mov
and
dec
scas
pop
fwait
lret
subl
mov
mov
int3
xchg
mov
cmp
repnz
sub
or
clc
lahf
and
fs
lods
ja
fildll
add
fstl
call
push
jecxz
insl
pop
jbe
pop
push
popf
out
into
or
sbb
cmp
cs
push
daa
loop
cmp
imul
cmp
sbbb
lock
dec
jno
addr16
bound
sbb
cmc
in
dec
ror
add
dec
mov
pop
push
add
roll
adc
and
xor
les
aam
in
hlt
push
test
jno
popa
mov
inc
adcl
rcll
loope
adc
add
xor
and
push
test
jno
popa
mov
inc
adc
roll
xchg
icebp
and
xor
inc
add
xor
and
push
test
jno
pusha
mov
inc
adcb
je
add
adc
and
xor
les
jle
in
andl
leave
imul
or
cmp
sub
pop
add
lds
inc
mov
dec
imul
cmp
cmpsl
stc
sbb
or
or
push
fsubrs
enter
mov
cltd
je
push
cltd
dec
leave
sub
sbb
or
shl
inc
mov
imul
mov
mov
addr16
inc
cwtl
cmp
dec
imul
pop
and
pushf
ror
std
out
jno
clc
cmc
bound
enter
addr16
outsl
xchg
xchg
cmp
push
mov
pop
xchg
jbe
call
dec
orl
nop
xor
xorl
aad
js
push
leave
popf
mov
lds
lds
xchg
imul
es
lods
clc
out
sbb
jge
pop
sbb
mov
movsl
js
nop
loop
mov
mov
leave
cmp
dec
in
out
xchg
pushf
cmp
xlat
inc
cmpsb
xor
fsubrs
cmpsl
pop
mov
adc
push
inc
out
pop
clc
cmp
sub
mov
cwtl
iret
xchg
pop
js
jo
inc
cltd
push
xchg
and
xor
add
or
jnp
dec
mov
daa
leave
or
pop
fisubrl
pop
int3
sub
nop
ja
fs
xchg
insb
orl
sub
mov
cmp
decb
or
mov
jg
jl
clc
gs
or
imul
fnstcw
leave
sub
sbb
or
clc
or
cmp
sub
pop
mov
imul
fnstcw
leave
sub
sbb
or
clc
scas
sti
sti
pop
jmp
ss
push
lret
xchg
lock
xchg
fiaddl
pop
inc
leave
sub
arpl
lfs
push
daa
xor
sub
shrb
jmp
lds
imul
adc
push
test
and
ds
xchg
out
jo
add
aas
mov
ja
cmp
filds
ja
test
pusha
adc
in
xor
shll
js
out
xor
mov
fdivp
mov
adc
inc
mov
mov
imul
loopne
clc
jns
xchg
loop
jg
mov
insb
cmp
mov
adc
sti
psrad
lock
mov
cmpsb
pop
and
mov
sbb
dec
test
inc
daa
push
mov
out
sbb
jge
push
imul
mov
mov
sbb
out
pusha
stos
lods
pushf
xchg
adc
sbb
sbb
test
jo
adc
movsl
mov
inc
in
mov
mov
in
bound
dec
hlt
insl
mov
imul
adc
cli
mov
lret
jl
mov
js
lods
int
inc
inc
cmp
cmpsb
push
lahf
outsb
pop
pop
stos
cmp
jbe
lock
mov
mov
scas
inc
lds
into
rorl
mov
push
repnz
mov
stc
into
call
popa
add
and
shrl
push
inc
dec
rcrl
out
mov
pusha
inc
push
test
push
pushf
inc
icebp
xorb
out
js
jle
push
mov
ss
sub
lods
inc
or
sbb
imul
mov
push
aas
pushf
push
or
insl
pop
and
mov
pop
sub
aam
xor
ja
jmp
neg
cs
js
push
cltd
inc
aad
rol
mov
jno
mov
push
into
dec
cmovbe
add
xchg
repz
and
push
dec
push
sbb
adc
adc
pusha
cmp
movsb
call
lret
inc
push
jg
jge
loopne
imul
push
fadds
jg
add
push
add
fistpll
add
ss
jmp
out
rcl
scas
std
mul
aas
xor
mov
or
sbbb
lds
shlb
cli
test
test
or
loop
hlt
mov
test
adc
push
jl
sub
call
jo
test
fildl
xor
pop
sbb
push
sbb
inc
in
mov
lahf
filds
out
dec
jmp
incl
std
mov
mov
out
cmp
ja
das
mov
adc
sub
cmp
cmpb
sbb
or
sub
lea
xor
lret
and
sub
loope
adc
addl
loopne
in
cmp
cli
adc
scas
test
mov
or
mov
mov
or
gs
inc
popf
cmp
xchg
fidivrs
daa
add
mov
fistpl
je
gs
pusha
movsl
jl
and
test
and
jb
repnz
insb
inc
push
pop
mov
enter
leave
inc
lret
rcrb
adc
cmpsb
sub
daa
pop
cltd
push
sub
repnz
rolb
js
cmp
outsl
mov
in
cmp
jb
xchg
in
xor
or
jl
shrl
scas
adc
ds
inc
sbb
push
addl
rorl
sub
es
rclb
pop
insl
xchg
pop
mov
adc
push
out
test
into
lcall
lahf
stos
je
push
bound
pop
xor
cmp
or
mov
adc
dec
sub
push
mov
sbb
pushf
sahf
ds
lock
subl
movsb
cmp
cmc
sbb
push
push
sub
pop
or
loop
or
dec
and
cmp
sub
jb
daa
mov
jle
jmp
stos
fstpt
mov
mov
push
inc
repnz
pop
fldt
adc
lods
bound
mov
sbb
subb
or
stos
imul
addr16
pop
add
jl
aas
in
aam
imul
dec
or
mov
jns
in
mov
sub
dec
aaa
sbb
xchg
inc
gs
test
scas
in
cs
inc
xchg
mov
adc
or
xchg
inc
daa
mov
out
fwait
loopne
int3
cmp
or
out
stos
dec
dec
adc
push
decb
out
cmp
jno
pop
push
les
jae
loopne
inc
loopne
cs
cmpsl
jo
cld
js
mov
aad
test
or
mov
mov
dec
out
enter
dec
pushf
loop
ds
adc
mov
iret
in
inc
cmp
pop
or
or
xchg
mov
cmp
mov
outsb
mov
adc
sub
paddusw
mov
cs
mov
hlt
mov
push
xchg
pop
push
fwait
rolb
dec
or
scas
insl
into
pop
repnz
test
call
xchg
aad
cmc
jns
mov
push
lds
shlb
mov
aas
ss
test
flds
gs
mov
in
mov
aad
fs
rorb
adc
cld
scas
jno
movsb
inc
in
je
xchg
jmp
dec
dec
adcb
xor
pop
test
inc
and
rclb
add
pop
sbb
sti
xlat
shlb
push
adc
fidivs
sub
fildll
into
add
cmpsl
pop
fstl
nop
ljmp
jns
popf
mov
lahf
testl
sub
call
xchg
das
mov
movsl
imul
enter
push
ds
jl
push
sub
pop
stos
test
xor
sbb
std
sbb
cmp
push
sbb
sti
aad
mov
adc
je
xchg
push
xlat
loope,pn
insl
add
js
pop
notl
mov
insb
das
outsl
in
add
std
rcl
in
movl
sahf
cmp
ret
imul
sub
lcall
das
lahf
add
mov
out
sub
subl
out
mov
rolb
jae
mov
cs
push
push
iret
mov
dec
pop
push
fsubrl
mov
mov
dec
xchg
pop
rorl
jmp
aad
cmp
fidivs
mov
sub
ss
into
push
xchg
push
or
dec
xchg
fidivs
mov
ret
daa
mov
jle
jnp
test
or
rolb
movsl
pop
ja
lahf
cwtl
push
cmp
jbe
pop
inc
ds
add
dec
mov
fisttps
out
out
push
pop
pop
sahf
dec
jl
mov
arpl
movsl
and
jmp
sbb
push
adc
outsb
cmp
in
sub
dec
test
cld
xor
mov
loopne
stos
rep
and
ss
and
fstps
mov
jecxz
or
mov
addr16
mov
lret
gs
popa
loope
push
in
push
jns
fmuls
jb
ret
mulb
daa
sub
loop
xchg
scas
sti
jp
jge
push
xchg
lods
ret
popa
mov
push
fldt
shrb
ret
outsl
cmp
pop
pop
cmpsb
aad
or
pop
mov
cmpsb
cs
dec
push
scas
adc
idivl
inc
jbe
add
out
std
sbb
mov
fimull
call
xorb
cmpsl
or
mov
das
ds
sub
sub
jl
pop
lahf
imul
sub
xor
daa
xor
adc
pop
out
push
adc
shl
jl
jmp
dec
push
xlat
int3
xor
push
add
jmp
div
or
adc
cmp
add
push
mov
sbb
aas
or
jp
stos
adc
sub
test
push
nop
sbb
or
ljmp
fadd
lret
jl
std
test
push
scas
enter
subb
movsb
std
jno
pop
add
or
sbbb
fs
pop
mov
ficomps
jg
inc
sbb
out
mov
mov
loope
loop
inc
lods
sarl
imulb
inc
cwtl
push
and
clc
lea
xlat
in
mov
mov
cmc
pop
cmp
jl
fdivp
icebp
insb
enter
and
mov
pop
push
push
aam
inc
xchg
movsb
cli
mov
popa
lcall
insl
mov
mov
pop
mov
mov
js
cmp
xchg
mov
push
sbb
jge
dec
imul
repnz
dec
and
test
cmp
inc
xor
je
fiadds
jl
sub
insb
or
sbb
inc
jae
jge
lods
xchg
mov
sbb
pop
loope
faddl
push
adc
xchg
inc
lret
mov
movsl
nop
jge
inc
pop
shlb
adc
scas
lock
repnz
dec
mov
js
lcall
xor
xor
out
out
mov
stos
xor
sti
adc
arpl
clc
cs
sbb
inc
cmp
shl
sub
fistpll
inc
jbe
test
inc
sub
xor
lahf
adc
lret
jbe
add
adcb
or
lahf
sarb
aad
lds
dec
dec
and
and
in
mov
inc
add
ljmp
das
int
sub
dec
dec
or
movsb
mov
push
popa
dec
mov
fs
xchg
mov
lret
jnp
pop
stc
mov
jnp
test
cld
out
addr16
out
jo
pop
push
lahf
mov
outsb
pop
adc
mov
mov
rorb
jle
mov
push
mov
sbb
loope
into
loope
leave
jne
mov
jmp
pop
pop
movb
pop
xor
out
mov
lret
ds
jns
mov
js
icebp
mov
inc
push
cmp
outsb
mov
xchg
fisttps
xorb
push
lods
cmpsb
pushf
out
xchg
repnz
outsl
and
daa
cs
rorb
cltd
sub
dec
add
clc
mov
or
incb
ret
pop
fimull
hlt
cmc
test
cmp
dec
outsb
cmp
pop
lods
ret
gs
cmp
ss
dec
xor
gs
sbb
in
movsb
mov
sbb
pop
loopne
popf
js
adc
or
mov
ret
subb
sti
and
enter
jbe
adc
and
add
lahf
mov
gs
mov
pop
pop
push
ljmp
cmp
cmp
mov
sbb
imul
pop
pop
adc
and
adc
push
stos
adc
sbb
out
push
je
xor
jo
outsb
outsb
arpl
xor
shll
jns
lret
cmp
jp
jp
ret
jg
inc
testb
add
sahf
out
and
rcl
inc
mov
or
mov
cld
sar
shlb
or
xlat
push
cmp
rcll
ljmp
arpl
in
jg
xor
inc
das
fs
mov
div
ljmp
mov
ret
test
fwait
pop
xlat
jb
out
push
cmp
xor
dec
xchg
push
dec
xor
add
dec
mov
outsl
test
sub
addr16
pop
filds
cmp
mov
pop
test
mov
addl
shrl
pushf
jge
xchg
mov
add
add
out
or
in
push
push
pop
xchg
aam
icebp
xorl
sub
ja
sub
mov
bound
test
push
cmp
xchg
test
mov
xor
dec
xor
jnp,pt
jns
std
stos
dec
pushf
mov
aad
outsb
fimull
dec
test
in
mov
or
mov
pop
adc
cs
pop
cmp
inc
scas
rcrl
cmc
sbb
daa
fsqrt
fisubrl
test
fdivrs
mov
pusha
enter
outsb
lods
and
call
lea
cmpsl
js
in
push
mov
loope
mov
dec
sbbl
inc
ss
inc
mov
insb
sbb
jg
push
inc
dec
div
outsb
sub
inc
dec
popa
jl
push
xchg
adc
push
clc
pop
jno
int3
test
sub
fldt
je
push
and
enter
mull
into
mov
cltd
xor
imul
inc
aad
subb
add
sbb
jecxz
sbb
sarb
insb
test
in
mov
pop
mov
jnp
and
push
cmp
outsb
bound
insb
ljmp
push
xchg
adc
out
push
ljmp
and
adc
sub
fld
pushfw
push
dec
jnp
mov
fstpt
pop
inc
inc
ja
in
lods
sbb
imul
xchg
xor
lcall
xchg
test
shr
push
lock
xor
push
cmp
icebp
jge
adc
int
fstps
movsb
mov
popf
movsl
add
jnp
sti
add
sbb
xchg
imul
mov
ficoml
mov
mov
mov
xchg
mov
loop
push
outsb
cmp
sub
mov
dec
insb
ja
into
xor
stc
dec
mov
ja
mov
or
pop
outsl
push
sbb
loopne
into
cmp
inc
in
xchg
mov
add
outsl
movsl
shlb
rorl
outsb
fdivp
mov
and
adc
sbb
fcompl
sbb
stc
sbb
roll
stc
nop
lds
les
in
pop
sarb
add
xchg
rcl
pushf
insl
daa
out
fst
pmaxsw
dec
out
in
movl
xchg
lods
and
xlat
int
test
test
jns
inc
mov
or
insl
lods
sub
in
cmpsl
jo
mov
test
and
mov
scas
mov
push
sahf
or
push
fwait
xor
inc
add
popf
dec
out
outsb
clc
push
sub
sbbl
jo
dec
jo
fwait
inc
push
adc
test
test
imul
cs
cmp
sub
and
mov
xor
adc
mov
cmpsl
jge
adc
mov
or
rep
adc
mov
mov
and
gs
fdiv
movsl
cmp
and
ret
jecxz
pop
mov
jns
mov
cmp
sar
inc
aad
ret
movsl
scas
jne
xor
hlt
cmp
test
mov
push
mul
jecxz
fisubrs
jl
fcoms
push
addr16
in
addr16
fcompl
lock
add
jecxz
xchg
fwait
pop
dec
mov
dec
mov
push
mov
cmp
sbb
imul
sbb
inc
dec
push
out
inc
mov
arpl
leave
pushf
dec
xchg
std
loope
fisubs
jnp
inc
ucomiss
cs
nop
push
jne
out
ljmp
fcompl
xchg
jge
xor
das
or
fwait
ja
push
pop
mov
push
mov
adc
repz
loop
mov
jb
pop
mov
iret
mov
xchg
inc
out
cmp
adc
and
add
mov
adc
lods
cmpl
add
push
cmpsl
xor
pop
leave
mov
out
cwtl
out
les
xor
leave
stc
popa
xchg
jmp
mov
adcl
addb
nopl
repnz
in
push
and
shr
in
pop
jl
sbb
and
popa
mov
xor
out
sub
and
out
sbb
mov
pop
mov
and
or
add
pop
rcrl
jns
rolb
xchg
insl
popf
nop
fldenv
jg
popf
pop
jo
cmpsl
pop
dec
adc
sbb
or
sbb
mov
aad
or
pop
movsb
push
jg
fbstp
dec
rcll
add
sbb
out
push
mov
push
lahf
sub
pop
jmp
iret
xchg
add
or
mov
or
call
cli
leave
pop
enter
cmpsl
in
xor
or
shll
imul
faddl
mov
fsubrs
inc
clc
inc
divb
jno
mov
adc
inc
jnp
je
pop
mov
cltd
repz
pop
cmp
mov
xor
ret
pusha
cmpb
fmuls
push
enter
push
mov
push
xchg
pop
fwait
pop
xlat
xor
sub
xchg
je
cmpb
out
ffreep
ds
sub
and
sbb
cld
cli
js
int3
mov
arpl
cmpsb
jge
jbe
mov
inc
lcall
lods
lret
stc
leave
push
push
ret
push
mov
test
jbe
ret
push
dec
mov
push
sbb
jp
pop
push
jno
cltd
ja
mov
in
inc
stc
dec
push
pop
test
orl
xor
pop
outsl
adc
icebp
out
pop
fcmovne
cmp
inc
cmp
jbe
mov
push
gs
inc
fiaddl
add
push
push
ljmp
mov
lret
or
aas
data16
movsb
add
repz
mov
insl
sub
add
shrb
pusha
mov
inc
cwtl
scas
sbbb
mov
mov
adc
push
dec
sbb
and
shlb
icebp
xor
mov
and
cli
pop
dec
loop
je
dec
xor
sub
enter
mov
sub
xchg
fildl
mov
fldcw
or
loop
xlat
cmpsl
in
outsb
out
loop
scas
movsb
jbe
pop
and
and
pusha
loop
jl
xor
out
sarb
test
inc
es
xor
jle
dec
pop
jecxz
xlat
icebp
shlb
call
stc
scas
mov
inc
fimull
mov
inc
pop
sub
jle
mov
imul
jae
pop
lret
sub
shll
into
nop
out
arpl
lcall
sbb
adc
idivl
mov
out
lcall
jle
out
cli
repz
ds
inc
pop
inc
jbe
and
cmp
clc
daa
jns
inc
cli
inc
imul
aas
cld
das
sub
cmpsb
push
cmc
inc
adc
add
push
mov
aas
push
out
sarb
and
cwtl
and
les
movsb
out
lods
inc
rclb
outsb
adc
jp
inc
mov
stc
jae
xor
test
inc
clc
mov
mov
adc
lahf
subb
jbe
add
jp
cmp
jg
mov
fs
lds
push
mov
shrb
test
xor
sbb
xor
pop
inc
xchg
dec
out
mov
sub
daa
jbe
mov
fwait
xchg
xor
ret
ds
test
out
dec
rorl
or
ljmp
nop
sbb
loop
push
scas
fsts
ret
lods
xor
and
test
sbb
out
es
mov
cwtl
cld
cmp
jno
xchg
mov
adc
sbb
mov
or
add
xlat
pop
and
add
imul
xchg
out
mov
xor
aaa
aam
or
xchg
test
arpl
cmp
imul
aaa
shl
push
dec
inc
adc
shrl
pushf
cmp
into
xchg
aaa
sub
rcrb
pop
xor
inc
push
jns
sahf
jp
repnz
stc
lea
int3
sub
jl
sub
popf
adc
pusha
mov
loopne
adc
pop
adc
fwait
adc
and
addb
mov
jnp
xor
sbb
sub
mov
call
icebp
push
adc
imul
mov
lods
orb
rolb
outsl
insb
test
and
jnp
into
jbe
test
adc
jmp
repnz
pop
call
roll
pop
jbe
jg
mov
xor
push
dec
pop
data16
repnz
es
in
out
repnz
push
mov
cmp
push
jle
pop
cmp
and
and
ret
sahf
lcall
das
test
cmp
pusha
pop
mov
push
cmpsl
rol
lods
xchg
aad
inc
jbe
push
pop
jmp
push
add
jmp
repnz
push
sbb
xor
rcll
daa
mov
lcall
rcrl
inc
addb
push
ror
dec
scas
ss
lret
mov
pop
hlt
loopnew
mov
fildl
outsb
test
mov
les
mov
xor
xchg
in
mov
jp
mov
aad
repnz
add
addb
mov
sahf
pop
sbb
outsl
icebp
mov
loopne
andl
dec
and
dec
sub
sbb
test
push
xchg
pusha
aad
sub
mov
inc
mov
xorb
mov
icebp
cmp
sbb
sahf
dec
mov
testb
inc
mov
pop
fsubl
dec
out
scas
adc
sub
pop
mov
imul
fnstcw
leave
sub
sbb
or
clc
or
cmp
sub
pop
mov
imul
fnstcw
leave
sub
sbb
or
clc
cmp
pop
fsubrs
enter
test
cwtl
test
push
fnstcw
fldcw
stc
sbb
or
cld
push
in
arpl
or
pop
mov
jmp
ret
test
push
push
addr16
ja
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
ja
addr16
push
lds
cli
push
or
jne
inc
push
mov
cmpsl
aaa
xchg
add
addr16
push
lds
aaa
movsl
daa
cmp
test
loope
gs
xlat
inc
push
ja
cmpsl
xor
ja
addr16
push
insl
inc
xlat
aaa
cltd
daa
mov
imul
idivl
es
enter
jmp
fwait
push
mov
cmp
lods
ds
decl
data16
pop
xchg
adc
movb
aas
outsb
in
in
lahf
mov
dec
jmp
inc
bound
dec
and
test
or
push
fbstp
sti
mov
and
imul
mov
xlat
enter
add
xchg
cmp
movsl
xor
xchg
jle
push
lcall
dec
and
lret
mov
mov
xchg
outsb
andl
xchg
pop
ss
push
cmpb
adc
ljmp
int3
out
cmc
loop
ss
sbb
out
sub
rolb
addr16
aaa
movsl
daa
mov
pop
pop
adc
xlat
push
sbb
xchg
add
adc
xchg
sti
aaa
rcll
jae
add
xor
xor
inc
hlt
inc
shll
mov
movsb
sub
aaa
lret
outsl
jmp
stc
xchg
add
xor
fs
mov
mov
xchg
sub
pop
test
xchg
mull
jne
inc
push
mov
cmpsl
xor
ja
addr16
push
lds
aaa
movsl
daa
mov
test
xchg
mull
jne
inc
push
mov
cmpsl
xor
ja
inc
and
pushw
cmp
xchg
cld
fcomi
fiadds
and
pushl
inc
and
lods
dec
push
icebp
pop
sub
ljmp
subl
or
insl
imul
test
roll
push
es
outsl
mov
jo
jne
sub
or
stos
lcall
mov
lock
sbb
push
xchg
add
imul
sub
fcmovu
int
sbb
rcl
dec
jmp
pop
enter
xchg
jb
sti
jae
gs
stos
pushf
insl
sbb
je
push
xor
or
loopne
cmc
ja
call
xor
mov
pusha
xor
andl
cmc
pop
mov
aad
scas
and
mov
jns
call
ss
adc
pop
adc
imul
mov
aaa
arpl
sub
xor
scas
sub
dec
add
push
and
or
shll
aad
ja
imul
ret
jp
mov
xchg
pop
pop
cli
mov
add
enter
fisubrl
mov
dec
sbb
ret
mov
pop
in
test
inc
sysret
xlat
jle
cmp
out
in
add
rcll
scas
repz
shrl
and
leave
jb
ret
cmp
sub
jg
push
jno
cmp
test
jnp
mov
add
into
sarb
leave
sbb
xchg
cmp
icebp
or
push
rcll
push
loop
jbe
aad
xchg
idiv
clc
adc
gs
mov
lret
lods
outsl
cmp
mov
mov
adc
and
push
inc
rclb
adc
sbb
popa
push
xlat
sarl
imul
pop
into
push
xor
mov
xor
hlt
pause
pop
cmp
jnp
adc
add
lods
or
push
ficoml
test
and
mov
and
pop
out
pushf
jnp
mov
shll
test
insb
imul
cmc
xchg
mov
sbb
dec
icebp
or
bound
push
fidivrl
lcall
xlat
xchg
test
icebp
cmp
pop
in
adc
mov
sbb
lcall
divb
decl
inc
add
inc
mov
test
enter
add
ds
cmp
xchg
pop
push
movl
inc
dec
jno
or
andl
mov
arpl
mov
repz
adc
inc
sub
add
pop
stc
test
mov
shll
cmp
or
pop
add
jne
mov
xor
fcom
ficoms
outsb
push
push
sarb
or
pop
jbe
imul
cmp
outsb
mov
and
cmp
jmp
or
je
aaa
xchg
movsb
add
and
call
fdivp
jle
aam
xor
aaa
cmp
and
jns
enter
mov
sbb
mov
stos
mov
pop
stc
repnz
sbb
shrl
sub
sub
mov
gs
cmp
fs
dec
sub
mov
jnp
jge
push
dec
cmpb
leave
xchg
mov
shr
push
andb
cmp
lret
out
dec
fnstenv
and
jp
aaa
stos
out
adc
fcompl
inc
pand
xchg
aad
jo
cs
popf
fucomip
adc
sub
xchg
mov
stos
inc
enter
adc
adc
jae
test
into
in
xchg
bound
and
mov
out
hlt
nop
jb
or
and
inc
jle
fstpl
inc
push
pop
dec
push
mov
and
xchg
ret
mov
lods
shll
std
xchg
mov
push
mov
mov
jns
mov
sub
je
int
mov
sbb
and
lock
pop
gs
loope
pop
je
jecxz
sbb
add
pop
sbb
adc
jae
in
fwait
xlat
lret
js
les
dec
mov
cltd
inc
mov
inc
movsb
int
in
out
mov
repnz
dec
cmp
cltd
mov
mov
cmpsl
in
loopne
jl
test
mov
repz
sub
in
cli
nop
add
leave
jns
icebp
jnp
push
ss
push
mov
mov
pop
mov
icebp
imul
out
test
repnz
repnz
push
outsb
test
cmpsb
test
fwait
push
or
mov
roll
sbb
add
loop
and
cmc
add
xor
and
stos
ss
mov
imul
enter
lods
jnp
nop
inc
test
cwtl
xchg
aam
mov
xchg
call
cmp
clc
xor
dec
xchg
mov
lods
subl
test
in
leave
adc
sub
cwtl
cmpb
xor
pusha
xchg
roll
pop
pop
sub
mov
dec
fnstsw
cmpsl
int
roll
aad
xchg
jo
inc
xchg
add
mov
rcll
inc
xchg
push
mov
sub
jmp
xor
and
push
test
repz
int3
cmc
fdivrs
mov
xchg
cmp
or
dec
and
mov
pop
push
pop
add
roll
lods
fnstsw
jg
inc
dec
out
sub
rdtsc
rorb
pop
mov
or
mov
inc
shl
test
and
push
dec
aas
jp
or
out
jbe
out
ja
imul
out
jnp
imul
inc
inc
fcompl
in
rolb
loope
jno
outsl
int3
or
aas
add
push
sbbb
fisttps
mov
jmp
hlt
sub
pop
out
inc
jecxz
pop
sub
cmc
loope
cltd
call
inc
jne
pushf
add
dec
xor
jge
aas
sbb
adc
in
aas
bound
push
call
rcrl
lcall
jns
jno
inc
mov
push
aad
push
mov
out
test
mov
or
out
lods
mov
fsubrs
add
jge
fisttpll
cmp
pusha
mov
mov
jb
incb
arpl
imul
mov
ret
and
xor
mov
mov
and
popf
mov
test
jb
dec
clc
cmc
loope
cld
fsubs
and
cmp
test
or
jle
sbb
mov
aaa
mov
fmull
mov
mov
push
sarl
push
mov
es
imul
scas
jp
outsl
lea
loop
add
jo
pop
popl
push
dec
aaa
ja
in
adc
test
sub
dec
aaa
and
sub
push
scas
push
shll
int3
hlt
ret
or
shrb
adc
pop
mov
in
dec
mov
jnp
mov
and
mov
shll
sbb
mov
in
mov
ret
sbb
add
and
mov
in
xor
dec
pop
sbb
iret
pop
stc
inc
stos
add
jmp
cmc
push
mov
stos
aaa
test
sub
sbb
pushf
dec
sbb
xor
cmp
add
popf
jo
jbe
add
mov
sbb
lea
mov
insb
nop
les
sub
xchg
std
cmp
adc
jecxz
dec
out
iret
out
lahf
sbb
sbb
xchg
lock
mov
jmpw
push
stos
push
lock
push
dec
mov
fcomp
push
push
xor
sub
jae
dec
cs
pop
mov
pop
pop
iret
inc
repz
xchg
cmp
dec
add
sbb
aaa
push
and
dec
sbb
sub
add
pop
fwait
add
push
and
xchg
fwait
or
mov
mov
in
mov
outsl
lcall
push
xchg
sbb
xor
out
dec
insb
rclb
xor
add
andl
aaa
out
adc
push
or
ficomps
jbe
scas
cmp
cwtl
sbb
stc
adc
and
xchg
jmp
pop
xchg
fs
mov
mov
ret
nop
filds
ds
mov
lcall
sub
loope
mov
add
cmovb
pop
iret
xor
xor
lods
xchg
call
iret
push
in
lods
mov
xchg
out
imul
pop
stc
inc
and
push
ret
xchg
mov
repnz
add
pushf
js
push
es
imul
cmp
jmp
mov
jo
sbb
adc
test
js
cmovs
push
cmp
push
pop
addr16
inc
loop
stos
imull
out
jno
inc
jbe
push
mov
or
inc
mov
adc
pop
stos
mov
push
cmp
push
fcomps
push
movsb
out
aaa
addr16
sbb
or
mov
int3
iret
fistl
xor
pushl
xlat
dec
jle
add
fisttps
test
cmp
mov
cmp
ds
xor
jno
push
and
jae
fldenv
loop
sub
int
int3
cltd
movsl
push
sub
out
mov
test
inc
push
or
fstps
jl
mov
cld
or
jle
imul
mov
inc
pusha
in
jl
xchg
pop
xchg
dec
clc
add
adc
mov
mov
loopne
mov
rcrl
push
mov
cmc
rcl
push
mov
cld
dec
inc
xchg
jae
rorl
fnstcw
jl
sub
data16
lods
push
or
sub
jnp
jbe
pop
jnp
push
insl
push
mov
pusha
xchg
jle
mov
into
dec
mov
hlt
negb
sarb
pop
xor
sbb
out
movsb
cmpsl
ficoml
loope
daa
mov
push
lcall
je
jb
push
pop
movsb
aas
mov
test
cs
and
mov
push
or
mov
add
cwtl
adc
mov
xor
ja
sbb
bound
sbb
jge
add
aad
movsl
leave
fcoml
or
shll
mov
inc
fs
jns
mov
lret
inc
mov
xorb
int
stos
jne
and
stos
mov
jle
push
xchg
rolb
jl
mov
out
push
and
push
or
xlat
aam
stc
adc
xchg
xor
xchg
mov
pop
loopne
in
cltd
shll
pushl
inc
add
jnp
rcr
dec
jge
lods
in
mov
ljmp
dec
enter
lret
adc
mov
pushf
mov
push
mov
mov
fmul
jle
and
mov
stos
mov
test
dec
adc
xor
pop
adc
loope
loopne
sbb
sub
pop
jmp
iret
cs
jp
test
dec
push
mov
addl
divl
test
jae
sarl
sbb
xor
sub
mov
es
inc
adc
mov
jle
dec
or
lahf
jge
rcrl
lock
fmulp
out
popa
js
fcmovnu
mov
outsl
lret
addr16
inc
xchg
add
gs
ret
sub
push
sahf
mov
lcall
mov
popf
shr
or
std
nop
lahf
push
repz
push
xchg
fs
jge
iret
pop
pushl
inc
out
xchg
push
stos
ud2
int
sbb
fistpl
sub
push
repz
push
divb
and
sarl
cltd
scas
push
int
mov
sbb
pop
ret
dec
aam
push
cmp
sti
cmpsl
or
loop
pushf
jae
das
or
push
stc
movsl
inc
ds
dec
js
dec
mov
lds
jl
lcall
fdivr
lods
loope
jns
push
pusha
sub
jbe
lock
lahf
push
jmp
xor
shl
and
add
and
popf
mov
add
std
outsb
cmovae
aam
stc
mov
add
icebp
jmp
es
add
mov
cld
int3
lcall
xor
lods
xchg
mov
inc
pop
inc
push
negb
rcll
xor
sub
cmp
xchg
cld
sub
sbb
cltd
js
push
and
movsl
xchg
xorl
xchg
gs
jecxz
cmc
jl
inc
les
or
ss
movsb
inc
jmpw
divl
loop
aas
jns
adc
sbb
xchg
pop
pop
cmpsb
mov
cwtl
mov
aas
sub
inc
jge
ds
test
push
xchg
out
orb
imul
push
dec
repnz
pop
imul
jp
call
cmpsl
scas
ret
sbb
push
pusha
subl
fcmove
leave
fstpt
jne
stc
sub
sub
inc
cmp
pop
nop
clc
xchg
jnp
test
mov
cmpsb
call
les
xchg
jno
in
notb
mov
aas
cltd
dec
dec
stos
inc
push
fists
sbb
dec
cwtl
orb
insb
in
pushf
out
xchg
inc
aad
mov
mov
leave
mov
or
aaa
mov
adc
insb
sti
mov
mov
sbb
movsl
inc
jl
out
xchg
fadd
cmpsl
xchg
inc
rcrb
mov
xchg
xsha1
int
subb
dec
mov
outsb
mov
call
inc
lahf
pop
cmpsl
icebp
into
dec
ds
in
xlat
adc
cmc
mov
dec
adc
mov
pop
adc
enter
jle
pop
adc
ja
sbb
ljmp
mulb
mov
jns
jbe
popa
movsb
cmp
stos
cmc
add
add
out
pop
jecxz
sub
xor
test
push
in
or
lret
sbb
dec
loopne
mov
and
cmc
out
mov
push
pop
or
inc
mov
and
cmp
roll
push
mov
xor
repz
int
and
adc
pop
lret
mov
sbb
cmp
sbb
mov
xchg
cmp
faddp
xchg
jno
in
test
xadd
scas
inc
fsubrs
hlt
mov
fstpl
mov
add
sbbb
sbb
or
aad
xchg
mov
mov
jns
lret
icebp
lcall
mov
cmp
in
xchg
add
daa
inc
in
cmp
add
cli
cmp
icebp
shl
dec
test
sub
iret
xor
fstpt
repnz
mov
fiaddl
add
arpl
cmp
xchg
repnz
lret
mov
stc
je
jle
ljmp
mov
add
aas
test
mov
lahf
or
in
jmp
fidivrl
and
push
pop
sarl
es
fsubrl
pop
les
jo
lods
cmp
les
les
flds
xchg
inc
push
or
pop
inc
push
jmp
mov
icebp
leave
inc
pop
push
and
sahf
pop
pop
jno
inc
xchg
push
pop
insb
cmpl
imul
jl
add
subl
xchg
ss
cs
sbb
lret
aaa
lods
adc
adc
pop
pop
dec
iret
pop
bound
xor
jne
sbb
rorb
mov
or
cli
jae
mov
ret
fsub
or
mov
into
jg
add
mov
sbb
mov
loopne
push
jb
insl
jecxz
and
adc
adc
sbb
data16
pusha
fstp
clc
mov
stos
lahf
dec
nop
lret
outsl
dec
cmpl
mov
in
mov
mov
lcall
mov
dec
mov
pop
dec
jbe
lret
mov
enter
dec
sbb
xlat
cmpsb
fdivrs
pop
sub
inc
adc
xchg
or
jnp
test
sub
mov
aam
fisubl
outsl
fwait
repnz
out
fadds
push
rolb
pop
jmp
adc
xor
into
jns
xchg
pop
inc
in
mov
lods
outsl
pop
xor
enter
adc
pop
xor
jnp,pn
ds
movsb
jge
mov
leave
in
cli
mov
enter
ficomps
ror
stc
inc
jecxz
lahf
movsb
pop
jne
and
or
rclb
daa
push
and
sarb
sbb
mov
cmp
inc
aad
test
movsb
rorl
adc
cmp
pop
ret
ficompl
dec
adc
sub
negb
lods
pop
mov
mov
dec
jae
push
push
andb
dec
cmp
jno
push
movl
push
jae
sub
hlt
mov
movsl
cwtl
and
inc
inc
jge
xor
dec
pop
xchg
and
add
and
jp
inc
dec
into
in
xchg
scas
mov
pushf
adc
xchg
adc
std
cs
mov
mov
xor
aas
inc
push
int3
pop
out
add
js
xchg
fcmovbe
cmc
fwait
or
popa
xor
nop
push
jne
mov
jbe
lock
fucomp
rcr
dec
rcll
mov
loop
pop
mov
imull
movsl
lds
vphaddwq
pop
std
aad
fsubrs
pop
sbb
xorb
orps
mov
cmp
and
jmp
clc
cmp
cmp
out
ds
fdivl
pop
dec
push
imul
sub
mov
xor
in
add
mov
icebp
ret
rcll
cli
fildl
stos
mov
xchg
inc
mov
lds
sbb
int
mov
pop
int3
stc
mov
pop
pusha
hlt
stc
or
pop
outsb
jge
jno
xor
jae
push
adc
shrb
pop
cld
push
outsb
adc
or
mov
add
fxch
pop
popa
add
and
addr16
adc
rclb
int3
rorl
lods
adc
je
push
xchg
pop
lea
js
mov
lahf
mov
je
mov
inc
inc
imul
nop
and
xchg
daa
lret
xor
push
loope
lods
mov
sar
xor
pop
jns
adc
xor
psraw
adc
ret
dec
or
mov
jne
mov
mov
into
xor
mov
adc
orb
ds
push
inc
inc
repz
addr16
cmp
adc
dec
dec
imul
sbb
lea
sti
xchg
leave
repz
adc
pop
ds
inc
inc
rcll
sub
addb
cwtl
mov
mov
mov
mov
mov
jp
push
jo
fisubs
iret
aad
rorl
daa
cli
test
loope
mov
cltd
inc
mov
jl
jnp
pop
stos
inc
enter
loop
repnz
push
sbb
test
je
add
cwtl
mov
mov
cli
jg
sbb
enter
rcrl
push
pusha
fsubs
aas
xchg
dec
cmp
popa
push
fisubrs
popa
xchg
sti
cltd
lret
fmul
add
ret
xor
sub
dec
jno
aas
pop
std
bound
imul
out
xor
dec
jae
mov
xor
das
icebp
and
or
pop
xacquire
xchg
jecxz
sbb
movsb
dec
test
inc
inc
aam
addr16
xor
ret
mov
push
jmp
inc
add
lods
mov
fwait
jecxz
int3
inc
sub
inc
cmp
push
xchg
fmull
pop
sbb
sbb
mov
out
sub
cwtl
mov
dec
std
add
mov
xlat
ds
jae
les
in
mov
enter
mov
xchg
ret
aad
or
dec
xchg
ja
addr16
cmpsb
or
stos
xchg
mov
divl
stos
out
pop
hlt
iret
inc
mov
jle
mov
pop
daa
sbb
mov
xchg
das
mov
je
xor
movsl
out
scas
out
outsl
pop
and
cs
fimuls
lret
and
clc
jno
stc
sub
lock
dec
shlb
leave
push
and
adc
ret
cmp
nop
lret
sbb
popa
scas
test
jecxz
jge
jmp
inc
cli
fldenv
leave
inc
xor
jge
ror
xchg
lock
xor
sbb
mov
push
data16
mov
sub
push
and
dec
in
add
mov
sub
imul
js
cmpsl
jp
lret
pop
scas
fistpll
popf
out
push
jl
enter
test
dec
lods
cmp
sbb
push
pop
dec
data16
mov
fsub
sbb
pop
lods
pop
lret
push
push
sarb
inc
pop
imul
lret
adc
call
fld1
sub
sub
xor
sub
movsl
mov
xchg
in
mov
xchg
insl
cld
xor
imul
and
inc
loop
sub
test
loopne
push
jle
nop
mov
xchg
scas
hlt
aaa
aas
push
call
scas
jo
or
pushf
jo
add
shll
sahf
loope
xchg
push
inc
in
xor
mov
mov
in
or
xchg
shlb
cli
sub
jbe
movsl
mov
mov
jnp
jecxz
or
insl
iret
pop
xor
mov
mov
xchg
mov
pop
shl
add
dec
std
loopne
sbbl
dec
jle
xor
push
fisubl
adc
dec
sbb
mov
cmp
or
pushf
arpl
loope
jge
int
xchg
pop
mov
xchg
pushf
push
aas
pop
jne
fsubrs
push
icebp
adc
addr16
or
aad
lea
jmp
jbe
xchg
adc
pop
dec
push
sub
cmc
pop
dec
cmc
push
test
daa
mov
test
xchg
mull
jne
inc
push
mov
cmpsl
xor
ja
addr16
push
lds
aaa
movsl
daa
mov
test
xchg
mull
jne
inc
push
mov
cmpsl
xor
ja
out
xlat
mov
daa
sbb
idivl
push
mov
cmpsl
xor
ja
addr16
push
lds
aaa
movsl
daa
mov
add
out
jge
and
lods
xlat
lret
imul
mov
inc
iret
cmc
mov
int3
movsl
scas
fcomi
movsl
sub
jg
dec
jne
gs
adc
add
and
inc
push
scas
xchg
mov
shlb
inc
sub
das
jo
add
not
out
xlat
cmc
in
xchg
cmpsb
test
push
je
and
sub
add
pop
jl
jbe
lahf
cltd
pushl
cmpsl
das
inc
push
mov
mov
xchg
mov
pop
pushf
ret
jo
lret
out
aad
aad
lahf
iret
push
jg
push
das
cmpsb
inc
cmpb
add
xchg
je
xchg
sbb
dec
popf
outsb
xchg
push
addb
lcall
fsubr
aas
pop
out
shrb
loopne
mov
xchg
stos
test
lahf
inc
pop
test
add
stos
add
mulb
xchg
or
push
in
movsl
stos
adcb
pop
test
adc
jl
push
in
adc
xor
outsl
aas
mov
nop
push
addb
pop
lcall
pop
fisubrl
aad
enter
movsl
test
push
addr16
push
jne
gs
adc
push
arpl
mov
icebp
shl
rcrl
and
xor
push
jp
out
mov
fldl
jecxz
fimull
or
sub
dec
jo
xchg
jg
pop
jno
xchg
int
stos
nop
fistps
mov
movsl
outsl
push
jg
dec
jne
gs
adc
pop
and
iret
cmc
scas
xchg
mov
movsl
outsl
push
jg
dec
jne
gs
adc
pop
and
xchg
lcall
xor
movl
pop
push
outsb
add
pop
lock
lds
inc
in
aaa
mov
pop
insb
inc
mov
sub
mov
or
xchg
loop
mov
jle
stos
sbb
xor
adc
push
and
pop
adc
test
sbb
in
andb
mov
ss
xlat
pop
lock
mov
jg
sbb
loop
xor
stc
out
lret
fcoms
push
dec
or
cmp
xor
aad
and
inc
push
fadd
pop
mov
and
push
pop
jb
cmpsl
pop
insl
ljmp
sbb
fisubrl
dec
adc
sbb
cmp
dec
pop
inc
fsubs
xor
mov
mov
and
scas
imul
into
xchg
sub
sub
int
leave
dec
add
mov
fnstsw
rorl
jg
adc
mov
cwtl
jmp
incl
scas
into
mov
jae
pop
pop
push
sub
fldl
ret
xchg
xor
rorb
ret
push
aad
cmp
pavgw
fmulp
fwait
iret
movsl
cmp
sbb
xor
sbb
int3
cmc
std
stos
xor
push
mov
pop
pop
fwait
jno
sub
test
imul
insl
push
jecxz
movsb
inc
movsl
sbb
lea
jle
mov
or
inc
repnz
pop
popa
sub
add
add
stos
jb
and
jae
mov
imul
jbe
inc
repnz
push
les
and
and
or
cwtl
icebp
cmpl
js
imul
xchg
loope
cltd
pop
mov
adcl
fcoml
xchg
in
cmp
mov
call
call
jae
xlat
jg
stc
lock
in
and
mov
fs
jg
aad
adc
xor
jecxz
push
loopne
and
cmp
or
mov
cwtl
jge
test
mov
mov
add
cltd
arpl
jg
mov
xchg
mov
add
pop
mov
lea
add
ret
iret
pop
aad
inc
int
or
imul
test
lods
jns
and
std
hlt
pop
pop
lock
daa
popf
loop
in
je
pop
mov
adc
test
imul
mov
jle
jae
cmp
jp
sbb
loop
xchg
mov
lahf
sbb
adc
add
fnsave
mov
outsb
je
dec
xchg
ds
jge
inc
lret
push
jl
cmp
pop
test
in
sti
lret
xchg
sbb
cmp
pop
call
add
or
pop
call
mov
addb
decb
or
inc
or
fidivl
push
inc
gs
std
aas
shrl
cmp
sbb
push
xchg
sbb
clc
pop
and
popf
sub
aaa
incb
test
add
loopne
mov
arpl
lea
lods
leave
xchg
adc
push
push
ss
cmp
mov
jecxz
lds
popa
jmp
push
push
jle
pop
cld
xchg
xor
clc
stos
es
repz
ja
adc
xchg
sbb
push
mov
jo
push
add
push
test
js
sub
or
push
lds
push
pop
fld
dec
sbb
inc
repnz
pop
cmp
outsb
out
mov
leave
push
ret
pop
fstpl
mov
mov
mov
or
jns
test
sbb
inc
ljmp
xor
lock
ret
sub
testl
inc
pop
addb
cmp
lea
sub
and
lock
gs
out
out
mov
mov
add
sbb
pop
pop
arpl
dec
jp
mov
dec
inc
mov
insl
dec
insb
xchg
mov
repz
scas
mov
jmp
mov
fsts
xor
dec
push
mov
mov
jns
sbb
cmp
adc
mov
xchg
loop
jl
mov
and
dec
push
mulb
jecxz
jge
add
in
movb
nop
cmc
rol
mov
aam
lods
mov
push
cmp
or
fmull
cmp
ljmp
jnp
hlt
cwtl
cmp
adc
push
clc
call
mov
mov
dec
repz
pop
or
fnsave
adc
imul
dec
in
mov
adc
movsb
xchg
sub
loope
sub
div
stos
mov
jb
pop
jns
fimuls
mov
inc
movsl
push
iret
outsl
movsb
inc
movsb
fs
cmpb
in
fnstenv
sahf
sub
hlt
pop
xlat
in
addr16
jecxz
xor
adc
mov
add
xor
decb
and
lods
imull
pop
push
div
or
fldcw
pop
test
push
mov
into
jg
pop
lock
dec
sti
add
les
mov
sub
movsl
push
sub
popf
or
icebp
sahf
mov
jmp
cltd
jg
imul
ret
pop
loope
in
nop
ss
sahf
add
bound
mov
rclb
scas
out
cs
arpl
test
mov
cmp
dec
jno
outsl
mov
add
scas
mov
lahf
lahf
add
xor
mov
jmp
inc
sub
mov
pop
push
inc
or
lret
jp
andl
add
popl
jmp
in
xor
xchg
jmp
cli
push
fisubrl
fisubrs
push
inc
std
int
ficompl
jmp
pop
mov
mov
mov
shl
sti
sahf
jne
xchg
iret
and
xchg
outsb
mov
out
and
sub
xchg
ret
push
out
push
dec
jecxz
xchg
jno
lds
jle
mov
je
mov
test
xor
jae
das
jbe
clc
mov
inc
insb
fmuls
cltd
or
or
sti
cli
mov
dec
add
push
lds
xchg
fists
outsb
clc
adc
es
or
push
stos
stos
and
jne
stc
cld
xor
pop
jo
push
rcrl
js
ljmp
test
pop
das
fabs
dec
xchg
aaa
dec
adc
push
pop
fstl
test
rolb
fnstcw
jg
xor
daa
mov
loopne
les
sarb
inc
xor
pop
repz
out
fcompl
jp
cmc
adcb
add
aad
and
xlat
pop
dec
and
std
in
jmp
icebp
mov
cmpl
add
or
les
mov
popa
adc
jp
cs
sar
xlat
mov
jl
dec
cmpsb
add
push
out
cmc
mov
rolb
adc
repz
push
test
and
sbb
out
pop
pop
mov
jo
dec
scas
mov
cmpsb
jo
or
adc
subl
test
jp
pop
xlat
push
cmp
inc
jb
push
and
orl
xchg
cli
in
insl
sbb
mov
iret
scas
aad
inc
sub
clc
outsl
outsb
lahf
es
adc
scas
sbb
addr16
lds
sarl
jp
test
ror
cmp
push
clc
dec
or
xchg
sub
dec
add
rep
cli
sbb
dec
bound
sbb
add
insb
aad
or
pop
pop
pushf
dec
push
cmpsl
popf
add
les
jge
out
lea
andb
ljmp
popa
mov
aaa
pop
jo
scas
shlb
fwait
xor
dec
popf
cmp
std
pushf
cli
jp
popa
dec
jo
cmpl
add
jge
insl
xchg
in
pop
pop
mov
pop
dec
jno
xor
adc
stc
fstps
dec
mov
lahf
pop
scas
mov
faddl
imul
pushf
cmp
dec
cmp
dec
dec
jmp
xchg
aas
jecxz
cmp
fistpll
mov
cwtl
mov
ret
ret
pop
scas
xlat
xchg
pop
xor
inc
inc
cld
push
add
sub
mov
ja
test
call
push
push
js
push
outsl
insl
aas
and
clc
fbstp
mov
push
shlb
sub
adc
xchg
gs
movsl
inc
jb
inc
jne
stc
push
pop
repz
mov
loopne
cmp
outsl
sub
cmc
mulb
pop
fsubrl
mov
out
lds
and
movb
aas
push
push
mov
aam
fists
xor
pop
addl
aas
xor
lcall
jo
stc
in
jmp
aaa
sub
aaa
stos
mov
sbb
out
sub
mov
jbe
call
mov
mov
add
dec
shl
test
cs
test
or
mov
movsl
shrb
insl
arpl
mov
movsb
shrl
les
inc
gs
pop
push
mov
jbe
pop
aad
sub
jno
shlb
lods
test
or
sub
adc
lds
out
out
jmp
cmp
movsl
rolb
jle
out
jle
xchg
in
sbb
or
add
mov
sub
loope
neg
stos
out
pop
jns
jae
sub
cmc
clc
fs
cmp
test
jo
ss
iret
pushf
cld
je
icebp
jbe
out
xchg
sbb
imull
cwtl
ja
and
popf
enter
xchg
dec
xor
out
popa
dec
inc
sahf
jp
into
loope
add
cmc
out
pop
pushf
mov
xor
xor
les
jae
fisttpll
push
jb
nop
cmc
aam
rol
cmp
flds
jnp
fsts
aas
les
in
imull
mov
cltd
in
out
jne
pusha
push
mov
rorb
mov
mov
shll
adc
jae
adc
sarb
jle
nop
lahf
shl
sub
jnp
ret
dec
xor
pop
faddl
jmp
xorl
iret
pop
out
push
in
outsl
ss
jl
test
sbb
jmp
sub
fs
cltd
invd
mov
cltd
js
push
inc
adc
xor
imull
sub
pop
sbb
test
fstl
and
movzwl
push
xor
jno
pop
lret
repnz
jb
sbb
xchg
xchg
fsubrs
movsl
je
xor
aaa
push
mov
daa
inc
ficoms
mov
jmp
loop
xchg
addl
mov
mov
inc
xor
outsl
outsb
negl
xchg
movsl
les
mov
aas
jno
mov
sbb
push
push
add
inc
leave
mov
mov
loopne
scas
add
lcall
and
arpl
cmpsb
dec
mov
inc
adc
xor
and
decb
mov
cmp
sbb
mov
lock
inc
sbb
popf
mov
pop
jmp
mov
jno
stos
call
popf
or
adc
jbe
adc
cld
and
scas
das
xchg
jno
rorl
inc
rorl
int3
out
movsl
in
sbb
in
das
jbe
sub
adcl
sbb
cmpsb
repz
xchg
push
lods
xor
repz
xorb
lret
mov
xor
adc
push
push
push
rcll
inc
cmpsl
lds
cmpsl
rol
shll
cmpsb
xor
pop
xchg
or
cmp
lret
cwtl
sub
and
imul
lods
lods
stos
cwtl
sub
mov
rclb
dec
scas
outsb
mov
addb
mov
sub
inc
loope
enter
xchg
insl
inc
jp
xchg
inc
dec
cltd
jbe
mov
push
daa
add
ret
jbe
pop
push
testl
ret
pop
mov
popf
inc
out
push
pop
jp
mov
or
mov
insl
repz
test
outsl
jecxz
push
lods
rclb
dec
push
jg
or
in
push
push
or
pop
lea
add
out
and
ds
push
dec
test
or
push
in
jne
fldl
add
jb
xor
sbb
or
push
sarb
shll
bound
xchg
cld
jbe
pop
imul
ja
scas
push
stos
lods
xor
lods
mov
bswap
and
xor
mov
xor
cmp
test
jb
cmp
clc
xor
sub
and
js
add
add
mov
outsb
pushf
popa
iret
pop
cmp
push
xchg
mov
dec
jae
pushf
sti
mov
sti
adcl
inc
mov
roll
mov
adc
push
or
stc
cmpsl
xor
inc
jo
cmp
jae
insb
cltd
fwait
sub
std
enter
sbb
test
push
cmp
push
jne
insl
in
push
or
cmp
xchg
loop
cmp
jbe
sbb
mov
push
push
mov
loopne
xchg
inc
adc
mov
ds
sbb
fsubrs
iret
jp
xchg
arpl
in
xchg
jno
clc
mov
jl
stos
xchg
add
push
xor
movsl
ret
in
or
adc
xor
icebp
out
xor
mov
push
and
sbb
mov
lock
sbb
inc
mull
mov
sub
into
xor
imulb
sbbl
in
outsl
sub
adc
xor
cli
sbb
pop
sub
addl
mov
fcomps
cmp
xchg
cmp
and
call
mov
into
xor
adc
pop
jbe
jecxz
lret
push
rolb
mov
lea
mov
sbb
mov
dec
js
jb
fstpt
jns
fwait
test
jle
xor
pop
aas
insb
mov
push
add
lahf
movsl
lret
jge
mov
pop
sub
pop
pop
push
mov
cmc
fisubrs
mov
dec
mov
xor
gs
aad
xchg
cli
fsubrl
xchg
xor
call
mov
or
xchg
pop
js
je
jmp
fsts
sub
leave
pusha
xchg
fucomp
xchg
roll
shrb
and
enter
bound
inc
jns
pop
adc
jae
and
je
mov
mov
mov
xor
and
xchg
or
adc
add
xor
inc
xchg
lahf
and
pop
inc
dec
in
sarb
jmp
js
loop
xor
mov
outsl
out
das
xchg
outsb
das
movsb
imulb
lds
hlt
ret
sub
mov
enter
jae
or
pop
xchg
jae
or
adc
mov
jmp
sahf
mov
int3
rorl
sub
nop
rcrb
in
xchg
into
inc
mov
call
jecxz
lret
pop
gs
lds
mov
sbb
jne
fsubrs
leave
mov
in
adc
sbb
test
loope
addr16
xor
xor
push
repnz
and
xchg
into
inc
iret
in
and
movsb
es
rcll
cmpsb
jp
xor
push
xor
scas
add
les
jp
or
mov
jecxz
adc
fcoml
sti
jae
hlt
iret
cltd
ja
or
add
jle
and
scas
sbb
js
xor
rclb
in
fmull
or
imulb
mov
sti
mov
nop
mov
sarb
adc
jp
push
int
mov
or
fnsave
jle
daa
scas
cmp
xchg
cmp
lds
out
aad
mov
mov
inc
and
cmp
cmpsl
push
pop
xchg
sbb
fstpt
inc
pop
mov
into
jg
mov
sub
mov
xor
xchg
or
rolb
add
sub
hlt
ret
push
xchg
sbb
mov
push
aam
aam
pop
call
sbb
cmp
mov
fxtract
inc
add
sub
or
push
mov
fsin
push
fisubrs
jb
fcmovnu
out
ret
push
pop
popa
pop
in
push
aas
mov
lods
push
xchg
test
shr
push
xlat
in
leave
dec
es
gs
lods
test
mov
mov
in
ret
add
or
lds
cmp
icebp
push
jae
sbb
jbe
loope
cltd
and
mov
inc
fldl
push
sahf
stos
and
loopne
push
adc
ja
sbb
mov
mov
mov
in
inc
push
adc
in
cmp
fimuls
pop
sbb
leave
daa
inc
ret
push
in
mov
std
cwtl
popf
enter
and
hlt
je
ret
loop
fidivl
aad
push
int
or
fiadds
arpl
aam
and
popa
push
jl
je
jle
js
fwait
xor
enter
iret
mov
mov
out
push
cltd
lret
fisttpll
in
jle
into
xor
xor
out
mov
pop
or
push
neg
fimuls
add
push
cld
sbb
into
das
repnz
pop
gs
insl
xchg
add
pop
or
mov
cwtl
idivl
mov
sub
scas
addr16
inc
or
popl
jae
pop
push
in
jmp
mov
ret
or
test
jnp
cmp
push
sub
pop
push
stc
pop
cmpsl
lock
test
out
mul
or
jle
sub
mov
xor
movsl
int3
nop
in
decl
je
xlat
cs
push
add
mov
dec
cmc
popa
aam
jl
out
add
cwtl
dec
mov
loop
ret
xchg
ret
dec
pop
aad
aaa
cmp
mov
sub
cmp
jp
xor
add
jl
push
xchg
fnsave
mov
xchg
jmp
jno
dec
pop
jmp
mov
inc
sahf
divl
out
push
lret
cwtd
loope
stos
sub
mov
or
cld
xchg
movsb
add
aaa
push
push
sub
je
pop
imul
pop
mov
fwait
cmp
sbb
sti
sbb
cmp
ljmp
sbb
test
pushf
fs
movsb
add
sbbb
lret
pusha
out
xchg
adcb
mov
cmc
pop
xorb
fucomp
mov
and
push
lods
sub
mov
or
mov
lods
aad
unpcklps
sbb
sub
jb
out
cmpsb
cld
xchg
push
add
movsl
sbb
pusha
neg
addr16
int
push
adc
mov
ret
cmp
call
dec
inc
jmp
hlt
fcmovne
pop
gs
arpl
test
daa
enter
data16
movsb
mov
pop
xor
roll
fiaddl
repz
sbb
sbb
gs
icebp
repz
outsl
arpl
outsl
pop
push
lods
fstpl
fwait
lea
mov
push
leave
jp
adc
imul
data16
rcrb
add
lods
enter
mov
aad
aad
adc
mov
cmp
xchg
cmpsl
mov
jbe
aas
jb
popl
pop
fwait
scas
push
xor
pushf
cmp
mov
inc
fwait
sub
test
add
test
enter
xorb
dec
push
lret
jge
outsb
fdivrl
mov
inc
ret
aam
mov
clc
sahf
stc
jno
cmp
sub
lcall
jns
or
in
mov
jle
jne
aas
push
in
hlt
mov
or
push
mov
lds
or
sbb
dec
aaa
jle
push
mov
lcall
std
mov
mov
mov
push
mov
sbb
xchg
out
aad
jnp
xchg
stos
jecxz
pop
xor
je
xor
sub
cmp
ret
leave
dec
pop
mov
jl
subb
mov
mov
xchg
fldt
push
push
movl
cli
lret
jle
lock
xlat
stos
jecxz
push
add
or
cwtl
fbld
es
push
icebp
adc
icebp
fs
stos
add
lods
out
jo
xor
mov
rolb
das
add
jg
or
fldenv
xor
mov
shll
adc
movsl
mov
jb
pop
jns
jecxz
mov
add
mov
cmc
adc
sub
clc
cwtl
jns
sub
mov
ret
jle
adc
xchg
mov
fisubrs
inc
mov
sbb
adc
shll
jb
mov
popf
mov
mov
pop
mov
lods
jnp
mov
jae
sbb
mov
push
lret
dec
sub
imul
fs
mov
push
ret
frstor
loop
adc
sbb
inc
lahf
xor
sbb
add
pop
jmp
jo
cmpsl
repz
sbb
xor
test
aad
cld
imull
mov
jmp
adc
dec
addr16
push
inc
adc
das
icebp
lds
mov
movsl
outsl
push
jg
dec
jne
gs
adc
pop
and
iret
cmc
scas
xchg
mov
movsl
outsl
push
jg
dec
jne
gs
adc
pop
and
iret
cmc
scas
xchg
mov
movsl
outsl
push
jg
dec
jne
gs
adc
cs
stc
cmc
scas
xchg
mov
gs
push
sub
jne
adc
mov
lock
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
mov
xchg
pop
sbb
icebp
filds
or
pop
add
or
pop
add
out
sub
sub
sub
in
add
add
add
cld
add
add
add
add
add
fldl
add
popf
add
test
mov
pusha
add
add
add
cmp
in
fwait
add
lret
add
add
add
out
add
add
scas
add
add
add
clc
add
add
cld
add
add
add
mov
add
add
add
add
ja
mov
inc
add
ret
add
add
add
call
add
add
add
add
in
push
sbb
add
add
add
add
add
add
add
adc
mov
aam
jns
xchg
add
add
sbb
rolb
add
add
testl
adc
leave
add
push
add
add
add
cmp
int
loope
in
leave
add
out
add
pop
add
add
popf
add
push
add
arpl
inc
add
inc
add
js
push
add
add
add
add
add
add
mov
push
add
add
hlt
add
cmp
out
adc
inc
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
jns
add
dec
add
jns
cmp
in
repz
add
sbb
inc
add
push
add
mov
mov
mov
mov
inc
add
add
add
pop
add
add
add
add
testb
add
add
mov
add
mov
add
rolb
repz
add
add
add
pop
add
add
add
add
add
add
add
add
xchg
add
dec
add
ret
add
loope
jns
loope
xor
js
data16
add
add
data16
add
add
insl
add
add
add
add
inc
add
or
pop
add
xor
incb
mov
stos
add
add
add
add
add
add
add
loopne
xchg
add
add
or
add
add
add
add
add
mov
rolb
call
add
add
add
incl
xchg
add
add
mov
in
test
mov
add
xchg
add
add
add
add
add
add
lret
add
or
jle
push
popf
add
add
mov
mov
add
mov
add
add
mov
sub
loope
pop
add
add
add
add
add
add
fldl
outsb
add
stos
add
bound
hlt
add
add
jns
test
cmp
bound
outsb
add
add
add
int
mov
push
add
add
add
add
add
add
add
scas
add
add
add
add
add
add
add
add
pusha
add
add
add
cld
add
add
add
add
add
add
add
fldl
pop
add
flds
out
add
cmpsb
add
loope
inc
add
add
add
add
outsl
add
add
add
add
add
add
test
xor
mov
add
jecxz
jge
cmc
sub
add
xchg
jmp
mov
js,pt
push
lds
imul
adc
ja
sbb
fiaddl
xchg
mul
insb
out
xchg
xchg
idivl
push
push
pop
jne
pop
pusha
daa
leave
xor
das
pop
add
icebp
hlt
mov
xchg
fcomps
enter
daa
inc
pop
or
outsb
sub
push
in
enter
or
mov
les
scas
cmp
addr16
push
in
push
push
insl
xchg
dec
xchg
sub
dec
pop
xorl
mov
jp
add
add
roll
mov
mov
jmp
and
movsl
sbb
scas
es
ds
les
scas
pop
xchg
in
inc
add
xchg
jp
push
mov
lock
gs
loopne
movsl
imul
movsl
inc
icebp
mov
xor
pop
mov
dec
flds
sahf
sub
cmpsl
lods
fidivrs
cld
addl
inc
data16
inc
shr
or
inc
cld
repnz
mov
xor
lcall
adc
xchg
inc
xlat
xchg
out
push
jnp
xor
sbb
jne
scas
pop
push
push
xchg
push
into
mov
xor
mov
and
push
mov
xor
js
inc
pushf
jmp
icebp
sbb
popa
jl
or
gs
mov
pop
pop
fadd
movsb
je
push
stos
dec
imul
imul
dec
cmp
sub
jno
iret
mov
imul
xchg
or
out
insb
insl
aas
fisubs
and
mov
mov
jo
and
aas
aaa
ret
insb
sub
lret
ds
fldl
hlt
je
xchg
push
mov
aas
inc
das
adc
bound
mov
mov
dec
lods
jae
pop
pop
pop
fs
jno
mov
jo
insl
lods
test
sbb
arpl
in
pusha
mov
adcb
mov
add
fisttpl
sub
mov
bound
sbb
lret
lea
xor
js
int3
cs
sti
pop
and
inc
mov
mov
sti
ficoms
xchg
nop
adc
lret
iret
leave
adc
flds
add
pop
sbb
fs
cwtl
inc
jle
sti
xchg
or
push
daa
ror
mov
movsl
stc
into
pop
pop
add
pop
push
inc
mov
mov
sbb
lds
dec
lahf
fisttpll
or
inc
outsl
hlt
and
jmp
jb
jp
and
dec
and
out
xchg
ret
push
push
push
adc
and
add
mov
dec
inc
add
das
shlb
fsubrp
clc
test
pop
pop
push
adc
sub
mov
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
