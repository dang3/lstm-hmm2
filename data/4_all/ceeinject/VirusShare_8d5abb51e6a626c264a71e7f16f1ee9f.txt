call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
lods
sub
pushf
sbb
test
jecxz
mov
insb
in
jl
dec
int
pushf
sbb
int3
dec
fsubl
js
sbb
insb
cmpl
sub
pushf
sbb
int3
dec
fcompl
lods
cmp
jg
xor
add
pop
stos
add
mov
sbb
inc
daa
out
dec
out
les
out
insb
in
roll
daa
jle
mov
push
adc
movl
inc
sbbl
mov
xor
sbb
mov
push
xor
aam
int
clc
cmc
std
sub
gs
and
in
jl
daa
mov
sub
sub
orl
adc
dec
pop
fcoml
enter
movsb
nop
push
in
hlt
int
fnstsw
push
shl
jb
cltd
loope
jle
lods
int
and
test
adc
cmp
sbb
out
hlt
jne
mov
jge
dec
int
enter
cmp
in
insl
cld
jge
dec
fcompl
lods
cmp
or
sbb
insb
in
jl
dec
int
mov
sub
jl
or
mov
test
aam
mov
or
or
fsubrl
sbb
int3
and
cmp
les
pop
clc
or
pop
mov
imul
js
inc
cld
jge
dec
fcompl
lods
cmp
or
sbb
insb
in
jl
dec
int
pushf
sbb
int3
dec
fcompl
lods
cmp
or
sbb
insb
in
jl
dec
int
mov
xchg
jne
ret
pop
inc
inc
dec
es
int
clc
in
int
lea
sub
arpl
enter
jp
dec
mov
ficoml
fbld
fldcw
pop
sub
xor
imul
arpl
inc
divb
jnp
cmpsl
mov
std
sbb
les
outsb
mov
mov
xchg
testb
insl
mov
loop
xchg
and
int
or
add
lds
ficomps
jne
addr16
test
repz
in
sub
mov
pop
sub
push
enter
stos
fisubl
in
hlt
shl
rcr
mov
in
outsb
xor
cli
xorl
sub
inc
jne
jns
cmpl
jno
or
mov
in
mov
sub
push
ja
stc
addl
repnz
push
int3
and
pop
ficomps
jl
xor
mov
js
addl
dec
test
clc
mov
das
push
mov
push
push
mov
inc
lret
inc
dec
repz
mov
lods
imul
rcrl
outsl
sub
jae
mov
jecxz
jmp
pushl
push
imulb
mov
sti
outsl
add
rolb
into
jae
push
cmp
jecxz
inc
in
je
outsl
dec
cli
test
leave
in
icebp
xchg
or
repnz
popa
and
jle
jne
sti
sahf
loop
mov
aaa
in
mov
push
cwtl
push
jle
lea
enter
pop
sub
inc
xor
movsb
icebp
mov
push
xlat
dec
and
jno
cltd
cmpb
xchg
std
xchg
mov
push
fwait
mov
sub
loop
popa
fisubl
test
mov
loopne
addr16
shrl
rcr
dec
sbb
and
sub
mov
out
pop
or
xor
repnz
test
stos
fs
xchg
mov
add
and
xchg
out
adc
cmp
inc
not
fs
les
int3
jp
push
inc
sbb
repz
cwtl
enter
pushf
fcmove
lcall
insb
ud0
test
pop
pop
sbb
movsl
jmp
jns
pop
stos
sbb
inc
testl
mov
dec
xor
xor
push
je
jbe
xor
nop
ds
ficomps
xor
dec
call
stos
jo
movl
shrb
cltd
adc
push
popa
sbb
jne
out
add
fsub
in
mov
xlat
aam
and
ja
jo
and
mov
cmp
cld
movsb
cmc
push
fistps
pushf
add
or
xlat
je
popf
push
mov
addr16
mov
imul
fs
adc
push
add
stos
push
faddl
and
lock
push
inc
inc
xchg
sub
mov
call
mov
push
mov
and
cmp
notl
roll
mov
mov
cmpsb
mov
push
and
insb
mov
nop
test
daa
mov
jle
cmovnp
ret
dec
lds
sbb
cmp
push
push
cmp
mov
mov
icebp
push
and
pop
loop
icebp
inc
or
adc
and
xchg
loop
xor
cmc
movsl
jl
jg
lret
pop
sbb
stos
dec
mov
stos
rcrb
jmp
xor
divl
mov
xchg
test
fbstp
insl
push
test
or
jge,pn
fs
cmp
mov
jg
mov
xchg
fcmovnbe
loop
dec
jae
pop
push
hlt
arpl
cmp
and
sarl
aam
popf
jb
dec
mov
into
bound
jg
push
fsts
mov
int
dec
iret
sub
fstp
stc
fbld
les
pop
outsb
xchg
adc
aaa
jmp
mov
lods
or
jns
mov
jl
inc
lcall
jl
jl
ds
or
push
int3
adc
test
test
shll
jmp
js
add
cmp
or
push
lahf
add
pop
test
sbb
stos
xchg
insb
fidivs
mov
push
mov
push
push
adc
insb
sbb
mov
je
fisttps
cmpsb
cmp
and
in
push
aas
sbb
ja
mov
mov
iret
inc
and
ss
loope
fstp
mov
aaa
inc
test
jno
shrl
sbb
pop
jb
adc
push
orl
dec
rcll
push
lea
adc
pop
scas
mov
test
xlat
jmp
inc
and
and
mov
gs
xchg
std
ja
jae
fsts
sbb
pop
sub
add
testb
repnz
fldl
cmc
sbb
lcall
mov
adc
out
call
push
aaa
sbb
sbb
mov
aam
lret
dec
xor
test
loope
pop
mov
lds
jle
cmpsb
push
mov
scas
xchg
inc
jle
fiaddl
mov
outsw
xchg
jle
sbb
std
lock
ja
dec
stos
popa
or
ljmp
nop
imull
mov
cmp
add
int3
out
enter
sub
xchg
hlt
inc
jo
jge
dec
jb
sub
mov
mov
xor
fucomip
hlt
lcall
aam
and
push
push
dec
mov
add
and
pop
add
int
jo
sub
push
es
dec
iret
dec
jmp
inc
adc
ret
iret
imul
arpl
inc
jo
addr16
loope
loope
cs
gs
test
xchg
lods
mov
pop
and
and
lea
or
aad
lret
or
les
cmp
gs
jae
enter
inc
cmc
andb
mov
mov
out
dec
out
dec
xor
jp
test
inc
add
push
in
hlt
add
insl
dec
aas
ja
and
sbb
lods
xchg
cs
cli
or
jle
push
repz
rcl
mov
adc
mov
jle
or
mov
gs
mov
pop
in
jne
fcmovu
push
bound
jp
dec
push
mov
and
stos
jmp
daa
in
or
jno
mov
and
mov
jne
dec
cmp
js
stc
dec
mov
rcl
adc
rolb
and
fsubs
sub
jmp
mov
ret
adc
mov
mov
sbb
or
sub
inc
xor
paddd
stos
lods
jbe
fimuls
das
mov
dec
gs
sub
or
lcall
adc
daa
rolb
cmp
mov
xchg
int3
xchg
inc
loopne
sahf
cmpsl
push
pop
in
add
add
mov
paddq
sbb
adc
stos
mov
lea
imul
outsb
pop
dec
push
stos
into
mov
sbb
repnz
cmpb
nop
pop
xchg
mov
inc
mov
out
sub
xchg
outsl
roll
fadd
jg
sub
jb
pop
push
cmp
mov
xlat
pop
mov
jmp
jb
add
sub
xor
dec
mov
outsb
ficompl
pop
fwait
cld
call
inc
ret
jge
add
sub
les
inc
sbb
ds
icebp
lret
push
xor
ret
out
ss
cld
mov
loop
mov
shlb
cmpsb
and
jbe
jge
mov
lds
xor
les
test
cmpb
and
inc
jg
mov
add
cmp
imul
xchg
jnp
subl
cmp
adc
inc
aaa
adc
icebp
fs
lods
in
ss
jle
inc
in
shl
out
and
jge
stos
leave
or
arpl
jp
sbb
shr
jge
sti
sti
inc
test
push
fcomp
mov
pop
mov
cmp
mov
push
sbb
popf
mov
in
in
xchg
push
mov
ljmp
add
andb
aas
sub
pop
std
icebp
dec
int3
push
sub
ret
sbb
xchg
mov
xchg
lahf
or
dec
ja
fcompl
ljmp
cmp
scas
and
mov
fcoms
pusha
hlt
mov
cli
xchg
dec
les
sub
adc
test
adc
into
mov
xlat
mov
ja
inc
dec
push
jmp
popf
sbb
jae
cwtl
imul
mov
in
xchg
xchg
fisttps
push
pop
add
cmpsl
dec
mov
les
and
mov
testl
mov
mov
das
mov
out
add
pop
movsl
pop
xorb
push
mov
pop
dec
lods
mov
push
sub
adc
adc
cmc
popa
sub
mov
test
jno
jecxz
add
or
xor
inc
testb
cmpsl
fbld
or
out
adc
addl
pushf
outsl
cwtl
mov
cltd
stos
fmuls
loopne
mov
pushf
jmp
test
test
shl
push
jl
je
jge
jb
push
xor
pop
sbb
xorb
dec
dec
cli
lea
dec
push
daa
mov
or
sub
or
xor
aas
dec
cli
inc
push
bound
jno
ss
sbb
pop
divl
outsl
mov
stos
push
icebp
mov
lea
jle
add
outsl
xchg
fists
stc
inc
pop
sbb
popa
shr
mov
pusha
test
mov
lahf
cmp
enter
cmp
jns
stos
pusha
xchg
mov
or
leave
fcmovnu
lods
mov
and
js
outsl
dec
pop
pusha
loope
push
or
sbb
rorl
jb
lret
cli
inc
lods
scas
jmp
adc
jp
pop
fidivs
imul
das
aaa
sbb
xchg
jmp
xor
inc
dec
pop
inc
es
sub
nop
mov
daa
mov
rorl
das
js
push
add
and
stc
fimuls
xor
push
or
test
gs
shrl
jp
aaa
lock
pop
jle
test
mov
xchg
js
pop
mov
int3
mov
mov
imul
or
and
mov
in
sbb
pop
icebp
inc
cmp
pushf
cmp
push
jno
xlat
inc
mov
xchg
push
add
fcmovu
adc
outsb
push
dec
ja
addr16
cmp
bound
test
aad
fwait
stos
insl
ss
mov
loope
mov
add
stos
add
sarl
adc
xchg
das
jge
fisttpl
sub
mov
adc
jno
mov
adc
push
out
insb
ljmp
add
dec
fucomp
jno
mov
adc
pop
xchg
push
fadds
cmp
mov
pop
addl
aas
mov
gs
test
jecxz
test
into
or
sarb
jo
adc
jg
xchg
test
lods
fistl
sbb
and
pop
addr16
iret
fildll
mov
xor
sub
movsl
mov
pop
or
ljmp
mov
in
jmp
addl
scas
adc
pop
push
jno
dec
pop
xor
fwait
sub
cmp
push
xchg
and
mov
mov
mov
jnp
fimuls
dec
sbb
jle
adc
jae
mov
sub
outsl
dec
jp
mov
movsb
loop
lahf
xchg
inc
testb
mov
movsl
cmpsl
fstl
inc
jecxz
pop
movsl
cs
ret
dec
cmp
std
add
push
xlat
test
xor
out
mov
ljmp
mov
outsb
popf
rcl
jge
xorb
bound
or
and
ffreep
dec
mov
mov
inc
negb
jnp
mov
mov
stos
js
inc
mov
jno
clc
dec
cmpsl
loopne
or
outsb
ljmp
arpl
scas
iret
std
xor
imul
lcall
fmull
add
push
adc
adc
xchg
xchg
mov
dec
testb
das
out
shrb
push
sub
aam
test
adc
or
lcall
mov
and
mov
add
mov
int
leave
lea
xor
cmp
dec
fwait
dec
inc
jnp
xchg
inc
mov
or
xor
and
push
add
mov
xlat
fstps
je
xchg
and
mov
out
insl
push
mov
mov
pop
cmp
xor
cli
xor
mov
cli
psubusb
popa
mov
xlat
adc
adc
cmp
jmp
lds
push
xor
cmp
scas
lods
ret
fisubl
cs
scas
jmp
pusha
mov
repz
mov
notl
je
dec
pop
aaa
fisttps
arpl
cld
mov
scas
inc
pop
pop
loope
adc
fadds
pop
add
orl
lahf
sbb
mov
or
test
into
nop
repz
sbb
mov
scas
fisubl
pop
xor
in
int3
sub
aad
in
ret
daa
daa
sub
cmp
repz
jo
pop
cmp
popf
sbb
add
sbb
adc
movsb
sub
mov
jecxz
outsb
xchg
jge
enter
repnz
jns
dec
jae
lcall
and
push
into
lea
out
xorb
test
mov
push
js
loope
push
xor
into
es
icebp
rcrl
cmp
pop
out
and
fidivrl
push
cmp
mov
hlt
call
icebp
insl
fs
xor
int
push
out
scas
xor
pop
cli
mov
adc
nop
hlt
mov
mov
bnd
ret
in
test
inc
in
mov
outsl
or
mov
add
inc
xor
divl
mov
dec
xor
out
mov
xchg
adc
into
sbb
pusha
rol
push
mov
js
mov
stos
out
fbstp
orb
pusha
jnp
xor
ds
aaa
subb
push
pop
test
xor
mov
jnp
mov
cmc
fwait
test
shrb
pop
fisttpl
shr
mov
dec
mov
ja
or
jmp
lcall
jecxz
out
inc
hlt
mov
aas
jb
xchg
pop
stos
cmp
pushf
das
js
xchg
dec
jge
mov
sti
adc
loopne
mov
cli
fdivrl
or
sahf
cmp
call
sub
jecxz
sub
or
into
inc
lret
mov
sub
fwait
lds
dec
iret
push
mov
cmp
push
idivl
jge
pop
add
pop
push
pop
je
cmc
in
cwtl
test
js
xchg
addr16
xchg
sbb
push
lret
fwait
or
push
push
setnp
sub
mov
xchg
add
add
xchg
movsl
std
mov
add
mov
sbb
dec
das
mov
xchg
rcl
push
addr16
jge
in
cld
lds
nop
popa
mov
pusha
hlt
add
test
dec
inc
adc
mov
das
std
out
test
ljmp
sub
sbb
fwait
jne
inc
dec
sbb
xlat
mov
jge
sbb
icebp
mov
inc
test
aam
cmp
dec
xor
dec
stc
xor
scas
popa
mov
xchg
add
cmp
addr16
pushf
mull
mov
mov
div
loop
mov
ljmp
mov
push
pop
call
in
add
cs
push
subl
cwtl
jae
add
pop
in
outsb
mov
sbb
jmp
sarl
add
inc
iret
stos
xlat
mov
lahf
das
pop
jbe
into
das
sbbb
enter
mov
push
insl
ds
scas
dec
and
dec
inc
dec
movsl
fdivl
sub
sarb
mov
add
sub
out
cli
mov
pop
jp
rcl
pop
push
popa
mov
fcoms
xchg
push
cli
inc
ja
lea
sub
sub
push
in
jb
stc
pusha
nop
ret
dec
data16
inc
aaa
outsb
cs
dec
mov
cmp
cmp
mov
insl
inc
fcmovnbe
dec
inc
daa
lcall
dec
mov
xor
xchg
aad
ja
xchg
cmp
xor
mov
fisttpl
imul
and
xchg
cmpsb
inc
sub
jg
js
iret
mov
pop
fcomps
sub
push
add
pushf
and
mov
cmp
movsl
cmp
mov
adc
idivl
lock
lea
pop
enter
lods
adc
enter
popa
mov
push
leave
sti
movsb
enter
roll
dec
das
inc
push
push
ret
test
xchg
js
in
xor
xorl
jb
sahf
jo
lods
mov
lds
insl
or
mov
sbb
fmuls
xchg
std
inc
data16
pop
pop
bswap
mov
fs
mov
sub
rorb
mov
mov
cmpsl
xchg
jne
fimuls
je
sub
or
mov
mov
inc
sbb
fwait
out
dec
aam
push
mov
mov
es
ret
inc
cli
in
pop
sub
sub
popf
mov
cld
mov
jae
call
dec
mov
mov
jnp
adc
addr16
jbe
lods
in
dec
or
movsb
cmp
lods
out
sub
gs
in
ss
dec
pop
sahf
cmp
cmp
mov
inc
cmp
fisttpll
popf
rolb
test
dec
push
jo
test
jg
lods
dec
jle
roll
push
pop
das
add
aam
push
iret
lods
mov
mov
sub
in
pop
outsl
xor
inc
out
fdivrs
inc
jb
push
cld
fisttps
fsubrp
mov
add
xor
sbb
mov
loope
inc
call
mov
xor
xchg
ror
sbbb
sbb
xor
and
lods
lods
popa
push
testb
dec
xlat
mov
and
int
sarb
sti
inc
mov
pop
dec
das
subb
lahf
cmc
ret
pusha
in
iret
stos
je
add
insl
push
adc
js
sbb
bound
ljmp
mov
lret
push
out
movsl
aas
xchg
pop
mov
lock
jge
fcompl
push
mov
js
mov
sbb
inc
xchg
into
push
ja
vmwrite
pop
cmp
daa
jnp
sahf
jbe
mov
lods
and
push
mov
inc
xorl
dec
jne
pushf
mov
fbld
mov
add
nop
push
xor
xor
push
xchg
or
cld
xchg
sub
push
push
add
test
loopne
mov
and
stc
sahf
lods
add
adc
mov
pusha
test
cld
cmp
into
or
sbb
nopl
add
push
mov
sub
and
enter
jle
mov
mov
sbb
pusha
in
sarl
scas
in
adc
adc
sbb
stos
mov
and
dec
sub
sbbb
adc
ret
lret
int3
pop
or
inc
xchg
jae
repz
test
push
jmp
ljmp
xor
pop
movsb
sbb
fldpi
mov
dec
adc
adc
repz
sahf
add
test
ret
lods
mov
or
int
out
fldt
pop
inc
sbb
movsb
push
mov
or
loope
dec
or
loope
dec
das
sbb
push
and
inc
test
push
xchg
mul
push
push
mov
mov
push
test
xchg
and
arpl
cmp
iret
daa
lods
add
mov
pushf
daa
fiadds
sub
roll
xorb
fs
or
sar
mov
xchg
inc
stos
add
xor
dec
mov
push
push
insb
ljmp
pop
in
sbb
sub
arpl
and
xchg
xchg
inc
ja
mov
and
push
es
xchg
xor
xor
cwtl
or
ss
jge
repnz
lret
inc
dec
stos
sub
pop
pop
stc
or
pop
or
cltd
fildll
lret
jae
and
push
imulb
leave
and
out
es
inc
mov
adc
ret
mov
out
jl
cmc
sub
push
enter
fs
lods
in
outsb
rcrl
push
dec
arpl
sub
fmull
call
sbb
push
mov
push
adc
or
cmc
mov
insb
fstpl
scas
cmpsl
mov
lods
loop
and
fidivs
push
movsl
or
stc
xchg
cmp
sub
clc
xor
loop
movsl
out
adcl
xchg
cltd
push
mov
mov
inc
dec
xchg
pop
inc
lods
dec
clc
jmp
fstpt
jmp
sub
cmpsl
mov
push
ffree
fcoml
scas
negb
fdivrp
xor
iret
push
popa
ret
jns
imul
xchg
mov
mov
cld
jge
dec
fcompl
lods
cmp
or
sbb
insb
in
jl
dec
int
pushf
sbb
int3
dec
fcompl
lods
cmp
or
sbb
insb
in
jl
dec
int
pushf
sbb
int3
dec
fcompl
lods
cmp
or
sbb
insb
in
jl
dec
int
pushf
sbb
int3
dec
fcompl
lods
cmp
cmpsb
lea
sbb
add
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
aaa
roll
pop
popa
fstpl
and
push
mov
xchg
popa
out
testb
xor
and
shll
roll
pop
loope
xchg
ja
inc
mov
aad
push
mov
out
xchg
popa
out
testl
daa
inc
aaa
roll
pop
jecxz
lods
ja
inc
pop
push
mov
out
repnz
mov
scas
dec
test
in
cmpsb
push
or
mov
mov
arpl
pop
mov
pop
xchg
js
int
and
shlb
ficomps
sbb
adc
ret
das
lods
mov
jmp
iret
arpl
std
mov
cmpsl
fsub
sar
push
add
xor
adc
shll
loope
pop
addr16
pop
jmp
mov
jno
xchg
pop
adc
fcmovb
enter
add
jg
inc
mov
ret
mov
popa
mov
lahf
add
sub
fists
aaa
jl
loopne
fildl
icebp
xchg
pop
pop
push
popa
sub
mov
jns
adc
inc
xor
movsl
js
aaa
xor
jne
jmp
xchg
ja
inc
imul
xlat
mov
xchg
sub
cmp
xlat
dec
push
xorl
mov
iret
and
adc
add
xor
iret
pop
add
or
jo
inc
js
je
jae
pop
les
adc
cmc
xor
pop
call
push
lods
inc
test
push
enter
sbb
es
ja
inc
mov
mov
xchg
popa
out
testl
daa
shll
roll
pop
loope
xchg
ja
inc
mov
mov
xchg
popa
out
testl
daa
shll
push
mov
int
or
out
mov
sub
lret
jae
adc
movsl
jae
fdivrl
mov
xchg
jbe
and
mov
mov
scas
stc
mov
std
sbb
xchg
aaa
call
aaa
shll
pop
adc
ljmp
or
sar
adc
pop
push
sbb
pop
and
cwtl
icebp
push
test
repnz
add
loop
rclb
jg
stos
cmpsl
shrb
dec
sub
ljmp
outsb
bound
sbb
and
mov
ficomps
repnz
mov
mov
cwtl
inc
leave
mov
mov
fsubl
sbb
and
and
xlat
jle
add
rcll
add
ja
sub
adc
jnp
movsl
or
cmpsb
stos
ret
mov
xor
sahf
push
push
jns
cmpsb
add
and
ror
inc
pop
repnz
mov
scas
mov
loop
push
lods
and
jecxz
cltd
lods
lds
fnsave
das
cmp
fcomip
add
sbb
pop
dec
add
xor
gs
pop
and
pop
lcall
mov
js
push
xlat
lahf
outsb
cmc
and
stos
cmp
mov
int
or
pop
leave
push
pushf
hlt
clc
inc
sar
jne
jno
push
pop
mov
push
sbb
xor
out
adc
fdiv
mov
sbb
lea
dec
jecxz
mov
push
ret
sub
std
notl
fwait
decl
add
sub
mov
movsl
push
pop
mov
inc
filds
rorb
xchg
incl
lds
mov
dec
sbb
ret
cld
mov
lock
out
inc
data16
loopne
push
xor
xchg
pushf
aam
ret
xor
scas
push
jl
fsts
jbe
sbb
jne
mov
inc
dec
repz
das
mov
xor
push
arpl
mov
mov
lahf
or
imul
add
cmp
pop
adc
mov
inc
pop
sbb
xchg
push
rorl
cmp
xchg
cmp
or
hlt
lods
fimuls
cwtl
aaa
lods
xchg
lahf
xor
lods
jl
xchg
cmpsl
sahf
adc
fisttpll
push
outsl
call
jmp
xchg
ja
or
dec
insl
pop
cld
push
adc
cmp
and
push
jae
xor
pop
clc
lock
push
inc
lods
in
sbb
outsb
fwait
mulb
dec
add
in
pop
mov
and
pop
sub
add
mov
pusha
mov
clc
je
sbb
pop
or
adc
das
mov
sbb
ret
popa
fcoml
push
sub
or
icebp
cmpl
mov
je
mov
and
or
dec
lret
lods
int
test
sbb
shll
lret
jle
dec
xchg
shrl
fnstenv
push
xorb
adc
xchg
sbb
mov
cmp
daa
adc
test
out
popa
jb
movb
and
rcll
pop
fdivrl
outsl
cmp
rcll
or
sarb
or
pusha
rorl
enter
int
and
add
dec
in
repz
clc
sub
cmpsb
ja
pop
adc
je
clc
pause
orl
mov
mov
sub
or
xchg
jae
sbb
cld
lods
out
cli
mov
add
mov
sub
add
loopne
sti
ds
dec
scas
popf
adc
test
add
mov
sbb
push
mov
pop
jge
cmp
fs
shl
or
fisubs
loopne
jbe
jae
push
sbb
mov
mov
sub
or
mov
repnz
xor
les
cmp
and
cmc
loop
pop
cltd
push
mov
push
fmuls
add
aas
daa
inc
add
nop
imul
xchg
addr16
pusha
daa
rorb
push
cltd
or
js
fmull
xor
pop
mov
push
jmp
mov
mov
add
dec
adc
addb
or
fcomps
lea
jmp
ds
mov
mov
int
pop
arpl
lock
cltd
data16
inc
mov
not
push
das
out
push
rorb
popa
js
mov
jbe
mov
dec
or
or
pop
mov
inc
lcall
inc
mov
xchg
inc
fldl
mov
or
aam
sbb
pushf
sbb
adcl
add
in
stos
mov
push
pop
add
xchg
negb
sub
mov
ret
mov
add
sarb
lea
sub
pop
test
push
je
mov
es
mov
push
test
xchg
sub
inc
rorb
incb
inc
xchg
loope
and
xor
shlb
icebp
inc
cwtl
jge
mov
jbe
iret
iret
mov
filds
dec
jl
dec
jbe
sub
sti
pushw
pop
repz
je
pop
cmc
mov
mov
rolb
sbb
jecxz
xchg
sub
ds
enter
lock
dec
mov
int3
sar
jmp
pop
pop
sub
fiaddl
sub
sbbb
cli
fmuls
mov
bound
sbb
mov
mov
ret
scas
stc
xor
xchg
cmp
shlb
fwait
xchg
xchg
rclb
jge
fs
xchg
cwtl
mov
decl
cmp
pop
test
mov
and
jl
rolb
sub
mov
cmpsb
out
les
xor
aas
test
iret
and
fdivrs
mov
cwtl
jle
ljmp
iret
cmp
sub
mov
daa
das
mov
inc
arpl
or
or
mov
ficoml
movsb
je
cmc
mov
add
or
scas
jb
dec
in
xchg
or
push
ficoms
leave
jnp
nop
ficoms
aas
jmp
push
xorb
xchg
push
mulb
cwtl
mov
mov
xchg
pop
insl
push
dec
std
out
gs
mov
pusha
pslld
repnz
aad
push
xor
pusha
sub
xchg
out
loop
loope
aas
or
push
push
jae
lahf
adc
fldt
cmpsl
push
in
jnp
jmp
jne
sbbl
xchg
or
outsl
xchg
mov
shrl
mov
into
popa
push
add
pop
outsl
or
in
adc
shlb
lods
out
mov
inc
mov
pextrw
inc
cmc
test
sbb
cmp
dec
push
and
adc
cmc
push
pushf
push
jl
jo
testb
mov
addb
and
iret
and
ss
pushf
loop
mov
mov
pop
sbbb
into
sbb
jmp
lret
inc
fbld
jmp
popf
aas
es
loop
mov
mov
jno
sbb
aad
xlat
mov
sbb
pop
iret
mov
or
xchg
adc
daa
outsl
sub
lods
lret
insl
std
mov
cmp
add
fimuls
mov
aas
cmp
clc
in
add
in
xlat
push
mov
fisttps
jp
inc
cld
and
call
pushf
pop
inc
sbb
and
cli
adc
xor
pop
mov
mov
lcall
lock
pop
mov
pop
pusha
pop
lcall
sbb
in
dec
xchg
jne
sbb
dec
and
inc
add
sahf
push
mov
and
test
out
mov
mov
subb
lcall
sbb
sti
and
outsl
cmp
mov
fistpl
inc
ret
sbb
out
inc
sbbb
lods
xor
out
sub
jmp
mov
inc
mov
stc
mov
mov
insb
dec
outsb
ror
enter
cmpsl
xor
sub
bound
mov
out
jno
in
cmp
adc
xchg
imul
dec
xor
imulb
aam
es
insl
insl
mov
push
fistl
push
dec
xor
insl
gs
loope
sbb
rcl
test
cmp
fisubl
lahf
leave
jns
and
adc
adc
add
mov
xchg
and
ss
add
pop
cli
hlt
jns
outsb
inc
jl
push
out
out
mov
xchg
lret
jecxz
inc
icebp
data16
xchg
test
or
cwtl
push
popa
mov
int
mov
mov
cmp
xor
add
adcb
ja
pop
movsl
das
mov
push
xor
mov
popf
mov
add
jb
inc
jae
jmp
lea
adc
jmp
pop
aaa
and
xlat
pop
fmuls
push
nop
push
add
sub
or
mov
adc
push
mov
mov
sbb
mov
lods
in
lods
lea
sub
icebp
xor
aas
je
xchg
outsb
lds
xor
loop
lea
lock
lret
pop
adc
cld
mov
fmull
into
fwait
push
xchg
mov
roll
jb
rcl
inc
fiadds
or
sub
or
lock
inc
xor
xchg
aam
mov
fistpl
sahf
lea
dec
popa
add
or
dec
cltd
fcmovnb
xor
mov
xor
fsub
lret
enter
out
xor
movsl
jae
imul
cmp
pop
loop
or
xchg
and
pop
dec
iret
xchg
mov
and
call
leave
jmp
aam
data16
daa
jo
popf
test
sub
dec
ret
fcoml
lcall
pop
pop
fcoms
push
mov
mov
roll
call
in
hlt
xor
jo
dec
inc
test
adc
lods
ss
inc
mov
xchg
pushf
sub
add
iret
scas
int
test
out
jle
mov
int
fnstsw
inc
popf
add
cmp
mov
xchg
xor
or
sub
or
inc
xor
icebp
out
push
loope
pushf
clc
lods
fwait
mov
jge
cmp
mov
jnp
cltd
scas
mov
mov
shlb
mov
mov
push
nop
jmp
js
dec
cmpb
push
lcall
or
xor
ret
jns
and
mov
aam
or
push
cmp
sti
fdivr
mov
jp
sahf
push
cmp
testb
jne
int3
pop
in
and
test
iret
pop
or
movsb
imul
inc
ret
sti
push
adc
les
pop
cltd
pop
leave
lcall
or
mov
dec
iret
je
lds
xchg
and
in
add
jmp
jmp
cmpsl
pop
cwtl
pop
add
es
jns
xchg
mov
or
mov
imulb
inc
mov
lret
arpl
push
cmpsb
sarl
ret
mov
lods
pop
mov
mov
push
adc
push
dec
mov
pop
inc
xor
and
dec
mov
push
mov
jae
adc
mov
mov
les
pop
aam
jne
or
mov
add
jae
sti
pop
adcl
jne
xchg
mov
clc
adc
outsb
xor
mov
das
pushf
test
pop
mov
xor
adc
push
repnz
jecxz
test
add
loope
stos
or
jb
hlt
bound
xor
out
outsb
into
xchg
out
xor
add
pop
sbb
rcrl
imul
mov
mov
in
cmp
and
cmp
adc
dec
add
sub
adc
hlt
mov
mov
push
fdivrs
fcomip
call
mov
pop
sahf
mov
xchg
mov
idivb
xrelease
inc
jg
mov
push
fidivl
in
fwait
sbb
xlat
stos
enter
jge
inc
ja
mov
leave
sub
xchg
mov
xorb
jge
push
cwtl
mov
cli
rorb
pop
bound
add
push
mov
pop
cmpsb
sbb
and
lret
and
loopne
pop
scas
arpl
xor
xchg
outsl
and
add
outsl
cmp
and
mov
mov
jnp
xchg
mov
imul
imul
push
shrl
iret
mov
gs
aas
jae
inc
sti
ljmp
sub
cmc
cs
loopne
jl
insl
pop
test
sti
cmp
mov
cwtl
dec
sub
jo
and
in
imul
cmp
jno
dec
movsb
shll
jbe
add
fnstsw
sbb
pop
mov
adc
pop
jle
jb
add
ja
mov
sbb
bound
movsl
push
fcmovbe
daa
push
daa
xchg
ret
mulps
sub
dec
dec
mov
lahf
popa
inc
fldcw
mov
cmp
mov
bound
aaa
mull
push
shlb
data16
and
jae
dec
movsb
test
dec
jmp
adc
icebp
data16
add
ds
and
mov
inc
xchg
and
sar
inc
aam
mov
fiaddl
sub
mov
push
jg
int
adc
lret
cmp
in
push
lcall
push
push
fdivs
aas
iret
mov
adc
fcoml
dec
outsl
vpackuswb
out
mov
outsb
xor
adc
imul
push
pop
icebp
mov
and
push
cld
pop
in
dec
mov
lcall
fs
jg
inc
aad
pop
sbb
push
jnp
fs
lcall
jne
lds
scas
in
or
lea
call
aaa
lret
xchg
jl
imulb
sahf
idiv
icebp
push
negb
push
dec
inc
hlt
xchg
test
scas
fistpll
pop
cmp
out
popa
push
test
lock
loope
adc
jne
out
mov
mov
xor
cltd
or
pop
xor
clc
call
push
lds
mov
mov
cld
mov
stos
int
pop
push
or
pop
jge
mov
sbb
leave
and
jbe
xor
enter
imul
scas
pop
push
movb
or
bound
cmp
call
mov
cli
jb
imul
adc
pop
inc
lock
repnz
bound
xor
jl
xor
daa
mov
push
jecxz
mov
pop
call
mov
test
shlb
jge
fstl
mov
into
mov
sub
cmp
ret
sub
aam
push
addr16
rcll
xor
add
shll
jle
jns
mov
leave
inc
xorb
pop
shll
adc
pop
es
rcrb
xchg
dec
push
rcrb
xrelease
repnz
xor
js,pn
xlat
mov
jb
add
sbb
out
adc
enter
fs
sti
jmp
pop
cs
pop
xor
push
xchg
mov
int
mov
data16
mov
scas
mov
jbe
sub
outsb
adc
repz
mov
loop
inc
cmp
pop
cli
xchg
int3
fnstenv
jecxz
inc
cmp
pop
negb
xor
adc
and
lds
les
and
jecxz
clc
push
and
xchg
jb
adcl
xlat
ficoml
dec
cmp
in
xchg
mov
adc
insl
push
mov
repnz
sub
loopne
mov
pop
aas
or
popf
add
cmpsl
and
ds
ljmp
popf
mov
sti
inc
pop
push
fwait
sub
add
push
bound
movb
pop
les
cmp
mov
loope
outsl
sarl
adc
xchg
sbb
aam
ss
xchg
std
sbb
inc
push
push
bnd
jl
mov
mov
mov
pushf
or
inc
fisubs
inc
dec
jb
sti
loop
addr16
mov
jae
repz
movsl
arpl
pop
flds
insb
xchg
loopne
fmul
xor
jns
or
jns
popa
repnz
pop
aad
xchg
sbb
xchg
or
mov
xchg
in
lods
adc
push
mov
push
xor
repz
leave
call
out
jg
aad
pop
jnp
jp
shll
or
or
es
int
lahf
jl
cmp
and
dec
lds
std
pop
test
fmull
xchg
cmp
inc
or
loope
fidivrs
cmpsb
dec
jb
mov
ss
push
push
sub
fsubrs
push
std
cmpsb
lcall
std
shll
cmp
int3
dec
adc
sbb
mov
pop
sbb
leave
sub
clc
push
lret
and
mov
sbb
mov
sahf
aaa
mov
hlt
pop
add
mov
push
add
push
data16
jns
fsubl
mov
es
inc
arpl
sbb
or
sbb
pop
or
jae
inc
out
dec
or
aaa
cmpl
ficomps
jecxz
pop
mov
into
cmpsl
out
dec
pop
sub
mov
push
xchg
lds
aad
and
test
sbb
pop
dec
pushaw
dec
lods
mov
stc
lock
insb
push
jle
mov
mov
std
add
xchg
icebp
mov
adc
cmp
dec
dec
test
lret
sbb
push
icebp
cld
cmp
or
push
pop
out
scas
cli
pop
testl
jns
cmpsl
lahf
loop
std
mov
pop
add
adc
imul
les
push
jne
xor
je
pop
insb
rcrb
dec
mov
xor
cs
jge
inc
pop
xchg
jne
mov
xchg
lds
je
push
sbb
mov
inc
lea
jp
mov
fiaddl
mov
test
sbb
stos
mov
call
clc
in
mov
mov
push
jo
arpl
loope
test
imul
fs
lods
cmp
push
dec
fcmovnu
and
sti
loop
xor
mov
gs
cmc
mov
andl
pop
sub
mov
sub
jl
fbstp
xor
inc
sub
cmpsw
push
fcom
popf
sub
push
enter
mov
mov
inc
int
cmpsl
insl
std
pop
xchg
jl
loopne
sbb
jno
mov
xor
mov
jg
test
cmpsb
insb
popa
inc
imul
inc
cmc
js
rcr
cltd
lock
imul
dec
gs
sahf
in
sub
adc
xchg
fmuls
or
cmp
cmp
sbb
stos
cmpsb
inc
pusha
push
dec
int3
dec
add
mov
call
sarb
xor
outsb
stos
outsl
xor
std
rcr
popa
fsub
pop
lds
fistpll
push
push
add
movlps
imul
xor
movsl
repnz
inc
inc
leave
mov
in
pop
cmp
lret
jl
addb
mov
dec
shlb
je
pushf
push
out
pop
xor
roll
pop
pop
sbbb
push
xchg
test
test
int3
cmp
lods
gs
adc
xchg
push
lods
shlb
inc
jae
inc
add
in
add
cmpsb
in
je
jecxz
fldcw
incl
and
cmp
pop
fidivrl
cmpsb
cmc
and
push
outsl
mov
test
dec
out
in
cmp
add
jne
fmull
cltd
jb
jne
lahf
cmp
cmc
push
cmp
clc
cmp
dec
repz
test
into
jno
sub
sub
adc
cmp
xor
insl
sub
daa
sbb
in
aaa
add
mov
push
imul
stos
loopne
sti
bnd
jg
scas
addl
xchg
mov
cmp
stos
xor
mov
fsts
xchg
loope
lret
mov
ss
int3
lods
dec
mov
xlat
lea
dec
loopne
push
jg
sti
cli
or
xor
ret
js
lret
jne
or
xchg
lods
mul
jae
xchg
lcall
cmp
jmp
aas
and
jmp
test
mov
dec
leave
pop
mov
test
gs
loop
mov
lds
nop
add
mov
dec
and
insb
push
or
loopne
push
scas
mov
sbb
mov
fwait
dec
icebp
xchg
pop
mov
mov
pop
mov
inc
cmp
popa
icebp
decl
fadds
fwait
xlat
out
fs
in
nop
loopne
mov
add
xchg
fbstp
int3
lret
pop
lahf
mov
jnp
ja
pop
dec
xchg
sub
lret
arpl
mov
cmp
push
stc
dec
pop
cmp
jne
pop
dec
jg
jle
xchg
jp
adc
push
test
lds
xchg
cmc
mov
hlt
cmp
jp
sbb
sub
jo
ljmp
and
fs
repnz
xlat
clc
movsb
mov
fstps
insb
out
jg
lock
icebp
popf
push
cmp
mov
ret
leave
arpl
shl
xchg
dec
cmpsb
xchg
push
or
lahf
pop
movsb
mov
fmul
mov
ss
mov
aad
xchg
imul
pop
jle
lret
mov
and
sub
stc
stc
scas
add
inc
add
and
or
jmp
add
xchg
mov
data16
adc
popa
jecxz
cmp
mov
dec
insb
push
sbbb
cld
adc
icebp
push
lret
adc
lock
mov
sahf
hlt
fdivrs
int
sar
pop
loope
xchg
ja
inc
mov
mov
xchg
popa
out
testl
daa
shll
roll
pop
loope
xchg
ja
inc
mov
mov
xchg
popa
out
testl
daa
shll
mov
mov
loope
xchg
ja
inc
mov
mov
xchg
popa
out
testl
shll
roll
pop
loopne
xchg
ja
inc
xor
cmpsl
scas
mov
sub
cltd
jg
cmp
sub
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
add
xor
inc
stos
and
inc
in
mov
mov
or
sbb
cmp
cmp
adc
dec
ljmp
popa
stos
jno
orl
jp
imul
cmp
bnd
cmpb
mov
leave
pop
aam
stos
dec
mov
cmp
pop
mov
sahf
pop
jno
gs
inc
mov
shll
test
shll
in
cmc
popa
in
xchg
in
fwait
mov
add
fs
and
xor
in
and
dec
jp
lea
sub
ja
xor
daa
sahf
mov
adc
xlat
iret
xchg
lcall
xchg
sbb
aam
cmp
lcall
mov
bnd
sbbb
movsl
and
pop
shl
loopne
icebp
push
repnz
add
fldenv
cli
cli
mov
mov
vcvtsi2sd
mov
and
iret
xor
nop
inc
aaa
mov
xchg
dec
sub
push
pop
subb
repnz
inc
int
cli
xor
movsl
mov
lcall
or
jae
arpl
sub
pop
push
jmp
sti
fdivrl
hlt
adc
and
and
aas
aam
mov
mov
push
dec
mov
ficoml
push
ljmp
stc
xor
xchg
into
and
out
ret
cmp
js
jne
inc
mov
insl
mov
inc
mov
adc
push
lcall
xchg
pop
mov
or
sbb
sub
cmp
lret
and
xor
inc
mov
popa
stos
jno
orl
jp
or
sbb
sub
cmp
lret
jecxz
icebp
jmp
movlhps
push
call
loopne
jbe
jo
xor
pop
push
insb
mov
lahf
daa
cmpsb
cwtl
cmp
rorl
imul
xchg
aaa
enter
nop
push
pop
test
call
mov
xor
std
rorl
popl
dec
inc
cmp
out
fbstp
stos
sub
dec
jno
cmp
lods
lret
mov
and
inc
mov
ret
into
or
add
fisttpll
popf
ret
hlt
aam
mov
aad
push
and
je
adc
mov
sub
into
enter
push
cs
lcall
dec
jnp
in
pusha
stos
push
lcall
xchg
jge
mov
xchg
popa
stos
cmp
push
push
mov
pop
int
push
stc
jns
fidivs
push
ss
les
inc
or
inc
in
movsb
imul
push
cmpsb
ljmp
xchg
dec
mov
inc
pop
popl
cmpsl
pop
test
xor
xchg
jo
aaa
inc
fisubrl
cmpb
or
cs
outsb
mov
jg
mov
loope
sbb
mov
adc
inc
sub
mov
cmp
loop
mov
dec
push
inc
xor
mov
sbb
mov
push
fistpl
cltd
jae
aas
sub
movsl
out
lods
iret
push
xor
aad
mov
jge
in
bound
xchg
sbb
and
into
sarb
mov
jns
lods
xor
jle
in
shlb
push
jl
sarb
ficoml
and
mov
ficoms
xchg
test
sub
mov
push
dec
adc
rolb
mov
xchg
or
ffree
mov
adc
jne
and
adc
xchg
pop
pop
dec
lea
adc
fwait
loop
adc
in
jbe
shrb
cltd
testl
cmp
pop
aam
fidivl
or
dec
test
stos
pop
sbbb
pushf
pop
pop
pop
call
pop
push
stos
sbb
and
lahf
mov
xchg
sub
push
ret
xchg
loope
sub
nop
mov
xchg
je
add
dec
aad
mov
nop
cmp
mov
or
aas
ds
bound
pushf
mov
mov
std
xchg
mov
push
dec
and
xchg
popf
rcrl
cmpsb
sahf
add
dec
mov
loope
nop
pop
dec
mov
adc
aaa
sub
xchg
jg
dec
and
mov
push
imul
andb
fidivs
test
bnd
cmc
jns
icebp
and
nop
push
loope
stc
testl
sbb
in
inc
or
fs
insb
shr
test
xor
add
xor
addr16
inc
inc
shll
sbb
sbb
sub
xchg
pusha
mov
adc
add
into
iret
or
es
pop
call
jb
mov
jge
fdivrs
mov
icebp
scas
sbb
out
lret
ret
lretw
xor
mov
lods
or
movsb
movsb
insb
aad
xchg
mov
cmpsb
inc
xchg
and
ja
jb
outsb
xchg
push
in
repz
push
sbb
adc
sbb
jns,pn
mov
aas
scas
in
out
add
stos
cwtl
adc
out
mov
mov
pop
cmc
iret
mov
pop
jl
sbb
mov
pop
add
jo
pop
jge
push
xor
nop
push
lcall
dec
inc
sbb
push
mov
aas
push
iret
push
lcall
call
fdivs
push
xor
lock
cvtdq2ps
ja
sbb
loopne
xchg
shll
pop
push
nop
xchg
hlt
or
jecxz
les
sub
insb
or
cwtl
jecxz
mov
test
test
push
shlb
pop
dec
js
fdivr
dec
int
data16
mov
jl
jb
call
or
ret
orb
add
rorl
add
dec
or
xchg
mov
scas
jnp
iret
mov
imul
jle
sar
add
shl
mov
sub
jbe
lret
and
cmpsl
ss
mov
leave
enter
sbb
ret
jmp
push
sub
sbb
js
mov
out
and
movsl
sub
popa
and
loopne
add
xchg
jns
gs
mov
fisttpll
mov
push
jne
lods
iret
mov
fmulp
test
aad
stos
pop
adcl
xor
xor
cltd
jge
out
push
jl
xlat
mov
push
and
cld
jecxz
push
enter
xlat
push
pop
into
cmp
jle
fwait
xor
dec
ret
mov
jp
pop
sub
mov
mov
fisttpll
stos
pushf
lds
xchg
mov
push
sub
call
jecxz
out
push
cmpsl
mov
dec
or
jmp
jo
push
cmp
lahf
movsb
push
test
xchg
cmpsl
repz
icebp
dec
pop
sbb
xchg
sbb
aas
mov
jo
and
pop
aaa
pop
sub
mov
jmp
test
ret
push
jg
inc
mov
pusha
int3
xchg
push
movsl
add
mov
push
pusha
cli
lock
mov
in
cmp
push
mov
fadds
xchg
sqrtps
repnz
adc
jecxz
and
sub
mov
cmp
jbe
pop
insl
mov
xlat
mov
outsl
push
test
lods
xor
fidivrl
xor
aas
shr
loope
lea
pusha
jl
arpl
loope
cmp
sahf
push
ret
xchg
xor
lds
jb
stos
mov
cmp
aaa
inc
dec
pop
mov
push
adc
cmpsb
rorb
dec
inc
dec
lea
repz
or
xchg
call
into
push
jae
adc
inc
mov
inc
rorl
ret
iret
sbb
push
add
lcall
shrb
lods
test
das
arpl
mov
inc
cld
sub
dec
xchg
mov
data16
pushf
out
mov
dec
inc
mov
dec
out
movsb
cmp
sti
rcrl
push
out
xorl
sbb
jmp
loope
repnz
lcall
push
xor
imul
mov
push
jp
cli
mov
pusha
inc
adc
ljmp
iret
shlb
out
addr16
enter
arpl
jg
cmpsb
jno
xchg
or
push
idivl
aad
mov
push
xor
sbb
mov
mov
cwtl
mov
jp
stc
sti
js
push
loopne
cmpl
aad
fnstsw
xchg
adc
inc
test
fdivrp
hlt
and
inc
aas
sbb
cmp
mov
add
lock
arpl
push
movsl
push
bound
mov
xchg
jno
or
popa
jge
xchg
cs
inc
sub
fadd
aad
test
lock
lock
push
lcall
and
test
aad
lods
jle
nop
inc
push
test
std
sub
pop
fwait
adc
test
in
xchg
pop
xor
leave
pop
fcoml
cmp
cltd
dec
cli
sub
inc
rorl
mov
test
sbb
xlat
xor
pop
bound
outsb
int
xchg
jmp
jmp
fs
outsl
sarb
and
or
cmp
jne
jmp
sub
lcall
mov
test
dec
cmp
rcrl
push
aas
leave
jecxz
repnz
jmp
fwait
sbbb
ret
nop
mov
inc
ret
popa
mov
daa
shl
leave
test
nop
xor
xor
cltd
or
mov
mov
lret
pushf
jp
inc
inc
pop
cmc
jp
push
xchg
iret
cmp
mov
lods
inc
and
or
clc
mov
mov
dec
push
mov
in
inc
dec
pop
pop
sub
test
add
pop
bound
nop
sub
xchg
pop
aam
aas
popa
inc
in
inc
lret
out
roll
xchg
ss
or
xchg
subl
and
ljmp
mov
rolb
mov
xchg
jmp
ljmp
pop
push
jge
xchg
outsb
dec
cltd
in
push
aaa
shrb
mov
pop
mov
jl
ret
jge
cmp
xorl
cmc
xchg
fcomps
loopne
mov
push
loope
fwait
scas
and
mov
mov
mov
cwtl
or
pop
xchg
inc
mov
fldl
faddl
rcl
dec
xchg
outsl
es
jns
jae
push
fwait
das
mov
and
repnz
push
add
add
iret
cmp
into
mov
pop
cmp
or
pop
cli
dec
add
mov
scas
out
mov
movl
xor
inc
mov
dec
jmp
leave
mov
push
jp
jae
mov
jo
mov
or
add
hlt
adc
scas
outsb
cmpsb
and
mov
enter
mov
fstps
ret
enter
fbstp
sbb
rcr
dec
inc
movsl
imul
push
rorb
incl
adcl
icebp
call
xor
push
loop,pt
inc
or
out
jb
inc
or
sbbl
icebp
dec
cld
mov
dec
cmc
mov
and
cmpsl
mov
jne
icebp
fsub
cmpsb
sti
dec
subb
add
jg
sarl
fnstsw
sub
sub
dec
push
movsb
jmp
sbb
jp
cmp
ss
stos
cmp
pop
cld
addl
call
mov
jae
pop
jo,pn
and
popa
push
sbb
test
in
cmp
sbb
out
push
mov
sub
in
push
outsl
test
dec
sti
xor
mov
mov
arpl
aad
inc
xor
imul
cltd
enter
outsl
cli
ds
andb
jno
or
int3
lds
jg
repz
xor
sub
in
mov
lret
clc
xchg
ljmp
mov
push
int
xchg
aam
cli
ja
dec
mov
mov
cwtl
fsubrl
or
pop
clc
clc
jb
ret
and
jno
xor
sahf
jnp
mov
fwait
scas
inc
mov
test
sbb
cltd
cwtl
in
add
pop
cmc
fs
pop
and
daa
andl
add
dec
and
cli
lods
pop
mov
ja
or
pop
sub
sbb
daa
cltd
mov
in
js
push
lret
out
cmp
inc
neg
mov
dec
loope
lods
xchg
pop
mov
or
mov
hlt
inc
push
lret
jle
cli
out
es
mov
sbb
mov
push
push
out
fnsave
xchg
stos
lahf
je
lea
or
lods
lods
ss
pop
cld
mov
sbb
pop
nop
aad
std
stos
pushf
repnz
aas
sbb
daa
in
int3
xor
inc
std
pop
sbb
outsl
inc
ret
jbe
out
int3
sbb
jns
xor
sub
inc
rorb
mov
sbb
call
dec
jg,pn
jb
leave
pop
clc
loop
adc
enter
mov
push
loope
pop
and
pusha
das
popf
fst
xchg
pop
jo
aaa
push
das
xchg
add
pop
decl
adc
inc
mov
pop
pop
xor
jl
sbb
mov
lcall
shlb
clc
imul
lret
pop
mov
mov
mov
and
imul
ret
ja
rclb
stc
or
jne
aas
enter
xor
test
stos
movb
xor
lods
mov
movnti
dec
xor
pushf
test
sbb
xchg
lods
icebp
xchg
imul
mov
mov
add
iret
or
pop
pop
push
xor
outsb
xchg
jge
fwait
loopne
pop
cs
push
ret
scas
stos
mov
pop
scas
sub
mov
ja
icebp
adc
dec
push
mov
lock
cmp
inc
or
push
sub
jo
outsl
dec
push
mov
loope
dec
push
xor
pop
into
cmpsb
in
aad
push
bound
daa
push
mov
cmp
xchg
lods
xlat
jns
xchg
push
add
cmc
or
dec
jnp
sub
and
repz
mov
notl
push
or
xor
lock
inc
cmpsl
sub
bound
mov
out
mov
and
in
insl
xchg
scas
call
mov
test
popf
jns
repnz
xchg
sbb
fisttpl
fs
insb
cmp
and
and
test
sub
stos
icebp
call
rorb
mov
loopne
cmc
pop
iret
mov
adc
sbb
mov
call
pop
rcrl
adc
shrb
cmp
ficoml
fs
or
push
scas
jne
jb
imul
and
add
out
cld
cltd
scas
adc
push
ds
mov
jecxz
adc
sbb
jne
or
inc
loopne
outsb
loopne
adc
xorb
aaa
test
jnp
or
lods
test
rsm
or
jb,pn
ss
in
scas
and
sbb
adc
imul
pop
adcl
xchg
es
outsl
pop
mov
mov
xchg
cld
aad
movsl
inc
inc
lods
mov
enter
add
adc
xchg
adc
test
flds
orl
icebp
int
rorb
aas
mov
lret
inc
mov
jmp
jb
movsl
pop
add
and
push
mov
loope
movsl
adc
dec
mov
xchg
imul
inc
cmp
pop
add
cmc
mov
hlt
xchg
icebp
pushf
outsb
jle
fcomps
and
jge
mov
adc
out
push
rcrl
pop
xchg
rcll
test
fsubrl
mov
lret
xchg
mov
jle
push
mov
clc
push
into
cs
test
and
xor
fistl
movsb
dec
sahf
ja
repnz
xchg
sub
jbe
xchg
xor
add
mov
mov
pop
xor
and
test
mov
mov
adc
push
xor
insb
mov
push
xlat
es
lods
outsl
or
fdivp
cmp
or
dec
mov
lds
jge
jp
lea
je
sti
inc
and
mov
enter
or
mov
out
pop
pop
xchg
mov
cmpsl
nop
inc
out
rolb
or
adc
iret
mov
test
lahf
mov
loop
push
cli
mov
jb
or
and
ds
pop
pop
mov
mov
inc
xchg
mov
jne
mov
xorl
add
shll
push
xlat
mov
sti
jp
test
shrl
dec
push
add
pop
xchg
push
popa
jle
cltd
add
cwtl
adc
mov
and
lahf
xor
fidivl
jge
cmp
cmpsl
add
into
mov
fcoml
sub
mov
je
xchg
push
fdiv
mov
push
mov
cmp
or
adc
nop
inc
pop
mov
and
lret
mov
or
push
or
ret
int3
jbe
jns
jle
aam
in
aam
mov
push
dec
dec
or
into
mov
mov
sub
jne
mov
neg
js
xchg
scas
ljmp
dec
aaa
push
cmpsl
adc
push
sbb
ds
push
scas
jp
mov
clc
cmp
cmp
cltd
cwtl
inc
inc
mov
ljmp
pop
les
ficomps
stos
mov
jno
xchg
sbb
sub
dec
push
fistps
int
mov
sbb
xchg
fmulp
cmp
pop
add
ficompl
int3
cmp
iret
nop
cmp
sbb
pop
mov
dec
or
jl
jns
insl
into
add
mov
mov
cwtl
mov
and
jg
push
cmpsb
push
insb
adc
cwtl
test
pop
sub
push
or
or
jno
pop
inc
cmpsl
and
push
mov
addr16
in
push
or
dec
xorb
push
fwait
add
shl
int3
shrl
ja
cmp
pop
ret
rorb
loop
pop
loope
std
fldcw
sub
xchg
andl
cmp
fstl
xchg
push
cltd
push
add
add
fsubrl
xchg
js
add
cmp
push
xor
aad
xor
mov
stos
shll
aad
pop
sub
xor
aas
pop
leave
adc
mov
jg
mov
add
xchg
xor
mov
xchg
add
aam
adc
in
pop
movsl
lods
sub
test
test
dec
daa
imul
mov
arpl
sub
aaa
pop
lahf
inc
dec
push
push
cmp
mov
pop
fidivl
movsl
mov
cwtl
inc
push
out
hlt
mov
pop
jns
push
push
mov
cmp
pop
mov
fcoms
scas
push
ret
sti
sbb
mov
ja
mov
adc
fisttps
inc
jns
xchg
push
add
inc
mov
fcmovu
subl
ja
es
mov
sub
fdivrp
or
imull
imulb
or
cltd
in
dec
fwait
pop
push
mov
psubsw
cltd
fists
aad
jl
rcrl
dec
pop
daa
jae
xchg
addr16
rcr
fsubrs
mov
xor
clc
sbb
cltd
jg
pusha
lods
pushw
jo
jnp
addb
ficompl
fbld
jno
mov
pop
hlt
test
jns
jecxz
fcomps
jno
call
cmp
ja
xchg
or
test
mov
fnstcw
pop
push
icebp
call
or
pop
pusha
sti
movsl
sbb
pusha
insl
and
into
int
stos
loopne
test
or
sub
sub
cmp
ret
movsl
imul
dec
cmp
das
cmp
cmpsl
push
mov
cmpsb
mov
fs
mull
add
and
pusha
lcall
sub
sub
xor
xor
loopne
out
mov
push
mov
cmp
and
xchg
das
add
stos
mov
jg
jmp
pop
jp
imulb
fcoml
call
xchg
xor
adc
das
cmp
push
xor
shlb
adc
lods
stos
mov
lahf
inc
mov
sub
mov
push
push
add
or
int
xchg
push
ljmp
xchg
mov
sbb
insl
push
loope
into
cmc
pop
and
inc
xor
movsl
sahf
dec
sarb
addr16
pop
cs
addr16
cwtl
inc
int
inc
mov
aam
jmp
push
sbb
xchg
jg
jg
mov
jecxz
pop
ret
sbb
lcall
rclb
jb
dec
pop
aas
sub
test
adc
cmp
shrl
je,pt
sbb
imul
fcom
loopne
repnz
ss
jbe
dec
ret
out
imul
mov
incl
std
pop
cmp
mov
xchg
rcrl
testb
sub
insb
jmp
xchg
outsb
mov
rclb
inc
push
xchg
xor
adc
mov
or
daa
stos
shr
std
pop
pop
aaa
mov
out
sbb
stos
pop
int3
cmc
jb
fisubrs
xor
adc
fcmovu
pop
mov
mov
sub
in
movsl
sti
dec
enter
out
pop
xor
fstpt
lds
dec
lret
pop
loope
mov
pop
xor
xor
leave
outsl
popa
call
sub
rcll
jb
jmp
jbe
jo
push
push
jo
ja
scas
repnz
and
inc
mov
je
sub
inc
jno
iret
cmp
mov
inc
jg
and
daa
or
loopne
jmp
jl
sub
enter
in
mov
jg
xchg
mov
mov
sahf
ljmp
notl
test
xchg
push
fstpl
leave
in
mov
test
sub
push
or
inc
dec
loopne
std
mov
arpl
mov
mov
push
shlb
popf
xchg
xchg
push
cs
jmp
test
jg
mov
add
iret
js
repz
pop
sbb
cmp
add
jl
ja
lods
xor
push
test
push
jb
add
cmp
or
push
push
lcall
xchg
mov
adc
sub
push
add
jecxz
adc
ret
push
dec
gs
aaa
cmp
fdivs
push
sbb
and
lret
adc
jns
sbb
add
gs
and
fldz
stos
mull
pop
sub
or
mov
loopne
and
dec
inc
insb
imul
cmp
pop
cltd
pop
stos
aas
repnz
mov
mov
add
xchg
ds
repz
adc
xor
lods
dec
sub
stos
sti
lea
ds
xor
aam
mov
mov
inc
test
je
adc
add
adc
in
cmpsb
push
in
mov
dec
mov
test
jmp
loopne
mov
sub
and
testb
sahf
or
outsb
insb
cs
mov
in
aaa
shlb
pop
push
xchg
xor
ljmp
test
xor
dec
loope
mov
pop
push
push
shl
daa
insb
cmp
in
and
and
pushf
ja
fldcw
test
pop
xchg
outsl
adc
sub
cli
inc
mov
popa
stos
jno
orl
jp
or
sbb
sub
cmp
lret
and
xor
inc
mov
popa
stos
jno
orl
jp
or
sbb
sub
cmp
lret
inc
ljmp
popa
stos
mov
orl
jnp
or
sbb
sub
cmp
ljmp
popa
stos
icebp
mov
or
or
push
aad
lds
repz
jecxz
mov
mov
jae,pt
arpl
dec
inc
outsb
xor
sahf
rorl
jecxz
xchg
into
cmp
out
mov
jae,pt
arpl
jle
jle
outsb
and
repz
xchg
and
out
mov
popa
add
pop
inc
and
push
cmp
not
loope
mov
push
into
inc
aas
mov
inc
cwtl
dec
cmc
push
mov
jbe
push
adc
loop
sbb
imul
jnp
jnp
fwait
out
daa
and
jae
bound
rcrl
jle
xchg
fbld
jb
dec
add
sbb
mov
and
icebp
mov
pop
adc
and
repnz
and
out
repz
pusha
orps
rcrl
int
add
dec
add
xor
jl
dec
push
cmc
push
push
enter
ficoms
fisttpl
xorl
outsb
cmp
repnz
xchg
and
orb
adcl
jle
sbb
sbb
and
xchg
ret
mov
xchg
fiadds
pop
push
push
inc
es
arpl
push
add
gs
fisubl
mov
out
rcrl
aas
bound
dec
sbb
sub
mov
inc
icebp
xchg
out
mov
repz
fdivrl
das
ds
and
dec
sti
and
rolb
into
cmp
out
mov
jae,pt
arpl
dec
add
outsb
and
repz
jecxz
xchg
into
cmp
out
mov
jae,pt
arpl
dec
add
outsb
and
add
xor
in
fnstsw
dec
dec
xchg
sub
and
ss
faddl
or
cmp
es
sarl
cmp
adc
ss
out
adc
xor
clc
mov
cltd
xlat
or
pop
sbb
cwtl
fiaddl
mov
insb
mov
mov
push
lahf
cwtl
sar
mov
adc
fistl
xchg
inc
popl
and
sub
dec
jp
dec
add
xor
sahf
sbb
out
int3
stc
xor
repnz
loop
xchg
scas
ja
inc
int3
mov
xor
push
or
push
push
into
leave
jl
push
mov
sub
psllq
mov
sbb
push
pop
inc
push
sbb
popf
jo
xchg
and
push
xor
and
frstor
lods
out
faddl
pop
inc
pop
pushf
mov
add
cmc
xor
fmul
stc
pop
int
scas
mov
std
cwtl
and
jnp
imul
sahf
cmpl
fisubl
cwtl
and
jge
jp
flds
jae
lock
sub
fsubs
xchg
cmp
jne
int3
sarb
scas
jmp
jmp
aam
jnp
imul
add
and
add
jp
fcomi
lock
jge
fnsave
xchg
mov
insl
or
test
aas
xchg
aas
dec
fldt
out
dec
roll
jae
sarb
scas
gs
popa
or
repnz
hlt
pop
or
test
mov
loop
icebp
inc
int
dec
pop
repz
addr16
test
out
mov
jne
lahf
fincstp
scas
outsb
xlat
xorl
insl
jno
into
stos
es
mov
adc
jl
pop
or
gs
xchg
jbe
or
loopne
in
inc
sub
sbb
in
dec
ljmp
lcall
in
jbe
sub
mov
mov
pop
enter
cwtl
popa
jg
push
push
int
ss
sbb
fiadds
lea
sbb
inc
mov
mov
dec
mov
add
jmp
cmp
push
mov
push
fs
xchg
repz
push
insl
dec
lods
lds
std
adc
xorl
adc
das
push
inc
in
mov
xchg
add
xchg
jmp
test
sbb
bound
lock
jae
inc
cmp
pop
cltd
imul
add
dec
sbb
dec
iret
div
je
popa
shr
sub
push
mov
lods
and
roll
jns
cli
sub
xor
lods
fsubp
popa
mov
xor
outsl
cs
mov
xchg
adc
scas
ret
sub
sub
sbb
pop
sbb
std
inc
add
aas
outsl
adc
push
outsb
lds
leave
dec
push
adc
push
fs
sbb
and
icebp
dec
mov
mov
in
mov
or
pop
lds
js
sti
lds
sbb
or
or
dec
pop
adc
aad
inc
repz
int3
pop
ss
imul
xchg
mov
js
mov
shlb
cmc
jmp
mov
mov
sub
aad
mov
jle
dec
loopne
fdivs
scas
push
jne
es
das
cmp
adc
imul
in
nop
scas
fnstcw
jmp
addr16
dec
jl
mov
nop
daa
scas
pop
fmul
dec
adc
or
cmpsl
lods
fdivl
jmp
hlt
into
add
xchg
mov
pop
xchg
imul
dec
call
enter
inc
xchg
lret
mov
repz
adc
and
dec
outsb
lea
and
test
xor
lret
fmuls
add
fisttps
ss
mov
add
jge
mov
inc
mov
into
shl
and
push
je
jmp
ljmp
popa
int
mov
inc
push
or
out
sub
mov
int3
cmp
mov
mul
hlt
out
fldln2
mov
insl
jp
mov
mov
ret
clc
sbb
hlt
and
mov
xchg
adc
fldl
jge
dec
leave
or
out
js
or
pop
addr16
dec
pop
add
xchg
leave
mov
call
push
push
mov
mov
push
call
xor
test
sub
cmpsb
inc
lea
fs
dec
and
stc
mov
ljmp
add
pop
fwait
sbb
jecxz
jno
stos
mov
jge
push
pop
jmp
push
adc
push
ret
mov
cld
mov
fdiv
mov
jle
mov
sub
aad
cmp
loop
call
fst
pop
mov
mov
inc
popf
mov
je
cmpsb
add
ret
mov
outsl
sub
cwtl
sahf
lret
les
jp
fidivrl
mov
xor
fwait
xor
xchg
in
jbe
pusha
lahf
aam
and
shl
in
popa
xor
mov
fisubrl
push
daa
shll
ficoml
shlb
repnz
leave
mov
push
cltd
xchg
add
movq
sbb
decl
jp
aas
ficomps
mov
mov
adc
lods
pusha
in
ja
push
cli
movntq
lret
imul
lods
mov
mov
int3
mov
xchg
imul
je
xchg
sbb
lea
sbb
or
insl
mov
data16
sbb
dec
mov
cmp
add
out
scas
lret
scas
psrld
ret
cli
stos
dec
and
outsb
mov
sub
sahf
fsubrl
lds
in
inc
cmp
shr
push
jne
xchg
xchg
jge
ss
xchg
cmp
sub
sub
xor
dec
dec
mov
rorb
xor
ret
inc
mov
enter
cmp
xchg
pop
clc
cmpsl
pop
dec
dec
ljmp
push
dec
ret
shr
addl
imulb
arpl
sbb
mov
dec
fs
add
sarl
lea
push
out
insb
mov
mov
data16
ss
inc
pusha
nop
push
nop
sbb
imul
jge
jmp
and
xchg
jno
jg
idiv
sbb
fistps
cmp
inc
lods
inc
dec
pop
jb
popf
push
sbb
pop
lods
lret
xchg
dec
js
xor
scas
push
push
mov
test
sbb
mov
mov
addr16
push
push
jmp
sub
push
jo
xchg
movsb
fcomip
inc
leave
lds
push
sub
xor
cmp
mov
push
sbb
sub
add
push
outsb
sbbb
lret
rcr
pusha
lea
lret
mov
leave
mov
dec
jmp
push
xlat
pop
jle
mov
sbb
jae
fnstcw
cmp
repnz
xor
out
jbe
fisubrl
mov
inc
mov
add
pop
add
nop
mov
sub
clc
pusha
lret
pop
dec
lret
mov
sbb
cmp
movsl
stc
jae
xor
fmulp
xchg
or
dec
andb
jge
and
jne
mov
pop
int
in
push
push
idivl
jmp
call
mov
xor
mov
in
testl
fcomps
mov
fimuls
ss
dec
push
push
inc
pop
imul
mov
adc
fcos
push
stos
insb
sbb
and
push
pushf
pop
sti
shll
dec
pop
jne
js
sbb
adcb
dec
stos
adcb
sbb
push
sti
repnz
mov
xrelease
ret
das
int
cmc
mov
push
mov
cmp
stos
cmp
pop
into
ss
jae
jle
xchg
sub
xor
inc
mov
push
lret
cltd
or
sbb
cmp
inc
pop
adc
and
or
jae
lcall
and
jecxz
mov
imul
out
fcmovne
push
lcall
sub
or
pop
test
lahf
add
leave
jo
sub
push
inc
dec
mov
filds
cmpsl
fs
popa
popa
dec
push
xchg
push
ret
pusha
and
scas
test
les
pop
aas
jg
mov
mov
ljmp
cmp
test
push
dec
add
faddl
jbe
iret
cltd
dec
daa
cld
xchg
mov
dec
jne
sarl
jle
sub
lock
dec
divb
movl
cmp
inc
jge
mov
lods
xor
mov
xchg
mov
es
xor
arpl
add
cmp
or
loopne
loope
dec
fidivrl
inc
lds
mov
pop
ljmp
or
push
sbb
jmp
fidivs
fdivrl
enter
loope
xor
pop
lods
jo
call
sbb
dec
or
test
loope
or
cli
mov
loopne
add
mov
push
jb
and
jb
sarl
mov
sbb
mov
scas
scas
enter
dec
data16
inc
xchg
rorb
pusha
int3
imul
push
sarl
call
sbb
and
jg
loopne
mov
jb
scas
aas
inc
xchg
orb
pop
sub
push
sahf
jmp
es
mov
daa
or
jb
sbb
and
mov
sti
lcall
mov
xchg
add
pop
int
call
push
mov
xor
dec
cwtl
fsubrs
push
and
xchg
pop
in
push
aas
ss
int
jecxz
insb
outsb
pop
mov
out
out
shlb
dec
outsb
fimull
dec
inc
out
mulb
inc
lahf
mov
lcall
mov
mov
xchg
mov
ret
mov
aam
sti
cmp
fdivl
int
and
xor
dec
neg
push
cld
pop
test
in
sbb
mov
xor
cmp
bound
mov
push
xor
push
testl
dec
ja
sbb
push
lret
dec
push
pop
add
dec
and
loopne
push
imul
mov
sub
xor
jmp
out
aaa
and
das
and
cld
pop
xchg
das
push
in
or
loopne
sbbb
cmp
test
daa
subb
mov
push
jg
cmc
mov
aaa
std
xor
push
sub
out
and
jp
int
xchg
pop
mov
add
adc
mov
adc
sbb
mov
ficompl
popf
adc
dec
lret
shrl
mov
cmc
xchg
movsl
xchg
mov
dec
or
push
cli
shlb
mov
dec
lods
inc
fs
mov
leave
and
xabort
movsb
fidivrl
or
sub
push
rolb
push
mov
xor
lds
fwait
sub
cmpsl
mov
cmp
push
or
call
mov
push
aaa
xor
dec
xorb
roll
mov
mov
sub
js
dec
decb
out
or
adc
xchg
fwait
adc
in
sar
mov
or
jno
mov
mov
aaa
loope
sbb
adc
jecxz
fidivs
mov
mov
jge
subl
mov
out
mov
jae
ss
adc
add
lods
push
push
sub
jg
sub
std
shrb
rcrl
cmp
pop
pop
and
roll
push
inc
mov
fistpll
or
fldt
js
cmp
adc
call
dec
shr
outsb
leave
and
adc
jmp
leave
movsb
pop
pop
lret
sub
xchg
insb
out
sub
aas
dec
pop
bound
repnz
js
adc
aad
add
les
push
push
call
int3
lea
rorb
jl
jp
inc
fcos
int
shll
sub
push
fdivl
fs
lods
cmp
clc
dec
scas
push
gs
repz
fadds
stc
mov
fsts
popf
sbbl
push
inc
jnp
std
das
lods
fldl
cs
push
shrb
out
mov
imul
orb
adc
push
arpl
mov
xor
and
int
or
sub
and
sbb
ficompl
mov
icebp
enter
push
xor
lods
insl
mov
aaa
push
push
cmp
and
aam
mov
push
sub
cld
sbb
xor
pmulhuw
test
dec
add
add
cmpsb
lods
js
mov
jns
js
aam
dec
subb
or
mov
adcb
fcoms
lds
dec
or
jae
loope
mov
adc
test
cmp
ja
loopne
shrl
stc
enter
add
insl
mov
es
and
test
scas
mov
hlt
add
mov
je
lock
and
xor
aaa
dec
xor
mov
jns
ret
ljmp
inc
sub
gs
popa
push
hlt
xor
inc
push
ljmp
push
es
pushf
mov
push
cmpsl
out
pop
adc
in
loopne
xor
ret
add
mov
fisubrl
mov
jnp
cmp
sti
mov
cmpsl
add
inc
mov
loope
stc
leave
jo
mov
movsb
int3
cmp
inc
stos
add
push
lods
in
cmp
in
stos
pop
js
fsubrs
pop
scas
sub
ds
fistpl
jbe
push
sbb
xor
ds
xchg
jecxz
mov
sub
sahf
pop
lret
sub
adc
jo
fnstenv
xor
test
push
sarb
aaa
hlt
mov
lods
sarb
shlb
fildl
jp,pn
adc
imul
ror
pop
inc
adc
push
adc
arpl
pop
fidivl
and
fdivrl
jle
sarl
adc
inc
mov
call
xor
int
in
cmp
div
out
insl
mov
inc
sub
popfw
xor
cmpsb
and
jge
add
pop
outsl
insb
cmpl
imulb
xor
or
xlat
movsl
scas
push
icebp
mov
cld
dec
sub
sbb
xchg
out
xchg
inc
out
repnz
rcr
xchg
andb
jae
imul
sub
mov
insl
subb
push
in
mov
dec
in
push
ud0
in
pop
mov
push
arpl
jnp
dec
loopne
fidivl
movsb
arpl
and
in
dec
out
mov
js
fdivrl
push
mov
cmp
mov
sahf
jmp
movsb
adc
test
pop
pop
inc
shl
mov
fstpl
out
adc
mov
adc
mov
inc
ss
orl
mov
std
test
mov
shrl
jne
jmp
jle
fiadds
fisubrl
faddl
dec
cld
mov
mov
clc
test
adc
sahf
pushf
or
stos
or
imulb
sub
clc
movsb
pop
andl
fucomip
in
push
repnz
jbe
cmp
ljmp
clc
pop
adc
xchg
sbb
cld
leave
out
sbb
inc
adc
xchg
mov
cs
cs
ret
jl
scas
lds
or
sarb
xor
xlat
int3
xchg
insl
out
jge
ja
jb
sbb
ljmp
and
cmp
add
aas
test
cmp
push
push
negl
aas
out
stos
mov
add
flds
mov
push
in
mov
imull
mov
inc
stos
xor
pop
cli
xlat
loope
push
mov
ljmp
and
xor
sub
dec
std
movsb
xlat
nopl
pop
mov
mov
jg
dec
imul
stc
adc
pop
jb
js
rcl
mov
sbb
testl
cld
add
js
jne
jno
jae
mov
out
pop
push
cs
aas
jne
dec
lahf
xchg
std
in
mov
xchg
xor
xchg
pusha
sbb
mov
add
push
adc
or
repz
in
lock
or
lret
mov
aaa
pop
sub
dec
cli
inc
jg
in
inc
or
out
aaa
xchg
adc
loope
mov
and
movsb
sbb
negl
movsl
push
or
repz
sub
jp
mov
jl
add
icebp
dec
mov
pop
adc
aam
or
sbb
testb
loope
or
push
jb
push
pop
push
mov
sub
shrb
ds
pop
ljmp
inc
add
mov
and
popf
jbe
or
pop
adc
je
inc
sub
popf
fstpt
cmp
and
lods
dec
jle
and
shl
jae
nop
or
xor
insb
mov
jge
lds
xor
pop
jae
rcr
or
dec
xchg
ljmp
cltd
mov
outsb
lret
pop
push
mov
and
mov
jnp
loopne
xor
shr
test
std
outsl
pop
les
jae
cmpsl
adc
lea
mov
clc
lcall
stos
add
mov
fsub
sbb
call
adcl
scas
pop
in
cs
cmpsl
inc
inc
std
daa
xchg
popa
dec
xchg
fidivrl
mov
scas
hlt
call
loop
xchg
or
pushf
dec
mov
aad
jmp
dec
dec
mov
xchg
test
adc
shll
pop
adc
fdivl
sahf
mov
dec
cmpsl
lahf
gs
xor
inc
sub
negb
clc
jle
js
cmp
lahf
jno
int
jecxz
jl
movsb
push
faddl
cmp
mov
add
mov
push
ds
mov
xorl
jns
bound
mov
loop
ret
fnstsw
lahf
or
inc
insb
rclb
das
ja
test
dec
aam
mov
add
pop
sub
test
push
insb
es
push
mov
roll
das
sub
inc
add
arpl
add
inc
popl
es
xor
dec
sub
xchg
mov
mov
dec
or
loop
iret
stos
sub
in
mov
dec
in
mov
mov
pop
mov
std
dec
xor
pop
and
xchg
or
popf
pop
stos
mov
ja
insb
ss
nop
popf
lock
cld
pop
out
sub
adc
mov
sbb
sub
push
iret
rorl
push
fsubrl
loopne
push
mov
mov
sbb
mov
sbb
icebp
sbb
xor
cmpsb
adc
sub
cltd
add
jno
stos
xlat
lcall
mov
sub
popa
push
sti
mov
sbb
scas
xor
dec
sub
mov
xchg
fistl
stos
loop
cmp
addr16
mov
jnp
jmp
adc
outsb
inc
push
dec
push
lcall
or
mov
pop
jmp
jg
adc
int3
fcoms
in
adc
mov
and
add
fs
xchg
test
xor
fwait
bound
mov
jne
mov
push
dec
test
stos
imul
mov
inc
popf
push
jle
xlat
adc
cld
lods
lock
notb
pop
cltd
inc
movsb
cmpsb
clc
aaa
pop
adc
xchg
xlat
jge
ja
sub
jo
add
dec
popa
popa
pop
in
imul
lret
mov
pop
cmp
mov
test
inc
push
adc
xchg
sbb
mov
ljmp
jo
and
jp
pushf
lea
adc
mov
xchg
shll
rcll
in
mov
scas
mov
push
outsb
sub
sub
dec
test
fdivp
testl
and
pop
das
jp
jo
mov
imull
sbb
and
inc
repnz
xlat
pop
cmp
lahf
mov
dec
call
jle
sahf
std
cmpsl
ret
push
push
in
jno
sbb
jno
lods
xchg
cli
mov
cmp
enter
push
test
xchg
inc
mov
aaa
push
jp
addr16
jbe
add
dec
lds
mov
inc
xor
cld
add
enter
dec
jne
outsb
push
stc
mov
mov
xchg
adc
sub
sbb
dec
sub
mov
repz
mov
jmp
gs
sub
ss
cli
xlat
sub
jae
loope
xor
adc
sbb
adc
popf
clc
inc
or
fs
mov
outsl
push
pop
test
inc
jo
scas
adc
fs
jmp
dec
mov
xchg
sub
push
push
jae
mov
and
cmp
fadd
pushf
mov
mov
les
imul
jge
sub
push
xchg
int3
lret
pop
movsb
arpl
repnz
mov
pop
mov
fsubl
jg
jne
cmp
ret
push
inc
andl
dec
and
jmp
and
test
adc
push
popf
or
fildll
cld
jmp
arpl
pop
test
mov
mov
inc
aam
test
out
sbb
mov
dec
les
jno
ret
dec
push
mov
ja
addl
loop
add
ss
mov
fcmovne
shlb
mov
mov
sub
cmpsl
and
sub
or
mov
mov
inc
ret
add
mov
daa
out
push
int3
int
shlb
bound
xor
mov
inc
cmp
pop
cmp
movsl
test
ret
mov
scas
jecxz
xchg
into
cmp
out
mov
jae,pt
arpl
dec
add
outsb
and
repz
jecxz
xchg
into
cmp
out
mov
jae,pt
arpl
dec
add
outsb
and
repz
loop
xchg
into
cmp
out
mov
jae,pt
arpl
dec
add
insb
and
repz
out
xchg
into
add
outsb
pop
loope
icebp
jmp
sub
xchg
fcoml
imul
sbb
cmp
or
sti
jmp
fnsetpm(287
lret
xchg
mov
movsb
mov
imul
adc
add
xor
and
aam
les
xchg
mov
movsb
mov
imul
adc
add
xor
and
aam
out
test
test
and
xor
xor
sbb
cld
push
enter
nopl
jecxz
mov
dec
sbb
pop
xchg
jecxz
mov
cmp
add
enter
push
ficompl
inc
ret
into
test
lret
cmc
fisubrl
lods
sub
cli
pop
jnp
push
rcll
sbb
xchg
mov
movsb
add
call
jl
sti
sub
and
and
dec
xchg
roll
pop
fwait
rcll
and
enter
aad
int3
mov
les
movsb
push
push
cmp
cmpsb
nop
outsb
xor
xchg
mov
lret
xlat
insb
jae
cmpsb
mov
pop
fs
adc
add
xor
and
aam
jmp
fnsetpm(287
lret
xchg
mov
movsb
loop
adc
imul
and
jno
imul
push
mov
lahf
xchg
cltd
aam
and
imul
jae
dec
jno
popa
or
mov
loope
into
xor
xor
cs
cmp
xor
and
aam
jmp
fnsetpm(287
lret
xchg
mov
movsb
mov
imul
adc
add
xor
and
aam
jmp
fnsetpm(287
lret
xchg
mov
movsb
mov
and
jmp
notb
sbb
mov
inc
mov
mov
in
adc
aad
ljmp
ss
mov
and
mov
pop
rcr
inc
inc
mov
mov
lret
mov
and
push
xchg
shrb
jmp
sbb
leave
xorb
in
outsl
out
push
in
clc
dec
int
sub
xchg
aas
adc
fsub
dec
push
mov
mov
adc
clc
adc
test
dec
push
mov
and
bound
jge
add
out
test
sub
xchg
pusha
or
pop
ret
pop
cmp
and
or
rcll
inc
sbb
inc
rcr
cli
incb
push
push
add
xor
inc
or
jb
xchg
lods
push
stc
or
mov
add
clc
repz
mov
stos
push
pusha
pop
adc
int3
xlat
leave
inc
sub
incb
out
popa
push
xchg
hlt
out
cmc
pop
dec
xlat
gs
fimull
pop
shl
mov
sbb
adc
inc
sub
jno
pop
cwtl
dec
out
jp
add
jo
jg
inc
cmc
xor
add
sub
dec
cmp
and
sti
mov
mov
dec
xor
imul
leave
pop
pop
lret
loope
xlat
sti
data16
adc
jp
lods
mul
jno
out
and
scas
jnp
push
testl
popa
nop
pop
repnz
xchg
in
xor
lea
mov
sbb
pop
insl
sbb
lret
xor
mov
les
xor
lods
inc
or
rcl
pop
cltd
lret
dec
in
pop
or
xchg
sbb
sub
inc
mov
fdivrp
aas
cld
jbe
push
fmul
out
cmp
or
push
xor
sbb
add
sub
push
and
mov
sub
sbb
loop
orl
aaa
sbb
inc
out
adc
cmpsb
inc
adc
sub
or
fistpl
add
xchg
sub
loope
xchg
sub
mov
dec
orl
mov
stos
jecxz
cwtl
andb
adc
sti
sar
pushf
shrb
jns
out
adc
jp
pushf
inc
popf
insl
cld
sti
cmp
cmp
inc
sbb
aaa
cmp
cli
jg
lahf
out
std
xchg
push
jge
iret
sub
cmove
dec
stos
mov
xchg
sbb
cmp
test
mov
sub
imul
push
daa
out
xor
aad
xlat
pushf
sub
lds
repz
add
dec
and
jb
inc
pop
loop
insb
orb
add
xor
xlat
das
xchg
movsw
add
cwtl
mov
imul
pop
jle
popa
stos
ss
stos
mov
loopne
mov
movshdup
mov
sarl
push
cmp
dec
mov
fdivrs
add
jno
daa
js
xchg
add
popa
shl
or
xor
jmp
cmp
or
daa
outsl
popa
rcrl
xor
or
lods
sar
pop
out
push
cmp
push
push
ljmp
inc
sub
xor
call
shl
xchg
imul
mov
xor
out
push
fdivrs
jecxz
mov
popf
sub
jb
or
jg
cmp
sti
shll
sub
cmp
sbb
push
loop
dec
scas
add
and
das
push
mull
dec
push
les
adc
movsb
unpcklps
addr16
insb
in
mov
sbbl
test
adc
das
mov
and
cli
ret
test
mov
in
pop
repz
call
jge
pop
cwtl
xchg
and
fcmovnb
jb
fxch
clc
testb
sub
bound
nop
mov
out
dec
jns
stos
cmp
jb
nop
adc
lock
insb
cmp
daa
shl
fcmovb
add
push
insb
pusha
shll
stos
mov
cs
test
xchg
inc
lahf
sub
cmpsb
mov
stos
mov
decl
jmp
push
mov
lds
xchg
clc
jg
inc
push
loop
sub
paddsw
shrb
frstor
pop
pop
add
stos
mov
jne
sub
dec
ret
fbstp
cmpsl
mov
xor
nop
cmp
jle
cmp
jle
add
ljmp
cmpsl
inc
test
xor
mov
leave
mov
add
cmp
fidivrl
ja
leave
push
dec
sar
push
pop
sahf
int
lods
loope
aaa
push
pop
push
arpl
pop
sbb
hlt
jg
cld
jge
shrb
xorl
cs
xchg
jnp
sbb
test
mov
pop
inc
rol
ret
adc
loopne
sub
mov
mov
or
movsb
xor
mov
int
int3
mov
bound
scas
lea
inc
mov
dec
fwait
out
lods
mov
mov
cmp
adc
ss
or
or
jl
rcl
mov
lds
sbb
call
popf
fs
push
mov
fcomi
or
jns
cld
xor
dec
or
mov
pop
ret
scas
push
xchg
or
xor
adc
outsl
dec
jne
es
lret
pop
or
push
xor
xchg
aas
movsb
iret
icebp
es
iret
jnp
pop
sahf
mov
out
push
ljmp
hlt
add
pop
sarl
inc
and
addb
or
stc
orb
sahf
mov
mov
int3
sub
insb
mov
test
mov
pop
iret
xor
jns
icebp
mov
cmp
in
out
shlb
out
pop
cmp
sbb
adc
pusha
iret
jecxz
cmp
jbe
xchg
mov
xor
and
jl
scas
push
mov
lods
mov
outsl
lock
cmp
sbb
push
aaa
shrb
cmovns
aam
call
pop
add
in
cmc
sbbl
repnz
std
fdivrp
push
mov
pop
sub
in
mov
cmpsl
sahf
jnp
insl
push
sub
bound
pop
fsubr
subb
arpl
sub
addb
lcall
inc
add
int
lret
xlat
jb
repz
in
int3
push
mov
or
jnp
add
enter
mov
xor
xlat
cmpsl
jne
sub
repnz
hlt
insb
mov
cwtl
jecxz
out
les
es
sub
mov
clc
inc
mov
adc
inc
xchg
sbb
sbb
lods
les
dec
push
orb
mov
lea
or
lahf
imul
sbb
inc
jne
fimull
xor
cmp
adc
mov
test
mov
js
sti
sbb
fs
jl
adc
add
xchg
fwait
sub
push
shlb
mov
push
in
std
cmc
xchg
dec
inc
imul
dec
cmp
mov
repnz
sbb
mov
sub
pop
leave
xor
sub
pop
jno
xor
pop
xchg
adc
movsb
mov
xchg
jb
loopne
push
pop
hlt
cmpsl
pop
xor
cwtl
mov
popf
or
shlb
sub
push
jb
test
rcll
xchg
xor
sub
lahf
mov
xchg
enter
test
inc
movsb
xchg
pop
mov
inc
xor
gs
inc
cmp
push
movsl
sub
inc
scas
sbb
pop
fisttps
ret
xor
push
lods
leave
mov
jp
ror
mov
xor
inc
inc
dec
sub
dec
dec
mov
and
ret
std
cwtl
addb
or
pop
aam
aad
imulb
js
xor
insb
jmp
inc
xor
ds
mov
jp
aas
out
push
stos
rcl
mov
fs
fists
mov
inc
cmpsb
in
stc
arpl
sbb
sub
hlt
hlt
mov
rolb
mov
mov
aas
std
sub
adc
or
aam
daa
xlat
dec
or
lret
xlat
lea
cmp
sahf
sti
stos
js
push
in
repnz
pop
fsts
lahf
fcompl
mov
adc
test
push
mov
lea
into
xchg
mov
sbb
lods
adc
outsl
popf
cmp
out
xor
movsl
nop
pop
xchg
int
loop
icebp
ljmp
fs
mov
cmp
sahf
xor
scas
outsl
ja
mov
jns
cmpsb
mov
sbb
enter
or
and
call
dec
fdivrs
sbb
push
lret
cmp
jbe
jp
pushf
and
xor
leave
xor
cmpb
adc
sbb
jmp
add
ljmp
ret
mov
mov
adc
cld
jno
and
mov
jnp
dec
iret
subl
pop
inc
push
mov
iret
sbb
mov
inc
push
mov
int
mov
fmul
xor
adc
aad
scas
fstpl
lods
and
push
hlt
add
fs
loopne
mov
push
mov
jl
sub
in
dec
inc
ja
lret
fbstp
xlat
mov
pop
lods
iret
xor
adc
lds
jge
and
popa
push
idivl
or
jg
outsl
pop
iret
push
movsl
daa
jg
imul
mov
repz
movsb
push
adc
pop
scas
adc
mov
sbb
gs
jmp
scas
xchg
jl
and
sbb
bound
in
push
nop
loop
adc
jg
ret
jo
aaa
add
ja
inc
pop
xor
mov
pushf
test
fwait
in
scas
aad
mov
add
int3
mov
mov
sub
movsl
call
inc
les
sub
dec
dec
jo
dec
fldenv
out
mov
out
fwait
test
fstp
mov
mov
sbb
inc
dec
cmc
lahf
repnz
aas
or
add
xchg
jl
out
es
movsl
outsb
inc
call
fstpt
pop
sub
sbb
fildl
pop
cltd
fnstcw
movsb
jge
mov
mov
jl
movsb
dec
jmp
and
mov
pop
and
movsb
incb
in
push
loope
lods
push
orb
inc
adc
sbb
pop
pop
sub
mov
sub
jmp
cmpsb
int
inc
ret
dec
jge
xor
pop
getsec
into
nop
fnstcw
push
pop
mov
xchg
mov
addps
xor
daa
mov
test
leave
inc
jmp
add
loope
push
dec
mov
test
or
sub
popf
les
jnp
or
aas
ljmp
xchg
movsl
add
push
sbb
mov
dec
call
aad
mov
std
push
add
es
sbb
outsb
add
jmp
shl
popf
jge
push
hlt
xchg
ret
stos
clc
je
push
adc
out
push
cmpsl
ret
cltd
and
mov
shl
scas
xchg
sub
fidivrl
je
and
xor
rol
mov
adc
ds
rcrb
mov
sti
fldenv
std
inc
int3
ss
stos
mov
push
jae
xlat
int
or
sbb
dec
mov
jo
data16
push
sbb
sub
push
std
adc
leave
shll
shrb
aad
sub
xor
imul
in
pop
ret
push
sub
stos
nop
nop
fisubrl
add
fdivrs
cmp
lret
xchg
mov
lret
lock
cmpsb
jg
xchg
adc
jge
mov
mov
fistpl
cmpsl
test
lods
popf
sarb
jb
inc
push
mov
test
ret
cmc
mov
dec
push
pop
movsb
test
jnp
dec
lods
and
movsl
daa
inc
outsl
lcall
lahf
mov
cwtl
adc
jbe
mov
dec
adc
pop
xchg
jae
cmpsl
push
pop
pop
push
mov
cmc
xor
mov
mov
addl
mov
push
inc
lods
out
ds
popf
loop
outsl
jne
fbstp
jo
insl
xor
popf
sub
mov
inc
mov
xchg
adc
loope
push
push
cmp
and
popa
sub
dec
xchg
mov
jecxz
push
push
sbb
cmp
push
in
vmovsd
adc
mov
xor
leave
adc
mov
out
out
jecxz
mov
call
sbb
push
ficoml
adc
jno
cmpsl
sbb
or
into
push
stos
xlat
xor
sbb
cmp
int
imul
out
xchg
dec
arpl
fiaddl
sub
inc
mov
ret
imul
mov
cmp
or
lods
das
rol
xlat
sub
sbb
xchg
lahf
mov
repz
addb
imul
jp
ljmp
xchg
das
add
inc
sbb
cmpsb
sbbb
iret
in
aaa
sahf
cmc
ss
cltd
xchg
xor
jecxz
mov
sub
movsb
xor
bound
imul
lret
fbld
dec
cmp
sti
sbb
pop
leave
lcall
scas
pop
pop
iret
xchg
add
pusha
rcrl
push
ja
gs
rclb
add
lods
jo
pop
aaa
cli
aas
stos
ss
sub
out
je
insb
sub
lret
cli
cld
enter
in
cltd
push
xchg
ret
js
jp
or
fs
lods
xlat
xor
movsl
arpl
loope
adc
sar
and
insb
fwait
cltd
mov
mov
xchg
xor
icebp
in
dec
dec
jl
dec
inc
test
fld
lods
sti
mov
test
push
mov
loop
xlat
test
cmp
shll
mov
test
out
arpl
fldcw
pop
push
mov
push
mov
int
add
fnstenv
sti
ljmp
mov
xchg
dec
mov
push
mov
into
fnsave
rcrb
out
mov
outsb
aas
loope
xchg
xor
or
pop
stos
lret
add
and
testl
pusha
inc
inc
xchg
cmp
push
popa
leave
add
mov
pop
movsl
mov
out
jbe
pop
xchg
push
push
sti
aad
sbb
inc
adc
mov
sub
jne
cmc
pushf
dec
xchg
xchg
pop
or
dec
shrd
jge
xchg
into
jecxz
in
jne
add
jae
xchg
push
cs
lcall
xor
sub
dec
and
sbb
or
movsb
leave
lret
mov
mov
cmp
mov
mov
stos
mov
int
or
pushf
and
outsb
jecxz
xorl
inc
movsl
xlat
xchg
pushf
inc
jns
imul
push
xor
mov
xor
hlt
rcrb
cmpsb
push
or
pop
mov
xchg
adc
mov
sbb
cmp
ss
roll
test
cli
mov
xor
mov
fwait
add
ffree
cmpsl
mov
mov
inc
out
mov
jae
mov
adcb
adc
xchg
ds
mov
popa
orl
xchg
mov
inc
gs
ucomiss
xor
cmc
movsb
int3
and
inc
xchg
cs
mov
xor
mov
ljmp
or
mov
inc
xor
xchg
lock
dec
and
fwait
rcr
sub
nop
int3
ss
in
inc
push
out
jle
out
push
outsl
add
popf
rorl
out
scas
popa
loop
test
dec
xchg
cmpsb
jae
xlat
call
or
add
add
jae
mov
das
inc
int
and
aam
fidivrs
sub
xchg
pop
mov
ljmp
mov
or
cmpsb
and
mov
push
pusha
stc
sbb
inc
aam
cmpsl
sar
sarb
aad
dec
dec
daa
jae
xor
sbb
iret
mov
in
xchg
inc
dec
pop
inc
cs
jp
hlt
popa
mov
dec
mov
ficoml
sbb
xchg
into
jne
cmp
popf
push
mov
vminss
lret
int3
jl
scas
idiv
xor
add
mov
lret
pop
mov
cmp
mov
loop
adc
add
dec
lea
repz
js
mov
hlt
jge
xchg
xor
test
aam
pop
mov
jmp
aad
aaa
push
fldenv
sub
or
push
pop
inc
fcoml
out
jg
pop
sub
dec
fiadds
cmp
inc
aad
xor
add
xor
fsts
and
incl
xor
pop
notl
fs
je
dec
xor
lea
jns
cmc
mov
jp
push
arpl
jl
leave
dec
ret
fwait
xor
push
daa
jge
mov
sub
mov
jb
and
adc
sbb
sbb
cmp
push
lahf
mov
pop
inc
insl
addr16
cmp
hlt
sub
pushf
mov
add
xchg
pop
or
ds
cmp
adc
nop
sbb
cmc
in
dec
popw
ljmp
ror
imul
dec
xor
mov
jbe
in
adc
adc
mov
push
pop
js
mov
dec
les
sbb
out
in
aad
cld
bound
cmp
lret
mov
pop
dec
xchg
xchg
xor
mov
add
rcl
sub
pop
cmp
mov
push
jbe
fcmovnu
sub
pop
jb
rorl
sub
lea
pop
mov
mov
lcall
push
pop
jbe
mov
xor
or
inc
ds
mov
repnz
popf
in
xchg
jo
stc
mov
inc
dec
sbb
cs
in
push
pop
lcall
push
cs
es
mov
xlat
cld
xchg
sub
ljmp
mov
clc
sbb
or
and
ror
test
xchg
jae
test
mov
aaa
loopne
in
jnp
nop
out
or
scas
fbstp
shrb
stos
xor
pop
in
add
imulb
pop
push
cmp
jp
adc
mov
inc
lretw
pop
jnp
addr16
or
in
cs
pop
add
mov
iret
and
jl
jbe
or
mov
dec
mov
subl
movsb
movsb
add
in
sbb
lret
loop
clc
aad
or
ret
aad
fsubs
scas
sub
fbld
sub
jbe
jno
pop
mov
push
lea
xor
mov
loop
mov
xchg
add
out
fwait
ror
adc
push
lock
pop
dec
in
lahf
data16
rorb
stos
icebp
dec
popf
mov
sti
mov
test
stos
push
push
leave
je
leave
das
add
andl
in
push
mov
je
subb
clc
and
hlt
repnz
and
add
cmpsl
enter
mov
xlat
stos
jmp
movsl
mov
mov
repnz
push
dec
call
fwait
xchg
ja
sub
mov
jae
mov
cmpb
shlb
aaa
mov
xor
or
lods
or
test
lods
ds
clc
ljmp
int
fcompl
je
or
fisubrs
add
popf
xchg
mov
xchg
xchg
sbb
xchg
je
and
sbb
add
push
xchg
cld
jp
sti
mov
nop
push
shrb
xchg
xor
fwait
dec
pop
cmpsl
aam
xchg
clc
jg
imul
mov
mov
jg
in
out
push
mov
movsb
rclb
or
cmp
loop
movb
addb
aas
arpl
push
sbb
in
hlt
sbb
ds
xchg
stos
lret
lret
jnp
popa
push
movsb
ds
fistpll
loop
aas
mov
xchg
jecxz
test
nop
in
imul
jg
fwait
jnp
sbb
jle
sahf
ret
jno
cmp
mov
fcomps
test
lods
loopne
mov
fisubrs
and
ja
pop
lahf
mov
mov
int
lret
hlt
cld
sub
shrl
pop
push
jae
fdiv
mov
mov
mov
mov
scas
adc
jge
sub
add
cmp
ds
or
mov
iret
pop
loopne
dec
push
mov
sbb
mov
inc
inc
and
inc
mov
pop
or
mov
jne
clc
inc
xchg
movsl
lods
and
in
clc
push
or
in
mov
sub
xchg
mov
test
shl
xor
sbb
pop
addl
test
add
sbb
and
dec
push
scas
or
push
into
or
out
lods
xor
dec
xor
lahf
sbb
xchg
daa
cmp
mov
repz
and
mov
test
add
jecxz
bnd
mov
lcall
dec
dec
inc
mov
sahf
in
pop
and
stc
sub
sahf
test
push
aad
sahf
lret
hlt
push
mov
loop
seto
notl
cmp
sbb
sbb
int
js
jb
cs
xor
hlt
scas
in
cli
or
repz
outsl
fldt
push
hlt
into
clc
push
scas
sub
cmp
dec
pop
fs
adc
add
xor
and
aam
jmp
fnsetpm(287
lret
xchg
mov
movsb
mov
imul
adc
add
xor
and
aam
jmp
fnsetpm(287
lret
xchg
mov
movsb
mov
jmp
cmp
or
jnp
jmp
frstpm(287
lret
xchg
mov
movsb
mov
imul
adc
add
mov
movsb
or
sti
cmp
fnsetpm(287
mov
dec
fs
je
out
xchg
mov
jae
add
sub
lods
jno
jp
pop
clc
das
in
xlat
fisttpll
int
xor
lret
jge
insl
mov
in
push
jp
inc
lea
add
cmp
or
sbb
dec
lods
cmp
push
lret
lods
insl
lcall
mov
sub
sub
jns
pop
stos
js
jle
scas
or
mov
pop
or
mov
scas
test
repnz
cwtl
cmc
cld
push
xor
jp
and
mov
leave
cmp
data16
jl
pop
addl
sbb
inc
sbb
sub
sar
push
push
dec
jae
add
pusha
ficoms
cli
pusha
into
pop
fidivrl
mov
pop
test
lcall
out
mov
cmc
xor
cmp
pop
loop
int
sbbb
data16
std
sub
push
inc
in
das
lea
xchg
mov
mov
xchg
dec
fdivr
mov
inc
cmp
pushf
pushf
lea
js
in
jg
out
jo
sub
mov
sub
dec
push
rolb
xchg
popfw
push
repz
adc
xchg
pop
cmpsb
arpl
dec
ljmp
int
in
cmp
mov
lods
movsl
mov
adc
or
xor
ds
clc
sbb
push
mov
test
mov
cltd
push
sbb
dec
mov
out
mov
mov
dec
lea
sub
cmp
or
sbb
lret
jge
insl
mov
mov
dec
lea
sub
cmp
or
sbb
mov
xor
int
mov
and
movsl
and
push
into
imul
jle
inc
outsl
sbb
add
ljmp
push
into
mov
mov
xchg
push
mov
cmc
fistpl
and
mov
sarl
je
icebp
xlat
xchg
add
adc
shlb
jecxz
je
out
ss
fsubs
sub
fsubrl
mov
adc
mov
rol
mov
mov
test
scas
add
cmp
push
inc
sub
push
es
xor
lahf
das
jb
popa
aam
and
out
outsl
inc
in
dec
sub
imul
jg
sbbl
fisttps
adc
mov
ss
fimull
cmp
dec
lods
mov
sub
and
xor
push
lock
cli
cmp
out
add
lock
test
fcomi
jo
stc
lret
int
xchg
fsubl
xor
mov
push
vphadduwd
jae
lret
push
cmovp
ret
popf
inc
dec
mov
imul
jp
mov
adc
adc
add
adc
push
jnp
jne
jne
xchg
sub
les
cli
fisubs
nop
jl
iret
adc
ds
test
inc
sbb
push
scas
mov
divl
pop
push
sub
push
sub
int3
xchg
sbb
repz
je
les
loop
jle
out
dec
test
test
add
out
test
dec
insb
mov
push
mov
mov
pushf
call
mov
xor
adc
sbb
sub
jl
addr16
and
sbb
mov
and
sbbl
sub
mov
adc
sbb
push
push
fst
mov
nop
call
test
xorl
jp
pusha
push
mov
out
xchg
movsl
jl
cwtl
sub
mov
push
and
push
rcrb
mov
cmc
test
adc
pop
ljmp
pop
hlt
lea
hlt
fstps
add
cld
mov
mov
or
test
movsl
outsl
jecxz
sbb
cmp
jle
jae
scas
xchg
mov
enter
adc
lcall
xchg
das
leave
xchg
sbb
push
rclb
push
fbstp
or
cmp
and
jmp
mov
push
mov
add
or
sbb
jbe
flds
fsubp
cmp
mov
cmp
or
jle
pop
add
dec
mov
inc
ljmp
les
sahf
mov
inc
and
xchg
and
inc
hlt
clc
in
mov
mov
cmp
movsl
test
cmp
loopne
aam
ja
je
out
pop
arpl
mov
sar
cmpsl
push
in
mov
mov
inc
imul
mov
repz
fidivl
dec
sub
stos
ss
mov
dec
lcall
negl
test
pushf
push
incl
jb
dec
das
push
mov
js
das
flds
sub
xor
xchg
sub
test
addr16
lock
cmp
mov
sbb
jae
shr
dec
adc
inc
xchg
fsubrs
movsl
arpl
mov
push
sbb
test
out
pop
shll
test
addr16
in
loop
jb
ret
adc
scas
lods
pop
lcall
push
loop
and
lret
in
loopne
daa
xor
ret
inc
adc
inc
nop
jp
les
and
lcall
ror
mov
xor
xchg
sbb
inc
jg
cwtl
mov
cs
inc
pop
jecxz
out
mov
aaa
jne
shll
ret
in
mov
cmp
cmp
push
push
mov
or
ret
pop
imul
std
and
lahf
ss
sti
out
roll
not
xor
dec
pop
mov
and
cltd
mov
in
icebp
mov
dec
nop
mov
adc
mov
fbstp
mov
lea
loope
xchg
fldt
in
call
cmp
dec
adc
sub
int
cmp
push
xor
aad
fcoml
aad
test
in
shlb
es
mov
pop
mov
or
cmp
push
rcl
sub
shrb
daa
inc
cmp
hlt
movsb
and
test
pop
aas
push
faddl
test
cld
icebp
ret
inc
dec
xchg
jb
mov
test
cmpsb
sbb
popf
popf
jle
pop
fdivrl
addr16
sub
repz
xor
in
sbb
xor
pop
jns
loop
or
mov
push
mov
pop
xchg
mov
into
add
cwtl
insb
movsl
mov
mov
push
jp
stc
rol
cmp
add
dec
adc
mov
sti
shlb
ret
pop
loop
mov
add
aas
pusha
fldt
cwtl
das
call
out
icebp
inc
pop
fdivr
adc
dec
or
and
lods
imul
pop
movsb
test
pushf
mov
or
in
inc
ds
sbb
dec
adc
int
repz
fdivrl
in
pop
cld
jl
test
cmp
inc
hlt
adc
lret
lret
test
fists
maxps
inc
stos
cmpsb
pop
jge
xchg
ja
jg
sbb
jbe
stc
cs
stos
dec
pop
popa
pop
stos
data16
lcall
add
cmpl
sbb
or
loope
in
imul
movsl
cmc
enter
cmp
push
xor
cmpsb
lock
push
or
or
aam
repz
push
in
or
add
rcl
add
fs
les
and
add
or
jl
pop
loope
daa
lcall
rclb
shrl
popa
arpl
sbb
inc
ret
in
out
mov
call
xor
mov
xchg
test
stos
xor
outsb
mov
fnstsw
add
imul
xor
jge
imul
cmpsb
push
repnz
mov
jg
js
outsl
scas
lahf
fdivl
into
adc
pop
and
test
test
mov
daa
mov
into
add
jle
icebp
dec
or
adc
test
js
xchg
insl
stc
xchg
ljmp
cmc
cmp
dec
inc
dec
jae,pt
movsl
add
cmpsb
inc
mov
push
lea
mov
jmp
fs
sbb
mov
xchg
mov
sbb
cmp
mov
subl
pop
jle
mov
int
mov
loopne
aas
sub
push
or
pop
mov
xor
adc
std
imul
adc
movl
shll
mov
leave
in
xchg
inc
cmp
les
lcall
inc
add
fidivrl
sub
faddl
in
int3
ss
es
sbb
inc
dec
sub
lcall
inc
pop
fstp
out
in
andl
call
dec
or
fmulp
push
mov
push
das
cmpsb
xchg
daa
xchg
cmc
cmp
rcll
fsubrs
insl
and
sbb
nop
cmpsl
movsb
adc
mov
or
cmpb
push
out
shlb
and
test
jmp
sahf
mov
neg
dec
add
das
mov
ror
les
movsb
xchg
push
and
jno
mov
je
loopne
cld
cmp
sub
lods
je
push
lret
jle
push
push
je
lea
xchg
push
hlt
cmp
pop
or
xlat
ljmp
cmp
das
je
outsl
jmp
jo
push
leave
call
sbb
sahf
stos
mov
push
out
jbe
icebp
cmp
mov
sti
adc
pushf
clc
pop
pop
xor
ret
sahf
fwait
inc
add
mov
fstpt
or
ja
pop
xchg
mov
cmc
ret
aad
mov
movsb
iret
out
mov
and
dec
cmp
dec
mov
jns
sub
shl
xlat
icebp
lcall
mov
arpl
out
mov
mov
imul
dec
mov
pop
out
pop
mov
mov
cld
fbstp
outsl
mov
nop
mov
cmc
add
xor
jae,pt
pusha
stos
leave
insl
inc
jnp
dec
dec
dec
xorb
mov
cld
or
jg
mov
dec
or
sbb
pop
adc
and
insl
and
repz
lock
mov
aaa
imull
cmp
mov
clc
movsb
aaa
add
xor
test
lods
push
sub
addb
dec
out
lea
inc
adc
jae
jns
adc
inc
jnp
pop
push
les
fists
jns
sub
fsubrl
or
outsb
dec
sti
rcrb
rcll
je
xchg
cwtl
dec
xor
addr16
loope
mov
xor
jns
es
add
inc
mov
std
lea
fiaddl
mov
out
inc
mov
subl
mov
mov
shrb
mov
imul
sahf
aaa
fcmovnbe
loope
sub
or
enter
mov
into
push
adc
mov
lods
mov
lock
cltd
stos
sub
mov
and
pusha
test
jo
lock
jp
mov
cmp
sub
ljmp
jle
push
lods
insb
imul
dec
aaa
fdivrl
and
int
movsl
lea
xchg
inc
add
inc
add
ljmp
sar
sbb
movsb
stos
rolb
jecxz
icebp
inc
or
js
pop
test
or
xchg
jnp
and
xchg
ljmp
pusha
mov
aas
loopne
in
rorl
xor
push
add
sbb
mov
add
adc
out
jno
xchg
js
pop
add
fdecstp
mov
fs
mov
and
dec
mov
fnstsw
bound
mov
add
mov
pop
jb
hlt
and
enter
mov
push
mov
and
inc
fabs
mov
mov
mov
jle
scas
fs
lcall
xchg
jle
jb
push
xchg
cmp
movsb
xchg
lods
mov
hlt
or
sub
in
in
xchg
flds
add
jmp
sub
fwait
pop
stos
mov
in
call
jae,pn
or
dec
stos
jmp
mov
push
inc
pop
movsb
clc
dec
es
pop
mov
and
ror
mov
sarl
std
push
xchg
mov
call
dec
xchg
jo
scas
xor
mov
clc
dec
cmpsl
mov
push
bnd
popa
clc
mov
movsl
inc
testl
loope
lcall
xchg
add
cmp
in
mov
int
cmp
push
xchg
push
ret
int
mov
pop
imul
jno
or
cmp
cmp
mov
lret
out
sti
dec
lock
jg
pop
push
push
daa
stc
addr16
fnstenv
dec
mov
push
ret
push
pop
je
popa
scas
popa
xchg
fistpl
add
ja
cltd
insb
sbb
lds
js
push
movsl
jp
je
into
xor
sbb
push
sbb
leave
les
and
xor
xchg
popa
test
rcll
popa
and
clc
test
das
mov
aam
out
sbb
insb
movsl
jge
test
sub
xor
inc
adc
push
cmp
repnz
jmp
dec
outsl
lret
push
stos
mov
and
insl
xor
int
and
cmp
pushf
fidivrs
roll
pop
stos
popf
push
mov
mov
pop
mov
sbb
mov
mov
mov
insb
push
sub
xchg
mov
xor
and
mov
mov
pop
repz
cld
or
or
push
mov
cwtl
adc
mov
leave
lods
jp
mov
jbe
test
jp
out
or
push
ja
lret
pop
push
adc
popf
jb
ja
mov
mov
dec
lods
mov
ljmp
sbb
xor
iret
insl
xor
push
enter
push
sbb
arpl
test
addr16
in
inc
clc
mov
pop
movl
jae
inc
add
sbb
jo
and
imul
daa
jl
mov
dec
cmp
mov
pop
orb
xchg
in
and
lods
cmp
ja
rolb
xchg
lret
add
adc
bnd
aaa
push
inc
fdivrl
pop
out
cmp
fs
lock
addr16
sbb
or
fcmovu
test
nop
and
push
arpl
or
fiadds
cmp
xor
notl
add
jge
cmp
jle
push
stos
sahf
shl
push
mov
sub
fwait
pop
mov
mov
push
xchg
jbe
jnp
dec
out
in
inc
xor
cmp
lds
mov
pop
and
mov
lods
jle
movswl
mov
call
cmpsl
push
mov
fs
ljmp
fistpll
push
lea
test
cmp
and
mov
or
adcb
cmp
push
lds
mov
jo
es
sbb
mov
shrb
arpl
pop
aaa
out
sub
add
ret
adc
xchg
mov
lods
adcb
push
xchg
and
xor
cmp
cmpsl
push
pop
rolb
loop
push
call
mov
cmp
jns
scas
lret
lock
add
push
sub
mov
pop
mov
insl
sbb
sti
mov
test
std
fld
xor
insb
or
sahf
scas
ja
fidivrl
jmp
add
das
icebp
pop
mov
adc
sbb
push
es
ljmp
xor
xchg
xlat
mov
sbb
ret
pop
movsb
rclb
and
adc
jo
rol
add
jo
pop
mov
and
jmp
dec
dec
jl
std
cmp
xor
mov
pop
adc
push
aad
sbb
pushl
xor
stos
adc
std
push
adc
and
cltd
and
mov
ffree
sub
mov
jmp
inc
and
aad
inc
mov
pop
test
daa
repz
or
int
addr16
int3
dec
dec
repz
fcmove
inc
jae
test
ds
or
pop
xor
psrlq
jge
daa
cmp
xchg
xor
sahf
jmp
sbb
xor
dec
fs
in
jns
sbb
xchg
pop
rcrb
sbb
lock
mov
push
mov
xor
std
push
jbe
cmpsl
jp
push
pop
push
je
jo
push
cltd
mov
inc
adc
rcrl
mov
in
mov
repnz
mov
in
out
clc
add
mov
adc
adc
out
xlat
xor
imul
inc
clc
data16
sub
lcall
test
in
xchg
daa
sub
fbld
sahf
addl
pop
jae
mov
insb
pushf
xor
aad
sbb
fmull
pop
pop
lods
mov
dec
xchg
ljmp
jns
call
mov
ret
icebp
jnp
pusha
int3
ds
fildl
inc
fisttps
mov
mov
arpl
outsl
lcall
cwtl
xor
lock
or
or
test
jg
add
movsb
lock
push
or
fdivrs
incl
popf
pop
jl
out
lret
jae
sub
pop
sbb
cmp
out
cmp
std
add
call
lock
cld
add
mov
push
mov
arpl
cmpsl
rorb
call
je
ljmp
add
cmp
jne
mov
fwait
ja
lods
mov
xchg
mov
xchg
mov
and
cmp
inc
inc
pop
sbb
out
stc
cmp
loope
pop
sub
sbb
mov
pushf
fcomps
add
jae
adc
fstl
insl
fdivl
xor
aam
xor
xor
cld
in
push
xchg
xchg
dec
stos
mov
bound
mov
lods
jne
clc
add
int
in
mov
pop
ljmp
xchg
enter
lea
push
rcrl
inc
jbe
in
out
out
gs
nop
jl
out
dec
mov
inc
sti
sbb
mov
push
sub
stos
jae
xchg
lods
int
imul
rcl
leave
mov
push
lock
popa
sbb
test
or
or
jo
mov
xchg
rorb
mov
xchg
sbb
lret
jbe
inc
lret
ja
nop
incb
inc
inc
outsb
mov
jecxz
mov
bound
pushf
pusha
jmp
dec
mov
pop
in
roll
xor
popa
scas
aam
fmuls
cmpl
xchg
mov
xchg
jae
inc
push
inc
stc
cmp
sarl
jp
loop
jae
mov
in
push
scas
mov
mov
inc
call
insb
aad
inc
and
ret
mov
push
push
mov
lods
scas
lahf
jp
dec
shlb
mov
ret
pop
movb
test
lahf
mov
mov
mov
in
mov
incb
sbb
fwait
lods
dec
fldt
cmp
imulb
cs
cld
dec
inc
popf
stos
cmp
dec
sub
sbb
push
imul
repz
add
dec
clc
outsb
dec
test
adc
jp
lock
pop
fwait
data16
sub
popa
push
fsubs
or
dec
mov
mov
add
pop
inc
mov
cmp
pop
jne
shlb
lret
pop
shrb
cs
fmulp
push
lods
lret
movhps
hlt
div
sub
push
in
in
add
and
mov
jp
mov
mulb
loop
mov
jno
inc
inc
or
inc
ss
push
int3
xor
imul
and
hlt
popa
mov
inc
lret
add
bnd
xchg
mov
popa
jmp
addr16
jb
cli
sbb
mov
mov
xor
mov
sbb
xchg
inc
jne
xor
fcomp
dec
xchg
inc
push
mov
mov
ds
xchg
push
clc
inc
sbb
mov
pop
test
mov
or
jl
lods
testl
insl
jb
dec
cwtl
sarb
jp
mov
filds
cmpl
mov
dec
mov
xchg
pop
jl
test
add
add
push
xlat
sahf
lcall
or
cmp
mov
lods
mov
mov
inc
outsb
xor
add
or
push
outsb
jne
cltd
stos
insl
movsl
rcl
adcb
mov
and
aaa
xchg
lock
test
inc
mov
je
jecxz
xor
jge
mov
sbb
mov
fxam
push
mov
test
ss
repnz
daa
fldt
aaa
inc
cmp
add
adcl
and
xchg
xchg
scas
adc
ljmp
or
fisttpl
jae
inc
push
dec
je
roll
in
cmpb
ss
hlt
xchg
sbb
jbe
sub
test
dec
repnz
xor
and
rolb
sub
ja
jge
push
and
sub
cmp
or
mov
push
push
fidivrs
cmpb
mov
mov
or
pop
add
xor
xchg
xor
loopne
lret
ljmp
dec
cltd
das
cmp
sahf
out
jb
fisubl
adc
cmp
inc
shr
jecxz
push
cmp
testb
adc
pop
push
inc
scas
sbb
jle
and
push
es
repnz
movsb
incb
and
adc
ret
mul
push
fcmovbe
test
jmp
jno
loopne
pop
pop
and
into
cmc
jne
das
or
mov
pop
xorb
cli
sahf
nop
cs
push
in
ljmp
ret
cmpsb
pop
dec
inc
in
int3
mov
add
insl
push
push
mov
gs
into
shlw
pop
dec
add
roll
fildl
inc
inc
cmpsl
dec
add
out
xchg
dec
xor
and
ja
jae
or
repnz
or
inc
cli
sti
pop
and
imul
outsb
pop
cmp
cwtl
iret
scas
fdivs
mov
mov
shr
adc
inc
stos
adc
in
repnz
hlt
xorl
rcll
xchg
jge
sub
jmp
idivb
loop
mov
mov
ret
jne
xor
ret
popl
mov
loope
mov
subl
jae
je
jmp
or
xchg
xchg
add
mov
xchg
xor
test
sarl
cld
adc
mov
lret
adc
shlb
push
inc
add
cmp
out
bnd
repz
or
bound
notb
mov
jns
lea
pop
mov
gs
idivb
jge
sub
mov
xchg
mov
mov
push
inc
or
addr16
ljmp
cwtl
shll
xchg
loopne
gs
sbb
xor
adc
jge
insl
mov
mov
dec
lea
sub
cmp
or
sbb
lret
jge
insl
mov
mov
dec
lea
sub
cmp
or
sbb
rorb
rcrl
dec
lcall
mov
cs
cmp
add
and
cs
mov
mov
dec
lea
and
bound
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
movsb
add
xchg
arpl
sub
add
ret
inc
jecxz
adc
hlt
push
in
aam
les
xor
and
adc
add
mov
fs
push
repz
jecxz
adc
hlt
push
in
aam
les
xchg
pop
mov
je
or
jmp
shlb
call
lods
fbstp
push
adc
jg
call
and
cld
adc
adc
pop
jnp
or
into
sub
cmp
leave
andl
mov
gs
add
mov
add
jg
xchg
lea
lcall
mov
pop
and
sbb
xor
das
mov
movsb
push
test
push
icebp
inc
push
jnp
cmpl
outsb
es
and
xlat
xchg
dec
roll
int3
jnp
lods
fsub
lods
push
and
xchg
xchg
dec
jns
daa
sbbb
dec
dec
pop
adc
ss
enter
ljmp
sub
and
jmp
sbb
adc
hlt
push
in
aam
les
xchg
and
adc
add
je
fs
push
repz
movsl
cmc
adc
jp
jb
hlt
adc
aaa
mov
pop
xor
inc
lcall
test
addl
outsl
icebp
jnp
inc
hlt
adc
dec
push
divb
push
aam
icebp
jne
or
xchg
xor
sti
push
call
inc
aam
les
xchg
and
adc
add
je
fs
push
repz
jecxz
adc
hlt
push
in
aam
les
xchg
and
adc
add
je
fs
push
repz
jecxz
adc
in
cmpsb
out
aas
and
xchg
adc
je
mov
test
dec
dec
jl
outsl
push
cmp
outsb
push
icebp
js
out
aaa
bound
push
mov
and
push
sub
xchg
xchg
xchg
jae
sub
das
cmp
dec
pop
mov
sahf
lods
lods
scas
fstpl
mov
sub
addr16
shll
clc
mov
jl
std
pushf
out
jo
mov
cmp
testl
enter
fimuls
xchg
jp
xchg
and
repnz
or
cmp
nop
out
mov
jns
or
push
mov
mov
add
stos
mov
icebp
cs
inc
adc
jp
xor
lret
mov
pusha
jbe
in
insb
pop
scas
or
xchg
test
push
dec
xchg
orb
sub
dec
pop
mov
data16
and
xchg
mov
cmp
gs
ss
push
cmp
or
movsl
push
mov
pop
and
xchg
jle
mov
and
mov
addr16
lds
fldcw
ror
jb
inc
in
mov
xchg
xchg
mov
repnz
das
cli
outsb
shlb
hlt
sahf
add
fldenv
lret
movsl
mulps
mov
cli
and
stc
pop
out
incl
mov
dec
cmpsb
movsl
fbstp
mov
loop
and
mov
outsl
cwtl
mov
enter
mov
int3
stos
fwait
popa
in
xor
ret
fsubrs
sub
jge
cmp
jae
mov
lods
adc
arpl
sbb
jmp
lret
xor
cmpb
inc
and
add
lret
test
aas
jns
out
push
pop
add
mov
add
pop
adc
outsb
testl
pop
jge
gs
movsl
push
jg
cli
push
in
clc
adc
in
aaa
insb
sub
mulb
sbb
outsl
in
jo
push
adc
btr
call
rorb
lret
test
dec
movsb
mov
lret
mov
ss
push
xor
orl
xchg
mov
es
mov
cmp
sbb
pushf
aam
pop
mov
jae
in
or
fld
leave
je
rolb
and
xor
cmp
mov
movsl
std
pushf
notb
push
lock
cmp
mov
js
imul
jnp
sub
scas
adc
xlat
les
cmpsb
adc
sahf
int
cld
loop
mov
ret
cmp
or
rol
inc
sbb
or
jge
repnz
add
push
xchg
in
mov
mov
fsubs
pop
sub
mov
test
dec
push
mov
push
inc
imul
pushf
stos
lret
leave
ljmp
fildl
int
bound
xchg
mov
mov
mov
xor
lods
ljmp
add
shll
leave
loopne
cmp
push
jge
sub
in
outsb
out
xchg
stos
and
mov
adc
push
ss
dec
fs
jmp
xor
hlt
ja
or
mov
test
cmp
push
jge
int
popf
mov
popf
repz
jg
lods
xor
cmp
jp
test
pusha
pop
sub
rorl
xchg
push
or
pcmpeqd
test
mov
or
dec
jge
cli
sub
mov
pop
roll
xchg
xchg
cli
dec
inc
lret
pop
xchg
mov
cmp
jbe
bswap
int3
cmp
cmpsb
add
testb
in
adc
test
sub
aas
jb
xorb
adc
inc
je
call
fidivs
sbb
mov
xor
add
andb
inc
or
andw
cmp
add
sbb
ficomps
ljmp
test
mov
sahf
sub
mov
and
cmp
scas
test
jae
jns
outsl
insl
aad
xor
mov
aas
mov
fucomp
xchg
inc
xchg
std
add
fnsave
inc
jb
shl
sub
cmpsb
mov
push
icebp
leave
pop
or
das
idivb
std
jmp
outsb
cwtl
add
je
stos
push
repnz
mov
addr16
call
repz
scas
pop
xor
mov
pop
lods
jg
cmpl
mov
jmp
das
mov
outsb
adc
inc
push
adcb
add
xorb
pop
cmp
mov
stos
outsb
mov
bound
stc
insb
push
push
push
mov
adc
aas
jno
aaa
adc
cmp
pop
mov
push
divl
int3
xchg
fnstcw
out
imul
gs
push
or
inc
loope
movsl
mov
lods
int3
or
ss
pop
and
mov
outsl
aam
mov
cmp
push
xor
jmp
ds
mov
xchg
leave
lds
mov
std
pop
pop
outsb
cwtl
lcall
add
test
lods
ficoms
ja
mov
mov
cld
test
in
clc
mov
lea
mov
stos
xchg
pusha
jbe
movsb
in
sbb
push
xor
das
cltd
fdivr
or
inc
inc
pop
xchg
mov
test
mov
inc
das
adc
dec
movsb
out
xchg
ret
aad
ds
inc
push
dec
sub
icebp
cld
fwait
mov
daa
repnz
jbe
add
cld
in
xor
sbbb
push
ljmp
test
shll
adc
cmpsl
std
adc
out
lock
mov
jge
lcall
pop
fisttps
jmp
sarb
push
xchg
mov
jp
cs
in
dec
or
lds
cmp
sub
mov
xchg
push
pop
push
jge
ja
pop
xchg
add
jo
std
and
cmp
adc
dec
jp
add
imul
adc
repz
xor
lds
mov
push
clc
ljmp
stos
cmc
pop
es
mov
inc
lret
pusha
or
and
test
mov
fimuls
inc
mov
or
fsubrs
sbbl
out
ss
mov
dec
inc
loopw
ja
and
inc
cli
jmp
jae
hlt
call
fidivl
pop
insb
das
xor
cs
movsl
dec
add
pop
cmp
shll
arpl
rcrb
dec
cmpsb
mov
inc
sbb
mov
mov
cmpsb
mov
sar
lret
repnz
scas
jo
subb
popa
dec
push
dec
or
xor
push
aas
js
nop
xchg
xchg
mov
jne
repnz
push
test
fnstsw
mov
filds
loopne
pushf
sub
cwtl
pop
shrl
lods
adc
adcb
js
add
mov
jbe
jb
daa
inc
push
jge
dec
mov
gs
idiv
jge
fwait
mov
lock
or
sub
sahf
jl
jmp
push
idivb
repnz
ss
call
ficomps
jmp
mov
test
int
movsl
add
leave
repnz
into
mov
mov
imul
test
sub
subl
or
xlat
xor
cmp
stos
popa
dec
shl
iret
shlb
js
xor
bound
insl
add
imul
push
add
lcall
pusha
sub
sti
clc
ret
popf
fcompl
pop
mov
es
and
daa
sbb
popa
adc
sub
insb
adc
leave
in
xchg
sbb
stos
push
pop
sub
push
mov
sbb
xchg
mov
out
add
xor
adcl
cmpsb
dec
into
push
shl
add
jo
movsb
enter
aaa
mov
dec
out
stc
mov
stc
addl
xchg
scas
jg
je
push
ret
cmpsl
jb
dec
ljmp
inc
pushl
mov
mov
jl
js
pushf
lcall
mov
xor
movsb
test
add
fcmovnbe
enter
xlat
rclb
xchg
mov
xchg
mov
xor
push
cmp
lods
mov
pop
lods
dec
or
das
mov
pop
and
outsl
cvtpi2ps
dec
jnp
mov
or
mov
or
fidivrl
mov
jmp
xor
jl
push
fnstsw
or
jb
cmp
push
loopne
xchg
jge
jle
and
or
arpl
fcoml
sub
data16
ret
xchg
ljmp
or
xor
push
shlb
test
mov
jo
mov
or
mov
hlt
and
sub
jmp
fiadds
mov
inc
ds
mov
mov
gs
xor
fisttps
arpl
outsl
pop
ffreep
mov
sbb
and
cvttps2pi
mov
cmp
mov
sbb
dec
repnz
cli
push
jne
inc
push
push
rcll
jns
add
adc
dec
jecxz
sbb
jl
mov
or
movsb
xor
jo
or
pop
lcall
mov
lahf
or
arpl
xor
mov
or
aas
or
mov
cli
push
inc
leave
push
add
lods
ret
add
fsubl
pushf
sahf
mov
adc
cs
aam
cmp
add
pop
aam
mov
movntq
pop
es
sbb
and
and
push
xor
pop
leave
dec
test
scas
mov
call
and
insb
pop
scas
fistpll
out
xor
pusha
push
sbb
cmovb
pushf
pop
xchg
sbb
sub
cwtl
xchg
cmp
mov
iret
or
aam
sbb
xchg
push
adc
fwait
push
cmp
ljmp
lcall
mov
cmp
icebp
shr
push
ljmp
mov
fsubrp
lahf
and
dec
repz
push
or
lcall
test
pushf
das
in
ret
in
jmp
pop
mov
mov
dec
xchg
inc
out
xlat
clc
mov
jb
ja
push
jnp
bound
xchg
sub
jbe
inc
int
aas
pop
ret
in
rorl
cmp
pop
mov
sub
lret
mov
add
lret
shl
pop
gs
sbb
frstor
adc
fnsave
jmp
les
adc
loop
sbb
xchg
loop
fs
push
inc
push
cmp
imul
push
push
xor
mov
xchg
pop
xchg
cs
mov
fisttps
push
in
mov
imul
icebp
xchg
and
outsl
in
negl
xchg
int3
clc
adc
icebp
add
ret
cmp
or
pop
dec
mov
mov
xchg
out
cmp
xchg
xor
mov
mov
mov
je
mov
orb
push
out
orb
loope
xor
inc
inc
sbbl
test
cmp
test
jl
test
mov
adc
int3
mov
cmp
vmovups
mov
cmp
pop
pop
jae
imul
mov
push
mov
mov
lods
mov
sbb
xchg
mov
dec
stos
enter
mov
gs
cmc
cli
mov
inc
pop
outsb
or
sbb
roll
jns
imul
dec
push
cli
dec
idivb
scas
outsb
ljmp
jmp
pop
and
mov
out
cmc
inc
sbb
imul
aam
or
xor
mov
lret
pop
jnp
and
mov
iret
je
dec
leave
dec
in
rcll
adc
js
dec
test
inc
lahf
push
jg
es
aas
insl
stc
xor
and
out
lds
push
mov
mov
and
mov
popf
pop
mov
mov
enter
lcall
sbb
jg
int
int
out
xor
ret
adc
inc
and
adc
pop
xchg
jle
std
xlat
xor
adc
xor
sti
push
out
and
jge
in
addr16
imul
xor
pop
lahf
rclb
inc
jne
dec
sbb
enter
js
xchg
insl
xlat
jnp
fisubs
mov
imul
imull
sbb
mov
out
cli
mov
inc
outsl
ja
js
push
and
and
stos
cmpsl
adc
loopne
sbb
ds
adc
pushf
in
push
lahf
sbb
dec
xor
jnp
xor
dec
cmp
aaa
mov
das
pop
dec
pop
mov
mov
adc
jns
mov
pop
mov
push
cltd
cmpb
pop
xor
mov
and
cmp
xchg
mov
imul
pop
cmp
outsb
add
mov
jno
push
sub
daa
insl
lcall
xor
xor
pop
sub
cwtl
cmp
sbb
sarb
and
lret
in
lret
mov
rolb
test
movl
cwtl
stc
sbb
or
sahf
sbb
rclb
mov
movsl
std
rcr
fldenv
cmp
cmp
or
roll
and
stos
or
insl
rorl
push
not
xor
test
dec
inc
popl
jge
or
adc
pop
imul
mov
andl
mov
ljmp
pop
xchg
push
push
out
out
in
fs
mov
push
mov
mov
ljmp
rcll
and
fistpll
movsl
into
adc
mov
add
sti
cmp
sub
add
adc
or
and
jo
sbb
mov
test
xchg
das
mov
fwait
inc
and
and
testb
popf
mov
inc
sbb
jne
inc
hlt
xchg
xchg
fs
xchg
aam
addr16
inc
es
mov
imul
aas
insb
out
dec
subb
pop
xor
pushf
sbb
inc
dec
cmp
movsl
ja
stc
sub
push
sbb
sub
cmp
adc
inc
xor
sbb
dec
aad
std
lods
fwait
call
cmp
xchg
lcall
xchg
out
aaa
cwtl
push
sbb
icebp
imul
sbb
pushf
das
imul
mov
lcall
mov
cmp
add
jno
jo
mov
add
mov
test
iret
lods
gs
repz
cltd
mov
lock
daa
out
sbb
orl
inc
cwtl
ret
outsb
adc
lret
orl
adc
add
push
inc
mov
sti
in
sbb
in
ja
xor
pop
ret
mov
lret
jp
sbb
mov
sub
xchg
stos
ljmp
cmpsb
mov
xchg
je
icebp
or
inc
andl
mov
add
push
xchg
test
sub
add
leave
xchg
sarb
jmp
add
rolb
enter
push
mov
mov
cmp
add
or
outsl
push
lcall
and
lret
inc
lea
jg
ret
xor
mov
xchg
push
inc
pop
xchg
push
pusha
add
arpl
sbb
dec
xchg
xchg
sbbl
inc
xchg
outsl
shrl
pop
and
add
mov
xchg
mov
rclb
out
fists
sub
es
mov
add
mov
cs
aas
pop
jl
and
lahf
cltd
add
jbe
stos
mov
loopne
cld
daa
xor
mov
sbb
in
add
xor
xor
add
pop
and
inc
outsb
insl
out
lret
flds
and
xchg
pop
add
xor
push
jl
xor
dec
mov
jecxz
jecxz
sbb
outsb
mov
jno
insb
out
inc
push
test
mov
out
sbb
imul
jnp
push
inc
mov
in
je
mov
adc
test
rolb
inc
sbb
jg
mov
pushf
lret
pop
mov
mov
shr
fisubl
and
push
mov
mov
clc
cwtl
aas
push
fmuls
subl
fstpt
loop
mov
mov
push
clc
je
push
mov
add
mov
fbld
add
dec
jmp
and
cmp
xor
inc
gs
pop
imul
jno
cmpl
adc
jl
mov
mov
add
pop
sub
outsl
xor
or
dec
mov
fsubrl
inc
sub
pop
fsubrl
adc
fldcw
and
push
cs
ficoms
cmpl
subb
jl
jecxz
stos
push
out
pop
movsl
xchg
movsl
loop
aas
into
out
sbb
inc
inc
cmpsb
jmp
in
push
mov
cmp
cltd
shll
insb
xchg
mov
daa
cs
lea
gs
sub
pop
sbb
std
enter
lock
push
fwait
in
orl
mov
add
sbb
or
movsl
lret
dec
xchg
movsb
push
sub
pushl
add
pop
les
into
xchg
aas
sub
add
inc
iret
adcb
test
push
stos
cmpsb
add
lret
xor
in
adc
int3
mov
loope
stos
and
insl
decb
mov
fldl
arpl
insb
sti
or
and
adcl
sahf
out
repz
push
mov
sbb
push
mov
call
mov
add
mov
fnstcw
enter
mov
lcall
sbb
inc
testl
inc
jno
mov
xchg
push
lea
pop
mov
cmp
scas
je
dec
cmpsb
pusha
cmp
jl
dec
inc
movsl
adc
adc
ficompl
xchg
mov
bound
inc
rep
add
xchg
ret
sbb
jbe
mov
les
mov
mov
subl
dec
sbb
push
or
ret
mov
test
pop
jae
xor
or
push
push
outsb
push
std
mov
aad
imul
lods
scas
imul
add
stc
les
loop
mov
das
or
int3
repz
ret
out
das
xchg
xchg
add
notl
lcall
push
maskmovq
idivl
out
inc
cmp
push
fs
push
adc
pop
cmp
popf
cmc
dec
ret
pusha
inc
sbb
mov
jg
js
push
roll
sbb
aas
adc
data16
jg
fsubrp
or
enter
lret
dec
out
fbstp
jmp
and
dec
and
adc
call
adc
jp
ljmp
aad
roll
imull
aam
mov
mov
imul
mov
push
lcall
divl
adc
mov
cmp
insb
jbe
push
pop
sbb
test
call
stc
and
out
xchg
test
inc
xchg
lds
ficoms
xor
rcrb
cmpsb
push
adcb
xchg
mov
xchg
xchg
push
arpl
xor
mov
mov
scas
pop
mov
negl
or
idiv
pop
dec
xchg
lcall
dec
jns
pop
loop
pop
cmpsl
scas
cmp
jle
aas
push
xchg
sbb
dec
out
sarb
enter
mov
xchg
test
int3
jne
xchg
rorl
adc
scas
ret
add
lea
test
icebp
fs
lock
xchg
cs
mov
pop
push
into
idivb
stos
clc
and
fisttpl
pop
call
dec
aas
popf
ss
jg
pushf
inc
push
test
xor
mov
sahf
ds
lock
vpcmpgtb
loopne
fildl
addb
mov
sbb
fwait
js
jl
scas
mov
cmc
in
xor
add
mov
mov
and
inc
test
mov
test
out
loope
mov
fisubl
cmp
jne
xchg
mov
cmpsb
xor
cltd
push
mov
lock
shlb
mov
xchg
sub
cmp
pop
jbe
mov
cmp
sub
in
and
inc
push
daa
mov
lahf
iret
addr16
push
iret
xchg
sub
mov
popf
mov
xchg
xchg
mov
pop
testb
cmp
aaa
sbb
enter
es
clc
int
xchg
jecxz
in
and
jne
out
xor
repnz
enter
adc
ficompl
xor
push
cmpsl
in
pop
lcall
and
add
stos
mov
add
sarl
scas
sbb
ror
pop
and
clc
sub
pop
repz
dec
movsl
push
out
jge
arpl
sbb
inc
idivb
jae
inc
cli
test
in
pushf
xor
sbb
xchg
or
scas
sub
xchg
pop
mov
fmull
clc
pop
shrb
mov
mov
lret
adc
adc
pop
dec
je
sbb
movsb
mov
jmp
clc
push
test
js
xor
in
imull
or
in
hlt
pushf
aaa
test
mov
mov
adc
aad
mov
out
adc
cmp
xor
aam
les
xchg
and
adc
add
je
fs
push
repz
jecxz
adc
hlt
push
in
aam
les
xchg
and
adc
add
je
fs
push
repz
jecxz
adc
adc
test
je
in
aam
inc
arpl
and
adc
add
je
fs
push
repz
jecxz
adc
hlt
push
in
aam
les
mov
pop
adc
and
xor
sub
arpl
push
loope
icebp
sub
push
cld
xor
insb
mov
je
push
shll
popa
mov
jecxz
xchg
and
shll
inc
icebp
xor
add
stc
dec
jecxz
mov
add
jae
adc
fdivrs
dec
stc
pop
jmp
or
call
add
dec
out
gs
ljmp
test
push
and
pop
or
das
jb
stc
pop
lcall
out
pop
push
call
fsubl
pop
lret
mov
into
mov
popa
hlt
dec
jg
push
leave
pop
arpl
jge
and
icebp
inc
sbb
orl
mov
test
and
lahf
jae
mov
enter
ss
mov
lahf
cld
ss
push
xchg
inc
pushf
or
aaa
test
jecxz
add
sbb
cltd
ret
enter
add
jb
mov
arpl
mov
test
repz
sbb
sub
ret
sub
aaa
mov
arpl
push
clc
push
icebp
and
sbb
lret
js
push
xchg
cmp
mov
push
orl
int
aam
jecxz,pn
mov
fs
adc
dec
out
jae
arpl
inc
orl
icebp
xor
mov
jno
adc
inc
addl
push
shll
test
dec
mov
xchg
adc
jecxz
shll
jno
add
xor
arpl
push
loope
icebp
xor
add
shll
jno
add
xor
mov
repz
pfcmpge
lods
sub
lock
sahf
insb
cs
cmpsb
popa
aam
dec
shlb
mov
icebp
cld
mov
xor
pop
ss
mov
ljmp
call
cmp
test
cmp
fnstcw
pop
nop
fbld
into
adc
shll
stos
addr16
add
sbb
inc
aam
test
and
sbb
pop
xor
in
std
mov
xor
add
loopne
stc
or
sub
fbstp
mov
push
pop
dec
cmp
jne
cmp
lods
mov
adcl
cltd
mov
or
pop
data16
into
pop
rcrb
and
out
jae
jle
loopne
outsl
clc
xchg
push
js
pop
xor
out
sbb
movsb
lahf
out
ljmp
mov
inc
jge
leave
test
jle
lods
and
cltd
dec
out
cmp
out
xor
push
jbe
lahf
pop
js
test
or
aaa
lods
mov
clc
jg
jno
push
sahf
and
xchg
lret
add
pop
sbb
xchg
dec
test
in
and
cltd
sub
sti
cs
loope
call
rcrl
add
or
push
xor
nop
sub
cmpl
cmp
xchg
and
mov
enter
xchg
dec
cltd
ret
scas
lret
xchg
xor
out
jge
jle
xchg
outsb
lods
push
pusha
xor
pusha
aam
push
mov
dec
data16
mov
cmp
cltd
mov
jle
lock
push
xor
dec
jl
jo
xchg
lea
cmp
pop
push
leave
and
das
dec
xor
out
je
jo
fucomi
sbb
adc
gs
lret
pop
inc
and
and
push
push
push
ja
and
dec
dec
mov
stos
mov
push
enter
es
data16
lret
ret
lds
add
mov
xchg
lret
gs
cwtl
mov
test
mov
jns
xchg
fwait
scas
mov
inc
sbb
test
lds
and
mov
mov
xor
fwait
sbb
add
pop
mov
jns
repnz
stc
push
mov
adcb
mov
pop
lods
jnp
dec
int3
inc
mov
stos
outsb
int3
jae
mov
sub
lret
xchg
mov
mov
adc
cmp
sarl
cmp
dec
mov
dec
fnop
rcrl
mov
idivb
jg
mov
add
lret
xor
xor
scas
xchg
xchg
adc
cmp
fiadds
movsl
popa
gs
in
pop
xor
jmp
cmpl
mov
rcr
fcmovne
xchg
arpl
jo
ds
ljmp
mov
lahf
in
mov
mov
push
mov
sti
mov
mov
fcomp
daa
cmp
xchg
adc
push
push
xchg
sub
jo
test
cmpsl
and
xor
cmpsl
pop
mov
call
fimull
ljmp
xchg
lds
cmp
push
push
jmp
push
cmp
push
mov
adc
ja
loopne
jb
jmp
add
sti
push
sub
nop
lcall
mov
mov
xchg
push
add
xchg
cmp
ret
daa
enter
movsb
into
ficoml
inc
in
enter
cmp
or
inc
adc
std
mov
ljmp
xor
sub
mov
sub
mov
jle
ds
jmp
sub
mov
adc
fstps
ds
xor
mov
xor
xor
cmpl
cmc
orl
adc
cmp
shll
mov
inc
xor
movsl
and
repnz
ja
adc
sub
pop
dec
push
pop
and
xor
xor
sarl
cmpb
mov
and
mov
lcall
push
cmc
pop
lods
add
push
mov
mov
inc
lods
ds
gs
push
mov
bound
cmpsl
dec
sbb
negb
ljmp
inc
lret
inc
nop
mov
pop
fcmovnbe
sbb
xor
cmpsb
and
fstps
inc
incb
mov
push
stos
xchg
fistps
in
jp,pn
mov
dec
stc
mov
jne
xchg
test
mov
lret
cmp
sbb
and
sub
fwait
inc
in
int
xlat
mov
arpl
fstpl
push
scas
sub
adc
pop
test
sbb
leave
fadds
addl
and
cmp
hlt
enter
dec
insb
sti
add
movsl
mov
test
rol
repnz
js
push
or
jb,pt
xlat
jmp
push
push
sub
stc
repz
cmp
arpl
dec
sbb
push
inc
pop
rolb
mov
push
pop
sub
je
ret
jmp
popf
add
imulb
sub
pushf
mov
movsb
add
mov
movsb
pushf
je
adc
sub
shl
mov
in
stos
push
xor
cltd
add
mov
lret
rclb
fucomip
cmpsl
or
dec
cli
xchg
jbe
xchg
in
xor
cmp
int3
mov
sbb
mov
cmp
mov
adc
sbb
ss
stc
mov
and
and
ret
jecxz
adc
fdivr
lret
adc
mov
sub
loop
cmp
jmp
sub
pop
and
in
mov
xorl
sti
andb
mov
repnz
inc
arpl
xchg
call
or
in
cmp
test
xor
mov
cli
movsb
and
mov
xchg
mov
add
call
add
xchg
stc
push
out
cwtl
std
fidivrs
mov
xlat
ss
mov
and
cmp
ds
stos
pop
in
jecxz
cmp
xor
lret
jae
rorl
fiadds
xchg
mov
dec
push
jle
jle
fisubrl
nop
add
sub
push
inc
ret
aaa
imul
fldt
xor
xchg
mov
jae
jmp
inc
xlat
cmp
push
popf
cmpsl
sub
fs
test
mov
push
in
and
mov
fwait
or
js
in
jge
enter
mov
cli
inc
movsb
adc
jp
jmp
jns
add
inc
inc
addb
mov
sahf
movsb
adc
iret
pop
xor
mov
xchg
int
ret
adc
enter
push
movsb
push
mov
jno
push
pop
cmc
es
and
mov
xchg
pop
push
push
loope
icebp
jg
mov
pop
notb
add
mov
lret
sbb
roll
imul
inc
pop
rol
and
push
sub
sub
cmp
repnz
xchg
and
sar
sahf
mov
mov
iret
mov
ja
cmp
ja
sub
jmp
push
mov
sub
mov
mov
cmp
mov
fsub
andb
roll
clc
ds
cmp
jnp
adc
jb
mull
or
inc
mov
nop
jl
jne
mov
push
ret
fwait
lock
test
xor
mov
out
inc
leave
sbb
and
mov
cltd
mov
push
lock
popa
mov
xor
xchg
add
das
fwait
mov
mov
cmp
gs
jmp
loope
out
je
mov
dec
fiadds
stos
lret
pop
scas
push
aam
xor
loop
fisubrl
mov
dec
sbb
xchg
ret
out
je
cmp
xchg
pop
mov
jae
pop
sub
not
fisubrl
pop
inc
addl
add
mov
xorb
jp
hlt
stos
sub
ret
xchg
add
add
aad
shr
call
movsb
and
xor
push
xor
hlt
add
pop
cmc
or
cli
mov
out
aam
cmp
adc
or
cltd
ja
mov
and
mov
and
jl
int
pop
jmp
and
clc
jns
jmp
add
orb
je
popa
fmull
xlat
xlat
dec
int3
cmc
mov
ja
lods
mov
fwait
mov
stc
mov
data16
jl
clc
sub
pop
in
mov
mov
mov
jmp
mov
popf
sub
shll
leave
cli
imul
in
leave
lock
inc
fimuls
push
mov
inc
push
pop
mov
loope
dec
dec
mov
std
dec
jno
mov
push
scas
dec
xor
jae
xor
ret
ficompl
pop
jecxz
adc
dec
dec
ret
adc
aas
sti
clc
sub
out
push
scas
test
mov
add
and
dec
shll
jbe
out
jg
in
and
ret
test
push
pop
insl
dec
mov
cmp
int
sub
cmp
pop
pop
jne
sbb
adc
jno
sbb
fisubrl
loopne
pushf
add
pop
fidivrs
stc
adc
sub
cld
dec
out
cltd
and
adc
lods
fs
ss
jbe
inc
cmp
ficomps
jecxz
and
fiaddl
pop
mov
stos
popa
mov
adc
fincstp
push
stc
add
aas
dec
jbe
les
mov
fdivrs
mov
jge
sub
bound
mov
je
and
das
lods
hlt
les
jno
fwait
jo
dec
pop
push
mov
inc
dec
in
leave
sub
pushf
mul
mov
dec
xchg
in
mov
daa
sti
push
das
mov
jge
test
or
xor
sbb
mov
test
in
mov
dec
sub
and
inc
sub
mov
test
pop
mov
mov
or
daa
int3
adc
mov
in
mov
in
addl
dec
xlat
mov
inc
sbb
popf
dec
into
inc
inc
inc
aam
inc
int
or
add
push
rcll
sbb
mov
dec
mov
cs
pop
clc
sub
cmp
mov
pop
push
adc
mov
xor
decb
pop
pop
dec
fistpl
iret
xchg
pusha
dec
in
push
xor
add
notb
cli
test
mov
lret
xchg
cld
aaa
adc
adc
inc
fwait
jae
addr16
stos
adc
and
fs
js
and
leave
outsb
push
int
sarl
in
mov
or
jecxz
sahf
and
mov
adc
jns
loope
sub
xor
fwait
pop
cmpsl
frstor
fnstcw
jb
push
pusha
leave
aas
dec
dec
mov
cld
pop
loope
mov
icebp
push
fcmovne
cmp
scas
mov
push
dec
jno
add
xchg
mov
lods
jns
cmp
and
jg
adc
rorb
lfs
pop
fidivl
inc
mov
xchg
icebp
lds
mov
or
movl
in
mov
adc
cltd
inc
popf
loop
cmpsl
inc
ss
lret
ljmp
mov
ja
lds
mov
or
add
adc
sbb
icebp
outsl
xchg
jb
xchg
ret
jno
pop
jnp
fstpt
and
cmp
xor
sub
dec
mov
push
lret
jo
push
aam
out
lock
jl
ljmp
or
movsb
into
push
inc
dec
cwtl
aaa
push
mov
push
cmp
lcall
fistpll
fisubrl
or
mov
iret
sahf
push
cmp
jns
shll
loopne
dec
mov
dec
jmp
rcrl
clc
hlt
xor
and
xor
das
mov
sbb
aas
mov
jb
push
sub
dec
or
pop
rolb
outsb
loopne
xchg
pop
addr16
mov
lahf
push
mov
pop
in
mov
inc
movsl
xor
ljmp
and
adc
sub
in
popa
mov
push
sub
mov
imul
js
fistpll
jno
cld
mov
scas
mov
mov
cmpl
loope
mov
push
push
popf
lcall
test
sub
icebp
popa
in
sbb
int
sahf
push
bound
cwtl
xor
push
mov
adc
push
out
das
cmp
test
adc
mov
dec
push
sub
jns
pop
and
push
rcr
mov
clc
add
pop
lds
or
in
jnp
rol
ss
movsb
xorl
mov
fs
dec
jle
xchg
in
cmp
add
repnz
pop
push
jl
xor
les
mov
xchg
adc
add
fcmovb
sbb
add
sub
inc
or
mov
mov
outsb
mov
lahf
and
daa
and
or
int
dec
stc
int3
flds
pop
in
enter
negb
jb
cld
lcall
pinsrw
jb
adc
test
sub
aaa
sti
or
aas
pusha
js
call
mov
out
nop
mov
out
xchg
jno
movsl
addr16
lahf
andb
out
mov
inc
aas
xor
lcall
aas
mov
dec
jmp
out
out
das
jmp
sub
lds
add
popa
push
add
sbb
sub
cmp
mov
mov
test
push
add
fcoms
cs
pop
hlt
xor
ds
gs
fwait
xor
push
fdivp
xor
loop
ffree
xchg
cmc
or
or
loopne
pop
and
mov
test
pop
dec
xchg
movb
cmp
mov
xchg
enter
mov
out
mov
xor
cmp
xchg
cvtpi2ps
cmp
cmp
mov
push
repnz
ja
js
mov
push
and
mov
jle
aas
jl
jo
repz
stos
into
push
sbb
jns
decb
mov
idiv
push
test
outsb
mov
push
cmp
mov
jo
add
and
mov
arpl
jb
xor
pop
xchg
outsb
pop
pop
xor
in
dec
or
mov
jbe
push
or
ss
mov
mov
fs
push
out
xor
mov
leave
ret
mov
and
adc
movsb
push
dec
fs
and
adc
inc
dec
test
call
repz
ret
sub
popl
cmp
je
cmp
add
xsha256
cmpsb
xchg
leave
cmp
adc
rcrb
lcall
outsl
inc
xor
mov
rorb
xlat
push
dec
gs
sbbb
and
aas
out
xor
loope
sahf
sbb
jle
mov
jecxz
mov
stc
adc
push
fs
xchg
scas
cmp
cmp
push
and
fnstsw
js
aam
dec
xlat
and
loopne
push
and
in
xor
lret
mov
mov
popa
mov
jp
in
leave
sub
shrb
test
and
outsb
stos
adc
fs
push
stos
roll
xchg
cmp
mov
dec
add
jg
dec
or
das
cmp
enter
dec
in
mov
mov
pop
out
push
adc
cvtdq2ps
xor
add
sub
sahf
push
sbb
mov
out
rcr
mov
addb
mov
pop
mov
mov
inc
cmp
sbb
mull
loope
push
stc
dec
movsb
pop
xchg
fmul
xor
inc
push
inc
xchg
inc
lahf
mov
lcall
imul
dec
ss
sbb
dec
les
cmp
fmull
jmp
loop
and
stos
cltd
xchg
xor
inc
sub
mov
stos
popa
xlat
repnz
rorl
inc
push
lahf
lret
lea
stos
cmp
jg
mov
jbe
outsl
dec
xchg
repz
jo
out
insl
sbb
out
fisubrl
jp
mov
sub
cmp
jl
ret
shufps
or
neg
adc
fldt
jo
push
out
aam
les
pcmpgtb
mov
push
movsl
daa
adc
movsb
and
mov
cmp
fstps
adc
cmpsb
int3
push
cmpsb
jbe
xor
dec
push
fsubl
sti
mov
rsqrtps
sub
mov
pop
adcb
xchg
sbb
mov
testb
enter
add
ljmp
adcb
pop
xor
fsubs
es
rcll
add
sub
hlt
pop
pusha
rcll
jl
nop
or
ja
lret
cwtl
add
into
push
jmp
cmp
aas
jl
inc
jg
inc
push
cs
push
push
dec
lahf
loope
clc
rcrb
imul
dec
push
push
imul
fmuls
loop
push
in
cld
mov
jno
sbb
mov
sub
push
mov
insb
or
inc
lea
mov
outsl
mov
push
mov
loop
jmp
outsl
clc
or
andb
xchg
test
insb
jecxz
rcll
pushf
mov
out
dec
leave
mov
push
pop
add
rol
jp
lahf
sub
mov
ret
inc
jno
xchg
iret
or
lret
rolb
bsr
pushf
adcb
incb
inc
push
iret
or
lock
push
or
inc
adc
mov
cmp
sub
jae
dec
popa
enter
mov
cmp
jl
mov
push
imul
mov
out
je
inc
dec
lock
inc
push
fucomp
out
movsl
push
aad
out
sub
arpl
scas
pop
pop
xlat
xchg
ljmp
mov
xor
pushl
lock
ds
sarl
divb
in
lock
loopne
xor
cmpsl
insl
push
ss
push
inc
mov
call
mov
leave
and
sub
xchg
push
mov
movsb
or
mov
pop
scas
sarb
in
inc
movsb
es
sbb
add
mov
sbb
stc
sbb
add
dec
inc
push
fisubrs
and
sub
mov
mov
bswap
or
mov
mov
lods
cmp
hlt
pop
fidivrl
addr16
pop
mov
in
mov
fst
inc
sarl
pop
xor
jnp
movsl
lods
inc
lret
mov
fidivs
jne
mov
jl
imul
aam
es
jnp
or
mov
ret
mov
cmpsb
lea
sarb
adcl
cs
sub
jp
push
jae
sahf
xchg
push
dec
xchg
adc
ja
out
and
sbbb
aam
push
xchg
lahf
jne
add
sahf
bound
jecxz
inc
mov
sub
pop
test
dec
je
mov
leave
xorb
cmp
mov
sarl
clc
daa
in
fimuls
xchg
jne,pt
mov
xor
outsb
cwtl
filds
aad
sbb
ret
xor
and
dec
xchg
mov
cmp
movsl
jge
xchg
js
aas
xchg
inc
pop
divl
sub
add
mov
push
jbe
or
gs
scas
in
mov
jns
fildll
imul
call
ud1
pop
inc
push
xor
sub
adc
mov
ds
adc
out
aam
pop
mov
push
andb
sahf
sub
fdivp
dec
pop
jo,pt
lret
and
mov
dec
sahf
mov
mov
jne
insl
addb
mov
pop
push
mov
stc
fdivrp
data16
mov
fsubl
inc
gs
adc
xchg
inc
sub
addr16
fisubrl
cmpsb
je
jmp
test
add
dec
hlt
cmpsl
cmp
xchg
jns
push
xor
lea
lahf
and
xor
and
inc
xchg
or
enter
push
cmp
sbb
push
jle
bound
lret
push
bound
inc
into
jae
int
aad
push
pop
arpl
rcl
jmp
notb
push
mov
inc
sub
xorw
xlat
and
xor
mov
int3
adc
cmc
mov
jg
dec
in
js
jmp
jmp
push
jecxz
inc
mov
int3
scas
fistl
es
dec
push
adc
cltd
fistl
jne
icebp
int3
fildll
sbb
lods
jmp
sahf
mov
dec
sub
repz
mov
je
add
inc
sub
test
movsb
jno
fs
call
add
sbb
sbb
outsl
mov
push
scas
dec
repz
ret
dec
fwait
stos
pop
dec
repnz
and
add
cmp
push
add
stos
aaa
cmc
ja
add
push
test
filds
repnz
je
icebp
cmp
gs
or
lret
and
sub
cmp
xchg
mov
mov
test
xchg
repz
inc
mov
adc
cwtl
xchg
sti
cltd
test
bound
push
sahf
or
enter
xor
lret
nop
mov
add
fstl
and
sub
shrl
and
repz
jecxz
shll
jno
add
xor
arpl
push
loope
icebp
xor
add
shll
jno
add
xor
arpl
push
loope
icebp
xor
add
xlat
popa
ret
jne
add
xor
gs
icebp
xor
xorl
sbb
jns
ret
push
les
jl
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
cmp
fwait
push
mov
enter
fnsave
add
add
add
add
movsb
add
add
add
add
dec
add
add
movsb
add
add
add
roll
inc
add
add
dec
add
add
push
add
add
add
add
addl
and
test
add
aas
add
add
add
add
add
add
add
movb
add
add
add
add
add
add
add
add
add
add
add
add
cmp
jno
movsl
add
add
add
ja
sbb
movsb
add
and
addl
pop
add
add
add
fildl
leave
add
jo
xchg
adc
lcall
add
add
add
add
stos
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
aas
add
add
add
dec
add
sub
iret
add
xor
mov
add
dec
add
add
add
add
dec
add
push
add
add
add
add
repnz
add
sbb
add
add
add
add
jbe
roll
aad
push
add
sbb
inc
add
jge
movsb
add
add
add
add
add
add
add
add
add
add
push
add
add
add
ret
add
add
add
add
add
add
mov
add
sbb
pop
add
dec
add
add
add
add
or
pop
add
add
add
nop
add
dec
add
add
add
add
add
dec
add
add
add
add
popf
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
das
add
add
add
add
add
add
add
add
add
add
add
adc
or
imul
add
add
add
xchg
add
add
add
add
add
add
add
addl
stos
add
dec
add
add
add
add
add
add
add
add
add
and
add
mov
add
add
arpl
or
add
add
add
add
jae
leave
add
add
add
int3
add
jno
enter
int3
add
add
add
leave
add
add
add
add
leave
add
add
add
add
pop
add
add
add
iret
add
add
add
cmp
adc
movsl
add
add
push
add
add
xor
or
add
add
push
add
push
add
jle
movsl
add
test
push
add
dec
add
add
add
inc
add
add
add
add
xchg
add
add
xor
aaa
add
je
sub
push
add
add
lret
das
in
cli
fcomip
out
inc
cmpsb
in
xchg
jnp
xor
mov
jno
dec
ret
add
loop
outsl
dec
xor
fcomip
daa
cmpb
or
pop
fwait
push
mov
xor
xchg
int3
mov
cmpsl
int3
adc
std
or
lea
sti
into
jg
stos
fmuls
push
orl
nop
adc
xor
cli
or
out
daa
pop
aas
faddl
and
lock
or
add
sti
mov
pop
mov
mov
pop
rcll
jae
xor
push
add
mov
pop
shl
scas
mov
push
add
movl
xor
pop
cmp
fdivr
pop
in
push
inc
cwtl
mov
ds
std
jg
movsl
fstps
pop
div
in
push
push
je
mov
int
roll
xor
pop
jbe
int3
mov
mov
pop
in
push
inc
mov
sbb
fs
push
aas
mov
adc
push
mov
jnp
je
inc
lcall
ret
dec
jge
push
or
sbb
and
and
lcall
mov
pop
dec
test
repnz
inc
jmp
jge
out
mov
arpl
addr16
xchg
loop
or
es
push
xor
xor
dec
hlt
subb
pusha
xor
frstor
bound
jns
pop
lret
call
out
add
mov
shlb
pop
jae
neg
push
fistpll
push
les
add
xlat
push
pop
int
repz
outsb
cmpsl
jmp
lea
lret
and
or
ficoml
popf
ljmp
inc
adc
push
movl
xorl
test
ret
xchg
inc
mov
xchg
push
xchg
cmp
lcall
dec
sbb
sarl
add
clc
bound
stos
adc
loope
xchg
xchg
lret
dec
mov
test
cli
adc
mov
xchg
lret
mov
ljmp
inc
lret
je
imul
lahf
repz
inc
outsb
sbb
cmpl
test
in
push
xchg
cld
insl
lcall
subl
xor
scas
push
mov
stos
mov
inc
mov
sub
cmp
movsl
sub
stos
or
or
and
dec
xor
rorb
pop
incl
cmp
imul
andb
or
lods
shll
sahf
out
cs
adc
outsb
lds
push
add
pop
lret
stos
ficoml
xor
adc
cltd
xchg
adc
pop
lods
pushf
gs
push
scas
repnz
mov
jno
mov
mov
sub
sub
inc
pop
push
clc
cmp
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
