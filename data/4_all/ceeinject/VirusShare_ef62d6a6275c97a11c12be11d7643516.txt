call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
ficoms
cmp
mov
mov
flds
push
and
sub
jae
arpl
fwait
call
mov
xor
mov
in
inc
push
and
inc
daa
cmp
arpl
dec
jp
clc
xor
xchg
mov
mov
sbb
inc
sub
pop
push
add
adc
shr
mov
lea
xchg
notl
ret
test
mov
push
mov
dec
push
inc
lahf
arpl
jmp
subl
ficoml
and
dec
sub
sti
repnz
xchg
ret
jmp
and
pop
sti
mov
xchg
fistl
push
in
std
int3
vpmullw
cmp
sub
call
shrb
loope
push
xchg
push
sub
jge
movsb
fisubrs
inc
data16
dec
push
std
jle
dec
fwait
arpl
mov
mov
stos
cwtl
sarl
push
push
mov
sbb
out
sub
loop
out
cmp
jbe
sbb
sti
adc
mov
inc
sub
or
mov
dec
iret
rcl
test
mov
loope
xchg
mov
xor
jbe
mov
int
mov
loope
std
jb
inc
cmp
cmp
dec
pop
dec
and
xchg
lods
or
mov
out
hlt
sub
dec
aas
and
je
imul
mov
xchg
int3
ret
mov
adc
js
dec
and
sub
jae
arpl
xchg
call
mov
mov
adc
js
dec
and
sub
jae
arpl
xchg
call
cld
hlt
lahf
xor
push
test
adc
cld
repnz
dec
shrb
sbb
shlb
dec
ja
leave
adc
js
das
into
mov
xlat
push
or
in
subb
in
cs
xchg
pop
lret
insb
jo
sbb
sbb
addr16
ljmp
sahf
pop
sub
rorb
jae
push
dec
push
test
aam
push
hlt
imul
out
jns
mov
sahf
sbb
popa
int
call
sbb
xchg
jno
mov
jb
cs
xlat
shl
ja
lods
sbb
xor
xlat
mov
pop
jno
in
lahf
dec
inc
push
dec
icebp
icebp
adc
mov
lret
cmp
or
addl
ja
mulb
mov
mov
in
popf
mov
cmp
scas
jp
dec
cmp
push
mov
adc
loop
mov
rcll
nop
sti
dec
xchg
jmp
shl
pushw
mov
popa
dec
mov
aad
xchg
mov
lock
sarl
adc
outsb
xchg
or
xor
stc
pop
inc
rclb
xchg
leave
dec
cmp
dec
mov
in
mov
pop
xchg
clc
enter
loop
xchg
cmp
xor
mov
rolb
xchg
xor
push
cmp
sub
repz
fdivl
mov
mov
imul
es
fwait
sar
mov
dec
mov
jae
cld
fstpt
popa
dec
or
cld
jmp
aam
rcrl
dec
aas
add
cmp
push
test
or
lock
loopne
xorl
roll
and
or
cmp
mull
jle
in
inc
xchg
out
xchg
mov
cltd
in
adc
jle
out
inc
enter
jmp
fdivp
std
pop
sbb
add
and
iret
cltd
or
in
mov
outsb
xchg
fisttpl
jl
insb
scas
cmp
push
dec
add
iret
mov
in
xchg
cmp
pop
mov
insb
sbb
adc
add
popa
mov
out
pop
add
int3
cwtl
lods
adc
push
cwtl
mov
fisubl
sub
mov
adc
xchg
push
jnp
lcall
xor
mov
pusha
inc
sbb
xchg
push
or
in
push
sbb
push
mov
mov
in
outsl
sar
cmpsl
mov
cmp
icebp
cmovge
and
sbb
insb
inc
lahf
push
in
test
mov
pop
shll
int
stos
jg
lock
push
and
jle
adc
out
xchg
add
xchg
push
icebp
pop
pop
push
fdivrs
adcb
cltd
push
sub
in
movaps
jnp
mov
stc
ljmp
into
lods
adc
pop
dec
psraw
out
repz
mov
or
mov
xor
add
add
test
or
mov
out
out
cmp
jg
icebp
sti
jge
test
mov
ja
pop
in
xchg
ret
jno
push
add
mov
sti
cmpsb
mov
or
js
movsl
sti
inc
cli
sbb
mov
nop
and
enter
insl
sub
mov
testl
divl
inc
iret
pop
bnd
xchg
and
dec
outsl
repz
sbb
mov
pop
xchg
lods
pop
jne
jg
sbb
jle
push
pushf
addb
leave
gs
xchg
push
divl
aas
add
dec
out
or
jnp
cli
insb
cmp
or
sarl
ljmp
mov
fildl
hlt
std
arpl
inc
cmp
mov
lcall
addr16
mov
aam
movsl
xchg
aam
shr
lcall
inc
or
loopne
mov
adc
stos
cmp
mov
fst
pusha
inc
push
ljmp
out
cs
loopne
pop
shll
in
cs
push
insb
mov
nop
jmp
bound
mov
inc
cmpsl
dec
lea
fucomp
je
mov
xchg
and
out
insl
stos
sub
fadds
sub
out
mov
inc
pop
stos
xor
imul
sbb
push
push
or
xor
je
jp
imul
xor
repz
shrb
ret
xor
insl
inc
fdivrs
dec
push
mov
xchg
fidivrs
cmpsl
in
scas
loop
shlb
or
push
cmp
data16
out
test
inc
gs
xlat
xchg
mov
add
dec
stc
push
cmpsb
push
jne
in
pop
call
imull
jnp
test
xlat
lret
call
mov
gs
in
lods
xor
jne
jnp
adc
pop
mov
lds
jl
out
inc
stos
push
or
mov
or
sbb
or
jns
inc
std
xchg
xor
adc
ja
outsb
pop
les
xchg
cwtl
sbb
orl
minps
sahf
sbb
loop
dec
outsb
cmpsb
cmc
sub
ficoml
push
popl
cmp
push
dec
scas
jae
jns
push
arpl
dec
or
dec
inc
mov
ret
into
adc
add
mov
mov
inc
xlat
cmp
jns
jno
daa
or
test
fs
cli
lret
or
mov
cltd
loopne
icebp
movsl
ljmp
pop
and
in
ret
arpl
ror
lods
rclb
inc
pop
popa
lcall
mov
sahf
jae
add
dec
insl
and
ret
adc
cs
sti
push
pop
pop
push
int
stc
test
add
jle
ret
cltd
xchg
mov
jmp
out
test
push
std
mov
mov
js
sbbl
sub
mov
stos
fs
add
push
outsb
push
call
mov
pop
xor
push
ljmp
lret
aad
inc
push
jo
push
sti
ss
push
sub
ljmp
add
int
dec
loop
cmp
mov
test
enter
dec
inc
jo
shrl
fdivrs
out
xorb
data16
sub
popf
push
jo
ds
push
mov
iret
out
sub
fsubrl
inc
mov
push
adc
and
pusha
sub
out
mov
add
xor
sbb
lods
or
mov
clc
pop
mov
push
insb
into
sub
outsl
xchg
push
cli
xor
xchg
or
push
and
add
mov
xor
fwait
movsl
and
inc
lret
inc
xchg
pop
and
sbb
adc
pop
shrb
shrb
pop
shl
aas
pop
lret
out
ret
shlb
fiadds
mov
clc
xor
jmp
into
inc
or
jae
jle
out
push
mov
pop
loope
int3
xor
or
sub
mov
lcall
pop
outsl
pop
and
into
loopne
jge
cmpb
cmp
cmp
daa
roll
sbb
push
stos
inc
dec
lcall
out
mov
sub
popf
mov
sub
cmc
enter
repz
mov
cmp
cmpsb
pop
xchg
faddp
insb
lret
ljmp
sarl
lret
jbe,pt
dec
test
lret
and
lret
xchg
ds
icebp
rcrl
add
ds
pusha
push
cmpsb
and
lods
mull
push
clc
aam
sub
dec
push
jecxz
mov
mov
and
std
cmp
mov
outsl
stos
es
fadds
sub
fists
je
cmp
ljmp
mov
bound
mov
insl
sarl
test
loop
leave
jne
stc
cmpsl
aas
add
adc
and
iret
cmpsb
pop
push
sub
and
outsb
push
inc
mov
inc
inc
fwait
push
sub
mov
es
cmpsb
pop
inc
xchg
or
fsts
mov
sub
xor
ja
sbb
lea
shlb
jl
std
iret
jmp
ret
dec
adc
xor
xor
xor
pop
jmp
dec
dec
ss
xchg
arpl
es
cmp
test
xchg
cld
rcr
fisttps
jo
fistpl
xlat
pop
cmp
fidivrl
xchg
push
shr
or
popf
pop
add
and
bound
fs
cmp
jbe
dec
dec
mov
push
call
add
adc
cmp
xor
inc
jae
push
mov
dec
shll
dec
insb
push
push
mov
mov
push
add
fsubl
ficompl
adc
add
and
hlt
out
loope
popa
mov
aaa
rorl
mov
insl
fistl
nop
int3
fimuls
cmpsb
cmp
dec
das
nop
jae
mov
pop
sahf
inc
pop
and
push
imulb
cwtl
leave
adc
xchg
and
sub
les
psrlq
sbb
dec
cmpl
and
imul
jb
fildll
faddl
mov
push
jae
jae
mov
adc
les
enter
xchg
in
cmp
scas
lods
fcmovnbe
fs
fsubrs
pop
movb
insb
cmp
sbb
loop
jmp
bound
fcompl
or
pop
add
xlat
xchg
sti
pop
adc
mov
bound
mov
fs
fimull
sub
inc
mov
loope
push
xor
pop
and
repnz
sub
arpl
insl
jmp
out
jae
push
sbb
mov
mov
ds
inc
loopne
mov
insl
xchg
cmp
or
mov
test
ret
sbb
sub
insb
shrl
cli
pop
dec
inc
cltd
xchg
enter
xchg
decb
cmpsb
mov
mov
lret
enter
dec
xor
fucomp
cmp
xchg
lret
adc
push
xchg
mov
mov
cmc
repz
dec
mov
js
popf
sub
cltd
shlb
ficomps
xchg
jmp
mov
add
and
hlt
nop
sub
push
jmp
push
pop
cld
inc
xchg
orl
cwtl
inc
out
dec
cmpsl
div
pop
mov
je
lret
cmpsb
mov
int
push
int
ret
lret
fwait
mov
jmp
lcall
movsb
leave
into
int
add
test
out
out
sbb
pusha
out
mov
add
pusha
je
inc
idivl
and
push
or
gs
incb
mov
cmp
mov
or
cmpsb
mov
xlat
mov
jle
stos
mulps
jo
dec
rcr
and
mov
push
stc
popa
mov
jmp
sbb
out
jns
add
or
push
cld
add
addr16
xchg
cmc
push
jbe
adc
fucom
mov
ljmp
fsubrs
in
mov
shr
push
or
and
cmp
stc
es
ja
or
add
lret
test
mov
sub
test
sahf
dec
mov
rcll
sbb
sarb
rolb
add
ret
cmp
mov
test
jmp
cmp
adc
dec
lea
cli
and
pop
ret
test
divl
or
xchg
pop
ds
jno
imul
lds
cmpsl
loope
mov
iret
jle
mov
ret
push
sahf
repnz
popa
aaa
sub
jno
inc
daa
mov
mov
lds
mov
adc
hlt
add
aas
jecxz
mov
pop
sbb
cld
inc
loope
cmp
dec
stc
cmpsl
sub
mov
xor
mov
sub
or
pop
xchg
shlb
mov
or
add
cmc
pop
push
inc
es
cmp
sbb
mov
imulb
pop
imul
xor
sahf
pop
clc
xchg
and
xchg
jnp
and
push
add
xchg
cmp
mov
out
and
mov
mov
xchg
outsl
icebp
xchg
ss
shlb
sbb
sub
jle
lcall
mov
mov
xchg
xor
bound
inc
insb
mov
icebp
mov
addr16
mov
mov
das
pshufw
jl
es
and
and
mov
repnz
popf
in
enter
sub
cmpsb
push
dec
gs
push
or
in
push
shll
xchg
cmp
add
xchg
add
adc
cmp
push
js
repz
sub
xchg
rcrl
jmp
mov
xor
xchg
mov
sbb
xchg
sub
shrb
dec
les
lea
cs
call
fbstp
xor
rcrl
mov
and
fsubrs
pop
iret
xchg
mov
sbb
mov
and
xchg
sbb
call
sti
test
mull
out
lcall
jno
jecxz
mov
icebp
xor
nop
fnsave
mov
mov
mov
mov
cmp
xor
mov
xor
rep
call
adc
daa
adc
mov
and
jle
xchg
push
movsl
dec
sbb
mov
psrlw
mov
push
aad
xor
mov
in
jge
and
lret
frstor
call
pop
push
xor
lcall
ljmp
dec
jns
repnz
dec
cli
lds
int3
mov
inc
mov
mov
pusha
jg
clc
std
inc
mov
pop
in
xor
sub
mov
sub
mov
mov
or
andl
pushf
and
mov
mov
jge
stos
sub
fdivl
push
js
xchg
pop
stos
js
xchg
mov
cli
and
push
push
cmc
andl
mov
sti
and
hlt
sti
loopne
inc
dec
xor
fwait
pop
add
cltd
jmp
stc
aas
ret
pop
inc
jle
out
aas
cli
out
iret
idiv
pop
addr16
sbb
add
inc
xor
sbb
aad
sub
add
in
mov
pop
or
xor
repz
xchg
pop
push
push
std
popf
movsb
scas
sbb
xor
mov
sbb
fisttps
mov
cmp
xor
xor
push
out
and
cltd
xchg
push
nop
mov
cwtl
push
and
xor
or
ds
mov
cmc
mov
cmc
sbb
xor
ljmp
mov
add
fists
pop
fildl
sbb
push
xchg
in
es
dec
fistpll
jb
or
push
cmp
xchg
mov
mov
lods
mov
js
push
daa
lods
push
sbb
dec
mov
pushf
test
movsb
and
mov
sbb
sbb
dec
ds
jb
inc
les
xchg
jge
fadds
aaa
in
xchg
cmp
nop
mov
inc
push
inc
xchg
sti
mov
les
xchg
dec
ret
ja
push
hlt
movsb
data16
sahf
mov
jnp
adc
dec
sbb
mov
or
pop
jne
mov
sub
jp
push
inc
pushf
fisttpl
sbb
cmp
and
add
adc
jno
dec
cmp
xchg
cmp
push
test
add
mov
mov
jno
lret
cmpsl
inc
cmp
mov
dec
sub
cmp
add
inc
repz
out
xchg
mov
cmp
adc
shr
inc
bound
in
pop
sbb
mov
in
addr16
popf
xchg
cmpsb
push
mov
add
loopne
mov
jae
cmp
es
adc
stc
sub
inc
inc
dec
enter
jbe
test
es
call
shlb
push
gs
fstpt
cs
int3
das
push
ficoms
cmp
sub
incl
jp
or
andl
in
mov
or
dec
fstpt
jb
int
sub
popf
push
dec
int
xchg
mov
or
jg
mov
inc
push
fucomi
cmp
and
sub
push
mov
or
cmp
xchg
lret
inc
hlt
xor
leave
ds
adc
fstpl
pop
jns
and
pop
xchg
scas
sbb
icebp
pop
sbb
ss
xchg
loop
hlt
aad
nop
lock
push
sbb
xchg
popf
cmp
pop
xor
push
outsb
pop
adc
push
adc
lret
icebp
jg
push
dec
in
je
or
imul
shrl
push
cmp
xlat
out
add
ret
and
xor
xor
out
mov
aas
pop
jne
xor
mov
mov
inc
sub
pop
aaa
lret
addr16
lods
pop
mov
test
std
mov
es
jl
and
bound
inc
jmp
movb
insl
cmp
out
aaa
in
addr16
or
pop
mov
pushl
and
mov
subl
push
mov
pop
fldln2
bound
sub
loopne
sahf
imul
jbe
jp
das
adc
fwait
mov
cmp
cmp
pop
cmpsl
fwait
fs
cltd
sbbb
pop
out
in
dec
out
std
outsb
or
insb
pushf
ret
mov
aaa
shlb
test
imul
mov
fmuls
sub
sbb
repz
jl
or
rorb
stc
lret
cwtl
and
ds
test
or
cli
mov
sahf
imul
nop
and
aad
pushf
loop
movsb
push
push
ror
pop
sub
xchg
imul
inc
pusha
adcb
push
add
je
mov
mov
push
lret
jns
cld
ret
push
pop
insb
cld
or
sub
int
and
incl
lea
fs
scas
outsb
test
sub
push
stos
pop
sub
lahf
ficoms
insb
out
insb
xchg
es
adc
jb
mov
mov
fs
mov
mov
pop
mov
mov
sbb
std
mov
jbe
pop
ret
popf
fbld
push
cmpsb
insb
push
cli
dec
call
add
outsl
mov
inc
int3
pop
xchg
mov
dec
cmc
inc
je
movsb
mov
push
mov
dec
ds
imul
mov
and
add
pop
out
sbb
mov
ja
cmc
sbb
mov
add
or
add
cmpsl
inc
movsl
xchg
daa
lahf
cld
or
mov
cld
pop
jno
xchg
sbbl
xchg
xchg
into
aaa
cwtl
mov
xchg
cmpl
jg
dec
pop
add
pop
out
cmp
ret
inc
cli
rcrl
pop
aad
and
push
nop
cmp
lahf
stos
clc
sub
xor
sub
sbb
cs
sarb
inc
pop
jge
mov
arpl
cmpsb
adc
cmp
jae
pop
xchg
outsl
jnp
inc
cmp
pusha
loopne
subl
cs
int
xchg
test
dec
cmpsb
jo
xchg
mov
xchg
ret
and
pop
sarl
add
adc
xor
lahf
fcoml
and
adc
cmp
adc
mov
lods
mov
jge
add
test
and
in
sarb
aas
cmpsl
mov
jmp
test
ja
lret
sahf
frstpm(287
mov
mov
sub
daa
mov
lahf
jmp
fistl
cli
stos
push
cli
cmpsb
sub
fidivrs
cmp
pop
cmpsb
sub
fcompl
in
das
cmc
sub
push
sub
lret
dec
sti
testl
push
and
dec
std
push
shrb
xor
sub
lea
bound
js
daa
scas
cmp
je
pushf
rcrb
adc
movq
adc
scas
icebp
fdivs
gs
xchg
in
push
push
xchg
shll
dec
pop
xor
leave
clc
jnp
and
add
or
mov
pop
push
cmp
out
mov
push
aas
aad
aad
cmc
mov
fs
xchg
inc
jb
sub
mov
and
jno
xchg
xchg
push
int3
sbb
jg
push
mov
sub
in
cmp
jp
xchg
in
and
outsl
mov
and
sbb
mov
notl
mov
adc
mov
xor
push
pop
aad
mov
nop
test
lahf
into
stos
lock
dec
push
adc
hlt
out
aaa
ljmp
and
cmpsl
mov
inc
sub
ljmp
mov
pop
jne
push
add
adc
dec
loop
dec
adc
aaa
cld
mov
call
mov
sbb
jo
leave
lods
xchg
cli
mov
out
ss
ds
sub
mov
repz
adc
repz
pop
cmp
push
test
aas
cltd
jmp
fs
add
clc
pusha
popf
call
jle
adc
aaa
stos
scas
dec
fmull
xchg
cltd
notb
sbb
mov
mov
fstpl
leave
jb
push
and
movl
dec
mov
xor
mov
adc
push
and
aas
jge
mov
dec
andl
mov
adc
xor
pop
jb
rol
cmp
std
mov
nop
add
xchg
leave
outsb
out
fdivrp
lahf
xchg
xchg
fcomp
or
sub
aam
in
pop
popa
sub
or
pop
movsb
mov
mov
adc
js
dec
and
sub
jae
arpl
xchg
call
mov
mov
adc
js
dec
and
sub
jae
arpl
xchg
call
mov
adc
mov
cwtl
pop
mov
js
dec
daa
pop
push
sub
ja
push
sbb
enter
test
mov
adc
and
and
lret
mov
pushf
out
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
out
lods
mov
mov
movsb
cli
jg
dec
sbb
das
insl
aas
repnz
pop
out
lods
mov
scas
in
mov
test
cmp
aas
jg
dec
pop
pop
out
mov
movsb
iret
xchg
filds
aad
outsl
sub
jno
inc
and
aas
jno
cmpsb
loope
int
call
mov
xor
or
movsb
xchg
das
testb
inc
aaa
cmp
push
test
imul
ret
loop
or
loope
pop
xor
mov
scas
repnz
jno
outsl
sub
xor
les
fistps
stos
repz
jb
into
scas
in
scas
in
jno
negl
int
ret
ret
nop
rcll
clc
lss
inc
movsl
jb
jmp
mov
sahf
mov
roll
movsb
mov
push
or
adc
leave
mov
pop
push
addr16
jo
adc
aas
inc
adc
loop
inc
ds
cmovg
mov
ljmp
scas
in
mov
les
jg
dec
adc
add
jne
xorps
pop
test
call
negb
inc
jnp
sub
xor
or
dec
and
in
les
bnd
mov
jge
push
push
imul
pop
sub
jmp
mov
jg
dec
or
aas
jge
dec
pop
pop
out
lods
mov
scas
in
mov
jg
dec
or
aas
jge
dec
pop
pop
out
lods
pop
scas
je
sti
lahf
jne
adc
add
rcr
or
mov
daa
out
jp
divb
inc
adc
gs
outsl
call
xchg
ljmp
inc
cltd
imul
stc
mov
mov
mov
adc
inc
out
add
mov
fyl2x
out
xchg
jb
and
lock
negl
or
aaa
inc
mov
out
ja
jp
pop
and
jno
cli
rcrl
fstps
and
push
mov
test
pop
popf
leave
xchg
jb
out
mov
in
mov
xchg
cmpb
jae
push
loope
jbe
jl
and
sub
int
pop
sbb
in
xor
shrb
adc
dec
add
mov
push
neg
jnp
mov
inc
sbbb
std
orb
add
mov
push
aam
jl
push
gs
iret
adc
data16
outsl
sbb
inc
xchg
xor
sbb
push
dec
hlt
xor
shrl
in
fidivs
rcrl
mov
outsb
adc
dec
cmp
adc
mov
fadd
cmp
inc
cltd
xchg
or
hlt
push
addl
jbe
mov
sbb
pop
inc
repnz
js
push
adc
jge
shr
jb
pop
les
inc
jne
das
adc
inc
mov
addr16
or
push
mov
aaa
ror
ds
out
shl
dec
movsl
pop
nop
aad
xchg
inc
shrl
int3
push
int
bound
negb
rclb
mov
int
movsl
outsb
cld
shrb
out
rcl
or
lcall
cld
fstps
in
cltd
cmp
and
or
mov
sbb
aaa
lods
out
test
pop
pop
inc
out
jecxz
outsb
dec
std
sub
mov
push
inc
cwtl
stc
das
ficoms
cbtw
cmp
sar
add
adc
insl
and
add
push
mov
enter
lret
sub
test
clc
inc
jle
add
mov
and
inc
xor
jbe
popa
ret
pop
xor
adc
cwtl
add
nop
and
test
push
add
xchg
pop
push
xor
pushf
and
sbb
int3
push
aas
ds
push
fsubrl
dec
clc
pop
test
push
in
cmp
mov
add
mov
sbb
arpl
add
jb
xchg
xchg
mov
xchg
lods
mov
xor
pop
test
sub
xlat
push
insl
or
fsubrs
jg
aas
cltd
loope
cmp
dec
mov
xchg
out
jle
jecxz
dec
enter
mov
fsubrs
fs
or
sub
sbb
xor
xchg
mov
hlt
add
popf
and
pop
mov
iret
cmc
in
xchg
gs
pop
dec
fwait
dec
sti
pushf
and
mov
xchg
mov
adc
scas
push
mov
cmp
push
jmp
sbb
add
xor
test
push
lds
std
or
outsb
cmp
out
jnp
adc
add
mov
outsb
inc
les
sbb
clc
in
aad
loopne
inc
sbb
jo
lret
test
jo
mov
jmp
les
repnz
cmc
cmp
pop
dec
insb
fisubs
xchg
testb
shrl
inc
pop
icebp
out
mov
imul
pop
jecxz
push
imul
jg
gs
cmp
into
add
sub
xor
inc
sti
jne
mov
cmpsl
and
mov
inc
or
xchg
xchg
into
arpl
sub
mov
cli
pop
jge
dec
cli
imul
leave
jmp
pop
imul
push
pop
in
lret
pop
stc
das
cmp
or
sub
clc
fcompl
mov
mov
push
xor
inc
xor
popa
dec
cmp
mov
imul
push
adc
add
inc
fldl
stos
ja
sub
cmpsl
movsl
mov
cmp
shlb
fs
aam
xor
or
ss
pusha
sbb
push
xchg
addr16
jle
aad
rol
mov
adc
daa
notl
in
stos
push
lahf
imul
push
pop
or
mov
push
cmp
aas
scas
pop
push
push
cmpsb
imul
push
xor
add
jne
dec
in
xchg
pushf
dec
sub
rclb
cmpsl
mov
pop
inc
pop
sti
cmp
fsubrl
hlt
xchg
pushf
add
scas
insb
lret
xor
or
or
out
and
xor
sbb
daa
xor
jnp
aaa
inc
xchg
jbe
xor
aas
loope
pop
jmp
sbb
imul
mov
in
nop
movsb
and
push
or
in
aas
dec
add
test
sti
jno
or
fisubl
lcall
lcall
into
push
ljmp
sub
fisttpl
jmp
cmp
mull
mov
lcall
jecxz
pop
pop
xchg
pmuludq
jg
xchg
or
pop
les
xlat
subb
jp
jl
test
mov
jae
jns
popl
mov
push
jge
dec
lcall
inc
mov
sbb
push
fucomp
mov
xchg
pop
xchg
cmpsb
rorb
xchg
or
gs
ds
fcmovnb
das
or
adc
push
push
int
jae
nop
hlt
push
xchg
adc
dec
inc
pop
arpl
pop
mov
add
xchg
push
jb
xlat
fsubs
stos
inc
adcl
clc
lahf
adc
call
mov
xchg
js
or
push
inc
in
mov
orb
pusha
xor
mov
bound
lret
jae
add
nop
mov
inc
test
insl
sti
stc
sbb
adc
fidivl
add
mov
jae
mov
rcrb
mov
imul
stos
bound
mov
cmp
outsb
dec
mov
cli
daa
mov
nop
ret
mov
add
out
outsb
cld
cmp
imul
add
xor
xchg
lcall
fsubr
das
loopne
xchg
jno
xor
mov
fs
pushf
inc
adc
pop
cli
leave
sub
lds
cld
jmp
lret
and
mov
mov
xchg
sbbb
das
mov
movsl
clc
lea
icebp
dec
sub
jp
imul
stos
inc
mov
pushf
jecxz
int3
mov
fmulp
pop
int3
ret
sbb
fcmovnb
inc
inc
xchg
js
movsl
es
flds
xchg
lock
push
ds
lods
cli
out
cmp
mov
sbb
pop
mov
call
cmp
push
les
imul
jne
push
xor
arpl
lret
jg
int3
stos
mov
jne
mov
mov
cmc
xor
add
xchg
jnp
lea
dec
fwait
fs
clc
mov
xor
sub
adc
test
leave
push
sub
stos
jbe
imul
jp
jbe
pop
lods
ds
jp
test
cmpsb
add
inc
shlb
movsb
stos
mov
outsb
jl
add
enter
jle
cld
repnz
fists
adc
jnp
daa
fs
int3
and
add
movsl
push
stc
inc
jmp
and
push
push
xchg
push
outsl
mov
sti
xchg
mov
adc
sti
dec
stc
js
negb
xor
stos
fwait
lods
jecxz
in
mov
and
sbb
daa
inc
or
lock
dec
jmp
out
cld
push
add
push
inc
mov
adc
scas
sbb
mov
movsl
xchg
insl
inc
inc
je
pop
dec
and
xchg
push
dec
jno
clc
arpl
mov
mov
rolb
mov
lret
test
pop
push
mov
out
cmp
push
test
das
push
test
xchg
jl
inc
adc
sub
sub
inc
dec
cmp
stc
sbb
mov
jo
push
shl
das
xor
fsubrs
inc
int3
int
jnp
dec
ds
xchg
fstpt
out
sbb
xchg
loope
pusha
popa
mov
outsl
test
es
nop
ret
xchg
xor
cmp
fistps
mov
std
out
mov
data16
stc
fistl
mov
outsb
xorb
mov
mov
jnp
mov
jmp
mov
inc
mov
push
popl
jecxz
lcall
je
push
lods
pushf
cltd
jmp
fwait
sub
lret
xlat
jmp
dec
push
adc
push
adcb
dec
xor
into
fwait
sarl
movsl
cmc
cs
pop
jno
les
cwtl
add
inc
addl
push
rcl
xor
aam
into
jne
enter
xchg
fcmovnb
mov
mov
push
aad
push
icebp
repz
mov
lcall
add
nop
pop
loopne
dec
fidivrl
pop
push
xchg
cmpsb
stos
mov
pop
adc
fstl
push
popf
movsb
ja
dec
addr16
dec
jge
add
or
loope
scas
fnstcw
test
fiadds
sbb
pop
mov
addr16
loope
dec
ror
pop
jo
add
xchg
pusha
stos
je
mov
add
xchg
or
jl
jbe
jne
cltd
cltd
and
xor
xchg
popf
mov
dec
adc
xor
lods
push
inc
adc
dec
mov
push
cs
sbbl
add
ret
fwait
xor
int3
cmp
xor
stc
xlat
imul
or
es
fwait
mov
imul
aas
loop
ret
cli
iret
sahf
insb
jl
pextrw
test
mov
mov
lods
or
insl
fwait
je
out
std
cld
mov
loopne
jb
clc
icebp
adc
push
xchg
sbb
lret
sbb
cltd
cli
push
xor
and
jns
les
repnz
jge
adc
cwtl
mov
roll
inc
out
lock
cltd
mull
add
add
or
inc
xor
cmpsl
loopne
pushf
pop
pop
std
out
cmpsl
fisubrl
cmpsl
mov
jge
scas
call
pop
mov
xor
mov
mov
xchg
mov
pop
insb
testb
pushf
pop
inc
jl
dec
es
insl
adc
xorl
adc
fsts
orb
lock
sub
sbb
lcall
cmp
dec
into
mov
push
scas
int3
call
test
cmpsl
addb
fwait
gs
icebp
test
les
out
mov
scas
and
push
das
es
cmp
scas
fiaddl
and
movsl
or
jb
xor
stos
lods
imul
mov
sbb
or
inc
adc
mov
fwait
enter
in
pop
push
insb
rorl
js
gs
adc
cmp
arpl
aad
out
push
cmp
lret
jg
or
test
pop
arpl
shll
jo
xor
sub
imul
and
dec
pop
mov
hlt
in
ds
dec
inc
loop
xchg
jg
push
movsl
jnp
je
addr16
dec
xchg
adc
jne
es
jp
xchg
pusha
lret
clc
push
sub
cs
mov
add
add
int
and
int
jge
jns
pop
cmp
clc
movsb
mov
mov
cli
std
sub
fs
adc
orb
dec
mov
dec
mov
xchg
sub
fisubs
dec
jne
pop
mov
inc
rol
xchg
push
xor
pop
subl
popa
mov
lret
lret
sahf
push
rcl
mov
push
dec
hlt
or
enter
repnz
cmp
jbe
test
sub
arpl
push
jmp
push
cmp
movsl
dec
out
push
jns
scas
and
imul
jae
sbb
cltd
dec
mov
push
dec
scas
lods
inc
int3
insb
inc
ficompl
xchg
jnp
mov
jmp
lret
mov
pause
daa
ja
sbb
add
xchg
sub
jo
push
xor
mov
pop
cmp
mov
xchg
mov
or
stc
or
mov
and
ss
sti
pop
in
das
mov
pop
cltd
nop
pop
stos
dec
push
mov
sti
xor
pop
arpl
xor
outsb
int
loopne
sbb
xchg
cwtl
adc
pop
in
push
dec
jecxz
pop
popa
fcmovu
loope
sub
fsubs
xchg
lea
and
push
adc
in
dec
sub
or
adc
mov
jp
stos
orl
sbb
push
jb
mov
out
mov
out
daa
or
push
rcll
in
addr16
dec
mov
add
sahf
std
push
ret
sahf
jl
add
pop
push
in
lahf
ds
leave
scas
pusha
cmp
pop
and
movsl
addb
pop
mov
inc
mov
push
out
mov
jne
xchg
cwtl
pop
xchg
lds
ds
lods
shll
add
pop
ret
push
pop
push
in
xchg
add
outsl
cmp
pop
repz
or
mov
mov
push
mov
enter
cmp
cmpsb
adc
shll
xchg
loope
mov
subb
jl
cmp
ret
test
stos
lcall
sbb
shrb
out
cltd
lock
xlat
adc
cli
mov
push
xor
pop
scas
dec
es
rorl
ljmp
dec
sub
cmp
push
add
or
aad
jge
hlt
fildll
fnstenv
jle
pop
mov
test
aam
push
mov
cmpsl
outsb
xchg
lret
jl
sarl
xor
insl
out
sub
push
int3
es
sub
push
cmp
or
adc
xchg
or
fs
dec
inc
pop
xor
cli
sbb
xchg
jb
scas
cmp
dec
cwtl
test
inc
stos
fimuls
mov
push
mov
sub
js
pop
in
int3
mov
js
sub
cwtl
dec
out
out
clc
test
sub
faddl
icebp
repnz
scas
sub
lret
jno
dec
jg
enter
sbb
adc
dec
jl
mov
cmc
mov
rcll
mov
aad
pop
subb
nop
and
inc
lret
addr16
xor
pop
add
lret
mov
inc
push
ljmp
mov
imul
scas
js
push
cwtl
stos
xchg
lret
add
jb
gs
jb
lcall
cmpsb
lods
mov
dec
enter
xchg
jns
sub
insl
and
adc
sub
dec
es
pop
mov
test
loop
inc
sub
pop
pop
ds
popf
add
insb
lds
shll
mov
xchg
jne
add
lds
pop
int
xchg
xor
sub
mov
and
shll
fadds
sub
call
push
icebp
and
pop
and
adc
arpl
xchg
mov
sub
ljmp
pop
lret
add
out
sahf
cmp
outsl
mov
mov
adc
inc
insl
out
push
out
cmpsb
jecxz
ffree
inc
adc
decb
pop
push
push
mov
push
mov
fcompl
imul
loope
in
sbb
and
js
pop
inc
inc
mov
or
jnp
push
in
inc
xchg
sub
in
inc
hlt
mov
add
rcrl
add
or
xor
and
enter
adc
push
push
mov
inc
jbe
cmp
jecxz
cmp
insl
jecxz
mov
push
lods
scas
loope
mov
stos
pop
orb
js
cmp
call
jmp
aad
and
mov
dec
fmull
incb
pop
push
sbb
scas
sbb
popf
mov
jg
and
in
mov
outsl
inc
scas
mov
dec
hlt
fwait
inc
add
call
dec
hlt
lods
jns
pop
sbb
inc
push
xchg
xorl
adc
ret
test
sti
jnp
inc
and
fldcw
and
stc
mov
cld
jl
pavgw
popf
cmp
sub
shrb
fidivrl
push
dec
or
mov
out
in
mov
idivl
mov
stc
mov
hlt
movsl
sbb
stc
cmp
mov
loopne
push
lahf
inc
mov
mov
test
jns
adc
xchg
mov
out
sub
loopne
cmpsb
or
push
or
cld
sahf
and
sub
jne
ljmp
imul
popl
mov
jne
add
stc
leave
push
mov
fcoms
scas
loope
sub
and
cld
sub
or
cs
rcll
adc
ljmp
ficomps
xor
out
xchg
push
adc
sbb
cs
add
in
sub
dec
xor
mov
movsl
mov
jge
movsw
sti
mov
fmull
mov
xchg
jb
call
xor
clc
lahf
out
push
sub
pop
xchg
fstpl
hlt
lret
mov
sbb
test
out
inc
lret
push
inc
or
jmp
or
ret
lcall
hlt
daa
mov
enter
add
rorb
xchg
cli
push
ret
notb
stos
inc
jmp
mulps
arpl
cwtl
xlat
ret
jmp
addr16
pop
lret
shrl
sbb
imul
fs
pushf
aad
movsb
imul
adc
addr16
in
mov
xchg
cmp
scas
push
inc
xor
cmp
and
cmp
cmp
test
int
push
push
daa
stos
push
pusha
popf
adc
pop
stc
mov
lods
pop
cmp
push
out
dec
push
cmp
mov
mov
pop
and
add
popf
sub
cmp
push
imul
jno
inc
in
inc
xchg
mov
ret
push
leave
inc
sub
cmp
inc
mov
mov
jmp
jnp
push
arpl
rol
mov
enter
or
lahf
test
fiadds
and
pop
insb
outsb
mov
push
jo
bound
rorb
or
pop
jns
mov
xor
jbe
sbb
pop
repz
imul
sbb
test
fnsave
enter
fisttpll
mov
je
adc
sbb
mov
and
mov
cmp
pop
push
test
cmp
fwait
js
std
add
aaa
ret
adc
xor
sbbb
loop,pt
scas
and
clc
je
fidivs
jmp
notl
test
dec
data16
push
aaa
pop
negl
adc
jle
clc
cmp
add
add
lahf
inc
sbb
xlat
add
popf
js
sahf
sbb
cmp
ret
popa
fnstsw
sub
xor
mov
repz
test
xchg
fiaddl
les
ljmp
cmpsl
jle
daa
push
movsb
loope
rcrl
out
dec
ret
insl
or
add
push
lahf
mov
sub
adcb
ret
pop
inc
ljmp
jne
xchg
insb
pop
mov
pop
and
fstps
ljmp
mov
ja
dec
inc
sbb
loope
ja
push
inc
mov
cld
dec
mov
sbb
mov
popf
add
mov
pop
aaa
shr
cmp
dec
lcall
cltd
pop
out
scas
and
cwtl
repnz
enter
clc
andl
icebp
jle
jb
xchg
sbb
sub
sbb
xor
scas
bound
scas
cmp
das
lods
add
adc
jbe
mov
rolb
adcb
ljmp
jecxz
cmp
addr16
inc
adc
lock
add
pusha
dec
dec
xchg
inc
jmp
or
testl
paddusw
xor
push
xor
stc
xchg
insb
inc
arpl
rcrb
push
stos
dec
mov
inc
push
push
les
push
pop
nop
dec
push
dec
sub
push
jno
in
push
push
mov
jecxz
jg
popf
mov
sahf
push
mov
cmp
add
cmp
xchg
mov
filds
arpl
jbe
cmp
pop
repz
mov
push
dec
push
and
dec
mov
push
dec
xor
sarl
inc
in
cmp
out
xchg
or
stos
test
xchg
xor
cmp
imul
mov
jo
or
icebp
movsb
xchg
dec
sbb
mov
xlat
jecxz
push
lcall
sbbb
and
lret
in
xchg
push
outsl
push
mov
shll
shrl
xchg
jl
push
ss
pop
xor
lods
or
mov
or
cmpsb
js
mov
dec
maskmovq
idivl
cmp
and
fcomp
fadds
sbb
push
ss
out
inc
outsb
test
push
jge
popf
sbb
cmp
cmp
pop
mov
sbb
in
or
add
ja
sbb
imul
cmp
dec
mov
inc
inc
and
add
mov
push
jns
jae
jp
mov
xchg
push
ja
std
fisubs
mov
pop
stos
js
popf
push
sub
js
popa
cs
sub
orb
std
int
jg
dec
or
aas
jge
dec
pop
pop
out
lods
mov
scas
in
mov
jg
dec
or
aas
jge
dec
pop
pop
out
lods
mov
scas
in
mov
jg
dec
or
aas
jge
dec
pop
pop
out
test
fistps
int
sbb
in
pop
push
in
add
xor
and
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
jbe,pt
and
adc
inc
lods
xor
jmp
outsl
mov
dec
pop
xchg
pop
subb
sahf
inc
out
xor
and
adc
sub
repnz
ficompl
ret
jle
dec
xchg
pop
subb
sahf
xor
add
push
sbb
xor
repnz
mov
loope
les
xor
fidivs
mov
daa
gs
in
ret
scas
jns
sbb
bound
scas
sbb
leave
sti
jno
mov
out
daa
icebp
test
pop
or
xchg
xchg
xchg
cmpsl
cmp
sub
mov
mov
fidivs
loop
pop
rep
repnz
shl
cmp
inc
mov
inc
imul
inc
out
rclb
cs
ja,pt
add
sub
sub
push
movsb
inc
lahf
mulb
into
rcr
incb
dec
mov
xor
xor
shll
add
sbb
bound
add
mov
xchg
test
fidivrl
dec
jle
call
mov
sahf
inc
out
xor
and
adc
nop
cs
push
rcrb
outsb
mov
dec
mov
fidivl
or
lods
xchg
fwait
dec
mov
inc
inc
mov
xchg
popa
ja
mov
and
sub
icebp
xor
and
and
mov
jo
jnp
xor
xchg
jbe
jnp
and
testl
in
ds
and
adc
add
repnz
rcrb
ret
jle
dec
xchg
pop
subb
sahf
inc
out
xor
and
adc
add
repnz
rcrb
ret
jle
dec
xchg
pop
subb
int3
lods
popf
push
cmc
sub
addr16
lea
push
outsl
push
sub
push
lret
dec
ja
and
scas
sarl
xchg
dec
stc
xchg
pusha
sbb
insb
stc
fs
sbb
dec
inc
push
xchg
leave
leave
or
adc
or
pushf
push
sbb
enter
push
data16
and
push
sbb
mov
push
jno
stos
mov
cltd
in
out
lret
cli
dec
add
and
jl
iret
push
mov
sbb
movsb
push
lret
lret
jae
mov
pop
jo
xor
aaa
xor
das
adc
leave
sti
pop
jno
pop
add
jg
inc
fstpl
dec
outsl
jne
jg
loope
mov
movsb
fcompl
jp
shll
add
dec
jl
aad
jbe
imul
iret
mov
adc
and
stos
or
xchg
lods
inc
adc
mov
fdivs
movsb
hlt
ret
pop
sbb
clc
in
push
imul
xchg
lret
gs
je
mov
div
flds
pop
loopne
jg
push
dec
ljmp
and
xchg
sbb
dec
loop
mov
xor
push
aaa
xchg
out
notb
sbb
pop
mov
lock
and
sbb
cmp
bound
in
cmp
mov
dec
jle
jmp
orb
mov
in
dec
xchg
aam
adc
shrd
rcrl
jle
pop
sub
and
scas
into
cmp
jns
sub
in
inc
cmpb
push
fnclex
adc
into
loopne
fisubs
xchg
cwtl
push
repnz
fisttps
cmp
das
mov
inc
mov
aas
cmpsl
ret
mov
sbb
nop
mov
push
pop
sub
inc
imul
test
pop
mov
sbb
js
xlat
test
stc
in
mov
leave
mov
int3
push
and
or
stc
mov
mov
jae
jb
sbb
jb
jb
sarb
aas
or
test
and
dec
int
or
xchg
into
jbe
pop
iret
mull
sub
sub
and
fst
pop
xchg
xor
cmpsl
add
jno
adc
push
mov
xchg
pop
shll
popa
andb
aad
mov
mov
cmp
jl
and
out
popa
pop
adc
dec
shr
push
bnd
xchg
or
cmc
cli
mov
adc
dec
movsl
push
repz
cmc
mov
or
and
mov
in
lods
inc
mov
mov
ja
js
cmpsl
lret
loop
mov
bound
insl
inc
cmp
pop
jo
dec
repz
push
gs
and
daa
mov
pusha
jno
push
test
mov
push
lcall
div
cmp
inc
ds
push
lods
arpl
leave
jle
call
jne
insl
dec
xlat
mov
stos
mov
cmp
movsb
gs
cld
iret
filds
jl
test
fbstp
shlb
mov
leave
xchg
in
mov
mov
mov
test
and
loop
hlt
mov
cmp
lods
sbb
rcrl
out
xor
stc
in
scas
addr16
movsl
pushf
dec
mov
arpl
adc
pop
mov
out
or
dec
sti
fst
or
pop
sub
jg
xor
jne
dec
xor
lds
push
mov
es
pop
pavgw
mov
cmpl
inc
jb
call
jg
out
sbb
add
mov
cmc
aad
insb
jbe
adc
mov
xchg
inc
test
in
or
ja
lds
inc
jge
lods
mov
push
and
je
mov
mov
ret
out
adc
fldcw
pop
mov
lods
add
sahf
arpl
out
pop
insl
add
nop
daa
jl
add
mov
xor
aaa
push
sub
faddp
lret
adc
push
jge
std
or
test
cwtl
ret
xchg
mov
xor
mov
mov
dec
orb
mov
push
lds
rcll
ljmp
xchg
lahf
in
mov
data16
or
out
sub
aam
repz
xchg
sub
jns
es
ret
lds
push
xchg
rclb
mov
pop
out
push
xlat
stos
out
and
insb
fcomps
cmc
data16
loop
inc
pop
std
dec
mul
stos
ss
scas
sub
popf
das
cs
out
add
or
rcl
cltd
fdivrs
push
stc
cmpsb
test
jb
scas
xchg
xor
adc
stc
int
pop
sti
xchg
clc
cmp
ret
outsl
xchg
xchg
push
mov
movsl
dec
mov
dec
pop
pop
cmp
aas
lock
or
aam
les
sbb
mov
push
test
xchg
lock
xlat
push
rcll
lcall
mov
mov
sub
imul
sti
call
aad
xor
imul
sti
je
shrl
loop
mov
insl
or
sbb
jg
push
mov
sbb
inc
add
and
xlat
mov
imul
out
or
arpl
xchg
imulb
aam
fsts
ret
dec
cmp
xorl
fisttps
sti
adc
js
push
faddl
mov
ljmp
mov
repnz
idivb
lods
lods
xchg
cmpsl
cmp
xchg
dec
jo
sub
mov
inc
pop
lcall
orb
je
loop
or
dec
js
sbb
das
sbb
movsl
pushf
mov
pushw
lods
xchg
xchg
mov
pop
cli
ja
js
xchg
xchg
push
sbb
inc
mov
mov
xor
push
push
shll
movsb
jne
mov
pop
push
sub
mov
jmp
pop
es
call
xchg
enter
xor
sub
push
mov
add
nop
test
xorl
out
cmp
gs
js
mov
xchg
mov
decl
cmp
pop
jo
jp
lds
jo
xor
cmpsl
cmpsb
sbb
cmc
sub
pushf
mov
ljmp
xor
add
mov
pop
les
popa
sbb
sbb
dec
sbb
and
and
mov
fldt
into
inc
dec
shll
cmp
jns
mov
push
dec
adc
je
imul
fmuls
bound
pop
cmp
pop
mov
xchg
jl
gs
xchg
cmpl
pop
pop
cmp
xchg
popa
mov
pop
stos
scas
mov
pop
cmc
aam
das
push
inc
adc
jnp
mov
and
and
jbe
push
mov
shlb
fisttpll
cmp
and
sbb
or
loop
dec
in
dec
xlat
clc
jno
mov
test
je
xchg
push
jp
inc
pop
lret
adc
adc
mov
pop
cmp
test
outsb
loop
xchg
pop
pusha
fs
add
dec
dec
pop
mov
fdecstp
or
pop
pop
mov
out
mov
repz
clc
inc
push
dec
or
pop
ret
arpl
inc
adc
imull
push
js
mov
inc
xchg
enter
and
negb
mov
lret
loop
xchg
sti
add
out
call
dec
mov
mov
push
mov
sub
and
flds
scas
sbb
std
inc
das
aaa
mov
mov
jns
lods
stos
aaa
cmp
test
and
add
outsl
cltd
xor
gs
jl
leave
cwtl
std
push
jecxz
dec
pop
outsl
std
mov
loopne
mov
xadd
mov
out
adc
add
jl
mov
xlat
orl
or
inc
dec
fcoms
and
lahf
outsb
xor
cmpsl
shlb
mov
sbb
sbb
faddl
lods
jno
ljmp
std
pop
mov
cwtl
pop
insb
lret
hlt
roll
andl
mov
mov
mov
inc
pop
cmp
jno
cs
sub
jg
divl
xor
adc
rolb
mov
jp,pt
test
cmc
adc
mov
dec
cmp
clc
mov
push
add
pop
lahf
or
shlb
iret
sbb
fstl
jae
cmp
sub
cmp
push
test
aam
mov
cmc
sub
arpl
and
mov
lds
popf
je
fisubrs
push
out
orb
inc
cmp
xor
or
adc
mov
inc
cmc
pop
repz
stos
xchg
add
in
addr16
ret
in
mov
pushf
xchg
movsl
mov
jo
js
loop
jge
imul
mov
sbb
mov
cwtl
mov
pop
aad
mov
inc
pop
jne
mov
push
lds
out
in
inc
push
sub
test
jb
std
test
xchg
adc
inc
scas
xchg
lret
cmp
xor
mov
mov
jae
sbb
mov
cmp
in
sub
test
dec
mov
pop
mov
outsl
adc
jmp
into
inc
inc
push
jnp
push
jb
cmp
in
jo
xchg
movsl
push
addr16
mov
mov
adc
jno
inc
mov
rol
jo
pushf
mov
push
adc
xchg
adc
test
in
or
cmp
add
mov
jp
jecxz
sbb
aam
mov
mov
sub
and
rcll
push
loop
dec
fs
or
stc
jle
insl
jmp
inc
enter
cmpb
loopne
test
xchg
das
test
call
mov
insb
sub
jns
adc
and
je
inc
mov
cmpsb
jmp
les
stos
out
inc
or
int3
push
jnp
das
xchg
mov
stos
mov
xorb
test
pushf
dec
xor
dec
shrl
pop
mov
out
andl
inc
lods
mov
ret
ja
mov
xchg
cwtl
and
and
scas
ja
test
mov
dec
pop
inc
xchg
loopne
loop
pop
sub
es
out
int3
mov
ret
xor
andb
xchg
mov
orl
cld
dec
mov
fidivrl
hlt
sahf
push
xlat
test
clc
xor
cmp
popf
pop
les
cmp
add
xor
jmp
jne
jl
push
fbstp
jno
adc
cmp
jne
cmp
mov
lcall
sub
ljmp
fstpt
push
push
push
mov
rolb
arpl
in
leave
call
enter
sub
add
pop
cmp
lds
xchg
push
jne
stos
into
cmp
mov
xchg
cltd
insl
in
pop
sbb
fcmovnb
out
icebp
xchg
lods
aam
in
mov
rcll
scas
or
aam
imul
jno
pop
mov
in
popf
push
jnp
in
or
addr16
sarl
add
jb
jns
pop
jp
std
and
int3
repnz
outsb
jp
mov
inc
lock
xor
cmp
leave
xlat
call
aam
nop
dec
jecxz
mov
or
mov
xor
xchg
adc
daa
sti
mov
adc
adc
inc
or
push
xor
push
clc
les
je
cli
sbb
movsb
add
mov
or
mov
pop
cwtl
push
cmp
xor
dec
loop
hlt
or
addr16
jno
and
daa
mov
adc
mov
inc
lods
lods
mov
mov
gs
jbe
es
add
xchg
lahf
mov
lahf
out
adcl
sub
pop
es
pop
jg
sbb
mov
mov
stos
mov
idivb
call
test
js
aam
mov
sarl
jge
pusha
stos
xor
push
ret
into
cmc
mov
int3
jne
pop
int3
aad
out
push
sbb
sub
cmp
push
xchg
fcoml
orl
pusha
aam
or
lret
mov
jnp
cmp
pop
or
lods
ja
or
add
add
xchg
js
stos
adc
pcmpeqw
adc
sahf
push
dec
jecxz
aaa
sbb
pop
xchg
in
jmp
mov
lcall
sbb
js
sbb
pop
ficompl
fildl
jge
and
mov
mov
push
jmp
shrd
xchg
and
jo
jle
or
dec
xor
repnz
movsb
roll
push
ljmp
insb
loope
lret
jb
aas
lods
sub
into
in
outsb
ds
mov
nop
stc
fimuls
std
mov
mov
or
lcall
loop
shll
mov
loope
mov
and
movsb
dec
loope
cmp
iret
mov
aam
xlat
rorl
mov
xchg
inc
cmpb
ds
add
out
mov
mov
icebp
jo
pop
out
inc
mov
mov
jecxz
pop
cmpsl
stc
sarb
add
add
test
clc
arpl
movsb
xchg
push
fstpt
aad
cltd
stc
xorb
aad
cmc
js
out
dec
dec
cld
sbb
mov
lods
push
add
ljmp
push
mov
test
cmpsb
adc
xchg
or
and
gs
fsubrs
ds
xlat
xchg
jle
sqrtps
xchg
xchg
std
cli
cltd
sub
add
mov
or
pop
push
add
ret
popa
out
jns
jmp
rorb
enter
pop
xchg
daa
jmp
add
les
push
cli
pop
loopne
add
push
dec
mov
je
xchg
jns
cmpsl
cld
lret
mov
neg
add
mov
lret
mov
xor
test
xor
clc
jns
sub
sbb
adc
enter
jmp
mov
repz
stc
inc
pop
sbb
dec
test
xchg
lods
inc
adc
and
cmp
inc
outsb
mov
jmp
adc
jo
adc
jmp
in
test
test
push
mov
les
xlat
in
cmp
jbe
lods
xchg
dec
pop
cmc
sbb
pop
enter
adcl
sti
icebp
xor
and
scas
mov
jb
popf
cmpsb
push
js
pop
mov
fimull
hlt
ss
cs
jmp
out
filds
in
data16
scas
pop
xchg
sub
push
fisttpll
xchg
fld
mov
mov
rcr
lock
cltd
mov
addr16
cmpsb
sti
xchg
sbb
out
movsl
inc
iret
ret
dec
addb
lret
mov
popa
aaa
scas
xchg
je
icebp
xchg
lock
jns
xchg
data16
or
adc
nop
mov
pop
jecxz
sbb
into
fdiv
mov
stos
shll
lods
jecxz
cmp
adc
into
ret
loope
popa
jge
loope
sub
fldenv
std
cmp
arpl
sub
call
and
or
cli
fiadds
cs
xor
in
xlat
stc
mov
pop
jp
add
sbb
shll
rcll
iret
rclb
cld
mov
dec
jl
loope
nop
repz
and
xorb
sub
jno
hlt
add
je
testb
push
jno
shll
repz
enter
testl
cld
fcos
nop
je
or
fwait
and
iret
xchg
aad
scas
add
or
mov
cld
fisubrs
enter
push
dec
adc
lcall
test
enter
lods
xor
cmp
in
add
xorb
ffree
jb
mov
ljmp
xor
in
rcr
lret
je
mov
mov
adc
gs
sub
shll
xor
movsl
out
jns
pop
cmc
cltd
push
inc
shrl
and
std
lds
cmpsb
cmp
sbb
xor
rclb
mov
mov
add
fwait
test
xchg
pop
jns
icebp
sub
xor
push
lea
mov
push
out
dec
and
in
sub
les
add
outsb
loope
jmp
ja
push
push
mov
xchg
dec
cwtl
add
add
cmc
adc
mov
sub
and
stc
lcall
mov
push
popf
xchg
scas
shlb
repz
jb
or
push
mov
push
push
add
push
mov
mov
inc
adc
in
je
inc
in
xor
mov
insb
hlt
adc
in
repz
mov
clc
jno
clc
xor
dec
xchg
xchg
mov
pop
arpl
push
xchg
fcompl
enter
xchg
pop
adc
jb
clc
push
inc
lret
insl
cmp
in
vmwrite
mov
or
and
or
pop
cs
test
fnstsw
rolb
aam
sbb
adc
or
lahf
into
jae
mov
add
faddl
lock
test
xor
jge
and
pop
es
lahf
push
xchg
jno
fstps
jl
ds
shl
or
pop
out
lds
mul
mov
sub
leave
incb
push
ds
ret
fimuls
xchg
popa
je
sub
mov
ds
dec
ja
adc
push
xchg
cmp
xchg
and
dec
idivb
cmp
cmp
sub
cmp
lcall
pop
dec
in
cwtl
dec
mov
sbb
sub
icebp
xor
filds
mov
jo
xchg
xor
daa
aaa
cmp
pop
lahf
pusha
into
sbb
repnz
inc
lahf
stc
aaa
rorb
dec
adcb
arpl
push
jo
lock
mov
jmp
int3
imul
fbstp
push
mov
fwait
leave
shlb
rolb
jge
mov
pop
fsts
xchg
scas
mov
ret
test
repnz
mov
xlat
fcomps
push
loop
mov
repz
jecxz
imul
pop
cltd
or
push
andb
rolb
or
fmuls
xchg
pop
lock
push
pop
push
mov
icebp
push
inc
in
hlt
mov
or
das
mov
sahf
mov
and
jnp
lds
push
ja
cli
popf
sub
out
sbb
xchg
mov
inc
mov
xor
mov
mov
lahf
loopne
mov
stos
lods
push
sub
ficoms
xor
cltd
into
sbbl
cmp
pop
enter
jo
xchg
mov
loopne
inc
inc
jbe
outsb
push
out
lods
scas
rcl
add
lods
and
push
shrl
cmc
fwait
pusha
xor
orb
jp
dec
int3
dec
int
mov
add
adc
sub
fbstp
jno
jmp
and
stos
movsl
iret
cld
out
xchg
push
sahf
mov
cmp
shl
pop
fnstsw
and
stc
or
hlt
cmp
mov
push
lret
loope
cmp
mov
test
movsb
mov
pop
cmp
jle
into
mov
insb
mov
fnstsw
movsl
inc
fistpl
inc
loope
cmpsl
push
scas
cmp
or
ja
sar
cmp
insl
outsl
test
mov
testb
addr16
in
scas
fsubp
mov
fcmovu
xor
ret
push
jg
cld
loop
aad
aad
xchg
fistpll
js
pop
push
push
adcb
mov
scas
xchg
rclb
push
xchg
sbb
pop
mov
lods
jnp
mov
xchg
add
in
test
jp
sbb
mov
xchg
pop
repnz
push
fbstp
push
shrb
stos
xor
sti
aam
sub
inc
dec
addl
sub
adc
and
xlat
pop
pop
or
cmp
test
xchg
mov
scas
ret
outsl
aad
inc
sbb
lcall
sbb
or
and
push
add
loop
push
xor
lahf
sbb
push
jno
fstl
seto
dec
fistps
ja
shlb
testb
lahf
es
add
xor
pusha
imul
mov
arpl
sbbb
jns
cmpsb
mov
sub
push
rcrb
adc
jo
scas
fnsave
aas
scas
sahf
fmul
addr16
addr16
add
scas
mov
fsubs
jae
out
xchg
sbb
es
and
add
push
jo
xor
lea
out
pop
test
cmpsl
lock
or
add
fadds
gs
imul
push
std
sbb
jge
xchg
mov
mov
push
in
add
xchg
pop
imul
stc
xchg
data16
pushf
mov
aam
or
mov
push
xor
xchg
cmpsb
mov
int
mov
fwait
les
jmp
out
mov
and
mov
and
das
mov
in
dec
mov
test
pop
mov
pop
les
ja
add
xchg
sub
pop
xor
andb
push
fdiv
pop
dec
add
cmp
outsl
aad
stc
mov
arpl
sub
dec
xchg
add
adc
inc
ljmp
and
adc
add
repnz
rcrb
ret
jle
dec
xchg
pop
subb
sahf
inc
out
xor
and
adc
add
repnz
rcrb
ret
jle
dec
xchg
pop
subb
sahf
inc
out
xor
dec
into
push
fiadds
cs
rcrb
lret
outsb
mov
mov
scas
xchg
mov
add
xor
and
xchg
faddp
cs
push
mov
lret
mov
mov
insb
or
movsb
sbb
push
or
cld
mov
into
jmp
mov
mov
jl
insb
or
imul
or
mov
int3
sub
stc
jl
pushf
inc
sbb
and
pop
push
test
test
xchg
ret
mov
jbe
pop
add
mov
andb
add
pop
lcall
fst
popa
and
mov
mov
shlb
jl
add
int3
data16
push
cmp
stc
sahf
pushf
push
sarl
jmp
add
push
sub
push
in
sub
pusha
pop
dec
mov
pop
sbb
insb
in
int3
inc
pop
repz
cmp
ja
repz
out
mov
out
inc
xor
ror
dec
sbb
inc
jno
in
or
in
mov
pushf
fdivs
jae
mov
pop
xchg
xchg
es
cmp
leave
mov
mov
arpl
in
cmp
dec
sbb
cmp
sub
add
mov
aad
movsb
stc
mov
push
pop
jo
imul
popa
test
mov
mov
stos
pushf
lahf
loope
add
insb
insb
sub
dec
imul
pusha
int3
test
lea
into
xchg
ret
movsl
lock
jmp
cmp
and
sbb
or
cld
mov
int3
jmp
pushf
pop
sbb
jns
dec
sbb
or
cld
mov
int3
jmp
pushf
jge
pop
xchg
add
mov
push
xchg
mov
pop
xchg
dec
jge
inc
jmp
mov
fisttpl
sub
xor
jbe
inc
pop
cmpsl
pop
and
das
mov
pop
mov
xchg
xchg
pop
pusha
mov
jecxz
inc
cmp
testl
in
pop
xor
fstl
jmp
sbb
mov
mov
sub
sub
sub
stos
jne
lds
sub
push
sbb
adc
mov
cmpsb
movsl
lods
jle
rcl
in
or
inc
adc
inc
gs
repz
sub
movsb
inc
hlt
jmp
loope
lods
mov
fucomip
push
inc
aas
daa
mov
mov
je
mov
dec
int3
imul
in
rorb
popa
inc
xchg
pop
jl
push
scas
add
mov
cmc
and
xchg
addr16
add
mov
adc
and
lods
cmp
dec
imul
jmp
jg
loop
lods
or
lcall
cmp
push
orl
cld
push
movsb
adc
outsb
cld
jmp
push
push
loopne
and
and
lahf
pause
or
adc
pop
fcmovne
lock
mov
cmpsl
push
cmp
push
enter
mov
test
mov
pop
add
push
adc
rorl
inc
fwait
adc
or
rcrb
cmp
inc
sub
inc
cmp
adc
xor
pop
mov
dec
adc
call
ss
and
ret
loope
pop
push
icebp
xchg
call
mov
test
movsl
ja
xchg
lea
mov
cmp
outsb
xor
mov
fwait
push
inc
cltd
sbb
mov
fs
aaa
pop
pop
decb
jne
mov
cmp
and
imull
fidivrs
fstpt
test
xchg
repnz
jb
lea
mov
pop
xorl
rol
pop
sbb
jns
mov
fsubrl
jmp
stos
outsb
jle
rcll
jp
push
mov
daa
push
jmp
in
aad
stos
repz
out
adc
inc
mov
icebp
cmc
lock
int
mov
aam
sbb
ljmp
pop
hlt
movsb
xchg
or
cltd
mov
out
add
mov
into
push
in
adc
sub
cmp
rcr
adc
inc
cwtl
xchg
fsubs
cmp
inc
mov
negl
mov
ficoml
cld
scas
repnz
and
repnz
jmp
jecxz
pop
scas
loop
sub
pop
inc
in
sub
test
je
xchg
dec
push
bound
and
out
sbb
jmp
sub
jl
jnp
push
xor
movsl
jns
ffreep
mov
int3
shl
and
mov
sbb
add
xchg
cld
cld
outsl
dec
dec
fldenv
push
jg
pop
std
and
mov
xchg
data16
stos
pop
mov
fucom
imul
xchg
into
enter
fisttpll
jl
inc
pop
sbb
sti
adc
jnp
mov
lods
xchg
aaa
into
cmpsb
xchg
imul
xor
push
mov
iret
sarb
dec
sar
add
cltd
cld
mov
pop
in
out
out
aad
jns
ret
mov
inc
push
sub
mov
xchg
push
mov
pop
xor
jnp
sub
pop
mov
les
imul
and
push
arpl
cmpsb
jle
ds
xchg
movsb
or
sub
mov
pop
ret
mov
hlt
fdivrs
mov
cmpsl
enter
rcrl
add
adc
cmp
stos
repnz
pop
lock
icebp
mov
push
fidivs
and
jecxz
fsubs
mov
inc
fldenv
and
mov
sbb
inc
sbb
xorl
ret
ret
mov
movsb
mov
in
push
popf
and
test
std
jne
leave
xchg
outsl
dec
jns
loope
pause
ffree
je
out
xor
cmpsb
sub
or
negl
nop
cmp
leave
and
sbb
sub
dec
adc
icebp
orb
push
lods
mov
in
imul
pop
outsl
fldl
pop
mov
push
int3
pop
cmp
ficoml
je
mov
vmread
retw
daa
cmp
cmp
mov
mov
push
pop
mov
mov
imul
sub
cwtl
repz
movsl
inc
orb
or
je
lret
adc
call
add
ljmp
sub
imulb
dec
and
fdivrs
pushf
add
jge
push
mov
nop
pop
test
mov
mov
mov
add
push
jne
je
daa
scas
or
cmp
fs
lea
mov
sbb
xchg
jb
xchg
mov
add
in
mov
xchg
and
push
es
js
lret
out
push
mov
pop
ret
sub
dec
pop
addr16
adc
std
or
insb
mov
stos
sub
repz
sub
jno
jbe
push
loopne
adc
bound
push
pop
xchg
and
mov
sbb
cli
cltd
push
mov
push
cs
fdivr
imulb
add
pop
gs
xor
push
out
mov
das
stos
jbe
int3
stc
insl
xchg
int
insb
sar
fs
dec
gs
iret
fsubp
adc
bound
lret
or
aas
cmp
pop
push
and
cmp
mov
dec
push
jbe
dec
add
mov
mov
cmp
mov
jo
or
sub
xlat
add
and
lcall
xor
mov
add
inc
ret
cmpsl
sti
fbld
sub
sbb
sbb
mov
xchg
movsb
insb
in
inc
pop
hlt
fstpl
mov
xchg
mov
stc
mov
test
add
push
cmp
pop
jmp
ljmp
arpl
mov
and
rcll
xchg
cli
xlat
cwtl
sub
cmp
sub
and
stos
sbb
xor
mov
mov
ret
dec
mov
clc
push
sbb
in
stc
push
out
js
xor
call
xor
dec
sbb
mov
scas
mov
push
inc
add
ss
pop
popf
ret
test
ds
std
jmp
sarl
ljmp
jmp
jp
jbe
in
pop
xor
cltd
xchg
dec
cmpsl
sub
adc
rcll
inc
push
sahf
push
ret
inc
aad
pop
movsb
xor
adc
faddl
mov
add
or
fpatan
lahf
or
popa
or
cmp
icebp
sub
add
jmp
sbb
sub
outsl
push
xchg
push
idivl
dec
iret
jne
iret
or
and
inc
jnp
push
jnp
cs
add
sbb
sbb
pop
push
sub
call
inc
mov
mov
imul
jge
xor
jmp
sbb
outsb
popa
sub
pop
rolb
cmp
mov
rorl
aam
scas
pop
outsl
dec
and
xor
jns
ds
repnz
in
inc
mov
shlb
test
adc
push
jne
pop
mov
push
xor
cmp
cmc
enter
cmp
mov
ds
inc
jmp
jbe
pop
xchg
push
xor
mov
ret
cs
jmp
jb
cli
in
xchg
mov
test
dec
pop
jecxz
mov
fdivs
addr16
les
outsl
addr16
pusha
leave
repz
mov
imul
and
filds
inc
fldl2t
roll
int3
out
mov
push
pop
iret
push
lds
negb
push
sbb
xchg
xchg
lea
aam
pop
fxch
gs
and
jno
stos
mov
push
inc
hlt
fldcw
test
xchg
and
push
popf
push
fs
cs
inc
cmc
xor
flds
orl
inc
jle
xor
rcrl
mov
sbb
dec
imul
adcl
jmp
insb
out
xchg
ss
pop
mov
push
loope
dec
shl
cwtl
mov
aad
mov
push
xor
inc
mov
iret
ds
popf
push
stos
aad
add
dec
shrl
inc
push
cmp
inc
fdivrl
add
data16
mov
cmp
call
or
loop
xlat
xor
fildll
lods
mov
js
mov
inc
inc
mov
push
or
insl
in
sub
or
sub
xchg
pop
sbb
jns
or
insl
mov
mov
mov
inc
mov
adc
xchg
mov
push
test
shl
pop
mov
xchg
int
mov
mov
mov
scas
add
cmpsl
hlt
mov
pandn
adc
cmpsl
cld
pushf
mov
add
cwtl
mov
sub
test
push
iret
jg
sub
dec
cwtl
mov
jno
cmpsl
push
aam
pushf
imull
and
add
outsl
int
fcoms
enter
or
sbb
test
pusha
dec
pop
xchg
fneni(8087
lret
pusha
sbb
jbe
xor
outsb
cmp
xchg
jge
inc
add
cmp
xchg
xor
shrl
pop
fiaddl
imul
roll
sub
fisttpll
xchg
stos
or
je
dec
and
pop
xchg
xchg
push
stos
filds
mov
jge
scas
insl
out
adc
bound
popa
xchg
push
or
mov
in
aad
inc
jecxz
jnp
lret
loope
push
scas
xchg
mov
pop
inc
gs
aas
loop
mov
sbb
fsubs
cld
lret
xor
and
and
pop
xor
pop
andb
subb
mov
sahf
enter
mov
rol
aaa
and
sub
enter
push
mov
inc
xchg
ret
jmp
pop
and
inc
dec
lea
push
mov
add
mov
lods
and
mov
inc
out
rcll
push
push
xchg
pusha
sbb
cmc
dec
jmp
out
fucomp
mov
add
jmp
fsts
int
std
mov
or
insl
pop
jb
cmp
inc
xchg
cli
lds
idivb
xor
clc
cmp
sti
mov
bound
test
in
sbb
iret
or
pushf
xor
inc
add
imul
loopne
xor
into
rclb
or
adc
or
sub
or
fwait
push
mov
adc
xchg
dec
mov
sbb
push
sbb
insb
cmp
inc
jmp
jp
in
jno
mov
push
or
aaa
or
jle
and
shll
mov
pop
inc
jo
push
dec
repnz
xchg
adc
and
pop
dec
inc
push
stos
cmp
pop
inc
idivb
mov
adc
notb
push
and
xchg
lcall
sbb
stos
minps
and
dec
in
fstpl
dec
int3
push
xor
outsb
jno
sub
outsb
mov
adcl
jle
insb
and
pop
push
sbb
gs
push
out
mov
subb
xchg
fstpl
pop
xchg
jb
stc
jp
test
xchg
cmpsl
rol
or
loop
mov
and
xor
jnp
inc
adc
adc
pop
cwtl
pop
aaa
mov
aas
mov
pop
inc
sub
cmpsb
push
sub
sbb
punpckhwd
xchg
pop
insb
jb
je
mov
mov
hlt
stos
aas
ret
jp
dec
mov
iret
mov
ja
push
test
add
jp
jge
xchg
sub
dec
lahf
xchg
sub
mov
test
in
mov
imul
int3
mov
mov
mov
mov
push
jbe
xchg
jae
lcall
push
mov
popf
mov
imulb
scas
repz
stos
mov
fdivrl
lods
rclb
inc
push
rolb
ficomps
pop
inc
ret
mov
jo
insl
adc
push
and
pop
dec
int
gs
fstpl
push
push
clc
jbe
ficoms
pop
inc
arpl
lods
icebp
xchg
lret
cmpl
shr
xor
push
in
lods
in
mov
outsl
mov
jg
mov
out
aaa
pop
mov
stos
rolb
int3
imul
mov
push
addr16
push
loope
xchg
outsb
jl
pop
sbb
out
in
movsl
insb
fiaddl
cltd
gs
imul
shll
sub
mov
ds
xchg
in
sbb
push
mov
mov
sub
push
mov
jns
gs
test
xorb
call
movsl
nop
dec
sbb
lods
sbbb
sub
out
dec
xor
mov
inc
add
jp
add
add
xor
and
or
mov
leave
jge
xor
push
push
lret
xchg
dec
enter
jae
xor
push
out
mov
dec
mov
pop
sbb
inc
mov
dec
pop
xlat
sbb
cmp
cwtl
push
bound
movsb
loop
cltd
cltd
sbb
test
jno
les
gs
jl
and
ret
sub
add
inc
call
and
xchg
mov
aam
inc
iret
and
mov
rorl
out
sub
sbb
mov
push
test
cmpsb
ret
cmp
and
adc
add
mov
and
pop
or
xchg
fidivl
cmp
dec
in
fsubrl
adc
and
hlt
popa
fmul
mov
or
imul
rolb
int
push
test
popa
filds
jle
or
or
xorl
xchg
mov
pop
and
lahf
ds
and
jne
dec
mov
test
add
stos
movsb
jmp
aaa
stc
clc
adc
in
push
call
or
or
jne
mov
loopne
push
js
lods
xchg
and
fadds
cs
scas
repnz
imul
test
in
add
ja
mov
mov
cmp
jge
jbe
push
mov
push
push
mov
loop
decb
inc
aad
mov
mov
adc
loop
jbe
js
inc
aas
out
pushf
out
int3
push
sbb
clc
cltd
lods
int3
aam
adc
pop
or
or
rorb
jns
mov
jecxz
or
popl
or
gs
aas
scas
cmpb
cmp
insl
mulb
testl
bound
imul
popf
mov
cmpsl
mov
fidivrs
out
push
dec
mov
jmp
sbb
push
jbe
cwtl
imul
sub
cltd
neg
inc
and
out
gs
cmp
xchg
and
cmpb
pop
jb
and
lret
dec
add
lods
mov
and
pop
and
xchg
pusha
mov
ja
outsl
or
mov
cmp
sbb
jae
cli
arpl
ljmp
inc
fcomp
dec
pop
icebp
aam
scas
icebp
pop
push
les
mov
aam
xchg
mov
lds
push
repnz
inc
clc
fldt
jno
sub
jbe
jp
pop
mov
es
inc
icebp
dec
in
in
shl
lcall
jl
ret
inc
and
push
rcl
jns
push
push
rclb
push
jne
xor
xor
sti
popf
lahf
ret
jecxz
adc
ret
jp
cmp
arpl
xchg
mov
add
arpl
or
mov
mulb
imul
fs
cmp
jmp
sub
mov
ljmp
sub
ss
push
jbe
dec
mov
or
cli
lcall
jbe
mov
insl
jge
mov
outsl
mov
lds
xchg
sbb
movsl
inc
int3
cmp
fbld
dec
mov
in
push
jge
pop
jecxz
or
add
popa
out
add
mov
cmpl
ret
mov
shll
or
outsb
jg
inc
out
lods
je
lock
push
xchg
jecxz
xchg
jg
lods
xor
daa
movsb
enter
mov
lret
add
pop
xchg
push
mov
inc
or
xor
adc
inc
iret
mov
jb
jns
mov
push
xlat
lret
out
ret
push
mov
mov
gs
or
das
cmp
ljmp
pop
and
mov
stos
cmp
jo
jne
mov
inc
dec
repnz
das
mov
out
fldcw
adc
addb
icebp
sub
mov
fiaddl
movsb
and
xor
nop
cld
pop
push
in
insl
xchg
and
xor
or
bound
pop
mov
ret
bound
adc
xchg
adc
xchg
pop
cmp
xlat
data16
dec
cmp
int3
sbb
push
sub
push
mov
add
arpl
idivl
leave
cld
xchg
insl
and
out
imul
dec
rorl
sub
pop
pop
ljmp
fstpt
sub
loopne
mov
mov
sub
test
jno
pusha
test
jne
dec
and
call
bound
je
icebp
jnp
mov
mov
pop
jo
push
int
push
ret
fwait
jge
jns
xchg
fldl
adc
test
mov
and
adc
psllq
das
scas
std
mov
push
xchg
imul
scas
push
xor
enter
xorl
adc
or
out
lret
inc
push
pop
sarb
jne
dec
jnp
push
icebp
cmpsb
sub
jo
stos
mov
xor
es
inc
imul
mov
inc
fwait
mov
testl
mov
adc
or
cmpsb
add
insb
or
adc
iret
mov
pushf
dec
and
rcr
push
mov
xchg
cmp
sub
cmp
cmp
mov
mov
sbb
jb
fwait
pop
fidivs
cmpsl
sub
sub
ret
xchg
adc
dec
icebp
xor
fiadds
sub
push
add
jae
mov
jl
aaa
mov
push
push
add
add
mov
add
jge
jle
outsb
inc
mov
nop
sbb
hlt
ret
rcrl
jg
testl
mov
enter
mov
dec
aad
inc
aad
sub
jno
jecxz
dec
mov
and
cwtl
pop
push
sub
sbb
cmpsb
into
jno
call
out
and
pop
lods
cmp
xor
sub
sub
pop
outsl
jg
test
add
leave
push
pop
ret
jb
dec
repz
dec
jge
sub
mov
lods
aaa
addr16
add
xor
test
sbb
lods
into
xchg
aam
sti
sti
in
pop
cmpsl
cmp
cmc
loope
jb
and
jp
setg
push
jg
lret
std
mov
mov
and
xchg
sub
push
arpl
fnstsw
xlat
insb
pop
shlb
adc
xchg
mov
call
test
cmc
call
mov
xlat
jg
div
mov
jmp
jecxz
inc
fistps
dec
sbb
inc
mov
and
lret
ficoml
rcrb
je
dec
pop
movntps
mov
lret
imul
sbb
rcrl
lea
cmp
pop
sbb
push
dec
push
mov
rclb
dec
out
pop
mov
incb
add
mov
js
mov
xchg
mov
fdivrs
leave
pop
popf
gs
dec
mov
jns
rorl
push
adc
insb
sti
outsb
dec
and
emms
inc
mov
rcr
or
push
mov
lcall
aad
mov
xor
aad
or
imull
fneni(8087
xorl
dec
les
sbb
and
sbb
sub
mov
and
aad
pop
adc
imul
xchg
jnp
push
int3
sub
pushl
xchg
call
push
scas
pop
xchg
in
cmp
mov
es
xor
ljmp
fwait
cltd
jecxz
push
cs
cwtl
inc
scas
inc
shll
pop
insb
rol
int
pop
inc
loope
sub
xchg
push
movl
sub
out
je
xchg
jmp
adc
loope
push
xor
inc
pop
sarb
adc
je
push
ret
jb
imull
sub
in
aaa
jbe
cld
lea
repnz
test
loope
dec
in
mov
cltd
cltd
xchg
sub
cwtl
and
loope
xor
dec
shll
in
rcrl
dec
jmp
adcb
adc
iret
inc
cmp
nop
addl
mov
sarb
out
int
mov
xorb
sub
ljmp
dec
cli
adc
add
or
dec
loop
mov
jmp
push
out
dec
out
push
push
sub
fildll
mov
add
push
sbb
rorl
fnstenv
dec
pushf
loope
cmp
add
sahf
sbb
insb
ret
fisttpl
xchg
test
push
das
add
adc
sub
push
inc
shrb
fsubp
xor
xor
mov
xor
daa
pop
and
mov
adc
int3
xchg
inc
imulb
push
sti
mov
or
jns
dec
sbb
or
cld
mov
int3
jmp
pushf
pop
sbb
jns
dec
sbb
or
cld
mov
int3
jmp
pushf
pop
sbb
jns
dec
sbb
or
cld
mov
int
mov
pop
sbb
jns
dec
sbb
or
cld
mov
mov
mov
loope
icebp
mov
lcall
mov
fidivl
inc
sbb
and
dec
add
into
loope
icebp
out
lcall
sbb
jno
inc
sbb
dec
jp
dec
add
adc
dec
icebp
sbb
inc
shl
mov
ficoml
bound
jg
add
pushw
outsl
push
les
repz
cmp
sbb
or
fs
dec
mov
inc
mov
jns
popf
pop
push
les
push
fcoml
out
xchg
and
clc
dec
add
cld
ljmp
mov
les
cld
pop
sbb
add
aas
xor
movsb
rcl
outsl
jmp
cli
mov
jmp
outsl
sub
in
xchg
and
dec
or
push
xchg
mov
stos
xchg
pop
pop
push
sub
inc
jmp
mov
sahf
mov
push
das
jb
xor
fs
jl
shll
mov
out
aam
jo
and
and
bound
pop
add
loope
icebp
mov
lcall
cmpl
inc
sub
and
js
pop
js
in
mov
shl
test
xchg
fdivrs
sbb
outsl
and
and
and
pop
out
fists
int
std
aas
call
push
xor
dec
adc
jle
movsl
mov
mov
sbb
jno
inc
sbb
and
dec
add
stos
loope
icebp
mov
lcall
sbb
jno
inc
sbb
and
dec
add
stos
loope
cltd
dec
sub
adc
push
js
inc
mov
ljmp
sahf
mov
mov
mov
pop
pop
sbb
pop
fcmovu
sti
shll
xor
push
jo
pop
insl
sbb
popf
xchg
out
mov
faddl
or
add
sbb
cld
cwtl
out
jecxz
or
cmc
testb
stos
pop
ret
push
gs
mov
test
gs
lods
push
dec
sub
ds
sarb
cmc
fucompp
out
addr16
es
aaa
xchg
ficompl
and
cwtl
cwtl
xchg
xchg
movb
loop
inc
cmp
rcrb
in
inc
xor
mov
or
xor
pop
or
daa
pop
fsubrl
sbb
cli
adc
imul
mov
scas
dec
push
mov
and
aad
mov
dec
clc
lret
movsb
or
ret
pop
push
pop
add
dec
stos
jae
scas
cmp
jns
ljmp
dec
lock
scas
test
fnstenv
lret
popf
xor
fstp
mov
add
ret
ja
or
psadbw
adc
ficomps
pop
in
or
sub
sub
out
or
fwait
dec
cmp
int
cmpsb
ret
outsl
inc
or
andl
arpl
arpl
mov
into
test
and
jmp
aas
imul
jno
call
push
mov
lock
jge
adc
ljmp
loop
into
ret
cmpsl
xchg
push
and
jno
outsl
xor
les
xchg
mov
mov
addr16
and
shlb
xchg
adc
inc
in
and
push
push
sahf
popf
dec
mov
cli
rcr
dec
and
mov
cli
inc
xchg
stos
enter
mov
test
into
ret
hlt
icebp
jno
jg
jmp
inc
mov
aad
iret
ficomps
add
pop
ret
xchg
mov
cwtl
not
adc
pop
add
repz
dec
adc
mov
lock
dec
mul
xchg
in
sub
out
sub
insl
jg
pop
shlb
ja
mov
fnsave
mov
in
lret
jle
cmpsl
ljmp
dec
repnz
xchg
mov
iret
repz
fildl
cmp
xchg
mov
or
mov
pop
outsb
adc
jg
dec
mov
dec
in
negb
pop
mov
shll
xchg
stos
decl
xor
cmpsl
xor
sub
pop
rcr
lea
add
shll
lcall
push
jns
cmpsb
in
subl
ret
xor
mov
add
pop
inc
add
scas
or
enter
popf
fimull
ret
add
aas
test
push
aad
xchg
into
in
mov
inc
out
out
orl
pop
aam
xor
mov
jne
add
xor
xor
xchg
cld
jle
loopne
in
sub
inc
fnsave
je
mov
pop
jbe
sbb
mov
popa
stos
sbb
test
mov
jae
mov
inc
mov
jle
jo
addr16
adc
ficompl
lods
mov
andb
rolb
add
out
mov
call
int3
nop
push
cmp
dec
pop
or
or
jg
jp
and
sub
mov
sbbl
ficompl
sbb
ret
jb
ret
push
ret
mov
inc
jge
inc
push
adc
test
dec
in
adc
xlat
mov
out
test
movl
sub
test
dec
push
mov
mov
xchg
cmc
clc
lods
and
lock
clc
dec
pop
mov
or
cmpl
xchg
mov
inc
stos
imul
jge
push
addl
fnstenv
sahf
push
xorb
in
xchg
xchg
int3
stos
bound
lods
rorb
shlb
cmp
mov
pusha
sub
sub
add
popf
and
pop
push
in
loopne
push
and
bound
stc
insb
lds
xor
pop
int
add
test
cmp
and
es
lcall
fistl
push
shrl
inc
fdivs
and
cmpsb
fs
test
mov
leave
ja
xchg
sub
subb
sub
xchg
ds
inc
inc
lret
enter
dec
mov
in
shll
dec
notb
lods
mov
scas
bound
adc
lret
dec
fs
out
adc
dec
sbb
and
pop
leave
das
pop
icebp
aaa
jp
push
in
das
call
imul
and
mov
imul
cmpsl
pop
mov
push
aaa
js
jg
ret
xor
jno
mov
adc
pop
jb
call
mov
and
in
dec
inc
iret
push
add
xchg
pop
dec
lock
or
mov
loopne
pop
cmpsb
dec
pop
insl
push
fisttps
jmp
movsl
mov
jae
pop
lods
lea
fwait
add
add
fdivr
sarl
xchg
movsb
test
add
movsl
mov
out
cli
aam
jmp
ficomps
inc
mov
fwait
jle
icebp
inc
cmp
fiaddl
push
mov
inc
jecxz
push
inc
mov
stos
cs
roll
mov
ljmp
ficompl
xlat
sub
data16
sbb
stc
xor
sub
dec
jp
push
je
mov
add
sahf
jg
mov
cwtl
push
insb
mov
out
xor
jno
test
stc
popf
add
nop
xchg
dec
xchg
pop
push
inc
lods
cmovl
stos
dec
dec
lods
xlat
int3
aas
pusha
cwtl
enter
inc
rclb
cwtl
pop
and
adc
test
arpl
push
mov
mov
fsubl
in
cltd
mov
dec
cmp
daa
repz
jg
lret
push
mov
and
test
popf
adc
and
cmc
add
dec
bound
mov
je
xchg
adc
arpl
into
or
inc
or
mov
xchg
xchg
jmp
in
mov
add
inc
je
fxch
ret
es
xchg
test
push
push
or
fsubrs
mov
inc
mov
psubd
xchg
int3
inc
pop
test
push
sbb
jg
outsl
movsl
cli
adc
shll
mov
dec
or
xchg
cmpsl
movsl
mulb
test
gs
cmp
jae
test
mov
cmpsl
mov
jge
leave
push
ss
sbb
std
or
add
test
mov
sbb
loopne
mov
adc
mov
and
scas
leave
test
call
rorl
enter
aad
out
fsubrp
orb
xchg
mov
test
sub
sub
cmp
into
jbe
push
outsl
std
dec
xchg
push
adc
ret
stos
leave
xor
inc
gs
push
pusha
add
in
pop
in
call
lret
inc
cld
sub
outsl
lahf
dec
xor
xchg
repnz
test
jb
xchg
std
push
les
int
call
pop
cmp
repnz
mov
lods
movsl
fwait
imul
push
and
add
lcall
stc
sbb
int
mov
lcall
jmp
test
or
inc
sub
mov
insl
sub
sub
or
clc
sub
xchg
push
push
sar
or
das
jae
xchg
cmp
and
push
out
outsl
pop
cmp
stos
test
test
push
cld
cmp
hlt
xchg
repz
ljmp
adc
cld
mov
add
fmul
pop
in
xchg
mov
and
shll
mov
inc
inc
lret
push
cmp
mov
cmp
sahf
xchg
push
cmpsb
cmpsb
xor
or
aaa
fsts
outsb
int
push
xchg
adcl
adc
pop
mov
dec
pop
mov
add
cmp
daa
xchg
imul
cmp
lods
mov
xor
sbb
jg
pop
fiaddl
mov
pop
sub
inc
and
test
imul
add
and
mov
ja
sbb
add
push
lods
adc
pop
mov
xor
jo
add
or
das
pop
jno
mov
filds
xor
or
dec
shlb
xor
jno
and
push
and
call
pop
mov
aad
lcall
or
sub
lock
adc
or
sbb
cmc
jnp
cmpsl
inc
fidivrs
lcall
sbb
sbb
scas
out
push
add
sbb
mov
xor
xchg
cltd
test
gs
fs
rcll
sarl
das
push
mov
insl
shll
add
stos
push
xchg
in
pop
cli
movsl
add
ds
sub
hlt
cmp
add
add
pushf
inc
jmp
cmp
ja
fucompp
sahf
jge
jge
lods
stos
cwtl
dec
out
dec
xchg
push
or
push
out
and
sahf
sub
pop
lock
test
cwtl
xchg
sti
fs
iret
pop
scas
inc
hlt
sub
or
mov
xchg
xor
sub
mov
sbb
lret
inc
mov
sub
inc
pop
sbb
pushf
and
mov
sub
aad
push
call
jo
scas
aaa
fs
dec
outsb
arpl
stos
aad
call
mov
or
rolb
rcrl
inc
jnp
jle
mov
sub
fwait
out
adc
std
add
notl
jne
ftst
jnp
sbb
scas
fistl
mov
mov
orl
out
xchg
imul
leave
dec
orl
jae
and
sub
dec
dec
setle
inc
cmp
jb
mov
fcmovu
fcomps
rol
das
movsb
daa
fs
mov
inc
mov
add
lahf
jne
lret
in
into
pusha
movsb
mov
xchg
jb
adc
jae
sub
cmc
enter
sbb
outsb
and
pop
xchg
pusha
ret
push
dec
test
sbb
mov
lods
jne
mov
xorl
and
mov
xchg
imul
cmp
sbb
inc
popl
fndisi(8087
adc
movsl
es
out
lahf
sub
sub
loopne
into
mov
outsb
mov
ss
dec
mov
push
fiadds
mov
and
pusha
es
cltd
mov
sub
mov
out
adc
xchg
push
cltd
stos
add
es
lds
in
adc
dec
cmp
xchg
lods
shl
fs
and
dec
or
sbb
push
popf
lahf
add
lahf
push
or
aad
xor
dec
adc
xchg
jno
pop
pop
sub
movsb
out
push
sbb
cmp
rcll
jno
fsqrt
stos
sub
add
in
ja
mov
or
push
adc
jp
mov
sahf
scas
dec
lock
test
mov
lds
or
sti
push
sbb
into
mov
dec
mov
sbb
or
cmp
push
pushl
push
hlt
cmc
xor
lahf
into
test
jg
add
sbb
mov
fstl
outsl
jnp
cld
dec
jp
jle
outsb
push
iret
add
or
mov
mov
mull
jmp
push
xchg
repz
stos
rcl
in
leave
imul
pushw
push
ret
fcmovbe
push
xor
mov
mov
testl
movsb
mov
leave
xchg
push
or
jge
fdivrs
mov
mov
lods
mov
pop
inc
sbb
xchg
sbbb
mov
fnstcw
stos
adc
shlb
shlb
roll
mov
pop
rorb
inc
sub
dec
cld
hlt
jne
lods
mov
aas
push
xor
stos
mov
sbb
in
fld
cmpsb
test
sub
les
push
mov
fidivl
loop
icebp
je
fildl
rcrb
xchg
xchg
lods
bnd
movsb
inc
pop
mov
xor
jbe
jnp
xchg
lods
xor
jle
fisubrl
xorl
rorl
and
push
mov
loope
std
cmp
cmp
int
fldl
mov
int
popf
push
js
icebp
int
je
lcall
push
movsb
mov
sub
rcrl
orl
pop
out
ds
lock
dec
cmp
push
test
or
jp
into
ljmp
out
push
dec
or
mov
mov
jno
mov
insl
ja
in
imull
mov
ficomps
mov
xchg
lahf
int3
add
jae
add
mov
pop
ds
pop
adc
out
mov
sub
test
aaa
imul
sahf
shlb
rcrb
inc
loop
jne
dec
or
stos
jmp
aas
shrd
add
dec
xchg
repz
dec
neg
fdivrp
mov
sbb
jg
jp
push
popa
mov
push
cmp
cmp
ror
fdivrl
call
test
sbb
sub
pop
clc
ljmp
test
gs
movsl
mov
filds
dec
xchg
sbb
push
ret
pop
inc
mov
pop
add
mov
stos
stc
xor
pop
adc
sbb
pop
lock
pop
add
imul
xchg
cmc
push
repnz
add
mov
sbb
sahf
in
sti
inc
pop
mov
mov
xlat
stos
bound
in
add
cs
adc
mov
call
into
ljmp
push
clc
sub
adc
jmp
outsb
sti
vminsd
inc
or
inc
cs
mov
aad
int
icebp
mov
mov
nop
imulb
xor
mov
or
lock
add
mov
aaa
testl
scas
or
leave
push
mov
movsl
std
incl
and
jmp
lea
cmp
lcall
jns
leave
pop
cli
movsl
add
sub
je
dec
dec
stos
data16
std
daa
scas
ret
cmpsb
inc
insb
imul
xor
lret
cs
add
loopne
mov
shll
mov
mov
jg
sbb
test
xchg
rcrl
aaa
sbb
push
pop
cs
jo
repz
sbb
sbb
lods
cmp
jbe
mov
int
pushf
xchg
and
inc
mov
mov
xchg
cltd
xchg
loope
mov
add
pop
aam
xlat
das
test
xchg
aam
enter
push
dec
xchg
bound
add
loop
xor
xchg
pusha
mov
dec
jg
lea
mov
out
cmpb
rcrl
in
push
push
dec
and
pop
scas
jno
pop
pushf
fs
fcoml
inc
outsl
pop
mov
inc
fisubl
inc
aaa
sub
aas
fwait
scas
ljmp
push
addr16
pop
jns
jb
dec
fldl
outsb
es
jbe
lret
ret
sbb
jno
push
insl
jmp
pop
add
shlb
jmp
push
add
push
mov
icebp
or
loope
inc
sub
dec
ret
pop
jl
xchg
ret
pop
mov
push
xchg
cmp
pop
push
mov
cmp
inc
test
sbb
sahf
jo
add
and
popf
mov
bound
out
sub
xchg
dec
jbe
int3
dec
std
jne
stos
gs
lret
pop
repz
pop
mov
cmp
cmp
push
mov
push
popl
jge
jmp
rolb
cwtl
lcall
mov
mov
add
test
xlat
lods
dec
in
idivl
test
jns
mov
cmp
in
fwait
mov
xchg
pop
push
xor
mov
push
jp
lock
pop
lods
pop
sub
lods
fmuls
inc
adc
or
add
mov
mov
out
pop
push
notb
hlt
call
push
sti
inc
test
push
pop
rcl
xor
jl
clc
lret
mov
or
pushf
andb
mov
mov
lret
sbb
test
rcll
movsb
push
nop
pushf
mov
push
mov
fldt
adc
mov
pop
lret
mov
mov
sbb
push
xchg
mov
xchg
fnsave
lahf
loop
sti
push
cmp
cmpb
fldl
idivb
dec
int3
mov
xchg
add
xor
push
mov
daa
fbld
jae
ret
jp
xor
sub
enter
add
dec
addr16
lcall
test
ljmp
sbb
rcr
loop
pop
adc
jo
sub
les
lods
dec
cmp
mov
std
inc
add
popa
jae
dec
aam
mov
and
mov
push
mov
adc
jmp
jnp
mov
xchg
mov
and
push
push
xorl
and
push
lahf
adc
scas
mov
mov
into
data16
or
ffreep
pop
sbb
sub
negb
push
aaa
push
inc
jge
lock
into
scas
les
jbe
xor
cmpsb
cmpsl
mov
imul
fbstp
lods
out
test
adc
std
dec
rcrl
mov
jl
adc
stc
sub
and
adcb
xchg
leave
sarb
cmp
adc
mov
dec
inc
or
push
iret
insb
jb
pushf
in
jmp
andps
and
lods
mov
push
jge
mov
adc
xchg
push
das
sub
dec
adc
dec
popf
in
jns
loope
pop
sub
mov
add
sbb
mov
ret
js
sub
scas
popa
loope
adc
int
add
fcmovnbe
stos
shr
out
sub
jl
add
jp
outsb
dec
cmpb
inc
mov
ja
sbb
loop
loop
add
int
pop
mov
push
mov
faddp
xlat
mov
enter
jno
cmc
dec
or
scas
insl
or
sub
cmp
cmp
scas
addr16
outsl
rcrl
cmpsb
imul
xor
les
inc
std
scas
cld
fucom
inc
inc
out
stos
imul
repz
into
sub
int
sub
cmove
xor
sub
sub
rcrl
dec
mov
mov
adc
ja
jo
ljmp
dec
and
and
in
mov
jns
push
jns
into
inc
or
fidivl
mov
xchg
addr16
aam
or
jmp
mov
addr16
icebp
outsb
and
iret
jae
inc
add
pushf
insb
pop
adcl
or
ret
xor
ret
push
mov
fidivs
or
mov
in
data16
sti
mov
loop
push
mov
mov
pushl
mov
cld
scas
in
das
and
add
lea
jl
lret
das
jb
push
das
outsl
pop
pop
push
mov
aad
fdivr
xor
inc
jae
xorl
ficoms
iret
stos
jge
popa
sub
xchg
stc
jg
data16
cltd
inc
adc
or
fiaddl
jne
cmp
mov
test
fstpl
div
or
sahf
cmp
push
inc
aaa
push
mov
adcb
xchg
sbb
and
je
je
cmp
mov
pusha
jnp
inc
es
test
ljmp
hlt
sbb
std
mov
and
fdivrl
popf
adcl
in
loope
mov
xor
mov
or
add
daa
inc
subb
lds
adc
mov
add
sub
or
push
into
dec
in
incb
shlb
inc
dec
outsl
or
into
sbb
icebp
pushf
pop
js
jp
and
xchg
cld
mov
jne
lea
pushf
aam
dec
jnp,pt
jmp
jle
mov
xor
add
and
and
in
pop
xchg
in
mov
inc
pop
std
cwtl
cmpsb
inc
jae
stos
fwait
mov
leave
adc
xchg
testl
adc
sub
mov
dec
repnz
orb
popa
sub
fisttpl
das
pop
call
nop
psrlw
jno
mov
loop
hlt
adc
in
cmpsl
xchg
xchg
sbb
scas
cld
shrb
fwait
int
repz
sub
mov
inc
mov
into
inc
mov
out
mov
or
pop
idivl
cmp
mov
dec
sbb
ja
das
out
fwait
out
mov
stc
or
sbb
xchg
rcl
sub
lret
sbb
addr16
or
adc
sbb
mov
xchg
ret
ljmp
pop
out
sbb
lea
inc
and
test
cltd
mov
ret
mov
fistps
lock
fdiv
mov
xor
cmc
jnp
cs
pop
popf
fisttpll
imul
mov
les
test
pop
jne
fcoml
mov
cmp
fbld
fisttpll
fldl
pop
lock
and
sbb
int
icebp
int
lcall
sbb
jno
inc
sbb
and
dec
add
stos
loope
icebp
mov
lcall
sbb
jno
inc
sbb
and
dec
add
stos
loope
icebp
ljmp
mov
sbbl
jno
inc
sbb
and
dec
add
icebp
rol
mov
mov
sbbl
mov
test
movsl
out
xchg
inc
adcl
je
insb
movsb
jnp
add
xor
les
aam
in
hlt
push
test
jae
arpl
mov
adc
and
xor
les
mov
in
hlt
push
test
jae
arpl
mov
adc
and
xor
insb
and
inc
addb
shll
xor
or
or
and
sbb
push
fdivrl
mov
jno
inc
enter
and
jg
jl
dec
add
roll
or
mov
int
fdivrl
icebp
inc
js
hlt
xor
insb
sbb
inc
fsts
adc
cmp
lods
cmp
sub
and
or
enter
arpl
jo
movsb
je
add
jecxz
jecxz
mov
add
inc
imul
push
stos
ss
mov
push
cmpl
ret
push
scas
sarb
mov
pop
clc
jno
cltd
push
push
repz
mov
aam
hlt
dec
cmc
mov
adc
mov
mov
inc
adcl
je
add
adc
and
xor
les
aam
in
hlt
push
test
jae
arpl
imulb
loopne
cmc
or
lods
adc
push
arpl
data16
in
out
cmpsb
adc
in
notl
fs
mov
mov
push
cmpsb
xor
mov
and
sbb
or
hlt
or
adc
and
xor
les
aam
in
hlt
push
test
jae
arpl
mov
adc
and
xor
les
aam
in
hlt
push
test
jae
arpl
fdivl
add
xor
mov
jge
xor
jb
dec
rcl
stos
aaa
out
and
fxch
lret
test
stos
dec
mov
and
test
aam
dec
lahf
inc
mov
pop
jno
pop
jmp
fsubl
rcll
xorb
test
mov
xor
repnz
xor
test
nop
jae
xor
loopne
push
and
push
pop
pop
add
cmpsl
jb
sub
popf
dec
cld
das
bnd
xor
xor
cmp
push
shrl
mov
pusha
jle
rcrl
in
out
mov
pushf
add
sbb
xor
out
adc
inc
inc
es
sbb
ja
push
jl
mov
fmuls
fwait
dec
idiv
ret
les
std
cmpsl
pop
icebp
add
mov
mov
push
pop
sbb
cmpsl
repz
das
rol
mov
sbbl
jb
jae
movb
bound
jecxz
sub
ficoml
xchg
cmpsl
enter
flds
adc
push
mov
rcll
movsb
add
sbb
hlt
je
jle
cmp
dec
dec
sbb
mov
add
ret
inc
and
or
cmp
or
sbb
sbb
fcomps
cmpl
or
dec
adc
sub
mov
pop
inc
cmpsl
loop
iret
das
add
jno
dec
adc
ja
stc
mov
rorl
xlat
add
add
outsb
cmp
jno
jne
js
mov
lcall
mov
in
je
sub
andb
pop
pop
frstor
mov
inc
std
and
push
enter
out
fwait
xchg
sahf
and
in
cltd
dec
add
push
out
jo
scas
push
pushf
pop
pop
loopne
jmp
mov
xor
stos
cli
stos
push
mov
jmp
mov
add
sahf
insl
adc
fs
mov
int3
leave
scas
add
pushl
push
mov
aaa
push
lret
scas
fwait
pop
mov
lahf
xchg
pop
mov
testb
or
push
xor
mov
cmp
sbb
mov
jns
jl
test
cmpsb
shl
or
push
mull
and
in
stos
inc
cmpsl
push
stc
xor
sti
dec
or
scas
mov
push
mov
or
insl
mov
mov
mov
mov
cmpsb
inc
aaa
ljmp
xchg
sub
je
dec
or
repz
push
imul
push
pop
sarb
pop
addr16
hlt
shll
ret
lods
notb
das
jle
adc
lret
jp
in
and
popf
insl
xor
lret
scas
adc
stc
movsl
in
das
dec
or
push
mov
cmp
test
sahf
xor
fbld
sub
jo
mov
sub
outsl
dec
dec
and
fisubrs
pop
pop
sub
xorl
loop
imulb
sub
pop
shlb
aaa
stos
aaa
push
pop
in
sub
scas
lahf
cmpsl
sub
jl
mov
shrl
or
jae
dec
push
pop
pop
adc
lods
popf
and
out
into
loope
inc
bound
leave
xor
xor
pop
jae
sub
and
xchg
jnp
mov
pop
xchg
rol
aaa
lret
push
and
daa
adc
test
sub
jp
add
stc
jmp
popa
movsl
and
int
sub
movnti
aad
inc
pop
call
repz
cmp
aaa
sbb
mov
sub
mov
ja
ljmp
outsl
mov
dec
lea
in
out
adc
sbbb
dec
pushl
shrl
cmp
fmuls
lods
repz
mov
cmp
testb
rorl
xorb
xchg
repz
push
sub
push
jmp
or
clc
lods
inc
push
cs
or
out
aas
imul
push
jne
sub
inc
xchg
add
bnd
test
rorl
mov
xchg
pop
fimuls
pop
jns
sub
cmp
or
ds
insb
in
arpl
push
daa
mov
fldl
sbb
in
push
imul
out
cmp
push
sahf
mov
jbe
push
frstor
shr
shrb
jge
cmp
cltd
inc
das
mov
and
or
les
mov
dec
loop
xchg
out
out
lret
pusha
add
popa
mov
add
sbb
shlb
ljmp
inc
cmp
out
cltd
int
and
and
cmc
bound
and
xchg
xlat
cwtl
hlt
leave
pop
notl
cwtl
xor
pop
or
sub
aam
arpl
xchg
int
sub
cmp
xlat
shll
aad
data16
ss
cmpsl
or
pop
movsb
out
xor
cmp
ficoms
dec
fwait
gs
mov
jmp
inc
sub
add
cmp
sbb
fidivl
mov
push
dec
sbb
lret
fwait
pop
xor
add
pop
cmp
jnp
sbb
mov
inc
mov
out
imul
lret
push
mov
int
mov
pop
cmp
pop
rcl
lods
xor
adc
lcall
cmp
lods
movsb
push
sub
enter
jbe
shll
xchg
out
scas
xor
stos
pop
jns
xor
ffree
into
in
mov
cwtl
cltd
push
push
adc
sbb
push
and
cmc
push
es
mov
icebp
aad
mov
mov
mov
mov
sbb
add
jnp
andb
push
and
adc
mov
add
std
mov
add
jne
bound
jle
andnps
shll
sub
cmp
add
cmp
add
push
xor
xchg
xlat
xchg
outsl
loopne
cs
cld
cmp
pop
push
dec
je
imul
mov
sub
or
popf
pop
aad
sub
je
xchg
test
fucomi
test
push
xor
in
flds
sete
add
cli
lock
in
and
push
sti
mov
adc
or
sahf
jo
inc
push
pop
or
xor
sbb
mov
es
stc
mov
aam
jmp
sbb
pop
icebp
int
imul
cmpb
mov
mov
shl
inc
lods
adc
push
repz
or
mov
xor
lret
jno
pop
push
add
loope
test
adc
lahf
push
sbb
aam
lock
out
loop
fwait
xor
xlat
cli
shrl
jno
test
out
data16
rorl
roll
outsl
lock
cmp
repz
fisttpll
rol
fs
cmp
push
xor
rclb
pop
cli
cmpsl
xor
push
sbb
mov
lock
bound
inc
jge
rep
bound
in
pop
cmp
lret
inc
and
and
add
lds
push
lock
xchg
push
mov
sub
mov
popf
dec
pop
into
sub
xor
dec
jnp
dec
fidivrs
xchg
lds
fcoms
test
pop
pop
pop
fstpl
adc
lds
mov
and
ljmp
out
adc
scas
incl
xchg
sti
add
je
fcmovu
insl
or
jnp
dec
cmp
mov
adc
fcomps
stos
out
aaa
lods
sub
and
mov
or
push
gs
or
shl
inc
push
inc
ret
cmp
movsb
lahf
mov
push
dec
pop
pop
or
decb
sarb
insl
dec
stos
sub
and
push
xor
insb
insl
dec
and
jle
jecxz
or
mov
pushf
push
fadds
mov
loope
or
cmp
aaa
jp
popf
daa
jae
adc
xchg
pop
js
xchg
xchg
mov
or
jecxz
sti
xchg
and
inc
call
xchg
fldenv
mov
into
inc
lock
fisttpll
xlat
pushf
jmp
push
fcmovnb
inc
aam
ret
cld
xchg
inc
ljmp
pop
test
xor
sub
sbb
insl
lock
inc
jg
loop
aaa
adc
stos
leave
mov
mov
in
add
jns
pop
fisubl
mov
cmp
out
cmpsb
cmp
push
inc
outsl
in
pop
lcall
outsb
add
mov
in
fstpt
nop
push
cltd
scas
sbb
aas
mov
repnz
mov
jae
xchg
les
jo
shrb
adc
pop
mov
mov
pop
cld
cmc
or
das
pop
negl
pop
xchg
movsl
daa
lock
arpl
arpl
inc
fwait
xor
cmp
addr16
push
xchg
leave
rol
push
add
lods
dec
out
test
cmpsl
call
enter
lret
jl
jl
add
jle
pop
sbb
jb
and
dec
adc
adc
cwtl
or
mov
in
add
repnz
or
fdivr
nop
push
inc
and
ffreep
orb
pusha
adc
lods
loopne
mov
into
pop
sbb
lret
loope
outsl
div
pop
test
and
inc
jno
test
mov
fnstsw
xor
addb
into
sub
mov
outsb
inc
add
aaa
cmp
imul
int
lcall
cmp
les
and
loope
pop
push
dec
lods
stc
or
out
pushf
dec
adc
movsl
add
lcall
pop
loop
xchg
add
and
inc
rolb
pop
jmp
inc
lret
fs
xchg
and
test
scas
mov
aad
je
and
popa
stos
cmp
mov
cltd
dec
pushf
ljmp
movl
push
cmpsb
data16
jecxz
jmp
cmc
or
jmp
cli
test
jl
mov
xlat
int3
xchg
jecxz
mov
mov
arpl
leave
jo
lret
js
xlat
and
or
in
mov
pop
cmpsb
fdivs
adc
xchg
and
inc
repz
cmp
ss
jae
scas
ds
sbb
roll
cmpb
adc
inc
mov
adc
push
dec
ds
movsl
lods
pusha
arpl
fmul
in
sub
pop
in
scas
and
inc
push
or
sub
push
mov
mov
jbe
test
in
mov
cmp
xchg
das
mov
negb
and
out
cmpsl
hlt
bound
jmp
leave
je
xlat
mov
pop
pushf
xchg
or
jp
gs
dec
popa
test
pop
imul
mov
call
xchg
hlt
xchg
jmp
in
fidivs
push
mov
mov
push
int
movsb
add
daa
dec
or
inc
mov
adc
jne
pushf
or
cli
cmpsl
ret
jae
jecxz
cwtl
ret
out
mov
mov
les
outsb
mov
insl
arpl
lods
in
inc
subb
loop
cld
sbb
dec
mov
mov
dec
fwait
mov
cld
std
mov
and
jmp
jae
jno
mov
movsb
ljmp
or
in
mov
roll
sub
mov
rorl
lock
xor
mov
xor
push
mov
pop
shl
rol
lahf
or
lahf
test
pop
int3
jl
call
loopne
inc
lahf
mov
outsb
mov
inc
stc
addb
cmp
repz
ret
dec
insb
push
fnstsw
and
push
mov
jbe
jae
or
xlat
iret
xchg
xor
push
in
xchg
sub
push
jne
pop
aad
xchg
mov
incb
sbb
fidivl
fwait
sarb
add
dec
ljmp
pop
pop
int
insb
jnp
inc
pop
lret
repz
daa
inc
inc
adc
xor
aam
pop
xchg
aas
aas
ja
addl
adc
addr16
xchg
scas
add
out
enter
loop
in
pop
xor
xchg
cmpsl
sub
into
je
mov
shll
sbb
enter
jo
imul
and
inc
dec
rcll
xor
jecxz
test
hlt
movsb
pusha
sub
sahf
mov
push
mov
loopne
inc
adc
jp
jp
pop
jo
cmp
add
ss
mov
mov
adc
xchg
cmpsl
std
int3
xchg
xchg
push
hlt
hlt
cltd
lds
jecxz
fisubrs
mov
cmp
notb
mov
lock
js
sbb
push
sbb
and
js
push
pop
push
push
xor
stos
inc
pop
out
dec
fists
adc
jmp
xchg
std
mov
mov
and
addr16
push
jecxz
data16
sahf
dec
fidivs
sbb
jmp
or
dec
cwtl
inc
dec
and
in
dec
sub
mov
push
pop
adc
or
xchg
jb
out
dec
cmpsl
js
out
add
das
leave
daa
push
mov
lret
pop
sbb
mov
ljmp
mov
mov
clc
jle
sub
jbe
add
fsubs
lret
cmp
enter
aam
aam
mov
movsb
adc
mov
mov
jmp
js
lahf
sahf
imul
jns
imul
aas
fcompl
mov
movsl
xchg
jae
fisttpll
mov
stc
adc
push
inc
aam
cmp
in
in
cld
xchg
push
sub
iret
dec
xor
jne
push
pop
scas
mov
scas
or
jno
pop
movsb
adc
rclb
sar
xor
xor
mov
and
and
push
inc
cmpsl
jecxz
lds
in
gs
inc
sub
sub
mov
incl
adc
fisubrl
adc
jge
xor
fldenv
push
jne
adc
outsl
shlb
or
fistpl
stc
loopne
outsb
pop
mov
outsl
scas
add
jnp
stos
cmpsl
cmp
sbb
add
mov
pop
cmp
adc
popa
or
pushl
or
leave
sbb
inc
fidivrl
leave
adc
sbb
repz
arpl
mov
pop
push
iret
sahf
dec
cmp
ds
and
and
and
sub
or
xor
pop
add
mov
gs
pop
lret
movsb
fld
mov
mov
sbb
dec
sub
ljmp
xor
inc
sub
ds
sahf
repnz
dec
adc
sbb
stos
es
xor
cmc
shrd
in
popf
adc
adc
mov
mov
loopne
shll
into
lods
cwtl
adcb
out
xchg
add
xor
insl
pop
and
or
mov
add
mov
mov
nop
ds
dec
jne
shrl
xchg
mov
xchg
pop
lock
or
lea
add
lret
hlt
adc
das
jle
pop
mov
add
adc
es
jno
pushf
dec
scas
pusha
sub
and
xor
add
pop
push
movsl
je
gs
repnz
cmp
dec
add
xchg
push
lock
xchg
pop
inc
movsb
sub
imul
mov
daa
loopne
jp
adc
in
mov
test
std
or
sbb
sti
orb
add
fwait
and
jmp
call
mov
mov
lods
bound
jg
add
mov
jnp
bound
mov
fbld
imulb
cli
scas
shr
pusha
pop
cmc
mov
xchg
add
sbb
scas
std
int3
fiadds
in
xorl
or
insl
adc
mov
sub
push
or
rcl
fidivrl
sub
cmc
adc
pop
out
xchg
inc
stc
je
shlb
jmp
mov
imul
xchg
push
sbb
gs
add
in
loop
mov
movsb
cmp
cmp
mov
std
adcl
jnp
push
ss
bound
inc
adc
jno
test
shll
and
push
jbe
add
ds
sti
out
inc
dec
movsl
aas
sub
mov
aam
xchg
push
cmpsl
dec
mov
pop
scas
mov
dec
mov
pop
ficoms
cmp
mov
sbb
les
push
push
dec
xchg
jbe
cmp
sbb
mov
cmpsb
mov
je
sbb
jl
stc
call
cltd
rorb
sub
outsb
xchg
ror
inc
sbb
jecxz
je
fadds
mov
in
orb
rcrl
sub
and
mov
xor
and
push
sti
inc
push
sarl
mov
ds
mov
push
repz
cmc
icebp
lods
push
lret
cmp
mov
mov
sbb
ja
jb
lea
or
jo
inc
xchg
xor
sbb
xchg
dec
sbb
jae
sbb
fldenv
jb
push
cmp
test
test
lods
out
mov
dec
stos
js
adc
mov
inc
loopne
mov
imul
stc
or
xchg
scas
xor
inc
jns
rcr
jo
adc
ljmp
in
dec
cmp
cmp
lods
pminsw
stc
sbb
cwtl
es
xor
cmp
rcll
pop
mov
add
jl
jge
pop
push
mov
mov
dec
test
stc
xor
jno
test
pop
jo
sahf
stos
int
out
jmp
sbb
sub
mov
sbb
test
pop
push
or
pop
add
dec
sahf
sub
xor
mov
jl
popf
in
add
cmp
jmp
and
mov
cmpsl
aad
fs
cld
fisttps
push
mov
pushf
out
xchg
arpl
adc
lea
cmp
out
movsl
mov
jl
inc
jmp
dec
mov
inc
pop
jo
push
mov
fwait
dec
out
iret
repnz
inc
hlt
dec
cmp
jae
or
bound
stos
cmpsl
out
push
fnstenv
xchg
pop
into
inc
mov
add
out
inc
cmpsl
out
mov
frstor
scas
push
add
icebp
mov
mov
mov
mov
inc
fcmovbe
cld
incl
lahf
dec
jle
inc
dec
cmp
fs
inc
ljmp
jl
mov
mov
push
mov
pop
loop
lahf
shrb
cmp
sbb
mov
scas
jns
mov
bnd
int
mov
cld
je
jmp
mov
rcrb
out
cmovbe
mov
ficoms
sbb
test
jns
clc
jmp
lock
aas
inc
xor
push
shrl
sub
hlt
aas
inc
sbb
xchg
mov
or
test
sbb
mov
out
cli
hlt
pop
mov
mov
push
es
cmp
xor
sbb
stos
lock
movsl
dec
pop
ret
xor
fwait
push
fidivs
stos
adc
test
call
lods
sti
cli
mov
inc
mov
xchg
push
push
popf
sbb
ljmp
ss
repnz
es
repz
ds
leave
hlt
mov
inc
fnsave
mov
cli
cmp
mov
add
pushf
popf
push
push
idivl
sbb
jecxz
cli
mov
mov
cmp
inc
enter
hlt
cmp
mov
cli
ds
jo
add
mov
cmc
cmp
pop
and
cmp
cwtl
mov
mov
aas
movsb
pop
sbb
sbb
fistpl
cmp
and
jnp
hlt
mov
adc
testl
cwtl
test
inc
pop
fdivrp
cltd
sar
push
dec
adc
jno
sub
sti
in
adc
loop
unpcklps
mov
mov
sub
xor
sahf
pushl
das
or
jp
cmp
jb
or
mov
loop
daa
inc
orb
xlat
data16
add
loope
dec
call
scas
clc
out
out
pop
jns
popf
xor
imul
pusha
clc
sahf
pop
or
push
in
rcl
nop
iret
add
stc
lds
mov
mov
pop
inc
sub
dec
cwtl
andb
aad
pop
push
lidtl
jbe
fwait
push
or
into
or
popl
scas
sbb
sbb
ficomps
pop
out
test
adc
fstpl
insb
xor
icebp
outsb
lods
cmp
sub
test
cmp
mov
fsubp
movsl
pop
popa
inc
inc
scas
punpckhwd
cmpsl
mov
mov
jo
addr16
adc
nop
push
js
in
xchg
mov
lahf
insb
fidivrs
test
stos
jmp
in
sub
pop
lret
add
inc
mov
and
cltd
dec
pop
and
insl
xor
lods
xchg
sub
or
push
cs
out
pop
jb
push
adc
popf
clc
loope
cmpsl
xor
test
movsb
fdivs
jg
jnp
mov
roll
adc
and
xor
les
aam
in
hlt
push
test
jae
arpl
mov
adc
and
xor
les
aam
in
hlt
push
test
jae
arpl
in
je
add
xchg
repz
xor
inc
add
xor
and
push
test
jb
arpl
mov
adc
and
xor
cld
jle
in
andl
imul
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
std
sub
cmp
or
sbb
ds
sbb
mov
cmp
lret
std
sub
cmp
or
sbb
dec
lea
stos
insl
mov
cmp
lret
in
hlt
cmp
or
sbb
lea
xchg
dec
out
cli
xor
sahf
inc
scas
pop
ficoml
mov
mov
sti
mov
out
aam
adc
and
inc
cmp
jl
adc
sbb
xchg
xchg
lods
test
inc
sbb
pop
inc
fisubl
sub
add
adc
cs
mov
cmp
dec
fldt
push
inc
gs
pop
cmp
xor
std
cmp
jmp
push
mov
insb
scas
push
mov
or
push
fsubrl
test
mov
or
out
stos
mov
lds
sub
mov
or
outsl
inc
mov
test
adcb
and
jle
sbb
sub
cmp
or
sbb
dec
xchg
pop
fs
jne
inc
mov
ljmp
xchg
inc
mov
mov
add
lea
jge
add
cs
hlt
cmp
dec
pusha
mov
mov
mov
push
popf
and
or
pop
fmull
cmp
mov
orl
push
lods
jp
dec
lea
stos
insl
mov
cmp
lret
std
sub
cmp
or
sbb
dec
lea
stos
insl
mov
cmp
lret
std
sub
das
clc
mov
insb
lahf
sbb
sub
fadd
les
push
cmp
fdivp
adc
push
out
cs
jle
sbb
fstps
mov
lcall
xor
xchg
scas
ss
mov
mov
or
daa
jbe
adc
xchg
leave
mov
xchg
faddp
pushf
add
test
sbb
mov
xchg
fcmovnu
jae
inc
xor
adc
mov
add
test
hlt
xor
call
sub
xchg
mov
lods
inc
sarl
jp
xchg
mov
sbb
in
iret
push
mov
add
and
movsb
push
ja
pop
aaa
pop
jb
mov
sub
addl
sub
jmp
push
xchg
or
mov
cmp
rcr
sub
mov
sbb
fprem1
or
loopne
adc
xchg
popf
inc
mov
iret
cli
cs
inc
or
push
testb
mov
int
sub
popf
xchg
xor
sbb
out
clc
inc
pusha
mov
std
lds
imul
xchg
mov
jae
jne
stc
push
out
test
dec
jne
test
mov
mov
test
pop
cmovo
jo
mov
push
imul
sbb
jmp
aad
mov
sarl
ror
sub
push
sbb
xor
scas
imul
jmp
mov
or
in
ffreep
add
movsl
in
scas
mov
jbe
stc
mov
movsl
aaa
repnz
cmp
daa
fs
in
mov
stc
mov
adc
or
test
test
fistps
popf
jmp
xchg
testb
data16
gs
gs
sub
push
dec
ja
lock
sbb
xor
pop
jb
repnz
fwait
jecxz
test
loope
jg
jmp
and
ficomps
pop
pop
xchg
and
stos
lds
int3
push
xor
mov
repz
in
xchg
pop
cmp
insb
mov
enter
lods
and
je
add
nop
icebp
aam
push
stos
or
scas
ret
movsb
enter
inc
push
imul
outsl
and
mov
imul
mov
jne
mov
pop
sbb
mov
imul
pop
fwait
dec
inc
sbb
jns
addl
inc
add
adc
jmp
mov
adc
lret
inc
es
lea
sbb
loope
aam
jnp
mov
push
dec
stos
rcl
or
sub
xor
fists
test
push
inc
jb
stos
push
pusha
in
popa
scas
jg
sub
mov
push
pop
mov
stc
test
fwait
add
test
and
cmpsb
pop
or
sbb
je
sbb
sarb
sbb
or
dec
sbbl
rcl
js
dec
xor
int
scas
xchg
pushf
int
push
xor
in
push
aaa
adc
pop
pmaddwd
and
pop
stos
cltd
fistps
or
sbb
testb
sub
rclb
cmp
cld
sub
scas
mov
mov
xchg
pop
and
cmc
push
push
pop
popa
jae
and
ds
jno
lea
cli
push
daa
and
in
in
mov
xchg
mov
mov
mov
nop
fnstcw
subb
and
fidivrs
jnp
cmpsl
lods
icebp
mov
pop
inc
adc
xchg
xor
push
ss
outsl
decl
sbb
icebp
xor
shll
repz
je
lods
movsb
pop
adc
int3
xor
dec
ret
inc
and
sub
lret
lret
or
movsb
out
xlat
sbb
mov
cmp
pop
xor
stos
dec
xor
shr
cmp
pop
scas
outsb
roll
in
mov
jecxz
jecxz
mov
subl
clc
int
xchg
xor
loope
imul
xor
loope
addl
std
shll
je
arpl
cmp
cltd
push
sub
daa
and
mov
imul
lods
jno
sbb
jne
xor
sbbb
popl
ja
sub
pop
xor
mov
leave
fists
cmp
rorl
xchg
fnstcw
push
push
push
xchg
popl
popf
out
subb
mov
jbe
mov
lods
iret
sub
or
sarl
mov
push
mov
scas
sbb
sbb
mov
insb
fistpl
cmpsl
cmpsl
sbb
lock
aad
sbb
mov
xor
lods
and
out
in
nop
xchg
adc
int
add
adc
sbb
pop
jp
std
test
call
cmpsb
data16
push
and
mov
and
lock
cmp
test
adc
and
testl
lret
and
push
pop
jmp
jo
fmuls
sub
xchg
adc
clc
scas
pop
push
push
movsb
or
sbb
stos
pop
ja
mov
mov
sarb
lock
aad
dec
adc
xor
sbb
in
jmp
stc
or
or
cmpsb
leave
rcr
iret
jle
sbb
xchg
pop
mov
popf
mov
adc
test
and
dec
fildl
jmp
shl
and
repz
ja
call
sar
mov
test
and
lea
mov
outsb
push
push
dec
movsl
and
jmp
push
jl
aam
js
push
xor
aaa
cs
sarb
adc
jae
les
call
es
xor
lds
out
insb
testl
xor
movsb
or
fs
push
fnstcw
aad
jecxz
jle
and
mov
jg
mov
scas
hlt
dec
pop
or
mov
scas
loopne
adc
sub
in
mov
add
mov
sub
mov
lds
cmp
dec
jbe
lods
inc
cmc
and
inc
mov
jb
js
test
int3
nop
or
mov
fisttpl
xchg
mov
jnp
jmp
subl
pop
outsb
aam
push
push
push
shlb
xchg
filds
jae
inc
out
outsl
out
shrl
and
sbb
ds
add
sbb
cmp
or
lahf
cmpb
xchg
aaa
test
jns
lock
sbb
dec
pop
inc
lret
mov
jo
sbb
sbb
popf
lds
mov
mov
or
cmp
frstor
cld
mov
movsb
and
push
ja
adc
cmp
xor
rclb
and
push
sub
jo
lock
jp
mov
adcb
pushf
adc
pshufw
cmp
jmp
add
adc
or
pushf
les
imul
xchg
cmpsb
or
cmp
dec
push
dec
add
unpckhps
cli
xchg
enter
mov
push
pop
push
notl
add
jg
mov
aad
je
xchg
xchg
int3
mov
int3
jmp
movl
mov
es
arpl
lret
aaa
lods
xor
aaa
cmc
adc
jo
or
jae
jle
enter
movsb
decl
jmp
cmp
in
xchg
adc
clc
push
int3
xor
enter
lret
mov
mov
out
lret
fxch
add
cs
lret
imul
call
fwait
rclb
mov
hlt
and
mov
adc
cmp
dec
cmpsl
cmp
fmuls
jp
push
cmp
jmp
dec
imul
sub
lods
fdivrs
out
and
mov
push
xor
mov
hlt
mov
dec
decb
mov
comiss
cmpsl
scas
mov
jae
dec
push
inc
pop
adc
xchg
and
xchg
mov
ret
rclb
cmp
and
inc
and
mov
push
sbb
mov
inc
cmp
jo
jmp
mov
clc
push
jno
movsl
rol
fwait
inc
popf
mov
outsb
jb
push
push
add
inc
xlat
sbb
lea
mov
adc
sbb
pop
push
scas
or
jae
das
add
dec
mov
push
inc
inc
clc
xor
enter
sub
jnp
xchg
insl
mov
adc
fdivs
fmull
imul
rorl
in
bswap
nop
cwtd
sti
dec
loopne
push
aad
aas
adcb
cmc
fidivrl
pop
out
rep
stos
mov
insb
sub
mov
pop
ljmp
mov
mov
sub
mov
mov
push
add
add
rclb
push
mov
push
aam
xchg
sbb
and
das
adc
add
hlt
jmp
dec
xor
loopne
xor
xlat
cmpps
fmull
addb
and
aas
and
frstor
sar
sbbb
xchg
outsb
aam
adc
sub
aad
cmp
push
test
and
jno
xchg
int
and
or
fcomps
test
mov
mov
leave
outsb
int3
push
lcall
aas
fs
shl
movsl
cmc
sub
shlb
mov
daa
aam
lods
jns
push
xchg
xchg
shll
rcrb
out
push
xchg
hlt
imul
cmp
push
cmpb
outsl
jg
adc
lods
int
out
stos
cmp
sbbb
cli
and
push
adcl
dec
push
popf
pushf
jmp
imul
cmp
xchg
iret
add
cmp
mov
xor
push
aaa
cmc
insl
ret
fldenv
sahf
pop
pushf
lods
mov
fwait
lret
lret
mov
mov
adc
in
mov
jle
lods
add
stos
dec
jne
mov
stc
testl
xchg
jo
outsl
scas
dec
cwtl
mov
jae
xor
int
addb
sbb
addr16
or
mov
aaa
ljmp
out
adc
andb
dec
mov
in
stos
xchg
inc
cwtl
mov
sub
push
fdivr
sub
dec
xor
shrl
push
or
dec
mov
mov
ja
inc
cmp
or
pop
cmp
les
test
stc
iret
xor
sbb
adc
cmp
inc
sbb
mov
stos
cmp
pop
fdivs
mov
cmc
roll
jmp
sbb
mov
in
or
fmuls
das
jge
bound
add
lods
push
lret
inc
xchg
pop
pop
sub
push
and
out
mov
mov
or
mov
enter
lds
lods
inc
inc
lock
fldlg2
lea
out
es
mov
inc
xchg
adc
add
subb
leave
inc
push
ret
cmp
xor
stos
inc
out
ret
loope
stos
push
lea
jge
outsl
lods
jae
add
lds
sub
cld
inc
rolb
js
or
jmp
sbb
xor
mov
arpl
jge
inc
or
sbb
mov
adc
fstl
mov
lahf
ret
fidivrl
adc
icebp
mov
mov
push
push
or
mov
mov
aas
jbe
repz
outsb
pop
pop
jl
jg
xlat
rcrl
mov
insl
cmp
push
cmp
push
inc
fwait
out
xor
sbb
sub
adc
add
out
or
cmc
xor
call
lods
cmp
test
pop
push
je
stos
and
mov
cwtl
adc
cmp
imul
xor
popa
push
or
xchg
cltd
test
dec
ds
arpl
test
adc
inc
inc
in
push
mov
pop
popa
rolb
js
ret
push
add
cmc
lahf
cmp
mov
xchg
ljmp
lock
out
mov
xchg
adc
cmpb
mov
xor
aas
call
xchg
mov
and
cmp
xchg
pop
lods
movsb
xchg
or
pusha
or
cmc
push
xchg
jmp
bound
push
dec
cld
xor
jno
lock
repz
and
fldcw
inc
cwtl
sbb
add
rcrl
fbld
cmpsl
pusha
add
insl
and
mov
sbb
je
inc
pop
mov
out
sub
es
cmc
outsl
xchg
sbb
and
cmc
pop
xor
mov
cmp
aad
in
cltd
test
imul
je
mov
stos
sbb
ret
xor
lea
mov
loop
pop
mov
xchg
adcb
fwait
movsb
mov
mov
insl
mov
mov
cli
clc
subl
jb
in
inc
sahf
mov
jecxz
js
jecxz
cmp
pop
jge
mov
dec
xchg
pop
jmp
mov
sbb
call
out
lahf
mov
or
out
push
sbb
add
mov
xchg
push
mov
or
mov
mov
mov
pop
pop
sarl
jge
into
sar
popa
dec
push
rcrl
add
adcl
fistps
ds
mov
ss
je
or
ret
pop
les
and
pop
push
xchg
fstps
fidivs
cmp
out
mov
xchg
mov
les
sbb
aas
notl
leave
push
pop
xor
ljmp
push
inc
imul
pop
mov
add
sarl
sbb
inc
cmpsl
xor
jl
push
adc
and
add
sbb
mov
lcall
or
ljmp
mov
stos
sub
adc
cs
or
mov
add
pop
repnz
mov
mov
adc
xchg
lods
fistpl
cltd
mov
stos
or
insb
enter
inc
scas
mov
test
enter
in
pushf
pop
mov
pop
test
inc
mov
notb
inc
push
int3
ret
sub
push
cld
aad
sub
mov
mov
test
sbb
out
int3
or
mov
icebp
jmp
xor
pop
sbb
dec
cmp
cld
sub
or
or
xor
addl
int3
ja
inc
jne
jnp
outsl
mov
hlt
out
imul
pop
adc
rolb
push
sub
dec
dec
jl
sbb
sar
ret
jbe
rcrb
or
add
orb
fnstsw
or
rolb
cmp
leave
lcall
or
push
cmp
test
lret
stos
dec
pop
mov
cwtl
clc
or
je
scas
dec
sbb
stc
add
push
mov
mov
or
inc
push
and
or
mov
lock
inc
test
and
xor
push
dec
xchg
iret
push
pop
loopne
cmp
fistl
jno
int
push
pop
cmp
xor
jns
loop
lods
cmp
stc
xor
jb
fldcw
dec
loope
mov
xor
lret
mov
jo
fcoms
lock
and
cmpsb
push
lret
pop
fucomp
adc
out
pop
push
test
mov
out
cltd
pop
pop
stc
xchg
ljmp
jae
pop
mov
in
std
xor
rorl
lret
arpl
popf
mov
cmp
cmp
outsl
or
jmp
sarl
xchg
sahf
jecxz
lods
movsl
inc
mov
scas
orb
les
jae
mov
and
or
or
mov
push
fildll
test
add
sub
push
cmpsl
fildl
and
sub
sbb
test
jmp
fs
jb
fldl
cmp
xlat
out
push
into
cmp
push
mov
sbb
adc
xchg
repz
ljmp
xor
sahf
mov
mov
mov
aas
fdivrl
sub
daa
sbb
inc
mov
adc
jecxz
jne
or
popf
into
mov
xorb
xchg
rolb
repnz
lret
bound
push
cmp
int3
data16
sbbb
aaa
int3
ja
in
push
mov
aaa
push
test
rcrb
in
int
insl
loope
jg
dec
vmovupd
sarb
hlt
mov
xor
adc
pop
add
xor
add
xor
aam
sub
std
or
ds
clc
pop
and
dec
insl
repz
mov
aas
xchg
aaa
mov
mov
int
lods
mov
js
lea
shrb
je
cmp
dec
adc
stos
in
jp
loopne
lock
mov
test
imul
dec
push
lods
sbb
dec
xor
aas
push
jb
mov
push
sub
int3
sahf
push
fidivrs
or
andl
repnz
pop
push
mov
and
lods
add
lods
rorb
sbb
aas
mov
or
push
mov
xbegin
ret
jecxz
push
cmpb
adc
sub
dec
ss
pop
fyl2x
sbb
pushf
push
pop
in
repz
fidivl
mov
jno
sti
sub
stc
pusha
aas
add
or
stos
xchg
jle
clc
ficompl
sub
icebp
fs
mov
gs
dec
add
sbb
sbb
cmp
stos
sahf
add
jnp
andl
add
mov
jb
leave
gs
out
out
mov
or
jae
dec
jbe
adcb
mov
xchg
xorb
mov
jecxz
jns
mov
insl
xchg
cmp
mov
dec
add
pop
movsb
testl
es
fidivs
mov
out
stos
fstpt
xchg
dec
jmp
fs
nop
jmp
sbb
andl
push
leave
mov
jo
mov
sbb
loope
shr
notl
add
adc
insb
int
jg
loopne
fnsave
test
push
inc
clc
cmc
pminsw
dec
dec
ss
sbb
adc
mov
repz
in
cli
mov
out
mov
jg
popa
push
aas
mov
jecxz
xchg
mov
mov
shll
stc
dec
mov
jo
inc
data16
pop
jg
ja
push
push
mov
fcmovne
shrb
mov
mov
mov
mov
or
rcl
jle
fldcw
int
repz
enter
fadd
icebp
xchg
stos
cld
sbbb
in
and
push
xor
pop
xor
gs
mov
add
out
dec
cmc
sahf
adc
cmp
xor
std
lds
jo
ja
push
call
nop
mov
jecxz
and
sub
or
mov
loop
adc
xchg
cwtl
sbb
mov
inc
mov
arpl
out
jbe
jecxz
je
ffree
inc
mov
xchg
jmp
popf
fsubrl
das
add
adc
cli
cmpsb
nop
mov
pop
aad
pop
cmp
push
lods
lahf
out
fwait
popa
mov
dec
repnz
dec
out
pop
repz
outsl
adc
pop
xor
shrb
add
jo
cli
dec
nop
sti
hlt
push
imul
ror
imul
pusha
sub
mov
scas
das
outsb
pop
arpl
mov
inc
fnstenv
push
jne
in
fwait
and
cmpsb
ja
inc
lret
jmp
cmp
insb
mov
mov
or
loopne
sub
xchg
arpl
repz
jp
push
xor
jg
out
xchg
insl
xor
rcr
out
jnp
stc
das
adc
dec
xor
push
addr16
or
popa
lahf
cmc
out
push
sahf
ret
push
sahf
cmp
xchg
pop
pushf
mov
and
movsl
std
repnz
mov
jp
pop
aam
rorl
cmpl
and
stos
mov
testb
pop
push
fdiv
inc
lods
jge
leave
mov
es
jp
xchg
dec
inc
sbb
stos
mov
pop
jge
xchg
jl
jmp
lods
call
pop
fsubrl
add
cmpsb
iret
jecxz
pop
xorl
data16
lods
or
cwtl
ret
loop
sbb
aad
adc
or
jbe
aam
inc
arpl
repnz
push
std
and
fwait
cmp
fimull
jg
add
push
sub
lods
lret
pop
and
dec
and
adc
imul
sub
bound
sub
xor
sub
or
pop
cmp
aad
das
mov
insb
mov
leave
cmp
cwtl
sub
les
sbb
cli
pop
mov
pop
int
cmc
cs
cmp
pop
or
and
pop
mov
inc
push
lods
xchg
mov
cli
xchg
xchg
jo
mov
fnstenv
and
sti
sub
xor
arpl
sbb
ss
out
cmc
and
fmuls
jecxz
flds
or
mov
mov
loopne
push
pushf
rclb
inc
pop
popf
add
sbb
fdivrs
sbb
icebp
cld
cld
sub
push
mov
loope
sbb
jle
sub
outsl
popa
orl
xchg
lahf
mov
cmpl
or
sbb
dec
lea
stos
insl
mov
cmp
lret
std
sub
cmp
or
sbb
dec
lea
stos
insl
mov
cmp
lret
std
cs
cmp
or
sbb
dec
lea
stos
insl
mov
cmp
lret
std
sub
cmp
or
push
mov
lret
adcb
testl
repnz
pop
loope
icebp
daa
sbbb
iret
addr16
call
jno
add
adc
shrl
loope
icebp
cmp
or
repnz
call
jno
fs
xor
jno
inc
loope
icebp
and
pop
mov
inc
jecxz
mov
mov
dec
jmp
loope
or
es
xor
aam
sub
adc
int3
mov
fiadds
rcrl
jl
xchg
xlat
sbb
sub
cmp
push
pop
scas
daa
sahf
lds
decl
cltd
add
adc
xor
pop
or
jb
inc
pop
push
mov
mov
in
sub
test
js
mov
cmpb
int3
mov
xchg
hlt
cmp
push
popa
xor
push
cmp
push
lock
int
enter
test
rcrl
pop
into
mov
cmp
inc
pop
push
daa
adc
mov
mov
into
mov
loope
icebp
sub
adc
shlb
mov
and
test
mov
inc
in
les
mov
call
add
jne
push
std
push
in
push
js
push
xchg
dec
ret
je
dec
lahf
cli
and
and
fildl
adc
dec
mov
sub
clc
inc
call
jno
add
xor
push
icebp
cmp
or
fsubs
jno
add
xor
stos
stc
add
add
cmpsl
notb
push
fwait
dec
es
cmpsb
add
sbb
lcall
push
loope
jge
in
mov
xor
push
lods
stos
sbb
outsb
jge
dec
and
packuswb
jle
xlat
inc
sub
pop
mov
repnz
pop
pop
pushf
ja
sub
pop
xor
cld
cmp
popa
cmp
mov
add
xlat
pop
das
adc
hlt
push
lock
loopne
dec
bound
std
pop
mov
xor
movsl
lret
lock
mulb
cmp
movsb
jg
insb
outsb
jg
pop
sub
daa
or
cmp
mov
cmp
cmpsb
adc
mov
andnps
sahf
fcom
xor
xor
jnp
inc
sbb
sbb
sbb
xor
popf
or
xor
sub
push
mov
ret
aad
or
mov
mov
pop
das
sbb
adc
mov
and
xchg
cwtl
inc
cmc
fnsave
das
mov
mov
or
add
or
xor
lcall
push
bound
nop
pop
inc
jnp
adc
sub
fistps
pop
mov
bound
mov
nop
shll
cmp
dec
and
clc
add
iret
loop
fs
push
push
dec
rcl
pop
das
movsl
addr16
mov
xchg
xchg
scas
adc
test
jns
adc
fisttpll
xor
jmp
xchg
xchg
sub
jno
les
ja
ret
push
push
fistpl
in
pop
lcall
push
rep
adc
xlat
lods
sbb
ficoms
popa
or
imul
sarb
lcall
add
pop
rolb
stc
loope
aam
cld
mov
cmc
mov
test
push
ja
scas
movsb
push
je
mov
cmp
push
dec
int3
leave
jle
mov
add
pop
popf
push
jecxz
lea
popf
xchg
xchg
fmull
and
mov
hlt
pop
mov
xlat
xchg
stc
shl
mov
mov
shll
out
pop
adc
or
loopne
orl
sbb
mov
sahf
xchg
fidivs
mov
pop
jle
dec
jne
fwait
mov
aad
jl
jg
icebp
aad
adc
and
bound
clc
fwait
mov
cmp
popa
xchg
push
pop
imul
loop
push
xor
adc
inc
jnp
pop
xchg
popf
dec
xchg
jb
je
xchg
popa
push
rcr
pop
iret
jo
jg
out
adc
lcall
test
mov
sar
repnz
cli
and
jnp
or
in
je
lahf
push
outsl
push
mov
shll
or
outsb
into
int
cmp
xor
mov
cmp
sub
xchg
jmp
adc
xchg
mov
pop
cmp
scas
mov
push
xchg
imul
or
hlt
test
and
adc
push
or
pop
lds
cmp
jp
bts
mov
in
fbld
subl
xor
jp
pop
pop
fsubr
sbbb
enter
shrl
roll
and
jge
mov
pop
andb
jne
scas
sub
sbb
pop
daa
orl
cmp
adc
mov
and
jne
call
sub
mov
sbb
mov
ss
je
jne
orb
loopne
and
mov
outsb
add
mulb
stc
inc
sub
jmp
andb
jnp
jmp
xchg
xor
outsl
dec
push
scas
jnp
cli
scas
mov
or
out
subb
shl
fsubs
mov
sub
addr16
inc
mov
mov
mov
xor
add
cld
test
mov
pusha
inc
cmp
enter
in
aaa
das
loope
and
pop
push
cld
dec
pop
pop
rep
inc
jmp
push
test
shll
aad
add
mov
jnp
pop
dec
xorl
pop
adc
jb
mov
xchg
xor
jg
cltd
shr
jnp
dec
push
mov
sub
dec
push
jg
aaa
mov
mov
and
xchg
sahf
aaa
ss
add
and
in
pop
pushf
push
sbb
jo
push
ret
mov
push
iret
or
sub
scas
inc
dec
es
lret
add
jmp
cmp
push
in
push
loopne
xor
mov
hlt
ljmp
notl
add
cmp
jnp
ror
lahf
mov
jmp
nop
and
paddw
cmpsl
xor
shr
xchg
push
mov
add
jb
cmpsb
dec
test
mov
xor
xchg
aad
cltd
fmuls
sar
mov
lds
cs
out
int
push
popa
add
or
dec
xor
mov
mov
mov
xor
or
and
ret
mov
inc
pop
hlt
mov
or
mov
fwait
lock
sbbl
pusha
jno
push
pop
dec
pop
add
insl
inc
fimuls
iret
mov
dec
data16
mov
adcl
movsb
xor
pop
pop
das
mov
shld
fisttpl
pop
sub
test
sbb
jge
out
pop
dec
mov
cmp
and
mov
je
cli
xchg
add
insb
in
repz
daa
sub
les
sub
xchg
lea
xor
out
fnstcw
loopne
jl
pop
je
xchg
sub
mov
lret
jns
arpl
rclb
arpl
clc
andb
ror
push
and
mov
jl
repnz
loop
xchg
loope
add
fdivl
imul
push
adc
mov
inc
in
xor
cmpsb
mov
push
cwtl
mov
leave
lcall
outsb
mov
sub
and
ja
pop
fs
mov
mov
dec
add
pop
and
mov
int3
outsb
clc
add
dec
outsl
adc
and
sbb
jns
shlb
insb
jns
adc
adcb
iret
shll
and
push
call
fcomps
xor
aaa
inc
dec
popa
xor
es
leave
loope
mov
cli
inc
jno
outsb
sbbl
xchg
addr16
mov
and
fiadds
out
ficompl
dec
cs
xor
sub
and
jmp
pop
mov
rorl
xchg
out
mov
push
scas
and
add
and
mov
jo
mov
mov
orl
jbe
int
pop
rcll
xor
mov
dec
daa
aaa
lahf
dec
pop
inc
fistps
ja
jl
fwait
or
stos
pusha
inc
cwtl
sub
sbb
and
sahf
rolb
imul
cmp
mov
pop
loope
pop
push
fcomps
sbb
push
mov
mov
or
xor
mov
xchg
mov
in
lea
jno
aam
push
shlb
out
stos
adc
dec
add
int3
icebp
push
in
sbb
mov
cmp
xor
mov
add
cltd
addr16
xor
loope
test
das
orb
cwtl
and
add
add
cmpsl
movsb
cli
cs
mov
cmp
fisttpll
repnz
loope
sub
into
lds
push
inc
idiv
pop
fnsave
std
nop
push
imul
cmpl
inc
jb
cwtl
push
pop
fisubrs
xchg
rcr
sub
stc
sub
cmp
push
cs
ret
pop
sub
mov
adc
sbb
lcall
ds
cmp
rcl
enter
pusha
lods
mov
lea
inc
mov
inc
imul
cmp
ret
les
pushf
outsb
mov
insb
sbb
push
cli
push
mov
ljmp
dec
cltd
fidivs
inc
gs
fs
xchg
inc
stos
in
jg
punpckldq
pusha
or
jmp
std
mov
sarb
pop
sbb
fbstp
cmp
imul
push
push
pop
stos
mov
xor
imul
out
aaa
lret
mov
call
pop
cmp
rcrb
mov
jnp
out
je
clc
mov
mov
imul
and
aam
mov
or
fs
std
xor
pop
sbb
add
test
ret
fwait
loopne
pop
fnsave
sbb
or
mov
bound
loope
jae
pop
dec
cmp
xor
stc
or
loop
jl
out
ss
add
or
test
push
test
push
adc
lods
xchg
sbb
outsb
sub
jecxz
mov
jne
xchg
fisubs
push
jnp
insl
daa
in
leave
in
jmp
lea
ja
add
mov
cld
cmpl
sub
push
ljmp
imul
xor
push
jo
jecxz
inc
jnp
punpcklwd
jnp
pop
into
xchg
and
push
test
flds
movsl
sub
mov
les
repz
inc
lea
jb
pop
fs
push
jmp
daa
add
inc
dec
jno
ja
in
cmpsb
leave
adc
outsl
mov
jmp
jp
push
aad
adc
call
and
xchg
sub
xchg
lods
test
add
mov
aaa
and
mov
mov
jp
mov
push
pop
test
cmp
jne
cli
dec
push
pop
scas
mov
jae
inc
and
sub
mov
sbb
mov
mov
and
lods
mov
ss
stos
sub
imul
stc
fucom
xor
push
mov
jne
pop
loopne
push
insb
xor
push
lcall
inc
popf
xchg
xchg
cmp
loopne
mov
divb
dec
sub
dec
and
mov
inc
cltd
and
cmp
pusha
mov
out
dec
aad
push
cmp
push
mov
movb
sub
xor
and
aam
shr
aad
lcall
test
push
sub
pop
daa
das
mov
icebp
jne
enter
xchg
push
fnsave
lret
inc
int3
dec
jge
and
pushf
add
test
loop
loopne
jo
nop
adc
ja
insb
in
adc
jg
fcomip
mov
fidivrs
mov
pop
cli
sbb
rcrl
or
cmp
jmp
pop
jg
repnz
ficompl
lods
sub
inc
xchg
xchg
jb
and
fistps
stc
data16
mov
shll
stos
cmc
mov
repnz
jae
inc
xor
mov
nop
xorl
notb
cld
int3
add
pop
mov
and
inc
movsl
or
xchg
movsb
aad
in
mov
cltd
sub
cltd
adc
shrb
scas
repnz
je
addr16
cltd
xor
push
mov
jnp
out
int3
or
and
mulb
add
sub
jbe
inc
or
arpl
loop
add
jp
inc
je
adc
push
ret
dec
jge
push
jp
xrelease
out
cld
mov
in
test
mov
ljmp
data16
cmp
shr
outsl
lcall
mov
mov
das
popf
sar
shll
xchg
mov
loop
in
outsb
outsl
les
mov
xor
pop
fdivr
pusha
inc
aad
addr16
daa
test
jp
mov
jnp
xchg
cwtl
cld
push
pushf
cs
adc
outsb
imul
jns
int
mov
add
in
icebp
rolb
aam
das
push
inc
push
movsb
leave
pop
pop
pop
pop
dec
adc
or
loop
add
scas
add
sub
push
inc
mov
fwait
out
push
es
xchg
call
lods
sbb
sub
cmp
in
out
ret
pop
imul
sbbb
movsl
jb
cmp
shrb
imull
xlat
or
mov
cmp
xchg
js
dec
xchg
pop
jno
je
xchg
ret
cmp
dec
sbb
insl
outsb
jnp
jle
sti
notb
cmp
adc
adc
pop
stos
icebp
push
sub
subb
xchg
push
outsb
cmp
push
dec
pop
mov
insl
push
bound
call
push
dec
cmpsl
lcall
jne
mov
or
and
add
je
movsl
je
orl
push
loope
fs
and
ss
rcl
dec
inc
sahf
mov
sub
sub
xor
aam
mov
je
and
push
push
adc
sub
fisttpll
mov
das
aas
cmpsb
jmp
and
pop
sub
fdiv
iret
sub
iret
xchg
adc
jmp
mov
cli
lds
mov
sbb
inc
and
mov
mov
incb
sub
jo
and
in
sub
mov
dec
mov
xchg
sub
js
mov
stos
test
push
and
add
add
inc
ds
jp
push
pusha
xor
dec
shlb
mov
jmp
and
movsl
repz
scas
das
mov
fcomip
or
push
data16
xchg
ja
add
jbe
jns
pop
test
push
testb
lret
int
sub
inc
mov
pop
push
push
dec
sub
jae
fs
jbe
mov
xor
pop
pop
loop
inc
push
gs
sub
rclb
pop
scas
pop
nop
adc
lods
pop
inc
stc
call
and
testl
sub
mov
lcall
mov
mov
mov
int3
or
cmp
ret
iret
and
push
adc
pop
cmp
lods
dec
push
mov
es
clc
aaa
mov
mov
or
jle
cmp
rcl
and
mov
cmc
xchg
pavgw
xor
dec
push
in
sub
lret
loop
inc
lods
ficoms
pop
insb
mov
dec
sbbl
cmp
imul
repnz
notl
test
push
flds
icebp
dec
push
push
or
xchg
ljmp
or
pop
push
arpl
rsqrtps
pop
movsb
dec
jnp
jae
shlb
scas
mov
dec
movsl
jbe
out
push
xchg
fchs
clc
and
inc
cli
inc
jle
jg
cmp
cwtl
scas
std
pop
vpavgb
loop
inc
mov
out
xor
addr16
xchg
adc
in
mov
xor
jnp
push
jb
jbe
fwait
data16
iret
lahf
sti
cmp
divl
push
fwait
lods
ja
lds
pop
sbb
lea
mov
sub
out
mov
xor
hlt
iret
dec
jo
sbb
sub
movsl
xchg
fisttpl
mov
roll
fs
cmp
pop
inc
mov
enter
xchg
rcrb
xor
wrmsr
aad
inc
dec
sub
and
cmpsb
sarb
fidivs
shrl
fstps
lds
rclb
push
mov
cld
inc
xchg
push
std
imul
outsb
aad
fidivl
mov
mov
mov
push
xor
pop
arpl
shr
mov
mov
lea
sub
and
inc
cmp
movsb
ja
sub
test
sub
push
dec
sbb
jl
push
pusha
cmp
push
lahf
pushw
ja
inc
lret
jg
sbb
int3
jne
pop
xchg
inc
xchg
lock
mov
push
scas
xchg
mov
push
sub
and
pop
push
pop
fisttps
pop
lock
mov
dec
leave
mov
cmp
fmuls
scas
mov
jo
scas
xlat
inc
out
and
dec
lret
fisttps
pop
sub
rcl
rcr
incb
push
xchg
mov
sbb
outsl
sub
push
push
sub
je
nop
fsubl
xlat
out
roll
clc
lea
mov
sub
sti
test
xchg
push
cmp
fstl
dec
xor
out
loopne
int3
sub
mov
cltd
pop
sbb
mov
ret
loopne
outsb
pop
lds
cld
or
cmc
rolb
jg
adc
popf
mov
imul
sbb
xchg
push
fadd
mul
mov
lret
imul
lcall
sub
and
add
xor
hlt
xlat
xor
xor
lcall
not
add
xchg
rcll
inc
sbb
iret
push
pop
adc
push
mov
mov
pusha
test
mov
icebp
shrb
in
neg
pop
ja
ss
jecxz
inc
jl
xor
mov
rclb
adc
aad
xchg
hlt
dec
xchg
mov
sub
ret
mov
xlat
sbb
push
outsb
enter
faddl
ds
test
lods
lcall
inc
pop
hlt
jns
arpl
bound
sahf
arpl
mov
pop
shrl
gs
sub
cmp
xchg
sub
in
int
in
cmp
aam
mov
push
mov
cmp
test
lahf
push
and
cli
mov
sbb
cmp
loope
js
xchg
aaa
shrb
clc
mov
hlt
lcall
push
loope
jb
in
rcrl
xor
jp
push
mov
mov
shl
mov
lret
loopne
mov
jp
xor
test
insb
imul
add
fsubrs
cltd
and
add
cmp
lea
jbe
or
adc
shrb
stos
shrb
push
adc
inc
mov
cmp
shr
mov
aad
lcall
test
mov
push
rcll
inc
push
dec
fisttps
cld
jo
cld
jae
pop
sbb
fstpl
sbb
add
int
rcrb
jg
push
dec
push
and
adc
fmuls
std
xor
iret
jno
ds
imul
push
mov
repnz
std
xchg
mov
int3
out
add
and
out
cld
pop
jle
inc
jle
stc
xor
ret
cwtl
in
sbb
lea
stc
pop
rcrl
and
xchg
outsl
shlb
pusha
cmp
pop
int3
xchg
hlt
cmpsb
dec
jbe
or
orl
lcall
out
jnp
push
mov
popa
add
loopne
lea
imul
inc
enter
jmp
outsb
pop
pop
outsb
sub
pop
and
test
dec
inc
out
cltd
sbb
mov
inc
fdivrl
push
and
scas
mov
mov
mov
adc
call
frstor
dec
add
mov
aaa
outsl
xchg
pop
fmulp
push
push
loopne
clc
test
fistpll
pop
or
jb
dec
mov
mov
dec
sub
dec
push
int3
stos
mov
jmp
hlt
cmp
sbb
cwtl
fimull
xorl
or
in
xor
pop
jb
sub
jecxz
clc
fidivrl
pop
ret
cli
jnp
inc
jp
pushl
xchg
cmp
rol
dec
xor
clc
movl
imul
lea
mov
addr16
adc
jae
or
mov
int
xchg
cmp
movsb
or
or
mov
imul
stos
pop
jns
scas
lods
mov
outsb
data16
pop
sub
pop
mov
xchg
cmp
dec
test
pop
lcall
pop
sahf
mov
mov
inc
movsb
sahf
scas
dec
xchg
cmpb
and
xor
adc
dec
repz
mov
or
pmaxub
push
jl
fiadds
dec
out
icebp
pop
out
loope
mov
pop
shr
iret
cmp
xchg
inc
cmpsb
push
mov
jmp
jnp
xlat
sub
push
hlt
stos
cmc
jae
call
add
rcr
das
orb
dec
push
push
leave
jnp
imul
jg
insb
mov
lret
sub
mov
or
jno
imul
outsl
cmc
jno
push
icebp
leave
sar
cmp
das
mov
push
jnp
sub
std
out
cltd
mov
adc
mov
int3
adc
jl
and
ljmp
lret
and
jbe
mov
sbb
mov
pop
or
jae
aaa
mov
mov
cmp
mov
mov
mov
shlb
outsb
test
ljmp
imul
push
cld
ljmp
mov
addr16
stc
les
pop
stos
movsb
lahf
pop
adc
lret
cmpsb
out
arpl
jns
lahf
sub
push
or
out
dec
lret
mov
xchg
rcrl
leave
push
mov
aad
in
adcl
jno
cwtl
loopne
mov
ret
jecxz
je
mov
lods
push
outsl
lcall
js
fsubs
lcall
mov
xchg
pop
bound
cmc
lret
lods
mov
push
push
sub
dec
adc
jns
pop
xchg
inc
movsb
shrb
mov
shlb
cmpsl
jne
and
xor
loopne
push
mov
bound
ds
test
rcrb
pop
sub
ljmp
dec
icebp
cmp
or
fsubs
jno
add
xor
push
icebp
cmp
or
fsubs
jno
add
xor
push
icebp
cmp
or
fsubl
jno
add
dec
rcrl
dec
icebp
cmp
mov
inc
pop
sti
jb
enter
and
fidivs
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
xchg
jns
in
scas
clc
xchg
jp,pn
lret
ljmp
add
add
add
add
add
mov
push
add
cmp
sbb
add
push
add
add
mov
xlat
add
sub
stos
add
add
add
dec
add
loop
dec
add
add
dec
add
add
add
add
in
xchg
push
add
add
add
add
add
mov
xor
insl
add
add
add
add
add
add
add
sldt
add
add
add
in
add
add
add
add
add
xlat
add
clc
add
add
add
add
add
add
add
add
add
adc
xchg
add
add
out
lea
cmpsl
add
filds
and
add
add
add
add
jae
add
add
add
mov
and
pop
add
add
add
push
add
add
xor
and
dec
add
add
add
mov
add
inc
add
add
and
addr16
add
add
add
add
add
add
add
add
pop
add
add
cwtl
add
insb
add
test
cmp
add
adc
ret
add
add
inc
add
add
add
add
add
add
add
add
dec
add
mov
mov
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
addr16
add
add
lock
rolb
add
push
add
add
add
push
add
or
add
add
enter
push
pop
stos
add
add
add
add
add
add
add
dec
add
out
in
add
sbb
push
add
xor
push
add
add
add
add
add
add
add
int
jbe
xchg
add
add
add
add
pop
add
add
add
add
add
add
add
stos
add
add
add
add
add
add
xor
add
in
add
pop
add
lret
add
pop
add
add
add
add
addr16
add
pop
add
add
add
add
push
add
loop
and
sbb
and
rolb
jl
sbb
add
add
add
cwtl
add
add
add
add
push
add
add
add
fildl
mov
add
add
add
add
add
out
bound
push
add
add
add
add
add
add
add
pop
cmp
mov
outsl
add
add
add
and
add
and
cmp
pop
add
sub
add
jl
mov
add
add
add
add
fildl
iret
add
add
add
add
add
add
add
repz
insb
inc
cltd
sbb
xchg
push
jl
inc
xchg
aas
add
fdivs
loope
loope
inc
dec
mov
sets
mov
ds
xor
jbe
pop
leave
push
fistpll
jecxz
enter
cmp
cmp
or
sarl
les
ljmp
jae
daa
xchg
jo
dec
xor
inc
jle
popf
fcompl
popf
sub
jo
pop
enter
lahf
ljmp
les
das
cmp
lock
push
shl
rcl
and
jne
jle
dec
push
mov
cmp
adc
in
xor
add
xchg
imul
loope
fsubrs
popa
xchg
push
mov
xchg
ja
mov
push
jg
dec
and
pop
ds
mov
fldenv
pop
add
push
jl
mov
lret
dec
pop
xor
loopne
fucomip
xlat
jge
int
inc
jo
js
xor
mov
imul
pop
xor
test
call
pusha
mov
cmp
out
mov
cmp
mov
lret
mov
dec
push
repnz
cmp
loop
fsubr
sti
fwait
mov
lods
push
push
ret
sub
mov
pop
mov
cld
pop
dec
test
popf
repz
sub
jl
fwait
scas
notl
push
mov
int3
fcoms
xor
push
adc
cmp
pop
sub
jno
push
jg
insl
add
loop
scas
and
popa
ljmp
arpl
pusha
jbe
loope
pop
sbb
fdivl
pop
and
cmp
rorl
das
add
push
cltd
fwait
pop
out
fs
inc
test
jo
push
adc
cmp
lret
cmp
inc
or
test
adc
das
xor
pop
iret
roll
aad
sbb
ffree
js
jmp
ret
sub
rcrl
cmpl
stc
cmp
stc
push
mov
sub
inc
xor
mov
push
mov
inc
negl
and
mov
out
test
xor
sub
push
es
mov
outsb
mov
hlt
mov
add
cmp
addr16
sbb
mov
jp
xor
lret
leave
retw
ja
dec
iret
in
sbbl
std
push
cld
imul
sub
and
scas
andb
cmpsb
shr
mov
ret
lods
or
pop
jbe
test
push
mov
xor
pop
adc
loopne
ja
outsb
cmp
xchg
outsl
push
and
add
pop
aas
test
add
sub
xor
fstpl
push
cmp
es
mov
loopne
testb
cmp
or
push
outsb
imul
rclb
sub
mov
or
test
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
