fsubr
loopne
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
fwait
dec
mov
mov
sub
sbb
or
cmp
sub
pop
mov
jnp
imul
imul
sti
sub
adc
cmp
sub
pop
movsl
dec
fwait
jnp
imul
icebp
stos
or
sti
and
or
lret
sub
dec
mov
pop
fdivrs
std
cmp
add
out
pminsw
mov
add
loop
test
cli
roll
and
test
rclb
dec
je
inc
pop
push
test
push
lret
nop
pop
aam
les
adc
stos
or
dec
les
and
add
xor
mov
sub
scas
add
clc
jg
jl
dec
lods
pop
js
lods
jnp
pop
xor
mov
dec
xchg
ficoml
cli
or
loopne
enter
ds
push
test
jmp
pop
ljmp
mov
mov
mov
jae
sbbl
inc
call
pop
cwtl
dec
mov
cmp
sbb
mov
mov
pop
stos
jnp
or
sbb
sub
test
cmp
sub
pop
mov
jne
mov
mov
dec
call
pop
mov
pop
outsl
jl
mov
dec
dec
outsb
cwtl
or
push
fistps
shr
or
ljmp
inc
scas
or
insb
scas
inc
mov
cs
adc
add
cld
cmp
pop
sahf
inc
lret
sbb
sub
cmp
lret
or
cmp
sub
pop
mov
jnp
imul
imul
sti
sub
cmp
lret
or
cmp
sub
pop
mov
jnp
imul
push
aam
or
stos
xorb
fsubs
jb
jp
inc
repz
mov
stc
push
inc
and
xlat
jmp
ret
xchg
incl
mov
sub
adc
sub
dec
push
mov
mov
cmp
or
lock
cmp
mov
shll
push
dec
xor
sbb
jle
inc
add
xor
add
addr16
or
subl
negl
xor
fldenv
jo
push
aaa
pop
push
xlat
mov
add
or
fimuls
xchg
cld
faddl
lods
notl
out
leave
sbb
imul
mov
loopne
inc
in
fnstenv
dec
xchg
dec
or
pushl
push
cld
out
mov
sarb
lret
push
push
mov
cltd
xchg
or
pop
mov
jnp
int
pop
test
mov
rolb
mov
lds
mov
mov
xchg
and
jb
cmp
jmp
mov
scas
mov
mov
push
loope
jbe
push
or
add
xor
pop
mov
adc
das
icebp
call
jp
enter
insl
push
insb
cmpsl
sub
call
loope
push
into
push
in
cld
call
mov
jb
pop
iret
cmp
test
sbbl
es
dec
fcoms
or
jns
out
push
xchg
sub
xchg
cmp
xchg
mov
test
mov
cmp
in
js
push
fidivs
adc
lahf
lods
push
sub
mov
sbb
jle
bnd
hlt
or
pop
jg
stos
and
subl
fwait
sub
cltd
rorb
mov
mov
aas
inc
scas
push
pop
dec
lods
cmp
shll
dec
dec
fisttps
int3
mov
shll
dec
mov
jno
cwtl
gs
and
sbb
fwait
mov
sub
adc
xlat
mov
imul
cmp
es
xor
inc
cltd
inc
lds
sub
fcmovnbe
lcall
adc
je
xor
mov
adc
add
or
mov
dec
add
jb
iret
insl
lock
arpl
and
or
sahf
imul
push
icebp
jns
icebp
ficoml
sti
xchg
adc
shll
aas
pop
mov
dec
jecxz
repnz
add
sbb
outsb
or
lods
into
frstor
fidivs
mov
das
aaa
je
aas
adc
movsl
daa
aad
test
cmp
in
aas
adc
lahf
mov
cli
mulb
jo
mov
mov
cmc
jl
sti
adc
loopne
adc
out
fldenv
cmp
std
mov
jnp
fwait
push
aam
push
mov
and
ljmp
imul
mov
test
adc
sub
push
das
fs
cmp
push
stos
push
hlt
out
test
mov
add
pop
insb
and
jno
mov
jo
out
js
fstps
popa
and
in
pop
jo
iret
cmc
je
aas
fisttps
movl
pop
mov
adc
xchg
inc
mov
es
fdivp
in
sub
andl
movsl
mov
xchg
push
imul
jmp
mov
lret
sub
mov
popa
test
in
shrb
adc
movb
fidivl
fwait
mov
rorb
pop
fisubrs
push
cld
pop
imul
cld
mov
gs
fisubl
inc
mov
push
je
xchg
xor
dec
ds
das
das
orb
cmpsb
jne
cltd
aad
push
into
xor
loope
add
mov
frstor
jbe
xor
cmc
sbb
sbb
or
mov
pushf
std
pop
aam
or
jecxz
pop
ret
add
lods
xor
xor
rcll
outsb
lcall
cltd
push
repnz
fnsave
adc
adc
sub
fidivl
sbb
xchg
and
xchg
in
adc
and
leave
leave
cmpsb
push
js
insb
sarb
xor
test
int
cli
jl
pop
in
adc
sbb
sub
outsl
sub
sbb
stos
adc
dec
xor
adc
nop
cmp
sub
imul
popa
xchg
in
shrb
andb
out
shrb
sahf
nop
push
je
adcl
pop
sub
std
iret
in
sbb
pushf
outsb
icebp
sbb
mov
sbbl
sbbl
mov
sarb
test
lock
sahf
and
jae
sahf
xchg
out
inc
push
out
push
loope
jno
push
xchg
xchg
into
jg
out
xor
and
test
xchg
aas
pop
mov
insl
push
repz
fs
popf
into
data16
add
out
xor
movsb
xor
mov
dec
add
lock
mov
mov
call
movb
fimuls
pusha
cmp
ficomps
ds
xor
popf
fisubl
cmpb
cmp
imul
mov
repnz
stos
movsb
rcl
mov
nop
data16
sbb
xor
jo
sarb
sbb
sar
rol
daa
mov
and
xor
mov
out
ljmp
or
mov
inc
sbb
lea
xor
icebp
scas
leave
in
dec
cs
icebp
cwtl
push
ljmp
or
leave
push
and
fdiv
mov
ja
and
push
call
fwait
adc
xchg
add
scas
cmp
outsl
mov
xchg
loop
adc
mov
gs
and
push
std
sbb
mov
adc
fidivrl
ds
push
mov
icebp
add
xor
mov
pop
inc
addr16
add
popf
out
mov
xor
jno
mov
das
out
cs
ret
aad
cmp
mov
movsl
cmpsl
xchg
ja
jmp
lret
in
push
and
mov
and
les
sbb
add
hlt
pop
mov
test
jne
cmp
inc
mov
xor
jo
inc
pushf
es
iret
lods
jge
cld
mov
sti
lea
out
inc
xor
pop
ror
andl
mov
mov
lret
sub
jnp
test
aas
or
cmp
pop
jg
dec
dec
push
cmpsl
sbb
xor
ss
inc
push
nop
sbb
xorb
jnp
jno
call
lahf
jbe
lcall
xchg
dec
popa
sub
mov
mov
xor
mov
test
push
cmpsb
lea
push
mov
mov
sub
inc
pusha
mov
lea
xor
clflush
add
test
repz
mov
push
or
and
insb
hlt
jmp
pop
stc
or
adc
pop
or
lods
je
inc
lahf
pop
pop
mov
dec
adc
mov
sub
scas
xchg
push
std
das
pusha
and
lods
ror
fs
mov
imul
jle
into
ljmp
mov
or
adc
or
sbb
mov
and
test
fs
inc
imull
adc
lods
lock
mov
fisubs
and
pop
xchg
jl
mov
lahf
loop
push
outsl
and
shll
jnp
dec
mov
cltd
out
add
into
cmp
push
mov
mov
sahf
popa
enter
fwait
push
in
lock
clc
frstor
ds
dec
jle
mov
ja
roll
xor
dec
jb
adc
mov
dec
sub
enter
push
xchg
loop
jp
sbb
fucomip
icebp
dec
mov
test
ret
or
sbb
xor
pusha
sahf
stos
or
repnz
sarb
or
add
das
fdiv
mov
sub
mov
ljmp
pop
out
icebp
or
and
mov
aas
or
add
sub
inc
xchg
and
pusha
jmp
pop
arpl
jne
out
punpckhbw
cwtl
lret
push
call
test
fildl
lahf
jbe
add
push
sbb
arpl
add
loope
mov
push
fnstsw
jle
cmpsb
sub
stos
pop
icebp
inc
iret
out
sbb
xor
pop
lds
les
out
jb
fldl
push
adc
in
mov
jb
mov
lods
fucompp
arpl
or
subl
ljmp
dec
xchg
xchg
insl
sbb
ret
ljmp
movsb
pop
mov
mov
push
or
push
jo
sbb
lods
sub
xchg
sub
into
rolb
ret
push
mov
fdivrp
les
cmpb
xor
out
scas
fldl
nop
arpl
test
xchg
cmc
stos
rclb
idiv
xchg
pusha
ja
insb
fisubrs
mov
push
mov
jg
addl
loope
or
cmpb
add
es
stos
call
dec
push
pushf
mov
mov
ret
imul
cmpsl
ja
aad
or
js
loopne
hlt
insl
sbb
and
in
sbb
jecxz
xor
fsub
inc
jl
gs
mov
cmc
mov
mov
mov
cmp
mov
ss
mov
jecxz
scas
out
xor
test
mov
cli
mov
lods
int
das
dec
cmpl
mov
adc
pushf
or
shll
xlat
out
pop
gs
push
push
dec
mov
icebp
lods
jns
push
xchg
loop
jecxz
mov
ds
mov
and
cmp
inc
in
mov
add
int
lds
mov
mov
cmpsb
sahf
loopne
xchg
roll
sub
popf
inc
bound
mov
cld
push
icebp
jmp
fistpl
mov
sub
fnstcw
mov
fildll
cmc
fwait
adc
jo
bound
in
popa
jae
fisubrs
xor
xchg
stos
mov
sbb
pusha
xchg
enter
mov
push
ja
jo
sarl
hlt
jp
mov
movsb
les
test
fidivl
data16
mov
arpl
mov
loopne
orb
lods
in
mov
movsb
mov
xchg
ss
sbbl
push
cmp
jecxz
mov
jmp
adc
icebp
xor
or
push
in
jge
clc
mov
in
ljmp
xchg
mov
repnz
and
add
data16
js
out
leave
das
or
sbbl
push
cmc
insl
mov
outsb
xchg
loop
in
jne
test
loop
data16
imul
cmc
pop
loopne
and
mov
mov
mov
inc
jge
adc
mov
inc
dec
imul
cmp
xor
out
adc
add
mov
js
xchg
arpl
jge
test
fwait
and
int3
jp
cwtl
push
xchg
mov
jge
cmp
cmp
and
sahf
mov
adc
int
mov
pusha
sub
enter
pop
mov
jbe
cld
push
add
shl
std
mov
push
inc
jb
mov
pop
je
shr
mov
cli
inc
mov
inc
aad
inc
in
dec
fs
pop
fistpl
mov
xchg
dec
mov
insl
or
xchg
push
mov
mov
enter
push
out
sahf
test
aas
fstps
cld
pop
mov
or
int
xor
ljmp
and
add
leave
icebp
xchg
scas
jnp
hlt
cmp
loop
and
dec
pop
jo
imul
jo
adc
and
fmuls
fldcw
lods
or
movsl
jle
xchg
add
into
push
call
cmpsl
imul
cmp
aaa
or
scas
xor
add
dec
dec
fsubrl
mov
imul
lahf
pop
fildll
mov
pop
mov
xchg
ja
xor
stos
clc
push
ret
push
add
push
pop
cmp
dec
outsl
daa
push
cltd
add
jge
sub
adc
and
sbb
and
jle
sub
cwtl
cmp
test
sti
icebp
test
stos
cmpsl
dec
mov
push
push
mov
pop
push
lret
stos
or
dec
mov
xor
imul
insl
xor
sub
pop
pushf
imul
jge
fsubrl
js
rcrb
hlt
and
std
mov
push
xchg
mov
xchg
mov
xchg
in
push
lret
clc
movsb
test
mov
int3
aad
or
xchg
popa
mov
push
adc
neg
jo
test
je
in
xor
cmp
sub
loopne
les
dec
cmp
call
adc
inc
and
add
call
xchg
pop
xchg
cmp
ja
and
mov
mov
ss
jl
es
adc
add
sahf
add
inc
add
push
mov
mov
movsl
sub
adc
jge
out
scas
div
push
sbb
out
into
sti
outsl
stos
cmp
mov
adc
mov
mov
cld
in
mov
popl
jnp
test
mov
sub
popa
xchg
dec
push
decb
add
cwtl
das
cltd
sub
inc
call
sti
pop
mov
mov
ljmp
lods
sbb
out
dec
sub
imul
push
out
sbb
lods
loop
sbb
jb
mov
xchg
push
in
lock
lahf
loopne
xor
insb
rcr
dec
dec
mov
inc
add
inc
sbb
push
aad
mov
lea
or
pop
fld
pop
and
hlt
lods
out
pop
mov
adc
test
xor
addr16
pushf
and
xor
jbe
push
inc
fs
inc
push
daa
push
and
out
test
or
insb
lahf
lret
adc
add
mov
lods
fcomps
xchg
loopne
mov
cmp
subb
xchg
in
outsb
mul
sbb
and
pop
test
mov
subb
mov
mov
xor
adc
icebp
ljmp
push
lea
inc
cmp
test
inc
mov
jmp
call
push
mov
test
mov
lahf
iret
call
enter
xchg
inc
mov
sahf
les
add
or
xor
mov
pop
push
arpl
imul
push
adc
stc
popa
rorl
aaa
mov
add
pop
and
mov
cmp
pop
addl
into
xor
pushf
out
gs
mov
xchg
push
mov
sbb
aad
add
xor
scas
and
sub
ficompl
xor
mov
mov
xlat
adc
jno
or
pushf
sbb
hlt
add
frstor
cmpsl
mov
daa
scas
ret
jle
xlat
jae
mov
cmpb
mov
xchg
lret
add
sarb
test
add
cmpl
notb
das
cli
dec
push
push
jb
add
push
sbb
test
push
out
or
pushf
and
sti
add
leave
call
fisubs
sahf
divl
sbb
aaa
out
repnz
shrb
mov
dec
cmpsb
jnp
mov
adc
je
insl
add
std
cmp
xor
or
test
bnd
xor
je
sub
jnp
pop
cs
mov
dec
inc
and
ljmp
in
push
pop
mov
ljmp
inc
sub
mov
das
sti
mov
mov
std
out
push
jno
dec
or
cmp
clc
jge
fidivs
adc
jle
adc
inc
xor
fisubs
cltd
hlt
insb
mov
test
adc
push
xor
or
idivb
add
in
fcoms
ret
pop
fdivrs
mov
clc
jle
add
pop
dec
lods
pop
repnz
sbb
fdivrs
lret
addr16
test
sub
clc
sbb
in
pop
xlat
push
popa
inc
xor
in
inc
pushf
dec
fistpll
int
inc
jge
addr16
pop
popf
outsb
stos
adc
push
adc
inc
inc
pop
jl
insl
test
js
out
sbb
xchg
lret
mov
int3
outsl
cmc
xor
jnp
rcrb
das
ret
ljmp
std
jecxz
add
sbbl
inc
mov
pop
push
inc
sbb
push
js
mov
sub
clc
jne
adc
scas
es
fcomps
daa
pop
and
add
lret
sti
in
xchg
add
cmp
icebp
push
sub
mov
outsb
lahf
cmpsb
pop
push
js
pushf
insb
mov
imul
lods
adc
pop
and
sti
faddp
mov
jp
mov
movsl
fcmovne
mov
test
mov
mov
out
and
or
add
scas
ficoms
and
out
cmp
repz
sbb
ds
cmpsl
daa
out
fwait
cmp
in
mov
pop
loop
sbb
lcall
cld
and
movsb
or
mov
call
mov
cmp
mov
fisttpll
dec
mov
daa
dec
mov
arpl
out
xchg
sub
ret
into
pop
dec
negl
lcall
jmp
adc
scas
divb
shlb
push
das
repz
pop
cld
fidivrl
iret
cwtl
std
jbe
movsl
das
push
shlb
mov
enter
xor
shrl
cmp
adc
scas
mov
fistpl
dec
loope
mov
push
dec
mov
adc
jmp
adc
je
inc
dec
dec
adc
jno
dec
mov
sbb
repnz
aaa
adc
gs
scas
pop
stos
aaa
addl
loop
cltd
cmp
data16
ss
mov
out
pop
dec
adc
cmp
test
pop
adc
pop
xchg
repz
ljmp
jge
push
ret
sahf
mov
mov
add
rclb
jbe
popf
dec
push
stos
mov
pop
xchg
lods
test
sbb
pop
aam
pop
roll
sub
notl
adc
lock
jmp
test
jmp
ret
ret
xchg
mov
cmp
fisubl
call
inc
stc
call
pop
mov
dec
loope
shll
adc
and
jne
fcmovnb
cmp
sub
push
mov
xor
fwait
xor
push
cmc
push
inc
out
in
mov
decl
pop
cmp
aad
das
in
roll
or
movsb
add
inc
cwtl
loop
dec
test
sub
icebp
cs
sti
mov
xor
fdivrs
popl
mov
xchg
scas
nop
sub
or
xor
mov
mov
enter
popf
pop
cs
push
fwait
int
jnp
push
jecxz
daa
pop
jge
push
stos
sub
xor
mov
imul
and
and
sti
outsb
mov
cmp
leave
mov
or
jl
repz
bound
cmp
mov
subl
cmp
push
ret
dec
jge
add
lock
insb
scas
jne
adc
add
sub
pushf
into
ljmp
and
dec
jmp
mov
subl
out
push
outsl
iret
repnz
and
movsl
loope
addr16
push
mov
sahf
call
test
imul
xlat
pop
fisttps
lods
adcb
jl
arpl
lret
mov
mov
jo
lods
fabs
imul
ror
pop
push
das
out
std
data16
mov
push
xlat
repnz
inc
xchg
push
xchg
mov
shll
mov
out
addr16
inc
call
lahf
inc
je
cmp
or
leave
mov
push
adc
inc
jo
out
adc
pop
data16
mov
negl
inc
inc
test
sbb
arpl
mov
leave
push
xchg
adc
xlat
aas
idiv
cltd
cmpsb
dec
inc
and
jbe
pushf
mov
inc
js
cmp
pop
sub
mov
jns
sub
sbb
push
push
and
lret
popa
das
lea
cmpsl
repnz
jae
iret
inc
inc
add
test
add
mov
xchg
or
and
jmp
mov
mov
into
aas
popf
dec
aad
xor
mov
fimull
cmp
sub
scas
inc
dec
daa
in
push
push
mov
and
xchg
push
mov
enter
push
xchg
lahf
rorl
lods
popa
and
push
inc
cmp
lds
adc
jb
shrl
mov
insb
cld
sahf
xor
mov
in
push
sub
pop
sbb
xor
dec
das
popf
xor
inc
mov
pop
push
jge
adcl
stos
jne
iret
mov
xchg
in
aam
lods
lock
mov
shr
push
outsb
stos
jnp
or
sbb
sub
cmp
lret
or
cmp
sub
pop
mov
jnp
imul
imul
sti
sub
cmp
lret
or
cmp
sub
pop
mov
jnp
imul
jae
jg
or
jo
das
jmp
sbb
or
cmp
sub
pop
dec
fwait
jp
imul
mov
fisttpl
lret
sbb
imul
xor
jno
jmp
mov
ret
jecxz
rcll
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
add
adc
and
xor
inc
test
mov
lret
pop
mov
sti
jae
mov
add
adc
xor
adc
dec
in
cmc
inc
test
arpl
xchg
push
ret
jne
pusha
rcll
mov
in
cmc
pop
test
xchg
jge
jae
out
mov
lret
add
sbb
inc
scas
inc
insl
mov
and
push
jp
cmpsb
pop
mov
mov
xchg
icebp
out
mov
xchg
rcrl
out
sub
out
es
jecxz
or
std
aad
adc
mov
adc
jle
jbe
inc
xchg
push
mov
mov
sar
xchg
sub
test
stc
fisttps
rol
fbld
pushf
lods
jae
cmpb
lock
shl
loop
repz
add
scas
clc
mov
hlt
clc
mov
mov
divb
push
roll
cld
pushf
mov
and
std
mov
das
inc
cmp
inc
xchg
push
sub
inc
mov
addb
lock
inc
aad
in
cmc
cmpsl
test
xchg
arpl
or
xorl
fsts
push
popa
lods
push
movsb
dec
mov
ret
pop
shlb
xor
add
mov
push
dec
test
push
xchg
sub
rclb
and
daa
mov
pusha
mov
popa
outsl
test
inc
andb
mov
xchg
arpl
xchg
push
mov
add
repz
and
xor
inc
test
arpl
xchg
push
mov
add
repz
loope
repz
rcll
push
pusha
dec
rclb
mov
cmp
jp
ds
lds
fwait
ja
in
push
es
js
dec
rclb
enter
in
mov
sbb
and
cli
aad
add
pop
js
push
adc
in
pusha
jae
cmp
out
sbb
test
add
scas
lahf
mov
into
add
jbe
sbb
orl
mov
ja
xchg
out
mov
ficoml
xchg
repz
push
inc
aas
mov
dec
andl
hlt
div
xor
dec
xchg
add
dec
stc
insl
fistl
movl
lods
and
push
mov
int3
jp
mov
dec
nop
hlt
push
inc
lea
aam
adc
imul
pusha
inc
lret
cmp
pop
inc
cmp
cmc
lds
loop
aas
stc
push
adc
cmp
mov
test
jo
aam
dec
fidivs
jg
jnp
xchg
arpl
faddl
and
add
dec
mov
lcall
or
movb
mov
push
and
adcb
adc
ret
inc
mov
loopne
pop
jecxz
inc
mov
xchg
xchg
cs
sbb
mov
xchg
lea
or
xorl
add
les
les
pop
inc
fbld
insb
pop
inc
iret
and
fcomps
das
mov
add
cmp
and
ficoml
xor
push
gs
xlat
pusha
mov
xchg
in
insb
pop
and
push
sbb
dec
in
imul
enter
xchg
je
dec
int
mov
pop
mov
mov
in
pop
pusha
hlt
mov
xchg
loop
or
repz
dec
popa
push
ljmp
fcompl
inc
lret
or
clc
outsl
loopne
sti
inc
test
or
inc
imul
das
popf
mov
mov
mov
cmpsb
subl
jo
pop
inc
mov
fcompl
lcall
test
xchg
jb
adc
push
movsl
sbb
leave
cmp
inc
and
cmp
xchg
pop
sahf
or
mov
xchg
neg
mov
inc
imul
pushf
pop
and
ds
or
mov
test
es
adc
xor
fldt
cmpb
cmp
or
mov
sarb
shrb
or
lcall
pop
or
sbb
testl
rcr
jbe
mov
xor
push
xor
jb
dec
aas
and
cmpb
adc
sahf
call
data16
in
je
mov
mov
out
xchg
orb
ss
mov
shl
roll
movsl
mov
pop
push
cs
mov
adc
mov
inc
jnp
pop
in
mov
fists
push
unpckhps
test
add
aad
je
repz
icebp
xor
fstpl
mov
jno
xchg
sub
in
xor
int
pushf
lea
call
icebp
leave
ljmp
or
fldlg2
mov
lock
int3
ret
ret
pop
mov
xor
out
pop
nop
cmpl
xor
in
lret
ret
sarb
pop
and
sti
arpl
mov
test
test
lcall
xchg
leave
jns
rcr
jne
aas
sub
je
sarb
fbld
in
test
or
sbb
xchg
dec
xchg
and
xchg
lea
outsb
dec
pop
lret
outsb
lret
popa
or
sbb
jecxz
in
and
cli
enter
or
mov
fiaddl
cmpl
jge
sahf
jns
jb
mov
call
xor
in
pcmpgtw
and
outsb
mov
adc
lods
cs
mov
inc
aad
mov
pop
les
shl
popa
pop
sbb
stos
mov
mov
sub
popa
add
push
daa
inc
fistl
sbb
les
dec
call
jp
cmp
aaa
adc
jl
mov
pop
cmp
pop
jle
pushf
push
stos
xchg
lea
das
xor
hlt
push
jns
add
scas
lcall
dec
inc
xor
or
int3
xchg
rcrl
mov
jo
mov
sbb
push
loope
inc
mov
loop
rcl
pop
xchg
xchg
and
mov
xor
fxch
jg
mov
pop
push
test
test
mov
jbe
mov
mov
in
jmp
pop
fimuls
jg
vpshufhw
lret
sbb
jno
out
push
outsl
xor
int
or
lret
faddp
aaa
xchg
cmp
loopne
test
mov
dec
mov
insb
movsl
stc
xor
leave
lcall
imul
pop
xchg
imul
mov
sbb
mov
or
sub
mov
scas
dec
xchg
push
xchg
add
aas
jp
adcl
mov
scas
data16
in
stos
idivb
data16
xchg
clc
sub
fdivrl
fldenv
mov
push
popf
xchg
push
jge
or
jo
mov
mov
dec
fwait
sbb
dec
jae
rcrl
pop
jno
fsubl
sti
cwtl
sbb
mov
xor
or
call
lods
push
sub
jne
sub
cmp
pop
cli
iret
loop
xorl
hlt
mov
cld
mov
mov
xchg
divl
push
jbe
stos
jg
jns
xchg
mov
push
imul
call
add
fistl
xor
jnp
jno
sub
mov
lahf
and
jbe
and
sub
xor
sub
push
jbe
pop
in
aas
ret
pusha
and
test
or
cmp
iret
mov
inc
cltd
mov
push
dec
sbbl
and
fistpll
jae
jbe
or
movsb
nop
popa
pop
jle
lods
or
sbb
cmc
sbb
adc
aas
sar
add
xor
mov
push
nop
mov
lods
and
cli
sub
shll
setae
ja
adc
popf
dec
insl
addb
movsb
pop
dec
jg
insl
sub
mov
pusha
pop
cmpsl
outsb
cli
xchg
mov
fnstenv
adc
pop
lods
std
insb
lds
movsl
mov
mov
mov
xchg
and
add
mov
and
inc
outsl
stc
or
pop
mov
mov
add
xor
aaa
test
or
loopne
dec
jmp
mov
popf
cwtl
jg
cwtl
cmp
xchg
femms
mov
in
add
adc
out
insb
mov
popa
rorb
inc
popa
in
mov
push
dec
sub
sbb
cmp
dec
into
stc
inc
push
aam
shr
divl
push
inc
scas
xchg
push
mov
pushf
jecxz
xchg
xor
fwait
outsb
cmp
test
pop
xchg
jno
fadds
aad
pop
int3
les
jmp
add
mov
or
mov
jae
xchg
jmp
jmp
mov
iret
out
adc
or
jecxz
mov
cwtl
sbb
ficoml
mov
jmp
sub
outsl
pop
hlt
jp
loopne
pop
out
dec
fsubrp
das
outsb
out
cmpsl
mov
inc
cmc
movsl
aaa
xchg
jge
mov
imul
add
add
mov
std
adc
lret
mov
xchg
fildl
movb
mov
ljmp
sbb
push
callw
pop
hlt
sub
push
sbb
stos
add
cmp
fwait
sbbb
push
or
popa
pop
push
sbb
pop
loop
div
hlt
pop
outsb
sub
into
mov
pop
push
je
frstor
pop
ja
xchg
cld
fmuls
nop
mov
outsl
add
push
pop
mov
es
push
ret
shrl
sbb
and
or
mov
add
cs
popf
cld
xor
sub
addr16
pop
bound
popa
enter
jne
mov
push
lcall
xor
mov
popl
iret
xor
mov
push
loopne
out
jo
mov
xor
test
cmp
add
sub
xchg
out
shll
sbb
in
mov
inc
scas
fadd
jno
test
cmp
call
mov
xor
loopne
cli
add
pop
mov
jecxz
and
aas
out
mov
and
xchg
aaa
sub
lods
push
push
pop
test
jb
sbb
out
clc
scas
adc
adc
js
inc
lods
push
dec
ficoms
cltd
shll
bound
mov
lahf
aad
mov
add
es
pop
mov
movsl
fwait
adc
cmp
push
sub
lea
and
sbb
sub
sbb
sub
jb
pop
test
fisubs
pop
ret
hlt
lea
aam
ret
jmp
imul
cmp
cmp
sub
jecxz
inc
pop
cmc
xor
mov
in
or
cmp
and
iret
jae
jg
and
pushl
push
imul
lds
dec
inc
pop
pop
and
je,pt
push
pushf
movsl
fsts
call
push
iret
xchg
push
in
xorb
ds
clc
lret
and
je
push
dec
jb
sbb
lahf
or
sub
ds
and
std
and
cmp
adc
add
mov
arpl
addr16
and
xor
or
loopne
cltd
mov
xchg
test
call
mov
ds
mov
ret
repnz
push
or
inc
aaa
inc
imul
mov
jp
jl
fdivl
dec
jg
jnp
cmpsl
xor
ss
rep
pop
cmp
jmp
sti
pop
add
scas
fwait
jmp
add
stos
gs
loopne
jecxz
scas
in
push
xchg
divb
lds
and
lret
jns
mov
test
mov
pop
push
mov
mov
xchg
jo
pop
xor
mov
jnp
cmp
mov
outsb
dec
loop
xchg
clc
rclb
push
xchg
iret
lds
mov
sbb
xorb
jle
test
out
mov
clc
mov
test
in
stc
cs
shr
test
sahf
jae
jnp
clc
es
jecxz
popf
dec
fwait
add
jne
sub
ljmp
adc
push
lret
popa
pop
xchg
fdivrl
je
clc
push
enter
xor
or
add
call
leave
mov
int
inc
xchg
push
push
mov
push
mov
pushf
sbb
sti
es
mov
sub
arpl
outsl
push
mov
xor
adc
repnz
sbb
das
loop
icebp
jl
sbb
std
pop
daa
jge
data16
out
es
enter
nop
push
pop
clc
adc
cmp
jge
repz
jb
jb
xor
inc
inc
dec
ret
repnz
push
repnz
ja
mov
jae
add
mov
aad
xchg
pop
push
cmp
push
ret
xor
xorl
push
mov
outsb
jb
add
loope
pop
jb
js
xchg
decl
leave
test
mov
sbb
sbb
cmc
lods
pop
pop
mov
pushf
and
or
cmp
xor
push
mov
cwtl
stos
pusha
sub
jb
in
pop
mov
push
jmp
mov
fmul
jae
adc
popa
add
push
and
rorl
lea
in
std
or
inc
cmpsl
mov
and
int3
pop
pushf
into
mov
fidivs
inc
and
sub
adc
fbstp
push
popf
cmp
xlat
aad
mov
pop
add
jns
mov
inc
or
fld
push
nop
lcall
sbb
cmpsb
sbb
daa
idiv
or
push
lods
inc
mov
pop
hlt
push
push
dec
lret
pushf
or
and
unpcklps
movsl
lods
adc
pop
out
add
or
dec
repz
or
nop
jne
aas
inc
sbb
fs
into
cltd
ds
or
push
and
mov
into
sbb
cmp
and
rclb
sub
int3
push
mov
or
rcll
xchg
rorl
out
pop
cmovae
sbb
outsl
sbb
jae
or
adc
cli
ret
das
ja
pop
outsb
xchg
dec
cmp
cmp
cmc
fidivrs
xchg
daa
aad
jg
daa
out
inc
inc
daa
mov
cmp
and
and
aad
inc
cmp
cld
mov
sbb
stos
nop
cmp
or
popa
inc
xchg
mov
inc
and
jo
icebp
xor
hlt
or
or
in
jns
pop
jge
negb
cmpsb
xchg
sub
cwtl
lret
pop
cmp
ret
jnp
mov
xchg
pusha
xchg
ret
jno
repnz
adc
jne
sbb
and
scas
popa
jnp
scas
xchg
call
subl
je
test
daa
mov
add
jne
shll
push
aam
mov
fcmovu
orl
sbb
orb
subl
lea
xor
divb
add
lods
dec
pushf
pop
jbe
jl
sub
pop
loopne
icebp
mov
dec
mov
pop
and
push
js
mov
in
cmp
cmp
gs
data16
mov
enter
jge
mov
and
adc
pop
stos
test
addl
xchg
mov
xchg
lcall
ja
inc
call
shll
mov
imul
mov
ljmp
xchg
shlb
pop
jns
rcrl
dec
mov
fisubs
ss
into
xor
and
pop
xchg
orb
mov
or
data16
pop
std
sarl
pop
or
loop
or
mov
stos
adc
cltd
and
out
bound
or
ds
test
add
div
nop
push
stc
iret
lahf
inc
andl
xor
dec
movsl
aaa
or
loopne
xor
mov
lods
jmp
stc
stos
mov
addl
fs
jg
xchg
add
and
xchg
gs
lods
lds
cmpsl
leave
push
mov
push
imulb
enter
jne
xorb
inc
out
je
sbb
xor
jne
out
movsl
and
adc
mov
stos
mov
lock
push
cmp
push
or
mov
mov
lcall
mov
sbb
mov
test
xchg
das
mov
outsb
push
inc
gs
mov
sbb
add
and
cltd
cmp
adc
push
or
pop
into
loope
popa
xor
or
xor
loopne
sub
pop
push
aad
jl
pop
mov
pop
pop
imulb
test
popf
pop
roll
inc
repnz
aas
mov
pop
cmp
std
out
pop
push
out
add
outsb
mov
inc
mov
jl
loopne
inc
out
sub
ret
pop
mov
pushf
cmp
mov
jle
rclb
push
add
outsl
mov
lret
mov
adc
mov
dec
mov
push
xor
je
push
cmc
stos
sbb
cmp
fwait
mov
lock
mov
sub
inc
ret
cwtl
mov
pop
test
xor
inc
sub
rcrl
and
pop
push
out
test
stc
xchg
or
add
adc
in
outsl
pushf
xor
cmp
xchg
sbb
cmp
push
dec
cld
mov
bnd
mov
negb
xor
enter
gs
cmp
add
pop
loope
in
cmp
push
lcall
push
es
sbb
push
in
stc
mov
mov
ss
in
dec
fiadds
cmp
cmp
pause
in
sti
xor
outsb
jge
mov
cmp
push
jns
dec
or
rorl
test
fnstsw
out
cli
inc
dec
out
pop
mov
inc
dec
push
lea
imul
lahf
lock
testl
jl
mov
push
outsb
clc
fsub
loop
jge
dec
mov
and
or
into
mov
mov
stos
pop
mov
scas
cmp
repnz
pop
cmp
enter
js
xor
and
inc
cmp
mov
push
pop
fwait
ror
js
sub
pop
lret
xor
cmc
out
popf
mov
popl
movsl
outsb
lds
cmp
push
out
imul
mov
dec
pop
sub
in
and
test
out
mull
mov
mov
lret
inc
cld
adc
scas
cmp
lds
cld
sbb
add
jecxz
mov
sbb
stc
leave
mov
imul
es
and
jo
sbb
mov
dec
cmpsb
sub
mov
fisubs
test
jmp
adc
or
lcall
cwtl
xor
adc
push
cmp
fxch
hlt
jno
mov
movsb
cmp
cmc
adc
dec
xor
push
or
movsb
loopne
stos
arpl
roll
pop
rcll
das
sbb
fs
cmpsl
out
call
xchg
test
std
outsl
jecxz
nop
popa
cmpsl
and
inc
out
mov
es
mov
insb
cli
imul
mov
cmpl
fistl
iret
dec
lods
inc
cmc
push
fsubrl
mov
and
ret
in
jmp
mov
mov
sbb
rcl
movsl
incl
mov
jmp
lea
es
jge
jne
dec
jmp
fisubl
add
sub
jae
mov
jo
jg
scas
dec
cmp
hlt
leave
insl
mov
movsl
shlb
mov
rcl
call
gs
sahf
sub
icebp
add
cld
movsl
pop
sbb
push
les
and
push
mulb
into
fsubrs
push
push
xlat
adc
sub
fbld
add
out
ljmp
pop
add
int
nop
out
mov
movsbl
lods
insl
xchg
add
push
into
xor
inc
dec
sbb
sub
xchg
iret
jne
sbbb
int
cmpsl
xor
cmp
fdivs
sahf
movsl
push
stos
insl
dec
sbb
ret
xlat
xchg
add
insb
mov
push
xor
shrb
rorl
in
inc
mov
or
hlt
adc
mov
outsl
jne
in
ds
addr16
mov
shlb
jp
lahf
test
add
arpl
andl
mov
fwait
enter
push
rcll
arpl
movl
mov
mov
mov
and
inc
rcrl
pop
sub
loopne
mov
push
mov
xor
cmpl
adc
cmp
scas
ficoms
xchg
xor
sbb
jo
xor
pop
int3
lods
mov
shll
lods
mov
test
mov
add
ds
pop
jno
out
adc
dec
int
dec
cmp
xchg
jne
out
aam
mov
push
loope
out
mov
and
push
ret
std
cmpsl
dec
inc
adc
repz
xchg
push
push
scas
cs
lock
aad
iret
mov
mov
push
lret
ljmp
and
pop
mov
mov
lds
jne
or
sti
add
adc
js
mov
mov
lds
cmp
or
sub
pop
fwait
pop
inc
outsl
mov
cmp
xchg
std
stos
leave
or
sub
test
cltd
inc
enter
mov
xchg
sbb
out
mov
mov
xchg
adc
test
xor
adc
int3
repz
jne
clc
data16
or
outsl
lods
pop
push
mov
jns
lcall
dec
test
dec
test
mov
pop
sbb
mov
sub
mov
in
jbe
scas
ss
ret
jl
dec
pop
and
push
call
mov
cmpsl
pop
add
push
jmp
outsb
aaa
movsb
adc
dec
cltd
ljmp
loope
sbb
shll
pop
dec
push
icebp
lock
sub
in
add
push
sbb
jmp
xchg
insb
dec
bound
or
and
add
loope
ljmp
and
push
and
mov
aad
xchg
pop
jo
push
dec
add
clc
sbb
cli
push
jp
inc
jg
mov
sbb
mov
cmp
fs
mov
and
int
inc
mov
das
or
cwtl
addr16
inc
adc
push
add
outsl
jne
rol
add
ja
mov
sti
arpl
shrb
aas
ljmp
jge
dec
repnz
mov
add
imul
adc
pop
push
cltd
in
mov
popf
test
pop
xor
xchg
outsl
in
mov
fcomip
add
pop
mov
and
sbb
lds
cmp
mov
hlt
shrl
pop
inc
pop
mov
cli
cmp
ffreep
push
mov
pop
lds
mov
and
loopne
jmp
mov
inc
mov
mov
shll
shrl
sbb
xor
mov
mov
add
leave
lcall
jl
fs
cmc
inc
test
arpl
xchg
push
mov
add
repz
and
xor
inc
test
arpl
xchg
push
mov
add
repz
inc
in
cmc
roll
mov
addl
push
gs
ret
add
sbb
jns
adc
inc
test
arpl
insb
decl
gs
mov
pop
ljmp
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
jb
bound
push
inc
inc
xchg
dec
pusha
xor
add
repnz
rcl
ret
mov
daa
adcb
bound
inc
inc
xor
and
adc
add
loop
loop
rcl
int3
ret
xchg
mov
imul
dec
push
pop
inc
sub
cmp
or
add
jmp
shl
mov
ret
int
into
loopne
sbbb
or
adc
and
ror
lds
je
sbb
pop
xchg
sub
mov
repz
loop
xor
mov
xchg
adc
inc
ja
lret
sbb
loop
mov
xchg
ret
lea
sahf
jo
movsl
add
icebp
mov
ret
nopl
mov
pop
bound
addr16
fwait
sahf
inc
int
and
in
popf
add
jns
jecxz
out
cmp
pop
sbb
mov
out
popf
mov
aaa
pop
pop
repnz
sub
mov
setp
sbbb
inc
and
or
ret
mull
addb
push
inc
inc
and
adc
add
repnz
loop
rcr
ret
mov
jmp
sbb
sub
inc
and
add
xchg
mov
mov
shl
nop
out
ret
sbb
push
xor
pop
jp
inc
adc
add
mov
lods
mov
leave
leave
in
out
pop
cmp
xor
cmp
daa
jp
and
adc
add
repnz
rcl
ret
mov
mov
jb
bound
push
inc
inc
xor
and
adc
add
repnz
rcl
ret
mov
mov
jb
dec
sub
loopne
add
adc
rcll
mov
pop
dec
inc
mulb
xlat
lds
cmp
outsl
cmpsl
mov
xor
es
ja
sub
xchg
push
pop
fucomp
xor
loopne
sub
lret
mov
add
xor
addl
mov
icebp
aas
aas
outsl
nop
mov
mov
xor
pop
add
hlt
cmp
sbbl
push
mov
in
test
and
xorb
pop
dec
sub
mov
setle
sbb
cld
dec
pop
ret
imul
jbe
lds
xchg
lock
add
cmc
imul
jmp
mov
dec
inc
xor
pop
and
cwtl
xlat
push
sbb
inc
sbb
cmp
stos
xchg
mov
jb
jg
cwtl
mov
test
jge
dec
and
and
or
xor
ja
shrb
in
adc
xchg
push
sbb
outsb
add
cmp
in
push
adc
sub
jnp,pt
xor
stc
pushf
push
scas
icebp
cwtl
loope
push
in
push
iret
aam
gs
xchg
adc
sbb
test
pusha
scas
push
lds
aas
lea
sbb
pop
mov
inc
add
sub
mov
fsub
repnz
jno
pop
enter
mov
add
or
outsb
cmp
in
fildl
xchg
std
test
cld
pusha
pop
push
jle
sti
dec
pusha
fadd
inc
adc
push
xchg
imul
jb
push
add
jns
and
push
dec
adc
mov
ljmp
cmp
push
xchg
in
mov
pop
insl
or
pop
mov
xor
mov
loope
xchg
mov
jae
jns
js
xchg
cmp
test
cmp
cmp
and
rol
das
lds
mov
js
aas
mov
jne
jmp
gs
sbb
xchg
test
cmp
pop
sbb
movsl
lret
jmp
out
pop
stos
jbe
scas
cwtl
testb
adc
sub
dec
cmp
add
mov
sub
jmp
outsb
jecxz
jecxz
jnp
in
or
or
add
adc
mov
in
cltd
xchg
cmp
xchg
sbb
jl
mov
pop
movsl
mov
lods
leave
mov
adc
push
xor
hlt
movsb
or
ss
orl
mul
add
fcmovu
fildll
inc
sbb
mov
xchg
int
test
iret
jae
fnstenv
push
mov
cli
sbb
mov
add
subb
add
jge
scas
dec
sahf
xchg
ret
std
cld
pushf
ret
fcoms
imul
insl
repnz
inc
leave
dec
cmp
icebp
cmp
sub
mov
mov
ja
int3
add
push
scas
add
mov
mov
and
cs
cmpsl
mov
mov
cwtl
lea
push
shll
pop
mov
mov
ja
add
jge
and
stc
in
out
push
in
fiadds
mov
popf
jecxz
inc
pop
xor
out
std
pop
mov
test
outsb
cmpsb
mov
es
movsb
nop
xchg
xchg
imulb
pop
sarb
pushf
dec
push
fimuls
popf
fisttps
mov
inc
pop
dec
xlat
mov
hlt
ret
imul
pop
rcrb
adc
lock
dec
mov
jbe
sbb
cmpsl
filds
sti
pusha
lock
in
test
or
sub
mov
outsl
inc
iret
or
mov
loop
icebp
je
orb
xchg
jb
dec
aam
test
rorb
sbb
push
cmpsl
popa
jo
cli
rclb
loope
inc
jne
push
push
mov
inc
mov
mov
pusha
dec
mov
add
test
adc
adc
xlat
aas
out
je
jmp
xor
roll
mov
mov
imul
inc
punpcklbw
xor
adc
insb
xchg
aaa
dec
mov
xor
pushf
pop
hlt
push
dec
in
rorb
mov
sahf
ficompl
or
in
aaa
jbe
fildl
or
movsb
aam
or
aaa
inc
je
out
std
xchg
js
mov
mov
int
jl
sbb
sbbl
push
mov
lcall
mov
sub
adc
pop
jno
adc
mov
mov
addb
shlb
out
inc
dec
aas
xor
mov
lds
push
sub
mov
in
jl
cwtl
and
and
adc
ds
loope
lods
daa
mov
mov
outsl
lods
xor
out
dec
mov
sbb
xchg
outsb
xor
out
outsl
dec
int
sbb
ret
clc
hlt
in
mov
addr16
mov
jbe
sarb
rcll
lock
jb
stos
sbb
adc
xchg
push
push
sbb
xor
je
imul
insb
loope
cmpsb
jnp
incl
jnp
pushf
shll
test
repz
cmp
pop
in
clc
std
adc
das
push
mov
and
xchg
jl
xchg
cmp
imul
jo
inc
inc
lret
cmp
mov
jmp
fsubl
ds
adc
and
jmp
clc
dec
inc
dec
jnp
mov
addr16
and
dec
xchg
inc
xorl
addr16
mov
mov
mov
cwtl
add
insl
out
xchg
lods
xor
adc
and
mov
push
std
xor
or
adc
mov
mov
jge
popa
push
sti
jae
push
adc
dec
data16
lods
in
je
jle
call
inc
mov
jge
xchg
hlt
out
and
sbb
dec
lods
add
addb
dec
push
xchg
data16
mul
jbe
lret
mov
mov
adcl
pop
push
and
mov
dec
jp
repnz
push
mov
xchg
inc
pop
pop
mov
dec
cmpsb
fcoms
push
stc
aad
and
inc
mov
loope
sbb
sbb
enter
dec
call
movsl
fdivl
test
ds
movsl
cmpxchg
sub
mov
mov
faddl
and
sti
jno
shrl
shll
xchg
sbb
mov
dec
shrl
js
test
out
mov
lahf
daa
sub
mov
inc
fisttps
cli
test
add
lods
cwtl
dec
push
push
xchg
aad
popf
std
mov
hlt
scas
adc
rol
ss
mov
aad
lock
mov
imul
mov
out
mov
cmp
and
shlb
hlt
adc
out
cltd
push
stos
lock
mov
movsl
stos
cmp
pop
repz
mov
loop
test
and
dec
cmpsb
lret
cltd
jo
kxnorw
outsl
or
cmp
and
and
dec
dec
outsb
pushf
sbb
mov
mov
adc
mov
sti
fucom
clc
inc
dec
xchg
popa
add
enter
mov
or
or
subb
loop
adc
pop
orb
mov
sbb
adcl
notl
pop
ret
cmp
mov
sar
repz
arpl
insb
push
std
or
sahf
xor
lcall
movsb
pop
inc
xchg
mov
inc
pop
mov
pushf
sub
call
and
push
sbb
sti
imul
loope
inc
xchg
xor
mov
mov
adc
mov
sbb
jbe
pop
push
in
scas
in
xchg
xlat
and
fidivrs
out
mul
push
ds
mov
imul
jns
adc
push
xor
xlat
and
and
or
xchg
push
outsb
sub
adc
aam
clc
sub
repnz
xchg
xchg
mov
sbb
clc
loop
inc
push
lret
shr
jns
xor
clc
pop
xor
sar
push
sarl
aaa
mov
mov
sbb
sbb
into
data16
xchg
sti
cmp
xchg
sub
cwtl
push
and
test
nopl
xchg
popf
pop
pop
xor
fwait
dec
hlt
iret
inc
inc
cwtl
pop
xor
in
mov
adc
xchg
std
sbb
pop
push
arpl
repz
cmp
sti
fistl
out
loope
sti
in
add
jp
and
push
push
subl
inc
jecxz
dec
pop
mov
dec
cmp
loope
sbb
outsl
mov
add
mov
lcall
cmc
lods
shll
mov
mov
lods
inc
mov
jne
add
adc
out
lock
js
daa
frstor
sbb
mov
dec
das
or
je
repnz
xchg
aas
inc
mov
pop
mov
sahf
lret
int3
outsb
mov
sub
bnd
xor
pop
inc
dec
inc
bound
mov
and
enter
jmp
bound
mov
mov
ljmp
cmp
or
and
in
jae
dec
push
pop
push
xchg
test
mov
xchg
mov
pop
bound
sbb
addl
inc
cli
sub
dec
xchg
in
mov
cmpb
gs
aam
popf
add
push
sahf
inc
sti
std
jmp
lock
mov
sub
add
add
mov
idiv
sbb
dec
out
add
fcomp
cld
popf
ds
and
arpl
xchg
cmp
push
aaa
jns
mov
aaa
mov
sub
mov
push
repz
hlt
pop
push
mov
clc
out
mov
cwtl
sbb
lods
mov
outsb
pop
arpl
test
ss
cltd
dec
push
gs
xchg
lahf
cmp
fwait
or
repnz
add
xor
hlt
sbb
rclb
data16
xlat
mov
mov
fistpl
sub
or
sub
arpl
push
sbb
push
cmp
or
push
jecxz
mov
or
add
mov
ror
fldl
int
pop
fcmovne
outsb
clc
fidivl
ds
pop
push
push
xchg
pop
and
mov
jp
pop
not
dec
pop
mov
sbb
inc
mov
inc
ror
and
add
xchg
popa
std
cmp
ss
clc
imul
insb
inc
mov
js
sub
popf
jle
lock
inc
mov
adc
lea
push
loop
movsb
push
inc
cwtl
xchg
mov
adc
push
imul
adc
jg
lea
jmp
cmp
xlat
add
fdivl
push
pop
xchg
jo
pop
fisubs
cmp
pop
test
add
into
jg
mov
stc
xchg
orl
pop
mov
pop
inc
sbb
and
pop
lcall
andl
daa
adc
test
sti
jnp
arpl
cltd
inc
subb
pushl
pop
arpl
jne
sub
sub
movsb
dec
iret
sbb
movsl
or
sub
inc
ret
sub
fisubrs
les
fwait
mov
xchg
sbb
add
mov
clc
adc
add
or
ds
adc
jnp
shlb
xor
xchg
out
cmpb
push
push
push
jnp
gs
dec
pusha
pop
xlat
pop
sub
push
outsb
call
and
lret
mov
lret
out
jno
cmc
js
mov
pop
mov
xchg
sbb
into
int3
es
ljmp
call
aas
sbb
cmpsl
mov
js
mov
in
xor
lret
shrl
icebp
sbb
mov
fstpl
in
ret
in
add
daa
aaa
out
in
pop
scas
stos
subl
push
sub
mov
jb
sub
outsl
xchg
pusha
fcompl
iret
ret
lea
fidivrs
test
add
mov
bound
sub
push
add
sub
fcmovnbe
clc
in
stos
jmp
imulb
pusha
enter
imul
les
xchg
fstpl
or
and
cmpsb
xor
cmpsl
mov
jl
imul
jns
lods
nop
sbb
sub
repz
enter
sbb
xor
cmp
lea
mov
push
lds
mov
or
lcall
leave
jecxz
adc
pop
or
cmpsb
in
addr16
lahf
je
inc
popa
cwtl
notl
inc
cmpsl
arpl
nop
mov
adc
int3
xchg
or
out
cmp
xor
bound
sub
test
pop
dec
jmp
jae
stos
fwait
inc
loopne
xchg
ret
xchg
push
lahf
and
cmp
push
pop
in
xchg
movb
dec
and
lods
shlb
lock
aad
decb
in
adc
in
push
in
and
cmp
loope
ss
in
xchg
cmpb
dec
and
xchg
bound
in
data16
out
rclb
mov
push
mov
pusha
mov
pop
or
loope
dec
dec
mulb
push
cmc
xor
inc
es
xchg
mov
insb
fwait
add
bound
mov
cmpsl
mov
in
mov
lock
cmp
je
xor
mov
push
daa
mull
xchg
inc
add
push
ret
mov
fucompp
mov
pavgb
adc
xchg
ljmp
out
jo
push
or
push
imul
dec
andb
fcoml
xor
mov
mov
xlat
adc
jne
pop
push
bound
aam
js
pop
mov
lea
stc
mov
sub
and
pop
cltd
adc
or
loopne
ret
xchg
mov
pop
sti
mov
xchg
mov
push
fcom
inc
and
dec
sti
test
popa
pop
jle
loop
ds
mov
inc
fs
mov
jp
imul
xchg
and
mov
lock
clc
fwait
sub
jns
mov
mov
loop
mov
nop
push
pusha
movl
mov
mov
out
add
pop
mov
in
mov
mov
xchg
repnz
jp
sub
and
insb
cmp
cmp
into
adc
cmp
js
insb
jge
jecxz
mov
dec
jg
movsl
push
movb
mov
cmp
ficompl
jo
fcmovnu
add
push
rcl
cmp
ja
popf
test
or
mov
rolb
lods
sarl
adc
je
jge
adc
xor
jle
mov
int
add
xor
xchg
dec
jbe
push
les
inc
push
mov
push
ror
enter
push
and
movl
test
pop
jne
lret
cltd
add
aaa
push
enter
pop
inc
ljmp
lea
adc
mov
insb
push
add
lret
insl
repnz
nopl
lcall
testb
mov
mov
mov
fcompl
push
out
scas
fists
imul
andb
sarl
cmp
fwait
push
push
mov
or
and
imul
outsb
jo
in
pop
add
dec
std
add
and
data16
gs
inc
int
jp
inc
xchg
into
dec
xchg
loop
inc
xchg
jno
js
fadds
push
lods
pushf
jecxz
jns
xor
inc
sub
sahf
xchg
inc
loop
xchg
out
cmp
sahf
sbb
fwait
lret
mov
mov
add
cld
fisttpl
cmpsl
push
je
jno
mov
mov
adc
pop
and
lahf
jns
xchg
ja
mov
and
aad
jne
mov
stc
mov
push
aad
lahf
push
not
jl
push
xchg
jg
stos
in
push
xchg
pop
jp
mov
or
cld
lods
arpl
pop
daa
dec
jecxz
adc
out
inc
xor
lcall
mov
sahf
lods
sub
pop
xor
int
mull
cmp
movb
insb
mov
or
lock
dec
push
fstl
pop
dec
aad
dec
xchg
mov
movsl
gs
sub
icebp
pop
sbb
xor
lods
test
movsb
pushf
leave
popa
in
cmpsl
std
cmp
sbbl
mov
xlat
notb
pushf
clc
sub
cltd
insl
insl
xchg
jb
or
ret
inc
das
scas
lret
push
mov
in
push
cmp
test
add
arpl
into
fidivrs
jae
push
frstor
mov
pushf
xchg
out
stc
mov
daa
out
pushw
addr16
arpl
adcl
sub
ret
mov
lds
or
cli
insb
cmp
stos
mov
and
lds
imul
mov
std
inc
adc
cmpb
cltd
pusha
rol
je
add
mov
mov
leave
lods
mov
rcll
call
leave
adc
std
subb
pop
push
pop
mull
adc
stos
push
outsl
lea
sti
clc
pusha
or
dec
pop
mov
rorl
lods
dec
jns
pop
cmc
inc
jb
and
in
insl
movsb
shr
sti
shlb
pop
xchg
pop
jecxz
in
addr16
and
aad
shlb
jp
pop
xor
add
int
ljmp
jne
push
data16
fstl
fidivl
cmpsb
dec
ds
or
cmp
out
cmp
or
and
xchg
insb
test
or
movsb
adc
dec
mov
int
or
xchg
loop
xor
mov
sbb
scas
loope
leave
insb
adc
ret
cmp
mov
sbb
xchg
dec
jo
fidivl
pop
ret
cmp
lcall
dec
movsl
in
pusha
lock
adc
jecxz
push
fistpll
stc
loopne
dec
mov
or
sbb
adc
insb
ss
cmc
pusha
flds
or
cmp
cwtl
xchg
xorb
jp
lcall
sub
push
paddd
pop
sbb
cmp
mov
inc
mov
das
dec
dec
hlt
sub
sub
inc
and
addr16
or
xchg
or
inc
fdivrs
push
xchg
lods
movaps
rcrl
shlb
push
out
iret
or
pop
mov
push
mov
cmp
lock
inc
mov
ja
push
mov
repz
xor
nop
jmp
xchg
ss
cmp
negb
daa
jno
inc
subb
cltd
mov
jl
inc
ret
pusha
mov
cmc
sahf
test
fstpt
lcall
mov
les
cmp
add
push
sub
cmpb
mov
pop
add
jb
mov
aam
ljmp
pop
sub
fmul
sub
in
in
clc
xor
hlt
xor
and
jmp
fisubrs
popa
cmp
or
jnp
inc
stos
adc
jo
test
sub
sub
or
sbb
and
lods
cltd
ja
rcr
xchg
and
outsl
xchg
out
pop
push
cmp
repnz
push
and
pop
cltd
adc
inc
cmp
mov
cmp
lods
dec
imul
pop
ret
pop
inc
out
push
mov
lds
dec
fnstcw
ljmp
popf
mov
sbb
flds
loopne
insb
clc
adc
mov
mov
js
xchg
adc
das
imul
inc
sbb
mov
adc
arpl
jmp
pop
mov
icebp
cmp
cmpsb
fistps
popa
scas
fcomps
sub
stc
lahf
mov
sbb
aam
fldl
pop
cs
cmp
test
nop
jne
xchg
xor
pop
xchg
push
sbb
xchg
adc
dec
pop
or
sub
paddusw
pop
inc
cmp
lret
jl
repz
xchg
stos
add
pop
out
aad
mov
mov
nop
into
or
push
cmpsb
mov
pop
fldcw
jge
jmp
out
ficoms
andl
dec
push
pop
mov
lret
push
xor
inc
mov
mov
popa
dec
cwtl
mov
out
fdivl
sbb
xchg
lea
test
dec
outsl
nop
mov
std
xor
pop
sub
xchg
xor
jbe
fwait
push
test
ja
cli
in
add
xor
mov
lods
and
xchg
push
mov
xchg
add
insb
ds
enter
push
or
pop
mov
in
mov
sbb
jg
data16
jg
push
and
and
inc
fidivrs
xor
out
cmp
scas
jecxz
cmp
dec
lahf
sub
push
mov
orb
les
sbb
leave
sub
cmc
daa
js
ja
pop
loopne
cwtl
popa
push
push
xchg
lea
jae
jmp
sahf
inc
cmp
jae
jns
fcmovnb
and
or
push
hlt
insb
pop
aam
jbe
test
jg
in
mov
int
aad
mov
cld
xchg
inc
les
push
cmp
loop
test
mov
lahf
mov
or
js
adc
movsb
scas
jp
ss
imul
ficoml
sarl
jo
mov
fwait
inc
jg
insl
cltd
xchg
js
jbe
neg
xorb
cmp
pop
ficoml
xchg
lods
adc
mov
jge
cmc
push
addr16
or
jmp
mov
sub
jmp
les
cmp
ja
les
pop
das
jb
shll
addr16
push
notl
hlt
loop
subb
not
and
fistps
mov
outsb
sub
push
mov
cli
push
adc
xor
dec
mov
sbb
fwait
and
pop
mov
dec
je
inc
sbb
dec
bound
inc
inc
xor
and
adc
add
repnz
rcl
ret
mov
mov
jb
bound
push
inc
inc
xor
and
adc
add
repnz
rcl
ret
mov
mov
jb
push
rolb
xor
and
bnd
loop
rol
ret
mov
xorb
bound
inc
inc
xor
and
xchg
adc
dec
js
ret
cmp
pop
insl
insl
jge
xchg
out
flds
jmp
pushf
ljmp
xchg
pop
subl
pop
ret
sub
cmp
ficoms
flds
fnstenv
stc
and
jno
adc
or
mov
cmp
rolb
loope
nop
insl
cmpb
scas
jns
dec
push
loop
out
or
test
test
mov
inc
xchg
je
gs
inc
mov
mov
sub
ss
jmp
push
mov
jo
xorb
mov
dec
add
lock
inc
adc
add
sub
add
ljmp
xchg
icebp
pop
roll
leave
adc
and
lods
push
mov
inc
mov
shrl
and
imul
es
fnstenv
add
jns
popa
inc
ret
jl
jns
mov
loopne
push
sub
fnstcw
push
adc
dec
xor
jmp
leave
rorb
ds
icebp
cmp
adc
icebp
jmp
push
addl
mov
inc
jno
pusha
jmp
sub
and
mov
paddsw
aam
cmp
lds
enter
mov
mov
or
flds
push
sti
add
divl
pop
cld
or
sub
or
insb
subl
mov
popa
stc
inc
icebp
xor
mov
subl
sbb
sub
cmp
leave
adc
add
xor
and
jno
popa
dec
xchg
pop
subl
sbb
sub
cmp
leave
adc
mov
xchg
or
push
das
loope
addr16
sub
xchg
xlat
dec
or
gs
out
test
repnz
push
pop
jnp
jge
std
sbb
jb
dec
in
cmpsl
mov
in
lret
pop
aad
ljmp
loopne
xor
mov
shll
fmull
pop
mov
adc
xchg
push
jb
cmp
adcl
lret
into
xchg
dec
cmpsb
aad
jb
or
mov
mov
mov
push
sahf
lahf
or
ror
cmp
loop
lea
jbe
imul
test
xor
inc
jb
in
pop
jecxz
xor
inc
call
push
mov
in
dec
in
or
sar
adc
iret
sti
push
subb
out
mov
mov
mov
adc
mov
adc
mov
lds
enter
shlb
lock
and
addb
and
lods
pop
xor
pop
movsb
push
clc
scas
insl
push
adc
push
adc
or
jno
add
sub
sti
hlt
nop
stos
or
jns
loope
arpl
cs
cmp
icebp
repnz
sub
inc
loope
push
rcl
repz
pop
and
push
imul
fs
mov
loopne
sbb
fildll
mov
mov
push
mov
or
xchg
mov
insl
lret
cmpsb
sub
loope
inc
sbb
cmpb
xlat
lods
xchg
pop
shlb
shrl
jl
jne
sub
mov
jb
ds
inc
loop
loopne
enter
aam
mov
fbstp
imul
shl
hlt
or
pop
out
shll
inc
cmp
xchg
sbb
push
ds
adc
jno
mov
lods
cmp
es
jecxz
aas
insb
and
cmpb
insb
mov
lods
push
aas
cmp
sarl
aam
jmp
sbb
push
jno
pop
stos
dec
loop
shll
sub
adc
xor
cli
xchg
aam
or
cmp
subl
aaa
pusha
dec
stc
xor
pop
add
fildll
jmp
mov
xor
or
nop
inc
repnz
push
mov
adc
stc
lea
mov
hlt
mov
fisubs
inc
cmpb
scas
js
incb
push
mov
inc
daa
mov
fstps
jnp
jle
push
adcb
jno
sub
jbe
jb
xor
mov
mov
fwait
aam
fcoms
cmc
cmp
mov
xchg
sub
dec
mov
add
inc
inc
jge
push
pop
xchg
std
loope
gs
cmpsl
cwtl
out
out
and
mov
cmpsb
mov
push
fiaddl
sub
xchg
mov
loope
push
mov
and
fs
lahf
out
and
in
sub
dec
inc
inc
sarl
fs
aam
and
mov
incb
stos
xor
push
push
arpl
aam
or
scas
or
insb
arpl
pop
je
inc
and
sbbl
dec
jb
xor
push
addr16
jbe
mov
and
outsl
mov
push
lods
lods
ljmp
incl
iret
leave
sub
pop
sbb
mov
cli
fisttpll
insb
xchg
xor
mov
in
mov
js
fiadds
xor
jg
mov
testl
jg
out
mov
adc
mov
add
xor
jno
xchg
iret
cmp
sbb
cmp
cmc
cmp
ss
cld
mov
xor
cmc
jmp
pop
loope
dec
shrl
add
test
hlt
data16
xchg
jne
push
aaa
test
jmp
or
popf
mov
je
cmp
fnstsw
sub
dec
gs
jl
inc
rorb
dec
jmp
popa
cmc
dec
mov
ja
fbstp
out
out
lock
push
mov
arpl
mov
jnp
xor
jp
repnz
sti
insb
bound
mov
stc
mov
mov
jl
shlb
mov
add
push
flds
jo
lock
inc
call
gs
mov
dec
cmp
xor
sbb
data16
push
iretw
sub
cmp
fstpt
sub
fwait
push
sub
cmp
lods
mov
stc
leave
pushf
adc
inc
cltd
add
or
sbb
iret
into
in
xchg
inc
mov
push
pop
mov
fidivl
loop
push
test
cmp
jnp
inc
and
subl
mov
add
mov
in
loop
mov
das
xor
sti
stos
mov
mov
loopne
popf
inc
pop
inc
arpl
xor
int3
pop
popl
std
lret
xor
int3
or
xchg
jo
adcb
repz
and
xor
cmp
jge
aad
mov
jne
sarb
outsl
jecxz
int3
idivb
mov
pop
call
sar
pusha
loope
sub
out
call
inc
clc
mov
inc
jl
push
cmp
jbe
push
icebp
inc
ret
es
imul
xor
adc
fidivrs
and
sbb
pop
dec
aas
lds
and
push
test
into
add
jno
ss
sbb
mov
scas
andl
aas
sti
cmp
jp
scas
or
push
sub
xchg
cwtl
adc
arpl
adc
xchg
cmp
mov
mov
cwtl
sub
and
std
sub
les
mov
je
fs
orb
ja
xchg
rcll
frstor
das
shlb
into
sub
jg
daa
fdivrl
mov
push
int3
push
mov
mov
cld
push
shlb
sahf
or
pop
subb
pop
cmp
xor
test
push
roll
pop
pushf
sub
xchg
dec
push
mov
dec
mov
imul
int
add
inc
out
out
and
pop
and
repz
mov
xchg
xchg
test
pushf
xchg
cmp
loop
arpl
adc
dec
inc
inc
pop
gs
aam
iret
jnp
aas
pop
sub
popf
cmp
roll
mov
sbb
mov
loopne
ror
mov
mov
lret
xor
cmp
jbe
lds
dec
push
cmc
cmp
ret
lcall
or
mov
addr16
aam
dec
cmp
and
or
xchg
push
scas
and
add
dec
mov
inc
push
mov
ds
outsl
pop
repz
jp
into
lock
mov
push
and
hlt
popf
xchg
cmc
in
jg
pop
iret
mov
loopne
cli
testl
or
sahf
sbb
jne
mov
jne
dec
sbb
pusha
xchg
mov
push
loopne
daa
idivl
mov
mov
cltd
inc
fcoml
mov
ret
jge
dec
ja
pop
cli
loop
cmp
pop
ret
mov
popw
cli
dec
iret
mov
sub
das
add
add
cmp
pop
outsl
add
les
and
cwtl
pusha
adc
int3
jecxz
fs
push
dec
or
movsl
push
jl
jb
lods
inc
insb
ds
add
sbb
pop
xchg
mov
iret
ljmp
aad
gs
dec
shl
lcall
leave
jb
dec
pusha
mov
dec
enter
pop
test
mov
imul
push
mov
jle
dec
push
add
clc
adc
sbb
and
pop
fdivrl
add
inc
fdivrl
je
or
sbb
scas
mov
mov
out
pop
mov
add
dec
aam
add
dec
popf
add
pop
lods
mov
movsl
in
outsb
and
std
andl
jp
push
dec
ficomps
daa
add
cltd
dec
ja
cmp
in
mov
icebp
xchg
jnp
jo
mov
out
lds
pop
fidivrl
xor
ret
adc
clc
mov
iret
in
lahf
lcall
shlb
dec
popa
xor
lock
xorb
cmp
push
pop
xor
clc
jnp
ficoms
in
inc
jbe
scas
lds
mov
movsb
or
mov
in
dec
hlt
and
mov
shrb
repz
aas
mov
pop
gs
inc
adc
or
lret
loope
jmp
ret
add
lcall
pop
jp
mov
pop
xchg
xchg
fcompl
mov
mov
lock
scas
iret
add
cmpsb
xchg
dec
inc
out
xchg
imul
mov
jno
fbstp
pop
cmpsb
aad
pushf
in
inc
or
xor
repz
cltd
insb
adc
jecxz
mov
loop
xor
ja
dec
sub
in
inc
jg
mov
push
inc
sti
outsl
out
mov
sbb
sarl
mov
add
fwait
lcall
lods
jge
jp
icebp
stc
and
dec
and
or
das
inc
mov
insl
xchg
xchg
and
orb
mov
sbb
movsl
adc
push
and
or
subb
sbb
test
sub
pop
jbe
mov
mov
stos
mov
push
add
loope
adc
addr16
xchg
add
mov
enter
mov
push
ja
enter
mov
bound
testl
mov
insb
ja
shlb
divl
imul
int
push
jnp
push
mov
call
aad
xor
cmp
aam
xchg
pop
pop
out
xchg
or
jp
mov
cmp
ss
data16
add
sbbl
repz
ss
mov
sbb
xor
out
rcll
stos
mov
dec
push
cwtl
jo
imul
js
cmp
lea
xchg
or
mov
sbb
stos
sbbl
rcrl
adc
xchg
cmp
ret
inc
inc
jno
sub
in
adc
leave
scas
shlb
lds
mov
in
push
mov
cmp
sub
inc
ds
dec
or
lcall
push
stc
sbb
mov
mov
jns
fiaddl
dec
cs
enter
fistl
jle
in
ss
mov
clc
push
mov
outsb
lret
inc
xor
addr16
les
xchg
jp
push
cmp
into
push
xlat
sbb
mov
das
push
push
leave
inc
stc
out
xlat
cmpsb
xchg
pop
fs
test
call
mov
repnz
repz
outsl
jo
ficomps
dec
dec
sub
push
daa
hlt
add
sbb
mov
mov
xchg
pop
lcall
or
xor
add
mov
mov
jnp
dec
fisubs
jge
xchg
mov
xchg
fyl2xp1
dec
pop
call
sub
roll
in
ficompl
cs
mov
mov
pop
jb
mov
xor
dec
lds
imul
pop
ret
pop
call
xchg
pop
aaa
int3
cmp
imul
fmull
loopne
xchg
jo
gs
popf
and
mov
push
xchg
sbb
int
cld
movsl
imul
flds
jae
es
cmp
xor
mov
add
or
ss
in
mov
pushf
popa
call
lahf
aad
xchg
cmp
cld
lret
sbb
push
and
dec
sub
sbb
pop
push
incl
les
xor
es
mov
mov
add
test
pop
out
icebp
mov
pusha
cmpsb
lahf
mov
adc
sbb
inc
hlt
mov
bound
mov
lret
xor
testb
mov
xor
test
mov
and
lds
ret
jne
lds
dec
cltd
scas
add
add
adcb
or
pop
jns
ret
popa
lcall
js
pop
arpl
imulb
push
enter
idivl
icebp
test
and
pop
sub
fidivs
mov
jl
das
loope
mov
sbb
cmc
sub
dec
push
jbe
pop
jmp
and
mov
xor
fdivl
or
inc
add
test
cs
out
xchg
pop
fstl
sub
ss
addr16
add
cld
mov
xchg
fistpll
mov
ret
or
nop
es
xchg
xor
insl
test
rcrl
cltd
sti
cmovg
cmp
xchg
out
xor
lds
mov
shl
lahf
int3
mov
sub
jge
jo
pushf
inc
adc
mov
mov
pop
fldl
clc
xor
inc
cmp
xor
xchg
mov
add
ret
lods
mov
xor
and
jae
scas
lock
rol
inc
das
pop
cld
jmp
pop
adc
pusha
rcrb
push
stos
int
and
push
ss
inc
mov
popa
mov
clc
add
popf
mov
cwtl
mov
mov
je
xchg
test
add
test
dec
sbb
sbb
stos
adc
sub
lds
mov
mov
loop
bound
and
xor
outsb
dec
inc
in
cmpl
dec
data16
cltd
das
pop
popa
push
mov
xorl
xor
gs
mov
lods
inc
idivb
stc
mov
jne
fsubr
xchg
loopne
dec
lcall
loope
popa
push
mov
orb
orl
sub
push
cwtl
imul
mov
pop
in
and
inc
data16
and
or
pop
adc
test
mov
sbb
dec
hlt
lods
movsl
xchg
aas
mov
dec
stc
mov
dec
cmp
push
adc
subb
leave
pop
or
int3
adc
icebp
pop
push
adc
jne
ljmp
xor
or
data16
inc
cmp
das
push
push
std
pop
jb
lret
and
daa
scas
push
lock
fsubs
jne
cs
testb
push
mov
xor
mov
or
sbb
in
mov
hlt
dec
mov
and
cli
dec
rcrb
inc
jl
mov
push
sbb
popl
jmp
push
push
dec
cmpsb
inc
sbb
sbb
and
adc
fcmovb
push
adc
xchg
push
inc
inc
adc
rcrl
fsts
xor
mov
mov
cmp
or
shrb
mov
lock
cmp
stos
cmp
clc
ss
ds
out
jae
scas
add
daa
rclb
adc
xchg
cld
cmp
and
sub
adc
adc
ror
pop
int3
divl
clc
xlat
mov
fs
aam
in
xor
dec
scas
pop
mov
jmp
insl
in
xor
push
dec
push
mov
test
aaa
mov
or
cltd
scas
pusha
jg
sti
inc
xchg
outsb
xor
dec
stc
pop
lods
int3
xchg
mov
incl
jg
add
adcl
mov
sbb
iret
in
sarb
and
push
inc
jle
ret
int
inc
pushl
enter
hlt
arpl
sub
adc
push
std
lret
or
shlb
loope
dec
sahf
mov
jmp
ss
fxch
loopne
ja
iret
pop
xor
out
xchg
outsb
inc
pusha
adc
or
xor
mov
fldenv
fsubr
out
pushf
xchg
notl
sub
ret
sub
mov
sbb
ds
pop
aas
in
cli
shlb
mov
pushf
xorl
outsb
push
mov
xor
jbe
jns
add
jb
les
or
push
adc
rcr
das
push
adcl
popa
dec
popf
push
test
mov
sub
pop
xor
jl
mov
fmulp
lds
shll
addr16
add
sbb
bound
outsb
in
lahf
sahf
add
xlat
cmpsl
stos
outsl
cwtl
decb
lds
arpl
jne
jmp
ret
push
lods
mov
mov
lock
aas
push
dec
test
cwtl
retw
cmp
xchg
loop
inc
cli
mov
add
push
inc
pop
mov
jge
imul
sbb
test
rcll
sub
lcall
inc
mov
xchg
sti
jo
mov
inc
add
xchg
jl
test
adc
jae
dec
dec
jmp
push
pop
test
pop
scas
into
subl
mov
lds
test
leave
pop
popa
scas
cltd
add
xchg
aaa
movsb
ss
xchg
call
xor
sbb
ret
pop
push
mov
nop
push
in
add
add
and
jmpw
js
in
inc
and
pop
sti
insb
call
mov
adcb
pop
mov
jo
cmp
xchg
or
xlat
out
imul
push
mov
movsl
popf
lret
sub
add
cmp
lahf
in
inc
scas
enter
push
push
hlt
and
outsb
pop
inc
mov
bound
cli
in
push
in
jae
mov
xchg
data16
cmpsl
jecxz
mov
xchg
js
icebp
dec
enter
cmp
xor
jp
jmp
lcall
jnp
xchg
popa
jecxz
mov
lds
js
cmp
inc
insl
xor
lock
xor
stos
pop
pop
dec
arpl
pop
ja
pop
repz
add
cmpsl
cmpsb
mov
clc
lcall
loop
sbb
pop
movd
jno
lret
jno
ror
cmp
push
adc
cmp
dec
into
out
dec
inc
xchg
andl
cmpsl
or
xor
fnstcw
push
push
pop
mov
xorl
cmp
and
cmpsl
cmpsl
mov
push
fiaddl
push
int3
sbb
pop
sti
ljmp
cmc
lea
dec
aam
fwait
shrb
sub
pop
inc
dec
inc
fistpll
mov
cmp
sahf
ljmp
nop
lret
fildll
in
stc
fcomi
push
jnp
inc
inc
sbb
cmc
insb
out
mov
je
icebp
shlb
lret
pop
xor
push
pop
jl
aaa
test
pop
adc
cmp
mov
cli
shl
inc
push
ret
lds
cwtl
mov
xor
add
mov
sti
cmp
aaa
cmp
mov
xchg
fwait
xor
jmp
sti
ret
int3
iret
xor
sarl
out
or
stos
lods
loop
pop
xchg
inc
or
add
stc
mov
je
add
jnp
fnstcw
inc
loope
dec
lcall
mov
sub
xchg
adc
push
jb
into
jle
add
or
int3
pop
fdivs
shrl
jb
sti
push
out
add
pusha
jno
sbb
fisttpl
fimull
adc
sub
inc
fwait
pop
mov
test
cmc
rcl
mov
jno
push
cmpsb
lret
enter
loope
cmp
jo
push
jmp
pop
stos
adc
push
pop
jbe
sub
cli
xor
lcall
int
mov
out
aaa
or
jae
cltd
push
cmc
sbb
cmpsl
je
mov
pushf
push
popf
pusha
stc
cmp
cmp
in
outsl
scas
add
push
loope
rcr
fwait
adc
test
aas
mov
insl
ja
inc
sbb
popf
not
dec
mov
ficoms
mov
sbb
cmc
loopne
xor
shlb
fbld
mov
push
cmpl
ss
sub
aaa
xchg
lcall
xchg
push
fcoms
mov
mov
ja
lock
xchg
mov
cmp
addb
or
fstl
adc
push
fisubrl
pop
inc
adc
dec
lods
inc
push
mov
aad
xor
mov
cmpsl
into
inc
mov
in
xchg
mov
push
cmp
sti
mov
sub
rorl
adc
int3
cs
test
paddd
xor
std
jecxz
or
inc
add
cmp
data16
push
out
scas
inc
sub
xor
repnz
push
call
add
push
mulb
fcmove
adc
lock
fisttpll
divl
jb
jb
call
les
xor
jmp
sbb
pop
sub
cmp
das
in
std
mov
fisttps
dec
and
sbb
in
and
fidivl
lock
xchg
addr16
cmp
jp
movsl
xchg
test
mov
add
fdiv
inc
fnstsw
adc
in
jecxz
jbe
mov
or
call
cmp
and
sub
mov
gs
jge
out
mov
lock
fstps
jno
dec
xor
and
push
adc
decl
fwait
ret
xor
sahf
mov
data16
mull
sub
aas
pop
mov
sbb
cmp
dec
inc
addb
pop
or
lcall
pop
cmpsl
fdivl
jbe
sub
lcall
pop
in
sbb
shlb
out
mov
add
xchg
enter
mov
mov
movsl
add
pop
stc
and
jno
popa
dec
xchg
pop
subl
sbb
sub
cmp
leave
adc
add
xor
and
jno
popa
dec
xchg
pop
subl
sbb
sub
cmp
leave
adc
dec
jmp
push
cltd
jmp
dec
dec
pop
subl
sbb
loope
adc
add
xor
and
icebp
cmp
outsb
cmpsb
sub
mov
jle
xchg
ds
push
push
xchg
divl
clc
xlat
call
leave
int3
lds
js
push
cmp
sub
shl
enter
call
cmpsl
mov
ja
addr16
push
push
daa
cmp
sub
add
dec
out
xlat
cs
mov
push
xchg
and
push
daa
or
gs
inc
dec
jb
pop
cltd
imul
xchg
mov
jno
mov
imul
ja
jecxz
ret
xor
jge
sbb
aam
lahf
cmpsl
rol
cmp
dec
ja
xchg
fwait
sub
fmul
mov
xchg
inc
popf
negl
sti
mov
fdivs
clc
and
adc
stc
sub
nop
nop
push
sbb
xchg
xchg
aaa
test
call
mov
test
mov
mov
jle
xlat
dec
inc
sbb
test
or
jmp
xor
cmp
or
push
sbb
stos
imul
bound
pop
push
pop
jb
pop
pop
dec
mov
jl
movsb
cmp
mov
inc
popf
enter
add
pop
jmp
enter
test
cwtl
mov
cmpsl
mov
ja
addr16
inc
js
push
daa
cmp
dec
inc
stos
lcall
neg
std
out
repnz
idivl
sbb
push
sub
or
jno
pop
dec
xchg
outsl
fdivs
and
aam
fildl
sbb
pop
insl
dec
dec
bound
stos
cmpsl
sti
xchg
mov
mov
pop
ja
addr16
push
daa
cmp
sub
fdiv
enter
call
cmpsl
mov
ja
addr16
push
daa
cmp
sub
fdiv
or
push
and
out
fadd
int3
stc
sbb
mov
mov
fwait
jne
out
mov
bound
push
mov
das
mov
mov
shll
cmc
or
add
sub
fbstp
push
inc
out
jbe
fstps
mov
test
xchg
test
jmp
pop
cmp
jb
mov
cmp
cmp
pop
mov
mov
add
andl
xor
fs
cs
lds
cs
dec
mov
fsubr
add
ret
lcall
mov
nop
mov
cli
cmp
stos
xchg
mov
sbb
push
cmpl
sti
adc
aad
out
push
jmp
dec
push
repz
pop
or
scas
jp
subb
test
push
adc
jmp
arpl
push
or
les
jnp
adc
push
loope
rolb
xlat
mov
sub
mov
cs
jae
inc
ldmxcsr
ret
mov
inc
mov
mov
hlt
adc
xchg
lods
xchg
xchg
mov
stos
mov
lock
jns
insl
push
jg
je
fwait
xchg
inc
mov
aam
mov
sbb
ret
mov
arpl
xor
arpl
add
push
cmp
sub
jmp
leave
lds
xor
sahf
loope
mov
fldln2
cmp
ffreep
ss
stos
and
mov
dec
and
push
lret
push
adc
out
cltd
shl
ljmp
lret
push
xchg
inc
mov
add
cmp
ja
lcall
mov
leave
cmp
testl
cmp
sbb
out
push
cmp
or
sbb
jge
ss
out
adc
aaa
pop
cmc
js
ficompl
subl
enter
push
dec
ljmp
and
add
test
add
jne
inc
lahf
sbb
cmp
clc
sub
shr
xor
dec
jb
push
out
inc
cwtl
inc
mulb
cmp
dec
gs
adc
sbb
mov
ja
xchg
mov
add
ret
push
int
pop
sub
push
add
push
pop
ja
dec
cmp
xchg
and
dec
mov
sub
sub
std
cmp
add
sbb
popa
mov
pop
xor
sub
lea
sub
adc
shlb
push
and
out
js
sbb
sbb
pop
sbb
fmull
xchg
cmc
fsubrs
adc
arpl
lea
jl
add
cmp
add
outsb
shlb
mov
xchg
mov
jbe
push
sub
xor
cmp
ss
int3
imul
jbe
lret
imul
nop
pop
sub
push
imul
ror
nop
ds
inc
lret
push
xchg
sbbl
push
pop
sbb
cmp
pop
scas
dec
leave
dec
adcb
outsl
clc
addr16
lret
push
out
loope
loop
test
adc
and
movsb
cmp
cltd
jo
je
scas
repnz
cmp
enter
mov
bound
orl
mov
aad
mov
pop
adc
xorb
cmp
aas
cmpl
enter
push
in
and
mov
mov
mov
stos
imul
std
pop
insl
pop
jmp
mov
leave
loop
repnz
or
int3
add
cmp
dec
shrb
movsb
dec
aam
pop
cwtl
xor
and
push
das
mov
aaa
sub
scas
in
dec
icebp
sbb
mov
rcll
jg
es
out
mov
scas
push
xchg
popl
daa
jbe
dec
mov
fldenv
pop
aad
xor
insb
mov
mov
inc
sbb
mov
sub
adc
pop
rcrb
jmp
pop
dec
sbb
jb
and
push
fistpll
es
orl
cltd
scas
fidivs
js
rolb
gs
out
cld
out
aad
inc
stos
insb
or
add
les
adc
or
cmp
popl
mov
pop
ds
insb
inc
pop
dec
cmp
xor
sub
sbb
rclb
call
lds
lret
or
cmpsb
push
stos
mov
mov
or
je
movsb
in
mov
adc
je
inc
outsl
fidivl
and
lock
jp
popf
jl
adc
jns
fimull
mov
pop
imul
and
imul
mov
push
adc
push
ds
cmc
aaa
movsb
jmp
in
mov
push
xor
pushf
jno
stc
xor
in
icebp
push
inc
add
cmp
jae
jmp
lret
mov
int
or
adc
enter
mov
aas
mov
in
rcl
cmp
ret
push
orb
xchg
mov
lret
push
mov
mov
dec
add
faddl
add
aaa
add
lcall
cmpsl
imul
mov
or
lret
imull
aas
std
int3
dec
aaa
ror
pusha
mov
out
inc
adc
xor
int3
jbe
fsts
xchg
cmp
add
in
lret
xchg
loope
stos
clc
ljmp
sub
nop
int3
sbb
jmp
cwtl
sbb
cmc
and
mov
clc
loopne
movsb
pusha
fidivl
xor
leave
xchg
mov
sub
inc
mov
xchg
xor
add
jmp
sarl
int
inc
test
adc
cli
cwtl
divb
pop
and
inc
fisttpl
sbb
sti
push
jp
adc
ret
shl
shlb
out
and
add
mov
cmp
cmp
push
mov
adc
les
outsl
xor
jne
stc
mov
mov
cmp
ud0
int
add
mul
ffreep
push
or
dec
xor
inc
xchg
pop
rcrb
cld
rcrl
dec
aam
jb
iret
mov
ret
fcomi
data16
addr16
push
adc
sub
cmc
or
lock
das
mov
bound
pop
enter
jb
cmpsb
sub
sub
push
stos
and
gs
fstps
adc
popf
repz
les
jb
inc
lcall
jbe
jp
pusha
enter
lcall
xchg
lcall
jbe
mov
pop
cmc
push
rorb
mov
ret
jl
pop
fcmovnbe
ds
jne
xor
sub
insl
sub
stos
stos
jnp
mov
es
imul
cmpsw
hlt
mov
inc
ds
mov
rclb
dec
test
pop
popa
inc
mov
jg
mov
push
or
iret
lock
pop
in
mov
push
push
xor
shll
or
push
xor
pop
icebp
xor
push
jl
pop
jmp
pop
inc
lock
or
fiadds
std
dec
gs
pop
jb
adc
int3
jnp
insb
mov
ret
and
cli
jg
xor
lods
pop
lods
hlt
pop
cmp
xor
mov
lahf
adcl
jmp
fmull
popl
dec
adc
pop
sahf
cmpsl
inc
scas
jnp
insb
cmp
adc
out
das
inc
mov
inc
xor
in
fidivs
pop
repz
dec
fninit
ret
decb
hlt
clc
stos
jecxz
xor
lahf
sub
push
ljmp
cmp
mov
inc
xor
sub
inc
mov
in
test
in
popf
pop
lds
in
iret
pop
ret
and
mov
inc
popa
dec
xor
push
pop
out
pop
mov
fdivr
ljmp
sub
loopne
outsl
inc
or
lret
lret
xchg
cvttps2pi
insl
test
lret
jo
scas
sbb
xor
or
mov
pop
sub
arpl
mov
lock
mov
in
xlat
add
mov
xchg
aad
xchg
mov
xchg
clc
aam
lock
sbb
repnz
fsubrp
adc
xchg
mov
lret
and
cmp
insl
imul
stos
bound
dec
xor
pop
pop
jno
cmp
int3
add
or
call
inc
shrd
mov
or
or
xor
es
arpl
pop
divb
pop
and
xchg
mov
xchg
inc
lods
push
sbb
sbb
test
cli
cmpb
and
mov
sbb
sub
scas
and
negb
repnz
dec
inc
push
dec
mov
mov
jnp
push
mov
fldl
int
fsqrt
insb
icebp
cmpsb
xor
mov
jmp
cmp
lods
mov
lods
int3
movsb
scas
roll
and
jae
inc
xchg
repnz
add
ret
test
add
cmc
jp
xchg
bound
rorl
aam
pop
cmp
cmpsb
outsb
mov
data16
jle
xchg
mov
add
and
es
or
enter
mov
icebp
xchg
dec
into
or
cmp
movups
and
lock
jns
movsl
mov
dec
dec
sbb
adc
bound
xor
inc
adc
js
jl
in
js
pop
fdivrs
and
leave
pop
cmp
shl
out
arpl
xor
mov
mov
test
outsl
sub
popf
xchg
call
shlb
lahf
aaa
setle
cmp
xchg
add
fidivs
xor
hlt
stc
je
jmp
popf
xor
cmp
pop
jecxz
mov
inc
push
out
mov
sbb
cmp
pop
inc
mov
xchg
lcall
mov
orl
rclb
mov
pop
lret
pop
add
ds
in
shll
sub
ljmp
inc
lock
jmp
rorl
xlat
push
sub
cmp
leave
pop
pop
fdivrp
xor
orl
data16
push
out
jmp
and
push
pop
and
pop
cmp
lahf
es
dec
loopne
lea
inc
adc
push
decb
out
and
iret
push
out
cwtl
jle
fmull
scas
add
sahf
in
scas
rcll
fisttpll
xor
loop
and
inc
cltd
mov
aam
add
aas
sbb
dec
dec
cmc
pop
inc
lret
jae
xchg
xchg
push
jecxz
cmpl
cltd
in
faddl
xor
sbb
or
adc
movsl
mov
sub
insl
scas
outsl
cmpsb
leave
and
push
jns
push
jb
adc
push
mov
jmp
push
mov
inc
mov
xor
push
out
mov
add
jg
fistpll
test
std
and
int
add
mov
xor
test
push
add
dec
and
cmp
jo
cmpsb
sbb
pop
cmp
test
push
test
shrl
outsb
inc
pop
test
out
lods
mov
inc
and
pop
push
inc
xor
mov
jecxz
shrb
dec
push
jae
xor
pop
inc
and
dec
sbb
sahf
xchg
cmp
es
adc
sub
lods
ret
dec
adc
mov
cwtl
push
push
mov
xchg
xor
dec
jne
adc
inc
daa
arpl
loopne
xor
addr16
das
stos
cmp
add
pusha
inc
movsb
les
mov
cltd
jbe
mov
dec
inc
lods
mov
clc
adcb
sahf
sub
pop
into
mov
push
das
or
push
jae
inc
icebp
and
push
out
movups
mov
adc
mov
pop
dec
pop
pushf
inc
pop
pop
sbb
fisubrl
dec
mov
add
cmp
dec
jmp
clc
cmpsl
out
mov
lock
xchg
dec
cmpsb
jb
lea
add
pop
sbb
or
sub
mov
test
insl
and
idiv
fucomp
cmp
dec
cmp
jne
mov
inc
mov
inc
mov
jns
lahf
xchg
mov
fsubl
xor
or
lret
jl
mov
jg
jae
ret
jbe
out
addr16
add
in
bound
xchg
sbb
lahf
lret
mov
xor
cmp
jmp
lods
aam
push
std
stos
sub
mov
test
repnz
roll
decl
loope
inc
xor
dec
lock
or
adc
adc
mov
call
mov
movsl
xor
add
add
adc
test
icebp
iret
sarl
gs
mov
stos
ja
or
mov
enter
sbb
inc
lea
in
lcall
adc
or
cs
aas
mov
and
lahf
das
rcrl
das
cmpsl
cwtl
cltd
push
call
addr16
or
xor
lods
rcll
das
push
jge
dec
js
test
out
test
push
or
in
sbb
mov
xchg
jno
xchg
push
fs
inc
pusha
xchg
mov
shrl
mov
pop
or
jno
ret
repz
lock
shrl
shll
sub
push
or
push
sbb
aam
cltd
pop
daa
or
adc
push
fwait
push
cmp
inc
pop
fxch
xor
jae
push
addr16
add
xor
and
inc
xchg
movsb
cmc
enter
mov
push
jae
jns
mov
cwtl
popa
lock
cmp
inc
cwtl
adcl
jmp
add
bound
xchg
dec
or
dec
sahf
lea
ret
mov
lods
jecxz
insb
add
jg
loopne
or
jae
stc
mov
mov
lods
es
fmul
aad
test
ret
into
inc
stos
mov
cwtl
push
mov
nop
stos
js
jo
inc
dec
mov
xor
cltd
mov
cmp
lods
cmp
jb
mov
jbe
jle
or
inc
mov
push
inc
and
arpl
cmpsb
inc
jl
out
adc
mov
pushf
cmpsb
daa
or
or
add
inc
dec
scas
scas
cmp
jne
cs
cmp
lahf
into
imull
cmpsl
mov
lcall
push
pop
inc
movsb
cmp
lcall
fcmovnu
sub
sbb
fdivr
aad
movsb
sub
pop
inc
mov
aaa
push
jmp
mov
aas
xor
sbb
sub
out
mov
les
mov
out
sub
xchg
pusha
push
cld
mov
sub
loope
and
shlb
xchg
cmp
push
jb
push
and
mov
aam
or
lods
cmp
and
mov
and
cld
cmp
pop
cmc
lret
and
ret
das
mov
mov
es
lods
adcb
movsb
adc
call
in
mov
add
cmp
xchg
mov
sub
sub
or
and
je
xor
pop
mov
hlt
cltd
nop
sbb
mov
hlt
and
mov
mov
fwait
mov
mov
scas
out
je
test
aaa
ljmp
jb
jmp
lods
call
sub
sbb
mov
fbstp
lea
add
sub
jae
ret
xchg
iret
sbb
pusha
sbb
inc
mov
cmp
inc
mov
push
sbb
jae
test
stc
gs
div
jp
dec
xchg
adc
inc
scas
dec
sbb
test
sbb
dec
cmp
mov
stos
dec
xchg
call
int3
jecxz
sbb
arpl
push
sub
stc
fadds
cmp
outsl
sub
out
imulb
mov
dec
lock
fnstenv
mov
or
push
and
sub
sarl
insl
mov
jbe
mov
outsb
out
cld
xchg
add
push
dec
add
fucom
dec
leave
loopne
pop
xchg
jno
jbe
xlat
enter
sub
mov
xchg
cmp
std
mov
jmp
mov
push
bound
clc
xor
cmp
jmp
fsub
dec
dec
ja
xor
in
lods
dec
push
rclb
imul
lret
dec
xchg
data16
push
test
and
fucomip
or
and
insl
pushf
int
fbstp
jg
js
dec
cwtl
sahf
movsl
jl
daa
and
shlb
scas
dec
fcom
std
pushf
ja
sahf
lahf
pop
push
xchg
into
push
in
cmp
cmp
or
dec
adc
aaa
dec
test
pop
xchg
outsb
push
dec
sub
bound
iret
mov
rcr
sahf
sbb
pop
jno
mov
mov
cmpsl
call
mov
cwtl
mov
inc
pushf
jno
dec
push
lahf
testl
movsl
movsb
cli
cmp
dec
xchg
out
ljmp
push
jb
pop
das
imul
mov
cmp
mov
push
sbb
mov
xlat
xor
aam
std
gs
rcll
inc
movsl
add
ja
fcoml
fsubrl
add
cmp
pop
nop
and
das
mov
sub
outsb
jmp
adc
scas
xor
divb
outsl
idivb
in
mov
dec
popf
mov
and
sar
add
xchg
sbb
lahf
mov
movl
outsl
movsb
dec
lods
clc
xor
scas
movsl
and
push
push
in
jnp
stc
pusha
in
stos
leave
sbbb
dec
pusha
in
jge
nop
add
jle
mov
xchg
jbe
add
nop
call
ds
inc
push
dec
inc
cli
sub
pop
jns
insb
loop
dec
stos
repz
push
xchg
ljmp
pop
sub
fidivrl
inc
and
jae
popf
mov
jb
sbb
adc
add
aad
push
into
icebp
sub
shl
mov
fdivrs
es
les
lods
out
cmp
add
lret
ds
mov
roll
fistpl
jbe
out
cmp
loope
aam
sub
and
jb
add
mov
cwtl
adc
xor
insl
in
js
and
addr16
add
sbb
jb
aaa
xchg
ror
int3
movb
xchg
sub
out
push
cmp
movsl
mov
adc
and
js
xor
es
fstp
mov
shlb
xchg
cwtl
xchg
sahf
adc
popf
aas
out
cmp
push
push
outsb
jl
xchg
pop
pop
add
xor
push
nop
xor
clc
je
test
jnp
out
xor
mov
jns
pop
in
fs
push
adc
xchg
ror
and
sahf
mov
jo
cmpsl
in
sbb
jmp
mov
add
pop
pmaxub
xorl
cmpsl
loop
and
adc
dec
into
hlt
sub
popa
lea
jnp
in
jbe
sbb
and
and
stos
test
cmp
icebp
adc
loop
adcl
shl
aas
ss
jmp
inc
pusha
pop
in
rep
popa
adc
sarb
jg
sub
stos
test
mov
call
xor
jns
sub
mulb
mov
test
sbb
fs
fidivrs
int
in
and
stos
test
lcall
repz
dec
jb
insl
jecxz
cli
mov
mov
and
xchg
sub
jmp
pop
lahf
jl
iret
out
pop
jb
jmp
add
sti
lods
in
jg
xchg
jbe
fistpl
cli
and
mov
shrl
sub
pop
and
cmp
xchg
call
jo
push
shlb
pop
mov
imul
iret
icebp
fldcw
push
jecxz
mov
aaa
rorl
movsb
fcoms
in
lea
xchg
inc
cmp
cmp
mov
cltd
pop
adc
das
fcoml
outsb
jle
call
dec
test
cmc
and
pushf
xchg
out
shl
les
jno
roll
xchg
push
inc
loopne
and
adcl
jmp
sbb
test
subb
and
mov
sub
lods
test
jmp
scas
out
lret
andb
insl
lcall
sbb
xchg
inc
cmp
in
xchg
cli
pop
cs
xchg
jae
aam
lock
outsl
add
mov
int3
je
subb
push
je
popa
outsb
test
xor
sub
mov
cwtl
out
lahf
movsl
hlt
sub
aaa
loopne
sub
ds
arpl
pushf
divl
and
dec
jl
mov
ret
insb
ss
aaa
les
inc
dec
pop
sahf
rolb
frndint
inc
outsb
mov
fnsave
sahf
cmp
jg
xor
bound
mov
add
ja
cmc
cmp
cmp
adc
push
shrl
rcll
adc
lret
movsb
aad
adc
fildl
dec
mov
jl
pop
inc
test
jl
sub
xor
dec
pop
gs
jmp
and
dec
stos
shll
jno
dec
aad
cmp
aad
add
cmp
loop
and
pop
xor
incl
push
and
test
push
test
push
jno
mov
push
push
xchg
stc
loopne
out
hlt
cwtl
mov
cmpsl
mov
ja
addr16
push
daa
cmp
sub
fdiv
enter
call
cmpsl
mov
ja
addr16
push
daa
cmp
sub
fdiv
lret
out
xlat
call
cmpsl
mov
ja
data16
insb
inc
sbb
adc
cmp
sbb
shl
out
xlat
rol
mov
daa
mov
mov
xor
sbb
call
rcr
in
loopne
sahf
xor
lds
jo
pusha
insl
adc
and
lock
loopne
nop
lea
leave
push
inc
inc
pop
add
pusha
jge
jg
pop
xor
rol
cmc
loopne
nop
xchg
addb
dec
inc
jle
adc
or
arpl
pop
dec
push
cltd
add
lcall
pop
push
xchg
xchg
lcall
cmc
adc
pop
int
push
add
std
add
mov
mov
mov
out
insl
adc
lds
push
dec
mov
fisubrs
into
push
xchg
mov
sahf
dec
loopne
dec
sub
pop
or
push
sub
shll
adc
nop
lea
cmp
push
mov
out
xor
xor
and
lcall
call
inc
mov
mov
popf
lar
das
xor
test
push
lods
sub
add
and
std
xor
dec
cmp
hlt
loopne
nop
lea
movsb
push
dec
inc
inc
jo
pusha
adc
and
int
scas
xchg
mov
cld
aad
loope
adc
inc
pop
adc
sbb
imul
shll
xchg
in
shll
cmp
xor
and
sbb
mov
mov
mov
mov
mov
pop
jo
pusha
jge
or
and
lock
loopne
nop
lea
mov
jo
pusha
jge
or
and
dec
push
decl
sub
or
mov
loop
xor
cltd
cld
mov
icebp
pusha
mov
sbb
inc
jo
enter
je
arpl
ds
cmovs
dec
jno
jp
imul
cmp
xchg
or
imul
xchg
or
push
jnp
and
sub
mov
icebp
dec
in
aaa
mov
aad
subb
cmpsb
adc
or
inc
fildl
xchg
stc
rol
add
pop
roll
add
mov
loope
jbe
and
mov
jmp
mov
sbb
mov
ret
sub
mov
mov
pop
aam
and
filds
mov
mov
lcall
and
into
int3
mov
ljmp
mov
fwait
mov
cmp
jmp
aaa
fmull
pop
repz
sti
scas
aas
cwtl
aad
mov
cmp
xor
daa
xchg
or
ret
sub
xlat
out
loopne
mov
les
sbb
ja
mov
js
xchg
inc
scas
xor
xor
push
push
xor
fiadds
jmp
std
xor
es
cli
adcl
insb
mov
sub
cmpsb
add
sbb
pop
and
push
jb
lret
xchg
ds
or
push
pop
xor
pop
into
pop
jp
xchg
lcall
xlat
jb
adc
jae
push
ret
enter
test
jae
adc
and
inc
dec
push
mov
es
push
and
loop
jae
nop
sbb
sti
inc
stos
pop
lea
or
ljmp
sarl
cmpsl
push
faddl
or
aad
pusha
inc
and
fisubl
cmp
fimuls
loope
das
addb
std
pop
movsb
add
jle
dec
or
clc
ja
xchg
inc
pop
hlt
sti
lods
dec
clc
in
daa
es
adc
or
out
stc
les
adc
mov
jmp
add
stos
ljmp
xor
in
pop
out
xchg
shl
loopne
outsb
dec
pop
push
adc
iret
cmp
push
push
out
fisttps
ss
test
push
dec
xor
nop
je
jno
pop
fs
xchg
rcll
mov
fwait
jno
xchg
negb
addr16
cmpsl
push
dec
cli
lock
in
mov
arpl
jae
mov
cmp
pusha
pusha
movsl
aas
and
dec
mov
dec
jb
pusha
js
repz
cmp
jnp
sub
repnz
loopne
push
mov
insl
mov
dec
dec
fldenv
adc
insb
inc
cmovge
or
enter
ficoml
out
fsubp
lods
push
xchg
arpl
mov
out
xor
cltd
repnz
out
repz
pop
mov
inc
push
scas
cs
imul
lret
xchg
inc
rcll
mov
add
or
call
add
imul
and
xor
or
xchg
and
add
cmpsl
aam
ffree
mov
add
addb
and
xorl
cmp
add
pop
loopne
fcoml
test
add
or
dec
call
adc
pop
mov
cmp
inc
pop
and
jecxz
push
jl
ljmp
adc
push
fildll
and
mov
sbb
mov
hlt
negl
xchg
xor
push
mov
fdivs
orb
psubsb
push
ljmp
aaa
cmp
sbb
jmp
fsubs
leave
je
sub
daa
dec
in
cli
jp
rolb
sbb
push
add
inc
mov
cld
jae
and
xchg
pushl
mov
xchg
enter
mov
cmp
js
adc
aad
mov
dec
push
adc
nop
adc
push
push
fwait
pop
int3
mov
jo
jmp
sarb
sbb
stos
add
bound
loope
fcomip
xor
mov
out
dec
loop
mov
mov
test
jle
add
mov
int3
jge
mov
jmp
lret
test
aam
aam
imul
mov
jmp
mov
sub
mov
or
pop
mov
pop
inc
jne
jmp
in
jb
sbb
shll
xor
nop
mov
mov
pop
dec
and
push
loopne
push
jb
int3
jp
jae
les
pop
cmc
into
push
pop
mov
dec
adcb
cmpsb
cld
ljmp
imulb
dec
cmp
stos
adc
icebp
aad
int
push
dec
je
fcoms
and
adc
jne
cmpsb
push
cld
add
mov
jae
andl
clc
xor
scas
jno
jmp
in
arpl
dec
insl
mov
popl
lock
adc
xchg
mov
mov
popa
out
aaa
fdivp
sbb
add
and
cmp
sbb
pop
push
out
js
bound
movsl
pop
mov
jl
enter
test
or
int
iret
push
call
jl
xlat
lret
cmc
mov
inc
in
nop
add
pushf
cmp
and
xchg
push
test
mov
rcrl
fildl
repz
and
cld
loopw
mov
or
sub
data16
and
mov
cs
lods
cli
sub
mov
and
mov
cmp
arpl
pop
mov
dec
mov
xlat
js
cld
cmp
push
divb
aad
and
pop
sub
xchg
xor
jl
leave
aas
lcall
pop
pop
ljmp
mov
push
adc
fs
repz
ja
loopne
sbb
and
jge
addr16
scas
frstor
les
cmp
fwait
sbbl
inc
sarl
icebp
pop
pushf
int3
scas
dec
mov
popa
mov
mov
aad
aad
out
xlat
pop
in
ret
cwtl
adc
repz
sbb
lcall
jo
icebp
mov
cmp
dec
add
call
cs
sahf
idiv
sbb
sbb
pop
scas
repz
and
fidivs
mov
mov
dec
mov
push
pop
lret
cmp
mov
add
mov
out
push
adc
pop
sub
adc
pusha
adc
lret
movsl
cmc
imul
icebp
cwtl
mov
gs
cli
insl
push
and
inc
ljmp
in
or
in
popf
and
lret
mulb
mov
sub
push
daa
cmp
cwtl
aad
cmp
dec
stos
lods
xor
dec
fadds
outsl
dec
mov
dec
adc
mov
mov
mov
or
shr
push
fiadds
rcrl
lret
incl
jnp
sub
dec
dec
pop
rcrl
popa
pop
idiv
xor
push
rcrl
push
pop
leave
loop
sub
xor
cli
frstor
push
dec
mov
xchg
mov
xor
fsubp
push
sub
xchg
jmp
jbe
xchg
aam
shlb
cli
leave
lods
imul
sbb
sub
insl
xlat
icebp
mov
ja
dec
mov
add
xchg
jmpw
imul
stc
mov
mov
add
jl
sbb
xor
jbe,pt
test
sub
inc
enter
notb
in
loop
fsubp
push
test
jns
fcomip
outsb
xchg
addr16
call
jnp
outsl
test
popa
fildll
sbb
cmp
out
jp
lods
and
rclb
scas
sarl
test
hlt
scas
dec
stos
icebp
cmp
mov
add
shlb
jmp
imul
mov
jg
xchg
add
or
and
mov
sub
adc
into
dec
push
std
call
sbb
pop
xor
jne
stos
jnp
push
mov
in
call
dec
cmp
jo
jle
mov
inc
loopne
mov
sbb
mov
add
mov
mov
ret
ret
cmc
ss
sub
std
fimuls
stos
pushf
jns
mov
je
hlt
dec
fwait
mov
inc
jle
iret
mov
outsl
mov
daa
jmp
xlat
test
xchg
mov
sub
fsubrl
fcomip
xchg
cmp
test
cmp
jg
add
fstp
mov
or
daa
dec
loope
jle
pop
push
pop
mulb
les
or
shlb
mov
fs
mov
xor
mov
add
inc
cmp
fmuls
dec
jbe
jg
cmp
adc
repz
adc
xor
pop
mov
imul
mov
lods
sbb
fdiv
and
pushf
mov
push
out
dec
cmc
push
pop
shlb
arpl
pop
imull
mov
lret
dec
xchg
xor
data16
cmp
pusha
fcomps
mov
cli
mov
or
pop
jnp
dec
aaa
fwait
and
in
mov
dec
out
dec
out
push
sbb
rolb
mov
test
jae
xchg
pop
pop
insl
dec
pop
mov
push
movsl
shrl
mov
das
push
out
in
mov
sahf
mov
clc
lock
sbb
or
lock
arpl
in
xchg
cmpsb
sbb
mov
and
dec
into
pop
mov
rclb
scas
stos
push
mov
rolb
push
out
dec
mov
add
int
sar
dec
add
out
aas
sti
inc
lods
les
sbb
imul
je
cli
aam
iret
mov
cmp
loop
xchg
cmp
insb
out
movsb
cmc
lods
jl
push
stos
outsb
outsb
aam
cmp
idiv
lock
cwtl
in
or
jmp
outsb
mov
stos
insb
inc
inc
adc
fsubrs
filds
mov
sbbl
xchg
loopne
shlb
jb
and
or
cmp
lahf
stos
sahf
pushl
cld
lahf
adc
jmp
mov
inc
test
out
arpl
lahf
je
jmp
mov
inc
scas
lods
and
lods
lock
sub
pop
mov
stos
subb
xchg
mov
testb
pop
test
jge
data16
mov
stos
and
cmp
lds
sbb
push
push
mov
insb
add
dec
push
sub
mov
test
and
pop
dec
mov
jae
repz
jmp
aaa
dec
lahf
lods
mov
rol
fmuls
arpl
flds
pop
jmp
cmp
and
mov
jecxz
icebp
jmp
ficoms
inc
lret
test
dec
lods
loop
mov
xor
mov
enter
mov
xlat
push
cmp
inc
pop
push
xchg
push
leave
outsb
mov
or
lds
or
ja
cli
ljmp
or
mov
pop
inc
xor
clc
push
leave
push
sti
xor
sub
gs
mov
aaa
inc
ret
imul
aaa
cmp
leave
push
dec
das
sbb
je
inc
flds
jnp
int
inc
shlb
mov
add
or
pop
lret
jge
ret
lcall
sub
and
pop
pfsub
mov
pop
xor
nop
cmc
loopne
orb
adc
outsl
inc
sahf
loope
add
enter
mulb
jne
mov
cld
pop
es
sub
dec
mov
fsub
xlat
shll
stos
jne
enter
inc
sbb
scas
inc
ja
out
imul
push
or
mov
inc
aas
push
fs
inc
mov
dec
mov
xchg
enter
or
xlat
stc
mov
sub
stc
lret
adc
xchg
rcll
pusha
ficoms
xor
cmc
push
mov
push
sbb
adc
addl
sbb
adc
sahf
and
jnp
clc
cltd
push
ret
cmp
scas
sub
aam
mov
je
sub
and
sbb
out
fcomps
cmpsl
sub
stos
adc
lds
cmp
testb
mov
sbb
inc
jmp
adc
aam
ret
jle
xor
js
pop
or
andb
aad
sub
clc
test
ficomps
lea
xlat
cld
jne
scas
push
inc
icebp
mov
mov
stos
cmp
mov
inc
or
pop
lds
sbb
out
fdivp
loop
push
sbb
dec
and
mov
test
jle
and
ss
push
sub
xor
inc
push
dec
or
mov
int3
dec
ja
mov
fcompl
mov
and
adc
xchg
xchg
push
fnstsw
dec
ficoms
scas
push
les
lcall
lods
shl
cwtl
push
int3
pop
std
sub
bound
inc
jecxz
xchg
pusha
and
mov
xor
sbb
flds
idivb
xor
pusha
xchg
sub
lock
xchg
ror
inc
mov
das
cmc
add
and
js
leave
add
cmpsl
ljmp
inc
dec
dec
loope
inc
data16
inc
jmp
cmp
cmp
xor
adc
pop
adc
add
shlb
cmc
pop
xchg
sbb
pop
test
test
or
cmp
clc
arpl
cs
pop
mov
sbb
pusha
adc
outsb
in
shlb
ret
fdivrs
hlt
aaa
bound
mov
shlb
sub
fsubs
jnp
jge
sarl
pop
fwait
scas
adcl
roll
int3
sub
and
fwait
push
outsb
xchg
lahf
movsb
movsb
adc
jae
pop
mov
das
adc
lahf
push
lods
movsb
cmp
jb
iret
sbb
lret
jecxz
lahf
mov
in
scas
sahf
or
mov
inc
sbb
hlt
mov
movsb
int3
fisubrl
pop
sahf
scas
rcll
xor
not
push
into
ret
lret
das
out
cmc
pop
jb
mov
in
cmpsl
imul
mov
fs
dec
mov
int3
jno
cmp
repz
pop
jae
in
sbb
lret
pop
xchg
sarl
loop
jb
xor
add
sub
sti
sbb
data16
sbb
mov
push
fs
loope
cmp
sbb
push
dec
adc
xchg
mov
lods
push
test
dec
cli
adc
jmp
in
inc
cld
push
cmp
push
dec
repnz
shlb
dec
jns
dec
dec
inc
add
andl
xchg
pop
push
mov
paddb
or
test
cmp
insb
jb
shlb
xor
sahf
nop
stos
mov
mov
out
or
mov
add
mov
arpl
nop
xchg
or
cmpsl
test
js
cmpsl
leave
cmpsb
cltd
xchg
rep
xor
xchg
cmp
aas
stos
mov
lods
mov
mov
inc
xchg
dec
into
xor
dec
popa
test
dec
jge
bound
adc
xchg
cmp
push
call
mov
jb
imulb
sub
xchg
xchg
xor
out
inc
mov
stos
test
cmp
adc
jnp
pop
jg
subb
xchg
ret
mov
jl
clc
inc
dec
xchg
lcall
ror
sarb
mov
cli
bound
in
scas
lock
adc
rolb
popf
and
jae
cmpsb
xchg
lods
xor
jno
sub
and
jp
mov
hlt
or
sub
lcall
xabort
ret
test
arpl
orb
push
lods
iret
sub
aas
or
xchg
cwtl
scas
sub
cmp
fisubrl
popf
mov
pop
repnz
dec
pop
adc
out
scas
ficompl
ds
incl
sbb
mov
cmp
mov
fadd
push
fs
subl
pop
jp
fdivrs
jb
cmp
ss
popa
xchg
mov
mov
dec
mov
in
les
mov
inc
fdivrp
stos
les
mov
push
ret
movsl
mov
stc
add
sub
add
sbb
scas
test
dec
xor
and
out
ds
jns
out
lahf
pushf
leave
or
mov
sbb
test
jmp
repz
imul
cmp
adc
hlt
pop
cmp
inc
sbb
dec
mov
cmp
inc
mov
or
mov
mov
add
dec
lods
shrb
insl
out
out
das
popf
push
inc
mov
je
xchg
fiaddl
push
enter
nop
adc
loope
jg
scas
xchg
mov
aad
xor
push
xchg
fwait
das
or
jne
in
jg
movsb
int
imul
stos
sub
dec
lret
jbe
out
inc
cmp
out
mov
aam
mov
push
or
imul
shl
mov
je
mov
xchg
sahf
loop
push
sub
jb
sub
mov
xchg
sub
lret
call
adc
outsl
inc
sahf
popf
loope
fbld
push
fistpll
or
loope
mov
xor
gs
and
xchg
dec
bound
mov
loope
sti
and
pop
push
push
mov
ret
lock
and
pop
pop
pop
lods
add
mov
rorl
imul
mov
pop
cmp
into
mov
xchg
dec
popa
shl
cs
mov
mov
pop
xor
mov
fists
xchg
fcmovnbe
imul
and
aas
out
jb
dec
fs
scas
cmp
aas
cmp
mov
pushf
sbb
mov
popf
mov
inc
fs
xchg
jl
inc
ficoms
mov
in
push
push
aad
dec
mov
add
dec
ret
jge
xlat
xchg
xor
lret
inc
and
sbb
sti
dec
sub
fxam
pushf
cmpsl
les
mov
mov
xor
xchg
lahf
pop
adc
in
xor
dec
push
sub
mov
js
js
pop
push
mov
outsb
into
outsb
mov
dec
fildll
jle
mov
mov
ss
xchg
jnp
add
jne
movsb
mov
mov
sub
addr16
adc
jno
sub
xor
inc
fistl
stos
dec
mov
xchg
cltd
fcomip
fsubl
push
dec
inc
std
outsb
iret
sbb
in
scas
ficoms
dec
shl
and
mov
xchg
pushf
mov
je
dec
je
insb
fisttpll
fists
pop
xchg
xor
repz
movsb
jnp
mov
movsb
fisubs
add
jp,pt
aam
scas
push
pop
xchg
sub
lea
outsl
mov
shll
jne
inc
inc
inc
int3
cmpsl
cli
mov
out
cmp
xchg
and
aad
adc
push
jge
rcrl
xor
dec
aaa
dec
and
push
adc
lods
or
sbb
mov
or
inc
in
fnstenv
insl
sub
fsubrl
adc
cmpsl
fisubrl
mov
push
xchg
dec
jl
call
cmp
sub
push
and
or
inc
je
add
ret
push
xor
add
mov
das
dec
pop
sbb
inc
add
imul
sub
adc
xchg
or
jle
mov
pop
add
mov
bound
push
xchg
mov
jns
sub
cmp
mov
out
notb
ja
sbb
and
rcrb
loop
and
mov
insl
rclb
into
push
xorb
mov
loop
mov
pop
lret
adc
jo
cmc
xchg
lret
mov
loope
or
cmp
pop
int3
cwtl
pop
data16
and
push
in
in
aam
movl
xor
xor
mov
push
xchg
xchg
inc
xchg
jae
push
xchg
paddsw
push
adc
fsubl
adc
scas
xor
ror
popf
jle
int3
arpl
or
xchg
cli
dec
and
shr
push
shrb
push
mov
jb
xor
mov
test
sbb
pop
out
cltd
dec
in
test
adc
jmp
jns
mov
add
add
aas
jge
daa
xlat
lods
dec
aam
lret
pop
sahf
sbbl
sbb
mov
out
adc
data16
xchg
jnp
in
xor
aaa
mov
dec
aad
pop
push
xchg
cltd
pop
enter
jne
and
dec
jp
sub
pop
xchg
arpl
inc
mov
sbb
dec
adc
nop
test
lds
imul
mov
xchg
add
dec
addl
xchg
out
imull
jbe
cwtl
pop
cmovle
ljmp
ds
rclb
popa
mov
cmpsl
push
mov
xor
ss
adc
adc
lret
cmp
xlat
popf
in
fdiv
pop
test
pushf
outsb
xor
out
lret
flds
les
mov
sbb
xchg
xor
push
je
in
sub
cmp
insl
fisubrl
adc
mov
sub
lcall
xor
sti
pop
out
aas
mulb
rcrl
push
loope
xchg
and
js
lahf
cwtl
cmpsl
cmpsl
lods
and
xchg
pusha
and
inc
cltd
dec
roll
in
sbb
fwait
and
cmc
popa
rolb
imul
mov
or
push
push
shl
adc
adc
jbe
rolb
cmp
sti
subl
sbb
fldl
std
nop
lea
mov
jo
pusha
jge
or
and
lock
loopne
nop
lea
mov
jo
pusha
jge
or
and
lock
loopne
nop
lea
mov
jo
pusha
jns
or
and
ror
rcr
jmp
sbbb
dec
inc
neg
insl
pusha
or
mov
push
filds
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
shlb
repnz
lock
push
sbb
arpl
adc
dec
xor
insl
rcrb
loop
xchg
fldl
in
push
pop
inc
or
sarb
add
rolb
mov
les
notl
popa
aaa
push
dec
bound
inc
sub
popf
cmpsb
in
leave
mov
pop
xor
adc
arpl
xor
mov
jno
andl
int3
scas
xor
xorb
ja
gs
popf
in
sub
add
gs
and
loop
leave
sbb
cld
add
push
int
andl
insl
ror
ret
mov
xchg
or
fisttps
repnz
or
in
push
inc
mov
notl
pop
sub
inc
sbb
xor
lods
out
mov
js
sub
bound
xchg
das
xchg
cmp
push
out
sub
mov
sbb
push
cmp
mov
lcall
or
in
hlt
push
add
bound
inc
add
jge
or
mov
lock
push
je
jne
push
add
push
jge
add
int
test
scas
dec
cltd
lock
dec
bound
das
insb
and
push
or
fmull
int
std
mov
or
adc
dec
xor
insl
rcrb
loop
xchg
fldl
in
push
sbb
bound
xor
insl
rcrb
int
insb
loopne
test
inc
push
add
jno
pop
and
push
sub
jne
mov
fdivrs
xor
push
dec
sub
mov
nop
int3
cmp
sbb
stos
jecxz
xchg
jecxz
shl
or
sahf
fnstsw
jb,pt
fldl
jge
addb
fisttps
add
aam
or
and
lcall
enter
pop
imul
add
adc
movsb
push
xchg
negb
clc
cltd
notb
inc
and
sbb
js
clc
add
aad
packuswb
jb
in
repz
pop
imul
mov
loope
addr16
filds
dec
sarb
test
xchg
sbb
xchg
mov
mov
xchg
jo
lret
cli
sub
push
lret
or
jmp
movsl
in
inc
or
jle
fidivrl
in
cli
and
outsl
insl
push
jecxz
popf
repnz
push
popa
cmpsb
stc
jecxz
or
add
loopne
sub
sahf
mov
mov
flds
shufps
insb
xchg
add
xor
dec
sub
jl
int
mov
int
out
mov
lods
lret
and
aad
and
rcll
jmp
in
mov
mov
lret
shl
jo
imul
xchg
mov
push
lods
aam
adc
inc
jecxz
jge
out
scas
cmp
jecxz
shl
imulb
out
imul
fbld
push
adc
dec
add
rorl
sbb
push
push
imul
ljmp
or
sbb
shld
inc
mov
cltd
mov
movsl
xor
aam
sub
js
sub
popa
push
sbbb
mov
and
push
jae
lahf
pusha
aaa
std
adc
dec
xchg
orl
inc
sahf
push
icebp
push
test
mov
pop
frstor
sub
lret
xor
mov
pusha
out
nop
in
aad
rcll
pop
int3
inc
mov
or
loop
inc
cmpsl
imul
ror
je
inc
je
lock
xor
sub
pop
push
mov
push
in
pop
cld
xchg
into
mov
ficoml
shll
sti
jl
ret
lods
sub
push
mov
add
push
inc
adc
int
pop
jbe
mov
mov
add
fmull
cmpsl
mov
sahf
jo
je
popa
pop
fucomip
mov
loop
xchg
mov
pop
or
jmp
sbb
jle
jo
xchg
out
into
xor
in
pop
sbb
lcall
shrl
aam
xchg
add
insl
lret
test
ror
ja
cmpsb
iret
ret
ret
idivl
lock
aaa
sub
cmove
mov
aad
push
mov
lahf
pop
dec
or
push
std
imul
pusha
mov
mov
cmp
fimull
fbld
aas
mov
mov
mov
icebp
fsts
mov
ja
sub
loop
or
jp
mov
mov
sub
and
ret
pop
xor
mov
jecxz
cmpsb
insb
inc
shrl
inc
insl
push
jmp
push
xchg
mov
bound
je
lcall
mov
lret
femms
and
xor
out
sub
cmpsl
sub
js
imul
bound
push
test
sub
popa
xchg
cmp
lea
xor
enter
lods
loope
jl
shr
orb
mov
xor
mov
daa
xchg
dec
mov
in
xchg
pop
fwait
mov
mov
cmp
aad
rcrl
loop
add
nop
sarl
outsl
cmp
loopne
gs
test
jbe
adc
dec
push
insb
mov
xchg
fyl2x
push
sti
aad
int
mov
bound
push
movsb
stc
push
fcomp
insl
addr16
jmp
adc
in
adc
icebp
inc
adc
or
ljmp
lods
lret
lret
movsb
icebp
cmpsl
jbe
and
push
sbb
or
into
insl
stos
mov
push
xor
jle
xchg
fdivrs
pusha
sbb
nop
jb
or
and
and
ja
aas
inc
and
jnp
or
xchg
mov
push
pop
push
pop
ja
sub
jg
test
stc
dec
jbe
ret
mov
dec
cmp
lods
mov
ljmp
pop
and
cmpsb
jg
mov
xlat
and
ret
test
adc
mov
stc
popf
push
adc
adc
ljmp
daa
mov
out
xchg
mov
jno
sti
xor
outsb
cmc
adc
cld
scas
insl
adc
mov
adc
les
sub
leave
or
sub
adc
cmp
push
repz
cmp
ret
movb
ja
popf
add
rorl
xchg
push
gs
sub
das
lea
icebp
dec
flds
sbb
adc
scas
mov
orl
jmp
pushf
cmc
mov
xor
jg
pop
sbb
push
inc
cmpsb
mov
int
sub
lods
sub
pop
pop
add
push
mov
sub
or
testl
jecxz
cmpsl
icebp
mov
sbb
mov
pop
stos
leave
std
pop
into
cli
filds
fists
inc
fs
pop
mov
cli
cmp
xor
mov
jns
pop
test
pop
out
pop
pop
dec
lea
lock
lods
mov
jbe
aas
push
inc
sub
andb
inc
daa
sub
sahf
adc
icebp
fcompl
cwtl
es
cltd
subl
sbb
push
or
cmp
cmpsl
out
lret
mov
adc
icebp
jo
adc
xchg
test
or
test
loop
movsl
jmp
jle
sbb
test
add
xchg
cmc
into
jo
pop
mov
xor
ljmp
shrb
rorb
sbb
movsl
pop
mov
add
push
xchg
mov
pop
dec
jno
sbb
loopne
jo
mov
cmp
jge
ret
mov
and
add
and
cld
cmovg
fdivrs
rorl
leave
fadd
outsl
push
cmp
mov
jle
and
lret
aad
dec
cwtl
cmp
scas
inc
mov
pushl
mov
gs
icebp
imul
sbb
out
pop
shr
pop
pop
pop
sbb
inc
pop
add
add
aad
shlb
adc
rclb
in
jle
dec
pop
scas
mov
sub
inc
cltd
imul
sub
push
data16
mov
cmp
vpsubsb
fisubl
scas
sub
cmp
aad
sub
cmpsl
fwait
jecxz
test
out
sub
dec
mov
aaa
xor
out
stos
lret
into
sub
test
adc
cld
mov
sbb
jne
jb
adc
mov
stos
xchg
add
inc
ret
pop
pop
aaa
movsb
cmpsb
xchg
dec
mov
test
jmp
sub
sub
jp
mov
xchg
jnp
mov
loopne
cmc
or
cmpl
es
loope
xchg
cmp
stc
lea
sub
test
in
mov
pop
xchg
sbb
cli
mov
cld
xor
push
sbb
adc
push
jne
push
add
push
stc
adc
mov
xor
lahf
scas
inc
ja
lds
repnz
ss
push
fdivs
cmpsl
in
lcall
add
dec
add
lcall
pop
pop
xchg
mov
insb
clc
inc
dec
cmpsl
jl
dec
lds
movsl
loope
dec
std
push
shl
rorb
repnz
roll
or
popa
rorb
xchg
in
lea
push
adc
ret
jp
push
xor
popf
jle
sub
mov
jmp
ret
mov
and
xchg
cli
sbbl
mov
mov
and
push
cmp
jl
xchg
adc
mov
hlt
xchg
dec
fstp
cld
lock
push
mov
jmp
dec
int3
gs
mov
lahf
dec
and
loop
xchg
leave
push
bound
cs
jp
sbb
mov
mov
lret
es
xor
mov
rolb
sbb
push
fstpt
or
popa
fstl
jne
cmp
stos
ljmp
aad
jl
leave
mov
insb
pop
push
cmp
sub
sbb
mov
mov
retw
shlb
inc
pop
mov
loopne
sbb
test
mov
pop
jecxz
cmp
out
int3
sbbb
jne
jge
mov
dec
mov
in
xchg
xchg
pop
jg
add
adc
and
incl
in
cltd
push
inc
call
mov
jg
fdivrl
notl
enter
nop
sbb
xor
cmp
push
pop
andl
lods
adc
call
test
das
fidivrs
std
adc
inc
das
or
notb
rorl
fabs
lahf
imul
in
mov
icebp
icebp
insb
mov
and
daa
xlat
enter
cmpsb
mov
daa
lret
xor
leave
or
aas
pop
lcall
xor
or
negb
jnp
out
nop
or
shrb
ja
daa
int
pop
in
daa
out
pop
pop
adc
inc
xor
sarb
mov
int
add
adcb
push
sub
pop
movsb
jne
mov
add
pcmpeqb
sub
notl
inc
dec
adc
out
imul
lret
and
and
rcl
jb
movb
push
add
jnp
dec
scas
push
mov
push
int3
inc
pop
cs
subl
xlat
add
repz
jmp
repz
or
lods
addr16
or
fisttpl
bound
jge
or
mov
rorl
pop
stos
mov
xlat
stc
cli
xchg
mov
outsb
out
mov
pop
aam
sub
imul
pop
in
iret
rcrb
cmpsb
add
mov
add
in
jns
stos
sbbb
sbb
jp
jp
adc
jp
test
cltd
sbb
sub
ljmp
dec
jmp
movsb
dec
pop
ret
xchg
daa
out
aam
das
jbe
add
and
mov
cmpsl
aam
push
fsub
jmp
sbb
xchg
jp
js
mov
outsl
xchg
insl
mov
dec
xor
sub
or
adc
push
scas
adc
or
sbb
out
xchg
popa
mov
lock
sub
adc
jle
sub
and
jmp
bound
cmp
jmp
cwtl
fcom
lea
inc
movsl
mov
sahf
das
cmp
js
inc
rcrl
pop
dec
nop
xchg
pop
adc
nop
adc
dec
jle
cmp
pop
jbe
cmp
mov
ror
arpl
inc
mov
ret
hlt
gs
lret
lock
xchg
inc
iret
inc
add
pop
cmp
popa
mov
mov
in
bound
mov
push
push
les
sti
pop
xorl
push
cmc
sub
xchg
cld
popf
into
add
mov
sub
or
lcall
xor
push
and
add
je
mov
mov
mov
ret
mov
mov
ret
mov
jo
pop
mov
imul
and
sbb
test
ds
adc
mov
mov
fdivs
sub
xchg
aaa
incl
icebp
cli
loope
lock
lret
or
adc
adc
fidivl
xchg
sbb
test
andb
jne
adc
outsl
or
pop
aas
jecxz
xor
repz
mov
add
cmp
addr16
inc
push
rclb
mov
pop
adc
mov
test
sub
xorl
and
adc
jae
inc
iret
bound
je
push
enter
pop
lahf
ret
inc
out
and
movsl
pop
test
xlat
sub
lcall
push
mov
fcompl
jp
mov
xchg
mov
loope
xor
aaa
cmp
sbb
dec
mov
fstl
mov
jnp
lods
les
jbe
add
inc
mov
xchg
cmp
aaa
cld
jecxz
xchg
stc
das
sub
pop
jp
xor
test
hlt
xchg
cmp
fwait
ror
imul
jne
push
dec
leave
aam
iret
icebp
dec
jno
mov
and
clc
lea
pusha
add
test
sub
or
in
pop
fistpll
outsl
aaa
sbb
mov
push
dec
sahf
stos
jmp
sbb
cmpsl
popf
ficomps
in
xchg
lea
mov
sub
cmpsb
sbb
push
leave
xchg
js
scas
mov
mov
cmp
cltd
mov
outsb
fucomi
push
inc
and
inc
lea
mov
and
incb
cmc
sub
pop
inc
xchg
cmpl
mov
divb
add
add
push
mov
cmp
adc
js
push
shrl
insl
jle
mov
lods
lahf
inc
mov
arpl
add
ljmp
xor
xchg
das
push
leave
loopne
jmp
outsl
mov
cmpl
push
loop
adc
add
mov
cmp
mov
repnz
jmp
inc
orl
mov
sbb
cmp
sahf
jl
fdivrp
lret
ret
rclb
mov
cltd
fiadds
fiadds
push
in
clc
mov
push
imul
dec
ret
and
mov
pop
jns
jp
or
subb
mov
push
jnp
outsl
cmp
pop
jecxz
xor
cwtl
inc
cmp
inc
adc
lock
mov
stos
xlat
data16
mov
dec
test
add
push
scas
or
lds
stc
push
cwtl
sbb
mov
or
sbb
sub
mov
push
stos
lret
hlt
cmp
inc
or
push
out
pop
loop
cmp
arpl
add
jmp
clc
stos
shlb
inc
mov
loopne
sub
rorb
dec
out
jns
in
pop
fldt
scas
aad
or
test
aad
mov
in
cmp
rolb
dec
iret
pop
xor
pop
xor
clc
pop
mov
into
mov
mov
repnz
jns
aam
in
rcrl
xchg
bound
rolb
dec
mov
dec
pop
std
add
jb
scas
dec
bound
inc
lret
add
cmp
inc
sbb
push
xor
dec
iret
out
sbb
cmpsb
sbb
mov
stos
xorb
cwtl
mov
gs
mov
sti
scas
mov
js
repnz
shrl
in
cmpl
sbb
xchg
out
mov
cltd
push
xchg
scas
arpl
outsl
pusha
inc
int
jae
mov
mov
xorl
mov
pop
stos
hlt
push
jmp
testl
repnz
fiaddl
sub
cs
sahf
pop
iret
mov
test
xor
dec
jae
mov
inc
dec
mov
sti
sub
movsb
add
es
outsb
mov
inc
stc
ljmp
push
and
xchg
xchg
sub
sub
cmc
adc
mov
sbb
push
outsb
in
les
mov
stos
mov
dec
pop
aam
sbb
add
push
mov
add
pusha
sbb
scas
cmc
insb
add
mov
mov
fadds
leave
inc
adc
cltd
pop
pop
lcall
mov
lret
cltd
and
xchg
or
icebp
stos
or
adc
pushf
test
jbe
mov
or
faddl
insb
mov
pop
xchg
repnz
call
leave
shll
xchg
xchg
lods
and
imul
hlt
in
mov
mov
aaa
cmp
stos
cs
lret
pusha
lcall
mov
cmp
out
loope
int
push
xor
enter
insb
sbb
or
imulb
setnp
cwtl
push
out
ja
imull
out
inc
rcrl
pop
sbb
push
loop
adc
mov
outsl
inc
rcrl
dec
mov
mov
stos
fcomps
mov
out
je
cmpsl
pop
mov
xchg
push
loop
mov
dec
fnstsw
ret
sar
ds
ror
inc
ljmp
push
inc
mov
fsubp
or
cmp
out
stos
hlt
mov
outsb
aad
pop
pushf
xchg
inc
icebp
insl
lods
mov
sbbb
in
push
lods
lds
std
fwait
mov
ljmp
cmp
mov
pop
push
in
jle
mov
test
ljmp
sbb
xor
loopne
or
jp
adc
stc
aad
rclb
inc
mov
inc
jmp
or
stos
cwtl
imul
dec
ret
or
loopne
mov
jmp
mov
and
orb
inc
pop
xor
push
cmp
dec
pslld
xlat
lea
arpl
lcall
pop
sub
cmpsl
daa
sti
es
clc
sbb
or
push
push
ret
clc
or
sub
int
pop
lock
out
xchg
ss
insb
pop
out
cmpb
shll
lret
cmpsl
cld
mov
inc
mov
insb
sahf
sub
and
sub
test
test
dec
mov
enter
shl
lea
cld
cltd
sarl
add
aad
popa
pop
dec
ret
clc
mov
and
xchg
and
stos
fbstp
xchg
iret
xchg
sti
push
xorl
or
dec
or
gs
loop
cmpsb
repz
mul
dec
xor
cli
cmp
imul
loopne
in
fiaddl
loopne
test
shl
xchg
xor
loope
and
flds
mov
insl
push
mov
dec
fs
mov
fs
sbb
std
rorb
inc
or
mov
mov
fldt
jg
aam
fildll
fadds
clc
stc
lea
xor
push
add
inc
pop
push
xor
fisubrs
negl
jl
pop
fildl
jae
daa
jns
repz
mov
fwait
jo
mov
jo
lret
mov
or
xor
push
add
mov
lock
xchg
adc
fcmovnbe
mov
add
fwait
adc
mov
aas
xchg
mov
xchg
jo
dec
mov
mov
xorb
and
idivb
gs
lahf
aas
outsl
sbb
mov
push
adc
scas
and
pop
jbe
add
daa
jle
mov
or
jnp
testb
push
adcl
bound
jnp
dec
jecxz
push
fnstsw
pop
movsb
out
push
and
inc
stc
leave
jno
les
push
and
sarb
scas
add
aam
push
sub
lret
xor
dec
mov
shll
mov
insb
jb
jg
xchg
aas
push
and
xor
add
xchg
jo
fwait
cmp
sub
mov
or
pop
cmp
shrl
cmp
pop
fisubrs
jl
mov
test
add
mov
jns
cld
lahf
lcall
shrl
add
inc
xchg
mov
sti
pushf
xchg
cmp
mov
or
pop
movsb
cmpsb
xchg
loope
call
mov
jb
push
mov
mov
outsl
leave
pop
push
lods
stos
test
rol
push
push
std
hlt
dec
movsl
sbb
push
add
ja
fs
mov
push
inc
test
fwait
mov
inc
push
pushf
hlt
jp
adc
es
adc
int
xor
outsl
nop
stos
sbb
push
inc
lea
ds
addl
aam
subb
ss
xchg
mov
mov
mov
sbb
push
mov
cltd
xor
push
out
mov
pusha
aad
gs
mov
or
pop
inc
inc
xchg
testl
adc
dec
shl
mov
fidivrs
pop
adc
mov
mov
cmpl
shll
test
jecxz
push
dec
fidivrs
jp
test
pushf
icebp
lock
push
xchg
mov
fisubrl
xor
mov
lahf
test
cwtl
adc
push
pop
loope
dec
jo
andb
add
or
subb
or
dec
or
mov
sub
test
inc
adc
add
nop
rorb
aam
and
jl
mov
test
shr
xlat
push
or
inc
fnstenv
jge
ret
pop
or
sub
xor
out
mov
sbb
repnz
adc
pop
push
mov
push
shlb
in
faddl
shlb
adcb
mov
jecxz
dec
push
lahf
loop
jbe
xchg
imul
into
mov
cwtl
outsb
lods
add
ja
jl
js
test
sbb
ret
movsl
pushf
paddusb
sub
fidivrl
inc
mull
cmp
xchg
and
rcl
push
pop
push
out
push
cmp
add
dec
test
ja
xchg
xchg
int
scas
mov
std
or
ret
pop
in
and
aad
scas
bound
cmp
jp
inc
repz
loop
xchg
fldl
in
push
sbb
bound
xor
insl
rcrb
loop
xchg
fldl
in
push
sbb
bound
xor
insl
rcrb
loop
adc
or
std
and
push
sbb
bound
pop
add
jl
insl
rcrb
loop
xchg
fldl
in
push
sbb
bound
aad
mov
adcb
mov
mov
nop
lret
adc
xor
and
push
dec
inc
pop
bound
jp
mov
mov
repnz
push
sub
cmp
inc
pop
jb
bound
mov
mov
repnz
push
pop
inc
pop
xor
sub
loop
adc
ret
pop
ljmp
xchg
jmp
jae
pop
dec
and
adc
mul
aas
ror
int
js
xchg
lock
in
aas
scas
pop
scas
dec
mov
sub
mov
mov
jns
xchg
scas
adc
fs
push
pop
sbbb
daa
ret
cmpb
imul
add
cmc
in
scas
lret
dec
adc
jge
loope
mov
cmp
push
repnz
jp
ja
aad
add
sub
push
test
adcb
mov
or
or
and
in
sbb
dec
inc
shrb
or
arpl
mov
mov
repnz
xor
and
push
dec
inc
pop
jb
bound
out
fcmovnu
stos
in
mov
mov
xchg
pop
dec
inc
dec
or
aas
pop
adc
xor
out
sar
iret
ljmp
sbbl
dec
jns
pop
sbb
pop
and
rcl
fadds
ljmp
xor
and
push
dec
inc
pop
jb
bound
mov
mov
repnz
xor
and
push
dec
inc
pop
jb
bound
mov
js
mov
push
mov
mov
jg
push
xchg
adc
imul
mov
repz
cmp
sub
in
movsl
inc
test
xor
dec
movsl
gs
orb
testl
sahf
cmpsb
push
sbb
mov
xchg
adc
cmp
mov
and
sahf
icebp
inc
dec
adcb
mov
push
fistl
cmp
data16
leave
xchg
or
jo
xchg
jb
pop
push
adc
jg
and
pop
jbe
cli
adc
mov
cld
ljmp
inc
and
scas
mov
inc
mov
pop
pusha
pop
jae
mov
notb
inc
lock
or
rcrl
jo
sar
lahf
aam
inc
inc
in
push
sub
mov
push
inc
sub
sti
add
mov
es
scas
xchg
bound
xchg
clc
leave
fwait
mov
jnp
loop
movl
xchg
xchg
pop
test
aas
adc
jmp
std
loopne
or
fimuls
ja
ss
mov
or
inc
jg
dec
inc
out
bnd
fdivrs
mov
jbe
pop
add
cmp
mulb
xor
pop
adc
lcall
cmp
fidivs
leave
jmp
xchg
daa
cltd
mov
data16
lds
mov
adc
les
mov
mov
cmp
add
lahf
test
imul
mov
scas
pop
mul
mov
add
xchg
test
dec
mov
aad
cmp
push
pop
dec
pop
dec
mov
shrl
mov
shrb
or
sbb
bound
sub
loope
scas
inc
dec
sbb
sbb
das
push
je
push
fisubl
sub
and
inc
scas
adc
cmpsb
mov
cli
cmp
ret
out
mov
xchg
sbb
jmp
sbb
fs
lret
sti
sbb
pop
imull
pop
lcall
sbb
pop
aad
pop
xchg
xor
repz
divb
push
xchg
jle
adc
in
inc
arpl
sbb
xchg
xlat
jns
xchg
cmp
pop
ret
lods
sbb
push
fwait
pop
and
mov
or
imul
cli
xchg
and
icebp
loope
sbb
lock
lahf
dec
das
inc
les
pop
mov
shlb
mov
pop
mov
loopne
sub
adc
lods
pop
xchg
addr16
addl
repnz
xchg
mov
lock
sbb
pop
pop
inc
sar
jnp
xlat
xorb
lock
and
pop
int3
xchg
mov
out
addr16
mov
scas
sbbl
pop
out
lods
dec
jg
mov
inc
cli
or
scas
pop
outsb
cmpsb
pop
clc
or
rcr
addl
jmp
test
sbb
push
jmp
xchg
insl
scas
lret
sbb
cmc
mov
cmp
pop
fsubrl
dec
push
inc
or
jecxz
or
in
cmp
dec
mov
add
test
std
xchg
cmp
cmpsl
shr
mov
pop
pop
sub
je
subb
dec
loope
xchg
shl
cmp
int
ds
cmpsl
mov
cmp
mov
out
mov
aad
sub
mov
jne
sbb
mov
stos
lock
dec
js
add
jl
sub
into
jb
imul
xlat
push
mov
mov
fwait
lock
lods
rcll
pop
jo
sbb
dec
mov
push
sbb
shr
aad
jmp
xchg
mov
data16
push
jo
mov
cmc
dec
push
inc
jno
inc
imul
fwait
cli
out
mov
mov
or
inc
add
int
sub
xchg
idivb
insb
sbb
adc
ret
js
stc
pop
andl
rolb
daa
dec
fnstenv
shlb
mov
insb
fldt
push
jg
cmpb
xchg
repz
or
sub
sbbl
pop
add
fadds
mov
push
xor
enter
xchg
cmpsl
sar
push
inc
sub
lcall
cmp
sahf
lods
mov
push
pop
inc
andl
bound
pop
andb
adc
lods
pop
into
push
outsl
int3
mov
jno
ret
in
sub
xchg
inc
outsl
dec
das
icebp
inc
ljmp
lea
adc
hlt
ret
pop
xchg
cwtl
push
aaa
ja
nop
xchg
inc
push
mov
mov
jae
jo
xchg
pop
adc
popf
into
mull
xchg
inc
andl
dec
xorb
out
call
jns
cltd
mov
pop
cmp
add
outsl
inc
nop
and
jecxz
stos
ds
scas
aad
mov
rcl
push
in
imul
xchg
stc
pop
test
outsb
add
add
insb
movsl
sub
push
mov
stos
in
sbb
xor
aad
mov
jo
inc
xor
adc
call
pushf
sarl
mov
cmp
adc
leave
outsb
push
cli
or
in
dec
push
add
int3
jbe
mov
adc
mov
mov
push
add
sub
out
nop
ja
push
cli
push
push
push
xchg
and
gs
aas
mov
xchg
dec
lds
mov
sbb
call
call
sti
cli
ficoms
sbb
dec
lret
adc
sbb
push
and
sub
aad
scas
sub
fidivrs
aam
push
and
or
adc
add
adcb
ret
mov
inc
icebp
xor
scas
sbb
decb
test
cltd
or
sbb
pop
cmp
push
dec
add
push
or
fildl
loope
push
out
push
daa
add
repz
push
vpshaq
int3
sub
cwtl
scas
pushf
adc
ljmp
push
movb
add
cmp
int
xor
dec
xor
movsb
nop
ss
js
dec
mov
and
mov
aas
clc
mov
dec
hlt
xor
mov
bound
pop
dec
sbb
insb
mov
dec
dec
loopne
jb
mov
faddl
adc
mov
jae
data16
std
mov
add
jne
lds
enter
stos
push
cwtl
and
in
out
arpl
sbb
out
and
mov
fimull
mov
in
test
inc
outsb
mov
faddl
sbb
rorl
ss
inc
nop
push
stos
pop
nop
lock
lcall
adc
jae
jle
fistpll
fiadds
mov
fisubl
sub
push
xlat
pop
push
das
push
dec
xor
pop
cs
inc
mov
pop
xchg
mov
xchg
int
jmp
hlt
rolb
add
adc
and
push
outsb
outsl
ret
jge
movsb
xor
jmp
jae
mov
jmp
rcrb
or
sub
jp
mov
mov
cmpsb
jmp
insl
sub
mov
push
enter
sub
add
pop
out
test
subl
lret
les
jecxz
jns
sub
jb
into
sub
jo
hlt
jmp
nop
dec
jp
lds
xchg
adc
ss
jb
pusha
movsl
and
shl
xchg
mov
cmp
mov
adc
jge
sub
cmc
push
pop
in
sti
mov
pop
adc
or
stos
testl
sub
stos
adc
push
out
adc
jnp
xor
push
cmp
dec
jne
mov
repnz
outsb
and
push
inc
push
loop
jns
or
inc
fiadds
movb
xor
mov
adc
outsb
mov
cli
jb
cmpsl
pop
xor
jg
jg
sub
mov
mov
testb
fisubs
test
sub
sub
xchg
insb
cld
ja
nop
push
fcmovnb
cli
andb
lahf
sub
push
sbb
pop
ds
inc
cld
lock
hlt
out
aam
ret
into
loopne
sbb
cmp
jl
xchg
outsl
mov
adc
hlt
add
rcrl
cmpsb
push
xor
clc
xor
movsl
out
stc
mov
jle
xor
ja
lret
add
push
mov
push
and
es
stos
push
cmc
lret
icebp
int
mov
xchg
cmpsl
cmp
test
cmp
lods
jne
push
pop
cs
push
push
adc
pop
lret
push
shll
pop
testb
in
test
lods
sub
pop
add
notb
mov
mov
mov
loope
push
mov
xchg
jmp
dec
pop
out
adc
testl
or
addl
clc
es
out
or
add
pushf
mov
push
push
and
stos
int3
insb
dec
mov
jns
aam
mov
inc
xchg
cmpsl
testl
dec
fistl
jbe
shl
cs
pop
pop
add
xchg
inc
movsl
dec
into
stc
jnp
call
cltd
xlat
jp
movsb
jb
out
push
add
das
orb
mov
mov
hlt
pusha
or
shrb
pop
jns
jbe,pt
or
fsubrs
cmp
lret
push
mov
cmc
mov
xchg
lret
jns
add
mov
aam
inc
xorb
rolb
mov
daa
aaa
mov
xchg
lods
sub
notl
mov
insb
mov
dec
fistpll
stos
cli
repnz
imul
loope
xchg
out
push
sar
inc
add
call
pusha
adc
mov
test
mov
nop
push
cmp
push
nop
cli
xor
mov
add
sub
inc
inc
lret
cmp
mov
les
cmpsl
inc
into
mov
mov
add
sbb
sub
inc
popf
cmp
adc
pop
push
push
ret
inc
cltd
or
data16
int3
pop
popf
mov
lahf
xchg
xchg
negl
dec
test
sub
pushf
push
fstpt
or
bound
addr16
loop
mov
fld
and
pop
or
sbb
push
jb
and
cli
sbb
jge
and
js
daa
push
idivl
lret
outsb
push
sbb
ja
mov
loopne
out
popa
xchg
stos
and
push
imul
rorb
sub
call
adc
dec
mov
dec
push
xor
sub
sbb
or
push
outsl
sbb
ret
cmp
lods
push
inc
out
les
xchg
or
ljmp
popf
out
or
jge
mov
push
insl
sub
pushf
jmp
rorl
das
xchg
in
push
hlt
sarb
in
ja
mov
inc
mov
inc
stc
dec
mov
test
daa
and
and
jle
jnp
xchg
pop
xchg
test
lret
ret
movsb
mov
aaa
pop
push
inc
mov
push
popf
or
das
outsl
mov
mov
test
pop
cld
xchg
cltd
sahf
jmp
pop
movsb
sub
jp
gs
imul
test
sarb
push
scas
pop
pop
shll
cmp
sbb
loopne
sbb
dec
inc
add
push
jmp
push
inc
scas
scas
lods
hlt
inc
pop
repnz
xchg
loope
pop
out
mov
in
daa
rorl
cmpsl
adcl
gs
mov
in
push
mov
popf
in
stos
das
adc
cwtl
inc
out
jg
shlb
or
inc
test
mov
add
adc
icebp
mov
jmp
mov
test
sub
out
cvtps2pi
sub
lock
aaa
mov
xor
mov
mov
and
push
lahf
ret
xlat
arpl
imul
insl
cmp
mov
scas
out
lods
hlt
sub
jle
mov
into
inc
and
adc
clc
mov
cmp
sub
incl
jge
stc
andl
ret
out
push
and
repz
sbb
cmp
or
jg
mov
test
add
sbbl
das
aam
jle
sbb
leave
scas
gs
cld
cld
xorl
ds
or
ja
adc
loop
rcr
es
mov
mov
lds
aas
aaa
loopne
in
add
sbb
in
cltd
rorl
shr
inc
jnp
aam
outsl
pop
inc
jnp
and
jb
add
outsl
sub
in
add
addl
xchg
xchg
dec
dec
jns
jmp
aam
insl
jno
dec
jle
out
push
mov
inc
mov
cmpl
pop
lea
mov
xchg
cmp
scas
sarb
pop
pop
gs
mov
call
xchg
xor
pushf
popa
shr
js
dec
mov
mov
std
xor
mov
mov
cmpsb
shlb
jl
imul
or
enter
scas
enter
mov
rcr
loope
sbb
or
cli
xor
insb
push
fldt
popf
mov
sbb
rorb
mov
mov
pop
test
sar
xor
add
out
xchg
jp
jp
pop
xchg
bound
addr16
orb
xchg
cmc
lret
mov
dec
jno
stc
mov
pushf
jmp
jne
rcrl
out
sbb
jnp
or
mov
in
push
xchg
mov
mov
rorb
loopne
sahf
imul
insl
div
repz
cmp
inc
jae
mov
jp
push
dec
and
arpl
pop
in
repnz
mov
jbe
mov
xor
sbb
inc
out
mov
cmp
ffree
add
and
or
aaa
out
mov
jmp
xlat
jmp
nop
add
jno
cmp
push
scas
dec
or
mov
addl
mov
gs
add
loop
movzwl
jp
fistps
pop
xchg
lods
or
call
pop
and
fnstenv
mov
aad
mov
pop
cmpsl
in
add
imul
cmpsl
mov
push
inc
enter
inc
jae
and
fcomps
mov
fs
cmpsb
out
xchg
jnp
push
push
ja
xor
aam
lret
push
cmp
mov
test
sub
ja
cmp
pop
mov
lock
loope
push
in
repnz
pop
fs
xchg
ljmp
adc
mov
sti
sbb
mov
scas
add
pop
pop
cmp
jns
xchg
mov
mov
jl
daa
imul
jns
pop
xor
inc
lds
leave
jge
call
stc
inc
shlb
inc
push
fnstcw
lods
cli
clc
in
dec
or
or
punpcklbw
pop
mov
jecxz
and
js
je
enter
imul
xor
sti
dec
movsl
repnz
stos
leave
daa
sub
cli
loope
mov
jnp
inc
mov
mov
mov
lahf
mov
mov
jecxz
ja
repnz
out
movsb
xchg
mov
addr16
xchg
and
mov
lret
push
pop
jg
xchg
mov
cmp
scas
cmc
mov
push
les
and
lods
inc
adc
push
iret
iret
das
ds
bound
push
bound
or
jbe
int3
mov
dec
push
dec
addr16
and
fists
ret
xchg
mov
pop
jp
outsl
mov
push
and
mov
mov
adc
fnstenv
hlt
jne
and
into
pushf
push
cmp
cld
imul
pop
scas
bound
pop
add
mov
xchg
pop
sbb
dec
pop
cmp
icebp
in
sarb
fcomps
xchg
mov
xchg
lcall
push
in
sub
rorb
jcxz
push
dec
adc
dec
fwait
sbb
xor
outsb
pop
push
dec
fucomp
mov
xor
hlt
iret
cmp
in
fdivrs
sbb
xchg
shlb
pop
xchg
push
imul
ss
mov
push
fisttpl
or
mov
cmp
out
lds
sub
int
push
add
pop
jb
jg
lock
cli
adc
cmc
mov
push
mov
dec
fstpl
in
scas
roll
pop
sub
rcrl
std
mov
cld
mov
push
aas
cmp
loope
adc
cmp
and
je
fildl
in
cmp
and
popa
adc
cmpb
mov
add
fdivrl
or
nop
aaa
cmp
mov
and
in
bound
sub
jo
mov
test
dec
outsb
mov
int3
out
adc
add
loope
addr16
xor
adc
lret
add
mov
cmp
and
int3
mov
out
add
jno
inc
ret
mov
mov
out
in
jge
adc
ret
sbb
pop
mov
or
out
ja
sbb
aaa
inc
aam
add
outsb
je
mov
lods
mov
xor
mov
jne
cmp
insl
dec
fwait
in
rolb
lods
ret
mov
pop
les
in
movsb
mov
fistpl
sbb
into
and
mov
jo
es
mov
aaa
xlat
push
fdivs
or
aam
adc
adcb
dec
icebp
dec
mov
shll
fbstp
inc
mov
imul
mov
sub
jmp
mov
jl
pop
enter
imul
mov
push
pop
jno
sbb
stc
jae
add
fistpl
pop
lods
add
inc
into
jl
mov
xor
cmp
jmp
pop
test
movsl
pop
xchg
mov
inc
lock
cmc
mov
cld
sbb
cwtl
xchg
jl
jecxz
arpl
dec
mov
insl
repnz
cmc
push
js
out
out
sub
pop
mov
int3
ret
mov
xchg
loope
pushf
sbbl
and
cmp
mov
ljmp
jne
movsl
test
mov
mov
cmp
mov
xchg
lret
adc
push
mov
popa
movsb
loop
pop
xchg
int
rol
pop
cmpsb
pop
mov
mov
sub
cltd
leave
es
push
mov
pop
push
aam
xchg
das
dec
add
jo
shrl
fisubs
lock
xchg
mov
mov
pop
sub
and
push
cmp
add
and
outsb
test
jge,pt
nop
inc
push
cmp
or
inc
and
cmpsl
lock
notb
dec
mov
or
ss
xchg
or
xchg
dec
jge
push
outsb
cmpsb
push
sub
imul
lret
and
mov
mov
add
testb
cld
xchg
jae
adc
loop
and
rcl
into
dec
jae
push
lods
cs
adc
inc
in
mov
jne
frstor
cltd
inc
fsubrs
leave
mov
or
push
cmp
xchg
sub
popf
std
mov
aaa
sbbb
leave
mov
xor
rcr
cmp
or
mov
push
iret
sub
adc
inc
ja
mov
mov
sbb
mov
xchg
push
pushf
pop
or
mov
enter
or
mov
push
inc
pusha
push
das
fwait
cmp
sub
cli
or
fnstsw
sbb
push
adc
mov
stos
mov
mov
mov
fstpl
or
popf
mov
mov
stc
loop
pop
mov
dec
mov
cli
imul
adc
fstpt
push
jb
fs
pop
ljmp
fwait
push
filds
push
fucomi
add
aad
or
iret
xchg
shlb
add
sub
mov
lahf
aad
dec
or
mov
ds
mov
pop
loopne
scas
mov
fucomp
daa
push
lods
push
dec
out
std
xchg
stos
mov
das
push
adc
cmpsb
ret
mov
shll
fcmovu
and
cmpsb
test
dec
inc
jg
rolb
pop
je
push
dec
and
add
sub
aad
xor
push
or
jae
push
ss
pop
movsb
jle
nop
mov
xchg
imul
mov
iret
in
dec
imul
sub
imul
and
sbb
xchg
adc
and
cmc
dec
out
dec
dec
xchg
sub
das
arpl
icebp
jno
cld
cmp
ret
mov
nop
leave
jae
mov
stos
cmp
mov
ljmp
stc
push
les
jl
lods
or
fisubrl
int3
sahf
cmp
repnz
jl
mov
sbbl
mov
lds
icebp
xchg
cs
jecxz
pop
clc
add
lcall
pop
fbstp
adc
data16
stos
xchg
lock
jle
pop
push
dec
shr
dec
roll
fsubp
mov
xchg
sbb
aas
aas
subl
xor
xchg
or
cmp
adc
repnz
mov
mov
fcmovbe
xchg
lret
adc
js
ja
adc
dec
cmpsl
jno
int
cld
dec
push
ficoms
xchg
loop
sub
leave
and
xor
xchg
loope
pop
lcall
ret
ljmp
xor
and
push
dec
inc
pop
jb
bound
mov
mov
repnz
xor
and
push
dec
inc
pop
jb
bound
mov
mov
repnz
xor
and
push
dec
inc
pop
jb
arpl
mov
mov
repnz
cwtl
sub
dec
and
xchg
popf
test
enter
ja
aad
iret
sbbl
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
int
int3
add
add
add
add
add
add
add
add
add
add
add
int
push
add
mov
add
add
add
push
add
add
add
add
add
adc
xor
dec
add
jge
jnp
push
add
add
add
pop
add
add
push
add
add
jnp
dec
add
add
add
sub
rolb
les
mov
lret
add
sbb
sbb
mov
xchg
popa
add
add
ret
add
sbb
add
add
testl
js
fiadds
xor
or
add
add
add
or
and
mov
push
add
add
add
add
lcall
add
jle
mov
add
xor
mov
icebp
add
mov
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
filds
fiadds
add
add
add
add
add
add
add
push
add
add
add
add
fiadds
test
popa
add
add
test
add
add
nop
add
add
add
add
add
add
add
xchg
mov
dec
add
sbb
fadds
lcall
add
addl
add
lcall
add
add
les
sbb
push
add
add
xor
adc
jno
mov
add
add
add
add
add
add
add
cmp
popa
add
add
add
add
filds
ret
add
add
add
add
add
add
add
add
add
lret
add
push
add
add
or
mov
flds
sbb
mov
cld
add
adc
add
sbb
mov
pop
add
imul
add
add
add
ljmp
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
sbb
or
dec
add
pusha
add
mov
add
in
cmp
fiadds
fiadds
add
mov
add
mov
inc
add
add
popa
add
add
enter
faddl
jbe
leave
add
add
add
add
bound
xchg
add
popa
add
add
add
add
testl
xor
popa
add
add
add
add
add
add
dec
add
add
mov
add
add
add
push
mov
add
add
add
dec
add
add
add
add
add
add
sub
pop
js
sbb
sbb
cmpsb
add
cmp
incb
jne
dec
add
add
mov
ljmp
add
addl
add
add
add
push
and
cmp
leave
add
add
enter
sbb
sbb
xor
push
add
push
dec
add
add
add
ret
add
add
add
push
adc
and
mov
fmuls
mov
mov
mov
xor
push
stos
movsl
loop
or
aad
inc
call
mov
xor
and
mov
jo
add
movsl
and
sbbb
scas
or
lcall
jge
adc
es
xor
inc
xchg
bnd
sub
mov
ret
mov
jmp
push
mov
repnz
inc
dec
dec
call
dec
gs
xor
lahf
notl
pop
jg
or
mov
js
out
cmpsl
or
repz
cmp
adc
nop
push
mov
and
sbbl
mov
inc
out
rorl
xchg
pop
push
mov
lods
out
sub
je
rcll
mov
pop
cmp
rclb
inc
js
inc
mov
subl
inc
xchg
in
jb
into
or
cwtl
xchg
mov
gs
subl
sbb
out
addb
push
jmp
les
inc
stos
xchg
and
lods
adc
inc
cwtl
mov
dec
mov
mov
push
mov
add
fstpl
push
inc
outsb
sbb
adc
cmp
mov
incb
mov
inc
shrb
ljmp
rol
cli
pop
rorl
cmp
cmp
push
adc
or
fisttpl
and
sub
jb
aad
push
insb
in
add
shrl
mov
sub
dec
dec
pop
adc
adc
pusha
inc
sarl
mov
push
sbb
pop
out
and
les
mov
idiv
xchg
mov
push
jg
xor
sbb
popa
lock
loope
mov
push
add
xor
fsubrs
sbb
dec
cmpsl
lds
bound
nop
daa
add
sbb
gs
sbb
jnp
sarb
sub
mov
mov
inc
and
jns
add
fdivl
sbb
cmp
mov
leave
ficompl
popf
nop
push
jg
or
push
lahf
dec
inc
cmpsl
cmpsl
js
fstpl
arpl
sti
xor
adcb
xor
pop
les
clc
add
test
addr16
jl
fcmovne
into
xchg
adc
mulb
popa
int3
push
xor
ficomps
movsb
imul
jmp
adc
or
stos
das
dec
adc
mov
push
stos
bndldx
dec
xor
dec
pusha
and
aaa
push
out
push
rorl
pop
sarb
xchg
shrb
addr16
push
jp
movsl
add
dec
dec
add
xchg
cmp
fistpll
add
pop
pop
adc
adc
insl
inc
adc
fadds
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
