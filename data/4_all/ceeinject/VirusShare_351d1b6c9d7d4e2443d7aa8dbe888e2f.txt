call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
sti
inc
push
scas
xchg
lahf
xchg
clc
xor
iret
data16
es
push
pop
push
jg
insl
push
pop
inc
dec
mov
lahf
xchg
ffreep
mov
cmp
push
pcmpeqd
add
pop
inc
dec
insb
sub
inc
out
scas
sar
xor
xlat
ss
dec
jo
addr16
sub
push
and
xor
rcl
icebp
fidivrl
mov
pop
add
fisttpll
loop
sbb
mov
lds
xor
lahf
inc
lea
ja
pop
repz
lods
xlat
pop
lret
ret
mov
xchg
test
mov
mov
mov
stos
jmp
pop
jmp
movsl
lahf
sbb
jg
mov
idiv
sbb
and
jne
push
sub
repz
jle
nop
inc
mov
sbb
stos
pop
inc
imul
gs
xchg
xlat
mov
imulb
jmp
sub
outsb
push
dec
xor
imul
aas
xor
aas
fiadds
loopne
pop
repz
nop
adc
lret
test
ljmp
add
mov
into
prefetchnta
push
js
push
pop
and
in
shrb
cwtl
mov
stos
push
jns
push
imul
adc
sbb
push
add
mov
cs
sar
dec
stos
lahf
nop
xchg
mov
pop
addr16
jp
push
and
pop
and
jmp
in
mov
out
ffreep
iret
ss
es
push
pop
push
pcmpeqd
outsl
push
pop
inc
dec
mov
cmpsb
scas
xchg
lahf
xchg
ffreep
iret
ss
es
push
pop
push
pcmpeqd
outsl
push
pop
inc
dec
mov
bound
cmp
mov
mov
mov
inc
xor
movsl
loop
cmc
jg
lret
cmc
mov
lret
mov
fildll
negl
ljmp
dec
stc
sub
call
lret
dec
loop
mov
jbe
das
mov
cs
jbe
repnz
push
mov
cmp
testb
jle
jns
mov
and
in
xchg
popa
cwtl
inc
lods
mov
push
inc
and
insl
sbb
roll
fcoml
or
ret
pushf
add
jg
test
movsb
shlb
push
add
das
adc
cmp
test
lcall
xor
and
dec
call
xor
andb
ss
out
fidivs
lea
rorb
mov
or
into
int3
aas
mov
push
loope
xchg
push
adc
cmp
jle
flds
into
mov
push
xchg
cli
xchg
mov
std
sub
sub
aas
jnp
icebp
lahf
movsb
push
or
dec
cmp
loope
mov
decb
adc
out
loope
push
inc
data16
and
pop
and
enter
lcall
pop
repnz
mov
or
je
cmp
pop
dec
imul
mov
test
jg
lods
cmpsb
adc
mov
xor
popa
mov
mov
push
xchg
std
es
mov
inc
push
cmpsb
fldl
mov
pusha
out
ja
mov
dec
rorl
fsubrl
xchg
out
ja
and
shll
push
xor
mov
jae
push
popa
addr16
xchg
push
add
frstor
pop
stos
add
mov
insb
sbbl
mov
xchg
xor
sbbb
into
pop
mov
mov
xchg
jbe
cwtl
nop
fdecstp
out
lods
mov
cmp
je
icebp
sub
daa
fldpi
les
mov
arpl
inc
inc
jmp
sbbl
add
push
cmp
xchg
popf
ss
bound
sub
fdiv
leave
lock
cmp
cmp
sarb
jno
cmpsl
cld
shlb
and
shl
mov
sahf
push
scas
xchg
sub
lods
hlt
or
aas
jl
outsb
mov
test
jle
inc
xchg
inc
cmpsl
mov
jp
out
fcoml
clc
mov
jno
in
add
push
adc
stos
sub
fistpl
loope
das
and
rorl
stc
stos
or
mulb
mov
add
rol
faddp
lods
push
sub
xor
sub
inc
sarl
iret
pop
fisttpll
push
xchg
in
sub
pop
sbb
in
inc
fdivrl
xchg
mov
adcl
call
push
into
imul
movsl
cvtdq2ps
and
push
loope
jmp
adc
ljmp
sti
jge
adc
mov
jb
fisttps
std
stos
ret
lret
or
or
loop
push
lock
nop
cltd
ds
jne
movsb
popf
xchg
pusha
mov
mull
dec
push
mov
test
subb
inc
or
in
inc
push
daa
push
scas
das
data16
outsb
cmp
cmpsb
inc
int
push
xchg
sahf
jge
out
pusha
arpl
ja
mov
stc
mov
push
and
inc
adc
xchg
popf
iret
dec
mov
jnp
aad
subb
fsts
stc
mov
leave
adc
adc
repz
mov
ss
ret
adc
std
sbb
mov
dec
inc
xor
popa
iret
or
pop
jecxz
pop
add
xlat
sarb
gs
sbb
mov
leave
ret
lock
div
or
or
mov
out
xor
lock
cmp
iret
push
test
or
aad
in
mov
ss
push
add
mov
fsubs
add
jne
cli
xor
cltd
adc
ss
mov
mov
adc
xlat
xchg
flds
xlat
lods
in
testb
adc
bound
in
cwtl
jg
test
mov
pop
cmp
inc
mov
sar
aad
aad
movsb
bound
jo
jg
out
and
sarb
mov
test
dec
jecxz
and
or
repnz
out
fstl
push
sub
popa
cli
jge
cmc
lahf
and
pushf
xor
jbe
iret
fisubl
add
ret
mov
add
ss
aam
push
fdiv
dec
lret
mov
aam
pop
out
sub
xchg
jle
cmp
negl
shl
call
or
xchg
aad
adc
int3
movsl
push
add
inc
cmp
daa
sub
xor
aaa
dec
movsb
mov
sub
sub
xchg
gs
test
fidivrs
cmp
inc
bound
rcrl
out
jecxz
sbb
mov
xor
mov
aad
push
mov
in
cld
mov
ja
add
sub
leave
adc
pop
je
xchg
jbe
push
ficoms
adc
sub
pusha
pop
loopne
lods
ljmp
inc
mov
or
xor
adc
cld
orl
dec
jo
pop
lret
repz
test
hlt
jne
and
cs
jo
xchg
jnp
fwait
jp
cmpsb
dec
or
add
pushw
movsb
pop
lcall
jae
adc
jl
mov
lret
jo
out
sti
popf
adc
xor
jbe
test
out
inc
add
inc
or
inc
scas
fidivrs
cmp
sbb
sbb
mov
and
sbb
popf
popa
cmc
push
mov
outsb
lret
inc
pushf
xchg
and
push
jmp
mov
sub
flds
in
sti
sahf
pop
and
push
adc
sub
xor
shrb
add
push
fs
les
inc
inc
ja
xlat
out
dec
pop
iret
popa
outsb
stc
or
mov
sbb
pop
sub
dec
and
add
mov
or
mov
jg
fmull
jecxz
fbstp
mov
mov
scas
xchg
and
stc
cmp
rorb
mov
push
mov
inc
repnz
gs
ret
sti
inc
out
mov
sar
ss
stos
push
stos
push
adc
shlb
push
sub
fmul
push
push
cmpsb
icebp
out
or
lock
clc
push
ret
dec
adc
cmp
in
xchg
add
jle
xor
xor
cld
pop
fwait
xchg
into
jb
clc
xlat
jmp
push
xchg
xor
push
xchg
xor
pop
daa
rcll
pushf
inc
jle
mul
rclb
pop
ret
jecxz
loop
mov
sub
sar
outsb
sub
js
aaa
stos
mov
call
out
ja
adc
add
outsl
pusha
jge
mov
adc
lock
enter
pusha
adcl
mov
popf
sub
sub
xor
xchg
rcrb
cmp
xor
dec
in
dec
jl
out
lods
js
lret
data16
inc
rcrb
in
push
inc
pop
cmp
push
popf
inc
popa
test
int3
and
mov
pushf
mov
nop
and
pop
mov
dec
das
insl
or
mov
pop
mov
pop
mov
loopne
fstpt
sbb
loopne
mov
fs
jns
out
addr16
std
inc
hlt
xor
push
insb
xchg
ja
add
push
sub
inc
add
xchg
incl
mov
shll
dec
lret
mov
jp
jne
add
lds
adc
loop
addr16
arpl
jne
mov
xchg
scas
jne
xchg
jle
xchg
cmp
sub
dec
sbb
in
push
dec
stos
jnp
test
push
loope
push
push
adc
lock
sbb
outsl
cltd
data16
setns
inc
ss
lds
ds
test
mov
dec
mov
sub
push
test
aam
loope
jg
pop
fisttpll
sub
pop
scas
insl
sub
add
lret
cmp
aam
cmp
aad
xor
sub
mov
cmpsb
cmp
fistpll
xor
lcall
and
add
enter
add
rorb
sar
iret
jecxz
ljmp
rorl
lock
pop
gs
mov
leave
sbb
cmpsl
or
movsb
jb
fsubp
jl
or
sbb
scas
adc
insb
or
pop
std
adc
or
test
dec
test
mov
stos
repnz
stc
insb
cld
sahf
xchg
cwtl
mov
clc
std
dec
daa
xlat
cmp
push
push
add
clc
scas
imul
mov
sub
cmp
and
insb
jecxz
sub
jnp
xor
pop
test
mov
mov
jp
or
sub
stc
js
lcall
xchg
sub
push
or
loop
in
mov
push
subl
outsl
test
push
mov
into
jae
jmp
xchg
ficoml
rorb
or
push
dec
stc
cmp
enter
pop
jg
xor
outsl
mov
mov
andl
pop
call
clc
or
sbb
jnp
outsl
inc
and
mov
ss
xor
adc
push
jno
fildll
int
push
xchg
in
jae
mov
fistpl
insb
cli
mov
jp
jbe
int3
pushf
lcall
sti
enter
out
rcrl
mov
push
mov
data16
jle
jbe
dec
ds
mov
cwtl
iret
sahf
and
adc
xor
dec
or
inc
jle
nop
jle
jle
mov
lea
sar
and
xlat
cmp
add
andl
pop
pop
in
in
cs
and
mov
icebp
daa
sub
jae
sbb
popf
ficoml
sbb
inc
fistps
cmp
add
push
jbe
hlt
add
jae
ljmp
push
and
lods
mov
cmp
pop
xor
xchg
adc
xor
jle
in
je
stc
or
adc
bound
xchg
repnz
out
outsb
jbe
or
and
dec
xchg
xchg
add
imul
in
pop
das
and
mov
fnstcw
cwtl
call
mov
adc
dec
mov
push
add
jg
xor
xchg
movb
inc
out
ljmp
ret
popf
adc
iret
jmp
jne
cmc
push
out
and
aaa
fs
or
sbb
fistps
adc
dec
jo
rorl
loopne
sbb
adc
or
push
insl
popa
repnz
lret
stos
pushl
push
in
mov
es
push
sbb
sub
aad
cwtl
and
push
fmul
sub
dec
pop
punpcklbw
bound
pop
or
cld
aam
push
out
sarb
dec
js,pn
cmpsb
imul
and
xorl
pop
stos
les
out
les
icebp
test
push
xor
xor
repz
cmp
dec
ss
movsb
xor
jecxz
xlat
shlb
and
je
jae
aas
jmp
inc
fwait
into
jb
mov
aam
std
lock
idivl
mov
in
add
cmp
mov
fldenv
dec
iret
or
add
jp
popf
call
aam
inc
mov
push
sarb
xchg
mov
cwtl
fwait
push
adc
ljmp
push
shll
push
jle
outsb
pop
jns
xor
jbe
and
ss
jae
sbb
push
hlt
mov
pop
pop
leave
into
aas
xchg
push
test
incl
sti
mov
add
push
int
mov
sub
out
pop
mul
and
int
les
push
imul
xorl
popa
fdivs
mov
movsb
dec
mov
xchg
or
test
dec
jl
xor
sub
cwtl
fs
or
fs
sbb
push
scas
bound
int3
frstor
test
push
ds
or
lret
push
lock
nop
pusha
cld
icebp
jmp
mov
sub
pop
adc
mov
loop
add
les
pusha
aam
test
inc
mov
test
insl
ss
xchg
push
xchg
or
mov
daa
pop
into
lcall
adc
pop
xor
adc
pusha
cmp
pop
outsb
insl
xchg
dec
aad
rcll
cmp
mov
nop
not
or
js
add
mov
insb
or
stos
fnstcw
imul
ficoms
out
adc
pop
sub
or
pop
pop
lcall
loop
and
lods
pop
aaa
or
jge
mov
push
ficompl
ljmp
jno
pop
outsb
aad
and
inc
hlt
mov
int
mov
or
adc
lahf
ret
sbb
mov
rcl
add
aam
imul
sub
pop
xchg
sub
inc
jne
mov
test
push
mov
shl
pushf
adc
cmp
shr
lahf
imul
in
stos
sarb
pop
jg
scas
lock
cmp
cld
fucomi
jne
sub
loopne
ret
ja
xchg
negl
or
or
cltd
adc
add
fsub
sbb
clc
inc
pop
jb
cmp
xor
insl
pop
cmc
jge
push
or
sbb
es
ss
or
xor
jecxz
add
push
push
insl
mov
cmp
je
inc
dec
xor
and
cmc
push
or
dec
sbb
fsubl
fadd
adc
dec
outsb
sub
icebp
scas
mov
mov
jp
xlat
or
inc
jns
ja
data16
int3
dec
pusha
xchg
jae
mov
cmp
int
scas
xor
or
cmp
adc
iret
cmp
mov
in
cmp
dec
dec
or
fwait
mov
cld
push
push
jg
mov
sbb
xorb
scas
cmp
push
mov
xor
sub
stc
cld
int3
fcompl
add
dec
repz
hlt
jg
test
cli
jge
fnstsw
stos
ret
sbb
cmp
mov
and
mov
test
push
adc
lea
xchg
aad
rcrb
sbb
cmp
cld
cmpsl
outsb
xor
adc
es
mov
rcrb
jge
addr16
pop
ret
push
jg
add
jmp
inc
scas
and
sbb
jmp
stos
jecxz
pop
xor
lret
mov
scas
int3
xchg
mov
mov
xor
sbb
into
cmp
cmpsl
adc
mov
testl
movsl
int
mov
or
sbb
popf
les
mov
popf
and
cwtl
leave
pushf
or
add
or
out
mov
loop
ljmp
fmull
mov
subl
push
pop
in
xchg
xor
sub
xchg
andb
mov
or
ret
lcall
aam
aas
call
cwtl
and
popf
pop
dec
add
andl
lcall
call
xor
adc
cmpsb
inc
mov
clc
sti
push
adc
lret
cld
cmp
mov
ljmp
leave
aaa
mov
jb
add
aad
les
ljmp
push
je
out
adc
test
or
cs
dec
add
mov
hlt
push
cmp
fs
inc
insb
mov
xor
daa
aad
jl
imul
adc
adc
add
outsl
out
push
inc
jnp
adc
out
push
es
jle
and
in
iret
add
mov
dec
shrl
inc
sti
lahf
cmp
mov
xor
jmp
sub
lret
mov
ja
imul
mov
adc
ljmp
out
cmpl
pop
fcmovne
fisubs
sbb
adc
sbb
cmp
jge
push
aas
enter
loope
testb
enter
fstpt
xorl
cmp
cmp
lods
pop
mov
sbb
adc
subb
cmp
sub
arpl
mov
or
shl
push
push
arpl
push
test
out
test
sbb
sbb
mov
and
rcrb
popf
call
or
lock
xchg
mov
movsb
aad
cmpsb
push
popf
ret
or
push
mov
sahf
pop
jne
jae
and
dec
xor
je
sub
repnz
mov
mov
dec
jnp
push
lods
xchg
add
jl
fwait
fwait
enter
mov
xchg
jl
add
push
jle
xor
sub
mov
pop
je
and
and
insl
icebp
std
imul
test
xor
xor
std
paddd
stos
xchg
movsl
jg
or
scas
mov
sub
das
pop
arpl
or
sbb
push
inc
mov
adc
int
sub
out
jo
cmp
sbb
out
lea
cmpsl
std
outsl
jle
hlt
dec
cmc
dec
inc
mov
lret
arpl
jmp
cwtl
into
sub
adc
pushf
lods
loopne
add
movsl
dec
lock
das
iret
into
jg
jp
incb
lds
test
lahf
ljmp
lods
sub
mov
into
pop
cltd
cld
insl
pop
jmp
mov
xchg
pop
dec
mov
mov
hlt
sub
popa
xchg
inc
mov
pop
pushf
cmp
sub
stos
mov
fwait
rcll
movsb
sarl
pop
fdivl
lcall
out
cli
jg
loopne
cld
pop
pop
or
cs
cmc
mov
or
xchg
adc
mov
inc
imul
inc
and
faddl
inc
subl
push
mov
push
mov
arpl
sbb
ret
fdivs
add
and
loope
lds
outsb
int3
or
jecxz
ljmp
xchg
add
or
xchg
adcb
push
sub
push
ja
mov
sarl
adc
leave
jp
clc
push
adc
das
sub
sar
adc
das
jns
push
pop
ss
adc
mov
jmp
hlt
test
or
and
and
cmc
ficompl
movsb
inc
add
insb
cwtl
rorb
inc
cmp
fwait
cmpsb
push
cmpsl
cwtl
mov
dec
loop
or
pop
jle
jmp
sub
fdivrl
dec
loope
out
pop
jb
hlt
jecxz
mov
js
inc
xor
lcall
leave
ja
jae
mov
rcrl
cld
push
clc
dec
inc
stos
xor
int
popf
pusha
into
int3
fcompl
adc
jnp
nop
cwtl
ffreep
cld
ja
jle
add
pop
mov
divb
aad
cmpl
popa
lret
lods
fidivs
mov
cwtl
lcall
es
fldl2e
and
pop
or
jbe
cmp
cmpsl
push
add
cmpsb
dec
xchg
outsb
cs
sbb
jb
pop
dec
mov
jae
aam
cltd
popf
mov
mov
jl
jg
and
sub
sub
sub
je
push
mov
jnp
mov
loop
add
mov
and
bound
cli
xchg
xor
xor
and
lods
sti
lods
jle
ja
push
cmp
adc
arpl
fildll
insb
pushf
fsub
ffreep
negl
xor
pop
push
fs
shll
mov
sbb
in
out
lods
pop
test
icebp
fsub
xchg
xlat
xlat
mov
pop
push
add
sbb
inc
adc
test
shl
dec
inc
xor
arpl
xor
inc
rolb
call
aaa
les
xor
push
dec
cmp
xor
loopne
fdiv
lock
sbb
lcall
sti
jmp
lcall
jns
test
cmpsb
out
mov
and
fcomi
or
cmpsb
xor
add
out
sub
mov
pop
cld
mov
dec
call
push
pop
popl
ds
repnz
out
push
enter
mov
fcompl
adc
fs
adc
mov
repnz
xor
pop
loopne
fbstp
in
test
push
inc
pop
jmp
mov
popa
jbe
or
push
out
rorb
jb
imul
rcrl
and
xchg
out
int
pop
inc
xor
pop
push
js
or
scas
sub
or
pop
out
add
loope
mov
mov
nop
pop
and
je
je
popf
outsl
push
xchg
jg
mov
mov
daa
call
aam
adc
xchg
repz
fstpt
mov
clc
jl
mov
int3
lret
cmp
push
insb
mov
daa
jmp
jge
jmp
out
adc
push
push
sub
mov
push
insb
lahf
int
ja
pop
bound
int3
xor
inc
xor
sti
icebp
imul
jge
sub
pop
xor
lods
bound
repnz
push
cmpsl
data16
mov
pop
jbe
pop
or
fcmovnb
fdivl
lods
adc
jg
loope
or
inc
aad
adc
inc
rsm
sbb
cmp
mov
inc
adc
mov
imul
and
push
bound
ret
outsb
mov
mov
fwait
pop
xchg
insl
pop
cmp
ss
test
outsl
lret
jno
es
imul
scas
inc
cmp
mov
cmp
sub
lret
out
push
test
aaa
sti
scas
xor
lcall
ffreep
iret
ss
es
push
pop
push
pcmpeqd
outsl
push
pop
inc
dec
mov
cmpsb
scas
xchg
lahf
xchg
ffreep
iret
ss
es
push
pop
push
pcmpeqd
outsl
push
pop
inc
dec
mov
movsl
out
out
idiv
loop
ffreep
iret
xor
es
pop
pop
add
jbe
jg
push
jg
dec
scas
mov
scas
mov
push
out
pop
inc
iret
ss
mov
imul
nop
test
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
fsubrl
jle
dec
jl
mov
cmp
dec
pop
pop
push
int3
out
fdivr
in
into
cld
fimuls
mov
insl
dec
jl
or
sbb
sub
cmp
int3
out
fdivr
into
cld
fimuls
mov
jle
dec
jl
or
sbb
sub
cmp
int3
rcr
mov
out
cld
cmc
fimull
pop
or
sub
xchg
cmp
xlat
or
fildll
subb
push
sbb
sbb
mov
cmpsb
add
mov
into
jno
jno
arpl
leave
jnp
test
mov
xchg
mov
or
int3
mov
mov
scas
pop
lea
jno
lahf
mov
nop
dec
or
xor
int3
out
dec
sbb
in
xor
insb
std
iret
out
mov
repz
mov
sub
cmp
movsb
stos
test
in
fbld
sti
sub
pop
xchg
dec
stc
sub
in
cmp
xor
or
cltd
lret
clc
push
pushf
dec
lods
fwait
mov
jle
dec
jl
or
sbb
sub
cmp
int3
out
fdivr
in
into
cld
fimuls
mov
lods
add
xor
dec
inc
jns
imul
movsb
subb
mov
rol
rorl
adc
pop
xor
dec
xor
imul
push
sahf
stos
mov
xchg
cwtl
cltd
mov
shr
cld
sti
mov
or
cmp
inc
sbb
sub
cmp
int3
out
fdivr
in
into
cld
fimuls
mov
jle
dec
jl
or
sbb
sub
cmp
int3
out
fdivr
in
into
cld
fimuls
mov
imul
cs
jg
pop
sub
enter
test
outsl
xchg
mov
in
mov
sbb
mov
dec
mov
push
sbb
mov
xchg
inc
sbb
and
jb
push
scas
dec
adc
test
mov
sbb
aad
mov
inc
cli
dec
jmp
mov
cmp
cmp
outsb
mov
imul
test
hlt
pop
mov
sti
xor
out
ds
mov
les
hlt
sub
jp
sub
ret
sbb
sbb
ja
mov
pushl
jnp
add
xor
aam
jmpw
mov
add
cmpsl
loop
ds
das
push
sbb
push
xchg
jge
jl
rorl
inc
scas
rcl
popa
popa
xchg
test
in
xor
je
xchg
jb
cmpb
mov
in
pop
aam
repz
dec
push
fstps
xchg
xor
adc
les
in
jo
sub
ret
test
mov
pop
mov
adc
aad
mov
in
shlb
cmp
nop
rorl
dec
mov
call
or
out
push
lret
or
mov
push
inc
add
xor
and
inc
jl
dec
xchg
mov
cmp
fcompl
inc
daa
cmp
bound
push
popw
xchg
add
inc
dec
push
test
cmp
sub
sbb
mov
cmp
les
or
daa
cmp
adc
dec
jle
sbb
xchg
mov
xchg
jmp
out
xchg
dec
arpl
popf
stos
orl
mov
popa
cmp
mov
cmp
pop
out
into
pop
jns
push
clc
mov
and
out
lock
aam
push
adc
pop
arpl
jecxz
mov
jae
mov
fsub
or
push
mov
mov
lds
popf
mov
test
add
in
or
inc
add
daa
cmpsb
inc
outsb
push
pop
mov
xchg
sbb
xor
push
cmp
pop
jle
dec
retw
inc
bound
jo
cld
dec
xor
frstor
je
enter
xchg
xlat
pop
fidivl
mov
icebp
jp
hlt
out
dec
sbb
adc
or
push
leave
repnz
test
cmp
adcl
cmp
lock
mov
fistpl
cld
mov
adc
mov
inc
js
jbe
push
xchg
imul
adc
ret
bound
inc
adc
int
sub
cmp
pop
sbb
dec
ror
ljmp
adc
fmul
mov
jae
mov
test
jnp
icebp
aas
push
inc
sbb
mov
xor
sbb
not
mov
mov
sahf
mov
push
add
xchg
mov
pop
aas
cmpsl
mov
xchg
movsb
lret
add
mov
rcrb
sub
rcrl
pop
iret
cmc
or
hlt
add
aas
retw
mov
pop
push
dec
movsb
rolb
or
cwtl
ljmp
outsb
repnz
fwait
mov
iret
cli
lock
loope
inc
test
add
cld
loop
jge
je
ds
hlt
xchg
cmp
je
push
inc
subl
andb
pop
in
or
sti
pop
arpl
insb
repnz
adc
and
std
and
dec
js
pop
enter
lods
xchg
cli
test
outsl
in
aad
sti
inc
xchg
jg
jg
loopne
shrl
out
adc
in
sarl
pop
jnp
jl
adc
xor
jo
mov
cmp
insb
aad
cwtl
jl
hlt
pop
stos
sbb
pop
cltd
dec
testl
repnz
pop
mov
pushf
or
imul
js
mov
jl
rcrl
sbb
xlat
jo
pop
jge
and
imul
pop
or
or
sbb
stos
pop
daa
rcrb
out
call
and
fsubr
xor
hlt
cmpsb
sahf
pop
push
push
mov
pmaxub
dec
int
push
cmp
ficoms
jno
ret
sbb
jg
jg
add
outsb
or
add
pop
es
adc
inc
clc
add
cwtl
pop
fcmove
cwtl
aaa
mov
fcoml
mov
popf
or
jne
movsb
add
inc
pop
mov
andl
fiaddl
mov
mov
mov
daa
mov
jb
arpl
es
loope
mov
mov
sub
jbe
sbb
pop
push
stos
cli
test
jl
cli
fnstsw
jb
xchg
insb
out
sub
sbb
rcrb
fnsave
les
lcall
std
js
adc
je
dec
push
or
cmp
add
imul
jmp
sbb
sub
push
notb
xor
dec
nop
or
inc
mov
cmpb
mov
xchg
xchg
addb
cmc
xor
and
push
fidivrl
in
push
pop
sbb
xchg
outsl
push
or
scas
push
repnz
notb
mov
add
lds
push
jnp
pop
movsb
sti
dec
push
lahf
fisttps
fwait
shll
ret
lds
pop
xor
std
shrl
cmpsb
add
pop
inc
xor
push
shlb
jae
jmp
std
dec
and
jno
pop
scas
add
fs
and
sub
pop
mov
inc
and
lock
sti
push
cmpsl
in
cmc
lods
jno
mov
lret
sti
cmp
je
dec
ss
adc
dec
fisubrs
jnp
mov
and
xchg
xor
mov
sbb
movsb
push
and
sbb
das
pop
cmp
mov
mov
icebp
add
push
cmpsl
out
cmp
push
repz
mov
add
mov
sub
imul
negl
sub
or
mov
fsubl
call
adc
jle
ret
pop
cs
dec
popa
ret
out
dec
lods
push
movsb
mov
dec
stos
or
inc
jb
outsb
pop
jnp
clc
jne
or
repz
cmp
push
das
mov
xor
shlb
pop
ljmp
lods
call
stos
sbb
push
imul
push
pop
adc
fistpll
aas
js
push
sbb
mov
push
aam
jge
sub
mov
test
aas
stos
addl
aas
push
jmp
lea
lds
pop
add
cltd
popf
int
xchg
xor
xchg
jo
enter
sbb
xlat
movsb
xchg
mov
loope
sbb
mov
mov
mov
scas
add
mov
mov
out
pop
aas
mov
jl
mull
int
loopne
pop
icebp
mov
out
rcl
or
jbe
jbe
repnz
popf
fimull
iret
adc
aas
aam
pop
xor
fisubrs
xchg
dec
rorl
xchg
dec
jo
push
rcrb
jl
xchg
inc
dec
int
cs
pop
aam
icebp
inc
jmp
sub
xlat
jle
lahf
mov
xlat
mov
push
ljmp
sub
stos
pop
jecxz
pop
jb
inc
ss
jle
adc
addb
in
push
mov
clc
inc
sub
add
push
jno
sbb
mov
xor
jbe
push
add
mov
out
scas
push
pop
pop
adc
add
lcall
lahf
mov
xchg
fdivrp
mov
in
push
ja
mov
sbb
les
or
lds
dec
es
jecxz
idivb
cmp
test
mov
mov
imul
push
fcoms
cmpsl
sbb
inc
addr16
das
imul
jge
out
insl
sbb
hlt
in
dec
loope
adc
dec
movsl
mov
into
into
test
cwtl
ret
fptan
inc
and
push
mov
movsl
ja
fsubp
push
inc
pop
fnstenv
icebp
add
cmp
lea
add
sub
idivl
sub
je
or
or
mov
dec
aam
popa
pushf
dec
xchg
imul
pop
lcall
scas
lods
cmpsl
gs
xor
gs
adc
mov
ja
xchg
pop
fwait
dec
pop
pop
loope
iret
sbb
push
js
and
jns
outsl
adc
pop
or
cltd
jne
xchg
cmp
es
xchg
dec
ss
aas
mov
stos
jl
pushf
mov
sbb
inc
xor
push
ror
pop
xlat
xor
jmp
shrl
inc
pusha
push
aam
std
add
iret
andb
add
xlat
and
sub
pop
xor
in
xor
popf
out
ret
out
cli
add
sbbl
imul
push
fstps
out
call
pop
adc
push
repnz
fnstenv
mov
mov
ret
adc
nop
out
add
jmp
lret
push
mov
and
xor
jecxz
jp
jl
pop
add
dec
adc
jge
dec
pop
push
xchg
les
mov
dec
xor
mov
dec
ja
fistl
int
xor
xor
fstpt
adc
push
loope
dec
xchg
insb
jne
cmpsb
movb
fildll
sbb
or
sub
ret
scas
shrl
add
mov
bound
dec
rcrb
inc
lret
and
out
lret
pop
scas
scas
std
jg
das
mov
cmpsb
fmul
sbb
jae
ss
insb
mov
test
lods
mov
jne
push
cmpsl
mov
xchg
xor
jle
push
adc
in
or
js
insb
lods
aam
test
and
jne
xchg
js
imul
mov
movl
push
aaa
aad
and
sbb
and
sub
in
jns
xchg
xor
imul
lret
jge
and
icebp
xor
call
xor
aaa
hlt
rcll
mov
in
int3
mov
faddp
arpl
jecxz
or
sbb
sti
jmp
nop
cmpl
leave
xchg
nop
adc
mov
lea
inc
adc
sub
xor
push
in
icebp
push
and
loop
out
test
vpshab
test
mov
cmc
enter
jbe
lret
pusha
cmp
mov
test
pop
gs
xorl
subl
push
mov
gs
mov
lret
mov
mov
movb
add
fstl
xor
cmp
js
icebp
cmpsb
test
ss
sub
cmp
jle
pop
sbb
sbb
fadds
xchg
sbb
or
negl
cmp
mov
or
mov
pop
xor
lcall
jb
bound
inc
cmp
in
mov
mov
mov
sbb
movl
ljmp
mov
shr
outsl
aas
xchg
xor
stos
in
dec
out
xor
imul
push
jecxz
push
push
nop
xchg
insl
out
add
xchg
adc
push
push
xchg
loop
je
rep
lret
mov
dec
fwait
add
pop
popf
ds
ja
pop
roll
shl
cmpl
icebp
mov
xchg
les
fstl
int3
movb
and
jb
testb
insb
fisttps
xchg
pop
cmp
repz
cmp
imul
ret
aaa
add
lds
push
pusha
fdivr
daa
or
rclb
popa
mov
notb
fwait
inc
push
jno
sub
adc
jg
mov
ds
mov
ja
add
dec
adc
sub
add
fsub
inc
mov
xchg
or
addr16
and
insl
int
mov
out
pusha
or
xor
cmc
lcall
mov
shll
in
cmp
push
sub
mov
push
mov
add
cltd
sar
sbb
cmp
test
cld
sub
sub
imul
cmp
push
out
pop
xor
icebp
insb
sahf
inc
mov
mov
out
stos
cmp
mov
pop
adc
lds
in
add
pop
dec
in
jb
ja
rorb
fmul
dec
xor
or
xchg
out
lret
push
das
mov
iret
inc
cli
ds
ja
or
sub
jle
add
scas
in
int
mov
fidivl
jle
add
scas
loope
pop
cmovge
pusha
jbe
pop
cwtl
mov
ds
pop
mov
fwait
inc
xlat
out
mov
fidivs
push
into
xchg
je
cltd
mov
push
insb
test
jns
ss
xor
xchg
push
sbb
dec
inc
cltd
repnz
movsb
imul
stos
imul
xchg
movsl
pop
cmc
jmp
xchg
fidivs
rorb
repz
rorb
aas
hlt
jp
jae
loopne
jae
loope
sarl
jae
mov
shll
pushf
and
lcall
mov
sub
cli
sub
jae
mov
jb
and
xchg
inc
mov
call
imul
and
arpl
leave
in
mov
or
inc
jl
pop
fnstsw
xchg
test
cmp
test
out
jecxz
mov
push
jbe
xchg
xor
xchg
xor
repz
fldl
and
mov
sahf
jo
loope
outsl
mov
dec
lret
in
sub
xchg
addr16
jmp
pop
daa
repnz
call
aam
or
je
out
xchg
jp
jmp
call
pop
mov
push
inc
cmpsb
fiaddl
imull
xchg
xchg
cmpsb
icebp
sti
sbb
cmp
mov
lds
xchg
sbb
mov
push
arpl
out
xchg
mov
dec
ds
push
and
inc
fnsave
push
and
ret
sbb
or
add
cmp
je
inc
mov
pushf
imul
sbb
mov
mov
fsts
mov
mov
aas
nop
or
jnp
pushl
adc
and
jnp
cmp
out
loope
cmp
inc
mov
add
inc
inc
out
xchg
pop
cmp
rcrb
mov
ds
test
mov
adc
mov
orb
mov
adc
mov
enter
hlt
cmpl
dec
aad
mov
mov
and
jle
sbb
scas
mov
loope
and
mov
inc
stos
pop
ljmp
and
mov
add
daa
jo
rolb
xlat
cmpb
xchg
mov
sti
jge
data16
add
scas
mov
adcl
fldl
daa
inc
cld
scas
das
out
xor
mov
xchg
sbb
pop
call
std
pop
or
rorb
insb
out
dec
or
rcl
fsubl
jne
mov
adc
sub
pop
insl
andl
je
adc
push
xlat
mov
inc
mov
xor
ja
dec
cmp
mov
adc
addr16
push
and
dec
xchg
outsb
mov
push
imul
mov
and
rorl
dec
mov
pop
push
sub
outsb
mov
jo
cld
mov
jg
daa
mov
mov
xlat
mov
jl
xchg
or
in
mov
and
sti
mov
ret
xchg
mov
xor
icebp
mov
xor
das
aas
movsl
add
sbb
aas
notb
out
cli
lcall
repnz
imul
scas
push
xor
mov
dec
dec
dec
pop
test
shl
movsl
inc
inc
cmp
mov
sub
or
sbb
lds
and
xor
lret
mov
mov
inc
inc
orb
inc
lret
cmp
or
xchg
mov
xchg
dec
sub
xor
xor
mov
push
push
fstpl
cmp
mov
into
xor
push
fstpl
inc
xor
cmp
dec
arpl
out
pop
outsb
adc
inc
fnstenv
push
mov
inc
fdivrl
xor
xchg
test
jo
das
adc
mov
leave
lcall
das
jmp
fistpll
lret
xchg
fcmovbe
call
in
pop
inc
idivb
dec
push
mov
repz
les
andl
or
xor
pop
cli
faddl
in
pusha
cwtl
push
js
or
popf
lahf
mov
dec
xor
into
xor
cmp
jne
cwtl
inc
pop
incl
sbb
add
aas
in
in
lods
add
fidivl
cmpsl
mov
xchg
movsl
js
adc
movsb
jmp
push
andb
or
insb
in
rclb
or
or
inc
sbb
mov
negb
sbb
push
cmp
out
lret
outsl
dec
jp
repz
out
les
cli
jae
aad
cltd
mov
jp
push
xchg
sub
in
mov
sub
xor
pop
loopne
mov
cmp
hlt
jmp
daa
rorb
cmp
inc
js
jle
adc
dec
sbb
jmp
or
pushf
loopne
push
sbb
loopne
adc
push
dec
mov
shlb
pop
push
mov
jecxz
lods
push
mov
push
mov
xor
jg
dec
jl
add
or
sub
into
and
outsb
popa
fiaddl
mov
shll
and
pushw
fadd
psubsb
int3
jne
sahf
adc
inc
shl
sbb
scas
insb
ljmp
lret
int3
add
push
mov
sub
xor
lcall
or
sbb
dec
inc
imul
mov
dec
xchg
adc
clc
sub
ss
jb
clc
cmp
xor
loop
mov
push
or
clc
sbb
shl
or
jle
test
shll
ret
and
cmp
ret
xor
dec
and
and
lods
mov
outsb
cmp
subl
ret
gs
xor
push
lret
shll
aaa
fs
fsubr
out
inc
xchg
bndldx
dec
dec
int
mov
adc
repz
lahf
iret
fisubl
stos
or
inc
mov
add
sub
loop
push
add
inc
stos
lods
pop
mull
add
fmull
xchg
das
pop
and
mov
mov
pop
pop
mov
aaa
adc
inc
movsl
jne
cmp
movsl
jb
std
ret
clc
xchg
pusha
or
jg
jno
repz
imul
negb
das
icebp
ret
imul
jl
jmp
and
xchg
push
jecxz
gs
icebp
jp
rcll
call
movsl
addr16
in
dec
mov
inc
icebp
in
adc
in
cli
push
push
xchg
push
dec
pop
mov
lock
shll
cmc
sub
or
mov
aas
stc
rorb
push
jge
mov
sbb
or
pop
lcall
in
jb
pop
imul
icebp
addr16
mov
cltd
add
push
push
enter
jmp
aad
xor
pusha
sub
dec
inc
mov
arpl
xchg
popf
mov
or
ds
xchg
lcall
adc
push
inc
mov
mov
push
cmp
dec
aas
pop
inc
push
fwait
rorl
enter
pop
adc
jne
lret
push
adc
mov
adc
addr16
lods
and
mov
flds
leave
xchg
mov
stc
out
int
fsincos
fistpll
imul
ljmp
jl
push
hlt
cs
jns
cmp
es
pop
dec
jmp
mov
and
mulb
enter
ret
dec
mov
push
dec
mov
push
outsl
xchg
fsubl
not
mov
nop
xor
push
or
push
hlt
xchg
lahf
push
add
mov
cmp
imul
jnp
jae
les
and
add
andl
mov
mov
movsl
pusha
test
popa
ficoms
mov
loopne
and
es
rcrl
mov
dec
mov
test
jle
push
cmp
sub
xorb
pop
inc
inc
jmp
mov
loopne
mov
in
ja
jo
fsubp
cmc
lods
fldcw
movsl
inc
xlat
adc
push
xlat
ds
jle
sub
or
addl
lret
mov
bound
jb
in
dec
push
scas
push
adc
mov
and
cmp
sub
mov
mov
xchg
fildll
jae
fld
adc
sbb
rorb
addr16
cmpb
jns
popa
cs
fnstsw
inc
mov
adc
xor
test
addl
loopne
fsubs
or
and
lcall
dec
dec
mov
aad
jecxz
push
cltd
xchg
jae
inc
add
es
jp
shlb
xchg
adc
insl
mov
mov
and
ljmp
shll
jns
cmp
or
xor
or
and
call
ret
pop
inc
std
fucomp
cmp
loopne
mov
scas
xor
test
ret
bound
pop
push
jnp
andl
rol
in
repz
mov
push
arpl
stos
in
out
inc
jecxz
test
and
iret
int
ljmp
dec
sbb
daa
pop
les
mov
popf
lret
jle
dec
jl
or
sbb
sub
cmp
int3
out
fdivr
in
into
cld
fimuls
mov
jle
dec
jl
or
sbb
sub
cmp
int3
out
fdivr
in
into
cld
fimuls
mov
jle
dec
jl
or
sbb
sub
cmp
int3
out
fdivr
in
into
cld
fimuls
mov
jle
dec
jl
or
sbb
sub
cmp
int3
adc
push
inc
into
cld
test
push
jno
popa
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
int3
mov
sar
mov
jl
pusha
inc
dec
ja
daa
cmp
sub
or
or
cld
imul
neg
xlat
int3
cmpsl
mov
xchg
mov
ja
and
daa
pop
ss
pop
sbb
or
in
in
ffreep
iret
aad
movsl
scas
mov
test
push
sub
and
jp
je
jle
xchg
cld
testl
mov
outsb
dec
pushf
testl
adc
loopne
push
out
jp
push
xor
dec
push
ja
pop
add
cld
mov
mov
lcall
adcl
xchg
call
mov
sub
sub
loop
or
lods
out
daa
fcompl
pushf
mov
jae
sub
xchg
inc
mov
roll
popw
les
or
negl
lea
mov
push
dec
lea
mov
repz
repz
xchg
cwtl
jge
js
dec
push
pop
out
daa
pop
out
pop
sbb
cld
idiv
int3
rcl
mov
mov
pop
inc
dec
push
aas
and
cmp
sbb
push
mov
ljmp
adc
cmp
dec
push
push
jg
sbb
popa
out
imul
mov
iret
fstps
gs
and
inc
dec
inc
inc
ja
pop
imul
shlb
mov
ja
inc
pop
push
dec
daa
cmp
sub
sbb
or
cld
imul
int3
cmpsl
mov
xchg
mov
ja
inc
pop
push
dec
daa
cmp
sub
sbb
or
cld
xor
sahf
std
mov
leave
cmp
iret
fs
ljmp
fwait
inc
xchg
ds
mov
and
mov
cs
xchg
insb
mov
clc
and
ss
dec
and
or
pop
cs
adc
out
inc
xchg
mov
movb
jb
adc
lret
les
inc
movsl
push
push
fwait
aas
out
push
jecxz
stos
and
dec
add
jge
fisubl
test
testb
lods
mov
outsb
xchg
dec
hlt
sbb
or
nop
or
push
lock
sbb
sbbl
cli
adc
jo
and
ret
bound
jb
jle
test
cmp
les
xchg
dec
addr16
xchg
dec
stos
lods
out
pop
jmp
mov
mov
das
int3
jl
inc
xchg
pop
sbb
mov
shll
in
mov
movsb
les
mov
inc
xor
xor
ret
xchg
jecxz
jmp
push
or
sbb
or
cmpsl
into
sbb
pop
stos
bsr
fistl
out
push
in
push
fistps
into
jge
mov
int
inc
mov
jne
jno
mov
jns
adc
jnp
aam
aas
mov
and
xchg
mov
sbb
iret
inc
cmp
inc
cmp
jmp
sahf
xor
testl
dec
fcmovnbe
dec
enter
clc
leave
dec
jg
mov
mov
push
insl
lcall
mov
stos
xor
into
mov
or
jecxz
push
gs
mov
mov
xor
adc
out
mov
iret
add
cld
test
dec
add
push
addr16
loope
test
aam
fidivrs
cmp
pop
mov
ljmp
rol
ds
mov
lret
imul
das
mov
push
out
in
fxch
in
jb
push
movsl
and
cmpsl
dec
add
jae
or
pop
mov
jmp
movsl
in
sahf
adc
add
fldl
fwait
enter
stos
pop
mov
js
dec
pusha
sbb
push
fstl
fcmove
mov
movsl
push
cmpl
pop
adc
shll
arpl
lods
sbb
jno
pop
mov
inc
add
pop
inc
sar
or
pop
icebp
shrl
dec
outsb
add
sahf
pop
xchg
lret
in
lea
in
xor
mov
shl
push
inc
out
xlat
ljmp
ret
jo
aam
shlb
push
sub
mov
sbb
or
cltd
sahf
xchg
cmpsb
pop
inc
xor
cmc
aaa
jp
je
push
fucomip
sbb
lods
pop
and
mov
std
cs
push
aam
addr16
inc
mov
inc
or
sub
dec
jne
movsb
stos
xor
adc
mov
lods
aad
out
xchg
icebp
rolb
inc
pop
nop
push
sarl
xchg
mov
jp
and
test
xchg
out
jbe
mov
aad
insl
pop
jbe
lds
fsubl
push
orb
and
gs
cmp
fimull
adc
sbb
pop
sahf
or
enter
push
divl
cmc
push
jb
sarb
pop
xor
push
aam
iret
xor
fistpll
lea
mov
pusha
stc
in
lcall
jmp
loopne
test
sti
call
mov
xchg
xor
xchg
popf
jmp
push
add
mov
jno
std
xchg
ljmp
bound
sub
push
stos
aas
cmc
cmp
jg
inc
bound
mov
lret
mov
daa
lea
lock
adc
minps
pushf
subb
xor
adc
sub
lahf
sbb
jge
xlat
test
xlat
sbb
or
and
jmp
hlt
push
aam
arpl
hlt
and
jmp
mov
adc
addl
mov
outsb
inc
or
fwait
test
mov
inc
sti
inc
out
and
jecxz
sahf
adc
jae
ret
pop
fwait
jecxz
pop
xchg
mov
enter
mov
pop
or
dec
lea
hlt
dec
into
inc
cmp
pop
xchg
cmp
jmp
loopne
inc
mov
adc
sub
add
test
dec
arpl
ficoml
mov
adc
and
inc
ljmp
sbb
xchg
leave
pop
roll
mov
bound
mov
jae
xchg
ja
mov
inc
mov
adc
into
adc
adc
fwait
cmpsb
xchg
mov
aad
dec
jmp
sub
and
cltd
push
lods
cld
mov
inc
push
or
loop
das
enter
jae
push
imul
loopne
iret
js
mov
push
sub
lds
inc
cltd
dec
das
pop
iret
or
sahf
or
cmp
fs
mov
sbb
dec
mov
cmp
outsb
nop
cmp
mov
mov
dec
mov
cmp
loopne
imul
cwtl
popf
movsl
cmpsl
int3
or
cmp
ljmp
cli
xchg
xchg
add
sbb
push
cmp
or
shl
pop
dec
fwait
les
cmp
xchg
cs
or
xchg
or
or
lret
aaa
in
mov
roll
pop
cmpsb
lahf
xchg
inc
cmpsl
out
addr16
jg
gs
jne
stos
or
sub
jecxz
popf
xchg
cwtl
adc
cwtl
dec
popa
or
cs
mov
jo
jo
lcall
inc
xor
adc
push
xor
icebp
mov
dec
inc
adc
scas
and
adc
das
xchg
mov
xchg
and
push
rolb
pop
xor
movsb
mov
pop
xchg
mov
lahf
cmp
loopne
lret
sahf
jb
and
mov
inc
in
cli
scas
mov
mov
scas
outsb
mov
cmp
xor
sbb
rclb
dec
jg
mov
fs
ret
int
fstps
call
ds
fnstsw
xor
push
repz
loopne
lods
pop
negb
fcomps
jns
shlb
imul
jp
dec
cmpsl
dec
sub
xchg
xchg
sbb
dec
orl
andb
ficompl
sti
dec
lret
ficomps
call
pop
test
jne
mov
fcmovnu
lret
les
mov
mov
mov
mov
dec
mov
pusha
lcall
fldl
xlat
jge
into
into
jp
and
test
mov
pushl
fists
ljmp
push
push
mov
cmpsl
dec
dec
xor
jg
pop
lods
stos
cmpsl
addb
sub
leave
mov
jnp
mov
es
mov
mov
fcomip
ljmp
adc
or
pop
test
dec
xchg
scas
ss
cmpsb
xor
push
xchg
mov
std
dec
lock
das
push
xchg
js
dec
dec
lods
dec
repnz
pop
inc
outsb
es
push
cld
push
ss
das
repz
in
xor
aam
test
jo
jbe
ret
mov
mov
dec
fidivrs
test
ds
sbb
lods
and
dec
dec
lock
int
int3
mov
cmp
mov
pop
dec
inc
test
test
out
shrl
ret
xor
pop
js
xor
xor
jl
and
sbb
outsb
or
adc
push
out
jmp
jbe
mov
xchg
imul
aad
or
jnp
int3
roll
leave
fldenv
jecxz
das
sbb
ret
cmp
rorl
mov
in
leave
mov
faddl
sbb
jb
imul
cmp
insb
or
adc
lods
cmp
fdivrs
stc
sbb
mov
adc
push
stc
xor
les
dec
adcb
lahf
call
leave
jo
das
dec
xor
sahf
test
lods
shlb
xchg
ret
cmc
outsb
mov
ss
xchg
outsb
fucomip
lahf
into
into
loope
imul
mov
inc
jb
or
jno
jmp
and
jg
nopl
xchg
jbe
cwtl
adc
mov
loopne
sbb
enter
cltd
fisttpl
push
adc
xlat
inc
cmc
jge
popf
in
arpl
sbb
shr
xor
xor
lahf
push
mov
pop
push
int3
pop
xchg
cltd
cmp
and
mov
cmp
adc
mov
loop
dec
jns
adc
loop
iret
xchg
lret
push
dec
ss
jl
adc
jo
test
xchg
jno
ret
push
push
in
stos
jne
dec
rcr
cmc
xchg
arpl
aam
or
mov
cli
and
xlat
push
sub
popf
shll
js
sbb
push
jge
jns
ds
mov
ss
ds
adc
mov
ret
dec
sub
pop
ret
lds
in
push
xchg
pop
or
push
adc
mov
mov
cmp
ja
inc
test
pop
in
pop
and
push
pop
fdivrl
into
jl
mov
sahf
xor
iret
lea
mov
mov
mov
stc
lods
fiadds
lods
mov
add
push
or
sub
jmp
dec
stos
sub
ror
sbb
xlat
pop
sub
jg
and
and
sbb
aas
outsb
dec
inc
xchg
and
aas
pop
mov
cltd
dec
les
mov
push
jb
pop
pusha
xchg
push
fistpll
imul
cld
cmp
mov
jle
mov
push
sbb
sarb
rclb
push
sahf
sub
add
add
push
cmp
xchg
xor
or
mov
mov
push
out
lds
ljmp
xor
ljmp
pop
subl
cmpsl
dec
add
icebp
roll
ljmp
aas
cmp
int3
push
mov
mov
sahf
mov
xchg
mov
icebp
cmp
in
in
test
or
mov
aaa
popa
fsubp
shrb
mov
xchg
insl
adcb
pop
jae
ss
mov
and
or
mov
fxch
mov
js
add
jg
pop
imul
xor
ret
sub
test
push
rcrl
stc
lea
test
mov
mov
rcll
mov
mov
cmp
add
push
movsl
push
mov
scas
cmp
mov
push
aam
xorb
cs
scas
jge
rclb
iret
pop
push
inc
cmp
sub
out
jae
movsb
mov
xchg
shl
in
push
stos
xor
repz
shlb
mov
jecxz
sbb
sbb
sbb
mov
mov
sahf
aam
call
mov
mov
ljmp
pop
aas
sub
pusha
mov
popa
cmpsb
jg
enter
addb
cmp
test
xorb
hlt
aaa
fsubs
scas
jg
push
pushf
dec
aam
loop
popf
testb
mov
aam
sbb
inc
out
fldcw
repz
popa
mov
push
into
inc
or
out
inc
adc
and
adc
cmc
test
lea
cld
xchg
jno
sbb
adc
out
push
cmp
cmp
daa
int
adc
ds
jp
pop
sub
sub
in
test
or
movsb
mov
lcall
mov
cmp
lahf
add
arpl
aad
leave
fs
adc
mov
inc
lock
ficoml
add
hlt
ljmp
data16
push
inc
data16
js
js
push
dec
xchg
sub
xchg
and
lock
cmp
jecxz
add
and
dec
cld
and
ret
cmp
repz
push
outsb
xor
sbb
shrb
dec
mov
shrl
cmp
std
mull
mov
aam
xchg
ss
and
mov
inc
jno
mov
jl
ret
aaa
je
fldenv
loope
lods
cmp
out
adc
adc
pusha
loope
cmp
icebp
xchg
ret
push
popa
cmp
jle
push
mulb
fidivrl
std
cli
jb
data16
push
lret
shl
test
mov
or
hlt
sbb
int3
das
jge
inc
sub
mov
add
popf
adc
fnstsw
insl
mov
mov
adc
cli
nop
js
cld
adc
out
fimuls
fwait
and
jno
repz
fnsave
sub
pop
cmp
ror
jno
loope
das
nop
fildll
hlt
push
repnz
cld
and
jns
and
adc
or
pop
fs
mov
push
and
sub
test
mov
and
sub
aas
mov
popa
jg
push
xchg
jge
jbe
imul
ja
sti
fstl
fwait
sbb
pop
arpl
push
sub
stos
mov
idivb
push
xchg
ds
dec
sub
jl
outsl
or
sarl
rcr
inc
enter
inc
imulb
cmc
mov
inc
push
add
stos
cmp
repz
std
sbb
leave
sahf
cwtl
inc
mov
popa
jo
xchg
sarb
lcall
mov
ret
dec
cltd
and
fwait
cmp
std
out
loopne
sbb
sbb
lret
stos
cmp
cmp
mov
xchg
pop
out
repz
push
sahf
dec
pop
jmp
pop
mov
stos
ret
dec
ss
pop
dec
jo
push
cmp
pop
fidivrs
clc
mov
mov
jbe
jo
stos
cmp
mov
hlt
sbb
add
fsts
dec
xchg
adc
pop
cmc
xorl
fnsave
sti
or
in
pop
dec
xchg
cmpsb
sub
inc
sbb
sub
mov
cs
or
and
imul
sub
mov
les
cmp
mov
mov
dec
xchg
or
mov
push
cld
rcll
test
add
fcompl
hlt
adc
cmp
xchg
mov
push
andl
xor
pusha
or
jecxz
cli
rcll
xchg
or
int
push
das
ror
add
ja,pt
mov
sub
sub
lret
movsb
shrl
jecxz
dec
outsl
xor
mov
xor
es
xor
dec
ss
add
sbbl
xchg
out
xor
loop
fiaddl
bound
inc
in
xor
nop
jb
lods
loope
pandn
shll
sub
icebp
fcmovnb
jbe
jne
dec
addr16
xsha256
cmpsb
adc
pop
push
push
or
adc
shlb
lret
adc
and
push
loope
adc
xchg
dec
push
ficoml
outsl
mov
out
ret
imul
xor
add
clc
pop
sahf
jnp
fsubrs
gs
lods
xchg
sahf
addr16
rol
inc
repz
push
pushfw
int
sbb
lods
add
jae
test
lahf
shlb
scas
cltd
popf
add
jb
sbb
xor
dec
fsubl
inc
dec
mov
sub
jecxz
addr16
jno
inc
arpl
cmc
or
push
jb
enter
cmp
sub
fsubrl
aam
push
dec
adc
pop
je
mov
inc
pop
pop
adc
add
movl
fbld
cwtl
or
je
jl
ja
in
popf
add
inc
ja
jae
push
xbegin
dec
lret
jne
hlt
insl
sti
jnp
sub
fsts
jb
cmp
std
into
and
push
int
je
mov
adc
xorl
mov
or
in
nop
inc
out
push
adc
in
cmp
and
icebp
mov
xchg
sahf
mov
fsubrs
add
dec
inc
btr
insb
dec
fldl
movsl
insl
loopne
popf
ds
sbb
fsqrt
lock
cmpl
mov
cmp
call
imul
xor
xor
addb
mov
lret
cwtl
mov
mov
mov
int
jne
pop
repnz
decb
loop
mov
out
dec
sti
xor
lds
or
rorb
sub
xor
ss
stos
xor
stc
push
cmp
dec
or
test
mov
or
lock
cmp
jg
fs
sub
mov
hlt
xchg
mov
add
adc
add
aam
pop
sbb
dec
mov
mov
dec
inc
mov
dec
shlb
test
fcoml
jecxz
sbb
out
inc
xchg
push
fcomp
add
sbb
mov
cmp
loope
movsl
or
jbe
xchg
sub
pop
lret
pusha
or
ja
ret
jbe
aam
hlt
ja
inc
sarb
stc
in
fadd
shlb
mov
or
xlat
int3
push
pop
fdiv
xlat
dec
cmp
cmc
int3
test
inc
movsb
clc
xor
and
xor
pop
adc
out
stos
or
loop
and
shlb
sbb
jle
push
aaa
out
mov
testb
push
out
nop
xchg
jns
xchg
arpl
ret
addr16
dec
shlb
leave
xchg
adc
repz
inc
lret
cli
pop
jbe
cmc
lret
pushf
loopne
xor
adc
push
pushf
jne
mov
cmp
or
movb
jbe
stos
bound
lods
mov
jp
test
mov
mov
roll
add
ss
outsb
cmc
aaa
ficomps
xor
dec
jne
decl
loopne
fstl
lock
fsubr
push
xor
lea
lods
cmc
rorl
loop
xor
stc
xor
pop
mov
mov
jbe
jo
and
ds
and
xchg
out
popf
fdivs
cmp
clc
shlb
cmp
adc
mov
cmp
mov
ss
mov
xchg
mov
iret
jbe
jbe
std
push
movsb
mov
mov
mov
mov
cwtl
push
push
xor
outsb
sbb
and
or
and
and
mov
and
adc
data16
movsb
pop
xchg
mov
jo
mov
dec
notl
mov
ds
flds
lods
call
dec
lods
push
xchg
adc
insl
nop
cmpsl
ret
sbb
xor
or
ss
nop
sub
mull
mov
sti
andb
cmp
pop
fstpl
add
dec
clc
shlb
adc
fsubrs
fldt
xchg
fwait
mov
in
pop
filds
adc
rol
adcl
adc
jbe
xor
aas
rcrl
push
repnz
pop
inc
popf
lods
xor
in
repz
loopne
push
sbb
shlb
mov
lods
outsl
les
pop
dec
pop
pop
ja
fmuls
cmc
dec
pop
mov
int3
rolb
dec
js
push
cmp
test
imul
mov
stos
jnp
data16
inc
cmpsb
dec
out
add
cmp
mov
inc
push
mov
lods
xor
sbb
mov
push
ror
dec
fwait
xchg
dec
lods
mov
lret
add
cmpps
scas
push
xor
ficompl
inc
roll
push
sub
push
pushf
mov
data16
loope
repz
mov
je
xchg
jae
je
cwtl
js
les
arpl
mov
aad
sbb
push
cmp
mov
sbb
jne
sbb
sub
pop
arpl
lea
xchg
cli
stos
mov
mov
lcall
pop
es
outsb
jp
bound
xchg
push
lret
add
pop
aam
dec
jae
les
xchg
jae
lea
xchg
in
loope
pusha
jecxz
cmpb
sbb
out
add
rcrb
add
xlat
jbe
repnz
ffree
sbb
sub
fs
mov
dec
data16
sti
sbb
loope
mov
cmp
push
cld
fstpl
scas
pop
dec
jl
outsl
lret
cltd
std
mov
dec
popf
pop
add
cmpsb
jecxz
movsb
xor
lret
je
adc
arpl
cmpsb
push
mov
pop
jecxz
xchg
xchg
pop
into
cltd
mov
pop
fdivs
fs
xchg
jp
cmp
pushf
add
jne
pop
test
or
push
push
std
add
lods
js
push
fimull
outsb
sbb
in
pop
bnd
add
fcmovnb
mov
jns
mov
and
dec
and
cmpsb
aad
inc
lcallw
push
push
push
xor
adc
cld
inc
dec
addr16
hlt
jge
call
jp
mov
hlt
jmp
mov
or
mov
jbe
cmp
mov
sbb
in
dec
js
jmp
sub
inc
adc
cmp
xor
fistps
rclb
mov
repz
push
cmpsl
sbb
mov
push
rcl
fdivr
add
mov
jno
clc
push
adc
inc
mov
sbbb
call
inc
inc
cmp
xlat
in
sub
jle
xchg
fistps
mov
pop
xchg
sub
mov
sub
cmp
notl
in
mov
inc
mov
pop
std
decb
dec
es
adc
jecxz
or
arpl
xchg
lret
pop
std
in
pop
push
stc
jmp
loopne
clc
adc
push
test
imul
fs
out
push
fs
arpl
xlat
int3
cmpsl
mov
xchg
mov
ja
inc
pop
push
dec
daa
cmp
sub
sbb
or
cld
imul
int3
cmpsl
mov
xchg
mov
ja
inc
pop
push
dec
daa
cmp
sub
sbb
or
cld
imul
int3
cmpsl
mov
xchg
mov
ja
inc
pop
push
dec
daa
cmp
sub
sbb
ret
in
icebp
int3
cmpsl
mov
pop
mov
pop
push
cmp
mov
repz
xchg
inc
je
cmpsb
sbb
je
push
inc
ret
les
xchg
push
test
push
xchg
inc
xchg
cmpsb
adc
add
xor
and
aam
les
cmpb
es
js
inc
mov
movsb
push
xor
sub
rclb
add
xor
and
aam
les
cld
add
lret
rolb
in
ret
push
flds
mov
popf
push
stc
cmp
mov
pop
mov
fists
jmp
dec
aas
or
sbb
jmp
popa
jbe
inc
xchg
sbb
dec
fistpll
adc
mov
or
mov
xor
or
mov
add
adc
lret
imul
aam
jns
ret
inc
in
lret
mov
cmpsb
sbb
dec
pop
pop
scas
in
xor
xor
insl
sbb
push
push
and
jl
xor
test
cltd
lds
test
push
or
mov
add
inc
cmpsb
je
cmpsb
adc
add
xor
and
aam
les
xchg
push
test
outsb
movsb
push
adc
add
js
dec
stos
push
andl
push
shlb
mov
adc
sub
add
xorps
shlb
xchg
xor
and
mov
jae
mov
inc
adc
sbb
lcall
aam
les
hlt
ss
xchg
push
test
jbe
push
xchg
inc
xchg
cmpsb
adc
add
xor
and
aam
les
hlt
ss
xchg
push
test
jbe
push
xchg
loope
iret
lret
inc
dec
into
mov
iret
lea
fnstcw
cmpsl
mov
sbb
cs
pop
sub
insb
repnz
push
adc
push
inc
pop
sbb
dec
xor
add
sub
movsb
outsl
insb
mov
jecxz
dec
sbb
jae
cltd
ret
mov
push
mov
sub
xor
lret
mov
mov
sbb
mov
sbb
cmpsb
adc
sub
cmp
loopne
das
and
pop
shr
addr16
sub
jae
lods
xchg
inc
fists
rcll
decb
or
test
or
das
negb
rorb
cmc
mov
cmpsl
fmull
lock
xchg
loop
inc
outsl
jp
call
nop
leave
rcll
pop
add
movl
les
mov
push
hlt
add
mov
xlat
fidivs
in
jle
movsl
push
add
scas
cmc
addr16
notb
cli
aas
adc
int
pop
cmp
xchg
iret
repnz
aad
add
adc
fdivl
in
scas
xchg
xor
cmc
adcl
xlat
cmp
in
int
push
test
repnz
out
insl
adc
jmp
fwait
lret
pop
out
int
ss
and
mov
int
stc
xor
cmp
shll
test
inc
clc
add
or
pop
pop
fcmovnu
add
ja
fimull
sub
mov
xor
jl
out
jmp
mov
fs
sub
lret
inc
test
dec
fcmovne
js
sub
sbb
mov
cmp
jp
xchg
and
aam
stos
call
enter
cmpsl
loopne
and
fcmovu
jecxz
mov
test
imul
or
in
dec
cs
ret
add
mov
fcompl
in
daa
push
aas
aas
das
or
push
or
test
push
push
fmulp
ja
call
xor
imul
or
in
jmp
out
imul
add
xchg
dec
dec
sub
jo
push
lahf
lods
test
test
fs
mov
mov
lahf
imul
or
xchg
xchg
inc
outsb
out
lcall
xchg
les
and
ret
push
or
loopne
loopne
in
mov
xchg
jg
in
or
push
sub
push
movsl
repz
cwtl
stos
icebp
adc
cwtl
fisttpl
sti
jl
inc
and
and
lea
dec
orl
sbb
push
xor
movsb
cmp
mov
sub
mov
cmpsl
nop
mov
out
dec
jb
xchg
xchg
pusha
mov
sbb
push
push
in
pop
push
fs
out
dec
push
cli
test
es
pop
js
fisubrs
insb
sarl
shrl
paddd
in
mov
leave
mov
insl
xchg
lock
imull
test
clc
push
dec
cli
xor
mov
addr16
gs
dec
jmp
xchg
cli
mov
mov
dec
rol
pop
dec
and
pop
sbb
and
pop
sti
arpl
mov
sub
movsb
repnz
dec
shrb
aad
or
leave
rorl
cmp
xor
movsl
inc
lcall
fdivrl
out
sbb
mov
xchg
stos
adc
push
shll
pusha
cld
lcall
popf
jg
lcall
loop,pt
inc
je
push
pop
cmp
jl
imul
das
xchg
lahf
lock
sub
imulb
lcall
and
popf
add
xor
pushl
int3
pop
addr16
push
stc
xor
scas
pop
inc
dec
adc
mov
cmc
mov
jmp
cmp
push
sub
pop
out
lds
pop
aaa
xor
aas
and
mov
rcll
test
mov
mov
pop
mov
inc
sbb
dec
and
insb
cmp
mov
push
out
popa
bound
jmp
mov
sbb
insl
test
insl
xlat
scas
lock
sub
and
push
add
test
dec
cld
and
mov
imul
push
dec
cmp
jge
lds
cld
shll
mov
aaa
mov
cltd
xchg
aaa
push
dec
popa
cmp
scas
fstl
inc
inc
aas
cltd
stc
ljmp
addr16
mov
mull
cli
push
and
sub
inc
jle
cmp
ret
jle
stos
lahf
mov
dec
imul
or
sbb
mov
call
stos
out
jecxz
or
sub
arpl
mov
sub
cmp
jno
gs
das
jl
adc
out
pop
cli
addr16
int
dec
pusha
cli
sbb
outsl
jnp
imul
fwait
mov
inc
adc
out
fcmovb
popa
cmp
stos
nop
dec
imulb
cmp
imul
xor
add
and
xchg
jg
push
sub
cmp
dec
dec
stos
test
pop
or
not
sbb
lcall
cld
cmp
mov
jecxz
push
in
pop
jns
stos
and
mov
popa
mov
add
mov
pop
in
push
sti
mov
test
icebp
scas
int3
outsb
aaa
gs
cmp
movsb
add
sbb
inc
pop
pushf
jle
test
dec
jmp
cwtl
in
dec
lods
mov
rcr
testb
mov
sahf
jb
sbb
insb
dec
sar
scas
out
fistpll
ja
test
sub
insl
hlt
cmp
xchg
lret
push
mov
leave
movsl
ret
xchg
or
inc
and
jno,pn
ret
pop
dec
mov
lock
rclb
mov
sub
cmp
pop
dec
int
lcall
cwtl
or
cltd
shll
mov
push
popf
lret
nop
lods
mov
cmp
int3
ret
stc
ret
mov
out
sub
or
out
mov
mov
add
xchg
xor
inc
mov
into
testb
adc
sub
fbld
aaa
fwait
dec
add
push
pushf
lcall
dec
in
xorb
dec
out
mov
push
into
loopne
imul
jno
adc
call
add
and
mov
in
cltd
mov
jne
iret
divl
jne
inc
lea
cmpsb
push
add
idivb
pusha
mov
sbb
mov
test
mov
cmp
ret
rcr
jmp
cmp
sub
mov
push
lods
or
rolb
btc
push
mov
cmc
sahf
xchg
mov
in
out
xchg
and
xchg
daa
mov
add
out
mov
int3
jmp
notb
add
out
cmpsl
ret
cli
ds
pop
mov
sti
test
push
not
mov
fwait
xchg
lock
loop
outsb
pop
inc
sbb
xchg
ja
inc
aaa
aam
dec
pop
or
adc
cmp
daa
xchg
bound
or
in
push
nop
repnz
dec
push
ret
cmpsl
das
push
sbb
gs
outsb
leave
xchg
xor
push
mov
pop
fcoms
test
sbb
out
movsb
test
test
dec
and
pop
add
scas
cld
js
or
xor
cmc
pushf
stos
jbe
xor
pop
inc
or
cmp
inc
ret
ficoms
xorb
enter
xchg
sti
mov
in
mov
stos
lods
dec
push
das
repnz
mov
int3
pop
data16
pop
push
insb
fiaddl
sete
js
andb
mov
ds
mov
iret
popa
andl
cwtl
push
sbb
stc
push
and
jp
pop
outsb
seta
push
sub
andb
ffreep
in
rol
cwtl
jl
push
into
add
dec
cmovns
sbb
inc
cltd
or
fsubrs
push
dec
add
cmp
push
jecxz
outsb
fbld
in
xor
filds
aas
sbbl
sub
inc
jns
push
xorl
cmp
int
sub
cmp
test
push
pop
inc
jl
movsl
dec
xor
data16
jge
sub
les
push
shrb
loope
idiv
inc
or
adc
jle
inc
cmc
idiv
pop
xchg
subb
mov
cmp
pop
and
cmp
xchg
ds
les
add
cli
cmp
dec
xchg
cmp
jo
jecxz
sbb
adc
inc
and
ret
jns
hlt
push
mov
out
lods
xor
in
pop
push
fsubrp
pop
jo
xchg
mov
mov
lcall
aas
sti
mov
cmpsl
sbb
cmc
adc
leave
das
rorb
sub
rol
jmp
push
loop
subl
das
adc
dec
filds
negb
dec
push
inc
push
sub
jb
or
mov
sub
cmpsl
psubq
insl
in
cmp
cmp
mov
xlat
inc
cmpsb
or
mov
gs
jnp
in
cli
xorb
daa
inc
mov
aad
xchg
sbb
repz
movl
out
dec
or
jge
mov
mov
adc
stos
push
clc
mov
scas
arpl
push
mov
jmp
popf
imul
fs
jecxz
cmc
cmc
mov
pop
mov
ficomps
cmp
dec
lds
in
mov
or
fnstsw
push
insb
ljmp
clts
inc
mov
push
cli
leave
dec
loope
xor
pop
mov
mov
adc
lods
insl
stos
push
stc
into
test
insb
notb
cmpsb
mov
dec
push
fadd
jnp
fsubl
xchg
lea
lcall
cli
dec
jnp
add
push
sub
fistpl
mov
inc
fidivrs
add
adc
adc
cmpsl
jle,pt
mov
push
mov
adc
mov
mov
fldenv
stos
mov
jo
or
out
repz
fisubrl
js
outsb
cs
adc
iret
ss
pusha
add
lock
cvtps2pd
ja
add
push
out
inc
popf
sub
mov
push
jno
adc
je
test
lds
jle
mov
arpl
insb
jp
ljmp
pop
mov
mov
jecxz
cmpb
test
inc
ljmp
xlat
xchg
mov
sub
or
in
std
pop
insl
mov
or
or
js
icebp
dec
stos
sbb
sarb
xchg
mov
ret
and
mov
clc
adc
sub
ljmp
jne
loop
leave
aam
jno
into
add
notl
cltd
jecxz
repnz
xchg
push
add
lods
cwtl
sbb
push
pop
mov
inc
sub
xchg
mov
aaa
xor
push
sub
push
mov
popf
roll
jl
lods
mov
je
in
ret
sub
aam
leave
and
rcrl
sub
pop
lret
mov
dec
jno
dec
or
test
mov
pop
iret
sbbb
out
jnp
ss
xchg
mov
ja
shll
adc
stc
in
enter
aam
jg
outsb
mov
in
test
int3
pop
into
lods
fdivrl
dec
xchg
movsb
adc
mov
dec
push
loopne
imul
arpl
xlat
push
dec
xchg
inc
jmp
sbb
into
jge
in
je
cmpsl
cmp
mov
stos
jle
je
jge
and
mov
sub
sahf
or
mov
cmpsl
loop
pop
lret
cli
js
inc
inc
push
jno
das
cs
sub
or
mov
int3
xchg
or
test
rol
in
int
inc
icebp
mov
cmc
lret
mov
iret
push
ret
mov
imul
mov
rol
stc
mov
add
pusha
mov
mov
lret
int
sub
imul
hlt
add
fs
into
stos
mov
adc
ja
mov
mov
clc
dec
or
mov
hlt
popa
xchg
fisubrs
cltd
push
adc
cmp
add
cmp
or
fidivrl
ret
mov
push
imul
test
mov
mov
lretw
and
xchg
pop
sub
mov
rorb
movsb
test
roll
pop
push
std
pop
sub
push
push
loope
jecxz
inc
in
aad
inc
or
inc
mov
bound
scas
mov
inc
fidivl
or
test
clc
mov
test
nop
mov
and
andl
push
popf
xchg
mov
fwait
fwait
xchg
push
iret
test
xor
pop
mov
xchg
aad
push
sbb
fisttpll
mov
pop
xchg
sub
mov
mov
out
lea
out
push
add
leave
sahf
pop
stc
pop
xchg
mov
mov
xor
pop
push
adc
iret
adc
adc
xor
inc
xchg
outsl
add
sub
jae
mov
addr16
inc
testb
push
scas
dec
insl
in
out
shrb
mulb
jne
addr16
imulb
xchg
insb
aam
dec
xlat
push
inc
fwait
shlb
loope
stc
mov
sbb
imul
cwtd
dec
js
mov
inc
adc
xchg
sub
and
insb
loopne
lds
mov
sub
rcl
jbe
imul
filds
mov
ret
dec
push
jnp
mov
retw
mov
inc
repz
scas
jg
test
xlat
pop
or
orb
mov
rcrl
jecxz
pop
mov
lds
mov
mov
out
aaa
jnp
ja
in
push
rcr
cmpsl
push
jp
xchg
mov
fmuls
sub
sub
das
push
cmp
mov
jne
sbb
mov
inc
aad
leave
rcrb
divb
cmp
js
inc
mov
cmp
shll
add
clc
jg
or
mov
movsl
add
cmp
clc
fmull
inc
cmpsb
xor
aad
lock
nop
mov
gs
cltd
cmp
insl
rolb
and
sub
dec
test
test
js
inc
add
add
negb
or
dec
jle
xchg
add
xchg
jp
into
arpl
mov
cwtl
sbbb
cmp
sti
sub
xchg
out
mul
adc
insb
call
pushf
fidivrs
or
inc
xorl
dec
rcll
enter
or
andb
adc
xchg
xchg
cld
and
dec
mov
iret
idivb
movsb
bound
ret
testb
xor
fistl
loopne
arpl
adc
pop
or
lahf
cli
mov
push
adc
aam
mov
adc
enter
in
adc
gs
push
outsl
ret
cwtl
daa
mov
sbb
aad
cmp
mov
imul
out
out
leave
pop
or
lock
cld
shrl
lret
repz
dec
and
adc
outsb
leave
dec
and
jg
inc
adc
cmp
stc
dec
mov
stos
ret
in
inc
or
sub
jmp
xchg
jl
adc
push
aam
add
inc
pop
xchg
loope
daa
lcall
jmp
fmuls
fwait
cmp
testb
test
fsts
pusha
int3
clc
stc
cmp
in
std
mov
divb
scas
inc
sub
ret
pop
mov
ss
xor
je
pop
shlb
loop
pop
les
push
cmp
sti
sbb
inc
stos
imul
jge
jp
arpl
popf
mov
inc
mov
pop
inc
xchg
dec
lret
int3
test
lea
lods
sbb
inc
cmpsb
inc
xor
or
mov
xor
dec
incl
movsb
rolb
jbe
outsb
lcall
les
shl
xor
mov
mov
or
stos
mov
hlt
adc
movsl
xchg
sub
insl
jecxz
adc
loope
xor
and
inc
mov
pop
out
xor
cmpsl
mov
inc
inc
aaa
dec
test
mov
fnstenv
and
lret
pop
cmc
int
pop
inc
loop
fimull
jo
cmp
jnp
mulb
les
test
fcmovnbe
ds
mov
lods
out
outsl
testl
mov
jns
sbb
pop
adcl
xor
sbb
loop
mov
xor
and
mov
pop
push
cmpsb
ret
dec
xor
inc
mov
inc
add
add
cs
out
test
inc
jge
cmp
push
push
xchg
mov
fisttpl
testl
adc
xchg
lret
out
or
mov
das
aaa
insl
out
add
movsl
jnp
lods
cwtl
sub
in
and
xchg
filds
push
xchg
loop
fldenv
lods
pop
dec
ljmp
xor
aas
and
scas
sub
sbb
in
inc
adc
fidivrs
pop
xchg
and
popa
test
int3
xchg
pop
shr
repnz
sub
and
and
mov
loop
push
jg
mov
or
mov
std
lret
adc
aad
push
gs
lcall
xchg
out
iret
fbstp
mov
xchg
rcr
fdivp
or
insb
ja
lods
out
scas
lods
add
adc
jne
in
andb
lods
jmp
test
sbb
stc
inc
cmp
lods
fs
mov
fld
inc
paddd
xchg
pop
mov
dec
das
ljmp
xchg
cld
mov
push
mov
xchg
cmp
push
adc
test
cli
fldcw
int3
cmpl
das
dec
cwtl
sub
add
ss
bound
jge,pn
xor
outsb
cmp
test
pop
lods
sub
push
jnp
jg
cwtl
in
int
xor
push
xchg
xchg
xchg
pop
repnz
cmp
push
adc
das
out
es
xchg
xchg
aad
std
fisubl
mov
xchg
xor
cmp
or
mov
and
fidivl
sbb
in
into
int
call
sub
mov
xor
cmp
mov
sub
push
pusha
popf
sub
leave
sti
inc
lods
jns
repnz
sub
push
cmp
and
repz
loopne
test
ja
stc
push
rcrb
mov
mov
sub
shlb
fcomps
nop
sbb
dec
mov
sbb
push
mov
fimull
mov
cmpsl
ljmp
cld
ljmp
lods
push
sbb
mov
push
popa
xchg
nop
ljmp
movsl
pop
int
divb
clc
xor
in
jnp
xchg
cwtl
mov
stos
sub
mov
add
mov
repz
ret
adc
jns
adc
or
or
pusha
in
sbb
fwait
add
sub
subl
cmpsb
test
stos
fiadds
and
sub
sub
stc
push
xor
inc
aas
sbb
fldl
xor
into
dec
and
in
mov
sbb
cmpsb
cmc
sbb
adc
push
gs
repnz
ljmp
shl
adc
imul
inc
jb
clc
orl
push
ds
inc
inc
aam
pop
push
cmp
jnp
mov
fcompl
fcompl
jg
xlat
mov
push
mov
fstpt
arpl
sub
imul
inc
xlat
mov
jp
mov
out
je
or
ret
popa
sbb
mov
push
les
int
js
add
or
repz
into
out
and
mov
repnz
insb
cmpsb
rcrl
xchg
add
jle
xchg
pop
xchg
test
cmp
insb
push
testl
xchg
ss
mov
pop
mov
aam
sub
push
icebp
test
test
lahf
mov
mov
add
jbe
incl
sub
pop
das
sub
xchg
xor
ret
ja
cmp
mov
adc
or
test
movsb
cmc
mov
add
xor
and
mov
divl
cwtl
pop
inc
add
push
cmp
inc
mov
jnp
into
ffreep
add
pop
in
les
addr16
lcall
xor
or
clc
cmpsb
xchg
dec
pop
jbe
popf
and
inc
outsl
fldenv
pusha
in
repnz
mov
or
cmp
mov
push
out
pop
popl
dec
jne
pusha
mov
lea
lock
in
xor
mov
sarl
cmp
xchg
adc
push
xchg
movsb
std
out
adc
rolb
and
aam
push
fistps
sub
mov
or
push
mov
push
xchg
pop
pop
and
imul
push
orb
mov
pop
inc
pop
out
mov
mov
call
ljmp
pusha
sbb
movsl
test
inc
outsl
jno
or
scas
ljmp
cmp
xor
clc
lods
dec
dec
pop
sub
movsb
adc
fldcw
addr16
xchg
adc
sbb
xchg
jg
cmp
cwtl
test
xorl
out
mov
cmpsb
lock
test
iret
jno
sub
sub
lahf
aaa
call
scas
add
xchg
add
xchg
cld
jo
outsl
les
pop
mov
sahf
dec
push
push
scas
into
cmp
or
addl
btr
add
xor
and
aam
les
hlt
ss
xchg
push
test
jbe
push
xchg
inc
xchg
cmpsb
adc
add
xor
and
aam
les
hlt
ss
xchg
push
test
jbe
push
xchg
inc
mov
mov
xor
and
aam
les
hlt
ss
xchg
push
test
jg
adcb
je
fs
add
xor
and
aam
les
cs
dec
push
pop
push
push
mov
cmpsl
jb
bound
inc
mov
ret
pop
loop
xchg
jbe
data16
mov
cmpsl
jb
bound
xor
and
repnz
in
pop
xchg
adc
inc
dec
mov
cmpsl
push
jp
or
sbb
sub
and
lret
aaa
loope
lods
jb
imul
sti
sub
loop
dec
add
repz
ret
cmp
jnp
mov
adc
xchg
adc
mov
or
out
push
pop
mov
push
daa
jmp
push
call
xchg
cmp
out
pop
push
lods
cmpsl
mov
inc
sarl
loop
test
cmp
clc
xchg
mov
mov
mov
mov
addb
testb
int
and
pop
lret
ret
fadd
rcrl
xchg
and
pop
ljmp
mov
jl
or
rol
ror
add
repz
xorb
mov
mov
sub
insb
rcrl
sub
bound
aaa
mov
mov
cmpsl
jb
bound
xor
cmp
lret
aaa
fisubl
ljmp
addr16
mov
ficoms
push
popa
mov
xchg
jg
and
addl
shlb
lret
sbb
mov
mov
xchg
push
cmpsl
push
bnd
push
xchg
adc
icebp
les
adc
imulb
hlt
push
repnz
pop
lds
out
xlat
and
shlb
ret
pop
loop
xchg
ja
addr16
mov
cmpsl
jb
bound
xor
and
shlb
ret
pop
loop
xchg
ja
addr16
mov
int
adc
add
xor
cmpb
gs
imul
dec
cmpsl
jns
sub
mov
lods
pop
add
andl
imull
adc
fwait
sbb
xlat
dec
lret
sub
loope
test
sub
cltd
mov
cmp
push
pusha
lahf
sub
mov
stc
xchg
cmp
pop
xchg
inc
jb
fstl
dec
js
xor
int3
mov
aas
or
push
add
add
inc
mov
push
dec
gs
xchg
inc
inc
test
pop
pop
sarb
sar
lea
jmp
std
xchg
push
aam
xor
out
and
push
mov
mov
ret
push
mov
adc
pushf
sbb
mov
inc
lods
xchg
das
dec
ret
nop
sbb
inc
add
dec
fcmovne
fistpll
mov
cmp
or
sub
mov
popa
lret
cmpsb
xor
fwait
add
xchg
add
cmc
js
out
dec
sti
dec
or
cmp
outsb
mov
aaa
sarl
dec
cmp
mov
push
jno
mov
cmp
dec
dec
call
and
mov
or
mov
and
xor
lret
pop
fucomip
out
and
xrelease
ret
cmp
push
mov
fildl
loope
daa
aam
jno
call
mov
sub
jg
jl
mov
les
lds
push
mov
xor
mov
das
jecxz
inc
pop
inc
dec
xchg
mov
ffree
ret
mov
dec
push
je
out
cmp
lahf
les
insb
add
mov
pop
outsb
and
inc
lcall
push
jno
sub
xchg
hlt
mov
out
sbb
cmova
add
mov
es
outsl
mov
pop
cmp
fsubr
mov
gs
or
jnp
and
rcrl
ror
adcb
xor
or
cmc
pop
aaa
pop
hlt
add
mov
in
fwait
addr16
hlt
rep
mov
punpcklwd
sarl
outsl
xchg
ss
pop
shl
sti
xchg
xor
xor
add
jb
push
mov
push
push
pop
rcrb
jne
cmp
jecxz
or
cmp
ss
loope
xchg
pop
jbe
sub
fdivl
push
mov
inc
sbbl
jno
pushf
xchg
fists
and
test
pop
enter
mov
push
bndstx
xchg
je
add
scas
mov
jge
xorl
lea
leave
jecxz
fsubr
dec
mov
push
mov
shrl
add
mov
scas
loopne
jmp
dec
sub
inc
int3
popa
in
sbb
roll
bound
out
pop
add
sbb
nop
cwtl
jb
xchg
push
or
mov
mov
pop
or
sahf
mov
daa
test
adc
clc
lret
jg
sub
scas
out
push
mov
dec
push
xchg
sub
cmpsb
pop
std
pop
lock
add
rcll
lret
mov
icebp
mulb
cs
mul
sahf
pslld
in
in
stc
into
inc
in
cmp
pop
imul
mov
popa
mov
and
push
rolb
dec
cld
outsl
push
adc
test
mov
push
mov
call
and
sbb
aam
fdivl
sbb
xor
cld
stos
call
in
movsl
js
daa
xchg
inc
gs
mov
shll
lret
out
xor
sub
pop
lcall
push
and
bnd
lods
aas
or
dec
mov
loopne
push
out
imul
sub
aas
jp
cmc
cmc
push
jl
les
push
cmc
ja
adc
or
sbb
jb
test
andl
xor
xchg
es
adc
pop
mov
cmp
dec
ss
fildl
cmp
xchg
mov
frndint
mov
test
jmp
adc
xorb
inc
sti
xchg
sbb
out
dec
stos
jbe
cmpsl
push
ja
fst
lahf
pop
stc
cmp
cwtl
sbb
jbe
or
pop
jle
or
add
add
imul
fdivrl
lret
jle
mov
es
mov
fisubl
or
pop
rcll
push
movsb
imul
popa
cmp
jno
dec
call
enter
cld
popf
xor
in
jbe
pop
xorl
fdivs
lock
adc
jge
push
adc
sbb
popf
pop
pop
cmpsl
inc
sub
mov
stos
out
out
adc
sub
test
or
loop
stos
pop
test
imul
jb
pop
mov
xchg
cmp
mov
cmpsl
outsb
xchg
cmc
lahf
xorb
jp
jnp
pop
and
hlt
or
or
jae
imul
sub
fildll
adc
movsb
negl
sbb
inc
cld
xchg
sbb
popf
inc
or
cwtl
int3
inc
adc
in
fisttpl
test
jge
in
mov
imul
jg
sbb
bound
test
xchg
mov
sub
test
cmp
adcl
fisttps
pop
jns
add
dec
lods
lahf
ja
iret
jg
and
pushw
mov
subl
inc
mov
sbb
jge
push
jge
or
adc
in
leave
les
jp
dec
adc
cwtl
mov
sub
push
xchg
jl
ficompl
stc
cwtl
pop
popw
or
or
cmpsb
pop
xchg
loope
outsb
push
ret
les
daa
in
repz
mov
dec
loope
sub
sbb
pop
jmp
cmp
pop
cmp
aam
jecxz
shlb
mov
sbb
jo
adcl
jbe
adc
enter
or
or
xchg
mov
mov
outsl
push
jb
leave
xchg
push
jge
sub
pop
loope
mov
out
pop
inc
mov
hlt
out
push
mov
test
mov
mov
push
add
ret
jp
int
lods
mov
mov
movsl
mov
pop
outsl
bound
jmp
dec
xchg
jg
out
add
cmp
jo
mov
mov
inc
and
dec
pushf
shl
das
loopne
mov
or
jne
mov
add
mov
pushf
ret
fs
pusha
int
mov
adc
add
or
pop
rorl
adc
mov
adc
mul
int3
jl
mov
adc
push
push
jg
mov
cmp
es
xchg
pop
jae
xchg
cmpsb
jo
inc
nop
daa
loop
aaa
ljmp
popf
negl
call
inc
cmp
cmpsl
call
cmp
leave
inc
ret
xor
mov
push
movb
rorl
jp
data16
loop
cli
mov
sub
pusha
xchg
xchg
pushf
push
stos
add
dec
pop
jno
push
push
shlb
push
inc
cli
jle
rorb
icebp
arpl
in
movsl
into
jge
repnz
shl
add
push
push
lds
loop
and
stos
lret
js
dec
sub
aaa
lret
les
movl
iret
jge
leave
insb
clc
xchg
jmp
js
dec
andb
xchg
es
cwtl
mov
push
mov
jbe
orl
sub
mov
out
inc
int3
ss
push
mov
jae
int3
repz
lea
cld
das
ds
jo
xor
inc
iret
lret
pop
aaa
inc
mov
jb
pop
ret
mov
mov
pop
aam
cwtl
adc
pop
int
int3
test
or
fs
rorl
out
jno,pt
arpl
sub
xchg
popf
push
ret
mov
fcoml
mov
pop
adc
cmpsb
imul
popa
jns
hlt
xor
or
lea
fdivs
jns
xchg
fxtract
push
jo
push
inc
cmpsb
enter
fmull
add
jnp
jge
lret
jmp
mov
leave
mov
pop
lds
sbb
inc
push
test
add
xor
jne
xchg
aad
icebp
out
xor
icebp
pop
addl
push
cld
pop
sub
subb
mov
out
pop
inc
insl
pop
mov
or
js
inc
sbb
pop
les
outsb
cmpsl
aas
inc
xor
pop
xchg
pop
imul
int
push
fwait
imul
xchg
les
popf
jbe
leave
in
xor
sahf
cs
enter
stc
and
mov
call
pop
aas
pusha
mov
std
jp
pop
push
xchg
xchg
das
divb
rcrl
loope
jo
inc
and
adc
shrl
dec
loop
in
adc
mov
out
mov
mov
sbb
ror
movsb
xchg
mov
stc
jge
jp
mov
leave
sbb
and
mov
push
xchg
sbb
push
xchg
mov
out
or
lret
dec
adcl
dec
scas
add
jbe
add
shlb
jg
test
mov
ss
rolb
mov
push
rolb
insb
dec
lock
pop
jns
mov
inc
rol
pop
adc
xchg
cs
xchg
dec
adc
addr16
xchg
cmp
out
int
pop
pop
imul
and
cs
xor
pop
mov
xchg
sahf
jo
cwtl
movsl
mov
inc
mov
les
sbb
sbb
push
add
xor
pop
xor
in
mov
inc
push
in
and
sub
cmp
mov
jbe
arpl
sub
shrb
fldcw
imul
sub
div
push
daa
pop
popf
lods
int
and
push
dec
and
in
mov
xor
ror
cli
push
jp
push
or
fbstp
mov
ret
adc
xchg
or
fwait
sub
movsb
xlat
or
ds
xor
stc
pop
push
aad
jle
pop
sbb
add
adc
mov
dec
adc
sbb
test
sbb
inc
bound
push
enter
fs
and
cmp
in
jmp
push
cltd
pusha
into
sbb
cmp
adc
stc
repnz
lds
iret
jne
adc
xchg
mov
inc
fdivl
aaa
or
pop
lcall
pop
ficoms
hlt
ret
push
cmp
mov
inc
sub
mov
sbb
pavgw
cltd
jnp
mov
dec
cmpsl
insb
cmp
popf
mov
jb
jg
mov
int3
js
sub
sbb
or
cld
out
add
add
int3
mov
pop
dec
rcll
fiadds
dec
sti
pushf
xor
pop
stos
in
xchg
cmc
sub
push
int
out
xchg
push
out
fs
xchg
cli
push
xor
xchg
movsb
mov
in
dec
pop
mov
push
xor
stos
cmp
daa
aaa
orl
cs
xor
leave
mov
adc
in
leave
jnp
loopne
add
push
xchg
mov
je
in
sbb
call
sbb
mov
mov
add
cmp
inc
rolb
xchg
loopne
sub
dec
mov
mov
xchg
push
lock
push
fmuls
or
pop
sub
push
add
movsb
shll
mov
mov
aam
nop
dec
add
loope
mov
dec
xchg
or
jbe
mov
push
rorb
cmp
mov
fistps
movb
les
in
adc
jle
test
push
mov
insb
adc
pop
stos
mull
je
inc
stos
dec
pop
imul
cmp
sbbb
mov
and
data16
jne
and
fisttpll
ret
xor
lret
insb
pushf
cmc
andb
pop
jmp
xchg
lods
stos
or
cld
fs
add
xchg
jecxz
test
cmpps
and
xor
jp
jb
aas
mov
mov
mov
sub
sub
sbb
lcall
xor
pop
dec
xchg
jbe
pop
outsl
push
pop
push
ficoms
lods
movsb
out
or
and
mov
ss
sbb
push
xor
bnd
lods
loop
fwait
shr
or
jmp
or
std
lods
call
push
loope
insl
negl
pusha
sbb
lcall
inc
andb
dec
ljmp
test
lds
pop
das
mov
mov
jmp
fsubrs
or
mov
mov
pop
jo
inc
stos
mull
mov
pop
xchg
or
sbb
mov
decb
dec
mov
add
push
fs
ds
cli
mov
cld
cmpb
outsb
lret
pop
cs
das
fs
test
aam
mov
imul
fsubrs
jmp
mov
pop
sti
dec
roll
cmp
mov
sbb
mov
and
adc
cld
imul
add
mov
sbb
fstpt
daa
sub
push
imul
out
xor
jns
lcall
into
jle
dec
sub
mov
sahf
sbb
mov
mov
mov
push
cmp
ss
mov
xor
or
dec
nop
sbb
push
or
dec
nop
cmp
add
mov
int3
mov
adc
stc
imul
fbstp
hlt
mov
repnz
cltd
mov
jbe
cmp
mov
sub
lret
in
push
cmpsl
call
std
cmc
sarb
rorb
ret
jecxz
lock
inc
jg
fdivrs
jno
int
xor
lahf
je
ss
or
out
cltd
xchg
sahf
mov
sub
fdivl
shll
iret
aas
int3
xor
pop
fdivl
rorb
push
in
les
sbb
add
mov
inc
and
stos
mov
push
cmp
or
mov
mov
mov
mov
lods
daa
pushf
insl
adc
ret
sub
fs
iretw
mov
push
pusha
push
push
jne
data16
mov
push
cmp
push
or
mov
pop
shld
shll
mov
jnp
or
insl
outsl
xor
insb
mov
jae
push
jo
lret
test
pushf
jb
pop
jl
jb
enter
inc
jnp
jl
xor
ds
and
push
andl
sub
fcompl
imul
sub
aaa
mov
jge
jne
or
add
jno
xchg
rorl
bound
lret
repz
je
dec
jbe
popa
ret
ljmp
ret
out
inc
or
dec
jle
sub
movsb
loope
iret
mov
aas
xchg
roll
xchg
jmp
mov
xor
dec
push
arpl
lahf
hlt
test
cmp
add
loope
jns
add
les
dec
inc
push
scas
jmp
mov
cli
popf
push
adc
jmp
je
ljmp
sub
nop
jne
iret
adc
mov
cmp
cmp
test
jbe
les
push
sub
inc
leave
pusha
cli
xchg
insb
in
adc
lea
les
pop
int3
push
popa
in
outsl
vmulss
test
addb
mov
outsl
mov
mov
pop
sbb
sub
cwtl
cmc
scas
add
lea
orl
adc
push
inc
in
add
out
js
scas
lds
add
add
xchg
jp
dec
fdivl
inc
enter
ds
shrb
jmpw
pop
pop
pop
pop
xor
dec
mov
add
stc
adc
cmp
stc
jnp
pop
movsl
loop
cmp
inc
test
jl
sub
dec
sbb
mov
fsts
dec
or
jmp
jmp
push
mov
add
fsubrl
push
int
cmp
cltd
xor
lea
and
movsl
mov
jle
shlb
dec
std
cmp
mov
lods
repnz
push
sbb
sbb
mov
pop
lock
jecxz
aad
mov
stos
jnp
or
fildl
add
mov
arpl
mov
push
in
xchg
cmp
imul
xor
sbb
mov
mov
lahf
into
or
mov
mov
and
sbb
sub
xchg
push
mov
in
lahf
test
mul
adc
add
sbb
mov
test
jle
ljmp
test
imull
push
test
inc
and
out
test
mov
sub
xchg
inc
mov
idivl
outsb
cmpsb
push
lds
pop
mov
mov
clc
mov
in
fidivrl
xor
gs
mov
aas
fs
nop
and
lcall
movsb
jl
push
dec
mov
movsb
mov
es
xlat
out
popa
push
mov
movsb
dec
lret
pop
sti
and
jmp
add
fcoms
jle
add
call
push
pusha
dec
imul
sbb
jnp
sbb
inc
inc
ret
cld
push
add
and
leave
xor
stc
pop
daa
into
cltd
pop
ss
out
icebp
js
es
jl
sbb
out
jo
fnstsw
test
xor
pop
outsl
das
push
cmpb
andb
inc
fidivl
add
mov
fsubrs
ret
and
test
pop
push
jmp
js
leave
xchg
out
gs
out
imul
fwait
mov
repz
pop
pop
pop
add
clc
imul
xchg
aam
fnstenv
sub
out
jne
jge
int
aam
jne
sbb
out
push
adc
adcb
in
in
push
fs
pop
cs
push
mov
or
xor
movsl
mov
test
fnstcw
jge
push
dec
cmp
inc
lret
pop
xor
cli
inc
std
notb
inc
insb
adc
dec
cmp
into
jno
pop
arpl
cmp
lcall
nop
push
insb
push
inc
inc
cli
addr16
push
sahf
aas
or
and
add
shl
fstpl
repz
es
jno
imul
mov
sub
lea
shlb
push
jno
adc
or
sub
pop
mov
sub
jecxz
add
out
sti
cmp
or
sub
jge
loope
dec
add
mov
loope
push
push
jmp
dec
xchg
cmpsl
stos
ja
pushf
movsl
jb
mov
jg
cli
dec
scas
push
lahf
sub
pop
jae
and
adc
iret
in
nop
repnz
in
arpl
xor
jb
in
mov
pop
popa
fidivs
mov
sbb
movsl
dec
cld
push
adc
fldcw
test
inc
pop
call
jl
xorb
adc
or
js
ds
xor
leave
add
jb
lods
and
clc
jnp
inc
icebp
xchg
pop
js
add
sti
fwait
repz
aas
out
mov
add
fs
mov
int3
xchg
fnstcw
in
in
pop
push
js
movzbl
ljmp
xorl
rcrl
push
adc
mov
dec
cmp
hlt
aas
scas
push
pusha
jnp
es
cwtl
nop
in
add
push
dec
lds
xchg
add
sub
add
push
push
out
mov
mov
mov
lahf
push
stos
mov
mov
adc
push
mov
push
out
xchg
jae
pop
mov
fisubrs
test
dec
pop
cwtl
xchg
jae
ja
out
mov
negl
pop
cmp
pop
js
sub
cmpsb
lcall
int
inc
and
adc
or
rorb
popa
std
pop
mov
notl
pusha
pop
mov
testl
mov
cmc
loop
jge
jbe
fs
inc
push
adc
push
jno
or
addl
lahf
addr16
push
ja
xor
xor
daa
lcall
pusha
mov
push
or
and
mov
movsb
xchg
iret
hlt
stos
inc
repz
pop
pop
in
add
or
xchg
call
fbstp
aaa
xchg
add
mov
sub
and
xor
int3
dec
in
repz
jno
hlt
xchg
add
jae
push
out
sti
sbb
push
adc
call
and
sti
xor
mov
in
add
and
int3
popa
ror
orl
mov
fsubl
cmp
loop
popa
mov
dec
jno
pop
stos
out
stos
xchg
scas
out
dec
test
out
aad
fs
popf
ljmp
push
dec
push
popf
adc
inc
outsb
lods
pshufw
imul
lea
mov
test
dec
push
data16
ljmp
inc
push
into
js
shlb
inc
push
push
sub
cmp
push
je
xor
sub
adc
sahf
jae
dec
subb
inc
xchg
out
sub
pop
punpckldq
mov
in
out
andl
mov
aad
arpl
aas
pusha
push
cli
jns
mov
cmp
rcrb
mov
dec
mov
inc
lret
faddl
push
mov
mov
je
testl
bound
xor
and
shlb
ret
pop
loop
xchg
ja
addr16
mov
cmpsl
jb
bound
xor
and
shlb
ret
pop
loop
xchg
ja
addr16
mov
cmpsl
jb
bound
xor
and
shlb
ret
pop
loop
xchg
ja
addr16
mov
cmpsl
jae
bound
mov
mov
lea
loop
in
or
cli
ss
push
mov
jbe
inc
xor
xchg
dec
xchg
imulb
arpl
sbb
popf
ss
push
mov
push
mov
mov
cmp
sub
sbb
es
push
adc
cmpsl
jbe
xchg
inc
sbb
repnz
push
mov
mov
push
xchg
movsl
jns
jns
push
mov
mov
scas
push
ret
les
jl
sub
fimuls
cmpsb
pop
jo
stc
xchg
cmc
sub
pop
sbb
or
xorl
xchg
xchg
pop
outsb
lods
xor
loope
push
sti
call
stos
das
dec
imul
imull
sub
movsl
cmp
and
data16
lret
mov
pushf
sub
sbb
or
in
stc
xchg
push
stc
inc
ja
jae
inc
add
pop
dec
ljmp
out
sbb
sub
jo
incl
inc
jmp
and
rolb
jp
sbb
or
mov
push
leave
push
pop
jbe
cwtd
push
das
inc
mov
xchg
jns
jno
and
sub
or
lods
jg
outsl
sbb
in
sbb
sarb
sub
dec
xchg
inc
xchg
jo
insb
xchg
test
sarb
int3
add
inc
push
into
cmp
pop
divl
jmp
jo
dec
xchg
xchg
jg
jne
jle
arpl
jbe
cwtd
push
mov
mov
cmpsb
pop
xchg
dec
xchg
imulb
out
or
stc
ss
push
mov
push
mov
mov
cmpsb
pop
xchg
dec
xchg
imulb
out
or
stc
ss
outsl
sbb
sub
adcb
lcall
add
scas
inc
repnz
inc
jmp
and
xchg
outsb
mov
cmp
dec
addr16
xchg
loop
aad
inc
mov
jbe
inc
lcall
and
mov
mov
ds
cmpsl
imul
inc
mov
out
lea
ljmp
dec
and
xor
xchg
popf
neg
pop
jecxz
inc
inc
aas
cmpsb
cmp
sub
std
fstl
jns
fcompl
repz
push
inc
es
in
outsb
popf
add
sub
push
cmp
dec
pop
push
fs
stc
inc
lods
mov
in
push
pusha
and
cmpsl
out
rcl
mov
loop
push
lret
mov
jle
out
or
pop
push
xor
xchg
fcmovnu
imul
push
fs
jne
xchg
repz
cmp
mov
pop
adcb
and
xlat
scas
stos
fldt
or
xor
lea
insl
inc
adc
sub
or
mov
pushf
mov
xor
mov
shrb
jg
pop
pop
mov
xor
xchg
sti
jg
cmp
les
daa
push
mov
and
fnsave
out
push
xlat
pop
inc
mov
cmp
xchg
aas
sub
aam
pop
dec
jbe
repnz
and
cmp
pop
pop
adc
lcall
and
jg
int3
xor
add
mov
pop
dec
das
and
add
push
add
xchg
aad
push
ds
js
out
ds
adc
jge
sar
loope
in
and
push
shlb
lret
scas
add
insb
cs
jmp
out
test
and
pushl
sahf
xchg
ljmp
jp
fimull
xor
lcall
or
call
test
sub
jle
or
fsubs
jo
into
rorl
jbe
cli
pop
dec
test
dec
mov
ljmp
mov
adc
shll
ss
stc
loop
fstl
xor
dec
inc
mov
hlt
push
sarl
xor
clc
mov
hlt
rclb
popa
sbb
dec
dec
fcmovnb
mov
jmp
xor
push
aad
in
imul
hlt
sbb
add
adc
mov
stc
mov
sub
xchg
mov
sub
ja
fdivrl
rcll
push
cmp
mov
pop
cs
inc
add
adc
fcoml
xchg
cmp
pushl
pop
ficoms
xor
xchg
repnz
dec
pusha
lret
dec
into
in
push
mov
xchg
xchg
out
mov
cmp
cmp
or
rorl
dec
into
dec
aam
add
mov
xchg
sub
mov
aam
mov
enter
daa
fcmove
add
pop
cwtl
xor
mov
inc
sbb
shrb
aas
gs
cltd
rclb
pusha
lret
cmp
xor
out
sbbl
jnp
mov
sub
scas
xor
scas
xchg
mov
xchg
adc
ljmp
loop
adc
adc
aad
sub
dec
repnz
dec
test
adc
add
push
mov
xchg
push
and
aam
pop
lcall
pop
pusha
push
cmp
mov
out
sub
and
jl
loop
fiadds
shlb
push
in
enter
sbb
dec
leave
jp
pop
pop
xchg
das
hlt
cmp
insb
xlat
push
mov
mov
ret
cli
inc
or
or
pop
dec
fxch
repnz
sbb
dec
xchg
xchg
pop
pop
ficompl
sbb
iret
dec
xchg
push
mov
sub
mov
imul
mov
jg
xchg
out
mov
int
call
push
mov
int
push
sbb
xchg
jg
out
jno
adc
jb
test
into
or
xlat
dec
inc
add
stos
mov
add
ja,pn
lret
mov
xchg
aam
xchg
cli
xor
or
cmp
arpl
das
sbb
fwait
call
adc
mov
pusha
pop
xchg
pushf
cmpsl
push
lock
mov
sub
mov
outsb
lret
jnp
sub
loope
mov
mov
mov
push
lret
cld
jle
hlt
out
or
inc
or
loop
fldcw
sbb
dec
decl
insb
ret
or
sbb
cmp
pop
fstl
data16
fiadds
dec
sbb
lret
sbb
testb
pop
idivl
aad
mov
dec
data16
push
jo
xchg
xchg
cwtl
jg
fists
push
xor
and
insl
out
xchg
lds
pusha
lea
dec
mov
dec
bound
adc
mov
adc
cltd
in
adc
subl
xor
scas
mov
and
jae
lods
add
adc
into
fidivs
nop
std
insl
lcall
jp
incb
fimuls
rorb
push
out
pop
in
fidivs
sub
jmp
in
xchg
cmpsb
out
xchg
repnz
xchg
fsubrs
cmp
mov
lahf
arpl
mov
pushf
xchg
sub
cwtl
pop
imul
fsts
mov
js
inc
mov
cmp
aas
shl
xlat
xor
mov
cmc
mov
clc
sbb
sahf
mov
sub
lret
aaa
scas
aam
xchg
or
jp
inc
push
out
sahf
inc
iret
push
xchg
sbb
movsl
in
cmpsb
bound
stc
stos
cmp
push
adc
or
jg
and
cwtl
sbb
mov
rclb
inc
sbb
mov
xorl
in
and
jg
jle
hlt
out
dec
repz
lcall
pop
add
scas
mov
cmp
adc
out
enter
xchg
push
dec
jmp
in
push
add
bound
cmc
and
mov
sahf
mov
push
jp,pt
mov
inc
cmp
cs
inc
adc
test
cs
mov
jns
aaa
je
sbb
adc
mov
je
stos
xchg
jmp
dec
mov
dec
out
in
test
popf
push
sbb
push
lcall
add
out
je
sbb
or
mov
in
cmpsl
inc
sub
ljmp
or
xchg
movsb
mov
inc
scas
imul
pop
loope
mov
shlb
lods
mov
pop
imul
cmp
in
ds
daa
xlat
and
sub
bound
mov
xor
sub
push
sub
dec
sub
cmp
js
xchg
shl
adc
dec
mov
ds
ret
jne
or
aaa
and
aad
xchg
out
test
push
ss
fidivs
test
adc
or
xor
adc
ljmp
sti
popf
popf
sti
loopne
jo
sub
jmp
adc
xchg
xchg
sbb
or
push
jmp
adcb
sbb
lea
pop
clc
inc
add
fwait
add
shlb
js
dec
mov
inc
mov
test
sbb
cmc
lret
mov
cmpsb
jnp
sub
ss
rcll
sub
lods
add
adc
cmpl
jmp
xor
mov
cmp
addl
les
andb
or
pop
or
push
outsb
bound
mov
add
out
in
xchg
mov
xchg
or
add
loop
add
stc
loop
and
jnp
push
mov
mov
and
inc
test
loop
jo
in
lods
or
adc
aam
cli
jns
xor
mov
scas
and
pop
ljmp
pop
add
outsl
jnp
adc
insb
push
mov
pop
aam
xor
adc
adc
les
fdivl
lods
int3
jmp
xorl
push
loop
cmp
push
shll
pop
pop
out
adc
sbb
add
cmp
cmc
repnz
outsl
xchg
rcr
jo
pushf
outsl
into
adc
imul
xchg
sbb
mov
call
xchg
rcll
xor
jg
mov
adc
mov
jbe
fsubp
sti
out
or
mov
and
xchg
data16
mov
leave
or
adc
fcom
out
ja
add
pop
daa
lods
mov
nop
pop
push
adc
fildl
sbb
cmpsb
sub
xchg
gs
pop
leave
loop
xchg
sub
jecxz
or
faddp
adc
cmp
mov
dec
mov
icebp
pop
inc
xorb
add
pop
jo
xlat
ficompl
cmp
mov
imul
std
push
arpl
jg
xchg
xlat
dec
fs
jb
adc
dec
push
pop
xchg
adc
dec
mov
popf
push
push
dec
xchg
cmpsl
les
cmc
test
or
cmp
pop
frstor
cmpsb
mov
insl
pop
and
das
xchg
mov
repnz
test
subl
push
cmp
inc
xchg
aam
jnp
sub
add
xchg
add
packssdw
jo
jmp
ss
cmp
aam
cwtl
mov
fnsave
pusha
xchg
fbld
dec
mov
pop
fsubrl
xchg
in
inc
cmc
std
pop
insb
mov
gs
clc
outsl
rcrb
pop
pop
mov
ds
lcall
jecxz
mov
cmp
jo
fdivr
mov
movsl
mov
cmpsl
pop
or
sbb
imul
or
testb
adc
push
inc
stos
pop
pop
dec
lcall
cmpb
les
mov
mov
sub
jns
add
bound
fistpl
push
lods
inc
jnp
inc
lcall
arpl
dec
sub
mov
int
dec
jno
pop
pop
push
xchg
xchg
js
cmp
js
jns
into
adc
imul
pop
loope
int3
iret
dec
push
std
push
imul
mov
sub
hlt
or
mov
das
cmpsb
add
push
mov
mov
lret
and
pusha
fsubrp
mov
popa
nop
xchg
xchg
push
or
push
in
inc
push
mov
push
orl
out
in
subb
mov
mov
sbb
mov
jle
insl
sarb
out
sub
pushf
pop
add
sbb
lock
out
inc
push
mov
int3
adc
test
scas
test
aam
and
dec
pusha
push
jae
sahf
or
and
sbb
xor
xor
imul
push
enter
mov
pop
mov
cmp
inc
in
adc
test
aas
xor
out
imul
pop
into
jnp
xchg
addl
or
adc
sbbl
es
sbb
jmp
pop
pop
pop
dec
arpl
cmp
jg
rcr
lcall
test
lret
xor
loopne
test
filds
add
mov
cvtps2pd
ret
adc
fstpt
aaa
ss
jno
add
push
fcoms
xchg
or
cmp
xlat
xor
movsl
fcomip
pop
jb
mov
pop
cmc
push
adc
mov
push
lret
mov
clc
mov
les
dec
es
mov
lock
push
cmp
int3
mov
xchg
es
add
sub
icebp
push
and
pop
mov
and
ror
or
add
imul
subb
loope
mov
mov
pop
movsb
push
xchg
dec
into
sbb
cmp
data16
and
hlt
xor
je
ss
sbbl
stc
cmp
push
mov
mov
clc
lods
repnz
incb
es
dec
pop
adc
lea
loope
mov
and
inc
pop
push
sbb
xlat
nop
sahf
dec
jp
out
leave
mov
nop
inc
das
aaa
fs
cmc
jecxz
rcrl
xor
ret
add
pushf
jp
push
and
outsb
andb
adc
xlat
in
pop
bnd
sti
xchg
jnp
inc
mov
push
xor
pop
mov
shl
popa
jmp
das
jae
sbb
cmp
and
mov
loope
nop
dec
in
xchg
add
adc
popf
cwtl
sbb
push
nop
movsb
adc
adcb
ret
xchg
xor
inc
fmuls
sbb
push
add
add
shll
mov
fbld
jge
pop
sbb
fstp
dec
idiv
mov
rcrl
pop
dec
cltd
sbb
hlt
fidivl
and
daa
sti
lea
adc
repnz
jg
cmc
aam
xchg
into
add
pop
ja
or
inc
outsb
cs
ss
enter
xchg
fdivrl
or
je
hlt
inc
jns
data16
ljmp
and
lret
shrl
adc
aaa
push
push
cmp
inc
cmpsb
xchg
gs
testb
inc
cmp
das
jl
xor
enter
adc
lret
imul
test
movsb
mov
jae
or
shll
jae
rol
pop
jp
adc
inc
ret
mov
sbb
iret
jl
add
js
es
in
icebp
mov
sub
imul
sbb
sbb
cmpsb
std
or
xchg
ljmp
loop
lret
in
ja
mov
jno
cltd
mov
and
into
mov
cmp
xchg
cmp
shl
mov
push
adc
mov
push
xchg
enter
push
and
jno
es
lods
inc
mov
shr
mov
imul
xor
imul
mov
push
mov
dec
int3
jb
xchg
hlt
mov
mov
ficoms
outsl
test
out
hlt
cmp
out
mov
xchg
out
fcoml
dec
movsl
loop
in
shll
lods
sbb
push
sub
sbb
scas
ret
inc
jl
mov
push
push
test
pop
iret
cld
push
imul
in
jge
dec
in
mov
inc
ljmp
repnz
dec
pop
mov
jmp
jmp
rclb
pop
outsb
jmp
push
enter
xor
aaa
inc
push
sbbb
mov
pop
out
ss
sub
mov
jne
mov
int
mov
daa
ficoml
pop
xchg
int3
pop
inc
cld
jle
sbb
jp
insb
push
jns
shlb
pop
pop
mov
testl
sbb
sub
out
push
mov
cmp
or
xchg
inc
insl
out
fldl
pop
cmpsl
aaa
pop
loopne
lahf
cmp
dec
jb
xchg
cli
idivb
dec
mov
inc
in
pushf
pop
cmpsl
frstor
inc
sbb
pusha
adc
xchg
or
pop
jne
jae
jb
adc
adc
and
mov
int
enter
or
out
mov
sbb
pushf
push
sbb
int
adc
mov
dec
jp
push
out
loop
sbb
int3
and
ret
jae
inc
push
pop
fistl
repz
dec
hlt
mov
mov
pop
pop
add
les
adc
repz
out
movsb
movsl
cltd
and
call
jecxz
xchg
shr
pushf
loopne
dec
out
push
ror
adc
cmp
decl
inc
int
or
xchg
je
adc
leave
mov
stos
cmp
push
movsb
push
jno
leave
out
cli
mov
mov
sub
sub
dec
push
lods
sbb
sbb
arpl
arpl
mov
sbb
mov
mov
push
xor
jecxz
mov
add
sahf
cmp
es
daa
mov
repnz
xchg
dec
js
jb
xchg
lods
leave
cmp
xchg
adc
repz
inc
push
cmpb
test
adc
icebp
xchg
pop
imul
fdivrl
inc
outsb
xor
out
imul
decl
cmp
push
xor
cmp
aas
mov
dec
ret
call
push
notl
in
mov
arpl
sbb
out
imul
jle
pusha
add
popf
outsl
dec
pop
popa
pushf
inc
pop
stos
mov
arpl
add
sbb
mov
adc
aas
inc
lods
ja
jne
pop
je
sbb
ds
cmp
cmp
xor
insl
mov
sbb
dec
enter
lret
sbb
push
add
loop
aaa
jl
mov
add
jp
adc
mov
cmp
cmc
dec
inc
sub
pop
xchg
outsb
arpl
push
mov
sub
bound
sbb
pusha
aam
and
pop
movsl
mov
xor
cmp
jg
cmp
aam
orl
ret
outsl
out
mov
out
cwtl
rcrb
mov
xchg
xchg
sub
adc
lods
dec
dec
xor
lcall
add
inc
nop
and
or
adc
sub
cmp
sbb
xchg
lods
roll
sahf
sbb
xor
bound
cmp
or
jbe
imul
mov
cmp
and
daa
dec
out
pop
pushf
push
mov
outsl
dec
mov
movsb
or
sub
pusha
push
xor
add
lret
insl
sbb
pop
jne
mov
add
decb
in
bound
andb
fldcw
repz
aad
dec
call
sbb
cmp
push
fsub
outsl
mov
into
mov
es
js
aad
mov
mov
adc
scas
outsl
mov
mov
iret
mov
and
jb
out
js
hlt
mov
movsb
mov
movsb
stc
fimuls
addr16
xsaveopt
sbb
pop
xchg
adc
daa
sahf
pop
xlat
sbb
shll
cld
fsubrl
call
pop
test
pop
add
xor
popa
xchg
cmp
and
lret
insl
pop
push
shl
or
mov
and
ret
stos
movsb
lret
iret
insb
pop
jle
ficompl
std
pop
inc
dec
pop
sub
add
jnp
jp
mov
mov
dec
mov
je
pushl
push
cmc
mov
push
jmp
sbb
shlb
adc
in
inc
jno
pushf
in
inc
cli
cld
testl
adc
pop
adc
mov
adc
sbb
shll
test
add
arpl
int
xor
push
int
jae
enter
and
xor
sub
inc
xor
or
test
es
cmp
nop
int
aaa
out
nop
test
test
iret
ds
repnz
rorb
cmpsb
daa
inc
dec
adc
mov
aam
jmp
mov
ret
push
popa
xlat
or
pop
mov
inc
mov
xchg
push
jp
mov
das
or
daa
push
mov
and
cmp
in
mov
fbstp
pop
sub
fsubl
push
mov
pushf
lds
push
adcb
aam
cmp
push
repz
push
imul
ret
lcall
cld
das
jbe,pn
filds
jmp
loope
mov
shr
inc
mov
addl
dec
mov
fldl2t
lods
sbb
lock
inc
mov
push
btr
inc
imul
fs
cmpsl
jno
lock
movsl
in
jb
push
subb
jg
cmp
pop
jmp
or
push
add
and
push
pushf
pop
xchg
int3
sbb
inc
cli
push
adc
repz
xor
sbb
fildll
scas
fwait
push
mov
xchg
int
gs
or
push
sub
jg
and
cwtl
aas
ffreep
and
or
int3
and
fcoms
fldcw
cli
and
test
fwait
push
fcmovu
sub
sub
sysexit
dec
loope
sti
jae
nop
scas
inc
mov
mov
loopne
sub
xchg
dec
mov
popf
jns
sub
div
aam
in
call
mov
fwait
inc
mov
pushf
cmpsl
sub
add
push
shlb
inc
xchg
pop
pop
fiaddl
inc
jge,pt
stos
dec
cltd
dec
adc
sbb
pop
in
mov
rcrl
fmuls
dec
cmp
push
add
popf
test
cs
jnp
jecxz
push
push
and
cli
xchg
dec
pop
test
mov
popf
or
mov
push
add
mov
jnp
insl
cmpsl
ja
pop
fnsave
jb
hlt
and
sbb
dec
inc
push
out
jo
cmp
in
adc
mov
xchg
sbb
adc
mov
daa
loop
push
adc
xchg
jnp
fidivl
cs
imul
push
xchg
jns
mov
cmp
pusha
subb
add
cmpsl
sahf
sbb
leave
cli
insb
adc
dec
out
orl
and
sbb
sbb
fs
pusha
cld
mov
ret
shll
push
ds
shlb
jb
insb
push
xor
fsubr
mov
leave
jnp
and
mov
or
pop
test
mov
push
mov
push
mov
mov
cmpsb
pop
xchg
dec
xchg
imulb
out
or
stc
ss
push
mov
push
mov
mov
cmpsb
pop
xchg
dec
xchg
imulb
out
or
stc
fldenv
sub
out
push
dec
inc
jns
imul
sbb
loope
in
ss
adcl
push
mov
push
or
mov
or
xchg
dec
icebp
dec
jle
sbb
sub
cmp
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
fwait
mov
mov
aas
lods
cli
mov
out
sbb
push
cmp
addr16
pop
dec
cwtl
jnp
imul
mov
mov
xchg
xchg
cmpsl
jmp
sbb
push
cmp
ja
jne
adc
fimuls
out
fistpl
jmp
sbb
je
push
dec
add
cmp
push
add
mov
cmpsl
mov
dec
pushf
push
adc
rcrl
sub
inc
pushf
xchg
fsubrs
ja
je
inc
out
push
cmpsl
fcomi
lret
fs
pop
add
mov
aam
or
dec
dec
sub
pop
loope
rcl
loop
mov
mov
movsl
inc
push
push
sub
shrb
cltd
lods
sub
lods
movsb
mov
xor
mov
cmpsl
xchg
or
dec
xchg
sbb
daa
enter
sbb
and
jmp
pop
scas
pusha
fistps
mov
mov
pop
test
cmpsl
cmp
sbbl
inc
xor
sti
out
das
dec
cmp
mov
and
mov
mov
xchg
xchg
sti
cmpsl
jmp
sbb
dec
cmp
outsb
pop
pop
dec
cmp
call
xchg
mov
lret
outsl
shrb
outsb
push
dec
arpl
frstor
adc
in
scas
mov
mov
shrl
xor
sub
ja
pop
adc
inc
cld
mov
std
or
sahf
mov
xchg
sti
cmpsl
jmp
sbb
push
cmp
ja
pop
dec
pop
jnp
imul
mov
mov
xchg
xchg
sti
cmpsl
jmp
sbb
push
cmp
ja
pop
dec
pop
jnp
imul
ljmp
or
or
stos
add
inc
and
jp
inc
push
loop
loop
dec
test
ja
sbb
or
adc
xor
adc
add
dec
and
cli
bound
jae
dec
lcall
mov
or
pop
aam
int3
push
and
cmp
and
xor
lcall
mov
aam
test
or
mov
or
je
inc
dec
imull
out
std
mov
stos
mov
pop
push
loopne
fyl2xp1
xchg
fdivl
inc
test
jns
cld
cmp
xchg
outsb
mov
aad
rcll
xchg
inc
push
mov
jl
pusha
sbb
jp
xlat
inc
mov
dec
cmp
test
lock
push
lock
jmp
stos
sub
xchg
inc
or
ret
neg
jbe
push
je
test
pop
daa
in
call
filds
fstpl
mov
adcl
pop
xor
mov
jbe
push
push
sbb
cwtl
sar
jae
sbb
and
pop
xlat
sbb
es
lcall
or
ret
jmp
filds
mov
dec
sub
in
lahf
sbbb
in
stos
mov
les
sub
mov
add
push
mov
inc
push
je
push
popf
mov
push
ja
add
ss
enter
icebp
jg
pop
inc
aas
mov
repnz
pslld
imul
add
shlb
add
dec
inc
addl
push
stos
sbbb
gs
adc
adc
lods
xchg
jp
push
ljmp
push
lret
mov
in
add
ret
test
sbb
xchg
or
lods
imul
push
leave
xor
subb
pop
cmp
scas
outsl
xor
cmp
pop
data16
sar
sbb
xchg
inc
jmp
out
in
test
mov
jno
mov
into
push
xchg
sbbl
ror
mov
add
jge
dec
pusha
cmp
xchg
rcll
leave
mov
divl
mov
push
jl
adcl
pop
jae
rolb
cmp
jmp
loope
int
push
lcall
loope
add
lea
fs
sahf
lahf
dec
cs
or
mov
jbe
ss
lds
out
mov
jnp
movsb
sahf
xor
xchg
cld
sbb
dec
jb
int3
add
lds
jno
insb
mov
cmp
popa
ljmp
in
mov
ss
outsl
orl
jle
inc
stos
fldenv
imul
shlb
scas
push
in
aam
cmc
rorl
mov
jae
inc
fwait
popa
and
popa
les
push
jns
js
popf
repnz
dec
and
pop
cmp
int3
loop
sbb
lahf
inc
in
aad
pop
sbb
icebp
add
mov
jg
mov
mov
repz
sbb
push
cs
push
div
push
enter
insb
repnz
pop
mov
xor
inc
xchg
mov
jbe
sub
cmpsb
and
cld
jo
stc
loopne
jmp
lahf
mov
test
add
in
std
jle
xor
jle
xchg
pop
cmp
and
daa
loop
imul
mov
fstps
cmp
xorl
out
sbb
sbb
incb
cmpsl
inc
and
xor
cmp
mov
cs
and
xchg
pop
mov
cmp
fcom
dec
ret
fwait
add
xor
ffreep
icebp
sub
jns
es
outsb
hlt
pop
jo
xchg
cli
lea
pusha
rcrb
push
sahf
aas
pushl
sub
cmc
aaa
mov
cli
sub
jo
into
xor
fucompp
add
sub
jl
push
sbb
js
repz
or
add
mov
cmpsb
add
pop
in
cmp
jb
int
mov
iret
test
fstpt
xor
jns
daa
jb
leave
pop
test
clc
add
adc
xor
mov
cmp
adc
testl
xchg
sarb
mov
dec
imulb
sbb
jae
pop
push
lcall
inc
mull
push
gs
and
jne
mov
xor
sahf
mov
or
shl
push
xchg
pop
xor
in
out
push
in
clc
and
dec
xor
dec
xchg
sbb
pop
and
in
popf
aam
jne
xchg
loop
addr16
push
cmp
pop
mov
lahf
in
mov
jge
push
adc
lcall
mov
xor
ljmp
jnp
jge
scas
or
add
stos
fistpll
mov
or
mov
push
xchg
sbb
dec
pushf
xchg
mov
or
std
mov
xchg
faddl
out
imul
cli
test
in
mov
mov
test
mov
inc
xchg
aad
clc
call
dec
and
and
popa
xchg
adc
sbb
pop
les
mov
adc
ds
pop
aas
out
lcallw
sub
movsl
or
dec
enter
jl
adc
mov
inc
fstl
cmpsb
and
inc
cltd
sti
pop
scas
pop
arpl
cmp
fisubrs
mov
rorl
mov
cmp
movsl
jo
arpl
jp
jl
fiaddl
ljmp
xchg
mov
jge
mov
jp
sarl
mov
pop
dec
not
stos
and
jp
xchg
pop
lds
jne
lahf
and
jno
push
xchg
in
cmp
std
push
fcmovnbe
mov
jno
popa
sbb
and
mov
mov
notb
jne
cld
mov
adc
sub
inc
int3
aam
mov
aaa
inc
fidivrs
push
leave
clc
mov
aad
popf
add
outsb
movsl
sbb
div
cmpsb
loopne
and
add
pop
mov
sub
out
in
aad
jg
iret
jl
sahf
shll
dec
mov
icebp
push
xor
imul
aad
cmpsl
sbb
add
fpatan
mov
mov
fmuls
mov
gs
test
dec
xchg
xor
fdivl
inc
mov
pop
pop
xchg
scas
shl
mov
sbb
xchg
cmpb
repnz
and
mov
subl
das
rcll
cmpsb
mov
gs
adc
adcb
pop
dec
shl
sbb
jne
adc
div
xchg
shlb
sahf
jo
jno
enter
sbb
inc
adc
andl
xchg
ret
sbb
mov
hlt
cmp
pop
rol
push
jno
std
shl
and
lahf
scas
sbb
pop
fxch
mov
and
push
lods
aad
adc
adc
mov
sub
jmp
fnstcw
lea
adc
and
fwait
jl
add
lods
sbb
pushf
cmp
jecxz
cmp
std
and
xor
sub
ficoml
inc
lret
das
pop
mov
and
fdivrl
xchg
icebp
cmc
push
lds
sti
call
adc
cmp
inc
and
mov
movsl
ret
dec
sahf
cmp
out
mov
scas
dec
movsb
lods
loopne
lret
mov
xchg
xchg
shlb
mov
ret
adcl
and
in
push
jge
shlb
lods
cs
jmp
js
sub
xchg
xchg
and
inc
and
loope
cwtl
cld
sub
and
adc
push
imul
add
out
into
inc
mov
jno
add
mov
sti
shlb
pop
jno
mov
lea
dec
dec
fwait
ret
cmc
push
stos
mov
xor
fnstcw
mov
mov
push
outsb
jno
aam
pop
loope
xor
std
mov
xchg
dec
and
fwait
enter
adc
outsl
iret
mov
lock
rcll
pop
jnp
or
jmp
rclb
imul
int
jns
fbld
inc
mov
adc
inc
shrb
lock
bound
add
shll
sub
enter
and
sar
enter
cmp
fs
sbb
rcrl
xor
xor
loope
push
jecxz
inc
sbb
cmp
jecxz
arpl
push
mov
mov
out
mov
cs
aas
cmc
test
dec
add
cmp
mov
in
xchg
push
lds
fisttpll
mov
dec
cmp
pop
add
out
outsb
mov
loope
xchg
pop
mov
mov
setae
xor
fcoml
push
pusha
popf
push
mov
or
int
repz
jne
mov
clc
and
cltd
cmpxchg
mov
mov
test
ja
int
js
test
add
std
jg
lods
pop
add
mov
fwait
push
cmp
cmp
shll
es
stos
dec
jnp
cmp
or
or
adcl
mov
xor
add
in
xor
and
data16
data16
xchg
sub
std
jmp
stc
mov
push
adc
pop
adc
sub
test
xor
rol
adc
les
jne
jnp
mov
pop
push
sbb
mov
negb
subl
fsubrs
cmp
pop
or
push
push
push
lahf
adc
adc
scas
int
pusha
fimull
scas
inc
cmpsl
lret
add
scas
mov
push
pop
or
xor
ret
scas
jp,pt
jmp
into
cmp
repz
pmulhw
cli
aaa
push
sbbb
enter
popf
adc
loope
and
adc
mov
dec
mov
jle
lret
xchg
mov
xor
inc
and
push
push
mov
jecxz
mov
mov
aas
inc
cmp
imul
xchg
test
scas
sub
sbb
js
mov
adc
testb
add
xor
in
cmp
clc
push
sub
xor
mov
jmp
aaa
lea
or
dec
movsb
adc
jbe
xchg
inc
gs
or
xor
mov
je
adc
loop
rorl
enter
jb
jae
loop
mov
rorl
xor
out
sub
add
xchg
sub
or
aam
adc
rdmsr
cmp
repnz
fildl
dec
xor
gs
push
xor
pop
push
pop
insb
add
dec
int
mov
jb
fadds
int
ss
js
gs
in
pop
shlb
lock
fstl
inc
mov
mov
cld
add
jno
add
dec
aad
pop
hlt
add
fistpll
add
leave
sub
int
lea
jl
jne
xchg
dec
xchg
and
xchg
cmp
jns
daa
push
mov
cwtl
aaa
add
cld
imul
mov
cmpsb
push
dec
loop
out
aad
fcmovbe
sub
insb
cmp
push
aas
in
xchg
lahf
inc
sub
cmp
xchg
push
decb
mov
idiv
and
xlat
xor
std
shlb
int
test
shlb
leave
add
shrl
sbb
notl
jl
decb
xor
outsb
mov
jae
das
aas
xor
lock
nop
mov
es
mov
outsl
iret
int3
out
rcl
ret
push
dec
out
cmp
mov
orl
icebp
fcoml
js
sahf
xor
ljmp
cmp
xchg
test
pop
inc
ret
aas
cmp
clc
pop
dec
fbld
imulb
stos
fsts
adc
ss
mov
jnp
push
xchg
add
fs
roll
scas
dec
mov
xchg
iret
pop
mov
out
sub
add
mov
leave
sbb
cmp
xchg
jecxz
ja
mov
pop
or
push
clc
pop
jl
flds
addr16
add
aas
ret
mov
nop
add
aam
loop
out
sarl
cmp
mov
mov
inc
adc
loopne
sbb
sbb
gs
lods
or
mov
inc
sub
imull
in
negl
xlat
xor
jp
xchg
mov
fsubr
add
out
sub
inc
sub
pusha
movsl
dec
sub
cmpsb
jo
jnp
mov
dec
insb
mov
sbb
outsl
mov
jnp
mov
cli
and
int3
mov
xchg
stc
mov
mov
dec
lds
pop
test
jo
mov
loop
imul
push
and
outsl
sbb
sbb
mov
jg
xchg
sti
lods
xchg
inc
and
mov
fwait
mov
pop
push
out
daa
imul
aaa
sbb
out
iret
push
push
sub
loop
shlb
mov
rcrl
sahf
jo
xchg
cli
adc
jae
inc
dec
test
add
xchg
les
xor
mov
and
push
out
xchg
push
mov
xor
je
or
jl
sti
adc
fs
xor
and
push
push
nop
xchg
sahf
fnstsw
pop
pop
nop
jmp
and
pop
lods
adc
je
dec
or
cmpsl
xor
insb
icebp
xchg
dec
lret
mov
rol
lods
jp
inc
mov
imul
xchg
cmpsb
aam
fwait
int
lods
mov
lret
push
mov
and
push
insb
xlat
push
push
in
pop
mov
xchg
vmulss
cmpl
mov
pop
inc
pop
stos
mov
xchg
cwtl
repnz
stos
out
or
mov
fisttpl
pop
inc
and
rcll
sub
repz
jmp
dec
add
push
pmulhuw
push
cmp
fldt
inc
xchg
loopne
pop
jne
or
and
sub
add
dec
lock
add
addl
inc
loopne
jle
rclb
lahf
xchg
push
out
mov
cli
repnz
mov
data16
aad
fildl
mov
out
pop
gs
fnstsw
push
jns
sbb
push
mov
mov
into
or
les
shlb
scas
inc
mov
mov
pop
daa
push
jg
pminub
inc
xchg
aas
adc
cmp
dec
cmp
add
call
mov
xor
xchg
inc
lods
mov
lahf
loope
mov
fwait
mov
sbb
and
ljmp
aad
mov
mov
pop
fsubrs
fcmovnbe
xchg
movsl
imul
sbb
jle
dec
mov
ret
jo
and
int3
imul
xchg
xorl
push
and
push
fldcw
fwait
mov
push
mov
dec
ljmp
fnstenv
lds
push
pop
adcl
cmp
push
sub
mov
jl
sbb
ret
in
adc
push
jp
popf
bound
pop
fdivl
inc
fildll
add
sbb
das
and
mov
inc
mov
lods
nop
xor
and
dec
in
adc
stc
repz
jp
jb
jl
mov
xor
add
stos
push
cld
mov
inc
jl
cwtl
testl
mov
adc
lods
jmp
jmp
popa
pop
lret
enter
incb
mov
add
fisttpll
mov
mov
mov
mov
es
push
add
mov
mov
fistpl
daa
mov
testl
fists
sub
jb
hlt
xchg
jmp
adc
cld
push
xchg
pop
mov
ss
mov
insl
sub
xchg
mov
lods
sub
mov
mov
jl
fisubs
mov
insl
sbb
scas
ljmp
jnp
sub
xor
jp
lret
cwtl
jbe
lret
cmc
aad
sub
xchg
sahf
and
sub
jnp
xchg
imulb
mov
decb
sub
mov
fadds
sub
push
test
mov
and
cmp
or
loope
test
mov
push
fs
lods
jo
das
push
outsb
xchg
push
les
push
in
jmp
pop
ficomps
sub
out
shll
mov
xor
fcos
xlat
rcrb
mov
sub
sarb
sub
outsl
xor
iret
iret
xchg
adc
push
xchg
ficomps
arpl
sarb
cs
scas
inc
mov
pusha
or
push
jnp
push
push
mov
popa
push
bound
jae
jp
mov
adcl
xchg
stos
jno
add
out
push
gs
repnz
js
inc
iret
imul
jb
pop
xor
push
loop
ja
in
mov
rcrb
xchg
and
aad
fadds
cmpsb
push
push
xor
js
add
mov
sub
xchg
test
push
jp
mov
jmp
cmp
lods
outsb
pusha
int3
rorb
lahf
fstl
mov
adc
or
mov
adc
jae
jne
sub
or
push
and
ss
cmp
push
or
mov
mov
xchg
aaa
pop
outsb
repnz
pop
loopne
jno
mov
mov
mov
ss
mov
repnz
sub
pop
push
shr
mov
movsb
js
popa
pop
dec
cmp
andl
repz
insl
into
ljmp
pop
hlt
cmp
jmp
or
or
insl
mov
into
pop
push
mov
dec
sub
mov
pushf
daa
ret
fldenv
jmp
es
xor
jmp
adc
out
lcall
aaa
lea
and
push
inc
sbb
rcr
test
rcll
lahf
test
cli
xchg
cmp
jno
shrl
fwait
mov
sbb
fisubrs
push
lock
into
outsb
xor
mov
jge,pt
sahf
cmpsb
cli
pushl
mov
outsb
aad
add
enter
pop
or
int
std
clc
testl
and
aad
scas
mov
xchg
mov
push
adc
mov
pop
mov
push
aas
ljmp
lock
xchg
int
sub
fdiv
and
push
scas
test
jae
lods
pop
mov
jge
sub
push
push
rolb
stc
sbb
dec
push
mov
mov
sbb
clc
and
scas
mov
mov
icebp
mov
add
cmp
xlat
jg
popa
pop
push
cmp
jnp
or
aam
icebp
and
in
xchg
in
xor
movq
test
fldt
xor
ljmp
fcmove
mov
fwait
adc
push
fnsave
xchg
add
add
fdivrp
dec
ljmp
insb
mov
sbbl
xor
pop
push
mov
or
and
cmp
jecxz
lcall
adc
fistl
sbb
outsl
and
mov
fsts
test
in
mov
in
stc
lcall
xchg
jmp
mov
jp
lods
call
mov
mov
cld
inc
or
mov
pop
js
adc
inc
int
dec
test
push
lcall
xor
and
out
jne
popa
and
ljmp
shll
shrl
mov
pop
rorl
les
push
xor
jecxz
cmp
in
jns
cmp
lret
ret
in
pop
dec
xchg
aam
lahf
push
push
pusha
jae
aas
xor
push
jecxz
xor
clc
mov
sub
or
inc
dec
lock
addr16
clc
je
loope
mov
mov
and
popa
inc
push
movsb
aam
xchg
or
inc
ret
mov
bound
mov
inc
lods
jle
jecxz
push
jb
fcoms
and
lret
pop
mov
lret
int
lret
push
push
mov
sbb
aaa
inc
pop
sbb
lea
pop
call
aad
pusha
mov
fidivrs
mov
inc
sbb
mov
xor
lret
pop
push
jb
add
mov
mov
sbb
pop
pop
mov
clc
pop
xchg
sbb
xor
add
imul
roll
sti
jp
fptan
jmp
loope
sub
adc
mov
mov
shlb
dec
mov
mov
rclb
pop
jne
mov
jbe
fidivl
in
dec
inc
in
das
push
ljmp
mov
xchg
fstpl
sbb
shll
movsb
es
mov
jp
or
jl
push
mov
adc
or
mov
das
jl
sarb
sub
push
lret
jbe
movsb
mov
dec
mov
loope
aas
call
inc
lcall
cmpl
ljmp
scas
scas
sbb
iret
dec
add
cmovne
sbb
sbb
filds
dec
aam
inc
inc
push
push
int
push
xchg
movsl
mov
mov
and
mov
lahf
mov
test
add
xchg
jae
aas
xlat
cli
jne
fcoml
and
ljmp
int3
dec
lea
stos
sbb
dec
repz
and
mov
pop
test
dec
push
push
aas
push
ja
sbb
xlat
test
stos
neg
xchg
xchg
sti
cmpsl
jmp
sbb
push
cmp
ja
pop
dec
pop
jnp
imul
mov
mov
xchg
xchg
sti
cmpsl
jmp
sbb
push
cmp
ja
pop
dec
pop
jnp
imul
mov
mov
xchg
xchg
sti
cmpsl
jmp
sbb
push
cmp
jae
pop
dec
pop
jp
imul
ret
mov
mov
xchg
xchg
jnp
imul
hlt
std
xchg
sub
sub
ret
push
xlat
in
cmc
testl
mov
push
gs
add
daa
xor
xlat
in
cmc
testl
inc
push
push
gs
lds
pop
and
aad
in
cmc
testl
inc
jbe
or
jp
push
dec
pop
inc
lcall
testl
cmp
movsb
lcall
inc
push
pop
je
xor
xchg
pop
pop
mov
xchg
mov
lcall
fidivs
mov
lea
pop
cs
jmp
inc
adc
fisubl
mov
push
adc
inc
mov
aad
iret
cmc
mov
and
mov
enter
fwait
jecxz
xchg
cli
pop
push
jmp
cmp
or
setne
es
xchg
lods
mov
or
push
ljmp
inc
sub
idivl
inc
xchg
sub
movsl
add
lahf
pop
bound
cwtl
inc
pusha
daa
mov
or
aad
in
cmc
testl
inc
push
push
gs
add
daa
xor
xchg
mov
pushf
testl
xor
add
jb
pop
jae
mov
sbbb
out
and
cs
adc
jnp
dec
jno
pop
mov
xchg
cltd
xchg
leave
test
mov
inc
inc
push
push
gs
add
daa
xor
xlat
in
cmc
testl
inc
push
push
gs
add
daa
xor
mov
jnp
xchg
js
sub
xor
dec
adc
popf
ds
fiaddl
sar
aam
cwtl
cmovo
jmp
out
push
ss
xlat
je
gs
sbb
cmp
xchg
stos
repz
std
popa
sti
clc
pop
lahf
jmp
call
mov
jb
mov
icebp
rcrl
jo
out
mov
hlt
js
insl
and
fwait
and
xchg
xor
mov
int
mov
pusha
js
add
push
nop
cmp
leave
cmpsb
lret
mov
xchg
mov
enter
lds
mov
cmc
and
push
adc
mov
xchg
push
mov
mov
inc
pop
add
aam
sbbb
movl
loopne
loopne
jo
and
cmp
jmp
adc
outsb
push
adc
inc
mov
dec
add
aas
mov
sub
fstp
fistpl
out
mov
cli
xor
mov
add
xlat
andl
pop
stc
xchg
fcomip
icebp
adc
sbb
das
mov
mov
adc
test
mov
shrl
in
sbb
clc
fiaddl
bound
in
inc
xor
adc
jg
adc
adcl
inc
cmp
repnz
pop
add
movsb
jge
push
dec
leave
lahf
sub
cld
sbb
cmp
pusha
in
mov
push
xor
push
mov
scas
les
fistl
mov
cmp
add
imul
mov
mov
inc
repnz
pop
fdivrs
dec
and
mov
ficoms
outsl
sub
stc
sub
jae
pop
addr16
movsb
insb
cli
xor
lock
xchg
pop
iret
das
shrl
lods
scas
pextrw
and
mov
sbb
insb
push
sbb
out
movb
shrb
cmp
jmp
hlt
add
cld
out
sub
imul
sub
jmp
andl
aad
push
in
in
inc
jle
sbb
fstps
fdivp
cmpsb
dec
mov
mov
loope
arpl
xor
pop
imul
xchg
aas
lcall
imulb
inc
cmp
pop
adc
std
outsl
cmc
out
testl
push
loope
outsb
pop
stos
xchg
adc
test
int
sti
add
sbb
fwait
mov
mov
push
push
push
mulb
sub
mov
adc
jg
rclb
nop
adc
add
test
sub
pop
xor
arpl
testl
rorl
add
inc
repz
or
dec
movsb
mov
adc
ret
push
bound
add
mov
push
in
pop
fwait
pushf
test
hlt
je
pop
jle
repnz
push
inc
cli
and
sbb
sbb
mov
or
loope
in
out
xchg
pusha
movsl
std
adc
jmp
js
xor
jb
out
add
clc
andl
xchg
fwait
mov
fists
nop
aam
mov
add
lock
jmp
cmp
mov
mov
insl
dec
call
std
in
cwtl
pop
or
lahf
iret
mov
mov
jle
mov
mov
fmul
pop
loope
add
div
jne
cmp
sbb
inc
xchg
leave
enter
mov
pop
shlb
dec
sahf
into
sti
lea
xor
fs
and
and
mov
dec
fildll
int
mov
lret
es
add
sub
aaa
cmc
inc
sti
add
inc
ds
loopne
stos
cmp
aad
adc
mov
sbb
dec
outsl
mov
les
sti
push
xchg
push
dec
imul
loopne
mov
mov
fisttpll
mov
std
lret
push
adc
imul
repnz
pusha
sahf
fcomps
sub
fptan
inc
repz
aaa
int
shl
inc
gs
pusha
test
ret
sub
lahf
sbb
lds
pop
in
ljmp
cld
cmpsl
sub
pop
outsb
mov
push
int3
inc
aas
jl
outsb
xor
dec
or
in
xor
outsl
test
gs
push
mov
test
into
pusha
shrb
fxch
in
xlat
jge
mov
jg
sarl
bswap
dec
jmp
mov
subb
push
pop
outsb
hlt
sbb
sbb
lcall
sub
mov
cmp
mov
dec
fnsave
mov
push
xchg
cmp
dec
je
pop
add
pop
nop
push
sub
aaa
jl
out
jnp
mov
pop
pop
cltd
jbe
dec
dec
push
cmp
bound
in
pushf
imul
push
adc
xchg
fwait
sahf
push
dec
orl
or
xchg
test
xchg
dec
out
les
xchg
sub
mov
fnsave
outsl
stos
test
dec
mov
pusha
mov
stc
push
or
pop
xchg
rcr
sub
std
cmp
pop
xchg
or
add
subb
jle
jb
aad
cwtl
in
aaa
xor
arpl
pushf
xor
xchg
pop
mov
out
out
aad
lods
lods
or
mov
mov
cmp
pushw
pop
das
cltd
xchg
sbb
out
mov
repz
fcmove
cmpsb
popa
mov
test
insl
cmp
arpl
and
xchg
jl
mov
push
jmp
dec
out
mov
mov
sbb
mov
cmp
inc
dec
and
push
dec
sbb
mov
jmp
testl
xchg
rorl
jns
andl
cwtl
push
dec
popa
lods
lods
leave
xchg
movsl
dec
jmp
adc
adcb
rolb
addr16
test
sbb
or
outsl
dec
cmp
lcall
mov
pop
fsub
jo
mov
out
insl
icebp
pop
jl
jecxz
mov
cmp
add
sub
add
inc
fisttpll
out
sbb
sbb
ds
cs
ljmp
pop
hlt
xlat
decl
xor
mov
cmp
pop
xchg
dec
arpl
ja
push
dec
stc
cld
inc
pop
jno
push
push
in
mov
push
stos
pop
pop
sub
mov
shll
outsl
dec
incb
lds
lret
loopne
xor
mov
sub
mov
aaa
push
insb
test
popa
jge
leave
sbb
popa
push
idivl
scas
mov
cmp
mov
mov
xor
inc
and
dec
lcall
pop
mov
pop
sahf
sbb
into
jns
aad
dec
adc
mov
xchg
imul
jle,pn
mov
add
inc
clc
movsl
dec
sbb
jmp
aas
fadds
pop
sbb
sub
mov
std
fdiv
jbe
lahf
xchg
into
pop
mov
movsl
mov
lahf
das
cltd
cmc
idivl
popf
stc
ficoml
in
leave
orl
and
lcall
mov
and
mov
pop
lods
inc
bnd
outsb
adc
sub
inc
xchg
xabort
shr
ljmp
stos
pop
pop
adc
push
cld
outsl
xlat
fmuls
mov
mov
mov
jmp
ja
fwait
cmpsl
adc
mov
pop
pushf
pavgb
fisubl
in
xchg
inc
pusha
sbb
repnz
push
arpl
orl
xor
mov
adc
in
push
dec
ljmp
pushf
jnp
mov
xchg
fisubl
mov
sbb
and
sbb
adc
sti
fidivl
icebp
xchg
jbe
shrl
lea
mov
dec
int3
lret
rorl
jae
popa
and
icebp
int3
test
addr16
scas
mov
fstpl
jp
fbld
xchg
xchg
push
mov
int3
xor
outsb
ret
and
cmp
in
sub
jp
rcrl
jno
les
negb
adc
xchg
pop
aas
xchg
std
xchg
iret
lods
sbb
adc
jle
movsb
pop
adc
je
or
cmp
mov
push
cmc
jne
in
testl
add
mov
adc
arpl
cltd
xor
xchg
cmp
xor
inc
jge
ss
inc
push
inc
or
test
movsb
fistpl
repnz
scas
pop
xchg
push
cmp
push
ret
adc
add
test
sti
add
xchg
ljmp
in
fsubrl
lods
imul
shll
vorpd
movl
push
jne
pushf
add
mov
xor
insl
xchg
aas
xchg
or
pop
xlat
fstpl
xchg
bound
mov
dec
insb
sbb
xor
repz
xor
or
jae
mov
fs
hlt
cmp
aad
ret
iret
mov
rorl
mov
jp
int
cmc
fadds
stc
fisubs
stos
js
sbb
ud0
mov
ljmp
xchg
or
and
xchg
ja
out
fndisi(8087
jnp
mov
sub
jle
and
in
or
js
sbb
shl
out
mov
adc
push
jnp
or
cwtl
ret
mov
clc
cmpsl
adc
insl
into
stc
or
jg
ja
in
jnp
je
adc
or
orl
test
mov
sbb
popa
sub
jecxz
sbb
inc
mov
popa
iret
adc
inc
jmp
pushf
mov
dec
lods
xchg
cmpsb
sbb
test
repz
pop
pop
sbb
je
pop
push
ret
lds
jl
sbb
aam
stc
mov
andl
pusha
int
xchg
pop
cmp
iret
inc
rcrl
xor
jl
jle
adc
clc
sbb
cs
rolb
mov
dec
mov
add
outsb
aaa
xor
pop
fstpl
mov
xorb
inc
es
pop
stos
xchg
lock
pop
and
dec
cmp
cltd
add
test
mov
movsl
cli
mov
mov
dec
mov
mov
aam
inc
push
xchg
jp
pop
dec
out
mov
add
dec
ret
fwait
mov
jno
ffreep
movsl
fwait
mov
sbb
sbb
bnd
dec
js
and
pop
cmpsl
movsl
stos
outsl
jae
sahf
and
or
rcrl
pop
fistpl
push
lahf
pop
fistps
stos
mov
and
in
cmpsl
adc
outsl
dec
icebp
sbb
ffree
lea
ss
cwtl
cmp
push
jbe
int3
rcrb
sti
cmp
ja
and
sbb
outsb
inc
jecxz
out
push
pop
ret
repz
inc
mov
popa
pop
xchg
push
pop
cli
mov
add
pusha
inc
xchg
repnz
push
bound
mov
adc
adc
and
mov
pop
inc
push
outsl
dec
das
scas
push
push
jecxz
jo
mov
xor
dec
dec
mov
ret
cs
lds
mov
pop
stos
ret
fisubrs
mov
rcll
repz
int3
out
cli
int3
add
les
idivl
jnp
xchg
pop
xor
dec
jge
lcall
mov
and
adc
daa
in
pushf
aad
mov
fisubl
aas
add
jl
xchg
or
lock
push
das
in
pop
aas
in
mov
add
sub
jno
mov
nop
daa
cmp
push
cwtl
cmp
pop
push
mov
sbb
jbe
rcl
out
ljmp
jb
mov
pop
outsl
sub
pop
jo
mov
dec
mov
mov
pusha
jne
scas
in
sub
cmpsl
loopne
inc
lea
mov
bound
out
sub
mov
mov
push
mov
sub
mov
lds
push
pusha
jmp
rclb
or
pop
cmpsl
fidivl
movsb
int
loope
fisubrl
sub
jg
inc
ror
out
mov
or
jl
in
das
call
cmpsl
scas
mov
insl
dec
mov
mov
call
rcll
mov
mov
hlt
mov
pushf
xchg
jbe
cmc
add
test
dec
push
inc
stos
divl
rorb
mov
iret
adc
je
adc
xor
xor
rcl
and
je
jbe
insb
cwtl
stos
push
sub
fsubrs
xor
xorb
cmp
lret
mov
lea
test
jmp
cmp
pushf
add
mov
xor
mov
xchg
aam
ret
pop
nop
mov
inc
mov
xchg
push
pop
pop
ret
imul
loopne
mov
fisubrl
or
dec
loopne
ret
push
addb
js
andl
xchg
or
nop
leave
dec
adc
push
dec
xchg
mov
xchg
pop
lcall
add
adc
cltd
inc
push
lock
dec
mov
mov
aaa
cmpsb
cmp
int
inc
int3
cs
sarb
add
sti
inc
clc
sbb
pop
lahf
and
mov
mul
rcr
adc
mov
or
es
and
dec
clc
and
enter
add
sahf
push
adc
dec
roll
fmul
movsb
inc
jno
outsb
pushf
insl
cmp
rol
dec
jg
cmc
adc
jne
std
inc
enter
pop
stos
adcl
lods
fisttpl
test
sar
pop
mov
cmpsl
mov
pop
or
jb
mov
cmpsb
pop
fdivrs
dec
sbb
dec
dec
cmp
xor
mov
inc
mov
pop
cmp
add
or
pop
jo
pop
pop
shrb
arpl
push
jo
loop
xchg
jns
iret
dec
mov
sbb
call
popf
xor
test
cmp
jbe
sahf
mov
cmp
adc
cmpsl
jne
imul
setnp
iret
mov
out
rcrb
adc
dec
mov
jp
mov
or
add
inc
hlt
sarl
call
jb
pop
out
iret
arpl
nop
aas
rcrl
add
daa
cwtl
cmp
jl
jnp
push
daa
loopne
js
movsl
insl
dec
or
xorb
xchg
cmp
lret
gs
das
test
pop
push
sub
shl
in
in
decl
jo
jb
mov
in
ret
in
popf
jo
sub
pusha
leave
push
movl
push
out
gs
es
jge
insb
and
xchg
xchg
pop
std
adc
cmpsb
cmp
inc
and
push
mov
daa
xchg
loope
andl
test
into
mov
loope
test
ljmp
push
xor
cmpsl
mov
jns
push
mov
pop
jg
xlat
jg
inc
or
ja
popf
adc
and
cli
enter
fisubs
out
lea
test
jb
jb
add
jle
and
hlt
gs
adc
rorl
scas
test
mov
xlat
mov
xchg
and
call
test
pop
and
mov
fdivrs
shl
ficoml
and
jns
inc
addb
jle
push
ds
sbbl
js
cmp
scas
sbb
lret
mov
fwait
outsl
mov
and
scas
add
inc
push
adc
jns
inc
push
cmpsb
out
add
ret
xor
inc
sbb
mov
stos
mov
inc
inc
xlat
nop
push
sbb
inc
add
mov
int3
mov
mov
pop
jne
pop
test
pop
nop
mov
and
pop
inc
into
push
or
mov
and
push
aaa
lods
xchg
fldenv
push
popa
lock
cmp
sarl
jbe
loopne
mov
faddl
add
mov
xchg
cltd
es
add
cmp
or
inc
call
cmp
xor
scas
dec
lods
cmp
lret
and
stos
cmp
mov
inc
jle
sub
mov
xor
inc
dec
clc
xchg
mov
mov
mov
sbb
inc
notl
push
sbb
xchg
int3
dec
ljmp
push
pop
cmpsl
daa
and
addl
cmpsl
aaa
and
insl
xor
sub
aad
xchg
sub
mov
sub
int3
lds
and
xor
lret
js
loope
test
xor
insb
cli
lcall
sbb
inc
inc
dec
or
in
fcmovnu
sub
jns
loopne
jns
test
xchg
push
jnp
fdivl
decl
mov
out
cmp
pop
outsb
gs
aad
arpl
scas
aas
scas
push
lods
mov
and
xchg
test
sub
mov
mov
and
sub
pop
sub
jnp
andl
push
bnd
mov
dec
lcall
stos
stos
jnp
insb
jae
out
lret
dec
or
enter
jno
cmc
and
sub
pushf
sub
loopne
mov
sub
in
mov
arpl
jmp
mov
jo
mov
or
outsb
mov
cs
negl
mov
lods
mov
sub
mov
js
xchg
mov
fstpt
xor
je
loop
test
add
mov
testl
fstpl
xor
sbb
fwait
cmpsl
dec
pop
adcl
adc
scas
shll
or
cmp
fdivrl
mov
mov
scas
xchg
test
in
fwait
imul
jbe
cli
pop
mov
cmp
ret
xor
es
rcll
pop
adc
sub
mov
cmp
roll
adc
xor
insl
mov
cmp
sbb
nop
ret
std
call
or
ret
mov
dec
repz
push
push
mov
jl
inc
push
test
and
stos
or
aad
xlat
lcall
push
xor
push
or
xor
jle
bound
mov
out
mov
incl
mov
push
jne
pop
sahf
jb
mov
divl
outsl
mov
sbb
dec
inc
add
pop
testb
or
js
arpl
loopne
inc
sbb
cwtl
xlat
cmpsl
add
jb
dec
adc
cltd
insl
inc
movsb
mov
pop
ss
mov
xlat
or
into
cli
bound
sub
stos
cmp
push
sub
addr16
mov
xchg
jno
jle
lcall
aad
xchg
jo
mov
push
lods
jns
shlb
xor
and
enter
fisttpll
clc
ret
push
pop
xchg
jl
add
daa
add
add
lods
lret
mov
aad
jecxz
mov
icebp
push
cmp
sahf
insb
xor
ss
dec
fs
scas
inc
jecxz
in
nop
mov
inc
push
mov
mov
fdiv
in
jb
cmp
cld
add
xchg
cli
pop
sti
dec
inc
and
mov
cs
test
scas
out
and
pop
cmp
popa
pop
dec
ficoml
ljmp
jo
push
hlt
jle
in
shrb
push
mov
mov
sahf
pushf
sub
repz
sbbb
dec
fs
mov
sahf
push
xor
mov
jg
adc
es
xor
stos
in
movsl
mov
lahf
inc
scas
popl
in
aas
xchg
mov
loop
xchg
in
inc
iret
cltd
cmp
mov
xor
cmp
fsubr
scas
movsl
fsubs
mov
out
loop
imul
inc
pop
xor
imulb
add
dec
sbb
inc
push
sbb
dec
fdivrl
adc
push
jmp
mov
es
ret
popf
xchg
out
lds
stc
popf
jl
out
gs
adc
push
mov
jnp
fdivrs
lcall
mov
and
pusha
add
in
and
out
fs
leave
xor
ja
add
adc
mov
and
mov
das
adc
dec
call
fiadds
test
inc
sub
jno
pop
or
imul
mov
push
cmp
lahf
cmp
or
test
sub
ret
sub
jb
clc
lret
cmp
inc
xchg
jno
leave
test
push
sbb
daa
cmp
lods
jle
pop
out
and
sub
adc
ljmp
mov
pop
adc
lods
lcall
cs
outsl
add
xchg
out
sub
mov
ror
mov
pop
test
ss
lret
dec
lcall
mov
jmp
fstpt
data16
call
xor
jmp
loopne
pusha
jl
add
shll
lock
cmpsb
in
test
dec
clc
jmp
xor
ret
fsubrs
push
xchg
sbbb
andl
and
jnp
fsubs
es
aad
sub
cmp
mov
xlat
mov
sbb
or
xchg
pop
lods
push
sbb
rolb
imul
icebp
ss
sti
stos
jmp
repnz
call
inc
jecxz
repnz
fadds
cmpsl
lret
jae
imull
js
mov
add
cmpsb
nop
xchg
sbb
jns
jmp
in
gs
cmp
addr16
jge
jnp
and
lods
in
xchg
adc
mov
adcl
jl
fists
in
cmc
testl
inc
push
push
gs
add
daa
xor
xlat
in
cmc
testl
inc
push
push
gs
add
daa
xor
xlat
gs
testl
inc
push
push
gs
add
daa
xor
xlat
in
cmc
testl
inc
push
std
iret
addr16
jne
gs
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
mov
dec
push
std
push
popf
ret
mov
cmp
add
add
add
add
push
mov
repz
add
add
add
add
add
push
add
add
add
add
add
add
add
push
add
add
jne
pop
add
add
add
add
mov
enter
filds
mov
mov
add
add
add
add
test
xlat
add
add
add
add
add
add
add
add
add
add
mov
add
add
xchg
add
push
add
add
add
test
cwtl
add
add
add
add
add
add
mov
sub
push
add
add
push
add
add
mov
xor
mov
mov
mov
add
pop
add
add
add
add
add
mov
jle
add
or
xlat
add
daa
add
add
add
add
out
insb
add
add
add
jb
xchg
add
add
add
push
add
mov
cmp
fwait
add
add
add
adc
inc
add
sub
dec
add
add
add
add
cmp
add
add
add
add
add
add
inc
add
add
cmp
xchg
add
add
add
add
add
add
add
add
cmp
push
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
loopne
and
add
add
add
or
enter
push
add
add
add
mov
in
add
add
add
xchg
add
add
add
add
add
movl
xchg
add
movsl
add
mov
mov
push
add
add
jge
arpl
adc
add
add
inc
add
add
add
xor
inc
add
roll
roll
add
xchg
add
daa
add
add
add
add
mov
out
insb
add
add
add
add
and
add
loopne
cmpsl
add
add
add
add
cmp
roll
add
add
add
push
add
adc
cwtl
add
add
add
add
test
das
add
cmp
in
push
add
or
add
add
add
add
add
add
add
mov
jg
mov
dec
add
mov
adc
xchg
add
push
add
add
add
add
add
add
insb
add
add
add
add
int3
add
add
add
xchg
add
add
add
roll
add
push
add
test
sbb
inc
add
add
add
add
add
adc
add
cmp
xchg
add
add
xchg
add
xchg
add
insb
add
add
dec
add
add
add
add
add
jecxz
mov
sbbb
cs
jecxz
fdivl
mov
clc
popa
es
stos
mov
mov
addl
sub
mov
xchg
negl
pop
fidivrl
fistl
add
xor
or
and
push
sbb
aaa
pop
add
addr16
in
negl
daa
arpl
lods
xchg
push
and
and
out
mov
loop
pop
imul
xchg
pop
add
call
add
inc
xor
pop
mov
inc
jae
movsb
xor
insb
jne
add
mov
outsl
jg
arpl
mov
fucomp
mov
arpl
and
cmpsl
test
add
hlt
jno
mov
int
or
lahf
sub
sbb
mov
and
gs
sbb
pop
cmp
cmp
lock
or
pop
fwait
dec
lret
aas
mov
cmp
cmp
shl
xlat
mov
or
nop
sub
loopne
xor
and
xchg
pop
insb
in
sbb
inc
push
test
out
fs
cmp
lret
jb
pop
mulb
aam
pop
icebp
ret
in
sti
aam
inc
out
dec
outsb
test
push
out
lahf
negl
mov
mov
lahf
rorb
sarb
inc
shl
dec
subl
pop
shrl
add
inc
mov
jmp
pop
fadds
loope
pop
inc
sub
push
and
cwtl
xor
icebp
sub
test
mov
jmp
test
or
sub
lret
movsb
xlat
cwtl
clc
pop
popw
outsl
movsl
sti
out
fisttpll
sub
cwtl
dec
in
out
and
aam
xchg
jmp
je
stos
loope
addr16
cmp
cltd
mov
insb
or
sbb
xchg
lods
mov
popl
cmp
test
pop
adc
adc
arpl
repnz
mov
test
fs
jb
adc
popf
push
or
in
popf
cld
sbb
push
inc
addb
inc
adc
pop
xor
fwait
insb
shl
daa
jecxz,pt
repz
subb
mov
pusha
and
dec
sbb
dec
inc
enter
cwtl
mov
int3
adc
cmp
mov
mov
int3
inc
in
lods
adc
outsl
cmp
mov
or
inc
mov
lds
xchg
xchg
cmp
add
stos
xchg
dec
loopne
repz
inc
cmp
fs
movl
pop
or
pusha
xlat
test
fmulp
pop
mov
inc
add
dec
cmp
ljmp
out
pop
adc
pop
sub
in
mov
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
