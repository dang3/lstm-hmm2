mov
add
add
add
add
jo
notl
mov
rorb
fwait
xchg
dec
es
imul
jb
daa
sbb
dec
sti
arpl
and
push
xchg
bswap
jge
inc
sbb
ljmp
xor
mov
jnp
and
leave
into
cs
data16
xchg
xlat
push
mov
pushf
cmp
mov
xor
mov
xchg
xchg
out
jmp
stc
stc
jle
inc
in
pop
adc
and
loope
add
cltd
cmp
adc
push
loope
sti
rcrb
pop
mov
clc
addb
sbb
pop
cmp
ss
pop
aam
push
call
dec
aam
mov
cli
mov
shrl
jmp
jp
aam
fcoms
out
pop
xorb
sarl
outsb
lock
push
scas
jo
test
pushf
and
sbb
cld
sarl
fbstp
addl
push
dec
in
lahf
pusha
scas
out
or
ds
or
xchg
pop
addr16
shr
les
ss
rclb
ljmp
jae
lcall
and
clc
and
lret
and
rclb
gs
push
pushf
outsl
outsb
cmp
sti
adc
mov
cwtl
mov
sub
pop
out
push
or
xor
adc
push
roll
mov
fdivl
ret
andl
int3
in
and
cmc
mov
add
addb
or
outsl
inc
or
movsl
sbb
es
mov
les
loopne
mov
dec
push
out
add
pusha
mov
push
mov
cmpsb
ljmp
sub
sub
repnz
jns
popf
sub
inc
dec
sub
inc
scas
lret
lcall
fwait
push
repnz
loop
mov
pop
push
mov
xchg
sub
outsb
test
xor
jne
shrb
and
dec
shrl
pop
mov
lret
movl
les
aas
stc
stos
stc
mov
adc
jb
insl
pop
out
push
mov
and
movsl
fsubl
mov
fiaddl
adc
cmp
leave
mov
mov
push
addr16
outsb
sahf
mov
in
aam
and
dec
mov
mov
mov
es
iret
sub
xchg
ja
scas
sbb
popf
xor
ss
sub
loopne
xchg
push
sahf
xchg
push
mov
pop
sahf
or
rorb
sub
scas
inc
sarl
mov
pusha
pop
fldenv
mov
adc
fnstsw
aam
cmp
jne
jbe
mov
rclb
loope
add
das
xor
fsubrs
iret
sbb
idiv
fistps
push
add
pop
fwait
or
sbb
in
jge
data16
jle
jg
roll
cmp
xchg
mov
push
jnp
stos
pop
xchg
pusha
cmp
cmc
sbb
ret
inc
outsl
pusha
add
xor
adc
or
aas
dec
ret
pop
add
cmp
cwtl
mov
inc
mov
and
push
pusha
dec
jno
out
mov
jo
dec
add
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
jmp
test
xor
mov
pop
hlt
push
mov
jbe
rorl
insl
inc
mov
xor
cli
jecxz
sub
pop
cltd
jp
dec
sbb
and
mov
das
push
mov
mov
mov
xchg
fstpl
cltd
into
aad
ret
sub
xor
data16
aas
add
jp
out
movsl
pop
rolb
jge
cmp
add
sbb
rolw
add
adc
stos
faddp
out
xchg
sub
fs
cmp
lcall
mov
ret
es
pop
adc
adc
jno
sbb
enter
cmpsl
mov
mov
test
mov
cmp
inc
inc
jl
bound
mov
lret
nop
cltd
in
test
jno
add
or
mov
clc
call
pushf
dec
orb
insl
pop
xlat
mulb
pop
pop
out
or
add
pop
xchg
mov
sub
aas
adc
mov
mov
xchg
and
cmp
data16
dec
fdivrl
adc
jle
arpl
stc
enter
cmp
sar
mov
cmc
movsl
push
sub
mov
pop
jns
jo
pop
adc
adc
test
xchg
inc
cmc
cmpsl
or
call
and
dec
push
mov
or
test
vmovq
in
mov
test
push
mov
mov
bound
mov
and
xchg
pushf
mov
jno
popa
jb
lahf
inc
cs
lods
cmpb
mov
push
sbb
adc
sbb
loope
adc
outsl
fnstcw
add
or
cwtl
aad
mov
mov
scas
xchg
sti
dec
and
or
xchg
add
int3
cmpb
cmp
sub
mov
mov
in
add
sti
and
arpl
dec
jbe
out
orl
and
push
icebp
movsb
push
out
dec
xlat
mov
add
ss
push
or
inc
dec
shrl
stos
dec
pushl
std
shl
push
pop
and
punpckldq
xlat
jl
insb
mov
or
iret
or
add
test
inc
mov
mov
fwait
inc
add
imul
loope
push
mov
jne
push
fmuls
fwait
adc
mov
out
mov
jo
xchg
imul
dec
inc
ja
test
ss
pusha
in
jmp
mov
repnz
mov
hlt
jbe
mov
nop
inc
hlt
jecxz
sub
or
cmp
sbb
pusha
imul
pop
jne
xchg
or
xchg
push
xor
sbb
push
or
aam
sbb
repz
pop
push
adc
sbb
jbe
mov
xchg
imul
daa
outsl
cld
cwtl
dec
sub
mov
dec
les
jno
ret
or
fdivp
int3
jbe
sbb
aas
insl
movsl
cltd
push
mov
iret
xorb
push
enter
jb
fwait
insb
xchg
add
mov
xor
loopne
push
jecxz
mov
ror
push
xor
sub
dec
popa
mov
mov
into
adcl
or
lods
cmpsb
cs
outsb
dec
cld
fadds
inc
insb
cmpsb
fwait
inc
and
sti
in
test
cld
sbbb
add
or
mov
mov
dec
add
sub
cmp
lret
pushf
xor
int
inc
push
sbb
scas
shrl
push
mov
or
and
imul
dec
insl
loopne
adc
ret
jo
int3
or
push
mov
cmp
xchg
sub
mov
jg
adc
inc
or
mov
pop
jle
cmpl
out
push
ror
cli
mov
int3
add
pop
fcoml
pop
pop
in
repz
hlt
mov
aad
mov
and
ja
lock
xchg
mov
xchg
inc
inc
add
mov
lods
rcrl
jecxz
mov
inc
clc
mov
outsb
push
push
cmp
fs
inc
jnp
add
mov
inc
clc
jbe
push
mov
mov
pushf
pop
mov
inc
fidivs
es
not
xchg
pop
mov
add
jecxz
mov
jmp
push
pop
mov
mov
in
sbb
ffreep
bound
inc
add
aad
faddp
js
push
sub
ljmp
and
repnz
loop
push
rorb
cmp
lods
xor
push
sbb
inc
cwtl
dec
std
or
mov
jmp
cltd
inc
xchg
orb
cmp
fistl
and
pop
push
popa
sub
out
mov
dec
imul
int3
cmp
push
and
adc
mov
adc
mov
cmp
lods
bound
imul
add
and
fistpl
movaps
movsl
repnz
inc
bndldx
or
scas
dec
add
bound
mov
jbe
sbb
inc
in
ret
mov
cmp
ja
dec
ds
sub
mov
cmp
nop
mov
std
sbb
adc
mov
test
arpl
add
outsl
stc
loopne
les
jp
mov
pop
xchg
adc
aaa
insl
xor
das
dec
in
imul
cmpsb
mov
out
daa
xchg
call
test
and
ljmpw
stc
inc
pop
lods
push
dec
inc
mov
int
pop
mov
pop
mov
fdivl
loop
loopne
jg
cmp
cmp
cli
jno
imul
or
pop
fiaddl
dec
and
movsb
push
ret
mov
fisttpll
sahf
xchg
push
fwait
cmpsb
addr16
cmp
aaa
lcall
pusha
lret
mov
cmp
mov
aaa
mov
fistps
xor
or
int
pop
jl
jb
popf
mov
inc
nop
pop
inc
mov
pop
sbb
jns
shr
add
or
fcomip
out
sub
enter
jno
sbbl
cmpsl
jecxz
mov
ljmp
mov
add
outsb
fcomps
mov
ljmp
mov
movsl
insb
or
dec
jnp
ret
add
imul
cmp
sbbl
and
fldenv
push
mov
pop
rolb
out
clc
xor
pop
sbb
xor
loope
sbb
xor
popf
fldcw
sbb
push
sahf
andps
scas
sub
sbb
les
popa
fs
faddp
mov
mov
dec
add
inc
leave
dec
and
inc
inc
in
fbstp
dec
sti
or
stc
mov
pop
in
scas
out
mov
js
push
iret
add
lock
aad
xor
in
xor
ret
cmp
mov
mov
imul
sub
add
mov
adc
stos
dec
sub
xor
xor
int
ljmp
add
push
jne
les
pop
inc
je
cmp
repz
lret
nop
aam
clc
add
add
push
repnz
sub
out
mov
pop
outsl
sti
mov
in
or
out
push
repnz
dec
arpl
or
cmp
mov
mov
add
popa
outsl
sub
mov
insb
rorb
xor
insb
jle
push
add
or
mov
cmp
lahf
mov
out
ss
and
imul
dec
cs
and
data16
and
sub
or
push
push
mov
outsl
movsbl
bnd
out
in
popf
mov
jp
sbb
xor
movsl
xchg
push
fwait
popf
pop
rorl
pop
and
cmpsb
adc
adc
stos
in
gs
ljmp
sbb
les
push
loope
insb
icebp
outsl
dec
mov
mov
add
mov
add
mov
pop
rorb
push
cmp
call
xchg
and
pop
and
mul
aam
lea
jmp
sub
mov
or
mov
push
sbb
mov
lret
jge
push
sbb
jge
sahf
push
sub
cmp
and
fdiv
or
jecxz
cmp
lret
sbb
outsl
push
subb
add
jmp
fstpl
jo
jbe
mov
sahf
dec
pushf
enter
mov
fisubl
lea
sub
pop
cmp
push
arpl
cmc
mov
adc
mov
mov
out
add
aam
cld
fldenv
roll
insb
mov
adc
mov
xor
incl
out
dec
xchg
and
xor
scas
xchg
int
outsb
stos
add
nop
inc
call
fisubl
cmp
cmp
call
je
mov
jo
lods
cmp
xchg
sti
mov
int
ret
pop
test
mov
push
xlat
xorb
mov
cmp
test
dec
pop
pop
pop
fs
bound
mov
inc
pop
mov
bound
enter
mov
push
ss
jns
repz
ljmp
adc
or
jae
shll
stos
test
ljmp
arpl
adc
xchg
mov
adc
push
js
mov
mov
xchg
xor
mov
add
mov
jle
loope
mov
ds
xchg
repz
decb
jo
mov
and
xchg
sub
aaa
movhps
aam
pop
lods
push
mov
dec
out
ja
jle
or
xchg
jnp
popf
push
mov
testb
cmp
arpl
pop
stos
data16
cmc
pop
aaa
sub
movsb
rclb
das
in
pop
add
or
mov
clc
cltd
jle
dec
adc
mov
fiaddl
sbb
add
jg
jb
icebp
dec
xchg
dec
xor
and
rcrb
cmpsb
adc
sub
and
xor
sbb
cmp
sub
pushf
cmp
mov
subb
push
js
into
push
fdivrs
movsb
jecxz
jg
lahf
mov
icebp
adc
pushf
push
test
xor
inc
bound
push
sub
cmc
into
inc
jne
fidivl
lock
xchg
pop
insl
mov
jb
ds
xor
scas
lret
add
int
rol
or
or
movsb
xor
lods
add
outsb
xor
outsl
call
sub
mov
int3
xor
loopne
lods
mov
popa
sub
insl
cmp
pop
lahf
mov
xchg
xor
sbb
jnp
out
shlb
mov
js
push
and
sbb
push
add
fnstcw
add
out
ds
enter
jb
mov
rcl
cmpsb
rolb
pop
mov
stc
mov
sbbl
insb
fsubs
jle
std
push
mov
test
or
jge
pop
pop
mov
pop
sbb
leave
les
sbb
mov
fildll
ds
adcl
fdivs
pusha
dec
out
ret
lcall
xorb
push
fs
push
imul
in
xchg
mov
sub
push
dec
test
push
fiaddl
gs
mov
outsb
push
push
ret
enter
pop
ret
pusha
mov
pop
icebp
sub
sub
mov
or
pop
icebp
push
cmpb
cmp
js
out
dec
xor
cmc
fcomps
push
xchg
shrl
xor
pop
xlat
pop
icebp
sub
mov
inc
xchg
inc
nop
or
sub
pop
int
lods
mov
xchg
push
loope
ljmp
stos
push
in
imul
fstpt
add
or
mov
xorl
iret
les
lock
addr16
imul
ficompl
outsb
insl
mov
sbb
std
aaa
jns
imulb
fs
adc
clc
jmp
cld
addr16
xchg
imul
and
loope
shll
loope
insl
push
push
add
cltd
fwait
lcall
fidivrs
mov
test
xchg
dec
mov
ror
movsl
mov
int3
ljmp
push
jmp
pusha
lcall
testl
lret
and
xor
pop
mov
xlat
dec
ljmp
aas
adc
stc
and
cmc
mov
fimuls
xor
pushl
leave
jbe
dec
lret
popf
in
mov
test
jo
cmp
mov
nop
mov
xchg
dec
mov
and
pop
sbb
jo
inc
subb
pushf
cwtl
mov
push
rcrl
lock
xchg
jno
mov
rolb
mov
pushf
cmp
ljmp
inc
fs
loop
add
std
test
cli
push
pop
xor
mov
outsb
scas
mov
push
leave
adc
clc
movsl
test
push
fbld
mov
jle
or
or
sbb
fnstenv
adc
jo
adc
enter
pushl
pushf
int
popf
pushf
or
sahf
inc
out
out
ds
pusha
test
enter
sub
shll
add
xor
add
sub
sub
jns
adc
mov
dec
idiv
lods
in
and
push
jne
xchg
and
out
in
push
adc
fwait
movsb
pop
fsts
jl
iret
ljmp
xor
fsubr
push
xchg
cld
mov
cmp
mov
sbb
inc
hlt
cmp
mov
mov
mov
mov
cli
decl
test
rorb
adc
stos
out
xor
stos
rol
fiadds
inc
loope,pt
pop
cltd
or
xchg
fmuls
pusha
pop
sbb
sbb
hlt
daa
leave
cmpsb
xchg
out
lret
mov
mov
cmpsb
scas
scas
cmp
lds
cmp
jmp
int3
mov
subb
divl
arpl
int3
rcr
sbb
jnp
mov
mov
sbb
lret
jg
sub
pop
dec
pop
cmp
cwtl
ret
push
xor
aam
push
fldt
scas
ja
aas
add
insb
into
js
push
or
xchg
js
push
and
push
lret
jecxz
dec
jbe
pop
mov
inc
movsl
das
push
orb
popa
push
adc
enter
mov
push
cli
xchg
dec
in
push
jp
lret
cmp
mov
rcll
das
repz
fwait
pop
xlat
ljmp
cmp
mov
jecxz
sub
movl
jne
mov
inc
addl
cld
aad
mov
fwait
jge
jbe
mov
sar
mov
mov
sub
and
pop
data16
js
mov
js
push
dec
adc
dec
jl
mov
ljmp
aad
push
movsb
xor
insb
jmp
mov
jnp
cmp
dec
mov
xrelease
cmp
mov
mov
ja
scas
cmpsb
shrl
aam
hlt
pop
mov
loope
out
cmpsb
in
out
mov
inc
ret
ljmp
cmp
ss
sub
adc
jb
push
int3
fwait
xchg
xchg
push
aam
adc
sbb
test
jle
dec
push
movsl
es
das
mov
jl
xor
pop
jecxz
loope
inc
inc
into
jg
mov
inc
xchg
and
in
lret
fwait
jns
or
subb
mov
xchg
jge
aad
sub
test
negl
cwtl
push
cli
push
xchg
or
mov
pushl
fisubs
adc
in
testb
in
outsl
inc
enter
and
sbb
fadd
pop
dec
and
test
out
push
lea
fisttpl
repnz
stos
cmp
xor
js
jns
xchg
mov
xchg
xchg
fsubrs
push
les
test
icebp
lods
shrb
test
dec
pop
in
out
ds
sbb
xchg
cmpl
cs
sbb
adc
or
xor
or
xchg
aaa
sub
ljmp
icebp
loopne
shrl
inc
out
cmp
jmp
nop
cmp
andl
pop
add
adc
jl
push
mov
sbb
lock
ficoml
push
das
add
lods
loop
or
leave
sbb
sbb
or
mov
out
out
movb
cld
and
std
sahf
cld
jp
out
inc
idiv
mov
roll
into
bound
pop
pusha
mov
sub
icebp
ljmp
sub
xor
fwait
and
dec
sarb
xchg
lods
push
cmp
sub
xchg
hlt
jg
jo
stc
push
mov
cmpsb
cmp
lret
jle
dec
pop
inc
push
and
shrb
lret
jnp
inc
jp
fidivrl
dec
jle
cld
inc
adc
out
lods
lds
outsl
sti
clc
mov
cmpl
shlb
xchg
dec
jb
sub
pop
in
loopne
test
adc
std
out
into
jbe
lahf
inc
adc
dec
add
lret
and
and
ret
mov
subl
pop
pusha
jp
pop
dec
std
pop
sub
xchg
mov
sub
pop
stos
dec
pushf
shrl
aad
adc
mov
add
in
outsb
sahf
fcompl
lods
shr
jne
cmp
fcoml
mov
cmp
add
sbb
xor
jb
mov
imul
and
cmp
fistpl
test
and
push
shr
int3
in
xor
in
ljmp
and
in
adc
js
mov
data16
jns
fists
inc
test
jnp
aas
shlb
out
loop
cmp
push
shll
xchg
cmc
dec
sti
jno
pop
inc
mov
call
mov
clc
fsubp
pop
aaa
loopne
cmc
int
dec
cli
in
enter
aaa
pop
scas
stc
js
cmovae
arpl
lock
stos
push
das
and
pop
push
jae
pop
out
jae
in
xchg
lcall
pop
arpl
add
out
xor
out
xor
cmpsb
into
push
mov
mov
mov
outsl
xor
inc
or
pop
jb
pop
repz
les
inc
xchg
icebp
dec
push
lock
decl
sbb
sub
cwtl
push
or
std
pop
subl
jns
lock
dec
xchg
sub
jmp
je
sub
dec
inc
lret
xchg
hlt
xchg
shl
test
je
and
into
xor
stc
xor
shrl
or
rcrl
movsl
test
dec
cmp
push
push
std
xor
xor
repnz
push
cmc
inc
cmp
into
aas
add
and
into
fldl
or
pop
cmp
faddl
sbb
enter
jo
orps
jecxz
arpl
mov
js
xor
inc
aas
mov
cld
push
in
fstpt
inc
sahf
and
sbb
jmp
add
dec
pushf
loopne
addr16
jecxz
mov
jbe
adc
popf
sbb
jg
pop
xchg
notb
inc
sti
scas
pop
in
lret
jg
and
sbb
sbb
jmp
and
xor
repz
orl
adc
add
nop
cmp
and
mov
mov
lea
add
mov
mov
fsubrs
cmp
gs
mov
pop
iret
shl
je
insl
inc
mov
mov
adcl
xor
mov
mov
lret
mov
in
mov
push
fsts
push
and
jo
pusha
mov
inc
mov
test
pop
xchg
insl
jmp
sarb
pop
pop
sbb
mov
add
mov
dec
fsubs
sbb
pop
and
jle
mov
movsl
cmp
roll
add
outsb
out
dec
cmpsb
gs
mov
bound
and
add
sub
ljmp
cmpl
mov
pop
cmp
js
mov
fists
fisubrl
adc
movsl
js
mov
nop
xchg
fwait
sbb
shrl
cli
jge
cmpsl
daa
dec
call
fwait
cmpb
pop
push
push
add
xlat
xor
je,pn
arpl
divl
scas
jge
es
mov
lret
and
nop
repnz
shlb
scas
add
ret
shll
or
and
arpl
fcmove
dec
out
push
lret
mov
mov
mov
push
std
dec
lock
shrb
add
adcb
cmp
dec
gs
dec
vmread
lods
call
inc
ljmp
or
nop
adcb
xchg
test
adc
and
clc
addr16
sbb
jne
nop
ret
jbe
add
test
enter
cli
cmp
or
push
adc
mov
repz
mov
mov
ficompl
stc
addr16
aaa
daa
pop
cmp
addl
xor
add
lods
pop
pushl
adc
insb
push
inc
mov
mov
fstpl
in
pop
xchg
int3
inc
ret
sbb
in
xchg
sub
xor
push
xor
js
mov
or
int
fisttps
test
stc
negl
pop
lods
lea
in
es
add
sbb
fnsave
dec
fs
cmp
sub
out
mov
ficomps
jae
cwtl
cmove
mov
cmpsb
pop
cmpsb
xor
push
pushf
ficompl
sbb
mov
fidivs
shl
mov
sarl
pop
sub
insl
in
outsb
sbb
cli
and
jbe
or
xchg
out
lods
ljmp
repnz
out
mov
daa
cmc
jp
shlb
shlb
je
cmp
push
adc
iret
pop
cmpsl
inc
mov
push
xor
cmp
cwtl
add
shlb
mov
test
or
dec
aaa
jmp
push
cld
lods
rcl
cwtl
lock
jmp
mov
sbb
jno
add
cmp
loopne
pop
sbb
inc
inc
sub
pushf
ljmp
adc
stos
aam
les
xchg
fiadds
cmp
xor
adc
mov
shl
or
enter
call
fwait
in
inc
dec
ror
shlb
pop
nop
enter
aam
xchg
paddd
push
lock
cmp
in
push
iret
mov
dec
test
daa
loop
pushf
pop
lret
jno
mov
es
pop
inc
loopne
xor
cmc
push
push
and
cwtl
lods
ss
add
dec
movsb
pop
mov
cwtl
and
mov
or
sbb
adc
pop
xlat
push
out
add
in
push
and
jns
sub
or
sub
and
adc
pop
ret
fistl
shrb
popf
seta
addr16
mov
shlb
and
inc
in
les
sbb
imul
ds
stc
pop
jae
repnz
pop
cli
ljmp
adc
push
lods
leave
jnp
xor
mov
shl
jae
push
mov
and
repnz
outsb
lds
outsb
push
movsb
cmpsb
or
inc
movsb
jmp
fisubrs
lds
add
lds
mov
push
sbb
mov
push
sub
and
inc
in
inc
and
push
mov
lahf
xor
adc
jnp
sti
and
mov
xchg
xchg
out
push
xchg
cs
xchg
adc
jle
subl
pop
xchg
scas
stos
inc
fimull
mov
ret
xor
mov
sbbb
js
sub
mov
inc
call
cld
mov
and
mov
out
inc
inc
loop
into
ret
and
in
sub
mov
andb
xchg
pushf
out
mov
lods
mov
enter
adc
ljmp
out
pop
hlt
cli
enter
xchg
mov
mov
mov
imul
je
andl
sub
xor
cmp
lock
test
sub
test
jae
sbb
cmp
push
xorb
sbb
cmp
pop
jno
outsl
xor
test
orb
scas
leave
jbe
mov
lea
into
repnz
lods
xor
jb
cli
in
popa
in
sbb
pop
mov
jnp,pn
pop
or
fmulp
lret
pop
pop
insl
sbb
cmp
jae
xlat
rorb
sub
mov
out
mov
push
aam
inc
je
add
test
imul
or
aaa
das
test
mov
jno
push
es
pop
add
mov
dec
out
xchg
outsl
adcb
sbb
rcll
sahf
cld
push
or
adc
and
pushf
jbe
into
cli
add
dec
xchg
mul
stc
dec
mov
out
pop
lods
movsl
lea
inc
adc
out
aad
pop
loope
insl
lret
ss
xchg
cwtl
in
scas
xchg
ret
jg
xor
and
mov
int
sub
cmpb
sbbl
jecxz
dec
xor
fs
jle
adc
hlt
adc
fistpll
out
stos
cmc
dec
es
sub
sti
hlt
imul
jno
sar
xor
out
loopne
jnp
negb
or
nop
mov
fs
mov
jp
addr16
dec
adc
xor
mov
test
lahf
add
loopne
and
jae
mov
xchg
push
mov
pop
cmpsl
bound
lods
push
cwtl
mov
push
imul
dec
jns
inc
pop
outsb
ss
outsb
jo
jno
xchg
rcll
fcmovu
lea
cmp
das
repnz
lods
lahf
pop
enter
adc
or
and
mov
cmp
adc
cmc
jb
shll
adcl
xor
jp
ret
fs
lock
lock
insb
and
xor
data16
push
mov
movsl
or
leave
cli
mov
push
xchg
aad
or
test
mov
arpl
movsb
mov
ret
div
fwait
inc
mov
les
push
sub
arpl
dec
pop
cmp
enter
loope
popa
imul
and
add
mov
subb
mov
push
xchg
call
add
pop
shll
shl
jae
lods
dec
test
fadds
jne
adc
add
stos
aas
cltd
adc
sub
out
inc
fidivrl
sti
adc
xlat
das
pop
test
lret
loopne
pusha
xchg
sbbl
xor
or
jne
lahf
out
pop
jns
and
imull
cmc
add
fwait
scas
out
cmp
nopl
notb
pop
cmp
dec
dec
adc
enter
pop
adc
pop
xor
decl
sarl
mov
test
out
sub
fldt
cmp
push
and
mov
ja
jns
loop
addl
cmp
iret
mov
mov
lret
movsl
jmp
int3
in
mov
out
dec
lret
frstor
sti
push
les
or
or
dec
stos
mov
jae
out
jo
push
in
xchg
jns
or
xchg
aam
jg
leave
xlat
pop
inc
or
push
inc
dec
mov
ja
push
xchg
dec
jg
loope
or
in
mov
sbb
or
add
mov
cmc
out
inc
jle
push
inc
cltd
mov
push
mov
ficoml
inc
mov
xchg
ss
jmp
mov
jo
inc
adc
fbstp
mov
imul
pop
cwtl
dec
push
sub
repz
pusha
push
or
push
clc
push
mov
jo
cmp
test
icebp
sbb
mov
push
repz
subl
pop
cmpsb
pushf
inc
jmp
pop
push
test
cmp
mov
or
mov
shl
add
stos
bound
sbb
rorb
mov
lods
push
adc
outsb
mov
mov
push
jle
mov
loopne
cmpsl
pop
popf
sub
sbb
movsl
leave
xchg
or
cmpsl
inc
xor
push
jecxz
sub
sbb
lods
add
sbb
sub
pop
loope
xlat
rorl
imul
xchg
cli
jge
aas
icebp
push
sub
inc
pushf
sbb
shll
mov
cmp
mov
dec
and
mov
add
dec
push
test
testl
push
push
inc
loopne
iret
push
lret
pop
aas
pusha
es
push
pop
dec
std
pop
sarb
pop
out
in
xchg
sahf
adc
scas
push
mov
xor
adc
lret
jmp
fs
push
dec
inc
ljmp
les
lods
scas
sub
and
adc
xor
flds
fisubs
ja
fstpt
ret
fnstcw
int
aaa
scas
dec
sub
adc
adc
and
daa
sbb
scas
daa
idivl
dec
iret
mov
jle
mov
inc
subl
sbb
popf
mov
sbb
xorl
mov
add
or
test
lcall
scas
mov
push
push
out
xor
dec
jge
out
das
inc
push
cltd
mov
mov
fistps
jp
pop
inc
mov
dec
fldcw
mov
scas
icebp
push
iret
jp
mov
adc
mov
lods
in
decl
pop
or
int3
fistps
jbe
xor
add
imul
jecxz
shll
aam
xor
xchg
mov
inc
xor
imul
pop
jg
dec
pop
xor
aaa
mov
sub
jle
dec
adc
xor
dec
dec
in
pushf
mov
jl
dec
std
test
adc
xchg
cld
mov
mov
out
jmp
or
das
mov
add
js
daa
mov
es
jmp
bnd
xor
cld
ljmp
push
subl
jp
clc
sub
pop
xchg
out
enter
mov
frstor
adc
jbe
fnsave
insl
xchg
mov
mov
push
sub
mov
mov
adc
mov
inc
js
dec
insl
lret
dec
xor
mov
bound
push
icebp
shr
pop
test
in
xlat
cmp
leave
adc
cmp
jb
dec
decb
out
les
sbb
jae
dec
and
mov
enter
shlb
mov
mov
test
stc
in
mov
push
adc
int3
jno
lret
sahf
cld
mov
inc
adc
dec
clc
or
dec
pop
xor
aas
lahf
paddsb
pop
loopne
icebp
cwtl
aad
loopnew
dec
dec
mov
sub
xor
sarl
add
xchg
jbe
out
pop
add
xor
test
inc
mov
aas
or
sar
fiaddl
imul
xor
pop
lret
or
sbb
and
in
imul
dec
mov
mov
inc
mov
adc
add
pop
aaa
fidivrl
mov
pop
mov
cmp
or
sub
pop
loop
sbb
mov
cmpsb
in
gs
sub
sbb
jg
jecxz
fiaddl
push
neg
cmp
jne
loop
andl
mov
ss
incb
pop
inc
movsb
in
pop
mov
xchg
xchg
xor
dec
xchg
jns
lcall
sti
sbb
lahf
dec
bound
push
getsec
or
mov
ja
xchg
and
dec
inc
push
fldl
shrl
mov
sahf
inc
add
inc
jmp
subb
cmp
pop
add
dec
imul
lahf
enter
jnp
mov
sbb
arpl
cmp
push
in
jge
jecxz
lret
mov
mov
mov
cmpsl
mov
dec
jne
imul
inc
fists
xchg
pop
sub
js
pmaddwd
pop
jae
clc
xchg
data16
mov
and
xor
les
mov
out
pop
test
loopne
lret
insb
pushf
cmp
inc
mov
js
inc
pop
lret
das
xlat
test
mov
ljmp
push
xor
add
pop
push
mov
daa
mov
shlb
clc
jbe
cwtl
pop
mov
or
aas
fbstp
mov
pushf
dec
jge
adc
add
iret
cmp
lods
aam
into
imul
adc
fcoml
bound
push
mov
mov
lea
and
dec
xchg
pushf
cmpsl
ret
shlb
ja
sahf
mov
push
xchg
sbb
aas
in
call
pop
fs
adc
ds
cmp
insb
or
pop
pusha
iret
cwtl
pop
inc
add
jmp
dec
pop
popf
sbb
mov
mov
stc
or
scas
pusha
imul
lahf
ret
out
aas
push
or
outsb
xor
pop
fisubs
js
mov
mov
lahf
fxch
stos
in
inc
fwait
push
roll
push
add
push
inc
xor
divb
fwait
out
data16
adc
mov
loop
inc
popa
mov
jb
repz
fs
and
cmp
push
enter
stos
enter
add
push
int
mov
rcrl
fmulp
shll
xchg
xchg
cwtl
push
icebp
fldenv
pause
shl
jbe
pop
insl
outsb
jno
sub
cmp
jge
cmp
outsl
inc
pop
inc
adc
and
hlt
mov
movsl
sub
shll
cmp
dec
mov
out
mov
lret
fnstsw
jne
lds
fisttpll
ja
mov
ret
mov
push
xchg
jno
jb
cmp
mov
nop
sti
xor
pop
inc
in
dec
sbb
call
jg
jp
pushf
or
pop
push
inc
fidivs
mov
call
stc
loope
sub
outsb
push
jge
ret
sbb
shlb
inc
andb
loope
es
lods
mov
popa
insb
shll
je
dec
adc
push
ror
aaa
push
mov
mov
sbb
lds
cmpsl
push
insl
dec
into
pusha
mov
sahf
das
outsl
mov
xor
cmpsl
xor
or
fimull
adcl
jle
mov
mov
cli
jp
inc
shl
push
pop
shll
cld
jg
faddp
sub
jae
popa
adc
xchg
mov
bound
rcrl
push
and
mov
xchg
inc
gs
cmp
ss
lods
cld
add
mov
mov
scas
dec
or
sbb
loop
jmp
in
int3
fs
pop
sub
adc
adc
add
stc
xchg
jge
cli
cmp
lahf
pop
fbld
dec
or
xchg
adc
mov
or
aaa
repnz
xchg
repz
xor
fimull
dec
push
mov
or
lea
or
pop
mov
mov
and
mov
lret
and
fisttps
dec
test
mov
mov
testl
les
loope
add
sub
mov
mov
inc
dec
rclb
test
fisttps
jae
pushf
aad
stos
push
sub
shr
mov
inc
xlat
jecxz
adc
jmp
add
lods
push
and
aam
mov
xchg
mov
pop
pop
lods
test
test
push
orl
and
rdpmc
jne
jecxz
mov
jmp
int3
clc
stos
xchg
push
icebp
jbe
icebp
push
clc
lds
sbb
xchg
js
dec
xlat
inc
mov
cmp
lods
jl
cs
scas
dec
sub
rcrb
out
xor
js
mov
data16
loopne
pop
punpckhdq
add
loop
mov
and
shll
jnp
call
mov
pop
ret
xchg
pop
arpl
sub
mov
movsl
clc
mov
and
test
ljmp
adc
insb
inc
dec
sbb
cltd
gs
or
clc
jbe
jmp
mov
fisttpll
dec
cmpsb
rol
int
cs
add
sub
and
mov
push
lods
push
fs
pop
mov
pop
cmp
fwait
not
xchg
adc
mov
jle
pop
mov
mov
push
mov
cmp
fmul
adc
ljmp
mov
in
je
add
cli
int
iret
adc
fwait
test
lods
xchg
in
loope
mov
sarl
cmp
loopne
adc
out
fisubs
cltd
dec
pop
cmc
push
lods
sub
outsb
fwait
xor
or
inc
sbb
sub
adc
into
push
and
push
hlt
dec
fs
cs
lods
xchg
adc
jmp
and
jl
xlat
pop
mov
test
sub
inc
outsl
out
aas
jmp
stc
and
or
ds
bound
cli
aam
dec
lahf
nop
insb
leave
movsb
ret
xchg
aam
lods
cli
lret
dec
lret
mov
ljmp
test
mov
into
popa
jle
jns,pn
test
jo
xchg
ljmp
cmp
int3
push
or
xchg
mov
lahf
xchg
jnp
mov
pop
push
imul
jmp
mov
fldt
pop
push
lods
mov
movsb
cmp
inc
mov
mov
push
rclb
pop
and
sti
cmpsl
cmpl
xor
in
push
xchg
je
adc
lods
int
mov
lods
and
sti
scas
fisttpl
ja
pop
push
repz
les
cmp
dec
mull
inc
pusha
cmp
mov
pop
nop
xchg
sub
xchg
ss
mov
mov
dec
lea
stos
lahf
add
int3
cld
aas
pusha
xchg
pop
mov
cltd
add
mov
xchg
iret
cmpsl
loop
hlt
xchg
pop
jg
jmp
or
mov
cwtl
repz
fdivl
iret
add
dec
rcrb
je
cltd
cmpsl
shll
sbb
rcl
in
pop
enter
insb
fwait
inc
pop
lds
shll
xchg
add
and
pop
std
insb
cmp
jo
inc
pop
insb
inc
pushf
mov
shrb
out
mov
jecxz
stos
add
jne
sahf
dec
in
mov
es
dec
push
dec
iret
push
jge
mov
mov
idiv
fucomi
stos
punpcklwd
lret
movl
enter
push
inc
imul
xor
lret
push
or
in
cmp
add
aam
dec
mov
mov
pop
jne
in
xchg
lods
xchg
lahf
jle
inc
pop
mulb
jb
cmpsb
mov
or
in
lods
lahf
mov
dec
cmp
xor
daa
in
addl
jg
mov
mov
push
pop
vfrczps
inc
push
pop
fisttps
lods
insb
into
xchg
test
cli
push
jle
dec
pop
insl
lods
and
xlat
adcb
jl
push
fs
pop
int
test
cmp
jmp
ja
fstpt
das
jnp
mov
pop
aad
mov
mov
std
es
jo
sbb
jae
mov
xchg
and
cwtl
test
test
pop
push
mov
lcall
cld
adc
outsl
in
sbb
add
inc
sbb
in
loope
dec
out
sbb
sbb
test
rorb
mov
addr16
sub
or
dec
movb
cltd
cmp
in
sarl
and
xchg
fstpt
test
add
dec
pop
mov
pop
add
mov
push
adc
loopne
lahf
add
xchg
pusha
ds
lea
aam
out
in
fisubrs
inc
sub
and
or
insb
mov
pushf
test
repz
mov
mov
push
aam
cmp
lock
xchg
inc
testl
add
popf
adc
int
enter
mov
out
cmp
mov
jne
xchg
mov
popf
jo
mov
aas
pusha
push
mov
dec
aaa
pop
push
ja
mov
popf
lods
adc
mov
mov
mov
rcr
das
jmp
cmpsl
mov
lods
mov
insl
sub
mov
push
test
push
adc
and
andl
mov
ja
ficompl
and
jo
sbb
fdivrl
scas
xor
dec
mov
pop
inc
push
lahf
mov
ljmp
leave
imul
xchg
ja
adc
out
cmp
adc
scas
fmull
and
mov
jae
and
mov
push
cmpsl
scas
nop
test
push
dec
inc
and
aam
add
pop
cltd
stos
data16
or
ficomps
cli
xorl
into
sub
repnz
jo
call
pop
xlat
clc
dec
sub
mov
jg
fistpl
push
and
push
mov
mov
jge
jecxz
mov
push
push
cmp
je
push
add
pop
adc
mov
mov
pop
in
mov
fnstcw
in
rorl
sub
sbb
dec
pusha
cld
leave
sarl
ficoms
shrl
leave
mov
mov
push
push
cmp
arpl
xlat
add
in
je
sarb
inc
dec
orb
xchg
std
aam
and
push
data16
jmp
ds
rcrl
mov
pop
cmpsb
stos
sbb
sub
mov
mov
imul
enter
xchg
cmp
int
fldl
addr16
in
mov
jns
insb
call
dec
imul
out
dec
fs
adc
filds
loopne
rcrl
pop
sub
or
inc
add
pop
xchg
fwait
jl
pop
es
push
aad
xchg
outsl
push
jmp
adc
in
adc
imul
xchg
cmp
insb
and
xchg
out
arpl
mov
dec
pop
aam
add
sbb
mov
sbb
xor
arpl
loop
out
jmp
lods
mov
inc
jle
mov
jg
repz
gs
cmpb
jbe
jle
and
clc
inc
jne
mov
xor
les
lods
loop
inc
adc
mov
incl
cmp
cwtl
or
leave
cmpsl
inc
cmp
adc
outsb
inc
sbb
test
shrb
cmpsl
mov
inc
movsb
nop
imul
jecxz
or
cmp
sub
pusha
in
jns
lret
cmp
jo
test
inc
sub
shll
ljmp
fsubl
push
icebp
inc
sub
dec
add
lcall
xchg
dec
push
cmp
push
cmc
xorl
cmp
pop
jg
pop
loop
pop
jne
cmc
out
or
dec
test
arpl
dec
in
ret
sub
mov
sbb
add
mov
adc
cli
pop
or
jmp
sbb
mov
inc
push
jno
rcl
cwtl
aas
inc
jns
sub
popa
leavew
dec
dec
push
icebp
push
and
cmc
mov
movsl
hlt
lock
mov
test
pop
mov
adc
jbe
mov
and
outsb
inc
mul
jl
sbb
add
and
cmp
jle
popa
aas
pop
sub
scas
jmp
je
and
and
jae
pop
cmp
imulb
sbb
mov
sub
add
jecxz
ret
ss
mov
mov
cltd
sbb
sub
xchg
dec
mov
cli
je
insb
int3
es
std
lcall
mov
push
movsb
and
icebp
int3
xchg
fdivr
jo
subb
mov
call
scas
inc
lahf
sub
xlat
xchg
aas
je
imul
fwait
jg
dec
mov
scas
mov
pop
pop
xchg
jne
mov
and
dec
lcall
in
imul
fstl
inc
push
lret
or
push
push
xchg
pop
daa
int3
sub
mov
xchg
mov
mov
stc
or
xor
ror
cmpb
push
cmp
gs
jecxz
in
sbb
loop
mov
sbb
xor
mov
adc
dec
or
dec
cmc
push
adcl
shlb
adc
xor
mov
mov
ficoms
repnz
xorb
roll
jmp
push
test
lret
jg
mov
push
pop
lret
jno
movsl
int
dec
mov
and
adc
jo
adc
add
push
fmul
dec
les
jecxz
or
inc
adc
out
das
leave
mov
mov
out
xor
shrb
loope
mov
lods
js
inc
sbb
mov
js
inc
push
mov
aam
jecxz
cwtl
sub
subl
mov
cli
ss
xchg
adc
pop
pushf
adc
jbe
ret
pop
fyl2xp1
imul
mov
ret
sub
aas
clc
xchg
lcall
insb
mov
add
jg
pop
jp
xorl
adc
adc
pop
and
cs
and
sub
mov
bound
jp
mov
scas
jg
add
stc
lods
dec
shl
inc
and
or
lods
cs
add
loope
shlb
and
mov
cmp
scas
push
lahf
push
mov
jle
outsl
stos
lea
sbb
pop
mov
pusha
cmpsb
xchg
cmp
into
xor
xchg
pop
dec
out
mov
xchg
and
dec
mov
pop
jmp
jno
sbb
sub
xor
or
fsub
cmp
jno
xor
mov
push
in
aam
xor
inc
dec
xchg
fwait
popf
gs
xchg
jle
cli
loopne
sbb
imul
push
out
and
xchg
and
in
lea
fcomps
dec
cmp
imul
cmpsl
add
pop
cmpb
int
lret
adc
insb
movsl
je
fistpl
sub
mov
popa
lea
fs
aas
adc
jo
pop
push
add
inc
js
cmc
popf
mov
adc
int
sub
jmp
xor
pop
jne
aam
dec
test
sbb
pop
sub
addr16
pushl
lods
rolb
add
divb
dec
push
pusha
fbld
or
lods
lods
jo
stos
inc
push
call
sub
mov
test
and
xchg
add
in
stc
cmpsb
test
mov
mov
jge
outsl
rorl
sbb
lret
shlb
inc
mov
aam
arpl
add
test
xchg
mov
subl
loopne
mov
loope
cltd
adc
imul
mov
jmp
xchg
dec
movsl
xor
mov
add
sbb
adc
sub
ror
and
test
mov
mov
dec
adc
hlt
inc
imul
mov
sub
xor
in
mov
es
pop
in
mov
and
lods
dec
ret
push
sub
or
push
xchg
cmp
arpl
aas
or
push
fisubrs
in
cli
jmp
bnd
in
cli
push
push
cmpsl
sub
jns
insl
or
add
xor
inc
adc
mov
pop
mov
sbb
sarb
sbb
mov
dec
dec
jns
dec
cmpsb
jp
fsts
lret
mov
nop
lcall
fwait
int
imul
mov
rorl
xchg
mov
std
mov
cmp
push
stc
lret
in
dec
flds
sbb
xor
and
and
cmp
add
dec
stos
es
inc
inc
int
jge
ja
and
xchg
cmc
dec
cwtl
shl
sbb
and
lds
inc
mov
mov
outsl
sarl
mov
mov
shll
inc
jbe
adc
fdivs
pop
mov
mov
or
sub
loop
xor
movsb
cld
inc
cli
xor
movsb
dec
cli
add
push
adc
out
mov
ss
aaa
fcoml
lods
negb
mov
test
enter
pop
xor
sub
inc
mov
push
push
hlt
andb
sub
fimull
or
pop
repnz
out
fwait
jle
push
xchg
fisubrl
mov
adc
loope
out
lea
fs
int3
push
cmp
enter
je
jno
pop
lods
sub
pop
jmp
ss
icebp
ret
push
fldln2
dec
cwtl
xor
jecxz
std
lahf
fdivs
pop
jnp
inc
inc
xchg
fistpll
lret
pop
add
in
cmc
cmp
xor
push
and
jl
xchg
push
gs
push
scas
xlat
mov
xchg
es
shrb
xor
addr16
jb
repnz
call
adc
or
cmp
dec
and
lret
enter
sbb
push
jo
out
cli
add
popf
jg
inc
cmp
fimull
add
or
pop
ffreep
mov
jnp
clc
xlat
rcrb
fists
mov
add
gs
cmp
out
push
test
sbb
xchg
xor
xchg
mov
adc
mov
ds
xlat
mull
cmpsb
cmc
push
inc
ret
daa
dec
mov
movsl
sub
push
dec
call
sub
adc
pop
mov
andl
nop
push
sbb
sbb
inc
icebp
repz
nop
push
inc
dec
pop
sub
test
mov
outsb
sbb
mov
mov
dec
imul
cmp
aam
xor
fs
repnz
insl
jge
and
dec
adc
mov
stos
push
xchg
pop
std
mov
stos
adc
shr
xor
mov
iret
ljmp
xorb
or
decb
test
lcall
orb
jns
ret
cs
dec
lock
sub
xchg
js
imul
push
cltd
lods
fstps
pusha
and
lock
dec
insb
imul
sar
adc
sbb
pop
inc
inc
bound
bound
xor
insl
dec
cmp
jmp
mov
repz
adc
scas
cmc
popf
aas
add
sub
pop
inc
adc
movsb
loope
pop
pusha
and
nop
bnd
jnp
in
push
mov
or
sbb
outsl
stc
imul
outsl
loope
inc
xor
movsb
lock
mov
xor
mov
add
andl
lods
sub
mov
notb
mov
mov
js
sub
sbb
sbbb
xor
cmp
or
add
leave
xorb
jl
call
sahf
stos
add
fwait
lock
icebp
pop
clc
into
mov
insb
pop
sbb
imul
xchg
lods
pop
bound
push
popf
xchg
mov
daa
mov
xor
into
cmp
push
mov
daa
repnz
pusha
pop
mov
dec
out
shlb
and
mov
push
push
iret
int3
imull
mov
lret
imul
sahf
test
rol
ret
dec
jle
int
jle
xchg
mov
adc
ds
enter
xchg
das
loop
mov
xor
cmp
mov
mov
push
dec
push
pop
lcall
in
jns
xchg
pop
leave
mov
mov
xchg
mov
jns
or
neg
xchg
jno
in
dec
pop
xchg
jb
pop
cld
dec
mov
pusha
mov
xor
adc
in
je
xchg
in
add
cs
add
into
pushf
adc
adc
filds
lods
popa
push
test
add
movsb
sahf
out
inc
mov
std
jge
shll
in
pop
rorb
insl
shlb
cld
jb
outsb
adc
arpl
push
ret
pop
push
orl
or
push
push
ja
pop
mov
insl
sub
arpl
fisttpll
es
xchg
jns
outsl
xchg
mov
mov
mov
xchg
fimull
push
sbbb
adc
aas
and
sub
sbb
dec
lret
pop
push
and
mov
pop
dec
outsb
jmp
pop
sbb
inc
lret
ret
cbtw
cli
pop
test
jb
jge
pop
popa
cmp
mov
jmp
pop
xchg
and
push
push
mov
inc
fwait
xchg
in
paddsb
or
icebp
fimuls
ret
add
xor
pop
mov
lcall
sub
sub
insb
negl
lock
out
orb
pop
out
js
cmp
mov
xchg
negb
push
in
int
lahf
lods
adc
mov
sbb
data16
mov
sahf
call
scas
xor
subb
in
add
imul
stos
je
add
xor
adc
or
inc
jns
scas
sub
out
push
sbb
sub
fs
xchg
fsubrs
in
adc
fisttpl
rclb
jle
insb
lds
or
jno
rcrl
adc
jecxz
jnp
shlb
fs
and
call
adc
mov
mov
lret
pop
test
pop
flds
flds
jnp
jns
outsb
sbb
xchg
sbb
in
lock
and
pusha
pop
mov
or
jp
cltd
sbb
fbld
inc
sub
dec
push
sarb
add
aas
inc
out
xorl
fdivrs
pop
in
in
cmp
cli
add
pushf
lcall
inc
mov
std
push
xchg
xchg
cltd
iret
dec
jecxz
sub
adc
mov
and
mull
loope
push
sub
nop
xor
push
add
jne
shr
ret
mov
es
sbbb
ret
test
mov
mov
ljmp
out
pushf
dec
mov
jmp
ljmp
push
push
push
data16
popa
test
or
push
pushf
mov
mov
mov
push
icebp
dec
push
dec
stos
mov
xchg
ret
into
and
jns
jne
or
mov
xchg
lea
dec
xchg
fabs
es
sub
dec
dec
inc
mov
scas
imul
mov
cli
test
push
jp
add
stos
jmp
lds
imull
add
aaa
sbb
sbb
sbb
nop
and
xor
cwtl
scas
popf
jmp
adc
subl
data16
test
pop
pop
shlb
add
in
cld
inc
or
xchg
fwait
mov
and
jl
dec
in
out
sbb
not
dec
test
popa
xor
rclb
and
jno
ja
sarl
mov
and
inc
add
lea
pop
cmpsb
sub
mov
les
inc
cli
sbb
cmp
push
test
int3
repz
push
or
adc
es
mov
das
inc
lea
cmpsb
and
aas
das
out
mov
or
nop
jb
or
mov
fisubrl
fnstcw
mov
mov
out
in
pop
push
ficompl
popa
jae
icebp
push
rcll
xor
push
into
cmpsl
push
aas
cmpsb
fnsave
dec
cmpsl
sub
fsubl
les
mov
jmp
icebp
sahf
add
scas
push
stos
jg
jns
jo
xchg
rorl
mov
inc
sub
imul
cmp
aas
mov
lret
fs
aam
jge
test
mov
cli
imul
stc
popf
jp
icebp
fs
rclb
ja
xchg
call
jle
popa
fwait
pop
lock
mov
adc
inc
jne
add
mov
lahf
rolb
stos
jl
sti
push
or
mov
jecxz
jl
shll
enter
xor
rcrl
daa
xchg
mov
mov
pop
addr16
cltd
inc
adc
lods
jno
out
shll
inc
cmpsb
xchg
adc
loop
xrelease
push
sub
test
dec
mov
clc
inc
xchg
in
das
sub
popa
addr16
jns
sbb
push
dec
xor
pop
cmp
mov
cmpsb
in
cmp
jb
mov
fwait
insb
bound
push
add
repnz
outsb
push
lods
std
dec
mov
out
add
jecxz
movsb
outsb
mov
call
mov
add
sahf
sub
jo
aas
cs
jbe
shl
stos
insb
lds
jmp
lods
pusha
push
hlt
out
inc
jmp
mov
sbb
outsl
and
sbb
insb
inc
fsubl
aam
pushf
test
sahf
inc
mov
cmp
add
aad
adc
loop
adc
lahf
mov
or
cmp
sub
pop
stc
xchg
dec
fdivr
pop
scas
dec
into
push
inc
jge
fwait
std
clc
enter
das
fstpt
aaa
mov
or
cmpb
bswap
adc
pop
nop
xor
mov
pusha
push
mov
xor
fwait
xchg
cmc
std
push
xor
cmpsb
jbe
inc
mov
dec
push
jne
sub
es
sbb
testl
fstl
or
sti
inc
push
mov
jl
scas
xor
mov
ret
outsb
lea
fs
shl
mov
dec
inc
or
sub
pop
push
push
xor
and
stos
out
das
dec
mov
aas
out
movsl
cs
int3
add
jne
fcoml
and
sbb
dec
jo
in
daa
pop
sbb
lcall
data16
repnz
fucomip
inc
in
loopne
ja
push
add
push
jmp
mov
loope
daa
sbb
xor
lds
int3
aam
in
xchg
jp
mov
lds
and
dec
xor
push
add
test
in
loopne
ja
pop
cs
cld
and
lahf
mov
inc
stos
out
lcall
jg
cmp
call
jl
es
bound
fwait
xorb
sahf
test
loope
loopne
sarl
sub
fisubrs
jae
je
xlat
ficompl
mov
pop
pop
gs
popa
fimuls
fmuls
icebp
ljmp
pop
push
outsb
push
cmp
push
mov
jo
cmpsl
mov
orb
das
push
xchg
out
insl
push
mov
in
inc
pcmpeqw
sti
ret
test
sti
sarb
xlat
cwtl
movsl
pop
inc
cmp
and
lret
loope
mov
test
andb
cmp
mov
mov
xor
sbb
enter
sbb
insl
push
in
rorl
aad
sub
test
clc
add
iret
movsl
xchg
bnd
cwtl
mov
sahf
cmc
testb
sbbb
jmp
jo
movsb
mov
scas
dec
sarl
sub
sub
mov
adc
filds
test
test
add
cmc
push
into
xor
or
add
jge
scas
repz
aam
loop
cwtl
dec
fistpll
push
shrl
ljmp
xchg
jnp
lret
bound
bnd
mov
in
lds
cs
push
movsb
pop
insb
and
lcall
push
or
inc
push
cmc
fidivl
mov
shl
fildl
pop
or
xchg
sub
pop
and
in
jns,pt
sub
adc
call
mov
mov
sbb
arpl
test
mov
lret
xchg
bnd
pop
into
ja
jecxz
es
sahf
dec
out
adc
or
inc
data16
dec
fidivl
adc
mov
stos
jle
xchg
fistpll
fstp
sahf
push
int3
repz
popf
sbb
cmp
dec
idivb
ja
lret
jae
mov
mov
stc
and
int3
sub
or
adc
pop
das
idiv
jl
jmp
addl
orb
sahf
je
cmp
xchg
mov
test
loope
push
dec
loope
and
movsl
push
xor
mov
sbb
int3
lods
push
push
pop
addr16
dec
or
scas
clc
dec
lcall
pop
and
leave
jle
leave
lcall
shll
fstps
mov
cld
daa
push
movsl
mov
mov
inc
enter
xchg
out
test
xor
stos
sbb
out
xchg
in
or
or
xlat
addl
push
dec
cmp
and
sti
mov
test
push
xchg
cmpsb
imul
push
add
jo
or
rcr
ja
xchg
testb
fldcw
xchg
pusha
and
inc
mov
cmpsl
or
jno
dec
push
xchg
jge
loop
in
inc
xchg
cmp
popf
pop
push
sbb
mov
pop
mov
push
lea
add
rcl
mov
lods
mov
xlat
and
repz
pop
add
lahf
mov
pop
cmp
mov
orl
xlat
mov
push
arpl
push
xlat
les
pop
es
mov
mov
pusha
lock
mov
outsl
fstps
cmp
xchg
mov
mov
push
push
and
je
pop
addr16
loope
or
bound
jecxz
push
shll
sbb
aaa
out
cmp
sub
bound
pop
out
mov
mov
cmpsl
adc
xor
pusha
add
rcr
cmp
jle
in
in
outsl
in
ud1
adc
hlt
rorl
daa
ds
es
and
add
pop
sub
push
push
push
inc
or
mov
sbb
sub
inc
xor
mov
adc
aaa
dec
pop
popa
stc
ds
adc
sarl
js
movsl
pop
pop
pusha
rorb
orb
daa
cmpsb
hlt
xchg
sub
cs
xchg
cld
insb
test
or
lds
xchg
arpl
ss
jecxz
mov
arpl
out
lret
dec
loop
adc
fbld
stos
shrl
mov
call
ds
push
mov
mov
sub
repz
inc
in
std
sbb
test
and
lret
mov
sahf
imul
push
addr16
mov
xchg
jno
mov
movsb
add
cmpsl
sahf
jo
mov
aad
mov
mov
movsl
mov
jg
pop
stos
push
xor
pop
push
xchg
cli
push
push
cltd
jecxz
or
repnz
pop
mov
test
mov
fs
test
in
nop
mov
loope
or
mov
dec
pop
gs
mov
xchg
mov
jg
xlat
or
lock
flds
out
mov
mov
imul
iret
sub
loop
movsb
mov
in
movsb
adc
sub
pop
push
push
dec
push
mov
add
or
dec
xchg
addb
stc
xchg
or
icebp
repnz
cli
cli
push
inc
and
in
pop
clc
mov
cmp
shll
inc
cmp
sbb
fisttpl
scas
and
pusha
sub
add
or
mov
aam
xchg
jg
ss
lahf
sbb
out
popf
or
push
xor
shrl
xchg
sub
rcr
and
pushf
in
mov
or
movsb
sbb
leave
cmc
sbb
xor
jns
cmp
rolb
into
icebp
push
inc
dec
push
shll
mov
sbb
bound
jo
add
xor
or
jge
push
adc
fstp
pop
pop
ficomps
arpl
and
xor
add
in
movsb
cld
cmp
mov
ret
lret
test
stos
lock
aam
jns
cmpsb
std
xchg
addr16
nop
cmc
sbb
lock
inc
mov
imul
ret
push
cs
xchg
imul
in
or
cmp
rolb
fldcw
dec
imul
ds
mov
xor
andb
lea
inc
xchg
imull
sub
mov
mov
ret
scas
dec
popf
dec
fst
shrl
jecxz
popf
push
xchg
mov
or
fsubrs
in
mov
cltd
dec
or
cwtl
stos
push
sbb
mov
leave
mov
test
pop
sahf
cmp
sbb
xchg
movsl
int
jbe
test
mov
xor
pop
xlat
enter
mov
mov
mov
jnp
adc
inc
pop
and
sahf
gs
arpl
lahf
jge
inc
xor
cmc
or
and
jmp
xor
xchg
cltd
in
inc
fs
push
int3
jg
xchg
dec
lds
mov
mov
dec
ret
lods
push
ss
xor
jmp
mov
xchg
aad
out
xchg
or
pop
sub
movsb
inc
mov
aas
ja
cld
and
or
mov
out
pop
aas
test
mov
popf
mov
fsubl
push
mov
cmp
out
outsl
pop
mov
mov
add
xchg
es
jnp
xor
xor
mov
pop
jl
xchg
mov
and
push
out
aas
outsb
adc
push
mov
cmpsl
pop
addr16
sub
addb
pop
sub
push
mov
cwtl
cmp
faddl
dec
xlat
fwait
push
pop
lcall
popf
pop
xchg
es
dec
xor
shrb
mov
jg
add
sbb
std
fldt
out
ficoml
lea
pop
xor
fsubs
xor
insb
add
cmp
je
push
xor
ds
out
test
xlat
mov
sub
fstl
loopne
loopne
add
mov
pop
outsl
mov
pop
pop
mov
testb
nop
jne
ror
imul
cmp
scas
stc
push
loope
pushf
mov
push
inc
je
jmp
ret
lods
sub
pop
push
call
lahf
cmp
testb
push
lcall
ja
sbb
jmp
rolb
out
jno
js
arpl
out
pop
xchg
arpl
outsb
fisubs
and
inc
adc
sbb
inc
fstl
imul
sub
sub
mov
and
ret
or
in
mov
xor
lock
cmpsl
or
das
and
pop
jb
test
ja
inc
dec
push
or
fsubrl
shlb
in
sbb
xchg
repnz
lods
repz
xchg
sbb
mov
mov
gs
pop
in
cmovae
lret
flds
mov
dec
xchg
mov
nop
test
arpl
icebp
add
sbb
xor
dec
test
fadds
std
xchg
loop
jne
lock
aad
loopne
roll
jns
mov
xchg
jg
inc
pop
inc
pop
and
xor
daa
pop
loope
add
xor
sub
push
outsb
or
push
and
in
lods
sbb
mulb
lcall
cmp
ss
dec
in
lahf
imul
push
fdivrp
jmp
inc
jns
out
add
fnstcw
sub
jp
inc
int
mov
push
out
dec
pop
inc
mov
adc
aaa
ja
ss
fucomip
aas
cmp
mov
int3
add
ljmp
pop
lods
ds
dec
dec
and
xor
mov
push
push
mov
and
xor
loopne
push
sub
lret
xchg
loopne
xchg
jbe
mov
div
cmpsl
sbb
loope
xchg
xchg
cli
in
scas
add
cmpsl
mov
call
sbb
mov
fisubrl
dec
rorb
cmpsl
outsl
add
imul
sti
loop
ds
lret
pop
mov
in
je
dec
push
mov
in
pop
dec
and
shl
inc
dec
dec
out
aam
aas
scas
movsb
inc
pushf
add
out
js
cwtl
in
cltd
jmp
jae
les
ret
mov
mov
call
pop
jnp
movsb
aaa
fidivrs
lahf
and
mov
in
inc
or
mov
lds
loope
cmp
or
fcmovnu
add
push
sti
loope
push
push
cs
gs
jmp
dec
push
add
cmp
xor
mov
movsl
adc
rcll
pop
adc
xchg
aas
lds
mov
jl
dec
sub
sbb
nop
adc
pop
and
dec
fdivr
int
testb
mov
bound
xlat
and
hlt
mov
sbbl
jp
stos
ret
ret
outsl
movsb
inc
rol
inc
push
fdivs
jb
lock
jp
stc
std
mov
loopne
push
cmp
xacquire
pop
jbe
push
pop
sub
shrl
hlt
mov
mov
jo
bound
xor
push
xchg
je
popf
cmp
std
mov
jmp
fwait
dec
outsb
fmuls
int
cmpsb
loope
cld
jns
loopne
mov
pop
mov
cmpsb
jbe
stc
fstpl
lret
testl
jns
mov
rorb
adc
jmp
gs
or
push
cmpsb
ffree
rcrl
xchg
shrb
ja
stc
jae
stos
or
cwtl
jge
int
sub
add
mov
arpl
dec
sti
xor
sub
rcll
lret
xor
faddp
outsb
xor
mov
adc
pop
jmp
lahf
faddl
jns
mov
xchg
out
outsl
dec
sub
add
outsl
push
outsl
outsl
aad
scas
test
ja
imulb
cld
jbe
push
lods
xchg
dec
addr16
add
loopne
aaa
insb
pop
icebp
aas
cli
push
jmp
dec
jl
fwait
adc
into
push
push
dec
add
jo
dec
push
sub
ss
inc
mov
adc
ret
cmp
stos
rorb
fcompl
pop
fwait
es
xchg
daa
xor
or
dec
mov
adc
sub
pop
or
sbb
ret
inc
out
pop
fnstcw
or
sub
cltd
xor
inc
and
and
jl
ljmp
xchg
and
push
cld
push
inc
lods
inc
test
mov
mov
push
cmp
ja
xor
into
fwait
fiaddl
jp
jl
lcall
testb
ffree
leave
aas
xor
shlb
outsl
aaa
inc
pop
inc
lods
pop
and
xor
xchg
jo
sub
sbb
push
mov
fucomi
pusha
jle
cmp
cmp
inc
mov
jmp
jle
push
add
adc
mov
movsb
xchg
rcl
cltd
push
lods
pop
call
inc
shl
and
popf
jbe
scas
repz
call
and
out
adc
pop
andb
mov
jbe
pop
adc
inc
lcall
and
hlt
or
sahf
imul
cmp
and
pop
iret
mov
xchg
cmpsl
sbbl
inc
and
insl
jp
adc
mov
mov
in
leave
aas
fs
stos
xchg
mov
jae
scas
stos
pop
sbb
adc
xchg
pusha
cltd
mov
in
lcall
xchg
test
inc
out
jns
and
inc
mov
xchg
cmp
dec
push
pop
pop
adc
adc
movsl
sub
inc
lcall
aad
dec
push
mov
lret
push
xor
fildll
lret
adc
repnz
lods
or
fsubrs
mov
rcrl
subl
ffree
cmpsb
and
adc
push
cld
test
test
sub
xlat
pop
sbb
xchg
dec
cltd
jmp
call
mov
jge
sahf
inc
in
pop
or
and
scas
mov
nop
into
push
jae
pop
test
es
mov
and
imul
add
add
jmp
lahf
mov
in
sti
dec
cmp
movsl
fs
out
pop
test
sbb
push
add
test
aaa
jno
sub
int3
mov
dec
mov
ds
push
push
movb
and
aaa
mov
mov
xchg
pand
xchg
push
cmpsb
push
inc
outsl
jmp
rcll
lcall
and
rcr
movsb
sbb
rcpps
jge
jge
pop
mov
lea
sub
jl
pop
leave
pop
popf
loopne
or
push
pop
leave
inc
mov
pop
fmuls
pop
xor
adc
mov
push
mov
adcl
and
inc
mov
add
mov
stc
lcall
mov
loopne
cwtl
pop
add
add
jnp,pn
xchg
dec
andb
dec
lcall
sbb
inc
sub
jle
inc
cmp
loop
and
xchg
push
outsb
pop
inc
pop
cmp
sbb
ret
sbb
fwait
and
mov
pop
inc
lock
dec
subb
inc
test
adc
cld
push
pop
iret
hlt
mov
sub
aam
lds
cli
into
dec
lds
mov
mov
mov
push
shlb
jbe
cli
inc
leave
fdivrp
push
in
mov
mov
add
test
ds
out
xchg
mov
sub
xor
mov
mov
mov
hlt
push
pusha
jl
xrelease
aas
add
mov
add
sbb
push
imul
in
cmc
icebp
sar
mov
push
sub
orb
xchg
fcompl
and
insb
dec
cld
je
test
or
and
adc
mov
xlat
out
mov
adcb
fcoml
enter
sub
dec
adc
arpl
maskmovq
negl
push
ret
mov
nop
bound
lret
out
sti
cmpsb
roll
fwait
jg
std
xor
call
or
dec
sbb
insl
inc
fst
sub
add
idivl
xchg
sbbl
mov
mov
lcall
sbb
int
pusha
in
rcrl
shl
mov
xlat
insl
inc
xor
push
gs
into
xor
xor
pop
in
pop
jbe
pop
pop
sub
into
mov
or
int
sahf
out
mov
fmull
mov
cmc
scas
xchg
jg
cmpsl
push
mov
insb
mov
pop
popa
jae
sub
fiaddl
loop
icebp
jle
mov
sbb
in
cmc
mov
push
mov
shlb
shlb
rclb
fstps
arpl
sub
mov
push
test
cmp
jns
dec
sbb
out
insl
sub
inc
sub
jle
fldl
push
sub
hlt
inc
scas
pop
mov
pop
xor
stos
fidivrl
add
jno
xchg
jno
push
adc
iret
stos
fdivl
lret
test
dec
out
cmp
push
jecxz
mov
fs
fsubrl
mov
xor
adc
dec
cmp
imull
aam
pushf
outsb
fldenv
movsl
lret
xorb
sub
mov
int
or
and
std
fs
adc
jecxz
fisttps
and
or
dec
mov
out
push
xchg
mov
mov
inc
imul
sbb
mov
mov
mov
pop
dec
jns
adc
cltd
leave
pop
ja
push
push
out
push
cmp
xchg
rorl
mov
jmp
pop
pop
jnp
lret
in
test
pop
out
mov
pop
loopne
xchg
leave
outsb
das
xchg
xchg
jo
sahf
sub
movsl
sub
lock
aas
sub
or
jle
lea
out
out
jns
sub
out
push
mov
fisubrs
out
mov
mov
xor
dec
addl
sub
int3
push
pop
add
stos
sub
test
and
mov
imul
ret
push
scas
mov
adc
dec
add
in
mov
inc
mov
mov
es
loope
test
dec
sahf
mov
negl
std
jmp
fidivrs
fsubs
mov
xchg
in
shlb
clc
fnstcw
adc
dec
mov
rol
pop
subb
iret
mov
push
xchg
jo
aad
inc
int3
fildl
fsubrs
push
push
mov
aaa
dec
arpl
push
iret
adc
mov
pop
xor
sub
sti
stos
sbb
xor
sub
lea
in
hlt
inc
fcmovbe
repz
cmpsb
jae
in
clc
lock
insb
lods
mov
adc
test
into
stos
and
insl
roll
rorl
sbbb
pop
xchg
adc
movsb
ret
add
lods
lret
in
mov
xchg
push
mov
cmp
mov
in
push
popa
sub
mov
push
imul
addr16
insb
jae
xchg
xchg
aas
test
les
shll
and
dec
js
mov
or
push
jno
into
call
jle
push
and
fnstsw
rcl
jno
inc
repz
ss
int3
adc
stos
fists
xchg
aam
daa
movb
fmull
leave
dec
sub
loope
add
int
mov
and
int3
add
push
not
jne
pushl
inc
push
cmp
stos
int3
orl
push
pop
inc
stos
pop
jg
lods
les
fnstcw
rorl
fistpll
lea
and
fcomps
stc
xchg
sti
push
lret
pop
xlat
xchg
insl
adc
test
push
xor
dec
js
pop
inc
fcmovu
jmp
add
test
jp
push
jle
fs
fisubrs
fldcw
mov
inc
mov
scas
mov
jle
pusha
roll
inc
xlat
divb
cmpsb
sub
cmpsl
clc
xchg
cs
jg
dec
nop
or
inc
dec
ss
or
or
dec
push
add
lods
sbb
bound
stos
aad
lret
inc
lret
daa
lret
push
outsl
aas
xchg
inc
rsm
sbb
sbb
rorb
mov
aas
stos
add
call
jns
ljmp
cmp
nop
loope
and
mov
insb
out
stos
or
push
fwait
jle
push
loop
pop
inc
out
stos
push
push
push
inc
pop
inc
mov
inc
sbb
adc
xchg
xor
test
sbb
mov
pusha
mov
adcb
icebp
dec
out
das
xor
or
mov
pop
popa
push
sub
movsb
cmpl
pop
js
add
sub
dec
or
cmc
push
push
mov
jo
adc
fwait
loope
jecxz
mov
jo
icebp
mov
ret
call
dec
in
int3
inc
mov
adc
imul
mov
ja
xor
cmp
ljmp
xor
outsl
clc
in
push
mov
cmpsb
push
sar
arpl
iret
sti
in
xchg
xor
dec
jg
mov
enter
sbb
sbb
cltd
movsb
orb
cli
outsl
out
ret
cli
in
sub
cmp
pusha
add
pop
out
loopne
out
roll
or
dec
xchg
and
mov
xor
and
jae
stc
add
inc
pusha
int3
stos
subl
jno
xchg
mov
test
inc
ds
stc
mov
mov
jg
jns
inc
jl
pop
cmp
imul
xchg
adcl
lods
pop
or
mov
icebp
cmc
int
jle
pop
ret
jae
pop
lock
test
fwait
cmp
dec
xor
add
inc
sbb
pop
pop
push
inc
insl
movsl
call
ss
ficoml
sbb
mov
mov
add
inc
mov
int
repz
les
test
je
xor
popf
int3
jp
adc
loopne
push
xchg
mov
adc
dec
fs
dec
pop
mov
mov
in
add
dec
jb
cmp
into
jbe
inc
mov
lret
pop
sbb
push
test
mov
lcall
das
mov
lret
push
inc
out
pop
rolb
pop
push
jmp
mov
mov
outsb
out
pop
sbb
bound
push
inc
andl
add
lock
fisubl
push
in
push
cli
sbb
popf
pop
inc
mov
add
mov
notl
xor
cmc
sub
mov
and
adc
fcom
inc
mov
insb
scas
push
jle
cli
xlat
cmpsl
push
dec
push
repnz
daa
jle
cli
adc
out
lret
push
loop
mov
jmp
popa
inc
in
ret
aaa
scas
or
push
popf
nop
or
pop
leave
clc
je
sbb
mov
dec
add
xlat
lahf
in
outsb
push
jbe
sahf
daa
sbb
das
or
fstpl
ds
arpl
push
jmp
mov
push
fucomp
mov
and
pop
int3
cmpsb
ss
and
mov
push
insl
mov
shll
jge
dec
hlt
test
inc
cmp
mov
mov
fnstenv
outsb
push
inc
pop
or
sub
xor
lret
xchg
pusha
adcb
xor
xchg
sti
xchg
sub
mov
cmp
lea
loope
add
pop
stos
out
xor
inc
jbe
out
inc
xchg
and
push
mov
jl
fldz
jg
notb
adc
out
push
shlb
lretw
jle
pusha
mov
adc
adc
cmp
lcall
xchg
in
clc
xor
psubusw
dec
dec
ror
cmpsl
ljmp
add
sub
sub
lods
movsl
xchg
inc
inc
or
adcl
mov
add
fsubr
and
inc
iret
jbe
mov
push
test
fdivrl
pop
ss
xchg
sub
aas
xchg
xchg
scas
out
sbb
pop
cmpsb
nop
pusha
aas
test
jg
fisubl
test
dec
mov
mov
inc
shrl
ljmp
loop
loopne
mov
stc
dec
pop
xchg
cmp
dec
aas
aas
xchg
filds
sub
dec
test
sbb
leave
and
pushl
enter
testl
bound
cmp
rorb
not
stc
add
cli
insl
mov
and
xchg
xor
lret
fcomi
sub
cli
daa
jne
sbb
push
mov
push
jge
aas
jb
stos
scas
mov
ss
mov
or
mov
daa
mov
pop
mov
mov
mov
push
or
cwtl
out
lock
lahf
mov
push
ljmp
loope
test
and
inc
add
mov
mov
adc
add
mov
mov
sbb
and
add
inc
mov
mov
inc
mov
rolb
lods
push
dec
xchg
adc
mov
jns
int3
sahf
lods
cmp
ret
sahf
rcrb
fsubs
in
xchg
in
sarb
popa
jge
pop
xor
inc
dec
cmp
negl
pushw
sarb
sbb
scas
scas
ds
xor
scas
sub
jge
push
loop
lods
iret
dec
push
std
pop
fnstenv
jb
adc
scas
jns
jbe
mov
and
int3
push
push
ret
aad
add
neg
xchg
out
add
push
test
cmp
das
and
andl
lret
out
mov
xchg
pop
fldt
test
fstpl
pop
jmp
icebp
mov
mov
icebp
mov
xor
sbb
cli
repnz
cli
push
sub
fmul
sbb
insl
jns
xchg
xor
mov
adc
lock
fsubr
or
fsubp
dec
jb
jle
ret
inc
hlt
mov
and
mov
outsb
push
pop
decb
out
out
inc
or
clc
loop
mov
in
adc
pop
sbb
mov
cld
adc
adc
data16
clc
test
sbb
push
jmp
jb
lret
mov
and
js
in
pop
add
movsl
lock
pop
inc
mov
add
jmp
jns
sbb
and
icebp
icebp
push
mov
sbbb
cmp
mov
iret
inc
mov
icebp
jns
enter
lret
and
dec
pop
push
xor
xchg
mov
enter
cmp
xor
and
lock
loop
mov
jge
lahf
add
xor
shl
arpl
std
js
cld
je
dec
and
cli
and
or
adc
fs
inc
test
dec
aas
stos
fyl2xp1
mov
out
xor
xchg
fwait
xchg
pop
jecxz
loopne
mov
gs
sti
std
push
addl
dec
bound
mov
push
pop
call
push
sub
lock
inc
push
and
or
xchg
lods
adc
hlt
jno
stos
int
das
enter
mov
xchg
jns
shl
xor
push
les
jg
and
dec
test
andl
xchg
insb
mov
divb
mov
jge
imul
mov
xor
mov
sbb
dec
push
jbe
loop
cmp
pusha
xchg
cmpsl
inc
dec
mov
in
xor
out
mov
sbb
pop
xchg
cli
sub
add
lahf
lahf
and
add
sub
and
mov
scas
mov
mov
inc
aad
je
pop
dec
roll
pop
jns
cmp
stc
inc
rcr
rorl
mov
adcl
nop
mov
adc
fs
pop
pop
add
fdivrp
ljmp
movsb
and
lcall
cmp
stos
mov
xor
cld
les
push
pop
mov
add
sub
lret
mov
cld
fdivl
pusha
dec
out
mov
imull
xchg
or
gs
cli
mov
push
or
cmc
test
imul
mov
data16
std
push
out
ljmp
mov
pop
imulb
dec
and
and
cmp
fistps
mov
jle
mov
inc
mov
lock
cmp
outsl
dec
enter
clc
pop
movsb
movsb
push
daa
mov
hlt
sarb
or
lock
cmp
jl
lock
ficomps
int3
jo
push
js
cli
push
ret
pop
inc
mov
rolb
adc
mov
inc
mov
and
ljmp
ja
xchg
xchg
cmp
jge
xchg
test
or
push
mov
xor
cli
stc
sbb
cmp
mov
mov
es
cltd
pusha
jno
test
xchg
gs
sahf
mov
xor
bound
or
mov
push
leave
stos
push
mov
pop
lret
push
int3
cwtl
into
xchg
in
in
popa
jl
inc
popa
push
jns
xchg
sub
iret
push
xor
test
fstl
dec
push
loop
stos
mov
xchg
sti
xor
daa
cmpb
pop
jns
js
pop
dec
scas
in
out
stc
ret
dec
lds
cmp
lahf
mov
gs
lahf
jle
inc
out
fidivrs
jecxz
mov
hlt
pop
xlat
std
pop
dec
mov
outsl
dec
shl
int3
addb
dec
fildl
pop
or
loopne
add
push
imul
fdivs
sub
fbstp
loope
adc
pop
or
and
test
mov
test
add
pop
or
push
scas
cld
negb
jl
add
mov
scas
jecxz
cmpl
xlat
adc
sub
cs
test
loopne
lret
arpl
pushf
cs
xor
inc
dec
mov
andl
jp
adc
adc
cmp
add
pop
cmp
dec
push
pop
add
cwtl
scas
dec
in
pop
scas
push
rcll
sbb
ds
ja
mov
add
das
pop
adcb
adc
mov
in
jb
popa
mov
jecxz
fstl
mov
add
sti
mov
in
jne
int3
or
inc
jmp
xchg
sbb
data16
inc
mov
push
enter
sti
je
adc
jae
outsb
in
pushf
imul
inc
inc
idivl
mov
push
lods
icebp
cmpsl
cli
mov
popa
decl
cmp
jl
lea
and
jp
mov
or
mov
iret
les
mov
es
xor
xor
mov
cld
outsb
loope
adc
or
mov
sbb
xor
push
out
and
adcl
mov
les
push
icebp
mov
mov
adc
jae
or
incl
fsub
aaa
mov
jge
push
add
mov
stos
stc
das
leave
mov
out
xchg
lcall
sbb
push
lods
ret
and
push
call
negl
jo
mov
div
out
pop
popf
lret
lret
lret
lds
rclb
mov
sub
ret
dec
inc
mov
push
jmp
sbb
lret
scas
ljmp
cmp
mov
faddl
jns
dec
data16
cmp
pop
stos
jmp
jp
jb
dec
pop
mov
stos
sub
cltd
or
movsl
mov
mov
adc
jmp
js,pt
pop
or
test
sti
cmp
fnstcw
mov
mov
pop
jge
test
xchg
cmp
lahf
sub
out
in
mov
adc
sub
rcrl
jo
outsl
lods
scas
push
and
cmp
enter
sahf
leave
adc
fld
dec
pop
cmpb
push
and
push
call
mov
mov
push
mov
in
lds
cmc
xor
lret
call
dec
xor
filds
sub
mov
loope
mov
nop
pop
data16
arpl
stos
addr16
pop
mov
cmpsl
jns
mov
cmp
xor
setnp
fists
fldl
jl
lret
mov
lods
out
dec
das
mov
mov
pop
into
arpl
cmpsl
adc
ffreep
mov
mov
cmc
rclb
loope
popa
jno
pop
dec
jo
dec
shr
dec
cmp
jp
inc
and
inc
cmp
fs
xorl
sbb
mov
xchg
and
cmp
in
jmp
test
addr16
jne
int
sbb
out
push
outsb
cmp
fidivrl
mov
in
cmpb
pop
aaa
or
xor
inc
and
clc
adc
pop
mov
adc
add
into
push
loopne
stc
mov
mov
pop
adc
push
in
pop
mov
repnz
mov
repnz
outsb
push
sbbb
fstp
lods
mov
sbb
adc
movsl
jmp
or
mov
incl
mov
mov
cwtl
fadd
or
xchg
xchg
enter
xchg
stc
dec
push
inc
mov
jge
mov
pop
mov
inc
or
clc
sbb
mov
push
push
mov
test
adc
in
add
es
jl
sub
xor
lret
rcrl
fbld
enter
js,pn
cmc
push
int
popa
addr16
push
push
xor
cwtl
mov
addr16
je
xor
xor
push
pop
loope
dec
fcmovbe
arpl
icebp
mov
cmp
sbb
jp
out
lret
clc
sbb
dec
shl
setae
jns
cs
data16
loope
sarb
scas
test
imul
add
hlt
dec
mov
bound
mov
push
mov
std
mov
and
push
call
and
mov
pop
mulb
or
icebp
mov
mov
fiadds
enter
cmp
fldenv
and
xor
mov
mov
sahf
pop
inc
movsb
jae
xchg
add
push
push
lds
inc
fmuls
and
jae
das
js
jg
inc
popf
mov
scas
rcrb
push
xor
lcall
dec
das
adc
mov
imul
shll
leave
outsl
mov
mov
push
sbb
loopne
mov
mov
rorl
mov
leave
dec
mov
adc
mov
cmp
jo
sub
jbe
xor
sahf
jge
addr16
xor
lahf
sarl
addl
pop
loop
es
hlt
rorb
mov
mov
aaa
fbld
stc
in
mov
leave
das
pop
adc
push
or
aaa
lret
push
lock
adc
jecxz
mov
fildl
xor
sub
int
icebp
call
mull
pop
xchg
addr16
bound
jecxz
sub
icebp
cmp
xlat
aam
xchg
imul
ss
push
lock
sub
lcall
movsb
add
cmp
ljmp
dec
in
mov
sub
xor
jne
sahf
xor
lds
in
fnstcw
jae
call
sbb
add
xchg
aad
dec
outsl
lds
and
xor
jge
hlt
dec
cld
mov
mov
lcall
les
je
loopne
mov
ja
into
mov
clc
mov
dec
and
rorl
mov
ds
push
dec
rolb
sbb
negb
pop
iret
cmp
xchg
adc
test
cmc
xchg
sahf
lret
mov
adc
test
sti
add
js
mov
xchg
test
fcomps
movsb
push
mov
cmp
push
xchg
pusha
nop
fildl
adc
xchg
adc
loop
faddl
jbe
adc
xchg
test
jb
adc
mov
xchg
mov
sti
mov
push
rolb
push
out
arpl
and
lods
mov
inc
add
loope
jge
cltd
sbb
insb
call
add
loopne
xor
push
int3
daa
lahf
aad
je
dec
lret
ja
cmp
in
movsl
xchg
pop
pop
jbe
shl
or
cltd
in
fs
js
arpl
cmpsb
in
mov
fnstenv
xchg
dec
dec
shlb
cld
xor
loop
stos
in
test
xchg
dec
movsb
aas
mov
sbb
fnstenv
xlat
loopne
lret
into
sbb
les
mov
xchg
cmp
add
inc
das
dec
add
mov
ja
dec
xor
insl
test
or
xchg
sbb
outsl
ret
mov
push
mov
and
push
sub
cs
mov
sahf
fstps
out
cli
ss
xor
cmp
call
in
sub
jle
xchg
sarb
pop
pop
xchg
stc
push
push
cmpl
and
fwait
mov
fsubs
cmpsb
loopne
loop
daa
inc
or
mov
xchg
pop
cltd
cmp
mov
and
roll
pop
cmc
inc
sahf
les
adc
mov
add
sbb
mov
add
repnz
cltd
and
test
adc
popf
jne
leave
jmp
mov
rorb
fcomi
add
jbe
push
lahf
cmp
ds
mov
sub
lcall
dec
imul
fnstcw
xchg
icebp
cmpb
andl
add
cmp
in
mov
sbb
and
mov
movsb
add
cmp
popl
arpl
adc
or
iret
jp
xor
xor
rorb
rolb
lea
arpl
fdivrl
adc
push
mov
add
pop
sbb
cmpsl
dec
cmp
sbb
mov
rol
and
outsb
nopl
pop
or
lcall
cmp
daa
push
sub
adcb
sbb
xchg
or
aaa
pushl
or
mov
and
ds
addr16
inc
popf
je
adc
insl
sti
dec
inc
lret
mov
inc
xchg
xor
jo
ljmp
jge
xchg
ja
mov
int3
mov
ret
jp
mov
not
scas
and
sahf
popa
inc
mov
les
pop
test
and
sub
pop
mov
mov
lahf
xor
push
pop
jge
mov
xchg
inc
cmp
fisubl
mov
or
push
icebp
lods
test
jge
and
cmpsb
sub
adc
or
push
pop
hlt
xchg
pop
fwait
outsl
mov
imul
push
fldl
out
rolb
dec
cwtl
shl
aad
mov
or
sbb
push
sub
insl
mov
jl
and
fistl
cld
std
rcll
fsubrl
cmp
mov
sarl
popf
jnp
aad
push
pop
jl
jb
jne
rol
sub
dec
xor
jl
sbb
imul
lahf
lds
adc
sbb
adc
jbe
adc
scas
popa
mov
gs
dec
xor
insb
js
mov
push
inc
push
jle,pt
jo
bound
mov
mov
cmc
add
movsb
dec
xor
and
imul
cmp
push
cli
push
dec
out
xchg
jle
call
aas
mov
cmp
jnp
stos
xchg
dec
inc
inc
adc
inc
xchg
mov
js
popa
push
lods
and
sahf
cmp
push
pushf
pop
jmp
dec
into
sti
out
orb
stc
jg
ja
out
cmpsl
jb
or
idiv
popl
xchg
ror
mov
ret
outsl
scas
push
sbb
xchg
sbb
imul
rcl
fstps
cmp
sbbb
scas
nop
fnstcw
adc
pusha
les
jns
pushf
pop
add
aad
test
xor
fbstp
in
and
imul
pop
and
jmp
or
test
or
comiss
mov
out
jp
jmp
lods
xor
push
push
and
mov
dec
cli
ja
cltd
in
mov
fiadds
aad
rolb
jg
push
xor
dec
or
addr16
jbe
repz
mov
sbb
mov
bound
and
mov
movsb
add
add
leave
pusha
mov
enter
sbb
xchg
in
test
mov
xchg
mov
stc
adc
pop
and
data16
mov
bnd
test
out
fistl
push
mov
shrb
add
push
rolb
nop
sub
cmp
mov
test
enter
lret
out
sbb
dec
clc
sbb
mov
sbb
repnz
pushl
ss
movsl
jns
fcoml
in
push
pop
xchg
push
sub
data16
sbb
stc
sbb
cmp
mov
xchg
mov
jne
shll
pop
daa
mov
sub
jmp
scas
pop
sub
xor
jns
dec
into
sbb
test
pushf
fisttpl
lret
inc
ror
add
push
in
in
mov
push
icebp
cmp
fcoml
cmp
dec
iret
fdivrs
outsb
lea
out
inc
sub
test
ss
push
mov
xor
movsl
mov
dec
sub
jno
out
mov
icebp
cwtl
mov
lea
pop
repnz
add
les
dec
scas
push
mov
pop
inc
push
adc
in
sbb
addr16
push
cli
jno
or
xor
sbb
push
mov
dec
dec
out
xor
inc
iret
sub
xlat
lret
out
cld
mov
jl
cmp
mov
lock
jb
pop
fldcw
into
iret
rclb
adc
movsl
xor
sub
mov
repz
mov
adc
inc
idivl
inc
rcrb
subl
and
push
mov
mov
mov
pop
lea
cli
pop
movsb
sub
add
push
gs
inc
mov
add
in
jmp
push
ret
lret
mov
cmp
mov
cmp
in
sub
jae
in
lcall
pop
add
and
fwait
pusha
and
mov
pop
icebp
push
mov
mov
push
push
pop
sbb
addr16
inc
imul
mov
pop
mov
dec
jb
test
xchg
mov
dec
push
pop
add
je
sub
pop
push
addr16
lcall
or
mov
out
or
repz
mov
in
sbb
orl
movsb
les
push
push
fwait
inc
in
pop
aaa
mov
movsb
jb
or
bound
xchg
xor
enter
and
lea
adc
mov
cld
mov
mov
jb
mov
xchg
outsl
jb
nop
icebp
push
push
pop
inc
adc
jp
insb
popl
dec
xorl
rorl
movsl
sbb
int
stc
and
jle
or
dec
xor
js
aas
arpl
jo
xchg
pop
jle
mov
daa
aaa
adc
add
inc
imul
dec
add
sbbl
leave
jbe
ss
test
dec
xor
pop
mov
jns
dec
push
or
or
shrl
and
hlt
int3
dec
ret
mov
cmc
and
imul
xchg
pop
sbb
ljmp
fadds
sbb
pop
lock
iret
addr16
push
out
jns
sbbl
xchg
pushf
bound
mov
daa
sub
mov
lret
arpl
cmp
jae
popf
push
in
mov
outsl
or
mov
adc
adc
xchg
sub
popa
in
sti
repz
xlat
mov
mov
dec
xor
bound
loop
je
add
xor
iret
sub
lea
mov
iret
mov
push
cld
insl
decl
adc
fs
sahf
lds
push
lods
adc
or
ljmp
pop
mov
push
test
xchg
cli
sub
std
orb
std
mov
cmpsb
adcl
cmp
in
sub
xchg
adc
mov
sbb
aam
out
cmp
ret
xchg
push
mov
xor
or
cmp
and
xchg
push
mov
mov
xchg
dec
push
add
test
jecxz
jecxz
das
xor
inc
sub
pop
push
mov
es
aam
ss
jae
arpl
fsubl
ret
xchg
push
shl
xor
loop
pusha
jno
mov
icebp
xchg
xchg
dec
dec
mov
scas
lods
push
testb
leave
dec
jns
or
pop
mov
fwait
mov
clc
cltd
push
shrl
mov
jmp
enter
inc
test
mov
or
cwtl
roll
and
loop
leave
pop
int
or
lea
pop
jge
int
scas
jno
outsl
jle
push
sbb
icebp
pop
mov
mov
push
mov
jle
loope
arpl
sub
popf
xor
xrelease
mov
popa
mov
andb
xor
add
dec
pop
je
mov
inc
or
out
mov
ljmp
mov
mov
ja
cmp
inc
mov
sbb
pusha
fisttpll
arpl
and
mov
jmp
das
jecxz
xchg
adc
dec
stos
adc
xchg
lahf
mov
xor
dec
sub
or
cmp
jbe
js
jg
cmp
push
mov
cwtl
pop
orb
leave
inc
dec
add
out
fiaddl
xchg
sbb
cs
clc
cld
sub
jbe
jne
inc
push
std
fcmovne
mov
jae
dec
scas
sbb
cmpsb
mov
sub
fwait
nop
xchg
aaa
push
push
inc
inc
and
push
mov
jecxz
push
cmpl
cmp
pop
pop
inc
adc
stc
sub
mov
lock
in
std
push
xor
jmp
dec
fcoms
out
je
outsb
xchg
sbb
mov
loop
jle
test
mov
add
ds
mov
or
scas
scas
mov
or
mov
pop
in
aas
sahf
in
fstpl
add
xchg
and
mov
daa
jle
inc
test
xchg
sub
in
cli
test
fs
adc
std
call
jmp
xchg
lods
and
mov
and
jl
cltd
lods
out
xor
retw
pushf
sub
mov
insl
insl
adc
popf
les
jecxz
sub
repnz
inc
ficomps
pop
push
das
inc
sub
iret
jo
add
mov
xchg
mov
and
pop
fldt
add
pop
push
push
insb
cmc
mov
andl
rclb
mov
rclb
and
sub
jb
mov
mov
inc
dec
jp
je
insl
xchg
sbb
inc
xchg
cmpl
scas
enter
in
jo
int
cmp
pop
xchg
jbe
mov
jmp
sub
je
ljmp
inc
sbb
lods
in
mov
sub
aaa
add
adc
les
les
test
js
jae
jb
adc
or
push
aaa
jmp
inc
xor
lock
push
add
pop
cmp
nop
daa
icebp
sub
call
mov
aaa
or
jne
push
add
xor
mov
ret
mov
adc
xor
or
dec
mov
mov
sbb
or
shl
hlt
repnz
subl
daa
cmp
jo
inc
loopne
in
dec
adc
mov
test
inc
leave
xchg
push
sti
pop
clc
fsubrl
pop
xor
mov
adc
jmp
js
pop
test
insl
adc
xchg
int3
sub
pop
shlb
jecxz
in
xchg
aaa
xor
mov
cltd
mov
sub
mov
rcrl
clc
sahf
cmovno
repz
lahf
ja
xchg
mov
cmp
mov
add
and
pop
fmull
imul
add
lahf
push
xor
jb
pop
xor
gs
jnp
mov
cs
ret
mov
mov
scas
jb
inc
fistpll
addr16
test
adc
cli
or
push
aaa
fistpll
imul
ds
out
dec
cwtl
add
cmp
movsl
mov
pop
es
inc
sub
sub
call
add
push
pop
mov
scas
inc
sti
jmp
and
cltd
cmp
inc
mov
call
fxch
sti
and
shrb
adc
lret
mov
fcoml
iret
outsb
and
sbb
bound
ja
dec
jl
lock
adc
mov
adc
pushf
fwait
in
inc
fdivrl
repnz
mov
jae
icebp
mov
icebp
mov
ret
mov
jno
pop
sahf
add
push
adc
ja
sbb
rorl
lahf
add
in
pop
leave
mov
sbb
and
mov
imul
dec
cmp
add
adc
outsl
dec
or
mov
add
pop
xchg
cmp
lds
sbb
ret
inc
lods
adc
push
cmpsb
mov
es
mov
jae
pop
and
push
insb
loop
aas
aad
jnp
mov
mov
mov
das
add
outsb
or
leave
daa
mov
ljmp
jmp
loop
jge
cltd
shr
insb
jmp
sub
call
outsb
or
cmc
lret
or
pop
push
fwait
push
xlat
out
pop
incb
xlat
mov
sub
ret
lret
rcr
cmp
jo
push
jecxz
rcr
shll
stos
fbld
test
mov
repnz
shll
mull
push
fwait
dec
repz
cld
int3
mov
lea
shrl
mov
pop
mov
movsl
jle
and
jo
jp
jl
push
mull
inc
iret
add
adc
fadds
hlt
rcl
sarl
icebp
into
test
jns
mov
clc
stos
mov
sub
aam
and
adc
and
push
adc
dec
imul
xor
adc
xchg
fldcw
shrl
loop
sbb
push
fldenv
rdtsc
sbbb
ljmp
dec
or
xchg
inc
insb
cld
aaa
inc
test
mov
mov
push
addr16
inc
lock
sbb
xor
mov
repz
fdivp
addr16
pop
jge
mov
mov
stc
jae
sub
xchg
or
popa
jg
xlat
xchg
or
sbb
fcmove
cmp
sbb
jae
dec
cmc
pop
jecxz
rolb
xchg
mov
sbb
sub
cmpsb
sub
fs
and
sbbl
mov
inc
scas
pusha
mov
xchg
fcomps
push
call
mov
adc
gs
ljmp
fstl
clc
data16
das
aam
nop
cmc
mov
stos
fists
jge
adc
pop
andb
fwait
loopne
fmul
gs
add
dec
push
adc
mov
adc
xchg
mov
pop
and
or
and
pushf
jnp
sbb
or
stos
ss
addl
cmpsb
aas
cs
pop
jmp
bound
das
ret
adc
out
xor
dec
out
cld
imul
mov
push
mov
daa
inc
mov
stc
sub
pop
loop
sahf
cmpb
aaa
mov
xchg
aad
dec
call
add
pop
add
push
mov
xchg
inc
cmpsb
stc
loope
and
mov
jae
inc
dec
aaa
fmulp
je
push
hlt
mov
xchg
subb
insb
xchg
fsubs
or
jns
pop
push
mov
data16
in
sti
clc
cmp
mov
std
bound
or
xlat
mov
and
mov
sbb
xchg
std
jge
stos
mov
xchg
inc
adc
push
sti
push
xchg
out
in
aam
ret
jne,pt
cltd
push
shll
sbb
jns
mov
dec
js
popf
pop
or
lods
cmp
popl
repnz
jo
dec
dec
test
and
into
jle
orb
sarl
jmp
and
push
ja
or
xor
xchg
jmp
lods
push
int3
stos
into
rorb
ljmp
fldenv
fbstp
ljmp
or
test
les
add
lods
aad
rol
mov
ret
es
mov
pushf
inc
mov
movsb
or
add
mov
or
jno
push
cmp
sub
xor
mov
fs
jbe
sub
aam
imul
ss
and
fistl
xor
int
aad
push
dec
and
es
lock
hlt
fsubl
negl
hlt
xchg
dec
je
or
iret
inc
cwtl
xchg
aas
rolb
adc
inc
jbe
ljmp
stos
out
nop
pop
or
or
inc
je
test
into
cmp
xchg
lret
and
adc
pop
mov
lock
xlat
add
dec
mov
xchg
push
popf
mov
ficoml
xor
stc
cmpb
mov
xchg
push
push
xchg
or
bound
cmpsb
push
outsb
aas
inc
xor
xor
aaa
jmp
cmp
movsl
lea
popf
test
ss
sbb
add
sub
mov
stc
cwtl
pop
dec
cs
sub
inc
jle
insb
cmpsl
shll
sub
add
aad
mul
push
pop
loopne
shl
out
adc
jbe
sub
pop
push
lock
sbb
xlat
add
nop
sbb
mov
out
imul
test
daa
sub
les
out
push
push
jbe
mov
xor
push
call
ds
jecxz
xor
sar
sahf
mov
cwtl
leave
imul
or
jle
or
in
jl
fstl
sub
dec
push
sarl
stos
or
push
push
int3
inc
aaa
mov
add
dec
add
sub
dec
cmpsl
in
into
sbb
cmp
xchg
mov
lea
jb
mov
aad
dec
jecxz
fists
and
xor
leave
inc
lock
sub
call
jno
lock
cmpsl
pop
nop
pop
mull
test
pop
fistl
cmpsb
insl
mov
add
mov
pop
call
xor
jns
jne
mov
neg
loopne
cmp
xor
in
inc
jmp
adc
repz
mov
int3
cs
enter
jns
cmpsl
je
clc
pusha
lahf
xchg
stos
fprem1
arpl
shl
stos
pop
sbb
mov
pop
les
mov
call
aas
push
cmp
push
aaa
out
push
pop
push
mov
mov
adc
jnp
mov
pop
adc
or
arpl
popf
mov
hlt
aaa
add
cmp
imull
xchg
fabs
ror
push
push
push
repz
add
lret
fstl
sbb
bound
daa
loop
inc
jmp
mov
mov
mov
push
push
adc
aaa
push
pusha
and
mov
add
insl
jne
je
cmpsb
adc
jecxz
pop
jmp
fcmovbe
insb
xor
xlat
mov
jecxz
aaa
inc
es
inc
add
enter
cmp
adc
pop
dec
xchg
add
jne
pusha
jo
sahf
mov
inc
sub
adc
jmp
pop
mov
testl
adcb
xor
stc
xlat
test
lcall
dec
vunpckhps
cli
push
or
cmp
sub
ret
pop
adc
hlt
jne
outsl
push
cmc
es
and
mov
mov
movsb
sbbb
sub
imul
je
adc
mov
push
fninit
sbbb
jle
inc
ficomps
sub
mov
jno
jecxz
pop
fnstcw
cmp
fidivl
cmpsb
sub
push
mov
aaa
movsl
ja
cwtl
cmpsb
clc
cmpl
scas
or
xchg
mov
cmp
pop
stos
mov
les
lds
into
pop
or
insb
sahf
xchg
pusha
and
aaa
fpatan
sub
xchg
xchg
push
push
jl
xor
jnp
stc
fsubl
fidivrs
insl
inc
xchg
out
add
cltd
mov
lahf
add
pusha
fsubrs
popa
loop
jns
dec
rclb
cwtl
das
pop
mov
mov
dec
pop
icebp
pop
in
pushf
repnz
cmp
xchg
data16
push
stos
hlt
out
mov
ljmp
inc
adc
adc
decb
shlb
jg
iret
in
sbb
cmp
lcall
les
test
mov
xchg
out
das
push
cmp
add
iret
xchg
hlt
mov
pushf
fnstenv
cmp
xchg
sub
mov
mov
lahf
lret
fnsave
xchg
inc
or
or
and
xchg
pop
inc
scas
mov
cmc
sti
mov
cld
dec
sbb
aaa
dec
cmp
out
add
in
sub
pop
aas
jl
lea
pop
mov
cmp
cmp
xlat
mov
inc
movsb
ret
dec
push
pop
mov
mov
dec
out
les
xchg
inc
test
sub
push
cltd
std
ljmp
sub
loopne
fistpl
pop
das
mov
fdivrl
icebp
sbb
xchg
inc
and
mov
mov
jmp
inc
cwtl
imul
pusha
jmp
ss
mov
mov
mov
dec
outsb
ss
rcrb
jmp
repz
add
pop
cmp
pop
popa
pop
leave
xor
pushf
xor
inc
xlat
mov
pop
in
inc
pop
xchg
or
testl
pop
jns
imul
push
cmp
cli
rolb
mov
ret
mov
lcall
filds
in
movsl
dec
mov
push
xchg
enter
sub
add
pushf
das
incl
jmp
daa
sbb
cmp
pop
lea
test
fsubr
or
pop
leave
adc
cwtl
mov
imul
das
mov
fisubl
shrb
xchg
jnp
sub
aaa
push
in
fdivs
aas
icebp
xchg
mov
push
repnz
imul
jns
sbb
lahf
jle
and
rcl
fnstenv
fnstenv
sarb
ficompl
imul
lock
clc
mov
inc
rorb
push
ror
cmp
fmul
sti
mov
pop
xor
or
les
mov
jo
inc
pop
xchg
push
pop
je
mov
dec
mov
pushf
xor
iret
add
cltd
xchg
popf
push
aam
in
xchg
push
movsl
loopne
xchg
inc
fld
cmpsl
clc
popa
shl
xchg
xchg
and
mov
scas
hlt
sub
lds
jmp
push
ror
cmp
sahf
rolb
xor
mov
jb
sub
mov
sbb
inc
jmp
adc
and
icebp
in
dec
mov
pop
repz
push
mov
inc
iret
mov
ds
jbe
and
out
fucomi
dec
adc
fwait
pop
jo
and
mov
scas
add
cs
push
sahf
icebp
xchg
fisubrl
push
fisubrl
inc
sbb
movsl
pop
xorb
loopne
mov
sub
cmp
or
cmp
and
pop
testl
idivb
cltd
fwait
sub
pop
push
leave
outsl
sbb
fdivr
mov
mov
dec
pop
repnz
jb
pop
gs
inc
in
cmp
push
push
jmp
push
pop
lcall
sbb
mov
adc
out
pop
adc
lds
jae
push
inc
mov
inc
insb
pop
dec
pop
fcmovbe
popf
mov
scas
std
push
ret
mov
jno
xchg
out
repz
xor
movsl
adc
lods
xorb
ljmp
aad
outsb
rcll
fbld
leave
shl
cmp
ret
in
mov
inc
ret
xchg
orl
xchg
jmp
testl
mov
stos
out
fcom
dec
les
jo
xchg
xchg
in
add
in
sbb
in
ljmp
aad
pop
push
mov
out
pushf
lret
aad
xor
test
add
adc
aam
inc
pop
mov
sub
push
outsb
or
pop
lret
call
push
push
pop
or
xor
push
mov
jp
inc
sti
and
inc
lods
cmc
ret
add
or
jp
aad
jmp
frstor
cmc
jge
xor
aas
pop
push
or
cs
mov
loop
ret
hlt
xor
or
ret
pop
mov
or
inc
xchg
aad
and
mov
lahf
jecxz
xchg
cwtl
or
mov
loop
dec
cmp
es
sahf
pop
cmc
xor
loope
outsl
repz
out
aad
lcall
addb
cmp
adc
xor
or
and
mov
push
popf
cmpsl
es
insb
leave
or
cli
fs
mov
scas
test
fnsave
scas
jl
pop
or
inc
rcrb
aam
add
dec
test
lcall
jo
adc
or
mov
int3
dec
dec
int3
push
cli
sahf
pop
push
decl
test
or
popa
sbb
xchg
lods
xchg
mov
sub
loope
inc
rcrl
test
xchg
jnp
call
imul
ds
mov
pop
idivb
das
jmp
aam
push
dec
addr16
push
pushf
mov
xor
loope
inc
xchg
push
loop
stos
mov
xor
jbe
pop
in
popa
dec
and
cmpl
pop
aam
aas
push
cmp
ja
xor
imul
ss
jecxz
push
bnd
ret
fstpl
std
inc
adc
ds
mov
push
test
shll
mov
mov
sub
dec
sbb
or
out
add
jns
inc
enter
cmpl
rol
push
xor
loop
dec
jecxz
sub
cwtl
push
cmp
scas
sub
xorb
adc
inc
decl
add
adc
and
dec
icebp
or
dec
jge
xchg
adc
adc
enter
sub
imul
ret
dec
divl
out
mov
imul
dec
lock
aad
sahf
shr
lods
mov
push
out
jg
fcompl
add
dec
ret
xor
pusha
jmp
sbbl
cli
jecxz
imul
pop
add
mov
xchg
dec
pop
rcr
arpl
roll
je
sbb
dec
adc
mov
lahf
nop
sub
pop
insb
mov
pop
iret
push
rcrb
dec
xchg
adcl
inc
cmp
inc
mov
fwait
js
lahf
lods
adc
imul
fcoms
test
ss
imul
ss
mov
fcoml
mov
inc
pop
stos
sub
adc
fistl
int3
sub
out
arpl
mov
sbb
lahf
lods
fsubl
mov
jns
inc
add
push
dec
in
movsb
andb
xchg
add
jle
repnz
icebp
stc
into
and
push
or
add
adc
adc
outsb
xchg
lods
ret
shr
mov
scas
loope
lcall
in
mov
lcall
push
pusha
lods
fldl
es
nop
and
mov
les
push
jns
pop
mov
lret
mov
and
xchg
sahf
mov
jno
mov
sub
fmull
mov
mov
sti
inc
sbb
add
and
jne
cmp
pop
xchg
adc
or
lret
mov
mov
jge
loopne
inc
xchg
lods
jbe
cmpsl
ss
outsl
ja
rclb
fs
cmp
inc
out
shl
mov
test
xchg
and
jb
pop
dec
jae
cmp
inc
repz
dec
mov
dec
mov
test
adc
roll
sub
xchg
xchg
aad
push
sti
lds
movsb
sub
adc
les
push
stos
xchg
push
jae
repnz
dec
or
roll
mov
push
xorb
test
idivb
outsl
sldt
mov
icebp
xchg
adcb
jp
inc
scas
xor
jg
into
push
or
cmpb
mov
cmovg
ret
mov
cmp
adc
xor
adcb
xchg
dec
inc
push
inc
xchg
xchg
jnp
push
daa
lahf
lods
push
dec
xor
fbstp
xchg
dec
dec
fcom
mov
loope
dec
in
iret
sub
push
adc
mov
jg
imull
push
adcb
mov
or
xchg
lds
jbe
push
mul
cmp
cltd
repnz
fwait
cmp
dec
push
bound
xchg
add
adc
jnp
cs
xchg
adc
dec
and
pop
mov
lods
subb
les
xchg
sub
stos
inc
mov
pop
pop
sbb
adc
sub
mov
dec
mov
pushf
mov
rorb
adc
pushf
or
sub
inc
stc
jmp
mov
push
or
mov
fildl
inc
or
adc
add
push
xor
fnstcw
lods
xor
or
mov
mov
ficompl
mov
jns
gs
jle
pop
popf
pop
mov
cmp
sahf
or
and
pop
mov
cmp
fbstp
xchg
std
mov
push
in
pop
jnp
mov
mov
aam
mov
adc
test
out
dec
cmp
xor
and
pushf
aaa
sbb
lods
lahf
dec
inc
pop
xchg
jecxz
fyl2xp1
iret
and
adc
iret
mov
js
cmc
test
xchg
jns
inc
add
jbe
inc
xchg
movsb
sub
mov
xchg
fnstcw
push
inc
jg
xor
mov
and
adc
xchg
jns
aad
mov
push
sbb
add
es
pop
pop
enter
sahf
into
lret
and
dec
lods
adc
xchg
sbb
dec
pop
int
ret
cmp
adc
sbbl
out
inc
cmc
dec
pop
les
mov
inc
xchg
push
shrl
notb
adc
subb
cmp
rcr
sub
xchg
test
or
jae
jmp
pop
adc
call
jg
lds
insb
movsb
and
pop
aam
push
push
cmp
into
sbb
adc
sub
sbb
loope
jecxz
xchg
cwtl
inc
cmpsb
xor
pop
push
test
jnp
sarb
sub
jle
fcomps
dec
sub
les
mov
xchg
xor
std
stc
jno
mov
sbb
arpl
jns
and
repz
sbb
xor
xchg
in
cltd
in
call
repz
cmc
orb
sub
xor
xlat
dec
and
popa
xchg
xchg
out
repnz
xchg
sub
pusha
push
cmp
sbb
aam
dec
and
add
pop
or
cmc
or
and
shr
mov
and
shrl
mov
jae
cmp
shll
loope
test
and
mov
cmpsb
add
jmp
das
xchg
cmp
pop
repnz
les
fcoml
fsubl
insl
psllw
mov
lahf
out
stos
fwait
jb
and
adc
jmp
mov
stc
jg
push
lds
cmp
lock
insb
stos
data16
in
ror
out
mov
lods
sbb
pop
push
out
nop
cld
mov
addr16
xchg
rdpmc
punpckhwd
mov
aas
lret
lahf
ret
das
loopne
dec
mov
and
cltd
rcrb
out
hlt
pop
dec
cmp
mov
mov
gs
mov
fnstsw
mov
movsb
xlat
sbb
mov
xchg
cmp
ja,pt
cld
call
jg
test
lods
adc
clc
sbb
mov
pop
mov
mov
dec
xchg
inc
les
sbb
push
cmpb
fmull
jp
ja
xor
xor
nop
daa
fmul
inc
lds
mov
sbb
fisubrs
ret
push
icebp
jl
pop
and
dec
and
jmp
xchg
sub
sbb
pop
pop
sbb
mov
cmc
push
cmp
stos
jb
jns
in
jbe
xchg
test
popl
sbb
rclb
addr16
pop
orb
fidivrl
cmp
cmpsl
arpl
rcrb
rorb
test
fs
jnp
rcrl
add
test
mov
inc
push
icebp
jne
popf
test
sbb
fwait
pop
sbb
aaa
push
mov
fs
adc
outsb
xchg
cmpsb
repz
imul
and
cltd
jl
pop
xor
jnp
lret
bound
sbb
rorb
xchg
jnp
jp
or
ss
cltd
sub
mov
or
adc
subb
in
scas
popl
in
ljmp
jmp
mov
insl
flds
stos
aad
cmp
test
mov
pusha
cmp
add
roll
sahf
or
push
xorb
pushf
sbb
je
push
mov
push
xorb
insl
mov
lock
push
cld
fsubl
es
ret
adc
scas
and
outsl
push
add
fwait
inc
mov
js
pop
lret
dec
xlat
subb
cmpsb
arpl
mov
hlt
dec
lahf
mov
adc
adc
dec
xor
mov
add
je
outsb
and
mov
popl
xchg
sti
fdivs
bound
fidivrs
rcr
mov
mov
dec
add
fcmovnu
xchg
adc
add
xchg
sbb
sub
lock
js
mov
cmpsl
fists
addr16
xchg
mov
fucomip
insb
mov
cs
out
and
sub
xorb
aas
imul
jg
or
add
mov
repz
inc
xchg
stos
xchg
aam
adc
inc
lds
outsl
xchg
cs
jns
adc
xor
adc
and
mov
xchg
or
std
xchg
mov
stc
mov
cwtl
jl
xchg
js
loopne
push
pop
mov
mov
mov
sub
inc
movsb
fsubs
and
lods
addl
pop
jb
negb
push
inc
lods
xor
mov
sbb
lock
out
push
pop
jp
and
pusha
out
sbb
sub
fbld
pop
cs
loope
cltd
fwait
mov
movsb
jecxz
sub
pop
jg
icebp
inc
or
xlat
lds
cmpsl
inc
jmp
push
sbb
enter
jno
sbb
lret
jns
add
dec
in
xchg
jo
cmp
lahf
mov
pop
mov
xchg
cmp
shrl
out
mov
icebp
daa
dec
ret
add
std
cmp
push
lahf
mov
lahf
pop
loopne
aaa
or
ret
lret
cmpsl
addl
fdivs
pop
mov
push
dec
xor
push
insb
not
xchg
in
inc
scas
lret
push
stos
fs
cmp
lcall
xlat
lcall
push
mov
xchg
jmp
sbb
mov
jge
fsubl
mov
and
cmp
inc
mov
cmp
push
mov
inc
stos
and
push
add
insl
pop
sub
dec
push
cmpsb
sub
hlt
sbb
xchg
rorl
pop
dec
push
cwtl
clc
mov
sbb
test
sbb
shr
or
mov
adc
push
pop
out
cmc
lcall
adcb
movsb
cmpsl
mov
cmp
mov
imul
jae
jle
inc
sub
dec
mov
iret
mov
insb
inc
leave
push
inc
ds
push
jnp
jmp
jno
cmp
push
scas
cld
call
push
enter
and
or
jb
xor
xchg
push
cmc
pop
repz
and
fadds
add
sarb
adc
cmp
pop
in
mov
add
negb
dec
inc
and
mov
or
repnz
pop
xchg
jmp
stc
cwtl
test
jno
adc
clc
adc
daa
mov
pop
cmp
inc
jb
insl
dec
pop
rcrb
lcall
lods
pop
sbb
pop
ror
cmc
cmp
dec
pop
scas
das
xchg
bound
repz
pop
aaa
testl
jbe
add
mov
testb
sbb
push
clc
pushl
jge
xchg
fwait
ja
jl
lret
repnz
and
jl
das
cmc
sub
inc
pop
cmpsb
in
push
scas
or
shlb
insl
sbb
loope
add
and
push
sbb
pop
push
xchg
daa
sub
push
lret
lods
sbb
pusha
xchg
and
adc
pusha
scas
leave
repz
movsl
pop
stos
xchg
jg
stos
push
test
ret
sahf
rorb
mov
dec
out
fbstp
addr16
mov
mov
aam
repz
int3
in
in
into
lret
rcll
cmp
xchg
in
jmp
outsb
sbb
popf
outsb
es
push
dec
scas
fldt
mov
data16
xchg
push
jl
ret
jns
dec
xor
xor
jae
sbb
outsl
je
ret
dec
push
cmp
inc
add
sbb
aad
pop
fcmovne
jecxz
pop
adc
mov
dec
inc
dec
mov
inc
clc
ljmp
in
enter
mov
pop
mov
add
mov
sti
fs
and
mul
dec
cltd
fs
das
pop
fsubrl
movsl
jae
nop
sbb
mov
jecxz
addb
push
lock
sub
jl
out
negb
arpl
mov
out
xor
out
push
push
cmpsb
xor
out
test
push
push
enter
pop
sbb
xchg
dec
push
lock
pop
jp
shlb
fldl
leave
dec
jo
movsb
inc
imul
pop
cmp
fwait
fdiv
sub
jne
pop
adc
dec
and
cli
cmp
or
das
daa
ficomps
xor
out
ljmp
inc
xchg
loopne
gs
sub
adc
sbbl
adc
pop
lods
and
repnz
dec
in
decl
xor
stc
andl
pop
mov
sbb
cmp
fistpll
jnp
mov
pop
mov
xchg
or
add
int
xchg
pop
dec
lods
jne
jne
pop
dec
movsb
insb
stos
inc
pusha
lcall
sbb
cwtl
dec
mov
flds
or
cmp
pop
sbb
cmp
push
pop
dec
xorb
mov
add
dec
inc
cmc
addl
jbe
fnstcw
repz
mov
inc
add
or
iret
clc
sti
or
adc
mov
cmovae
test
popa
or
xchg
and
xor
pop
or
xchg
lods
inc
push
jnp
popa
pop
xchg
sbb
adc
pop
out
lahf
jbe
cmc
lds
rorl
out
xchg
das
push
out
cmp
push
pop
mov
mov
push
mov
lock
fistl
sub
cmpsb
bound
mov
cmp
out
insl
addl
call
mov
out
lcall
negb
xchg
pusha
dec
and
inc
pop
cmp
or
jg
push
and
push
pop
cmc
cmpsb
push
int
mov
sub
or
scas
fneni(8087
stos
push
sub
daa
fisubrs
mulb
or
push
cmp
mov
ret
jo
rol
xor
hlt
xor
in
mov
inc
or
out
enter
and
sbb
xor
mov
push
jbe
movsb
cmp
cmpsb
jge
scas
scas
fwait
or
sub
stos
dec
popf
dec
jmp
xchg
rcrl
lahf
jne
xchg
imul
sahf
out
rcrb
fistpll
pop
mov
ljmp
or
jnp
repz
outsb
dec
sahf
adc
cli
pushf
cvttps2dq
mov
fisubs
dec
sub
sahf
aam
xchg
stos
orl
inc
push
adc
daa
jo
inc
inc
push
sarl
adcl
jg
gs
inc
shll
cmp
mov
lcall
cmc
jle
lret
popa
dec
fs
adc
sbb
add
mov
and
xchg
push
adc
pop
test
cmp
xor
cmp
icebp
sub
jmp
pop
fnsave
scas
shll
fildll
fimuls
not
mov
lahf
inc
mov
call
pop
jmp
andb
pusha
mov
mov
popf
xchg
rcll
into
testl
add
or
add
out
cmp
jb
push
enter
and
mov
jae
dec
inc
lea
push
push
or
cmp
push
jp
pop
xor
pop
ss
data16
jecxz
push
mov
mov
xor
popf
es
stos
cwtl
mov
jecxz
rorl
test
push
jge
push
xor
arpl
pop
inc
xchg
adc
lret
or
jecxz
aam
pop
pop
fldenv
gs
mov
xchg
xchg
sti
push
es
mov
fildl
mov
test
and
sub
add
xabort
icebp
mov
push
test
inc
adc
imul
insl
sbb
mov
xchg
repz
xchg
js
mov
out
outsb
iret
cmpl
xchg
sbb
rcr
insb
inc
sub
sbb
movsb
aas
test
sbb
fists
pop
test
xchg
jecxz
push
les
enter
out
add
nop
mov
je
mov
sub
and
or
push
test
lock
mov
dec
scas
dec
mov
xchg
mov
je
repz
test
dec
sub
jmp
jp
fwait
sahf
push
pop
push
jle
xchg
sbb
push
push
push
lcall
push
repz
jle
inc
ljmp
inc
lahf
xor
xor
popa
xchg
or
cli
sbb
push
popf
cmp
daa
mov
out
cmpl
dec
insl
xor
icebp
inc
add
sub
fisubs
das
lcall
xchg
adc
ds
test
sbb
lret
sbb
rcrb
pop
imul
repz
mov
dec
loopne
scas
jbe
sbb
pusha
jl
repz
pop
inc
pop
out
jl
push
ret
div
addl
pop
ficoms
xlat
out
fildll
add
cmc
xchg
das
and
mov
fstpl
adc
setns
pop
test
jecxz
in
lret
cwtl
jo
stc
pusha
fwait
pushf
xor
insb
mov
inc
push
push
mov
test
adc
adc
cwtl
jb
push
fs
mov
int3
mov
test
sbb
xchg
xchg
int
scas
or
xchg
aad
sub
and
mulps
xchg
sbb
cmp
test
stos
adc
dec
push
repz
jecxz
dec
aaa
push
cltd
addr16
adc
adc
ds
adcb
ret
xchg
leave
into
pop
mov
lcall
sub
out
mov
sti
mov
adc
adc
mov
sbb
mov
frstor
test
xor
cmpsl
imul
enter
mov
cltd
push
xchg
aas
sub
add
lret
mov
scas
repnz
shlb
fdivrs
in
vmovss
or
cmp
loopne
das
les
xchg
push
imul
dec
out
loopne
shl
jle,pt
cs
cmp
adc
xchg
mov
sub
push
stc
sarb
repz
jo
enter
xchg
or
dec
pusha
sub
outsb
test
and
add
mov
push
scas
iret
mov
inc
icebp
loope
and
sub
fs
mov
aam
addl
std
mov
scas
inc
loop
incb
pusha
mov
dec
mov
out
in
sub
leave
xchg
or
push
and
es
in
fsts
pop
arpl
xchg
inc
sahf
out
sub
movsb
and
xor
sub
sub
xchg
loop
iret
jno
and
lods
popa
adc
ficoml
cld
dec
fmulp
adcl
push
es
and
jg
cmc
mov
mov
lahf
mov
or
dec
stc
test
sbb
mov
cs
and
test
push
daa
mov
loope
jnp,pn
bound
lret
adc
scas
arpl
xchg
fcomps
lret
inc
lahf
scas
lea
arpl
lock
test
inc
test
pop
or
or
fistpll
bound
cmpsb
shr
sbb
push
lret
jne
lods
not
sbb
mov
loope
xor
arpl
xchg
sub
movsb
imul
sub
mov
es
inc
dec
outsb
repnz
sub
inc
pop
lret
dec
movsb
dec
sub
push
in
add
pop
push
imul
movsb
popf
and
les
js
rolb
mov
stos
and
push
stos
pushf
xor
lods
imul
mov
lret
andl
repnz
xchg
add
mov
in
cmp
mov
lods
sbb
jge
in
je
adc
dec
movb
xchg
aas
inc
cmp
mulb
jmp
insl
fiaddl
mov
mov
loop
ss
aaa
imul
jbe
lahf
sbb
daa
pop
xchg
les
fld
movsb
push
or
fstpl
out
ss
xchg
dec
loop
adc
je
jp
cmp
dec
out
jb
mov
add
jge
mov
pop
push
loope
jecxz,pt
add
mov
icebp
push
add
or
mov
lahf
jnp
pushf
mov
pop
cmp
out
lea
ja
popf
scas
sub
cmp
paddb
sbb
popf
les
lret
lahf
fistpl
xor
pop
aam
cli
push
je
xchg
and
imulb
out
inc
stc
inc
adc
fwait
or
and
xchg
mov
shrl
mov
test
mov
das
push
adc
push
movsl
xlat
outsb
xor
mov
loop
out
cmp
fstpl
pop
lods
cwtl
ds
mov
into
stos
negl
ljmp
pop
jmp
push
mov
movsb
popa
xchg
mov
xor
mov
fwait
js
ja
insl
xlat
clc
xlat
mov
xchg
xor
dec
or
dec
pop
popa
int3
adcl
push
sbb
scas
aam
mov
test
push
lret
push
sub
xchg
sbb
idivb
push
out
icebp
mov
xor
add
aas
pop
push
pop
lds
movsb
sbb
test
jno
out
sbb
test
push
popa
mov
bound
xor
mov
push
dec
push
mov
xchg
shlb
scas
movsl
and
dec
fimuls
into
adc
fisttps
iret
outsb
cmc
mov
bound
push
bound
sbb
or
mov
out
push
sahf
pop
inc
mov
negl
icebp
dec
arpl
and
jmp
push
adc
xchg
push
sbb
imul
js
popf
add
scas
out
in
fisubrs
or
xor
and
shrl
dec
jb
adc
push
loope
mov
xchg
sbb
inc
jle
mov
jmp
lret
or
mov
mov
pop
test
in
add
aam
cmovb
sbb
lock
leave
repnz
data16
or
and
adc
test
add
inc
sub
int
jo
xchg
inc
push
mov
mov
cmc
lods
inc
mov
push
pop
stc
push
jmp
sub
lock
lcall
cmp
out
adc
sub
sbb
xchg
sbb
es
xor
cmp
mov
push
and
sbb
mov
fimuls
testb
pop
sti
icebp
push
aam
jb
jne
rcll
xchg
add
ja
push
add
or
sub
inc
lds
cmpsl
in
xchg
adc
mov
mov
sub
es
icebp
outsl
notb
pop
in
pop
notl
or
fincstp
or
ret
icebp
mov
push
insl
mov
cmp
pop
pop
xchg
xchg
jg
int3
cwtl
mov
xchg
jnp
sub
lret
bound
adc
mov
push
jl
push
cmp
pushf
add
xchg
nop
test
sbb
cmp
dec
sti
pop
jns
adc
test
shl
notb
inc
add
push
fsub
rorb
sub
mov
xor
xchg
frstpm(287
aaa
sub
push
inc
sahf
pop
sub
add
jb
adc
xchg
je
pop
cmpsb
dec
jno
xchg
adc
sbb
cmp
ffree
xlat
iret
cwtl
repnz
mov
mov
sti
scas
call
int3
or
gs
movsl
rcrl
mov
imul
movsl
xchg
loopne
push
add
adc
psubusw
mov
pop
cmpsl
xor
sbb
mov
pop
fwait
sub
pusha
sti
jge
pushf
fwait
fwait
adc
in
and
or
push
stc
push
jge
jns
mov
xor
push
loope
pop
push
and
dec
insb
mov
sub
jns
cmpsl
cli
jns
adc
clc
mov
aaa
mov
mov
sbb
or
movsl
inc
xchg
mov
sbb
test
jnp
ret
sbb
push
arpl
iret
cli
mov
or
or
pop
inc
fstps
sub
and
fldenv
push
or
insb
aaa
dec
leave
imul
push
dec
dec
mov
mov
pop
lock
xchg
sub
call
pop
mov
iret
add
or
sbb
lea
push
push
lret
xor
cmp
fnstsw
adc
xchg
fwait
dec
jb
sub
aas
hlt
add
lods
pop
add
lock
sbb
pop
adc
mov
js
enter
pusha
orb
jns
sbb
mull
xchg
les
jmp
sahf
lods
mov
cmpb
mov
pop
sub
adc
out
pop
notl
fwait
fwait
jecxz
hlt
mov
xchg
jmp
jp
sub
hlt
lea
test
std
out
lds
repz
xchg
inc
loope
ret
fnstenv
jnp
les
mov
aad
mov
je
jmp
push
repnz
adc
pusha
dec
fistps
xor
xchg
nop
and
cmp
dec
sub
cmp
push
js
cs
out
adc
mov
push
cmp
mov
mov
pop
or
pop
out
dec
or
vmwrite
jg
sub
xor
in
xor
inc
pop
add
pop
xor
or
std
leave
lock
call
cld
cwtl
pusha
mov
dec
xor
test
xor
insl
xor
loop
push
mov
cmpsb
sbb
icebp
fwait
push
shlb
addr16
aas
inc
jle
jl
int
mov
test
pusha
sbb
sub
xchg
lret
push
mov
or
lret
arpl
nop
mov
pushf
pushf
dec
cmp
dec
neg
lock
out
or
cmp
mov
sti
jle
pop
call
jle
mov
cmc
mov
inc
adc
in
pop
cmc
xchg
or
xchg
test
test
loop
pop
pop
jno
lds
sahf
aad
mov
mov
repnz
fiadds
ret
popa
inc
or
sub
sub
popa
gs
repz
adc
mov
inc
mov
mov
jmp
in
or
arpl
lret
and
inc
xchg
jg
fs
stos
scas
lahf
sbb
insl
jne
js
addr16
cli
xor
insb
jl
or
std
push
xchg
pushf
test
js
and
inc
mov
div
sar
pusha
push
xchg
rcll
and
xor
jns
hlt
inc
xor
cmpsl
mov
fsub
adc
int
mov
sahf
jmp
xor
pop
test
icebp
or
je
leave
inc
fldl
sub
lods
pop
push
mov
xchg
xchg
add
cs
or
pushf
push
iret
cmp
lret
pop
ret
pop
and
call
mov
in
cmp
jle
mov
pushw
push
mov
cmp
popf
dec
jp
loope
inc
sub
xlat
hlt
jecxz
ror
mov
shll
jno
sub
jbe
adc
sbb
je
push
push
jne
and
push
lret
sub
add
dec
adc
jmp
sbb
cli
xchg
adc
fstpl
loopne
mov
cmp
ss
out
cmp
pop
pop
fs
sub
mov
sub
movsl
push
mov
stc
push
mov
fldcw
jns
mov
fs
dec
movsb
xchg
fstpl
enter
sarb
cli
xorb
lea
fdiv
stos
mull
stos
adc
or
stc
xchg
mov
xor
fisttps
jmp
pushw
cmp
xlat
or
push
inc
mov
les
outsb
loope
cmp
cmp
into
popf
stos
sbb
ljmp
cwtl
cmc
jne
cmp
mov
add
int
iret
mov
rol
addr16
mov
das
testl
push
mov
pushf
xlat
mov
or
xlat
sub
out
movsl
insb
lret
jp
faddl
add
pop
test
and
adc
lock
dec
mov
push
jb
call
jg
data16
data16
lret
sub
stos
xor
imul
aaa
insl
scas
xor
xchg
sti
popa
dec
insb
pushw
repz
add
rclb
mov
and
pop
xchg
shll
pop
aad
jae
mov
cltd
xor
popa
mov
dec
xor
pop
or
cld
mov
stos
adc
pop
iret
out
push
rorb
jns
inc
xor
je
out
ljmp
leave
movsb
and
das
jne
enter
test
push
sbb
dec
sarl
clc
pusha
jo
or
out
je
out
pushf
pop
push
mov
test
dec
jno
jmp
in
sbb
jmp
ja
pop
mov
mov
lahf
cmpsl
pop
std
fsubrp
push
and
mov
jmp
cmp
fists
xor
ror
mov
sahf
lds
cmp
cli
mov
out
nop
add
test
inc
pop
icebp
cmc
imul
add
das
sahf
test
push
xchg
sbbb
jmp
xchg
lfs
rcrb
pop
adc
xor
mov
rorl
mov
adc
popa
adc
out
jl
mov
addl
mov
mov
mov
ja
sbb
jns
sbb
sbb
xor
mov
cmp
scas
xchg
es
aad
add
arpl
mov
cwtl
movsb
add
mov
add
sti
adc
push
in
xor
or
or
jb
pop
lods
arpl
xlat
pop
push
andb
lock
jae
test
cmp
movsl
enter
icebp
push
aaa
xchg
jmp
loop
insb
pop
fcmovbe
fsubs
mov
sub
sbb
or
shlb
pop
lods
cmp
shrb
mov
dec
fdivl
shrl
xchg
sbb
fdivs
fstp
and
out
je
mov
inc
clc
xor
or
addr16
mov
xorb
push
out
xadd
jne
lea
or
repnz
insb
xchg
repz
adc
mov
sbb
sub
nop
shrl
jp
add
test
or
inc
and
rep
cwtl
fwait
jecxz
fistpll
push
or
lahf
ja
js
and
xor
jl
mov
push
jle
repnz
mov
icebp
fstl
dec
leave
test
loop
sub
or
stc
cmp
jl
jb
aam
mov
add
mov
jl
inc
sbb
out
aas
sbb
adc
or
xor
mov
cs
jns
mov
push
cmpl
sti
push
inc
je
hlt
push
in
inc
pushf
insb
stc
cmp
hlt
ss
push
scas
das
pop
push
dec
mov
xchg
test
loope
jl
push
dec
fisubrs
and
popf
jle
sub
add
dec
cmpsl
xor
sbb
xorb
sbb
int3
push
aas
scas
sahf
nop
aas
dec
aas
sbb
mov
gs
cld
in
jne
mov
push
mov
xor
sub
jo
sub
hlt
mov
add
outsb
popa
sbb
sbb
in
repnz
mov
sbb
ret
adc
sarb
ret
test
cmc
push
movsl
or
fidivl
dec
int
mov
scas
mov
jae,pt
adc
mov
xchg
ret
cmpsb
jp
xor
notl
in
push
mov
push
fsts
pop
ljmp
jmp
mov
jmp
or
mov
dec
dec
mov
daa
shlb
nop
xchg
mov
cltd
xor
dec
test
out
lret
movsl
clc
and
mov
mov
lcall
fidivl
outsb
fisttpll
mov
or
mov
mov
adcl
out
pause
cmp
pusha
adc
mov
or
pop
mov
lods
add
lock
add
shlb
sub
lret
and
push
xchg
mov
aad
pop
shl
xor
clc
cwtl
cmpsb
jge,pn
aas
mov
jo
xor
nop
xchg
popf
or
mov
pushf
push
sub
push
ja
call
push
xor
jns
xchg
mov
inc
inc
cmp
or
ficoml
push
jb
pop
lret
adc
sti
mov
pop
stc
aaa
xchg
pushf
or
push
cmp
in
imul
dec
push
lock
mov
js
adc
gs
shlb
inc
cli
xchg
jg
pusha
sbb
push
add
aas
mov
std
jbe
shl
or
repz
or
imul
inc
mov
push
cmp
dec
pop
xchg
inc
xor
mov
push
xchg
dec
cmp
cmp
fnstcw
cmp
push
int3
mov
data16
les
aas
aaa
repz
xor
push
push
mov
rol
js
sub
mov
inc
xchg
fwait
sbb
divb
sahf
dec
mov
mov
lahf
ja
cmc
or
outsl
cli
and
or
mov
insl
inc
mov
mov
xor
ja
ds
lods
dec
or
inc
scas
xor
inc
stos
mov
sbb
push
mov
imul
inc
ljmp
imul
ljmp
xor
lds
pop
gs
mov
xchg
outsb
out
push
stos
jne
xchg
mov
dec
gs
popa
sbb
or
pushf
enter
mov
mov
mov
test
push
test
mov
cmp
xchg
cmp
push
sub
mov
dec
mov
andb
push
sub
inc
inc
test
fmull
lock
dec
cli
add
ja
push
sarb
xchg
aas
mov
or
xchg
jp
mov
add
lods
jbe
and
xor
iret
les
scas
mov
mov
sub
sbb
cmp
xchg
cmp
sub
adcl
or
jnp
cmp
pop
xlat
fldcw
imul
hlt
sbb
xchg
bound
insl
jnp
scas
cmpsl
addl
mov
int3
test
jmp
test
dec
xchg
inc
sahf
mul
dec
or
test
xchg
mov
imul
inc
daa
out
ds
or
or
pop
push
xor
shll
imul
scas
enter
aaa
push
push
roll
sub
lret
out
popf
ficomps
push
push
mov
cmpsl
dec
rolb
mov
xorl
xor
js
mov
cltd
dec
mov
cmc
add
fucomp
clc
jns
sahf
mov
push
cs
lcall
call
movsb
cmovp
cmpsl
test
out
dec
mov
and
and
je
or
adc
xchg
and
sarb
mov
jb
cmp
push
mov
in
sbb
test
sbb
outsl
mov
lds
pop
icebp
mov
iret
cwtl
mov
aaa
lock
cwtl
enter
aam
dec
and
add
js
mov
out
adc
jecxz
adc
mov
adc
sub
out
lcall
inc
fdivs
hlt
adc
cmp
mov
mov
adc
daa
inc
push
fcmovnb
jae
out
sub
fiadds
cmp
inc
mov
pop
loopne
push
ret
push
xor
mov
je
xlat
adc
mov
hlt
jo
fcompl
xor
pop
cmp
push
cltd
sahf
cmp
das
out
jg
xchg
add
adc
mov
mov
jg
cli
scas
jl
inc
sarl
pop
ljmp
mov
sti
pop
push
cwtl
cmp
jecxz
inc
adcl
packsswb
or
pop
xchg
cmc
stos
sti
test
cmp
sbb
push
test
aaa
aas
mov
push
int3
test
iret
cmpsl
push
push
pop
rolb
push
cmp
jo
bound
jge
add
dec
add
ds
imul
addr16
push
iret
bound
mov
rcrb
pop
inc
push
out
fcmovu
mov
inc
popa
mov
sub
test
cmp
jg
mov
fsub
mov
es
lock
push
lcall
cmpsl
xor
pop
mov
sbbb
arpl
and
cltd
sub
sub
repz
xor
cmp
jmp
int
call
shlb
sahf
sub
and
mov
std
xchg
mov
cmpsb
outsb
in
adc
imul
sbbl
adc
cmp
iret
popa
lods
addr16
jne
sub
hlt
add
or
push
add
out
lods
dec
xchg
dec
jg
xor
sub
adc
adc
mov
insl
dec
iret
or
iret
call
insb
push
ror
imull
xchg
sub
pop
outsl
or
or
adc
push
sbb
movsb
add
sbbb
cmc
adc
jne
sub
sub
dec
data16
mov
movsb
sbbl
and
push
enter
push
leave
jns
pop
push
pushf
mov
or
sti
xchg
adc
jne
fcmovnb
fucom
or
inc
xchg
lret
mov
in
sti
iret
push
adc
in
mov
jb
fisttps
and
pop
sahf
aaa
pop
or
ret
mov
push
in
notl
jns
loope
in
test
sahf
jns
mov
dec
outsb
or
sub
in
sbb
lods
cmp
int
mov
pop
outsl
add
mov
mov
mov
data16
fldl
nop
scas
ljmp
lcall
pop
and
dec
aam
xor
clc
xor
adc
add
add
mov
and
adc
call
push
flds
inc
inc
into
dec
push
ss
push
repz
jle
lret
mull
xlat
les
add
mov
outsb
leave
in
or
mov
pop
ret
jns
push
pop
clc
mov
imul
and
cld
aas
cmp
int3
jmp
xor
sub
insb
arpl
sti
inc
stc
addr16
fcom
pushf
rcrl
jnp
lahf
lea
mov
fs
adc
add
push
lret
test
fbstp
in
iret
addr16
rcrl
xchg
outsl
popf
xorb
les
push
rol
add
hlt
shrb
dec
ffreep
aas
in
mov
adc
fucom
sbb
dec
or
invlpg
jns
or
fwait
lahf
cltd
repz
movsl
dec
addb
and
pop
out
inc
fwait
xchg
cmpsb
jp
das
xor
or
test
xor
iret
ljmp
leave
jle
aas
nop
jnp
jns
lock
jno
idiv
es
das
inc
jae
lods
fisttpll
xchg
in
loopne
test
stos
ss
aas
cmp
and
cwtl
push
bound
sub
xchg
xor
mov
and
enter
jne
or
in
sti
pop
jne
push
adc
mov
or
std
rcll
or
adc
sahf
dec
jle
test
sbb
mov
pop
push
fstpt
aad
mov
sub
cwtl
dec
dec
cmc
std
mov
add
addr16
cmpsl
lea
jmp
jnp
and
inc
mov
mov
stc
or
lods
sahf
cli
xor
mov
pop
lock
pop
jb
and
enter
adc
aam
cmpsb
mov
out
xlat
jnp
test
mov
nopl
movsl
out
jb
rcr
sti
sti
movsl
mov
xor
movsl
jmp
out
xor
and
sbb
out
dec
push
mov
pop
aaa
and
sub
mov
aad
lds
jae
adc
add
pop
sbb
adcl
push
xchg
adc
insb
ss
inc
ret
les
scas
cwtl
sub
test
hlt
fcmovnbe
out
pop
push
mov
in
pop
in
daa
inc
aaa
lds
ret
push
and
or
push
sub
adc
aam
insb
xchg
in
cld
test
xorb
in
and
mov
dec
out
repnz
xor
pop
cmp
push
cmpsl
mov
and
clc
mov
gs
lock
jl
data16
mov
mov
pushl
sbb
jb
stos
adc
jge
jb
lods
mov
icebp
mov
or
cmpsb
mov
les
jge
pusha
sub
aas
adc
or
ja
xor
pop
je
lds
test
cs
mov
imul
imul
add
or
adc
or
icebp
ss
ret
movsl
stos
fwait
jo
js
cld
arpl
mov
imul
or
aad
movb
lcall
aam
adc
or
push
in
fnstsw
jle
popw
sub
filds
inc
xor
imull
push
loopne
in
ljmp
orb
mov
popf
test
call
jmp
test
xabort
pop
cmc
cli
fs
ret
mov
xchg
mov
xchg
fs
jg
fisttpl
adc
lret
push
cld
mov
and
jne
sbb
sbb
xchg
repz
fstps
cmp
pushf
add
jnp
mov
fildll
cltd
inc
mov
inc
ret
cmpsl
cmp
push
inc
jno
lea
bound
cmpsb
loop
push
iret
outsb
mov
ss
and
mov
push
ds
sbb
rcll
pushf
sbb
rclb
stc
xchg
ljmp
inc
fwait
cmp
mov
icebp
lret
ds
loopne
mov
adc
lret
mov
jl
loop
adc
stos
movsb
rcr
or
fadds
and
jae
imul
jge
mov
sub
jl
mov
test
pusha
shll
mov
cmpsl
adc
mov
lock
test
subb
in
mov
pop
xchg
testb
mov
mov
roll
fisubl
jg
inc
lcall
cli
pop
sub
fiadds
test
pop
movsl
lahf
and
mov
cmp
dec
sbb
lea
xchg
int
lea
xor
adc
sub
faddl
loope
mov
push
dec
jg
add
xor
fsubrs
stos
jecxz
jne
jl
aas
xchg
js
aad
jmp
mov
lcall
and
or
dec
nop
movsb
enter
jae
mov
repz
cmpsb
int3
roll
cmp
imulb
rorb
lahf
sbb
ret
sbb
mov
and
clc
jmp
cltd
rclb
addr16
fstl
adc
pop
xchg
cmp
fldl
and
sti
imul
in
movsl
mov
cmpsb
inc
lea
lods
outsl
xchg
stos
cmpsl
rcll
in
lea
jne
mov
shl
add
mov
lret
shl
sub
das
sub
mov
adc
leave
or
cmp
xor
scas
roll
scas
sarb
mov
add
lcall
add
mov
or
push
pop
dec
jo
cld
jnp
test
stos
jb
xchg
jo
dec
jl
into
jne,pt
push
and
mov
cmp
jns
lock
sbb
inc
pop
sbb
popl
insl
xchg
mov
dec
mov
dec
jle
add
pop
xchg
ss
cmp
add
mov
dec
jle
and
push
rorb
and
cmp
test
pusha
adc
xor
lcall
jle
mov
cmpsl
out
mov
cmc
int3
sti
negb
cmp
aaa
jmp
lds
mov
aam
jno
lea
pop
call
or
mov
js
dec
iret
xor
sbb
test
add
pushl
lret
lods
cmp
cli
sbb
jo
mov
fsubs
fildll
lock
test
iret
sbb
xchg
popf
jle
out
dec
mov
rcll
xchg
std
mov
xchg
rcrl
pushf
loope
mov
dec
in
daa
xchg
or
jmp
cwtl
stos
cld
push
add
into
sub
ds
jmp
imul
insb
popf
repz
adc
add
and
das
fildll
arpl
popf
into
ret
shrl
sub
jo
pop
mov
push
xchg
pop
pop
push
pop
cmp
es
push
test
mov
jmp
sub
out
pusha
in
sbb
dec
mov
push
test
daa
pop
aas
xchg
rcrb
out
push
dec
sbb
xor
jns
sub
incb
stos
cltd
push
xor
faddl
scas
xor
or
test
or
xchg
nop
imul
cmp
add
mov
shrl
xlat
sub
les
jp
inc
inc
lcall
xor
in
ss
xor
adc
sar
arpl
ret
pop
addr16
xchg
jp
mov
rorb
inc
ficomps
sub
loop
dec
in
ss
cmp
lret
push
inc
mov
add
push
rcrb
mov
or
in
mov
scas
outsb
xchg
dec
jne
pop
addr16
cltd
in
vmread
or
inc
push
mov
jbe
rolb
or
mov
fistps
or
xchg
pop
mov
xchg
add
fsubr
inc
loop
fucomi
jb
mov
mov
out
xchg
xor
fildl
xor
stos
and
lds
adc
hlt
loop
lret
pushf
push
movsl
dec
cmp
mov
dec
pop
popf
inc
mov
incl
into
out
js
dec
stos
dec
mov
cmp
xchg
mov
mov
in
pop
pusha
push
imul
movsb
sbb
in
fdivr
mov
pop
sti
sbb
into
js
cmp
xchg
mov
add
sub
or
les
xchg
add
xchg
int3
xchg
inc
fldl
or
or
imul
das
and
mov
mov
or
int
cs
xchg
dec
testl
mov
ret
or
mov
repz
xor
lods
mov
cmp
or
xor
xchg
in
orb
pop
push
sbb
imul
je
and
aad
shrb
shll
jo
sbb
test
rolb
adc
vandps
shrl
pop
mov
bound
bound
fmuls
rclb
loopne
movsb
mov
test
lret
or
dec
rol
repz
sub
mov
iret
xchg
or
shlb
pushf
adc
jle
rcrl
repz
xor
lock
add
cmc
adc
dec
jmp
dec
popa
pop
mov
out
and
sub
fs
loopne
in
sbb
push
repnz
stos
stos
sub
mov
scas
fs
dec
pop
in
cmp
or
add
int
mov
pop
push
aaa
neg
js
xor
enter
push
add
dec
aas
mov
lret
test
or
dec
fidivl
dec
adc
inc
ds
jl
or
push
test
outsl
jb
imul
imul
adcb
sbb
ror
mov
mov
adc
arpl
cmp
sub
inc
push
lret
test
jecxz
ljmp
push
ret
or
pop
cmp
pop
imul
sub
sbb
pushf
mov
test
lahf
popa
movups
std
sbb
or
mov
push
ret
shrl
mov
inc
xchg
push
mov
stos
scas
out
data16
jns
sub
jle
mov
das
mov
inc
ja
mov
in
adc
push
cld
pop
arpl
xchg
repz
add
push
mov
jns
pop
fiaddl
xorb
fisubrl
test
pop
aad
shlb
cmp
mov
mov
lret
cmc
aas
rclb
subb
lods
aas
sbbl
xor
inc
inc
and
mov
push
dec
jno,pt
pusha
sbb
jmp
mov
sahf
fnstcw
or
mov
xor
mov
fs
std
push
int
and
and
out
daa
popf
stc
sbb
adc
mov
repz
fistl
arpl
ret
fisubrl
pop
btr
push
sbb
and
xor
mov
inc
popa
scas
push
leave
cwtl
aad
adcl
sahf
jo
xor
pop
inc
dec
cld
sbb
aas
aaa
notb
push
in
jmp
cmp
in
ret
cmp
out
repz
sbb
insb
call
hlt
inc
es
cmp
jmp
mov
adc
jne
sbb
popa
inc
mov
les
inc
mov
push
add
andl
stc
stos
das
add
xchg
inc
mov
out
data16
lods
sbb
lods
mov
fidivs
sub
dec
fmull
clc
add
lods
out
add
xor
das
gs
sahf
xchg
cmp
pushf
cwtl
cmpsl
int
and
stos
ljmp
popf
push
inc
mov
adc
jne
jae
jno
cltd
pushf
dec
cmp
and
jp
sbb
add
mov
sub
mov
push
xchg
dec
cwtl
leave
push
enter
or
add
push
fisttpl
mov
inc
dec
sarb
pusha
leave
fcmovnu
mov
mov
xchg
and
lds
xor
push
shl
adc
jbe
or
aad
scas
jecxz
mov
movsb
mov
stos
lock
icebp
mov
je
cmpsb
lods
pop
mov
mov
sub
stos
sbb
aad
loopne
jne
pop
inc
lahf
mov
inc
mov
inc
sbb
outsb
xor
aam
sbb
dec
test
cmpsb
in
mov
cmp
pusha
cmp
xchg
loop
add
jo
mov
and
lret
pop
clc
pop
dec
inc
mov
inc
lcall
jae
cmp
jb
scas
out
test
lds
adc
lret
sbb
aas
jl
inc
push
out
data16
mov
sbb
mov
inc
adc
fiadds
repnz
push
mov
push
out
xlat
dec
divps
test
or
mov
or
mov
std
iret
in
pop
inc
sbb
add
mov
push
dec
mov
daa
dec
lds
or
cld
imul
repz
cli
rolb
xor
rcr
aas
arpl
push
cmc
pop
mov
cmp
pop
mov
into
jg
sti
stc
mov
pop
stos
nop
icebp
in
add
sub
and
inc
dec
push
push
ss
mov
adc
xchg
fbstp
fsubrl
pop
xchg
lcall
js
xor
dec
sbb
inc
mov
je
cmpsl
sub
in
mov
aas
push
jmp
pmaxub
fdivrl
inc
lock
sub
addl
out
xchg
out
gs
or
cld
dec
push
js
pop
add
xchg
pop
ret
and
pop
mov
xchg
sub
adc
dec
mov
mov
rorb
imulb
mov
loop
sub
or
jns,pn
stos
fisubl
outsl
lods
sti
mov
pop
shl
cmp
imul
loopne
pop
stos
pop
popa
shrb
mov
jne
or
sbb
sub
rcrb
mov
loope
xchg
pop
or
xchg
mov
das
cmp
or
push
pop
cmp
mov
push
call
mov
or
mov
aam
mov
lea
push
push
out
cltd
fnstcw
cli
push
mov
jb
imul
cmpsb
sub
pminub
and
pop
mov
test
sub
push
sbb
jmp
and
push
pop
mov
push
and
into
inc
cmp
lahf
insb
fsts
or
jno
mov
lds
sahf
repz
cmp
lar
push
rol
fwait
shlb
mov
push
inc
mov
sub
js
mov
ss
mov
std
sub
and
out
mov
sub
lret
aam
and
int3
cwtl
popa
popf
imul
jo
mov
and
push
repz
int
sub
mov
mov
loop
mov
bound
and
push
aaa
mov
mov
bound
sti
mov
mov
push
sahf
popa
cld
rcrb
pusha
pushf
push
gs
sub
push
insb
push
jle
pop
rclb
sbbl
nop
bound
mov
cmp
mov
das
aas
pop
inc
sub
lcall
cmc
es
decl
and
jecxz
push
dec
sbbb
cwtl
pop
xchg
aad
insb
mov
pop
push
mov
cmc
and
jno
jo
loope
pusha
pop
mov
dec
and
out
xchg
ds
loop
jmp
sbb
cmc
cmc
jne
pusha
inc
into
xchg
mov
or
and
leave
sbb
pavgw
dec
and
mov
cwtl
mov
popf
adc
jp
or
jmp
xchg
test
stos
push
sar
push
xor
add
rcll
shr
js
loope
in
adc
jge
push
inc
mov
cmp
jne
push
pop
ljmp
sti
or
rol
xchg
dec
jecxz
pop
pushl
hlt
out
out
push
jb
ja
shlb
mov
pushl
inc
push
addr16
jne
popf
cmpsl
sbb
test
mov
movsl
sub
adc
add
in
lret
es
loopne
aam
sbb
xlat
push
add
add
lds
cmp
loope
mov
add
fs
fistpl
pop
cmpsb
fmuls
lock
test
and
mov
rorl
inc
test
push
loop
pop
add
cmc
fnstenv
test
bound
into
mov
jns
dec
loop
leave
or
fs
pop
in
mov
jbe
pusha
imul
sub
mov
sahf
mov
mov
out
mov
inc
xor
mov
popf
mov
lret
jne
insl
sbb
stos
push
jle
mov
add
push
loopne
xor
jbe
in
mov
push
out
jbe
pop
add
lds
sub
dec
jne
arpl
xchg
pop
scas
mov
jae
adc
sub
bound
dec
shrl
jg
test
fwait
imul
iret
inc
mov
in
and
ja
mov
js
mov
jno
pop
mov
pushf
subb
push
or
loop
mov
ja
add
mov
scas
jl
mov
cli
and
mov
jae
sub
sub
pop
sbb
cmp
ja
orb
mov
adc
outsl
mov
jo
cmpsl
xchg
clc
insl
push
add
fsubrs
ja
fs
test
sbb
sahf
les
or
jmp
lock
mull
mov
movl
mov
sub
ljmp
call
in
xlat
scas
xor
fiadds
push
pop
jmp
les
adc
lcall
movb
xor
nop
push
lods
outsl
jp
sub
dec
xchg
movsb
aas
jl
adc
cmpsb
cmp
or
mov
mov
rol
xor
fnstenv
xchg
lret
int3
mov
lods
dec
in
xchg
add
stos
jge
or
push
sti
mov
loope
insl
mov
mov
cmp
cmp
movsb
jnp
cmp
test
mov
aas
jecxz
cmpl
mov
cmpl
cltd
mov
inc
cs
add
adc
ljmp
lahf
cli
mov
lcall
add
aaa
aas
lahf
loopne
cmp
pop
cmp
pop
clc
cmp
inc
mov
pop
adc
dec
xor
jne
je
movsb
mov
jno
mov
sti
pop
push
sbb
xor
xor
dec
nop
add
fidivs
dec
test
adc
cmp
in
ret
hlt
cs
cmp
std
repnz
and
dec
enter
fwait
inc
jae
jmp
inc
push
mov
push
jp
xchg
movsb
adc
aad
js
xor
or
lret
jecxz
jge
mov
pop
sbb
mov
pop
sub
and
jecxz
mov
adc
push
cmp
lcall
dec
mov
inc
in
mov
adc
xchg
adc
imul
mov
ljmp
loop
sub
loop
lahf
ss
orb
sub
daa
clc
into
test
push
clc
fidivrl
scas
iret
icebp
lret
dec
push
scas
xchg
xchg
arpl
fcmovu
cmpsl
stos
shrb
repnz
mov
aaa
iret
insl
fwait
adc
jae
scas
adc
or
lret
loop
lock
je
push
mov
es
fucom
push
xor
nop
xchg
cld
hlt
push
push
jne
addb
rolb
clc
mov
fcom
and
jae
shrl
mov
sbb
push
jmp
nop
inc
shll
and
dec
mov
addb
sar
sbb
cmp
push
add
mov
add
dec
cwtl
pop
cmp
sbb
mov
jo
lret
jge
cmp
fwait
aaa
adc
and
xlat
mov
adc
inc
pop
inc
jbe,pn
aam
mov
pop
push
call
loopne
icebp
mov
int3
cmp
repnz
test
shll
clc
lcall
sbb
int
out
mov
pop
cmpsb
adc
lea
loope
outsl
jbe
push
popa
sub
lcall
aad
aaa
or
sbb
fistpll
add
inc
xor
xorb
mov
mov
inc
jge
sub
push
loop
pop
sbb
aam
jle
aas
jp
dec
jnp
push
mov
aam
jnp
mov
out
hlt
dec
mov
push
lret
push
loopne
ror
jbe
pop
aam
inc
fstl
movsb
lods
xchg
jl
pop
push
fimuls
mov
jg
ret
jo
in
or
in
ret
and
mov
das
scas
mov
sahf
xchg
mov
scas
cmp
inc
je
fwait
in
xor
in
lds
or
xorb
sbb
ljmp
andb
scas
fnstenvs
in
mov
dec
dec
shll
lea
cmp
mov
inc
cmp
mov
mov
nop
ret
mov
sbb
test
push
ret
mov
cld
mov
add
cmp
push
test
add
fsubrs
jmp
lret
pusha
push
das
dec
shrl
les
enter
test
leave
nop
test
in
loopne
nop
xor
pop
adc
fdivrs
push
xor
and
push
loop
push
push
mov
xchg
clc
pop
into
xor
or
mov
pop
xchg
cmpb
sti
jne
enter
loop
loopne
jge
pop
add
inc
or
and
js
fbld
mov
adcb
lds
clc
ja
cmp
call
add
push
add
and
mov
xor
lock
popf
cli
shll
mov
iret
mov
test
xchg
xchg
mov
jo
roll
cli
sub
loope
jae
push
es
sbb
or
pop
or
adc
sub
add
into
mov
dec
imul
popa
js
fiaddl
sub
cmc
popa
aas
sbb
nop
cmpsb
cmpsb
lahf
popa
push
mov
int
mov
jns
inc
pop
mov
imul
add
cmp
les
xor
jnp
iret
add
in
int3
movsl
adc
sub
pop
dec
sbb
xchg
dec
adc
adc
pusha
popa
xchg
xor
cltd
sbb
shrl
add
xchg
sbb
cmp
rorl
xchg
inc
push
sahf
dec
and
sub
pushf
and
or
fwait
insl
insb
das
ja
aas
or
pop
add
sub
dec
xor
push
loopne
fadds
mov
add
xor
mov
push
push
pop
out
les
repz
gs
repnz
in
xchg
cwtl
in
pop
fnstsw
mov
xor
jecxz
add
test
mov
push
aad
ja
mov
jp
out
push
jg
je
outsb
mov
dec
scas
mov
dec
pushf
aas
or
cmpsb
push
lods
int3
sahf
por
push
add
js
jno
lahf
in
jns
push
movsl
test
into
mov
push
mov
sti
push
jge
push
xor
ja
test
mov
aad
adc
push
out
scas
jbe
jbe
gs
fldt
movsb
push
out
jnp
pushf
xor
data16
outsl
adc
popa
push
mov
imul
std
test
popa
push
cmc
les
jle
cmpsl
fsubl
test
or
jecxz
xchg
push
mov
mov
mov
xor
or
mov
and
inc
test
add
push
add
inc
repz
mov
add
mov
ds
add
sbb
push
adc
pop
push
ret
fbstp
fistpl
mov
sbb
in
jbe
xor
aam
mov
or
aas
pop
push
pop
dec
rcrl
cld
xchg
jle,pn
test
or
cwtl
out
sub
out
jb
jge
xor
pop
aam
in
push
stos
mov
mov
sub
mov
popa
dec
fadd
jo
sbb
dec
movhps
mov
push
outsb
imul
cmp
add
fsts
test
push
or
stc
adc
jge
mov
pop
in
out
test
rorl
sbb
pop
es
fs
cmp
xor
sbb
mov
xchg
dec
jne
outsb
push
or
in
cmp
add
scas
sti
cltd
dec
mov
fnstenv
add
mov
shr
jno
dec
sbb
into
addr16
lret
or
loopne
pop
add
lds
or
out
mov
sub
jg
mov
add
push
jb
push
loopne
ss
mov
inc
pop
icebp
push
fwait
pushf
rclb
add
negb
insb
inc
xor
imul
xchg
push
push
xchg
lret
dec
mov
cld
loop
adc
gs
iret
repz
or
ja
addl
popf
int
dec
jecxz
add
les
mov
jle
add
jecxz
push
fs
mov
xchg
loop
fadds
pop
mov
nop
inc
mov
or
mov
in
push
fisttps
addr16
into
loopew
or
test
inc
mov
loop
movsb
sbb
dec
push
into
pop
lret
data16
stos
ret
or
scas
iret
in
ljmp
adc
sub
cmc
push
add
dec
add
and
shll
xor
push
and
cmovne
adc
xchg
adc
add
jmp
sahf
addr16
adc
jl
rorb
mov
and
sbb
push
cmpsl
xchg
cmc
jg
out
test
cmpsl
arpl
xchg
stos
mov
cmp
mov
or
fldl
test
dec
cmpl
scas
pop
xchg
data16
mov
cmp
pop
sbbl
pop
std
ret
stos
push
clc
lret
hlt
loope
cmpl
imul
clc
nop
pop
or
sbb
push
dec
mov
cmp
push
push
xchg
jae
jne
and
and
pop
adc
mov
jg,pn
push
rcrl
push
cmp
xchg
xor
ljmp
fnstcw
iret
dec
xor
inc
ss
jno
xlat
stos
push
push
loopne
or
adc
imul
xor
mov
or
repnz
call
pop
jnp
and
fs
jp
dec
mov
lret
mov
xor
fwait
fwait
or
std
js
imul
dec
xchg
mov
add
aas
ret
xchg
dec
and
testb
mov
jecxz
hlt
xor
insl
movsb
mov
adc
sbb
pushl
pop
fwait
popa
in
push
jb
dec
test
notl
cmp
ror
and
and
dec
lahf
out
cwtl
jno
or
add
xchg
mov
adc
inc
sub
and
dec
push
xor
adc
cli
pop
lea
xor
rcl
mov
js
mov
pop
iret
ficoms
fdivs
sbb
out
cmp
hlt
int
dec
push
sub
mov
fdivr
mov
mov
rorl
lret
xor
xchg
mov
sahf
sub
cmc
add
ja
lcall
std
sbb
mov
arpl
add
mov
jp
fistpll
arpl
mov
sti
mov
js
cld
and
mov
aas
jno
sbb
or
push
popa
lahf
popf
mov
sbb
cwtl
pop
call
icebp
lds
lds
stc
sbb
incl
ja
dec
mov
fistps
arpl
lcall
call
es
xor
mov
lock
jno
pop
mov
ret
push
cld
sbb
shll
xchg
arpl
dec
xchg
xor
ds
inc
sbb
xchg
int
lods
fsubs
sti
aaa
xchg
jnp
nop
dec
jns
mov
filds
leave
xchg
imul
fistpl
test
ss
and
in
sbb
inc
xor
xor
dec
daa
daa
sahf
sub
jecxz
xor
xlat
mov
ret
xchg
xlat
xor
jp
lahf
lahf
inc
cmp
repnz
jbe
xor
add
inc
sub
stos
stc
dec
pop
movsb
stos
cmp
lods
mov
push
dec
nop
inc
cmp
mov
push
nop
xchg
lock
cmc
mov
aad
notb
pusha
in
mov
and
dec
sbb
jg
push
in
or
sbb
pop
jo
xchg
test
jno
ds
xor
popf
pop
mov
sub
mov
lods
ror
jmp
in
mov
xchg
mov
pop
xchg
cltd
dec
pushf
repz
push
mov
mov
push
jnp
xchg
push
and
fs
idivb
inc
dec
ja
and
bound
xchg
jbe
and
pop
lods
test
ljmp
push
stc
das
cmp
cli
adc
lahf
cmc
adc
and
lea
mov
or
clc
xor
or
je
and
mov
xor
xchg
data16
pop
mov
or
int3
or
clc
xor
pop
jb
sub
jnp
push
pop
pop
lea
aam
fistps
incb
xchg
scas
es
adc
sbb
cmp
cltd
inc
fmull
popf
mov
sub
mov
dec
fisttpl
daa
popa
mov
xor
addr16
push
scas
lock
aam
xchg
or
mov
outsb
sbb
call
clc
imul
movl
aaa
ds
xchg
out
icebp
in
jl
pop
dec
jge
leave
xlat
and
mov
sbb
jg
mov
cmp
movsl
je
rclb
mov
pop
inc
xchg
in
cs
outsl
ss
inc
stc
adc
inc
push
mov
mov
ds
in
in
sbb
daa
cmp
mov
imul
or
add
adc
in
adc
add
pop
testl
insb
enter
push
xchg
popa
dec
xchg
sbb
js
ss
inc
add
xchg
aad
fimull
dec
cmp
aas
inc
xorb
rorl
cmp
lcall
add
jb
pop
jg
inc
cmp
mov
and
lea
cs
dec
push
sbb
add
sti
or
pop
jp
lock
jb
xchg
sub
mov
stc
adc
mov
pop
shl
push
mov
es
es
jne
xchg
mov
loope
out
pop
cs
dec
jno
mov
es
mov
inc
pop
loopne
inc
les
adc
out
loop
pop
sbb
mov
and
lock
jnp
clc
cmpsl
inc
jns
or
sbb
dec
pop
cli
fimuls
pop
imul
inc
fstpt
xor
or
addr16
dec
pop
push
pop
mov
push
inc
jb
jle
subl
dec
inc
outsl
xchg
insb
ds
sub
mov
in
mov
sub
or
pusha
inc
mov
rclb
jp
jmp
and
lods
inc
outsb
out
push
fwait
jecxz
xchg
cld
dec
ficoml
int
mov
jg
ficoml
sbb
out
mov
mov
push
inc
outsb
std
pop
repz
lret
popa
insb
into
jnp,pt
push
arpl
cmp
jg
arpl
aad
xchg
add
add
xor
cmp
outsl
sar
pop
cmp
cmpl
out
fcom
test
xor
sbb
aaa
subl
jge
fiaddl
mov
scas
ds
inc
push
add
aaa
and
add
movsl
cwtl
inc
divl
or
stc
je
cmpsl
adc
mov
mov
cs
jp
jnp
and
mov
dec
in
stc
cmpl
xchg
dec
insl
scas
mov
inc
pop
pop
out
push
sbb
push
mov
in
rorl
mov
pop
inc
movsl
cmp
stc
setge
sub
mov
cmp
inc
insb
divb
aas
xlat
rclb
stos
adc
shll
jae
test
cs
adc
inc
mov
mov
mov
adc
add
cs
mov
dec
mov
rorb
mov
insl
jns
push
add
or
lcall
add
pop
ficompl
inc
cmp
roll
xor
popl
push
push
sub
fdivrl
dec
test
jp
inc
int3
addl
inc
incb
mov
or
lds
fisubrs
sbb
ja
out
dec
sub
adc
lock
xchg
sub
mov
mov
shrl
pop
push
add
dec
add
shrb
fnstsw
sbb
cmc
shrb
dec
mov
test
insl
inc
fcompl
cmpsb
stc
lret
fwait
pop
jmp
imul
add
out
insl
js
mov
cmp
mov
adc
add
mov
mov
out
push
int3
jbe
in
or
xlat
pop
mov
lods
dec
ljmp
lret
repz
sub
faddl
arpl
sbb
xor
pushf
fstpl
sahf
mov
or
ficoms
stos
add
dec
cld
jmp
ljmp
loop
aaa
mov
mov
jge
outsl
testb
cmp
jl
decl
lret
out
sbb
push
xor
push
hlt
movsl
rolb
and
add
pop
and
pop
enter
fnstcw
inc
loop
inc
std
cli
adc
repz
xor
in
gs
fadd
dec
cli
sbb
sub
test
pop
mov
stc
cs
popf
pop
adc
push
xabort
sti
ss
scas
into
pop
cmp
jecxz
xchg
fdivrs
xchg
and
adc
loopne
add
jbe
scas
roll
lret
outsb
dec
dec
pop
xor
movsb
inc
cmp
fcoml
jmp
pop
sub
cltd
fcmovbe
stos
es
dec
scas
fistpl
in
jp
xor
sbb
imul
mov
sbb
divl
shl
std
jp
ret
push
not
sbb
or
mov
clc
dec
mov
shlb
cmc
push
pop
je
adc
sub
loop
fistps
out
mov
inc
mov
popf
mov
or
cmc
iret
dec
insb
imul
xchg
mov
dec
aad
jo
ljmp
sbb
test
cmp
cltd
popf
aam
testb
jo
aam
adc
fcomps
jle
pop
jl
xor
mov
cmp
xor
sti
lahf
popf
fs
inc
jbe
xor
test
inc
out
sub
f2xm1
loope
in
inc
fwait
aas
push
daa
out
inc
mov
and
pop
and
ja
inc
push
pop
dec
pushf
lret
and
adc
push
xor
push
mov
xor
sub
adc
ret
into
mov
daa
pop
pop
mov
stos
lret
subb
mov
cmp
scas
cmp
mov
mov
or
ljmp
push
mov
lods
loopne
rorl
push
or
xchg
cli
xchg
stos
sahf
imul
xlat
fcoms
xor
in
outsb
mov
jecxz
rcrl
cmpsl
stc
mov
jecxz
or
mov
js
jb
push
fcoml
push
dec
lods
pop
ja
lods
outsb
les
xor
mov
and
sub
or
mov
test
bound
popa
cs
int3
jmp
hlt
pop
sub
push
icebp
xchg
mov
or
pop
mov
ss
sub
push
repz
mov
pop
sbb
mov
lds
push
jmp
pop
inc
daa
nop
es
nop
sbbl
addr16
in
jge
bound
insl
iret
dec
rclb
cmpsl
and
cmc
push
das
xchg
push
mov
fldcw
mov
jo
testb
icebp
mov
in
ret
mulb
push
sub
adc
adc
sbb
mov
imul
rolb
cli
xchg
mov
cmp
cmpsl
mov
incb
stc
mov
inc
stos
push
icebp
mov
mov
ljmp
stc
fwait
add
jp
std
jle
xor
inc
into
shll
ljmp
mov
shll
pop
and
lock
mov
call
sub
sbb
dec
xor
in
pop
out
sbb
daa
push
popa
ret
mov
out
incl
nop
inc
push
dec
loopne
jnp
insb
aad
xor
jl
jnp
nop
insb
das
das
lds
in
jnp
pop
dec
add
ret
repz
mov
and
sahf
in
dec
cmc
xchg
fsubrl
shrb
sub
js
add
dec
cli
fwait
incl
fs
aas
test
int
or
and
hlt
rcrl
es
jo
xorb
mov
fucomi
negl
nop
pusha
test
les
jle
sbb
mov
fcoms
loop
cmpsb
cmp
movsl
iret
addr16
push
and
add
nop
dec
out
mov
mov
and
jmp
ret
cmp
xchg
js
enter
mov
lea
repnz
dec
nop
clc
pusha
inc
push
dec
data16
and
xchg
ds
lods
leave
or
mov
cmpb
in
ret
sbb
imul
loopne
and
rorl
aaa
sar
jecxz
mov
mov
and
lea
cmp
scas
sub
aaa
mov
jmp
add
or
pop
mov
mov
int3
jge
sbb
test
pop
mov
cmpsb
mov
inc
test
fdivs
mov
ja
sub
cmc
xchg
fiaddl
jge
push
cltd
movsl
and
fs
int3
dec
push
insb
bound
inc
incb
sbb
into
outsb
loopne
loope
repz
add
jp
insb
cmp
loop
lods
mov
sub
pop
test
int
rorb
test
or
mov
sbb
or
cmp
xchg
push
mov
or
daa
lret
notl
xorb
mov
lahf
lock
rcrl
xchg
jne
in
mov
fimull
pop
cmp
xlat
xor
daa
push
mov
in
xor
sub
lods
hlt
sub
cli
mov
pop
clts
leave
xchg
mov
pusha
les
int3
loop
ljmp
cmpsb
sarl
out
dec
xlat
test
or
lods
enter
popa
outsb
sti
mov
adc
addb
adc
cmp
fisubrs
inc
jge
movsl
dec
sbb
jae
jae
adc
dec
addr16
push
mov
outsb
sub
fwait
lods
shlb
repz
arpl
loope
insb
loope
push
in
add
xchg
jae
mov
dec
mov
cmpsb
ficoml
cmpsl
lods
cmpsl
pop
loop
or
pop
cli
fisttps
adc
mov
inc
sub
pushf
inc
nop
or
sub
cmp
or
bound
dec
scas
fcomps
add
sub
loope
push
and
aam
test
stos
mov
mov
cs
fldcw
dec
jle
inc
outsl
ljmp
add
imul
jns
push
and
sub
xchg
adcl
xchg
jl
daa
lds
std
icebp
subb
cmpsl
iret
lds
enter
and
jp
sbb
inc
lret
dec
int3
mov
mov
jns
neg
aad
mov
sub
iret
push
dec
xchg
enter
add
mov
mov
das
adc
pop
ja
and
cmpsl
loop
and
sbb
push
mov
sub
push
and
pusha
test
or
mov
xchg
mov
data16
ja
dec
sbb
pop
clc
sub
out
inc
lret
in
test
cmp
ret
cmpsl
cmp
mov
jb
sbb
jge
push
push
xor
sub
jmp
movsb
ljmp
dec
call
sub
iret
xor
sub
push
enter
sarl
repz
in
xchg
cmpsb
test
add
fidivrl
adcb
mov
nop
xlat
sub
sbb
cmp
ja
rclb
sub
pop
in
xor
xchg
setae
mov
xor
mov
mov
mov
xchg
add
test
sub
inc
in
xor
cmp
outsl
int3
cmp
dec
pusha
enter
xchg
add
ja
mov
adc
mov
add
lds
outsb
jbe
sti
cmpsl
cld
stc
inc
lods
push
xchg
fs
fyl2x
xchg
mov
jne
pop
in
cmpsb
aaa
fidivrl
in
cwtl
pop
sub
mov
call
out
pushw
stos
cli
sub
nop
std
repnz
xchg
xor
xor
push
xor
add
xchg
pop
or
dec
pop
lods
pop
stos
dec
pushf
iret
cwtl
fadds
popa
call
js
dec
lea
into
movsl
jb
push
mov
jns
and
lret
dec
xor
clc
lret
jne
adc
aas
lods
aas
sbb
std
inc
test
and
fldenv
out
outsb
or
jmp
mov
pop
jecxz
rorb
pop
lret
dec
jns
loop
or
mov
fcomp
stc
jge
xorl
enter
repnz
mov
pusha
repz
das
xchg
loop
sub
xlat
imul
xchg
andb
sbb
mov
add
push
dec
mov
add
mov
add
hlt
sub
xor
pop
movsb
push
inc
or
bound
cmpb
faddp
cmpsb
sbb
cmp
into
pop
pop
push
in
std
cmp
imul
in
and
lret
lret
mov
cmpl
ljmp
dec
or
ds
cmp
xchg
aaa
sbb
mov
lock
jbe
cmpl
cmp
adc
jne
fimull
add
outsb
ljmp
dec
sbb
cmc
xchg
ljmp
arpl
xchg
insl
cmp
fcoml
dec
push
aas
rcl
sbb
jmp
jmp
pop
push
mov
in
mov
adc
push
jg
xorb
xchg
addr16
aaa
xor
call
lods
mov
mov
xchg
push
outsl
add
push
pop
iret
mov
xchg
subb
mov
leave
cwtl
loop
mov
xchg
add
clc
adc
cmpsl
bound
cmpsl
sahf
pop
int3
int3
mov
jno
xor
gs
jge
pop
popf
scas
and
je
call
jp
dec
lods
cli
xchg
cmpsl
xchg
cld
lret
scas
aad
lret
push
dec
lcall
enter
jmp
and
jnp
je
stc
xlat
loopne
dec
bound
jecxz
mov
mov
pop
xlat
add
mov
fistpll
push
ja
mov
insb
add
add
jg
adc
iret
popa
das
jmp
and
ja
inc
aaa
sbb
pop
xor
pop
ja
cld
lods
add
cwtl
and
lods
addr16
stc
adc
shr
cli
ret
cmovle
int
fildl
sbb
dec
iret
fbstp
jbe
mov
push
dec
adc
testl
mov
push
sbb
test
clc
jae
dec
ja
in
pop
jae
movsl
in
sarl
scas
and
lods
adc
lcall
out
mov
jb
fildll
fcoms
pop
sub
repnz
mov
ss
and
negb
ret
and
in
mov
dec
inc
cmp
cwtl
sbb
out
push
inc
daa
je
fsubrl
jo
stos
fdivs
xchg
sub
nop
mov
pushf
ret
movsb
sbb
std
sbbl
cmp
out
adc
ja
daa
push
lahf
jmp
andl
cmp
mov
movsb
pop
jbe
inc
push
pop
fcmovbe
ffreep
rcll
cmp
dec
int3
fsubrs
test
cmp
test
ja
jns
es
pop
stos
scas
ficoml
jge
mov
mov
cmp
pop
gs
push
xor
inc
pushf
jmp
mov
or
cmp
inc
adc
sub
roll
in
cmpsl
sar
scas
cmp
outsb
mov
mov
pop
test
cmp
xchg
jecxz
or
call
scas
jge
ds
sbb
pop
fisubrs
xchg
fnstcw
in
sub
sub
fs
popl
pop
push
fcoml
dec
and
clc
xchg
lea
or
pop
adc
inc
dec
int3
jg
cmp
jae
pop
in
cmp
ljmp
test
out
hlt
jae
sub
or
loopne
ja
push
idiv
stc
aas
xchg
lea
nop
fadds
aaa
rcrb
cld
iret
pop
push
mov
repz
mov
fidivs
adc
push
push
out
add
cmp
pop
adc
cmp
pop
sbbb
sub
adc
test
add
divl
pop
jge
or
fdivl
rolb
mov
add
aad
clc
inc
in
addr16
movsl
adc
pop
jmp
mov
mov
xchg
adc
adc
rcrl
mov
pop
aaa
data16
aas
xor
mov
lcall
popa
add
add
sub
inc
jmp
add
xchg
faddp
jge
dec
xor
sbb
pusha
je
and
mov
fldt
push
mov
inc
mov
mov
jo
cmpsb
push
cld
stos
sub
lock
insb
pop
add
inc
mov
aas
les
nop
jno
xlat
insl
and
jp
jmp
xchg
xchg
push
lret
mov
xor
jecxz
scas
and
pop
add
shrb
repnz
lods
loop
ljmp
xchg
xchg
add
inc
insb
icebp
mov
mov
xchg
fnstcw
mov
xrelease
pop
xchg
loopne
adc
in
and
out
outsl
aam
adc
sub
es
dec
cmp
popl
cmpb
mov
icebp
fadd
pop
pop
scas
pshufw
aam
rclb
sbb
jmp
loop
push
cli
xor
int
and
cmp
jp
xchg
adc
psrlw
mov
jo
aad
cwtl
aas
cmp
pop
fmuls
mov
negb
fwait
xor
sbb
mov
pop
cltd
adc
inc
lea
jo
and
mov
xchg
int
hlt
inc
push
and
stos
out
and
xchg
xchg
jb
dec
adc
stos
sbb
xor
lds
repz
dec
add
in
std
mov
out
cmpb
pop
mov
call
or
lds
movsl
mov
pop
and
arpl
movsb
test
xchg
out
and
and
cltd
js
mov
lret
clc
repnz
in
cwtl
push
adc
mov
adc
repnz
push
imul
jmp
sbb
rclb
jle
pusha
out
imul
mov
gs
pop
sub
mov
xchg
adc
xchg
repnz
jns
cs
mov
test
movsb
sbb
test
adc
movsb
cmp
aaa
fdivr
cli
xor
rcr
scas
movsl
cld
aam
sbb
jne
pusha
cmp
iret
leave
out
mov
out
cltd
je
mov
icebp
fcompl
rorl
and
and
popa
mov
xchg
xor
or
shll
js
in
lcall
sahf
pop
call
push
inc
outsl
and
das
lods
inc
inc
cwtl
push
imul
xor
lock
adc
xchg
aad
fdivrl
jp
jae
aas
imul
testb
jl
sbb
cmp
movsb
adc
daa
insb
pop
adc
ficoml
cmpsl
out
shll
cs
push
jne
sub
scas
or
inc
faddl
testb
fsub
xchg
mov
mov
punpckhbw
arpl
inc
pop
not
lret
cli
jge
lds
xlat
icebp
imul
fsubs
jne
fsubrs
addr16
jns
push
and
sbb
sub
fisubs
jmp
xchg
or
sarl
xor
xlat
pop
sub
push
sub
lds
cli
sti
adc
mov
les
imul
inc
cltd
xchg
jg
mov
ficompl
aaa
and
push
mov
sub
ret
int
repz
mov
adc
xor
mov
cmp
testl
dec
sub
mov
fwait
mov
inc
pop
xchg
fsubr
sbb
movsl
out
jge
fiadds
adc
xor
inc
fimuls
out
jnp
push
addl
sbb
dec
jmp
sahf
mov
and
jne
rcll
jo
aad
mov
stc
fcomip
out
xor
lods
dec
push
fs
and
fildll
outsl
pop
lock
sub
xor
mov
outsl
sub
gs
loopne
inc
pop
movsl
and
outsl
mov
scas
sahf
lcall
lods
xchg
lds
add
popf
std
dec
js
or
inc
push
inc
fdivrl
dec
dec
cmpsb
stc
fnsave
stos
pop
jge
jecxz
pusha
clc
outsb
push
mov
subl
mov
or
loope
adc
pop
mov
pcmpgtb
loope
shrb
inc
jecxz
sti
data16
dec
aam
sub
out
pop
cmp
cld
push
mov
rolb
out
cmp
ret
pop
xlat
push
pop
ret
sub
push
mov
sub
or
adc
fsub
stos
out
xchg
int3
jae
mov
ret
sub
popa
sub
dec
inc
or
adc
and
push
std
mov
insl
xor
lahf
cmp
fcoml
jp
jbe
sbb
lods
test
repnz
sub
test
sbbl
and
pop
jne
fmuls
or
xchg
mov
and
popf
dec
lds
jl
or
cmp
push
mov
aaa
test
adc
int
push
ljmp
stos
ds
sbb
in
adc
aas
sub
dec
mov
dec
xor
adcl
repz
xor
mov
sti
clc
and
movsl
cltd
jp
idivb
outsb
dec
insl
jno
mov
into
dec
shlb
and
les
pop
jno
dec
sbb
ljmp
pop
mov
xlat
frstor
mov
xchg
or
sbb
out
mov
mov
cwtl
inc
cwtl
pop
stc
adc
pop
adc
sahf
das
imul
pop
mov
push
lahf
jle
scas
dec
add
adc
or
ficompl
sub
xlat
dec
fidivrl
xchg
xchg
repnz
cwtl
in
mov
mov
push
dec
jecxz
inc
pop
push
popf
je
shufps
jae
mov
and
fmuls
mov
lds
aaa
cmp
jne
imul
in
cmp
jle
jg
shl
and
js
inc
mov
inc
nop
xchg
js
imul
orl
cwtl
jae
inc
cmp
lods
bound
cmp
dec
xchg
ljmp
and
ja
or
lret
leave
flds
int3
adc
aam
sub
xor
addr16
push
jecxz
adc
adc
shll
cld
cmpb
fs
aam
loop
jg
cmp
sbb
dec
ds
sub
mov
lea
xchg
pusha
cmc
mov
push
out
imul
ja
bound
jp
lret
sbb
int
sub
aad
aam
xor
arpl
adc
into
mov
pushf
pop
mov
adc
fcompl
out
adc
movsb
cmp
or
lods
cwtl
fisttpll
hlt
inc
push
sub
movb
shlb
add
add
sub
cmp
daa
push
and
fisubrs
in
cmpsb
outsl
xor
int3
inc
popa
aam
clc
int3
lock
out
xor
lret
inc
adc
inc
stos
movsb
fimuls
int3
mov
lahf
adc
mov
xchg
xchg
les
cltd
mov
outsb
jb
and
shlb
inc
xor
loop
rcr
gs
mov
mov
jo
and
push
pop
shrb
je
xchg
jno
or
push
cmpsl
mov
fld
add
xchg
sbb
sub
push
hlt
fnsave
mov
je
push
scas
mov
stos
jecxz
push
lea
and
gs
xchg
mov
mov
dec
xchg
or
sub
jecxz
mov
and
nop
out
ret
popf
enter
mov
jle
mov
lods
push
mov
int3
mov
inc
sub
xor
mov
dec
adc
int3
sbb
push
push
xchg
mov
cwtl
cmp
das
rorl
mov
lahf
aad
inc
jnp
sbb
sbb
sub
jo
mov
xor
pop
sarb
adc
mov
push
cmp
inc
movsl
js
adc
lods
test
insl
insl
sbb
xor
cs
cld
les
sbb
fisubl
lahf
addb
mov
mov
push
sahf
xor
mov
cmp
adc
jns
ljmp
cmc
cwtl
sub
in
adc
fsub
jmp
call
mov
fbld
cmp
push
mov
fwait
enter
int3
cmp
push
push
loope
in
or
test
mov
or
test
pop
fiaddl
iret
adc
sbb
lock
jae
sbb
pop
insb
cmp
add
inc
das
nop
or
mov
ja
mov
xor
fidivs
xor
cld
lods
ret
daa
mov
pop
ljmp
mov
cmp
pop
pop
cmc
fcom
cmpsl
xchg
dec
imul
and
stos
inc
rcll
sub
push
adc
add
scas
addr16
in
mov
std
xor
test
inc
pop
jmp
push
repnz
out
scas
in
xchg
adc
fmulp
test
bound
fnstsw
pop
scas
xchg
ss
inc
jns
popf
in
outsl
pop
pushf
std
imul
out
or
stos
lds
adc
or
clc
adc
dec
out
xor
xchg
adcl
dec
shrl
adc
sbb
lds
scas
test
imul
or
adc
mov
out
fcomps
mov
sti
add
outsb
fs
add
and
push
mov
or
testl
ljmp
adc
mov
repnz
fsubs
lds
add
pop
data16
pop
mov
cmp
pop
pop
mov
sbbb
dec
test
xchg
imul
xchg
fbld
sbb
inc
jle
sub
mov
scas
icebp
fwait
pop
push
pop
cli
push
pop
adc
mov
outsb
mov
or
pop
test
jne
int
out
lods
jecxz
and
and
jo
test
enter
sub
nop
xchg
sub
mov
repnz
or
movsb
inc
sti
daa
push
or
addr16
in
xchg
jno
sbb
leave
jge
mov
jne
adc
or
sbb
inc
cli
sti
lea
push
cmp
int
insb
stos
sbb
sahf
adcb
push
xchg
fdivp
call
sti
leave
pop
mov
mov
add
das
mov
mov
push
imul
cmpsl
loopne
and
inc
mov
ret
movsl
adc
fists
mov
xlat
shl
into
enter
popa
adc
call
orb
test
mov
call
mov
testl
ficoms
jge
xor
insb
inc
pop
xchg
dec
xor
sub
jns
lea
push
fs
sbb
jecxz
clc
insl
add
xor
mov
mov
pop
mov
adc
xchg
sbb
sbbb
dec
mov
xor
lds
mov
xchg
jg
push
mov
xor
mov
xorl
movsl
xchg
mov
jle
roll
loop
add
nop
adc
cmp
insl
mov
xchg
lock
sbb
mov
bound
xchg
pop
lret
mov
cmp
lcall
arpl
sub
fildll
mov
jp
test
lret
push
sbb
lcall
dec
adc
cli
dec
dec
popa
cmp
sub
orb
add
mov
adc
loope
scas
pop
xor
insb
pop
push
shlb
or
jl
xlat
mov
push
sub
pop
add
sahf
pop
aam
push
adc
test
mov
in
pushf
ds
jecxz
mov
dec
push
pop
add
mov
pop
and
test
or
add
mov
mov
sbb
jo
repnz
js
js,pn
mov
cmp
int
dec
inc
inc
inc
mov
lret
dec
jne
xchg
loopne
test
mov
cmp
lds
add
xchg
push
es
xor
call
adcb
fcompl
or
clc
mov
jne
and
call
inc
insb
lea
and
push
fidivs
frstor
pop
outsb
lods
dec
add
gs
and
push
dec
xchg
adc
fs
decl
ljmp
xchg
stos
inc
push
xor
inc
mov
push
xor
mov
pop
hlt
mull
popf
in
clc
data16
out
arpl
sbb
mov
push
outsl
jbe
jo
lret
es
mov
mov
xor
adc
orb
adc
es
mov
inc
push
aad
cmp
bound
sahf
pusha
shrb
xlat
and
cmpsl
sub
pushw
test
mov
mov
jecxz
movsl
dec
int
mov
jbe
xor
xchg
sub
pop
xor
fiadds
or
dec
fistl
lcall
jbe
sub
and
sbb
lods
mov
jb
int
dec
adc
imul
mov
xor
cmp
aaa
and
mov
adcl
push
je
mov
or
jns
pushf
roll
push
xor
popf
jbe
push
adc
into
adc
push
xor
fld1
mov
push
lret
pop
loopne
bound
push
mov
dec
mov
in
cmp
cmp
mov
mov
sub
pop
and
aas
xlat
jecxz
lods
shlb
push
in
enter
mov
negb
movb
je
rorb
xchg
cmpsb
sub
arpl
xchg
call
xchg
rcll
and
test
adc
cmpsb
push
pop
repnz
jp
adc
push
sti
jne
push
cmc
and
mov
and
mov
in
push
push
pop
dec
ret
dec
leave
in
data16
cmpl
pop
mov
or
pop
sub
int3
jo
xor
jbe
mov
sub
adc
push
negb
sarl
into
push
adc
stc
repz
pop
or
mov
and
pop
jno
rclb
xor
gs
aaa
dec
pop
cmp
lahf
js
repnz
int
push
pop
fidivl
sub
mov
lret
mov
jp
jb
push
repz
js
inc
mov
sbb
dec
sbb
mov
inc
sub
ja
add
lret
int3
adcb
cmp
loop
loope
sub
jae
dec
and
sub
fnsave
inc
mov
pusha
pop
and
dec
jmp
jge
inc
pop
je
mov
insl
push
adc
add
fdivs
imul
mov
inc
out
mov
or
stos
test
sub
sbb
sbb
mov
addr16
push
je
pop
mov
lcall
cmp
fstpt
xchg
mov
rcll
sub
push
sub
fisttpl
sti
add
in
test
daa
pop
cmpsl
js
and
imul
repz
lods
in
or
in
movsl
call
sub
cli
in
dec
nop
gs
cwtl
sarl
test
or
aam
pusha
inc
sub
inc
xchg
mov
cmpsb
inc
ja
addr16
popf
sub
inc
pop
stc
mov
fisubl
add
jmp
push
add
xchg
or
int
pusha
adc
fidivrs
loopne
jp
push
adc
xchg
pop
jne
dec
inc
imull
push
ja
dec
xchg
add
jnp
es
jo
push
mov
rclb
loop
dec
mov
icebp
out
push
xlat
sbb
loop
ljmp
ss
mov
push
sti
cwtl
fst
sub
stos
lret
push
outsl
lods
pushl
xor
dec
jno
mov
rol
std
sub
ja
adc
aad
rol
in
outsl
bound
and
dec
pop
mov
dec
add
xchg
mov
mov
and
xchg
cli
scas
inc
int3
rcrb
arpl
add
fwait
rcrl
cmp
mov
pop
mov
mov
xor
mov
stos
into
add
pop
gs
pop
pop
lds
scas
ss
xchg
pusha
jmp
sbb
or
mov
jno
pop
and
mov
mov
js
aas
test
in
ret
insl
lret
and
mov
pop
mov
pushf
lret
adcl
in
sti
rcrl
and
add
xchg
ss
aaa
insb
loope
dec
mov
das
mov
or
insl
imul
aam
mov
or
cld
daa
std
ds
add
or
ljmp
popa
mov
push
mov
ret
cmpsb
mov
rcl
or
icebp
sbb
mov
xchg
push
in
mov
fnstenv
cpuid
ror
movsl
pop
cmp
das
pop
jbe
xorl
out
pop
cmpsl
pop
dec
popa
xchg
int3
pop
and
and
imul
inc
push
lods
add
mov
xchg
pop
pop
inc
insb
cmpsl
dec
js
jbe
add
mov
rorb
and
inc
jl
rolb
xchg
inc
pop
lret
xor
lahf
pop
cmp
enter
rcll
iret
dec
mov
rcrl
arpl
mov
fsts
mov
xchg
mov
pushf
jge
stc
mov
mov
movsb
xchg
and
subb
lods
jno
cmp
jnp
sub
mov
dec
sub
xchg
sub
pop
idivb
add
mov
in
add
ficomps
lods
ret
fdivrs
pop
test
scas
cmp
fstpl
lock
inc
sub
xchg
in
push
and
imul
jecxz
xchg
movsl
loopne
lret
lcall
dec
shlb
and
jecxz
pop
mov
adc
out
leave
jae
xlat
fwait
add
pop
jb
and
mov
std
add
test
push
cmpsl
enter
icebp
cld
push
jbe
movl
push
and
xchg
lcall
jbe
test
ljmp
rorl
pusha
neg
dec
outsl
les
sbb
std
sti
inc
cmpsb
mov
inc
pop
mov
scas
pop
xor
in
fwait
sbb
rcrb
cmp
sub
jnp
iret
std
or
or
mov
jl
out
xchg
arpl
jmp
call
inc
xchg
addr16
adc
and
sub
in
pop
push
testl
mov
jp
dec
mov
mov
js
cld
cmp
leave
mov
fidivrl
dec
cmp
push
lcall
add
fs
flds
cmp
or
mov
and
add
enter
pop
mov
hlt
sub
ds
sub
jne
int3
and
inc
ret
hlt
xor
xchg
cmp
shrl
inc
or
sub
lret
int3
loopne
sub
jae
jl
cld
faddl
outsl
aam
popf
mov
cli
cmp
or
ds
dec
jmp
cs
rcr
idivl
pop
addr16
mov
cmp
pop
repz
xchg
fsin
sarl
mov
jmp
xchg
flds
daa
add
sub
mov
int3
or
push
mov
pop
fnstenv
into
xchg
outsb
cmp
inc
cmpsl
cmpsb
jb
outsl
insl
mov
arpl
bound
xor
mov
out
sbb
xchg
fidivrs
pushf
cmpsl
pop
pop
add
xchg
mov
dec
push
lds
add
icebp
or
jbe
es
in
aas
and
add
xchg
jb
and
cmp
jle
cmp
int
js
jg
aaa
mov
mov
dec
enter
sbb
and
addr16
sbb
cmp
jmp
sbb
popa
pop
xchg
test
sti
inc
into
outsl
jnp
fsubrs
pusha
nop
arpl
into
aam
sahf
cmpsb
fisubrl
arpl
sub
lods
xchg
ret
fldenv
dec
inc
cli
gs
in
test
cs
insl
dec
and
stos
dec
mov
inc
jecxz
and
xor
popf
add
cmc
cmpsl
jns
nop
sbb
into
mov
andb
gs
inc
cli
xor
jl
pushf
repz
cld
test
mov
adc
stos
mov
daa
cmpsb
lods
mov
test
xchg
sbb
stos
pusha
fwait
aaa
cmpl
fimull
imul
in
rcll
scas
cmpsb
add
add
call
in
push
mov
fistl
arpl
std
ja
jo
jge
jge
inc
cmp
xlat
ds
lahf
mov
xor
cld
lcall
repnz
inc
movsl
mov
jl
aaa
dec
mov
mov
fwait
pushf
mov
js
leave
lds
mov
shlb
fscale
int
sti
xor
hlt
or
lcall
push
loop
mov
sbb
js
ljmp
dec
dec
cmp
aad
pop
add
dec
jmp
xor
loopne
sbb
fcmovu
mov
mov
dec
mov
xchg
cs
mov
rolb
inc
shlb
repz
sbb
pop
xchg
push
pop
lock
xor
cmp
lahf
aas
push
sti
sub
loope
subl
jae
ljmp
cmp
inc
addl
cli
push
mov
xchg
cli
jg
dec
gs
test
scas
addr16
mov
data16
cwtl
aad
or
ror
sub
inc
sarl
add
std
les
sbbl
je
mov
leave
arpl
leave
movl
adc
add
mov
repz
fsubrs
cmpsl
fwait
xchg
inc
rep
jbe
xchg
push
mov
push
pop
push
pop
xchg
push
push
addr16
adcb
rsqrtps
xchg
push
sub
pusha
aad
push
ljmp
push
jbe
int
movsb
roll
push
sub
les
adc
test
sub
pop
push
pusha
xor
push
mov
ja
imul
push
push
jp
push
add
cmp
test
ljmp
cmc
outsb
stos
test
jae
adc
int
aad
frstor
popf
cmp
mov
push
cli
stos
jnp
jp
mov
clc
and
xchg
or
jecxz
push
loopne
out
or
xor
aam
fnstcw
out
add
xchg
insl
and
shlb
int3
push
xchg
lock
and
jnp
pop
adc
xchg
mov
xchg
or
lahf
push
sub
jns
xchg
cmpsl
in
inc
mov
push
mov
jo
add
ja
out
xchg
ret
xor
and
and
xchg
out
push
insb
sarb
gs
and
mov
inc
in
inc
les
in
outsb
stos
sbb
rcrb
mov
out
mov
jo
push
sub
test
mov
es
push
dec
pop
into
mov
sbb
pushf
repz
xchg
push
xchg
inc
push
and
clc
sub
shl
dec
stos
cmp
lods
fwait
lcall
xlat
gs
push
cmp
adc
sbb
xor
in
mov
mov
mov
ret
inc
imul
push
int3
sbbl
inc
test
es
rcrl
repnz
push
mov
xchg
push
jle
xor
leave
pop
mov
xchg
xchg
lahf
lods
mov
push
inc
sbb
jmp
jne
addr16
sarl
imul
inc
pop
ja
push
das
jbe
dec
pop
cld
inc
xchg
daa
mov
sbb
in
enter
rcl
push
cwtl
mov
pop
loopne
test
imulb
push
mov
adc
sbb
jecxz
es
ljmp
cli
dec
shl
into
mov
ficomps
inc
test
push
inc
and
mov
aaa
shrl
out
fmull
in
pop
insl
add
ds
and
cmc
add
pop
mov
adc
and
loopne
lret
and
inc
cltd
stos
mov
and
out
in
int3
mov
call
insb
loope
dec
xlat
push
push
pop
lcall
mov
cwtl
jg
pop
mov
lods
int
and
jmp
and
dec
mov
je
iret
fsubr
in
loop
jp
fcmovb
shrl
jle
sahf
gs
test
push
mov
add
jecxz
sub
and
test
fisubrs
stc
dec
mov
fwait
adc
clc
add
mov
aad
or
jmp
sub
mov
mov
and
push
ss
aam
in
jp
adc
and
shrl
inc
lret
sbb
test
popa
scas
mov
sbb
je
and
mov
dec
xor
stc
push
cmp
pop
sub
in
inc
fstps
popf
and
jg
mov
jae
or
sbb
sbb
inc
push
pusha
inc
pop
and
rolb
lahf
inc
adc
fnstsw
lods
adc
cmpl
cmc
fsubrl
and
add
sti
pop
cmp
call
cmp
dec
inc
movsl
out
push
or
popf
adc
or
hlt
fisubs
xchg
jns
dec
outsb
xor
and
lret
outsb
iret
jge
sub
sti
dec
aaa
dec
insb
push
sti
faddl
dec
movsl
nop
add
daa
xor
adc
cmpsl
sub
or
adc
dec
add
and
lds
addl
stc
xchg
and
in
pop
sti
jo
xchg
pop
cmp
testb
scas
adc
jle
adcl
mov
push
jo
or
mov
lret
add
xchg
inc
fdivs
sbb
ror
stc
adc
addr16
repz
in
pop
inc
pusha
cmp
fbld
mov
mov
xor
mov
outsb
xchg
lock
dec
pop
cmp
fsubrs
mov
out
pop
dec
stc
and
imul
in
push
ljmp
divb
xor
fldt
bound
cmp
jl
pmulhuw
pop
push
mov
or
rclb
push
and
clc
mov
jnp
jo
dec
sbb
hlt
das
and
enter
aad
int3
inc
mov
lcall
cmpsb
mov
adc
sub
xchg
rcrl
bound
adc
xor
add
add
lret
pop
ret
les
inc
pop
lcall
cwtl
jl
adc
outsl
push
test
fs
mov
out
xor
sbb
nop
dec
jmp
ret
pop
stc
xor
loopne
or
mov
dec
orl
insl
inc
xchg
and
test
xor
add
inc
stc
jecxz
cltd
lcall
loope
sub
or
jb
add
testl
ficompl
push
out
mov
or
xor
xchg
mov
mov
mov
fcomps
test
mov
test
addb
inc
sub
mov
pop
divl
leave
frstor
shrb
jno
xlat
lock
aaa
in
jne
xchg
push
cmp
xor
cmp
xor
or
cli
js
pop
iret
jno
adc
aam
xlat
fxch
mov
shll
and
push
jno
mov
push
pop
loop
fwait
jae
mov
pop
clc
and
test
aam
insl
xor
sbb
sbb
sub
gs
or
rcll
sti
add
stos
lods
mov
jp
mov
js
in
std
mov
dec
jne
fdivrs
sub
mov
out
or
mov
pop
push
xchg
adc
xor
ret
dec
mov
jge
pop
push
js
fdivrs
movsl
jae
lea
mov
xor
fisubrl
dec
xchg
gs
jbe
inc
out
mov
pop
mov
sbb
idivl
ss
dec
in
aam
mov
xor
popf
jecxz
mov
pop
sbb
lret
jo
mov
in
negb
pop
push
sub
inc
out
in
or
xor
and
insl
sbb
xchg
jns
dec
sti
add
stos
pop
fwait
add
pop
xchg
lock
pop
xchg
xlat
mov
adc
pop
das
into
jae
addr16
pushf
mov
inc
ret
adc
in
adc
je
pop
hlt
mov
sbb
mov
outsl
out
xor
pop
ds
and
loope
jecxz
jg
test
xor
push
mov
out
insl
adc
sub
ljmp
cmp
mov
fld
and
movsl
pop
mov
fnsave
jne
and
inc
into
mov
loope
pop
cmp
out
scas
mov
mov
scas
mov
sbb
popf
cld
sub
or
mov
cmp
add
add
enter
add
scas
imul
leave
pop
aam
fimuls
jnp
pop
jl
les
mov
pop
fdivrl
mov
shrl
ss
pop
push
jb
xor
push
gs
gs
sub
clc
xchg
fs
adc
in
lods
test
aad
cmp
ljmp
testb
nop
fcoml
sbb
dec
in
cmp
popa
jl
mov
mov
addr16
dec
je
into
mov
or
lds
cmp
lahf
adc
cltd
aas
dec
sub
ret
mov
outsl
adc
lret
push
mov
lahf
ss
out
pop
inc
lock
das
sub
sub
inc
sarb
ds
mov
cmp
inc
gs
inc
xor
pop
enter
add
jl
orb
mov
repnz
icebp
inc
cmc
xor
cmp
sub
adc
divl
add
and
cmp
mov
insl
in
addr16
lods
test
cmc
icebp
sub
xlat
test
fidivl
pop
movsl
push
loope
movsb
mov
lahf
repnz
lret
jae
and
push
test
loopne
and
aas
sub
lock
add
mov
mov
mov
cld
scas
push
mov
pop
lahf
loop
add
ljmp
icebp
adc
xchg
loopne
pop
adc
js
jle
leave
cwtl
jne
movsb
fs
cmp
cmp
mov
stos
xor
repnz
repnz
jns
jb
xor
cmpsl
shrl
xchg
pop
cli
mov
sbb
xlat
cmp
mov
xchg
push
mov
jnp
or
jg
mov
push
xchg
js
xor
cmpsb
out
cli
xchg
ret
xchg
mov
in
mov
adc
jnp
sbb
xchg
scas
leave
lods
dec
loop
ror
mov
push
cmp
or
fs
pop
outsb
stos
cltd
inc
xchg
movsl
inc
xchg
push
out
rcr
jno
gs
hlt
in
cmc
mov
dec
lods
fiaddl
cmp
leave
dec
je
insl
dec
cmp
outsb
fildl
in
mov
mov
enter
inc
addr16
cmp
adc
xor
sub
pushf
std
push
andl
popa
push
pop
cmp
out
and
cli
pop
xchg
pop
scas
and
roll
jnp
push
sub
cwtl
jb
je
fstpt
fidivs
test
jg
imul
pusha
aaa
jnp
sub
and
cmp
jp
shl
int3
imul
ds
popf
xor
xchg
push
cmc
out
push
filds
xlat
lea
cmp
xchg
dec
notb
aas
mov
push
cmp
sbb
xchg
popa
outsb
mov
stos
lds
jns,pn
or
sub
and
sahf
nop
ret
shrl
inc
ret
les
loopne
ret
fcmovbe
stos
pusha
jne
daa
ds
dec
lock
mov
push
push
and
xor
pop
sub
push
sahf
lahf
jge
repnz
adc
daa
cmp
loop
sub
push
xchg
cltd
adc
jmp
sbb
sbb
aaa
fstp
call
lds
adc
mov
leave
aam
int
shld
pop
mov
cli
xchg
cmpsl
push
dec
iret
mov
loop
stos
mov
imul
jp
out
cmc
jl
fcom
mov
sub
dec
push
pop
sub
scas
js
mov
pusha
aas
lahf
stos
sub
jo
popf
insl
pop
aaa
lods
inc
ss
cltd
stos
sbb
int
imulb
inc
insb
aam
pop
cmp
and
mov
loopne
adc
cwtl
hlt
pop
xchg
lahf
pop
and
shrl
sub
xchg
dec
push
cwtl
dec
pop
data16
fdivp
pop
dec
in
call
mov
inc
rolb
mov
shrl
xorl
int
cmp
mov
xor
mov
or
inc
dec
jno
test
cltd
lods
push
movsb
sub
rcrl
rcpps
test
popa
cmpb
cli
ret
push
loop
popa
add
scas
pusha
mov
jmp
push
pusha
and
in
mov
push
xchg
sti
gs
test
mov
dec
test
das
je
mov
and
xchg
sarb
popf
test
jmp
jbe
stos
test
push
fsubs
xchg
gs
inc
faddl
inc
cli
mov
scas
adc
test
mov
fistps
mov
xchg
and
sbb
inc
add
add
sbb
fists
dec
mov
lock
lea
jmp
jbe
lds
arpl
or
adc
out
cmp
ret
or
adc
sub
rcrb
adc
and
jb
adc
xor
leave
ljmp
dec
movl
pop
or
inc
mulb
lea
inc
sbb
add
outsl
aaa
add
scas
addl
push
incl
mull
push
xchg
mov
imul
pop
xchg
int3
or
cmpsl
pop
lret
lahf
xor
and
xor
and
add
fbld
dec
idivb
sub
out
mov
lea
gs
mov
and
sbb
filds
in
push
cmc
adc
mov
xorl
mov
pop
lcall
sbb
lods
aam
leave
test
jmp
dec
dec
movlps
dec
sbb
sub
cmpsb
jmp
iret
repz
repnz
dec
adc
jbe
je
rcr
cmp
jl
call
and
mov
aas
test
push
push
sahf
xchg
inc
xchg
test
mov
inc
lds
gs
mov
fdivs
addr16
sahf
scas
mov
jecxz
push
shrb
lds
ret
cmp
sahf
inc
add
addb
inc
and
nop
mov
adc
out
push
flds
nop
mov
and
je
cmc
push
cmp
push
fisubs
sub
in
es
inc
imul
add
pop
imul
stos
movl
out
or
in
and
mov
pop
pop
xor
dec
test
pop
shll
lock
out
dec
sub
pop
dec
mov
aas
repnz
sti
addr16
ja
mov
mov
push
sub
and
cmp
stos
push
mov
rclb
xchg
les
std
jg
lea
mov
dec
in
and
push
jne
ss
mov
aad
xchg
inc
iret
cld
mov
je
lret
mov
push
ljmp
and
outsl
xchg
lea
xor
lret
cmp
test
push
add
dec
jbe
jbe
jae
loope
pushf
pop
insl
loope
and
fcomps
test
mov
mul
mov
and
sbb
ret
popf
lods
nop
pop
popa
ja
push
pop
lret
mov
mov
jl
orl
and
cmp
jecxz
cltd
gs
mov
ja
sahf
add
addr16
sbb
je
sub
jne
jle
sub
xor
arpl
xchg
mov
xor
pop
or
loop
cmpsl
and
push
inc
jns
lds
pop
movq
idivb
and
xchg
out
jle
and
push
insb
jbe
xchg
dec
lds
inc
insb
icebp
xor
or
testb
or
mov
push
sahf
aaa
daa
test
mov
mov
in
out
test
lcall
lret
sub
inc
and
enter
decb
ret
mov
push
mov
jl
sti
loop
test
mulb
and
add
dec
jle
adc
neg
push
adc
mov
testb
fsubp
clc
scas
adc
jnp
sub
adc
cmc
or
test
inc
jbe
pop
std
jnp
ss
mov
sub
enter
jge
push
test
jns
and
mov
or
insb
add
fcompl
push
and
mov
mov
xor
mov
loopne
adc
mov
push
pop
mov
dec
rcrb
gs
lods
ja
leave
push
mov
sahf
dec
hlt
or
sub
in
adc
push
adc
cmc
or
repnz
mov
icebp
adcl
in
les
stos
andb
popa
mov
sahf
push
loopne
out
cmp
pop
cmpsb
sbb
add
push
clc
jl
fs
mov
pusha
dec
xchg
sbb
lret
mov
cmp
xchg
mov
cmp
inc
lods
inc
dec
adc
roll
pop
rcll
ret
in
mov
int3
rol
or
cs
cwtl
and
in
jb
ss
repnz
dec
sub
orl
and
adc
jge
inc
ja
dec
jb
cmp
jmp
in
jmp
roll
sbb
push
cmp
mov
fwait
out
shl
adc
ret
add
arpl
mov
ret
mov
adc
pusha
jno
filds
hlt
push
pop
add
lret
gs
shll
ja
cmp
pop
jo
insb
movaps
xor
pushf
stc
out
aas
push
sbbb
mov
jecxz
push
movsb
xlat
in
dec
mov
shrb
xor
push
dec
inc
mov
fimuls
fcompp
out
pop
jge
add
sahf
in
clc
enter
jmp
test
mov
out
fisubl
jmp
sbb
cmpsl
sbb
clc
fstl
aas
adc
and
mov
leave
xchg
sbb
hlt
int3
js
dec
dec
and
cltd
pop
cmc
sbb
dec
shlb
jecxz
js
push
or
enter
leave
or
movsl
fwait
ret
negb
and
add
or
pushf
cld
aad
lret
testl
and
mov
pop
cmp
lock
adc
pop
cwtl
mov
jae
ret
rcr
sub
xchg
jns
sbb
pop
xchg
ret
dec
adc
test
xchg
hlt
adc
sub
pop
loopne
pop
pop
insl
es
outsb
inc
movsl
inc
ss
lret
dec
out
mov
lock
call
fadds
sahf
push
pop
adc
adc
rcrl
shll
pusha
mov
push
scas
mov
into
gs
fimull
adc
or
cmp
ja
push
inc
sbb
and
sbb
mov
or
fcompl
stos
ss
jae
pusha
sti
xor
adc
shrl
aad
js
fcmovu
imul
cld
roll
decb
lcall
adc
fisttpll
movsl
mov
loopne
xchg
cmovle
mov
cltd
adc
das
xchg
mov
ret
pop
pop
data16
imul
xchg
cs
es
xchg
test
sub
xor
cli
lods
jno
cli
lods
nop
pusha
test
icebp
fs
jo
mov
idivl
inc
aaa
js
ret
mov
fistl
stos
mov
sub
xor
sbb
sub
or
sbb
loope
sub
dec
jecxz
nopl
add
xorb
lods
shr
xchg
jb
loopne
cmp
adc
lock
leave
push
in
je
jbe
fidivs
jne
lahf
sub
add
mov
js
dec
fisttpl
add
jle
sub
lea
adc
fnsave
rolb
imul
cs
pop
push
movsl
mov
into
jg
jne
and
in
or
ret
push
xorl
icebp
mov
sbb
cwtl
add
xchg
push
out
mov
aas
out
xorl
sbb
pop
bound
sub
in
adc
jmp
or
lahf
inc
mov
sub
cltd
mov
cmpsl
aaa
sti
aas
push
mov
es
hlt
cmpsl
cs
mov
call
fadds
jo
aad
lods
xor
cmp
mov
cs
int3
ljmp
xchg
sbb
ja
sbb
sti
mov
jae
fnstsw
rcrb
bound
jno
into
ret
test
insb
sbb
cmp
aas
repz
popa
inc
jb
xor
cmp
xchg
shlb
xor
mov
in
nop
cmp
fdivs
xchg
push
xchg
decl
jbe
stos
fisubrs
fwait
and
bound
or
xchg
inc
cmpsl
pop
dec
sub
xor
sub
adcb
mov
and
dec
sahf
jno
int
cmp
movsb
imul
into
mov
xchg
pushf
inc
repz
icebp
int
mov
add
jmp
cs
cmp
dec
enter
pop
insl
and
pop
push
test
cli
outsl
loope
fistpll
aam
fnstcw
jmp
imul
out
scas
pop
xor
jae
pop
jmp
push
cmp
lret
idivb
push
in
daa
and
xchg
inc
fdivr
mov
sub
scas
push
jo
call
jo
fs
mov
sub
in
cmc
and
inc
fimuls
loope
push
inc
test
dec
mov
in
in
cmp
ss
pop
add
add
pop
stos
lret
xchg
pop
xchg
ja
mov
mov
jns
addr16
pop
pop
jb,pt
clc
inc
and
imul
aaa
lock
sub
cmp
movaps
je
mov
das
loop
in
mov
sbb
lods
mov
ficoms
cmp
jns
cmp
sub
pusha
and
sbb
add
adc
cwtl
xchg
mov
jo
or
out
xchg
pop
ja
nop
cld
push
daa
xor
mov
test
hlt
adc
pop
enter
and
loop
in
andl
repz
mov
inc
scas
test
scas
mov
xor
adc
xchg
mov
dec
jge
fsubrs
xchg
or
inc
and
insb
jp
pop
pop
mov
inc
push
shr
push
and
sub
imul
mov
cmp
xchg
jecxz
insb
pop
sbb
loope
cmp
pop
jo
sbb
icebp
sbbl
mov
add
test
leave
jp
repz
xlat
xor
or
jnp
fistps
mov
cmp
xchg
mov
daa
int3
push
push
lods
ror
nop
lcall
ret
mov
imul
mov
mov
inc
or
sbb
push
nop
mov
aaa
iret
enter
sub
pushf
cld
idivl
push
pop
jecxz
jne
dec
daa
sbb
push
jne
mov
leave
loopne
cmp
push
in
dec
pop
aam
lods
movsl
ror
scas
and
xchg
add
jne
dec
cmp
cs
test
add
fs
adc
or
pop
int3
and
pop
dec
cmpl
dec
jns
and
stos
mov
pop
xchg
pop
aam
data16
nop
popf
pop
fcmovnu
pop
fdivl
fidivs
mov
fstpl
pop
repnz
xor
mov
mov
loope
mov
sub
and
mov
jle
mov
ret
sti
xor
addb
pop
pop
mov
hlt
mov
fldl
insb
sbbl
sbbl
pop
dec
jecxz
mov
pop
popa
or
test
loop
xor
mov
daa
inc
and
and
ljmp
or
or
xchg
stos
xor
xchg
mov
arpl
out
mov
gs
fdivl
pop
cmp
scas
ret
adc
stos
cmpl
inc
push
dec
mov
mov
mov
sub
lret
mov
mov
jle
cmpsb
sub
add
cmp
or
rorb
jns
ret
or
pop
push
in
popa
mov
or
out
mov
in
and
decl
jb
cli
push
mov
in
inc
in
into
push
cmpsl
xchg
int
push
fisttps
jae
enter
ret
aad
cmpsb
hlt
adc
push
mov
loop
or
inc
mov
int
subl
subb
xor
insb
out
dec
popa
aam
jno
iret
daa
adc
out
sahf
dec
insb
repnz
jp
test
push
sub
push
cwtl
jne
in
pop
pop
cmc
in
mov
incb
div
imul
ret
mov
in
mov
stos
leave
push
popf
sub
insl
fmulp
push
filds
mov
adc
cmpsb
xor
shlb
push
sbb
or
dec
cmp
or
mov
push
cwtl
xor
mov
idivb
push
mov
daa
pushf
or
sub
into
sub
jp
imul
in
pop
push
movsb
inc
xchg
mov
cmc
in
cmp
lret
inc
movl
xor
notb
inc
xor
mov
push
std
jl
inc
xchg
sub
call
movsl
stos
out
xor
testl
pop
das
ret
adc
sahf
cmc
imul
ret
mov
pop
aam
ss
pop
addl
fiaddl
clc
cmc
pop
ja
enter
adc
sbb
sbbl
adc
cs
jp
arpl
xor
lock
lods
mov
in
pop
into
sti
dec
scas
cltd
lods
loop
hlt
and
bts
in
lret
pusha
push
mov
jno
jmp
or
popa
and
loope
mov
fsubrs
lahf
xchg
adc
sbb
lock
ja
cld
mov
shlb
and
jne
bound
dec
cltd
push
popf
fisttpll
xchg
mov
pop
fsubr
ret
cli
sbb
dec
sbb
stos
mov
fcoms
add
movsb
dec
divl
inc
fldl
call
test
mov
jb
in
std
dec
adc
jmp
lock
in
mov
loopne
pop
inc
cmpsb
mov
cmp
fmuls
xchg
icebp
mov
xor
insl
jg
sbb
inc
or
repz
sarb
out
cmp
sub
push
inc
stc
ds
in
mov
out
inc
mov
addr16
or
pop
mov
xor
out
in
dec
mov
out
in
cmp
imul
in
xchg
mov
or
sti
xorl
cmp
stos
add
mov
mov
imul
xchg
divl
jecxz
push
popf
jp
test
jno
int
cmp
adc
mov
movsl
iret
pop
push
sahf
data16
inc
and
sahf
pop
sub
fldenv
mov
dec
in
repz
jle
or
cmpsb
mov
int3
cmpl
pop
push
mov
lea
or
loope
pop
and
pop
jle
rorb
adc
mov
pop
loope
rorl
xchg
inc
cli
data16
loop
add
xchg
jno
and
jp
jns
repz
add
sahf
ljmp
test
push
dec
mov
mov
and
xor
mov
pop
xchg
pop
jns
jne
sub
adc
jnp
sub
repz
sub
pop
leave
or
push
js
pusha
xchg
in
aaa
sbb
adc
daa
or
mov
sbb
sbb
ss
cmpsb
iret
stc
lods
loopne
cmp
jle
sbb
loopne
jle
jp
xor
outsl
sub
shlb
loop
lcall
add
jl
inc
pop
adc
in
dec
pop
jp
cmpsb
mov
jge
cltd
dec
imul
push
jno
xor
mov
outsl
enter
dec
and
xor
adc
jbe
xor
jae
mov
imul
xor
sti
scas
roll
out
ds
push
jae
xchg
dec
push
rcll
and
imul
sub
push
frstor
dec
ds
lock
out
jne
mov
in
pop
mov
dec
add
xchg
or
push
ret
mov
cmp
or
adc
in
lret
adc
fwait
xorl
incl
test
push
mov
leave
adc
push
imul
mov
shrb
scas
mov
pop
mov
or
cmp
mov
in
insb
lods
lahf
ds
push
in
dec
push
pop
mov
mov
sahf
in
xor
fnstcw
and
inc
pop
dec
dec
mov
cmpsb
jbe
adc
enter
popf
mov
jl
loop
sub
jl
xchg
sbb
fdivl
jb
jb
sub
cltd
xor
stos
xlat
outsb
cmpsb
jae
dec
mov
xor
mov
test
fsubl
xor
sahf
lock
pop
cltd
rep
fdivl
pop
dec
loopne
lahf
lods
push
popf
mov
mull
js
dec
inc
and
mov
xchg
rolb
adc
fnstcw
stos
aaa
decl
lahf
test
dec
in
ja
cmpl
pop
fmuls
adcb
jecxz
lcall
jae
xor
fsubrs
shr
jo
test
ret
pop
fs
sub
jmp
aad
test
or
sub
iret
ss
and
frstor
loopne
jb
outsl
mov
in
cmp
adc
sbb
mov
cwtl
dec
ljmp
mov
mov
jp
xor
js
push
and
negl
mov
imul
dec
add
jmp
lods
push
or
das
dec
in
add
pop
mov
mov
stos
jmp
idivb
inc
gs
xor
cli
shl
inc
out
lcall
mov
ja
mov
fnstsw
mov
out
pop
cmpb
ss
add
cltd
jp
ja
div
mov
mov
jle
test
sahf
ja
divb
imul
lods
aam
and
test
lea
icebp
xchg
push
bnd
nop
push
outsl
cwtl
movsl
adc
xlat
lods
pop
mov
outsl
jecxz
dec
sbb
lret
in
std
ss
lahf
push
int
pushl
adc
scas
fwait
lret
dec
mov
jns
ds
cmpsb
stc
xchg
imul
xchg
or
jle
ret
mov
adc
sbb
leave
repnz
insb
ss
out
inc
sahf
ss
mov
and
xor
or
ficoml
imul
jecxz
inc
lret
push
push
pop
mov
inc
sub
mov
jle
cmp
push
xchg
adc
cli
gs
cmp
jg
adc
out
xchg
stos
xchg
aas
sbb
add
jae
lods
aam
shll
movsl
nop
mov
xchg
xchg
test
dec
scas
lds
dec
sub
movb
test
pop
xor
jae
cltd
mov
lret
or
test
xlat
nop
push
in
dec
int
jecxz
cs
adc
addr16
push
jno
imul
in
pop
xchg
movsl
mov
shl
enter
push
mov
jp
push
mov
outsl
add
lahf
sbb
pop
notl
push
fcmovb
cmpsl
or
fdivs
inc
add
push
mov
dec
and
leave
lock
push
sbb
xor
cmp
mov
or
push
push
in
sub
ret
movsb
incb
lcall
inc
in
mov
rcrb
xor
sar
jns
push
faddp
ret
fldenv
mov
xor
cmp
jmp
xchg
xchg
pushf
mov
jno
jns
or
mov
pop
hlt
xchg
add
fistpl
sbb
aas
inc
lods
add
inc
movsl
fdivl
ljmp
cmp
adc
inc
loop
cmpb
sti
adc
cmp
imul
push
xlat
lahf
xchg
shrl
adc
push
insb
lcall
mov
bound
jge
or
add
out
js
push
jns
push
jl
lahf
out
mov
test
into
sti
pop
mov
out
adc
mov
pop
dec
pusha
in
jg
jo
pop
sub
xor
mov
lret
cli
repnz
push
jle
dec
int
cmp
incl
cmc
clc
or
jecxz
loopne
sub
sub
pusha
mov
fistps
dec
dec
xchg
push
ja
repz
std
adc
and
and
sti
loop
iret
aad
xchg
pop
push
lret
stos
cmp
xor
sub
xchg
fstl
scas
pop
pop
mov
andb
mov
mov
psubq
and
lret
ss
lcall
jg
xor
hlt
shlb
vpaddsw
cmp
cmp
push
mov
push
aas
cltd
inc
cmc
in
pushf
xor
in
insb
arpl
rorl
jno
fucomp
div
cltd
imul
aad
ljmp
add
into
imul
push
lcall
adcb
lahf
faddl
xor
lcall
movsb
call
dec
clc
adc
xlat
mov
push
push
adc
movsl
in
in
mov
mov
mov
and
faddl
into
loope
je,pn
jnp
dec
xchg
sub
push
fwait
mov
mov
popa
jns
movsl
cmc
pushf
pop
cmp
push
and
cltd
xor
ljmp
pop
mov
jle
jb
jns
mov
out
push
stos
mov
cltd
jl
cmp
aaa
and
pop
mov
lea
scas
pop
test
scas
fcoml
push
sub
in
push
push
mov
jae
inc
cwtl
mov
dec
ja
cmp
mov
mov
das
cmp
or
sub
lahf
je
xchg
aad
sbb
testl
xchg
mov
jbe
das
stos
push
shl
enter
repz
dec
andb
cmp
shl
mov
cmp
imul
push
testb
aaa
mov
xor
scas
jne
fbld
enter
and
and
stos
jae
cltd
cltd
add
dec
lds
inc
mov
sbb
in
cs
or
jle
mov
aas
or
lods
xchg
mov
aad
sbb
and
mov
jnp
mov
add
pop
pop
xchg
and
xchg
add
outsb
test
hlt
sbbb
cmp
movsl
out
lcall
bound
pop
cltd
out
and
lcall
imul
iret
adc
or
inc
cli
pop
fwait
jg
pop
cli
xchg
imul
mov
movsl
cmpsl
iret
xor
mov
or
mov
xchg
mov
jp
pop
ret
jbe
sub
mov
lea
out
mov
lret
jl
sbb
jmp
in
push
xchg
pop
add
dec
mov
sahf
mov
ljmp
sub
push
dec
adc
xchg
movsl
es
leave
mov
dec
cld
aad
push
movsl
sub
push
out
push
loope
pop
pop
ss
adcl
stos
or
xchg
lock
out
ret
cmp
int
jg
in
lea
add
dec
mov
xorb
cmpl
pushf
dec
rorb
mov
pop
jae
inc
icebp
push
insl
sub
add
pop
mov
es
repz
popf
fnstenv
int3
jmp
dec
aaa
mov
pop
lods
outsb
mov
mov
cmpsl
dec
dec
lret
dec
mov
repnz
dec
or
icebp
pusha
mov
fnclex
inc
mov
push
mov
stc
mov
xchg
inc
clc
mov
addr16
jge
loop
mov
sbb
aaa
je
aaa
shlb
jbe
lock
imul
and
jae
repnz
cs
inc
in
pop
test
xlat
daa
inc
leave
arpl
nop
inc
and
jecxz
imul
push
loop
popa
lds
and
xchg
cmpsb
or
arpl
mov
lds
sti
adcb
andb
and
or
xor
aam
test
in
adc
xorl
pusha
outsb
stos
jo
cmpl
xchg
xlat
cli
xor
pop
push
cwtl
lds
inc
lds
mov
addr16
scas
and
mov
jb
xor
test
sub
mov
ret
pop
add
xchg
inc
sbb
mov
das
xor
lea
gs
outsl
add
shlb
mov
lods
icebp
adc
int
ds
mov
or
aam
adc
sbb
rcl
movsl
mull
arpl
cltd
push
cmc
xchg
mulb
int
in
in
lea
xchg
xchg
cld
pusha
push
imul
sbb
mov
fstpl
fwait
mov
sbb
adc
sub
jnp
aad
pop
stos
push
jns
andl
jecxz
aaa
das
jae
inc
lods
popa
aam
and
std
dec
mov
jge
jnp
or
jnp
dec
test
cmp
push
mov
mov
nop
scas
sbb
mov
push
rcr
sbb
mov
mov
imulb
loop
mov
out
mov
stos
dec
sub
out
cli
mov
or
or
clc
jo
pop
and
pushf
test
mov
add
push
mov
scas
hlt
in
push
xlat
loope
cmp
mov
sbb
ljmp
out
les
fidivl
cmpsb
in
in
jae
clc
jge
sub
push
sub
inc
xor
scas
testb
inc
and
jmp
out
mov
shlb
out
mov
sbb
lret
aam
mov
movsl
leave
popf
or
cmpsb
sbb
lds
mov
rclb
test
fdivs
pop
mov
xchg
lea
mov
bswap
mov
lods
nop
cltd
aad
jae
jne
mov
test
mov
dec
mov
jbe
or
add
test
adc
or
cld
repnz
cli
push
popf
cmpsb
push
sub
lock
xor
and
cmp
in
xor
fstpl
out
cltd
inc
jp
cmp
mov
lea
cmp
mov
mov
xor
fisttpl
repz
push
rcll
or
lds
adc
sbb
pop
call
inc
and
in
xor
movb
mov
adc
mov
mov
dec
les
fmuls
cmpsb
loopne
lds
push
je
data16
enter
dec
stos
sbb
repz
lret
cmpsb
xchg
fcompl
lcall
jp
hlt
mov
stos
in
cs
lock
push
lahf
dec
out
mov
xchg
push
fcomps
adc
test
std
cmc
fnstsw
out
das
jo
leave
std
ds
test
subb
test
dec
and
inc
dec
xchg
out
les
sbbl
lods
in
cld
sti
sbb
cmp
ret
push
jle
lea
dec
das
cmc
insl
mov
pop
ds
pop
jbe
push
mov
fwait
and
enter
clc
jne
movsl
xor
cmp
fwait
insb
shll
shll
jmp
out
cmp
lods
dec
andb
cwtl
and
in
mov
int
test
push
jo
in
jbe
hlt
xchg
leave
cld
pop
test
sub
inc
push
lds
mov
mov
xor
mov
out
push
cld
adc
bound
out
test
sub
lock
jle
insl
jbe
scas
ljmp
xchg
js
mov
insl
push
int
push
mov
je
push
shl
pop
sub
mov
bound
fimuls
adc
mov
nop
cld
not
cmp
mov
fbld
mov
push
sarl
add
mov
pop
mov
fidivs
inc
mov
loope
cmp
loopne
fisubs
cmp
sub
lods
lds
or
jmp
xchg
cmpsl
sti
scas
dec
push
xchg
mov
or
xor
adc
pop
es
loopne
push
addr16
movsl
cmp
dec
mov
dec
xor
faddl
fwait
divl
negl
out
int3
or
mov
add
xor
push
es
push
in
jbe
test
movsl
xor
arpl
mov
mov
sub
mov
clc
rol
enter
jge
pushl
fwait
sub
cltd
push
scas
test
push
ret
ficoms
lret
add
sub
jecxz
jg
imul
mov
jno
mov
imul
jmp
jo
inc
fdivl
xor
scas
inc
jecxz
lahf
add
mov
jle
mov
lods
ret
loopne
mov
das
push
and
mov
aas
aad
ds
xor
pop
pop
sbb
xor
adc
les
call
in
and
push
sbb
loopne
jno
push
jae
xchg
aam
dec
out
jb
fstpl
shll
adc
test
clc
mov
dec
aam
mov
add
fnstsw
push
jno
cmpsl
sbb
adc
imul
cwtl
lret
int
and
mov
aam
inc
mov
jno
imul
cli
sahf
movsl
and
lret
insb
push
push
popa
push
cmc
ret
jle
jo
std
sbb
and
mov
inc
ds
cltd
pusha
pushf
xor
test
nop
pop
out
scas
fdivrp
ds
and
mov
mov
adc
push
testb
int
xchg
hlt
sbb
dec
lcall
cmp
xchg
add
or
mov
loopew
ds
cmp
and
idivb
pop
pop
insb
xor
push
in
push
aam
push
push
fdivs
addl
mov
adc
fcomps
gs
or
outsl
loope
dec
addps
xor
into
loope
sub
cmp
or
bound
shrb
sub
mov
popf
mov
jge
jg
lods
daa
out
pop
cmpsb
and
lret
in
pop
loopne
dec
mov
int3
lret
xchg
add
xlat
and
je
mov
pop
push
pop
scas
pusha
and
call
ja
in
push
int3
cmp
sbb
mov
dec
mov
add
add
repnz
jnp
mov
ljmp
xchg
out
js
icebp
xchg
jmp
stos
pushf
gs
sarl
sub
push
dec
mov
enter
enter
and
arpl
insl
mov
push
in
vorps
sub
icebp
ficoms
xchg
inc
sbb
xor
in
mov
lods
rcll
sbb
lahf
loopne
inc
test
xor
shll
mov
fprem1
push
dec
arpl
jae
into
adc
inc
jle
inc
xor
inc
shld
sbb
cmp
lods
xor
testl
push
xchg
ss
pop
cmp
add
daa
shll
pop
pop
push
cltd
addr16
inc
cmpsb
lret
or
aam
mov
dec
addb
mov
push
pop
js
sbb
push
xchg
and
adc
pop
xor
dec
cmc
add
sarb
dec
mov
and
hlt
and
std
or
outsb
lret
mov
mov
sti
xor
ret
test
stos
jge
sub
fistl
shr
and
jns
ds
fdivl
xchg
sub
dec
cmpsl
dec
sbb
xor
xchg
adc
clc
outsl
pop
pop
test
loope
push
or
adc
out
adc
jl
scas
inc
divl
or
add
sbb
je
xor
push
mov
add
lret
icebp
xchg
lret
fwait
popf
das
jo
push
mov
adc
sub
xor
mov
xor
mov
pop
xorl
inc
inc
outsb
mov
scas
hlt
fsub
and
stc
push
or
add
addb
in
enter
icebp
sbb
inc
jnp
xor
pop
fnstenv
loopne
addr16
je
leave
scas
js
xchg
fistpll
pop
ss
aam
int3
in
lcall
jmp
inc
dec
cmp
int
mov
fwait
jb
mov
sbb
mov
cli
mov
sbbb
add
sub
xchg
call
test
ss
pop
mov
xorl
fs
push
adc
mov
sub
rclb
mov
mov
test
std
imull
xor
sub
jbe
xchg
add
xchg
sbb
les
push
push
fisubl
xor
cld
xlat
lods
ret
xchg
ud1
push
sbb
dec
ljmp
je
test
fildll
add
xchg
ret
push
pop
rol
movsb
das
decl
mov
cmp
inc
in
scas
pop
movsb
test
cmpb
dec
rcr
incb
in
ret
xchg
and
hlt
jae
mov
nop
and
test
sub
shll
xchg
and
mov
sbb
jge
lds
pop
and
imul
sbb
lret
and
xchg
test
sub
sahf
mov
fneni(8087
rcrl
mov
sub
inc
dec
int
or
adc
jg
subl
pop
adc
outsl
std
sub
push
sub
mov
sub
push
sub
adc
in
les
mov
inc
push
cld
test
jmp
mov
or
ret
inc
or
mov
mov
push
inc
mov
mov
xor
icebp
mov
xchg
subl
mov
xchg
cmp
sub
sti
ret
std
mov
cwtl
dec
pop
push
out
mov
shlb
es
shlb
outsl
pop
fwait
mov
sub
sbb
fsubl
jns
icebp
fidivrs
push
aad
mov
shlb
mov
push
mov
cmp
mov
push
lods
pop
pop
pop
dec
sti
std
fidivs
repnz
pop
jg
or
add
das
mov
mov
aas
in
imul
movsl
inc
jbe
aaa
movb
repnz
lock
outsl
addr16
inc
push
pop
fldl
adc
cmp
enter
outsl
mov
mov
dec
xchg
mov
das
xor
add
xor
pop
and
out
insb
adc
or
fcoml
pushf
and
push
mov
es
pop
loope
sbb
out
inc
sahf
out
xchg
lcall
jb
mov
adc
out
pop
cmp
sub
in
cmpsl
cs
jo
loop
in
stos
int3
mov
or
dec
mov
jnp
mov
out
testl
or
stc
mov
push
aam
ss
loop
icebp
pop
in
loop
daa
xor
loope
lret
add
adc
mov
cs
sub
popa
adc
mov
pushf
mov
sbb
sarb
icebp
xor
mov
es
jle
daa
aaa
std
or
lret
int
lea
dec
inc
mov
data16
jle
dec
movsb
rcr
add
lahf
sub
cwtl
ds
dec
mov
pop
jae
addr16
or
mov
jb
add
adc
cmp
loop
inc
dec
or
dec
mov
arpl
shll
ja
lret
enter
data16
fs
out
fcompl
xor
sbb
mov
xlat
xlat
repz
push
repz
push
in
push
adc
push
test
scas
in
test
call
xor
add
int3
jbe
mov
mov
adc
xchg
stos
jae
jle
test
xchg
add
cmp
loopne
sbb
cmc
test
push
pusha
cmp
jmp
pushl
fnstsw
iret
test
pushl
adc
cld
add
in
cmp
fcmovnbe
jmp
xchg
dec
ja
imul
inc
test
int3
cmp
fmuls
mov
pop
stc
mov
xor
js
mov
std
ficompl
test
mov
std
push
sbb
iret
and
xor
pop
cmp
mov
nop
pop
adc
mov
add
jo
cmp
jecxz
fwait
push
xchg
scas
cmp
add
loopne
into
mov
jg
repnz
sbb
add
sti
sbb
jl
lea
mov
mov
add
or
push
and
pop
fdivs
sti
jle
push
and
rolb
shll
stos
inc
outsl
mov
gs
sahf
jg
ret
es
and
repnz
aad
sub
sub
aam
xor
scas
and
adcb
and
mov
adc
mull
rorb
icebp
imul
scas
inc
mov
sub
enter
push
mov
out
cs
sahf
lcall
cmpsb
std
adc
mov
stc
cmp
cs
shll
cmp
scas
mov
std
xchg
pushf
lock
test
dec
jne
ret
push
push
adc
and
pop
les
shll
mov
mov
dec
jbe
divb
fcomps
or
pusha
lods
popf
out
test
ja
xor
cltd
add
pop
jne
jg
pusha
pop
scas
lahf
push
push
scas
adc
in
ret
inc
outsb
pusha
mov
sub
push
xchg
movsl
mov
incl
sub
jecxz
xor
pushf
push
sub
and
scas
test
aas
sub
cld
xchg
test
or
pop
pop
jae
and
leave
dec
shll
lods
js
adc
shll
bound
xor
xor
dec
into
mov
shll
and
mov
aam
fs
lret
inc
stos
push
dec
jae
cmp
push
mov
push
mov
mov
pop
mov
test
adc
jmp
dec
inc
hlt
xor
dec
xor
fstpt
arpl
lret
add
lock
call
cmp
rcr
jp
aas
and
inc
mov
jmp
in
jp
sbb
divb
ret
mov
and
dec
lret
scas
ret
sbb
xchg
adc
lock
call
std
pop
cmpl
mulb
cmpsb
xchg
lds
push
mov
hlt
clc
jge
mov
icebp
adc
mov
pop
mov
xchg
or
rcrb
int
movsb
pop
cmp
xchg
sub
jno
fstps
add
insb
add
push
out
inc
in
scas
cs
add
sub
jb
sub
cltd
add
dec
xor
mov
aas
std
mov
aaa
pop
cmp
xor
mov
xor
outsb
fdivrl
add
aam
xor
mov
aad
stc
out
das
sub
and
jns
addr16
adc
test
push
aam
push
push
or
movsb
lods
xor
mov
jl
flds
or
mov
add
or
movsb
and
or
or
mov
insl
push
stc
popa
fbstp
ljmp
aad
cltd
mov
imul
xchg
add
pop
loop
jmp
aam
inc
cli
mov
clc
xor
mov
ss
xor
sub
dec
arpl
fwait
out
pop
orl
mov
mov
popf
loopne
push
stc
scas
mov
sub
mov
ret
shlb
dec
mov
or
jmp
inc
das
cli
inc
inc
jg
fcomi
cmp
fiadds
and
cli
cltd
sbb
xlat
popa
enter
mov
lret
jnp
sahf
add
mov
mov
dec
loope
jno
rclb
push
mov
dec
lods
push
mov
pop
pop
jb
rorb
mov
cmp
push
and
iret
ss
ret
popf
int3
pusha
popa
pop
mov
mov
sub
arpl
xor
fcomps
xchg
js
pop
mov
out
cld
out
xchg
aas
and
outsb
addr16
jo
xchg
adc
dec
inc
sbb
push
dec
cltd
fcoml
add
dec
dec
sub
das
testb
pop
leave
dec
cmp
add
inc
in
insl
and
and
mov
out
or
lds
lods
into
ss
xor
fwait
mov
sub
ss
cmpsb
cli
push
addb
push
shll
icebp
stos
dec
mov
sarb
push
lods
push
mov
mov
jecxz
mov
inc
cmp
lock
sbb
mov
sbb
lcall
lock
sbb
mov
aam
lock
gs
std
test
mov
or
jb
mov
push
fcompl
mov
hlt
out
dec
xor
aam
dec
movsl
mov
mov
jmp
movsl
mov
jg
js
adc
cli
xor
aas
ret
mov
jne
jg
jae
subb
jns
cmc
add
mov
ja
xor
daa
les
mov
and
jns
test
pop
shl
loope
shl
push
adc
push
sub
repz
mov
sub
shrb
pushf
sahf
pop
insl
jb
popf
or
push
in
adc
int
addb
subl
insb
mov
es
cltd
pusha
push
sub
notl
sbb
add
popf
push
push
test
std
dec
cmp
sub
mov
adc
sar
push
rorb
mov
pop
mov
outsb
loope
out
sbb
or
jae
adc
movsl
sbb
pop
sub
jbe
sbb
flds
xchg
stc
insb
stos
in
xchg
jge
mov
and
pushf
fsubrs
xchg
pop
xchg
xchg
xchg
jge
dec
loope
lods
shll
rclb
das
mul
cmp
fsubs
xchg
dec
dec
ret
pushf
xor
mov
lods
lock
pop
push
inc
add
aas
add
and
pop
leave
jno
test
xor
xlat
jl
mov
sub
xchg
stos
cmp
adcl
inc
push
cs
lds
daa
je
push
fwait
or
popa
jno
aam
cmp
inc
or
jb
ljmp
pop
adc
jp
aaa
xor
test
aad
hlt
jbe
mov
iret
sbb
dec
sub
dec
pop
push
mov
and
cmc
test
lcall
mov
imulb
add
xchg
and
jne
cwtl
or
mov
lods
adc
pusha
pop
lock
shll
mov
lds
in
xchg
cltd
jbe
xor
fistl
jp
inc
or
mov
orb
mov
inc
mov
call
push
add
sbb
imul
loope
mov
bnd
fsubrl
cmpsl
or
out
rcrb
fcmovbe
add
or
popa
repnz
xchg
cwtl
in
insl
arpl
ret
mov
mov
iret
ret
pop
fimull
dec
and
sub
icebp
movsl
fisubrl
rolb
test
adc
pop
inc
dec
push
pop
and
test
sub
push
mov
daa
dec
fiadds
rorl
mov
mov
pop
ljmp
sub
pop
jae
mov
mov
and
dec
int3
out
or
movsl
ljmp
in
mov
je
mov
mov
sbb
push
sub
cmpsl
pop
mov
insl
jo
out
and
popf
jle
add
push
add
sarb
enter
in
cmp
push
out
xor
popa
jle
sbb
insb
and
jge
cwtl
push
fcompl
push
fdivs
ss
fsubp
aam
outsb
je
lock
mov
mov
dec
push
out
jns
pop
xor
pop
mov
pop
loopne
xlat
sahf
mov
gs
dec
js
out
das
cmp
or
pop
lret
sub
insb
cmpl
hlt
mov
popa
push
outsb
mov
jae
push
cwtl
leave
or
or
push
and
mov
out
push
jle
mov
std
push
xchg
cmc
movsl
loope
scas
sub
leave
test
and
mov
ss
mov
mov
fidivs
dec
inc
in
cld
nop
inc
or
imul
pusha
hlt
jmp
xor
push
roll
cmpsb
scas
mov
adc
ljmp
pop
mov
jne
push
gs
jo
les
or
dec
push
loop
data16
in
or
pop
cwtl
jno
adc
add
push
insb
and
xor
cmp
sbb
add
das
pop
lods
test
lea
sub
fstl
sbb
movl
and
mov
cld
cmpsb
jno
sti
mov
sarb
andb
in
aad
dec
push
add
cmp
cmp
mov
sub
mov
inc
pop
sbb
ss
dec
shl
mov
push
mov
decl
dec
xchg
ficomps
add
xchg
jle
adc
jne
xchg
test
and
ret
push
jl
and
ljmp
push
adc
mov
addr16
add
dec
pop
cmp
add
jno
notb
inc
inc
andl
dec
loop
sarb
pop
add
add
pop
adc
ss
push
in
mov
enter
lods
sub
fstps
xor
lahf
iret
add
mov
clc
or
out
dec
push
dec
pop
cmp
mov
mov
mov
out
jmp
ja
shll
jmp
popw
insl
adc
mov
sub
pop
shlb
addb
and
cmp
xchg
xchg
imul
xchg
insl
imul
cmp
pop
shrb
sbb
rcl
adc
addr16
sub
lret
aam
test
mov
adc
mov
mov
adc
bound
cmp
and
in
stos
mov
das
jbe
pop
in
sbb
xor
mov
push
sbb
jnp
and
mov
test
cmp
cmp
out
test
or
rolb
insb
pushf
push
adc
popa
dec
xchg
mov
jb
in
add
push
add
out
clc
jne
mov
aam
ret
mov
addr16
icebp
cltd
loopne
mov
jp
outsl
pusha
std
add
ljmp
jp
out
das
dec
jne
mov
mov
push
rcl
mov
out
int3
push
jmp
or
and
les
cmp
lock
mov
cltd
bound
ss
loope
sub
cmp
fidivrs
or
push
divb
push
mov
iret
or
jns
dec
pop
std
fsub
push
das
push
dec
scas
cli
sahf
inc
lods
rcll
test
xlat
outsl
mov
frstor
icebp
pop
inc
int
push
mov
cmp
rolb
je
mov
lcall
xor
pop
int3
mov
icebp
lret
sbb
fcmovne
xchg
mov
add
daa
cld
mov
std
cmp
ficoms
leave
push
push
xor
mov
push
pop
pushf
mov
inc
xor
in
or
mov
fs
or
jne
or
daa
dec
cmp
mov
dec
bnd
mov
inc
xchg
je
push
mov
xor
pop
inc
int
cmp
xor
ljmp
xchg
sbbb
add
loop
mov
enter
arpl
pop
lods
mov
or
into
arpl
aaa
shll
cmpsb
jbe
pop
pop
cmpsl
pop
xchg
iret
inc
loope
iret
loope
cmp
inc
mov
int3
or
mov
out
sahf
repz
in
and
sub
xchg
inc
dec
out
sub
scas
mov
sbb
xor
push
mov
xor
push
arpl
inc
jb
mov
mov
les
testb
xchg
insl
mov
aad
mov
xor
sbb
add
mov
adc
orl
out
inc
icebp
mov
mov
jp
push
mov
jle
xor
popa
out
add
sti
xchg
out
pop
movsb
testb
arpl
cmp
cmp
daa
jo
pop
ret
repz
cmc
xchg
out
add
cmc
test
xchg
cmp
lcall
ds
mov
dec
roll
shll
out
inc
mov
imul
icebp
cmp
inc
incl
movsl
add
dec
jae
xor
pop
pusha
inc
cmp
xlat
test
ja
scas
or
lar
pushl
jbe
xchg
cmp
xor
lret
adc
mov
lcall
mov
jnp
fwait
and
jecxz
mov
cmp
jb
out
mov
cmpsl
inc
mov
mov
lds
inc
pushf
sbb
push
adc
aam
jae
mov
xor
fs
sbb
js
add
jne
sbb
mov
push
sbb
call
das
jb
aam
and
pop
bound
test
pop
inc
out
mov
mov
sub
xchg
into
popf
mov
outsb
icebp
adc
jmp
sti
push
xchg
in
loope
sarb
cmp
fsubrs
mov
push
jno
adc
cmp
xchg
jge
jns
cmp
scas
pop
mov
lcall
push
test
daa
pusha
push
aas
popa
call
adc
fsubs
stc
sti
add
pop
and
mov
fs
push
imul
cmp
cmc
and
jne
jmp
lret
aas
lods
jg
fdivrl
xchg
std
dec
or
mov
testl
icebp
push
adc
jo
mov
add
fistpl
inc
lret
xor
jle
sub
hlt
sbb
push
jecxz
daa
das
jle
rclb
arpl
leave
mov
dec
push
ljmp
lods
cmc
xchg
push
cmpsl
lds
outsl
xchg
dec
fmull
mov
xor
mov
and
leave
ss
aaa
pop
addr16
mov
sahf
dec
fdivp
pop
test
daa
and
lea
adc
pop
push
or
xor
js
in
jecxz
stos
xchg
push
sbb
mov
data16
int3
scas
mov
call
push
push
push
sbb
arpl
cmp
lds
cmp
inc
mov
cmp
pop
adc
dec
iret
mov
pop
rcrb
out
lahf
xchg
sbb
lahf
shll
xchg
js
or
push
push
lret
mov
shrl
into
fdivrs
push
mov
mov
cwtl
push
jns
movsl
cmp
and
adc
clc
xchg
pop
leave
or
in
fildll
add
lcall
in
mov
addr16
dec
cmp
ds
je
adc
vpsrld
stos
mov
mov
test
sub
je
loop
sar
push
sub
sbb
test
pop
or
mov
rcr
jno
dec
mov
out
in
sti
fmull
stc
sub
push
dec
mov
das
dec
add
and
bswap
nop
rcl
addr16
lods
adc
out
adc
sub
clc
int3
fs
mov
hlt
aad
sub
mov
mov
js
jno
das
sbbl
imul
test
dec
pop
aad
lret
stos
sbb
dec
ljmp
jmp
cmp
outsb
push
lret
jge
inc
xchg
in
lcall
mov
test
cli
outsb
xchg
addr16
pop
xor
jmp
pop
mov
lds
in
push
bnd
pop
fisttps
adc
mov
stos
pushf
mov
jmp
out
mov
fnstenv
xchg
sbb
lods
or
rol
sbb
jge
icebp
in
addl
add
ss
push
bnd
nop
mov
push
test
cltd
mov
inc
je
and
or
mov
mov
inc
add
xor
les
movsl
js
pop
xchg
in
daa
shll
xorb
dec
add
inc
sti
inc
arpl
xchg
xchg
f2xm1
mov
pop
pusha
xchg
and
leave
cmp
push
lods
lods
movsb
sahf
pop
pop
gs
lret
addr16
xchg
add
ja
lret
fnstenv
or
fildll
mov
inc
adc
divl
jp
out
ficomps
aas
pop
test
stos
push
inc
in
je
stos
mov
mov
xchg
xorb
pop
mov
call
add
int3
jo
add
stos
lret
ja
lods
fdivrs
push
push
mov
fbstp
inc
add
leave
aas
insb
and
cmpb
leave
xorl
popl
inc
sbb
jno
je
fldt
jns
jne
rorl
xlat
aad
gs
push
mov
sbb
pop
movsl
pop
int
fwait
es
sbb
test
inc
shl
push
cmp
jbe
cmp
hlt
mov
fiadds
mov
pop
aaa
push
fisubrl
repnz
ja
out
xchg
jecxz
pushf
test
mov
jbe
aad
push
lds
aas
jnp
repnz
inc
int
cmp
jno
xor
lock
jecxz
cmp
sub
insb
or
fidivs
cmp
mov
fs
mov
leave
popa
mov
movsl
xchg
and
sub
test
mov
lcall
mov
scas
fmuls
pop
lock
xor
mul
jmp
popa
jge
mov
hlt
fs
sub
adc
int3
mov
rorb
push
test
xchg
fwait
dec
jmp
out
lret
cmp
es
in
imul
movsb
push
fdivrl
xor
outsl
fsubp
fsubr
dec
dec
sub
push
add
ljmp
dec
or
and
int3
or
ljmp
sti
aam
and
mov
cltd
in
add
lret
cltd
xor
pop
inc
adc
add
out
fstl
into
adc
andl
leave
adc
sahf
and
mov
sub
mov
mov
mov
inc
js
add
and
xor
scas
arpl
cmp
mov
add
dec
jle
scas
sub
adc
xor
xor
or
or
xchg
pop
xchg
push
push
mov
jp
mov
in
fsubl
es
jle
js
addl
dec
jb
add
pop
int3
lahf
test
sub
mov
xchg
cld
mov
ret
mov
loop
stos
ds
hlt
inc
jg
outsb
push
sbb
das
push
pop
fucomp
push
add
test
adc
mov
jle
and
in
cmp
popl
cmp
cmp
cmp
es
ljmp
push
mov
outsl
and
mov
pusha
push
sbb
out
ficomps
xchg
or
outsl
adc
shlb
xchg
rcr
das
loopne
adc
imul
shl
lods
inc
xchg
mov
or
repnz
push
pop
into
pop
test
cld
xchg
cmp
shrl
mov
and
imul
add
push
out
dec
xchg
dec
mov
pop
mov
fnstenv
fbstp
pushf
xor
daa
add
dec
mov
ss
int
pop
xchg
repnz
scas
dec
mov
popf
subl
inc
nop
xor
sbb
jg
lods
leave
enter
outsb
jl
rcrb
in
push
mov
out
xor
pop
or
std
ss
loope
add
shr
mov
subl
popf
testl
push
sbb
lret
mov
push
lahf
sahf
test
ja
xchg
inc
mov
push
inc
pop
js
jnp
es
mov
add
subl
arpl
int3
pop
xchg
fimull
add
out
arpl
sbb
jo
jns
mov
push
lret
adcl
cli
nop
lahf
cmpl
cmp
inc
hlt
cmp
push
or
insb
sub
xchg
icebp
xchg
fwait
js
sbb
js
jg
sti
adc
clc
push
cmp
stos
or
cmp
push
pop
rep
xor
shrb
std
into
bound
loope
mov
ret
aad
mov
es
jg
outsl
test
mov
bound
outsl
scas
xchg
out
hlt
std
data16
dec
push
mov
in
inc
mov
push
out
sbb
cmp
push
or
popl
test
mov
icebp
sub
fs
enter
ss
mov
add
adc
add
add
mov
jae
incl
out
rclb
mov
fcoml
cmc
xorl
adc
imul
mov
sbb
shll
lods
stos
das
cmp
or
jne
rol
sti
mov
adc
es
dec
pop
cmc
cs
test
pop
mov
ja
jo
aas
movsl
lods
jmp
ror
es
push
imul
frstor
add
jle
and
dec
adc
aas
in
push
pusha
and
int
adc
test
movsl
out
adc
xchg
ret
or
mov
xchg
cmp
mov
push
mov
adc
push
push
addr16
push
mov
cmp
sub
jne
cmpsl
repnz
mov
fincstp
mov
loop
add
and
push
mov
aas
push
std
lret
mov
imul
out
loopne
sub
inc
jo
sub
mov
fisubrl
imul
fnsave
push
inc
xchg
inc
leave
adc
cmp
pop
mov
jecxz
movsb
fwait
sahf
jb
outsb
pop
out
pop
iret
mov
adc
lcall
cmc
adc
sbb
into
push
adc
aad
stc
ds
divb
rolb
mov
mov
dec
sub
dec
mov
shll
cmp
xor
xor
lret
les
or
inc
out
cli
xor
cmpsb
repz
aaa
push
data16
xor
incl
cmp
cs
xlat
xchg
add
pop
in
cmp
cmpsb
xchg
pop
dec
repnz
adc
or
and
aas
add
out
cmp
popf
fadds
repnz
xor
scas
jo
push
and
mov
loope
int3
sbb
loop
movsb
test
shl
pop
add
das
in
push
push
clc
inc
or
mov
sub
pop
mov
bound
lcall
inc
cmpsl
data16
mov
push
and
imul
daa
test
jo
cmpsl
pusha
jae
insb
cmp
dec
push
pop
repz
push
iret
mov
jecxz
jle
xchg
dec
inc
cltd
pop
gs
mov
sar
fldcw
sti
xor
ja
and
ss
shrl
inc
jl
dec
jo
pusha
sbb
cmpsb
pop
int
inc
jg
mov
in
out
lret
adc
stc
aad
and
cmpsb
push
xor
pop
sub
and
jl
out
je
add
xor
cli
insl
call
rolb
xlat
fs
dec
lds
cld
add
test
xchg
sbb
out
in
shll
mov
dec
lock
loope
pushf
push
fmull
or
jl
mov
enter
cmp
and
inc
aad
fistpll
sbb
jne
out
xor
leave
jmp
aas
dec
cs
cmc
loop
int
repz
push
std
gs
das
xchg
popa
add
and
push
scas
mov
ficoml
iret
push
add
add
mov
xchg
nop
mov
push
adc
cli
push
repnz
std
push
into
insl
scas
add
xchg
imul
sbb
push
cmp
pop
enter
idivb
cmp
jg
mov
push
xor
pop
aas
fstl
cmp
stos
lods
xor
andnps
xchg
test
cmpsl
pop
mov
mov
dec
out
fldcw
lret
aad
inc
movswl
cmc
iret
repz
xchg
aam
sar
cmp
movsl
mov
mov
std
xorl
inc
lret
mov
ds
jle
add
dec
rcll
js
sar
push
shrl
xchg
ret
cwtl
push
mov
inc
bound
dec
aad
inc
and
xor
sub
and
movb
pusha
bound
data16
lahf
add
arpl
les
mov
ja
xchg
or
popa
mov
daa
loop
xchg
mov
dec
iret
dec
mov
out
cli
in
rolb
js
push
mov
push
dec
sar
push
lcall
int3
pop
lcall
mov
ret
mov
shlb
stos
lods
mov
pop
mov
cmp
pop
push
aaa
stos
adc
je
mov
lds
rorb
adcb
xor
imul
pop
ja
xchg
mov
xor
das
mov
xchg
cli
stos
add
lods
mov
cmpsb
sbb
cmp
je
data16
stos
adc
and
roll
sub
inc
rcll
push
push
push
ds
sub
push
call
mov
sub
js
xor
dec
and
mov
xor
xlat
jnp
stc
push
popa
pop
stc
lahf
jne
stos
scas
jecxz,pt
pusha
incb
xor
aam
jo
inc
addb
roll
int
jle
mov
rcrl
dec
insl
cltd
dec
es
lret
dec
jecxz
mov
or
ja
bound
mov
mov
pop
cmp
sbb
test
outsb
inc
sub
lods
xchg
dec
pop
inc
ss
faddl
and
repz
jge
inc
arpl
fbld
xor
sub
testb
mov
sub
xlat
es
jl
pop
js
cs
subb
lods
rorb
inc
in
out
pop
jo
jae
and
mov
jp
rclb
ret
roll
mov
and
out
jbe
ljmp
cli
add
fimull
in
sbb
mov
lret
push
rcr
out
int
xorl
xor
test
dec
arpl
add
cld
test
mov
sub
andb
xchg
mov
mov
jmp
inc
pop
adc
xorl
dec
js
or
out
xor
cmp
hlt
push
cltd
imul
stc
adc
xor
inc
aad
divb
and
fs
push
cmp
pop
dec
sub
in
jl
fisubs
es
inc
in
das
sub
mov
lret
jbe
aad
lret
adc
adc
cld
sarb
frstor
test
clc
pushf
test
lret
es
xor
leave
inc
icebp
pop
push
jbe
xchg
xchg
xchg
insl
rcrl
sbb
decb
enter
das
jne
out
push
pushf
xor
cmp
cmp
fs
mov
daa
xor
add
or
cltd
adc
icebp
mov
push
add
and
cmp
lcall
pusha
les
dec
in
fldenv
hlt
dec
xchg
mov
or
mov
or
mov
cmc
andb
fcmovnu
mov
jmp
xor
stos
flds
imul
pushl
das
lcall
add
pop
mov
fs
inc
pop
fmull
jns
sbb
pop
dec
aas
fidivrs
mov
xchg
ret
cld
daa
aam
and
addr16
push
mov
and
push
mov
adc
sbb
arpl
push
fs
pop
popa
cmp
movsb
dec
adc
mov
inc
and
ret
xchg
orb
arpl
add
pop
add
aad
and
inc
pop
mov
in
inc
loope
jo
fmulp
cmp
dec
mov
in
mov
pusha
out
dec
mov
sub
xor
lahf
pop
je
insl
pop
jge
ds
hlt
add
mov
pushf
cmc
sti
cmpsb
jae
and
loope
loop
add
add
cmc
inc
fstpl
pop
lock
roll
in
out
push
lods
inc
in
and
mov
rcr
insl
rclb
fbld
jl
loope
ds
lcall
xchg
iret
cmp
push
sub
pop
arpl
add
cmp
lds
or
xorl
loop
mov
adc
push
sub
cmp
icebp
xchg
xchg
and
sti
rcrl
icebp
gs
imul
cld
cmpsl
inc
mov
sahf
pop
stos
cmpsl
pop
jo
pop
add
sarb
push
mov
and
sbb
daa
stos
push
push
xor
fildl
lcall
xor
inc
mov
stc
xchg
mov
out
lret
mov
dec
pop
dec
fdiv
mov
fwait
sbb
jno
sti
cmp
dec
repz
jl
sbb
adc
je
xor
cmpsl
jecxz
or
cltd
rolb
mov
out
test
jnp
mov
imul
adc
push
dec
jae,pt
std
in
ss
cmc
jae
cmp
loopne
push
outsl
je
push
adc
adc
mov
mov
inc
ret
inc
into
dec
lahf
jnp
das
test
and
out
mov
mov
add
jae
stc
dec
lock
popf
sti
clc
xor
out
loop
jle
lahf
add
loope
lock
xor
dec
inc
pop
int
cmp
xchg
lret
pushf
mov
mov
aad
scas
pop
roll
push
sbb
xchg
cvtpi2ps
mov
addr16
jp
pop
xchg
ljmp
mov
repnz
mov
std
mov
mov
into
dec
dec
je
lock
cmp
mov
ss
add
mov
xchg
cli
test
jg
push
stc
lcall
adc
mov
xor
jp
stos
mov
mov
sbb
fisttpll
pushf
lahf
mov
dec
loop
jo
out
add
movsl
add
mov
xchg
mov
push
and
es
pop
jb
ffreep
dec
lds
out
dec
sub
mov
jno
adcb
jge
aas
in
xlat
jns
dec
lock
loopne
push
push
xlat
push
adc
pop
mov
pop
enter
pusha
in
aas
add
fwait
sbb
or
fbstp
cmpsl
mov
andb
xor
push
dec
and
pop
pop
loop
sub
add
adc
test
xchg
cmp
add
xor
cmpsb
sbb
mov
adc
xchg
xchg
xchg
inc
push
push
les
inc
sub
fsubrl
shrl
jmp
mov
pop
adc
ds
cmp
mov
jns
cs
pop
ss
loop
jae
adc
sub
dec
mov
push
add
jl
movsl
push
test
cmp
mov
out
and
mov
or
add
gs
xchg
into
je
test
jne
enter
sbb
mov
stc
das
or
fstp
cmp
mov
mov
lds
gs
mov
and
stc
cmp
pop
and
popa
push
push
div
sub
jb
outsb
mov
xchg
or
test
push
mov
lahf
ja
cmpsl
xor
mov
dec
or
add
movl
xchg
repz
add
add
xor
popf
pop
add
mov
pop
jmp
negl
cld
stos
rorb
pop
push
jmp
cmp
cmp
cmp
xchg
push
sarl
iret
sub
sahf
rcll
or
popf
rcrl
push
inc
lods
jecxz
shll
mov
loope
mov
dec
arpl
rcr
movsb
pushf
int3
outsb
inc
mov
jle
cmp
or
popf
mov
sti
push
bnd
xchg
mov
jns
arpl
push
pop
lods
and
mov
mov
push
lock
xchg
out
ja
mov
mov
xchg
in
mov
pusha
stos
in
pop
nop
push
jae
outsb
push
mov
jmp
les
add
jecxz
in
xchg
scas
cmp
cmp
jg
xor
scas
leave
mov
jmp
hlt
xor
cld
mov
leave
cmpsb
adcb
jae
xchg
leave
inc
movsl
fdivrs
out
std
mov
mov
jp
push
xor
dec
push
ret
sub
movsl
test
mov
inc
cs
packsswb
popf
xlat
jp
jge
xchg
ljmp
mov
pop
xchg
pop
mov
inc
inc
jns
xor
cmpsl
stos
or
jge
xor
std
mov
inc
or
mov
add
sbb
inc
pop
cmp
iret
idivb
fsubr
jg
testb
pop
or
imul
icebp
out
ds
mov
shll
jecxz
imul
notrack
movsl
imul
jmp
jge
iret
fisubrl
imul
icebp
xchg
test
das
cmp
popa
jnp
mul
loope
fldcw
roll
cwtl
add
push
jnp
push
and
sbb
cwtl
cmp
xor
lock
mov
in
or
jl
push
mov
cli
aaa
cmpsb
outsb
and
rorl
cmp
xchg
adc
push
lret
fstps
pop
in
pop
pop
jecxz
jle
movsb
mov
loop
mov
mov
aaa
dec
sbb
adc
and
addr16
xor
ja
and
push
cmovp
leave
xchg
inc
test
fildl
pushf
xchg
xchg
and
jnp
mov
lock
lds
data16
mov
cwtl
incl
cmpsb
add
xchg
dec
jnp
inc
rcl
cmc
out
cmpsb
xchg
or
adc
insl
insb
mov
js
sar
dec
adc
cmp
jp
pop
fsts
mov
mov
fsub
fldt
fmul
cmp
sub
sub
sbb
cmp
xchg
and
inc
mov
test
nop
push
and
push
es
std
mov
ljmp
hlt
or
out
mov
pop
fistpl
xchg
lock
mov
mov
or
adc
out
addl
mov
subl
jecxz
pop
mov
test
mov
jg
mov
dec
cs
xor
xchg
jge
sbb
mov
cmp
pop
sub
mov
jle
xor
fwait
adc
cmpsb
cmpsl
roll
mov
jl
loop
jo
inc
mov
lods
pop
dec
jg
mov
dec
cmpsb
or
sahf
or
cmp
rcl
xchg
mov
mov
stos
dec
xchg
in
aas
xchg
cltd
mov
adc
sbb
leave
aam
and
out
dec
stos
add
lods
sbb
push
es
mov
sbbb
sbb
daa
cmc
test
lds
pop
out
lock
sbb
pushf
sub
inc
jns
loop
push
mov
aam
xor
sub
adc
xor
push
sahf
imul
pop
lret
xor
and
lret
add
xchg
pop
pop
adc
jg
or
xor
out
xor
rcr
call
enter
jmp
nop
and
sbb
xchg
pop
data16
fisttpl
lret
sub
push
popa
pop
adc
dec
or
and
add
mov
pop
dec
jg
inc
dec
lock
enter
xchg
cltd
xchg
popf
lods
mov
into
mov
jg
mov
push
out
pusha
mov
pop
jbe
shrb
jp
sahf
pop
adc
xor
and
addps
bound
cmp
gs
adc
popa
xchg
testb
loopne
jl
loop
dec
stc
inc
popa
jno
or
jmp
stos
and
lock
adc
mov
lahf
hlt
adc
dec
shl
ror
xor
jle
inc
in
loopne
sub
ljmp
inc
mov
aaa
into
test
cmpsl
call
pop
into
in
repz
icebp
jnp
jmp
jno
sub
rcrl
ljmp
sbb
imul
dec
or
add
das
lds
push
fimuls
fdivs
push
aaa
hlt
inc
into
sub
stc
les
nop
lds
inc
xor
xchg
inc
pop
js
or
ret
jb
int
scas
dec
fnstenv
jmp
idivl
mov
rcrb
or
cltd
pop
loopne
fsts
dec
xor
aaa
xor
push
ljmp
push
nop
pop
pop
test
stc
mov
stos
push
xchg
pop
adc
push
aaa
hlt
sbb
in
add
stos
dec
inc
xchg
dec
in
outsl
mul
jb
addl
loop
aaa
pop
mov
adc
and
jnp
lea
cmp
stos
inc
jmp
dec
xor
dec
cmpsl
mov
lock
sub
test
xor
dec
cs
ficoms
lock
je
cwtl
fldcw
in
fidivl
pop
xchg
add
repz
jno
imulb
mov
rcl
push
fwait
in
and
sub
jae
mov
fists
dec
push
inc
dec
shll
or
fistpl
aad
push
repnz
je
and
dec
pusha
mov
or
mov
xor
mov
fs
mov
leave
sub
push
xchg
repnz
push
xor
inc
fwait
subl
pop
mov
repnz
push
je
sbb
jmp
jne
int3
and
test
insl
mov
pop
outsl
jl
inc
orb
jge
xchg
dec
mov
subl
or
sbb
loope
push
adc
lret
mov
shlb
fdivs
jg
ss
mov
jb
movsl
cmpsb
pop
dec
loop
sub
js
dec
lods
mov
cmc
xchg
inc
pop
jne
test
cltd
dec
test
icebp
shrb
loopne
ret
in
sub
popf
pop
in
cmp
or
mov
icebp
mov
mov
push
aad
repz
hlt
xor
cld
mov
push
dec
inc
dec
shlb
in
scas
mov
jle
ss
pop
add
test
dec
push
pop
out
add
pushl
pop
lret
jg
dec
inc
roll
out
push
mov
stc
push
push
push
rorl
andb
fwait
mov
iret
shlb
sete
mov
dec
cli
inc
dec
lods
dec
jns
sub
dec
mov
fistpll
repnz
ss
shr
mov
pop
sbb
push
adc
pusha
add
dec
jno
jno
sub
push
sub
or
clc
iret
sub
dec
test
jae
sbb
inc
pop
fbld
dec
xchg
lock
pop
js
repz
aad
stos
dec
ret
mov
xlat
ljmp
jl
mov
or
jl
aas
mov
add
movsl
subb
loope
jbe
pop
add
add
bound
sbb
std
dec
fs
pop
pop
xchg
ds
mov
sbb
scas
leave
dec
out
lods
pop
push
and
adc
xchg
mov
or
mov
cmp
jns
outsb
inc
pushf
xor
data16
bound
jmp
in
inc
jo
jne
jle
sarl
xchg
and
inc
fildll
scas
stc
scas
mov
mov
pushf
add
hlt
xor
add
jge
cmpsl
ss
dec
adc
in
add
fnsave
cmc
dec
inc
sbb
scas
cwtl
push
popa
mov
addr16
jnp
cmpsl
into
mov
pop
in
ds
xchg
mov
cmpl
dec
push
hlt
and
jecxz
and
stc
and
test
xor
xor
push
inc
insl
rcll
sub
inc
shlb
xchg
fstpt
pushf
xchg
lret
or
int
xor
lcall
xchg
out
inc
inc
push
adc
incb
leave
dec
aam
stos
mov
mov
pop
lds
sbb
cmp
dec
xchg
into
push
pop
aas
shl
inc
xchg
and
or
movsl
lret
daa
mov
sub
int3
mov
leave
fwait
ret
sbbl
es
hlt
enter
jne
pushf
and
dec
lret
les
add
sub
fnstenv
sub
scas
jp
pop
jp
ds
sarl
dec
dec
shll
mov
mov
sub
dec
push
fsubr
xchg
pushf
jl
add
push
mov
int
cmpsb
stos
ret
aas
call
fs
cmp
imul
std
mov
lcall
push
data16
adc
shll
aas
xchg
sub
adc
test
add
mov
jb
add
cwtl
movb
sub
aaa
out
or
mov
jg
mov
ret
subb
xor
cmp
push
aam
push
sahf
push
cmp
gs
subb
stc
in
roll
mov
cltd
xchg
das
sub
push
add
push
scas
mov
hlt
loope
inc
loope
pop
jo
cli
smsw
mov
icebp
add
jne
sub
sub
xor
icebp
movsb
xchg
jne
je
out
sarl
sbbb
mov
cmp
ja
inc
imul
out
cmpsl
outsb
fildl
add
fidivs
iret
push
out
mov
lcall
nop
jns
popa
adc
loop
cmpsb
cltd
into
repnz
cmc
xor
and
loop
and
mov
shrb
mov
pop
lahf
cmp
mov
repz
mov
jne
jl
push
sbb
lahf
add
adcb
pop
orb
mov
jg
add
jne
inc
stc
js
aaa
fs
sub
or
fnstsw
test
in
jno
xchg
mov
cmpb
ret
xlat
dec
les
ss
sbb
shll
pop
pusha
dec
popf
pushf
shlb
ret
jo
cltd
lret
repnz
add
aaa
pop
inc
addr16
lcall
addb
data16
or
daa
mov
push
push
fprem
and
pop
mov
cwtl
cmp
mov
inc
lahf
jg
jecxz
mov
push
jp
movsl
mov
movsl
mov
aam
fwait
rolb
dec
pop
scas
cmp
dec
std
xor
test
insl
and
mov
xor
mov
push
mov
nop
movb
or
loope
xor
push
push
lea
sbb
jmp
push
jecxz
xor
cmp
xchg
lret
mov
pusha
adc
repz
in
fcmovnbe
imul
and
ret
ja
insl
fwait
push
movsb
pop
jl
imul
adc
subl
xchg
ret
lahf
adc
and
cmc
xor
sub
pop
pop
icebp
ret
jne
cmp
pop
push
mov
sub
iret
sub
popf
lret
arpl
mov
inc
cli
ss
mov
pop
fcoml
lret
sbb
test
lods
and
dec
mov
popa
push
nop
cld
es
cmp
xor
decl
aam
loop
out
insl
dec
into
dec
hlt
xor
cmpb
xchg
jmp
inc
jmp
xlat
aam
popa
rcll
int
test
pop
push
or
xchg
mov
lret
xor
lret
push
push
stos
imull
add
mov
lods
pop
inc
dec
push
bound
mov
mov
dec
cld
test
adc
ljmp
popf
lock
stos
push
ds
xor
popa
idivl
insb
dec
leave
ret
or
rcrb
mov
testl
in
xchg
sub
mov
xor
sbb
adc
and
rolb
pop
imul
mov
bound
mov
inc
jne
lahf
inc
fildll
jecxz
mov
lods
cli
and
adc
push
push
cli
cmp
inc
ja
das
lods
mov
mov
das
std
dec
mov
pop
lret
push
imul
icebp
leave
push
adc
iret
dec
xor
inc
mov
movsb
xchg
jecxz
mov
fld1
push
stos
fsts
inc
xchg
cwtl
cmp
inc
xchg
sub
out
jl
lea
incl
sbb
and
jno
and
in
cltd
lcall
xorl
lods
adc
mov
pop
xlat
aaa
fistpll
mov
rclb
popa
push
fldt
ja
inc
nop
sub
icebp
or
sub
inc
mov
fisubs
mov
push
xchg
stos
in
lea
shlb
jns
rol
xor
jle
mov
lahf
fists
sbb
mov
push
dec
jmp
cmp
xor
inc
arpl
out
jae
mov
ljmp
cmp
xchg
inc
inc
cmpsl
in
scas
shl
xchg
stos
call
and
add
movswl
dec
ret
or
mov
dec
es
pop
popf
jmp
fsubr
sbb
xchg
push
inc
sub
lods
jne
lea
fs
sbb
cmp
out
sbb
int3
cs
or
fnstenv
dec
les
jnp
rcrb
fidivs
test
cmp
push
test
pop
test
jge
test
jge
dec
pop
xor
mov
push
daa
push
mov
fwait
inc
loopne
inc
movsb
add
inc
dec
mov
mov
mov
jecxz
outsl
setbe
xchg
sub
ljmp
dec
movsl
pushl
push
imul
pop
ficompl
add
mov
pop
mov
jge
scas
push
xchg
cmp
movsb
mov
leave
test
push
add
ss
and
mov
cmpsb
fdiv
dec
out
cmc
xchg
stos
mov
ds
dec
out
mov
inc
mov
add
or
mov
xchg
cmpsb
push
in
aad
sahf
pop
cli
or
fcoml
push
inc
adc
dec
xchg
mov
push
addr16
inc
push
movsb
xor
test
fcoml
cld
es
cmc
mov
dec
inc
out
loopne
adc
inc
xchg
rclb
lcall
xlat
jns
jmp
bound
mov
mov
xchg
sbb
icebp
mov
loope
xchg
mov
xchg
movsb
adc
icebp
sbb
push
rcrb
insl
xor
adc
lea
adc
pop
add
mov
test
mov
xchg
push
sbb
sahf
inc
jp
in
imul
int3
push
movsb
popa
mov
sti
xchg
mov
push
andl
jmp
xchg
and
imul
pop
xor
sbb
jl
iret
or
jns
pop
mov
mov
int3
mov
cmp
xchg
movsl
jp
inc
ljmp
mov
add
sar
fmuls
pusha
dec
vcvttps2dq
jmp
iret
scas
in
mov
mov
mov
jo
bound
add
into
and
cmpsb
pop
rorb
stos
mov
jbe
pop
mov
icebp
inc
rorl
mov
adc
mov
ds
xor
sbb
ss
dec
insb
pop
adc
stc
cmc
out
aaa
mov
and
sbb
or
adcl
cmp
int3
mov
or
jne
cli
idivl
sbb
mov
adc
mov
sub
adcb
or
addr16
or
inc
sub
adc
outsl
mov
xor
cs
roll
jmp
push
shl
dec
or
test
add
inc
aam
iret
mov
pop
iret
leave
outsl
pop
push
and
pop
cli
inc
jge
int
and
sub
adc
inc
jle
fistl
and
push
lret
cli
mov
cs
and
sub
inc
dec
or
push
int3
cmp
jns
pop
out
lahf
dec
repz
es
lock
in
mov
hlt
clc
clc
cmp
clc
or
inc
mov
imul
cld
xchg
outsl
mov
into
dec
bound
shlb
lahf
cmc
data16
fldenv
int3
pop
test
dec
sbb
sbb
out
loop
sub
fst
xor
dec
jae
xor
test
out
pop
filds
out
jle
cmc
jge
lahf
enter
mov
jl
stc
push
das
hlt
cmp
mov
push
ss
inc
jle
push
or
std
adc
int3
sub
jge
jnp
jecxz
lcall
inc
mov
lret
jge
push
add
data16
std
mov
push
add
xchg
es
sarb
push
sarb
dec
gs
js
nop
mov
adc
xor
ja
inc
sbb
mov
inc
mov
fucom
xchg
test
cmp
add
in
pop
push
rcrb
aad
add
add
jp
paddw
loope
stos
jp
std
imul
loop
mov
mov
int3
inc
fwait
sub
fbstp
push
or
sbb
sub
flds
lcall
jecxz
jg
push
sub
push
lret
jns
pop
mov
inc
mov
jno
fimuls
shll
xor
fcomps
ret
loopne
loope
cmp
enter
int3
jno
jp
and
sub
test
adc
xor
inc
test
sbb
jge
idivb
and
je
lods
lcall
push
mov
mov
pop
sub
out
stos
movsl
fcoms
adc
xchg
push
mov
mov
stos
cmp
push
insl
lds
push
or
cmpsb
push
frstor
ss
sub
add
inc
rol
mov
push
mov
pop
or
push
in
jno
insb
dec
fistpll
cs
pushf
pop
jecxz
sub
andb
ja
sbb
es
in
jl
jo
and
dec
scas
aas
cmp
lcall
iret
add
inc
add
out
xlat
aas
call
jae
dec
mov
xor
xchg
adc
cmp
out
leave
push
and
adc
sub
push
aas
les
mov
xor
xor
das
sbb
pop
sbb
enter
out
jp
cli
pop
out
jle
in
cmp
add
insl
pop
inc
out
sub
sbb
or
lods
push
test
pop
mov
cmp
mov
out
das
adc
dec
sub
ja
dec
loop
mov
notb
xchg
movsl
push
in
into
adc
add
outsb
mov
int
test
cmpsb
pop
dec
pop
cmp
std
push
add
jl
sahf
fs
dec
pop
out
pop
daa
stos
sub
ja
lahf
pop
dec
aaa
jp
push
mov
mov
pop
or
lret
xchg
dec
mov
in
ja
ss
fwait
inc
xlat
push
int
int
mov
sar
testl
mov
mull
imul
cmp
pop
adc
cmpsl
add
jnp
test
cld
lea
out
in
xor
pop
lds
sbb
adc
or
xchg
scas
outsl
test
in
in
test
bound
xchg
mov
imul
push
lahf
mov
outsb
and
hlt
popa
jmp
stos
cwtl
dec
mov
cwtl
sti
xchg
cmp
ds
pop
test
cs
mov
adc
xchg
in
pop
outsb
out
sbb
inc
xchg
sbb
mov
movsb
and
pusha
inc
lret
pop
dec
stos
std
js
or
and
push
pop
push
rcrb
push
cs
xor
cmp
rcrb
jbe
movsb
data16
pusha
pop
xchg
or
sbb
cmpsb
clc
push
cs
mov
or
jb
adc
jo
rolb
cmpsl
sub
xchg
cmpsl
mov
dec
xchg
adc
adc
mov
jge
mov
ret
jo
cwtl
mov
sub
push
popf
add
mov
jg
xchg
jg
mov
mov
mov
pusha
outsl
movsb
test
fsts
hlt
mov
sub
outsl
lahf
js,pn
popl
das
in
addr16
jl
ret
aad
fcompl
mov
mov
mov
pop
stc
cld
lcall
mov
ss
mov
fisttpll
fbstp
cltd
mov
imul
test
sbb
aad
jns
gs
sub
pushf
fcomps
leave
out
push
cltd
ds
sub
pop
jae
js
sbb
jo
iret
ficoms
sti
mov
xor
sbb
jae
sub
or
lahf
push
or
jle
mov
adc
jle
sbb
lret
sbb
push
subb
mov
loop
test
inc
imul
cltd
mov
jb
sti
sahf
lcall
xchg
lahf
cmp
call
inc
insl
fistl
xor
add
and
outsb
mov
scas
jp
pop
inc
sub
jecxz
and
push
dec
addr16
dec
stos
jecxz
sub
les
cmp
adc
dec
in
mov
jge
sahf
ret
flds
ret
ret
dec
lods
add
fwait
test
jns
pop
cmp
inc
pop
fldl
adc
sub
dec
sbb
das
mov
repz
jg
and
sahf
push
leave
movsb
xor
mov
lods
lret
mov
int
push
mov
xlat
inc
cmp
stos
pop
test
add
idivb
mov
mov
push
push
stos
out
cmpsl
sub
shrb
inc
in
pop
shr
push
cwtl
mov
movsb
adc
and
sbb
movsb
imul
inc
cmp
add
int3
cmpsl
push
loope
push
aam
add
mov
clc
imul
pop
pop
test
loop
adc
and
mov
push
dec
jb
insl
adc
scas
and
fs
cs
clc
test
sub
loope
jge
add
push
negb
mov
mov
add
mov
fimuls
fwait
movsl
in
repz
lcall
pop
sti
pop
aaa
popa
flds
mov
dec
pop
push
jp
dec
in
xor
cmp
test
in
jle
inc
or
xchg
fsub
jbe
mov
pop
jg
inc
mov
shll
hlt
push
call
lds
pushf
shr
mov
nop
out
jle
pop
imul
ja
pop
sbb
xchg
mov
add
lcall
mul
push
cltd
mov
test
xchg
lea
daa
push
in
jge
popf
inc
rolb
mov
dec
std
mov
gs
mov
inc
mov
pop
scas
pop
out
test
test
add
adc
arpl
ljmp
aaa
leave
or
push
fs
ror
rorb
cmp
notl
push
or
xchg
in
invd
out
adc
mov
mov
sahf
jns
and
ret
repnz
movb
fldt
cld
les
xchg
es
loop
idiv
loope
add
sti
push
loope
repnz
pop
sbb
and
addr16
fidivrl
pop
xchg
lahf
insl
jbe
pop
not
xor
mov
shrb
and
in
lds
sbb
xchg
leave
xchg
cld
das
shl
jbe
push
pop
mov
mov
jge
xchg
fstl
fmuls
ljmp
pop
shl
loope
sub
mov
jae
loopne
rorb
sub
mov
and
enter
iret
and
mov
shlb
movsb
ss
dec
jecxz
sub
ds
and
pop
jnp
inc
test
or
lret
out
shrb
pushf
stos
cmpsl
pop
hlt
pop
jbe
gs
sub
xlat
fdivrl
std
inc
rol
idivl
loope
lahf
mov
inc
cmpsb
jns
shr
xor
inc
insb
test
stos
iret
enter
dec
test
leave
push
push
mov
pop
clc
shlb
jecxz
fs
mov
mov
lock
sarb
jne
mov
add
xor
sahf
dec
dec
cmp
or
and
push
jl
xor
jge
jnp
dec
aad
pop
cmpsl
jmp
daa
js
sahf
imul
pop
insb
jno
mov
leave
rcl
and
ret
rcrl
loop
sub
mov
xchg
sarb
out
xchg
mov
pop
fmull
push
in
dec
push
imul
mov
bound
stos
mov
jnp
sarb
xchg
outsl
jge
push
and
scas
pop
sub
or
stos
sbb
pusha
shrd
cmp
in
mov
lods
and
pop
mov
xchg
or
loopne
lret
mov
mov
insl
lds
cmpsb
fwait
mov
add
adc
xlat
mov
add
sub
das
imul
dec
jecxz
arpl
cwtl
mov
jbe
std
sbb
sub
ds
pop
repz
and
mov
sub
dec
cld
arpl
pop
xor
test
jp
test
mov
inc
mov
arpl
ret
pop
call
scas
in
jle
test
decb
loop
pop
mov
cmp
cmpl
or
shrl
in
cmp
arpl
enter
push
addps
xor
sbb
or
add
mov
mov
ljmp
shll
sti
mov
mov
xchg
mov
rcr
push
or
jg
test
dec
das
cmc
mov
int
movsb
cli
xor
dec
lahf
xor
rcrb
in
cltd
mov
adc
mov
adcl
int3
or
das
cltd
shl
cmp
scas
cltd
lret
mov
dec
movsb
stos
loop
aam
ds
mov
mov
cmp
or
and
adc
mov
xchg
mov
adc
test
mov
xchg
loopne
cmp
aad
decl
pop
pusha
sub
js
call
in
clc
add
adcl
adc
sbb
popf
push
cmp
xchg
ja
mov
mov
and
repz
scas
fdivl
out
dec
cmp
push
mov
jmp
fsubp
inc
pop
add
test
jo
call
stc
add
popf
sub
std
iret
mov
fisttpl
test
test
leave
insb
in
xchg
divl
lret
cwtl
and
jo
pminsw
inc
subb
push
mov
mov
inc
mov
dec
loop
jne
loop
dec
pop
test
mov
out
pop
inc
xchg
pop
jle
mov
jns
test
fucomi
fs
lahf
sub
xchg
dec
hlt
sub
ljmp
mov
jg
xchg
sub
xchg
stos
inc
sub
mov
aaa
xor
pop
inc
and
dec
add
mov
cmp
xchg
movsb
setl
push
inc
int
pop
jb
mov
sbb
aad
add
inc
mov
fmul
add
cmp
and
mov
insl
xchg
les
int3
popa
jge
inc
mov
insl
add
ljmp
lods
imul
js
in
movsl
push
xchg
into
dec
mov
and
push
xchg
inc
inc
adc
push
dec
xchg
mov
pusha
jae
lret
in
sbb
xlat
fxch
pushf
mov
lret
and
or
sbb
repz
push
jge
and
pop
sbb
pop
clc
sbb
in
cmp
pop
into
lea
push
mov
loope
cwtl
lods
scas
inc
dec
lcall
push
cwtl
rorb
movb
cli
sub
lea
pop
addr16
ss
mov
or
sbb
mov
in
scas
inc
ss
jecxz
loop
iret
jp
xlat
test
pop
push
mov
imul
inc
sarb
cmpsb
and
mov
fdivr
add
sbb
cmc
adc
push
sti
movsb
mov
rcl
jb
adc
mov
pushf
xor
pop
out
xchg
in
arpl
jo
add
xor
xchg
jbe
adc
les
test
jnp
pop
ret
arpl
add
xor
in
clc
gs
mov
jns
pop
ds
fsubrl
in
jne
sub
mov
cwtl
sbb
jne
into
daa
das
lret
sub
or
jecxz
fwait
sbb
cli
dec
jge
call
adc
jge
test
fwait
sti
scas
or
xchg
aas
push
pop
lds
jo
pop
ja
mov
imul
xor
decb
dec
aas
es
lret
sti
jl
decl
popf
xor
xor
loope
pop
out
test
mov
nop
sbb
adc
lret
xchg
pushf
shl
xchg
jmp
xchg
xlat
push
mov
aam
xchg
mov
mov
ja
push
into
fisubrs
inc
and
movsb
adc
push
dec
or
divl
push
scas
mov
sbb
jle
and
iret
mov
shrb
enter
hlt
bound
divb
mov
xor
pop
xchg
in
sub
addr16
icebp
push
cmpsl
outsb
jge
jbe
jp
out
gs
mov
push
pop
icebp
dec
cmp
sub
mov
jg
jne
inc
out
fs
std
push
or
inc
cmp
jge
xchg
xchg
sahf
dec
mov
test
fcompl
xchg
xlat
pop
mov
lods
js
cs
inc
stos
push
and
dec
pop
mov
pop
nop
mov
xlat
aam
aas
movsl
add
push
cmpsb
out
arpl
mov
jg
mov
or
inc
jge
es
pop
jns
jge
mov
loope
pusha
mov
jne
cli
ret
xchg
jecxz
xchg
sbb
aam
in
adcb
jae
mov
xor
into
insb
fwait
jmp
cmpps
out
hlt
int3
lds
call
imul
sahf
ret
mov
cltd
insb
jp
cld
divb
hlt
xchg
pop
mov
adcb
and
mov
jp
cmpsb
std
push
xchg
or
fistl
in
lcall
jecxz
repnz
stc
clc
dec
imul
lret
dec
aam
sbb
or
fucomi
push
xor
lret
dec
add
push
fildll
hlt
lock
sub
adc
int
stos
mov
shrb
loopne
jg
std
iret
inc
in
insl
sbb
pop
lret
pusha
rcrb
outsl
fsubrs
or
jmp
dec
rolb
scas
adc
mov
sub
in
mov
jl
fnstenv
mov
push
jp
or
jno
ss
mov
pop
pop
fcomps
addr16
mov
dec
repz
mov
dec
les
mov
mov
cmp
pop
mov
jnp
and
out
jmp
into
mov
cmpsl
inc
hlt
xchg
pop
mov
xchg
nop
fistl
lcall
mull
cmp
cmpb
movsl
repnz
dec
sub
inc
loope
aam
mov
inc
icebp
rcrb
sbb
testl
ja
push
or
aad
mov
sar
aaa
inc
dec
adc
loop
pop
cld
out
fsubr
pop
add
sbb
xchg
push
xor
xchg
andl
mov
sti
lods
sahf
or
test
mov
jae
mov
mov
inc
in
and
jp
out
loope
xorb
sahf
inc
ret
sbb
test
inc
jle
lret
pop
lock
cs
sub
insb
sbb
adc
inc
inc
out
xor
ret
sub
jae
hlt
dec
loopne
stos
out
shlb
out
push
aas
xor
repnz
adc
pusha
rorl
push
mov
mov
dec
jg
inc
mov
mov
fdiv
call
daa
pop
xor
pop
push
pop
frstor
call
add
negb
inc
pop
loope
dec
sub
adc
mov
mov
xchg
add
sub
aas
das
sbbl
mov
fdivr
shrb
cmp
shrl
iret
or
xor
xor
jb
scas
loope
cmp
aas
dec
cmp
les
inc
xor
xchg
push
push
popa
insl
adc
orb
mov
jo
test
pop
fnstcw
dec
and
adc
push
push
call
mov
cmp
push
ds
aam
mov
xor
in
adc
pop
or
pop
or
filds
add
mov
inc
push
nop
lds
in
fadds
arpl
mov
cmp
xor
movb
xor
call
movsb
jae
pop
cmp
pop
cmp
inc
jne
test
sub
xchg
sub
or
inc
insl
adcb
xor
cs
xor
and
aad
nop
fimuls
mov
mov
in
aad
adc
mov
inc
into
int
or
mov
shl
mov
ja
xchg
inc
mov
inc
push
negl
jmp
sub
fidivrs
lock
call
cmp
pop
imul
lock
rcll
aad
int
jno
jbe
leave
sbb
mov
xchg
mov
clc
push
push
lcall
fs
enter
adc
jae
and
f2xm1
out
mov
or
mov
cmp
lcall
int
test
fadds
cmp
jb
lret
xchg
clc
push
lcall
pop
push
dec
jg
mov
sahf
jbe
push
mov
push
or
push
inc
ljmp
sti
sub
inc
stos
into
cmp
mov
wbinvd
imul
cwtl
popa
scas
fbstp
js
xor
mov
loopne
cmc
mov
test
ds
notb
jmp
js
jnp
lahf
aas
icebp
int3
pop
lret
cld
mov
inc
movl
aas
inc
push
xchg
orb
sahf
jmp
push
sar
and
fsubrl
shlb
xchg
inc
imul
fisttps
iret
loope
push
stc
pop
loopne
lret
mov
push
imul
adc
aas
lods
and
cmpl
jp
adc
mov
sbb
cmp
xchg
jl
inc
and
loope
sbb
bound
push
imul
or
add
push
push
hlt
push
lret
cmpl
rcr
sbb
out
xor
sarl
clc
int3
pop
std
mov
mov
xchg
imul
imull
xor
mov
or
pop
sarl
repz
out
inc
out
jnp
add
mov
jnp
iret
jge
and
push
adcl
mov
inc
pop
cmpsb
enter
cltd
sub
push
mov
pop
xchg
jmp
clc
rcrl
shll
sbb
mov
push
fcoms
dec
cmpsl
in
pop
mov
mov
or
das
popf
mov
pop
cmp
out
rorl
addr16
inc
push
push
test
jecxz
push
push
inc
push
xchg
pop
adcb
int3
ror
sbbl
push
xchg
add
sub
mov
aad
push
mov
sarb
jg
jne
pop
or
scas
mov
rolb
arpl
stc
and
push
data16
mov
data16
sub
test
ds
cmc
iret
pop
std
xor
out
xchg
cmp
mov
dec
push
cli
dec
inc
rolb
data16
xlat
adc
lret
sub
out
mov
adc
mov
pop
mov
std
xlat
les
mov
pop
add
sub
std
jno
xchg
jnp
faddp
push
loop
or
vmovlpd
inc
and
fwait
test
dec
gs
es
lcall
jmp
or
repz
gs
stc
mov
cmp
sub
int
jecxz
pop
or
sbbl
int3
sub
adc
mov
jb
push
lock
scas
data16
fadds
xchg
int
fldenv
mov
je
or
pop
cltd
xlat
int3
in
jp
push
fcoml
nop
mov
lcall
dec
and
decl
pop
mulb
fiaddl
or
ljmp
cmp
sbb
adc
mov
xchg
adc
xor
or
jo
int3
popf
xchg
lret
mov
jle
imul
stos
cld
seto
inc
mov
aam
outsl
jmp
inc
test
or
test
enter
repz
xor
push
in
adc
clc
ja
sahf
ja
push
or
inc
shll
mov
pop
sub
push
ss
aaa
xchg
xor
test
aad
dec
pop
loopne
jecxz
jle
es
add
call
cmp
pusha
xor
mov
jp
shll
push
xchg
add
mov
test
scas
mov
movsl
scas
jne
adc
and
jl
rorb
imul
mov
shlb
dec
cmp
cld
loopne
pop
test
lock
in
jno
adc
xorb
mov
nop
in
mov
notb
outsl
andb
or
or
and
adc
inc
out
push
hlt
mov
add
ljmp
lret
test
stc
pop
stos
lahf
call
mov
scas
ss
pushw
push
lods
pop
std
adc
lea
int3
xchg
in
cmp
lret
and
daa
call
dec
mov
dec
or
jbe
sbbb
loop
push
in
fsubs
mov
pop
cmp
sbb
sti
test
jp
lret
xchg
pop
or
jge
lea
push
arpl
cmp
leave
lock
and
aas
mov
jecxz
dec
fwait
push
into
and
jae
xor
xchg
push
addr16
add
push
dec
jae
jecxz
jg
mov
push
test
aad
pop
pop
cmp
and
stos
iret
insl
pop
inc
fnstenv
pop
clc
push
rorb
cli
mov
adc
mov
fwait
js,pt
push
loop
or
daa
outsl
imul
xlat
mov
push
enter
leave
arpl
pop
add
pop
adcl
fsubp
xchg
jo
daa
movsb
dec
mov
je
icebp
mov
data16
into
les
aad
cmp
mov
aad
push
mov
std
mov
xor
test
add
adc
jge
adc
repnz
js
test
mov
out
dec
shl
pop
roll
push
imul
push
and
dec
lret
out
in
test
dec
pop
jbe
ficoms
dec
test
ret
jecxz
shll
or
outsl
push
lods
int3
fimull
xor
out
cmpsl
cmpsb
lret
jno
push
cmpl
xchg
jno
daa
jo
scas
movsl
cmpb
cmpsl
adc
pop
inc
test
insl
and
pop
repz
ja
inc
movsb
xchg
pushf
mov
sahf
aad
stos
sarl
pusha
pop
mov
cmc
rcll
aas
jl
es
push
shl
roll
add
fdivrl
dec
jg
popf
addr16
insl
mov
cmpsb
call
repz
pop
call
addr16
loopne
imul
mov
aaa
sbb
fisttpll
jbe
lret
push
add
imul
dec
or
adcl
data16
add
jmp
or
fsubl
cmp
pop
push
xor
or
pop
jg
cli
push
gs
rolb
xchg
mov
cmc
movsb
and
xchg
jmp
addr16
inc
sbb
jns
adcb
pusha
inc
jecxz
inc
push
add
rcll
adcb
dec
xchg
push
pop
jb
xlat
out
ret
mov
mov
jno
leave
insb
xchg
pop
cmp
lods
nop
xor
jg
std
jbe
cmp
adc
cmp
push
sub
ret
pop
xor
enter
mov
insl
push
loop
movsb
mov
push
mov
adc
add
lahf
xor
mov
xor
pop
clc
mov
insl
jecxz
fldcw
dec
cmp
sbb
clc
cmp
cmp
adc
xchg
outsb
pop
ja
movsb
out
dec
jg
fmul
pop
dec
repz
jg
push
pop
cld
test
pusha
das
jne
or
cmp
sahf
cwtl
inc
push
ret
cwtl
outsl
addr16
and
stos
cmpsb
xor
add
into
push
xrelease
andl
mov
lds
rol
jle
push
sbbb
loop
pop
ljmp
pop
xor
push
dec
mov
negl
xor
sub
scas
and
inc
mov
sub
aas
xor
icebp
aad
insl
dec
sub
mov
pop
push
add
push
stos
mov
push
adc
xchg
add
roll
inc
xor
call
xchg
scas
mov
repnz
xor
out
add
inc
arpl
add
push
mov
aaa
loop
imulb
cld
and
mov
or
clc
mov
loope
adc
inc
pushf
inc
push
xchg
js
sti
mov
jae
stos
xchg
scas
push
jo
leave
mov
mov
inc
push
call
mov
andl
pop
xor
sbb
dec
idivb
inc
pop
xchg
imul
inc
out
cltd
js
or
jl
jne
daa
push
sahf
iret
outsl
addr16
mov
subb
dec
fisubrs
jg
je
pop
inc
in
dec
out
mov
not
xor
dec
mov
and
mov
out
pop
fs
popf
mov
inc
jae
or
shlb
jecxz
ljmp
push
cmp
aaa
je
and
add
pop
inc
out
xchg
sbb
imul
adc
adc
and
dec
neg
pusha
stos
mov
scas
push
lods
ss
loope
jbe
outsb
dec
cmp
std
jle
in
mov
add
jle
dec
fistpll
push
imul
lret
xor
push
inc
loop
xchg
lret
add
jmp
push
cs
mov
ds
or
push
and
push
ret
dec
jl
pop
ds
fmuls
dec
adc
lret
jmp
shll
xor
jle
jmp
mov
fwait
in
push
call
mov
int
lods
js
push
jl
js
pushf
js
cmpsb
cmc
push
xor
pop
loope
in
mov
decb
inc
pop
xchg
stos
ljmp
loopne
aam
lds
ret
loope,pn
iret
out
test
enter
lret
ret
inc
pop
repnz
arpl
xor
xor
jle
adc
pushl
mov
mov
mov
push
dec
stc
jge
add
cmpsb
mov
popf
imulb
adc
into
adc
aad
cmp
call
fcmove
dec
rcrb
cbtw
dec
add
inc
lcall
lret
mov
sti
cmpsl
fs
in
mov
cmp
addr16
outsl
push
sbb
fucomp
mov
int
cmp
cmp
jle
arpl
test
pop
or
mov
xor
jmp
sbb
cmp
jns
jp
jb
adc
ret
lret
and
aaa
push
xor
repnz
push
movsb
fnstenv
push
dec
flds
lret
sub
xchg
dec
testl
jmp
push
fsubrp
icebp
out
mov
pop
fisubrs
hlt
insl
adc
pop
cmp
fnclex
or
aad
loopne
push
add
popf
popa
mov
sbb
lcall
push
leave
lret
sti
pop
cmp
xor
mov
adc
test
test
loopne
mov
dec
push
lret
daa
cmpsb
loop
mov
test
cmp
call
in
add
inc
pop
shll
cld
arpl
nop
and
pop
rclb
add
in
add
pushf
daa
cmpb
rcrb
cli
jecxz
subl
push
cli
xchg
sahf
push
mov
adc
scas
lcall
push
xchg
pop
pushf
into
nop
mov
mov
loop
imul
mov
mov
ljmp
sbb
std
outsb
stc
mov
cmpsl
jnp
imul
rcr
divb
xor
js
ret
insl
loope
sbb
xlat
xchg
mov
push
inc
ja
fstl
xchg
fs
jmp
push
out
clc
jno
test
lret
leave
cmp
jg
push
jo
mov
pop
ds
imul
shl
or
cmp
pusha
enter
mov
pop
adc
cmp
cmp
rcrl
mov
jg
xchg
mov
dec
mov
ljmp
adc
inc
lds
into
outsb
fsub
jb
mov
pop
pushl
adc
pop
and
adc
cmp
mov
and
test
cld
out
pushf
lret
sub
dec
adc
add
lahf
pop
or
fdiv
ret
mov
pop
mov
test
or
enter
mov
dec
es
dec
rorl
int3
aam
xchg
adc
mov
xchg
inc
add
push
xchg
popa
jae
cltd
insb
and
mov
mov
addr16
adc
mov
jae
jl
pop
mov
mov
and
insl
in
jno
ret
jne
lods
and
xor
inc
in
push
fldz
mov
push
pop
punpckhwd
xchg
mov
fisttpl
leave
xor
movsb
dec
into
arpl
data16
mov
xlat
xor
dec
aad
popa
movsl
cmp
mov
movsl
push
ficompl
adc
fcompl
xchg
das
repz
push
adc
imul
neg
das
mov
sbb
stos
mov
cmp
std
adc
int
push
cmpsl
leave
je
mov
popf
xchg
aas
mov
bound
fwait
mov
out
cmp
mov
push
lds
int
cld
adc
pop
push
jo
call
rolb
inc
test
xchg
cwtl
cmp
cwtl
adc
fcmovnu
xor
dec
icebp
mov
mov
gs
inc
pop
jns
cmp
pusha
or
or
arpl
push
dec
jb
sub
inc
mov
xor
push
inc
inc
imul
mov
cmp
cmp
call
mov
call
fdivrl
add
je
mov
frstor
jno
daa
and
lret
je
roll
bsr
mov
or
cltd
negb
iret
jbe
shlb
push
rorl
adc
adc
inc
dec
sbb
test
lcall
inc
test
push
dec
fmuls
add
or
cmpsb
adc
mov
mov
std
dec
cli
cmpsb
push
mov
inc
insl
out
pop
pop
sahf
cld
and
jae
add
jb
mov
or
xor
cmc
idivl
mov
jne
and
out
aas
xor
aaa
jmp
xchg
fbld
push
xchg
cld
sbb
nop
mov
mov
int3
jb
adc
and
movb
push
cli
push
xor
mov
lret
hlt
repz
in
mov
and
add
xorl
int
xchg
das
jnp
out
fiadds
nop
mov
dec
popa
inc
lea
in
sbb
mov
push
in
mov
cwtl
repz
push
std
xor
fstps
jp
add
mov
vmovsd
xchg
cmp
shl
cs
push
stos
add
push
das
sub
and
mov
insl
xor
mov
mov
daa
inc
cltd
adc
shrl
dec
dec
movsl
push
inc
mov
dec
dec
jg
adc
xor
xor
xchg
inc
pushf
xlat
sub
adc
les
push
insb
xchg
inc
adc
jmp
sti
mov
and
js
lods
xchg
adc
je
xor
lods
jle
rorb
fbld
mov
aam
in
and
and
add
cs
inc
pop
dec
jno
xchg
lret
jecxz
inc
ret
cltd
and
sbb
mov
dec
lock
mov
sub
adc
fwait
mov
push
decl
adc
ficomps
ret
mov
ficompl
fstpl
pop
daa
jge
push
clc
fstps
push
stos
push
mov
mov
mov
mov
incl
pop
jmp
enter
xor
test
arpl
dec
rcrb
cld
mov
lret
mov
stos
popa
or
jg
jle
adc
mov
or
aas
lcall
push
roll
jns
cmp
or
aas
out
mov
adc
test
out
rorl
rcr
pop
push
cmp
cmp
xchg
leave
out
dec
testb
dec
pop
xor
inc
or
lock
into
inc
dec
inc
and
loop
clc
mov
xlat
dec
pop
jl
rcrb
sti
xchg
dec
xchg
out
jnp
mov
aam
out
sbb
lea
cwtl
fsts
sbb
mov
fldcw
xor
and
xor
mov
fs
pop
repz
andb
or
test
mov
stc
iret
fistpll
lea
mov
rcrb
cmp
cmpsb
and
jnp
mov
pop
cmp
adc
cmc
shll
sub
int
rorb
add
xor
into
pop
push
je
fstpt
inc
in
mov
loop
push
daa
xchg
call
xchg
movsl
push
ljmp
mov
loopne
mov
flds
icebp
pop
iret
inc
repz
loopne
adc
std
and
sbb
mov
push
inc
es
push
or
push
sti
xorl
pop
shll
lret
fldenv
xlat
mov
inc
adc
shll
cmpsl
mov
mov
rcl
sub
mov
add
inc
mov
cmp
sub
sub
or
sbb
bound
popf
enter
decl
push
in
pop
mov
xchg
movsl
negl
sbb
or
xchg
push
fsts
adc
idivb
adc
and
cmp
stc
repnz
leave
cli
sub
aam
cmp
movsl
mov
mov
sub
xor
pop
mov
dec
sbb
fisubl
cmp
xchg
pop
pop
ja
jnp
pop
test
repz
jg
cmp
xor
and
cs
fiaddl
pushf
add
cwtl
mov
stos
dec
add
jns
bnd
into
lcall
xorl
in
imul
movsb
push
push
nop
adc
subb
lret
jmp
mov
push
test
cmp
leave
mov
ljmp
cwtl
outsb
imul
adc
clc
mov
out
xor
and
imul
movsb
jns
cld
cld
loopne
mov
mov
mov
cmpsb
xor
dec
sub
add
pop
arpl
and
xor
cmp
jbe
insl
xchg
pop
xor
fisttpll
push
shl
jp
lock
sarb
mov
mov
jb
cltd
out
lock
mov
leave
inc
jmp
inc
jecxz
and
adc
movl
or
and
jne
dec
repz
mov
in
push
xchg
dec
sub
and
loop
add
pop
cmp
xlat
cmpsb
jl
and
sbb
xlat
imul
pop
push
adc
or
dec
jne
cwtl
fs
in
add
and
cmp
fsubrl
or
sub
mov
popa
int3
outsl
inc
loopne
push
je
add
jb
ret
int
outsb
movsl
arpl
popf
aam
sbb
int3
add
movsb
imul
mov
or
jp
sti
callw
mov
push
lods
or
pop
mov
popf
lock
das
sbbb
mov
cld
push
fs
ret
and
sub
mov
enter
xchg
xorb
mov
or
mov
push
out
mov
aam
inc
int3
pop
xchg
loopne
popf
bswap
sarb
xorl
stos
jecxz
mov
dec
pop
jle
lock
xchg
sti
ror
decl
clc
mov
adc
pop
add
add
jmp
adc
movsl
das
sahf
test
mov
clc
outsb
pop
nop
xchg
inc
ret
dec
mov
jo
cmp
dec
test
cmpb
les
out
jns
repz
and
or
xor
jle
lock
sti
loope
adc
lret
pop
jecxz
aad
adc
push
in
jecxz
mov
adc
ljmp
pop
fadd
sbb
add
clc
repz
jl
inc
dec
imul
jb
add
sgdtl
push
mov
sub
pop
bound
adc
flds
ds
call
cmp
mov
cmpsl
push
inc
mov
hlt
push
inc
inc
xchg
divb
pop
mov
mov
in
mov
std
add
or
push
dec
idivl
sarl
or
jl
and
std
dec
outsb
sub
movsb
notb
loop
popf
gs
mov
xchg
dec
enter
sbb
fnclex
int3
push
cmp
clc
movsl
dec
xchg
ljmp
sbb
sbb
pop
sbb
mov
loopne
mov
mov
loop
imul
xchg
aas
in
mov
arpl
cmp
fidivl
jl
adc
sub
aas
fcoml
loop
mov
mov
scas
add
insl
and
in
sub
hlt
test
push
jae
sub
lret
pop
scas
mov
dec
mov
arpl
mov
call
cmp
std
out
and
pushw
aad
fldt
rorb
cmp
push
fadd
jae
xchg
in
inc
xor
inc
push
andb
inc
das
test
jle
dec
sahf
xchg
and
pop
aaa
cli
pusha
sahf
mov
pop
pushf
jp
hlt
jle
dec
loop
mov
pop
pop
jmp
cmp
sbb
mov
je
xchg
fstl
mov
mov
or
mov
icebp
movsl
inc
fs
jno
dec
cmp
orb
mov
jbe
cmp
out
pop
inc
add
cmp
pop
xlat
mov
ljmp
fwait
std
ljmp
in
sti
push
sbb
pop
sbb
inc
movsb
subl
in
fnstsw
popf
in
daa
add
adc
xchg
pop
aas
sar
in
pushl
mull
adc
cmpsb
mov
mov
push
rol
or
inc
ja
ss
int3
adc
sub
setle
test
cmpsl
xor
mov
test
in
mov
leave
cwtl
scas
call
dec
stos
sbb
pop
dec
mov
cmpl
cmp
add
sbb
mov
imul
ret
lods
ret
ja
loope
stos
js
cltd
sub
mov
xchg
mov
les
test
out
push
call
sbb
addr16
insl
cmp
into
es
ficoms
mov
sub
test
jbe
pop
lods
test
mov
xchg
loope
sbb
popa
mov
xor
xor
out
cld
ja
xor
adc
xchg
in
stos
fcmovb
inc
out
jp
jg
adc
adc
repz
and
or
ja
jo
pusha
out
in
es
push
jo
mov
xchg
or
lods
add
lahf
cmp
pushf
push
lods
testb
add
push
mov
jp
andb
or
xchg
mov
sbb
repz
mov
adc
mov
sbb
adc
push
pop
xchg
scas
cmp
imul
fistl
pop
out
or
push
pop
mov
std
and
cmp
lods
push
mov
stos
cmpsl
out
sub
sub
xor
scas
daa
int3
dec
std
xor
daa
pop
lahf
stos
lcall
push
scas
add
leave
jno
dec
cmp
jne
adc
and
fsubrp
pusha
aad
or
adc
adc
inc
mov
ss
mov
test
movsb
mov
dec
xlat
lahf
mov
push
aam
fisttpl
jle
push
push
pop
jmp
lret
mov
jne
imul
sub
aad
mov
mov
inc
mov
or
cmp
fcom
es
add
mov
cli
imul
inc
mov
sbb
mov
lock
sub
stos
callw
mov
sub
mov
xor
adcl
scas
jmp
ret
sbb
insb
jo
mov
sub
adc
add
xor
icebp
aad
shl
dec
ss
test
push
das
dec
aas
dec
cld
sahf
test
mov
negb
push
mov
sub
testl
mov
and
daa
fwait
into
mov
test
cli
xor
xchg
jbe
pop
push
repnz
jo
add
or
dec
xchg
adc
mov
and
outsb
iret
xchg
jae
add
xchg
aaa
fcoms
mov
jo
cld
pop
mov
cmc
hlt
inc
or
ja
gs
inc
adc
and
in
data16
fcomps
imul
xor
dec
adc
sub
ja
dec
or
cmpsb
dec
loope
loopne
loop
push
shl
sub
jo
mov
aam
xor
dec
cwtl
and
cs
dec
int3
xor
pop
sub
test
push
xchg
mov
hlt
sbb
mov
sti
mov
leave
ds
xchg
cmpsl
gs
in
mov
in
in
icebp
ss
dec
jl
cli
inc
les
aas
inc
scas
repnz
jp
pop
clc
sub
popa
jo
or
shll
sbb
nop
stc
push
hlt
lcall
jle
iret
in
mov
daa
cmc
scas
movsl
jl
rcll
fistps
cmp
mov
xchg
jle
addr16
mov
dec
iret
lods
int3
fsubrs
js
aaa
mov
lds
ret
es
mov
inc
divb
aaa
xor
mov
into
lcall
fnstenv
sbbl
jmp
inc
xchg
pop
xor
ds
mov
jmp
or
lcall
int
mov
or
add
mov
in
mov
lods
in
fsts
pop
in
dec
cmovle
pop
push
xor
loope
mov
or
cmp
cwtl
sub
call
lods
sbb
call
jns
adc
mov
loop
aam
sub
inc
pop
andl
add
int
in
mov
adc
push
stc
lock
lret
jl
inc
sub
scas
xchg
cld
movsl
push
scas
cmp
xchg
and
sar
shrb
js
insl
in
mov
sbb
xorb
ret
cltd
shl
test
dec
lods
jae
dec
movsl
mov
into
pop
pop
rclb
pushf
movsb
sarb
aam
out
popf
xchg
cmc
inc
mov
jl
sub
inc
pop
popa
lahf
loop
mov
dec
stos
xchg
pop
inc
imul
mov
xchg
push
sbb
out
ja
cltd
xchg
mov
cmp
scas
into
mov
shrb
hlt
xchg
lock
scas
repnz
push
xchg
adc
pop
ds
call
adcb
pop
es
mov
pop
jle
dec
sbb
pop
fistpl
movsb
lea
arpl
mov
jne
or
or
rclb
mov
push
jp
leave
rclb
inc
fs
push
cmp
jbe
inc
mov
fildl
ss
testb
in
dec
es
je
or
dec
dec
cmp
lret
xchg
movl
cmc
inc
xchg
insb
ljmp
ficoml
cmc
insb
sbb
mov
cmp
cmpsb
add
sbb
mov
jae
inc
cmp
rcll
insb
adc
xchg
das
into
scas
aam
stc
sub
cmpb
xchg
stos
or
mov
dec
ja
dec
lcall
inc
xchg
mov
outsl
pop
and
nop
imul
jno
inc
xor
xor
mov
dec
pop
iret
xor
out
fcomi
or
jge
popa
mov
les
pop
cmpsb
dec
adc
pop
rorb
data16
jge
pop
cmp
pop
test
sbb
out
shrl
push
outsl
sub
sbb
stc
xchg
lret
movsl
sbb
or
add
or
repz
mov
scas
aam
sbb
adc
fidivs
int
adc
arpl
dec
xlat
xchg
jge
xchg
jecxz
jae
cmpsl
daa
ja
lcall
scas
xchg
xor
or
push
faddl
lea
xor
push
cmpb
inc
insb
out
lods
dec
mov
cld
addr16
fistl
insb
idivl
pop
xlat
mov
push
enter
add
fwait
pop
arpl
rolb
fldt
loopne
push
jnp
fmul
jecxz
test
daa
lret
fldenv
paddsw
and
incl
push
xchg
clc
stos
mull
jne
add
scas
sbb
call
sub
push
mov
and
add
daa
int
iret
push
insb
xor
and
jne
or
loop
out
lcall
and
jecxz
inc
mov
les
xor
jmp
test
ret
imul
imul
push
push
insb
int
pushf
mov
je
addb
mov
inc
push
int
adc
mov
repz
inc
insl
shrl
fnstenv
jp
dec
inc
jecxz
repnz
out
pop
int3
fbstp
sbb
sbb
stc
ret
ret
int3
fwait
jge
daa
inc
iret
cwtl
xor
pop
inc
fisttps
jno
jb
jbe
inc
push
mov
jb
adc
addr16
cld
jge
fdivrs
cmp
fsts
dec
popa
xor
fwait
mov
imul
testb
sbb
xchg
sbb
and
adc
test
ret
sub
cld
and
ds
dec
imul
sbb
pop
pop
test
movsl
mov
insl
data16
aas
stos
jg
std
pop
cld
xor
or
cmpsl
xchg
mov
aam
jmp
stos
das
xchg
in
sbbb
adcb
es
iret
pop
add
in
fdivs
sub
int
data16
or
loopne
mov
lret
arpl
mov
out
mov
mov
test
outsb
insb
xchg
cmp
in
in
loope
dec
aas
mov
lds
cmpsb
test
leave
out
pop
sub
out
ja
or
pop
jbe
sbb
dec
repz
fisttpl
xchg
ja
mov
jnp
cmp
cmpsl
lahf
repnz
sub
xchg
mov
jl
fs
push
repz
xor
imul
xlat
loop
pop
push
xor
push
push
lret
or
in
xchg
fistps
cmp
jp
add
insl
sbb
xor
xor
into
cwtl
ljmp
stc
mov
and
mov
loope
push
sbb
push
ror
jg
popa
jl
jnp
scas
imul
dec
loope
outsl
cmp
mov
insb
in
add
xchg
adc
shlb
jo
clc
and
and
lcall
addb
and
mov
pop
into
insl
push
jle
lock
mov
es
and
fists
das
loop
mov
or
or
add
in
cmp
mov
xchg
enter
or
clc
add
pop
jne
lods
sbb
jp
xchg
xor
cmp
in
or
repnz
xor
out
aam
inc
push
jnp
push
adc
push
push
sub
aad
test
ja
sbb
pop
loopne
adc
ljmp
cmpsl
enter
push
in
fnstcw
out
pop
sbb
enter
fwait
call
cld
xchg
dec
or
push
lret
push
adc
push
test
add
pop
inc
mov
pop
jecxz
cs
pop
ljmp
adc
and
int3
push
mov
inc
add
and
push
cld
sub
dec
iret
pop
imul
inc
sub
int
lret
jl
add
inc
mov
js
lds
mov
ror
push
and
sbb
jmp
pop
pop
cwtl
dec
inc
adc
fwait
movsb
cmpsb
rcrb
sub
dec
inc
add
std
mov
add
clc
out
lock
push
push
movsl
inc
xchg
lods
lods
dec
stc
lret
in
in
ret
xorb
xor
out
mov
outsb
addl
shll
outsl
imul
xchg
cmp
stos
sbb
dec
sub
in
shll
mov
stc
adc
or
sahf
and
ror
insb
and
ret
sub
pop
sbb
mov
inc
fwait
fwait
and
dec
scas
popf
push
mov
xor
push
push
pop
add
and
cmp
mov
and
jo
ret
loopne
xlat
pushf
cmp
inc
jge
push
xor
jno
mov
dec
shlb
in
cmp
cli
and
xchg
jo
push
movsl
xor
mov
stos
jg
xor
int
add
jle
test
adc
stc
addl
dec
push
out
repnz
jno
xor
mov
dec
int3
cmp
ljmp
addr16
sti
jnp
cs
jno
loop
cmp
mov
dec
repz
sbb
pop
scas
inc
nop
mov
das
pop
xchg
push
push
outsb
jge
mov
roll
push
xor
mov
push
jl
fldl2t
arpl
test
fadds
jae
mov
jle
call
pop
cmc
xor
aas
push
imul
xor
add
mov
sti
popa
icebp
je
push
repz
adc
imul
xor
sub
jl
mov
or
shrl
fmuls
sbb
push
cld
cmp
iret
out
mov
or
mov
movsb
int
jno
out
rcll
xchg
pop
mov
jno
mull
decb
jg
mov
push
test
jns
cmp
and
test
movsb
jne
sub
out
mov
or
loope
aam
and
push
push
aaa
adc
inc
adc
std
xchg
or
sbb
jg
dec
or
mov
in
scas
cmc
pop
mov
fdivr
pushf
imul
adc
and
in
sar
sub
sti
loop
or
sahf
sbb
stc
testl
pop
and
subb
push
movsb
clc
mov
fwait
lret
jnp
frstor
pop
cmp
adc
leave
mov
lods
lods
shrb
jg
mov
cmp
mov
dec
lods
pop
lret
ret
adc
addr16
int3
mov
push
pop
lock
inc
ror
add
cmpsl
or
jecxz
fisttpll
cmpsl
filds
test
outsl
xchg
adc
stos
and
subl
inc
repz
fdivrp
ret
jle
sub
enter
cmp
inc
adc
cld
in
mov
loopne
mov
and
jl
push
xchg
imul
jmp
jp
mull
test
push
jb
shlb
sub
dec
out
stos
cmp
in
add
jl
in
xchg
ficoms
mov
fwait
adc
sub
dec
fstpl
xchg
mov
adc
mov
mov
aas
hlt
xchg
adc
jo
mov
xchg
cmc
es
je
movb
xor
xor
inc
sbb
xchg
idivb
loopne
add
scas
rorl
ds
sbb
hlt
mov
xchg
push
dec
mov
cltd
sti
push
pop
out
jo
xchg
pushf
cmp
icebp
push
aad
in
lods
xchg
xchg
mov
rol
ds
cmp
mov
xchg
scas
lcall
xor
or
sbbl
push
icebp
mov
inc
sub
dec
inc
xor
popw
pop
je
js
and
push
mov
jmp
cltd
aad
cmp
shrl
cmpsl
push
int
insl
in
aas
lods
mov
jmp
xor
dec
enter
daa
lcall
imul
push
fmull
das
mov
fmuls
xchg
rorb
fbld
es
dec
mov
int
call
xchg
insb
xor
repz
ror
inc
xor
mov
hlt
stc
fsubl
add
call
pop
or
inc
rol
xchg
push
jp
push
xor
xor
inc
popl
xor
add
inc
adc
push
fdiv
dec
add
xchg
repnz
xchg
ret
push
xor
aaa
test
mov
add
mov
stc
leave
push
iret
aaa
imul
dec
stc
cmp
in
mov
mov
ds
scas
add
xchg
xchg
testb
adcl
pop
xchg
jmp
subb
hlt
cmp
and
dec
mov
jnp
daa
pop
adc
mov
outsb
mov
into
sbb
jae
call
aas
shrb
cmpsl
test
ret
push
inc
push
lret
xchg
clc
mov
xorps
fldl
out
xchg
pop
scas
sbbb
pop
out
sbb
aad
push
jle
rcll
push
cli
mov
jns
bound
cmp
insl
lcall
jmp
repnz
add
push
and
inc
mov
dec
sbb
pop
out
int
hlt
mov
lods
xchg
popl
dec
jle
lods
sbb
int
pop
dec
sub
push
add
lahf
sbb
stc
test
outsb
std
iret
and
xchg
adc
test
add
aam
in
mov
mov
insw
add
sar
adc
or
imul
ljmp
jno
pop
mov
test
xor
std
sub
cltd
push
mov
testl
pop
pop
fiadds
mov
adc
pusha
adc
lods
mov
xorb
dec
movsl
iret
outsl
mov
mov
pop
lret
out
jae
bound
aad
or
add
cli
pop
xchg
lcall
orb
mov
sbb
xchg
push
das
pop
xchg
cmp
jge
mov
jle
push
sbb
mov
fabs
or
lret
sti
test
jecxz
add
repnz
xchg
bswap
push
sub
je
lods
adc
imul
and
pop
insb
jo
add
xchg
inc
inc
gs
repnz
std
xchg
sbb
jbe
mov
cld
fcmovnu
addr16
out
or
negb
clc
push
inc
mov
push
push
outsb
push
js
or
stc
xchg
add
inc
push
cmc
sahf
in
mov
insl
sbb
shll
jnp
push
jns
push
sub
and
loopne
in
inc
pop
mov
mov
adc
push
arpl
mov
sbb
cmp
sub
mov
pop
pop
and
push
or
in
push
popf
outsb
jne
in
ret
push
jmp
outsb
dec
clc
xor
jecxz
mov
adc
ret
jae
in
cmp
pop
and
rclb
cs
push
push
sbb
out
notb
dec
ds
xchg
or
sti
mov
dec
pop
hlt
out
cmp
push
enter
lods
outsb
fistpll
out
mov
mov
lcall
or
jmp
out
mull
into
cli
mov
or
and
xchg
rclb
je
sub
js
call
cmp
xchg
xchg
jg
push
mov
and
or
push
shl
out
jbe
sub
mov
mov
dec
cmp
push
iret
arpl
cli
out
mov
in
enter
cld
insl
ja
mov
lret
sbb
loopne
push
out
jg
and
push
xchg
mov
add
push
sarl
mov
and
push
in
xor
mov
jb
insl
or
pushf
sub
pop
mov
sub
mov
test
and
int3
aad
xchg
icebp
push
sti
outsb
push
add
add
adc
push
call
cwtl
aaa
dec
addps
les
inc
add
in
push
sub
daa
mov
and
mov
jne
and
pop
enter
push
es
aas
xchg
fsubrl
inc
test
and
sahf
cmpl
enter
dec
ret
addb
in
daa
stos
mov
xor
movsb
test
or
arpl
and
cmpsl
xlat
mov
xchg
sub
cmp
jle
lods
out
pop
mov
xchg
rorl
fadds
outsl
mov
and
cmp
out
aas
and
dec
test
sbb
test
adc
push
ljmp
sar
xor
cmp
and
ficompl
inc
fldl
int3
mov
add
mov
mov
sarl
dec
fstps
in
scas
lret
cmp
sub
sbb
push
cld
mov
xor
jecxz
lret
nop
inc
jns
xor
or
mov
lea
inc
daa
jmp
daa
outsl
push
out
pop
jp
push
jp
xor
or
clc
aas
shl
std
mov
cltd
aam
fs
jmp
sahf
xchg
push
cpuid
cmp
test
and
loop
in
inc
xor
cmp
jle
sbb
aad
jge
nop
adc
jg
arpl
test
jno
rcll
adc
pop
ret
icebp
adc
je
movsb
mov
or
adc
fs
dec
sbb
rorl
mov
scas
or
jns
arpl
repnz
add
jnp
xchg
mull
fwait
push
aas
jae
call
stc
int
inc
popa
out
adc
xor
cltd
fildll
ds
test
jo
add
or
xchg
push
cltd
rcr
shr
cmc
aad
lods
hlt
cmp
inc
jae
mov
mov
in
cld
dec
ret
adc
push
jge
sahf
shll
fstp
adc
inc
add
test
in
mov
mov
les
adc
xchg
sub
adc
iret
dec
pop
mov
sbb
repnz
dec
adc
mov
pop
addb
jle
xlat
push
lcall
fimuls
shl
test
fisttpll
in
addr16
jp
dec
movsl
sub
dec
sbb
xchg
xchg
mov
jbe
aad
lret
dec
stos
xchg
or
mov
fwait
mov
iret
mov
loopne
stos
adc
sbb
scas
stos
fmuls
aam
pop
daa
pop
sub
pop
in
lret
gs
iret
dec
ljmp
pop
mov
sysexit
and
aam
push
inc
hlt
inc
lods
out
sub
shr
mov
mov
xchg
mov
inc
shl
lds
xchg
int
int
push
xor
inc
in
sbb
clc
imul
call
mov
mov
movsl
es
jle
fistl
inc
or
iret
ss
loope
in
xor
adc
iret
cwtl
shlb
adc
xchg
js
int
insb
fwait
out
subl
in
dec
xchg
push
inc
xor
inc
mov
and
imul
int
insb
out
jbe
test
add
imull
jb
jns
scas
scas
test
sbb
movsb
stos
sbb
inc
jae
mov
cmp
sbb
out
mov
sar
add
xchg
mov
jb
movsl
pop
cltd
pushf
mov
xchg
popa
pop
pop
daa
push
fcomps
push
inc
out
and
xor
push
push
pusha
hlt
mov
pop
icebp
and
jle
sbb
insl
xchg
cwtl
add
pop
mov
adc
inc
out
jge
push
cmc
jb
adc
stos
dec
pop
insb
mov
loopne
push
push
clc
and
roll
adc
aas
in
scas
fstps
mov
loopne
js
in
enter
cmp
fstl
lods
jp
inc
mov
jle
imul
jne
ljmp
scas
mov
adc
movsb
jbe
lret
jns
mov
and
jnp
add
fld
cmc
mov
inc
mov
pusha
fsubrl
jp
ss
xchg
dec
push
insb
cmp
int3
xchg
sbb
test
stos
lock
call
sbb
push
enter
clc
lret
inc
push
cmpsb
inc
arpl
ljmp
rorl
xchg
cltd
xchg
and
xor
fsubrp
pop
in
mov
loope
push
inc
scas
xor
dec
add
ljmp
push
mov
or
out
jbe
clc
or
imul
and
repnz
jns
push
sub
xchg
loopne
or
rcll
jae
or
inc
insb
push
xor
mov
pop
andb
fcompl
lds
fld
out
push
xorb
addr16
cmp
sub
lods
jnp
data16
and
aas
movsb
lea
mov
inc
rol
stos
adc
cli
xor
add
sbb
and
or
ficompl
sub
and
dec
mov
stos
xor
lods
shlb
insb
cmpsb
jns
loope
ljmp
imul
jge
inc
lods
rcrl
xor
cld
jg
pop
inc
outsl
pop
daa
jmp
scas
fimull
rcll
stos
or
mov
int
jmp
jmp
fisttps
push
das
xor
out
addb
jo
mov
cli
sub
xlat
outsb
sub
lods
push
out
xchg
pushf
jmp
jge
pusha
jbe
aas
pop
adc
xor
push
xchg
or
adc
and
and
push
repz
adc
mov
sub
jp
out
orb
stos
sub
daa
cmp
imul
push
pop
sub
mov
test
push
rclb
and
outsb
cmp
lret
imul
adc
test
lods
imul
pop
ret
xor
ret
aaa
cli
push
adc
adc
lods
or
push
and
data16
pop
mov
add
scas
inc
push
xchg
add
sub
outsb
cmpsb
xlat
ds
push
jecxz
sbb
cs
mov
dec
jmp
jo
stos
lcall
icebp
lock
es
subl
push
call
and
inc
mov
cmpsb
lahf
jle
sub
push
sar
mov
dec
imul
popf
cmp
insl
aad
push
sub
pop
push
jns
mov
and
fidivrl
mov
mov
int
ror
add
decb
fsubs
jl
cmp
insb
lcall
or
lret
mov
dec
scas
ret
mov
stos
adc
loopne
and
pop
pop
call
decb
dec
adc
add
int3
lods
mov
div
dec
cli
icebp
inc
pop
inc
jnp
in
inc
mov
sub
and
fcmovne
in
test
fwait
xchg
sbb
es
pop
inc
inc
aam
scas
dec
jg
xchg
jle
add
pop
mov
dec
pop
gs
mov
inc
xor
cld
ficoms
mov
and
stos
cltd
insl
aad
push
adc
or
testb
out
ljmp
test
shl
sbb
or
lods
ss
dec
push
fld
sbb
fsub
pop
in
aad
mov
push
push
cmp
movsl
loopne
xorb
push
mov
fs
lods
xor
shl
xchg
es
xchg
cwtl
stos
xor
imul
push
add
xor
push
pusha
addr16
adc
test
mov
pusha
lods
mov
stc
xchg
cld
nop
sbb
mov
and
dec
pop
pushf
sbb
out
mov
adc
lock
push
dec
push
dec
in
cmpsl
cli
jae
cwtl
test
andb
pop
push
icebp
call
inc
pop
sbb
test
insl
sbb
insl
cmp
insl
in
outsl
and
xor
scas
test
and
adc
cmp
int
les
cmpsl
sub
fbstp
mov
in
iret
lret
sti
push
and
xchg
mov
ret
jecxz
lcall
mov
shrb
enter
stos
inc
dec
test
mov
mov
mov
jp
int
int3
xchg
dec
or
nop
int3
jae
jle
lahf
xor
jae
or
jno
icebp
int3
out
or
mov
in
fwait
jg
jo
cwtl
and
in
pop
call
je
xor
inc
mov
ficomps
or
add
loopne
jns
sub
call
mov
test
and
sbb
sub
add
scas
mov
inc
pop
add
push
cmp
jmp
jg
gs
je
xchg
out
clc
fcoms
sub
fldt
push
aad
jge
lods
add
dec
inc
jp
repz
ljmp
fstps
fwait
enter
pop
lret
sbb
mov
dec
mov
dec
pushf
orb
cmp
out
add
test
xchg
outsb
push
lods
and
in
leave
add
in
xor
inc
cmc
cmpsl
sahf
in
je
fisttpl
shr
dec
scas
dec
push
sub
sub
lcall
out
leave
insb
in
dec
dec
fnstcw
push
test
lret
cs
cmpsl
jae
hlt
cmp
addl
and
clc
adc
sub
fidivrl
or
inc
ret
pop
sub
sbb
sbb
jge
pusha
pop
imul
mov
add
or
lea
insb
pop
jp
rcrl
xchg
cmp
repz
ss
bound
ret
in
mov
jl
mov
sub
aam
mov
pushf
fmuls
xchg
ja
push
dec
dec
in
xchg
xor
insl
pushf
sub
xchg
cwtl
xchg
jb
cmpb
scas
mov
aaa
data16
fidivl
hlt
jmp
sub
mov
out
sahf
repnz
push
mul
shrb
dec
dec
call
and
mov
cld
nop
dec
cmp
into
cmp
loopne
ja
and
mov
inc
sbb
test
and
xor
leave
inc
filds
sbb
les
outsl
stos
das
mov
imul
cmc
xor
mull
ja
pop
dec
xor
add
dec
shl
aas
add
inc
mov
aad
dec
mov
or
enter
shll
rcrl
aaa
mov
inc
push
or
in
ljmp
push
dec
fisubrs
adc
add
sbb
jnp
mov
addl
or
sti
sbb
jb
aaa
test
adc
push
stos
sti
xchg
push
incb
fwait
les
test
cmpsl
push
mov
sub
xchg
mov
mov
icebp
lahf
jns
mov
cmpb
sub
push
sub
jbe
xor
xchg
leave
cmp
jae
add
popf
dec
xchg
lds
js
jb
or
push
in
les
adc
mov
jns
popa
hlt
xor
mov
or
and
xor
ret
lds
jle
inc
cmp
pop
jae
mov
xchg
outsl
sub
sbb
popa
mov
sbb
dec
sbbb
loopne
ror
sahf
push
xchg
mov
and
shl
fistpll
pop
or
ja
push
pop
push
out
push
cmp
or
mov
jae
lcall
sbb
adc
xor
das
xlat
jb
ljmp
mov
dec
jp
mov
pop
mov
cltd
scas
mov
gs
adc
stc
imul
ja
test
mov
fstp
stc
repz
and
jb
rcll
ret
popf
scas
sarl
aad
loopne
adc
lock
dec
jbe
loopne
pop
inc
fistl
sbbb
sbb
adcl
inc
in
mov
push
and
mov
aam
ss
xchg
pop
out
xchg
outsl
push
dec
lea
pop
in
sub
xor
mov
jge
xchg
cmp
or
das
movl
or
std
mov
pusha
aam
mov
pop
adc
leave
push
xor
pop
jecxz
mov
push
jns
aad
stc
mov
xchg
fnsave
in
lds
fiadds
jae
cmp
daa
and
ss
push
dec
mov
mov
xor
sub
lcall
lret
repnz
jne
or
movsb
adc
xchg
lcall
and
sub
inc
ss
cs
pop
dec
and
lcall
cmp
insb
enter
std
pop
arpl
fistpll
mov
mov
bound
loopne
cwtl
lods
cmp
shll
leave
jbe
xor
push
aam
pop
cmpsb
xor
fs
jae
push
cmpsl
aam
ret
es
cwtl
dec
pop
adc
push
jecxz
add
xchg
scas
push
loope
xchg
into
and
add
das
scas
rorl
push
stos
cld
mov
cli
push
sub
or
in
testb
xchg
imul
dec
jge
data16
in
mov
xchg
push
scas
roll
mov
cmpsl
mov
pop
std
aas
cmc
aas
adc
stos
adc
adc
scas
sbb
sub
mov
js
rcll
repnz
js
dec
cmp
jb
sbb
pop
ficoml
mov
pushf
and
out
mov
popa
mov
in
and
out
xor
inc
fs
mov
or
fnstsw
subb
ds
add
xchg
or
sub
adc
mov
push
mov
xor
add
shll
jl
fldcw
adc
out
mov
mov
and
sbb
into
cmp
dec
dec
sbbb
push
mov
ds
adc
lret
outsb
sbb
subl
push
xor
adc
in
ret
imulb
popf
jmp
dec
adc
sbb
push
lret
stos
jb
decb
rclb
mov
aas
pusha
divl
das
mov
fcmovnb
dec
cmp
aam
sbb
fsub
inc
dec
mov
inc
mov
dec
jae
lret
inc
icebp
cmpsb
js
ja
scas
stos
jb
pop
lret
jg
xchg
and
loop
dec
ss
cmp
jl
lds
cmp
out
dec
test
adc
test
mov
loopne
rcll
roll
loop
mov
add
out
sbb
movsb
and
mov
cvtpi2ps
stos
cmp
in
cwtl
sbb
xor
test
add
testl
lods
lds
mov
das
cmpsb
fbld
outsb
gs
and
in
mov
orb
cmpsl
xchg
cmp
mov
sub
jbe
push
fs
icebp
lods
into
adc
adc
mov
lods
jbe
mov
inc
es
adc
subb
loopne
adc
inc
cmp
sbb
cmp
icebp
mov
cld
push
xlat
in
adc
mov
ja
jo
sub
push
dec
pop
pop
mov
in
iret
out
cmpsl
daa
push
lods
insb
mov
pop
ret
xchg
sbb
nop
jg
loopne
repnz
or
div
insb
lahf
aad
scas
inc
in
jo
xor
lock
dec
lods
pop
call
or
jle
add
pusha
or
shll
int3
push
pop
or
push
push
jns
prefetch
or
loope
int3
imul
sub
fcoml
inc
out
pop
outsb
cwtl
lods
shrl
adc
jmp
inc
and
mov
xchg
dec
cmc
sbb
lods
leave
popa
ss
out
jbe
xor
mov
divb
imul
stos
in
jns
adc
addb
outsb
inc
xchg
pop
leave
pop
in
jns
sbb
lds
or
cmp
jns
push
push
adc
in
aam
inc
aaa
and
xor
addb
jg
into
aas
xor
mov
aad
sbb
aaa
out
arpl
mov
ds
ret
icebp
pop
pop
inc
scas
rcrb
shrd
fnstcw
call
inc
test
clc
aas
push
pop
pop
xchg
imul
jne
sub
cld
or
xor
jb
jb
mov
shufps
xchg
lret
mov
fiaddl
insb
repnz
sahf
push
mov
sbb
pop
or
sub
out
mov
lock
add
test
aam
testb
iret
sbb
ja
insl
pushf
es
jnp
and
cmp
aad
push
mov
or
dec
pop
and
mov
aas
mov
xor
ja
pop
mov
cmpsb
push
js
mov
add
jnp
inc
cmpl
dec
daa
nop
test
adc
add
adc
adcl
or
test
or
mov
push
ret
sub
insb
push
es
fldcw
lds
xchg
mov
mull
mov
fsubp
cmpsl
notl
xchg
rcrl
sti
out
or
sub
xchg
jnp
mov
mov
pop
jp
lcall
and
mov
mov
sub
mov
sub
or
aaa
xchg
or
jecxz
jb
cmp
mov
push
mov
sar
and
xlat
lret
xchg
test
loopne
into
jecxz
ficoml
dec
ret
xor
push
ss
add
inc
iret
aaa
mov
inc
mov
js
pop
nop
xorb
les
push
mov
shlb
jmp
push
insb
mov
jbe
mov
lea
stos
mov
push
lds
in
cs
xor
jbe
or
add
cmp
rorb
ret
push
push
xor
pop
dec
xor
adc
push
jmp
mov
and
cmpsl
or
jb
mov
jnp
out
and
jmp
sbb
inc
add
aas
xor
jecxz
cmp
jnp
jo
fs
imul
sub
shl
mov
aam
test
ret
roll
fs
pushf
js
push
mov
and
lods
cwtl
add
test
rol
cltd
pushf
lods
out
adc
xor
xor
outsl
xchg
cmpsb
loope
add
pop
adc
sahf
lcall
xchg
stos
test
in
jecxz
pop
mov
popf
loop
add
aad
cmp
mov
xchg
fsts
mov
cmp
stos
xor
sub
rolb
pop
and
xor
in
into
inc
jecxz
insl
cwtl
pop
iret
mov
mul
invd
dec
addr16
fmul
dec
mov
inc
jge
iret
cld
es
xor
sbb
push
fs
mov
and
inc
cld
sbb
push
fbstp
dec
sbb
jb
inc
jg
icebp
cltd
mov
xor
pop
xlat
jmp
sub
sahf
dec
lds
aaa
in
cmp
add
dec
jae
repnz
lods
mov
push
jo
test
and
dec
out
adc
pop
push
testb
ljmp
jae
lret
push
push
fisubrl
movsl
adc
dec
sbb
aas
pop
mov
cli
stos
xor
dec
mov
setp
pusha
jb
sbb
xchg
loopne
sub
clc
dec
pop
hlt
mov
fsub
mov
mov
push
and
xlat
sarl
fdivrl
movsl
roll
jnp
cmpsl
std
out
cs
cs
cmpb
sbb
jecxz
pushf
xlat
leave
enter
ds
mov
inc
mov
test
or
adcb
or
cld
pop
pusha
nop
scas
iret
jecxz
and
cmp
push
and
test
mov
adc
pop
cmp
mov
jnp
mov
pop
or
cmc
ljmp
sub
in
xchg
inc
mov
fnstsw
data16
int3
pop
sbb
xor
push
popa
dec
aas
jle
lds
xchg
xchg
mov
test
pusha
and
cmp
add
inc
push
or
and
out
fcomp
push
mov
cmp
scas
sarl
out
popf
enter
pop
adc
xchg
dec
mov
icebp
mov
nop
ds
cli
inc
xor
xchg
sub
test
inc
repnz
push
rcrb
push
pushf
cmp
xor
test
cmp
fists
fistpll
fbstp
mov
add
push
push
xchg
cmpsl
xor
cmp
out
out
pusha
js
fcoml
ss
loopne
push
push
icebp
pop
orb
repz
jg
lret
insb
or
jge
pop
scas
mov
loop
cli
outsl
xchg
mov
mov
dec
push
push
cmpsl
imul
inc
xor
jmp
adc
jo
sub
cmpsb
fcomp
jle
aam
stc
pop
mov
in
js
cmpsl
mulb
push
stos
das
out
xchg
outsb
xchg
and
adc
insl
in
mov
or
push
das
fsubrl
inc
mov
jne
xchg
jl
call
jp
movsb
mov
mov
sbb
dec
cwtl
popa
dec
inc
cmc
in
enter
fs
mov
cli
loope
xor
lahf
mov
imul
mov
pop
and
xor
inc
iret
loopne
outsb
mov
ficompl
cmc
sbb
inc
mov
stos
and
rcrl
pusha
adc
xor
pshufw
mov
mulb
andl
jnp
clc
ret
push
ret
dec
push
jl
xchg
jno
repz
push
dec
sarb
in
lds
push
test
jge
test
sub
ficoms
imul
or
adc
xlat
mov
pop
popa
movl
movsl
pop
pop
push
sub
inc
leave
loop
movsb
movsb
addb
ljmp
lock
jno
hlt
jo
dec
jmp
repz
push
sbb
out
xchg
pop
dec
mov
xor
push
add
pop
nop
mov
movsl
jne
mov
jno
rclb
push
adc
xor
mov
mov
xchg
mov
into
dec
fstpl
testl
jnp
in
dec
jbe,pn
movl
cmp
subb
imul
fisttpll
adc
dec
addr16
sahf
loop
mov
add
and
addb
or
or
push
inc
loop
jg
insb
mov
sub
xchg
jl
dec
negb
idivb
iret
mov
into
cmp
push
mov
les
call
dec
push
cmp
push
arpl
fcmovnb
std
and
add
stos
xchg
mov
xchg
push
sub
dec
xor
pop
xlat
subb
and
loop
es
rcrb
push
cs
leave
dec
loopne
out
jge
inc
dec
es
mov
dec
inc
jp,pn
shll
push
and
pop
out
inc
aas
adc
fcmovne
gs
imul
leave
add
pusha
clc
sti
adc
test
movsb
mov
imul
jp
mov
push
imul
icebp
jle
stc
dec
xor
sub
rcl
popa
stos
mov
mov
add
loopne
add
xor
stos
xchg
cmp
mov
push
hlt
enter
sbb
cmpb
lahf
sbb
dec
lahf
and
lahf
and
test
test
int
es
push
jbe
jbe
xor
push
std
or
and
cli
sbb
inc
les
idivb
cmp
gs
sub
inc
add
out
or
jb
addb
mov
mov
andl
inc
rcrb
push
popf
sbb
sbb
inc
rclb
loop
cmp
scas
sbb
dec
pushf
cmp
sbbb
jne
cltd
push
or
mov
nop
and
pop
push
pop
jecxz
adc
cmp
out
lea
mov
mov
push
adc
cmpsl
test
aad
jnp
xor
or
sbbb
mov
mov
js
daa
adc
cmpsl
jl
jns
and
ds
pop
jns
mov
xchg
ljmp
fwait
jno
lods
cmpsb
dec
push
pop
dec
adc
fistl
lahf
push
clc
add
add
shlb
add
adc
ds
jle
jnp
out
cmp
cmp
mov
hlt
test
inc
cmp
jne
das
outsb
push
adc
jne
add
pop
scas
xor
mov
out
xor
js
inc
mov
es
push
dec
ljmp
pusha
rol
inc
inc
and
adc
push
or
mov
xor
xchg
mov
loope
push
xor
sahf
or
pop
ds
rorb
jne
dec
jge
push
sub
cwtl
mov
addl
enter
gs
or
jg
and
cli
shrb
or
push
cmp
and
jnp
xor
sahf
dec
adcb
icebp
jns
cmpsb
mov
mov
jle
stc
sub
xchg
jg
pop
mov
or
cwtl
loopne
push
cld
andl
js
cmp
fnstsw
in
pop
jo
mov
dec
lds
xchg
ja
fistpl
mov
sub
adc
cmpsl
ror
icebp
rol
xchg
cmp
scas
shlb
jge
in
xor
out
out
les
push
cmp
leave
mov
pop
adc
call
shl
adc
pop
insl
in
mov
lock
cltd
xor
or
and
cmp
popa
pushf
rcr
cmp
lods
jecxz
shlb
xor
ret
jns
aam
test
mov
inc
jns
pop
mov
mov
decl
mov
jp
push
fidivrs
or
and
js
popf
fdivl
sub
and
iret
inc
popf
pop
iret
or
adc
insb
xor
test
adc
stc
add
rcr
inc
sahf
push
push
jb
sub
or
in
adc
fmul
insb
jl
lea
mov
testl
mov
pop
orb
pop
mov
pop
filds
add
mov
xchg
lret
cmpsl
or
dec
sub
fistl
mov
and
ret
dec
jecxz
add
xor
cmp
or
mov
adc
mov
or
ficomps
xchg
outsb
jle
xchg
je
repnz
adc
fisttpl
fwait
jl
je
mov
or
cli
lods
and
outsl
bound
into
test
sub
test
adc
dec
leave
mov
xor
lods
add
xchg
mov
mov
lcall
les
mov
out
inc
imul
adc
test
add
push
fisubrl
mov
jmp
test
add
cmpsl
xchg
ss
mov
fwait
mov
icebp
outsl
cs
jge
pop
push
inc
popa
and
ret
xchg
sarl
hlt
adc
mov
mov
push
stos
shlb
lahf
xor
mov
frstor
dec
pop
xchg
cli
jo
cmp
jp
test
or
sub
mov
mov
mov
hlt
push
lods
in
in
push
repnz
lds
ja
imul
aaa
in
and
stos
aam
sbb
inc
mov
sub
sti
fwait
cmp
xchg
pop
aas
fmull
das
aas
jge
and
popf
int
mov
and
jne
push
in
cmpb
andb
mov
mov
cmp
cmp
test
jl
aad
jne
pop
mov
push
dec
jl
cwtl
incl
or
mov
add
sub
push
stos
arpl
jmp
lods
enter
inc
jge
mov
iret
sbb
nop
xor
sub
sub
mov
incb
out
dec
xor
mov
fprem1
int
fsubrs
pop
and
xchg
test
das
pusha
ds
aad
ficoms
mov
mov
js
imul
mov
int
dec
clc
lcall
and
arpl
jg
das
fisttps
mov
push
lret
mov
sahf
ds
dec
pop
test
or
pop
dec
ds
lock
in
ret
jl
sbb
int3
jecxz
and
jp
cmpb
mov
bound
mov
and
js
and
loopne
push
and
jl
scas
lret
clc
sbb
sbb
mov
lods
iret
mov
lods
inc
pop
ret
sub
es
xorb
into
mov
or
jnp
mov
pop
fnstcw
push
push
jecxz
push
pop
nop
fistps
or
scas
xchg
xchg
mov
in
aaa
or
xor
and
loope
pop
popa
add
cmpsb
aaa
int
std
pop
pop
inc
mov
sub
call
pusha
cld
notl
pop
test
addb
xchg
fadd
sub
jg
scas
adc
outsl
cmp
arpl
mov
push
aaa
mull
mov
lock
mov
mov
or
inc
loop
loope
clc
enter
lahf
xchg
add
aad
pop
xor
ja
mov
push
and
popa
sbb
mov
out
mov
in
sub
aam
jp
shrl
mov
je
jge
ds
xchg
mov
xor
iret
outsb
cwtl
mov
sub
mov
inc
test
dec
dec
mov
xor
jl
cwtl
testb
and
mov
lock
xor
jmp
fdivs
movsb
cs
data16
mov
out
mov
out
es
cmp
xor
fisttpll
mov
mov
addr16
jb
in
jb
dec
push
lret
push
insb
and
bound
jnp
xchg
mov
rclb
loope
push
test
inc
cmpsl
jbe
ja
adc
pop
push
mov
add
push
cmp
cmc
mov
adc
ficoms
xchg
cmp
dec
sbb
xchg
fmuls
xor
mov
fsubrs
pop
cwtl
sbb
add
dec
jbe
cwtl
outsb
mov
add
mov
addb
mov
sub
cmp
in
pop
or
cmp
add
sbb
cmp
mov
js
iret
pop
cmp
mov
dec
jo
std
loope
arpl
dec
test
jg
daa
jo
mov
cmp
lock
push
cmpsl
jmp
arpl
shrl
daa
imul
xchg
push
pop
pop
fwait
xchg
sbb
js
mov
das
jae
test
cld
inc
addb
xlat
ret
sub
jge
and
cmpsl
xor
push
mov
jae
arpl
pusha
adc
int3
xlat
pushf
aam
shlb
inc
jl
mov
movsb
xor
test
push
imul
imul
adc
jge
or
loope
xor
frstor
lret
mov
jno
testb
orl
int
pop
add
dec
popa
jge
jl
in
in
and
mov
and
jb
and
and
and
push
shr
loop
outsb
pop
pop
mull
ror
push
iret
lcall
fidivrl
inc
dec
je
pop
lock
pop
cltd
rclb
xor
and
cmp
mov
push
xlat
pusha
xchg
cmp
aas
repnz
dec
inc
pop
dec
pushf
pop
inc
hlt
mov
mov
sub
mov
push
fs
mov
out
xchg
xor
imul
inc
mov
mov
addr16
mov
lea
insb
mov
mov
ror
xchg
nop
add
pop
sub
mov
shlb
fidivs
loopne
cmp
inc
jbe
aam
jno
mov
lahf
bound
push
roll
sbb
out
ds
jb
xchg
pop
ret
test
cmp
mov
inc
and
or
and
sarl
adcb
stos
cltd
cmp
jnp
mov
insl
test
enter
cmp
inc
mov
iret
stos
lods
aam
rclb
fucomip
popa
pop
sub
addl
ja
es
xor
in
cmp
push
cs
and
mull
xchg
pop
lahf
adc
outsl
insb
repnz
ds
mov
cmp
pop
hlt
mov
and
push
cmp
hlt
mov
inc
xchg
cmpsl
mov
inc
movsb
push
mov
cltd
ret
pushf
xchg
ja
push
lret
insl
arpl
and
fldl
aas
lahf
addb
aaa
mov
and
addl
sbb
mov
imul
and
div
testb
dec
mov
movsl
add
xchg
sahf
roll
mov
or
add
and
xor
fmuls
or
fcmovnb
scas
cmp
enter
push
inc
push
inc
icebp
jg
pop
jp
add
in
jl
loope
cmp
addb
pop
cmp
dec
sub
jg
pop
outsb
and
pcmpeqw
decl
out
xorb
dec
pop
in
lock
mov
das
xor
test
clc
dec
cmp
or
jae
pusha
xorb
lret
xchg
hlt
dec
cld
mov
adc
addr16
push
jb
mov
push
cmp
push
xchg
push
cmp
aad
jb
jg
rol
rol
negb
repnz
inc
jne
aaa
add
clc
mov
dec
pop
shl
adc
pop
pop
stc
fwait
cmp
jno
sahf
in
es
push
xchg
lcall
cmp
test
mulb
jno
test
dec
or
mov
popa
push
rorb
imul
push
cmpsb
jo
sub
cmp
sub
sbb
pop
xor
sbb
lahf
fiaddl
into
int
fsubs
cmc
inc
xlat
add
out
cltd
xorl
cld
cld
add
mov
inc
andl
addb
test
push
pop
sub
xchg
jae
loopne
add
sub
sbb
loop
mov
lock
sbb
mov
iret
jb
int3
mov
and
cli
mov
inc
std
mov
nopl
insb
jmp
add
shlb
pop
adc
push
push
jbe
das
dec
or
adc
dec
jb
aad
outsl
cmc
andl
dec
inc
inc
les
xchg
mov
mov
daa
mov
popf
mov
sub
gs
inc
mov
aad
inc
add
xchg
sbb
lcall
mov
fisttpll
fcomi
cltd
test
cmc
xchg
mov
stos
mov
mov
jno
loope
xor
sahf
mov
pop
pop
andb
scas
dec
sub
dec
cmpsl
cmpsl
cmpsb
add
imul
add
sbb
cmpsl
fbstp
mov
mov
cmp
or
jge
push
fidivl
pop
sbb
mov
inc
lret
jge
mov
mov
dec
jmp
ret
imul
dec
movsb
repz
outsb
test
mov
dec
enter
add
xor
cvtdq2ps
dec
cmpsb
mov
sbb
mov
xor
adc
movsb
jae
ret
push
xor
xchg
push
pop
push
movsl
in
iret
mov
sbb
mov
inc
adc
push
int
loop
pop
mov
xchg
clc
movd
push
fiaddl
out
jb
int3
pushf
sub
adc
adc
gs
mov
into
call
add
int3
pop
outsl
or
movsl
js
add
sarl
adc
les
push
das
movsl
out
in
aaa
rolb
add
outsb
fs
enter
jecxz
inc
xchg
inc
and
mov
rorl
pusha
xchg
cli
xchg
leave
clc
unpcklps
push
or
push
scas
popa
in
push
in
or
enter
jmp
add
add
and
xchg
inc
sti
movsl
mov
sub
test
sbb
sbb
test
loope
lods
cmp
call
mov
mov
imul
aad
std
std
cmpsb
rcrl
arpl
adcb
ds
cmp
arpl
cmp
bound
cli
pushf
mov
in
pop
cmpsb
xor
imul
mov
jge
or
and
pusha
in
dec
cld
aad
cli
adc
insl
in
lcall
sbb
push
or
jp
ror
push
add
add
filds
mov
je
andb
sub
and
repz
jp
sar
jns
popa
push
movsb
dec
shll
push
jns
pushl
ret
xchg
enter
inc
fisubl
mov
imul
das
jmp
jle
adc
ret
and
or
ret
sbb
out
aam
mov
xlat
and
pop
fistps
repz
fidivs
mov
adc
lock
lahf
iret
pop
in
push
test
test
mov
jb
lret
in
arpl
shrl
mov
lock
sahf
lods
xor
les
movsb
dec
gs
push
mov
mov
test
div
in
push
stos
add
xor
das
adc
adc
add
xor
loope
sub
clc
pop
mov
mov
jge
int3
mov
mov
adc
imul
push
pop
arpl
repnz
adc
movsb
cmp
push
dec
popf
push
loope
xor
pushf
dec
push
mov
cmp
ret
leave
or
enter
cwtl
inc
int
cli
shll
dec
test
test
jmp
outsl
fnstenv
outsb
orb
dec
inc
adc
mov
jge
xorl
shll
inc
dec
clc
jl
or
pop
or
and
in
xchg
int3
pop
xchg
add
adc
pop
pop
xchg
mov
nop
dec
xor
mov
aas
sub
push
shl
outsb
out
mov
add
in
push
fidivs
cmp
ret
dec
in
aad
sub
jae
jmp
or
and
jbe
add
loop
shrl
lahf
enter
enter
ret
xchg
enter
movsb
fs
sub
lahf
cs
outsl
jo
repnz
xchg
cmp
imul
fldenv
insb
out
add
pslld
je
mov
or
cmp
bound
daa
ljmp
aam
jns
xchg
cld
outsl
mov
lahf
cmp
push
xchg
xchg
lcall
es
test
sti
lahf
xchg
xlat
push
dec
adc
adc
mov
jne
mov
ret
popf
mov
xor
repnz
xchg
popa
movsl
fwait
test
ficompl
sbb
gs
aam
out
nop
cmp
xor
stos
xchg
push
test
and
sub
adc
xlat
data16
xchg
xor
mov
dec
mov
ficomps
outsl
js
xor
pop
std
comiss
jp
and
inc
and
out
lcall
push
outsl
xor
push
dec
mov
sub
pop
xor
out
cmc
jae
in
test
shrl
subb
jp
jae
test
ljmp
pop
cmp
jmp
popf
daa
cmc
mov
jnp
cwtl
je
negl
or
and
insl
sub
add
dec
mov
mov
movsb
loopne
imul
sub
fdivrs
mov
out
div
lcall
test
mov
shrl
imul
mov
pushf
fsts
sbb
sbb
sbb
das
out
stos
arpl
mov
sbb
mov
aaa
mov
out
fidivs
lret
xchg
inc
mov
fucomi
pop
out
fwait
jp
aad
loope
dec
les
pop
jno
insl
mov
jmp
icebp
cmp
jb
dec
dec
int3
pop
lds
mov
sub
xchg
mov
pushf
sbb
dec
lret
xchg
fisubs
jge
lds
mov
repz
stos
roll
gs
adcl
sbb
push
mov
fs
cmp
imul
fistps
mov
repnz
mov
xchg
or
and
cld
inc
lea
jmp
push
js
lret
lods
decb
pop
or
push
movsl
or
test
rorl
xchg
addr16
scas
addl
inc
xorl
and
daa
sub
xor
adc
repnz
jg
jnp
mov
dec
or
push
jge
sub
je
xlat
adc
fidivl
fs
mov
int3
es
lock
inc
push
imul
lock
cmp
sub
je
inc
lahf
push
xor
int
mov
rcll
sahf
mov
add
jmp
sti
movsl
jle
orb
ljmp
mov
xlat
adc
sbb
cmpb
into
hlt
pop
pop
movb
jle
xor
xchg
test
jl
scas
enter
mov
sbb
sahf
sarb
push
bnd
lock
fsubrs
dec
mov
jno
inc
mov
outsb
fsubs
mov
test
xchg
fwait
test
loope
jno
pop
clc
sub
fnstsw
inc
mov
jp
out
es
repnz
test
loop
testl
leave
outsb
push
or
push
lds
or
imul
fdivrl
xchg
or
sbb
lock
icebp
and
mov
jnp
adc
adc
pop
imul
jecxz
sub
dec
push
int
jnp
jbe
pop
sub
int3
icebp
pop
pop
push
add
jne
mov
in
jmp
xorb
inc
add
outsb
sub
aaa
dec
pop
icebp
cltd
inc
pop
ja
popf
lods
movzbl
xchg
jo
and
push
xchg
test
inc
sub
cmp
aas
mov
movb
bound
dec
adc
jno
div
aas
test
mov
push
lods
mov
imul
push
pop
iret
xchg
xlat
iret
dec
popa
int
inc
sub
out
test
rcl
xor
dec
fnsave
mov
cmpsl
insl
js
jbe
jns
jge
dec
lods
add
jb
lods
and
pop
outsb
xor
fmull
mov
shr
data16
and
jno
or
jp
add
stc
sub
andb
test
fidivl
idivl
cmc
clc
ljmp
jae
mov
int
loopne
std
xchg
fidivs
adcb
mov
pop
add
lods
es
dec
nop
sbb
sbb
or
pop
adc
xor
pop
dec
adc
adc
sbb
clc
fidivrs
ja
pop
mov
rcrl
xchg
cmp
pop
sahf
lcall
call
mov
cli
sbbb
mov
mov
cmp
xor
xlat
sbb
frstor
fwait
add
cmp
out
or
mov
gs
xlat
outsb
mov
pop
mov
cld
in
mov
adcb
push
push
out
xor
sub
or
mov
and
xchg
lret
pop
push
test
cmp
into
mov
jno
stos
or
xor
fwait
lea
mov
pop
fimull
mov
mov
and
mov
nop
call
icebp
dec
adc
lock
xor
ds
dec
mov
fistps
insb
in
mov
mov
cmp
hlt
ret
iret
sub
add
cmp
dec
int
mov
js
lret
setb
das
fcmovbe
outsl
jns
jnp
int
cmp
mov
push
cmp
fiaddl
inc
lods
dec
xchg
mov
mov
cmpsl
mov
pushl
insl
mov
and
inc
or
pop
jmp
mov
loopne
jle
ja
scas
pop
xor
shlb
mov
xchg
dec
enter
call
das
test
in
xchg
xor
shll
leave
dec
iret
xor
fiaddl
push
mov
jbe
je
iret
scas
pop
or
lcall
jl
push
sub
fisttpl
sti
sbb
jp
mov
sub
adc
jb
xor
inc
or
pusha
inc
loop
out
pop
cmpsl
jae
test
sub
adc
test
or
mov
aas
sbb
or
add
xchg
jge
jo
mov
mov
sahf
push
shlb
test
andb
test
in
jle
jnp
mov
sarl
add
cmp
dec
xchg
out
pop
sti
test
dec
les
scas
pop
pop
pop
stos
mov
mov
out
xchg
xchg
push
pop
lcall
jge
add
adc
mov
js
xorb
ret
inc
enter
outsl
in
dec
fisubrl
pop
cmpsb
mov
xchg
outsb
push
jae
mov
les
push
adc
xor
mov
xor
adc
dec
cmp
pop
stc
push
adc
sub
mov
xchg
addr16
lret
bound
push
aad
and
mov
xor
leave
and
icebp
xor
imul
outsb
inc
add
lea
or
mov
enter
decl
adc
int
out
pop
sbb
and
push
pop
and
stc
push
sub
mov
xor
mov
pop
mov
std
add
sub
xor
xchg
shlb
adc
cltd
loope
xor
scas
push
or
mov
dec
repnz
and
in
xchg
add
dec
lods
jle
into
mov
mov
xchg
add
andl
push
gs
push
push
mov
xor
fstps
clc
or
es
lods
cld
jnp
mov
rorb
dec
or
xor
arpl
out
dec
inc
cmp
jl
mov
shrb
mov
jl
adc
adc
or
xor
cmp
ret
fs
ss
jp
sub
xor
adc
push
sbb
cmc
fmulp
push
sbb
idivl
jbe
rcrl
mov
adc
out
xchg
cli
clc
pop
pop
lcall
pop
mov
and
or
ficoml
leave
out
fnstsw
pop
push
jbe
mov
xor
mov
loopne
adc
or
xchg
xlat
pop
insl
faddl
ja
outsb
rorl
fistpl
fcmovu
movsb
sub
ljmp
mov
pop
pop
icebp
push
adc
jmp
jmp
jnp
fs
adcb
sbbl
xor
adc
inc
dec
icebp
sarl
stos
lock
sahf
aad
fwait
movsb
dec
fwait
lahf
mov
inc
add
loopne
fnstenv
neg
or
push
pop
mov
jnp
mov
mov
mov
je
xchg
mov
jecxz
inc
scas
test
arpl
jbe
in
scas
pop
xchg
and
aad
dec
iret
int3
out
pop
mov
lahf
fsubrl
sarb
outsb
sbb
mov
jbe
jne
je
push
push
loop
dec
jmp
out
js
xchg
divl
lods
mov
or
adc
push
addr16
jmp
sub
stos
rorl
sbb
cmp
movsl
nop
enter
int3
adc
dec
aas
jmp
popf
movsb
jno
sub
cwtl
xchg
sbb
and
mov
ss
mov
popf
rorb
dec
sbb
or
pusha
add
xor
insb
sbbl
push
mov
sbb
jb
cmpsl
and
pop
jbe
mov
addl
pop
xor
mov
dec
sub
or
dec
pushf
leave
int
ds
jnp
cmpsb
inc
lods
jbe
js
je
xor
or
sti
mov
test
gs
xor
mov
inc
movsl
sub
loopne
shlb
clc
cmp
std
stos
cmp
je
jb
fnsave
popf
mov
cltd
popa
test
push
cwtl
mov
xchg
sbb
xor
movsl
pop
in
iret
pop
cmp
cmpsb
mov
stc
dec
adc
add
pop
xor
mov
dec
xchg
fmulp
loope
rorl
les
sbb
test
popf
mov
mov
bound
cmp
dec
push
sub
ret
adc
mov
fldl
bound
xor
fistps
sub
add
xor
dec
xchg
outsl
loope
into
fistpll
aad
pop
repz
cli
xchg
cmp
loope
jns
pop
ret
jg
or
xor
out
shrb
test
xchg
imul
jne
mov
loopne
scas
and
jne
jno
lds
call
and
dec
js
sub
in
popa
sbb
push
and
mov
xchg
cmp
shll
mov
sbb
add
pop
into
insl
addr16
lahf
or
pop
mov
lcall
outsl
jmp
cmpsb
mov
int3
xlat
orl
js
mov
xchg
mov
mov
jnp
arpl
jl
adc
and
xchg
mov
adc
inc
test
fwait
sarl
sub
fwait
orw
ret
das
aam
in
fwait
cld
shr
ret
outsb
ret
mov
adc
jns
hlt
sbb
push
enter
cmpsl
cwtl
mov
sbb
xor
xchg
inc
or
add
int3
mov
inc
cmp
pop
inc
popa
adc
jge
insb
or
in
data16
add
mov
shrl
push
test
or
hlt
pop
pop
sub
mov
cltd
repnz
push
notl
push
scas
mov
inc
adc
leave
pop
lahf
and
xor
push
lahf
jno
jl
aaa
dec
mov
addr16
repz
packsswb
cmp
sbb
mov
jns
push
add
pop
push
jle
inc
jno
sbb
int
stos
and
jns
add
jnp
cmp
and
jne
lahf
fidivs
repnz
cmc
adc
xchg
movsb
aas
mov
arpl
adc
sbb
jg
mov
cmp
sub
cli
sarb
or
clc
push
out
imul
pop
into
aam
pop
and
out
and
inc
sahf
rol
xchg
pop
movsl
and
imul
pop
mov
mov
out
ja
and
inc
orl
jbe
pop
or
mov
stos
cwtl
lret
mov
inc
ljmp
dec
jae
sub
add
xor
movsb
and
cmp
hlt
add
sbb
arpl
xor
ds
test
xchg
mov
xchg
pop
or
or
mov
cmp
cmp
push
inc
push
mov
xchg
add
test
cmp
lock
divb
pop
rcll
add
bound
aam
mov
sub
or
xchg
adc
ret
cmp
in
nop
inc
aad
pop
daa
fistpl
xchg
daa
cwtl
push
mov
mov
pop
push
cli
imul
adc
mov
mov
aas
push
imul
loope
xor
or
addr16
inc
pushf
daa
add
and
push
push
pop
sbb
mov
or
repnz
pop
int
adc
dec
push
imul
sbb
or
sbb
mov
mov
pop
add
inc
xor
roll
jmp
pop
mov
scas
aas
lds
test
sbb
js
aas
push
xchg
xor
insl
repnz
cmpsl
mov
mov
xor
xor
push
xlat
mov
dec
lret
in
stos
jl
scas
xchg
push
dec
std
jne
push
mov
dec
in
add
mov
addb
aad
sarl
enter
pop
loope
in
mov
sbb
jbe
mov
sub
repnz
xlat
xor
es
push
push
repz
xor
sbb
jecxz
test
mov
rcrb
iret
mov
jle
pop
repnz
rcrb
inc
pop
push
jo
loopw
out
test
ja
jmp
lock
mov
mov
aaa
jle
jmp
lea
dec
or
ja
stc
fistpll
push
stos
fbld
fwait
jecxz
outsl
sbb
cld
cmc
pushf
ret
es
aas
lea
stc
xor
out
cmc
xchg
jnp
stos
mov
or
mov
and
jge
scas
arpl
xchg
push
xor
push
mov
rcr
insb
lods
pusha
es
lock
fdivrl
imul
pop
mov
pop
sbb
push
inc
jne
dec
jae
mov
mov
mov
sahf
call
into
sarb
push
jne
lods
push
insl
mov
arpl
xchg
in
or
jmp
mov
ja
pop
jnp
cmpsb
xchg
pop
out
jbe
inc
push
out
fcoms
out
aas
sahf
lahf
cwtl
dec
pop
and
jno
inc
mov
sub
mov
fistl
push
and
mov
jle
adc
fldl
add
pop
popf
and
popf
sub
adc
lods
pop
or
lods
sbb
das
rcrl
pop
xchg
dec
lahf
imul
push
cmp
icebp
and
jbe
clc
pop
testb
jmp
enter
enter
push
imul
in
je
sub
jge
jmp
xor
xchg
push
lret
sub
dec
mov
jne
out
xchg
jecxz
jbe
adc
push
jmp
insb
dec
stc
inc
sub
sbb
inc
cmp
sbb
push
in
jnp
cmp
lea
ret
test
shrl
mov
stos
test
bound
cmpsl
add
add
lret
lahf
mov
sub
and
dec
orb
mov
pushf
dec
in
mov
sahf
rcr
mov
mov
pop
test
mov
mov
xchg
cwtl
fldt
xlat
push
sub
inc
xchg
scas
in
jb
add
xchg
push
jecxz
popl
jns
mov
sti
ficoml
adc
or
shll
test
and
ljmp
bound
sub
lahf
mov
sub
sbb
adc
imul
jmp
shlb
loop
mov
lock
mov
mov
pop
imul
adc
dec
or
rorl
xchg
and
mov
in
pop
sarl
pop
lahf
pop
mov
add
cli
sahf
pop
jne
push
jle
dec
xchg
xchg
and
mov
shlb
ret
stos
inc
ret
mov
cs
mov
pop
dec
pop
add
add
repnz
xor
ljmp
outsl
adc
pop
enter
icebp
ficomps
fidivrl
lahf
orb
xchg
dec
push
icebp
push
or
es
or
jo
in
push
ret
pop
in
sbb
les
inc
js
push
dec
cmp
in
sub
mov
or
stos
addl
pop
roll
shlb
nop
jo
ljmp
mov
cld
push
jle
data16
insb
lret
out
pop
fcomip
fcmovnbe
dec
jmp
push
xchg
fcomip
lock
sbb
inc
cmp
mov
jnp
jne
int3
pusha
jns
int
xchg
push
ljmp
cwtl
aam
and
cli
inc
enter
mov
insb
hlt
adc
cmpl
xor
add
loopne
inc
ja
in
scas
js
jb
push
xchg
aam
dec
mov
dec
xchg
inc
clc
cmpl
data16
loopne
lret
ret
mov
gs
out
mov
scas
gs
arpl
mov
sub
xchg
mov
and
inc
lahf
mov
leave
jns
outsl
xchg
mov
jmp
and
dec
arpl
aam
addb
and
mov
loopne
jg
adc
or
roll
mov
cltd
cmp
gs
stos
adc
enter
xor
mov
js
rol
scas
mov
lahf
xchg
xchg
cmpsb
push
out
jbe
int3
push
mov
sbb
cwtl
mov
mov
sbb
pop
push
fwait
dec
imul
lret
mov
jns
and
ret
je
movsl
push
jns
inc
cmp
sbb
mov
es
out
cmp
cli
and
fldenv
scas
pop
ror
int
mov
in
sub
xchg
xor
sbb
ss
dec
lcall
hlt
cmp
imul
loop
cwtl
adcl
outsl
push
fidivs
lcall
and
rcrl
shrb
mov
pop
fcompl
push
in
ljmp
sub
xor
popf
aaa
je
mov
jecxz
mov
push
das
mov
push
outsl
fnstenv
pop
mov
push
nop
jle
xor
rorb
mov
adc
dec
ret
mov
ficomps
xchg
out
stc
in
out
push
imul
mov
pop
xor
lea
inc
mov
add
icebp
sub
mov
push
xchg
gs
sbb
test
and
mov
xchg
jecxz
jae
push
movsb
mov
xchg
cmp
fiaddl
xchg
push
cmp
sti
es
icebp
lret
mov
fwait
insl
mov
pop
or
jp
enter
clc
or
ror
mov
fidivrs
fimull
jae
adc
shll
test
add
rclb
and
lea
and
shrl
add
and
mov
fwait
mov
sbb
sub
test
jecxz
shll
sti
fwait
in
call
fistl
mov
pushf
sub
and
dec
fmuls
fs
xchg
lret
lods
cmp
std
add
sub
sub
inc
push
leave
cmpsl
jo
arpl
mov
cmp
insb
or
jecxz
sub
jb
mov
in
xchg
lret
lds
loopne
sbb
scas
pop
enter
cli
adc
sub
jmp
mov
or
out
add
iret
pusha
xchg
mov
jbe
xor
mov
xchg
test
jge
cmp
stos
push
out
sarb
out
outsb
adc
push
jl
imull
int
popf
cmp
int3
mov
adcl
push
push
push
push
and
fcoml
in
out
xor
jo
imul
push
cmovle
pushf
incl
inc
adc
dec
inc
push
iret
and
xchg
jle
xor
jl
xchg
sub
stos
adc
es
or
aad
add
repnz
cs
push
arpl
xchg
and
mov
sarb
adc
jg
dec
xchg
test
cmp
rorb
pusha
inc
in
pop
xorb
add
cmp
add
push
cs
cwtl
out
sbb
inc
jo
or
dec
inc
push
adc
xchg
pushf
cmp
adc
insb
repz
ds
xchg
xor
jnp
and
imul
xchg
pushf
mov
cmpsb
cmp
imul
mov
ret
orb
in
jle
pop
addr16
and
pop
stos
and
addr16
push
adc
out
push
mulb
mov
mov
cmp
jno
push
stc
jne
enter
jp
jg
sbb
shr
subl
xchg
out
sbb
cmp
sahf
xchg
std
jns
xlat
mov
dec
cltd
lds
xchg
out
lret
pop
minps
dec
leave
jae
stos
push
nop
xchg
dec
lret
in
mov
nop
pusha
adc
icebp
dec
incb
out
and
mov
and
mov
shr
xchg
mov
sub
insl
into
push
test
mov
popf
hlt
add
aam
and
in
push
jmp
sbb
popf
lods
leave
push
pusha
bound
fsubp
pop
add
cmp
pop
mov
sti
push
or
das
xchg
xchg
or
pop
pop
iret
mov
sbb
loopne
incl
iret
arpl
xchg
pop
mov
notl
ss
test
scas
adc
add
push
dec
lret
mov
clc
cmpsb
sbb
call
adc
xchg
add
js
ljmp
gs
ss
adc
add
add
mov
out
scas
dec
sbb
mov
mov
dec
test
or
out
leave
jge
mov
add
dec
jne
outsl
jbe
scas
dec
push
cmp
pop
cmc
mov
rcrb
movsl
xchg
jl
gs
hlt
repnz
pop
popa
mov
mov
test
movsb
mov
int3
test
fwait
adc
fisubrl
dec
outsb
imull
test
sti
fcomip
mov
mov
dec
imul
xchg
mov
cmp
aaa
out
mov
pop
sub
clc
mov
or
pop
mov
cmpsl
push
dec
fcmovne
sub
xor
pop
jno
fisttps
aaa
dec
in
icebp
dec
mov
nop
cmp
loopne
mov
scas
scas
gs
mov
dec
cmp
sbb
addb
inc
xchg
jae
dec
aas
les
aad
xlat
in
pop
jae
inc
mov
pop
dec
adc
ret
imul
cltd
imul
loop
mov
stos
fsubrs
jl
popf
ja
dec
repnz
jmp
outsl
fdivrl
dec
out
push
xor
mov
xor
sbb
or
lret
dec
or
into
lret
xor
loop
sub
rcrb
sbb
mov
in
pop
in
popf
xchg
add
jo
push
push
mov
negl
mov
data16
out
lret
clc
sbb
mov
jb
push
enter
inc
into
and
pop
into
xchg
out
push
mov
loope
cmp
lds
mov
add
add
dec
sbb
mov
adc
mov
xchg
out
cmp
sbb
sbb
lret
mov
popf
jne
out
jmp
add
test
test
add
mov
xor
lea
sub
ret
bound
sarl
scas
xchg
loop
outsl
cmp
test
in
xchg
mov
in
dec
pop
movsb
lahf
cmp
lgs
cli
out
fdivs
and
jnp
fstl
movsl
jnp
ss
inc
or
fidivrl
lea
ljmp
mov
lock
scas
lret
call
in
jge
repnz
leave
mov
jns
mov
mov
sub
shlb
fisubrl
sbb
or
mov
shll
enter
les
adc
xchg
push
push
xchg
and
xchg
jle
pusha
adc
movsl
dec
dec
stos
movsb
dec
lea
dec
mov
jecxz
xlat
ror
or
cmp
dec
rcll
icebp
mov
cmp
rorl
incl
fildl
mov
out
mov
shlb
cmp
mov
out
sbb
mov
pop
add
mov
stc
or
mov
loope
mov
pop
lret
out
es
mov
add
pushf
mov
cli
ljmp
xchg
in
jge
les
addl
or
pop
out
rcll
ds
pop
sbb
scas
jne
imul
pop
repnz
inc
in
jbe
mov
pop
test
in
jb
pop
xor
movsl
fiaddl
fwait
xchg
jno
pop
in
or
jmp
xchg
int
pop
adc
enter
pop
fsub
adc
cli
mov
shrl
test
fstps
cmp
adc
inc
jae
xchg
fbld
xchg
popf
mov
adc
xor
fcoms
push
jg
adc
jecxz
lock
clc
jmp
cltd
xchg
ret
cmpsb
mov
ljmp
mov
xor
xor
sub
scas
ss
std
lahf
jecxz
mov
pop
push
imulb
les
push
lret
dec
push
aas
sub
in
cmc
shrl
mov
mov
mov
push
shlb
dec
push
fwait
loope
dec
sahf
push
and
pop
fistpl
sbb
sbb
inc
jmp
jae
pop
insl
orl
add
xchg
loop
jmp
jle
stc
add
and
mov
out
icebp
pop
push
mov
mov
dec
ret
fbld
in
push
or
and
xor
sarl
inc
outsb
push
shrb
xor
inc
pushf
popf
push
adcb
inc
roll
ja
pop
fldenv
mov
push
adc
or
movlps
negl
aas
mov
fsubs
fsts
xor
or
scas
mov
push
or
xor
out
clc
lds
popa
xchg
inc
aam
int
or
push
sbb
incl
sub
jae
inc
xchg
mov
cld
push
jb
ret
aad
mov
pop
push
jne
inc
jae
xor
xchg
xchg
pusha
mov
or
sub
pop
mov
lret
or
dec
adc
jb
pop
jae
xchg
inc
mov
mov
add
adc
jl
nop
push
pop
rcr
mov
ss
jmp
notb
xchg
push
loop
std
pop
mov
mov
aam
mov
cmc
jno
scas
fisttpl
sub
icebp
es
lds
das
sbb
imul
test
pop
sbb
xchg
lret
and
in
lods
mov
fwait
pop
scas
inc
lahf
jnp
fmuls
add
lea
punpckldq
adc
sbb
popf
xlat
sbb
lcall
add
sbb
imul
jg
jb
add
movsb
mov
scas
mov
into
jne
push
push
icebp
mov
sub
shll
push
xor
pop
arpl
jbe
or
aad
sbb
push
lods
mov
scas
cld
fimull
push
push
ret
adc
or
insl
jno
mov
fisttpll
lock
jno
test
out
adc
pushf
jne
inc
xchg
xchg
inc
jno
aaa
clc
stos
clc
inc
aas
sub
stos
loop
add
mov
sahf
rcrb
sub
rcll
cmp
out
out
popa
inc
mov
xor
jle
mov
mov
mov
xor
dec
push
add
sub
aam
cmp
mov
jb
add
push
subb
cmp
dec
cmpb
mov
push
in
xchg
js
sbb
outsl
test
mov
xchg
or
adc
sub
mov
pop
popa
push
mov
xor
jp
sub
mov
sub
or
sbb
and
pop
dec
xor
adc
pop
test
insl
inc
dec
pop
jne
lret
aad
scas
sub
addl
jo
rcrb
lret
idivl
jge
fldenv
fidivrs
inc
jl
or
inc
iret
xchg
cmp
dec
cmp
mov
jecxz
push
jno
jne
ror
sahf
in
xor
push
mov
pop
or
repz
enter
cmpsl
and
aas
sarb
cmp
push
aaa
leave
pop
inc
push
push
cmp
adc
outsl
nop
ss
ret
mov
hlt
clc
jp
xor
out
push
xlat
subl
orl
dec
pop
xchg
mov
jns
fwait
pop
inc
jne
fcmovnu
sbb
add
or
mov
cmpb
jl
sbb
mov
sbb
lret
jns
mov
ret
lcall
sub
divl
pop
cltd
fsub
fldenv
ljmp
mov
loopne
mov
pop
movsb
outsl
cld
ja
xchg
call
pop
mov
aaa
rorl
sbb
push
adc
dec
ljmp
cwtl
mov
out
std
cld
xchg
vmread
fs
push
sbb
mov
cmp
insb
push
fidivl
addr16
ja
in
shr
outsl
and
sub
add
jmp
or
push
cmpsl
int
adcl
shr
push
clc
aam
cmp
cmp
mov
or
sbb
lret
inc
jns
push
push
faddp
push
jno
cmpsb
mov
mov
sub
adc
leave
mov
clc
inc
cmp
insw
mov
loopne
lahf
incb
xor
jns
gs
jnp
jmp
cs
xor
xchg
repz
cmp
pop
adc
push
mov
fstps
lret
xor
inc
cmpsl
inc
sbb
xchg
aam
rcrb
sbb
shll
loopne
push
dec
inc
cmp
xor
out
sbb
test
data16
dec
and
sub
shr
rcr
mov
cmp
mov
pop
mov
push
cwtl
pop
lds
fld1
adc
fcoml
scas
add
xchg
xchg
or
sub
popa
cmc
iret
push
aad
dec
mov
or
xor
pop
cmp
test
push
fsubl
cmp
mov
fsubr
jnp
xlat
jmp
pop
out
lcall
mov
dec
shlb
inc
add
outsl
lods
or
jbe
leave
adc
pop
in
sbb
cmpsl
push
mov
push
es
xor
int
imul
arpl
sbbl
cwtl
and
pop
xor
push
sbb
out
or
push
insl
jmp
xchg
sub
insl
mov
cmp
mov
aam
stos
inc
or
xchg
mov
jmp
fwait
or
adcl
stc
hlt
movsl
fisubl
cltd
add
rclb
cmp
adc
dec
ljmp
stos
cmpb
nop
fwait
cltd
cld
leave
iret
or
pop
ds
jnp
in
adcl
into
stos
into
jmp
lds
sbb
out
cli
pop
cmpsb
xorb
push
aam
xor
xchg
adc
inc
stos
mov
sub
test
rorl
arpl
leave
xchg
push
cwtl
jns
cld
insl
adc
pushf
jo
fdivl
adc
ret
fwait
xchg
jbe
jae
ds
test
mov
xchg
stos
jae
xchg
lcall
stos
push
lcall
fdivrs
iret
ret
cmp
in
inc
pop
mov
rorb
jae
and
lea
shrl
bound
mov
test
in
xor
dec
fisubrs
test
stos
push
outsl
pop
cmc
ret
leave
aaa
stos
test
xor
repz
stos
cltd
xor
jp
mov
cmp
ret
xor
and
sub
mov
loop
ret
xor
lret
pop
sarl
xor
sbb
out
add
gs
cmc
pop
inc
mov
pop
jns,pn
leave
ror
push
adc
inc
sbb
sbb
push
xchg
in
add
lods
loop
jb
insl
in
or
lret
mov
lret
jge
gs
push
inc
das
imul
pop
push
inc
pop
int3
mov
jp
hlt
fscale
pop
push
pop
jnp
xchg
jle
jb
fisubl
cs
dec
adc
jle
int3
xchg
jle
fistpl
mov
ret
test
mov
cmp
sub
mov
jecxz
xor
int3
fdivrl
jne
mov
xchg
daa
xchg
leave
loop
xchg
bswap
sub
sub
xchg
push
pop
pop
mov
hlt
mov
push
outsb
hlt
movsb
scas
cmpsl
iret
inc
repz
jbe
pop
cwtl
push
jle
xor
adc
leave
mov
jge
xchg
mov
mov
dec
ds
xlat
xor
mul
jmp
inc
pushf
popa
push
fdivrl
or
xchg
insb
mov
pusha
into
cmpb
pusha
pop
ret
mov
loop
popf
cli
sub
mov
mov
pop
xchg
push
fnstsw
inc
inc
mov
add
insl
jge
pop
mov
inc
xor
jge
out
nop
jg
adc
mov
pop
movups
nop
xchg
jb
adc
adc
add
push
push
push
stc
push
data16
test
push
sbb
xor
dec
pop
inc
incb
icebp
jge
int
pop
xchg
fisubrs
push
jl
add
xchg
jbe
jg
lahf
jno
iret
cld
shrl
test
mov
adc
lea
xchg
test
repz
addr16
jae
fsubrl
add
push
ja
scas
ds
in
sbbl
jecxz
cld
and
das
out
sbb
add
les
loop
pop
iret
or
dec
and
or
mov
pop
ret
inc
push
push
fdivrs
mov
push
rcrb
ljmp
cwtl
mov
jg
cmp
jnp
subl
or
pop
push
mov
lods
xor
imul
or
jb
mov
cs
pop
sbb
xchg
cmc
pusha
mov
fsubrp
stos
notb
xchg
and
sbb
ror
mov
mov
mov
add
ror
pop
dec
jbe
pop
pop
insb
pop
xor
jo
or
dec
in
aad
xor
subb
out
into
lock
popa
sbb
out
inc
or
push
and
mov
push
ljmp
lcall
push
ja
notb
or
hlt
ds
mov
mov
mov
push
sarb
sub
mov
clc
jno
mov
iret
fcoms
clc
pushf
outsb
call
or
jo
mov
out
ret
mov
cmp
sbb
and
aam
call
lods
jno
in
mov
xor
adc
orl
adc
pop
mov
or
jmp
scas
sti
and
lcall
inc
push
add
daa
pop
outsl
decb
cmp
mov
call
or
jbe
sbb
js
roll
adc
jae
cmp
testb
jmp
icebp
jo
sub
dec
mov
out
arpl
repz
and
add
pop
imul
or
ljmp
jno
cmpsb
es
ss
andb
pop
dec
mov
ds
and
add
and
mov
mov
sbb
push
cmpsb
sbbl
es
sbb
adc
push
ljmp
xchg
nop
sbbb
mov
pop
xchg
mov
lret
vaddsubpd
xchg
cltd
ds
leave
push
repz
xor
add
into
and
out
call
xor
out
cmc
scas
mov
out
push
cmp
push
aas
clc
inc
loope
or
xlat
inc
out
cld
xchg
enter
push
xor
popf
inc
or
incl
movsl
jbe
bound
jne
jg
mov
pop
lds
repz
mov
push
enter
adc
cmp
adc
mov
push
enter
xchg
push
or
and
cld
cmp
shl
out
jp
rclb
ljmp
test
shrl
add
imul
inc
je
adc
push
xor
push
cs
xor
pushl
cmp
testb
les
xor
xor
mov
sub
movsl
int
dec
ja
fisttpl
sub
call
andb
push
adc
jns
loopne
aas
jle
dec
or
jb
mov
mov
scas
imul
add
jb
jnp
jmp
pop
lods
push
mov
js
loopne
sub
out
lret
movsl
test
daa
inc
out
ss
sbb
push
xor
hlt
and
or
movsl
cmpsb
sbb
adc
xor
mov
push
mov
hlt
daa
in
movsb
dec
cli
xor
lods
jno
icebp
paddusw
out
adc
clc
testb
pop
xchg
lcall
sub
mov
inc
sahf
jno
ss
insb
mov
cmp
call
or
dec
mov
je
data16
or
repnz
xchg
ljmp
push
pop
jns
stc
sarb
movsl
ret
pop
sahf
jp
xchg
aad
mov
loope
pop
fwait
orl
or
cmp
push
fsubl
mov
add
mov
lods
imul
roll
lret
js
negl
xor
sbb
dec
jno
test
or
pop
enter
mov
imul
call
mov
cmc
test
imul
pop
fwait
imul
push
xor
xchg
lock
adc
imul
sbb
ret
lds
stos
repnz
icebp
enter
in
pop
inc
in
or
mov
sub
mov
in
push
cmpsl
xor
xor
lcall
cmp
jmp
cmp
cmpsl
out
or
aas
fs
into
push
jno
stc
psubb
cltd
cmpsb
xorps
jns
adc
filds
aaa
daa
cli
jns
call
stos
xor
push
adc
inc
mov
xor
adc
jne
and
xor
xor
push
clc
adc
xchg
and
inc
jo
lods
push
stos
outsb
adcb
arpl
sub
test
fstp
cmp
test
cmc
jg
xchg
lods
decl
sbb
ret
rcl
imul
out
and
pop
sbb
dec
inc
iret
pusha
lret
mov
cmp
xlat
fwait
in
es
jno
xchg
and
or
pop
cmp
je
pop
imul
in
jns
outsb
fisttpll
sbb
dec
push
mov
pop
push
xchg
stos
mov
orl
sbb
es
insb
pop
sbb
mov
cmpsb
pop
push
jb
mov
fnsave
xchg
cmp
repz
pop
push
mov
das
mov
xchg
add
or
xchg
stc
fs
fcompl
lret
dec
cmp
mov
dec
fildl
fstpt
addr16
testl
push
lods
inc
sbb
popa
cld
xorb
jo
mov
or
scas
arpl
sub
or
hlt
xchg
xchg
lret
lods
lods
in
call
mov
mov
mov
addl
aam
jmp
cwtl
loope
pushf
mov
cmp
xlat
jg
sub
loop
mov
mov
cmp
dec
pop
test
add
jne
xor
scas
roll
mulb
mov
pop
int3
daa
loopne
iret
mov
adc
jp
and
je
stos
pusha
ss
and
mov
aad
xchg
mov
jmp
sti
xchg
xor
adc
je
je
cmpsb
mov
jae
push
ljmp
jl
lods
mov
or
pop
orl
add
mov
mov
testl
dec
xchg
push
gs
cmp
outsb
pop
pop
enterw
sti
sbb
lret
jbe
push
xchg
mov
mov
sub
sub
ja
push
aad
leave
or
and
cs
aad
ficomps
inc
mov
arpl
int3
ja
mov
push
dec
mov
jne
mov
sub
xchg
sbb
jmp
and
or
cwtl
push
push
pop
adc
sbb
mov
or
out
cmp
jns
shr
hlt
fs
push
ret
dec
push
test
mov
mov
andb
out
inc
and
jno
loop
push
add
jb
xor
inc
es
xchg
cmpb
cmp
mov
cmp
lcall
std
or
mov
inc
out
repz
test
adc
jae
push
adcl
push
xor
sub
je
inc
stc
mov
push
mov
inc
xchg
inc
out
sbb
and
or
mov
aad
stos
int3
leave
mov
sub
sub
dec
jnp
clc
inc
call
xor
mov
mov
or
mov
mov
imul
nop
ss
out
rcrl
mov
sub
push
mov
mov
shlb
test
popf
hlt
mov
in
test
cmovae
fdivl
push
ds
out
pop
pop
xchg
cmp
add
dec
jecxz
inc
sbb
jmp
mov
cmp
cmp
mov
pop
jp
insl
inc
jns
aaa
js
mov
push
push
or
push
sbb
rorb
push
and
int3
rorb
or
xchg
xor
rcll
js
mov
mov
xor
sub
les
out
push
jmp
js
adc
out
stc
loopne
mov
das
xor
xchg
and
xchg
clc
xchg
pushw
sbb
xchg
pop
pop
imul
leave
int3
jecxz
xlat
jle
add
insl
scas
fcoms
sbb
out
pop
cmp
leave
test
movsb
leave
aaa
mov
jae
jb
jbe
dec
enter
mov
aam
push
pop
push
push
popa
lret
out
inc
mov
int3
test
mov
sub
mov
rorb
jle
cmp
aas
adc
dec
sbb
addr16
push
xor
xor
push
notb
mov
repnz
sub
shl
jg
cmpsb
enter
decl
movsb
adc
cmc
mov
mov
mov
push
mov
xor
lods
cmp
push
stos
xor
adc
pop
pop
cwtl
sahf
push
insl
inc
lds
mov
imul
loope
or
jb
insb
icebp
jae
add
loopne
sub
js
les
mov
mov
xchg
cli
mov
mov
push
xchg
repnz
sbb
or
push
in
jns
sbb
rclb
cmpb
bound
cmp
jge
and
push
mov
jl
add
sub
inc
mov
xchg
and
mov
push
sub
sbb
mov
pusha
ss
mov
jno
add
mov
push
and
push
ljmp
add
mov
test
sub
enter
in
stos
jae
inc
add
pop
pop
bound
js
in
cltd
unpcklps
sub
xchg
sbb
adc
mov
dec
cltd
sub
out
fmull
sub
sub
int3
push
jmp
jmp
lods
ss
mov
outsb
dec
mov
fwait
jmp
dec
cmpsl
outsb
xlat
mov
nop
sbb
adc
cmpsb
movsl
cmp
adc
aad
bound
shr
insb
add
adc
push
lcall
jne
mov
clc
insb
in
outsl
jne
cmpsb
lahf
xchg
jmp
ret
shl
lcall
xor
mov
rolb
das
decl
cltd
fistps
test
jmp
and
test
push
sbbb
push
shll
fnstcw
pop
fldt
pop
out
icebp
rcrb
push
jmp
ja
ja
xchg
or
xor
out
xchg
jns
aas
jmp
add
das
add
scas
and
mov
push
ss
mov
cmpsl
ret
out
loopne
mov
fldl
mov
adc
psubusb
ret
dec
inc
imul
mov
add
sub
sub
cli
xchg
imul
mov
jge
pop
mov
lahf
fninit
sub
push
push
sub
dec
scas
xchg
inc
in
push
cmp
jl
adc
pop
daa
mov
xor
cmc
xchg
add
out
cmp
mov
rcrb
test
jecxz
test
dec
lret
sbb
mov
sub
in
insb
xchg
xchg
push
cmpsb
js
mov
and
enter
jmp
xor
mov
xchg
inc
jg
mov
into
mov
mov
xlat
jo
inc
add
cmp
push
mov
loop
cld
xor
scas
push
cmpsb
push
icebp
lret
sbb
mov
cmp
movsl
js
clc
cmpsl
insb
add
pop
arpl
jb
mov
dec
and
and
stos
pop
ss
inc
rcll
mov
addr16
cmp
call
xlat
xchg
sarb
int
mov
pusha
vmovhps
add
pop
scas
jnp
dec
pop
adc
xor
pop
divb
pushf
push
ljmp
lds
xchg
or
push
inc
fdivr
ret
xchg
xchg
fisubs
ss
out
es
mov
sbb
inc
loopne
push
loop
shl
xchg
push
push
mov
arpl
jl
cmp
mov
fwait
in
ror
pop
mov
pop
fmull
lock
push
sarb
imul
push
int
cmp
mov
or
mov
fsts
inc
outsl
ja
add
jne
fs
push
xor
lret
lds
jnp
jl
cltd
pop
jb
push
or
imul
inc
fstpt
out
cmpsl
jno
jge
or
dec
test
sub
push
push
push
mov
inc
scas
mov
pop
mov
add
cld
mov
xor
sub
sub
mov
push
adc
fiaddl
scas
lret
iret
sbb
js
fimull
mov
test
or
aad
add
adc
ss
pop
push
je
lds
jmp
xor
xchg
js
cmp
ss
insb
push
clc
xlat
fbld
fadd
mov
add
test
loopne
into
loop
mov
scas
aaa
and
insl
js
mov
inc
mov
or
jp
cmp
and
sahf
push
ljmp
gs
or
pop
movsb
lcall
insb
scas
jnp
pop
sbb
das
dec
and
enter
jecxz
inc
fisttpl
js
push
mov
lahf
mov
lahf
stc
mov
add
hlt
fiadds
or
adc
test
xchg
aas
ror
into
mov
ljmp
bound
repnz
lds
ljmp
pop
enter
ret
and
jmp
mov
dec
cld
test
shlb
rolb
faddl
mov
fstps
inc
push
xlat
test
jecxz
mov
notl
pop
push
xchg
insl
and
xchg
pop
sti
into
mov
add
add
xor
out
clc
jle
mov
mov
pop
out
mov
sub
fildl
inc
bound
xchg
mov
pop
js
shl
lods
in
push
mov
aam
lock
ss
push
sub
inc
and
dec
fwait
mov
lcall
cmp
add
jns
nop
loopne
pop
or
push
stc
cmp
clc
cmp
xchg
repnz
sbb
jae
push
mov
insl
pop
test
xchg
mov
negb
or
iret
jae
shrb
arpl
push
sub
jo
push
mov
js
xchg
push
in
xchg
aam
xchg
add
ja
jmp
icebp
fdivrl
mov
ret
cwtl
loope
in
add
ljmp
movsl
popa
pop
jbe
aad
mov
lds
fwait
pop
rolb
jmp
push
leave
dec
xlat
out
ljmp
test
int3
sti
enter
adcl
and
cli
insl
aaa
std
inc
testl
mov
ret
test
fildll
xchg
sub
enter
fs
push
dec
lds
lahf
xor
xor
adc
xor
les
cltd
mov
jbe
or
insb
dec
fldenv
ret
stc
cmp
js
or
es
jecxz
out
xchg
pop
bound
sub
push
aas
jae
lods
subl
aad
ret
movsb
mulb
jecxz
pushf
xchg
push
cli
pop
xor
sub
cmp
xor
mov
out
sub
pop
dec
inc
push
xchg
mov
jle
fidivrl
inc
jne
cwtl
jno
jne
pop
fldt
sarb
lcall
in
subb
cwtl
and
or
scas
int3
xchg
mov
fidivrl
add
jno
clc
inc
test
pop
adcb
scas
inc
das
lods
pop
fucom
rorb
cmpl
mov
rcr
push
dec
sbb
out
outsb
lods
clc
aad
dec
lcall
fistps
mov
jae
push
into
fdivrs
mov
dec
push
cmp
in
inc
xchg
lods
jp
xchg
push
addr16
fsubrs
cwtl
jb
pop
in
ret
xchg
push
out
iret
aaa
xor
fstpl
add
bound
lock
add
sbb
jne
cld
and
ljmp
xchg
jno
repnz
arpl
scas
hlt
sub
sbb
retw
adc
sbb
adc
push
aam
pop
addl
pop
aad
test
imul
jmp
andb
pusha
sbb
jne
rol
fnstsw
das
cmpsl
cld
add
sbb
lods
popf
hlt
mov
push
mov
int
mov
xor
das
test
cmp
loope
and
testb
inc
jecxz
ss
xchg
cmpb
jb
rolb
movsb
push
movsl
jbe
test
lods
dec
ja
pop
das
repnz
fisttps
cs
cmp
fldl
je
sbb
rorb
popa
mov
sbb
push
push
fstps
out
fimuls
daa
scas
test
adc
repnz
xor
nop
push
ss
mov
jns
and
dec
and
pop
adc
push
adc
les
and
mov
iret
pusha
movsb
stos
inc
gs
roll
test
iret
xchg
xchg
fcompl
lret
cmpsl
pop
push
lahf
int
jb
xchg
jg
cmpxchg
jl
int
add
xor
mov
lahf
jl
or
repz
call
or
int3
and
sbb
cmp
or
stos
sbb
aaa
mov
inc
fs
adc
xchg
sub
popf
jg
enter
sub
inc
mov
dec
mov
cltd
dec
xlat
cmpsb
into
jl
xlat
mov
aad
js
mov
push
insb
jnp
mov
xchg
sub
negb
pusha
clts
xor
jle
xor
loope
mov
push
scas
hlt
push
jne
pop
xchg
das
mov
lds
mov
lock
popa
add
popa
pop
loope
dec
adcl
fwait
sub
mov
mov
or
ja
mov
nop
lock
sti
dec
and
std
inc
inc
ljmp
xchg
mov
pop
aad
dec
sbb
cmpsb
lcall
repnz
hlt
mov
pop
mov
mov
adc
dec
in
pop
aam
arpl
and
xor
stos
pop
push
mov
mov
pop
pop
cmp
add
cmp
mov
sbb
cmpsb
movsb
push
fmuls
and
fisttps
xchg
enter
in
nop
lret
enter
inc
lret
mov
fs
inc
push
mov
repz
or
int3
pusha
xchg
stos
jo
dec
cmp
or
mov
lods
repz
out
or
inc
mov
cmp
lock
mov
clc
out
dec
jecxz
leave
adc
mov
inc
add
je
fcompl
push
mov
lcall
out
in
sti
dec
incb
pop
fstpl
repz
pop
xor
cld
push
adc
mov
adc
push
int3
gs
add
xor
out
hlt
sti
mov
jp
rolb
pop
jge
testl
mov
iret
pop
rcll
test
inc
xchg
sbb
fmul
push
mov
pop
adcl
xor
ffreep
mov
cli
adc
mov
mov
dec
mov
pop
cmp
pop
pop
or
xchg
cmc
hlt
add
stc
insl
in
sub
push
in
inc
lods
xor
jle
push
out
in
adc
xor
cmp
repnz
out
aaa
push
dec
inc
sub
jp
leave
clc
and
es
sti
mov
incl
daa
in
cltd
xor
ljmp
add
rclb
cmc
fidivl
cs
push
movsb
or
aad
pop
dec
jne
int3
adc
mov
test
mov
aam
push
or
lahf
fcoms
andl
in
aad
popf
addr16
cmc
mov
or
lods
inc
jno
scas
and
clc
lret
test
pop
movsb
xchg
cwtl
je
inc
repnz
filds
in
cmp
jp
fwait
mov
push
imul
mov
push
and
xchg
fisttps
sbb
int
arpl
inc
push
push
jmp
mov
pop
add
arpl
push
adc
imul
std
jge
xor
ret
sbb
xchg
call
dec
cltd
add
dec
roll
push
mov
mov
aam
cmp
test
jle
mov
out
lret
insl
in
in
mov
sbb
loopne
loop
in
out
in
mov
mov
mov
mov
jecxz
testl
je
cli
xor
cmp
daa
cmp
fisubs
lods
mov
cmpsl
pop
mov
mov
dec
inc
sbb
sbb
fwait
cs
push
clc
lahf
xchg
sub
lret
pop
add
ljmp
cmpsb
push
aam
pop
decb
xchg
mov
orb
add
or
mov
and
mov
push
push
add
mov
dec
repz
insb
xchg
jae
shr
add
xchg
loope
jno
xchg
repnz
inc
test
movsb
and
pop
push
cmp
dec
cltd
outsb
scas
in
push
out
shl
lea
repnz
mov
cli
sub
dec
adc
push
mov
and
pop
mov
rcll
xchg
rorb
pop
out
adc
dec
mov
pop
push
out
jmp
inc
loope
mov
in
movsb
rep
cs
xchg
stos
dec
pop
mov
movsb
daa
aad
mov
and
push
jl
pop
loopne
test
les
sub
mov
loope
imul
sbb
mov
scas
sti
xchg
mov
ret
or
mov
xchg
pop
lods
push
mov
cmpsl
mov
outsl
mov
xchg
shr
shlb
mov
dec
call
ret
movswl
in
push
aaa
lret
inc
jp
orb
sub
cli
out
or
mov
addr16
in
fdiv
sahf
out
addr16
out
inc
mov
or
scas
flds
ret
daa
add
push
insb
mov
in
cltd
loope
fadds
jg
mov
sub
cld
push
fsubs
cwtl
push
decb
aaa
test
leave
insb
jle
repz
sub
popa
mov
mov
stos
pop
sahf
jecxz
sbb
shl
subb
push
sbb
fmull
and
mov
divl
loope
jmp
pop
cmp
dec
int3
add
scas
adc
hlt
mov
dec
inc
xor
pop
sub
test
stos
in
popf
and
add
cmp
loop
pop
dec
push
and
hlt
mov
cli
pushf
js
mov
add
fldl
int
aaa
mov
sarb
outsl
xor
pop
jno
lret
int
sbb
rcrl
arpl
sahf
fisttps
pop
orb
in
xchg
inc
test
ror
es
and
sti
movsl
xor
adc
dec
mov
scas
jp
mov
daa
and
ss
jbe
ds
xlat
les
in
mov
ljmp
pop
mov
adc
add
icebp
addr16
into
sub
insl
out
inc
cmp
sub
mov
pop
cmp
rolb
push
cli
pop
shll
fadds
adc
pop
daa
pop
cmp
pop
jae
inc
mov
scas
push
clc
cwtl
incl
subl
pop
push
in
imull
jmp
mov
call
mov
cmp
mov
cli
sub
mov
mov
sub
pop
cmc
js
enter
xor
lret
add
mov
adc
sub
fs
packsswb
push
xor
shl
cwtl
fistpl
cmpb
cmp
xchg
sub
or
lcall
pushf
adc
xchg
cmp
cmp
cs
ss
push
sbb
lahf
pop
imul
fnstsw
repz
mov
cld
inc
je
aas
mov
fnstenv
jge
shlb
es
lret
ret
shl
add
fbld
imul
pop
or
mov
daa
add
aas
in
ja
lods
sub
in
xlat
negb
je
mov
push
mov
hlt
repnz
jg
fmull
xchg
mov
test
jns
lea
lods
daa
jge
test
movsl
adc
sbb
std
mov
nop
sub
cmp
sbb
sbb
out
into
in
jmp
jge
sub
arpl
lods
xor
jmp
push
push
sbb
mov
pop
rcrb
ljmp
xchg
je
mov
jmp
push
jmp
push
xor
dec
cmpsb
mov
mov
mov
inc
mov
xchg
mov
jmp
loop
les
rcr
dec
push
cmc
cmp
fstpt
shrb
fs
adc
push
scas
imul
out
and
add
xor
sbb
iret
dec
mov
and
mov
in
repz
sub
cmova
xchg
jns
loopne
aaa
mov
dec
loope
lcall
pop
jno
mov
call
adc
pop
adc
stc
fdivrl
es
sub
mov
filds
je
lds
fcmovb
daa
mov
shrl
pop
or
pop
imul
shll
inc
movsb
shll
xor
cs
out
mov
lods
call
and
pop
sti
cs
sbb
mov
sub
fs
fs
or
scas
and
into
pop
jns,pn
and
pop
push
push
fistl
push
cmpsb
enter
test
ror
mov
setl
dec
out
xor
xor
xchg
shlb
test
jecxz
lods
mov
add
cwtl
loopne
adcb
sbb
aas
ret
xchg
icebp
ds
adc
mov
or
cmpl
cmc
sbb
int
xor
wbinvd
lds
sub
jmp
popa
push
jnp
lea
add
enter
inc
and
rcll
and
push
loop
mov
movsl
nop
test
mov
pop
hlt
jae
jno
add
and
cmc
sarb
mov
std
out
pop
dec
xchg
xor
push
popa
jecxz
outsb
jp
mov
aaa
rcl
dec
fs
mov
xchg
xchg
jmp
daa
cwtl
or
lods
decb
mov
fcoms
insl
pop
xchg
lock
les
notb
test
adcl
push
outsb
jecxz
or
jo
jbe
pushf
push
and
std
cltd
ljmp
movsb
sbb
lds
cwtl
adc
js,pt
sbb
push
int3
enter
adc
push
inc
xchg
insb
mov
dec
rcll
rorb
clc
aad
xor
adc
jno
mov
add
ja
mov
jbe
dec
pushf
lcall
mov
xchg
xchg
test
leave
or
mov
adc
xor
add
fsubrs
arpl
out
push
fsub
push
out
jbe
lahf
mov
xchg
xor
mov
pop
push
fsts
cmp
sahf
sbb
enter
mov
jle
lds
addr16
lds
repz
pushf
mov
push
dec
divl
push
cwtl
rolb
mov
push
pop
ucomiss
inc
loope
push
push
cmp
cmp
mov
jns
mov
pop
repnz
xchg
mov
int3
lahf
icebp
dec
in
repz
es
fstl
hlt
mov
sbb
mov
push
stc
mov
pop
aas
mov
xchg
sub
imul
je
out
xchg
jge
in
pop
mov
lods
out
add
subl
push
lods
push
jne
and
ja
mov
dec
cmp
push
mov
ds
push
je
sub
mov
sahf
sub
rorl
data16
pop
xor
inc
dec
mov
push
lret
pop
jl
jno
arpl
and
push
pop
aad
mov
or
and
call
pop
xchg
push
gs
xor
ljmp
xchg
arpl
lcall
in
movsb
movsb
or
push
shl
cmp
dec
push
pop
adc
jns
mov
mov
and
add
push
testl
cmp
in
scas
pop
aaa
loop
lods
ds
out
mov
sahf
lahf
jae
sub
lahf
fistl
adc
xchg
test
sub
enter
bndstx
sbb
addr16
add
cmpsl
jecxz
and
sub
addr16
jg
fstpt
lea
in
add
cmpsb
push
push
inc
sub
stos
icebp
add
idivb
jno
mov
mov
clc
cmp
inc
mov
sub
out
push
mov
xchg
popl
shlb
inc
data16
data16
jmp
mov
cld
inc
scas
or
xchg
mov
mov
in
cld
lcall
repz
int3
mov
lods
or
repnz
cmp
jno
cli
cltd
sbb
popf
push
into
mov
addr16
icebp
sub
pop
out
rcr
pop
popa
dec
stos
dec
call
ss
ficompl
dec
xchg
or
fs
idiv
cwtl
cwtl
fbld
xor
xchg
sub
pop
adc
repnz
ret
jo
sbb
mov
xchg
int3
mov
pop
ss
cmpsl
inc
aaa
inc
in
sub
insl
arpl
mov
mov
mov
popf
aam
pop
jl
fisubs
outsl
jge
push
xchg
gs
and
jecxz
lock
mov
pop
std
pop
xchg
daa
mov
sbb
lcall
pop
xchg
iret
xor
cmpsb
inc
repz
fimull
push
int
sbb
cmp
mov
push
adc
jg
mov
jmp
cmc
in
or
push
and
mov
ret
pop
fdivs
popf
aam
inc
out
lahf
test
pushl
inc
jne
pop
pop
orb
xor
lret
out
mov
jbe
dec
cmpsb
icebp
jp
xor
jb
in
sbb
push
es
loop
lea
inc
fstpl
adc
cmpsl
sbb
cmp
xor
pop
std
jb
adc
mov
sahf
outsl
xchg
dec
jmp
pmulhw
xlat
mov
mov
xorl
push
and
add
sub
out
incl
jns
scas
cmp
fxch
cmpsb
lret
hlt
jl
cmpsb
or
sahf
jne
sbb
jecxz
sbb
jle
lock
test
das
mov
add
pop
in
sub
loopne
hlt
xor
add
jbe
mov
cmpsl
cmc
cmp
pop
shrl
rcrl
lea
scas
pop
rcl
ja
dec
les
adc
ret
enter
sub
in
scas
mov
inc
inc
insb
test
shlb
lret
cmp
mov
fwait
repz
pop
mov
sub
push
pop
mov
out
add
fcmovnb
lret
or
cmp
icebp
mov
xchg
xchg
xchg
xorl
and
push
sub
cmpsl
lock
cmp
mov
jnp
xchg
cmp
push
push
or
mov
lds
jle
push
ret
icebp
jl
pop
xor
mov
sbb
and
jo
repnz
sub
mov
inc
mov
mov
ljmp
or
inc
les
add
sub
inc
xor
dec
and
pop
xor
popf
dec
dec
push
lds
js
mulb
aam
leave
cmp
sub
xor
xor
inc
sub
xchg
in
imulb
out
divl
jg
lock
inc
mov
xor
in
pusha
inc
lock
imul
dec
dec
xor
inc
or
or
mov
jp
aas
addr16
out
inc
jno
movsb
les
jb
mov
xchg
xor
pop
push
add
dec
loopne
fiadds
movl
xchg
aaa
fldcw
popa
in
sti
insl
sub
and
mov
adcb
mov
jecxz
bound
xchg
ljmp
outsb
xor
stos
lods
repz
sbb
mov
mov
or
rclb
sbb
push
into
inc
and
push
xor
mov
dec
and
inc
push
xchg
or
push
jg
jb
or
pop
je
popl
movsl
aaa
fildl
mov
imul
icebp
outsl
popf
jno
imul
sbb
jmp
call
push
cmp
aam
ret
leave
push
adc
xor
push
cs
testl
repnz
and
push
xchg
cmpsl
movsb
cmp
and
mov
cmp
inc
movsl
xchg
inc
out
int3
inc
fcoms
push
pop
or
ss
pop
mov
xor
xor
xor
mov
fldcw
mov
dec
or
sub
jno
jb
push
aas
fldt
jae
push
add
mov
dec
push
mov
add
jno
lcall
mov
in
and
dec
mov
cmp
pop
fdivr
fcom
push
jmp
mov
fcomip
xor
movsl
subb
jne
inc
mov
push
imulb
mov
fisubs
xor
mov
push
xchg
scas
pop
scas
mov
in
mov
daa
dec
mov
mov
xchg
jo
and
sub
pushf
fwait
pop
jmp
jp
pop
or
inc
fistl
mov
jbe
xor
in
lods
xchg
scas
imul
mov
and
cmc
lcall
sub
out
das
adc
xor
push
stos
cmp
and
in
sbb
stc
shll
push
std
mov
fildl
xchg
adc
inc
dec
cmpsl
rcrl
test
rcl
push
sbbb
lea
xchg
scas
test
push
sbb
push
lahf
shlb
adc
mov
js
das
ja
inc
scas
jae
jae
in
pop
pop
test
jno
adc
mov
add
pop
mov
stos
push
mov
sub
loop
pop
loop
mov
cwtl
nop
scas
add
mov
aas
jb
cli
leave
shll
and
test
call
pop
pop
test
fdivs
mov
testb
cwtl
mov
pop
out
jo
insb
repnz
aas
jnp
sub
into
xchg
stos
sbb
xlat
dec
adc
pop
and
aad
cmp
and
shl
xor
rorl
or
mulb
loop
outsl
scas
rcrl
rclb
add
ss
add
cmp
in
mov
sbb
cld
mov
cmp
mov
mov
xchg
mov
ficoml
lret
xlat
xor
rcrl
and
mov
adc
adc
mov
dec
and
sarl
jns,pt
test
leave
inc
push
adc
outsl
clc
sub
das
pmulhuw
jl
out
outsl
mov
cs
sbb
pop
lahf
fistps
dec
sarb
ss
arpl
add
in
jmp
es
xchg
std
jbe
jnp
scas
mov
mov
mov
fistpll
sbb
mov
cs
sbb
jmp
loope
xchg
mov
pop
sarb
mov
or
dec
bound
orl
mov
mov
femms
add
addr16
addps
rclb
pop
push
mov
mov
ds
jmp
xor
insb
add
or
fld
push
shlb
mov
add
les
test
arpl
arpl
inc
sub
sbb
cmpsb
mov
test
fucomi
lret
mov
or
movsl
incl
xor
loope
es
mov
out
mov
lahf
push
dec
test
into
mov
movsl
fs
mov
enterw
outsb
or
les
call
int3
lahf
xchg
xor
xor
cmp
rsqrtps
jg
jne
adc
pop
ss
mov
cld
in
movsb
add
test
mov
sbb
cmp
adc
mov
inc
xor
movsl
add
ljmp
pop
test
popf
mov
mov
sub
fdivp
lret
add
je
add
mov
les
sub
jno
xchg
std
jmp
mov
inc
cld
xchg
sub
ds
push
hlt
lahf
aad
pop
mov
adc
xor
pop
inc
adc
and
inc
loope
sub
mov
mov
or
int3
mov
fistl
mov
mov
xor
mov
sbb
push
out
pop
insl
push
jmp
jmp
and
mov
and
push
flds
pop
mov
or
out
sbb
stos
sbb
popf
or
scas
lea
cmp
xadd
inc
mov
aas
rolb
push
icebp
mov
fs
imul
in
inc
mov
and
sub
ljmp
cmp
sbb
mov
sub
push
movsb
notb
xchg
ror
decb
sbb
xor
mov
sub
inc
icebp
bswap
stc
cmp
and
clc
jg
jecxz
xor
and
or
adcl
call
and
mov
pop
mov
daa
or
in
cmp
decl
add
push
test
mov
lret
cmpsl
pop
pop
push
add
test
and
in
lods
arpl
or
aam
and
shl
insb
stos
adc
push
loop
xchg
in
imul
dec
pop
stc
dec
dec
outsb
out
and
cli
call
add
add
sub
adc
in
jg
and
jp
dec
jae
xchg
xor
loop
jmp
push
cltd
inc
pop
inc
add
jne
jb
stc
jl
or
repnz
add
js
ljmp
push
insb
out
js
xor
sbb
or
je
repz
cwtl
cmpsl
jecxz
popf
lods
testl
pop
gs
pop
sti
mov
or
call
imul
into
cmpsb
mov
adc
out
sbb
notb
rcll
outsb
jl
pop
adc
int
ja
inc
sub
jae
test
push
add
repnz
out
jl
in
fmull
insw
call
mov
jne
jns
leave
ror
mov
scas
dec
sbb
mov
mov
subl
jb
lret
repz
pop
sbb
pop
add
stos
daa
enter
push
in
fstpt
mov
and
xchg
adc
out
cld
mov
sub
fdivs
rcr
enter
push
sub
leave
ret
data16
and
out
cs
xor
and
cmp
lcall
icebp
aaa
fs
ret
in
mull
push
sti
adc
lods
sub
push
lods
fcoml
adc
jo
dec
xchg
sub
inc
and
mov
sub
mov
in
and
xor
negl
mov
and
add
out
inc
lock
daa
jns
pop
or
aam
and
lods
mov
jmp
sahf
mov
pop
fwait
std
adc
push
inc
aad
mov
jae
jg
fs
fisttps
push
lods
push
or
stc
mov
stc
push
dec
push
les
int3
out
mov
push
faddl
fwait
mov
sbb
arpl
mov
mov
push
inc
and
push
jp
aam
leave
mov
stc
sub
inc
leave
sbb
mov
outsb
cli
daa
mov
hlt
mov
in
mov
lds
inc
xor
adc
xor
xchg
push
int3
jmp
int
adc
jns
sbb
mov
out
xchg
fmulp
lods
shlb
or
or
mov
mov
mov
arpl
sub
sti
mov
pusha
in
daa
ss
jge
jmp
mov
mov
icebp
sbb
xchg
je
test
mov
mov
mov
push
in
sbb
add
ja
pop
or
add
cmp
jb
bound
fsave
movsb
cmc
and
mov
dec
xor
stos
add
jbe
xor
adc
mov
jg
popl
pop
mov
fwait
leave
mov
push
mov
bnd
dec
pop
cmpsl
adc
mov
lds
cmpsb
cmpsl
jne
rcrb
cmpsb
mov
stos
sbb
and
lret
insl
mov
pop
dec
stos
lahf
push
int
sub
aam
mulb
pop
lock
xchg
or
push
sbb
lcall
test
xchg
lcall
xor
push
test
jnp
pop
lods
add
pop
push
lret
dec
test
inc
sub
xor
cld
xor
imull
fnstenv
dec
pusha
daa
cmpsl
into
fwait
mov
jg
enter
aas
icebp
mov
mov
add
cmp
mov
cmp
adc
enter
les
test
cmpsl
cli
out
push
je
dec
dec
insb
mov
popf
stos
test
add
push
and
xchg
test
aad
cmpsb
addr16
dec
stc
add
push
popf
push
add
mov
call
mov
loope
mov
cld
int
call
sbb
mov
rorl
jae
fsubs
out
push
and
jle
pop
inc
xchg
jae
ljmp
movl
cmp
mov
or
xchg
push
fildl
or
lret
into
out
mov
push
enter
add
xchg
xchg
movsb
rclb
jae
sub
cmpsb
xlat
cmp
ja
xchg
in
inc
cmc
lods
sbb
aam
nop
scas
rol
lcall
sub
inc
insl
sub
fldl
inc
xchg
pop
rorl
pop
xchg
faddp
jae
mov
mov
xorw
cmpsb
jge
jecxz
stos
jle
imul
leave
shrb
xor
mov
mov
pop
mov
mov
ds
push
repnz
repnz
stos
xchg
in
rcr
movsl
inc
rdpmc
jae
mov
xor
sarb
iret
mov
jle
push
mov
in
and
pop
pop
xor
cld
xor
mov
fcmovbe
outsb
lock
dec
mov
cmp
repz
sti
jo
adc
mov
pop
aaa
enter
inc
pop
sahf
mov
call
mov
imul
dec
xorl
dec
popf
xchg
ds
nop
xor
mov
cmp
xor
bound
sub
call
xlat
xchg
jbe
jl
pop
cld
jnp
inc
or
outsb
jne
cmc
jns
inc
xchg
mov
nop
push
pop
sbb
imulb
js
jns
push
push
xchg
jns
mov
or
inc
push
test
aaa
cmp
lahf
mov
adc
push
push
mov
aad
and
add
push
je
outsb
shrb
pusha
push
mov
inc
test
add
into
push
sub
cmpsb
pop
jle
cmp
lret
mov
jecxz
adc
push
mov
xchg
xchg
inc
mov
dec
iret
jo
jae
rcrl
loope
sub
mov
jnp
jbe
scas
in
insb
add
mov
enter
iret
mov
pop
jo
mov
cmp
fildll
lock
mov
popf
or
in
push
into
xchg
or
ss
jbe
mov
push
outsb
inc
imul
inc
rorb
xorb
fidivl
lods
sti
int
ja
xchg
adc
loopne
cld
dec
aam
std
xlat
jbe
decb
add
outsb
inc
push
inc
and
push
cmp
gs
loope
jo
mov
dec
imul
xchg
out
out
pop
dec
imul
test
push
int
stos
rcr
divb
cmp
int3
aam
daa
xchg
jns
pop
int3
xchg
div
movb
adc
and
adc
push
sbb
fst
fidivrl
or
int3
jne
jle
nop
out
jmp
sbb
mov
sub
js
fs
fisubl
test
repnz
mov
sub
cmp
fwait
jp
adc
mov
hlt
sub
int
jmp
cmpb
cld
cltd
adc
pop
dec
stos
rolw
cs
or
cwtl
adc
push
xor
dec
call
cs
push
outsb
popf
cmp
addr16
imul
sbb
mov
rcll
sbb
mov
mov
inc
aad
mov
mov
loopne
add
sbb
roll
xor
push
mov
test
cmp
mov
add
idivb
cmc
mov
shlb
into
mov
inc
or
cli
cmp
mov
mov
add
call
mov
dec
pop
xchg
push
cmpb
push
lea
movsb
sti
jae
dec
loope
jle
inc
lds
lock
stc
cmpsl
pop
cmp
xor
cmp
ret
push
in
ror
add
jmp
test
mov
pop
push
xchg
cmc
cli
or
jmp
adc
xchg
sub
jle
iret
and
add
andl
sbb
leave
repz
xlat
mov
adc
mov
fisttpl
xchg
test
insl
leave
cmp
aad
push
jmp
inc
lret
inc
push
inc
jecxz
add
push
inc
hlt
std
mov
jb
pop
mov
arpl
cmp
adc
sbb
sub
adc
push
or
test
cmp
ljmp
add
cmp
mov
addr16
mov
inc
sub
mov
orb
inc
sbb
mov
and
mov
add
push
imul
cld
add
lahf
pop
and
inc
fstl
cwtl
mov
or
mov
xor
leave
push
fldt
dec
mov
dec
hlt
and
and
into
fisttpl
mov
pushf
cld
sub
mov
xor
push
imul
sub
imul
push
jecxz
sahf
sub
fyl2x
cmp
and
mov
jns
repnz
out
or
jecxz
push
mov
inc
aaa
repz
fbstp
mov
jmp
loop
test
fsubrl
or
lret
imul
inc
jno
pop
jecxz
mov
test
mov
add
pusha
mov
daa
movl
or
mov
push
in
stc
cmp
aam
push
mov
pop
adc
clc
jo
mov
je
jno
js
adc
xlat
dec
mov
into
push
outsb
in
out
js
dec
inc
sub
mov
lret
out
call
rcrb
in
adc
sbb
jne
mov
pop
bound
addl
fsubl
mov
xchg
xchg
sbb
xchg
test
movb
pop
aaa
adc
and
mov
push
movsl
scas
cmp
adc
pop
push
test
scas
xor
inc
inc
shll
sub
inc
sbb
fnstenv
push
aaa
xor
and
cwtl
punpckhwd
adc
sbb
sub
lods
lret
mov
sbb
jecxz
mov
les
jge
pusha
lahf
mov
jno
es
cmp
mov
and
xchg
sbb
jl
mov
aam
pop
rorl
call
sti
mov
je
in
popa
fldt
push
xchg
daa
aas
push
in
test
push
int
nop
jb
mov
mov
jg
mull
je
outsl
frstor
sub
push
clc
jo
cmpsb
repz
push
jno
dec
jp
repz
loopne
dec
add
addb
dec
out
xor
ficoms
mov
xlat
jne
js
sub
cmp
pop
iret
mov
ret
mov
and
push
inc
aam
or
xchg
je
std
pusha
mov
mov
mov
clc
les
add
mov
cmp
push
mov
mov
xchg
loope
sub
lahf
push
in
repz
xchg
enter
pop
sbb
ds
push
pop
jns
inc
cmpl
or
mov
iret
lea
cmp
xchg
jae
out
fildl
mov
test
sbbl
push
outsl
loopne
cmp
sub
mov
test
pop
mov
mov
mov
inc
pop
jns
push
jo
xorb
jns
das
and
add
outsb
xchg
loope
dec
xchg
xchg
jnp
into
pop
dec
mov
ret
or
jno
cmc
mov
addr16
jns
rcrb
sub
jecxz
lods
aam
push
or
in
inc
scas
jp
and
in
out
mov
inc
movsb
pop
repz
xchg
mov
or
pop
sbb
es
ljmp
mov
sbb
sub
adc
cmp
mov
gs
add
icebp
mov
jns
jge
gs
add
jno
and
jne
and
pop
testb
test
add
imul
outsl
xor
xchg
mov
das
int
fcmovnu
mov
enter
push
inc
pop
leave
loope
xchg
fsubs
in
aam
imul
loop
adc
add
push
leave
subl
lcall
test
sub
aaa
xlat
int3
xlat
sbbl
into
sti
xor
imul
pop
sub
xchg
sbb
pop
pop
dec
push
jnp
mov
iret
es
imul
add
scas
outsl
test
js
cmp
xor
stos
pop
aas
mov
sahf
xor
sbb
cmp
ja
aaa
mov
jg
push
xlat
pop
mov
loopne
xor
sbb
mov
sub
mov
shr
inc
or
ret
lods
call
mov
cmovp
mov
loope
jbe
jecxz
bound
bound
mov
out
push
xor
sub
repz
out
ret
ljmp
mov
inc
data16
inc
cmpsl
outsl
sbb
xchg
jge
out
pop
inc
mov
sub
in
cmp
xor
mov
pop
xchg
movsl
xor
aam
sbbb
add
and
push
fidivrl
divb
and
subl
mov
mov
int3
mov
push
jae
sub
rorl
cmp
in
mov
sbb
imul
mov
int3
pop
arpl
sub
push
sahf
jo
xchg
and
gs
sarb
out
imul
adc
fucomip
add
jecxz
cmp
and
pop
xchg
daa
inc
xor
pop
mov
popa
adc
push
loope
mov
adc
mov
leave
xchg
cmp
jns
mov
shl
flds
adc
inc
ficomps
fcompl
dec
xchg
adc
pop
dec
stos
add
repz
adc
int
push
out
popa
mov
insl
loopne
lock
inc
jbe
fmulp
mov
adc
js
pop
add
mov
jmp
setl
adc
cs
inc
pop
or
jns
cli
adc
pop
pop
cs
or
xor
out
sbb
fdivl
call
sti
sbb
fidivrs
ljmp
xor
scas
incb
test
sbb
push
and
or
test
mov
mov
add
dec
aam
fimull
add
xor
inc
adc
aad
add
push
jb
add
jbe
cs
cmp
fnsave
andl
jge
jmp
in
xchg
add
inc
mov
push
fsubrl
dec
aas
dec
and
and
sbb
pop
imul
lret
popa
jbe
push
lret
stos
es
or
cmpsl
push
pop
push
ss
push
mov
sub
js
out
sub
cmp
imulb
push
shlb
popf
jae
aam
aad
enter
ljmp
xorl
cmp
mov
testl
mov
loope
ret
pop
cli
sbb
cltd
jne
out
cld
mov
repz
and
xor
and
dec
dec
sbb
adc
lahf
shll
pop
ret
adc
ss
stc
and
cmp
xchg
xchg
adc
div
test
and
mov
js
mov
test
push
cmpsl
in
xlat
outsl
not
leave
mov
push
loopne
das
adc
push
and
sahf
pushf
outsl
push
insl
test
dec
cmp
ja
jge
pop
inc
hlt
out
out
adc
in
pop
lret
inc
loop
pop
add
mov
imul
cmp
in
sbb
xor
add
xchg
into
jle
adc
es
sbb
mov
fwait
pop
add
or
nop
in
push
mov
sbb
xorb
cmpsb
popa
mov
popa
in
js
sub
test
rcl
lock
jbe
sahf
sub
cmp
jb
cmp
mov
dec
sbb
xchg
dec
mov
insb
addl
subb
fwait
xor
mov
cmp
loope
adc
loope
lock
mov
sub
mov
je
and
dec
repz
jl
push
mov
in
and
pop
mov
mov
popf
fdivp
xor
inc
push
repnz
sbb
pop
sub
cmpsl
inc
jg
enter
sbb
jno
mov
fidivrl
movsl
adcl
adc
push
mov
ret
dec
cld
mov
lods
lret
mov
inc
pop
insb
cld
sbb
jg
cmp
jmp
sbb
sbb
or
cltd
lea
ret
out
jno
repz
icebp
mov
cmpsl
stos
and
dec
cli
ss
sahf
enter
dec
adc
in
sarl
adc
push
or
mov
or
inc
mov
aaa
and
dec
sbbl
jae
gs
or
addr16
ljmp
jns
out
es
inc
xor
push
int3
jnp
mov
mov
divl
ljmp
fsubl
leave
pop
xchg
adc
cld
mull
sub
ja
mov
dec
stc
mov
iret
into
test
jbe
mov
imul
stos
jo
icebp
fistpl
roll
cmp
loop
ret
jecxz
jp
cltd
sub
scas
dec
xor
jp
frstpm(287
mov
out
stos
pop
dec
sbb
mov
lcall
mov
add
pop
bound
out
mov
addb
out
add
adc
cmp
iret
ret
sbbb
rcr
sub
xchg
in
push
xchg
sti
cli
in
pop
adc
pop
mov
pop
pop
dec
mov
mov
pop
fcmovnu
lods
and
mov
mov
loop
fisubrl
sub
stos
test
sub
jp
jne
push
xchg
out
push
popf
xor
into
mov
mov
cmc
lret
lcall
mov
mov
adc
icebp
les
aam
outsb
cmp
mov
mov
adc
push
mov
fsubrl
dec
mov
fnstcw
pushf
mov
pop
shrd
andl
stc
or
push
scas
insl
add
cmp
data16
mov
sbb
mov
leave
aad
cwtl
jns
bound
jbe
pop
inc
insb
sbb
mov
sbb
xchg
pop
stos
out
xor
push
dec
rclb
xor
call
mov
outsl
jb
into
repz
jmp
or
hlt
pop
jmp
nop
mov
pushf
loopne
adc
xchg
adc
xor
roll
sub
dec
ret
clc
insb
out
mov
xchg
sub
inc
mov
sub
mov
aam
dec
lret
sub
subb
imul
dec
inc
pop
adc
mov
and
dec
xchg
lods
outsl
or
push
stos
lds
push
adc
add
pop
cmp
cmpb
inc
add
mov
jae
rcll
push
mov
push
cmp
ret
xchg
popf
out
sbb
push
int3
jbe
push
or
xchg
lods
repnz
cmpb
fwait
push
lahf
add
call
popf
arpl
iret
cmp
gs
jl
in
in
sub
jo
in
fldcw
mov
js
mov
outsl
jns
add
mov
mulb
mov
shll
pop
lods
pop
mov
daa
dec
fstpt
inc
fwait
push
xchg
lods
rolb
or
mov
fldt
lods
lods
pop
dec
inc
xchg
mov
aam
loope
subl
out
xchg
and
inc
push
add
mov
or
or
cli
in
in
mov
inc
outsl
pushf
xchg
sub
and
clc
loop
lods
les
addb
inc
les
sbbl
add
mov
push
stos
cld
std
mov
shll
les
outsl
cli
pop
imul
jbe
aaa
and
in
inc
pusha
add
jp
mov
lds
pop
movsl
jl
or
pusha
test
xchg
mov
ss
imul
jb
sub
lret
mov
outsb
jae
lahf
pop
jmp
cwtl
lret
add
xor
jae
jb
inc
xor
cmovb
xor
and
xor
cld
test
loope
pextrw
sub
call
aas
pop
mov
push
xor
jb
and
loop
lcall
orb
add
popa
mov
leave
std
test
lds
js
enter
pop
adc
jp
pop
xchg
jbe
addr16
mov
in
int
pop
ret
jp
int3
fldl
clc
ret
mov
clc
push
sbb
and
and
loope
clc
data16
test
mov
cmp
scas
pop
mull
xchg
jb
jns
mov
test
imul
in
cwtl
call
mov
push
aas
add
sahf
push
div
hlt
push
ja
cmp
xchg
add
shlb
xor
gs
xor
sub
movsl
or
cmp
sub
fsubrp
dec
pusha
mov
or
sbb
lret
xor
mov
int3
imul
push
mov
xchg
in
cs
lahf
cmc
adc
mov
loope
xchg
pop
sub
mov
mov
push
daa
neg
fsubl
roll
sbb
arpl
lock
test
fwait
pusha
and
add
mov
dec
sub
or
incl
adc
xor
dec
int3
jmp
mov
popf
in
ljmp
mov
mov
adcl
repz
es
sub
fndisi(8087
inc
repnz
ljmp
in
cmp
inc
sahf
ja
inc
sahf
mov
mov
pop
dec
ljmp
inc
pop
xchg
adc
mov
int3
ret
mov
mov
je
push
inc
aad
adcl
xchg
out
inc
dec
mov
iret
xor
fisubrs
aaa
jp
popa
jle
lea
push
xor
dec
mov
aad
fwait
mov
xchg
mov
adc
cmp
inc
push
pop
jbe
fsubrs
cmp
jl
mov
test
and
insb
pop
outsl
into
push
pop
enter
dec
add
xchg
adc
jnp
aas
cli
mov
xor
pop
call
sbbl
cli
pop
icebp
fisttps
addb
lret
data16
pop
shl
xchg
dec
je
pop
ljmp
and
xchg
cwtl
addr16
loopne
cmpsl
iret
dec
aam
cmpsl
das
and
pop
sbb
and
mov
cmpb
andb
insl
int3
xor
mov
add
les
or
imul
das
push
test
leave
out
je
jge
sub
or
adc
inc
push
out
inc
jmp
jmp
or
aam
adc
and
addr16
jmp
iret
adc
xchg
xchg
repz
hlt
out
jecxz
lds
lock
lods
pusha
lods
jp
xchg
test
lcall
xchg
pusha
mov
mov
jecxz
nop
icebp
pop
out
push
dec
mov
movsb
rcl
fdivrs
cwtl
jecxz
repz
jmp
lods
mov
fstpl
adc
push
call
rep
addl
test
mov
mov
push
mov
mov
sbb
inc
dec
xorps
push
fwait
cmpsb
int
pop
jmp
ret
and
cmp
cmp
mov
test
mov
mov
rcll
fs
and
pusha
ret
dec
nop
aad
mov
mov
jb
fistpll
fbstp
std
insb
and
fwait
aam
mov
mov
push
xchg
hlt
mov
in
pop
lods
nop
mov
loop
out
in
shrb
xchg
popl
mov
mov
popf
xchg
add
jnp
pop
fwait
mov
push
hlt
ret
stc
fcmovne
inc
iret
mov
mov
push
and
pop
fs
sbb
cmc
and
xchg
cltd
xchg
jle
imulb
enter
xor
jne
sub
pop
mov
insl
sub
sbb
sub
xchg
lea
sarb
cmp
or
mov
adc
pop
mov
xchg
sbb
fdivr
js
jo
mov
movsl
aam
popf
mov
push
xor
mov
push
dec
adcl
int3
sub
cmpsb
push
sub
rorb
jno
add
dec
imul
push
fistps
ror
pop
jae
fsubrs
stos
cmp
jno
jmp
daa
sbb
lds
aas
cmp
pushf
dec
jne
cmp
mov
push
cmp
aas
ds
and
into
inc
in
iret
call
mov
fmul
push
pop
stos
movsb
jo
mov
in
fisubrs
adc
jo
mov
mov
andl
jmp
inc
push
push
icebp
adc
sbb
mov
neg
insb
fldt
mov
mov
fcomp
xchg
and
aad
inc
jp
push
test
push
mov
jns
out
inc
add
mov
jl
dec
mov
daa
lods
mov
xchg
js
or
mov
adcb
pop
jge
mov
add
adc
outsl
mov
mov
cmc
je
xor
mov
inc
sbb
push
push
push
jae
movb
in
add
jecxz
leave
lds
cli
xchg
cmp
mov
and
xchg
lods
mov
ret
or
cmp
movsb
mov
push
mov
xchg
xchg
in
imul
scas
sar
lahf
pop
jle
test
push
shrl
data16
lock
mov
pop
fcoms
or
xor
inc
sub
stos
mov
mov
dec
dec
imul
mov
cmp
dec
xchg
jl
inc
pop
xchg
mov
cld
pop
pop
push
xchg
add
int
in
jg
fdivrs
out
rolb
pop
std
gs
imul
mov
xchg
ret
push
mov
stos
aas
sbb
sub
cmp
loop
lods
leave
dec
push
lret
xchg
pop
lods
sbb
pop
sbb
jne
imul
inc
sti
add
xor
fwait
hlt
stos
call
andb
int3
mov
add
mov
dec
mov
xchg
aas
sbb
mov
pop
out
and
or
insl
out
fisubl
push
or
push
add
cmp
pushf
bound
lods
xor
loop,pn
and
push
push
push
push
mov
xchg
mov
mov
push
int3
or
xlat
pop
inc
mov
sub
dec
jmp
add
add
test
xor
scas
in
cmpsl
enter
ret
lods
hlt
lret
lock
jno
lods
arpl
jmp
fnsave
sbb
in
leave
outsb
mov
pushl
ds
ret
sub
jecxz
stos
mov
pop
scas
stc
js
pop
dec
lods
dec
pop
push
adc
sub
inc
mov
addr16
imul
pop
enter
ljmp
xchg
pop
xor
push
dec
fnstsw
repnz
mov
pushf
ss
lahf
mov
sbb
dec
adc
sub
jg
test
jb
sets
aas
popf
movsb
mov
test
pop
and
lods
std
in
fiaddl
mov
add
jae
stc
mov
popl
repnz
fmuls
int3
mov
ret
cmp
fidivrl
dec
imul
sub
sub
xor
out
cmp
sub
fcmovnbe
jo
mov
loope
repnz
popa
cmpsl
xor
popa
aad
mov
and
jne
adc
xchg
pop
daa
jns
xchg
les
inc
push
or
into
bound
mov
or
outsl
rclb
xor
jno
pop
lods
lods
into
bound
xor
lahf
das
xchg
and
or
sub
es
mov
or
pushf
out
cmp
xchg
cmp
adc
ret
lods
dec
sbb
jp
mov
std
imul
mov
inc
xchg
fisubrl
and
dec
sbb
loopne
cwtl
inc
arpl
push
enter
stos
mov
dec
xchg
mov
pop
mov
mov
fisubl
loop
mov
pop
adc
xor
adc
pop
xor
pop
icebp
repnz
inc
repz
mov
mov
outsl
push
push
add
cmc
int3
xchg
xchg
xchg
mov
jle
push
insl
cmovno
bound
mov
fistps
repz
add
cmp
pop
xor
ret
mov
pop
or
out
cmp
mov
adc
in
pop
test
es
pop
pushf
lret
inc
and
lock
inc
aam
sbb
xchg
or
jo
iret
test
push
jbe
icebp
outsb
add
jge
mov
lds
scas
shl
je
dec
push
loop
pushf
stc
stos
mov
mov
lods
and
scas
mov
adc
ss
or
scas
pop
xor
int3
and
xor
dec
arpl
pop
ss
fbstp
xchg
ljmp
iret
xchg
mov
imul
mov
and
call
or
mov
push
fistpl
outsl
push
pop
lds
and
andb
test
pop
js
stc
mov
mov
test
out
out
pop
and
sbb
inc
stos
sahf
sbb
or
into
scas
adc
sbb
xor
or
in
adc
or
movsl
cli
inc
pop
cmpl
mov
adc
xor
jno
cmp
sub
jne
push
push
cmp
leave
mov
decb
mov
inc
std
jp
jge
inc
pushf
into
and
jle
sti
sub
add
cmovnp
and
jb
cltd
sahf
test
cmp
inc
fwait
pop
loopne
fsub
jecxz
add
pop
cmpsl
or
or
and
pop
ret
lea
fs
out
push
outsb
dec
call
cmp
sbb
or
or
or
and
ja
mov
add
sbbl
insl
sbb
sub
or
push
dec
xor
xchg
sub
push
sahf
xchg
popa
cmp
mov
dec
incb
clc
adc
lahf
imul
push
xlat
test
test
sub
mov
aas
das
inc
mov
cs
add
jb
mull
dec
xor
lock
mov
xchg
fistpll
xchg
aaa
int3
repnz
cmp
das
sbb
xchg
sub
push
cmpsb
sbb
js
movsb
je
in
pop
xor
mov
imul
aaa
jns
sbb
mov
or
cs
inc
notl
test
ljmp
sbb
sbb
fildll
push
cli
mov
clc
lret
rorb
mov
andb
pop
aas
ss
dec
pop
cmc
jnp
push
xor
pop
mov
jno
js
mov
sbb
sbb
movsb
mov
sub
or
adc
cmp
xlat
pop
test
cmpsb
mov
stos
fwait
je
inc
jne
popa
xor
lods
repz
mov
cmp
data16
mov
jmp
and
xchg
mov
into
mov
mov
arpl
xor
loop
in
or
adc
les
mov
pushf
imul
in
mov
nop
iret
nop
pop
or
xchg
fcompl
stc
ficoms
pop
or
or
jae
xchg
cmp
and
call
fwait
sahf
mov
pop
loope
dec
push
hlt
stos
xor
sub
in
mov
cmp
addl
mov
mov
dec
cld
insl
pushf
and
int3
in
ret
repnz
mov
gs
imul
and
mov
xchg
aas
jns
push
jno
std
xor
and
or
push
cwtl
out
cmc
mov
sbb
mov
ror
mov
stos
icebp
lcall
imul
fsts
js
stos
push
lea
js
pop
inc
ret
scas
in
cmp
or
adcl
add
xchg
pop
icebp
xchg
test
arpl
cmp
fpatan
dec
mov
mov
xchg
outsb
daa
sbb
lods
pop
push
mov
fsubrp
pushf
shll
cwtl
sarl
cmp
pop
iret
mov
addr16
in
add
les
xchg
push
fs
push
outsb
cmp
adc
pop
sbb
icebp
mov
stc
repnz
in
repz
cmp
mov
int
or
pop
mov
inc
insl
loope
es
cmc
pushf
or
cmpsb
pop
fnstsw
mov
push
repnz
lret
sti
lret
sbb
pop
sub
jb
les
mov
push
in
add
outsl
fisubs
mov
sarl
push
pusha
or
add
cmp
dec
lds
adc
iret
lods
push
shll
shll
xchg
mov
hlt
sub
jnp
inc
xchg
scas
mov
xorl
inc
ficoml
jo
mov
push
push
add
lahf
loope
pop
pop
fcomps
scas
sub
adc
movsl
popa
mov
psadbw
in
mov
stos
jno
test
jg
sbb
aad
sub
fs
dec
dec
cmp
mov
vcmpsd
scas
jp
mov
aaa
dec
loop
jp
adc
outsl
dec
and
xor
leave
frstor
imul
test
icebp
nop
movsb
mov
dec
popa
scas
mov
lcall
cmp
pop
pop
icebp
mov
jecxz
dec
in
sub
xor
mov
pop
jnp
out
dec
mov
mov
adc
ficoml
adc
lahf
repnz
jbe
and
movsb
mov
aam
adc
pusha
lods
ret
js
xchg
mov
inc
xchg
ljmp
xchg
xor
not
test
test
out
leave
movsl
out
mov
lods
sbb
decb
and
rorb
mov
xorb
jbe
cmp
sbb
xlat
daa
std
cmp
leave
cmpsb
out
dec
adc
jae
mov
dec
repz
outsb
xor
push
pusha
xlat
aad
bound
inc
xchg
fdivrl
xchg
pop
mov
sbb
cmp
lret
add
inc
lret
xchg
icebp
daa
in
cmp
fisttpl
dec
mov
or
in
andnps
cwtl
fs
cltd
pop
mov
sbbl
jp
ret
xor
cmp
in
icebp
scas
subl
in
and
cmpsl
mov
loopne
scas
loop
addr16
push
mov
push
js
imul
outsl
dec
adc
push
adc
add
sbb
jae
jg
stos
xchg
pop
or
xor
sahf
xor
xor
mov
or
lds
jbe
sbb
mov
and
mov
sar
or
jae
mov
scas
ret
push
adc
aam
in
jmp
rorl
mov
leave
jge
jbe
pop
es
frstor
loopne
and
add
test
lock
imul
mov
imul
dec
test
leave
test
adc
xor
movsb
inc
bound
stos
in
call
mov
xchg
or
mov
xchg
lahf
mov
popf
or
push
and
outsb
inc
and
test
jae
adc
out
jge
mov
and
push
cmpl
into
sbbl
add
cld
insb
inc
stc
leave
aam
in
repnz
cmc
inc
push
fcoml
shlb
sub
gs
insl
aas
push
or
sti
dec
push
sbb
push
imul
mov
ret
adcb
sahf
fnstcw
movsb
jge
inc
dec
xorb
scas
les
aam
push
out
sbb
push
mov
inc
sbb
cmp
mov
ficompl
gs
mov
ss
push
push
mov
out
addr16
addr16
and
stos
sti
push
aas
cli
cltd
dec
pop
cmp
mov
lock
mov
xor
ljmp
leave
dec
pop
pop
popa
xchg
out
jne
outsl
xchg
in
pushf
push
sub
pop
sbb
xchg
xor
dec
lock
push
mov
ss
call
fs
test
sub
or
sub
lret
mov
sub
mov
ds
fstpt
pop
movd
mov
gs
pop
cli
insl
mov
lcall
std
dec
xor
lcall
flds
add
std
mov
push
mov
test
outsl
arpl
jle
mov
or
push
es
and
cmp
mov
adc
mov
insb
icebp
jl
aam
add
sti
hlt
lds
jnp
xor
fwait
aam
in
lret
hlt
es
inc
repz
mov
lcall
scas
loop
into
rcl
std
xlat
mov
add
xchg
xchg
jmp
adc
mov
hlt
push
add
mov
xchg
cmpsl
clc
mov
mov
jmp
idivl
push
lds
cmp
push
pop
adc
test
popa
add
scas
mov
push
arpl
arpl
or
das
loope
mov
lds
dec
lret
aad
pop
pop
and
out
adc
imul
push
or
data16
ljmp
sub
jb
lods
jo
insl
jae
add
mov
push
fs
xchg
mov
add
sbb
sbb
ss
leave
mov
movsb
shll
dec
fcoms
push
cli
mov
and
ret
movsb
adc
arpl
xchg
pop
push
push
push
rcrb
mov
xchg
pop
cld
cld
and
sub
fsubrp
add
stc
or
mov
mov
nop
jne
xchg
mov
mov
fidivrl
xchg
add
and
sbb
pop
inc
pop
add
sub
jns
push
movsb
addb
mov
push
cmp
cs
add
xorl
mul
sub
fnstsw
mov
aaa
out
mov
mov
mov
stos
roll
mov
push
jp
stos
fmuls
dec
xor
sbb
push
sbb
jg
data16
shrb
mov
add
mov
bound
stc
fwait
imul
ret
repz
xor
lods
jnp
stc
cmp
and
push
add
cmpsb
insl
fwait
inc
pop
mov
fs
push
jnp
fld
mov
lds
fnstcw
clc
xchg
push
add
cwtl
jecxz
dec
mov
mov
xchg
stos
jecxz
sub
fistpll
xor
xchg
push
bound
xor
push
jge
loop
clc
and
pop
mov
les
movsb
xchg
mov
repnz
rorb
gs
das
mov
fldt
je
dec
push
rorb
push
ret
inc
sub
dec
xor
fpatan
data16
xchg
scas
add
or
push
fisubs
test
and
iret
shl
pop
test
in
cmp
sub
sub
repnz
push
dec
sub
or
mov
lock
mov
jns
xchg
mov
clc
loopne
dec
dec
and
pusha
sti
lds
rcl
in
rorl
push
aam
rol
sti
jecxz
out
lret
dec
pop
xchg
iret
jge
pop
jmp
loope
call
test
mov
dec
mov
and
and
in
cs
loop
loop
cmp
push
shrb
jnp
mov
add
addr16
inc
jge
or
in
lret
mov
and
stos
int3
sub
xor
xchg
into
jg
sub
cwtl
outsb
scas
adc
gs
xor
repnz
ja
xchg
ds
fs
jp
in
mov
outsl
xchg
cmp
cmpsb
lar
dec
cmp
cmpsb
mov
test
xchg
int
test
popa
pop
adcl
fst
rcll
add
pop
mov
inc
mov
clc
mov
repz
das
pusha
lcall
jo
sbb
mov
loope
lcall
cli
shlb
data16
fistl
sub
lret
sahf
in
and
push
inc
rol
dec
js
sub
pop
out
jge
shrb
call
insl
cmp
out
xor
imul
fdivrp
inc
flds
or
sbb
dec
adc
jmp
aaa
fcmove
outsb
out
std
test
je
imul
jmp
lcall
rcl
mov
js
cmp
lret
adc
pop
call
cmp
jp
bound
lods
inc
dec
hlt
xchg
mov
popf
scas
inc
mov
cmp
pop
xor
ljmp
into
sub
bound
add
movsl
lret
or
dec
cmp
loop
and
mov
mov
mov
js
cmpl
aad
xchg
dec
jo
rclb
fs
xor
and
cli
xchg
cmp
sbb
mov
insl
gs
mov
cmpsb
jmp
addl
push
mov
mov
xor
ret
out
js
sahf
popl
cltd
pop
lock
inc
jl
xchg
push
mov
mov
cltd
jb
dec
es
push
push
cmpsl
add
add
call
pusha
cwtl
and
movsb
sbb
add
les
and
dec
mov
ret
repz
push
orb
iret
lret
ficompl
adc
shrl
inc
inc
pop
push
sub
mov
addr16
fcompl
cs
cmpsb
ja
jg
test
aam
imul
xor
xor
jp
rcll
mov
arpl
mov
iret
stos
sbb
ficoml
iret
out
shll
xchg
adc
dec
icebp
ficompl
mov
addr16
sbb
movsb
es
pop
into
and
jecxz
leave
aas
popf
xor
xchg
fs
push
and
pop
out
test
xchg
push
icebp
mov
hlt
add
pop
test
stos
stc
data16
imul
cmp
ret
jl
sbb
cli
lcall
aas
stos
ss
fwait
mov
mov
add
jns
cmp
push
and
test
imul
mov
les
cmp
aam
jmp
xor
mov
notl
movsl
xorb
fstpl
mov
rcrl
inc
inc
push
pop
int
mov
imul
fnstsw
push
outsb
bound
or
testl
addl
insb
and
pop
push
jo
xor
mov
leave
call
xor
int
inc
mov
cmc
pushf
mov
out
aam
sub
mov
aad
jecxz
adc
and
push
xor
mov
adcb
enter
mov
mov
and
icebp
stc
sub
adc
add
mov
push
inc
enter
jbe
stos
jge
mov
fnstsw
xor
test
pop
xor
mov
pop
ja
sti
iret
imul
out
bound
inc
call
jecxz
add
xor
mov
cmp
xor
sub
movl
decb
fs
into
xchg
pusha
pop
push
roll
mov
movsb
ja
jb
xchg
inc
pop
mov
mov
dec
xor
pop
sub
xchg
shr
push
in
test
fmull
outsl
aad
push
dec
flds
ljmp
mov
inc
fdivs
jp
push
xorb
fwait
cmpsl
ljmp
jge
add
in
outsl
mov
out
add
mov
add
or
lea
ret
and
adc
rcll
dec
pop
jbe
rol
or
in
mov
mov
clc
sub
sti
inc
add
mul
pop
lea
sub
pop
push
sub
shlb
pop
cltd
int3
rclb
out
sbb
daa
roll
lret
int3
push
sub
pop
ja
inc
leave
xorb
mov
hlt
aaa
out
cli
jb
add
sbb
scas
fsubrs
ret
decb
icebp
test
cmpsb
cli
mov
mov
sbb
lds
outsl
push
pushf
sub
pop
sbb
lahf
adc
inc
mov
adc
or
and
shrb
xchg
adc
jb
adc
ffreep
ret
jmp
fsubr
xor
out
pop
js
bound
cs
dec
xchg
and
pusha
sub
xor
popf
mov
and
fs
cld
imul
icebp
mov
ja
ss
push
or
lds
rorl
xor
xchg
sbb
xor
dec
js
aad
jnp
test
push
data16
cmp
mov
mul
lret
or
sub
sahf
into
int
sub
sbb
lods
fiaddl
out
or
fadds
mov
inc
stos
mov
mov
popf
push
mov
int3
pop
dec
jl
xor
or
imul
mov
inc
lods
out
rclb
xchg
out
xor
rcl
pop
stos
add
das
push
and
repz
xor
into
and
repnz
sbb
mov
sub
adcb
push
leave
clc
or
add
flds
imul
int3
pop
sbb
adcb
mov
js
pop
inc
cmp
mov
aaa
xchg
pop
lods
outsb
dec
int3
in
aad
add
movsb
mov
ljmp
fsubrl
mov
fildll
pop
pop
mov
or
sub
scas
shr
add
in
aad
push
mov
sub
popf
outsb
outsb
jecxz
leave
js
cmp
push
testl
cld
sbb
mov
dec
jns
push
add
test
scas
and
inc
lret
push
das
adc
sti
cmpsb
add
pop
push
or
mov
sbb
cmp
js
mov
scas
aam
and
push
adc
dec
fwait
int
addr16
push
pop
sbb
inc
mov
ret
lods
cmp
push
or
sub
jno
ss
dec
or
dec
test
test
push
mov
jg
sbb
jns
les
mov
enter
or
add
es
or
inc
jp
das
mov
cmp
cs
add
test
push
or
rorb
mov
mov
cmp
add
push
jnp
mov
mov
inc
adc
ss
cmp
push
sbbl
jl
push
lods
and
xor
aas
mov
fucomip
mov
bound
lods
sbb
jne
sti
add
mov
lds
movsb
repnz
fwait
xchg
inc
pop
popa
scas
fsub
pop
fcompl
mov
xlat
arpl
mov
mov
cmpsb
adc
inc
inc
fistps
subl
mov
xorb
xchg
pop
fisttpll
dec
push
inc
pop
dec
or
addr16
push
loop
int
pushl
xorb
mov
push
daa
into
out
scas
jmp
push
pop
test
outsl
mov
jns
test
test
filds
push
scas
mov
mov
es
pop
mov
scas
sub
cmp
fnsetpm(287
adc
cwtl
mov
dec
insl
pop
daa
mov
dec
mov
xlat
and
adcl
jp
push
mov
push
push
xchg
add
shr
outsb
push
js
pop
aam
imul
mov
and
fisttps
inc
mov
loopne
mov
rol
decb
pushf
inc
enter
fmuls
push
adc
scas
jg
adc
xor
shll
ss
sub
or
push
jg
pusha
lahf
pop
jb
icebp
or
mov
mov
fsubr
fisubrl
mov
xor
inc
sbb
pop
cmp
aas
movsl
mov
test
leave
adc
mov
mov
sub
leave
sbb
lahf
push
mov
inc
jb
les
mov
rcl
or
shll
ret
fnstsw
loope
jmp
lods
fdivrs
sbb
test
rclb
loopne
push
outsl
scas
fisttps
lea
cmp
adc
ss
mov
sub
xchg
test
inc
gs
pop
popa
cmp
stos
sbb
add
push
sbb
mov
jo
shr
mov
call
dec
xchg
jno
pop
xchg
sahf
pop
cmp
cld
jg
into
je
pusha
push
mov
xchg
sar
mov
mov
sub
insb
inc
hlt
lret
movw
dec
xchg
push
stos
add
cld
sub
out
mov
andb
push
jnp
ds
cmp
mov
cmpsl
xor
cwtl
add
sar
sub
inc
push
ret
cltd
dec
pop
xor
pop
push
adc
jge
icebp
adc
aad
adc
push
add
push
mov
push
cmp
pop
or
pop
mov
movsl
push
leave
pop
roll
mov
aam
dec
sti
pushf
test
mov
dec
inc
rcll
ljmp
int3
jp
add
js
int3
xorb
notb
in
lahf
fidivl
pop
inc
stc
subb
outsb
popa
jne
dec
mov
pop
xchg
in
pop
add
adc
pushf
fistpl
mov
xor
shll
into
mov
stos
mov
fstps
mov
subl
mov
cmp
sti
lock
addb
fcoml
je
inc
sub
pop
lret
ljmp
push
dec
adc
imul
ret
and
and
sbb
add
cltd
jae
rclb
jmp
cmp
jo
adc
xchg
jbe
lret
cmpsl
sub
jg
popf
dec
add
jp
int
daa
mov
bswap
jmp
stos
jns
das
scas
sub
pop
es
call
int
inc
scas
mov
and
ret
adc
imul
andl
sbb
popf
mov
int3
mov
mov
mov
adc
js
adc
mov
incl
out
mov
inc
lods
insb
mov
je
mov
and
test
and
mov
and
in
cmp
pop
insl
pop
loope
push
call
add
and
push
xchg
stos
je
and
outsb
cli
add
mov
and
xorl
pusha
add
xor
sub
pop
das
mov
push
lahf
adc
test
lock
in
push
cmpsb
sub
and
or
mov
lret
jo
clc
add
notl
lds
fnsave
push
inc
sbb
push
xor
fdivr
pop
inc
cmp
adcl
jl
mov
mov
xchg
inc
movsl
add
fmuls
ja
inc
add
dec
repnz
push
push
popa
xchg
movsb
ret
enter
enter
pop
xchg
xor
sbb
lahf
sbb
scas
cwtl
inc
mov
in
push
jo
ljmp
mov
sub
lcall
ja
shl
jmp
or
dec
sti
inc
or
aaa
adc
mov
and
adc
xor
jle
or
mov
xchg
das
enter
mov
xchg
jne
dec
mov
stos
outsl
in
mov
dec
cmpsl
cmp
or
adc
sub
jae
ficompl
sarb
pop
sub
push
call
and
mov
inc
lcall
jae
sbb
push
pop
stc
into
in
jg
shr
pushf
sbb
cmp
pop
int3
sub
leave
outsb
shr
loope
sbb
xchg
ss
repnz
sbb
andl
data16
sbb
push
sbbb
rorb
aaa
movsb
int3
or
add
push
mov
dec
add
clc
dec
in
mov
mov
mov
sub
mov
pushf
test
loop
or
add
inc
mov
sub
cmp
pop
rorl
cmp
jge
sub
sub
or
ljmp
loope
orb
pop
out
pop
jbe
mov
push
sarl
fcomp
cld
push
inc
addr16
mov
pop
mov
jle
dec
mov
dec
adcb
movsl
pop
lcall
adc
xor
outsl
sbb
insb
ret
mov
stos
fcmovu
movl
test
je
xor
shrb
push
xor
fwait
push
dec
sub
cli
push
inc
int3
call
rcrb
mov
rorb
out
decb
arpl
stc
mov
lcall
js
push
ret
pusha
adc
sub
sti
add
sbb
repnz
add
in
adc
mov
xor
das
loope
out
cmp
xchg
sub
pop
out
int3
rcll
sbb
lods
push
rcl
push
ret
jns
fcmovne
in
xchg
das
xchg
call
xchg
or
jp
mov
out
mov
and
dec
cmc
jo
mov
pop
repnz
pop
mov
hlt
mov
ret
or
jo
gs
cmpsb
jg
ret
jns
sbb
into
mov
pop
push
sbbb
insl
ss
ret
mov
xchg
add
jns
mov
ja
daa
push
sti
lods
cmpsb
and
jmp
xchg
xor
mov
cmp
stos
lds
pop
and
dec
xchg
sub
cld
xchg
jae
inc
add
mov
mov
push
mov
jmp
mov
dec
jecxz
cwtl
and
mov
adc
mov
mov
negb
in
arpl
in
pop
cltd
in
jmp
pop
imul
cmpsl
mov
adc
jle
and
mov
mov
mov
mov
dec
cmp
cmp
and
test
dec
jno
pushf
xchg
aaa
cltd
rolb
ror
dec
stos
jbe
jge
adc
sub
add
xchg
mov
repnz
pop
pop
push
cltd
lods
ja
rcrl
sbb
pushf
push
cmpsl
iret
call
ds
in
fnsave
repnz
lock
bswap
lahf
lret
inc
jns
imul
jcxz
mov
jp
fs
cs
fisttpll
push
daa
xchg
inc
notl
mov
loop
sub
push
int3
dec
xor
lret
or
sub
pop
test
cmp
leave
js
addr16
sahf
ss
mov
jmp
mov
and
int
push
arpl
stc
gs
outsl
mov
loope
and
sub
leave
and
lods
fistps
pop
icebp
mov
fucomp
pop
xor
sub
push
mov
xchg
mov
dec
ret
and
loop
and
cli
and
mov
cmp
xor
jge
loope
sahf
sbb
aas
mov
add
jle
push
mov
mov
int
out
or
mov
ja
xchg
fsubrs
es
xchg
mov
mul
int3
add
jecxz
inc
jne
pop
push
out
lcall
and
in
push
cmc
incb
push
cmp
cltd
fsts
es
inc
int3
mov
arpl
lea
jns
or
push
outsl
ficoml
push
pop
lahf
push
pop
pusha
movsl
or
pop
ret
jmp
int3
flds
test
inc
pop
push
int
test
add
mov
inc
mov
sbb
pop
push
addr16
inc
cltd
divl
jb
insl
iret
add
xchg
call
rcr
lods
pop
inc
inc
roll
lods
ficomps
movsb
in
cmp
add
jecxz
and
jbe
lahf
outsl
mov
ja
daa
or
scas
call
cs
jp
fildl
mov
rorl
fdecstp
xchg
mov
mov
negl
shlb
jno
mov
cmp
cmc
mov
icebp
incb
std
xchg
and
jmp
test
mov
xor
pop
and
pusha
scas
lds
stos
leave
shlb
jg
lret
adc
gs
ja
cmp
lock
adc
adc
jns
daa
sbb
push
xor
sbb
and
stos
popa
fprem1
adc
cli
xor
ror
mov
out
push
ss
adc
mov
pusha
mov
mov
shrl
add
sahf
xchg
bound
movsl
clc
mov
mov
cli
mov
std
xchg
xchg
std
cmp
movsl
imull
sub
in
or
les
js
pop
loopne
jns
fwait
pop
sbb
mov
mov
push
pusha
sbb
xchg
push
jo
imul
cmp
push
nop
xchg
andl
pop
mov
fwait
mov
loope
mov
mov
pop
pusha
sbbb
xchg
imul
aas
subl
pop
imul
add
or
test
int
pop
mov
pushl
xchg
popa
and
nop
xchg
mov
mov
std
cmp
xchg
mov
dec
pop
cmc
inc
xlat
mov
push
int
cmp
fidivrs
dec
push
idivb
into
push
mov
nop
xor
in
rcll
or
movb
mov
cld
movsb
push
xchg
push
lock
mov
in
push
arpl
pop
icebp
or
mov
adc
mov
fidivrl
cmpl
xor
xchg
mov
jl
rcll
pop
lea
fcompl
sub
dec
sub
lret
cs
mov
sahf
dec
adc
mov
addr16
aaa
mov
xor
dec
lods
pop
adc
dec
sub
jno
imul
mov
pop
aam
movsl
nop
das
aas
sub
jge
shrb
push
pusha
pop
adcb
ret
sub
decl
pop
sub
pop
clc
or
jmp
cwtl
popa
movsb
pop
inc
fsub
cmpsl
push
fstpt
lock
and
js
xchg
adcb
sbb
mov
cmc
imul
add
sub
or
pushf
sbb
cmp
xor
int3
outsb
mov
dec
icebp
xchg
pop
icebp
add
push
loopne
outsb
stos
sub
stc
sbb
sbb
cli
mov
sarl
and
mov
std
inc
ja
mov
ds
cld
sti
imul
mov
cmp
rorb
cmpsb
push
mov
mov
jo
adcl
cmp
cmp
daa
inc
ljmp
push
lods
adcb
jno,pn
push
dec
adc
stos
rcrb
cmovns
and
in
and
lret
loopne
hlt
movsl
or
jbe
xor
data16
arpl
repnz
fdiv
adc
fldenv
lret
lds
shrb
mov
fdivl
add
es
outsb
mov
add
mov
dec
push
ffree
ds
push
adc
rcrb
xchg
sbb
ds
iret
or
cmpb
aas
fildll
pop
fsts
fucomp
aaa
repz
mov
rorb
pushf
rep
push
cmc
pop
repz
push
lahf
pop
pop
mov
mov
inc
push
lahf
inc
outsb
xchg
ds
mov
iret
jae
js
paddusw
rclb
cmp
fnstenv
repnz
mov
xchg
add
imul
lcall
shr
mov
mov
push
dec
mov
or
or
push
cmpl
aas
stc
mov
mov
jg
leave
add
sub
push
push
or
fucomi
and
inc
mov
jnp
adc
jne
lret
rorl
mov
out
fildl
mov
lahf
xchg
sbb
dec
js
inc
aaa
push
sti
or
cld
mov
push
and
adc
aam
sbb
cs
imul
mov
test
adc
adc
lahf
sbb
mov
and
imul
dec
dec
in
call
scas
mov
xor
mov
jnp
push
aaa
iret
popa
shrb
fdivs
shr
cmp
popa
sbb
jbe
mov
shlb
jecxz
cmp
jno
rorb
pop
xor
lret
cmp
movsl
shll
jb
push
mov
mov
dec
add
pop
mov
stos
mov
sbb
pop
xchg
sarb
jo
enter
inc
imul
inc
hlt
pop
fmull
mov
loopne
mov
clc
rcr
xor
imul
cmpsl
cwtl
mov
lods
push
mov
sahf
in
push
xchg
jge
ret
rcrb
mov
fisubrs
sub
inc
add
incb
outsb
dec
push
imul
popa
pop
lds
pop
out
sarb
stos
popl
cld
adc
xchg
or
sbb
data16
sub
pop
xor
lea
mov
dec
xor
push
push
inc
icebp
loop
inc
fstpt
adc
lods
aad
pop
lret
movsb
adc
push
dec
xchg
rcl
popa
hlt
sub
mov
fwait
rcrb
sbb
mov
mov
jmp
sbb
rep
jbe
stos
add
sbb
push
mov
push
push
inc
shl
mov
cmpb
dec
mov
testb
push
stc
arpl
clc
lock
icebp
sbb
in
out
xor
mov
out
fld1
insl
cld
dec
adcb
sub
pop
sbb
jbe
bnd
add
mov
mov
mov
jmp
cmp
xlat
add
out
mov
out
insl
jp
daa
popa
loopne
out
out
xor
mov
andb
xchg
dec
mov
loop
rclb
gs
jae
wrmsr
jnp
inc
cmpsl
in
adc
cli
imul
mov
nop
sub
xchg
mov
fs
push
dec
pop
pushf
ret
lods
mov
dec
shrl
es
push
jle
push
cmp
rorb
mov
pop
addr16
jnp
out
orb
sbbl
faddl
aam
aaa
dec
or
jo
and
mov
ficompl
stos
adc
sbb
add
popfw
shr
cld
dec
pop
sbb
inc
std
push
cltd
gs
push
xor
out
cmp
dec
loopne
mov
dec
mov
sahf
xchg
sahf
xchg
in
jp
dec
sub
aam
add
sbb
xchg
xor
lods
adc
leave
cmp
lods
out
sbb
or
mov
shl
mov
dec
and
daa
push
in
fwait
jmp
and
ss
popf
lds
mov
jae
jae
mov
arpl
test
pop
test
aam
xchg
clc
je
and
popf
daa
test
jl
cs
and
and
cmc
xlat
pop
in
add
out
inc
iret
sub
out
imul
adc
jno
addr16
les
enter
pop
or
add
push
sub
adc
std
icebp
pop
js
cmp
adc
mov
inc
mov
adc
adc
xchg
pop
and
mov
jno
or
popf
xorps
subb
repz
jl
int
push
ficomps
leave
jp
pop
sub
mov
sub
jns
pop
rcrb
xor
shrb
insl
nop
pop
mov
std
xchg
dec
jg
push
pop
cli
mov
push
sub
mov
lds
sub
adc
imul
jb
outsl
imul
fcompl
test
mov
loopne
stc
push
cmc
ss
mov
inc
shr
cmp
int3
sbb
rcll
and
std
iret
dec
data16
iret
push
pop
and
pusha
pushf
enter
cmp
mov
jae
sub
inc
or
sub
jle
int
rcrl
clc
mov
xchg
lods
sub
cltd
push
lds
fwait
mov
out
jb
adc
jo
inc
mov
bound
mov
pop
mov
or
add
fnsave
jmp
jmp
stos
add
push
sub
pop
mov
and
fists
in
sahf
mov
je
mov
andb
dec
test
in
fnstenv
adc
xor
push
mov
mov
cmpsl
jg
dec
ret
dec
cs
call
in
les
or
xchg
sbb
xchg
lret
ss
jge
xchg
pushf
ljmp
mov
stos
mov
in
mov
jne
rorl
dec
imul
notb
outsb
lock
pop
out
mov
test
lret
mov
icebp
icebp
lahf
fistpll
add
xchg
push
test
jb
mov
adc
into
enter
js
sub
fmul
outsb
movsl
lock
or
push
sub
ja
pop
cmpsl
mov
faddl
or
push
mov
popf
cmpsl
jns
repnz
cmp
jp
and
pop
aas
sub
inc
test
out
rclb
adc
cmpsl
je
mov
dec
and
inc
mov
push
xchg
js
cmp
mov
sahf
pop
sbb
mov
pop
or
fistpll
arpl
call
sbb
jl
push
jb
insb
push
cs
sarb
stc
out
sahf
pop
jl
mov
fs
bound
subb
inc
sbb
call
sahf
or
pop
push
add
fistpl
jp,pt
lods
out
mov
dec
add
sahf
mov
jae
jbe
decl
fwait
sbb
test
outsb
das
stos
fsub
fs
aam
vpslld
mov
inc
loopne
fisttpll
cmp
insb
jp
push
aas
data16
ja
or
into
leave
xchg
inc
pop
ror
aam
dec
testl
xor
pop
enter
push
xlat
mov
mov
bound
mov
bound
jg
add
lods
sbb
mov
nop
repnz
testb
lret
mov
ret
and
and
mov
das
mov
imul
push
or
stos
jnp
push
jb
adc
addr16
pop
jle
cmp
cwtl
pop
push
nop
fnstenv
jp
stos
cmp
push
mov
lcall
ret
shrl
and
jle
icebp
jb
xor
pop
aad
push
sub
ds
mov
inc
data16
xor
outsl
pop
mov
or
scas
shll
push
lret
mov
dec
xchg
incb
mov
inc
and
or
or
inc
call
lret
out
in
mov
jg
xor
sub
xlat
test
mov
xchg
in
out
in
ror
dec
mov
fxch
adc
adc
push
and
bound
ss
std
fldt
pop
cld
xchg
push
mov
add
cmp
leave
cmp
inc
mov
pusha
sub
add
mov
sbb
outsb
jg
idivl
dec
mov
shll
mov
hlt
jno
lret
jg
in
fsubrs
pop
add
add
jge
push
outsl
jns
sub
insl
lcall
cmp
movsl
jge
adc
imul
sti
scas
mov
out
push
inc
rcr
rcrb
ret
loop
and
add
shll
loope
xchg
mov
in
pop
outsl
pop
cli
daa
or
int
cmpsb
push
and
mov
cmp
mov
adc
imul
push
push
aam
mov
test
dec
ret
dec
add
jno
push
shll
pop
jp
xchg
imul
pop
xorb
repz
cs
cmp
fwait
gs
cmc
loop
mov
jb
adc
cmpsl
inc
mov
fimuls
rorb
mov
push
in
ja
mov
push
sbb
and
shlb
or
jle
ja
scas
adc
movsb
popa
ret
loopne
lock
sbb
mov
cmpsb
mov
aam
inc
gs
mov
pop
adc
or
ret
lcall
movsl
mov
dec
or
jbe
lahf
push
inc
sub
push
stos
cmp
push
cmp
pop
sbb
call
stos
loop
jg
cs
cmp
or
dec
jge
lods
sbb
mov
insb
mov
test
push
adc
movsl
int
call
ret
shl
and
call
inc
and
and
inc
mov
or
or
sti
ljmp
icebp
mov
sbbl
add
les
sub
clc
or
lfs
jp
mov
out
jl
push
pop
or
mov
cmp
rorl
pop
dec
dec
jle
in
in
xchg
movaps
adc
pop
push
push
jl
fstpt
pop
adc
dec
inc
add
adc
out
sahf
push
sbb
cmpsl
movsb
int3
adc
imul
sbb
sti
dec
xor
cmp
in
jb
js
push
xchg
fcomip
nop
into
xchg
popa
inc
push
mov
inc
jb
mov
mov
inc
mov
dec
faddl
repz
std
out
and
and
mov
inc
push
mov
test
pop
or
cmp
xor
mov
pop
mov
add
int3
xor
lds
aam
jg
pop
std
lahf
mov
call
out
sub
xchg
filds
sbb
movsl
clc
xchg
out
stc
push
into
out
inc
insl
in
dec
or
sub
gs
cmp
jp
aas
push
mov
add
fcompl
add
sub
fdivs
push
sub
xor
xlat
add
jg
push
int3
jb
lods
clc
adc
loop
fsubl
in
xor
mov
ss
dec
rolb
inc
or
lods
sub
mov
or
or
xchg
push
xor
hlt
lret
ds
and
lret
add
int3
add
adcb
adc
and
cmc
pop
add
push
mov
cltd
int
pop
dec
dec
outsb
adc
imul
imulb
imul
roll
fwait
xchg
rcll
lods
or
or
dec
ds
mov
lret
jnp
in
cmp
loopne
int
mov
xchg
cmc
fisttps
adc
aam
rorl
stos
pop
push
pop
jb
jp
inc
lock
pushf
lds
push
ficoml
add
and
lea
les
jmp
js
adc
fldl
cwtl
hlt
mov
movsl
shrl
inc
stos
mov
mov
ljmp
je
stos
xchg
adc
adc
push
sub
xor
stos
xsha256
cmpsb
push
or
sub
push
lret
outsl
sub
inc
cmp
ret
bound
test
pop
push
mov
push
repz
sub
push
push
dec
pop
lcall
push
dec
adcb
xchg
jno
mov
out
mov
out
add
lods
mov
dec
xor
fld
pop
cmp
int3
sbb
testb
sub
sbbl
sbb
sub
popa
movsb
jo
pop
push
add
adc
jnp
add
and
leave
cmp
sarl
fsin
sbb
add
js
out
in
push
jle
insb
repz
xchg
cmc
pop
cmp
stos
inc
hlt
mov
movsl
adc
or
pop
push
push
jns
ja
fidivrs
mov
arpl
lcall
mov
pushf
cmp
add
mov
and
xchg
jae
dec
xchg
fdivrl
loopne
out
inc
shlb
inc
xchg
cwtl
test
sub
out
jno
mov
out
icebp
push
jb
pop
outsb
xor
les
pop
jle
pop
insb
xchg
out
and
mov
push
inc
and
rol
lahf
xchg
inc
imul
push
roll
lods
adcb
mov
sar
test
repnz
xchg
test
shr
daa
dec
jae
nop
mov
xchg
inc
fstpt
jg
or
rolb
dec
cld
sbb
out
popf
and
fwait
ror
push
les
xchg
add
movsl
jmp
in
jns
repz
lock
sbb
or
pop
pop
pusha
xorb
arpl
pusha
aaa
lcall
fcoms
adc
cltd
std
push
popf
test
fimuls
pshufw
push
stc
push
fistpl
push
test
cld
jl
inc
dec
add
or
dec
ror
push
sbb
adc
dec
in
lahf
inc
or
fsubl
cmp
mov
inc
jne
dec
mov
ss
shlb
rcll
pop
daa
xor
aam
cmp
pop
imul
js
out
insl
subl
and
cmp
loope
pop
je
jl
rcl
mov
cmp
cmp
enter
push
cwtl
fdivl
pop
inc
cmpsb
pop
gs
sbb
sbb
decl
or
jno
les
sbb
mov
ret
repnz
loopne
xor
aam
popa
mov
mov
xor
repnz
push
out
int3
in
add
fwait
mov
pushl
jge
insl
mov
call
adc
sarb
adc
xor
and
add
jbe
rclb
mov
fldl
add
xchg
push
loop
fwait
cwtl
jae
nop
jmp
push
adc
cmc
add
imul
jnp
fistpll
jge
mov
push
ret
inc
add
shll
aad
icebp
ficoms
sbb
insb
test
inc
sbb
mov
and
sub
xor
cli
sub
add
cmp
adc
xorl
test
mov
call
xor
ret
iret
inc
outsb
add
inc
inc
test
repnz
push
lds
scas
cmp
dec
jns
aaa
daa
dec
fcoml
jnp
cwtl
clc
enter
cmc
das
xlat
jnp
lea
movl
mov
icebp
dec
jp
fwait
ss
sbb
loopne
jmp
cmp
add
pop
push
and
iret
rcrb
mov
mov
loop
out
fimull
test
mov
xor
push
stc
cmp
bound
xorb
xchg
adc
xor
xor
ja
jg
sbb
xor
jnp
dec
mov
adcl
mov
sbb
push
gs
jmp
inc
sbb
sbb
pop
jnp
mov
adc
sti
push
mov
ss
hlt
pop
fsts
sbb
rcr
or
nop
es
imul
mov
sub
mov
mov
cmp
adc
out
fadds
dec
push
add
inc
es
jl
cli
jp
loopne
or
dec
jecxz
lds
dec
aas
inc
xchg
repnz
inc
lds
ljmp
cmp
inc
mov
lret
fisubl
push
fimuls
xchg
mov
mov
xchg
xchg
pushf
in
dec
and
cmp
lods
ret
clc
jne
cmpsb
inc
popa
push
jbe
or
push
jbe
xor
popf
fidivs
adc
push
andb
mov
fxch
hlt
and
push
or
xchg
mov
pop
repz
mov
adc
fdivp
nop
jle
je
hlt
rcrl
xlat
mov
and
mov
jnp
xchg
xchg
je
mov
lahf
fs
dec
bound
or
loop
and
mov
outsb
fnsave
fwait
mov
frstor
jmp
mov
out
ret
sub
mov
insb
cltd
lcall
fs
mov
xchg
fnstsw
mov
mov
xor
push
cmpsb
sub
bound
data16
adc
movsl
cmpsb
scas
loope
aas
mov
push
les
ret
sub
push
out
mull
mov
mov
jl
mov
push
inc
loop
sahf
out
push
cltd
stc
jp
mov
aam
test
sahf
imul
adc
icebp
pop
jne
ljmp
stos
push
scas
shlb
pop
sbb
jge
cmp
dec
cmp
aas
mov
rcl
xor
push
jne
rolb
nop
push
mov
cmp
mov
xor
push
push
and
xchg
cmpsb
push
outsb
and
xchg
push
fcmovbe
enter
repz
jmp
adc
leave
jmp
add
mov
loop
mov
shl
insl
sub
inc
mov
lock
jae
jo
fcomps
lods
cmp
fs
stc
stos
inc
xlat
push
push
popa
rcrb
add
or
bound
fiadds
jg
in
mov
push
insl
aaa
leave
int
push
mov
mov
movsb
es
pusha
push
aaa
mov
dec
push
add
xchg
mov
xorb
in
adc
gs
sub
repnz
jle
xchg
push
mov
int3
stc
cwtl
fld1
fstp
sub
or
or
stos
testl
rolb
or
iret
dec
xchg
mov
addr16
fimuls
scas
ret
jno
mov
xchg
jge
sbb
push
test
sbb
movsl
sbb
fisubl
cmc
scas
mov
and
gs
fcompl
loop
loope,pt
lods
bswap
fwait
in
push
fcmovnu
dec
jns
add
adc
mov
fwait
in
loope
mov
dec
fsubp
mov
lcall
les
mov
lcall
and
sub
into
stos
lods
fs
sub
pop
ret
inc
cmc
dec
jg
loop
pop
fsubl
inc
es
mov
lcall
aam
xchg
or
xchg
mov
add
jo
popl
push
pop
cmpsl
mov
std
ror
and
xor
sbb
ret
arpl
fs
pusha
leave
jb
dec
aam
dec
jne
adc
xchg
add
imul
or
mov
xchg
mov
mov
or
fcmovnu
das
sbb
ds
fidivl
mov
sub
lds
adc
pop
lds
cmp
call
cltd
mov
push
orl
adc
aam
xchg
addr16
and
lea
cmp
gs
xchg
or
lea
xor
popa
push
cwtl
or
xchg
xchg
dec
sub
les
add
push
imul
outsb
ficomps
push
arpl
mov
stos
imul
les
inc
jne
aas
dec
mov
inc
or
stc
mov
push
or
lds
push
arpl
popf
mov
ret
pop
and
xchg
mov
clc
sbb
mov
loop
xor
push
aam
lds
mov
jmp
arpl
xchg
jns
cs
iret
enter
jno
fwait
movsl
mov
lret
imul
xchg
cmp
mov
lods
jo
xchg
out
sti
push
je
cltd
or
sbbb
loopne
sahf
push
lods
test
jle
xor
lret
dec
jmp
test
mov
add
mov
aam
xchg
xchg
lret
fs
das
mull
mov
xchg
cmp
and
insl
push
jne
popf
sbb
rorb
scas
repz
adc
ret
and
sub
clc
dec
inc
sub
sub
and
inc
pusha
aaa
mov
inc
mov
pop
repnz
ljmp
dec
cmp
ret
lock
jne
xor
dec
jge
lret
outsb
fs
gs
es
sbb
cmp
xchg
xchg
lret
cmpl
sub
sbb
popf
push
cmp
lahf
jle
cwtl
pushf
loop
mov
mull
in
jne
out
ret
stc
xchg
repnz
sbb
addr16
cmp
in
addl
dec
dec
lock
add
cmp
addl
sarl
repz
iret
dec
jns
jmp
sti
inc
inc
cli
or
or
sub
gs
jne
and
add
jno
shrl
xchg
test
cmp
adc
jp
popf
movsb
sub
adc
xor
or
outsb
pusha
in
adc
cmpb
sbb
push
add
les
adc
mov
cmp
in
pop
int3
movsb
sub
mov
jle
mov
mov
filds
jb
stos
push
mov
push
cld
popa
shrb
clc
push
sbb
and
push
adc
sub
sbb
push
loope
xor
xchg
dec
mov
aam
inc
int
cmp
dec
loop
cmp
mov
in
pop
in
sbb
int3
pop
repnz
jecxz
inc
imul
push
jmp
xor
push
inc
aas
stos
mov
mov
ja
fldl2e
imul
std
mov
push
and
sbb
aaa
push
xchg
xlat
jo
mov
xchg
jge
mov
out
add
aam
adc
repz
cmc
fimull
ljmp
mov
negb
jnp
xor
lcall
call
fstps
cld
movsl
or
cmp
stos
cwtl
xor
pop
jg
or
jmp
pop
daa
add
sbb
mov
or
mov
sub
subb
adc
pop
movsb
inc
imul
data16
clc
jl
mov
mov
cwtl
xchg
dec
sti
adc
jnp
pmullw
adc
or
jbe
lods
inc
mov
inc
pop
movsb
xlat
add
clc
outsl
cli
pushf
lret
and
aas
mov
sub
push
fcmovne
xchg
movsl
xor
mov
inc
sbb
xchg
or
add
xchg
pop
sub
outsl
repz
les
dec
rclb
sub
and
iret
xlat
dec
imul
or
mov
fs
imul
jbe
mov
inc
bound
cmp
cltd
push
adc
sbbl
push
or
xor
repz
dec
inc
test
das
ljmp
xor
sub
rcr
lods
mov
xchg
mov
dec
test
and
ja
addr16
mov
mov
pop
push
mov
hlt
ljmp
imul
std
cmpsb
ja
mov
xor
inc
adc
mov
xor
fidivrs
mov
movsl
dec
cmc
insl
cmp
mov
movsb
push
xor
xor
sti
dec
mov
out
pusha
gs
add
pop
sbbl
pop
rorl
loopne
inc
push
mov
rclb
in
mov
mov
adcl
fwait
jns
dec
imul
mov
add
push
jae
ret
rcll
push
push
mov
jp
add
push
popf
push
add
arpl
shlb
jecxz
sar
cmp
mov
aaa
in
test
or
bound
jecxz
or
ja
mov
std
inc
mov
lahf
dec
mov
bnd
fistpll
ret
push
gs
test
enter
or
out
cmp
inc
mov
cmpsl
jmp
xor
inc
fiadds
fisubl
lcall
xor
pushf
je
cltd
adc
pop
mov
mov
fwait
mov
cmp
push
and
mov
loopne
scas
inc
sarb
add
add
add
cmpxchg
cld
movsl
sbb
loopne
push
in
add
imul
movsl
dec
xor
sub
jns
das
sub
xor
int
fs
add
inc
sbb
outsl
pop
mov
cs
mov
push
sub
fdivrs
fiaddl
movsb
and
negl
lret
mov
repnz
mov
cmc
dec
sarl
mov
cmp
sarb
cmc
stos
add
ret
mov
dec
icebp
scas
loope
test
icebp
mov
or
push
pop
or
cmp
xchg
push
fildl
in
sbb
adc
rclb
sub
mov
inc
cmp
shr
adc
mov
out
nop
cli
push
in
or
jne
add
jmp
pop
cmc
rorl
mov
pusha
test
out
mov
js
mov
mov
pop
lds
cmovnp
and
loopne
sbb
mov
mov
fistl
les
popa
sub
cmp
adc
lahf
sub
pop
push
andb
ljmp
dec
cmc
ja
xchg
adc
and
fcoms
adc
mov
fsubs
or
fsubr
test
cmp
fists
adc
imul
cmc
fdivrl
fucom
push
scas
outsb
adc
inc
add
popf
lret
loop
xchg
fs
sbb
mov
ret
adc
sbb
outsl
clc
scas
fisubrs
adc
stos
add
xor
lods
xchg
loopne
inc
fwait
push
popa
shll
enter
inc
jne
add
xor
pop
mov
aam
jp
or
jge
dec
jno
pop
or
mov
cmpsb
sbb
cmpsb
adc
add
jnp
dec
pop
in
xchg
pop
stos
dec
scas
icebp
xchg
and
adc
dec
mov
mov
or
addl
xor
add
pop
inc
cmp
xchg
lcall
leave
xorb
jne
sbb
mov
sti
jno
mull
aaa
sub
jnp
pop
sub
les
add
subl
je
hlt
mov
cmp
gs
cmpsl
cmp
shll
and
cmpsl
or
push
movsb
push
push
dec
mov
and
cmp
les
int3
mov
sub
lret
in
outsl
arpl
mov
inc
push
jmp
jmp
mov
jmp
loope
xor
dec
push
or
scas
add
repz
in
or
daa
lcall
shll
stos
xchg
insb
pop
xchg
fs
cmp
sub
adc
loop
cmp
mov
mov
and
inc
jmp
pop
mov
mov
add
push
mov
and
xchg
cli
push
dec
mov
aas
pop
imul
je
fldt
or
fs
add
subb
dec
out
int
pop
lcall
pushf
inc
push
jne
test
mov
sbb
leave
dec
hlt
jecxz
xchg
fdiv
dec
gs
pushf
call
cmpsb
loop
loopne
mov
mov
inc
and
call
and
daa
jp
push
xchg
cmp
jmp
sbb
sub
dec
fsub
test
scas
icebp
cltd
mov
mov
cmp
push
jno
inc
scas
jno
xor
sbb
mov
cmpsb
shll
les
mov
cmp
cmpsb
jl
lds
mov
sbb
push
insb
imul
int
mov
dec
sbb
in
repnz
nop
mov
jb
pop
xor
dec
mov
gs
xchg
push
adc
cmp
add
mov
inc
idivl
aad
les
sbb
lahf
pop
inc
xor
adc
jno
and
add
add
stos
fadd
mov
pop
dec
sub
sub
js
mov
cmp
shll
xchg
inc
sti
inc
adc
inc
push
xchg
scas
insb
pushf
jno
and
loopne
xor
cmp
fdivr
mov
std
cs
push
repz
shlb
xchg
rcr
ret
dec
mov
aam
xorl
dec
and
pop
mov
lods
lock
add
arpl
dec
stc
cmpsb
test
pop
sahf
jl
aad
pop
repnz
sbb
push
cmpsb
sahf
pop
lds
je
sub
ja
daa
push
in
jl
xor
push
in
lret
adc
jo
mov
dec
repz
lods
mov
das
cmp
ss
pop
outsl
push
sahf
or
int
js
fistps
dec
jp
xor
add
push
aam
jmp
or
andl
xchg
mov
aaa
clc
jno
sbb
ret
xchg
int
lods
mov
mov
mov
add
push
dec
sbb
push
outsb
jl
pushf
in
push
jbe
imul
fcompl
mov
mov
cmpsl
into
sahf
js
fidivrl
and
cmpsl
xchg
adc
test
mov
enter
notb
gs
stc
pop
dec
outsl
sbb
xchg
pop
subb
or
ds
out
pop
sbbb
ja
icebp
jg
popa
ret
cmp
loop
lret
inc
cmp
mov
cmpsb
leave
lds
orb
aad
int3
loope
arpl
cmpsl
pop
and
std
aaa
stos
sbb
sbb
push
cmpsb
lcall
sbb
ret
hlt
cwtl
dec
sbb
lret
sub
dec
sub
pop
lea
mov
ja
xchg
clc
ljmp
xor
xchg
pop
pop
pop
mov
inc
ljmp
mov
lds
and
repnz
adc
out
rclb
out
xor
cwtl
lret
dec
inc
sub
push
xor
xor
jmp
push
shll
leave
add
addr16
mov
inc
fdivp
ret
cmp
ror
inc
add
fs
xor
jae
add
cli
xchg
or
xchg
add
push
xchg
stos
dec
mov
fmull
es
xchg
mov
xlat
popa
cmp
pop
mov
sub
sub
out
push
mov
mov
or
lcall
or
inc
addr16
mov
int3
repz
lret
in
pop
aas
adc
xor
dec
loopne
mov
fsubrl
push
dec
icebp
xor
inc
mov
xor
fcompl
loope
enter
xor
push
lret
sbb
xlat
push
jbe
xchg
mov
pop
xor
xchg
clc
loopne
xchg
shlb
or
sbb
jp
hlt
cmp
mov
or
bound
push
sbb
xchg
sti
mov
adc
int
dec
js
clc
in
or
xlat
pop
pop
ds
pop
cltd
fidivrs
mov
insl
sbb
dec
add
inc
gs
dec
icebp
mov
mov
mov
mov
push
xor
add
lods
jp
jne
inc
ja
movsb
into
pop
pop
dec
insb
ja
aam
mov
jae
adcl
jge
out
fdiv
cli
clc
aas
sub
imul
jle
sub
call
inc
rcr
pop
xchg
loopne
cmpsl
mov
xchg
clc
out
rcrb
jge
xor
and
fwait
pop
lea
insl
sbbl
clc
js
out
mov
ficoml
shr
sbb
jae
lods
imul
jbe
jmp
lahf
ss
in
mov
mov
shlb
jl
and
jnp
clc
enter
pop
ss
adc
jmp
insl
lret
dec
cmp
popf
mov
outsl
push
jae
xchg
dec
out
adc
dec
cs
je
push
xchg
and
lock
mov
inc
faddl
add
out
cmp
aaa
iret
or
fwait
inc
es
rclb
add
fcompl
in
add
stos
es
xchg
mov
dec
xor
dec
or
arpl
sbb
push
jno
jns
ds
dec
xorb
fidivrl
pop
aad
into
and
cld
adc
jl
ret
in
push
jl
push
xchg
scas
add
rcrb
mov
out
imul
push
lock
xlat
sarl
jl
pop
ss
cmp
push
jno
push
and
adc
push
cli
loop
sub
pop
and
popf
lods
mov
mov
js
mov
stos
add
jae
outsl
jae
xchg
lcall
movsl
cmp
cmpl
inc
notl
jge
loope
sbb
pusha
in
mov
inc
mov
roll
cmpsb
sahf
movsb
mov
push
xor
outsl
jae
into
ljmp
fsub
xchg
test
jp
mov
push
xchg
rcll
imul
jle
xchg
sbb
pop
imul
ss
sti
jmp
and
xor
push
jae
sar
lahf
in
dec
sbb
pop
or
jle
iret
repz
imulb
push
insb
pushf
pop
cmp
mul
sub
jle
inc
cmp
repnz
sub
imul
sbb
gs
aad
lea
loopne
cltd
pop
lss
sbb
sbb
xchg
out
rcll
pop
lret
clc
ds
mov
scas
mov
jle
fimull
ja
shr
jbe
mov
push
je
iret
inc
cwtl
popa
inc
nop
enter
jmp
fs
popf
or
xchg
rcl
mov
lods
mov
xor
push
ljmp
iret
shl
popf
ror
jno
dec
cmc
cmpb
insb
jno
pop
xchg
push
ja
shrl
fadd
xchg
mov
fwait
cmp
adc
pop
cmp
xchg
xor
push
inc
out
and
mov
std
pop
loope
ret
push
fst
and
mov
jno
mov
pop
dec
mov
mov
lret
repz
inc
sbb
dec
adc
cli
cmp
pop
testb
ljmp
mov
adc
lcall
shll
cs
jb
fmul
dec
xor
in
movb
add
sbb
aas
push
std
in
xchg
xchg
shrb
cltd
xchg
jecxz
cmpsb
mov
sub
lds
cmp
ds
xchg
popf
mov
ds
push
repnz
sbb
sbb
lcall
dec
mov
scas
and
cmc
mov
push
jo
jmp
mov
inc
inc
xchg
jb
mov
jne
aam
enter
arpl
push
push
lock
cltd
out
and
or
push
movsl
outsl
ret
test
insl
and
jge
lea
dec
and
sub
cwtl
dec
ljmp
in
cli
sarb
cltd
and
dec
fldt
jle
fs
scas
push
jge
nop
imul
mov
sub
cmp
sub
scas
das
sbb
and
aas
bound
xchg
popa
push
int
daa
inc
mov
mov
xchg
inc
pop
hlt
lret
and
xor
pop
addr16
scas
out
hlt
xchg
or
mov
dec
fwait
and
enter
jg
test
insb
and
shl
clc
jbe
lods
cmc
arpl
xchg
xorb
test
fstps
xor
xor
ret
es
shll
pop
test
addr16
rol
mov
jge
sub
xchg
dec
mov
mov
cmpsb
mov
and
push
or
and
dec
xchg
mov
inc
or
fs
pop
add
cmp
aas
out
sbb
mov
jo
adc
push
pop
push
ror
out
test
cmp
sub
or
sbb
jmp
cmpsl
sub
pop
inc
mov
jl
push
int3
fwait
cmc
jg
into
mov
push
dec
adc
idiv
jmp
loop
inc
push
cmp
push
das
xchg
pop
jae
and
or
push
and
mov
loope
push
dec
mov
rcrl
xchg
xchg
lods
sbb
adc
mov
jo
shll
les
aad
jmp
dec
repnz
in
loop
mov
js
jnp
cmc
idivb
pusha
inc
push
outsw
mov
test
jbe
daa
xlat
pop
mov
dec
lahf
and
xchg
xor
scas
mov
outsb
sub
aad
jle
popf
cmp
cs
add
cmpsl
cmp
pop
lods
jnp
or
in
ljmp
jne
xchg
fdivl
lock
pop
xchg
mov
cld
repz
fidivs
rdmsr
sub
inc
aaa
mov
mov
in
test
fnsave
scas
lret
add
outsl
sub
pop
mov
jg
out
out
jae
fcoms
pop
inc
test
lock
inc
sbb
push
mov
sbb
popa
lea
xchg
adc
fcmovne
fsub
loop
dec
jg
sub
dec
mov
shl
ds
int
mov
add
sbb
lea
mov
xor
sbbl
repnz
adc
mov
clc
mov
inc
xor
mov
inc
push
add
jge
sbb
insl
rcrb
sti
jne
add
fldenv
imul
out
jne
cwtl
scas
add
daa
add
out
cmp
movups
adc
daa
in
push
sbb
xor
psrad
and
ljmp
jecxz
in
mov
dec
jns
xchg
dec
sbb
adc
add
outsl
sbb
in
cmp
push
lcall
pop
cmp
daa
pop
xchg
push
or
xlat
push
push
jnp
movsl
cmp
negl
fdivs
lds
fs
jno
sti
sub
out
adc
cmc
mov
push
repnz
jmp
cmc
adc
or
jnp
sbb
sbb
jne
inc
xchg
adc
mov
fists
cli
int3
adc
jbe
mov
test
jecxz
out
and
mov
shr
in
pop
loopne
cs
add
dec
xchg
xlat
scas
mov
repz
fsts
ljmp
cwtl
sub
loope
push
fwait
jb
mov
ds
test
and
xchg
push
jle
int3
in
jnp
lods
mov
push
je
sbb
call
push
out
xor
inc
mov
add
outsb
pop
scas
cmp
out
mov
inc
add
push
pop
jb
xor
or
es
push
daa
sub
hlt
fdivr
pop
bound
adc
inc
push
fstl
mov
stos
shlb
es
push
shrb
mov
push
pop
mov
cltd
iret
rorl
mov
push
or
pop
mov
xor
dec
popa
insl
pushf
sub
rclb
xor
popf
mov
inc
lahf
dec
ljmp
inc
mov
add
inc
hlt
mov
out
sub
pop
add
xor
adc
adc
stos
adc
xor
xchg
mov
imul
dec
mov
push
pop
mov
pop
cld
aad
mov
inc
dec
lods
jp
cli
sub
add
ret
out
in
pop
or
in
in
sub
outsb
jbe
addr16
inc
rolb
scas
sahf
sub
or
int3
insl
xor
xor
addr16
jnp
mov
xchg
test
jnp
xchg
push
das
test
sub
push
inc
fistpll
clc
push
and
push
sub
or
xor
fiadds
pop
aam
pop
pop
cmp
pop
add
mov
notb
outsb
pop
xchg
inc
pop
aam
inc
jns
in
fmuls
inc
sbb
inc
ds
and
lock
cmpsl
fwait
aam
or
and
hlt
or
out
cmp
test
cltd
rol
test
push
adc
insb
jbe
adc
dec
cmp
clc
test
dec
mov
call
sub
jp
xchg
adc
jp
cmc
enter
push
xchg
mov
xchg
testb
test
pop
bound
nop
ja
rcrl
mov
jnp
jecxz
call
mov
jp,pt
pop
movsb
xchg
repnz
daa
rorl
adc
push
cmp
and
xchg
mov
ja
stos
movb
dec
dec
pop
stc
test
je
sub
adc
mov
in
les
dec
test
aas
rcrl
jbe
mov
push
adc
mov
icebp
jl
dec
in
push
imul
xchg
andl
sbb
jecxz
lret
lea
mov
xchg
mov
and
cltd
jle
cmp
int3
iret
xchg
mov
data16
jns
fsts
pusha
add
push
dec
xchg
cli
in
mov
stc
lods
int
jb
jne
dec
mov
out
aaa
jmp
insb
enter
inc
mov
mov
mov
fs
sbb
mov
das
and
mov
xchg
rorl
xor
imul
push
pop
hlt
test
jbe
fstps
popf
inc
dec
pop
push
mov
in
and
arpl
xchg
jl
js
scas
adc
mov
dec
insl
aas
imul
push
jns
inc
nop
jbe
fisubs
dec
gs
mov
jecxz
out
imul
adc
test
xchg
or
fsubrs
bound
mov
jbe
aas
stos
arpl
subb
das
and
adc
scas
lret
cli
pushf
add
add
mov
nop
fwait
cmp
and
inc
hlt
out
sub
test
mov
lret
mov
fnstsw
fistps
out
inc
mov
sarb
pop
push
and
mov
loop
cmp
mov
xchg
adcl
out
mov
ret
push
push
pop
and
jp
scas
decb
cmp
jl
mov
subb
in
stc
mov
jecxz
scas
dec
pop
push
repz
imul
xor
out
shll
xchg
inc
xchg
add
stc
in
cmp
dec
dec
dec
add
mov
and
xor
jecxz
aad
adc
fs
scas
cmp
or
leave
cmp
int
dec
lfs
mov
xlat
cltd
out
sbb
cld
jle
jl
cmc
cld
in
mov
jp
pop
dec
pushl
mov
mov
ja
mov
sub
out
sub
or
dec
pop
xchg
push
inc
cwtl
pop
loop
xor
dec
fs
fucom
sub
xchg
xchg
dec
scas
cmp
xchg
push
sbb
mov
cmp
out
in
mov
sti
outsb
ljmp
pop
jns
out
notl
cs
jle
xchg
xor
push
imul
lea
or
neg
add
and
dec
fnstenv
mov
sub
push
lods
mov
push
cwtl
mov
loop
and
aam
dec
or
sbb
lret
push
or
cwtl
dec
movsb
inc
sbbb
sbb
mov
jl
jge
aam
das
in
fstpl
push
and
cmp
lock
push
mov
pushf
mov
pop
out
movsb
rcll
jl
ljmp
les
jae
or
int
mov
inc
lock
adc
test
jno
daa
popl
mov
sbb
push
and
sub
cwtl
push
lahf
mov
psubd
sbb
xchg
or
aaa
push
shll
addb
std
jb
hlt
jno
nop
pop
xor
out
jns
pushf
lahf
imulw
nop
jo
std
xor
cmpsl
add
jmp
dec
lcall
cltd
addr16
push
fisubrl
sub
cmpl
stc
fnstcw
cld
cmpsl
sub
cli
jmp
adc
and
sbb
movsb
aas
loop
aad
pop
imul
jecxz
push
adc
idivb
add
jbe
push
pop
adcl
outsb
sbb
jno
pop
jae
adc
add
pop
pop
in
ljmp
pop
and
fldenv
insb
cwtl
cmp
cwtl
arpl
mov
dec
cmp
pop
add
das
lcall
push
ficompl
fists
test
repz
xchg
mov
xlat
push
xchg
mov
scas
scas
or
adc
insb
xor
dec
bound
dec
bound
cli
or
insl
les
daa
sarl
xor
loop
ret
into
xor
mov
out
fstps
inc
or
andl
mov
sbb
dec
xor
mov
xchg
mov
cmp
ds
fisubrs
add
mov
mov
lahf
pop
loopne
or
rorb
pmaxub
push
scas
mov
movsl
push
test
cmpsl
rolb
jno
inc
mov
sub
lods
or
stos
sub
jns
shrl
push
loope
inc
mov
fnsave
fistpl
cmpb
leave
push
and
mov
inc
adc
lods
mov
js
dec
scas
arpl
pop
sti
dec
cmp
pop
pop
movsb
daa
orl
jb
jbe
fisubl
mulb
and
outsl
dec
push
xchg
and
daa
dec
les
jg
aam
mov
inc
dec
shl
inc
int
cli
mov
mov
lret
pusha
lret
or
sbb
cli
dec
mov
sbb
std
push
sub
or
pushf
jbe
xor
adc
test
fld
xchg
call
lds
addb
dec
xchg
ja
outsl
outsl
in
lods
lods
stos
mov
mov
pop
push
mov
cmpsb
stos
mov
sbb
pop
cmp
popa
and
xchg
pop
jge
xor
pushf
sub
into
dec
sub
add
enter
mov
dec
fldenv
sub
pop
jle
ja
ljmp
cld
aaa
stc
sbb
mov
push
fwait
pop
dec
lcall
or
mov
out
xchg
mov
mov
mov
js
jne
xchg
das
inc
xor
push
sbb
scas
adcb
sub
cmp
push
mov
and
movl
inc
pop
cld
inc
fucomp
jae
clc
mov
das
mov
fwait
repz
sub
sub
xlat
xor
xor
cmp
enter
aaa
mov
sahf
mov
mov
jle
addr16
cmp
or
jno
jl
inc
dec
fisubrl
fmull
fadd
shrb
cmp
mov
out
stos
inc
xchg
lock
roll
sarb
je
mov
pop
imul
xor
repnz
push
sbb
arpl
or
pop
sahf
pop
pop
imul
mov
aad
sub
jl
out
pop
xor
and
push
inc
gs
jecxz
std
jbe
es
fs
imul
scas
fldt
in
std
in
jmp
mov
je
sbb
and
popf
rolb
mov
in
cmpsl
and
loop
mulb
clc
push
sub
mov
lcall
adc
push
clc
imul
out
or
jbe
jne
pushf
in
punpckhwd
bound
clc
lods
inc
push
pusha
sub
repz
dec
inc
add
jnp
clc
enter
bt
repz
push
lret
or
add
loop
rolb
js
inc
in
ja
stos
fistpll
outsl
or
and
mov
outsb
repz
xchg
dec
mov
xchg
repnz
pop
gs
lahf
mov
sbb
lcall
xchg
notb
das
ja
subb
xor
fldcw
je
xchg
lods
data16
cltd
outsl
std
addr16
ja
sub
xor
in
push
insl
or
adcb
shll
sub
lahf
outsb
mulb
test
pusha
and
cld
cmp
adc
in
enter
or
fmull
dec
mov
sub
rorb
pop
stos
nopl
shrl
std
icebp
mov
imul
scas
add
nop
shll
in
push
jg
mov
mov
dec
xchg
outsb
shrb
xor
pop
mov
movsb
bound
mov
in
and
pop
pop
insb
in
addr16
mov
jle
mov
hlt
jmp
sub
sub
mov
add
sbb
cwtl
jmp
dec
out
dec
jb
icebp
lea
es
jecxz
pop
xor
iret
xor
push
or
test
bound
das
mov
lods
xchg
int
loope
push
cmp
fistps
les
sbb
loopne
stos
adc
lret
or
xchg
fs
add
add
mov
in
mov
ja
inc
push
dec
cmp
stc
inc
add
add
loope
xchg
pop
or
out
decb
cmp
and
fs
fildl
xchg
dec
mov
mov
nop
mov
hlt
test
sbb
out
mov
lds
movsl
sub
mov
push
sarl
in
rcrb
mov
movsb
sbb
out
pop
sub
cmp
outsb
cltd
in
sub
push
cmpsb
mov
push
pop
rolb
adc
pop
jle
jmp
or
jecxz
movsb
out
sarb
mov
rcll
rcrb
cltd
nop
and
jecxz
daa
mov
mov
jae
add
stos
push
fs
ret
popf
or
push
fsubrl
jno
and
mov
jne
daa
xor
and
add
sti
jo
jne
movsl
cmp
jnp
sub
cmp
div
mov
cmp
and
sub
inc
pop
enter
cmp
inc
mov
fdivs
cmpsl
jp
pop
je
or
sbb
insb
xor
popa
mov
pop
clc
insl
xlat
push
jo
jae
stc
inc
cmp
push
into
mov
out
das
stc
lcall
xor
call
add
dec
cmp
xchg
sbb
xchg
push
aad
in
scas
jb
lock
xchg
cld
xor
mov
sbb
fisubs
add
and
ret
jmp
popa
lods
push
out
fimuls
xor
jns
or
scas
inc
int
mov
ds
bnd
lea
inc
cmp
jo
and
pushf
xchg
daa
pop
mov
nop
xor
aaa
nop
dec
xchg
cwtl
adc
mov
and
and
in
sbb
add
xchg
push
lods
or
dec
fistpl
sbb
or
sbb
leave
movsl
push
pop
mov
data16
mov
fcmovnu
jle
inc
adcb
bnd
xchg
push
hlt
and
sub
je
das
or
pop
test
dec
imul
popa
lds
sub
mov
aaa
jnp
cmp
xlat
test
lea
loop
out
dec
clc
xchg
nop
xchg
aam
and
cmpsl
jne
mov
mov
incb
shr
popf
fisubs
jae
sub
lods
sti
insb
xor
mov
aas
sahf
xor
ss
std
loop
outsl
sub
push
pushf
test
mov
xchg
xor
mov
stos
iret
movsb
sub
roll
out
add
cmp
push
imul
mov
inc
iret
sar
jle
lods
pop
jns
insb
mov
sbb
and
rcl
loopne
push
xlat
faddl
cwtl
and
out
je
pop
fcoms
bts
push
scas
pushf
xchg
addb
and
mov
out
sub
adc
filds
test
cs
es
movsl
mov
test
int3
sbb
inc
mov
jbe
mov
pop
pop
popf
mov
ror
cltd
in
xor
lea
sbb
pusha
ds
sbb
push
mov
xor
mov
add
and
jmp
push
dec
lcall
cmp
mov
loopne
mov
sbb
dec
fistpl
push
out
mov
xorl
xor
repnz
jge
out
aad
mov
lods
add
dec
outsb
or
andb
mov
push
js
jmp
dec
loopne
sbb
mov
mov
rorl
or
dec
push
jmp
mov
pop
repnz
bound
inc
loope
mov
sub
pop
inc
pop
xchg
pop
push
and
lock
rolb
inc
loope
jno
and
mov
mov
dec
fs
sti
mov
add
dec
and
mov
fnsave
test
lcall
imul
pusha
push
mov
mov
mov
les
out
mov
lret
and
lcall
pop
scas
dec
scas
pusha
add
and
cmc
fwait
jbe
or
mov
test
push
xchg
xchg
cmp
sub
xchg
or
mov
cmp
mov
jnp
xchg
sub
xchg
mov
shlb
stc
dec
dec
out
call
dec
and
mov
mov
dec
in
ja
push
shll
sub
cmp
sub
add
xchg
pop
in
or
cwtl
or
dec
or
in
clc
frstor
cmp
and
add
gs
pop
inc
or
sbb
sbb
sbb
ljmp
pop
sbb
leave
mov
adc
push
movsl
rcr
scas
rolb
shlb
mov
shrl
mov
push
push
jge
cmp
mov
insb
call
jbe
and
ficoml
jge
xchg
inc
mov
int3
add
hlt
mov
mov
fisubrl
fnstenv
cmp
xlat
je
jae
mov
call
mov
pusha
vandnps
add
push
pop
mov
mov
add
ja
push
clc
dec
or
fcoms
mov
daa
push
jb
push
inc
sub
test
lods
or
ja
mov
pusha
pop
or
lret
jne
sbb
clc
sbbb
add
mov
sti
dec
pop
movsb
mov
xchg
xchg
add
test
les
loop
mov
dec
scas
in
xchg
nop
mull
xor
int
dec
xor
cli
lock
dec
jbe
pop
mov
cmc
ja
pop
or
jle
mov
or
out
out
push
mov
adc
mov
mov
add
insb
sub
push
inc
js
adcb
jg
pop
mov
add
sbb
add
ret
in
inc
lock
pop
imul
in
dec
or
pop
int
imul
fmul
inc
or
sarb
insl
or
pop
enter
iret
repnz
push
mov
add
xchg
xor
pop
cs
dec
cmp
mov
pop
xlat
xor
push
cmpsl
cmp
stc
ja
mov
mov
mov
les
ds
xlat
xchg
xchg
loopne
add
mov
add
pop
xchg
jnp
loope
jmp
das
add
adc
sbb
adc
dec
dec
add
lds
lods
test
or
mov
cs
fcoms
test
mov
pop
shlb
out
adc
pop
pop
xchg
push
sub
fcoml
pop
push
mov
sbb
data16
jmp
pop
fcompl
lahf
adc
pushf
roll
or
mov
insb
sbb
cmp
mov
aaa
dec
mov
stos
push
dec
aaa
je
movsb
in
pop
in
jnp
flds
test
mov
mov
cmp
jmp
and
adc
mov
sbb
mov
pushf
jp
pop
and
cmp
pop
mov
push
push
enter
or
scas
fs
add
lret
out
lock
divb
mov
xchg
jns
sbb
lods
data16
adc
push
xchg
xor
add
mov
movsb
push
xor
dec
xchg
in
mov
imul
inc
push
rcll
adc
cltd
or
ja
add
sbb
jns
pop
or
pop
movsl
inc
test
add
cmpsl
xchg
mov
addr16
ret
mov
out
xchg
xor
into
xchg
es
sub
mov
test
cli
aam
aam
iret
pop
icebp
pop
mov
loop
lods
cwtl
xchg
sbb
xchg
mov
add
out
lret
cmp
es
je
je
js
scas
icebp
xor
and
inc
pop
std
push
mov
add
mov
sub
leave
incl
sbb
pop
jp
pop
cmp
push
mov
or
and
cmp
mov
subl
shlb
jge
scas
popf
dec
sbb
and
mov
idiv
add
and
lahf
and
mov
cmp
xchg
movsl
adc
dec
ret
mov
inc
push
and
jne
repz
dec
stos
inc
popf
sbb
pop
stc
dec
mov
jg
popa
and
das
scas
mov
cmpsb
push
int
int
sbb
inc
imul
sub
push
cs
test
pop
sahf
andb
loope
pop
xchg
lock
mov
pop
repnz
sahf
xchg
cld
xchg
roll
pop
xor
shlb
stc
xchg
push
sbb
lcall
imul
leave
adc
sbbl
add
arpl
hlt
mov
gs
fldcw
lea
xor
jae
push
mov
dec
xor
xor
and
negb
add
mov
push
imul
or
mov
aad
dec
or
loope
sub
lcall
cmp
fstenv
jns
sbb
jmp
test
test
into
xchg
dec
adc
cmp
in
fstl
mov
fisubs
arpl
testb
jle
test
jle
adc
mov
adc
faddl
mov
adc
sbb
mov
jo
loop
es
mov
lea
inc
into
mov
sub
adc
sub
pop
mov
adc
test
fcmovnu
cmp
jp
jl
imul
or
mov
sbb
and
mov
cmc
jge
or
cmc
test
or
pusha
xor
pop
push
lahf
imul
popf
into
push
pop
ret
stos
xchg
adc
mov
cmp
sub
fisttps
aam
jg
xchg
or
xlat
js
ds
pop
inc
arpl
andb
ss
and
lret
fsubr
pop
mov
loopne
xchg
cmc
stos
push
xchg
dec
pop
sub
mov
xor
xchg
mov
fwait
bound
jle
cli
xchg
das
dec
xchg
dec
scas
and
scas
sub
popa
add
jmp
adc
push
mov
dec
loopne
and
mov
mov
rcrl
mov
lcall
ja
adc
and
roll
inc
jne
pop
mov
les
dec
pusha
jl
notb
sub
mov
jne
loop
xchg
lods
dec
jmp
push
mov
dec
sbb
push
loopne
xchg
mov
add
xchg
mov
js
adc
pop
jnp
mov
leave
repz
imul
mov
cmp
lea
fstpl
js
mov
push
mov
sub
adc
or
std
xchg
loope
movsl
jae
ljmp
mov
ss
pop
fcomip
pop
sbb
mov
jge
cmp
movsl
or
sti
cmc
pop
mov
mov
adc
pop
ljmp
sub
add
sbb
pop
imul
cmpsb
sub
aas
pop
test
xchg
add
sub
add
ret
mov
popf
mov
inc
rol
xor
inc
pop
aaa
mov
pop
jecxz
int
lcall
fldl
jecxz
sub
jl
pop
sub
xlat
mov
call
rcrb
mov
dec
dec
push
enter
xchg
sbb
aam
popf
sub
sbb
decl
cmp
push
push
repnz
jae
lea
adc
and
cmp
adc
cmp
pop
loop
popl
fwait
ja
out
adc
lods
push
inc
addr16
imul
adc
jne
shrb
add
xlat
or
add
push
popa
inc
stos
xor
adc
and
push
lahf
leave
xor
sub
cmc
loopne
stos
cmp
jecxz
out
adc
inc
imul
push
aas
xchg
jmp
ret
lods
sti
mov
mov
sub
notb
nop
inc
ja
cmp
push
cltd
sahf
mov
cmp
int
push
push
cmp
push
inc
mov
hlt
lock
pop
push
shll
cmp
int3
mov
xchg
pushf
push
inc
addr16
add
xchg
or
jnp
mov
fst
xchg
cs
addl
push
push
imul
ja
aaa
inc
ds
mov
push
ror
mov
inc
jo
ja,pn
shrl
scas
fildl
sbb
cmc
sbb
sahf
and
movsb
insb
xor
lock
aad
mov
iret
add
test
jge
mov
rorl
in
out
jbe
ret
cmp
test
and
testb
call
and
inc
and
xchg
lcall
lods
imul
scas
push
xchg
negl
xor
adc
mov
cmp
leave
sbb
daa
mov
lods
fs
mov
jae
fs
scas
jns
pop
dec
ljmp
sti
push
cmp
call
and
int3
mov
scas
stc
pop
ja
imul
mov
inc
push
sahf
scas
fwait
out
pop
andl
repnz
fbstp
int3
sbb
cli
pop
xorl
mov
ss
jne
les
sarl
xor
leave
xchg
out
cmp
jp
pop
jns
rolb
pusha
cmpsl
fbstp
pop
cs
mov
repz
jb
jae
ds
xchg
lret
rorb
aas
inc
lea
ljmp
jno
inc
cmc
std
push
xlat
mov
or
aam
push
jp
lret
sahf
lods
fwait
push
or
adc
xor
mov
mov
imul
push
lock
imul
bound
add
xor
pop
movsl
mov
xchg
xor
popa
int3
or
fucomp
aaa
iret
sarl
lcall
sub
fsubrs
inc
xchg
xchg
int
xor
xor
xchg
nop
movsb
test
repz
iret
sbb
cmp
jae
aad
mov
in
mov
aad
adc
dec
iret
lret
or
mov
ss
xchg
loopne
insb
pusha
fistpll
mov
dec
xor
les
xchg
loopne
stos
xor
shl
inc
aas
mov
sbb
and
out
cmp
mov
stos
xchg
fs
cmp
cli
test
jge
imul
frstor
sarb
push
mov
mov
je
mov
xor
ficoml
das
adc
xor
or
pop
jae
cmpsl
dec
scas
cmp
cli
dec
outsb
iret
fistps
cld
dec
lahf
push
adc
xchg
rolb
loopne
inc
stc
arpl
jge
adc
sub
ss
test
sti
cs
xlat
ret
xchg
insl
movsl
mov
cwtl
mov
call
cs
dec
icebp
dec
sti
jno
dec
pop
sub
aaa
dec
scas
popf
pop
pop
fisttpl
xchg
jl,pn
push
and
aas
inc
xor
scas
test
inc
aaa
push
outsl
jne
dec
mov
fwait
jl
mov
popa
aas
aas
mov
cmp
js
inc
mov
xchg
jg
mov
inc
popf
dec
pop
push
jbe
push
push
int3
push
icebp
jp
bound
clc
aam
cwtl
xchg
xlat
int3
cltd
mov
das
adc
fwait
push
dec
lcall
cs
pop
sub
addr16
add
leave
int3
lcall
lcall
daa
sbb
cmp
aaa
jp
or
cmp
jge
int
sub
jmp
es
jae
push
lahf
sub
ficomps
imul
xchg
int
xor
dec
inc
repnz
mov
bound
cmp
movsl
sub
movsb
hlt
insl
xor
enter
inc
loopne
push
sbb
out
pop
mov
outsb
cmp
sbb
loop
jg
cs
out
jp
mov
and
in
repz
dec
mov
pop
negb
or
fnstenv
jnp
ja
cltd
insb
xor
fdivl
xor
cs
ss
and
mov
xor
imul
dec
adc
repz
jae
cmp
pop
and
or
cwtl
jecxz
rcrb
and
pop
fnstenv
mov
push
dec
push
inc
dec
cmp
lret
out
loopne
arpl
jno
xchg
aam
sbb
clc
scas
pop
xor
push
aaa
inc
or
int3
sbb
xor
pop
hlt
movsl
arpl
or
outsl
into
fcmovne
std
repz
data16
adc
inc
mov
lea
das
ffreep
or
jno
dec
mov
cmp
add
and
mov
lods
in
push
inc
push
out
xchg
aas
cwtl
push
call
mov
rorb
ljmp
push
loop
pusha
add
sub
or
add
repz
dec
imul
and
push
xor
inc
cwtl
cli
shl
in
adc
xchg
shrb
in
imul
test
xchg
xor
fwait
mov
xchg
fildl
mov
cmpsl
out
shll
jecxz
es
xchg
aad
adc
test
dec
dec
fs
mov
cmc
xchg
hlt
and
daa
mov
pop
jl
xchg
aaa
call
insl
pop
fildl
lock
dec
lods
push
dec
dec
pop
dec
aas
int
push
test
out
sub
das
cmp
movsl
cmp
popa
mov
outsb
mov
or
cmp
and
std
cltd
ret
shlb
sbb
mov
mov
in
pushf
inc
dec
lods
ljmp
rcrl
push
xor
lods
mov
mov
or
add
rclb
test
xchg
sub
add
int3
jns
inc
mov
stc
push
rcrb
pop
cwtl
pop
into
insb
enter
test
leave
jae
inc
int
sub
mov
es
xchg
dec
sahf
ja
adcb
mov
lods
sub
jnp
lahf
movsb
push
out
movsb
lret
popf
fmull
jns
xor
cld
pushf
push
imul
mov
int
test
je
mov
cld
adc
scas
jb
mov
push
cmp
hlt
pop
pop
jb
add
pop
bound
mov
rorl
aam
out
rcll
adc
pop
sti
test
out
shll
pop
jbe
pushf
fcmovu
test
and
mov
xor
mov
jecxz
insl
rcl
push
add
pushf
mov
imul
pop
mov
testl
shl
in
push
lcall
das
mov
clc
in
dec
mov
leave
jmp
out
rcr
mov
repz
arpl
mov
sub
inc
jp
fwait
mov
cmp
adc
fwait
out
rorb
test
sub
rorb
jns
dec
pushf
pop
in
and
arpl
sub
lahf
aaa
ret
mov
jbe
mov
xlat
jge
or
fnsave
xorw
lret
mov
leave
out
pop
push
leave
adc
std
dec
xor
inc
adc
inc
jl
sbb
inc
mov
xchg
push
lahf
flds
notl
leave
push
adc
jge
sub
add
test
add
mov
mov
xchg
mov
pop
and
jge
incl
out
adc
mov
jne
inc
cmpsb
movsl
shrl
popa
imul
jecxz
mov
xchg
int3
outsl
sub
call
outsb
dec
xchg
and
iret
pop
nop
adc
mov
or
ficompl
fsubrs
insb
cmpsl
and
mov
loop,pn
xor
das
adc
pop
mov
fwait
add
int
cli
xlat
push
mov
call
ss
push
add
xor
or
subb
xchg
add
jl
lret
mov
cli
repnz
push
jno
or
cmpsl
test
aas
xchg
jp
insb
sbb
jg
mov
mov
mov
jnp
push
dec
addr16
cli
movsb
cmp
sbb
aam
ja
aas
clc
lods
pusha
xor
cmp
icebp
mov
int3
cmpsb
cld
in
jns
ja
inc
ret
filds
fnstsw
xchg
adc
pop
jae
mov
in
push
mov
and
inc
popf
das
jp
in
lods
mov
jecxz
sahf
test
lret
rcrl
into
pusha
inc
inc
pop
mov
pusha
imul
movsb
mov
cs
push
in
sti
hlt
fidivrl
popf
in
sbb
stos
shll
sbbb
pop
add
nop
push
fists
ret
mov
out
lret
xorb
inc
adc
aas
cmpsb
adc
push
mov
data16
lahf
dec
push
add
push
repnz
push
inc
or
lret
mov
mov
dec
std
sbb
stos
lods
jae
mov
and
adc
imul
mov
outsl
or
loopne
mov
inc
out
arpl
pop
inc
je
shl
mov
xor
jmp
push
pushf
in
in
leave
or
sub
roll
xchg
push
xor
aas
jae
arpl
xor
dec
aaa
stos
cs
cmp
push
or
in
add
push
loope
xchg
jns
add
and
es
mov
xor
pushf
sahf
mov
int3
pop
fsubs
scas
enter
loope
dec
push
pop
imul
jo
jp
xor
sarl
sbb
fcoml
dec
pop
arpl
and
sub
pop
insb
pop
and
mov
mov
ljmp
and
fdivr
data16
xchg
jmp
scas
stos
cmp
xlat
sbb
inc
or
cmp
lods
mov
lock
cwtl
inc
xor
mov
jns
lea
dec
mov
frndint
sbbb
fprem
cmpsb
mov
add
push
out
xchg
adc
shll
idivl
inc
lea
add
aas
dec
in
lret
mov
or
pop
icebp
mov
jl
stc
inc
pusha
push
movsl
push
cmp
insl
cmp
outsl
out
and
arpl
mov
test
xorb
cltd
sub
dec
sub
adc
push
pop
push
mov
idivb
mov
test
test
ret
and
jmp
push
ficompl
mov
imul
pop
stos
jns
add
mov
ss
inc
lds
push
dec
out
loopne
cmpsb
testb
cmp
jns
cmpsb
lea
aam
hlt
xor
ret
xchg
lahf
fs
mov
test
in
dec
stc
jmp
orl
rolb
lret
fdivp
add
push
nop
adc
sbb
clc
push
dec
mov
test
sub
push
pop
test
or
ficompl
movsb
test
in
adc
dec
aaa
jnp
mov
and
fidivl
mov
and
mov
daa
lcall
fidivs
lcall
sub
mov
out
mov
or
pop
push
lahf
jge
xor
je
add
xchg
dec
outsb
pop
outsl
pop
xchg
adcb
sub
jnp
lea
ljmp
addr16
stos
in
mov
in
mov
add
pop
mov
cmpsb
cmp
fmuls
sub
adc
out
test
pop
out
jno
push
and
dec
addr16
pop
xchg
lods
inc
pop
and
leave
jmp
rorl
jae
sbb
repz
jnp
cli
adc
out
jo
daa
mov
push
shrl
dec
xchg
fildll
push
dec
mov
push
ds
js
leave
mov
test
or
xchg
or
cmp
dec
jecxz
xchg
push
nop
loopne
es
negb
cmc
loopne,pn
add
std
cmc
je
or
ja
adc
movsb
pop
ltr
pop
xchg
les
fidivs
shlb
andl
inc
popf
cmc
loopne
xchg
aam
mov
mov
pusha
sbb
adc
sub
je
inc
or
sbb
loope
add
loop
mov
stc
shrl
dec
dec
or
mov
mov
loop
and
out
pop
icebp
dec
das
hlt
insb
cmp
je
mov
cmc
repnz
and
sbb
test
xor
inc
iret
mov
jl
nop
in
ljmp
stc
pop
roll
sub
popa
push
cmc
lcall
bound
xchg
lcall
inc
test
sbb
inc
xor
xchg
sbb
pop
mov
sahf
mov
es
xor
inc
inc
cld
inc
jge
inc
jno
lds
stc
add
inc
repz
inc
push
or
push
xor
push
mov
lcall
pop
fcmovnb
mov
jl
dec
pop
rorl
stc
push
call
or
mov
mov
xor
or
push
push
or
jb
call
xchg
or
inc
ljmp
add
into
mov
and
mov
mov
lods
push
pop
stc
sub
adc
lcall
push
inc
into
into
mov
cld
fiaddl
rcrl
jb
dec
ret
cli
add
in
scas
daa
add
cmp
insl
jg
mov
int3
add
popa
shlb
dec
int
aam
xlat
cwtl
stc
addr16
push
loopne
ret
dec
xchg
xor
ror
test
repnz
cmpsl
cwtl
fst
cwtl
or
rorb
jbe
add
xor
hlt
fistps
jmp
add
lock
xor
stc
ljmp
mov
cwtl
arpl
inc
lret
stos
lods
sbbl
inc
pushf
fstpl
jge
fdivrs
cmpsb
xchg
push
inc
imul
mov
loop
pop
dec
jno
dec
mov
test
xchg
inc
cmpsb
mov
pop
sbb
mov
lret
lea
cmpsl
fld1
lods
jno
xlat
outsb
pop
aas
aam
out
and
mov
pusha
dec
loope
dec
ss
or
mov
jb
adc
mov
pop
mov
xchg
aam
or
arpl
popw
sbb
fs
xchg
out
sub
stos
loop
pop
fs
sbbl
cltd
push
test
icebp
test
mov
mov
jcxz
addb
mov
imul
fldcw
inc
shl
and
sahf
cltd
inc
inc
cwtl
notb
jno
fs
call
or
aas
inc
mov
mov
inc
mov
or
sarb
aas
mov
dec
je
sbb
mov
jmp
push
pusha
dec
rolb
jg
int
rep
ret
ret
popf
push
cmp
cmp
scas
push
fnsave
lahf
xor
push
sarl
lcall
shll
mov
out
or
adc
iret
pop
push
push
or
iret
fmuls
or
orps
push
pop
sub
cld
sbb
lods
lret
fcompl
jl
push
xchg
mov
in
pop
incb
in
push
std
in
rcl
sbb
cmp
push
inc
xlat
xchg
push
cmp
ficoml
xchg
fistpll
lds
inc
xor
lret
jg
push
push
jne
sti
loopne
mov
add
jle
push
push
sub
xchg
pop
mov
pop
gs
xlat
pop
xchg
fmull
sub
and
je
paddusw
call
lcall
and
cli
mov
jae
jae
xor
jl
rcll
iret
cltd
lret
lds
inc
push
loopne
dec
aas
ret
lds
pop
sub
shlb
out
xchg
mov
mov
mov
movsb
mov
aaa
push
dec
jbe
mov
mov
mov
stc
dec
cmp
js
daa
rolb
jbe
push
jo
sub
mov
int
dec
in
xlat
fidivs
xchg
fadd
lahf
and
sahf
sbb
lcall
loop
lcall
sbb
sbb
gs
jl
dec
cld
scas
cmp
ret
sbb
fisttps
cltd
pop
xor
lods
int
fsubrl
sub
mov
xchg
mov
jmp
sbb
gs
jnp
rclb
mov
dec
pop
adc
or
pop
push
daa
push
push
push
and
repz
xor
ds
mov
scas
push
push
dec
mov
outsb
fwait
and
movsl
sbb
mov
cld
imul
in
das
test
std
xchg
repz
cs
andl
stc
fadds
push
test
sbb
loop
daa
mov
iret
push
mov
loope
or
xor
test
dec
adc
dec
sbb
sub
push
cld
popf
jle
xor
jmp
mov
lret
dec
imul
mov
cwtl
or
push
bound
or
dec
inc
daa
inc
cwtl
daa
fdivl
pmulhuw
cmp
js
mov
gs
icebp
fwait
imul
pushf
es
popf
shl
xchg
int3
and
int3
and
imul
pushf
add
int
call
ljmp
ret
std
sub
or
movsb
hlt
int
sbb
pop
ror
and
pop
jle
inc
cmpsb
imul
pop
cli
sub
rcr
icebp
mov
sub
lcall
mov
add
jecxz
imul
push
lret
pop
in
repz
js
and
dec
out
mov
leave
pop
jle
addl
mov
pop
sarl
pop
repnz
inc
call
jns
iret
pop
mov
cwtl
int3
std
cld
sub
daa
les
add
cld
ret
rcl
mov
dec
call
hlt
or
negl
xor
mov
icebp
xchg
insb
pusha
cmp
pop
enter
mov
lcall
sub
sub
lods
add
or
loope
mov
cmp
outsl
dec
aas
jle
inc
or
mov
cld
fidivrl
xor
int3
push
jl
jge
lds
sub
jge
cmc
push
scas
jmp
cld
sbb
sub
jno
popf
lock
cmp
loope
jno
test
dec
inc
outsl
push
push
mov
jno
scas
mov
jbe
mov
mov
adc
xchg
pop
cmp
pushl
mov
cmp
and
mov
sub
dec
xor
push
mov
xchg
xor
jne
enter
movl
test
mov
test
fs
subb
dec
push
xchg
cwtl
pop
push
cmp
cld
inc
and
pop
pop
ja
es
into
cmp
mov
mov
fisubrs
mov
lea
stc
mov
lret
int3
sub
arpl
cmp
ret
xor
arpl
cmp
xchg
outsb
mov
pushf
imul
mov
xor
jp
and
sbbl
stc
xchg
push
shlb
and
mov
lret
into
pop
fldl2t
sbb
sub
xchg
and
xor
aam
fildll
out
dec
ret
repz
mov
fists
jmp
decb
pusha
add
inc
hlt
es
push
fsubrs
das
xchg
int
lods
push
test
inc
shrl
adc
cli
add
cmpsb
or
push
jbe
cmpsl
in
cmp
jmp
mov
aas
subl
movsl
or
add
jo
dec
daa
xchg
inc
sub
out
mov
jge
lds
or
xchg
out
mov
xlat
sbb
leave
xchg
sub
push
xchg
cltd
je
imul
xor
mov
leave
xchg
xchg
pop
adc
jl
fisttps
movsb
and
jbe
stos
sbb
mov
mov
mov
aam
jne
inc
movsl
lea
fs
sbb
cmp
test
mov
cwtl
sti
call
xchg
jne
shll
pop
inc
int3
shl
jae
loope
pushf
jg
es
filds
adc
out
pop
insb
popf
adc
sbb
ss
add
xor
cmp
cltd
lahf
int
xor
push
or
pop
jmp
jmp
orb
pop
xchg
inc
les
push
sbb
movsl
rcl
js
aam
mov
ret
sub
call
adc
push
rolb
jp
sub
mov
cltd
loope
jb
push
cld
int3
sub
or
pop
mov
mov
mov
mov
pop
sbb
mov
mov
sbb
rol
inc
sbbb
dec
inc
fiaddl
dec
subb
and
ljmp
lea
jae
jge
inc
jecxz
jne
sbb
mov
sub
mov
xchg
sbb
loopne
xor
push
insb
popf
hlt
popa
jb
sub
jno
data16
xor
ss
test
xchg
fidivrl
jle
cmp
dec
dec
pop
or
int3
inc
js
mov
sub
jg
push
daa
cmc
add
mov
cmp
fnstenv
sub
pop
sub
push
addr16
and
test
adc
imul
in
and
ljmp
andb
es
dec
sub
aam
xor
les
push
inc
pop
sub
pop
jmp
loopne
dec
cmp
negl
inc
sub
pushf
push
inc
cmp
pop
shrl
mov
in
jne
addr16
and
jmp
xchg
imulb
imul
out
test
sti
pop
movsb
jmp
cwtl
outsb
daa
cltd
sahf
pop
cli
sub
mov
pop
shll
sub
and
sub
sub
repnz
xorl
and
inc
mov
or
sub
sarb
lahf
xor
std
mov
push
mov
and
cmp
mov
outsb
mov
or
inc
pop
sarb
fidivrs
push
lcall
in
or
lds
push
push
sbb
loope
inc
mov
outsl
sub
ja
dec
mov
test
insb
int
xor
dec
pop
push
ja
or
enter
outsl
pop
insl
inc
pop
inc
stos
and
stos
outsb
arpl
aam
jb
xor
jns
and
and
repz
sbb
jmp
or
aad
jg
xchg
lods
push
mov
pop
pop
jp
push
jmp
jnp
push
iret
test
and
inc
or
xor
and
repnz
pop
outsl
cwtl
or
pop
inc
aad
pop
push
push
mov
sub
xchg
xor
inc
dec
pop
mov
daa
mov
vmread
test
mov
and
push
fcomps
mov
out
adc
add
imul
test
nop
pop
je
pop
push
fs
ficoml
ss
jecxz
clc
or
insl
cs
stos
scas
aam
cmpsl
mov
mov
mov
movsl
into
enter
lds
lods
shl
push
aas
mov
pop
sti
dec
rcr
jb
cmpl
sarb
and
and
xchg
dec
dec
dec
ljmp
pop
inc
fldl
in
shlb
test
mov
daa
leave
pop
test
int
xchg
pusha
adc
mov
add
xchg
loop
test
push
hlt
sbb
mov
out
jnp
or
lret
inc
mov
pop
xchg
popf
sub
movsl
daa
rcl
pop
sti
popf
inc
nop
xchg
dec
and
push
or
dec
lods
xchg
clc
cmp
mov
mov
lretw
inc
shr
insb
dec
jge
lret
push
fistps
mov
mov
je
out
sbb
jns
adc
imul
pop
icebp
mov
mov
jno
cmc
xchg
enter
mov
imul
ljmp
stos
push
sahf
push
fnstcw
mov
mov
in
loop
jecxz
imul
xchg
int
jmp
icebp
in
mov
cmp
scas
or
push
and
mov
and
or
rcrl
movsb
cmc
fdivrl
mov
inc
outsb
repz
pop
and
sub
jle
mov
aaa
hlt
and
repnz
and
push
incl
sar
jle
jae
fildl
out
imul
xchg
cmpsb
add
pop
push
repnz
fistpl
jnp
push
inc
std
pop
dec
mov
sti
and
jae
push
cmp
adc
fstl
cltd
sarl
sbb
or
in
cmp
cld
inc
fldcw
push
add
das
jbe
jo
mov
pop
montmul
cmpsb
inc
mov
jl
int
inc
jg
add
arpl
mov
loop
pop
loop
rcll
inc
jbe
dec
cwtl
jp
rclb
rclb
mov
bound
lcall
pop
mov
lds
insb
inc
pop
mov
xchg
out
push
enter
das
fdivrs
mov
add
scas
cli
dec
mov
dec
fcmovb
xor
icebp
cmp
cld
push
dec
out
cld
xchg
mov
and
push
pop
lods
push
mov
cmpsb
js
fstpl
xor
mov
insb
cld
lods
adc
push
mov
pushf
lods
fmuls
les
jne
stos
and
call
pop
dec
mov
mov
out
das
icebp
xorb
les
xor
daa
xchg
pop
xor
xor
or
push
dec
mov
xor
mov
sbb
sti
mov
aaa
push
pop
fld
mov
xor
inc
inc
rcrb
pop
in
hlt
dec
out
jecxz
cld
and
pop
jp
scas
lds
mov
rolb
in
mov
aam
inc
lahf
cli
add
fstpl
or
arpl
aaa
sbb
cld
jns
sbb
mov
sarl
push
aas
pslld
pop
adc
jmp
or
int
mov
pop
lcall
repz
test
out
lret
icebp
scas
push
or
pop
lret
cmpsb
popf
xchg
mov
shl
fnstenv
sub
insl
inc
add
test
xor
cmp
insl
ficomps
dec
in
mov
lock
int
jb
mov
sub
push
ss
jecxz
lds
or
sub
aaa
mov
mov
jmp
std
mov
imulb
pop
bnd
outsb
addb
sub
in
mov
scas
addr16
inc
add
ljmp
mov
jl
or
ljmp
mov
xor
cltd
dec
mov
pop
call
in
les
scas
das
gs
stc
inc
push
pushf
xor
mov
mov
test
dec
pushf
inc
stos
lods
jmp
lods
cltd
xchg
push
mov
and
je
mov
xchg
insl
sbb
je
pop
push
dec
js
mov
mov
mov
insb
xor
jns
push
mov
xor
inc
ja
jle
lcall
out
adc
xchg
sbb
out
in
ds
inc
cmp
jecxz
aaa
mov
pop
xchg
lcall
cmp
ds
mov
mov
xchg
pop
insb
stos
mov
loope
cld
or
sarl
mov
ljmp
push
cmp
jecxz
cs
jp
lret
lahf
dec
jns
popf
addr16
test
popf
and
test
push
iret
cmp
xor
test
add
aad
mov
pop
dec
jecxz
pop
aaa
xchg
mov
pop
ret
mov
repz
add
aas
lds
mov
hlt
push
mov
xor
push
push
outsl
movsb
scas
aad
lock
addl
mov
hlt
movl
std
subl
cmpsl
js
jb
mov
shl
rolb
cmp
and
and
test
sbb
xchg
xlat
adc
cs
pop
sahf
mov
push
push
xor
aam
sbb
stos
add
dec
rsm
jne
lret
movsb
mov
cli
mov
cmp
test
repnz
mov
std
push
lods
imul
scas
ljmp
jo
call
outsl
ja
outsb
jle
mov
xor
scas
xchg
scas
and
lea
push
mov
mov
xlat
mov
add
loopne
fsubrs
or
je
jle
inc
rolb
cmpsl
push
xchg
push
cmp
mov
das
and
dec
ds
fbld
xchg
repz
cmp
push
cld
jno
cld
sub
lahf
push
in
fldl
inc
add
cld
xchg
pop
xchg
daa
push
sbb
mov
loopne
xor
jg
cmp
lock
add
addr16
je
mov
mov
mov
dec
dec
mov
stos
daa
rcrl
loop
or
add
fisubs
pop
jge
ss
lcall
dec
int
loopne
test
outsb
add
cmp
stos
xor
orb
dec
clc
test
pop
mov
outsl
xor
xor
add
adc
xchg
xorb
testl
test
rcrl
addr16
mov
sbb
xor
enter
cmpl
movsl
inc
into
mov
mov
and
sub
jae
cmpsb
push
or
adc
test
lds
out
jne
dec
in
xor
lret
mov
ret
and
or
adcl
in
lcall
or
in
stc
and
lods
lcall
cli
push
fcmovnu
inc
mov
sub
adc
test
jo
or
ss
mov
loopne
sub
push
outsl
ss
hlt
inc
ja
fsubl
hlt
cmp
mov
pop
mov
mov
lods
push
lret
xchg
faddl
jb
pop
or
cli
insl
fistps
imull
mov
ret
xchg
mov
ficomps
icebp
mov
ja
pop
xchg
mov
sbb
mov
in
add
pop
adc
dec
cwtl
push
addr16
sub
mull
xchg
fdecstp
sbb
xor
mov
xchg
sub
or
push
enter
dec
enter
jg
mov
and
lods
mul
je
add
push
fdivrl
fidivrs
xor
or
out
and
sbb
jp
out
daa
mov
sti
jmp
push
mov
mov
lret
xor
xor
or
jecxz
push
stos
mov
pop
sbb
sbb
cmp
fimull
or
sub
das
mov
fldenv
push
cmc
cmpsb
outsb
and
push
stos
or
push
mov
jmp
mov
and
int3
mov
in
pusha
inc
jecxz
lds
xchg
dec
push
aam
dec
mov
stos
gs
cmpsb
call
pop
rcll
push
mov
xchg
sbb
cmc
inc
sub
aaa
dec
jbe
clc
add
dec
sbb
mov
jns
shlb
jmp
out
out
add
ljmp
jmp
inc
lods
pop
mov
or
adc
sbb
es
mov
inc
push
jb
in
shr
jmp
dec
dec
mov
ror
ret
mov
gs
bound
mov
inc
push
aaa
ss
mov
stos
xor
jmpw
add
mov
in
incl
imul
or
inc
movsb
or
xchg
js
cmp
mov
pusha
jb
or
push
xor
je
cltd
daa
ss
in
cmp
scas
movsb
add
dec
aaa
add
test
jl
popl
mov
push
or
mov
std
pop
bnd
cmc
mov
pop
or
dec
lods
xchg
std
cmp
adc
fisubrs
add
enter
mov
std
push
xchg
ficompl
xchg
enter
add
sub
add
push
sti
adc
push
negb
lods
subb
adc
inc
sbb
push
dec
outsl
pop
fimull
jns
stc
adc
fisubl
inc
lret
dec
dec
insb
mull
jecxz
adc
lret
sbb
jp
and
fdivr
je
enter
dec
cmpb
xor
push
dec
into
lahf
mov
push
bound
and
adc
pop
sub
xchg
mov
out
push
pop
jecxz
mov
push
mov
and
or
dec
rclb
data16
inc
cmc
iret
sub
outsb
add
dec
das
mov
adc
xor
push
test
jno
rcll
cltd
pop
fsub
push
loop
fnstenv
ret
jb
adc
pusha
repnz
scas
xchg
jae
test
mov
mov
cs
sbb
lcall
xchg
cmp
pop
loopne
mul
iret
data16
fidivs
test
and
insl
lret
test
int
sti
insb
mov
pop
popf
pop
cmc
mov
and
sub
leave
lret
jl
fildll
test
cltd
std
mov
mov
sbb
int
sub
cli
clc
repnz
mov
cwtl
iret
testb
jecxz
pop
stos
fs
aas
rdmsr
push
fnstenv
xorb
mov
and
movsb
xchg
mov
xchg
das
jp
mov
cmp
jae
lahf
jle
jge
mov
data16
lcall
rcrb
inc
or
nop
test
ret
push
jns
pop
and
and
adc
rol
pusha
inc
sbb
pop
repnz
and
mov
xor
sub
rorb
movsl
sbb
cmpsb
and
jge
cld
jo
adc
jne
fimuls
gs
inc
dec
jnp
in
dec
enter
cmc
fstps
in
sbb
or
pushf
adc
cmpl
cmc
les
adc
pop
sbb
sub
cltd
mov
or
dec
push
add
sub
mov
je
lahf
dec
lcall
sub
push
jo
add
mov
mov
lahf
sbb
insl
push
cmp
mov
mov
mov
cli
cmpl
lock
dec
add
jl
fcomi
sub
in
addr16
int
data16
mov
daa
jae
pop
bound
cmp
popa
xor
enter
mov
lods
jns
roll
lods
xor
inc
cltd
mov
push
xchg
out
push
and
pushf
adc
gs
sub
mov
ss
add
xor
std
lods
je
fildl
inc
mov
xor
in
enter
and
xchg
mov
mov
push
sarl
testb
iret
and
sti
or
lret
sbb
mov
imul
mov
les
or
push
or
adc
mov
fwait
cmp
test
jbe
add
psrlw
fidivl
ljmp
mov
sbbb
xchg
push
or
inc
jbe
imull
ja
aaa
das
push
int
in
scas
xchg
and
and
push
sbb
adc
cltd
lea
and
jge
xor
stos
gs
rcrb
sub
pop
sub
push
rol
xchg
xor
push
xchg
mov
push
cmpsl
add
lods
and
cmp
test
test
lods
xchg
jo
dec
sti
lcall
imul
pusha
or
push
into
xor
das
lods
fldz
fldcw
xor
dec
lods
push
leave
mov
rcll
orl
subb
jo
outsl
jmp
xor
inc
inc
add
repnz
mov
pop
insb
jbe
stc
movb
outsb
js
xchg
es
cmovp
adc
addr16
sub
and
test
frstor
adc
lea
xchg
jecxz
push
sarl
cmpb
jge
jb
insb
adc
pop
test
or
jnp
loope
xor
adc
sbb
inc
fdivp
cs
pop
add
pop
xchg
inc
enter
ret
cmpl
jb
clc
popa
add
xchg
mov
hlt
xchg
outsb
jns
jo
frstor
les
hlt
add
push
aam
xchg
sahf
bound
je
lret
loop
pop
adc
loope
out
adc
cwtl
push
jnp
mov
insb
cmp
cli
pmovmskb
and
into
out
je
adc
or
sbb
ljmp
cmc
push
shll
imul
jg
sub
ss
cltd
push
mov
dec
sub
cmc
sub
imul
xchg
cmpsl
cmp
push
dec
push
loopne
hlt
out
out
push
rolb
cli
push
adc
and
push
pop
pusha
repz
sbb
cld
mov
pop
push
int3
jb
loopne
mov
nop
push
cli
push
es
lret
cmp
enter
adc
je
push
pop
outsl
pusha
rorb
adc
test
test
sbb
jge
or
pop
insb
stc
shl
mov
data16
push
push
into
fs
xchg
push
jle
mov
enter
les
mov
rcl
cwtl
push
repz
mov
frstor
pop
outsb
jp
sub
stc
icebp
jge
or
mov
xor
dec
push
inc
pushf
mov
lcall
sbb
mov
jl
das
xor
repz
dec
inc
imul
mov
inc
cmp
adc
mov
shll
push
ss
cmovs
push
sub
add
icebp
dec
add
pop
fdivrl
and
mov
sti
xorb
stos
cs
mov
int3
inc
faddl
jecxz
dec
outsl
daa
cli
ret
fsubrl
or
xor
clc
push
adc
fwait
repnz
jl
iret
mov
inc
cmpl
or
sbb
in
xchg
fsts
push
sub
adc
or
or
shlb
jno
and
insl
test
pop
sbb
jge
mov
inc
and
ret
inc
int3
int
out
add
in
shlb
lret
data16
mov
ljmp
xchg
stos
hlt
in
xchg
adc
movl
push
sbb
ja
jb
push
sub
mov
aaa
dec
hlt
test
xchg
out
jmp
aad
adc
insb
jl
mov
adc
adc
xchg
insb
dec
outsb
sbb
mov
push
mov
into
in
mov
mov
or
sub
xor
rcr
ljmp
in
xchg
cwtl
jecxz
and
sub
adc
data16
mov
imul
jnp
jbe
dec
or
or
mov
notl
cmp
pop
xlat
mov
add
in
or
and
mov
cmp
fstpt
daa
inc
sbb
push
or
es
xrelease
out
inc
push
pmulhuw
ret
jnp
mov
sub
inc
xchg
je
mov
lahf
xchg
jo
pusha
pusha
xchg
pushf
xlat
mov
inc
ss
lods
je
aaa
and
ljmp
loope
mov
pop
stos
in
adc
mov
add
dec
out
leave
rorl
inc
adc
jnp
add
lcall
or
jp
or
nop
push
sbb
lea
mov
xchg
mov
insb
ret
fcom
adc
fsubl
dec
ljmp
jno
sub
mov
or
stc
insl
or
pop
mov
xor
mov
movsb
dec
adc
je
ja
adc
jne
and
loope
jg
orl
int3
add
and
mov
xchg
mov
in
sub
orb
push
xor
sbb
pop
add
call
in
cmp
call
pop
fs
stc
pop
mov
sub
dec
jmp
xchg
push
scas
and
loopne
pop
cmp
mov
ja
dec
in
add
push
push
sbb
push
fcmovnbe
bound
fwait
mov
mov
dec
jge
xor
fiaddl
fcmovu
or
clc
insl
inc
clc
add
dec
adc
cmpsl
cmp
aad
movsl
aaa
pop
sbb
push
dec
cmpsb
roll
je
or
dec
xor
repnz
xchg
mov
jmp
xchg
or
pop
icebp
push
sbb
mov
add
sbbl
push
ret
sahf
jge
leave
add
cmpsb
adc
lret
xor
aas
and
sbb
xchg
aad
out
sub
sub
aaa
cmp
pop
in
int3
stos
dec
insl
cltd
jmp
out
shlb
test
push
cmp
icebp
pop
cwtl
std
mov
and
loopne
cmp
inc
inc
sub
sub
push
sbb
jmp
movl
mov
cmpsb
cmp
icebp
leave
cwtl
sbb
pop
cmp
and
inc
orl
shrb
ljmp
pop
adc
js
stos
mov
cmpsl
pop
sarb
cmp
in
loopne,pn
dec
mov
call
repz
cmp
push
sti
xor
jle
and
test
loop
xchg
adc
xor
into
sbb
out
mov
rcll
insb
int
and
inc
enter
int3
push
cmp
jp
aas
enter
fcomps
inc
jp
adc
setbe
pop
les
inc
shll
lcall
and
adc
inc
outsb
rorl
sbb
lcall
lcall
sbb
pop
gs
shrb
push
xchg
mov
or
push
cmpsl
add
mov
imull
jbe
incb
fisttpll
les
call
push
call
add
notb
xchg
fbstp
or
out
fdivrl
dec
add
sub
dec
gs
mov
pop
xchg
pop
int
dec
mov
cltd
je
out
insl
jo
cld
out
cld
lret
mov
cmp
popf
xor
inc
idiv
and
int3
mov
out
ljmp
stos
dec
arpl
in
sbb
xbegin
aaa
mov
dec
inc
fnstcw
fadds
fldl
cmp
pop
imul
lods
inc
faddl
mov
shl
mov
cmovge
mov
push
push
xor
inc
mov
mov
mov
outsb
xchg
adc
pop
popf
repnz
jge
out
mov
enter
pop
mov
sar
pop
nop
std
cli
fwait
ljmp
pop
inc
cmpb
out
popa
pop
enter
test
clc
pop
adc
fsubl
mov
ja
or
xchg
addr16
add
push
inc
sbb
push
dec
push
in
adc
repz
jne
jbe
out
inc
addr16
dec
inc
mov
sbb
int
and
lock
insb
or
jg
fs
adc
sub
aas
cmp
loopne
mov
xchg
rcll
xlat
stc
mov
test
cmpsl
outsl
rolb
inc
aas
insb
xor
mov
mov
ret
rcrl
rcll
mov
cmp
imul
mov
push
fdivrp
in
lcall
int
mov
mov
insb
ljmp
inc
mov
lock
mov
jle
shrb
cld
jl
aam
pop
ja
sub
pusha
out
test
xchg
neg
xchg
in
imul
jle
add
sub
pop
repnz
stos
push
pop
out
cmp
fcomps
pop
cmc
stos
mov
fsubrs
gs
in
add
andl
pop
xchg
je
fnstenv
mov
lret
jne
mov
imul
and
cmp
xor
xchg
enter
aam
and
scas
mov
popa
int
xlat
pushf
xchg
sbb
xor
enter
cmp
movsb
lods
sbb
out
popa
das
stc
data16
lret
mov
subb
jnp
call
and
cmpsl
cmp
xchg
test
dec
test
mov
xor
lret
jl
adc
mov
fldenv
xor
lcall
and
push
mov
jae
mov
or
jmp
out
bound
ret
or
inc
adc
jns
cmc
in
jne
lds
pop
stc
pusha
pop
or
outsb
std
sbb
push
arpl
mov
inc
pusha
gs
sar
in
das
les
das
push
std
push
jbe
adcb
xchg
mov
repnz
bound
lds
jle
pop
jae
or
je
leave
das
jecxz
cmp
sti
mov
push
movsb
das
lea
loope
jmp
add
adc
stc
rcll
sub
cld
jne
int3
xchg
or
mov
jo
fidivl
sub
cmc
and
pop
lret
aas
mov
pushf
ret
aad
sub
aam
pop
inc
loop
adcl
xchg
mov
shll
shlb
subb
push
or
jo
adc
mov
hlt
stos
xor
inc
inc
pushf
sub
popa
pusha
adc
xchg
arpl
ret
ret
sub
mov
jmp
xlat
xchg
clc
mov
sbb
xchg
lock
cwtl
sbb
or
fsts
adc
out
aad
negb
ja
fnstenv
cld
dec
jmp
mov
push
push
add
iret
leave
cmp
push
adc
add
repz
jae
icebp
jge
push
sub
jbe
outsl
push
jne
and
mov
int
and
imul
insl
ss
adcb
push
mov
lods
xor
jecxz
data16
or
sub
ret
lret
lcall
lods
add
dec
dec
lods
in
mov
arpl
sbb
pop
jnp
add
add
sub
inc
bound
adc
repz
sub
mov
and
aas
jmp
cltd
mov
sub
pop
dec
adc
cmp
stos
jbe
lock
in
cmovs
cmc
hlt
xlat
cmp
add
sahf
loop
ja
pop
pushf
mov
and
cmp
cmpsl
jge
cmpsl
push
xchg
inc
ficomps
xchg
fs
popf
out
cmp
mov
test
cld
xchg
out
out
and
cmp
push
movsl
in
or
push
sbb
fidivs
jmp
scas
cli
cmp
pop
aaa
cmp
mov
mov
mov
out
jne
pop
push
or
int
data16
addr16
inc
push
mov
in
mov
jmp
xor
cmpsb
movsb
mov
add
pusha
or
mov
repnz
lods
xor
jns
or
insl
mov
mov
sub
mov
add
shll
mov
pushl
mov
mov
fisubrl
xchg
ret
fwait
dec
xlat
and
shr
mov
mov
test
inc
mov
adc
aam
int
lret
in
shlb
mov
mov
lea
sbb
mov
mov
or
push
daa
pop
xor
shll
pop
push
sbb
inc
jbe
rorb
pop
ljmp
dec
cmp
out
add
in
lret
rorl
xchg
fnstenv
mov
lea
jl
or
icebp
add
mov
outsb
jb
std
shl
int3
loopne
in
xchg
fadd
rorb
out
repz
and
iret
adc
add
xor
ds
mov
into
aas
and
dec
imul
inc
mulb
hlt
pop
mov
push
nop
movhps
xchg
out
int
ljmp
roll
pop
jbe
and
mov
jmp
incb
jmp
ret
push
lret
rorb
and
mov
daa
cmp
out
add
push
imul
lret
fldcw
pushf
das
sar
aas
stc
mov
and
mov
mov
insb
cmpsb
lock
mov
pop
and
lret
movsl
pop
sbb
inc
mov
mov
mov
and
adc
pusha
pop
push
mov
pop
jbe
cs
fcmovbe
or
cmovle
call
daa
cmp
mov
cmp
xchg
pop
fbld
jbe
push
sbb
test
lods
mov
je
int
shll
push
inc
mov
les
mov
bound
mov
mov
fcmove
or
mov
scas
in
ss
pop
clc
lds
pop
mov
push
fidivs
dec
sub
push
lds
decb
jno
pop
xchg
clc
arpl
enter
ja
bound
inc
adc
xchg
insb
stc
cmp
or
dec
jno
mov
test
mov
ret
and
cltd
loope
sub
xchg
pop
in
insb
adc
jb
add
mov
sub
add
stos
scas
mov
les
pop
dec
add
mov
pop
popf
sub
iret
mov
or
and
hlt
mov
sti
std
icebp
cltd
cmp
adc
jmp
mov
movsl
inc
lea
int
xchg
leave
sub
cmp
popa
sub
gs
and
inc
xchg
cmpsl
sbb
lahf
imul
repnz
repz
xchg
aam
jnp
mov
ret
or
pop
lret
xchg
push
jmp
lock
jmp
cld
push
call
ds
xor
mov
loope
and
pop
xchg
push
addr16
inc
iret
or
data16
repz
ror
dec
cmp
in
jmp
mov
fadd
adc
mov
lds
pop
mov
xchg
repnz
add
sahf
mov
mov
imul
xchg
mov
add
cmp
dec
jnp
stos
popf
sbb
mov
add
cmp
out
add
push
lcall
pusha
push
mov
fistl
cmp
add
popf
sbb
imul
add
jmp
or
sbb
and
test
xor
cmp
cltd
mov
cltd
fwait
jae
fsubrl
dec
cmc
mov
xchg
sbb
iret
pop
lods
jno
lahf
inc
or
mov
scas
addr16
enter
jmp
nop
js
inc
fsubl
cmp
dec
cmp
add
sarb
mov
das
fwait
sar
xchg
push
pop
inc
ja
sbb
mov
mov
dec
xor
push
sub
ss
jo
addr16
jp
and
test
adc
sbb
inc
mov
divl
scas
add
mov
and
sbb
jo
xor
dec
pusha
sti
aas
loop
test
sbb
xchg
test
jmp
inc
out
dec
mov
push
and
jno
movsl
pop
clc
pop
jmp
mov
xacquire
mov
ss
or
add
and
cmc
out
pusha
pusha
hlt
sbb
ljmp
pop
pop
jae
adc
and
jo
stos
sarl
add
jg
mov
mov
popf
repnz
sti
je
push
fs
fnsave
jno
mov
shrb
sub
and
cs
pop
pushf
fstp
call
imul
or
pop
cmp
aas
push
add
outsl
idivl
adc
mov
inc
add
adc
aas
jge
mov
out
aam
aam
ret
xchg
in
sbb
scas
test
pusha
mov
mov
push
test
jnp
outsl
mov
add
dec
int3
mov
adc
pusha
imul
push
pop
inc
add
outsb
cs
xor
lods
or
nop
in
into
into
jecxz
sbb
push
rorb
xor
call
aas
cltd
outsb
ret
sbb
dec
push
in
in
add
adc
cmp
xorb
xchg
pusha
sbbb
ja
xchg
push
mov
adc
hlt
xor
aam
and
sti
bound
scas
decb
movsl
cmp
int
out
bound
cld
fisubrs
dec
xor
pop
cwtl
push
cmpsl
xchg
mov
std
or
cmp
movsl
and
ds
mov
mov
loopne
inc
push
xor
sbb
jmp
and
and
sbb
insl
adc
inc
lahf
cmpsb
dec
mov
push
ljmp
mov
push
push
push
repnz
sub
movsb
add
mov
mov
loop
pusha
mov
ljmp
add
popf
cmp
mov
sbb
mov
cmpsl
pop
scas
enter
fisubrl
pop
iret
stc
popf
mov
pusha
inc
outsl
lock
idiv
out
ljmp
mov
pop
pop
fwait
loope
addr16
test
sti
hlt
into
loope
insl
push
jne
sub
add
addr16
jl
popa
fidivs
int3
inc
dec
mov
hlt
cli
subb
dec
adcl
jp
mov
pusha
stos
add
pop
push
into
add
divl
add
loope
pop
xor
lds
xchg
jo
cmp
xor
fidivrs
jecxz
loopne
and
or
leave
scas
push
jnp
pop
dec
loopne
jae
mov
out
out
push
pop
nop
sbb
xchg
out
out
loopne
loopne
pop
and
add
sbb
in
sbb
cs
cs
cmp
dec
shlb
jo
fldenv
inc
mov
sub
enter
cltd
popf
inc
ret
push
inc
mov
xchg
leave
hlt
cs
push
rcrb
xor
dec
dec
adc
pop
xchg
popl
xchg
dec
ret
mov
movsb
dec
insb
push
add
pop
xor
jg
bound
repz
test
pop
sarb
rorl
test
push
out
mov
xchg
dec
test
xor
jno
cld
mov
xor
daa
push
cmp
or
jge
sarb
or
jne
jecxz
mov
and
sahf
aas
mov
sub
jo
cmp
mov
mov
jae
adc
or
lods
xorl
jp
sti
sub
mov
jne
dec
adc
aas
add
mov
cltd
cmp
mov
cld
adc
jne
dec
scas
aaa
popa
test
adc
cmp
in
mov
fwait
push
jnp
cmp
sbb
sub
mov
popf
xlat
and
adc
lcall
shl
push
ret
scas
mov
inc
shlb
jnp
adc
push
and
or
icebp
push
push
pop
es
xor
and
out
test
cltd
pop
fmull
pop
sbb
adc
call
push
outsl
in
push
mov
xchg
repz
lcall
push
test
jno
add
mov
fwait
aad
mov
inc
emms
les
cwtl
insl
iret
les
mov
cmp
lock
sub
dec
adc
cli
imul
add
jl
lods
push
add
xor
fwait
cmp
xchg
std
or
jle
icebp
pop
sbb
data16
lret
lea
push
sub
pop
lods
mov
mov
xor
fwait
test
movsl
mov
xorb
push
lahf
cli
pop
repz
sbb
or
stc
les
fsubl
leave
lret
fists
inc
mov
sbb
sub
push
pusha
xor
cmp
sub
pop
mov
nop
lret
out
hlt
pop
inc
sbb
pop
call
xchg
sub
pop
call
cs
pop
jmp
xchg
shl
test
fs
test
add
lret
or
xor
push
adc
cmp
mov
inc
fisubl
xchg
imul
mov
pushf
jb
push
mov
dec
sub
fistl
sub
cwtl
push
xchg
mov
cmpsb
aaa
mov
or
call
not
imul
jecxz
xchg
sub
jo
dec
lret
mov
outsb
rcr
dec
mov
jle
cld
jmp
scas
mov
fisubs
lcall
outsb
je
push
mov
and
test
popa
or
mov
sub
stos
mov
mov
lods
aam
sbb
sub
jb
sarb
ljmp
xchg
sti
mov
xchg
jp
or
inc
fidivrl
dec
jmp
cli
xor
xor
jmp
sbb
mov
in
add
idivb
sub
and
sbb
sub
xor
mov
in
icebp
xor
dec
or
dec
pop
sbb
inc
sub
xchg
push
std
sub
dec
dec
in
adc
lods
aad
jno
shrb
in
std
jmp
rcrb
cmpsb
sbb
xchg
mov
mov
ret
pushaw
in
mov
mov
mov
iret
mov
push
rolb
xor
cmc
xor
aas
or
fnstenv
push
not
insb
sub
dec
cmp
das
mov
push
xchg
fcomps
jnp
lock
mov
cmp
pushf
and
pop
inc
lds
and
cmp
inc
xchg
lcall
gs
das
sub
push
xchg
enter
or
jo
dec
stos
cli
in
xchg
iret
iret
mov
mov
jge
jg
arpl
mov
push
pop
cld
and
inc
ror
jmp
dec
cmpsl
out
scas
pop
js
push
pop
mov
sahf
cld
out
inc
mov
adc
aam
dec
or
std
dec
mov
scas
cld
mov
scas
fmull
cld
dec
push
mov
clc
shr
push
xlat
kandnw
daa
dec
into
pop
rcll
outsl
sub
xchg
cmpsl
hlt
inc
lcall
data16
mov
add
bound
in
jle
sub
jns
jle
xor
jmp
dec
ljmp
sarb
in
pop
rcrb
insb
pop
adc
push
push
es
cmp
in
fstl
mov
int
and
push
and
adc
ja
imul
fldt
mov
iret
iret
sbb
lret
jbe
push
mov
loop
sahf
jnp
insb
or
pushf
dec
bound
imul
test
decb
mov
add
mov
xchg
jle
mov
rcll
mov
in
sbb
xor
sarl
cmc
mov
cmpsl
sahf
pop
into
pop
loopne
add
out
sub
mov
adc
jl
imul
loope
or
mov
loope
or
lds
cmpsl
test
imul
test
dec
scas
jl
dec
or
dec
or
push
scas
pop
xchg
cmpsb
in
xchg
call
xchg
inc
adc
out
xchg
imul
cmc
push
test
rorl
mov
jg
aaa
mov
roll
mov
imul
data16
xor
and
jae
mov
popf
push
inc
insb
add
arpl
pop
pop
jg
inc
in
inc
aaa
aas
or
icebp
out
dec
ss
ja
bound
ret
loope
cwtl
fadds
mov
popa
adc
dec
and
xor
popa
cmp
mov
scas
or
adc
fisubrl
int3
jmp
cmp
movsl
fsubrs
mov
mov
out
shrb
adc
push
outsl
cmp
pushf
pop
fs
xor
jecxz
ret
addb
jle
dec
cmp
gs
in
inc
sbb
aad
cwtl
les
loop
call
out
xchg
sbb
mov
add
in
add
mov
jecxz
jmp
cmp
mov
addr16
js
fisttps
or
adc
test
and
cmpsb
cmp
push
cmc
aad
orl
clc
and
pop
sbb
mov
dec
adcl
arpl
test
mov
stc
repz
sbb
jg
push
xor
push
xchg
loope
into
xchg
mov
xlat
nop
xchg
sbbl
mov
mov
push
and
push
lea
jmp
mov
xor
and
push
adc
nop
sti
sbb
xlat
mov
jns
pop
inc
mov
cltd
add
notb
cld
jle
les
call
das
cmp
xor
xor
sti
les
int3
inc
push
sbb
leave
enter
jns
dec
ds
mov
sbb
cli
popf
clc
pushf
pop
pop
test
out
mull
push
hlt
sahf
pusha
loope
or
mov
popf
js
inc
fistps
xchg
int3
scas
xchg
add
push
mov
arpl
inc
notb
andb
negl
xchg
mov
out
sub
dec
cmpl
lret
mov
mov
dec
xchg
roll
cmp
rorb
xor
sbb
jg
inc
xor
pop
mov
add
subb
cwtl
push
rcl
cld
es
mov
sahf
out
jl
mov
adc
leave
ljmp
insb
dec
pop
das
daa
jg
mov
icebp
add
sub
push
pop
mov
xchg
subl
arpl
sub
mov
add
mov
and
frstor
push
push
daa
mov
push
imul
mov
daa
fists
fisubl
push
mov
push
int
lret
dec
scas
cwtl
cmp
mov
aas
pushf
fiaddl
aad
jo
dec
cltd
int
xorl
xchg
lcall
std
out
leave
sbb
sub
fiadds
je
or
mov
rcll
sbb
adc
int
lods
fistpl
or
imul
arpl
dec
xor
or
mov
pop
ret
adc
aaa
adc
mov
sub
xchg
jno
mov
add
mov
jo
jg
push
fwait
mov
jo
jge
cmp
sti
pop
sbb
mov
cmp
notl
ljmp
outsw
add
bound
bound
xorb
aad
mov
mov
test
mov
and
adc
or
jbe
mov
sub
out
lods
cltd
add
push
outsb
and
mov
jecxz
sbb
xor
mov
inc
aaa
ret
icebp
pop
push
sbb
sub
int
push
push
push
inc
fs
repnz
xchg
jne
sbb
cmp
lret
sahf
stc
aaa
mov
dec
scas
mov
push
mov
test
dec
push
mov
mov
cmpsb
mov
jge
xor
bound
xchg
push
add
inc
dec
cmc
mov
bnd
leave
adcb
and
andb
mov
pop
push
nop
imul
push
push
in
jecxz
pop
scas
and
push
lds
mov
push
rcr
mov
pop
xor
xchg
flds
js
and
cmpsb
lods
loopne
daa
push
mov
mov
push
leave
and
push
jae
sti
cmpsl
jno
aas
add
scas
adc
mov
sub
popf
ret
pmaxub
sarl
inc
or
cld
mov
in
jno
ret
cmp
push
sub
shlb
addr16
jo
and
cmpsl
imul
stos
adc
sbb
xchg
sbb
aad
out
fistpl
cmc
sbb
lcall
dec
mov
push
std
cmp
es
pop
xchg
pop
fdivrl
scas
aam
mov
ret
adc
push
or
mov
mov
lods
xchg
mov
into
push
repnz
mov
enter
imul
fiadds
lea
ss
adc
jne
aad
lret
jg
arpl
cmpsb
adc
xlat
adc
jo
out
xchg
xchg
sub
bound
ja
fwait
lcall
lock
push
xchg
cmpsl
aas
inc
insb
sub
loopne
test
lods
add
roll
insl
fbld
pop
divl
xor
lock
js
leave
or
test
mov
or
mov
lock
jo
dec
ds
stc
repz
or
pushf
pop
je
mov
fs
pop
pop
loope
addr16
aas
lock
xchg
jmp
cmp
arpl
andb
push
popl
into
adc
movsb
mov
jne
stos
mov
fsub
outsb
pop
xor
mov
shrb
xchg
cmp
movsl
lret
inc
nop
fucomi
lcall
scas
and
movsb
mov
mov
loope
aas
xor
mov
ljmp
push
fcmovne
pop
iret
sbb
mov
and
mov
clc
shlb
fnstenv
or
mov
pop
std
cmpsl
pop
dec
and
push
cmp
mov
jecxz
lret
or
mov
sbb
jecxz
push
loop
shrb
push
dec
rcr
or
sbb
ror
lock
iret
sbb
out
adc
xor
or
inc
insl
sub
push
les
jns
sub
xchg
push
addl
xchg
mov
pop
in
mov
add
mov
push
ljmp
hlt
add
push
mov
aaa
pop
lods
bound
inc
insl
faddl
push
add
cli
idivl
cmp
outsl
push
repz
mov
arpl
pushf
ret
xor
mov
aad
ret
jo
lahf
or
repz
lea
mov
outsb
lret
sahf
inc
add
lods
in
sbb
jecxz
sbb
mull
ja
and
sub
push
daa
out
and
stc
lds
pop
cmpsb
sbb
cmp
sbb
test
aad
fwait
xchg
cmp
mov
pop
xor
in
pop
rolb
dec
pop
int3
pop
xchg
inc
add
sbb
jmp
ljmp
add
inc
push
cmp
or
outsb
jmp
imul
mov
negb
out
ja
mov
stos
ss
rclb
sub
mov
mov
test
adc
push
or
js
mov
lds
inc
sub
mov
stos
pop
cli
pop
and
mov
fadd
add
xchg
btc
inc
dec
clc
mov
aaa
popf
mov
cmc
fwait
rcll
jmp
lret
xor
adc
adc
ret
push
pusha
jle
into
adc
jb
dec
insb
add
inc
es
sub
cmpsl
cwtl
js
mov
xchg
loop
jl
sbb
cld
sbb
dec
out
pop
add
into
dec
mov
cwtl
movsb
jge
cmp
xlat
adc
in
and
arpl
mov
sahf
mov
fisttps
adc
iret
inc
xchg
fimull
jecxz
popa
pop
ds
or
pop
cwtl
mov
mov
adc
push
test
dec
lahf
xor
jmp
or
in
int3
imul
iret
dec
imul
pop
loop
xchg
mov
addl
jb
loope
aam
cs
ret
adc
out
negb
or
test
mov
cmp
sarb
sarl
lret
ret
push
push
mov
loop
pushf
and
repz
int
xchg
xor
test
xor
jl
dec
xchg
sub
xchg
xchg
rorb
add
sbb
adc
pop
add
xchg
in
lods
lahf
inc
mov
pusha
mov
loop
fsubrl
subb
push
pop
in
cmpsl
divps
pop
mov
movl
sbb
mov
pop
mov
inc
outsl
cmc
mov
aam
aaa
mov
xchg
and
lret
mov
jns
pop
leave
jle
daa
fs
sub
popf
test
out
sub
lea
lret
nop
shll
push
pop
ds
push
movsl
push
mov
lret
aaa
xor
lahf
movsl
in
push
into
push
std
rcr
cmpsl
xchg
push
push
aaa
bt
cmp
loop
aas
test
orb
cmp
stc
jnp
mov
push
inc
lods
out
sub
sbb
inc
test
sub
clc
sub
cmp
out
addr16
inc
sub
xor
mov
sbb
in
jnp
fcompl
mov
popa
ds
or
mov
xor
lahf
adc
icebp
leave
pop
sbb
sub
arpl
mov
stc
push
mulb
sub
push
jg
sub
pop
push
xchg
add
shl
xor
cwtl
into
pop
lods
aam
inc
sbb
mov
jl
mov
mov
pop
sahf
mov
push
push
in
ret
adc
lods
movb
cmp
dec
dec
lock
xor
sarb
daa
push
repz
into
xchg
testl
rcrb
and
mov
fdivl
daa
pop
ret
icebp
test
mov
addl
pop
cmp
cmc
ja
xorl
jmp
push
mov
adc
test
xor
test
dec
pop
push
repz
aam
jg
incb
or
xchg
and
dec
fmul
pop
jne
push
or
mov
enter
or
mov
mov
or
lret
push
inc
fildll
inc
pop
sub
inc
in
jp
mov
sbb
ljmp
testl
mov
loop
adc
cmp
imul
pushf
js
xchg
cmp
call
xchg
int3
shrl
sub
sub
fiaddl
cld
cwtl
ljmp
ds
xchg
outsl
push
pextrw
inc
nopl
inc
in
aam
xchg
andb
or
push
xor
or
jecxz
scas
lret
fcoms
hlt
cmc
mov
divl
cld
cmp
fs
mov
dec
jb
sub
repz
cltd
push
lret
ljmp
dec
xor
sub
sbb
sbb
je
pushf
add
inc
xchg
lcall
notb
push
mov
fstpt
mov
push
icebp
lods
negl
ret
and
push
pop
jno
out
aad
test
xchg
jecxz
xchg
mov
int
enter
ret
ret
loop
outsb
jge
dec
aaa
pop
inc
cmp
lahf
les
sbb
push
and
or
xor
shl
jne
adc
dec
aas
out
rcrb
bound
pushf
and
inc
sub
rolb
sbb
insb
pop
inc
hlt
jbe
mov
mov
xchg
icebp
dec
mov
leave
mov
push
cltd
jne
lods
stos
add
inc
lods
jp
dec
leave
loop
add
bound
pop
pop
mov
sbb
popf
xchg
mov
sahf
pusha
sub
into
mov
mov
adc
adc
push
insb
pop
inc
xchg
mov
xchg
sub
icebp
sbb
int3
arpl
xorb
mov
mov
and
mov
sbb
es
push
xchg
loop
add
inc
shlb
mov
adc
sbb
int
cld
adc
xor
fstl
cmc
loopne
mov
inc
jle
test
test
dec
sbb
in
test
dec
je
mov
dec
out
sti
mov
or
sbb
pop
mov
hlt
pop
or
dec
sti
mov
mov
mov
movsl
and
xor
dec
jmp
cmp
pop
scas
ja
fiadds
stos
push
push
stc
or
inc
inc
sub
pop
mov
sbb
xchg
aaa
adc
or
xlat
lods
jle
jmp
popa
mov
sbb
xchg
je
fldl
hlt
add
mov
jno
mov
sbb
fcomps
insb
inc
loopne
scas
jno
outsb
jmp
mov
sti
mov
xchg
xchg
add
test
mov
mov
test
fsts
jge
sbb
cmp
dec
sbb
dec
mov
mov
or
lret
push
mov
sbb
mov
enter
pop
inc
adc
mov
mov
mull
sahf
mov
ret
loope
stc
or
loope
mov
imul
rcl
ss
fdivl
push
mul
icebp
sahf
add
lock
sar
push
fidivl
jo
icebp
stos
mov
adc
insb
dec
xor
pop
fmull
sub
and
rcrb
fucomp
adc
cs
ret
dec
push
test
mov
push
fs
cmp
mov
stos
rcl
aas
and
aaa
mov
std
inc
mov
cmpl
mov
sub
xchg
cs
and
or
mov
or
mov
add
jb
or
lret
mov
jb
jnp
sub
lcall
mov
or
bound
adc
cmp
xchg
mov
es
cli
sub
cmp
lods
mov
daa
cmp
add
or
mov
pop
add
mull
jbe
sbbl
mov
cmp
aam
adc
pop
jmp
adc
lahf
jnp
cmp
ret
jl
std
fldcw
mov
arpl
jge
rorl
mov
lret
ja
in
xchg
jb
repz
fidivrs
xchg
push
cmp
xchg
sarl
sti
jns
sub
lds
aam
and
push
inc
test
nop
in
xor
mov
mov
inc
xorb
mov
jno
rcll
ds
js
adc
mov
mov
lea
shlb
adc
rcll
loope
cmp
pop
push
int3
inc
outsb
cmp
aaa
lods
aas
ds
lods
ret
sub
scas
test
test
divb
dec
in
hlt
push
mov
orb
pop
jmp
pop
mov
mov
and
bnd
in
imul
inc
aam
ret
jae
xchg
cmpsb
and
jae
pop
je
sub
jecxz
adc
mov
fcomip
pop
mov
pop
dec
jmp
jmp
daa
sub
rcll
aaa
push
mov
shr
mov
xor
jle
in
cmp
pop
fisttps
data16
scas
aaa
adc
add
pop
inc
int3
dec
loope
sbb
lcall
jb
push
mov
xchg
inc
int
add
xor
dec
rcl
leave
es
mov
dec
outsb
test
jmp
push
mov
xchg
and
jb
pop
out
test
jbe
mov
adc
scas
mov
clc
push
or
mov
xchg
idiv
push
je
inc
das
adc
mov
mov
jp
into
sub
push
loopne
pop
popa
dec
add
add
pop
cld
adc
dec
std
mov
aam
fstpl
jge
cmp
push
mov
xor
inc
jno
xor
mov
out
scas
cmp
dec
fndisi(8087
mov
inc
mov
data16
sub
xor
mov
adc
mov
xor
and
ss
out
adc
sbb
sbb
sbb
insl
stos
stos
sub
pop
in
scas
es
loopne
jecxz
push
mov
mov
jg
rorb
loopne
ja
pushf
ret
add
and
jl
lret
push
pushf
enter
fwait
pop
sub
mov
and
pushf
adc
addr16
push
shr
push
insl
xlat
out
sub
pop
lcall
push
aas
pusha
es
lods
fbld
inc
fdiv
push
cmp
outsl
fcoms
scas
pop
cli
mov
insl
out
jge
sbb
mov
sbbb
push
xchg
push
rorb
mov
lret
jbe
dec
daa
push
cmc
sbb
arpl
cmp
jle
lcall
xor
shll
mov
jge
pop
in
jge
cwtl
fisubs
imul
inc
ret
add
jmp
data16
loop
push
cmpsl
fmuls
loopne
add
pop
push
jb
push
imul
cltd
pusha
jno
aad
add
inc
xchg
rorl
mov
pop
cmp
pop
clc
imul
jp
inc
inc
popa
gs
in
or
call
inc
mov
ds
and
mov
sbb
test
inc
test
testl
mov
outsl
movsl
lahf
add
dec
mov
rorl
popa
daa
sbbb
ret
and
daa
pop
jbe
into
lret
mov
cmp
inc
std
inc
inc
sbb
subl
inc
push
in
cmp
and
mov
in
je
leave
or
aas
data16
outsb
add
lods
clc
je
sub
xor
mov
cmc
movsl
inc
fs
in
jno
test
clc
xchg
pop
mov
inc
ret
fiadds
mov
xchg
mov
lea
jle
jmp
adc
jno
mov
jl
sar
lret
scas
pop
movsl
mov
bound
pop
mov
loopne
mov
xor
jo
inc
daa
out
scas
sub
mov
stos
add
inc
iret
and
xchg
fistl
in
mov
je
sub
jmp
and
fisubl
lret
fidivrs
or
sub
stos
mov
in
shrb
es
lcall
mov
dec
xor
xchg
outsl
cmp
dec
bound
test
shrb
xchg
push
js
cmc
inc
jp
lgs
xlat
ficoms
ss
cwtl
mov
fistpll
cltd
cmp
or
add
ret
add
stc
imul
es
popa
mov
mov
pusha
inc
or
xchg
fistpl
test
add
mov
fsubrs
cs
xor
js
cmpb
lds
jno
xlat
xchg
dec
notl
jbe
outsb
and
pop
insl
jnp
aaa
idivb
xchg
nop
dec
lods
inc
pop
lret
leave
dec
pop
sbb
inc
push
pop
mov
pushl
dec
xchg
fsubl
xchg
dec
movsl
mov
cmc
mov
pop
jp
push
add
xchg
sub
push
dec
out
dec
mov
outsb
sbbl
mov
xorb
imul
add
ds
push
stc
es
push
jecxz
in
les
pop
cs
mov
jo
clc
clc
lods
pop
stos
and
adcl
push
clc
xor
cmp
int
stc
mov
and
mulb
data16
and
adc
jg
mov
inc
jbe
arpl
dec
push
je
adc
adcb
pop
jno
les
pop
xchg
jl
imul
and
adc
testb
sahf
xchg
xor
popa
out
cmpl
aam
push
fbstp
testl
mov
daa
ret
loope
lahf
sbb
fcomps
lods
mov
aas
jmp
dec
and
push
mov
addr16
pop
push
mov
sti
add
push
ss
rolb
popa
clc
into
sbb
das
mov
xor
dec
cld
push
notb
pop
sub
movsl
repnz
lock
push
in
cmp
pusha
gs
jecxz
inc
push
out
pop
pop
test
sub
push
mov
xchg
mov
xor
xchg
sub
and
frstor
mov
xorb
pop
das
push
dec
jne
push
and
daa
es
stc
adc
jg
adc
cld
pusha
lock
mov
dec
cmp
push
mov
mov
jge
dec
mov
aaa
aas
push
lods
decl
lock
inc
popa
adc
scas
rorl
ret
jg
sti
outsb
pop
xchg
arpl
pop
pop
fucom
jbe
inc
sbb
mov
jmp
sub
scas
fs
test
xchg
lock
gs
lock
sub
rol
lret
lret
mov
popa
pop
cmp
mov
insb
xlat
and
dec
out
or
cmpsl
popf
imul
cld
mov
arpl
ret
insb
pop
or
lret
jle
pop
cld
jecxz
ss
shlb
gs
mov
xorb
xchg
xor
push
mov
and
mov
cmp
push
testb
add
repnz
mov
mov
or
cld
hlt
aaa
ret
and
shlb
iret
mov
int
or
jl
and
aaa
les
mov
mov
sahf
loop
and
mov
cwtl
movsl
push
or
insl
arpl
add
push
jnp
fisttps
pop
decl
cmp
xchg
pusha
mov
arpl
dec
imul
xor
pusha
add
lcall
mov
ds
pop
andb
int3
pop
imul
sub
cmp
xchg
xor
fisubs
dec
ljmp
loop
aas
jp
sub
or
or
mov
enter
and
dec
xor
sub
fs
fucomi
pop
push
adc
add
int3
lcall
cld
test
pop
jmp
cld
jns
addr16
lods
addr16
jb
mov
in
sti
in
jg
insb
mov
dec
or
lods
loope
add
xor
cmp
xlat
adc
iret
fisttpl
imul
icebp
out
lcall
xchg
add
stos
mov
mov
xchg
xorl
lock
out
inc
fcoms
negl
shlb
enter
icebp
mov
das
jns
movsl
scas
inc
pop
mov
sti
jmp
inc
lcall
pop
mov
and
outsb
lds
push
in
sti
mov
test
jmp
arpl
into
rolb
mov
mov
jmp
dec
call
lods
enter
or
ds
cmp
cmp
sbb
dec
sub
dec
fadd
jge
clc
leave
jns,pn
pop
iret
push
xchg
movsb
imul
int3
sbb
mov
push
xchg
jns
xlat
inc
sbb
mov
adc
mov
cmc
mov
push
out
adc
insb
dec
or
enterw
or
mov
in
and
xchg
fnstsw
dec
lahf
stc
ss
inc
cld
cmp
mov
mov
and
jb
movsb
adc
pop
sub
mov
int
add
adc
das
rcl
stc
jno
mov
or
jg
addl
jge
mov
mov
and
aas
call
push
fwait
into
push
insb
leave
pop
xchg
imul
std
cmp
call
stos
dec
iret
ja
lret
sbb
xchg
sti
rcrl
dec
mov
daa
mov
mov
xchg
xchg
aas
cli
mov
dec
xor
and
das
dec
cwtl
gs
mov
push
scas
inc
lods
sub
stos
mov
vmwrite
sub
mov
or
pop
and
int3
jmp
js
enter
int3
mov
gs
jmp
sbb
adc
das
cmp
xchg
xor
xchg
sbb
rcrb
xchg
xchg
add
push
int
jecxz
and
push
adc
scas
cmpsl
stc
cmp
or
adc
dec
lahf
mov
popa
cli
or
rcrb
in
data16
cmp
les
jl
sti
cli
mov
enter
adc
cmpsb
push
lcall
cmp
in
in
jbe
sub
xchg
ds
pop
inc
inc
outsb
mov
fstl
jae
pop
xor
fisubl
xor
xchg
mov
cmpsb
pop
sbb
insb
cmpsb
incb
sarb
shll
mov
jp
idiv
cli
movsb
out
stc
cmpsl
cmp
stos
and
and
cltd
xchg
jo
inc
jbe
cmc
pop
mov
fidivrs
or
jle
and
iret
or
jge
push
fdivr
enter
mov
sbb
ljmp
divb
mov
stos
sub
or
xchg
pop
cmp
fisttpll
shrb
scas
sbb
mov
pop
imul
jae
jb
mov
or
adc
mov
jbe
ja
jge
rolb
pusha
pushl
xlat
add
into
dec
pushf
jle
enter
mov
or
push
pop
arpl
fstps
adc
mov
pusha
mov
adc
cwtl
add
repnz
cmp
gs
pop
jg
loop
jle
insl
repz
fldl
dec
pop
mov
dec
lret
into
xor
popa
jecxz
outsb
lret
xchg
sbb
xor
fcoml
and
jmp
sti
outsl
mov
aam
daa
lds
or
pop
out
rclb
clc
or
fwait
push
shll
cmp
fcomps
xchg
fwait
cmpsb
xchg
rolb
jo
cmp
xchg
and
push
daa
lcall
orb
fistps
jae
cwtl
mov
jno
sbb
xlat
sub
mov
jo
mov
mov
mov
xchg
out
lret
addl
fadd
jno
outsl
ret
jnp
sub
popl
clc
scas
adc
push
loop
roll
xchg
or
mov
shr
sbb
test
jg
fcomps
fmul
lea
or
sub
fnstcw
inc
mov
and
pop
xlat
aaa
fmulp
bound
mov
popa
inc
sbb
les
push
adc
lcall
jmp
icebp
sbb
mov
dec
mov
addr16
mov
into
scas
ljmp
shl
out
and
stos
movsb
push
adc
dec
push
lcall
jo
testb
fs
push
inc
fstl
idivb
xor
jno
aad
or
cmp
enter
mov
mov
sub
movsb
add
push
js
jge
xchg
jge
mov
fs
cmp
jnp
sub
shll
and
or
out
scas
xchg
xor
ds
mov
ds
fsts
cmp
das
pushf
popf
ret
mov
push
push
push
mov
scas
lock
stos
xor
jge
cmp
ds
cld
sbb
inc
and
push
sub
mov
sub
int3
add
dec
xchg
das
mov
or
dec
inc
sbb
jge
lret
sub
test
sub
out
inc
pop
enter
mov
inc
mov
dec
ret
mov
dec
push
dec
push
cmp
cmp
dec
lods
fldz
mul
sbb
sahf
push
imul
daa
scas
imul
je
shr
mov
mov
inc
dec
xchg
adc
xchg
jb
outsb
nop
ret
fwait
movsb
repz
fnstcw
or
dec
jle
ss
xor
jne
sub
xor
mov
lret
call
dec
test
jo
shll
add
repz
into
cmc
notl
jecxz
int3
jno
mov
ja
pop
mov
repz
sbb
mov
add
outsb
xchg
cmp
cmpb
cmp
inc
mov
cmpsl
sub
dec
xor
ss
jmp
mov
rcrl
lock
adc
jae
xchg
scas
mov
cmpsl
dec
ficompl
loopne
adc
mov
push
fdivr
fildl
mov
vprotq
clc
xchg
and
pinsrw
push
xor
mov
je
lods
sti
and
xchg
add
push
mov
out
lods
xchg
push
sub
mov
rorl
push
sub
fbstp
bound
dec
jns
aas
cmp
pop
sbb
adcl
repnz
mov
imul
outsl
call
pop
inc
iret
jns
aas
pop
imul
sub
in
jmp
sbb
inc
push
insb
mov
sbb
or
mov
pop
jecxz
xchg
sub
push
cld
dec
jnp
adc
lock
sbb
outsb
mov
subb
mov
popf
dec
shlb
xor
cmp
adc
das
je
es
and
xchg
push
and
push
sbb
or
cmp
popf
xlat
stos
mov
xchg
mov
and
and
add
rcll
adc
orb
cmp
ja
mov
pop
scas
jno
mov
inc
cld
fwait
jo
pop
inc
shrl
mov
fsts
imul
push
mov
inc
and
push
inc
and
or
dec
iret
call
sub
popa
cmp
mov
incl
movsb
idivl
xchg
dec
cmp
mov
dec
inc
jmp
xchg
movsl
ja
and
jl
mov
inc
icebp
jno
fwait
mov
mov
gs
pop
lretw
pop
xchg
insb
insb
xchg
inc
sahf
lret
shl
cmp
aam
shr
sub
adc
mov
movsb
test
xor
les
inc
or
add
ss
cmp
push
in
fisttpll
int
and
push
es
int
lahf
jbe
movsb
scas
and
sub
mov
pusha
aad
imul
fsub
jbe
loop
mov
mov
rcll
in
sarl
ds
or
cmp
xor
jo
in
loopne
mov
test
mov
jns
jp
sub
mov
mov
andb
negb
jo
pop
fwait
pop
push
xlat
jnp
push
pop
and
leave
scas
scas
shll
test
ss
xchg
mov
xor
xchg
mov
adc
or
mov
mov
dec
loope
insb
mov
pop
loop
sarl
jns
jle
stc
push
or
and
xor
cmp
bound
or
mov
inc
sub
cmpsl
xor
sbb
jecxz
mov
sub
lahf
mov
mov
scas
mov
mov
mov
insl
loop
sarl
inc
cmp
imul
mov
mov
or
aaa
adc
fcmovu
pop
icebp
lret
test
cmpl
jb
addb
mov
xor
fdivrs
out
push
cmp
add
xor
rorl
mov
pop
inc
dec
test
hlt
mov
jbe
pop
xchg
daa
dec
mov
lea
jne
adc
jne
or
cwtl
in
movsb
shll
adc
mov
inc
lds
jmp
cmp
cltd
and
mov
js
pop
addr16
lock
add
dec
sub
dec
push
mov
inc
inc
mov
pop
pushf
dec
in
sar
in
enter
and
test
arpl
xchg
inc
pop
shlb
testb
sbb
divl
mov
mov
push
loop
fisttps
sarl
inc
iret
inc
rol
addl
mov
or
xor
mov
int3
lock
lods
hlt
fnsave
fwait
push
push
add
sub
xor
mov
mov
int3
xchg
fcoml
cltd
or
popa
test
cmp
sbb
jmp
xchg
push
dec
inc
pusha
push
arpl
repz
push
xor
adc
pushf
js
daa
jle
idivb
mov
jae
rcll
mov
mov
xor
aas
inc
out
sbb
push
pop
ja
push
cmp
out
fs
mov
scas
loop
dec
sub
shlb
popa
sahf
lret
lret
aam
dec
xchg
inc
jecxz
pop
ljmp
sbb
push
jbe
mov
movsl
je
sub
jmp
lret
jns
fwait
xchg
push
ss
je
jp
test
mov
cmp
std
cmp
in
inc
cs
cmp
shlb
xlat
test
pop
sub
sahf
xor
jae
outsb
pop
mov
mov
and
inc
stos
mov
loopne
jno
shll
xor
xor
sbb
xor
loop
pop
in
ljmp
pushf
test
sbb
dec
mov
cmp
xchg
inc
popa
push
cwtl
cmc
nop
adc
scas
pushf
outsb
jno
and
adc
ds
out
ljmp
mov
xchg
jnp
pop
and
mov
loope
leave
mov
popf
cmpsl
js
cwtl
imulb
out
push
or
js
lahf
lods
es
sub
in
lods
and
andb
mov
mov
push
int3
xchg
add
push
pop
jecxz
jle
mov
add
mov
sbb
cmp
sub
int
sub
pusha
pop
xor
mov
xchg
leave
jmp
dec
idivl
add
sbb
cs
sbb
stc
shrb
aam
movsb
mov
push
sub
lret
andl
push
sub
mov
iret
cmp
cld
xchg
add
scas
outsl
xorb
imul
pusha
loop
push
cmp
sbb
xor
std
loop
in
test
xor
test
sti
or
pop
out
lea
xchg
aaa
push
pop
aaa
pcmpgtd
into
add
sub
test
or
xchg
sub
les
rcrl
insb
pop
jno
xor
dec
adc
push
pusha
mov
mov
adc
mov
push
aas
pushf
cli
mov
sti
clc
sbb
mov
fldcw
je
add
outsl
jle
stc
inc
jecxz,pt
repnz
mov
in
mov
addr16
sub
sti
outsl
insl
pop
aad
lahf
daa
cmp
sbb
lret
jns
or
outsl
inc
insl
cld
divl
sbbl
adc
je
pop
push
repnz
shr
dec
lds
mov
es
add
and
cmp
sbb
adc
sbb
pop
stc
push
jg
addr16
sub
cmc
mov
jo
lahf
stos
push
dec
fbld
mov
cmp
or
nop
lea
repnz
add
subl
das
sub
add
setae
push
xchg
mov
les
jge
mov
push
arpl
cld
pop
fucom
cmpsl
lods
in
out
aam
inc
add
sub
sub
and
cltd
push
test
fs
data16
cmp
sbb
push
out
cli
or
xlat
mov
push
mov
out
outsb
sbb
inc
push
push
icebp
sub
or
popa
fmul
mulb
xchg
xorb
sub
shll
pop
inc
fmull
cmp
pop
aad
adc
xchg
scas
sbb
cwtl
adc
sbb
into
out
cmc
fnstenv
popa
loope
add
sub
adc
or
add
dec
pop
inc
sahf
aaa
cmp
dec
arpl
mov
out
testb
mov
bnd
neg
mov
jae
and
stos
das
jno
jne
popa
xor
jo
insl
cmp
scas
ds
scas
mov
cltd
cmp
pop
jae
and
lock
add
gs
loope
imul
lds
mov
std
push
sbb
pusha
mov
adc
in
ret
les
push
stos
call
out
mov
pop
je
lock
and
mov
inc
add
div
mov
sbb
and
pushf
sbb
pop
mov
je
cmc
inc
adc
mov
cmp
sub
rclb
icebp
in
xchg
into
jae
sub
push
out
shrl
notb
lcall
pop
insb
pop
lods
in
pop
xchg
mov
pop
jno
inc
push
fnstcw
add
adc
adc
fwait
popf
mov
jle
js
cmp
push
adc
dec
ja
out
push
repz
jns
xchg
mov
bound
imul
adc
jbe
mov
cmpsb
adc
into
aam
xlat
pop
out
mov
ret
push
mov
ror
addr16
mov
shrb
imul
add
or
das
jl
ja
cmpsb
mov
push
inc
js
mov
fwait
mov
lea
mov
fisttps
pop
push
pop
jp
mov
fcmovbe
ds
cmc
jg
scas
cmp
pop
adc
iret
aad
add
arpl
mov
loop
xlat
and
fnsave
imulb
or
or
jne
into
cmpsl
loope
cmp
call
cmpl
cld
rclb
and
dec
int3
inc
loopne
scas
call
dec
repz
aad
repz
iret
outsb
sbb
add
lahf
ds
popf
pop
cmpsl
jecxz
scas
or
xchg
add
xchg
mov
out
add
mov
clc
jnp
out
lds
mov
jb
cmp
in
cmp
lods
shl
xlat
sbb
subb
add
leave
xor
sub
push
push
push
jle
sub
lahf
clc
push
loope
enter
repnz
and
out
dec
cmp
ja
sub
clc
sbbl
sub
sar
mov
cltd
mov
and
push
and
inc
mov
push
stc
mov
mov
in
ds
lret
cmp
loope
pop
addb
cmp
fstl
mov
inc
dec
push
inc
loopne
mov
mov
push
insb
pushf
or
adc
mov
lret
es
mov
add
std
inc
sub
add
push
cltd
jbe
sub
jnp
das
das
out
push
cld
xchg
xor
xor
icebp
enter
aaa
int
pop
pop
sbb
mov
popa
js
test
les
mov
cmp
jl
imul
sbb
mov
pop
faddp
jnp
mov
aaa
adc
mov
pop
cmc
lock
cmpsb
dec
or
jns
xor
push
fsubl
movsl
fs
movsl
push
mov
cwtl
aam
mov
test
mov
jne
xlat
cmpb
pop
mov
lcall
imul
insb
push
cmp
insl
adcl
out
stos
dec
mov
jecxz
pop
mov
xor
ja
mov
loope
pop
out
test
or
jns
sahf
insb
test
and
add
push
jge
xor
dec
in
test
insb
jge
and
sub
mov
cmc
je
xchg
fwait
loop
dec
push
rcll
xor
jmp
loopne
xor
pop
inc
dec
jl
rcrb
jne
sbb
iret
pop
daa
cs
sbb
xor
push
or
pop
out
out
das
pop
iret
movsl
out
and
les
jne
test
sahf
jns
jl
movsb
mov
mov
sub
test
outsb
jmp
mov
xor
sub
pop
sarb
cmp
enter
jb
daa
loope
lea
adc
xchg
adc
daa
and
lret
imul
dec
dec
push
xchg
or
cmp
jmp
subb
shll
dec
cmp
xchg
pop
leave
insb
mov
xchg
pop
lahf
xchg
or
adc
inc
fiadds
aad
divl
and
arpl
adc
lahf
xchg
add
pop
mov
inc
inc
pushf
in
imul
pop
out
inc
pushf
jle
sub
inc
scas
adc
pusha
bound
xchg
add
cmp
push
sbb
scas
push
adc
mov
out
cmc
popa
repz
js
inc
mov
jo
cmp
xor
jo
jp
jno,pt
dec
cmp
insb
int
jns
jns
outsl
jge
dec
pop
dec
or
pop
mov
sub
cmpsb
jne
or
xorb
test
and
dec
icebp
mov
mov
mov
mov
aam
inc
outsb
daa
jnp
pop
shrl
stos
pop
in
mov
add
pop
sbb
pop
mov
push
inc
lahf
fwait
dec
add
imul
jl
sbb
and
inc
shrb
lods
pop
and
loopne
mov
bound
int3
stc
sar
cwtl
out
dec
and
int3
xor
test
mov
popa
pop
and
and
xchg
movsl
fisubl
test
shr
jl
mov
gs
jno
or
repz
mov
jae
pop
sub
int
push
sarl
xor
loopne
mov
movsl
sbb
imul
mov
fistps
push
xchg
dec
xor
xor
mov
add
jp
ret
rorl
insl
sbb
sub
cmp
ljmp
cltd
or
push
js
add
stos
dec
mov
push
ret
sub
xchg
lock
adc
data16
jno
dec
aad
fiaddl
dec
add
shlb
sub
adc
jns
mov
test
cmpsl
mov
fs
shlb
inc
push
mov
mov
fucomip
fisubl
pop
jno
ret
int
aaa
pop
inc
sarb
cld
jae
xchg
lods
push
jae
sbb
mov
and
cmp
sbb
lret
loope
mov
aam
loopne
xchg
cmp
cmp
arpl
adc
xor
test
les
add
inc
test
xchg
lods
or
jne
xor
sbb
out
in
fldcw
xchg
xlat
mov
adc
lcall
push
sbb
push
pop
repz
fstpl
data16
movsl
cmp
mov
insb
mov
dec
popl
nop
mov
cmp
push
cmp
scas
ss
cmpsl
test
and
mov
out
and
mov
mov
pop
in
popa
pop
inc
cltd
sub
movsl
or
mov
push
mov
jge
insb
in
clc
leave
nop
push
out
les
and
int3
shl
push
out
mov
pop
loop
mov
xchg
in
imul
push
rcll
and
or
lea
loop
fstl
fidivrs
add
xchg
mov
dec
fmul
jmp
sub
jnp
addr16
aas
and
lret
sarb
sahf
add
int3
das
test
dec
pop
imul
and
int3
adc
and
mov
sbb
lret
cmp
inc
mov
pop
orl
inc
mov
daa
and
fimuls
stos
dec
out
and
in
add
cmp
xor
into
outsb
cmp
mov
fstl
push
push
xchg
push
and
xchg
lds
pop
sub
cmp
add
je
and
in
aaa
in
xor
stos
nop/reserved
push
test
jae
fadds
es
aaa
stos
cmp
lahf
or
pop
sbb
push
div
jae
in
pop
inc
jl
dec
inc
test
shl
cltd
mov
call
lcall
cltd
lods
jg
push
and
cmpsb
pop
pushf
ljmp
mov
mov
xor
test
pop
ss
loope
lds
xor
xor
aam
and
xor
push
int3
fs
cli
es
sub
loopne
xchg
lods
addr16
call
and
mov
lds
ret
fldl
fs
pop
mov
pop
rolb
or
icebp
rorb
push
adc
outsb
or
test
jecxz
lret
xchg
aam
insb
test
movsb
lret
mov
ret
push
scas
add
cmp
cmp
sbbb
pusha
add
sub
lods
lcall
fs
sbbl
call
xor
lret
mov
int
ja
es
in
mov
add
cmpsb
pop
push
out
pop
xor
mov
xchg
or
ds
inc
push
sub
push
loopne
mov
leave
xchg
imul
sbb
imul
xor
jle
xchg
sub
scas
ss
aas
pop
mov
mov
cld
ficomps
xor
add
mov
mov
sub
test
es
pop
lods
lods
test
push
and
push
js
and
mov
insb
insb
xor
jns
push
pop
aam
cmp
cmc
jle
rcrl
push
adc
sub
mov
inc
mov
xorl
push
mov
lahf
add
in
mov
and
repz
imul
in
push
aad
mov
in
int3
inc
and
sub
push
popf
push
sbb
cmc
cmp
ret
repz
test
ret
add
jnp
mov
cmpsl
sarb
arpl
and
ljmp
bound
jle
test
cmp
test
addr16
sbb
pop
and
or
std
cmp
mov
sbb
sub
sub
inc
aad
add
adc
dec
jbe
dec
mov
mov
fdivs
mov
iret
xor
mov
cld
pop
stos
cmp
ret
xor
aad
or
sahf
add
fistl
add
nop
divb
in
push
int
ljmp
pop
inc
jmp
dec
insl
cmc
jg
push
pop
aam
stc
inc
cltd
pusha
inc
sub
adc
scas
data16
adc
jne
iret
jmp
mov
jecxz
jl
xor
xchg
mov
popa
outsb
adc
xor
into
outsb
add
mov
xor
sbbb
ret
insl
mov
mov
and
and
rcrb
call
push
mov
dec
ds
test
insb
cmp
mov
push
out
mov
cmc
out
loop
loope
movsl
cmp
icebp
negw
aam
ret
in
push
jg
mov
sbb
cmpb
pop
xor
clc
fcom
inc
test
subb
dec
push
popf
pop
and
adc
in
sbb
or
xor
pop
aaa
dec
rolb
aas
cmp
inc
adc
xchg
icebp
push
inc
push
dec
jp
int3
ret
es
mov
xlat
test
add
xchg
push
adc
in
popf
xor
adc
movsl
or
push
popa
jno
cmp
xchg
add
jnp
cli
out
fidivrl
xlat
jmp
jno
add
inc
in
mov
iret
pop
adc
movsl
add
inc
sbb
sarb
and
pop
test
pusha
stos
xor
push
xchg
dec
sbb
pop
lods
sbb
cmp
loopne
cli
pop
xchg
cltd
pushl
dec
mov
mov
mov
dec
fwait
mov
movsb
fiadds
inc
arpl
aam
adc
data16
popa
lds
cltd
mov
push
mov
pusha
mov
inc
scas
in
lods
push
int
mov
pop
pushf
mov
cmp
push
pushf
cmp
and
or
das
lods
mov
addb
sub
cmp
orl
mov
inc
fld
mov
inc
negl
rclb
xlat
mov
hlt
inc
mov
mov
xchg
xchg
mov
into
push
mov
push
or
sub
lret
rol
push
dec
add
sbbb
scas
cmp
testl
push
jb
push
andb
mov
dec
orl
sub
add
mov
fnsave
adc
jmp
xor
gs
into
popf
sub
imul
jg
mov
lds
in
fmuls
in
mov
jge
pop
stos
test
ljmp
ljmp
out
in
inc
repz
insb
pop
in
out
pop
lcall
push
inc
shrl
and
jbe
jnp
loop
loope
lcall
mov
inc
cmpl
xchg
ret
lret
pop
jmp
jne
push
pop
pop
in
and
dec
sub
add
or
scas
push
cltd
enter
or
cs
push
mov
pop
stos
xor
aaa
addr16
cmp
jmp
push
add
test
lret
xchg
push
out
stc
or
cmp
call
hlt
xor
jle
inc
lret
sub
mov
sbb
inc
mov
lds
add
ljmp
std
out
jo
aaa
adc
shlb
and
mov
daa
test
sub
stos
jmp
xor
jne
dec
jmp
pop
jg
lret
pop
sbb
jle
jmp
aam
shrl
je
sub
dec
mov
clc
adc
aam
daa
jb
lcall
lods
test
mov
mov
mov
cmp
fidivrl
sbb
psubb
cmp
mov
inc
mov
jmp
cld
in
xchg
outsl
push
or
add
xor
scas
dec
jb
ds
sub
cmp
or
inc
pop
push
stos
out
ljmp
mov
xchg
adc
or
mov
rcrl
pop
xor
stc
shrl
pop
jg
sbb
mov
shlb
loope
cld
jbe
popf
outsl
repnz
inc
inc
xor
add
mov
rep
popa
jo
lods
mov
push
mov
xor
mov
shll
addr16
out
int3
adc
outsl
mov
lods
sti
pop
xor
cmc
nop
or
loope
clc
cmp
lea
jns
adc
xchg
push
push
adc
mov
imul
cmpsl
jge
and
and
mov
jg
push
push
ds
lcall
jns
loope
mov
inc
or
clc
mov
sbb
jne
xchg
aad
lea
xchg
jge
dec
jo
push
mov
cli
roll
outsl
popf
pop
sub
pop
repnz
mov
push
sub
adc
push
pushf
int
fdivl
jo
icebp
arpl
push
jp
mov
loopne
jg
mov
addr16
jb
xor
mov
outsb
insl
cmp
mov
push
outsl
adc
jnp
addr16
roll
pop
sti
outsl
arpl
fdivs
ret
je
insb
fdivl
jmp
arpl
and
pop
cmp
cmp
ss
inc
or
mov
sbb
inc
jge
pop
inc
add
lods
int
push
jecxz
mov
nop
les
jl
pushf
dec
push
daa
stc
dec
mov
fnstcw
push
hlt
dec
imul
outsb
outsl
cmpl
push
shrb
movsb
sub
inc
stos
jmp
add
cld
jg
or
push
jl
cmp
push
cmp
xchg
stos
mov
in
int
int
daa
xchg
mov
pop
jl
cmp
outsb
cltd
dec
adc
clc
jl
rcl
stos
jne
mov
test
push
pop
imul
cmp
xchg
push
and
or
mov
mov
mov
mov
movsl
push
pop
add
push
jl
jl,pn
decl
out
jg
insb
or
sbb
mov
mov
pop
mov
repz
scas
mov
xor
xorl
lock
cmp
xor
jecxz
call
fnsave
enter
xor
mov
inc
xchg
sbb
mov
xor
add
lds
and
es
inc
mov
sub
lds
cmp
das
dec
mov
stos
push
cld
cmpb
imul
ficoml
jae
fsub
les
xchg
mov
adc
jle
push
movsl
push
imul
cmpb
adc
adc
adc
popf
outsl
test
lret
and
loop
adc
nop
jns
das
add
push
jae
movsb
cltd
rcr
imul
jmp
xchg
test
jmp
xchg
inc
shlb
cs
clc
in
cld
add
xor
movl
inc
ficoms
xchg
test
mov
inc
pop
push
dec
inc
rclb
je
mov
test
push
and
enter
push
insl
jb
popa
mov
dec
dec
add
mov
adc
cmp
insb
pop
inc
jp
push
mov
add
pop
jl
pop
xchg
mov
test
fistpl
test
arpl
ja
fcoml
xchg
or
loop
pop
push
push
jecxz
bound
adc
aad
ret
sbb
addr16
sbb
xchg
add
xchg
andl
xor
cmp
leave
cs
inc
fs
mov
add
and
and
sbb
sub
scas
sub
jb
xchg
mov
lret
pop
clc
jle
js
push
fs
mov
mov
add
xchg
mov
mov
push
and
cmp
mov
ret
xchg
fcmovbe
xchg
cmpsl
sbb
flds
leave
and
cmpsl
push
push
loope
mov
cmp
in
sbb
sbbl
iret
rol
push
mov
cwtl
movsl
lods
xchg
mov
inc
fists
aad
inc
mov
cltd
enter
popw
aas
pop
aad
test
cmp
xadd
sbb
fiaddl
sarl
jecxz
stos
mov
repnz
movsl
jbe
mov
aam
in
stos
add
out
inc
lods
mov
fcmovbe
mov
mov
dec
mov
dec
out
shl
xchg
ret
pop
mov
fdivrl
push
xchg
mov
inc
ret
cltd
stos
test
not
cmp
ds
dec
std
sbb
enter
dec
sbb
push
gs
sub
jb
fidivs
das
push
mov
ss
in
nop
mov
mov
adc
cmp
std
imul
pop
sub
push
cmpl
pop
dec
mov
xor
pop
mov
adc
xchg
std
call
or
repz
push
outsl
add
jl
inc
or
mov
lea
push
ficoml
enter
xchg
shrl
add
imul
es
xchg
mov
inc
dec
loope
xlat
dec
sbb
mov
pop
lods
arpl
ja
push
cmpsb
bound
dec
push
add
fisttpl
cmc
enter
outsl
popf
out
fwait
xchg
xchg
mov
test
in
aaa
dec
mov
ret
in
adc
ja
shll
pop
js,pt
adc
push
jp
mov
bound
mov
bnd
movsb
or
mov
and
xor
or
lods
rolb
mov
xchg
cltd
fcomi
jb
addr16
inc
sarb
sbb
mov
sub
ds
loopne
movsb
pop
cli
push
insb
mov
daa
imul
aad
adc
jbe
mov
fstpl
imul
shlb
fistpll
add
nop
out
jge
adc
lcall
sarl
xchg
das
and
shrb
pop
inc
shr
cmp
test
les
int3
xchg
push
les
adc
pop
jg
jb
out
sbb
dec
pop
cmp
inc
ret
cmc
add
fs
mov
inc
aaa
push
int3
xchg
mov
and
dec
adc
scas
jp
jnp
mov
push
in
aam
stos
lods
cmp
adc
adc
mov
outsb
aaa
out
sahf
shlb
jo
inc
inc
mov
nop
loopne
add
inc
lock
xchg
aas
jl
dec
adc
lock
push
xor
movsb
add
jle
jg
ja
in
push
jae
mov
inc
xorb
mov
add
add
pop
call
lahf
dec
xchg
add
fidivl
xor
cmp
imul
lds
imul
mov
jge
mov
or
dec
mov
mov
cmpb
and
ss
bound
fsubrl
arpl
addb
scas
xchg
in
aad
lret
pop
cmc
jbe
xorb
repnz
das
or
cmp
in
adc
push
pop
jle
fdivl
cmp
jl
test
xor
adc
xor
push
outsb
sub
cmp
repz
popa
insl
push
or
dec
hlt
mov
mov
mov
cmpsl
jecxz
mov
sub
sub
xchg
sub
out
pop
iret
mov
fisttpl
dec
insl
cs
inc
out
std
aaa
into
push
xor
lds
or
lods
test
sub
sbb
push
or
pop
or
cmpsl
cs
cmpsl
mov
push
adc
in
pop
aaa
out
idivl
push
faddl
aas
mov
lret
xchg
adcb
aad
push
scas
xchg
and
xor
das
int3
jg
int
push
cmp
mov
inc
out
lret
ds
aad
fbstp
xchg
jne
jmp
movsl
cmc
sub
test
loop
xlat
sub
lea
inc
cli
mov
fadd
lret
dec
xchg
inc
push
mov
xchg
lahf
arpl
or
cwtl
iret
sahf
xchg
mov
stc
and
push
add
daa
ljmp
jne
cmc
fsqrt
dec
imul
mov
cmpsb
jo
jecxz
add
inc
mov
ret
push
sbb
xorb
mov
shrb
das
xor
pop
add
push
test
andl
dec
sub
xor
cmpb
das
pop
js
dec
and
ss
cmpsb
jnp
mov
adc
ror
pop
sbb
aad
test
push
dec
loopne
popa
fcmovnb
push
ret
dec
mov
into
mov
js
xchg
fcompl
lods
and
mov
cmp
pusha
xor
aad
and
loop
cmpsl
mov
sbb
mov
and
sti
adc
xor
call
cmc
cmp
xchg
ret
insl
cmp
mov
xchg
ds
outsb
xor
mov
sbb
cmpsb
jo
stos
int
adc
xor
and
pop
jge
xor
mov
fstpt
push
stos
sbb
fists
jb
or
push
add
pop
cmp
out
sarb
ds
lods
adc
imul
mov
sbb
inc
aad
jb
xor
add
or
cmp
shl
sbb
mov
xchg
sbb
icebp
or
aam
cmp
out
xchg
ret
lret
push
and
insb
das
inc
or
cmp
inc
or
rcll
pop
mov
adc
rcr
sbb
xchg
xor
in
adc
mov
jnp
clc
ja
xor
adc
iret
repz
pusha
rcr
aad
mov
jae
xchg
shl
xor
xlat
dec
adc
addr16
popw
or
and
or
cmpl
sbb
fidivrs
mov
inc
fdivs
addr16
push
sbb
rorb
aad
pop
repnz
fnstsw
fwait
mov
mov
mov
sub
fistpl
sahf
xchg
mov
inc
adc
movsb
insb
push
or
outsb
mov
icebp
jg
dec
unpcklps
sub
cltd
pop
jmp
push
cmp
hlt
cmpsb
repz
loop
ljmp
sub
outsl
rorl
pop
dec
mov
cmpsb
loope
loop
mov
cwtl
je
out
push
aas
xchg
mov
cmp
fmuls
fwait
mov
outsl
jmp
sti
push
jg
xor
cmpsb
pop
out
ret
dec
or
hlt
mov
repz
push
addr16
out
dec
fidivrl
sbb
out
add
sbb
pop
mov
inc
mov
dec
fcmovnu
test
outsl
dec
cli
dec
sub
movl
xor
test
popa
mov
push
jne
int
push
and
xchg
sahf
fbstp
lock
mov
pop
gs
sbb
cmp
or
mov
stos
test
in
hlt
or
ret
xchg
inc
jno
ror
repnz
ljmp
loopne
pop
pop
mov
push
in
inc
adc
test
int3
les
insl
cmp
sbb
jb
inc
fldl
pusha
lds
cld
inc
xor
shll
xchg
and
jno
sbb
imul
ret
lock
push
mov
mov
fimuls
xchg
sahf
test
in
inc
push
scas
dec
stc
xor
aam
iret
mov
mov
fs
mov
shrb
inc
out
mov
pop
xor
jp
sub
push
xchg
jge
or
sub
in
adc
sub
sbb
ja
das
jecxz
les
cmp
mov
jne
cmpsl
aad
out
pop
aaa
xchg
jb
fimull
jne
push
ficoml
push
xchg
mov
fwait
test
mov
scas
pusha
and
cmc
sub
add
lret
in
inc
mov
mov
outsb
xchg
ret
push
adc
adc
mov
push
inc
mov
or
inc
push
mov
outsb
data16
push
sbb
adc
and
mov
xchg
les
jmp
std
jo
jecxz
mov
sub
inc
lcall
mov
daa
push
sub
xor
je
leave
rcll
gs
and
sub
es
xor
shll
xorl
clc
fnstenv
pop
pop
idiv
pop
inc
dec
and
dec
js
inc
add
cmpsb
dec
test
lock
outsb
mov
mov
mov
out
aam
cli
lods
imul
cmp
pusha
mov
testl
pmullw
fwait
lcall
ljmp
nop
dec
sbb
aad
cld
imul
adc
mov
out
popf
pop
push
enter
adc
pop
push
or
pop
flds
dec
push
mov
cmp
aad
mov
sub
mov
or
and
cmp
sub
test
lock
rorb
insl
xchg
xor
das
xlat
sbb
js
mov
inc
pop
sub
inc
xchg
dec
fisttps
add
loope
rcrl
shlb
push
imul
xor
xor
add
icebp
push
and
shl
mov
icebp
nop
out
sbb
push
dec
jp
bound
fdivl
xchg
fsub
jecxz
mov
pop
notb
int
mov
xor
inc
pop
lret
cwtl
jno
ljmp
scas
inc
pop
xchg
mov
inc
mov
dec
mov
xchg
pop
mov
pushf
in
dec
and
popa
jno
jg
dec
inc
andl
sub
out
sti
xchg
and
dec
or
lea
mov
jae
lahf
loop
fimuls
es
loopne
pop
mov
lcall
mov
insl
push
lcall
mov
repnz
push
adc
xor
jp
ss
push
lds
test
lock
das
scas
imul
sub
xchg
fstpt
lret
int3
ret
adc
dec
aas
lods
out
mov
imul
pop
jo
cs
fnstenv
mov
and
bound
xchg
jmp
lods
mov
lea
xchg
pop
or
sbb
ss
out
dec
mov
jb
push
int
inc
fs
arpl
lahf
pop
shlb
scas
bound
flds
xor
inc
mov
cmp
call
inc
pop
insl
jmp
cmpsl
nop
jle
clc
fldl
dec
jge
add
push
pop
xor
aas
subl
sahf
loopne
jge
lock
or
ficoml
leave
xor
mov
int
jg
mov
pusha
sti
idivl
aad
fildll
outsl
mov
xor
sub
and
imul
cltd
popf
enter
cltd
mov
lcall
mov
jnp
mov
jnp
fidivs
xor
lret
sub
push
jae
xchg
ret
xchg
stos
aaa
or
mov
and
insb
mov
lahf
xchg
clc
or
mov
mov
decl
inc
pop
or
enter
outsl
adc
and
outsb
adc
test
cld
add
fildl
push
call
jnp
cmp
mov
lods
fs
jg
push
inc
icebp
dec
lock
push
mov
push
jle
lahf
outsb
fisubrl
test
movntq
push
cmp
das
or
test
es
lds
lret
dec
xor
mov
add
ret
out
lds
xchg
sbb
jnp
test
mov
adc
sti
iret
xchg
pushf
sbb
push
xchg
out
cmpsb
mov
in
js
shld
jbe
out
mov
mov
in
in
ja
mov
add
add
pop
jecxz
add
xchg
dec
pop
mov
pop
xchg
pop
sbb
xor
mov
pushf
xchg
or
andl
mov
mov
xlat
bound
das
dec
shlb
clc
xchg
into
push
je
stc
scas
sub
mov
xor
xchg
sarb
int3
and
stos
or
lcall
in
out
cwtl
movsb
fsubr
push
mov
mov
push
jecxz
ljmp
ja
cmpsb
pop
mov
pop
out
sub
insb
and
lret
mov
pop
jg
mov
mov
outsl
jge
clc
hlt
sbb
fidivl
inc
adc
push
adc
jle
in
ds
xor
jae
movb
ja
cmp
jp
mov
jne
stc
cmp
xor
cmpsl
icebp
xchg
sbbl
push
xlat
ficomps
andl
jge
rcll
and
lret
dec
insl
mov
sub
stc
push
hlt
neg
movl
test
jl
loopne
lahf
shr
lods
int3
jne
inc
push
arpl
lea
fsub
dec
ljmp
or
outsb
cmp
std
jnp
vfrczsd
aas
and
daa
fs
mov
jnp
and
jg
roll
mov
cmp
test
jmp
cmp
imul
xchg
int
mov
jecxz
mov
imul
cmp
dec
sub
insl
jae
in
cmp
cmpb
sub
in
pop
cmc
xchg
lret
cmp
test
js
repnz
push
neg
mov
jo
cmc
mov
fmull
add
shlb
pop
mov
in
cmc
jg
add
or
ja
push
movsb
in
pop
push
lock
lock
adc
in
dec
outsl
stos
inc
mov
shlb
or
iret
test
sbb
add
adc
mov
dec
movsb
orl
popa
mov
cmp
inc
and
cli
dec
dec
inc
shll
xchg
xchg
cmp
fcomp
lods
bound
lods
dec
imul
fdivrl
cmp
or
aad
fcomps
leave
fldcw
imul
push
add
push
cmp
and
sub
push
dec
xchg
pop
xchg
mov
mov
inc
add
int
outsb
cld
int3
cwtl
push
sbb
add
sbb
out
sub
div
lods
and
or
sbb
mov
movsb
cmp
pop
in
pop
mov
dec
push
inc
test
sbb
add
fisubs
add
int3
clc
shlb
cmp
mov
push
dec
sub
rcl
sti
adc
and
fildll
cmp
scas
ficompl
pop
or
idivb
shr
les
ret
test
xor
int
sbb
xorl
outsb
jl
jb
and
ds
aas
cmp
les
cmpsb
shr
cmp
lahf
jp
lahf
xchg
jl
inc
jge
hlt
fcoml
stos
aam
and
push
push
popa
dec
push
insl
inc
jl
sbb
aas
fidivs
mov
push
lock
sub
mov
lahf
shl
cmpsb
lds
fidivl
aaa
outsl
sub
adc
lahf
fmul
mov
xor
aad
push
xchg
xor
xchg
setp
sub
js
pop
sbb
cwtl
mov
cmpsb
and
testb
xlat
stos
rcl
subl
sbb
lcall
and
mov
out
inc
pop
xor
ret
pop
cld
mov
xor
cmpsb
fwait
ret
decl
nop
push
push
xlat
pushf
ds
insb
mov
lock
les
push
jae
shll
repnz
in
repz
clc
rorb
nop
jns
shll
and
adc
leave
sbb
adc
cmpsl
jmp
ret
inc
xchg
lcall
xchg
loopne
ret
js
dec
sub
fisttps
lahf
xlat
push
xor
in
imulb
loope
ja
adc
sbb
or
xor
xor
mov
xchg
mov
fists
scas
push
fistpll
sbb
lods
inc
in
adc
pop
cltd
push
adc
lea
push
outsb
jge
or
cli
loopne
xchg
popf
mov
push
xor
pop
les
loop
loop
mov
test
popa
push
dec
dec
scas
push
out
fistl
popf
dec
cmp
mov
iret
mov
outsl
jmp
or
out
ds
ret
jmp
std
notb
or
mov
and
dec
lret
jo
movlps
hlt
shl
imul
in
jecxz
dec
jl
sbb
jne
push
adc
gs
loope
mov
mov
ret
mov
dec
sub
or
mov
rcrl
fcmovnbe
inc
sub
inc
jo
inc
stc
and
jne
jle
je
cmpsb
and
pushf
sbb
and
movsl
mov
loopne
popf
jp
push
and
fbld
cs
or
movsb
xor
add
xchg
jle
les
inc
jae
push
ljmp
dec
idivl
and
ljmp
fwait
xor
movsl
xchg
mov
mov
outsl
inc
dec
inc
add
lods
ret
mov
jg
hlt
mov
push
xchg
push
cli
iret
jne
sbb
and
adc
push
repnz
pop
fbstp
inc
jle
mov
je
xchg
cli
dec
scas
xor
int3
push
mov
pusha
sarb
scas
mov
rcrl
add
sahf
add
mov
mov
pop
aam
andb
fistpll
aaa
mov
add
test
xor
cmp
jnp
repnz
cmp
loopne
movsb
push
ret
xchg
stos
int3
mov
repnz
mov
stos
test
jge
pop
neg
idivb
pop
push
repz
add
fs
inc
int
sub
push
dec
pop
push
inc
loopne
ss
mov
fimuls
adc
dec
and
jle
push
popf
loopne
pop
sbb
push
ss
popf
cmc
mov
inc
xchg
pop
out
xchg
mov
push
adc
lcall
sti
push
mov
jmp
mov
xor
xchg
xchg
jecxz
sub
nop
jb
push
push
add
lcall
es
dec
stos
loope
cli
mov
rolb
pop
jmp
test
lret
ljmp
mov
or
adc
in
sub
dec
repnz
movsb
and
sbb
or
sti
dec
xor
lods
xchg
jle
ljmp
cmp
leave
popa
test
fs
stos
andnps
fs
shlb
push
mov
cmp
in
jecxz
lea
and
std
loope
inc
out
and
pop
cld
es
cmc
push
dec
sbb
mull
adc
mov
xchg
pop
jmp
aam
clc
mov
repnz
mov
repnz
loope
mov
cmp
mov
ret
sub
stos
sub
pop
mov
int
insb
sbb
aas
loopne
ljmp
loopne
pushf
sub
fisubs
or
pushf
in
jae
inc
js
xor
out
mov
dec
rcr
mov
sub
rcrl
or
pop
bound
lea
stos
mov
dec
push
scas
push
fsubl
adc
mov
inc
jb
in
into
andb
subb
clc
pop
lret
fisubrs
imul
and
mov
pop
sbb
fwait
jl
sub
je
ja
int
das
divl
stos
out
daa
rcr
mov
jnp
and
xchg
push
pop
jge
cwtl
mov
and
call
xor
lea
jl
pusha
insb
std
sub
addl
fcmovu
sub
mov
repz
sti
std
shrb
mov
inc
lahf
xlat
dec
mov
mov
push
xchg
outsl
pop
inc
push
test
and
push
push
sub
xor
test
mov
sahf
mov
cltd
mov
mov
or
stc
cmp
add
pop
inc
add
mov
push
call
mov
pop
push
mov
add
adc
pusha
addr16
adc
dec
outsl
fs
xorb
rclb
xor
push
xor
cmp
out
lret
mov
pop
fldl2t
into
sub
sub
nopl
mov
scas
mov
and
out
addr16
xchg
push
pop
push
cmp
fnstenv
mov
fmull
pop
and
mov
sub
icebp
lock
ja
push
fdivl
icebp
mov
xchg
mov
inc
lahf
subb
jnp
jbe
imul
scas
mov
je
cld
mov
cmpsb
pop
ret
loopne
out
jg
mov
sti
insl
dec
andl
mov
mov
jno
leave
dec
inc
pusha
outsb
test
xor
lods
in
mov
mov
mov
adc
adc
dec
ja
fbld
lahf
pop
popa
xlat
sbb
sub
cltd
incl
xor
clc
adc
ror
xchg
xchg
jno
xchg
push
xlat
movsl
test
push
addr16
comiss
outsl
inc
aas
pop
bound
adc
sub
adc
js
rol
mov
test
call
test
jle
clc
mov
mov
in
jne
pop
mov
adc
sub
vpsllw
xchg
mov
inc
stos
imul
out
adc
filds
push
mov
push
cli
sub
mov
jno
pop
lahf
push
sub
inc
sahf
ret
mov
dec
clc
sub
add
leave
stc
iret
test
jno
or
xchg
mov
or
fs
sbb
xor
jge
in
cld
pop
jle
adc
fsubr
lcall
outsb
fldl
leave
adcb
arpl
push
icebp
push
cld
sbb
shlb
or
movsb
mov
cli
and
adc
int3
lock
iret
cmp
sbb
sbbl
mov
rcrl
jp
dec
mov
iret
inc
ret
shr
jl
or
test
dec
push
mov
cmp
inc
cmpsb
jge
and
into
aad
out
sbb
push
imul
and
cs
shll
xchg
jno
ret
and
adc
daa
shrb
jbe
push
jg
decb
andb
insl
jno
mov
incb
mov
mov
pop
int3
cmpsb
je
shrl
mov
or
das
test
dec
and
cmpsl
adc
pop
xchg
push
push
add
mov
sbb
stos
xchg
lret
in
decl
lds
and
scas
test
xchg
push
cmp
lock
adc
cltd
mov
xor
push
jecxz
xchg
clc
add
xor
mov
sub
mov
xlat
icebp
cmp
and
shll
mov
pop
cs
leave
call
lods
inc
xor
mull
sbb
fisttpll
imul
jnp
xor
enter
sahf
or
cmpsl
fisubrs
lahf
ds
inc
out
cmpsl
push
cmp
or
pop
int
mov
shrb
pusha
cmp
inc
arpl
push
mov
jns
insb
sbb
jp
test
int3
out
in
aaa
aas
movsl
popa
rcr
hlt
add
ret
pushf
ds
and
rep
cmpsb
or
aas
and
dec
add
inc
mov
push
inc
jg
loope
clc
inc
or
shll
scas
jg
xor
out
out
aad
or
shlb
std
loope
push
pop
sub
xchg
adc
fwait
test
jb
call
popf
xor
call
lea
aad
dec
or
mov
test
jne
adc
fdivl
ret
sti
fnstcw
enter
in
call
clc
push
push
pop
stos
test
notl
dec
mull
sahf
jne
xor
out
mov
sbb
and
movsb
push
mov
scas
int3
jns
jmp
mov
mov
call
scas
adc
clc
stc
xor
mov
cmp
nop
xchg
pop
pop
jmp
cmp
add
repnz
mov
add
pusha
add
inc
mov
stos
jl
insl
pop
lock
pop
pop
test
sahf
xchg
mov
addr16
xlat
cltd
adc
add
outsb
into
cld
sub
cltd
or
add
jg
sbb
dec
xlat
int
sbbl
imul
cmp
mov
pop
out
jns
stos
mov
les
rorl
lods
or
sbb
mov
clc
into
add
or
in
xchg
mov
mov
xchg
lock
shlb
mov
cmp
jecxz
mov
mov
data16
or
mov
rclb
sbb
push
je
les
scas
sub
xchg
andb
lods
and
push
or
sub
dec
and
push
inc
xchg
outsb
adc
cmp
pop
popf
inc
pop
xchg
xor
cs
mov
imull
sub
lea
outsb
push
dec
dec
adc
jo
mov
neg
mov
add
test
int
xchg
xor
push
addr16
push
mov
out
xchg
mov
jne
mov
xchg
es
insl
into
outsb
inc
rcl
sub
cli
jmp
ret
out
jmp
subb
sahf
or
in
inc
sub
ret
in
cmp
cltd
arpl
loop
pop
insb
les
inc
roll
sbb
inc
out
leave
hlt
inc
push
mov
lret
push
or
xchg
cmc
push
xchg
push
insb
mov
xor
jne
das
jecxz
xor
int3
push
jge
ljmp
xchg
xor
pop
mov
cli
add
sbb
fwait
je
xor
push
add
jns
lret
mov
dec
and
imul
cltd
negl
mov
aas
add
lock
mov
cmp
inc
sub
adc
and
push
das
arpl
cld
clc
pop
mov
lock
mov
pop
es
js
jns
mov
jle
pusha
lock
push
mov
rep
and
pop
or
push
movsb
xor
mov
xchg
out
in
mov
push
mov
popa
mov
jecxz
sub
int3
add
sbb
cmpsl
xchg
mov
scas
repnz
pop
push
stos
std
ds
inc
xor
inc
lcall
cmp
jle
shll
push
clc
orb
xchg
outsb
cmpsl
mov
adc
int
mov
xchg
or
jp
sbb
push
add
pop
mov
stos
cli
fstpt
push
popf
jo
push
xchg
sub
cmp
in
aam
sbb
fdivp
cmpsb
aaa
lock
pop
leave
jo
adcb
rclb
push
cmp
arpl
nop
out
xor
inc
pop
push
call
inc
cmp
dec
pop
pop
aaa
jmp
dec
lcall
cmpsl
insl
mov
mov
pop
mov
pusha
sbb
mov
fwait
icebp
and
mov
js
int
push
adc
shlb
iret
jmp
push
jne
pop
out
or
outsb
out
roll
jmp
and
jg
inc
popf
inc
or
push
pushf
insb
movsl
or
mov
or
adc
dec
lret
fxch
sub
out
xchg
call
dec
dec
jns
lahf
xor
push
nop
scas
sbb
scas
aaa
and
pop
shlb
subb
jmp
xor
out
sbb
xor
inc
insb
jle
add
push
xchg
pop
or
and
jae
mov
mov
imul
sbb
pop
inc
lock
popl
int3
nop
push
test
fisubl
xchg
fmul
lahf
pop
movb
es
fwait
sbb
in
push
add
loop
in
stc
in
inc
les
and
not
fadds
lcall
fdivl
das
sar
xchg
push
jp
call
add
loop
lods
test
adc
mov
rcrb
and
in
adc
cmp
xchg
mov
out
je
loop
dec
push
and
mov
xorb
mov
xorb
int3
lods
push
jae
jl
ljmp
jmp
sub
sbbb
dec
insb
fldt
or
fmulp
add
jbe
jl
rcll
pop
lds
out
jb
pop
out
pop
sar
mov
sub
xor
jb
push
stc
nop
imul
pop
push
fistps
int3
push
pusha
mov
adcl
cmp
inc
and
das
stc
aad
sti
rol
fcomi
push
inc
fsubl
fs
xchg
fsubrl
out
test
push
cmpsb
hlt
int
lea
rorl
or
push
and
xchg
sbb
movsb
call
xchg
je
or
jnp
pop
aas
adcb
jb
loope
mov
pop
dec
mov
inc
and
cmp
sti
fimuls
jo
dec
mov
std
js
lods
les
test
pop
adc
lcall
in
push
jle
in
lret
fmul
add
test
cmp
pop
inc
andl
inc
sub
scas
mov
imul
call
in
icebp
arpl
lahf
push
xchg
mov
inc
xchg
loope
inc
ficoms
jmp
push
cmovns
dec
and
dec
fwait
inc
js
lds
add
lret
adc
add
jmp
cltd
xor
popa
xchg
pop
push
or
sbb
mov
or
imul
or
fnstsw
sub
and
or
lods
inc
lds
icebp
jle
and
std
jae
cmpsl
idivb
mov
inc
xor
outsb
cmpsl
xor
jb
stc
fsubp
sbb
pop
sahf
jle
dec
add
aam
rorb
das
mov
out
cmp
xor
adc
pop
mov
cmpsb
arpl
jge
movsb
adc
xor
mov
popf
je
imul
ret
out
cwtl
mov
push
test
xchg
test
int3
jae
lahf
pop
outsb
js
popf
in
mov
stc
add
std
adc
and
testb
jmp
cmp
pop
subb
insb
lret
mov
inc
cs
scas
xchg
aam
testl
cs
aad
xchg
fcom
inc
incb
daa
push
int3
data16
lea
pop
int3
or
enter
mov
inc
sbb
mov
imul
cmpsb
pop
add
int3
pusha
push
test
push
jmp
add
inc
fcomps
in
inc
aaa
mov
inc
mov
jge
insl
xchg
mov
outsl
scas
in
js
push
add
cmc
add
orl
mov
dec
mov
mov
sbb
xchg
pop
in
cmpl
sbb
push
mov
dec
and
mov
fdivp
push
dec
out
repnz
inc
aam
mov
dec
test
sti
add
outsb
ja
or
xor
push
adc
push
mov
xchg
jle
cmp
popa
test
sub
adc
int3
mov
fisubs
into
mov
test
and
push
outsb
lods
mov
jp
scas
mov
mov
mov
sbb
inc
pop
inc
xor
fisttpll
lock
pop
push
push
push
jmp
cmp
push
cmp
cmpsb
in
cmp
popa
test
add
fiaddl
int
add
ss
dec
ret
xchg
jb
ffree
inc
sbb
sbb
add
cmp
mov
jno
test
adc
ret
or
mov
sbb
sub
cmpl
imul
jl
pop
mov
push
mov
push
movsb
sub
and
test
xchg
scas
daa
jns
cmp
xchg
jb
and
push
stos
pop
mov
push
inc
lods
lret
adc
and
imul
sub
add
loope
std
xchg
mov
popa
mov
clc
pop
mov
sar
mov
and
or
pop
rorb
int3
pop
fstpt
int3
nop
loop
push
scas
mov
pop
daa
push
testl
and
scas
js
mov
int
mov
rclb
add
iret
leave
sub
out
fistpll
out
cmp
mov
and
inc
xchg
or
sti
mov
xchg
add
or
imulb
sub
sbb
or
cmp
leave
mov
ds
ss
andb
push
mov
push
push
fcmovnb
test
imul
add
js
pop
scas
in
xor
mov
dec
fdivr
loope
cmp
and
inc
jge
cld
pop
mov
pop
sbb
xor
xchg
or
hlt
sti
cld
gs
push
cld
sbb
je
push
inc
or
jge
pop
cld
push
mov
inc
fiadds
js
push
orl
mov
out
movsb
cli
adc
add
lods
int3
mov
adc
cmp
sbb
push
mov
gs
jge
andb
orl
inc
xor
movl
movsl
xorl
and
into
inc
imul
dec
popa
dec
mov
movsl
mull
std
sti
addb
mov
xor
out
add
cmp
popa
adc
int
mov
jl
mov
lods
pop
and
scas
lret
adc
insl
nop
mov
or
xchg
sbb
add
imul
sahf
arpl
sub
mov
xchg
jo
inc
push
pop
aad
xchg
xor
in
pop
idivb
dec
cs
not
dec
push
hlt
pop
mov
and
cmp
fwait
jp
jne
iret
inc
ret
add
fisubl
fs
ret
sarb
lock
push
mov
loope
fcom
mov
or
mov
lods
std
mov
icebp
inc
fcmovne
je
and
test
dec
int
dec
push
and
push
add
jnp
fldt
adc
les
xor
jge
ja
cmp
xor
sub
fmull
sub
out
jo
cmp
in
je
insl
or
out
arpl
ds
rcrl
pushf
test
les
push
jae
pop
cmp
aas
stos
fcmovnu
testl
dec
push
mov
cmp
rcrl
clc
pop
popa
pop
fisubrs
in
push
mov
and
mov
daa
cli
mov
pop
lea
xor
out
std
mov
jge
xor
mov
enter
push
mov
jnp
test
xor
jp
sbb
stos
addr16
ds
fists
mov
divl
enter
fdivrp
sbb
mov
sub
push
and
dec
lret
fwait
push
lret
pop
sbbb
repnz
sub
add
popf
push
aam
mov
lds
js
test
mov
inc
movsb
movl
call
mov
loop
xor
xlat
xor
cli
inc
mov
leave
sub
imul
push
pop
lahf
push
xchg
or
or
ret
mov
sbb
mov
jle
fwait
popa
je
mov
lcall
in
push
mov
mov
ss
popa
xchg
pop
ret
fnstenv
jbe
xor
ret
std
in
lods
pushf
fnsave
shl
lea
mov
fldl
mov
push
sti
jnp
push
sbb
int
daa
pop
cmp
repnz
jecxz
hlt
pmaxsw
cmpsb
jmp
sub
push
pop
xchg
adc
stos
lret
push
fwait
lret
lret
jle
test
push
cmp
push
lods
rorl
or
lret
mov
sbb
mov
fwait
daa
rolb
call
inc
pop
or
imul
cmpsb
mov
sbb
js
or
pushw
sub
sub
pop
xor
pop
xlat
jno
and
popf
adc
fs
push
jmp
adc
ljmp
imul
mov
sbb
or
push
test
inc
mov
adc
out
mov
xchg
ljmp
test
mov
inc
xor
dec
addr16
cmp
clc
fildll
orb
clc
mov
mov
jmp
mov
fwait
xchg
addr16
or
xor
fstps
icebp
enter
push
jge,pn
dec
mov
orl
adc
fldl
mov
loope
ljmp
pop
adc
xlat
fisubs
xchg
loopne
aas
sbb
mov
mov
mov
gs
cmp
repz
flds
mov
mov
arpl
into
jns
xchg
mov
jnp
into
fcomps
sub
inc
das
mov
xor
int
mov
ljmp
pop
stos
ja
movsl
stos
and
cmc
sub
mov
adc
xlat
inc
negb
pop
pop
jp
sbb
repnz
pop
cmp
insb
push
cmp
adc
testl
lcall
dec
and
jbe
loopne
shlb
cmp
stos
movsl
xor
addl
mov
xchg
arpl
scas
daa
icebp
push
mov
inc
dec
insl
dec
outsl
pushf
xchg
dec
fnstcw
js
call
daa
sub
insl
cmp
sub
sub
jns
dec
adc
push
push
ret
leave
lods
dec
into
jl
sti
dec
cmp
repz
test
je
test
scas
out
cmc
ret
pop
and
cmp
dec
adc
insb
push
push
or
testl
enter
fs
call
push
pop
mov
cmc
fistpl
popf
sbb
clc
and
rorb
in
pop
mov
adc
ljmp
dec
in
dec
iret
adc
js
ror
cmc
and
pop
mov
outsl
pop
pop
pop
stos
lods
inc
je
lcall
stos
out
mov
mov
or
add
cmc
int
add
in
mov
sbb
in
pop
fwait
dec
or
into
ret
xchg
mov
orb
fninit
jge
gs
and
ret
mov
lret
jb
ss
bound
dec
dec
cltd
inc
pop
lods
aam
pop
mov
cmp
insb
nop
aaa
jbe
lret
sub
push
pop
movsl
push
mov
and
mov
gs
aaa
cmp
inc
xor
cmp
lds
mov
push
into
sbb
in
ret
xchg
repnz
cmp
ss
cmp
stos
push
pop
xchg
adc
imul
movsb
mov
xor
fisubrs
mov
or
leave
mov
xlat
push
shrl
call
sti
inc
cmpsl
shl
sbb
nop
enter
jmp
clc
pushf
int
loop
pushf
xor
sti
xchg
pop
outsb
jge
sbb
push
nop
je
jl
rol
ja
mov
mov
insb
fdivrs
xchg
and
or
add
jge
popf
je
jecxz
clc
xchg
and
cld
adc
sbb
push
xchg
cmp
sbb
and
addl
je
xchg
sbb
leave
fcmovnu
or
mov
cmpsl
xor
push
in
jle
jg
xlat
test
xor
loop
dec
push
add
aad
lock
push
arpl
fsubrs
addl
aad
mov
repz
inc
push
jmp
rcl
insl
adc
aas
pop
repz
jno
mov
jne
rcrb
adc
sbbb
outsl
xchg
mov
ret
mov
scas
ss
dec
dec
adc
inc
mov
xorl
mov
mov
adc
lods
dec
mov
scas
push
in
jmp
and
into
xchg
push
cmp
lods
in
inc
sub
push
jbe
mov
jl
cwtl
lret
shlb
orb
and
jnp
jno
lret
mov
cmp
iret
adc
addr16
jl
xchg
les
leave
push
out
out
adc
dec
lret
mov
mov
jbe
add
sub
mov
shr
movsl
mov
je
icebp
enter
xchg
lret
and
popa
fnstsw
inc
cmp
adc
jb
sub
repz
scas
imul
mov
mov
icebp
adc
loopne
sub
and
adcl
bound
sti
push
mov
pop
ja
clc
fmul
daa
mov
jecxz
movsb
divb
rolb
cmp
and
jecxz
nop
lcall
cmp
xchg
sub
bound
pop
and
ja
popf
and
mov
ja
leave
ja
movsb
xor
xchg
dec
imul
arpl
push
adc
cwtl
sub
rcl
fldl
pop
xor
ret
mov
inc
mov
pop
or
pop
add
mov
and
xor
lods
dec
pop
out
adc
pop
or
and
jnp
mov
fbstp
pop
fwait
inc
jmp
sbb
test
repnz
lock
dec
xor
push
xor
jmp
jmp
ret
int3
pop
es
fstps
sbb
jno
mov
pop
ljmp
or
add
stos
dec
rcl
inc
fiadds
into
pop
inc
mov
jnp
stc
and
mov
push
pop
or
sbb
jle
mov
push
call
pop
aaa
int3
sarb
into
pop
and
lock
outsb
nop
and
cmp
lret
inc
negb
lods
dec
xchg
loop
or
stc
sub
xchg
pop
je
adc
es
sub
sahf
lock
cmp
pop
pop
add
cmp
ret
adc
cmp
mov
or
and
adcb
pop
dec
adc
dec
inc
fwait
dec
xchg
ja
inc
mov
mov
mov
pop
push
mov
movsb
xor
shlb
adc
aad
dec
rolb
stc
in
add
addb
fwait
sbb
movsb
idiv
sub
and
aad
mov
aam
icebp
stos
xor
fxch
inc
xchg
xor
jl
push
shrl
out
xchg
jle
ret
ds
mov
xchg
cmpsb
jecxz
sbb
push
mov
inc
xchg
add
xchg
lahf
mov
cmp
sub
sub
xchg
cltd
pop
jb
pop
xchg
iret
inc
es
jne
dec
lahf
lods
imul
fadds
cmp
mov
dec
xor
cltd
lahf
lret
xor
int3
adc
pop
mov
or
outsb
adc
and
add
xchg
fbld
push
repz
push
daa
push
gs
in
sbb
add
out
insl
sbb
cld
loop
addr16
lret
dec
mov
mov
xor
outsl
pop
ljmp
cwtl
fisttpl
push
mov
dec
adc
fildl
mov
inc
icebp
push
int
addl
das
xor
popf
mulb
in
xchg
sbb
jl
pop
lds
mov
sub
scas
xor
sbb
mov
cmp
jp
aad
fisubs
mov
ret
fimull
leave
cli
xor
lock
mov
lods
mov
inc
pop
jg
push
xchg
mov
insb
test
inc
aaa
test
adc
jp
push
mov
rcll
push
adc
push
dec
sbb
dec
cwtl
and
dec
push
push
shll
fbld
mov
pop
pop
insb
xor
imul
jg
daa
inc
pop
outsl
sbb
loop
mov
outsl
cmpl
sbb
je
repz
mov
xor
xchg
push
mov
or
lahf
in
pop
into
sub
mov
jnp
in
sbb
xor
aad
icebp
leave
es
push
push
push
and
sbb
mov
push
add
pop
das
cmp
pop
inc
rcll
sti
xchg
and
push
es
dec
xor
popf
nop
pop
addl
mov
jnp
faddp
push
jge
je
lods
sahf
push
push
jge
addr16
mov
inc
and
aam
scas
adc
loopne
jle
es
jl
fistl
outsb
fstps
cli
jnp
mov
mov
sbb
test
out
xchg
jb
and
push
inc
fcompl
in
aaa
cmp
icebp
inc
sub
aas
bound
push
jecxz
popa
xchg
test
push
inc
dec
jg
cmpsl
push
or
jbe
inc
sbb
movsb
adc
inc
ja
gs
inc
jno
mov
es
sbb
sub
sub
ds
lds
mov
mov
xor
jo
xor
pusha
mov
ss
out
cmp
in
jp
jge
inc
xor
cmp
out
xor
roll
scas
add
movsb
shll
mov
sbb
mov
mov
mov
jmp
ds
test
shlb
jo
jno
stc
sbb
flds
or
sbb
pop
mov
addr16
mov
dec
xchg
test
gs
sti
cmp
push
movsl
repz
and
scas
cmc
push
test
enter
fistps
jo
xor
fucomp
pop
or
outsl
jnp
pop
add
xchg
xor
lahf
in
mov
inc
std
jae
and
push
push
bound
clc
subl
lds
insb
out
lcall
inc
mulb
cwtl
cmp
orl
dec
data16
dec
sbb
and
pop
ficoml
insb
cmpsb
add
push
sub
out
and
pop
outsb
mov
test
add
js
enter
loopne
push
ficompl
shld
cmp
rcr
xchg
push
cmp
xor
jne
cmp
dec
sub
lea
repz
sbb
inc
cmp
push
pextrw
test
push
loope
fdiv
mov
cmpsb
mov
das
pop
mov
addl
int3
and
sub
push
test
nop
daa
out
imul
mov
pop
xchg
mov
jle
sub
rorb
inc
mov
push
mov
popf
cld
addr16
fwait
nop
cmpsb
mov
sbb
cmp
fcmovnbe
pop
sub
repnz
pop
icebp
inc
sbb
inc
sbb
push
mov
testl
andl
fsubs
ret
pushf
adc
mov
or
loope
out
pop
jnp
cli
lock
out
mov
sbb
push
mov
xor
in
es
frndint
xchg
dec
jb
sti
aam
xchg
adc
inc
mov
movsl
or
push
jl
adc
inc
clc
dec
jp
ljmp
and
icebp
mov
xor
mov
or
xor
sub
dec
sbb
cltd
std
mov
mov
jecxz
cmp
jne
sbb
pop
jo
cli
jl
jo
cmpsl
mov
mov
cmp
and
arpl
pop
jp
insb
cmp
mov
xchg
dec
or
daa
jb
rcrl
xlat
in
outsb
pop
mov
jb
lea
mov
sub
xchg
xchg
clc
cmp
movsb
std
push
push
mov
std
fstpl
ss
mov
mov
push
or
les
popw
and
push
inc
outsl
scas
and
jae
insl
cmp
and
negb
push
and
in
aad
cltd
sbb
testb
mov
jnp
fdiv
dec
jb
adcb
rcrl
test
pop
dec
das
sbb
add
lret
nop
cmp
xchg
dec
mov
insb
push
mov
adc
mov
lret
inc
inc
pop
xchg
fldl
lds
cs
ljmp
push
inc
aaa
sti
mov
lret
push
mov
test
dec
mov
addb
xchg
mov
aaa
xchg
es
fmull
jmp
add
paddb
stc
sub
sub
out
mov
push
rorb
and
nop
dec
cli
adc
or
jno
mov
lret
test
jecxz
push
cwtl
in
popa
xorl
and
push
mov
push
jne
gs
mov
daa
enter
xchg
cld
idivb
fwait
test
outsl
cmp
int3
scas
sbb
sbb
addl
ja
popa
repz
mov
push
pop
fistl
subl
and
test
xchg
mov
popa
pop
mov
cld
lods
dec
xchg
cmp
and
leave
js
lds
and
enter
mov
scas
cli
or
add
pop
rclb
mov
xchg
push
dec
notb
mov
jmp
xor
cmp
cwtl
sub
stos
xor
push
mov
fs
xchg
loope
xor
pop
adcl
lahf
aaa
add
scas
jge
adcl
fbstp
dec
xor
jg
fsts
xlat
pop
repnz
push
jp
or
in
dec
cmp
mov
inc
test
xchg
mov
arpl
jp
test
jb
enter
fwait
shrl
add
jg
add
push
sub
or
scas
xor
dec
jno
xchg
or
push
pusha
mov
ljmp
jns
inc
xor
les
cmp
popf
or
iret
int
pusha
mov
and
inc
push
pop
inc
jo
pop
adc
jb
xchg
ja
imul
out
mov
sbb
jne
jge
and
push
or
ret
jmp
push
xchg
pop
aad
mov
cltd
mov
ja
push
popa
jmp
lods
sti
sar
or
xor
jge
jb
xchg
mov
xchg
fiadds
xchg
xchg
fmuls
xchg
rclb
out
push
ljmp
push
pop
aad
jb
push
sbb
and
enter
ss
and
jb
xchg
clc
pop
inc
pushf
cmp
mov
ss
or
add
fs
xchg
in
push
xchg
pop
xor
and
sti
jns
xlat
and
out
mov
pop
xor
movsl
xchg
cmp
inc
test
add
jl
int3
jmp
jne
shl
jmp
jmp
xchg
fidivs
bound
xor
jnp
jns
inc
cld
testl
hlt
dec
add
into
mov
and
imul
cmc
xchg
mov
mov
data16
jbe
out
in
or
inc
aad
pop
test
jge
fcomps
push
int
pop
push
lret
test
sbb
test
push
in
in
pop
aaa
fstpt
loopne
test
sub
sahf
ljmp
mov
rolb
les
dec
xor
adc
jne
aad
orb
std
arpl
xchg
rol
call
lea
push
xchg
cltd
repnz
imul
jns
cmp
sub
xchg
inc
dec
cs
lock
nop
jp
jne
mov
sbb
push
jno
xchg
repz
leave
insb
scas
and
lcall
adc
scas
or
pop
adcl
clc
dec
mov
test
pop
adc
arpl
lods
push
test
push
cmp
xorl
xor
push
call
mov
int3
inc
fldcw
mov
lret
pop
and
jl
or
sbb
das
mov
mov
sub
out
jne
jbe
imul
pop
jno
inc
push
movsl
or
and
dec
and
pop
in
sub
dec
out
push
or
ficoms
sbb
mov
shlb
push
xor
or
out
stos
or
test
bound
mov
adc
insl
jecxz
mov
test
sub
push
pop
aam
outsl
adc
push
mov
push
out
fistl
test
popf
clc
inc
enter
mov
in
sub
ficompl
repz
lret
xchg
aaa
iret
xchg
sub
out
pop
push
mov
fiadds
fildll
outsl
movsb
xorb
fcompl
cmp
dec
in
lret
outsb
outsb
push
push
shrb
push
inc
inc
or
setnp
mov
mov
add
scas
fsubs
pop
mov
dec
movsl
int
out
adcl
cmp
mov
out
jl
rcll
imul
jns
loopne
lock
fwait
xchg
jnp
push
mov
pop
or
std
insb
mov
mov
xchg
cld
and
push
filds
stos
and
jne
cmp
mov
fistl
lret
imul
fsts
test
and
lds
daa
cmp
mov
stos
sti
fs
mov
sti
pusha
or
push
sub
add
or
out
xchg
push
movsl
loopne
aas
outsb
loope
rcrl
ja
xchg
push
jno
pop
adc
adc
push
jg
xor
hlt
jecxz
imul
int
out
mov
pop
aas
xor
popf
rclb
decb
pop
adc
nopl
icebp
call
jne
rcll
in
out
sti
mov
add
sub
dec
xchg
ficompl
mov
adc
sub
iret
mov
push
ret
dec
mov
mov
adc
mov
ret
pop
dec
cltd
mov
loope
mov
pop
mov
pop
and
inc
xorl
mov
mov
xchg
shlb
sbb
es
pushf
mov
jne
xlat
dec
mull
test
inc
nop
jns
add
jbe
dec
adc
out
mov
fsubrl
hlt
je
scas
rcrl
pop
push
pop
cmp
ss
popf
push
push
mov
lret
cmp
mov
fidivs
jl
adc
or
add
insb
push
or
aam
out
lret
iret
pop
and
xchg
cmp
out
mov
or
or
negb
mov
sahf
mov
mov
in
decl
fadds
fcomps
sub
cmp
sbb
adc
sub
dec
insb
movsb
add
jne
pop
xchg
fstps
fwait
jno
adc
xchg
mov
mov
int
adc
mov
jp
or
pop
js
xchg
cli
sbb
push
dec
in
jl
jno
xchg
pop
fsts
xchg
flds
and
lock
pusha
sbb
sub
fwait
pop
ss
cmp
xor
cmp
sbb
add
and
stos
cld
fcmovnb
stos
into
mov
add
std
add
sbb
sbb
ret
movsb
dec
fiadds
repnz
xchg
inc
pop
dec
notb
mov
ret
shlb
outsl
push
hlt
mov
fwait
xchg
add
imul
xor
stos
sub
mov
jo
sbbl
imul
adc
or
test
mov
mov
dec
adc
push
mov
ss
mov
ja
lcall
sbb
mov
or
ds
mov
pop
ljmp
mov
and
xchg
scas
mov
push
pop
out
fmuls
imul
jmp
ret
add
pop
lret
dec
sub
inc
xor
movsb
pop
test
and
shll
mov
aam
cmpl
cwtl
std
add
sbb
sbb
xchg
xor
cmpl
lret
sub
hlt
in
mov
push
and
fdivs
xchg
out
inc
push
lret
push
mov
jl
inc
xchg
fistpll
lea
daa
icebp
mov
xchg
xchg
dec
xor
pop
imul
mov
jmp
pop
out
push
adc
xchg
insl
into
jae
inc
insl
stos
mov
sub
stos
test
pushf
adc
jnp
out
addb
leave
mov
xor
mov
sub
std
add
and
or
or
mov
pop
sbb
jge
imul
faddp
ss
mov
cltd
rorb
jo
outsl
xor
mul
mov
add
pop
or
lock
cld
adc
popf
lock
scas
jg
pop
sbb
mov
loopne
inc
sbb
pop
adc
jbe
loopne
fsub
adc
int
lahf
mov
and
xorb
lock
lods
int3
push
push
mov
mov
fwait
mov
mov
xchg
xchg
and
aad
pusha
adc
add
cmp
sub
imul
jne
outsl
test
mov
pop
push
jl
jp
in
mov
cltd
sbb
jbe
pop
repz
outsb
or
mov
push
and
inc
adc
mov
cmc
out
ffree
mov
sub
xchg
push
clc
fmull
test
add
cmpsl
loope
add
push
int
pop
sub
dec
xchg
lock
pop
cmc
jno
lods
iret
jb
mov
cmpsl
mov
dec
dec
and
mov
test
mov
mov
pop
repnz
dec
dec
icebp
jno
pop
ja
pop
cltd
sbb
xchg
test
pop
jp
xchg
mov
addl
push
cmpsb
outsl
andl
sub
insl
hlt
test
jl
insb
movsb
jnp
iret
add
lock
adc
push
jne
sub
es
daa
sbb
repnz
leave
or
out
bound
sub
push
add
and
xchg
mov
mov
sbb
xchg
lcall
mov
fsubs
xchg
cmpsb
int
mov
push
push
and
popf
push
in
jo
test
cmp
aaa
sub
leave
push
sub
xchg
fldlg2
add
sub
loopne
mov
and
rorb
dec
out
stos
inc
pop
inc
mov
mov
pop
jns
mov
das
lods
loopne
xchg
fistpl
test
lret
mov
dec
out
mov
pop
jl
lret
scas
iret
aam
in
inc
inc
sbb
mov
shll
shlb
insb
adc
mov
je
out
loop
mov
ret
nop
aaa
ret
daa
xchg
movsl
cli
add
cmp
fistl
cmpsb
sahf
mov
cmpb
shl
add
and
aam
cmp
lcall
mov
aaa
and
dec
mov
adc
cs
pop
icebp
xchg
jae
and
popa
jb
or
jns
ret
xor
bound
clc
sahf
mov
dec
cs
lods
pop
jg
add
or
or
ja
into
inc
push
jl
jecxz
sbb
or
push
jl
mov
mov
imul
inc
push
mov
cmp
cld
icebp
stos
dec
mov
or
push
jbe
mov
scas
cli
add
mov
sub
aam
lret
mov
imul
lock
pop
mov
gs
xor
mov
xor
test
jl
pop
mov
sbb
sbb
aam
jp
pop
pop
pop
in
pushl
ficoms
cmc
loopne
cmp
xchg
mov
nop
popa
pop
enter
fistl
dec
gs
cmp
out
sub
leave
cmp
outsl
xchg
cmp
adc
in
adc
push
inc
stos
mov
lcall
fbld
pop
dec
ret
nop
jae
jp
pop
sub
out
push
jl
and
inc
pop
mov
rol
movl
adc
and
xlat
mov
xor
pushf
subl
mov
dec
test
jne
in
xlat
call
out
or
lods
pop
mov
imul
fsub
xor
das
jae
xlat
push
aad
jne
dec
mov
jns
sub
mov
sarl
fnsave
jecxz
adc
jb
cmc
dec
jp
sbb
clc
xchg
mov
hlt
dec
xchg
fwait
dec
gs
mov
mov
mov
dec
cwtl
pusha
push
stos
jle,pt
xchg
ficompl
fxch
sbb
sbb
lcall
cmp
or
in
pop
int3
sub
push
in
cmc
addl
out
cvtps2pd
jle
mov
push
out
icebp
mov
std
orl
inc
and
mov
jg
push
cld
sbb
lcall
inc
imul
push
into
fstl
call
shlb
sub
jecxz
xchg
push
mov
adc
xchg
stos
dec
int3
mov
mov
mov
in
inc
and
jp
or
inc
orb
dec
clc
ljmp
sbb
adc
sub
mov
xor
mov
fwait
test
les
add
adc
mov
popa
adc
lds
or
fstps
jle
and
dec
cs
mov
lock
enter
mov
imul
es
pop
ret
stc
or
les
insl
push
add
ret
loop
pop
clc
dec
lahf
aam
cmpb
int3
and
popf
or
loopne
hlt
movsb
lock
test
clc
xchg
pusha
sbb
jae
shlb
jno
popl
mov
cmp
jle
rolb
inc
sub
mov
mov
shlb
xor
xchg
mov
je
mov
test
aaa
xchg
bound
or
dec
inc
ljmp
cmp
out
fistpll
push
test
push
add
loopne
inc
inc
and
divl
mov
pop
dec
arpl
mov
cmp
movsl
mov
xor
lea
imul
aad
jle
inc
xchg
jmp
sub
iret
out
repz
jecxz
into
xchg
outsl
jp
lock
jmp
cli
cmp
iret
test
pop
cltd
bound
icebp
test
mov
nop
jmp
dec
js
jmp
mov
data16
inc
imul
std
stos
sbb
xchg
jno
cltd
icebp
jmp
mov
iret
dec
icebp
mov
fists
pop
and
or
lea
mov
popa
scas
jbe
mov
fcomps
and
into
cmpb
jne
pop
test
inc
sahf
dec
jge
adc
mov
or
pop
add
repz
push
stos
lret
inc
xchg
std
and
sub
dec
and
cmpb
dec
popa
lcall
cltd
jmp
aam
mov
imul
adc
pop
fstpl
ret
mov
xor
pop
pop
lods
mov
jb
scas
fcmovbe
cmpsb
mov
frstor
pop
and
je
xchg
mov
sbb
lahf
mov
stos
jne
lds
in
inc
fistpl
movsb
out
xchg
jp
xor
test
add
in
dec
loope
inc
sub
stos
test
mov
adc
sbb
cmc
popa
loope
mov
inc
pop
cmp
cmp
mov
mov
inc
push
dec
lret
dec
int
cmp
cltd
mov
pop
sub
push
into
fdivrl
test
mov
dec
xchg
shl
mov
push
sub
adc
insb
adcb
in
mov
xchg
stos
push
mov
pop
or
psubusw
xchg
ror
out
aaa
into
orl
or
pop
ljmp
scas
mov
push
mov
ljmp
insb
outsl
fists
dec
fstpt
mov
les
pop
adc
or
jbe
mov
jmp
xchg
dec
lods
jecxz
or
pop
mov
mov
pusha
call
loop
jns
sbb
imul
dec
std
mov
addr16
std
cmp
pop
jmp
rorb
xchg
ss
adcl
ds
mov
lret
adc
pop
jl
hlt
lret
shrb
push
jecxz
int
in
call
mov
popa
add
addr16
daa
popf
test
push
dec
push
pop
cld
sbb
mov
fcmovbe
imul
enter
add
inc
pushf
jmp
rcrl
xchg
in
stos
cmp
repz
fistpll
mov
movsb
stos
pop
out
dec
aam
xchg
push
mov
dec
mov
push
xor
rol
mov
sbbl
out
bound
rcr
movl
lds
lock
jge
sahf
fiaddl
fmul
cwtl
test
andl
std
rcll
repz
mov
xchg
jmp
jge
adc
xor
lahf
scas
push
divl
lcall
sbb
xchg
test
adc
stos
mov
cmc
xor
sbb
mov
push
jb
iret
out
add
aam
sbb
pop
cld
xchg
mov
rcrl
dec
shlb
fld
jns
inc
adc
pop
inc
addr16
sub
inc
mov
lods
cli
mov
test
lahf
out
aas
jmp
aaa
jp
dec
jno
jge
inc
add
imul
inc
dec
dec
jp
inc
daa
jb
cmp
lock
movsb
bound
rcrb
stos
ret
mov
mov
and
scas
add
int
jbe
jae
sbb
movsl
xor
scas
lret
mov
mov
inc
adc
test
movsb
nop
je
fcomps
pop
push
dec
aas
hlt
and
cmpsl
popf
subb
ds
cmp
cmp
in
pop
imul
push
push
cmpsb
addb
in
dec
mov
cmp
add
sbb
jno
and
out
jge
adc
mov
pop
add
xchg
sbb
shl
add
call
sbb
push
ljmp
int
jmp
sbb
loopne
sti
stos
and
or
stos
mov
inc
adc
push
push
or
push
out
dec
std
dec
divb
pop
jmp
stos
inc
test
ja
jbe
out
cmp
out
and
xchg
js
nop
adc
sahf
push
mov
cmp
mov
das
xor
ds
cvtdq2ps
fmull
add
cmpb
loopne
lods
mov
or
push
sub
fs
pop
cli
icebp
xor
scas
fidivrl
push
sbb
filds
and
out
stos
dec
add
repz
por
jns
or
mov
leave
je
mov
mov
and
xchg
pop
mov
outsl
fidivrl
pop
fisttpl
sbb
popa
sbb
mov
imul
call
cli
int3
inc
test
test
jnp
les
sub
push
xchg
scas
icebp
notb
popf
rol
js
push
fmuls
lea
or
mov
cmp
jecxz
pop
mov
add
andl
mov
mov
js
pop
out
and
lods
xchg
pop
lret
lods
loop
fisttpl
fcmovnbe
pusha
and
xlat
rclb
and
fimull
nop
jecxz
add
xchg
adc
jo
push
fnstcw
xor
add
roll
xor
jp
or
jne
mov
mov
push
jbe
sbbb
xchg
add
outsb
fidivrs
leave
dec
leave
and
subb
jno
lret
adcl
jg
sti
push
mov
xchg
cmp
xor
outsl
xor
and
lods
xchg
aad
and
popf
sub
sub
lret
mov
push
cmp
add
jns
inc
iret
pop
pop
sahf
mov
xlat
inc
imul
mov
daa
cs
into
jne
jne
sahf
adc
fadd
add
cmp
sbb
pop
pop
lods
fisubl
and
cmpsl
sub
cmc
mov
gs
mov
push
vmfunc
fsubs
test
jle
inc
xlat
push
outsb
mov
les
inc
hlt
mov
fsubr
call
int3
sub
aam
jmp
fdivrs
or
int
pop
mov
cs
testb
adc
sub
xor
xorb
fadd
pop
lret
cmpl
push
pop
xchg
adc
sbb
mov
test
sub
clc
repz
mov
mov
sahf
insl
pop
call
xchg
pop
pop
cmp
jecxz
push
push
popa
push
test
push
pop
mov
jne
loop
in
mov
add
cmp
inc
cltd
xlat
inc
out
jl
xchg
test
jno
lods
stos
inc
adc
cmpsb
lods
xchg
sub
fadds
jl
xorl
sub
sub
mov
sbb
sbb
sti
shl
inc
dec
jecxz
in
aaa
ror
mov
scas
pop
inc
push
and
arpl
in
ljmp
mov
xor
pop
push
xchg
dec
mov
jo
jg
test
je
sti
xlat
add
mov
scas
or
call
insb
jb
pop
pop
aam
xchg
fsubrl
xchg
subl
fadd
dec
int
sbb
mov
xchg
inc
fsts
out
sub
mov
or
cmp
push
decb
mov
sbb
gs
outsl
or
xor
pop
inc
jbe
mov
mov
push
std
ret
enter
rorb
lret
xor
repnz
and
lret
jle
jo
and
add
iret
dec
dec
js
jne
aas
lret
cmc
test
jo
xorb
dec
inc
movl
xchg
sub
xor
dec
iret
ret
push
cmpsl
adc
out
aam
mov
lds
call
test
pop
jae
hlt
loop
jmp
fimull
mov
sbb
or
sbb
lods
into
cmp
mov
push
xlat
lds
stos
dec
push
xchg
in
int3
jbe
sub
push
fwait
fs
adc
xlat
fcmovbe
jg
mul
test
popa
repnz
aad
addr16
and
cmp
ljmp
mov
pop
mov
ljmp
dec
into
and
fwait
or
in
int
inc
ds
jb
push
dec
inc
mov
or
rcll
and
gs
je
fsub
jl
mov
dec
bound
lahf
iret
loop
sbb
mov
push
flds
adc
data16
aas
loopne
sahf
aam
push
shr
jg
test
js
pop
sti
cmp
je
or
mov
les
aam
xor
add
ret
aaa
test
inc
sahf
or
lea
aaa
lcall
stc
adc
int3
in
push
inc
inc
cmc
cs
or
sub
fisubl
push
sbb
loop
pusha
aas
mov
sub
int
shlb
and
mov
lret
cwtl
loope
pop
ljmp
mov
pop
jnp
shlb
in
ret
jle
xor
les
sub
in
pop
ret
mov
sub
xor
lock
adc
ja
add
mov
and
mov
jmp
mov
jae
jge
rorb
mov
xchg
push
adc
pop
sarb
mov
lods
or
arpl
and
lock
dec
arpl
mov
mov
or
jbe
xor
pop
mov
or
or
mov
fwait
rorb
add
push
xchg
sub
ss
sbb
mov
xlat
cmp
mov
mov
cli
flds
dec
push
fisttpl
mov
cltd
out
adc
mov
aaa
jmp
aas
iret
xchg
mov
rcrb
and
push
loopne
mov
inc
jle
mov
jl
out
sbb
lods
fsts
push
mov
pop
pop
xorl
insb
pop
ficoml
arpl
stos
mov
xor
add
dec
inc
mov
and
ljmp
mov
negw
cmpsb
popa
adc
cmp
or
out
inc
out
lahf
xchg
fwait
or
cmp
jbe
pop
pusha
es
and
int3
cltd
imul
mov
pop
idivl
pop
dec
add
jno
and
stc
or
stc
and
test
and
bnd
pop
mov
sbb
andb
adc
xchg
lods
stos
scas
das
js
sar
or
faddl
mov
orl
xchg
and
xchg
xchg
pusha
insl
cmp
into
jp
andb
testb
fs
or
push
jns
lret
jmp
in
orb
or
pop
mov
cmp
lret
movsl
push
popf
jb
xchg
mov
or
ja
mov
aas
int3
popf
or
les
data16
mov
imul
or
jns
sahf
add
pop
shlb
dec
bound
aad
cmp
and
data16
xor
out
push
mov
mov
loope
sti
incb
cltd
fdiv
or
ret
dec
pop
pop
test
fmull
roll
je
pop
outsb
cmpsl
cmp
sarl
stc
push
iret
bound
daa
lods
sti
int
xchg
pushf
test
imul
adc
sbb
fildl
mov
mov
and
jle
jecxz
pushf
je
add
je
enter
aad
sub
lds
stos
add
shrb
pop
xchg
add
jge
stos
mov
lret
hlt
fbstp
nop
dec
daa
fcmovnb
movsb
xchg
fidivrl
sbb
and
xacquire
movsb
jmp
ds
jo
addr16
mov
mov
or
lahf
sbb
insb
call
dec
add
icebp
pop
or
jnp
iret
push
aad
mov
clc
inc
scas
mov
lret
dec
mov
fcmovbe
in
mov
lock
mov
and
sbb
jb
jne
xlat
mov
daa
push
outsl
mov
sti
add
movsb
xchg
jo
nop
sarb
xor
lcall
leave
sbb
test
sbb
lcall
clc
cmp
mov
push
mov
arpl
stos
sbb
sahf
xchg
and
lcall
jbe
jnp
mov
call
push
dec
rcr
add
push
popa
dec
addr16
inc
mov
or
lods
or
mov
scas
xor
cmp
shlb
out
add
mov
pop
adc
fwait
outsl
dec
cwtl
movsb
loopne
fidivrs
add
sbb
xor
imul
into
fs
inc
test
inc
enter
xchg
sbb
push
test
rolb
loopne
int
pop
in
pop
fists
test
testb
ja
in
fmulp
es
test
cli
shll
push
lds
dec
mov
in
movsb
mov
lcall
int
int3
arpl
mov
push
xor
shll
test
ljmp
bound
inc
loopne
mov
push
pushf
xlat
push
cmp
dec
push
jecxz
rcr
rcll
xor
lds
in
pop
dec
xlat
sub
aad
repnz
mov
push
adc
repz
sub
xlat
fimull
mov
xchg
stos
mov
imul
inc
iret
inc
mov
jg
jl
pop
xor
shlb
add
imul
aad
jge
cltd
gs
pop
bound
jo
pop
xor
mov
stos
lahf
add
mov
xchg
sbb
and
arpl
aaa
or
xchg
js
gs
mov
jbe
adc
add
cmpsl
dec
sbb
call
daa
mov
imul
push
orb
orb
sub
movq
jl
mov
xchg
mov
stos
add
test
decl
or
std
mov
dec
insb
cwtl
sub
movsb
or
jg
fdivrp
scas
cs
out
sub
les
leave
int3
push
dec
cmpsb
mov
pop
insl
sbb
jle
xchg
mov
inc
cmp
xchg
ret
out
enter
pop
xchg
imul
aad
fldenv
fisubrl
leave
jo
shll
xchg
xor
addr16
push
cmpsl
iret
das
shll
sub
test
fstpl
push
in
fs
mov
push
into
inc
sub
adc
jmp
std
xor
cli
jmp
sub
jge
test
dec
pop
out
int3
pop
push
pop
fidivrs
or
fidivs
ffreep
adc
das
mov
addr16
xchg
inc
mov
dec
sub
sbb
int3
mov
mov
mov
adc
xchg
sub
push
cmp
xchg
shl
mov
ss
roll
ret
xor
pop
xchg
inc
adc
xor
outsb
les
out
pop
pop
insb
stos
dec
clc
fdivrs
dec
push
inc
in
xor
add
pop
mov
sub
or
adc
pop
mov
sar
cmp
fsts
imul
adc
push
lods
movsl
int
pop
roll
adc
and
mov
pop
fsubrs
xchg
cltd
pmuludq
xor
stc
adc
pop
xchg
add
xchg
dec
adc
xchg
cmpsb
ret
pushf
jge
cs
idivb
pop
mov
aad
ds
mov
div
mov
add
fbstp
mov
into
fs
sbb
cmpsl
inc
pop
sub
and
call
mov
sbb
hlt
pop
ds
decl
pop
pop
fiaddl
loopne
cmp
ret
stos
sub
push
test
rcr
inc
rep
mov
dec
cmpsl
hlt
mov
es
rorb
inc
fsubrp
inc
daa
xchg
aas
push
xchg
push
push
and
fsubp
sub
mov
es
or
pop
cmp
icebp
and
out
cmp
xchg
rcrl
jbe
mov
mov
daa
cmp
push
stc
jg
aad
daa
add
repnz
enter
stos
rcr
scas
pop
sub
call
popl
mov
loop
push
sub
sarb
xor
out
pop
ds
rcrb
shl
push
aaa
jnp
mov
call
negl
into
push
push
or
sbb
cld
dec
push
repz
insb
ljmp
rorb
and
xchg
xor
xor
stos
sbb
ja
out
jg
cmpsl
jmp
es
push
xchg
incl
aas
push
xchg
ret
jne
mov
lahf
cld
repnz
xlat
push
jae
lods
sub
sbb
movsl
pop
dec
clc
sub
lret
or
pop
cld
mov
sbb
mulb
jg
mov
xchg
lock
popl
imul
adc
insb
es
pop
loope
in
in
push
cmp
sub
stc
adc
cmpsl
int3
xchg
mov
lods
mov
xchg
jp
lcall
sarb
pop
xchg
mov
clc
jp
add
inc
dec
scas
jg
xor
dec
sbb
mov
xchg
int
fldl
pop
cwtl
push
lea
aam
imul
mov
cli
mov
sahf
mov
mov
imul
xchg
add
cwtl
shrb
push
push
sub
into
mov
jo
jp
in
repnz
pop
ret
sti
and
popf
les
push
in
xor
mov
dec
and
pop
je
push
jge
push
sub
jb,pn
loopne
test
clc
test
arpl
cld
sub
fnsave
cwtl
maskmovq
imull
js
roll
out
cmp
aad
jecxz
clc
jecxz
lods
imul
push
pop
dec
data16
mov
fwait
bound
sub
push
or
negl
push
dec
imul
icebp
cwtl
lret
xchg
jle
cwtl
addb
ret
jno
inc
mov
dec
popa
dec
lahf
and
mov
rorl
js
jle
movsl
sub
mov
xor
xor
xchg
or
fwait
and
into
lods
out
pop
shrl
cmp
out
fisttpl
popa
or
sub
aad
sarl
mov
jmp
push
mov
dec
aam
push
lods
cld
adc
mov
and
arpl
mov
fnstcw
inc
pusha
cld
or
and
lahf
shrb
gs
leave
loope
and
ja
sbb
outsb
adc
xor
imul
xchg
cs
dec
or
les
xor
cwtl
ficompl
test
or
jnp
fsts
push
ss
push
leave
or
lcall
cli
mov
adc
sarl
mov
dec
xchg
push
fsubl
decl
push
add
lods
push
imul
dec
push
dec
scas
ret
jp
add
push
daa
mov
adc
push
jl
xchg
mov
sahf
jge
fisubs
aas
lods
leave
cltd
xchg
ficomps
mov
test
loopne
lods
add
les
jl
test
outsb
push
fbstp
sbb
jns
ret
stos
pop
fwait
adc
mov
scas
loop
add
adc
es
or
ljmp
and
inc
cmp
sub
insl
fildll
adc
push
enter
cwtl
das
jne
pushf
jo
scas
sbb
cmp
shlb
dec
stos
je
jmp
in
lea
and
lock
lods
inc
sub
sahf
add
xchg
sub
aad
pushf
xchg
sbb
cmp
std
jecxz
inc
lcall
dec
addr16
sub
mov
xchg
xor
inc
or
aam
cwtl
fsts
fcmove
dec
idivl
push
aam
lock
or
lcall
jge
push
lahf
cmp
xor
cltd
cmp
divb
insb
nop
test
sbb
mov
mov
sti
push
sbb
lcall
mull
idivb
repnz
mov
mov
jo
mov
cmp
mov
xor
in
push
outsl
mov
dec
jl
push
sbb
shl
push
mov
mov
addr16
cwtl
and
push
adc
arpl
rclb
pushf
adc
jg
movsb
btr
mov
pop
push
lahf
or
push
xor
xor
cld
sbb
add
push
sub
push
neg
jecxz
sub
push
jmp
lahf
fs
mov
insl
sub
out
adc
jg
pop
jp
iret
nop
cmc
mov
ror
mov
inc
push
scas
lahf
xor
int3
and
movsb
jmp
popf
cmp
pop
inc
mov
inc
subl
rcrl
repz
shlb
xchg
sahf
mov
cld
xchg
xor
cmc
movsl
jp
mov
ffree
sbb
add
xor
jns
jmp
dec
shl
push
aam
fidivrs
dec
and
mov
gs
mov
outsl
daa
lahf
rcrb
mull
lcall
dec
test
and
aas
mov
and
pusha
int3
xchg
pusha
mov
notb
adc
stos
nop
xchg
iret
pop
and
out
in
test
cltd
fcmovnb
inc
ds
fimull
dec
scas
mov
lcall
mov
push
mov
adc
mov
cmp
xchg
adc
cmpsl
xor
dec
mov
mul
mov
pop
push
and
and
push
loopne
gs
add
jp
cs
les
jnp
icebp
bound
cld
bound
pop
inc
mulb
addl
repnz
cmp
pop
popa
mov
push
xchg
out
xchg
or
mov
or
jmp
jb
notb
ds
fildll
push
inc
arpl
inc
mov
adc
cwtl
mov
add
dec
dec
add
lcall
fnsave
ja
sbb
push
roll
add
data16
cmpsb
aaa
and
mov
movsb
xor
cmp
fisubs
mov
fs
push
arpl
push
in
jae
loopne
pop
test
call
in
js
dec
std
mov
sub
sub
cld
inc
mov
dec
mov
rorb
dec
dec
push
shll
into
fldl
pop
lods
leave
cmpsb
or
movsb
xchg
xorb
int
in
aas
sbb
movl
outsb
movsb
sub
icebp
lods
cmpsl
jl
leave
dec
xchg
pop
mov
idivb
stos
sub
pop
pusha
aaa
outsb
add
jnp
xor
addr16
cmpsb
leave
lds
movsb
inc
test
lahf
mov
adc
inc
rorl
arpl
xor
adc
dec
push
sub
subl
enter
mov
pop
fs
loopne
mov
test
pop
andb
imul
mov
adc
jb
scas
stos
sbb
adc
jl
jp
jp
out
popa
jecxz
or
push
mov
push
gs
dec
out
ficompl
or
cltd
pusha
add
push
sbb
sbb
mov
mov
iret
aas
stos
clc
jmp
loopne
loopne
lcall
pop
jo
jae
jnp
sub
hlt
mov
in
fimull
roll
inc
cli
fwait
dec
adc
adc
push
outsl
cmp
test
pop
bound
adc
inc
xchg
cmova
mov
or
mov
mov
rcrb
scas
out
imul
push
mov
xchg
push
negb
mov
inc
lea
xor
lds
lcall
sbb
cltd
adc
and
fadds
xchg
xchg
adc
cwtl
add
cmpsl
out
aas
out
jb
std
add
mov
xchg
shl
shlb
int
add
stos
les
jne
mov
gs
jb
mov
mov
sub
sub
push
inc
enter
or
pop
pop
sub
sub
mov
push
lret
pop
loopne
pop
fsubl
leave
scas
fmuls
and
shl
iret
xor
inc
inc
aas
xor
hlt
stos
cmpsb
xchg
push
ret
push
xchg
inc
push
stos
leave
fs
add
xor
dec
int3
mov
rcrb
lock
dec
addr16
pop
jns
daa
inc
sbb
fs
jno
rolb
xor
sub
dec
or
pop
mov
iret
mov
add
xchg
mov
mov
xor
push
mov
or
add
mov
and
pushf
or
adc
jne
push
sbb
xor
cwtl
dec
mov
mov
scas
inc
nop
scas
jbe
movsl
inc
push
dec
daa
scas
ret
jl
cld
stos
test
adc
adc
or
nop
lcall
jne
lahf
jbe
push
aam
push
imul
lods
dec
add
jg
jle
pop
mov
dec
fwait
xchg
rol
mov
mov
push
dec
sub
add
rclb
flds
cmp
xor
out
jno
out
inc
inc
mov
roll
mov
pushf
add
jbe
idivl
mov
sub
in
xorb
sti
push
mov
inc
add
mov
mov
add
sub
pushf
jno
lock
aas
jmp
cmpsl
jnp
pop
sbb
xchg
in
jae
outsb
ret
and
mov
cmp
adc
rcrb
movsl
add
test
pop
adc
jge
subb
jno
cmc
arpl
or
test
xchg
or
leave
pop
xor
test
ret
mov
jmp
fs
lea
ds
and
std
nop
inc
test
xor
popl
mov
add
dec
cld
and
insl
lods
or
mov
or
jmp
xlat
push
cmp
dec
daa
mov
jno
fmul
xchg
inc
jb
adc
adc
xor
repz
lods
pop
and
cmpsl
jo
add
hlt
push
push
sahf
push
scas
fldenv
shl
sbb
shrb
xchg
notl
cli
mov
xchg
js
or
xchg
inc
cli
cmp
in
push
add
pusha
aad
movsl
fsubrp
mov
sub
ret
mov
fsubl
in
adc
jne
lea
pop
add
fisttps
mov
jecxz
jg
push
in
inc
xchg
pop
out
bound
mov
jl
and
push
add
stos
aaa
jg
and
mov
ret
cmpl
xor
ret
pop
mov
push
sbb
insl
jo
addr16
pop
or
insb
jne
sub
and
in
addb
push
xchg
jp
pop
cmp
scas
push
push
outsb
or
les
dec
lods
push
xchg
mov
test
repnz
sbb
cmp
imul
out
bound
mov
push
imul
mov
iret
jg
aas
and
pushf
pop
pop
lods
lret
sbb
decl
out
jb
mov
xorl
cmp
mov
adc
add
repnz
sub
mov
idivl
bound
mov
imul
imul
jbe
push
in
push
sub
and
xchg
ret
es
inc
lcall
dec
cs
jb
lret
cli
aas
dec
gs
dec
lds
call
mov
in
int
push
xor
loopne
minps
out
sbb
repnz
cmp
fmull
push
outsl
lods
dec
push
mov
sub
mov
xor
iret
stc
ds
fiaddl
pop
idiv
ja
xlat
jns
and
mov
hlt
out
iret
sub
adc
loop
cmp
cltd
fdivs
and
cmp
outsl
jl
pop
mov
xor
lcall
cmp
jg
jp
les
inc
cmp
out
mov
mov
pop
or
rol
mov
push
pop
mov
inc
jo
sbb
arpl
in
adc
push
aam
scas
or
hlt
mov
cwtl
adc
push
inc
pop
and
repz
testl
loopne
popa
cmpsl
popf
stos
or
popf
cli
test
lea
dec
jmp
mov
pop
lcall
pop
pusha
push
jb
rcrl
pop
sub
roll
xchg
imul
xchg
pop
adc
hlt
or
pop
leave
sbb
outsl
pop
out
jecxz
jmp
pushf
sbb
sub
js
pmaxsw
add
adc
mov
out
pop
dec
xchg
xor
shrl
leave
lds
movsb
cmpl
mov
in
fwait
push
outsl
jmp
insb
into
fucomi
rcrb
iret
xor
mov
mov
fnstenv
mov
fdiv
add
jae
xchg
dec
nopl
push
cmp
pop
adc
and
mov
lahf
pop
and
xchg
jge
repnz
add
ss
cmc
dec
xchg
leave
es
test
pop
mov
mov
mov
lcall
mov
cltd
sbb
cmp
sbb
jb
mov
decl
mov
outsl
out
inc
cwtl
int
clc
jecxz
fildll
inc
rcrl
cmp
test
push
cli
inc
jmp
out
mov
loope
adc
out
loop
into
jnp
sub
rorl
xor
jb
push
movsb
scas
ss
inc
flds
fcompl
dec
cmp
les
or
fs
js
int3
cmp
inc
into
dec
xchg
mov
mov
ret
stos
mov
sbb
cltd
aas
add
cmp
xor
int
shlb
addl
inc
mov
inc
fimuls
call
repz
xor
xchg
mov
and
pusha
cltd
sub
mov
daa
dec
popf
mov
out
sti
repz
push
out
movsl
mov
xchg
inc
add
imul
xchg
mov
mov
jo
adc
mov
stos
sbb
jg
and
push
insb
inc
negl
mov
icebp
add
fcomp
std
lret
cmc
movsl
in
push
dec
mov
push
out
stos
cmpsl
sub
pop
fwait
inc
movsl
insb
cmp
push
xchg
repz
cmp
xor
jbe
mov
mov
and
mov
test
mov
xchg
jge
or
lods
or
add
lcall
xor
cmpsb
dec
mov
push
pop
sbb
cmp
leave
mov
insb
mov
leave
fiadds
pushf
sbb
loopne
lods
movsb
and
jno
enter
int
outsb
test
xchg
fisubs
das
pop
sbb
cmp
out
stos
rcll
cmp
sarb
divb
inc
negb
pop
xchg
pop
sub
out
xor
adc
fldcw
push
push
jo
fstl
aaa
int
fidivrl
jne
dec
mov
gs
dec
pusha
scas
in
mov
push
xchg
mov
je
clc
jl
daa
mov
inc
add
and
ljmp
push
mov
xchg
xor
mov
push
aam
mov
hlt
xor
adc
and
sbb
insl
cmp
out
push
or
imul
std
sub
or
pop
xor
xchg
sbb
jnp
rcll
dec
or
push
mov
cmp
mov
cmc
lock
add
lods
or
pop
in
sbb
sbb
in
and
imul
lds
je
sub
icebp
lret
lea
rclb
inc
clc
shlb
out
add
insb
adc
sbb
sbb
inc
shll
and
loope
cmpl
loope
ficoms
fdivrs
js
mulb
fwait
jg
sbb
mov
cmp
dec
jecxz
push
pop
daa
fdivr
jne
pop
subl
pop
mov
daa
fxch
sahf
inc
push
test
jl
rcll
out
rcrb
stc
ucomiss
xor
fstps
push
test
int3
daa
xor
out
insb
and
loope
xor
inc
or
adc
test
sti
mov
mov
cmp
fwait
sub
push
mov
repnz
push
sub
jl
mov
andl
fmuls
pop
nop
daa
loopne
cmc
adc
fisubs
push
sahf
cmp
ret
faddl
fmulp
adc
out
orb
jmp
mov
test
iret
outsl
jp
lds
lock
mov
repnz
xchg
ljmp
sub
mov
push
ss
insb
cmp
imul
dec
shrl
add
mov
js
sbb
and
push
sub
pop
add
sbb
leave
std
sbb
mov
aaa
inc
jae
mov
jle
push
int
pop
mov
or
das
sahf
call
aas
sbb
sub
push
mov
in
jge
mov
movsl
push
pop
shlb
addr16
or
adcl
xchg
pop
lret
in
scas
pop
pop
mov
mov
push
sub
leave
push
mov
push
push
out
push
rolb
test
xrelease
or
sub
into
test
jmp
pop
pop
pop
rol
notb
push
daa
in
jp
fsubs
or
cmc
push
pop
es
push
dec
call
addr16
cwtl
cmp
cmpsb
push
ja
push
pop
xchg
gs
xchg
loop
cld
jecxz
dec
mov
inc
into
push
inc
aas
test
sbb
mov
add
mov
mov
pop
cmp
mov
mulb
in
push
loop
les
jmp
xor
leave
and
mov
aad
mov
push
cmp
int
dec
stos
cvtps2pd
fisubrl
sbb
xor
outsb
adc
push
in
mov
int
inc
cs
fwait
sub
sub
add
je
mov
loopne
and
mov
xlat
rclb
in
addr16
shl
popa
push
pop
rsqrtps
das
inc
dec
jl
popa
lea
adc
inc
aam
iret
and
lods
bound
push
lock
rcrb
enter
inc
cwtl
push
shrb
scas
jl
sti
enter
stos
int3
push
mov
fcomps
add
xor
mov
push
daa
movl
push
jb
add
cltd
lds
scas
mov
mov
pop
repz
xchg
ss
adc
cwtl
mov
fadd
lods
xchg
cmp
fimull
frstor
inc
stos
or
in
jle
adc
sbb
daa
and
push
loopne
data16
fadd
adc
adc
mov
pop
xor
or
inc
adc
or
or
pop
xor
pushf
sarl
jmp
jo
push
clc
and
jg
xchg
jg
aam
rolb
jbe
sub
cltd
in
pop
cwtl
loop
imul
fsubs
pop
stos
mov
fmul
sahf
xlat
mov
sub
int3
lret
fdivr
mov
xor
add
movsl
push
cwtl
inc
or
xchg
or
adc
outsl
mov
inc
insb
cs
fistpll
jns
jle
and
mov
dec
xchg
xchg
dec
xor
mov
mov
push
xor
xchg
stos
out
mov
movsb
adcl
dec
and
enter
sbb
add
push
jb
cmovbe
jno
stos
mov
pop
add
adc
mov
pop
addl
aaa
jb
pop
jecxz
popa
dec
cmp
or
mov
test
mov
lcall
mov
sub
pop
sub
push
mov
jg
gs
jecxz
sti
orl
push
out
inc
sub
inc
into
push
fadds
jl
movsb
ljmp
mov
lods
mov
repnz
mov
sbb
jge
mov
and
test
js
adc
aaa
test
sbb
fiadds
inc
clc
outsb
jl
loop
or
or
popf
stc
pop
inc
fidivrs
xchg
sti
jecxz
add
adc
outsl
cld
dec
lret
xchg
or
inc
push
lds
stc
cmpsl
insl
imul
push
nop
andb
mulb
cmpsb
mov
mov
mov
mov
enter
sub
sub
adc
xchg
mov
cmp
out
es
cmp
xlat
icebp
imul
orl
mov
dec
sbb
mov
fldl
mov
add
sbb
push
mov
push
repnz
ud0
and
xor
cwtl
lds
call
and
jp
aaa
lods
dec
pop
and
ss
inc
hlt
aas
xchg
iret
push
mov
int3
addr16
cld
pop
and
hlt
adc
add
mov
cmp
xchg
xor
pop
inc
fmull
fildl
insl
lret
mov
stos
fbstp
incl
xchg
xor
xchg
ds
aad
jl
mov
mov
andb
xor
scas
out
aad
sub
adc
test
lea
jns
mov
jp
sbb
std
shr
and
mov
or
cmp
dec
inc
ret
and
std
jns
dec
das
cmp
aas
leave
test
ljmp
out
lock
cltd
and
sbb
push
iret
adc
cli
mov
pop
sub
out
mov
mov
xrelease
ja
lock
lret
lods
sub
out
push
fwait
xchg
sub
cmp
cltd
adc
es
cltd
in
cmp
imul
push
push
cmpsb
pop
out
test
lds
insl
jmp
movsl
xor
jae
test
mov
arpl
mov
inc
aaa
out
aas
push
mov
in
test
and
xchg
adc
or
xchg
mov
cmp
ret
pop
pusha
xchg
mov
movsl
aas
mov
test
xchg
mov
out
outsl
loop
mov
fisubrl
outsl
jne
lret
mov
mov
popa
mov
adc
mov
stos
dec
pop
jge
sub
incl
inc
aam
mov
in
pop
push
popf
inc
int
gs
xorl
mov
popa
push
adc
ja
sub
stos
aaa
mov
cmp
bnd
sbb
and
cmp
adc
xchg
pusha
lcall
test
dec
imul
out
repz
bound
lret
xor
mov
ror
and
or
inc
hlt
jo
aam
gs
test
stos
mov
fnstsw
mov
mov
mov
sbb
popf
push
add
inc
ret
in
or
dec
inc
and
insl
mov
out
mov
fsubs
xchg
in
fldl
push
xchg
repnz
mov
xor
and
pop
mov
cmp
sbb
mov
ficompl
incb
inc
sub
or
enter
mov
scas
popa
xchg
sahf
pop
popl
repz
call
mov
out
stos
and
jecxz
repz
push
mov
or
xor
dec
and
addb
jge
jl
jmp
ficoml
pop
pop
or
add
movsb
sub
sub
rcrb
fists
into
pusha
xchg
xchg
sti
scas
xor
mov
mov
inc
lahf
xor
iret
adc
insb
xchg
out
and
dec
sbb
pop
pusha
test
sbb
mov
ret
ja
push
jnp
insb
add
mov
lods
filds
sub
xlat
jecxz
pop
push
push
les
cli
outsb
cmc
adc
cs
pop
jle
fisttps
enter
add
imul
and
idivl
out
push
xchg
push
inc
or
dec
sbb
imul
cli
fwait
lock
lret
mov
dec
add
lock
aam
xor
add
adc
lock
xor
clc
in
and
mov
inc
bound
jmp
imul
push
popf
mov
push
sbb
inc
movsl
pop
lahf
pop
adc
aas
pop
stos
notb
push
lock
or
mov
mov
ret
dec
jae
imul
enter
ds
fcmovnu
cwtl
scas
mov
cld
mov
je
or
notb
mov
push
in
mov
xchg
out
pop
push
mov
mov
mov
hlt
or
jae
push
ds
mov
push
dec
cmp
xor
mov
outsb
data16
fcom
lods
xchg
sbb
ds
mov
push
lret
mov
mov
repz
in
cld
outsl
xorb
shll
mov
jge
repnz
xchg
fstp
mov
pop
rolb
pop
push
inc
push
cmp
ljmp
add
scas
push
rol
subb
pusha
and
mov
das
cltd
fcmovnbe
adc
sbb
outsl
sahf
hlt
ror
sahf
jmp
fisttps
gs
popf
out
adc
leave
mov
adc
ja
xchg
lret
dec
dec
sbb
imul
push
cmc
dec
dec
fistps
push
add
pop
mov
jb
add
mov
sahf
mov
xor
rcrb
rolb
rol
out
decb
cld
out
std
testb
sub
xlat
mov
or
cmp
scas
mov
jecxz
xor
add
dec
lods
leave
push
sub
push
inc
xor
inc
stc
arpl
xlat
imul
cmp
xchg
lds
mov
and
aam
jg
out
stos
xor
lret
or
mov
cmp
insl
outsl
into
cld
pop
sbb
adc
pop
cltd
xchg
scas
rcrb
sarl
jl
test
sub
dec
pop
in
cwtl
cli
sbb
add
mov
sub
sub
mov
insl
add
adc
inc
stos
lds
mov
mov
es
cmc
jnp
lods
add
ret
shrb
or
mov
aad
popf
push
cmp
or
stos
pop
inc
test
push
push
sbb
jno
into
xlat
dec
push
iret
out
enter
or
dec
sub
test
add
gs
cwtl
and
mov
dec
call
es
int
sbb
sahf
sbb
clc
and
cmpsl
rcrb
jo
dec
or
adc
mov
lret
imul
fsubrl
jnp
cmp
lds
mov
pop
notb
arpl
int3
cmp
hlt
stos
jl
pop
jmp
jns
lahf
loop
std
outsb
or
or
xor
adc
ret
pushfw
out
movsl
cmp
std
leave
int3
sbb
dec
out
push
sahf
xor
lea
enter
mov
jmp
pushf
into
lock
iret
inc
pop
lcall
nop
stos
sbb
js
lock
daa
adc
jl
sub
je
cmp
outsb
push
sub
xchg
jmp
in
pop
fwait
sub
mov
adc
pop
push
push
fdivp
orb
nop
fadd
inc
push
adc
cmp
jmp
test
jp
scas
mov
fsubl
test
mov
enter
sub
lods
test
xchg
repnz
rorb
xchg
push
loope
xchg
inc
pop
leave
cmp
lret
popa
fistl
mov
xchg
pop
mov
test
jp
jge
orb
fs
sub
or
int3
mov
inc
shl
mov
jae
sub
aaa
lods
movsb
neg
mov
aad
cmpl
jg
pop
jecxz
xor
jp
nop
adc
in
xchg
mov
xchg
add
jnp
sbb
sahf
rcrl
pop
xor
jle
repz
sub
xor
mov
sbb
mov
mov
dec
add
pop
mov
inc
mov
fisubl
mov
mov
bsf
jmp
dec
fistl
movsb
stos
xchg
pop
lds
adc
jo
loop
pop
mov
xor
inc
dec
lcall
test
sbb
xor
sarl
popa
data16
push
pop
stos
dec
pop
jbe
pop
or
xchg
repnz
out
outsb
daa
and
push
or
sub
jmp
and
sub
in
aad
ljmp
adc
adc
push
xor
lea
push
fmul
cs
iret
xor
pop
sbbl
mov
fnsave
sbb
mov
stos
in
sahf
nop
mov
sbb
mov
xchg
rorl
xchg
sbb
js
popa
and
arpl
scas
push
imul
sbb
lret
stos
cmp
lea
jns
iret
push
rolb
push
loop
xor
stos
out
aaa
enter
aas
sub
aad
insl
adc
adc
xchg
jbe
in
inc
jmp
jae
xor
pop
pop
ss
sbb
leave
jmp
in
sbbl
xchg
cltd
cmc
fwait
mov
sbb
mov
sub
je
aas
xchg
inc
jb
xchg
test
inc
adcb
sbb
mov
stos
or
sub
and
push
gs
roll
pusha
sbb
mov
js
sub
repnz
mov
sbb
jmp
leave
mov
addr16
cmp
mov
cld
xchg
push
ret
push
jge
mov
xchg
mov
jp
dec
inc
jp
jp
push
jbe
xchg
xchg
lods
push
int3
add
iret
inc
mov
lea
test
and
fisttps
adc
or
lods
aas
ficoml
cld
jnp
or
and
fdivs
xchg
in
mov
cld
jg
fstpl
fucom
mov
sahf
aaa
test
pop
inc
pop
adc
cs
or
pushl
xor
cmp
aaa
mov
outsb
insb
xchg
iret
inc
movsb
xchg
sub
ret
pusha
mov
aam
jae
pop
mov
fmull
bound
add
jnp
dec
ja
out
pop
sub
pop
das
test
jbe
lds
rcrb
cmovs
fadds
and
ffreep
jb
mov
scas
adc
xor
add
inc
shll
xchg
lret
cmp
add
mov
jno
jge
and
jle
das
testb
adc
insl
cmp
mov
cmp
int
cld
repz
loope
and
popf
xor
xchg
les
add
shlb
jbe
shrl
mov
fcmovu
push
xchg
inc
cwtl
jecxz
js
cs
jg
dec
scas
fidivrl
xor
test
je
xchg
cmpsl
in
or
and
ret
popf
inc
cmpsl
ret
xchg
adc
ds
enter
sbb
lahf
push
xor
push
in
add
sub
sbb
jp
or
lds
xor
sub
pop
mov
icebp
push
imull
xchg
pop
push
pop
idivb
inc
repnz
or
ror
pop
out
jbe
or
addb
pop
push
ljmp
test
sbb
xor
call
sbb
and
push
adc
fs
fcmovb
lret
or
in
cli
rcrl
outsl
push
mov
dec
jne
jnp
mov
inc
cs
adc
add
xor
sub
ret
jle
cmp
add
xor
add
cmpsl
test
jg
pop
movsbl
sub
sar
hlt
rcrb
jnp
sbb
xor
mov
stc
cmp
data16
ret
pop
iret
stos
out
insb
pop
jo
sbb
shlb
out
fildl
cmpb
sbb
loopne
aam
xchg
js
cmc
mov
push
add
cli
cs
pop
rcl
adc
and
enter
into
lret
ja
push
lcall
out
jbe
out
dec
cmp
stos
out
jg
clc
mov
cmp
test
push
std
mov
sti
sbb
addr16
and
ja
nop
xchg
inc
adcb
stc
outsb
daa
mov
push
lods
mov
ret
add
jbe
ss
mov
xor
leave
push
arpl
and
cmp
adc
inc
mov
popf
call
mov
lods
mov
lret
or
icebp
cmpsb
ds
xor
mov
sbb
loop
pop
aas
mov
sbb
pushf
pop
cwtl
jb,pt
test
stc
push
jecxz
ret
call
xchg
icebp
les
lock
shrl
cmp
cmpl
sbb
loop
js
mov
popa
lock
xchg
pushf
pusha
je
repz
aam
mov
iret
enter
pop
es
adc
pop
or
pop
les
gs
pushf
pushf
xor
mov
out
mov
stc
xchg
inc
enter
mov
jmp
sahf
inc
push
adc
pop
mov
mov
mov
mov
add
sahf
pushf
popf
cmp
push
or
xor
test
pop
adc
inc
xlat
xlat
fldenv
push
push
scas
dec
jle
adc
lods
stc
and
jo
in
mov
mov
xchg
sbb
pop
dec
adc
cltd
dec
inc
movsb
inc
xchg
loop
ds
iret
xchg
ljmp
mov
mov
pop
imul
sub
sahf
sub
dec
dec
imul
jle
cmp
arpl
inc
pop
lret
xor
adc
inc
pushl
movsb
ficoms
ljmp
inc
mov
rclb
repz
icebp
shlb
aaa
pop
bound
lahf
mov
xchg
xor
insb
dec
jbe
and
xchg
cmpsl
ret
mov
inc
push
fistpll
into
scas
dec
push
popl
jae
push
cwtl
cmp
je
dec
mov
sbb
repz
iret
push
fcomps
addr16
notl
xor
fisubl
mov
leave
xchg
ret
mov
xchg
add
mov
shrl
pop
add
ds
adc
or
dec
stc
mov
adc
jp
push
pshufw
pop
scas
ljmp
inc
clc
or
mov
ljmp
call
cmp
xor
jle
pop
push
adc
jge
into
leave
int
jae
inc
ds
sub
pop
xorl
test
repz
imul
mov
xor
popa
lahf
push
pop
in
fnsave
call
sbb
orl
imul
andb
xchg
test
ljmp
add
popf
ljmp
mov
lods
fs
imul
enter
lods
sub
push
sub
mov
mov
repnz
aam
dec
cmp
incb
inc
mov
out
dec
imul
inc
loope
lds
insb
mov
sub
push
cmp
mov
js
daa
dec
pop
outsb
in
xor
das
outsl
outsl
xor
aam
les
je
insl
mov
pop
insl
add
movsl
dec
aas
fists
rcrl
fcomps
stos
stos
fcmove
ret
lea
lea
jmp
jmp
aam
stc
sub
lock
fidivrs
jecxz
pop
sarb
in
cli
jbe
adc
pop
push
test
xchg
daa
in
popf
xor
jns
in
adcl
test
imulb
and
pop
dec
push
cmp
dec
movsl
jg
adc
ljmp
movsb
stc
aas
cli
insl
mov
mov
into
jecxz
cmpsl
out
popa
add
add
iret
push
xor
sbbb
sub
mov
jo
push
sti
stos
imul
and
test
pop
inc
dec
or
and
xchg
adc
nop
lods
hlt
jno
ret
test
adc
aam
mov
ret
and
adc
imul
xchg
scas
arpl
push
sarl
sti
adc
cwtl
es
mov
lcall
pop
mov
cmp
push
or
dec
adc
call
aam
sbb
sahf
sub
std
xor
mov
inc
roll
sub
movsb
aam
sbb
mov
xchg
dec
mov
push
dec
sbbb
jecxz
jcxz
pop
aas
xchg
sbb
mov
inc
movsl
xchg
sbb
ja
ret
push
push
pusha
jge
les
int3
fbld
inc
pop
pusha
loope
inc
push
push
ljmp
mov
jb
push
xchg
pop
jno,pn
negl
test
ds
mov
stos
push
inc
movsb
jmp
stos
sub
push
imul
xchg
test
andb
dec
xor
nop
mov
add
arpl
cmp
and
sub
adc
xorl
dec
xchg
xor
leave
inc
adc
cwtl
int3
in
push
and
out
jne
push
jg
mov
mov
push
jns
and
ljmp
mov
xchg
iret
enter
out
mov
sbb
push
lahf
ljmp
lgdtl
hlt
xchg
dec
push
inc
lahf
insb
les
int
fldcw
loopne
pop
lret
cltd
lret
inc
pop
cmp
int3
xor
jmp
and
sub
pop
sub
shrl
roll
push
mov
push
fcoml
sub
loope
fsubrl
arpl
xor
jns
int3
mov
xchg
scas
cmp
in
mov
icebp
push
outsb
xor
arpl
jno
notb
fstpt
in
test
lea
mov
or
in
pop
pop
pushf
nop
cmp
cli
mov
xchg
pop
jbe
pop
fldt
outsb
in
ja
mov
jnp
pop
pop
sbb
jns
push
and
jp
cltd
stos
fwait
cmp
sti
xchg
mov
pop
pop
out
fldenv
or
sbb
sarb
rcll
mov
push
int
mov
ret
shll
mull
andb
aas
js
test
movl
xchg
mov
add
call
cmpsl
in
data16
loop
stc
push
adc
jne
xchg
adc
inc
add
mov
xor
xor
scas
push
mov
imul
scas
stc
cmp
repz
mov
pop
insl
cmp
push
outsl
mov
mov
ja
hlt
xor
in
mov
imul
js
dec
mov
xor
rcr
sub
and
in
sub
enter
dec
push
les
pop
pop
mov
jp
sti
add
pop
mov
mov
js
psllw
adc
loopne
in
sbb
mov
icebp
sti
imul
mov
jo
cmp
dec
cwtl
push
enter
outsb
push
or
hlt
mov
call
mov
jle
adc
imul
mov
call
jns
les
cwtl
enter
inc
cmp
xchg
lret
dec
or
sbb
arpl
pushf
and
imul
pop
xchg
dec
scas
xchg
cmp
dec
mov
mov
jp
subl
jmp
mov
xchg
jl
mov
fstps
add
or
ss
mov
jo
jg
out
sbb
dec
sbb
sub
fwait
movsl
or
sub
movb
sbb
xor
pop
sub
push
or
and
out
pop
push
jbe
sti
test
cmp
dec
leave
popf
add
popa
mov
imul
mov
fidivs
xchg
out
or
and
cmp
bound
cld
pop
mov
test
daa
lock
cwtl
shlb
and
cmp
ss
push
and
adc
xor
pushf
sub
loope
or
lret
push
fcoml
or
dec
out
jl
scas
xchg
bound
xchg
xchg
call
mov
movl
lahf
cmp
sbb
inc
out
add
and
mov
adc
in
xlat
popa
mov
xchg
xchg
push
pusha
pop
sbb
mov
dec
cld
test
xor
enter
dec
push
leave
dec
fistps
aas
fnstsw
xor
or
sub
repz
lock
in
sahf
xchg
sub
sbb
or
push
cmp
push
push
shll
stos
iret
cmp
loopne
and
inc
pop
pop
mov
aam
cld
and
and
insl
cmp
int
cmp
cmpsb
aam
arpl
sti
xlat
mov
std
mov
dec
jo
aad
jbe
sar
aam
scas
and
into
cmp
jno
mov
cmp
dec
cwtl
ljmp
movsl
and
shl
inc
xlat
popa
dec
fldcw
mov
push
push
mov
test
aaa
test
loop
pop
jecxz
add
data16
mov
jne
mov
sub
add
inc
pop
xchg
add
out
int3
jle
dec
mov
mov
cmc
bound
xchg
cmc
pop
dec
push
xchg
fbstp
xchg
fucomp
ret
jmp
shlb
and
fcmovnu
aad
dec
jle
fldenv
imul
jns
adc
mov
icebp
mov
sub
hlt
sub
mov
xchg
jnp
out
pusha
sbb
cmp
std
gs
in
out
jmp
push
dec
lea
sub
sahf
xor
aaa
pop
test
and
rorb
popa
idivb
add
clc
jmp
mov
addl
or
pop
dec
sub
jne
sahf
cmpsb
jnp
jp
xor
cmp
xchg
adc
pop
and
stos
jnp
push
outsb
addr16
mov
outsl
fildl
sub
cwtl
loop
out
mov
add
lds
adc
into
mov
ret
sbb
fld
mov
popa
push
loopne
push
or
jbe
adc
pop
dec
mov
jo
mov
cmp
xlat
bound
and
sub
dec
loope
mov
push
jmp
lock
das
data16
pop
pop
jno
mov
lods
shrb
loop
js
jge
ja
fcomps
fcoml
adc
xchg
fcmovnb
sbb
push
test
xchg
jg
mov
sub
and
mov
pop
add
xor
nop
or
loopne
pop
pop
andl
es
mov
outsl
imul
cwtl
lret
addr16
or
push
push
adc
lods
lahf
loope
maxps
addb
cmpb
push
gs
and
dec
arpl
lret
jns
stc
pop
jp
and
hlt
sbb
idivl
inc
push
jmp
mov
aad
mov
mov
outsb
push
and
sbb
fwait
imul
enter
adc
mov
or
lahf
lahf
adc
stos
mov
cmp
shlb
in
in
repz
mov
pop
int
into
cmc
mov
sub
pop
cs
jle,pn
out
or
push
stos
cmp
xchg
jno
xor
outsb
push
add
xchg
push
fdivrs
jo
mov
loop
push
sti
mov
cmpsl
inc
push
sti
fs
aam
sbb
aad
add
mov
cmp
jle
ret
lcall
lahf
shll
adc
imul
test
sub
into
ss
js
xor
jmp
and
data16
pop
or
ljmp
pop
jl
in
push
shll
insb
js
and
mov
jns
pop
fisttpll
fcmovbe
imulb
jbe
mov
adc
sbb
xchg
push
dec
sahf
ja
jmp
out
jmp
fistpl
jbe
adc
fs
jmp
cmpsb
ret
jge
subl
fs
outsb
xor
xchg
lcall
dec
jp
movntps
mov
xchg
xor
mov
ds
push
in
sbbb
out
hlt
clc
jp
std
xor
cltd
loop
inc
jbe
jg
icebp
idivl
bound
clc
fbstp
pop
dec
sahf
addps
gs
push
dec
add
test
mov
xlat
mov
sbb
or
xchg
pop
shlb
repz
mov
lret
int3
je
repnz
pop
pop
movsl
decl
test
jbe
sub
jmp
inc
sbb
sahf
cmp
imul
test
dec
adcl
andl
xchg
in
dec
pop
insb
lods
gs
xor
xlat
inc
lods
aas
fidivl
les
push
stc
fdivrs
fldt
xchg
push
stc
pusha
fisubl
pop
subb
add
dec
xchg
push
paddw
push
and
cmp
in
neg
test
or
cmp
test
mov
sbb
stos
cmp
loop
repnz
xchg
cmp
addl
cmp
pop
cmp
and
test
fldenv
cld
cmp
mov
mov
rcll
f2xm1
test
clc
mov
mov
mov
lret
add
out
push
iret
cwtl
repnz
popa
inc
in
popl
pop
push
idivl
cmp
hlt
jl
jl
inc
inc
adc
xchg
xor
insb
mov
arpl
sbb
jbe
mov
rol
fs
flds
shrl
jbe
aaa
xlat
ljmp
cmp
sarl
scas
scas
inc
mov
inc
push
mov
lcall
add
jno
mov
push
push
out
mov
in
in
nop
dec
pop
mov
xor
ret
xchg
push
mov
adc
or
jnp
mov
outsl
call
jg
popf
stos
orb
and
xchg
shlb
jno
push
jge
jnp
or
cs
jo
add
or
lahf
adc
mov
loope
pop
cmpsb
pop
mov
popf
mov
aas
jg
mov
addb
aad
lcall
lcall
and
insl
enter
cmp
inc
sbb
mulb
fs
inc
mov
fidivl
xchg
cmp
dec
pop
fs
pop
jl
cmpl
or
mov
inc
mov
xchg
jge
cld
repz
test
cwtl
adc
scas
adc
adcb
xchg
lahf
rcrl
in
mov
icebp
mov
and
and
xchg
xchg
xchg
pop
pop
imul
les
mov
aaa
sub
sbb
jmp
sbb
pop
out
sahf
scas
xchg
and
mov
sbb
inc
insl
and
push
dec
and
ljmp
inc
push
sti
movsb
inc
xchg
jnp
or
enter
or
sti
popf
imul
xchg
stos
out
inc
lea
imull
icebp
mov
xor
pop
push
mov
inc
sbb
mov
call
sbb
cmc
aaa
adcb
cmp
cmp
sub
xchg
push
xchg
jo
imul
fistpll
mov
test
es
lods
mov
repnz
xor
out
mov
or
push
add
adc
mov
pop
jmp
dec
test
jns
jo
sahf
imul
mov
mov
mov
jnp
sti
or
aas
insl
mov
loopne
and
fldcw
pusha
mov
dec
cmc
cmp
mov
cmc
cmp
mov
decb
or
and
push
dec
xchg
or
lahf
cli
mov
mov
cld
ret
fistl
cs
incb
mov
pusha
addr16
and
sub
repnz
jbe
gs
das
or
lahf
push
lds
adc
fidivs
sahf
push
test
xlat
cmp
pop
ds
lret
mov
jmp
in
sahf
push
outsb
aam
sbb
or
and
in
xorl
movsw
aad
cmpsb
adc
jge
clc
push
out
shll
aaa
pop
outsl
dec
xchg
popf
xor
cmp
pop
ffree
or
fidivrs
push
push
shl
jae
imul
lods
jbe
pop
popf
cmp
mov
pop
dec
lods
inc
ljmp
dec
sbb
ljmp
adc
xor
dec
pop
out
adc
or
shlb
mov
inc
lea
add
push
nop
ret
jo
sbb
cld
scas
call
stos
cmp
call
mov
icebp
mov
repnz
test
mov
filds
dec
push
jbe
pop
imull
call
ret
mov
mov
gs
xchg
aas
mov
push
in
pop
es
fiadds
imul
and
pop
test
jns
xchg
gs
popa
das
bound
xor
andb
loopne
sti
stos
inc
imul
pop
rolb
cmpsl
push
push
pop
popa
imul
cmp
pop
in
adc
imul
leave
fstpl
aaa
in
lcall
inc
pop
mov
jge
in
out
aam
pop
mov
es
nop
jb
pop
int3
aam
sub
mov
repz
jnp,pt
dec
imul
notl
arpl
jo
sub
mov
pop
cli
mov
mov
inc
hlt
into
and
jb
aas
sbb
ret
int3
lcall
sub
dec
pop
and
cmp
fistpll
mov
dec
aaa
jbe
or
xor
fsubrs
in
mov
push
fcmovnb
dec
mov
and
pop
subb
xchg
jmp
nop
nop
mov
loop
stos
in
push
imul
fwait
mov
jb
pop
sub
icebp
nop
lods
push
xchg
cmp
fwait
scas
lret
inc
sub
cmp
jmp
aas
clc
push
adc
sbbb
fabs
sbb
pop
mov
rcrb
stc
scas
ds
and
outsb
xor
cmp
xlat
mov
sbb
lret
dec
into
fimuls
imul
loope
inc
arpl
negb
mov
dec
jno
adc
xlat
mov
sbb
lock
mov
jne
cmpsl
xchg
and
xchg
addr16
fisubrs
xchg
inc
xlat
add
gs
negb
and
imul
subb
aas
pop
xor
shll
and
dec
outsl
imul
out
pushf
ljmp
int3
pop
and
adc
outsl
xchg
and
test
daa
sahf
nop
push
adc
pop
movsb
int
mov
cs
mov
ljmp
dec
lods
loope
aas
ret
pop
or
iret
andb
adc
adc
pop
xor
aad
sahf
lret
and
cmp
and
testl
scas
rorb
pop
sbb
je
sub
push
sarl
xchg
cli
popa
into
inc
mov
fldl
enter
push
lcall
gs
fldt
cmc
loop
dec
jmp
xchg
mov
setbe
sub
cmpl
clc
xchg
cs
or
cmpsl
int3
shrl
lahf
jnp,pt
test
mov
ret
sbb
push
inc
data16
insb
loop
sahf
pop
std
fists
mov
push
pop
push
cmp
mov
loop
mov
or
sbb
jae
shlb
or
loop
add
or
inc
jno
fidivl
sub
std
fcomps
out
xor
lock
jp
and
fucomp
adc
aas
das
jge
inc
mov
sub
xor
movsb
ja
mov
pop
incb
andb
pop
xor
cmp
bndstx
pop
in
outsl
inc
jmp
pop
push
loop
pop
push
out
lods
cmp
push
push
movaps
movsl
xchg
inc
jns
fcmovu
push
xor
shlb
cmc
leave
mov
pop
mov
mov
mov
or
sbb
pop
fs
pop
sbb
jge
push
outsb
loopne
cmp
aad
or
mov
out
test
test
inc
xchg
stos
add
mov
popf
mov
add
fiaddl
push
xchg
and
lds
sub
outsl
mov
in
push
jbe
xchg
or
dec
inc
jno
xor
pushf
test
fwait
inc
in
fwait
and
xor
mov
pop
mov
jo
add
pop
push
adc
dec
inc
je
push
les
sarb
lcall
sbb
xchg
dec
push
pop
into
jmp
mov
std
ret
adc
pop
pop
and
dec
push
add
xor
mov
dec
faddl
dec
mov
mov
into
add
outsb
add
out
adc
inc
push
cmp
sub
jnp
nop
xchg
cmpsb
mov
out
aam
ss
int
nop
mov
cmpsl
unpcklps
inc
icebp
dec
mov
push
mov
mov
notb
daa
sbb
xchg
or
lret
sbb
icebp
aas
insl
clc
xchg
mov
leave
pop
scas
adc
dec
arpl
jns
repnz
std
inc
out
out
stos
filds
mov
sbb
fneni(8087
mov
test
sub
jae
sub
push
fildl
mov
inc
push
jo
inc
adc
sarb
dec
mov
in
lret
nop
out
sbb
es
dec
sarl
pop
mov
fwait
mov
mov
dec
sbb
imul
stos
aam
test
push
or
inc
ja
out
push
fnstsw
gs
dec
or
xchg
push
testb
out
jns
sub
int3
pop
xchg
out
lret
or
arpl
mov
or
or
sub
cmp
cmp
fcmovb
push
lds
push
fmuls
ds
sahf
dec
mov
fisttpll
mov
leave
imul
rcrb
and
xchg
in
sbb
and
int
call
lds
in
lods
pop
xorl
sbb
outsb
xchg
ret
sbb
lahf
add
das
arpl
mov
test
add
mov
xchg
aad
lods
push
int
adcb
cli
sbb
mov
push
inc
mov
jb
adcl
or
add
movsb
adcb
ficoml
sub
arpl
pushf
out
incb
adc
mov
dec
loopne
sub
mov
add
add
xchg
es
stos
push
mov
cmp
popa
addr16
je
or
imul
lret
push
fsubl
mov
push
gs
mov
pop
pmaxub
aaa
jmp
mov
add
cli
sub
test
mov
cmpsb
pop
jb
stc
clc
js
loop
out
aaa
sub
aad
cs
movsb
test
dec
jp
scas
fistpl
arpl
popf
and
jne
not
rolb
mov
imul
movsl
insb
mov
outsl
adc
out
ljmp
in
dec
inc
les
xor
fwait
jnp,pt
jne
xchg
sbb
hlt
lcall
stc
rolb
cmpsb
icebp
dec
adc
ljmp
int3
sbb
cmp
mov
dec
sub
cmpsl
pusha
mov
sarl
mov
push
xchg
adc
imul
xor
pop
mov
adc
add
push
fiadds
mov
jmp
fsubrs
fnstcw
mov
out
push
mov
mov
jecxz
sub
rolb
push
push
in
and
pop
push
jne
adc
gs
lock
dec
add
push
cs
mov
in
push
pop
lea
or
sarl
jmp
cmpsl
jmp
cmp
and
mov
fbld
shlb
cmpsl
add
int3
sub
or
rol
vmread
mov
jno
push
mov
js
push
stos
cltd
and
aad
push
jb
and
orl
rcl
mov
xor
mov
cmp
sub
push
aad
jp
lock
in
mov
mov
insb
testl
or
mov
xor
mov
mov
imul
aas
les
mov
nop
rcr
inc
movl
mov
inc
jle
aad
mov
popa
aam
dec
cmp
call
mov
pushf
or
pop
cmp
pusha
add
lret
mov
sbb
pop
cmp
fmul
mov
das
call
sub
setnp
and
add
cmp
loope
cmp
loopne
jae
inc
pop
or
mov
insb
xchg
movsb
dec
jp
push
mov
pop
gs
cmc
mov
mov
push
fsubrp
nop
cltd
les
xchg
or
in
ljmp
in
mov
jns
adc
out
and
dec
inc
aad
into
in
xchg
out
addr16
subb
hlt
sub
ss
test
arpl
inc
ret
add
sub
loopne
out
test
shll
in
in
inc
or
cmp
pop
out
mov
inc
cwtl
inc
fisubs
mov
pushf
jecxz
mov
adc
repz
inc
jbe
adc
or
out
add
add
popa
faddp
sbb
loope
and
mov
test
ljmp
shrl
mov
pop
inc
in
scas
adcl
sub
ret
pusha
outsl
aad
int
test
fadd
std
sahf
or
in
xchg
inc
mov
dec
and
out
xor
std
sub
in
xor
or
cwtl
rolb
pop
sbb
scas
push
xchg
cmp
lds
iret
sub
or
pop
mov
loope
leave
out
imul
sub
cmp
sub
int3
roll
or
add
sti
gs
ja
out
mov
std
lret
pop
pop
sub
lods
fstpt
and
inc
rol
scas
jle
jp
inc
push
sbb
xor
cmp
scas
jno
adc
dec
adc
lock
stc
roll
popa
xchg
inc
sub
xor
ljmp
outsb
pop
jg
stc
mov
das
insb
fsubrl
out
mov
icebp
lods
rcrb
xchg
ja
les
ljmp
insl
popf
and
jnp
mov
aam
aam
add
rcr
adc
mov
lods
popa
inc
mov
test
push
xchg
dec
rcl
pop
shll
int3
lret
aaa
andl
cmp
aaa
add
int3
push
inc
neg
sahf
and
xor
and
mov
lock
jno
mov
movsl
push
repz
ret
int3
test
mov
and
push
fmul
xchg
notb
lods
lahf
divb
mov
stc
xchg
push
mov
jmp
push
insb
lcall
jge
dec
push
lcall
rcrb
push
inc
in
pop
sbb
sbb
pop
dec
push
pop
jg
mov
imul
xchg
aam
pop
push
mov
cmpsl
leave
mov
adcb
and
icebp
addl
push
je
fs
pop
fwait
mov
les
push
mov
xlat
sub
pushf
pop
ljmp
mov
popf
fwait
sub
push
into
adc
cmpsb
xchg
mov
pop
sub
jbe
sub
shrb
ds
xor
aaa
outsb
pushf
mov
pop
repnz
dec
repz
popa
inc
andb
and
push
out
je
add
adc
sarl
scas
dec
and
jmp
test
out
push
adc
cmpsb
in
subl
mov
test
or
iret
call
insl
std
cmp
pop
cmp
xlat
sahf
xchg
jbe
mov
xchg
push
imul
add
imul
icebp
inc
sbb
sbb
ljmp
out
int
aas
mov
mov
push
mov
pop
jg
or
pop
mov
into
aam
xlat
and
mov
cltd
inc
cmp
push
sti
rcrl
int3
ljmp
iret
lock
sub
iret
outsb
mov
ljmp
pop
or
test
add
out
pop
icebp
lods
dec
mov
or
jmp
imul
fistpll
xchg
movsb
mov
cmpsl
test
xchg
add
jge
pushf
mov
sbb
sub
icebp
out
pop
jb
or
lods
repz
dec
aas
mov
int3
cmp
lds
test
xacquire
rcrb
movsl
bound
dec
xor
sbb
outsb
test
int3
repnz
push
repz
fistpl
cwtl
fdivs
push
mov
sub
cs
pop
sahf
dec
pop
cld
mov
cmpsl
inc
bnd
aam
or
cwtl
and
movsb
cmp
pop
mov
push
loope
shlb
nop
fsubrl
int3
cltd
adc
jle
ret
inc
sarb
enter
popa
sti
sbb
jg
cmc
xchg
mov
add
ret
sub
push
vpunpckldq
outsl
cwtl
imul
mov
mov
mov
mov
adc
mov
scas
insb
mov
iret
pop
rclb
das
mov
mov
mov
adc
xor
das
cmp
ja
xor
jg
xchg
pusha
add
pop
sbb
add
sub
push
adc
insb
sti
aas
push
test
hlt
and
sbb
add
jp
sub
add
xor
xchg
ret
std
lock
std
or
dec
cltd
dec
cmp
ret
add
push
xor
cmc
mov
pop
mov
into
mov
pop
xchg
ret
test
mov
shl
jb
cmp
mov
mov
aam
push
addr16
lock
sub
ds
and
rcll
mov
inc
clc
push
aaa
daa
inc
stos
addb
adc
xchg
leave
je
cmp
daa
adc
and
mov
add
enter
ficomps
jmp
addr16
lods
jmp
sbb
add
inc
mov
jp
aas
mov
cmpb
out
mov
jnp
dec
out
jp
dec
fnstenv
pop
aas
sub
dec
pop
lahf
sbb
push
dec
sbb
push
jmp
pop
and
jle
push
push
testl
arpl
pop
add
cmp
leave
mov
lea
sti
aaa
pushf
and
jmp
jbe
push
lods
xchg
in
call
imul
movsb
popa
sbb
mov
mov
add
sbb
mov
mov
lahf
shll
out
dec
mov
andl
mov
insl
loopne
sahf
and
push
push
push
lds
pop
dec
movsl
xchg
push
lds
mov
sbb
shrb
cmp
ret
sahf
mov
or
mov
in
orb
jno
repz
jb
int3
mov
in
jae
in
fstl
movl
dec
mov
mov
subb
sar
sub
pop
add
and
jne
and
xchg
and
or
push
or
add
and
cwtl
dec
push
sbb
adc
mov
imul
mov
push
iret
nop
fs
pop
push
pop
pop
repnz
push
icebp
fsubrs
cmp
shl
cmc
fstps
pop
and
pop
and
mov
mov
jo
das
and
test
add
cmp
pop
mov
pop
sbb
push
std
cmp
push
idivb
xchg
dec
or
lret
add
push
je
mov
sbb
xor
lock
loope
jbe
pushf
cmp
xchg
pop
sbb
xor
mov
mov
aad
xchg
sahf
iret
inc
xchg
cmp
jo
jmp
sahf
mov
push
xchg
inc
xchg
aas
jns
shlb
dec
lcall
popf
sbb
sub
jmp
or
and
push
dec
or
sbb
fimuls
cmp
push
cmp
add
sub
lcall
jo
pushf
nop
jbe
push
in
movsl
mov
or
and
test
icebp
outsb
mov
shr
addr16
pop
aad
cmp
mov
scas
dec
cvtdq2ps
add
dec
fdivr
xchg
aam
adc
cmp
push
out
mov
adc
push
pop
adc
popf
incb
dec
fcmovne
rcll
or
add
icebp
lret
or
mov
adcl
pop
cmpsb
aad
xchg
adc
jp
fdivrs
outsb
mov
mov
lea
pop
push
push
pop
test
push
in
cwtl
cmpsb
rorb
jns
or
mov
into
and
into
fsubrs
push
lahf
notl
xor
test
in
mov
mov
jge
sahf
icebp
data16
mov
and
and
sbb
lods
packssdw
push
add
jg
mov
dec
jp
or
fldt
pop
popf
lahf
scas
push
ret
in
daa
out
aam
sbbb
std
cmpsl
sub
sbb
jb
insb
sbb
leave
iret
fmuls
fnstenv
xchg
xchg
les
into
loop
pop
fs
scas
flds
movsb
sbb
daa
jmp
pop
sbb
push
aam
call
pop
mov
mov
lock
or
jns
test
div
and
cmp
or
scas
mov
fdivs
mov
lods
push
add
cmp
push
repz
imul
mov
sbb
lcall
in
sbb
mov
hlt
or
or
sub
jle
jae
add
cmc
xlat
ret
das
cmpsb
sub
pop
sub
and
pop
andb
rolb
sbb
push
cwtl
repnz
pop
sahf
push
adc
jge
mov
jo
sti
leave
mov
mov
sub
leave
in
out
sbb
cwtl
and
sbb
mov
lahf
push
cmp
ror
jl
cmovns
dec
dec
jae
jbe
ret
outsb
fwait
out
xchg
pop
inc
dec
lock
sub
ljmp
mov
scas
mov
pop
xchg
mov
mov
jno
movl
mov
mov
dec
xchg
fs
inc
adc
mov
jp
fwait
popf
sahf
push
dec
cmp
or
das
mov
dec
inc
outsl
add
test
xor
cmpsb
jg
aaa
cmpsl
jecxz
dec
mov
add
jae
enter
pop
mov
arpl
lea
in
in
imul
mov
jns
dec
jno
sub
add
fnstenv
add
test
test
adc
inc
push
movsb
and
jg
lds
sbb
xchg
cli
inc
mov
xchg
insb
cli
out
sub
lahf
and
loop
push
test
jmp
jns
sbb
dec
dec
mov
mov
fstps
gs
scas
dec
aaa
mov
jp
subl
rclb
mov
xor
lds
mov
roll
xchg
pop
aaa
cmpsb
xor
push
jno
add
add
and
insl
sub
fsubr
jb
sbbl
aam
push
lock
loope
jae
add
out
sti
fildl
cmpsl
outsl
shll
push
cmp
bsf
mov
sbb
xlat
dec
roll
test
fs
pop
mov
nop
mov
in
jb
outsb
add
ja,pt
mov
xor
inc
repnz
and
xchg
cmc
movlhps
shll
xchg
mov
aaa
cmpsl
sar
jb
iret
sbb
dec
adc
push
ss
jne
mov
ss
int
mov
inc
insb
jns
testl
mov
pop
inc
and
pushf
mov
pop
fwait
adc
sub
xchg
fstpt
rcll
cltd
test
out
cs
xchg
outsb
jecxz
push
in
gs
sub
add
xor
add
int
neg
cld
mov
outsb
xchg
cmc
and
das
orb
sbb
dec
icebp
in
add
movsl
dec
pop
call
dec
sbb
xchg
xchg
xchg
push
in
mov
jbe
adc
pop
iret
shll
out
push
stos
pop
xchg
and
lods
test
call
les
les
or
mov
loope
pop
sbb
int
xchg
xor
adc
fstl
arpl
ror
fidivrl
les
cltd
xchg
mulb
push
mov
mov
insl
or
in
mov
das
sbb
adc
xor
loop
add
ljmp
loop
test
mov
insl
jl
xchg
sbb
jmp
dec
outsb
in
shlb
inc
mov
ljmp
das
pop
ds
test
push
in
rorb
test
jnp
mov
outsl
stc
les
insb
cmpsl
inc
and
jbe
pop
xlat
dec
mov
nop
les
or
outsb
jae
add
aam
out
dec
pushf
dec
clc
adc
xor
mov
cmp
jl
push
ss
sbb
add
push
dec
sub
ss
sarl
jmp
mov
add
and
addr16
ret
in
fdivrs
push
and
call
cmp
insl
stos
ret
push
push
pop
cmp
push
xor
xchg
lods
ficompl
xor
xchg
fldt
ret
mov
sub
fs
dec
lahf
insl
dec
mov
mov
xchg
fistpl
in
sbb
pop
jo
adc
int3
mov
pop
pop
pop
lcall
arpl
add
mov
xor
add
push
add
inc
cmpsb
fst
mov
mov
dec
add
add
bound
cmpsb
push
push
cld
inc
cmp
sar
fwait
lods
jg
subl
fists
fwait
mov
fldl
jbe
int3
add
inc
push
push
mov
addl
push
jmp
mov
aam
mov
lods
bound
les
pop
push
push
add
out
mov
mov
sahf
cmp
xor
rolb
cmpsb
mov
push
adc
cmc
test
inc
fmull
cld
mov
xchg
in
lret
pop
test
jns
fs
into
push
mov
loopne
outsl
loopne
sbb
and
dec
mov
xor
pop
pop
dec
arpl
leave
fdivrp
loopne
mov
mov
pop
pop
sahf
fs
adc
push
add
movsb
jmp
or
mov
fwait
mov
mov
and
xchg
in
jns
ret
scas
out
lcall
pop
into
shlb
lds
pop
call
fimuls
mov
js
xor
xor
insb
mov
jmp
outsl
aas
xchg
or
jbe
lret
adc
xchg
adc
push
and
sbb
lret
fsubs
mov
outsb
ja
or
outsl
imul
les
insl
leave
jge
add
fldcw
loop
sub
pop
ret
popa
sbb
cmpl
cmp
mov
adc
pusha
sub
mov
aas
movsl
pop
xchg
adc
xchg
xor
int
mov
xchg
addr16
xlat
and
push
inc
cld
out
loope
mov
jge
mov
sbb
xor
and
ljmp
adc
insl
adc
lds
cmpsb
adc
ret
cmp
hlt
in
pop
sbb
jnp
das
sbb
xor
cmpsb
cs
lret
mov
push
ss
jmp
cmpsb
sti
rcr
pop
mov
not
sbb
jno
icebp
addl
insl
pop
add
pop
mov
loop
popf
faddl
nop
add
or
into
mov
cmp
mov
adc
adc
test
adc
daa
inc
cmp
ret
jg
xchg
push
pusha
mov
dec
cmp
sahf
dec
ret
jb
or
and
push
out
ds
dec
jne
repnz
aas
jp
pop
cwtl
cli
vaddps
mov
cmpsb
push
sub
xchg
imul
adc
ficoms
adc
fisubs
rorl
add
inc
ret
lods
movsl
sbb
data16
sub
inc
jl
and
pushf
scas
push
or
mov
in
mov
mov
pop
scas
ja
mov
sub
cmp
test
xor
push
fldenv
jo
lret
mov
lods
mov
jb
out
fdivl
xor
xchg
in
inc
cmpsl
sbb
push
fsub
fdivrl
cs
data16
lahf
scas
bound
jne
das
and
aaa
push
stc
pop
cmp
iret
push
sbb
and
fwait
mov
dec
xchg
or
iret
dec
lret
cltd
imul
jne
pop
pop
data16
pop
out
sar
adc
insl
dec
dec
cmc
popf
adc
fistpl
xor
addr16
xchg
lcall
mov
inc
sub
jge
in
xchg
jns
mov
jp
inc
orb
adc
jl
mov
test
stc
mov
jo
xchg
ljmp
sub
xchg
rcl
jne
fmull
sub
mov
mov
xchg
popf
mov
enter
push
imul
mov
pop
cmp
pop
in
push
mov
outsb
xlat
iret
aam
hlt
stos
fiadds
xor
aas
das
xchg
inc
xlat
scas
adc
scas
out
push
lock
lahf
lods
mov
lds
xchg
xor
scas
shlb
hlt
in
push
mov
insb
xor
and
cmc
mov
pop
or
adc
adc
in
jecxz
insl
and
popf
adc
dec
mov
testb
add
jle
push
pop
out
aam
and
sti
dec
int
cmpsl
push
dec
xlat
jb
xlat
pop
add
movb
or
inc
sub
inc
rol
mov
push
loope
xor
adc
cld
adc
je
xor
mov
fbld
jo
mov
jge
or
sahf
inc
mov
mov
out
dec
mov
cmp
jnp
stos
int
and
sbb
pop
push
aaa
gs
rcrl
cmp
add
lods
aas
aaa
mov
or
push
stc
js
dec
rorb
cmp
pop
push
xor
dec
movsb
test
sbb
mov
add
dec
dec
cmp
rcrb
or
dec
push
js
out
fisttpll
mov
adc
bound
add
scas
lret
rcl
xchg
jmp
fsubr
aam
jle
xor
or
mov
sbb
jmp
and
lock
pop
xchg
push
pushf
xchg
pop
negl
orl
mov
add
out
jecxz
shrb
imul
imul
sbb
dec
stos
dec
adc
cmp
mov
push
and
pushf
cs
xor
out
cmpsb
hlt
cmp
mov
fwait
or
or
out
pop
cmpsb
test
jno
pop
fdivr
adc
and
rcl
mov
mov
test
dec
push
lods
ds
cmp
xchg
imul
in
sbb
fnstenv
push
out
aas
stos
mov
adc
mov
and
setns
mov
nop
add
dec
rcl
inc
xchg
sub
in
pop
outsl
or
std
or
mov
cmp
iret
dec
pushf
test
push
jo
jmp
enter
xor
push
rcr
gs
testl
popf
adc
cmpsl
jle
jmp
jb
data16
fwait
jmp
xchg
jno
cmp
enter
and
xchg
mov
push
shr
enter
out
and
inc
repnz
in
jno
xor
cmp
dec
cs
insb
push
fildl
lea
inc
or
xor
loop
push
repz
sbb
cmp
adc
push
push
mull
aaa
add
push
cmp
daa
xchg
int3
adc
xchg
pop
js
xor
jle
sbb
lock
stc
inc
ficoms
xor
enter
fisubrs
inc
push
pusha
in
lods
pop
lds
xor
fldt
inc
sbb
push
push
mov
adc
std
add
push
cmpsb
cmpsb
or
lret
xchg
jge
push
push
mov
xor
bsf
lds
and
jno
mov
stos
into
fwait
outsl
mov
inc
lock
fidivl
jo
sbb
jnp
enter
xor
cld
or
xor
out
push
movsl
movsl
test
aaa
sti
insb
ljmp
xor
ret
leave
imul
push
lds
sub
cmp
sbb
pusha
movsb
adc
pop
xchg
mov
push
sbb
insl
push
popf
inc
xchg
cwtl
shll
ret
pop
and
test
andl
filds
or
out
aad
into
cli
cmc
repz
sub
add
movsb
bound
adc
pop
push
jmp
filds
add
dec
sahf
pop
cld
hlt
jae
add
or
lcall
inc
ja
adc
cmp
dec
jp
cltd
xchg
nop
adc
mov
aas
ljmp
mov
inc
in
or
adcb
movsl
sbbb
outsl
lretw
sarl
push
cmp
cmpsl
sti
add
add
in
add
cmp
and
movsb
or
leave
lahf
ja
xchg
pop
mov
sbb
mov
clc
dec
inc
jecxz
rorb
jg
push
xor
sub
or
xchg
subb
or
pop
adc
shrb
xchg
sub
pop
ret
push
push
sbb
fsubl
inc
sahf
mov
nop
pop
rcll
fimull
loope
dec
call
mov
mov
sbb
ss
sarb
mov
inc
jl
push
cmp
cld
sahf
inc
mov
xor
testl
cmc
in
rorl
mov
cmpsb
mov
cs
xor
inc
scas
out
stos
lods
cwtl
test
imulb
adc
inc
dec
push
dec
insl
mov
adc
and
xchg
cs
or
not
dec
dec
push
imulb
pop
push
popa
lret
cmp
jg
xor
insl
adc
jecxz
out
int
mov
mov
into
fnstsw
jle
sbbb
sbb
add
and
out
inc
xchg
cmp
shlb
das
sbb
sbb
dec
insb
ljmp
int3
in
cli
das
dec
xchg
cmp
mov
sub
addr16
add
mov
jge
xor
sbb
cmp
xor
mov
mul
fdivrp
repnz
inc
pop
enter
mov
jmp
push
pop
cmpl
push
mov
xchg
mov
and
pushf
andl
mov
cld
pop
clc
lods
ret
aas
xor
test
ja
pop
adc
pop
test
xchg
movsl
fdivl
jb
sbb
pop
shrl
mov
add
pop
dec
leave
or
movsl
mov
mov
xor
pop
add
repz
jge
scas
les
insb
mov
into
add
ljmp
arpl
negl
outsl
out
adc
jge
fnsave
cmp
mov
cmp
iret
xchg
bound
mov
mov
fdivs
jl
pop
loope
cltd
push
insb
fisubl
lahf
pop
inc
lods
shrl
leave
sub
cmp
jle
and
icebp
cmp
imul
leave
xor
jge
mov
call
xchg
push
push
add
pop
push
xchg
addr16
sbb
mov
fcoml
lret
jecxz
inc
test
mov
idivl
iret
ret
jge
mov
and
test
ret
cmovge
and
cmp
fimuls
sub
dec
add
aas
orl
xchg
addr16
lret
pusha
jns
add
or
mov
push
inc
adc
mov
das
xchg
lock
movsb
or
cmp
in
add
jbe
cmpsb
push
or
loope
add
and
cmpsb
push
dec
jbe
mov
rcr
imul
mov
test
out
sub
bound
out
in
xchg
mov
rep
test
or
and
mov
fimull
jae
push
in
adc
movsl
sar
jl
xchg
inc
jbe
fimuls
cmp
sub
ljmp
xchg
push
add
int3
mov
xor
gs
cmpb
cld
std
es
add
and
lret
lock
popa
nop
outsb
xorl
push
outsl
jbe
dec
lds
popa
inc
add
push
jp
fcmovnb
dec
ret
xor
pop
and
dec
cmp
pop
insb
mov
push
jmp
mov
out
call
cmp
mov
daa
and
cmc
xchg
xchg
leave
lret
out
push
pop
or
dec
xchg
and
sub
or
mov
mov
push
lods
xor
xor
sub
testl
sbb
aas
dec
push
cmp
cmc
jp
mov
jne
aam
jnp
jp
push
pop
pop
jns
in
xor
jb
dec
push
stos
hlt
cmpb
mov
xorb
pop
imul
stos
pusha
mov
lret
and
or
cmp
adc
mov
inc
aas
stos
pop
das
add
cli
inc
push
adc
int
fldcw
xlat
xchg
ja
lret
pop
loope
addr16
inc
and
sub
fistl
or
mov
pop
pop
mov
repnz
hlt
jno
shlb
and
imul
lret
stos
mov
xchg
mov
cmp
push
fisubrs
inc
cli
push
fcoml
push
out
popa
and
iret
popf
inc
inc
pushf
enter
xchg
repz
rolb
xor
push
pop
xchg
sbb
jg
cmpsb
lret
clc
addr16
add
xlat
cli
mov
das
push
lahf
test
fmull
leave
xor
rolb
adc
cmp
sbb
inc
mov
or
mov
sub
push
ja
dec
xorb
out
mov
cmpsb
sbb
ss
ss
pop
mov
rclb
lret
lahf
mov
repnz
dec
mov
push
mov
and
inc
stos
vpacksswb
mov
inc
scas
and
cmpsl
mov
adc
inc
add
pop
mov
in
add
aas
cmp
xchg
ret
aaa
lret
pop
sbb
mov
lods
in
sbb
std
ss
shll
pop
jne
cmc
xlat
sub
movsb
sub
mov
rolb
xlat
push
daa
lock
or
push
adc
push
ss
pop
fimuls
mov
nop
xchg
negl
sbb
xchg
in
pop
push
xor
scas
mov
xor
mov
mov
xchg
paddq
xor
movsl
gs
sbb
leave
loopne
jne
cmpsb
adc
dec
mov
lods
fwait
adc
aam
add
xor
shrl
fisttpl
andl
inc
negb
mov
test
repz
push
gs
adcb
xor
shll
push
insb
cmp
out
sub
add
xor
in
mov
popf
jmp
push
das
cmpsb
shlb
js
and
push
shl
lea
add
gs
loope
lods
or
lcall
dec
orl
mov
mov
or
cmpsl
nop
mov
or
push
push
cltd
jp
addr16
stos
dec
pop
pop
pop
and
jno
dec
outsb
out
cmp
lods
cmc
cmp
mov
je
mov
pop
mov
dec
add
popa
mov
jle
push
sbb
mov
inc
imul
jecxz
insb
dec
call
xchg
push
ret
lods
pop
mov
jae
dec
pop
mov
arpl
and
shl
pushl
sbb
push
pop
xor
scas
mov
inc
mov
adc
add
mov
dec
scas
push
mov
mov
imul
push
dec
mov
aad
jne
aad
xchg
adc
aas
sub
adc
fstpl
rorb
xchg
push
mov
xor
lds
xchg
or
sub
lds
pop
cli
dec
fstl
jo
dec
mov
xchg
insl
iret
aaa
jl
fwait
or
lahf
pop
mov
add
clc
lahf
cmpsl
ret
lahf
mov
js
lea
in
push
pop
cmp
incb
andl
or
fwait
dec
mov
das
xchg
mov
mov
mov
in
fimull
pop
ss
mov
push
dec
jbe
pop
push
ret
movsl
pop
aaa
pop
add
ds
jns,pt
lds
sub
ds
add
lea
fdivl
insl
dec
add
mov
into
sbb
inc
dec
loopne
negl
fists
roll
mov
xor
sbb
xchg
and
loopne
iret
push
test
mov
or
adc
mov
ss
in
dec
imul
fwait
push
pop
lea
jg
cmp
pop
xor
pusha
pusha
jle
mov
aad
jp
call
in
inc
sub
jns
ja
sbb
scas
inc
outsl
pop
mov
sbb
shlb
sbb
mov
push
dec
rcrl
iret
push
jnp
pop
jp
cltd
xor
fimuls
xorb
jne
push
xchg
gs
ror
sarb
sbb
out
xchg
and
xchg
mov
sub
scas
mov
rorl
pop
jno
arpl
dec
shr
imul
pop
jb
mov
sbb
xor
pop
aam
prefetcht1
jae
xlat
cld
in
adc
push
xor
fcom
pop
push
movsl
daa
xchg
ret
out
cs
or
insl
mov
cld
repz
adc
xchg
pushf
out
mov
dec
add
adc
popf
icebp
ret
add
or
push
xor
outsl
mov
aaa
fscale
pop
push
mov
and
fwait
xchg
data16
xor
dec
aad
outsb
roll
ret
cmp
push
and
lea
loope
adc
inc
pop
add
dec
jg
or
xlat
aas
push
div
rcl
cwtl
inc
aaa
inc
lcall
idivb
imul
mov
incl
lcall
sbb
into
cmp
jmp
xchg
sahf
or
aas
repnz
push
adc
mov
jnp
sbb
dec
fistps
mov
shlb
out
pop
int3
jb
dec
or
mov
jae
lahf
stos
nop
cmp
faddl
sbb
jae
cmp
cmp
jb
out
sti
mov
xorl
dec
push
push
divl
xor
aaa
mov
imul
ljmp
mov
sub
leave
cmp
jg
jp
cmp
add
xchg
and
cltd
dec
insl
mov
and
or
jo
cmp
mov
out
xlat
dec
clc
stc
mov
rcl
in
iret
daa
stos
add
test
shll
xchg
jg
lods
cld
fwait
pusha
jl
or
pop
shlb
cli
iret
sbb
mov
fidivl
gs
mov
les
repnz
and
pop
shrb
inc
cltd
pushf
xchg
in
rolb
lock
sbbl
or
lcall
pop
insb
cmp
sub
imul
in
out
shll
lret
sahf
sub
shll
xor
mov
cli
mov
cmpsb
popf
push
mov
aaa
xchg
negb
xlat
icebp
rcrb
arpl
test
xchg
xor
sbb
dec
inc
popa
dec
xchg
cmp
subb
cmc
xor
push
jg
xchg
inc
xor
fcomps
jmp
subl
pop
stos
dec
ljmp
fildll
call
aas
lods
sub
lods
inc
jp
adc
sub
shl
in
mov
arpl
enter
test
and
pushf
pop
sub
mov
and
ret
inc
jne
add
int
iret
sbb
test
xchg
add
in
dec
fcmovnbe
lahf
pop
shlb
or
call
arpl
fldz
cwtl
mov
popa
movsl
jno
jp
rorb
jae
adc
sbb
lods
call
call
jae
roll
insl
daa
inc
mov
jae
inc
mov
add
popa
enter
int
sti
out
lret
in
mov
and
add
outsb
dec
and
and
xchg
mov
fcom
push
mov
and
push
pop
and
outsl
insl
mov
imul
aas
mov
cmp
xchg
arpl
or
std
out
inc
incb
shrb
jge
cltd
fldl
in
jmp
sbb
cmp
jne
push
mov
xor
insl
inc
iret
lret
dec
jo
push
rcrl
fs
and
sbb
cmpsb
movsb
cmp
mov
movsb
inc
cmp
sbb
cltd
adc
iret
pushf
push
ret
mov
loope
cmp
sbb
cli
aas
mov
sldt
rorl
fsub
sub
test
test
or
push
xchg
mov
add
rorl
fdivs
adc
adc
mov
ret
push
outsl
jmp
jl
mov
addr16
dec
in
dec
mov
cltd
lods
push
arpl
inc
cmp
xor
data16
cmpsl
mov
mov
dec
xchg
jecxz
mov
daa
push
push
aam
jnp
scas
repz
adc
jp
add
lock
or
aaa
sti
rorl
cmp
in
ss
incb
dec
lahf
ret
loop
scas
loop
lods
jb
int
sub
imul
lcall
jle
sahf
mov
into
lahf
pop
loope
inc
pop
push
cwtl
aaa
and
cltd
adc
lods
mov
pusha
popf
aad
inc
and
imul
push
pushf
popa
popa
xor
pop
adc
xchg
les
cmp
jecxz
ja
cmp
roll
xor
js
push
push
rorb
jns
lods
jns
cmp
aas
ljmp
add
or
add
sub
imul
je
rclb
add
enter
dec
bound
xor
adc
mov
js
jno
and
fbld
pushf
inc
cmc
scas
jae
mov
sub
inc
cvtdq2ps
lods
lods
test
add
inc
cli
sti
push
fsubr
adc
nop
inc
aam
leave
std
daa
sbb
sub
or
test
in
fimuls
pop
inc
scas
icebp
cmp
test
cmp
leave
shlb
mov
iret
add
adc
mov
mov
or
sbbb
roll
mov
xchg
leave
into
fsubs
mov
mov
mulb
fcomp
xchg
adc
lret
ds
ss
mov
adc
xor
sbb
and
cmp
jb
loopne
sahf
shrb
hlt
js
jp
insb
add
std
cmp
xor
adc
in
nop
xor
xor
inc
push
mov
lret
mov
inc
add
lods
mov
inc
jg
inc
sbb
jmp
pmulhuw
fistl
imull
dec
xchg
or
jmp
cmp
mov
out
push
psubw
cmp
push
addr16
mov
outsl
cld
out
mov
ficompl
and
addr16
push
rcrl
sub
call
test
push
or
xor
mov
popa
clc
dec
ja
pop
test
dec
and
xchg
outsl
xor
nop
mov
loop
mov
mov
fs
rcll
aas
jg
enter
jp
and
pop
mov
out
cmpps
pop
and
pushf
dec
adc
pop
adcl
jmp
fsub
divl
xchg
jne
lcall
dec
aas
fcmovne
popa
add
adc
mov
jae
adc
cs
bt
in
mov
int3
mov
and
leave
jne
popa
mov
mov
inc
pop
mov
stos
in
xor
push
addr16
neg
sbb
fcomp
dec
mov
mov
inc
je
call
jns
das
outsl
bound
pop
flds
mov
inc
dec
ljmp
inc
inc
movsb
push
mov
xorl
loopne
outsb
fcompl
mov
xchg
mov
call
loopne
popa
ret
out
lret
test
mov
adc
lahf
ret
stos
add
fdivrl
mov
adc
mov
dec
rcl
mov
loop
fistl
mov
mov
shrb
add
pop
inc
inc
mov
sub
push
cld
sbb
xchg
mov
mov
cmpsl
mov
cmc
sti
cmp
test
mov
les
push
jbe
aad
pop
jbe
or
push
mov
repz
xor
subl
test
fmuls
sub
mov
fldl
cmp
mov
add
scas
sub
in
mov
mov
nop
insb
insl
push
ja
sub
xchg
outsl
popf
pop
xchg
testb
mov
lea
arpl
les
or
sbb
outsl
ret
xchg
stos
mov
lret
sbb
out
jnp
add
daa
pop
inc
shl
pop
pop
mov
pop
jns
outsb
mov
lea
shr
push
pusha
imul
int
outsl
test
call
mov
cmp
pop
lcall
mov
jnp
inc
xchg
lds
ja
fwait
push
call
test
push
jns
xor
xor
dec
add
xor
loop
out
mov
fidivrl
adc
ss
push
lea
cmp
inc
mov
mov
jnp
dec
mov
test
test
pushl
dec
mov
lcall
mov
pop
sbb
shlb
sarl
shlb
fnstenv
in
mov
inc
jg
pop
pop
or
mov
mov
fneni(8087
push
mov
push
arpl
insl
fdivl
jnp
xchg
pop
mov
jmp
pop
stos
inc
imul
push
dec
pop
dec
inc
dec
ret
jb
mov
icebp
sub
add
stos
xchg
stc
movsb
repz
add
negb
jo
cmc
nopl
cmp
mov
sbb
mov
andb
imul
pop
pop
fistps
cld
pop
sub
fsts
jmp
add
clc
jmp
mov
stos
cld
stos
imul
pop
jb,pt
jne
lods
in
ds
add
ficompl
clc
hlt
jae
sub
es
mov
pop
push
and
xchg
stc
gs
dec
sbb
mull
test
std
ret
mov
insl
mov
inc
leave
clc
sbb
pop
test
scas
sbb
repnz
mov
das
xchg
outsl
push
mov
jle
jne
es
mov
cmp
imul
popa
fwait
adc
sub
test
xor
in
xchg
xlat
push
mov
pop
popa
jo
mov
mov
inc
jle
es
lods
jmp
loop
movsl
cmp
sub
mov
icebp
popf
icebp
cltd
fists
xor
push
repnz
into
mov
jg
jl
pop
sub
inc
pop
add
popa
jns
or
popf
mov
in
clc
push
shrl
imul
and
ror
fisttpll
leave
push
fadds
add
neg
jo
and
push
xor
test
xor
lret
scas
lret
mov
sar
imul
repnz
and
or
inc
mov
add
cld
mov
testl
cltd
cltd
xchg
aaa
mov
mov
push
js
mov
jg
dec
mov
pop
int3
loope
jo
dec
push
jo
mov
jg
psllw
cmp
es
xor
arpl
xchg
or
repnz
lret
out
daa
scas
cmpsl
push
lret
jg
aas
push
and
push
aam
stos
stos
loope
pusha
jecxz
loop
bound
loope
insl
clc
call
xor
bound
adc
cmp
xchg
cmpsb
insl
imul
push
xchg
inc
pop
mov
push
or
sub
mov
xchg
int3
add
inc
dec
scas
jle
sbb
pop
cmp
ss
aaa
jne
rcrb
fiaddl
mov
sub
xchg
stc
mov
nop
or
shrl
test
sti
adc
fldcw
adcb
jnp
arpl
sbbb
jecxz
jmp
shrb
cmpsb
inc
mov
jecxz
add
ret
inc
mov
mov
cmp
pushf
cmp
push
dec
dec
lret
mov
cmpsl
ror
jp
jae
mov
fistl
add
ficompl
xor
mov
fistl
stc
cmpsb
icebp
dec
stc
imulb
sbb
pop
cli
jnp
loopne
adc
ror
ret
mov
mov
mov
aad
idivb
adc
push
pushf
sti
add
subb
shrl
lods
fs
nop
aas
ds
mov
scas
nop
xor
mov
in
mov
fidivl
hlt
sarb
jne
push
inc
jno
push
or
lds
mov
sbb
xchg
xor
js
push
lcall
in
insl
test
scas
mov
and
jecxz
sti
xchg
stc
test
testl
xchg
cmp
xor
push
lea
mov
sbb
popa
bound
mov
push
jo
mov
cmpsb
mov
cmp
arpl
test
or
daa
push
xor
add
adc
test
push
dec
imul
push
sbb
mov
fbstp
ret
and
or
ja
add
testb
aam
xchg
stos
xor
xchg
test
mov
out
inc
jae
jle
pop
mov
mov
popa
add
rcll
mov
pop
cmpsb
mov
sbb
or
testb
shr
mov
mov
in
cwtl
dec
adc
nop
movsb
lcall
sbb
xchg
mov
jp
jle
test
xor
jge
int
stc
or
xor
pop
cs
jmp
mov
shrl
int3
data16
xor
jl
leave
push
mov
xchg
add
cld
pushf
add
call
mov
push
adc
mov
pop
mov
mov
mov
pop
les
icebp
icebp
int3
std
out
or
popa
jl
iret
xor
sbb
stos
mov
repnz
xlat
pop
loope
adc
in
pop
lods
iret
mov
jg
rclb
in
fsubs
push
stos
stos
sub
lret
mov
in
jp
push
int3
mov
cmc
and
xor
clc
into
mov
add
add
inc
pushw
push
lret
xchg
mov
pop
pop
add
mov
mov
stos
push
push
aam
sub
jno
divb
sbb
mov
dec
inc
mov
sub
cmc
push
push
pop
and
lods
xor
inc
stc
ja
jmp
pop
imul
repz
imul
pop
sbb
rol
lret
mov
imul
iret
push
dec
sbb
add
mov
aad
dec
xor
ljmp
pushf
jae
pop
icebp
mov
cmp
jle
ret
repz
lret
aas
pop
sbb
push
mov
in
sarb
mov
pop
popl
inc
jo
fldl
int
adc
shrl
and
push
add
sub
push
ljmp
cmp
les
or
repnz
shl
repz
sbb
mov
and
repz
xorb
addl
rolb
xchg
inc
in
push
jb
mov
inc
pop
push
pusha
and
xchg
jns
push
mov
mov
ljmp
call
sbb
pop
sbb
jae
jecxz
les
adc
xor
mov
hlt
inc
std
in
pop
sbb
call
add
in
stos
ja
xor
mov
lret
ficoml
jle
popa
outsl
push
push
fsubrs
add
jns
adc
or
divb
leave
sub
leave
and
out
sub
fwait
subb
adc
adc
mov
testb
int
fstl
jge
movsl
dec
cmp
cmp
pop
push
es
inc
add
or
push
stos
xor
insw
sbb
pop
je
je
inc
push
pop
adc
pop
shlb
xor
sahf
in
pop
pop
dec
and
ja
and
outsl
aam
xchg
sbb
add
sbb
mov
das
jg
add
xchg
pop
pop
jmp
pop
aam
iret
ja
bound
jmp
ret
sbbl
dec
std
jecxz
mov
arpl
cld
lea
ja
cli
pop
aam
aas
mov
enter
je
ss
cwtl
or
mov
popa
into
mov
dec
inc
cmpsb
lcall
dec
pop
pusha
and
add
push
rcrb
in
sub
xchg
clc
xchg
push
es
cbtw
cmpsb
pusha
in
sbb
pusha
in
jp
pop
leave
mov
pop
mov
cld
mov
js
iret
pusha
das
mov
mov
jb
sub
in
outsb
repnz
rclb
xchg
mov
sbb
call
jle
les
iret
cmp
mov
dec
mov
xchg
je
pop
push
mov
jns
divb
std
mov
push
pop
sub
imul
pop
mov
mov
hlt
mov
inc
test
xchg
loope
sub
inc
ja
sub
push
mov
mov
outsl
xchg
jl
stc
or
loop
push
adc
sbbl
sub
or
xchg
dec
lds
sbb
xorb
push
aas
test
mov
push
pop
into
cmp
mov
jp
leave
and
pop
outsb
jg
sub
fsubrs
mov
mov
jno
mov
and
int3
xchg
pop
fsubl
mov
sub
mov
sub
mov
les
call
pop
lods
jae
push
addr16
mov
mov
dec
xchg
in
repz
mull
xor
test
mov
fsubrs
aas
aad
mov
in
dec
or
cmp
stos
movb
lahf
rorl
inc
movsl
imul
aad
sub
and
xchg
call
cmp
push
push
pop
ror
lods
push
push
test
inc
mov
jp
mov
mov
mov
or
movsl
mov
and
cld
ret
loopne
addl
jle
out
out
sub
adc
adc
imul
mov
out
mov
in
sbb
xchg
dec
lods
mov
or
cmpsb
fs
aam
mov
mov
out
and
gs
and
outsl
rclb
jmp
jbe
mov
mov
dec
cli
out
stos
jmp
hlt
dec
push
outsb
pop
sbb
mov
xchg
fisubrl
mov
decl
sarl
stc
lret
hlt
push
sbb
xchg
lcall
add
push
pop
in
sub
jp
lret
jecxz
ret
out
mov
lods
add
orl
xor
decb
lds
sti
cwtl
enter
fidivrl
mov
out
pop
push
test
dec
out
jle
lahf
cmpb
sbb
push
dec
lock
aam
ret
mov
aam
push
or
sar
inc
loope
cmpsl
negb
add
hlt
les
sbb
fidivrs
imul
fsubrl
cmove
pop
sahf
dec
adc
stc
sbb
jno
pop
jecxz
push
mov
inc
fldcw
out
push
pop
jmp
dec
fcomps
lods
push
aas
xchg
sti
adc
adc
outsb
jl
and
pop
mov
stc
adc
out
xor
es
dec
or
xor
jnp
repnz
xchg
cmp
adc
add
adc
sbb
std
fldz
jl
pop
loopne
xchg
sub
push
mov
insb
nop
push
push
ljmp
stos
mov
test
cmpsb
cli
hlt
ret
daa
aas
push
jecxz
gs
jmp
das
orb
insb
pop
push
or
test
dec
clc
enter
sbb
ds
lret
sub
add
idiv
jae
add
imul
dec
sub
scas
xchg
xchg
stos
not
push
cmp
repz
mov
sub
cwtl
dec
out
jp
add
push
jmp
mov
mov
adc
sub
add
sbb
stos
nop
jae
inc
into
push
sub
jl
and
xor
lahf
icebp
in
push
jae
lahf
push
les
js
jmp
fistl
ja
mov
dec
jnp
js
fistps
cmp
loop
and
outsb
mov
cpuid
jb
sahf
scas
xor
and
loopne
push
pop
call
push
or
push
cld
stc
cmp
xlat
jl
das
xchg
imul
fdivrl
jge
fdivrs
jno
dec
arpl
decb
lock
frstor
sub
push
std
ja
push
test
jmp
bsr
movsl
lret
pop
movb
roll
jbe
jle
sbb
ljmp
out
cmp
cwtl
pop
sub
mov
sbb
mov
aam
pop
inc
adc
push
cli
shlb
adc
adcb
lea
clc
js
cmc
jecxz
lret
cld
jmp
add
mov
cmovnp
cld
or
jnp
or
pop
xor
pop
ret
scas
iret
cmp
gs
or
loop
outsb
clc
cmpsl
push
xlat
lcall
push
into
lods
idivb
out
pushf
adc
mov
or
adc
imul
cmp
jmp
mov
je
rolb
outsl
jp
iret
dec
cmpsb
push
fiadds
fisubl
push
mov
dec
pop
ret
pop
mov
rolb
mov
int
imulb
add
push
sub
mov
add
xchg
ret
sub
cmp
jne
jp
jg
mov
add
xchg
sub
adcl
jno
icebp
add
jmp
cmp
mov
dec
cwtl
pop
jl
or
xchg
cmp
and
outsl
jge
outsb
add
js
push
cli
xlat
leave
jmp
movsl
stc
jae
jnp
cmp
cltd
push
insl
cmp
cltd
popf
mov
outsb
push
inc
mov
das
outsb
call
cs
icebp
leave
std
out
out
push
xor
xchg
insb
pop
push
pop
pop
add
shl
call
ljmp
pop
sarb
lds
pop
popa
aad
mov
ficompl
mov
push
std
push
sbb
loope,pn
sti
inc
pop
mov
fsubs
xchg
xchg
cmp
cmp
sbbb
mov
inc
mov
pusha
pop
ss
dec
pop
test
jnp
pushf
iret
test
jg
lods
fwait
xor
in
int3
lcall
mov
jo
es
adc
rclb
sbb
test
test
cmp
mov
inc
xchg
jle
xor
cltd
scas
mov
jns
mov
sub
xor
mov
ffree
outsb
cmp
mov
insb
mov
sub
lods
inc
and
fstps
jnp
not
test
mov
xor
sar
sub
scas
sub
cli
add
pop
cs
pop
dec
rorl
add
mov
cld
arpl
mov
aaa
rcrb
xchg
jle
xor
adc
ds
pop
xorb
pop
cmp
mov
fdivl
jecxz
xor
mov
xchg
jnp
scas
loope
or
mov
arpl
xor
mov
punpckhwd
rorl
nop
out
mov
daa
cmp
stos
push
in
dec
nop
popa
cli
lock
pusha
adcb
jmp
push
pop
mov
ljmp
mov
push
sbb
dec
xor
pop
fisttps
in
jnp
cmp
int3
mov
enter
and
or
push
cmp
cld
push
inc
or
sub
or
orl
dec
cmp
shll
push
push
sbb
stc
pop
idiv
mov
lcall
adcb
dec
stos
mov
sbb
divl
dec
inc
or
test
mov
lds
pop
push
and
jg
or
shlb
mov
mov
cmp
sub
insl
test
and
cmc
add
in
mov
sbb
insl
dec
and
xchg
sub
pop
lods
dec
cmpsb
adcl
jne
pusha
xor
test
fcmovbe
sbb
and
data16
idivl
or
aaa
int3
mov
es
add
cmp
jae
lret
and
jno
inc
inc
inc
mov
xchg
mov
ljmp
pushf
nop
xor
or
dec
stc
jg
mov
jbe
js
das
leave
push
imul
fimuls
sub
data16
movsb
fsubs
cmp
lahf
adc
mov
sbb
add
fsts
add
pop
mov
jle
jle
jg
fstl
xchg
sbb
cmp
out
js
inc
sub
adc
mov
fwait
pushf
pusha
mov
scas
mov
mov
and
lods
inc
adc
xor
rorl
imul
mov
popf
cld
jg,pn
lret
in
fldl
out
pushf
in
cmc
cmp
mov
push
andl
push
mov
jb
out
scas
lds
sub
or
pop
mov
test
mov
sub
imul
aad
les
sbb
loope
loopne
les
leave
fcomps
ljmp
test
sbb
add
cmp
jecxz
push
pusha
std
dec
out
mov
sarl
and
and
scas
mov
jbe
mov
inc
xor
inc
push
mov
sbb
std
out
add
icebp
pop
pop
rcrl
sub
mov
stos
xchg
or
fdiv
and
sub
addr16
sti
mov
and
fdivrs
pop
dec
jnp,pt
movsb
dec
pop
inc
test
sub
cs
adc
popa
xchg
cli
mov
imul
rcll
cmp
mov
lret
push
jne
pop
sbb
bound
andl
xchg
mov
and
xchg
das
mov
outsb
insl
jecxz
fmull
repnz
je
sahf
pop
jne
cld
cmp
out
lret
and
or
mov
shl
insl
ret
mov
fistpll
pop
push
arpl
sub
mov
mov
gs
repz
cmp
insl
test
ret
and
leave
xchg
cmp
ficomps
fists
adc
ror
loope
cmp
popa
mov
mov
pop
js
xor
pop
or
sbb
inc
push
pop
sub
lds
rorl
sub
cmpsb
fists
xor
or
mov
adc
mov
arpl
jp
adc
pushf
daa
mov
jo
adc
ja
lret
jns
pusha
push
testl
mov
mov
mov
ficoms
imul
cmpsb
repz
ret
jle
lock
mov
xor
clc
mov
xchg
mov
ror
push
lahf
lret
mov
cld
sub
dec
cmp
inc
adc
cltd
or
loope
sbb
cli
bound
sub
or
lea
aad
js
adc
or
and
push
inc
loope
sbb
shl
cwtl
dec
sar
lret
mov
add
popf
mov
mov
test
aaa
int
xchg
into
ret
outsb
sbb
leave
add
ja
fs
pop
fiadds
mov
lods
test
and
jnp
ret
or
inc
flds
ljmp
xor
out
sbb
or
or
jae
outsl
mov
jg
unpcklps
ss
inc
jge
sub
adc
les
dec
ret
cmpsb
adc
mov
lds
addr16
inc
shl
lahf
dec
cld
loopne
add
ja
cmp
xchg
sarl
rorb
mov
pop
jg
leave
lods
inc
pop
outsb
gs
adc
cli
xor
mov
mov
lret
mov
adc
xchg
or
sbb
popa
arpl
cmp
nop
inc
dec
in
daa
test
push
sub
pop
jne
or
repnz
pop
sbb
add
test
push
xchg
adc
into
mov
and
jo
mov
popf
cld
mov
lcall
insl
xchg
xor
lods
ds
mov
out
jmp
pop
and
xor
mov
shl
mov
fstps
lret
sbb
push
gs
jns
jo
jmp
adc
inc
add
sbb
into
add
mov
lret
sbb
add
pop
data16
fbstp
fildl
mov
pop
dec
leave
push
mov
int
pop
roll
cli
clc
aas
ljmp
push
xchg
lea
lahf
sbb
sti
addr16
pop
pop
out
aad
mov
jle
pop
jmp
push
loope
pop
ret
push
cmpb
sbb
pop
add
ljmp
repz
sub
lea
popf
imul
insl
inc
mov
xchg
sub
imul
lahf
inc
xor
push
in
pop
and
movsl
leave
cli
adc
std
adc
add
je
jnp
adc
push
imul
sbb
js
xlat
pop
pop
jmp
fcompl
psllw
in
repz
jge
sbb
ds
mov
xchg
xor
xor
int
fwait
lds
cmc
iret
daa
dec
fnclex
sub
fmuls
ja
push
bnd
cmp
negl
xchg
std
xor
push
incl
xor
pop
test
decl
fnstcw
sub
xor
icebp
xchg
inc
lods
stos
int3
and
fildll
mov
stos
inc
outsb
and
inc
lcall
repz
test
lret
stos
mov
setno
jmp
subl
sbb
inc
pop
cli
push
shrl
cmpsl
mov
scas
mov
or
mov
int
mov
aam
dec
mov
cmpsl
fdivs
push
fstpt
int
jg,pt
inc
jae
insl
or
jnp
movsl
notl
mov
enter
jg
and
ret
or
sahf
outsl
outsl
push
icebp
in
and
imul
lods
mov
fs
int3
pop
shlb
or
mov
xlat
and
xchg
imul
mov
sahf
xor
push
mov
adc
xor
jne
xchg
es
cwtl
stc
jge
scas
and
mov
jns
in
fidivrl
dec
sbb
push
adc
sbb
mov
mov
das
outsl
hlt
and
mov
incl
call
mov
movsl
push
fdivrs
xor
xor
lcall
data16
subb
sub
loop
dec
ss
xor
and
std
fcmovbe
iret
xor
enter
add
aam
adc
adc
cmp
test
shlb
add
pop
imul
orb
cmpsl
cmp
pushf
stos
mov
es
bound
bound
jae
cmp
xor
clc
mov
arpl
sbb
push
or
out
cwtl
xor
dec
test
addr16
movsl
test
lods
xor
imul
loop
shll
mov
pop
push
dec
pop
adc
loopne
xor
jb
dec
push
jg,pt
inc
sub
inc
adc
mov
push
mov
cmp
imul
push
mov
aam
mov
aad
inc
or
shlb
xor
jg
and
dec
xor
adc
ja
cmp
inc
cli
pop
xor
mov
daa
xchg
pop
dec
lods
stc
xchg
push
outsl
cwtl
mov
mov
inc
sub
pop
push
out
or
pop
or
aam
adc
jno
int3
ret
rcr
add
jno
and
jo
mov
adc
lock
popa
lret
stos
mov
mov
sub
das
stos
loop
inc
pop
mov
cltd
dec
xor
sti
inc
lret
dec
inc
mov
ret
and
call
push
xor
add
jo
mov
pop
aad
pop
xchg
orl
adc
out
push
inc
sbb
mov
add
pushf
lds
jns
jmp
fs
push
call
inc
pop
xchg
outsl
fidivrl
xchg
pop
dec
in
push
sub
pop
hlt
inc
stos
addl
jl
jmp
mov
shl
fidivl
sahf
das
fdivrs
xchg
arpl
or
lret
mov
incl
fisubl
rclb
pop
ftst
jp
es
jp
mov
adc
sub
mov
mov
jge
repz
incl
dec
mov
mov
mov
leave
repz
sub
cmp
mov
and
cmpsl
cmp
mov
sbb
mov
clc
ret
push
mov
daa
mov
mov
xchg
pop
jge
in
mov
and
xor
and
xchg
xchg
loope
cs
cmc
xor
lock
hlt
cmp
push
jno
daa
adc
fidivs
shrl
and
sahf
jns
cmp
mov
sbb
jb
icebp
jle
adc
out
adc
sub
test
xlat
mov
out
mov
stc
pop
push
cmp
and
xchg
in
mov
ljmp
add
lret
pop
mov
fimuls
sub
lods
cmpsw
loopne
xlat
cmp
mov
cmp
lock
rcrb
adc
cld
mov
nop
popa
mov
int
inc
or
fwait
lds
enter
ret
cld
sub
pop
inc
push
popf
insl
add
xorb
sarl
ret
insl
sbb
call
cmp
pushf
xchg
loopne
jg
scas
fs
jmp
cs
stc
dec
mov
sti
test
mov
repnz
pop
add
lret
pop
lret
pusha
cmp
cwtl
dec
mov
pop
jle
mov
imulb
or
sahf
es
movsl
test
and
pop
push
lock
sbb
mov
outsl
imull
mov
outsl
aaa
mov
mov
out
xlat
jnp
popf
jo
jg
fsub
cs
leave
bswap
rclb
lods
sub
pushf
mov
testl
test
movsl
popf
mov
xchg
and
data16
xchg
jo
inc
pop
xor
and
mov
pop
pop
mov
test
pop
pusha
xchg
sbb
call
xchg
cmpsb
aam
mov
mov
roll
sub
je
inc
sub
cld
xlat
ds
pop
cmc
int3
in
mov
lret
test
imul
jmp
push
pop
call
inc
and
jae
repnz
push
sbb
xchg
adc
cmc
cwtl
rol
ljmp
cltd
sahf
xchg
sub
sbb
rcr
push
in
xchg
fwait
xlat
cltd
or
outsb
inc
jp
sub
outsl
or
sbb
pop
xor
cmp
and
fdivl
lock
out
pop
lahf
imul
sarl
jnp
daa
in
es
or
xor
cltd
cmpb
or
push
jnp
add
xor
lret
mov
cmp
mov
ficompl
cmp
test
lret
mov
xor
add
add
rorl
mov
bswap
ret
and
dec
mov
push
rcrl
mov
xlat
add
jnp
push
loopne
mov
cmpsb
jmp
lods
jmp
pop
cli
adc
cmp
rolb
sahf
jp
push
jb
bound
decb
push
xchg
mov
jl
push
mov
scas
or
out
pop
xchg
stc
pop
and
dec
jmp
lds
rcrb
aaa
push
sqrtps
lcall
push
cmpsb
jns
mov
movsb
xchg
loopne
decl
js
div
xchg
cmp
jo
jne
cwtl
jno
test
cmp
xor
pmullw
subl
leave
sub
xor
jg
sbb
loopne
adc
loopne
pop
cld
insb
xchg
pushf
imul
cltd
adc
and
mov
movsl
or
sarl
jle
aaa
dec
mov
cwtl
repnz
xlat
push
dec
push
push
jne
mov
or
mov
ja
mov
lods
je
rorl
loopne
sub
in
dec
adc
out
rcr
xchg
dec
or
or
fs
cwtl
call
lahf
jmp
jge
mov
clc
mov
pop
mov
xchg
adc
mulb
jecxz
mov
addl
mov
xchg
stos
in
cmp
cmpsl
dec
push
imul
push
aad
mov
mov
mov
ljmp
or
or
fnstcw
or
mov
xchg
ficompl
pop
daa
aam
pop
mov
sbb
mov
sbb
lahf
gs
xor
sbb
xchg
out
mov
adc
adc
or
flds
dec
ds
jne
mov
jmp
xchg
outsb
testl
inc
push
mov
adc
xor
mov
pop
aad
jo
push
std
mov
cmp
aaa
addr16
outsb
clc
mov
adc
sbb
nop
repnz
fstpt
ja
imul
adc
adcl
push
pop
fidivrs
add
push
fimull
inc
lock
push
int
cld
fwait
decb
jmp
mov
fsubl
cmp
pop
inc
gs
xchg
dec
scas
add
add
add
ljmp
lcall
xor
pusha
push
jg
lock
lods
add
imulb
xchg
add
xor
sub
adc
rclb
push
imul
fidivrs
push
mov
pusha
stc
push
mov
cmp
gs
mov
mov
xor
movsb
adc
out
arpl
mov
pop
stos
sbb
test
xchg
xchg
loop
gs
es
call
and
dec
sub
call
jge
aas
ss
faddl
cmp
inc
sbb
push
mov
add
in
xchg
push
bound
ljmp
pop
pop
dec
jae
sub
xor
push
fldl
fsubl
shrb
negb
fstpt
fnstenv
frstpm(287
mov
push
push
cmpsl
sub
dec
push
lret
xor
xor
jp
test
popl
dec
cltd
fiaddl
inc
sbb
es
mov
pop
cmp
bound
inc
std
sub
jno
fsts
inc
dec
pop
lea
cld
push
icebp
dec
lds
enter
xor
daa
fistl
fdivr
mov
sbb
icebp
mov
or
repz
or
js
test
jne
or
xchg
scas
add
cmp
pop
mov
sub
dec
sub
mov
fsubl
jnp,pt
adc
jno
sub
push
in
adc
push
sti
mov
lret
inc
aam
or
fimull
les
jb
imul
xchg
testb
dec
cli
pop
push
sarb
pushf
mov
push
ficompl
lret
mov
xchg
out
fildl
sbb
loopne
jnp
lret
jb
ret
out
out
mov
lcall
test
rcl
out
mov
mov
add
xor
sbb
push
fs
lahf
cmc
pushf
test
mov
push
shrb
daa
sub
jne
sbb
mov
jge
imul
cmc
rcll
inc
movl
add
addb
jmp
jnp
add
cmp
mov
jecxz
jb
fdivrl
stos
mov
stos
in
jb
lods
out
mov
data16
jo
mov
and
je
shll
insl
dec
or
sub
jnp
aam
cmpsl
xchg
jg
and
xchg
and
xor
dec
mov
xchg
add
push
insl
loop
dec
and
scas
lahf
insl
daa
out
mov
push
and
dec
pop
int3
mov
leave
leave
push
ljmp
pop
adc
inc
and
cld
enter
pop
pop
sbb
aam
popa
and
loop
shl
lods
dec
adc
out
and
iret
push
cmp
adc
adc
or
add
mov
mov
fcomip
mov
push
inc
inc
inc
or
popf
sub
movsb
lock
loopne
test
fs
xchg
add
sub
call
popa
stos
ret
stos
shr
ljmp
leave
mov
xchg
xor
mov
inc
in
fistpll
mov
and
mov
mov
xor
test
xchg
in
push
dec
jge
outsl
mov
mov
cmp
inc
jbe
jno
daa
jl
add
or
and
pop
jl
and
repz
sbb
mov
cli
int
cwtl
cmp
fcompl
outsb
mov
xor
cmpsb
lods
mov
and
inc
xchg
mov
stos
aaa
lret
nop
loope
dec
rolb
mov
mov
inc
icebp
mov
pop
sarl
cmp
pop
cs
or
inc
or
loopne
arpl
notb
and
jnp
add
mov
hlt
sbb
aam
jae
sbb
or
mov
outsb
decb
push
jmp
ret
mov
sub
cli
sub
mov
push
int
cs
xor
mov
fimuls
jmp
dec
ret
stc
repz
push
fs
push
fdivrs
jo
fldt
jo
pop
jb
dec
movsl
pop
insb
sbb
jns
push
popa
jo
scas
push
jo
inc
xchg
dec
dec
movsb
iret
adcl
dec
mov
sub
ds
insl
sbb
or
cmc
push
mov
nop
mov
pop
lods
int
int3
repz
lea
movsb
ret
cmp
pushf
mov
sti
out
mov
int
mov
addr16
es
pusha
clc
mov
xor
sub
enter
push
cmp
in
pop
inc
push
pop
shrb
faddp
mov
cs
flds
pop
xor
mov
jnp
sbb
jbe
push
loope
nop
mov
dec
lahf
mov
out
imul
pop
mov
enter
sbb
sti
notb
pop
jae
icebp
leave
push
das
mov
add
sbb
mov
push
xor
fdiv
test
insl
pop
xlat
push
mov
jg
jmp
vmwrite
xor
insl
test
push
xlat
ret
iret
mov
test
dec
ret
cmp
inc
cmp
cld
stos
das
inc
dec
and
stos
das
sbb
add
stos
inc
add
loope
xchg
push
je
add
dec
xchg
pop
add
lock
fs
mov
negl
mov
inc
add
xor
fld
ret
jmp
add
decl
test
rol
call
popf
pop
push
invd
cmp
ljmp
and
and
fldcw
repz
rcll
sbb
or
xor
js
dec
jno
lea
xor
pop
push
insb
aaa
mov
cltd
dec
and
dec
clc
and
or
out
add
dec
addb
fisttpll
mov
call
loope
push
xchg
ja
push
push
xchg
or
popf
loopne
out
or
fcomps
xchg
dec
jg
sahf
sti
push
push
fsin
jnp
mov
adc
mov
ss
mull
xor
cmc
dec
jl
and
sbb
push
pop
mov
pop
mov
and
add
inc
pop
mov
adc
cmp
sub
shlb
sub
stos
xor
and
mov
in
jo
and
mov
mov
gs
xor
cmp
stc
mov
sub
imul
jge
pop
mov
jge
pop
jl
xchg
jecxz
fs
add
or
std
repz
fdivs
mov
fidivrl
sub
faddl
cmp
repnz
ja
or
pop
or
aas
add
jg
push
aas
cltd
adc
push
xchg
inc
imul
adc
rorl
dec
xchg
shll
pop
inc
jo
stos
adc
adc
push
scas
ret
lret
dec
adc
and
push
pop
mov
xchg
dec
test
divb
dec
jp
or
sbb
adc
leave
inc
xlat
popa
outsl
xchg
inc
ret
lret
cmc
mov
add
fs
out
ret
test
mov
inc
pop
je
adc
adc
incb
adc
dec
add
add
xor
sbb
pop
add
adc
enter
imul
pop
xchg
sub
sub
lcall
movsl
add
pop
and
sub
or
jnp
inc
out
cmpsl
clc
ffreep
sti
jle
in
xor
sbb
add
sbb
sub
dec
ss
mov
mov
fdivrs
ss
in
mov
mov
das
add
xchg
and
jg
mov
jnp
ffree
xchg
adc
add
mov
mov
push
mov
mov
mov
nop
push
adc
pop
adc
test
fiadds
hlt
inc
fsubs
xchg
mov
sbb
sti
mov
popa
pusha
stos
fnstsw
or
fnstenv
cltd
sub
jmp
add
inc
adc
mov
jge
inc
out
add
pop
mov
mov
sbb
dec
sbb
cmp
or
rcrb
clc
cmp
cmp
add
mov
ja
insl
pop
cltd
test
or
push
push
lret
mov
jmp
sbb
push
stos
cmp
fmull
pop
sbb
sbb
subb
ret
pop
les
jno
jno
xor
sti
ja
cld
sbb
pop
out
sub
jno
mov
and
into
lods
aaa
or
test
fistl
test
leave
mov
stos
outsb
inc
add
dec
jg
test
mov
orb
push
mov
xlat
cmpsb
inc
pop
les
es
jns
rcrl
pop
or
loopne
sbb
jbe
bswap
cmp
xchg
add
rcr
fldcw
shrb
loope
pop
xchg
push
std
enter
test
sub
cmovo
mov
popf
dec
icebp
ss
sarl
jnp
popf
movsl
push
test
jecxz
mov
push
pop
dec
cli
sub
cmp
insb
lahf
mov
test
jne
pusha
xchg
ljmp
jg
dec
pop
or
cwtl
mov
push
mov
cmpsb
and
out
es
jecxz
xchg
andl
jle
imul
push
adc
push
mov
outsb
push
and
mov
test
adc
in
cwtl
loopne
test
mov
jecxz
stc
bound
adc
mov
sarl
out
fadds
leave
movb
dec
add
dec
insb
sbb
mov
sbb
jns
push
lods
imul
xchg
cli
inc
shl
adc
pop
adc
push
xlat
push
ret
sub
add
xlat
sti
lods
loop
inc
push
clc
fistpl
inc
inc
xchg
iret
sub
bound
repz
dec
shrl
lret
mulb
in
into
mov
push
push
push
push
addb
mov
fwait
inc
outsb
mov
adc
leave
fs
add
addb
testb
addr16
mov
sbb
mov
add
fwait
mov
sub
scas
cltd
movsl
aas
inc
in
fists
test
lahf
in
inc
fwait
xchg
shll
xchg
clc
inc
inc
into
enter
cmpsl
sti
xlat
xchg
lahf
cmp
push
inc
fucomip
ret
repz
pop
int3
cltd
pop
inc
and
mov
inc
add
mov
stc
test
xchg
xchg
mov
and
push
mov
imul
jmp
inc
test
ds
xchg
insl
dec
adc
sbb
outsl
and
dec
fisttps
stc
xchg
vmovntdq
pop
rclb
jnp
popa
sbbl
es
xchg
cmp
add
mov
or
aas
xchg
jo
push
in
rcrl
loope
dec
xlat
cltd
add
shll
int3
pop
lcall
scas
jns
xchg
xchg
xor
mov
or
inc
adc
stc
and
dec
push
mov
test
loopne
clc
xchg
in
mov
sbb
add
ss
test
setnp
push
sub
scas
sahf
cmpsb
cs
mov
fs
out
cmp
xor
shll
pop
xor
loop
jge
jns
cld
cltd
addl
pop
mov
iret
jl
pop
rorb
and
inc
sbb
or
adc
xor
jbe
in
push
cmp
add
pushf
jecxz
sub
or
cmp
jecxz
push
push
cs
out
test
xchg
in
adc
sbb
jne
lahf
and
lods
or
ljmp
mov
mov
aaa
hlt
pop
inc
sbb
jo
and
mov
mov
cwtl
push
outsb
push
stos
pop
push
add
push
sub
je
es
dec
cbtw
aam
sahf
mov
or
jns
fistps
sbb
fnstsw
stc
movsl
in
inc
rcr
out
jae
insb
test
adc
mov
je
shl
push
cmc
pop
push
xchg
shll
imul
lret
xchg
js
sub
out
push
filds
xchg
inc
aam
fiadds
cwtl
jno
sbb
repz
inc
iret
pop
es
or
stos
incb
icebp
xchg
mov
mov
rcl
push
xor
pop
popf
cmpb
fs
add
mov
sbb
cltd
and
lods
iret
sbb
sub
arpl
xchg
sti
outsl
movsb
jmp
push
push
mov
pop
inc
ja
repnz
stos
push
stos
xchg
pop
push
cmpsl
out
sbb
ret
cmp
sub
or
push
mov
mov
mov
in
aas
dec
scas
mov
out
dec
stos
mov
movsb
sub
sub
ja
aad
loop
mov
dec
enter
adc
inc
rcr
pusha
xor
xchg
mov
gs
fwait
addr16
imul
adc
xchg
add
addr16
mov
shrl
sbb
xchg
inc
scas
sbb
lock
push
mov
sbb
les
cmp
pmaxub
push
push
fcmovne
and
jge
xor
out
sti
add
or
or
out
jne
out
cmpsl
pop
mov
sti
pop
fmull
xor
stos
dec
out
sti
in
jge
cmp
jl
push
pusha
dec
fistl
je
adc
sti
in
ds
cmp
add
int
bound
pusha
xchg
pusha
into
arpl
pop
jne
mov
inc
rorb
cwtl
push
push
and
popl
dec
pop
dec
push
leave
xor
and
ja
push
subl
aad
pop
into
pushf
mov
nop
mov
mov
int3
sub
sbb
adc
out
or
lcall
push
es
mov
cmp
fs
hlt
aaa
nop
pop
push
imul
mov
imul
rcrl
sbb
nop
imul
lahf
fwait
icebp
sub
mov
inc
in
cmc
cmp
push
jecxz
jne
jns
lret
xchg
inc
or
lock
and
aam
mov
pushf
jecxz
add
add
scas
or
lock
mov
arpl
out
xor
inc
cmp
stos
mov
movsl
fsub
ror
outsb
jne
mov
pushf
cmpsl
xlat
stc
das
jbe
pop
mov
push
add
daa
sbb
or
sahf
lcall
sub
pop
sub
push
rcl
lret
or
mov
xchg
ret
addl
into
xchg
leave
outsb
lahf
in
pop
mov
mov
jbe
jp
lret
pusha
mov
and
push
cmp
pushf
stos
jae
test
jle
test
cltd
adc
xor
fdivl
dec
inc
mov
mov
fiadds
nop
rcr
movsb
les
data16
fistl
jle
lea
mov
lcall
in
aas
sti
sbb
icebp
dec
rorl
adc
xor
push
out
adc
inc
int
test
mov
leave
push
dec
adc
scas
adc
vmovq
cmp
les
xor
mov
rcl
out
nop
push
cmpsb
jg
dec
pop
loope
pop
movsl
xor
call
and
dec
dec
into
mov
icebp
push
stc
adc
cmp
jnp
inc
push
add
mov
daa
lods
imul
ficompl
aas
xchg
add
fwait
clc
loopne
mov
sbb
enter
push
pusha
cwtl
mov
jbe
icebp
dec
mov
xor
adc
ljmp
sbb
push
popf
xchg
push
shll
mov
xchg
xchg
fildl
and
sti
xchg
inc
int
test
jle
rcll
fistpl
lods
push
shl
sbb
xchg
cmpsl
lret
dec
sahf
divl
loopne
into
sub
int3
pop
push
fdivp
shlb
or
mov
add
mov
sub
cmp
mov
daa
mov
sub
dec
dec
std
inc
push
lcall
dec
imul
mov
jae
adc
cmp
push
insl
movsb
cmp
and
cmp
lock
sbb
pop
mov
decl
ljmp
adc
mov
fbstp
xor
mov
jge
mov
xchg
dec
aas
ret
xor
add
sub
mov
stc
push
pop
aaa
dec
mov
jge
insb
test
add
test
pop
hlt
ljmp
adc
iret
pop
insb
ja
mov
jb
lret
insb
test
jmp
les
mov
xchg
in
sub
fwait
push
pop
xchg
arpl
cmpsl
push
mov
sbb
fcompl
push
pop
pop
inc
mov
sbbl
imul
call
sbb
pop
xchg
sbb
jne
roll
xor
test
decb
decb
in
idivb
pusha
aas
inc
lahf
push
subb
dec
insl
fwait
cmp
popa
std
or
rolb
in
mov
mov
out
and
lds
in
into
cmp
xor
repz
add
sarl
and
mov
add
sub
test
mov
or
mov
fisubrl
loopne
push
fidivl
xchg
sub
inc
push
sub
cwtl
pop
stc
loopne
push
sarl
lea
mov
xor
leave
pop
mov
sbb
push
cmc
int3
mov
jne
out
cmp
mov
icebp
fildll
push
call
in
inc
mov
jno
test
cmpsl
jb
addr16
xor
mov
and
test
dec
sbbl
sahf
test
orl
inc
movl
sbb
mov
lahf
pop
ja
add
enter
aam
pop
xor
pop
je
movb
insb
fucomp
inc
inc
inc
sub
adc
fistps
adc
in
add
push
pusha
popf
mov
adc
xor
leave
cmp
hlt
sarb
or
scas
inc
or
or
jae
dec
sbb
lods
jge
push
rcrb
into
jp
pop
nop
pushf
pop
xchg
pop
loop
lods
pusha
out
mov
sub
dec
pop
lea
test
in
shrb
cmp
mov
cs
popa
loope
pop
test
ljmp
call
ret
test
in
cld
nop
aas
std
dec
enter
in
imul
fmuls
or
pop
les
jbe
sbb
int
push
jne
adc
pop
shrb
jnp
xchg
fisttpll
lahf
nop
lret
push
daa
mov
xchg
or
or
inc
sbb
rep
mov
jnp
mov
js
in
hlt
sbb
nop
ljmp
inc
xchg
fwait
sbb
mov
mov
sub
stos
mov
xchg
decl
nop
fwait
add
cmp
sbb
rcll
mov
enter
mov
adc
negb
imul
inc
les
ds
sahf
push
and
scas
int3
scas
mov
mov
push
xor
add
pop
mull
leave
lods
mov
xchg
test
test
frstor
nop
ds
les
mov
adc
push
repz
fdivl
cmp
cmc
daa
mov
or
cmp
xor
inc
mov
mov
and
call
sub
cmp
push
or
sti
xor
mov
and
push
pop
or
ljmp
mov
movsl
call
dec
rcr
jns
ret
cmp
push
mov
add
inc
arpl
jae
ret
loop
mov
int
mov
clc
mov
jg
mov
imul
mov
push
add
pop
xor
adc
cwtl
shl
leave
sbb
mov
fdivr
stos
daa
out
mov
or
cmpsb
in
lods
shrb
bnd
aaa
and
lods
pop
scas
bound
mov
mov
xor
mov
int
data16
daa
lds
push
aam
mov
jmp
push
dec
push
stos
add
push
jge
sarb
ret
inc
loopne
test
mov
dec
stos
xchg
xor
jo
nop
sub
add
mov
int3
nop
push
and
fmul
loop
faddp
inc
popa
fsubrl
adc
push
bound
rclb
sti
cmp
aad
adc
in
xchg
loopne
push
jb
or
mov
jp
call
in
cltd
pop
pop
adc
cli
inc
add
testb
test
iret
fldl
fiaddl
sbb
jbe
xchg
pop
mov
imul
test
mov
scas
xor
in
cmp
dec
inc
push
mov
inc
icebp
cmc
push
out
cmp
sub
mov
xchg
jle
stc
pop
push
push
jnp
shl
out
mov
lcall
and
mov
and
and
scas
sbb
push
xchg
in
push
je
ret
subl
pop
mov
xor
dec
dec
mov
idivb
adc
dec
inc
lahf
inc
sbb
xchg
pavgw
mov
loopne
inc
push
bound
clc
mov
aad
cmpsb
repnz
iret
add
cmp
lods
addr16
add
fsubs
pop
xchg
clc
adcb
pop
push
xor
int3
and
sub
dec
sbb
jbe
cmp
lcall
lret
nop
stos
ja
and
test
insb
jae
adc
push
lock
inc
push
dec
push
sub
xor
fistpll
dec
popf
aam
sbb
xchg
mull
repz
push
push
pop
jl
pop
push
cmp
and
xor
sarb
cli
lret
jl
mov
negb
popf
sub
mov
insb
mov
mov
cmc
cmp
xchg
xchg
test
stos
mov
ds
notl
sbb
xchg
mov
sbb
lods
inc
mov
shlb
ficoms
enter
jno
shll
inc
sbb
fwait
jp
les
lods
mov
cmpsl
pop
jae
adc
aam
movsl
bound
mov
or
pop
dec
inc
push
fsubs
les
push
test
cmp
mov
fidivrs
roll
xor
sbb
test
push
stos
pop
lock
xchg
sahf
mov
rclb
insl
xorl
sbb
mov
or
inc
roll
arpl
sarb
cmp
les
jb
xor
xchg
cmp
sbb
rcl
sar
into
xchg
pop
adc
dec
cmp
scas
xchg
mov
aam
jb
cmpsb
insl
jb
ljmp
jno
jmp
lds
push
dec
and
jns
out
pop
inc
adc
xchg
cmp
ljmp
or
fisubl
cmp
lods
pop
dec
sbb
in
iret
arpl
push
out
ds
sbb
cmp
or
push
shrl
adc
jne
insb
pop
popf
or
lea
add
sub
js
push
and
or
leave
dec
jecxz
dec
jb
cmpsl
adc
pusha
cwtl
out
xor
pop
loopne
sbb
mov
lea
ret
adc
or
or
sbb
out
cwtl
push
loop
xor
mov
pop
jg
add
push
push
xchg
js
inc
aaa
cmc
nop
dec
mov
loopne
out
imul
or
adc
notl
cld
movsl
movsl
es
aaa
outsb
jg
sbb
sti
adc
sbb
inc
cmp
lahf
or
dec
out
mov
pop
out
mov
lods
pop
jne
mov
in
pusha
aas
mov
data16
xor
icebp
or
aad
mov
adc
lcall
lahf
jns
inc
cmpsb
and
push
pop
adcl
cmp
mov
pop
in
lods
mov
adc
jl
jl
popf
sub
frstor
push
or
mov
and
aad
popa
xchg
sbb
stc
mov
mov
jno
and
movl
cltd
pop
or
mov
inc
insb
faddl
inc
test
aas
cmp
xchg
mov
aaa
pop
adc
push
xchg
mov
mov
in
das
and
jg
push
pop
ret
ja
push
fsubrp
lret
in
scas
xchg
mov
hlt
inc
in
icebp
adc
das
idiv
cli
std
push
push
sarb
and
loop
ss
jle
fwait
les
mov
hlt
fistpl
jo
clc
cmp
jbe
adc
add
push
add
dec
cmp
inc
popf
jb
sbb
and
fistl
gs
or
rcrb
jb
cwtl
push
jecxz
mov
movzbl
lahf
into
aaa
addr16
pusha
xor
push
bound
jno
ficomps
xchg
in
push
mov
push
push
pushf
addr16
leave
fimull
jmp
cltd
xor
js
and
in
je
jns
scas
add
leave
fmull
mov
shlb
aas
fwait
xor
shld
pop
pop
xchg
inc
mov
into
lea
xchg
into
mov
pop
push
and
scas
jno
dec
mov
dec
jg
mov
rcl
jg
inc
aaa
add
je
jle
nop
aad
int3
cmp
into
xor
adc
push
sbbl
mov
jmp
or
or
ss
aas
xchg
jg
mov
push
es
xchg
inc
jne
mov
into
cli
mov
icebp
push
subb
jle
filds
data16
xchg
mov
xchg
pop
shrb
cmp
mov
pusha
inc
xchg
fnstcw
mov
cmp
xchg
xchg
xor
dec
adc
cmc
repnz
sub
inc
mov
push
cli
mov
pop
jecxz
mov
or
stc
xchg
pop
call
in
adc
repnz
lahf
push
sbb
inc
dec
push
inc
cmp
in
cs
or
push
shrb
xor
inc
outsb
push
sbb
fwait
sbb
xchg
mov
jbe
fcomip
test
jge
cltd
cmp
xchg
jae
ss
jle
mov
inc
sbbl
testl
jmp
ret
out
push
pop
cwtl
cwtl
out
lock
cmp
and
popa
jno
sub
lock
xor
push
clc
hlt
adc
test
aaa
add
xor
jl
imul
fnstcw
adc
sub
jge
and
sub
mov
gs
push
arpl
in
ja
stos
and
xchg
jo
shll
cmpsl
cmp
cmp
popa
dec
subb
xor
xchg
add
sub
mov
cli
decl
push
arpl
cli
sbb
ret
sbb
nop
aaa
jne
add
or
inc
push
xchg
xchg
fimull
lods
lret
lock
inc
adcb
lret
pushf
lcall
aam
add
bnd
lret
les
inc
push
imul
adc
xlat
sti
sbb
or
cs
adc
cmp
add
add
ja
bound
pop
les
movsl
scas
mov
xor
push
ljmp
sarb
sbb
adc
mov
xchg
test
rorb
jle
insl
jl
shll
popf
or
aaa
xlat
insb
cmp
jg
clc
push
cmp
xor
dec
out
mov
imul
test
add
sbb
xor
mov
dec
push
mov
and
push
ja
ljmp
xorb
in
pop
adc
dec
mov
xor
fs
fs
popf
arpl
xchg
loope
push
push
dec
rolb
loop
outsl
fs
and
addr16
mov
les
mov
add
ljmp
psraw
cwtl
jno
cmc
add
cmp
idivl
push
mov
fsubrs
mov
outsb
dec
push
fiaddl
push
cwtl
popf
pop
sbb
aam
fildl
aaa
add
jmp
adc
jb
pop
lea
jns
test
lock
pushf
inc
jns
add
iret
xchg
dec
ja
inc
enter
sub
jbe
pop
dec
dec
lock
inc
jge
in
push
loop
or
mov
mov
or
dec
into
mov
dec
out
xchg
int3
inc
jg
mov
mov
dec
xchg
nop
and
cmpsb
mov
or
jle
das
pop
xor
sbb
push
movsl
movsl
mov
mov
es
int3
inc
mov
shlb
gs
dec
sub
push
xor
and
lock
hlt
mov
inc
gs
mov
pop
mov
jne
push
xchg
jbe
scas
faddl
sub
ja
or
divl
push
jo
fmull
sub
dec
inc
ret
mov
shr
push
ss
pop
mov
cltd
adc
xor
cld
and
mov
pop
das
lock
aas
xchg
sub
pusha
sbb
push
mov
lret
mov
inc
hlt
pop
clc
pop
xchg
mov
push
fs
mov
inc
xchg
lcall
dec
push
mov
or
push
xchg
inc
mov
inc
mov
ja
mov
andl
das
movsb
and
xor
or
dec
orl
imul
loope
pop
aam
rorb
mov
pop
cmp
dec
pop
or
or
arpl
xor
dec
mov
enter
mov
lea
out
addb
push
mov
inc
inc
movsl
cwtl
lock
cmp
outsl
mov
fs
cmpsl
test
insl
mov
push
ret
add
or
out
mov
stos
les
out
mov
mov
pop
pop
pushw
in
pop
in
hlt
mov
lea
inc
mov
pop
mov
gs
mov
mov
scas
aam
cld
and
xlat
adc
inc
lret
push
rclb
out
dec
popa
std
and
push
mov
mov
shlb
push
push
or
inc
int
jle
adc
dec
lea
mov
xor
adc
lock
xchg
or
test
inc
movsl
jl
jle
repz
clc
loopne
fildll
mov
dec
imul
mov
mov
lock
pop
fld
dec
adc
mov
cmp
stos
insb
mov
sbbb
xchg
test
sbb
sbb
pusha
aad
aaa
mov
or
mov
insl
test
cmp
pushl
in
jns
mov
adcb
fstps
xchg
stos
sti
jmp
jo
popf
out
inc
pop
dec
push
add
jmp
pop
sbbl
sbb
dec
lods
jno
movsb
pop
loop
jg
pop
cli
gs
jb
popf
push
mov
stos
jle
repnz
inc
test
lds
adc
pop
pop
cltd
fwait
or
test
add
mov
repnz
push
sub
fmull
roll
dec
push
dec
lret
sahf
ss
jge
lods
andl
push
je
dec
adcl
inc
sbb
jge
lea
adc
loope
mov
adc
jp
cmpsb
add
push
orb
arpl
mov
jmp
adc
mov
pop
dec
inc
test
push
fwait
pop
dec
jno
push
sarl
dec
xlat
pop
pop
jo
and
das
jo
pop
ljmp
fstpt
add
jge
mov
fidivl
lods
jae
in
sbbb
fists
xchg
popf
xchg
fsubrs
mov
cmc
loopne
lret
xor
mov
lahf
lods
jmp
sbb
clc
dec
mov
pop
xor
jp
adc
iret
scas
add
xor
mov
pop
cmp
and
inc
addr16
test
or
mov
cwtl
xor
inc
xlat
cwtl
mov
pusha
movsl
inc
pop
dec
cmp
in
lret
cmc
xchg
into
jae
andb
cmp
call
jge
lret
outsl
lret
pop
test
sub
aaa
movsb
push
cli
lds
push
in
call
jl
xchg
jmp
lds
arpl
dec
and
and
push
stos
xchg
xchg
addr16
or
sbb
les
and
jns
in
mov
out
add
mov
loope,pn
push
xorb
dec
icebp
adc
int3
dec
cwtl
shlb
mov
les
cmp
aad
sub
xchg
xor
mov
lcall
leave
cmpsl
dec
jmp
jne
adc
test
lahf
iret
add
stos
mov
nop
dec
cmpsl
jecxz
dec
loopne
dec
mov
andl
ja
lcall
stos
nop
add
ljmp
jns
sbb
cmc
add
fists
inc
popa
xchg
pop
adcb
repz
sub
push
cwtl
sbb
stc
push
push
dec
es
loope
pop
jns
push
cmp
sub
fcom
pushf
insb
ja
out
jl
jge
mov
fs
lods
ret
fsubr
hlt
jne
mov
mov
adc
mov
xor
or
fwait
inc
pop
pop
or
fcom
fdivrs
cmp
adc
ds
push
xor
cli
cmpsl
leave
xor
leave
addr16
scas
push
or
sahf
jo
stc
lock
mov
or
jbe
enter
push
jno
sti
into
cli
cli
cmp
xor
pop
aam
or
inc
xchg
dec
pop
fisttpl
inc
imul
nop
sub
dec
mov
enter
rorl
cmpsb
enter
cmp
push
pop
nop
jg
icebp
fidivrl
mov
cmp
xchg
pop
dec
mov
jecxz
jg
imul
inc
pop
or
dec
movsl
pop
sbb
pop
push
ljmp
mov
xchg
daa
mov
cmpsb
xchg
out
mov
lcall
lretw
push
shll
mov
nop
sub
lahf
leave
shrb
in
sbb
leave
pop
and
test
mov
inc
mov
sbbl
out
cmpsl
xchg
icebp
pop
xchg
stc
fnstcw
lds
je
cmp
divl
fsubrl
jns
sub
jae
pop
or
sub
inc
faddp
inc
xchg
bound
insb
aad
jnp
daa
xchg
not
test
sbb
jnp
popa
ljmp
addr16
mov
lds
je
cmp
or
insl
xor
jns
mov
or
lcall
and
mov
shll
mov
in
jno
mov
jbe
fcmovne
jnp
xor
push
mov
adc
adcb
jnp
mov
subl
leave
xor
xchg
inc
adc
mov
sub
lods
xor
inc
enter
xchg
adc
or
push
fwait
clc
xchg
pop
in
xchg
pop
repnz
adc
xchg
enter
mov
mov
ja
rorl
outsl
call
lret
mov
es
pop
stos
mov
les
add
jecxz
aaa
addr16
sub
dec
xor
fbstp
push
divl
loopne
push
movsb
mov
sbb
xor
or
or
stc
call
rcrb
adc
stos
imul
rcrl
lea
cmpsl
adc
fwait
ss
out
out
cmp
xchg
out
rcr
fistl
add
in
arpl
ret
sub
leave
inc
sbb
xor
cltd
cmp
mov
into
ja
dec
add
rolb
pusha
mov
sub
dec
adc
lret
push
clc
ror
sahf
lods
push
jo
dec
les
shlb
es
jp
enter
sbb
xchg
pop
pop
cmc
adc
add
push
mov
data16
dec
mov
mov
and
pop
out
test
aas
scas
shrl
cs
dec
cmpsl
ja
inc
js
push
inc
ja
in
andl
fsubs
test
addb
ja
std
stos
sarl
imul
clc
mov
cld
push
or
pop
push
pushf
andl
fldl
ljmp
das
or
pop
in
xchg
and
repnz
jge
loope
es
pushf
je
mov
pop
stc
mov
lcall
imul
lahf
sub
nop
inc
ds
ret
xor
mov
push
adc
mov
aam
je
sti
imul
cmp
pop
adc
adc
xchg
imul
loop
mov
mov
sbb
pop
scas
in
lods
xlat
xorl
adc
dec
sarl
mov
mov
push
pop
dec
loopne
imul
mov
pop
xor
popa
notl
imul
xor
cs
mov
lea
jae
xchg
inc
loope
jbe
aad
sub
or
ss
mov
adc
mov
insl
je
into
sbb
rorl
jne
fiaddl
clc
jne
pop
shlb
sbb
xchg
insl
and
data16
mov
push
dec
loopne
add
popa
pop
mov
fcmovbe
mov
rorb
divb
sub
jmp
hlt
inc
ret
sti
inc
outsb
loope
xchg
pop
or
inc
mov
enter
imul
movsb
add
inc
push
inc
js
loopne
push
aam
ss
adc
les
notl
adc
push
daa
pop
inc
adc
popf
icebp
push
lret
cmp
adc
mov
push
xchg
mov
fisubrs
imul
inc
fnsave
aad
sysenter
cmp
and
pushl
vunpckhpd
mov
push
nop
jbe
stos
test
in
sbb
or
adc
pop
fsubrl
xchg
fs
push
mov
xlat
mov
rcll
jns
ficoml
repnz
dec
mov
cmpsb
lock
jo
ljmp
or
fstp
xor
and
sub
cmp
xchg
es
ret
in
iret
xor
shll
dec
stos
xor
addb
push
mov
cs
adc
test
mov
je
lret
mov
repz
or
ret
stc
pop
call
mov
jge
fcoms
sti
cmpl
fcomps
mov
lea
loop
push
sub
test
int
dec
in
pop
xor
int
fisubs
inc
and
adc
pushf
or
ljmp
dec
push
scas
std
setle
pop
inc
push
sbb
es
lock
dec
imul
add
push
test
leave
sbb
ret
lret
xchg
loope
dec
jecxz
jp
aam
adc
or
call
push
cmp
test
jle
sub
and
aad
pop
cmp
inc
cmp
bound
sub
xor
cwtl
jae
leave
aam
cmp
sbb
or
lods
push
xchg
or
push
insb
adc
jo
inc
nop
test
popf
push
fsubrs
cmp
loop
stc
ret
and
xor
cltd
pop
mov
outsb
sub
fsubrs
sahf
push
cltd
jo
call
sub
outsb
mov
enter
ss
or
jge
jae
sbb
in
mov
lretw
hlt
jb
xor
out
inc
push
xchg
notl
lods
or
jp
in
mov
aaa
jle
mov
xor
inc
dec
xorb
sbb
sbb
push
xchg
cmp
rclb
adc
jnp
cmp
popa
jb
and
push
jle,pt
test
mov
sbb
adc
movsb
in
fwait
popf
mov
dec
adc
mov
push
xchg
in
mov
inc
pop
push
push
xor
mov
or
in
and
pop
dec
inc
adc
mov
sbb
jle
mov
pop
xchg
aam
rol
int
sub
rcr
push
adc
dec
out
mov
sarb
sahf
xchg
pop
inc
pop
fmuls
push
inc
jmp
pop
mov
pop
adc
lods
hlt
inc
jnp
push
popa
rorb
pop
and
jb
ret
jmp
stos
insb
and
push
mov
cmc
add
push
dec
push
sub
dec
gs
ds
push
cltd
inc
cmpsb
push
jge
jnp
jno
inc
jo
xor
ret
dec
xchg
sti
shll
jbe
scas
dec
mov
pop
aaa
movsb
push
in
push
pop
sbb
cs
dec
push
xor
add
sub
cmpsl
sbb
sbb
loop
insl
sbb
sbb
and
scas
or
in
loope
sbb
adc
ja
jle
push
stc
add
adc
jp
loopne
mov
in
push
js
xor
and
test
xchg
divb
in
out
mov
cld
mov
in
dec
arpl
cmpsb
lea
je
and
lods
xchg
out
or
repz
lds
add
inc
fildll
fwait
data16
dec
pop
fcmovu
push
bound
cmc
into
push
or
cs
loop
add
ret
repnz
adc
xchg
test
jbe
inc
inc
sub
mov
xchg
dec
pop
dec
sti
cmp
das
lcall
shlb
lods
push
push
jne
mov
pop
push
scas
lock
push
and
scas
ret
sub
pop
push
pusha
cli
in
and
jecxz
fwait
cmp
pop
jp
xor
lea
test
lds
mov
ljmp
sbb
push
fistps
and
test
dec
xchg
inc
pusha
mov
fnstcw
jb
adc
andl
mov
test
sub
mov
fsts
jnp,pt
dec
lcall
cli
ja
dec
cmc
clc
into
addl
push
stos
pop
fbld
dec
jae
arpl
inc
cmp
mov
mulb
cmp
es
push
jl
push
test
aam
jno
and
dec
add
sbb
test
mov
add
or
lcall
insb
mov
xchg
fdivrs
adcb
dec
jmp
dec
jbe
sarl
in
cmp
pop
jl
lock
mov
ret
in
fsts
jg
js
xchg
test
add
imul
pop
jge
add
inc
adc
mov
mov
popf
dec
pop
sbb
cltd
dec
repz
lcall
enter
fwait
mov
mov
cmp
cmp
pushf
cwtl
mov
loopne
int3
pop
mov
cs
pop
fcmovb
or
sbb
jb
insb
xchg
mov
fs
mov
mov
jo
popf
and
add
lahf
les
stos
pop
xchg
jbe
xchg
xchg
lret
fwait
testl
clc
dec
or
push
cmp
scas
cmp
orb
insb
mov
inc
mov
dec
pop
test
fwait
mov
repz
test
addb
outsb
mov
in
clc
mov
add
mov
lods
sub
ret
maxps
imul
int3
enter
daa
iret
cmpsb
hlt
bound
popf
pop
adc
or
call
mov
mov
ud1
fsubl
fisubs
fmull
cli
xor
fisttpl
pop
iret
out
cmp
pop
lods
mov
push
mov
dec
pusha
jg
mov
add
dec
add
into
hlt
sbb
or
inc
push
mov
sbb
lret
lret
sub
in
xchg
imul
outsb
jo
ss
ja
and
or
and
adc
lock
push
js
outsb
fst
push
xor
dec
cmp
or
inc
and
cwtl
mov
push
cmc
jb
movsb
cmp
cmp
dec
aaa
imul
fisubrl
enter
into
cwtl
cmpsl
and
dec
ljmp
push
cmp
test
test
adc
xchg
jnp,pn
adc
out
xor
cmp
aaa
fcompl
dec
test
iret
add
jno
fwait
xor
pop
aas
jo
jl
jge
lock
inc
lods
fstpt
adc
adc
dec
mov
xor
pop
stos
xchg
test
cli
mov
ljmp
jp
scas
xor
pop
cmp
out
shl
cmpsl
insb
xchg
xor
or
adc
push
jo
add
sub
mov
add
fisubrs
pop
stos
in
ror
jb
pop
mov
rcll
cmpsl
cmp
insl
pop
xchg
dec
inc
sbb
push
jmp
fsubl
push
stos
inc
xchg
cld
adc
jl
repnz
xor
out
mov
nop
int
push
loope
xor
incl
test
test
dec
int3
std
int3
sub
lods
or
xor
xchg
fnstsw
mov
dec
pusha
jne
jg
lcall
inc
test
dec
and
dec
pop
xchg
pop
bnd
arpl
jmp
loop
cmpsb
sbb
rcl
lcall
jne
mov
adc
xor
sbb
push
xor
xchg
xchg
xor
mov
enter
pop
inc
pop
and
in
js
movsl
xchg
scas
and
jg
mov
sub
in
iret
add
fiadds
push
loop
add
sub
aaa
daa
push
xor
clc
pop
mov
xor
jb
push
xchg
mov
dec
cltd
loopne
test
cmc
pop
sub
lea
inc
lcall
push
push
push
iret
es
xchg
xchg
xchg
out
repz
call
ds
add
dec
pop
leave
roll
outsl
jae
inc
les
dec
adcb
popa
scas
xlat
mov
mov
inc
dec
ljmp
inc
cmp
pop
or
xor
icebp
imul
sbb
add
jl
and
xchg
popf
adc
fidivs
ret
mov
xorl
out
into
arpl
push
cli
in
lcall
cmp
sbb
je
mov
faddl
arpl
xchg
je
pop
add
cmp
lcall
ja
clc
push
inc
shrl
leave
js
sbb
mov
push
test
jae
pop
mov
lds
and
repz
ret
mov
mov
sbb
dec
xchg
or
jge
out
fcomps
adc
lret
shll
rcrl
popa
add
pop
jnp
imul
jle
and
push
cmp
add
mov
sbb
lcall
out
push
jnp
shrb
add
in
es
or
add
cmp
cmp
data16
aad
inc
dec
arpl
mov
loope
ret
scas
in
bnd
test
dec
xchg
ror
enter
je
mov
inc
outsl
adc
mov
mov
int3
adc
out
fldl2e
or
inc
adc
call
and
packuswb
jg
mov
stos
roll
cmpsb
adc
jecxz,pn
aad
lret
mov
daa
iret
jae
es
jbe
xchg
sub
pop
aaa
popf
or
cmc
bnd
and
xor
icebp
dec
push
shll
scas
lahf
movsl
jg
into
mov
or
push
aaa
mov
xor
popf
jle
mov
add
hlt
pop
dec
xlat
xlat
es
add
jl
lods
pop
adc
addb
ficoms
rclb
js
icebp
and
dec
loopne
imul
fs
addr16
addb
adc
sbb
lahf
je
fadd
jecxz
jb
push
push
mov
imul
or
or
inc
rcll
push
jg
push
sbb
add
inc
scas
subl
adc
mov
inc
stc
push
arpl
fwait
cmp
imul
sub
dec
pushf
leave
imulb
lds
fs
movb
movsl
or
fisttpl
mov
mov
cld
mov
outsb
xor
inc
sbb
jb
push
in
ss
pop
loope
jo
mov
cld
push
fstpt
mov
out
clc
push
jmp
pop
cmp
lds
imul
bound
mov
data16
cmp
sub
rcll
inc
mov
hlt
push
mov
xchg
sbb
pop
push
jbe
add
jae
jo
lcall
or
xor
and
inc
pusha
rolb
out
or
mov
out
push
enter
stos
push
imul
and
loope
push
leave
test
push
inc
lcall
mov
mov
push
cltd
mov
jo
cltd
cld
mov
pop
xchg
and
sbb
fstps
push
mov
jmp
jp
fdivl
push
mov
dec
cmpl
push
xor
adc
incb
fwait
mov
and
fldcw
test
add
jmp
cwtl
adc
and
iret
xor
into
sbbb
xchg
adc
mov
mov
cmp
sub
scas
push
fcom
mov
arpl
mov
in
mov
adc
inc
xor
xchg
cmc
movsl
cs
mov
insb
and
or
and
inc
jae
in
sub
cmpsl
jnp
pop
cwtl
xor
repnz
je
mov
cmp
rclb
orb
mov
stos
cmpsb
mov
xor
push
xchg
jge
fcmovbe
xchg
xlat
dec
push
inc
adc
outsl
sbb
addb
mov
pop
outsl
dec
gs
std
enter
or
lods
rcrb
push
and
fdivs
les
sbb
cs
xor
sub
pop
pushf
scas
shll
scas
add
push
push
push
leave
fdivrl
xchg
push
adc
pop
mov
rorb
jae
jnp
les
push
pop
lahf
aam
cmp
pop
xchg
mov
enter
dec
dec
rcll
mov
lret
mov
jg
outsb
pop
push
incb
loope
loop
test
mov
pop
je
and
push
in
xchg
xchg
movups
mov
dec
stos
test
mov
push
rcll
hlt
pop
subl
out
mov
arpl
xor
aad
and
fadds
add
pop
outsl
mov
mov
jb
jg
imul
xchg
pop
inc
dec
mov
push
rcl
test
xchg
ret
lds
int3
gs
jl
lcall
add
mov
cltd
rcll
push
add
sbb
dec
and
mov
add
stos
xchg
pop
cmp
pop
jae
dec
dec
stos
sbb
push
add
imul
jns
dec
pop
lfs
mov
adc
in
ljmp
loopne
and
mov
shrb
inc
aaa
dec
mov
fmulp
sub
push
outsl
xchg
rolb
cmp
ljmp
pop
mov
cmp
jb
sbb
ror
mov
in
sahf
js
mov
in
mov
stc
mov
jecxz
push
or
je
fistps
test
lods
and
mov
sub
pop
xor
or
xor
cmp
and
lods
push
push
inc
jmp
repnz
call
out
jne
push
pop
leave
cmp
or
test
aaa
lret
xor
inc
lcall
and
xchg
sahf
pop
test
mov
call
mov
imul
or
in
loopne
sbb
add
lds
daa
add
cmp
clc
dec
out
mov
sub
and
xor
pop
sbbl
insb
popf
push
imul
icebp
sbb
call
pop
insl
push
xchg
sbb
inc
and
fwait
cmp
fdivrs
mov
and
dec
push
xchg
adc
or
xchg
in
add
vpaddsw
xchg
test
out
xchg
imul
mov
inc
mov
xchg
mov
bound
sub
roll
aas
and
mov
dec
cs
lock
adc
and
inc
bound
daa
loope
jno
incb
xchg
mov
sbb
xchg
push
sarb
adc
aas
mov
fs
jmp
dec
cmp
mov
push
xor
dec
or
cmpsb
lods
push
or
testb
gs
sarl
inc
bound
fidivs
sbb
xchg
or
sbb
movsl
mov
dec
jmp
ja
mov
fstps
repnz
je
out
in
fidivrl
sub
xchg
lcall
fnsave
inc
mov
stos
ficompl
pop
inc
sbb
lahf
gs
add
adc
jecxz
pop
adc
mov
jns
movsb
cs
orl
ss
push
imull
testl
push
or
mov
mov
test
enter
push
call
aam
xchg
sbb
scas
mov
fists
pop
jnp
xchg
cli
mov
rcl
dec
sub
inc
jno
ljmp
insl
pop
inc
dec
adc
iret
out
mov
jnp
xchg
sbb
scas
add
cmc
aaa
std
mov
pusha
inc
pop
mov
cmp
call
dec
addr16
addl
push
push
dec
dec
or
lock
inc
gs
pop
adc
push
or
scas
jp
xchg
inc
rorl
lods
cmp
xor
lcall
jle
cmc
jae
lcall
sbb
jl
lods
fistl
pop
test
pop
aad
pop
aaa
stc
push
aas
sbb
sbb
ret
popf
push
loopne
inc
or
dec
xchg
sub
rcrl
es
xchg
stos
xor
jmp
pop
add
cltd
lods
into
lods
aad
aad
into
outsb
inc
xor
mov
icebp
pop
push
adc
mov
cmp
mov
mov
jae
sbb
ljmp
test
sbb
scas
push
bound
stc
imul
std
dec
pop
pusha
iret
dec
ret
mov
pop
cwtl
mov
push
push
lods
bound
mov
sarb
inc
pop
push
push
sub
call
mov
inc
push
xchg
xchg
jae
pop
mov
dec
mov
sub
ret
sbb
push
jne
or
and
stos
sub
lret
pop
stos
mov
cs
jl
test
cmpsb
mov
lret
int
and
cmp
sub
mov
mov
cmp
dec
inc
sti
sub
insl
loope
xchg
push
rorl
xor
xchg
mov
notl
cwtl
jns
bound
sub
fst
std
in
dec
flds
lret
les
ljmp
cwtl
clc
in
pusha
movsb
mov
into
dec
and
outsl
sub
shrl
sbb
sbb
repz
and
lock
scas
in
fs
imul
sti
push
mov
stos
insb
fistpll
data16
jg
fs
jle
adc
and
fbld
arpl
in
adc
lea
mov
and
jmp
mov
lock
inc
mov
sub
aas
mov
aaa
dec
bound
xchg
ficoms
loopne
fstpl
lods
xorb
outsb
add
mov
fs
out
popf
mov
or
push
push
mov
jecxz
jns
jno
mov
shrl
mov
arpl
das
dec
daa
lods
test
mov
sbb
fisttpl
push
setns
mov
mov
in
add
loop
je
lcall
jge
aad
sbb
out
xchg
dec
std
sub
inc
scas
leave
aad
jp
jge
inc
inc
cld
icebp
enter
popf
mov
and
adc
repz
jmp
jo
in
xor
pop
mov
pushf
insb
fstps
fnstenv
cs
xchg
mov
mov
sub
mov
dec
xlat
cwtl
xchg
movsl
popa
ja
mov
das
aas
dec
cmpsb
jmp
pop
cmp
mov
mov
sub
jle
cmpl
testb
mov
sti
hlt
inc
in
sahf
sbb
inc
dec
inc
clc
add
inc
pusha
lahf
push
dec
dec
pop
xchg
mov
ljmp
dec
xchg
pop
rorl
pusha
mov
std
fsts
pop
shll
mov
mov
lcall
ror
xor
mov
outsl
loope
cmpsb
out
js
mov
and
pop
data16
cmp
movsl
or
lods
inc
fst
aaa
cwtl
mov
lahf
punpckhwd
push
lret
stc
stos
push
pop
push
dec
aam
int
sub
daa
or
xor
push
mov
sub
add
out
out
inc
js
sbb
test
and
add
gs
nop
dec
push
hlt
bound
aam
loope
dec
mov
xchg
cmp
mov
fwait
push
mov
inc
dec
ja
iret
inc
jns
fnstcw
jge
les
jmp
mov
sbb
xor
das
adc
push
lea
push
cmp
or
inc
inc
and
imul
call
testl
cld
divb
popf
dec
xor
pop
push
sbb
or
fdivs
jle
jle
push
std
outsl
inc
or
test
les
add
jb
ror
int3
or
mov
cmp
sti
push
adc
shl
enter
in
ss
pushf
sti
repz
lea
adc
rorl
mov
jb
and
std
push
hlt
pop
xchg
xor
mov
cmp
in
mul
xchg
sbb
sbb
cmc
sahf
stos
arpl
mov
icebp
ss
insl
das
cmp
stos
fbld
push
push
xor
add
js
mov
add
xchg
out
and
or
ss
or
mov
insl
out
sbb
and
les
cmp
push
cmpsl
or
adc
mov
jae
cmp
lcall
std
test
xchg
push
mov
mov
jl
add
imulb
inc
xor
jae
mov
jb
pop
adc
out
adc
mov
push
dec
sub
push
xor
inc
add
mov
push
cmp
pop
sub
idivb
pushf
and
leave
push
jle
xchg
inc
or
add
mov
sub
pop
jnp
pop
xchg
andb
stos
or
mulb
leave
rolb
int3
outsl
aaa
je
aad
je
movsl
mov
adc
repnz
inc
in
dec
out
sti
mov
fs
repnz
scas
mov
lahf
mov
jl
dec
cmc
scas
es
out
loop
fs
mov
ret
inc
in
jg
mov
mov
mov
movsb
push
mov
and
test
jmp
push
cmc
lock
repz
fbstp
jg
ret
sbb
mov
xor
cltd
stos
pushf
xchg
push
in
nop
hlt
or
dec
std
arpl
jns
test
idiv
clc
xchg
mov
fidivs
faddp
dec
fmuls
sarb
or
xor
sahf
add
push
mov
cmp
inc
test
jb
add
or
ret
outsl
mov
and
int3
adc
jecxz
adc
lahf
push
sub
and
fbstp
mov
xorl
adc
or
add
pop
sbb
jg
out
icebp
mov
pushf
mov
xchg
imul
jnp
mov
icebp
aas
pop
mov
dec
imul
call
fld1
adc
cmpsl
sub
lret
push
or
orl
jb
push
adc
push
fwait
mov
enter
pop
lds
ljmp
and
ss
in
cmp
sti
mov
fisttpl
lock
int3
call
rcrl
scas
xchg
mov
movsl
jae
movsl
sbb
es
test
mov
repz
cmp
rolb
test
push
shll
idivl
bound
dec
pusha
iret
dec
in
cmp
mov
xor
lahf
out
lods
mov
or
add
xchg
sub
jbe
sbb
fs
mov
or
mov
loope,pt
mov
mov
js
data16
cmp
rorl
pushf
enter
mov
outsl
mov
xchg
mov
mov
sub
mov
sti
popf
loopne
or
mov
push
gs
lea
jns
dec
inc
shufps
push
sahf
xor
pop
aam
pusha
nop
insb
sbb
mov
cmp
pop
scas
sbb
xor
sbb
xchg
mov
jp
or
out
cli
punpcklwd
sbb
mov
ficompl
inc
dec
insl
mov
loope
pop
mov
ja
and
or
or
hlt
pop
jno
lods
lds
movsb
pop
je
mov
lods
mov
pop
sbb
test
sbb
test
jo
fnstenv
hlt
sbb
mov
daa
jbe
jne
into
cld
jecxz
scas
cltd
mov
pop
pop
or
adc
xchg
sub
adc
sarb
inc
xor
and
inc
sbb
lret
dec
push
inc
int3
and
jmp
imul
scas
stc
lock
es
test
mov
pop
or
and
mov
fdivrs
cmp
aad
out
or
sbb
inc
cmp
jno
pop
mov
mov
lds
outsl
add
jmp
sub
pop
xor
cmp
psrad
iret
push
mov
pushf
push
push
ds
sbb
ss
jmp
out
leave
cmpsl
mov
test
mov
pop
mov
mov
lds
icebp
fisubrs
sub
pushw
sub
mov
add
adc
mov
into
out
mov
dec
stos
xchg
cmp
mov
cmp
mov
dec
pop
pop
mov
hlt
mov
cmp
push
repnz
bound
sub
pop
flds
fwait
push
cld
movsb
daa
shlb
call
enter
jns
push
les
inc
int3
std
mov
and
sub
clc
xchg
mov
stc
ret
testb
stos
jmp
aas
scas
outsl
push
in
fwait
call
hlt
jl
inc
lret
daa
js
push
imul
mov
and
movsb
test
add
push
jnp
movsl
inc
add
inc
sbb
mov
icebp
mov
into
fnsave
add
pop
cwtl
lods
push
add
insl
test
mov
mov
jmp
xchg
inc
popf
outsl
ljmp
int3
xorb
in
stos
popf
mov
jae
lret
enter
push
pop
js
negb
cmpsl
xchg
aad
sbbb
call
sub
test
push
pusha
sub
imul
jmp
push
xor
ret
mov
sub
pop
call
dec
jg
push
lods
inc
rorb
mov
mov
scas
test
inc
sub
and
add
dec
pop
gs
test
xor
or
je
lods
or
xlat
sbbl
cmp
lods
adc
aam
mov
sub
add
sub
out
cmpsl
paddusb
sbb
mov
mov
popf
shll
jle
ss
jecxz
jmp
or
fidivl
mov
in
or
popa
pop
enter
fidivrl
mov
mov
sub
sbb
divb
adc
test
js
pushl
mov
aad
and
sbb
cmp
shl
sub
mov
mov
mov
out
sbb
jnp
cmp
popa
sbb
jge
jne
xchg
cmp
js
dec
mov
jp
sbb
jb
div
xchg
inc
push
lret
or
lods
and
pusha
imul
sbb
arpl
dec
xchg
adc
add
fisttpl
cmp
inc
inc
cmp
sahf
xor
shll
cmp
andps
jg
sbb
aas
xor
pop
outsl
imul
out
call
fwait
imull
test
in
fs
dec
into
jb
mov
xor
sub
movsl
and
arpl
pushf
out
mov
push
stos
aaa
stos
and
xchg
subl
xchg
int3
add
pop
push
mov
mov
dec
sbb
jne
inc
pop
mov
jmp
bound
stos
int3
sub
mov
mov
rorl
jbe
xchg
push
leave
cmp
mov
add
popa
cmp
jnp
idiv
lock
shll
sub
xchg
jl
jo
cwtl
push
push
mov
jge
pop
inc
sarb
mov
negl
js
lret
pusha
fdivrs
push
xchg
cmp
cmp
sbb
xchg
shrb
dec
cli
fwait
push
ja
pushf
repnz
sbbb
stos
das
ja
adc
push
inc
mov
dec
addr16
mov
aad
push
jge
mov
cmp
icebp
jecxz
pop
mov
into
ret
popf
stos
movsl
jle
movsb
push
mov
sub
mov
xchg
in
cmp
sub
cs
sbbb
xchg
jno
cs
add
xor
xchg
mov
fsubr
out
aad
popl
mov
dec
movsl
fxam
push
fptan
test
stos
jns
or
xor
mov
stos
jbe
orb
lret
ret
iret
bound
jnp
and
dec
aad
pop
push
mov
add
in
sbb
add
pop
mov
sub
cmp
jl
std
or
mov
xor
outsl
xor
inc
or
jo
jg
call
adc
push
jle
mov
pop
test
adc
les
sbb
jp
popf
and
fcompl
sti
jne
sbb
jo
cmp
sbb
outsl
repnz
fcomi
mov
push
adc
std
mov
cmp
sub
mov
aas
pop
dec
mov
sahf
jne
aaa
clc
mov
lods
jge
and
mov
xchg
pop
add
xchg
rcll
adc
in
popa
xlat
imul
mov
lods
add
and
cltd
data16
xchg
inc
stos
cmovle
add
jno
aam
inc
sbb
dec
pusha
xor
or
push
movsb
lods
fisubrs
arpl
std
push
cli
fwait
push
iret
ss
fwait
inc
jo
mov
and
cmpb
fildll
bound
fisttpll
jecxz
xchg
inc
dec
arpl
xor
rcl
lods
add
xchg
rcr
cmpsl
mov
xor
jge
mov
hlt
dec
nop
cmp
jmp
add
mov
push
repnz
jmp
mov
lahf
mov
sub
adc
push
jnp
mov
and
mov
xchg
xchg
mov
je
neg
stos
fwait
push
sbbl
vmovapd
adc
push
and
daa
movsl
leave
inc
and
sbb
dec
nop
fidivrs
add
xor
lds
shl
inc
scas
lahf
lds
lods
and
lret
cmp
insb
fdivl
es
mov
fnstcw
imul
lods
xor
aaa
inc
outsb
jae
jl
xor
adc
push
sbb
movsl
and
divl
mov
inc
sbb
pop
xchg
jl
stos
jmp
and
repnz
test
iret
mov
and
orb
or
inc
adc
xor
fidivrs
jmp
fldl
fiaddl
es
loopne
les
enter
add
int
aad
test
pop
push
shlb
icebp
daa
mov
lods
and
mov
mov
jle
lahf
xlat
rorb
xchg
jbe
pusha
mov
pop
inc
mov
xor
cltd
mov
inc
push
fbld
lds
lcall
inc
pop
mov
int3
je
or
push
lods
iret
fnstsw
lods
pop
mov
sar
loopne
call
mov
adc
xchg
popa
into
outsl
xor
pop
out
leave
push
sti
fistps
xchg
xor
loop
lcall
dec
pushf
iret
std
mov
rcll
xor
sub
pop
popf
dec
and
jnp
mov
mov
je
lret
xor
or
dec
fs
xchg
sbb
inc
or
in
adc
jno
mov
scas
and
stc
leave
adc
lds
sub
xchg
cmc
inc
fwait
lcall
jns
add
pop
loope
lods
jmp
notl
cmp
cli
insb
inc
push
jns
sahf
int3
xchg
adc
scas
incl
js
aam
data16
aas
call
movsb
mov
jne
xor
fcoml
push
adc
in
jno
arpl
sahf
pop
mov
mov
sbb
ss
or
add
cld
repnz
popa
push
pop
jge
xchg
fdivr
insb
subl
and
ds
dec
push
insb
stc
sahf
xor
bound
dec
jmp
es
jmp
je
fisttpll
xorl
inc
add
addb
inc
into
hlt
int3
lret
cmp
sub
mov
pusha
dec
sahf
mov
push
jo
lcall
lret
add
jnp
pop
lret
and
int3
xchg
sbb
mov
nop
lods
inc
adc
lret
or
add
nop
dec
xchg
in
cmp
mov
xchg
add
repnz
jle
or
sub
mov
bound
js
loope
dec
data16
test
and
adc
add
divl
adc
jae
call
lods
addr16
and
inc
add
jne
and
aas
lock
lcall
fnsave
outsb
xchg
xor
push
lret
push
aad
and
or
cmp
adc
loopne
aad
lds
outsl
sbb
push
cltd
push
jne
push
or
lods
subl
sub
subb
xchg
movsl
jmp
push
add
js
shlb
cli
cltd
stos
test
adc
cwtl
loope
insb
and
jg
pop
neg
or
inc
inc
cld
jl
adc
dec
xchg
add
daa
pop
cmp
fwait
mov
enter
stos
dec
hlt
jae
ret
mov
mov
mov
and
xchg
pop
dec
data16
imul
push
cltd
sub
cmovb
dec
popf
jb
out
xchg
in
mov
sarl
dec
mov
cli
dec
nop
push
cmp
push
popf
daa
stc
mov
ljmp
cmp
mov
ljmp
js
lcall
not
push
rorl
jge
stc
gs
ljmp
jnp
flds
out
lods
imul
cmpb
ret
aam
div
pusha
fiaddl
ja
dec
enter
divb
or
pandn
movsl
inc
mov
outsb
mov
mov
popf
pop
fbld
imulb
lcall
pop
cmpsl
add
mov
leave
xchg
mov
icebp
outsl
addl
popa
fldenv
shlb
xlat
stos
adc
inc
andb
lds
in
sbb
push
ret
insb
clc
imul
xchg
int3
xchg
mov
fnstenv
xor
add
repnz
jmp
xlat
loopne
jae
cmp
dec
ret
pop
add
jb
dec
mov
addr16
and
inc
push
mov
xchg
hlt
xchg
popf
jns
inc
adc
movsb
out
inc
and
fstpl
and
ret
mov
inc
fistps
jb
push
call
repnz
add
sti
pop
outsb
inc
fmul
cli
rcll
cmpsl
test
ss
dec
std
lret
fisubs
aam
adc
jge
cmc
dec
aam
mov
dec
xchg
inc
cltd
mov
adc
ss
roll
xor
xor
or
xlat
jne,pn
pushf
sbb
loop
sbb
js
inc
loope
or
pop
aaa
aam
pop
test
out
xor
jnp
in
seto
mov
pop
shl
int
xchg
mov
add
mov
mov
call
stos
add
inc
into
push
jmp
cmp
mov
and
jle
xchg
das
jnp
mov
les
mov
rcll
mov
insl
mov
add
xchg
fstl
iret
test
sbb
sahf
pop
mov
push
adc
das
jne
out
push
std
pminub
pusha
adc
cmp
inc
or
cmp
int3
mov
out
test
jns
and
scas
icebp
push
jne
outsl
dec
xacquire
push
lcall
scas
inc
gs
pop
hlt
mov
gs
mov
xor
fildl
cs
jl
loope
pop
inc
aad
sbb
cli
adc
adc
mov
xor
mov
fcmovnb
addr16
cli
int
push
xor
fdivrp
mov
jmp
adc
andb
std
add
xchg
inc
jg
xlat
lea
adc
in
in
mov
sbb
push
cltd
cmp
xor
inc
xchg
bsr
subb
sub
test
arpl
xor
dec
in
data16
outsl
jle
jl
lahf
dec
ss
out
push
lahf
lret
inc
mov
push
arpl
mov
inc
mov
js
int3
xor
sahf
aam
mov
inc
gs
sarb
jge
xchg
fidivrl
inc
lods
loop
cmp
sub
loopne
je
cmpsl
test
hlt
fs
inc
lods
aad
in
xchg
les
push
jle
mov
add
sti
or
stos
mov
dec
test
inc
fdivl
adcb
xchg
jmp
popa
jge
pushl
cs
lea
xor
or
lods
adc
fnstsw
mov
push
arpl
dec
xchg
xchg
orb
popl
popl
leave
clc
enter
cmc
push
repnz
push
mul
int3
dec
subl
lods
inc
pop
scas
dec
stos
xor
add
xchg
ss
je
cs
mov
pop
xor
push
lea
cld
int3
mov
xchg
mov
dec
xchg
mov
jo
in
pop
nop
cmpsb
xchg
addb
js
lret
outsb
shl
pop
psubd
jmp
lret
scas
pop
lods
dec
jmp
sbbl
je
ljmp
lret
push
fs
imul
inc
adc
xchg
dec
rcrb
inc
jb
lock
cltd
enter
pushf
loop
out
aad
inc
adc
inc
cmpsb
xor
add
push
jae
cmc
jmp
fprem
lock
push
pop
bound
loope
push
xchg
cmpsb
sub
mov
xor
sti
xchg
cmp
icebp
push
mov
push
mov
std
jne
testl
lea
dec
mov
xchg
mov
leave
sbb
and
aam
bound
add
jp
xchg
mov
push
adc
sub
test
add
xchg
testl
out
sbb
pop
das
xchg
aas
addr16
addr16
fildll
in
push
sub
aam
xchg
rcl
sub
pop
inc
inc
jmp
in
repnz
jle
add
int
adc
sbb
call
and
aad
out
jecxz
add
pop
loop
inc
adc
pop
mov
jmp
pop
push
sbb
push
adc
jecxz
hlt
jp
adc
inc
mov
inc
cmp
pop
mov
lahf
pusha
push
cmp
cmp
gs
mov
xor
gs
push
cmp
jmp
xchg
cwtl
jmp
inc
adc
sub
into
fcmovnbe
xor
pop
inc
mov
icebp
fildl
aam
mov
shlb
jbe
add
loope
pop
mov
mov
pushf
mov
inc
movsb
lret
cmc
push
xchg
or
in
dec
repz
rcll
ret
imul
jecxz
dec
add
adc
dec
lds
or
ret
fistps
xchg
xchg
inc
pop
mov
int3
xchg
imul
shrl
inc
clc
sub
xor
insb
data16
sahf
imul
daa
cmovp
les
into
xchg
ja
mov
pop
call
gs
sbb
and
sub
xor
imul
push
pop
repz
cmpl
mov
cltd
hlt
aam
call
test
jle
pop
cmp
pop
test
mov
cmp
push
push
int3
cmp
aaa
push
inc
lcall
movsl
inc
cs
add
push
push
sub
mov
sbb
lock
mov
aaa
adc
adc
sbb
adc
lods
push
mov
fs
inc
ss
aad
ds
xchg
xchg
push
mov
aas
int3
add
out
movsb
inc
and
lret
xchg
jne
adc
add
pop
jo
getsec
daa
or
test
enter
xchg
movups
inc
loop
and
sbb
xor
mov
out
int3
js
scas
and
scas
jecxz
outsb
jne
notb
lcall
cmp
gs
mov
hlt
adcl
bound
insb
cmp
dec
test
jae
adcb
jmp
js
inc
pop
pushf
or
add
stos
leave
call
push
les
aam
rorl
mov
or
out
jp
xor
stos
loop
push
add
ret
pop
std
push
outsl
int
pop
and
or
push
aad
mov
jge
dec
je
sar
lock
sbb
push
inc
pop
bnd
mov
mov
stos
in
cmp
loop
or
mov
xlat
mov
into
mov
inc
push
aas
adc
out
jb
sarb
adc
mov
or
and
or
sub
xchg
aaa
pop
add
mov
sahf
cltd
mov
idivl
jge
adc
pop
mov
outsb
adc
es
nop
xor
icebp
popf
outsl
lret
fimuls
mov
mov
mov
daa
mov
imul
mov
sub
dec
jbe
stos
cmp
jle
push
enter
or
jo
and
xchg
in
fdivp
jge
dec
pop
lcall
dec
jle
jp
xor
out
arpl
mov
push
addr16
lods
loope
gs
or
sbb
das
enter
aam
je
or
and
xor
sub
ret
adc
hlt
stc
shlb
xor
cld
les
jl
test
ss
aas
dec
ret
mov
in
outsb
sbb
cmp
es
or
sub
adc
sub
or
jge
cwtl
push
int3
xchg
repz
sub
push
mov
jl
xlat
stos
sbb
cwtl
cmp
mov
and
xor
push
fcom
add
mov
cmp
popa
mov
mov
es
sub
arpl
ja
stos
or
dec
mov
xchg
or
sub
xchg
jne
add
gs
popa
je
in
lock
dec
jecxz
je
xlat
pusha
adc
loopne
mov
sbb
ficoms
sbbl
int
cmc
adc
repnz
test
pushf
outsb
in
adc
es
sub
inc
loopne
repnz
ja
xchg
rcll
mov
pop
mov
cmp
out
dec
scas
leave
std
mov
xor
jno
rcrb
add
sbb
dec
pop
loopnew
xlat
mov
pushf
fs
pop
loop
sbb
jbe
sbb
rolb
stos
out
int
mov
in
mov
jp
mov
and
popa
xchg
jae
sahf
shrl
lcall
sti
imul
ss
aaa
pop
mov
pop
adc
xor
fadd
jbe
insl
pop
jns
subl
test
xchg
cmpsb
addr16
test
inc
push
mov
dec
push
and
sbb
cmpsl
ret
ja
sar
setno
js
mov
mov
dec
push
mov
sbbb
sub
icebp
cltd
ja
notb
push
test
out
and
sub
pushf
call
in
es
into
jle
inc
jle
sbb
sahf
aaa
add
cmpb
adc
pop
or
pop
sub
xchg
lock
jg
xlat
push
jbe
es
fcoml
or
dec
mov
stos
scas
fldt
hlt
adc
daa
sti
fstl
cwtl
sahf
leave
inc
rcl
pop
fmul
rolb
aas
movsb
movsl
aaa
fwait
arpl
lea
pop
je
or
jnp
jns
insl
mov
scas
inc
jmp
outsl
jl
sarl
sahf
pusha
js
js
or
test
cmp
mov
mov
inc
mov
mov
out
daa
scas
filds
adc
imul
add
movsb
mov
repz
call
mov
cwtl
jmp
out
aas
aas
push
test
dec
push
inc
aaa
aas
scas
es
push
cmpsl
or
xor
dec
outsl
xlat
sbb
lods
cmpsl
pop
jnp
filds
jbe
xchg
mov
pop
lahf
vmread
hlt
adc
icebp
mov
rol
sti
push
cmp
subl
or
scas
fs
mov
test
mov
cs
push
stos
jo
cmp
daa
imul
popa
xor
scas
ljmp
jnp
inc
pop
adc
sub
sub
push
jecxz
pop
mov
or
pop
cmpsb
test
jae
pop
int
loope
mov
pushf
out
nop
imul
mov
inc
leave
push
push
mov
or
dec
push
ds
push
inc
in
dec
pop
pop
jne
mov
mov
mov
adcl
xor
jno
inc
stc
fildll
add
aam
xchg
addr16
loope
scas
out
fdivrs
fisttpll
xchg
xchg
push
push
adc
mov
sbb
call
mov
dec
jns
cmp
or
inc
mov
mov
sub
nop
jle
mov
push
xlat
shlb
mov
push
mov
push
adc
jne
ficoml
add
fmull
push
idiv
shll
adc
data16
adc
mov
push
pop
pop
loop
out
ja
or
icebp
jno
jle
add
mov
pop
xor
test
insb
out
sub
xor
test
pop
mov
add
lret
popf
jg
subb
push
mov
iret
or
out
cmp
pushf
mov
and
jp,pt
mov
dec
std
pop
mov
je
int
in
ss
lret
or
out
xchg
push
movsl
adc
and
jb
imull
out
sub
pop
loopne
les
pop
testl
adc
dec
out
push
hlt
addr16
rcrb
popa
cmpl
mov
dec
xor
inc
xchg
fnstenv
sbb
mov
rclb
dec
adc
and
test
inc
lret
lods
mov
loopne
dec
xchg
push
in
jnp
aaa
fs
push
jae
idivb
xorb
jne
jae
popa
push
arpl
mov
mov
pop
out
xor
push
mov
out
fldenv
cwtl
mov
stos
xor
arpl
stos
aam
insl
and
lock
mov
aam
loop
lcall
jne
outsl
into
pop
and
sub
push
xchg
je
sub
or
test
out
jae
stc
xchg
movups
pop
lea
xor
xchg
lock
mov
push
stos
out
mov
dec
pushf
leave
or
insb
cmp
out
dec
int
mov
inc
stos
xor
les
cmpsb
mov
lret
add
dec
mov
and
pop
test
sub
loopne
gs
test
insb
repz
add
sub
lea
jge
pop
cmp
jb
cmp
cmp
cmp
fmul
mov
and
and
mov
int3
and
mov
add
pushf
sub
addb
pop
or
push
sbb
cli
or
adc
sub
cmp
repnz
test
and
aas
lock
popf
stos
xchg
and
add
aaa
mov
push
hlt
jo
test
or
ret
add
lea
iret
push
xchg
leave
stos
inc
and
pop
iret
shll
pop
jno
pusha
aaa
cmc
and
outsl
mov
sbb
fidivrl
add
dec
inc
mov
pop
mov
add
xchg
and
lods
or
pop
cmp
movsl
add
ss
rcl
jno
mov
pop
xchg
int
fcmovnb
test
clc
inc
jl
leave
jl
lods
pusha
js
hlt
push
into
cmp
dec
cmpsb
enter
pop
and
insb
or
cmc
test
outsl
push
inc
je
movb
test
cltd
xchg
or
push
cmp
add
push
dec
and
push
inc
outsl
mov
in
pop
jp
xchg
loop
lret
lods
inc
push
jl
test
ljmp
movsl
fidivs
push
mov
cmc
adc
jmp
push
xlat
and
push
xorl
mov
jns
sub
icebp
bound
xchg
or
out
and
push
mov
jle
push
inc
shll
xor
push
dec
fcomi
mov
testl
lret
push
andl
pushf
lock
cmp
pop
sbb
dec
dec
filds
pop
dec
je
sbb
inc
fldl
xchg
mull
sbb
xlat
jge
cmpsb
test
arpl
inc
mov
or
add
pop
in
jae
lret
dec
xchg
mov
mov
loopne
int3
ret
push
cmpsb
into
lcall
mov
mov
cld
inc
mov
test
enter
test
hlt
shl
lret
pop
pop
inc
push
xor
cltd
cltd
adc
pusha
mov
xchg
push
pop
xlat
sbb
leave
adc
xchg
negb
xchg
mov
in
stos
jecxz
cltd
mov
push
and
aaa
push
push
scas
aas
fisttps
or
mov
notl
xor
cmp
dec
xchg
movsl
je
fists
fwait
inc
fcom
jae
lcall
lret
pop
mov
stos
cltd
or
std
and
push
mov
inc
stc
repz
test
in
arpl
out
movsl
push
decb
movsl
int3
xchg
mov
mov
xchg
stos
enter
sub
mov
stos
sub
cli
mov
arpl
inc
ljmp
shl
cltd
jo
xor
imul
outsb
xorl
lods
mov
movsl
push
mov
mov
test
lods
cmc
out
mov
inc
xor
sub
jmp
lods
adc
pusha
push
sahf
jo
push
movsl
cmp
fwait
push
pop
mov
adc
ret
test
dec
pop
dec
jle
inc
das
roll
xor
cmp
ret
adc
add
aam
xchg
imul
pusha
mov
adc
mov
inc
push
lcall
cmp
mov
jg
outsb
dec
mov
push
test
push
out
xchg
sbb
jg
pop
rcrb
mov
loopne
push
jecxz
into
pop
call
and
fadds
mov
testl
cmp
cs
mov
out
sbb
jecxz
push
push
clc
jl
repz
pushf
outsl
outsb
inc
es
pop
cmp
and
sbbb
or
cmp
cli
jmp
ja
jmp
and
xchg
incb
xchg
negl
sub
rcll
mov
dec
cmp
sub
adc
cmp
jle
jbe
push
add
cmpb
in
movsl
stos
rcrl
fadds
jns
dec
jno
or
ret
sub
jmp
lods
enter
pop
mov
mov
jecxz
jmp
mov
adc
or
jg
mov
mov
mov
rorb
in
cmp
mov
xor
je
in
mov
pop
cmp
xlat
repnz
cmp
test
divb
mov
jge
and
lcallw
xchg
lret
xchg
sbb
pop
in
add
mov
stos
push
inc
or
push
call
push
sub
cmp
out
fs
repnz
or
sbb
xor
ret
test
cmp
sub
in
jge,pn
notb
andl
sbb
maskmovq
idivl
cmpsl
ret
repz
mov
lods
movsb
cmp
push
pop
dec
loope
stc
stos
popa
cmp
dec
xlat
scas
mov
and
cs
and
sbb
lock
jns
xchg
jae
mov
add
mov
fsubrs
sbb
pushf
adc
pop
jae
je
and
pop
pop
out
lahf
pop
push
pop
loopne
pop
cltd
fisttpll
xor
cwtl
push
push
lea
das
xor
in
bound
cmp
cmc
stc
or
sbb
fcmovu
repz
lahf
xchg
pop
scas
inc
lds
scas
mov
mov
fisttps
aam
lret
pop
stc
jb
cmp
mov
hlt
popf
inc
adcl
fstpl
shrl
mov
cli
rcrb
mov
jg
pop
sarl
jns
sbb
push
sub
mov
ljmp
mov
pushf
pusha
xor
adc
dec
sub
cs
or
in
lcall
inc
jns
cmc
push
sbbl
dec
add
adc
lret
push
xchg
movsb
loope,pt
adc
xchg
lret
inc
jg
stos
mov
ljmp
out
ds
sub
push
xlat
jp
mov
jnp
mov
scas
cld
aas
xor
push
sahf
jo
outsl
jecxz
mov
fcoml
fwait
cs
imul
fstl
lcall
lret
out
adc
shlb
pop
pushf
loopne
ret
outsl
sbbl
lock
into
subb
outsb
add
ss
dec
in
cld
pop
arpl
adc
testl
enter
mov
int
mov
dec
inc
addr16
enter
leave
pop
mov
test
cmp
add
dec
adc
cld
dec
sbb
adc
sub
in
jp
shl
int
dec
clc
test
mov
mov
loopne
ljmp
add
aas
movsb
leave
pop
xchg
jnp
jo
inc
testb
test
cmpsb
test
lcall
adc
adc
or
scas
jmp
pop
aad
cmp
outsb
sub
out
cwtl
test
shr
mov
inc
shr
fwait
jmp
popa
sbb
pop
sbb
sahf
mov
xchg
faddl
or
pop
int
xchg
push
mov
je
sub
into
cmp
mov
jbe
shl
mov
divb
dec
xchg
lods
dec
add
fsubrl
mov
jge
and
mov
lock
inc
dec
or
or
pop
clc
cmp
pushl
pusha
push
sub
imul
roll
inc
std
push
ret
push
sahf
xorb
comiss
cmp
pop
movsb
xchg
stos
mov
and
das
int
rclb
cbtw
popf
inc
adc
pop
mov
adc
movsl
rcll
lahf
movsl
sub
mov
jbe
shr
lcall
mov
mov
jle
ss
mov
mov
jb
xchg
xchg
cmp
jmp
xchg
and
imul
sbb
aaa
dec
enter
mov
inc
mov
push
adc
xchg
aam
push
dec
arpl
push
mov
mov
sar
add
call
add
inc
sti
outsl
in
dec
or
cmpsb
jnp
nop
shlb
int3
outsl
mov
cs
mov
lea
daa
xchg
jl
movsb
mov
xchg
pusha
inc
test
push
sub
or
xor
jae
je
mov
xor
xchg
mov
push
testb
repz
dec
mov
or
xor
jbe
xchg
dec
nop
xor
enter
out
cltd
lods
loop
out
push
push
add
in
into
xchg
xchg
outsl
jge
outsb
test
and
shlb
in
push
lcall
push
dec
mov
fucomi
sbb
cwtl
xor
movb
mov
imul
aam
aad
cld
push
xor
sbb
pushf
movsl
mov
xlat
pop
and
mov
sub
clc
add
cmp
xchg
in
jmp
jb
push
fimull
push
push
popl
sbbb
dec
inc
jo,pt
rclb
mov
adc
add
das
push
dec
xchg
pop
bound
jmp
mov
nop
imul
or
cwtl
push
fdecstp
fldt
idiv
out
pop
int
call
mov
inc
inc
inc
sbb
mov
mov
mov
push
xor
dec
cmp
mov
push
and
mov
into
out
js
sub
cmpsl
cli
leave
sbb
pop
add
pop
int
sub
inc
test
add
cmpb
fisubrl
fisubs
and
push
nop
mov
sub
jb
sahf
or
push
int
stc
mov
sahf
pop
test
mov
xor
adc
scas
scas
sub
ret
mov
sti
push
test
addr16
out
inc
leave
cmc
jmp
cli
sbbb
scas
pop
out
sub
fidivs
cmp
xchg
testl
mov
jmp
fisubs
mov
mov
cmp
mov
addr16
xchg
push
fstpl
dec
add
adc
inc
lahf
jg
xlat
pushf
aaa
into
aaa
mov
dec
and
mov
cmp
into
fnstcw
int3
scas
cmp
je
sub
add
adc
push
ljmp
cs
mov
push
in
mov
out
xor
adc
inc
sbb
dec
cmpsb
jg
test
and
xchg
dec
dec
cmp
cmpsl
mov
fisubrl
shrl
scas
outsb
inc
hlt
loopne
mov
fistps
int3
xchg
xor
movsb
rcrb
inc
push
dec
mov
xor
outsl
in
jo
xchg
sub
or
fnstenv
mov
ja
sti
jne
test
pop
mov
jmp
subb
aam
dec
shrb
mov
icebp
push
aad
or
xor
xor
test
add
aad
mov
add
cmpsl
pop
lcall
pop
jno
jl,pn
into
iret
fistpl
jp
cmpsb
data16
lahf
and
pop
or
pop
ljmp
bound
and
das
cmpsb
filds
lea
sbb
inc
mov
jns
jg
jo
inc
insl
sbb
imul
gs
addr16
into
cld
mov
fnstcw
int3
ljmp
mov
jbe
jns
stos
push
loop
inc
push
push
ja
mov
imul
test
jmp
in
xor
les
sti
in
subb
xchg
shlb
pop
pop
lahf
js
dec
fidivs
mov
lret
ljmp
sub
aad
enter
das
inc
jle
push
or
sbbl
mov
or
and
lds
mov
pop
repnz
mov
xchg
xchg
into
adcl
sahf
movsl
out
and
push
or
test
inc
aad
scas
cmp
enter
adc
mov
add
mov
out
sbb
dec
push
fdivrs
add
push
add
xor
scas
jge
mov
pop
pop
mov
jg
cmp
jo
and
push
cmp
pop
xor
pushf
mov
out
push
jmp
mov
jne
outsl
mov
adc
mov
dec
mov
lods
bound
pop
mov
out
sahf
addb
lret
mov
cld
cmp
or
push
loope
std
mov
push
cs
cmp
xor
shlb
adc
mov
clc
movsl
shll
sub
aaa
sbb
test
jb
dec
push
lret
sbb
ret
mov
jge
sbb
aas
inc
push
scas
cmc
cld
cwtl
psubb
dec
push
js
push
mov
xor
fsub
xor
inc
pop
pop
cmc
movsl
ss
mov
ret
mov
mul
inc
das
scas
jno
mov
sub
ja
mov
vpandn
xlat
pop
mov
add
push
daa
mov
fistl
sub
lds
dec
pop
inc
and
dec
dec
popf
bound
int3
fistpll
push
pop
aad
xchg
loop
loop
shrl
jb
jne
adc
test
sub
jo
sbb
push
scas
ret
push
xacquire
xchg
lea
aas
push
jmp
xchg
icebp
dec
popa
ss
pop
shll
jg
adc
pop
pop
rclb
pop
pop
xchg
pusha
out
mov
and
xor
insl
mov
pop
mov
dec
cmp
jge
cmpsl
addr16
outsl
decl
mov
subb
jp
dec
lahf
pop
cwtl
and
pop
sti
or
adc
pop
pop
outsl
sbb
sub
mov
sbb
adc
ret
in
insl
data16
and
pop
aaa
lcall
sub
rcrl
add
faddp
outsl
vpshuflw
popa
sbb
in
fxch
les
data16
fcmovu
rorb
stos
addr16
int3
popf
mov
enter
popf
push
dec
jmp
push
rolb
addl
push
outsl
aaa
dec
jl
dec
cmp
mov
cmpsb
cmp
ds
xchg
add
lret
cmpsl
mov
adc
pop
ret
cmp
ds
ficoml
fildll
cmp
scas
jg
je
mov
repz
pop
cmp
add
push
xchg
push
sub
aaa
fdivr
cmp
pop
and
popa
push
fmul
setb
ror
daa
jae
xchg
pop
push
mov
lods
jp
in
sbb
cli
jbe
xor
fdivr
rcr
xor
pop
sub
xchg
push
pop
out
imul
dec
lret
mov
repnz
inc
insl
jnp
sbb
aad
pop
sbb
pop
xor
pop
popa
rorb
add
hlt
sbb
mov
push
ficoms
movsl
and
mov
lret
mov
divl
inc
xchg
push
jno
scas
mov
adc
adc
xor
das
mov
into
dec
shll
push
push
xor
cli
jnp
or
lods
pop
mov
cmp
cld
outsl
xor
xchg
int3
clc
mov
dec
push
movsb
mov
mov
xor
pusha
ja
pop
daa
loop
mov
jns,pt
xor
loopne
inc
push
mov
in
push
out
in
repnz
and
into
xchg
pop
sarl
inc
idivl
inc
lods
lcall
cs
pop
in
rol
jmp
outsb
gs
and
mov
int3
dec
lods
int3
ficomps
daa
cli
mov
push
mov
dec
push
pop
mov
repz
or
or
or
shll
dec
and
xchg
pop
fidivl
and
jmp
test
mov
push
out
sbb
int
jb
pop
insl
scas
and
mov
sbb
aas
into
lds
jl
and
les
jge
xchg
adc
mov
sbb
or
imul
enter
jge
movsl
xor
ljmp
jno
sbb
sbb
push
sub
xor
pop
scas
andb
pop
mov
mov
fldt
mov
add
cmpsb
cmc
fildl
mov
xor
mov
mov
repz
mov
je
mov
dec
push
cmp
sub
out
lahf
xor
cmc
push
lcall
fnsave
xlat
cmc
pushf
cmpsl
loope
shlb
jno
cmp
call
outsb
xchg
out
xor
jl
enter
jbe
pop
addr16
in
jp
test
xor
xor
mov
or
and
cmp
lods
sbb
rcr
adc
scas
jb
repnz
sbb
and
cmp
in
cld
push
push
push
or
cmp
aaa
add
mov
in
xchg
or
outsl
mov
ficompl
ja
adc
or
xchg
push
icebp
xchg
xchg
mov
mov
inc
adc
stos
es
sbb
dec
jae
or
aaa
xor
cli
insl
fidivrs
mov
fcoml
mov
xor
pop
or
push
mov
jne
pop
inc
in
pop
dec
sub
jae
js
shlb
add
xor
data16
fistpl
bound
movsl
jecxz
lret
daa
xor
push
push
xchg
or
sub
test
iret
int
insb
mov
adc
sub
in
pop
dec
je
dec
dec
and
jmp
inc
test
sar
mov
dec
push
pop
xchg
dec
push
stos
cmc
mov
in
pop
jo
sti
addr16
inc
pop
jecxz
sbbb
cmc
out
outsb
push
loop
mov
sbb
mov
push
cwtl
cmpsb
jne
pop
sub
xor
fldz
int
outsb
imul
pop
or
sbb
loopne
jmp
xor
inc
mov
insl
push
nop
ds
addr16
mov
sub
sub
jbe
pop
ret
cli
xor
push
lcall
jno
pop
xor
mov
inc
lret
sbb
push
jmp
mov
push
cmp
dec
inc
outsb
js
cmp
cmp
push
popf
mov
pushl
aad
loop
or
mov
mov
nop
dec
test
jg
out
cmpsl
rcll
pop
sub
xchg
jbe
js
inc
fistpll
sbb
mov
jns
lea
shlb
mov
mov
lds
or
adc
shll
or
roll
jno
vpmadcsswd
shl
jl
mov
lret
mov
das
mov
sbb
jg
out
daa
jmp
push
lret
pop
xor
aas
js
add
mov
adcl
mov
aaa
mov
test
icebp
mov
in
adc
and
les
mov
out
push
mov
stc
jne
in
rep
ja
or
mov
fcomps
jbe
in
sbbl
loopne
pop
pop
fcompl
xchg
mov
orb
adc
jg
sbb
and
imul
dec
inc
cmp
mov
sub
ja
int
mov
adc
call
stos
repz
mov
inc
shrl
cmpsb
outsl
dec
sub
sbb
pop
cmp
jns
scas
sbb
xchg
cmpl
jp
cmpl
add
popf
cmp
pop
adc
jne
imul
js
test
ret
mov
ret
lods
mov
cltd
push
sbb
inc
push
addr16
mov
push
pop
dec
aam
cmp
cmpsl
cmp
sbb
paddb
sub
sbb
jo
lret
jnp
jl
jno
rclb
popf
mov
add
add
jmp
xor
mov
push
sub
mov
fstps
jae
lret
jg
sbb
xlat
mov
dec
mov
out
sub
add
loop
inc
cld
in
bound
inc
call
popf
or
fisttps
cmp
test
mov
ljmp
scas
xor
test
xchg
or
push
xor
in
sahf
imulb
inc
test
jbe
xchg
xchg
sbb
test
xchg
imul
lahf
inc
fistps
fstp
lds
jp
int
xlat
jno
scas
movl
or
aam
hlt
push
pop
add
jmp
add
and
aam
imul
adc
jnp
pop
mov
xlat
ja
iret
mov
mov
jo
clc
dec
mov
adc
in
jecxz
roll
adc
movsl
repz
adc
mov
sbb
outsb
push
xlat
sub
leave
insb
lret
test
push
dec
push
dec
clc
in
jbe
jae
inc
ret
add
sarb
xor
pop
fidivrs
and
lods
adcb
bound
cmp
out
jmp
and
push
nop
shl
mov
dec
mov
mov
sub
cltd
mov
sbb
add
add
sub
xchg
xchg
icebp
lcall
xor
xchg
adc
dec
cmpsb
inc
or
pop
je
xchg
insb
rcl
test
icebp
jle
xchg
loop
icebp
fcomps
xchg
push
mov
fnstcw
jnp
mov
scas
dec
lods
cmp
and
lret
movsl
dec
mov
out
mov
xchg
inc
sub
shr
jnp
ljmp
enter
fsub
idivl
push
mov
hlt
int3
out
push
add
in
xchg
push
cmp
in
aas
inc
inc
add
mov
hlt
xorl
jl
popf
pop
cmp
xchg
call
sbbl
aas
sub
mov
in
bound
push
ljmp
or
outsl
sbbl
in
cwtl
test
popa
push
leave
ljmp
mov
data16
adc
addr16
push
jge
fsubs
int3
or
add
insl
xor
shl
xor
outsl
pop
pushf
sbb
and
add
fistl
xchg
bound
push
loope
sub
push
in
int
push
lds
loope
mov
int
add
pop
into
jnp
or
xchg
push
pop
xchg
je
sub
sub
cmp
jo
xor
pop
sbb
xor
in
cmp
outsb
out
lods
int3
pop
or
pushw
mov
bound
and
jbe
mov
ficomps
dec
bound
or
stc
les
movsl
cmp
outsl
rcrl
adc
inc
mov
cmp
movsl
cs
test
ja
dec
sbb
inc
shlb
dec
mov
pop
dec
pop
mov
xchg
xor
cmp
and
push
lea
add
sub
clc
jle
sub
pop
lods
sub
out
incl
mov
mov
das
inc
jno
pop
mov
or
inc
lret
sbb
xor
push
push
pop
in
mov
mov
xor
dec
ret
insb
test
stc
dec
mov
add
or
and
shr
sub
mov
mov
adc
popa
div
in
cld
mov
xor
lea
je
icebp
pop
bound
aad
inc
push
rcl
push
dec
mov
sub
or
dec
lods
rolb
rclb
pushf
xchg
mov
jns
pop
les
in
mov
lret
and
inc
dec
mov
mov
fidivrl
stos
xor
fs
jns
dec
inc
mov
out
int
inc
outsl
mov
fs
add
add
xor
sarb
inc
nop
in
sub
sbb
out
fidivrl
sub
sbb
loopne
xor
fisttpll
mov
mov
rorb
into
push
xchg
xchg
leave
jo
fisubrs
mov
stc
mov
mov
mov
pop
sbb
lock
mov
repz
add
sub
sbb
pop
jmp
vorps
not
push
mov
xchg
fisubs
pop
jmp
and
lea
or
ja
push
jnp
scas
out
or
in
push
sarb
es
call
add
fsub
clc
adc
jp
xor
or
test
xchg
adc
mov
test
cmc
je
dec
hlt
movsl
in
aas
arpl
mov
ss
jge
xor
pop
jmp
inc
outsl
xchg
and
dec
or
mov
mov
pop
mov
aaa
outsl
ficompl
negb
jne
cmp
je
shlb
xchg
lea
xchg
cmp
mov
pop
fcompl
roll
adc
js
mov
fimull
push
out
xchg
sub
fwait
and
mov
fwait
mov
stc
cld
push
sub
ret
fstp
call
insb
add
inc
hlt
pop
jge
lret
dec
shrl
sbb
mov
out
sbb
lea
mov
mov
cmp
lret
sbb
mov
sub
or
push
adc
jl
or
push
test
push
adc
mov
fxch
dec
rorb
les
imul
cmc
sbb
jmp
or
scas
xchg
adc
fwait
clc
or
cmc
jl
orb
xor
xor
xorl
ds
mov
or
push
adc
pop
aam
xchg
inc
xor
lds
jno
add
jns
test
stos
imul
jbe
sbb
movsl
add
inc
fidivs
mov
jb
fcomps
insl
pop
sub
xchg
sarl
push
push
loope
in
xchg
addr16
mov
push
enter
stos
int
cltd
xor
int
std
hlt
enter
sbb
push
stos
dec
mov
loope
adc
fmull
rcrb
xchg
xor
xor
sub
mov
pop
xor
les
imul
int
in
popf
es
xchg
xor
aaa
sub
mov
and
aas
gs
gs
mov
popa
js
add
lcall
or
xchg
sub
movsl
and
mov
adc
mov
popf
xor
fucomip
aaa
or
push
xor
sub
pushf
mov
jnp
hlt
lds
dec
ss
call
add
mov
ret
dec
adc
aam
sub
daa
sti
enter
js
jle
or
ljmp
lock
mov
inc
mov
pop
cld
cltd
mov
mov
test
jno
inc
rcll
adc
sbb
je
sub
cmpb
xchg
jecxz
icebp
dec
das
mov
in
rcrb
subb
roll
mov
mov
or
aam
in
mov
push
out
push
mov
mov
lea
ret
scas
popa
xor
clc
mov
bound
mov
sbb
xor
inc
pop
mov
pop
mov
cs
mov
jno
lock
ds
jae
mov
and
push
mov
add
scas
mov
or
xchg
arpl
cli
inc
subl
dec
or
cltd
stc
and
mov
mov
cmp
imul
popa
mov
jnp
nop
xchg
inc
sti
dec
xor
mov
ret
push
sti
test
insb
and
mov
xlat
xor
push
push
lds
lea
jg
jnp
push
pop
call
lock
cmp
inc
icebp
mov
sti
mov
pusha
int3
jo
pop
adc
idiv
mov
movsb
mov
push
dec
in
and
or
pop
nop
adc
js
pop
sbb
push
stos
push
loope
in
push
sub
cmp
jg
or
jbe
nop
scas
cmpsl
mov
rcrb
pop
or
subb
dec
loop
and
fwait
cltd
dec
inc
and
pop
outsb
shl
fisttps
xlat
lock
pushl
mov
fsubs
adc
push
mov
cltd
ret
mov
push
iret
jle
daa
sbb
mov
add
and
xchg
or
pop
jo
data16
jbe
mov
xchg
xor
sub
cli
shll
shl
mov
cmp
pop
pop
jo
mov
dec
xchg
bound
fadd
pop
sbb
mov
pop
nop
sti
es
je
and
loop
test
aad
inc
push
in
mov
add
out
mov
daa
jl
jl
cmp
mov
int3
iret
xchg
test
out
xor
sub
das
cld
inc
out
dec
xlat
cmp
cmp
adc
xchg
insl
ret
or
and
jle
and
or
leave
mov
stc
sub
sbb
pop
lods
mov
mov
jg
sbb
dec
dec
push
jl
fnsave
add
xor
dec
in
mov
in
jns
pushf
cs
jle
ffreep
xor
mov
dec
es
pop
inc
add
push
pop
mov
les
sub
xchg
test
pop
shll
xchg
movzwl
sbb
ret
ffreep
bound
cmp
inc
jne
sbb
mov
inc
jb
outsb
sbb
pusha
jnp
idivl
push
out
in
jbe
in
dec
fcomip
fldl
stos
xor
push
scas
shr
loop
out
lds
add
inc
inc
mov
push
dec
sti
sbb
mov
sub
sub
sarb
popf
scas
cmp
rorb
xor
push
cli
nop
mov
adc
push
jns
gs
xchg
icebp
dec
mov
push
leave
ljmp
into
pop
mov
iret
iret
mov
fcmovnu
gs
out
les
cmpsb
scas
jae
push
icebp
and
ja
std
dec
out
jmp
mov
pop
inc
dec
pushf
es
arpl
andl
jns
loopne
add
inc
je
and
aas
push
mov
cwtl
movsb
lea
add
sub
or
daa
inc
push
bound
mov
xchg
sti
pop
jg
xor
mov
or
pop
mov
dec
imul
xor
push
lock
dec
mov
mov
cmpsl
pmuludq
lods
mov
shr
or
scas
cmpsb
movsl
fs
enter
mov
lock
push
push
inc
filds
jp
lcall
lods
pop
adc
push
and
cmp
jnp
loopne
inc
sbb
push
inc
leave
and
cmp
mov
dec
mov
test
incb
iret
push
jno
out
lds
sub
mov
sub
lods
mov
ret
mov
fwait
sub
adc
loop
std
dec
add
jns,pt
sbb
add
insb
jl
test
popa
pop
and
lcall
sbb
cmp
cli
aad
sbb
negl
adc
jae
into
dec
push
shrb
adc
jbe
call
push
or
mov
outsb
add
lods
outsl
sbb
mov
das
punpckhbw
xor
mov
lea
addb
adc
repnz
es
pop
mov
mov
xlat
negl
adc
push
fnstcw
sbb
cmp
xor
repnz
insl
imul
iret
das
loope
inc
int
repz
imul
mov
push
jo
pop
loope
shlb
mov
int3
aam
sbb
in
push
je
xlat
dec
jns
cmpsl
fimuls
mov
lods
xor
pop
mov
mov
in
jnp
push
aam
dec
lret
cli
insb
dec
repnz
int
lret
insb
int
mov
fnstcw
lds
out
xchg
cmp
mov
dec
lods
pop
aaa
into
fmull
mov
dec
loope
push
fld
jae
jg
ret
andl
adcl
fmuls
adc
addr16
mov
repnz
je
lds
and
sbb
xor
ret
xor
in
movsl
adc
out
sbb
cwtl
outsb
aas
xchg
push
add
test
mov
adc
popa
into
in
push
mov
jne
dec
adc
stos
lock
cld
mov
fdivs
push
cwtl
jo
les
sbbl
mov
int
push
mov
mov
clc
das
test
pop
aam
or
sbb
jecxz
mov
repnz
push
dec
mov
xchg
mov
sbb
or
imul
repnz
cs
ret
push
btr
icebp
scas
mov
xor
outsl
imul
es
enter
lret
mov
add
cmc
loopne
stos
push
cltd
mov
sbb
push
sti
sub
aad
inc
lahf
or
iret
in
pushf
mov
or
inc
movsb
sbb
insl
incl
int
add
adc
loope
cli
call
popa
sub
add
mov
data16
sub
pop
lea
lcall
mov
adc
pop
imul
mov
sub
ja
rclb
mov
jle
adc
sti
jbe
pop
scas
adcl
mov
adc
mov
mov
dec
push
and
xchg
mov
cmpsb
mov
dec
scas
mov
add
dec
lods
into
sbb
and
and
mov
mov
stos
arpl
xor
imul
bound
jb
push
nop
lds
andl
mov
idivb
gs
push
int
pop
stos
sbb
adc
cld
inc
push
lods
push
sub
iret
jmp
fisubrl
sub
push
popa
inc
jecxz
or
popf
arpl
mov
push
inc
cmp
mov
lods
inc
test
shll
xor
outsb
insl
xchg
in
repnz
mov
jb
push
popf
imul
scas
rclb
in
into
inc
incb
adc
test
xchg
insb
insb
sbb
or
in
rolb
cmp
pop
pop
ret
ljmp
mov
push
push
repz
add
inc
xchg
outsb
aad
jbe
fisubs
and
mov
hlt
jne
mov
xchg
adc
call
jmp
movsb
jmp
mov
pop
mov
aas
leave
pusha
inc
push
jg
dec
xchg
add
repz
jne
dec
imull
enter
adc
xor
inc
mov
jo
popa
inc
out
push
mov
pop
lret
cmp
xchg
xchg
cld
pop
lds
sahf
stos
fmuls
jno
movsb
or
aad
adc
mov
data16
cmp
fisubrl
movsb
stc
lods
mov
dec
adc
cmp
mov
in
jnp
outsl
xchg
out
int3
jnp
je
inc
dec
xchg
arpl
enter
dec
inc
dec
cs
lahf
es
push
orl
cmp
mov
cvtps2pi
xchg
xor
push
cli
xchg
setge
clc
lea
icebp
fsubl
sub
inc
stos
out
sub
faddl
xchg
inc
sti
in
add
icebp
sbb
outsl
jb
push
xchg
xor
fldenv
popf
fadds
in
pop
loope
dec
cli
out
mov
lock
cmpsl
lret
sbb
adc
dec
push
loope
into
jp
in
push
jmp
cmpsb
xchg
xchg
fs
in
sbb
sub
add
dec
mov
inc
arpl
test
jnp
hlt
adc
mov
retw
cmp
lahf
dec
push
jg
dec
out
aaa
sbb
adc
hlt
ljmp
imul
mov
je
cs
cmp
mov
in
shll
jecxz
dec
adc
outsl
movsl
jmp
test
xor
lods
and
out
movsl
std
ds
rolb
jnp
inc
pop
addr16
pop
or
jbe
and
sub
mov
stc
and
inc
loop
xchg
jg
jb
insb
jmp
filds
pop
leave
cmpsb
pop
jp
repnz
mov
loop
inc
popf
pop
mov
xchg
jl
sub
pushf
shl
out
xchg
dec
pusha
mull
frstor
sub
xchg
mov
ret
xorb
mov
inc
sbb
xchg
fisttpl
jnp
mov
jg
cmpsl
jg
cmpb
shll
or
inc
js
test
outsl
push
cli
mov
sbb
sbb
push
sbb
jns
fbld
popa
xchg
test
test
sbb
add
or
inc
ss
mov
xchg
clc
mov
out
aad
dec
hlt
in
aad
mov
in
out
mov
jg
ret
push
pop
or
js
or
mov
xchg
dec
ja
jp
popa
jp
push
int3
sti
jl
adc
movb
loopne
ret
sub
mov
shl
lahf
sti
cs
ret
jmp
bound
mov
in
xor
fsubs
xor
aad
sbbl
shlb
jae
sbb
jp
add
mov
ret
les
cltd
xchg
and
fmulp
push
lret
push
fst
addl
xchg
mov
xor
scas
ds
outsl
add
xor
js
jne
aad
repnz
inc
mov
pop
mov
lahf
repz
loope
push
stos
fwait
clc
mov
daa
adc
mov
into
nopl
pop
loope
pop
inc
xchg
cmp
add
sub
js
jns
rcll
fcomip
repz
adc
mov
mov
mov
add
push
mov
stos
add
popf
cmpsl
jge
inc
inc
push
dec
mov
mov
lahf
ret
mov
lahf
aad
aad
jnp
outsb
int3
dec
push
out
cld
cmp
test
or
lds
push
rorb
push
lea
popf
scas
mov
mov
adcb
fwait
in
mov
inc
xor
jb
lcall
add
lds
inc
dec
test
dec
xchg
dec
lods
jae
jp
imull
jecxz
jbe
mov
aam
adc
loop
mov
shll
faddl
or
jae
data16
push
pop
sub
jb
push
jne
ds
mov
dec
lahf
pusha
adc
xchg
mov
outsb
sub
mov
pop
sub
jmp
pop
imul
lods
shlb
out
xor
pop
dec
mov
adc
mov
mov
pop
pop
sub
and
push
push
add
sbb
push
pop
xchg
sti
dec
dec
and
add
dec
test
inc
pop
inc
fistps
xor
mov
ds
nop
bnd
ret
cmp
jecxz
adc
ljmp
dec
cmp
sti
stc
jecxz
pusha
sbb
test
push
jmp
dec
stos
pop
mov
jnp
ret
insl
out
and
cmpsb
fs
add
mov
int
mov
xchg
mov
aas
fstl
insl
push
cmp
dec
mov
mov
push
jbe
jmp
sub
push
xchg
cld
das
jge
sahf
test
in
cmp
outsb
bound
lods
inc
outsb
adc
cmpsl
fwait
jg
pop
pushf
lock
ss
ljmp
lret
sbb
call
insl
jbe
cmp
mov
rolb
pop
test
pop
and
popf
sbb
mov
jl
sub
fsubrl
repnz
testb
aaa
cmpsb
add
in
push
fsubl
push
outsl
adc
sahf
fbstp
mov
inc
mov
push
cmpl
mov
dec
imul
xchg
cltd
lahf
ss
jge
cmp
adc
dec
pop
loope
imull
sub
ret
mov
stos
push
in
fcmovnbe
lods
or
and
lahf
nop
lcall
scas
je
mov
es
bound
loopne
push
jbe
pop
aam
and
mov
or
loope
mov
xor
pop
nop
fiadds
ja
inc
and
pop
cmpsl
jp
adc
inc
loop
and
sub
xor
adc
xchg
push
jb
cli
pop
xchg
pop
xor
inc
insb
pop
mov
mov
into
adc
pop
and
mov
sarl
shl
inc
dec
arpl
mov
scas
push
mov
xor
shrl
mov
dec
fnstcw
decl
aam
dec
shr
imul
pop
testb
push
push
mov
pop
test
in
inc
test
add
and
push
add
push
adc
add
popf
inc
out
mov
push
ffree
push
add
call
push
std
dec
mul
sub
mov
push
clc
pop
sbb
mov
sbb
mov
rcl
cli
push
lahf
addr16
imul
jecxz
xchg
pop
push
addb
ja
lret
jo
nop
or
test
cs
and
xor
in
inc
repnz
pop
jae
fadds
push
jge
jecxz
pop
aas
sbb
ret
out
sub
movsb
sti
xchg
mov
test
pop
aam
rclb
pop
popa
fistpll
shlb
mov
push
fisubrl
inc
inc
inc
adc
jp
jp
jl
jmp
pushf
push
xor
cld
or
xlat
data16
sub
pop
mov
dec
jmp
cli
mov
xor
mov
or
call
and
pop
pop
lret
push
rorb
or
das
gs
push
out
push
add
push
add
fstl
jge
pop
arpl
dec
mov
bound
scas
mov
lret
jnp
loop
inc
hlt
loop
cld
ds
dec
mov
mov
test
push
dec
into
add
xlat
dec
lret
adc
jge
push
dec
sub
adc
nop
push
or
xor
dec
mov
lods
jbe
out
ret
xchg
jle
inc
or
out
aam
sbb
mov
adc
push
and
push
pop
lea
xchg
mov
mov
mov
cmp
stc
push
mov
test
mov
sbb
fnstenv
xor
clc
cli
in
stc
pop
in
idivb
adc
inc
movsl
cmp
mov
and
lds
lds
outsl
sub
push
call
imul
outsl
scas
sbb
insb
sub
ljmp
jns
mov
dec
daa
lcall
loopne
inc
and
aaa
mov
fmull
out
or
leave
mov
mov
mov
push
loope
out
mov
xor
push
cmp
or
pop
in
lret
rorl
cmp
sbb
dec
push
jns
adc
cmp
ja
outsb
jno
ds
xchg
mov
jo
mov
mov
or
sbb
xchg
lahf
pop
fidivrl
popl
imul
stos
cmp
push
shl
std
stos
adc
jmp
and
in
clc
pushl
fwait
or
cwtl
and
aad
mov
fidivrl
pop
inc
loop
inc
mov
pusha
shrb
jecxz
mov
inc
sub
add
loop
je
lock
or
je
inc
in
push
int
inc
scas
cwtl
mov
dec
scas
adc
pusha
fld
stos
inc
lret
aaa
and
fistpll
pop
mov
loopne
aam
call
lret
or
adc
pop
nop
dec
xchg
cwtl
inc
cmpb
jb
jg
xchg
or
jbe
es
xorb
movsl
mov
jbe
jecxz
mov
sub
push
sub
mov
mov
adc
jb
insl
pop
jnp
cmp
pop
push
add
loope
ja
shll
fs
inc
out
data16
movsl
fbld
faddl
lcall
stos
insl
add
lea
cwtl
or
lret
cmp
addl
outsb
pusha
and
lahf
cli
iret
sbbb
pushf
dec
sub
ljmp
mov
rcrb
and
adcl
in
test
push
repz
mov
movsb
fmulp
iret
add
cltd
xchg
push
repz
or
out
mov
aaa
adc
mov
inc
push
bound
xchg
sbb
stos
inc
mov
mov
and
faddl
lcall
leave
sbbl
add
adc
xchg
inc
lock
pop
je
lds
clc
repz
mov
cmp
movsl
adcb
mov
sub
push
popa
dec
sti
in
xor
xchg
sub
mov
sbb
dec
xor
mov
lret
popf
test
adc
inc
mov
icebp
leave
es
lods
test
xor
sahf
adc
push
es
jbe
lock
frstor
pop
daa
mov
pop
insb
sbbl
add
mov
movsl
dec
dec
loop
jge,pt
aas
jmp
push
fists
les
out
add
sbb
nop
push
iret
sub
inc
xchg
inc
popa
jecxz
and
dec
lret
test
add
sahf
jp
pop
iret
push
xlat
repnz
pusha
cmp
in
push
mov
rorb
icebp
sbb
or
iret
in
add
mov
stos
xchg
outsl
arpl
push
fsubrp
pusha
arpl
push
loopne
outsb
jecxz
dec
mov
jle
lret
cmp
mov
mov
sbb
mov
push
sbb
inc
mov
jp
inc
popa
mov
adc
loope
jo
mov
lcall
jns
and
lahf
sub
add
shll
add
push
jnp
jb
jle
lahf
jno
adcl
data16
push
jg
repnz
in
fcomps
pop
das
xchg
mov
nop
fisttpl
jb
xchg
or
inc
jmp
loope
lahf
imul
mov
dec
leave
lock
lret
fisubs
fwait
or
add
das
loope
gs
mov
adc
out
or
push
cli
fmuls
mov
fildl
popf
fstps
mov
decl
add
xor
stos
or
mov
imul
imul
in
push
call
sbb
xor
add
dec
ret
pop
cmp
test
xor
pop
fistpll
mov
jnp
push
dec
rcrl
sub
pop
movsl
pop
bound
stos
pop
mov
and
test
push
dec
imul
rclb
mov
into
adc
cmp
jns
fdivl
inc
insb
mov
or
xor
jnp
pop
outsb
ret
mov
lcall
or
mov
sub
mov
fisubs
push
mov
cmpsb
add
xor
sub
mov
mov
xlat
add
dec
cmp
jae
jbe
ret
notb
les
sbb
fdivr
fisttpll
xor
sbb
jb
mov
shlb
shlb
add
sub
ds
imul
xlat
rcr
xchg
and
icebp
sbb
mov
or
sbb
aas
shll
inc
pusha
or
add
jg
data16
pop
ss
pushf
pop
mov
cmp
and
arpl
xchg
loope
push
fnstsw
inc
in
leave
pop
sub
inc
push
ss
das
addr16
inc
adc
dec
xor
push
fistps
js
and
mov
and
mov
mov
cmp
lods
inc
jle
movsb
mov
jmp
mulb
pop
mov
test
sbb
cmp
bound
cmp
pop
pop
xchg
xor
mov
xor
lret
push
lock
fildl
lods
inc
enter
pop
lods
push
mov
cltd
scas
int
or
cmp
adc
ljmp
lock
push
pop
mov
inc
pop
js
jae
mov
fildl
jl
adc
fsubs
pop
push
jmp
test
aaa
cld
push
or
cltd
adc
jp
outsb
lahf
jo
scas
push
int
sub
mov
ss
fwait
cmpsb
in
scas
imul
lahf
std
sti
stos
adc
pop
mov
sub
and
or
into
movsl
mov
xlat
mov
jo
push
xchg
push
cmp
and
cld
add
out
adc
jecxz
and
int
pop
adc
in
pop
pushf
and
mov
jns
test
popl
inc
imul
cmpsb
stc
mov
mov
scas
xchg
add
ret
and
enter
enter
pop
pop
js
les
pop
add
lret
rclb
sub
jp
popf
test
adc
sub
push
and
cwtl
or
mov
popa
dec
ljmp
dec
addb
dec
push
ret
shll
pop
xlat
or
jo
inc
jle
rolb
add
rolb
pop
mov
xchg
inc
lds
xchg
sub
pop
lods
loopne
pop
dec
dec
dec
mov
add
add
jbe
cmp
stos
pushf
push
dec
mov
push
lds
scas
mov
es
and
push
xor
adc
scas
sbb
and
xchg
sub
push
cmp
data16
add
xlat
sub
adc
loopne
stc
sbb
add
movl
aaa
sub
mov
push
push
popa
dec
lcall
pop
fisubrl
sbb
dec
add
cld
push
jecxz
dec
gs
incl
push
repz
jp
sarb
gs
js
scas
xchg
fimull
popa
mov
mov
jl
cmp
rcrb
loope
mov
xor
clc
jns,pn
cmp
sahf
leave
movsb
in
addr16
jne
lods
mov
inc
and
icebp
call
cmpsl
arpl
mov
mov
cli
inc
cmp
rorb
mov
xor
ljmp
addr16
orl
mov
add
fcompl
fstpt
enter
ret
sub
sub
or
mov
or
dec
cwtl
lret
mov
and
add
outsl
shl
inc
pusha
ja
xor
leave
repz
xchg
adc
xor
cltd
enter
loopew
stc
sbb
and
bound
fucomp
sbb
dec
andl
adc
lock
dec
int
mov
pop
fiadds
dec
mov
xor
int3
push
pop
mov
pop
jl
add
repz
inc
push
ja
mov
xchg
push
subb
out
jnp
sbb
xchg
xor
mov
add
dec
jae
inc
lds
ljmp
pop
inc
sarb
scas
and
stos
mov
xchg
inc
add
push
pushf
xor
push
int
gs
mov
pop
sbb
out
loop
pop
or
enter
test
rcrb
loop
ret
out
push
adc
mov
lods
jle
add
add
loop
jae
and
sarl
shlb
and
sbb
aam
sub
push
mov
jge
subb
rcl
data16
jl
jne
lds
push
cmp
aam
and
int3
out
and
in
stc
push
or
ret
add
jno
jae
xchg
dec
jbe
cmp
hlt
adc
ss
inc
mov
lods
das
ret
xchg
adc
xor
imul
jle
pop
lods
fcmovb
or
ret
out
and
and
ficomps
add
pop
in
lret
push
lock
xchg
xchg
ret
leave
mov
pop
jecxz
lock
in
cld
push
ror
jl
jno
push
mov
xor
push
push
cmp
xchg
inc
pusha
loope
pop
mov
cmp
sub
xor
lea
int
test
out
add
je
lret
cmp
hlt
mov
jnp
sbb
sarb
shlb
lcall
fwait
scas
lods
jp,pn
into
xorl
jg
adc
adc
test
pop
sub
popa
sahf
or
ret
hlt
push
add
mov
and
xor
pop
ret
push
jae
xor
shr
push
and
push
faddp
dec
inc
cmp
push
dec
push
lods
dec
fisttpll
lret
fsqrt
mov
mov
mov
cwtl
and
xchg
jo
add
cmp
pop
fdiv
xor
pop
mov
ds
push
bound
aad
rolb
mov
xor
and
cltd
test
lods
and
js
mov
jae
or
rcrl
cmpsb
movsb
jb
sti
or
test
cmp
or
cld
loopne
nop
addb
sub
ljmp
mov
sarb
ds
xor
int
or
stos
in
pop
icebp
popl
fistl
push
pop
xor
outsl
lds
outsl
inc
inc
mov
fs
insl
push
inc
pop
cmp
repnz
dec
dec
push
pushf
xchg
mov
xchg
mov
addr16
mov
sbb
ficoml
xor
jbe
sbb
scas
iret
add
inc
jmp
movsl
addb
nop
daa
scas
fisubrl
dec
out
adcl
sub
js
outsl
sbb
ljmp
xor
inc
rorl
sbbb
cli
in
xor
push
je
mov
adc
cmp
gs
adc
imul
ja
std
push
pop
insb
add
scas
jp
or
hlt
es
fadd
std
lcall
fwait
cmc
and
mov
lret
cli
add
data16
and
mov
xchg
or
xchg
and
lods
or
icebp
and
mov
lret
icebp
sbb
lods
lds
aaa
and
inc
xor
sub
call
in
push
loopne
movsb
sub
out
das
cmp
lods
mov
mov
addr16
xor
lods
mov
jp
xchg
jne
dec
outsl
fisubs
jecxz
imul
xor
sub
mov
cli
xchg
push
mov
out
pusha
loop
mov
call
and
push
gs
fimull
or
divb
sbb
mov
outsl
faddp
jmp
imul
ficoms
arpl
xor
pop
int3
idivl
sub
dec
movsb
jno
cmp
cmpsb
stos
push
mov
mov
cmp
fildll
sub
sub
xchg
rolb
push
jne
mov
add
test
mov
in
outsl
mov
iret
cwtl
or
adc
mov
cwtl
cld
mov
fcmovnbe
pushf
imul
jl
add
and
fwait
lret
or
mov
cltd
addr16
hlt
jmp
fsts
push
and
fsubl
inc
push
cwtl
add
shr
or
hlt
movsb
or
mov
jo
mov
or
jbe
add
rclb
std
jge
sbbb
push
popf
xchg
popf
mov
shrl
fwait
jmp
pusha
jge
ficoms
dec
add
adc
cs
xchg
dec
es
mov
cmp
cli
or
mov
sbb
sub
dec
data16
repz
jae,pt
pop
jmp
sbbb
ret
jecxz
fdivrs
jp
outsb
stc
lock
xchg
mov
scas
xor
mov
insb
int
lahf
sub
pop
add
test
ja
jmp
rcl
mov
call
jae
jno
add
xchg
loop
lods
sbbb
sub
and
inc
popa
inc
mov
aam
xor
leave
andl
stos
xchg
jo
mov
inc
mov
add
xchg
xor
xlat
cmp
aam
sbb
imul
dec
popa
mov
dec
loopne
jns
cltd
jle
arpl
xor
repnz
mov
inc
jb
rcr
push
push
push
mov
pop
adc
movsl
mov
xchg
prefetch
lea
aas
mov
fsts
xor
into
or
cs
inc
push
jl
ret
je
cld
xchg
fistps
push
add
pop
fcmovu
add
into
ds
mov
jp
sub
setae
mov
outsl
shll
jge
popa
sbbl
outsl
mov
jae
jno
sub
idivl
dec
cmp
jecxz
xor
js
sub
fs
enter
or
sub
popa
jnp
ljmp
inc
sbb
mov
mov
or
push
fdivrs
mov
sbb
push
xor
sub
and
mov
scas
cmpsb
sub
loop
cmp
sti
jl
repz
mov
add
call
fldenv
test
mov
mov
or
or
loop
jo
sub
inc
pusha
adc
movsb
aaa
cmp
and
les
add
cmpsb
and
xchg
mov
mov
push
inc
push
das
xchg
movb
cmp
pop
mov
mov
es
push
jno
inc
pushf
callw
push
imul
inc
cltd
f2xm1
inc
mov
sbb
cld
jg
rorl
pusha
jecxz
call
xchg
add
cmp
inc
cmp
push
adc
mov
mov
aaa
jae
dec
mov
std
mov
adc
out
add
jb
popf
lods
jnp
repz
leave
dec
jo
flds
inc
adcb
call
outsl
pop
jno
in
dec
into
fs
das
xchg
xor
lds
jnp
scas
es
dec
mov
cmp
mov
xor
iret
les
jno
mov
mov
jp
rclb
fimuls
rorl
adc
out
xor
mov
or
shll
arpl
pop
cs
xchg
test
sbb
movsb
xor
inc
jo
inc
jnp
add
dec
add
mov
lock
fstl
push
cmp
push
xor
sub
movsb
out
in
xchg
decb
shll
sbb
pop
xor
stc
mov
dec
adc
mov
clc
push
lds
fldenv
lock
in
cwtl
pop
sub
mov
insl
cld
mov
inc
pop
inc
xchg
into
lea
sbb
and
cmpsb
inc
jns
inc
lods
iret
insb
inc
cmc
sbb
in
xor
xor
xor
sbbl
xchg
in
frstor
in
inc
and
add
push
jle
and
xlat
in
shlb
in
sbb
push
and
or
mov
cmpsb
pop
pop
daa
xchg
jne
push
mov
mov
lock
int
dec
cwtl
lea
lcall
xchg
or
data16
movsb
movsb
cmpsl
push
jle
sbb
testl
mov
frstor
mov
inc
adc
hlt
inc
lret
lret
jae
hlt
mov
ljmp
stos
and
cmc
pusha
lock
les
jmp
cmpsb
stc
fisttpl
addb
mov
add
les
in
loop,pn
pop
dec
push
push
lea
je
push
je
add
push
mov
nop
mov
shll
xor
xchg
in
jle
in
jl
cmp
lock
mov
es
jae
mov
cmp
sbbb
mov
add
or
hlt
lcall
push
rorl
cmp
pop
adcb
pushf
je
stos
cmp
and
mov
mov
sarb
jmp
push
movsbl
test
add
mov
pop
adc
xor
lcall
pop
or
cmpsb
add
mov
xchg
xchg
sub
sub
mov
xchg
xchg
ret
jmp
icebp
enter
or
xchg
lods
out
push
mov
and
add
ret
fisttpl
push
sysenter
adc
push
or
div
add
dec
daa
fnstcw
aam
test
xchg
lahf
xchg
jne
decl
jge
push
clc
inc
xor
mov
aaa
daa
add
rclb
out
cmp
les
cmpsb
or
push
movsl
sbb
vshufps
std
or
shrb
cmc
mov
leave
stos
scas
arpl
cltd
push
shll
test
pop
imul
sbb
jmp
mov
aam
or
jbe
and
push
loopne
pushf
mov
mov
push
arpl
mov
je
test
int3
xchg
into
mov
xchg
mov
jmp
std
xor
push
lea
xchg
or
push
fildl
sarl
aad
inc
mov
push
or
and
dec
add
out
stos
test
rorb
ss
sbb
adcl
sarl
dec
inc
mov
in
stos
std
scas
xor
cmpsb
movsb
xchg
fldl
adc
jge
lcall
mov
inc
xlat
ret
adc
jns
jbe
cmp
test
lods
push
scas
xchg
icebp
pop
jecxz
movsl
or
fisubl
std
lock
mov
test
mov
icebp
aad
bound
mov
dec
fildl
push
pop
stos
xchg
ficoml
hlt
fcmovbe
rcrb
sarb
mov
dec
loop
push
mov
shlb
sub
mov
jp
mov
fs
adc
andl
inc
lock
push
jle
orl
lds
dec
es
dec
lcall
xchg
push
stos
xchg
loop
dec
add
inc
cmpsl
repnz
cwtl
inc
add
es
xchg
clc
mov
pop
jp
ja
aas
int3
pop
xchg
and
flds
mov
inc
insb
sbb
loope
xchg
mov
add
fistl
pop
movsb
lock
enter
and
push
clc
lcall
inc
dec
add
xchg
adc
fpatan
test
mov
cwtl
xchg
gs
bound
sub
es
sti
cmp
es
mov
stc
mov
mov
scas
imul
mov
inc
cwtl
mov
cmp
mov
add
hlt
jmp
fsubrl
mov
cmpsb
xchg
mov
inc
fwait
test
stos
rcr
xchg
jno
sub
jno
add
ffree
cmpsb
add
pushf
jecxz
pop
call
pop
sub
pop
ljmp
mov
sub
jne
lock
sbb
pop
and
jae
pop
mov
mov
sbb
arpl
sbb
fadd
xor
lret
inc
mov
add
inc
mov
push
gs
or
out
dec
aaa
pop
add
jae
ficomps
and
sbb
loopne
in
inc
out
fdivs
jl
out
push
das
js
sub
in
mov
js
rclb
cmp
int
popa
mov
decb
sbb
lods
rolb
ljmp
jb
jecxz
clc
out
test
mov
and
sbb
lahf
out
inc
or
mov
mov
lods
push
ja
out
jbe
xchg
cmp
xchg
lods
mov
xor
and
leave
and
dec
sub
or
aas
xchg
fabs
jmp
js
mov
orb
jmp
outsl
sbb
ret
scas
pop
aas
out
sbb
orb
mov
mov
out
sub
dec
outsb
nop
pop
pop
or
or
xor
mov
fcmove
cmp
mov
add
sub
mov
scas
subb
sbb
xchg
dec
mov
pushl
jbe
das
mov
insl
push
scas
loopne
mov
out
sarl
sahf
jno
or
out
cmp
pushf
es
pop
and
inc
pop
pop
lods
pop
and
stos
inc
sub
and
in
scas
sbb
jp
mov
mov
xchg
push
cwtl
cmc
xor
cmp
pop
arpl
clc
in
xor
sahf
dec
js
push
popf
hlt
mov
push
lds
inc
mov
outsl
pop
mov
leave
pop
xchg
nop
fstps
pop
push
addr16
inc
xor
push
jnp
jecxz
fstps
push
adc
rcll
je
jmp
jp
add
mov
sub
xchg
test
jns
dec
jecxz
test
movsl
mov
mov
fsubr
insl
mov
fstps
adc
adcb
insb
stos
jge
sbb
fimull
mov
in
jbe
push
shrb
and
in
daa
pop
icebp
aam
pop
fisttpll
inc
aad
jl
out
stc
idivb
imul
sti
push
test
int
or
ds
in
sbb
inc
lock
lret
xor
adcb
arpl
sbb
stc
fildll
je
loope
dec
stos
dec
add
jbe
lret
mov
fisttpl
pop
pop
inc
les
rolb
sbb
mov
shrb
fwait
cmp
push
jae
inc
jmp
repz
jno
inc
cli
test
imul
loope
dec
jmp
call
les
call
adc
cwtl
jmp
add
or
fmulp
lret
jle
jns
test
mov
fs
sar
sbb
outsb
inc
pop
mov
xchg
frstor
xor
xchg
pop
div
mov
mov
mov
stc
jp
movl
mov
nop
lods
lcall
sbb
sub
xchg
pop
add
test
test
pop
sbb
aam
lock
rclb
xchg
imul
out
jnp
inc
out
push
pop
lea
inc
shl
dec
jmp
jmp
je
insl
push
and
xchg
clc
cmpsl
gs
lret
cwtl
test
ljmp
adc
cs
scas
stos
hlt
jmp
icebp
add
sbbl
lods
mov
arpl
mov
xchg
add
ret
pop
aaa
icebp
and
push
push
sbb
aas
stos
sbb
dec
jnp
jbe
cmpsl
std
inc
xchg
outsb
mov
clc
mov
div
sub
es
inc
mov
das
or
mov
pop
ljmp
subl
stc
jecxz
mov
xchg
jb
add
setno
ds
dec
or
notb
loope
outsl
hlt
mov
add
inc
fnstenv
xchg
fcoms
mov
in
lds
xor
lods
add
aas
loop
mov
outsl
xor
add
cmp
daa
in
xlat
pop
jecxz
in
or
add
test
inc
aam
push
pop
aam
jl
add
inc
push
clc
adc
stos
test
andb
dec
mov
out
jmp
aaa
jbe
mov
or
fmull
adc
cs
movsl
in
jl
cmpsb
mov
add
sub
mov
adc
push
mov
aam
add
dec
testl
jae
jp
loope
das
adc
stos
dec
pushf
adc
in
pop
popa
out
inc
lea
jb
xchg
and
ret
mov
jmp
jmp
mov
mov
xchg
adc
orb
inc
in
loopne
es
xor
ret
adc
cmc
sub
movsb
and
or
adcl
movsb
mull
ljmp
and
cmp
clc
mov
dec
add
imul
enter
mov
mov
mov
xor
xchg
push
mov
repnz
aas
out
push
popf
idivl
jle
jp
xor
mov
ffreep
lods
int3
and
aas
sbb
cwtl
ficomps
gs
sub
aas
jne
jg
lahf
rolb
in
inc
je
xor
add
stc
xchg
mov
loop
jge
mov
gs
push
imul
sbb
xchg
inc
cltd
imul
imul
int3
test
popa
dec
jno
sbb
mov
scas
cmp
mov
and
and
xchg
pop
mov
and
inc
sarb
pop
adc
cmp
push
les
jp
pop
push
mov
dec
je
or
into
jg
imul
mov
xchg
leave
xor
dec
mov
dec
dec
or
call
pushf
into
mov
mov
jno
xchg
jp
es
xor
mov
aaa
jne
repz
ds
lret
fidivrl
add
push
std
imul
sbb
mov
in
int
dec
lcall
mov
movsb
mov
add
cmp
push
adc
xchg
pop
imul
cmp
mov
sub
inc
outsb
xor
inc
clc
pop
cmp
rcl
repz
outsb
out
call
out
xchg
idiv
add
in
jbe
mov
mov
js
lcall
subb
push
jge
fdivrl
mov
push
dec
mov
cmp
lcall
stos
insl
mov
dec
lahf
push
and
sarb
jg
push
popw
pop
insb
mov
or
mov
pop
mov
and
out
push
bound
or
and
pusha
pop
pop
cmpsl
pop
cs
js
xchg
jne
push
xor
rcll
testb
popl
scas
das
addl
rorb
dec
sub
out
in
pop
mov
mov
push
inc
adc
insb
test
loop
cmc
xchg
aam
lea
into
and
dec
xor
pop
gs
dec
js
int
mov
mov
lahf
dec
outsl
mov
push
data16
sti
test
rorb
adc
push
mov
sbb
jnp
xchg
repnz
fbld
repz
jae
out
lret
push
fadd
not
mov
cmp
jbe
cmp
inc
push
cmpl
clc
clc
int
cmpsl
jle
xchg
sbb
and
adc
mov
mov
lret
ret
ss
fsubl
js
fisttps
cmp
xchg
sbb
mov
xchg
fcoms
int3
add
mov
push
jo
daa
push
ljmp
inc
shlb
dec
adc
mov
jo
mov
mov
mov
scas
rorb
clc
or
sbb
add
mov
fmul
and
lret
or
lea
leave
sbb
xchg
pop
out
aad
sbb
mov
adc
add
into
xor
pop
jmp
pop
pusha
repnz
es
jmp
jge
cs
mov
adc
pushf
xchg
lcall
cmpsb
lock
push
jne
aam
and
and
sti
push
jbe
sbb
and
mov
dec
les
lds
mov
adc
adc
xor
pop
cmp
testl
inc
clc
lret
mov
xchg
adc
or
shl
hlt
push
xor
dec
adc
ss
stos
jl
sbb
pop
divl
call
sbb
repnz
xlat
jae
mov
add
push
pop
push
fnstcw
cmp
divl
mov
xchg
sbb
daa
in
mov
imul
inc
call
sub
and
pop
shrl
mov
sub
pop
sbb
or
xor
jg
imul
cmpsb
dec
mov
lea
subb
push
pop
ja
or
cmc
insb
rclb
cmpsl
lahf
lret
mov
pop
mov
cmpsl
cld
xorb
pop
pop
test
xchg
shll
lret
push
push
and
sarl
ja
in
cmp
push
enter
pop
cmp
stos
test
inc
popa
push
jl
fwait
test
decb
dec
sub
jg
dec
scas
lahf
mov
sbb
shl
dec
movsl
js
fsubrs
fs
dec
scas
pop
loopne
push
cmc
mov
mov
xchg
fst
pop
aaa
in
xor
pop
pop
push
dec
jno
cld
mov
mov
pop
popf
mov
les
inc
sti
and
jne
xchg
jnp
xor
and
hlt
shl
out
add
xor
inc
in
je
subb
fmul
mov
scas
xchg
aad
mov
inc
xlat
mov
mov
mov
in
push
ljmp
stos
dec
jge
loope
insl
les
cmp
cmpsb
in
loopne
and
shrl
mov
xchg
mov
fdivrs
xchg
and
arpl
movsb
sub
mov
mov
lcall
cmpl
popa
divb
pop
stos
ds
mov
loop
pop
xor
fsts
fdivrl
data16
xchg
sahf
add
jns
and
insb
ljmp
jb
mov
inc
pop
mov
inc
negb
add
imul
push
dec
mov
jmp
sub
or
dec
xchg
pushf
inc
xchg
jno
js
std
repz
jb
roll
pop
shrb
in
dec
and
xor
testl
cmp
addr16
xor
push
sub
dec
cmp
push
xor
fmul
sbb
stos
insb
out
ror
in
ja
xchg
jg
je
fs
pushf
mov
mov
add
or
js
movsl
jle
fcmovnu
nop
dec
mov
fs
push
jne
push
xor
ret
js
pop
cld
call
aas
or
fcomps
pop
adc
ss
mov
sbb
mov
js
mov
movsl
adc
pushf
sub
leave
lahf
mov
mov
add
xor
fwait
and
int
push
shlb
scas
into
loop
ja
lret
sub
cld
repnz
sbb
xchg
xchg
xchg
pusha
mov
jg
cmp
pop
int
mov
dec
or
add
inc
test
jecxz
and
neg
adc
outsb
sbb
mov
mov
icebp
sbb
cmpsb
fnstenv
flds
test
xor
adc
dec
xor
mov
mov
jbe
pop
mov
pop
xor
test
decb
dec
out
je
fdivrl
dec
leave
cmpsb
adc
adc
iret
out
sbb
or
fbstp
lahf
pop
aaa
mov
xor
lds
xchg
xor
in
or
cli
cmp
enter
jle
fistl
push
call
dec
jo
dec
cmpsb
in
cltd
test
mov
fucom
sub
rcrb
int
mov
mov
push
jge
jo
dec
xor
jne
or
mov
adc
add
jo
addl
adc
bnd
fisttps
insl
jb
insb
test
fwait
mov
push
or
jo
lcall
sub
inc
pushf
dec
sub
dec
sbb
xor
mov
aad
shrl
mov
insb
movsl
xorb
ds
or
sbb
inc
js
inc
jle
mov
lret
dec
xchg
push
addr16
push
out
test
outsl
pusha
int
jae
lcall
mov
ja
sahf
and
push
cmpsl
cmp
lods
cmpl
jo
sti
shlb
dec
xorl
hlt
xor
adc
movsl
pop
mov
movsb
add
nop
add
les
mov
jo
or
clc
adc
adc
jle
mov
daa
fwait
shll
xor
or
mov
lods
cmp
mov
cmp
ret
lret
cwtl
lock
dec
xchg
aad
mov
bound
jge
call
mov
xchg
repnz
sub
mov
and
lret
jecxz
aaa
call
sbb
mov
test
repnz
push
sub
jns
imul
arpl
jne
lock
loop
orb
or
mov
push
and
adc
jb
out
mov
loope
lods
pushf
sbb
ret
inc
aam
xchg
xchg
hlt
dec
sub
test
sub
push
scas
fmull
dec
sbb
fcomp
jg
mov
nop
push
jmp
xchg
jmp
loope
add
jle
dec
movsb
dec
jno
jmp
and
fcmovne
cmp
or
mov
or
lock
push
jne
dec
pop
mov
adc
stc
out
jmp
mov
add
sub
outsb
push
cmc
mov
jne
pop
test
pop
jae
cmpsl
les
xor
mov
das
inc
pusha
pop
or
sbb
or
mov
adc
leave
in
jp
add
inc
xor
shll
pop
jecxz
nop
adc
in
pushf
pop
jnp
daa
in
jae
push
cmp
and
dec
jne
shrl
add
inc
lods
iret
loop
push
mov
xchg
test
cmovp
pop
adc
jb
jge
adc
pusha
add
inc
or
mov
push
es
jnp
lret
lds
cld
and
les
insb
or
jb
pop
stc
iret
adc
or
and
mov
imul
or
loope
push
jle
outsl
in
loopne
shll
pop
lds
xchg
fwait
pop
or
push
adc
mov
lods
arpl
ds
sub
outsl
dec
jg
pop
jbe
mov
sti
ljmpw
sub
lock
mov
or
scas
jp
mov
ret
pushl
mov
imul
push
xchg
ret
push
lcall
subl
push
repz
divb
vphadddq
xlat
mov
jmp
das
push
pop
push
adc
push
clc
loop
rol
push
mov
addl
ficoml
inc
addr16
add
sti
pop
repnz
cmp
cmc
pop
push
mov
cs
in
mov
in
or
hlt
movsl
gs
dec
adc
cltd
mov
out
jb
jbe
xchg
mov
out
and
lea
xchg
xchg
mov
in
ss
cmp
mov
in
daa
inc
aas
dec
jb
inc
and
and
gs
add
xor
loope
xor
pop
je
bound
mov
xchg
fisubrl
int
mov
xor
subb
mov
mov
xlat
pop
sub
sbb
cmp
leave
stc
sbb
orb
adc
sbb
and
aad
pop
push
mov
out
inc
sub
les
mov
pushf
mov
cli
or
add
add
loop
icebp
push
jecxz
fadds
addr16
xorb
sarl
or
rorl
int
test
sub
cld
js
lcall
lods
pop
inc
shlb
rorb
cmp
mov
shll
inc
arpl
cld
lret
jb
jb
or
pop
pop
jno
sbb
insl
test
mov
ret
scas
movsb
je
insl
adc
jb
jbe
pop
mov
fiadds
mov
pop
inc
add
xlat
movsl
enter
push
push
sub
xor
sbb
cli
push
ja
xchg
iret
cmpsb
xchg
xorl
sub
adc
mov
xlat
adc
fldl
adc
xor
add
xlat
notb
rcrl
mov
sbb
inc
call
shrd
sahf
jae
push
mov
sub
ss
testb
int3
pop
sub
and
inc
xchg
mov
pop
jnp
jno
sbb
add
adc
lods
push
scas
incb
xor
push
pop
xlat
shlb
mov
and
iret
les
jnp
sub
in
sub
popf
nop
sbb
or
sbb
push
ds
hlt
dec
push
jo
mov
inc
sub
hlt
test
lahf
test
jbe
add
hlt
dec
aaa
shrl
jl
pop
jo
cmp
xchg
movsl
fwait
inc
mov
mov
sti
div
pop
jns
lcall
out
inc
adc
pandn
int
pop
sub
push
dec
ret
stos
pop
gs
pop
iret
movsb
xchg
mov
xchg
mov
daa
shlb
mov
addr16
add
jle
cli
xor
jecxz
xlat
adc
pop
ret
ret
mov
in
push
and
ret
push
pop
mov
dec
mov
xchg
mov
mov
inc
cld
ja
mov
je
and
pushf
out
nop
jne
stos
push
jnp
push
pop
js
pop
mov
and
into
cwtl
iret
ss
jno
out
lock
scas
repnz
inc
lods
clc
inc
cmp
push
dec
icebp
jecxz
scas
sbb
repnz
rorw
lock
adc
outsl
jecxz
hlt
xchg
daa
scas
mov
xorl
dec
dec
jle
aam
sarb
xchg
flds
push
inc
icebp
aam
cmp
addb
adc
js
cmc
enter
aad
jg
dec
jecxz
cmpsl
idivl
mov
je
aad
push
inc
push
inc
xchg
adc
int
aas
adc
and
or
add
adc
enter
divb
cwtl
mov
sbb
jns
push
lcall
xor
push
rol
sbb
bound
mov
aaa
pop
add
int
cld
mov
leave
add
sbb
or
in
into
lcall
lret
sub
jae
sbb
xor
jg
clc
mov
cli
stos
mov
cmpsb
pop
mul
pusha
mov
pop
push
jmp
and
inc
shlb
dec
adc
xor
mul
jle
je
out
push
jno
test
cmpsl
mov
icebp
xchg
push
enter
cld
and
fisubs
cmpsb
cltd
cmpb
xor
fisubrs
sbb
sub
ljmp
imul
lods
inc
sarb
push
callw
pop
inc
mov
mov
call
es
mov
gs
repnz
cld
jmp
pushf
inc
mov
popfw
call
xorl
imul
pop
push
pop
inc
jle
push
xchg
push
ret
gs
stc
mov
clc
xor
sbb
lods
xor
jb
xor
divl
mov
push
movsl
cli
and
jne
mov
sbb
int
cmp
sub
cmp
pop
fst
jne
negl
sbb
add
repnz
stos
sbb
cmp
sbb
movsb
addr16
mov
sub
xor
dec
pop
aas
icebp
sub
xchg
aaa
jg
rcrb
int
mov
inc
xchg
push
dec
xchg
add
mov
dec
sub
loope
jnp
mov
test
test
sub
jb
cmpsl
fisubl
push
ja
push
jns
mov
xor
sub
aam
xchg
sub
mov
cltd
outsb
mov
pop
push
test
or
outsb
dec
jo
xchg
icebp
push
lret
pop
cwtl
inc
inc
xchg
xorb
mov
mov
pop
mov
add
cld
imul
or
lret
xor
mov
lods
cmp
gs
mov
jmp
loope
cmp
jg
adc
and
xchg
cmp
insl
mov
mov
ljmp
mov
addb
or
sub
cmp
das
lods
outsl
aam
out
cmpsl
jp
test
fstps
out
add
out
lmsw
js
xchg
lea
jecxz
adc
test
les
xor
js
test
ja
cmp
pop
jne
mov
mov
or
push
pusha
inc
daa
in
inc
cmp
fistpll
ret
mov
out
orb
lcall
outsb
jbe
pop
xor
and
cmp
lods
clc
mov
sub
std
ds
inc
cwtl
mov
orl
and
mov
or
mov
adc
add
lods
std
loop
icebp
movsl
mov
pushf
fadds
js
cld
mov
leave
aam
stc
sub
cs
sub
imul
and
aad
jge
sbb
jno
mov
pop
and
mov
and
jae
push
out
xchg
in
mov
mov
enter
rolb
shlb
mov
xor
mov
aam
xchg
sub
xorl
pop
cmp
leave
dec
jmp
or
add
ret
jnp
pop
out
sub
push
adc
pop
iret
repnz
mov
xchg
xchg
or
les
cmp
and
out
jg
pop
sbbl
cmpb
mov
sbb
push
xchg
push
or
rcrb
int3
or
sbb
or
data16
jns
aaa
out
or
and
fwait
add
into
cltd
xor
shrb
mov
fsubrl
mov
cmp
addr16
push
in
pushf
add
loop
push
jle
aad
andb
lahf
jo
loop
pop
inc
cli
faddp
das
and
pop
xchg
sarl
push
mov
inc
shll
push
loopne
lods
pop
cmp
lods
les
mov
mov
in
out
inc
inc
sbb
mov
ljmp
fnsave
mov
js
xchg
jg
outsl
mov
sub
imul
mov
lahf
push
inc
scas
loope
or
das
inc
inc
lock
push
daa
in
xchg
mov
pop
ret
mov
sub
jne
insb
in
test
std
mov
push
jl
jecxz
cltd
xchg
sbbb
mov
inc
inc
icebp
lea
bound
push
mov
pushf
and
mov
out
or
movsl
pop
jne
jge
xchg
xchg
sahf
test
jmp
outsb
adc
and
gs
std
addr16
adc
aam
sbb
adc
fsubs
jno
jbe
enter
hlt
jb
sbb
in
xor
imul
cmp
ret
mov
sub
add
into
mov
clc
sbb
dec
sub
sub
out
rep
pop
add
nop
in
outsl
sti
add
sbb
or
jp
mov
mov
inc
mov
mov
push
divl
inc
adc
iret
outsl
loope
mov
xchg
imul
lods
lods
in
sarl
xchg
adc
shl
or
adc
or
pop
mov
mov
inc
xor
push
push
pop
xor
dec
fidivrl
push
mov
dec
call
imul
cmpb
mov
js
xchg
lea
add
cmp
inc
fnsave
fcmove
pop
out
adc
jmp
push
int3
mov
and
je
paddsb
in
sti
inc
out
data16
out
ret
es
dec
lods
xor
cmp
xor
mov
mov
inc
jno
or
ss
mov
dec
jno
pop
mov
mov
fs
inc
sbb
arpl
cvtdq2ps
mov
ljmp
sbb
jle
les
xor
test
outsb
sahf
fwait
mov
lahf
dec
out
push
dec
push
mov
add
or
enter
arpl
shll
and
mov
out
mov
das
xor
iret
cmpsl
sbb
fcmovnbe
cmc
sbb
scas
add
jae
pop
sahf
cmp
push
dec
xor
sub
out
xor
cmp
sahf
jmp
xchg
in
insb
gs
aad
mov
imul
mov
push
and
sub
dec
in
mov
inc
lods
cs
push
popa
xlat
xchg
push
insl
mov
dec
lahf
xchg
mov
and
loop
lahf
mov
ds
mov
mov
inc
enter
lret
fdivrp
push
js
jb
enter
sbb
cli
add
jae
outsb
jo
aam
addr16
je
aam
ja
pop
ret
adc
test
dec
jp
sub
lods
into
out
mov
xchg
dec
popf
sbb
jb
pop
cs
aam
cltd
call
pop
sub
pop
mov
cmp
inc
push
ss
fsubrl
into
add
in
nop
iret
leave
dec
mov
repz
nop
addr16
data16
pop
jle
cmp
sbb
fcompp
and
pop
daa
add
cmp
sbb
es
incl
adc
addr16
les
fdivp
sbb
push
cmp
jmp
cs
test
outsb
sarl
insl
sbb
push
frstor
mov
lods
xchg
bound
jmp
mov
xchg
insb
shrl
cmp
mov
out
sub
popa
inc
push
adc
pop
loop
xchg
cmp
and
inc
mov
mov
mov
or
adc
jae
int
mov
es
sub
in
adc
pop
jecxz
mov
jmp
lock
out
inc
mov
repnz
outsl
and
push
mov
out
sbb
xor
nop
out
stc
loop
pop
cmp
cltd
mov
imul
sub
inc
mul
push
lret
and
push
xchg
push
jbe
jnp
imul
mov
xchg
jbe
xor
jno
rorb
fsubr
insb
popa
mov
sbb
sti
dec
outsl
and
xchg
lcall
scas
fistpl
mov
movsl
cmc
push
ret
lds
push
mov
xlat
cwtl
ds
lods
aaa
xchg
mov
mov
cmp
jnp
frstor
cmp
rcrb
pushf
inc
inc
sbb
iret
push
rcrb
lds
or
sub
outsl
dec
dec
mov
jne
sub
adc
pop
and
mov
cmp
in
icebp
mov
arpl
mov
xor
lret
lret
xchg
adc
inc
add
fldcw
xchg
adc
andl
movsl
outsl
mov
lret
mov
jo
ficomps
fstpl
and
idiv
cmp
arpl
lods
stc
icebp
push
push
mov
push
pop
mov
push
nop
pop
jne
push
int3
fcmovnbe
or
mov
fwait
sbb
and
addl
cmp
inc
hlt
test
fs
xchg
outsl
imul
pop
and
lods
stos
subl
cmc
lret
mov
sbb
xchg
sub
testl
es
mov
call
outsb
int
daa
pop
in
xchg
push
ficompl
movsb
dec
shl
mov
insl
jno
outsl
add
icebp
mov
lret
fstl
cmp
lods
push
adc
sub
inc
sti
ja
roll
inc
add
fnsave
and
pop
xor
sub
push
dec
repnz
or
bound
push
dec
int
add
fdivrl
jae
repz
into
test
add
add
and
xchg
js
add
and
cmp
lea
mov
repz
xor
gs
js
in
bound
inc
fisubl
js
fwait
xchg
out
inc
je
test
dec
pushf
adcl
insl
in
aad
shl
pop
pop
fisttpl
jbe
fidivrl
in
push
int3
js
fldenv
push
mov
mov
jae
outsb
pop
sti
mov
lods
cmpb
adc
and
aas
xchg
pop
mov
nop
adc
add
push
and
lret
out
push
int
push
jno
idivb
les
jae
rcll
js
lret
cmc
dec
xlat
add
cmp
xchg
gs
add
ffree
cli
mov
stc
stos
mov
fldt
outsl
push
popf
pop
fs
mov
stos
mov
cli
sub
push
mov
push
adc
les
add
add
jge
rclb
xor
xor
jmp
cmp
push
mov
push
cmp
sar
jmp
movsl
movsb
stos
or
out
adc
mov
and
mov
dec
sarb
or
stos
out
in
xchg
aaa
xchg
dec
push
push
adc
jmp
adc
jnp
loopne
sbb
popf
sub
xchg
mov
fs
rcl
cmp
in
stos
mov
xor
sub
mov
jge
fs
int
add
xchg
repz
adc
movsl
jmp
cmp
cmp
xor
scas
mov
pop
inc
xor
or
movb
sub
dec
mov
sub
sbb
sbb
sahf
fldl
iret
hlt
or
aam
bound
mov
push
orb
sub
or
enter
das
insb
sub
mov
gs
outsb
inc
pop
in
cmc
rcr
addr16
jbe
pop
stc
jno
and
ret
rcll
inc
cmp
loopne
out
push
jo
sub
push
rcll
jbe
int3
jp
ljmp
mov
pop
push
adc
testl
pop
add
daa
and
adc
movsl
fidivs
adc
adc
jg
ss
imul
add
lods
lcall
xchg
inc
add
std
cmp
aad
loope
shll
out
mov
jge
roll
aad
test
sub
lea
or
shll
add
scas
jmp
mov
and
test
imul
push
ret
and
mov
insl
and
out
in
ror
fistl
mov
push
mov
cmp
xchg
dec
jge
push
jbe
pusha
xor
dec
xlat
sbb
rcrl
xchg
or
fistpl
cmp
jl
lret
rolb
imul
jle
and
jbe
add
movsb
mov
xchg
mov
sub
push
cltd
mov
push
dec
shll
push
ss
hlt
fisubs
sbb
fistps
mov
int
test
push
mov
adc
stos
mov
lret
xor
sbb
push
je
pop
adc
imul
xchg
sti
pop
gs
in
mov
cmpsb
stos
jmp
add
xchg
es
or
xor
xchg
fistl
in
mov
pusha
call
add
pop
stos
xchg
or
imul
push
out
mov
push
cmp
outsb
out
add
pop
lret
ds
mov
into
pop
xchg
cmp
loop
insb
movsb
and
push
cwtl
rol
xor
inc
xor
add
inc
mov
ss
addl
test
push
out
mov
andl
fcmove
mov
aam
sub
mov
pusha
cmp
dec
aas
or
out
mov
cmpsl
jns
aas
dec
pop
test
and
int
shll
sub
fcmove
into
and
fildl
cmpsb
clc
les
dec
enter
test
lahf
cmp
xor
popf
lods
lods
in
fidivrs
into
imul
rcrl
and
and
mov
jne
or
out
cmpl
xchg
jmp
or
inc
rorb
push
pop
jbe
push
pminsw
stc
lret
ret
and
xor
je
sbb
jae
inc
testl
cmp
or
int
push
dec
out
dec
stos
fstps
adc
out
addr16
fsts
or
mov
rcl
pop
insb
scas
ret
jle
or
mov
lds
xor
jns
add
pusha
adc
xor
jns
notl
cmp
mov
loop
jmp
and
insb
roll
rolb
fnsave
shlb
aam
imul
add
cltd
sbb
or
fidivrs
addr16
or
jge
scas
pop
jg
sbb
cmp
adc
orb
or
fisttpl
push
pop
xchg
or
das
xor
je
push
es
loope
arpl
jmp
adc
movsb
dec
fstl
inc
cmp
jno
mov
pop
inc
stos
fldl
and
insb
mov
and
jecxz
in
cmc
rorl
scas
int
mov
enter
add
mov
outsl
clc
aad
pusha
sbb
sbb
lea
adc
cwtl
and
divl
push
push
leave
add
in
jnp
push
add
pushf
add
cmp
cmpsl
sbb
pop
mov
aaa
jmp
rclb
dec
fnstsw
shl
dec
jne
dec
popa
push
pop
ds
cli
lds
je
xor
pusha
roll
fcmovu
imul
cwtl
cmp
xchg
add
xchg
std
dec
cmp
mov
inc
js
cmpsb
pop
sub
movb
cltd
or
push
stc
cwtl
sbb
daa
fisubl
outsl
dec
xor
ljmp
testb
dec
aam
sar
jg
movb
xchg
call
data16
pusha
xchg
mov
out
pop
adcb
mov
push
mov
jge
mov
push
adc
pusha
xchg
mov
push
xor
cmpsb
lret
call
in
andb
mov
fisubrs
sub
data16
lret
push
and
fnstsw
test
imul
inc
lods
pop
scas
test
sti
push
stos
dec
or
imul
or
push
xor
pushf
add
add
std
fnstcw
pushl
or
lock
cmp
pusha
mov
lcall
mov
out
mov
aas
jb
xchg
jo
arpl
xchg
add
sbbb
stos
cmp
mov
gs
je
adc
jge
in
add
je
aad
add
adc
mov
sbbb
in
enter
xor
lret
gs
ja
and
shll
mov
fwait
mov
out
cltd
or
dec
pop
or
lods
inc
fbld
out
sbb
repz
add
sbb
leave
add
or
cmc
or
scas
mov
sarl
stos
les
js
mov
xchg
lea
adc
sbb
fs
mov
rorb
bound
test
mov
test
pushf
jne
inc
xchg
mov
loope
js
bound
jne
push
ljmp
sub
inc
inc
call
imul
xchg
sbb
inc
pop
pop
add
sbb
repnz
fcomps
ret
fs
in
sub
xor
es
in
cmc
mov
mov
repz
loop
shll
mov
jo
in
aas
fsincos
push
int3
inc
inc
add
pop
xor
push
cmp
out
repnz
cmp
push
pop
sbb
mov
lods
xlat
cld
rolb
pop
push
fisubl
cld
rolb
mov
add
dec
adc
jle
adc
and
roll
and
test
mov
dec
call
xchg
sub
sbbb
int3
inc
ja
or
push
xor
mov
dec
fcmovne
mov
pop
test
nop
popf
orl
jge
mov
push
jnp
push
dec
dec
cmpb
in
movsl
ds
and
adc
leave
and
fs
fwait
pop
push
test
les
fcomip
xor
sbb
fnstcw
fsubrp
dec
push
or
jecxz
out
stos
rorb
dec
idivl
lods
push
cltd
mov
mov
nop
mov
sbb
jmp
mov
cli
jo
xchg
jg
cmc
inc
mov
aaa
in
xor
lods
xchg
and
dec
cmpsb
in
pusha
push
xchg
cwtl
sub
dec
bnd
or
add
aaa
push
jns
loope
dec
and
dec
imul
mov
or
pop
push
in
jae
or
jmp
push
xlat
mov
mov
jge
pop
jne
mov
outsb
mov
dec
mov
mov
nop
inc
pop
adc
iret
cmp
xchg
adc
push
sub
add
testb
insb
dec
ljmp
jge
adc
inc
enter
jb
js
lahf
sarl
xor
sub
sbb
mov
sub
aam
fistps
repnz
fbstp
push
xorb
shll
outsb
inc
jne
inc
xor
jge
or
mov
into
insl
je
xchg
jb
out
in
dec
add
iret
adc
and
mov
mov
push
out
aad
popf
inc
shl
pusha
in
cmp
mov
sub
aad
roll
fwait
vpshuflw
test
popa
mov
fucomi
fdivr
push
imul
cmc
mov
inc
idivl
pop
xor
jne,pn
shl
out
mov
fdiv
ret
or
loopne
fdivr
clc
rorb
pop
lock
push
in
and
and
mov
dec
jg
inc
mov
int
mov
lods
lahf
xchg
xchg
add
push
mov
sbb
mov
scas
divb
test
mov
and
mov
mov
test
or
cmpl
jge
aad
xor
jg
xlat
fsts
hlt
fdivl
nop
out
subb
pusha
or
decl
rcrl
mov
jg
mov
pextrw
cmpsl
icebp
jg
jo
adcl
fwait
ret
int
rcrb
xor
and
sti
xchg
aam
add
jle
bound
mov
stos
inc
fcomip
jns
out
xor
sub
test
jg
rclb
pop
pop
outsb
out
int
or
insl
lea
out
decl
mov
pop
sbb
or
enter
mov
arpl
adc
lret
cmp
movsl
mov
js
xor
mov
pop
fsubrs
imul
in
filds
int3
loop
jmp
dec
dec
ss
scas
and
pusha
xor
aam
add
mov
xor
dec
lods
dec
jnp
lods
sahf
fisubrs
enter
cmc
ljmp
ds
aad
xchg
ficoml
inc
outsb
xor
pop
dec
dec
cli
cmpsl
out
cmp
icebp
and
xor
leave
stos
pop
lahf
dec
and
jp
inc
mov
shll
idivb
inc
xchg
repnz
call
push
cmpsb
imul
sub
jo
icebp
dec
cmp
cld
iret
dec
or
loopne
sbb
xchg
mov
lea
out
jns
mov
roll
aam
xor
pop
and
insl
cmp
ret
jge
push
jno
hlt
sbb
inc
sahf
adcb
inc
cmpsl
and
sbb
cwtl
pop
ja
sub
jmp
movsl
fnstenv
sub
popa
dec
inc
mov
fcoms
dec
sbb
enter
adc
push
add
fisttpll
xchg
lods
fwait
ds
sbb
loopne
add
mov
jbe
in
into
dec
popa
inc
cmp
dec
dec
pop
pop
loope
cwtl
adc
sbb
stos
pop
mull
mov
movsl
add
mov
je
ret
mov
xor
outsl
cltd
fwait
int
cmp
lock
push
ss
enter
push
rcl
sahf
xor
xchg
outsb
fcmovnb
mov
jmp
notb
or
lea
jnp
dec
dec
fs
out
ss
jg
cs
sbb
sub
in
pusha
in
sbbb
add
movsb
mov
out
les
aam
and
cli
jnp
mov
add
xor
push
jns
cmp
dec
jg
movsl
xchg
out
mov
sarl
xchg
cmp
cmpsl
mov
mov
add
or
xchg
sub
fldl
cmp
loopne
inc
pop
outsl
push
jg
lock
fisubrs
mov
shl
jns
imul
loope
shll
mov
sahf
and
ret
je
jae
pop
imul
sub
aas
faddl
sahf
pop
js
mov
rclb
adc
insl
or
adc
bnd
mov
outsb
sbb
repnz
mov
jge
mov
mov
jo
cmpsb
bnd
xchg
xchg
and
aad
loop
jns
push
aaa
repnz
add
mov
filds
jmp
insb
adc
imul
mov
les
xchg
mov
clc
insl
movsb
mov
pop
cmp
xor
push
push
xchg
adc
rcrl
sar
xor
cmp
mov
in
and
mulb
and
sbb
adc
lret
outsb
push
dec
and
gs
fwait
adc
outsb
mov
xchg
fmul
xchg
add
orb
out
push
inc
ret
lret
and
stc
pop
pop
push
dec
pop
xor
movsb
je
xor
mov
jns
in
das
xchg
test
pop
addr16
in
jne
inc
inc
aas
xchg
jo
pop
mov
fdivr
push
jae
xor
push
mov
fst
movswl
jle
lret
aam
int3
mov
mov
adc
fcoml
mov
ret
xor
lret
fidivs
lahf
jbe
mov
loope
push
pop
lods
bound
mov
push
in
jmp
dec
mov
add
inc
sbb
and
dec
jecxz
dec
dec
pop
mov
lcall
sarb
mov
sbb
jle
in
push
decl
mov
xchg
xor
ljmp
cwtl
inc
movb
ficompl
inc
mov
je
sub
jno
mov
inc
in
lret
shrl
stc
fsubr
inc
jb
lock
sbb
and
dec
dec
add
cld
sub
nop
sbb
xchg
pop
scas
jno
jmp
pusha
dec
jo
dec
xchg
xor
mov
pusha
ror
dec
or
sahf
sbb
inc
adc
inc
mov
xchg
xor
and
dec
sub
cld
outsl
mov
test
sub
sbb
cmp
subb
sbb
pop
std
loope
ja
scas
adc
push
ror
inc
jbe
repz
and
cmp
inc
mov
sbb
xor
in
pop
lea
cmp
lcall
sbbl
lahf
mov
movsb
add
aaa
adc
mov
xchg
cmp
lods
or
mov
sti
jle
adc
push
dec
push
pushf
rclb
cwtl
in
sbb
pop
inc
lds
xorl
pop
cld
xchg
xchg
pop
bound
jle
lret
loopne
jae
test
mov
adc
dec
push
imul
in
mov
fistpll
pop
jmp
jle
pop
pusha
repnz
sti
dec
or
mov
push
add
fcmovne
mov
mov
add
inc
in
sbb
mov
fsub
mov
clc
jbe
mov
inc
cmp
push
sbb
test
nop
sbb
jno
repnz
jo
ret
sbb
mov
lahf
dec
mov
sti
jbe
mov
and
lret
or
lret
and
pop
js
aam
dec
sub
nop
jg
cwtl
xchg
fisubrs
add
mov
cmp
scas
dec
cmp
jno
int
insl
mov
imul
mov
mov
lcall
sbb
ljmp
lret
xor
jmp
mov
xor
or
idivl
cmpsb
cmc
cmc
inc
jnp
iret
push
and
mov
imulb
xchg
call
pop
and
fisttpl
fs
sbb
bound
sbb
jecxz
push
lock
push
and
push
push
pop
jbe
cwtl
adc
mov
add
sbb
fwait
xchg
cli
xchg
imul
mov
icebp
push
hlt
sub
aas
vpaddb
xchg
or
adc
fisttpl
mov
add
sub
jg
fidivrl
cmp
lods
push
out
fcmovne
fidivrs
inc
lret
adc
jne
imul
pop
pop
test
pop
adc
mov
std
shl
jl
fistl
loopne
sbb
or
lret
or
pop
out
out
sub
pop
add
jo
xchg
sub
xor
jl
cmp
xlat
filds
outsb
inc
fsubrp
popf
dec
cmp
pop
in
pop
ja
xchg
xor
ror
adc
pop
xchg
sub
lods
mov
cmpsb
push
arpl
pop
cmpsl
subl
sti
xor
popf
sbb
movb
in
scas
gs
adc
jl
cmp
jge
xor
dec
sub
loopne
or
xbegin
dec
jp
cli
sub
dec
nop
je
stc
leave
mov
sar
dec
push
jnp
nop
mov
inc
xchg
mov
popa
and
int3
mov
iret
pop
inc
dec
jle
xchg
dec
lods
cwtl
adc
push
inc
pop
cmp
mov
sub
stos
lret
pop
jg
test
push
inc
gs
pushw
ret
notl
jnp
ss
pop
mov
xor
lea
cmc
xor
mov
loope
scas
repz
int
test
mov
dec
xor
into
sbb
shlb
dec
in
in
push
insb
std
in
inc
mov
in
xor
lea
jle
push
xchg
sbb
arpl
loopne
or
aaa
fwait
sbb
mov
push
pop
push
sbb
orb
add
loopne
sbb
dec
push
movsb
in
or
pop
cmp
add
mov
hlt
std
adc
pop
scas
cmp
cwtl
dec
ss
cmp
frstor
fsts
sbb
mov
jmp
or
in
sub
jne
clc
xor
mov
xchg
andb
xchg
cmc
out
out
mov
adc
xchg
loopne
jl
in
imul
push
cltd
or
roll
push
mov
shll
mov
enter
push
movsl
sbb
repnz
push
outsb
dec
lcall
sbb
or
test
jge
leave
pop
xchg
and
or
cmp
cli
and
repnz
inc
in
fidivrs
push
add
mov
or
ret
mov
pop
inc
stc
add
in
loope
lock
out
and
mov
push
inc
xchg
pop
push
lods
lret
cmpsb
bnd
xchg
cmp
subb
lret
jp
shll
enter
in
sub
icebp
jbe
adc
cmp
sbb
cmp
push
mov
cmp
pop
and
ljmp
cli
sub
cli
test
test
aas
popa
iret
xor
adc
jmp
mov
pop
in
push
dec
fcoms
arpl
push
push
test
ffreep
jle
testb
jo
mov
mov
adc
rcrl
cli
ljmp
int3
mov
push
outsb
mov
inc
dec
lock
sarl
scas
jb
jg
mov
lcall
mov
js
xlat
or
inc
fs
sbb
sbb
mov
test
push
bts
out
dec
je
sbb
ds
sub
cmpb
out
lret
cwtl
xor
push
mov
lods
mov
jecxz
es
push
aad
cltd
inc
hlt
xor
sbb
cwtl
push
aaa
scas
and
fnsave
repz
mov
adc
push
push
rcl
insb
js
sub
cmpsl
out
pop
dec
rcr
lret
adc
daa
cmp
data16
loope
mov
xor
xchg
add
mov
imul
inc
mov
stos
mov
seta
movsb
push
push
out
adc
mov
mov
add
dec
mov
or
xor
pushf
adc
cmpsb
push
cmp
fstpt
pop
jb
je
loopne
xor
pushl
stos
push
push
pop
hlt
pop
sub
cwtl
jp
insl
and
cmp
fistl
push
sbb
sahf
adc
add
cmp
adc
jnp
mov
loop
lretw
jae
mov
or
gs
adc
cs
loopne
rcrl
mov
decb
inc
in
fisubrl
adc
adc
insl
jmp
nop
test
hlt
adc
and
mov
sti
das
lea
shll
mov
mov
lods
push
xor
and
fisttpl
ret
xchg
xchg
pop
fidivrl
into
xor
jno
jle
mov
in
clc
cmpsl
inc
sbb
daa
cmp
adc
lock
movsb
xor
jne
sub
cmpsb
xor
inc
out
mov
roll
and
jp
sbb
mov
mov
push
jecxz
cmpsl
loopne
ss
setne
clc
or
jecxz
push
flds
push
mov
inc
cmc
fiaddl
jmp
flds
call
cmpl
or
pop
lods
fdivl
ficompl
lahf
stos
mov
mov
popf
dec
sbb
lods
mov
hlt
pop
enter
les
insl
mov
sub
loop
lahf
sahf
lret
or
sti
xor
adc
jp
mov
xcrypt-cbc
cmpsl
push
roll
inc
cmp
imulb
and
adc
mov
sar
fsubrl
mov
out
and
jo
dec
add
out
out
pushl
es
cltd
cmp
sarl
ss
shll
xchg
lcall
add
std
pop
addr16
popa
push
jns
xor
test
mov
mov
mov
mov
outsb
sbb
cmpsb
mov
jmp
mov
test
shll
in
rorb
mov
add
xchg
lds
inc
dec
sub
jg
fisttpl
dec
dec
std
bound
sbb
pop
and
fwait
and
add
sub
sub
pusha
push
or
loop
jle
js
pop
negb
mov
jp
insl
push
insb
inc
xchg
pop
imul
push
inc
pop
mulb
in
lret
lea
push
cwtl
dec
jae
aam
insl
push
mov
scas
mov
in
adc
inc
js
sub
int3
cmp
or
mov
imul
sbb
je
mov
push
shrb
cmp
xchg
xchg
mov
mov
jl
push
jb
ret
sub
ffree
mov
rolb
xor
or
dec
add
jmp
enter
xchg
dec
outsb
mov
pusha
add
lds
cwtl
mov
or
clc
jnp
adc
hlt
repz
mov
cmp
cli
or
ret
pop
rcl
outsl
adc
ret
mov
mov
mov
cmp
jg
add
inc
sahf
jo
insb
pop
adc
jns,pn
push
shr
ss
rorl
addl
jmp
adc
clc
lret
pop
test
mov
fstl
mov
arpl
cmpsl
enter
movsb
or
and
sub
test
jl
mov
out
dec
sub
imul
pop
push
xchg
insb
orl
je
cmpb
out
cmp
and
les
inc
mov
pop
out
clc
mov
scas
xor
adc
or
xchg
jbe
stos
cwtl
nop
iret
cmp
dec
sahf
jmp
js
jb
push
pop
ss
daa
repz
lods
ljmp
adc
xchg
roll
and
int
adc
rcrl
xor
cmp
sub
cltd
jo
fnsave
les
cmpl
and
inc
out
inc
fwait
lock
adc
pop
pop
inc
movsl
xor
push
lea
bound
dec
mov
adc
pop
inc
sbb
insl
hlt
mov
mov
shlb
mov
pusha
cmpsb
les
cld
shrl
cmpsb
adc
imulb
mov
inc
pop
shl
sbb
neg
jge
or
cltd
mov
ss
push
dec
jmp
out
add
lds
daa
fs
sub
or
lods
pop
hlt
mov
jns
jmp
lahf
sbb
sbb
jne
cmpsl
cmpl
lcall
add
pop
call
das
mov
cmc
movsl
fisttpll
aam
cmpsl
loope
repz
mov
xchg
outsl
xchg
push
push
inc
or
test
and
push
push
rorl
out
call
fadd
cmpsb
mov
sub
mov
and
roll
mov
push
loope
sub
lock
test
mov
add
sarb
add
and
xchg
push
repz
jb
fldcw
or
outsb
inc
js
xchg
mov
aaa
jecxz,pt
lret
and
inc
out
lock
mov
lcall
xor
inc
dec
sarb
sbb
jge
flds
pop
cmp
dec
or
adc
fucomp
pop
pop
push
or
add
xchg
stos
mov
add
jl
repz
ja
movsb
fimull
or
mov
fwait
jno
jle
xchg
jl
popa
pop
adc
xchg
cmc
clc
mov
sbb
xchg
and
cld
std
dec
sbb
xchg
popa
sbb
aad
and
movsb
sti
inc
ljmp
cmp
jnp
pop
insl
pop
lea
in
das
mov
outsl
bnd
shrb
test
mov
add
lahf
ret
dec
shlb
rol
mov
aaa
aam
cld
lock
and
xchg
js
pop
aaa
outsl
in
jo
pop
rcrb
push
dec
sub
sbb
in
loopne
cmp
xor
xchg
sub
jle
xor
pop
dec
lret
dec
xor
mov
ja
addr16
imull
call
add
scas
mov
cltd
sbb
mov
popa
jecxz
rdtsc
jecxz
sbb
rcrl
ja
dec
mov
test
data16
mul
sbb
xchg
hlt
bound
and
fscale
add
test
push
dec
shrl
cmp
repz
jge
cmp
and
frstor
or
outsl
jns
je
ljmp
dec
xchg
and
mov
test
aas
dec
jbe
add
decl
xorb
xor
js
ja
rolb
std
bound
cwtl
je
mov
mov
lret
and
stos
in
xchg
test
dec
push
fbld
xor
pop
jnp
mov
enter
aaa
ds
das
add
test
ja
pusha
dec
mov
ljmp
aaa
pusha
cmp
push
push
pop
pop
sbb
enter
lds
add
shl
jne
mov
inc
pop
lcall
into
push
and
es
mov
dec
out
and
aad
xor
jns
cmp
cmp
rorl
ret
adc
loop
enter
test
cmp
adc
es
sub
out
or
out
test
cld
and
mov
mov
cld
inc
or
and
mov
mov
mov
push
mov
test
pusha
aaa
mov
push
or
popa
push
mov
pusha
push
ret
and
xor
out
lret
andl
and
sbbb
cli
cli
ret
scas
jp
push
call
mov
jno
fldt
cmp
leave
scas
popl
pop
xchg
repnz
gs
rcl
hlt
lret
stos
cli
sahf
pop
and
loop
jne
push
in
sub
push
xchg
aam
add
insb
sbb
pop
xor
test
fs
cs
dec
insb
and
in
sbb
sbb
aas
and
outsb
xchg
dec
sub
add
lahf
add
pushf
mov
mov
and
sbb
enter
mov
jp
fwait
adc
add
jmp
or
in
sarl
lahf
dec
mov
je
shll
movsb
mov
call
mov
lods
jno
clc
cmp
inc
jae
cwtl
dec
and
je
inc
test
insl
push
jbe
xchg
pusha
sbb
xchg
imul
outsb
xor
pop
pop
push
mov
jecxz
insl
xor
add
cltd
cmp
shlb
sub
dec
ret
add
mov
pop
lods
mov
cmc
dec
mov
insl
sti
inc
ret
ret
jp
shll
push
test
in
inc
add
xchg
jp
sub
xchg
fstl
xor
inc
mov
fwait
adc
inc
iret
add
ret
or
cmp
sahf
mov
jle
mov
aaa
fwait
sub
inc
jle
or
or
rcll
mov
mov
and
jns
dec
add
dec
push
mull
jp
dec
sub
cwtl
xor
push
cmp
xchg
in
jg
mov
mov
adc
add
ret
popa
pop
cwtl
je
repz
mov
adc
adc
mov
stos
sbb
lcall
pop
pop
pop
subb
popa
mov
pop
push
ret
es
stc
push
inc
je
inc
mov
lahf
and
call
cld
cmpl
lret
ljmp
dec
idivb
cmpb
lock
call
ljmp
ljmp
sbb
ret
sarl
shr
jb
push
sti
jg
loop
fisttpll
and
adc
inc
stc
push
or
roll
je
dec
mov
adc
hlt
pop
imulb
adc
hlt
mov
cmpl
sub
dec
cmp
add
mov
loope
or
pop
mov
pop
fnsave
lds
cmpsb
out
leave
push
mov
xchg
out
and
ss
cmp
popf
push
sbb
out
inc
icebp
int3
lds
jp
shll
stc
es
ja
push
pop
cmp
pop
insb
sti
fdivl
mov
cs
cmp
jbe
add
mov
out
inc
mov
inc
aas
out
xor
mov
imul
jns
mov
mov
lret
xchg
add
js
je
dec
mov
sbb
mov
mov
push
repz
enter
roll
xchg
xchg
or
lods
test
data16
mov
inc
repz
pop
push
shll
cmp
jcxz
fsubr
add
push
mov
outsb
mov
bound
pop
fbld
jmp
in
xor
rolb
fadd
mov
inc
filds
imul
ja
js
inc
adc
mov
sti
jb
jb
cwtl
inc
xchg
sarl
xchg
clc
mov
enter
inc
out
cmpsl
dec
mov
xchg
and
ret
xchg
das
in
in
es
in
stc
cwtl
xor
scas
and
xlat
stc
pop
cmp
or
jb
pushf
das
jne
in
dec
push
jg
jmp
push
ror
xchg
pop
sahf
sub
test
add
mov
out
popa
xchg
out
sbb
cmp
dec
dec
push
mov
push
jne
jge
test
and
notb
push
pop
push
stos
pop
dec
mov
sub
mov
jecxz
subb
mov
sbb
loopne
roll
or
mov
enter
ds
loop
mov
pop
je
clc
nop
mov
adcl
shrb
inc
and
xchg
sti
mulb
es
adc
inc
bound
jae
push
xor
popf
mov
ucomiss
cs
inc
inc
out
sub
xor
mov
ret
es
cltd
inc
rcll
mov
enter
outsb
sbb
xor
pushl
gs
pop
daa
hlt
lods
mov
stc
or
xlat
mov
dec
push
cmp
or
cmp
jmp
in
ret
or
fwait
mov
pop
jbe
mov
out
pop
test
shll
mov
shrl
out
xorl
je
xor
rclb
in
sbb
cmp
mov
jae
push
call
sub
not
mov
mov
in
sub
iret
andb
loop
push
test
sbb
cmp
insl
test
ljmp
out
lret
mov
jge
mov
out
xchg
sbb
stc
adc
cmp
mov
sub
lods
aaa
push
cmp
xchg
stc
fstl
movsb
or
iret
dec
mov
pop
mov
ss
ljmp
int3
push
push
loop
mov
cli
and
cs
mov
and
data16
cmc
scas
xchg
xchg
fsts
mov
out
mov
jns
add
sahf
imul
jns
mov
jge
mov
push
push
push
mov
push
cmpsb
mov
adc
iret
jne
inc
mov
push
icebp
out
adc
push
cltd
jo
sbbl
ljmp
jae
fsubrs
jp
add
jnp
xor
push
sbb
cmp
cmp
int
jae
mov
add
jnp
aad
xchg
inc
adc
cmp
in
jl
aad
jb
icebp
sbb
imul
cmp
cmpsb
ret
into
xchg
jb
ret
insl
mov
or
inc
adc
faddl
lret
xlat
pop
setns
iret
repnz
adc
sarl
sub
xchg
ret
fsub
mov
jp
pop
or
insl
mov
sub
in
mov
js
insl
adc
outsb
jbe
xchg
xchg
jns
dec
cmp
insb
and
xchg
cmp
mov
pop
je
lret
pop
fs
push
lods
adc
into
inc
and
push
pop
jmp
dec
loope
out
data16
push
push
test
ljmp
daa
sbb
loope
test
xchg
jecxz
gs
enter
shlb
ss
mov
in
dec
imul
pusha
mov
notl
adc
jle
cmp
mov
ds
loope
jg
cwtl
adcb
xlat
xchg
mov
push
pop
lcall
mov
lret
test
pop
push
jns
lds
pop
adc
add
ret
dec
add
ret
out
sbbb
xchg
sub
lods
fidivl
lods
inc
add
xchg
movsb
stos
ret
iret
xor
mov
cmc
xor
pop
cmp
pop
mov
loope
rcll
cmc
testl
xchg
loop
bound
cmp
dec
lss
stos
or
mov
aaa
xor
insb
fimull
and
inc
add
cmpsl
adc
pop
mov
test
enter
pop
ret
es
mov
les
push
jle
rolb
jge
pop
dec
and
xchg
out
inc
repz
xlat
cmp
jp
ficomps
aam
and
mov
lds
shr
aaa
pop
outsb
sti
fdivrs
jb
pop
inc
add
mov
mov
push
add
cmp
les
pop
jnp
jecxz
push
mov
xchg
aas
push
mov
in
ljmp
and
and
adc
icebp
insl
pusha
clc
xchg
lret
push
mov
inc
aad
sub
pop
int3
or
mov
rolb
fwait
stos
shr
push
pop
cmp
ja
push
jp
sahf
ret
xorb
imull
pop
and
sub
loopne
xor
jecxz
ret
lret
sub
loop
clc
jns
insl
xchg
movsb
adc
sbb
mov
mov
mov
hlt
mov
clc
out
xor
lock
mov
jl
adc
inc
pushf
lret
inc
dec
js
rcll
gs
fwait
inc
mov
pop
mov
lock
mov
inc
xchg
imul
movb
push
lcall
adcb
xor
or
adc
adc
dec
inc
mov
aas
fs
mov
pop
jge
mov
sbbb
popa
push
sub
ficoml
mov
sbb
insb
push
icebp
cld
mov
aas
lods
ja
dec
pop
pop
aas
mov
push
or
cmpsb
lea
xchg
imul
xor
vmaxsd
aad
adc
lock
movsb
cmp
dec
shlb
aaa
cmpsl
int3
rorl
cmpsb
test
cs
scas
hlt
mov
hlt
mov
push
dec
push
lret
add
sbbb
ffree
jno
sti
adc
mov
mov
xchg
hlt
into
lcall
cmp
nop
push
jmp
out
in
mov
faddl
js
jg
sbb
cld
and
in
pop
add
int3
das
shll
jg
mov
fxch
stos
clc
xor
sbb
iret
andl
xchg
jb
std
cltd
xor
lret
fistpll
lahf
inc
in
push
sub
and
fcmovu
movb
add
sub
push
outsl
sarl
push
stc
loopne
out
inc
aas
nop
and
and
inc
mov
jae
fdiv
cli
adc
dec
sarb
sub
push
int
sti
fs
xor
imul
inc
jecxz
and
lock
inc
and
sbb
roll
pop
dec
mov
sub
adc
mov
enter
xchg
sti
mov
sti
popf
mov
xchg
mov
cmp
std
cmp
in
jo
pop
jae
push
fucomip
pusha
sub
xor
sbb
inc
leave
jnp
fidivl
dec
sbb
lret
mov
cmp
rcrl
inc
dec
xchg
mov
add
outsl
insl
in
mov
sub
mov
and
cwtl
pop
inc
jge
lret
xchg
cmp
push
call
int3
dec
cwtl
pop
mov
and
fmull
sbb
xchg
push
mov
jbe
xchg
pop
repnz
mov
sahf
push
inc
int3
mov
icebp
insb
fs
shll
and
inc
or
inc
sbb
mov
and
in
leave
mov
pminub
jno
out
mov
cmp
daa
aaa
adc
pop
and
insb
loope
mov
mov
shrl
xor
adc
pop
mov
out
mov
xchg
shr
sub
adc
adc
pop
xor
pop
arpl
mov
mov
adc
xor
fdivrl
dec
ret
mov
push
jns
dec
xor
mov
cmp
cli
xor
and
mov
push
jecxz
sub
xchg
pusha
lods
test
sub
nop
jmp
pop
jg
cmp
jns
stc
mov
cli
mov
push
fldenv
dec
sahf
push
mov
sbb
das
mov
repnz
pop
mov
mov
lods
mov
cltd
loope
stos
rcll
sub
fisttpll
in
pop
add
fidivs
push
push
push
cltd
inc
push
movsb
add
mov
adc
xchg
xchg
in
mov
jo
hlt
inc
popa
sti
and
adc
fstl
cmp
or
call
jae
pusha
xchg
fnstenv
nop
int3
sar
bswap
mov
xchg
inc
mov
push
xor
je
stos
mov
mov
add
sahf
enter
adc
icebp
stos
inc
inc
js
adcb
mov
aaa
jo
mov
mov
or
aaa
inc
test
ds
into
inc
mov
and
mov
js
fstl
xchg
push
lahf
xchg
mov
aad
mov
insb
fstl
sub
int3
inc
arpl
and
mov
test
inc
xor
icebp
js
push
stos
mov
mov
xchg
xor
add
pop
dec
cmp
into
pop
xchg
sahf
movsb
adc
pop
mov
xchg
pop
insl
cmpsb
inc
dec
daa
icebp
cld
jecxz
outsb
add
je
pop
sbb
mov
or
mov
push
movsl
ja
xor
jecxz
orl
mov
mov
pushf
sbb
xor
lahf
cmpsl
push
ret
aam
les
jb
jnp
hlt
push
pop
adc
insb
inc
inc
scas
in
xchg
mov
out
fdivr
cltd
pop
xchg
mov
pusha
test
sahf
push
mov
inc
cmpsl
test
iret
sub
mov
outsb
sbb
insb
sbb
cli
aas
jmp
pop
mov
in
jl
or
rclb
fs
lret
pushf
push
cld
xchg
mov
inc
ret
jecxz
pop
daa
nop
jns
fcoml
push
sbb
ds
sti
insl
popa
or
sti
shll
das
cwtl
inc
lods
icebp
cvtps2pd
dec
inc
pshufw
push
lea
and
repnz
pop
adc
push
dec
dec
add
mov
push
lahf
mov
aam
ljmp
xor
sub
dec
sarl
es
sarb
jae
insl
cmp
hlt
and
mov
in
sbb
jmp
cmpsb
sti
xor
je
stos
das
pop
mov
mov
mov
push
test
stos
std
pop
bnd
gs
pop
loope
jnp
add
int3
dec
push
ficoms
sahf
ja
push
lret
push
mov
lods
dec
inc
stc
sbb
cmp
cmp
push
loopne
movsb
mov
popf
jae
sub
jnp
or
shl
outsb
mov
inc
out
andb
mov
xchg
inc
in
cmp
mov
pop
sbb
pop
mov
insb
cwtl
das
xchg
mov
add
xor
or
lcall
mov
add
or
lret
imul
jecxz
and
cmpsb
add
sub
mov
out
cld
inc
sar
mov
loopne
or
imul
pop
aaa
xchg
data16
popa
sub
jo
fincstp
push
scas
hlt
mov
cltd
mov
mov
pusha
jb
nop
cmp
das
leave
mov
sub
test
les
lock
add
sub
imul
lds
enter
dec
scas
cmpb
mov
xchg
xchg
push
or
into
push
std
scas
lods
loope
jmp
jmp
cmc
xchg
adc
mov
jecxz
and
dec
jne
fs
jge
xchg
jne
xor
xor
push
push
mov
mov
ja
je
in
fsts
js
or
jbe
arpl
movsl
das
dec
ret
in
add
pop
sbb
mov
es
sub
mov
mov
push
ficomps
sbb
std
call
nop
jbe
push
jb
lock
cbtw
sbb
pop
cwtl
insb
aas
popa
test
ljmp
dec
cltd
loop
test
jecxz
add
inc
aam
popf
fidivs
add
es
xor
add
mov
dec
jno
ficomps
jmp
pusha
mov
add
inc
pop
mov
inc
out
outsl
pop
mov
inc
add
mov
cmc
push
mov
sti
sbb
cmove
into
mov
or
mov
sbb
cmp
jnp
inc
sbb
lret
or
adc
insl
pop
dec
or
mov
dec
out
pop
and
mov
inc
ds
mov
in
mov
xchg
enter
xor
movsl
enter
test
lods
aas
mov
sub
int
xchg
dec
mov
mov
mov
fimull
shrl
inc
lods
or
xor
push
jno
stos
mov
psubw
cmp
movsb
jmp
and
stos
or
inc
cmp
fs
pop
mov
shll
or
notl
xlat
hlt
mov
ljmp
je
cld
pop
and
jp
mov
arpl
into
test
inc
shrb
scas
fldt
cmc
push
iret
mov
pushw
and
insb
fdivrs
jns
xor
out
out
dec
enter
imul
jns
mov
or
push
cmp
add
mov
mov
and
xchg
jge
xlat
pop
sbb
inc
imul
icebp
jno
sbb
mov
jp
rcrl
fiadds
push
and
sub
sti
testl
dec
imul
shlb
ljmp
mov
push
jb
jo
xchg
fildl
dec
bound
loopne
dec
fnstcw
pop
in
sub
ret
dec
hlt
lret
ret
sarb
ds
xchg
jg
and
jae
or
ret
fwait
inc
jne
inc
mov
fwait
addl
shll
aad
mov
xlat
xchg
or
push
and
enter
imull
out
mov
fwait
adc
pop
push
xor
xor
lods
xlat
add
outsl
outsb
push
leave
adc
leave
dec
pop
out
lods
in
jl
cmpsb
stos
cwtl
mov
fsts
in
out
mov
dec
mov
dec
mov
ss
xor
pop
sbb
cmp
jbe
sub
lods
cmp
and
orl
push
xor
and
push
je
arpl
loop
inc
les
cmp
mov
push
sub
iret
inc
shrl
xchg
shlb
adc
push
lret
mov
cmp
lock
push
pop
sbb
xor
loope
mov
pop
xchg
jb
lods
sbb
popf
xchg
mov
xchg
mov
pop
cmp
mov
int
push
mov
sub
or
icebp
sti
mov
and
mov
and
inc
mov
add
ss
cmp
cld
xchg
outsb
ret
cmc
jbe
mov
std
mov
scas
ja
std
xlat
fwait
enter
test
aaa
push
pusha
orb
sbb
rcll
or
lds
mov
sbb
adc
mov
in
or
sub
test
sti
popa
test
inc
popf
sbb
jo
repnz
cmpsl
jmp
sub
mov
aam
ret
aaa
loopne
cmp
in
pop
lret
cs
dec
jb
jnp
cmp
mov
add
fnstsw
or
sub
jb
call
sti
mov
sarb
int3
in
loope
andl
ja
dec
xchg
mov
dec
mov
divl
pushf
push
stos
rcr
stc
ss
adc
cmpsl
jp
mov
ljmp
lret
faddl
push
cs
push
xchg
and
xchg
adc
sub
stos
fadds
xorb
pop
mov
fdivrs
shr
cs
jae
inc
adc
into
mov
clc
push
int3
mov
mov
mov
outsb
dec
rcr
stos
jp
mov
ja
movsl
sbb
mov
cmpsl
cld
sub
xor
jbe
cmp
loopne
mov
push
xchg
in
outsl
mov
sbb
pop
xchg
test
rcr
insb
adc
xchg
add
add
pusha
jne
outsb
mov
movsl
ljmp
and
sub
int
call
mov
push
or
pop
jo
xor
mov
xor
add
or
in
or
insl
push
cmp
iret
push
movsb
in
jl
rcll
jae
mov
out
xchg
daa
pop
jmp
pop
stos
hlt
daa
pop
arpl
xchg
les
jge
decb
into
cmp
mov
stos
jns
mov
out
or
fwait
push
notl
mov
fstps
dec
jbe
jle
adc
ds
sub
dec
insl
fs
push
scas
xlat
loopne
sub
sarb
out
in
jnp
cmp
sub
scas
subb
add
mov
xor
ljmp
mov
movsb
pop
adc
mov
repz
sahf
jmp
dec
fsub
push
mov
popa
out
in
in
and
mov
cwtl
or
repz
cld
jle
out
std
cmp
cmp
fadd
jp
insb
dec
sbb
movsb
dec
movsb
std
enter
daa
ljmp
sub
fnstenv
lock
mov
push
pmulhw
and
repnz
stos
pop
std
push
add
jno
ret
pop
jl
enter
int3
movsb
sub
xlat
adc
cli
mov
icebp
sub
pop
mov
and
ja
inc
add
jmp
xorb
mov
inc
subb
dec
ss
cwtl
imul
xchg
mov
shlb
mov
idiv
repz
push
cmpsb
jl
push
pop
adc
dec
popa
dec
jae
mov
push
cmp
pop
jnp
aam
nop
xchg
sub
jl
pop
imul
mov
pushl
popf
in
mov
mov
shlb
add
mov
sbb
dec
sub
jmp
insl
shll
or
jle
sbb
sbb
imul
dec
popa
sbb
insb
pop
sub
add
add
outsb
mov
in
pop
xchg
repz
mov
lea
movsl
jmp
incb
fwait
pop
out
xchg
lcall
xor
push
roll
add
cmp
dec
loope
xchg
fistpll
jno
inc
pop
pop
into
sbb
push
arpl
xlat
fnsave
jbe
push
push
aaa
fs
dec
mov
repnz
push
cltd
int3
mov
pop
dec
jae
test
cmp
pop
add
xor
add
cs
cld
es
rol
enter
fcmovu
imul
add
fidivrs
mov
addr16
or
sti
loope
xchg
lods
cld
fadd
je
and
dec
addr16
daa
inc
and
xchg
sbb
add
imul
mov
jle
xlat
push
mov
loope
aaa
mov
or
jl
pop
out
jmp
ret
cmpsb
lods
cmp
mov
lds
leave
mov
dec
or
jb
out
mov
jns
es
hlt
push
ss
jmp
outsb
jne
icebp
push
dec
sub
fcmovne
pop
and
or
mov
adc
push
inc
jecxz
jmp
jmp
push
jp
pop
jb
jge
in
stc
frstor
inc
cmc
xorl
test
bound
pop
push
mov
xor
or
aas
ljmp
shll
int3
jle
mov
aam
or
clc
loop
sub
pop
repnz
addr16
sub
push
push
sbb
imulb
inc
cmp
cmp
lds
add
in
and
adc
sbb
xchg
andb
push
and
xor
into
pushf
pop
and
xchg
jmp
push
cmp
pop
cmp
in
outsb
jl
inc
ret
bound
mov
repz
pop
mov
stc
sbb
fldcw
and
jns
mov
inc
pop
lds
mov
lret
fldt
jmp
jne
mov
stc
mov
and
sub
mov
or
xchg
lcall
mov
daa
addr16
ja
fs
push
inc
ss
insb
mov
aam
inc
push
fcmovb
push
adc
out
fdiv
scas
or
cmp
or
rcrl
inc
dec
bound
push
mov
and
fldl
sub
xchg
mov
fstps
sahf
repz
lock
shll
jmp
iret
mov
mov
mov
ja
mov
fidivrl
pop
or
inc
mov
mov
sub
imul
aaa
out
add
addr16
test
add
cmpsb
inc
sbb
out
pop
lahf
mov
cmp
dec
lcall
cmp
shll
xchg
sbb
mov
in
movsl
fidivrs
mov
sub
call
cmp
or
cli
hlt
in
jp
xchg
jge
push
mov
push
mov
xchg
out
adc
dec
mov
repz
es
inc
aad
leave
xchg
jmp
adc
popf
leave
pop
stc
bound
ljmp
sbb
repz
cld
fcomp
mov
sbb
or
pop
sbb
push
nop
or
dec
outsl
mov
jle
sbb
and
push
xchg
xchg
push
pop
dec
fiadds
mov
pop
xor
shlb
dec
in
push
out
popf
add
mov
ss
push
and
fldcw
dec
jle
cmp
xlat
outsl
sbb
test
ficoml
lock
fidivl
fiadds
mov
or
xchg
pop
pop
jns
stos
mov
cwtl
adc
or
sahf
popf
mov
dec
jge
and
pop
fdivrl
xor
icebp
nop
les
test
cli
cltd
cld
loop
loopne
fwait
and
pop
lock
cmp
test
rclb
sbb
xchg
clc
push
lods
sub
jmp
xchg
jno
in
hlt
sub
or
std
mov
test
lods
push
imul
dec
outsb
sti
push
xchg
leave
dec
inc
adc
push
nop
mov
adc
movsl
scas
ja
rcr
push
adc
scas
adc
ss
push
fstpt
iret
pop
push
bnd
dec
das
rcrb
icebp
fcompl
sub
adc
es
rolb
sbb
out
pop
test
pop
loopne
jnp
movb
imul
leave
inc
iret
jnp
inc
dec
inc
push
rcll
adc
mov
pop
xor
test
sbb
xchg
imul
cmpsl
lock
fsts
lock
ficompl
lcall
fs
mov
sub
push
fcmovnbe
jmp
jnp
jl
push
stc
out
add
or
stos
sarl
cli
jmp
mov
loop
bound
pop
mov
dec
jae
notb
hlt
adc
inc
std
mov
iret
inc
push
sub
pop
sub
aas
mov
sub
test
arpl
pushf
roll
fmuls
sub
enter
mov
fldcw
mov
je
dec
dec
inc
xor
imul
sbb
mov
sub
lock
call
sub
xchg
push
push
xor
jbe
xchg
ret
dec
scas
into
test
cli
push
mov
inc
pop
lods
lock
mov
push
mov
inc
push
lods
lret
push
pop
sub
mov
jae
ljmp
add
push
out
enter
negl
fdiv
jnp
insl
jno
or
imul
mov
xchg
inc
icebp
insb
mov
sbb
in
mov
dec
sbbl
adc
insb
jnp
xchg
fistl
xchg
push
iret
mov
insb
adc
push
sbb
incl
aam
cs
xchg
fsubrl
aad
addb
xchg
cmp
cmp
out
mov
imul
cs
outsb
push
jge
iret
jmp
nop
xchg
push
pop
movsl
xchg
sub
push
mov
mov
push
lods
loopnew
daa
js
lret
out
mov
js
adc
sub
outsb
xchg
xchg
js
adc
fwait
pusha
fidivl
jnp
jl
xchg
xlat
or
fnstcw
and
ret
aas
push
jbe
xor
test
outsb
sub
shl
and
cmp
gs
xchg
mov
pop
mov
pop
lods
imul
test
sub
inc
inc
call
and
xor
into
lret
insb
xor
pop
jp
mov
adc
add
int3
add
push
mov
cmp
jnp
arpl
xor
test
enter
cs
jp
inc
faddl
sub
stc
sub
in
das
fistpll
push
lcall
aam
fld
lods
pusha
clc
aam
pop
jb
fstps
divb
jae
and
sbb
jno
sbb
jg
lahf
or
test
in
rorb
pop
out
stc
push
mov
push
pop
jnp
in
push
sub
dec
mov
sar
ss
rcrb
sarb
or
addr16
adc
push
inc
ja
xor
sbb
aam
mov
mov
jmp
mov
push
add
lcall
bound
int
test
jle
adc
xchg
ljmp
mov
aaa
jb
jnp
or
ficomps
or
loopne
hlt
adcl
dec
lods
xor
pop
popa
into
and
lahf
inc
fcoms
aad
lds
dec
inc
push
mov
xchg
mov
pop
stc
out
and
lcall
sub
cmp
outsb
ds
cltd
or
outsl
shr
lods
frstor
lret
sbb
popa
js
ret
shlb
cmp
inc
icebp
mov
sbb
pop
or
filds
xchg
insl
aad
in
or
mov
imul
mov
rol
mov
int
mov
xchg
mov
imul
jp
jl
xchg
rcll
xor
mov
pop
inc
push
dec
dec
xchg
xchg
push
jle
imul
data16
mov
fcomip
sbb
or
pop
sbb
push
aam
pushf
in
mov
and
rolb
int
fdivrs
int3
leave
add
aaa
aad
xor
sub
xchg
pop
jl
hlt
mov
mov
sub
ret
cmp
jecxz
push
pushf
ret
jmp
cmp
ficoml
fstl
jb
jo
dec
js
ja
lcall
pusha
dec
sbb
mull
mov
pop
mov
and
scas
and
mov
gs
enter
cs
mov
popf
lods
dec
aaa
mov
shrb
mov
mov
adcl
mov
scas
call
iret
sbb
addl
or
sbb
std
aaa
push
out
test
fs
mov
jge
cmpsb
je
icebp
pop
sbb
das
aad
add
movsb
pop
cmp
pop
sub
insl
pop
cmpxchg
sub
ljmp
xor
stos
pop
jne
cltd
or
lret
jne
je
inc
dec
xor
jne
clc
mov
xchg
cld
dec
xchg
ss
notl
shll
int3
fcom
mov
mov
icebp
das
ss
and
insl
pop
sbb
inc
sbb
jp
pop
pop
repnz
sahf
push
icebp
fidivs
and
imul
adc
adcb
and
lea
xchg
cmp
mov
add
ljmp
cmpsb
or
mov
inc
adc
mov
shrb
into
cmp
push
subl
flds
jne
outsl
ss
stos
cmp
sub
push
cli
push
jns
aas
jmp
inc
in
pop
arpl
adcb
pusha
push
push
orl
xchg
push
imul
jbe
rorb
sub
fnsetpm(287
push
jbe
inc
or
dec
or
test
imul
ljmp
in
loop
mov
mov
decl
sti
sahf
ljmp
mov
push
inc
mov
pop
repnz
and
es
testb
jnp
pop
aam
js
stos
mov
cmp
pusha
mov
push
xlat
dec
dec
xor
sarb
stc
cwtl
out
mov
mov
fwait
mov
fs
adc
aam
sbb
roll
sbb
cmpsb
mov
dec
cmp
jmp
daa
lock
and
cmp
inc
dec
ljmp
repz
into
es
daa
mov
lahf
das
jg
inc
add
jmp
adc
ret
es
sahf
xchg
sahf
sti
xchg
idiv
or
sbb
push
push
sbbl
mov
sbb
push
pop
inc
in
add
inc
mov
imul
ja
in
mov
int
sahf
ljmp
lds
call
mov
sbb
sub
jb
je
stos
inc
test
js
cmp
subl
add
aas
mov
or
xchg
cmc
add
xor
xlat
or
test
popa
dec
or
idivb
data16
bound
pop
add
inc
jp
dec
and
in
imul
jge
mov
sub
lods
mov
hlt
ret
je
sub
test
lahf
push
pop
pop
mov
jl
lods
xchg
cld
sub
out
push
or
mov
stos
add
jae
and
adc
cmp
and
iret
fcoml
mov
sbb
mov
push
lret
cmc
mov
add
sub
jmp
mov
add
pop
push
fsub
fwait
mov
adc
sahf
ljmp
mov
mov
je
pusha
cmc
inc
and
jno
insb
dec
ror
loopne
in
push
inc
out
es
inc
pop
sarl
sarl
jb
mov
mov
mov
dec
xor
aam
dec
ljmp
es
les
xchg
xor
mov
adc
xchg
sbb
mov
push
adc
sub
ja,pt
sbbl
arpl
mov
sub
inc
lea
push
je
arpl
mov
dec
shll
into
std
cmp
dec
lcall
std
ljmp
cs
clc
inc
sbb
aaa
clc
int3
push
xor
mov
and
mov
inc
sub
aam
in
xor
aaa
xorl
fldcw
cmp
ret
mov
add
xchg
jnp
jb
push
mov
xchg
jg
xchg
mul
scas
xor
mov
ret
clc
iret
in
dec
jge
jle
popa
cmp
mov
std
push
jns
sub
aad
cmp
add
in
xor
call
jg
into
jle
mov
sbb
push
mov
push
fsubrs
sbb
fcmovb
lods
insb
lds
mov
and
sub
dec
mov
cmp
push
int
test
insb
ds
jecxz
ret
fwait
call
jg
cmp
lock
test
cmp
in
cmpsb
aad
out
pop
mov
pop
loopne
movsl
hlt
outsb
rcr
adc
pop
ja
out
and
inc
outsl
mov
out
stos
lock
or
or
cmp
inc
jae
pusha
xchg
push
in
sub
test
xor
dec
mov
icebp
insl
iret
ret
pop
lret
sub
cmpsb
cmp
jle
xchg
mov
xchg
adc
or
ds
mov
fdiv
cmpsl
jns
jo
xor
jle
pop
xchg
sbb
push
pop
lods
mov
dec
dec
out
cmc
rorb
repnz
cwtl
xor
mov
fwait
test
jb
mov
scas
adc
push
xor
mov
mov
loopne
adc
loope
idivb
fisttpl
daa
jmp
cmp
jns
mov
cltd
imul
popf
aam
xlat
lods
cmp
scas
mov
movsb
jo
lods
and
xor
fs
loopne
imul
sti
je
sbb
das
lcall
push
ret
jno
fdivs
inc
mov
cmc
sbb
das
mov
imul
mov
mov
pop
xchg
mov
in
imul
clc
mov
inc
mov
mov
sub
scas
sbbl
mov
mov
test
test
sub
cli
bound
loopne
push
mov
inc
sti
aaa
or
lods
add
movsl
icebp
pop
lds
push
loop
ss
shl
fwait
daa
add
or
rcrb
into
xlat
pop
fcmovnbe
ficoml
xchg
jns
stc
mov
lds
dec
add
in
and
popf
mov
push
out
loopne
add
mov
push
jl
and
nop
inc
fistpl
cli
pop
fildl
jmp
fsubl
adc
fidivrl
bnd
dec
int
sub
std
push
dec
sub
xor
inc
test
test
add
rcrb
inc
adc
mov
sti
sarb
std
cli
insb
cs
and
and
jnp
fcoml
mov
cmpsl
or
pop
mov
dec
or
add
or
xchg
jae
lret
jg
lret
jg
out
inc
outsl
repz
incb
ss
add
push
adc
xor
cmp
sub
repz
test
loopne
or
xchg
in
addl
pop
mov
out
ljmp
sub
sbb
dec
push
jno
jle
lret
popf
testb
add
cwtl
cltd
stos
or
or
call
mov
mov
call
push
lahf
xchg
xchg
jp
mov
cmc
fwait
scas
mov
adc
mov
out
aaa
sub
adc
dec
hlt
add
inc
clc
xchg
push
andb
cmpl
icebp
lahf
jae
scas
aam
arpl
enter
push
sub
fists
mulb
dec
sbb
inc
jge
jno
test
jle
into
xor
imul
jo
sahf
mulb
push
vmread
fcmovne
lret
adc
or
addr16
repz
pop
cld
xor
jle
pop
mov
inc
add
pop
dec
sbb
sbb
push
jae
dec
pop
ret
lahf
scas
mov
cmp
xchg
inc
sub
arpl
sbb
sub
jns
or
jns
es
in
push
movsl
jmp
jl
jmp
inc
scas
jle
xor
lret
aad
insl
push
cmc
fsubl
dec
or
adc
jecxz
or
cmpb
dec
insb
test
mov
arpl
mov
and
inc
dec
pop
mov
loop
push
cwtl
vsubpd
mov
sub
pusha
fildll
fs
jb
and
fmul
stc
add
out
mov
orl
popf
ja
push
outsl
mov
imul
sbb
mov
xorb
mov
jp
jno
inc
loop
out
jge
dec
je
or
adc
inc
cwtl
out
push
xor
stos
and
shll
adc
nop
cmp
dec
outsb
movsb
cmp
jle
inc
add
sub
dec
ja
push
scas
lock
sbb
inc
sub
add
xchg
push
mov
dec
dec
cmpsb
das
out
pop
ret
cmp
xor
es
sub
stos
out
inc
sub
cmpsl
repnz
inc
mov
int3
addr16
sbb
call
pop
sub
mov
cs
push
or
sub
hlt
push
sbb
pushf
and
lahf
shrl
inc
es
mov
mov
shll
sbb
shll
call
lods
daa
mov
mov
shrb
mov
in
stos
push
and
out
xlat
jno
arpl
adcb
pop
insl
aad
jne
rclb
mov
pop
loop
into
adc
dec
sbb
and
jle
repnz
dec
pusha
fwait
or
loopne
mov
sbb
mov
pop
jg
mov
cmp
std
inc
mov
arpl
loope
pop
fwait
add
stos
arpl
idivb
lods
mov
jnp
inc
and
mov
cmc
pop
lods
cmpl
add
mov
inc
movsl
pop
cmp
cmc
lds
test
pop
inc
inc
shrb
shr
pusha
mov
and
mov
cmp
add
cld
out
add
js
push
xlat
dec
mov
inc
mov
lds
or
mov
test
pop
enter
or
cld
inc
xlat
mov
dec
sahf
jl
addr16
int3
in
inc
sahf
dec
xchg
inc
stos
int
fistl
mov
mov
adcb
cmp
cmpsb
test
inc
cltd
test
push
insb
jp
jge
jecxz
mov
cs
lea
sbb
xor
idiv
enter
sub
cmp
jge
mov
stc
add
add
xor
arpl
scas
mov
les
mov
xchg
sub
insl
dec
dec
icebp
add
pop
lret
cmc
imul
mov
fistpl
stos
test
std
jnp
lea
testl
loop
inc
pop
mov
fisttps
data16
xchg
les
adc
outsb
gs
and
outsl
dec
js
sbb
push
daa
pop
push
imul
push
add
and
xor
pusha
cmc
add
jb
mov
add
andl
movsb
and
addl
add
and
jae
stos
pop
iret
shl
push
shll
inc
inc
pop
push
out
xchg
pop
sahf
outsb
mov
push
inc
pop
je
push
shld
ja
mov
pop
test
call
cmp
imul
lods
mov
cli
lret
rcl
out
fistpll
xchg
js
add
dec
mov
call
sbb
jns
push
cli
push
mov
inc
xorb
insb
jge
andnps
xor
decb
in
push
or
arpl
cmp
inc
lods
adc
add
dec
dec
push
scas
insb
cwtl
mov
in
lcall
icebp
mov
add
pop
xchg
push
and
sub
sub
mov
jne
mov
or
mov
rcl
pop
shrl
inc
inc
ja
add
mov
lods
inc
inc
push
sarl
xchg
push
sub
test
or
mov
lods
fcomi
fidivrl
sbb
cmp
ret
fs
pop
sub
lahf
fstpl
rorl
mov
adc
xlat
ret
movsb
mov
mov
out
mov
mov
movsl
ss
pop
bound
loope
xchg
jmp
push
cmpb
dec
movsb
mov
mov
push
or
or
scas
lretw
ss
out
sbb
add
push
jmp
adc
cmp
add
jb
frstor
inc
sub
cs
mov
aas
jno
pop
enter
movsl
sarb
mov
daa
mov
das
inc
das
lock
jmp
fistps
fisttps
divl
pop
pop
test
out
inc
add
test
movsl
dec
hlt
sahf
and
mov
in
out
lcall
jno
push
xchg
push
hlt
push
aad
imul
push
jmp
sub
jle
adc
fwait
je
cli
xor
dec
add
mov
add
mov
lcall
imul
cs
out
scas
cmpsl
pop
dec
cmp
cmp
mov
lcall
pop
int
dec
ficomps
je
xor
jmp
push
movsl
jae
and
insb
rcll
out
pop
in
int3
shll
out
pushw
cli
or
lret
rorl
mov
or
xchg
fs
movlps
dec
jl
and
andb
jae
out
cmc
mov
mov
inc
xchg
pop
stc
pop
sbb
dec
pop
fadds
jmp
cwtl
repz
xchg
xor
sti
shl
mov
cld
lock
adc
cmp
lcall
pop
dec
outsl
adc
fwait
dec
mov
mov
pushf
inc
adc
cmp
mov
mov
xchg
dec
orl
jo,pn
xchg
cld
js
inc
inc
mov
xchg
mov
pop
jecxz
sbb
jnp
clc
mov
lcall
push
cmpsl
mov
mov
int
aaa
iret
push
jae
cmp
mov
and
out
movb
and
fisttpl
imul
aam
xor
push
daa
push
scas
adc
scas
out
addl
pop
mov
and
adc
orb
movsb
stos
inc
and
adc
sbb
add
clc
nop
fwait
lds
adcb
jp
add
sarb
and
push
test
insb
mov
cmp
adc
xchg
hlt
cmpsb
sarl
imul
or
cmp
ljmp
lahf
mov
cmpb
fscale
pop
clc
jge
call
test
sbb
push
addr16
jne
mov
es
lods
ja
pop
sbb
mov
xchg
flds
movsb
mov
sbb
cmp
push
jbe
jecxz
arpl
movsb
insb
cmp
cld
jl
dec
dec
enter
dec
loop
xchg
stos
fcompl
xor
les
ret
xchg
enter
aaa
mov
add
rorb
and
dec
xchg
lahf
aas
repz
cmpsb
mov
add
pusha
call
push
jl
jnp
cmp
arpl
xchg
in
scas
ret
sub
test
push
mov
lods
cmc
into
cmpb
lock
sbb
push
xlat
pop
sar
mov
or
mulb
outsb
fldt
xchg
and
daa
xor
test
xchg
testb
jl
adc
pop
push
sub
xchg
clc
lods
push
cmc
push
ret
sub
das
test
jno
aam
inc
push
xor
es
fidivrl
js
sbb
loopne
inc
int3
lcall
nop
out
mov
mov
stos
addr16
xchg
ljmp
and
nop
sub
call
or
pop
add
jns
push
and
loopne
js
pop
inc
xchg
sti
arpl
xchg
sub
push
inc
xlat
sub
das
push
ficomps
pop
push
negl
cmp
dec
mov
dec
or
testl
negl
push
xchg
lahf
cmp
lods
ret
mov
jns
jo
inc
fiaddl
xor
sub
imul
xchg
fstpt
int
stos
std
add
mov
xchg
adc
sbb
int
nop
dec
mov
int3
sbb
xor
jp
pop
into
mov
in
sub
push
js
or
add
cmp
aas
movsb
mov
pop
call
or
repz
or
test
icebp
mov
mov
jecxz
call
jo
ljmp
cmp
imul
loopne
out
mov
pushf
scas
jo
imul
pop
mov
mov
mov
aam
dec
push
in
gs
or
ret
mov
push
sub
in
xchg
stos
scas
insb
inc
sbb
fisubs
lods
lret
pop
in
push
pop
inc
jnp
sub
aas
loope
fwait
add
and
imul
filds
jmp
fimuls
int
shrl
mov
lods
pop
das
out
test
mov
and
stos
jle
arpl
aam
lcall
sub
jne
push
sub
jae
cmp
xchg
mov
cli
aad
pop
les
in
stc
push
andb
sub
cmp
or
lock
mov
into
stos
xor
or
sahf
scas
pop
leave
aam
add
jle
icebp
shl
xchg
lea
xor
cli
or
inc
mov
adc
push
aam
push
dec
xchg
popf
enter
jo
jp
dec
lods
sub
orl
rolb
enter
mov
lods
add
sbb
loope
pop
and
push
sbb
loope
in
aas
out
mov
dec
adc
push
neg
push
iret
cmp
int3
mov
xchg
ret
jge
notl
sahf
mov
push
fwait
int3
adc
and
cmp
cmp
add
or
icebp
pop
xchg
or
addb
dec
push
mov
sahf
cld
movsl
ss
dec
cmp
and
cmp
repz
mov
mov
fiaddl
scas
sub
and
imul
ret
rorb
inc
xchg
push
fldenv
f2xm1
inc
dec
dec
outsb
addl
rorb
daa
test
outsl
cmpsb
push
sahf
sub
or
es
ljmp
mov
or
push
loope
ljmp
jp
aam
jmp
sbb
fcmovbe
jmp
pushf
jg
jge
jl
inc
xor
xchg
cld
pop
or
xchg
lea
pop
fdiv
inc
leave
addr16
into
pop
sub
pop
jecxz
sub
insb
call
mov
xchg
or
mov
mov
push
lret
arpl
push
dec
xor
faddp
xchg
pop
cmp
jnp
and
mov
fistpl
xchg
into
jg
mov
mov
push
pop
dec
push
in
and
in
mov
cmp
fldcw
loopne
and
call
mov
add
es
arpl
adcb
gs
sub
sbb
imul
mov
inc
loopne
pop
pop
dec
stc
rcrb
imul
inc
cltd
inc
mov
lea
mov
popf
mov
sub
call
outsb
lahf
imul
dec
test
fidivl
call
insb
jb
jnp
push
sbb
mov
xchg
lret
xchg
jne
sbb
cmpsl
inc
cmp
cmp
imul
or
movsb
jge
jns
pop
int3
sti
dec
mov
into
jb
or
mov
mov
aas
pop
scas
xchg
mov
decl
adc
psubusw
addr16
push
shrl
sbb
or
fldcw
sbb
aaa
les
lcall
mov
pop
hlt
lahf
pop
add
cld
lods
mov
adc
sbb
mov
fs
ds
pushf
pop
out
sub
lds
lcall
nop
in
pop
movb
nop
dec
cmp
jne
adc
dec
add
push
adc
movsb
das
insl
arpl
sbb
mov
scas
push
and
inc
test
mov
jae
push
push
stos
cwtl
out
sbb
pusha
sbb
divl
mov
push
pusha
fmull
loope
in
xchg
and
lahf
xlat
jmp
es
cmp
ljmp
subl
jle
sub
leave
movsl
rorl
faddl
int3
in
mov
add
push
sti
cli
outsb
push
sbb
in
sub
dec
js
mov
pop
xor
aas
dec
jle
popa
mov
jbe
aaa
xor
idivl
mov
shrb
mov
xor
je
xor
inc
xchg
mov
sub
repz
xor
loop
dec
fnsave
push
inc
cld
cld
pop
pop
inc
cmc
jl
ret
dec
or
xor
popf
aam
jmp
movsl
push
mov
xchg
xchg
jnp
lock
xchg
sub
lcall
scas
inc
xor
pop
sub
or
jge
pop
rcl
jle
xor
rorl
pop
mov
xchg
ret
gs
dec
cmc
imul
addr16
mov
cmp
push
in
aas
mov
push
fsts
adc
daa
stc
jge
xchg
fidivl
push
mov
std
inc
jno
cli
incl
jecxz
xor
addr16
fildll
mov
push
popa
test
dec
movsb
lods
fidivs
lods
fs
stos
or
mov
add
out
xorb
fidivrl
mov
test
inc
pop
jnp
fbld
push
out
imul
aaa
push
mov
lods
cltd
mov
mov
sbb
xchg
xorb
mov
rolb
insb
xor
je
int
jo
and
jmp
test
in
call
xchg
test
mov
mov
xor
or
into
mov
stos
imul
xorb
xor
rclb
sbb
ret
mov
repz
call
sub
dec
cmp
and
loopne
arpl
cmp
mov
xchg
xor
fisubrl
mov
push
add
and
mov
jno
hlt
sahf
cli
out
jb
and
mov
data16
jnp
xchg
push
jl
fcomp
dec
shll
sub
add
add
push
mov
cli
mov
push
sbb
pop
enter
mov
xor
push
cmp
or
mov
dec
dec
mulb
inc
fnstsw
insb
xchg
xchg
ds
jge
daa
sbb
pop
inc
pop
out
mov
int3
mov
aam
pusha
xlat
cmpsl
xor
fwait
xchg
lret
je
inc
test
iret
icebp
rcll
popf
mov
es
pop
insb
dec
adc
jns
jno
daa
fst
xor
clc
pop
repnz
dec
inc
stos
arpl
shlb
pop
inc
aas
fnstenv
iret
jo
cs
push
clc
pop
sbb
sub
xor
idivb
cmp
jmp
mov
pop
xchg
pop
jne
jmp
and
inc
mov
cmp
iret
pop
cmp
shrl
push
or
jns
pusha
cmp
cwtl
pop
fwait
iret
sub
dec
into
icebp
cmp
leave
mov
outsl
xchg
pop
in
lahf
and
lods
inc
cmp
negw
adc
fistpll
cmp
ret
sub
and
cmc
mov
adc
jp
mov
xchg
pop
js
sbb
pop
jns
or
push
sub
test
or
js
andl
aas
push
mov
bound
push
imul
or
cli
or
out
pop
mov
cmp
nop
inc
xchg
sbbl
arpl
sub
and
mov
push
add
enter
jl
or
idivl
sbb
test
call
push
insl
movsb
mov
push
outsb
addb
incl
adc
and
pop
mov
lret
adc
push
fwait
rcrl
mov
adc
loop
mov
sub
push
stos
sub
inc
push
add
mov
adc
jae
shll
cld
pop
lods
icebp
es
or
aam
dec
inc
imul
lcall
add
pop
repnz
ljmp
jo
idivb
jae
lcall
pop
mov
fimull
imul
xchg
inc
bnd
or
xor
jg
or
mov
inc
cmp
mov
xchg
xor
cmp
fisttpl
andl
xor
xor
imul
shl
xor
ficompl
cltd
cmp
insb
push
cld
mov
jbe
push
jb
sub
push
xor
mov
inc
xlat
fs
mov
lock
shr
dec
adc
call
sub
enter
adc
cs
stos
notb
int
mov
test
cwtl
ja
cmp
imul
stos
add
cwtl
stos
dec
fists
adc
jmp
jl
adc
inc
int3
add
mov
pushf
call
jmp
pop
out
and
icebp
repnz
inc
cwtl
jg
dec
mov
mov
sub
fimull
pop
hlt
inc
cs
sub
insl
mov
fcoml
cwtl
mov
xor
in
fbstp
ficoms
cmp
fdivr
mov
push
int3
mov
xor
dec
repz
mov
xor
sahf
fsubl
repnz
mov
pusha
fmull
fsubrp
shrl
cld
out
inc
push
mov
ja
test
ljmp
push
add
mov
push
mov
push
xor
cmp
or
add
test
pop
jmp
dec
lcall
adc
popf
or
int
xchg
mov
and
ret
add
push
push
mov
popa
or
jae
popa
cwtl
add
jmp
cmpsb
in
xchg
fcomp
pop
addb
push
js
dec
sbb
data16
loopne
push
lods
push
push
pop
cmpsl
rcrb
lahf
lret
xchg
xor
cs
mov
outsb
push
stos
add
insb
and
cmp
adc
arpl
loopne
or
scas
imul
fldl
xlat
imull
adc
add
and
dec
add
rcrl
aas
mov
xchg
push
mov
insl
cltd
cld
dec
mov
xor
xchg
pop
xor
pop
insl
pop
sbb
jle
shl
mov
out
icebp
imul
and
imul
cld
xor
cmpsb
dec
aaa
clc
mov
mov
cs
push
test
in
cmpb
adc
xor
gs
jle
scas
cmp
dec
out
xlat
add
daa
ficoms
sbbb
inc
jg
xlat
mov
xchg
push
aaa
and
push
lods
jb
loopne
ret
iret
insl
insb
fisttpl
outsl
repz
fnstenv
cwtl
push
xor
jmp
jb
lret
popf
mov
mov
inc
inc
out
cmp
insb
mov
int3
dec
aas
ret
out
pop
stc
sbb
sub
mov
jle
jp
jmp
lods
xor
test
cwtl
cmp
mov
jns
xchg
adc
fs
sbb
xchg
pop
sti
adc
in
fcmovb
les
push
daa
bt
xchg
andb
jbe
mov
pop
movsb
jecxz
mov
imul
arpl
adc
ja
add
xchg
ret
xchg
daa
pop
mov
jne
ja
nop
pop
fcomps
xor
sti
sub
pop
test
negl
jo
mov
mov
jno
jecxz
cs
icebp
cmp
sar
outsb
icebp
mov
push
xchg
lahf
out
push
adc
enter
cwtl
cmpsl
insb
insl
pop
out
sub
rcrb
dec
sbbb
inc
adc
lret
sbb
cmpsl
roll
sbb
jmp
jbe
fiaddl
fidivrl
push
shll
mov
rolb
ret
inc
in
xchg
shrb
das
dec
cmpsb
icebp
in
lcall
fldenv
cmp
lods
pop
sbb
lock
lea
push
gs
loope
ljmp
xor
mov
mov
jno
popf
sbb
xlat
clc
jg
sub
dec
stos
xchg
sub
test
add
icebp
or
fsub
or
adc
dec
add
shlb
sbbb
rorl
std
jp
faddl
out
mov
and
mov
jl
dec
lcall
dec
aaa
push
mov
test
scas
popa
cmc
repnz
or
xor
in
push
jg
pop
imul
xchg
or
in
mov
add
add
int
aaa
lods
out
cmpsl
ret
ds
adc
jecxz
test
outsl
mov
idivl
aam
rcl
dec
lret
xchg
ja
jns
into
mov
in
aas
js
stos
jge
notb
push
cs
test
mov
in
inc
add
push
pushf
ljmp
outsl
push
and
mov
mov
or
mov
es
push
lods
jecxz
sub
pop
sub
mov
adc
jg
in
loopne
loope
jne
stc
fldt
or
loop
mov
outsl
add
inc
inc
call
mov
das
nop
dec
mov
dec
jl
jg
jge
andb
std
and
mov
mov
enter
les
cmp
mov
daa
push
mov
mov
mov
and
sub
or
cmp
xchg
jecxz
pop
into
add
adc
add
hlt
mov
ret
sbb
pop
mov
rorb
cltd
cli
xchg
mov
cmp
aam
enter
push
fldenv
sub
js
or
sub
mov
cmp
and
lcall
or
push
lds
inc
sub
aad
dec
inc
rcr
and
push
inc
movsl
xlat
pop
cmp
adc
mov
push
out
add
repnz
jbe
push
aam
mov
jb
push
leave
push
mov
icebp
pop
mov
mov
fnsetpm(287
xchg
mov
jmp
xor
lcall
or
and
ljmp
imul
jae
mov
xor
push
clc
add
je
imul
push
jecxz
push
dec
movsb
ret
shl
std
sbbb
popf
or
into
jmp
push
cmp
push
shll
rcll
pop
jg
sbb
push
xchg
popa
rcrl
sbb
popf
cmp
scas
push
push
icebp
mov
int
mov
adc
roll
lods
fdiv
leave
jge
pop
xor
lret
add
jns
xchg
xor
xchg
cli
jns,pn
cs
stos
mov
xchg
dec
test
xchg
jle
mov
mov
outsb
sub
lret
mov
mov
insb
cwtl
xor
stc
add
lds
pop
inc
xor
add
in
add
ficoms
sbb
xchg
xchg
inc
mov
dec
add
movsl
mov
lods
popa
cwtl
dec
bound
pop
add
loopne
and
cmp
outsb
addr16
xor
sub
jb
xchg
pop
mov
sbb
in
pop
dec
mov
lea
repz
das
imul
cmp
mov
mov
insb
jmp
repz
push
dec
sub
addr16
sub
shrb
jmp
fwait
mov
push
xchg
dec
jns
mov
daa
faddl
push
lods
mov
sarl
add
mov
iret
dec
jo
add
ret
mov
jae
cmp
or
test
insl
push
es
mov
enter
sub
cmc
lret
rcrl
aad
mov
mov
push
jae
and
jo
pop
pop
test
push
std
inc
fidivrs
push
or
or
sbb
jo
inc
or
jns
pop
les
xchg
nop
icebp
mov
icebp
fidivrl
shl
push
or
lds
pop
loopne
mov
add
mov
pop
loop
sub
pop
pop
xor
and
or
iret
cltd
shrb
pop
loope
or
adc
adc
stc
jge
popf
js
adc
dec
mov
into
xor
xlat
bound
or
pop
mov
add
outsl
sbb
sbb
jno
adc
mov
arpl
fwait
dec
cmpsb
in
adc
mov
movsb
fsubs
jae
addr16
movsl
clc
adc
add
mov
adcl
mov
fsts
js
sub
push
jmp
add
mov
dec
dec
adc
out
mov
icebp
fistl
idivb
xor
jns
addr16
jae
push
scas
dec
inc
cmp
jl
mov
xor
ljmp
in
adc
pop
or
pop
subps
adc
add
inc
int
fldenv
xor
adc
adc
cmp
sti
add
mov
sub
dec
mov
mov
mov
cld
scas
cmp
rcll
mov
rolb
and
jecxz
aam
hlt
mull
stos
jle
rcrb
xchg
fs
in
pop
adc
repnz
sbb
seto
testb
and
scas
add
adc
jbe
pop
into
out
xor
aad
rcll
inc
and
or
xchg
mov
xchg
inc
shr
jo
cs
or
cmc
packssdw
xor
xchg
addb
cs
xchg
xor
es
insl
xchg
fwait
mov
inc
push
fsubs
push
xchg
mov
enter
add
fwait
inc
mov
enter
push
or
adc
adc
or
loope
clc
or
jge
iret
ss
push
jnp
sbb
dec
mov
push
lea
xchg
mov
aaa
push
sti
mov
scas
into
hlt
ret
xchg
fwait
and
pop
xor
addr16
sbb
dec
jl
xchg
das
gs
cltd
ja
repnz
dec
adc
pop
shl
xlat
daa
sub
lods
call
stos
inc
lcall
aaa
add
cld
mov
fmuls
out
loop
sti
fisubrs
in
leave
hlt
dec
aaa
sti
push
inc
xor
ljmp
fisubrl
test
out
imul
call
test
inc
int
push
dec
sub
in
scas
sarl
jle
adc
or
js
clc
xor
jb,pt
sub
and
add
cld
dec
test
or
sbb
cli
jmp
and
aaa
mov
lahf
fs
push
pop
lds
in
inc
sahf
push
scas
jne
into
mov
push
stos
or
je
push
push
xchg
pop
cmp
sbb
es
mov
rorb
cmpsb
gs
jno
faddl
movsb
arpl
inc
sahf
test
roll
cmpsl
call
dec
test
pushf
aam
cli
outsb
mov
cmc
mov
inc
inc
or
stos
arpl
mov
in
mov
add
imul
pop
repz
popf
cmp
xlat
dec
scas
sahf
cmp
add
nop
or
mov
jno
pop
decb
cmpsl
arpl
fidivs
ljmp
and
and
add
addr16
dec
lods
pusha
insl
sti
test
inc
xor
jo
and
mov
outsl
mov
ret
roll
insl
dec
sbb
popf
jecxz
es
push
psubd
dec
pushf
and
cwtl
stos
dec
dec
dec
popf
cmp
push
or
push
not
mov
test
fs
cmc
adc
adc
out
dec
jae
das
pusha
cs
push
cmc
mov
cmp
js
push
add
dec
mov
stos
js
addr16
adc
fwait
push
dec
int3
gs
loopne
rcr
push
mov
icebp
adc
dec
arpl
adc
jne
cwtl
inc
xchg
or
cmp
aad
rcrl
cltd
sbb
and
fs
test
add
adc
adc
jge
sahf
sub
hlt
out
je
fiadds
and
push
jge
std
mov
mov
jle
jae
cltd
js
or
repnz
int3
xchg
sbb
inc
sub
mov
lods
or
stc
inc
adc
sbb
jns
dec
imul
mov
cmp
rcl
int
lret
sbb
out
inc
ret
dec
cmpsb
mov
lock
shr
addr16
pop
push
inc
pop
and
lea
inc
adc
int3
in
add
xchg
dec
dec
movsl
sti
inc
xchg
cmp
rclb
inc
cmp
lret
jb
ret
jne
gs
nop
sbb
inc
lds
mov
pop
pop
mov
mov
lods
pop
sub
adc
add
pop
push
pop
cmp
ss
outsl
jg
out
push
xchg
test
std
mov
stc
sti
jb
aam
test
movsl
pusha
dec
mov
or
inc
cmp
adc
mov
dec
lds
outsb
inc
out
lds
jb
xchg
test
ja
in
mov
outsb
aaa
out
lret
sub
icebp
jmp
mov
push
lds
aam
xchg
inc
cld
mov
popaw
add
xor
les
ss
xchg
insl
xchg
mov
icebp
dec
jae
test
pusha
or
xor
push
dec
ret
inc
inc
push
sti
add
aaa
jmp
pop
adc
sbb
add
loopne
lds
dec
and
sbb
jmp
jae
ljmp
mov
scas
push
rcrb
in
sub
loop
test
in
adc
sbb
jmp
imul
mov
jnp,pn
repz
add
mov
pop
push
mov
jb
inc
push
std
subl
pop
fsubrs
addr16
fs
push
je
lods
faddl
mov
movsl
jbe
fwait
push
jecxz
pop
lods
pop
pop
mov
cmp
sub
lret
dec
repz
std
mov
outsl
imul
aas
push
xchg
add
xchg
xor
sub
or
add
xchg
enter
sbb
int
xchg
nop
out
cmp
cmc
dec
sahf
xchg
cmc
cmp
aaa
push
xor
push
das
push
sub
xchg
pop
mov
xor
enter
ret
jp
stos
push
add
ljmp
dec
out
push
xchg
sbb
sub
push
shlb
movsb
push
adc
outsb
jp
inc
inc
test
cmp
sub
movsb
pusha
adc
in
and
push
add
and
out
es
and
or
lret
test
inc
outsl
mov
iret
sbb
data16
fidivrl
push
xchg
mov
ja
sti
test
jb
sbb
int3
xchg
add
out
adc
inc
add
ss
call
out
inc
data16
int
add
sahf
dec
shlb
enter
into
adc
pop
sub
cmp
sar
roll
fstpl
dec
mov
sti
cmc
dec
lret
std
fld
out
or
sub
jle
movsl
xor
xor
out
movsl
dec
mov
xchg
push
jns
push
js
jecxz
cld
add
xchg
jno
or
cwtl
pop
inc
lret
mov
insb
mov
adc
mulb
pop
sub
push
inc
addr16
dec
adc
push
lods
into
outsb
adc
mov
rorl
imul
out
aam
adc
outsl
mov
or
mov
or
lods
mov
inc
sub
notb
mov
adc
mov
stos
xchg
pusha
sbb
mov
mov
jae
sbb
dec
ret
push
cmp
pop
cli
sub
sahf
jnp
jecxz
and
dec
push
jp
inc
insl
jg
push
xlat
pop
push
shll
dec
jl
jno
xor
dec
sahf
stc
mov
add
popa
add
mov
fsubr
push
aas
hlt
cld
in
inc
xor
sbb
xchg
mov
xchg
dec
out
pop
adc
hlt
icebp
cmpsb
adc
cld
fdivrl
int3
les
sbb
jmp
test
mov
or
inc
and
enter
push
scas
test
lds
xchg
shll
call
sub
testl
jge
and
mov
lcall
inc
lret
sti
or
add
or
stos
fcmovnb
negl
insl
push
clc
imul
push
js
adc
ljmp
jle
andb
mov
lock
sbb
iret
pop
xchg
sub
call
or
mov
repz
fsubr
inc
inc
hlt
and
jp
aaa
mov
repz
push
xchg
int3
aaa
inc
jae
outsb
lods
dec
mov
lods
orl
and
pop
sub
adc
mov
or
inc
jecxz
out
jnp
mov
cmpl
lock
pop
sbb
add
cmp
pushf
and
push
andb
out
pop
mov
mov
mov
mov
add
pop
push
movsl
adcb
pushf
ljmp
pop
scas
aad
test
outsb
jl
stc
cmp
fdivs
stos
fists
or
inc
mov
outsb
lock
cmp
xchg
movsb
std
jnp
mov
iret
jl
inc
pop
sub
call
dec
aas
aas
imul
pop
jp
andl
dec
orb
out
test
push
jo
and
insb
inc
xchg
pusha
imul
sub
gs
leave
push
add
outsl
arpl
sub
pushw
lahf
scas
inc
jbe
and
add
imull
popa
cmp
dec
pop
xor
jnp
or
mov
cld
sbb
movsl
and
sub
xor
xor
lods
mov
in
into
test
mov
pop
jnp
add
repnz
in
dec
lret
add
faddl
je
aas
insl
xchg
pop
and
inc
push
nop
adc
add
or
dec
adc
lahf
loop
je
sub
jne
test
pop
mov
lock
inc
cmp
fsts
lret
shll
sahf
jl
or
les
aam
std
popa
xor
lods
xchg
js
test
cli
rclb
mov
inc
push
dec
or
icebp
sub
imul
inc
aaa
jl
call
aad
icebp
pandn
je
inc
repnz
out
int
mov
cmpsl
jne
jp
mov
mov
scas
adc
into
or
cmpsb
push
fs
mov
in
push
das
data16
gs
mov
iret
and
inc
rol
mov
jge
and
dec
mov
decb
mov
gs
sub
test
sbbb
insl
or
in
inc
in
jmp
rcrb
lret
xchg
xchg
cmp
pop
lds
call
inc
sbb
push
xor
pusha
sbb
incb
imul
cmovp
je,pn
data16
pop
fstpt
pop
and
sub
mov
bound
xchg
cmpsl
jne
mov
jno
repz
inc
fisttps
xchg
fisttps
xchg
movsb
cmp
and
arpl
out
mov
mov
arpl
negl
or
enter
cmc
fistl
leave
int
push
pop
mov
sti
xchg
mov
fwait
add
pusha
aas
push
jl
mov
sub
fstl
orl
pop
out
addr16
shrb
cwtl
loop
mov
and
xchg
mov
inc
mov
add
push
cld
or
xchg
cmp
jne
mov
sub
cmp
out
aad
sub
dec
pop
cmp
pop
sar
jg
les
sti
fstps
lods
lods
js
jae
mov
jg
popf
ljmp
jnp
add
mov
jb
mov
inc
xor
in
jg
dec
mov
ret
cwtl
fs
add
sbb
and
inc
mov
pusha
jmp
jecxz
sub
out
cmp
xchg
cli
out
xchg
inc
mov
je
inc
daa
ret
dec
data16
out
int3
or
mov
lods
xlat
mov
inc
xchg
xchg
mov
out
mov
add
dec
data16
fs
in
push
loop
sub
adc
addr16
add
sbb
sub
mov
mov
in
pop
arpl
dec
fxam
push
inc
pushf
shlb
add
sbb
mov
adc
push
fidivrs
fldl
stc
xlat
mov
loopne
add
je
add
sbb
inc
bound
sub
data16
cmpsb
cmc
or
sub
negl
mov
pop
jge
je
and
jno
adcl
clc
outsl
scas
xchg
flds
sbb
jle
sbb
dec
scas
cmpsb
popa
jne
fwait
daa
outsl
fsts
cwtl
xchg
outsb
add
ja
mov
fs
jnp
add
divl
ret
nop
test
cmp
pop
enter
sbb
loopne
stc
cltd
mov
loope
pusha
pop
push
sub
cmp
mov
daa
test
dec
test
jl
cli
pop
sbb
xor
add
or
repnz
mov
out
dec
out
and
rcr
dec
push
jno
push
scas
xchg
fcomps
sub
sbb
inc
sbb
adc
sbb
dec
sbbb
xor
aaa
inc
push
insl
rclb
icebp
cld
pop
fnstsw
dec
mov
cmp
jne
or
nop
nop
lock
xchg
mov
outsb
mov
test
xor
mulb
shlb
aas
and
pop
aad
adc
sti
push
adc
fcomps
lods
mov
inc
cltd
adc
mov
lret
push
pop
icebp
mov
test
aam
xchg
pop
xor
and
add
test
xchg
pop
sub
add
sub
mov
lahf
das
fimull
and
inc
push
xchg
inc
imul
dec
dec
mov
out
jno
shll
cmp
lds
test
pushl
cmpsb
es
jg
in
push
loope
adc
xor
fnstsw
les
outsl
adc
cmp
pop
sbb
cld
push
std
in
lret
lock
push
cmp
dec
jo
in
data16
sub
xchg
xchg
fmulp
sbb
es
es
xor
notb
pop
lret
out
clc
mov
iret
int
ja
push
incl
mov
jns
jnp
xor
mov
pop
and
nop
or
adc
ret
push
out
aad
ljmp
dec
sub
ljmp
push
push
lock
sub
cmp
popf
xor
aas
sub
in
sbb
incb
cltd
or
inc
cmp
jge
xor
dec
roll
cmpsb
jnp
mov
jnp
pop
jmp
xchg
lret
outsb
stos
sub
movl
fsubs
sub
movsl
shlb
push
mov
movsb
subl
cmp
or
popa
or
dec
jo
push
or
pop
sbb
imul
clc
outsb
insb
mov
sbb
and
pop
fmull
ret
xchg
fistpl
movb
out
or
and
inc
sarb
shlb
push
pop
adc
cs
and
cmc
fadds
outsl
lock
insl
push
cmc
test
lods
gs
xchg
cli
push
ljmp
mov
jge
leave
es
jmp
mov
gs
pop
es
inc
mov
pushf
movsl
out
int3
rorl
lea
add
xchg
fisttpl
daa
mov
and
out
add
or
dec
jmp
or
mov
sar
ret
and
cmp
jge
mov
in
mov
repz
rclb
jmp
jmp
dec
ja
je
sbb
testb
fldt
pop
xor
mov
push
andb
jmp
out
aas
or
outsb
vsubsd
pop
int3
dec
ja
add
stos
lods
or
mov
mov
repnz
adc
test
inc
push
xlat
js
in
in
jno
push
and
inc
xchg
jo
xchg
sub
pop
sbb
adc
lock
in
mov
cmp
rolb
mov
pushf
mov
std
dec
sbb
pop
daa
inc
addr16
lahf
lds
std
cmp
pop
mov
stos
mov
lret
jns
xchg
cmp
jno
outsl
shl
ja
js
mov
inc
xchg
int3
push
std
fisubrl
add
dec
shr
in
cld
mov
mov
popa
rsqrtps
xor
mov
outsl
add
pop
mov
nop
adc
ss
dec
mov
push
inc
inc
aad
adc
test
jecxz
ljmp
jne
push
pushf
jp
mov
xor
push
int
stos
cltd
lahf
cmc
or
int3
incl
test
pop
pop
or
pop
sub
dec
imul
mov
sahf
hlt
nop
and
mov
xor
ret
test
outsl
das
inc
or
add
jle
and
mov
das
mov
dec
into
inc
int3
mov
pop
loopne
imul
cmp
imul
and
int
add
jo
dec
mov
sbb
sbb
xor
and
jns
or
push
sub
jg
in
pop
jecxz
das
inc
fisubl
inc
push
stc
cmc
cmp
sbb
das
out
inc
jecxz
jge
and
addr16
mov
mov
push
nop
sbb
sti
adc
negb
adc
imul
mov
ljmp
dec
incb
push
mov
fiaddl
inc
lds
je
push
cmp
je
xor
push
and
call
aas
cmp
jle
lods
inc
fsub
fsts
div
outsl
mov
lds
lahf
cmp
into
sbb
jmp
repz
dec
mov
mov
out
and
pusha
lahf
int
or
jne
xchg
inc
sahf
xchg
xchg
or
add
sbb
nop
xchg
enter
sarb
adc
stc
loop
dec
mov
pmaddwd
inc
xchg
mov
and
sub
adc
pop
inc
fstp
lods
in
imulb
gs
mov
sub
aad
stc
out
and
mov
sub
inc
movsl
pop
mov
lods
cmp
or
hlt
daa
adc
xchg
sbb
outsl
and
push
jne
xor
mov
aaa
push
sbb
inc
inc
jecxz
sub
popa
out
je
mov
ret
outsb
fstl
lds
aad
push
ffreep
hlt
push
arpl
loopne
loop
sarb
inc
leave
sub
fisttpl
cmp
sbb
lcall
push
addb
mov
adc
ret
mov
jl
push
jb
repz
test
scas
xchg
mov
imul
jle
push
movsb
mov
lret
add
and
mov
pop
divb
ret
adc
cwtl
aam
cmp
out
xchg
pop
addr16
dec
xor
xor
xchg
test
xor
mov
test
pop
push
fdivr
aam
and
sbb
xlat
std
hlt
add
inc
mov
pop
mov
push
repnz
cmpb
push
push
je
and
icebp
iret
mov
cmpsl
sarb
cmpsb
add
dec
cmpb
insl
jae
stos
mov
cwtl
mov
and
jo
leave
add
test
call
add
cmpsl
movsb
xchg
xor
or
call
sub
ret
sbb
mov
mov
xchg
insb
imul
gs
mov
btr
add
fs
mov
lahf
mov
nop
aad
fnsave
pusha
xor
or
iret
jbe
leave
inc
inc
dec
xchg
daa
andb
data16
adc
rolb
inc
inc
out
add
mov
jns
fwait
lret
jb
cwtl
into
push
mov
cmpsb
fiadds
push
sub
pop
push
insb
jl
jbe
lock
dec
aad
lretw
std
cmpsb
ficoms
test
scas
mov
add
cmc
out
pop
mov
addl
jmp
sbb
push
fdivs
add
adc
mov
sbbl
mov
mov
push
jo
leave
sahf
enter
adc
gs
mov
and
mov
xchg
test
and
repnz
iret
pop
aad
or
shl
mov
push
push
mov
ficomps
lods
stos
dec
ffree
mov
clc
xor
or
lea
sub
pusha
lock
mov
dec
jae
and
aas
into
pop
sub
call
into
sahf
fdivrl
mov
push
in
mov
stc
pop
sub
scas
lret
clc
or
lret
out
gs
test
sbb
dec
push
std
lcall
ret
mov
call
stos
mov
mov
jmp
sub
int3
shlb
ds
dec
mov
test
mov
jge
mov
mov
iret
cmp
scas
jns
mov
addb
sahf
in
int3
add
jmp
nop
mov
push
xor
or
push
inc
mov
ljmp
cwtl
pop
test
xor
cmpsl
addr16
xor
in
cwtl
mov
push
and
movsb
iret
or
pop
pop
cmpsl
jae
pusha
lret
dec
jecxz
fmuls
std
cltd
inc
cmpsl
sahf
je
cmc
orb
mov
pop
fsub
int3
xchg
sti
mov
mov
jg
pop
pop
mov
mov
add
or
xchg
out
sbb
jmp
and
aad
and
cwtl
jecxz
ror
xor
dec
dec
add
cmp
mov
cmpsl
inc
iret
lods
push
mov
and
mov
xchg
imul
andb
sbbl
out
pop
and
sbb
sub
jbe
push
icebp
sub
test
jecxz
push
ja
mov
fistl
add
ljmp
ds
mov
movsb
ss
push
mov
in
push
inc
mov
pop
pusha
xlat
insb
cmpsb
das
push
dec
rclb
mov
xchg
fwait
jmp
les
movsl
push
inc
or
sbb
sub
imul
inc
xchg
jns
pop
and
ret
out
mov
int
add
shl
orl
mov
jmp
cmpb
sub
push
mov
pop
push
fisttpl
out
and
das
mov
test
xchg
mov
call
test
clc
sbb
insl
jmp
push
inc
test
aam
sbb
rcrl
jg
jne
mov
fmuls
aaa
dec
mov
inc
in
mov
jmp
cmp
fistpl
arpl
or
push
fwait
mov
stc
aad
jg
decb
sbb
outsl
sbb
sub
scas
enter
sub
mov
mov
iret
mov
push
jno
xorb
test
adcl
push
xchg
test
cmc
jb
sub
outsb
mov
movsl
aad
pop
sub
movsl
data16
lret
aad
cmpsl
mov
adc
divl
rol
fisttpl
push
test
mov
idivb
movsl
xchg
jl
lds
cmc
popa
ret
idivb
in
sub
cmc
inc
add
sarb
out
lret
fs
mov
or
fnsave
lea
mov
dec
popa
xor
imul
push
clc
fidivl
dec
mov
jb
push
add
sbb
addr16
lcall
mov
cltd
and
inc
aam
cmpsl
and
es
aad
cs
loop
stc
inc
xchg
pop
int3
inc
cli
ror
cmp
sub
mov
or
pop
and
arpl
dec
and
cs
jne
xchg
jnp
inc
call
in
test
lock
xor
inc
hlt
outsl
mov
out
mov
arpl
repz
iret
xchg
out
jno
pop
imull
add
jae
movl
add
sbbl
pop
lock
cmp
inc
or
inc
add
jbe
cmpl
add
jbe
add
lock
sub
sbb
fwait
arpl
int
jno
xchg
ret
xlat
sbb
nop
fsts
cmp
add
sarl
cmp
jmp
sub
aad
inc
lahf
movsb
shr
fdivs
or
addl
cs
jo
or
push
mov
jg
imull
movsl
sub
sarb
jne,pt
cmpsl
les
jb
rolb
int3
pop
in
mov
xchg
int3
ficomps
jecxz
shll
sbb
jnp
xor
fldl
add
pop
mov
fimull
aam
mov
xchg
cmp
repz
ret
sub
shlb
aas
mov
aaa
mov
pop
jmp
sub
mov
add
mov
lcall
or
inc
mov
adc
test
mov
outsl
push
xor
and
ffreep
sub
mov
int3
push
cli
repnz
ds
push
xchg
lret
jg
adc
mov
add
les
dec
pop
jns
or
push
add
cmpl
xlat
mov
sahf
and
inc
mov
scas
add
inc
fneni(8087
andl
shrl
mov
push
nop
lcall
jmp
mov
push
movsl
dec
decl
int3
sub
mov
mov
roll
lods
and
or
insl
sub
mov
fnsave
mov
frstor
xchg
push
mov
push
cmp
movsl
cld
xchg
shr
sub
mov
push
push
and
shl
dec
inc
es
insb
movsb
cmp
aaa
jp
adc
mov
add
inc
push
iret
daa
push
movsb
pushf
sub
addb
lret
and
xchg
mov
sti
mov
mov
outsb
fcmove
sahf
stos
inc
loopne
jge
push
adcb
scas
mov
xchg
aaa
push
call
push
mov
dec
jo
xchg
push
pusha
push
inc
push
mov
mov
adc
mov
outsl
dec
jecxz
mov
and
xchg
cli
sti
outsb
adc
into
mov
bound
sbb
push
xchg
cmp
mov
lahf
pop
lahf
xchg
out
aam
hlt
aam
xchg
xchg
test
pop
inc
inc
out
push
xchg
xchg
popa
pop
mov
sub
cmp
popa
rcr
enter
jecxz
insl
inc
mov
aam
jle
rorb
mov
push
flds
mov
hlt
nop
pop
sbb
rclb
mov
addr16
in
jge
scas
push
cli
jg
in
add
jno
mov
iret
flds
lret
movsl
jae
jge
add
mov
inc
jmp
shr
ret
iret
dec
cmc
mov
add
faddl
push
pusha
das
jne
mov
xchg
lock
mov
pop
ljmp
stos
mov
and
push
jmp
out
in
inc
pop
xor
and
jbe
pop
fimull
and
in
bound
sub
fs
pop
xor
rcrb
ret
sub
out
daa
test
push
call
insb
xor
imul
hlt
inc
jbe
dec
sbb
cmpsb
add
repnz
mov
movsl
cmp
pop
repnz
mov
inc
mov
lret
or
xchg
roll
pop
outsl
pop
xor
adc
scas
mov
inc
jb
sbb
nop
pop
pop
fmul
mov
pop
cltd
lds
push
leave
push
nop
adc
mov
pop
dec
pop
and
dec
sbb
or
push
jo
adc
and
aam
add
test
std
js
fsubrs
sbb
je
push
ljmp
cltd
cwtl
stos
movsl
sahf
aas
mov
in
sub
xchg
and
cs
mov
cli
rol
enter
lods
mov
dec
outsb
cmp
dec
cltd
fstps
mov
mov
pop
xor
jne
in
in
in
or
addr16
mov
xchg
mov
mov
dec
iret
lea
lcall
fisttpll
shl
or
mov
jo
mov
jnp
jge
insl
cmpsb
jno
sub
divl
shrl
gs
mov
lds
pop
repz
sbb
dec
je
or
dec
mov
int3
or
jl
jb
push
out
daa
jle
ds
and
outsl
fisttpl
mov
push
shl
pop
call
nop
cld
mov
in
outsl
mov
mov
mov
das
icebp
inc
jo
int
std
xchg
stos
out
lods
call
sub
popf
ret
lret
mov
xor
or
pop
jle
jns
push
repnz
repnz
mov
maskmovq
mull
xor
movsb
pushf
xor
sub
jnp
mov
mov
out
or
dec
scas
lcall
lods
add
push
lahf
pop
fdivrl
sbb
sub
aad
fmul
andl
cmp
leave
push
xchg
test
out
cvtdq2ps
mov
push
bound
jp
icebp
cmc
inc
cmp
pop
pop
add
mov
pop
mov
data16
and
lea
mov
jnp
enter
lods
sub
lret
mov
std
jl
mov
loop
mov
out
out
mov
and
push
add
jbe
add
scas
mov
pop
out
sub
aam
loopne
pop
sub
push
mov
imul
push
ja
stos
adc
lods
dec
mov
out
clc
and
mov
jo
shlb
jp
pop
out
xchg
je
jnp
pop
pop
sbb
jne
loopne
lock
inc
adc
pop
sub
imul
xor
inc
xchg
imul
sub
jae
fs
test
jl
add
inc
stc
cmpb
ret
inc
mov
ss
xchg
jl
gs
je
xchg
jo
test
xchg
shl
dec
mov
cltd
inc
xchg
test
lods
arpl
roll
lock
sub
push
mov
push
cld
test
and
clc
mov
cmp
mov
cmc
fld1
ja
xchg
aas
out
mov
and
inc
cmp
sbb
ret
fsave
pop
sbb
mov
sub
jns
xor
pop
cld
xchg
test
mov
mov
push
adc
jle
shrl
ljmp
cmpsb
mov
roll
or
pop
mov
cltd
or
jne
mov
and
adc
scas
je
jno
test
cmpl
xor
mov
data16
adc
add
je
jle
sub
dec
int3
cwtl
ret
daa
mov
je
rcrl
xor
cmp
rcr
aad
popf
test
cld
adc
in
jmp
pop
and
test
fcoms
mov
lods
sub
pop
inc
jno
xchg
or
sub
sbb
es
arpl
xchg
pop
movzbl
test
test
nop
jo
push
dec
mov
subb
lcall
loopne
pop
outsl
bound
xchg
xchg
xchg
lret
pop
imul
mov
hlt
stc
mov
bound
jo
cmp
out
xor
test
adc
fidivl
mov
nop
or
pop
push
sti
xchg
inc
leave
mov
int3
mov
inc
mov
test
mov
mov
dec
cmp
insl
int3
insb
or
sub
rolb
fsts
inc
ret
incb
push
pop
mov
mov
sub
std
and
loopne
cmp
subl
inc
fidivs
shlb
or
jmp
xchg
mov
pop
stos
lds
pushf
ret
jecxz
xlat
push
addr16
jp
mov
imul
xor
adc
loope
cmp
push
pop
jmp
and
cmc
push
sub
imul
jo
enter
push
sbb
pop
out
cmp
scas
cmpb
jbe
popl
cmc
aas
dec
xorl
push
adc
xor
adc
test
sbb
mov
ja
iret
andl
jo
ss
add
cwtl
adc
shll
movsl
js
stc
xchg
jle
mov
push
mov
in
insl
out
in
dec
or
shrb
into
mov
divl
mov
mov
mov
inc
push
movsl
mov
cli
jmp
and
in
mov
xor
jmp
or
cmp
clc
out
inc
imul
adc
test
je
stos
jno
repz
mov
inc
aaa
jp
enter
rclb
push
xor
jp
xchg
cmp
xlat
push
and
aam
and
sti
in
mov
hlt
dec
xor
pop
lock
pop
fs
out
cmp
push
in
add
pop
fs
lahf
inc
mov
adc
sub
adc
mov
loopne
cwtl
and
add
call
in
loopne
xor
pop
push
cld
sahf
fsubs
pop
and
cmp
sbb
call
pushf
lret
xchg
loopne
push
testl
pop
fdiv
ret
jae
mov
fisttps
out
out
adc
pop
repnz
ret
xor
adc
sbb
mov
push
mov
outsl
es
jle
ljmp
dec
push
push
mov
clc
idiv
sbb
jno
push
sub
jg
test
sahf
enter
lods
mov
xor
test
hlt
loop
pusha
es
mov
dec
and
pushf
pop
ja
lahf
in
xchg
in
pop
frstor
test
and
push
pop
add
push
mov
add
lods
shrl
sub
jne
pop
xor
addl
pop
jno
int
xchg
cmpsb
lock
xchg
aad
cmp
mov
hlt
xchg
jnp
push
test
pop
sbb
nop
fcomi
sub
out
add
pushf
inc
add
cmp
out
ret
out
int
jle
bound
lret
decb
mov
inc
in
mov
stos
pop
jae
ss
movsl
lea
repnz
add
jmp
cmpsb
stos
dec
pop
call
popf
or
lds
loop
ds
fcom
xchg
or
and
dec
stos
ret
rcll
pop
les
mov
and
rorb
aas
inc
stos
inc
lea
into
les
inc
sbb
xchg
shll
bnd
inc
sub
inc
mov
xchg
js,pt
jmp
loope
push
scas
lret
repz
push
xchg
jp
xchg
aad
jb
divl
stc
sub
push
pop
enter
mov
inc
pusha
pop
mov
loope
and
jle
aas
push
insb
loop
mov
hlt
dec
loopne
sbb
repz
mov
in
push
push
inc
or
sub
push
xchg
sub
cmp
pop
subl
jg
dec
mov
lahf
cltd
ds
and
jge
mov
lret
lea
cmpsl
xor
add
adc
inc
xor
sar
iret
push
scas
rcll
ret
push
xor
push
sub
hlt
cmp
les
push
and
mov
push
cmp
jns,pt
sbb
jo
mov
pop
fistl
lcall
fsubl
stc
add
inc
testl
or
dec
dec
loope
movsb
lods
mov
pushf
out
xor
gs
adc
es
mov
outsl
in
aaa
in
shr
jmp
bound
mov
jle
pusha
icebp
lods
fdiv
add
pop
and
loopne
cmc
cmpsl
out
out
mov
es
int
add
scas
rol
mov
ficompl
add
pfsub
jne
inc
xor
stc
cmpsl
or
jecxz
xchg
pushf
or
lods
mov
movsb
scas
xchg
mov
es
xchg
ret
in
jb
push
xchg
mov
dec
mov
xor
repz
fsubs
mov
repz
mov
push
inc
jnp
jl
xchg
sbb
mov
shrl
fildl
andl
xor
mov
stos
int
push
xor
pop
dec
lods
dec
adc
iret
ja
jle
inc
mov
jge
imul
sbb
adc
cmp
xchg
xchg
mov
push
sub
xchg
cltd
arpl
lahf
or
xchg
mov
enter
ss
inc
out
cmc
xchg
bound
sbb
push
dec
sbb
clc
mov
xor
xor
xchg
out
js
enter
dec
roll
hlt
sub
int
jns
psraw
xchg
psraw
pop
clc
xor
inc
pop
xorb
xchg
ljmp
icebp
movsb
out
push
pop
push
jae
mov
stos
jno
xchg
add
aam
int3
xor
das
iret
xor
add
movq
out
rcl
xchg
test
push
cmp
fadd
dec
add
in
daa
pop
cmp
mov
in
xor
sbb
push
mov
push
cmp
call
roll
sub
dec
adc
rclb
lahf
push
fiaddl
jne
cld
repz
xor
or
mov
xchg
mov
cld
dec
add
cli
mov
jle
xchg
fistpl
cmpsl
in
or
sub
lods
jge
mov
sti
in
inc
mov
cmp
push
inc
pop
jmp
sub
jb
movsl
lahf
mov
mov
int
clc
sub
cmpsb
push
fstpt
icebp
mov
cmpsl
fldenv
out
sbb
add
inc
push
adc
xchg
fildl
mov
leave
test
test
push
sub
lcall
mov
xchg
outsb
xor
inc
add
dec
dec
mov
adc
ret
fiaddl
jne
cmpsl
cmp
jo,pt
daa
aad
cltd
lret
lods
xor
jo
hlt
fmul
iret
and
cli
adc
dec
inc
sbb
sub
cld
into
sbb
pusha
push
outsb
add
lods
dec
rolb
add
repz
ja
and
mov
cltd
xor
imul
pop
sbbl
jl
je
int3
xor
jmp
xchg
leave
inc
in
lret
inc
mov
lret
dec
lahf
mov
jne
lock
dec
lock
mul
jle
mov
out
stc
cmp
mov
fcomip
pushl
int3
jb
sub
subl
push
js
xchg
jg
loop
and
mov
mov
fists
hlt
mov
sub
das
hlt
loope
loope
scas
imul
xor
xlat
fildll
bound
in
push
jnp
adc
aam
sarl
and
jl
sahf
out
or
cmp
jnp
mov
mov
fstpt
dec
lods
loopne
shl
ja
inc
jmp
sub
repnz
lret
inc
lods
sub
int
ret
jbe
repz
sub
push
pusha
and
pop
xchg
push
lahf
add
stc
sbb
xchg
aas
outsb
cwtl
pushf
adc
ret
or
sbb
or
push
cltd
fsubs
dec
xchg
mov
xchg
xchg
mov
cmp
mov
mov
scas
fsub
inc
dec
test
push
xor
dec
mov
xor
dec
xor
push
cmp
jecxz
jle
mov
and
xchg
jne
mov
das
or
mov
pusha
leave
xlat
int
repz
xor
pop
les
fs
push
cmc
push
dec
imul
out
cmp
ljmp
fisubrs
xchg
mov
shrb
test
or
pop
cmpsb
push
lret
pop
test
inc
inc
ljmp
xchg
mov
add
jge
xchg
sub
push
jo
dec
sbb
std
mov
add
data16
sti
clc
fstpl
icebp
mov
xlat
mov
push
xchg
mov
lods
mov
dec
mov
sbb
push
fs
outsb
push
pushf
leavew
iret
sbb
pop
repnz
add
mov
aaa
jbe
sti
mov
mov
movsb
mov
sar
inc
bound
imul
jne
sbb
lods
xchg
int3
jns
insb
mov
hlt
xchg
jp
notl
filds
push
decl
add
cmp
sbb
aad
pop
aaa
mov
pusha
popa
movsl
jmp
sti
aad
daa
std
popa
aaa
sbb
fsubs
jne
sbb
loop
jae
test
call
lea
clc
lcall
in
insb
push
ret
movsl
imul
jle
xor
add
insl
in
out
stc
aam
jb
das
subb
xor
pop
bound
sbb
pop
or
fadds
push
adc
out
mov
rsm
mov
data16
ja
fsubl
into
and
sub
inc
push
inc
insb
sbb
cltd
jo
add
dec
xlat
inc
daa
xor
rcrl
shrb
add
cmp
ljmp
mov
xor
cmp
clts
mov
mov
inc
push
cltd
into
push
fstpt
lea
jno
shl
and
sbb
xor
mov
int
inc
add
cltd
ret
dec
jge
les
imul
shl
pop
adc
xchg
inc
lret
dec
cs
mov
hlt
jns
push
jnp
cmp
dec
in
xor
insb
iret
enter
aas
push
mov
xor
adc
xchg
mov
call
xor
lods
mov
and
hlt
ret
or
lea
hlt
jno
jge
fwait
mov
sbb
jnp
push
cltd
mov
mov
push
icebp
mov
daa
xor
push
rcll
andb
add
pusha
jne
pusha
cmp
mov
inc
addr16
cmpsl
xchg
daa
inc
iret
sbb
testb
jno
sub
aas
or
jg
mov
adc
sarb
stos
mov
xor
enter
loope
orb
addr16
sar
pop
fmul
je
in
xor
jo
test
mov
outsl
and
xor
mov
mov
push
sub
xorl
cmp
dec
jb
jns
inc
push
xor
jno
loopne
push
js
loopne
mov
repnz
mov
sbb
mov
lds
dec
cld
cmp
add
xchg
fldl
imul
adc
cltd
cmp
in
inc
icebp
cmp
scas
cmc
or
cmpsb
and
adc
ret
xchg
popf
lcall
jns
pop
roll
imul
addr16
mov
or
outsb
xor
daa
icebp
negb
add
leave
pushf
mov
movsl
pop
push
shll
ret
pop
repnz
fldcw
dec
arpl
jns
insb
adc
xor
push
cmc
jbe
cmp
pop
fldenv
ljmp
jle
mov
imul
sahf
scas
cmpb
push
pop
mov
gs
ja
push
mov
ja
cmp
pop
jae
lret
lea
cmp
mov
jns
shlb
dec
cmpsl
test
lret
adc
xor
pop
out
or
inc
js
les
jl
push
lret
loop
jmp
sbb
lds
fidivrl
fisubrl
push
jl
push
sbbb
xchg
pop
dec
or
in
sbb
jge
cmp
daa
cmpsb
loop
fsubrs
xor
push
icebp
test
pop
movsl
xchg
xor
jge
nop
das
jl
les
in
add
cmpsl
dec
sbb
sub
push
or
and
cmpsb
dec
sbb
loope
out
and
dec
xchg
cwtl
xchg
fisubrs
inc
mov
movsb
xchg
add
int
pop
dec
push
dec
inc
aaa
dec
cli
dec
roll
insl
jecxz
push
cmpsl
dec
aaa
xchg
or
insl
cmp
adc
cmp
xchg
out
inc
shlb
push
aam
mov
ret
jnp
xlat
sbbb
ss
xchg
cmp
mov
xchg
dec
xor
jg
jno
sbb
ja
fisubl
xchg
call
mov
popa
notb
dec
sbb
jmp
xchg
sti
scas
call
inc
mov
sahf
je
xor
stos
xor
aad
mov
ds
cmp
cld
out
lcall
shlb
out
loopne
out
xchg
push
adc
xchg
jns
popf
push
and
mov
arpl
mov
into
xchg
jbe
xchg
lahf
sahf
push
jno
int
pop
ljmp
sub
dec
cmpsb
ja
pop
mov
addb
jmp
xor
mov
lods
mov
test
les
sbb
lret
mov
iret
jecxz
mov
cmpsb
lret
xchg
mov
outsl
cmp
dec
movsb
cwtl
push
jb
stos
call
mov
ret
nop
mov
and
mov
cmp
mov
das
pushf
xchg
push
push
mov
sarb
xchg
sub
add
cwtl
lret
popf
adc
rcrl
jmp
sub
xor
dec
adc
push
jle
xor
in
mov
mov
loop
daa
pop
test
ret
pop
addr16
mov
je
stc
cmp
aas
or
dec
mov
mov
mov
pusha
stc
jae
sub
xchg
shl
xor
into
mov
jns
and
gs
push
mov
ja
fs
sbb
jle
insl
dec
mov
dec
ret
push
in
pop
scas
pop
push
xor
or
outsb
add
lret
movsb
pop
enter
cmc
pushf
push
mov
shlb
cmp
idivl
lds
js
push
and
imul
xorb
xlat
add
sub
jg
inc
int
scas
lcall
mov
roll
icebp
jne
and
movsb
cli
dec
ss
dec
mov
out
lret
mov
lret
jmp
mov
and
je
cltd
lcall
xchg
jle
mov
pop
fsubs
sub
es
push
mov
and
or
dec
pop
mov
enter
pop
movsb
xchg
sbb
adc
aad
fiaddl
dec
and
or
sbb
mov
mov
adc
mov
fsubrl
fimull
inc
iret
and
sti
dec
mov
sbb
inc
xchg
jg
xor
mov
outsb
sbb
in
sub
mov
or
mov
adc
insb
je
jns
loop
jae
bound
fmull
inc
call
xorl
pop
inc
cs
mov
pop
inc
inc
fs
popf
adc
inc
pop
push
ja
or
ds
sbb
nop
inc
push
inc
rorb
cli
ja
test
sarb
xchg
stos
and
mov
out
fidivrs
lret
xor
and
cmpl
movsb
sub
loopne
rcr
in
dec
mov
lock
cltd
lcall
push
aad
xchg
cmp
dec
idivl
call
sbb
test
mov
imul
xchg
ret
sub
lea
mov
mov
fidivl
push
movsl
or
ret
int3
dec
add
mov
subl
shll
inc
sbb
incl
rcll
cmc
addr16
ret
lds
or
mov
das
aaa
jno
imulb
xor
fwait
pushf
das
outsl
iret
scas
sti
lret
inc
cmc
ljmp
push
das
xchg
push
popa
xchg
out
inc
shl
xchg
mov
out
stc
and
lahf
mov
push
bound
dec
aaa
mov
jb
jmp
xor
imul
mov
sbb
mov
idiv
stc
lret
gs
arpl
push
nop
mov
or
and
imul
pop
fisubl
inc
jno
push
push
sub
mov
sbb
add
sbb
jle
sbb
fwait
iret
repnz
pop
les
push
add
pop
cs
mov
push
iret
cs
cs
xlat
popa
bnd
push
mov
mov
je
fisttps
imul
mov
testb
add
jns
sub
sti
add
imul
jecxz
xchg
dec
subl
dec
cmp
mov
and
pop
mov
push
xchg
outsb
mov
es
push
xor
mov
inc
adc
dec
pop
sbb
lret
or
push
mov
sti
rorb
mov
mov
jno
lret
ds
push
je
cmp
scas
jp
aad
in
rorb
lock
cmp
xorb
adc
and
jl
stos
lcall
add
jns
jp
outsb
push
outsl
pop
jae
adc
or
in
addr16
cltd
in
or
sub
sbb
loop
mov
mov
dec
out
adc
xchg
pop
int
fisubrl
outsl
shll
sbb
out
add
aam
xor
push
sahf
icebp
das
sub
mov
sub
enter
dec
sbbb
jmp
inc
mov
mov
shlb
jns
or
mov
rcpps
mov
rorl
pop
push
mov
in
dec
dec
aas
adc
mov
fisttps
add
inc
and
inc
xor
fnop
mov
fdivrl
rorl
mov
sahf
push
shlb
ljmp
mov
lret
xchg
jge
fwait
sbb
adc
mov
jle
inc
xor
push
cmpsl
pop
xor
loope
jmp
jae
cmp
lds
add
push
xlat
jp
inc
push
lea
icebp
push
ret
lret
and
or
add
jecxz
dec
mov
or
jmp
insb
dec
repz
pusha
push
dec
pop
and
jl
repnz
mov
ss
lock
rcrb
mov
arpl
ficomps
adc
out
cmp
inc
aam
pop
cli
add
inc
xchg
mov
inc
push
xchg
test
je
mov
dec
cwtl
ja
cwtl
mov
loopne
xor
lea
fsubr
in
dec
enter
lock
sti
mov
sbb
push
add
fadd
sub
data16
gs
scas
push
mov
imul
push
jae
jbe
out
cmpsb
popf
scas
jmp
xchg
mov
test
sbb
xchg
dec
ret
stos
loopne
inc
pop
add
and
arpl
jp
and
into
sbb
sbb
dec
scas
xchg
stos
mov
movsl
xchg
daa
lret
jbe
sub
add
dec
sub
mov
cltd
xor
daa
repnz
lock
dec
xor
movsb
mov
xor
pop
mov
or
cs
jle
xor
sub
mov
pop
jge
shrl
fstpl
or
inc
ja
addl
fisttpll
dec
push
out
shrb
sbb
inc
in
dec
sbb
mov
sbb
push
xchg
loop
scas
add
loopne
mov
cmp
mov
lret
mov
mov
pop
mov
xchg
or
iret
movsb
test
or
dec
jl
data16
sbb
nop
scas
mov
adcl
clc
insl
js
inc
dec
daa
ret
xchg
inc
in
sarl
in
shl
aam
jno
xor
icebp
ss
vmovd
pop
sub
aam
les
mov
pusha
ljmp
mov
cli
sahf
add
pop
leave
add
mov
push
push
or
mov
fistps
scas
rcrl
push
dec
shrb
mov
icebp
jge
out
mov
rcrb
fwait
mov
or
adc
push
fs
movsb
cmc
out
stos
neg
loope
filds
inc
cmc
xchg
ds
sbbb
jne
imul
adc
pop
sbb
loop,pt
mov
push
popa
test
inc
pop
pop
push
xchg
in
mov
ja
call
xchg
mov
imul
xlat
aaa
mov
inc
adc
in
push
inc
or
icebp
mov
adc
sbb
es
mov
mov
xchg
cld
mov
fistpl
cwtl
or
push
mov
into
xchg
adc
movsb
xlat
aam
mov
sbb
cmp
mov
lcall
inc
filds
nop
popf
pop
xchg
cmpsb
and
push
cmp
rorl
xchg
jb
les
orb
jle
cs
jnp
mov
and
jecxz
jl
out
sbb
stc
xchg
jmp
adc
xor
in
lock
shrd
lea
xchg
mov
fldt
pop
sti
hlt
or
push
mov
and
xchg
scas
inc
fwait
arpl
cmp
jl
divb
adc
fists
es
test
dec
repz
sbb
sub
fimull
lahf
popa
adc
mov
sub
leave
jg
xorb
iret
les
stos
mov
sub
cmc
or
fisubl
out
or
jg
lahf
fstp
jmp
je
data16
mov
mov
cmpsb
aas
sub
out
jns
bound
xor
xchg
popa
jecxz
out
push
adc
push
mulb
sti
outsb
dec
cs
push
push
aaa
pop
xor
inc
insl
les
or
pop
cli
in
or
in
pop
push
popf
stc
cmp
stos
sar
cmp
jae
mov
sub
cs
mov
aam
xor
movsb
add
sbb
sbb
or
das
mov
jp
or
js
int
dec
or
fnstenv
pmuludq
pusha
push
push
jns
jecxz
sbb
and
mov
push
push
mov
fmull
mov
mov
mov
dec
lret
addr16
repnz
loopne
push
hlt
mov
in
jg
mov
notb
cld
jl
test
pop
mov
sbb
and
sub
mov
clc
aad
dec
enter
test
mov
and
jnp
insb
mov
into
std
push
cmpsl
add
rclb
out
test
test
push
fmul
cmp
dec
jmp
jle
push
mov
cltd
mov
fidivl
aaa
daa
pop
imul
pop
inc
inc
mov
sbbl
mov
pmovmskb
jo
jp
or
xor
sub
cltd
rcrl
add
jbe
adc
mov
or
lcall
xchg
mov
cmc
pop
pushf
dec
pop
xor
mov
out
push
mov
inc
xchg
or
inc
fsubs
jne
adc
lds
std
aad
inc
adc
in
repnz
lock
paddq
jbe
push
mov
clc
inc
sbb
lods
aad
sub
adc
push
cs
dec
lods
pop
jge
popf
hlt
shr
test
test
mov
mov
add
fiaddl
push
mov
gs
push
sub
in
dec
inc
sub
les
mov
repnz
nop
ds
push
inc
js
xor
jnp
loop
cmp
cmpb
jmp
cmp
fidivs
cmc
sbb
scas
fidivl
fists
cmpsl
lods
movsl
repnz
sbb
jno
fld
dec
ss
mov
rcl
callw
sbb
call
pop
push
fwait
add
jnp
jb
add
mov
inc
dec
dec
inc
or
nop
fs
add
js
popa
mov
xchg
imul
push
mov
fmul
mov
imul
push
adc
pusha
hlt
lret
outsb
adc
mov
xchg
popf
add
or
fcomp
and
adc
int
aaa
dec
and
sbb
fistpl
dec
add
lret
dec
outsb
cli
jbe
push
in
shrb
xor
das
jmp
push
mov
xchg
jbe,pt
mov
or
js
daa
jb
fmull
xchg
pop
addr16
mov
jmp
in
pusha
iret
je
sbb
jnp
xor
dec
jmp
gs
out
push
inc
shl
sbb
add
mov
xchg
jmp
mov
push
test
arpl
dec
or
daa
inc
mov
inc
out
test
gs
pop
imul
cmpsb
xor
push
ljmp
fwait
jle
mov
xchg
std
mov
addl
js
mov
das
insl
sbb
aam
loop
loope
repz
jmp
fwait
xchg
jae
or
clc
aam
fbld
mov
or
add
cmp
mov
lahf
sub
and
aas
xchg
or
mov
pop
out
and
pop
jmp
and
in
sub
xlat
stos
xchg
scas
idivl
mov
fnsave
pop
stc
push
pop
dec
pop
mov
mov
lcall
jno
add
sbb
xlat
and
add
mov
push
fadd
je
xchg
jp
mov
cmpsb
sbb
mov
sbb
pop
aad
push
jecxz
mov
push
pushf
mov
out
clc
and
stos
in
mov
jg
outsl
xor
cmp
fcmove
ja
lret
enter
stos
xchg
test
ret
loope
xchg
pusha
jns
inc
in
jg
hlt
or
xor
into
mov
cs
xchg
pop
xchg
push
jecxz
inc
or
test
adc
aad
fcomp
scas
mov
sbb
cmp
cmc
shlb
xor
aad
out
in
pop
imul
sub
inc
out
dec
fisubrs
ja
imul
test
scas
xor
xor
xor
mov
or
adc
pop
imul
sarb
cmpb
and
stc
mov
into
dec
jge
shll
inc
les
add
mov
xchg
sbb
add
daa
test
xchg
dec
insb
fidivs
rcll
add
dec
sbb
cld
add
imul
das
or
xchg
xor
fadds
sbb
out
xlat
test
or
cmp
mov
mov
movsl
dec
xor
add
cmc
out
cs
cmp
sbb
out
mov
dec
push
jl
popa
shrl
jb
fwait
mov
xchg
mov
dec
repz
xchg
pop
lds
aas
and
dec
xchg
sub
push
into
mov
adc
cmp
cmp
push
movsb
sbbb
mov
jb
inc
cmp
push
cmp
repnz
push
mov
inc
mov
adc
lds
popa
stc
aad
dec
std
and
or
inc
mov
cmp
add
adc
cmp
or
add
cli
pushf
ss
mov
lcall
cwtl
ret
mov
outsb
sbbl
dec
je
into
jg
push
ret
popa
or
dec
sbb
dec
ja
mov
sub
cmp
sbb
iret
mov
stos
test
add
in
adc
inc
lahf
xor
push
jns
insb
cltd
pop
dec
xchg
insb
xchg
pop
push
fldcw
sti
pop
sahf
mov
je
std
or
gs
movsl
js
mov
arpl
fadd
jae
scas
xchg
imul
cld
sahf
pop
test
mov
sbb
push
xchg
adc
lcall
mov
pusha
jne
imul
cmpsb
je
push
cmp
es
xchg
outsl
dec
mov
data16
dec
cmp
pop
mov
adc
inc
into
jno
bnd
out
adc
cltd
xorl
adc
lahf
xchg
arpl
xor
mov
mov
dec
sub
popa
ds
jle
mov
dec
mov
in
sub
lcall
andl
jb
test
inc
mov
movsl
out
lcall
pushf
fsubrl
cmp
popa
in
pop
jns
insb
sub
mov
dec
stos
clc
pop
push
cmc
jne
ljmp
fdivrl
and
dec
data16
mov
in
insb
xchg
xlat
xchg
dec
mov
cmp
scas
xor
push
test
negb
insl
mov
rclb
cmpsb
lods
push
inc
or
std
clc
mov
repz
cli
pusha
sub
lcall
iret
push
pop
push
and
push
add
or
pop
adc
lock
sub
imul
add
hlt
int3
jb
adc
cmpl
push
adc
iret
test
imul
pop
jp
test
std
pop
jmp
roll
push
push
aaa
and
lock
es
jg
mov
fwait
push
mov
rorb
and
roll
inc
das
push
pop
jae
jb
cvtpi2ps
jae
shrb
push
mov
sahf
pop
in
stc
cmp
sub
dec
add
mov
ret
cltd
jbe
sub
cld
gs
sbb
sbb
xchg
fdivs
ss
xchg
sub
xor
mov
xchg
sbb
mov
rcr
sbb
fwait
daa
add
in
stc
ret
lahf
imul
mov
adc
adc
daa
in
std
mov
outsb
aas
shrb
cmp
aad
into
mov
pusha
mov
mov
dec
lock
add
inc
cmp
mov
mov
mov
fmull
mov
sahf
cmpsl
js
inc
inc
cwtl
fucomp
xchg
jmp
mov
xor
out
dec
mul
scas
fisttpl
fbld
pop
sbb
sarb
or
adc
mov
xor
orl
bound
mov
mov
xor
insb
adc
orl
popa
test
fldt
lods
inc
pop
xchg
pop
xchg
inc
add
dec
fwait
push
jnp
adc
xor
adc
sbb
notl
movsl
scas
cmpsb
xor
push
out
push
mov
mov
mov
arpl
jecxz
sub
sbb
pushf
xchg
addb
loopne
adc
lods
lcall
push
dec
adc
pushf
das
scas
pusha
movsl
in
jp
jae
imul
sbb
stos
pop
in
call
xor
aad
dec
or
xchg
lcall
popf
adcb
pop
loope
popf
pop
bswap
and
fstl
mov
mov
and
inc
xchg
mov
and
mov
repnz
mov
js
js
and
jo
ret
pop
mov
xchg
clc
push
jp
andb
jo
cmp
add
call
mov
cltd
ret
xchg
jecxz
stos
lods
xchg
ja
cwtl
dec
in
dec
inc
pop
fsts
cmp
stc
sbb
or
pop
xchg
push
aas
stos
test
pop
pop
mov
fsub
das
mov
repz
aad
push
cmp
data16
cmpsl
jmp
mov
sbb
fildl
sub
hlt
xchg
ret
jnp
mov
inc
dec
mov
mov
repnz
sbb
loope
fisubl
popf
pop
pop
dec
mov
pop
ror
add
out
lds
popf
movsl
or
mov
pop
mov
loope
xchg
inc
and
icebp
push
sahf
pop
jmp
mov
or
sbb
sbb
popa
or
push
and
cmp
stos
mov
jecxz
cmp
sub
popa
dec
jo
dec
in
inc
cmp
lods
test
gs
mov
dec
xlat
cmp
pop
sub
scas
fwait
inc
cmp
push
hlt
or
fwait
mov
insb
and
push
imul
in
test
sbb
sbb
popf
sub
loopne
es
inc
aam
test
call
mulb
pop
xchg
sub
mov
lods
adc
mov
movsb
outsb
jmp
sub
addr16
jle
dec
inc
loopne
in
and
repnz
cwtl
ljmp
xchg
cltd
and
jge
gs
and
push
or
lret
rcrl
push
outsl
lret
movsb
popa
adc
add
dec
lahf
mov
hlt
push
xchg
rorb
fldenv
ljmp
xchg
lock
int3
shlb
pop
pop
xchg
push
inc
std
or
enter
stos
hlt
mov
aas
shlb
je
js
lret
cld
test
mov
mov
ja
loop
cmpsl
ljmp
in
mov
int
xchg
adc
adc
movb
or
stos
in
xor
loope
inc
call
xchg
inc
push
clc
outsl
loop,pn
push
out
pop
xchg
sbb
in
cltd
inc
insl
scas
xor
or
testb
and
inc
je
cwtl
push
cwtl
mov
inc
pushw
sbb
pushf
addb
mov
push
jp
aas
jmp
xor
movsb
and
cld
xchg
sub
jo
mov
ret
pushf
mov
xchg
fdivs
stc
sub
dec
neg
bound
jb
add
jne
es
lcall
or
addr16
xor
adc
sub
out
lret
or
mov
xor
shr
daa
mov
mov
push
cmpsb
ljmp
cmpsl
lahf
dec
sbb
add
mov
in
cmpsl
mov
inc
jp
stos
fwait
repnz
xor
pop
inc
call
sbb
sbb
test
insl
mov
pop
or
js
mov
push
dec
std
mov
dec
pushf
or
mov
jecxz
test
rorl
leave
daa
pop
ds
xlat
mov
and
stos
push
cli
sbb
jo
xor
inc
fisttpll
lds
jne
shll
mov
subl
sub
imul
mov
jmp
inc
add
pusha
lcall
or
fldt
fldt
punpcklwd
das
aas
mov
xchg
jne
scas
mov
pop
adc
dec
shlb
ret
subb
aas
insl
xor
icebp
outsl
pop
adc
jl
push
sbb
lds
inc
mov
add
xor
inc
mov
test
sbb
mov
cmc
ja
lcall
out
fldcw
dec
push
pop
mov
mull
cmp
out
dec
mov
xchg
sar
iret
and
adc
mov
es
sbb
push
jo
xchg
adc
out
cld
in
call
daa
int
pop
aaa
sbb
mov
jle
pop
or
in
cwtl
push
ss
and
and
data16
icebp
lahf
mov
mov
xchg
jae
mov
jae
dec
mov
mov
pop
jmp
and
inc
fdivrp
ljmp
sub
xchg
mov
mov
outsb
jmp
jge
cmp
pop
sti
enter
mov
sbb
mov
movsb
pop
and
xchg
ret
inc
out
mov
adc
dec
es
and
aad
sbb
nop
xchg
aad
outsb
mov
pusha
test
mov
repz
cltd
and
lods
xchg
popf
push
les
lcall
nop
xchg
imulb
or
cs
lods
out
mov
jecxz
sub
pop
pop
inc
mov
or
pop
enter
insl
js
lret
add
arpl
push
pushf
clc
xor
loop
data16
cmpl
nop
cmc
decl
mov
andl
dec
ljmp
xor
jl
incb
dec
push
nop
es
pop
repz
loope
inc
dec
loopne
xchg
xorl
std
and
loop
or
insb
shrb
sbb
mov
inc
lret
stos
sbb
aaa
fsub
jne
mov
inc
push
movsb
inc
adc
add
inc
cmp
adc
pop
xor
lock
pop
sub
push
cwtl
xlat
mov
sbb
gs
addr16
sub
dec
sub
adc
mov
fstpl
add
xchg
adc
sub
lds
mov
jge,pt
cmpsb
cs
mov
and
nop
jns
nop
fcmovb
dec
insb
dec
jo
loop
fdiv
jno
add
lds
cltd
dec
add
inc
loope
xor
cmpsb
adc
lods
mov
test
cltd
lret
push
xorb
mov
loope
bound
pop
or
cmc
ffree
jecxz
lahf
inc
fstpt
sbb
dec
ss
lods
or
pop
sbbl
add
aas
push
cmp
push
xchg
shrl
mov
or
popa
ret
push
leave
jno
pop
fwait
sub
mov
rorb
stos
and
pop
xchg
xlat
inc
lds
push
popf
nop
mov
repz
xchg
enter
mov
mov
mov
push
push
inc
in
inc
dec
nop
push
and
jbe
filds
daa
pop
pop
loop
and
push
sahf
les
mov
cmp
aam
or
inc
jns
ljmp
fmul
cmp
daa
fldl
fwait
sub
cmpsl
loopne
push
add
shl
pusha
or
and
pushf
pop
mov
cs
shl
scas
jb
add
aaa
cli
dec
aaa
cmpsb
dec
out
mov
test
lcall
add
lret
imul
dec
pop
fbstp
pushf
pop
inc
xchg
push
dec
inc
add
inc
les
mov
popa
test
jnp
xor
cmp
leave
cwtl
pop
mov
pusha
imul
sub
mov
jmp
mov
lahf
push
cmp
adc
sbb
add
sahf
jmp
xchg
inc
jmp
fs
dec
aam
fldcw
sahf
outsb
or
push
adc
dec
sbb
sub
test
out
pop
je
inc
in
inc
in
sti
loopne
pop
or
orl
pop
pop
or
dec
pop
adc
xchg
dec
mov
mov
clc
hlt
adcl
xor
lock
sbbb
mov
jg
push
adc
cmp
int3
lock
lods
lods
ss
mov
leave
mov
cs
mov
inc
sub
sbb
hlt
fs
fstp
add
adc
pop
push
pop
jae
add
test
push
mov
sbb
shll
cmp
repnz
aaa
arpl
je
jg
imul
sbb
xchg
xor
movsl
mov
mov
popa
fistl
xchg
or
push
scas
stc
daa
or
cwtl
fistps
jae
sub
js
dec
aaa
mov
lahf
push
mov
sub
mov
icebp
sub
mov
xchg
lods
in
stos
mov
mov
lods
jnp
leave
or
push
mov
xchg
int
ljmp
popf
xor
test
insb
add
xchg
in
fistl
dec
add
xchg
insl
mov
into
xchg
movq
fisttpll
movsb
dec
mov
xchg
xchg
repz
push
loop
aad
push
pop
pop
not
sub
out
ja
xor
adc
movsb
dec
pusha
xor
cmp
movsb
mov
or
pop
jmp
imul
data16
fcmove
or
push
daa
gs
ds
dec
xchg
push
cmp
addr16
pushw
xchg
jge
inc
ret
xchg
and
repz
int3
xchg
call
cmp
mov
xchg
mov
lea
xchg
or
leave
test
jb
scas
out
cs
fistpll
xlat
pop
adc
popf
in
negb
test
xor
shlb
insb
xor
jp
cld
adc
outsb
jae
ss
xor
clc
nop
sbb
imul
out
xor
rol
add
adc
notb
mov
xchg
jmp
lcall
mov
mov
stos
mov
leave
push
movsl
icebp
icebp
stos
mov
mov
lods
pusha
add
lods
cwtl
xor
fidivl
std
mov
inc
movsl
xchg
cmp
ljmp
sbb
sbb
stos
inc
mov
aad
sbb
stc
adc
adc
ret
jb
rcll
cld
pop
jmp
outsb
jl
lcall
mov
adc
daa
jnp
cld
fimuls
cmp
mov
xchg
or
gs
mov
and
mov
dec
push
push
add
pushf
ss
mov
pusha
sub
sbbl
ds
and
push
data16
fsubs
mov
xor
cmpl
dec
jg
adc
add
cs
mov
in
int
push
cmp
or
inc
inc
xor
mov
outsl
pop
mov
ret
mov
mov
cmp
dec
repz
scas
inc
adcb
dec
add
sbb
mov
out
jno
pop
xor
cwtl
mov
sub
push
jbe
jg
mov
imul
mov
inc
outsl
xor
popf
add
cmp
aas
std
or
mov
outsb
out
or
sbb
test
xor
dec
pop
mov
insl
push
iret
mov
aam
add
popf
or
inc
sarb
rolb
and
testl
mov
cli
push
pop
insb
scas
mov
inc
add
popf
popf
cmp
shlb
scas
das
lods
pop
cmp
inc
xor
aas
xlat
mov
ror
out
movl
movsl
mov
xor
xchg
lods
or
xchg
or
shlb
xchg
in
jmp
btl
icebp
ror
sub
pop
fistpll
inc
jo
mov
test
inc
mov
sub
cmpsl
jmp
jmp
sbb
jno
add
fisubl
test
repz
cmp
push
push
fs
call
jbe
pop
inc
aas
fisttps
fnsave
cmp
mov
sub
stos
fnop
fidivrs
mov
in
or
and
sbbb
out
mov
mov
icebp
fs
cmpsl
pop
or
insl
xor
imul
jne
test
xchg
movsb
inc
xchg
js
sub
imull
push
call
jns
das
movsl
rcrl
mov
movl
bound
xor
cmp
jp
sahf
das
aaa
call
mov
pop
lock
icebp
hlt
adc
cmp
leave
and
or
dec
aaa
stc
arpl
and
jne
rcrl
icebp
inc
mov
leave
test
ds
xchg
pop
pop
pop
mov
xchg
xchg
pop
in
cmp
aam
cmp
mov
fbstp
fsub
and
mov
hlt
push
je
inc
cmpb
jle
cltd
mov
or
xchg
orb
test
mov
sub
push
loope
jne
adc
mov
int
sbb
sbb
aam
cltd
adc
mov
mov
mov
mov
jo
hlt
dec
push
popa
inc
test
mov
push
test
xorl
mov
push
xchg
icebp
aam
xor
dec
or
mov
pop
dec
xchg
cmp
mov
loop
bound
xlat
and
mov
sbb
out
inc
add
pop
push
testb
mov
out
mov
push
cmp
mov
pop
sub
sub
cmp
xor
aas
mov
adc
push
add
outsl
sbb
sub
pop
lods
leave
dec
sbb
cld
jecxz
insl
xchg
mov
mov
inc
fistps
mov
pop
mov
sub
inc
inc
inc
sbb
shlb
xchg
in
lcall
or
inc
je
or
pop
aas
rcrb
or
mov
cmp
in
add
inc
mov
mov
adc
fs
idivb
out
mov
jle
adc
mov
dec
movb
fwait
shl
sub
sub
hlt
outsl
sbb
loop
jae
xchg
lret
cltd
or
xor
mov
mov
nop
push
test
int
fcmovb
popl
es
out
jo
popa
jo
inc
push
lahf
cmpsl
cmp
mov
jecxz
out
popa
cmp
cmpsl
sahf
lahf
pop
lock
add
das
cmc
inc
mov
movsb
cmp
mov
pop
or
rclb
dec
dec
xlat
cltd
pop
xor
push
cltd
call
inc
cmpsl
ja
das
mov
iret
test
mov
adc
out
inc
repnz
fwait
rcpps
cs
nop
mov
or
in
dec
mov
enter
ja
int3
mov
and
cwtl
adc
and
push
cmp
out
popf
jmp
jp
bound
leave
fsubrp
sub
xor
jo
incb
fnsave
adc
movsb
leave
mov
sbb
pop
or
fiaddl
xchg
push
aas
sbb
adc
dec
test
xchg
lcall
sbb
cmp
out
jne
clc
pop
mov
repz
and
call
out
testb
outsb
decb
inc
mov
or
cwtl
push
xor
lods
cmp
ja
dec
shrb
sbb
adc
jmp
popf
sbb
adcl
imul
xchg
mov
mov
sub
test
or
pop
pop
adc
fmuls
inc
rcrl
pop
sub
push
pop
push
push
mov
scas
or
push
lcall
cmp
enter
out
xor
mov
jl
mov
data16
lahf
int3
shlb
loopne
and
or
in
inc
int3
sbb
xor
xor
mov
cwtl
cltd
les
add
loopne
add
sbb
in
push
or
in
movzbl
xlat
negl
push
divl
cld
xchg
mov
out
mov
cmpsb
sbbl
mov
fs
outsb
daa
xlat
loopne
push
lret
xchg
inc
pop
xlat
mov
out
inc
add
les
dec
int3
imul
es
dec
xchg
lcall
in
fidivrs
pop
sbb
es
add
daa
in
scas
adc
inc
scas
loopne
inc
je
mov
xor
xchg
ret
cmpsb
mov
pop
dec
push
ror
mov
dec
lcall
xchg
cmp
pop
xchg
fstl
or
addr16
xchg
es
sub
movsl
mov
xor
hlt
pop
jo
xchg
push
and
add
xchg
xchg
lods
sub
shrl
stos
ljmp
arpl
mov
and
mov
roll
lahf
fildl
xchg
bound
imul
mov
enter
push
out
cs
sub
faddl
je
fidivrs
mov
test
push
je
push
xchg
fbstp
jnp
addl
je
cmpsl
lock
mov
cmpsl
lahf
jbe
test
push
cmp
call
arpl
ret
mov
mov
imul
xchg
pop
adc
mov
xorb
mov
add
jle
dec
dec
fildll
scas
test
mov
xchg
jl
pop
inc
add
aam
jo
jp
adc
sbb
xorb
adc
fsubrp
push
loop
xchg
or
mov
pop
cltd
jl
aad
dec
rolb
inc
mov
cmpsb
test
std
inc
shll
or
scas
dec
dec
pop
jae
adc
sbb
in
lods
mov
xchg
outsl
pop
or
jbe
inc
in
stos
test
mov
das
mov
enter
mov
fistl
sub
cmpsl
outsb
in
fldenv
lahf
fscale
arpl
push
leave
mov
bnd
push
insl
pop
outsb
push
arpl
ret
push
push
cli
xcrypt-ecb
cmpsl
dec
in
fimull
mov
sub
inc
ret
repnz
fcmovne
call
ds
mov
adc
xchg
repnz
imulb
jmp
jae
adc
adc
enter
jns
pusha
daa
out
ret
shrb
adcl
mov
int
pop
inc
ja
dec
sub
outsb
fsubrs
loopne
xor
adc
inc
pop
inc
adc
insb
inc
btrl
adc
sub
lea
and
leave
sti
jge
pusha
pop
xchg
fwait
jl
call
pop
adc
cli
loope
mov
pop
arpl
xchg
dec
lcall
out
sbb
in
mov
sub
push
cmp
fadds
jae
lods
jo
insb
fwait
mov
fs
dec
xchg
test
arpl
add
push
bound
xor
repnz
jp
xchg
inc
popa
stos
or
cwtl
loop
mov
push
insb
pop
faddl
or
xchg
mov
cmp
mov
ss
mov
dec
cmp
sub
movsl
das
imul
rclb
mov
dec
and
add
pop
aad
or
addr16
into
popa
dec
mov
pop
mov
push
inc
inc
jle
inc
sub
shll
movsb
sub
mov
cmp
ret
jl
xor
in
in
sbb
cld
and
sbb
gs
or
sbb
addl
mov
mov
outsl
sbb
sbb
xchg
jo
xor
push
insl
ret
clc
mov
add
adc
add
inc
push
iret
out
sahf
and
ret
or
jl
lret
rcrb
ret
data16
gs
ficompl
lds
xchg
push
popa
in
cli
sbb
mov
fldt
outsb
ja
test
push
ljmp
xor
enter
ljmp
std
cltd
inc
dec
arpl
fcomip
add
dec
xor
ljmp
in
add
or
ret
pop
daa
orb
xor
movsb
mov
stos
lcall
or
andb
and
cmp
cmp
iret
or
cmp
and
cmp
xor
xchg
push
cld
out
pop
pusha
into
and
inc
out
and
cmc
cmc
sub
jbe
bound
shlb
add
jne
repz
pop
js
pusha
pop
repz
stos
mov
enter
loop
mov
mov
shlb
mov
cmp
int
add
push
jno
jno
mov
repnz
mov
sub
cwtl
jg
xchg
sub
mov
je
cmp
movsb
in
mov
dec
dec
in
ret
movsb
jg
jne
sbb
test
mov
cmpsl
aaa
out
mov
leave
xlat
ljmp
das
int
cmp
mov
fistpll
fildl
fsts
out
inc
fstpt
xchg
inc
incb
cmpsl
xor
data16
lds
push
sub
ja
loop
adc
addb
orps
repz
lods
sbbb
xchg
or
sub
out
push
ljmp
jecxz
es
pop
mov
and
aam
iret
pop
bnd
mov
inc
mov
jnp
mov
mov
sub
and
sbb
into
popf
mull
dec
dec
outsb
adc
or
pushf
mov
sbb
in
and
repnz
movsb
fimull
sti
xchg
out
ret
and
pusha
cmp
roll
inc
fsts
hlt
sub
add
add
ficoms
xor
rcrl
push
jns
mov
rcrb
mov
sub
push
inc
ja
mov
jecxz
jno
push
clc
mov
add
mov
idivb
cmp
dec
std
dec
fdivs
jl
movsl
int
rcrb
and
scas
add
mov
cwtl
cs
jbe
imul
pop
repz
add
int3
sbb
loopne
pop
lret
push
xchg
sbb
outsl
ret
sub
sub
cmpsl
inc
mov
int3
mov
aaa
sbb
test
adc
jns
aad
insb
lcall
loope
ret
sbb
xor
jae
pop
lock
mov
arpl
enter
fsubrl
jp
dec
and
rolb
sub
rol
fs
dec
repz
repnz
stos
sub
adc
insb
mov
xchg
cld
sub
outsl
decb
cmc
and
cmp
mov
sub
sbb
int
repnz
sub
call
push
dec
adcb
pop
stc
sub
xor
or
das
xchg
loop
pop
sbb
ljmp
dec
push
ljmp
sti
sti
test
sarl
in
aad
and
or
stos
mov
and
or
iret
mov
scas
les
ja
aas
pop
mov
test
fs
add
cltd
es
or
addr16
ja
add
mov
xchg
adc
repnz
icebp
mov
clc
dec
int
lcall
inc
test
inc
bound
jp
sub
pop
pop
or
aad
inc
xlat
movntps
std
inc
dec
pop
xchg
fcomp
hlt
pop
dec
repz
inc
mov
scas
or
lock
aas
std
negl
dec
push
pop
arpl
fcomi
outsl
xor
repnz
sub
test
add
adc
rcll
ds
dec
jnp
pop
inc
jo
mov
and
jbe
and
mov
fcoml
mov
inc
cmpsl
rcll
aaa
or
testl
or
gs
push
pop
dec
cltd
pusha
xchg
jno
fisubs
jo
or
test
or
mov
icebp
adc
mov
das
push
aas
pop
call
mov
lods
and
xor
push
fstl
sub
xlat
lea
subl
jle
sbb
lods
push
aas
inc
dec
sub
ret
lds
cmp
loopne
pusha
addr16
mov
adc
and
into
sbb
out
rcrb
xchg
mov
push
fimuls
shlb
shll
add
fisttps
lds
pushf
imul
sti
adc
xchg
xchg
pop
xchg
cmp
add
pop
inc
aas
or
mov
sti
clc
pop
pop
mov
cmp
fcomps
dec
ds
fcoms
stos
xchg
es
and
mov
or
inc
sbb
test
push
mov
mov
mov
ret
xor
pop
ljmp
xor
lock
insb
dec
fidivs
into
mov
add
xchg
and
cmp
popa
movsb
stc
aas
je
test
xchg
sbb
js
push
dec
lock
jbe,pn
mov
ss
popf
mov
mov
mov
ret
adc
idiv
jecxz
jnp
out
mov
std
dec
or
cmp
iret
jns
push
stc
adc
lea
jmp
dec
test
jl
jb
add
xor
lret
sbb
insb
icebp
lret
addr16
cs
jne
mov
push
ljmp
adc
jcxz
and
xchg
fcompp
loope
fadds
mov
mov
adc
enter
mov
jnp
mov
mov
into
xchg
mov
jmp
enter
imul
imul
inc
mov
out
xchg
add
mov
arpl
test
mov
jne
jno
xchg
leave
mov
cmc
inc
mov
inc
sbb
lret
push
pop
or
mov
cmp
jecxz
leave
inc
and
mov
xchg
sbb
scas
mov
shr
imul
in
pop
pop
push
adc
aaa
mov
or
or
mov
xchg
ss
jb
ss
xor
xchg
in
pop
out
lods
sbb
cli
mov
jbe
or
pop
and
push
jnp
xor
jae
xor
mov
test
fs
mov
pop
inc
popa
mov
adc
lds
jne
mov
dec
xchg
or
insb
lahf
loop
inc
test
gs
mov
data16
mov
mov
jge
xchg
out
roll
mov
je
pop
inc
rorb
mov
xchg
or
pop
cltd
add
jmp
and
lods
or
movsb
pop
sub
add
sbb
clc
pcmpgtb
pusha
es
cmp
jbe
je
nop
hlt
inc
xchg
xchg
and
mov
nop
xchg
fcoms
sbb
jle
test
inc
shlb
leave
mov
out
push
movsl
adc
mov
or
call
stos
cltd
push
xchg
jb
sbb
xor
push
sub
movsl
inc
sub
jl
stos
in
es
test
shl
enter
adc
leave
xor
mov
add
loopne
mov
sbb
mov
mov
je
jge
outsl
out
jle
ljmp
clc
fisubrs
sti
jbe
and
test
dec
pop
pushf
jecxz
outsb
fdivrs
xchg
jb
mov
or
je
lods
xchg
add
cmpsb
shl
and
xor
or
jb
add
push
sbb
outsb
call
in
cmp
inc
shlb
mov
xchg
frstor
mov
sbb
scas
or
cmp
int3
push
dec
push
sbbl
add
push
sub
push
lea
jge
sbb
pop
into
sete
adcb
cltd
jbe
sbb
mov
xchg
fbstp
sbb
ficomps
jno
scas
sbb
nop
std
out
cwtl
mov
pop
xor
or
test
push
and
mov
aad
inc
lcall
sbb
adc
lret
jbe
jb
test
xor
cld
jg
xchg
or
outsl
adc
div
cmp
or
repz
add
dec
mov
insl
das
arpl
pop
mov
mov
and
push
cld
std
cmp
push
add
lock
in
popf
mov
mov
and
push
arpl
cmp
arpl
mov
xchg
outsl
pop
mov
addr16
cli
dec
push
imul
pop
mov
sbb
xor
cmp
or
pop
imul
push
ret
cs
mov
and
mov
inc
sbb
ljmp
adc
popl
dec
adc
in
mov
mov
lods
mov
shl
xor
test
mov
xor
cwtl
pushf
sbb
push
pop
icebp
xchg
xchg
pop
leave
fisttps
fiadds
adc
std
push
mov
rorb
loopne
jp
add
stos
les
sub
lds
mov
movsb
jbe
jmp
or
and
jo
arpl
stos
test
ss
pop
jnp
lahf
dec
add
inc
sub
or
not
in
xchg
fistps
sub
sahf
hlt
mov
jae
clc
mov
mov
call
ret
fimuls
dec
arpl
mov
cmpsl
sbb
shll
pop
xor
pop
adc
mov
cmc
mov
out
loop
lock
mov
clc
and
xor
jne
mov
sub
and
inc
inc
pop
mov
mov
xor
rclb
xor
data16
outsl
mov
cltd
dec
into
pop
aad
adc
jl
call
mov
xor
loopne
out
scas
fisttps
add
xchg
es
pop
aad
mov
dec
xchg
push
test
lock
xor
mov
xor
cmc
mov
sub
out
dec
sbb
sbb
loopne
roll
cmpsl
ljmp
aad
inc
and
pop
xor
fcoml
xor
ss
fxch
aad
fstpt
push
inc
ret
xchg
sbb
jo
and
fs
subl
adc
mov
cmp
cmp
push
lahf
dec
lret
cwtl
push
daa
add
pop
mov
xor
pop
rorl
jae
nop
shrb
js
inc
in
inc
pop
xchg
mov
push
pop
shrl
mov
dec
mov
divps
sahf
mov
and
outsl
pop
popa
in
out
roll
xchg
leave
js
into
adc
insl
shlb
lcall
xchg
or
sbb
push
dec
mov
ljmp
rclb
gs
mov
mov
mov
dec
push
subl
cmp
jns
push
jo
fdivl
pop
push
shll
push
mov
and
movsb
pusha
stc
xor
insb
shrl
push
mov
ret
xchg
jbe
push
push
nop
ja
clc
cmp
mov
rcll
movsl
cli
test
ret
jne
sbb
adc
out
or
repz
pop
jg
cmp
iret
pop
dec
xchg
test
adc
ffree
sbb
sub
fidivl
push
xchg
sbb
std
dec
sub
xchg
jno
sub
inc
push
out
in
xlat
lea
mov
push
es
and
xor
dec
leave
iret
push
mov
addl
xchg
aad
mov
add
add
out
into
cmp
dec
dec
incl
imul
mov
fists
pop
push
testb
push
pop
jmp
dec
fnstenv
push
jl
push
jnp
adc
rcll
icebp
push
enter
adc
push
hlt
jmp
push
xchg
xchg
cmpsb
loope
mov
scas
xchg
jl
jecxz
pop
xor
ret
or
addb
ficompl
xchg
pop
push
inc
stos
out
mov
in
xchg
mov
iret
fisttpll
pop
pusha
movsl
gs
idivl
addl
rcrb
jle
test
sbb
jg
push
repz
out
and
out
push
mov
cmpsl
out
inc
xchg
enter
rclb
sub
inc
aaa
clc
mov
rclb
xor
cli
push
subl
jge
dec
xor
test
xchg
scas
nop
or
daa
shl
push
dec
fistps
push
adc
scas
sbb
into
mov
dec
cltd
adc
mov
clc
mov
add
xchg
in
ret
loope
inc
pop
jbe
adc
or
rclb
xchg
les
enter
cli
xchg
jb
ret
fs
dec
cwtl
outsb
sub
fs
pop
repz
cmpsb
and
push
jae
or
dec
test
aas
xchg
stos
outsb
ds
pop
movsl
mov
inc
popa
mov
jl
jno
dec
cmp
ljmp
push
pop
repnz
sub
punpckhdq
out
dec
push
shl
add
fs
aam
repnz
push
jb
test
jno
jo
jmp
push
push
repnz
lahf
xor
fidivs
xchg
lcall
adc
ror
test
movsl
cmpl
cmp
pop
adc
dec
push
cld
inc
dec
dec
add
push
dec
xor
pop
mov
shll
ja
xchg
insb
ljmp
fiaddl
pusha
or
stos
out
inc
out
inc
lcall
xlat
inc
fcmovu
shl
test
inc
pop
add
mov
mov
or
mov
push
adc
mov
cltd
dec
cs
sbb
add
xor
mov
dec
out
push
out
push
sbb
or
jle
push
push
jg
aad
cmp
inc
or
hlt
in
bound
aas
and
xchg
inc
inc
hlt
mov
cwtl
in
push
mov
lods
scas
xchg
cltd
jmp
cmpsl
clc
and
shl
jecxz
xor
xchg
es
bound
outsb
fs
sbb
jmp
cmp
and
insb
cmp
cmp
std
gs
ret
mov
push
movsb
sbb
cwtl
inc
inc
inc
aam
pop
fucomip
pop
test
dec
push
adc
adc
xor
aaa
orl
and
popa
stos
in
xlat
adc
test
push
addr16
inc
jg
mov
out
dec
sub
aad
out
mov
adc
add
mov
aas
dec
jne
call
pop
lea
xchg
scas
loope
inc
imul
or
test
or
in
sbb
xchg
aaa
xor
pushf
sub
loope
lds
loop
inc
mov
jbe
inc
push
fldt
mov
stos
loope
mov
xchg
inc
sub
mov
xor
push
add
xchg
es
lods
mov
cmpsb
int
nop
cmc
out
dec
and
inc
cmp
es
gs
jnp
add
xor
push
fisubrs
cmpsb
lds
inc
test
sbb
repz
cmp
sub
enter
call
jmp
xlat
data16
or
cmpsl
mov
rclb
scas
hlt
and
xor
adc
or
mov
testl
lods
outsb
cmpsl
xchg
and
in
jb
std
scas
sbbl
insl
mov
in
mov
aam
mov
sti
aas
adc
cwtl
fisttps
push
shld
ss
jge
push
fdivs
stc
out
xchg
xor
cmp
pop
in
jg
cld
stc
or
insl
add
insb
stos
loop
add
xor
and
pop
leave
jg
ljmp
pushf
and
stos
lret
xor
mov
mov
lret
mov
cwtl
adc
push
test
xlat
mov
and
cwtl
pop
bound
mov
push
jno
xlat
or
aaa
or
outsl
idivb
xchg
test
push
cmp
pushf
mov
and
mov
rcrl
gs
mov
cmp
idivb
inc
pushf
hlt
adc
lds
jne
imul
iret
mov
xchg
test
ss
loope
mov
fwait
stos
and
je
fisttpll
push
push
rcrl
inc
fldenv
das
lock
jno
xor
add
out
scas
pop
aad
lahf
das
push
sti
or
or
cmc
or
inc
call
sub
add
fdivs
xchg
mov
jmp
cmpsb
fmulp
xchg
sub
dec
pop
addr16
adc
mov
inc
xchg
xor
adc
xchg
jp
pusha
in
cmp
sbb
push
xchg
cmp
lock
lods
jo
adc
jl
lods
pop
test
push
sub
xchg
inc
mov
inc
mov
pop
in
cli
test
movsl
sub
call
push
xlat
mov
jno
dec
aas
hlt
mov
out
addr16
repz
pushf
scas
push
cmpsb
ffreep
xchg
mov
fwait
add
icebp
fdiv
push
imul
cli
mov
inc
add
cld
aam
ja
inc
inc
inc
mov
shll
mov
sub
cmp
repz
in
cli
pop
mov
inc
sbb
outsb
dec
cld
repz
adc
or
and
cmpsb
or
test
scas
mov
cmp
stos
push
loopne
rclb
inc
fsubr
fadds
pop
test
bound
jbe
and
add
sbb
ficompl
ret
xchg
mov
andl
in
cmc
or
add
jno
push
mov
adc
add
ss
fists
in
push
add
inc
stc
and
outsl
sahf
iret
insl
out
ret
lods
and
jbe,pn
jmp
nop
mov
inc
pop
or
idivl
xor
mov
arpl
bound
lds
and
sahf
gs
jle
cltd
test
cmp
outsb
sarl
das
adc
cmp
dec
inc
addb
loopne
dec
inc
cmp
insl
and
ds
rcll
add
fs
lret
adc
cmc
sub
and
sub
jne
test
push
mov
sub
ja
or
sub
and
xlat
imul
sarb
pop
jg
lret
adc
xchg
or
dec
ret
xchg
mov
loopne
shrb
and
mov
push
cmp
sbb
pop
lahf
and
fwait
xor
push
in
jmp
sbb
jle
jmp
pop
push
aaa
inc
cmp
cmc
rorl
add
sbb
mov
loop
mov
divb
icebp
xor
sbb
mov
imul
faddl
cmpsl
pop
jae
pop
xchg
shlb
fiadds
sbb
dec
jno
ljmp
mov
adc
mov
mov
out
insl
cmpsl
xor
pop
jle
dec
in
nop
mov
push
sbbl
sbb
cs
sbbl
clc
pop
imul
movsb
push
xor
rcrb
insb
dec
movd
outsl
inc
cwtl
add
jb
lds
push
ds
aaa
jmp
xor
dec
iret
mov
bnd
pop
inc
stos
imul
int3
test
and
push
iret
imul
xchg
sti
sub
jl
inc
int
lahf
sub
clc
jp
cmpl
and
mov
mov
ljmp
and
jae
rcll
xor
dec
fisttps
dec
imul
outsl
cmpsl
sbb
jbe
out
xchg
fstpl
repz
popa
pop
sbb
push
stos
mov
bound
lods
pop
cmp
sbb
inc
dec
dec
sub
enter
arpl
push
and
ficomps
imul
pop
jo
mov
les
sbb
push
xchg
bnd
push
xor
cmp
inc
ljmp
jae
and
orb
xor
repnz
mov
jns
pop
mov
ja
adc
and
fsts
or
or
iret
fcmovne
clc
jb
sbb
mov
mov
and
les
cs
ret
mov
call
push
mov
add
adc
jae
clc
pop
xchg
mov
add
adc
loope
mov
lods
xlat
dec
gs
inc
notl
xorl
push
or
sub
aaa
shrl
mov
jp
push
pop
adc
mov
sbb
fs
mov
popa
xchg
les
cltd
xchg
out
out
fcoml
xchg
aad
xor
push
pop
aam
inc
stos
mov
lea
scas
adc
adc
out
ds
test
popf
stc
rorl
push
out
popl
xchg
out
rorb
mov
xchg
sub
into
ficoms
lahf
es
mov
sub
adc
pusha
add
dec
jb
inc
cltd
mov
xor
mov
xchg
and
enter
cmp
mov
xchg
test
mov
fwait
jb
cltd
sbb
jb
cmp
or
imul
lcall
rcl
jecxz
scas
or
adc
lock
scas
pop
push
sbb
stos
popf
mov
aad
fistl
sbb
nop
lret
stc
insl
test
inc
out
inc
xor
mov
mov
push
div
icebp
scas
mov
pop
xlat
xor
mov
in
dec
movsb
cmpsl
jbe
inc
xchg
jl
cwtl
mov
andl
push
mov
xchg
insl
pop
jae
mov
pop
arpl
and
shl
mov
cmp
add
dec
das
jle
int
mov
lds
repnz
mov
lcall
inc
lock
jns
pop
add
aam
mov
dec
in
inc
arpl
inc
push
fldcw
je
cmp
pop
add
sarb
mov
test
sbb
rolb
fdivrs
or
or
inc
jecxz
divl
cmp
adc
imul
inc
jns
iret
jmp
xchg
inc
dec
xor
or
or
xchg
mov
sub
lea
int
dec
cmpsb
ret
nop
sar
dec
mov
inc
test
adc
cs
ret
cmp
push
mov
sarb
mov
adc
test
ds
cmp
mov
pop
orb
mov
xor
data16
sub
push
in
push
loopne
add
jp
std
xchg
sti
mov
mov
sbb
imul
pop
push
cli
xchg
fldcw
mov
and
mov
mov
dec
dec
mov
push
daa
and
test
xchg
pop
iret
ljmp
adc
test
cli
cltd
inc
xchg
ljmp
inc
xchg
inc
cmp
out
push
mov
or
ds
and
scas
nop
test
inc
push
aas
pop
or
inc
iret
xchg
push
or
nop
jmp
lret
in
jnp,pt
pop
or
pop
shl
pop
mov
jl
dec
pop
lods
push
les
adc
insb
std
push
rcrb
adc
adc
fnstcw
lds
sbb
jle
lea
shll
jge
add
test
ljmp
out
bound
fistpll
dec
or
mov
add
pusha
shl
test
and
or
ljmp
and
xchg
loop
mov
ficoms
and
pop
jo
fwait
xchg
adc
push
leave
mov
andl
sahf
cmpsl
in
cltd
mov
jp
jbe
dec
adc
jge
mov
sbb
js
jo
aam
xchg
std
cmp
mov
mov
xor
sti
xor
mov
pusha
sub
pop
fincstp
fidivl
jmp
jmp
je
mov
push
push
sub
dec
out
mov
xchg
jmp
mov
pushf
cmp
and
and
push
in
pop
ja
mov
lods
imull
cmp
xchg
scas
sub
fcmovnu
push
cmp
or
mov
lods
out
fisubrl
xchg
jmp
jo
jne
lds
mov
aaa
out
leave
fiadds
in
lock
fcoml
mov
xor
cltd
add
ljmp
xchg
lret
aas
and
xchg
subl
jl
enter
push
shrl
jae
iret
jb
inc
inc
stc
lret
sahf
and
sub
add
lcall
jns
daa
movsb
fnstsw
iret
inc
xchg
outsb
add
xchg
add
imul
adc
dec
sahf
xor
mov
popa
sub
push
sub
pop
aam
add
cmp
test
pushf
test
mov
in
pop
iret
mov
adc
lea
sub
ret
in
mov
mov
jg
xchg
push
xchg
pop
add
inc
mov
mov
jle
dec
cmpsb
and
and
add
xchg
out
add
decl
add
nop
pop
jno
daa
out
inc
pop
xor
ljmp
and
aaa
pop
fs
loopne
and
sub
mov
je
dec
mov
dec
mov
add
add
push
popa
into
lret
dec
or
and
pusha
sub
add
xchg
or
mov
cld
adc
xchg
icebp
xor
dec
arpl
movsb
in
add
pusha
fadd
jecxz
push
or
dec
sti
fdivrl
cmc
sub
gs
cmp
mov
cmp
dec
mov
fnstcw
test
inc
or
mov
or
pop
lret
addr16
ja
push
popf
lock
loopne
mov
dec
adc
int
dec
loopne
in
loopne
sbbl
xchg
lcall
push
adc
test
insb
gs
out
xchg
enter
fs
sub
jl
sub
fmuls
mov
mov
mov
repz
jge
add
pop
push
pop
mov
inc
loop
dec
or
jne
jae
popa
push
push
xchg
xor
je
loop
outsl
icebp
in
mov
cmc
int
adcb
xor
or
xchg
or
cltd
fidivl
xor
ss
cltd
cmpl
pop
loop
sbb
cmp
aam
pop
jl
in
insl
in
sbb
mov
jl
stos
mov
dec
loop
or
inc
pop
test
cmp
mov
rorb
movaps
cmpsb
daa
aaa
lods
cmp
pop
inc
sbb
inc
dec
insb
daa
adc
cld
or
scas
or
ja
pop
mov
and
or
bound
or
rcrl
xor
sbb
sbb
mov
pop
mov
lock
sbb
xchg
pop
int
pop
xchg
dec
repnz
add
push
add
inc
addr16
cmpsl
add
fs
cmpb
add
daa
lds
mov
inc
imul
inc
hlt
pop
push
mov
aas
in
pop
into
icebp
pop
les
sub
dec
shrb
aam
pop
aas
js
xor
in
xor
imul
push
lock
add
or
fnstcw
xchg
add
movsl
cltd
imul
fcompl
cmp
jnp
and
jmp
imul
lcall
xchg
sbb
fbstp
pop
push
test
pop
pop
pushf
jecxz
cmpsl
add
jns
sub
mov
shlb
loope
push
inc
iret
filds
mov
out
inc
ja
iret
pop
push
xor
push
pop
lahf
test
loop
inc
cmpsl
mov
sub
rcll
or
gs
sub
ja
inc
rcrl
inc
push
push
push
and
testb
mov
jl
out
js
sbb
lea
jno
pop
push
fwait
sub
je
push
jg
dec
mov
adc
sbbb
pusha
cmc
daa
daa
xchg
mov
ret
out
insl
cmp
jl
xor
pop
dec
jp
les
and
jnp
and
std
cwtl
cmpsl
gs
pop
ja
scas
ret
jb
or
pop
je
dec
sar
daa
pusha
rcl
scas
push
sbb
loope
out
fiadds
jg
mov
or
cmp
push
ljmp
push
jmp
ret
xchg
out
jb
jo
push
xor
pop
into
stc
ljmp
inc
adc
jno
xchg
orl
sbb
cmpb
mov
xor
sub
subb
in
fwait
pop
xchg
or
mov
mov
mov
lds
scas
rorl
fiaddl
ljmp
mov
aad
inc
cmc
sbb
les
pop
pop
jmp
cmpb
jp
fcomps
mov
in
in
dec
and
mov
in
mov
test
out
pusha
add
add
daa
icebp
push
add
mov
mov
pop
lahf
mov
fs
frstor
fldl
push
cltd
xor
lahf
stc
mov
stos
rcll
jae
jle
loope
cmp
mov
pop
cmp
in
push
mov
sbb
std
xor
int3
jae
or
dec
mov
xchg
jnp
popf
push
adc
xlat
enter
fisubl
inc
outsl
xor
mov
pop
xchg
inc
push
addr16
adc
loopne
lds
loope
lods
out
mov
aam
gs
in
insl
or
pushf
mov
xor
in
xor
ds
jno
sub
cmp
jae
jg
inc
add
jmp
mov
xchg
fisubl
xlat
dec
xchg
push
xlat
xchg
push
ss
das
cmp
call
mov
lret
jle
sub
fmuls
jg
or
sub
scas
leave
into
fwait
dec
dec
std
cmp
imul
mov
xor
arpl
xchg
cli
and
dec
repnz
add
in
pop
xchg
stos
dec
push
mov
xorl
rcrl
fcompl
lahf
cs
ja
push
mov
aam
push
lret
dec
push
mov
mov
int
ds
fwait
daa
addl
adc
pushf
idiv
dec
or
mov
in
mov
les
inc
xchg
cmp
pop
sarb
xchg
into
pusha
aas
stos
sbb
pop
sub
ret
add
in
sahf
or
xor
dec
setbe
jne
push
fstp
icebp
lds
iret
setle
mov
and
mov
or
cmpsb
pop
hlt
pusha
sub
cmp
xchg
stos
push
add
test
fcomps
test
xlat
push
xor
adc
mov
das
popa
lcall
or
shrb
jae
push
loop
aas
fcmovnu
add
inc
filds
dec
std
mov
imul
add
lds
sbb
clc
cmp
mov
inc
mov
mov
shll
and
loope
push
mov
stos
xchg
and
xor
stos
and
daa
adc
in
and
lds
inc
lcall
jecxz
orb
les
mov
adc
jb
inc
mov
jmp
inc
mov
jge
ret
in
dec
int
lea
cs
mov
sbb
in
sub
and
xor
or
sub
mov
andb
add
mov
das
mov
mov
pusha
cs
mov
mov
js
lods
jle
lret
jge
cmp
loopne
mov
mov
sbb
enter
mov
cs
shrl
and
aad
or
jne
xor
jg
mov
int
mov
lods
mov
out
mov
cmpsl
cltd
mov
cmp
cld
mov
xor
rorl
insb
aas
or
cwtl
ds
pop
cmp
jmp
jl
and
insb
push
jo
xchg
fstps
je
int
ljmp
cld
bound
test
test
adc
push
testl
ror
jno
data16
ffree
negb
pusha
or
xor
pop
mov
scas
aas
stos
divl
shll
loopne
shll
mov
jae
es
lock
jp
cmp
cs
inc
add
sbb
dec
inc
aad
sub
test
xchg
mov
fistpll
push
push
jmp
stc
or
pusha
pop
mov
popa
mov
cmp
mov
and
xchg
notl
inc
push
test
or
pop
aas
sub
in
sub
loop
mov
add
dec
fmull
pop
daa
cmp
ja
or
sbb
jmp
loop
in
push
pop
insb
out
cltd
aad
mov
shl
nop
insl
xor
adc
call
push
push
sti
sub
cmp
out
cld
hlt
xchg
mov
aad
mov
push
cltd
xor
sub
jg
aaa
outsl
addb
inc
ret
je
sbb
jmp
sub
movsb
fs
aam
mov
je
dec
sub
inc
xchg
mov
dec
mov
pop
adc
mov
jmp
or
adc
pop
or
shl
test
daa
jecxz
cmp
adc
xorl
jo
push
mov
xor
xor
mov
jecxz
adc
and
and
add
in
sub
popf
jb
stos
add
ljmp
mov
dec
or
je
push
xor
pop
daa
nop
clc
inc
xlat
jb
lcall
mov
push
push
dec
stos
jne
addr16
mov
adc
dec
idivb
mov
mov
cwtl
inc
leave
popa
and
mov
test
jle
lahf
hlt
push
mov
cmp
mov
lahf
cmp
cmp
fsubl
emms
mov
fsubl
int3
adc
loop
cmp
leave
repnz
sbb
sahf
lret
out
add
aaa
jne
xchg
xchg
cmp
ret
lcall
sbb
data16
sbb
cmc
imul
cmp
aam
lods
loopne
outsb
push
jle
je
jae
cmp
rclb
pop
jae
movsl
inc
lods
testb
loopne
jle
jns
inc
cmp
jmp
xchg
adc
xor
jns
cmp
inc
fists
fwait
pop
adc
mov
and
iret
pushf
adc
sbb
mov
mov
push
repnz
int3
cmp
mov
or
and
mov
inc
aam
dec
fiaddl
call
ja
push
icebp
add
movsl
pop
push
push
lea
sti
add
mov
jns
mov
inc
adc
add
add
fdiv
mov
pop
xchg
and
mov
jp
fstps
push
divl
aaa
push
jnp
mov
ret
sub
repz
and
mov
dec
xchg
arpl
jbe
insl
mov
and
fstps
gs
xchg
dec
jno
test
sub
lods
mov
or
pop
mov
and
jp,pt
xor
push
bound
mov
xchg
inc
int
aad
add
out
aaa
mov
ljmp
sbb
in
xchg
int3
cli
test
scas
ret
icebp
and
out
and
mov
in
pop
pop
ljmp
nop
hlt
sbb
pop
xchg
and
add
xor
mov
push
lret
loop
lock
stos
test
repz
mov
mov
outsb
push
inc
xor
or
add
mov
push
mov
rcrb
or
and
adc
dec
add
xchg
and
lret
xrelease
test
inc
icebp
adc
fiaddl
leave
das
lret
cld
mov
mov
or
mov
repz
inc
pop
dec
lret
push
and
aas
mov
in
push
jae
imul
aad
xchg
push
add
int
leave
scas
ret
les
pop
int3
or
mov
movsb
fwait
imul
loopne
sub
sbb
lock
adc
cmp
mov
mov
jo
test
adc
mov
aam
pop
pop
xor
cmc
jp
mov
lcall
inc
push
loopne
jg
test
loope
out
inc
or
dec
ficoml
cmp
jnp
scas
cmp
adc
movsl
mov
xor
cmpsl
pop
std
adc
and
rol
jl
sub
mov
push
test
in
add
loopne
sub
imul
cmpsb
sbb
xchg
js
push
imul
imul
imul
hlt
add
cmp
and
mov
stos
or
jl
movsb
cmp
mov
int
dec
pop
int
jnp
test
loop
loope
and
sti
cmpsb
mov
inc
in
stc
adc
inc
push
int3
imul
daa
aaa
and
mov
xor
dec
inc
fiaddl
or
push
xor
xor
stc
int3
push
mov
je
xchg
scas
mov
adc
aaa
lock
push
fs
cmp
xorb
dec
sub
test
lea
in
jo
sbb
inc
ficompl
pop
popa
repz
lock
ljmp
and
or
sbb
lds
push
push
or
sahf
mov
cmpsb
push
pop
pushf
lret
push
add
in
movsl
or
xor
mov
push
lock
xchg
jle
jnp
inc
ss
nop
sahf
mov
js
ljmp
icebp
pop
dec
sbb
push
inc
cmpsl
sub
or
mov
popf
xchg
lahf
dec
jo
jno
dec
pop
lret
in
in
xchg
enter
insl
movsl
mov
subl
mov
stc
movl
pop
pop
adc
roll
mov
imulb
cmp
jg
or
mov
movsl
icebp
lea
inc
in
sbb
cmpsb
adc
in
pop
scas
das
sbb
push
pop
xchg
into
adc
ja
cmpsl
mov
cmp
lcall
arpl
sub
pop
cmp
dec
imul
aam
adc
in
test
jno
sti
into
out
stc
in
xchg
dec
xorl
cs
rcll
shl
push
dec
jns
pop
cmc
xor
or
mov
aas
adc
daa
cmp
inc
fdivs
ja
jb
pop
out
add
fcmovnb
roll
stos
clc
cmp
lods
xchg
lret
push
xor
inc
imul
mov
sahf
mov
into
call
jae
xor
iret
cmp
hlt
mov
fs
out
out
shrb
mov
and
cs
lds
jnp
aad
xor
enter
and
dec
rcr
movb
dec
mov
es
cltd
scas
pop
repnz
cmp
jmp
ss
imul
push
xchg
push
cmp
mov
pop
idiv
sbb
sbb
mov
push
add
sbb
push
add
enter
js
repnz
rcrl
stos
pop
lret
sbb
stos
movl
add
leave
outsb
and
outsl
push
xchg
shr
sbb
cmp
xorl
cmpsl
mov
push
std
jo
lahf
sub
fbstp
imul
or
xor
int3
cld
dec
sbb
lahf
inc
test
mov
adc
jae
add
and
jae
in
jbe
mov
cld
xor
in
loop
dec
ret
inc
into
adc
pop
push
add
lea
rcrl
dec
push
daa
mov
out
mov
jbe
fiadds
out
stc
pop
imul
inc
or
fmul
mov
pop
les
cs
push
push
mov
sbb
or
movsl
fmull
inc
jl
jle
pop
jecxz
sarb
inc
fsubr
mov
xor
xchg
fsubr
cwtl
imul
mov
aaa
jnp
sub
inc
test
push
popa
lret
xchg
stos
mov
loop
sub
and
fcomip
push
jecxz
out
fucomp
and
nop
sub
shl
testl
mov
bnd
loop
fimull
adc
in
sarl
cltd
jl
pop
push
clc
mov
mov
xlat
sbb
sub
cltd
adc
int
jl
push
adc
fistpll
ss
scas
mov
test
and
mov
addl
adc
sub
push
stos
pop
push
shll
pop
or
mov
aas
movsl
outsb
sub
cli
dec
pushf
jne
in
imul
push
sbb
mov
jmp
punpckldq
push
dec
dec
mov
sub
sbb
pusha
xor
nop
push
xchg
test
cwtl
push
jns
xadd
xor
roll
mov
subb
pop
mov
fnstsw
xchg
xchg
mov
cmp
pop
and
mov
sbb
fdivrl
lds
adc
xchg
sub
dec
out
jecxz
push
mov
mov
lods
arpl
loope
mov
push
out
sub
add
into
push
lahf
jb
lods
in
aaa
dec
inc
gs
pop
inc
push
mov
xor
push
sbb
divl
out
pop
push
jns
sub
test
mov
inc
lea
cmp
lcall
int3
test
test
push
jns
icebp
xor
addl
push
les
push
in
mov
mov
or
fstps
xchg
sbb
fistpll
pushf
mov
xchg
stos
dec
adc
or
or
shl
sub
leave
sti
leave
xchg
movsb
pop
jmp
pop
shl
add
jg
jb
xchg
and
fldt
int
dec
mov
and
jbe
je
roll
lcall
ret
sahf
scas
adcb
sbb
push
orl
in
addr16
xchg
mov
pop
cmp
aam
decb
jno
pushf
repz
dec
mov
jmp
dec
mov
sub
inc
sub
shl
pop
dec
dec
gs
mov
fidivrs
mov
xchg
pop
es
sub
and
pop
scas
push
push
and
fisttpl
sbb
arpl
mov
data16
and
call
rorb
imul
pushf
lock
arpl
add
movsl
out
cli
mov
repnz
data16
mov
mov
mov
movsl
pop
mov
mov
jmp
pop
inc
dec
xchg
aam
inc
mov
repnz
pop
or
test
mov
xor
push
sbb
xor
pop
popa
push
and
cmp
jno
stos
lods
in
push
inc
adc
xchg
and
scas
lds
cmp
stc
jbe
movsl
scas
and
push
jns
mov
mov
out
push
adc
mov
mov
clc
nop
popf
pop
arpl
test
cmpsb
lret
mov
shl
adc
movsb
comiss
inc
popa
inc
rorl
imul
fwait
add
faddp
cmp
dec
dec
xor
mov
cli
xchg
or
in
mov
dec
xor
jp
jle
push
repnz
cld
out
cmp
push
or
adc
mov
cmp
fcomip
es
in
push
mov
push
shll
jne
mov
push
fdivs
outsb
icebp
in
push
mov
fwait
es
sub
ja
mov
leave
test
sub
pop
pop
bound
cwtl
js
jle
pop
jge
out
das
push
push
out
test
ret
cmpb
iret
mov
adc
or
lds
pop
mov
cltd
mov
push
lea
mov
push
imul
dec
mov
mov
js
pop
inc
mov
mov
add
out
loope
fstl
or
ljmp
sbb
clc
ss
mov
fldl2t
imul
cmpl
cs
popa
dec
call
and
cs
repnz
lahf
lahf
adc
sahf
mov
sub
ret
divl
xchg
outsl
xor
and
pop
inc
xchg
rcr
and
pop
rcl
cmp
push
in
shrl
insb
jb
mov
test
iret
mov
cli
test
push
fwait
clc
shlb
sbb
cwtl
das
es
pop
cli
cmp
inc
mov
sub
loopne
push
fists
ret
push
lret
popf
loope
jnp
cs
mov
sub
jle
mov
sbb
sbb
lds
call
andb
lods
inc
and
mov
push
ds
scas
cmp
ss
int
ror
pop
or
dec
shr
mov
fcmovnb
jnp
xchg
and
dec
insl
xor
shr
pusha
ss
ja
lcall
adc
enter
int3
pop
scas
mov
xchg
add
sub
popa
xlat
cmpsb
lea
mov
cmp
imul
jge
jge
lcall
sub
dec
inc
adc
daa
test
ljmp
addr16
cltd
mov
cwtl
lahf
mov
mov
mov
insl
in
mov
fmull
daa
cli
cmp
addr16
aad
lock
add
jg
xchg
loop
xchg
dec
iret
ja
rcrb
inc
fdivrl
scas
inc
scas
push
sbb
pop
inc
push
rcr
mov
aad
or
lea
dec
repz
jp
sbb
sub
loopne
xchg
mov
ljmp
adc
test
popf
lea
ss
or
scas
adc
mov
xchg
fisubrl
dec
push
add
xchg
cmp
inc
dec
das
mov
add
cltd
lock
call
enter
add
cmc
adc
movsb
dec
daa
dec
imul
test
pop
sti
cli
bound
adc
pop
rorl
mov
cmp
mov
or
jmp
add
and
xlat
jo
je
pop
lock
mov
rorl
nop
scas
icebp
and
ds
inc
cmp
rcl
add
sbb
xchg
lahf
inc
cmpl
push
pop
xor
cmpsb
mov
icebp
or
jno
test
in
pop
push
pop
addb
mov
adc
push
scas
loopne
mov
sub
pop
aam
xorl
jmp
sbb
pop
mov
mov
sbb
add
mov
dec
int
test
ret
xlat
pop
jle
jne
lock
call
mov
jae
xbegin
movsl
inc
fnstcw
cs
fstl
cmp
mov
inc
mov
arpl
xorb
or
mov
xchg
clc
cmp
pop
dec
addr16
movsb
test
jb
imul
mov
mov
push
mov
rcll
lret
mov
lods
jg
sbb
xor
or
push
pop
mov
fs
add
mov
les
xchg
jge
cmp
dec
add
cmc
cmp
lret
stos
fsubl
sbb
sbb
shlb
mov
adc
inc
je,pn
shll
scas
jp
mov
mov
push
cli
pop
mov
xor
jmp
jg
adc
or
jne
add
sti
push
jnp
sub
mov
jb
push
push
repnz
pusha
push
sub
mov
push
fnstsw
outsl
mov
xchg
inc
lods
leave
aas
fldt
call
aam
iret
and
adc
enter
jno
popf
xchg
popa
movups
cmpsl
jl
add
fisubrs
int
fists
test
pusha
out
mov
xchg
sbb
and
aaa
arpl
pop
in
xlat
js
pop
add
adc
rclb
mov
xchg
push
iret
das
mov
insl
pop
mov
mov
stos
jbe
inc
jp
sbb
decl
sub
and
sub
int
mov
and
out
sbb
adc
jge
mov
mov
dec
inc
or
pushf
dec
or
ret
adc
dec
add
jo
or
mov
xor
lahf
jbe
lods
dec
cmp
out
xor
insb
mov
stc
and
pop
push
hlt
outsl
fsubrl
mov
lcall
mov
cmpsb
add
pop
test
fwait
and
sti
cmpsb
lret
jmp
into
inc
adc
mov
test
push
rolb
fisttpl
cmpsl
dec
out
pop
ret
add
lahf
loop
inc
cmp
mov
cmp
fs
jp
xchg
xor
fisttps
inc
pop
jo
push
mov
xchg
xchg
loopne
ds
outsl
xchg
xchg
cmp
mov
mov
outsb
and
das
mov
xor
sbb
stos
or
add
or
fcoml
xor
aam
fwait
loopw
pop
mov
or
jle
test
in
stos
jmp
jg
mov
in
fmul
xchg
mov
into
cmpsb
dec
aam
cli
push
or
adc
insl
pop
xor
or
sub
or
sbb
lret
pop
mov
out
adc
sbb
or
inc
out
into
lods
push
push
pusha
and
xor
sub
cli
loopne
or
iret
dec
jbe
out
push
pop
icebp
ja
js
mov
cmc
xor
inc
xchg
mov
mov
ljmp
dec
es
cmp
jns
and
jle
fstl
pushf
repnz
movsw
hlt
dec
rol
mov
pop
xor
scas
je
test
push
jne
xchg
sbb
sub
jg
imul
adc
pop
adc
mov
pop
aam
inc
sbb
mov
push
sub
pop
inc
stos
scas
pop
int
adcb
fisubrs
test
aad
push
inc
inc
cmp
mov
dec
enter
fidivs
mov
cmp
std
and
mov
int
adc
imul
andl
mov
cmp
outsl
arpl
pop
push
inc
jnp
pop
cltd
sub
fdivl
inc
jge
push
mov
inc
shlb
cmp
mov
sbb
cmp
adc
dec
mov
rcr
sbbl
test
mov
cs
jb
add
inc
not
ljmp
ret
in
and
adc
and
fisubrs
mov
sti
jno
arpl
aad
int
sub
stc
inc
andb
mov
xorb
xor
les
push
jmp
sbb
sbb
mov
aad
mov
andb
sbbb
loope
fsubs
std
int
jmp
test
les
mov
mov
stc
push
fbstp
cmpsb
loopne
add
sub
fmul
fsubl
jge
xor
sbb
adc
aad
inc
idiv
dec
cmpsb
fbld
fcoml
test
icebp
cmp
ret
or
lcall
push
mov
push
cmp
mov
pop
cltd
mov
or
xchg
repnz
xor
lods
mov
mov
mov
int3
cmpsl
imul
stos
and
mov
add
das
lods
rcll
mov
lret
and
jecxz
pop
sub
lods
cli
outsb
inc
mov
mov
and
pop
lock
xor
jnp
cmpsl
jbe
sub
mov
inc
pusha
insl
jns
int
cmp
jecxz
jb
pop
mov
dec
iret
mul
cmp
push
fistps
and
icebp
out
icebp
mov
fsubrp
ret
jae
add
leave
popa
inc
cmp
sti
mov
jo
add
clc
cmp
sbb
xlat
inc
adc
pop
mov
sbbb
cmp
add
dec
push
add
dec
inc
sbb
scas
loope
enter
jmp
fwait
lret
out
sahf
hlt
xchg
pop
je
ret
push
jno
jae
loopne
mov
inc
in
movsb
mov
and
stc
mov
clc
jmp
leave
ds
ficoms
push
jle
shr
dec
dec
add
push
dec
xchg
cmp
nop
test
pop
addr16
jmp
sti
push
jbe
movsl
add
sub
and
push
sbb
cwtl
jns
gs
das
mov
or
xor
aam
test
dec
int3
sbb
or
test
add
in
jb
pop
push
inc
jbe
arpl
fistpll
sub
cmp
pop
adc
pop
cwtl
stos
stos
in
and
xlat
in
into
add
lret
dec
ljmp
loopne
loop
sbb
and
negb
pop
stos
hlt
ret
lcall
mov
sbb
cmc
add
lcall
jo
lods
in
cmp
push
cltd
leave
pop
mov
lahf
mov
mov
ds
mov
push
cltd
mov
jnp
test
lret
movsl
mov
mov
adc
fbstp
jne
pop
and
xchg
aaa
popa
pushf
in
pop
jmp
pop
stos
and
cld
xor
and
sbbl
sti
push
rcll
lahf
mov
loop
jg
fwait
lods
stc
insl
xor
adc
xchg
jmp
outsb
popf
sbb
stc
hlt
cld
aas
sti
cmp
add
in
jns
add
fsubl
push
mov
sub
daa
test
cmp
aaa
add
fwait
xchg
rcrl
jo
test
movsl
and
test
movsl
cmp
xor
push
popa
sub
in
dec
scas
and
ljmp
pop
in
lock
or
pusha
dec
mov
popa
mov
movsl
pop
sub
in
mov
adc
pop
scas
sbb
and
and
push
ret
mov
mov
push
ficoms
sahf
fisubs
stos
nop
in
stc
pop
pop
es
movsl
popa
in
or
cmp
in
push
jnp
mov
pop
xlat
out
aas
outsl
mov
divl
and
sub
sbb
adc
jge
jp
out
cmc
mov
incb
aas
xchg
gs
fcmovu
dec
xchg
orb
lret
popa
mov
cld
xorl
outsb
mov
pop
and
sbbb
mov
sub
mov
cmp
in
les
push
sbb
aas
push
pop
ret
out
test
dec
push
arpl
push
mov
mov
adc
jg
daa
mov
aas
inc
cmpb
xchg
daa
fnstsw
fistl
pop
xchg
dec
insb
repz
sbb
jno
jae
lahf
xor
fs
in
add
inc
dec
xchg
stc
nop
mov
adc
mov
into
scas
insb
pop
jnp
mov
lods
adc
and
stos
test
test
add
mov
cmp
add
out
test
push
add
xchg
movsb
pop
mov
add
out
mov
int3
pusha
push
push
dec
fldenv
push
jo
add
arpl
mov
sub
push
test
mov
pop
inc
mov
adc
cli
and
shll
rolb
pop
inc
sub
xchg
insl
dec
jbe
daa
out
out
lds
pop
mov
add
sbb
in
mov
add
and
aad
stos
gs
xor
mov
and
mov
mov
inc
push
adc
in
pmulhuw
pop
push
or
aas
dec
xor
xor
jae
or
jae
movhps
xorb
pusha
xchg
imulb
mov
enter
test
xchg
or
cwtl
push
outsl
add
out
in
push
ss
cs
es
push
mov
insl
fs
push
xor
pop
inc
mov
shll
aam
sbb
jecxz
inc
sbb
mov
inc
cmp
push
call
stos
mov
jb
adc
mov
outsl
xor
or
aad
and
out
mov
dec
xchg
stos
and
cmc
jg
xchg
aaa
jmp
mov
adc
mov
inc
and
js
mov
pop
aam
arpl
sarl
and
xor
adc
scas
aaa
leave
jmp
pop
mov
int
mov
pop
cwtl
push
push
push
dec
lcall
lcall
ror
push
sub
test
and
jmp
movsl
mov
iret
jbe
ljmp
jb
mov
aaa
adc
pop
dec
pop
mov
xchg
sub
adc
insb
scas
cmp
gs
sti
xor
cmp
insl
xchg
cmp
dec
repnz
push
cmp
aas
fbld
imul
add
push
sbb
rolb
loop
adc
mov
adc
xor
icebp
bound
adc
inc
adc
arpl
int3
sub
pop
fdivrs
leave
test
adc
popf
lahf
test
fsubr
xor
mov
cld
cmp
pushf
sbb
dec
daa
mov
cmp
sub
and
pop
data16
mov
sahf
mov
icebp
inc
dec
mov
or
pop
mov
push
dec
jle
push
sub
and
orb
mov
out
xlat
cmp
pop
sbb
or
scas
stos
rcrb
ja
add
or
and
mov
xchg
and
lahf
test
or
shlb
push
stos
pop
cmpsb
nop
stc
mov
cli
pop
mov
lds
out
out
aas
ds
andl
pop
push
stc
stc
push
and
insl
dec
mov
xchg
fnstsw
xor
loopne
jbe
jp
cmp
inc
sbb
int
pop
xchg
dec
std
leave
rolb
lahf
and
int
stos
fstl
and
insb
test
adc
js
aas
pop
push
pop
sahf
mov
and
mov
xor
lret
scas
popf
pop
rclb
mov
sub
test
cmp
cltd
pop
pusha
or
lahf
sti
push
cmp
xchg
or
pop
or
adc
lock
pop
xor
sub
mov
pop
mov
popf
cmp
add
jmp
dec
sub
push
cmp
pop
xor
fs
and
incb
cmp
dec
call
xor
xchg
sbb
xchg
xor
cmp
insb
outsl
and
call
or
mov
and
sar
out
or
jge
push
test
pop
xchg
mov
xor
inc
xlat
pop
cmp
adc
jae
pop
mov
in
scas
mov
or
pop
fsubrl
icebp
sbb
pop
jb
test
mov
fldl
fdivl
mov
je
imul
test
xchg
jmp
imul
insb
cs
cmp
fimull
repz
jno
add
aas
frstor
adc
jno
popa
aad
inc
rcrl
decl
insl
aas
xor
test
push
dec
and
daa
or
and
jge
adc
inc
jge
push
pop
xor
and
dec
sarl
or
sbb
clc
std
xor
cld
dec
arpl
push
dec
jp
out
xor
arpl
mov
pop
mov
jno
frstor
inc
inc
inc
or
mov
mov
dec
movsb
jbe
lahf
cmc
nop
and
sbb
fdivrl
pop
js
add
pop
mov
adc
shll
pop
out
or
add
fnstenv
jns
add
dec
jle
movsb
push
inc
mov
test
int
gs
ror
cmpsb
ljmp
lock
adc
inc
or
inc
hlt
gs
into
les
in
loop
xor
nop
popf
and
lret
cmp
rcll
xchg
mov
dec
push
xchg
mov
or
jmp
xor
imul
jg
enter
add
xor
in
lds
filds
mov
jp
dec
out
add
addr16
lcall
ret
push
call
push
test
dec
lret
cmp
inc
jbe
repnz
bound
in
cwtl
aad
inc
test
mov
or
ret
aas
add
xchg
bound
imull
dec
inc
adc
jbe
int3
lret
imul
fldl
sbb
mov
cs
incl
cmp
stc
lds
faddl
sub
mov
sbb
or
lahf
ret
out
fnsave
xchg
xchg
and
les
loop
test
es
enter
or
add
push
xor
cmp
sbb
sarl
push
sbb
mov
lds
and
jnp
jb
icebp
mov
shlb
sbb
ret
add
out
aas
xchg
cs
pushf
pop
js
xchg
outsl
addr16
sub
and
dec
insl
or
ret
daa
cmp
test
movsb
loope
fs
lock
add
das
fisubl
and
lock
jmp
pop
push
dec
inc
jecxz
aad
repnz
and
jb
je
xchg
jne
sbb
mov
xchg
pusha
pusha
pop
sbb
loopne
insb
enter
mov
mov
sub
cmp
sbbl
inc
pop
cli
ficomps
add
inc
jnp
mov
push
fildll
popa
inc
jo
xchg
stos
inc
inc
jno
lds
mov
adc
xchg
adc
fsubrl
mov
ja
mov
scas
mov
xchg
push
dec
fists
cmp
adc
cmpl
insl
lock
sub
ljmp
add
call
hlt
xchg
pop
add
adc
xor
sahf
and
mov
mov
outsl
jmp
inc
cld
movsb
jge
cmp
mov
or
push
push
notb
int
sub
sbb
adc
daa
push
shr
ret
jns
push
stos
insb
mov
mov
pusha
sub
adcl
dec
and
test
imul
xchg
clc
mov
mov
popa
cmp
test
call
shlb
mov
sub
fldcw
sarl
in
jns
jg
flds
dec
pop
add
int3
hlt
aad
clc
or
icebp
lods
icebp
sub
into
push
pop
enter
dec
or
mov
sbb
cmp
sub
in
xor
mov
mov
ja
jl
incb
sub
scas
int
sub
fnstenv
les
cmp
insl
pop
cmp
add
sahf
in
stc
stc
inc
sub
les
stos
or
test
xchg
in
xchg
pop
inc
movsl
xchg
pop
addr16
mov
mov
int
pop
fstpl
xor
add
cs
mull
scas
xor
lock
sbb
cmp
mov
iret
fwait
ret
and
jo
jg
or
jmp
mov
xchg
sahf
lods
xor
add
xchg
jno
out
jg
lock
cmpsl
daa
out
fs
rol
add
fcomp
daa
jne
lds
in
in
fcomps
out
fimuls
scas
out
dec
lods
sbb
dec
mov
inc
in
mov
push
test
cmpsl
xchg
pusha
cmp
mov
xchg
fst
dec
or
push
mov
out
mov
cmp
push
out
xlat
xchg
pop
push
jno
or
push
xor
into
movsb
mov
add
jge
enter
imul
or
call
inc
xchg
mov
call
js
xchg
insl
inc
fsts
inc
movq
rclb
inc
adc
rorl
fisubrs
test
mov
packsswb
xchg
jno
mov
xlat
mov
in
pop
jg
xchg
cmp
stos
mov
dec
mov
or
cltd
jbe
popf
jo
addr16
ret
ljmp
leave
dec
mulb
cmp
das
into
and
stc
stos
mov
repnz
loop
shll
pop
lock
lock
dec
push
pop
pop
lock
call
jmp
adc
sub
ljmp
mov
insb
push
cmc
mov
ret
ret
xchg
clc
jno
jns
sub
mov
pop
mov
sbb
sbb
push
sbb
push
sarl
sub
sbb
es
test
fdivp
in
test
jp
mov
dec
push
push
sub
daa
push
js
loope
sbbb
push
and
call
aas
dec
inc
icebp
or
push
js
leave
pop
or
popa
xchg
dec
or
arpl
push
stc
fsts
ss
mov
mov
adc
cmp
cmp
shlb
fisubrs
fiadds
sbb
sbb
shlb
pop
cmp
push
push
mov
sbb
ss
faddl
xchg
into
loope
mov
rolb
push
push
mov
xchg
jo
iret
push
inc
jge
mov
lds
les
shl
pop
push
mov
cmp
jne
push
sbb
pusha
push
xchg
jl
lahf
jg
mov
push
sarl
nop
mov
mov
and
fnstenv
dec
xchg
sub
int
add
mov
dec
cmc
mov
xor
jns
lahf
roll
add
scas
gs
push
jae
dec
jb
mov
mov
cmp
sub
sbb
xor
je
insl
ss
fucompp
js
addr16
dec
push
lahf
xchg
xchg
fwait
mov
out
pop
or
mov
mov
jecxz
pop
add
test
ss
test
jo
xor
push
sub
push
xor
xor
sub
test
mov
test
aam
cmc
pusha
xchg
pop
lcall
imul
pop
mov
mov
xchg
and
nop
cmpsb
xchg
and
inc
jle
and
adc
cld
cmp
fists
mov
lcall
clc
divb
out
adc
mov
cltd
adcl
and
add
xlat
cltd
fdivr
loop
mov
js
cmp
les
sbb
xchg
mov
in
fcomps
dec
in
sub
call
sti
fucompp
mov
inc
arpl
sub
cmp
int
xor
pushf
insb
test
fdivrl
bnd
out
sbb
iret
xor
jg
xor
push
or
xor
icebp
sub
in
mov
fisttpll
test
out
clc
shl
shll
in
lcall
add
sbb
dec
sahf
mov
lods
mov
xor
daa
inc
dec
cmpsl
pop
lret
push
sub
and
lods
jp
jbe
mov
cmpsl
and
push
lds
hlt
dec
out
subb
add
mov
sbb
inc
ret
imul
fimuls
hlt
loop
mov
sar
hlt
jg
lahf
call
push
jmp
mov
movsl
addr16
stos
jno
jno
outsb
in
push
xchg
push
push
imul
testb
addr16
xchg
arpl
dec
jns
js
xchg
push
subb
fcoml
push
sbb
scas
loopne
stc
jmp
nop
cld
sti
xchg
inc
inc
sub
lret
cmp
subl
clc
adc
jns
icebp
inc
sti
jo
data16
mov
negb
push
loopne
sbb
jo
sbb
dec
pop
sbb
or
push
lret
pop
mov
mov
jo
scas
bound
pushf
sub
aas
push
xor
loope
sub
cmp
or
movsl
pop
push
push
mov
push
orb
test
leave
xlat
inc
imul
inc
inc
mov
mov
sub
rcll
pop
in
or
outsb
jo
mov
mov
dec
pop
pop
or
incl
cmp
pusha
sub
cmp
fcoms
or
or
mov
mov
das
popa
push
push
jnp
xor
into
test
inc
mov
xor
xor
mov
inc
pop
sbb
mov
popf
mov
mov
lea
ret
cmp
dec
jp
lret
loop
mov
icebp
call
in
mov
testl
jne
test
push
jp
xor
je
insl
insb
bound
push
mov
add
bound
cmp
adc
ljmp
jae
and
or
fcmovne
jecxz
sarb
add
push
mov
data16
ficoms
xor
sub
movsb
mov
loope
jmp
mov
popa
mov
mov
xchg
icebp
jg
arpl
ljmp
popa
dec
sarb
or
insb
jecxz
sahf
adc
outsl
jmp
bound
pop
aas
lcall
dec
lds
int3
inc
repnz
pop
adc
je
push
jns
dec
pop
adc
lock
xor
jl
call
rcrb
mov
out
std
inc
fs
loop
xchg
push
and
sbb
mov
pop
mov
push
out
cld
xchg
sti
stos
sbb
jle
shlb
inc
imul
ds
shll
fidivrl
inc
jmp
mov
lea
subb
mov
sbb
mov
cmp
xchg
test
arpl
mov
push
add
loopne
dec
fbstp
dec
add
jmp
js
cltd
scas
sbb
rcl
jmp
mov
mov
es
loop
jno
jnp
ss
dec
rcrb
add
sti
lahf
add
pop
cmp
and
xor
fstps
jl
data16
sbb
push
mov
cmp
jmp
cmpl
push
sbbl
shr
hlt
test
leave
push
mov
jb
and
dec
rolb
insl
adc
int
mov
cwtl
jg
cmp
lea
insl
lds
test
pop
ja
ss
push
es
adc
outsb
jbe
pop
sbb
in
add
fnsave
je
sbb
push
sub
inc
icebp
insb
lea
mov
dec
mov
add
inc
xchg
popl
les
pop
cmp
cltd
sbb
movsl
out
fstpt
lods
mov
popf
inc
jp
dec
dec
sahf
das
cmpl
clc
inc
cs
or
xlat
xchg
cmp
xlat
int
fistl
cs
push
pop
in
jp
call
shl
mov
xor
adc
ljmp
clc
cmp
lcall
int3
and
aas
xor
mov
push
sub
stos
sti
pop
mov
pop
dec
xchg
mov
pop
inc
call
and
ljmp
call
lret
sahf
scas
push
mov
jne
mov
shlb
roll
mov
insb
sbb
pop
inc
into
xchg
lahf
mov
mov
inc
mov
mov
xchg
pop
xchg
cmp
rcrl
addb
ja
mov
in
rcll
loope
push
cwtl
fs
inc
lods
pop
jns
js
or
lcall
xchg
in
sub
dec
clc
mov
decb
out
sbb
push
fwait
test
inc
mov
stos
cmpsb
bound
repz
enter
sbb
or
push
cmc
scas
scas
js
jmp
out
push
jmp
push
cmp
gs
and
pop
mov
or
and
mov
dec
ficoml
dec
les
ljmp
mov
cmpsl
mov
jno
pop
add
jne
inc
sub
pushf
xchg
mov
cmp
jnp
inc
pop
mul
mov
in
testl
movsl
and
scas
mov
xchg
or
adc
pop
mov
jnp
dec
rcr
mov
sbb
pop
ja
add
sbb
mov
adc
inc
mov
out
dec
dec
mov
push
xor
int3
ret
inc
jbe
dec
cmp
fists
jl
lock
push
cld
dec
and
addb
arpl
xor
mov
lods
iret
adc
lods
push
mov
je
xor
sti
ja
dec
or
adc
outsb
in
scas
shll
fwait
mov
sub
shll
jge
clc
les
xor
scas
add
push
test
xchg
incb
push
sub
int3
and
fistpl
cmp
call
mov
jle
cmc
dec
jns
test
dec
pop
repnz
sub
mov
xor
adc
fisttps
cmc
dec
or
inc
sarl
jb
jno
iret
jecxz
les
aam
nop
push
jne
scas
data16
stos
xlat
xchg
fldcw
mov
pop
shlb
push
imul
aas
dec
sbb
daa
cmp
js
pop
mov
cld
fnstcw
and
idivb
je
or
pop
in
andb
lret
imul
dec
shrb
mov
add
das
pop
hlt
xchg
enter
insl
cmp
and
cltd
mov
jae
xchg
xor
fwait
ja
add
xchg
dec
out
cmp
arpl
je
pop
cli
sarb
fldt
sub
fiaddl
xchg
movl
addr16
repnz
push
ja
adcb
and
jp
adc
or
sub
mov
enter
or
sbb
inc
inc
and
xchg
push
addr16
jl
jae
cmp
mov
jb
mov
mov
lret
iret
fwait
pop
std
repz
iret
pushl
xor
fs
mov
jns
adc
dec
mov
imul
fstl
rcrl
or
sbb
lods
stos
or
and
or
xchg
xlat
cwtl
cmp
test
add
loopne
cltd
cmpsl
xor
mov
xor
and
xchg
dec
inc
or
fisttps
addl
insb
jne
fdivl
pushf
and
popa
clc
pop
sahf
and
push
out
pusha
xchg
je
cmp
add
orl
lahf
es
or
pop
imul
mov
xchg
test
aas
xchg
push
mov
les
es
cmp
cltd
in
cmpsb
xchg
dec
mov
inc
in
pop
add
sbbl
popa
inc
sub
inc
mov
out
pop
push
xchg
lahf
sub
sbb
lock
cmp
or
push
call
das
dec
in
cs
fadds
pop
inc
mov
imul
adcb
cs
popf
les
aad
mov
sti
enter
push
into
call
mov
sub
cs
sahf
cmpsl
and
mov
out
and
xchg
jae
xchg
call
inc
fs
jp
xchg
subb
inc
push
icebp
xor
sub
loopne
shlb
inc
adc
push
test
xlat
pop
adcb
dec
data16
add
xchg
push
xchg
je
cmpsl
xor
iret
xor
frstor
int
stc
cmc
dec
ja
add
and
test
sbb
xchg
aas
test
mov
loop
pop
in
call
adc
cmp
fs
push
lds
push
in
in
mov
sbbb
dec
xor
mov
out
mov
and
xor
out
cmpb
xchg
arpl
mov
repz
cmc
imulb
mov
xchg
jne
fisubrs
xchg
outsl
pusha
popa
pop
dec
into
or
cmp
dec
push
sbb
ljmp
js
push
je
movsb
arpl
sbb
inc
pop
ja
mov
inc
xchg
arpl
push
dec
push
xchg
jne
mov
fsubl
jae
sbb
mov
mov
pop
xchg
push
xchg
inc
stos
add
pop
jg
sbb
jmp
pop
and
pushf
fisubrs
leave
es
int
nop
jmp
xor
gs
cmp
push
inc
adc
mov
adc
or
xor
push
xchg
repz
xlat
in
out
jns
push
cs
xor
popa
sub
push
scas
fs
cltd
xor
lret
into
mov
lock
cmp
lcall
adc
inc
insl
inc
idiv
or
jp
jbe
sub
in
daa
sti
fs
xchg
mov
ret
cli
add
mov
andb
inc
lds
in
sub
jecxz
daa
lds
cld
xor
fidivrs
jmp
js
subl
cmovno
jmp
movsb
stc
inc
in
xchg
and
mov
out
stos
mov
into
ds
shlb
pusha
inc
xchg
xor
dec
lock
pop
mov
mov
popf
ret
aam
xchg
xchg
jecxz
es
pusha
jb
scas
imul
xor
mov
jmp
cmp
jb
outsb
fmull
or
scas
sbb
fstps
inc
mov
fwait
xchg
dec
inc
jo
cs
iret
pop
mov
and
sub
jo
mov
adc
scas
sbb
insb
repz
push
push
stc
pop
sbb
cmp
jnp
mov
decl
scas
pop
xlat
in
dec
pop
pop
push
fwait
aam
dec
xor
shlb
add
lea
mov
ja
sbb
jmp
lods
sub
sub
sub
cmp
fistl
aam
clc
mov
cltd
or
lods
inc
out
into
rcrl
pop
xorl
xor
inc
mov
xchg
loop
pop
cltd
cltd
jbe
sub
fldt
inc
out
push
jp
mov
gs
aad
pop
es
inc
repz
lock
jge
fnstcw
mov
clc
cmpsl
pusha
mov
imul
jge
sbb
mov
cmp
ljmp
cmp
sub
dec
sbb
cmpsl
mov
iret
cmpsl
outsb
push
cmp
push
imul
sub
mov
or
clc
pushf
repz
push
xchg
ud2
mov
cmp
inc
cmpl
clc
jo
jno
push
data16
in
adc
push
add
dec
push
test
lods
js
add
jge
negl
cmpsl
pusha
mov
loope
aam
jmp
das
pop
inc
mov
xor
push
xor
mov
fwait
mov
push
jge
jmp
push
pop
mov
or
mov
fistpl
xchg
mov
xchg
mov
aas
in
fsubl
and
leave
sub
mov
mov
das
inc
movsl
bound
lcall
outsb
sbb
loope
lret
push
adc
xchg
sarl
add
xchg
push
or
jae
dec
lcall
xchg
dec
ret
add
push
icebp
das
push
test
das
fs
xor
sti
jg
push
stc
js
pop
call
cli
mov
cmpsb
mov
subl
lds
shlb
out
or
push
sahf
jecxz
or
aad
aam
sub
add
mov
push
push
jl
dec
or
aas
outsl
dec
push
test
or
lds
mov
lcall
adc
pop
mov
mov
sub
ja
mov
mov
cmp
jmp
pavgb
pop
addb
lahf
cli
xor
lcall
sub
push
nop
mov
dec
rcll
push
js
loop
xorb
movsl
xor
addr16
fimull
pop
push
and
int3
jne
sti
push
bswap
dec
jl
je
sti
fimull
adc
cmc
or
loopne
ret
mov
dec
mov
adc
lret
stos
stos
or
dec
outsb
and
arpl
sub
mov
orb
into
mov
in
xchg
mov
mov
inc
mov
adc
cwtl
push
or
stos
xchg
out
mov
mov
loope
push
scas
fstpl
push
mov
subb
nop
orl
sbb
repz
ficoml
sbb
push
mov
jae
sub
and
mov
mov
sub
lcall
lret
fdivs
jecxz
xchg
repz
xchg
mov
in
adc
fildll
call
sbb
pop
jo
out
cmp
sbb
pop
clc
jle
mov
dec
leave
fwait
fs
mov
pop
cmp
pop
xchg
cs
sub
sbb
je
mov
fucomip
mov
push
inc
jg
pop
and
xlat
out
je
ss
sbb
rcl
jp
into
stos
sarl
gs
xchg
mov
nop
lret
xchg
mov
outsl
push
jp
ljmp
stos
test
jg
enter
adc
movsl
mov
cld
movb
popf
stc
les
popf
inc
mov
mov
shrl
mov
fwait
add
call
or
add
or
pop
sbb
fmull
fs
dec
stos
addr16
dec
or
pop
push
xor
stos
ljmp
int3
stos
rcr
loope
mov
cmp
iret
pop
add
lods
inc
mov
pop
add
or
xor
dec
xor
scas
pop
mov
sti
leave
xchg
enter
adc
rcl
lea
xchg
test
out
sbb
in
dec
in
push
or
push
inc
lods
jmp
xor
and
data16
push
inc
lcall
and
out
scas
repz
test
mov
and
jns
in
and
pop
or
movsl
imul
mov
and
sub
shll
jle
mov
or
xor
mov
movsb
push
subb
mov
enter
out
mov
aam
sbb
push
sbb
sti
lods
mov
add
xchg
mov
sub
adc
mov
fdivs
nop
jecxz
push
fs
jp
das
cld
sbb
shrl
cmc
stos
xchg
dec
dec
mov
add
xchg
inc
les
mov
sub
hlt
mov
fbld
or
pop
and
das
mov
adc
jle
imul
mov
insl
hlt
mov
aas
jl
and
jo
icebp
fwait
test
stos
mov
xchg
push
sbb
in
fisubl
inc
mov
imul
xchg
loope
lahf
cmp
roll
push
stos
lock
lds
int
push
js
jb
mov
mov
dec
cs
cmp
pop
xchg
out
fdivrp
pop
mov
jns
adc
pop
leave
add
in
xchg
inc
std
subl
int
mov
fsts
int3
inc
aaa
mov
pop
outsb
xor
or
and
push
adc
sub
iret
pop
jp
sub
xchg
fidivrs
imul
mov
jae
je,pt
xorl
jecxz
icebp
out
flds
ret
lods
pop
inc
in
movsl
add
xchg
pop
pusha
cmp
dec
out
mov
or
test
mov
cld
push
lahf
loopne
sub
add
out
in
add
xchg
dec
stos
sub
lret
loope
test
ja
adc
push
jnp
in
leave
mov
mov
daa
add
add
lock
jl
sub
ret
cwtl
repnz
jno
aam
pop
jp
movsl
das
mov
xchg
loope
pop
jns
dec
call
xchg
push
xor
test
das
subb
cmp
out
fcom
push
sbb
inc
cs
jge
and
ret
jns
loop
mov
jb
add
jmp
xorl
lahf
dec
push
loope
mov
mov
jp
mov
dec
out
int3
fisubl
or
sbb
test
aaa
push
clc
adc
and
cld
xchg
adc
sbb
xchg
add
enter
xchg
and
out
pusha
mov
pop
divb
mov
int3
leave
mov
mov
mov
and
cmp
in
andb
cmc
mov
roll
insl
inc
es
sub
arpl
or
mov
sbb
mov
call
mov
scas
mov
cmp
inc
mov
ds
pop
mov
fistl
mov
add
sbb
aad
push
xor
mov
pop
push
cmp
and
int
or
fs
pop
adc
outsb
inc
dec
sbb
push
push
arpl
push
xchg
into
adc
lret
add
sub
xchg
mov
push
sbb
cmc
and
stc
xchg
movsl
inc
es
sub
push
and
data16
iret
rcrb
adc
inc
sub
inc
mov
mov
mov
push
xchg
ret
mov
sbb
dec
repz
outsb
scas
nop
push
out
sbb
leave
addr16
sub
mov
dec
popa
sti
rcll
popa
push
pop
shlb
pop
jmp
dec
dec
dec
push
mov
stos
les
inc
xchg
lcall
adc
jne
insl
and
pop
xor
insl
aaa
fsubr
xor
mov
sahf
fucomi
or
shrb
xor
pop
push
stc
fdivl
jl
dec
push
pop
mov
lret
mov
movsl
cmpsb
icebp
sar
cmp
push
jge,pt
roll
scas
inc
loopne
sub
cmp
not
and
js
sub
jns
xor
clc
adc
jnp
std
addr16
mov
aad
sbb
test
sub
cmpsl
pop
loop
mov
ss
test
pop
out
fldcw
out
mov
lock
mov
bound
call
mov
jb
mov
andl
adc
lods
push
test
mov
add
push
js
pop
imul
dec
pop
inc
negl
inc
imul
ljmp
sar
test
mov
ret
int
idiv
pop
aad
cli
xchg
insl
add
js
ret
jne
and
adc
and
dec
lods
xchg
imul
xor
imul
push
sub
cmc
aad
mov
lods
sbb
jnp
pop
ror
mov
outsb
aaa
ds
aaa
lret
xchg
xchg
stos
ret
in
xor
ds
cmp
xchg
leave
mov
adc
and
lods
sahf
loope
and
sti
mov
ljmp
out
xor
into
std
call
inc
xchg
cmp
and
xchg
in
jbe
and
push
mov
push
pop
into
shl
add
lahf
dec
test
popa
sub
enter
mov
jecxz
addl
leave
dec
sub
or
jb
xchg
shrb
push
or
repz
pop
sbbl
mov
mov
xor
dec
cwtl
or
xchg
loopne
jl
adc
mov
jmp
in
push
nop
dec
imul
dec
bound
mov
pushf
ficoms
dec
inc
push
add
push
jge
cmp
mov
shll
fcmovu
add
ljmp
and
aad
je
aam
xor
adc
in
mov
test
xchg
dec
ja
test
fildl
pop
jl
and
lcall
lea
les
movsl
sbb
push
in
sbb
jge
add
push
xchg
or
xlat
xor
sub
nop
sti
lret
mov
stc
insb
testl
pop
mov
neg
or
push
pop
pop
adc
stos
test
push
jge
popa
insl
mov
decl
adc
jae
jmp
mov
or
pushf
sahf
test
daa
push
ror
je
sbb
insb
xlat
push
and
in
in
and
sbb
add
cmp
sub
or
hlt
bound
cmp
pop
and
lahf
xchg
pop
insb
cmp
sub
cmp
lods
pop
jno
not
add
jl
rcll
xor
mov
mov
mov
adc
adc
or
xchg
mov
xchg
push
hlt
or
rcr
push
mov
pop
mov
xchg
xchg
sbb
push
cmpsl
int3
leave
xchg
xor
push
daa
pushf
inc
adc
cs
nop
dec
frstor
pop
bnd
sub
ss
or
adc
xchg
mov
or
jp
je
ja
jmp
lcall
shll
add
add
nop
insl
xor
insb
roll
int3
or
add
popf
cmp
ret
cwtl
in
xchg
push
and
xchg
xchg
ja
sbb
mov
pushf
dec
add
and
in
push
test
fmul
push
lret
testb
or
adc
addl
enter
inc
mov
push
addb
insl
mov
ss
popa
orl
pop
push
mov
aad
jae
pop
dec
or
cwtl
jmp
push
stos
xchg
or
and
jg
mov
push
std
xchg
adc
or
sub
fldl2e
adc
xchg
lcall
jmp
stos
pusha
adc
jmp
adc
mov
das
shrl
mov
repz
test
jae
je
hlt
and
fcmovnu
pop
inc
and
rcrb
in
push
scas
xor
icebp
test
and
js
sbb
outsl
fwait
aaa
pop
or
cmc
je
fisttpl
mov
cmc
dec
stos
movsb
add
push
and
inc
sbb
xchg
dec
out
push
test
and
fcmovnb
in
and
add
sbb
and
mov
inc
pop
sub
or
imul
mov
loope
pop
and
es
jne
xlat
mov
das
xor
xchg
test
mov
xor
add
inc
lea
mov
popf
loope
xor
push
and
outsl
fcompl
pop
jnp
sub
aaa
fs
fisubl
sar
daa
or
mov
adc
mov
jno
push
add
loop
testl
jmp
adc
pushf
cmp
xor
lret
fstpl
and
xchg
outsb
inc
cwtl
lret
fidivrs
mov
cmpl
fnstenv
mov
outsb
fwait
inc
in
or
lret
repnz
sub
rcl
push
enter
add
scas
and
dec
ret
inc
pop
pop
aad
out
xchg
in
in
dec
sbb
movsb
jo
or
cld
and
loopne
stos
lock
add
shlb
rep
jne
or
leave
mov
std
outsl
ljmp
dec
mov
add
int3
push
subb
adc
call
hlt
mov
cltd
or
jno
ret
jge
inc
fisubl
jl
xor
mov
sbb
imul
es
add
out
cltd
lods
or
ds
adc
push
repz
mov
dec
cwtl
ds
cwtl
aad
jae
bound
xchg
mov
adc
stc
or
jb
sti
lcall
clc
fists
mov
pop
cltd
or
sub
and
add
inc
orb
xchg
fs
pop
in
idivl
add
stos
lret
in
fsub
cltd
mov
jg
push
popa
sbb
sub
jecxz
mov
arpl
pop
js
lcall
mov
in
mov
xor
popl
inc
adc
movsl
add
enter
mov
sti
leave
dec
hlt
and
in
test
push
aad
sub
cmp
mov
pop
xchg
cmp
jl
push
ror
stos
rclb
nop
xchg
setae
fildl
into
mov
dec
mov
add
jno
add
pop
dec
pop
mov
addr16
xor
pop
push
push
sbb
jbe
lds
and
push
fs
xchg
pop
xor
or
mov
outsl
dec
mov
mov
or
subb
ret
or
lock
mov
lock
jmp
mov
imul
scas
fwait
inc
push
rcl
jbe
fwait
call
xor
cli
test
mov
jg
cmc
divl
sub
insb
rolb
fmuls
jnp
lods
fadds
or
iret
in
mov
sub
pop
setbe
jne
es
adc
or
mov
fcoml
call
jge
jbe
aam
js
xchg
test
mov
mov
mov
adc
dec
flds
inc
sbb
adc
or
test
iret
cmp
jno
lea
lods
and
pop
jl
mov
push
repnz
das
cld
test
mov
push
scas
jmp
pusha
fimull
and
cwtl
iret
lods
arpl
loope
or
sub
dec
adc
stc
dec
pop
test
mov
movsl
push
add
rcrb
icebp
orb
sub
lahf
repz
cltd
push
lcall
jge
lods
insl
dec
inc
mov
xor
push
mov
pushf
pop
jno
insl
mov
je
ret
jl
popa
rorb
sub
sbb
mov
mov
pop
dec
mov
fistl
sub
clc
test
je
jle
cmp
jge
mov
sbb
js
adc
jge
jecxz
sbb
lods
add
mov
adc
mov
mov
imul
int3
and
mov
xchg
fwait
push
lret
repnz
outsl
stos
cmp
mov
sub
addr16
rolb
fsubrs
sub
push
xchg
sub
mov
int3
dec
out
jbe
data16
cwtl
ljmp
mov
scas
lcall
pop
out
dec
test
enter
jle
incl
xorb
mov
pop
lcall
sub
mov
push
jns
sbb
enter
xchg
clc
cmp
aad
cli
lcall
dec
push
push
fsubrs
out
inc
in
pop
fwait
mov
push
mov
push
lds
popf
lcall
or
in
fcmovne
imul
sti
pop
faddl
lret
nop
cmc
cmp
in
popf
cmc
inc
jl
cltd
push
stos
adc
jl
out
jp,pt
movb
fisttpll
ds
cmpsb
sbb
jb
adc
pop
or
scas
psubd
push
std
ja
nop
cmpsb
fs
add
mov
mov
dec
push
cmp
mov
subl
mov
pop
arpl
scas
addr16
dec
das
mov
pusha
cmp
outsl
inc
pop
xor
ja
xchg
sti
xor
repz
fildl
sahf
xchg
mov
fwait
imul
push
mov
xchg
xor
xchg
or
loopne
cmp
cmp
adc
insl
dec
iret
add
or
stos
jae
inc
sub
push
cs
adc
into
cli
sub
mov
cmpb
lods
sbb
pop
fldcw
ret
shrb
push
jle
ja
call
jbe
dec
jnp
jmp
sti
jo
pop
cmp
xchg
mov
cs
ja
dec
xchg
repz
nop
lret
dec
pop
sbb
mov
test
and
shl
cs
stos
xchg
push
xor
jg
outsb
ror
cmp
sub
int
mov
cmp
call
test
test
push
xchg
sbb
out
nop
fwait
inc
and
lds
pusha
out
pop
lcall
sti
add
movsl
mov
in
adc
adc
shlb
scas
xlat
sti
xchg
inc
mov
sbb
add
or
push
pcmpeqb
fcoms
pop
stos
mov
dec
js
lahf
adc
inc
mov
mov
jmp
lods
mov
cmp
in
xchg
ds
lahf
xchg
mov
and
sub
or
sub
jns
push
and
lock
popf
push
sahf
and
push
mov
cmpsb
repz
adc
ss
mov
xchg
mov
push
xchg
int
mov
cltd
cwtl
lret
mov
ja
ja
xor
inc
push
cmp
scas
mulb
jb
aaa
loope
push
dec
test
xchg
xlat
gs
mov
add
repnz
xor
test
mov
sub
test
cwtl
sub
sub
adc
mov
int3
rolb
jae
mov
mov
or
cmpsb
or
dec
add
sbb
mov
ret
adc
add
inc
sar
mov
or
outsb
dec
rcrw
push
das
xor
add
mov
and
and
loopne
or
adc
les
loop
les
jl
push
jns
gs
jle
mov
movups
or
xor
jl
movsb
xchg
add
rcl
enter
mov
and
ss
mov
push
sub
mov
test
out
or
sbb
icebp
vpcomb
sub
mov
push
repz
lcall
jns
xor
xchg
test
cltd
pop
add
aad
mov
jns
adc
popa
sahf
push
adc
dec
jl
lds
xor
sub
xor
sub
and
mov
fimuls
cmc
shr
xchg
shlb
aam
stc
mov
repz
std
sbb
sbb
and
leave
test
mov
pop
ror
cmpsl
shl
out
dec
mov
pop
push
cli
and
xchg
insb
push
and
outsb
ljmp
ljmp
dec
or
dec
ret
xchg
jae
inc
sbb
xchg
push
aaa
ds
sub
sbb
mov
cmpsb
gs
mov
jae
out
add
push
outsl
insl
mov
cmpsb
mov
movsb
pop
push
sub
in
jecxz
sbb
hlt
push
cmp
test
adc
cld
cmp
sbb
repz
xor
inc
sbb
mov
adc
in
mov
push
dec
lock
xor
arpl
cmp
and
push
je
lret
mov
jb
dec
xchg
frstor
xor
cmp
pop
push
das
push
push
dec
push
xchg
dec
push
sbb
scas
sub
dec
loopne
sub
or
cmp
shl
hlt
inc
stc
fstpl
cmpsl
xchg
decl
cmp
leave
or
ds
repz
nop
int3
shrb
xchg
jp
push
arpl
jg
pop
pop
mov
test
ficomps
dec
push
aam
and
sub
jle
push
jp
cmp
push
stos
sbb
jo
gs
push
pop
ds
mov
jl
test
inc
jo
mov
jecxz
cmp
test
and
stos
jne
shlb
jmp
lock
adc
mov
xor
cli
imull
cmp
mov
stos
mov
cwtl
mov
notb
push
in
push
sti
mov
xchg
idivl
mov
jp
xor
pop
or
jnp
aad
cmp
pop
mov
aad
outsb
mov
push
cmp
loopne
add
pop
stos
dec
repnz
js
test
imul
and
mov
add
add
cwtl
out
popa
aad
in
jg
dec
repz
addr16
and
mov
mov
jbe
xchg
xchg
pop
ljmp
or
call
insb
movsb
imul
push
test
cmp
sbb
ret
fisubrl
daa
rcll
aam
sbb
das
or
jl
loopne
scas
adcb
dec
and
dec
jp
mov
cmp
pop
je
dec
test
jecxz
mov
lret
int
mov
rcrb
or
sarl
enter
mov
pusha
sub
cmp
jmp
loop
sar
xchg
add
or
jne
push
loope
adcb
pop
pop
scas
popa
fucomip
xor
call
mov
sti
inc
mov
andb
test
mov
test
movsl
data16
fistps
cmp
inc
test
pushf
sahf
mov
mov
call
mov
jae
sub
push
sub
imul
in
adc
mov
sti
dec
add
add
out
add
int
arpl
push
movsb
popf
dec
mov
imul
jmp
xchg
add
lret
std
ret
sbb
sahf
push
jp
nop
mov
mov
ficomps
jecxz
dec
popa
enter
out
jno
adc
push
rcrb
xchg
andb
push
test
sbb
jp
adc
fnstcw
je
imul
dec
xchg
lock
fs
pop
data16
lock
movsb
push
xor
jns
jae
push
push
mov
jb
into
sbb
and
outsl
dec
in
fistpll
push
xchg
clc
movzwl
js
div
repz
jno
rcrl
fwait
sub
sahf
rcrb
dec
lcall
mov
xchg
loope
pop
ror
cmc
sbb
popf
fidivs
cli
scas
or
movsl
sbb
inc
test
rclb
jg
imul
mov
add
cmpb
inc
clc
imul
jge
movsl
and
gs
push
lods
dec
fwait
or
sti
sbb
pop
in
dec
xchg
std
mov
mov
lods
push
pop
dec
sbb
popa
shl
cmp
es
orb
lods
out
or
outsb
mov
add
or
sbb
cld
push
sarb
cmp
shrl
js
adc
mov
into
rcrl
cmp
out
xor
xchg
push
loopne
lcall
sysenter
inc
stc
push
xor
and
push
loope
mov
push
cmp
dec
rorb
mov
lock
loope
call
dec
xchg
adc
lock
pushf
jge
cli
clc
xor
ucomiss
xlat
pop
push
pop
mov
push
lock
xchg
push
jb
pop
bound
dec
sbb
mov
push
inc
sarl
test
orb
mov
sahf
in
sbb
lock
popa
xor
sbb
in
shlb
xor
jg
pop
ljmp
or
dec
mov
ljmp
add
xor
mul
mov
cmc
mov
test
cmpsb
jno
jb
or
inc
movsl
rol
sub
fwait
pop
mov
adcl
loope
inc
push
xor
mov
inc
mov
lcall
arpl
iret
orb
in
rol
jl
inc
iret
int3
pop
pop
or
mov
push
pop
imul
push
testl
xchg
and
fildl
loopne
lods
adc
push
mov
jl
ljmp
xchg
add
fldcw
push
int
lahf
add
mov
cmpsl
je
mov
nop
stos
sbb
insb
es
aas
pushfw
inc
push
xchg
xchg
or
cltd
xlat
lds
xchg
por
rorl
inc
push
add
fistps
lock
jge
dec
push
movsb
jno
pop
lret
xchg
jg
lods
test
sub
push
outsl
stos
inc
loope
xchg
add
pop
xor
test
adc
in
enter
push
pop
call
js
test
in
xorl
icebp
movsb
pushf
cwtl
fmull
out
push
jmp
jl
mov
fnstenv
test
dec
cmp
lret
mov
xlat
xor
cld
dec
mov
scas
testb
lea
jb
xor
and
ret
xchg
js
jno
mov
idivb
pop
or
movsb
addr16
mov
insl
jb
test
in
or
int
aam
fisubs
jae
mov
nop
loop
and
cmpsl
out
push
inc
add
xor
adc
sahf
or
enter
dec
cs
jl
push
aam
cwtl
icebp
sub
mov
xchg
and
fcompl
inc
shrl
add
add
jb
lret
jo
out
subl
lock
xor
xchg
sub
into
push
icebp
test
jp
lods
pop
imul
and
lahf
pop
lret
sub
jne
ljmp
cld
push
sub
mov
xor
mov
mov
inc
mov
or
xchg
add
cs
xchg
shrl
jne
fsubs
xchg
xchg
pop
out
mov
jecxz
std
jo
jmp
xchg
lods
add
pusha
repz
adc
daa
dec
loopne
mov
lods
xor
dec
movsl
cld
addr16
out
pop
mov
jae
pop
inc
jle
fidivl
pusha
jnp
int3
idivl
add
adc
std
aad
test
repnz
ds
jo
int
cmp
in
cli
fisubl
das
addl
cmc
cwtl
shl
xor
pusha
addr16
mov
ljmp
addr16
jl
mov
jmp
cli
int3
ds
adc
outsl
mov
ret
pop
cmp
xor
es
xor
dec
and
scas
pop
shl
mov
cltd
loop
jge
fcmovu
enter
pop
pop
jmp
out
aas
pop
push
sbb
rol
push
dec
inc
xchg
jecxz
repnz
pop
into
pop
outsl
jmp
shrb
aam
and
shrl
mov
js
fiadds
sbb
pusha
add
mov
sahf
add
pushw
cs
fmull
push
and
xor
mov
rol
mov
xchg
shr
jp
fs
xchg
sbb
popa
lret
je
adc
push
lret
testl
loop
lds
inc
add
in
add
adc
jge
jo
xchg
xchg
cli
cmp
test
inc
shrb
cli
les
mov
xchg
ss
out
lcall
and
push
ret
sub
and
sub
pushf
pop
jae
cli
fwait
mov
movsb
dec
mov
sbb
shlb
movsl
dec
lret
divb
iret
jmp
xor
mov
subl
sti
mov
aam
cli
mov
sub
js
cltd
lea
mov
or
cmpsb
imul
dec
outsb
mov
adc
mov
pop
xor
out
push
mov
cs
xchg
lods
dec
sahf
test
les
jmp
mov
test
jne
inc
mov
or
xchg
pop
push
cmp
aas
add
xorb
mov
daa
xlat
jle
repz
and
iret
push
outsl
cwtl
jg
pushf
xchg
jno
jle
loop
jo
roll
test
or
addr16
inc
addb
mov
jb
mov
mov
in
jmp
mov
cmp
ljmp
fldcw
cmpb
adc
repnz
out
sbb
mov
mov
pop
xchg
sub
sbb
loopne
dec
add
inc
inc
mov
jle
out
pop
aaa
test
pop
movsb
rcrb
or
dec
adc
sbb
das
idivb
mov
lock
push
mov
sbb
sub
test
bound
dec
rcrb
fstpt
pop
arpl
xor
add
aam
xchg
fisttps
xchg
mov
in
imul
push
subl
popa
pop
adcb
sbb
add
enter
mov
lock
or
out
jnp
mov
std
push
xchg
inc
iret
jno
pop
cli
cmp
std
call
add
or
mov
add
pop
arpl
adc
xor
mov
in
pop
sub
pop
push
push
inc
xchg
jecxz
je
lds
xchg
leave
dec
push
sti
icebp
push
inc
imul
inc
jmp
aad
or
cltd
gs
cmp
cmp
mov
outsb
jne
inc
xchg
ljmp
aaa
jbe
test
mov
dec
arpl
mov
jo
sub
into
call
ds
dec
jl
ror
mov
fwait
imul
inc
mov
jne
fcmovne
not
sbbb
mov
or
cmp
pop
xchg
mov
cmc
imul
pop
loope
inc
in
lock
xor
and
and
leave
test
lahf
outsl
sbb
mov
sub
cmp
fwait
jge
ljmp
cmp
pop
addr16
inc
cmpsb
notb
popa
mov
imul
subb
mov
gs
cmpl
popf
mov
inc
pop
sti
movsb
aas
or
push
sub
ret
xor
fiaddl
mov
loope
lcall
push
sbb
in
or
les
aas
mov
stc
lret
test
mov
dec
stos
mov
ror
lock
insl
dec
cmp
dec
scas
movsl
lds
cli
in
rcll
ret
jecxz
nop
int3
mov
push
ljmp
or
or
cltd
xor
stos
outsb
xlat
pop
bsf
add
insb
js
inc
fsub
or
rclb
std
pop
rcl
adc
push
jo
aam
sub
xchg
jbe
test
mov
pushf
jmp
shll
out
cltd
xchg
nop
add
hlt
mov
and
and
jns
movsl
xchg
pushf
xchg
test
popa
mov
aaa
xchg
and
int
test
pop
out
xor
or
jp
add
mov
sub
mov
sub
xchg
lods
or
icebp
mov
adc
push
frstor
daa
mov
fdivl
add
negl
dec
or
xor
sbb
mov
jl
js
shll
add
push
inc
ljmp
cmp
mov
mov
adc
mov
sbb
icebp
adc
jle
jbe
andb
or
and
push
push
adc
sub
mov
push
fcmovb
mov
xor
push
loopne
rorb
push
bound
cmpb
xor
dec
ret
outsl
es
sub
sub
inc
pop
in
pop
adc
pop
mov
mov
sub
inc
jg
jae
sbb
ret
lock
rcrb
test
ja
loop
xchg
popa
notb
push
mov
out
xor
cltd
fmuls
ret
or
mov
pop
or
stos
add
clc
or
adc
pop
jmp
ficoml
mov
or
push
xor
ss
int3
aad
sbb
in
rcl
mov
or
stc
out
cmp
push
mov
test
daa
flds
jmp
or
push
lea
mov
repz
ffreep
outsl
or
xchg
jge
imul
mov
inc
or
sub
lahf
inc
sbb
enter
test
or
cs
pop
movsl
clc
push
jp
idiv
notl
xor
fdivr
jge
out
add
sbb
push
mov
mov
arpl
ja
in
iret
mov
xchg
and
pop
dec
fsubl
bound
cmp
xchg
fs
adc
stos
cltd
cmp
mov
hlt
roll
scas
push
cmp
adc
inc
mov
stc
cs
xchg
int
in
xchg
out
mov
xor
or
mov
mov
outsb
sub
mov
mov
mov
jne
cmpsl
ss
sub
icebp
lahf
popa
cmp
inc
sub
jo
lds
dec
lret
sub
jo
sub
add
negl
push
pop
jns
movsl
push
pop
pop
lea
xor
xchg
cmp
test
mov
push
cltd
pushf
cmp
jne
xor
leave
jo
mov
lods
mov
lret
cmc
les
jb
xchg
lcall
incb
insl
clc
insl
jns
mov
sub
mov
add
dec
add
jge
mov
in
cmp
xor
test
mov
pusha
ljmp
pushf
mov
in
fisttpl
lcall
mov
test
add
enter
je
jns
jno
push
or
scas
cwtl
aam
ret
popa
repnz
mov
inc
imul
in
dec
adc
pop
ja
mov
imul
movsb
cmp
ficompl
gs
ror
imul
jp
aas
mov
mov
fcompl
xchg
lock
insl
pop
fdivl
lods
outsb
mov
scas
pop
add
call
imul
orl
add
sbb
adc
xchg
ja
jbe
mov
add
rolb
jnp
xchg
sub
cmpsb
pop
out
daa
pop
outsl
dec
pop
stos
mov
cwtl
xchg
fs
aad
sti
into
inc
movsl
pop
subb
cmp
and
out
mov
inc
out
add
jle
cmpl
push
push
in
clc
sub
loopne
aam
xchg
push
gs
fbld
cs
jmp
cmp
xchg
push
mov
fwait
roll
sbb
incl
pop
out
mov
adc
push
and
roll
or
pop
or
aad
lret
sub
xchg
adc
xchg
fsubs
pusha
ret
jo
sahf
fmuls
jle
jb
cmc
dec
pop
out
dec
xor
repz
mov
add
outsb
popf
fistps
out
ret
adc
mov
repz
fstpt
sti
sti
setge
jge
xchg
mov
into
lds
cli
sbb
inc
imul
ds
push
xchg
je
insl
sar
sub
scas
and
xchg
push
sbb
dec
add
pop
lret
jnp
xchg
mov
orw
and
arpl
jge
out
fwait
mov
jge
xchg
movsb
shlb
fnstsw
fisttps
mov
jb
jmp
ret
sarl
sbb
add
mov
cmpsl
scas
xor
cwtl
and
outsl
aad
xlat
push
mov
aas
xchg
mov
xorb
mov
out
cmpsb
shll
fwait
cs
mov
into
jne
inc
outsb
mov
pop
fwait
jp
dec
fwait
pop
pusha
xchg
jne
aas
push
push
loop
clc
mov
sub
bound
inc
xor
sti
xchg
mov
mov
add
not
xchg
stos
scas
insb
mov
dec
lea
inc
leave
sbb
dec
scas
je
cmp
or
mov
fdivrs
mov
loopne
cwtl
testl
loopne
shll
push
xchg
push
shl
or
cmp
cmpsl
xor
pusha
popw
loop
call
push
sub
mov
ret
sub
or
mov
lods
je
inc
xchg
mov
dec
add
cli
fdivl
out
insb
movsb
cmpb
sbb
add
sbb
mov
bound
pop
loop
adcl
fidivl
push
testl
repnz
mov
jl
or
inc
push
jns
addb
shll
sub
popa
jno
je
adc
in
add
xor
outsl
jno
out
mov
sub
movl
in
pop
hlt
fildll
lahf
repnz
adc
dec
sahf
in
loop
sbb
setge
or
and
leave
out
movsb
mov
int3
pop
test
mov
dec
cltd
cli
std
and
subl
xor
mov
lods
leave
lods
imul
jp
jge
fmull
inc
jbe
ja
mov
jl
sub
push
out
fsubl
xor
sahf
aas
fld
mov
cmpsl
add
mov
pop
jo
cmp
xchg
mov
shr
sahf
xchg
jno
pop
xor
mov
mov
ret
inc
pushf
pop
cs
daa
lahf
push
lock
jbe
test
repnz
inc
cmp
loop
fcoml
bound
jmp
pop
push
aam
ljmp
pop
jecxz
push
push
push
in
or
xchg
pop
adc
xchg
pushf
pusha
mov
push
aam
pop
xchg
jmp
pop
aas
or
ja
mov
sbb
mov
fwait
inc
and
mov
dec
push
dec
mov
jno
lahf
jl
mov
les
mov
jecxz
dec
fisubrl
push
out
adc
inc
xchg
mov
popf
mov
mov
cmp
test
sarl
rol
jae
loop
dec
jge
hlt
or
cwtl
sbb
adc
xor
mov
jl
jle
inc
xor
imul
inc
test
ja
test
outsl
test
jmp
dec
in
fwait
or
movsl
ret
mov
inc
arpl
or
sub
dec
pop
rorl
mov
jne
pop
addr16
cmp
dec
pop
and
mov
jne
lock
sbb
pop
mov
cld
pop
imul
and
jb
dec
and
icebp
xchg
sbb
lods
loopne
repz
jge
xor
cmp
or
scas
subl
into
push
adc
push
push
mov
mov
dec
rorb
sub
test
cmp
xor
scas
daa
pop
js
outsb
push
ror
mov
incb
mov
mov
rcr
mov
adc
fstpl
imul
lds
jo
push
arpl
mov
loop
pop
xor
neg
jne
cmp
mov
cld
xor
cltd
aas
jns
sbb
ss
in
mov
mov
add
outsb
add
push
mov
mov
sub
cli
and
jl
loopne
dec
push
add
in
outsb
mov
in
dec
xor
sbb
sbb
lods
shrl
xchg
pusha
cmp
sub
lock
jb
cmp
mov
daa
sti
out
bound
mov
nop
scas
push
push
xchg
add
call
jg
fwait
iret
jbe
lahf
outsb
mov
sbb
ljmp
adc
movsl
loopne
and
mov
cmp
xchg
add
xchg
and
mov
add
inc
bound
lods
aaa
popl
xor
aaa
in
in
mov
jle
jecxz
addl
in
repz
mov
fwait
pop
xchg
mov
call
test
shlb
aad
fs
pop
in
sti
add
es
fwait
daa
shlb
cmp
out
push
aam
stos
pop
sbb
xor
lds
xor
mov
div
stos
sbb
cld
push
sub
gs
or
test
adc
mov
popa
dec
cmp
dec
data16
inc
jno
jge
sbb
push
idiv
test
xchg
popa
loope
jge
aas
push
rolb
loope
icebp
or
xchg
orl
fdivl
mov
push
int3
lret
jb
jne
test
ret
std
jge
popa
in
icebp
and
sbb
lret
pop
adc
aas
ljmp
push
ss
ror
inc
mov
ret
fwait
pop
or
dec
cmp
inc
cmp
pop
jo
ja
cli
xchg
push
push
xor
cmc
push
insl
or
add
incb
pop
mov
pop
mov
out
stos
add
sub
iret
sbbl
pop
jg
adc
adc
adc
test
xorb
addr16
push
xchg
pop
popf
sub
add
jmp
dec
dec
je
fldenv
inc
xor
arpl
stos
adc
aam
in
mov
aaa
movsb
and
pushf
gs
outsl
push
mov
lret
push
insl
mov
xchg
sub
lret
popf
inc
sar
mov
xchg
jbe
int3
lret
jo
test
gs
loope
adc
push
stc
enter
iret
leave
push
inc
and
push
push
mov
addb
adc
scas
lcall
inc
ja
adc
out
sbb
push
test
sub
nop
dec
lahf
sbb
arpl
leave
pop
jo
dec
mov
dec
leave
lods
mov
push
or
rclb
pushf
shl
pop
mov
sub
les
pop
negb
movsl
gs
fistps
mov
jge
jg
addr16
cmp
iret
or
jp
lods
jp
mov
test
sub
inc
adc
mov
sbb
xor
jl
imul
xor
xor
jle
mov
cmp
mov
hlt
jne
and
nop
nop
out
fstp
add
in
jns
sbb
mov
stos
push
mov
jns
pusha
mov
imul
dec
cmp
cmpsl
fwait
enter
pusha
repnz
std
or
scas
mov
jo
mov
mov
js
add
leave
rclb
cmc
outsl
cmc
dec
testb
jns,pn
xlat
mov
jp
andb
es
push
inc
int
push
insl
jge
in
push
notb
out
mov
sbb
outsb
mov
pop
push
aas
sbb
loop
sub
fimuls
movsb
cmp
dec
jg
mov
movsb
and
push
add
les
or
bound
stos
fcmovnu
js
ret
js
sbb
fisubrs
inc
insb
mov
dec
jbe
std
xor
loope
in
pop
mov
sbbl
jb
dec
daa
mov
mov
mov
push
stos
jecxz
pop
add
jmp
mov
ss
pop
xlat
sbb
mov
cmp
xchg
xor
jge
decl
inc
or
subl
dec
jecxz
test
pushf
push
stos
mov
addl
pop
jbe
mov
mov
jge
add
shl
sub
sbb
mov
ja
mov
aam
jbe
adc
jo
cmp
dec
inc
adc
and
cwtl
add
int3
adc
sbb
push
cmp
or
adc
cmp
testl
add
fdivl
jne
fidivs
sbb
jb
sub
sbb
dec
pusha
cmp
mov
add
push
shll
and
fbstp
mov
shl
or
push
ss
cmpsl
xor
rcr
lret
push
sahf
inc
test
add
pop
jmp
es
lods
pop
call
add
mov
movsl
enter
add
and
cmp
mov
adc
jne
fs
pop
lcall
push
lahf
add
push
push
dec
fwait
pop
mov
mov
shll
andb
and
jne
mov
pop
cmp
pop
xlat
dec
adc
dec
cmp
add
mov
imul
adc
pop
lods
jne
jbe
mov
xor
pop
call
fadds
xchg
xchg
jle
add
std
jle
pop
xchg
imul
insb
sbb
rcrl
sti
mov
xchg
mov
inc
sub
mov
arpl
jmp
dec
or
adc
inc
js
inc
dec
enter
sbb
jb
cld
jno
popf
scas
cmpsb
jp
daa
mov
jnp
fdivr
sbb
jb
mov
test
cmpsl
xor
icebp
xchg
inc
outsb
mov
daa
in
xchg
cmp
and
mov
add
addr16
mov
mov
loop
jle
jmp
mov
lret
test
jb
jb
push
shrl
daa
jmp
call
mov
xor
sub
rcr
fbld
adc
sbb
jne
movsl
lret
sbb
notl
add
adcl
cmc
inc
scas
inc
out
cmp
in
jg
mov
fdivrl
jge
ljmp
leave
and
jl
insl
add
in
das
pop
loope
and
scas
jne
cmp
les
aam
ds
in
and
rep
daa
mov
mov
aam
and
sbb
mov
in
pop
mov
aas
mov
enter
rcrb
sub
push
jnp
mov
xor
or
je
mov
push
or
in
scas
xor
lods
in
mov
xchg
repz
mov
in
fcoms
in
xor
push
dec
push
lahf
inc
jnp
pushf
call
js
cld
cltd
loope
cwtl
clc
fbstp
out
loope
out
push
loop
xchg
pop
std
dec
jo
aaa
jns
rclb
xor
sahf
mov
out
icebp
pusha
cwtl
test
xchg
xor
repnz
adc
sti
sub
add
jle
pop
jb
es
out
nop
dec
jl
ljmp
rolb
fsubs
popf
adc
add
jl
lods
insb
mov
test
gs
mov
mov
ds
sub
and
mov
out
and
mull
imul
xlat
xor
sti
std
stos
aad
lods
aam
gs
jb
pop
mov
test
lods
psrad
loope
jl
leave
ja
xchg
push
cs
out
inc
mov
cwtl
insl
test
mov
push
mov
sub
pop
pop
or
ret
xchg
out
fwait
lds
pop
add
test
bound
or
push
iret
push
subl
shlb
cmpsl
adc
add
insb
fsin
mov
cmc
popl
addl
popf
movsl
mov
mov
leave
inc
or
scas
jle
mov
xor
mov
dec
mov
insl
mov
orb
cltd
and
bound
leave
mov
xchg
sbb
jns
mov
test
je
xor
stos
fwait
mov
mov
xchg
cmp
mov
or
push
addr16
pop
cld
dec
mov
and
mov
mov
pusha
in
loopne
cmp
repz
sbb
mov
test
popf
fstp
cmpsl
mov
sbb
or
mov
mov
ret
xchg
xchg
lret
jmp
loope
xchg
adc
jns
mov
xchg
xor
pop
mov
fnsave
dec
sub
lcall
cmp
inc
jbe
xchg
push
testl
js
lret
cld
fimull
ret
xchg
sub
mov
js
aad
or
sub
lods
les
or
test
cmp
mov
jmp
jle
mov
das
sub
daa
pusha
aam
xchg
insb
and
stos
fiaddl
mov
push
xchg
cmc
jmp
cmp
ljmp
push
int
jecxz
andb
sbb
jg
dec
xor
cmp
sub
or
mov
stc
jecxz
add
and
mov
cltd
push
adc
andb
mov
adc
div
inc
cmp
push
cmp
test
out
movsl
jbe
cmpl
mov
push
mov
add
stos
into
cmp
ret
roll
arpl
add
xchg
sbb
lods
out
outsl
mov
sbb
lods
xlat
push
movsl
xor
xor
xchg
pop
stos
adc
mov
push
sar
call
ds
sub
cmpsb
pop
scas
leave
push
dec
imul
rcll
ss
decb
sbb
rol
aad
ret
cmpsb
cmp
in
push
pop
out
sub
sti
popf
aas
jl
fcmovnbe
jne
scas
jne
sub
and
pop
sbb
enter
mov
int
jnp
call
xor
inc
out
fs
rol
ret
shrl
jno
cli
sub
popa
add
call
and
je
lods
pop
and
inc
lds
adc
mov
repz
mov
aad
repnz
dec
ds
xchg
and
data16
or
jnp
cmp
repnz
sbb
mov
push
xchg
push
mov
cmpsb
sbb
cld
dec
daa
xlat
daa
and
jno
pop
mov
pop
dec
xchg
xchg
xor
push
orb
push
jle
hlt
inc
mov
leave
push
fstps
adc
fcompl
fstpl
jns
dec
ret
jns
push
icebp
adcb
es
adc
nop
jg
fwait
jno
inc
repz
int3
scas
sbb
fcom
outsb
mov
nop
xor
test
daa
xor
xchg
lock
dec
push
or
test
pushf
out
cmp
sub
es
add
int
mov
xchg
aad
movsl
dec
das
fisubs
pop
lret
xor
jg
dec
pop
test
add
leave
les
jg
xchg
mov
push
jecxz
leave
push
ds
mov
mov
in
idivl
gs
and
stos
mov
lods
lock
sub
repz
out
mov
add
sbb
xchg
out
pop
cmp
push
ss
orl
rcrl
cwtl
shrb
and
push
aas
scas
pusha
fiadds
mov
repnz
pop
rorl
jnp
cld
jno
or
dec
and
push
dec
sub
cmovle
and
repz
lods
sahf
jbe
or
and
pop
add
test
or
mov
mov
outsl
in
mov
mov
ja
fidivrs
aaa
mov
inc
cmp
out
cmpsl
or
jbe
cld
dec
push
mov
or
scas
aad
lret
pop
mov
mov
push
mov
mov
mov
xor
and
dec
jp
xor
mov
push
pop
mov
push
aad
jbe
imul
dec
dec
lods
outsb
jb
dec
das
lret
ds
imul
xchg
xchg
jbe
fisubs
arpl
loope
or
cmp
pusha
out
dec
into
imul
pop
cs
pop
hlt
stc
push
pop
pop
push
ja
mulb
add
jbe
or
xchg
adc
clc
popa
push
ss
dec
clc
in
xor
imul
es
rcrl
xor
and
or
pmuludq
push
js
lret
xchg
shlb
cld
loopne
inc
sbb
movsb
mov
jge
sbb
push
jns
push
es
cwtl
cmpsl
push
mov
mov
pop
push
push
mov
mov
ret
lahf
out
pushf
scas
pop
mov
pop
cmp
inc
addr16
pop
lahf
jecxz
inc
adc
add
pop
mov
add
jne
xchg
cltd
push
int3
inc
pop
repz
fdivrs
jmp
fidivrl
clc
or
mov
daa
scas
inc
add
popa
insl
sbb
ja
lods
push
pop
cmpsl
js
pop
push
jo
xor
jge
dec
lret
pushf
std
in
fwait
mov
and
test
sbbb
xor
cmpb
scas
arpl
and
mov
push
cli
out
ss
jle
aas
imul
insb
arpl
popf
jecxz
std
adc
inc
sbb
scas
sbb
ds
out
push
jne
lods
sbb
loopne
repnz
dec
mov
imul
insb
gs
lock
popf
xchg
nop
aas
inc
jne
inc
scas
inc
mov
ret
sti
std
inc
incb
sub
sub
lods
cli
movsb
jle
xchg
iret
add
xor
and
and
pushf
lcall
dec
mov
sub
adc
dec
arpl
push
inc
fstpt
jo
sbb
aam
cmp
inc
shll
inc
adc
pusha
fwait
shl
enter
jecxz
push
movsb
inc
sub
mov
jne
mov
mov
out
pop
and
test
aaa
cmp
ret
je
push
out
lock
rorl
cltd
and
inc
mov
sbb
jp
outsl
xchg
inc
mov
push
int
add
outsb
xchg
cld
lcall
dec
or
push
cmp
lret
jbe
fucomp
sbb
cmpsl
push
int3
jl
ret
sbb
ljmp
adc
out
ss
pop
jb
out
xchg
mov
movsb
in
ret
jl
cmpsl
ret
or
push
subb
dec
push
dec
jmp
in
out
mov
and
cs
sub
lods
addr16
add
inc
cmp
in
push
jmp
outsb
in
es
cltd
inc
dec
cmp
outsl
out
add
scas
lahf
aad
out
pop
and
cmp
loope
add
push
and
add
cwtl
add
in
and
inc
dec
push
lret
jecxz
lret
and
mov
lds
stos
adc
jbe
cmp
and
adc
stos
fisubl
push
adc
cwtl
inc
push
lret
jmp
cli
sub
lret
movsb
and
mov
lds
mov
jge
mov
addl
xchg
sub
lahf
repz
push
jbe
mov
and
cmp
aas
movsb
pusha
out
mov
inc
inc
mov
jno
jno
pop
pop
inc
data16
movsl
cmp
xor
mov
jle
repz
jns
jge
jmp
jle
push
inc
insl
aas
sub
out
movsb
cmp
daa
and
jne
jl
es
and
sub
dec
xlat
int
out
fdivs
les
out
out
ss
xchg
push
fcmovnb
sub
push
inc
lds
outsl
and
xchg
pop
mov
sub
sbb
cmc
push
rolb
pop
mov
inc
and
lcall
or
insl
dec
gs
mov
inc
insl
js
subb
popf
dec
xchg
mov
in
inc
xchg
cwtl
inc
or
je
in
jb
or
out
jns
mov
xchg
inc
jl
sbb
cmp
pop
bound
in
adc
jbe
daa
pusha
xlat
and
mov
faddl
inc
xchg
cmp
or
enter
fldt
mov
cmp
add
ss
ror
sbb
iret
pop
ficoml
fdivrl
mov
enter
xor
inc
xor
mov
into
ja
lcall
xchg
pop
or
pop
adc
xlat
xor
cwtl
dec
mov
and
add
mov
sub
ds
jl
in
call
lods
dec
jle
ss
pushl
dec
or
pop
and
pushf
scas
repnz
daa
add
repnz
xor
mov
xchg
ret
pop
dec
dec
push
xchg
arpl
sahf
adcb
jmp
sbb
mov
dec
es
or
and
daa
aaa
xchg
mov
or
jl
xchg
in
xor
or
dec
mov
enter
fmull
ja
fmul
push
stc
and
push
test
add
xor
pop
jo
fmul
or
push
pop
fmul
dec
and
jne
pop
stc
xor
adc
movsb
fs
cmpsb
jb
dec
add
clc
and
aaa
push
ds
pop
push
cmp
and
xor
cmc
pop
mov
jle
and
sbbl
scas
inc
dec
aaa
aas
mov
sub
add
jge
test
out
jecxz
addr16
stos
dec
jl
push
cmc
push
aam
ror
imul
xor
scas
mov
shrl
fucomi
iret
jo
sbb
pusha
sbb
mov
je
xchg
scas
hlt
sti
sarb
fistps
aaa
adc
cmp
fcomip
jb
adc
mov
jae
cmp
sti
aas
ljmp
loope
adc
pop
aas
adc
xchg
adcl
pop
repz
ds
aad
dec
gs
jo
outsl
loopne
cltd
jns
and
out
jnp
popf
into
rorb
pop
push
les
jg
dec
fucomi
andl
std
adc
push
add
stc
mov
add
jnp
xor
xor
sahf
jnp
gs
cmp
out
jno
rcrl
pop
imul
dec
inc
xchg
ljmp
scas
push
je
pop
ret
inc
aaa
arpl
call
cmpsl
orl
sbb
push
sbb
movsb
rorl
sub
lret
push
vpaddsw
xchg
sbb
sti
jecxz
mull
or
dec
je
lods
cltd
mov
push
push
aaa
adc
lret
xchg
xor
and
dec
arpl
fldcw
lods
out
cmp
sub
and
cmp
xchg
push
loopne
sub
push
sub
addr16
pop
mov
inc
into
scas
mov
xorb
test
scas
xchg
aam
cmpl
into
adc
lret
push
mov
add
jle
nop
outsb
rclb
dec
imul
lds
pop
daa
xchg
dec
dec
jns
pushl
cmc
in
push
pop
pop
jle
fsts
add
test
cmpsl
mov
repnz
xor
pusha
stos
out
ret
frstor
mov
mov
jnp
ss
mov
cmovne
shll
cmp
sarb
out
jmp
cs
cltd
mov
mov
idivb
mov
inc
inc
pop
test
das
jle
std
in
mov
ret
and
xchg
pop
cmp
aad
enter
push
ljmp
mov
pop
push
test
mov
sbb
mov
adc
lahf
cmp
add
movsl
inc
lock
xor
ficompl
lret
lds
push
and
and
fstpl
leave
dec
sub
jno
lods
nop
shll
jne
ljmp
shll
push
int
lcall
mov
aaa
sahf
insb
mov
push
cmp
xchg
dec
push
pop
sbb
and
insb
sbb
jle
and
lock
shl
add
xor
mov
jne
ljmp
addr16
mov
sub
add
inc
daa
mov
in
incb
pop
push
lods
dec
sbb
cmpsl
inc
lods
or
sbb
jbe
sahf
cmp
sbb
addr16
sbb
pop
jae
ds
fstps
into
bswap
adc
dec
pop
jo
adc
out
hlt
dec
xchg
shlb
jnp
adc
mov
popf
push
jg
push
xor
in
rcrb
xchg
mov
pop
jb
inc
xchg
mov
adc
jo
sbb
out
in
mov
out
divb
sub
lret
loop
jne
jmp
adc
cmp
jbe
add
arpl
adc
pop
xor
jbe
sbb
lret
jmp
imul
mov
loop
sub
jno
fsub
or
jmp
imul
xchg
jns
rcl
jno
push
dec
jnp
movsl
adc
mov
call
daa
sub
idivb
add
mov
pop
adc
inc
mov
mov
pop
mov
mov
dec
jne
inc
jmp
push
rorb
clc
sahf
inc
inc
jae
or
scas
loope
sub
lahf
dec
adc
jecxz
or
ljmp
cmpsl
add
hlt
gs
stos
imul
repz
mov
push
fcomps
jnp
or
dec
imul
pusha
pop
jns
jbe
mov
lret
sub
cmp
aaa
push
and
adc
rcrl
scas
xchg
inc
ffreep
sbb
and
ljmp
dec
inc
fnstsw
outsl
mov
push
push
xchg
inc
mov
je
popa
xchg
mov
push
test
fdivrs
mov
cmpsb
nop
rol
jb
call
mov
jl
mov
test
add
add
sub
arpl
lods
js
call
mov
aas
call
loopne
sub
sahf
test
out
dec
jecxz
dec
and
mov
sbb
or
xchg
ja
mov
popf
lahf
cld
out
stc
jno
in
test
pop
movsb
mov
movsb
ret
dec
fimuls
cltd
subl
test
mov
loope
outsl
outsb
rorl
xchg
pop
dec
lret
inc
out
cmp
es
add
or
add
and
jge
push
and
mov
les
mov
pop
cmp
push
rolb
je
jle
sub
sub
sbb
dec
fdivp
adc
pop
sub
sahf
mov
dec
lods
and
mov
xchg
mov
inc
movb
xlat
and
or
lahf
rorl
fwait
jno
ffree
into
sbb
lahf
sbb
jne
mulb
popf
dec
stos
push
dec
and
sub
mov
ss
in
xchg
sbb
cmp
or
sahf
mov
andb
xchg
add
loop
jge
dec
pop
stc
dec
sbb
cmp
repnz
jmp
aas
cmc
xchg
ret
adc
sub
or
lods
and
ss
adc
jns
mov
in
mov
push
jmp
xchg
and
push
sbb
xor
stos
inc
cmc
jb
mov
inc
mov
push
movsl
in
jno
ljmp
jno
adc
loope
shll
dec
sbb
mov
out
push
popa
cmp
dec
data16
or
std
mov
pusha
out
sub
mov
imul
pop
jp
stos
ret
movsb
negb
xchg
pop
jp
lret
idiv
lds
and
rcl
mov
jbe
leave
add
xor
in
dec
push
xor
mov
out
sub
gs
dec
shlb
pop
add
fimull
arpl
push
sahf
jle
adc
out
inc
ret
out
ja
add
xchg
test
push
mov
add
outsl
or
loopne
lret
push
add
sbb
rcrl
mov
repz
add
pop
sbb
mov
sbb
push
jp
mov
aad
out
fdiv
inc
sbb
xor
in
out
mov
jo
scas
pop
repz
loopne,pn
shrl
dec
push
and
data16
inc
add
pop
cmp
dec
and
cmp
out
movsl
sahf
dec
mov
and
jae
xchg
ss
push
dec
sarb
jo
enter
mov
sub
jge
jne
pop
dec
int3
sub
and
mov
aaa
pop
pop
mov
xchg
iret
sbb
xchg
xchg
mov
jne
hlt
mov
test
insl
push
add
ja
nop
mov
jmp
xchg
flds
fmuls
xor
mov
mov
clc
call
sbb
inc
inc
xor
test
mov
mov
popa
jl
fnstsw
ret
fwait
loopne
cmp
jle
xor
jno
popf
jne
sbb
out
stos
pop
inc
lahf
movsl
mov
cmpsl
push
push
and
arpl
mov
lods
push
xchg
jo
sbb
gs
jb
fnstcw
repnz
add
sbb
push
xor
push
inc
dec
fldl
cmpb
out
outsl
mov
xchg
xlat
cmpsl
cmp
scas
jle
dec
sub
or
loop
movsb
sub
lcall
fldenv
ficompl
xchg
rorl
cmp
cs
xor
mov
inc
gs
mov
inc
hlt
mov
push
xor
and
mov
jge
fadds
and
dec
lods
rclb
loope
shr
jnp
mov
jne
out
push
lods
push
mov
pop
cmp
shl
sahf
arpl
adc
mov
je
cmp
xchg
sub
mov
dec
push
into
sub
mov
push
out
fs
dec
jle
push
mov
or
mov
or
jl
mov
xor
mov
sarb
mov
outsl
mov
ja
mov
dec
jg
lcall
das
xchg
sti
jl
pop
sti
popf
lcall
icebp
sub
dec
jge
push
add
adc
lods
pop
pop
int
repnz
mov
and
push
jb
mov
xor
sub
push
add
pop
xor
repnz
call
push
xor
or
stos
stc
and
mov
test
jns
mov
push
xlat
test
xchg
sbb
cmp
nop
loope
stos
cmp
lea
dec
cmp
ret
enter
push
out
jae
push
sbb
mov
js
mov
popf
cmp
adc
mov
sub
pop
aam
lcall
xlat
and
aad
scas
fnstcw
jl
or
push
or
int3
and
shll
jno
xchg
push
fistps
shll
mov
cmp
and
sti
repz
mov
jno
out
div
sahf
jns
int
idivb
mov
push
iret
cltd
leave
pop
mov
mov
out
addl
in
pop
xchg
xchg
mov
mov
cli
adc
xchg
addr16
cmp
aaa
lock
mov
movsb
xchg
hlt
mov
dec
mov
pop
daa
test
fwait
lock
cmpsl
cwtl
add
fwait
daa
jae
dec
mov
lahf
rolb
outsl
mov
sbb
cmp
jp
or
lcall
add
push
lret
push
adc
xchg
pop
mov
xor
sbb
mov
adc
pusha
cmpl
ljmp
mov
daa
dec
in
mov
mov
pop
pop
pushf
pushf
inc
inc
aam
mov
mov
bound
ficompl
psubusw
cs
adc
daa
leave
adc
sub
add
mov
in
cli
push
mov
jle
inc
pop
xor
inc
bnd
jb
clc
lds
shrl
jbe
ss
lret
jne
ret
sbb
jle
xchg
inc
js
mov
movsl
mov
or
ficompl
mov
lods
test
dec
sub
inc
xor
add
xchg
lods
arpl
movsl
mov
test
add
ss
pop
sbb
pushf
lcall
mov
xchg
xchg
and
and
rorb
push
inc
rorl
insb
gs
stos
bound
out
jmp
outsb
sub
or
inc
mov
bound
cltd
mov
js
faddl
orb
adc
lds
add
cmp
gs
sbb
flds
ja
sbb
popa
js
fstpl
dec
push
out
rolb
cmp
jns
cmp
in
imul
and
lock
mov
cmp
mov
pop
xchg
dec
sbb
jno
dec
pop
inc
cmp
mov
aam
xchg
push
xor
jp
divb
dec
fs
or
dec
xor
cmp
jo
mov
lods
mov
filds
fsts
aaa
xchg
push
lret
pop
dec
mov
scas
sub
xchg
rorl
mov
mov
jle
je
scas
aam
xchg
or
xor
and
jbe
cmp
mov
test
imul
xchg
aaa
add
cmc
mov
scas
mov
dec
fwait
jno
sbb
stos
mov
jl
sub
lea
inc
xlat
outsb
jge
xchg
or
stos
jecxz
fnsave
or
out
stos
xor
loop
popf
fbstp
cmp
enter
mov
lods
fmull
mov
mov
lret
mov
xor
lods
out
dec
jo
jg
push
jae
xor
add
cld
mov
aam
mov
pop
enter
scas
into
add
loop
pusha
insb
pop
inc
inc
dec
xorb
add
cmp
mov
mov
and
cmpsb
nop
les
ja
adc
icebp
rorl
pop
dec
lods
js
xor
push
sub
int
inc
cli
cld
cmc
out
xlat
lds
stc
clc
and
push
dec
imul
pop
sub
insl
push
rcrl
jle
stos
dec
call
out
add
inc
xchg
in
jne
inc
xor
movsb
leave
push
cmp
mov
pop
adc
jp
movsb
inc
cmp
mov
inc
pop
movsb
pop
mov
stc
dec
cmp
fwait
lea
pop
mov
outsb
outsl
pop
mov
mov
xchg
arpl
push
jle
pop
cli
jnp
jp
shll
hlt
inc
ror
mov
sub
leave
setge
mov
sbb
mov
in
out
add
mov
lock
inc
sub
pushf
push
and
pop
mov
and
mov
fcomps
mov
int
test
pop
lds
aad
js
push
inc
nop
xor
push
pop
inc
jbe
fists
push
inc
mov
add
jmp
add
mov
adc
and
pop
fdivrs
enter
movsb
mov
push
xor
pop
int
pushf
jp
aaa
outsb
movsb
test
jo
xchg
je
sbb
mov
fiadds
adc
pushf
xor
pop
sbb
add
jnp
dec
dec
sbb
lea
xchg
cmpsb
iret
movsl
sub
fisttpl
cmp
inc
or
ja
pop
lret
sub
imul
sbb
sbb
sub
jbe
and
adc
and
data16
dec
ss
lds
sarl
aad
jae
pop
dec
mov
jnp
stos
push
int
das
int
add
loop
test
mov
loopne
sbb
xchg
inc
lock
dec
mov
cmc
repz
adc
inc
into
cwtl
jle
stos
pusha
int
pop
test
gs
test
cwtl
inc
test
jecxz
jmp
es
xchg
cmp
shll
out
pop
cmp
pop
adc
lret
lods
daa
loop
cmp
push
push
push
les
jno
lahf
scas
and
adc
pop
daa
mov
xor
dec
xor
add
pop
add
enter
rolb
roll
fcoml
inc
and
push
cmp
daa
mov
dec
arpl
lods
hlt
ret
jg
je
mov
mov
loopne,pt
push
xchg
gs
or
xchg
in
or
pop
test
inc
jb
inc
xchg
add
pop
add
add
cmpsl
sbb
and
xchg
jg
xorb
rcrl
mov
push
lret
push
mov
mov
dec
add
push
std
bound
xor
in
int3
iret
push
pop
in
inc
divl
jbe
sahf
daa
push
ja
jg
les
outsl
xchg
or
push
outsl
addr16
lods
mov
mov
fbld
or
jb
or
flds
and
dec
je
mov
jb
cmp
shlb
cmp
cmpl
xor
data16
mov
icebp
lods
mov
jmp
sbb
and
std
int
int3
subl
inc
fcoms
pop
add
push
fdivl
push
aaa
jg
cmp
mov
ljmp
cmc
clc
cmpsb
add
cmc
ljmp
aaa
std
ljmp
int3
sub
push
cli
lret
cld
pop
lcall
aaa
gs
nop
lods
nop
mov
adc
imul
jge
and
rolb
sahf
shll
sub
mov
or
repnz
push
mov
or
sti
xor
jne
sub
push
push
cmpsb
adc
call
mov
adc
fstpt
in
aas
xor
mov
and
xor
mov
xchg
fdiv
xor
iret
ret
adc
test
push
or
push
sbb
mov
ret
xchg
ret
pop
and
mov
aam
fdivs
cld
insl
in
in
fwait
aaa
xchg
cltd
fistpll
imul
fsubs
shrl
in
sub
inc
arpl
scas
lret
xchg
dec
bound
mov
dec
adc
sbb
dec
pusha
fstpt
jmp
sbb
push
xchg
hlt
dec
cmp
add
mov
out
jb
iret
loopne
push
lret
push
push
clc
sahf
mov
loopne
adc
insb
outsl
push
jmp
push
push
or
cmc
ja
repz
outsb
mov
xchg
int
pop
mov
insl
push
jns
lods
test
add
jno
pop
inc
gs
js
push
cltd
or
test
jnp
je
push
int3
lahf
jmp
mov
sbb
outsl
inc
sbb
inc
hlt
out
inc
dec
xor
cmc
je
add
ds
xor
and
push
fidivrs
sub
add
repz
pop
xor
lods
loopne
rclb
inc
ljmp
or
cmp
arpl
dec
repz
je
inc
xchg
or
pop
rcrb
mov
mov
inc
scas
cli
fldl
clc
andb
insb
pop
sbb
mov
mov
mov
cmp
aaa
mov
jl
sub
or
mov
add
arpl
outsl
cmp
sahf
pop
cmp
xchg
in
push
stos
xor
mov
mov
jmp
and
cmp
xchg
push
add
call
repz
test
std
push
push
add
ss
mov
cmc
ret
iret
lahf
leave
sbb
out
sub
push
int
test
imul
or
xchg
mov
aad
out
cmc
sub
fnsave
mov
incl
sub
nop
ja
add
adc
or
dec
pop
call
cld
out
adc
mov
sub
test
out
lods
leave
sbb
dec
xor
lea
xchg
jne
pop
mov
mov
lcall
bswap
mov
sub
adc
negb
push
leave
bound
in
dec
or
insl
xlat
lods
push
pop
jb
add
pop
push
in
inc
xchg
in
mov
lods
int
movq
and
call
pushf
mov
add
fadds
lods
loopne
jnp
shll
sub
aam
dec
popf
add
rcrl
mov
dec
push
xor
xor
xor
xchg
sbb
or
rcrb
sarl
mov
push
loopne
push
imul
and
sbb
in
xchg
fsubrs
xor
cmc
sub
xchg
loope
inc
xor
psubq
jge
lds
aas
add
jg
fimull
fsubrs
ja
repnz
mov
fmulp
and
fcmovb
out
mov
sub
cwtl
mov
or
sti
out
inc
xor
pop
aas
or
inc
dec
jo
out
and
lcall
pop
inc
jmp
cli
sbb
dec
mov
pop
fists
dec
in
mov
cmp
pop
inc
leave
repz
jge
shll
mov
mov
push
movsl
int
ret
cmc
mov
fistpll
mov
push
jne
in
cs
stos
sub
sub
daa
mov
push
incl
inc
in
movsb
sbb
cmpsb
xchg
adc
or
lock
pop
lret
stc
stc
jb
pop
push
aad
pop
dec
jbe
sbb
inc
mov
js
jb
mov
insl
je
bnd
inc
mov
pusha
fists
mov
xor
lock
pop
dec
rorb
fisubrs
mov
dec
adcb
pop
mov
push
jmp
dec
jbe
hlt
pop
push
test
dec
outsl
sbb
and
fcomps
pusha
sub
out
repnz
mov
pop
mov
rorl
or
call
fmull
loope
mov
subl
push
nop
cltd
fimull
cwtl
add
adc
testl
or
lahf
aad
dec
push
mov
jmp
cld
mov
sti
dec
push
pop
push
into
push
pop
xlat
lret
xchg
cs
aaa
mov
loopne
inc
xchg
mov
jg
dec
mov
cmp
aad
xor
fsubl
lret
sbb
mov
out
fsin
addr16
das
cmp
outsb
ror
fmull
in
mov
mov
pop
lock
jae
fdivs
repnz
pop
add
std
push
iret
inc
std
mov
push
or
sbb
out
je
push
adc
scas
stc
ljmp
mov
cli
xor
pop
mul
int3
test
enter
sbb
std
cmpsb
jb
movsb
enter
and
cltd
mov
sub
cwtl
dec
test
loopne
lahf
dec
xor
ds
and
sub
test
fists
xchg
test
js
inc
xchg
push
mov
and
mov
dec
into
sahf
data16
sub
mov
cld
inc
test
lds
push
xchg
mov
jnp
and
push
test
xchg
imul
cli
adc
xor
dec
jno
movsl
or
test
sbb
in
mov
jo
dec
gs
mov
fcoml
movsb
mov
ret
dec
imul
sub
dec
jp
sub
sub
inc
jecxz
je
cmc
fwait
movsl
jnp
fwait
insb
orl
dec
xchg
aad
adc
mov
inc
ds
in
mov
insl
in
sub
cmp
sbb
shll
pop
hlt
dec
insb
jp
sub
imul
lahf
push
mov
inc
inc
mov
mov
pop
cmc
push
push
cmc
cmpsl
rcrl
cmp
cld
out
notl
dec
xchg
cmp
out
sub
inc
orl
and
sub
jmp
int3
cmp
push
xor
xor
out
mov
bound
sub
or
ret
mov
xchg
xchg
fists
cld
pop
mov
jl
imul
in
call
fwait
mov
jmp
jns
imul
dec
cmpsb
pop
stos
dec
incb
add
add
add
jp
or
in
test
push
xchg
in
add
pushf
mov
mov
gs
push
mov
dec
movsb
int3
stos
scas
cmp
in
jb
inc
gs
mov
push
aad
dec
dec
and
inc
cmp
jl
sbb
outsb
in
jl
mov
in
movsb
leave
rol
push
cs
dec
sub
out
dec
jmp
cmp
rcll
adc
inc
xor
cs
lret
lods
mov
push
popf
jge
test
imul
adc
cmc
xor
sahf
fcompl
fnstcw
mov
mov
push
test
cld
or
jae,pt
gs
and
xlat
mov
aad
push
xchg
adcb
jp
scas
lods
cs
scas
pop
jmp
call
dec
xor
ret
sbb
sub
cmp
dec
mov
shll
mov
mov
rolb
jnp
lcall
or
jmp
pop
mov
sti
mov
faddp
xor
xchg
jne
sub
rorl
insl
push
pushf
daa
add
dec
mov
jnp
lret
int3
arpl
dec
ja
enter
jp
in
xor
push
push
add
out
lea
sub
insl
dec
fnsave
aas
cmpsl
dec
sub
dec
leave
in
push
and
mov
adc
cmpb
data16
dec
mov
enter
stos
xchg
out
xchg
mov
jno
pop
andl
add
add
enter
daa
mov
rclb
inc
fwait
mov
fs
pushl
addr16
fildl
ja
add
sub
pop
stc
lret
adc
inc
mov
in
adc
in
adc
add
dec
je
int3
push
scas
enter
imul
ficoms
or
xchg
push
mov
js
mov
mov
in
add
xchg
rcl
aas
xchg
push
and
pop
mov
int3
cmp
cmp
fwait
lods
xor
push
daa
mov
jmp
cmc
add
andl
jge
sbb
repz
test
rcr
and
insl
adc
leave
test
rorl
enter
shl
dec
imul
int3
add
mov
ficoms
jl
mov
imul
mov
or
lds
pushf
jb
notb
mov
lea
and
sti
cltd
mov
movsl
sub
or
pusha
cltd
push
sahf
fnstenv
popa
push
pusha
icebp
pop
iret
test
dec
testl
ficomps
dec
and
fisubs
nop
dec
mov
and
iret
loopne
mov
jne
mov
jae
dec
add
sub
repz
jb
or
and
sbb
femms
fstpt
push
test
out
les
ret
or
jmp
inc
push
dec
pushf
jns
insl
xchg
mov
sub
jae
dec
cwtl
push
inc
lahf
imul
add
add
nop
adc
or
and
pop
lock
inc
or
aam
enter
and
dec
lcall
adc
mov
addr16
out
pop
push
and
mov
xchg
inc
shll
or
fisubrl
stos
je
pop
jb
jecxz
or
adc
push
cli
cmp
lahf
add
outsl
xchg
js
in
mov
pushf
cmp
pop
popf
fildll
rolb
jmp
insb
sbb
lahf
js
dec
inc
rcrb
jno
std
push
std
loop
jbe
out
or
aas
pop
test
or
out
or
cmc
sbb
mov
into
add
adc
fcompl
xor
mov
push
aaa
mov
mov
mov
mov
nop
dec
jle
mov
popf
cmp
aas
xor
xchg
shr
popa
out
or
mov
cmp
add
cmpsb
and
jecxz
lods
imul
out
sub
xchg
jmp
js
aas
fsubr
loope
data16
pop
insl
in
arpl
cmp
push
jno
fmull
cli
popa
aam
gs
push
mov
out
mov
mov
jge
dec
je
pop
es
cmp
push
ja
xchg
subb
inc
shll
mov
push
sahf
scas
mov
mov
jae
cli
cmp
lret
add
bound
pusha
fs
pushf
shlb
test
aad
frstor
inc
pop
insb
scas
lods
sub
mov
fidivl
insl
dec
test
cmp
lar
gs
cld
xchg
and
call
mov
pop
lock
xchg
xor
arpl
aaa
mov
leave
jl
xor
mov
mov
loopne
out
mov
inc
mov
fimull
hlt
pop
insl
xlat
test
loop
add
decb
data16
adc
ja
lcall
or
stos
jge
shrb
cmp
sub
aaa
ljmp
fsubrp
loopne
lret
xchg
lahf
push
in
iret
cmp
mov
std
mov
rcrl
ljmp
cmpsb
mov
and
pop
push
mov
lret
cld
jl
loope
repnz
cmp
xchg
data16
mov
jne
inc
jl
xchg
test
or
jp
rcll
sub
daa
push
in
imul
dec
fisttps
jne
pushf
fisubs
lods
add
dec
add
fcom
xorl
mov
jmp
push
stc
imul
lock
mov
sub
cli
fisubs
push
mov
fcomps
pop
das
inc
in
add
leave
xchg
and
stos
and
sbb
in
pop
jbe,pt
dec
adc
int
mov
std
pop
jl
jl
aas
out
pop
fstl
rcr
enter
xor
aam
ja
ret
lret
idivb
je
xchg
mov
lret
inc
push
push
sahf
sahf
pop
sub
pop
xor
xor
jne
cs
lret
cmc
aaa
ja
mov
roll
adc
cltd
xor
rorb
pop
xor
ja
dec
push
dec
mov
scas
cltd
mov
lods
ljmp
dec
adcb
push
lods
push
jmp
mov
dec
jno
pop
fucomp
add
pop
mov
mov
ret
lds
push
cs
pop
or
inc
lock
testl
add
pop
add
push
pop
dec
lods
add
mov
push
mov
inc
das
jb
jmp
mov
adc
icebp
adcl
mov
lock
ret
inc
cmpb
mov
lret
out
cmpsb
out
pop
or
ror
popa
cmp
aas
add
cmp
sbb
pop
lods
fwait
daa
cmpsb
push
adc
or
jge
call
fwait
and
adc
fdivr
enter
lcall
adc
sbbb
jns
loopne
out
xchg
lds
cltd
add
test
sbb
pop
xchg
idivl
aad
loope
push
data16
or
les
movsb
pop
stos
stc
pop
cmp
push
aam
out
outsl
hlt
subb
jnp
iret
faddl
adc
push
lock
sub
pop
cmpsb
mov
sbb
mov
out
xor
dec
repz
adc
enter
add
inc
rcll
gs
cmpsb
dec
mov
or
push
cld
mov
pop
jmp
cwtl
jns
mov
jbe
and
xorl
cmc
scas
adc
fcomi
cmpsb
sahf
out
es
cltd
and
and
sub
enter
mov
mov
xor
add
dec
nop
repnz
fiadds
mov
ja
push
stc
mov
cmpsl
sub
xchg
xchg
cmp
dec
lea
cs
mov
push
mov
inc
cld
icebp
stc
cmpsb
pop
rclb
pushf
jmp
das
stc
fwait
or
pushf
push
je
out
xchg
sarl
dec
sub
add
in
adc
lret
or
jno
jno
add
push
repz
lahf
shl
cwtl
jnp
xor
popa
cltd
and
das
sbb
les
mov
icebp
sbb
shrl
aad
movsb
out
call
push
sub
mov
rclw
jbe
push
shl
in
mov
lret
xchg
sub
fbld
out
lods
pop
inc
sbb
lds
and
repz
cmp
shl
mov
cmp
cmp
sub
in
xchg
aam
popa
test
inc
add
mov
and
out
mov
xor
inc
fwait
jecxz
test
cmp
mov
call
xorb
jge
movsl
xlat
ljmp
xorb
mov
lock
test
lods
bnd
mov
subb
mov
cmp
adc
fsubrl
out
cld
pop
out
js
movsb
adc
pop
dec
xorl
hlt
push
add
test
pop
insb
in
dec
fs
and
mov
movl
scas
add
mov
xor
dec
stos
or
jo
mov
repnz
popa
or
cmp
pusha
or
out
ss
lods
push
pop
enter
arpl
sbb
std
adc
add
xchg
cmpsb
fstps
pusha
pop
scas
push
push
lock
lods
sub
mov
fwait
cld
xchg
push
push
jp
push
ljmp
enter
sbb
stos
xor
add
sub
xor
stos
cmp
lahf
push
outsb
pop
imul
jp
rcrb
movsb
mov
and
out
jns
cmpsb
pop
sbb
jae
adc
jbe
mov
pop
shr
test
pushl
xor
sub
adc
ss
pop
jo
mov
push
aaa
test
xchg
cmp
mov
std
inc
stos
xchg
loopne
enter
pop
rcrl
cmp
dec
xchg
push
xchg
cmpsl
das
popa
roll
addr16
ror
fistl
cmp
jns
mov
sub
fsubl
sarb
jg
add
in
inc
inc
mov
sub
cmpsl
add
lahf
jnp
lock
notb
loop
stos
bound
cmpsb
inc
clc
xchg
aad
loop
jne
dec
andb
pop
test
in
lods
cmp
jne
aas
dec
in
xor
adc
ret
xor
push
lahf
xor
mov
xchg
adc
outsl
mov
cmp
xchg
jle
lret
popa
jmp
cmpsl
jnp
mov
push
xor
ficoml
and
in
jne
testl
fnstcw
in
lea
aad
or
sbb
lahf
fnstsw
cwtl
and
mov
pop
es
push
xchg
out
cmp
add
jo
pop
nop
mov
add
or
clc
icebp
pop
push
arpl
or
push
and
jmp
jl
cmc
mov
sub
aas
mov
pushf
dec
and
int
aad
adc
adcb
or
jne
bound
cli
xchg
cmp
loopne
int
fldz
push
lods
lea
shlb
mov
adc
mov
pop
mov
inc
pop
xor
sbb
ljmp
rorb
int
pushf
add
lock
pop
out
hlt
pop
ljmp
inc
cmc
pop
mov
mov
ja
stc
cmp
jmp
xchg
push
sub
inc
mov
std
test
test
imul
inc
mov
dec
scas
es
sarb
push
jo
jae
push
test
xchg
pop
push
sti
pop
add
jmp
ficoml
add
mov
lds
sub
inc
add
push
push
mov
cmpb
cmc
mov
rclb
and
pop
out
fnstenv
xor
or
mov
pop
pop
enter
clc
or
movsl
xchg
in
xchg
call
popa
and
stos
xchg
jae
shll
xor
sbb
and
mov
inc
jl
nop
mov
mov
pop
push
daa
adc
mov
jo
arpl
mov
jmp
jne
stc
or
test
xchg
shrl
or
dec
mov
add
dec
xchg
inc
int
mov
jno
xor
and
sbb
sahf
inc
lods
sbb
ds
outsb
testl
dec
cmp
pop
mov
movsl
mov
gs
test
aas
or
mov
movsl
push
pop
pop
pop
mov
dec
push
sbb
mov
cmp
mov
pop
cs
popa
pop
clc
in
fldl
pop
fwait
orb
shlb
adc
dec
xchg
or
or
adc
push
or
into
daa
loope,pt
add
scas
int3
cmp
mov
sub
mov
sbb
repnz
xchg
testb
or
sbb
fcomip
jmp
inc
stos
adcl
cmpxchg
out
and
mov
xor
mov
pop
icebp
imul
repz
pop
fcompl
lods
and
mov
jg
cmpl
out
mov
out
pushf
inc
out
stc
into
cmp
je
fs
pop
xchg
lods
lock
js
daa
xchg
sub
aaa
scas
imul
cld
std
jae
lcall
ret
adc
lcall
rol
imul
lds
cld
inc
inc
push
ja
or
int3
push
aad
xchg
add
pusha
xor
push
push
insb
lea
fldl2t
jle
shl
vmwrite
int3
lahf
pop
rorb
push
mov
ret
and
pusha
adc
dec
jge
arpl
nop
cmp
int
push
daa
dec
xor
xchg
lds
jb
int
movsl
gs
xchg
mov
xchg
int
xchg
int3
ror
jae
fnstsw
jge
clc
pop
and
jge
push
sbb
rolb
inc
xor
mov
je
cmc
rcll
or
daa
adc
sub
movsb
dec
or
pop
pusha
push
mov
jecxz
insl
out
xchg
js
pusha
mulb
mov
or
out
mov
rorl
sub
cmp
aaa
fwait
sbb
push
shlb
dec
ret
out
movsb
je
pop
xchg
insl
mov
test
pop
mov
sub
es
subl
fistl
sti
sbb
or
add
in
lcall
push
mov
insb
jp
daa
or
js
repz
dec
mov
fisubs
in
inc
mov
sbb
sbb
dec
add
sar
pop
testb
jno
lret
loop
jmp
int
cmc
dec
ret
push
pop
add
loop
aad
mov
popa
jbe
add
xchg
mov
push
lcall
iret
sbb
negl
or
cmp
arpl
jp
cltd
jo
cmp
cltd
cld
xor
and
fistl
add
mov
fdivs
out
fwait
into
out
insl
lock
mov
mov
add
popf
push
sbb
les
mov
xchg
sti
movsb
xchg
mulb
jns
pop
and
mov
lods
cmc
ret
lods
aaa
inc
orl
fmull
std
jmp
pop
jmp
dec
jns
pop
imul
insb
mov
ds
mov
jb
mov
pop
sub
sub
popa
fidivrl
mov
loop
jae
mov
inc
xor
movsl
jo
inc
es
hlt
popf
out
arpl
adc
cli
xchg
lret
mov
in
and
mov
cmp
xor
sbb
sbbl
mov
jno
mov
or
imul
scas
dec
mov
sub
out
cmpsl
inc
or
dec
jae
mov
add
push
lea
sahf
icebp
aaa
popa
inc
rcll
mov
fldcw
lods
inc
insl
adc
push
in
ljmp
popa
nop
mov
insb
xlat
and
sbb
dec
addl
lods
leave
mov
sub
dec
mov
inc
rcrl
push
jne
cmpsl
mov
inc
mov
stos
int
push
jo
popf
push
dec
jb
sbb
iret
pop
aaa
add
mov
mov
std
sub
mov
sbb
jne
sbb
clc
xchg
subb
dec
sbb
pop
pop
and
push
sbb
jge
ds
inc
cmp
and
xchg
mov
inc
push
jae
or
cmp
dec
rolb
std
outsl
mov
jb
scas
imul
dec
and
xor
push
imul
cmp
or
push
cmovle
insb
clc
jb
adc
xchg
bound
add
xor
inc
adc
nop
inc
ret
pop
test
mov
mov
push
mov
shl
push
pop
cltd
out
scas
add
pop
sub
push
into
icebp
xor
hlt
xchg
sbb
lea
das
and
lods
ret
sub
sub
enter
push
stos
xor
insb
lahf
out
aaa
add
stos
adc
mov
or
lds
das
fs
pop
pop
mov
ret
mov
sbb
fadds
jle
and
dec
clc
mov
insb
cmp
cli
or
ja
loope
ljmp
mov
lahf
mov
int
stc
das
fidivrl
repz
xchg
jp
iret
mov
jb
pusha
mov
fcompl
lock
push
push
lods
pop
in
xchg
in
pop
inc
cmp
mov
xchg
add
stos
fucomip
mov
mov
mov
sub
mov
loop
sbb
push
sub
lahf
ret
lret
adcb
outsb
push
sub
xchg
cmp
and
lcall
jne
daa
jge
in
and
stos
aam
push
push
pop
loope
jl
das
je
cli
cs
incl
popa
dec
je
lds
lret
cmp
mov
bound
sub
jae
jle
out
inc
stos
jae
and
iret
hlt
jge
inc
sbb
push
loop
jmp
into
mov
fsubrl
cli
loop
adc
in
fwait
sbb
mov
mov
movsb
ror
push
sbb
pop
adc
fsubrl
movsb
xchg
aam
repz
mov
xor
cmp
mov
cmp
mov
gs
or
add
mov
js
mov
jl
in
push
cmp
rcrl
jnp
and
cmp
mov
mov
jns
lcall
enter
outsl
sbb
adc
in
dec
aam
xchg
mov
mov
ja
mov
loopne
test
enter
movsb
push
jno
xor
push
jnp
xor
push
pop
mov
dec
mov
aad
aad
xlat
or
dec
sti
sbb
jb
xor
inc
int
mov
pushf
dec
mov
roll
xlat
js
gs
lret
jmp
cmp
push
dec
loope
and
js
push
mov
sub
insl
add
fwait
enter
mov
xchg
cli
ja
popf
jns
mov
xor
adc
pop
loope
popf
mov
icebp
sbb
ljmp
mov
cmp
sub
cmp
cmp
mov
repz
xchg
movsb
xchg
leave
aas
pop
inc
jl
dec
je
xor
sahf
lahf
mov
push
add
mov
xchg
or
pusha
leave
pop
cmp
cld
cli
mov
pop
push
mov
ret
int3
fcoms
or
outsb
insl
inc
xchg
aaa
push
out
or
mov
adc
sbb
pushf
in
add
mov
fs
jae
pop
push
jae
mov
push
xchg
inc
loope
fwait
into
jae
fmul
mov
and
inc
add
cmp
cmp
mov
inc
jns
in
jg
jne
mov
xchg
pop
cmp
xor
adc
sbb
push
ret
sbbl
or
jbe
inc
pop
add
das
jmp
pop
ret
aaa
popa
or
test
addr16
pop
cmovns
in
movsb
and
xchg
pop
cmp
add
and
adc
mov
lods
jge
enter
leave
test
notl
fs
fnsetpm(287
mov
pop
addr16
aas
hlt
movb
sub
push
popf
pop
clc
call
mov
xor
enter
xchg
mov
push
frstor
iret
jle
je
idiv
sub
inc
xlat
jno
js
fstl
jbe
sbb
and
ljmp
jmp
jge
dec
mov
mov
sub
cltd
iret
outsb
jmp
gs
leave
xchg
xchg
sub
and
jne
cmpsl
sbb
lcall
gs
lods
cmpsb
mov
mov
mov
in
pop
xchg
adc
mov
ret
das
pop
adc
cmp
lret
xchg
scas
fisubl
sbb
lahf
xchg
rolb
sub
mov
movsl
xor
add
sti
fisubrl
ret
cwtl
cwtl
lahf
push
jp
inc
shrb
or
insl
fadd
ja
dec
push
int
ret
pop
sbb
adc
js
aad
adc
cmp
mov
mov
fistl
sbb
pop
mov
xchg
push
jp
push
stos
sub
ss
enter
mov
mov
adc
pop
xchg
dec
inc
stos
jecxz
mov
mov
adc
mov
jp
jg
push
dec
rcrb
jns
aam
insb
loopne
cmp
lahf
fstpl
es
mov
push
lds
mov
fstl
sbb
in
mov
pusha
sub
popf
scas
loop
leave
ret
aad
cmc
daa
adc
inc
mov
dec
movl
lock
mov
adc
sti
ret
mov
add
das
jl
or
push
jmp
lret
in
pop
cmpsb
xchg
fildl
fisttpll
nop
dec
inc
int3
addr16
or
push
push
enter
mov
nop
mov
out
and
test
xchg
mov
pop
out
add
shrb
outsl
jo
addr16
das
sbb
xor
dec
sbb
push
or
rorb
aam
sub
jo
roll
xchg
pop
insb
inc
inc
jle
cmpsb
psrlq
inc
stos
push
into
inc
scas
mov
sbb
shll
cs
outsl
ss
push
cltd
push
divb
enter
ret
inc
or
inc
enter
pop
setp
dec
in
into
leave
push
cmp
push
daa
dec
stos
xor
push
ret
xor
cmp
mov
scas
aas
dec
outsb
cmp
fists
cmpsb
or
xchg
popa
outsb
jp
inc
das
or
cmp
fadds
in
inc
nop
dec
cmp
lods
mov
cltd
sub
cmp
psubw
xor
lret
mov
cmc
xor
pop
jle
test
cmp
sub
or
and
add
das
adc
push
and
xor
loope
cs
push
mov
pop
leave
fisubs
xor
jmp
and
inc
cwtl
pop
mov
mov
push
scas
cltd
cwtl
loop
jno
je
aam
cmp
fdivs
orl
aam
into
inc
fcomps
lods
push
cmp
cmp
fildll
mov
or
mov
jb
mov
ljmp
std
push
dec
push
or
xchg
in
repnz
test
sub
jae
sub
xchg
sbb
mov
sbb
leave
inc
mov
xchg
adc
fadds
mov
lods
push
push
inc
stc
in
sbb
cmp
enter
repnz
xlat
enter
enter
inc
pop
jle
fmuls
pop
ss
aam
sahf
cmc
mov
lock
push
in
aas
lods
icebp
cmp
lea
xchg
and
roll
jge
pop
cmc
mov
insl
and
in
fdivrs
adc
jl
hlt
mov
push
sub
test
inc
adc
in
mov
repz
cltd
and
movsb
dec
and
or
out
xchg
inc
mov
jae
fnstcw
ja
test
pop
mov
popf
test
ficoml
gs
jae
mov
pop
mov
es
mov
or
push
and
scas
xchg
xlat
jl
ret
jecxz
lahf
test
jecxz
fcmovnbe
jbe
pushf
test
jae
mov
es
xor
push
imul
mov
cmp
aaa
in
loope
pop
outsl
sahf
inc
pushf
lods
mov
jl
test
inc
mov
shll
loope
inc
pop
pusha
adc
ljmp
ljmp
jle
pop
mov
filds
rolb
pop
jmp
mov
mov
pop
cmp
and
dec
mov
pop
lds
jecxz
loop
les
fidivs
dec
sbb
jg
mov
push
sub
loop
mov
ja
or
cltd
inc
sbb
jb
mov
xchg
pop
adc
xchg
popf
mov
mov
cmp
xchg
lods
fcoml
pop
mov
int
mov
add
xchg
and
and
and
sbb
sub
jbe
inc
and
push
stos
mov
stos
sub
in
pop
cltd
cmp
pop
rcrl
std
roll
gs
cmpsl
inc
icebp
arpl
jmp
jnp
xor
sbb
cld
cmp
dec
pop
push
xchg
push
adc
mov
sub
iret
mulb
outsb
fcoms
mov
ret
rcrb
aad
pop
nop
jle
add
es
outsl
mov
xor
je
xor
jbe
mov
icebp
icebp
pop
dec
xlat
mov
mov
arpl
xlat
sbb
cwtl
add
bound
mov
movsb
test
popl
dec
pop
das
sub
popf
das
push
add
pop
rcll
addl
sub
lea
or
loopne
dec
iret
add
mov
mov
sub
arpl
jne
push
jp
in
xchg
or
adc
sub
insl
cmpl
test
and
adc
ret
jnp
scas
sahf
jg
and
daa
cs
sar
xchg
sub
inc
or
inc
int
lds
dec
repz
sub
mov
push
sub
sbb
inc
xchg
call
mov
xor
pop
cld
testb
in
cmp
or
cmpsb
push
fmuls
les
fstps
push
fidivrs
and
shll
cld
mov
push
arpl
fdiv
dec
insl
enter
pop
stos
push
inc
jae
inc
adc
repnz
push
and
call
jg
in
xchg
add
jp
sbb
push
int
test
mov
fistps
push
push
shrl
hlt
ljmp
cld
leave
mov
cli
nop
ss
add
mov
mov
lea
test
pop
es
xchg
cmp
inc
loopne
aad
or
imul
mov
xchg
dec
fucom
mov
frstor
cmp
xchg
into
addr16
aam
outsl
fs
pop
loope
xor
push
sub
cltd
mov
int3
sbb
pop
js
call
and
mov
push
leave
out
ds
xchg
inc
movsl
mov
sahf
out
call
loopne
popl
lret
sti
pusha
cli
jne
sub
fisttpl
cmp
xchg
out
push
ljmp
mov
jl
inc
out
xchg
icebp
adc
mov
pop
out
pushw
rclb
cmpsb
push
aam
lea
ljmp
fsubr
jbe
and
mov
arpl
cmovae
mov
mov
das
inc
jp
sahf
add
cmp
test
push
xchg
stos
sbb
sub
movsb
into
out
and
ficomps
sbb
cmpsb
sub
stc
jl
std
ja
push
xchg
ds
cmp
sbb
inc
xchg
inc
cmp
or
push
out
loope
lret
and
dec
dec
cmp
cmpsl
psrld
mov
stc
mov
mov
dec
outsb
pop
push
ljmp
push
iret
mov
sub
inc
test
add
nop
or
stos
addl
jae
and
fnsave
int
push
cmp
push
cmp
jb
mov
lret
adc
and
xor
es
movl
pop
out
inc
inc
in
mov
ds
or
push
inc
test
movsl
mov
push
or
jp
add
cltd
in
mov
fnsave
dec
enter
aad
pop
notl
mov
mov
dec
js
xchg
shrb
cld
cli
std
jmp
push
movsb
pop
xlat
enter
add
cmpsl
loopne
push
lcall
clc
pop
rcll
std
loope
jo
rcrb
outsl
jne
into
cld
fisttpl
in
aaa
adc
aad
mov
mov
ljmp
int
xlat
sarl
jae
outsl
xchg
lcall
cmp
fisttpl
jle
imul
adc
mov
mov
arpl
xor
push
mov
pop
gs
or
adcb
and
xlat
pop
pop
imul
in
pop
dec
jge
jns
xchg
add
stos
xor
fdivl
adc
lods
or
pop
dec
adc
fucomi
xor
std
xor
jp
repz
in
cmc
lret
pop
in
les
js
loopne
push
push
inc
push
jnp
jecxz
enter
std
pop
into
pop
ds
iret
pop
aaa
push
push
or
movsl
xchg
xchg
inc
jo
lahf
add
add
cmpsb
popa
int
or
movsb
mov
int
sbb
push
push
lahf
shr
and
in
mov
mov
or
insl
dec
fidivl
lcall
gs
outsb
in
inc
dec
push
stos
popa
mov
adc
ds
fs
push
and
cmp
cmp
add
push
push
push
loopne
mov
incb
arpl
jg
out
inc
jp
pop
cmp
cmc
mov
xor
fdivrl
mov
mov
popf
sub
or
push
loopne
mov
rolb
es
test
cli
aad
pusha
push
out
and
pop
push
or
inc
outsb
out
adc
dec
mov
and
frstor
adc
pop
cmpsl
hlt
pop
cmc
xor
add
cmp
and
les
xchg
loope
mov
sub
ss
mov
mov
xor
dec
les
dec
push
scas
fldl
jns
mov
movsl
stos
fistpl
xchg
jmp
psubusb
adc
jle
cld
cmpsl
push
mov
jp
dec
or
mov
mov
pop
mov
push
xor
and
xchg
popf
les
push
dec
xchg
sahf
sub
add
andb
loope
pop
adc
fimuls
sbb
sbb
fsubl
out
lcall
or
push
mov
push
aam
idivl
add
cld
insb
xor
dec
ja
jo
fmul
es
dec
jp
mov
es
dec
aam
cltd
aam
cmp
repnz
gs
sub
mov
rclb
cld
test
or
mov
fadd
xchg
pop
mov
mov
mov
lock
jo
in
rclb
pop
roll
or
data16
add
pop
incl
daa
jge
outsl
mov
jp
lahf
lea
pop
xchg
movsb
xchg
stos
data16
push
mov
movsl
adc
add
ds
dec
stos
or
mov
push
or
add
and
inc
aad
js
ss
xchg
std
pop
leave
popa
pop
cld
sub
sahf
push
add
xchg
inc
imul
in
pushf
add
sti
fxch
pusha
stc
or
test
in
sub
aas
mov
das
pop
bound
cmp
fisttpll
cmpsb
mov
sbb
mov
dec
ds
adc
lds
loop
inc
shll
dec
adc
addb
jge
cmp
jmp
adc
cmp
addb
arpl
and
mov
or
lret
out
sub
fwait
or
sti
sub
and
sub
dec
sub
fnstsw
leave
pop
or
repnz
pop
negl
testb
adc
enter
push
xchg
xchg
outsl
aad
icebp
cwtl
mov
je
test
sbb
lahf
mov
adc
cwtl
cmovns
fdivrl
xor
shll
mov
or
out
ljmp
push
dec
mov
fbld
das
push
dec
xchg
add
int3
mov
mov
push
lcall
repz
sbb
or
std
sub
call
rorl
mov
cltd
jl
into
in
outsb
imul
in
xor
jl
enter
sti
or
jb
rolb
jge
jnp
adc
fbld
xor
arpl
pop
fisttps
sti
notb
sub
bound
frstor
add
mov
hlt
mov
fstl
repnz
push
stos
iret
out
lock
in
inc
lock
mov
mov
lcall
xchg
adc
mov
lock
sahf
cwtl
or
fwait
jno
call
push
inc
stos
cli
push
and
dec
clc
cmp
jne
fimuls
mov
pusha
mov
xchg
mov
adc
pop
mov
in
imul
jmp
mov
scas
mov
dec
je
in
inc
sbb
iret
xchg
in
ficoms
mov
andl
jne
rorl
test
popf
xchg
pop
pop
jecxz
jmp
sbb
cli
out
mov
arpl
mov
jmp
fnsave
xor
stos
clc
xor
lret
pop
or
xor
sub
popa
mov
adc
sub
mov
in
loopne
cmp
and
sub
pushf
add
sti
test
stc
mov
inc
fstps
push
jnp
fnstsw
iret
icebp
pop
xor
outsl
mov
push
mov
loop
aad
add
in
pop
cs
dec
jecxz
lods
mov
dec
sbbb
data16
mov
jo
sti
mov
or
mov
outsb
cltd
test
and
mov
lcall
aaa
mov
adc
icebp
mov
pop
in
adc
xchg
mov
mov
popa
rcrb
mov
adc
js
pop
mov
nop
lock
mov
cmpsb
test
or
fisubrs
lahf
mov
sbb
lcall
cs
and
mov
hlt
add
lods
stos
repnz
push
insl
dec
add
xor
mov
in
lahf
push
pop
jl
std
inc
push
nop
ljmp
lret
mov
repz
mov
std
pushl
adc
mov
leave
xchg
mov
xchg
sahf
icebp
andl
fisttpll
repnz
rcrb
cmp
cmpsb
ds
mov
stos
inc
xchg
mov
bound
push
xchg
loope
dec
repz
cld
flds
incb
nop
jle
jge
dec
and
fists
inc
jle
push
inc
or
es
imul
outsl
xor
stos
xor
mov
movsw
and
imulb
dec
add
cmp
jbe
stos
jbe
mov
mov
sbb
lds
ss
add
psubsb
shll
xor
mov
mov
inc
pop
pusha
mov
xchg
adc
push
or
in
xchg
iret
daa
das
and
in
stos
rolb
and
mov
bound
adc
pop
out
sub
mov
adc
sbb
sbb
xor
and
push
enter
add
jle
sub
mov
sbbl
push
aas
in
dec
stos
inc
cmc
cmc
or
loopne
xor
mov
test
mov
or
repnz
fisubrs
jge
push
clc
or
push
rcrl
xchg
ret
ds
sbb
cmp
imul
fcmove
popa
shlb
cmc
gs
pop
add
jmp
lret
sbb
and
sbb
jg
popf
stc
cs
nop
rcrb
in
aam
sbb
das
sbb
fstpl
repnz
sbb
mov
fwait
cmp
loop
dec
std
loop
add
fidivrl
cmpsl
shl
lods
das
add
les
insb
fcomps
sahf
and
decb
mov
push
mov
scas
cs
popa
mov
std
lret
adc
popa
out
jnp
pushf
sbb
js
fists
cmp
jmp
test
roll
pop
sbb
jecxz
gs
stos
dec
xor
xchg
mov
or
xor
add
andl
lds
popf
mov
jecxz
loope
ret
fstl
neg
fidivl
out
add
mov
push
push
push
add
clc
gs
cwtl
jle
lods
fcmovnbe
xchg
sub
cltd
adc
ja
das
pop
add
adc
ss
std
adc
inc
loop
xorb
and
inc
adc
std
lea
xchg
ljmp
cli
iret
test
mov
mov
pop
sub
pop
into
mov
ds
inc
lds
shr
jb
mov
and
or
nop
jns
fwait
lods
cli
ret
std
push
push
push
je
or
xor
iret
adc
imul
movsl
and
ret
adc
sti
repz
and
push
fisubrs
jmp
mov
daa
cmp
in
ret
std
dec
lret
out
add
sub
jbe
pusha
imul
inc
inc
cmp
add
mov
push
inc
and
xor
inc
push
sbbl
mov
pop
sub
rcrb
add
jb
lods
les
and
ret
hlt
shr
or
push
and
das
stc
fildl
fldenv
cltd
xor
fs
cmpb
adc
stos
mov
out
loopne
cmp
dec
push
out
jb
mov
pop
sbb
xor
fisubs
sbb
imul
push
repz
movsb
adc
lcall
push
mov
outsb
inc
fbstp
idiv
fmull
lods
test
xor
jae
mov
push
dec
and
add
imul
add
shr
sub
mov
add
add
repnz
add
and
fwait
hlt
cmc
jecxz
ret
mov
cmp
cmp
popf
sbb
fs
out
test
loopne
dec
mov
lahf
and
jp
arpl
fs
pop
movsl
out
insl
jecxz
aad
jp
adc
leave
or
fdivrs
aas
add
mov
or
fsubr
push
int3
popl
in
fcomps
push
je
iret
fisubrl
inc
push
out
dec
jg
repz
movb
or
int
cmp
test
xor
fsubl
and
pusha
xlat
cmp
sarb
mov
outsl
mov
outsb
pop
cmp
test
sub
out
std
out
pop
repnz
ja
lea
lret
in
test
jns
loop
js
xor
sarb
pop
into
cmp
pop
in
adc
inc
sti
sbb
push
cmp
push
mov
pop
test
test
daa
xchg
fs
adc
flds
je
mov
jg
add
test
gs
xchg
rorl
sahf
dec
data16
or
push
mov
divb
enter
into
ss
xchg
addl
data16
test
mov
dec
test
push
or
fimuls
es
xchg
xor
adcl
ds
nop
imul
push
add
imul
push
pop
inc
loop
mov
in
push
fistps
xor
loop
andl
mov
xchg
stos
mov
or
mov
mov
lods
aad
adc
add
push
xchg
cmp
popa
popf
ja
rcl
sarl
cmp
mov
fs
adcb
push
shlb
ljmp
sti
mov
hlt
shrb
sbb
lea
leave
ja
cli
movsl
xchg
cmc
xor
adc
cltd
sbb
cwtl
je
inc
lods
dec
pop
inc
ljmp
das
add
mov
push
cltd
popf
jecxz
jbe
out
xchg
xor
lcall
pop
inc
and
xchg
popa
xor
mov
mov
mov
aam
in
test
mov
and
xchg
hlt
data16
xchg
cmp
fmuls
pop
add
and
aad
and
pop
in
leave
in
es
add
mov
jl
xchg
xchg
jnp
push
push
lret
mov
mov
and
xchg
in
xor
and
and
xor
dec
cmpsl
imul
push
out
push
or
test
test
fs
xor
testl
mov
inc
ret
aaa
push
orl
mov
add
xchg
lds
ret
into
sti
clc
mov
pop
mov
incb
or
pop
nop
jno
movsb
cltd
lahf
pop
mov
jne
push
js
iret
jne
negl
in
jge
xchg
ss
jp
fndisi(8087
jns
es
push
xor
jmp
dec
xchg
data16
divl
mov
imull
in
dec
int3
and
cwtl
les
mov
lods
xlat
mov
mov
sbb
int3
pop
or
ror
pop
inc
xor
add
fcomi
test
add
test
jb
mov
mov
popf
ficoms
mov
leave
test
stc
push
push
std
aaa
aas
xchg
mov
scas
orb
outsb
or
mov
add
dec
push
mov
mov
stos
jecxz
xor
hlt
cltd
inc
add
roll
pop
test
xlat
pop
lods
in
fildll
jmp
ss
test
pop
xchg
dec
das
insb
lret
dec
cmp
xor
mov
mov
sbb
scas
xchg
mov
iret
dec
mov
or
lods
ds
inc
sbb
imul
ficompl
sub
outsl
leave
fs
and
aam
and
sub
mul
arpl
bound
mov
fmuls
test
and
xor
mov
jmp
dec
fcoms
out
testb
jns
fisubs
mov
out
sbb
lret
mov
mov
out
icebp
repnz
xchg
icebp
stos
fidivl
or
dec
cmpsl
dec
mov
inc
loop
or
push
cmp
dec
scas
or
rolb
cmc
not
xorl
and
pusha
mov
pop
stc
mov
cmc
sub
je
jp
sahf
in
ud2
mov
shrb
xor
and
in
push
xor
movsb
pusha
or
les
subb
jg
xchg
scas
fstpt
push
jmp
imul
mov
faddl
arpl
cmp
imul
leave
movsl
xor
add
mov
sbb
cltd
add
sub
lret
das
insb
fdivl
push
shr
mov
cs
out
pop
cmpsb
mov
jle
icebp
add
pop
movsl
xchg
out
or
pop
fdivrs
jl
add
mov
xchg
sahf
cmpsl
incl
cmc
mov
pop
movsb
sub
fsubrs
mul
dec
orl
mov
fisttpll
and
add
mov
pop
ret
cmp
add
sti
mov
jb
call
mov
stc
movb
jmp
sub
imul
fsubrl
mov
mov
cmp
std
jbe
push
movsb
add
or
outsl
mov
mov
mov
je
in
xchg
jg
xchg
inc
ja
mov
mov
push
roll
cmpsb
shlb
imul
xor
in
lea
in
add
popl
aad
outsl
push
push
sbb
jp
sbb
pop
mov
xchg
pop
xchg
jge
sti
adc
pop
inc
mov
mov
imul
outsb
or
mov
pop
push
dec
mov
or
cmpsb
and
je
push
insl
mov
out
pop
andb
or
sub
outsb
pusha
push
cmp
scas
aad
pop
test
jo
mov
and
in
push
xor
or
mov
test
stc
sbb
das
or
mov
leave
inc
inc
rorb
inc
xchg
xchg
cmpsl
xchg
fimull
sarb
gs
sarb
lret
neg
or
sti
or
dec
roll
scas
dec
push
frstor
xchg
or
incl
jmp
scas
gs
jns
adc
mov
push
lahf
jns
sbb
mov
inc
mov
mov
loopne
inc
jb
xchg
sbb
adc
push
pop
jg
pop
sbb
lret
ret
sub
out
xor
mov
lds
fisttpl
and
jae
add
inc
jae
dec
int3
arpl
shrl
ljmp
mov
imul
sub
mov
dec
sub
mov
mov
popf
cmpsb
mov
test
fildll
in
fbld
mov
les
push
arpl
pop
cmp
dec
lods
lods
setge
sahf
hlt
mov
aad
insb
lret
stc
imul
outsl
jp
lods
pop
out
mov
xchg
cltd
mov
stos
xlat
mov
stc
dec
out
inc
mov
add
test
lds
aam
push
and
add
pop
sti
mov
cli
ds
sub
pop
dec
sbb
sbb
mov
mov
lods
sbbb
mov
daa
ljmp
sti
adc
dec
mov
mov
push
fidivrs
das
test
cmc
lret
sbb
sub
mov
mov
xchg
and
xor
cmp
enter
xor
jne
cmp
lds
sbb
inc
add
pop
xchg
lods
stos
xor
mov
or
mov
mov
cmpb
in
rol
xchg
rorl
mov
lods
lret
push
jns
aam
jb
lock
test
insl
in
rcll
adc
ja,pt
add
pop
or
shl
inc
iret
out
bound
rolb
sti
pop
jl
or
push
xor
shl
xlat
and
sbb
push
push
negb
out
xchg
mov
stc
xchg
adc
jmp
sarl
lods
mov
cmpsl
mov
adc
jbe
adc
xchg
fcmovnbe
shr
lahf
xor
out
mov
mov
mov
das
inc
lds
dec
data16
xor
jl
sti
xchg
aas
stos
jge
xchg
divl
or
pop
mov
jne
stos
lds
xchg
cmp
jl
loopne
and
cmp
test
test
cmpsl
jle
mov
xor
pop
and
fstpt
xchg
mov
xor
mov
addr16
outsb
mov
dec
xor
mov
or
shlb
enter
lds
jl
cwtl
cltd
fsubs
popa
fcompl
xchg
in
jle
pop
and
hlt
ja
pusha
push
mov
mov
mov
mov
cltd
hlt
mov
cmp
stos
dec
mov
dec
test
jne
nop
lds
cltd
jae
push
or
imulb
mov
jge
or
arpl
and
mov
cmp
and
jo
mov
shlb
xor
scas
inc
cmp
pop
cmp
and
cwtl
pop
jmp
fs
cltd
mov
mov
scas
push
xchg
insb
iret
push
fcompl
mov
hlt
mov
pop
scas
add
mov
jmp
test
add
pop
popa
and
repnz
imul
adc
arpl
repz
xchg
das
mov
mov
lcall
pop
scas
sahf
adc
dec
and
mov
cmp
lret
pop
sub
movsb
sub
sbb
jns
jae
mov
pop
out
xchg
inc
jecxz
imul
pushf
add
add
add
xor
insl
out
add
stos
mov
dec
dec
and
loop
cmc
js
xchg
pop
jp
iret
xor
test
jecxz
dec
adc
xlat
loope
jne
rolb
jp
fcoms
sbb
notl
imul
sub
ljmp
dec
xchg
fwait
lock
push
add
sbb
xor
cmpsb
cmc
sbb
jb
out
sub
int
inc
outsb
nop
and
test
incb
lods
outsb
leave
xor
cmpsb
lock
inc
sbb
mov
add
dec
mov
fisubrs
arpl
test
add
jecxz
scas
adc
push
ffree
dec
mov
pop
shl
jmp
jns
lods
inc
pop
mov
inc
bound
and
xchg
ja
xor
rcl
jns
mov
gs
cmp
mov
mov
sub
jae
mov
fsubl
pop
icebp
jno
gs
call
outsl
lock
int
leave
cmp
movsb
repnz
sub
cli
inc
addb
and
add
sbb
fmull
popa
cmp
mov
imul
movsl
inc
stos
clc
sbb
add
lahf
mov
jecxz
and
ljmp
jns
inc
nop
lock
mov
outsb
into
add
dec
in
movb
cmc
and
sti
aam
fsubrp
dec
push
mov
pop
push
mov
shl
test
cmp
je
mov
repz
and
fcomps
mov
mov
cmp
ret
test
std
mov
loop
test
inc
nop
mov
dec
sub
movsb
sbb
ficomps
call
or
sbb
notb
xor
mov
mov
fiaddl
pop
daa
les
ss
jns
repz
sti
push
jp
fiaddl
test
aaa
add
or
roll
stos
xchg
xor
pop
repz
xor
jae
es
pop
xchg
pop
mov
push
sub
out
mov
push
pop
scas
sub
mov
mulb
and
inc
mov
mov
iret
popf
adc
mov
dec
xchg
mov
add
add
or
cmp
pop
test
ret
daa
mov
sbb
sarl
lock
push
pop
pop
xor
punpckhdq
pop
icebp
cmpl
lcall
into
ficomps
incl
fnstsw
jbe
lods
clc
pop
mov
push
sub
stos
or
xorl
les
gs
movb
rcl
mov
sbb
js
icebp
cli
stos
sbb
adc
sarl
notb
jecxz
lret
push
out
adc
cmp
test
cmp
mov
fcomi
fidivs
push
scas
je
push
cmp
xchg
or
sub
je
lock
outsl
mov
jmp
scas
scas
adc
cmp
fdivl
enter
outsl
fstl
add
and
js
push
xchg
dec
insl
pop
push
fldl
sub
jp
sub
push
mov
icebp
into
ljmp
sti
pop
int
and
xor
mov
jbe
pop
xchg
es
iret
addr16
push
add
jecxz
cmp
pop
mov
in
inc
push
dec
dec
jecxz
std
xor
pop
mov
call
dec
sbb
mov
push
jg
xchg
dec
mov
leave
testl
sub
mov
or
inc
pushf
in
jns
and
adc
int3
aad
rcrl
xchg
dec
out
filds
loopne
and
or
push
cmp
adc
lret
or
mov
push
loopne
inc
pop
pop
fisubl
mov
inc
cwtl
sub
xor
or
out
stc
cmp
xchg
jns
imul
fildl
roll
test
not
xchg
out
jmp
pop
out
sbb
sub
jecxz
push
mov
or
pop
mov
dec
sbb
cli
scas
mov
cmp
xor
outsb
cmp
dec
cmp
lret
add
cmpsl
cld
iret
mov
jo
mov
ret
arpl
sub
dec
stos
in
sub
mov
adc
add
xorl
pop
call
testl
adc
lret
lcall
test
test
stos
inc
inc
pop
cmp
hlt
subl
xor
ss
pop
push
ret
lods
dec
fcmovnu
imul
lret
add
cmp
mov
push
push
mov
or
sbb
and
mov
push
mov
xlat
sub
sbb
sbb
jno
mov
inc
stos
imul
adc
lea
or
enter
mov
jne
inc
adc
mov
xchg
fsts
popf
iret
xor
xor
cmp
add
imul
mov
mov
mov
lret
cmpsl
imul
push
lret
dec
fnstsw
inc
pop
out
jmp
pop
cmp
pop
fldenv
iret
xchg
scas
xchg
mov
shlb
cltd
pop
outsb
outsb
ret
pop
adc
pop
xchg
mov
daa
sbb
test
mov
sbb
mov
and
fmul
jb
rclb
mov
xchg
rol
icebp
inc
scas
cmp
inc
mov
int
pop
orb
scas
scas
add
xor
lcall
cmpb
mov
cmpsl
add
xchg
xor
dec
inc
inc
sub
pop
sete
mov
call
test
cmp
outsb
mov
inc
bound
cmpsl
stos
imul
xchg
pusha
in
inc
outsl
lea
dec
jae
inc
sbb
fidivrs
push
push
push
adc
ljmp
lahf
movb
mov
adc
lods
mov
sbb
lcall
jecxz
sbb
adc
sbb
arpl
cmp
aad
or
nop
or
sub
mov
dec
into
mov
push
add
dec
leave
push
jnp
sub
jne
mov
in
or
mov
std
mov
add
sahf
in
lds
pop
fimull
lahf
mov
clc
clc
lret
outsl
mov
aaa
xor
sub
pop
out
xchg
cmp
call
xchg
aaa
pop
mov
mov
adc
cmp
mov
out
mov
mov
rclb
mov
aam
sub
repz
or
aam
sub
lahf
stos
xor
cli
pop
mov
and
stos
rorl
adc
dec
stc
loope
dec
mov
xchg
mov
mov
ss
popa
xor
in
das
inc
gs
sahf
and
xchg
jno
inc
push
mov
xlat
test
scas
dec
push
and
aaa
cmp
inc
test
dec
rcll
xchg
insb
push
adc
jnp
pop
mov
pop
inc
arpl
scas
xchg
gs
bound
cmp
out
shl
push
in
roll
pop
sub
mov
jle
outsb
iret
fdiv
daa
dec
mov
mov
adc
mov
adc
in
and
aad
or
in
test
nop
xchg
mov
loope
sbb
daa
mov
jp
fidivl
outsb
stc
aam
mov
dec
faddl
jp
mov
dec
pop
shrl
add
mov
sbb
cld
xchg
jp
imul
jnp
subps
ret
hlt
in
xorl
jmp
js
add
cmpsb
xor
insb
daa
jmp
mov
sbb
in
mov
mov
mov
movsb
and
mov
out
mov
int
xlat
lods
in
jne
sarl
pop
out
mov
arpl
push
xchg
or
test
call
xor
scas
fldl
movsl
xchg
aam
jg
sbb
add
push
push
pop
pop
enter
inc
mov
call
sub
mov
lds
jl
or
sbb
call
cli
enter
sbb
pop
jae
adc
push
daa
cmpsb
jmp
mov
outsb
and
pop
popa
mov
sub
inc
adc
scas
xchg
adc
push
adc
pop
fdivs
lret
cld
jo
add
dec
or
arpl
fisubs
fildll
mov
jnp
das
mov
jae
pop
in
roll
and
inc
adc
xor
cmp
inc
jp
or
ret
cld
or
clc
lret
lods
pop
inc
push
mov
jae
das
nop
dec
push
loope
jl
mov
enter
fwait
arpl
movl
out
movsl
scas
add
pop
inc
gs
shrb
mov
rolb
int3
movsl
dec
xchg
cmpsl
pop
aam
mov
test
and
fidivrs
dec
sub
leave
in
repnz
jb
out
bound
inc
les
adc
ljmp
pop
xchg
fwait
jo
ss
lahf
mov
clc
push
sub
sub
sub
cmpsb
dec
push
jp
int3
jp
add
pop
mov
cmp
mov
inc
push
rcrl
add
shrb
cmc
jl
sti
push
aam
mov
dec
inc
inc
call
pusha
cwtl
add
jecxz
and
pop
and
and
int3
pop
mov
fdivl
inc
push
mov
scas
mov
push
jb
sub
iret
jnp
inc
jge
clc
mov
es
rcl
mov
and
push
push
pop
dec
mov
mov
rorl
pop
mulb
mov
stos
gs
lret
xor
daa
mov
sbb
ljmp
test
inc
inc
adc
int
fs
rol
add
imul
jecxz
fistps
rcll
mov
or
cmp
push
sbb
or
mov
pop
jne
xchg
fwait
jg
push
mov
nop
incl
mov
int3
mov
xor
fnstenv
or
xor
adc
adc
xorb
fnstsw
cli
cmp
adc
lcall
pop
outsb
sub
xchg
ficoml
stos
in
nop
enter
lock
subb
push
dec
outsl
out
jle
jge
or
mov
sub
jmp
scas
sahf
mov
xlat
test
cmp
push
and
push
pop
movsl
cwtl
xchg
sti
mov
sub
push
and
cmp
sub
cmp
test
dec
sbb
in
pop
iret
and
xor
and
push
add
aaa
mov
pop
mov
dec
adc
and
inc
in
aas
subb
les
mov
inc
je
cmp
mov
xchg
mov
sti
sahf
std
cwtl
in
and
bound
cmp
sub
or
adc
xchg
hlt
addl
negl
aam
and
and
add
sahf
hlt
dec
xor
clc
pop
stos
sub
and
je
lds
jge
outsl
cmc
aad
or
aam
push
lcall
dec
clc
or
push
xchg
pop
or
lds
fiaddl
loop
mov
jl
mov
cltd
mov
rorl
and
and
popa
xchg
xor
sbb
shl
or
loopne
adc
fists
iret
out
into
in
stc
scas
inc
cmc
dec
jno
cmp
cmpsl
in
in
ljmp
gs
cmp
jnp
in
jl
cmpsl
ljmp
pop
inc
enter
cwtl
adc
and
push
push
fisubrs
dec
mov
loop
and
push
jge
leave
cvtps2pi
shll
movsb
testb
mov
into
cld
addl
cmpsb
cltd
or
popa
push
cmp
std
jo
into
jle
outsl
mov
or
aad
fwait
lods
popa
imul
loop
mov
jmp
in
mov
xor
movsb
sub
inc
sub
jae
xchg
xor
js
push
lock
xlat
cmp
hlt
inc
icebp
in
inc
lods
testl
pop
xchg
out
sti
pop
pop
inc
fstps
push
cld
int3
lds
punpckldq
lret
scas
and
mov
pop
push
sbb
sub
xchg
add
dec
cld
mov
jo
add
jnp
clc
mov
fisttpl
ds
jge,pt
fs
xchg
cmp
shrl
sbb
inc
cli
adc
add
and
sub
mov
lock
mov
cld
in
sub
jns
and
orl
sti
xchg
mov
add
fidivl
xor
dec
dec
arpl
mov
out
stc
std
fs
testb
sub
lret
cli
mov
fwait
sti
sbb
sti
or
adc
mov
cmp
cld
shlb
push
jae
xchg
lahf
xor
and
mov
jp
mov
dec
adc
test
sub
into
sub
mov
xchg
mov
dec
pop
xor
int3
cmc
subl
jp
push
pop
lret
mov
sub
fildl
dec
xchg
rcl
fldenv
addr16
mov
unpcklps
jne
sub
sub
pop
std
inc
adc
jp
sub
jl
movsl
lods
outsl
pop
mov
jl
push
call
bnd
dec
xor
dec
in
jmp
cmp
lods
loopne
loopne
or
std
add
test
push
jge
mov
lock
sbb
fsubl
pop
movsb
inc
lds
and
xchg
mov
xchg
out
add
divl
mov
xlat
loopne
dec
pop
cmp
loop
jl
int
stos
mov
cmpsb
push
or
cltd
mov
fcomip
cmp
mov
push
fildll
mov
ljmp
xchg
ljmp
cmp
pop
mov
arpl
jecxz
push
adc
adc
dec
fcmovne
int3
xchg
add
mov
xor
xchg
xchg
xchg
dec
adc
test
icebp
repz
pop
jp
jecxz
pusha
jge
add
inc
iret
cmc
out
out
xlat
scas
pop
jmp
addr16
pop
cmp
fldt
pop
scas
mov
aas
rorl
fwait
mov
in
das
mov
in
out
loope
aad
cmpsl
loopne
mov
enter
or
jbe
inc
adc
out
jle
xor
jne
push
js
xor
ficompl
push
dec
ret
filds
cmp
pop
testb
sub
sub
mov
sbb
push
pop
cmp
out
xchg
setle
xor
push
fisttpl
iret
or
jae
es
adc
mov
mov
sbb
out
push
inc
pusha
sti
inc
mov
adc
pop
imul
jmp
sbb
cmpsl
dec
rcl
addr16
adc
insb
dec
push
nop
mov
arpl
sbb
mov
push
cwtl
pop
shlb
pusha
dec
mov
sbb
xor
pop
push
mov
addr16
jp
lahf
sub
sbb
cmp
cltd
loop
xor
dec
or
sbb
jmp
repz
sbb
bound
jnp
ret
mov
bound
js
into
adc
test
aad
dec
cmp
sbb
in
inc
decl
rcl
btc
pop
mov
fnstenv
div
pop
es
pop
mov
mov
adc
xor
add
pop
mov
stc
les
push
sbb
xor
lret
or
lods
xchg
scas
add
inc
stc
jb
adc
les
inc
pop
sbb
pop
mov
xadd
faddl
add
adc
stos
sbb
adc
sub
xchg
insb
hlt
ret
push
mov
das
cld
arpl
les
and
rcll
test
push
adc
aam
inc
daa
and
in
rcrl
jb
imul
or
pushf
ret
andb
pop
jmp
jmp
sbb
sbb
lds
push
out
pop
dec
and
mov
movl
lret
movsb
xchg
fbld
push
repz
stc
enter
or
add
in
jo
pop
rcll
js
insb
std
xor
sbb
loop
and
movl
not
out
pop
adc
xchg
movsl
lret
adc
outsb
iret
bnd
fs
stos
adc
jg
shlb
icebp
xor
and
daa
cli
out
mov
arpl
sub
pushf
jae
mov
push
mov
xchg
push
sbb
test
pop
sbb
clc
loopne
int
mov
and
lea
xor
mov
inc
divl
jae
loope
push
inc
push
pop
push
idiv
fadds
mov
jbe
jb
pushf
aam
rcrb
mov
xchg
push
hlt
adc
enter
fwait
aaa
ret
push
pop
adc
mov
mov
mov
mov
rcr
mov
outsl
test
or
jecxz
mov
stos
push
push
cmpsl
mov
dec
cmpsl
inc
dec
movsl
fsubrs
lahf
xorb
pop
outsl
in
insl
push
out
stos
scas
and
dec
pop
insb
sbb
in
shll
subb
or
int3
and
sub
insl
dec
inc
pop
pusha
and
sti
lea
mov
mov
fdivrl
inc
pushf
mov
or
adc
dec
int
push
mov
jge
into
cmp
stos
mov
sbb
cmp
decb
loop
mov
push
faddl
aad
sub
jp
adc
mov
or
lcall
mov
inc
sbb
mov
jg
cmp
dec
into
inc
mov
jl
les
out
adc
imul
mov
add
ds
push
add
aaa
pop
push
stc
ret
mov
dec
jmp
loopne
xchg
ljmp
cmp
es
xor
int
lahf
or
scas
cmpb
jae
addb
pop
fs
mov
mov
cltd
or
nop
mov
shlb
subb
jmp
xchg
lock
ljmp
or
inc
aas
jg
pop
jae
mov
mov
and
xor
divb
xor
lods
jbe
lds
and
js
and
loopne
out
inc
add
nop
mov
test
mov
or
ret
pop
lret
add
and
jl
xor
subl
xchg
clc
inc
cwtl
andb
cmp
adc
sub
sbb
lods
cli
pop
mov
xchg
mov
add
outsb
cwtl
push
enter
movsb
out
shr
cltd
add
daa
xchg
lahf
popf
fdivl
cmp
mov
bound
mov
jge
sbb
and
sbb
mov
test
dec
pushf
pusha
dec
push
jge
test
xchg
cmp
jb
jmp
mov
dec
pop
jecxz
jmp
ret
inc
es
jbe
loop
add
mov
std
cld
bound
jge
push
pop
call
sbb
les
or
fwait
add
out
xor
xlat
mov
ja
jo
mov
into
dec
sbb
lock
xorb
inc
push
repz
xchg
mov
dec
sbb
jle
mov
cmpsb
insl
loop
test
stos
push
mov
sbb
add
lods
lods
dec
dec
ficoml
std
push
stc
mov
and
and
mov
inc
push
rol
ds
lea
outsl
jo
xchg
and
aam
imul
cmpsb
call
clc
pop
dec
jecxz,pn
fcmovu
movsl
jbe
aam
xchg
fcoml
movsb
pop
movsl
jb
jnp
test
add
inc
call
pop
test
mov
xchg
and
push
stos
xchg
adc
mov
xor
jnp
cld
push
jae,pn
mov
cmpsl
lcall
lret
push
xor
add
cmpsl
lahf
int
mov
mov
adc
mov
jle
loop
stos
jne
jbe
push
lret
loop
inc
push
fsubl
pop
sub
mov
or
mov
xchg
mov
addl
inc
andl
dec
cmc
jmp
xor
repnz
xchg
and
add
stos
inc
sbb
imul
inc
dec
cld
adc
in
cltd
cmp
loopne
push
sub
cmp
arpl
and
das
repnz
push
mov
int3
xchg
pop
scas
xchg
popw
xor
xor
push
mov
jg
cmp
adc
fbstp
jle
repnz
stos
pop
test
lds
mov
loop
pop
sti
js
lds
divb
or
out
rorb
jl
inc
js
stc
inc
in
lock
jp
xor
mov
push
repnz
int
mov
mov
push
and
pop
pop
loopne
pusha
pop
adcb
js
das
icebp
dec
je
insb
lcall
add
xor
insl
mov
in
pushf
out
into
jae
pop
mov
cmp
mov
xor
inc
and
mov
daa
xor
xor
and
pusha
loopne
es
daa
lds
shlb
and
inc
jecxz
aam
loopne
dec
mov
adc
out
imul
lea
and
stos
push
mov
data16
insb
or
out
add
into
cmp
lahf
test
in
test
imul
jb
jae
sub
jno
adc
in
into
fs
inc
mov
dec
es
dec
fidivrs
dec
scas
pop
fstpt
mov
arpl
out
das
push
gs
jne
leave
inc
ds
jp
out
pop
sbb
shrl
popa
mov
mov
xchg
daa
shll
push
inc
adc
pushf
out
adc
add
mov
mov
in
pop
push
movsb
adc
cmp
xchg
lods
stos
pushf
push
out
mov
cmp
add
push
and
shll
shll
mov
pop
add
jno
xor
cmc
fcomi
or
outsb
jns
pop
dec
leave
jg
loope
sarb
cmpsl
movsl
adc
mov
ret
cwtl
lds
int
xor
loop
xchg
or
mov
aas
jmp
in
andb
pop
sti
adc
and
pop
adc
les
fmuls
loope
inc
mov
cwtl
mov
cmpb
stc
pop
lahf
fidivs
ret
loope
add
jns
lods
sbb
cmpl
sub
hlt
ja
lods
cmp
sbb
cmpsl
ljmp
xchg
jbe
aad
mov
jne
or
fidivs
imul
stos
aaa
adc
add
loopew
adc
jl
xor
shrb
cmpl
push
bound
movsb
xor
aam
fnsave
fisubrs
add
pop
ljmp
mull
sub
rorb
sub
add
sub
mov
inc
jno
shl
lea
addb
pop
mov
mov
lcall
xor
cmp
xchg
xor
cmp
out
add
insl
jmp
repnz
pop
xchg
mov
lcall
inc
or
or
push
js
mov
inc
je
sbb
mov
clc
mov
sub
pop
jnp
jo
imul
mov
dec
push
jecxz
imul
movsb
inc
xchg
mov
rolb
fistl
jbe
mov
leave
dec
sar
mov
sbb
pop
popa
out
repz
stos
add
lds
mov
in
pop
fwait
add
insb
xor
rcrl
mov
push
repz
std
dec
mov
xor
sub
adc
out
and
sahf
jb
xchg
sbb
mov
cltd
daa
cmpl
mov
sti
adc
add
xor
cwtl
subl
imul
lods
outsl
scas
mov
mov
filds
mov
sti
inc
push
loope
outsb
int3
mov
mov
mov
mov
or
sti
push
cmp
mov
mov
loope
aad
push
mov
in
es
inc
push
not
pushf
and
sub
sarl
sbb
pop
loop
lea
dec
loope
inc
int3
xchg
jle
add
lods
inc
int
iret
test
shlb
sbb
xor
outsl
sarl
outsb
xchg
pop
mov
in
mov
xor
sbb
test
sbbb
ss
add
mov
and
ljmp
sub
int3
hlt
hlt
incb
int3
jge
jns
xor
fmuls
xor
ljmp
fbld
jne
pop
xchg
cmp
and
into
imul
shll
and
das
xor
sub
lock
cli
dec
leave
mov
push
iret
je
inc
mov
or
js
xor
aam
repnz
push
in
int3
test
js
xchg
lea
cmp
bound
and
dec
mov
jnp
or
pop
insb
mov
lret
imul
ret
push
jmp
jns
and
mov
and
mov
repz
cld
mov
ds
mov
mov
xchg
xorl
adc
jnp
mov
test
push
enter
aam
lahf
out
jnp
xor
faddl
rorl
out
cmp
xchg
rorl
mov
cmp
push
pusha
je
aaa
mov
fistps
popa
push
sbb
mov
jnp
pop
jl
mov
or
inc
xor
loop
dec
cmp
leave
fsubrl
inc
hlt
jns
repz
je
lcall
aaa
icebp
movsl
mov
cltd
xor
mov
aad
mov
in
fcompl
xor
aad
enter
and
add
rolb
mov
or
loope
push
aaa
inc
cmp
inc
imul
mov
jae
pop
pushf
push
mov
in
scas
jno
push
push
mov
xchg
out
add
mov
jecxz
push
xchg
cwtl
push
pop
cmp
adc
sbb
imul
pop
stos
cmp
xchg
xorb
or
jb
inc
dec
push
push
aas
aad
mov
mov
xor
inc
daa
mov
loope
insl
mov
lret
sbb
inc
sub
cmp
rorb
filds
sarb
mov
mov
sbb
repz
lret
sbb
jbe
mov
rcr
sub
stos
pop
enter
incl
add
xchg
repz
adc
pop
xchg
mov
jne
movsl
aam
pop
out
sti
repz
and
cld
iret
std
pushl
dec
pop
and
scas
xchg
adc
xor
jmp
movsl
lods
test
call
gs
mov
test
jl
xor
in
mov
pop
addb
xchg
lods
inc
sbb
mov
jb
cli
loop
imul
stos
sub
xchg
mov
addl
sbb
cmp
fwait
xor
jno
sub
lds
js
xchg
xor
arpl
insb
stos
icebp
in
inc
cmp
mov
push
loop
jne
dec
sub
adc
adc
mov
daa
test
dec
adc
xor
aas
rolb
mov
sar
sahf
xlat
sbb
test
xor
shlb
mov
movsl
mov
loop
lea
mov
or
sarb
jge
mov
cmp
insb
mov
jns
cli
nop
loop
jp
testb
je
pop
pop
mov
and
jnp
stc
sub
gs
incl
adc
shl
jl
iret
mov
inc
add
jl
pop
fwait
cmp
push
mov
es
or
sub
enter
sub
jb
scas
and
jecxz
mov
icebp
cmp
bound
cmp
inc
minps
loopne
cmpsb
bound
imulb
xor
mov
loopne
inc
push
insl
xchg
and
fildl
mov
enter
clts
push
add
jmp
iret
sub
repz
pop
ret
lahf
and
stos
cmpsl
and
test
aam
lcall
testl
add
xor
mov
cmpsl
jae
cmp
into
sub
jae
mov
pop
notl
adc
pop
xchg
push
add
sbb
xor
lahf
in
mov
xchg
cli
add
add
stos
xchg
lods
add
adc
mov
cs
xor
inc
or
in
shll
mov
fildll
icebp
mov
xchg
pusha
in
adc
push
inc
adc
jge
or
add
jnp
inc
jno
cli
loopne
mov
loopne
jmp
and
imul
mov
sbb
cld
dec
std
and
enter
jmp
push
jecxz
sub
aad
out
mov
jl
ljmp
aas
lods
mov
clc
lret
adc
xor
aam
je
xor
mov
leave
dec
iret
and
mov
push
scas
testl
imul
pop
ljmp
out
jp
adc
xchg
inc
aad
les
push
clc
loop
cmp
xchg
jmp
pop
je
cmp
icebp
ret
daa
cmpsb
lds
das
mov
push
or
xor
ss
mov
inc
mov
push
xor
xlat
push
andb
div
test
adc
xchg
cmp
jns
das
cwtl
inc
negl
hlt
mov
xchg
das
out
loopne
std
movsl
fnstenvs
jg
and
movq
mov
push
cmp
push
lcall
inc
popf
inc
add
movl
dec
icebp
pop
jge
pop
mov
pop
adc
in
lahf
andl
xchg
sub
jnp
dec
mov
lret
lock
xchg
pusha
sub
push
test
das
lcall
push
sub
arpl
mov
pop
add
dec
mov
lds
popf
sbb
cmp
dec
scas
cmp
dec
mov
fs
cli
cwtl
leave
jl
mov
stos
sbb
test
xchg
scas
or
out
inc
jecxz
add
xor
and
and
xor
and
test
adc
je,pt
jg
movsb
cmp
inc
sub
aam
rolb
push
stos
or
add
pop
movsl
adc
push
imul
icebp
loopne
rcrb
dec
outsl
xchg
or
xor
xor
mov
ficoml
add
inc
into
movsl
int3
bound
mov
xor
dec
test
aas
movsb
test
sub
pop
mov
pusha
mov
out
stos
std
dec
lock
in
push
jns
inc
adc
add
out
inc
jbe
xor
adc
sahf
mov
sub
sub
sbb
insb
fsubrl
or
jp
pop
gs
push
cmp
mov
or
insb
rolb
xor
pushf
lea
jl
popa
pusha
mov
pop
popa
ficoml
int3
in
mov
sahf
movsb
mov
int
fcoml
mov
add
sahf
lods
pop
mov
mov
mov
dec
cmp
imul
or
inc
pop
popa
pop
push
jae
sbb
mov
push
push
pop
cmc
sbb
jge
jle
daa
outsl
int
movsb
dec
in
xchg
aaa
mov
enter
fiadds
and
fs
xchg
mov
sbb
js
xchg
push
xchg
loope
cwtl
out
lock
imul
loope
cltd
or
sarb
es
push
sbb
lods
xchg
loope
scas
xor
test
loope
cltd
fbstp
aad
adc
sub
jnp
mov
push
mov
popa
in
pusha
popa
and
nop
jnp
push
sbb
lods
mov
int3
inc
stos
adc
xor
mov
into
jnp
int3
jp
stos
enter
js
add
in
inc
pop
add
pop
leave
jmp
pop
leave
dec
or
xor
jnp
pop
into
push
xorb
sahf
ficomps
sbb
jmp
push
movsl
fs
out
scas
repnz
fstpt
cltd
call
adc
ficomps
outsb
add
lahf
in
fmulp
out
jl
cmpl
dec
pop
insl
adc
adc
or
ret
mov
lds
aaa
insl
xchg
xlat
push
pop
negl
mov
mov
xchg
scas
sar
adc
call
add
pop
mov
and
scas
mov
pushf
adc
cwtd
mov
mov
lret
adc
lret
jp
inc
mov
or
cmpsl
loopew
pop
push
push
mov
std
pushf
in
pop
add
pop
sbb
lods
xchg
ja
sub
adc
dec
xlat
mov
and
ret
push
xchg
pop
nop
push
imull
push
in
mov
push
cmpsb
insb
mov
into
pop
arpl
mov
or
xlat
test
pop
fxch
and
movsl
test
ret
push
jle
lahf
mov
xor
and
in
repnz
test
out
insl
aad
aaa
ja
popfw
in
inc
imul
xchg
cltd
clc
pop
adc
insl
stc
or
mov
lods
hlt
dec
push
cld
fimuls
jnp
adc
out
xor
cmp
test
add
int3
pusha
enter
hlt
stos
call
push
lea
scas
push
push
jp
push
mov
mov
lea
sub
jnp
jnp
jge
jo
vpsrlq
dec
add
addr16
xchg
out
arpl
dec
pmulhuw
repnz
imul
int3
mov
xor
pop
ja
cmp
dec
lcall
mov
or
rcll
inc
push
movsb
into
dec
pop
sub
aad
jmp
push
sub
jmp
out
add
jmp
cmpsb
xchg
repnz
data16
sub
je
sub
loopne
sahf
inc
pushf
inc
movsl
es
ret
iret
sbb
push
cmc
pop
xchg
xchg
nop
daa
test
sbb
out
pop
mov
fcos
fisttps
test
jl
sbb
imul
test
xchg
pop
adc
mov
mul
dec
adc
mov
mov
shl
adc
mov
jp
adcb
mov
adc
jo
int3
xor
or
xchg
mov
inc
into
xchg
xorl
ret
inc
imul
inc
jge
mov
mov
inc
insb
cli
dec
insl
testl
cmpl
scas
or
cmpsb
dec
sbb
gs
scas
mov
out
or
cs
cmp
xor
xchg
or
call
je
pop
xchg
jp
add
sub
push
and
cmpsl
outsb
nop
icebp
test
mov
fdivl
fsts
insl
ss
in
je
ss
scas
shrl
dec
mov
xchg
fcmovb
xor
subb
sbb
mov
dec
aas
nop
popa
cmp
push
pop
mov
mov
ljmp
lea
sbb
dec
int3
pop
pop
nop
ds
sbb
sbb
inc
dec
sub
pop
mov
sub
xor
add
stos
insb
mov
cltd
pop
add
sub
fimull
xor
mov
jg
sbb
inc
dec
lods
clc
sub
mov
test
pushf
ss
orb
xchg
sarl
mov
pop
mov
pop
dec
push
jo
sbb
and
ja
fmul
push
rcll
fisubs
jnp
ss
js
repnz
loope
mov
shlb
outsb
add
into
adcb
xchg
push
cmc
in
lret
sub
add
push
outsl
mov
fstps
jae
jge
into
pop
jb
or
mov
cmpsl
lcall
jg
ljmp
fnsave
lahf
test
jbe
push
dec
add
pop
jmp
or
jo
cmp
mov
mov
add
add
and
cs
and
sbb
adc
in
bound
pop
fdiv
push
cli
sarl
iret
inc
pop
shll
out
push
lods
mov
push
xchg
repnz
jmp
js
sub
or
xor
insb
aam
and
pop
outsl
ret
mov
add
sub
sub
dec
mov
mov
cmp
sbb
sbb
subl
mov
pusha
or
adc
jne
pushf
in
aaa
push
mov
notl
jbe
nop
or
sarb
leave
arpl
sbb
scas
mov
frstor
cmpb
pop
pop
pop
filds
xlat
adc
mov
and
mov
and
lods
fmul
into
test
push
subl
xor
ljmp
add
inc
xchg
and
sub
cmc
stos
mov
push
jle
popa
frstor
push
mov
sbb
btc
pop
mov
inc
sbb
lea
out
cwtl
or
pop
sarb
cmp
ret
mov
adc
pop
into
pop
fwait
das
mov
into
and
fucomp
js
and
dec
lods
xor
add
daa
repz
jp
add
and
sbb
xchg
testb
ret
and
jecxz
push
cmp
cmc
idivl
ss
in
movsb
mov
sbb
roll
addr16
mov
cmp
fiaddl
jo
outsl
lds
cmp
jnp
stc
cs
push
pop
adc
shl
push
test
and
sarb
jns
stos
fadd
mov
and
les
xchg
hlt
rcrb
xchg
push
pop
push
insl
dec
cmp
testl
push
xor
and
aas
sub
add
xchg
push
int3
repz
ret
adc
mov
mov
js
push
ds
mov
jle
xchg
xchg
movl
xchg
jg
gs
and
adc
xor
pop
aaa
ljmp
and
movsl
in
arpl
xchg
xor
and
mov
outsb
movsb
lea
push
lea
cwtl
ja
nop
add
ret
mov
inc
loop
out
mov
pop
mov
sub
out
iret
and
sbb
pop
adc
adc
roll
scas
fs
pop
enter
sbb
xor
fnstsw
mov
filds
mov
jecxz
pop
jmp
cld
or
xchg
insl
subl
pop
sbb
je
idivl
imul
lods
mov
aad
out
andb
pop
dec
jno
sti
jns
fsubrl
and
push
insl
mov
cmpl
inc
cmp
das
enter
enter
jp
cmpsb
mov
push
cmp
je
fidivl
es
xlat
xchg
ja
sbb
ljmp
insb
lea
jns
aas
jle
ds
or
jmp
pop
xchg
add
sub
cli
pop
popf
xor
cmpsb
push
and
and
fwait
lods
jle
sub
mov
jo
dec
lods
mov
dec
pusha
or
mov
fdivrs
xlat
mov
push
pop
inc
mov
fwait
gs
jg
jns
lea
xor
fidivs
std
mov
mov
lods
repnz
xchg
sub
data16
jo
add
mov
into
cmpsb
push
aad
adc
shr
pop
xchg
xor
sub
cmpps
cmp
addb
fadd
xor
adc
adc
jge
das
push
inc
pop
test
mov
mov
es
testb
or
gs
cs
scas
xor
sub
ror
shlb
shll
js
or
mov
jge
mov
pop
inc
shll
mov
pop
jp
es
mov
add
dec
xor
jg
xor
xchg
mov
sbb
movl
xlat
fcmovnu
jne
sub
push
mov
test
xchg
pushf
mov
popf
push
lods
add
jecxz
cmp
ds
arpl
fisubs
bound
xchg
mov
ret
or
xchg
loope
jo
hlt
aas
cmp
add
sub
cli
or
insl
mov
call
sbb
inc
jg
sbb
cmpsl
jb
cmp
push
cmc
pop
icebp
sbb
and
or
xchg
movsl
enter
dec
ret
adc
popf
rcr
sbb
pop
xor
sbb
inc
mov
jo
mov
mov
adc
dec
outsb
out
out
and
test
test
clc
adcb
aaa
pop
repz
push
call
call
jo
jge
shl
jge
pop
mov
dec
jbe
push
call
repz
enter
inc
mov
adc
or
and
fcmovu
mov
sbb
adc
sarb
jmp
shl
or
dec
fnstcw
pop
lods
push
and
mov
into
mov
ret
lods
xchg
ljmp
push
loopne
cmp
loope
pop
insb
sbb
sub
sbb
in
sbb
inc
fwait
enter
and
rcl
xor
test
xchg
cmpsb
fistpl
mov
sub
and
dec
aam
jo
lea
pop
lock
mov
or
adc
shrb
cmp
test
test
pop
jae
pop
fs
jle
aaa
adc
sub
jl
jb
aaa
cld
mov
iret
sbb
dec
test
or
lret
insb
test
xor
fmul
pusha
dec
adc
ljmp
hlt
in
addb
ds
mov
popa
loop
push
shll
es
dec
or
je
mov
cmpsl
fwait
inc
outsb
ds
stc
jle
pushf
adc
popa
xlat
adc
push
fucomp
xchg
paddusb
mov
xor
cmp
mov
cmp
jp
popa
fldcw
push
int
cmp
fidivrs
sub
pop
loope
push
in
add
popa
pop
aaa
pop
pop
std
push
movsb
imul
sub
jg
jge
insb
call
xchg
push
insb
or
push
push
inc
push
sub
out
je
dec
add
dec
fstps
insb
sti
jmp
data16
jp
es
cmp
dec
mov
in
addr16
lods
push
es
dec
mov
loope
bound
push
cmp
movsl
out
or
xchg
inc
ljmp
int
inc
mov
cmp
inc
ljmp
daa
and
dec
inc
imul
mov
and
push
or
daa
mov
mov
test
jecxz
lds
lahf
xchg
jmp
jl
jbe
lock
pop
push
inc
cwtl
xor
mov
jno
push
shll
sbb
sub
cmpsb
adc
imul
ljmp
or
je
mov
adc
mov
push
stc
int3
rcrl
gs
int
xor
out
xchg
pop
cltd
mov
test
loopne
push
imul
int
fisttps
pushf
clc
push
push
test
mov
mov
andl
adc
aaa
lods
mov
sub
jmp
sbb
jg
ret
fstpl
cmpsb
inc
lock
in
or
jge
clc
rclb
fwait
dec
and
inc
push
jg
ffreep
ret
repnz
bnd
inc
cmp
mov
xor
in
sbb
out
push
cmc
sqrtps
mov
inc
jae
cltd
fadd
sub
mov
or
clc
scas
outsl
push
push
xorb
mov
push
aaa
xor
lret
into
pusha
jmp
fadds
fidivrl
dec
stc
mov
jno
lahf
bound
adc
jne
jo
sahf
inc
std
into
fdivr
int3
jge
jle
xchg
ja
mov
sub
jb
dec
std
imul
movsl
jb
imulb
push
cli
pop
iret
icebp
mov
pop
sub
mov
loopne
mov
cmp
dec
mov
movsl
mov
mov
inc
fisttpll
ja
imul
jbe
sbb
cmp
inc
dec
outsl
and
aaa
xchg
add
and
push
sbb
hlt
mov
popf
pop
stos
loopne
push
or
adc
les
cmpsl
mov
inc
lock
pop
and
cmp
add
ljmp
ret
and
fstpt
aam
jb
lods
lock
out
mov
or
ds
lods
cli
pushf
sbb
loope
sub
jge
lds
int
repz
out
mov
or
sub
mov
mov
adc
imul
aas
or
jmp
adc
lret
dec
sbb
mov
dec
xchg
mov
add
xor
aam
inc
loopne
push
sbb
lock
aad
or
mov
icebp
ljmp
fmuls
pop
xlat
out
push
loop
hlt
imul
shrl
dec
stc
sahf
ss
lods
dec
push
jg
dec
xor
adc
push
pop
sbb
jmp
cmp
ficoms
pop
cwtl
out
mov
rclb
ljmp
jl
faddl
pop
mov
mov
loope
mov
push
sbb
stc
inc
cmp
xchg
repnz
test
pop
jl
fstp
xor
les
push
adc
or
sbb
movsl
fbld
popa
ret
or
cmc
enter
and
mov
cmpb
push
cs
and
mov
xor
push
roll
jp
jae
jecxz
aam
stos
sub
inc
mov
adc
add
lea
test
mov
push
mov
int
jl
cmovo
out
fsts
ja
add
sub
fcomps
jne
aad
adc
xchg
fs
push
cmpl
sub
and
loopne
nop
xor
fidivrs
clc
xor
imul
cmp
lds
or
inc
out
xchg
jne
push
push
clc
sub
mov
lods
das
popa
jne
test
jnp
in
cmp
int3
cltd
je
sbb
repz
popa
or
lret
and
outsb
push
xchg
mov
adc
lock
xchg
and
icebp
xchg
cmp
ror
jb
fcompl
jae
or
insl
outsb
rcl
es
outsl
and
lahf
mov
ss
sbb
adc
fsts
mov
jp
inc
arpl
jle
into
mov
or
ret
cmpsl
icebp
cmpsl
std
push
loopne
andl
add
xchg
xchg
out
mov
sbb
fimuls
iret
add
cmp
sub
gs
popa
or
jmp
pop
jo
inc
in
sbb
mov
jl
lods
test
sbb
pop
imul
cmp
pop
nop
and
sbb
in
js
push
inc
mov
rcll
push
or
ret
xor
inc
mov
lret
or
lahf
je
jnp
cmp
std
cld
leave
cmp
or
mov
sub
aaa
jns
test
outsl
xorb
aas
pop
scas
pop
jo
fnstenv
inc
dec
shrb
es
insl
adc
cmp
push
fwait
dec
hlt
popw
push
xchg
push
imul
mov
je
leave
cltd
dec
pop
add
cmp
das
hlt
popa
jecxz
lahf
sbb
mov
out
test
add
cmpsb
push
jg
or
std
add
pop
rcl
jmp
sub
or
leave
scas
push
cmp
or
and
mov
jg
xor
mov
fnstsw
sbb
or
es
stos
jg
jae
enter
loopne
out
mov
nop
mov
imul
xor
lret
xor
fwait
cmp
orl
adc
mov
lahf
addr16
test
scas
push
inc
lods
sub
jae
loopne
mov
les
enter
jmp
pushf
lea
dec
mov
xchg
push
imul
cli
in
imul
shrb
std
jns
mov
addr16
push
lds
xchg
sub
mov
sahf
insl
push
movsb
adc
stos
jge
rcrl
lods
jg
mov
jl
insb
dec
outsb
xor
popa
rolb
xchg
into
in
cmpsb
sub
sub
repz
and
jle
push
or
cmp
xchg
xchg
fsub
and
cmpsl
repz
mov
pop
xchg
call
movsl
sub
push
jnp
dec
xor
adc
push
add
dec
inc
lahf
shrb
or
cmpsl
inc
popa
jb
popa
in
leave
jecxz
jo
movsb
and
pop
leave
dec
into
push
test
sub
and
xor
pop
call
mov
popf
and
sbb
jns
cs
mov
xchg
out
or
cmc
jmp
dec
leave
add
sbb
xchg
repnz
dec
jo
jbe
and
jl
jge
mov
cmp
xchg
and
xor
mov
push
rorl
dec
cs
movsl
les
push
in
cmpsl
xchg
lret
hlt
sbb
push
cmpsl
pop
mov
cmp
mov
loop
ficoms
or
jmp
cld
inc
pushf
pop
sub
xchg
sub
loope
dec
push
cmpsl
adc
or
lock
out
dec
xchg
gs
into
cmp
push
dec
pushf
int
insb
mov
jg
lods
enter
jmp
ret
ja
jge
mov
and
testb
jl
arpl
sub
insl
inc
mov
dec
push
leave
sbb
insl
dec
dec
inc
stos
rorl
adc
pop
in
push
ret
iret
mov
fbld
lret
bound
push
or
fcomps
inc
movsl
popf
lret
aam
dec
mov
enter
loope
mov
sbb
jne
out
fadds
cmpsb
mov
adc
jbe
div
std
xchg
xor
dec
iret
cld
mov
dec
int
sub
sub
jns
and
ss
out
insl
mov
mov
in
jbe
push
xor
fdivs
popf
push
mov
push
mov
push
enter
sub
sbb
dec
push
mov
pop
jne
daa
dec
sahf
imul
jno
mov
jnp
cmpsb
push
test
lods
push
fdivrp
rol
mov
testl
hlt
ret
and
sub
test
repnz
sbb
mov
int
addr16
sbb
bound
adc
rolb
push
pop
dec
faddl
inc
inc
xor
loope
sbb
cmp
enter
in
mov
mov
icebp
xchg
add
push
sbb
sub
test
dec
popf
lods
jp
sti
jbe
push
mov
jp
pop
sahf
bound
mov
dec
aas
or
mov
and
and
and
bound
and
adc
daa
push
loop
jmp
lcall
aas
jb
and
pop
mov
mov
fwait
or
mov
aas
pop
mov
cmpsl
push
lahf
xchg
fadds
jb
cwtl
xor
lods
jno
mov
push
stos
cmp
out
mov
jge
int3
add
dec
xor
pop
sub
or
stc
or
push
xor
push
nop
out
adc
loopne
stc
lods
xchg
mov
mov
cmp
shlb
add
and
rcll
sbb
mov
cmp
jle
mov
cmc
and
call
push
shll
cmp
and
add
cmc
inc
sub
les
scas
inc
iret
fcomip
jge
fucomp
daa
mov
outsl
push
sub
jge
mov
or
mov
add
sub
inc
test
mov
pop
icebp
xchg
cmc
fildll
int3
dec
outsb
movl
xor
and
sub
cmp
pop
jp
inc
cmpl
mov
jp
and
push
dec
cmp
pop
and
jnp
cmpsl
and
push
or
bound
mov
test
cmp
push
cli
inc
outsb
ss
rcrl
and
das
ficoms
imul
xor
mov
jbe
pop
sbb
ljmp
push
pop
or
ljmp
nop
ds
gs
mov
and
aad
cltd
imul
dec
sub
add
cmp
insl
and
dec
dec
mov
dec
dec
sub
movsl
scas
icebp
push
and
repnz
test
lret
shll
nop
fs
cwtl
xor
popa
inc
fwait
rclb
loope
stc
mov
sarb
popa
xchg
sub
scas
dec
push
mov
nop
pushf
push
inc
ljmp
les
mov
repnz
loopne
imulb
sahf
adc
sahf
clc
xor
adc
in
bound
in
push
test
or
pop
arpl
jbe
lea
pop
cmp
in
sahf
jo
cmp
cmp
icebp
scas
ficompl
or
repz
mov
pop
push
sub
js
cmpsl
or
pop
inc
sar
pushl
ss
pop
or
add
push
fs
dec
movsb
xchg
ss
xor
lock
pop
dec
int3
stos
notl
and
lret
push
clc
adc
jle
loop
push
xchg
or
inc
sub
in
andb
nop
imul
mov
and
jl
cmp
lock
inc
or
push
js
sbb
pusha
aad
fnclex
xor
popf
xor
notb
and
dec
dec
enter
test
cmp
sub
test
sub
ret
pushf
add
jne
push
xchg
insl
mov
inc
jno
adc
adc
ret
fisubrs
mov
sbb
ret
fists
mov
movsb
andb
fildl
xor
inc
push
inc
insb
inc
mov
xchg
or
sub
and
or
aaa
mov
add
xor
jl
jle
inc
decl
xlat
gs
fwait
in
mov
pop
jno
pop
dec
fidivrl
inc
jp,pn
mov
sub
ror
mov
ret
rcrb
cwtl
imul
loopne
fdivs
jno
orb
cmp
sub
inc
inc
repz
outsb
cmp
and
mov
int
mov
daa
mov
dec
push
clc
cmp
add
mov
arpl
and
dec
popa
jle
xchg
pop
fdivp
cmp
adc
aam
test
mov
xchg
jne
daa
dec
stc
out
mov
adc
and
adc
std
jg
lds
imul
mov
push
sbb
in
mov
or
divl
xchg
dec
cld
fwait
xor
jnp
fcomip
out
mov
loop
or
jle,pt
sahf
mov
jmp
addr16
mov
add
xor
inc
push
mov
pop
add
aad
aas
pusha
xchg
insl
sub
mov
das
mov
sub
outsb
mov
jno
in
sbb
sti
xchg
and
pop
inc
inc
dec
aaa
enter
in
sub
xchg
cmp
jnp
lods
in
jmp
arpl
mov
xchg
sbb
fisttpll
inc
mov
ss
int3
adc
fldt
mov
xchg
iret
out
sub
loope
jl
aam
cwtl
or
or
lret
gs
pop
cmp
sbb
cwtl
xlat
je
adc
add
sbb
mov
jmp
scas
dec
xlat
adc
out
pop
xor
push
das
push
mov
sahf
les
push
lods
and
mov
outsb
cmpsb
ja
ds
and
dec
ficoml
mov
stc
or
push
fadd
outsb
jecxz
sbb
dec
ret
aaa
nop
jp
mov
xchg
lahf
loop
in
cmp
and
iret
pop
cld
inc
inc
and
cmp
push
aas
push
mov
sbbb
pop
in
outsl
push
and
jno
sub
push
or
inc
add
pusha
icebp
shl
inc
imul
int
aaa
xchg
arpl
imul
pop
pop
or
add
iret
jb,pn
sti
popa
push
push
sbb
xlat
jmp
loop
cmc
test
mov
out
add
dec
fmuls
jp
loope
mov
outsl
mov
dec
xchg
sqrtps
sarb
out
imul
push
cmc
jbe
outsb
pop
loopne
jecxz
fstpl
stc
jb
jne
push
mov
push
jl
add
cs
push
fsts
sti
inc
xchg
aas
call
lret
leave
aam
iret
pop
adc
jns
push
jg
dec
inc
outsb
push
loopne
les
mov
hlt
sbb
mov
xor
push
mov
mov
fimuls
push
sbb
dec
enter
lret
fcoml
mov
lcall
xchg
shll
aaa
mov
xlat
iret
xchg
jecxz
cltd
inc
data16
mov
dec
test
sub
dec
mov
in
sbb
add
leave
add
outsb
mov
fldt
xchg
loop
jb
xchg
stos
repz
fmull
in
pop
inc
push
pop
cmp
push
repnz
aad
out
xor
mov
jge
popa
hlt
fcoms
mov
shl
out
addl
int3
inc
dec
mov
cli
dec
push
sti
pop
lcall
sbb
jns
xchg
lret
ret
push
xchg
in
mov
xchg
cmp
sub
xor
sbb
add
push
mov
movsl
add
ds
jns
lret
xchg
cmp
clc
sbb
lea
rol
je
xor
inc
sbb
and
je
sbb
jp
lcall
pop
aam
add
cmp
mov
xchg
sti
ret
xlat
or
mov
mov
pop
aas
pop
or
imul
xor
lcall
lea
loopne
and
aaa
mov
inc
shl
jno
push
stos
dec
adc
mov
dec
push
pop
sarl
and
lds
sbb
xlat
sub
cmp
jae
push
cwtl
jl
push
fcomi
loop
adc
mov
inc
or
mov
cmp
les
je
cmp
mov
and
data16
scas
dec
and
and
cmp
inc
mov
push
outsb
mov
jecxz
cwtl
addb
pop
mov
mov
addr16
push
cmc
mov
imul
pop
out
mov
mov
push
sub
push
adcl
sbb
jnp
and
scas
ret
lock
dec
popa
out
inc
mov
fs
cmpsl
xor
dec
rorb
pop
outsb
mov
adc
add
setno
jb
mov
dec
add
ficomps
lahf
or
pop
xchg
pop
lcall
jmp
sub
ret
sub
mov
inc
lds
jl
and
xor
lahf
xchg
pop
jg
popa
mov
movsl
mov
cmp
push
ljmp
gs
dec
mul
fs
pop
sub
inc
mov
jne
jle
lock
xchg
push
mov
sub
pop
and
cmc
mov
jns
and
xchg
cmpsl
sbb
and
ljmp
das
pop
mov
cmp
loop
out
xchg
into
fwait
daa
or
dec
dec
leave
xor
nop
adc
mov
pop
cmp
sub
xor
and
push
pusha
sahf
into
mov
mov
out
mov
mov
mov
in
lods
cmp
scas
cmp
fwait
jo
pop
jmp
pop
cwtl
int
fstpt
inc
jae
aas
int3
aaa
data16
xorl
add
cmp
push
sub
repz
mov
pop
pushf
dec
in
push
cmp
mov
insl
rcll
dec
cld
xchg
gs
outsl
or
push
mov
sub
scas
aas
jns
sub
in
push
or
lds
adc
shlb
stos
hlt
jge,pt
sarl
jae
mov
fs
sbb
dec
mov
cmp
fs
mov
movsb
xchg
popa
inc
cmpsb
lock
sub
enter
xor
add
push
xor
loope
mov
jp
mov
gs
test
out
notl
outsb
cmovg
push
inc
arpl
or
pop
mov
pop
mov
out
hlt
scas
dec
enter
rorl
gs
lret
ljmp
insl
jmp
mov
mov
sbb
pushf
and
cmpsl
dec
xlat
into
bound
adc
xchg
inc
cmpsb
push
xchg
ja
std
jae
mov
jmp
mov
push
fidivs
addb
dec
add
in
popa
das
xchg
call
mov
sti
cwtl
movsb
lods
mov
test
shll
or
imul
and
fadd
bound
jae
cld
lahf
sub
addr16
fsubr
jno
ja
jno
xor
inc
inc
loopne
scas
es
adc
xchg
adc
popf
sbb
xchg
xor
adc
pop
mov
repz
lcall
sti
adc
icebp
divl
jmp
xor
les
xor
pop
std
or
scas
lahf
or
cmp
sbb
imul
sub
add
xor
pop
test
ret
cltd
sbb
test
mov
mov
fwait
push
inc
fs
rorb
outsb
adc
cmp
stos
push
js
pusha
sbb
and
cltd
stos
mov
push
inc
mov
pop
mov
cmp
add
lret
mov
icebp
jo
cmc
mov
mov
lods
ror
mov
fstps
inc
aad
test
imul
inc
fwait
scas
cmpsl
inc
mov
jl
lret
or
xchg
sbb
shlb
das
dec
stos
pop
push
pop
cli
pop
lock
mov
mov
mov
adc
sahf
jp
cmpsb
dec
addr16
push
sbb
pop
rolb
rcrb
mov
cmp
sbb
lret
push
js
arpl
int
leave
sub
pop
dec
push
ret
mov
lods
xchg
icebp
imul
movl
jl
jnp
stc
ja
cli
mov
sub
lods
lods
rolb
enter
adc
sbbb
ljmp
xor
insl
insl
nop
lahf
ret
xchg
in
push
adc
xchg
inc
leave
cmpsb
dec
arpl
jmp
ja
in
cmpsb
push
addr16
lahf
mov
mov
bound
xor
cmp
lahf
jbe
dec
pushf
js
push
lahf
movsb
mulb
add
je
push
outsl
jns
movsb
or
push
push
dec
jp
bound
pop
addb
sub
mov
adc
ljmp
dec
dec
ds
push
sbb
push
xchg
popa
js
mov
jnp
sub
das
aad
xor
scas
inc
std
leave
subb
mov
pushf
add
mov
cmp
inc
push
push
dec
cmpsl
adc
sbb
and
sub
ret
test
dec
ds
fwait
inc
inc
cld
mov
pusha
cmp
loope
sarb
insb
inc
repnz
movsl
gs
lahf
mov
push
jno
pop
mov
scas
cmp
rolb
ss
xor
std
mov
mov
mov
xchg
mov
add
int
leave
sti
jg
rorl
popf
push
or
mov
xor
add
mov
jmp
dec
or
lock
lret
inc
int
movsl
clc
ljmp
pop
mov
loop
out
inc
mov
aad
leave
sbb
loop
add
lahf
arpl
fs
adc
sbb
imul
fists
xor
int
xorl
pop
mov
mov
inc
lcall
ror
mov
and
cmpsl
mov
pop
leave
jp
sti
loopne
jns
jp
pop
mov
pop
dec
popa
dec
pushf
mov
movsb
adc
xchg
xor
cli
insb
test
or
icebp
movsl
ja
or
dec
insl
mov
mov
in
popa
mov
and
pop
dec
mov
inc
push
imul
pop
pop
bound
sub
pop
cli
in
jle
mov
dec
aam
xchg
loop
iret
outsl
adc
gs
dec
and
mov
stos
push
cmp
jno
fstpt
out
into
jne
jmp
or
stos
das
fs
data16
mov
lods
in
add
pop
dec
lret
pop
adc
inc
xchg
mov
stos
cmpsl
test
ret
sbb
inc
inc
cmp
jg
xor
shr
arpl
pop
mov
test
mov
pop
lods
mov
mov
mov
dec
ror
addb
adc
mov
loope
inc
sbb
xor
pop
cmp
xor
sub
in
scas
sub
inc
push
adc
notl
inc
arpl
les
mov
movsb
sbb
push
xchg
or
mov
hlt
xor
ljmp
and
mov
clc
pusha
das
fs
aad
test
fldcw
push
stos
and
inc
dec
cwtl
mov
xchg
cmp
mov
out
cmp
mov
mov
adc
adc
dec
xor
outsl
scas
data16
lock
sti
fistpl
ljmp
mov
jb
push
cwtl
push
mov
sub
stos
outsl
popa
shlb
cli
or
and
jl
sbb
pop
or
mov
ficomps
out
xchg
push
cli
ficoms
sbb
mov
iret
roll
jecxz
rorl
loopne
stos
das
pop
fwait
insl
sahf
inc
xchg
into
sub
jle
adc
push
dec
fisttpll
icebp
xor
pushf
and
cwtl
lahf
cmp
popf
negl
decl
mov
sub
orl
or
mov
add
add
mov
add
xor
loop
and
push
jmp
mov
sbb
mov
lods
mov
movsb
mov
xor
aad
xchg
cld
push
sub
cmp
addl
push
jp
add
outsb
mov
out
sub
inc
cld
sub
inc
test
rolb
pop
cmp
sub
cli
inc
aaa
scas
test
cmpsl
or
cltd
mov
inc
jnp
insl
lret
push
or
mov
leave
mov
pop
pop
imul
rcrl
aam
xchg
cmp
mov
mov
xchg
adc
test
loopne
int
fwait
sarb
adc
mov
movsl
jae
aas
jecxz
and
std
cwtl
dec
push
pop
aad
in
pop
push
jbe
aam
sbb
inc
out
mov
jns
add
adc
mov
add
je
inc
lcall
sti
dec
outsb
imul
mov
lods
inc
into
mov
xchg
xchg
mov
inc
inc
cld
jnp
imul
repz
js
and
dec
inc
subl
clc
aam
out
dec
ja
dec
add
stos
ljmp
inc
cmp
push
fs
lret
loop
adc
mov
add
mov
sti
test
mov
jecxz
xchg
pop
sbb
mov
icebp
push
xor
push
icebp
mov
sub
sahf
jbe
push
mov
in
call
xchg
push
movsb
movsb
aam
call
add
mov
cmp
icebp
gs
gs
and
jmp
mov
sbb
pop
pop
fsubrl
imul
icebp
lods
and
sub
sahf
pop
mov
cmp
fcoms
xchg
pminsw
stos
jns
and
mov
movsl
lods
fwait
cmc
in
scas
cs
rcr
movsb
mov
push
and
addl
mov
lahf
les
loopne
cmp
xchg
dec
jno
test
clc
add
jl
scas
pop
popa
pop
mov
push
or
mov
arpl
or
mov
pop
test
cmpb
push
push
pushf
clc
in
pop
std
ljmp
ja
hlt
mov
pop
scas
push
push
outsb
add
fldcw
scas
dec
lods
add
out
pop
dec
mov
gs
mov
mov
movsb
adc
aas
leave
push
mov
jle
sbb
scas
stos
inc
movb
cwtl
mov
cmp
adc
xor
mov
daa
xchg
ret
std
movsb
das
ss
mov
scas
leave
jge
jle
ret
popa
mov
push
pop
imul
fistps
ret
pop
test
repnz
jne
out
lret
jmp
sub
mov
and
loop
jl
lods
mov
jns
dec
rcl
jle
add
inc
jnp
xchg
pop
mov
sub
add
lock
lahf
mov
and
ret
stos
jmp
into
out
pop
xchg
aad
mov
pop
inc
xchg
pop
inc
jo
mov
jge
jecxz
ror
hlt
adc
jnp
cmc
mov
aam
scas
stos
pop
and
and
clc
pop
jno
sub
xlat
fmul
in
shll
add
rep
mov
mov
stc
loope
cmp
pop
cmp
imulb
dec
and
xchg
inc
out
pop
pop
jnp
pop
popf
mov
xchg
sbb
pop
popf
lcall
mov
notl
into
and
mov
cmp
scas
or
into
int
xchg
jmp
lcall
icebp
lea
cmp
cmp
mov
repnz
add
pop
les
sbb
inc
leave
sbb
jmp
xchg
xchg
shll
xchg
push
cs
mov
iret
daa
dec
push
mov
in
ficompl
cmp
add
es
jns
xchg
inc
and
inc
adc
push
mov
ret
or
xchg
mov
push
cmp
adc
xor
loop
lahf
pop
xlat
daa
xchg
pop
mov
sbb
xor
shrb
jecxz
and
and
movsl
mov
les
pop
repnz
xlat
inc
inc
test
fcmovnb
xor
xchg
jns
mov
mov
pop
mov
imul
loop
int3
sub
xor
std
icebp
jle
data16
lock
cmp
xor
xchg
jne
dec
xchg
cmpsb
inc
dec
mov
pop
imul
jnp
jnp
loop
inc
lds
sbb
hlt
cltd
out
adc
and
xor
out
aam
mov
dec
js
and
addr16
ds
inc
jo
cmp
pop
push
push
dec
lods
mov
lea
sub
int3
fwait
xor
fadd
push
je
lods
mov
mov
cmpsb
ss
push
popaw
and
pop
movsl
add
dec
pusha
in
movsb
out
or
mov
xorl
jno
push
test
jge
loopne
lahf
vmread
add
add
push
fldenv
or
jmp
sahf
push
jle
aas
cmp
stos
bound
icebp
sub
movsb
xor
pop
sti
mov
xor
mov
dec
jo
mov
shrl
mov
xchg
imul
nop
cmpsl
xchg
rcll
bswap
mov
jne
aam
rclb
mov
mov
out
add
jg
push
adc
sbb
sti
pop
pop
jmp
cmpsb
dec
adc
sub
addl
xchg
push
inc
jns
push
mov
and
inc
mov
sub
call
mov
stos
cltd
jg
jne
cs
xor
enter
cmp
push
pop
js
scas
testl
imul
jge
out
sbb
mov
lea
sub
scas
daa
jl
and
jp
gs
ds
pop
mov
mov
lcall
push
xor
cld
dec
jae
cmp
lea
inc
cmpb
rcl
adc
popw
mov
xor
sbb
dec
in
jb
pop
cmp
leave
pop
sbbb
stos
jns
leave
loopne
xchg
jge
push
pop
xor
pusha
subb
lahf
hlt
decl
lret
jmp
cmpsb
cmp
cmp
hlt
inc
sub
mov
test
stos
cmp
aaa
fwait
outsb
inc
add
lret
sbb
aam
fmull
insb
inc
mov
sub
fistpl
aas
cmpsl
and
loopne
inc
idivl
jns
orb
movsb
in
hlt
pop
jae
xorl
xor
xor
push
adc
in
lods
out
pop
inc
mov
dec
fwait
jp
stc
jb
mov
xor
pop
je
sub
pop
and
clc
nop
ljmp
stc
sub
out
sub
mov
push
and
add
rcrb
in
sahf
and
in
lahf
enter
inc
push
cli
aas
stc
pop
mov
or
arpl
pop
mov
stos
rolb
test
jmp
pop
sbb
outsl
fwait
pop
pop
out
arpl
fstpt
mov
insb
sub
fucomp
mov
lahf
mov
jge
mov
pushf
mov
lods
mov
mov
sbb
xchg
lret
cmpsb
mov
movsb
pop
sbb
sub
inc
jns
push
test
test
adc
icebp
dec
push
sbb
and
mov
pushf
xchg
subl
sub
ds
daa
jne
sub
mov
cvtps2pi
xchg
mov
xlat
inc
notb
fldz
int3
cmp
mov
mov
sub
test
sti
js
mov
mov
cwtl
mov
test
add
les
aas
jp
fnstsw
cwtl
insb
stos
xor
movsb
fsubrl
or
xchg
xchg
inc
xchg
outsl
sub
int3
cltd
lods
jp
xor
add
jbe
rcrl
fidivrl
pop
mov
cld
sub
movsl
push
pop
lret
pop
add
fcoml
jp
imul
lds
je
sbbb
addr16
inc
pop
mov
aas
iret
aad
mov
lods
lret
cld
xchg
lret
xchg
add
fnstenv
out
and
or
add
lcall
clc
dec
dec
in
or
push
mov
out
add
cmpsl
call
cmp
scas
cmp
push
iret
cmpsl
sub
xor
ja
mov
bound
dec
fisttps
sar
mov
scas
andb
xor
xchg
and
jle
dec
decb
xor
loope
jge
enter
cs
add
push
jl
pop
imul
xlat
ficoml
ja
push
lods
stos
aad
stos
addr16
iret
jg
xor
xchg
sbb
jl
lock
or
dec
cmp
jns
jb
xchg
movsl
jecxz
and
add
rolb
rcll
call
mov
mov
shrb
inc
push
jge
or
mov
fimuls
out
add
iret
pop
movsl
js
sbb
xchg
mov
and
movsl
sti
dec
inc
sarb
daa
iret
aas
jbe
push
std
cmpl
imul
outsb
xor
pop
adc
push
daa
lock
shlb
cmpsl
in
or
add
jne
inc
pop
xor
out
jno
sbb
mov
dec
iret
mov
out
insl
pop
jecxz
jbe
stos
lds
test
adc
rcrb
in
xor
std
push
xchg
push
mov
mov
jg
push
add
addr16
cmp
shll
pop
jmp
iret
jge
and
repz
xchg
insl
dec
adc
sbb
and
dec
in
mov
mull
xor
mov
cld
mov
push
cmp
add
mov
mov
jge
pop
pop
sbb
mov
add
xchg
lret
push
out
ficoml
mov
pop
leave
jnp
pop
mov
sbb
xlat
loop
ret
imul
jmp
push
xchg
pop
ss
aas
dec
or
push
jmp
cmp
ja
movsl
insl
mov
mov
insl
in
shlb
add
mov
test
or
popf
nop
xchg
in
mov
inc
sbb
push
cmp
mov
xor
mov
loope
hlt
faddl
push
add
mov
mov
push
out
in
addr16
xchg
cmp
leave
or
push
xor
cltd
mov
test
sbb
out
xor
adc
sbb
jl
inc
pop
out
mov
mov
xchg
mov
popa
call
push
or
imul
and
faddp
je
hlt
je
outsl
in
lahf
fiadds
sti
test
sti
jp
cmp
pop
sahf
in
lods
stos
popf
mov
xchg
mov
cmp
ret
subl
sbb
xchg
and
add
xchg
mov
push
js
cmp
cmp
mov
jns
iret
jle
lcall
test
xchg
dec
inc
mov
push
dec
adc
jns
pop
jnp
sbb
mov
cltd
std
and
sub
mov
hlt
cwtl
inc
dec
pusha
das
or
sahf
push
and
arpl
inc
inc
test
addr16
lahf
fsubs
mov
mov
lahf
and
inc
push
loope
mov
push
sbb
xchg
lcall
jo
add
and
sbb
lret
test
ljmp
lea
in
jae
data16
or
pusha
aas
xchg
stos
push
mov
jecxz
jge
mov
xchg
fistl
adc
xchg
movsl
fs
inc
jg
shlb
outsl
test
mov
pusha
movsb
sahf
sarl
add
or
insl
ficoml
inc
inc
hlt
mov
sub
add
or
data16
jle
pop
mov
jo
idivl
add
in
mov
inc
push
xor
push
repnz
xchg
fnstenv
pop
push
bound
mov
negb
push
lret
shll
pusha
push
lret
xor
test
or
adc
adc
cwtl
js
mov
shr
cltd
xor
rcll
add
adcl
clc
sbb
jmp
mov
cmp
repz
fwait
inc
inc
bound
fisubrs
mov
xchg
and
insb
jge
fs
fdivrl
inc
jl
arpl
push
mov
mov
mov
mov
scas
mov
jbe
mov
sahf
adc
mov
cmc
pushf
mov
cld
imul
jmp
jb
aam
paddusw
mov
add
inc
aam
in
jmp
aaa
push
xchg
push
js
sbb
jno
jo
cs
in
nop
dec
shr
daa
addr16
sahf
pop
adc
aaa
push
sarl
stos
arpl
rclb
rcll
jo
cmp
push
mov
shlb
push
fsubrl
fs
imul
and
std
test
mov
mov
pop
loop
outsb
mov
inc
insl
mov
rolb
in
cmp
push
rolb
es
ss
push
mov
popf
cli
dec
cmp
sti
ljmp
mov
cmpsl
jmp
xchg
mov
test
es
and
push
test
mov
jns
add
ss
and
pop
es
fstpl
mov
sahf
inc
repnz
scas
int3
testl
mov
pop
test
inc
cli
sbb
jle
pop
repnz
bound
mov
and
mov
mov
mov
cmp
fwait
ljmp
imul
jnp
out
std
sub
in
jno
inc
icebp
sarb
inc
loop,pn
mov
mov
pushf
ds
sbb
fwait
jle
int
gs
sbb
dec
fnstsw
adc
sarb
mov
out
lret
push
ret
or
inc
or
sub
lret
lock
sbb
ret
cmp
arpl
scas
adc
popa
push
push
js
ds
dec
add
leave
mov
inc
scas
pop
jnp
fwait
scas
shll
jae
iret
stc
je,pn
inc
and
fisttpll
sbb
lret
js
ljmp
adc
pop
mov
jmp
pop
das
push
mov
xchg
jp
dec
dec
cmp
lea
cmpsl
jae
cmp
sbb
and
inc
jb
sarl
mov
sbb
std
inc
movsb
cmpsb
xor
mov
sub
loopne
cmpsl
push
jmp
or
dec
inc
scas
pusha
add
arpl
lea
std
sub
push
test
push
iret
cmp
fistpll
mov
xchg
mov
xor
divl
ds
pop
mov
out
pop
and
jno
mov
adc
jno
mov
outsl
inc
inc
lcall
mov
addr16
aam
sbb
and
xchg
insb
fists
out
clc
cmpsl
add
xlat
mov
loope
sub
push
ljmp
inc
push
or
cmp
lods
pop
xchg
jo
sbb
mov
fldl
pop
ret
pop
mov
adcb
or
cmp
lahf
mov
jns
push
jge
test
sbb
int
dec
lds
loope
movsl
or
dec
lea
or
ret
imull
jle
pop
xchg
cwtl
sub
inc
out
addb
mov
jge
scas
jp
and
mov
cmp
cltd
inc
push
and
jmp
mov
outsl
mov
add
push
inc
mov
mov
mov
scas
mov
add
push
dec
sub
push
xor
jno
xor
mov
sbb
cltd
es
mov
daa
xchg
out
push
mov
inc
pop
and
jb
shlb
mov
cmpsl
jle
cmp
stos
js
ret
mov
psubd
and
test
push
scas
pop
mov
cmp
aaa
std
test
cltd
inc
insl
dec
roll
push
mul
ljmp
lock
add
xchg
in
int
pop
mov
pop
pop
sub
and
fcomps
fs
pop
dec
ret
and
push
inc
add
cltd
dec
pop
jg
lods
inc
and
xchg
mov
fs
push
adc
lea
xchg
std
push
int
rcll
jecxz
xchg
sbb
ret
loop
sbb
mov
dec
push
add
xor
shlb
repnz
loope
dec
jbe
roll
or
xchg
js
hlt
xchg
push
and
fimuls
push
in
push
je
push
cmp
in
testl
push
cld
ja
cwtl
loope
enter
pop
jecxz
popf
call
aad
xchg
test
dec
iret
pop
sub
and
insb
divb
lret
or
sbb
fsubrp
jp
lahf
nop
or
lcall
stc
dec
mov
push
bound
and
mov
repnz
testb
sbb
mov
fldt
pushf
mov
insb
movsl
xchg
mov
icebp
cmpb
lock
pop
jbe
xorl
add
jb
mov
add
pusha
jg
xorl
or
push
in
int3
mov
in
lods
add
inc
and
cmp
push
ret
sub
inc
xor
mov
dec
das
jns
lock
sub
mov
lret
and
pop
shlw
or
test
mov
into
push
mov
mov
mov
sbb
xor
pop
cmc
cmp
fsubrs
inc
notb
inc
xchg
xchg
lods
in
cmp
arpl
arpl
mov
push
rcll
hlt
fisttpll
sahf
shll
push
push
scas
insl
lds
orl
xor
sub
add
enter
cltd
xchg
in
xor
sub
loopne
mov
and
sbbl
neg
pop
inc
in
mov
stos
hlt
cwtl
add
popa
lahf
stos
or
jmp
mov
call
data16
inc
mov
pop
xorl
pop
inc
out
dec
imul
ror
push
cmpsl
stc
or
gs
inc
inc
sbb
jno
pop
mov
or
in
push
inc
lret
clc
lock
fimull
arpl
xor
dec
and
pop
pop
or
mov
mov
mov
dec
inc
sub
lock
xor
test
mov
outsl
mov
mov
pop
mov
roll
mov
and
mov
icebp
xchg
sahf
dec
push
cs
mov
enter
popf
mov
or
jbe
idivl
gs
mov
or
mov
hlt
pop
jp
fisubs
aad
aaa
and
dec
icebp
lds
mov
shll
and
and
and
sbb
push
adc
jp
popf
cmc
nop
xor
push
inc
fs
adc
push
ja
ret
mov
idivl
repnz
sub
ds
lret
pop
subb
into
sbb
push
dec
pusha
or
ljmp
mov
aam
and
pusha
imul
sub
and
repz
test
inc
cmc
pop
push
out
int3
sbb
xchg
pop
mov
test
xor
aaa
push
jb
popf
gs
mov
call
rcll
ret
rorl
mov
push
cmp
cmp
fadd
clc
xor
pop
int
mov
adc
pushf
and
sbb
mov
shll
scas
clc
mov
insl
out
and
jmp
icebp
push
mov
aaa
pop
insb
add
mov
xor
outsb
outsb
mov
adc
outsb
lahf
hlt
sub
test
and
ss
movsl
movsl
dec
inc
jmp
subl
push
lock
xchg
mov
and
sbb
and
ja
mov
shlb
mov
ja
push
orb
inc
cld
sbb
aam
xchg
jle
sbb
pextrw
adc
xchg
or
stos
fistpll
pop
lods
popa
jno
xor
cltd
cmpsb
inc
pop
in
sub
xor
int3
jmp
mov
in
push
mov
lds
out
cli
inc
orl
inc
fs
inc
pop
into
adc
cmc
les
stos
sbb
pop
test
adc
lds
in
into
aad
cs
inc
dec
adc
stos
dec
mov
test
mov
fs
out
inc
ljmp
mov
insb
mov
push
cmp
cmpsl
daa
xchg
push
and
push
adc
push
mov
add
leave
push
push
push
call
jne
mov
sti
ret
pop
outsb
push
or
inc
pop
ds
dec
nop
add
das
les
sbb
inc
loopne
cmp
inc
testl
fsubrs
int
mov
push
cmc
inc
mov
popf
imulb
stos
stos
jno
jmp
fstp
in
in
ds
gs
cmp
pop
and
sti
test
out
ds
mov
nop
fisubrl
rorl
cmp
cs
outsb
leave
loopne
add
mov
insl
xlat
or
shr
inc
imul
out
enter
fwait
es
pop
dec
cmp
sbb
adc
jne
xlat
or
test
mov
repnz
push
and
into
sti
jne
or
mov
dec
jbe
incb
push
ss
mov
cmpsb
sti
jg
xchg
sbb
adc
jecxz
in
cld
and
inc
ret
inc
mov
arpl
icebp
lahf
scas
iret
lods
xchg
sub
in
mov
and
sub
pop
or
xor
cmc
add
dec
out
addr16
mov
popf
xchg
push
add
iret
daa
stos
push
push
cmp
adc
pop
es
imul
sub
inc
vpshufd
daa
jge
xchg
jbe
dec
repz
inc
movsl
inc
push
sahf
fucomp
popf
daa
loopne
adc
shr
jl
and
repnz
scas
xchg
add
dec
out
xchg
push
inc
push
mov
push
sbb
iret
or
loopne
aaa
insl
push
cmc
inc
jg
out
push
sbb
sbb
and
shll
cmp
fmull
push
nopl
xchg
lea
sub
stos
mov
cs
mov
inc
aam
dec
jl
aaa
in
push
jae
clc
push
adc
ret
cmp
or
jle
adc
and
adc
test
mov
push
fsubs
test
lock
outsl
sbb
mov
dec
repz
pop
repnz
jns
adc
in
movsl
insl
xor
out
arpl
inc
sti
mov
mov
cld
inc
loopne
lods
iret
popa
hlt
loopne
out
inc
pop
or
mov
fcomps
xchg
jmp
jmp
scas
pop
jae
cmp
mov
dec
scas
jl
mov
sbb
inc
popf
xor
inc
jo
sbb
pop
inc
push
cmp
xchg
mov
rcl
jecxz
nop
in
jmp
cmpxchg
jns
push
cwtl
icebp
lods
pop
xor
cmp
xchg
mov
mov
mov
cld
pop
cmc
ljmp
cmpsl
xchg
fs
sub
and
adc
xchg
mov
adc
repz
fdivs
jl
lcall
and
je
test
ret
pop
and
mov
add
data16
inc
enter
int
shl
inc
jg
aam
stos
mov
mov
outsb
mov
mov
sti
dec
sub
imul
out
pop
out
sbb
adc
repz
cmp
fs
mov
mov
sti
test
mov
or
cmpl
push
mov
push
sub
xchg
nop
xchg
popf
cmp
fadds
mov
test
lods
cmp
push
lcall
mov
dec
testl
shll
dec
js
sbb
fs
dec
insb
xchg
dec
scas
dec
mov
mov
mov
cmpb
rcrb
push
mov
out
cmp
sbb
cmp
mov
push
xchg
cmp
ror
fdivr
jl
cltd
sub
cmp
and
cmp
lldt
pop
adc
cmp
pop
int3
mov
call
jge
sbb
xchg
xorl
mov
sub
fwait
stos
jecxz
rolb
std
dec
inc
or
jne
out
or
inc
dec
inc
cltd
lea
negl
jnp
fdivp
in
mov
add
mov
jno
into
adc
lret
dec
add
cltd
xor
xor
js
xchg
xor
push
lret
mov
sti
and
fiadds
pop
ss
add
push
jl
mov
negl
out
out
enter
mov
rol
cmp
daa
rol
les
mov
push
out
test
mov
sbb
mov
xchg
sbb
xchg
fwait
call
sbb
fsubrp
xchg
cmp
shrl
repz
test
mov
es
into
xor
stos
std
imul
push
clc
mov
lcall
ds
cmc
inc
sbb
mov
addr16
in
add
aas
pop
dec
jl
xlat
aam
in
and
not
arpl
mov
xchg
arpl
mov
push
leave
and
roll
xor
xor
mov
div
ljmp
mov
jp
pop
push
sub
wbinvd
stos
es
push
cmpl
xchg
xor
dec
aaa
lods
push
jne
sbb
add
mov
das
adc
jbe
sub
clc
cmpsl
push
pusha
sbb
leave
add
dec
rorb
jp
cmp
cmpb
jae
mov
subb
dec
xchg
jo
dec
pop
push
sub
sub
jno
stc
cmpsl
mov
adc
je
pop
movsl
sbb
movsb
jbe
icebp
inc
inc
jne
xor
sub
cld
cmc
ljmp
xchg
fldenv
arpl
add
xor
insl
cmp
add
cmp
je
fisubs
fdivp
enter
pop
into
lods
in
xor
fcoml
xor
pop
out
push
mov
cmc
popf
and
mov
mov
or
ss
push
loop
in
pop
iret
mov
xchg
fwait
aaa
negb
mov
pop
mov
cmp
hlt
pop
repnz
ljmp
jbe
mov
ss
and
mov
mov
aaa
ljmp
lahf
inc
shlb
lret
add
pop
idivb
jo
jo
lret
mov
hlt
mov
test
into
push
nop
pushf
jnp
jo
sub
push
das
ret
rol
inc
int
icebp
fistps
loopne
mov
popf
icebp
stos
imul
xchg
std
pusha
aam
cli
hlt
orb
inc
popf
dec
mov
jae
out
pop
aam
movsb
inc
adc
pop
in
pop
mov
movsb
mov
insl
lods
mov
rclb
fildll
imul
xor
inc
mov
fildl
sti
xchg
jmp
inc
mov
xchg
mov
pusha
cmp
inc
push
jl
mov
pop
ficoms
scas
pop
enter
inc
aaa
mov
push
inc
cmpsb
xchg
cmpsb
fcoms
cmc
mov
mov
cmp
cmp
jge
mov
jbe
out
cmp
pop
aaa
push
mov
push
and
sbbl
jb
stc
movsb
je
and
leave
push
lret
cmp
pop
and
mov
sub
sahf
and
pop
jecxz
cmp
xchg
jge
mov
fwait
cmp
loope
fwait
out
lds
mov
stc
or
or
adcl
lock
inc
ss
xchg
ds
bound
cmp
or
xchg
add
ret
dec
sbb
fwait
and
jo
loop
mov
cmp
xchg
movsl
out
and
jne
pop
cmpsl
add
and
testl
rcll
fs
sbb
and
xor
nop
aad
das
adc
push
loop
cld
cmpl
cmp
jecxz
aad
cmp
shlb
jecxz
cmpsb
mov
or
fsubrl
xchg
add
fxch
dec
mov
and
xchg
outsl
outsl
jne
push
test
sbb
mov
mov
inc
jae
add
push
mov
cmp
cli
push
or
or
add
push
gs
adc
jmp
xchg
int3
scas
lds
stc
push
loopne
ja
push
mov
in
sub
fwait
shlb
lods
and
or
nop
mov
pop
outsb
lds
cmp
imul
push
shll
mov
inc
idivb
inc
jnp
mov
or
xchg
jbe
out
sbb
outsb
mov
cmp
sbb
js
iret
test
inc
repnz
mov
daa
add
sub
lahf
xchg
gs
enter
jecxz
in
mov
test
jns
arpl
inc
xchg
mov
xchg
es
arpl
push
inc
lock
sbb
push
out
jnp
xor
cwtl
pop
dec
je
lea
xor
insl
out
xchg
inc
push
pusha
mov
aaa
or
add
sub
aaa
stos
and
xchg
js
mov
cmp
adc
add
cmpb
pop
sbb
pop
fdivl
jmp
call
mov
jo
pop
cmpsb
lea
push
xchg
test
and
cmpsl
cmp
repnz
ror
dec
or
dec
mov
or
lods
and
test
add
add
sub
mov
jne
aaa
fcmovb
lcall
pop
push
sbb
out
xor
cmovo
adcl
sahf
repnz
inc
jg
sbb
push
mov
push
gs
outsl
out
inc
packsswb
gs
push
pop
lret
clc
fdivrl
les
or
enter
mov
push
sbb
dec
sti
repz
jbe
jae
mov
add
add
leave
jae
dec
add
add
add
add
fadds
add
add
add
clc
add
orb
add
cwtl
add
addb
add
leave
jae
dec
add
add
add
add
add
add
add
addb
andb
add
add
add
add
addb
add
leave
jae
dec
add
add
add
add
add
add
jo
add
add
add
jbe
add
add
add
add
add
jae
dec
add
add
add
add
add
add
cwtl
add
add
push
add
add
leave
jae
dec
add
add
add
add
add
add
rolb
add
add
mov
add
leave
jae
dec
add
add
add
add
add
add
call
push
pop
add
lds
add
add
add
add
add
jae
dec
add
add
add
add
xor
add
add
xorb
add
dec
add
xorb
add
jo
add
leave
jae
dec
inc
outsl
insl
add
add
add
add
cmp
add
call
add
add
add
add
add
add
jae
dec
inc
outsl
insl
add
add
add
add
pusha
add
add
hlt
pop
add
add
add
jae
dec
add
add
add
add
add
add
mov
add
jo
pop
add
add
add
add
add
add
add
jae
dec
add
add
add
add
add
add
mov
add
leave
jae
dec
inc
outsl
insl
add
add
add
add
enter
js
pop
add
add
add
add
add
add
push
add
push
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
ja
pop
js
mov
add
add
lock
jg
mov
add
add
xorb
clc
sti
mov
add
add
lock
js
mov
add
add
cmpb
xchg
mov
add
add
lock
js
or
add
jg
cmpb
xchg
add
call
add
lock
out
add
js
jo
add
add
cmpb
mov
pop
xchg
add
lock
scas
jmp
js
jo
add
add
lock
mov
jmp
testl
xchg
js
mov
lock
clc
lock
mov
jg
lock
addb
ja
jo
jg
lock
jg
pushl
ja
jo
mov
ja
ja
ja
ja
jo
ja
jo
mov
addb
push
or
mov
ja
ja
jo
pop
incl
ja
or
hlt
inc
inc
inc
inc
inc
dec
xchg
add
add
jo
hlt
call
dec
xchg
add
add
incl
hlt
decb
xchg
add
add
ja
jo
out
call
xchg
add
add
add
pop
hlt
decb
add
add
add
add
hlt
out
out
call
add
add
add
add
hlt
mov
decb
add
add
add
pop
hlt
mov
out
call
add
add
add
pop
hlt
mov
xchg
add
add
add
pop
hlt
inc
inc
inc
inc
inc
dec
xchg
add
add
add
pop
incl
add
add
ja
ja
ja
ja
add
incb
inc
clc
add
shlb
shlb
jg
add
jg
add
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
cld
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
addb
rcr
add
add
add
or
add
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
jl
add
push
push
add
add
add
movb
out
add
add
add
add
cltd
add
add
add
add
xor
add
xor
add
add
cltd
xor
add
xor
add
xor
add
data16
xor
add
add
cltd
data16
int3
data16
jmp
add
cltd
add
xor
add
cltd
cltd
add
int3
cltd
add
lcall
add
xor
add
data16
add
cltd
int3
add
int3
int3
add
dec
add
incw
add
incl
add
add
add
add
add
xor
cltd
add
add
add
add
add
add
xor
add
xor
add
xor
cltd
xor
add
xor
add
xor
add
xor
xor
add
xor
cltd
xor
int3
xor
jmp
add
cltd
xor
xor
xor
cltd
cltd
xor
int3
cltd
xor
lcall
xor
xor
xor
data16
xor
cltd
int3
xor
int3
int3
xor
dec
xor
xor
xor
pushw
add
pushl
add
pushl
add
add
xor
data16
data16
add
incl
data16
xor
xor
data16
data16
xor
pushl
data16
data16
data16
data16
data16
cltd
data16
cltd
data16
data16
cltd
data16
cltd
data16
int3
data16
int3
data16
int3
data16
int3
data16
jmp
xor
data16
jmp
incl
int3
add
add
add
cltd
cltd
add
add
add
add
add
cltd
add
xor
add
cwtd
add
cwtd
add
cltd
add
cwtd
add
xor
add
cltd
add
cltd
cltd
add
cltd
cltd
add
int3
cltd
add
int3
cltd
add
data16
int3
cltd
add
int3
cltd
add
lcall
add
cltd
add
lcall
add
add
add
add
add
add
add
xor
add
int3
add
xor
add
xor
add
data16
add
data16
add
cltd
add
data16
add
cwtd
add
cltd
int3
add
cltd
int3
add
int3
add
cltd
int3
add
cltd
int3
add
int3
int3
add
int3
int3
add
int3
add
int3
int3
add
int3
int3
add
dec
add
dec
add
cltd
add
dec
add
dec
add
add
add
incl
cltd
add
add
xor
add
xor
add
incl
cltd
xor
add
xor
add
xor
add
incw
xor
add
int3
add
incw
jmp
add
cltd
incl
xor
incl
cltd
cltd
incl
int3
cltd
incl
lcall
incl
xor
incl
data16
incl
cltd
int3
incl
int3
int3
incl
dec
incl
xor
incl
dec
add
incl
jmp
add
data16
jmp
data16
jmp
add
incl
movsl
add
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
lock
addb
add
add
incl
add
add
add
add
add
incl
incl
add
add
ljmp
add
ljmp
xor
add
add
mov
add
add
ljmp
pop
xor
lahf
inc
add
in
mov
add
ljmp
pop
xor
lahf
lahf
lahf
inc
add
mov
imul
add
out
out
pop
pop
mov
lahf
repnz
add
mov
imul
out
out
out
out
pop
mov
repnz
in
mov
imul
ljmp
add
repnz
out
out
inc
in
mov
imul
mov
add
add
in
in
in
out
out
inc
in
mov
imul
ljmp
add
add
lock
in
in
inc
in
mov
imul
repnz
lahf
pop
pop
add
out
idiv
lock
out
inc
in
incl
imul
ljmp
jae
out
testl
in
incl
in
imul
ljmp
mov
incl
in
incl
imul
imul
pop
push
push
jae
loope
mov
inc
pop
pop
pop
pop
pop
add
add
in
incl
div
div
ljmp
mov
add
add
pop
out
in
add
add
incl
div
div
add
jmp
loope
mov
in
in
in
in
in
pop
pop
in
add
add
incl
div
div
add
in
in
in
in
jmp
in
add
add
in
in
in
in
add
div
testl
in
in
in
in
in
in
in
in
in
in
in
in
out
in
add
add
ljmp
div
add
out
or
in
ljmp
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
in
add
in
in
in
in
in
in
in
ljmp
incl
in
add
add
add
add
ljmp
in
incl
add
add
add
add
add
add
pop
in
in
ljmp
incl
sti
jp
xor
xor
dec
dec
dec
add
pop
in
add
incl
in
incl
ret
pop
jp
xor
xor
dec
dec
add
pop
in
add
in
in
in
in
in
add
add
pop
jp
xor
xor
dec
add
pop
in
add
add
incl
ret
pop
ret
pop
jp
xor
xor
add
pop
in
add
add
incl
pop
ret
pop
ret
pop
jp
xor
xor
incl
in
add
add
incl
jp
ret
pop
ret
pop
jp
xor
add
pop
in
add
add
incl
jp
pop
ret
pop
ret
pop
jp
xor
incl
in
add
add
incl
jp
jp
ret
pop
ret
sti
jp
add
pop
in
add
add
incl
add
add
add
add
add
add
pop
in
add
add
incl
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
incb
inc
clc
add
shlb
shlb
jg
add
jg
add
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
cld
add
add
add
add
and
or
add
add
call
jne
and
add
add
add
jne
add
add
add
std
pop
add
std
pop
add
incb
add
incb
add
add
add
add
add
fdivr
pop
add
add
add
jb
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
mov
adc
mov
xchg
sub
or
imul
idivb
mov
enter
cli
lock
mov
add
or
dec
add
pusha
mov
mov
dec
add
mov
shl
sbb
push
lock
or
sub
mov
cmp
cmp
dec
sub
enter
jge
sbb
xor
xor
sbb
inc
xor
je
adc
and
sbb
mov
fs
adcl
je
mov
jae
cmp
stos
mov
mov
add
shlb
push
add
decl
std
push
loop
or
aaa
push
decl
repnz
roll
mov
sbb
clc
aad
cmp
add
cmp
jno
xor
push
adc
adc
out
insl
loopne
mov
mov
clc
jg
pop
imul
cmp
push
subl
ret
sub
sbb
mov
push
pop
fdivrs
xor
mov
out
stos
mov
add
imul
std
pop
push
lea
jle
mov
push
test
test
mov
push
push
xor
inc
mov
adc
mov
mov
cmp
cmp
pushf
mov
test
cmp
mov
into
sub
fwait
sbb
lea
mov
nop
pop
xor
lds
mov
xchg
push
enter
cmp
xchg
mov
ss
xchg
testl
push
adc
je
xchg
push
mov
incl
jmp
push
and
mov
jl
xchg
xchg
adc
addr16
in
and
add
imul
and
jl
add
jge
sti
add
gs
or
mov
mov
shr
loope
stos
in
adc
imul
std
sbb
mov
sahf
fcmovbe
push
in
cmp
jae
dec
and
mov
shlb
sahf
xchg
and
or
xor
ret
sub
adc
adc
adc
call
loop
inc
dec
mov
cmc
adc
mov
repnz
lret
or
push
adc
xor
into
xor
enter
mov
es
jl
test
or
lea
bswap
cwtl
ret
push
stc
dec
mov
lea
or
in
and
lds
cmp
inc
int
popf
ret
inc
xorb
or
fs
sub
adc
xchg
cmp
inc
mov
dec
push
mov
lock
jmp
out
mov
mov
sbb
sarb
jmp
and
jmp
push
and
ja
push
or
bound
mov
dec
ss
lods
pop
adc
cmp
inc
and
push
loopne
xor
movsb
mov
adc
sbb
jne
in
loope
sahf
sbb
sub
lret
ficoms
inc
push
pop
adcl
push
adc
into
dec
inc
cli
sub
sub
fxch
mov
and
fildl
add
mov
enter
sti
adc
arpl
jne
enter
mov
jmp
and
mov
xchg
inc
adc
fiadds
jb
sub
cmpsl
mov
test
cmpsl
jo
pop
lea
dec
jmp
cmpsb
xchg
in
int3
dec
loop
sub
add
xorl
mov
pop
or
add
jl
mov
sbb
jecxz
lea
pushf
or
push
test
mov
sub
adc
enter
dec
in
hlt
cli
mov
inc
out
add
sar
sti
out
enter
add
push
mov
shl
and
xchg
xchg
adc
and
mov
inc
sub
arpl
iret
jb
and
lea
mov
inc
lods
sbb
repz
roll
call
jb
sbbl
xchg
repnz
mov
pop
scas
jo
je
jmp
pop
and
adc
mov
aam
jmp
sbb
cltd
lahf
inc
pop
or
or
sbb
xchg
fwait
je
je
sub
and
lds
add
lret
lea
lock
add
stos
test
dec
or
mov
push
pop
jb
loope
push
jb
add
addb
pop
orl
sub
sbb
sub
push
add
and
gs
push
adc
mov
push
add
inc
add
sub
stc
push
mov
add
adc
es
idiv
mov
xor
fdivs
loopne
add
dec
mov
sbb
mov
add
push
jo
cs
push
dec
mov
lds
rolb
push
push
in
dec
xor
int3
adc
sbb
out
test
data16
or
push
cli
sar
mov
mov
push
add
adc
sub
lock
rorl
adc
mov
adc
adc
mov
and
or
push
mulb
or
adc
stc
fisubs
addb
fs
cwtl
test
sbb
lock
add
mov
push
call
in
dec
push
call
or
add
arpl
push
or
jbe
add
repnz
lods
stos
add
nop
cmpl
adc
jae
cmp
and
shrb
movsb
out
iret
and
cmp
das
sbb
push
arpl
stc
lcall
test
call
cwtl
add
lea
dec
push
inc
mov
push
and
mov
call
mov
xchg
fld
sub
or
push
sti
nop
cmpsl
add
adc
test
push
inc
inc
inc
push
subb
mov
lea
push
mov
and
sub
xorb
loope
ret
push
lea
push
aas
pop
adc
mov
sbb
enter
lahf
aas
shlb
inc
xchg
or
stos
adc
int
xor
or
sub
aaa
dec
fisubs
or
dec
inc
loopne
add
sub
sub
test
adc
repnz
sub
push
clc
aaa
rcrb
jno
pushl
cmp
inc
or
pop
pop
maxps
push
imul
mov
sub
loopne
pop
push
xchg
or
xchg
adc
pop
push
sub
jb
pop
sti
dec
jbe
add
fnstsw
ret
mov
xor
stos
pop
loop
rcrl
push
jne
scas
push
add
mov
shll
pop
enter
and
loopne
jmp
cmpsb
cltd
inc
or
push
push
and
loop
push
sbb
pop
cmp
or
and
xor
jmp
pushf
mov
push
clc
movzwl
test
jge
sub
xchg
lods
jp
in
dec
cld
movl
jne
or
iret
jge
test
rclb
sub
iret
shll
enter
arpl
cmp
mov
sarw
or
push
push
add
mov
jae
inc
jmp
pop
pop
nop
mov
xor
mov
pop
ret
std
lock
cmp
add
in
add
jbe
adc
or
cmpsl
xor
mov
cmpb
push
cmp
pop
std
cmc
daa
aaa
push
sub
int
inc
in
bound
je
loopne
xor
lds
dec
or
add
pop
movsl
sub
decl
cli
movsb
push
in
roll
stos
loop
adc
cmp
cmpsb
ret
add
mov
adc
stos
inc
pushf
add
lock
push
push
inc
xchg
in
mov
mov
jge
in
es
dec
enter
push
dec
pop
and
pusha
lret
xor
dec
push
hlt
push
fs
or
dec
mov
push
fistps
mov
in
pop
dec
sbb
inc
je
mov
inc
jne
adc
adc
fildl
mov
lret
sbb
nop
cli
cmp
jne
push
stc
jmp
fidivrl
inc
lock
loopne
sub
pushf
dec
dec
mov
in
in
pop
inc
mov
sub
lret
ljmp
xlat
repnz
dec
cmpb
pop
mov
xchg
je
add
out
inc
xor
jp
lcall
and
push
add
push
push
call
sbb
mov
adc
lds
bound
inc
sbb
or
adc
ror
adc
mov
inc
sbb
shlb
sub
pop
test
mov
jmp
arpl
jmp
sbb
into
jge
mov
adc
jp
jge
jbe
testb
dec
lahf
mov
je
push
movsb
jg
test
cmp
cmp
jmp
mov
inc
jmp
push
inc
pop
dec
xchg
pop
xor
push
dec
mov
push
inc
mov
pushf
stos
pop
test
scas
repz
xor
icebp
mov
call
and
or
add
xor
xchg
insl
movsl
xchg
sbb
and
inc
mov
dec
adc
jl
prefetchnta
shr
pusha
loope
push
lret
jbe
insb
xor
cmp
sti
push
add
testb
mov
inc
push
xchg
cmp
mov
xchg
jp
and
cmpsl
sub
scas
jno
or
push
lea
loopne
push
xor
push
pop
cmpsb
hlt
lret
sbb
jo
insb
imul
sbb
gs
jae
dec
adc
and
std
mov
gs
ljmp
outsl
jae
das
insb
sahf
pop
outsb
lahf
je
bound
mov
imulb
out
mov
dec
cmp
xor
popa
insb
mov
sub
push
xchg
daa
je
mov
mov
dec
in
jecxz
popa
addr16
inc
outsl
cmp
cmp
js
data16
fidivrs
cmp
imul
dec
push
inc
rol
dec
popa
outsb
fs
add
xlat
mov
movl
les
jl
pop
imul
mov
jbe
xchg
lcall
stos
mov
xor
rorl
jmp
push
dec
cmp
dec
xor
jp
dec
pushf
or
mov
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
push
add
clc
or
add
std
pop
add
inc
add
std
pop
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
jo
arpl
movsb
adc
jge
push
.byte
