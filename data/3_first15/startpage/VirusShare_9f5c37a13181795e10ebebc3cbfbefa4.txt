mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
frstor
dec
jmp
les
or
cmp
std
push
out
push
cmpsb
test
sub
mov
mov
loop
insl
fwait
push
je
lods
pop
xchg
add
adc
movsl
pushf
std
mov
std
jecxz
clc
in
cltd
xlat
sub
adc
cli
sarb
pop
lahf
sub
sub
or
pop
inc
je
sbb
inc
add
popf
sbb
add
in
les
hlt
enter
ret
repz
lock
fisubrl
popa
bound
or
and
outsb
test
pop
push
gs
pusha
testb
mov
jmp
or
cmpsl
cmpsb
jo
clc
ret
mov
stc
movsb
test
xlat
mov
fwait
dec
mov
stos
cli
mov
mov
xchg
jmp
outsb
loope
inc
mov
into
gs
lcall
push
jae
adc
jg
inc
into
imul
and
out
xor
fstps
inc
gs
xchg
xchg
mov
test
fisttpll
jbe
lea
jb
jno
in
lods
jle
add
mov
in
push
xchg
repnz
pushf
sub
mov
sti
call
outsl
add
mov
mov
jae,pt
jne
adc
and
in
addr16
outsb
sub
jno
out
sbb
sbb
lret
mov
mov
dec
push
int3
aas
mov
sub
ret
icebp
mov
popf
cmp
fldenv
addr16
leave
cmp
xchg
pop
repz
xor
cmpsb
arpl
sahf
cld
leave
arpl
pop
test
push
push
incl
out
or
cmp
dec
cmp
sbb
mov
mov
push
movsl
mov
jno
inc
mov
inc
cmpsl
push
stos
les
ss
jo
cmpsl
mov
sbb
or
mov
data16
ljmp
adc
ret
je
out
mov
adc
repnz
add
dec
or
pop
or
out
sub
fxtract
ljmp
xchg
mov
mov
notl
jecxz
push
add
inc
dec
popa
int
jmp
and
pop
jge
and
or
mov
xchg
clc
aaa
enter
mov
imul
ss
shlb
cmc
push
cmc
jge
jmp
scas
push
les
loope
jbe
xor
pop
cmpb
inc
int
lods
lds
std
lods
nop
push
push
dec
pushf
ss
dec
inc
xlat
adc
cwtl
cli
sub
mov
das
inc
jg
loopne
sbb
sbb
loope
xlat
jae
int
cmp
icebp
or
or
mov
cld
je
mov
aas
cwtl
scas
pop
imul
addb
xchg
es
add
jl
jae
mov
jnp,pt
fs
mov
cld
imul
insb
icebp
cmp
push
scas
mov
mov
add
adc
pusha
lock
std
test
das
std
cmp
aam
ljmp
add
xor
dec
popf
cld
pop
or
or
rorl
mov
dec
and
in
mull
loope
cs
add
push
je
clc
sbb
cmp
jo
aas
fwait
mov
add
or
mov
mov
pop
adc
daa
or
xchg
rol
mov
cmc
jmp
push
sbb
mov
mov
and
dec
mov
ds
rcll
movsl
out
popf
push
lds
test
mov
clc
lret
pushl
test
mov
icebp
insb
out
sbb
push
leave
icebp
push
mov
dec
bnd
insl
sub
rcrl
inc
inc
andl
fcompl
dec
in
jae
es
mov
xor
imul
frstor
and
pop
and
mov
cmp
idiv
ficoms
xchg
ret
jmp
pop
and
push
setno
hlt
push
mov
outsb
and
test
xchg
sub
jae
fnstsw
scas
leave
int
leave
es
es
cli
xchg
or
adc
les
mov
xor
lds
shrb
xorl
xorb
fbstp
rcr
inc
leave
adc
inc
jp
dec
in
outsb
xchg
les
pop
xor
jns
inc
sbb
in
xchg
lds
add
pusha
rorl
mov
or
imul
out
scas
cld
and
lock
pop
subb
mov
aam
sub
mov
cmp
insl
mov
sub
dec
xor
lods
sub
cmp
mov
mov
inc
sbb
fcmovbe
push
into
sbb
sete
loop
cltd
leave
aaa
and
sbb
pop
or
xlat
dec
ja
xor
les
mov
mov
pop
mov
mov
push
sbb
and
xlat
add
cmp
xlat
in
popl
jo
xor
stos
adc
add
sar
ds
cmp
mov
sub
decb
clc
jle
inc
int3
add
mov
mov
popa
jl
push
test
mov
jmp
gs
dec
adc
jbe
inc
mov
scas
inc
xchg
or
int3
dec
cld
jb
rorl
js
sar
add
fisttpl
fnsave
cmpsl
pusha
fstpt
push
mov
sti
jno
pop
sbb
xchg
ljmp
ja
xchg
cwtl
mov
inc
push
movsb
aaa
sarl
shrl
mov
inc
test
mov
xlat
out
repnz
popf
dec
ljmp
repnz
push
aaa
mov
xchg
mov
sahf
loop
in
add
or
jns
adc
test
sbb
mov
les
mov
or
jno
adc
lret
arpl
mov
aad
lods
lret
mov
out
add
sub
dec
mov
js
sbb
inc
xlat
movsl
add
adc
lods
jnp
test
shr
and
jp
push
mov
xchg
aaa
loope
pop
popa
aaa
or
add
push
push
mov
push
stos
aam
xchg
icebp
cmp
and
jl
xchg
cmc
lret
dec
js
aaa
fwait
repz
sub
aad
jp
aas
cs
xchg
mov
rorb
xor
scas
inc
int
popa
fbld
xlat
mov
insl
les
jg
xchg
sarb
hlt
dec
jmp
cmp
aam
cs
or
xchg
or
bound
loope
repnz
push
ret
cmp
imul
adc
push
in
adcl
inc
mov
lret
aam
push
enter
fisubs
dec
gs
cmp
faddl
push
sbb
jbe
mov
mov
jg
test
or
sbb
xchg
test
mov
add
cmp
mov
lret
adc
adc
into
cwtl
in
jne
sub
jno
out
sbb
stos
push
xor
orl
aad
dec
inc
xchg
jmp
mov
and
push
sarl
fldcw
sub
leave
or
push
test
inc
lds
add
inc
lock
xor
xchg
js
int3
jmp
int3
popf
cmc
jge
or
mov
xchg
dec
in
arpl
mov
out
jecxz
inc
sub
out
xchg
mov
ds
mov
pop
add
pop
mov
or
sbb
shlb
mov
mov
aam
dec
mov
adc
cmpsb
cmp
andb
xor
xchg
ret
inc
xorb
mov
outsl
hlt
cld
stc
jp
sub
mov
mov
cltd
int3
push
movsl
cmp
out
mov
lea
inc
mov
xchg
scas
loop
inc
js
jne
sub
push
mov
in
cli
fsub
data16
cmpb
or
xchg
rsm
add
int3
mov
pop
pop
pop
into
mov
je
pop
adc
stc
arpl
jle
mov
outsb
adc
aas
lods
adc
jmp
enter
add
ficoml
cmpsb
inc
pop
inc
rcl
aas
das
pushf
jbe
adcl
sbb
or
push
sub
jle
and
ss
std
movsl
mov
sub
pop
mov
mov
iret
loopne
arpl
add
aas
jns
dec
push
fsts
hlt
adc
dec
syscall
push
js
clc
stos
aam
test
sti
xchg
out
and
test
push
inc
cwtl
add
and
lods
cmp
mov
addr16
mov
pop
sti
sbb
std
sbb
cli
pop
sbb
xchg
mov
jnp
icebp
hlt
xlat
ret
fs
inc
xchg
push
xor
aam
loop
fstpl
enterw
fwait
or
das
push
mov
sbb
add
out
jle
xor
inc
fidivs
jg
inc
dec
bts
leave
ja
xlat
lret
daa
outsb
stos
fildll
cmpsb
dec
lret
jle
xor
xchg
dec
aaa
pop
sbb
nop
push
add
cld
popa
popf
dec
dec
shrb
mov
out
inc
sub
xchg
sti
jno
fldcw
mov
out
sub
xor
push
xor
dec
jp
stc
or
add
stc
lret
stos
sbb
pusha
mov
clc
mov
inc
jge
lahf
in
pop
scas
xor
mov
pop
mov
idivl
push
lret
push
adc
adc
scas
mov
mov
test
in
add
adc
outsl
fimuls
scas
add
jmp
testb
jg
pop
out
lret
inc
sbb
pop
mov
dec
jmp
jo
cmp
rcr
xor
outsb
loopne
cli
fstpl
call
jno
movl
and
aad
inc
mov
sub
stc
ret
in
inc
pop
jmp
cli
dec
test
inc
out
and
and
test
out
mov
test
push
cmp
addr16
fistpl
popl
pushl
mov
or
out
sbb
or
cmp
push
mov
call
dec
cld
movsb
test
int3
lret
push
js
add
mov
das
cmc
mov
sub
mov
jne
shll
data16
out
cs
mov
dec
clc
cltd
dec
add
ret
ret
in
sbb
mov
and
ljmp
and
gs
mov
inc
cwtl
aad
sub
cmc
scas
push
ljmp
sub
stos
add
and
mov
fnstsw
mov
mov
outsb
sub
pop
shlb
adc
and
add
fwait
cmp
mov
push
or
cmp
popl
lahf
ljmp
xor
jbe
sub
fists
sub
fstpt
or
scas
stos
adc
adc
mov
push
js
lcall
push
sbb
pop
cltd
push
sbb
mov
mov
iret
cmpsl
bound
stc
dec
add
lcall
es
mov
mov
out
xchg
nop
add
xchg
mov
push
mov
pop
or
xchg
add
outsb
iret
sbbl
out
sbbl
cmpsb
jnp
cltd
and
in
push
mov
add
adc
insb
jb
inc
push
cmpsl
cmpsb
mov
scas
push
dec
ss
push
push
ret
mov
outsb
sbb
shr
jg
mov
pop
adc
jbe
add
repz
fistps
out
addl
add
jge
push
shlb
push
mov
cmp
inc
cmpb
shl
nop
pop
xor
insb
loopne
mov
mov
xchg
sub
ja
dec
xor
ja
pop
iret
jnp
adcb
mov
jb
xor
in
pushf
push
faddl
cmp
or
pop
js
rcrl
pusha
lret
shr
jp
add
adc
imul
cld
and
fcomps
xchg
jno
lret
cmpsl
mov
xlat
fwait
scas
jne
sarl
push
mov
xor
mov
hlt
call
mov
or
push
mov
scas
add
int3
adc
inc
inc
cmp
inc
in
scas
cltd
jns
and
pop
scas
int3
jmp
movsl
add
out
clc
inc
dec
sbb
lret
stos
loopne
mov
jmp
outsl
mov
outsb
mov
inc
fstl
cmp
inc
mov
mov
stc
dec
cmc
jl
adc
loopne
pop
sar
mov
stos
push
outsl
ficompl
mov
mov
add
mov
sti
pop
push
outsb
mov
dec
and
ja
out
shlb
sub
inc
jbe
sbb
lret
test
fiaddl
outsl
inc
cmp
dec
mov
jmp
sar
ret
lret
dec
std
dec
xor
sub
mov
mov
xchg
mov
andb
jle
pop
repnz
jg
out
fisubrl
adc
push
and
mov
outsl
cmp
sub
js
in
add
mov
popa
movsb
mov
aas
sarl
sbb
aam
and
fsubs
ret
jle
aam
ret
xchg
adcl
hlt
leave
ret
and
dec
notb
xchg
std
icebp
scas
lret
das
addr16
test
loop
mov
jo
cmpsl
test
push
pop
lahf
repz
and
inc
pop
repz
cmp
std
arpl
pop
aas
sbb
lock
icebp
xor
push
lret
aaa
ja
flds
mov
lret
out
ror
das
leave
icebp
sub
icebp
jg
hlt
fcoml
adc
push
and
fisubs
nop
bndldx
sbb
shrb
lcall
aam
fildll
or
nop
decb
xchg
jmp
jge
xor
mov
dec
imul
insb
adc
cmc
pop
stc
sbb
lcall
cli
aam
nop
in
pop
adc
pop
jp
mov
xchg
mov
mov
daa
jp
jnp
jb
imul
sbb
xchg
clc
cmpl
lcall
mov
test
jno
push
cmp
daa
dec
push
popa
in
cs
push
mov
addr16
dec
roll
and
sub
cmp
insb
cwtl
repnz
rcrl
sbb
inc
add
mov
xchg
subl
bound
clc
xchg
je
lock
loopne
xorb
insb
xlat
rclb
and
sub
push
sti
xchg
jle
jns
loopne
fsubl
aaa
xor
mov
lods
or
lcall
lods
jbe
mov
mov
sarl
xchg
lods
adc
jmp
sub
lcall
test
test
sahf
cmc
aas
cmp
imul
dec
lods
dec
aaa
in
add
xchg
add
negl
mov
mov
xor
xor
and
ffree
cmpsb
fnstcw
int3
rclb
mov
xchg
loop
imull
inc
mov
xchg
arpl
push
and
movsb
and
cmp
mov
arpl
sub
cmpsl
pop
mov
outsl
pop
popf
lods
adc
int
push
out
cmc
movsl
clc
push
xchg
in
inc
xchg
mov
push
into
lods
stc
enter
je
mov
pop
jnp
inc
cld
add
pop
std
add
jno
lods
mov
xor
lock
sbb
lods
dec
and
lods
xlat
mov
dec
xchg
outsb
rol
lret
test
ficoml
movsb
enter
pop
jle
cmp
pop
int
int3
inc
mov
mov
fildl
pop
inc
int
xor
sbb
push
xchg
test
add
test
add
inc
cmp
sub
mov
and
mov
inc
loopne
push
dec
push
mov
sbb
sahf
mov
xor
adc
inc
add
lods
jg
mov
mulb
sahf
mov
scas
ret
mov
dec
test
imul
divb
in
outsb
scas
sbb
rcll
add
repnz
push
adc
pop
adc
add
test
in
push
orb
shll
movl
in
jg
sub
sbb
rcr
mov
test
call
stos
test
into
pop
xchg
jne
or
add
std
jne
divb
popa
insb
sbb
cmp
rolb
sbb
cmpsb
addr16
pop
rcrl
lret
push
lcall
loope
or
call
pop
pop
xchg
cmp
inc
cmp
ss
cmp
arpl
xor
or
jnp
push
loop
scas
rorb
or
aad
jle
test
xchg
out
in
dec
sbb
mov
dec
cmc
ss
or
inc
in
sbb
push
lock
test
jb
sbb
ja
ja
test
push
and
sbb
sarl
sub
inc
fwait
shl
mov
std
mov
hlt
repz
mov
popf
cmp
mov
jmp
pop
dec
jl
jge
nop
and
pop
hlt
aaa
fcmovb
sub
outsl
or
shll
mov
scas
cmpb
push
jno
sub
adcb
push
std
push
mov
mov
pop
xchg
popf
xlat
add
xor
xchg
dec
mov
sbb
rcrl
or
enter
imul
pusha
cmpsb
out
int
dec
std
roll
cmp
and
dec
mov
lea
ret
out
sub
push
push
test
push
ss
or
in
js
mov
lcall
sbb
or
mov
ret
xlat
pusha
aad
cs
fsubs
test
sub
sub
stc
pop
inc
shll
dec
enter
fdivrp
ljmp
push
inc
femms
cmpsb
mov
or
push
popl
pop
sahf
mov
rcl
dec
xchg
sub
in
mov
lret
inc
mov
mov
mov
push
sub
leave
shlb
loop
xor
dec
testb
je
jae
adcb
add
xchg
mov
inc
out
in
cmp
mov
cmp
jg
cmp
xchg
lds
popf
mov
mov
out
fstpl
enter
sbb
inc
mov
test
scas
sbb
dec
xor
das
mov
dec
push
xchg
into
push
xchg
ljmp
jp
pushaw
test
or
outsl
jp
inc
fbstp
pop
or
mov
movsb
push
negl
xchg
and
fs
sti
add
aam
scas
aad
cmp
outsb
mov
sub
scas
fisttpll
sub
xchg
push
mov
ljmp
jae
in
push
arpl
push
push
inc
jp
aaa
mov
outsl
xor
roll
push
insb
cmp
in
ror
sub
sbb
adc
fsubrl
arpl
pop
dec
xchg
adc
lret
xlat
stos
and
outsl
pop
sahf
jmp
inc
or
inc
jbe
sti
mov
sbb
mov
ljmp
aas
jns
scas
mov
subb
xor
ss
repnz
and
and
andl
leave
dec
jl
jp
push
jbe
addr16
repnz
lds
mov
loope
cli
mov
sbb
jmp
in
push
cmp
fs
xorb
fdivrl
shlb
in
dec
push
popa
sub
cmp
mov
pop
addr16
mov
rolb
mov
adc
insl
jo
xchg
mov
test
es
lds
pop
mov
or
pop
mov
xor
pop
stc
out
mov
pop
mov
stos
paddusw
mov
lret
pop
in
das
std
jb
mov
pusha
icebp
sub
ljmp
stos
sbb
jp
or
push
add
pop
cmp
mov
cmp
jno
jae
mov
pop
dec
shll
movsb
dec
inc
ret
and
sbb
xor
or
dec
shrl
jle
pop
mov
or
mov
jo
mov
sub
cltd
lret
push
shlb
and
add
push
lds
sub
stos
mov
hlt
dec
push
xor
repnz
iret
cwtl
test
dec
leave
xchg
movsb
xchg
fs
inc
aad
je
aaa
mov
fbld
xor
or
subl
insl
add
mov
sbb
xor
sbb
sti
adc
sub
sbb
int
cs
hlt
jae
pusha
jae
or
sar
sub
aad
ror
pop
mov
mov
adc
add
cmp
in
mov
dec
je
das
jg
mov
xchg
insb
sub
xchg
cli
push
or
insb
push
mov
inc
push
pusha
insb
lock
fcomps
dec
sbb
cmp
lock
ss
inc
dec
jo
lods
adc
adcb
or
insl
sar
and
insb
rcrb
mov
pop
rcll
and
cmp
out
sub
and
dec
jge
mov
inc
push
mov
rcrl
ss
int3
scas
push
ret
int
inc
stc
mov
or
es
xor
cmc
lret
shrb
daa
pop
sbb
jno
lods
dec
cmp
sar
or
inc
xor
fistl
mov
mov
xchg
sti
adc
imul
dec
mov
sbb
jno
mov
or
cli
cmp
ds
xlat
jae
push
sbb
out
popl
sbb
mov
popa
add
add
sub
mov
xor
arpl
mov
fldcw
inc
movsb
sbb
in
daa
lret
mov
out
sti
mov
push
mov
orl
add
push
and
ret
cmp
and
or
add
icebp
jg
inc
or
xchg
inc
pop
dec
lods
jmp
fdivrs
fwait
fs
aam
sub
js
jno
call
movsb
add
mov
rol
outsl
cmp
sbb
mov
mov
cmpsl
jmp
ds
sbb
idivl
insl
pop
sbb
das
punpckhdq
clc
movsb
jecxz
jg
pop
mov
or
or
sbb
cmp
jge
in
xor
dec
and
stos
in
cmc
add
incb
insl
sub
fidivl
push
pand
sub
imul
outsb
xchg
fs
jns
call
mov
fldt
push
sub
add
inc
jb
repnz
jge
add
fwait
xor
mov
xor
sub
test
cmpsb
bound
dec
jno
pop
push
insl
pusha
dec
ss
mov
testb
test
fwait
sub
xchg
inc
imul
cmp
js
jmp
rorb
adc
mov
test
andl
mov
scas
lahf
xlat
test
sub
in
jb
jbe
sti
or
bnd
xor
daa
inc
insb
push
add
ja
divps
push
add
xchg
sub
push
cwtl
inc
cli
ss
mov
xor
outsb
add
lea
into
sub
sub
mov
repz
jmp
mov
data16
popf
mov
sub
dec
jle
sub
les
push
cmp
out
insb
inc
sub
imul
xchg
cmp
imul
gs
xor
xchg
shl
mov
test
sub
mov
xchg
nop
mov
ret
inc
jno
test
xchg
arpl
ret
loope
push
repz
cld
sub
mov
fistpl
rcl
cltd
pop
lods
arpl
aaa
rcr
xor
fadds
push
rorl
cs
add
in
cmpsb
xchg
mov
aam
fwait
out
cmp
les
jno
dec
mov
or
adc
sub
push
jb
dec
test
sbb
push
cwtl
push
movsl
pop
mov
or
pop
or
stos
pushf
sub
outsb
jnp
pop
and
jecxz
mov
dec
push
mov
push
sbb
in
xchg
dec
inc
dec
push
dec
imul
push
and
xorb
sub
mov
stos
xchg
fimuls
sbb
pop
jno
xchg
push
into
mov
shrb
jno
xor
xlat
xorps
jne
daa
and
les
loop
stc
jge
dec
lahf
xor
mov
daa
mov
pop
push
sub
cwtl
stos
lods
push
xor
outsb
jb
xor
jp
jle
inc
mov
lahf
cmpsl
into
inc
mov
xlat
leave
xor
push
lods
xor
test
add
rcrl
pop
mov
lret
mov
fimull
jmp
movsl
sbb
lea
test
lds
xchg
cmp
shlb
je
lahf
mov
inc
xlat
pop
xor
jns
push
xor
subl
dec
fisttps
fldl
test
push
push
mov
jbe
adc
xor
aam
sbbl
mov
push
xor
xorb
add
out
mov
and
lea
test
cli
xlat
sub
dec
push
repnz
fistps
in
pop
mov
pop
inc
xor
cs
inc
paddsw
movsb
push
jge
divps
push
std
or
aam
inc
je
imul
popa
scas
ret
cmp
repz
dec
lock
add
imul
loopne
xor
adc
in
sub
rcrl
gs
mov
loopne
test
adc
test
xor
int
xchg
or
nop
mov
xor
lahf
mov
gs
mov
pop
mov
aad
lock
icebp
stc
jl
mov
or
ss
in
sub
or
dec
xchg
mov
movsb
popa
popf
dec
pop
shrd
or
push
in
int3
std
fbstp
mul
fstpt
adcb
test
mov
cmp
or
xor
repnz
add
das
fisttps
das
lds
std
loopne
idiv
js
push
jbe
ret
push
push
mov
mov
insl
jo
cmp
ja
scas
sarb
test
push
je
sbb
mov
jg
cs
jmp
test
xchg
pop
stc
into
leave
aad
jno
std
jle
orb
adc
pop
add
pushf
dec
stos
mov
pop
rcl
insl
leave
mov
mov
dec
sbb
xchg
sahf
push
fimull
stos
and
jmp
rep
sub
imul
fsubrl
aaa
lods
and
fnsave
jmp
fistl
cs
jecxz
leave
xchg
add
jb
or
iret
mov
sahf
adc
xor
sahf
movsb
ljmp
les
mov
filds
dec
inc
fsubs
and
inc
ficoml
icebp
jbe
mov
repz
sbb
adc
popf
cld
stos
pushf
pop
adc
iret
adc
or
jecxz
jne
and
sarl
mov
xor
pop
adc
data16
setns
pop
scas
cmpsl
cmp
cmpsl
jmp
sub
dec
lea
or
jle
dec
adc
into
je
sti
enter
aaa
cmpsl
and
xor
lds
mov
pop
xor
jne
push
push
lock
jbe
adc
xor
in
dec
into
dec
mov
sub
sub
push
das
jno
push
fisubrl
shll
inc
xchg
sahf
or
lcall
sub
sbb
mov
xor
test
and
outsb
add
mov
loope
cmp
mov
xchg
mov
adc
call
stos
xor
push
ss
gs
into
adc
add
push
cmp
jecxz
push
add
push
std
ds
daa
icebp
inc
xor
add
rclb
scas
inc
lds
push
adc
cmp
push
xorb
mov
ja
push
push
cmp
int
dec
div
pop
and
enter
push
test
fadds
in
setb
mov
es
xchg
pop
aas
rcll
arpl
sub
adc
out
lahf
mov
sbb
xor
jp
addr16
sti
jecxz
stos
ret
lret
jp
bsf
jmp
and
cli
fwait
bound
dec
enter
mov
inc
cmp
nop
jbe
fnstenv
shrl
add
jmp
add
sub
or
idivb
sub
or
jae
or
cmp
sbb
inc
mov
xchg
adc
out
into
mov
adc
sahf
pop
loope
jle
bound
jl
or
lods
popa
mov
fbstp
lock
aaa
dec
int
pop
sbb
in
js
popfw
sub
pop
ljmpw
adc
daa
mov
inc
into
or
lret
rorl
pushf
lret
cltd
insl
out
mov
loopne
mov
dec
pop
lea
dec
xchg
or
outsl
pop
sbb
add
int
jne
push
sbb
push
mov
loop
mov
mov
cmp
and
and
push
cld
fnstenv
add
fisubl
and
repnz
cmp
jp
fsubs
xlat
lock
xor
xor
xor
push
lods
cld
mov
dec
testb
xchg
mov
loopne
sti
repz
fwait
leave
cmp
stos
hlt
stos
les
xor
add
sbb
sbb
cmp
ret
jle
xlat
sub
mov
popf
enter
pop
stc
sub
push
inc
mov
ljmp
jns
dec
cmp
in
pushf
mov
pushf
xor
adc
jno
gs
push
mov
inc
mov
adc
push
bound
mov
add
push
jl
jecxz
pop
inc
sub
rclb
adc
pop
mov
mov
lods
sbb
stos
xor
push
cmp
sbb
loop
inc
hlt
pop
test
mov
mov
cli
shll
push
xor
mov
shlb
loop
rorl
jmp
xor
dec
jl
xchg
lcall
push
andb
fwait
xchg
insl
dec
outsb
push
xor
and
in
test
addr16
subb
data16
sbb
aaa
lcall
xchg
push
pop
mov
sbb
and
mov
popa
sbb
adc
mov
stc
sbb
pop
divps
jns
mov
inc
cli
adc
les
mov
lret
test
dec
xor
jle
loopne
rol
cmp
repnz
and
mov
lret
jne
add
jg
jnp
loop
popa
sbb
adc
outsb
fsubrp
push
mov
adc
fxtract
pop
int3
cmp
fnstcw
dec
xor
mov
or
test
and
pop
mov
sahf
dec
dec
cmp
cwtl
xchg
inc
cmc
xor
ret
jle
daa
mov
cli
shll
mov
lods
jecxz
mov
inc
mov
adc
mov
sub
add
jbe
in
xchg
pop
adc
rorl
out
sbb
mov
js
in
mov
adc
enter
outsb
sar
aaa
xor
ret
xchg
pop
sti
mov
outsb
lods
jge
xchg
mov
xorl
data16
in
lret
jo
inc
cltd
jbe
pusha
pushf
daa
ljmp
adc
call
pop
push
pop
cmpsl
iret
adc
push
int
imul
jnp
test
out
push
add
xor
out
loopne
sahf
and
sti
xchg
enter
mov
jecxz
or
adc
loop
and
or
cs
and
or
push
xor
lock
mov
push
mov
mov
push
repz
inc
daa
xchg
scas
insl
orl
xchg
push
clc
or
push
fs
pushf
cmp
ds
jmp
stc
repz
mov
jne
test
into
rcrl
mov
or
mov
stos
push
jno
mov
sub
cltd
test
xchg
adcl
cli
jb
xchg
movsb
pop
inc
lret
fistpll
test
nop
pop
cmc
in
arpl
sahf
xchg
fwait
into
or
filds
ljmp
mov
push
movsl
addr16
pop
data16
out
shrl
xor
mov
push
ss
adc
jecxz
mov
out
fildl
cmp
enter
bound
mov
pop
fisubrs
xchg
jge
mov
push
push
or
imulb
loop
sub
sbb
push
pop
xchg
xchg
xchg
sub
xchg
in
orl
push
jge
and
dec
jl
dec
push
jg
test
push
mov
lret
jae
pop
out
sbb
cld
mov
lret
adc
inc
inc
movsb
std
push
and
movsl
ret
push
les
call
lods
loope
pop
clc
push
dec
or
jl
jecxz
in
orl
outsl
and
xor
daa
pop
in
addr16
clc
xchg
pop
pushf
inc
pop
je
jp
cwtl
popf
pop
inc
add
sbb
negl
adc
cwtl
and
in
popf
pop
clc
nop
dec
push
mov
sbb
pop
pushf
fs
pop
cwtl
mov
fsubrs
mov
fdivrl
fadds
push
dec
sub
push
mov
clc
ret
pop
loop
mov
negl
cmp
mov
inc
cwtl
adc
fimull
push
scas
xor
imul
mov
test
xlat
sbb
push
fwait
jp
and
inc
add
loopne
shrb
ljmp
mov
cmp
mov
imul
test
jbe
testb
test
ljmp
repnz
sub
xchg
push
cli
mov
lcall
sub
add
inc
pop
add
xor
mov
jg
hlt
stc
xor
push
jb
sbb
orb
sbb
mov
out
push
pop
sub
mov
jb
nop
cltd
xchg
scas
push
pop
test
mov
adc
or
ja
nop
dec
mov
sti
xchg
xchg
out
int
jo
jg
add
lock
repnz
cli
add
sub
or
lods
enter
lock
imulb
adc
sbb
and
scas
stos
jl,pn
or
loop
jb
in
out
mov
popa
jecxz
imul
mov
mov
loop
or
inc
enter
xorl
mov
xchg
jle
sub
mov
or
xlat
or
repnz
je
xchg
mov
dec
lods
sub
mov
dec
gs
push
sub
jle
jae
lods
mov
out
lods
xchg
bound
push
or
mov
push
sbb
pop
ljmp
cmp
shll
push
in
out
dec
fistpll
sbb
sbb
jo
lds
cltd
fsubr
cmp
add
xor
push
loopne
jne
loope
adc
and
loop
getsec
jg
dec
cmp
cs
rcrb
scas
lea
dec
cs
mov
pop
lea
mov
pop
mov
call
ffreep
adc
bound
xor
and
in
insl
mov
pop
xchg
into
push
jne
push
decb
je
mov
push
push
mov
pop
ret
pop
sub
scas
or
cmpsb
xchg
fwait
add
inc
sarl
inc
je
stos
adc
pop
and
mov
mov
ret
scas
rcrl
add
rorb
mov
idiv
pop
sbb
pop
jp
lds
test
push
je
test
fwait
sub
sti
arpl
in
es
jmp
push
jp
sti
repnz
cmp
cmpsl
imul
sbb
dec
and
adc
popl
mov
xchg
xor
sahf
cmp
xchg
and
mov
xor
lea
and
decl
cmpsl
fistpl
fsts
fcomip
incb
mov
popf
cli
mov
subb
push
in
push
movsb
out
fiadds
add
pop
js
movsb
pop
cmpsb
js
adc
daa
sbb
xchg
negl
mov
test
sbb
cli
scas
sub
xlat
int
pop
cmp
xchg
in
inc
mov
aaa
dec
cmpsb
push
loopne
fiaddl
rol
mov
and
shll
inc
loop
lds
add
sbb
pop
sub
sub
jnp
cli
dec
push
test
sbb
xor
daa
enter
jg
lea
imul
or
popa
fbstp
fnstsw
loop
out
das
int3
ret
mov
int3
outsb
subl
lcall
add
stos
pusha
lods
bound
pop
push
fwait
lret
clc
xchg
mov
inc
movsb
ja
ljmp
cmp
fistpll
rcl
xchg
cmp
aam
add
leave
mov
into
outsl
lcall
int3
popa
jl
cmpsb
enter
sub
fstl
dec
dec
into
in
push
pop
cmp
movsl
je
out
std
pushf
fsubl
jns
xchg
movsl
or
pusha
jo
je
adc
insl
sbb
les
adc
pop
dec
inc
sarb
inc
xor
inc
xchg
es
or
sbb
pushf
shr
jnp
dec
pop
sub
cltd
mov
inc
xchg
pop
add
leave
jmp
jecxz
jbe
mov
into
jl
dec
lock
xor
xchg
fidivrl
ja
popf
lahf
test
es
push
sub
call
dec
sar
add
std
lock
xor
xorl
addl
aam
test
jmp
xchg
adc
enter
jl
faddp
lea
mov
inc
add
repz
jb
dec
sbb
and
imul
push
mov
insb
xlat
adc
mov
aaa
adc
mov
cltd
or
popa
std
ljmp
push
add
popf
jl
xchg
repnz
sahf
rcrb
int3
add
and
mov
cmp
mov
outsl
test
addr16
xchg
xor
jns
inc
lcall
add
fimull
arpl
cld
sbb
xchg
or
push
sub
inc
in
pop
xor
mov
fwait
shlb
jbe
sqrtps
shrb
sub
cmp
or
adc
mov
inc
jp
fstpt
ss
clc
push
and
into
push
dec
mov
cmp
in
gs
sub
fidivrl
addr16
inc
xchg
sti
mov
repz
sub
sbb
dec
and
mov
aaa
adc
fiadds
pop
icebp
lods
sbbb
xor
repz
aam
pop
mov
in
sbbb
les
fisttpl
rcr
ljmp
jbe
cmc
mov
fwait
repz
mov
nop
dec
xchg
mov
or
into
cld
push
rolb
push
addr16
add
repnz
mov
jmp
pop
adc
mov
imulb
adc
sbb
xor
push
inc
enter
fidivrs
xchg
outsb
fiadds
pop
loope
adc
cwtl
cmp
or
xchg
pop
and
sbb
in
and
push
lret
sbb
movsl
popf
and
mov
pop
insb
add
inc
dec
nop
cs
push
aad
jnp
hlt
ss
jne
mov
mov
jl
outsl
fisubrl
add
cmpsl
call
lods
lea
xor
out
cltd
mov
test
mov
rorb
call
push
js
pop
jns
adc
test
mov
jge
cmp
xchg
fwait
sbbb
dec
lea
dec
sti
xchg
cmp
sbb
mov
push
in
pop
cmp
xchg
jge
rcr
xchg
push
sub
push
mov
pop
mull
inc
fistpl
jns
sbb
add
gs
and
mov
stos
or
cmp
cmp
jecxz
shll
dec
add
and
in
xchg
add
call
lock
addr16
and
testl
xchg
xor
jle
fsub
in
test
xchg
mov
inc
cmp
fbld
add
push
adc
cmp
pop
pop
out
fisubs
int3
jmp
out
inc
lcall
cs
lock
mov
jmp
rcrl
or
imul
cld
inc
xlat
cmp
and
pop
adc
fisubrl
jg
sub
data16
lock
cli
fdivrl
ja
push
sahf
stos
outsb
leave
dec
inc
lret
pop
dec
jl
xchg
dec
ja
ret
dec
sub
loopne
in
cmp
addr16
bound
pusha
loop
in
sbbb
pop
test
and
loope
cwtl
sbbl
mov
hlt
adc
mov
xchg
leave
loope
fdiv
std
dec
out
pop
inc
lock
lods
xor
outsb
mov
inc
lds
inc
mov
xchg
out
jmp
and
pop
in
imul
push
insl
cmpsb
addr16
js
mov
scas
cmp
push
lahf
xor
fadd
movsb
ljmp
mov
dec
sub
fisttpll
and
jnp
loopne
stos
cmp
loopne
adc
lea
cmc
aam
inc
loopne
in
pop
push
hlt
xchg
pop
mov
inc
aas
pop
mov
mov
mov
xor
xchg
jb
mov
sub
test
sub
inc
cwtl
cmp
jne
stos
outsb
call
es
xor
sub
xchg
add
xor
and
mov
pushf
inc
iret
jp
nop
sbb
je
movsb
lds
das
das
imul
sbbb
pop
fwait
lret
xor
pop
mov
pop
lods
jge
push
lret
scas
aam
ds
rorb
xor
inc
mov
or
test
test
outsl
xor
loopne
mov
adc
repnz
out
in
adc
xchg
fcmovne
fcomp
adc
das
fidivl
mov
sub
jmp
jmp
hlt
cmp
leave
mov
lret
jo
mov
mov
ss
dec
call
mov
mov
add
fnstcw
addb
dec
pop
push
push
mov
fistpl
movups
shrb
rcll
xor
add
xchg
dec
xchg
cmpsl
xor
cmp
jmp
and
dec
addr16
mov
jge
inc
mov
sbb
fsubrs
ret
ja
lahf
pop
push
xchg
jp
xor
test
cmp
jbe
mov
push
insb
xor
fstl
aaa
pop
mov
jnp
add
int
pop
mov
movsl
sbb
mov
jmp
dec
inc
stos
leave
clc
cmp
ss
xchg
pop
and
dec
addr16
leave
out
mov
sahf
xor
mov
ja
out
lret
test
es
add
lcall
push
je
cmp
shlb
pop
ret
or
pop
cmpsl
adc
test
test
aam
jo
test
inc
pusha
xchg
jl
sbb
out
ja
loope
jle
loopne
push
mov
push
inc
inc
mov
into
shr
fs
cmc
testl
inc
push
leave
sbb
push
add
dec
test
ret
adc
fisubl
cmp
sti
cmp
lret
rorl
fcompl
jae
test
and
xor
jbe
sbb
xchg
in
call
cli
xchg
push
jns
push
shr
bound
push
testl
ret
js
push
enter
mov
cmp
lock
and
mov
adc
xor
iret
lcall
xchg
ss
mov
xchg
imul
mov
push
push
lock
add
cmp
das
xor
xchg
and
add
and
arpl
sub
cs
mov
xchg
js
and
add
notb
sbb
add
mov
pop
add
push
lods
mov
xor
mov
es
adc
fisttps
mov
in
scas
add
add
lahf
ficoms
sub
outsl
xchg
mov
jne
mov
notl
ficoms
lods
push
xor
push
repnz
mov
sub
jl
pop
movsl
rcrb
cld
pop
mov
cld
sbb
push
mov
subl
and
inc
daa
dec
insb
dec
out
cmp
add
into
testl
lretw
push
inc
push
adc
test
insl
mov
jmp
gs
cmpsl
loope
mov
sti
xlat
mov
iret
jp
cmpsb
or
rolb
cmp
mov
icebp
mov
addr16
cli
decl
ret
jmp
cs
test
cwtl
decl
push
adc
lahf
mov
popa
dec
jne
sbb
insl
sbb
xchg
xchg
sbb
scas
sti
dec
data16
scas
pop
into
pop
jge,pn
std
std
ss
pop
es
loopne
mov
mov
testl
aas
inc
mov
pop
jnp
movsl
adc
push
dec
ret
dec
data16
push
jbe
or
in
imul
adc
repz
mov
stos
and
ja
pop
xchg
lods
daa
mov
xchg
sbb
outsb
pusha
mov
jge
sbb
sub
mov
punpckhdq
mov
xlat
pop
imul
ljmp
popa
push
xchg
mov
fwait
or
and
les
lret
mov
imulb
les
mov
jne
stos
pop
aad
popf
adc
imul
ja
mov
sahf
ds
or
stos
dec
dec
xor
test
pop
sub
iret
inc
fiaddl
and
call
cmp
ror
sti
push
or
sbb
mov
repnz
push
cmp
xchg
or
mov
in
movsb
add
lods
pop
bound
dec
arpl
push
popa
js
repnz
xor
pusha
pop
les
dec
or
testl
bound
fwait
sbb
rcl
cmpl
mov
icebp
push
mov
mov
add
sub
push
insb
mov
xchg
mov
testb
push
lds
inc
psubb
jmp
pusha
insb
scas
add
bound
cmp
mov
lcall
push
push
mov
les
mov
cmpsl
jb
adc
ds
je
mov
xlat
in
push
fdivs
mov
jne
icebp
dec
nop
pop
cmp
ret
enter
call
test
rorb
add
shl
or
aad
adcb
cwtl
push
fildl
jge
loop
cltd
lret
jmp
imul
inc
rcrb
popf
mov
pusha
sarb
push
lods
and
fucomi
lods
push
call
mov
fstps
add
xchg
mov
test
loopne
fidivrl
frstor
cmp
pop
icebp
mov
popa
popf
cs
push
gs
jp
mov
aad
insb
jp
aam
lds
xchg
js
mov
imul
cs
pop
or
mov
aas
xor
popf
enter
xchg
push
lods
cmpsb
sub
fs
sbb
cmp
mov
add
sbb
sarl
pop
mov
seta
loopne
outsb
imul
lret
ret
ret
ds
jae
adc
lret
outsb
xor
repz
xchg
enter
add
stos
inc
mov
mov
xor
mov
ss
mov
out
push
mov
adc
cmpl
imul
cmp
in
mov
fmulp
cli
lret
cmp
pop
in
add
dec
cmpl
mov
jnp
push
test
scas
mov
mov
repnz
lods
push
xor
imul
mov
jno
push
sbb
and
fwait
jno
jge
dec
loopne
cmp
shlb
mov
pushf
fisttpll
lock
imul
push
xchg
sub
dec
loop
mov
cmp
test
mov
mov
ja
ja
mov
or
mov
bound
push
mov
sub
and
push
jo
sub
out
mov
lret
insl
mov
sbb
lock
adc
mov
test
fsubl
std
mov
xlat
push
mov
stos
inc
mov
xchg
aad
push
add
fs
and
ja
sbb
xchg
pop
inc
stos
out
lahf
and
xchg
mov
dec
mov
sub
lea
call
int
jo
aam
mov
popf
jmp
mov
and
adc
adc
int
aad
jbe
sub
lea
gs
sub
jb
pusha
pop
sub
lods
lods
mov
and
div
lahf
mov
xor
push
movsl
leave
pop
pop
push
jno
pop
pop
xor
xchg
mov
add
xchg
sarb
out
in
lahf
pusha
loopne
andl
mov
jecxz
fadd
or
xor
jbe
mov
lret
mov
jg
lret
dec
mov
rorb
insb
push
scas
in
popf
cmpsb
push
dec
rorl
dec
pop
pop
ret
pop
mov
inc
inc
repz
pop
loop
fsubrl
xor
fisubs
cs
mov
pop
icebp
js
rcr
mov
filds
xchg
out
insb
mov
out
ljmp
sub
test
lcall
sub
push
fiadds
addr16
mov
and
int3
cmp
inc
test
dec
and
test
dec
cmp
or
mov
push
pop
add
ss
mov
mov
loop
jg
xor
xor
push
scas
pop
sbb
sarb
dec
sbb
in
add
mov
mov
in
cwtl
aam
mov
jns
in
mov
insl
sub
cmc
daa
aas
test
push
movsb
xchg
fstpl
inc
test
push
jl
pop
pop
jmp
xchg
and
out
jnp
or
xchg
xlat
adc
xchg
rcll
cwtl
mov
sub
or
movd
outsb
std
push
mov
push
in
push
jle
lcall
stos
fistpll
ja
fcmovb
loope
enter
pop
insl
pop
ljmp
out
aad
hlt
and
cmp
jge
mov
popa
dec
jmp
push
movsl
mov
js
in
add
stc
xor
xor
sbb
xchg
cmp
push
pop
jno
lock
imul
dec
imul
or
es
punpckhwd
int
fisttpl
sub
mov
jle
test
cmp
neg
mov
sub
push
insb
jp
sbb
movsb
or
mov
in
xchg
sub
enter
dec
mov
outsb
not
xor
push
fstpl
adc
jl
cmpsb
call
push
dec
aam
jmp
lahf
and
lcall
mov
dec
dec
ficoms
jo
inc
ja
arpl
jmp
les
lret
sti
test
test
iret
mov
cmpsl
inc
adc
jmp
add
sahf
insl
lahf
push
cmpsl
jl
test
mov
jg
pushf
hlt
and
sub
ss
cld
mov
lods
jnp
lret
rclb
add
es
xchg
je
test
cltd
std
test
insl
push
mov
mov
push
sahf
inc
pop
hlt
fwait
dec
int3
dec
inc
icebp
mov
push
dec
sbb
das
cmp
mov
shlb
inc
fldl
mov
fistps
inc
inc
jnp
or
sbb
popl
pop
push
mov
cltd
lods
mov
out
rcr
ret
push
jge
loopne
into
xchg
scas
push
out
lock
sahf
std
pop
and
push
mov
stc
pop
sub
testl
cmp
xchg
cltd
ljmp
mov
add
addb
outsb
shrb
adc
pop
lea
lret
sbb
inc
add
popa
jmp
andb
hlt
inc
add
mov
mov
xchg
adc
jmp
ja
lret
stos
cmc
stos
jp
fbstp
loope
fisttpll
ljmp
push
dec
daa
gs
loop
imul
lock
mov
dec
mov
adc
lock
popa
ds
je
lahf
das
cmp
addl
and
mov
mov
add
push
jo
mov
aas
std
or
hlt
xchg
xchg
dec
gs
push
sbb
dec
in
or
jmp
jbe
shrl
xor
adc
ret
and
adcl
ror
hlt
repnz
push
sub
xchg
xor
pop
or
ljmp
xor
push
lods
push
loope
cmp
jbe
out
lahf
ds
ja
call
lret
mov
jle
jg
jb
icebp
pop
lock
popa
add
push
mov
popa
xchg
and
lcall
xor
lret
clc
icebp
mov
addl
stos
in
mov
mov
or
push
mov
sub
lret
pop
pop
cmp
test
sbb
xor
xlat
mov
add
adc
hlt
add
js
pop
jbe
xlat
cmp
andb
insb
jge
push
ret
leave
mov
sbb
pop
xchg
mov
imul
mov
out
cmp
inc
cmpsb
ss
adc
push
stos
jns
and
arpl
out
xor
aaa
adc
pusha
popf
mov
stos
fcoml
stos
xlat
rcrl
push
cmpsl
arpl
test
idivl
and
pop
dec
add
inc
into
jecxz
cmp
dec
jge
fwait
add
int3
pop
xchg
push
imul
cwtl
sbb
cld
stc
cld
add
into
repnz
ljmp
cmpsl
mov
test
xchg
mov
push
push
mov
lret
adc
out
scas
sarb
negl
push
js
xlat
sbb
addr16
loope
pop
and
aad
pop
mov
or
xchg
fxch
cmpsl
repnz
sbb
and
adc
mov
or
fidivrl
sub
mov
cmp
lret
or
ja
dec
or
int
lret
aaa
repz
stos
stc
sahf
mov
jp
sahf
lret
jp
hlt
rclb
loop
int
push
mov
or
aad
jo
adcb
add
rclb
inc
sbb
lahf
sub
mov
nop
add
pop
inc
xor
xor
repz
inc
inc
sti
mov
and
icebp
sub
es
xchg
aas
dec
xchg
bswap
jno
int3
dec
xchg
and
xchg
call
mov
fs
mov
inc
imul
add
pop
push
leave
stos
cmp
push
jo
movsb
ret
adc
mov
add
mov
sahf
jo
cmp
sti
mov
xor
adc
sub
int3
pop
pop
imul
ja
les
sahf
or
inc
call
jecxz
jne
movsl
pop
jg
call
scas
jb
and
ds
jge
lods
loope
movsl
fldl
shlw
out
xor
xchg
pop
pop
aas
scas
loop
or
dec
mov
int
inc
pop
and
sub
call
pop
fadd
sub
das
inc
adcl
es
aas
and
ret
or
mov
test
incl
stos
pop
add
or
into
xlat
scas
lahf
in
adc
sbb
sub
dec
mov
les
fildl
outsl
sbb
shl
insl
mov
fwait
or
and
sti
mov
inc
lcall
in
rclb
mov
in
ret
testl
leave
loop
pop
loope
xor
add
mov
bound
fcomps
shll
insb
jl
lods
mov
sahf
gs
jnp
inc
fisttps
mov
lds
imul
pop
xchg
in
jg
mov
mov
insb
lods
sahf
ret
xchg
or
xchg
daa
aaa
cmpsl
std
cmp
push
lea
sbb
mov
sbb
es
bound
add
jbe
sarl
push
repz
mov
and
popa
ficomps
pushl
cmp
nop
ljmp
loopne,pn
fists
cmpsl
std
xor
scas
jnp
aaa
jmp
lcall
or
hlt
pop
jl
mov
aas
leave
das
jge
lcall
cmpsb
iret
loopne
mov
ret
xchg
in
clc
cmpsl
push
or
or
and
cmp
sub
test
popf
aas
cwtl
xor
out
cmc
jge
or
int
incl
sbb
gs
mov
inc
ss
in
rorb
scas
nop
jo
mov
mov
pop
dec
movsl
mov
mov
stc
mov
jo
or
popf
push
sub
and
mov
jge
inc
aas
cmp
add
push
mov
xlat
adc
rorl
jb
rcl
xchg
enter
fprem
pop
arpl
sti
xchg
pop
js
push
hlt
or
mov
xchg
repz
mov
lret
andl
fimuls
add
inc
mov
js
int
cld
jno
pop
rclb
add
xchg
push
sub
cmp
les
ljmp
xchg
icebp
and
mov
lods
mov
dec
inc
jg
inc
dec
adc
pop
in
aad
adcl
lea
mov
xchg
outsl
push
add
jg
loope
jmp
fisttpl
jge
adc
sub
adc
mov
sub
push
push
test
aas
mov
add
ficoms
test
je
lret
mov
shll
or
pop
and
andl
lret
mov
nop
xor
repz
xadd
push
loopne
je
adc
jmp
into
aad
mov
test
jo
fwait
xor
xor
ficoml
mov
ret
xor
mov
ja
adcb
sub
add
mov
lahf
nop
es
je
out
leave
cltd
dec
in
pop
lret
jmp
ds
pop
ret
fcoml
xor
jp
out
dec
mov
fcoms
movb
xchg
pop
sar
int
out
push
aaa
push
popa
cmpsb
xor
mov
lahf
cmp
xor
pop
icebp
test
mov
lcall
mov
ss
xorb
push
jge
xchg
add
jp
cmp
outsb
mov
cmpl
test
mov
daa
adc
jmp
and
mov
wbinvd
jg
mov
jecxz
les
adc
loope
xchg
inc
mov
mov
jecxz
cltd
imul
mov
inc
mov
cs
lds
inc
pop
lcall
and
and
xlat
mov
shl
ss
pushf
jnp
sub
mov
bnd
insl
scas
mov
sub
cli
out
les
lea
ja
push
bound
je
or
fildll
repz
and
cli
mov
aam
pop
or
movsb
and
lds
std
gs
lods
lret
pop
xlat
cmp
adc
jmp
jne
add
loopne
lcall
mov
out
aaa
xchg
js
in
dec
xchg
ret
sub
jge
movsb
repnz
jecxz
mov
mov
mov
pop
stos
adc
jl
mov
jmp
ret
divl
daa
sahf
sbb
push
dec
cs
jnp
cmc
fistpll
add
mov
push
jns
xor
pop
pop
xchg
stos
fs
stos
xchg
stos
jp
shrb
sub
movsb
cmpsb
shl
sarl
inc
addb
or
mov
lret
sub
jae
jne
inc
and
in
maxps
loopne
jns
xchg
dec
mull
ficoml
mov
repz
add
inc
pop
test
cmp
cs
mov
jns
pop
fidivl
in
lret
inc
pop
and
fdivrp
in
cmp
mov
mov
sbb
lahf
decl
daa
subb
loop
rcll
adc
push
mov
jg
xchg
les
rcr
xor
sbb
mov
mov
in
cmpsb
dec
sbb
push
add
xor
enter
xor
push
scas
leave
pop
cltd
je
mov
cs
mov
mov
push
or
cmp
pop
dec
add
dec
xchg
sbb
push
pop
mov
push
and
bnd
lods
cmp
mov
es
and
repnz
lret
xlat
adc
ret
hlt
push
and
insb
pusha
lods
jbe
adc
push
sbb
mov
inc
jno
or
subb
testl
pusha
or
outsb
fidivrs
addr16
loop
add
cwtl
sub
ret
dec
test
das
loop
mov
les
sbb
jae
lahf
insl
push
push
sbb
mov
cltd
sub
nop
sbb
jle
scas
push
arpl
scas
add
test
or
inc
hlt
add
push
sub
add
sub
ret
xchg
cmpsb
cmp
ljmp
leave
xor
gs
div
jmp
sbb
mov
mov
jmp
aad
jo
movsb
data16
cwtl
inc
push
push
push
and
mov
jno
mov
cmpl
inc
cli
and
mov
aaa
jbe
mov
mov
lods
mov
xor
add
sbb
sub
out
sbb
ret
fcoml
push
bnd
lock
sti
ds
das
xor
icebp
out
das
and
inc
jbe
push
dec
jnp
mov
call
std
inc
push
xor
imul
add
mov
mov
or
xchg
leave
inc
push
or
outsl
push
insb
pop
imul
add
xchg
lahf
mulb
adc
xchg
lock
sub
enter
cli
cmp
gs
mov
xor
xor
mov
mov
arpl
lds
jg
lds
inc
dec
std
mov
sub
cmp
xchg
or
loop
lahf
adc
scas
lea
outsl
addr16
sti
xor
jle
xor
and
pop
insl
inc
push
pushf
jg
and
lods
mov
jl
das
sub
inc
jle
mov
lea
push
loop
xchg
inc
cmp
sub
mov
dec
jmp
cmc
push
sahf
iret
sbb
sbb
jle
xchg
out
cwtl
jmp
cmpsl
pop
lret
je
pusha
outsb
mov
inc
enter
cmpsb
push
ret
test
pop
xlat
adc
fwait
jp
xor
test
hlt
fildll
jne
add
xlat
sbb
movsl
shll
popa
jbe
mov
adc
ret
hlt
std
adc
push
and
cmp
dec
mov
stos
loop
xlat
out
mov
mov
mov
dec
cmp
lea
cltd
jle
dec
xchg
jge
mov
xchg
int3
push
lods
fists
and
cmp
out
lret
sar
mov
adc
in
sub
imull
push
cltd
es
push
rcll
push
mov
lcall
cs
hlt
dec
cld
fs
cli
push
aam
rcrl
pop
lcall
ljmp
adc
push
inc
fdivr
fadds
and
shlb
aad
mov
and
or
call
test
mov
cld
clc
pop
add
cwtl
add
mov
mov
jbe
push
out
jge
test
incl
lock
cmc
pop
and
aaa
lods
sbb
dec
stos
mov
push
das
ds
test
icebp
loopne
jge
or
sbb
das
mov
das
daa
cmc
js
fistl
jns
mov
xor
dec
inc
push
ja
lret
mov
or
xor
push
lods
aas
cltd
aas
or
adc
hlt
mov
push
sbb
mov
repz
cltd
pop
out
iret
mov
jp
inc
xchg
int3
inc
mov
loop
into
ja
jne
ror
push
mov
jo
and
jno
push
add
addr16
stos
rorb
icebp
pop
sub
cmpsb
jne
imul
imul
and
add
or
mov
and
adc
xor
ljmp
dec
mov
rorb
mov
xorb
popa
sbb
std
pop
xchg
test
daa
fidivs
dec
mov
lret
xor
cltd
mov
jp
xchg
xorl
lds
data16
jl
sub
mov
cmpsb
sbb
push
adc
ljmp
push
sbb
jno
sub
lahf
in
stos
imul
test
lahf
or
mov
mov
mov
imull
mov
cmp
jg
scas
aaa
xchg
lods
sub
pop
lret
in
and
xchg
pop
lods
cld
rcr
div
inc
mov
imul
aaa
outsb
bound
push
hlt
push
not
mov
lods
sti
xrelease
dec
pop
je
push
dec
jae
cmp
cmc
in
mov
cli
dec
jns
pusha
loop
cmp
ja
ficoml
inc
push
mov
cmpsb
cmp
dec
mov
mov
loopne
loopne
fstl
dec
jbe
cmpsl
jne
stos
jmp
push
call
divb
loop
add
xchg
addr16
in
sbb
mov
mov
aaa
in
stos
xor
mov
in
outsb
or
in
aaa
bound
mov
sahf
cld
lds
mulb
arpl
repz
test
mov
add
adc
jp
dec
add
pusha
scas
adc
rcrb
xor
bound
lcall
push
pop
adc
cmpsb
pop
or
sti
push
ljmp
dec
fcmovnu
xchg
and
pop
push
cmpb
std
push
into
ja
test
xor
sub
ret
xor
add
xchg
pop
dec
or
outsb
loopne
lea
sahf
push
cmpsb
xor
test
ds
out
ljmp
push
and
dec
push
xor
aam
push
enter
jnp
hlt
ret
ret
loope
pushf
popf
ljmp
and
lcall
add
jle
jle,pt
add
xlat
cmp
mov
mov
dec
loop
in
xchg
or
cmp
out
jmp
add
push
sbb
pop
pop
test
pop
jns
mov
enter
xchg
mov
cld
sub
mov
iret
int3
dec
rclb
fimull
test
pop
xor
push
lds
sub
mov
mov
out
jbe
icebp
jp
jmp
pushf
mov
fxch
std
je
insl
daa
mov
inc
jg
push
add
inc
jl
bound
gs
or
aad
jl
xor
ret
jp
scas
jb
out
test
call
mov
fsubrl
int3
shlb
dec
aam
mov
call
cmp
jnp
cmp
les
gs
jmp
fcmovnbe
sbb
hlt
pop
and
push
std
in
sub
rcll
loop
lods
pop
inc
idivl
xlat
add
pop
xor
fldl
loope
xor
xor
push
lret
xor
fsts
xor
hlt
pop
jno
xor
sbb
pop
xchg
popl
fwait
push
mov
and
fs
lods
push
add
add
les
outsb
imulb
test
cld
cltd
mov
inc
out
and
push
cmp
mov
shrb
cwtl
pop
xchg
add
rcrl
xchg
lock
movsl
mov
sti
adc
inc
cmp
std
jge
add
cltd
push
in
mov
and
pop
scas
pusha
mov
xchg
mov
xchg
test
aam
pop
jg
mov
shll
in
js
add
in
pop
js
mov
fldl
inc
mov
dec
out
cli
mov
icebp
ret
add
cmp
pop
sahf
mov
orb
xchg
shll
sub
aam
test
xor
mov
insl
sbb
outsl
pop
icebp
cmpsl
sub
gs
shrb
nop
aad
sub
sub
fcmovnu
inc
xchg
mov
mov
cwtl
jmp
leave
scas
sbb
cmc
and
mov
fimull
addl
mov
cs
arpl
mov
aas
stos
sbb
pusha
push
idivb
lods
or
sbb
push
clc
xchg
cs
jo
xor
out
call
inc
rcll
xor
jmp
pop
dec
jecxz
dec
mov
fcomp
and
xchg
cwtl
sbb
je
push
shr
sub
dec
jae
push
xchg
rorl
lock
fs
sbb
js
popf
fldenv
jecxz
mov
idivb
mov
in
pop
nop
add
fcoms
xchg
lods
movsb
pop
pop
xor
or
jmp
and
jbe
xchg
lock
dec
aas
pop
add
mov
mov
insb
push
fs
mov
ficompl
lret
xchg
clc
inc
cltd
sub
mov
push
add
dec
sub
out
pop
mov
xor
in
xchg
stos
loopne
bound
in
or
jb
dec
leave
pop
jg
mov
xor
push
dec
mov
jle
mov
push
lret
push
das
and
test
and
fiadds
dec
pop
rcr
adc
cmpsl
icebp
sub
mov
inc
inc
push
fistpll
mov
mov
fcoms
jno
lret
mov
sub
sub
sub
sbb
dec
xor
cwtl
jle
mov
xchg
jcxz
jo
pop
mov
test
xchg
mov
jle
push
aam
mov
cmpsb
jmp
cmc
in
out
mov
dec
cmpsl
lret
push
adc
sti
imul
jge
mov
adc
and
jno
and
xor
mov
fldenv
adc
out
inc
aas
in
sbb
je
push
sti
adc
pusha
cs
xorl
cmp
inc
and
dec
les
and
dec
add
cwtl
jmp
test
shlb
xor
or
dec
andl
outsb
test
mov
cmp
enter
sbb
ds
or
or
inc
insb
je
sbb
jno
fadds
js
out
xchg
jns
in
dec
or
in
and
pop
insb
mov
inc
dec
or
inc
mov
xor
rcrl
add
rorl
dec
xchg
xor
insl
jge
pop
inc
ficoml
mov
cmp
sub
daa
dec
mov
leave
insl
movsb
scas
mov
or
mov
repnz
jmp
xchg
push
movsb
xchg
arpl
int
or
inc
sub
mov
mov
int
daa
movsb
cmpsb
jbe
shrl
xchg
clc
stos
shll
mov
fcomps
mov
add
xchg
and
call
aad
mov
out
frstor
rorb
cmp
lods
push
clc
roll
lret
xor
inc
stos
jno
sub
pop
stc
shrb
ret
xchg
jo
idiv
jge
cli
testb
enter
bound
inc
add
in
test
mov
mov
mov
shlb
stos
test
jbe
dec
stc
sub
add
leave
push
sub
xchg
popf
stos
stos
pop
push
pop
mov
mov
push
jge
inc
fnstenv
pop
pop
or
sub
jmp
stos
mov
lods
aas
pop
stc
fldl
sbb
sub
push
jmp
sub
fwait
lock
lret
mov
or
aad
jmp
scas
rorl
in
xchg
ss
xlat
ds
out
mov
xchg
imul
testl
test
xor
push
and
popa
lcall
dec
cli
dec
rol
mov
stos
jnp
movsl
clc
jge
clc
cwtl
inc
jne
popf
mov
inc
outsl
xor
out
je
fwait
add
ret
and
mov
push
fs
mov
push
cld
sbb
mov
cs
pop
aas
lcall
sbb
and
cmp
jg
cld
std
jle
test
and
mov
mov
add
int
cmc
leave
push
jecxz
nop/reserved
pusha
leave
es
adc
xchg
jo
jecxz
jge
aam
push
xchg
xchg
mov
or
inc
inc
sub
add
aaa
out
mov
jns
cwtl
adc
movsb
out
outsb
mov
sti
pop
sbb
jnp
mov
or
shlb
lods
mov
imul
pop
cmp
psubb
dec
mov
dec
inc
inc
xor
aaa
sub
push
daa
and
mov
inc
push
lcall
jle
mov
in
mov
inc
shl
in
add
outsb
into
neg
push
mov
add
or
loopne
rolb
aaa
cmp
lret
xor
aaa
cmpsl
pop
fists
xor
and
dec
in
jne
ljmp
fidivrl
test
cli
push
dec
xchg
pop
aad
fs
inc
mov
stos
out
cmp
adc
add
push
loopne
push
inc
lods
xorb
aas
sbb
fwait
jge
int3
aam
movl
nop
outsl
data16
push
cmc
ja
aad
outsl
mov
cmpsb
cmpsb
mov
xchg
inc
or
add
xchg
sbb
sub
gs
cmp
sbb
mov
xor
pop
dec
repnz
mov
je
xor
dec
jno
jp
mov
sbb
jl
in
es
lods
mov
nop
push
fsubrs
inc
jle
out
push
inc
xor
mov
jmp
mov
cmp
loope
repz
add
test
movsb
fsubrs
and
std
out
movsb
bound
pop
and
cmc
test
mov
jne
xchg
mov
stos
sbb
popf
jmp
je
adc
loope
jnp
call
sub
bsf
cs
adc
out
stos
fdivrs
pop
scas
aaa
insl
mov
mov
mov
in
xor
clc
mov
xchg
shlb
dec
push
test
mov
fcoms
test
dec
aam
adcl
shrb
ret
lods
add
vpor
xor
incl
mov
dec
xor
pop
les
pushl
movsl
fstps
inc
out
mov
stos
jp
push
inc
xchg
rcll
dec
loopne
in
xor
and
mov
repz
mov
shrl
fisubs
dec
add
jl
rorb
pop
dec
mov
mov
sarb
pop
xchg
lret
cmc
mov
ss
fcmovu
jae
or
inc
inc
inc
pop
stc
adc
push
push
loopne
fcompl
jge
xor
pusha
rclb
sub
sbb
xchg
jo
hlt
movsl
hlt
sbb
imul
sub
gs
adc
push
inc
lcall
or
mov
enter
cmp
inc
or
and
jecxz
adc
addb
lds
ja
xor
ss
add
mov
scas
mov
aad
sbb
xchg
mov
or
pop
adc
add
jle
push
dec
dec
sub
mov
xor
loop
scas
xchg
shlb
push
xchg
sbb
xor
add
fistps
jns,pn
shll
iret
fwait
inc
or
or
dec
push
fdivl
pop
mov
or
mov
mov
pushf
push
push
dec
fildl
es
or
inc
and
andl
ss
push
dec
sbb
push
mov
int
inc
in
ret
sahf
xchg
stc
cmpsl
cmp
out
push
or
adc
aaa
mov
rorl
push
enterw
loope
les
rolb
lds
add
sbb
inc
stc
jecxz
mov
stos
mov
cmp
ret
gs
jecxz
je
dec
aam
adc
in
pop
dec
or
add
dec
xor
xlat
cmpb
mov
int
loop
sti
popw
mov
mov
xlat
adc
orb
and
insb
int
lret
popa
sub
outsl
xor
jp
push
adc
rcl
jg
fisubrs
pop
data16
push
inc
adc
dec
jl
xor
pop
push
xor
jno
lea
and
and
and
inc
movsb
adc
jg
das
loope
push
sbb
inc
xchg
inc
es
jmp
or
cmp
xchg
dec
int
ljmp
dec
loope
fmuls
cmp
cmc
xchg
jg
cmp
cwtl
fsubrl
leave
das
xchg
and
xor
ret
aam
dec
mov
rorb
pop
xlat
repz
sub
lcall
sub
std
mov
adc
lods
xor
add
outsb
cmpsl
in
lret
sub
adc
mov
movsl
xor
fcomps
sbb
jne
bound
daa
jo
loope
fnsave
inc
xchg
inc
mov
imul
fcomi
dec
rcll
xor
push
imul
jnp
mov
xchg
scas
push
lret
rcrl
or
stc
dec
mov
jmp
inc
jmp
add
mov
xchg
lock
inc
pop
inc
popf
loopne
or
scas
xor
push
xchg
xor
mov
ja
aas
dec
xor
push
stos
xchg
std
push
inc
addr16
mov
icebp
xchg
and
lret
lret
aas
jl
mov
jge
pop
mov
mov
loope
and
lds
xchg
pop
xchg
out
les
mov
adc
add
cltd
push
mov
imul
adc
pop
ffreep
xlat
sbb
jmp
mov
push
fwait
test
fs
aas
hlt
add
gs
das
jge
mov
scas
inc
out
lcall
jno
dec
icebp
cmp
imul
cwtl
pop
stos
xlat
and
add
inc
lea
call
inc
outsl
test
jge
sub
roll
lahf
push
test
ljmp
test
sbb
addr16
in
rsm
orb
pop
adc
lahf
xor
dec
or
fiaddl
cmpsl
clc
xchg
subb
mov
gs
fldenv
add
repnz
call
mov
mov
loope
rcll
or
dec
fidivrl
cmpsb
xorl
cli
mov
mov
mov
mov
ja
popa
lock
pop
repnz
in
mov
imul
inc
int
adc
test
mov
mov
out
fwait
dec
mov
xchg
cmpsl
fcompl
or
outsb
add
enter
jbe
sub
cmp
dec
lahf
mov
or
scas
sub
push
clc
iret
clc
sbb
sub
mov
fsubrs
imul
mov
dec
loope
das
mov
mov
inc
or
dec
iret
loop
movsl
sti
sbb
lods
mov
std
jno
cmp
lcall
cwtl
push
aad
jbe
cltd
dec
and
stos
bound
scas
pop
sbb
inc
pop
mov
push
js
nop
and
jp
scas
jb
mov
inc
aam
mov
sbb
xor
xchg
lahf
pop
lods
and
jecxz
nop
inc
adc
dec
sub
push
cmp
inc
into
add
xchg
lahf
push
mov
lea
je
shrb
push
mov
enter
movsb
sub
mov
push
xor
mov
mov
jecxz
xor
xor
dec
adc
test
jne
rcl
pop
sbb
in
sub
lods
xor
cld
out
mov
jg
loope
sub
ret
out
or
ds
dec
cmp
psubw
int3
sub
aam
pop
mov
in
je
int
scas
and
data16
out
add
in
adc
pop
mov
pop
shll
jne
pop
jge
jg
inc
inc
jp
jp
lret
popa
mov
out
cmpsl
lock
jge
cld
mov
sub
fs
jmp
lahf
repz
stos
mov
xor
imul
loope
es
jne
mov
dec
jg
pusha
imul
clc
push
in
lcall
faddp
pop
adc
inc
mov
xor
xor
push
fst
loopne
jb
imul
add
sbb
cli
mov
cmpsb
sbb
sbb
mov
testb
imul
cmpsl
aaa
test
shl
cmp
add
jp
add
jbe
shr
popf
add
iret
jge
test
mov
xor
out
std
popa
dec
gs
lahf
in
xchg
xchg
sub
faddp
addr16
xchg
lret
jns
xchg
mov
mov
adc
lcall
jne
je
scas
andb
in
sub
inc
or
add
in
cltd
pop
add
popf
xor
adc
fisubrl
xchg
imul
in
aas
in
cwtl
push
lret
jecxz
in
loop
push
lret
orl
sbb
jg
sub
icebp
xchg
pop
lret
test
push
or
inc
xchg
lret
adc
adc
enter
sbb
frstor
clc
ret
mov
jp
cld
xchg
dec
sti
xor
jmp
and
jo
push
dec
nop
lret
xchg
scas
dec
in
mov
ja
je
loopne
xor
pop
repz
push
in
dec
mov
mov
push
jle
fdiv
xchg
sbb
or
js
dec
pop
repz
sub
xchg
xchg
sub
cmp
ds
bound
cmp
mov
scas
xchg
fidivl
fsub
xchg
cmp
mov
adc
cmpsb
pusha
imul
sub
leave
adc
and
and
xchg
inc
or
xchg
xor
fdiv
mull
mov
hlt
mull
inc
out
sbb
rcrl
lahf
cwtl
sbb
xorl
int
pop
int3
into
shlb
jo
fcom
gs
scas
cltd
xor
fldt
pop
cmpsl
ficompl
loopw
mov
aam
mul
push
push
rcll
aam
sbb
lcall
std
ret
and
out
popf
pop
es
imul
loop
add
mov
pop
jo
cmpsl
fnstcw
mov
inc
addb
imul
xchg
inc
and
xor
lods
sti
pushf
xchg
lcall
fcomi
fs
faddl
ljmp
jnp
rcr
inc
stos
mov
dec
add
mov
xchg
cwtl
and
ret
out
pusha
test
test
adc
push
ljmp
out
out
mov
dec
pop
adc
daa
aaa
cs
lods
ds
jg
in
xchg
lret
cmp
sti
dec
outsb
test
jl
repz
jo
lods
or
mov
add
xchg
xchg
jb
rorb
adc
pop
mov
sub
sub
xchg
cmp
insb
xor
aaa
pushf
xchg
push
ss
inc
dec
push
inc
addr16
sbb
sbb
daa
cmp
iret
sub
cltd
std
loop
fnstenv
pop
xchg
repnz
loope
or
push
and
pop
pop
hlt
mov
jle
andl
mov
cmp
insl
mov
loopne
scas
mov
nop
dec
add
dec
mov
loop
lea
lods
ja
or
loop
data16
jecxz
aad
out
cmpsb
arpl
mov
cld
mov
out
test
int
cmp
ja
dec
enter
popf
push
inc
push
data16
add
lods
bnd
xor
out
mov
shr
push
push
sbb
aad
and
xchg
mov
into
mov
jnp
mov
cmp
xchg
mov
mov
inc
push
iret
pop
add
inc
pop
sbb
test
fisttpl
add
xor
cmpl
movsb
mov
xor
sbb
push
ja
mov
fimull
cmc
pop
pushf
sub
sbb
mov
shl
xchg
stc
xchg
es
xor
sarb
adc
sti
or
jg
sti
insb
inc
jnp
fcomps
sbb
in
inc
out
insb
rcrb
inc
xchg
push
fldenv
lcall
shll
sbb
not
xchg
sbb
push
or
sub
adc
outsb
ficoml
sub
push
cmc
inc
sub
test
jg
or
add
dec
push
mov
call
xor
mov
mov
insb
stos
out
shl
aad
pop
jle
mov
add
cli
test
stos
sbb
sbb
add
stos
ss
lods
jnp
push
fimull
jb
cwtl
jge
dec
dec
xor
inc
and
aaa
mov
and
mov
mov
out
or
aad
and
sbb
mov
xchg
lea
inc
in
xor
arpl
jl
leave
idivl
iret
push
push
ja
call
pusha
mov
aaa
ss
pop
sub
filds
push
aam
and
insl
popa
jb
es
mov
loop
inc
pushw
outsl
mov
pop
enter
mov
stos
mov
rcr
jbe,pn
jge
or
xorb
xchg
rclb
jns
sbb
hlt
das
mov
xchg
push
dec
sbb
sbb
add
gs
inc
ret
xchg
int
sbb
pop
jmp
mov
rcrb
mov
or
shrb
push
mov
jecxz
and
adc
mov
out
sub
pop
mov
dec
sbb
cmp
fld
mov
push
dec
sub
mov
cmp
pop
ja
dec
int
xchg
lea
std
pusha
sbb
dec
jae
in
and
roll
lock
js
cltd
popa
lea
arpl
cvttps2pi
sub
test
pop
mov
popa
pushf
xchg
mov
xchg
aas
xor
mov
lods
orl
jmp
cmpsb
stos
pop
gs
mov
out
sbb
loope
jnp
and
adc
xchg
dec
mov
dec
int
push
jge
dec
adc
or
lock
out
mov
fbld
int
in
enter
pop
push
cmovnp
fwait
nop
lds
out
call
dec
inc
cmp
mov
sub
mov
cwtl
jbe
sbb
int3
jbe
inc
enter
ret
xchg
jae
add
pop
shlb
gs
jbe
lock
insl
inc
pop
lock
dec
xchg
icebp
rcrb
loop
sub
dec
sub
cmp
adc
pop
inc
rcl
jnp
aaa
in
negb
and
addr16
push
dec
mov
xor
sub
mov
jae
clc
je
shll
jg
sbb
push
mov
pop
pop
ss
pop
or
in
xor
xor
mov
mov
mov
leave
inc
loop
push
push
fiadds
lods
push
cmc
jb
mov
sbb
rclb
jno
inc
in
cmp
add
mov
xchg
pop
push
mov
fisttpll
dec
les
adc
gs
cli
imul
out
jp
test
and
test
ss
add
xor
push
fcomps
mov
test
and
out
lret
mov
fnstenv
sbb
mov
adc
adc
arpl
mov
lcall
movsb
mov
jmp
clc
jbe
cld
mov
sarl
jnp
inc
jecxz
or
xor
push
push
daa
ljmp
sbb
adc
cmpl
pop
popf
mov
or
push
xchg
ss
xor
pop
sub
lea
cmp
scas
and
leave
sbb
push
jge
inc
xchg
push
pop
dec
push
inc
xchg
push
movsl
fiaddl
outsl
lods
icebp
mov
aas
movsb
xor
cmp
pop
jns
lods
fs
cmpsl
sub
and
and
loopne
in
jns
dec
xchg
xchg
jge
ret
stc
sti
inc
and
cmp
addl
dec
addr16
push
xchg
jp
scas
xchg
cmp
adc
jo
mov
lahf
add
orb
imul
shlb
fucomp
adc
ljmp
jb
adc
mov
mov
lds
jnp
dec
dec
sarb
sbb
xor
pop
rol
rolb
icebp
mov
out
mov
add
mov
mov
lds
and
pop
inc
outsl
in
lea
pop
inc
xchg
xor
sbb
cmpsl
push
test
xchg
lods
daa
mov
sbb
out
push
xchg
outsl
push
pop
data16
jns
in
mov
mov
cld
jne
sbb
dec
inc
or
xor
push
xchg
fwait
jle
aam
loope
frstor
cmp
movsb
mov
xor
insb
into
cmp
pop
mov
test
dec
in
out
xchg
cmp
fs
sbb
lret
bound
out
ss
popf
int
mov
xchg
out
mov
enter
pop
sub
pop
pushf
cmp
outsl
jae
ret
mov
mov
mov
pop
scas
xchg
mov
add
in
fldt
test
test
orb
stos
loopne
lds
mov
notl
test
js
outsb
movsl
fisubl
clc
out
stc
sbb
push
outsb
mov
pop
cmp
push
and
and
cmc
mov
pop
in
xchg
jecxz
test
pop
je
std
out
and
xchg
rep
inc
and
loopne
add
mov
into
gs
adc
and
mov
outsb
mov
cmpsb
mov
mov
xor
fsubs
push
clc
push
sbb
or
jno
mov
imulb
xchg
push
fadds
mov
sbb
jecxz
std
cmp
ljmp
xchg
pop
jns
cld
dec
bound
clc
adc
push
push
sub
pop
outsl
cltd
and
and
xlat
aam
jl
mov
in
sub
into
adc
add
enter
es
scas
push
jb
and
adcb
mov
mov
daa
ficomps
andb
in
mov
xor
or
cli
sbb
add
push
xchg
sub
adc
ja
jae
mov
mov
out
popa
or
insb
add
cmp
shlb
cld
mov
fnstenv
xor
lods
rorb
lcall
mov
xchg
cmpsb
in
dec
mov
or
dec
mov
scas
xchg
jge
stos
stos
cmpsl
or
add
mov
jns
rol
jmp
lea
int3
mov
cwtl
mov
outsl
fwait
or
push
iret
cmp
jbe
jno
sub
xchg
dec
dec
fidivrl
bnd
push
sahf
out
sub
xchg
cld
cs
or
or
pop
fists
jg
add
pop
test
mov
cmp
imul
pop
sbb
jnp
mov
sarb
mov
cs
adc
mov
xchg
adc
mov
fwait
cli
dec
push
jg
fdivs
rolb
jbe
imul
insb
out
out
xor
or
lock
jecxz
cld
pop
add
and
out
hlt
lret
loop
cmpl
mov
mov
cmc
lret
js
mov
inc
mov
call
imul
dec
and
jb
loopne
xor
jmp
mov
xor
or
movsb
pop
pop
adc
inc
int
sbb
or
mov
lea
dec
ja
sbb
pop
test
lock
mov
scas
mov
fucomip
push
addb
adc
cld
je
push
xchg
insb
into
dec
push
popa
enter
add
loope
mov
insb
fiaddl
xor
rolb
fnsave
xchg
stos
add
or
push
shlb
fbstp
mov
in
adc
jg
and
mov
popa
call
popa
cltd
ret
and
mov
data16
je
lahf
dec
xchg
mov
enter
push
push
aas
aaa
push
fs
mov
fcoml
adc
scas
scas
aam
push
and
cmpsl
mov
lock
dec
lahf
das
xor
inc
adc
clc
mov
cmp
and
repnz
aas
scas
aas
mov
push
fidivl
sub
jecxz
mov
or
shrl
or
pop
insl
dec
aam
std
out
aas
loop
xchg
lret
dec
xor
mov
jmp
cmpsb
xor
pop
sbb
jo
int3
dec
scas
mov
push
popa
mov
into
icebp
pop
fidivrl
imul
aaa
mov
bound
test
mov
lods
mov
jb
mov
dec
into
lods
in
xor
nop
in
aaa
out
fs
repnz
subl
notl
repz
fdivs
xchg
scas
xchg
clc
mov
xor
xchg
test
xchg
sbb
xor
mov
scas
sub
sub
sbb
shll
mov
pop
push
add
push
fsubrs
scas
ret
cmp
das
mov
in
sbb
xor
out
loopne
aad
test
pusha
arpl
xchg
xor
jbe
roll
ficoml
add
aad
lods
push
out
push
pop
mov
enter
mov
call
jle
dec
out
cmp
and
xor
ret
dec
popa
xlat
cmp
in
sbb
lret
mov
daa
loop
mov
adc
mov
cmp
insb
and
cmc
jae
mov
xor
lret
movsl
xchg
and
ljmp
or
cs
insb
sbb
lcall
cmp
inc
out
jle
or
insb
or
push
hlt
pop
push
inc
inc
push
rorb
les
flds
xor
test
xchg
dec
clc
out
xor
movsl
iret
pop
loop
mov
cli
neg
aaa
in
dec
jo
mov
and
outsl
mov
inc
fsubrl
xchg
mov
dec
jl
lds
scas
js
mov
xchg
fsubrl
pusha
dec
add
xor
call
xor
adcl
lahf
mov
mov
mov
sbb
push
mov
dec
add
xlat
jmp
cs
pusha
cmp
jle
in
mov
nop
pop
lods
jo
push
jnp
mov
stc
lods
data16
sbb
cmpl
fstpl
lret
mov
or
jae
xchg
daa
sub
int
ret
insb
fmuls
pop
push
push
xchg
cmp
cwtl
fldcw
ljmp
repz
cmc
mov
add
out
adc
stos
arpl
int3
pop
lea
jmp
popf
mov
ds
adc
mov
popl
add
jg
ljmp
mov
dec
sub
out
movsb
addb
imul
inc
or
test
dec
cli
outsl
xchg
push
std
mov
add
je
xor
in
lock
dec
cmp
xchg
rorb
popa
hlt
push
adc
loop
sbb
cmp
and
push
push
mov
rcrl
call
in
bswap
jmp
subl
lea
mov
adc
dec
ds
inc
notb
jo
pop
scas
cmp
test
out
jns
in
loop
popf
ret
cmp
dec
jns
test
out
adc
pushl
sbb
adc
fwait
enter
xchg
stos
cmp
ja
mov
jl
xadd
push
mov
fucomp
push
sbb
inc
and
popa
add
loopne
sbb
shlb
push
xchg
jmp
pop
add
cmpsb
adc
xor
aas
jge
imul
fsub
rolb
in
pop
loope
xor
xchg
mov
enter
inc
jno
decb
jae
jecxz
pushw
dec
pop
divl
jnp,pn
add
in
dec
push
scas
mov
outsl
das
imul
iret
das
xchg
sbb
mov
push
pop
cmp
test
clc
mov
mov
orb
outsb
stc
add
clc
sub
dec
cs
push
sahf
jge
xor
movsl
mov
dec
push
int
fisttpll
stos
call
lret
enter
stc
inc
dec
outsl
andb
stos
cmp
pop
ficoml
push
ds
jb
cmp
jp
cmpsl
stos
stos
fnsave
mov
mov
loop
pop
out
and
int3
jmp
cmp
fdivr
out
push
testb
push
enter
pop
mov
divb
mov
push
sbb
push
sbb
mov
jae
gs
sbb
mov
jnp,pt
and
add
orb
test
xor
mull
fldcw
mov
sar
rol
xchg
fimuls
xchg
cmp
jle
cs
sub
add
hlt
and
dec
imul
mov
ss
ret
fnstcw
insl
xor
in
xor
adc
and
icebp
lret
packsswb
mov
jge
cmp
notb
xlat
adc
leave
fwait
das
scas
mov
in
xor
inc
and
pop
inc
rcrb
sub
movsl
adc
into
sbb
lock
lret
sub
popf
sbb
sbb
jmp
repz
aas
arpl
aad
stos
mov
xchg
xor
out
mov
mov
pop
in
cmp
xchg
xor
mov
mov
dec
dec
stos
ds
sbb
out
mov
aaa
je
cwtl
pushf
jge
popf
sub
add
mov
addr16
add
push
bound
in
int3
sbb
inc
nop
add
inc
imul
out
imul
mov
mov
ljmp
fistl
mov
fcoml
mov
jge
mov
repz
xor
pushf
add
ja
sub
fnstcw
xor
push
push
mov
xchg
int3
mov
xor
xchg
or
or
sahf
clc
mul
sbb
lcall
push
lahf
inc
je
mov
lahf
hlt
sbb
mov
dec
xchg
push
lcall
fisttpl
lods
scas
outsb
mov
add
scas
xor
jbe
adc
hlt
outsl
push
or
push
repz
in
les
add
mov
lods
xor
mov
fdivrl
adc
pop
dec
cld
mov
dec
jmp
sub
ret
adc
jle
xlat
push
out
dec
jns
rcr
xchg
imul
mov
hlt
outsb
pop
in
fnstcw
int
inc
sahf
stc
mov
cltd
mov
mov
sbb
xchg
stos
testl
pop
xchg
mov
mov
sbb
aad
popf
dec
mov
insl
or
sbb
jno
mulb
in
dec
ss
roll
or
test
repnz
call
test
jle
jl
and
insb
rcrb
scas
push
xor
pushf
outsb
repnz
dec
adc
nop
mov
jl
cmc
push
js
popa
int3
cwtl
sbb
push
mov
xchg
adc
scas
lock
sbb
rolb
jmp
inc
aad
adc
mov
jnp
cld
xor
jb
pop
mov
lds
mov
cltd
lods
lock
fiaddl
and
call
mov
scas
popf
je
flds
ds
sbb
mov
xor
ja
scas
addr16
out
adc
mov
sub
je
jle
jo
and
imul
add
cmc
mov
jg
movsl
xlat
adc
out
das
aas
or
lods
ficomps
push
push
call
xchg
fisttpl
xchg
xor
fwait
repnz
pop
imul
dec
or
test
mov
xchg
stos
test
xlat
xor
test
inc
in
adc
iret
xchg
xchg
mov
and
mov
movsb
add
ror
mov
shrb
inc
push
pop
mov
pop
xor
mov
adc
inc
and
out
cltd
addb
xor
fcoms
adc
dec
test
in
pop
push
jno
lods
clc
rolb
xchg
dec
push
mov
inc
push
ljmp
cltd
adc
js
pop
mov
mov
pop
lret
movsb
mov
push
loopne
mov
out
dec
sbb
dec
loopne
stos
or
lahf
popa
jnp
loop
pushw
les
dec
aam
lahf
cmpsl
dec
stc
mov
notb
pop
mov
mov
cmp
lods
xor
push
sbb
cmp
sbb
mov
shll
jl
xchg
push
mov
int
dec
cmpsl
xor
adc
mov
dec
jmp
ljmp
pop
push
dec
je
loop
cld
mov
mov
pop
adc
fisubl
xor
add
lret
out
xor
lahf
lock
testl
xor
dec
iret
xchg
sbb
inc
pushf
pop
daa
jne
sbb
push
xor
stc
rorb
jmp
mov
mov
pusha
cmpsl
or
lret
mov
mov
jae
out
mov
add
and
ja
in
push
mov
pop
ja
cmp
jge
mov
mov
mov
xchg
in
insb
cmp
rcr
mov
push
loop
fidivl
fstpt
inc
fldt
das
xor
mov
adc
mov
dec
pushf
je
xchg
mov
sub
and
fcoml
xor
jge
out
sbb
sbb
sub
mov
adc
sbb
jge
fisubl
push
and
add
jo
add
ficompl
mov
rcll
push
lret
pop
es
bound
ss
or
mov
out
in
or
dec
fldt
jle
mov
jl
hlt
pop
call
stc
aaa
stc
cltd
sbb
hlt
in
xchg
pusha
and
xorl
lock
push
cmpsb
and
push
subl
xor
jmp
xchg
fstpt
fnstcw
or
dec
scas
testl
testb
out
enter
iret
xor
outsl
clc
jp
shll
xchg
xor
cmp
stc
call
mov
cmp
cld
subl
sahf
and
mov
add
stos
ud2
mov
adc
mov
sub
xor
dec
div
cmp
adc
mov
repnz
push
push
dec
jbe
cli
jge
xor
fisttpll
dec
mul
enter
pusha
loopne
xor
push
cmp
cltd
mov
test
adc
mov
pop
pop
scas
sub
and
test
into
gs
jmp
push
fildl
or
sbb
cmpsb
mov
mov
in
push
fmuls
and
ficoms
lds
xlat
mov
aam
flds
negb
push
push
xchg
cmpb
mov
mov
jge
loopne
stos
ret
lock
pusha
fsubs
ficomps
aaa
hlt
ret
xor
sti
dec
push
xchg
adc
mov
inc
es
xchg
mov
pop
mov
sub
sbb
in
push
push
or
aad
outsl
fwait
inc
pop
ja
call
insl
cli
push
xchg
dec
add
push
push
loope
iret
imul
cmp
dec
mov
xor
or
dec
pop
ret
push
ja
fcoms
cli
pop
addr16
inc
pop
or
in
aam
dec
inc
push
cmc
gs
repz
dec
popf
test
into
es
jnp
out
rcrb
imul
xchg
jns
movsl
leave
pop
cwtl
dec
and
popa
fucom
daa
dec
inc
icebp
push
iret
cmc
add
cltd
lea
mov
lods
iret
cmp
aad
mov
cli
lods
push
dec
mov
into
scas
pop
pop
push
dec
popa
inc
sarl
daa
sbb
sbb
push
xchg
iret
push
pop
call
imul
xchg
ret
and
xchg
mov
je
and
das
dec
pop
ss
cltd
pop
int3
push
popf
int
push
sub
not
cs
fmull
xor
mov
lcall
mov
sub
dec
test
mov
ljmp
bound
mov
test
pusha
nop
mov
nop
push
fwait
mov
xor
adc
inc
inc
dec
dec
push
or
fs
pop
jecxz
push
mov
push
mov
mov
clc
or
jmp
xchg
push
cmc
jne
rcr
pop
and
pop
push
les
les
mov
std
push
sub
sbb
lea
cmp
sbb
shl
mov
outsl
pop
mov
add
std
xor
repz
xchg
pop
fildl
jg
je
scas
adc
jecxz
rclb
sub
adc
scas
jb
enter
inc
cmc
jp
add
inc
dec
nop
push
add
push
cmp
dec
push
sub
mov
je
cmp
fsts
add
sub
loop
or
aad
jae
mov
and
xchg
mov
dec
ret
repz
les
mov
sbb
jl
dec
daa
in
pop
jns
or
int3
sbb
or
out
or
out
jecxz
xchg
jne
mov
mov
cmpsl
movsb
jbe
ss
push
sbb
iret
in
test
adc
clc
xor
and
jmp
mov
lock
xor
loop
push
outsb
sub
xor
cmp
jne
movsl
lock
mov
jle
xchg
ss
cltd
imul
xchg
mov
fisttpll
mov
fisubl
pop
xchg
push
xchg
into
out
shll
movsb
call
rcll
add
fmul
inc
xlat
pop
mov
adc
fcomps
fdivrs
sti
mov
pop
push
fcmovnbe
ljmp
popa
scas
inc
in
sbb
jbe
shl
push
out
mov
xchg
push
mov
repz
mov
push
imul
imul
out
fistpl
jg
fldt
adc
mov
mov
mov
fdivs
push
fadds
adc
xchg
cmp
fidivl
push
and
pop
mov
bound
fs
xor
in
mov
mov
enter
pop
mov
inc
jno
inc
insb
je
es
fisttpl
xor
and
repz
adc
rsqrtps
js
in
sbb
mov
xchg
insl
insl
pop
sti
ja
aam
sbb
xor
jmp
cmp
addr16
mov
lahf
popa
or
mov
insl
in
idiv
fstl
jg
imul
popa
mov
in
mov
sbb
or
sub
hlt
xor
cmp
or
insb
cmp
ja
lahf
adc
insl
inc
enter
in
mov
cmp
rclb
test
int3
adc
mov
xlat
push
cwtl
popf
add
call
out
and
jecxz
or
js
adc
mov
aas
push
pop
mov
mov
xchg
outsl
push
mov
cwtl
imul
inc
mov
je
outsl
or
inc
mov
stos
sbb
hlt
cmp
pusha
mov
push
outsb
pop
jns
in
insb
fnstsw
movsb
testb
or
mov
in
sbb
bound
jecxz
ljmp
cmp
jbe
xchg
jecxz
pop
dec
mov
test
xchg
cwtl
cmc
enter
pop
jle
orb
pop
adc
add
mov
shl
fdivr
test
inc
jbe
js
cmp
xchg
mov
pop
into
xor
test
repz
divb
and
add
inc
jle
mov
lret
lret
push
mov
and
mov
mov
loop
jbe
xor
or
lea
sahf
out
test
enter
pop
insl
ret
repnz
mov
sbbb
push
dec
jns
mov
in
cmp
inc
movsb
inc
sbb
dec
cld
sbb
xchg
add
das
or
inc
xor
loope
cmp
pop
addr16
mov
loopne
pop
push
lods
incl
shlb
push
jge
dec
add
mov
xchg
jae
ret
push
push
imul
lret
jle
and
aas
mov
push
rcrl
dec
fstps
jo
lods
push
arpl
inc
push
ds
fcompl
push
lods
scas
jle
xchg
jge
mov
lret
jg
shll
lcall
sbb
pop
data16
xlat
insl
jno
sub
push
dec
in
mov
lret
and
lahf
pop
data16
mov
call
js
test
cmp
fsubs
mov
pop
push
sbb
sub
push
ljmp
mov
push
pushf
js
idivl
popa
push
mov
les
pop
jl
dec
arpl
stos
mov
pop
lock
flds
aas
daa
out
mov
addr16
clc
sub
aas
fisubl
xchg
add
fistpll
out
rcrb
pop
jno
inc
cmpsb
sbb
cmp
orb
mov
pop
mov
enter
sbb
sub
pop
cltd
inc
adc
rcl
lea
push
cmp
cmpsl
push
pusha
cltd
cs
std
cld
dec
lock
ret
test
das
shll
in
mov
xor
mov
addr16
sbbb
scas
popl
mov
xchg
lcall
xor
insl
sbb
mov
xor
xor
xchg
pop
lock
in
jae
add
popa
arpl
add
jo
inc
stos
movsl
stos
adc
cwtl
sub
movsb
ficoms
addr16
andl
je
pop
arpl
rcll
or
push
dec
js
in
inc
mov
imul
adc
and
test
test
adc
jg
sbb
loopne
inc
mov
pop
sbb
testl
or
push
sbb
cs
adcb
testb
push
mov
jmp
test
mov
mov
lcall
ljmp
jbe
daa
and
add
sbb
or
mov
mov
popa
mov
add
jge
repz
daa
stos
xor
test
in
bound
mov
movsl
imul
insl
cltd
movsl
mov
dec
jb
aad
lret
and
cmc
scas
dec
jge
fiadds
add
dec
push
pushf
push
lahf
xor
mov
inc
in
pushf
mov
call
mov
cmp
divb
ret
or
and
fisubs
push
cwtl
decb
mov
fwait
rorl
addr16
fildll
pop
test
test
adc
cltd
mov
push
fldt
addr16
rcrl
icebp
fwait
cltd
pusha
inc
in
pop
sbb
repz
and
mov
xlat
jnp
daa
push
cmp
filds
pop
mov
test
insl
test
std
insb
ret
sub
inc
push
dec
mov
xchg
lds
es
add
and
iret
and
xor
mov
pop
fldln2
inc
stos
add
inc
mov
pop
adc
inc
lods
sbb
inc
inc
lcall
cmp
cmp
fs
dec
daa
cmpsb
fwait
cmp
push
and
dec
fs
push
mov
mov
push
mov
mov
or
dec
mov
shlb
or
adc
xor
and
insl
mov
xlat
jmp
movsl
xchg
fists
jno
jp
sub
pop
addl
pop
push
inc
inc
jmp
adc
pop
dec
sub
rclb
stos
insb
push
sbb
or
loopne,pn
ljmp
ret
jb
xchg
sbb
nop
jge
pusha
dec
in
std
dec
popf
test
outsb
mov
jmp
pop
fisttps
es
mov
adc
mov
xor
cmp
mov
sub
add
call
iret
xchg
and
push
pop
add
jo
pop
mov
aas
fistps
daa
fisubrl
adc
jns
int3
adc
into
sbb
test
aam
or
xor
std
cmpb
into
scas
dec
jmp
push
xchg
xchg
adc
popa
fsubr
mov
popf
mov
rcl
nop
pop
call
nop
xchg
sub
push
sbb
or
paddusw
movsl
dec
pop
sar
inc
leave
mov
mov
rcll
jp
push
xchg
xchg
jne
aad
sub
cmp
and
add
xchg
popf
shl
lret
shrb
mov
aaa
adc
outsb
arpl
insb
dec
jo
aas
xchg
jnp
adc
sbb
dec
movsb
popa
pop
add
notl
add
popf
inc
pushf
cmp
mov
mov
stc
shlb
gs
push
push
cltd
popa
and
push
js
pop
fwait
lcall
cmpsb
add
sub
mov
add
das
rcrb
sub
dec
jge
push
fistps
xchg
jg
push
inc
les
mov
mov
xor
sahf
cmp
mov
or
or
mov
movsl
adc
mov
rcl
test
sbb
lahf
mov
stos
notl
test
add
sbb
jmp
and
repz
sar
insl
inc
cmc
arpl
jbe
sub
pusha
add
push
cmp
imul
sbbl
adc
push
push
fsubl
orl
xor
das
fbstp
push
dec
out
adc
fucomip
subl
mov
js
and
pop
mov
jo
jbe
xchg
testb
ret
xlat
push
add
push
mov
das
sub
sub
sub
sub
popf
lahf
das
cmpb
sarb
xor
jmp
xor
dec
sub
push
loop
and
lock
js
mov
ds
mov
sub
or
push
mov
dec
push
adc
pop
test
bound
jo
movsb
nop
dec
xchg
call
xchg
xor
sbb
enter
inc
pop
jbe
dec
push
adc
inc
fisttpll
jg
out
in
mov
pushf
aaa
mov
test
fmulp
adc
int
insb
xchg
xchg
lcall
xchg
in
mov
lds
shlb
xchg
cld
test
sbb
jecxz
lds
or
jge
int3
push
cltd
std
push
push
popl
dec
xchg
outsl
icebp
and
push
das
cwtl
test
xor
inc
pop
arpl
clc
cwtl
stos
xor
adc
and
cmpsl
dec
cmp
nop
test
pushf
mov
mov
fwait
adc
ja
lcall
pushf
mov
pusha
push
sub
jno
fdivs
or
call
test
or
xchg
dec
mov
jns
push
sub
dec
out
mov
je
jne
lret
push
jmp
jno
and
testb
jo
fwait
push
cltd
sbb
jecxz
int
outsb
loop
aad
ss
adc
inc
call
orl
sarl
dec
out
rcll
pop
loope
std
pushf
and
negb
divb
std
cmpsb
or
and
cmp
lcall
shrl
cld
dec
mov
roll
stos
cltd
dec
es
pop
loop
cmp
adc
or
inc
mov
stos
daa
pop
pop
pause
add
mov
in
mov
loope
mov
arpl
xor
inc
mov
movb
jl
aad
or
gs
dec
cmp
xor
add
fcoml
adc
push
loop
mov
xchg
mov
movsb
push
xchg
jbe
dec
std
cmp
mov
stos
mov
xchg
jge
mov
sub
fstl
sub
add
sub
xchg
movsl
js
shll
out
push
call
add
adc
push
mull
fistpll
mov
inc
adc
aam
mov
shlb
mov
aam
cmc
push
fwait
and
lahf
xor
xchg
add
add
lock
push
mov
in
sub
and
outsl
inc
sub
loope
out
or
rcrb
loope
cmp
sub
jle
pop
in
jl
loopne
out
xor
jle
xchg
jae
stc
push
popf
jne
test
data16
mov
sbb
mov
mov
or
in
push
xlat
pusha
push
dec
scas
clc
inc
add
mov
mov
mov
call
push
cwtl
mov
fldenv
adc
xchg
ret
fucomp
sub
cwtl
fucomp
lock
xchg
push
and
sarb
mov
cli
cmp
push
test
and
ficoms
mov
and
iret
out
inc
sbb
dec
inc
jl
cwtl
cmp
adc
pop
cmp
aas
push
ds
shrl
sub
jle
out
push
mov
sarl
dec
or
push
and
pop
inc
pushf
out
jns
add
movsl
push
ds
cmp
imul
sub
push
test
daa
cmc
dec
out
repnz
push
mov
daa
in
xchg
and
shrl
mov
mov
xchg
jmp
xor
sub
adc
outsl
data16
scas
jge
out
sti
adc
jno
sbb
les
dec
scas
stos
popf
and
inc
xor
out
icebp
dec
outsl
mov
shlb
lock
and
insl
enter
inc
sbb
or
mov
and
push
loope
loopne
cli
inc
xchg
push
nop
mov
outsb
adc
dec
jg
pusha
mov
xchg
push
ss
or
adc
int3
jp
sbb
jmp
addr16
or
mov
xchg
dec
lret
mov
fs
dec
cmp
dec
mov
xor
jge
add
insb
xchg
mov
movsl
out
mov
iret
xchg
xchg
cmp
mov
or
sub
aam
mov
xchg
ret
out
stc
rolb
shrb
in
cltd
adc
sbb
mov
dec
insb
push
clc
jne
ja
lret
pop
xchg
mov
clc
fwait
push
pop
dec
sub
sub
cmc
int
aam
aam
and
outsb
dec
and
jmp
rcrl
das
mov
push
jne
punpcklbw
arpl
pop
push
xor
mov
xchg
movsl
mov
jmp
mov
jp
or
xor
dec
xor
jecxz
ficoml
pushf
stos
mov
cmp
sbb
push
enter
shlb
imul
mov
addl
movsb
xor
jge
imul
fldcw
lds
or
fstpt
mov
pusha
sti
push
lock
lret
ds
fistl
nop
in
std
divb
pop
in
and
fwait
and
mov
out
out
sbb
xor
sahf
xchg
jle
jb
fwait
adc
push
test
sub
and
mov
xchg
jg
jmp
add
mov
jle
cli
gs
jnp
cmpsb
test
push
xor
outsb
rcr
xchg
ficoml
fidivl
gs
ss
pop
insb
push
sub
adc
push
lcall
gs
bound
and
movsb
jle
or
jmp
add
sbb
int3
push
push
pop
cmp
lds
mov
xor
lds
jmp
fcompl
cli
loop
push
ljmp
lds
loope
loopne
enter
gs
loope
addl
xchg
sbb
mov
mov
mov
jg
push
mov
jno
std
or
inc
bound
sub
rolb
orb
into
xor
xchg
push
loope
sbb
lock
sub
lods
cmp
mov
aad
sub
enter
fadd
sub
fwait
test
xor
negb
and
inc
dec
shll
and
mov
inc
xor
and
jge
in
add
fcoms
jl
xchg
in
jae
inc
xchg
inc
cld
add
and
add
add
mov
jns
mov
cmp
outsl
pop
test
and
push
dec
ljmp
fimull
mov
mov
pop
out
sub
mov
cmp
test
das
xchg
imul
inc
in
jbe
jb
jge
xchg
jb
mov
push
pushf
inc
lret
ds
push
dec
mov
insb
mov
lret
hlt
pushf
jg
mov
pop
arpl
inc
mov
jo
sbb
xor
fsubrp
out
dec
push
mov
insb
aam
jns
outsl
shrb
adc
scas
stc
mov
inc
jp
in
and
roll
popa
pop
adc
iret
roll
sbb
out
inc
jo
ds
jb
iret
push
pop
or
or
lods
and
pop
add
js
ss
sbb
sti
test
and
mov
in
jmp
dec
insb
aad
movsl
adc
dec
mov
pushf
add
xchg
mov
xchg
fldenv
jnp
mov
push
sbb
int3
call
in
call
icebp
cmp
sub
sti
jecxz
dec
pop
fcmovb
push
aad
out
pop
xchg
and
and
or
jne
pop
mov
pop
xor
das
adc
dec
clc
cmpl
sbbl
or
inc
rolb
inc
xacquire
in
outsb
and
add
daa
mov
pop
push
dec
push
inc
cmp
in
xchg
outsb
scas
inc
enter
cmp
das
xchg
ret
add
adc
int3
and
into
adc
outsb
and
fstps
movsbl
repz
imul
int3
sbb
inc
popa
or
adc
incl
add
js
xchg
gs
cmpsl
and
leave
fidivl
mov
orb
dec
dec
add
negl
cmc
imul
xchg
push
jns
shll
xor
pop
sbb
xor
jle
jle
jae
lahf
int
mov
ret
sarb
jae
or
pop
cmp
scas
ljmp
add
jb
jo
cmp
outsb
in
pop
dec
jns
pop
aas
push
insb
push
inc
push
push
dec
inc
mov
pop
das
sub
sub
jnp
fs
xchg
inc
adc
aam
ja
mov
jne
mul
mov
popa
bound
mov
jmp
pop
cmp
cwtl
divb
adc
cli
hlt
jecxz
aad
test
jnp
pop
jns
lods
adc
and
fdivrl
push
jmp
jle
mov
xchg
cmpsl
inc
push
fldt
dec
push
sbb
icebp
lret
sbb
fwait
dec
out
dec
int3
jb
out
add
iret
xchg
add
js
hlt
mov
or
orl
push
sub
cmpsb
sbb
enter
or
fcmovb
mov
ss
dec
in
lahf
mov
inc
inc
sti
in
mov
scas
movsb
dec
and
push
mov
test
cmpsb
add
ja
cmp
cmp
inc
pop
push
pop
shrl
ss
out
pop
int
out
mov
or
lods
lods
xchg
xor
repz
and
repz
fldenv
sahf
loop
fisubrl
xlat
outsb
mov
int
sub
in
cmp
mov
add
push
dec
fmuls
pop
sub
ror
jno
sub
inc
mov
insl
cs
cmp
or
jno
gs
into
jbe
dec
out
lahf
sti
push
jp
jle
movsb
jle
mov
je
enter
pop
fstl
pop
daa
mov
pop
jo
jmp
orl
jno
add
push
movsl
pop
or
cmpsl
rcrl
cmp
out
or
je
sbbl
movsl
xchg
lret
jnp
popa
in
jl
cmp
lret
cmpsb
dec
aam
shll
iret
mov
push
mov
xor
and
loopne
testl
out
pop
subl
push
es
inc
nop
stos
rcrl
xor
xor
inc
xchg
xor
roll
jbe
cli
call
stc
scas
and
out
sbb
sub
je
js
or
cmpsb
xchg
xchg
pop
cltd
adc
orb
imul
add
ss
adc
nop
test
sahf
into
lret
push
push
and
dec
movsl
sbb
mov
push
fistps
lds
adc
push
lods
pop
jo
jl
xchg
stc
fcomps
mov
repnz
outsw
add
loope
sbb
xor
mov
pop
xor
and
inc
pop
jmp
fdivrp
sbb
add
add
and
mov
mov
aas
scas
push
stos
xor
cltd
fsts
cmpl
sub
pushf
data16
ja
iret
daa
int3
cmp
mov
cmc
fildll
jmp
inc
add
cmp
out
movsl
or
push
jle
and
mov
aas
mov
rcll
int
out
push
loopne
flds
pop
xchg
cmp
imul
cli
repz
js
std
add
test
push
cltd
clc
cwtl
inc
xchg
inc
lea
pop
fdivl
sbb
xor
add
add
ja
jle
clc
sub
out
popf
push
rcrl
xchg
lods
rorl
pop
and
inc
sub
mov
mov
inc
jne
rorl
inc
lods
sbb
popa
jnp
rorb
out
pop
pop
push
fwait
test
inc
popa
push
jne
fs
jno
stc
leave
leave
ret
loope
repz
pusha
inc
hlt
add
lock
and
push
dec
jo
add
mov
add
xchg
std
add
loop
sbb
pushf
roll
cmp
jne
repnz
outsb
lock
mov
into
adc
xor
scas
mov
inc
pop
fiadds
fbstp
cmp
lcall
cmp
xchg
pop
jo
push
dec
in
scas
sub
adc
and
pop
mov
dec
mov
jecxz
fildl
lahf
popf
cltd
pop
xchg
push
in
test
or
jns
in
inc
jne
ja
push
fwait
movsl
xor
adc
pushf
cmc
imul
xchg
sbb
jne
cmp
dec
push
popf
popa
xchg
cltd
mov
sub
xchg
cmpsl
lret
or
arpl
push
push
mov
jo
daa
sti
or
das
or
and
rclb
or
shll
pop
loope
cmp
inc
xor
test
mov
pop
xchg
and
xor
mov
jl
scas
aaa
jb
push
cs
and
div
mov
mov
in
stos
jns
movsl
or
ret
dec
imul
mov
inc
xchg
pavgw
xchg
cli
clc
movsb
mov
testl
mov
orb
fwait
sub
mov
or
stos
popl
sbb
nop
pop
inc
fists
fs
push
nop
fs
add
fstpl
popf
loope
loope
mov
mov
sub
repnz
xchg
mov
mov
jp
das
ds
pop
or
and
iret
fldt
mov
or
lea
fwait
sbb
mov
daa
cmp
loope
jnp
lods
enter
cmp
sub
adc
in
ret
loopne
movsl
rcrl
dec
pop
fsubl
push
dec
mov
nop
add
push
ret
scas
mov
jnp
nop
adc
loopnew
push
cmp
mov
mov
lods
sub
or
daa
and
lahf
xchg
scas
sbb
lcall
pop
mov
int3
fidivrl
add
iret
fstpt
mov
mov
lret
sbb
xor
or
add
shl
mov
in
orb
pusha
jno
push
dec
xchg
int3
in
movsl
mov
fnsave
std
lcall
shll
cli
mov
dec
xchg
dec
bound
lods
dec
or
hlt
in
pop
ds
sahf
adc
xchg
mov
dec
ret
mov
addr16
nop
inc
dec
lret
adc
push
add
mov
in
mov
mov
sbbb
jnp
xchg
pop
mov
mov
mov
roll
in
int
mov
pop
sub
xchg
out
aaa
lods
cld
repnz
sub
in
fwait
outsb
or
aam
cli
cld
dec
mov
mov
mov
inc
ret
xchg
stos
lds
jnp
fwait
dec
xchg
pop
icebp
and
pop
stos
jae
push
mov
sbb
repz
pop
jae
dec
xor
iret
pop
jns
fistl
mov
and
cs
xorb
adc
push
pushf
ret
cmp
aaa
ds
mov
push
sub
sbb
sub
sub
sti
add
mov
test
dec
pop
push
adc
cmpsb
fildll
inc
mov
scas
xor
sbbl
xor
je
andb
fdivs
das
mov
clc
clc
insl
pop
arpl
mov
push
loopne
ds
ja
pop
pop
inc
jecxz
test
xor
inc
shlb
aad
fnstenv
dec
mov
sbb
addr16
push
or
push
icebp
jno
mov
cli
hlt
jnp
xchg
fs
pop
test
in
mov
or
ja
adc
nop
loop
stos
fidivl
sahf
mov
loop
in
out
ja
xchg
lods
jl
ds
mov
jecxz
mov
add
mov
push
xchg
andl
int
pop
std
movsl
and
arpl
xor
fidivl
xchg
mov
cli
sub
and
sahf
insb
dec
and
ja
jp
iret
and
mov
jne
mov
push
int3
push
adc
daa
push
xor
fs
sbb
lret
cmp
loope
test
fsub
pusha
inc
inc
out
hlt
jbe
push
aam
jl
fwait
jbe
and
xor
into
aaa
sbb
gs
es
mov
popf
or
sub
lcall
scas
iret
fsubs
push
sub
xchg
insl
mov
lret
xchg
cwtl
mov
mov
mov
mov
xor
scas
cmp
repnz
and
in
sbb
inc
mov
mov
ds
jecxz
fcmovb
mov
aad
out
enter
lahf
into
sub
daa
aad
fcmovne
or
gs
outsl
mov
sar
mov
and
lds
int
out
gs
xchg
outsl
pushf
aas
aas
mov
pop
push
out
mov
out
mov
dec
add
jne
xor
lret
outsl
dec
pop
fsubl
pop
je
cs
rol
insb
cmc
subl
clc
pop
ja
add
hlt
cmp
fwait
or
mul
in
pop
jo
adc
mov
call
xchg
inc
add
jns
loope
lret
jg
pop
or
mov
aaa
test
insb
add
mov
mov
arpl
dec
and
mov
sub
aad
in
mov
cmpb
out
ss
fistl
cmc
ss
ret
cltd
sahf
and
sahf
repz
fld
popf
sbb
dec
xchg
mov
add
shll
stos
out
popa
lret
pop
bound
xor
pop
sbb
enter
js
ret
pop
xchg
cwtl
dec
stos
add
cmp
cmc
pop
arpl
imul
cmp
lcall
out
mov
cmp
and
incl
fwait
lcall
cmp
adc
insb
xchg
inc
mov
add
ds
addr16
in
scas
stos
loope
mov
dec
jno
out
shrb
cmpsl
pop
loop
test
sbb
inc
dec
mov
test
inc
sub
fnstcw
std
dec
xchg
add
into
loopne
pop
insl
icebp
popf
stos
ror
shrl
ret
icebp
aam
dec
lods
sbb
in
inc
mov
rcrl
icebp
loope
cmp
out
cs
iret
rorl
jp
in
bound
pop
and
je
das
xchg
pusha
pushf
mov
sti
rcrl
clc
outsb
fs
sbb
mov
test
div
or
or
orb
cmp
loopne
adc
mov
pop
jbe
inc
xchg
cmp
xchg
fistpll
pop
and
adc
xchg
xchg
out
dec
stos
xor
jle
in
imul
xor
and
bound
movsb
sbb
add
xlat
pop
xor
ljmp
stos
sti
div
ja
xor
xorl
ds
or
pop
iret
xchg
mov
sbb
jb
xchg
xchg
xchg
xchg
sbb
push
mov
mov
in
inc
scas
in
push
shll
mov
in
add
jmp
test
aad
cmp
test
lods
jmp
movsb
mov
add
cli
cmc
mov
sahf
stos
testb
incb
je
cmp
sbb
stos
faddp
shl
push
fiaddl
shr
add
stos
cld
xor
or
sbb
popa
mov
cwtl
frstor
xchg
mov
jle
xchg
shl
cs
bound
or
dec
nop
xchg
inc
sar
cmp
fs
push
jb
mov
cltd
mov
mov
push
in
aam
stos
adc
sbb
inc
lock
fcoms
xor
ret
sahf
in
sub
lcall
jno
dec
jl
sbb
jecxz
imul
add
cmp
xchg
iret
xorb
or
add
xchg
rcrl
mov
fwait
and
sub
popf
or
ret
fsubr
or
imul
xorl
inc
daa
mov
cmc
arpl
rclb
sbb
mov
fidivs
stos
jle
pop
lahf
cmp
scas
sub
and
push
sbb
outsl
lods
add
sbb
gs
xchg
lahf
inc
mov
pop
inc
gs
addr16
lcall
les
jnp
fistpl
repnz
and
in
xchg
loope
loopne
filds
es
cwtl
das
out
push
shl
push
or
outsl
jnp
aad
mov
out
test
pop
clc
cmp
and
xchg
mov
pop
mov
mov
cmp
push
sub
div
inc
cld
cmp
inc
data16
and
enter
mov
sarl
lret
pop
mov
fchs
jb
xchg
inc
loope
aaa
je
scas
cli
mov
ljmp
mov
mov
dec
ret
mov
cmpsl
pop
push
sarl
lods
dec
xchg
inc
jae
nop
je
jae
cmpsb
loopne
imul
mov
aam
mov
mov
and
rcl
fwait
push
call
sbb
adc
pop
xor
fwait
or
test
movb
sbb
mov
add
lahf
out
xchg
dec
stc
xor
loop
pop
sbb
push
jl
clc
ljmp
vmwrite
pop
push
clc
mov
lret
xor
jmp
jbe
xchg
jge
inc
fsub
jle
shll
out
cwtl
xor
daa
dec
jg
xor
insl
pop
test
and
std
jg
test
lea
nopl
imul
mov
inc
in
pop
int
das
dec
leave
aad
pop
repz
test
and
xchg
xchg
adcb
ficoms
cmp
pop
or
inc
scas
pop
or
adc
imul
pop
sub
shlb
jne
test
push
nop
jle
cmpsb
cmpsb
pop
mov
fistl
lea
mov
mov
in
and
aad
movsb
leave
xchg
xchg
adc
mov
in
adcb
ret
mov
dec
add
in
cmp
cmp
push
cli
imul
xchg
jne
fsubrl
insl
imul
popf
lcall
lock
jno
sarl
xorb
in
test
add
mov
adc
fcoms
rorb
xchg
gs
xchg
inc
fcoms
outsl
movsl
dec
push
add
shl
clc
inc
in
push
push
repnz
mov
outsl
mov
push
pop
call
sub
aad
xchg
and
or
push
in
mov
jnp
sbb
xchg
notb
jmp
vpcomq
sbb
fisubrs
and
xor
lcall
pop
cltd
or
in
enter
dec
out
mov
adc
sub
adc
lock
adc
or
xchg
inc
jnp
inc
mov
push
or
mov
int3
call
add
add
pop
jne
cmp
add
add
push
add
add
add
orb
add
push
add
addb
add
pop
jne
cmp
add
push
add
sldt
pusha
add
cmp
add
mov
add
mov
add
fadds
add
add
add
sub
add
pop
jne
cmp
add
add
add
add
js
add
add
add
nop
add
add
jne
cmp
add
add
add
add
mov
and
add
add
add
jne
cmp
add
add
add
add
enter
pop
and
add
add
add
jne
cmp
add
add
add
add
lock
add
add
add
jne
cmp
add
add
add
add
sbb
add
push
add
cmp
add
pop
jne
cmp
add
add
add
add
inc
add
add
add
add
jne
cmp
add
add
rolb
xorb
adc
add
add
add
pop
jne
cmp
add
add
add
add
mov
add
and
add
add
add
jne
cmp
add
add
add
add
mov
add
xor
add
add
add
add
add
dec
add
dec
add
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
je
add
and
add
mov
xor
add
xor
add
xor
add
add
add
xor
add
add
add
add
add
add
push
xor
add
add
add
add
add
add
xor
add
add
add
ljmp
add
adc
add
add
add
incl
xor
add
add
sbb
add
add
add
jmp
add
sbb
add
and
add
add
add
decl
add
and
add
sub
add
add
add
ljmp
add
sub
add
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
gs
jne
xor
cs
insb
add
add
add
push
jns
inc
jb
gs
je
imul
add
jbe
jo
xor
cs
insb
add
add
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
jne
gs
xor
fs
insb
add
add
inc
gs
gs
outsl
popa
jb
push
jns
add
add
gs
insb
xor
cs
insb
add
add
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
popa
je
inc
add
cli
outsb
add
add
add
add
outsb
add
add
add
add
add
int3
fnsave
sub
rorb
mov
loope
add
xor
pop
or
in
jb
jne
cmp
or
dec
xchg
rolb
icebp
pop
or
clc
repnz
push
add
xorps
cli
inc
out
inc
aam
cmp
mov
loopne
dec
jecxz
call
add
sbb
ss
pop
in
hlt
jne
in
jge
int3
es
mov
je
mov
pop
jno
rep
in
dec
or
push
sub
enter
jge
mov
shl
or
inc
outsl
dec
mov
sbb
orb
xchg
or
xchg
int3
pop
hlt
iret
data16
and
and
roll
inc
stos
add
pop
sub
fwait
int
adc
popf
or
loopne
incl
js
or
setg
dec
out
or
scas
icebp
cmp
cmp
jg
icebp
cmp
mov
icebp
xor
xchg
push
hlt
and
dec
aam
mov
call
inc
add
imul
add
pop
lea
dec
cmp
repz
ds
sub
call
or
push
sub
shll
nop
pop
push
jne
and
or
pop
outsb
mov
and
movsb
cmpsb
pop
or
sbb
out
repz
or
js
pop
scas
mov
rolb
addps
sub
mov
jbe
xor
mov
push
add
add
cli
mov
or
incl
jmp
popa
andb
pop
xchg
and
bound
adc
je
cwtl
lock
cmpsl
outsb
or
or
lahf
test
adcl
add
mov
or
cmp
cltd
or
insl
std
add
je
sahf
adc
push
imul
rol
ljmp
or
adc
outsb
lods
and
inc
inc
jns
fldl
push
cltd
dec
fmull
pop
cwtl
and
sbb
adc
jge
dec
xchg
jmp
pop
movl
add
lea
or
pop
daa
push
mov
test
cmp
push
mov
clc
adcl
es
cmpsb
sub
cmpsb
mov
mov
jae
mov
sbb
bound
inc
pop
sub
mov
add
xor
in
mov
lea
push
clc
test
adc
push
jmp
mov
pop
jmp
sbb
dec
js
pusha
fmull
test
jp
dec
jae
mov
pop
lea
mov
dec
fstp
jne
out
imul
je
add
pop
push
sbb
loope
out
mov
inc
sbb
mov
mov
loop
enter
enter
sub
adc
or
mov
or
xor
xor
jmp
mov
inc
bound
mov
or
popa
jno
or
les
sub
andb
push
pushf
bound
test
sbb
das
xor
pop
rorb
fsubs
lock
cwtl
adc
sbb
inc
inc
mov
sbb
repz
jl
movsb
cs
sar
inc
jecxz
pop
decl
push
push
nop
or
incb
mov
sbb
gs
sbb
out
insl
add
jb
js
cld
in
xchg
lock
lea
mov
adc
shlb
push
imul
or
sub
inc
dec
cli
jo
fimull
mov
shl
lret
stc
xchg
jecxz
push
adc
add
push
mov
decb
jo
mov
adc
add
call
jno
push
sub
jne
lea
mov
and
or
jge
dec
test
adc
dec
adcl
mov
adc
push
dec
data16
or
jl
add
sahf
push
and
inc
mov
es
xchg
test
lock
lret
add
mov
pop
inc
dec
addb
dec
cmp
sbb
jb
xchg
pop
adc
mov
mov
sbb
mov
stos
add
push
cltd
push
pop
divl
cmp
pop
jl
push
mov
push
mov
xchg
fstpt
enter
fs
loop
xchg
leave
fldl
fildl
push
call
cld
add
mov
lea
sbb
sbb
jo
adc
lea
test
orb
or
dec
test
push
inc
add
mov
roll
or
lcall
xor
xor
or
cli
jle
inc
insb
or
loope
cmpsl
sub
and
shlb
inc
sub
ja
icebp
test
in
or
push
or
mov
add
sbb
pop
dec
pop
nop
adc
stos
or
and
popa
test
lcall
divb
add
dec
adc
movsl
cld
mov
jae
or
pusha
adcb
lock
add
into
call
jo
push
push
push
adc
or
dec
adc
lea
inc
cld
add
sub
fcmovne
push
loopne
jbe
cwtl
push
or
mov
push
stos
add
nop
cmpl
je
jae
sbb
push
mov
cmp
mov
rep
cld
repnz
sbb
add
xchg
outsl
add
push
scas
aas
cwtl
lcall
sbb
call
xor
mov
sbb
inc
cltd
push
xchg
push
inc
iret
xchg
aaa
and
mov
dec
notb
bound
sbb
int
mov
sub
or
test
pusha
lcall
mov
inc
inc
push
or
je
jnp
xchg
stos
sbb
lea
mov
test
or
loope
fidivrl
sbb
mov
aas
pop
mov
sbb
lahf
cmp
push
aas
shr
sub
or
stos
mov
mov
inc
or
aaa
ficoms
and
movsl
dec
inc
mov
movb
add
mov
mov
or
ret
repnz
dec
ds
xor
sbb
dec
cmpsb
cmp
adc
add
pop
pop
pop
pop
ret
les
cld
mov
pop
sub
loopne
push
add
adc
xchg
and
enter
mov
jle
shl
sti
mov
in
add
je
push
mov
ss
xchg
xor
inc
stos
pop
add
jmp
mov
ret
lods
push
jne
xor
leave
push
adc
inc
int
shll
adc
xchg
mov
scas
pop
or
hlt
cltd
fs
movsl
xor
push
and
ds
cwtl
pop
push
cmp
or
or
inc
xor
dec
pop
xlat
cmpb
inc
cmp
test
jge
xchg
xchg
xchg
repnz
pop
mov
adc
add
cmp
jge,pn
aam
inc
movzbl
cmp
sub
call
dec
mov
jne
mov
cmp
rorb
rclb
xchg
inc
push
push
add
cmc
int3
inc
jmp
enter
mov
cmp
sub
sub
pop
or
js
rcrb
and
xor
sub
data16
jbe
push
or
call
lds
push
push
cmp
pop
std
cmc
daa
aaa
push
sub
int
inc
in
bound
je
loopne
xor
lds
dec
or
add
pop
movsl
sub
decl
cli
movsb
push
in
roll
stos
loop
adc
cmp
inc
cmp
ret
sub
mov
push
pushf
lcall
and
push
xchg
outsb
push
xor
mov
outsb
mov
movsl
mov
pop
lret
and
jl
add
mov
push
hlt
push
dec
dec
or
das
int
push
push
sti
cmp
in
aas
rorb
enter
pop
mov
mov
xor
ljmp
fsubr
lret
sbb
cli
cmp
jne
push
stc
jmp
push
fisubl
movl
loopne
sub
pushf
movsl
dec
pop
push
jb
fimull
sub
sub
lret
mov
add
bound
cmpb
pop
mov
add
push
push
dec
or
into
cmpl
cmp
push
push
push
call
sbb
mov
and
add
jmp
out
pop
insl
jae
bound
mov
in
sbb
mov
rclb
scas
adc
inc
loop
and
jecxz
lcall
pop
test
push
xor
jmp
or
xchg
jmp
or
into
jge
andnps
int3
testb
mov
idivb
jg
test
and
jmp
fadds
add
sahf
data16
push
inc
gs
dec
pop
adc
push
xchg
fs
sbb
stos
outsl
loopne
xor
ss
mov
call
cmp
inc
inc
jmp
repz
imul
insl
pop
sbb
sbb
clc
add
inc
cmp
add
lea
push
add
test
shr
pusha
loope
push
lea
sub
adc
push
or
add
sbb
sub
jb
gs
test
sub
shlb
mov
and
scas
loop
adc
push
jnp
or
sbb
mov
lods
cmpsb
jmp
inc
jo
insb
imul
and
gs
out
pushf
adc
mov
jo
pop
push
push
arpl
fcoms
insb
cmp
outsb
je,pt
cmc
imull
ss
imul
inc
es
popa
insb
ja
movsl
xor
rcll
arpl
jns
mov
jae
fwait
xor
rorl
xchg
popa
fadds
js
inc
jnp
mov
data16
mov
aas
inc
js
je
push
movsb
outsb
dec
or
dec
popa
outsb
fs
out
pop
dec
jo
adc
je
stos
les
sbb
jl
imul
mov
xchg
lcall
or
mov
cmp
jmp
push
xchg
cmp
dec
xor
or
push
jbe
add
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
mov
add
pushf
push
add
mov
add
or
add
or
add
add
inc
add
xor
add
add
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
add
fs
inc
add
add
add
inc
