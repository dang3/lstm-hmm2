mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
frstor
dec
jmp
les
or
cmp
std
push
out
push
cmpsb
test
sub
mov
mov
loop
insl
fwait
push
ja
sbb
mov
fisubrl
daa
pop
int3
cmp
dec
push
adc
nop
or
xchg
adc
int
push
cmp
dec
and
in
lea
cmp
mov
cmp
inc
lahf
inc
jbe
rcll
ja
and
mov
xor
xchg
je
push
pop
mov
pop
push
addr16
mov
cmpb
or
jbe
sub
hlt
pushf
xchg
and
or
mov
pop
lea
adc
add
mov
mov
sub
jge
andl
in
or
jne
cmp
scas
pop
pop
imul
sbbl
mov
lods
mov
cmp
pop
ret
fpatan
or
adc
addl
mov
leave
aad
push
bound
insb
ss
push
mov
in
fwait
dec
add
mov
fstpl
sarb
xchg
sbb
adc
pop
inc
ficoms
test
seto
mov
mov
in
lahf
mov
xorl
popa
adc
out
mov
cmpsb
and
jno
xor
cli
jp
out
sub
xchg
jp
shll
jns
or
leave
xlat
lods
sub
pop
mov
and
jae
fbstp
ret
inc
call
dec
mov
out
mov
cmp
sbb
bswap
dec
out
and
addb
jmp
cli
mov
or
and
mov
mov
out
push
lea
icebp
jg
pop
syscall
aad
fbstp
enter
push
cli
mov
sbb
xchg
fsubs
mov
jg
in
mov
inc
outsl
mov
orb
arpl
or
xchg
lret
xchg
addr16
les
pop
jmp
inc
pop
mov
inc
pmuludq
inc
fidivrs
dec
cmp
cmp
shll
lods
les
add
jg
jp
rcll
test
movsb
mov
iret
cmp
add
addr16
mov
mov
loop
ljmp
and
cmpsl
or
das
sub
cld
sub
mov
jecxz
aas
mov
pop
push
or
hlt
dec
inc
sub
or
or
add
test
cmp
or
pop
push
stc
stos
sbb
mov
fwait
xchg
sub
adc
adc
adc
sahf
ja
lods
clc
jmp
ret
mov
out
js
fcmovbe
xor
aas
jne
push
xchg
jb
add
dec
pop
pushf
sbb
lods
jmp
adc
rorl
inc
cmpsb
cmp
mov
insb
rcrb
dec
jns
cmp
cmp
push
lahf
cmp
and
cltd
pusha
jl
cmp
orl
xchg
sbb
pop
inc
ss
lds
roll
ja
xchg
dec
out
sbb
fistpl
adc
jb
mov
addr16
push
push
or
ret
vpsubw
mov
jne
popf
or
ss
mov
adc
mov
icebp
fsubl
adc
jbe
jno
movsl
xor
in
push
leave
pop
mov
sub
sub
adc
push
xor
sbb
in
mov
movsl
push
in
xchg
xchg
mov
dec
jmp
jnp
or
dec
cmp
sub
jno
or
orb
push
cmp
cmc
ficoml
inc
sub
mov
mov
stos
add
scas
fnsave
mov
xor
push
jl
ss
xorb
sti
push
or
ret
in
bound
loopne
mov
sub
mul
stc
mov
pop
mov
xchg
mov
jecxz
insl
lahf
dec
pusha
jmp
xchg
push
lcall
jno
jecxz
add
ds
in
rcll
mov
add
pop
cmp
sti
int
mov
xor
pop
sbb
sub
xchg
stos
jb
dec
add
sbb
call
push
int3
inc
jge
insb
mov
cmp
adc
andl
sub
mov
sub
dec
fbstp
loopne
aaa
dec
leave
adc
arpl
push
rclb
push
into
je
sub
fldl
dec
subl
sub
stos
stos
fcomi
imul
inc
push
inc
fldenv
stc
jae
pop
xor
lods
pop
sbb
and
sbb
inc
das
sarb
xchg
sbb
inc
fstpl
inc
cmpsl
pop
cltd
adc
push
push
cli
pop
sbb
rclb
lcall
jns
mov
mov
fistpll
mov
xchg
jge
dec
lock
roll
jo
es
xchg
sarb
cmc
xchg
inc
cmpb
stc
or
cmc
xor
notb
xchg
inc
mov
push
cmpsb
stc
push
cmpsl
dec
inc
dec
add
mov
lahf
ss
mov
sub
roll
push
mov
push
mov
or
sub
mov
loope
jb
repz
xor
add
xchg
sub
rorl
push
inc
cld
add
mov
push
pop
pop
mov
jno
mov
xchg
and
push
aad
adc
out
xchg
ds
shll
add
pop
shr
add
cmp
pop
dec
and
stc
inc
fmull
ja
push
lret
cmc
sub
and
and
mov
pop
shrb
xor
xor
jne
cld
cmp
cld
shll
vmaxpd
and
jp
stc
mov
shll
xchg
and
outsl
inc
and
cwtl
xlat
mov
and
pop
pushf
sub
hlt
in
inc
imul
test
cmc
inc
fistpll
cli
pop
mov
mov
sbb
mov
nop
test
mov
cwtl
mov
sub
and
inc
push
dec
xchg
or
cmp
xor
inc
scas
cmpsb
out
test
push
mov
test
jmp
test
adc
mov
and
mov
mov
mov
add
sub
ja
bound
mov
sub
inc
cmpsb
aad
dec
cltd
stos
out
add
bound
jg
roll
data16
push
aas
adc
fdivs
mov
dec
fwait
nop
adc
sbb
bound
xor
lahf
ret
jge
ljmp
pop
dec
inc
lahf
sbb
xlat
sub
js
push
popa
loopne
inc
movsl
dec
inc
mov
in
pop
test
jp
lcall
cmc
or
and
aas
imul
mov
fucomi
sti
notb
fdivl
pusha
sbb
fdivrl
inc
in
pop
sbb
addr16
lock
aas
and
repz
sbb
mov
push
stos
sahf
nop
xor
stos
inc
sub
mov
bound
divb
push
xor
adc
push
pop
pop
dec
pusha
shll
in
out
stos
pusha
cltd
es
movsl
lahf
outsl
push
mov
sbb
mov
jp
sahf
mov
in
int
push
mov
add
test
or
repnz
enter
pop
adc
test
mov
mov
push
lock
push
mov
jae
cmp
jno
and
mov
cmp
fsubrs
push
andl
sub
dec
adc
push
cli
fcompl
rclb
addr16
or
dec
out
mov
mov
shlb
bound
jmp
dec
in
notb
stos
lods
test
jns
or
shlb
movq
mov
loop
rdtsc
loopne
into
aaa
add
inc
sub
jge
les
sarb
fcoms
and
enter
mov
mov
out
int
aad
loope
popf
loopne
negb
xchg
stc
hlt
int
testb
shll
scas
lret
adc
xor
sub
in
mov
sarl
in
fs
subb
imul
jne
mov
xchg
imul
in
out
mov
imull
scas
dec
out
xor
and
scas
popf
popa
bound
push
jecxz
push
es
xchg
mov
outsb
sub
js
ror
cmc
sub
sub
test
icebp
push
fisttpll
pop
and
jge
mov
jg
movsl
pop
mov
mov
cwtl
roll
push
pushf
pop
xchg
push
cmpsb
mov
outsb
ljmp
fwait
mov
or
adc
or
add
sub
lods
pop
arpl
mov
push
fdivrl
cmp
in
inc
pop
imul
sahf
testb
fs
rcll
insb
out
jno
xchg
jl
sbb
pop
sub
int3
dec
addr16
mov
dec
and
pushf
fiadds
mov
pop
mov
sbb
mov
jg
sbb
xchg
iret
fldenv
pop
xor
mov
mov
push
jb
mov
mov
lret
out
push
addl
lock
mov
mov
mov
fsubrs
jo
fwait
sub
and
mov
repz
hlt
aad
fiaddl
add
pop
dec
pop
xchg
test
xchg
pop
repz
and
sbb
and
mov
imul
xor
sbb
mov
pop
or
shrl
mov
scas
cmp
out
aas
into
xlat
cmpsl
mov
ror
xchg
dec
jne
out
lock
pop
adc
dec
andb
imul
insb
add
aaa
xchg
and
cmpsl
iret
fmuls
push
test
je
jbe
cmp
sub
sub
push
sub
jmp
pop
shrl
and
jns
movsl
pop
stos
xchg
sahf
cwtl
scas
in
fsubl
lret
data16
ljmp
sahf
sbb
sub
mov
cmp
cmpsb
push
cmp
mov
mov
mov
add
add
sti
cmp
sarb
dec
and
sti
stos
cli
jnp
neg
enter
and
push
inc
mov
xchg
xchg
mov
mov
jb
jo
leave
push
stos
push
cmp
hlt
lcall
mov
xchg
inc
int
pop
adc
jg
cmpsb
push
sub
xor
sub
sub
pop
lods
pop
or
out
mov
es
cwtl
into
jl
jge
cmpsl
jp
pop
jle
xchg
popa
jb
pop
aam
adc
stos
xor
pop
cli
mov
push
sub
mov
mov
sub
xchg
adc
mov
jmp
test
jge
pop
or
xor
xorb
cwtl
cmpsb
push
movsl
dec
xchg
add
xor
push
push
enter
icebp
cmpb
addr16
xor
xchg
or
aas
das
clc
xchg
sbb
loop
mov
das
call
and
lcall
xor
dec
xchg
imul
mov
out
test
cmp
arpl
xchg
lcall
xlat
ss
jbe
loop
sub
push
lods
push
mov
repz
inc
int3
sbb
sub
jns
or
scas
scas
mov
inc
push
jns
mov
push
call
adc
sub
loop
push
fiadds
mov
pop
rep
in
idivl
stos
out
adc
int3
or
fnstsw
push
cmp
mov
push
fdivr
dec
xor
add
lds
sub
popa
test
jbe
xchg
gs
hlt
dec
xchg
dec
lcall
jl
lret
lahf
or
fisttpl
dec
in
xor
rcrb
ret
pusha
lret
add
add
sub
inc
add
jmp
xorb
or
or
pop
iret
pop
loop
repz
pop
pop
loopne
inc
sbb
pop
repz
cld
sbb
push
or
loopne
lods
sbb
mov
mov
popa
mov
fwait
jno
inc
sbb
inc
cmp
jns
cmp
fmuls
inc
xchg
incb
dec
push
mov
fsubrl
loopne
mov
or
cli
jns
cmova
or
dec
mov
cmpsb
dec
xor
imul
lret
nop
hlt
inc
inc
inc
or
or
jno
mov
std
ljmp
pusha
loopne
add
mov
jp
fistpll
jmp
lret
ffreep
faddp
xchg
arpl
inc
mov
xor
adc
outsb
add
int
adc
jae
mov
sub
mov
aaa
imul
mov
mov
rorl
cmp
outsl
add
or
xor
or
movl
and
mov
fcmove
arpl
out
dec
repz
sti
jmp
fimull
loop
popf
sbb
into
aad
dec
shlb
mov
mov
or
divb
out
or
push
dec
rolb
add
sub
cmp
and
ja
jmp
adc
jg
cmpsb
loop
lods
shl
rcrb
xor
test
test
mov
lea
out
outsl
flds
out
inc
or
movsl
and
iret
push
mov
mov
inc
aaa
xlat
aam
jnp
push
or
inc
jno
xchg
xlat
aad
dec
sub
mov
push
sub
cli
push
fisubl
fisttps
stos
shr
repnz
aaa
pop
es
and
in
cmp
aas
jno
sbb
arpl
add
sbb
les
cmp
shll
jb
push
popf
pop
daa
jns
add
popf
cmpsl
jno
fldcw
xor
aaa
into
mov
sub
add
fcmovnbe
or
mov
xchg
ret
mov
cld
inc
dec
add
and
xchg
xor
mov
push
ljmp
xchg
leave
jae
mov
xor
test
xchg
outsl
cld
arpl
scas
sarl
jp
cmc
and
sbb
lret
lret
xchg
pop
sahf
mov
shrl
in
or
or
icebp
mov
sar
daa
jl
jmp
movsl
mov
mov
fs
shl
movhps
push
fdivl
mov
subb
cmpb
xchg
pop
int
and
pop
jne
rolb
xchg
mov
mov
or
mov
mov
xor
loop
inc
rcr
mov
sbb
rorl
sub
leave
sub
bound
test
mov
inc
fcoml
pushf
sub
xlat
out
jp
dec
push
pop
and
cli
aad
jne
cmp
outsb
adc
xchg
repz
mov
bound
cmpb
mov
shrl
lret
bound
aad
lahf
or
mov
out
rcll
je
mov
xchg
adc
pop
push
push
movsl
jbe
add
rorl
iret
in
das
lcall
imulb
das
enter
xor
fwait
decl
outsb
mov
cmc
mov
xlat
jg
jb
pop
or
pop
sub
imul
sub
mov
mov
or
pop
mov
mov
shlb
jmp
fwait
mov
loope
ljmp
and
mov
out
lret
sahf
jae
into
push
jns
jmp
lcall
negl
aas
push
xor
fwait
pop
mov
mov
sub
push
ret
ret
cmp
leave
xor
xor
call
adcb
sbb
mov
pop
popf
aad
popf
pop
xor
lds
jb
cmp
jbe
js
push
mov
fwait
mov
movsb
cld
xor
mov
xchg
cmc
cmpsl
je
or
lods
in
xchg
insl
rclb
pop
jo
mov
mov
jl
add
xchg
and
ja
test
add
ss
push
jne
fsubp
pop
ret
cli
mov
push
xchg
cmc
pop
int3
pop
mov
test
mov
inc
mov
pop
mov
addr16
mov
cmpsb
xor
je
dec
dec
std
cmp
aad
or
ja
cmp
sub
cmp
sub
dec
adc
inc
and
aam
lods
pop
cs
push
bound
int3
cmp
adc
inc
pushf
adc
mov
push
mov
call
sub
and
lods
subl
xchg
cwtl
popf
sbb
sub
in
int3
push
cli
push
fisttpll
mov
xor
sti
mov
mov
outsb
xchg
lahf
insb
es
lahf
push
xor
xchg
fldt
or
fwait
mov
xlat
out
iret
idivl
cs
test
push
adc
sub
flds
jmp
dec
jl
or
or
cld
cmpsb
push
lea
xchg
xchg
or
jne
xor
mov
and
loope
pop
lock
pop
jbe
xor
das
and
sub
cmp
rcrb
pop
shlb
dec
xor
add
popa
cld
loope
imul
aam
es
push
or
out
movsb
enter
insb
pop
fstpt
outsl
sub
jns
aas
out
aad
jnp
test
fmuls
daa
dec
xchg
sti
scas
or
xlat
xor
ja,pn
push
xor
sbb
sarb
jne
mov
testl
lret
dec
pushf
jbe
call
xlat
push
arpl
ret
imul
xor
and
mov
jae
mov
int
cmpsb
pop
xchg
mov
push
cwtl
cmpsb
lods
mov
mov
scas
in
xor
push
in
ret
js
jg
lea
scas
jecxz
lret
ss
or
or
or
mov
sub
int
inc
out
push
adc
test
scas
pusha
pop
loop
shl
cmpsl
inc
mov
clc
out
insl
and
pushf
daa
jp
cmp
pop
fnstcw
ds
ja
aad
inc
popf
jge
enter
jne
dec
push
push
mov
dec
inc
faddp
cmp
mov
pusha
test
addb
mov
jg
pop
inc
dec
xor
int3
dec
jnp
mov
dec
sub
cld
or
fwait
mov
dec
pop
jge
scas
push
push
jno
lods
jl
and
jno
sub
jp
movsb
loopne
add
cltd
js
xor
mov
iret
sbb
jmp
mov
fidivrl
ss
je
lods
mov
pop
add
into
add
jnp
fsubl
cmp
sbb
test
das
fildll
shrl
hlt
cmp
test
out
aas
rcr
pop
into
clc
add
imul
lret
in
nop
mov
rcr
sub
sahf
xchg
movsb
outsl
lahf
and
imul
int
iret
das
cld
add
nop
out
xor
mov
inc
or
sub
fnsave
xchg
ficomps
dec
sti
push
mov
daa
sahf
sarb
enter
add
xchg
dec
inc
gs
test
or
push
sub
fisubs
out
or
ljmp
mov
mov
mov
std
aas
lods
sbb
pushf
sub
mov
xchg
outsl
cmpsb
mov
in
sub
xor
push
rcrl
mov
adc
movsl
cmc
ljmp
adc
movsb
fisubs
std
inc
cmp
cmp
mov
pop
scas
or
gs
lret
xchg
pop
jns
das
sub
cmp
mov
fldl
in
and
ljmp
in
mov
add
fists
loope
push
add
gs
xchg
loop
xor
lret
popa
adc
lods
inc
pusha
xchg
cli
mov
add
fwait
mov
inc
xor
bound
or
imull
lods
subb
or
push
sub
loopne
iret
mov
inc
repnz
xor
loop
xor
lock
adc
mov
sbb
sub
stos
loope
sbb
test
pop
test
out
test
mov
xor
inc
rcrb
mov
sub
xor
xlat
jp
xchg
daa
cmpsl
not
fdivrl
rclb
repz
or
mov
into
jb
push
data16
int
notb
xchg
jno
push
jae
pop
jge
jge
orb
push
and
cld
popa
pop
sarb
movsl
pop
push
jg
dec
mov
cmpsl
inc
pop
sbbl
xchg
aaa
adc
and
sbb
and
into
pop
xor
mov
push
xchg
nop
push
cli
lock
dec
adc
in
pop
out
movsl
js
mov
jb
mov
jg
pop
insl
lods
lcall
push
cli
les
inc
mov
jne
ds
outsl
or
stos
loopne
out
rorb
std
sbb
dec
outsb
cld
adc
outsb
pop
pop
adc
insl
pop
mov
frstor
adc
xchg
mov
mov
cmpsl
nop
cld
mov
xchg
hlt
inc
push
dec
movsb
dec
push
leave
rcrl
es
mov
roll
jmp
adc
out
sub
and
pop
xor
mov
jmp
decb
sar
bound
xchg
movsl
xor
push
loop
pop
adcb
adc
sarl
adc
cld
mov
fsubs
fucom
nop
inc
mov
jmp
pop
out
dec
call
sub
push
mov
shlb
dec
mov
outsb
jb
xlat
xchg
insb
jae
xor
lods
nop
or
mov
mov
cs
or
mov
add
cmp
fidivrs
icebp
or
ret
xor
or
mov
idivl
xor
lret
mov
add
xchg
dec
inc
cmp
xchg
adc
mov
adc
and
addr16
adc
push
hlt
xor
test
jp
dec
or
cwtl
xor
cmp
push
push
push
lods
mov
leave
jp
mov
jp
cli
and
cld
movsl
add
out
xchg
sub
cmp
and
push
xchg
std
or
xchg
fildl
mov
fs
and
out
jbe
jg
outsl
sub
add
fimull
enter
add
cwtl
bound
dec
sbb
ja
sbb
jp
mov
xor
dec
ret
movl
mov
sysret
nop
loope
bound
nop
sbb
stos
subb
lcall
fcomp
mov
pushf
sbb
mov
mov
shr
mov
imul
int
push
inc
push
push
xlat
xor
dec
pop
aam
and
adc
inc
shlb
jb
and
cmc
pop
xchg
in
sub
jg
mov
cwtl
xor
bound
clc
fs
or
lret
mov
xchg
fdivrl
int
mov
scas
mov
add
inc
sub
jae
inc
out
mov
mov
lcall
icebp
or
lret
icebp
sbb
xchg
xor
pop
sbb
xchg
add
popa
dec
dec
fincstp
ficoms
nopl
jecxz
mov
push
push
adc
dec
jne
push
hlt
fwait
insl
sub
jle
sub
ds
sub
jo
fdivr
in
push
cmc
pop
popa
mov
shlb
stos
xchg
fcmovnu
loope
fldt
jbe
sbb
sti
xor
loopne
mov
cmc
mov
fstps
xor
addr16
or
mov
inc
push
sbb
mov
fmulp
push
sahf
fidivrl
std
stos
inc
dec
addr16
push
fdivl
dec
lea
ljmp
bound
in
inc
xor
jl
pop
fs
outsb
mov
push
mov
out
inc
es
mov
mov
repnz
push
or
jo
andl
mov
xor
xor
arpl
negb
push
pushl
mov
int3
mov
aas
test
sub
mov
ja
shlb
push
fsubl
cmp
push
pop
pop
in
or
mov
mov
lahf
out
xor
or
dec
lret
popf
sub
pop
je
or
cmp
rol
fists
out
push
clc
lock
adc
inc
mov
sahf
sbb
out
rorl
pop
jmp
sbbl
lcall
or
lret
or
out
loopne
lret
jb
cmp
in
and
mov
arpl
add
push
dec
adc
mov
hlt
cmpsb
dec
xchg
xchg
cltd
lret
leave
and
lahf
xor
clc
or
or
pop
int3
clc
std
xchg
test
roll
cmp
sbb
ss
notb
outsb
pmuludq
lds
lods
pop
ja
xchg
test
push
es
inc
cmp
mov
add
jl
ljmp
fs
je
mov
lock
mov
cld
mov
pop
dec
sbb
repnz
inc
lret
mov
push
inc
daa
mov
and
insl
aam
adc
jae
mov
push
sub
lret
call
lock
out
cli
pop
lds
loope
std
adcb
fistpl
cltd
pop
xor
sahf
rclb
std
or
add
adc
loop
movb
jne
lahf
pop
iret
add
push
xor
and
push
das
sbb
dec
hlt
ja
push
popa
add
cli
push
mov
inc
aas
push
test
jbe
fmuls
jbe
or
push
adc
mov
push
lahf
fidivl
mov
push
jns
lods
nop
jmp
cmpb
mov
push
cltd
mov
xor
jbe
xchg
and
lcall
and
ret
cld
xchg
leave
sbb
inc
movsl
sub
pushl
jnp
xchg
sub
jle
pop
int
mov
repz
ret
jecxz
out
scas
ljmp
push
mov
notb
test
mov
lods
int3
fsubrs
mov
cmp
subb
sbb
add
adc
mov
sbb
adc
cmpsb
test
mov
xor
adc
jb
insl
jne
xor
xlat
push
cmp
mov
and
xor
inc
pop
mov
add
xor
adc
mulb
cmpsb
adc
inc
popf
pop
shll
xchg
mov
xchg
fcomps
ret
cmp
dec
leave
cmp
fwait
or
inc
js
cmpsl
mov
jne
pop
push
cmp
jae
inc
sub
daa
adc
jnp
popa
adc
sbb
test
xchg
mov
and
int3
jg
cwtl
mov
sub
lahf
cmp
js
sbb
out
mov
mov
andl
push
test
xabort
ljmp
lcall
cmpsl
and
sbbl
jae
pop
cmp
add
add
mov
add
xchg
adc
inc
xchg
add
mov
in
fdivs
sbb
into
adc
sti
cmp
ficoml
lret
pop
pop
or
int3
pop
xchg
fsubrl
bound
cmpsb
dec
push
subb
fidivs
push
movsb
mov
inc
xlat
jns
xchg
jne
call
sub
mov
stos
add
iret
int3
std
fidivs
lret
outsb
adc
jne
cmp
inc
dec
dec
pop
sbb
push
lock
jmp
imul
push
mov
shrl
mov
ja
scas
cltd
das
in
lea
lcall
das
xor
pop
sahf
and
addr16
lea
inc
loope
add
rol
pop
int
cwtl
inc
and
jns
xchg
aam
jmp
add
or
mov
psraw
shlb
divb
jp
cmpsb
cmpsb
test
ss
arpl
ret
xor
sbb
mov
jnp
aad
jne
xchg
popa
inc
loop
cmp
cwtl
popf
xchg
icebp
adc
packssdw
and
adc
pop
scas
or
push
int3
push
stc
push
test
out
sbb
sarb
add
rclb
sbb
jbe
mov
xchg
mov
and
es
xor
cmp
mov
inc
push
add
push
adc
jns
sti
sbb
in
push
movsl
pusha
mov
daa
jmp
lret
sti
push
jg
xchg
into
xorl
inc
pop
fmuls
xchg
inc
cmp
pop
pop
inc
and
mov
aas
sahf
js
test
mov
xchg
jge
clc
data16
jecxz
scas
loope
mov
loope
aad
jp
cwtl
mov
add
std
cld
xorl
jl
pop
movsb
jmp
pop
ret
clc
push
jge
cltd
cmp
fadds
popf
dec
dec
mov
insl
dec
into
pop
mov
sub
mov
sahf
outsb
sbb
lahf
or
out
outsb
incb
movsl
lret
insl
inc
push
add
js
inc
cmpsb
inc
cs
and
es
mov
movsl
xchg
sbb
sub
adc
inc
aam
stos
adc
jge
cltd
sbb
mul
push
xchg
mov
or
inc
dec
and
cmpsb
insb
popa
sbb
pop
or
in
fs
lahf
cmp
movsb
mov
jnp
nop
es
jge
xchg
fcoml
pop
cmp
adc
bound
dec
data16
fldcw
repnz
notb
sbb
imulb
xchg
frstor
into
shll
xchg
jno
sub
lods
dec
mov
fnstsw
jecxz
adc
int
cmp
jns
adc
dec
subps
addl
cltd
in
sub
shll
dec
out
mov
cmp
mov
add
test
or
xchg
and
aad
out
xchg
mov
stos
addr16
or
fildll
shlb
sarl
out
mov
push
dec
fwait
or
loop
das
lret
xor
sub
loope
mov
and
out
cwtl
cwtl
iret
rcrl
mov
mov
insl
test
outsb
mov
sub
enter
hlt
imul
cmp
or
pop
pop
mov
cmp
negl
imul
or
cmp
sub
mov
fidivrl
in
xor
push
mov
add
clc
xlat
or
jbe
outsl
xchg
mov
aad
push
es
xchg
lock
rorl
sub
arpl
dec
xchg
mov
cli
cmp
lahf
fidivs
ret
repz
add
in
pop
sahf
cmp
mov
out
fcmovnb
rcrl
and
cmc
mov
xor
and
call
pop
mov
scas
je
xchg
cli
xchg
dec
in
inc
in
jecxz
push
sar
mov
sbb
loope
lea
lock
jbe
lods
insl
lret
addr16
arpl
dec
push
test
mov
movl
jmp
js
push
test
repz
push
inc
sbb
dec
mov
clc
fisttps
or
mov
aas
out
add
xchg
fisttps
mov
les
jne
and
inc
xchg
cmp
or
aaa
inc
push
mov
xor
mov
rorl
and
jne
daa
jbe
fistl
mov
nopl
mov
mov
outsb
sub
inc
push
or
ja
jno
lock
xchg
shll
adc
ret
mull
mov
xchg
mov
xor
mov
loope
out
xor
in
push
and
fildl
jp
shr
in
dec
pop
stos
aad
xchg
xchg
mov
jbe
fadds
sub
cmp
mov
mov
inc
add
push
mov
ljmp
pop
enter
push
imul
cmp
fnsave
mov
add
inc
lods
bound
push
push
mov
popa
lcall
icebp
jnp
les
mov
pop
mov
ja
repnz
dec
notl
sti
insb
lock
mov
sub
fdiv
aad
ret
mov
jecxz
jle
mov
leave
faddl
xor
or
xchg
sbb
sub
sti
mov
clc
mov
daa
xchg
sarl
inc
xchg
outsb
out
mov
inc
cmp
inc
data16
jp
and
fnstsw
lods
lock
push
out
sbb
ja
gs
push
push
push
adc
cmp
dec
fcmovbe
fs
lds
jb
aam
aad
sub
cmp
filds
pop
and
repnz
arpl
push
cmp
jecxz
sbb
mov
sahf
dec
mov
call
movb
and
std
fsubs
mov
clc
push
cmp
out
mov
mov
cld
mov
jg
stc
push
imul
mov
pop
push
gs
filds
mov
scas
repnz
rol
sbb
imul
clc
jmp
mov
inc
test
jp
jg
lahf
iret
xor
sti
daa
add
inc
mov
fsts
sbb
sub
jne
imul
mov
insl
mov
dec
adc
dec
lcall
data16
out
das
jmp
pop
orl
mov
jge
mov
pop
add
lods
cmp
pop
enter
jno
jecxz
leave
jmp
gs
lock
fstps
xor
in
cmp
mov
imul
clc
fcoms
bound
pusha
lock
imul
imul
push
cwtl
mov
cmp
mov
add
cmp
mov
pop
jno
or
jne
outsl
mov
outsl
adc
js
sbb
shll
out
mov
test
mov
lock
mov
movsb
movsl
inc
add
mov
popf
pop
mov
fsts
leave
test
stos
cmp
inc
xor
stc
cmpsl
dec
in
loope
aas
dec
adc
inc
push
cmp
test
xchg
mov
and
ret
div
jno
xor
dec
sbb
ret
inc
sarb
lods
cmpsl
lret
xchg
jle
popa
cmp
pop
jbe
sarl
outsb
pop
daa
mov
out
or
and
pushf
sbb
enter
imulb
subl
inc
mov
mov
xorl
loopne
sbb
rcrb
xor
les
push
imul
and
jecxz
pop
adc
cmp
mov
add
jb
aaa
xor
cmc
dec
popa
and
stos
jne
adc
jo
sahf
mov
je
xorb
imul
pop
test
mov
lods
sbb
jno
jne
ror
sbb
incb
pop
cmp
pop
add
in
pop
subb
push
and
cmpsl
push
xchg
jecxz
sbb
mov
shll
jge
mov
sub
or
mov
lret
push
out
xchg
call
mov
fwait
xchg
out
aaa
xor
add
mov
push
rorl
addr16
adc
in
and
rcrl
push
pop
pop
mov
icebp
arpl
or
and
cmp
mov
and
mov
hlt
popa
test
arpl
cs
adc
mov
mov
push
push
push
outsb
or
fdivl
insl
nop
pop
outsb
push
push
pop
and
xlat
xorl
pop
mov
aaa
lahf
push
inc
roll
adc
int3
inc
lea
outsl
mov
xchg
scas
add
repnz
movsl
repnz
pop
popa
movb
and
jo
fdivr
js
insb
int
pop
ds
cltd
rol
mov
mov
push
sub
mov
loopne
enter
dec
xchg
loop
cmp
dec
pop
mov
cmp
xchg
insb
dec
xchg
or
addr16
xchg
jmp
jle
mov
xorb
jo
xchg
sbb
mov
adc
popf
pushf
fs
mov
mov
or
inc
adc
aad
mov
fldenv
xchg
xchg
dec
pop
push
movsl
add
pop
outsb
incb
out
pop
add
xchg
outsb
jno
test
jl
pop
lcall
inc
pop
popa
and
test
popa
push
ja
loope
jnp
inc
dec
fnstenv
lahf
xchg
mov
and
enter
scas
fisttpl
sub
addb
inc
xchg
aam
sbb
das
jb
inc
dec
mov
cwtl
jb
dec
adc
and
push
mov
dec
aad
hlt
test
rcl
adc
and
divb
data16
fsubrl
push
lret
push
call
fwait
xchg
call
add
add
xlat
push
mov
push
rcr
xchg
cld
xchg
arpl
js
inc
sbb
and
push
push
cwtl
mov
jp
roll
cmc
mov
fsubrp
or
dec
xchg
mov
jae
in
or
ja
dec
jg
adc
jg
jne
and
bound
int
add
mov
mov
sub
dec
dec
in
push
mov
jbe
sbb
mov
dec
lret
cmp
inc
mov
push
xchg
lock
sub
rcll
mov
fwait
mov
xlat
mov
sbb
inc
lods
or
iret
out
fimull
pop
inc
xor
outsl
cmc
rcrb
mov
add
aaa
mov
pushf
aas
imul
fisttps
leave
push
incb
enter
and
push
dec
and
sub
test
cwtl
sbb
cmpsb
fcompl
movsl
icebp
cld
fs
aas
jmp
inc
cmp
ret
inc
data16
adc
sahf
pop
loopne
add
or
adc
jg
pop
daa
cmp
idivl
sub
lock
lret
adc
pop
je
xorl
dec
and
push
cwtl
push
mov
cmp
mov
fs
push
pop
cmp
repnz
rorl
dec
jmp
push
push
xchg
js
sahf
daa
push
cmpsb
fs
int3
mov
mov
cmp
mov
out
push
shrb
jne
pop
or
fsubr
cld
fdivrs
pop
xor
sub
in
out
in
jle
mov
out
or
mov
imul
insb
bnd
sti
enter
dec
inc
popl
jp
mov
push
test
sub
stos
lock
mov
mov
cmp
ret
bound
call
cmp
xor
das
mov
in
jbe,pt
decl
dec
or
out
sbbl
insb
mov
xor
pusha
enter
popf
adc
jns
pop
or
stos
scas
pop
out
and
sub
add
push
sbb
out
ljmp
je
leave
inc
add
loop
outsl
and
dec
jl
mov
and
pop
aam
pusha
xchg
cmp
cmp
add
out
mov
mov
jmp
fcomps
out
cld
lret
or
rolb
xchg
lcall
imul
jecxz
jae
jno
xchg
dec
xchg
dec
and
in
cmp
dec
repz
leave
out
inc
sbb
loopne
dec
jo
sbb
mov
add
stc
lea
adc
xchg
lret
push
test
push
inc
jge
add
lock
jmp
and
inc
loopne
push
xchg
inc
test
andb
stc
or
idivb
rolb
xor
outsl
sub
ret
mov
into
fldt
cmpsb
mov
insb
or
lock
arpl
cmpl
xor
iret
div
or
xor
pop
add
xchg
and
or
push
sub
mov
xchg
add
xchg
mov
lock
test
push
add
in
idivb
enter
adc
mov
or
jbe
jp
loopne
mov
imulb
cmpsb
test
jbe
cmp
gs
pop
sbb
jae
jbe,pn
hlt
jl
xchg
int3
jae
xchg
add
sub
lea
ja
mov
iret
mov
cmc
mov
push
outsl
cmc
out
add
and
pop
push
jg
xchg
mov
mov
xchg
mov
stc
fsub
adc
mov
jmp
xor
push
int3
adc
dec
arpl
mov
dec
mov
sub
push
movsl
rcrl
es
pop
out
and
sahf
mov
in
add
mov
push
int3
jl
cs
push
ret
push
push
xor
rclb
jg
stos
bound
sub
sbb
outsl
push
sub
sub
and
jle
jb
fbstp
clc
or
shlb
jno
jno
lock
inc
ret
mov
jnp
adc
and
shrb
jb,pn
sub
jo
loope
pop
cmp
lods
adc
xor
mov
jecxz
add
enter
je
fwait
xchg
adc
cmp
fsubp
ja
ret
mov
sti
hlt
int3
xor
stc
test
inc
bound
scas
popa
pop
mov
and
and
jo
push
and
sbb
or
bound
leave
popf
int
in
scas
pop
push
jo
inc
inc
jmp
bnd
outsl
movsl
sbb
pop
fisttpl
ds
and
add
iret
inc
mov
pop
dec
iret
int3
pusha
and
pusha
arpl
jmp
lcall
hlt
sbb
adc
or
xchg
fxch
mov
pop
and
ret
lcall
loopne
sub
cmp
imul
fs
pop
mov
mov
inc
push
cli
xor
movsl
lea
jnp
mov
ret
rcr
or
addb
ret
fbld
fbld
subb
repz
shll
mov
call
cmpsb
bound
dec
rcrl
repz
je
pop
out
jmp
lret
xlat
into
mov
fnstcw
jl
add
jmp
mov
or
loop
mov
inc
stc
or
stos
sub
inc
aam
gs
adc
sbb
jle
push
jbe
mov
rcr
aad
je
push
sub
inc
xor
dec
fs
and
sbb
rcll
push
cltd
pop
lods
pop
fs
cwtl
ljmp
fiaddl
in
xchg
sarb
push
ds
ficoml
fstl
adc
cmp
in
mov
sub
aam
cli
out
xor
xor
call
or
mov
addl
mov
repnz
jns
shrb
inc
adc
out
push
std
rcll
mov
xchg
pop
lcall
inc
or
lods
mov
insl
push
sub
out
sbb
inc
add
hlt
repnz
jnp
cmp
loopne
and
push
out
push
enter
jmp
and
inc
pushf
xchg
aas
push
and
jge
pop
xchg
rcrl
cmp
sbb
cmp
ret
pop
and
xchg
and
jg
stos
out
mov
push
push
filds
gs
mov
mov
inc
or
jp
or
pusha
mov
xchg
cmp
mov
sub
jo
inc
or
adc
sbb
test
xor
add
aad
fcomps
mov
adc
mov
inc
inc
sbb
aas
dec
cld
pop
and
pop
nop
inc
push
pusha
les
int3
jecxz
pop
je
fnstcw
cld
mov
push
push
call
or
rcrb
push
imull
mulps
mov
or
xchg
or
pop
scas
mov
imul
adcl
imul
mov
xchg
mov
push
mov
scas
mov
repnz
sub
jo
sbb
mov
mov
imul
test
jns
sub
into
cmp
nop
mov
dec
xor
hlt
outsb
imull
sub
xor
push
push
mov
loop
rcrb
jbe
cwtl
inc
ret
add
jae
mov
mov
cmp
xchg
mov
mov
adcb
xchg
or
andb
xchg
in
ds
sarb
loop
test
adc
xchg
fnstsw
fimuls
js
movsb
subl
inc
jae
addl
nop
xchg
icebp
addb
xchg
cld
or
loope
outsl
inc
dec
mov
inc
inc
jbe
add
stos
push
jnp
gs
addr16
popa
push
iret
xchg
aam
movsl
fildll
adc
js
dec
push
insb
jl
ljmp
xor
outsl
mov
out
and
inc
les
rorl
mov
cmp
push
lds
loop
mov
xor
mov
pop
mov
and
jne
sbbb
lcall
cld
xchg
fisubl
arpl
test
lret
lds
pusha
cmp
sub
cmp
mov
jbe
aaa
and
mov
push
out
popf
fs
ds
pop
jp
xlat
ds
stc
sub
sbb
lea
mov
call
mov
dec
xor
in
inc
bound
insl
inc
out
cwtl
aaa
addl
stos
adc
pop
add
pop
in
push
mov
ret
fistpll
call
sbb
lds
adc
addr16
cmc
sti
cmpsb
dec
fcompl
cltd
pop
leave
out
test
add
fstpl
fists
jbe
je
cmp
decb
int3
sub
aad
inc
roll
or
inc
mov
mov
loopne
xor
fmuls
mov
lds
dec
lods
mov
orl
rcrw
xor
pop
sets
adcl
adcl
lahf
adc
mov
pop
xchg
in
jns
mov
std
and
fs
cmpsl
fs
ljmp
xchg
ret
divl
int3
sarl
or
stc
inc
inc
mov
mov
mov
in
rcl
mov
inc
sbb
adc
push
jmp
ficompl
imul
pop
add
mov
pop
inc
test
push
cwtl
ljmp
sub
pshufw
mov
dec
dec
sarl
xchg
scas
inc
pushf
out
or
push
adc
or
push
sbb
xor
adc
iret
sub
in
stos
in
loopew
mov
dec
xor
xchg
aaa
scas
loop
mov
mov
or
jp
into
xchg
inc
push
outsl
push
stos
jbe
mov
test
push
ss
aam
inc
mov
lods
sarb
push
pop
inc
inc
iret
repz
out
sbb
xor
faddl
roll
add
jl
push
iret
or
hlt
gs
mov
mov
scas
out
cs
mov
movsb
xor
xor
aad
aad
and
iret
out
js,pn
and
jne
enter
add
and
mov
loop
jnp
je
clc
inc
mov
cmpsl
cmpsb
jns
addl
push
mov
push
dec
jg
push
mov
mov
repz
pop
hlt
xor
int3
mov
mov
and
lahf
xlat
push
lldt
mov
pop
sbb
repz
ja
mov
pop
xor
js
push
dec
out
jne
popf
in
bound
jmp
cmc
loopne
cld
push
and
and
sbbl
lcall
outsb
add
push
call
sbb
cwtl
sub
xor
jb
arpl
mov
jmp
shll
inc
pop
mov
push
mov
les
out
cmp
loope
xchg
in
push
jl
push
xor
sub
sbb
pop
push
lods
lcall
mov
add
push
xor
push
push
in
in
add
std
jo
ja
faddl
mov
mov
ror
rcr
loop
sub
mov
push
xchg
cmp
decb
arpl
out
sub
mov
out
inc
or
dec
sbb
mov
or
repnz
dec
jo
sub
je
cmp
dec
das
loope
movsb
out
aam
das
pop
fcmovnu
pushf
movsb
sbb
xor
or
xor
bound
add
jnp
cli
pop
daa
pop
or
lcall
movsb
xor
push
fsubrl
xchg
mov
mov
pop
iret
mov
les
xchg
in
movsl
sbb
call
inc
lret
xchg
inc
stos
mov
enter
mov
lods
add
fs
sub
inc
and
cmp
jne
fidivs
xor
not
mov
sub
into
movb
aas
dec
rcll
xchg
mov
jg
adc
addr16
or
dec
push
sti
fnstsw
cltd
aam
pop
lods
outsb
andl
repz
lock
inc
popa
sbb
repnz
sub
sbb
jp
jg
ss
inc
pop
pop
les
aaa
cmpsb
adc
mov
push
aam
out
sbb
divl
sbb
push
xchg
dec
cmp
clc
pop
orb
arpl
mov
movl
jae
and
inc
fildll
mov
imul
jmp
push
ss
fwait
insb
ljmp
jne
mov
scas
repz
xchg
je
mov
adc
and
or
ljmp
jg
xor
in
aad
fwait
ss
inc
inc
cmpl
fwait
ret
pop
push
fisubl
fisttpl
xchg
xchg
aaa
test
adc
popa
add
in
cmp
in
pop
jg
mov
cli
subb
repnz
pop
xor
es
lds
pusha
pop
sub
jo
cs
ljmp
or
aas
mov
xchg
add
and
or
jns
in
cli
dec
inc
mov
mov
add
jo
xchg
ljmp
sub
adc
leave
pop
mov
pop
popf
std
or
clc
repnz
mov
clc
hlt
ja
mov
lds
inc
dec
add
mov
jmp
adc
stc
mov
sbb
push
mov
pop
fwait
into
daa
movsl
sbb
es
mov
pop
out
lods
mov
fdivrl
mov
icebp
xor
add
mov
pop
data16
jo
push
lods
add
int3
out
mov
pop
cmpsl
sar
mov
movsb
inc
dec
ja
stc
inc
in
pop
inc
add
cld
sub
cwtl
mov
stos
lods
pop
sbb
cs
mov
push
xchg
pop
jns
loop
add
repnz
xchg
add
in
in
xorb
jecxz
mov
popa
cld
jp
xchg
jb
mov
addb
ret
subb
inc
mov
push
mov
add
add
aam
repnz
aas
jbe
cmp
mov
push
jbe
ljmp
stos
xor
fists
cmp
pop
mov
out
lock
mov
mov
and
in
push
lock
or
clc
jl
ret
sub
lret
mov
sbb
xor
push
xor
cli
adc
push
and
add
loope
movsl
outsl
arpl
cwtl
and
in
add
shrb
outsl
jno
ja
cmp
mov
mov
xchg
jl
negb
jns
mov
test
inc
or
adc
dec
mov
mov
push
jg
insb
or
jae
rolb
sub
pop
cmp
out
xchg
xchg
in
sub
iret
sub
jo
sbb
gs
fcom
sub
aas
sbb
adc
cltd
xor
ljmp
xchg
push
xchg
cmp
sub
jmp
ss
or
jne
rclb
adc
jle
stos
add
pop
cld
imul
xchg
fsubs
fists
pop
mov
lock
stos
mov
lods
mov
rorb
insb
and
stc
push
mov
pop
lods
jo
test
xor
add
lds
adc
popf
mov
lcall
repz
fwait
imul
xor
jl
gs
dec
jmp
int3
in
test
dec
jl
push
aad
ret
adc
lret
jl
mov
leave
push
cmp
xor
ss
daa
sub
in
mov
and
sub
mov
cwtl
mov
in
aaa
cwtl
xorl
mov
clc
inc
outsb
ret
mov
ljmp
or
mov
cli
add
dec
stos
pop
cli
add
add
out
lret
scas
mov
in
imul
dec
es
dec
sti
in
cmp
cmp
icebp
sub
mov
jg
outsb
mov
adc
pushf
jns
js
in
inc
push
dec
push
dec
fbld
test
lods
in
jnp
mov
push
negb
mov
cmpsb
fwait
leave
xchg
in
call
outsb
imul
rcrb
imul
push
adc
leave
and
cmp
jb
inc
jmp
or
divl
es
sub
cmc
push
cmpsb
cmpsl
in
sub
scas
sub
mov
cmp
cmp
sbb
std
jnp
sub
xchg
movsb
jecxz
out
push
sub
pop
mov
les
in
or
testb
xchg
out
or
mov
inc
out
mov
sti
cmpsb
fcomp
push
enter
in
icebp
outsb
pusha
pop
popa
popa
xchg
scas
mov
scas
test
clc
mov
jns
test
sti
fsubs
sub
push
or
mov
jp
sti
pop
sbb
aad
push
rcrl
or
in
xchg
adc
xor
xchg
mov
pop
popa
sub
enter
sub
movsb
pop
push
fsubs
add
iret
pop
pop
adc
dec
es
xchg
pop
into
cmp
cmpsl
fidivs
mov
gs
repz
pop
or
jae
lret
adc
sbb
pop
shlb
and
add
mov
popa
nop
mov
inc
and
cmp
pop
cs
mov
nop
daa
adc
decb
mov
addl
jo
adc
inc
shlb
es
mov
jnp
ja
mov
scas
inc
lret
mov
jo
jnp
scas
dec
lock
hlt
inc
sahf
data16
in
cli
les
stos
shll
stos
sbb
imul
daa
inc
and
xor
lea
jmp
mov
fimull
jno
mov
aas
jmp
lea
test
pop
jl
pop
into
pop
sahf
incl
outsl
inc
add
pop
xchg
fsts
mov
insl
mov
mov
hlt
pop
js
imul
in
inc
dec
jp
aad
aas
adc
idivl
jle
loopne
out
jbe
shl
je
xor
xor
push
imul
popa
mov
mov
outsl
imul
sub
pop
insl
xchg
out
scas
xor
cmp
int3
xchg
sti
pop
fisubrl
ret
mov
ja
adc
pop
and
xlat
jmp
mov
movsb
cmpsl
or
data16
int
cs
or
push
push
aam
xor
xor
add
stos
inc
add
jns
cltd
jmp
inc
rolb
pop
mov
mov
push
fsub
mov
out
mov
cld
pop
add
das
cmpb
scas
js
push
mov
test
loop
aas
insl
add
sbb
push
dec
cld
mov
out
mov
and
add
cmp
aad
scas
cwtl
mov
adc
decb
dec
sbb
xchg
dec
inc
packuswb
pop
pop
push
je
fcomi
test
js
and
idiv
dec
push
daa
mov
ljmp
les
enter
das
pop
xor
insb
sub
imul
stos
dec
xchg
sti
les
dec
sub
sahf
fsubrp
xorl
jmp
mov
outsb
xor
sub
outsb
or
add
addr16
fbld
imul
push
lret
in
mov
shlb
test
push
pushf
cmc
jb
mov
inc
mov
enter
add
jb
adc
out
out
clc
pusha
dec
mov
loope
pusha
fwait
add
js
add
mov
mov
mov
in
pop
or
and
pop
out
push
adc
pop
jnp
mov
cltd
les
insb
jecxz
ja
rcrl
sbbl
imull
mov
add
jb
sarl
pop
cltd
add
pop
mov
pushf
sub
and
js
iret
gs
lds
sbb
daa
lar
inc
xor
lds
mov
add
xchg
xor
mov
mov
sbb
dec
push
hlt
add
cmp
lahf
jl
fisubs
mov
movsl
mov
in
pop
pop
stos
es
cmc
or
pop
jg
mov
sub
aas
mov
ss
adc
pop
xorl
pop
mulb
repnz
icebp
insl
sbb
hlt
imul
mov
movsl
and
dec
cmp
inc
lds
fs
push
cmp
out
adc
and
sub
jo
push
mov
addr16
jne
xchg
ss
push
cmp
xchg
pushf
sbb
cmc
hlt
pop
or
push
push
roll
pop
movsb
stc
clc
xchg
dec
lret
sbb
dec
jmp
or
addr16
jno
int
stos
pop
xchg
rorl
sub
rorb
arpl
in
dec
fcoml
jo
xor
mov
lret
sub
ss
pop
stc
mov
leave
adc
int
jmp
xlat
fcmovu
fildll
mov
mov
jns
lcall
and
call
cmpsl
cmp
or
push
cmp
or
pushf
test
mov
inc
mov
or
inc
push
or
shrb
add
aad
add
ret
and
and
xchg
mov
pop
mov
adc
and
cli
pusha
cwtl
add
cmp
test
sarb
mov
mov
mov
and
mov
testl
outsl
cmp
repnz
jo
xchg
push
lret
mov
pop
dec
jmp
int3
lea
xor
icebp
adc
push
inc
inc
xor
add
xor
add
in
fdivrs
push
push
cwtl
andl
or
jne
scas
xlat
fstpl
jae
gs
sub
adc
lock
data16
repz
pop
pop
fucomp
sbb
cmpsl
sub
mov
int3
mov
mov
popa
hlt
xchg
mov
and
pop
jns
adc
and
mov
test
sub
jbe
stos
mov
xlat
loope
jne
cmc
call
inc
xchg
cmp
popf
pop
in
popa
popf
push
lock
cmpsl
xchg
dec
fwait
arpl
mov
dec
jge
ds
ljmp
test
pushf
ret
sbb
insl
fcmovnb
ss
loope
mov
aad
adc
cmpsb
ja
jmp
popf
das
lret
push
pop
or
jnp
fistpll
jmp
lret
ds
sub
and
adc
dec
loopne
stos
das
xchg
in
and
inc
inc
outsl
mov
aam
in
cmpsl
mov
hlt
sub
rclb
jmp
iretw
dec
and
mov
sbb
es
xchg
dec
loop
sub
fcompl
pusha
xor
dec
cmp
loope
mov
sbb
lahf
mov
xchg
loope
add
mov
jb
sub
adc
movsb
pop
scas
insb
pop
jno
sub
sbb
mov
xor
repnz
into
cmp
dec
sbb
lcall
jae
out
mov
cwtl
ds
sub
jo
js
ss
add
pop
mov
popf
dec
es
stos
push
add
fists
sbb
adc
sbb
iret
mov
cmp
icebp
inc
adc
pop
test
xchg
adc
jp
mov
imul
add
cmp
popa
out
lret
push
jle
mov
inc
daa
mov
xchg
pop
cmp
push
icebp
mov
ret
clc
or
xor
out
repnz
jmp
mov
inc
in
sbb
ja
pop
jle
mov
pop
mov
out
sbb
push
cmpsb
adc
push
inc
popa
sahf
repnz
ja
mov
xchg
ljmp
xchg
pushf
or
cwtl
sbb
dec
mov
sysenter
rorb
adc
mov
xchg
inc
adcl
jecxz
insb
push
into
movsb
mov
mov
enter
add
jmp
in
inc
cmpsl
or
push
mov
jmp
jnp
fcomp
stos
int
jns
sub
sahf
icebp
int
sbb
or
or
jbe
and
inc
cmp
hlt
clc
aaa
idiv
inc
pop
dec
cltd
mov
in
pop
lahf
arpl
xor
cwtl
jg
out
into
jle
cmp
inc
lahf
into
sbb
daa
in
lahf
mov
mov
movsb
in
add
jge
sbb
in
xchg
or
jb
mov
js
jbe
xlat
add
jbe
jne
adc
xchg
sbb
insl
repnz
mov
cmp
mov
jnp
out
pop
daa
jp
mov
sbb
daa
dec
insl
int3
in
xor
icebp
pop
pop
push
dec
fisttpll
dec
mov
inc
pop
mov
gs
dec
xchg
js
mov
cli
test
xchg
iret
add
jo
lods
je
sbbl
lahf
xchg
shld
pop
mov
pusha
mov
sbb
and
lret
pop
les
data16
aad
in
or
pop
ja
shlb
mov
lea
fwait
adc
jnp
shl
xor
mov
rorl
sub
add
stos
mov
aaa
cmp
mov
mov
je
loope
mov
xor
fs
jmp
cmp
sub
push
cmc
bound
jb
xor
cmp
adc
dec
daa
repz
dec
cmp
addb
andl
lods
imul
cmp
mov
popa
mov
mov
das
mov
sub
sub
xor
inc
int3
shrl
jo
aaa
bound
sub
push
mov
fcompl
adc
xor
mov
faddl
cmp
test
xchg
jo
push
aaa
and
xchg
into
rcr
mov
jle
scas
jecxz
rcrb
mov
jp
sub
sub
imul
mov
xor
mov
je
xchg
imul
fisubl
insb
sbb
or
sub
dec
lods
cs
push
dec
mov
stc
or
outsb
xchg
testb
shl
inc
push
ljmp
xor
ss
aad
cmp
insb
add
xchg
jmp
loopne
push
sbb
cmpb
cmp
add
and
aas
sub
repz
dec
out
and
jb
mov
and
sbb
sub
push
sub
movsb
and
xchg
jecxz
lods
rorb
pop
jmp
xchg
push
mulb
adc
out
inc
pop
outsb
push
push
aad
lods
inc
insl
ss
push
cmp
xor
popa
pusha
or
scas
mov
les
in
dec
lahf
sbb
inc
sub
xchg
jno
stos
adc
notl
sub
inc
addr16
out
mov
out
jle
cmp
fcomps
or
sbb
lret
mov
fdivs
mov
pop
adc
or
mov
pop
cmp
push
dec
shll
add
inc
into
push
mov
out
adc
out
jo
mov
scas
loopne
enter
jecxz
pop
fimull
or
pushf
insl
or
or
pop
test
cmpsl
cmc
rcll
add
mov
and
mov
push
stos
cmpsl
je
dec
lea
mov
or
adc
xchg
push
popa
pop
testl
lock
cmpsl
inc
add
add
ds
xchg
call
mov
mov
in
in
out
inc
pop
shll
lahf
cmp
push
mov
xchg
cmp
scas
mov
fcom
and
pusha
pusha
sub
mov
stos
insl
sbb
mov
inc
sub
sub
xchg
pushf
testl
sub
mov
mov
andb
cmp
jmp
mov
push
lods
sti
adc
icebp
ret
out
inc
jne
mov
lea
jp
clc
es
inc
dec
loop
ja
test
int3
add
mov
adc
mov
addr16
or
les
mov
addb
lods
scas
sbb
dec
cmpsl
sbb
iret
push
jns
mov
les
cmp
cmp
das
scas
mov
in
fisubrl
and
push
and
xor
add
push
xchg
push
clc
les
rolb
dec
push
call
rorb
jne
pop
xor
je
outsb
scas
call
ret
cltd
xchg
cmpsb
into
mov
lods
xor
cmpsl
in
adc
stos
push
dec
lods
shll
ljmp
imul
out
jb
mov
in
dec
add
mov
jns
pop
outsb
shlb
jge
push
or
inc
jmp
scas
sbb
and
xchg
insb
push
test
movsl
daa
jbe
sub
mov
jne
sahf
sub
lahf
dec
idivb
clc
loopne
cwtl
mov
nop
into
add
repz
sbb
cmp
push
xor
sub
jecxz
jl
mov
and
and
mov
mov
sub
mov
jl
out
mov
inc
loope
ds
cmpsb
inc
add
mov
lea
add
adc
push
ret
push
mov
and
push
mov
int3
xor
jns
lea
dec
notb
test
or
inc
jne
xchg
mov
inc
sub
lret
or
mov
add
ret
outsb
xchg
jo
out
test
adc
mov
sti
mov
mov
cmp
movsb
push
pushf
sti
cmpsl
loope,pt
aaa
cltd
mov
in
dec
les
gs
jne
or
jle
mov
pop
in
adc
mov
or
jge
jl
add
push
mov
inc
aad
mov
mov
lahf
leave
imul
or
sub
orb
ret
mov
mov
mov
fidivrl
stos
test
ljmp
out
dec
fcompl
fs
imul
sahf
movsb
pusha
mov
call
lds
dec
in
sub
jns
jecxz
xchg
dec
or
adc
adc
scas
in
push
add
fldcw
sub
test
pcmpgtw
lret
xorb
push
mov
pop
sbb
inc
das
ret
xor
and
sbb
jle
adc
leave
pop
sbbl
or
adc
imul
xor
pusha
aam
leave
in
cmp
loop
imul
test
in
pop
mov
push
fidivl
mov
jno
test
mov
cmc
testb
pop
sbb
adc
mov
mov
xchg
xlat
jl
or
imul
cld
stos
and
into
popf
cs
mov
cltd
and
cli
jns
dec
ss
fcoml
setg
or
pop
out
repnz
icebp
lods
fsubrs
mov
leave
lock
dec
popa
pusha
push
push
add
pop
push
ss
divl
ret
push
mov
in
mov
pop
dec
es
mov
sub
adc
jae
jp
out
inc
push
stc
cmp
test
or
xchg
test
mov
adc
inc
jb
pusha
jp
outsl
dec
jo
dec
pusha
sub
addl
imulb
jmp
jae
adc
dec
test
pop
xor
mov
aam
xor
fists
mov
sub
xor
or
ds
jne
repnz
lret
or
jne
pop
loope
and
aam
adc
loope
in
adc
das
pop
mov
cmp
in
icebp
outsl
jecxz
pushl
xchg
dec
lret
movsb
mov
xchg
cmp
sbb
cmp
jb
js
inc
cli
push
mov
sbb
or
imul
fiadds
and
pusha
scas
inc
aaa
ret
aas
adc
inc
sbb
rcrb
int
cwtl
jge
mov
or
jb
repz
add
or
fwait
sbb
pop
sub
rolb
mov
xchg
out
aaa
icebp
ja
mov
push
xchg
and
mov
shl
js
xor
into
cli
addr16
add
cmp
cmpsl
cmpsb
mov
mov
fcoml
dec
call
imul
xchg
lods
pusha
mov
les
or
loop
std
lods
loopne
insb
or
pop
xchg
lea
mov
jae
mov
lods
xor
pushf
inc
notb
mov
ss
pop
or
test
mov
sbb
out
cmp
icebp
fstps
pop
adc
cmpsb
lods
pop
shll
mov
ds
outsb
and
pop
je
scas
dec
and
stos
xor
sub
add
mov
lret
xor
lahf
jno
mov
lds
or
pop
or
mov
jnp
jge
sti
je
test
pop
lock
pop
leave
shlb
push
mull
andb
out
xor
inc
por
jmp
mov
addr16
dec
xor
dec
adc
dec
cltd
shr
jecxz
jae
sub
loope
popf
and
xor
inc
pop
adc
movsl
push
psubsw
negb
push
add
jns
pop
in
and
stc
pop
ljmp
jmp
les
aam
mov
sahf
testb
inc
inc
push
aas
loop
int3
adc
fistpll
mov
inc
aam
insl
or
adc
sbb
xchg
out
test
and
dec
or
dec
test
enter
jl
jns
adc
cmpsl
pop
mov
movsl
pusha
mov
xor
aad
xor
or
mov
cwtl
or
fdivrl
mov
cmc
xchg
mov
pop
dec
mov
lahf
add
sbb
in
fldl
push
cmp
int
outsb
cwtl
and
ficompl
shrb
and
dec
loop
in
dec
xchg
in
add
jne
fistpl
aas
dec
cmpsb
dec
dec
dec
repz
mov
daa
xchg
cmp
pop
pushf
into
fnstenv
pop
data16
xchg
lock
inc
cmp
sbb
xchg
in
lods
stc
jbe
ja
adc
imul
rorb
insl
or
test
enter
into
clc
lret
repnz
push
mov
jno
pop
les
pop
xorb
mov
pop
add
icebp
call
popf
xchg
add
popa
ja
mov
out
movsl
sub
pushf
push
rcrl
js
and
pop
mov
int3
dec
inc
pop
aam
pushf
push
imul
mov
and
les
mov
mov
sti
push
movsl
add
xchg
mov
in
xchg
cwtl
fistps
mov
das
add
movsb
sbb
aas
mov
sti
or
scas
mov
testl
std
sahf
aas
test
lea
and
int3
rclb
mov
push
mov
push
shrb
cmpsb
xchg
push
in
jae
cltd
xor
mov
data16
mov
inc
push
clc
sub
inc
sub
mov
xor
ljmp
xchg
lock
mov
mov
pop
adc
cltd
das
loopne
lods
cs
xor
xchg
or
and
mov
out
pop
xchg
pop
sub
cld
dec
xor
pop
into
cmp
and
or
mov
inc
lret
repz
lods
outsl
mov
push
jne
cmp
lock
push
rcl
nop
shlb
push
push
inc
loopne
imul
pop
xchg
pop
cs
cmp
mov
and
inc
jp
adc
dec
or
mov
xchg
dec
mov
xchg
xor
enter
pop
lock
jae
div
pusha
mov
pop
icebp
xchg
add
xor
out
jle
out
jecxz
gs
mov
arpl
jp
push
or
cmp
loopne
shr
ss
sahf
sub
mov
loope
cmc
call
out
mov
adc
ficompl
aad
sub
xchg
jo
mov
mov
ja
sub
push
mov
sbb
in
mov
mov
cld
sub
xchg
cmp
xchg
outsb
lods
pop
xchg
mov
xchg
adc
fnstsw
jns
ja
or
xchg
jg
add
dec
movsl
stc
lock
mov
xchg
adc
test
in
jge
testl
xchg
push
sub
push
sub
stos
arpl
adc
jg
rol
cwtl
or
push
jle
dec
imul
cld
es
jp
cwtl
sub
pop
dec
int3
pop
inc
jno
mov
cmp
fxch
sub
iret
ret
aaa
jo
inc
cmp
hlt
addb
mov
mov
sahf
mov
sbb
xlat
xor
jnp
popf
dec
jae
push
adc
cmp
shll
xchg
xor
data16
shrl
inc
pminsw
subb
cmp
cltd
push
xchg
xchg
stos
and
adc
pop
int3
mov
xor
xchg
and
dec
cmp
mov
adc
test
in
or
push
and
sbb
shl
or
or
std
sub
sbb
or
scas
into
or
movsl
mov
test
add
push
popw
xchg
dec
pop
xlat
mov
lock
sub
cmpb
rcrb
cmp
cmpsl
mov
inc
mov
test
cmp
mov
mov
shl
pushf
lret
cld
cli
scas
test
jbe
or
mov
mov
jle
pusha
xor
inc
sar
lcall
cmpsb
call
sbb
dec
stc
stos
ror
xchg
iret
mov
adc
jbe
mov
call
pop
jmp
and
popa
arpl
sub
and
xor
sbb
fwait
outsb
inc
test
jge
pop
push
in
mov
testb
xchg
pop
ljmp
enter
fdivrs
in
jo
aaa
std
out
fs
sub
out
cld
or
xchg
hlt
sbb
sub
fldcw
inc
test
mull
aam
mov
insl
in
int
lock
aas
test
ror
rcr
pop
adc
mov
or
push
and
push
dec
cwtl
xchg
scas
cmpsb
jg
int
stc
imulb
inc
cmp
sub
xchg
mov
and
arpl
fcomip
stos
sub
and
cli
adc
cmp
and
push
in
or
call
fcompl
pop
fiaddl
lret
pop
dec
mov
jno
mov
mov
cmpsb
dec
sbb
hlt
pop
gs
cmpsl
stos
sti
sub
pop
inc
add
add
jmp
popf
daa
mov
mov
out
jns
jbe
dec
add
or
push
add
or
mov
aaa
mov
mov
push
pop
in
jnp
add
push
jmp
icebp
jp
jo
push
out
std
mov
lods
clc
mov
lods
inc
cld
das
ja
loope
fisttpll
nop
addr16
cli
sbb
push
xlat
push
sub
je
addr16
psubw
xchg
pop
adc
mov
loop
and
stos
sbb
ret
add
mov
ja
pusha
push
nop
sbb
lahf
lret
in
push
adc
test
push
loopne
pop
fistps
add
ficoml
sub
andl
pop
add
add
fisubs
push
adc
mov
mov
jecxz
jno
push
arpl
mov
pop
addb
ret
rcr
gs
rcrl
or
adc
adc
mov
ds
pop
mov
aad
xor
add
aaa
leave
xor
inc
adc
stc
and
xchg
xor
mov
inc
fwait
jae
jmp
add
mov
push
or
lock
sub
cmpsb
jno
xor
add
pusha
clc
and
xor
aas
call
dec
mov
insb
fisttpll
cli
push
lds
lock
inc
xchg
cld
bound
pop
cmp
cmp
clc
sbb
mov
pop
mov
cs
and
xchg
dec
mov
push
ror
dec
insl
pop
cmpsl
lahf
xchg
ret
rcl
lret
mov
subb
cmpsl
int3
in
xor
jg
dec
push
pop
cwtl
lret
jo
mov
adc
test
jb
repz
loopne
xor
push
enter
jg
cmp
pop
sbb
lahf
mov
int
test
add
sbbl
cltd
push
leave
repz
je
fdivrl
repnz
into
arpl
mov
pop
pop
mov
or
or
test
ret
or
mov
sbb
mov
lds
es
mov
push
fisttpl
ljmp
cmpb
dec
inc
sub
mov
arpl
push
pop
test
jle
mov
subb
gs
std
dec
add
dec
xchg
in
lock
enter
cmpsl
dec
ss
and
loop
aas
push
pop
stos
pop
inc
lret
cmp
mov
call
push
dec
cmpsb
mov
scas
scas
push
in
andb
dec
stos
movsb
sub
ret
daa
pop
or
mov
or
mov
and
lret
shll
sbb
cmpsb
add
int
or
out
add
jge
shr
sbb
mov
adc
icebp
mov
cmc
inc
jp
push
jecxz
add
rcr
stc
in
je
add
jb
ficoms
jne
sahf
subl
inc
xlat
movsb
adc
push
mov
or
out
mov
adc
add
cmp
inc
movsb
push
and
or
ljmp
xchg
outsl
jns
out
cmp
inc
mov
sub
cltd
inc
cmp
cs
iret
int
push
test
in
cld
dec
mov
sub
mov
dec
divl
mov
push
repz
adc
cmp
inc
or
mov
cli
and
loop
jg
test
cmp
jle
insb
les
arpl
lret
fisttpl
imul
divb
dec
lret
inc
jecxz
pop
out
daa
jno
shll
sub
sbb
pop
jmp
dec
dec
sarb
xor
insb
jmp
adc
leave
mov
outsb
jge
mov
mov
jb
popa
adc
mov
pop
gs
push
add
mov
pop
pop
insl
fstl
adc
push
pop
xor
xchg
pop
ja
or
and
xor
fs
pop
mov
adc
dec
mov
sbb
or
mov
fdivrs
adc
mov
sub
stc
dec
mov
xchg
lahf
inc
push
mov
daa
push
dec
cmpsb
mov
jecxz,pn
lcall
xor
int
mov
jecxz
xchg
push
jne
mov
xlat
std
pop
movsb
lods
out
mov
dec
ret
xchg
push
mov
test
xchg
dec
out
cmp
shr
in
es
push
insl
and
leave
sbbb
pop
nop
nop
pop
enter
lock
xchg
cmp
sub
cmp
jns
cld
iret
enter
stos
in
mov
in
dec
arpl
das
and
out
xchg
xchg
xor
pop
fwait
lret
aam
repz
pop
add
outsl
popf
cli
jmp
rclb
push
ss
sub
jg
imul
pop
addr16
mov
psrad
mov
xchg
adcl
adcb
fucomp
dec
xchg
xor
aas
mov
shrd
cmpsb
pop
xchg
lea
jge
rolb
push
xchg
jp
or
in
in
notl
scas
push
sti
pop
pop
push
mov
imul
in
nop
xorb
icebp
imul
test
or
test
push
sub
popf
add
popf
sub
mov
pop
in
or
fcomps
push
dec
and
ret
icebp
mov
jge
lds
insl
aad
adc
jecxz
mov
out
fnstcw
jle
and
das
xor
insb
cs
sbb
imul
jmp
and
pop
fwait
inc
in
and
int
into
xor
pop
xor
dec
cmpsl
sbb
mov
sbb
xchg
leave
insl
ja
ret
adc
das
and
dec
push
mov
and
xorb
imul
movsb
jle
mov
mov
sbb
pop
dec
fsubs
mov
lret
mov
xor
mov
xor
scas
xchg
js
xor
pop
out
inc
or
stos
fdivr
mov
fiaddl
add
cmp
out
arpl
mov
lea
and
pusha
mov
cs
test
loopne
jne
stos
xchg
adc
shl
jns
xchg
pusha
lret
push
test
insb
mov
imul
cmpsb
imul
shlb
xchg
arpl
and
push
sub
jecxz
les
fldl
aaa
sbb
fidivrl
std
pop
stc
dec
icebp
ret
push
test
push
jns
xchg
js
xor
mov
inc
push
xlat
leave
insb
in
popfw
lock
dec
push
lock
lods
jl
mov
and
add
xor
adc
mov
inc
add
cmp
inc
out
and
cld
outsl
mov
mov
adc
push
test
push
add
inc
adc
or
hlt
mov
xor
fidivs
mov
mov
loopne
cld
mov
sub
sbb
adcl
in
stc
dec
rclb
lret
gs
adc
mov
pop
pop
jns
sti
mov
fisubs
mov
outsl
icebp
sbb
adc
out
xchg
xchg
iretw
inc
in
mov
jl
lahf
cwtl
cmpsl
ds
into
pop
mov
out
xor
jecxz
sbb
pop
lods
lock
andl
or
mov
fildl
mov
push
mov
sbb
arpl
es
subb
cmpsl
loopne
gs
cmp
add
pop
fistps
fisttpl
jne
push
add
in
cmp
ret
ret
nop
push
push
dec
xlat
dec
mov
jae
jnp
hlt
mov
push
mov
cwtl
and
mov
mov
sbb
sub
sub
mov
mov
push
movzbl
push
sbb
and
add
adc
xchg
cltd
sub
jle
cli
jge
es
cmp
mov
shrb
add
or
push
daa
mov
je
ja
shlb
mov
sbb
enter
mov
pop
movsl
push
mov
xchg
dec
xor
mov
jb
iret
dec
mov
fwait
mov
and
clc
mov
adc
std
movsb
mov
pop
sbb
ret
int
push
loopne
shrb
in
mov
or
nop
dec
frstor
stc
fdivrs
mov
xor
in
in
mov
cmp
cmp
aaa
sub
aas
repnz
fsubs
mov
mov
lret
xlat
sbb
das
pop
pop
dec
sub
push
push
add
in
lods
pop
pop
sbb
clc
mov
sbb
pop
pop
jae
jb
clc
push
adc
subl
adc
movsl
sbb
cmp
shrb
subb
fldl
jle
scas
roll
adc
in
sbb
inc
call
cs
xchg
ljmp
leave
jmp
pop
inc
out
and
into
cwtl
in
pop
fwait
jge
in
xor
sbb
hlt
fidivs
xchg
sbb
ret
add
xchg
daa
xor
and
test
ret
xorl
xchg
je
loope
test
xlat
fldenv
xchg
sub
sub
jmp
jecxz
jg
sti
gs
sti
push
bound
pop
dec
test
shrb
mov
repz
daa
or
fimull
add
sarb
mov
xor
xlat
mov
hlt
xlat
dec
cmc
mov
pop
mov
jl
jne
sbb
int
xor
cmpsb
pop
scas
add
rorl
inc
pop
out
inc
sbb
jg
fsubrl
jo
sbb
cmp
stc
call
iret
out
stos
ror
push
push
addr16
jae
mov
pop
cmp
xor
pop
pop
add
jo
shl
fsubrl
hlt
jl
divl
call
mov
fwait
inc
les
fidivrl
inc
lods
or
mov
mov
test
cli
add
mov
mov
mov
test
pcmpeqb
dec
mov
xlat
enter
cld
push
xchg
dec
or
lods
sbb
adc
pop
scas
pusha
jns
and
xor
or
push
push
push
test
xor
mov
push
inc
fisubrl
pop
jmp
pop
loopne
pop
movsb
call
cmp
cs
dec
add
cltd
pop
daa
nop
lds
xchg
lea
adc
inc
int3
jmp
inc
push
jecxz
or
add
repz
pop
fdivrl
adc
paddw
ja
and
aam
push
sti
pop
sub
jo
mov
mov
add
push
lahf
stc
xchg
dec
flds
mov
popl
lods
pop
lret
push
popf
fs
loop
loope
jmp
lret
out
sub
stc
imul
fwait
or
sbb
bsr
inc
aad
pop
cmp
adc
add
lcall
sub
cld
pop
aaa
xchg
fisubrl
xor
int
inc
mov
mov
pop
cmpsl
out
int3
pop
cmpsb
pop
stc
sarl
lods
das
mov
xchg
mov
cld
sub
pop
cmp
lret
test
xor
clc
add
mov
push
mov
jns
xchg
rcrb
cmp
mov
and
cmp
ss
jle
add
jnp
push
cmpsl
adc
das
fisubrl
scas
push
xchg
adc
and
fsubrs
xchg
fsubl
mov
xchg
xor
movsb
lret
sbb
dec
sub
arpl
andb
adc
fucomip
jb
popf
outsb
mov
not
pop
push
cmp
xlat
scas
cmovno
inc
sub
fistpll
sbb
mov
cltd
add
scas
aas
mov
ret
adc
pop
jmp
mov
mov
xchg
in
and
mov
clc
jmp
nop
pushf
mov
fists
add
dec
scas
mov
mov
fdivs
add
xchg
movsl
pop
inc
loope
loopne
insb
inc
mov
mov
push
insl
scas
imul
ja
inc
sub
push
aas
ss
mov
adc
jl
or
lock
push
int3
and
dec
or
xor
cmc
mov
popa
fimull
inc
mov
aaa
cmp
jne
mov
push
das
mov
cli
fisubl
push
arpl
add
arpl
push
in
pop
int
fdivrp
adc
ds
jae
iret
stos
outsl
pusha
add
test
call
ret
out
push
add
dec
inc
jl
mov
jnp
out
lret
outsb
pop
mov
cmpsl
cmp
pop
xchg
je
cmp
inc
pushf
mov
mov
adc
mov
test
cwtl
jne
fcompl
test
or
xor
ret
xchg
jl
adc
popa
cltd
call
jle
mov
out
pop
sub
out
pushf
scas
lret
mov
fmull
xor
adc
out
xchg
add
adc
gs
jl
stos
jmp
aad
xchg
cmp
dec
cmp
or
mov
test
fbstp
scas
and
cli
push
sub
sahf
xchg
fwait
push
jb
dec
iret
jb
rcll
sub
mov
pop
sub
pop
pop
jecxz
xchg
jno
es
push
cmp
sbb
mov
adc
out
mov
outsb
sti
cmp
jne
push
arpl
std
repnz
addr16
push
jbe
or
scas
mov
push
ret
push
mov
push
jmp
jge
stos
cwtl
je
jg
faddp
mov
cmp
iret
nop
jl
jae
push
cmp
cmp
sub
mov
in
aam
ret
inc
sbb
jge
ret
inc
sbb
pop
lods
mov
dec
xchg
cmp
adc
test
fnstsw
test
sub
jb
mov
and
push
lcall
mov
xor
sbb
enter
sbb
adc
pop
pop
out
testb
mov
ljmp
adc
mov
mov
pop
aas
cvtpi2ps
inc
lds
jne
mov
xchg
in
sub
nop
sti
fsts
enter
push
inc
mov
les
xor
jo
cmpsb
sarb
mov
in
setb
imul
mov
jbe
ja
loope
pop
ficomps
adc
sbb
mov
sub
xchg
mov
les
fisubl
sysret
fldt
movsb
sarb
push
fs
int3
mov
xchg
aad
or
mov
dec
cs
roll
jae
add
out
inc
notb
mov
dec
cmp
sahf
jne
jo
out
and
scas
lahf
stc
and
cs
jnp
push
sub
mov
xor
push
aaa
js
mov
shrb
and
xor
pop
or
mov
out
mov
jmp
pop
add
fdivrp
mov
add
sbb
mov
sbb
cmpsb
add
cwtl
gs
scas
addr16
shlb
ljmp
movsl
gs
mov
cmc
add
xor
in
lea
stos
jmp
push
inc
adc
inc
cmp
aaa
xchg
push
push
cmp
ficoms
jmp
cs
xchg
out
gs
fiadds
push
into
inc
sbb
cli
popf
add
xchg
jmp
daa
enter
push
mov
xchg
fiaddl
jns
int3
int
cltd
ja
mov
xor
xorl
in
xchg
in
xor
push
push
dec
dec
out
es
cmc
daa
test
out
pop
pop
sbb
nop
fpatan
push
fildl
insb
test
cmp
mov
pop
sti
es
mov
jne
jl
jg
xor
jno
cmc
arpl
pop
icebp
lods
jp,pt
or
push
cmp
imul
xchg
ret
js
mov
xchg
mov
push
int3
sub
out
je
mov
jmp
xchg
imul
inc
jb
jle
inc
mov
inc
adc
cmp
sub
fdivr
mov
cmp
mull
jecxz
jle
gs
xor
outsb
outsl
adc
movsb
adc
inc
and
sbb
push
sub
mov
cmp
add
cmp
mov
lret
dec
xchg
sub
fs
insl
xchg
inc
inc
loop
add
std
pop
or
mov
lds
cmp
out
imull
push
push
into
add
out
mov
mov
dec
mov
sub
cmp
xchg
or
sbb
and
out
arpl
pop
fidivrs
daa
mov
xor
push
into
adc
adc
xchg
jmp
xor
pop
xlat
dec
test
cmp
mov
int
mull
sub
jb
test
movsl
push
aas
rclb
movzwl
xor
add
pop
insb
loope
pop
pop
and
loop
testl
int
inc
lea
xchg
daa
push
xor
adc
loope
pop
in
mov
std
cmp
cmp
xchg
mov
xorl
test
pop
test
xor
lea
js
mov
ret
mov
jp
loopne
in
fstps
cwtl
sbb
mov
push
sub
pop
add
mov
fisttpll
jno
pop
jb
fstl
sbb
pop
sahf
pop
cmp
jno
shl
lea
pop
adc
out
repz
pop
movsl
mov
mov
shlb
mov
push
dec
cld
cmp
adc
pop
lahf
or
in
sub
pop
jb
jl
aaa
cmovb
mov
bound
mov
xchg
or
rcll
xor
mov
cmp
imul
out
mov
jle
aad
inc
xor
setnp
sbb
fwait
push
xchg
xchg
out
ljmp
mov
xor
pusha
fstps
jecxz
and
adc
mov
insl
inc
imul
cwtl
sbb
loopne
ficomps
loope
lods
jo
rol
jle
cmp
push
lea
out
jnp
inc
out
xor
int
mov
ljmp
test
lret
cmpsl
movsl
loope
xor
jo
shl
in
testb
jle
sbb
xor
adc
xchg
sub
or
fs
push
shl
pop
lods
xor
testb
in
test
push
jns
adc
inc
inc
popf
sbb
dec
outsl
leave
dec
push
xlat
jecxz
cltd
cmc
orb
push
decb
inc
and
push
push
pop
pop
cmp
test
add
cmp
push
das
dec
xor
push
notl
arpl
pop
inc
or
xrelease
ja
lret
fstpl
inc
push
pop
mov
lods
ja
sbb
sub
xlat
xlat
mov
mov
mov
lcall
out
mov
lock
pop
pop
rorb
cmp
push
gs
dec
jo
mov
sub
jnp
add
pop
lods
xchg
int3
lcall
rclb
and
jge
adc
fcmovnbe
out
rclb
add
push
xchg
pushf
add
jmp
add
scas
adc
pop
lods
cmp
mov
dec
cmp
pop
testl
mov
test
test
jae
xchg
add
movsb
lahf
dec
and
addr16
push
and
xor
fs
mov
xchg
mov
inc
xor
movsb
jns
movsl
imul
adc
aam
or
and
sbb
clc
xor
aaa
pop
xchg
jmp
inc
scas
xchg
inc
mov
lahf
aam
and
push
add
lods
test
push
daa
mov
mov
pop
sbb
jnp
and
in
test
sub
mov
out
rcll
lret
call
push
cmp
push
inc
lock
sub
into
adc
add
out
into
push
add
outsl
test
retw
shl
scas
pop
xchg
pop
cli
rolb
test
sub
mov
cmp
add
clc
mov
mov
xchg
arpl
rorl
cs
addr16
cmp
pop
mov
addb
cmp
inc
lods
dec
fldcw
orb
pop
bound
dec
int3
cmpsb
icebp
call
sub
scas
mov
dec
push
int3
jp
scas
push
hlt
mov
je
int
adc
or
and
out
iret
sahf
sbb
fsubrs
cltd
pop
push
popa
xor
adc
inc
int
out
fst
pop
lock
mov
mov
gs
aas
mov
and
mov
push
and
dec
cmp
aaa
xchg
inc
pop
cmc
add
mov
cmpsl
das
fildl
int
fiaddl
jmp
jmp
fcoms
ret
inc
stos
or
push
movsb
lret
dec
lods
cwtl
es
aas
data16
mov
mov
or
pop
push
cmpsb
jle
pop
cltd
lock
out
add
jno
pop
fsts
jno
insb
clc
push
jmp
add
mov
rsm
pop
or
cmp
out
das
add
cmp
andb
xchg
push
push
stos
mov
cmp
insl
cmp
or
mov
jbe
mov
pop
push
stos
out
loop
fdivs
je
pop
test
adc
xor
fxch
push
dec
repnz
cmp
cmovge
mov
shlb
adc
or
cwtl
add
mov
movsl
jle
stos
xchg
inc
sti
arpl
les
rcrb
lods
jae
ficoms
mull
xor
outsb
add
mov
jge
ljmp
or
add
jne
inc
mov
loopne
xchg
addr16
daa
fdivrs
xchg
cmpsl
xorb
or
je
stos
ja
xchg
stos
mov
mov
inc
rorl
shrb
loop
jp
repz
rcll
sar
inc
mov
adc
mov
xchg
ds
push
int
dec
rorb
push
repz
add
jns
jle
pop
sbb
fisttps
sbb
ja
mov
outsl
xor
dec
mov
jg
mov
xchg
and
imul
cltd
aas
xchg
sub
loop
in
lcall
or
or
or
cmp
inc
or
add
xchg
jb
imul
pop
pop
mov
sub
dec
pop
mov
enter
push
sbb
jp
into
xchg
cltd
adc
icebp
lahf
cld
lods
in
push
scas
bound
mov
es
sarl
adc
fiaddl
pop
mov
mov
cmp
fists
xor
fwait
int
jmp
movsb
jg
adc
mov
inc
sbbb
mov
fwait
push
fstl
or
in
imul
mov
fsub
sub
ss
test
addr16
lea
je
into
pop
mov
call
popf
and
clc
lock
out
push
mov
xchg
mov
out
ja
and
mov
lcall
lret
mov
scas
push
rcrl
fldl
lock
ret
decb
lahf
xor
sub
mov
mov
cmpsl
xchg
dec
mov
imull
sub
mov
lret
xchg
cmp
fxch
xchg
jnp
mov
lahf
push
mov
jbe
sarb
or
jle
mov
jo
mov
in
xor
push
add
lret
mov
jl
dec
in
loopne
fs
jne
mov
mov
call
xchg
lahf
add
adc
jns
xor
rcrl
or
push
cli
mov
sbb
jnp
push
xchg
inc
mov
push
and
cmp
dec
ljmp
pop
fidivs
enter
mov
push
test
jg
sbb
mov
push
pop
aaa
mov
test
push
push
mov
aad
cmp
mov
push
inc
bound
xor
mov
add
xlat
rolb
scas
push
mov
and
pushf
arpl
adc
xchg
mov
shrl
scas
jb
mov
std
inc
push
xchg
jo
cmp
in
xor
cmc
shr
mov
lret
push
dec
cmp
mov
test
imul
pop
jo
jbe
dec
js
xor
jge
dec
sub
pop
fwait
push
ficoms
and
out
jnp
xchg
mov
pushf
xor
inc
sbb
fisubrs
jge
jp
mov
xor
mov
int
or
lds
outsb
add
test
inc
nop
popf
ja
movsb
ret
cmp
jnp
ror
fidivrl
sarl
jnp
nop
daa
or
add
loope
aam
push
inc
push
xor
nop
std
sbb
push
jge
out
xorb
addr16
sbb
pop
xchg
xchg
mov
add
mov
dec
pop
mov
mov
add
in
inc
inc
int3
loop
xchg
fs
mov
mov
scas
mov
xchg
jb
ljmp
out
fisttpll
jl
sbb
add
call
ficomps
mov
xor
and
and
out
stos
out
jnp
and
rorb
mov
lret
js
xchg
mov
jae
insb
dec
popa
cmp
punpckldq
roll
add
lea
adc
mov
pop
add
inc
iret
call
ljmp
pop
hlt
fisubrs
jmp
cmp
lahf
dec
insb
scas
mov
mov
xchg
loopne
sbb
imul
fisubrs
mov
mov
daa
adcb
popa
pop
add
fs
es
clc
adc
cwtl
test
mov
icebp
mov
idivl
add
shlb
in
add
push
xor
inc
in
sub
jae
mov
cli
adc
jl
xor
ss
test
mov
mov
adc
jp
inc
stc
jns
fmuls
popa
dec
inc
divl
ret
xchg
pop
cwtl
ret
add
lahf
xor
mov
repnz
and
jge
dec
ljmp
mov
inc
or
lock
dec
lods
ret
nop
pop
jbe
jmp
push
mov
imul
and
pusha
popa
andl
xor
add
dec
mov
into
jbe
sbb
lret
pop
scas
xor
pop
inc
cltd
inc
sarl
lcall
test
clc
iret
jecxz
mov
jle
test
mov
mov
int3
jb
bound
cmp
mov
int
dec
or
call
insl
int
scas
rorb
je
sahf
dec
adc
dec
cmp
fisttpll
clc
adc
inc
lret
cmp
lea
fs
daa
xor
inc
dec
cmpsb
pop
sbb
lods
inc
xor
lock
inc
and
insl
adc
sbbb
or
pop
adc
add
pop
lods
test
gs
not
sahf
pop
xchg
pop
jecxz
stos
jge
pop
mov
and
out
push
adc
add
or
xchg
fstpt
push
stos
ret
dec
js
xor
lahf
sar
push
popf
push
dec
in
test
inc
sub
mov
jne
xchg
adc
jmp
add
cltd
push
sub
and
cmpl
loope
outsb
xor
and
push
or
movsb
cmp
dec
dec
pop
mov
rep
shlb
sahf
sti
sbb
fadd
add
mov
test
mov
adc
sahf
xchg
pushf
popa
lock
shl
inc
std
or
sub
sbb
and
and
jge
psllq
aad
ljmp
mov
push
loope
mov
mov
adc
jecxz
xor
mov
ljmp
pop
fwait
rolb
lods
call
jg
mov
jmp
mov
aad
dec
ret
stc
or
leave
lahf
call
fnstcw
or
mov
push
xchg
dec
dec
dec
pop
rolb
push
lods
mov
scas
sti
js
inc
add
out
mov
dec
cmp
jns
mov
data16
fstp
cmp
and
sbb
loop
jno
ja
jb
lods
popa
int
clc
and
push
jmp
sbb
cs
insl
jmp
or
add
lcall
dec
cltd
push
push
fidivl
push
orl
xchg
mov
mov
adc
add
aas
xchg
xchg
cmpsb
test
ljmp
jo
pop
leave
ja
push
fs
jne
imul
daa
pop
xlat
idivl
push
lcall
push
mov
mov
repnz
bound
sub
movsb
mov
ds
setle
dec
ret
addr16
push
pusha
and
mov
sbb
loop
xchg
loopne
repz
add
inc
in
mov
sub
out
mov
jo
lret
cmc
fcomps
jno
xchg
adc
jle
data16
sbb
cmpxchg
sarl
lahf
insb
js
add
mov
pop
push
ljmp
lret
aas
aaa
js
mov
fninit
xor
pushf
call
mov
adc
adc
and
stos
pop
add
cmc
dec
aaa
sbb
mov
mov
call
fmuls
jecxz
arpl
xor
mov
pop
add
or
jp
cli
incb
mov
mov
shrl
std
testl
call
xchg
pop
jno
pop
sub
mov
add
mov
shrl
sbb
imul
fldl
dec
lahf
cmp
and
push
and
jb
inc
and
shr
xchg
cld
push
xchg
xor
fstpl
popf
in
arpl
sub
and
xlat
mov
jb
sub
push
and
adc
mov
addr16
cltd
insl
lock
testb
push
gs
inc
or
ljmp
xor
pop
cmpsl
pop
rolb
cmp
hlt
out
jno,pn
sbb
mov
clc
int3
aad
je
push
and
add
test
jge
pop
cmp
inc
test
jmp
std
cli
iret
pop
arpl
ljmp
or
xchg
cmp
push
mov
push
xchg
cmp
lret
add
movsl
scas
stos
scas
mov
aad
stc
in
ja
push
jl
mov
stos
jle
rorl
dec
inc
push
cmp
pop
push
push
or
inc
mov
je
sbb
add
adc
idiv
sbb
shll
mov
jmp
in
test
dec
push
mov
in
push
sbb
rclb
push
inc
loopne
popf
fs
repz
xor
shrl
lcall
jo
bound
cltd
sbb
xchg
jns
xchg
xchg
ja
lods
dec
adc
ficoml
cld
jp
sub
enter
dec
popa
fstl
addl
ljmp
mov
insl
mov
movsb
lods
inc
push
rcrb
jns
sbb
xlat
xor
mov
insl
out
sub
mov
jnp
cmp
xchg
in
aad
xchg
jns
insl
sbb
movsl
sar
insb
aam
xor
fisubl
mov
mov
fstps
mov
mov
ret
push
fs
jmp
sbb
addl
jo
lret
or
jg
xor
add
cs
pop
add
pop
xchg
pusha
xchg
test
cmp
push
in
out
jmp
mov
mov
sbb
add
shlb
fisubl
xor
jl
mov
push
jne
or
ficoms
out
mov
mov
sti
aaa
cwtl
xchg
iret
inc
cmp
push
xor
dec
push
jecxz
dec
int
repz
xchg
pop
adc
icebp
ret
push
push
cmp
push
test
test
jecxz
sbb
lret
pop
mov
int3
push
jmp
dec
rcrl
daa
adc
xchg
out
stos
and
cmpsl
xlat
pop
sbb
jge
cmc
inc
aam
xor
sbb
adc
inc
fdivl
and
xchg
stc
xchg
rclb
pop
ds
imul
jge
dec
stos
mov
adc
jmp
repz
mov
popf
mov
das
inc
lods
mov
sbb
jno
int3
aaa
pop
inc
and
loop
xchg
out
dec
aam
inc
xor
and
lret
test
push
sub
inc
xchg
sbb
loope
push
inc
jl
xchg
cld
inc
mov
fstl
dec
icebp
inc
movsb
mov
es
stos
inc
cltd
lret
dec
testb
xlat
mov
scas
adc
test
and
and
sahf
fnstcw
cmp
sbb
scas
and
movsb
xchg
iret
sti
pop
pop
ret
out
fadds
mov
jae
call
ds
pushf
lcall
inc
imul
push
movsb
xchg
mov
cmp
or
mov
or
dec
add
mov
out
les
pop
xchg
mov
pusha
gs
mov
int3
js
in
fnstenv
icebp
jecxz
push
cmp
fldl
test
icebp
pop
jae
jo
inc
and
dec
pop
in
outsl
arpl
push
stos
sbb
xlat
mov
div
lcall
jge
mov
pop
call
inc
repnz
cmp
test
test
flds
jg
mov
out
scas
dec
pop
inc
adc
fistl
ja
lock
xchg
sbb
jp
inc
adc
dec
add
inc
xchg
xor
ljmp
mov
pop
repz
pop
insl
cmp
mov
test
cmp
pop
addr16
movsb
pop
lret
faddl
jg
inc
std
addr16
mov
mov
jle
test
rcr
in
fstpt
dec
or
aas
cmp
cmc
xrelease
jmp
arpl
out
pushf
mov
cmpsl
cmp
ret
jb
push
inc
xchg
and
imul
test
faddl
aaa
out
and
lcall
add
cld
fxtract
imul
lret
sahf
pop
popf
cmp
mov
pop
in
mov
inc
cwtl
xor
aam
ret
pop
lret
xor
jo
cmp
xchg
fisttpl
adc
jo
outsb
mov
test
decl
and
ficompl
test
add
sbb
leave
sub
std
sub
lahf
sti
out
and
push
rcr
ror
push
into
jp
xchg
rcl
std
and
lea
sbb
ja
lea
add
ficoms
out
sbb
mov
sarl
or
fidivl
pop
cltd
jl
jo
shll
sub
mov
loop
mov
outsl
xor
lret
pusha
aad
fcom
jo
movl
or
imul
sbb
test
jecxz
out
std
nop
bnd
inc
cmc
ss
xchg
jmp
push
out
mov
jae
jle
mov
scas
addr16
lahf
cwtl
cmp
negl
or
inc
fcmovnu
dec
adc
mov
jmp
pop
push
inc
stos
or
sbb
lds
cmp
cmpsl
lret
pop
mulb
imul
inc
das
dec
lret
dec
and
cmc
nop
mov
scas
xor
pop
aad
daa
lcall
sbb
outsb
cmpsb
mov
test
je
sarl
insl
mov
dec
insb
ret
lea
inc
ret
outsb
jno
jo
sbb
rcl
aad
xor
jnp
and
adc
push
daa
enter
leave
jo
cs
mov
push
adc
mov
xchg
dec
imul
test
lods
roll
sti
sbb
fldcw
push
jg
jbe
call
jno
adc
push
or
pusha
sub
pop
mov
jnp
fstl
inc
js
jbe
pop
sbb
xlat
fldenv
out
test
mov
repnz
dec
enter
mov
insl
lcall
xor
stos
sbb
jb
push
jl
adc
insb
aas
sti
mov
and
push
lahf
xchg
sbb
sbb
dec
rolb
push
push
dec
or
inc
xchg
lods
and
pusha
cmpb
add
and
sbb
cmp
nop
mov
lret
add
add
out
or
mov
mov
in
data16
mov
div
mov
push
jecxz
xchg
mov
sub
aas
ss
mov
test
lcall
or
dec
loopne
outsl
add
xor
bound
movsb
es
and
jp
push
into
dec
dec
xchg
or
adc
inc
movsl
ret
push
dec
xor
xor
xchg
mov
xor
call
pop
and
imul
insb
lret
iret
lds
loope
and
daa
mov
mov
das
in
pop
mov
outsl
add
xorl
rorb
les
dec
int3
outsl
jmp
pop
pop
popf
cs
ret
lods
scas
push
and
mov
or
data16
xchg
ds
jnp
out
ljmp
adc
pop
jb
sbbb
mov
out
adc
dec
sub
mov
loopne
cmp
push
cmp
clc
orl
and
imul
sub
int3
insl
test
loopne
jecxz
mov
inc
mov
adcb
adc
arpl
or
add
or
vrsqrtss
cmc
inc
pop
dec
js
imul
or
pop
mov
test
cwtl
xor
pop
push
nop
pusha
bound
fcoml
push
and
cltd
jne
ljmp
xchg
lods
repz
cmp
repz
adc
ret
sbb
mov
es
and
sbb
js
mov
mov
lea
push
cmp
stos
or
out
dec
lcall
xchg
data16
dec
pop
adc
ret
dec
adc
or
or
and
js
xor
adc
lret
and
pop
scas
addr16
xchg
mov
stc
enter
xchg
xor
jne
popa
call
mov
nop
mov
mov
lea
pop
sub
xor
push
rorl
mov
jg
ficomps
andb
xor
in
push
imull
mov
sub
mov
fidivl
xorb
cmp
xor
cli
inc
cmp
enter
xlat
fcoml
xchg
add
mov
and
pop
add
jne
rcll
sub
mov
repz
mov
in
pop
xchg
bound
das
jne
adc
push
inc
movsb
mov
aad
outsl
add
mov
lret
xchg
fistl
inc
je
mov
or
or
cmp
mov
mov
and
dec
andb
xor
pop
das
push
pop
std
sbb
xor
inc
xchg
subl
bound
fwait
mov
dec
or
pop
jns
sbb
add
cmp
adc
pop
cmp
test
xor
dec
adcl
iret
mov
sti
iret
mov
aas
lds
test
inc
mov
xchg
or
mov
cmpsl
or
ss
cwtl
fcmovu
rorb
jne
loopne
subb
fsubrl
mov
add
and
mov
jo
adc
jp
jge
pop
sub
push
mov
pop
lahf
flds
and
cs
push
xorl
testl
inc
add
jno
adc
xchg
and
and
cld
iret
xchg
mov
stos
fcomip
push
jmp
test
dec
movsb
xlat
xor
cmp
pop
adc
add
dec
adc
adc
ljmp
mov
ret
cmpsl
rcr
xor
xor
mov
loopne
into
mov
ja
popf
sub
cld
pop
dec
fiadds
mov
outsl
mov
lea
fucomp
out
aad
jb
sub
fidivl
push
adc
xor
and
add
sti
fstpl
cltd
test
ds
xchg
aam
jp
jnp
mov
pop
dec
or
mov
sbb
xchg
or
rcrb
dec
add
dec
rorl
inc
mov
push
mov
jge
mov
or
pop
pushf
push
adc
bnd
mov
popa
ret
enter
enter
das
outsb
leave
jb
in
test
sbb
or
iret
das
and
jne
cmp
shll
ficomps
pop
rclb
jp
sub
mov
lea
rcll
mov
fwait
sub
or
inc
add
insl
fcoml
fisubrl
sbb
ret
je
sarl
xchg
pop
xchg
sub
mov
jge
sbb
cmc
aas
lahf
jmp
stc
cmpsl
mov
sub
pop
push
cwtl
shrb
push
xor
mov
ficoms
sarl
popa
out
pop
dec
arpl
sarb
outsl
mov
out
mov
pop
add
cmp
js
pop
fwait
push
xor
pop
mov
stos
icebp
fcom
adcl
jecxz
mov
test
pop
xor
adc
inc
fists
ds
popf
inc
ficoml
sti
leave
stc
add
jb
mov
loope
insl
jo
xchg
mov
sbb
in
sbb
arpl
cld
clc
xor
vmovmskps
icebp
and
cmovne
arpl
and
fnstcw
and
lcall
imul
repz
sub
push
int3
dec
push
pop
dec
mov
and
and
pop
jg
xor
jnp
mov
push
adc
dec
jnp
lods
clc
mov
repnz
stos
push
mov
cli
in
lcall
lret
jl
int
adc
pop
adc
loopne
jp
aas
in
sub
dec
test
aaa
cmpsl
sarb
ljmp
cmp
rcl
jp
repnz
in
loope
xchg
pop
call
test
gs
sarl
mov
mov
mov
jnp
adc
dec
push
sbb
push
cld
pop
jecxz
ret
pop
jne
ret
dec
push
or
or
ficomps
xchg
fwait
dec
fisubs
adcl
adc
pop
cld
rcrb
inc
dec
repz
pop
or
dec
sbb
call
sbb
out
add
pusha
mov
mov
ds
cmp
lds
das
pusha
fimuls
popa
jle
push
mov
adcb
jge
cmp
jmp
int
outsb
std
push
jle
push
jle
pop
arpl
fldl
ret
in
dec
xor
jbe
xchg
ror
xchg
pop
scas
pop
cs
push
adc
push
call
jecxz
pop
shrb
int3
cmp
add
sub
and
and
sbb
cs
insb
fisubl
xor
pop
push
or
divb
add
out
lret
xchg
jp
sti
mov
cmp
xchg
push
rcr
jnp
pop
or
mov
fs
jl
leave
loopne
cmpsb
xchg
pusha
and
mov
mov
mov
xor
scas
lahf
mov
dec
mov
mov
inc
les
jae
popf
enter
or
dec
daa
or
hlt
cmp
ds
xchg
mov
pop
test
js
dec
out
data16
jg
jge
inc
inc
dec
frstor
xchg
xchg
pop
jge
mov
add
pop
or
adc
cmp
push
imul
adc
pop
pop
push
cmc
pop
ja
cs
pop
pop
fs
lahf
popf
pop
mov
fdivp
nop
mov
mov
xchg
pop
lock
rcrl
jg
jbe
mov
and
jb
dec
add
dec
jmp
dec
test
add
out
ficoms
loopne
push
popa
dec
pusha
neg
fwait
aas
sub
test
cmp
gs
stos
push
shlb
stos
cld
cmp
sbb
mov
and
mov
repz
sbb
std
sbb
dec
pop
pop
dec
sbb
mov
cmp
mov
pop
jno
xchg
fdiv
jb
mov
pop
fcoms
pop
dec
sahf
jl
or
and
add
imul
and
cs
push
jns
bnd
repnz
mov
out
jne
mov
das
or
jae
addr16
sti
jne
mov
daa
sbb
jo,pn
insb
sbb
daa
sti
add
inc
jno
cmc
or
sbb
sub
daa
adc
mov
cmp
out
repnz
xor
xchg
inc
xchg
shlb
std
lds
out
insl
divb
dec
test
cmpsb
outsb
sub
imul
iret
sub
lahf
dec
icebp
xchg
dec
in
xchg
iret
out
out
outsb
pop
loopne
ja
push
rorb
mov
popf
orl
int
push
mov
incl
sbb
sbb
mov
enter
mov
push
hlt
xor
pop
adc
add
repz
lahf
or
add
sub
mov
gs
sub
mov
push
in
out
hlt
xchg
stc
xor
rolb
jg
mov
push
jg
mov
jmp
adc
bound
fisttpll
lods
adc
sub
scas
fwait
xlat
in
push
dec
gs
enter
loope
and
add
pop
jb
popf
lods
add
and
sub
out
jmp
xchg
divb
aam
daa
test
jb
dec
xorl
and
mov
dec
xor
push
sub
lahf
jmp
fildll
and
cmp
aaa
inc
imul
into
mov
cmp
jmp
fcomi
push
ljmp
imul
jp
or
jecxz
inc
dec
xchg
mov
aam
mov
dec
imul
push
mov
clc
loop
xchg
aaa
and
stc
pop
iret
das
mov
negl
mov
sub
jge
stc
mov
in
clc
or
jbe
mov
adc
lcall
xchg
pop
jns
xor
in
dec
and
or
mov
mov
xchg
inc
stc
and
xchg
inc
or
lock
sbb
jb
add
cwtl
enter
mov
rcl
push
adc
xchg
lods
lret
movsl
insl
push
adc
adc
aas
inc
test
inc
sub
jg
gs
jnp
mov
sahf
jae
jmp
loope
fimuls
push
pop
or
sub
mov
mov
push
xor
adc
loopne
filds
jmp
adc
outsb
or
test
sub
mov
fwait
xchg
out
test
mov
or
rcrl
jg
leave
or
and
out
roll
insl
mov
imul
xchg
insl
xchg
jnp
pop
sti
push
xchg
or
movsl
cmp
lods
sbb
enter
fsubl
sbbb
pop
mov
lahf
addb
repz
inc
sahf
xchg
orl
outsl
aam
jno
test
pop
xlat
or
mov
stos
or
dec
stc
inc
inc
cmp
pop
int
sub
mov
cmc
movsl
in
or
mov
push
shlb
xor
in
out
push
sub
pop
and
mov
mov
out
insb
sahf
inc
sub
loope
mov
jnp
jnp
inc
jnp
jb
cmp
bound
rolb
mov
es
xchg
push
xchg
pop
sbb
das
stos
mov
cli
jnp
mov
pop
and
int
scas
push
mov
or
xchg
add
push
sub
sbb
mov
enter
stc
addr16
aaa
adc
test
and
scas
lcall
cwtl
xchg
adc
mov
pop
frndint
sbb
lods
scas
push
roll
pop
xor
mov
arpl
xor
fwait
mov
fiadds
imul
mov
jns
mov
pop
fcoml
shll
cltd
sub
fucomp
negl
mov
or
sbb
das
ljmp
leave
idivb
mov
and
sarl
dec
push
xchg
lods
pop
dec
mov
insl
inc
pop
jle
les
lcall
jge
jb
inc
into
xor
and
xchg
xchg
adc
addb
jno
test
add
inc
add
test
or
jae
mov
fiadds
and
fadd
das
ret
ljmp
ljmp
icebp
inc
test
jb
adc
shl
je
ja
mov
jno
mov
cmp
mov
cmp
pop
push
shlb
lcall
and
imul
sbb
jl
lods
add
gs
push
int
or
fldt
mov
sub
fdivs
and
sarl
stos
mov
out
test
cmp
mov
enter
inc
insb
rcrb
in
and
mov
loope
fs
cmp
sbb
mov
stos
mov
int3
rcrb
insl
clc
push
ret
adc
sahf
inc
test
cmpsl
int
push
enter
mov
jno
repnz
in
insl
data16
cltd
dec
clc
je
push
cmp
sbb
push
push
fmull
mov
or
adc
lret
mov
movsb
faddp
xor
adc
or
mov
icebp
mov
lods
add
xchg
sbb
mov
sarl
inc
pop
js
test
popf
out
daa
pop
push
cli
mov
ret
inc
ljmp
into
jp
adc
xchg
inc
and
repz
jmp
jle
fmul
pop
sbb
dec
add
frstor
mov
pop
xchg
and
into
daa
inc
mov
sub
dec
inc
lret
or
xchg
sbb
mov
clc
and
xchg
mov
test
repz
out
sbb
cmp
xor
sbb
mov
filds
fcmove
movsb
cli
xor
jle
pop
lret
sbb
outsl
mov
jge
mov
sahf
or
xor
mov
loope
add
xchg
ss
popa
cbtw
mov
popf
or
inc
mov
jp
fsubr
aam
lret
sbb
repnz
push
mov
jmp
je
adc
jl
pop
adc
sub
in
testb
bnd
pop
pop
ljmp
jns
in
fidivrs
dec
test
inc
mov
pop
adc
mov
adc
insl
jbe
sub
in
jg
lahf
dec
xorb
mov
pop
or
es
mov
sub
push
xor
movsl
xchg
add
arpl
cld
fsts
inc
mov
adc
cmp
pushf
pushf
mov
inc
mov
stos
pop
inc
mov
shrl
cli
mov
mov
add
je
adc
ds
mov
pop
pop
jo
mov
rorl
pushf
sub
cli
repnz
xchg
dec
mov
jae
mov
test
add
xchg
ret
jl
sbb
scas
cs
jne
inc
xor
inc
lea
lret
xchg
repnz
sbb
pandn
xchg
mov
lods
mov
les
or
jnp
loopne
mov
mov
or
xchg
and
sbb
cmp
in
jp
xchg
test
fdivs
cwtl
sahf
xor
jle
push
inc
leave
xchg
push
test
cli
pop
pop
xchg
or
xor
adc
lret
and
mov
mov
or
cmp
ja
pop
xchg
imul
decb
imul
popf
sbbb
push
out
dec
and
push
pop
dec
inc
addr16
popa
adc
cmc
ficoml
test
addr16
jg
xchg
lea
std
cmp
xchg
in
andl
popf
jecxz
pop
rcrl
out
call
pop
movl
leave
cmp
fwait
sub
mov
and
prefetch
or
mov
pop
inc
arpl
lods
rorl
cmp
push
pop
stos
mov
nop
popf
adc
cmp
or
cmp
dec
sti
fscale
xchg
fidivs
and
mov
jbe
adc
ds
rorl
inc
in
push
notb
in
mov
xchg
jbe
add
pop
outsb
lods
iret
dec
ficomps
pushf
gs
xchg
xor
sbb
lods
hlt
push
in
into
cltd
and
or
loope
jns
shrb
mov
sbb
push
pop
or
push
lods
and
mov
adc
mov
mov
and
in
cmp
daa
add
mulb
mov
mov
inc
andb
and
sub
cmp
call
jo
popa
les
mov
movsb
jb
aad
in
and
and
jo
sub
iret
and
xchg
ds
push
popf
scas
in
fistpll
frstor
aas
mov
sbb
cli
cmpsl
lcall
xor
adc
popa
dec
ds
inc
mov
cld
mov
jle
inc
jg
mov
adc
loopne
or
pop
jp
lea
in
rclb
xchg
mov
dec
scas
data16
outsl
sbb
cmpsl
mov
jp
ret
jg
aad
adc
sub
mov
add
adc
or
and
and
test
xorb
cmpb
mov
inc
pop
mov
es
fnsave
fcmovnb
nop
push
into
std
out
pop
inc
mov
mov
ss
mull
inc
fwait
inc
fcoml
xchg
test
mov
call
iret
rcrb
or
divl
pop
je
mov
lds
stos
in
fistpll
lcall
sub
pushl
scas
repz
cs
loop
xchg
mov
mov
int3
push
sbb
xchg
fcmovb
dec
mov
stc
aam
es
cmpsb
mov
pop
mov
test
pop
insl
cmc
mov
fistpl
in
add
sub
les
leave
orb
je
cmp
pop
lcall
ds
clc
jne
rcrl
push
jnp
aaa
push
dec
cli
insl
shl
jg
sub
push
js
lcall
cmpsb
stos
gs
push
mov
mov
hlt
mov
push
fistl
cltd
repnz
notl
jne
ljmp
xor
test
xor
insb
cld
push
jp
sarl
xchg
outsl
movsb
or
aam
add
mov
shll
int3
enter
jo
mov
xchg
aam
scas
scas
insl
jnp
pop
in
dec
fidivrs
or
sub
inc
xchg
sbb
push
lods
out
xor
je
ret
jg
stc
mov
in
or
inc
mov
lods
mov
lret
jg
jg
cli
fs
negl
out
out
push
mov
mov
inc
sbb
ret
imul
cmp
loopne
dec
xor
std
aam
gs
inc
out
xchg
adc
ss
fidivrl
loop
dec
xor
icebp
jmp
push
mov
in
rol
lcall
add
inc
add
into
shrb
outsl
gs
in
xor
xorb
jecxz
inc
ss
cmp
fistps
subb
mov
rolb
data16
inc
xor
icebp
das
shrb
popf
cltd
leave
mulb
stos
lcall
jecxz
dec
xchg
push
pusha
std
sub
sub
inc
mov
jns
xchg
cs
sub
fnstcw
cmp
pop
pop
add
imul
aad
xor
cmp
mov
mov
aas
jp
sub
sbb
push
fsub
mov
int
shll
xor
popa
and
sbb
cmpsb
mov
dec
inc
cmp
out
test
mov
sbb
jbe
les
push
fcomps
xchg
jbe
sti
pop
out
jmp
inc
mov
jmp
js
cwtl
sub
push
inc
and
mov
xor
xchg
addb
sub
mov
xchg
add
push
or
cmp
inc
lcall
addr16
imul
dec
jmp
sub
mov
lds
cld
rcl
inc
ror
stos
shrl
mov
cli
subl
mov
arpl
lods
lock
in
mov
inc
je
outsb
cwtl
mov
inc
cs
cli
lcall
mulb
push
loopne
jbe
dec
push
and
push
cmp
or
push
pop
decl
add
mov
ficomps
push
mov
cmp
cmc
rcll
ja
sub
xchg
cwtl
sub
add
dec
jns
das
push
jae
dec
incl
inc
movsl
repnz
add
in
xor
xchg
mov
loope
push
jb
sbb
or
jl
jg
cltd
jecxz
js
add
push
mov
or
xchg
mov
sbb
cwtl
pop
inc
add
pop
jge
outsb
outsl
rol
cmp
dec
leave
mov
test
pop
adc
or
stos
adc
repnz
sbbb
xchg
push
push
out
dec
or
lret
ret
nop
mov
clc
repz
ret
data16
and
jb
xchg
loopne
stos
cs
adc
xchg
mul
jge
pop
out
cmp
or
in
shlb
sub
mov
xor
sub
into
or
fwait
sbb
xor
cmpb
out
bound
in
sbb
mov
mov
test
mov
repnz
inc
xor
mov
push
sbb
jmp
cli
push
jbe
popa
pop
sub
fcoms
pop
push
out
aad
fistps
mov
addr16
mov
sub
dec
pop
pop
pushf
add
inc
icebp
imul
jne
fcomi
insl
inc
repnz
xchg
inc
pop
pop
shlb
lods
mov
lods
jo
jno
insb
stos
push
ret
lret
daa
dec
and
stc
pop
xchg
hlt
mov
mov
in
lret
push
dec
dec
xchg
sbb
movsl
orb
popa
mov
lods
les
sub
movsb
cld
ret
pop
mov
sub
stc
iret
xchg
cld
ss
mov
push
push
sarb
pop
cmp
pop
or
xchg
dec
mov
enter
popa
sbb
std
mov
jne
add
push
lret
mov
or
dec
jge
push
add
jmp
nop
mov
dec
adc
xor
jge
dec
int3
xchg
mov
mov
out
fbld
inc
dec
mov
inc
fstl
sti
ret
lcall
nop
mov
mov
cli
sub
or
mov
or
cmp
push
lret
dec
jl
pushf
cmc
adc
mov
lcall
js
loop
cmpsb
std
xor
dec
xchg
iret
or
orl
repz
shll
sub
push
adc
scas
cltd
loope
ficoms
lahf
bound
mov
cmp
sahf
and
lods
nop
inc
xlat
lahf
leave
pop
les
std
xchg
cmpsb
pop
loopne
shll
pop
in
xor
xchg
push
inc
std
scas
cwtl
add
push
cmpl
sub
cmp
ja
or
mov
test
mov
pop
cwtl
sub
push
xchg
jecxz
clc
cltd
dec
outsb
dec
sti
hlt
cmp
loopne
add
dec
sub
inc
cmp
lret
sub
fistpll
mov
flds
andb
and
jmp
pop
pop
push
nop
jns
mov
push
cmc
repnz
fildl
les
mov
out
sbb
lret
in
loop
or
jp
add
fldcw
shrb
vpshaw
jge
icebp
out
sbb
cltd
cld
popf
and
pop
jmp
pop
pop
lret
rclb
cmp
mov
insl
pop
jmp
jg
loopne
xor
xchg
fsub
loop
int
cwtl
pop
push
in
pushf
fildl
xor
sub
cmp
out
push
repnz
mov
sub
test
add
stc
in
pop
jne
fdivrl
xchg
insl
pop
popa
cmpsb
cmc
test
pop
enter
dec
aaa
mov
out
push
mov
mov
mov
lods
loope
fists
xchg
shll
dec
xor
test
fmull
lret
in
movsb
movb
xor
mov
inc
arpl
push
inc
fcoml
or
push
adcb
fwait
sti
sbb
push
or
fbstp
shlb
lret
dec
in
cmp
in
jmp
in
out
xor
lret
sbb
push
mov
je
pop
mov
negl
or
stos
and
pop
or
inc
cmp
or
mov
out
jbe
xchg
outsb
aas
enter
sub
loop
clc
or
xlat
rcl
shll
inc
repnz
and
or
xor
das
or
movsb
and
push
out
mov
adc
jle
setae
jbe
mull
push
outsb
iret
scas
jp
vstmxcsr
cld
test
in
sbb
loop
or
jno
push
adc
xchg
int
mov
jle
sub
adcb
mov
stos
mov
lds
jmp
xor
mov
aam
addr16
push
add
sti
add
int3
cmp
arpl
mov
sub
es
sub
cmpsl
ret
push
js,pt
lea
cs
jo
lret
xor
jle
out
sbb
cmp
xchg
scas
enter
daa
imul
pop
icebp
cmpb
sub
test
mov
int3
inc
insl
out
fisubrs
es
dec
push
jb,pt
das
cmp
xor
inc
xor
loopne
add
inc
jnp
jl
js
cmp
cmp
into
in
cmp
into
jg
rorl
xchg
inc
popl
lods
mov
sbb
push
fistl
jnp
mov
and
iret
jno
int
call
inc
cmp
or
negl
cmpl
cmp
mov
or
iret
mov
cmc
mov
sbb
dec
jnp
add
xchg
cmpsb
popf
ret
jmp
idivb
das
icebp
and
and
stos
js
dec
mov
ret
cs
mulb
inc
push
push
push
jns
adc
cmp
test
rcrl
je
jnp
xor
inc
cmp
adc
leave
cmp
mov
cltd
popf
jo
insb
xorl
stc
lahf
enter
push
xchg
les
inc
hlt
jno
push
adc
fisubs
loopne
out
sub
pop
xchg
test
sbb
push
loop
adc
cld
out
in
ss
jp
sbb
scas
lods
xchg
add
cmc
and
daa
das
popa
shrb
sbb
sbb
outsl
push
les
test
push
repz
or
insb
cltd
push
stos
mov
sbb
jnp
pop
imul
mov
mov
push
data16
mov
bound
je
sbb
sub
in
sarl
mov
mov
inc
dec
cmp
xchg
xchg
pusha
add
cmp
lods
inc
xor
je
call
fadd
and
imul
int
fdivl
jge
push
sub
mov
inc
adc
imul
or
dec
xchg
daa
test
push
rcrb
cmp
sub
cmp
pop
pop
fisubl
mov
out
aam
add
sub
sub
test
rcrl
std
lock
es
sub
aam
movsl
insb
push
add
jo
inc
inc
mov
cmp
rcll
xchg
scas
mov
sti
push
cs
xchg
or
popa
call
sahf
mov
fcom
cmc
pop
dec
test
cmp
mov
sbb
jae
cs
mov
out
cmp
sub
mov
test
sbb
jg
test
adc
mov
iret
xlat
xorl
fnstenv
in
popf
fmul
adc
mov
mov
mov
in
call
roll
inc
xchg
rcll
shlb
shrb
cmp
and
sub
pusha
xor
in
add
cmc
arpl
aas
addb
data16
xor
lds
pop
in
in
xchg
mov
daa
outsl
pop
and
mov
fwait
and
sbb
xor
gs
cltd
loop
cmpb
cmpl
or
add
inc
filds
ss
mull
daa
push
nop
xor
ret
imul
lret
sbb
mov
ja
push
shlb
shlb
je
mov
cmp
lahf
mov
inc
xorl
xchg
sub
sub
lcall
test
mov
sub
ret
jns
adc
in
xchg
dec
mov
push
dec
inc
bound
idivb
adc
or
mov
mov
xor
outsb
cld
fdivl
cmp
rsm
fnstsw
mov
mov
shlb
xlat
nop
jge
jecxz
mov
jl
dec
mov
jmp
imul
push
mov
insl
jl
scas
pop
mov
xchg
push
scas
roll
or
or
mov
sarb
mov
fs
cli
mov
pop
in
dec
sbb
jmp
sbb
fstpt
jno
mov
push
sbb
pop
dec
push
lcall
mov
stos
fstl
push
sbb
mov
movsb
dec
ljmp
imul
repnz
xchg
inc
imul
rcrb
mov
test
dec
cmp
pusha
ljmp
sbb
jecxz
push
xor
push
xchg
popa
or
xor
add
sub
adc
sub
cltd
adc
xor
mov
xchg
cmp
lahf
mov
add
lock
dec
int
into
pop
jbe
sub
stos
in
sbb
and
cmpsl
divb
mov
jae
hlt
mov
sti
in
inc
mov
imul
shlb
pop
mov
add
or
pop
xchg
cwtl
ficompl
fistl
inc
sub
push
out
sbb
leave
dec
in
ret
inc
rep
ljmp
js
add
frstor
mov
imul
inc
cmp
xor
adc
repz
pop
loope
jne
inc
xor
mov
in
jle
mov
scas
and
push
stos
outsl
inc
xor
je
pop
or
scas
nop
pop
jecxz
imul
jo
jmp
xor
pop
jp
nop
sbb
dec
dec
in
mov
sbb
pop
aam
pop
mov
or
mov
sub
popf
hlt
in
mov
jle
xchg
jo
jns
loopne
bound
mov
add
outsl
xor
dec
or
in
jns
es
add
cld
adc
push
fcompl
mov
rcll
xchg
pfacc
mov
mov
pop
js
popf
push
movsb
rcrl
sbb
es
fs
repnz
sub
xor
pop
jecxz
mov
push
in
pop
push
movsb
sbbl
hlt
fdivs
sbb
cld
mov
push
cli
inc
mov
cmp
xor
ror
add
or
ret
and
out
outsl
xchg
cmp
dec
pushf
push
aaa
into
mov
cmp
mov
mov
mov
mov
je
adc
xor
cmpsl
push
pop
or
cmp
fs
mov
add
out
test
adc
fldenv
inc
sahf
scas
xor
mov
dec
push
inc
inc
es
adc
mov
push
aas
dec
je
sub
sahf
lret
lcall
mov
cmpxchg
mov
inc
sub
dec
or
sbb
adc
mov
and
sahf
fists
es
movsb
fs
sti
cltd
mov
ficoms
push
push
add
daa
sub
outsb
dec
xor
xlat
and
imul
int3
loope
in
pop
in
mov
cmc
sub
sbb
loopne
cmp
add
mov
mov
pop
movb
xor
adc
add
jns
xor
rcll
outsl
mov
enter
ds
pop
dec
nop
mov
inc
mov
inc
cmp
xchg
jne
icebp
hlt
leave
pop
std
push
je
cmp
cmp
pushf
mov
mov
adc
xor
sub
lret
addr16
xor
roll
les
and
int3
aas
orb
mov
mov
push
pop
mov
sub
push
xor
aaa
cli
rcll
rorl
xor
test
ja
sarl
les
aaa
cltd
xchg
aam
inc
adc
ret
xchg
cmp
sub
dec
cs
adc
dec
fstpt
cmpb
and
xor
jp
jg
mov
loope
mov
loopne
xor
cltd
repnz
jno
mov
lea
repz
ja
or
popa
mov
and
mov
jo
lcall
sub
mov
add
stos
fwait
jecxz
gs
sub
xchg
outsl
pop
out
insb
ficoms
add
inc
daa
test
cmp
push
loop
cli
sbb
shr
mov
mov
aas
add
cli
cmp
enter
lcall
fildl
repnz
add
xchg
xchg
daa
mov
adc
insl
adc
sbb
adc
cwtl
addl
rorl
gs
popa
repnz
pop
push
repz
mov
in
sbb
xor
push
mov
sub
inc
bound
cmpsl
push
aad
test
dec
push
outsl
xor
fildll
cltd
in
inc
out
mov
jb
inc
cmp
jmp
dec
xor
lods
mov
es
lods
imul
arpl
hlt
dec
push
int
dec
push
leave
icebp
popf
fsubl
ficomps
mov
sub
fcmovnb
sub
push
imulb
inc
push
jl
and
jns
ljmp
cmp
inc
mov
gs
xchg
pop
call
jne,pt
cmpl
jb
push
or
xor
mov
mov
push
lods
nop
aas
sbb
jae
jnp
movsl
sub
ficomps
leave
sub
sbb
mov
lds
mov
push
mov
popa
mov
outsl
push
cmp
push
push
dec
aaa
add
out
cld
cmp
out
je
sub
out
fwait
push
jmp
das
scas
or
lea
arpl
mov
inc
pop
sti
pop
into
les
popf
push
xchg
mov
and
les
cmp
popa
or
or
mov
lock
movsl
xchg
jge
pop
leave
jmp
repz
add
frstor
inc
repz
in
scas
inc
nop
loopne
xor
mov
push
dec
pop
xor
mov
mov
jbe
pop
fdivl
sub
xchg
ds
pop
mov
fs
inc
xchg
hlt
aam
add
fidivrs
pop
rcl
xchg
pushf
cld
adcl
xor
add
stos
loop
iret
std
mov
pop
roll
lods
dec
dec
adc
fdivs
xchg
int
repz
mov
pop
mov
in
or
mov
dec
sti
inc
sbb
bnd
andl
repnz
xlat
cmp
inc
int3
lcall
aaa
rol
inc
std
push
pushf
inc
ret
pop
xor
mov
and
push
lea
sbb
ret
jl
sub
in
mov
jmp
out
mov
adc
sahf
jns
insb
and
cmp
les
inc
sarl
stos
or
xlat
mov
cltd
out
xor
inc
mov
push
push
mov
bound
sbb
int3
ret
adcb
int3
shl
sub
and
dec
imul
shlb
hlt
std
xchg
sub
xorb
or
test
push
aas
aaa
xchg
and
sarl
aam
das
in
xchg
pop
dec
sbb
xchg
js
mov
pop
icebp
dec
rcll
stos
test
lods
lret
cmp
clc
in
icebp
inc
sbb
pop
sti
ja
je
pop
jg
mov
fninit
push
pop
sti
cmp
fwait
xchg
pop
outsl
popf
dec
shl
popf
pop
or
and
js
sub
fsts
jecxz
gs
mov
mov
addr16
and
rcll
sbb
mov
addr16
push
clc
ds
sub
or
add
jge
icebp
hlt
add
sti
lret
mov
fiaddl
sbb
out
in
outsb
das
fs
jb
xor
and
jno
out
insb
dec
sbb
test
add
mov
sbb
loope
mov
outsb
xchg
add
int
int
dec
hlt
push
and
adc
je
or
or
bswap
enter
addr16
mov
inc
jmp
into
insb
push
push
xor
adc
or
mov
jne
out
lock
push
xor
stos
shlb
push
scas
shrb
inc
inc
push
mov
add
add
xor
cmp
add
add
push
add
add
add
orb
add
push
add
addb
add
xor
cmp
add
push
add
sldt
pusha
add
cmp
add
mov
add
mov
add
fadds
add
add
add
sub
add
xor
cmp
add
add
add
add
js
add
add
add
add
add
jle
cmp
add
add
add
add
mov
inc
add
les
add
xor
cmp
add
add
add
add
enter
pop
inc
add
xor
add
xor
cmp
add
add
add
add
lock
add
add
add
jle
cmp
add
add
add
add
sbb
add
push
inc
add
cmp
add
xor
cmp
add
add
add
add
inc
add
add
add
add
jle
cmp
add
add
rolb
xorb
adc
add
add
add
xor
cmp
add
add
add
add
mov
add
and
adc
add
xor
cmp
add
add
add
add
mov
add
xor
cld
add
add
add
add
dec
add
dec
add
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
add
add
loopne
add
lock
add
add
add
adc
add
add
add
add
add
add
push
push
add
add
add
je
add
add
add
add
add
add
add
ljmp
add
adc
add
add
add
incl
push
add
adc
add
sbb
add
add
add
jmp
add
sbb
add
and
add
add
add
decl
add
and
add
sub
add
add
add
ljmp
add
sub
add
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
gs
jne
xor
cs
insb
add
add
add
push
jns
inc
jb
gs
je
imul
add
jbe
jo
xor
cs
insb
add
add
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
jne
gs
xor
fs
insb
add
add
inc
gs
gs
outsl
popa
jb
push
jns
add
add
gs
insb
xor
cs
insb
add
add
gs
insb
inc
js
arpl
gs
add
leave
mov
add
add
add
leave
mov
add
add
add
add
int3
fnsave
sub
rorb
mov
add
xor
pop
or
in
jb
jne
cmp
or
dec
xchg
rolb
icebp
pop
or
clc
repnz
push
add
xorps
cli
inc
out
inc
aam
cmp
mov
loopne
dec
jecxz
call
add
sbb
ss
pop
in
hlt
jne
in
jge
int3
es
mov
je
mov
pop
jno
rep
in
dec
or
push
sub
enter
jge
mov
shl
or
inc
outsl
dec
mov
sbb
orb
xchg
or
xchg
int3
pop
hlt
iret
data16
and
and
roll
inc
stos
add
pop
sub
fwait
int
adc
popf
or
loopne
incl
js
or
setg
dec
out
or
scas
icebp
cmp
cmp
jg
icebp
cmp
mov
icebp
xor
xchg
push
hlt
and
dec
aam
mov
call
inc
add
imul
add
pop
lea
dec
cmp
repz
ds
sub
call
or
push
sub
shll
nop
pop
push
jne
and
or
pop
outsb
mov
and
movsb
cmpsb
pop
or
sbb
out
repz
or
js
pop
scas
mov
rolb
addps
sub
mov
jbe
xor
mov
push
add
add
cli
mov
or
incl
jmp
popa
andb
pop
xchg
and
bound
adc
je
cwtl
lock
cmpsl
outsb
or
or
lahf
test
adcl
add
mov
or
cmp
cltd
or
insl
std
add
je
sahf
adc
push
imul
rol
ljmp
or
adc
outsb
lods
and
inc
inc
jns
fldl
push
cltd
dec
fmull
pop
cwtl
and
sbb
adc
jge
dec
xchg
jmp
pop
movl
add
lea
or
pop
daa
push
mov
test
cmp
push
mov
clc
adcl
es
cmpsb
sub
cmpsb
mov
mov
jae
mov
sbb
bound
inc
pop
sub
mov
add
xor
in
mov
lea
push
clc
test
adc
push
jmp
mov
pop
jmp
sbb
dec
js
pusha
fmull
test
jp
dec
jae
mov
pop
lea
mov
dec
fstp
jne
out
imul
je
add
pop
push
sbb
loope
out
mov
inc
sbb
mov
mov
loop
enter
enter
sub
adc
or
mov
or
xor
xor
jmp
mov
inc
bound
mov
or
popa
jno
or
les
sub
andb
push
pushf
bound
test
sbb
das
xor
pop
rorb
fsubs
lock
cwtl
adc
sbb
inc
inc
mov
sbb
repz
jl
movsb
cs
sar
inc
jecxz
pop
decl
push
push
nop
or
incb
mov
sbb
gs
sbb
out
insl
add
jb
js
cld
in
xchg
lock
lea
mov
adc
shlb
push
imul
or
sub
inc
dec
cli
jo
fimull
mov
shl
lret
stc
xchg
jecxz
push
adc
add
push
mov
decb
jo
mov
adc
add
call
jno
push
sub
jne
lea
mov
and
or
jge
dec
test
adc
dec
adcl
mov
adc
push
dec
data16
or
jl
add
sahf
push
and
inc
mov
es
xchg
test
lock
lret
add
mov
pop
inc
dec
addb
dec
cmp
sbb
jb
xchg
pop
adc
mov
mov
sbb
mov
stos
add
push
cltd
push
pop
divl
cmp
pop
jl
push
mov
push
mov
xchg
fstpt
enter
fs
loop
xchg
leave
fldl
fildl
push
call
cld
add
mov
lea
sbb
sbb
jo
adc
lea
test
orb
or
dec
test
push
inc
add
mov
roll
or
mov
cs
rorl
mov
fwait
inc
insb
inc
or
in
aaa
and
mov
push
and
arpl
inc
sub
sbb
or
inc
cmp
or
and
jns
add
or
adc
mov
jmp
add
lcall
mov
sahf
xchg
inc
stc
jae
into
adc
push
rol
add
repz
or
push
push
mov
or
dec
adc
or
add
sub
in
in
in
push
jo
jbe
sbb
push
lea
lods
stos
add
nop
cmpl
je
jae
jae
test
jecxz
mov
sbb
rep
jle
pop
sbb
add
enter
push
pop
scas
int3
lcall
sbb
xor
inc
fists
or
mov
inc
push
leave
push
and
xchg
aaa
or
mov
call
mov
xchg
fld
sub
or
push
rcll
xor
leave
adc
test
xor
push
push
outsb
add
xchg
stos
sbb
or
cmp
pop
push
xorb
loope
fidivrl
push
lea
push
aas
pop
push
mov
dec
es
sbb
sbb
pop
push
aas
shl
adc
push
test
sbb
rorb
or
jmp
or
aaa
fimuls
xor
add
test
mov
out
nop
or
mov
pop
movsl
pop
push
sbb
sbb
adc
cmp
pop
pop
pop
pop
ret
bound
cld
dec
mov
sub
loopne
push
add
lret
push
call
pop
push
mov
jle
jb
pop
sti
mov
push
push
fnstsw
ret
push
and
xchg
xor
ret
pop
in
popa
lods
push
jne
lcall
cmc
call
shll
adc
sysret
add
xlat
add
cltd
or
rcrb
pop
push
aam
jb
leave
pop
or
or
or
and
push
and
pop
cs
jle
mov
inc
adc
jge
inc
dec
xor
insb
jns
movzwl
xorb
jne
cmp
iret
jge
add
inc
movzbl
add
push
cld
sub
shll
dec
mov
xor
sub
ret
data16
call
xchg
push
mov
mov
pop
pop
dec
mov
xor
lds
pop
popa
jmp
sbb
push
mov
in
add
add
push
push
call
pop
mov
mov
dec
push
out
mov
in
inc
pop
pop
fistpll
fimuls
int
in
sub
inc
je
es
pop
sbb
dec
or
stc
add
movsl
add
jnp
inc
push
cli
cmp
sbb
lret
pop
ror
cmp
cmp
ret
add
and
push
mov
push
in
adc
aaa
xchg
sub
mov
adc
bound
jecxz
push
outsb
dec
sub
push
ss
pop
gs
adc
lds
push
hlt
push
daa
dec
or
dec
enter
das
push
push
std
popf
push
in
lahf
rolb
sub
inc
sub
adc
push
in
jmp
lret
mov
cli
cmp
jne
push
stc
jmp
fidivl
jl
sbb
adc
push
pushf
dec
jecxz
cmp
fimull
push
inc
scas
or
sub
lret
fidivl
dec
inc
ret
dec
cmpb
pop
inc
mov
push
je
add
or
es
push
cmovle
inc
into
jle
test
sahf
and
push
push
push
push
call
sbb
dec
aaa
mov
add
jae
insl
jae
bound
sbb
pop
mov
rclb
scas
or
jno
adc
icebp
push
int
bound
test
xchg
dec
ss
test
adc
out
inc
leave
xchg
into
jge
pop
push
adc
shlb
testb
mov
sti
or
inc
test
and
jmp
insb
inc
pop
add
ds
push
inc
xor
dec
pop
mov
push
ret
mov
mov
sub
lods
popf
lea
push
outsl
in
repz
xor
sub
mov
dec
call
dec
or
inc
sub
repz
insl
sub
test
inc
sbb
add
cmp
orb
jl
prefetchnta
shr
pusha
loope
push
lret
jbe
insb
mov
push
add
testb
mov
inc
push
xchg
cmp
mov
xchg
jp
and
cmpsl
sub
scas
jno
or
push
lea
loopne
push
xor
push
pop
cmpsb
hlt
lret
sbb
jo
insb
imul
sbb
gs
jae
dec
adc
and
std
mov
gs
ljmp
outsl
jae
das
insb
sahf
pop
outsb
lahf
je
bound
mov
imulb
out
mov
dec
cmp
xor
popa
insb
mov
sub
push
xchg
daa
je
mov
mov
dec
in
jecxz
popa
addr16
inc
outsl
cmp
cmp
js
data16
fidivrs
cmp
imul
dec
push
inc
rol
dec
popa
outsb
fs
add
xlat
mov
movl
les
jl
pop
imul
mov
jbe
xchg
lcall
stos
mov
xor
rorl
jmp
push
dec
cmp
dec
xor
jp
dec
pushf
or
mov
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
test
add
pushf
push
add
mov
pop
add
or
add
add
add
inc
add
push
add
add
add
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
add
pop
pusha
inc
add
inc
add
inc
add
