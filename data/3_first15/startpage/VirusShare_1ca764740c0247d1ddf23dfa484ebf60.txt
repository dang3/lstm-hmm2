mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
cmpsl
jle
pop
imul
xchg
sbb
or
sub
jbe,pt
stos
adc
jno
mov
aas
push
fwait
sub
mov
cmpsb
arpl
jp
test
xchg
jge
and
test
outsb
scas
sbb
out
sbb
rcrl
insb
sar
mov
int
loopne
add
popf
in
rcl
nop
icebp
xchg
lahf
inc
iret
test
pop
test
scas
cmp
aaa
hlt
add
mov
gs
push
aad
cld
lods
sbb
jg
mov
or
jns
iret
in
jl
xchg
dec
fs
dec
push
sub
rorl
push
sbb
mov
stc
ficoml
sub
nop
icebp
inc
jge
stos
test
test
mov
movsb
mov
ds
cld
fiaddl
xchg
roll
mov
faddl
fists
mov
in
out
stc
dec
xchg
xchg
mov
popf
lcall
pushf
dec
arpl
fdivl
push
adcl
jg
outsb
orb
out
xchg
jg
dec
ljmp
loope
push
adc
in
cmp
fimuls
icebp
fisubrs
jp
es
lret
pop
fwait
sub
adc
cmpsl
shll
jne
inc
les
adc
pop
ljmp
xchg
into
nop
add
test
adc
pop
cwtl
mov
and
ret
cltd
out
or
mov
mov
xchg
xor
cmp
xor
mov
mov
and
jo
add
repz
repnz
jp
popa
pushf
adc
loope
sub
push
adc
popa
mov
mov
push
loopne
mov
mov
mov
xor
xor
sub
lods
sbb
es
jno
loopne
fcoms
jg
xor
pop
out
pop
add
inc
pop
sub
push
xor
push
adc
add
dec
cmpsl
adc
data16
add
and
mov
pushf
loopne
fists
std
mov
dec
cmp
daa
sbb
out
rcll
jne
or
iret
pop
scas
cld
or
dec
test
dec
mov
cmp
mov
sub
jecxz
adc
in
hlt
insb
xchg
cmp
mov
vmovntps
xchg
addr16
pop
push
icebp
int3
shl
mov
jecxz
cli
fs
sub
lcall
imul
and
loopne
pop
out
pop
adc
outsl
mov
sub
xchg
push
jg
mov
or
push
xlat
mov
or
xchg
cmp
mov
sbb
sbb
sbbl
hlt
cmp
popa
adc
mov
pushf
shl
adc
pop
jl
iret
xchg
add
mov
pop
mov
stos
imul
mov
push
add
pop
rcrl
mov
and
adc
sti
xor
insb
or
orl
imul
int
or
repnz
xor
gs
inc
sbb
push
xor
jg
in
ret
ffree
cwtl
mov
lods
gs
in
test
pop
xor
add
pop
push
mov
jb
stc
mov
icebp
stos
dec
rcl
xchg
mov
lret
testb
les
sub
ret
inc
cmpsb
xor
jno
mov
pop
ret
sti
outsb
or
aad
sarb
add
mov
pop
push
mov
xor
gs
mov
hlt
jge
inc
and
cwtl
add
loopne
or
data16
push
je
jb
jle
sbb
xor
inc
lcall
add
ret
lock
imul
xchg
adc
xchg
fst
jns
sub
mov
inc
and
jno
jl
sbb
push
lock
xchg
outsl
fisubs
shll
jg
push
sub
pop
inc
mov
add
mov
popa
repz
xchg
mov
in
lock
pop
sub
pop
hlt
sub
jb
and
pop
xor
stos
and
add
cmp
popf
pop
mov
mov
xor
or
lcall
mov
pop
insl
inc
mov
xchg
xor
sbb
xchg
shll
clc
sbb
hlt
jmp
gs
inc
push
loope
or
in
sbb
dec
cmp
data16
js
pop
push
sahf
sahf
mov
jae
jno
or
aad
mov
and
enter
sbb
inc
xchg
aas
xor
adc
test
insl
cmc
dec
jmp
int3
xchg
adc
jbe
pop
xor
and
out
mov
shr
jae
mov
shrl
xchg
lcall
mov
arpl
sbb
cmpsb
shrl
cwtl
adc
pop
movsl
jge
out
and
insl
imul
xchg
and
adc
pop
clc
push
push
cltd
push
inc
mov
mov
push
clc
sbb
or
push
add
push
and
xchg
aam
pop
jge
or
xchg
mov
ljmp
in
out
jl
insb
out
insl
sub
pop
inc
repnz
mov
dec
pushf
repnz
test
cmp
cmp
sub
inc
or
dec
insl
xor
fsubrl
xlat
jl
fwait
inc
or
test
cwtl
sar
scas
mov
dec
cs
mov
sti
pop
iret
aam
adc
sbb
ret
vpsraw
in
mov
dec
add
imul
test
dec
jle
int
xchg
xchg
in
pop
sub
pop
enter
dec
push
inc
ficoml
pop
push
adc
mov
inc
xchg
and
xchg
dec
add
loopne
or
popa
aas
imul
add
test
jecxz
popf
push
cltd
pop
fs
mov
mov
aaa
inc
mov
lret
lea
mov
xchg
andb
testl
sbb
aaa
xchg
cli
sub
inc
bound
pop
cwtl
adc
cmp
mov
pop
mov
sbb
ljmp
push
mov
mov
jae
xor
mov
pop
shll
xchg
push
enter
or
xchg
dec
and
into
decl
jae
and
inc
pop
fistpl
push
xchg
push
cs
out
push
iret
push
xor
mov
addr16
push
push
cli
xchg
test
pop
xchg
in
or
lret
out
sti
push
sbb
addb
cmp
test
imul
mov
fwait
pop
js
sbb
fstpt
pop
sub
lods
repz
clc
fisubrs
es
fistpll
in
dec
shl
ss
push
xor
popf
shrl
xor
mov
mov
add
sbb
push
out
pop
sub
adc
addr16
xchg
dec
xchg
loop
inc
or
ljmp
bound
xchg
xor
in
inc
sub
dec
cli
fs
mov
xchg
js
push
sub
jo
adcb
movsl
sub
push
mov
pop
mov
adc
hlt
lea
pop
outsb
idivb
jl
dec
push
std
xchg
push
mov
inc
fucomp
xor
xlat
fisubrl
or
inc
subl
or
push
lret
pop
imul
add
hlt
neg
or
push
stos
sub
inc
lret
add
pop
jecxz
loop
sub
fcoml
idiv
cmc
lock
shlb
ret
bound
mov
mov
adc
push
insb
subb
push
adc
lods
dec
mov
adc
cmp
rcrb
jecxz
xchg
mov
sub
xor
outsl
fs
sbb
and
push
ljmp
mov
rclb
bound
jmp
sbb
xchg
int
inc
jp
out
push
xchg
xchg
ds
xchg
sbb
pop
adc
add
loopne
inc
sti
sub
in
mov
in
mov
call
fs
inc
fistl
adc
sub
xchg
ss
movsl
jp
lahf
pop
ret
test
mov
adcb
pop
and
inc
not
cmpsl
je
mov
lret
fs
divl
in
xchg
push
sbb
scas
sub
xor
inc
mov
xchg
xchg
stos
cmpb
arpl
mov
push
inc
in
call
fmull
jge
into
xchg
jmp
sub
insl
mov
cltd
jo
lock
lahf
pop
mov
push
stc
cmpsb
in
xorb
jl
mov
call
daa
fldl
cmp
lret
push
inc
mov
jge
mov
jnp
inc
sbb
mov
cwtl
loop
inc
push
dec
mov
push
cmp
xor
adcb
xchg
imul
jg
pushf
aas
jle
cld
sbb
pop
mov
insb
mov
xlat
dec
pop
cmpsl
adc
movsb
stos
dec
hlt
jno
shlb
in
jnp
subb
cmp
not
mov
mov
sbb
mov
xlat
pop
addr16
in
jns
inc
mov
dec
movsb
fmuls
popf
pop
notb
inc
test
loop
mov
rorl
dec
xchg
mov
sub
adc
sbb
out
cmc
push
mov
mov
mov
insb
jnp
into
daa
jae
repz
push
icebp
fmull
sub
mov
jbe
ret
jo
jnp
dec
mov
jo
sub
mov
jnp
mov
rclb
repz
lret
add
cltd
testb
push
lahf
icebp
insb
or
add
shr
call
mov
cld
pop
jmp
inc
in
or
sbb
sahf
dec
jae
out
imul
sbbb
in
lcall
inc
cwtl
insl
push
mov
sub
aas
cwtl
pop
xchg
cltd
in
outsl
mov
lcall
outsl
lock
adc
mov
and
dec
dec
out
cmp
inc
mov
scas
mov
sbb
insl
adc
lock
mov
cmp
inc
jmp
xor
testb
mov
inc
mov
push
out
and
pop
in
pop
mov
insb
xchg
mov
mov
or
pop
jne
cmp
lcall
daa
js
pop
int3
mov
xlat
push
and
lcall
adc
or
adc
iret
out
push
pop
cmp
xor
dec
sub
fwait
incb
pop
inc
outsl
fadds
and
mov
outsb
cmc
cwtl
inc
stos
xor
jns
pop
push
sti
add
mov
outsb
pusha
pop
jge
xor
push
sti
xchg
cmp
ja
aad
test
lcall
or
xchg
inc
orb
jmp
inc
pop
mov
lods
adc
ja
inc
inc
mov
lods
pop
jl
xor
or
sbb
jp
prefetchwt1
int3
inc
repnz
ljmp
addr16
aad
repnz
xor
gs
jg
loop
sub
sub
jne
jp
cmpsl
mov
sti
cmp
inc
pop
or
pop
adc
jnp
inc
mov
add
pusha
adc
test
mov
dec
sti
or
cmp
fstpl
lahf
aaa
xor
push
in
jp
jmp
aad
cmp
inc
push
adc
cli
fcmovu
test
jae
cltd
cmp
xor
loope
loope
cmp
mov
out
inc
fwait
repnz
add
aad
data16
xchg
mov
inc
dec
es
xchg
das
movsb
xlat
aas
cltd
pop
mov
push
sub
jnp
and
enter
mov
sub
xchg
cmp
test
in
insb
sub
jnp
or
cmc
shl
xchg
xchg
idivl
dec
lcall
xchg
xchg
sub
mov
xor
cmp
in
aam
xchg
adc
cmc
popf
mov
cmp
imul
inc
inc
xchg
push
jae
inc
js
add
fists
les
mov
jnp
cmp
sbb
insl
xchg
pop
mov
xorb
push
adc
adc
es
jl
add
inc
jne
test
data16
lahf
dec
repz
ret
sbb
mov
push
xchg
sub
mov
xchg
loope
jecxz
mov
mov
cltd
pop
adcl
cmp
sbb
jmp
inc
dec
leave
cmp
das
pop
bnd
cmc
movsb
mov
lock
cmpsb
insb
xor
or
inc
notb
pop
xor
leave
daa
jp
mov
adc
addr16
xor
cmp
jo
aad
std
mov
and
lret
ret
mov
fmuls
xchg
sbb
shll
adc
mov
fsubs
loope
mov
push
add
fnstenv
loope
bound
loope
sub
cli
xor
or
dec
dec
hlt
sarb
inc
pop
loop
adc
aaa
sbb
aad
notl
push
sub
or
loop
and
incb
cmpsb
push
insb
dec
xchg
aad
and
dec
xor
dec
out
fsubrl
fisubl
cld
inc
shrb
lret
xor
test
pop
bnd
js
pop
pop
leave
insl
rcrb
xor
cmpsl
inc
and
test
mov
add
lea
cwtl
and
fcoms
mov
ja
cmp
inc
xor
imul
rcll
xor
mov
add
aas
jo
roll
and
mov
jle
pop
jb
stos
scas
lock
adc
rcl
into
imul
call
push
icebp
push
int3
push
int
and
push
adc
cmc
inc
leave
call
mov
pusha
insb
gs
cli
lods
jb
test
stos
aas
imul
xchg
lds
loopne
data16
pop
mov
adc
ja
jge
addb
jns
add
jge
ljmp
jmp
pop
daa
idivl
in
rclb
popw
dec
mov
sti
jb
loope
mov
pop
cmpb
xor
les
out
fistpll
repz
mov
pop
cs
dec
mov
stos
and
cld
and
dec
jge
sub
push
mov
leave
insl
hlt
and
xor
in
fs
repnz
dec
push
mov
std
ljmp
cmpsl
imul
xchg
dec
scas
jbe
jns
jne
ds
addb
inc
jl
mov
loope
xor
dec
rcr
jne
xlat
adc
in
adc
jnp
pcmpgtd
xor
je
adc
sbb
inc
mov
or
cli
xor
js
jno
and
mov
cs
sbb
mov
ret
dec
nop
fsubl
shr
add
rorl
adc
xchg
ja
cltd
imul
cmp
xchg
bound
xor
inc
mov
in
inc
xor
lret
push
mov
mov
sub
in
push
jo
and
aad
mov
cltd
in
cltd
and
insb
lret
push
aaa
bound
xchg
lret
into
repz
in
outsl
sti
aaa
inc
pop
mov
xchg
inc
test
mov
repz
icebp
push
dec
imul
push
inc
push
in
jmp
cwtl
mov
pop
push
xchg
and
cmp
icebp
ror
orl
pushl
cli
jnp
ja
das
cmp
xchg
jnp
mov
mov
insb
xchg
cld
push
sarl
sarb
clc
hlt
fildll
aaa
lods
loopne
test
push
and
frstor
test
out
and
push
push
push
jb
xor
push
jbe
jae
and
outsl
add
lods
cwtl
les
cmovs
jne
lods
push
pop
xchg
jecxz
stos
dec
xchg
pop
xor
push
loope
jns
xchg
xchg
inc
clc
xchg
jnp
inc
fdivrs
dec
cmp
add
in
lret
imulb
push
mov
popf
xor
sub
push
test
subb
mov
hlt
insb
jb
hlt
pop
add
mulb
in
pusha
enter
jne
stos
pop
push
jle
fsubl
fdivr
and
jmp
inc
shll
xchg
inc
xchg
fldenv
inc
fisubl
xchg
movsb
inc
js
repnz
and
loop
fsub
cmp
lods
xor
cmp
in
hlt
test
inc
in
aaa
pushf
sti
ret
add
cmc
pop
scas
dec
dec
pop
xchg
inc
repz
sti
test
arpl
outsb
or
jp
pusha
jno
pop
mov
into
dec
xchg
lcall
arpl
pushf
fnsave
dec
mov
xchg
push
mov
pop
mov
clc
jl
jbe
adc
adcb
ss
adc
pop
push
cwtl
xchg
adc
loop
je
sahf
cmpsl
add
inc
lods
pop
lahf
jns
cmp
jg
out
xlat
xor
sub
sbb
out
into
test
sbb
das
lcall
shll
sbb
push
sbb
sti
sbb
jle
mov
xor
mov
test
jmp
mov
xchg
add
or
jecxz
cmpsl
adc
inc
std
imulb
mov
dec
js
xchg
ret
xchg
addr16
aam
add
cmp
sub
adc
and
or
sub
jecxz
nop
out
call
dec
dec
popa
push
loop
shlb
push
mov
mov
mov
sub
int3
sti
add
ret
push
mov
cld
out
mov
mov
out
xchg
jp
cltd
test
add
or
pop
loop
cmp
cmp
mov
fisubl
cmp
jnp
dec
insl
push
test
fs
hlt
push
sbb
dec
loope
leave
cmp
sbb
adc
mov
and
test
fdivrp
jns
fsts
ss
inc
idivb
int
repz
push
inc
cld
pop
int3
faddl
sub
and
and
fucomi
sub
push
not
test
into
and
mov
loop
cld
shll
mov
xor
clc
out
sti
inc
fcmovbe
lock
sar
mov
mov
mov
dec
ret
jge
mov
outsl
enter
mov
or
push
lea
imul
adcl
enter
push
notb
dec
sub
xchg
ja
sub
push
shr
jle
addl
or
dec
add
or
cmc
fcomps
lret
add
in
adc
ja
imul
xchg
sti
mov
out
mov
adc
cmp
lock
adc
jae
int3
je
cmp
xlat
mov
pop
xchg
push
cltd
pop
push
cmp
dec
andb
cltd
popa
jl
imul
insl
adc
push
out
sbb
mov
mov
lcall
inc
xchg
clc
mov
jbe
rcrl
ds
icebp
inc
push
cs
inc
cmp
bound
pop
in
stos
out
pop
push
push
cmp
inc
inc
push
scas
mov
xor
inc
aaa
rcll
inc
jmp
inc
ja
pushf
inc
xor
clc
push
jge
adc
insl
mov
in
adc
hlt
out
pop
sbb
movsl
jae
fs
loopne
jnp
aam
minps
bound
ds
cmc
out
cmp
push
jecxz
outsl
pop
push
bts
out
aam
jnp
push
dec
push
aaa
sbb
sub
cld
fwait
dec
sar
shl
test
andb
js
inc
fbstp
daa
cltd
xor
add
sub
or
daa
pop
xchg
out
in
decl
mov
mov
stos
cli
sahf
in
enter
sbb
jge
jecxz
ds
outsl
imul
fsubrs
mov
stc
xor
jg
int3
xchg
dec
xchg
jno
iret
sub
xchg
pushf
adc
loop
addr16
push
adc
ds
jmp
loop
mov
repz
js
stos
sub
scas
fcmovnb
dec
mov
xchg
push
add
loop
pop
pop
daa
mov
pop
adc
xor
std
inc
push
dec
in
inc
jmp
xchg
inc
or
sub
push
std
leave
push
mov
sbb
mov
cmp
pop
dec
repz
pop
sub
dec
adcl
mov
imul
insl
fidivrs
mov
cmpsb
leave
push
push
and
lods
imul
fxch
iret
les
in
mov
test
add
cmp
mov
imul
shll
mov
lret
repz
cmp
add
adc
imul
fisubl
adc
jp
jp
cwtl
imul
push
adc
movsb
push
mov
cld
loopne
ret
enter
in
cmpsb
xor
mov
and
inc
in
cs
and
push
push
or
adc
in
xor
adc
sub
add
insb
and
cmpsl
jbe
and
imul
sbbb
pop
jmp
out
sahf
mov
pop
popa
dec
popf
add
mov
mov
iret
mov
jmp
lret
loopew
pop
cli
enter
testl
into
mov
inc
rorl
jmp
push
jl
xor
sbb
adc
pop
std
xor
call
mov
and
dec
add
cmpsb
mov
rclb
out
mov
stc
xchg
out
sahf
dec
test
out
push
aas
cli
xor
dec
xchg
mov
push
aaa
xchg
popf
subl
adc
inc
mov
leave
cmp
sbb
xchg
inc
jns
add
and
les
dec
test
dec
sbb
lock
shrl
sbb
loop
lds
jne
ficomps
int3
cmovne
xor
inc
std
in
aaa
pop
addr16
lcall
or
imulb
mov
jnp
sub
adc
mov
mov
jno
rorb
pop
ss
pop
imul
inc
aaa
mov
xchg
imul
fistps
mov
inc
scas
add
jmp
push
mov
adc
jns
aam
imul
movsl
dec
loope
sub
dec
icebp
in
in
das
push
sub
adc
inc
lret
test
pop
test
mov
scas
pop
mov
add
mov
fcmove
in
sbb
mov
idivl
inc
pushf
inc
pop
sbb
in
dec
jmp
jbe
movsb
or
out
pop
in
sub
call
jns
jmp
lock
or
sub
xchg
negb
xchg
jne
lods
mov
mov
or
jb
push
cmpsl
roll
cmp
cmp
xor
lcall
add
jge
in
in
mov
loopne
lea
adc
mov
xchg
test
std
data16
enter
xor
mov
insb
push
lret
mov
push
out
lret
and
int3
cmpsl
or
or
adc
xlat
cli
aam
and
push
sub
sub
arpl
mov
push
dec
cmp
fcomp
jae
mov
cmp
push
dec
int
movsl
jg
cmc
cld
ljmp
and
pop
and
lods
aam
sti
xchg
jmp
rol
test
div
cmp
into
push
iret
jbe
testb
cmpsb
pop
shlb
test
jns
popa
inc
rolb
push
jns
orb
xor
ret
pusha
lcall
dec
mov
and
mov
shll
add
mov
jnp
vprotb
aaa
pop
imul
fcmovu
std
xor
testb
dec
add
sub
in
scas
push
push
insl
push
or
mov
fidivl
rorb
aas
mov
loopne
addr16
insb
dec
movsl
jl
or
jo
mov
mov
jg
stc
std
jbe
mov
adc
loop
cwtl
jle
mov
add
pop
dec
push
pop
cmp
sbb
inc
mov
sbb
orl
test
and
adc
fmuls
dec
add
aas
push
les
push
fs
pop
mov
outsb
push
daa
lods
stc
jl
sub
adc
test
pop
inc
rolb
js
int
rcrb
or
add
cmp
sub
mov
repz
jb
cmpsl
cs
sub
mov
xchg
push
ss
add
fidivrs
mov
add
cld
jb
xchg
mov
loopne
ds
pop
dec
pop
ja
add
and
ret
and
pushf
insb
into
jnp
xchg
mov
inc
aaa
iret
sub
and
dec
ljmp
dec
roll
fsubrl
popa
adc
lods
out
add
cmpl
mov
sbb
adc
xlat
scas
js
and
pusha
or
test
cmp
adc
insl
push
data16
adc
sbb
adc
lea
aaa
jb
imul
in
xchg
jno
mov
push
ja
dec
rcrb
cmp
das
push
lea
test
sar
xchg
fadd
xchg
cmc
sub
inc
test
loope
loope
pop
xchg
faddp
lock
loopne
sahf
mov
mov
push
lds
les
frstor
outsb
sti
mov
jae
out
inc
in
decb
rorb
lea
and
push
mov
es
dec
and
cmp
dec
pop
push
int
push
insb
xor
jge
sub
fstl
fidivrs
fisttps
mov
xor
cmp
leave
xchg
lret
imul
cmp
jmp
cmp
test
out
daa
imul
mov
lds
arpl
mov
add
decl
loopne
call
adc
cmpsl
rcrl
stos
repnz
inc
loope
mov
hlt
dec
or
clc
rclb
xchg
inc
loop
and
sahf
mov
or
push
rclb
adc
jbe
cli
sbb
repz
add
mov
enter
push
jmp
repz
in
into
sub
lods
fists
adc
hlt
enter
nop
int
mov
sahf
bound
inc
or
lahf
add
icebp
mov
sub
cmp
into
gs
fnstenv
xor
dec
jge
mov
aaa
out
adcb
jno
pushf
jp
addr16
dec
iret
leave
shlb
pop
xor
test
sub
leave
inc
dec
rcrl
leave
inc
inc
xchg
pop
cld
ss
aam
or
ja
loope
test
enter
insb
push
fdivr
or
push
cmpsb
mov
sbb
stos
adc
in
or
ds
push
xchg
and
dec
and
mov
cmp
pop
iret
xchg
push
orl
jns
jns
and
mov
or
add
mov
mov
jg
inc
mov
lahf
jge
outsb
adc
pushl
mov
into
cs
pop
mov
into
lods
pop
jnp
mov
jle
add
rcrl
ret
stos
cmc
mov
xchg
cmc
in
popf
cld
mov
jbe
cs
sub
mov
mov
pop
xchg
cmp
xchg
mov
jp
mov
rcr
pop
js
push
sbb
sbb
push
sbb
add
ss
xchg
sbb
push
dec
lret
adc
xlat
loope
cmpsl
mov
push
insb
ret
outsl
rol
sbb
aaa
dec
stc
cmp
xor
aam
lahf
ss
dec
sub
xor
inc
jp
lret
movsb
mov
cmp
sbb
cld
shrl
fidivrs
mov
push
lahf
fwait
push
in
punpckldq
inc
push
enter
push
xor
jno
scas
and
sbb
mov
xchg
mov
push
adcl
mov
dec
xlat
in
sub
mov
mov
call
mov
push
fstps
cmc
enter
xor
push
adc
cli
dec
xchg
loopne
jb
sarl
cmp
aad
xor
adc
lcall
rcr
es
lds
lods
pop
lahf
pop
lea
cmp
pop
hlt
xchg
jge
out
movsl
sbb
minps
imul
xor
in
pop
push
xchg
inc
cmp
jl
dec
push
inc
mov
pop
jmp
xor
jns
leave
xor
cmp
mov
int3
or
loope
out
mov
and
out
pop
mov
pop
cmpsb
mov
sub
or
fidivs
dec
stos
inc
jl
js
add
pop
fstpl
push
add
xor
mov
aad
cmpsb
sbb
inc
dec
fs
into
shr
cmp
mov
xchg
iret
adc
lock
idivl
pop
cmpsl
cs
stos
jne
mov
adc
shlb
sbb
push
mov
ret
or
pusha
sub
imul
sub
sub
xchg
or
test
fcom
mov
jp
mov
test
sub
arpl
fsub
push
pop
and
jno
push
loopne
push
jle
aaa
sbb
jle
cmpsl
stc
adc
mov
call
daa
xor
ret
jle
xchg
xchg
adc
inc
test
sbb
cltd
data16
pusha
enter
adc
fcomps
and
leave
scas
xor
push
jne
inc
push
lcall
dec
sbb
stc
test
or
inc
in
cmpsb
jae
adc
xor
pusha
testb
stc
vaddss
dec
incl
push
popf
push
nop
pop
repz
push
xchg
mov
dec
lods
ret
dec
add
add
jne
out
or
out
aad
xor
in
test
adc
aad
into
push
fcomps
vpsubq
push
xor
xchg
out
fcomip
lret
dec
cmpsb
pop
loop
mov
sub
inc
xchg
sub
fs
into
jnp
or
int
test
in
xor
popw
addr16
push
xchg
jns
cli
movntps
lret
mov
jo
xor
insb
pop
or
fldt
fsubrs
leave
mov
shlb
imull
inc
pop
xchg
xchg
jae
adc
outsl
mov
outsl
pop
fnstsw
insb
xor
sub
dec
xchg
std
push
pop
mov
xor
lock
ret
jecxz
jo
mov
aad
pusha
aaa
mov
jecxz
dec
pop
in
push
or
sub
in
nop
fdivrs
lock
dec
rorb
popf
hlt
lds
xor
aad
and
inc
mov
test
jecxz
je
add
bound
mov
aad
xor
xchg
or
es
xor
dec
push
pusha
cltd
fstp
adc
ja
ss
in
inc
jno
dec
inc
mov
sbb
in
mov
in
sbb
in
lea
mov
adc
call
pop
mov
push
in
dec
filds
imul
push
dec
inc
rolb
mov
sbb
dec
push
add
fdivl
cmpsl
lcall
jbe
ds
sbbl
and
sahf
int3
mov
dec
je
and
xor
in
inc
hlt
subb
and
inc
loope
sub
dec
mov
and
jge
fisttpl
jbe
fsubs
sub
mov
xor
mov
pop
add
or
orb
nop
test
cwtl
xor
jmp
cld
ds
rol
sub
les
nop
inc
pop
mov
xor
lods
int
stos
movsb
add
mov
mov
lahf
lahf
repnz
mov
dec
sti
cwtl
stos
jg
sub
push
repz
push
push
daa
rcrb
xor
mov
pop
or
xor
clc
push
jp
fxtract
jge
cmpsb
xor
insb
lret
jl
nop
into
fidivs
sub
mov
sbb
loop
xchg
jmp
scas
shlb
push
nop
mov
cltd
jecxz
cwtl
sbb
add
jnp
test
sbb
cltd
jno
jne
or
iret
pop
xchg
stos
jbe
loope
mov
xorl
cmpb
loop
das
das
aam
daa
clc
repz
ljmp
push
adc
pcmpgtd
aaa
dec
pop
push
pop
push
adc
cmp
cmp
push
rolb
into
pop
mov
adc
jb
ds
mov
or
mov
test
xor
mov
scas
enter
xchg
cmp
repz
cmp
das
jnp
adc
jl
pop
mov
jmp
adc
movsl
lock
fistpll
jg
sahf
push
xchg
xchg
int
lock
and
sbb
and
fldt
cmp
add
inc
nop
das
daa
jns
rcrb
and
roll
lds
xchg
add
sarl
bound
mov
pop
jne
xor
test
pop
cmp
or
test
mov
xlat
add
filds
or
cmp
cmp
cs
pop
stos
ljmp
dec
shl
dec
out
pop
dec
scas
iret
or
or
xor
loop
testl
mov
adc
xchg
add
mov
sub
addl
push
add
pop
mov
push
xchg
xlat
jo
cmpsl
imul
ror
xchg
dec
pop
out
in
sub
sahf
or
shll
add
clc
cmp
jecxz
movsl
or
iret
push
lret
test
arpl
dec
pop
push
lcall
and
lods
pop
rolb
mov
addr16
add
cwtl
cwtd
pop
shl
jo
out
sarb
aam
mov
test
test
mov
cmp
jmp
push
xor
pop
pop
dec
js
lods
adcb
in
push
notb
lahf
pop
mov
dec
insl
movsl
sarl
mov
int3
loopne
sub
xchg
cmp
mov
nop
adc
fldenv
mov
repnz
call
lret
gs
and
movsl
js
inc
jne
and
xchg
dec
mov
mov
int
pop
fistpl
push
adc
cmc
std
adc
fisubs
mov
mov
ret
fwait
xchg
cmp
aas
fsubrl
push
inc
xchg
or
sbb
push
xchg
xchg
xchg
mov
ss
xor
loop
aad
fs
sahf
cmpsb
in
mov
push
dec
push
loop
dec
jne
xor
ja
imul
or
cmp
mull
pop
jb
lahf
sub
mov
inc
dec
inc
fwait
in
pop
sahf
jmp
aaa
xchg
xor
jecxz
sbb
mov
mov
jo
jecxz
mov
outsl
into
jle
or
mov
dec
in
push
shlb
mov
xchg
and
scas
cltd
lock
and
jb
add
mov
push
mov
xor
mov
dec
mov
mov
sub
or
jbe
orb
pop
pop
jbe
aad
jne
or
pop
aas
sbb
imul
or
mov
aas
add
xadd
mov
jmp
and
and
lret
mov
shr
adc
mov
adc
sbb
das
mov
shll
and
xchg
cwtl
pop
nop
mov
xchg
jecxz
dec
popf
pop
mov
and
add
mov
mov
inc
add
or
mov
lret
cmpsb
in
jae
call
xor
sbb
jle
pop
pop
sub
test
scas
test
test
loope
lods
stos
jo
dec
jle
out
and
cmpsl
adc
mov
inc
insb
push
je
and
push
sarl
pushf
std
pop
xor
iret
pop
leave
cmp
or
test
fimull
xor
mov
push
daa
mov
mov
sub
add
push
dec
sub
cmp
test
subb
out
out
fwait
out
lret
jmp
in
and
push
es
adc
aam
pop
or
push
adc
adc
push
out
movsb
repnz
lods
pop
push
loope
mov
std
scas
pop
dec
push
lock
out
scas
subb
mov
imul
ja
subb
push
mov
lret
pop
ds
and
idivb
sub
dec
push
add
sub
xor
xchg
rorb
fisubs
fs
mov
xchg
pop
xor
sti
mov
pop
lahf
ljmp
call
mov
mov
lret
push
jle
popa
push
jge
jne
xlat
jno
aam
movsb
pop
out
sbb
push
loop
cmpsl
jae
sub
or
icebp
dec
adc
sub
adc
orb
xchg
mov
andw
mov
movsl
into
sbb
test
enter
shr
xor
jns
adcb
push
xor
and
sbb
fsts
add
cmp
mov
mov
lds
arpl
flds
popf
mov
stos
iret
xor
xor
int3
pop
stos
xchg
jge
arpl
dec
outsl
xchg
sub
dec
cmp
jmp
dec
pop
adc
pusha
jmp
in
add
leave
cmpsb
lahf
std
add
xor
bound
dec
push
cmp
test
xchg
repz
das
cmpsb
cwtl
popa
push
sbb
gs
or
out
jo
dec
sub
icebp
stos
popf
bound
sbb
ss
mov
xlat
fwait
sbb
je
test
fidivs
lods
lock
add
roll
loopne
xchg
xchg
jbe
in
sbb
test
shll
add
and
cmp
or
mov
push
sbb
je
dec
dec
mov
inc
gs
loope
test
aam
lods
xor
cltd
or
pop
hlt
and
add
xchg
mov
jg
out
push
js
fsubl
fdivl
loopne
fs
in
mov
push
push
adc
push
jmp
adc
xchg
movsl
add
xchg
loope
lret
push
xchg
pop
and
push
and
adc
cmpsb
pop
jmp
shrl
into
rclb
in
xor
xchg
js
lret
addr16
mov
push
imul
or
jns
loope
dec
out
ss
pop
popa
sub
les
add
addr16
pop
mov
lret
cli
lahf
mov
mov
pop
push
cmp
mov
fs
int
pop
aaa
mov
jle
inc
jle
xchg
sti
and
mov
dec
push
mov
add
mov
jnp
push
imul
mov
shll
push
adc
push
jge
xchg
dec
lods
xchg
sub
iret
sbb
add
stc
mov
mov
cmc
sbb
ljmp
or
subl
cmp
xchg
mov
xchg
cmp
je
and
dec
inc
cs
pop
and
push
out
lock
pop
push
jae
lea
pop
mov
pop
pop
ja
js
outsb
shll
jnp
add
adc
addr16
push
pop
sbb
repz
mov
add
stos
cmp
pop
mov
pop
dec
pop
push
movsl
jl
sub
lahf
fsubs
dec
adc
xchg
xor
jmp
inc
out
sub
dec
add
mov
xor
add
or
inc
sbb
insl
xor
sahf
sbb
cmp
out
cld
loop
sub
int
mov
pop
cmp
pop
test
scas
ret
and
or
dec
mov
mov
push
shrb
xchg
xor
and
scas
mov
iret
cmp
inc
outsl
ds
insb
xchg
jns
les
add
mov
dec
cltd
xor
jmp
out
and
pop
push
sbb
sahf
mov
push
or
sbb
mov
dec
jle
push
push
mov
push
cmp
insl
lahf
repnz
test
mov
loope
inc
xor
scas
jns
xchg
lock
jg
jl
inc
cwtl
aad
adc
js
idiv
ret
movsl
les
or
mov
mov
ret
decl
sbb
int3
outsb
add
roll
sbb
dec
push
lret
sbb
cmp
mov
daa
lods
fs
add
fisttpll
fcoml
xchg
xor
sub
stos
inc
adc
jmp
mov
sahf
push
mov
jns
pop
fcomp
enter
dec
add
mov
xor
in
mov
jp
adc
clc
sub
mov
out
std
cmpl
cli
add
xchg
push
push
push
faddl
mov
mov
lret
insl
mov
add
pop
add
loop
jnp
xor
push
movsl
popa
push
jno
hlt
wbinvd
int
push
outsl
sbb
movsb
movsb
mov
push
outsl
mov
pop
nop
inc
cld
or
dec
stos
aad
ja
lock
inc
adc
lock
jo
pop
pop
dec
cmp
insl
and
jbe
adc
mov
mov
adc
mov
mov
push
push
mov
pushf
lret
lcall
stc
setb
aaa
std
je
mov
or
loope
mov
lods
push
shr
xchg
add
arpl
movsl
mov
xchg
push
daa
sbb
xchg
push
ds
pop
pop
jle
sti
mov
cld
sub
in
imull
sbb
xchg
jle
or
inc
loopne
out
mov
stos
lods
cltd
dec
mov
test
cli
adc
popa
add
and
pop
outsl
pop
cltd
insl
add
enter
or
pop
arpl
sbb
frstor
in
jmp
test
push
arpl
push
push
and
xchg
mov
xor
dec
mov
dec
add
leave
cmpsb
xchg
fwait
aad
add
cltd
clc
push
sub
jmp
sub
in
xchg
mov
push
mov
das
jnp
daa
mov
cmp
ss
ds
leave
add
xor
jns
or
or
lahf
and
jb
mov
stos
xor
test
fisubrl
out
pop
adc
enter
fdivrp
cmp
xor
into
mov
cmp
cli
shll
xchg
aas
or
fildl
push
cld
test
xchg
jo
fnstsw
mov
out
aaa
xchg
pusha
push
ss
dec
leave
lret
lea
lea
cld
push
js
sbb
mov
inc
xchg
jg
loope
jle
cli
repz
pushf
mov
sub
mov
js
push
jmp
jle
push
pop
psubusw
push
add
add
cmp
push
int
pop
xchg
lock
nop
lods
and
and
jecxz
test
in
fstpt
mov
push
fldcw
sahf
mov
daa
push
adc
mov
loop
lcall
pop
xchg
in
xchg
out
mov
add
loope
fnstenv
or
lock
sti
add
repz
jg
dec
add
fstpt
push
inc
jl
cmpsl
push
push
inc
mov
stos
out
fsubl
mov
push
inc
jmp
cmp
push
xor
inc
dec
inc
mov
mov
jle
repnz
dec
and
pop
xor
mov
out
dec
scas
adc
addl
test
testb
mov
jb
repz
int3
adc
xchg
adc
stc
hlt
pop
lds
jecxz
pop
jbe
and
ret
in
out
xor
aas
mov
and
push
std
add
leave
bound
daa
test
add
sbb
fcmovne
mov
iret
xchg
mov
push
jmp
fnstcw
xchg
aas
push
xchg
lahf
ret
dec
outsl
cmp
enter
outsl
mov
cmp
inc
stos
shl
iret
lds
xchg
push
pop
sbb
jg,pn
and
mov
mov
inc
stc
adc
jb
and
nop
and
test
dec
mov
jb
fsubl
push
mov
cmp
dec
push
insb
ljmp
js
sbb
ss
mov
punpckhdq
push
lahf
call
push
sub
adcl
cmp
sbb
sarb
mov
xor
or
or
rcrb
mov
jp
xchg
test
dec
xlat
mov
and
and
xchg
xor
or
xchg
sbb
lods
fldenv
mov
pop
inc
cmp
test
jne
mov
push
mov
loop
je
push
in
cmp
xor
jo
ffreep
adc
pop
dec
das
into
lret
je
dec
neg
adc
add
bound
xchg
push
or
cli
xor
jecxz
gs
and
xlat
xchg
sti
or
repnz
sub
add
mov
inc
dec
das
cmp
and
loopne
cmpsb
repnz
lret
push
push
enter
mov
sub
mov
clc
inc
push
fiadds
sarl
cmc
loop
outsb
fidivl
dec
mov
cld
imull
push
cwtl
push
cmc
add
pop
pop
mov
or
out
mov
cld
push
ffree
leave
adc
sbb
repz
js
jmp
inc
dec
jno
and
out
bound
mov
xchg
add
insb
shl
jge
sbb
and
daa
daa
jecxz
iret
mov
add
rcrl
insl
xchg
fisubs
xor
push
xchg
fs
sbb
mov
adc
mov
out
pop
in
xor
mov
in
test
xor
xchg
movsb
cmc
cmc
ret
mov
cmp
dec
jns
push
add
ds
cmpsb
or
add
mov
inc
and
xchg
mov
aas
and
mov
pop
loop
loope
rolb
cld
or
xor
xor
jp
insb
lcall
shr
or
les
mov
loop
jnp
dec
add
sub
bound
dec
aam
insb
push
les
mov
sub
inc
notb
inc
mov
ss
cmpsl
test
jge
leave
orb
dec
mov
ror
xor
lea
fadds
sbb
pop
mov
push
scas
stc
bound
lock
nop
arpl
sbb
shll
test
fmul
leave
aam
dec
inc
dec
aaa
notb
adc
divb
lret
mov
add
ds
ja
test
lcall
pop
dec
shl
movsl
mov
or
push
mov
pop
dec
add
sbb
ret
jmp
jo
incb
inc
pop
xor
inc
push
mov
pop
repnz
inc
pop
rclb
mov
pop
sbb
ds
fdivl
xchg
push
fcomps
jle
pop
mov
hlt
pop
scas
adc
cltd
scas
inc
out
aaa
repz
jp
cltd
roll
outsb
cs
out
loop
aas
aam
lcall
fbld
jge
insl
lcall
inc
or
popf
mov
mov
and
lock
adc
js
test
mov
inc
pop
mov
jne
sub
imul
cmpsl
sbb
popa
nop
adc
inc
loope
stos
imul
sbb
pusha
int
out
imul
mov
jecxz
mov
cmp
gs
js
fwait
enter
cmp
shll
mov
inc
push
adc
push
mov
call
fsts
cltd
in
push
push
pop
scas
push
enter
inc
leave
mov
cmpsl
lahf
lods
aas
call
out
sub
pop
test
adc
stc
lcall
in
xchg
dec
xchg
lcall
dec
or
inc
repnz
dec
sub
movsl
inc
aaa
mov
lret
imul
mov
sbb
int
jno
mov
in
lods
psubusw
sub
mov
dec
clc
fdiv
adc
aas
push
dec
jb
ffree
xor
mov
cmpsb
sub
jo
and
jle
or
jg
test
popf
or
fimull
mov
sbb
jnp
adc
cltd
adc
stos
repz
mov
adc
aaa
jbe
out
xchg
sarl
add
cmp
jns
dec
dec
and
les
sub
cmp
push
icebp
shrb
push
jne
ja
mov
adc
cmc
cltd
fisubs
and
test
psrlq
jle
mov
movl
stos
xor
pop
arpl
shll
outsl
mov
aas
aad
andb
mov
xor
inc
addl
xchg
pop
mov
inc
lock
out
sbb
int
jbe
mov
ret
rcl
fsubrl
push
cltd
jl
xchg
int3
movsb
call
xor
push
dec
filds
mov
idivb
iret
neg
loope
pop
sbb
jmp
shrl
mov
pop
mov
je
scas
scas
in
mov
into
inc
pop
cs
rorb
dec
test
cmp
sbb
sbb
repnz
push
mov
jg
jne
mov
iret
lods
stc
movsb
int3
dec
sbb
push
test
inc
lods
ja
imul
mov
out
ret
and
dec
popa
pop
inc
mov
push
cli
stos
in
pop
adc
stc
sbb
paddsw
hlt
sarl
hlt
adc
sub
call
cmp
fcmovnbe
cmp
pusha
dec
cld
mulps
addr16
dec
sub
addr16
xor
xchg
dec
gs
pop
das
and
jmp
sub
xor
int
mov
adcb
add
jnp
push
stos
xchg
rcrl
ds
ja
ja
dec
pushl
popa
aaa
adc
jns
vfrczpd
rclb
pop
fwait
sbb
test
push
aad
pop
int
nop
out
aam
subl
mull
and
outsl
push
loope
ret
inc
stos
vpcmpgtd
pop
gs
cli
js
popl
push
mov
out
and
pop
int3
jmp
lret
add
and
lret
cmpsb
jl
xor
dec
arpl
arpl
insb
jp
xchg
inc
cs
push
imul
out
mov
mov
mov
dec
mov
test
mov
jge
lea
jge
xchg
rorb
gs
pushf
in
or
mov
add
lds
sbb
rorb
dec
sub
ret
xchg
pop
sbb
jmp
incb
dec
lcall
push
mov
xor
pop
ja
xlat
sbb
dec
clc
imul
pop
and
fstps
inc
pop
imul
rcrl
sbb
sbb
sbb
test
les
inc
xchg
push
push
jp
add
jmp
jge
std
pushf
dec
adc
dec
mov
lret
aaa
les
enter
adc
add
and
xor
lcall
push
mov
nopl
jno
xor
popa
xor
mov
cld
adc
fildl
xchg
je
jp
andb
xchg
push
xchg
int
push
lock
jle
stc
jmp
mov
int3
cmp
in
sub
cmp
lcall
and
ja
mov
stos
sbb
dec
jmp
mov
jp
mov
and
outsb
pop
repnz
cs
mov
imul
fwait
xor
inc
repz
cmp
cmpsl
es
xor
xor
dec
push
out
add
push
aad
mov
jge
jns
icebp
cmp
mov
or
ret
call
adc
add
call
jecxz
cld
mov
jno
pop
xor
and
and
xor
cmp
xchg
xchg
jo
xor
popa
dec
in
clc
test
jo
inc
in
jo
jae
sbb
push
das
adc
addr16
movsb
pop
push
stc
inc
arpl
cmc
adc
xchg
fdivrl
pop
rol
fistpll
add
es
push
fldcw
mov
sub
ret
arpl
mov
in
cmpsl
mov
adc
sbb
stos
into
sub
and
push
cmp
aas
xorl
pop
mov
xor
cltd
inc
pop
mov
subl
ds
jb
and
xor
xor
cltd
stc
add
sub
mov
sbb
mov
pop
xchg
lea
adc
pop
sahf
fbld
inc
outsl
lea
push
sub
sbb
leave
jg
std
and
sbb
mov
ljmp
adc
lret
fadds
mov
jns
adc
cmp
aam
sbb
sub
testl
loope
testb
fisubs
xor
jge
stos
rclb
or
mov
xchg
ljmp
xchg
sub
sub
mov
nop
lods
inc
inc
push
mov
out
call
mov
bound
inc
mov
mov
xchg
shlb
cmp
in
pop
dec
call
movsb
lock
gs
adc
sub
iret
xor
and
jnp
sbbl
repnz
and
addb
add
mov
xor
cwtl
fcoml
nop
adc
movsl
cld
popa
negb
into
ret
add
sub
psubsw
insl
pop
push
jo
testb
sbb
xchg
add
ret
adc
or
clc
movsl
push
cltd
push
mov
cmp
imul
or
mov
jae
and
xchg
outsl
pop
and
inc
call
fdivl
mov
inc
das
cmpsb
sub
dec
out
stos
ret
shrb
cmp
rcrb
lods
cmp
mov
sbb
or
push
movsl
shrb
fstpt
inc
and
cli
bound
in
xchg
pop
pop
lock
lds
cmp
rcll
pop
sub
sti
nop
pop
std
or
xor
test
jno
cli
hlt
into
jo
xchg
movsl
dec
jbe
push
mov
loop
int
aaa
inc
and
loopne
jae
call
pop
or
dec
pop
icebp
lods
mov
js
dec
inc
push
inc
xor
or
outsb
cmp
and
mov
add
aas
ja
insl
cmpsl
outsb
aam
xchg
mull
fs
out
sub
es
fdivl
idivb
insl
push
pop
adc
jbe
or
sub
inc
in
jo
insl
mov
cmp
cwtl
push
mov
lahf
jbe
inc
stos
inc
dec
push
mov
dec
aam
in
cwtl
or
add
pop
xor
sub
jno
jge
add
in
dec
push
add
push
mov
sub
jb
adc
mov
mov
cmp
popf
test
add
jo
ret
xor
cld
enter
adc
cmp
push
adc
sar
jae
loop
adc
sub
std
scas
add
inc
mov
or
mov
and
mov
in
pop
ret
in
incl
pop
mov
icebp
or
mov
mull
cwtl
nop
add
sti
lds
jg
sbb
cmpsb
repnz
mov
xchg
dec
cltd
fisttpl
sub
add
pop
or
adc
das
inc
add
lds
lahf
pop
arpl
cmp
fisttps
mov
jno
push
or
inc
jmp
int
cltd
shll
cmpsb
xchg
in
pushf
pop
and
cld
test
cwtl
mov
jno
pushf
xchg
adc
inc
jmp
arpl
add
lcall
inc
loopne
imul
jp
sbb
lods
xchg
mov
fs
test
xor
rol
pop
ljmp
jae
clc
adc
repnz
dec
out
stos
daa
dec
or
fcomip
bound
data16
repz
dec
clc
push
inc
pop
xchg
fwait
cmc
mov
les
sbb
mov
je
mov
push
inc
cs
nop
adc
clc
inc
leave
inc
jmp
jg
stos
rol
cmp
addr16
ss
mov
jle
enter
pop
inc
daa
daa
sub
fcmovu
jne
test
and
lock
inc
ja
fwait
imul
pop
xor
dec
add
ja
addr16
cli
andl
test
pop
adc
in
lds
movsl
cmp
inc
dec
jmp
std
cmp
cwtl
dec
mov
mov
xchg
sub
ds
cli
sbb
jmp
rclb
out
in
jl
test
mov
mov
add
or
sbb
gs
push
decb
push
test
loop
mov
mov
push
insb
pop
cld
aad
cmp
out
sub
mov
push
xor
cmp
pop
in
pop
das
pop
jnp
xchg
leave
in
add
add
shll
pop
sbb
sub
outsl
pushf
push
scas
mov
and
mov
or
pop
test
cmp
aas
xor
sbb
nop
sbb
xchg
das
dec
lock
aam
or
mov
xchg
sbb
sub
sub
mov
push
repz
and
outsl
daa
in
cmp
pop
sbb
or
mov
sti
pusha
and
inc
repnz
inc
jl,pn
shlb
xor
hlt
or
sbb
mov
cwtl
shrb
into
daa
fildll
mov
rcll
cld
pop
inc
inc
test
adc
cmpsl
sub
push
imul
pop
lcall
sub
inc
pop
inc
mov
add
test
sar
pop
xor
out
push
int
add
enter
cltd
loopne
add
insl
cli
repnz
pop
orb
shlb
push
pusha
fildll
mov
pop
shll
mov
fsubrs
je
popf
fisttps
out
cmpsb
mov
adc
pushf
adc
add
cmpsl
lods
outsb
xor
pop
gs
out
cld
outsl
add
pusha
adc
sub
fisttpll
cmp
lret
out
daa
mov
xor
leave
xor
push
inc
mov
das
arpl
out
imul
sbb
lcall
in
rorl
pop
scas
adc
adc
cmp
push
dec
pop
loope
aas
fistl
inc
mov
jle
das
pop
leave
or
stos
mov
loop
outsb
xor
jnp
dec
or
ficoml
aad
adc
push
jmp
add
shrb
mov
mov
mov
bsf
jb
mov
sub
sbb
pop
or
das
cmp
loop
ror
lods
cmp
mov
sahf
sub
ret
push
mov
rdpmc
dec
mov
cmp
lock
mov
sar
adc
pop
adc
out
sbb
mov
mov
dec
sub
outsl
jmp
xor
dec
stos
cwtl
or
cli
push
cmpsl
addr16
xor
push
in
aaa
arpl
jg
scas
out
dec
push
xor
adc
xor
jnp
and
fxch
inc
stc
mov
in
rorl
cmp
sub
or
push
fldcw
xor
icebp
mov
fnsetpm(287
mov
movsb
rclb
loope
and
inc
lahf
add
add
out
mov
mov
in
sbb
dec
fs
out
or
pop
xor
pushf
inc
dec
ds
and
xchg
out
scas
pusha
stos
sub
and
push
or
mov
and
test
push
pop
cmp
jg
dec
inc
loop,pt
dec
sbb
xchg
insb
outsl
cli
or
inc
aas
mov
pop
repnz
xor
call
cmpsl
dec
hlt
faddl
sahf
jbe
mov
jae
xor
adc
mov
sahf
idiv
sub
test
push
pop
lahf
xchg
scas
lret
mov
xor
xor
cwtl
movsb
dec
fstpl
xor
adc
xor
fistps
pop
roll
fldl
loope
js
and
push
mov
fsubrs
test
pop
popa
pop
inc
inc
mov
sub
insl
or
int
fcomp
or
lahf
int
test
popa
fidivs
jle
stos
adcl
js
popf
pop
dec
std
jo
jnp
inc
push
push
or
stos
fcoms
adc
divl
rorb
int
ljmp
mov
xchg
inc
lods
sar
int3
inc
ss
cmp
mov
pop
xor
lods
mov
inc
jno
mov
pop
lods
mov
insb
gs
cmp
dec
outsl
adc
das
lds
push
adc
loopne
rolb
pusha
mov
mov
addr16
jbe
cmp
jne
dec
sbb
out
aad
rorb
xchg
mov
aas
pop
xchg
mov
jle
sub
mov
ds
ds
ja
shlb
cmpsl
jecxz
lret
das
in
jmp
pop
sbb
jecxz
test
sbb
int3
and
mov
int
inc
jmp
push
pop
outsl
jle
out
test
dec
fldl
mov
popf
xor
sub
jo
and
inc
mov
stc
out
sti
push
push
pop
scas
shll
dec
sub
xchg
dec
test
mov
notl
jp
out
jnp
sub
jmp
and
sub
xor
js,pn
scas
add
add
cmp
aad
cmp
push
dec
ds
out
mov
aas
push
and
mov
leave
vlddqu
xor
sbb
push
fnstcw
xchg
pushf
inc
mov
movsb
mov
mov
jle
mov
cld
mov
fsts
mov
pop
push
shll
push
stc
inc
xor
shlb
adc
adc
stos
mov
add
sbb
rclb
pop
iret
push
fists
sub
das
mov
cmp
push
int3
test
in
dec
pop
mov
repz
jb
jnp
mov
shl
fldcw
jecxz
out
mov
ret
push
ljmp
or
lock
daa
jb
xchg
jg
bound
in
fcmove
add
sub
shr
mov
or
stc
push
sub
adc
and
loope
pop
dec
lcall
jg
cmp
mov
cli
xor
cwtl
ja
cli
loope
ss
push
ffree
pop
test
add
lea
ds
rcl
fnstenv
mov
fwait
loopne
out
repnz
mov
cs
jnp
dec
mov
shll
orb
daa
repnz
adc
adc
out
jb
ds
cmp
jg
popa
jbe
fdivrl
aam
fiaddl
cmpsl
jg
pop
insl
sti
add
pop
fs
dec
lea
insl
adc
arpl
mov
repz
addr16
dec
mov
imul
or
inc
out
jg
jecxz
lock
jb
jae
or
test
or
nop
imul
add
scas
and
addl
dec
shrb
xchg
lods
and
lods
pop
adc
push
aam
int
adc
dec
sub
pop
rcr
jg
mov
xor
xor
jg
xchg
sbb
mov
pop
pop
and
cmc
clc
in
lock
std
and
call
ss
scas
shll
lret
dec
pop
aas
notb
movl
cmp
mov
adc
imul
dec
xchg
aas
mov
push
inc
repz
cmp
fcmovu
add
mov
jge
mov
mov
and
setl
dec
add
inc
pop
movsl
fwait
mov
adc
add
mov
cmp
sub
mov
sbb
push
mov
ret
fistpll
ret
fadds
dec
test
push
jns
xlat
adc
mov
add
lock
push
ret
jmp
test
lea
sti
jmp
jbe
inc
out
push
jo
mov
sarb
pusha
test
fbstp
mov
das
data16
mov
or
add
jmp
out
adc
popf
mov
push
add
dec
mov
adc
push
fdivrs
xor
outsb
mov
cmpsb
mov
lret
mov
xlat
sbb
insl
int3
cmp
enter
cltd
pop
mov
popf
pop
daa
cltd
xor
inc
cmp
cmp
popf
mov
push
adcb
push
or
lea
fs
enter
aam
sub
rorb
push
xorl
cwtl
jae
jl
int
and
movsb
cmpsl
inc
dec
imul
cmp
ljmp
cwtl
test
or
clc
jbe
cwtl
jg
jmp
fwait
nop
mov
outsl
fwait
negl
and
ja
repz
jecxz
test
jecxz
aam
push
sahf
insb
add
and
mov
mov
aas
insl
scas
fs
lret
out
scas
lret
leave
and
pushf
add
jmp
xor
test
aas
or
add
add
sub
sub
pop
out
mov
nop
imul
faddl
sbb
mov
outsl
in
jnp
mov
sub
jne
push
dec
stc
jmp
fisubs
outsl
hlt
add
adc
and
sub
push
in
orl
xor
call
push
add
xchg
ja
jl
jae
xor
dec
aas
fucom
jnp
xor
push
add
adc
mov
dec
aas
aas
sar
aas
xor
and
jb
jmp
movsl
mov
sub
sti
in
in
arpl
inc
push
rclb
loop
add
in
fsts
push
or
nop
inc
xchg
xor
and
cs
hlt
or
shl
ja,pn
lds
add
das
ds
push
mov
lea
pop
test
aas
push
cmp
scas
inc
inc
or
add
jnp
es
cmp
push
jns
test
pushf
dec
cmp
repnz
icebp
insl
push
and
out
vcvtsd2si
jle
cmpsb
pop
add
cmp
add
loop
out
sahf
icebp
push
adc
fisubs
adc
mov
mov
shl
sbb
add
sub
enter
stos
xchg
dec
jp
add
xchg
and
cmp
xchg
cmpsl
jo
popa
jp
inc
gs
aad
adc
mov
xchg
pop
sbb
xchg
fxch
movsl
xor
bound
mov
shr
or
lahf
lods
fistps
push
clc
push
mov
cmpsb
xor
sub
cmp
call
out
push
and
and
jno
and
pop
pop
out
ss
xchg
mov
aam
fisttpll
inc
and
and
mov
push
ljmp
xchg
cmp
jae
sbb
mov
fmull
mov
mov
arpl
push
stc
adc
loope
push
dec
push
mov
and
rclb
mov
lret
stos
and
imul
jp
test
enter
inc
es
in
push
repnz
aaa
js
pop
cmpsl
lods
cmp
movsb
xlat
imul
xchg
cmpsl
addl
outsb
leave
push
mov
inc
fdivs
jno
lock
testb
out
pop
test
inc
dec
dec
test
mov
mov
sahf
nop
jo
push
xorl
outsl
adc
jecxz
sub
popf
imul
pop
push
test
call
lods
aaa
jp
outsl
lret
inc
push
ds
cmp
and
sbb
in
inc
out
arpl
mov
je
ljmp
mov
adc
cli
dec
sub
loope
mov
cmp
ret
pop
mov
addl
mulb
mov
mov
xor
push
mov
lret
inc
jl
scas
add
pop
out
jo
xchg
or
inc
mov
inc
leave
loope
sub
xchg
shl
push
mov
cmpb
sub
xlat
outsl
aas
mov
xor
cmc
mov
mov
dec
sahf
jg
scas
jmp
or
idivb
sahf
or
and
inc
ret
add
out
cs
push
test
test
iret
cmp
mov
inc
mov
out
dec
or
lods
mov
sub
inc
in
scas
mov
or
lods
push
inc
dec
push
jmp
movsl
xor
jecxz
jecxz
mov
loopne
sarl
push
push
int3
jbe
cltd
cmp
lock
pop
dec
cmp
push
pop
xchg
push
sbb
cli
inc
mov
lea
ret
sub
adc
fisubs
cmp
les
xchg
jl
and
adc
test
enter
js
fimull
fs
lret
jp
xor
popf
nop
push
or
fildll
lahf
arpl
mov
jl
pop
or
ret
mov
aaa
cmp
lea
scas
sbb
dec
das
push
je
push
bound
clc
loopne
call
xchg
negl
in
scas
sbb
out
mov
vpcmpeqb
xor
mov
aas
xor
divb
xor
lcall
and
lea
pusha
dec
in
aas
jp
jle
mov
sbb
xchg
sub
xchg
rol
add
out
movnti
adc
adc
cmc
jecxz
repnz
popa
mov
xor
mov
test
shll
mov
cmp
sbb
stos
jnp
lods
xor
int
mov
cs
rorb
cmp
push
shrb
outsl
ds
adc
push
inc
test
lods
cmpsl
inc
das
fisttps
xor
hlt
out
adc
test
out
ja
shlb
mov
mov
movsb
or
mov
add
and
push
inc
decb
push
jg
jecxz
mov
in
fisttpl
pushf
mov
xchg
sbb
mov
add
ror
and
push
test
mov
test
xor
idivl
mov
clc
fdivl
int3
pop
pop
dec
ja
test
les
and
add
mov
cmp
roll
in
xor
lock
pop
cmpl
dec
jge
inc
mov
sub
clc
stc
push
pop
xchg
loope
int
imul
dec
ja
xchg
dec
push
test
sub
lret
jne
xlat
jmp
mov
xor
jns
xlat
sarl
and
or
aas
push
xchg
inc
int
ljmp
xor
filds
aam
popf
inc
loop
pop
dec
out
icebp
pop
inc
adc
and
lods
adc
sub
and
jno
iret
dec
aad
aam
inc
mov
testl
scas
scas
and
adc
sbb
jno
in
inc
push
dec
ljmp
in
lret
insl
stos
es
nop
int
sbb
mov
ret
mul
sub
shr
test
pop
push
mov
xor
cmp
sti
sub
sbb
or
or
iret
scas
jo
sti
or
pop
imul
lods
jbe
in
xchg
dec
jecxz
into
fistpl
and
pop
adc
js
xor
fisubs
lcall
jo
adc
addl
lahf
stc
jl
sbbb
and
data16
test
fsubrs
js
bnd
aam
lea
mov
lcall
dec
cltd
xor
jb
push
cmp
stos
data16
stc
jno
adc
nop
xor
xchg
mov
clc
movb
enter
rorl
loop
hlt
push
add
out
pushf
pop
jne
lahf
outsb
sub
jnp
jno
mov
fldcw
xchg
cmp
xor
cmp
adc
sub
pop
shlb
pop
shlb
mov
and
imul
or
arpl
mov
or
inc
mov
out
repnz
shll
xchg
xchg
fsts
test
pop
push
in
lret
dec
sarb
pop
ja
add
stc
iret
out
sub
inc
sub
pop
addl
dec
fnstsw
insb
push
in
rep
shl
push
mov
inc
lret
mov
add
jmp
iret
or
loope
xchg
int3
fs
into
rol
mov
jp
mov
fstps
and
push
jns
test
cmp
mov
lahf
mov
shll
cmp
jecxz
lret
stos
mov
mov
add
sub
mov
add
mov
push
les
iret
mov
push
xchg
sub
cmpsb
mov
les
cmp
call
in
mov
test
jb
mov
sbb
pusha
jl
mov
iret
and
sti
mov
aad
push
or
inc
mov
sub
xor
xchg
mov
aam
cmc
sub
push
adc
add
sub
push
fstl
cmpsl
js
jne
jb
cmp
inc
mov
insb
cmpb
and
scas
sbb
popa
gs
movsl
xorb
inc
xchg
dec
dec
mov
and
adc
lds
pop
xor
daa
xor
push
fsubr
subb
cmpsl
xor
mov
cmc
dec
jo
imul
test
mov
jecxz
mov
loope
ficoms
and
jl
lret
aas
dec
xor
scas
aaa
scas
xor
test
sahf
mov
sub
cmpsl
test
test
shlb
jo
data16
call
pushf
add
mov
lea
mov
insl
inc
in
cli
adc
push
xor
or
popa
lcall
mov
addr16
dec
xchg
ds
xor
adcb
dec
mov
inc
mov
mov
mov
xor
into
mov
insl
cs
imul
cltd
shl
xor
iret
dec
add
dec
dec
push
adc
sbb
or
pop
jb
or
mov
arpl
dec
addr16
hlt
out
popl
mov
test
pop
loopne
test
repnz
roll
mov
dec
out
pop
sahf
pop
jge
mov
or
int
and
dec
inc
pop
mov
sub
mov
xchg
jne
mov
xchg
or
push
cmp
outsb
mov
inc
or
mov
and
push
inc
ss
xorb
push
jns
pop
push
lds
and
out
xor
sar
xlat
test
push
push
dec
push
xor
ret
xchg
cmc
sbb
sidtl
and
adc
fcoms
or
lds
mov
das
je
popa
loop
je
ror
jecxz
add
push
inc
mov
or
call
dec
les
dec
mov
mov
xlat
cmp
lahf
not
xor
cmp
jle
mov
lea
ljmp
sub
insb
add
xchg
cwtl
rorl
and
imul
xor
lahf
sub
cmpl
push
push
ret
adc
mov
daa
ja
sahf
pop
imul
and
push
scas
scas
or
pop
jmp
or
pop
dec
fs
movsl
or
maskmovq
testl
loop
pop
lods
incb
mov
popa
pop
or
mov
test
dec
push
xchg
xor
stos
sbb
mov
push
stos
cmpsl
les
dec
ja
add
push
xor
repz
dec
test
push
push
mov
xor
xchg
sbb
jmp
stos
dec
out
add
insl
xor
sbb
push
fdivrs
inc
cld
mov
es
arpl
hlt
xor
xchg
lods
lea
aaa
mov
fmull
mov
aaa
shll
in
adc
push
imul
sti
stc
lods
dec
and
mov
push
jecxz
repz
xlat
sbb
mov
pushf
mov
aad
dec
out
add
push
add
test
pop
mov
pop
dec
jl
add
add
rol
arpl
stos
imul
dec
mov
xlat
sbb
es
loopne
das
ljmp
adc
mov
xlat
loope
jecxz
pop
out
sbb
inc
cmp
pop
loope
ds
sub
ret
jbe
push
sub
sbb
ss
fadds
sub
lea
adc
insb
jg
imul
jmp
cmp
pushf
xchg
dec
jb
addr16
lock
mov
pop
mov
shlb
inc
adc
dec
pop
dec
mov
fwait
xor
xchg
add
test
fsubl
movsl
aam
sub
das
xchg
daa
cli
jecxz
cmp
lahf
sbb
adc
push
mov
aaa
lahf
sahf
pushf
fbld
in
fsubs
stos
jge,pt
mov
inc
inc
cmp
sub
and
pop
cmp
xor
les
mov
stc
repnz
push
mov
lock
sub
fcompl
sub
jmp
sub
lock
stos
cwtl
js
sub
rclb
dec
inc
jo
lods
mov
jecxz
dec
repz
inc
jbe
mov
add
xor
in
pop
loope
pop
mov
cltd
dec
call
aaa
jb
and
pushf
xlat
jg
or
fwait
mov
jns
fistpl
push
das
and
dec
adc
sub
push
lcall
ja
xchg
lods
or
mov
out
mov
movsb
xchg
aaa
dec
jmp
out
cmp
and
mov
addl
or
mov
lea
xlat
insb
mov
cltd
cwtl
test
pop
cmp
out
sub
pop
add
mov
mov
push
xchg
cs
mov
shll
mov
popa
mov
add
out
add
dec
mov
int
sbb
push
ffreep
push
test
inc
push
lret
mov
adc
lret
sub
jp
inc
jne
jnp
cmpsb
jae
cli
sub
je
repnz
jno
push
push
out
lret
sub
in
and
es
mov
lds
xor
dec
cmpsb
ljmp
push
xchg
push
mov
repz
sub
ss
and
cmp
lret
out
xor
add
std
test
or
imull
xchg
push
pushf
hlt
fists
gs
cld
adc
mov
cmpsb
cmp
push
int3
scas
dec
jle
xor
les
adc
or
dec
xchg
mov
data16
mov
jbe
xchg
popa
jae
in
clc
jge
jns
test
js
std
cmpb
sub
jp
dec
loope
cli
rorb
inc
pushf
push
push
push
add
cltd
aaa
cmc
and
and
notl
add
lods
in
xchg
add
push
sarb
sub
push
scas
int3
add
test
loopne
icebp
dec
cmp
gs
out
loop
cmpsl
jbe
dec
mov
jnp
fstps
les
lahf
adc
mov
test
bound
das
hlt
stc
outsb
sahf
mov
sahf
je
cmp
push
sub
repz
ret
subb
mov
cld
inc
dec
inc
cmc
mov
or
mov
xor
mov
push
aad
xchg
gs
mov
dec
fnsave
leave
negb
push
sub
stos
das
mov
mov
sbb
jne
dec
outsl
in
dec
inc
jmp
add
jg
jle
mov
outsl
pop
fdivl
xlat
icebp
add
les
ja
jle
fdivl
add
popf
popa
add
stc
xchg
out
push
ret
push
pop
cmp
icebp
ret
fcmovnu
cmp
add
inc
inc
adc
add
mov
dec
test
push
test
ja
popf
inc
daa
inc
xlat
repnz
jge
dec
cmpsl
in
je
pop
sbb
xchg
sti
dec
pusha
cs
mov
in
jg
inc
dec
sbb
jo
xor
fldcw
test
cmp
cmp
add
aam
adc
or
mov
lods
sti
lods
push
jae
mov
rcrl
inc
cltd
jmp
out
test
pusha
fwait
xchg
cmp
fiadds
rorb
bound
mov
inc
cmc
push
or
ljmp
and
mov
push
int3
cmp
add
mov
pop
orl
adc
popf
cmp
test
xor
mov
std
xchg
jecxz
mov
clc
jg
test
loop
pop
arpl
push
or
pop
leave
cmp
lea
xchg
and
mov
je
int3
enter
sbb
jmp
mov
sub
cmpsb
inc
mov
xchg
movsl
shl
popa
xor
mov
or
sahf
mov
outsb
dec
sbb
sub
insb
lfs
push
arpl
adc
pop
jle
and
or
add
inc
jmp
push
into
or
movsb
pushfw
jg
hlt
xchg
inc
dec
push
mov
pushf
shlb
iret
test
aad
xchg
daa
push
pop
dec
into
xor
aaa
cmc
xchg
sahf
ja
xor
sbb
sub
push
fwait
leave
insb
std
adc
cli
jecxz
jmp
call
mov
pop
inc
mov
mov
jle
pop
jae
int3
repnz
add
test
and
xlat
sub
and
mov
push
and
popf
ljmp
or
ret
xor
inc
lret
daa
adc
fisttpll
push
lahf
popa
stos
mov
sbb
imul
sbb
lds
jno
dec
jmp
idivl
ret
xchg
pop
iret
jnp
inc
sbb
stos
sub
loop
and
testb
in
in
inc
sti
sbb
pop
fucomip
sti
xlat
xor
fwait
cmc
sbb
scas
dec
adc
or
cli
fsubl
xchg
ds
jg
pop
push
pop
jl
dec
scas
repz
sub
ret
aaa
push
ja
pop
out
clc
and
cmp
jnp
cmp
mov
cli
into
sub
cmp
xchg
mov
add
mov
xchg
stos
hlt
mov
shlb
mov
mov
outsl
pop
mov
pushf
stos
stos
idivl
jnp
and
xor
xor
sub
lahf
mov
sbbl
adc
xor
int
repz
jno
and
test
fsub
dec
lods
xchg
dec
popf
fnstsw
cmp
or
aad
adc
add
and
mov
jle
pop
xchg
test
outsb
mov
sti
sbb
arpl
and
lea
mov
imul
fwait
pop
and
adc
push
xchg
shlb
cmp
fstpt
pop
xor
aas
lock
push
pop
add
or
testl
hlt
sub
mov
mov
mov
addr16
test
cmc
movsb
lds
jb
cli
push
test
push
subl
dec
cmp
out
push
scas
or
add
int
test
xor
fs
or
mov
out
push
jne
adc
fdivrl
mov
sbb
pusha
sub
sub
dec
mov
jae,pn
pop
mov
lret
dec
addl
or
xor
inc
add
pop
xor
cmp
lds
fcmovb
push
psrad
push
int
sbb
inc
mov
into
mov
pop
stos
inc
gs
xor
xor
cmp
mov
xchg
pop
dec
lea
mov
scas
andl
push
xchg
iret
andl
jno
push
add
into
add
lods
cs
dec
dec
pop
jb
gs
xchg
mov
subl
or
ja
push
lcall
add
aad
mov
repz
and
mov
lahf
xor
jae
insl
cmp
mov
sub
popf
rcll
mov
add
pop
xchg
enter
or
xlat
xsha1
cmpsb
dec
hlt
gs
sbb
jle
repz
mov
movsl
push
lcall
out
cmc
push
data16
ret
call
pop
leave
js
mov
mov
pusha
les
test
lea
loopne
aaa
adc
sti
sbb
das
mov
dec
insl
inc
stc
mov
in
sub
sahf
and
inc
jno
xchg
hlt
mov
scas
je
sub
sbb
loop
arpl
test
push
insb
lea
inc
mov
mov
movsb
pushf
mov
cmpsb
mov
fidivrs
push
push
out
xor
push
cmp
sub
pop
cmpb
test
out
loop
add
sub
sbb
fistpl
push
or
jno
pop
push
xor
daa
je
loopne
js
push
push
int3
fsts
cmp
add
mov
inc
stos
sub
pop
fdivp
addb
inc
aas
in
das
or
pop
add
mov
xchg
cmp
cli
stos
xor
jae
or
addr16
pusha
pop
or
mov
xor
rcll
jle
std
mov
test
cmp
int3
in
pop
mov
sub
data16
add
lret
loop
pop
mov
xor
cli
mov
jno
ljmp
pop
sbb
leave
and
sub
adc
xchg
cmpsl
faddp
in
in
lret
fcmovnbe
dec
ss
lock
fwait
dec
call
call
jae
sub
dec
in
sub
inc
dec
xchg
xor
sub
mov
mov
cmpsb
xchg
cli
into
daa
mov
je
pusha
xchg
mov
imull
dec
idivl
cmp
mov
xor
cs
xchg
aas
mov
in
xor
jl
add
push
lock
lock
xor
iret
push
loop
jle
inc
inc
icebp
push
repz
dec
cmp
fs
xor
repz
sbb
jl
jb
js
push
sub
inc
jbe
cli
add
and
leave
dec
scas
rol
lcall
jb
pop
add
xchg
cltd
fbstp
and
xchg
rcrl
jle
cmp
or
adc
sub
mov
inc
popf
into
pop
test
out
add
mov
aas
int
jae
fimull
sub
xor
lods
xorb
sbb
xchg
icebp
ds
mov
sbb
cmp
lds
icebp
mov
xchg
push
xchg
movsb
jb
sarb
pop
pusha
mov
sbb
shll
dec
pop
mov
daa
mov
clc
sub
mov
mov
out
add
inc
pop
pop
adc
add
dec
add
cld
inc
loopne
aaa
sbb
xchg
in
shlb
xor
fwait
or
aas
adc
add
sub
push
mov
cltd
iret
mov
or
mov
lods
mov
mov
xchg
cwtl
movsb
add
rclb
loope
loopne
out
cmpsl
add
jnp
xchg
fs
data16
in
jmp
cld
sbb
push
push
push
gs
fbstp
test
cli
xor
sub
cmpsl
cmp
cmpsb
push
mov
xor
pop
xchg
out
ja
inc
ret
mov
xor
mov
cmp
push
shrl
push
jo
dec
into
lods
insb
adc
jp
js
mov
push
lahf
pop
push
xor
jmp
mov
aaa
ss
pop
push
orb
mulb
sbb
dec
stos
mov
or
outsl
test
inc
xchg
insb
ja
mov
imul
lret
sbb
xor
xor
outsb
gs
jno,pt
mov
insl
hlt
adc
daa
and
sbb
fidivrs
jne
rcr
cs
xlat
mov
and
xchg
es
mov
xchg
enter
adc
stos
fdivs
test
and
out
fnstenv
cmpsl
and
and
mov
mov
in
enter
daa
xor
stos
ret
push
fdivp
jne
dec
cltd
fwait
or
sbb
mov
imul
mov
mov
mov
cmp
sbb
cmp
jb
repz
or
test
cld
xchg
fisubs
in
xchg
fsubr
xor
or
cmp
test
es
nop
shll
mov
sbb
enter
enter
push
adc
mov
adc
mov
test
nop
pop
cmc
jbe
cmp
push
shrb
or
shl
sub
adc
fdivp
xchg
repz
xor
pop
jecxz
cmc
shlb
cld
fstps
push
mov
js
adc
sub
in
stc
mov
dec
inc
aad
xor
dec
ficoml
or
ja
dec
fscale
mov
xlat
xor
aam
cmp
pop
cmp
cmpl
lcall
sub
mov
cld
in
or
das
scas
xchg
push
and
mov
lret
je
scas
pop
ret
cltd
sbb
cli
aas
cltd
push
sahf
push
push
dec
mov
notl
adcl
sub
pop
xchg
stos
mov
fisttps
mov
xchg
mov
mov
add
mov
cmp
daa
mov
and
mov
inc
adc
dec
lahf
paddsb
rcr
sbb
incb
mov
fstps
pop
push
mov
scas
out
ss
xor
out
cmp
xchg
lcall
in
adc
pop
dec
mov
or
popa
mov
inc
scas
sub
incl
mov
or
mov
fwait
mov
pop
mov
mov
dec
or
test
test
push
testb
sub
lds
add
mov
sub
and
pop
and
xchg
shrl
cmp
subb
test
or
sahf
leave
hlt
nop
xor
mov
jnp
movsl
sbb
shrb
loope
outsb
mov
rol
stos
mov
mov
pop
fsubrs
aas
sub
adc
shll
icebp
mov
shlb
dec
nop
cmp
dec
cmp
in
mov
stos
or
test
std
jle
pop
inc
sub
xor
gs
add
int
push
popf
mov
push
cmp
sub
aas
mov
xchg
in
into
sarb
mov
and
out
sbb
add
pop
sub
loopne
mov
jbe
push
jo
shrb
adc
mov
mov
test
mov
ret
mov
or
cs
pusha
loopne
out
mov
xlat
shlb
es
popf
xor
sbb
test
out
mov
cld
loop
add
outsl
dec
mov
push
xchg
bound
sarl
fildll
int
insb
notl
or
mov
and
fcompl
dec
jne
cmp
sub
sbb
les
stos
add
cmpsl
push
pop
mov
cmp
clc
lahf
mov
xchg
adc
popf
ss
movsl
les
cmp
inc
shll
pop
add
fstpl
pop
pop
mov
xchg
jo
lods
mov
frstor
stos
xchg
clc
jmp
xchg
or
jae
jbe
sub
nop
dec
ret
test
loop
lock
pusha
mov
repz
outsb
sub
xor
sbb
xchg
jg
sbb
loop
mov
push
shl
mov
pop
lods
add
mov
ss
add
push
lahf
shrb
stos
loope
es
xor
push
or
sar
cmc
test
jne
loopne
test
ja
scas
mov
addr16
ret
mov
std
sbb
lahf
setne
movsl
xchg
inc
or
mov
fwait
test
int
std
mov
jle
mov
loope,pt
mov
negb
dec
xor
xlat
pop
cwtl
orb
or
fldenv
xlat
pop
fiadds
enter
leave
pop
movsl
xchg
aam
ret
inc
ret
ss
addr16
pop
dec
movsb
xor
xor
mov
or
add
pop
sub
mov
cmpsb
aaa
push
jno
popa
jmp
lret
pusha
out
xor
pusha
jb
iret
mov
xchg
mov
mov
lahf
stos
jae
in
lahf
insb
pop
mov
xor
cmovo
xor
mov
ss
mov
pop
aaa
lcall
add
cmp
rorb
mov
sub
add
pusha
addr16
cmp
or
scas
inc
jbe
sbb
jae
add
addl
sub
movsb
mov
sub
mov
mov
jne
lea
jecxz
popf
mov
sahf
jns
mov
aaa
lcall
inc
test
or
leave
sarb
std
mov
je
test
mov
daa
jo
push
push
insl
sahf
cs
ja
pop
and
xchg
addr16
push
stos
adc
stc
and
push
ret
ljmp
mov
fstpl
xlat
dec
sbb
aad
push
pop
ret
mov
aas
inc
jge
mov
pop
push
cwtl
in
cld
add
add
ret
jl
cs
push
jns
cmp
nop
lods
adc
mov
dec
pop
mov
gs
or
mov
lods
es
cmp
sub
lds
into
inc
outsb
testl
add
and
xchg
xor
jo
sub
xchg
lret
lret
jp
or
scas
popa
in
pop
or
adc
push
mov
lods
push
sbb
pushf
pop
xchg
data16
pop
lahf
inc
push
insb
aaa
pop
adc
jnp
lcall
gs
and
outsb
cld
mov
cmp
sahf
int
sti
rcr
push
les
mov
loopne
lods
jg
inc
jne
ds
aas
xor
xchg
adcl
pop
jmp
lock
add
aaa
jbe
add
add
adc
and
arpl
ja
fndisi(8087
inc
jno
dec
or
sbb
or
aam
scas
or
mov
aaa
je
push
pop
push
cmp
push
pop
shrl
mov
inc
repz
outsb
mov
mov
rcrb
xor
mov
mov
and
push
sub
negb
jecxz
jbe
inc
mov
cwtl
hlt
shrl
sbb
pop
cwtl
out
inc
outsl
push
mov
ja
js
adc
mov
xchg
loope
jg
adc
jecxz
adc
cmpsb
lock
xchg
es
imul
test
cmpb
push
xchg
cmpsb
pop
flds
adcl
cwtl
fidivl
nop
jmp
push
ficoml
cmp
push
decb
std
std
jne
mov
pop
jb
cmp
xchg
push
adc
jae
cld
insb
sbb
push
xchg
mov
cmp
popf
cmc
adc
mov
mov
fsts
outsl
cmc
pop
rcll
push
cltd
mov
push
xor
movsl
mov
imul
add
add
adc
cld
mov
mov
enter
fstl
jno
lds
fstpt
or
push
scas
mov
jmp
fists
or
enter
cmp
xorb
sub
mov
in
cmpl
in
mov
jb
xchg
jle
leave
rolb
xchg
dec
jne
mov
mov
pop
call
sbb
jg
mov
dec
cwtl
dec
das
xor
cmpsl
jae
push
inc
or
lods
add
and
mov
pop
cmp
leave
mov
fdivs
mov
cmc
lcall
pop
lret
add
jnp
shl
jnp
dec
ret
insb
ret
push
push
xor
cmp
in
dec
pop
ss
xchg
or
test
pop
push
mov
push
cwtl
cwtl
or
mov
jmp
or
add
or
insl
lods
cmp
iret
push
lods
inc
inc
pop
aad
xchg
cld
pop
sub
insb
inc
lock
fsubl
inc
jb
hlt
jmp
ror
push
or
bound
addr16
nop
push
cld
jne
pusha
fcompl
lods
arpl
pop
clc
nop
pusha
sbbl
xor
xor
cmc
cltd
and
hlt
testb
push
mov
lret
xchg
insl
inc
ret
popa
push
pop
jmp
add
aaa
fwait
mov
sub
pop
in
cmpsl
pop
and
cmp
fcoms
lea
scas
dec
or
cmpsb
into
sub
jp
mov
sub
dec
fcmovb
pop
xchg
loopne
adc
sbb
xchg
movsb
mov
jb
jp
and
ss
pop
mov
testl
lods
mov
shl
or
xchg
pop
xchg
jp
stos
arpl
sub
es
ds
cs
xchg
push
inc
in
rclb
loop
xor
sub
out
cmpsl
jg
cwtl
rorl
jnp
frstor
jne
cld
mov
mov
scas
lods
fs
je
sub
test
adc
mov
mov
or
xor
stos
cmpsl
cmp
aas
popf
dec
jbe
addr16
push
pop
dec
pop
xor
mov
push
pop
adc
sbb
cmp
dec
shrb
push
ss
pop
pop
adc
scas
int
jo
iret
sbb
popl
push
int
repz
int
nop
out
call
pop
out
push
sbb
xor
cmc
aad
or
cmp
add
add
in
cmp
mov
push
mov
and
xchg
cli
cmpsb
add
test
adc
mov
dec
sbb
repnz
dec
sbb
sub
lret
push
jbe
pop
scas
cmp
xor
add
test
xor
rorb
mov
adc
pushf
scas
xor
popa
mov
pop
insl
loope
dec
jl
and
addr16
pop
flds
adc
push
cmc
mov
int
mov
in
lea
mov
sti
inc
add
and
push
or
addl
mov
pop
sub
out
or
stc
arpl
fidivl
push
xor
cwtl
movsl
push
aas
in
lcall
negb
xor
push
cmpsb
in
pop
cmpsl
roll
xor
add
adc
popa
inc
sarl
jno
and
xor
pop
xchg
push
mov
sub
cmpsl
push
dec
mov
test
mov
lret
orb
rcrb
inc
sub
dec
in
pop
data16
mov
pusha
jne
cmpsb
mov
jmp
sbb
cli
test
fsub
lock
and
aam
std
mov
rorl
outsl
in
lcall
xor
mov
stos
sub
add
cmp
dec
push
xor
sahf
sub
cli
cli
lods
ds
mov
repnz
push
cmpsb
outsl
call
test
or
inc
addr16
filds
mov
out
dec
pushf
mov
adc
push
andb
repnz
inc
out
cmp
or
repnz
xchg
xor
loop
fptan
in
jmp
mov
fwait
mov
fmulp
repz
xchg
lahf
mov
inc
mov
shlb
cmpsb
sbb
xlat
mov
aad
sbb
repnz
pushf
out
inc
sbb
in
int3
jg
mov
lea
arpl
inc
call
and
stos
mov
aaa
and
outsb
cmp
out
mov
pop
dec
call
xchg
ljmp
mov
lds
sbb
or
fwait
inc
jo
dec
jmp
push
insb
push
xor
icebp
mov
push
dec
rcll
pop
mov
ss
jb
lcall
cwtl
sbb
jns
icebp
stos
inc
push
mov
push
adc
jne
pop
and
test
xchg
aam
inc
jle
lret
push
or
lds
mov
imul
mov
loopne
repz
dec
sub
jb
test
mov
inc
inc
je
xchg
and
sub
pop
jecxz
les
xchg
lahf
lahf
lcall
pop
ret
xchg
je
add
out
lret
int
ss
or
jecxz
or
mov
mov
sbb
dec
sbb
sahf
and
push
adc
add
xor
in
cwtl
jge
mov
or
mov
adc
or
in
mov
dec
push
mov
inc
xorl
out
aas
pop
push
cli
popf
inc
dec
push
sbb
in
cld
jno
dec
push
test
pop
fcmovnbe
push
lods
dec
pop
imulb
and
xor
in
dec
and
push
int3
fldcw
or
and
enter
dec
lcall
mov
shrb
dec
push
fidivrs
xor
ror
scas
dec
stc
pop
std
enter
cmp
push
mov
popf
aad
mov
cmp
jo
jmp
mov
mov
mov
int3
inc
xchg
sbb
jae
adc
lret
jns
test
mov
mov
cmpsl
out
inc
movsb
jo
ljmp
outsl
push
icebp
or
imul
xor
pop
mov
sub
and
repz
pop
pop
xchg
rcll
lea
das
mov
icebp
or
lock
mov
xchg
dec
mov
cs
mov
int
dec
jmp
sub
pop
jle
or
cltd
sbb
mov
push
pop
mov
xor
addr16
xor
fldt
divl
fwait
mov
imul
loope
adc
or
mov
std
adc
pop
sub
test
xchg
xchg
cmp
mov
in
aas
push
movsl
hlt
repz
in
jo
xchg
es
cwtl
imul
out
jae
into
sub
aam
lods
jbe
add
pop
inc
push
or
push
lods
daa
lret
loop
xor
dec
jp
mov
insb
cmpsb
fildll
aad
xchg
mov
aaa
adc
ja
sub
push
clc
jno
lds
loope
jmp
ljmp
out
inc
aas
or
sarl
mov
hlt
push
popa
std
mov
das
mov
aaa
popa
xor
pushf
loop
mov
jmp
les
inc
in
mov
mov
or
pop
fwait
xchg
mov
mov
pop
dec
mov
add
in
adc
loope
imul
sbb
jbe
test
cmp
scas
stc
mov
sub
pop
push
shlb
lds
mov
or
inc
lods
jmp
jb
negb
test
cmp
push
or
rclb
repnz
push
inc
push
xor
inc
xor
mov
sbb
pop
and
pop
iret
addr16
pop
or
faddl
not
pop
and
rcrb
and
gs
xor
gs
out
push
andb
scas
sub
add
push
test
cltd
or
les
out
mov
mov
cld
nop
lcall
push
and
lods
adc
inc
adcb
jns
cmp
aaa
or
inc
ja
les
fs
test
cmp
or
cmp
mov
dec
out
leave
hlt
stc
pop
fcmovu
ret
cmp
xchg
xchg
outsl
adc
repnz
adc
in
outsb
mov
popa
cli
and
mov
jecxz
addr16
and
or
out
sbb
push
xlat
jnp
pop
test
jge
xor
fwait
or
fst
xor
inc
lods
dec
data16
je
ljmp
xlat
enter
insb
xor
mov
sbb
inc
cltd
fsubs
inc
push
cmp
push
js
adc
rclb
mov
repz
pop
subl
and
sbb
lods
xchg
lods
inc
add
rcr
dec
stos
sahf
add
lods
mov
loop
insl
pushf
pusha
lcall
inc
or
jl
es
outsb
add
ds
imul
pusha
das
lods
cmpb
and
sbb
xchg
in
out
sub
out
pop
push
inc
xchg
repnz
aam
inc
out
jb
inc
jp
mov
push
or
mov
std
jb
pop
and
pusha
popa
jne
fstp
cmpsb
sbb
js
out
fimuls
aam
int3
lds
or
xor
imul
pop
test
and
aas
cli
inc
xchg
jg
icebp
pop
imul
pop
add
jg
or
fwait
adc
sub
aad
je
push
push
icebp
dec
and
sub
aad
unpcklps
mov
out
fmull
loope
mov
imul
test
les
fstpt
jmp
pop
mov
shl
pop
mov
leave
clc
rol
cmp
rorb
mov
jg
mov
push
pop
outsl
cwtl
sbb
cmpsb
ja
fs
sub
add
sbb
xchg
shr
stos
pop
test
ljmp
enter
and
stos
dec
jb
mov
pop
xor
push
ja
fcmovb
cmp
inc
jg
pop
imul
inc
cmp
imul
into
and
repnz
sahf
lret
lcall
push
insl
shll
mov
outsb
xchg
dec
outsb
mov
mov
pop
pop
sbb
dec
mov
and
lock
pop
pop
mov
repnz
mov
push
jmp
jmp
add
sahf
repnz
in
mull
adc
cmpsb
and
mov
push
iret
xor
std
icebp
add
fnstsw
mov
sbbl
xchg
in
xchg
testl
les
imul
xchg
movsl
mov
jo
mov
lea
inc
popa
or
mov
mov
sahf
inc
icebp
fists
cs
jg
fdivr
hlt
pop
or
das
loop
mov
inc
dec
das
add
jl
xor
pop
dec
movsl
sti
fbld
imul
insl
mov
cli
roll
pushf
data16
hlt
imul
and
pop
test
xchg
movsb
xor
leave
out
out
negl
test
pop
inc
jl
xchg
cmp
xchg
mov
pop
filds
ljmp
adc
in
mov
add
xor
js
inc
sub
or
inc
aas
sbb
enter
dec
cmp
cmp
push
testb
pop
push
lcall
mov
cmpsb
xor
jb
sub
pushf
inc
test
jns
filds
push
clc
lods
js
aaa
or
lcall
aaa
call
mov
jle
pop
decl
push
and
jns
sbb
adc
adc
inc
or
imul
pop
les
lea
push
pop
cmp
inc
repnz
outsl
repnz
sub
cmpsb
mov
aam
mov
jge
pop
shrb
push
mov
fdivrl
mov
lcall
sbb
sti
inc
fidivs
scas
xor
xor
or
pushf
and
and
push
xor
dec
lahf
roll
hlt
xchg
mov
int3
cmpsl
mov
sub
lock
subl
imul
jbe
sbb
xchg
dec
jo
xor
pop
addr16
cmp
imul
lret
xchg
push
data16
in
scas
test
sbb
mov
jo
inc
jle
cli
mov
and
cmc
mov
rcrb
test
nop
sub
sub
push
fistpll
jl
std
cmp
mov
hlt
dec
mov
sub
rolb
hlt
pop
sbb
mov
pop
push
call
xchg
dec
jl
xor
ret
in
popf
mov
push
and
cmp
enter
inc
jns
loope
xchg
push
in
xorl
in
jle
loope
pusha
or
mov
test
jg
dec
test
inc
addr16
mov
rcrl
popa
mov
int
jb
xchg
lea
daa
adc
xchg
imul
mov
mov
add
add
fisttpl
cld
ficompl
jnp
dec
ljmp
fisttpl
mov
pop
dec
and
stos
out
xchg
push
test
dec
mov
push
xor
mov
jl
call
cli
shrb
cmc
sub
arpl
mov
xor
xchg
subb
inc
and
jae
sti
das
jae
adc
aaa
test
adc
dec
jge
sub
cmp
cmp
xchg
pop
mov
icebp
repz
mov
clc
dec
add
sub
push
ret
ds
xor
cmp
add
cwtl
dec
fiadds
add
arpl
int3
push
mov
pop
inc
enter
inc
sbb
popa
popa
xor
nop
jnp
iret
mov
jb
push
add
pop
add
xchg
imul
push
lahf
daa
xlat
pop
mov
xchg
mov
popa
dec
add
push
or
insb
aas
dec
stc
mov
jge
pop
push
xchg
push
jno
push
loop
jge
rorb
lret
mov
bound
out
imul
pop
cltd
mov
add
xchg
lahf
sti
loop
fistl
cmp
aad
pop
pop
inc
mov
and
inc
mov
addr16
fcomip
push
or
jge
out
cmp
pop
dec
pop
rcrl
inc
sub
cwtl
lods
divl
movsl
xchg
shrb
mov
xchg
outsl
jb
scas
jl
or
pop
pop
call
xchg
call
adc
rolb
clc
or
mov
in
mov
mov
cltd
xor
movsl
ret
rol
inc
mov
sbb
lret
cwtl
or
push
sub
push
addr16
sub
mulb
mov
adc
lock
outsb
cmp
push
stc
jae
add
bound
cmpsb
xlat
push
or
jle
mov
push
push
inc
repz
pop
adc
mov
xor
adc
and
sahf
adc
es
sub
xor
xchg
ret
jb
aad
lods
test
aas
adc
xchg
or
out
inc
inc
fwait
sub
sar
xor
xchg
hlt
clc
and
fldt
mov
inc
push
mov
sub
pop
cwtl
je
aas
cmovge
scas
je
enter
into
mov
loopne
fmul
lods
adc
push
mov
pushf
pusha
xor
add
incb
cmp
imul
rclb
jl
xchg
push
push
fisttpl
gs
int3
in
aas
test
pop
jecxz
pop
jb
cmp
int3
out
sbb
dec
xchg
cmp
adc
or
in
out
fidivs
rcr
test
clts
or
jnp
sbb
mov
jp
or
sbb
notl
lds
add
inc
fs
xchg
mov
or
jmp
daa
test
xor
mov
jno
mov
inc
lods
inc
fwait
imul
and
imul
out
popa
call
mov
std
mov
mov
or
sub
add
nop
pop
mov
push
and
xchg
pop
loope
jge
push
arpl
test
adc
loop
aad
leave
ret
sbb
mov
out
add
push
mov
jg
in
cmp
aad
fisubs
data16
ret
xchg
rclb
lock
add
sti
lock
scas
sbb
fwait
pop
je
jae
jmp
lea
mov
lea
ret
xchg
push
xchg
bound
dec
loop
ret
jl
inc
jp
ss
call
pop
cltd
loopne
es
in
imull
sub
lahf
mov
mov
pushw
add
mov
fwait
aas
adc
add
xor
cmp
lret
out
and
add
jp
pop
sub
inc
pop
jnp
sub
loope
fdivs
xor
inc
pop
inc
xor
dec
test
mov
daa
popf
fistpll
fldcw
sub
mov
or
scas
imul
xor
shlb
push
push
cmpsb
fbld
or
lret
xor
outsl
icebp
std
fdivrs
pop
in
or
and
jbe
inc
xchg
test
sahf
mov
cltd
or
setle
out
sbb
fbld
or
cmp
bound
adc
inc
push
mov
cld
popa
es
movb
pop
jo
test
dec
mov
sarl
push
jp
jle
push
xchg
sbb
jno
shrl
sub
shlb
clc
push
call
xchg
inc
clc
repnz
out
sbb
scas
push
into
test
sbb
cld
incb
inc
jg
mov
stos
pop
add
sbb
repnz
pop
sub
pop
lock
jo
push
aaa
sub
rcll
mov
inc
pop
fsts
loop
lea
dec
sub
out
sbb
test
je
test
into
lea
out
pop
or
es
repnz
js
jno
sub
enter
jg
mov
ja
mov
scas
stos
dec
test
int3
mov
pop
jbe
xor
js
xchg
jg
rorb
jmp
mov
sub
push
or
andl
mov
in
ficoms
push
into
mov
cli
jne
fisttpl
sbb
xchg
sub
adc
test
jmp
mov
aaa
and
lods
bound
subb
mov
mov
jne
dec
in
insb
data16
pop
dec
rcl
inc
mov
dec
lret
and
cmp
loop
scas
loop
dec
pop
cli
mov
out
adc
fnstcw
or
aas
rorb
in
or
nop
dec
jne
xchg
icebp
push
mov
popa
roll
ja
jnp
add
sahf
or
push
loop
lea
pop
mov
clc
test
in
popf
jl
push
push
push
mov
pop
sbbb
lds
dec
xchg
adc
dec
test
stc
inc
call
in
jnp
mov
push
xchg
push
dec
lock
dec
inc
push
enter
adc
arpl
imul
stc
adc
negb
into
or
mov
lcall
mov
jno
imul
jg
test
movb
adc
push
jb
sub
push
xchg
jbe
fmuls
ss
jge
and
cltd
les
dec
add
mov
jl
out
adc
loop
and
in
in
or
enter
insb
repnz
imul
int3
add
leave
mov
leave
repz
into
mov
pop
inc
mov
mov
cmp
jno
xor
inc
pushf
pushf
jecxz
clc
repz
jle
add
or
out
mov
mov
int
and
scas
int
dec
xchg
divl
dec
mov
out
js
or
and
xor
outsl
sbb
add
xor
xbegin
sub
mov
or
push
test
test
jb
incl
movsb
xchg
add
xchg
jg
or
xor
cli
inc
addb
add
sbbb
xchg
and
sub
dec
sbb
xor
iret
into
daa
popf
notl
inc
je
pop
and
mov
lcall
xchg
push
adc
dec
xor
out
push
push
fdivrl
addb
outsb
test
adc
ds
movsl
and
out
add
stos
xchg
adcb
dec
fistpll
mov
xor
shrb
sbb
sbb
pusha
aaa
sub
je
push
pop
pop
xchg
inc
inc
mov
xchg
and
idivl
call
lock
mov
loopne
adc
xchg
mov
jmp
and
push
nop
or
pop
dec
fs
leave
or
rcrb
imul
sbb
cmc
in
into
xlat
and
ljmp
xchg
mov
notb
xor
pop
ja
stos
push
adc
push
push
mov
cs
mov
sti
push
push
orb
test
rep
sub
pushf
mov
fisttpl
inc
div
push
mov
inc
ret
xchg
and
loop
test
popl
repz
ds
pop
movsb
aaa
rorb
or
arpl
jnp
inc
add
test
sahf
xchg
fwait
notb
inc
fmul
mov
repz
mov
dec
pusha
lods
xchg
movb
or
fwait
insl
daa
add
popf
push
xor
mov
jne
add
dec
outsb
cmpl
xchg
pusha
jmp
mov
push
ret
jecxz
mov
loopne
mov
fimuls
in
xchg
sbb
dec
ljmp
mov
iret
mov
mov
dec
or
inc
fwait
mov
jle
and
and
test
adc
mov
mov
push
mov
je
fsubrs
lret
pusha
andb
ret
popa
fmuls
mov
add
inc
xchg
push
add
adc
mov
mov
cwtl
cmc
lods
adc
lahf
cmp
ja
pop
dec
and
popa
mov
dec
jge
loop
repz
xor
scas
push
loopne
xchg
int3
lds
into
inc
fsubrs
push
ret
adc
mov
int
dec
mov
mov
pop
lds
test
daa
jae
jg
or
lea
mov
fiaddl
fiaddl
dec
js
movsb
aaa
xor
lcall
cwtl
cmp
mov
xchg
mov
fadd
adc
xorb
jns
fistps
test
jne
scas
or
sbb
pop
push
adc
aaa
imul
jmp
jb
outsb
adc
lret
test
xchg
xor
fnstsw
dec
dec
push
and
leave
pop
clc
cmpsb
stos
jmp
hlt
ds
add
aas
pop
out
or
push
pop
cmp
xchg
or
xchg
jg
xor
dec
stc
jbe
pop
pop
pop
out
push
pop
fstpl
out
inc
mov
inc
out
lods
and
xchg
das
push
movsl
jae
push
cld
cwtl
aaa
jns
fs
jns
cmc
je
leave
aaa
cmp
sub
pop
xor
ret
test
jae
xchg
test
xor
outsb
jnp
addr16
mov
and
out
loopne
fistpll
inc
inc
fisttpll
shll
stos
std
lretw
mov
ss
xchg
mov
and
andl
lods
jb
or
repnz
gs
sti
mov
daa
scas
movsb
popa
push
daa
pop
pop
test
data16
pop
mov
mov
and
pop
iret
divb
mov
push
daa
shrb
icebp
fistpll
push
pushf
push
aas
sub
in
ficoms
sub
mov
or
pop
pop
add
mov
pop
push
xchg
sbb
or
cmp
pop
out
xchg
mov
jno
aam
dec
lret
iret
loop
in
test
insl
loop
adcb
in
rcr
in
mov
adc
pop
enter
jb
pop
ja
sub
sbb
add
fwait
shll
test
dec
lea
sub
out
mov
test
into
push
jp
lods
jno
adc
insb
sar
inc
ss
sbb
das
cmp
mov
mov
bound
mov
outsb
stos
jne
mov
fsts
xchg
ja
push
fmuls
cmp
adc
pavgb
cmpsb
cmpsb
push
jle
dec
fmuls
mov
adc
jmp
xlat
sbb
fistl
rcll
repz
sub
imul
push
adc
bswap
es
sbb
inc
test
xchg
and
dec
dec
inc
pop
movsl
add
dec
xor
push
jb
jmp
or
jle
addr16
mov
shr
xchg
jb
xlat
inc
mov
jne
mov
mov
pusha
pop
ja
dec
cld
ljmp
adc
ja
inc
leave
ds
cmp
stos
decl
loopne
xchg
lock
dec
mov
rcrb
add
mov
loope
fistpl
dec
push
sbb
ficoms
fstl
repz
add
pop
int
scas
add
lods
mov
add
pop
iret
ret
aaa
dec
aam
push
shlb
sti
mov
dec
mov
lock
loope
xchg
decb
jns
insl
mov
xlat
push
popa
cmp
pop
or
outsb
fidivl
and
int
jnp
push
cmpl
nop
or
add
adc
xchg
rcrb
std
sbb
or
sahf
loop
push
mov
lods
lods
leave
das
cli
add
into
fsub
das
pop
out
scas
test
xchg
pusha
push
jno
mov
stc
jnp
sbb
pcmpeqd
mov
jmp
lea
mov
arpl
dec
add
push
mov
insb
push
cmp
fildl
mov
push
sub
xchg
pop
and
jecxz
jae
pushf
in
cmp
out
and
movsb
insl
xchg
das
imul
xchg
push
mov
hlt
fildll
bound
cmp
aam
fdivrl
ret
fidivs
lcall
and
les
xor
pop
pop
xchg
mov
dec
dec
test
stos
in
lods
gs
fwait
sbb
dec
cmp
mov
call
in
iret
and
inc
insl
fcoml
fwait
xchg
jnp
call
xchg
mov
adc
decb
sub
std
mov
or
rorl
lds
inc
out
xchg
in
inc
ds
mov
int
xadd
pop
pop
leave
adc
jecxz
test
addr16
movups
or
das
cwtl
das
cltd
loopne
pop
call
jge
mov
scas
xchg
out
sbb
mov
shr
das
jns
cmp
cld
hlt
push
loope
int3
fiaddl
xlat
jge
dec
shl
lahf
dec
incl
dec
lret
in
ljmp
cmp
mov
in
sub
cmp
push
jne
fcoms
add
and
aas
outsl
push
rcrb
daa
lcall
iret
jp
fdiv
jns
shll
push
stos
cmpb
aas
repnz
mov
mov
cld
pop
add
lds
lods
xchg
in
jb
das
leave
add
repnz
dec
ret
sbb
gs
cmp
mov
push
dec
lods
sti
or
enter
dec
loope
gs
sbb
xchg
jns
pop
aaa
out
js
pop
sub
xchg
pushf
xor
xchg
dec
cld
dec
imul
jle
clc
popf
dec
sub
pop
and
jle,pn
stos
dec
and
sub
fiaddl
fcmovu
js
icebp
gs
sub
cmp
stos
jns
imul
fisttps
adc
xor
pop
xor
fwait
call
out
aas
test
push
popa
mov
leave
rcrl
dec
out
cmp
addr16
jo
pop
into
sbb
or
jns
leave
sbbl
iret
pop
mov
inc
lcall
out
mov
adc
sub
mov
mov
xor
jns
or
adc
and
push
and
jns
pop
xchg
cmp
je
and
adc
cmpsl
push
pop
adcb
lods
aas
jp
cmpsl
cmpsl
dec
stos
push
rcrl
test
insl
lcall
sbb
pop
cli
mov
push
int
or
lcall
cmp
inc
sub
cmp
sbb
mov
and
hlt
mov
sub
leave
xchg
and
push
ds
and
lahf
add
push
dec
add
xor
in
cli
or
cmp
or
push
icebp
adc
notb
das
lret
adc
adc
adc
xchg
and
push
sbbb
mov
lret
jb
xorb
je
es
sahf
inc
je
sub
adc
sub
mov
mov
or
mov
ficoml
scas
ds
xchg
adc
dec
inc
push
cli
pop
add
outsb
test
icebp
pop
xor
push
mov
add
int3
xchg
fisubs
sbb
dec
add
popa
mov
jnp
popa
push
iret
inc
out
dec
ss
stc
cmp
or
fbld
je
or
aam
insl
int
imulb
in
xchg
cmpsl
jnp
dec
xchg
imul
ret
xchg
in
lret
loopne
mov
fmul
dec
popa
mov
out
mov
aad
rclb
jg
hlt
inc
push
mov
leave
mov
out
mov
pop
xor
mov
scas
lret
cwtl
stos
mov
pop
mov
jp
insb
aaa
dec
inc
mov
imul
mov
iret
rorb
test
loope
inc
push
xchg
sub
stos
mov
not
and
push
add
pop
popa
sbb
call
jl
dec
ljmp
mov
divb
lcall
daa
mov
add
xor
outsl
je
stc
lock
inc
fimuls
out
daa
adcl
icebp
push
in
ret
dec
or
inc
pop
cltd
adcl
xor
scas
xchg
mov
or
push
push
mov
aam
hlt
mov
pusha
pushl
push
lea
aam
xchg
aam
cmpsb
xor
mov
jns
loopne
adc
test
insl
sti
mov
adc
lahf
fsubr
adc
mov
pop
xchg
test
movsb
lock
xor
fistpl
sti
loopne
cwtl
dec
ret
sub
fsubr
in
scas
mov
ja
adc
push
fildl
pop
enter
sub
in
add
and
cld
lret
into
inc
pop
sbb
loope
loop
jmp
push
mov
mov
pop
out
and
mov
test
push
fs
or
cmp
and
push
sub
xor
push
bound
scas
pop
cmp
push
mov
icebp
jns
bnd
sbb
dec
xchg
scas
jle
shlb
mov
jne
cli
jle
mov
in
mov
test
test
adc
lea
jge
dec
adc
sbb
aad
ljmp
sbb
mov
dec
and
insb
loopne
enter
call
adc
addr16
rcrb
lea
rcl
movsl
sahf
loop
je
and
jge
cwtl
push
fstpt
add
cmc
test
popf
notl
aaa
pop
pop
test
pop
jno
sub
fdivrl
popf
adc
je
fwait
or
lret
mov
or
test
jae
inc
sahf
test
or
xor
jmp
jg
or
popf
sub
les
inc
xor
xor
lret
lods
xchg
je
jns
add
lret
adc
cmpsb
push
insl
push
data16
inc
mov
jmp
rcrb
test
cltd
movsb
je
xchg
arpl
cld
and
push
enter
cli
sub
and
idivb
and
push
popf
push
cwtl
mov
scas
adc
adc
popa
mov
icebp
push
push
mov
inc
xor
shrb
ljmp
insb
push
inc
jbe
xorl
cmpsl
cmp
dec
xor
fidivrl
lods
cmp
insb
jbe
jle
cmpb
ret
xchg
in
cli
and
jo
ss
jecxz
test
inc
sarl
xchg
and
repnz
ja
pop
xor
cmc
push
repnz
bound
push
mov
or
cmc
sub
cmp
out
imul
outsl
lock
fs
loop
ljmp
dec
seto
dec
in
sti
sub
addr16
adc
fsubl
cmp
xor
mov
sub
push
sub
or
shll
mov
jb
sub
ljmp
inc
test
sti
cmp
push
ret
mov
push
sbb
imul
loop
sarl
add
jns
xor
sets
rcl
cmp
ljmp
sub
int3
add
std
popl
jl
icebp
mov
nop
pop
and
std
mov
mov
sub
pop
pop
outsl
pop
sbb
stos
add
sbb
int
jo
clc
ds
rorb
addr16
pop
test
inc
loopne
dec
into
popf
push
les
jnp
stc
fbstp
mov
and
gs
mov
xchg
pusha
fdivrs
aad
dec
sub
leave
imul
mov
mov
inc
jmp
jae
mov
push
cs
daa
mov
fcomps
inc
xchg
flds
dec
popf
jle
push
stos
sub
cmp
fsin
popl
or
cmpl
out
jmp
out
jl
hlt
lret
lret
adc
push
push
mov
movsb
or
mov
call
sbb
cli
insl
stc
pop
adcl
jg
test
push
xor
aad
ss
ss
cli
mov
mov
test
add
or
jb
sbb
pop
inc
dec
dec
push
fistl
cltd
repz
adc
sub
dec
jno
add
push
fwait
dec
lret
cwtl
ret
inc
adc
mov
push
repnz
sti
sbb
lods
adc
movsl
or
pop
arpl
lret
in
pushf
dec
mov
adc
cmp
cmpsl
dec
ja
addr16
or
daa
inc
xchg
jecxz
xchg
dec
mov
pop
pop
pop
lahf
mov
cwtl
xchg
int3
js
ffree
cmc
loopne
in
outsl
push
fadd
outsb
and
or
iret
jae
sub
jb
push
fidivrl
adc
outsl
adc
pavgw
xchg
mov
mov
inc
rcrl
dec
test
sti
insb
pop
mov
cmpsl
cli
pop
dec
idivl
out
in
mov
jp
cmp
inc
mov
mov
pop
push
or
aaa
ds
lahf
lds
mov
mov
rclb
inc
fildll
fbld
pusha
jb
xlat
push
xlat
ror
addr16
adc
mov
xacquire
push
jmp
cmp
mov
xchg
jb
jmp
and
cmp
mov
sub
outsl
push
fwait
fs
loop
or
je
aam
xor
xchg
loope
sbb
or
xchg
fsubr
and
push
jg
sub
fcomp
rol
add
repnz
ret
inc
pop
fmulp
mov
inc
xchg
xor
je
adc
mov
inc
cltd
test
mov
lcall
int
pop
push
lds
in
add
xchg
pop
add
iret
cltd
or
xchg
dec
cmpsb
inc
ret
sti
inc
mov
lock
lret
aad
add
lds
gs
mov
mov
stos
jl
pminsw
in
xor
pushf
sarl
push
pop
xchg
dec
fbstp
mov
int
and
aas
call
xchg
xchg
out
rcll
mov
test
sub
stc
pop
fisubl
mov
cmp
jb
insw
inc
inc
xor
push
add
std
or
xorl
sbb
sahf
jmp
mov
push
dec
sbb
push
sbb
dec
adc
pop
imul
pop
lret
sarb
jb
xchg
out
test
push
fs
popa
scas
cmp
mov
pop
sbb
sbb
clc
jae
sub
test
sahf
mov
ror
stos
fsubs
test
sbb
jns
push
cmp
sbbl
sbb
out
sbb
cld
icebp
mov
push
cwtl
mov
dec
push
mov
movsb
test
xor
xor
pop
ljmp
and
ljmp
gs
mov
enter
outsl
push
scas
lock
scas
outsl
sub
lods
xlat
mov
mov
fsubrs
push
arpl
repz
push
jp
mov
sbb
add
adc
inc
adc
mov
xor
sahf
cltd
aaa
lret
jns
mov
adc
mov
rcrl
ljmp
mov
cmp
xlat
add
cmpsl
sub
fadds
out
push
mov
dec
jns
jns
and
inc
xor
sarl
add
notl
sbb
sbb
idivl
xchg
jnp
adc
ds
xorl
add
and
sahf
sbbb
test
jno
adc
std
ret
jbe
out
stc
fnstcw
jp
xchg
xor
mov
int
in
cltd
movswl
sub
mov
sbb
aam
loopne
mov
adc
fildll
xor
push
mov
xor
mov
xchg
sbb
test
imul
add
inc
sbb
jg
xchg
lcall
push
in
std
sub
xor
fs
and
push
and
in
push
out
and
xchg
sbb
gs
cmp
lds
xor
cmp
or
sahf
jle
dec
mov
sub
sarl
mov
test
jecxz
stos
idivl
js
aaa
jmp
and
lods
dec
inc
sub
iret
repnz
xchg
jne
sbb
or
fisubs
ja
and
mov
fidivs
imul
inc
xchg
jge
in
push
es
dec
cwtl
or
lods
pop
mov
add
int
out
repnz
int
or
xor
bound
out
mov
xchg
inc
sarb
imul
scas
jp
jns
arpl
ret
ficomps
push
les
or
lds
popa
mov
adc
stos
lret
movsl
test
jbe
sarb
mov
stos
xchg
or
lea
xchg
aad
aam
inc
inc
cltd
jne
and
jno
pop
push
cmp
jecxz
add
cmp
or
frstor
pop
int
div
and
add
cmpsb
jbe
add
sub
mov
adc
clc
sub
sub
js
ss
or
mov
cmp
mov
fs
cli
movsl
xchg
popf
rolb
fdivrs
push
clc
pop
mov
mov
mov
repz
push
inc
mov
cmp
xchg
mov
loopew
sbb
add
out
sbb
jmp
adcb
fbld
mov
imul
rcl
jae
cli
aad
popf
and
adc
jle
push
or
mov
and
dec
adc
pop
ss
test
test
fsubp
or
dec
mov
rcrb
repz
and
or
inc
test
mov
jo
out
and
pop
push
pop
add
cmc
sub
mov
cmpsb
cmp
xchg
push
push
cs
push
mov
xchg
mov
or
inc
shlb
push
sub
div
jle
outsb
testl
outsl
icebp
insl
xor
push
gs
data16
fmull
rclb
loopne
icebp
pusha
ret
fcoml
sahf
push
push
pop
stos
rcll
lret
inc
pextrw
aaa
jno
enter
mov
sub
xor
mov
stos
mov
mov
xchg
rorb
repnz
xor
and
lretw
xchg
and
popa
test
mov
enter
out
xchg
js
add
dec
mov
test
mov
xchg
js
jns
insb
pop
es
iret
stos
icebp
mov
xor
inc
push
jle
sub
jmp
lret
mov
gs
inc
gs
adc
addl
ret
lcall
mov
sub
xchg
xchg
repnz
dec
lock
lods
cmp
mov
fnop
cltd
or
mov
cmp
adc
sub
add
jle
aaa
in
lods
inc
addr16
mov
pushf
jb
inc
and
add
sbb
daa
or
xchg
add
aam
cmp
in
fld
xchg
push
jno
xor
int3
mov
call
es
cltd
in
mov
enter
fcmovbe
push
out
std
fidivrl
xlat
ds
dec
push
inc
push
pushf
mov
xor
in
fsts
xchg
adc
scas
push
push
js
fs
cmpsb
fs
mov
shl
xchg
cmp
in
pop
ja
jp
fcoms
popa
pop
dec
adc
push
sbb
or
jle
iret
dec
loopne
imulb
pop
cmpl
pop
add
popf
aad
cmp
out
aaa
xor
add
imul
mov
sub
mov
mov
lods
int
adc
xor
sbb
aad
rcrb
mov
mov
enter
mov
and
or
mov
les
xor
mov
je
jb
dec
rolb
fcmovu
sub
or
push
movsl
bound
iret
cmp
ja
inc
mov
pop
adc
cmp
outsl
sbb
repz
ficompl
hlt
and
aam
call
bound
popf
inc
jge
mov
ljmp
mov
and
adc
popf
pop
push
xchg
fcmovnb
std
or
inc
dec
adc
inc
adc
mov
ret
pop
movsl
das
and
cmp
movsl
movsb
loopne
and
adc
enter
mov
imull
push
lock
imul
push
cmp
ret
movsb
push
js
lahf
js
adc
fstps
std
jp
test
shlb
ret
mov
fwait
xor
pop
pop
inc
or
pop
mov
adcl
inc
mov
cs
aas
jne
sbb
inc
and
sub
mov
push
stc
add
push
shl
frstor
mov
pop
push
fwait
sahf
and
sub
pop
sbb
sbb
fistpll
and
sti
es
add
fidivs
outsl
sub
cmp
sahf
outsb
rcrl
or
subb
pop
in
push
dec
mov
add
cmp
into
repz
dec
cs
and
scas
cmpsl
outsl
mov
ret
and
dec
test
rcrl
imul
test
push
insl
cwtl
addb
fsubrs
lock
adc
add
in
pop
jecxz
jbe
adc
icebp
and
fdivrl
adc
icebp
int
sub
cmp
pop
dec
ret
mov
jo
inc
xlat
shrl
into
or
cltd
xchg
push
sbb
cmp
xlat
xor
add
test
xor
dec
loop
mov
lahf
or
test
jle
fstl
xor
lock
mov
or
lea
pop
dec
sbb
out
call
insl
cmp
ret
sub
lods
mov
pop
bound
xchg
jne
nop
mov
je
loop
insb
jmp
fsubs
pop
ds
in
imul
imulb
mov
loope
aam
in
mov
add
arpl
mov
jns
sti
mov
imul
push
hlt
cltd
pop
in
pop
cmp
mov
push
ljmpw
and
xor
xorl
mov
mov
sbb
and
mov
fstp
popf
and
arpl
fsub
and
mov
mov
cltd
pop
popf
jmp
sub
adc
arpl
leave
add
ss
xor
push
pop
shlb
sbb
mov
test
add
xlat
jl
inc
icebp
jle
data16
pop
flds
xor
mov
in
xchg
and
inc
mov
cmp
inc
into
jns
ret
push
sahf
sti
sbb
jp
sahf
sub
sbb
cmp
rorb
pop
ss
jl
push
and
mov
inc
sub
cwtl
sub
fisubl
xchg
sahf
dec
mov
jl
add
jno
jg
out
int3
inc
mov
pop
xor
ret
mov
xor
xor
out
mov
add
push
cmpsb
mov
inc
mov
jno
pushl
test
cmp
daa
fcmovne
out
or
xor
push
inc
xor
ss
lcall
divb
aas
stos
jecxz
rclb
mov
or
mov
mov
outsl
cmpsl
mov
cmp
sub
ja
jne
repz
jp
pop
inc
fwait
ljmp
pop
movb
xor
or
mov
cld
test
jns
pop
fwait
stos
js
test
nop
lea
push
ss
push
xor
out
adc
aam
icebp
sti
xchg
leave
in
fst
and
fstl
xchg
jo
mov
adc
dec
or
mov
add
add
jo
push
das
dec
or
insl
arpl
xor
imul
xchg
ret
or
or
or
sbb
xchg
in
xor
rorl
sub
and
fs
adc
mov
ds
cs
sub
push
or
cmp
loopne,pt
rcr
inc
xchg
mov
push
pusha
xchg
adcl
fs
js
enter
lahf
adc
insb
bound
in
jecxz
or
dec
or
xchg
in
ljmp
cmp
cltd
sbb
outsb
fsubr
stos
stos
out
popf
jae
popl
adc
int
cmp
xchg
xchg
imul
mov
dec
jge
xlat
sbb
jmp
test
addr16
rorb
adc
imul
cs
repz
lret
jo
jno
orl
in
rcr
push
xchg
jae
and
and
leave
sub
into
xor
inc
ret
add
sbb
popf
adc
and
mov
fidivl
out
mov
mov
out
adcb
lods
sub
test
xor
cmpsb
pop
fstpl
push
sub
dec
mov
scas
rorl
add
adc
bnd
in
adc
aaa
mov
hlt
shll
jg
xchg
push
dec
cld
sahf
jp
dec
sub
dec
mov
and
cmp
push
pushf
ja
push
mov
mov
mov
test
inc
cld
adc
jecxz
lds
mov
lods
mov
push
and
fidivrl
inc
or
dec
mul
push
shrb
xor
pop
js
popf
aaa
mov
lea
add
in
xor
insb
int
sub
call
pop
rorb
lock
jl
jl
xchg
test
cmc
mov
mov
dec
and
add
add
sahf
jo
lret
add
push
mov
mov
sbb
aaa
pop
cmpb
add
mov
test
nop
js
ljmp
push
sbb
jp
dec
inc
add
out
pop
inc
enter
cmc
pop
mov
jg
pop
mov
scas
and
xor
xchg
mov
shrl
rcrl
xlat
push
popa
out
scas
push
adc
stc
fidivl
cmp
les
jl
mov
xchg
jae
cmp
stos
push
stc
adc
pushf
adc
int3
and
push
data16
sarb
lods
lahf
stos
mov
aam
pusha
int
dec
insb
push
inc
daa
dec
push
pop
push
pop
cwtl
pop
mov
mov
fimull
jl
push
pop
or
pushf
push
in
xor
mov
jbe
test
sub
add
add
hlt
out
cld
push
filds
mov
rdmsr
fwait
imul
call
test
pop
cmovb
push
push
cmp
fsubr
insb
ficoml
pop
jecxz
out
jecxz
sub
dec
mov
inc
xorl
xchg
cltd
dec
fs
js
loope
sar
gs
faddl
sahf
jno
dec
push
mov
fwait
mov
int
inc
bound
adc
jecxz
jge
lret
adc
cmp
aad
fisttpl
pop
hlt
pop
loope
daa
mov
or
cmp
test
out
push
sahf
ror
lret
in
jmp
ret
hlt
xor
add
or
mov
in
push
mov
xchg
mov
repnz
fs
pop
sbb
ret
xor
inc
shlb
adc
mov
jmp
push
add
hlt
mov
cmp
bound
stos
aas
js
mov
add
fs
fmul
add
lret
movsb
cltd
jnp
sbb
dec
dec
inc
pushf
mov
repnz
lret
dec
xlat
rcrl
call
xchg
dec
mulb
outsb
jno
mov
popa
fs
cmp
loopne
push
sub
inc
movsb
push
orl
test
das
repz
jmp
sub
pushf
or
add
hlt
test
iret
mov
cli
adc
aad
xchg
in
sub
int3
pop
mov
sub
cmp
dec
xchg
rcrb
mov
and
mov
dec
xor
jb
inc
in
out
jo
in
mov
and
aam
cli
cmc
sahf
test
sub
arpl
pop
in
cmp
test
pop
xchg
jmp
push
sbbl
cmp
mov
sti
lods
inc
push
dec
sub
jno
ds
out
int
cmp
jmp
insl
add
insl
push
sbb
into
icebp
mov
test
es
xor
das
outsl
jp
jg
aaa
icebp
add
adc
mov
adc
sub
ret
xor
loope
aas
aas
jnp
movsl
data16
pop
setnp
pop
sub
xor
hlt
xlat
jge
shll
cmp
repz
jg
add
jno
test
dec
jg
or
leave
iret
outsb
mov
jb
cmp
fdivr
mov
xor
add
enter
andb
inc
mov
cmpl
lahf
push
lahf
pop
gs
mov
and
dec
js
sbb
sub
fdivrl
push
sbb
clc
in
cld
aam
enter
jg
leave
divl
sbb
push
ja
xchg
incb
int
data16
cmc
dec
dec
mov
add
pop
mov
cli
push
repz
fcomps
pop
or
iret
popa
subl
push
sti
fisubrs
jle
dec
mov
mov
push
stos
mov
fldl
xlat
push
in
mov
iret
in
sti
mov
pop
xchg
fadd
loopne
aad
inc
push
pop
sti
xchg
xlat
mov
sub
test
data16
ret
test
sbb
lahf
cmp
cmp
push
push
xor
xor
adcl
ret
jns
mov
mov
sub
or
fildl
loopne
pop
add
fwait
cli
inc
or
popf
call
test
sub
mov
ret
or
fwait
push
jnp
in
mov
aaa
negb
mov
push
mov
xchg
mov
imul
jae
inc
mov
lret
push
gs
ffreep
out
inc
cwtl
addr16
imul
cmp
mov
loope
int
mov
sub
dec
jl
cmp
fwait
jmp
lea
ret
push
dec
lds
sub
call
and
add
je
lahf
pop
xchg
std
fimuls
dec
mov
and
jb
out
push
mov
pop
sbb
cmp
sub
pop
jg
pushf
ss
inc
leave
lret
pop
sub
fstpl
pop
mov
aas
roll
sbb
aas
push
adc
loopne
out
push
cmp
mov
push
jno
es
push
out
xorb
into
sbb
pop
dec
test
movsb
pop
pusha
push
mov
cli
adc
rorb
mov
rorl
mov
ss
in
sar
scas
pop
xor
ret
dec
mov
xchg
popa
int
mov
push
pmuludq
cmpsb
scas
js
repz
or
jge
iret
xchg
outsb
mov
push
jne
shl
repz
push
dec
fstps
xchg
movsl
cmc
add
mov
push
sbb
stc
pop
insl
sbb
inc
fdivrl
ret
sub
insl
push
or
sbb
mov
jo
movsb
cmp
cmp
mov
push
fwait
push
dec
jg
jg
mov
and
xchg
dec
xchg
inc
jle
arpl
jae
xor
repnz
arpl
fs
pop
or
test
mov
pop
insl
and
inc
add
enter
je
dec
dec
nop
xorl
cmp
inc
push
cmp
mov
adc
int3
dec
push
xor
lret
and
aaa
stos
dec
or
sti
mov
add
test
add
jae
int3
insb
cld
sbb
xorl
leave
enter
dec
fistl
push
scas
fnstcw
jae
fdivp
mov
iret
int3
mov
ret
fcom
jbe
jno
out
aam
movsb
xor
aad
sbb
out
and
cltd
aas
loopne
in
jmp
xchg
mov
ja
inc
daa
cmpsb
pop
clc
iret
fildll
out
dec
out
push
cmp
call
lcall
mov
jnp
in
ja
fidivrl
mov
fwait
ja
mov
lea
retw
inc
testl
mov
push
cld
cmpsb
inc
aam
lock
and
loopne
pusha
adc
push
sub
icebp
cltd
jg
jle
ror
xor
mov
les
xchg
dec
adc
loop
fistpll
jnp
push
mov
sub
sub
test
das
dec
sar
lock
jle
hlt
jbe
jle
jne
insb
movsl
push
lcall
out
imul
sbb
jnp
sub
rcrl
or
in
insb
xlat
bswap
jle
sub
sti
stos
and
mov
lret
xor
lods
mov
adc
cmc
jp
pusha
xor
sbb
pop
ror
pop
int3
dec
cmp
adcl
addr16
mov
mov
sti
or
int
mov
div
stos
adc
sbb
pop
shrl
pop
fsts
jne
cmp
in
aaa
popa
and
cmp
dec
jo
push
xchg
sub
pushf
imul
mov
jge
test
jne
lcall
mov
cmp
fbld
mov
nop
adc
inc
in
mov
iret
mov
lods
test
xchg
pusha
jmp
or
gs
push
imul
cli
daa
mov
adc
arpl
pop
jo
mov
sub
jg
sub
adc
call
andb
out
xlat
fnstenv
jno
pop
scas
bound
mov
ja
nop
orb
push
xlat
loopne
add
add
lahf
icebp
loopne
imul
xlat
sub
push
mov
mov
inc
dec
or
orb
dec
and
out
mov
add
pop
sub
stos
push
aaa
sbb
rcl
popf
int3
je
clc
nop
push
iret
push
das
mov
mov
mov
insb
pop
mov
adc
xchg
and
aad
pusha
test
aad
sti
imul
xor
jbe
or
es
add
sub
mov
mov
repnz
popf
lret
mov
fiaddl
into
mov
fs
pop
jno
fsub
pop
icebp
insl
stos
mov
loopne
shlb
ss
addb
arpl
xor
inc
stos
push
rcll
add
add
scas
addb
add
add
add
add
add
add
add
orb
add
push
add
addb
add
scas
addb
add
add
add
add
sldt
pusha
add
cmp
add
mov
add
mov
add
fadds
add
add
add
sub
add
scas
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
les
add
scas
addb
add
add
add
add
add
add
add
add
add
xor
add
scas
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
scas
addb
add
add
add
add
add
add
add
mov
add
add
scas
addb
add
add
add
add
add
xorb
adc
add
add
add
scas
addb
add
add
add
add
add
add
dec
add
adc
add
scas
addb
add
add
add
add
add
add
dec
add
cld
add
add
add
add
dec
add
dec
add
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
inc
push
add
mov
push
add
loopne
add
lock
add
add
add
adc
add
add
add
add
add
add
push
push
add
add
add
je
add
add
add
add
add
add
add
ljmp
add
adc
add
add
add
incl
push
add
adc
add
sbb
add
add
add
jmp
add
sbb
add
and
add
add
add
decl
add
and
add
sub
add
add
add
ljmp
add
sub
add
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
gs
jne
xor
cs
insb
add
add
add
push
jns
inc
jb
gs
je
imul
add
jbe
jo
xor
cs
insb
add
add
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
jne
gs
xor
fs
insb
add
add
inc
gs
gs
outsl
popa
jb
push
jns
add
add
gs
insb
xor
cs
insb
add
add
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
popa
je
inc
add
sbb
add
add
xchg
add
add
add
add
mov
lods
xor
nop
nop
push
sahf
test
add
loope
add
xor
pop
or
in
jb
jne
cmp
or
dec
xchg
rolb
icebp
pop
or
clc
repnz
push
add
xorps
cli
inc
out
inc
aam
cmp
mov
loopne
dec
jecxz
call
add
sbb
ss
pop
in
hlt
jne
in
jge
int3
es
mov
je
mov
pop
jno
rep
in
dec
or
push
sub
enter
jge
mov
shl
or
inc
outsl
dec
mov
sbb
orb
xchg
or
xchg
int3
pop
hlt
iret
data16
and
and
roll
inc
stos
add
pop
sub
fwait
int
adc
popf
or
loopne
incl
js
or
setg
dec
out
or
scas
icebp
cmp
cmp
jg
icebp
cmp
mov
icebp
xor
xchg
push
hlt
and
dec
aam
mov
call
inc
add
imul
add
pop
lea
dec
cmp
repz
ds
sub
call
or
push
sub
shll
nop
pop
push
jne
and
or
pop
outsb
mov
and
movsb
cmpsb
pop
or
sbb
out
repz
or
js
pop
scas
mov
rolb
addps
sub
mov
jbe
xor
mov
push
add
add
cli
mov
or
incl
jmp
popa
andb
pop
xchg
and
bound
adc
je
cwtl
lock
cmpsl
outsb
or
or
lahf
test
adcl
add
mov
or
cmp
cltd
or
insl
std
add
je
sahf
adc
push
imul
rol
ljmp
or
adc
outsb
lods
and
inc
inc
jns
fldl
push
cltd
dec
fmull
pop
cwtl
and
sbb
adc
jge
dec
xchg
jmp
pop
movl
add
lea
or
pop
daa
push
mov
test
cmp
push
mov
clc
adcl
es
cmpsb
sub
cmpsb
mov
mov
jae
mov
sbb
bound
inc
pop
sub
mov
add
xor
in
mov
lea
push
clc
test
adc
push
jmp
mov
pop
jmp
sbb
dec
js
pusha
fmull
test
jp
dec
jae
mov
pop
lea
mov
dec
fstp
jne
out
imul
je
add
pop
push
sbb
loope
out
mov
inc
sbb
mov
mov
loop
enter
enter
sub
adc
or
mov
or
xor
xor
jmp
mov
inc
bound
mov
or
popa
jno
or
les
sub
andb
push
pushf
bound
test
sbb
das
xor
pop
rorb
fsubs
lock
cwtl
adc
sbb
inc
inc
mov
sbb
repz
jl
movsb
cs
sar
inc
jecxz
pop
decl
push
push
nop
or
incb
mov
sbb
gs
sbb
out
insl
add
jb
js
cld
in
xchg
lock
lea
mov
adc
shlb
push
imul
or
sub
inc
dec
cli
jo
fimull
mov
shl
lret
stc
xchg
jecxz
push
adc
add
push
mov
decb
jo
mov
adc
add
call
jno
push
sub
jne
lea
mov
and
or
jge
dec
test
adc
dec
adcl
mov
adc
push
dec
data16
or
jl
add
sahf
push
and
inc
mov
es
xchg
test
lock
lret
add
mov
pop
inc
dec
addb
dec
cmp
sbb
jb
xchg
pop
adc
mov
mov
sbb
mov
stos
add
push
cltd
push
pop
divl
cmp
pop
jl
push
mov
push
mov
xchg
fstpt
enter
fs
loop
xchg
leave
fldl
fildl
push
call
cld
add
mov
lea
sbb
sbb
jo
adc
lea
test
orb
or
dec
test
push
inc
add
mov
roll
or
lcall
push
push
xor
or
sbb
movsb
in
inc
and
testl
dec
and
mov
repnz
lidtl
stos
pop
sub
or
or
or
sbb
inc
or
and
fistpl
inc
and
inc
adc
inc
adc
adc
sbb
shll
sub
adc
and
add
sbb
fisttps
inc
addr16
sbb
lock
les
add
call
pop
push
push
push
mov
xorl
lea
inc
cld
orl
add
lock
xlat
push
add
jbe
rclb
das
bound
xor
orl
dec
add
jae
test
out
push
xor
and
aam
repz
out
pop
sbb
das
lea
push
xor
sbb
call
add
lea
les
inc
int3
push
push
xchg
iret
xor
daa
ret
call
jb
sbb
insl
xchg
rcll
dec
rcll
xor
leave
je
arpl
inc
inc
push
pusha
outsb
je
mov
lea
mov
mov
sub
xorb
dec
loope
fidivrl
lea
push
aas
inc
pop
add
addb
push
lahf
aas
shlb
inc
xchg
or
stos
adc
int
xor
or
sub
aaa
dec
fisubs
add
pop
add
or
jmp
imul
repnz
push
push
icebp
aaa
movsb
sbb
push
mov
packuswb
or
pop
pop
push
pop
pop
ret
and
cld
and
call
jmp
push
adc
push
add
push
call
inc
push
ret
xchg
shll
add
std
xlat
jmp
sbb
add
in
pop
lods
sbb
jne
scas
leave
mov
pop
mov
sub
rcll
jmp
nop
mov
jo
jmp
hlt
cltd
and
icebp
pop
push
or
rcrb
or
xor
pop
dec
cs
inc
adc
jge
les
jp
insb
nop
insb
mov
adc
add
jne
cmp
jge
jo
inc
add
mov
add
sub
not
jge
add
enter
sbb
sub
ret
shr
int3
rclb
xchg
push
mov
add
cwtl
inc
jmp
and
pop
mov
xor
xor
popw
pop
jmp
pop
push
test
cmp
xor
sub
data16
push
push
sbb
cmpsl
xor
mov
add
push
aam
je
sub
adc
std
sti
ljmp
inc
mov
je
loopne
popa
pop
jge
sub
daa
clc
rcll
add
movsl
mov
ds
call
add
xor
movsb
push
fcmovbe
xchg
stos
lret
pop
sub
cmp
inc
ret
jne
mov
dec
pushf
mov
push
sub
jb
mov
cmpsb
mov
xor
enter
mov
pop
and
jl
add
push
mov
hlt
push
mov
jge
pop
dec
test
mov
outsl
push
push
flds
in
fnop
clc
enter
xchg
mov
inc
aam
sub
lahf
ss
sti
outsb
push
ret
pop
imul
nop
cli
cmp
jne
stc
sub
adc
repz
inc
rol
decl
movsb
stos
adc
fsub
fildll
jne
cs
cmp
xchg
ficoml
in
sub
lret
std
mov
fwait
mov
and
xchg
cmp
mov
or
or
mov
or
xor
jle
adc
push
push
or
call
sbb
mov
and
cmp
jae
jbe
jne
in
sbb
subl
xchg
inc
adc
dec
sbb
shlb
sub
pop
test
mov
jmp
arpl
jmp
sbb
into
jge
mov
adc
jp
jge
jbe
testb
dec
lahf
mov
je
push
movsb
jg
test
cmp
cmp
jmp
roll
je
data16
inc
jecxz
dec
enter
push
dec
mov
push
and
pushf
aad
test
adc
add
xor
icebp
mov
adc
dec
or
inc
jmp
mov
cld
insl
ror
sbb
inc
cmp
mov
jl
sbb
sub
jmp
push
lea
mov
leave
pusha
cmp
push
orb
je
js
push
pop
sbb
arpl
sub
or
in
xor
and
scas
adc
lcall
mov
fiadds
pop
outsl
cmpsb
dec
dec
scas
icebp
inc
jo
insb
imul
jb
mov
adc
out
and
jne
fldt
adcb
jecxz
cmp
aas
fs
and
stc
in
fnstenv
pop
scas
mov
imul
inc
xor
sub
insb
and
or
daa
arpl
mov
fwait
push
xor
push
dec
fidivrs
popa
addr16
inc
outsl
js
xorl
js
data16
imul
fwait
insb
add
inc
js
je
xchg
movsb
jo
insb
inc
shrb
popa
outsb
fs
jo
dec
jo
lods
sbb
cmp
insb
cmpsb
sbb
jl
imul
add
mov
cltd
lcall
jge
push
add
insl
cmp
and
jmp
push
cmp
dec
dec
xor
dec
arpl
add
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
mov
add
pushf
push
add
mov
pop
add
or
add
add
add
inc
add
push
add
add
add
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
add
fs
inc
add
add
add
inc
