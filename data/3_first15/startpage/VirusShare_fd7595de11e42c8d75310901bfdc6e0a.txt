and
push
add
mov
pop
push
dec
orl
dec
inc
inc
cmp
xor
and
xor
xor
and
and
and
adc
jo
push
js
add
out
addl
add
les
add
add
testb
add
xor
mov
arpl
add
add
add
xchg
daa
dec
in
add
add
add
jmp
in
add
push
mov
cmpl
jne
push
imul
add
sbb
test
jne
xor
pop
mov
int3
and
xor
mov
add
lea
mov
mov
mov
inc
out
incl
mov
mov
mov
sub
ret
push
mov
pop
in
out
repnz
dec
inc
test
dec
mov
mov
mov
add
or
adc
add
mov
sbb
divb
or
push
mov
ljmp
push
push
push
mov
mov
mov
mov
add
imul
ja
or
push
or
ret
adc
enter
push
add
add
jmp
add
mov
xchg
fisttpll
jne
sbb
mov
cmp
jne
mov
lods
sub
lds
pop
pop
pop
xchg
jge
js
pop
clc
mov
dec
cmp
jb
mov
in
in
in
into
add
call
ja
adc
mov
add
add
or
dec
popa
pop
mov
push
jmp
sub
jp
add
cs
sub
jmp
mov
inc
mov
jnp
bswap
faddp
ljmp
stc
mov
sub
mov
aam
test
neg
ret
or
push
sbb
sti
jne
or
clc
fstl
lock
pop
mov
mov
decl
and
push
incl
push
mov
cmp
sarl
sbb
adc
jecxz
add
pop
jge
sbb
add
mov
mov
pusha
out
movl
push
xchg
and
jne
js
and
and
cmp
jbe
sbb
mov
loop
aaa
mov
mov
push
and
mov
add
mov
outsl
imul
dec
jmp
bnd
imul
out
ja
mov
add
sbb
cmp
jae
popa
outsb
mov
add
push
push
test
or
add
out
ret
xor
filds
mov
fidivl
adc
push
mov
dec
jns
sub
sbb
stos
adc
hlt
mov
xor
mov
and
or
ret
pop
loop
xlat
insb
out
push
cmp
or
lds
mov
push
mov
sbb
nop
pop
fdivl
fnstsw
jnp
mov
push
jbe
das
xorps
sub
push
push
rclb
insl
lods
mov
jmp
ss
mov
cmp
repz
out
popf
jmp
jmp
dec
xchg
imull
push
inc
test
dec
push
cmp
jae
mov
out
jae
and
mov
std
sbbb
inc
cmp
mov
add
out
ficomps
push
cmp
in
add
jne
xchg
add
jns
imul
fidivs
pop
push
add
jbe
push
mov
fs
xchg
dec
inc
ds
or
jne
stos
cs
and
and
sub
xor
aam
adc
hlt
cwtl
cvtdq2ps
ds
sbb
mov
cmp
call
push
mov
fldcw
sub
push
pop
dec
sbb
or
movsl
add
sbb
mov
adc
outsb
jbe
pop
aaa
dec
seto
imul
sbb
dec
jmp
imul
or
test
in
or
xlat
cmp
and
lock
inc
dec
or
or
dec
adc
cmp
mov
les
sbb
out
cmp
jae
cmp
pop
mov
sub
inc
add
jge
jbe
mov
ret
dec
out
data16
mov
pop
adc
orl
icebp
cmp
push
jmp
jge
jp
pop
lea
xchg
mov
in
mov
mov
push
cmp
xchg
xor
sub
mov
mov
adc
push
out
mov
add
mov
std
or
hlt
inc
cmp
lods
add
hlt
inc
mov
add
lods
sub
pop
pop
pop
mov
push
jge
sub
ret
fistps
mov
in
sub
lock
or
test
imul
nop
sbb
add
adc
sbb
lods
shl
movb
mov
out
jno
adc
cmp
in
xor
push
jne
fldenv
dec
and
jno
jecxz
loop
fildl
pop
fists
add
inc
jnp
adc
cmp
mov
adc
roll
xchg
std
sbb
mov
jmp
push
push
mov
fsts
adc
add
lods
or
ret
jmp
mov
ss
in
shll
or
xor
notl
repz
test
ret
mov
sub
lea
and
add
sbb
fmuls
mov
jl
and
rcr
or
add
ljmp
cld
jecxz
or
adc
cmp
aam
aaa
ss
push
or
sub
orl
dec
out
das
sbb
add
andl
pop
inc
clc
or
add
adc
add
push
arpl
int
cmpsb
mov
test
negb
insb
outsl
mov
cmpsb
jb
jmp
jo
sbb
add
push
movsl
add
xor
add
pop
add
add
adc
mov
dec
shlb
and
cmp
or
add
and
sbb
pop
pop
negl
lea
sub
jg
clc
push
or
mov
clc
or
adc
add
iret
xor
add
jae
inc
jmp
adc
mov
fst
decb
adc
in
fimull
or
rolb
adc
rcrb
pop
lea
cmp
add
xchg
add
or
pop
xchg
mov
sub
mov
enter
aaa
mov
dec
xchg
ret
nop
hlt
rcll
mov
cs
or
pop
mov
sbb
cmp
outsb
mov
adc
outsl
clts
xchg
cmp
or
xor
mov
cmp
popa
popa
imul
ss
inc
or
or
jecxz
ret
xor
sub
or
or
fdivl
push
push
and
fsub
lock
mov
cld
dec
or
or
testb
inc
in
or
pop
cmp
xor
dec
test
dec
subb
add
or
add
adc
push
sbb
push
push
pop
cmp
xchg
adc
add
jo
arpl
adc
outsl
add
orl
adc
adc
sbb
aam
lock
add
sbb
les
mov
nop
pop
mov
fsubrs
ret
xor
sbb
ret
pop
hlt
mov
sar
cmp
test
push
adc
or
shlb
mov
and
mov
pop
xchg
or
pop
or
pop
inc
adc
je
pop
lahf
arpl
jmp
adc
jne
mov
cmp
cmp
ret
jo
and
mov
inc
cmp
push
jp
add
fnstcw
nop
lock
sbb
push
scas
les
test
add
xchg
mov
sbb
jne
cmp
xor
sbb
dec
dec
xchg
pop
jmp
int
xor
subl
mov
int3
fnsave
sti
clc
aad
or
mov
inc
cmp
xor
add
gs
xor
fildl
or
inc
adc
xchg
and
inc
in
mov
jns
xor
scas
inc
push
add
not
jne
sub
addl
lret
mov
aam
das
or
add
orb
in
and
or
pop
sbb
mov
jo
sbb
pop
pop
jb
nop
fimuls
sbb
rcll
mov
dec
ret
aas
and
sub
and
fists
jne
testl
sbb
cwtl
adc
fisubs
or
push
test
mull
inc
or
mov
or
cmpsb
or
mov
pop
dec
mov
lock
or
or
out
or
cmp
pop
sbb
push
jbe
lock
or
sub
jmp
inc
push
pusha
sbb
ljmp
mov
fisttpl
sbb
lock
ret
jb
sti
or
orl
jmp
mov
pop
das
inc
cmpl
jl
or
or
xor
rorl
dec
nop
sub
sbb
in
and
imul
mov
mov
sub
jge
test
jno
cmp
clc
mov
adc
or
into
cwtl
sbb
cmp
sbb
jge
xchg
or
xchg
and
push
sub
testb
mov
add
xor
das
sbb
test
insb
sbb
pop
xor
test
adc
cmpsl
jbe
xor
cmp
jl
in
mov
or
sbb
pop
inc
jp
adc
xor
movl
mov
clc
aam
fbstp
dec
add
push
add
les
lods
popf
dec
sub
pop
fbstp
test
xor
ret
rorb
dec
shl
pop
scas
aad
in
add
push
sbb
andb
fsubr
cmp
add
test
jbe
lods
sbb
adc
nop
xchg
stos
jg
inc
push
leave
gs
pop
add
cmpsl
dec
adc
dec
jge
outsl
jle
fiaddl
pop
cld
jmp
ja
cltd
mov
ret
arpl
mov
jge
sbb
out
add
adc
xchg
and
mov
xchg
mov
test
cmp
adc
adc
shl
or
push
je
nop
cmpsb
imul
fistpl
pop
je
xchg
cwtl
nop
gs
mov
leave
je
mov
xorl
enter
or
mov
mov
ret
sub
sbb
pop
fs
add
adc
xchg
jb
fwait
jns
out
lahf
add
fcmovb
mov
cmpsl
pop
jecxz
mov
lret
sub
or
loope
mov
das
je
cwtl
add
jo
lock
mov
cmp
or
sbb
stos
and
adc
sub
push
push
push
cmp
mov
jnp
rclb
je
mov
leave
jl
mov
jg
mov
mov
sarl
divl
je
pop
js
rep
mov
cmp
lods
lock
rep
push
cmp
jl
cld
sbb
std
pop
mov
sbbb
add
pop
cld
and
add
or
popa
arpl
in
lcall
aam
fstpt
inc
adc
push
lea
push
mov
cmp
push
add
nop
add
adc
fisubrl
push
sub
mov
mov
add
mov
push
jae
test
in
inc
and
imul
push
pop
adc
jb
int3
shl
pop
sub
push
call
sete
pcmpgtd
mov
cmp
push
mov
fnstenv
adc
cmpsb
inc
or
cmc
inc
faddl
adc
sub
or
mov
push
sbb
jbe
cs
mov
mov
sub
mov
daa
pop
inc
add
sub
mov
int3
test
and
and
add
jle
cmpsb
mov
push
jmp
push
pop
push
push
int
push
or
out
ljmp
lcall
cmpw
jne
out
mulb
dec
add
pushl
and
and
adc
in
add
add
inc
lret
mov
push
pusha
lea
mov
and
dec
push
test
cmp
jae
cmpb
sbb
je
pop
out
push
dec
sub
idivl
jnp
cmp
jbe
cmp
cmp
mov
or
iret
xor
cli
test
xlat
sbb
jmp
shl
gs
sub
cmc
rcrb
mov
insb
je
into
mov
pop
push
or
int
adc
adc
add
sub
sbb
fwait
out
lods
inc
cmp
mov
imul
sub
add
aad
sbb
orl
adc
insl
jmp
xor
mov
push
paddsb
sbb
xchg
es
pop
icebp
mov
jg
lea
pop
adcl
pusha
push
dec
lret
popl
out
dec
and
mov
jbe
adc
mov
add
shlb
fnstenv
cld
imul
push
push
xchg
call
dec
push
rclb
insb
inc
test
ja
testl
or
cld
mov
movsl
ss
and
cld
je
push
or
pop
lret
pop
movl
outsl
sbb
ret
lret
push
push
out
jbe
call
sub
in
pop
sbb
hlt
push
je
data16
push
mov
add
and
push
mov
sbb
push
sub
arpl
and
sbb
insb
push
gs
push
mov
xchg
mov
mov
dec
xor
mov
shl
jg
dec
push
add
rep
mov
stos
mov
pop
xor
imul
add
sbb
mov
cltd
jle
pop
mov
push
or
arpl
jmp
data16
out
rclb
mov
push
jnp
add
pop
imul
sub
sbb
dec
xor
push
fists
and
shr
sub
dec
out
xchg
pop
or
fimuls
inc
cltd
inc
loope
inc
dec
push
js
cmp
mov
leave
test
jmp
xchg
icebp
clc
jae
insb
cmp
out
jecxz
pop
in
jecxz
mov
add
sti
mov
cmp
jbe
mov
and
ret
and
int
push
inc
jbe
ja
ja
in
arpl
loop
xor
cli
xor
and
ret
cltd
jmp
push
ret
push
adc
mov
outsl
fnstsw
mov
inc
inc
and
data16
sub
je
pop
jle
pop
and
je
pop
je
xor
daa
adc
xchg
jbe
pop
out
add
ja
decl
ja
cmp
ja
lea
add
add
sub
pushl
push
jmp
inc
jmp
neg
jle
js
pop
sub
jmp
mov
and
pushf
mov
fbstp
popa
jb
jmp
dec
jbe
pop
adc
fucomi
incb
or
inc
add
aad
movsb
mov
pop
xor
mov
pop
jae
loope
xchg
sbb
inc
sbb
push
push
or
sbb
add
and
loop
orb
add
test
js
nop
xlat
hlt
inc
add
jbe
out
xchg
xor
sub
punpckhbw
inc
movsb
popf
dec
push
stos
in
inc
lret
add
pop
mov
outsb
hlt
inc
hlt
push
xor
add
jae
lods
xchg
shll
or
pushf
xchg
mov
iret
clc
pushw
sbb
or
mov
call
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
cld
add
push
dec
popa
jle
popa
insb
jne
fninit
fbstp
cwtl
fcompp
sub
mov
or
push
cld
ja
outsb
mov
add
pushf
sahf
in
xor
mov
inc
adc
sbb
data16
push
push
mov
jo
adc
pop
push
pop
add
jge
fs
add
pop
push
push
mov
sbb
jns
cmpb
je
cld
push
mov
add
jne
mov
or
add
xchg
xor
bound
pop
mov
daa
adc
loop
lret
into
push
jae
sbb
sub
mov
or
lret
fnsave
cmpl
jl
push
inc
adc
outsb
cld
ja
push
mov
adcb
sbb
mov
testb
dec
sarb
cmp
cli
out
shlb
sub
call
sbb
sub
ja
mov
out
dec
push
sarl
cmp
pop
stos
and
ret
or
or
add
adc
push
push
std
push
cmp
je
clc
add
js
add
add
mov
push
addr16
sub
push
fcoml
mov
xchg
pushl
sti
insl
mov
mov
movl
add
icebp
jmp
pop
sbb
es
mov
ret
sbb
sub
das
inc
cwtl
mov
je
mov
inc
add
fisubs
or
lods
jl
pusha
aaa
movb
xor
in
fstps
mov
or
pusha
add
ja
mov
in
je
push
popf
je
imul
xchg
ss
pop
mov
mov
push
in
inc
fmuls
fs
inc
out
ss
inc
xchg
pop
adc
and
loop
ss
ret
shrb
mov
jmp
fwait
lret
dec
pop
add
xchg
jg
je
cmp
push
sub
fisttpll
sub
dec
jmp
add
mov
aas
add
je
jmp
cmp
cmp
outsl
fldt
and
add
cmp
cmp
inc
jmp
mov
jmp
mov
push
mov
jmp
mov
jmp
bndldx
jmp
mov
add
outsb
std
mov
jmp
mov
out
lret
cmp
test
or
gs
outsb
ret
add
leave
js
pop
je
sub
or
movsb
outsb
shll
cmp
push
or
call
mov
aam
xlat
fsubr
or
jge
cmp
or
jg
or
in
fstps
ret
and
popa
xchg
or
scas
int
or
sbb
adc
mov
ficomps
sbb
cmp
jne
mov
sub
cmp
or
subl
adc
xchg
sarl
mov
dec
test
jo
add
xor
mov
insl
jae
sbb
and
in
jbe
xchg
pop
mov
rcrb
pop
mov
add
sti
pop
mov
xor
sahf
mov
repz
add
inc
mov
repnz
pop
cmp
jg
movl
or
mov
adc
dec
mov
loop
mov
movb
mov
xor
pop
mov
add
mov
mov
add
mov
fnstcw
push
adc
inc
jg
jnp
mov
mov
clc
in
out
adc
fldcw
push
shr
dec
mov
or
jle
ja
xchg
daa
cld
mov
inc
bound
outsl
fildl
ja
add
mov
mov
leave
ljmp
xor
push
xlat
aaa
aam
inc
cmp
adc
cmp
sbb
mov
add
and
push
push
push
add
sbb
push
cmp
pop
fs
std
sub
cltd
imul
fs
jge
xchg
or
cmp
sarl
push
cmpl
add
mov
adc
rorb
aad
out
shlb
jne
movsl
adc
movsb
and
sbb
and
adc
rorl
add
add
adc
add
jo
adc
sbb
sub
add
inc
adc
lods
pushf
adc
mov
mov
fildll
jne
sbb
sahf
lret
divb
push
and
cmp
sbb
push
push
jbe
jo
xor
cmpb
aaa
lock
popa
pop
cmp
icebp
mov
ds
cmp
es
jmp
pop
jmp
movl
jl
incl
mov
or
cs
pop
stos
jb
mov
adc
sbb
add
or
fucomip
cmp
lock
jne
jmp
and
inc
jg
sbb
push
sub
and
mov
pop
test
lods
outsb
or
push
add
mov
xchg
cmp
xchg
dec
sbb
or
call
jle
push
add
loopne
push
adc
pop
cli
lods
adc
movsb
inc
add
adc
pop
mov
add
es
movb
test
mov
xchg
stc
mov
mov
lahf
mov
pushf
jle
pop
rcrb
lret
push
mov
mov
cmp
fcompl
xor
mov
push
cmp
stos
mov
dec
add
add
je
aad
mov
jmp
inc
add
icebp
mov
shr
cs
push
mov
fnstsw
scas
or
pop
pop
pop
sbb
popa
out
mov
dec
aas
pcmpgtd
xor
jns
fldt
cld
add
out
js
mov
mov
adc
adc
lods
adc
popa
inc
test
imul
cmp
inc
cmp
je
jbe
inc
push
cmpb
rorl
inc
mov
outsb
adc
cld
cmc
and
fnstenv
push
pop
pinsrw
in
inc
ja
clc
inc
jo
lret
mov
xchg
lret
push
xor
fadd
or
or
or
ret
jmp
adc
or
iret
cli
es
jne
push
pop
jg
or
inc
ja
mov
add
divb
dec
jmp
xchg
dec
addr16
sbb
pop
inc
dec
dec
mov
jmp
or
or
xchg
dec
pop
inc
sbb
ja
pop
lea
jmp
pop
hlt
pop
andl
rolb
imul
pushl
cld
sub
ja
add
push
sub
mov
pop
dec
je
in
add
mov
jae
or
add
or
dec
adc
add
pop
mov
xchg
outsl
and
cmp
cmp
jne
push
adc
mov
out
add
and
sbb
out
out
mov
xor
sub
shr
or
add
push
clc
inc
iret
mov
cmp
mov
in
jns
insl
ret
test
je
push
incl
mov
xor
adc
cwtl
cmp
mov
or
dec
inc
mov
rcr
adc
addr16
sub
pop
icebp
out
or
mov
or
dec
jl
cmp
jge
sub
mov
cmp
clc
xchg
push
mov
jmp
inc
insb
mov
pop
test
ret
pop
inc
mov
pop
outsb
jl
xor
mov
push
jle
ret
sarl
and
stc
add
lea
fwait
out
mov
add
shlb
inc
cmp
fwait
mov
push
rorb
dec
mov
push
inc
push
notl
adc
xor
sbb
repz
das
ds
pop
ret
shll
or
adc
je
mov
push
and
pop
ss
mov
or
loopne
int3
pop
fadd
or
mov
jmp
mov
adcb
xor
pusha
xorb
icebp
jecxz
push
mov
mov
or
inc
testl
cmp
jmp
imul
push
mov
movsb
lea
subb
loop
adc
cmp
adc
sub
jg
and
cmp
pop
addr16
pop
sub
inc
cmp
and
je
mov
cmp
cmp
and
testb
xchg
cmp
cmp
out
lods
or
clc
jmp
or
mov
adc
out
jmp
push
mov
mov
jbe
or
add
subb
adc
pop
mov
call
xchg
and
popa
adc
xchg
add
sub
aad
push
inc
xchg
clc
adc
hlt
inc
sbb
fcmovnbe
mov
jbe
xchg
sub
cmpsb
imul
mov
jbe
test
pop
mov
mov
dec
sti
sub
inc
add
or
adc
jae
adc
mov
std
jno
addr16
sbb
or
outsb
adc
jns
xor
cmpsl
and
repz
ds
xor
sub
lock
fidivl
dec
sbb
sbb
jns
xor
jmp
jno
adc
jbe
or
mov
or
xor
aas
sahf
dec
daa
test
xchg
imul
or
cmp
pop
jle
pop
test
rorb
mov
bound
mov
subl
cmp
stos
cmp
mov
sub
pop
clc
lahf
and
pop
jnp
cltd
or
sbb
data16
cmp
adc
sub
ljmp
mov
test
push
ud2
sbb
cmp
cmp
inc
inc
and
loopne
xlat
pop
sub
add
lea
xor
add
in
movsb
ja
jg
mov
call
repnz
call
dec
push
lock
aam
std
dec
push
lea
push
push
out
or
mov
lock
mov
cmp
bndstx
fsubs
cld
xor
shll
test
sub
cmp
into
add
ds
mov
movsb
out
and
pop
nop
xor
shl
add
aam
outsb
mov
pop
sub
std
fildl
jae
add
add
xchg
sbb
lock
xor
add
dec
mov
clc
int3
sbb
or
cmp
fldcw
xlat
or
repnz
in
xchg
jp
je
cmpsb
or
mov
sbb
and
add
or
clc
add
xor
mov
and
leave
out
adc
push
mov
call
mov
mov
dec
inc
push
sbb
rolb
add
mov
add
sub
jo
or
mov
test
sbb
or
fdivrp
mov
mov
push
mov
cmpsb
je
test
jne
fs
jle
add
cmp
sub
cltd
add
push
add
mov
ret
mov
mov
sub
paddusb
and
jecxz
cld
mov
pop
lds
push
shlb
mov
das
mov
ds
movsb
fildll
xor
and
aas
or
push
jb
inc
mov
push
imul
dec
push
insb
pop
sbb
leave
mov
nop
inc
push
mov
test
inc
push
sbb
fs
xchg
je
jo
xor
and
dec
pop
in
or
inc
dec
cmc
add
rolb
outsl
xchg
sbb
pop
mov
pusha
add
sbb
pop
pop
push
push
sbb
dec
dec
inc
fs
inc
push
inc
cmp
nop
inc
push
sbb
sub
push
sbb
and
sbb
sbb
sbb
or
add
leave
inc
push
add
add
and
in
orl
call
xor
and
aam
xor
and
inc
dec
push
mov
push
sbb
mov
sbb
test
inc
xchg
fdivr
xor
push
xchg
ret
icebp
inc
xchg
cmp
dec
pusha
clc
inc
nop
lret
push
enter
aaa
fs
inc
fs
mov
pop
pop
cmp
xor
cmp
cwtl
inc
pop
xor
cltd
adc
and
loopne
int3
mov
pop
mov
les
jae
iret
js
jl
ds
repnz
cld
test
inc
cmp
mov
jns
in
nop
dec
nop
out
sahf
xchg
pop
cwtl
push
pushf
js
mov
inc
sahf
add
nop
test
cmp
mov
mov
testl
outsb
mov
icebp
cs
insb
dec
inc
jb
popa
je
push
outsl
outsl
insb
push
je
push
outsb
popa
jo
push
sbb
in
add
decb
je
imul
je
xchg
int
sbb
dec
push
or
ljmp
fs
jb
arpl
jae
gs
outsl
jb
add
or
xlat
pop
enter
push
insl
xchg
sub
ds
dec
outsl
fs
xor
movntps
pop
push
sbb
cmp
adc
push
push
xchg
inc
push
mov
jb
icebp
nop
pop
mov
sbb
adc
inc
cmp
xor
daa
inc
push
adc
xchg
cwtl
sahf
mov
xor
push
inc
mov
scas
pop
stc
adc
repnz
inc
enter
into
leave
leave
jbe
push
or
adc
scas
cli
cmp
add
push
pop
sbbl
hlt
push
adc
mov
rorb
cmp
sbb
sub
jb
cli
lcall
mov
lcall
imul
inc
and
pop
mov
int3
and
into
es
aam
popa
mov
xchg
mov
popf
ja
adc
leave
pop
pop
cs
jb
pop
repz
add
sbbl
in
inc
loope
mov
inc
cmpsb
in
mov
dec
mov
sbbl
in
push
mov
pop
mov
push
rclb
rol
inc
cmpsb
in
stc
inc
repnz
push
enter
pop
nop
and
pop
xchg
sbb
xor
lock
jb
push
push
dec
xchg
mov
dec
in
mov
shl
sbb
pop
pop
dec
xchg
fadds
shlb
fsubl
loopne
sub
nop
insb
in
jns
in
in
adc
add
mov
pmulhuw
nop
enter
notl
add
dec
jns
in
or
or
sub
adc
in
xchg
sbb
push
and
add
and
in
nop
out
pushf
sub
es
push
xor
test
mov
jne
out
or
add
je
inc
popa
and
popa
insl
gs
adc
enter
insb
inc
js
sub
xor
jg
mov
outsb
cmpsw
insl
adc
outsb
pop
inc
insl
jo
js
in
je
push
adc
outsb
addr16
and
push
jne
mov
mov
ucomiss
popa
insb
imul
insl
inc
sbb
push
aas
arpl
popa
jo
gs
mov
jbe
sub
jbe
add
xor
gs
push
push
pop
jbe
add
sbb
cmp
data16
test
sub
andl
mov
aad
pop
int3
pop
dec
xor
in
xor
and
in
pop
push
out
sbb
jb
dec
shlb
shl
shlb
adc
cmpsb
call
and
not
and
or
mov
fstpt
ret
mov
adc
rorl
shll
mov
adc
sbb
mov
push
mov
mov
shr
mov
data16
lret
shl
or
mov
xchg
aam
adc
cmp
div
inc
jno
add
mov
adc
xor
or
addb
incl
test
jbe
and
mov
inc
xor
popa
incl
shl
or
adc
push
sub
and
dec
jne
adc
ret
test
jbe
mov
and
mov
inc
mov
dec
or
andl
pop
adc
mov
dec
jne
pop
xchg
test
and
out
adc
stc
fisubrl
test
lea
lea
sbb
stos
mov
mov
cmpsb
push
or
mov
or
inc
pop
push
or
inc
out
or
in
push
stos
jg
ss
push
jmp
mov
sbb
or
push
mov
call
mov
xor
cmp
pop
cld
adc
jo
jne
mov
mov
sbb
mov
std
in
push
push
fisttps
leave
lahf
mov
pop
sbb
scas
cmc
addr16
decb
movb
repnz
test
add
jg
cmp
cwtl
subb
lahf
sub
scas
testl
sbb
pop
dec
mov
in
xchg
cld
and
nop
imul
cwtl
std
jae
jg
push
mov
cmpsb
pop
cld
gs
and
mov
and
mul
das
daa
xchg
lods
xor
push
and
mov
push
pop
pop
es
jb
lods
sbb
push
xchg
cld
sbb
pop
adc
jg
in
inc
push
adc
add
out
fadds
stc
jae
sub
sti
shl
aas
push
repnz
out
loope
push
pop
aaa
xchg
cld
cltd
xchg
ret
sub
add
iret
cmp
adc
inc
push
inc
xchg
aas
push
repnz
clc
mov
cld
cltd
cmp
add
dec
mov
sub
cli
ljmp
adc
mov
xchg
loopne
dec
popa
popf
insl
push
cld
in
loopne
pop
push
sub
xor
loopne
inc
ljmp
sub
iret
fimuls
pusha
dec
mov
dec
inc
jo
mov
iret
push
jle
sub
daa
mov
and
aam
add
lahf
xor
sbb
cmp
aam
dec
in
lahf
sub
xor
jl
pop
and
push
mov
les
and
hlt
cld
in
and
ds
or
ljmp
inc
gs
xchg
ds
push
push
xchg
in
in
adc
mov
push
decb
ds
ret
pop
pop
gs
push
repnz
popl
out
cmp
xchg
jmp
rcrl
test
dec
jle
outsl
pop
loopne
dec
decb
xor
inc
add
push
mov
andb
testl
sub
xor
rcl
sub
shll
jmp
adc
adc
out
xor
push
add
or
or
fistpl
mov
or
pop
sti
or
loopne
addr16
cli
stos
int
push
or
fdivrl
mov
push
xor
lahf
push
add
add
mov
xor
fsubr
dec
insb
or
cmpsb
inc
adc
call
mov
loop
add
cmp
jbe
incl
pminsw
adc
ss
cmp
ja
lea
mov
aad
out
out
jg
mov
lea
lods
mov
sbb
mov
inc
aas
cmp
ja
stc
sbb
mov
sub
mov
push
mov
push
stc
cmp
jg
inc
lea
mov
and
sbb
or
add
cwtl
inc
and
mov
pop
or
mov
push
or
mov
dec
movsb
jnp
mov
push
lea
sub
pop
movsb
pop
push
cmp
jl
mov
jne
ljmp
arpl
inc
mov
mov
push
movsb
sub
push
sub
sbb
je
aaa
stos
in
in
add
out
lock
add
push
sbb
mov
xor
in
lock
dec
repz
rol
push
addl
mov
inc
setg
sbb
xchg
xor
sbb
popf
xchg
std
and
inc
dec
jne
movsb
cs
push
add
sbb
int3
aas
and
pop
fwait
xor
fsubs
xor
xchg
aaa
dec
leave
orl
sub
orl
pop
fisttpll
or
push
pop
or
mov
push
or
popa
jb
push
mov
sti
pop
js
int3
mov
bound
push
jb
jns
gs
pusha
xor
or
pop
or
push
push
pcmpeqb
enter
pop
jbe
outsl
jo
inc
jbe
jae
push
xor
int
sti
push
arpl
or
or
outsb
js
mov
stos
rcll
add
imul
or
popa
imul
pop
fldt
std
dec
inc
push
push
inc
xor
xor
notb
outsb
outsl
pop
imul
unpckhps
push
or
jbe
pushw
lods
xchg
sbb
insb
push
jo
popa
je
fdivrs
add
paddsw
fdivl
out
mov
dec
testb
outsl
mov
jae
dec
or
jp
bound
fwait
mov
jb
push
inc
outsl
mov
ret
mov
fs
push
mov
push
insl
insl
or
push
jns
test
cmp
mov
dec
fnstenv
inc
dec
dec
push
push
pop
push
mov
jbe
dec
gs
sbb
or
lds
in
outsl
in
pand
or
insl
daa
dec
arpl
ja
adc
mov
vmptrld
mov
addr16
arpl
jo
ret
adc
jne
mov
aaa
lret
push
or
jb
addr16
push
icebp
int3
arpl
mov
dec
imul
inc
jae
test
pusha
adc
outsb
dec
pop
shll
inc
push
jns
push
repnz
imul
out
imul
imul
dec
dec
adc
fs
in
int3
push
sti
imul
insb
outsl
popa
arpl
mov
mov
inc
push
cmovno
and
rorb
inc
mov
mov
xor
adc
inc
nop
or
xchg
pop
popf
mov
mulb
jle
bnd
xor
fs
pop
dec
dec
push
dec
add
xorl
loopne
sbb
pmaddwd
xchg
or
dec
xor
sbb
jae
aad
cltd
in
inc
sbb
imul
xor
inc
lcall
movzwl
dec
aaa
mov
or
inc
data16
xchg
je
jbe
or
outsl
dec
outsb
jbe
jmp
popf
mov
je
bound
btr
pop
inc
jnp
jecxz
mov
je
je
xchg
into
xchg
sbb
test
pop
push
adc
jno
dec
imul
inc
xchg
insl
arpl
aas
scas
inc
or
jb
daa
dec
outsl
es
dec
push
inc
jle
ljmp
jae
cmp
in
in
addr16
or
push
jae
imul
cmc
push
or
fs
pavgw
jae
add
or
insl
iret
dec
mov
push
inc
outsb
outsb
inc
pop
inc
jecxz
jns
insb
arpl
jae
shrb
outsl
push
out
adc
shlb
jmp
pop
push
dec
dec
outsl
imul
gs
pcmpeqb
pop
mov
adc
inc
jmp
inc
ja
adc
in
insb
jo
pop
stos
dec
and
imul
push
inc
stos
add
nop
pop
mov
or
imul
or
movsb
outsl
addr16
mov
fldl
popa
insl
pop
push
push
and
cmp
insb
cmpsl
inc
lods
imul
and
jbe
jb
and
inc
imul
mov
jmp
imul
push
imul
jle
push
jae
jbe
and
dec
jnp
out
movd
ret
imul
xchg
sti
arpl
push
js
pusha
shlb
outsl
pop
jne
or
and
push
sbb
clc
xor
js
sahf
xor
int
sub
mov
sub
stos
sbb
addr16
addr16
ja
imul
add
adc
pop
ja
addr16
fsts
arpl
insb
jns
or
sub
pshufw
fmull
rcll
stos
js
xchg
push
arpl
loop
inc
jp
in
sbb
popa
or
loop
adc
dec
stos
test
gs
ja
inc
ja
int
add
adc
sub
lds
outsl
inc
xor
jae
je
lret
sbb
fldt
orl
inc
ret
in
inc
dec
push
sub
out
xlat
jo
pop
adc
mov
fnstenv
push
and
repz
push
cmp
jno
jae
and
sti
or
inc
push
jb
aam
rclb
push
mov
loope
imul
fisubs
imul
xor
add
pop
ret
out
xor
insb
popa
ret
jne
sub
cmp
xor
sub
inc
pop
repz
lods
pop
dec
or
push
packssdw
in
xor
sub
outsl
jne
imul
ret
push
xor
inc
or
cmp
pop
xor
mov
push
in
push
loopne
xor
mov
and
aaa
or
cmp
xor
jbe
daa
fldt
pop
xor
lahf
ss
or
popa
add
xorl
mov
pop
mov
push
ss
ss
ret
dec
xor
jne
add
into
push
cwtl
xor
rcl
sbb
xchg
aas
add
xchg
pop
je
cmp
sti
insl
mov
dec
push
imul
add
cmp
test
jp
imul
imul
push
sub
xor
cwtl
daa
ja
je
mov
jo
dec
movsb
cmpsb
dec
dec
pop
repnz
outsl
xor
xor
js
push
bound
xor
ja
jno
pop
ret
jle
ds
aaa
xor
or
xor
fcmovu
sub
or
push
or
jle
fisubrl
shlb
xor
cmp
xor
out
jnp
outsb
aaa
ja
cmp
jg
lret
sahf
test
mov
mov
rorl
es
js
mov
mov
xor
pop
push
dec
add
ja
loop
dec
inc
ret
mov
cmpsl
xor
jecxz
adc
sub
xor
sbb
xor
mov
imul
in
or
mov
sub
jns
or
sbb
pop
aaa
outsb
jecxz
sbb
mov
out
lahf
xor
push
dec
ljmp
outsl
and
dec
push
xchg
cmp
sub
dec
repz
xor
pusha
insl
pop
push
dec
fdivs
fmull
cmp
or
xlat
cltd
pop
add
movsl
outsb
add
mov
fs
xor
shll
inc
test
pop
in
stc
popa
imul
mov
outsb
movsb
xorb
mov
loope
cmp
insb
addr16
add
sbbl
imul
ljmp
lret
mov
pop
xchg
scas
andl
cmp
aaa
mov
pop
outsl
xchg
sbb
jo
and
cmp
fmull
and
dec
imul
ja
les
sbb
xor
je
in
or
cmp
adc
adc
xorb
push
cmc
ja
cmp
bound
push
imul
adc
inc
xor
xlat
jecxz
sbb
es
jmp
addr16
xor
xor
mov
xor
inc
mov
and
push
stos
mov
lret
adc
out
add
adc
sub
mov
jmp
aaa
pop
cmp
dec
arpl
or
rclb
cli
outsb
addr16
in
nop
or
and
dec
adc
cmp
cmp
xor
dec
jnp
dec
jbe
ret
mov
aaa
leave
mov
fs
aas
cmp
imul
jmp
call
or
icebp
movsb
ss
ret
push
fcmovb
xor
mov
test
pop
sbb
push
insl
leave
sahf
in
imul
aaa
jmp
adc
inc
xor
negb
arpl
dec
mov
push
aaa
imul
push
xor
bound
adcl
cmp
addr16
adcl
pop
outsl
imul
adc
push
dec
mov
xlat
addr16
xor
insb
imul
pop
add
mov
and
movnti
jno
pop
mov
shll
xor
insl
xorl
pop
inc
js
push
sbb
scas
sub
jne
lcall
aaa
and
dec
mov
mov
xorb
sub
lea
test
cmpsl
lret
lcall
xor
xlat
pop
sahf
sbb
xor
addr16
nop
sub
imul
jnp
adc
ja
xchg
sub
js
ja
stos
or
les
imul
bound
jns
scas
sbb
arpl
loop
fisttps
xor
pop
popa
mov
or
xlat
xchg
icebp
test
cmp
das
inc
or
or
mov
das
pop
jae
sub
pop
lcall
outsb
shrl
ljmp
jne
in
mov
ja
test
xchg
add
pop
xchg
xor
imul
lea
daa
add
mov
xchg
stos
dec
cmp
or
jb
push
ja
or
xchg
inc
test
rcll
mov
lea
jge
xor
gs
js
xchg
test
and
dec
or
jne
cmp
sbb
out
test
xchg
iret
adc
addr16
mov
das
jp
mov
popa
bound
pop
rcrb
pop
iret
popf
xchg
dec
cmp
rcrb
stc
outsl
mov
and
popf
sti
add
pop
adc
xor
sbb
cs
jae
pop
jp
rcr
add
jae
inc
or
nop
jo
ja
imul
adc
sarl
aaa
lea
mov
lods
cmp
ret
jb
mov
shrd
imul
jbe
cmp
xchg
inc
aaa
sti
aaa
sub
pusha
pop
imul
test
outsl
lock
daa
je
fdivs
pop
cmp
xor
xchg
xchg
jp
inc
cmp
fwait
int3
cwtl
and
jne
add
aas
je
xchg
xor
sbb
cmpsb
repnz
pop
pop
cmp
dec
leave
cmp
sub
adc
int
xor
aaa
cmp
popf
add
or
gs
ret
jbe
jns
pop
sub
cmp
sbb
ljmp
cs
in
popa
add
outsb
outsb
push
mov
or
xchg
inc
aas
int3
push
or
scas
xchg
out
xchg
jo
and
dec
pop
lods
or
xor
add
imul
ljmp
cwtl
sub
addr16
popa
jbe
and
xchg
add
in
add
data16
mov
cmp
pop
jae
sti
cmp
push
cmp
add
sub
lods
jne
pop
xchg
lods
add
daa
mov
push
xor
out
xchg
xor
lods
or
ret
inc
jl
push
bnd
mov
push
push
cmp
pop
frstor
pop
dec
mov
stos
sbb
pop
dec
jb
data16
rdtsc
mov
mov
ss
add
addr16
mull
fs
ficoml
pop
push
dec
mulb
sarb
or
xchg
movsb
mov
xor
popa
int
jecxz
out
cs
imul
test
shlb
roll
dec
insl
stos
or
and
xor
pusha
mov
xor
jnp
rcll
mov
rcrb
or
xor
sbb
arpl
or
sbb
outsb
cmpsl
call
bound
jg
fcmovu
inc
xor
add
fsubs
imul
and
je
and
jo
ss
ret
xor
pusha
cmc
xor
aam
xor
ret
push
add
mov
in
sub
push
mov
cs
mov
fs
sti
gs
gs
dec
xor
arpl
cmp
sub
test
jno
add
pop
pop
mov
imul
bound
add
popa
das
ret
ja
xor
lods
hlt
mov
xchg
and
adc
cmp
in
imul
or
adc
pop
enter
aaa
ja
ret
sub
arpl
inc
add
pop
cmp
sub
cmpsl
xor
jbe
jg
pushw
lcall
shrl
sbb
xchg
cwtl
jg
xchg
mov
or
je
sub
or
cmp
jae
or
add
shrb
js
xor
sub
in
pop
test
lods
and
pusha
or
ja
add
add
xor
loope
xlat
imul
cs
sub
out
sbb
add
sbb
imulb
loopne
mov
add
mov
jnp
cltd
fildl
imul
adc
mov
popf
rcrl
cmp
or
add
cmc
fiadds
fwait
xor
addb
mov
xchg
decl
ja
addr16
xor
jbe
jb
popa
jno
imul
push
mov
aam
push
jmp
and
stc
cmc
xor
xor
dec
inc
jmp
pop
das
add
push
mov
mov
loopne
shrl
mov
cmc
mov
shll
test
add
dec
push
xor
pop
je
aas
insb
xor
dec
ret
arpl
jae
cmp
mov
outsb
or
lret
and
int
add
xor
and
add
xor
pop
sti
mov
xorb
xor
ss
sbb
mov
jge
and
imul
and
jbe
inc
andl
pop
adc
cmp
and
das
inc
adc
lds
xor
cmp
pop
sbb
das
jb
push
lea
popa
inc
adc
fsubrp
cmc
jne
imul
pop
adc
xchg
cmp
jp
and
or
pop
arpl
adc
dec
pop
insb
inc
sub
std
jne
jno
test
dec
cmp
mov
mov
jp
xor
sub
jae
or
int3
inc
jle
dec
mov
jae
cmp
jecxz
pop
jp
xchg
pop
xor
xor
or
test
mov
sub
pop
imul
aam
pop
pushf
fiaddl
pop
or
cld
js
nop
test
inc
xchg
add
dec
push
jnp
push
xchg
pop
sub
je
out
push
arpl
loope
outsl
xchg
or
jne
ss
popa
leave
outsb
jne
or
addb
xor
jb
sub
adc
adcb
nop
fistpll
pop
iret
xor
das
cmp
pop
xor
adc
cltd
mov
inc
das
loop
mov
js
xchg
push
jg
dec
push
sub
das
cwtl
add
xchg
aad
pushw
pop
daa
cmp
or
fsubl
jecxz
sub
sbb
xlat
pop
insb
nop
lods
dec
cmpsb
fwait
idivl
es
xchg
jp
js
dec
mov
mov
ss
and
outsl
xor
nop
fiadds
fwait
adc
stc
sub
cmp
adc
jne
loop
xchg
test
mov
or
xor
push
test
and
ret
pop
xor
add
push
jo
and
dec
test
xor
sbb
inc
mov
roll
cmp
dec
aam
xchg
mov
sbb
loope
inc
out
aas
jnp
add
sbb
add
lods
pop
loopne
scas
test
jns
aaa
xor
inc
dec
lcallw
dec
push
test
in
insb
cmpsl
cmpsl
das
mov
pop
rorb
xchg
xor
xchg
pusha
or
daa
fisttps
push
sbb
and
pusha
or
or
mov
mov
cltd
xchg
fwait
add
scas
and
arpl
out
gs
xor
mov
lcall
pop
push
aaa
jno
push
jmp
pop
dec
test
cmovle
stos
jo
movsl
mov
dec
outsb
mov
add
cmp
daa
dec
sbb
emms
jns
xor
xor
sub
xchg
adc
push
sub
cmpsl
mov
xchg
jo
mov
lcall
and
clc
xor
mov
cwtl
add
xor
jle
push
push
jle
push
mov
bound
adcl
mov
iret
or
adc
jns
push
ret
sbb
inc
mov
mov
or
pop
mov
inc
inc
aas
stc
sbb
jns
jno
nop
push
or
push
loop
or
cmc
xchg
ret
add
fdivl
pop
adc
mov
js
ss
ja
cmp
or
push
into
xchg
jp
xchg
mov
clc
mov
cmp
aam
notl
push
xchg
mov
inc
sub
lcall
jmp
fcmovbe
loop
out
lret
jmp
clc
mov
pusha
ljmp
sub
mov
cmc
add
aad
push
mov
cli
sub
sbb
insb
fsubs
push
lret
sti
push
les
mov
cmp
test
inc
icebp
push
xchg
es
xor
test
outsb
mov
and
push
into
outsb
jg
insb
mov
test
push
or
push
jmp
adc
mov
pop
fisubrs
push
push
add
ljmp
xor
xchg
test
push
push
sbb
xor
sub
xor
push
add
mov
pop
sub
xchg
or
in
jbe
and
aas
mov
es
cmp
lea
adc
add
xor
add
pusha
inc
dec
ret
mov
xor
push
sub
adc
push
add
in
scas
fsub
add
add
inc
inc
test
add
sub
aam
add
adc
je
jb
js
inc
add
inc
mov
sub
test
inc
push
and
sbbl
inc
repnz
adcl
nop
lods
xchg
in
pop
cmp
repz
adc
fucomip
and
push
test
mov
sbb
dec
jp
rclb
mov
mov
and
jne
sub
or
add
push
cmpsb
or
push
push
mov
add
incl
jge
inc
sub
fldl
dec
jo
push
add
lds
or
repnz
daa
push
and
test
cli
add
xor
sbb
push
clc
sbb
and
and
push
test
push
push
inc
stos
cmp
mov
shlb
imull
xchg
jmp
fs
mov
jl
inc
mov
test
sub
mov
addb
push
xchg
call
ret
cmpb
inc
dec
int
cld
sub
mov
jmp
das
xchg
and
cmp
in
jbe
cmp
push
in
adc
mov
pop
fmuls
in
jmp
adc
jge
pushf
adc
and
test
pop
stos
rorl
jnp
dec
push
xor
mov
jge
cmp
or
mov
js
sbb
mov
dec
in
jne
xchg
cli
mov
cmp
or
add
add
test
loop
cmpb
or
cld
and
cld
insb
sub
sub
sub
lock
cli
gs
sub
rolb
and
outsb
leave
aaa
aaa
in
jnp
aaa
and
gs
lcall
lret
mov
into
fsubs
aam
call
shl
enter
loopne
imul
pop
int3
xor
out
push
rcrb
shl
call
inc
cs
les
lahf
mov
mov
mov
pop
mov
mov
mov
push
or
mov
loop
sub
call
or
mov
mov
add
mov
addb
ret
mov
xchg
xchg
testl
outsl
add
cmp
addb
inc
outsl
insl
insl
out
aam
sub
xor
orb
mov
dec
outsl
outsl
imul
add
fs
ja
cmc
rolb
sub
hlt
bound
push
mov
insl
push
add
nopl
dec
scas
mov
lds
addr16
and
dec
int
or
push
sub
testb
dec
sbb
sbb
popl
pop
sub
call
xor
adc
pop
fcomi
jns
cmp
cmp
ficompl
adc
mov
adc
movb
fdivrs
jbe
add
outsb
inc
jl,pt
mov
inc
push
les
push
scas
add
out
shrl
pop
sub
mov
aas
test
cmp
lcall
cmp
jmp
inc
sbb
cli
pop
xor
lock
pop
and
loopne
insb
mov
and
dec
push
or
add
cmp
pop
or
pop
es
push
inc
mov
mov
out
out
mov
lahf
fwait
or
cmc
jmp
mov
aam
rolb
adc
mov
or
ret
push
cmp
xor
dec
adc
cmpsb
enter
ja
imul
pop
or
or
pop
sub
add
into
mov
fistl
test
xor
mov
movsb
faddl
out
shll
cmp
pop
aad
insb
or
sete
addr16
paddq
leave
leave
pop
aad
mov
clc
sub
repz
or
mov
out
fldl
ja
roll
mov
ja
je
mov
fsubs
sbb
jl
mov
movl
adc
movsb
adc
or
leave
out
jbe
and
adcl
xor
fldl
or
jle
jge
dec
mov
adc
inc
lea
jp
int
loop
pop
test
lds
lods
mov
leave
mov
push
and
imul
or
jo
push
mov
mov
pop
adc
enter
mov
adcb
nop
nop
and
mov
sbb
leave
mov
enter
test
sbbb
adc
xchg
xchg
dec
sahf
jl
jl
or
cwtl
inc
loope
mov
nop
je,pt
xor
les
pop
test
mov
jo
insb
or
mov
dec
insb
jns
adc
sbb
or
lcall
mov
int3
mov
and
fs
gs
fsubl
mov
sub
jle
leave
enter
std
pop
pop
test
into
pop
jge
sahf
mov
and
push
or
cltd
jbe
dec
adc
add
icebp
mov
popf
movsb
mov
loop
leave
xor
insl
adc
fs
iret
pop
lret
stc
pop
scas
sub
int3
fsubrs
sub
or
arpl
enter
adc
mov
aas
je
sbb
xorb
gs
out
jb
and
mov
fwait
mov
sbb
sbb
and
outsl
insb
jne
and
sub
add
shlb
cwtl
enter
mov
cwtl
stos
and
sub
mov
testl
repnz
test
js
mov
adc
jl
orb
xchg
scas
rcrl
nop
push
adc
lcall
xor
lock
ss
aam
or
push
mov
mov
xchg
popf
fs
pop
pushf
pop
loopne
mov
nop
adc
sub
nop
mov
pop
mov
sbb
mov
pop
fldcw
mov
mov
scas
stos
addb
lods
push
test
je
gs
mov
ja
push
mov
push
lds
jmp
mov
sub
sahf
dec
lret
js
xor
nop
xchg
movsl
sahf
enter
inc
dec
loopne
subb
movsb
test
pop
aam
pushf
or
loopne
or
or
add
daa
pop
sub
js
adc
pop
xor
fcoms
and
jo
adc
push
ret
push
add
pop
and
pusha
fiaddl
pop
enter
clc
sbb
and
inc
add
push
and
in
cltd
and
in
test
push
xor
mov
leave
fs
pop
pop
xchg
xchg
pop
push
daa
add
pop
int3
insb
and
test
or
mov
pushl
cmpl
add
sarb
dec
cltd
push
pop
test
test
push
dec
pop
flds
pop
mov
mov
inc
es
dec
inc
in
xchg
or
dec
inc
push
in
cmp
fs
mov
fs
mov
cmp
mov
roll
xor
jb
or
pusha
hlt
mov
bsr
jnp
lea
sub
push
test
mov
sarb
mov
les
mov
sub
iret
mov
mov
mov
xor
rorl
push
dec
mov
jo
loop
or
rcr
in
pop
xchg
gs
or
or
inc
in
imul
out
fistps
and
pusha
sbb
insb
cmpl
add
jl
jmp
or
inc
cmp
das
scas
mov
lahf
adc
dec
addr16
sub
cs
xor
loopne,pt
icebp
adc
inc
inc
jb
lds
scas
add
push
fistpl
inc
popa
push
mov
mov
fs
aas
inc
mov
and
loopne
imul
bound
inc
idiv
xchg
mov
pop
add
lods
push
mov
push
cmp
push
add
or
sub
into
add
xor
add
mov
or
push
pop
push
push
fcomp
fcoml
call
fcom
mov
mov
mov
adc
arpl
addb
xor
push
call
xlat
gs
dec
sub
lods
jge
xor
add
fcompl
pop
push
push
pop
out
mov
cs
add
cmp
lret
cmp
js
adc
mov
add
pop
repz
test
fmul
je
mov
adcl
push
sbb
xchg
cld
adc
adc
push
mov
xlat
xchg
jge
or
mov
jge
test
sub
jo
in
nop
or
mov
sbb
sub
pop
dec
xchg
pop
call
sbb
cmp
das
push
add
xchg
adc
aas
fidivl
or
fwait
dec
mov
xchg
xor
push
sub
hlt
rclb
bswap
test
pop
mov
mov
cmp
sub
pusha
jmp
test
and
add
frstor
add
adc
dec
mov
sub
adc
sub
je
outsb
xor
push
gs
jne
push
sbb
addr16
lret
add
insl
adc
sarl
xlat
mov
movl
xor
sbb
popa
pop
mov
mov
sbb
psrad
popf
adc
and
sbb
mov
int
mov
cmp
scas
mov
inc
incl
sub
ds
loop
mov
lahf
ljmp
sbb
push
insl
push
xor
cmp
cmp
aam
push
mov
inc
maxps
stos
cmpsb
stos
in
outsb
jb
mov
pop
and
in
mov
xchg
sbb
adc
pop
int
fstpt
ds
push
daa
mov
enter
mov
nop
inc
sbb
lea
and
sbb
popf
adc
in
popf
sbbb
and
sahf
xchg
mov
je
cmpsb
pop
push
mov
scas
in
ljmp
jne
idivl
cmp
add
hlt
outsl
inc
add
fsubrl
shll
lock
xchg
inc
setne
inc
je,pt
ja
lock
test
and
mov
sbb
sbb
lea
add
ljmp
je
lahf
mov
sbb
arpl
addr16
insl
outsb
pusha
popa
cld
sub
jbe
js
jp
in
loope
mov
lret
or
sbb
push
sbb
lret
repnz
adc
push
orl
add
fistl
mov
jge
mov
mov
mov
stos
mov
test
fnstenv
lock
and
xchg
mov
fcoml
mulb
jnp
xor
into
lea
inc
or
hlt
insl
loope
imul
inc
push
cmp
int3
sub
and
fs
es
and
mov
push
ret
jo
push
inc
or
fdiv
dec
jb
mov
loope
imul
in
je
mov
mov
add
and
adc
push
push
add
data16
mov
adc
xchg
inc
add
jne
push
jbe
pop
fs
mov
push
movsb
mov
adc
ret
aam
push
push
and
xchg
xor
cmp
push
mov
inc
inc
xor
lret
pop
mov
jle
jno
adc
mov
pop
or
xor
sub
fs
movsb
hlt
xor
mov
addb
bound
mov
in
loopne
push
mov
add
sub
out
xchg
lods
nop
mov
insl
or
stos
rcrb
cmp
adc
or
cs
cwtl
add
scas
addl
push
jmp
hlt
int3
insl
outsb
mov
add
stc
loop
jnp
sbb
or
aam
outsb
sbb
orb
xchg
stos
adc
add
inc
dec
aaa
movsl
sub
sti
das
dec
je
add
mov
mov
xor
fs
and
xor
dec
imul
jge
pop
cmp
jo
decl
arpl
jae
add
push
dec
and
jmp
test
movsl
push
mov
sbb
pop
dec
inc
inc
dec
dec
dec
inc
pop
incl
sti
call
push
inc
dec
push
pop
push
push
inc
push
pop
pop
dec
inc
push
push
inc
push
pop
push
jo
cmp
dec
dec
push
push
daa
push
adc
andb
jmp
cmp
leave
mov
mov
push
adc
push
cmp
ja
gs
mov
inc
inc
cmpsb
jmp
jns
adc
mov
and
fwait
add
test
and
int3
enter
test
cmp
push
add
movl
mov
cmp
sbb
pop
mov
mov
mov
insl
adc
mov
rclb
in
lds
mov
je
push
mov
cs
sarb
jne
mov
jmp
mov
push
sbb
fcoms
mov
push
inc
cmpsl
mov
nop
lods
sbb
outsl
leave
xchg
cmp
cmp
xchg
cs
cmpb
mov
sbbl
or
lret
orb
lret
push
xlat
mov
push
lret
mov
mov
sbb
orl
shl
xchg
hlt
inc
pop
cmp
push
add
fsubp
iret
mov
fsubrl
in
fsubrl
in
mov
sbb
sbb
mov
mov
cmp
pop
test
mov
icebp
test
js
sarb
test
insl
inc
data16
int3
mov
mov
enter
bswap
mov
jbe
andl
les
sbb
sub
rclb
mov
or
and
enter
push
mov
mov
pop
jbe
mov
mov
xchg
mov
lods
popa
jbe
subl
sub
in
gs
test
jmp
es
sahf
movsb
cld
movsb
pop
pop
nop
mov
push
pushf
and
inc
cwtl
sub
cwtl
add
fs
cs
nop
nop
mov
in
fcoml
push
mov
push
mov
cmp
push
test
test
sub
pop
adc
and
insl
insb
pop
inc
mov
jbe
sub
test
xchg
js
pmaxsw
and
je
pusha
seto
mov
or
mov
mov
sbb
push
push
add
insb
gs
sub
push
out
cld
mov
xor
cmp
push
jnp
mov
cmp
add
insb
or
mov
sub
push
xchg
and
or
cmpsb
sahf
xor
add
sbb
pop
or
mov
enter
sub
into
nop
pop
pop
pop
mov
xor
flds
mov
pop
jb
dec
push
dec
sub
or
dec
psubusb
mov
cmp
dec
dec
xor
xchg
out
and
xchg
lret
cs
inc
sub
sub
sbb
xor
ss
cmp
mov
and
and
and
jbe
sub
xor
jb
push
xor
xor
cmp
lock
add
cld
sub
popa
dec
mov
lock
jecxz
or
and
xchg
lret
mov
cs
dec
sbb
cmp
lock
cs
dec
sbb
sbb
inc
xchg
xchg
adc
mov
ret
dec
adc
adc
or
dec
or
in
and
xor
mov
dec
add
cs
add
mov
incb
cld
je
push
pusha
adc
rorb
icebp
int3
add
wrmsr
in
jecxz
push
pop
test
decb
xchg
adc
mov
sub
xchg
mov
add
jg
rcrb
jmp
hlt
mov
in
ljmp
loop
leave
sub
invd
lods
lcall
mov
or
std
dec
mov
in
cmp
or
and
sbb
xor
jg
fadd
sub
xchg
fcompl
and
jb
jbe
sub
fmul
out
int3
sbb
mov
aam
aam
or
flds
shlb
popa
inc
jb
rorb
and
int3
leave
and
es
enter
or
mov
mov
sbb
cmp
dec
js
pop
push
pop
fmuls
sbb
and
in
lea
add
mov
rol
xchg
and
mov
xor
mov
mov
jae
push
nop
add
push
test
xchg
xchg
dec
test
lods
in
xchg
add
inc
xchg
jp
xor
pushf
xor
movsb
lret
scas
cwtl
xor
mov
xchg
xor
nop
je
movsb
lret
push
dec
xor
dec
xchg
fs
xor
xchg
in
js
jl
cmp
je
mov
jb
and
lret
inc
js
cmp
outsl
mov
push
or
xchg
dec
push
insb
push
xchg
mov
jne
pop
cmp
mov
pop
push
xor
mov
push
jb
fldenv
push
mov
dec
pop
jb
add
push
push
ss
popf
xor
cmp
and
je
cmp
fisubrs
push
mov
dec
sahf
dec
cmp
mov
insb
dec
cs
dec
out
inc
sahf
out
les
mov
pop
repnz
add
push
add
jns
sarl
jmp
in
xchg
rorl
and
fcmovnu
adc
ret
sub
or
int
js
mov
mov
cmp
das
push
negl
or
outsl
sarb
sub
fadd
test
pop
ret
xor
rcll
test
lret
insl
mov
sahf
mov
xchg
pop
mov
pop
jno
sbb
sbb
loope
cmpsb
lea
mov
stos
jnp
xchg
or
inc
sbb
adc
mov
adc
shlb
push
ljmp
push
and
cmp
jp
xor
fs
pop
inc
sub
shl
sub
aaa
comiss
pop
sub
pop
addr16
xchg
sbbb
xor
inc
js
int3
fidivs
imul
jmp
aaa
arpl
add
mov
mov
lret
jo
in
cmpb
adc
jo
bound
daa
lahf
pop
imul
inc
cltd
in
outsb
test
xchg
sub
les
sarb
leave
cli
cs
aam
cmpsb
mov
mov
out
inc
sbb
ret
loop
shll
or
cmp
pop
inc
fs
daa
adc
dec
or
dec
dec
inc
push
or
cmpl
dec
sbb
pop
or
mov
cmp
add
add
loope
mov
gs
outsl
ja
scas
or
xor
pop
das
or
inc
aad
sub
aas
sti
sti
push
imul
sbb
data16
popa
or
cltd
xorb
inc
popa
and
push
cmp
sub
push
imul
mov
imul
and
inc
jae
aaa
testb
inc
mov
xchg
pop
push
push
inc
dec
xor
or
or
mov
push
clc
pop
adc
inc
xor
inc
es
inc
sti
sub
sub
sub
and
xor
xor
cmp
arpl
aam
lret
xchg
or
arpl
inc
subb
ret
pop
and
mov
xchg
adc
inc
fs
outsb
arpl
pop
push
imul
push
jne
adc
sub
aas
mov
push
mov
mov
xor
push
jb
testl
inc
cld
fdivs
addr16
gs
ret
jne
dec
imul
in
scas
movsl
pop
mov
mov
adc
in
xor
sub
fistl
inc
mov
inc
inc
pop
inc
jns
sub
cwtl
inc
fstpt
jnp
xor
add
jo
arpl
fildl
add
xchg
push
stos
gs
ret
daa
cmp
mov
xor
inc
xor
pop
stc
das
xor
cmp
xor
xor
cmp
orb
inc
insb
popa
das
inc
pusha
fistpl
xchg
jne
dec
sbb
sbb
out
xchg
xor
scas
and
lcall
les
and
es
icebp
jmp
mov
adc
push
pop
sub
sbb
mov
push
and
pushf
mov
hlt
fwait
arpl
fisttpll
movl
hlt
add
hlt
or
dec
ja
les
stos
and
insl
xchg
hlt
sbb
or
test
push
xor
enter
or
xchg
push
shll
adc
leave
push
mov
sbb
jo
lds
icebp
inc
cmovs
jp
xor
fistl
sub
cmpsb
shlb
push
dec
fmuls
mov
pushf
xchg
inc
sets
pushf
xor
xchg
push
cmpsb
sub
test
pusha
cmp
mov
lds
aam
mov
mov
or
or
add
in
hlt
pop
fwait
xchg
adc
icebp
pushl
dec
dec
inc
aas
and
jecxz
xor
mov
push
adc
push
cmc
or
or
dec
inc
popf
mov
sbb
sahf
out
ja
push
rolb
mov
pop
inc
nop
sarb
mov
mov
shll
and
and
push
pxor
int
pop
add
sbb
pop
popf
sub
lock
cmp
add
pop
dec
adc
cmpb
push
pusha
insb
in
add
enter
jg
sbb
push
push
xor
cld
sbb
fcomp
and
xchg
sahf
sub
loop
and
sub
mov
xor
add
dec
loopne
add
adc
es
jl
sbb
add
add
xor
scas
in
gs
mov
jle
push
inc
enter
fs
sbb
enter
inc
mov
mov
and
test
inc
lds
add
rcrb
inc
ret
sub
xor
cmp
dec
sub
nop
mov
add
mov
and
daa
and
and
std
cmp
mov
push
inc
pop
add
xor
jne
cmp
out
add
and
adc
sbb
lods
lods
sub
and
aas
clc
pusha
cmp
sbb
add
pop
or
test
xchg
mov
fs
dec
outsb
mov
mov
movsb
push
pushf
add
add
pushf
cwtl
xor
mov
cwtl
std
pop
add
inc
xchg
add
mov
inc
push
nop
adc
mov
lret
mov
xor
mov
lea
nop
nop
pop
xor
mov
push
cwtl
pop
pop
test
es
pop
test
or
scas
subb
out
mov
je
pushf
add
xchg
mov
pusha
mov
push
enter
or
or
pmaddwd
jb
push
push
inc
xchg
cltd
gs
adc
sub
test
push
cmp
jecxz
pop
leave
test
out
push
adc
add
adc
dec
mov
and
cs
stos
mov
fs
dec
subl
mov
cmp
or
cmp
ss
dec
push
cmp
sbb
xor
pop
xchg
push
mov
xor
sarb
and
sub
or
inc
test
rcrb
cmp
sub
js
add
jbe
xchg
andps
inc
inc
scas
push
push
aad
inc
mov
cmp
popl
push
or
inc
or
fs
adcb
fs
addr16
loop
pop
je
aaa
mulb
mov
jno
pusha
cmpsl
push
sub
push
popa
je
xchg
insb
inc
cmp
and
mov
insb
cmovg
pop
je
pop
sub
add
ja
xor
push
addr16
js
insb
outsb
sbb
and
mov
xor
stc
pop
stos
push
push
out
push
dec
rolb
push
jl
es
das
mov
jns
push
out
push
rclb
jg
xor
adc
nop
adc
inc
add
mov
ds
cmp
inc
sub
xor
add
dec
or
lcall
int3
add
fs
mov
dec
insb
xchg
pop
mov
and
mov
test
shll
sbb
mov
pop
ss
push
dec
pop
shl
xchg
sti
pushf
add
pusha
pop
adcl
ds
mov
or
repz
cmp
fldcw
xchg
adc
jo
xchg
adc
sar
push
mov
and
pop
dec
and
int3
aas
movl
mov
pop
xchg
stos
arpl
test
sub
mov
push
sbb
leave
xchg
dec
sbb
add
ficoml
call
mov
scas
sbbb
jnp
mov
and
mov
fsubl
test
dec
pop
push
rolb
jl
xor
fiaddl
mov
xor
xor
aam
gs
add
rorb
dec
ss
jne
add
push
xchg
aad
mov
test
enter
xchg
add
adc
pusha
sbb
mov
inc
call
xor
sub
aad
push
cmp
pop
mov
sti
bound
push
test
dec
rcr
sbb
mov
mov
out
pop
push
lock
and
aam
xchg
stc
mov
mov
leave
stos
add
mov
or
inc
lods
lods
mov
mov
test
test
dec
push
insb
ret
and
test
push
jns
cmp
xchg
adc
enter
mov
add
mov
fs
nop
jmp
fldl
dec
or
sbb
subb
and
mov
sbb
cwtl
or
ja
dec
loop
insb
negb
paddusw
lret
subb
xor
leave
and
pop
push
in
jo
jo
fs
enter
insb
xchg
insb
insb
sub
mov
and
stos
sbb
pop
mov
fists
decl
push
ss
insb
adcl
es
lret
and
push
adc
out
mov
inc
shll
dec
dec
mov
pop
dec
sbb
aas
leave
insl
hlt
dec
dec
jnp,pn
and
loopne
adc
mov
fstl
pop
mov
mov
cld
add
pop
shr
add
movb
jbe
inc
and
mov
xor
stos
dec
or
push
mov
adcb
mov
repz
inc
sub
sbb
test
add
xchg
dec
stos
and
xchg
push
jb
sub
icebp
adc
popl
leave
pop
pop
sbb
lcall
pusha
inc
pop
jne
push
sub
sbbl
or
adc
pop
outsb
mov
push
adc
and
int3
enter
enter
fcomp
fxch
loopne
jecxz
in
das
mul
push
nop
add
movzwl
mov
int
add
jne
push
sbb
lods
gs
mov
je
xor
xor
ja
sbb
inc
inc
inc
inc
xchg
sbb
lock
andb
sub
imul
dec
xlat
sbbb
xor
push
shll
mov
lods
mov
fnstenvs
add
and
imul
imul
imul
dec
shrl
sub
dec
pop
shll
mov
test
int3
fsubr
clc
xor
out
or
and
cmp
xor
rorl
pusha
jo
sarl
pop
shrl
mov
xchg
pop
pop
pop
xor
shll
xor
push
pop
shll
nop
pushf
dec
shll
fsubr
lcall
adc
xor
lcall
insb
cmpsb
imul
imul
dec
shrl
and
push
shll
jl
dec
shll
int3
fcomps
pop
out
pop
pusha
shll
inc
dec
push
dec
shll
test
pushf
test
mov
rcl
in
pusha
mov
xor
sbb
cmp
pop
insb
xor
shll
test
sarl
dec
sarl
mov
xor
shll
inc
push
pop
push
je
nop
pushf
test
shll
loopne
xor
jmp
arpl
sbb
shll
pop
fs
shll
xchg
mov
xor
les
rcr
fnstenvs
fs
cmpsb
imul
shll
jo
jl
xchg
mov
lods
mov
mov
push
call
or
xor
shll
sub
dec
shll
js
dec
shll
mov
lcall
gs
and
dec
divl
dec
cmp
push
mov
imul
mov
lcall
pop
cmp
xor
data16
imul
imul
imul
xor
faddl
call
daa
cmp
jecxz
push
pop
xor
imul
inc
add
cmpsb
jmp
lods
insb
cld
iret
push
push
push
add
cmp
insl
lcall
add
imul
jmp
imul
shll
mov
jmp
mov
pop
int3
add
loopne
imul
push
add
and
imul
dec
xlat
popf
or
jo
jl
mov
or
adc
call
inc
hlt
pop
imul
and
cmpsb
imul
cmpsb
imul
lcall
dec
mov
lcall
sub
dec
shll
inc
dec
pop
pusha
shll
mov
insb
mov
insb
aaa
mov
dec
rcl
loopne
clc
or
shll
inc
dec
xor
shll
fs
mov
xor
rcll
shll
clc
add
cmpsb
imul
cmpsb
imul
fldenv
xchg
das
mov
shll
fdivl
arpl
pop
imul
outsb
cmpsb
imul
sbb
xor
cmpsb
imul
cmpsb
imul
int3
fsub
in
ret
fldt
clc
add
adc
lret
fcomi
cmp
dec
jo
cmp
sbb
cmpsb
jmp
insb
js
imul
je
cmpsb
int3
fsub
jo
jo
rcrl
sub
xor
rorb
dec
inc
dec
add
jl
jmp
mov
xchg
pop
mov
xlat
mov
dec
rcr
jno
xor
jno
jb
sbb
cmpsb
imul
cmpsb
imul
lcall
dec
mov
lcall
sub
dec
push
pusha
shll
nop
pushf
dec
shll
fsub
je
shll
hlt
and
je
pop
ja
je
sub
cmp
inc
push
shll
jl
dec
shll
int3
aam
imul
je
jne
dec
shll
sub
dec
shll
je
dec
shll
mov
xor
shll
fsub
lock
imul
cmpsb
imul
imul
mov
int3
fdivs
jbe
jbe
imul
and
lcall
fs
fstp
cmpsb
imul
dec
shll
shl
lock
shll
add
and
dec
shll
push
xor
mov
dec
sarl
js
rcrl
sbb
xor
dec
shll
pusha
insb
shll
js
jne
jns
nop
cmpsb
jmp
aam
into
xor
ja
jns
jns
jp
lcall
inc
dec
pop
imul
imul
imul
dec
shll
xor
push
shll
jl
xor
and
pushf
test
mov
imul
jl
shll
inc
push
xor
shll
insb
js
nop
shll
int3
outsb
shll
add
push
xor
shll
and
cmp
shll
js
dec
shll
mov
xor
loopne
clc
add
imul
imul
imul
cmpsb
imul
shll
cmpsb
clc
add
adc
dec
shll
push
pop
xor
shll
je
mov
lods
mov
xor
aam
call
imul
sahf
imul
cmp
dec
shll
xlat
pop
add
lea
inc
inc
pusha
lea
stc
add
inc
add
inc
dec
fldl
add
xor
push
repz
test
add
add
inc
add
inc
add
inc
insb
mov
leave
or
lsl
pop
push
add
add
pop
or
or
add
pop
add
jae
add
inc
and
sbb
cltd
int
insl
pop
inc
add
add
or
mov
inc
and
dec
push
cs
fmull
or
pop
push
lea
push
mov
dec
push
stc
mov
mov
mov
mov
int
mov
push
pop
nop
nop
sbb
aas
sbbl
jae
and
and
and
add
mov
xor
and
in
adc
adc
add
pop
inc
sub
mov
jmp
add
sbb
xor
adc
or
fwait
xor
or
aaa
add
or
push
add
xchg
insb
shrb
push
addb
imul
pop
jo
add
inc
cs
nop
cld
add
pop
in
testl
xor
and
inc
inc
push
inc
sti
in
test
ss
rolb
push
xor
roll
pusha
cmp
or
pushl
jo
cmp
shlb
push
inc
gs
call
push
jb,pn
insb
outsl
arpl
nop
ret
inc
daa
in
adc
inc
imul
test
add
sub
add
push
add
and
loopne
or
enter
aam
xor
and
int3
enter
orl
add
mov
and
mov
xor
and
stc
and
daa
pop
repnz
gs
inc
and
sub
gs
cld
dec
test
incl
jmp
add
clc
std
jle
pop
push
gs
fscale
incl
xchg
std
incl
std
pushl
std
bound
add
inc
cmp
adc
gs
cld
jmp
and
jmp
stc
inc
enter
jmp
nop
mov
pop
jb
lods
sti
jmp
or
push
xor
incl
stc
cmpl
incl
sti
pushl
repnz
add
sti
jmp
push
inc
pushf
addl
inc
xor
and
shlb
dec
scas
xchg
pop
jno
lcall
into
fcoml
imul
dec
xchg
inc
adc
fbld
stc
es
cmp
addb
push
push
jle
cmp
leave
pusha
ja
stc
adc
pusha
mov
test
iret
in
adc
cmp
pusha
adc
clc
jmp
dec
leave
andl
cmp
xor
outsb
scas
pop
ret
jmp
inc
cs
sbb
cltd
and
inc
data16
mov
clc
jmp
scas
inc
repnz
xchg
out
mov
jg
and
mov
fs
leave
inc
gs
notl
jne
fxch
fcoml
jecxz
negl
popa
ds
adc
xchg
dec
xor
data16
leave
add
pushf
pop
gs
add
add
inc
gs
repz
test
dec
test
lret
jmp
leave
inc
jb
gs
decl
lahf
or
call
and
pushl
sti
jmp
lcall
decl
stc
adc
andb
call
data16
sbb
dec
repz
xchg
data16
std
jmp
in
enter
jmp
mov
decl
stc
add
inc
lock
jmp
daa
cmp
cld
jmp
xchg
cld
nop
dec
inc
clc
call
incl
xor
and
sub
mov
lcall
jmp
aas
stc
and
decl
pop
repnz
gs
leave
gs
call
incl
mov
dec
xchg
pop
pop
inc
gs
clc
pushl
adc
lcall
inc
add
and
jb
push
inc
inc
enterw
data16
leave
adc
push
or
roll
and
xor
sbb
and
mov
inc
mov
pushl
loopne
out
xlat
std
lock
add
jle
ret
or
cmp
gs
dec
inc
cwtl
nop
gs
cwtl
xchg
sub
jo
xchg
and
dec
cs
add
add
in
jb
gs
mov
add
inc
cwtl
leave
xchg
pop
sahf
xchg
or
pop
inc
push
clc
jmp
push
jns
data16
cmpb
arpl
popa
or
scas
xchg
add
gs
idiv
jmp
icebp
mov
sbb
out
mov
loop
sbb
repnz
pop
enter
data16
xchg
aas
andl
add
jmp
rorb
mov
adc
sti
cmp
push
inc
xchg
data16
data16
push
jb
data16
in
stc
inc
enter
pop
idiv
ljmp
dec
psubw
or
xor
gs
jmp
pop
test
and
jmp
mov
ds
adc
cli
decl
inc
repz
jge
into
out
mov
jle
leave
sub
pop
repnz
jle
add
add
push
pusha
pop
and
and
test
leave
mul
daa
add
pusha
mov
stc
and
pushl
adc
mov
adc
and
lret
and
and
jo
cmp
jae
jmp
adc
xor
and
clc
jo
out
jmp
cmp
scas
xchg
decl
dec
daa
and
enter
jmp
daa
fwait
and
jb
daa
data16
pop
cmovo
sti
adcb
mov
sub
xchg
adc
pop
enter
push
pusha
pop
in
pop
pusha
adc
cld
nop
adc
adc
ljmp
cmp
test
push
and
nop
pusha
adc
add
jmp
cmpb
push
mov
adc
out
dec
daa
in
adc
adc
out
push
xchg
xchg
inc
push
sub
or
add
sub
jmp
lret
testl
xchg
jl
std
fsubrs
into
testb
inc
ljmp
sub
pop
outsb
sub
and
and
call
shrl
xor
std
push
add
push
pusha
stc
call
push
cmp
pop
fsub
jmp
inc
cs
xchg
sub
test
cld
jmp
add
add
sub
jns
push
and
sub
mov
call
add
std
mov
data16
sub
iret
sarl
push
daa
jbe
aas
mov
pusha
jae
add
syscall
cmp
repnz
hlt
cmp
sub
les
cmpl
mov
jnp
or
sbb
out
sub
pop
sbb
inc
or
mov
clc
das
pusha
mov
inc
inc
mov
call
push
test
or
adc
pop
or
jl
sbb
or
imul
push
and
loope
pop
pop
fsubrl
nop
xchg
dec
inc
push
push
push
enter
push
je
push
sbb
add
pusha
bound
bound
inc
shl
push
push
stos
loope
les
sbb
push
and
push
add
iret
in
push
push
push
fwait
loope
jmp
sub
push
pusha
push
or
mov
stos
pop
call
sub
push
add
jmp
mov
mov
add
add
cwtl
mov
adc
push
xchg
inc
push
pusha
pusha
mov
call
push
cmp
jmp
addb
lcall
hlt
pushl
add
add
stc
and
hlt
ljmp
hlt
mov
pop
sti
repz
cmp
pushl
inc
int3
clc
jle
call
inc
ds
pop
movsb
decl
mov
mov
add
addb
in
and
dec
push
inc
mov
aas
pusha
add
add
or
push
rdmsr
push
mul
sbb
add
push
sbb
movsb
xor
inc
jle
je
ljmp
in
push
sbb
sbb
add
cwtl
jl
idiv
jmp
pop
and
ljmp
std
ljmp
xor
loope
lea
jns
add
outsb
xor
xchg
pop
inc
sbb
icebp
adc
fcmovnbe
arpl
xlat
insb
data16
pop
pop
jne
xor
jmp
roll
repnz
inc
add
or
in
and
sbb
pusha
add
xor
repnz
adc
call
insb
nop
push
sub
bound
lods
pop
call
fcoml
adc
stc
mov
sub
jmp
fdivr
pushl
out
nop
xor
call
adc
ss
psubsb
jne
mov
mov
push
jno
and
sbb
mov
enter
and
enter
repnz
incl
fsqrt
inc
pop
mov
and
sti
cli
incl
mov
idiv
mov
sbb
aaa
and
and
or
sub
lods
adc
and
cmp
daa
sbb
enter
sub
sbb
and
ret
jae
or
dec
leave
test
jle
cmp
adcl
std
mov
in
arpl
mov
mov
je
xlat
add
add
lock
cmpsl
sti
nop
add
or
sar
cld
jbe
ret
push
sbb
testb
mov
add
daa
ret
and
in
xchg
pop
inc
push
pop
cmp
in
push
pusha
inc
subw
pusha
jecxz
pop
or
enter
push
push
xor
and
and
and
push
lahf
mov
xchg
in
and
dec
push
push
aas
sub
repnz
aaa
jbe
sbb
pop
push
mov
pop
push
push
ss
jmp
lods
cmp
jns
je
lcall
js
sbb
jns
jmp
call
out
hlt
movl
mov
mov
nop
cmp
cmp
and
dec
insl
repz
cmp
pop
pop
pushf
and
xor
insb
dec
mov
iret
aaa
movsb
mov
repnz
adc
add
add
repnz
or
xorl
pusha
push
pop
pop
movsb
lods
orl
and
dec
cmp
out
insb
jg
sub
dec
jl
hlt
cmpsb
clc
push
test
mov
push
mov
and
call
xor
sub
cld
out
jno
test
orb
push
mov
adc
and
outsl
xchg
sub
mov
inc
stos
mov
cmp
xchg
ret
sbb
cmp
inc
push
inc
mov
data16
mull
add
inc
dec
ror
mov
or
pop
stos
lods
les
insb
fisubl
arpl
stos
sbb
xor
lret
adc
sbb
xor
mov
lret
add
mov
xor
add
mov
mov
or
mov
loop
jle
add
jmp
and
add
std
mov
push
clc
cli
xchg
cli
add
loopne
loopne
shrb
push
push
lods
out
stc
adc
call
and
jne
jge
add
stc
ss
packssdw
fisubrs
push
lea
divb
mov
data16
mov
sub
sbbl
add
cmp
repz
jg
out
les
je
test
mov
pop
nop
dec
das
outsb
je
lods
out
leave
dec
mov
and
push
and
cmp
stc
xor
adc
or
inc
or
mov
std
cmpl
add
cmp
lahf
stc
in
dec
pop
push
pop
add
lea
xor
mov
dec
sbb
fs
mov
push
adc
push
push
add
dec
add
enter
fsubrp
sbb
add
mov
data16
push
xchg
insl
push
subl
and
xor
insl
or
inc
cmp
jb
repnz
or
imul
inc
sbb
pop
call
jge
or
sub
pop
inc
push
in
add
xchg
repnz
xor
sbb
or
jl
imul
jmp
dec
push
push
lea
mov
jg
sbb
out
gs
push
out
cld
call
imul
dec
out
xchg
outsl
leave
lcall
cmpb
cmpsl
mov
sbb
cld
adc
ss
xor
js
and
ss
pop
ss
cmpsb
enter
dec
cmp
in
nop
shlb
mov
test
hlt
adc
dec
mulb
insb
inc
push
or
sbb
fiaddl
daa
test
scas
int3
mov
fstl
jbe
mov
xor
or
mov
adc
je
or
mov
loopne
jl
repz
xchg
idivb
lock
test
mov
mov
add
adc
fsubr
pop
push
pop
je
dec
es
dec
sti
ror
push
or
inc
push
data16
daa
imul
jne
pop
jmp
inc
xor
inc
addl
pop
in
and
pop
call
or
pop
push
fdivr
jae
insl
addr16
add
cld
xor
inc
xchg
fs
pop
inc
add
bound
add
lahf
aam
add
int3
or
js
adc
xchg
jo
adc
sub
int
insb
add
insb
adc
push
dec
xor
xor
je
pop
pusha
fwait
and
jo
xchg
xchg
xor
xlat
sahf
add
shll
jb
add
xor
xor
shll
jl
pushf
stos
into
ss
shll
fwait
or
xlat
pushf
insl
push
jae
cmp
pop
shll
add
pop
xor
aam
add
or
cmpsb
pop
sbb
inc
push
xchg
push
cmpsb
jl
cmpsb
mov
insb
pop
clc
gs
gs
cmp
push
shlb
shll
movsl
add
push
imul
scas
insb
sbb
xchg
gs
fisubrl
sub
or
inc
insb
aas
imul
das
or
inc
mov
or
xor
push
push
inc
mov
cmp
push
insb
ss
jne
ss
adc
aaa
adc
dec
imul
mov
add
movsl
in
ret
sbb
push
shrl
mull
or
or
loopne
jo
sbb
push
xchg
push
outsb
push
ja
or
jae
and
fwait
mov
ret
xchg
fs
cmp
sti
outsb
or
bound
fs
pusha
cmp
jp
test
adc
subl
sub
push
sbb
cmp
fadds
adc
outsb
inc
in
orl
fs
imul
push
pop
inc
inc
into
sahf
cmp
push
or
mov
je
arpl
inc
xor
fdivr
insl
test
jle
add
fisttps
gs
gs
arpl
loope
and
jno
test
arpl
mov
dec
gs
pusha
or
nop
pusha
sti
mov
cwtl
inc
pop
gs
push
or
inc
pop
mov
mov
inc
inc
inc
dec
dec
push
cs
dec
dec
and
or
adc
push
push
aad
leave
adc
push
outsl
inc
je
jno
lret
adc
mov
xorb
iret
sub
gs
push
inc
adcb
add
or
push
and
flds
add
add
sbb
xor
xor
xor
xor
xor
adc
mov
inc
xor
push
xor
bound
push
pushl
jp
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
incl
xor
xor
xor
xor
xor
xlat
xor
es
bound
jg
mov
xchg
aaa
popf
aaa
cmpsl
aaa
mov
mov
aaa
in
clc
aaa
add
or
push
cmp
cmp
cmp
push
cmp
cmp
jbe
lds
ljmp
cmp
aam
fistpll
lock
cmp
sub
cmp
arpl
cmpb
lcall
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
std
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmpb
ds
jno,pt
xchg
mov
or
and
dec
aas
push
aas
gs
insl
aas
jae
jl
stos
aas
cmpl
aas
mov
mov
aas
into
aas
aas
ljmp
xor
xor
mov
pop
ud0
pop
or
in
ljmp
xor
je
jl
loope
in
xor
xor
xor
xor
xor
xor
xor
xor
pushl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
jp
mov
ss
adc
sub
aas
aaa
jns
mov
mov
aaa
fdivs
out
sbb
outsl
clc
adc
push
cmp
jae
sarb
fnstcw
or
adc
dec
cmp
sbb
pushl
mov
cmp
pop
cmp
cwtl
cmp
cmp
cmp
cmp
packssdw
jle
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
cmp
cmp
jne
nop
cmp
iret
cmp
sbb
and
ds
jmp
jnp
test
mov
test
ds
jmp
aas
jge
mov
pop
das
mov
test
nop
cmc
repnz
cmp
adc
decl
imul
test
shlb
xor
xor
xor
xor
push
xor
jp
xchg
mov
xchg
xor
xor
xor
xor
xor
xor
xor
xor
decl
mov
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
call
xor
xor
jl
lea
mov
iret
ljmp
cld
pushl
repz
pop
sub
ss
ss
ss
bound
push
inc
jb
dec
xorb
ss
ss
ss
ss
pushl
add
getsec
sbb
sub
cmp
inc
aaa
push
aaa
gs
jb
ja
test
mov
xchg
aaa
fwait
aaa
test
lods
fcomip
ja
aaa
mov
cmpsl
fidivs
jecxz
lock
cmc
test
sbb
jg
cmp
cmp
cmp
cmp
cmp
cmp
cmpb
cmp
dec
cmp
cmp
cmp
cmp
cmp
dec
cmp
outsl
cmp
cmp
jb
ja
xchg
lods
cmp
cmp
in
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
jbe
jnp
cld
decl
cmp
or
sub
xchg
sarb
in
clc
ds
add
add
ljmp
or
adc
adc
sbb
sbb
and
and
sub
xor
inc
aas
push
aas
pop
aas
push
jo
cmp
aas
jg
xchg
aas
popf
aas
mov
aas
rorl
sbb
xor
inc
rcll
decl
and
sub
sub
mov
xor
rorb
sub
add
add
xorb
pop
add
mov
add
push
pop
xor
or
push
mov
test
pop
add
sub
cmp
aaa
mov
pop
fwait
cmp
push
push
dec
mov
mov
push
cmpsl
sbb
orl
mov
dec
out
or
sub
dec
push
incb
dec
mov
inc
adc
push
pusha
mov
mov
rolb
incb
pop
and
mov
add
int3
add
leave
sub
inc
inc
test
push
enter
jo
jb
adc
daa
orb
inc
dec
lcall
mov
int3
add
push
push
jb
pushf
pop
mov
rclb
orl
cld
cmp
xor
and
and
addb
orl
aam
adc
rolb
mov
jb
add
mov
xchg
and
sbbl
cmp
mov
mov
lods
andb
nop
test
orl
mov
xor
and
cmovg
jne
xchg
or
jne
dec
xorb
and
sub
jne
test
stos
in
jne
in
fs
jne
add
jne
cltd
or
mov
jle
nop
inc
dec
es
jne
add
in
jbe
nop
sub
nop
jbe
jne
sbb
xchg
and
dec
or
jne
sbb
and
leave
leave
jo
jne
enter
jbe
jne
sbb
enter
jne
xor
and
inc
nop
mov
cltd
in
xchg
or
jbe
mov
jne
add
and
and
sub
jbe
inc
xchg
push
cltd
fs
jbe
mov
jbe
mov
dec
push
add
out
xchg
cmpsl
jbe
jbe
push
mov
or
test
inc
scas
jne
and
push
enter
jbe
inc
enter
xchg
lret
and
jne
adc
out
jbe
jbe
enter
cltd
sbb
adc
arpl
movsb
or
dec
push
and
xchg
pcmpeqw
or
nop
jne
and
dec
jne
and
dec
scas
xchg
or
jbe
scas
in
jbe
cmc
push
inc
jb
or
jne
adc
jne
and
dec
mov
in
fs
jbe
jbe
sub
inc
cs
jbe
jns
sahf
jbe
jbe
jbe
or
fs
pop
xchg
and
or
adc
dec
stos
add
bound
mov
or
sahf
dec
in
pop
enter
pusha
rolb
pusha
mov
jb
add
dec
jb
add
add
pusha
jo
add
sbb
repnz
pusha
lahf
cmp
adc
and
push
cmp
jns
add
fs
add
andl
add
mov
push
lea
jnp
pusha
movl
ja
or
xlat
jb
jbe
mov
or
in
pop
mov
cmp
test
inc
add
add
pop
cmp
daa
lret
jle
call
cmpsb
sub
inc
andb
xlat
sub
pop
or
inc
xchg
gs
and
jle
sti
mov
call
jmp
out
jo
decl
mov
loopne
aaa
push
add
xor
adc
xchg
jl
add
add
adc
rorb
in
leave
pushl
call
or
sti
dec
jle
repnz
incl
call
add
jmp
inc
jae
sub
and
push
call
enter
aas
cmpsl
dec
leave
scas
in
incl
add
add
pusha
mov
daa
mov
push
add
add
into
cmc
jl
pop
mov
push
or
mov
inc
outsl
shr
mov
dec
sub
roll
inc
outsl
sub
pop
cmp
add
jmp
jns
and
test
and
mov
sbb
mov
dec
cmp
test
jo
jb
repnz
jmp
or
or
mov
sub
ret
adc
inc
sti
mov
and
stos
push
mov
loopne
push
js
ja
les
test
cs
call
sub
cmp
jg
add
sub
mov
rcll
add
aaa
rcrb
jmp
imul
add
ja
ss
nop
and
inc
jle
jge
lea
xor
call
sub
xor
aad
ret
and
mov
mov
out
xor
mov
xchg
jnp
idiv
add
inc
rcll
or
push
push
faddl
push
into
cmp
adc
adc
sbb
insb
das
aaa
std
imul
outsb
and
adc
in
jecxz
push
repnz
lcall
jecxz
pusha
xchg
sbb
jns
pusha
adc
inc
scas
in
pusha
jo
pusha
in
cmp
and
adc
adc
pop
leave
dec
scas
jo
pusha
jo
cltd
xchg
adcl
sahf
mov
pusha
adc
in
jb
and
adc
adc
inc
loope
das
das
nop
daa
and
or
das
mov
or
das
sbbb
xor
cmp
pop
lret
sbb
inc
pop
repnz
sub
jb
mov
xor
mov
fs
ret
sbbb
or
rclb
jecxz
dec
add
jecxz
pop
enter
jbe
repnz
jbe
jbe
jbe
cmp
test
jo
and
jbe
iret
and
jo
pusha
push
and
pop
pusha
pusha
pusha
nop
and
cmp
jbe
jb
jns
push
jb
jb
and
fistpl
faddl
lret
fistpl
push
pusha
out
stc
pop
pop
pusha
out
cmp
pusha
jo
pop
nop
sub
and
sbb
xchg
jns
repnz
out
out
xchg
mov
out
inc
andb
lcall
jo
cmp
xchg
iret
sub
lods
inc
adc
fcompl
pop
sub
and
div
out
cld
add
add
add
and
repnz
add
add
jle
pop
lcall
cld
xchg
pop
repnz
out
decl
lcall
incl
push
dec
mov
xchg
aaa
sub
add
scas
mov
jmp
in
decl
pop
nop
dec
and
jnp
cmpsl
mov
std
jg
rclb
lret
add
or
lret
repz
and
or
bound
or
sub
cmp
cmc
arpl
and
and
leave
and
cmp
stc
pushf
in
pusha
and
and
pop
enter
mov
adc
daa
cltd
nop
xlat
and
push
mov
cmc
aas
mov
cmp
mov
out
sbb
shlb
sbb
fdivrp
adc
add
xchg
inc
inc
push
pusha
jo
adcb
jo
add
xchg
lods
fwait
adc
clc
repnz
or
enter
clc
aad
cs
jo
jo
in
inc
repnz
jne
aad
sbb
cmp
aad
xlat
aad
cmp
jo
cmpl
and
xor
add
or
leave
or
pusha
mov
dec
cmp
repnz
mov
pusha
mov
and
mov
das
in
jbe
pusha
xchg
inc
push
in
pusha
jbe
pop
mov
push
jbe
pusha
das
mov
cmp
test
out
sbb
aaa
pusha
sbb
pusha
mov
push
adc
addl
xchg
nop
mov
sbb
test
inc
js
jo
nop
inc
push
insb
push
sbb
pop
inc
push
sbb
dec
jns
addr16
dec
inc
daa
leave
cmp
sarb
add
push
or
xchg
fs
push
cmp
fs
inc
dec
insb
jno
push
fs
jo
push
inc
push
fs
jo
and
mov
lock
je
js
orb
xor
sbb
ja
and
cmp
dec
outsb
lock
aas
bnd
xchg
sbbb
lock
sbbl
movsb
pop
xor
cltd
jg
mov
out
out
test
push
shll
cmp
xchg
out
or
jns
cld
adc
xchg
inc
fcomi
aas
xor
pop
mov
dec
mov
aaa
pop
push
xor
and
hlt
mov
adc
or
sub
lods
inc
rolb
or
jmp
idiv
call
mov
jle
jns
lret
mov
int
mov
push
pusha
lret
ds
mov
idiv
decl
cwtl
int
adc
jg
iret
sti
sahf
jbe
fst
sub
adc
incl
in
mov
inc
fwait
cmc
decl
inc
jo
neg
and
pusha
enter
inc
or
adc
add
enter
jg
sti
ljmp
dec
nop
pop
dec
sti
decl
pushf
mov
setbe
sub
push
adc
and
pusha
mov
inc
xchg
cli
stc
nop
in
inc
pop
or
loopne
call
fsts
mov
outsb
mov
inc
sti
cmpsl
dec
call
mov
pop
stc
loopne
incl
hlt
jmp
inc
adc
comiss
or
inc
sti
add
or
jmp
mov
push
stc
call
enter
inc
xchg
ficoml
out
nop
inc
mov
repnz
mov
xchg
inc
sbb
daa
repz
aam
mov
repz
inc
cmp
sahf
sbb
jmp
xorb
and
les
sub
subb
mov
push
add
inc
xchg
leave
enter
push
scas
int
add
sub
in
insb
hlt
stos
js
imul
mov
cwtl
mov
imul
out
fs
loopne
mov
xchg
cld
sahf
out
push
jno
add
and
hlt
out
sub
int
sahf
out
cmp
repz
repnz
je
cmpsb
mov
jns
or
or
pop
loope
call
dec
inc
sarl
stos
mov
bound
mov
dec
push
icebp
or
int3
pop
pop
or
xor
out
adc
das
add
outsl
iret
cmp
mov
mov
sub
push
pop
pusha
push
jne
lea
sub
adc
cmp
push
dec
push
sti
insb
je
xor
arpl
std
jg
imul
fadd
in
imull
daa
push
fmuls
and
in
and
pushf
dec
add
or
test
psubusb
xor
out
das
inc
or
inc
add
fnstsw
sbb
sub
xor
hlt
ret
add
shlb
push
and
lahf
adc
lock
jo
push
gs
test
mov
cmp
mov
out
cmp
lcall
es
push
in
pop
cld
mov
or
mov
call
and
cmc
jmp
dec
shl
pushf
cmc
lcall
repz
call
fsubs
and
aaa
stos
call
cmp
and
in
xchg
sbb
ror
inc
loopne
sub
out
xchg
lea
fcompl
and
call
loopne
add
out
or
pop
add
aaa
cmc
leave
dec
sahf
int
das
out
fcoms
in
out
mov
sbb
enter
add
fs
int
xchg
aam
aam
ss
jae
pop
sbb
mov
or
shr
cmc
clc
cmp
int3
sbb
int3
call
mov
dec
mov
enter
ja
ds
inc
into
jae
les
nop
dec
mov
call
ss
rolb
sbb
cmp
loopne
sar
sahf
add
mov
in
mov
mov
mov
in
xchg
int
cld
mov
in
in
lret
jae
mov
daa
jns
push
pop
mov
das
test
lahf
jbe
stc
xchg
test
aas
xor
ss
movsb
sbb
call
add
push
mov
or
jmp
test
mov
pop
pushf
sbb
fsubs
repnz
cwtl
stos
inc
dec
ss
cwtl
call
mov
fsubl
inc
decb
repnz
or
iret
dec
push
test
fs
nop
call
daa
cmp
adc
addr16
repz
add
mov
in
mov
sahf
in
orb
add
jge
sub
call
mov
lea
adc
int3
cld
sub
jmp
call
sti
mov
mov
shl
sbb
jo
sub
icebp
sbb
jo
negb
mov
and
insb
xor
xchg
inc
inc
push
mov
jmp
fs
jmp
xor
pusha
or
or
repz
sahf
iret
mov
jmp
lock
rcrb
pop
je
sub
pop
xchg
cmc
nop
movsb
sub
nop
addr16
sbb
mov
sbb
dec
push
and
fwait
iret
repz
jbe
add
lock
enter
push
push
push
lret
cmp
inc
sbb
mov
adc
dec
int
iret
add
pop
fldl2t
inc
orl
and
enter
lods
out
push
test
dec
cmp
mov
cmp
fwait
sbb
sti
and
fwait
out
jbe
dec
cmp
jmp
jb
and
aas
xor
js
inc
xor
hlt
xor
pusha
xchg
mov
sbb
xor
pcmpgtb
push
jo
imul
sub
cmp
bnd
out
and
iret
shr
jmp
dec
jmp
ret
loopne
out
or
stc
stos
out
add
xor
xchg
adc
jns
mov
jecxz
loope
jmp
push
ss
call
jmp
mov
dec
ss
ss
xor
cmp
aaa
inc
xchg
mov
fistpll
cmp
cmp
cmp
sub
xor
mov
inc
aas
pop
dec
add
iret
mov
add
addr16
mov
sub
mov
sbbl
add
ja
leave
cs
fists
nop
gs
nop
cwtl
pushf
mov
movsb
imul
fs
out
mov
fldt
add
or
cmp
pop
mov
mov
aam
movsb
or
pop
jbe
mov
faddl
pop
aas
sub
xor
cmpsb
and
ds
mov
dec
test
aas
je
dec
adc
cwtl
arpl
enter
jno
sarb
jns
push
push
aas
push
xor
push
shlb
in
and
mov
dec
bound
out
outsb
mov
mov
jbe
push
adc
sub
js
iret
xor
mov
loopne
xor
mov
pusha
jp
xor
jg
inc
jecxz
jl
sbb
call
cmp
dec
fiadds
call
sbb
cmpsl
inc
add
push
outsb
mov
add
dec
outsl
ja
fcoml
push
fidivs
bound
pop
add
stc
add
mov
sahf
and
pop
cs
push
and
popw
mov
cmp
adc
add
add
push
xchg
inc
mov
pop
push
fwait
outsb
fnstenv
jo
sub
cmp
adc
inc
pusha
movsl
mov
mov
enter
adc
lcall
inc
sub
inc
xor
jg
cmpl
andb
inc
dec
shll
xchg
test
shll
add
push
sbb
inc
push
imul
scas
mov
fldenv
in
testb
adc
add
test
push
pusha
add
je
outsb
js
test
xlat
mov
mov
shll
test
and
dec
pusha
xor
shll
xchg
dec
rcl
in
or
mov
xchg
pop
pop
xchg
and
dec
imul
cvttps2pi
adc
daa
mov
scas
dec
sbb
mov
imul
jno
push
and
push
outsl
push
adc
test
or
push
push
pop
lahf
sub
jl
cvttps2pi
or
popf
adc
inc
or
xlat
pop
inc
adc
push
push
loope
mov
bound
push
or
icebp
jb
mov
or
adc
push
sbb
sbb
jno
js
sbb
add
nop
inc
adc
sarl
pop
mov
pop
js
clts
loope
ret
in
push
jo
arpl
or
out
adc
repnz
outsl
sub
sbb
lcall
pop
pop
xchg
loope
add
or
or
adc
sbb
dec
ret
nop
push
dec
lods
scas
add
xchg
outsl
insb
loope
push
inc
insb
sbb
sbb
jl
jb
inc
mov
push
nop
add
adc
nop
inc
add
pop
ss
push
rorb
dec
mov
lcall
mov
add
add
xor
ret
push
add
mov
mov
inc
cmpsb
test
ljmp
or
xchg
mull
jg
sti
mov
xor
xor
xor
xor
xor
xor
xor
xor
jg
sub
aas
xor
push
xor
xor
xor
xor
lds
xor
xchg
xor
mov
iret
aaa
fiaddl
in
aaa
divl
add
or
and
daa
xor
movsl
stos
clc
dec
cmp
pop
pop
insb
loop
filds
cmp
cmp
cmp
cmp
jg
jmp
add
push
cmp
cmp
das
cmp
inc
cmp
pop
cmp
ljmp
jp
fwait
cmp
cmp
cmp
cmp
xchg
cmp
cmp
aas
cmp
cmp
incl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
test
cmp
inc
ds
ds
mov
jg
ds
repz
ds
pop
aas
jb
pushf
aas
movsl
push
inc
jg
aas
ret
aas
int3
aas
sarl
fdivrs
fidivrs
icebp
aas
cli
aas
adc
jg
in
sbb
push
xor
xor
push
xor
xorb
xor
rcll
lret
pop
xor
cmp
insb
xor
xor
xor
xor
cmp
inc
jmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
jg
loop
xor
pop
sti
xor
xor
xor
xor
jg
imul
xor
xor
xor
cmp
pop
xor
push
ss
sub
jmp
mov
xchg
aaa
lcall
cmp
std
cmp
ljmp
fnstcw
adc
cmp
cmp
popf
cmp
jmp
adc
adc
and
cmp
movsb
cmp
cmp
cmp
push
xchg
mov
mov
sbb
sub
mov
lret
roll
inc
call
lds
pop
shll
xor
xor
dec
xor
jbe
idiv
fnsave
lods
rol
enter
shll
fnstenv
loop
bnd
cld
lds
push
cld
xor
push
xor
pop
xor
aad
adc
dec
adc
ficoml
inc
mov
or
and
xor
decl
pop
out
imul
xchg
xor
xor
aaa
cld
pushl
xor
outsb
xor
mov
into
cmp
cmp
cmp
adc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ljmp
sub
cmp
cmp
cmp
dec
cmp
insb
cmp
cmpl
cmp
fdivrs
loop
ljmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
cmp
sub
cmp
sbb
sub
cmp
cmp
pop
cmpl
pushf
cmp
cmp
push
cld
inc
lds
xor
cmp
cmp
aaa
pop
and
cmp
cmp
sub
cmp
pop
cmp
jle
incl
aas
xchg
cmp
mov
cmp
cld
icebp
decl
ds
repnz
ds
ds
ds
jle,pt
mov
push
insl
movsb
ds
ret
ds
fdivrl
out
arpl
pushl
aas
xor
add
aas
data16
outsb
aas
jnp
dec
je
incl
aas
aas
loope
rol
mov
outsl
pushf
xor
xor
arpl
xor
fcomip
mov
xor
jnp
mov
xor
xor
imul
inc
mov
xor
test
pop
xor
mov
xchg
filds
aaa
inc
aaa
pop
leave
aaa
out
or
sub
mov
cmp
cmp
cmp
pushl
cmp
je
pushf
cmp
cmp
xchg
cmp
scas
cmp
outsl
push
cld
cmp
cmp
cmp
cmp
cmp
cmp
sarl
mov
outsl
aas
jbe
mov
aas
mov
ret
aas
loop
hlt
aas
clc
cmp
rol
cld
inc
push
xchg
dec
add
lds
or
adc
adc
sbb
and
addb
hlt
mov
in
xor
cmc
fisttps
xor
pop
xor
addr16
xor
xor
xor
xor
xor
push
or
dec
xor
imul
cs
mov
mov
fdivs
fdivl
add
jg
in
jb
imul
or
mov
scas
add
mov
add
outsl
mov
push
push
inc
std
repnz
or
movsb
add
sub
xor
jo
adc
adc
inc
adc
mov
push
icebp
pop
jmp
imul
aas
mov
dec
gs
push
and
adc
dec
icebp
and
ljmp
mov
add
dec
cs
cs
push
dec
add
mov
add
cmp
rcrb
adc
xchg
mov
or
dec
jb
sahf
mov
ds
int
inc
mov
loop
and
cwtl
xchg
in
sbb
test
in
mov
cmpsb
stc
dec
dec
mov
imul
jns
lods
in
mov
cmp
nop
xchg
xchg
out
jecxz
fnsave
sbbl
arpl
pop
dec
sahf
or
addr16
insl
jae
data16
enter
jb
stos
add
pushl
or
sub
dec
push
dec
dec
mov
pusha
or
xor
shll
sahf
movsb
stos
pop
gs
sub
loope
sbb
aaa
rorl
int
xor
test
stc
mov
sarb
fidivrl
out
cli
add
stc
cld
mov
push
xor
xor
pop
lods
xor
das
lret
mov
or
sub
xor
mov
dec
xor
pop
xor
jle
push
adc
pop
and
inc
leave
add
adc
dec
cmp
outsl
inc
out
add
inc
mov
jg
stos
xor
add
mov
hlt
cmp
call
mov
les
add
jg
pop
add
pop
push
loopne
shlb
ljmp
lods
test
dec
nop
popf
sbb
das
inc
cmp
clc
out
dec
add
loop
je
adc
push
dec
inc
push
lret
push
push
cmpsb
inc
into
mov
out
and
sbb
dec
es
adc
jbe
xlat
test
outsl
add
popa
or
imul
dec
cmpsb
sbb
add
push
inc
push
dec
cmp
push
cmp
lods
je
call
outsb
add
jo
jge
jnp
outsl
adc
push
dec
test
adc
pusha
and
pop
push
dec
dec
push
inc
insl
jb
inc
wrmsr
push
jl
sbb
jmp
mov
push
or
lsl
fs
cwtl
pop
pop
add
mov
adc
mov
push
movsl
mov
pop
pop
ds
add
pop
and
popa
add
cmpsb
cmp
jne
xchg
pop
sbb
add
mov
add
fs
xor
ss
push
scas
jmp
arpl
popf
adc
js
pusha
aaa
mov
jg
sub
xor
xor
cmp
cmc
call
mov
pop
xor
cmpsb
in
jl
fists
test
add
cmpsb
cmpsb
cmp
pop
adc
es
cld
inc
cs
ja
cmpb
adcl
jle
in
jmp
pop
call
aam
das
jmp
dec
out
or
xchg
mov
push
das
movsb
fsubs
inc
xor
imul
test
cld
js
xor
push
daa
dec
fstps
test
xchg
sahf
adc
mov
pop
or
cmp
mov
jno
mov
pusha
pop
das
sbb
data16
pop
and
imul
cmp
ss
xor
xor
xorl
dec
nop
in
mov
inc
cmp
inc
xor
inc
inc
dec
fldt
shrb
pusha
pop
dec
push
inc
xor
inc
ss
dec
out
jmp
test
lea
jo
movsl
sbb
cwtl
outsl
mov
or
orl
scas
cmp
add
sbb
xor
add
icebp
sbb
shlb
fstl
cmp
sub
neg
mov
aas
ja
outsb
and
je
outsb
add
sub
adc
test
inc
or
mov
popa
adc
adc
in
popl
mov
add
add
stos
mov
add
xchg
mov
je
add
fistpll
adc
lahf
ja
outsl
add
push
jae
addb
fs
shlb
inc
arpl
inc
or
and
shlb
sub
adc
movsb
dec
adc
or
or
xor
lock
insl
jne
push
xor
xchg
or
shll
xor
rorb
sbb
in
or
in
data16
outsl
jne
pop
adc
fiadds
pusha
adc
pusha
faddl
push
add
int
xor
xor
pop
xor
test
jns
jae
sbb
aaa
inc
lods
adc
adc
addb
insl
or
orl
pop
sub
and
and
xchg
inc
arpl
adc
test
and
and
mov
sub
or
adc
sub
add
imul
insb
add
lods
jmp
mov
mov
dec
mov
outsb
inc
push
add
inc
add
add
adc
or
add
adc
add
shll
xor
sub
subb
adc
outsl
inc
outsl
adc
or
in
mov
push
or
sub
cmc
add
push
inc
out
lds
add
arpl
popa
dec
mov
inc
fcoml
sbb
cltd
lock
add
add
inc
scas
add
addb
add
adc
stos
add
or
lahf
sbb
mov
inc
mov
add
inc
push
add
fwait
add
adc
pusha
inc
xchg
push
inc
aam
data16
sbb
and
push
inc
inc
add
and
mov
mov
addl
xchg
dec
or
xorl
xchg
data16
sub
pusha
add
or
or
sub
shlb
pop
addl
fdivrs
mov
or
pop
xchg
add
dec
bound
push
and
jae
push
insb
jbe
mov
cmp
mov
add
sub
les
aaa
shrl
pop
add
call
inc
push
mov
jmp
and
jl
jb
adc
insb
add
adc
pop
sbb
pop
dec
cmc
insb
sbb
pop
mov
cwtl
xlat
sub
pop
push
popa
not
daa
add
or
inc
rolb
icebp
shll
jbe
sti
pop
and
iret
jle
jne
inc
mov
sbb
or
test
stc
pop
sahf
pop
popl
shrl
sub
loopne
or
inc
addr16
test
mov
or
shlb
test
add
pop
adc
add
sbb
int3
adc
sti
push
or
jge
shrb
xchg
pop
lock
jmp
pop
xor
or
inc
dec
in
test
or
xor
dec
in
adc
xchg
add
or
test
shr
dec
xchg
sub
shr
es
inc
mov
lret
mov
dec
cmpsl
add
add
add
add
dec
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
or
inc
add
enter
loopne
