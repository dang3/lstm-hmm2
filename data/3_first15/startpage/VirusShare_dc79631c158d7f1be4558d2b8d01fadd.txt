mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
out
arpl
add
leave
popf
popf
pop
shrl
sarb
pop
mov
add
adc
ret
sub
jne
sbb
shll
adc
jecxz
jb
rorl
es
test
xlat
xchg
cmpb
push
jge
test
repnz
mov
addr16
mov
mov
inc
repz
add
js
cli
dec
inc
or
pop
iret
mov
fiadds
or
mov
mov
mov
push
sub
popf
lods
adcl
ds
dec
cmpsb
inc
cmpsb
add
lahf
push
add
stos
pop
jg
jle
call
and
cmp
mov
shl
xchg
arpl
cs
mov
xchg
pop
jge
cmc
xchg
or
sahf
arpl
lock
jg
mov
shll
sbb
pop
mov
dec
jl
sub
mov
dec
daa
add
repnz
jb
lahf
mov
gs
aam
cmp
adc
int3
stos
or
xchg
std
mov
std
push
lock
adc
mov
push
fildl
adcl
in
xchg
sub
mov
jns
push
nop
cwtl
mov
push
leave
into
cmpsb
dec
mov
sub
mov
push
xchg
mov
aam
sub
jecxz
mov
in
jb
jmp
aas
fstpl
insb
mov
sub
or
push
lahf
inc
sbb
dec
mov
jl
aaa
add
xor
pop
repz
or
sti
sbb
push
add
or
pop
xchg
fisubl
pushf
fstpt
inc
mov
jg
outsb
out
sbb
mov
fiaddl
stc
aas
mov
or
cltd
in
cmp
lcall
imul
std
xchg
std
stc
negl
das
jmp
or
rcll
jp
ss
mov
aad
aad
mov
fnsave
je
dec
xchg
gs
jp
lods
cld
pop
out
daa
xor
mov
push
xor
xor
and
sbb
iret
pop
daa
shll
cmovne
cmp
loopne
xchg
and
mov
aaa
loope
mov
fwait
dec
xor
rcrl
addr16
les
hlt
neg
xchg
add
int
adc
aas
lret
popf
add
andl
xchg
movsb
fbld
lods
push
jge
push
test
add
jecxz
xchg
ret
cmc
addr16
aad
or
hlt
push
imul
or
std
jle
inc
and
iret
jp
lods
cmp
add
sub
push
lret
jno
add
repz
insb
pop
mov
xchg
mov
dec
sahf
je
mov
bound
subb
inc
inc
cld
popf
das
pop
fwait
iret
push
adc
pusha
push
lea
outsl
push
pop
cld
jb
test
cmp
fstps
mov
stos
movsb
inc
popf
daa
sbb
add
sti
loop
dec
xlat
pop
pop
into
push
fbld
cmp
pop
dec
stos
jp
test
test
inc
xor
inc
mov
sub
fwait
and
icebp
sti
mov
ds
sub
and
or
lods
jmp
loopne
js
push
xor
test
cmp
dec
sub
push
add
cld
hlt
sub
mov
push
popa
and
insb
mov
test
sbb
lea
push
mov
push
popf
mov
sub
pop
inc
pop
icebp
jecxz
lcall
xor
sbb
mov
add
pop
insl
mov
add
inc
and
repz
jp
repnz
imul
sub
mov
adc
xor
or
cli
les
mov
cmp
in
lods
jae
xchg
jnp
jecxz
ret
das
jnp
fcomps
jmp
sbb
out
gs
mov
out
mov
call
jge
push
xorl
inc
dec
loope
lret
pusha
dec
leave
shll
lcall
das
aaa
jge
scas
int
enter
jmp
lock
aad
sbb
dec
mov
loopne
cmp
in
cmp
fsubrl
mov
imul
rcrl
aaa
scas
mov
test
push
fbstp
and
loop
bound
add
dec
fcomps
pop
cmp
sub
jmp
imulb
scas
jb
xor
cmp
bound
add
fdivp
and
xor
push
orb
fs
je
cmp
adcb
ret
adc
sbb
jns
push
data16
cli
sti
rcll
pop
adc
popf
sub
fsubl
xor
dec
aad
mov
ja
test
cltd
xchg
cwtl
scas
and
or
xchg
dec
sub
mov
jecxz
and
lock
and
insb
insb
lahf
pop
dec
ret
add
add
add
cld
push
dec
mov
xor
adc
ljmp
mov
test
movb
aam
add
hlt
aaa
pop
rorb
sbb
cmp
push
inc
push
mov
push
push
mov
stos
or
mull
mov
push
mov
insb
int
shr
addr16
test
dec
cmp
data16
push
lcall
jl
stos
pop
in
dec
and
sbbl
mov
or
iret
pop
push
dec
sbb
dec
inc
orb
in
stos
movsb
test
inc
and
int
js
iret
mov
mov
sub
add
fldl
sub
cmp
add
das
mov
cmp
mov
std
sbb
repz
xchg
shll
mov
xchg
or
mov
and
xor
dec
out
lea
in
dec
push
test
xor
fistpl
xor
or
mov
repz
pusha
ja
icebp
outsb
int3
test
cmp
xor
pop
mov
shll
xor
sub
adc
mov
pop
xchg
mov
sub
mov
sbb
enter
add
jle
jo
leave
in
push
daa
jp
lret
lods
xor
incb
mov
rorl
rorb
stos
pushf
imul
les
call
aam
testl
pop
cmp
inc
and
insb
push
out
imul
test
jnp
jmp
sub
test
in
mov
fsubrl
nop
insb
sbb
jle
fsubrp
loopne
or
and
and
mov
inc
cmc
rol
repnz
push
lods
cmp
adc
sbb
sub
mov
adc
adc
push
inc
fdivrs
into
mov
jecxz
pop
push
lret
push
xchg
push
xchg
out
pop
adc
fcompl
push
lahf
push
pop
cmp
mov
dec
push
mov
popf
lds
daa
push
jl
daa
push
sbb
push
fnstcw
and
rcrb
icebp
inc
stos
lea
and
dec
jne
outsl
and
push
jnp
dec
icebp
pop
push
fldenv
negl
sarb
ret
xor
test
sarb
mov
cwtl
adc
xor
ficoml
stos
out
pushf
mov
lock
inc
xchg
pop
xor
mov
fdivl
rorl
lds
shlb
clc
mov
cwtl
jo
pusha
cmp
push
es
push
fcmovne
jo
jmp
shll
and
arpl
or
cmp
lds
iret
push
push
pop
rclb
cli
push
mov
inc
into
ret
pop
test
shlb
add
in
jb
pop
jle
jp
cli
aas
inc
inc
mov
cmp
sar
mov
push
adc
jns
subl
pop
dec
cmp
insl
hlt
inc
add
es
push
and
xor
mov
rorl
jecxz
mov
daa
mov
jb
mov
stos
xchg
or
es
dec
fsts
arpl
lahf
xchg
ljmp
jmp
pop
addr16
insl
jmp
iret
xchg
addr16
cmp
jns
call
repnz
inc
stos
loopne
cmp
je
ds
sub
pusha
dec
or
enter
mov
add
and
out
mov
les
int3
imul
shll
in
arpl
outsl
xchg
call
stos
fisubs
roll
scas
push
push
dec
mov
pushf
mov
mov
adc
xor
jns
insl
stos
jge
imul
outsb
out
test
pop
push
negb
leave
jecxz
jle
repnz
insl
mov
or
decb
test
data16
fsub
dec
adc
sub
push
jmp
adc
insl
hlt
or
cmp
inc
mov
popl
shrl
popa
mov
sub
popf
dec
dec
mov
iret
fsub
or
dec
js
out
sarb
ret
cmp
fs
xchg
loopne
or
fisubrl
mov
mov
xor
cmp
fildl
sub
and
jmp
add
pop
pop
xor
cmp
fldt
loope
pop
pop
xlat
mov
rcll
jg
nop
and
inc
ljmp
jne
sub
in
lds
pop
inc
out
ja
fidivrl
out
loopne
pop
dec
add
stos
pop
inc
sbb
inc
int
add
adc
fdivl
insl
cmc
rclb
mov
or
cmp
pop
int3
adc
mov
stc
mov
imul
jae
subb
int3
sub
arpl
out
mov
jno
adc
in
popf
shrb
sbb
sahf
int
or
push
mov
add
das
inc
fldt
sub
lret
dec
cltd
icebp
dec
mov
sbb
test
cmpsl
sub
or
xchg
hlt
push
cmp
mov
inc
or
pop
jns
pop
lret
fisttpl
scas
xor
inc
iret
xor
lcall
sbb
popf
notb
leave
jbe
cltd
mov
loopne
test
sti
add
mov
fcomi
jmp
mov
sbb
fwait
sbb
xlat
imul
dec
outsl
imull
sub
lock
and
lcall
pop
xchg
sbb
sbb
enter
sbb
neg
mov
or
into
leave
sub
data16
sub
xor
imul
or
xchg
pop
jo
xchg
in
pop
push
or
push
push
leave
dec
cmp
shl
aaa
popa
int
test
jp
or
mov
inc
adc
mov
lds
int
dec
sbb
pop
xchg
cmp
test
cmp
adc
jecxz
xor
jmp
movsl
inc
jns
add
lods
dec
pop
in
mov
ret
xor
jl
mov
je
ficompl
cli
cmp
sbb
xchg
test
push
sub
test
mov
pop
add
cmp
rclb
and
ffreep
or
es
jns
cs
jmp
ss
jge
ret
out
mov
pop
or
movsl
mov
sbb
mov
stc
je
mov
mov
adc
mov
mov
inc
ffree
fs
aad
push
ss
sub
lahf
push
testb
sbbl
and
stos
data16
icebp
xor
mov
mov
mov
add
es
inc
cwtl
xchg
dec
dec
imul
push
aad
rorl
mov
out
xlat
pop
xor
mov
lcall
aam
repnz
fiaddl
push
xchg
ret
mov
inc
out
es
push
fwait
pushf
lahf
int
jb
push
xchg
xor
insb
loope
mov
adc
add
sub
into
inc
popa
push
into
cli
dec
jl
nop
pushf
pushf
xchg
inc
rcr
orl
or
dec
idivl
mov
rorb
pop
xchg
sti
push
xor
loop
dec
call
cmp
add
leave
subb
sarl
and
mov
imul
imul
jmp
mov
and
ljmp
cmpsl
xor
inc
mov
push
ds
data16
mov
xchg
data16
cli
mov
cmpsl
dec
pop
adc
sub
mov
mov
mov
dec
outsl
in
je
popa
sub
adc
mov
test
ficoml
jb
dec
dec
jmp
in
xchg
cmp
xor
int
jecxz
add
jnp
out
push
jo
jecxz
mov
sbb
je
leave
xchg
pusha
scas
sub
js
test
cmpl
arpl
xor
xlat
sarb
jg
adc
cmpsb
sbb
pop
ds
dec
cmp
mov
sbb
sbb
das
jnp
cs
dec
outsb
test
fldcw
and
gs
das
roll
mov
add
les
je
dec
xchg
bound
push
mov
or
cmp
mov
push
add
fistpl
pusha
push
dec
mov
mov
out
outsl
push
or
repz
inc
add
jecxz
jae
pushl
pop
adc
cwtl
pop
mov
sbb
ja
subl
movsl
dec
inc
or
jo
pop
in
cmp
out
jle
or
aam
add
pusha
mov
out
cmp
sbb
repnz
jl
aaa
mov
jge
cmpl
or
dec
imull
inc
mov
jecxz
sarl
das
jbe
cwtl
lea
dec
fwait
lods
add
into
mov
test
fistps
loop
les
xor
fcompl
and
cmc
adc
or
fwait
inc
push
push
call
sub
jg
outsb
dec
lds
imul
mov
aaa
push
push
int3
inc
leave
jns
push
mov
lea
mov
in
inc
lds
repnz
adc
sub
stos
cmp
xor
movsb
aad
out
test
xchg
push
int3
subl
jmp
push
out
add
mov
ret
arpl
lods
mov
dec
lret
ret
inc
enter
jo
icebp
ss
xchg
add
test
and
test
cmpsb
scas
loope
jo
mov
int3
fldenv
aas
cmp
insl
mov
adc
movsb
test
loopne
sbb
imul
cltd
mov
fsts
in
daa
cmp
test
jmp
jmp
stos
mov
das
int
insl
andl
call
jbe
fstp
push
jo
icebp
aas
movsl
pop
pop
mov
mov
test
loop
test
and
or
inc
ja
xor
test
test
pop
jns
sub
pusha
andl
ds
add
test
aas
push
or
clc
mov
int
movb
gs
add
push
add
aaa
cltd
adc
jmp
xchg
ljmp
dec
xchg
add
mov
in
mov
mov
pop
lss
push
mov
dec
cmp
das
movsb
sub
xchg
sbb
push
push
adc
cmpsb
jge
cmp
je
push
xorb
hlt
pop
xchg
popf
scas
push
pusha
xchg
imul
mov
movsb
pop
int3
rorl
push
mov
idivl
mov
push
jle,pt
pop
test
shrl
push
imul
cmc
scas
out
pop
pop
jmp
ret
cmpsl
lods
and
push
repz
xor
data16
dec
ja
call
lock
outsb
xchg
fwait
xor
and
pop
in
pop
adc
or
lahf
mov
test
cmp
dec
js
fwait
or
push
pop
mov
andb
or
mov
fistpll
mov
push
jecxz
pop
mov
popf
mov
adc
test
jne
cmp
out
in
jg
subl
dec
or
inc
xchg
jb
mov
pop
push
inc
arpl
cmpsl
xor
dec
aas
dec
or
jb
data16
push
cmp
jge
dec
cwtl
in
jne
mov
divl
mov
mov
ret
das
decb
inc
ljmp
mov
fisubrs
out
xor
lods
xchg
fwait
or
jns
leave
out
jle
xchg
std
lods
sub
jmp
push
xchg
lods
adc
call
pusha
mov
stos
push
ss
xchg
imul
xchg
mov
insl
dec
das
out
xchg
sbb
jb
sub
inc
lcall
pop
pcmpeqd
hlt
mov
fsub
add
lret
adc
sub
sbb
inc
xor
ljmp
push
sti
mov
xchg
pop
test
jbe
les
in
mov
shll
dec
test
shlb
daa
pop
lods
mov
lods
mov
popa
pop
mov
or
das
les
or
add
inc
jecxz,pt
cmp
push
testl
add
call
call
rorl
out
shl
ljmp
pop
xor
jle
test
ss
push
adc
add
push
or
pushf
push
mov
jg
push
loopne
xchg
hlt
out
push
mov
popf
push
and
fmull
mov
pop
fnsave
in
dec
and
in
push
mov
push
adc
enter
ret
outsb
adc
mov
cwtl
outsb
sbb
pusha
inc
outsl
out
and
aad
dec
dec
in
add
jns
fldcw
adc
mov
lea
pop
std
pop
fdivr
mov
das
jg
xor
cltd
xchg
hlt
out
and
xor
addb
lods
jns
lods
lock
fsubr
jmp
xchg
push
inc
push
mov
sbb
pushf
mov
imul
ljmp
sub
jecxz
leave
insl
xchg
mov
stos
je
inc
push
adc
jo
and
push
pop
jnp
aad
gs
lods
push
test
or
xor
push
aas
fiadds
xor
xor
sub
jmp
push
les
icebp
stos
or
cli
das
lds
push
repz
je
test
xchg
leave
inc
dec
mov
cmp
or
divl
pop
push
push
xchg
das
cmp
sbb
ffreep
or
xor
lcall
lods
aam
or
push
lahf
push
adc
popa
mulb
roll
or
clc
mov
lods
inc
hlt
adc
adcb
cmp
jbe
fdivrl
mov
sahf
cmpsb
out
and
and
rolb
aam
in
insb
or
xor
mov
cmp
sar
popa
subb
or
dec
test
mov
push
fadds
mov
push
les
imul
outsb
rorl
out
jg
and
out
xchg
cmp
and
cmp
stos
mov
hlt
dec
add
popa
jne
jno
out
pop
daa
fcomp
fs
push
xorb
cmp
loop
and
jg
incl
btc
add
test
xor
cltd
cld
and
loope
mul
jns
sub
xchg
icebp
ret
insl
xor
push
fists
inc
pop
inc
lods
cmpl
cmpsb
stos
cmp
mov
and
and
pop
jcxz
add
xor
cmc
icebp
and
test
mov
mov
xor
rclb
xchg
jae
nop
mov
imul
push
mov
gs
pop
mov
test
in
inc
sub
mov
dec
jg
insl
fsubr
ljmp
push
ud0
les
ja
lret
stc
movsl
push
jns
hlt
addr16
xlat
push
cmpsl
mov
sti
sub
lcall
cmc
cmp
pop
mov
gs
jbe
sbb
and
and
cmpsb
stos
adc
ss
cmc
or
jb
pop
sbb
jbe
lds
xchg
popl
lock
std
popa
fwait
xchg
cmpsb
jle
dec
fwait
or
mov
jno
xlat
call
jle
pop
test
pop
mov
inc
jo
cmp
jne
bound
sbbl
xor
jle
pop
in
ljmp
jp
mov
pop
add
repz
mov
adc
cwtl
dec
sub
push
sbb
cmp
out
jge
ja
jecxz
and
inc
cwtl
cmp
xchg
enter
sbb
push
lods
cmp
sub
pop
or
test
aaa
inc
outsl
add
jle
pop
mov
jne
push
push
xchg
jp
push
loope
clc
repz
test
dec
sub
jnp
aad
fnstenv
xchg
inc
es
shlb
adc
inc
fsubrp
push
and
pop
xchg
adc
sbb
pushf
lahf
popl
xor
mov
js
cltd
cwtl
sti
int3
movsb
clc
xchg
mov
mov
mov
outsb
test
arpl
loop
inc
add
xchg
stc
int3
xchg
movsl
xchg
daa
cmp
push
adc
out
mov
addr16
aaa
decl
push
mov
loope
mov
popf
sbb
push
imul
movsl
ljmp
mov
cmc
inc
push
dec
pop
hlt
inc
clc
nop
pop
aad
pop
sub
loop
mov
cs
xchg
aad
sub
nop
dec
mov
adcb
adc
fbstp
lahf
fcomps
sbb
leave
imulb
rcl
jmp
int
add
es
repz
insl
nop
xor
inc
pop
test
and
into
gs
add
sbb
and
push
adc
enter
int
pop
sbb
cmp
mov
mov
xor
push
ss
fs
lods
ljmp
scas
cld
xchg
cmp
and
fs
xchg
subl
stos
and
ds
mov
iret
inc
sub
jns
sbb
mov
mov
pushf
ljmp
jb
cmp
sub
push
sbb
fwait
enter
in
icebp
inc
or
ja
out
push
mov
fwait
in
xorl
roll
sub
push
sub
int3
addr16
incb
aaa
mov
std
scas
pop
test
push
and
in
or
ret
stos
cmp
dec
pop
mov
mov
push
lea
cmpsl
in
pop
sub
out
loop
sbb
aam
idivb
fsubrp
rclb
mov
inc
cmp
aas
jns
jnp
mov
outsb
lods
xchg
jnp
cmp
jne
mov
into
repz
cmp
pop
lahf
call
addb
xchg
dec
pop
adc
ror
xchg
or
je
ss
pop
ret
mov
negl
xchg
mov
sbb
and
sub
jmp
rcrb
int3
aas
adc
push
mov
xor
scas
rorl
pop
cmp
mov
jbe
lahf
shll
push
cmp
in
out
xlat
dec
dec
rolb
xchg
test
jb
and
ror
add
in
insb
jecxz
popa
mov
mov
insl
pop
imul
mov
pusha
mov
and
xchg
sarl
je
cld
or
fwait
addb
insl
jb
fsts
imul
sub
sub
cld
aam
rolb
jecxz
cltd
or
jle
lock
adc
in
call
test
cmp
mov
iret
cld
push
ret
roll
push
and
adcl
clc
fldenvs
movsl
and
fldt
icebp
inc
hlt
stc
mov
shlb
sbb
fwait
into
adc
xlat
outsl
out
xchg
lcall
cmpsl
fcmovne
xchg
dec
int3
pop
pop
cmp
lods
out
sti
xor
in
push
mov
push
sbb
pusha
jmp
fisttps
push
sub
sub
lock
rcr
pushf
inc
sbb
mov
xor
enter
inc
or
mov
pop
das
mov
aam
sti
sub
std
adcb
xchg
pop
repz
or
stos
rclb
inc
push
mov
scas
aaa
add
jmp
stos
scas
jle
inc
push
add
in
jnp
xchg
sti
fistpll
mov
sbb
loop
outsl
adc
and
add
jp
xor
push
adc
test
inc
xor
xor
or
outsb
lds
aad
aas
fcmovnbe
push
add
mov
xlat
push
mov
push
lds
jge
lahf
jp
jb
icebp
jbe
aas
es
call
movb
cmp
lret
mov
mov
pop
cmc
adc
lret
cmp
subb
mov
out
leave
lahf
nop
fs
enter
pop
lea
xor
cs
test
incb
aas
addb
mov
mov
insb
mov
add
sbb
inc
in
imul
or
js
jecxz
push
xchg
mov
jns
jae
pop
das
adc
add
into
js
ljmp
dec
imul
and
jns
lds
push
dec
add
out
fdivp
dec
jo
lahf
out
xchg
ficoml
scas
loop
mov
mov
xchg
ja
mov
sahf
divb
adc
xchg
push
push
xor
pop
bound
pop
loope
aad
scas
movsb
insl
leave
movsb
xor
push
outsb
mov
cmp
outsb
fisttps
or
jno
push
les
cmpl
movsl
and
insl
rcrb
jnp
lods
lahf
push
iret
add
aas
add
test
stc
pop
adc
hlt
mov
lea
lret
sbb
xchg
in
inc
mov
dec
outsb
les
cs
mov
xor
push
aad
mov
mov
icebp
add
mov
daa
pop
in
jge
filds
pop
lret
lahf
loop
push
push
mov
inc
xchg
dec
iret
leave
je
pusha
or
mov
mov
ljmp
faddl
js
mov
in
mov
mov
aas
inc
jae
int3
jg
leave
stc
sar
push
insl
cmp
xor
add
cmc
movsb
loop
sahf
dec
sbb
xchg
cwtl
sbb
mov
adc
lds
mov
xor
fidivl
xor
push
icebp
cmp
and
cmp
fnstenv
push
jns
sahf
mov
stc
mov
mov
push
lock
shr
mov
pop
add
cwtl
inc
lahf
cmp
sahf
jp
test
sub
adc
cmp
loopne
jbe
test
sub
xor
cld
xchg
aaa
imul
cmp
mov
xchg
push
cmpsl
out
mov
addr16
mov
pop
sbb
xchg
sub
adc
xchg
pop
push
mull
out
sub
sahf
sbb
cmp
adc
push
mov
and
ljmp
pop
jge
push
cli
test
insl
sbb
jne
mov
adc
loopne
mov
mov
outsl
mov
xchg
pop
xor
call
jb
adc
data16
jmp
jnp
mov
sub
stos
mov
mov
cmp
lret
mov
sbb
pop
arpl
push
inc
rol
fstpl
iret
dec
sahf
xor
mov
sub
in
sub
sbb
aad
dec
cmp
cltd
in
xchg
jmp
cld
mov
lret
inc
sbb
lock
add
inc
inc
jp
into
sahf
dec
push
add
and
scas
push
movsl
mov
int
push
shlb
hlt
inc
inc
mov
movsb
fcoms
fsubrs
insl
out
fnstenv
dec
rcll
dec
es
lret
lods
mov
rcrb
fsub
cmp
mov
inc
pop
push
test
cltd
cld
lahf
fsub
xchg
bound
lcall
icebp
cmp
xor
add
jns
lds
ja
mov
jmp
jnp
fcom
inc
popl
lds
into
fnstcw
dec
sub
into
fisubs
push
bound
fcoml
adc
clc
imul
mov
repz
shl
ja
insl
gs
sbb
orb
pushf
data16
hlt
popa
pusha
or
lret
add
mov
push
test
xlat
sahf
test
lds
sbb
jmp
dec
push
push
mov
adc
scas
int3
push
in
loope
inc
mov
or
popf
imul
inc
ficoms
scas
lret
bound
push
xchg
mov
cmpsb
and
out
inc
addb
loope
cmp
inc
lret
cmp
loop
mov
std
pop
pop
rorl
or
cmp
jbe
pushf
dec
pushf
lock
out
mov
or
call
pop
push
push
outsb
pop
mov
mov
mov
inc
test
push
cmpl
dec
sub
ljmp
sbb
inc
enter
xor
push
stos
divb
testl
inc
aad
cmc
mov
jae
adc
fdiv
shrl
sub
int
addl
or
xchg
sbb
cmp
imul
lahf
loopne
mov
mov
pop
jecxz
inc
loopne
sti
or
clc
lahf
or
fstl
fcompl
fldl
sbb
xor
add
inc
sub
hlt
lret
clc
movsl
rcrb
sbb
ja
fisttpll
dec
lods
dec
pop
cmp
bound
out
jnp
fldl
or
push
mov
mov
adc
jp
pop
insl
lock
test
call
cmp
cmp
out
sub
ret
sbb
push
or
xchg
jmp
or
das
movsb
cmp
ffreep
mov
cli
and
test
mov
mov
or
bound
mov
xor
out
fnstsw
add
mov
push
andb
add
add
adc
inc
lds
jo
mov
push
jge
out
cs
jne
sub
jl
adc
or
out
in
mov
xor
daa
ss
fsubrl
popf
test
repz
pop
mov
jl
sbb
adc
dec
gs
std
cmp
pop
push
push
sbb
cwtl
arpl
sahf
rorb
or
testb
mov
inc
out
insl
lcall
dec
out
int3
enter
dec
push
pop
repnz
fs
lods
push
lock
out
inc
scas
mov
jg
push
inc
xchg
xorl
std
sub
cmpsb
fistps
pop
mov
pop
jo
and
outsb
bnd
push
inc
pop
cltd
cltd
mov
inc
cmp
aam
push
xchg
in
xchg
into
xor
lea
dec
pop
adc
inc
pop
outsl
jb
int3
loop
jns
lods
cwtl
fwait
inc
mov
push
fdivr
test
push
aam
out
mov
dec
mov
push
inc
ljmp
xchg
push
jbe
pavgw
add
loop
in
or
mov
js
gs
out
test
aaa
hlt
or
ret
and
xchg
jne
xorl
cmpsb
sbb
or
mov
js
inc
addr16
jg
dec
xor
pushf
jmp
cmp
cmp
add
cwtl
push
xor
jmp
xor
mov
inc
cmpsb
mov
and
fstpl
fisttpl
ret
enter
pop
sub
into
cmpsb
bound
lods
inc
outsl
mov
lcall
repz
loope
ror
outsb
dec
inc
imull
cmp
loopne
cwtl
mov
lea
xor
and
loope
es
js
std
in
sbb
or
cmp
jns
test
jns
lods
and
xor
add
jl
add
push
xchg
push
sbb
xorb
adc
lcall
add
adc
insl
pop
sarl
outsl
add
into
sbbb
dec
pop
xor
stc
sbb
pop
cld
push
addr16
push
jge
or
aam
loopne
in
fnstcw
into
mov
push
push
mov
imul
fwait
dec
lret
les
fadds
xor
out
xchg
subl
cmpsb
aad
adc
jne
sbb
in
repnz
scas
adcl
int3
fisttpll
add
pop
push
and
aas
and
xor
mov
mov
mov
data16
cmp
pop
test
repnz
insb
pop
push
or
movsb
and
sbb
and
popf
push
and
mov
bound
xchg
rorl
cmp
push
pop
xchg
mov
ljmp
ffree
and
std
sbb
add
jecxz
bound
mov
mov
insb
add
rorl
call
fmulp
push
into
mov
add
adc
and
jl
mov
ret
adc
and
mov
and
or
mov
ljmp
cmp
dec
sub
je
mov
jg
imul
mov
clc
mov
or
push
sbb
insl
insb
fstpl
xchg
stos
test
and
fistl
cmp
jg
iret
insb
mov
orb
mov
pop
outsb
sub
push
out
mov
pushf
push
add
mov
xchg
inc
popa
xchg
and
clc
pop
out
test
ret
aas
xlat
cmp
lods
sbb
push
dec
push
push
mov
pushf
sub
js
fmuls
inc
dec
inc
xor
aad
dec
mov
or
outsb
aam
loopne
jae
inc
into
addr16
sub
jl
jl
cmp
inc
sahf
rol
jl
mov
out
out
mov
push
lret
aaa
pop
movsb
hlt
leave
dec
in
mov
push
dec
ss
sahf
and
push
out
mov
sub
fdivrs
test
sbb
mov
xchg
es
imul
test
xor
sbb
ror
das
xchg
int3
dec
push
scas
mov
pushl
push
mov
aaa
bound
fwait
mov
xor
repz
shll
insb
sub
daa
iret
push
leave
or
stos
push
inc
dec
sbb
xchg
push
fldt
repnz
adc
jmp
adcb
adc
pop
xchg
mov
mov
and
pusha
sbb
mov
out
cli
add
pop
dec
push
xor
std
sub
fmull
in
xor
cmc
jmp
jle
jb
imul
push
mov
ret
lods
scas
or
fimuls
movsl
aas
movsb
lret
in
xchg
ret
pop
cmp
inc
data16
inc
cltd
mov
fbld
push
sub
adc
cwtl
sbb
push
rorl
out
jle
das
and
cmp
sbb
cmp
bound
add
cmc
sbb
push
push
shll
xor
or
mov
cmp
mov
or
dec
mov
test
int
xor
push
mov
aad
pop
adc
mov
sbb
mov
aad
imul
dec
inc
mov
cmpsl
push
clc
shrb
pop
pop
mov
mov
pop
pop
or
out
lock
movsb
xor
mov
aaa
insb
cs
cmc
mov
lret
ret
popa
push
jb
and
lods
lcall
jg
sahf
jb
stos
dec
push
rcll
push
cmp
lcall
das
cmp
divb
push
lea
jo
jbe
cmp
push
mov
andl
xchg
scas
or
sbb
sarb
mov
cmp
sbb
es
push
xchg
sbb
cmpsb
popf
mov
jg
test
out
into
out
daa
loope
dec
aam
mov
imul
orl
subl
lock
push
mulps
lcall
shrl
clc
xor
push
loop
in
cmpsl
adc
jg
add
sub
loop
ret
stos
out
leave
cmp
repz
pop
cwtl
mov
and
cwtl
push
imul
push
jg
aaa
sub
adc
je
vmaxpd
repz
in
add
pop
jecxz
lock
xor
jmp
sarl
cmp
arpl
fildll
mov
push
and
jo
pop
hlt
test
sbbl
mov
or
cli
stos
ret
xchg
add
aaa
mov
adcb
inc
cmp
or
aam
shl
imul
push
mov
cmp
push
iret
pop
fimull
inc
shrb
shrl
xchg
pushf
xorb
test
addr16
rorb
inc
jl
jns
push
xor
nop
pop
xchg
cmp
cmp
and
int3
outsb
push
add
sti
test
mov
xchg
andb
sahf
cmp
add
das
js
xorb
and
jge
lret
sbb
sbb
pusha
insl
insl
cmp
jmp
dec
or
in
js
ja
ja
sub
movsl
xchg
cmp
cmp
push
pop
pop
out
push
jecxz
mov
or
adc
inc
lahf
mov
fs
test
adc
and
mov
fsub
inc
sub
jnp
test
popf
jg
jl
addr16
divl
mov
pusha
bound
xchg
jns
call
jo
rol
addl
fstl
syscall
xchg
sbb
mov
or
push
sar
or
lods
push
insb
insb
cld
sub
pop
pop
xchg
fidivrl
rcrl
subl
and
xor
lahf
sub
aas
scas
xchg
cmpl
scas
or
dec
mov
dec
xchg
popa
push
test
shll
jle
cmp
xchg
cwtl
mov
mov
inc
aaa
fists
stos
adc
xchg
jmp
hlt
or
std
fs
out
jns
or
aad
mov
add
sbb
xchg
cmp
in
xchg
xor
xchg
insb
sub
sbb
mov
add
std
in
fs
add
mov
sbb
or
mov
test
mov
push
jo
stos
outsb
pop
mov
or
mov
push
sbb
push
bound
adc
lods
mov
mov
aam
ds
loope
sub
mov
mov
add
sub
cli
dec
repz
cli
or
out
aas
jno
lcall
ret
mov
dec
test
adc
or
cmp
adc
clc
fwait
xor
pushf
mov
add
mov
push
test
in
fwait
mov
inc
jg
out
mov
mov
sub
jmp
das
or
mov
add
repz
jns
cmp
mov
cmc
aas
jmp
dec
adc
test
lret
test
imul
push
cmp
loope
mov
and
xchg
mov
and
jle
shll
xchg
dec
cmc
fadds
dec
push
lahf
adc
pop
lcall
jecxz
imul
push
leave
mov
outsb
xchg
adc
or
sub
cmp
or
ret
out
pop
sbb
adc
jecxz
sub
push
dec
push
or
mov
cmp
sub
lret
cwtl
fdivp
sbb
jl
mov
ss
fildl
in
jl
and
mov
in
insl
inc
lea
xchg
ljmp
lret
outsb
inc
jns
inc
jp
mov
sbb
arpl
fs
shl
cmp
fs
pop
jae
andl
mov
loop
movsl
lods
pusha
inc
cmpsb
fisttps
int
imul
mov
test
cltd
fidivrl
add
xor
fistl
xchg
icebp
movsb
xchg
outsb
cmpsl
cmp
scas
add
sti
jmp
out
mov
lret
xlat
pop
pop
inc
out
aaa
loopne
or
inc
adcl
fwait
sti
testl
test
jb
in
sub
test
hlt
mov
adc
push
jae
xchg
insl
out
xchg
jnp
push
inc
xchg
cmp
sarl
jmp
mov
and
out
xchg
cs
les
xchg
and
das
inc
lahf
movsb
inc
fisubrs
addr16
jle
xchg
cmp
dec
sub
add
and
cmp
cld
ror
jbe
and
in
mov
xchg
and
ljmp
cmp
and
ds
mov
jp
clc
inc
cltd
lret
insl
mov
movb
push
mov
mov
std
lret
xchg
dec
jmp
or
sti
movsb
lds
pop
pop
aas
xchg
mov
mov
lret
dec
sbb
mov
repz
jae
pushf
sbb
pop
add
or
inc
dec
ret
call
xchg
lcall
movb
popf
cmp
fwait
xchg
push
adc
dec
ret
mov
fiadds
push
cmpl
dec
jg
cmp
xor
sbb
cmp
test
cltd
xor
outsl
out
movsl
movsl
addr16
xor
mov
andl
push
inc
pushf
sbb
fsubl
fs
lods
int3
lret
dec
andb
cmp
lock
loop
inc
mov
sbb
in
sbb
data16
dec
stos
in
or
and
push
sub
and
clc
xor
cmc
sub
iret
inc
call
iret
lret
mov
fimull
ljmp
cmp
dec
andb
adc
mov
pop
sbb
iret
and
mov
imul
pop
movsb
mov
push
outsb
movsb
xlat
aad
imul
sbb
insb
movsl
js
cltd
mov
in
lret
fsubr
and
lock
sti
push
pop
bound
movsl
pop
adcl
sbb
xor
sti
or
jno
mov
iret
insl
jnp
push
mov
pop
test
fcompl
pop
subl
push
mov
jecxz
aaa
les
xchg
mov
jmp
jns
or
sbb
sub
dec
mov
xor
call
add
frstor
add
into
cmp
cmpsl
pusha
add
mov
xchg
dec
mov
push
push
push
movsb
dec
mov
lods
mov
ds
scas
sti
mov
sub
sarb
aad
inc
mov
mov
xchg
push
fwait
push
sahf
mov
mov
sub
sub
cli
jmp
and
or
icebp
mov
add
leave
inc
fbstp
jecxz
xchg
jb
mov
mov
lret
sahf
repz
mov
adc
fwait
fxch
jns
fisttps
and
mov
and
lds
movsb
sub
mov
dec
mov
xlat
lds
mov
sub
mov
clc
add
enter
out
insl
insb
mov
xchg
jle
inc
push
scas
xor
dec
shrl
mov
pop
xchg
sbb
adc
mov
mov
jno
stos
and
pop
fisubrl
je,pn
mov
or
roll
icebp
sbb
jo
mov
or
sub
in
rcll
ret
xchg
lcall
lock
mov
daa
test
push
push
inc
sub
jbe
int
stos
push
mov
mov
fisubrs
jb
je
jmp
push
push
in
xorl
jle
push
xchg
sub
out
ds
mov
cld
add
pop
jmp
call
jb
cmpsl
cld
sbbb
and
mov
push
ljmp
sbb
xor
push
xor
mov
arpl
out
xor
inc
insb
scas
xlat
xor
sbb
cmc
pop
insl
mov
xor
cmc
mov
rcrl
cmc
cmp
inc
inc
push
xor
lods
lret
mov
cmpsb
or
mov
jecxz
int3
inc
psllq
cmpsb
sarb
pop
push
hlt
out
ficomps
jl
cltd
mov
pop
fldl
dec
mov
jo
jb
mov
shlb
pusha
popa
movsb
es
movsb
scas
rcr
push
stos
adc
mov
jg
mov
movsl
sub
inc
lcall
or
jp
mov
xor
fimull
sub
add
sbb
stc
xchg
lret
and
or
lock
sub
and
and
aas
xchg
mov
dec
or
and
jle
pop
ljmp
xorb
ds
jmp
xorb
les
inc
adc
in
or
pop
push
stc
enter
mov
mov
inc
xchg
mov
jg
aaa
arpl
mov
mov
adc
push
insl
addr16
jg
daa
xor
insl
xor
and
sbb
daa
pop
icebp
dec
xchg
add
cmpsl
adc
std
icebp
push
pop
pop
pop
inc
dec
push
dec
mov
fidivl
loopne
insb
ror
out
mov
jmp
xor
pop
ljmp
cli
out
xchg
jo
cld
xchg
cmpl
pop
fsubrp
cmp
lds
sti
jne
add
nop
mov
dec
out
mov
jmp
stos
pop
xchg
movsl
stos
cltd
movsl
lcall
sbb
ret
inc
mov
mov
scas
and
adc
stos
mov
pop
stc
rcl
mov
sub
mov
sub
pop
sub
fbstp
adc
jo
in
faddl
loope
mov
movntq
push
inc
mov
cmp
and
mov
pop
hlt
adc
add
sar
jb
adc
cmc
mov
dec
jl
rol
ret
pop
in
das
pop
aaa
orb
inc
aam
push
pop
and
shlb
fisttps
xchg
jl
gs
push
jns
jb
xlat
adc
adc
stc
jbe
js
pop
cmpsb
popa
loopne
add
xchg
ret
jno
lcall
mov
inc
hlt
enter
imul
xchg
rcrl
xor
jp
loope
dec
lret
fsts
inc
icebp
mov
sbb
mov
xor
inc
xor
sbb
iret
jmp
adc
mov
inc
js
jno
sub
test
sbb
bnd
pop
loope
jl
ret
bound
lcall
push
fnstenv
cmp
xchg
xor
leave
lcall
ss
adcl
pop
pop
xchg
sub
les
sar
add
pop
in
or
rcl
inc
or
mov
int3
repnz
inc
sbbb
cmp
ss
sbb
ja
movd
pop
push
jge
repnz
mov
std
push
inc
in
nop
adc
mov
in
shll
push
add
xchg
and
push
or
movsb
out
lret
imul
mov
xchg
mov
mov
cmc
addr16
test
dec
rcr
sbb
rorb
sbb
jg
pusha
fsubrl
bound
cmc
lods
stos
aaa
dec
cmc
bound
xchg
rep
sbb
cmpsb
out
xchg
and
gs
aas
jns
or
or
pop
mov
xchg
adc
xchg
jle
push
pxor
adc
stos
add
in
and
mov
ds
daa
xchg
dec
ja
jnp
sbb
push
roll
pusha
xor
mov
scas
cmp
repz
jge
cli
push
test
pop
popa
xchg
ljmp
imul
rol
dec
dec
jbe
inc
adc
subl
arpl
loopne
lods
je
xchg
xchg
cmpsb
dec
lods
dec
out
mov
out
cmpsl
ret
xchg
pop
pop
lret
dec
push
jb
cld
hlt
cwtl
test
inc
and
imul
fs
mov
push
icebp
in
pop
movlps
mov
lret
hlt
scas
mov
jg
dec
push
xor
outsb
outsl
mov
mov
xchg
call
stos
cmp
lcall
sbb
jge
divb
mov
lcall
jo
sbb
shrl
leave
pop
and
je
lcall
into
loop
pop
inc
pop
pop
test
pop
jmp
xchg
dec
in
and
sub
nop
js
fisttpl
sub
mov
cmp
pop
mov
add
nop
pop
xchg
popa
rcl
dec
dec
in
cld
jne
xchg
pop
sub
cltd
xor
fisubs
add
mov
hlt
adc
jns
outsl
call
repz
xchg
and
fmuls
sub
cmp
call
sti
mov
stc
cmp
or
ja
dec
scas
jge
push
adc
stc
jge
xor
mov
ja
dec
aaa
jno
testb
add
sahf
add
mov
cmc
or
xor
fwait
push
test
clc
aad
xchg
inc
cmpsb
popf
out
aam
and
inc
stos
adc
mov
test
pushf
and
pop
jnp
mov
sbb
fcmovbe
xor
mov
mov
call
std
sti
sbb
xor
mov
shr
mov
loopne
int
aad
call
xor
mov
fidivl
in
and
loopne
shll
mov
int3
scas
mov
shlb
neg
popa
cmp
daa
push
xor
movsb
pusha
mov
mov
out
sahf
cmp
daa
push
and
cli
inc
lds
inc
and
mov
les
jg
and
fcmovb
jns
mov
stc
not
sbb
mov
inc
std
xor
push
jge
mov
ret
xorb
mov
mov
lds
loop
test
test
divps
shl
sub
cmp
cmp
data16
sbb
xchg
cmp
ljmp
ljmp
icebp
inc
clc
and
sbb
inc
fildl
pop
cwtl
lret
adc
xchg
jge
jnp
mov
bound
push
loopne
cld
fsts
xor
sub
sbb
adc
imul
decb
mov
hlt
mov
out
int
cmp
sbb
fistps
aam
into
lcall
sub
pop
mov
dec
mov
mov
addr16
loop
jbe
adc
adc
insl
hlt
cmpsb
test
xadd
stc
mov
sub
cmpl
jno
cmp
adc
shll
lds
mov
pop
aad
mov
push
fistpl
test
and
inc
ret
je
xor
dec
and
xchg
or
cmp
jmp
pop
add
inc
pop
ja
stos
pop
sbb
jbe
nop
mov
dec
sub
fidivrl
lcall
mov
mov
dec
ja
popf
push
out
fsubl
mov
inc
dec
xchg
mov
movsl
xchg
fldt
mulb
and
mov
in
push
js
jge
adc
pop
jmp
inc
mov
icebp
pop
in
mov
test
ret
int
out
enter
loopne
rcl
fdivrs
shlb
popf
sub
push
sbbl
test
xor
cmc
jne
xchg
xchg
test
imul
or
mov
inc
in
ficoml
dec
dec
lahf
mov
sub
sbb
mov
out
aam
data16
scas
push
stos
push
fwait
jae
leave
mov
push
sub
or
cmpsb
adc
fsubp
popf
xor
xor
pop
cmc
enter
add
movsl
adc
in
jl
and
dec
mov
rcl
xchg
mov
imul
jns
jg
mov
xchg
inc
adc
test
and
inc
insl
mov
jno
jbe
imul
jns
cltd
mov
addl
and
dec
add
pop
xor
xor
notb
aaa
das
pop
mov
bound
xor
inc
cmp
sub
insb
shrb
xor
cltd
cmpsb
loop
cmpb
mov
pop
push
mov
fisubs
pop
dec
inc
jecxz
push
or
pusha
lock
dec
and
fists
jbe
mov
mov
sub
fcomps
mov
pop
sbbl
mov
cmp
adc
xchg
pusha
sahf
mov
xchg
sub
push
mov
iret
pop
repnz
aaa
pop
dec
stos
and
xchg
in
imul
lods
dec
inc
push
push
mov
gs
shll
ds
dec
js
cmp
call
xor
js
lods
and
add
call
push
inc
std
sbb
lods
nopl
clc
int3
adc
xchg
loope
gs
std
jb
sub
sub
cmc
addr16
jp
fbld
or
adc
cmp
in
loope
ficoml
fimull
cmp
icebp
ret
adc
jge
sub
push
dec
popa
mov
and
or
cmp
mov
in
mov
push
lods
stos
mov
mov
push
xchg
sbb
mov
or
mov
fbstp
push
cmp
cwtl
test
ss
cltd
push
dec
pop
cs
xadd
imul
cld
jo
pop
lds
cmpsb
dec
or
addb
out
add
jnp
ljmp
mov
ret
repnz
arpl
mov
and
daa
int3
xchg
mov
inc
push
test
inc
mov
das
add
sbb
int
and
aad
imul
xchg
sub
cmc
xor
bound
lods
fdiv
test
in
adc
repnz
stos
inc
aad
cld
ja
pop
xor
push
or
das
fcoms
stc
and
mov
scas
insb
or
add
mov
xchg
xchg
jg
mov
loope
cmp
fs
xchg
in
mov
mov
xlat
or
push
xchg
ret
adc
mov
sbb
add
pop
add
mov
mov
loopne
xor
jge
xchg
mov
lea
mov
inc
pop
test
and
jne
stos
arpl
xor
mov
jno
pop
leave
test
sub
add
jecxz
jp
and
in
jl
xchg
or
jo
icebp
in
sbb
mov
jo
leave
cmc
lret
in
imull
xor
orl
xchg
mov
mov
call
pusha
pop
xchg
dec
mov
cmpsb
cmp
ss
dec
test
sbb
and
incb
sbb
jp
add
lret
mov
xor
inc
movsl
sub
call
pop
insb
xor
xchg
cwtl
mov
mov
sub
push
or
in
jne
sub
dec
jne
dec
adc
or
imul
push
sbb
sub
xchg
jg
out
pop
mov
or
mov
push
ds
icebp
testl
jmp
jno
xchg
ljmp
or
xor
xor
icebp
jecxz
dec
sub
sbb
and
pop
in
pushf
sub
mov
adc
ja
xchg
jb
adc
push
mov
pop
cs
cmp
pop
pop
add
sahf
pop
sub
jne
mov
mov
lods
sub
sub
cmp
je
aas
sahf
cmp
fistl
dec
call
shl
adc
jo
add
int
pusha
aaa
add
aaa
sbb
xchg
or
andl
out
mov
ret
lock
jnp
xor
dec
cltd
xchg
mov
xor
mov
ret
push
mov
cmc
add
cmp
inc
mov
jae
das
cwtl
mov
adc
bound
fstpt
imul
stos
pop
stc
adc
insl
add
lods
in
lds
jmp
mov
lods
cmpsl
ds
pop
mov
pop
mov
sbb
mov
sbb
mov
jns
sbb
push
mov
xor
add
mov
iret
filds
and
cmp
inc
arpl
repz
xchg
jge
jle
popf
inc
ljmp
xchg
mov
and
js
mov
jl
mov
out
cmp
aam
jg
and
jp
xor
mov
jl
xchg
sub
into
mov
rcrb
inc
ret
loop
repnz
call
repz
mov
adc
fldl
inc
add
mov
pop
lea
ljmp
jp
mov
rcrb
aad
sub
mov
or
adc
hlt
xchg
xchg
test
and
je
stc
jmp
sti
fwait
and
xchg
xor
cmp
scas
imul
mov
or
push
pop
sbb
aad
divb
dec
pop
xchg
xor
clc
dec
das
std
movsl
fwait
mov
hlt
lret
push
repz
pop
mov
jg
or
sub
sub
mov
test
push
push
test
add
mov
jns
fistps
lahf
lahf
jp
adc
cmpsb
pop
aas
mov
hlt
xchg
fldenv
icebp
ljmp
cwtl
push
notb
cli
decb
lcall
scas
and
add
inc
jb
add
js
scas
fnstsw
push
mov
inc
outsl
cmpsb
dec
loopne
inc
cld
xor
jmp
pop
les
or
sub
and
xchg
mov
rcl
fnstenv
inc
pop
lahf
xchg
bound
pop
cmp
int3
inc
sub
fisttpll
es
pushf
xchg
xchg
push
sub
insb
jnp
xorl
add
insl
adc
cmp
ljmp
inc
dec
mov
rcrb
inc
dec
xchg
in
dec
enter
and
fistps
mov
xchg
or
out
lds
cmp
mov
shlb
push
mov
fs
jle
lahf
adc
clc
insb
jns
xchg
jmp
mov
and
nop
nop
repz
into
dec
loope
mov
and
cmp
and
mov
jnp
sub
sahf
cs
jg
lds
mov
outsl
dec
add
inc
pop
push
aad
nop
mov
dec
out
in
pop
test
mov
add
sti
mov
cmp
pop
dec
xchg
scas
jne
daa
fadd
mov
sbb
les
jbe
xchg
clc
fwait
dec
jnp
popf
pop
test
sarl
aas
sbb
push
push
and
push
test
aaa
lods
xor
pop
insb
and
adc
fs
imul
popa
js
cmp
loopne
aas
pushf
int
push
inc
adc
outsl
insl
push
rolb
mov
inc
mov
mov
js
cmc
pop
and
mov
mov
xlat
jl
jecxz
ljmp
xor
inc
jbe
arpl
mov
into
sti
fwait
mov
std
roll
xor
xchg
xor
jno
inc
adc
fadds
je
das
scas
adc
add
jo
out
inc
stc
xor
add
imul
ljmp
push
mov
mov
in
jecxz
int3
sbb
mov
mov
xlat
inc
das
push
inc
dec
mov
sub
stos
jne
lret
jnp
out
mov
sub
enter
mov
imul
mov
mov
or
int
push
sti
stc
in
jno
lock
mov
cs
xchg
mov
inc
rcrb
adc
insl
fchs
cmp
mov
sub
inc
push
inc
loopne
popf
sbb
out
sub
pop
cs
or
or
scas
loop
and
inc
out
ja
std
ret
mov
lahf
mov
inc
adc
sti
sub
rcll
lret
inc
into
sahf
jo
mov
xor
dec
fnsave
out
cmp
data16
mov
test
dec
pop
adc
dec
or
lret
scas
cwtl
fwait
xor
inc
imul
xor
or
scas
int3
movsb
or
andb
adc
mov
iret
jbe
fiadds
stc
jge
adc
push
cmpsb
dec
repnz
cmp
inc
xchg
jge
clc
sub
in
push
das
fldenv
andl
aas
mov
fs
ret
add
adc
jo
jp
cmpsl
cmp
jmp
mov
aas
add
out
xor
and
and
xchg
dec
test
inc
adc
aaa
stos
push
ds
clc
xchg
or
and
lds
insl
mov
movsb
out
fcmovnb
cmpsb
mov
in
outsb
add
sbb
mov
mov
repz
out
cmp
mov
aad
sub
push
cmp
js
xor
jl
push
mov
sub
inc
adc
lahf
xchg
pushf
xchg
out
push
lcall
xchg
or
mov
int
or
aas
test
movsb
mov
mov
divl
enter
hlt
iret
lock
xchg
and
add
push
mov
incb
mov
mov
fidivrs
xchg
jg
jae
inc
loope
xor
jne
ds
fcmovnb
sbb
je
cmp
mov
dec
sbb
xchg
mov
mov
jo
cmpsl
or
push
xchg
mov
movsl
xchg
push
jo
inc
lods
outsl
and
mov
sbb
mov
push
mov
add
fnsave
out
or
pshufw
add
xchg
pusha
sbb
pop
iret
aad
std
inc
outsl
pop
test
mov
hlt
mov
and
and
aad
cmc
inc
mov
jno
jae
and
test
rcrl
hlt
xchg
xor
outsl
sbb
leave
je
gs
cmp
sub
popf
jae
mov
shlb
mov
mov
xor
adc
out
push
jecxz
sahf
xor
fstl
les
out
mov
dec
inc
repnz
mov
push
jne
notb
pop
je
xor
pop
sub
nop
push
lods
jno
cmp
cwtl
cmp
push
cmp
mov
lahf
sahf
movsl
pop
xor
or
fmuls
mov
ss
sub
stc
mov
int
mov
mov
inc
enter
xacquire
sarb
or
adc
aad
cmp
xchg
enter
push
ret
int3
sub
sub
iret
mov
hlt
addb
pop
jb
pop
stos
hlt
pop
into
orb
xor
addr16
and
push
ret
xor
mov
mov
cmpsl
fsubl
imul
mov
das
scas
stos
xchg
in
cmp
in
mov
iret
push
js
jle
sub
pushf
lods
aas
push
jo
xchg
mov
aam
lock
test
stos
sahf
sarl
xor
fadds
mov
ss
daa
jnp
int3
loopne
xchg
mov
inc
sbb
mov
test
ds
mov
push
lahf
imul
sub
push
cmc
mov
in
xchg
jg
in
push
jmp
push
mov
lea
adc
lret
movsb
push
icebp
stos
shl
pop
sbb
add
dec
push
cltd
sbb
into
pop
loop
mov
shll
xchg
jle
and
mov
mov
adc
push
rcrl
push
ljmp
jl
xorb
adc
or
mov
or
xchg
jp
fdivs
out
dec
loope
push
js
pop
inc
es
xchg
scas
ret
shlb
xchg
dec
xchg
fisubl
das
xchg
xlat
pop
cmp
mov
add
in
movsl
add
adc
je
jg
lea
xchg
inc
push
sub
ret
popf
call
add
and
xchg
push
xlat
xor
sub
lock
mov
xor
dec
outsb
pop
fnstenv
leave
lea
adc
out
fistpll
mov
mov
stos
adc
popa
mov
cmc
lahf
sub
inc
scas
fwait
jecxz
push
aad
loop
dec
loop
adc
jae
in
into
and
dec
xchg
popf
and
xchg
lea
popa
mov
or
adc
jp
data16
jmp
jae
add
push
fstpl
subl
mov
inc
fcompl
adc
push
xor
fistpl
dec
test
mov
clc
jae
xchg
cli
jae
sbb
mov
jnp
negb
int3
add
fucom
cld
mov
sahf
out
fnstsw
inc
daa
fmuls
mov
push
push
cmpsl
das
sub
call
nop
sti
inc
sbb
fiaddl
test
dec
jle
shrl
jb
sbb
add
idivb
inc
xchg
jmp
bound
popf
sahf
cmp
incl
sahf
dec
hlt
jl
fists
push
scas
pop
pushl
pop
fidivs
negb
lock
outsb
loopne
mov
cmc
cmpsl
imul
jg
jne
stc
inc
fdivrl
xchg
icebp
std
sbb
xchg
outsb
lods
aas
dec
test
xchg
inc
out
jb
data16
enter
addr16
sbb
add
xor
dec
push
xchg
add
push
call
roll
and
movsb
mov
push
lret
ret
mov
pop
mov
push
stos
pop
rorb
ret
test
outsb
mov
data16
icebp
pop
out
inc
into
lcall
dec
inc
and
dec
icebp
adc
adc
pop
jg
mov
add
push
dec
fbstp
cld
xlat
iret
push
xlat
jne
movsb
push
aas
je
cmp
popa
aaa
push
or
xchg
fimuls
test
es
inc
xchg
cltd
pop
mov
or
aaa
lds
pop
fsubl
adc
xchg
push
jns
lahf
jb
inc
fisubrl
popa
push
repz
and
jmp
mov
mov
xor
dec
arpl
test
sbb
lods
push
sub
xor
cmp
mov
pop
sti
push
push
mov
int3
scas
mov
cmp
leave
dec
inc
test
cmp
push
xor
aaa
jb
mov
mov
push
add
inc
xor
cmpsl
scas
lods
jne
and
fldenv
je
sbb
inc
dec
nop
stc
iret
or
jnp
fnstsw
divl
mov
jle
cwtl
lea
mov
mov
push
jge
cmpsl
popa
sub
js
lods
fsub
sub
jno
arpl
clc
xor
or
add
cmpsl
pop
mov
and
mov
stos
and
push
dec
int3
hlt
fsubrs
fwait
and
std
xchg
or
add
mov
pop
pusha
movsl
jecxz
mov
daa
fwait
into
jne
push
or
test
into
mov
xor
xor
dec
out
add
inc
xchg
cmpsl
fisubrs
mov
mov
or
inc
std
xor
cmc
stos
lret
leave
push
and
ljmp
jbe
sbb
pushf
jae
push
adc
call
ja
gs
je
pop
pop
loop
pop
sbb
les
mov
pop
inc
lcall
pop
clc
dec
adc
pop
mov
aas
hlt
out
add
or
pusha
ficomps
dec
mov
xchg
loopne
pop
add
mov
adc
imul
mov
mov
cli
test
xchg
int
pop
movsb
dec
add
jae
cli
in
sbb
push
mov
dec
sti
mov
mov
mul
xor
iret
out
lock
sub
sarb
and
movsl
mov
or
or
data16
lods
jbe
adc
and
ret
mov
xchg
push
lds
inc
test
clc
movsl
sub
sub
test
pop
mov
xchg
pop
inc
daa
int3
aad
mov
pop
dec
mov
ret
int
adcl
filds
dec
jae
xor
fidivrs
call
imul
sbb
inc
or
dec
mov
es
lea
sbb
mov
xchg
xchg
and
inc
xchg
cmp
push
sub
fdivp
idiv
sub
jnp
sbb
and
xor
popa
pop
push
cmp
xchg
xor
jl
outsl
and
xor
call
lods
xchg
mov
or
xchg
dec
lock
sbb
lret
pop
fisttpl
mov
aaa
scas
and
cli
mov
popf
out
int
or
cmp
loop
inc
cmp
and
rcrb
pop
cmpsl
std
rcr
out
ficompl
lcall
sbb
and
sub
inc
outsl
arpl
jo
xor
inc
and
movsl
sbb
add
xchg
ss
jp
push
mov
mov
test
cltd
ljmp
or
push
xor
xchg
stos
xchg
push
in
scas
xor
sbb
push
fdivrp
sbb
inc
inc
dec
les
add
pop
enter
dec
jo
clc
rcll
mov
pop
je
inc
sbbb
push
enter
pop
movsb
jg
ficoml
sub
fldl
jmp
sub
stos
xchg
in
test
andl
gs
mov
dec
fmull
cmp
mov
pop
inc
addr16
icebp
out
xchg
mov
leave
cld
into
xchg
mov
xchg
sub
or
mov
fwait
std
dec
mov
mov
ret
movsb
cmc
sarl
jnp
je
sub
adc
sub
inc
cli
ret
sub
call
sbbb
pop
out
into
idivl
stc
in
push
ficoml
loop
call
mov
mov
adc
inc
ret
jmp
jle
mov
arpl
xchg
jno
mov
pop
or
pop
push
mov
dec
clc
ret
enter
stc
mov
ret
jae
lods
mov
adcl
fistl
jp
mov
insb
fs
and
mov
stos
xlat
stos
cmp
add
in
clc
nop
push
out
out
loop
adc
cmp
or
mov
mov
dec
xlat
imul
lcall
jl
xchg
cmp
xchg
xchg
adc
out
and
add
push
js
mov
imul
aas
imul
call
aaa
jg
int3
pop
inc
fsubr
inc
adc
pop
and
pop
lods
mov
inc
out
hlt
jbe
insb
jnp
iret
lods
push
negb
xchg
out
xorl
xor
fwait
and
cwtl
arpl
rclb
xor
icebp
mov
lds
stos
divl
mov
cmp
dec
rcll
lahf
loope
xor
pop
mov
mov
js
push
xor
jno
push
testb
pop
out
mov
aad
cld
dec
mov
inc
cli
or
dec
sti
test
dec
pop
imul
stos
lods
lret
loopne
lods
stc
std
xor
test
inc
jno
inc
lea
cmp
jle
shrl
pop
shll
in
inc
jmp
inc
divl
add
sbb
pop
pop
jbe
push
or
and
xchg
or
ja
jmp
int
sub
fiadds
pmuludq
mov
jnp
aas
inc
jl
outsb
push
int
xchg
and
mov
roll
stos
xor
jle
repz
push
push
mov
je
imulb
jns
rcll
mov
out
fcomi
popa
cmpsb
pop
popa
jno
lahf
mov
pop
in
cmc
jno
xor
lret
or
mov
mov
scas
and
sub
lds
popf
shlb
xor
cmp
sbb
add
push
mov
pop
xor
cld
std
pop
xor
out
xorb
test
and
jne
iret
pop
leave
push
sbb
cmp
jecxz
cmp
mov
xchg
cltd
adc
pop
jge
test
or
in
jne
dec
push
shlb
ret
into
mov
jns
sub
loope
test
sti
add
daa
jb
pop
xor
notl
push
pop
addb
xor
out
mov
mov
or
mov
fmul
xchg
push
lcall
lcallw
mov
cs
test
add
xchg
ja
inc
jmp
out
pushf
sub
fwait
into
cmc
push
mov
fwait
or
ret
xchg
pop
or
pushf
sti
fnstcw
cmp
ficomps
push
addr16
xor
lahf
rcrb
outsb
loopne
scas
pop
mov
inc
sbbb
inc
rcrb
aam
enter
test
sti
in
jle
arpl
testb
adc
pop
adc
sahf
push
push
dec
jle
sbb
sahf
ret
fnsave
dec
je
pop
mov
add
rcrb
inc
gs
xchg
mov
arpl
adc
outsb
jp
bound
sbb
add
fdivrl
xchg
stos
shrl
push
sub
mov
and
testb
mov
shll
mov
lea
inc
pop
and
mov
mov
in
imull
ret
cmp
mov
shl
xchg
jbe
pop
jns
push
repz
test
xor
std
pop
mov
dec
lock
aad
xchg
jb
in
add
cmp
push
fists
addr16
or
cmp
xor
pop
fistps
xchg
adc
add
int3
xchg
xchg
cs
test
jg
sbb
ljmp
test
inc
lods
dec
dec
loopne
adc
mov
jg
mov
pop
std
scas
dec
int3
xchg
mov
ljmp
pop
jne
jmp
pushf
pop
cmc
popa
lahf
inc
repnz
mov
mov
test
xchg
sbb
faddp
xchg
ljmp
xchg
pop
rcr
xchg
fs
push
sbb
stc
popa
icebp
repz
fistpll
cwtl
in
cli
ja
daa
or
psrlw
adc
inc
xor
in
fmulp
and
sub
imul
into
and
sbb
movb
int
adc
fcmovnu
cmp
imul
xchg
or
out
xchg
subl
and
int3
das
dec
and
push
dec
es
pop
dec
sahf
fistl
jno
iret
ret
test
aad
mov
das
jbe
enter
mov
push
mov
mov
addb
xabort
bound
stos
ja
cmc
mov
push
fs
push
jle
dec
sbb
clc
gs
fnstcw
call
mov
push
repnz
pop
mov
add
mov
fcoml
icebp
movd
mov
pop
sub
sub
sbb
push
ss
jae
jle
cmc
rol
fcoml
mov
lods
cmp
jl
in
jnp
sub
sti
push
ljmp
mov
sub
rcl
or
jb
push
dec
cmpsb
push
sbb
sub
iret
sbb
sub
call
xor
xor
mov
in
std
test
stos
fistpl
test
lcall
inc
jbe,pn
cmp
mov
or
test
pop
add
mov
mov
hlt
mov
adc
adc
xor
imul
push
out
lret
mov
add
add
add
or
dec
jnp
sbb
shl
jno
sahf
jg
imul
pushf
scas
out
pop
cmpsl
mov
lods
shr
pop
sub
icebp
push
stos
or
fldcw
push
test
dec
in
sbb
cmp
int
inc
test
sub
pushf
jp
mov
push
jo
pop
xor
fdivrs
addb
push
lcall
in
add
ja
stos
into
xor
pop
repnz
jns
xor
sub
loop
cltd
push
adc
icebp
cmp
jge
lds
xor
mov
jle
sub
or
addl
scas
xor
fcmovnbe
js
sub
dec
pushf
fcmovne
into
lcall
int3
pushf
insl
xchg
adc
xlat
sbb
int
stos
pop
sub
mov
lds
pushw
xchg
cmc
pushf
xchg
lods
inc
pop
aaa
xchg
add
pop
stos
cmp
mov
xchg
inc
push
and
cmpsb
or
and
or
mov
dec
mov
clc
mov
popl
inc
jo
cmp
xchg
cmc
lods
push
mov
xor
xor
sbb
nop
jne
daa
push
fsts
xor
jg
pop
outsb
push
fsubp
mov
xor
push
pusha
lock
mov
push
add
rolb
sbb
rcrl
add
mov
adc
fs
loop
arpl
pop
scas
popl
pop
xor
mov
sub
pop
insb
xchg
xor
mov
and
orl
xchg
loop
je
push
add
popf
xchg
adc
xorl
mov
dec
push
xor
ret
dec
fwait
mov
cltd
dec
mull
xchg
jb
mov
mov
loop
pop
mov
ret
jle
subl
outsb
aad
mov
add
adc
or
loope
mov
inc
inc
lock
fnsave
sub
dec
add
xor
mov
test
jo
test
push
repz
dec
jns
mov
sarb
pop
push
pusha
scas
mov
pop
and
push
loopne
addr16
imul
ds
iret
in
stos
pushfw
add
push
test
mov
pop
lea
add
fcompl
iret
inc
jp
or
cmp
cmp
mov
cmp
les
or
cmp
adcb
adc
jae
ffree
cld
mov
pop
call
call
ss
mov
jge
aaa
xchg
int3
shrl
lock
movsl
pushf
int3
arpl
sub
push
xchg
neg
mov
fwait
scas
loope
inc
inc
jecxz
jp
sarl
sar
push
icebp
mov
pop
jmp
xor
mov
add
rcrb
fsubl
stc
cmp
jbe
out
stc
mov
inc
bound
mov
xor
push
cmp
into
push
jge
ja
pop
pop
shl
into
mov
shll
mov
inc
xchg
sysenter
fs
lret
out
mov
mov
xchg
outsl
adc
sarl
aaa
sbb
movsl
into
popf
mov
sub
movsb
mov
xor
divl
pop
and
lock
pop
test
and
xchg
adc
dec
enter
pop
pop
mov
push
cmp
mov
outsl
mov
mov
mov
bound
iret
sti
xor
mov
rcrb
dec
and
mov
int
pop
cltd
cmp
pop
cltd
jp
jno
sub
push
insl
test
sub
rcrl
and
mov
add
bound
jbe
adc
cld
faddl
fs
xor
jns
subl
sub
test
mov
stos
out
lahf
lds
pop
pop
out
sbb
lret
fwait
lea
pop
adc
stos
pop
pop
addr16
or
push
enter
in
mov
jmp
fdivrp
lahf
cmp
jbe
inc
loop
inc
popa
xor
add
repz
in
outsl
xlat
cmp
jmp
add
flds
loope
xor
je
shl
xchg
mov
cmp
jmp
jae
xchg
out
sbb
incl
hlt
cmp
xor
adc
repz
xchg
psrad
mov
jnp
push
jecxz
test
jbe
jb
mov
punpckhbw
call
in
shlb
push
add
shlb
dec
je
dec
les
add
xchg
pop
repz
xchg
add
stos
shrb
gs
shll
xchg
fsubrp
js
mov
dec
and
adc
or
push
aad
test
cmp
xlat
xchg
lret
jo
sub
gs
popa
imul
lock
insl
mov
lods
fidivrl
sub
and
inc
adc
cmp
cwtl
pop
les
push
ds
adc
andl
loope
xchg
dec
mov
fdivrs
sub
adc
fcomps
push
jge
leave
mov
jecxz
sbb
jae
xchg
mov
adc
cmp
mov
mov
aad
mov
inc
pop
jmp
sub
iret
sub
mov
xchg
or
inc
insb
mov
xor
mov
andl
popf
push
nop
aas
inc
xor
mov
lret
fistl
jne
daa
cltd
inc
mov
fadds
int3
inc
jl
dec
cmpsl
sbb
and
fildll
nop
mov
cmp
add
mov
jnp
inc
fidivl
daa
dec
cli
lret
push
mov
push
movl
mov
shlb
dec
divb
lds
or
sti
aas
out
stos
das
dec
xchg
pop
ja
subb
or
mov
mov
mov
push
lds
mov
nop
sub
push
dec
int3
cmp
pop
mov
add
xor
ja,pt
mov
insb
shll
add
fidivs
inc
adc
push
addl
lods
shrb
js
and
pop
mov
cmp
xor
clc
push
imul
ficompl
add
xchg
fisttpll
call
sub
stc
rcrb
ss
lret
popf
adc
stos
test
mov
jo
lret
stos
sub
and
lret
fisttps
shl
sub
jl
lods
lds
mov
lret
int
pushf
push
out
sub
repnz
lcall
push
xor
mov
xchg
dec
cmp
push
ror
sti
loope
lods
push
inc
sbb
or
stos
js
nop
xor
inc
iret
jecxz
std
xor
das
imul
mov
std
sub
mov
pop
sbb
test
ja
sbb
sub
push
jne
imul
pusha
fwait
jne
pop
pop
xchg
mov
addr16
out
cmp
jbe
std
fmull
xchg
mov
in
xor
sub
movsb
std
roll
inc
insl
cld
outsl
inc
pop
mov
repz
pusha
sbb
lea
mov
jp
xor
cmp
dec
out
cmp
add
pop
scas
movsb
pop
fcoml
dec
pop
jbe
fs
loope
inc
out
mov
popa
and
push
je
shrl
jp
imul
push
cli
les
filds
into
adc
filds
mov
jo
jle
add
lock
mul
mov
cmp
add
repnz
sub
xchg
jo,pt
scas
inc
xor
mov
clc
xor
jecxz
mov
shl
or
popf
jge
mov
push
data16
xchg
int
insl
mov
shlb
mov
sahf
inc
pop
aas
xor
gs
jl
xchg
push
inc
je
imul
adc
aad
sbb
jb
adc
sbb
scas
jno
and
into
aad
add
jnp
dec
iret
repnz
lret
sti
cmc
fnstcw
push
fdivs
cmp
adc
aam
aaa
jmp
leave
push
lcall
mov
cmpsl
dec
test
aam
in
xchg
outsb
push
dec
out
cld
dec
adc
cld
inc
test
lock
jne
pop
in
xchg
push
or
pop
dec
fs
adc
ds
inc
cmp
outsl
aaa
dec
icebp
push
out
les
inc
xchg
and
cs
add
xor
xor
or
xor
test
dec
dec
hlt
dec
cmp
stos
adc
push
xor
mov
pop
push
repnz
out
lea
dec
mov
inc
inc
mov
andb
std
mov
mov
cmp
mov
pop
stos
int3
sbb
mov
inc
outsl
jecxz
out
mov
xchg
arpl
movsl
decl
inc
sub
loopne
pop
nop
and
mov
iret
dec
mov
jge
cld
ja
cmpsb
and
in
addr16
insb
imulb
popf
test
xor
mov
sti
cmp
fwait
movsl
push
into
pop
pop
jecxz
adc
in
pop
mov
mov
daa
jae
pop
popf
xor
shll
fwait
jle
cmpb
add
inc
in
mov
mov
je
jo
mov
in
cwtl
pop
sub
cmpsb
add
es
test
loope
mov
mov
pusha
pop
xchg
add
jae
add
test
dec
jnp
sub
xchg
dec
insl
mov
lret
outsb
inc
mov
sbb
iret
jge
inc
xchg
mov
lds
cmpsb
xor
mov
xchg
and
push
sbb
mov
fucomi
pop
fdivl
xchg
mov
test
out
xchg
loopne
pop
sub
mul
es
mov
xor
sti
pushf
jb
es
mov
mov
mov
js
or
mov
ret
faddl
mov
push
ss
mov
add
incb
cmp
and
fs
outsl
je
inc
push
add
mov
xchg
movsl
ret
sub
push
in
sti
cmp
mov
lcall
mov
mov
mov
lret
jae
cmp
insb
pop
into
add
jle
pop
xlat
imul
cmc
pushf
jo
shll
inc
jg
inc
push
mov
mov
inc
movsl
fsubl
notl
repnz
inc
pop
cltd
cmpsl
inc
leavew
lret
push
mov
movl
push
pop
int3
cmp
sbbb
iret
sub
sub
stc
enter
sbb
or
or
out
sub
dec
cmp
lea
int3
stc
or
fwait
cmp
fs
and
cld
dec
ret
mov
pushf
or
lahf
and
in
pop
xor
insl
cli
sub
cmpsb
mov
iret
push
mov
dec
fstl
ss
scas
js
leave
push
xorl
loope
lcall
mov
fisubl
xor
push
popa
ss
mov
in
icebp
pop
or
lcall
adc
and
loope
cwtl
jb
sarl
cld
pop
jge
testl
bound
dec
sbb
mov
push
std
jp
inc
aas
mov
jbe
push
jmp
adc
mov
aas
inc
or
push
adc
gs
je
mov
stc
inc
out
imul
jl
cmpsb
pop
jns
addr16
pop
add
xchg
hlt
andb
adc
dec
mov
or
mov
fisttpl
fcompl
mov
outsl
stc
out
sub
push
jbe
testl
std
jge
adc
imul
and
sbb
cld
iret
stos
pop
pop
out
into
fcompl
imul
stos
add
push
cmp
adc
xor
cmp
add
fistpll
inc
add
inc
jnp
pop
cltd
push
ror
sbb
popa
jb
xchg
jecxz
and
call
call
lea
inc
jo
mov
outsb
aam
add
adc
add
adc
shl
cmp
mov
in
pop
dec
dec
pushf
fdivrl
add
cs
cmpsl
cmc
xlat
nop
mov
mov
mov
bound
rcrb
mov
xchg
adc
ficoml
push
mov
aad
or
jge
popf
inc
push
mov
test
sub
sub
adc
xlat
ret
repnz
fcoml
aas
fs
fidivs
sub
push
cmp
les
mov
inc
mov
bound
insl
push
sub
xor
jae
bound
sbb
shrl
sub
movsb
popf
addr16
out
movsl
ret
test
aaa
repnz
add
andb
sbb
in
add
lret
mov
mov
or
frstor
push
mov
or
shr
mov
jg
sbb
cmp
test
icebp
inc
int3
in
ds
sub
dec
adc
aas
lods
and
push
adc
mov
sub
jp
mov
stc
cmp
lahf
imul
mov
or
mov
fisubs
clc
sub
popf
push
xchg
insl
enter
insb
and
bound
adc
xchg
mov
sar
scas
std
cmp
ds
out
jl
xor
jno
popa
xchg
sbb
lahf
subb
std
inc
int3
lahf
out
rcrl
inc
sti
shrb
pop
add
lock
jae
out
push
sub
popa
cmp
cli
xchg
xchg
jae
cltd
jae
inc
repz
cld
jnp
push
add
cmp
pop
adc
cld
std
clc
scas
xor
aad
adc
leave
bound
or
cmc
mov
jp
sub
int
hlt
xchg
clc
pop
cmpsl
add
repnz
movsl
imul
in
mov
cmp
dec
mov
shll
scas
xchg
pop
and
pusha
into
and
repz
mov
aaa
das
daa
gs
cltd
pop
insb
gs
mov
push
out
outsb
subb
leave
adc
push
push
xchg
ret
inc
lcall
pusha
roll
push
je
sahf
xchg
ljmp
and
push
xor
xor
insb
cmp
sub
aad
jbe
addl
ds
adc
or
lods
mov
ficompl
push
cmpb
arpl
sbb
test
inc
jmp
mov
bound
jle
jno
inc
div
adc
mov
inc
mov
mov
scas
mov
xchg
rolb
mov
xor
mov
cmpl
or
inc
cmp
aaa
dec
mov
lods
adc
loopne
adc
inc
bound
add
fcmove
dec
rcl
push
test
scas
fsubrs
hlt
out
nop
sti
sub
xlat
gs
or
loop
int
mov
test
add
loopne
cmp
das
inc
fwait
data16
outsl
fcomps
cmp
out
movsl
stc
outsl
addr16
not
jl
push
jg
adc
daa
int
sub
lods
or
mov
rcrb
push
das
mov
jno
push
mov
sub
dec
fisttpll
lock
mov
inc
out
stos
test
inc
shrb
jns
mov
mov
ds
aad
repz
fisubrs
pop
jecxz
mov
pop
paddsb
sub
push
xorb
xchg
add
xchg
enter
adc
pop
and
vmovdqu
pop
loop
scas
or
test
cmp
and
inc
out
dec
push
sahf
pusha
jg
fbld
rorl
cmp
cmp
xorb
jnp
pop
ss
fcmove
movsl
dec
jae
xchg
mov
shl
mov
subb
scas
mov
jge
mov
scas
inc
ret
and
call
dec
out
xchg
test
sahf
lods
hlt
or
jnp
push
xor
cld
dec
push
jecxz
repnz
lods
pop
push
das
jmp
in
cs
jo
popa
mov
loop
iret
inc
or
rcr
lcall
arpl
pusha
addr16
xor
outsl
dec
add
fsts
or
movsb
sub
mov
adc
or
in
arpl
push
rolb
ret
dec
jo
adc
sarl
inc
mov
std
sub
nop
pop
stc
add
mov
cmp
shr
loopne
rorb
int
movsb
push
xchg
mov
cmp
mov
repnz
sti
mov
cld
sahf
cwtl
add
fcoms
add
fcmovbe
in
in
mov
fstpt
jge
ss
faddl
sbb
push
lock
sti
xor
pop
cmpsb
movsl
imul
in
in
inc
leave
or
jle
xchg
int
pop
and
mov
mov
xor
hlt
scas
push
popf
push
fisubl
fdivs
jne
mov
fs
lcall
jne
cmc
mov
pop
and
mov
test
aaa
jecxz,pn
fldl
or
push
and
pushl
gs
stos
jmp
jmp
into
testb
inc
in
fstl
std
scas
in
push
adc
in
cmp
rcr
adc
aaa
test
hlt
loope
inc
inc
cld
mov
inc
jmp
psubusw
or
mov
lods
adc
xor
jae,pt
inc
jmp
sbbb
lock
add
mov
jecxz
mov
sbb
sahf
negb
addr16
aam
jmp
xchg
mov
testl
iret
shrl
sub
js
pop
cmc
clc
mov
jle
push
mull
ss
insb
andb
or
popa
js
xor
inc
into
je
add
out
cmp
or
cmp
and
incl
sbb
adc
movsb
inc
invd
jno
and
or
enter
push
test
push
lahf
jne
dec
mov
subl
stc
and
shrb
orb
scas
xchg
cmpsb
pop
adc
repnz
cmc
mov
arpl
aam
mov
push
cli
je
jp
ret
xchg
movsb
adc
repnz
mov
and
aaa
inc
sub
aad
jp
jle
cmp
hlt
sub
cmp
popf
jmp
insb
jo
push
pop
pop
sbb
push
mov
call
jno
adc
jns
movsl
pop
leave
xor
js
push
xchg
faddp
fbstp
lcall
inc
cmpsl
cmc
ret
mov
or
xor
leave
adc
cmc
ljmp
push
pcmpeqd
mov
mov
pop
ss
xchg
loop
cli
arpl
inc
jle
mov
dec
lock
repnz
fisubrl
sbb
mov
leave
xchg
jnp
in
out
pop
ficompl
sub
movsl
adc
es
xchg
pop
bound
adc
mov
outsb
xor
test
rclb
push
cwtl
pop
clc
insl
lods
in
ficomps
jecxz
push
ret
push
push
add
cli
mov
xchg
sbb
arpl
call
pop
mov
in
rorb
dec
aas
pop
cmp
rcll
push
jno
arpl
jmp
jge
add
cmp
stos
push
add
outsl
sub
sub
jns
lret
pop
shll
push
sub
ja
cmp
test
jne
and
dec
int3
add
sbb
ds
xchg
pop
mov
pop
push
push
in
pop
push
pop
aas
jne
iret
pop
iret
mov
cld
add
sbb
jnp
fmul
stc
jae
add
out
aas
fsubr
rorb
out
pop
test
pmaxsw
sbb
dec
loope
mov
sub
addl
xor
nop
ss
aaa
std
inc
out
xor
sahf
cmp
data16
jae
jle
in
int3
mov
lea
jmp
jo
je
adc
pop
psubw
add
fimuls
fs
and
sbb
out
andl
fisttps
fmull
add
sub
dec
insl
mov
push
cmp
and
mov
ja
cmp
mov
push
test
outsb
ds
mov
mov
fs
and
pop
jmp
xlat
lret
enter
xor
out
in
mov
cs
sub
cwtl
dec
enter
fistpl
jo
pop
test
or
mov
sub
sti
flds
xor
inc
mov
lret
shll
movsl
das
cmp
inc
repnz
idivl
fisubrs
jne
pop
cs
ficompl
int3
loopne
add
loopne
shrb
pop
loop
mov
add
push
push
dec
test
bound
aaa
cmp
sub
insb
and
jmp
sub
add
iret
fdivr
dec
jmp
push
or
or
push
dec
gs
mov
leave
cmp
jmp
mov
iret
stc
std
xchg
mov
loopne
in
in
mov
lahf
sbb
dec
jae,pn
sub
jle
push
andl
cwtl
inc
or
pop
mov
inc
push
dec
pop
jo
je
push
mov
fistpll
sbb
jecxz
mov
push
arpl
clc
popf
andb
mov
sahf
mov
movsl
sbb
mov
out
inc
adc
rclb
test
std
mov
jnp
xor
mov
dec
popa
xchg
mov
sub
or
jbe
gs
add
mov
mov
mov
fxch
push
cmc
jo
sbb
add
jo
pop
xchg
add
jge
popa
out
pop
push
outsl
popa
sub
add
cmp
iret
movsl
in
inc
and
inc
pcmpgtd
cwtl
push
out
mov
fistpl
cltd
stc
icebp
sub
pop
sbb
and
and
inc
push
mov
mov
mov
pop
xchg
mov
das
in
jne
cmp
mov
inc
inc
push
cmp
and
mov
int
push
pop
cli
xchg
mov
mov
arpl
call
imul
mov
or
dec
cwtl
mov
mov
fwait
jns
aas
push
jo
sbb
cmc
xchg
outsl
pop
test
mov
xlat
dec
hlt
xchg
mull
ja
sub
dec
test
insb
lock
aaa
cltd
xorl
fsts
cli
mov
jmp
loope
stos
sub
ss
test
adc
mov
adc
movsl
cmp
out
pop
adc
div
hlt
dec
inc
sbb
scas
ret
add
sbb
mov
add
nop
and
cmp
jmp
scas
mov
sti
dec
out
and
pop
lods
fldt
cs
loope
xchg
inc
mov
push
push
mov
ja
add
dec
lcall
jmp
mov
inc
sbb
xor
aad
xchg
dec
shl
xchg
test
jmp
int3
sub
das
fwait
ss
xor
mov
mov
mov
shll
xchg
mov
push
dec
sahf
gs
push
js
repnz
fstpt
pop
scas
mov
into
out
rcll
lods
xchg
cmpl
xchg
mov
sti
test
outsb
jge
shrb
fists
daa
aad
mov
fcom
int3
add
add
cltd
lcall
ret
adc
rcrl
fstl
in
and
lret
push
ja
adc
mov
fldcw
test
fadds
lods
daa
divl
fisubl
mov
push
lahf
dec
inc
fs
xchg
popf
notb
xor
mov
aas
test
ljmp
jmp
rorb
dec
push
xchg
js
adc
mov
test
or
sbb
push
iret
add
outsb
std
lret
xlat
xor
xchg
mov
mov
mov
push
stos
stos
sub
and
rcll
mov
aad
mov
shr
das
rclb
inc
daa
mov
repz
xorb
xor
mov
lcall
mov
mov
mov
cmp
sbb
push
add
adc
es
mov
ss
push
xor
and
pop
movsb
fucom
leave
loop
dec
out
fdivrp
dec
es
es
or
push
push
imul
repnz
push
and
and
scas
mov
push
outsl
dec
mov
xor
pop
dec
cmp
push
ljmp
stc
movsb
pop
cmp
movsb
dec
scas
movl
outsb
fisubrs
dec
pop
arpl
sti
ret
dec
fstl
test
call
test
pop
fistps
int3
js
inc
cmp
push
fwait
xorl
ret
mov
push
mov
outsl
test
jle
and
and
cmp
dec
xor
or
fdivr
or
and
sbb
add
outsl
mov
leave
lcall
pop
adc
dec
int3
inc
arpl
mov
inc
lea
sbb
into
mov
mov
nop
pop
sub
rep
sub
cmc
adc
sbb
jmp
dec
adcb
cmp
cmp
mov
repz
imul
jmp
or
nop
mov
jno
mov
gs
repnz
outsl
inc
sbb
inc
mov
add
sar
jo
je
cltd
rdtsc
sub
jmp
in
xchg
and
in
push
scas
add
fdiv
aas
hlt
test
loopne
mov
fucomip
stos
push
and
lcall
sti
test
std
mov
mov
adc
andl
xchg
add
insl
or
sub
jnp
push
mov
popl
lods
and
shlb
arpl
mov
mov
sub
data16
shrl
mov
inc
mov
bound
int3
mov
mov
in
test
pushl
mov
sub
out
add
lret
pop
pop
aad
lret
mov
pop
mov
pop
jne
fcompl
pusha
gs
add
rcrb
out
stos
add
loop
add
popf
test
mov
hlt
add
mov
cmpsb
and
and
mov
mov
mov
jecxz
mov
mov
aam
clc
xor
mov
cmp
mov
sti
aas
repz
jbe
imul
dec
mov
inc
neg
xor
and
add
mov
add
outsl
loope
out
sbb
call
and
xor
mov
cmp
call
int3
xlat
jo
fstps
loop
xlat
pop
xor
jmp
es
mov
movsb
inc
arpl
push
jnp
xlat
jge
inc
push
cmp
addr16
lock
or
loope
out
loop
mov
xchg
test
rol
sbb
daa
push
out
call
or
cmp
and
sahf
fsubl
lahf
fs
cmp
mov
shll
daa
fs
cmpsb
and
adc
ret
push
fmul
lea
inc
pop
xchg
xchg
dec
fs
shll
clc
jle
inc
dec
pop
mov
stos
out
dec
cmc
inc
popa
pop
fcoms
mov
mov
shl
andb
or
cmc
aas
xor
add
xchg
inc
jno
into
fistl
sbb
ffree
out
sub
sarl
pop
es
stos
mov
daa
jb
stos
int3
rorb
sub
mov
ret
fwait
xchg
outsb
popf
ljmp
sub
xchg
push
xchg
xchg
fcom
xchg
add
cmc
ja
sar
cmc
dec
mov
loopne
push
fidivs
mov
fnstsw
jo
xchg
je
or
mov
jno
push
jo
neg
sarl
push
fidivrs
push
lds
adc
movsl
push
inc
mov
jge
push
aam
outsl
loop
jns
and
filds
and
in
aam
cwtl
xor
popa
mov
popf
jl
jp
sbbl
or
dec
mov
push
sbb
adc
cld
inc
lods
stos
sub
sbb
fidivrl
outsb
jae
inc
sti
cmpsb
popf
stc
fsubs
sbb
push
pusha
in
dec
scas
pop
pop
mov
fs
push
insb
sbb
xor
push
jg
push
mov
rcrl
mov
pop
bound
jmp
cmp
imul
push
sub
sbb
inc
les
jge
cli
lcall
or
inc
or
testl
clc
push
shlb
adc
inc
fisttps
fimull
js
sub
lcall
pop
xchg
pop
rclb
insl
sbb
jo,pt
mov
xchg
inc
nop
xchg
dec
fdivr
pop
insb
outsl
fsubl
popa
mov
jae
inc
sbb
shlb
outsb
mov
dec
lcall
js
sbb
inc
fbld
mov
sbb
or
inc
mov
push
fisubl
xor
jns
jns
loop
loop
sub
inc
gs
aam
insb
push
adc
sub
push
cld
xor
cmpsl
arpl
push
xor
push
inc
lea
stc
cmp
xchg
or
lds
xchg
inc
push
xor
sbb
jne
repnz
mov
movsb
or
into
insl
add
lock
lea
mov
mov
scas
inc
mov
cmp
in
or
iret
sbb
jg
ja
cld
pop
stos
add
pop
mov
mov
leave
ror
les
popf
pop
gs
sti
sub
mov
inc
lret
mov
xor
or
adc
jp
push
and
fistpll
loop
sbb
loopne
add
inc
push
lret
ljmp
xchg
je
dec
add
add
scas
pop
sti
imul
mov
pop
add
push
push
icebp
sbb
cld
sbb
ja
sub
test
sub
arpl
lods
mov
movsb
cmp
mov
mov
pop
shlb
or
jle
xor
push
or
mov
daa
xchg
mov
out
inc
inc
gs
leave
inc
mov
mov
leave
pop
push
fdivs
dec
and
push
adc
sbb
mov
roll
in
adc
inc
test
xchg
fldl
push
inc
adcl
mov
mov
lea
mov
pushf
in
mov
fidivrs
jae
push
jecxz
das
push
aad
pop
out
loope
xchg
lcall
push
push
bound
dec
mov
pop
sub
gs
push
inc
icebp
push
ficomps
imul
cmpsb
xchg
subb
cmp
jmp
loop
es
mov
idiv
jmp
inc
xchg
out
stc
push
test
mov
mov
and
sahf
sbb
dec
pop
out
imul
pop
dec
xchg
nop
hlt
sbb
jg
cli
push
call
js
mov
out
add
sub
and
js
nop
xchg
leave
pop
lret
stc
mov
cltd
ja
mov
out
fstps
pop
das
lods
add
mov
aaa
enter
das
aaa
pop
push
xchg
das
jns
popf
push
daa
mov
pop
jne
mov
add
out
pop
mov
in
sub
stos
xor
cwtl
loopne
pop
xchg
inc
dec
insl
jl
scas
and
xchg
aam
out
ss
inc
movsl
mov
int
into
or
dec
dec
mov
movsb
add
int3
push
mov
insb
sbb
scas
aaa
or
test
and
inc
mov
mov
lock
and
hlt
add
jl
or
pop
jge
fadd
jno
adc
ret
inc
inc
xchg
sbb
dec
mov
sub
loope
xchg
dec
idivb
pop
inc
imulb
clc
sub
in
mov
xchg
jmp
scas
lods
add
repz
fstp
or
mov
mov
aam
sub
xlat
jbe
adc
pop
outsl
js
jne
add
dec
imul
fwait
arpl
rcr
xchg
cmp
pushf
imul
push
ret
std
loopne
addb
pop
push
cmpsb
outsl
adc
testb
nop
pop
xor
mov
jg
fmul
xabort
movsl
jp
adc
addl
inc
inc
inc
inc
mov
inc
in
imul
sbb
cwtl
icebp
sahf
repnz
mov
rcrb
inc
lret
jne
and
xor
int3
push
lods
stos
mov
insl
push
sub
cmp
popf
mov
xlat
in
clc
inc
push
in
lret
dec
or
xchg
aas
jne
or
xorb
shlb
jmp
daa
mov
adc
testl
loope
adc
loope
in
seta
mov
test
mov
mov
inc
xlat
imul
and
mov
and
push
in
mov
pusha
pop
insb
sbb
lret
mov
fsubrl
into
cmpsl
jbe
jmp
mov
into
popf
pop
jge
inc
icebp
sub
mov
xor
aad
push
and
mul
stc
adc
inc
notl
jno
and
mov
mov
daa
not
test
out
sub
xchg
jle
icebp
and
je
dec
gs
gs
andl
and
sub
fcmovbe
leave
jmp
fld1
or
movsb
or
ljmp
test
mov
dec
imul
dec
mov
inc
mov
ljmp
int
movsb
lret
inc
loopne
mov
lea
jo
sti
jl
pop
pushf
outsb
imul
push
pop
cli
int3
gs
xor
dec
jmp
mov
xor
movsb
xchg
jmp
inc
inc
mov
or
and
idiv
mov
mov
cmp
xchg
pop
rcl
or
out
and
rorb
cmp
pop
lret
push
movsl
out
xchg
insl
loop
lock
xchg
cmp
xchg
movsl
dec
sbbl
push
fdivl
inc
cmpsl
and
adc
adc
jne
popf
movsl
push
xchg
pop
mov
pop
loope
and
test
jge
mov
inc
cmp
fs
fdivrs
inc
add
cmp
sbb
jecxz
jle
ficoms
xchg
lret
ficomps
pusha
hlt
cmc
leave
adc
testb
add
mov
stos
imul
dec
dec
mov
xchg
fistpl
sub
sub
xchg
sarl
ret
test
and
fisubrs
dec
pushf
stos
leave
test
shrl
inc
jae
cmc
inc
pop
and
inc
mov
or
sahf
popa
ja
or
shrb
jmp
popf
xchg
sbb
aas
mov
push
xor
xor
fcomps
sbb
sbb
xchg
aam
insl
mov
movsb
mov
dec
adc
data16
mov
mov
cmpsl
bound
enter
sub
pushf
rcr
inc
xchg
rclb
idivb
or
push
mov
pop
jmp
out
daa
fnsave
je
jno
or
fcomi
popa
xor
dec
syscall
fs
pop
sbb
loop
dec
cld
mov
lret
add
out
arpl
sub
and
mov
stos
cmp
jns
in
movsb
pop
inc
iret
mov
in
fnstenv
cmp
xor
inc
scas
es
testb
pop
adc
jmp
cmpsb
imul
inc
adc
dec
jecxz
lcall
out
jg
das
out
mov
mov
xor
es
testl
ja
int3
cmp
nop
xlat
add
out
pop
jbe
adc
out
pop
jp
loope
xchg
inc
pusha
sub
or
jb
sbb
xchg
shl
or
sbb
gs
pop
sub
stos
adc
mov
push
or
leave
in
lret
testb
sarb
push
stc
outsb
fmul
aaa
aaa
fwait
mov
push
jb
out
sub
mov
aad
hlt
fwait
stc
stos
dec
nop
xor
stos
enter
push
dec
repz
pop
inc
outsb
pop
mov
lahf
mov
mov
jmp
jg
inc
jmp
cmp
push
dec
jno
cmp
sahf
adc
cmp
jg
imulb
add
call
adc
daa
pop
pop
addl
mov
and
xchg
notb
cltd
mov
roll
pop
mov
movsb
or
jb
mov
out
mov
mov
shll
or
xchg
outsl
idivb
xlat
aas
cmpsl
dec
xlat
lods
mov
lret
pop
mov
imul
pop
ret
jge
cli
adcl
xchg
sub
jge
and
or
clc
dec
aaa
pop
mov
and
jns,pn
pop
sub
mov
scas
jecxz
cld
add
shlb
rorb
push
fldl
xchg
call
cmp
mov
push
push
das
icebp
xor
add
fnstsw
ljmp
push
aam
pop
fnstcw
enter
cmp
es
mov
lcall
sbb
mov
jp
lods
fisubl
dec
fbld
push
stos
mov
add
sar
repz
rcr
jg
push
push
andl
fs
insb
sti
dec
subb
mov
dec
push
std
jp
movsl
in
pop
mov
pop
pop
jne
inc
mov
sub
inc
cli
pop
inc
rorb
hlt
shll
inc
ds
mov
mov
adc
sti
inc
mov
iret
xor
xlat
mov
jecxz
lret
fs
push
testb
mov
pusha
jmp
dec
mov
or
je
or
in
in
xchg
sbb
push
mov
loope
std
dec
add
fld
stos
mul
pop
insl
xchg
lret
adc
cmpsl
push
xchg
mov
imul
aas
mov
adc
jno
mov
enter
add
int
mov
dec
aam
xor
xor
loopne
and
js
xchg
lock
test
xchg
push
loop
adc
testl
popf
cld
lea
mov
adcl
in
xchg
stc
jle
fidivl
addl
xor
in
mov
bound
out
shlb
sahf
xor
push
mov
testl
lods
stos
das
aas
jle
mov
ret
imul
stc
pop
daa
ja
out
ja
cwtl
aad
imul
xacquire
enter
mov
pop
and
add
cmp
pop
cmpsb
cmpb
jecxz
xchg
sbb
adc
test
into
loopne
xchg
sti
mov
dec
add
push
out
sbb
ficoml
adc
mov
ror
pusha
in
insb
push
sub
jp
jbe
pop
mov
loope
mov
test
repnz
ja
inc
jae
ret
inc
das
cmp
loope
aam
push
mov
sahf
mov
lcall
sub
lods
iret
adc
dec
subb
mov
mov
test
add
mov
pop
cmp
and
jnp
pop
push
movups
push
cmc
mov
shrl
sub
jns
xorps
sahf
sub
out
push
add
jno
movsl
fwait
push
jns
xor
outsl
ja
sub
stc
mov
jbe
cmp
fidivrs
sar
hlt
mov
jle,pt
sub
lret
mov
out
xor
lea
xor
repnz
or
pop
in
lods
push
daa
or
mov
repz
pop
sbb
sub
rorb
cmpl
dec
pop
hlt
mov
roll
test
inc
xchg
je
popf
xchg
rolb
xor
fmuls
jle
and
out
aas
pop
push
adc
xchg
lock
addr16
clc
inc
call
push
repnz
mov
push
or
add
or
xchg
adc
jl
and
cld
or
out
jecxz
add
sbb
inc
popa
inc
jns
push
test
dec
lock
test
jb
movsb
mov
into
inc
mov
cmpsb
outsb
adc
stos
ret
rcrb
inc
pop
mov
xor
shrb
inc
xor
sbb
pop
or
pop
lcall
cmpsl
insl
lret
push
out
ffree
inc
aad
negl
aam
ja
adc
jbe
fdivrs
sbb
adc
dec
mov
fwait
loopne
shlb
test
ret
in
lods
xorb
shrl
xor
pop
imul
addl
leave
pop
mov
cmpsb
shll
jae
jbe
xor
sti
sub
xchg
mov
ds
call
icebp
les
shrl
int
pop
adc
pop
add
sbb
sbb
faddl
or
cmp
out
aam
push
sbb
pop
and
shlb
push
and
fsubrl
imul
and
inc
nop
lcall
test
jle
mov
or
pop
push
cwtl
loop
fcmovnbe
mov
sub
xor
push
mov
xlat
out
push
fiadds
enter
outsl
int3
gs
sub
add
ret
jb
addl
inc
cmp
loop
push
faddp
in
sbb
adc
push
dec
ficompl
mov
cmp
and
and
dec
pop
sbb
outsb
lock
jp
jno
mov
shrl
jg
lds
repz
mov
push
pop
fstl
xchg
imul
ret
je
lcall
stos
inc
roll
lahf
adc
aaa
fnsave
mulb
and
data16
and
xor
test
adc
push
cmp
xor
int3
cwtl
mov
pop
xchg
std
push
dec
ror
sbb
repz
cmp
sbb
insl
xchg
mov
repz
xor
pop
dec
mov
idivb
andb
dec
insb
in
mov
mov
ds
jns
sub
movsl
jae
cmp
cld
dec
popa
cmc
lret
call
jp
lcall
aad
push
sub
mov
sbb
xlat
and
cmp
jmp
inc
aad
sbb
jl
pop
adc
nop
das
sub
aas
stos
arpl
cmp
jo
inc
mov
push
je
stos
adc
and
xchg
push
test
push
and
cmp
jg
outsl
xor
mov
adc
mov
hlt
enter
es
into
es
ds
sbb
mov
push
jnp
enter
pcmpeqw
or
das
bound
pusha
pop
push
hlt
ljmp
and
insl
inc
mov
sbb
pop
pop
cmp
mov
fcompl
mov
adc
cmpsl
sub
or
mov
xchg
in
add
xchg
mov
in
fstl
jle
aaa
pop
inc
in
push
aaa
fs
in
es
mov
fisubrs
mov
repnz
lods
mov
sarb
xchg
negb
sbb
cmpl
ss
sbb
add
outsb
enter
and
or
adc
lods
xchg
pop
ljmp
dec
cmpsl
rclb
mov
sahf
stos
add
pop
imul
mov
das
xor
jmp
xor
jb
pop
inc
adc
or
stos
jbe
sbb
enter
lret
in
iret
cs
in
cmp
xchg
scas
dec
jno
xchg
push
push
and
add
sub
sub
cmp
popl
sbb
mov
jecxz
push
and
dec
push
push
pop
and
cs
mov
insb
mov
and
pop
cmp
push
subb
and
in
mov
and
pop
in
sbb
cltd
lret
mov
mov
add
cwtl
sub
xor
mov
xor
dec
push
adc
inc
sbb
mov
jg
mov
push
mov
into
add
in
frstor
add
cmpsb
fwait
icebp
in
out
daa
testl
roll
aam
daa
xchg
enter
test
mov
xor
push
jnp
loope
loopne
xor
inc
ss
inc
adc
iret
frstor
lret
in
leave
test
in
in
fdivr
mov
xchg
and
cmpsb
jecxz
inc
xchg
imul
fists
pop
jo
sti
sub
clc
dec
ljmp
lds
mov
arpl
jle
arpl
and
dec
aam
jmp
cmp
outsb
sub
fisubs
mov
cmpsl
iret
test
pusha
fisubrl
ja
adc
mov
mov
sub
repnz
push
mov
sarl
ret
xchg
lods
mov
popa
mov
add
mov
sub
lods
push
mov
movl
jb
add
inc
adc
push
fld
sbb
adc
into
xchg
dec
lods
push
jecxz
xchg
imul
cmp
sbb
das
pop
xchg
imul
pop
cmpsb
faddl
push
xor
dec
inc
add
es
rorl
xchg
scas
out
enter
adc
push
sub
jb
test
test
movsl
push
sbb
cld
outsl
pop
jae
add
add
imul
jmp
pop
inc
xchg
aaa
mov
mov
jbe
aas
rorb
shl
shrl
mov
js
and
adc
addr16
xchg
stos
ds
cmp
pop
push
cmovs
ficompl
cmpsb
mov
or
sub
push
add
jge
ja
and
stc
push
incl
fcomip
lret
dec
jae
sub
jle
sbb
adc
push
lock
in
stos
dec
std
pop
lods
subl
test
xchg
sub
add
xchg
movsl
scas
mov
add
mov
popa
vpmovmskb
inc
mov
jns
mov
pop
mov
ret
mov
mov
adc
cmpl
pop
push
je
xor
xchg
adc
mov
call
mov
call
les
ja
fcomi
mov
sub
inc
pop
or
or
lahf
xlat
and
add
loop
pop
and
sub
dec
in
test
mov
adc
fs
adc
or
dec
pop
push
mov
mov
push
push
dec
pusha
pop
clc
lds
or
jno
sbb
out
mov
mov
fisttpll
lds
xchg
ret
data16
pop
shrl
cmp
mov
iret
jecxz
ljmp
imul
fsub
inc
add
cmpsl
jge
cs
push
outsl
xchg
sbb
inc
fisubrl
xchg
jo
mov
and
fucomp
mov
xchg
xchg
orps
push
adc
mov
xchg
jge
xor
lds
sbb
dec
mov
push
ret
fadds
adc
fwait
pop
fildl
sub
adcb
out
mov
add
adc
shll
push
pop
je
push
rol
adc
shl
push
ss
lret
ja
inc
orl
jne,pt
mov
sub
xor
loop
xchg
pop
rorl
bound
call
divl
pop
int3
fwait
cmp
mov
xorl
xchg
sbb
xchg
mov
pop
sbb
int3
cmp
lfs
mov
push
and
cld
ss
sahf
dec
push
loopne
aas
popa
xchg
divb
and
pop
iret
xor
cwtl
push
jnp
mov
stos
push
mov
ja
fisttpl
dec
dec
mov
arpl
mov
push
or
call
push
fdivrl
add
push
dec
in
xor
ss
mov
aaa
mov
jge
jbe
or
jb
xchg
mov
pop
jecxz,pt
mov
lods
jp
call
xchg
bound
dec
jge
pop
jmp
inc
cmpsb
clc
cltd
mov
dec
stc
push
dec
mov
jne
fimuls
movl
loope
push
mov
scas
dec
pop
outsb
loopne
cmp
push
jno
and
loopne
sbb
cs
dec
xchg
movsl
stc
inc
xchg
pop
adc
cmc
fnstcw
lods
outsl
outsb
pop
and
arpl
pushf
push
xchg
push
call
sub
je
push
sbb
lods
push
add
cmpb
mov
and
push
mov
loopne
adc
pushf
clc
rcrl
xchg
pop
outsb
inc
inc
dec
push
mov
jge
stos
int3
lea
mov
js
rcll
test
cs
inc
mov
jp
in
out
xor
sub
xchg
sbb
rcl
cmc
cld
int3
adcb
push
mov
mov
xor
dec
dec
addr16
iret
mov
in
sub
xchg
movsl
idivl
mov
enter
call
nop
in
xor
inc
cmp
adcb
repnz
dec
pop
sub
movsb
sbb
testb
dec
out
jle
popa
jbe
dec
and
repnz
jecxz
jmp
push
cmp
or
or
mov
dec
cmp
les
ret
jle
out
out
lock
adc
call
scas
xor
mov
in
jno
loop
mov
cld
mov
jnp
pop
test
rorb
xor
or
scas
adc
mov
aad
mov
pop
loope
inc
movsl
popl
leave
lret
cltd
test
add
cltd
jp
call
pop
cmc
push
ss
mov
or
xor
sub
inc
jecxz
jo
ljmp
push
jge
pop
stos
ret
push
movsb
mov
je
rcll
fwait
out
arpl
add
out
cmp
ljmp
jae
sbb
sub
jl
testl
nop
fwait
mov
mov
jp
xor
ret
push
call
add
inc
mov
inc
push
dec
mov
cmpsl
aas
lahf
test
fs
lcall
and
mov
sub
and
adc
lret
jns
dec
adc
mov
adcb
dec
sti
sbb
fbstp
lcall
or
insl
lcall
inc
xor
cld
repnz
and
mov
stc
mov
mov
call
push
and
dec
push
out
into
cld
push
and
popf
pop
into
xor
mov
sti
sbb
mov
loope
fisubl
jp
xor
adc
or
sbb
lret
adc
dec
ja
cs
mov
cmpsl
imul
lea
lock
out
push
pop
shrl
subl
aam
push
rolb
push
adc
popf
sahf
mov
fdivs
loope
push
pusha
dec
xor
jo
icebp
push
inc
std
cmpsl
fisubl
into
lret
push
popa
repz
lret
push
ljmp
inc
es
sbb
adc
inc
ja
jbe
mov
fwait
xchg
js
inc
cmp
bound
fisttpll
data16
cmp
sub
mov
xchg
mov
jno
push
push
cmpsl
adc
lcall
or
ss
mov
xchg
iret
int3
sahf
xchg
notb
cmp
mov
int3
stos
mov
icebp
fsts
or
in
test
rclb
xchg
loope
loop
loopne
sbb
mov
mov
jo
sub
mov
add
pop
test
lea
shlb
rcrl
jg
cmp
push
in
xor
out
loop
or
sahf
out
pop
xchg
and
and
pop
icebp
sub
lahf
pop
jmp
xchg
sti
adc
jmp
mov
mov
pop
xlat
jmp
cmpsl
adc
test
stc
mov
in
mov
mov
roll
cli
push
adc
jb
push
lods
std
and
mov
push
in
in
dec
daa
in
cmp
movsb
das
out
popf
stos
cmp
adc
adc
adc
stos
out
pop
mov
test
out
jmp
cmp
loope
inc
xchg
pushl
push
push
mov
shll
mov
pop
push
jbe
xor
mul
lahf
stos
add
mov
sbb
stos
inc
mov
jb
adc
sahf
ds
xchg
rol
int
or
xchg
enter
fimull
xlat
and
cmp
sub
xchg
mov
lsl
inc
dec
add
in
cmp
jno
xchg
inc
jns
sahf
jnp
dec
shlb
xor
xchg
test
dec
inc
es
scas
repnz
in
test
das
xchg
mov
cld
xlat
cmp
push
xchg
cmp
dec
pop
add
hlt
call
xchg
aas
mov
mov
cmp
outsl
loop
push
fs
in
xchg
aaa
ss
or
adc
xor
cmpsb
jmp
xchg
mov
push
pop
lock
mov
rclb
mov
fisubs
rcrl
sub
cltd
or
test
pop
sbb
ret
jae
lcall
add
out
cs
call
decl
aad
fldt
push
int3
in
imul
cs
icebp
cli
test
popf
inc
pop
xchg
mov
push
jo
xor
add
pop
test
cli
jmp
stc
mov
mov
xchg
or
fcmovne
adc
mov
mov
lea
mov
sahf
mov
push
mov
sbb
mov
or
insl
incl
push
outsb
loope
push
popa
push
xchg
adc
add
stc
pop
push
jne
outsb
enter
test
lcall
movsl
and
pushf
mov
xor
cli
shlb
sahf
lods
aad
push
ds
adc
fildl
js
aas
js
mov
mov
shl
cmp
mov
xor
popf
les
js
sub
mov
inc
pop
push
pop
mov
mov
inc
jns
fistps
arpl
loope
bound
fwait
push
lods
sub
jbe
sub
add
aam
jp
mov
cld
xor
or
test
imul
sub
cmp
pop
loope
in
add
cltd
icebp
mov
lret
stos
sub
mov
pop
paddsw
cmp
cmp
push
lds
and
mov
jbe
xchg
push
int
adc
cmpsl
xorl
loop
into
in
mov
jmp
xchg
add
cmp
call
xchg
mov
ret
daa
mov
jne
ljmp
adc
rcll
cld
xor
dec
adc
xor
cwtl
push
xchg
andb
iret
and
sbb
push
push
mov
out
or
jne
repnz
and
xchg
inc
mull
jae
dec
rcrl
pushf
push
dec
xchg
xor
std
notb
sub
or
dec
pop
jns
sbb
ljmp
mov
jne
movsl
push
lea
adc
hlt
sbb
sar
lcall
das
pop
mov
dec
les
bound
into
sbb
call
fmuls
cmp
and
or
adc
sahf
sub
gs
cmp
fistps
insl
adc
or
dec
mov
repz
mov
mov
movsb
xchg
adc
lret
cmp
aad
mov
mov
xor
dec
sbb
scas
jno
flds
mov
cmp
cmp
int
lock
cld
loop
or
fdivs
or
jne
jns
sub
dec
and
jae
push
push
adcb
adc
js
push
push
or
cmp
jp
test
std
int3
shrb
jmp
mov
jl
sub
fucomi
inc
dec
mov
shrb
cmp
or
aam
mov
xor
ss
jmp
pop
rcr
repz
pop
push
lock
fdivrs
loope
jg
shll
mov
loop
sbb
roll
jne
inc
push
test
lods
dec
mov
stos
fs
ljmp
sti
test
imul
cltd
inc
fsubs
jno
adc
cld
xchg
xchg
lahf
rclb
jg
mov
sub
push
sahf
jnp
sbb
cmp
testl
mov
jmp
inc
dec
test
lahf
pop
popf
fstp
cmp
out
ret
fldl
and
inc
fidivrs
sbb
xchg
test
sahf
pop
cmp
add
sub
inc
inc
lret
rcrb
cli
cmc
mov
push
sbb
push
mov
xor
or
jecxz
add
xchg
insb
or
mov
xchg
cs
mov
aaa
push
mov
cwtl
call
or
pop
adc
fisttpl
dec
ljmp
stc
jg
and
and
test
push
fildll
daa
xchg
add
sbb
sub
dec
cmp
sub
mov
xchg
xchg
js
std
jecxz
xor
mov
lcall
xchg
das
mov
cmp
mov
cwtl
cli
push
mov
pop
cltd
imul
lahf
imul
push
scas
mov
loopne
mov
add
inc
imul
mov
xor
pop
adc
bound
pop
leave
inc
pushf
mov
aas
aam
ficoms
lret
mov
ffree
or
jae
out
fdivr
mov
les
sbb
lods
mov
mov
add
xchg
pushf
addb
or
mov
add
and
push
push
out
clc
adc
add
cmp
jmp
sub
xchg
jecxz
push
inc
fimull
xchg
xchg
loope
orl
mov
ss
dec
test
ja
add
rclb
xor
jg
or
in
stos
mov
aad
rcrb
push
sbb
dec
int
test
dec
stos
sub
mov
or
and
cmp
shl
mov
popf
mov
or
adc
or
mov
leave
bound
mov
jns
and
sahf
cmp
jae
push
popa
jecxz
enter
out
xchg
add
and
cld
imul
jmp
add
inc
inc
scas
xlat
jae
test
pusha
push
or
outsl
outsb
pop
mov
push
test
lret
xor
jmp
addb
test
outsb
repz
mov
out
insl
in
dec
or
and
or
dec
adc
icebp
mov
mov
mov
dec
into
mov
xchg
lret
dec
or
aaa
cmpsb
fisubs
and
out
dec
xchg
sub
mov
push
mov
shlb
add
mov
rcr
push
test
nop
jle
jge
jp
lods
out
sbb
bound
inc
rclb
out
fcmovnbe
inc
add
outsl
icebp
xchg
mov
cvtdq2ps
mov
mov
sahf
mov
jecxz
mov
pop
and
enter
outsl
adc
scas
mov
xor
cltd
mov
out
mov
dec
lea
add
nop
idivb
out
repnz
daa
xchg
imul
rcr
mov
mov
leave
in
fmuls
in
sbbb
jbe
xchg
ljmp
or
adc
sahf
xor
in
loopne
xchg
jae
aaa
fdivp
int3
sti
out
sbb
pushf
mov
inc
mov
jle
lods
xchg
mov
ret
cmpsb
jae
in
xchg
mov
call
or
ret
das
enter
imul
pop
out
aas
adc
dec
arpl
mov
lods
sbb
je
jo
fildll
sub
mov
or
cmc
pop
popf
clc
es
test
mov
fisubs
les
mov
les
ja
inc
sub
mov
test
mov
sahf
loopne
lods
mov
out
xor
mov
ret
rcl
add
xchg
and
gs
les
fstpt
in
xchg
push
gs
jno
es
arpl
fisttpll
test
stc
sub
sub
adc
pop
jle
inc
mov
or
ds
movsb
stc
dec
js
ljmp
jl
add
mov
ja
sbb
push
and
test
xor
xchg
push
pushf
xlat
add
inc
mov
mov
decl
dec
mov
out
mov
fwait
scas
test
push
inc
movsl
push
je
cltd
mov
inc
cmc
rolb
inc
fnstsw
fsubr
roll
mov
sub
sbb
pushf
xchg
push
mov
fisttpll
and
and
mov
fmull
cli
jne
clc
pushf
cmp
jle
cmp
cmp
xor
xchg
xor
stos
push
jge
and
inc
dec
cmp
scas
xchg
cmc
inc
std
ljmp
gs
stos
inc
iret
je
insl
mov
fisttpl
aaa
rcrl
lret
pop
xchg
and
cmp
std
sbb
loopne
divl
sbb
dec
xor
inc
add
mov
lret
sub
cs
dec
pop
scas
andb
fcoml
test
cmpb
leave
paddusw
mov
jge
imul
sub
xor
push
jo
movsb
rclb
mov
sub
mov
adc
fisttpll
out
iret
sahf
or
push
iret
push
mov
jbe
xchg
xor
icebp
fcompl
mov
dec
mov
lea
lock
aas
mov
xchg
xchg
mov
pop
jns
test
loope
je
popa
push
in
cmc
insb
jbe
cltd
cmp
clc
ljmp
xchg
push
stos
cmp
and
and
and
mov
cmpsl
shll
jbe
push
imul
es
push
scas
add
xlat
es
jno
loopne
ret
rclb
lea
jl
pusha
add
clc
loopne
iret
add
xchg
xor
cmp
mov
adc
jecxz
rcrb
adc
scas
or
fcmovbe
imul
mov
lret
sti
insb
xor
xchg
sbb
cli
mov
lods
ret
dec
xchg
in
xor
test
or
and
insl
sub
in
cmp
mov
lea
add
test
fdivrs
scas
dec
shll
xchg
cmp
sub
xor
sub
loope
xchg
jo
mov
aaa
xchg
pop
jp
cmc
aaa
mul
cmp
jle
test
push
lock
lods
out
lock
popa
insb
inc
add
int3
int
dec
fcoml
or
fists
sub
loop
sub
push
sub
mov
imul
pop
mov
mov
and
and
xor
cltd
decb
lret
cmp
imul
mov
les
push
cmp
adc
aas
cltd
xor
scas
lahf
lret
aaa
mov
clc
xor
dec
cmc
jno
mov
or
inc
ljmp
ret
divl
mov
ds
jle
es
push
push
push
adc
ret
dec
or
adc
sarl
mov
sub
mov
nop
pop
mov
jg
out
jb
dec
in
fdivs
mov
dec
jb,pn
xchg
arpl
jle
gs
mov
dec
pusha
cmc
inc
cmpsb
mov
imul
push
mov
shlb
out
mov
push
lock
dec
lret
pop
mov
shrl
ss
push
rcll
inc
cmp
les
pop
pop
mov
add
jmp
sbb
fsubp
ficoms
int
adc
mov
inc
sub
movsb
ja
mov
push
aam
cmpsb
andb
aam
mov
xchg
jne
ja
adc
cltd
ja
jmp
dec
mov
sub
sub
mov
xor
lret
stc
pop
push
dec
daa
mov
sub
mov
dec
xor
push
push
outsl
mov
movsl
mov
pop
inc
pop
incl
out
xchg
ja
lahf
sbb
adc
pop
adcl
pop
pop
in
add
sub
add
inc
inc
mov
mov
jns
into
repnz
jmp
cmpsb
into
jno
cmp
stc
subl
loop
jns
lods
pop
mov
inc
mov
jecxz
mov
xor
fsts
iret
xchg
mov
push
add
mov
ds
icebp
mov
mov
rcrb
into
pop
aam
pop
scas
inc
ja
mov
mov
cmp
sbb
aas
push
xor
push
inc
popa
scas
pop
and
sub
lds
aas
jle
sub
jbe
call
mov
rol
dec
and
inc
or
mov
aam
push
jno
stos
lock
pop
jne
push
jp
ret
push
iret
push
or
mov
sub
sbb
inc
mov
pop
idivb
stos
inc
inc
cmp
pop
test
xor
out
enter
pop
cmpb
daa
fxtract
dec
not
pop
mov
jecxz
aaa
xorl
int
adc
in
aam
arpl
cld
xchg
loopne
jl
xchg
inc
push
xor
cmp
mov
cmc
in
je
jl
repnz
pop
and
outsb
arpl
lret
ss
loope
lret
enter
xor
sub
into
jl
inc
cmp
add
jnp
jno,pt
lock
lods
xlat
cs
into
rclb
call
xchg
or
dec
popf
aam
jno
and
sbb
jge
pop
ret
xchg
mov
lock
jp
out
or
jae
xchg
mov
push
mov
or
jmp
push
fwait
pushf
pop
pop
and
idivl
movsb
fdivr
out
jp
into
pop
dec
loopne
stos
ret
out
add
push
sbb
rol
out
cmp
adc
loop
cwtl
jle
inc
jge
push
jno
jne
incl
addr16
push
jle
push
out
shl
mov
call
push
inc
or
std
in
test
lret
mov
and
mov
lods
sbb
adc
aam
pusha
adc
pop
mov
arpl
inc
scas
mov
adc
sub
xor
and
lea
cmpsl
leave
pop
in
and
mov
add
mull
xchg
adc
mov
pop
ret
fdivr
pop
add
inc
or
int
pushf
arpl
movsb
add
mov
mov
cmp
mov
jne
xor
inc
adc
clc
shr
insb
rorb
call
pop
cmp
push
movsb
gs
mov
cmp
xchg
std
in
in
pushf
dec
mov
les
arpl
dec
enter
inc
inc
sahf
fs
mov
subb
std
outsb
mov
lcall
outsl
or
out
jecxz
scas
adc
loopne
ljmp
jno
pop
fisttpll
cli
cltd
stos
test
je
mov
mov
cmp
mov
xchg
mov
cmp
enter
mov
stos
sub
or
lods
push
or
popf
cmpsl
in
fsubr
adc
std
ljmp
icebp
xor
adc
xor
cmp
icebp
pop
mov
fmuls
xlat
aad
popf
or
cmp
inc
mov
mov
add
add
int3
pop
cmp
leave
mov
repz
push
pop
push
loop
sbb
cltd
notb
test
cmp
dec
cmp
push
push
cltd
adc
add
jne
inc
pop
leave
lods
out
std
xchg
in
stos
sbb
inc
xor
inc
lahf
ss
or
pop
lods
dec
xchg
dec
fisttps
xchg
cld
add
popa
scas
xor
sbb
popa
lods
mov
lods
stos
adc
xchg
xchg
outsl
mov
loope
aam
out
push
xchg
inc
dec
jno
frstor
stos
roll
sub
test
loop
in
pop
test
inc
cmp
xchg
loopne
pop
cld
dec
fistpll
notb
sti
ret
lret
or
mov
xor
loopne
repz
push
xchg
scas
enter
es
outsb
lret
sub
pop
in
mov
pusha
pop
cli
xchg
jne
cmc
mov
and
push
rolb
or
aas
adc
daa
and
rorl
xor
push
les
repz
testl
mov
in
add
inc
in
pop
push
outsl
rorb
jg
frstor
ret
mov
loopne
push
sbb
fmull
lret
inc
jmp
mov
out
fcoms
fbld
test
jle
lock
pop
dec
xlat
loopne
fcoml
fsubs
std
adc
or
xchg
iret
nop
jo
pop
insb
std
jp
sahf
sbb
enter
mov
ds
inc
aas
das
jg
mov
mov
cwtl
push
push
inc
into
xor
push
dec
sahf
loopne
inc
xor
int
add
je
sbb
sbb
out
data16
pop
lods
pop
filds
fmuls
aaa
sbb
dec
les
ret
aad
pop
orb
cmp
add
inc
and
filds
test
lds
loop
sub
in
push
sub
test
imull
pop
ja
cld
out
add
cmp
pop
adc
inc
cmp
sub
adc
sbb
js
scas
cli
pop
cli
int
add
mov
pushf
mov
mov
fwait
lahf
jge
sub
fs
ret
push
mov
and
int3
and
fdivrp
das
pop
jmp
xchg
loope
pop
jle
xchg
out
pop
xchg
loop
outsl
ret
pop
mov
push
jnp
jnp
movsb
pop
mov
sub
adc
jno
lcall
push
push
mov
jns
pop
jnp
sbb
stc
adc
mov
fwait
into
pusha
sti
push
vunpcklps
popa
inc
jne
movsl
jns
xchg
cld
scas
loop
fimuls
mov
sub
in
dec
lods
dec
cmc
clc
mov
insb
cwtl
inc
nop
sbb
loope
pushf
ret
adc
cmp
pop
sub
cli
add
sub
ljmp
xor
lret
mov
outsl
mov
cli
pop
and
and
das
cmp
fwait
shll
adc
ja
dec
jb
xor
pop
sbb
mov
mov
adc
pop
mov
jl
jne
cmp
sub
xchg
js
stos
fwait
jnp
sbb
sub
or
loopne
stc
dec
xor
push
lods
mov
push
push
dec
ss
push
xchg
sbb
dec
in
decb
dec
push
jne
inc
jnp
mov
imul
hlt
out
into
xchg
pop
aad
dec
fsub
in
sti
and
or
daa
sub
scas
cmp
ljmp
mov
and
or
repnz
add
lods
push
push
pop
pop
mov
dec
movq
pop
lods
pop
pop
repz
fiaddl
pusha
jb
pop
xchg
adc
js
add
popa
sbb
xor
xor
lods
dec
xorl
sti
jecxz
movsb
inc
push
mov
test
mov
lods
bound
inc
es
dec
lret
sub
lcall
adc
mov
aam
ret
lods
fsts
adc
cmp
imul
and
mov
mov
je
imul
inc
lods
mov
or
sub
and
lret
mov
mov
out
and
mov
mov
imul
test
in
stos
aam
sbb
xchg
mov
movb
push
add
cld
and
pop
xor
inc
test
jmp
mov
cs
mov
bnd
push
popa
js
lcall
or
ljmp
sub
imul
sbb
dec
adc
pop
dec
mov
shr
stos
jl
out
xor
jecxz
pop
das
clc
test
lds
cmp
aad
jl
cwtl
stc
loopne
dec
les
cmp
push
adc
sti
dec
mov
pop
movsl
cwtl
dec
ja
xor
mov
enter
jmp
lahf
xchg
or
mov
inc
je
lcall
mov
sbb
lcall
call
das
pop
out
out
ss
mov
sbb
cmp
jg
pop
scas
push
imul
dec
ja
loop
jle
sub
sbb
jg
std
inc
stc
jle
sbb
xor
sub
daa
and
dec
cmpsl
cli
dec
mov
addr16
fidivrs
lret
mov
and
xor
fwait
add
jne
cmp
sbb
dec
sbb
xor
jecxz
cld
push
dec
xor
or
popfw
cmc
imul
aas
cltd
ret
xchg
std
mov
repnz
out
jmp
mov
imul
into
mov
test
test
cwtl
repnz
dec
psubw
dec
mov
dec
or
ret
pop
hlt
int3
inc
dec
pop
lea
ret
test
pop
test
xchg
xor
and
js
push
into
mulb
pop
add
mov
xchg
mov
jecxz
loope
sbb
call
je
dec
aas
pop
add
pop
cmc
out
rol
jge
pop
in
xlat
mov
xchg
mov
pushf
ja
ljmp
pop
sub
popa
cmp
ss
repz
rcrb
int3
sub
popa
push
lods
xchg
xor
mov
enter
push
jae
mov
adc
fcomip
and
mov
fs
scas
sbb
pop
cmp
rorl
jle
stc
popa
sub
add
cmp
loopne
push
imull
jge
sbb
xchg
sub
inc
inc
add
in
or
jp
fwait
hlt
and
adc
mov
xchg
and
and
shrl
leave
fcomps
seto
inc
pop
rolb
xor
test
jmp
pusha
or
aad
addr16
add
dec
loope
mov
movsl
lea
or
sbb
idivb
js
xchg
mov
loop
and
pop
out
in
pop
pop
mov
test
nop
xlat
xchg
ja
cmc
ds
loope
nop
jnp
lcall
cli
inc
into
xlat
push
xchg
sbb
and
mov
dec
mov
push
aaa
push
sbb
mov
xor
mov
adc
sub
rclb
jle
imul
fistpl
ret
in
ret
mov
sbb
cmpsb
mov
addl
cltd
popf
xchg
mov
mov
pshufw
shlb
add
xor
pushf
jne
pop
loopne
bound
jg
sub
cwtl
adc
out
push
pop
shl
dec
and
or
sbb
inc
dec
mov
test
xchg
mov
test
add
roll
mov
mov
int
adc
pusha
or
sub
sbb
inc
jecxz
sahf
movsl
incl
pop
out
add
xor
mov
lret
lds
sahf
inc
enter
lahf
rorb
icebp
jns
pop
in
dec
ret
sbbb
sbb
imul
push
add
lods
orl
push
stc
mov
mov
xchg
dec
in
add
movsl
push
add
xchg
stos
mov
push
mov
loop
mov
enter
push
jl
outsb
fimuls
xchg
mov
mov
push
daa
add
inc
fld
push
pop
cwtl
lret
ljmp
cs
push
pusha
push
pusha
cmp
in
inc
std
in
bound
push
sub
inc
cmp
fimull
ds
iret
xlat
lret
stos
and
imul
mov
cmp
and
mov
xorl
mov
test
jle
pop
mov
bound
sub
aaa
sub
fwait
es
fdivrl
icebp
repz
push
inc
push
xchg
push
les
pop
lret
jns
stos
stos
into
mov
in
cli
pusha
loopne
dec
inc
out
push
lcall
jno
xchg
outsb
push
fwait
or
mov
sub
cmpsb
dec
popa
rcl
imul
jge
cmp
dec
and
pop
fsubrs
sub
and
cmpsb
in
jmp
and
test
test
inc
sbb
pop
jbe
rcrb
les
and
mov
mov
xchg
push
cs
adc
mov
xchg
cli
mov
mov
outsl
push
mov
xor
jl
push
push
pop
dec
push
ret
imul
dec
lods
push
xchg
lods
das
inc
add
or
mov
loope
fldl
loope
cmp
mov
stos
ljmp
jecxz
cs
mov
xchg
shll
dec
loope
inc
sbb
mov
outsb
fsubrs
xor
xlat
xlat
mov
test
packsswb
inc
mov
andb
int
xor
or
ficoml
or
divb
mov
jnp
into
nop
sbb
pop
int
pop
mov
xchg
fisttpl
or
pop
repnz
xchg
sbb
jge
ret
mov
sub
cmp
or
lods
push
mov
dec
outsb
arpl
test
xor
cld
nop
je
call
sub
jecxz
mov
push
jge
sub
mov
aam
or
ljmp
push
insb
or
push
stos
rep
incl
sarb
popa
jo
dec
arpl
fs
out
add
cwtl
pop
loopne
sbbl
push
mov
aas
in
pop
or
mov
ret
jmp
out
in
adc
mov
imul
mov
jl
jle
push
repz
and
shll
sbb
mov
shll
mov
add
int
adc
pop
or
std
std
cld
mov
jbe
jo
xchg
lret
jecxz
mov
add
aas
and
xchg
adcb
adc
push
in
ljmp
dec
fs
ret
xor
es
outsb
adc
jmp
inc
add
add
outsb
xchg
inc
aas
add
shl
jnp
xchg
sub
ja
clc
pop
bound
dec
pop
sbb
or
and
je
xor
test
lods
ss
insb
dec
inc
pop
xor
xchg
roll
test
mov
jl
adc
inc
mov
out
stc
dec
daa
sbb
push
cmp
inc
mov
mov
add
mov
sbb
mov
in
shr
sub
aad
jae
sub
in
loope
dec
inc
mov
inc
dec
cli
adc
adc
jno
mov
jmp
sbb
cmc
sub
stos
jp
add
sbb
andl
bound
imul
in
ret
jae
call
das
addr16
xor
das
aam
out
icebp
ret
inc
mov
out
in
inc
jnp
or
ja
ds
or
int
movsl
sti
xor
inc
shll
mov
xor
mov
mov
sub
add
xlat
lods
or
add
inc
insb
test
icebp
inc
pop
stos
loopne
arpl
imul
ret
rcrb
dec
pop
or
sbb
inc
in
xchg
loope
inc
addr16
inc
jns
mov
xchg
in
fwait
pop
mov
jp
scas
faddl
or
shl
fs
inc
iret
pop
jp
push
inc
inc
test
xor
popf
scas
inc
pop
mov
or
jp
and
data16
adc
pop
in
mov
push
jbe
push
cmpsb
xchg
fldl
mov
pop
xchg
sbb
stos
fsts
inc
xor
into
sbb
xchg
fwait
xchg
shr
jmp
mov
add
cmp
outsl
sbb
insl
popa
lock
sbb
sbb
repz
cmp
mov
xchg
pop
xchg
adc
lahf
shll
js
pop
inc
push
fidivs
and
pop
cmp
imul
mov
jbe
pop
rcrb
dec
sub
mov
lret
cmp
push
movsb
jno
pop
add
pushf
test
mov
into
scas
aaa
add
loopne
ficompl
xchg
or
shll
std
les
cmp
in
pop
jp
adc
push
jnp
jmp
cmp
mov
mov
loopne
and
xchg
adc
or
push
imul
pop
xorb
sarl
daa
mull
jnp
and
mov
int
addr16
jg
cmp
jge
sbb
fsts
or
int3
sub
or
rcrb
mov
fisubrs
mov
popa
xor
ds
call
dec
xchg
add
les
mov
sbb
cmc
push
cld
push
mov
call
das
in
sti
testb
jne
add
or
and
stos
mov
inc
jno
adc
lock
mov
lods
jl
mov
sti
push
leave
mov
pop
mov
je
into
mov
inc
inc
adc
or
jns
addl
sbb
mov
sbb
adc
lock
std
out
sbbl
cltd
jno
fwait
sub
gs
push
rcr
dec
pop
push
push
adc
rclb
dec
dec
das
and
mov
into
shlb
add
jl
push
adc
shrb
push
dec
push
adc
add
in
xor
adc
adc
je
mov
pop
cmpsl
cmp
addl
fsub
push
jp
push
sub
hlt
cmpsb
dec
enter
pushf
lods
loop
push
jne
jp
xor
xchg
outsb
mov
inc
dec
cmp
push
pop
add
popa
arpl
xchg
mov
inc
or
jo
ljmp
popa
xchg
jnp
mov
or
fwait
lods
repnz
xchg
jmp
jbe
enter
nop
insl
mov
rorl
insl
out
std
dec
xchg
push
mov
push
orb
gs
jp
xor
or
jns
outsl
dec
mov
jo
ret
xchg
jg
or
dec
mov
loop
pop
jne
cmp
dec
mov
push
push
add
pop
inc
sub
mov
or
and
js
mov
gs
enter
pop
jno
mov
addr16
mov
pop
out
or
hlt
lahf
lret
sbb
imul
xchg
out
in
cli
jo
pusha
and
mov
fsincos
mov
scas
popa
out
dec
jae
insl
mov
lret
xor
dec
addl
push
ficomps
pop
pop
mov
jnp
in
jle
enter
roll
int3
iret
icebp
inc
adc
int
adc
mov
jae
mov
dec
mov
pop
ljmp
adc
push
cwtl
out
mov
aaa
jmp
mov
clc
adc
test
lret
pop
adcl
sub
mov
jg
mov
bound
aaa
jnp
pop
xchg
ja
test
fsub
add
and
bound
sbb
icebp
je
jnp
mov
jb
push
test
xchg
or
lds
and
sbb
xchg
mov
call
pop
jl
fidivrl
bound
jmp
pop
arpl
out
fidivs
lahf
popa
and
inc
pop
jb
repz
insl
icebp
push
or
xor
gs
sub
mov
adc
mull
xor
sbb
pop
ret
jno
out
sbb
cmp
es
outsl
pop
and
pusha
popf
pushl
loopne
decb
dec
out
xor
cmp
movsb
and
mov
jbe
inc
mov
call
lahf
jl
mov
lahf
inc
in
and
mov
cli
pop
cld
addb
lahf
fdivrl
mov
adc
aam
test
nop
mov
mov
testl
loope
sahf
nop
cwtl
jne
pop
jb
pusha
mov
fsts
xchg
cmc
nop
sahf
cmpsl
push
and
pop
addl
cs
rcrl
or
shrd
jns
sub
dec
mov
add
pop
jno
push
clc
mov
xlat
mov
pop
push
inc
mov
ds
xor
lea
and
mov
out
or
adc
addr16
push
jnp
or
sbb
scas
jno
dec
inc
iret
test
mov
xchg
lds
popf
stos
cs
rcl
es
int
std
mov
jae
or
sahf
cwtl
push
roll
repz
pop
push
bswap
hlt
fildll
xchg
repz
push
fucom
xlat
stc
mov
ds
add
adc
bound
cmpsb
mov
out
pop
push
imul
out
dec
movq
push
dec
and
mov
push
xchg
dec
aas
jo
cmp
mov
emms
dec
jge
or
mov
jb
stos
adc
movsb
sbbl
dec
sbb
jg
xorb
adc
in
inc
mov
loope
test
sbbb
push
xchg
fld1
shll
mov
loop
arpl
jmp
dec
xchg
int3
mov
jle
mov
outsb
call
dec
mov
aas
adc
sub
loopne
sbb
pop
jg
adc
sub
popa
pop
pop
jns
or
jo
mov
pop
inc
icebp
jp
fnstenv
push
xlat
xlat
fs
out
ljmp
cmpsl
aas
cmp
daa
rcr
lods
inc
dec
xchg
and
test
out
pop
push
pop
xchg
imul
or
test
cs
push
fbstp
ljmp
or
repnz
cwtl
mov
inc
sbb
or
pop
push
insb
hlt
shrl
pop
ret
adc
jmp
cmpsb
cmp
jg
rcrl
mov
lahf
sub
jmp
jle
mov
orb
iret
sub
in
or
or
nop
or
push
sbb
imul
pop
daa
into
lret
pop
ret
lret
and
jl
mov
sub
xor
andl
loopne
out
add
and
out
add
movsl
in
cmp
jge,pt
inc
jne
and
push
push
xlat
popf
and
jg
hlt
rorb
je
test
or
or
mov
insb
lret
adc
int3
jno
dec
scas
push
fwait
sbb
cmp
shl
ja
mov
mov
cli
lock
jecxz
mov
pop
adc
in
and
nop
in
mov
rolb
push
dec
imul
adc
jo
jge
sbb
shl
dec
ds
pop
sarl
mov
cmp
push
push
mov
sti
imul
shll
fistpll
mov
and
mov
add
js
mov
xchg
fistl
mov
movsb
loopne
lods
jg
pop
mov
stos
adc
push
push
xor
and
or
sub
jg
test
inc
cld
push
ficompl
ljmp
push
add
cld
sti
sahf
rclb
sbb
mov
or
lea
ret
cmp
leave
fsubrp
jg
mov
out
iret
addr16
xor
pop
and
pop
pop
cltd
mov
or
insl
pop
inc
loopne
jge
daa
dec
sub
mov
daa
sub
jl
sub
popa
jl
jo
mov
sub
aam
mov
loope
fs
cmp
sbb
push
sahf
push
jbe
pop
push
stos
dec
jne
sub
and
mov
add
lcall
scas
cmp
mov
inc
mov
inc
lods
testl
sti
int3
mov
ret
cmpsb
add
mov
dec
pop
cmpsl
or
inc
les
jle
mov
xchg
dec
push
cmc
mov
jb
loop
dec
mov
addl
mov
inc
mul
icebp
fld
cmp
push
pop
movsl
jle
neg
xor
fwait
lcall
ret
popa
fdivrs
jecxz
testb
movb
push
and
fsts
mov
inc
test
cld
daa
popa
mov
add
jp
push
mov
test
xor
jge
xchg
test
repnz
aam
dec
push
out
push
repz
movaps
ret
push
je
into
nop
jbe
ja
je
stos
shr
push
mov
xor
cltd
inc
roll
jmp
cmpsb
mov
insb
shrl
xchg
mov
cmp
or
sub
inc
xor
rorb
cmp
sub
add
aaa
mov
shrl
call
jp
xor
jmp
aam
out
icebp
push
lahf
push
mov
xchg
sbb
mov
push
inc
lods
lds
xor
xchg
mov
pop
or
push
stos
dec
fisubs
xchg
cld
int
inc
jo
add
add
fisttps
cmp
sbb
jecxz
mov
cmc
cli
push
cmp
add
mov
std
xchg
or
btr
shl
fucomp
push
dec
dec
pop
mov
inc
and
mov
xor
xor
sub
cmpsl
iret
loope
adc
std
add
dec
scas
insl
inc
mov
arpl
mov
xchg
or
nop
movsl
mov
jnp
ss
cmp
or
pop
bound
mov
in
std
jmp
push
cmc
cmp
cmp
jg
xor
xchg
bswap
lods
xor
push
jge
or
lods
pushf
pop
jl
mov
sub
jmp
in
xchg
mov
inc
sbb
cs
jle
fldenv
add
inc
cmp
fmull
scas
and
mov
xchg
movsl
insb
aaa
adc
in
sbb
push
aam
push
js
ljmp
in
mov
test
add
dec
sbbl
mov
js
add
push
mov
cld
sbb
dec
iret
dec
lahf
pop
sub
test
cltd
imul
xchg
or
cmp
imul
cs
dec
adc
xorl
imul
fs
push
mov
test
sbb
pop
ror
cmp
out
dec
add
push
mov
mov
mov
add
xchg
mov
sub
sbb
out
pop
cvtps2pi
bound
stos
ret
cmc
adc
mov
mov
or
sbb
cli
cmp
mov
xor
dec
mov
push
inc
pop
js
in
cmp
sub
mov
sbbl
out
in
xor
aaa
cmpsl
mov
adc
call
lock
mov
stos
xchg
xchg
loop
jnp
repnz
cmpsb
xchg
jmp
add
call
pushf
push
jl
fldl
cmovnp
push
dec
xchg
push
mov
mov
mov
nop
call
fxch
push
xor
pop
xor
lods
mov
pop
sbb
mov
jns
lock
icebp
pop
mov
lea
lcall
addr16
aaa
enter
pop
or
icebp
push
pop
das
fnstsw
shrb
mov
lret
loop
add
adc
lea
add
pop
repnz
mov
or
lock
push
int
out
mov
scas
or
in
mov
cmpsl
push
mov
dec
iret
adc
test
mov
test
cld
or
xor
imul
xlat
pop
subb
pop
sub
inc
std
lods
dec
xchg
jns,pn
shll
stos
imul
mov
idiv
mov
shlb
inc
dec
stos
jns
fidivrs
xor
push
inc
pop
mov
or
jns
or
insl
and
test
stos
outsl
iret
dec
ret
jnp
test
fmulp
jmp
gs
call
hlt
ds
mov
test
rcr
scas
fdivs
das
add
xor
push
ret
leave
push
push
data16
clc
inc
push
repz
subl
pop
fcmove
stos
xor
lahf
fbld
pop
xchg
jmp
hlt
sti
inc
cmc
or
cmp
lock
stos
pop
cmpsl
test
cmp
test
pop
movsl
push
lock
mov
xor
xor
lds
sub
ret
push
or
bound
lret
cld
lret
iret
cwtl
sub
push
cmpsb
sbb
sub
les
jno
lahf
push
or
inc
aam
hlt
push
arpl
stos
pushl
pop
mov
in
sbb
sbb
shr
mov
hlt
out
into
clc
pop
cwtl
outsl
jge
or
pop
and
test
lods
sub
pushf
jb
test
push
cmp
and
xlat
mov
adc
pop
jo
sub
aas
scas
imul
cmp
lea
stos
dec
xchg
pop
xchg
push
dec
adc
jae
iret
iret
in
movsb
push
adcb
xor
mov
push
pop
cmc
pop
imul
lret
mov
ret
mov
xchg
cmp
das
inc
cli
jbe
inc
in
fcomps
dec
xor
xchg
daa
ds
sub
mov
fisttps
push
scas
dec
push
xchg
lods
in
icebp
inc
mov
push
sub
push
inc
push
aam
mov
ret
sbb
xor
sub
cs
push
jnp
cwtl
add
fisttpl
mov
mov
mov
jmp
sbb
pop
in
out
ss
fimuls
repnz
xchg
mov
pop
adc
in
fwait
jo
imul
stc
lock
jg
xchg
or
and
fdiv
jnp
popf
stos
or
push
lods
pop
rclb
mov
inc
stc
add
lds
lcall
setb
rolb
mov
push
ficoml
out
cmp
mov
add
imul
mov
cmpsl
cltd
push
adc
repnz
cmp
in
xor
addr16
fldt
xchg
adc
xchg
or
dec
dec
push
orl
cld
movsb
add
fnstcw
add
rcl
xchg
cmp
mov
imul
mov
mov
push
faddl
xor
or
inc
mov
es
or
stos
mov
gs
xchg
popl
aas
in
aaa
js
loope
sub
push
loope
pop
cmp
icebp
inc
jb
lea
rorl
into
sub
psrad
outsl
or
in
xor
in
push
jnp
and
dec
or
jmp
and
lds
insb
mov
add
decl
dec
add
lret
pop
jne
rcrb
mov
mov
jl
dec
fs
xchg
loopne
pop
dec
xor
adc
cmp
int3
push
int
or
mov
sbb
adc
sub
in
xchg
lahf
mov
xchg
das
push
and
xor
aam
loope
xor
jmp
sbb
pop
pop
mov
shll
rcrb
mov
push
in
push
sarb
push
ja
and
sbb
jns
andl
les
out
icebp
test
jns
mov
mov
xor
aaa
jg
call
mov
xor
push
loop
adc
loopne
subl
inc
aas
jmp
push
inc
cmp
sbb
mov
push
movsb
shll
or
sub
sub
sti
cmp
loopne
lds
sti
repnz
lahf
ss
or
cmp
jno
mov
ror
in
enter
nop
xor
stos
sbb
jecxz
in
cltd
shrb
cmp
nop
and
scas
outsb
stos
lahf
mov
or
and
mov
or
and
xchg
rcrl
pop
mov
adc
cld
xchg
in
leave
dec
mov
daa
push
popa
pop
sbb
xor
int3
sbb
push
shlb
ficoms
or
das
cmp
pop
repnz
adc
rcrl
mov
nop
sbb
sbb
insb
mov
and
mov
out
imul
add
or
lock
cmc
std
lods
push
pop
outsl
xchg
adc
jb
in
and
aad
xlat
pop
repnz
cmp
js
sbb
cmc
jge
sbb
dec
jnp
in
in
xchg
fadds
testb
in
das
mov
sarb
js
push
sub
lds
xchg
aam
mov
data16
daa
leave
cmp
mov
jmp
dec
xchg
pop
jae
das
out
repz
mov
sub
push
fisubrs
mov
rorl
mov
pop
jecxz
add
pop
mov
andl
add
out
sbb
mov
add
fsubrs
mov
insb
shlb
orb
push
cwtl
pop
lcall
jmp
loop
subb
das
mov
mov
pop
and
xchg
cmp
clc
arpl
sub
shll
rorb
xor
mull
lahf
pcmpgtw
mov
pushf
je
inc
out
sbb
cmp
mov
lea
int3
pop
mov
mov
mov
jmp
cs
sbb
inc
pop
adc
gs
int
xchg
jbe
jnp
sub
mov
push
idivl
xor
pop
xchg
mov
mov
jno
lret
int
fisttpl
jbe
lods
popa
cmp
mov
stos
loop
sub
loopne
shrb
mov
aad
cltd
ljmp
cmpl
fnstsw
loop
fldcw
sti
pop
lock
sub
pop
mov
inc
dec
pop
call
jge
jl
popa
add
lods
jge
mov
adc
inc
mov
arpl
loopne
xchg
add
adc
das
clc
les
sub
sarl
add
sarl
push
or
push
shr
xor
cmp
jb
jg
add
out
shll
mov
jp
sbb
movsb
int
or
cmp
sub
in
sti
nopl
test
hlt
and
inc
sub
mov
sub
repz
clc
mov
dec
pop
or
push
and
push
pop
je
std
xlat
fisttps
inc
push
or
movsl
xchg
fldl
inc
inc
mov
loop
lret
sub
jecxz
mov
cwtl
test
out
sarl
xor
jae
mov
cs
inc
stos
pop
xchg
jno
xorb
insl
fiadds
inc
lcall
test
orb
clc
dec
sbb
dec
outsl
outsb
pop
aas
fldt
mov
jle
adc
jno
es
jns
test
dec
dec
inc
push
pusha
cmpsb
jne
in
jnp
ret
dec
pop
pusha
push
mov
icebp
inc
ds
lret
cld
cltd
and
push
mov
dec
cli
enter
insl
cmpsl
int
jmp
negb
xchg
pop
das
add
cmp
push
ja
and
repz
lahf
gs
or
jecxz
mov
add
pop
push
xchg
mov
leave
notl
clc
cmp
sub
xor
outsl
lods
add
lock
push
and
ficomps
inc
xorb
in
sar
xorb
dec
imul
push
into
sbb
insb
jae
xchg
cli
mov
cmp
addr16
aad
not
jecxz
cmp
dec
out
inc
xchg
adc
pop
dec
sbb
push
arpl
or
pop
pop
je
mov
jb
jecxz
cmpsl
xchg
add
les
push
mov
mov
pop
test
jbe
inc
dec
mov
mov
stc
jno
sub
imul
sahf
lret
xchg
push
xor
fisttpl
push
loope
test
fildll
in
out
ja
or
dec
jmp
pop
sub
cltd
stos
nop
and
or
and
add
into
pop
dec
enter
cld
push
and
or
into
jne
je
and
sahf
js
mov
push
scas
xchg
sub
fstl
outsl
daa
cmp
sub
xor
mov
and
stos
leave
push
decb
mov
sbb
mov
into
or
inc
sub
xchg
pop
rol
push
lcall
clc
mov
cmpsl
es
iret
loope
mov
int3
pop
cmp
mov
cmp
mov
movsb
xchg
cmp
dec
pop
inc
push
mov
scas
out
lods
or
cli
cmpsb
pusha
out
mov
mov
inc
imul
adc
scas
sub
adc
scas
adc
inc
cld
into
sbb
jns
test
stos
push
mov
adc
inc
add
imul
dec
pop
jp
adc
pop
dec
xor
sub
addr16
jp
push
jnp
lcall
sbb
inc
mov
loope
push
repnz
cmc
inc
out
adc
inc
fistpl
outsb
xchg
inc
push
scas
in
push
mov
add
out
rorl
jbe
pop
aam
ljmp
je
xchg
xchg
cmpsl
jbe
loope
sub
sub
fs
sub
dec
mov
inc
cld
mov
inc
and
insl
add
sub
dec
bound
dec
cmp
mov
mov
inc
and
push
mov
and
xchg
mov
inc
nop
loope
sti
mov
out
mov
mov
mov
and
je
dec
pop
scas
pop
outsl
loopne
and
xchg
rcrb
push
fs
push
insl
dec
or
jmp
cmpl
in
jp
fiaddl
sahf
sahf
aad
lds
in
das
test
xor
sub
xchg
fstpl
sub
and
xchg
outsb
mov
ror
inc
xor
gs
jg
xlat
in
hlt
lds
call
in
and
lret
fs
jp
xor
ljmp
xchg
mov
jno
cmp
sbb
xor
inc
pop
mov
outsl
mov
add
shr
dec
push
push
and
movsl
sub
fld
inc
mov
push
xorb
loope
push
mov
std
cmpb
or
lods
or
xchg
icebp
aam
std
pop
xchg
ret
sbb
dec
flds
arpl
in
sbb
cmpsb
iret
outsl
jmp
pop
or
call
pop
lret
mov
dec
push
adc
and
imul
cmpsb
out
xor
jae
mov
inc
add
hlt
mov
xchg
and
or
aad
pop
mov
in
mov
xorb
mov
mov
jno
out
ja
cmp
out
jo
clc
jnp
aam
jp
adc
adc
xchg
ror
ret
and
lock
aad
inc
mov
icebp
pop
shll
lock
test
jns
sbb
push
lock
in
cmp
sahf
das
dec
cmp
aas
inc
adc
mov
push
loopne
in
xchg
adc
aaa
xchg
insb
js
js
cmp
cmp
or
lcall
stos
lahf
cmc
mov
cwtl
fwait
inc
and
mov
stc
dec
out
mov
xor
mov
pop
adc
mov
lcall
lahf
fidivrs
mov
dec
sbb
jmp
mov
popf
cltd
addb
add
lret
insb
lahf
or
mov
dec
or
push
movsl
and
stos
inc
fimull
sub
push
cmpsl
mov
shl
xchg
enter
pop
xor
pop
gs
mov
icebp
and
rorl
cwtl
adc
jbe
and
push
xchg
xchg
dec
aad
lods
xor
addr16
or
sub
cmp
mov
and
mov
or
jmp
or
xchg
push
jb
jge
xchg
adc
dec
add
and
sbb
fs
xor
dec
sbb
pop
cli
inc
out
cmp
mov
addr16
clc
push
and
lock
jp
stos
and
xor
loope
dec
mov
iret
jb
jge
je
or
cmp
ds
sub
and
pop
lcall
in
les
stc
add
add
cmp
sbb
jl
mov
gs
ss
aas
mov
add
scas
cmp
mov
or
js
fwait
adc
outsb
xor
test
js
xchg
insl
les
mov
pushf
jmp
pushf
inc
in
mov
xlat
pop
inc
pop
mov
filds
test
lock
cmp
xchg
mov
ret
repnz
lret
and
daa
les
rorl
mov
push
sbb
aam
push
sbb
mov
sub
mov
lahf
aam
stos
test
jecxz
mov
lock
jae
pop
in
mov
adc
je
out
in
sub
shl
add
lds
and
outsl
out
mov
outsl
mov
out
and
inc
mov
jg
int3
mov
adc
cmc
lods
sub
ja
arpl
xchg
gs
stos
mov
and
pop
mov
cld
xor
cmp
xchg
outsb
imul
int3
dec
dec
movl
in
sub
dec
ja
scas
cmp
adc
dec
sub
iret
sti
pop
jp
dec
data16
adc
jmp
in
lds
addr16
movsl
shlb
insl
xor
sub
stos
and
xor
stos
mov
lods
iret
jbe
sbb
inc
fimuls
in
sub
add
mov
push
mov
jg
add
fsts
lods
dec
inc
call
insl
scas
clc
popa
xchg
mov
cmp
push
pop
cltd
adc
es
push
mov
test
push
cmp
jp
out
insb
js
jge
shrb
inc
sbb
negb
out
insb
into
jb
cmc
mov
xor
mov
insb
xchg
loope
xor
fsubrl
jge
pop
icebp
push
xlat
icebp
imul
out
jl
xor
data16
push
in
push
sbb
clc
sub
lea
lret
lds
ficomps
pop
mov
enter
mov
out
decl
popa
inc
cld
fsubl
shrb
push
and
and
jbe
mov
pop
mov
mov
imul
fs
jae
push
stc
gs
lret
dec
rcrb
push
mov
lahf
fisubl
jle
iret
popa
mov
fs
adc
inc
inc
into
stc
repnz
fadd
pop
sbb
dec
cmp
test
pop
test
mov
sahf
pushf
xchg
mov
sahf
jno
popa
sbb
jmp
cs
insl
ds
ja
subl
stos
push
cmc
jo
ljmp
fisttpll
xlat
xor
jmp
rcl
push
inc
jo
mov
xchg
jmp
pop
cld
aad
add
lret
pop
sbb
fsts
data16
mov
scas
notl
lods
movsl
inc
jae
loop
or
inc
xor
mov
ss
jge
mov
popf
arpl
mov
xchg
mov
mov
inc
fcmovnbe
or
bound
and
cli
dec
nop
pushf
fs
jns
roll
dec
movsl
push
shll
sub
adc
mov
loopne
jae
iret
rol
shll
int
out
in
push
inc
mov
lds
addr16
mov
mov
ljmp
paddd
rolb
pop
in
cmpsl
rorl
stc
xor
cmpsb
std
ret
adcb
mov
lahf
mov
mov
outsb
mov
fiaddl
loope
imul
push
pop
pop
call
in
mov
mov
hlt
push
je
imul
jb
test
or
jne
add
rcrl
inc
call
shll
push
pop
push
mov
adc
sub
cs
mov
icebp
jae
and
aaa
push
insb
lcall
mov
test
mov
jge
fldenv
movsb
cmp
cmp
cmpsb
mov
inc
int
mov
dec
lods
loope
insb
mov
icebp
pop
cs
jne
jecxz
sub
inc
sub
lret
flds
repnz
enter
outsb
jge
and
scas
insb
and
pop
inc
call
sub
dec
mov
pusha
bound
pop
mov
pop
xor
call
in
cli
cmpsl
push
test
push
push
test
mov
in
jo
rep
or
out
xchg
sbb
movsb
cmp
jno
ljmp
push
jbe
fidivrs
enter
out
in
jle
subb
inc
rolb
push
push
mov
clc
mov
mov
push
sahf
add
mov
out
icebp
scas
pop
imull
jno
adc
and
cmp
jno
lahf
mov
sub
filds
mov
andps
lret
rorl
cmp
adc
ficompl
xlat
data16
mov
insb
xchg
shll
subb
lret
jg
nop
je
js
cs
adc
sub
sti
mov
data16
js
xchg
inc
pop
push
test
outsl
repz
or
mov
cmp
or
xlat
mov
jl
sub
sbb
xchg
fidivrl
jl
popf
jmp
pop
dec
jb
movsb
and
mov
dec
daa
xorl
mov
sti
xor
ficompl
sbb
in
sbb
test
shrl
mov
movb
inc
iret
shll
mov
call
sub
mov
or
lea
shr
mov
in
sbb
mov
std
mov
and
inc
add
jmp
xor
add
mov
xchg
orl
js
rolb
pop
inc
out
dec
sbb
push
push
pop
lock
mov
ljmp
inc
shll
ds
adc
iret
push
inc
push
adc
mov
out
das
orl
iret
add
adc
jg
filds
test
shlb
js
push
mov
sar
inc
insl
xlat
shl
das
iret
cmpsl
and
jmp
fdivrs
xchg
mov
nop
xchg
jp
insl
and
fimull
cmpsb
fst
xor
ret
es
nop
jge
cmp
jbe
adc
sub
adc
ret
rcr
aas
stos
movsl
mov
add
mov
jp
ja
lahf
add
test
std
in
add
pop
inc
xor
and
dec
data16
xor
repz
cmp
ret
ret
lds
lret
cld
les
adcl
jg
or
jnp
enter
inc
icebp
pop
movsl
aas
inc
xorl
xor
notb
bound
dec
jmp
cmc
cs
jb
xchg
dec
dec
fcmove
ljmp
push
sub
mov
cs
and
add
test
xchg
loopne
fnsave
cmp
hlt
push
nop
repz
loop
mov
cmp
or
push
insb
test
dec
loopne
mov
dec
and
outsl
sub
dec
pop
jmp
stos
rorb
movsb
sbb
xor
loope
xor
add
jne
in
adc
mov
out
inc
mov
cmp
push
or
push
add
add
inc
push
sbb
imul
lods
nop
push
cmpsb
push
pop
jge
gs
std
adc
test
outsb
push
out
subb
rolb
xlat
cmp
mov
mov
adc
jl
or
imul
lds
mov
xor
jl
sbb
pop
push
out
cmp
sarb
dec
bound
pop
cmp
hlt
imul
and
subb
ljmp
pop
fstps
add
sbb
rolb
data16
pop
aam
mov
outsl
lret
shlb
cmp
movsb
fadd
arpl
rol
stc
adc
add
cmp
add
sbb
add
hlt
cmp
and
scas
popf
fs
scas
mov
mov
pop
xchg
icebp
gs
sub
aas
in
jp
lods
loope
jecxz
rolb
jbe
rcll
xor
xor
icebp
pop
sub
dec
push
jae
mov
xor
sub
xchg
scas
icebp
in
fisttps
out
inc
mov
inc
shll
test
jg
mov
cmc
frstor
ja
push
mov
jno
dec
mov
fstl
pop
sub
and
sbb
cld
in
insl
ret
mov
sbb
adc
adc
sub
push
adc
cwtl
test
cmpsl
shl
or
out
xor
dec
dec
into
mov
rep
sub
pushf
jg
or
pop
and
rolb
lods
add
jp
mov
inc
fs
adc
ror
fisttps
pop
aas
ret
xor
sbb
sub
fistps
jb
aam
dec
and
jle
imul
inc
xchg
fistps
js
rcrb
pop
sbb
cmp
adc
jmp
insb
rcrb
out
dec
lock
mov
test
pop
mov
adc
mov
pop
popa
jb
mov
push
rcll
cmp
mov
out
pop
mov
or
mov
dec
iret
jnp
mov
out
mov
rcrl
fnstsw
inc
jne
and
js
cwtl
stc
pusha
xor
pop
in
pop
xchg
arpl
sub
enter
jg
cmpsb
ljmp
xchg
leave
cmc
ss
sbb
out
bound
sbbl
pop
into
ss
sbb
xor
xlat
ret
pop
das
pop
jns
inc
aaa
addl
mov
sbb
cmc
or
xchg
insb
xlat
aam
jb
mov
adc
stos
mov
push
push
das
mov
mov
scas
das
and
push
rcr
push
fdivl
outsl
je
mov
lahf
lds
mov
jmp
push
or
pop
xor
test
les
icebp
push
or
test
popa
jns
cmp
insl
out
push
jmp
cmp
pop
outsl
mov
mov
xlat
jbe
dec
out
outsb
sbb
sub
dec
cld
sub
aas
or
in
xchg
sbb
mov
inc
pop
lahf
and
aam
ss
mov
in
or
cmp
xchg
jge
xor
shrl
inc
or
mov
sbb
cmp
dec
mov
sub
cmp
clc
fsubl
mov
mov
or
adc
cmp
jae
rcll
adc
jne
pop
je
or
xchg
stos
xcrypt-ofb
cmpsl
imul
fistpll
or
ja
xchg
cwtl
and
and
cmp
jbe
sbb
js
rcll
dec
sub
insb
mov
lret
push
les
dec
mov
shl
ror
push
repnz
cltd
or
adc
jnp
xor
out
adc
xchg
sarb
sti
push
mov
cmpl
dec
xchg
push
cmp
push
cmpb
jl
punpckhdq
pop
add
ljmp
push
jbe
insl
ja
push
cs
sbb
dec
clc
and
add
jmp
inc
loop
sbb
sbb
xchg
in
sub
xchg
dec
jnp
mov
jne
lock
xor
cmp
mov
movsb
int
sub
cld
push
ret
cmp
out
movl
pusha
pop
xlat
sub
jne
adc
sbb
and
or
mov
in
repnz
cmp
scas
sub
jae
xor
push
adc
out
inc
mov
ret
test
adc
out
jbe
je
sub
cwtl
outsl
or
xchg
jg
addr16
jno
cmpsl
jne
mov
sbb
jbe
push
mov
test
je
js
pop
ljmp
cmp
aas
inc
jg
call
dec
stc
mov
pop
add
out
fildl
sarb
adc
cld
jns
cmpsl
or
inc
jl
sbb
push
add
mov
xor
test
mov
and
mov
dec
cmp
aaa
cld
repz
pop
ljmp
add
pop
rorb
cwtl
sbb
mov
clc
mov
xor
and
adc
jle
ljmp
and
mov
lds
dec
in
xor
lahf
int
pop
mov
mov
dec
inc
mov
lock
xchg
add
push
add
and
or
cli
mov
aas
arpl
imul
ds
sbb
aam
sub
and
mov
mov
and
sub
dec
rcrb
cltd
fisttpl
test
ss
clc
or
dec
dec
repnz
shrb
ljmp
jmp
xchg
and
pop
mov
sub
add
ds
stos
dec
insl
es
ret
fbstp
cmp
les
cmp
jne
pop
jno
xchg
mov
sbb
test
sti
inc
sbb
pop
sub
inc
xchg
sbb
dec
into
xchg
mov
mov
lret
mov
xchg
popa
pop
mov
cmp
jnp
icebp
dec
aam
lods
outsl
cwtl
sub
insl
in
fdivs
jb
cmp
jno
xchg
js
mov
or
mov
jbe
or
sbb
sti
mov
xor
fwait
jnp
int
and
and
test
sbb
mov
dec
jns
or
ljmp
movsb
in
imul
sbb
ds
aaa
mov
data16
xor
out
cmpsl
xchg
dec
lret
outsl
imul
mov
sub
adc
ja
leave
int
aas
aas
or
inc
sbb
adc
sub
ds
mov
iret
iret
sub
cmpsb
addr16
xchg
test
fsubrl
push
addl
mov
cmc
or
stos
repnz
icebp
xchg
sub
outsb
mov
jecxz
push
daa
add
mov
mov
idivb
test
mov
mov
inc
xor
out
sbb
push
inc
hlt
fistpll
dec
lret
out
sub
inc
lods
mov
cs
mov
cmp
push
les
shl
adc
loope
push
fisttpll
ja
es
outsl
sti
es
add
scas
fs
stos
or
mov
dec
insl
mov
sub
mov
pop
inc
push
xor
addr16
push
pop
inc
xorb
cmpl
push
dec
jb
lds
inc
cmp
sbb
pop
scas
xchg
not
shll
sbb
loopne
pushf
pop
fsub
jg
xor
mov
fnstenv
sub
leave
ja
movsl
push
aaa
mov
stc
cmc
ret
push
add
jge
hlt
inc
das
lock
push
push
push
outsb
fstps
dec
fmul
cmp
mov
movb
add
and
pop
pop
inc
addr16
mov
mov
mov
sbb
add
sti
arpl
mov
stc
lds
repz
jle
push
mov
mov
adc
push
xchg
mov
fsub
lods
pop
aad
cli
or
outsl
xor
inc
das
es
push
jle
rcrb
mov
ljmp
jno
lds
pop
sbb
ret
subl
gs
std
pop
out
cmc
insb
cmpsl
cmp
pop
sqrtps
sub
mov
sbb
inc
hlt
test
inc
dec
add
and
inc
pop
lret
and
stos
fnsave
rcl
sub
test
jno
sbb
daa
je
cmp
add
gs
cwtl
loop
insb
cmp
jmp
sub
or
insl
push
mov
mov
lcall
mov
jge
les
cmc
std
popa
test
xchg
jecxz
sahf
xchg
ja
and
mov
dec
shrl
xchg
movsb
jne
in
pop
pusha
imul
in
mov
add
fisubrl
and
pop
cld
fldenv
mov
fs
jbe
jnp
cmp
iret
pop
inc
std
lahf
push
shlb
mov
ljmp
in
and
shlb
in
out
jns
clc
pop
jl
adc
scas
or
icebp
pushf
or
pop
sbb
push
hlt
add
sbb
pop
pop
shll
fs
mov
in
lods
cli
lcall
mov
imul
js
aam
jnp
or
fnsave
pop
arpl
push
add
rcrb
test
inc
lea
push
xor
mov
pop
mov
das
testl
xchg
mov
popa
xchg
adc
lret
xchg
dec
out
mov
rolb
xor
and
xor
shll
test
fwait
andl
mov
in
shr
lret
jmp
ja
ret
test
jp
pop
insb
std
mov
jb
xor
mov
test
push
jecxz
add
pop
add
popf
add
loope
test
xchg
cmp
jmp
push
sub
push
push
cmpsl
subl
cmp
or
mov
push
push
arpl
inc
cmp
lea
pop
cmpsl
bound
rcr
jno
clc
mov
mov
jbe
lds
sub
stc
jo
shlb
int3
test
scas
bound
and
pop
repz
mov
out
add
cli
xchg
in
xor
mov
ret
adc
jmp
and
cmpl
sbb
mov
aad
std
lods
bnd
xor
dec
sub
mov
dec
int3
cmp
stc
jno
shl
rol
rep
imul
ss
pop
xchg
sbb
out
insb
inc
jns
add
dec
push
jb
xor
fs
insl
sbb
mov
loopw
fldz
sub
and
loop
retw
sub
pop
cmp
dec
mov
mov
cmp
inc
sub
sub
add
or
fwait
sub
jmp
sub
fldcw
sub
inc
mov
dec
sub
cmc
adc
mov
jge
lret
jecxz
mov
sarb
divb
push
jp
or
data16
push
sub
test
pop
sar
fisubrl
cmp
repnz
add
fadd
test
pop
mov
sub
adc
xlat
sub
add
jb
jae
xchg
insb
cmp
es
add
fsubl
mov
push
pop
dec
mov
int
push
stos
mov
lahf
sub
and
cs
sub
or
out
jbe
dec
ss
jg
mov
in
mov
lret
push
sub
sub
gs
outsl
ror
shlb
lods
sti
decl
or
out
lds
jae
imul
xlat
and
stos
xchg
mov
arpl
ret
sub
jg
ja
je
in
dec
out
dec
jecxz
daa
imul
mov
movsb
inc
and
hlt
out
add
sbb
pop
xor
push
lods
repz
dec
cmpsl
and
popf
push
jl
fidivrs
dec
push
or
cmp
cmp
cld
call
cs
pop
mov
pushf
data16
mov
aam
mov
mov
dec
fmuls
mov
insb
push
test
sub
or
ss
hlt
add
push
neg
loop
test
test
ret
inc
cmp
mov
jge
jle
and
mov
clc
jg
out
mov
aaa
or
mov
mov
sbb
cmp
mov
imul
pop
dec
mov
movsb
mov
je
and
add
insl
xchg
push
mov
pop
jo
stc
and
and
push
popa
fldt
mov
mov
adc
js
add
push
and
xor
notl
inc
addb
fildll
cmp
xchg
pop
cmpsl
aad
enter
mov
pop
or
jl
in
push
ljmp
rcrb
xchg
jnp
mov
mov
in
popf
xchg
mov
jp
test
and
dec
pop
das
dec
jae
scas
pop
xchg
daa
jae
or
mov
repz
fwait
lock
dec
dec
cs
mov
mov
add
mov
sbb
or
loopne
aas
lcall
testb
xor
in
mov
repz
jno
out
pop
push
fcompl
cmpb
mov
or
pop
xor
inc
push
fstl
jae
andb
mov
inc
imul
add
test
loop
push
testl
jbe
ljmp
nop
xchg
call
xchg
mov
or
aad
shll
icebp
bound
xor
jecxz
imull
add
dec
fisttps
test
inc
cmp
mov
addl
andl
and
jbe
es
pop
adc
mov
pop
pop
fwait
arpl
and
nop
jp
outsl
lods
in
cli
in
int
add
movb
mov
jnp
dec
mov
arpl
outsb
xor
pop
sub
xchg
movsb
sbb
into
popa
sbb
dec
push
add
sbb
insl
cmp
mov
or
mov
popf
xchg
out
sbb
add
sbb
adc
jbe
mov
in
xlat
jl
out
imul
fidivl
repz
nop
sti
and
mov
or
out
popa
pop
dec
adc
cmpsb
enter
cmc
xchg
cmc
in
rcl
cmpsl
pop
andl
in
addl
or
cmp
push
xchg
mov
out
loopne
adc
rcr
push
adc
fnsave
dec
leave
adc
fcoml
repz
jns
subb
jg
jmp
daa
or
xchg
sub
cmc
jp
inc
sarb
andl
jbe
ret
mov
aaa
sarb
test
int
mov
js
orl
pop
pop
rclb
push
loopne
cs
ds
lcall
mov
rol
fisttps
sub
mov
cmc
xchg
mov
int3
fdivr
xchg
mov
lods
cs
rcll
stos
sub
shll
push
lock
pop
push
aad
repz
xor
cli
mov
cmp
je
mov
pop
cltd
cwtl
jae
fmull
xorl
mov
pop
xchg
adc
movlps
fs
dec
add
sbbb
add
pop
sub
mov
mov
inc
cltd
das
sub
hlt
pusha
dec
dec
mov
and
cmp
fbld
out
cmpsl
std
mov
movsb
popf
fsubrl
lret
idiv
jne
loop
aaa
cmp
in
push
lcall
popa
xlat
adc
inc
test
lahf
stc
fisttps
dec
inc
enter
dec
loope
dec
xor
scas
ja
fs
data16
jecxz
mov
xchg
fcmovu
xor
repnz
fcmovnbe
jb
xchg
jp
xchg
sbb
in
inc
aas
mov
pop
sub
pop
fcmovnb
lock
repz
mov
pop
or
pop
fmull
popa
add
enter
inc
aad
daa
andl
xchg
add
ret
std
mov
pop
pop
or
xor
add
aaa
and
mov
add
cmp
mov
jns
xor
fiadds
fxch
adc
testb
cld
jns
int3
sarl
cld
cli
sti
insb
push
jp
addr16
mov
mov
arpl
ret
sub
call
dec
sbb
mov
add
ja
negl
mov
pop
mov
gs
cmp
jge
rcrl
icebp
pop
nop
imul
push
pop
pop
and
or
jae
add
repz
cmp
cli
jae
mov
sbb
sub
in
testl
mov
aaa
ds
aaa
movups
push
push
sub
mov
test
and
fcoms
data16
xchg
in
arpl
mov
cltd
or
in
push
push
rorb
scas
mov
mov
loopne,pt
cmpsl
repnz
jmp
notb
inc
test
xor
mov
xchg
iret
shr
es
imul
xorb
jns
jecxz
cli
out
mov
ret
mov
cmp
xchg
fidivrl
jle
mov
mov
fcompl
push
add
lock
xor
out
clc
mov
inc
mov
pop
lret
add
add
imul
sub
dec
pop
mov
fisubl
adc
jne
addb
test
push
ljmp
sbbb
bound
repz
loop
inc
mov
pop
cwtl
mov
mov
outsl
das
cld
and
jg
jp
pop
push
pushf
mov
inc
mov
lds
stos
cs
and
mov
inc
push
xor
xor
or
push
mov
fs
mov
out
push
inc
and
mov
mov
dec
and
loop
std
lods
loope
inc
jnp
push
out
aad
fyl2x
sub
pop
adc
inc
dec
push
repnz
cltd
addr16
push
or
loop
mov
jge
aaa
mov
lahf
arpl
sub
mov
push
sbbl
fsubs
dec
mov
xor
and
add
mov
ret
pop
inc
cwtl
arpl
jns
cld
sub
mov
cs
adc
cmp
or
je
sti
push
leave
cltd
adc
addr16
stc
insb
sbb
repnz
scas
lcall
or
jmp
cltd
pop
imul
fdivl
rolb
imul
stos
out
scas
inc
push
inc
mov
insl
stos
lcall
ds
mov
mov
clc
xchg
ljmp
adc
mov
dec
add
xchg
test
xchg
fwait
push
inc
in
jbe
pop
imul
adcl
out
iret
lock
push
rclb
jo
mov
jae
ss
jle
pop
mov
mov
test
je
popa
rcl
fsubrl
adc
lock
mov
cli
jae
jne
js
xor
and
rorb
and
lret
push
mov
pop
adc
lahf
or
jnp
cmp
out
mov
push
outsl
inc
je
and
xchg
mov
fsubrs
fidivrs
dec
adc
sbb
adc
into
push
pop
or
test
sub
dec
sbb
adc
add
pop
sbb
mov
push
sti
mov
lahf
ret
mov
fwait
pop
mov
jnp
mov
popf
jae
fwait
sub
sbbl
mov
inc
inc
cs
xor
sbb
mov
or
mov
mov
shl
mov
pop
adc
movsl
out
lcall
pusha
jp
adc
push
or
pusha
mov
adc
pop
popa
and
nopl
in
mov
pop
xchg
mov
and
mov
loopne
lds
scas
jge
add
shrl
sub
adc
out
sahf
sub
ja
loopne
jp
bound
jae
xchg
xor
aam
insb
test
pop
xlat
cmp
pop
pop
xor
xchg
movsl
out
bound
int
sub
xchg
sbb
cmp
fstpl
call
ljmp
mov
insl
lods
and
mov
rcr
xchg
pop
mov
push
enter
in
stos
pop
test
or
xchg
pop
and
dec
or
inc
lods
sbb
mov
lods
in
inc
mov
inc
pop
or
outsb
push
outsl
inc
and
jns
cs
rclb
pop
jae
test
mov
xchg
sub
in
inc
mov
repnz
mov
dec
dec
or
and
jb
mov
ret
int
hlt
into
aas
pop
pop
fs
mov
movsb
lcall
les
repnz
dec
out
adc
test
aad
fdivrl
cmp
mov
lret
or
scas
iret
arpl
rcrl
dec
fwait
xor
clc
or
sub
repnz
fwait
mov
pop
int
sbb
pushf
or
add
imul
cmp
out
pop
mov
sub
jo
push
pop
in
lds
mov
out
sti
mov
lret
adc
nop
mov
or
push
sub
dec
xchg
mov
out
xor
jnp
mov
ja
mov
aad
mov
xchg
push
outsl
sub
insl
xor
sub
mov
fsubr
pop
dec
inc
add
int3
incl
sbb
adc
pushf
arpl
in
pushf
idivl
pop
stos
into
rcrl
add
xor
xchg
cmpsb
loope
mov
scas
in
popf
pop
jl
sarb
aad
stc
sbb
and
sbb
push
dec
mov
mov
adc
and
mov
out
and
mov
inc
stos
jno
jge
fsub
or
shll
cwtl
add
and
fcmove
clc
jno
pop
cld
sbb
imul
cld
sbb
lea
nop
adc
cs
movsb
aaa
xor
adc
in
add
and
xor
jb
fstpt
fidivs
rcll
sub
lods
xchg
jl
xchg
xchg
jg
insl
xchg
mov
sbb
insb
xor
stos
jo
mov
lods
pop
and
mov
inc
mov
jo
cmp
inc
int3
out
sbb
pop
in
push
out
jae
pop
or
leave
loop
out
pop
inc
call
dec
push
enter
sbb
cmpsl
repz
add
mov
push
dec
sbb
lret
inc
or
jle
mov
xor
jae
fsubr
fdivs
jle
loope
das
insl
adc
mov
mov
sbb
pusha
lock
je
leave
cmp
cwtl
je
and
add
sbb
add
cmp
inc
ss
pop
sti
jp
into
push
insb
in
imul
jo
stc
addr16
lahf
in
xchg
cltd
arpl
shl
jecxz
int
aad
das
in
cmc
pcmpeqd
xchg
loopne
movsb
mov
scas
xchg
inc
xchg
pop
cmpsl
cltd
in
adc
bound
addr16
and
in
icebp
in
sub
push
xor
jp
push
mov
aas
ss
ja
xchg
sti
mov
fistl
cmpsb
int
test
dec
cmp
xor
inc
shrl
push
lods
and
aad
xor
cmpsl
mov
lds
fcmovnbe
iret
stos
dec
mov
lret
outsb
jns
and
xor
mov
xchg
jbe
xor
or
and
cld
sar
jbe
sub
in
data16
aas
xor
call
inc
sub
cmp
data16
std
das
inc
aam
and
mov
out
gs
jns
aaa
mov
idivl
cmpsb
xchg
shlb
iret
inc
xor
inc
or
js
push
mov
daa
mov
and
rcll
adc
push
movsl
sbb
sarb
push
cmc
inc
js
add
pop
and
ljmp
lret
xor
and
sub
lahf
bound
movsl
or
lds
or
daa
or
int3
stos
hlt
mov
loopne
mov
fs
mov
jbe
dec
aas
adc
push
pushf
xchg
pop
gs
cmp
cli
and
jb
pop
lcall
mov
and
lret
jb
inc
or
and
mov
dec
negl
jno
xchg
pop
xchg
mov
int3
push
stos
jae
int
jno
xchg
inc
movl
out
ret
or
sbb
mov
xor
mov
ficompl
test
insb
faddl
cmp
cwtl
aas
ss
adc
cltd
adc
addl
jg
mov
dec
sbb
mov
ljmp
nop
stos
dec
and
xchg
lahf
ror
or
mulps
add
movsl
in
xchg
je
jge
test
je
mov
add
inc
mov
mov
in
dec
cmp
or
push
daa
jbe
xchg
push
and
out
jo
movsb
sub
pop
mov
idiv
int3
lds
in
xchg
das
add
xchg
mov
inc
sbb
lods
addl
mov
pop
push
xor
or
xchg
repnz
mov
inc
imull
bound
in
pop
ja
cld
sub
pop
push
inc
mov
push
push
mov
movsb
out
xlat
mov
push
lahf
pop
xchg
mov
dec
jns
lcall
nop
lret
mov
js
enter
sbb
cld
cmp
in
pusha
sbb
push
insb
push
aaa
mov
jne
cmp
lods
je
in
frstor
repnz
push
sub
mov
outsl
repnz
jl
mov
push
xor
mov
incb
setns
jae
js
or
dec
test
pop
leave
cmp
cmp
test
xor
insb
sarl
clc
fwait
or
mov
test
scas
push
or
ret
lods
js
dec
pusha
stos
sbb
mov
dec
mov
gs
aad
gs
aas
mov
pop
cmp
push
imulw
xor
out
test
sub
and
imul
or
fs
xchg
std
daa
inc
inc
push
cli
mov
sub
mov
push
pop
movsl
adc
xchg
adcl
outsb
jns
push
jg
jo
sti
and
dec
icebp
test
leave
aam
cmp
ret
mov
mov
jmp
mov
adc
mov
mov
imul
sahf
bound
and
cltd
inc
add
leave
pop
add
mov
mov
out
subb
dec
pushw
mov
push
add
sub
pop
cmpl
cmpsl
mov
dec
cmpsl
ja
sti
les
dec
push
repnz
adc
and
fdivr
mov
fmull
mov
js
out
jge
cmpsl
addb
in
sub
add
jl
mov
dec
call
test
scas
adcl
jp
lea
insl
cli
and
jbe
lds
dec
jmp
sarl
aaa
fs
add
jl
push
aaa
mov
lods
leave
mov
xlat
sbb
mov
cmp
nop
mov
jae
inc
cltd
sub
xchg
dec
or
imul
inc
xor
nop
cmp
sti
push
iret
mov
push
fdiv
sbb
das
enter
xchg
outsb
jle
loope
mov
imul
in
aas
sbb
outsb
repnz
scas
nop
sbb
mov
cwtl
add
xchg
loope
add
ficomps
mov
pop
push
inc
pop
sub
pop
pop
imul
int3
imul
pusha
jp
js
stc
mov
lahf
adc
pop
cmp
sub
es
lea
sbb
fidivrs
dec
sub
insb
mov
xchg
jns
aam
aad
stos
jl
roll
rcr
pop
sti
lods
jecxz
xor
rorl
push
orl
adc
mov
ss
aad
and
ret
loopne
leave
stc
iret
mov
cmp
and
sub
je
push
ljmp
push
pop
ja
push
mov
repnz
into
leave
repz
jb
cli
mov
sar
xchg
fbstp
push
es
sarl
jge
in
dec
push
and
or
scas
mov
adc
ret
nop
test
push
dec
push
lds
fwait
mov
sbb
adc
add
ds
or
stos
jno
pop
aam
add
sub
xor
int3
cwtl
inc
sbb
mov
jae
jb
pop
in
add
popa
fsts
lea
xchg
cmp
inc
add
and
lods
lahf
dec
mov
pusha
fmul
fadd
loop
pop
sub
inc
mov
xchg
jbe
push
aam
incb
jo
lret
int
xchg
sbb
add
cmp
sti
imul
pop
pop
mov
push
mov
and
inc
push
xchg
jmp
jae
outsb
and
popl
enter
jmp
mov
stc
add
js
mov
out
push
fmulp
jmp
addr16
mov
cmp
cmp
sar
adc
ljmp
sub
xlat
test
fucompp
dec
ss
mov
fisubrl
xor
imul
jle
loope
lods
xor
or
pop
or
jecxz
mov
jp
movsl
fidivl
jmp
mov
mov
scas
popa
repz
jp
aas
add
ljmp
adc
or
cltd
xor
icebp
pop
inc
insb
loop
mov
test
mov
jne
inc
and
out
mov
addr16
and
int3
test
stos
sahf
stos
cmpsb
xchg
xor
sti
cmp
mov
movsl
xor
cmpsb
mov
mov
loope
mov
mov
ret
and
push
mov
mov
mov
mov
leave
and
rcl
ret
xchg
jp
inc
sbb
jmp
jae
sbb
jecxz
push
faddl
add
mov
mov
iret
or
adcb
pop
pop
faddp
stc
movsl
add
aas
fisubrs
je
bound
rcll
sub
pop
push
jo
loopne
mov
movsl
or
fimull
push
sbb
inc
bsr
fisttpl
test
mov
in
sub
jl
fdivs
push
cmp
sbb
fildl
fcomps
xchg
sbb
mov
add
int
fidivs
xchg
sahf
loope
mov
pop
lods
loope
loop
test
notl
add
in
pop
out
add
xchg
mov
in
jmp
pushf
dec
xchg
stos
mov
mov
push
push
mov
mov
data16
push
sub
sub
in
movsb
cmp
adc
or
out
adc
sbb
and
mov
dec
jmp
std
sar
push
push
push
push
xchg
test
sbb
jo
inc
pop
aam
push
clc
ja
roll
in
ljmp
sahf
in
stos
lods
mov
adc
jp
js
loop
cwtl
push
xor
cmp
test
adc
aas
or
push
sub
push
sbb
pop
cmpsb
sub
imul
sub
je
mov
push
fmuls
xorb
fldl
add
push
je
jae
jo
stos
xchg
push
call
addb
ja
mov
mov
gs
jns
adc
fidivrl
pop
pop
popf
xor
inc
mov
inc
jp
out
jp
inc
sbbl
cmp
jnp
dec
dec
mov
sub
pop
mov
fisubrl
jmp
mov
in
mov
pop
movsl
sti
push
int3
imul
pop
stos
inc
jnp
jmp
dec
or
or
xchg
xor
insb
jmp
out
roll
lock
adc
fsubl
popf
or
pop
add
sbb
bts
cld
mov
or
imul
mov
idivl
pop
pop
frstor
test
xor
add
js
adc
aad
inc
lods
inc
repnz
xchg
xlat
cmp
mov
lods
or
cmp
cs
loope
cmp
adc
mov
fcoms
or
je
in
mov
movsb
sbb
sbb
dec
fwait
sbb
in
dec
outsl
push
test
icebp
jge
jp
push
es
mov
cltd
popf
mov
xchg
xchg
mov
jno
mov
sub
pop
stos
leave
dec
in
out
js
nop
bound
adc
daa
andl
je
repz
cmp
push
in
stos
push
js
hlt
cmp
cmpsb
mov
cmp
cli
jns
cmp
enter
push
int3
xor
mov
mov
push
inc
or
sub
cmp
pop
and
xor
sub
sub
orl
repz
in
push
or
jbe
dec
and
pop
mov
data16
icebp
out
int3
fists
shll
jo
ds
lods
pop
sahf
cmp
stos
cmp
dec
je
dec
hlt
orb
add
sub
mov
and
test
stos
lea
sarb
movsb
lds
add
add
lock
loopne
and
push
cmpsl
hlt
gs
loop
pop
pop
shl
or
adc
mov
daa
aaa
xchg
fiadds
and
jb
dec
mov
dec
cmp
sbb
popa
dec
xchg
mov
addb
cld
stc
mov
outsb
mov
cld
sbb
or
and
dec
mov
repz
int3
repz
loop
xchg
mov
xchg
and
pop
fsub
add
dec
fwait
dec
ljmp
and
movsl
int
ret
cld
xchg
test
adc
or
jge
test
ret
imul
jl
in
mov
mov
aaa
lahf
mov
cmp
mov
outsb
pusha
cli
cs
lds
xchg
fistpll
dec
movl
push
jbe
adc
hlt
test
or
inc
gs
dec
js
mulb
movsl
and
cmp
sbb
cmpsb
adc
shlb
and
mov
fdivr
out
clc
in
push
insb
ret
adc
in
cmp
or
cmc
push
hlt
xor
hlt
lahf
mov
pop
loop
sahf
jnp
pop
pop
or
jmp
mov
pop
in
push
add
add
adc
jae
cmp
in
xchg
adc
jecxz
push
mov
incb
repz
movsb
jae
fwait
out
inc
insb
mov
xchg
pop
hlt
inc
dec
sbb
jg
dec
rcr
xchg
loope
sbb
pop
out
pop
jecxz
jbe
xor
enter
xor
scas
stos
dec
stos
jb
xchg
aaa
pop
icebp
bound
xchg
inc
shrb
fscale
jg
int
addr16
in
dec
lds
movsb
test
les
jne
shrb
mov
mov
push
cmp
push
outsb
dec
mov
add
loope
mov
xor
inc
outsl
les
dec
sub
dec
xor
pop
add
out
adc
xchg
cltd
and
adc
inc
cmp
fisubrs
stos
in
test
cld
xchg
daa
mov
mov
hlt
push
fcomip
pop
aad
dec
xchg
mov
repnz
cmp
jge
push
je
pushf
cld
jns
mov
nop
stos
add
mov
xor
mov
insb
inc
jo
loopne
shrb
inc
sbb
sub
enter
sbb
or
push
lock
xchg
dec
repz
test
adc
inc
clc
push
test
sbb
pop
lcall
sbb
mul
test
adc
push
push
cmpsb
aam
xorb
sahf
mov
imul
mov
fs
and
add
fistl
inc
jae
mov
and
leave
icebp
dec
mov
orl
je
jo
dec
xor
outsl
pop
jge
sub
sbb
repnz
adc
xor
cs
test
jns
cwtl
pop
sbb
cmc
mov
clc
mov
inc
cmp
loope
fs
sbb
mov
sbb
or
lcall
test
sti
xchg
dec
nop
mov
icebp
test
ret
sbb
pop
leave
imul
mov
or
int3
outsb
and
jne
xchg
dec
jne
into
jg
repnz
jns
fsts
adc
push
out
add
mov
cmc
mov
enter
xor
mov
imul
mov
enter
push
popa
popa
pop
jecxz
jno
pop
add
imul
push
fwait
aad
arpl
stos
or
arpl
or
pop
pop
sbb
pop
js
ret
xor
std
fdivrs
mov
arpl
pop
pusha
cmp
sub
push
cmp
mov
scas
pusha
xor
and
push
pop
ja
nop
stos
pop
movsl
adc
sub
insb
aam
test
and
je
xchg
fdivrs
test
xchg
push
ja
cli
les
xchg
push
adc
push
and
push
xor
rcl
sub
sbb
stos
push
lret
or
xchg
mov
mov
adc
mov
cwtl
fstp
addb
pop
rcrb
xchg
insb
rolb
shll
add
das
movsb
pop
lock
scas
hlt
xor
loope
push
mov
or
mov
rclb
mov
inc
sbb
push
sub
mov
push
push
sub
out
push
mov
shr
cmp
add
addb
arpl
mov
ret
dec
in
cmp
mov
aaa
mov
add
sub
pop
int3
cmpb
inc
sub
add
add
repz
cltd
pop
in
in
arpl
xlat
in
and
cld
mov
daa
pop
dec
pop
popf
or
push
lds
add
fnsave
push
xchg
loop
sarb
lret
int3
clc
repnz
push
in
push
ds
pop
inc
mov
lock
jno
out
mov
js
xor
insb
sar
lea
or
push
inc
imul
add
std
sub
jmp
cmp
adc
call
lock
push
jnp
inc
pop
pop
cmp
and
xor
cwtl
loopne
cmp
rolb
outsb
mov
mov
enter
imul
addb
aam
sbb
leave
pop
add
call
leave
push
je
call
stc
emms
call
xchg
in
adcb
popa
xor
mov
dec
add
mov
lcall
pop
mov
add
std
jne
and
mov
dec
lds
jle
jno
or
adc
hlt
push
cli
push
cmpsb
test
loop
stc
loope
add
fidivrs
daa
dec
and
or
xor
or
ss
cmp
hlt
xchg
nop
mov
sub
lock
data16
repz
mov
out
scas
pop
pusha
aaa
insb
dec
mov
je
push
test
hlt
ficomps
fidivrs
mov
fcmovne
lock
sbb
loop
sarb
sbb
dec
push
xor
mov
and
inc
mov
push
xor
cmpsl
mov
lds
mov
icebp
nop
and
push
dec
cwtl
and
adc
arpl
into
repnz
inc
loopne
insl
add
psubw
data16
push
cli
lods
cwtl
je
mov
inc
mov
xchg
fistl
push
aad
mov
or
fiadds
test
add
out
cmp
nop
inc
push
or
xchg
cmc
mov
je
push
test
mov
xchg
dec
and
out
push
add
cmp
jmp
xchg
xchg
stos
cmpl
mov
enter
or
dec
adc
adc
aaa
repz
fsubrs
add
pop
rcrl
loope
sbb
mov
inc
daa
cltd
movsl
jb
jns
mov
and
add
out
in
and
dec
stos
sbb
pop
sbb
push
pop
les
dec
movsl
cmc
fiaddl
jl
lcall
cs
mov
jge
sbb
cmp
les
mov
add
or
mov
repnz
fwait
aas
fidivl
mov
inc
dec
repnz
dec
pop
jp
mov
jecxz
or
jmp
mov
lods
ja
outsb
cwtl
lcall
dec
xchg
mov
fwait
test
popa
mov
pusha
js
outsb
leave
or
pushf
cmp
in
and
mov
repnz
add
inc
xlat
push
dec
popf
pop
inc
nop
andl
sub
add
paddb
pop
inc
dec
in
mov
push
rcl
leave
pusha
int
ss
fisubs
mov
push
loope
fadds
shl
or
pop
mov
sbb
std
sahf
sti
iret
push
fadds
cmc
and
outsb
push
fsubr
push
imul
xchg
je
sahf
jmp
adc
loopne
jb
pop
inc
jmp
lcall
imul
adc
pop
cmpsb
push
mov
pop
sbbb
int
pop
and
pop
jl
ljmp
mov
jne
jne
mov
push
sub
imul
clc
push
insl
inc
mov
fadds
dec
insb
mov
stc
mov
out
adc
hlt
arpl
pop
or
nop
push
or
inc
orl
pop
lret
in
or
nop
stc
dec
mov
pusha
or
push
or
mov
pop
stos
and
call
and
fldcw
inc
insl
aam
bswap
dec
jge
aad
shrl
mov
xor
or
jns
call
pop
scas
outsb
or
push
mov
xchg
das
inc
lods
xchg
mov
mov
not
mov
fcoms
add
push
mov
adc
mov
jge
xchg
int3
jp
jae
or
inc
outsl
sti
xor
cmp
out
insl
add
adc
mov
call
iret
sub
adc
fimull
imul
arpl
outsl
int
and
cli
pop
sbb
jecxz
sub
push
stc
js
in
adc
test
aaa
mov
jnp
sbb
fildll
sbb
mov
or
loopne
push
mov
je
int
lcall
push
lret
jg
testl
xor
xchg
push
sub
jmp
xor
mov
pushf
mov
add
stc
lods
pop
adc
inc
mov
jg
ret
sbb
pop
inc
sti
lock
mov
add
out
repz
ret
adc
jg
xchg
pop
les
repz
fwait
sbb
jbe
sbb
hlt
pop
sub
pop
mov
pop
loop
loopne
mov
fmulp
in
pop
push
dec
mov
xchg
int3
fadd
jmp
and
gs
mov
mov
push
pushf
loope
mov
shl
and
push
leave
dec
or
cmp
inc
cmpsb
inc
lea
pop
stos
inc
and
in
add
les
push
add
into
xchg
leave
pop
mov
mov
fdivrl
lods
out
xor
sub
mov
rol
pop
add
mov
mov
or
sbb
cmp
and
push
jb
in
in
dec
imul
jne
dec
or
std
stos
adc
dec
dec
std
mov
sbb
sarl
mov
pushf
leave
aad
in
mov
lods
clc
sbb
movsl
xbegin
adc
cmc
into
dec
mov
dec
or
iret
ror
aad
rclb
push
fstpt
mov
jns
stos
ret
lea
mov
push
popa
jnp
aaa
sub
push
unpcklps
mov
add
push
mov
ja
xchg
dec
pop
jle
lret
push
sub
fcoml
sbb
pop
lcall
pop
mov
and
jns
pop
xlat
push
cmp
fwait
dec
pop
insb
outsl
repnz
jae
jge
cli
cmpsl
lods
mov
loopne
or
jecxz
je
mov
push
pop
inc
jne
out
mov
ss
adc
daa
int
sbb
test
stos
movsb
sub
cmp
icebp
push
lahf
mov
fistl
dec
jnp
je
nop
divl
cmpsl
mov
dec
cmpsl
fwait
mov
aad
jecxz
xchg
shrb
iret
loop
adc
fdiv
mov
mov
ret
add
stc
jmp
test
or
in
adc
xlat
enter
pop
loope
push
dec
aam
shll
jle
jbe
sarl
out
xchg
data16
jle
call
addr16
mov
inc
cs
sahf
out
movsl
push
jecxz
cmpsb
ror
fiaddl
faddl
lods
mov
mov
push
push
mov
cmp
mov
jge
lret
adc
mov
pusha
pusha
icebp
cmp
cmc
jno
jb
xor
dec
fidivl
inc
cmp
or
jge
outsb
xchg
xlat
pop
pusha
ret
mov
lds
or
dec
lds
call
cmp
jp
or
mov
pop
out
mov
jae
dec
test
ret
sahf
inc
add
or
adc
mov
sbb
pop
xor
mov
repz
mov
sub
dec
xchg
mov
pop
out
mov
sbb
lea
nop
cs
rcr
mov
pop
out
push
mov
and
decb
xlat
dec
adc
xor
mov
hlt
mov
insl
add
addr16
iret
lods
add
xchg
daa
or
arpl
fnsave
push
stos
xor
push
cmp
add
lret
and
push
dec
pop
cmpsl
sub
push
repnz
hlt
cltd
repnz
and
adc
jg
inc
add
aaa
bound
mov
jae
notb
adc
addr16
imul
inc
es
lret
sub
popa
js
cmpl
cmpsl
add
cmp
loop
out
sub
mov
pop
arpl
js
adc
ret
mov
push
stc
mov
cmc
xchg
stos
xchg
cltd
es
test
xor
jae
mov
leave
pop
add
sahf
mov
icebp
jle
aas
dec
add
jmp
mov
mov
pop
mov
lds
sbb
imul
xchg
lds
mov
push
sbb
cmp
jl
filds
xchg
push
je
insb
aad
and
iret
pop
lods
xchg
popa
xchg
push
mov
testl
push
fucom
add
ja
mov
inc
fsub
ja
jne
mov
clc
mov
add
cmpsb
ret
in
cli
cmp
xlat
stos
xor
push
jmp
sahf
sbb
insb
cltd
rolb
cltd
ss
jae
test
mov
push
cmpsb
xor
out
xor
ljmp
inc
pop
push
dec
adc
xchg
xor
or
mov
inc
loopne
movsl
or
pop
mov
inc
adc
xor
mov
cli
repnz
mov
mov
loopne
dec
scas
mov
lcall
push
outsb
dec
lret
je
lods
mov
or
mov
sub
call
mov
pop
imul
dec
add
int
rcl
faddl
in
stos
cwtl
enter
lock
jle
sub
out
sub
mov
pop
jnp
adc
fbld
sbb
fidivrl
pop
aam
add
ljmp
adc
jbe
adc
sahf
and
insb
scas
gs
sbbb
mov
lcall
stos
sub
int3
shll
int
inc
rorl
addr16
xor
push
push
imulb
cmpsb
in
adc
fsub
aas
push
push
pop
push
out
out
ja
loopw
jo
xor
into
mov
or
imul
movsb
movsl
loop
push
xchg
lea
and
movsl
loope
sub
push
mov
mov
dec
cld
js
mov
das
mov
clc
add
mov
or
insb
test
icebp
movsl
jae
mov
in
leave
inc
not
lods
dec
pop
test
shlb
xor
pusha
ljmp
mov
push
fmul
sub
adc
push
int3
and
in
sbb
inc
push
jg
lds
daa
inc
mov
std
mov
xor
xchg
and
xor
cmp
xor
div
inc
sub
or
icebp
hlt
rclb
pop
xchg
nop
push
iret
inc
ljmp
and
clc
pop
insl
aaa
cltd
mov
dec
das
int3
and
add
jne
lods
popa
filds
daa
sub
pop
cmpsb
add
or
insb
les
loopne
je
lret
adc
push
ret
inc
pop
push
iret
mov
ficoml
mov
test
leave
push
sbbb
fimuls
outsb
dec
jl
sbb
mov
xchg
pop
mov
pop
icebp
call
inc
mov
pop
jmp
jp
and
pop
and
pushf
ds
and
loop
jbe
daa
push
lds
mov
push
adc
scas
in
out
mov
aas
and
mov
inc
cmp
pop
andl
push
aam
inc
ljmp
ss
sbb
ljmp
mov
out
aaa
inc
inc
sub
arpl
fldln2
loope
mov
addb
cs
fwait
ret
pop
and
or
arpl
mov
mov
xchg
add
movsb
sbb
push
pop
cmp
inc
je
aam
sbb
adc
in
pop
pop
mov
xor
or
xor
fisttpll
xchg
fwait
xor
stc
mov
xor
ss
jae
xchg
push
xchg
outsb
xchg
jnp
push
adc
lock
and
adc
mov
jbe
jns
dec
mov
sbb
pop
inc
stos
cltd
aas
cs
jae
repnz
xor
sub
pop
and
pop
shl
and
rclb
movsb
jns
cmp
adc
out
xchg
adc
cmpb
jns
lret
cld
fstpt
ljmp
in
sti
hlt
int
fistps
std
es
into
mov
push
cmp
pop
out
loopne
push
inc
jnp
jg
fdivr
sbb
jmp
loop
or
jl
ret
pop
dec
popa
fbld
cmp
cmp
mov
outsl
fmuls
add
shll
pusha
adc
ret
cmp
mov
jb
push
cmp
shlb
ficomps
mov
aad
mov
xchg
lahf
xchg
ljmp
jp
mov
in
mov
fcomps
outsl
fwait
cmpsl
stos
stos
bnd
mov
or
andl
stc
jmp
mov
adc
xchg
in
aam
rcrl
or
aad
jge
dec
mov
mov
nop
mov
clc
pop
push
add
or
adc
outsl
mov
fsubl
sub
mov
mov
das
dec
imul
out
sub
xchg
xrelease
adc
push
test
mov
andl
mov
push
push
cmp
jmp
cmp
mov
inc
lods
mov
jecxz
addr16
mov
les
fiaddl
push
mov
lods
sub
dec
out
leave
push
jg
sti
rcl
cmpsl
in
dec
inc
jns
mov
xor
mov
add
repz
or
movsb
xchg
mov
cmpsl
and
jns
and
in
mov
inc
jmp
pop
jecxz
push
mov
lcall
inc
js
fisttps
mov
in
push
dec
xor
addr16
add
clc
es
adc
int
and
jecxz
mov
push
pop
popf
mov
pop
dec
call
cmp
sub
lods
push
mov
dec
enter
add
hlt
inc
push
ds
outsl
inc
cmp
xchg
push
orl
inc
pop
jae
pop
in
lea
pop
sbb
loope
add
imul
lret
cmp
loopne
or
fcomps
ret
loop
mov
test
pop
push
push
je
xlat
lret
repz
je
scas
xchg
lock
mov
sub
out
xorb
push
rorl
pop
outsl
inc
dec
aas
push
pop
addr16
xlat
out
push
sub
sbb
testb
push
aad
test
xchg
icebp
mov
pop
aaa
loope
sarb
in
inc
mov
mov
in
dec
mov
pop
dec
add
xchg
cld
sub
pop
test
or
loope
int3
lret
orb
sti
ja
mov
sub
fwait
adc
jno
or
movsl
sub
dec
xchg
stos
add
ss
adc
loop
pop
xor
fisubl
xor
sbb
leave
xor
scas
jg
negb
push
inc
rolb
jle
mov
outsl
pop
dec
aam
mov
movsb
ret
jle
dec
mov
jecxz
xchg
pushf
push
in
inc
enter
push
jp
jb
jae
push
xor
sbb
out
cmp
lea
cmpsl
xor
jmp
testl
repz
and
sub
aaa
xor
scas
pop
adc
adc
aad
mov
das
push
loop
pop
test
test
inc
movsl
clc
cs
lea
mov
outsb
dec
cwtl
sti
addb
add
mov
jae
or
cld
dec
sbb
jge
stos
dec
push
std
mov
sub
outsl
or
enter
lret
into
mov
dec
lods
int3
sbb
ja
dec
cwtl
jmp
aas
jno
cld
or
aaa
push
and
mov
inc
push
fstpl
xor
adc
cmp
xor
scas
fisubrl
popf
call
outsb
ds
test
stc
movb
jno
jge
out
clc
or
cmpsl
jl
adc
std
daa
inc
push
cmp
push
mov
call
xor
mov
cmp
ret
in
test
jne
xchg
xor
mov
mov
punpckhbw
pop
inc
inc
push
adc
mov
xchg
sbb
imul
icebp
sar
test
sub
call
mov
dec
ret
rclb
jb
jg
int3
sub
mov
inc
xorb
sub
pushf
inc
fisttpll
jnp
lret
pusha
arpl
xor
out
add
xchg
mov
cmp
xchg
jne
dec
xchg
sar
stos
js
pop
push
cmp
jne
mov
int
call
das
adc
jge
xchg
pusha
sbb
dec
aas
ja
subl
xor
and
ficomps
aas
ss
xor
push
jmp
dec
xchg
lcall
shrl
aam
xchg
or
push
xchg
adc
loop
movsl
jnp
gs
jmp
outsb
and
push
jne
dec
repz
mov
jecxz
mull
lods
pop
sub
xchg
mov
inc
fwait
sahf
and
loopne
ljmp
sub
mov
arpl
add
mov
test
outsl
mov
sbb
popa
out
push
push
aad
andb
mov
or
lods
sub
test
jmp
lea
push
mov
jmp
rolb
mov
rol
test
mov
out
int3
and
rol
pop
mov
rolb
pop
mov
outsb
sub
mov
push
es
call
mov
imul
bound
adcl
mov
pop
or
add
aam
pop
sbb
loope
xlat
push
loopne
jge
movsl
cwtl
dec
jns
or
outsl
bound
sbb
lcall
inc
ret
mov
cld
jbe
jg
pop
jge
mov
imul
dec
sbb
xchg
and
mov
dec
mov
jnp
dec
aas
mov
pusha
int3
cltd
adc
xchg
and
adc
in
pop
aad
and
push
mov
pop
dec
inc
mov
push
mov
pop
in
adc
xor
lahf
mov
cmp
test
add
or
sub
lds
fldt
outsb
rcl
or
pop
clc
stos
mov
je
and
dec
outsb
sbb
sbb
leave
out
push
enter
xchg
add
inc
mov
dec
xor
mov
repz
adc
and
xor
fdivr
in
mov
leave
mov
sbb
push
imul
mov
aam
rclb
int
sub
mov
add
subb
test
movsl
fisubs
int3
and
movsl
sub
jae
leave
lret
jle
dec
push
pushf
pusha
aad
inc
mov
int3
cmpsl
out
sbb
mov
insb
pop
shr
aam
sbb
arpl
inc
jae
loopne
std
jl
loopne
int
fsubrl
jo
es
or
movsb
out
fistl
mov
and
mov
jecxz
cltd
mov
dec
xchg
lods
mov
ljmp
ljmp
mov
or
add
out
jecxz
add
mov
cmp
jmp
fcom
fwait
jbe
or
out
out
fnstcw
and
push
ret
std
inc
adc
stc
xor
cltd
sub
rolb
mov
lea
imulb
mov
dec
les
xchg
mov
stos
mov
jp
inc
int
ds
sub
sti
cmp
add
pop
xchg
pop
je
jmp
arpl
jne
cld
cld
add
arpl
add
push
out
fs
int
scas
push
or
in
outsl
and
stc
add
repz
icebp
ficoms
iret
cmc
add
lret
fnstenv
mov
les
mov
cli
push
adc
xchg
lock
jbe
lock
dec
push
mov
sahf
jl
popf
inc
push
lahf
pop
cmp
inc
insb
popa
pop
repz
jp
xchg
mov
cpuid
mov
and
std
xlat
or
sbb
or
mov
xchg
sbb
rorl
fiadds
sahf
in
mov
stos
sub
pop
int3
lcall
mov
sbb
test
push
jno
push
insl
mov
bound
and
push
mov
ja
fucomp
adc
ja
loop
dec
popf
jae
jnp
mov
icebp
xor
inc
cld
enter
mov
stos
movsl
push
jnp
inc
test
jnp
xchg
pop
sbb
fnstenv
mov
mov
inc
loop
fidivrs
inc
xchg
mov
jg
aad
popf
icebp
stos
mov
out
jb
int3
cli
mov
xchg
data16
adc
dec
std
pop
cld
mov
jae
call
mov
or
mov
mov
adc
out
add
aaa
mov
out
push
dec
mov
dec
adc
mov
xchg
aas
add
or
push
xlat
fisubs
mov
mov
and
push
cmp
das
inc
jo
dec
jle
sbb
sub
jmp
in
js
je
add
data16
repnz
fcompl
push
and
or
mov
rcrb
out
cmc
sub
mov
ret
push
adc
adc
and
push
adc
aaa
sub
out
xor
jbe
mov
clc
add
pop
push
mov
push
xchg
pop
pop
das
cwtl
movsb
dec
shll
pcmpeqb
xchg
push
cwtl
dec
stos
mov
adc
out
repnz
mov
mov
test
cmp
mov
test
sbb
incl
repnz
pop
lds
bound
fmuls
lock
in
sarl
pop
stc
ds
out
push
sub
call
jo
jno
mov
mov
mov
or
mov
adcl
xor
arpl
fnstenv
xchg
inc
gs
fadds
insb
adcl
popa
dec
stos
test
sub
inc
adc
outsb
rcr
xlat
lret
lcall
push
gs
mov
mov
ljmp
int3
dec
jle
mov
call
jnp
popf
inc
nop
adc
lods
lcall
jge
ss
add
insb
pop
idivb
repnz
ljmp
mov
mov
inc
lea
mov
jmp
push
stos
sub
shr
xchg
jecxz
cmpsl
pusha
push
fwait
or
rolb
or
xor
or
inc
and
inc
sbb
sarl
sbb
pushf
jmp
adc
adc
test
lock
imul
mov
xchg
cmp
add
or
xor
cld
enter
popa
popa
inc
push
repnz
xchg
ja
dec
std
pop
jle
push
push
loope
sbb
cld
push
or
and
pop
or
dec
adc
jae
addr16
call
sti
mov
push
dec
cld
xchg
mov
mov
shlb
pop
daa
in
enter
add
clc
jecxz
aad
test
add
push
dec
jo
adc
pop
push
add
ss
imulb
cmp
jne
cmp
push
cmpsl
adc
sahf
or
sarb
sbb
mov
jns
fwait
mov
cmp
fildl
enter
fsub
loopne
aam
push
das
lods
ret
add
outsl
cmp
orb
mov
insl
nop
jb
cmp
outsl
jns
insb
dec
xchg
fsubs
rcr
mov
ret
xchg
adc
sahf
fdiv
cmp
xchg
insb
arpl
imul
les
testl
xchg
andl
xchg
out
jno
mov
cmc
aad
mov
rolb
out
out
jae
push
std
sahf
cmp
fucomip
mov
or
sub
adc
int
in
lods
cld
sahf
mov
or
inc
sub
aam
sbb
mov
add
push
inc
stc
xor
mov
rorl
inc
cmpsb
add
jae
inc
fs
sar
mov
or
pop
lret
aas
xchg
mov
sbb
cmp
imul
sub
or
mov
adc
dec
cld
mov
jo
push
adc
mulb
push
inc
cmpxchg
push
into
inc
adc
sbb
data16
xor
jmp
and
ss
cmp
jl
jecxz
flds
fadds
adc
je
inc
dec
out
iret
out
cmp
scas
and
push
mov
fcmove
std
outsl
jae
hlt
xchg
jne
xor
call
std
jns
das
loopne
ljmp
pop
or
iret
stos
sub
std
cmp
jle
jecxz
roll
lea
lods
push
jne
popf
arpl
xor
cwtl
and
mov
orl
aad
mov
movsb
scas
ret
sbb
or
rcl
shlb
subl
sbb
sti
add
jg
mov
xchg
mov
lods
inc
pop
das
dec
ret
or
sbb
sub
arpl
lret
push
hlt
lods
xor
lahf
lret
lret
sbb
into
mov
ret
test
and
mov
out
cmp
sbb
dec
mov
shlb
into
push
mov
lea
jb
mov
hlt
cmp
repz
adc
hlt
out
lods
mov
pusha
into
mov
sbb
mov
mov
cmpsb
iret
mov
xor
shll
mov
xchg
cwtl
mov
xchg
mov
lods
mov
xorb
adc
jmp
in
xchg
pop
data16
push
bound
cmpl
dec
data16
test
fcoms
inc
cmc
repz
cmpl
adc
push
xchg
rcr
push
xor
out
ljmp
mov
mov
rcrb
pop
shll
or
cmp
movsl
pop
sarb
jnp
xor
scas
lret
mov
or
rcll
push
negl
push
aas
push
fstpl
in
adc
in
push
lods
push
stos
inc
js
mov
xchg
push
pop
incl
jbe
and
inc
imull
adc
pop
mov
lds
inc
mov
and
aad
jecxz
cs
mov
arpl
icebp
daa
add
insl
lods
test
clc
xor
sub
inc
fwait
clc
sar
mov
fnstsw
mov
push
sarl
mov
pop
jl
lcall
clc
sbb
test
loop
fists
sarb
mov
shr
xchg
mov
adcb
enter
mov
test
iret
fcmovnbe
movsb
hlt
push
jle
sub
outsb
add
dec
jno
adcl
cmpsl
repz
push
mov
aad
repz
imul
jb
jp
pop
dec
je
ss
cmpsb
push
mov
enter
cmpsl
push
xchg
jb
cmc
jbe
arpl
and
sbb
pop
xchg
cld
lret
mov
lea
pop
fstpt
adc
loop
dec
xchg
call
push
ret
sub
shrl
sub
dec
cmpsb
lods
inc
lret
jb
or
pop
jg
fcompl
rolb
pop
jno
mov
adc
xlat
cmpsb
aaa
inc
dec
popa
arpl
adc
lret
dec
jle
push
push
cmpl
dec
dec
cmp
jnp,pt
sbb
scas
int
imul
xchg
xchg
in
jo
add
jp
pop
std
stos
jae
lahf
pop
add
xchg
add
and
std
adc
fisttps
jmp
pop
and
pushf
mov
ds
cmpsb
sbb
aas
xor
imul
ret
and
xlat
inc
out
int3
cmp
push
sbb
dec
movsl
add
mov
out
dec
pop
mov
cs
fisubrs
cs
pop
scas
mov
and
mov
sbb
inc
add
out
scas
mov
and
outsb
adc
inc
pop
jle
mov
mov
aaa
mov
xchg
lret
mulb
cltd
inc
test
jl
test
add
jo
xlat
cmp
mov
dec
mov
add
cmp
test
sub
lock
dec
cwtl
xor
jbe
push
mov
push
mov
or
xor
scas
xchg
inc
mov
push
mov
in
sarb
lods
scas
adc
jbe
pop
imul
inc
dec
test
sbb
lea
clc
jns
pop
cmpsl
ss
enter
sub
pop
out
lret
or
iret
lods
orb
inc
clc
pop
movsl
jmp
in
xchg
jnp
jne
pop
xor
into
lahf
dec
inc
mov
ljmp
and
push
popa
movsb
movsl
clc
test
mov
pop
push
cmp
adcl
mov
sar
stos
cs
sti
rcrb
jno
insl
add
test
cmp
sarl
xchg
movsl
cmpsl
test
pushf
inc
pushf
iret
xchg
push
jbe
int3
sbb
cmp
outsl
jecxz
and
mov
sarl
and
dec
popa
pop
stc
inc
popf
sahf
jbe
cmp
ljmp
sbb
test
mov
mov
aad
push
jecxz
std
push
mov
rclb
in
popa
or
mov
fistl
jno
lret
dec
adc
sbb
mov
sahf
mov
dec
out
push
push
jp
xor
add
bound
inc
pop
pop
cmpsb
cmp
and
and
roll
into
fsts
loopne
or
sbb
mov
stos
pop
sbb
and
dec
xor
pop
das
inc
mov
pushf
clc
jnp
adc
mov
gs
stos
out
xlat
push
jno
fwait
test
std
leave
stc
inc
scas
cmp
in
xchg
push
xor
xchg
adc
orb
mov
sub
and
ret
ljmp
cmp
loope,pt
fbstp
inc
psubb
xlat
adc
xor
cmp
jmp
push
cmpsb
jne
test
leave
push
sub
cmpsb
dec
cmp
roll
imul
inc
jmp
sbb
outsl
cmc
push
mov
ficoms
push
inc
scas
jne,pn
and
clc
cmp
pop
in
sbb
pushf
xchg
jbe
iret
imul
cmp
push
test
bnd
fstl
sti
sbb
push
inc
jnp
or
fs
xchg
mov
mov
or
pop
popa
push
aaa
movsb
hlt
mov
ljmp
or
daa
mov
pop
mov
pop
xchg
test
fsts
ss
movsb
jb
mov
test
xchg
jno
mov
pop
std
aad
pop
lods
push
or
addr16
push
pop
mov
xchg
push
adc
push
jno
inc
leave
mov
adc
bound
push
cli
and
mov
xchg
and
leave
jmp
pop
data16
mov
inc
clc
add
les
jns
ja
and
rep
push
push
jecxz
cmpsb
mov
add
pop
out
and
or
mov
fstps
push
xor
cmp
outsl
xchg
push
clc
push
stc
lcall
adc
negb
fisttps
or
fstl
mov
push
loop
enter
clc
sti
mov
mov
aaa
out
mov
adc
sbb
sbb
pop
cmp
pop
adc
fnstcw
ja
mov
outsl
lock
scas
stos
or
or
or
add
lods
adc
push
lret
cmp
push
popa
xor
add
mov
sub
xchg
pop
lods
adc
cmpsb
pop
push
inc
jo
push
test
ja
jecxz
pop
xlat
or
cmp
pop
add
mov
fs
das
dec
cmp
movsl
and
xor
cmp
enter
jg
xchg
notl
jbe
sub
add
aas
push
mov
jbe
push
movsb
dec
adc
rclb
stos
inc
mov
push
loopne
xor
mov
int3
mov
pop
push
adc
cmpsl
outsl
orb
fwait
dec
lea
fnsave
test
mov
mov
sahf
in
mov
stos
sub
clc
jmp
addr16
jns
clc
jae
shrl
inc
test
push
sbb
jp
arpl
inc
gs
ret
lret
xchg
jl
cs
outsl
rcll
jecxz
mov
mov
xchg
dec
push
adc
in
push
sbb
cmc
jg
xchg
popa
sub
xor
jb
inc
jp
int3
jp
out
cmp
jge
push
leave
jnp
cmpsb
jg
pop
jae
lret
pop
xchg
pop
and
pop
or
bound
orl
aas
adc
mov
jge
insb
fcmovnb
xchg
sub
nop
adc
out
jecxz
jg
rcrb
orb
dec
jbe
nop
sbb
mov
sbb
rcrl
fwait
adc
popf
add
in
or
ja
jp
jg
lret
in
jge
loop
popa
ss
pushf
stos
std
mov
add
cmp
addr16
jp
xor
dec
addl
add
pop
inc
int3
xor
repnz
repnz
jle
out
fiadds
test
repz
movsb
jmp
insb
push
test
lret
popa
icebp
out
mov
sub
into
mov
mov
push
xchg
daa
pop
cmpb
xchg
inc
adc
and
push
adc
adc
fcoms
mov
mov
mov
inc
sub
push
lods
stos
sbbb
stos
fsubp
pop
mov
push
inc
frstor
xchg
mov
rcrl
and
jbe
outsb
insl
xchg
out
push
imull
aad
jo
int
push
bound
stc
nop
dec
jle
repz
call
xchg
and
jecxz
push
int
jno
rcll
mov
fisubrl
stc
inc
or
cltd
iret
aad
shl
out
sub
adc
pop
call
cwtl
cs
imul
rorb
sbb
jns
mov
shlb
inc
jae
sbb
iret
xor
sub
fsubrs
dec
mov
fiaddl
pushf
adc
sub
jecxz
in
rolb
or
repz
imul
inc
push
sbb
fld
out
mov
cmp
cmp
sub
arpl
test
out
aam
movl
mov
cli
stos
sarb
mov
mov
cwtl
jne
and
and
xlat
mov
lods
outsb
adc
fnstenv
lret
mov
push
dec
adc
xchg
adcl
fisubs
dec
mov
lds
mov
arpl
xorb
popf
loopne
out
cmp
jle
push
cwtl
stos
xor
mov
cmp
pushl
mov
dec
jl
mov
push
jmp
jno
test
push
pushf
lret
pop
test
lods
jmp
adc
cwtl
pop
pop
jmp
sub
dec
in
push
push
je
test
jle
enter
and
adc
cmpsb
mov
repnz
ss
es
popf
add
jmp
adc
dec
cmc
fcmovnbe
cmp
sbb
sub
pop
rcl
adc
in
mov
nop
popa
dec
push
shrl
inc
std
push
outsl
arpl
repnz
pushf
lcall
bswap
lahf
cmp
popa
cld
call
adc
fbld
fildl
and
aaa
mov
mov
adc
fsts
out
mov
jbe
int
jmp
out
leave
mov
out
popf
mov
adc
push
popl
mov
test
pop
ror
sbb
stos
push
or
xchg
outsl
xor
stos
scas
xlat
pusha
fiadds
pusha
dec
jp
pop
xor
pop
push
inc
inc
jnp
enter
jb
push
clc
mov
pop
mov
fbld
pop
lret
sbb
add
xor
leave
dec
add
add
test
sub
subl
aad
jne
sub
adc
arpl
je
daa
fisubrs
loopne
stos
stos
repnz
in
or
cmpsl
gs
stos
sarb
xchg
push
or
out
cmc
and
mov
aad
jbe
cmp
shrl
dec
jmp
push
mov
pop
or
rcrl
inc
aaa
push
add
lock
loope
push
cmc
or
outsb
into
and
ja
dec
pushf
push
mov
xchg
pusha
mov
xchg
lret
test
pop
out
dec
test
xor
jg
outsl
add
dec
pop
push
leave
jae
out
out
cmpsl
gs
pop
xor
xor
and
pop
in
xchg
sub
mov
mov
mov
or
cld
mov
jge
cli
xchg
lods
pop
test
lcall
pop
xlat
or
inc
dec
adcl
stos
stos
sarl
out
push
sub
aad
and
nop
mov
add
les
iret
pop
mov
cmpsb
xorl
shrl
sub
clc
mov
mov
movb
push
movl
and
pop
ret
sub
loop
or
rorb
lret
and
push
xor
xor
fiaddl
ret
add
fisttpl
mov
popa
stc
push
ret
mov
ss
xor
sub
dec
cmpsb
mov
adcl
rorb
das
dec
dec
test
pop
cmp
rorb
pop
je
testl
dec
movsb
fidivl
sahf
mov
sbb
adc
ret
sbb
in
idivb
inc
ja
in
jb
imul
xor
pop
imul
cmp
xchg
cmp
mov
scas
testb
jle
mov
outsl
fs
lock
and
loope
mov
add
adc
repz
lahf
add
xor
xchg
sub
add
mov
mov
bound
rorb
rcrl
in
cmp
mov
hlt
xchg
pop
sub
leave
stos
jb
flds
dec
test
ffreep
fwait
push
push
aas
jno
mov
test
leave
rcll
and
jg
mov
daa
or
xor
movsb
and
pop
mov
or
lods
jbe
cld
add
pop
cmpsl
jl
ret
or
push
xor
or
adc
in
stc
add
cmpsb
push
mov
getsec
lea
sub
dec
sub
mov
cmp
cmpsl
mov
iret
cmp
push
dec
mov
cmp
jp
add
mov
push
repz
jnp
adc
add
push
mov
and
jl
pop
rcr
sub
insl
add
shrb
jmp
and
push
push
call
or
cmp
mov
jb
and
pop
outsb
insl
in
cli
inc
outsb
xor
adc
loop
xchg
ret
roll
jmp
xchg
xor
rcll
pushf
rclb
loopne
loope
push
pop
call
cltd
imul
mov
fs
lods
pop
aam
push
cmp
movsb
inc
jae
inc
pop
ret
ret
push
and
push
xorl
push
xchg
in
mov
pushf
xor
or
je
push
in
push
mov
mov
fwait
jmp
push
or
jecxz
inc
inc
ljmp
out
cmp
lods
push
test
jne
mov
xchg
negb
inc
push
aaa
scas
lods
shrb
stos
push
aaa
stc
cvtps2pi
jae
sbb
std
xor
ret
xchg
mov
xor
lcall
mov
adc
xor
sub
cmp
cltd
sub
add
push
cwtl
xchg
insb
inc
jnp
out
loop
mov
mov
mov
jae
jg
inc
bound
movsb
fnop
pop
loopne
loope
sub
hlt
or
sbb
adcl
ss
into
scas
sub
sub
push
push
pusha
pop
out
adcb
mov
sti
xor
cmp
sbb
mov
jae
inc
add
xor
cli
adc
std
jbe
sbb
fnstcw
xchg
sbb
test
xor
or
dec
mov
fwait
pop
jb
jns
sub
jecxz
inc
cld
cmp
dec
xchg
cmp
dec
imul
cmpsb
stc
add
push
push
sub
xchg
dec
imul
mov
unpcklps
in
and
sbb
dec
add
sub
push
mov
addr16
adc
or
push
inc
mov
sbb
pusha
jle
out
sbb
mov
orb
or
nop
aaa
or
adc
es
mov
pop
sbb
push
pop
xor
aaa
scas
xchg
xor
ret
inc
loope
lods
mov
dec
inc
loope
pop
mov
sub
je
sub
mov
push
xchg
xchg
inc
fadds
loopne
add
xor
imul
imul
mov
in
jg
test
xor
mov
ja
leave
shlb
out
dec
xchg
sbb
adc
jo
sti
sti
mov
stc
pop
ret
mov
push
testb
js
test
sti
ljmp
les
xor
movsb
xchg
cli
pop
sar
or
cmp
mov
push
loope
lock
fisttpll
mov
jmp
js
fidivl
ja
ret
mov
mov
stos
sbbl
mov
xor
dec
dec
mov
mov
jb
fmull
test
cmp
dec
enter
inc
dec
adc
push
js
lret
js
mov
cltd
inc
push
arpl
scas
xchg
out
sbb
ret
dec
ja
je
call
cmp
sahf
push
insb
clc
cmc
shrl
jns
stos
jb
or
shll
dec
cs
in
mov
push
sub
or
popf
push
enter
shll
lock
jno
int3
or
dec
mov
dec
test
jge
pushf
es
popf
push
loop
test
adc
out
sbb
mov
loope
fcoml
jg
push
adc
fucomip
sub
sub
ljmp
pop
shlb
cmp
jns
fdivrp
or
lock
pop
movsbl
ret
push
cmp
push
into
dec
dec
clc
pop
enter
fsubrs
daa
movsb
dec
add
or
adc
gs
mov
add
movsl
sub
push
push
lahf
sub
push
mov
adc
rcl
imul
mov
insb
loope
and
shl
gs
inc
mov
cmpsl
or
push
xor
add
inc
xor
inc
icebp
jbe
scas
mov
xchg
adc
push
jp
xchg
jbe
sbb
xor
jle
sbb
mov
loopne
cmp
mov
aaa
arpl
push
call
xchg
cmp
mov
loope
mov
cmc
mov
xchg
add
in
jl
cmp
test
mov
push
cmp
add
adc
or
pop
xchg
aas
lock
fisttpl
iret
jp
mov
out
cmp
test
in
lahf
pop
loope
fcomp
test
or
and
mul
and
fistpll
cltd
push
mov
into
dec
cmp
popa
mov
mov
mov
push
or
mov
hlt
mov
jb
and
lea
mov
sbb
push
and
sub
jo
or
ficompl
mov
xchg
gs
xor
add
mov
and
in
jae
sbb
sbb
mov
enter
jle
jecxz
lea
mov
adc
or
addr16
cmpb
test
xor
mov
and
push
push
cmc
cmc
adc
hlt
and
into
stos
jo
inc
aad
inc
cmpsb
cmpsl
stos
movsb
adc
mov
xchg
int
addr16
cmc
push
icebp
pop
sub
push
pop
pop
fsubrl
lea
or
iret
dec
jb
xchg
jno
pop
cmpsb
mov
loopne
dec
rol
pop
sbb
jmp
jge
xlat
cltd
in
aad
mov
ret
data16
jns
popa
jg
aas
dec
mov
jne
in
jl
jne
and
outsl
ret
cwtl
cmp
inc
lds
cld
inc
popa
inc
inc
cwtl
sub
add
xchg
push
loope
xchg
sub
popa
and
or
mov
add
xchg
add
xchg
mov
adc
add
push
jb
or
loope
dec
or
mov
cli
dec
aad
cmp
sub
push
inc
adc
add
pop
stos
pop
mov
jle
xchg
mov
gs
lahf
mov
xchg
cmp
or
cli
sub
jge
push
movl
sub
rcrb
add
outsb
xchg
movsl
pop
push
mov
jo
lods
rcl
es
inc
sub
in
pop
mov
hlt
icebp
push
stc
cmp
cmp
push
mov
and
pop
adcl
je
and
sub
addb
cli
or
mov
popf
push
stos
out
cwtl
clc
push
sbb
insl
incl
push
jge
scas
mov
lret
jg
adc
mov
xor
mov
cmpsb
push
mov
out
xor
and
stos
push
aaa
pop
mov
add
in
dec
scas
fcomi
aaa
cmp
ret
fnsave
xchg
pop
pop
rorl
clc
and
pop
psubusw
inc
or
xchg
mov
into
adc
mov
ret
jno
jl
cmpl
popl
xchg
int3
jae
xchg
and
mov
sbb
hlt
dec
sub
fsubl
push
pushf
cmp
adc
jl
mov
sahf
mov
es
icebp
add
jmp
mov
add
lods
push
mov
stc
out
adc
mov
fs
mov
sub
shlb
ret
mov
jmp
jge
or
or
pusha
insb
cmc
add
hlt
inc
xchg
cmp
out
roll
xor
mov
push
sbb
mov
in
mov
xchg
and
sbb
imul
cli
testb
es
shr
push
insl
cmp
shrd
ffree
je
lds
adc
adc
mov
dec
pop
int3
arpl
pop
add
test
jno
lret
jne
ret
in
test
repnz
and
testl
lcall
push
mov
loope
movsb
addb
ret
ljmp
push
inc
xchg
clc
stos
scas
mov
movsl
imul
cltd
mov
jecxz
rol
inc
out
fisubrs
in
mov
lret
sbb
fidivrl
lahf
leave
pop
jns
jle
fcomi
mov
arpl
arpl
cmp
sub
aaa
scas
dec
adc
adc
adc
test
sub
ljmp
xchg
mov
stos
mov
cmc
sarb
js
or
mov
mov
fldt
fistpl
push
mov
lret
insl
dec
out
test
movsb
js
lret
push
pop
inc
fs
icebp
test
add
jns
out
mov
inc
test
pop
imul
add
dec
pusha
xor
bound
mov
mov
arpl
cvttps2pi
leave
cmp
cmp
xchg
lret
inc
ret
mov
inc
arpl
push
xlat
scas
addl
mov
jle
and
add
out
push
mov
xchg
ss
arpl
shlb
pop
xchg
fwait
inc
lahf
arpl
rclb
rclb
nop
lods
bound
mov
inc
adc
test
cmp
popf
fsubs
outsb
cli
jge
pop
mov
adc
lods
mov
movsl
test
dec
dec
scas
mov
mov
jmp
ret
mov
add
stos
adc
ja
jno
mov
sbb
popa
adc
in
push
mov
bound
jne
push
mov
test
test
test
cltd
xchg
or
pop
pusha
test
fistps
inc
or
rorl
loop
mov
jae
insl
pop
stos
push
and
enter
in
sahf
imull
addl
arpl
bound
ljmp
negl
mov
sbb
add
pop
mov
into
adcb
mov
sbb
call
in
inc
testb
pusha
jno
leave
jb
ficoms
adcl
daa
adc
xchg
mov
push
fwait
mov
and
push
iret
aas
rcrl
dec
mov
andl
push
pushf
jnp
test
push
lock
into
fs
mov
xor
lret
imul
mov
sbb
cwtl
int3
push
pusha
fstpt
std
mov
mov
insl
push
mov
sub
cmpsb
inc
dec
ret
mov
aad
jg
mov
in
xchg
xor
xor
cltd
mov
ss
sahf
lret
stos
pop
or
adc
add
adcl
xor
mov
fnstcw
test
cmp
dec
call
leave
xchg
and
outsb
cwtl
jecxz
repz
lahf
fnstcw
cmp
mov
cli
push
adc
cli
lcall
clc
xchg
and
ja
cmp
jns
add
in
daa
fldcw
test
pop
cmc
cld
repz
cmp
fs
movsl
xor
lods
test
lock
jp
pop
outsb
push
loopne
negb
push
shl
sub
sti
lret
mov
adc
xlat
mov
sub
dec
fs
js
nop
cmp
aad
mov
adc
xor
fs
mov
jb
dec
xorl
aam
scas
inc
xchg
dec
out
stos
mov
fwait
add
inc
arpl
lret
les
in
cmp
mov
lcall
jne
cmp
out
cld
call
das
xchg
scas
loop
dec
inc
ret
inc
pushf
test
xchg
shll
lea
frstor
fcoml
sub
xor
pop
push
xchg
dec
test
filds
xchg
add
cmp
cld
dec
arpl
lret
sub
clc
pop
and
push
mov
xlat
lret
in
jl
jmp
popa
dec
or
sbb
sub
out
push
mov
repz
icebp
loop
sub
call
xlat
jge
lcall
xchg
ss
ss
fiadds
pop
daa
and
sarl
pop
cmp
das
sarb
xor
or
repz
push
in
test
movsb
xchg
dec
mov
push
adc
addr16
mov
fwait
xchg
rep
das
adc
jl
subl
mov
or
and
ret
xchg
mov
mov
adc
xor
in
jae
sbb
push
jmp
jmp
lret
call
aaa
and
dec
fisubl
lahf
fwait
and
push
pop
cmpsl
mov
or
orl
jbe
pushf
imul
mov
aam
mov
and
jne
pushf
sub
lret
rorl
adc
dec
arpl
ret
and
stc
js
push
dec
fs
in
sbb
ficoml
mov
sub
call
dec
push
push
nop
pop
js
xchg
xor
scas
mov
popf
test
push
or
sub
lahf
adc
mov
insl
nop
sti
dec
xor
bound
dec
mov
pusha
jmp
insb
mov
ss
or
not
clc
icebp
xchg
movsl
mov
adc
movsb
in
and
jno
test
fdivrs
lods
pop
and
negl
adc
addr16
rcrb
inc
mov
jb
ljmp
or
dec
data16
daa
sbb
mov
mov
loop
loope
mov
pop
aaa
cmp
imul
fs
push
cmp
inc
js
sbb
fldl
orb
add
loope
sub
inc
js
into
and
lcall
mov
mov
mov
push
fucom
xor
dec
jl
sub
out
ljmp
mov
cld
mov
mov
test
xchg
add
sub
arpl
push
mov
jb
sbb
sbb
inc
loop
sub
mov
mov
daa
out
ret
pop
aas
pop
pop
fistps
sub
orb
xlat
les
pop
cmp
fsubl
xchg
mov
push
movsb
mov
xchg
imul
sbb
ficomps
pop
pop
fcomp
adc
in
shrl
mov
lcall
adc
push
mov
mov
scas
add
fwait
cmp
pop
shrw
dec
push
out
mov
mov
adc
aaa
adc
xor
or
psrlw
scas
adc
and
out
mov
sub
push
xchg
in
not
jo
cmp
inc
xchg
fcomp
lods
in
cwtl
adc
xchg
sub
loopne
adc
add
inc
addb
es
fs
mov
out
int
jle
arpl
push
das
loope
ds
add
sarb
adc
addl
pusha
out
push
pop
loop
xor
dec
aas
sti
and
and
mov
test
inc
jge
cli
int
or
push
adc
aas
jl
insl
fstpt
xchg
out
pop
sahf
jns
popf
icebp
pop
aas
inc
in
incl
cld
inc
test
mov
test
mov
adc
stc
lret
std
or
testl
fstpt
mov
jo
sahf
repz
xchg
jp
leave
frstor
adc
inc
jns
lock
sbb
stos
cmp
ret
sub
jne
pop
sbbl
xor
call
mov
push
repnz
jle
cmpsb
scas
sbbl
mov
fbstp
jge
push
lcall
inc
lret
pop
imul
adc
fstpt
add
or
movsl
notl
push
repz
idivl
cld
cld
aam
push
in
inc
mov
decb
in
rcll
add
dec
xor
leave
lea
stos
push
or
mov
int3
fldt
dec
sbb
movsb
jbe
movsb
loopne
icebp
xlat
or
out
cmp
add
fwait
stos
inc
stc
or
jmp
hlt
leave
xor
out
dec
mov
imul
jae
sub
movsl
call
xor
mov
popf
cmpb
mov
sub
int
sbb
fimull
out
and
mov
rcl
loopne
mov
fwait
ss
mov
cmp
icebp
dec
inc
fcompl
bound
fiadds
xchg
lock
mov
sbb
out
imul
push
cmp
ffreep
cmp
cwtl
lret
scas
xor
je
or
or
push
cwtl
mov
and
push
pop
xor
out
enter
ret
sbb
sbb
push
adcb
mov
pop
jno
xchg
daa
lret
aas
adc
fldenv
data16
inc
jecxz
jo
mov
mov
xor
fisttpl
sbb
or
data16
cmp
ret
pop
jle
int
dec
dec
insl
cmp
movsl
outsb
pushf
decl
std
test
lods
mov
dec
and
dec
adc
outsb
mov
pop
jle
inc
jge
lock
sbb
pop
cwtl
fistl
jbe
xchg
sarb
jecxz
cs
cmpb
mov
push
ret
leave
popl
ss
dec
push
mov
dec
cmc
data16
lea
dec
ret
jmp
es
mov
push
aas
inc
test
adc
sub
sub
dec
mov
or
arpl
jae
push
fcmovu
jp
jp
mov
iret
fdivrl
lods
popf
pop
or
dec
ficomps
lcall
std
fldcw
adc
je
inc
inc
xchg
jp
or
sahf
and
out
xor
pop
mov
cld
jle
fnstenv
fsubrl
xchg
cld
sub
or
ret
push
jg
popl
outsb
gs
fnstcw
in
ljmp
cmp
icebp
pop
pop
and
xchg
mov
in
in
push
xor
test
mov
mov
push
in
push
add
repnz
inc
call
in
lret
jl
dec
movsb
jmp
inc
imul
dec
arpl
pop
sbb
sub
mov
mov
pusha
sbb
push
pop
stos
dec
nop
addr16
add
xchg
rcrb
mov
imul
mov
mov
ret
mov
jmp
cwtl
rolb
vpmaddwd
mov
sti
rorb
mov
jl
rcll
ds
xor
push
lods
out
xchg
lock
sbb
sahf
stc
cmp
jne
psubusb
dec
push
sub
add
cmp
imul
xchg
popa
dec
dec
cli
push
shr
inc
inc
fucom
repnz
xor
lods
and
movsb
add
lcall
cli
scas
add
mov
fists
push
dec
into
flds
xor
nop
xchg
push
clc
nop
push
movsb
jmp
pop
in
sbb
dec
mov
inc
aad
sti
xchg
jns
das
xchg
push
rcll
or
jns
mov
jo
std
jo
cmp
les
inc
aas
pop
pop
mov
jle
add
adc
arpl
xor
xchg
sub
mov
adc
wbinvd
movsb
and
adc
das
and
dec
dec
push
jl
and
rol
xor
sahf
mov
pop
jae
fmul
sbb
push
cli
push
sarl
pop
negb
jns
or
push
orb
mov
adc
test
rcr
push
push
xor
cmc
into
sbbl
sbb
mov
ja
sub
fsubrs
arpl
minps
test
dec
fisubrl
aam
adcl
adcb
movsb
cmpsb
loopne
shll
jo
add
ds
xchg
loop
repz
fsubl
imul
inc
ret
inc
icebp
xchg
mov
sbb
hlt
xlat
ja
mov
cmp
sbb
add
xor
push
adc
sbb
inc
jle
sub
loop
mov
jbe
push
cmp
mov
inc
sti
test
andl
or
jae
adcb
pop
jl
push
orl
divb
dec
loop
icebp
sub
adc
movsl
sbb
das
shlb
mov
outsb
enter
cwtl
add
lock
dec
mov
and
out
xor
int
addr16
rolb
loope
mov
test
mov
orl
pop
push
movsl
mov
lret
fnstenv
or
cmp
dec
mov
adc
je
loopne
ret
test
sbbb
pushf
dec
lcall
dec
imul
shll
jecxz
into
das
and
dec
and
sub
mov
lods
pop
shlb
fwait
dec
lods
arpl
xor
fbstp
dec
xor
jne
jmp
sbb
hlt
iret
bound
bound
test
fidivrl
gs
cmp
xor
nop
loope
loope
sti
jns
stc
aad
xchg
cld
dec
push
addr16
mov
xor
mov
inc
lods
pop
mov
xchg
inc
dec
stc
test
push
mov
inc
sar
xor
mov
out
cmp
jne
mov
xor
clc
nop
xchg
push
outsl
fs
mov
xchg
mov
outsl
pop
loope
cmpsb
cs
cld
frstor
adc
sub
dec
push
mov
jmp
int3
lret
pop
inc
sub
or
cwtl
push
adc
jne
inc
cmp
add
pop
scas
push
sub
orb
mov
pusha
adc
in
popaw
jg
jmp
out
xor
sti
sarl
or
push
out
repz
dec
arpl
stc
cli
sti
sub
dec
stos
and
fcmovne
adc
add
push
fcoms
aas
and
push
insb
sub
add
pop
mov
inc
dec
daa
insb
inc
xlat
xor
ficompl
cmp
cld
clc
insl
cs
inc
mov
sbbl
mov
cmp
cs
and
cmp
push
out
mov
xor
sarb
out
jge
mov
insb
ljmp
inc
mov
sub
call
and
out
les
jo
std
aad
addr16
push
mov
aas
pop
jmp
sub
loopne
test
mov
jmp
out
jo
mov
pop
pop
and
pop
xchg
xchg
icebp
jp
inc
add
pusha
or
scas
pop
test
mov
fadds
jle
mov
ljmp
pop
mov
imul
mov
add
add
pop
in
jg
push
das
out
push
push
pop
pop
cwtl
ret
into
or
loopne
jo
inc
int
ja
stos
jne
cld
out
push
into
inc
add
arpl
stos
dec
enter
adc
in
std
adc
clc
push
xor
jge
pop
insl
sbb
mov
mov
cltd
daa
pop
add
pop
add
or
and
xchg
les
xchg
xchg
sub
push
mov
mov
cmpsb
and
push
lods
jl
fisubrl
imul
leave
mov
push
pop
ss
mov
xor
cli
jmp
xchg
daa
in
mov
jle
sub
push
fisttps
leave
int3
repz
adc
sub
clc
fiadds
dec
lea
int3
jno
xchg
enter
sti
inc
into
xchg
mov
out
repz
add
movsb
rorl
adc
and
in
push
gs
push
fcom
or
lock
hlt
scas
mov
mov
mov
dec
adc
inc
sbbl
cwtl
sub
std
pop
repnz
lock
loop
push
in
insb
push
and
xlat
push
shlb
jbe
mov
jns
or
subb
mov
mov
inc
adc
fcomps
jl
push
movl
mov
out
mov
xchg
testl
js
cmpsl
repnz
cmpsl
mov
pop
xchg
xor
pop
adc
jbe
arpl
fnstenv
popa
int
insl
or
push
jbe
lcall
xor
bnd
mov
add
push
mov
cmp
jle
sbb
sbb
jmp
sub
insl
cmp
sbb
addr16
xchg
idivl
lret
into
les
fstpt
jbe
stc
sub
xor
bound
push
xchg
jno
int
rolb
cld
lock
test
leave
cmpsb
jle
inc
daa
push
lcall
and
sub
fildll
xor
jge
fnstsw
cli
es
inc
mov
and
test
push
testb
xlat
stos
mov
ljmp
mov
inc
stos
icebp
test
cwtl
jge
add
xor
jp
fdivrp
add
xor
leave
popa
or
lods
je
les
jmp
and
dec
aas
iret
sub
nop
or
repz
test
leave
or
cli
cmpsb
push
dec
aas
xor
lods
mov
inc
sub
popa
fs
jmp
xor
cmp
jbe
aad
adc
pop
pop
push
pop
push
xchg
mov
out
mov
sbb
inc
cs
ljmp
pushf
jmp
sahf
jl
insb
adc
mov
add
scas
mov
outsl
jle
xor
shrl
mov
adcl
xor
in
lock
shlb
lea
jne
insl
loop
clc
in
out
pop
popf
sbb
fcmovnu
adc
xor
sbbl
dec
add
dec
mov
arpl
mov
pop
cltd
push
mov
jmp
mov
adc
scas
pop
mov
adc
xchg
xor
or
stos
sahf
jbe
pop
js
mov
fisttpll
sub
aam
add
adc
mov
dec
aas
fildl
adc
push
jae
shlb
pop
inc
es
scas
dec
cmp
mulb
movsb
popf
cld
add
int
push
push
lcall
sbb
cmp
dec
inc
pop
imul
mov
push
ret
xchg
lahf
mov
mov
xlat
xchg
and
call
cmp
and
mov
jne
fldl
stos
lret
in
pop
jp
dec
and
loopne
mov
mov
xchg
cmc
xor
dec
dec
mulps
cmpsb
xchg
lea
xchg
je
loope
lcall
pop
cltd
xchg
mov
in
sbb
inc
and
and
cmp
flds
sub
mov
adc
mov
in
inc
mov
pop
push
mov
xchg
lea
movsb
jo
std
repz
sahf
jno
pop
xchg
fwait
or
imul
xchg
ljmp
and
sbb
ret
out
pop
add
leave
int
xorb
or
aam
jp
repz
push
fnsave
mov
sub
daa
xchg
aam
sti
cmp
mov
jo
mov
repnz
xor
mull
cltd
push
xchg
insb
and
and
mov
or
add
jle,pn
dec
andl
mov
pop
aas
mov
outsb
lcall
jae
adcb
pop
adc
and
loope
xchg
imul
inc
rcrb
ds
orb
mov
or
movsb
mov
sahf
fsubr
nop
out
pop
lea
cmpsb
xlat
fcoml
cmpsl
xchg
and
xchg
mov
jecxz
cmp
call
add
jne
nop
lahf
jne
xchg
jmp
add
mov
inc
dec
ljmp
int
bswap
push
mov
stc
bound
mov
test
fistpl
outsb
roll
pusha
inc
adc
lea
js
movsb
nop
dec
pextrw
nop
xchg
mov
push
fbstp
sub
out
or
sahf
push
popa
test
cmp
scas
jb
inc
imul
sti
lods
xchg
aas
jae
fsubrs
push
js
jmp
sbb
movsb
inc
add
das
dec
jbe
shll
xchg
and
cmp
cmp
jb
fwait
stos
hlt
pop
pushf
jno
xchg
push
in
sub
inc
pop
lock
dec
jo
xor
jl
movsb
aad
pop
push
int3
scas
or
and
pop
in
dec
in
pop
cli
push
aam
xor
dec
dec
in
jmp
pop
mov
pop
in
sub
cmp
mov
adc
inc
in
outsb
in
dec
mov
or
mov
xchg
dec
es
sbb
sbb
push
jae
mov
das
xlat
sub
lods
fisttpll
add
add
jo
pop
push
pop
jl
inc
jl
test
imul
out
popf
enter
sbb
mov
mov
jle
jno
cltd
mov
lcall
arpl
push
xchg
jg
sub
iret
sub
neg
cld
mov
xor
push
cs
in
xor
aas
in
int3
ljmp
add
mov
in
xchg
clc
xchg
pop
jecxz
mov
adc
clc
push
mov
cwtl
adc
sahf
out
and
les
fisttpll
adc
jne
cmpl
loopne
jae
pusha
pop
and
leave
mov
les
daa
int
mov
jbe
punpcklwd
xor
aas
inc
jne
mov
and
test
jle
push
pop
mov
pop
loopne
outsl
push
push
jecxz
sub
sti
jno
adc
jge
adc
sub
es
jne
xor
push
mov
cmp
dec
dec
clc
pop
add
repnz
push
add
mov
cmp
or
push
fwait
cwtl
mov
mov
jge
sub
lds
add
cli
mov
xchg
push
out
mov
cmpsl
adc
loopne
mov
mov
cmp
jecxz
iret
shll
fnstsw
jmp
mov
sti
jno
pop
dec
stc
popf
jne
subl
pop
pop
or
imul
insb
cmp
clc
and
je
aam
jno
aad
xchg
fld
in
es
cmp
xchg
cmp
jo
std
mov
push
and
xchg
jmp
push
jns
enter
divb
test
mov
push
hlt
rclb
test
push
mov
andl
leave
shll
lcall
or
or
enter
pop
add
lret
mov
adc
cmp
fcoms
push
mov
inc
or
sub
mov
push
mov
xor
in
dec
or
dec
and
mov
add
scas
push
loop
sbbl
or
and
loop
push
mov
push
xor
add
shll
sub
push
mov
sbb
mov
test
mov
jmp
push
jmp
popa
or
inc
xchg
xorl
cmp
loopne
nop
xchg
in
test
aad
mov
jno
xor
push
inc
dec
int
insl
mov
inc
jg
mov
sbb
das
lock
xadd
ja
xor
add
inc
xor
mov
mov
cwtl
and
sbb
sub
jns
mov
dec
mov
push
enter
adc
leave
out
sti
push
in
push
into
dec
pop
adc
out
addr16
xor
mov
mov
and
jge
inc
jnp
xchg
pop
cmpsb
pusha
cmp
cmp
lcall
xchg
insl
cld
out
push
mov
sub
movsb
outsb
lret
mov
scas
je
mov
mov
dec
xchg
adc
sub
repz
orb
push
popa
cmp
sub
stos
mov
int3
les
imul
cltd
hlt
add
jmp
push
cmp
pop
push
fisubl
pop
dec
pop
out
xchg
pop
loop
lcall
add
test
ss
je
xor
xchg
shrl
pusha
cmp
bound
mov
mov
push
pop
cmp
mov
into
aas
daa
jecxz
and
stc
pop
pop
dec
cmc
or
jb
add
xlat
popf
das
out
icebp
mov
mov
sahf
outsl
popf
mov
ja
stc
adc
loopne
lock
ret
mov
mov
or
int
or
cmp
mov
push
xchg
push
les
cltd
sub
jns
xchg
and
adc
popf
push
cmp
sahf
stos
loopne
cmpsb
push
popa
rol
iret
out
mov
mov
inc
pop
jae
inc
loope
lcall
pop
or
jnp
add
push
fdivrs
in
es
ljmp
add
in
push
pop
mov
mov
xchg
mov
jnp
sarl
mov
xchg
add
repz
rorb
add
push
dec
jo
stc
jmp
push
or
fs
and
enter
iret
popa
xchg
xlat
push
jecxz
popa
adc
sti
pop
decb
repnz
addb
frstpm(287
pop
in
mov
pop
xor
icebp
jmp
sub
mov
fistpll
outsb
insb
dec
xchg
lock
cmp
aad
sub
mov
dec
aad
testb
loop
imul
mov
imul
sahf
jns
mov
ret
mov
sub
popf
rep
mov
inc
xchg
cmp
fwait
or
lahf
nop
and
xorb
ret
cmp
mov
rorl
jge
mulb
cmpsb
mov
int
ljmp
rclb
lods
mov
jle
rcr
ret
mov
mov
andb
aas
adc
pcmpgtd
adc
xchg
mov
aad
stos
mov
adc
scas
inc
mov
inc
inc
fiadds
pop
inc
xchg
outsl
adc
cmp
gs
xor
std
xor
mov
mov
hlt
sub
fwait
jno
push
mov
gs
jns
jge
cmp
insl
ja
and
mov
add
sub
fdivs
cwtl
mov
scas
imul
xchg
in
stos
jae
mov
push
shrl
bound
adc
es
pop
cmp
sub
fwait
into
shll
and
mov
fs
fs
outsl
jl
add
aas
mov
dec
hlt
mov
js
clc
dec
inc
xchg
push
negl
jle
cmp
sbb
push
xor
pop
ljmp
pop
push
loop
jmp
cmp
add
rcrb
mov
fstpt
lds
dec
inc
pop
iret
lods
dec
mov
cmp
and
sbbl
lock
jg
xor
inc
jmp
repz
dec
pop
out
sub
lods
cbtw
mov
sbb
adc
repz
dec
xor
adc
inc
sbb
les
ja
xor
push
pop
inc
call
dec
mov
out
cmc
pop
imul
js
dec
das
inc
loop
inc
arpl
pusha
popf
jae
ljmp
xor
add
lcall
sub
rolb
cmp
mov
adc
and
stc
lret
jecxz
xchg
jg
sub
jmp
into
icebp
popa
int
adc
fcomip
imul
mov
xchg
dec
push
cs
pop
push
pop
je
push
pop
add
loope
jo
ss
push
xchg
push
and
mov
inc
pop
daa
scas
lcall
in
in
xchg
mov
mov
mov
push
pop
idivb
call
imul
adc
mov
sbb
dec
adcl
sbb
cld
mov
mov
mul
xchg
add
fs
inc
pop
dec
loopne
lret
jg
stos
push
les
mov
push
inc
imul
mov
ljmp
aas
and
rclb
test
xchg
mov
testl
lea
push
repnz
xchg
xor
sti
pushf
or
jnp
fsubrl
aam
jecxz
call
mov
dec
jecxz
cmpsl
add
outsb
pop
dec
sub
sti
ret
dec
imul
imul
scas
sahf
adc
stos
lcall
add
in
arpl
inc
daa
sbb
mov
int3
dec
pop
test
data16
push
loopne
mov
call
sbb
lods
std
mov
popa
sub
mov
test
icebp
sub
outsl
pusha
pop
mov
pop
movsl
mov
jmp
xor
testb
adc
push
add
mov
cmp
dec
lods
in
outsb
in
push
shrb
add
xchg
xchg
call
push
ret
outsl
clc
loopne
pop
adc
mov
out
push
adc
shlb
push
cli
cmpsb
xor
adc
enter
rcrb
xchg
mov
mov
xor
repz
mov
mov
adc
jl
pop
ds
jge
inc
cmp
clc
es
flds
mov
femms
jl
push
fwait
lods
stc
hlt
pop
pop
sbb
mov
rcr
jge
pop
insb
xchg
movsl
popf
scas
lret
and
lock
fistl
movsb
test
sub
fiadds
jbe
push
adc
int
mov
stc
and
out
cmp
ficoml
jb
movsl
adc
push
fs
push
push
inc
mov
in
sub
adc
sahf
cmpsl
andl
push
scas
ds
addr16
cltd
cli
fstpl
adc
sbb
jecxz
inc
pop
data16
cmpl
rorl
jbe
jmp
imul
jno
and
imul
or
aaa
mov
scas
push
daa
jge
sarl
cmp
shll
push
inc
cmp
xor
icebp
mov
jge
sbb
xchg
sub
cs
js
jmp
popa
test
lds
cltd
add
jmp
clc
sbb
sub
cmc
lcall
inc
or
sbb
test
pop
add
adc
cmpsl
mov
sub
bound
lret
test
notl
xchg
jae
push
inc
clc
mov
fdivrs
stc
pop
icebp
mov
jecxz
cmpsl
call
mov
outsl
test
andl
dec
js
jmp
iret
popl
xchg
mov
xlat
aad
cmp
xchg
pop
movsl
dec
push
inc
dec
dec
jne
stos
push
sub
mov
fs
mov
sub
jl
mov
or
mov
xor
rcr
rcll
sbb
adc
adc
mov
ja
inc
pop
pushf
mov
pop
inc
ljmp
xchg
pop
stos
pop
dec
pop
aaa
pop
mov
sub
dec
sbb
addr16
mov
push
pop
sti
mov
pop
sub
sti
sahf
dec
and
mov
xlat
mov
fdivrp
clc
add
cmp
std
dec
add
push
dec
repz
and
out
jmp
rorl
pop
mov
dec
sub
cmp
jns
popf
jl
push
jmp
imul
jno
jbe
xlat
lcall
stc
push
nop
mov
add
fwait
call
cmp
sbb
inc
and
insb
dec
xchg
aad
rcll
js
and
icebp
sbb
outsl
sub
outsb
shl
out
xchg
push
inc
in
stos
inc
push
add
sbb
sbb
popa
adc
clc
pop
mov
fists
jnp
fiaddl
insl
xchg
xor
fisubrs
in
ret
mov
test
leave
mov
insl
inc
add
shlb
or
ret
or
out
movsl
fwait
lret
negl
cmpsb
cmpsb
insl
jo
icebp
rcrl
adc
aas
mov
xorl
mov
insb
lods
movsb
cmpb
jge
les
jp
rcl
testb
pop
xchg
ret
pop
hlt
xchg
or
or
mov
and
test
sbb
cli
es
lods
cmp
inc
and
jns
xchg
insb
mov
in
sub
mov
sbb
fs
stos
pop
adc
test
inc
repz
or
sar
mov
add
ss
mov
in
dec
mov
iret
mov
jnp
imul
fistpll
push
xor
xchg
rol
sahf
dec
loopne
mov
pop
jmp
xchg
dec
or
jp
xchg
xor
jbe
je
xchg
sbb
mov
mov
fidivrs
mov
add
inc
mov
test
cmp
sub
add
jo
test
lret
and
data16
jns
jmp
lds
test
inc
mov
stos
jl
cmp
mov
cltd
or
imul
movsl
outsb
or
out
mov
sub
jae
and
lock
push
push
in
adc
push
or
dec
add
jns
jae
roll
dec
fdivs
adcl
push
xchg
nop
outsl
mov
insb
push
push
and
in
clc
mov
scas
lods
iret
imull
in
dec
stos
jno
ljmp
jne
pop
std
imull
jb
mov
jo
dec
inc
jle
test
push
jp
and
sub
push
cmc
jns
xor
cmp
dec
aaa
lods
inc
aaa
test
jo
in
sub
lods
mov
enter
arpl
fdivrl
jle
inc
jns
mov
sbb
lods
aam
pop
cmp
imul
push
cmc
mov
rol
stc
pmaxsw
movsl
and
out
or
lret
gs
push
adc
popf
repnz
fcmovnb
sub
subl
inc
and
mov
push
pop
inc
lods
xchg
inc
push
add
cltd
outsb
test
push
xchg
je
int
xchg
xchg
das
movsl
ja
movsl
sarl
push
sbb
mov
fcmovnbe
cmp
jp
mov
lret
jae
fsubr
out
sbb
lahf
cmp
mov
pop
mov
add
add
sbb
pop
adc
orb
fldenv
add
push
mov
jnp
xor
mov
jmp
movsb
stos
ljmp
shl
ds
ss
out
cmpsb
xor
pop
mov
jl
fs
loope
and
stos
dec
cs
dec
scas
lret
push
pushl
std
fs
mov
sbbl
jae
leave
xlat
in
stc
pusha
cmp
repz
loopne
mov
fiadds
dec
jmp
jo
xor
pop
push
pop
out
pop
sub
jecxz
data16
mov
iret
xchg
mov
ljmp
test
in
into
mul
xor
negb
int3
adc
and
mov
repnz
ja
in
cmc
icebp
xchg
mov
jecxz
fisttps
sti
enter
and
sub
cwtl
movsb
lea
add
scas
dec
dec
jnp
mov
dec
or
fsubl
fistps
or
or
adc
cmp
stos
inc
dec
repz
inc
mov
sub
add
in
cs
push
dec
mov
lods
jle
dec
into
lcall
add
int
push
mov
xchg
test
add
ljmp
aas
xchg
adcb
dec
in
cli
sub
test
mov
cmp
inc
xchg
in
shl
in
sbbb
outsl
mov
cmp
cmp
adc
out
cmc
test
insb
pusha
out
shrl
add
pop
mov
add
cltd
aas
jno
lret
out
lods
add
roll
lods
arpl
pop
sub
xor
xchg
imul
lcall
mov
cwtl
mov
popf
je
cltd
mov
dec
push
outsb
push
sub
into
sub
leave
pusha
jb
es
inc
and
lds
adc
negl
mov
mov
add
dec
mov
and
cmp
fdivrs
adc
call
sqrtps
mov
aaa
pop
xor
inc
lods
inc
jmp
pop
mov
cmpsl
or
bound
push
adc
shr
mov
mov
subb
bound
lcall
mov
lods
fiadds
pop
fcmovne
xor
rolb
rorb
xor
popf
sbb
test
jnp
xor
rcl
js
clc
imul
pop
or
jmp
adc
xor
push
pushf
cmp
out
push
pop
sahf
xor
loop
cmp
in
cmp
icebp
cmp
add
aas
mov
icebp
lods
iret
pusha
xorb
xor
pop
inc
jns
mov
push
cmc
shlb
das
fdivrp
mulb
jno
fwait
pushf
add
int3
inc
add
dec
jmp
in
inc
clc
xor
hlt
mov
out
cmpsl
aad
sti
jge
in
adc
xor
int3
rorl
add
fldenv
ds
fadds
push
iret
adc
nop
jnp
pop
sbb
jae
in
lods
fdiv
das
dec
or
jno
incl
jge
shlb
push
push
and
popa
pop
push
push
sub
push
push
lds
pop
call
jne
ljmp
mov
push
cmp
nop
lds
scas
int
imul
lahf
mov
insb
sbb
test
imul
inc
xchg
rol
xor
xchg
test
inc
jecxz
pop
sti
mov
fbstp
repz
rolb
iret
rolb
shlb
movb
or
xlat
push
fstl
adc
arpl
jns
xor
testb
mov
out
pop
cmovle
insl
mov
orl
mov
mov
inc
xchg
mov
pop
jb
xchg
mov
not
lea
lcall
sbb
dec
out
xchg
gs
inc
out
inc
xchg
xchg
mov
scas
pop
push
arpl
inc
cmp
popf
out
int3
in
popa
push
mov
sahf
mov
mov
mov
mov
das
out
adc
cmpsb
mov
add
mov
pop
pop
mov
ss
roll
cmp
push
fdivrl
test
pusha
xchg
jno
stc
test
dec
bound
aad
out
mov
cli
jb
xchg
adc
call
scas
push
imull
insb
adc
ds
pop
lret
shlb
or
jle
mov
imul
cmpsl
sub
bnd
aas
bnd
jmp
add
sbbb
pushf
js
rolb
jge
mov
mov
xchg
daa
movsb
cmp
add
mov
iret
adc
out
in
or
jecxz
pop
repnz
pop
out
push
xchg
mov
sbb
pop
test
lret
adc
das
and
sti
push
movsl
xor
push
cwtl
shll
das
push
loope
out
cli
mov
push
call
push
cld
leave
std
mov
in
and
ljmp
fstl
dec
xchg
jbe
xor
mov
fidivrs
dec
in
icebp
jp
js
mov
les
cmp
and
mov
js
xor
movsb
fiaddl
mov
mov
scas
add
negb
les
xchg
pop
cmp
pxor
in
sbb
dec
inc
icebp
fwait
out
mov
dec
jns
pop
cmp
shlb
outsl
jnp
shll
popa
sbb
cmp
dec
cmp
in
sahf
adc
cwtl
xor
fdivrs
sub
cmc
jl
testb
inc
std
pop
movsl
pop
movsl
iret
push
lods
cmp
cmpl
push
add
pop
jg
ljmp
xchg
inc
pop
inc
jns
adc
insb
fs
mov
in
jnp
stos
sbb
mov
iret
and
ret
leave
add
je
push
add
cmc
xchg
dec
lea
inc
stos
dec
ret
imulb
mov
je
scas
xor
and
divl
dec
cmp
jnp
sub
ret
in
dec
sub
jne
jnp
imulb
or
mov
dec
xchg
inc
pop
push
in
adc
xor
insb
pop
mov
in
cwtl
lods
sbb
mov
mov
mov
sub
cmpsb
or
or
les
nop
sub
jbe
mov
cs
sbb
cld
insb
or
pop
mov
arpl
std
cmpb
inc
fs
ret
pop
inc
test
mov
mov
dec
push
or
pop
mov
jo
data16
pushf
popf
pop
data16
lods
loope
cmp
cmpl
stos
jb
cmp
cmp
mov
mov
ficoml
dec
int
sar
iret
mov
cmpsl
insl
jae
or
mov
xor
mov
xchg
xchg
pop
mov
fisttpl
enter
mov
cmpl
jg
mov
jb
pop
or
scas
leave
arpl
jl
jge
sub
ja
sub
gs
mov
mov
push
and
shl
fwait
pop
das
ret
xchg
sbb
mov
das
loop
test
xchg
aam
pop
xchg
push
outsb
rolb
jp
and
jp
sbb
leave
lds
jae
ret
dec
pop
lret
clc
jo
jo
ja,pt
and
mov
lods
adc
adc
call
cltd
test
dec
xor
mov
fistps
dec
aas
ss
shl
ja
imul
shlb
mov
cltd
clc
in
test
cmpsb
xor
inc
jbe
xchg
inc
cltd
xlat
sbb
mov
leave
xchg
dec
or
add
std
dec
sbbl
insb
loopne
cmp
add
cli
pusha
xchg
imul
cmp
loopne
movsb
push
ficoml
hlt
sbb
popa
sub
ds
pop
ja
int3
push
sub
push
jne
or
ds
mov
pop
adc
or
mov
mov
fnstenv
push
sbb
aas
pop
clc
pop
push
cltd
xchg
sahf
mov
inc
mov
push
push
insb
out
lods
jmp
xchg
icebp
sbb
in
and
and
bound
in
add
inc
mov
push
sbb
hlt
cmp
in
std
mov
sbb
mov
stos
mov
loope
mov
pop
pop
subl
cmp
adc
shrb
mov
fisubl
mov
std
mov
and
and
fs
leave
add
jnp
call
or
push
xorb
insb
insl
add
sub
cli
outsl
dec
lock
ret
pusha
push
xor
daa
mov
std
jl
in
mov
mov
pushf
movsl
and
jl
jb
inc
cmp
cmp
add
dec
shrl
call
js
mov
outsb
mov
jl
jnp
mov
out
jp
xor
mov
push
pop
lock
filds
jp
ret
pop
dec
std
scas
pop
mov
mov
mov
bound
cmp
orb
mov
into
jne
push
mov
xorl
mov
cmp
hlt
mov
pop
dec
gs
test
mov
dec
sub
addl
inc
pop
add
jns
movsl
jecxz
enter
inc
jmp
dec
ret
rcll
call
xor
sub
fstpt
dec
mov
sbb
aaa
dec
cmc
cld
xchg
push
xchg
or
shrb
imul
jge
cmc
rolb
das
mov
dec
repnz
fwait
push
popa
scas
nop
negl
inc
adc
std
adc
push
cmp
scas
es
mov
decl
inc
call
or
inc
push
add
mov
sbb
add
and
add
adcb
iret
cmp
std
or
lret
mov
fcmovne
adc
inc
loop
rsqrtps
push
add
ja
fld
repnz
mov
cmp
fisubrl
mov
push
mov
xchg
and
inc
insb
pusha
jbe
insl
adc
ja
mov
push
shl
adc
outsb
sar
movsl
xlat
nop
jecxz
or
fucomip
cld
call
sbb
push
adcl
jnp
cmp
out
mov
pop
je
sbb
testb
or
cli
jle
sub
pop
mov
pop
mov
pop
shrb
push
scas
inc
fucomi
add
repz
fldl
inc
dec
and
sub
mov
out
mov
daa
lods
pop
outsb
out
mov
filds
idivl
or
popf
jmp
mov
mov
addl
mov
push
aam
ss
cltd
add
fstpl
test
inc
nop
rep
jbe
inc
aam
push
popf
inc
out
rcrl
daa
pop
cmp
repnz
add
cmp
in
nop
adcl
ja
inc
in
test
push
out
pop
movsl
mov
mov
add
cmpsb
cmp
sub
test
mov
subl
or
and
shlb
mov
or
xchg
ja
mov
mov
xor
jne
rclb
pop
outsb
jns
or
inc
out
es
std
sub
icebp
push
jmp
and
cmc
repnz
lret
mov
mov
insb
and
push
jmp
jecxz
pop
int
or
sbb
and
data16
adc
xor
mov
jnp
loope
movsb
cmp
enter
les
movsb
and
xchg
mov
push
sbb
cmp
mov
mov
lds
mov
das
adc
and
cmp
lahf
jmp
cmp
test
and
outsb
fildl
test
inc
pop
popa
outsb
jns
scas
call
or
inc
repz
xchg
leave
add
fst
stos
rorb
push
push
cli
and
inc
rolb
aam
or
cld
hlt
dec
xor
adc
outsb
fistl
fstps
ret
inc
cwtl
fiaddl
jecxz
pop
ss
dec
popa
hlt
pop
or
push
adc
jle
push
sbb
repnz
and
scas
dec
adc
addl
cmpsl
sbb
push
and
or
addr16
xchg
in
int3
sub
adc
pop
in
lcall
push
xlat
jno
mov
andl
mov
pushf
imulb
inc
and
lret
bound
and
jecxz
push
cmpsl
jg
leave
pop
mov
cmp
inc
aas
lret
fsub
jae
movsl
mov
pop
lret
sahf
add
pop
nopl
fists
lret
inc
push
push
push
pop
fcmovu
add
outsl
lea
sub
jb
pop
cmp
xchg
int3
fstpt
daa
icebp
popa
adc
into
add
inc
movb
scas
stc
mov
pusha
outsl
lret
pop
jb
repz
push
mov
jns
xchg
cltd
jg
jle
out
jmp
xchg
jge
dec
cmp
pop
push
mov
leave
sbb
mov
out
inc
loope
jecxz
mov
mov
bound
mov
push
cmp
loop
pushf
mov
lret
ret
pop
jp
fbld
xchg
mov
cmp
sub
call
adc
dec
add
dec
and
xchg
sub
negl
stos
mov
cmc
cmpsl
xor
icebp
icebp
push
mov
push
imul
in
loopnew
inc
andl
mov
int3
lds
pop
add
add
fcoml
adc
movsl
rcr
outsl
mov
adc
hlt
pushf
sub
pop
iret
and
stos
push
inc
movsl
adc
mov
outsl
mov
or
movsl
cmp
std
cmc
lcall
movsb
add
cmp
sub
out
bound
addl
out
push
dec
push
xchg
pusha
mov
lea
xchg
out
popf
or
dec
adc
mov
rorb
mov
xchg
xchg
cmp
push
cmpsb
scas
xchg
rolb
movsb
add
cltd
ja
mov
andb
icebp
sarl
adc
mov
dec
and
in
mov
stos
out
and
xchg
pop
xchg
clc
or
inc
cmpsl
mov
jge
cmpb
imul
das
add
sub
dec
jb
cmpl
mov
fxch
sbb
into
out
movsl
mov
mov
aad
dec
in
or
mov
jns
cmp
bound
in
xchg
xchg
bound
adc
aam
dec
ja
in
inc
ret
xor
xchg
cmpl
jae
imul
outsl
test
mov
dec
mov
clc
cmp
pop
mov
pop
sub
push
ficomps
mov
mov
push
ret
inc
loope
ret
idivl
rcrb
shll
lahf
jge
adc
xchg
jb
int3
xchg
xor
xchg
fiadds
mov
les
push
mov
stc
add
jge
rep
xchg
out
les
int3
dec
adc
leave
pop
icebp
sub
test
arpl
insl
push
xchg
or
shl
lods
shll
cmpb
jae
popa
mov
xchg
inc
or
or
fsubrs
mov
sbb
cmpsl
mov
sub
xchg
mov
insb
xor
out
fcom
and
sub
rcrl
repz
xor
adc
add
int
xchg
cld
repnz
mov
sub
popf
add
lock
mov
sbb
mov
ljmp
out
mov
negl
mov
mov
sub
faddp
dec
pop
imul
aad
out
xchg
js
or
push
mov
out
js
call
lahf
inc
mov
xchg
insb
and
and
xchg
inc
push
adc
or
mov
push
movsl
enter
cmp
push
scas
dec
xor
sbb
xchg
mov
flds
inc
call
sbb
popf
imul
sti
jae
test
push
loope
in
out
out
scas
pop
mov
ja
cli
rcr
std
jo
fsubrs
jmp
or
imulb
push
mov
or
and
inc
push
test
inc
mov
das
inc
testl
hlt
icebp
outsl
popa
iret
dec
fisubrs
xchg
and
subl
fmuls
and
in
ret
sbb
sbb
stos
scas
test
or
les
addr16
in
adc
idivl
adc
aad
mov
idiv
xor
cs
psllq
je
sbb
into
and
and
sbb
push
ss
int
cmp
inc
int
bound
faddl
jl
adc
sub
mov
repnz
cmp
daa
xor
lds
test
mov
and
and
push
ljmp
and
mov
sbb
mov
test
fbstp
sbb
jge
pop
mov
sbb
jnp
xlat
push
and
push
rcrb
inc
int3
fcoms
test
lods
dec
aas
push
jmp
pop
and
ja
ffreep
adc
xor
xor
shll
in
rcrl
adc
lods
push
jb
and
sub
es
sti
out
add
stos
xchg
cmpsl
adc
lret
mov
int
jno
xor
dec
arpl
loop
push
loope
xchg
mov
fwait
pavgb
inc
sahf
movsb
test
mov
pop
cwtl
jb
xor
xor
pop
jae
aam
lret
mov
mov
fistpll
add
outsb
jle
inc
imul
hlt
ret
mov
jnp
std
scas
sub
test
pop
pop
idivl
pusha
jb
cmp
xor
and
mov
pop
popf
cltd
stos
sub
sbb
sbb
xchg
mov
jbe
push
add
lahf
ret
or
xchg
dec
push
push
cmp
dec
xor
scas
clc
aaa
pusha
adc
outsb
loop
mov
lret
in
insb
or
jmp
jl
cltd
lcall
daa
orb
xorb
pinsrw
out
rcll
inc
cltd
fwait
into
inc
mov
dec
sub
xor
sub
jns
xchg
scas
fldcw
sub
call
dec
icebp
call
cwtl
in
add
sbb
adc
mov
cs
into
push
shll
js
sub
sub
iret
push
sub
mov
inc
jae
mov
ja
addb
test
and
mov
push
and
aaa
xchg
cmp
shrl
je
lahf
sbb
inc
lods
loop
xor
sub
cmp
test
out
mov
xchg
push
or
inc
and
pop
xlat
mov
dec
or
out
popa
pushf
dec
bound
sbb
insl
adc
pop
jae
movsl
and
inc
push
lock
jg
negb
jp
test
inc
or
leave
or
add
fiadds
insl
sub
daa
lock
dec
and
and
dec
addr16
jmp
lahf
push
mov
gs
mov
sub
js
xchg
lahf
mov
sub
pop
mov
jecxz
fdivrl
cmpsl
cli
adc
je
gs
mov
ffree
push
fistps
scas
push
ror
sub
mov
push
shll
bound
nop
cmp
jmp
sub
and
cmp
pop
lods
jae
sbb
adc
je
and
std
dec
mov
sub
push
push
lds
stc
js
jb
lcall
jle
nop
inc
add
xchg
mov
insl
cmp
and
rol
cmpl
subl
push
mov
cmp
sub
dec
mov
jbe
add
jmp
dec
dec
pop
loope
xchg
mov
pop
jns
sbb
add
add
subps
jae
popa
rcrb
adc
mov
cmp
mov
jp
ret
cmp
xchg
and
pop
jge
les
push
inc
jne
std
push
andl
cmpsl
cmp
les
add
jno
add
dec
fldenv
faddp
mov
xor
and
pop
xchg
dec
test
lahf
sahf
iret
aam
addr16
push
ret
in
mov
push
sbbb
jmpw
inc
xor
jae
xor
add
repz
mov
mov
gs
or
inc
in
xchg
pushf
out
add
xchg
imul
pop
mov
fs
xor
cwtl
popa
xchg
inc
cmp
pop
ss
das
enter
mov
add
test
pop
test
adc
push
mov
cs
add
scas
testb
cld
lods
xor
lahf
add
lret
flds
enter
mov
insl
add
inc
mov
fisubrl
pop
hlt
sbb
mov
cmp
out
pop
arpl
iret
stos
add
jmp
mov
fucomip
xchg
jae
adc
mov
mov
add
dec
nop
out
cmc
jg
push
fs
cwtl
xor
cmp
jbe
rol
test
add
mov
into
inc
xchg
dec
ss
xchg
mov
mov
sarb
push
mov
inc
xor
mov
addr16
mov
pop
jge
fimuls
inc
xchg
pop
iret
push
cmp
sub
stc
aam
ror
push
test
imul
out
decl
sti
push
fdivrp
push
cltd
roll
les
call
gs
mov
pop
push
sbb
pop
add
rolb
pusha
xor
adc
test
mov
pop
and
insb
cmp
jne
xchg
lock
cmp
mov
popf
xchg
ss
loop
loopne
adc
and
shrb
lcall
imul
cmpl
in
pop
adc
cmp
movsl
inc
cmp
ja
dec
test
cmp
mov
push
rcrl
rorb
push
inc
loope,pt
fs
add
filds
or
inc
dec
aaa
cwtl
aam
jmp
pcmpeqw
das
and
repnz
xor
pop
adc
or
adcl
out
jg
ljmp
ljmp
and
adc
adc
shr
push
mov
sbb
cmp
rorb
mov
pop
sub
mov
daa
je
mov
shll
cli
out
sub
adc
jge
xor
andb
cltd
mov
lcall
sbb
scas
movb
lret
pusha
pop
add
jne
sahf
xchg
jge
shll
inc
adc
cmp
addl
add
mov
mov
add
cmp
push
fistpl
shll
xor
das
mov
idivl
repz
decb
jno
ja
pop
xchg
and
cmp
mov
daa
and
mov
mov
mov
push
mov
or
enter
into
stc
les
mov
adc
inc
cmp
xchg
xchg
shlb
in
outsl
jge
mov
int3
pop
adc
sbb
loop
sarl
data16
fs
fcomi
test
push
clc
xchg
mov
test
push
test
movsl
icebp
mov
int3
inc
inc
xor
mov
dec
inc
lcall
xor
ja
lcall
enter
dec
loopne
sub
bound
inc
push
push
ret
sbb
out
ror
pop
or
lods
sub
sbb
test
mov
xchg
scas
push
add
dec
in
xchg
mov
fwait
es
mov
xlat
clc
or
pop
push
scas
iret
sub
repnz
imul
popf
dec
cwtl
fstpl
cli
jb
inc
jnp
mov
lret
and
adc
jmp
jg
das
cs
sub
cltd
lcall
mov
mov
pop
aam
mov
pop
dec
xchg
push
test
nop
xchg
out
xor
jmp
sub
push
inc
fisttpll
sahf
cmp
ss
in
cmp
jecxz
mov
push
popfw
iret
les
xchg
mov
inc
push
sub
sbb
ljmp
bound
xchg
xor
movsb
into
enter
lds
sbb
sbb
dec
push
sarl
pop
ljmp
lods
sub
rcrl
adc
add
mov
rcrl
fcompl
xor
call
dec
or
mov
dec
ret
mov
and
add
ljmp
pusha
scas
lahf
xor
jmp
adc
or
add
scas
pop
movsl
lock
xchg
add
aam
pop
dec
xchg
mov
sbb
jae
mov
movsl
xor
lret
pusha
mov
sub
es
insb
ljmp
ja
scas
and
outsl
xor
aaa
fisttpl
sahf
sub
or
jp
cltd
cmpsl
loope
stos
push
pop
or
add
jae
add
push
movsl
jg
inc
cmp
shrb
inc
mov
jmp
push
out
sub
push
inc
mov
mov
sbb
stos
scas
and
lret
pusha
mov
xchg
and
jle
cmp
jnp
lods
xchg
bound
dec
push
sub
or
mov
lods
and
sbb
mov
mov
xchg
sarb
add
inc
dec
sub
fnstcw
xchg
dec
add
xchg
sub
sbb
lock
call
jne
js
mov
xchg
sub
and
notb
mov
fs
leave
mov
cmp
enter
sub
in
and
add
or
sahf
dec
jle
cmp
inc
and
daa
mov
addr16
idivl
push
daa
mov
cld
sbb
call
fwait
dec
pop
cli
sbb
inc
push
pop
stos
dec
stc
sub
add
scas
mov
scas
outsl
pop
adc
arpl
cmp
outsl
push
push
sti
sub
addl
and
testl
mov
ss
push
dec
fcomp
mov
and
sarl
xlat
xor
add
orl
adc
fldl
mov
inc
sub
int
clc
stos
cmp
ficompl
mov
mov
cmp
cmpb
cmc
sbb
out
jbe
icebp
dec
add
xchg
int
rcll
xor
xor
addb
inc
icebp
jle
aam
sub
lds
pop
and
mov
adc
xchg
sub
sub
adc
mov
jle
lret
leave
xchg
repz
movsb
mov
push
fsubl
jge
rclb
jb
pop
cmp
out
cmp
pop
xchg
shl
loope
cmc
jmp
pusha
push
dec
and
jp
mov
call
enter
xor
xor
int3
in
xor
dec
jb
cli
cmpsl
mov
cmc
adc
mov
xchg
call
xchg
and
dec
dec
fdivr
pop
dec
dec
in
je
cmp
or
bound
je
test
mov
pop
ficoml
aas
addl
inc
add
movsl
hlt
mov
lods
sti
xchg
pop
jecxz
jl
movsl
inc
xchg
xchg
mov
mov
jp
xor
and
push
shrl
fimull
loopne
scas
push
push
mov
mov
add
push
ja
call
jbe
ds
dec
mov
jo
pop
ret
pop
and
inc
jge
les
mov
cmp
and
sub
pop
inc
xor
cwtl
pop
jge
lahf
and
dec
sbb
lods
nop
addr16
lahf
movsl
fcoms
xorb
sub
adc
imul
into
ss
dec
pop
adc
js
ror
loopne
pop
pushf
cltd
adc
enter
ds
and
hlt
push
jl
addr16
out
fildl
push
dec
inc
scas
pop
cmpsb
roll
call
fwait
and
push
shrl
sti
pop
fadd
xor
mov
mov
addb
sahf
stos
scas
add
aad
std
inc
fcmovnb
sbb
scas
inc
fidivl
ficompl
lock
xchg
fsubrl
sahf
jl
jne
je
cmp
pop
dec
cs
sbb
fwait
adc
sarl
les
push
fucomp
pop
adc
xchg
push
jl
mov
sub
sub
out
fs
clc
or
aas
xlat
outsl
sub
lods
cmp
mov
add
es
or
xchg
dec
or
sub
popf
jmp
inc
jge
xchg
sub
push
pop
stos
pop
sub
jnp
lahf
cltd
jns
pop
movsl
fadd
leave
mov
xchg
sub
cwtl
popf
or
push
sbb
fs
aad
and
xor
hlt
fs
pop
push
jg
cmp
sbb
xchg
gs
mov
adc
lock
or
cmpsb
jmp
adc
out
inc
cltd
insl
xor
and
push
xchg
repnz
push
aam
outsl
js
xchg
and
cmpsb
cld
imulb
inc
test
cli
test
mov
xchg
negb
mov
imul
cld
jae
and
jne
int3
push
adc
pop
repz
mov
inc
jbe
movsb
jg
sub
xor
gs
clc
pop
xchg
adc
adc
and
pop
dec
cmp
cmp
les
mov
or
and
xchg
pop
inc
add
and
je
jge
add
xchg
push
addl
unpckhps
enter
cs
inc
inc
pushf
movsb
xor
pop
or
xchg
mov
and
pop
dec
lahf
andl
sbb
in
dec
pop
add
mov
jno
mov
cs
jo
push
dec
push
jnp
xchg
in
loopne
and
or
fwait
jge
fbstp
daa
int
shlb
imul
mov
adc
push
cs
data16
pushf
js
jnp
cltd
subb
or
add
jmp
or
cmp
jle
push
fwait
in
call
testl
inc
outsb
add
in
xchg
pop
scas
jns
jae
pop
adc
lcall
fisttpl
cmp
jae
add
jecxz
cltd
nop
adc
jnp
push
movb
add
in
dec
and
cs
cmpsl
cmpsl
fisubrl
xlat
push
movsl
hlt
sub
push
or
cmpsl
xor
scas
leave
ret
sub
add
mov
add
shll
xchg
inc
and
in
movsl
rclb
ljmp
mov
mov
pop
out
or
pushf
push
mov
outsl
mov
ficoml
inc
in
push
xchg
or
inc
sbb
cmp
jge
call
mov
daa
gs
or
leave
andl
cwtl
hlt
outsb
push
aam
imull
or
enter
pop
lods
xor
sub
mov
adc
fdivrp
test
mov
imul
fimuls
leave
insb
loopne
pushf
hlt
xchg
mov
push
xor
je
in
mov
lret
repnz
cli
dec
adc
daa
scas
loop
fwait
sbb
mov
pop
cwtl
mov
and
xor
leave
adc
cld
mov
hlt
xor
lea
and
out
in
cmp
shl
pushf
lea
aaa
dec
scas
insb
adc
xchg
pop
cmc
add
mov
pushl
pop
push
stc
xor
shlb
add
movsb
mov
xlat
lahf
and
and
pop
popa
test
insl
mov
jg
popf
jae
fdivs
push
adc
xor
lahf
repz
cmp
ss
push
hlt
pop
jnp
or
leave
pop
std
pop
mov
imull
pushf
pop
les
dec
add
add
repz
stos
inc
mov
xchg
lret
mov
inc
and
push
popa
aad
add
xchg
mov
add
adc
add
loope
mov
mov
inc
or
pop
sbb
addb
mov
int3
xchg
mov
xchg
inc
add
fwait
js
add
andl
test
stc
lea
fidivl
xchg
dec
imulb
and
jnp
lcall
jns
les
xlat
outsl
jo
xchg
nop
lahf
xchg
mov
fwait
shrl
add
xor
mov
mov
out
nop
sbb
fs
push
inc
jo
popf
fildl
sbb
push
scas
xchg
cmc
push
add
mov
sub
add
xchg
in
inc
xchg
lret
in
mov
ret
lret
pop
jne
sub
sub
xorl
push
mov
int
pop
mov
jmp
cld
push
sbb
lret
pop
xor
lcall
shlb
fucom
mov
inc
dec
xlat
js
xchg
repz
movsb
inc
test
pop
jns
sub
or
daa
stc
stc
imulb
loopne
pop
jge
inc
cmp
or
lret
mov
xchg
or
fmul
orb
test
mov
pop
adc
int
sbb
push
or
in
pop
aaa
cmp
jno
mov
mov
and
dec
inc
push
jecxz
enter
loope
mov
jnp
sbb
xchg
shl
jo
clc
dec
imull
add
cmc
outsb
xorl
cmp
fcomi
xlat
or
push
cli
adc
push
pop
pop
adc
inc
xchg
lret
sbb
pop
add
cwtl
ljmp
roll
push
insb
ficompl
je
out
sbb
or
dec
out
mov
cmp
pop
adc
and
ficomps
in
xchg
dec
popf
mov
push
pop
dec
sbb
rcl
push
xor
and
dec
jl
add
jnp
sbb
dec
int
test
stc
add
mov
adc
in
ficoms
sub
xor
scas
xchg
cli
orl
lcall
imul
jae
cmp
icebp
ret
aaa
pop
lods
es
addr16
out
cwtl
cmpb
cmp
or
mov
xchg
loop
jno
jmp
dec
or
aaa
les
or
push
cli
sub
dec
adc
mov
lea
jmp
adc
mov
data16
insl
cmp
cs
fdivl
jb
lret
jnp
cmp
xor
loopne
cmp
les
ret
aad
aas
mov
je
xchg
or
sub
lcall
shll
iret
fsubl
pusha
lahf
xchg
sahf
dec
data16
adc
imul
add
daa
mov
mov
arpl
cmp
pop
push
mov
sbb
out
int3
iret
mov
lea
xchg
xchg
stos
mov
pop
mov
movsb
sahf
sbb
xchg
cli
outsl
scas
and
fsubrs
sbb
pcmpeqw
fists
push
inc
scas
fs
sbb
push
icebp
xor
dec
imul
scas
daa
push
pop
pop
cmpsl
imul
popa
dec
add
mov
xchg
cmp
jmp
pop
pop
push
mov
push
mov
xchg
test
mov
scas
jg
leave
lcall
mov
pusha
sbbl
or
xor
mov
xor
sbb
popa
lock
push
mov
fildl
push
fldl
xor
in
pop
jp
mov
leave
fs
dec
cmp
imul
cmpsb
mov
xor
xlat
pop
mov
or
xor
or
push
out
rcrl
sbb
pop
xchg
push
jb
xor
ficompl
push
mov
imul
divb
jo
je
jg
cmp
xor
push
sbb
add
inc
loopne
lods
pop
ds
pusha
inc
push
push
and
pop
mov
nop
inc
dec
jb
mov
repnz
jl
data16
xchg
adc
lcall
in
lock
mov
or
cmp
notb
push
dec
sti
incb
loopne
cli
sub
add
xchg
adc
jmp
dec
push
inc
mov
movsb
addr16
ret
cmpsl
adc
pop
les
cltd
add
cmovl
push
ja
push
ret
pop
and
movsb
and
setnp
sbbb
gs
into
out
push
or
mov
loope
xor
and
sti
loopne
ljmp
push
pop
xchg
pop
jl
inc
push
sbb
fldl
jmp
sbb
jae
sarb
dec
ret
jo
mov
push
mov
jb
fistpl
lods
das
sbb
pop
or
push
mov
dec
enter
mov
jns
cmp
rorb
int3
lods
adc
inc
xor
scas
bound
mov
stc
add
mov
push
out
and
sbb
lcall
lcall
xor
mov
loope
sub
inc
adc
sub
jge
jecxz
addr16
getsec
sub
hlt
pop
scas
lret
jle
xchg
movsb
or
sub
cmpb
inc
js
jmp
addb
adc
gs
mov
mov
or
cmpsb
pop
insb
sbb
mov
int3
std
ret
icebp
flds
repnz
or
cmp
sahf
scas
mov
fwait
outsl
jbe
jo
pop
imul
jmp
sbb
into
out
adc
cmovnp
add
cmp
pop
hlt
hlt
pop
adc
mov
push
add
data16
xchg
inc
out
cltd
cmpsl
aad
jl
arpl
loopne
push
inc
repz
das
int
in
fmuls
imul
cmc
push
push
mov
imul
filds
push
out
mov
shr
cmpsb
sbb
popa
xchg
into
dec
rcll
test
fdivrs
inc
in
dec
std
push
cli
jp
push
inc
nop
jbe
loopne
rolb
cwtl
cmc
mov
lret
cli
xor
jno
rclb
dec
loop
sbb
ss
xor
jo
hlt
dec
mov
pop
addb
push
xchg
cmp
lahf
scas
shr
cld
push
xorb
mov
jle
xorb
mov
cmp
add
mov
xchg
xchg
stc
inc
xchg
movsl
ficompl
mov
push
mov
push
add
outsl
adc
xchg
and
es
stos
xchg
sarl
ret
pop
decl
in
pop
jo
push
insl
mov
and
sub
fs
mov
mov
jb
decb
inc
jg
push
call
rclb
cli
push
pop
aaa
jae
lea
js
jg
push
mov
leave
ljmp
rcr
inc
in
test
imul
in
xor
mov
fisttps
lds
xlat
cmpb
out
mov
jns
enter
frstor
insl
push
mov
jmp
add
mov
lea
sub
push
in
pushf
cmp
add
iret
dec
xor
aam
ret
add
push
mov
inc
adc
mov
in
jo
jns
call
fidivl
cli
int3
jno
es
icebp
aam
xchg
int3
mov
lret
cmp
push
or
data16
sti
ret
sub
int3
ret
push
lret
jle
xor
stos
mov
aaa
leave
fdivl
rcrl
jnp
xchg
adcl
daa
mov
xor
adc
mov
inc
je
andb
js
icebp
or
inc
test
inc
pop
sub
cmp
dec
daa
jge
into
stos
fldcw
jle
fmuls
jno
iret
cs
and
cmp
shll
adc
scas
inc
sbb
out
push
popa
and
lock
xchg
ds
and
jb
lods
push
clc
std
addl
rcr
popf
push
and
shlb
mov
xchg
aaa
add
arpl
pop
push
test
mov
cltd
insl
sbb
push
imulb
nop
and
push
jne
int
inc
or
out
and
or
mov
out
xlat
jae
adc
cwtl
push
lock
shll
mov
push
flds
jb
or
hlt
sbb
cmp
pusha
xor
les
push
scas
por
xor
out
sub
xchg
cmp
xor
and
fisubrl
lret
lea
sbb
mov
jnp
sub
pop
out
jne
and
int
pop
fsubrl
xchg
addb
and
repnz
jbe
mov
and
cli
cld
aas
pop
sub
fs
popf
jbe
scas
addr16
fdivrl
rclb
leave
sub
xor
and
mov
ja
repnz
xchg
xchg
pop
out
shrb
lret
xor
ret
jmp
cmp
aad
or
add
cli
mov
or
jmp
fistpll
mov
subb
pop
hlt
mov
scas
mov
rorl
pushf
shll
inc
mov
jg
shrl
xchg
shrb
mov
mov
mov
testl
jmp
and
fstpt
mov
fdivrl
and
ljmp
stos
repnz
je
dec
subb
mov
adc
ljmp
in
cmpsb
mov
vpmullw
sub
sub
jnp
in
shrb
in
in
xchg
fildll
jne
adc
imul
outsb
dec
cmpsb
je
das
sub
xchg
dec
xor
sub
int
adc
xor
or
fcomp
mov
mov
pop
or
movsbl
push
jl
or
out
xor
inc
ds
dec
in
and
sti
push
jecxz
pop
sbb
fstpt
lock
and
hlt
pop
or
rep
adcl
add
pop
mov
test
or
jnp
scas
popa
jle
pop
out
mov
mov
jecxz
mov
mov
sbb
adc
jnp
dec
push
sbb
push
or
add
add
in
out
sbb
enter
add
insb
pop
mov
xor
adc
cmp
xchg
sbb
sub
pop
flds
inc
aam
adc
jno
shlb
add
in
ja
push
out
lock
sbb
fcmovnu
ljmp
paddusw
pop
test
and
dec
mov
sbb
inc
jne
hlt
pop
mov
push
dec
sub
flds
in
pop
pop
lods
fucomi
cmp
cwtl
icebp
pop
mov
stos
and
ficompl
dec
xorl
xor
cwtl
adc
loop
mov
sub
cltd
je
fwait
repz
aad
pop
and
es
mov
fnstsw
lahf
lcall
xchg
lds
std
adc
in
and
clc
aas
aad
outsl
cmpsb
jnp
mov
in
cmp
sbb
or
sbb
mov
add
dec
idiv
push
out
repnz
mov
std
adc
pop
dec
mov
inc
push
pop
fwait
xchg
cmp
mov
icebp
or
mov
pop
mov
pop
scas
xchg
out
jge
cmp
xor
call
mov
popf
jb
mov
mov
std
pop
loope
or
stos
adc
aam
mov
jb
cmpsl
aaa
xchg
lods
jno
add
inc
enter
aaa
dec
adc
xchg
and
fldenv
xchg
test
xor
jl
inc
inc
imul
pop
testl
push
push
lret
mov
ds
inc
mov
clc
rcrl
out
loop
lcall
cmp
lret
mov
cs
xchg
scas
dec
or
in
sub
cmp
push
pop
icebp
sahf
mov
in
bnd
pop
outsb
aaa
push
fs
mov
xchg
add
imul
cmc
imul
push
icebp
xchg
and
pop
test
fs
and
into
cs
ds
in
xchg
cld
sbb
add
mov
repnz
pop
mov
xchg
dec
jge
adc
mov
icebp
fmull
aam
test
movsb
sbb
mov
fs
icebp
push
mov
or
xor
and
xchg
add
mov
mull
addr16
inc
ja
ss
add
sbb
int
push
jbe
ss
fwait
pop
sbb
xchg
insl
inc
fistpl
push
cmp
movsb
roll
xor
hlt
loop
jns
push
aas
push
adc
out
out
pop
out
in
sub
inc
ja
pop
jmp
cmpb
inc
out
adc
xchg
ljmp
lret
xor
sub
mov
mov
dec
jl
jo
and
cli
inc
xchg
pop
ss
dec
cmovae
jbe
fmuls
sub
and
ljmp
jae
pop
shr
subb
inc
sti
cmp
int3
and
imul
inc
xlat
mov
cmpsl
repz
inc
stos
push
shll
lret
cs
mov
icebp
mov
push
pop
aaa
cld
imul
sbb
fdivrl
ja
add
sbb
sbb
testb
lds
and
push
ja
ja
add
or
in
fldl
dec
dec
sbb
icebp
into
add
and
clc
and
xchg
jle
loop
inc
inc
lcall
dec
adc
jno
stc
mov
ss
in
fmul
imul
mov
sbb
mov
les
mov
shrl
sti
push
jno
ficompl
jg
pop
pop
in
jmp
jae
xchg
push
rcl
and
arpl
or
mov
jp
or
push
in
stos
decl
xor
in
mov
jo
inc
int3
rcr
adc
cld
int3
loope,pn
lock
cmp
pop
fwait
decb
push
dec
nop
push
das
popa
or
cwtl
sub
push
dec
mov
jbe
xchg
pop
int
xlat
or
add
push
adc
sub
stos
in
mov
movsb
lods
out
bnd
inc
pop
cli
lcall
das
rcll
jae
adc
lcall
mov
js
dec
xchg
fbld
les
rorb
cli
mov
jecxz
fimuls
push
push
popf
scas
ftst
int3
cmp
sahf
mov
jg
jbe
inc
insb
mov
mov
fmuls
xchg
mov
adc
mov
dec
and
aam
xchg
or
push
inc
jo
inc
out
adc
movsl
cli
aam
jo
pop
jmp
lahf
lahf
and
push
clc
sbb
push
adc
lods
scas
push
test
adc
cltd
sahf
jbe
jecxz
and
fidivrs
pop
out
clc
imul
aam
pushf
pop
test
arpl
fcmovnb
or
outsb
jl
outsb
xor
sub
xchg
adc
push
aaa
lods
and
jo
adc
icebp
push
jns
sarl
popa
daa
scas
push
add
popa
xchg
lds
lea
xchg
lods
xchg
jge
stos
inc
test
dec
imul
lea
mov
test
mov
pop
jmp
pop
mov
mov
pop
pop
nop
std
inc
lock
sub
dec
lds
popf
adcb
fisttps
pop
xor
pop
rorb
cli
and
ret
push
lods
rol
or
cmp
call
jle
dec
sahf
pop
mov
mov
je
stc
pushf
and
sub
into
xor
add
fbstp
aad
ljmp
mov
fsubp
or
jp
bound
adc
outsl
xor
stos
cmc
push
adc
stc
cmp
incb
and
imul
mov
mov
outsl
jne
adc
in
cmc
jae
movsb
loopne
std
jne
sti
sbb
scas
jbe
xchg
out
ljmp
xchg
es
fldenv
stos
jae
dec
and
js
clc
sub
xchg
sub
jp
mov
jne
test
popa
cwtl
fcmovnu
mov
pusha
dec
sub
pusha
lcall
data16
loope
ss
aas
fwait
and
hlt
lret
xchg
movsb
lds
sub
repnz
sahf
mov
pop
inc
xchg
and
test
addr16
sbb
mov
cmp
inc
in
out
in
sbb
popf
gs
rcrb
jl
mov
fidivrs
jne
jbe
mov
pop
xor
mov
push
push
add
dec
mov
jecxz
mov
cld
inc
dec
jle
mov
je
jmp
pusha
scas
sbb
in
xchg
adc
hlt
dec
setle
add
iret
ret
in
cltd
adc
mov
cli
aam
stos
mov
sub
subl
adc
ljmp
jnp
push
inc
mov
sub
pop
outsl
jmp
mov
repnz
lock
ljmp
xchg
pop
int3
add
mov
push
cmp
xor
mov
mov
aas
in
ret
or
shl
lret
ficoms
add
sub
cmp
xor
dec
into
xorb
add
xor
cmp
and
and
imul
stc
fdivrl
mov
xor
sub
cmp
add
orl
dec
clc
mov
movsl
stos
subb
xchg
push
xchg
mov
and
es
ds
cmp
les
cli
jo
enter
ret
push
jmp
stos
lds
or
cltd
or
into
popf
inc
push
mov
test
sub
push
sub
pop
push
and
testb
int
push
jno
movsb
mov
inc
xchg
push
cwtl
add
std
sbb
push
loop
pop
movsb
lods
fs
hlt
or
add
fdivs
jle
loope
xor
ds
jb
jo
mov
inc
push
mov
cmp
gs
pusha
das
sub
sbb
and
push
xchg
insl
and
test
push
dec
dec
dec
int
mov
inc
push
mov
mov
cmpl
mov
ds
subl
dec
sub
or
mov
push
leave
std
sub
push
aaa
cmp
and
aaa
adc
sub
lret
sahf
lods
xchg
incb
mov
inc
push
andb
mov
add
xor
cmp
mov
aad
adc
mov
icebp
pop
push
or
jmp
push
pmaxub
jns
mov
and
imul
lahf
hlt
xor
pop
lock
nop
into
clc
mov
cmp
shll
jne
nop
sub
addr16
andb
and
jo
jnp
dec
jge
push
test
les
loop
push
and
arpl
outsb
sahf
push
popa
push
push
cmp
es
loop
inc
dec
ret
bound
adc
test
std
mov
add
arpl
rol
ljmp
seta
mov
ret
cmpsl
inc
cmp
mov
xchg
daa
fwait
push
xor
add
lret
ss
fisttps
jae
adc
incl
mov
std
xchg
ja
lods
xchg
ret
iret
sub
test
xor
les
jnp
cmpsl
pusha
mov
lcall
mulb
stos
fnstsw
jge
cltd
mov
push
gs
fdivl
sbb
sbbb
aas
pop
xchg
into
push
movsl
stos
mov
lahf
mov
into
inc
lahf
fidivrs
sbb
mov
jae
inc
sbb
inc
gs
mov
insb
andb
xchg
push
jne
sti
aaa
mov
mov
outsb
xchg
fcoms
sbb
inc
mov
rcll
jbe
xor
push
fsubrl
out
push
mov
pop
sub
push
pop
cmp
imul
and
cmpsb
sub
jl
nop
frstor
mov
inc
pop
pop
lahf
xor
stc
das
lcall
dec
inc
adc
imul
or
jno
mov
jb
fcoml
ljmp
xor
mov
frstpm(287
sub
mov
or
fidivs
xor
pop
lds
jge,pn
lret
ficoml
cwtl
push
lds
xchg
dec
aam
mov
jmp
rolb
add
xchg
lahf
mov
popa
dec
int3
icebp
repnz
jbe
inc
mov
jmp
push
int
das
cmp
cmp
dec
neg
jo
aas
inc
cs
repz
xor
add
mov
aas
mov
and
jno
loope
daa
std
mov
mov
imul
imul
es
and
fsubrl
notb
into
xor
or
lods
xor
pop
outsb
js
sbb
es
push
push
sub
sbb
into
adc
outsl
mov
scas
xor
sbb
jbe
sub
mov
lock
and
outsb
push
outsb
daa
mov
cmp
test
xor
fsubrp
dec
add
or
icebp
pop
dec
xchg
cmp
jl
adc
jae
mov
and
cltd
adc
cmp
loope
lea
stos
pop
imul
mov
push
aad
mov
cld
aas
in
ja
xchg
mov
push
idivb
lret
xor
jns
pop
mov
push
pop
push
repz
sub
xchg
push
jecxz
jno
xor
xchg
jnp
jae
ret
dec
xor
push
xor
push
mov
pop
js
sbb
aad
shr
jno
mov
xchg
sub
cltd
xlat
popf
js
lods
pusha
ja
cmc
inc
push
pop
popf
mull
cltd
adc
cmc
bound
daa
pmuludq
daa
xchg
sahf
enter
int3
ss
sti
shlb
fildl
pop
das
adc
mov
push
cld
out
in
mov
int3
daa
xor
stc
stc
mov
cli
test
mov
and
mov
mov
adcl
jb
mov
sbb
andb
jle
sub
stos
fstps
mov
fnstcw
push
fs
mov
add
xchg
sbb
scas
addr16
fstpt
aam
jb
lret
jp
inc
loop
xor
sub
repz
mov
stos
ret
xchg
add
or
in
addl
ljmp
imulb
push
pop
add
leave
push
or
scas
out
test
push
in
andl
bound
je
dec
das
cmpsb
mov
adc
mov
pop
mov
iret
xchg
loope
pushf
je
mov
jecxz
pop
ret
movsb
fimuls
xchg
mov
lds
insb
mov
jl
enter
add
inc
insb
cmp
test
lcall
xchg
loope
xchg
daa
pop
pop
cwtl
into
mov
std
ds
push
pop
into
gs
aaa
mov
lock
pusha
xchg
dec
popf
inc
mov
jnp
fs
mov
inc
cmp
fadds
iret
mov
lods
mov
mov
aaa
mov
or
andl
cmp
aaa
xorl
mov
mov
loopne
or
sub
xor
popa
aad
cltd
sub
xchg
in
aas
test
mov
mov
or
jle
sub
test
insl
xor
stc
xor
xchg
stos
mov
fsubrl
push
inc
cmp
inc
js
roll
inc
int
fidivs
outsl
dec
rcrb
xchg
pop
movsl
divps
cmpsb
cmpsl
jno
rcll
cmp
pop
or
outsl
mov
mov
arpl
cltd
cltd
push
jbe
out
std
mov
push
sub
fimull
xchg
cmp
daa
sub
ljmp
cmp
loop
pop
mov
sub
xlat
leave
add
pusha
mov
sbb
and
mov
lods
enter
ret
ret
adc
or
out
testb
pop
in
gs
setl
test
ds
repz
arpl
fndisi(8087
fcmovnbe
aas
adc
aaa
lds
nop
scas
mov
xchg
and
out
cmpl
jo
dec
addr16
pop
ret
and
icebp
inc
push
fcmovne
xor
popf
push
sbb
rcl
xchg
push
mov
push
push
mov
fdivp
outsl
push
fldl
mov
jecxz
sbb
push
fwait
push
das
mull
mov
jb
mov
push
dec
xor
add
mov
add
inc
inc
fadd
add
lcall
enter
test
mov
in
xor
mov
pop
sbb
insl
jo
loopne
fistl
xor
or
push
add
test
mov
daa
inc
push
mov
and
movsl
out
adc
scas
cmpb
orl
je
mov
adc
sarl
aas
aad
xchg
popa
nop
push
xlat
and
push
dec
inc
subl
jmp
sbb
xor
ret
out
xchg
xchg
adc
popf
pop
pop
les
mov
rcl
out
loope
lret
aad
mov
mov
movsl
cmp
scas
adc
sbb
sarb
fadds
lea
push
add
pop
scas
cmp
xchg
stos
mov
mov
and
notb
fcomps
cmp
jmp
roll
pop
push
negb
sub
jno
ja
loop
fbstp
mov
loope
dec
imul
insl
arpl
daa
mov
sbb
cmp
xchg
inc
jnp
nop
es
fldcw
add
fisttpl
adc
pop
fiaddl
cwtl
addl
jne
pop
jns
add
addr16
inc
cld
pop
xchg
add
clc
imul
filds
inc
xchg
fldt
cltd
or
testb
sti
and
mov
jns
insl
push
add
mov
pop
or
mov
push
mov
dec
xor
in
push
js
xor
mov
insl
out
cmp
mov
cmp
push
dec
xchg
fwait
in
repnz
iret
das
sbb
pop
fldenv
repz
in
notl
inc
ror
xchg
jo
in
sbb
xchg
push
pop
xchg
dec
leave
mov
iret
mov
lahf
cmp
popa
dec
enter
push
push
pushf
inc
test
fnstenv
push
xchg
or
jecxz
fcoms
add
add
sbb
xchg
push
into
insl
mov
push
fsincos
mov
sub
dec
xor
mov
inc
mov
lret
pop
clc
mov
test
xor
outsb
inc
fnop
repnz
sbb
mov
fisubs
dec
nop
push
out
push
push
jb
enter
cmp
loopne
out
cmpb
gs
push
inc
cwtl
jl
lea
adc
pushf
mov
mov
cmpsb
sub
mov
mov
sub
cmc
rcrb
mov
fwait
insl
inc
mov
test
sbb
jbe
jl
outsl
in
add
jp
dec
fisttps
popa
dec
xchg
insl
test
xchg
sbb
in
xchg
xchg
scas
ds
mov
das
sbb
push
popa
stos
cli
fildll
mov
add
and
adc
mov
pop
cmp
adc
mov
xor
repz
stos
push
in
or
les
mov
sti
and
sti
jnp
pop
mov
pop
xor
ja
aas
int
aas
gs
xchg
sahf
cmp
mov
sbb
addr16
xor
and
call
in
fisubrl
idivb
push
jecxz
mov
test
arpl
cmp
into
mov
pusha
orl
mov
mov
sbb
mov
repnz
mov
xchg
pushl
xchg
sahf
popa
push
pop
jmp
movsl
xchg
sbb
sub
test
cmp
xor
mov
call
sub
xor
cmp
dec
sbb
int
or
lods
lds
aad
clc
enter
jmp
clc
sub
imul
test
lret
movsb
mov
jno
loope
loopne
pop
loop
or
pop
pop
lahf
jns
sbb
mov
in
sub
pop
mov
pop
mulb
movsl
mov
or
xchg
push
cld
push
jb
mov
sbb
mov
out
push
ret
mov
shll
sub
out
xchg
cmpsl
lcall
xlat
cmp
xor
mov
xchg
sbb
roll
test
shlb
dec
call
push
out
xchg
enter
stos
mov
xor
scas
jb
dec
push
aam
mov
mov
pop
mov
pop
adc
add
aaa
dec
sbb
test
jle
data16
mov
pop
inc
in
dec
pop
cmp
dec
insl
mov
sbb
or
aad
test
out
out
jle
and
xor
ret
dec
ret
mov
jne
mov
xorl
xchg
pop
cmp
stos
jl
adc
dec
jge
cltd
les
or
or
mov
lods
mov
xor
fsubr
pop
cli
xchg
sub
lahf
les
inc
mov
sbb
pop
test
sbb
fistpll
and
jnp
hlt
sysret
dec
mov
repz
std
pop
xchg
leave
mov
mov
dec
xchg
pop
xor
mov
in
test
mulb
jb
test
cmpsb
fildll
jmp
into
mov
or
ljmp
and
dec
sbb
inc
push
addl
dec
bound
lcall
clc
xchg
jecxz
das
xor
jle
outsb
mov
lret
jge
shlb
test
scas
pop
pop
jle
mov
movl
subl
push
inc
pop
inc
test
mov
nop
lds
fldl2t
pushf
setbe
arpl
cmpsb
data16
sub
nop
cli
dec
mov
add
sbb
arpl
mov
xor
or
std
add
xchg
stc
pop
stc
rolb
dec
shll
lret
dec
push
sbb
jmp
push
and
cmp
pop
lahf
push
inc
lds
push
adc
loop
jmp
push
je
mov
pop
sbb
or
into
sub
push
insl
ja
mov
pusha
sti
leave
inc
mov
pushf
mov
push
dec
test
and
inc
inc
scas
aad
adc
push
enter
cld
fadds
cvttps2pi
cmp
test
add
mov
imul
int
and
or
pop
and
or
push
mov
mov
movsl
nop
pop
bound
cli
jo
js
pop
icebp
pushf
sbb
add
sbb
inc
mov
rclb
rorl
cmp
rol
bound
arpl
and
jge
mov
sbb
out
call
push
shl
push
in
into
cmp
gs
mov
xor
xlat
adc
out
subb
test
sub
mov
dec
movsb
ljmp
xchg
fmuls
push
shlb
cli
loope
sbb
ficoms
in
pop
cld
xchg
mov
push
mov
cmp
cmp
jmp
bound
shrl
jle
cmp
arpl
stos
loop
xor
fmuls
sbb
andb
pop
call
lods
sbb
mov
icebp
mov
cmp
add
xchg
mov
test
test
xchg
adc
dec
sbb
test
mov
mov
xchg
out
and
xor
xchg
stos
jbe
adc
scas
js
pop
and
sbb
xchg
loopne
dec
dec
imul
xlat
cmp
in
xor
xchg
hlt
jmp
repz
inc
adc
ss
mov
xchg
jle
adc
and
ficomps
or
mov
adc
and
sbb
jg
xchg
loope
mov
cwtl
push
and
sub
add
gs
lea
xchg
pop
mov
icebp
dec
sbb
sub
pop
addr16
into
lret
xor
mov
inc
sbb
mov
shrl
mov
dec
std
fistpll
call
mov
mov
insl
dec
arpl
gs
int
out
mov
aaa
inc
cmpsl
das
scas
dec
xor
ds
xor
mov
lods
add
cmp
xchg
jmp
jnp
mov
sbb
add
pushf
lret
cmp
and
mov
cmc
mov
xchg
leave
popa
insb
add
dec
dec
and
adc
daa
loop
push
or
cmpsb
ja
fs
push
outsb
fsubrl
loop
xchg
call
in
iret
adcb
xchg
sbb
mov
out
push
ja
in
push
pop
mov
add
test
jno
aas
inc
mov
test
ja
lods
mov
push
ljmp
push
int
aam
dec
movsl
xchg
movsb
xor
mov
cmc
sub
push
stc
mov
sbb
sti
adc
imul
stos
add
or
mov
sti
dec
mov
and
xchg
stos
scas
mov
xlat
cmp
sbbb
addb
into
mov
cmp
cmpsb
nop
aad
mov
cmp
adc
jge
mov
cwtl
dec
js
inc
or
xchg
popf
mov
adc
push
push
jge
mov
or
fcmovb
test
push
or
push
bound
cwtl
dec
xchg
dec
and
test
sahf
pop
lods
sahf
aad
pushf
mov
faddl
bound
hlt
sbb
lret
mov
dec
lds
adc
mov
mov
xchg
or
mov
lods
add
repz
dec
pop
adcl
or
addl
fwait
mov
cmpsb
add
push
mov
mov
pusha
cld
enter
fnstenv
jae
xchg
aas
add
outsl
test
cli
xchg
mov
dec
dec
outsb
sub
sbbl
sub
or
inc
adc
rcr
outsl
adc
insl
pop
pop
pop
jbe
jnp
sub
or
xor
rcrb
gs
jno
cmp
fwait
test
xlat
sahf
or
or
mov
cmpl
repnz
xor
ret
das
and
inc
mov
cmc
xor
pop
xchg
insl
xchg
pop
cs
lods
imul
xor
mov
test
push
dec
push
pop
icebp
sub
arpl
sub
jp
clc
mov
nop
mov
jne
ja
inc
pop
mov
fistps
pop
and
dec
mov
dec
push
push
out
cmpsl
xorb
hlt
mov
cwtl
cwtl
mov
sub
adc
inc
xor
popa
movb
cmp
repz
jle
outsl
push
cmp
data16
jle
pop
inc
enter
pop
out
cmp
ror
mov
pop
cmp
in
lods
lret
xchg
dec
ficoms
ficomps
or
shr
dec
and
jo
in
cmp
fsubl
cld
mov
mov
ljmp
sbb
pop
popa
sub
mov
cmp
push
das
iret
inc
mov
jno
andl
iret
jp,pn
inc
lods
jmp
xor
pushf
xchg
test
std
xor
jle
into
ja
xor
in
mov
ss
rol
xchg
and
and
mov
jle
std
pop
ror
lock
pop
sub
rclb
inc
lea
cmpsb
or
sbb
out
dec
adc
fwait
and
pop
fistpll
call
ret
pop
ret
xchg
enter
inc
xchg
mov
popf
sub
lret
add
inc
or
xlat
fwait
je
inc
outsl
adc
repnz
mov
or
mov
fimull
outsl
aas
in
push
cmc
sbb
icebp
cmc
xchg
pushf
sub
mov
mov
sub
cltd
xchg
and
add
push
cltd
mov
testl
loop
push
mov
loopne
dec
pop
lret
cli
and
iret
jecxz
xchg
mov
push
pop
push
addb
imul
mov
mov
pop
out
pop
xlat
or
insb
push
std
pop
ffree
call
mov
mov
test
mov
scas
pop
test
imul
mov
inc
push
sbb
cmc
mov
mov
rol
jnp
xchg
fstpt
mov
ss
sub
scas
fcomip
bound
and
mov
jmp
push
in
sbb
dec
cmp
pop
insb
xor
into
push
jecxz
xchg
jne
rol
mov
daa
ret
xor
xchg
cmp
mov
mov
imul
rcrb
mov
int3
jg
test
sub
mov
add
jne
cmc
mov
sub
dec
pop
gs
mov
mov
pop
pop
icebp
cmp
js
mov
iret
out
stos
push
pop
xorl
jo
add
inc
sub
pop
and
jg
push
inc
cwtl
aaa
mov
test
mov
pop
lret
jne
mov
out
aad
adc
dec
mov
sti
jno
fnstcw
dec
insl
mov
push
sbb
loop
adc
add
sahf
rcl
ss
addl
aad
outsl
test
dec
mov
xchg
popa
cld
outsb
jno
mov
mov
insb
xchg
mov
es
lret
lret
xchg
xchg
cmp
mov
cmpsb
add
cmpsb
repz
lods
add
idivl
dec
mov
inc
loop
fdivs
mov
mov
jg
outsl
in
addl
fisttpl
jne
adc
mov
jecxz
sub
ds
imul
sub
pop
sub
xchg
cmp
insb
lahf
addr16
inc
or
add
xor
mov
jns
ret
pop
repnz
sbb
shrl
lock
fwait
rorb
cmp
stos
xchg
sub
es
xchg
add
rcrb
xchg
mov
testl
lahf
popf
dec
inc
std
jbe
inc
test
jno
lods
push
out
or
out
mov
adc
scas
mov
into
ret
mov
je
repz
mov
add
lods
mov
mov
dec
test
fwait
dec
inc
loop
and
ret
push
cld
ja
xor
sarb
loopne
pop
pop
inc
and
pop
sbb
pushf
and
adc
gs
ds
xchg
sub
insb
aas
bound
jne
and
es
orl
daa
xor
ljmp
insb
mov
in
orl
in
xchg
in
rorb
adc
jb
sbb
push
sbb
sub
mov
xchg
adc
cmp
addb
loope
mov
sti
cs
orb
lret
and
xchg
push
lret
enter
or
cmpsb
js
fwait
and
cmp
inc
mov
sbb
std
and
lock
cmp
inc
imul
or
stos
pop
push
cmc
icebp
fcom
in
out
xor
gs
movsl
mov
xor
int
mov
daa
xor
std
stc
mov
adc
and
imul
stc
aaa
data16
push
mov
mov
mov
sub
shrl
inc
fistpll
cmp
pop
and
movsb
pop
xor
testl
pop
push
mov
cmp
jl
mov
popa
sbb
jo
cmc
xchg
xor
mov
out
mov
fstps
inc
pop
test
test
out
mov
xor
jb
and
pop
sbb
or
out
dec
ret
and
pop
sub
or
data16
jmp
or
sbb
cmpsl
and
ret
dec
mov
pop
outsb
je
or
popa
je
sub
adc
aaa
inc
nop
into
push
and
xor
shll
cmp
push
inc
fs
push
mov
xlat
jp
inc
push
fstp
ss
int
xchg
rcrb
mov
sub
out
mov
mov
lods
movsb
push
loope
jge
sub
push
jecxz
mov
jmp
arpl
and
cli
inc
cmp
nop
jl
dec
jmp
nop
mov
inc
insl
mov
or
push
add
mov
cmp
ficoms
shlb
addr16
sub
or
cmc
mov
lcall
in
adc
pop
xor
push
into
test
rcrl
test
push
inc
xorl
test
repz
add
fsts
xor
dec
aas
inc
fldcw
mov
aam
popf
ficoms
dec
adc
xor
cld
movl
dec
insb
test
pop
push
out
add
fidivs
popa
cmp
fsubrl
cmp
inc
xchg
or
ret
sub
cmc
out
lcall
data16
aad
jmp
outsl
add
lahf
mov
fcoms
in
jne
dec
sahf
lds
jb
in
sarl
cli
sub
jb
sbb
jg
xor
mov
stos
pop
mov
pop
out
loope
push
add
and
dec
lea
jo
pop
dec
jo
push
add
test
and
cmp
mov
push
rorb
gs
jmp
push
inc
xchg
mov
mov
inc
std
sti
push
je
popf
mov
test
movsl
cs
mull
sub
filds
shll
mov
mov
fucomp
adc
or
aam
add
mov
xchg
sahf
sub
inc
sub
xchg
push
orb
cmpb
outsl
std
mov
mov
jmp
mov
sub
ficompl
add
mov
sti
aad
mov
fstpl
lds
mov
sbb
dec
stos
jge
ljmp
mov
and
dec
push
dec
outsb
pop
arpl
es
push
loop
out
movsb
dec
in
mov
loopne
hlt
lods
ficomps
add
mov
cld
push
and
stc
xchg
leave
add
into
push
repz
pop
push
mulb
push
pop
nop
mov
jmp
outsb
mov
mov
pop
xor
jge
and
adc
fdivs
lret
sub
es
insl
pop
push
and
push
lock
pop
pop
mov
xchg
pop
xchg
das
or
cwtl
dec
aam
arpl
xchg
sub
inc
pop
lods
hlt
mov
add
mov
lea
mov
mov
sbb
pop
mov
movsb
addr16
mov
mov
inc
pop
mov
push
xor
pusha
and
aaa
or
testl
fldl
popa
jge
xlat
inc
call
enter
test
fs
call
cmpb
mov
icebp
cs
adc
aam
rclb
pop
pop
aaa
mov
or
xchg
push
movsb
cmpsb
inc
lahf
mov
and
movb
mov
xor
lahf
xchg
mov
mov
aad
push
dec
rcrb
and
mov
mov
sbb
mov
jno
and
int
scas
hlt
sub
adc
inc
mov
jne
repnz
and
test
pushf
inc
xchg
outsb
out
or
push
mov
adc
loope
add
mov
xor
lods
test
mov
lock
dec
call
push
in
xchg
mov
mov
fmuls
test
add
push
test
in
repnz
cli
fildll
mov
dec
test
cmp
mov
js
test
sarl
jae
adc
rclb
and
jnp
cmp
pop
in
mov
jne
push
or
filds
popf
xor
fistps
pop
sbb
adc
xlat
aam
jmp
mov
pop
jb
call
or
pushf
jbe
lods
mov
jg
js
xor
sarl
or
rclb
addl
add
pop
call
or
sub
es
push
mov
call
push
fmull
cli
loopne
mov
loope
dec
iret
ja
jp
cmp
jbe
push
pop
js
sub
sahf
les
and
or
test
mov
movsl
mov
lock
arpl
lods
sbb
cmp
pop
pop
pop
pop
loopne
jmp
data16
xchg
or
push
outsl
dec
cmpsb
or
stc
movsb
xor
xchg
stos
mov
mov
hlt
push
jnp
icebp
clc
xchg
ja
popa
test
mov
fisubrl
mov
cmp
fldcw
xchg
mov
adc
sar
scas
jb
fmull
rclb
inc
xchg
lods
insb
loopne
xor
cmpsb
mov
leave
jbe
inc
jmp
iret
out
leave
inc
leave
or
mov
jmp
mov
mov
adc
jno
mov
jbe
neg
lahf
in
xchg
popa
jnp
loopne
mov
push
stos
or
cmpsl
pushl
mov
lods
jmp
add
jne
adc
cmpsb
pop
mov
in
shl
sub
out
leave
cmp
push
shlb
dec
popa
jg
or
sahf
or
add
xchg
add
mov
lret
xchg
scas
mov
push
ret
cld
insl
inc
sub
inc
lods
iret
jb
mov
test
lahf
jne
cmp
mov
leave
or
out
sti
dec
lods
cmp
push
sti
xchg
adc
sub
dec
xchg
push
inc
mov
mov
xchg
push
cltd
jle
lods
loope
mov
push
cld
sub
jmp
lock
jp
shlb
and
jmp
xchg
mov
imul
push
cs
push
scas
cmp
cmp
ret
sbbb
lret
xchg
js
loopne,pt
jg
sbb
or
sahf
iret
lahf
out
dec
imul
repnz
fdivrl
jno
insl
aas
jo
movsl
add
or
jl
adc
bound
sbb
mov
lock
jge
mov
icebp
and
aam
jl
xlat
test
adc
std
adc
lea
lock
jecxz
and
aas
push
outsb
shlb
es
push
outsl
int
jecxz
sbb
jle
inc
and
ljmp
xor
xchg
movsb
test
cmp
mov
rcr
je
push
lcall
testb
leave
repnz
jg
add
into
adcl
mov
mov
stos
ret
push
xor
adc
push
jnp
mov
lcall
xor
and
ss
daa
pop
lods
lea
in
cmpsb
movsl
push
xchg
mov
adc
call
test
ret
insb
jo
sbb
cmp
adc
es
xchg
aaa
jecxz
icebp
sub
loop
scas
xchg
sahf
imulb
sbb
in
mov
cmp
xor
lea
int3
add
ss
adc
cli
mov
sbb
mov
jge
jno
repz
out
test
adc
sub
pop
lods
shll
xorl
lock
cmpsb
cmp
lcall
xchg
imul
inc
imul
dec
ds
pop
leave
inc
inc
mov
adc
adc
loop
leave
xchg
leave
in
or
jge
cmpsb
cmpl
inc
jge
cwtl
int3
cmc
sbb
xor
loopne
lock
mov
insl
movsb
mov
les
xchg
push
adc
inc
jg
adc
mov
pop
pop
mov
and
pop
hlt
jg
inc
xchg
xchg
sub
out
and
dec
sbb
mov
push
xlat
jp
ja
arpl
inc
sbb
push
mov
mov
fsubrl
insb
xchg
je
ret
int
xchg
jae
js
xor
arpl
mov
jo
popa
popa
popa
mov
jae
xor
std
push
xlat
inc
jecxz
push
cmc
or
jmp
jle
push
xor
push
pop
cltd
and
and
cli
cmpl
outsb
aaa
cmpsb
sti
inc
hlt
ljmp
aas
imul
dec
rclb
mov
dec
pop
adc
mov
push
and
popa
adc
loope
fs
sub
adc
and
jno
out
sub
adc
push
loop
xchg
jecxz
imulb
jbe,pt
push
xchg
xchg
pushl
loopne
in
ret
stos
jmp
idivb
mov
std
shl
inc
stc
in
imul
test
sbb
mov
pop
outsl
add
adc
sub
lds
xchg
xor
push
jne
mov
jnp
mov
adc
test
pop
sbb
ret
adcb
mov
adc
pop
sbb
inc
ja
add
cmp
mov
int
cltd
outsl
xchg
hlt
in
loope
push
movsl
into
les
sbb
adc
movswl
cmp
cs
mov
xchg
mov
adcb
jge
bnd
inc
arpl
mov
push
xchg
xchg
aam
jmp
jns
or
lea
rorb
adc
mov
xchg
ja
add
mov
lds
data16
dec
push
jne
jb
adc
ret
mov
outsl
lea
jecxz
movl
xor
call
sahf
pop
in
mov
jns
mov
cmpsl
inc
and
fdivs
test
lret
jne
and
adc
test
mov
xchg
xchg
mul
pop
mov
pop
int3
xchg
jb
cmp
xchg
frstor
jle
int
scas
dec
push
or
jge
repz
les
xchg
xor
cmpsl
ds
ja
mov
dec
mov
dec
sbb
shrl
push
sbb
call
push
cmp
dec
dec
mov
pushf
cltd
fstps
negl
sarb
cli
mov
cltd
movb
push
push
dec
dec
mov
repz
or
int3
ret
push
addb
adc
aam
fiaddl
cmp
stc
xchg
push
daa
pusha
loop,pn
and
mov
pop
mov
xor
xchg
lds
push
pop
nop
pop
add
stos
adc
push
cltd
pusha
inc
push
fstl
fadds
mov
std
fstps
or
and
dec
mov
lahf
xchg
pop
std
not
add
jo
add
jle
dec
add
xor
repnz
mov
in
mov
les
int3
sbb
pop
xchg
xorb
push
or
mov
pushf
dec
lahf
div
xlat
out
cli
sub
mov
fs
test
jmp
je
cs
inc
push
xchg
push
sahf
test
fistpll
jmp
add
movsl
movsl
ljmp
fs
xor
xchg
mov
cmpsb
xchg
xchg
lea
sbb
insl
in
test
nop
xlat
repnz
data16
lret
or
enter
or
fistps
retw
sbbb
mov
pop
loope
pop
cltd
adc
lods
hlt
jo
or
sti
ljmp
nop
mov
sbb
out
vfmsubaddpd
pop
mov
dec
xchg
in
test
sbb
pop
data16
shrl
mov
adc
js
xchg
loop
xor
in
sub
dec
sbb
lcall
adc
and
sub
xchg
mov
pop
outsb
push
fsubrl
inc
sbb
rolb
jl
push
cmp
sbb
dec
loope
sbb
push
inc
inc
cli
and
insb
scas
ficomps
sahf
inc
daa
shlb
insb
std
xchg
and
pop
pop
push
pop
xchg
sub
cmp
dec
and
sbb
loop
mov
sub
push
movsl
test
je
and
cmp
cltd
pop
clc
fists
je
push
addb
mov
nopl
push
push
xchg
pop
jno
sub
lahf
insb
fwait
scas
or
cmpsb
dec
mov
or
pop
movsl
pop
mov
cmp
xor
xchg
pop
leave
stos
mov
pop
addb
mov
pop
repz
in
xor
js
push
lcall
or
dec
rcll
in
mov
mov
xchg
das
imul
lcall
xchg
das
rclb
mov
adc
dec
test
or
push
rcrl
or
fcomps
add
jbe
pop
add
mov
mov
es
push
out
xchg
fldl
lods
mov
lea
test
pop
aad
data16
cmp
or
aad
xchg
ds
push
mov
xor
lcall
add
mov
xchg
mov
and
stos
and
in
call
cmp
adc
pop
jbe
push
jno
aas
and
pop
push
pop
inc
xchg
idivl
stc
sbb
dec
fsub
pop
mov
mov
pop
pushl
stc
jns
adc
adc
lahf
lea
fbstp
insb
neg
jl
lret
ret
insl
xchg
xorl
cmpsl
roll
les
subl
addr16
pop
cli
sub
fidivl
xor
xchg
or
pavgb
cmp
xor
fisubrs
xchg
inc
orl
cmp
outsl
dec
enter
in
ret
xor
push
cmp
js
lret
imull
int3
fimull
imulb
cmp
mov
or
push
stos
mov
and
dec
stc
dec
jg
loopne
mov
push
xor
imul
test
lret
dec
mov
mov
xchg
xor
inc
test
imul
and
push
mov
push
cmpb
jae
mov
add
push
addr16
push
decb
loope
stc
test
cwtl
cmp
movl
inc
shlb
fstpt
jne
shrb
fsubrs
imul
inc
repnz
stos
push
and
mov
mov
in
and
repz
xchg
sub
mov
mov
cmp
clc
and
hlt
fimuls
pop
jl
into
lret
movsl
loope
cmp
and
push
pusha
push
hlt
xchg
mov
out
pusha
push
jmp
test
jp
cld
cmp
out
adc
movsl
or
fsubrl
aad
pop
aas
mov
push
into
xchg
sbb
int3
cmpsb
sbb
cmp
sbb
mov
pop
lahf
dec
sbb
adc
xor
mov
aaa
mov
mov
mov
adc
sub
jmp
or
xchg
mov
dec
fsubp
jne
shll
pop
rclb
mov
les
lds
movsl
loope
repnz
test
cmp
pop
or
mov
jno
xchg
insl
pop
mov
inc
dec
fists
dec
jg
fisttpll
rcl
mov
fnstenv
jecxz
add
jg
lret
inc
imul
je
sbb
enter
mov
inc
mov
lret
loopne
fsubs
int3
jge
push
mov
pushf
imul
pop
cmp
dec
mov
add
mov
adc
and
inc
sbb
mov
sbb
sub
out
fsub
jge
fcoml
ja
in
xor
shrb
clc
add
push
dec
aas
mov
xor
mov
push
or
movsb
rorl
mov
scas
pop
adc
stos
xchg
fucomi
adc
and
lahf
cltd
enter
scas
xlat
imul
jno
jecxz
sub
pop
lret
push
or
mov
sarb
je
sbb
loope
fildl
sbb
or
mov
lock
jae
stc
push
mov
adc
loopne
outsb
add
mov
loop
js
mov
aaa
cbtw
jge
stos
iret
in
jge
inc
stc
rcrb
dec
cmp
test
mov
jnp
cmp
jl
lret
mov
movl
sti
pop
inc
test
test
vunpckhps
imul
int
in
push
test
sahf
push
mov
push
sub
xorl
ja
mov
fldcw
inc
mov
sub
movsl
mov
or
push
aas
sarb
and
testl
xchg
aaa
mov
xor
add
imul
pop
mul
jl
xchg
in
dec
push
sbb
cmp
push
xor
jnp
hlt
and
pop
lods
fnstcw
loopne
popa
imul
in
mov
sub
push
sbb
repnz
in
std
mov
push
lds
les
movsl
add
push
pop
jle
popf
pusha
rcrb
lods
jl
push
xor
daa
sbb
pop
xchg
bound
gs
xchg
nop
lcall
push
ret
mov
out
aaa
push
adc
adc
xor
aam
pop
push
xchg
dec
jmp
pop
cmp
pushf
xor
cmp
adc
pop
gs
shl
aam
test
fisubrl
or
mov
adc
in
loope
scas
je
jge
nop
sub
xchg
popa
and
pop
vhaddps
fs
aas
repnz
or
jmp
mov
outsl
or
sahf
dec
inc
cli
or
mov
mov
je
pushf
xor
pop
jne
mov
mov
notb
pop
adc
jg
ret
inc
add
xchg
dec
jne
adc
mov
sahf
add
clc
dec
adcl
and
leave
fimull
jl
add
push
jl
jmp
pop
jne
lds
stos
fwait
inc
push
cmovnp
mov
pop
sbb
outsl
and
out
cltd
cmp
xchg
cmp
mov
in
mov
enter
imull
rcll
mov
fcmovnu
ret
add
xor
mov
cwtl
adc
fwait
and
lret
sahf
roll
mov
popa
popa
xor
mov
dec
dec
fdivl
or
inc
mov
pushf
mov
xor
lahf
sti
loop
push
xchg
add
sub
std
sbb
out
bound
repz
jno
in
jge
jle
mov
and
mov
inc
add
lcall
push
cltd
repnz
sub
enter
in
xor
int3
mov
push
subl
push
aas
test
ja,pt
jecxz
xchg
fs
xchg
cltd
sub
jl
xchg
jae
xor
lcall
in
sbb
jp
dec
xchg
mov
aam
nop
dec
xor
mov
addr16
fbld
in
lcall
iret
ss
jnp
scas
jb
jae
stc
push
andb
jb
adc
shll
pop
xor
add
xchg
xor
test
and
xchg
incb
adc
ffreep
cmp
stc
fwait
cmp
pop
arpl
scas
shr
jmp
stos
pop
push
jg
xor
xor
mov
sub
aaa
lahf
inc
cmp
icebp
pop
jbe
jecxz
fistpll
mov
test
repz
push
mov
pop
pop
add
outsb
xor
fcompl
and
repz
add
aam
cmpsl
xchg
fldt
mov
lods
dec
or
into
divl
iret
pop
rcll
sub
mov
add
pop
pop
lock
xchg
mov
fmulp
mulb
jecxz
in
inc
movsb
push
cmp
mov
pop
add
fwait
sbb
sub
cwtl
je
xor
scas
and
sbb
push
lods
test
adc
xchg
sbbl
in
mov
xlat
mov
enter
hlt
adc
dec
pop
xchg
icebp
and
arpl
sarl
push
imul
cmpsb
add
lahf
insl
adc
and
xchg
mov
sbb
mov
cmp
ficoml
lods
leave
or
dec
rcr
jl
ljmp
pop
leave
push
das
cltd
ret
pop
lock
and
mov
dec
aam
adc
cli
or
mov
mov
fstps
ficompl
inc
xor
xlat
mov
enter
mov
mov
loope
out
pushf
xchg
add
sbb
and
mov
mov
push
add
call
and
cmp
pop
dec
xchg
xchg
fwait
push
out
frstor
mov
push
adc
into
fucomi
xchg
pop
lea
push
sbb
js
add
push
and
xchg
movsb
mov
in
pop
movsl
pushf
lcall
sbb
sbb
or
mov
out
outsb
test
inc
test
sub
and
cwtl
lea
jb
sbbb
xchg
jp
cmp
fmulp
add
sub
stos
dec
dec
fs
xor
movsb
shlb
divps
inc
or
nop
push
adc
enter
jne
add
push
pop
pop
cli
fistpll
loop
lods
mov
mov
seta
cs
fstpl
ds
add
add
mov
mov
popa
rcl
fnstenv
in
test
int3
das
sbb
adc
std
lods
leave
jl
aas
mov
ja
or
loope
cld
xchg
push
clc
insl
sub
sti
popf
mov
fmull
sbb
jb
fwait
xor
lcall
sahf
stos
mov
out
scas
jo
add
mov
jl
jecxz
movsl
mov
xor
jg
jmp
jmp
lahf
adc
aam
test
jmp
push
repnz
jno
rcrl
rcr
fnstsw
mov
xor
dec
imul
push
loopne
mov
xor
aad
jbe
test
push
in
cmpsb
add
insl
mov
sbb
ja
shrd
into
or
or
test
in
lret
lea
jge
call
mov
in
mov
and
nop
add
sarb
pop
jnp
mov
push
js
mov
test
outsl
and
adc
lcall
mov
ss
pop
pop
sbb
push
lods
andb
sti
cmp
mov
pop
adc
add
jecxz
shll
cmpsb
or
test
cmpsl
cmpsb
add
fsubrs
mov
fdivrl
pop
jecxz
mov
scas
jmp
inc
xchg
xchg
leave
sbb
push
insl
lods
ret
adc
enter
jge,pt
int3
pop
cmc
xchg
mov
jmp
out
sub
mov
das
xchg
sbb
sub
in
mov
in
xor
and
xchg
xor
scas
jp
in
shl
adc
dec
testb
out
pop
and
loop
cmc
ror
inc
mov
dec
repz
je
xor
xchg
jge
data16
sbbb
and
outsl
dec
cmc
neg
sbb
lea
psrad
rorb
pop
cmc
sbb
mov
ja
push
imul
outsl
mov
out
sub
pop
or
test
jnp
mov
mov
dec
mov
or
in
xchg
push
les
or
lds
inc
std
les
popa
mov
mov
cld
scas
mov
insb
jge
daa
lds
jmp
movsl
shll
adc
mov
js
outsb
inc
mov
sub
push
pop
jae
or
pop
movsl
lcall
imul
sbb
xor
int
aas
push
xchg
lahf
jge
cmp
in
or
push
mulb
or
aaa
js
mov
jp
xchg
or
aam
sbb
stos
xorl
aam
in
aas
pop
push
imul
push
fimull
push
subb
cld
std
inc
hlt
xor
clc
lret
push
jno
sub
push
mov
mov
daa
add
imull
jae
dec
mov
xchg
lods
inc
int3
insl
loop
inc
dec
clc
pushl
popa
lock
mull
jnp
mov
mov
xor
mov
pop
dec
loope
sbb
test
xchg
push
pop
imul
shr
sbb
jecxz
push
jp
fcompl
lods
add
mov
in
mov
leave
sarb
les
stos
pop
and
xor
fistl
std
jle
aad
into
subl
scas
je
mov
repz
and
aam
and
ret
repnz
add
jecxz
inc
ds
icebp
mov
xlat
cld
and
sbb
pop
sub
cld
pusha
imul
mov
stc
ds
repz
mov
shrb
mov
add
dec
push
loopne
xchg
push
push
jmp
cmp
hlt
cmp
push
add
inc
jl
je
sbb
aam
pop
xchg
cli
xchg
fdivl
jne
aad
dec
sub
and
dec
ljmp
stc
push
lcall
out
stos
sub
fnstenv
and
adc
jecxz
add
fists
sub
and
dec
cltd
aam
stos
push
dec
inc
mov
cmpsl
lret
notb
out
or
rorl
out
adc
xor
mov
and
sub
insl
inc
in
insb
jmp
fistpl
mov
add
adc
daa
int3
pop
filds
inc
loop
cmpsl
aam
dec
cwtl
out
aas
nop
pop
mov
test
fidivrl
jo
loope
push
js
test
add
cli
fisubrs
push
insb
mov
inc
inc
fimull
es
mov
or
mov
sub
dec
stc
movsb
jne
mov
mov
shrl
sbb
xchg
fldcw
call
xchg
in
pushf
outsl
sti
in
fucompp
jno
or
jge
adcb
movsl
call
loope
adc
dec
gs
lock
outsb
das
add
xor
mov
test
fstpt
dec
push
iret
push
pop
jg
or
sahf
hlt
mov
cs
inc
push
out
inc
dec
lret
jl
sub
jmp
mov
test
or
in
rorl
scas
jnp
cmp
lahf
in
jb
push
sub
fcomi
xchg
inc
lods
ss
arpl
xchg
push
aaa
mov
xchg
sub
sub
insl
lds
lret
adc
pop
adc
jcxz
xchg
push
mov
add
add
cmpsb
pop
sbb
jo
cmp
inc
pop
fadds
inc
pop
jge
fwait
dec
out
andb
mov
arpl
insb
add
popf
adc
and
mov
or
loop
out
sub
sbb
mov
dec
sbb
sbb
sub
in
pop
push
mov
in
inc
bnd
xor
ret
jae
jno
xchg
int3
adc
push
mov
mov
shl
mov
subb
jae
sti
scas
rcll
xor
iret
mov
add
ss
dec
xchg
movsb
cmp
enter
sub
and
pop
xor
cmpsl
pushf
pop
ljmp
and
push
aam
mov
sub
out
inc
jae
xchg
push
sbb
testb
stos
push
loop
sti
movsb
push
jecxz
loop
cli
jno
xor
es
push
and
push
stc
pop
jns
and
imul
mov
arpl
push
sub
xchg
hlt
clc
jp
pop
sbb
in
inc
in
cmpsl
cmp
xchg
mov
popa
out
and
insl
hlt
popf
and
mov
push
pop
lea
lret
lea
xor
jg
call
cmpsb
mov
ja
sbb
xchg
icebp
mov
inc
xchg
xor
push
lahf
inc
pop
ret
lea
das
xor
xor
das
mov
mov
mov
mov
mov
fucomp
les
int
addb
push
pop
inc
sbbl
jb
pop
int
insl
mov
scas
and
stos
insl
mov
xlat
dec
rorb
fdivl
or
les
addb
shlb
sbb
xor
in
pop
test
test
xchg
pusha
push
xchg
leave
and
inc
push
cmp
jle
movsl
insb
aas
mov
inc
pop
out
adc
dec
fisubrl
xchg
in
mov
mov
mov
cs
or
incl
and
in
xor
add
popa
cltd
adc
bound
ljmp
ljmp
sbb
inc
pop
mov
mov
xchg
jmp
xchg
dec
fildll
xchg
cmp
xor
lods
mov
pop
xchg
push
xchg
cmpsl
nop
jge
push
aas
adc
cmpsl
xlat
int3
arpl
sbb
sbb
mov
jecxz
popa
lock
adc
movsb
fsubrs
fisubs
cmp
cmpsl
sahf
jne
bound
mov
sub
imul
fcomip
pop
or
rcll
aas
loop
jmp
je
imul
in
es
popf
es
jmp
jne
cmp
cld
jb
fnsave
inc
pop
rorl
sti
mov
icebp
adc
notl
xchg
sbbb
ds
and
rep
or
and
cmp
or
xor
sub
mov
movsb
sub
adc
push
cltd
adc
pop
adc
sbb
mov
pop
jo
push
les
cld
pop
push
imul
fbstp
pop
sbb
pop
mov
mov
cmpsb
subb
push
pop
clc
pop
rclb
fidivl
mov
and
sahf
pop
mov
stos
daa
rolb
lret
xchg
into
lcall
mov
dec
mov
push
jmp
xor
lret
dec
clc
jp
das
jns
mov
inc
or
sbb
addr16
jmp
or
cmpsl
xor
in
lods
push
xor
jg
push
xor
mov
in
adc
push
add
or
lcall
sub
dec
push
jno
inc
lock
sbb
mov
ficoms
lods
pop
push
imul
pop
fld
and
pop
jmp
push
jae
mov
inc
mov
fidivs
cmc
cmpsb
fcomi
aad
xchg
mov
ss
in
mov
or
pop
pop
repz
std
xor
cmpsl
lea
cmc
jmp
xchg
push
cli
dec
fsubs
sahf
in
xor
jp
add
mov
stos
aad
push
pop
push
xchg
ret
jp
lods
sbb
inc
lods
inc
jb
in
mov
imul
dec
outsl
inc
xchg
or
mov
enter
pop
ljmp
shrb
xchg
scas
lret
imul
push
xchg
inc
mov
out
fs
jmp
and
inc
lods
mov
andb
std
les
mov
in
inc
loope
pusha
add
outsl
mov
jge
jecxz
fdiv
sbb
rclb
xchg
inc
sub
inc
stos
cmp
xchg
xor
and
sbb
addl
frstor
mov
pushf
jne
cli
xchg
inc
outsb
cmp
and
lods
sbb
rcll
push
push
mov
push
sti
aam
push
pushf
and
scas
jmp
mov
pop
push
pop
ficoml
sub
rorb
sub
imul
pop
je
push
fisubl
stos
idivb
adc
sbb
xchg
lods
cmpsb
sbb
cltd
ds
lcall
push
jo
cmp
mov
sub
mov
or
rorl
loopne
push
cmp
cmp
mull
mov
in
adc
jmp
mov
jbe
xor
dec
mov
imul
ds
xor
push
mov
mov
mov
cmp
xor
adc
pop
and
jno
mov
inc
and
xor
jle
pop
out
push
mov
mov
adc
xchg
mov
out
addr16
mov
sbb
pop
push
pop
adc
add
out
xchg
inc
pop
lods
sub
fists
jl
jge
jae
sti
ret
pop
fisttps
mov
or
xchg
adc
nop
add
xchg
dec
cmp
xlat
stc
imul
jle
daa
push
jno
dec
mov
adc
and
scas
test
fld1
inc
jo
mov
data16
push
ljmp
add
sti
inc
dec
or
jbe
js,pn
dec
inc
loopne
je
sub
fwait
add
adc
fsubs
subb
test
iret
push
cs
push
jae
push
les
push
call
aaa
pushf
and
and
ret
ss
sti
xchg
jae
xchg
mov
mov
push
pop
jae
lds
or
adc
adc
repz
push
push
push
std
dec
xor
xchg
clc
divl
daa
cltd
rclb
cmpsl
cs
mov
scas
pusha
or
daa
sti
pop
sti
inc
cltd
jg
and
and
cmp
faddp
xor
sub
ljmp
xor
dec
mov
adcb
and
jle
and
push
rclb
push
mov
jne
mov
ljmp
sbb
pop
sbb
push
jnp
neg
fcmovnbe
insl
fisubrl
cmp
inc
xchg
push
imul
sub
jae
cltd
or
jge
int
test
mov
out
inc
shl
jne
mov
jl
cli
out
adc
xor
repz
jp
add
xchg
pop
mov
aad
gs
push
addr16
cld
enter
jnp
xor
push
test
sub
addl
or
jp
data16
jp
das
mov
jae
jno
pusha
int
inc
inc
das
sbb
cmp
xor
hlt
fbstp
mov
mov
or
pop
xchg
inc
fldt
jno
iret
sbb
in
mov
mov
sbb
xchg
mov
imul
std
and
cmpsb
dec
inc
testl
push
les
push
test
inc
imul
lea
int3
loope
push
xchg
aas
cmp
jmp
shll
das
pop
adc
fwait
clc
bound
mov
dec
imul
fimull
lds
and
fnstenv
push
push
fldl2t
shlb
pusha
int3
xor
adcb
inc
leave
stos
mov
int
lds
gs
ret
xor
inc
je
popa
mov
cwtl
shl
daa
push
gs
sti
dec
pop
jp
sbb
sub
xlat
addr16
f2xm1
outsb
fnstsw
rcrb
jl
jne
add
xor
mov
sbb
cwtl
mov
mov
pop
insb
ret
outsb
in
fnstcw
jl
les
aaa
mov
enter
mov
movsb
clc
dec
pop
decb
inc
mov
fwait
nop
movsb
push
js
push
les
mov
stos
popa
sub
dec
aad
dec
andl
mov
xchg
and
clc
lahf
xor
xorl
push
or
cmpps
adc
pop
xor
push
push
pusha
push
mov
dec
jbe
aad
dec
cmp
icebp
jo
fwait
xor
les
add
xchg
inc
and
mov
push
mov
lods
sbb
mov
cmpsb
jae
call
push
xchg
adc
inc
jns
xor
fsubp
or
roll
in
xchg
mov
pop
sbb
pushf
jno
dec
in
pop
pop
fcomps
or
mov
mov
add
into
daa
lret
je
xlat
sti
dec
test
push
add
out
inc
iret
sti
dec
out
aaa
es
cmp
xchg
sub
insb
ret
enter
mov
cmp
push
in
popa
out
adc
js
subb
aam
sub
adc
cltd
ja
rol
data16
mov
inc
adc
cmp
cmp
lahf
inc
mov
mov
std
test
dec
testb
mov
shl
cmc
fidivrl
dec
push
mov
push
aaa
mov
test
fwait
fsubs
or
cmp
jno
fidivrs
mov
inc
in
movsb
sbb
mov
in
or
test
inc
in
dec
pusha
inc
pop
fnstsw
push
popf
sub
stos
test
hlt
int3
dec
imul
sbb
fisttpl
push
xchg
inc
hlt
pop
leave
sar
out
inc
cmp
mov
xor
frstor
mov
test
rcll
sub
out
xchg
cs
lds
mov
mov
les
mov
jle
jle
mov
and
lods
sbb
mov
sahf
cmp
or
imul
cmp
sarb
ret
jecxz
adc
jg
mov
jne
xor
cmp
aam
xor
adc
pusha
test
sbb
sub
pop
movsl
mov
cmp
mov
cmp
movsb
fucom
jne
mov
push
mov
repnz
imul
push
inc
scas
jb
cwtl
jne
f2xm1
bnd
sbb
sub
hlt
pop
push
loop
jl
xorl
imul
xor
lds
sub
fiaddl
jns
loope
ret
sahf
mov
xchg
pmaddwd
sub
sub
test
or
vpavgb
push
mov
leave
mov
mov
xor
lods
test
pop
int3
outsl
mov
jne
out
ja
mov
or
mov
std
or
push
leave
sti
xlat
sub
hlt
or
lcall
pop
lds
adc
pop
or
jmp
and
js
dec
cmpsl
dec
sub
push
xor
das
in
mov
mov
loope
mov
xchg
ret
imul
cmp
or
inc
imul
lcall
or
lcall
xchg
pop
icebp
xchg
adc
rorb
test
mov
shrb
or
ja
or
sti
stc
inc
push
emms
in
dec
jg
fsts
push
xchg
icebp
mov
sub
call
nop
dec
scas
dec
pop
into
neg
mov
push
jecxz
cwtl
lods
dec
pop
push
xchg
in
mov
fidivl
imull
out
inc
loop
inc
ret
loopne
icebp
mov
outsb
jbe
mov
mov
fnstcw
out
inc
repz
icebp
pop
dec
insl
pusha
mov
movsb
dec
mov
push
shrb
jl
pusha
adc
jecxz
insb
sub
scas
jno
inc
sti
mov
out
adc
scas
xchg
cld
das
fcoml
outsl
push
stos
ret
push
adc
mov
arpl
int
or
xchg
mov
cmp
mov
pop
mov
ljmp
push
mov
repz
xor
addr16
ja
pop
aaa
mov
sub
mov
in
push
jl
pusha
mull
xor
xor
xchg
adcl
lahf
jle
ss
inc
ds
mov
add
and
pop
jbe
add
ljmp
ds
push
bnd
inc
rol
sbb
push
and
ret
lods
mov
pop
push
je
mov
or
xchg
aam
ds
je
fwait
cwtl
data16
mov
pop
dec
xchg
aaa
jmp
psrad
and
imul
sub
ficomps
adcb
push
pop
fistl
or
leave
bsf
ljmp
cwtl
fdivs
mov
dec
mov
stos
pushf
clc
xchg
xor
fidivs
ficomps
sbb
les
cld
add
sahf
jns
imul
lret
pop
sub
pop
push
in
xchg
and
imul
and
movsb
sbb
or
lcall
arpl
jae
loopne
repz
xchg
nop
fs
and
xor
int
mov
imul
aas
push
push
out
push
jno
daa
adc
mov
dec
mov
sbb
dec
xchg
pusha
lea
cmpsl
and
loope
pop
sbb
mov
jnp
les
frstor
ljmp
jmp
mov
rclb
icebp
jb
and
fnsave
push
jmp
outsb
jne
fnstcw
into
mov
nop
das
add
outsb
inc
dec
mov
dec
sub
loopne
pop
mov
scas
stos
adcb
push
inc
push
test
cmp
jle
lock
xchg
in
pop
cmp
dec
xchg
mov
or
bound
lods
roll
pop
ljmp
push
mov
mov
stc
adc
mov
sub
nop
mov
popf
mov
ss
ljmp
jo
push
and
mov
ret
jo
cmp
adc
pop
int3
xchg
jno
mov
inc
sbb
xchg
and
and
cmp
scas
adc
je
mov
xchg
push
lods
xchg
dec
lret
fs
loop
pop
jns
fwait
ja
xchg
mov
inc
stc
in
push
sub
sbb
adc
or
mov
and
adc
jne
sbb
push
sbb
pop
or
mov
pop
fcompl
fnsave
dec
in
mov
or
or
jecxz
mov
mov
xor
out
not
mov
cld
adc
adc
xchg
lret
or
filds
pusha
lea
in
pop
loop
paddusb
fisttpll
add
lahf
and
mov
ret
pop
push
popa
mov
add
out
add
jns
call
pop
pushf
mov
dec
enter
adc
mov
movsb
sub
cmp
jbe
inc
ret
jne
xchg
mov
shrb
jle
call
std
test
xchg
pushf
adc
sahf
xchg
add
lds
aaa
add
insl
ds
inc
sbb
test
dec
cltd
jmp
jne
inc
aaa
out
and
enter
mov
xchg
or
or
out
sti
xor
jns
imul
dec
outsb
out
mov
mov
mov
or
imul
insl
xor
mov
add
sub
or
lods
xor
xchg
push
or
mov
push
or
ja
enter
mov
ja
xor
xor
pushf
leave
or
dec
scas
xchg
jae
mov
push
jns
fidivl
out
loopne
lret
xor
js
cmp
xchg
jecxz
add
mov
sub
push
cmpsl
pop
mov
dec
loopne
rcrl
test
je
mov
int3
push
jmp
cli
sbb
or
pop
push
mov
repz
push
add
lea
in
xchg
adc
daa
mov
lea
insb
adc
testb
stc
sub
das
jne
pop
inc
lahf
jecxz
pop
out
daa
jb
loop
sub
divl
out
add
sub
push
pop
mov
mov
repnz
or
fsts
pushf
xchg
sahf
sub
cmc
cmp
std
cmp
sub
mov
mov
inc
mov
loop
lahf
iret
jne
sbbl
andb
into
fistpll
lods
movsl
pushf
addr16
test
or
pop
or
sub
or
insb
pop
mov
mov
jmp
scas
aad
inc
mov
push
roll
mov
stc
and
pop
jno
stc
cmp
testb
adcb
mov
dec
add
ret
insb
or
lret
mov
les
sbb
divb
subb
or
cmp
lds
ss
ljmp
xchg
inc
int3
mov
jl
mov
test
mov
or
repnz
ljmp
mov
lock
adc
add
mov
in
fdivrs
jmp
jae
xor
cmp
cmpsb
movsl
hlt
ds
aam
mov
and
mov
ljmp
test
xor
sbb
jl
nop
pop
es
inc
sbb
lea
repnz
add
pop
pushf
out
mov
psrad
cmp
movl
aam
or
xchg
fwait
testb
ljmp
das
adc
lahf
inc
ja
popf
add
jle
inc
adc
mov
dec
js
cs
or
push
ljmp
pop
imul
adc
add
das
xlat
repz
cmp
sbb
lea
sbb
stos
popa
movsb
popf
push
fwait
imul
fs
dec
call
sbb
cmp
dec
inc
add
stc
or
sbb
sarb
shrl
test
lods
hlt
fs
mov
insl
stos
push
mov
iret
sahf
jbe
mov
stos
xor
mov
mov
xchg
add
out
jge
mov
mov
popa
fdivrp
dec
adc
repz
ds
cwtl
mov
pop
jne
out
loopne
inc
inc
fidivl
repz
jle
sti
aam
outsl
jo
movsl
cmp
adc
xchg
inc
rclb
ret
mov
je
add
sub
push
leave
add
dec
in
add
in
xchg
roll
pop
in
mov
sub
clc
mov
cmp
sub
loopne
aas
icebp
out
mov
gs
add
decb
dec
mov
adc
arpl
insb
push
mov
sbb
jnp
inc
mov
dec
push
gs
cmpsl
pop
out
jbe
pop
or
push
cmp
and
add
mov
es
insl
mov
outsl
fdivp
cmp
pop
in
mov
mov
in
push
mov
mov
icebp
xchg
aam
jno
outsb
ret
fisttpl
fwait
aaa
xor
jno
push
icebp
data16
loopne
jb
pop
or
cmp
enter
icebp
xor
ss
xchg
xchg
inc
pop
inc
ljmp
gs
cmp
mov
aad
subl
shl
imul
and
push
mov
mov
adc
rol
push
jae
insb
fcmovu
cltd
loop
hlt
ds
loop
sbb
adc
out
cwtl
adc
insb
pop
jle
pop
dec
lret
cmp
dec
dec
add
dec
inc
shll
insl
xchg
mov
es
jbe
mov
dec
aam
stc
push
repz
xor
dec
push
fwait
xchg
mov
xor
repnz
sahf
jmp
cmp
or
es
mov
scas
repz
pop
xor
cmp
cltd
dec
or
icebp
daa
icebp
mov
fldt
and
or
test
push
out
dec
inc
mov
test
mov
stos
inc
mov
scas
pop
cmpsl
adc
out
movsb
addr16
mov
and
lret
or
int
adc
xor
inc
lea
mov
push
call
out
mov
cmp
jge
mov
jle
pusha
xor
lcall
mov
cmp
loopne
cmp
cvtpi2ps
pop
or
mov
outsl
jmp
adc
cmp
or
jbe
ret
jecxz
test
pop
std
lods
xchg
sbb
lahf
ret
pop
rcr
stos
push
push
sbb
push
adc
ds
cmp
or
adc
mov
divl
outsb
push
aam
stc
sub
jg
leave
add
push
xor
addl
lock
lahf
push
leave
dec
mov
mov
test
mov
js
xlat
dec
xchg
mov
sti
xchg
adc
iret
add
push
ss
jp
sbbl
cwtl
fcoms
sbb
sbb
adc
rclb
add
push
sbb
shl
orw
mov
fstp
daa
addr16
xchg
sar
cmp
pop
mov
cmp
add
cmovs
data16
andl
popf
pop
ss
adc
repnz
dec
lea
cmp
sub
fdivp
imull
xchg
pop
add
sbb
xlat
xchg
add
mov
out
imull
ret
pop
inc
push
mov
out
in
rcrl
mov
and
mov
pop
mov
xchg
add
mov
cmpsl
int3
fdivrp
xchg
inc
xor
add
fisubrl
sahf
xchg
xchg
sysenter
adc
jecxz
fidivl
rcrl
mov
jbe
push
mov
mov
sbbb
lret
xchg
das
lcall
lcall
nop
jg
jnp
fdivp
push
push
mov
jg
mov
iret
daa
mov
inc
cli
inc
lds
data16
test
sub
xor
cltd
adc
mov
in
movsb
jmp
cmpsb
pop
add
push
in
pusha
or
sub
adc
in
scas
xchg
mov
in
icebp
arpl
xchg
jne
out
push
pop
stos
nop
imul
xlat
push
pop
jns
fcomps
shrl
push
call
divl
hlt
subl
push
fidivl
pop
jp
loopne
js
outsl
adc
adc
stos
lea
enter
dec
ja
and
inc
pop
sbb
movsl
adc
mov
cmp
jge
sbb
repz
loop
negl
adc
inc
insb
daa
add
mov
jg
cli
sub
adc
pop
pop
fs
dec
das
inc
adc
xor
jno
int3
out
sti
aam
movsb
fnstsw
mov
mov
jbe
dec
aad
sbb
ss
popa
jb
int3
enter
outsl
mov
ja
inc
pop
scas
xchg
jnp
xor
loop
mov
xorl
mov
faddp
stc
push
or
add
stc
xor
fimull
push
mov
inc
add
mov
fisubrs
mov
and
loope
nop
dec
mov
pusha
movsl
fmull
xchg
sbb
aam
movsb
lods
jne
ds
das
xchg
sbb
sub
inc
repz
adc
push
mov
idiv
push
lahf
add
pusha
xchg
pop
cmp
js
push
lahf
push
out
loop
lahf
push
mov
dec
divb
jb
dec
mov
shrb
jmp
outsl
or
or
inc
adc
loopne
sahf
loope
mov
std
jno
std
mov
and
fnstcw
xchg
inc
mov
ret
rorl
mov
xor
lds
pop
fstp
movsb
scas
movsb
mov
test
ljmp
sbb
sub
cmp
xchg
test
int
fsts
cwtl
and
mov
pushf
jno
int
ss
sub
adc
mov
cli
pop
and
or
cmp
xlat
xor
cmc
pop
psubq
sbb
push
xchg
or
dec
pop
scas
pop
jg
pop
ja
bound
nop
sub
jl
es
data16
pusha
subb
subb
pop
es
sub
push
sub
cltd
and
cmp
scas
testb
push
or
pop
scas
adc
xchg
gs
push
jbe,pn
dec
adc
jb
rol
xor
ret
addr16
xor
pop
push
jl
std
mov
push
ja
pop
push
stos
inc
out
imul
jae
add
cmpsl
out
dec
lahf
cmc
out
movsl
dec
push
lods
xchg
or
test
ret
mov
gs
ret
test
dec
push
ds
data16
popl
sbbb
int3
xchg
iret
repnz
push
int3
sub
dec
int
fdivs
xor
loope
out
dec
call
mov
xor
pop
jbe
mov
adc
aad
clc
ja
and
popf
sti
mov
pusha
pushf
push
sub
or
insl
scas
mov
es
lcall
xchg
mov
xchg
xchg
mov
rorb
pop
ds
lea
ss
push
inc
rolb
xor
mov
call
sub
mov
xor
adc
out
or
xchg
dec
jge
and
mov
cld
leave
and
ds
outsb
stos
loope
daa
add
sbb
and
jae
jmp
push
dec
stos
pusha
jae
cmp
pop
ss
push
adc
push
cmp
inc
xchg
inc
leave
insl
stc
jnp
jmp
cwtl
jl
icebp
jmp
mov
fwait
testb
mulb
subl
pop
sbb
cmp
adc
out
inc
jbe
lods
subb
insb
daa
cli
and
aaa
jecxz
adc
inc
mov
mov
mov
and
mov
out
stc
out
fwait
pop
and
inc
mov
lahf
loope
rcrb
sbb
fcoml
adc
or
mov
into
xor
and
jne
sti
shll
insl
xchg
imul
addr16
rcrb
mov
lret
jne
inc
shlb
dec
aam
sahf
adc
xlat
sub
inc
add
cs
stos
fucom
push
sub
fstps
fwait
xor
pop
repnz
enter
mov
jle
inc
adc
int
in
scas
jg
xor
mov
adc
es
cld
or
sahf
mov
repnz
and
sbb
ds
adc
push
cmp
fstps
or
stos
movb
call
int3
daa
add
fbld
outsb
cmpsb
push
jl
loope
stc
sar
cmp
shrb
lret
mov
mov
add
data16
sbb
mov
push
sbb
insl
sub
mov
push
inc
loopne
mov
loop
sbb
out
andb
data16
sub
flds
test
dec
xchg
popf
sbb
jb
adc
jbe
and
fcmovu
fucomi
and
xchg
aaa
and
mov
dec
lret
test
inc
cwtl
shll
out
cmpsb
lahf
imul
mov
popa
push
fucomip
in
aas
shl
pop
inc
int3
xor
les
jmp
cmp
jne
pusha
sysexit
pop
jns
sbb
add
jno
aas
loopne
xchg
movsl
pop
js
ljmp
xchg
adc
and
mov
mov
std
sub
xchg
add
dec
sbb
xchg
sbb
loopne
popa
ficomps
mov
rol
ss
mov
add
aam
jne
shll
and
mov
push
jmp
and
or
loopne
cmpsb
pop
out
lcall
mov
int
and
mov
mov
or
cmp
sbb
in
lcall
push
push
inc
pop
xchg
mov
test
fs
jg
pop
jle
or
lcall
xor
jg
push
data16
jbe
xor
mov
or
add
inc
add
or
pusha
jnp
xor
jle
xor
pop
scas
xlat
in
jge
sbb
xchg
push
mov
rcrb
push
mov
aaa
pop
in
cli
fucomi
outsl
test
in
push
mov
out
das
test
gs
cld
mov
fucomi
pop
adc
fbld
inc
in
insl
call
adc
mov
mov
cmp
mov
lods
push
jle
sahf
lahf
mov
js
mov
leave
je
ljmp
jp
loop
fcmove
add
sbb
jnp
out
push
js
iret
lock
mov
lea
outsl
dec
inc
int
push
ss
arpl
ret
inc
jnp
bound
int3
test
add
outsb
pop
repnz
cwtl
nop
sub
fwait
mov
popa
jp
mov
lock
jb
or
push
push
adc
and
hlt
adc
vxorps
xchg
nop
sub
jg
movsb
jae
jbe
mov
dec
fnstsw
in
cltd
bound
jnp
scas
in
out
dec
stos
ljmp
and
imul
cmp
out
dec
jmp
jmp
fmuls
gs
lods
cld
fdivl
pop
repnz
pop
jecxz
pop
mov
aad
test
mov
adcl
pop
mov
jno
scas
mov
inc
sbb
lock
addr16
push
in
sub
mov
shlb
push
ja
or
cs
cmp
pop
popa
cld
punpckldq
xchg
pop
pop
dec
mov
movsb
and
ja
jnp
cmc
mov
loop
sbb
add
loop
inc
stos
and
jl
sbb
mov
mov
cld
fcompl
icebp
fmul
les
jns
and
cwtl
aam
out
push
das
imull
push
push
insl
mov
les
int3
int
adc
xlat
mov
pop
mov
mov
pop
add
iret
pop
mov
mov
hlt
pop
das
or
ret
fildl
dec
and
adc
bound
repnz
sbb
pop
mov
mov
dec
mov
lahf
cmp
xchg
mov
test
icebp
add
fadds
and
mov
ljmp
scas
inc
dec
xlat
das
xchg
jnp
and
jg
sbb
jmp
sbb
fwait
rclb
push
or
test
and
scas
das
or
inc
rcll
cli
inc
jle
mov
mov
subb
ret
xor
push
mov
inc
int3
or
jge
mov
or
icebp
test
and
loopne
daa
cwtl
cmc
cmpsl
int3
popf
dec
lods
fistl
inc
pop
dec
add
sub
aad
std
in
std
mov
mov
cmp
mov
sbb
enter
sub
out
mov
insb
enter
sbb
push
xor
xor
lahf
xchg
ds
jo
add
dec
orb
jno
jae
dec
inc
dec
lcall
outsb
jns
enter
xchg
icebp
cmp
fisttps
data16
dec
xchg
lret
cs
icebp
in
dec
popf
jg
inc
imul
sbb
push
cmp
ljmp
cmp
test
js
lahf
push
repnz
pop
xchg
add
in
idivb
pusha
jbe
pushf
fstl
pop
stos
or
daa
insl
fisubl
or
pop
and
ficoms
and
dec
pop
add
pop
mov
popf
ljmp
cld
mov
imul
cltd
pop
adcb
add
imul
enter
xchg
cmp
js
lods
cld
mov
or
push
aaa
outsb
fwait
xor
add
pop
roll
fwait
mov
push
mov
pop
mov
call
lods
push
add
loop
or
out
push
test
pop
push
mov
dec
push
mov
xchg
push
jge
jge
cmp
les
ds
enter
cmp
push
js
cmc
xchg
cmp
fbld
and
inc
cmp
ds
fmuls
inc
jmp
nop
sbb
lock
sub
cmp
cmp
xor
push
cmp
lock
imul
sub
adc
push
add
lods
cmp
mov
push
cltd
cwtl
out
mov
jno
cmp
std
fistps
sub
xchg
push
sub
ficoml
fidivrl
pop
fwait
mov
add
repz
cmpsl
lods
push
mov
fldt
repz
lret
pop
and
dec
int
sub
hlt
mov
add
int3
add
jne
ss
xchg
jne
push
mov
mov
arpl
adc
pop
inc
add
or
dec
sahf
pop
add
int
jge
test
lcall
stos
mov
mov
cmp
sahf
dec
xor
sbb
push
and
bound
jmp
cmp
mov
xor
hlt
push
push
vmwrite
addr16
xchg
stos
jmp
js
xor
sbb
mov
testb
movsl
jns
pop
or
repnz
sbb
push
mov
mov
cmp
gs
jg
push
clc
and
cld
addl
js
shrb
das
rolb
xchg
imul
inc
mov
bound
push
std
int3
push
in
cmp
and
leave
xchg
test
cs
xchg
pop
movhps
loopne
cmp
rcrl
movsl
xor
mov
mov
sbb
sbb
popa
push
es
cmc
stos
push
sbb
or
cmpsb
mov
dec
into
adc
ja
aad
add
nop
repnz
push
cmp
nop
jp
mov
xor
and
push
das
and
repnz
arpl
inc
xchg
loopne
xlat
lcall
or
movntps
push
cmpsl
aaa
imul
sbb
push
cmp
push
enter
ljmp
and
je
in
mov
ret
push
loope
ljmp
mov
jge
pop
push
aas
sub
or
nop
jnp
cli
rolb
pop
mov
xchg
inc
test
pop
sbb
mov
mov
inc
cmp
jecxz
jg
repnz
fwait
xchg
xchg
sbb
cwtl
test
insl
sub
in
lret
call
or
rolb
push
cmpsl
mov
mov
loop
jg
or
lret
jo
add
cmp
stos
outsl
xor
push
cli
xchg
mov
adc
ja
push
icebp
fstpl
jo
lea
add
aam
lods
xlat
mov
fsts
pusha
inc
fwait
push
aas
or
aad
dec
shrl
sbb
sbb
pop
or
jb
hlt
xchg
xchg
test
push
icebp
fdivl
cwtl
subl
out
xchg
pushf
sbb
fdiv
cmp
outsl
imul
loopne
mov
jg
dec
repz
mov
pop
mov
daa
les
add
sub
cmpsl
mov
xchg
mov
and
pop
jnp
xor
inc
je
cmp
push
xor
pop
inc
adc
mov
bound
mov
out
add
ja
xchg
mov
mov
out
mov
dec
mov
vmovhpd
add
cmpb
inc
dec
add
test
icebp
rclb
insl
mov
cmp
cli
xor
mov
dec
xchg
arpl
push
inc
pop
mov
ds
adc
int
fdivl
mov
aas
pop
lods
lret
mov
dec
add
mov
repz
test
push
push
je
xor
adc
cwtl
xchg
outsb
mov
sbb
cmpsl
mov
int
mov
xor
inc
add
ds
movsl
sbb
sub
test
mov
cmp
mov
push
insb
mov
or
mov
js
mov
push
jle
hlt
cmp
movsb
out
jb
xchg
js
paddsw
mov
into
inc
stc
hlt
mov
adc
mov
test
or
inc
push
mov
pushf
jno
in
loop
xchg
and
cmp
dec
out
xchg
hlt
sahf
xchg
and
jns
pop
pushf
mov
push
xor
pop
xchg
push
lcall
pop
adc
loop
mov
pop
insb
loopne
pop
adc
gs
fwait
nop
or
pop
push
fdivr
or
sub
pop
orl
push
mov
ss
xor
push
sub
dec
cwtl
jbe
rcrb
jp
and
mov
xchg
cmpsb
jo
sub
push
jb
mov
add
arpl
daa
and
xchg
xor
lds
pop
test
ficoms
movsb
mov
frstor
pop
outsb
sbb
sub
inc
enter
xor
push
cwtl
das
xchg
cmp
mov
mov
push
lret
and
lock
and
sbb
sub
int
pop
insb
cmp
inc
test
sub
mov
aaa
cmp
inc
jge
sbb
mov
or
xchg
sbb
dec
fisttpll
cmp
adc
pop
sbb
in
add
sub
rorb
in
cltd
aam
sbb
mov
loopne,pn
loop
push
mov
xchg
pusha
mov
lret
xchg
aam
or
shrb
addr16
cli
aad
rcll
and
lods
sti
cmp
out
jge
push
jbe
scas
mov
push
mov
xor
shrb
daa
stos
dec
cltd
sbb
fwait
pusha
rorl
fisubs
add
cs
dec
negb
inc
outsl
jns
or
jbe
fcoms
imul
shlb
xor
clc
cmp
faddl
or
mov
lcall
pop
js
stos
jns
popa
adc
inc
or
rolb
sbb
inc
fiaddl
stc
xlat
dec
sub
loope
xchg
int
test
jp
xchg
hlt
stos
rcll
mov
inc
xor
loope
add
mov
sub
add
je
push
sbb
and
mov
out
mov
lods
mov
adc
cmp
stc
or
inc
mov
les
inc
arpl
jp
and
xchg
out
loop
jo
rorb
push
mov
pop
xor
enter
in
and
scas
jmp
daa
xchg
imul
cs
mov
sub
jb
push
ret
inc
cmp
xchg
xor
int
mov
xor
scas
push
out
lahf
jno
or
stos
bound
xchg
cmp
mov
fdivs
and
in
inc
imul
das
xchg
adc
out
lret
push
and
out
cmp
push
lods
sub
jnp
xchg
sarl
movsb
push
adc
adc
ljmp
call
lds
dec
ss
push
outsb
fbstp
cmp
xchg
inc
sub
push
jle
push
add
fcoms
fists
xchg
subl
shr
push
add
and
xor
in
push
lret
cmpl
pop
loopne
gs
leave
pop
mov
adc
bts
dec
jnp
pop
repnz
add
ja
jno
clc
jns
lods
out
hlt
lods
or
fldt
aad
mov
mov
shll
mov
or
pop
mov
movsl
push
jmp
imul
in
mov
lcall
insb
fwait
push
mov
lret
sti
pop
mov
mov
dec
loop
dec
dec
aam
sbb
leave
ret
fucomp
lods
pop
sub
push
xchg
loope
cmpb
pushf
fistps
into
in
aam
xchg
cli
std
xchg
pop
xchg
fildl
inc
push
fdivs
lret
mov
in
es
or
adc
lods
scas
push
out
roll
sbb
ret
cmp
aas
lock
pusha
jp
cmp
sti
mov
or
lods
mov
repnz
cmp
xor
enter
rcl
push
out
dec
dec
stos
mov
call
and
std
pop
jge
mov
jecxz
sub
jb
jle
bound
dec
mov
jno
and
mov
inc
repz
cmp
ds
ja
lahf
xor
bnd
xchg
cwtl
movsl
gs
fdivr
push
or
or
stos
loopne
add
dec
lea
outsb
mov
xchg
sarb
test
cmp
shl
dec
or
fisubs
and
leave
mov
sub
testl
jo
xor
and
adc
out
stos
xchg
imul
scas
jl
sbb
movsl
daa
inc
rcrl
dec
jns
arpl
adc
sub
sti
ja
xchg
mov
lods
jp
scas
xlat
int3
xor
xor
xor
int
lods
and
in
ret
push
mov
add
sub
add
add
fidivrs
out
sbb
cmp
cltd
dec
rcrl
xor
pop
adc
ret
jge
cmc
pop
adc
testl
ficomps
ret
cmp
lret
ljmp
int3
push
rolb
loopne
mov
lock
lret
shll
int3
sar
and
sbb
xor
aas
and
mov
rclb
pushf
out
push
nop
mov
xchg
mov
ds
pusha
scas
cmc
arpl
lret
xchg
aaa
jo
shrl
imul
mov
xchg
mov
pop
mov
scas
xor
jne
mov
outsl
push
pop
jb
mov
lock
fimuls
orb
cmpsl
cmpsb
add
push
jae
sbb
movsl
dec
add
and
add
cli
fsubl
push
inc
inc
cmp
inc
mov
and
loope
adc
aad
cltd
mov
pop
jl
imul
cs
push
js
inc
add
fisubl
stc
stc
pop
jge
lods
cmp
jno
add
inc
pop
cmp
push
xor
mov
add
jecxz
negb
xchg
mov
test
sbb
pop
xchg
fs
mov
mov
shll
dec
into
scas
std
inc
bound
pop
pop
lret
call
adc
movsb
ds
jb
mov
xlat
jmp
mov
dec
shrl
outsb
mov
push
data16
outsb
in
dec
pop
cmc
xor
loope
iret
and
ljmp
mov
test
repz
sub
mov
clc
mov
ja
iret
xchg
sarb
cmovp
je,pt
jmp
add
mov
lods
inc
rorb
jmp
push
lahf
push
push
test
les
pop
mov
or
in
stos
gs
mov
cltd
pop
andps
lea
and
push
nop
or
outsb
inc
dec
jnp
push
outsb
fnstcw
enter
ret
add
adcl
mov
adc
dec
int3
sub
add
ret
mov
fstpt
adc
pop
or
stos
add
mov
test
mov
test
shl
mov
add
xchg
ja
push
jnp
cs
inc
jle
or
and
idivb
mov
hlt
insb
xor
jg
pop
in
notb
addr16
out
sub
push
adc
stos
pop
shr
dec
jmp
and
xor
sub
mov
jp
push
inc
adc
jae
xchg
fst
or
jb
in
insb
push
stc
std
jecxz
pop
pop
daa
repz
in
pop
pop
jne
cwtl
sbb
mov
xlat
lods
and
out
mov
push
sub
xor
test
mov
add
or
fprem
pop
add
cmc
inc
cld
add
imul
daa
leave
test
xor
xor
cli
loopne
cwtl
inc
push
push
xor
cmp
sbb
lret
ret
xchg
dec
xchg
aas
xor
jnp
adc
mov
jno
pusha
sbb
pop
mov
push
xchg
fwait
sbb
add
add
lods
xor
add
lods
ret
mov
sub
pop
fisttpll
loopne
mov
insl
vpavgb
sbbw
icebp
mov
mov
pop
cwtl
inc
mov
cmp
mov
pop
sbb
sahf
sub
sahf
daa
push
mov
je
enter
cltd
mov
in
sti
inc
dec
push
insb
pop
pop
push
andl
adc
mov
mov
jbe
cwtl
jo
aaa
jg
punpckhbw
inc
adc
or
negl
mov
inc
scas
xchg
jl
nop
movsl
pop
jnp
xlat
inc
sbb
pop
push
movl
repz
add
or
add
stc
fwait
bound
insl
and
pop
jne
adc
ljmp
iret
and
sub
pop
adc
cmp
lret
sub
xchg
cmc
add
mov
mov
icebp
ljmp
jge
test
mov
inc
jl
lds
movsb
pusha
jbe
xor
repnz
add
sbb
sub
stos
cmp
sub
lret
test
clc
add
jae
outsl
push
loop
stos
sbb
xchg
add
stc
addb
push
bound
push
sbb
fimull
icebp
ds
mov
pushf
mov
or
sub
into
test
dec
adc
xchg
lcall
testb
ljmp
es
mov
xchg
push
test
jns
int3
jb
popf
hlt
sub
cmp
inc
pop
push
sbb
push
into
and
push
dec
mov
jno
imul
testb
jg
jb
fnstcw
mov
mov
clc
and
rolb
jg
mov
mov
adc
and
aad
sub
inc
mov
xor
mov
int
xchg
out
push
movsl
xchg
cs
mov
cwtl
movsl
lahf
out
dec
lods
add
stos
je
jmp
pop
xor
dec
movsl
andl
stos
xchg
jg
xor
lret
mov
imul
jge
cmp
adc
es
xlat
and
roll
mov
out
pop
dec
cmp
dec
xor
push
dec
mov
jbe
gs
push
mov
xor
cltd
sub
mov
mov
mov
and
cmp
mov
mov
xor
sbbl
iret
aaa
pop
fsts
mov
lahf
mov
rclb
mov
sub
and
mov
adc
jns
imul
sub
es
jge
push
flds
mov
lret
mov
pop
imul
imul
pop
xor
ss
xorb
mov
jbe
sti
push
cmpsl
pusha
inc
out
out
cmp
cld
jno
pop
or
mov
dec
add
adc
xchg
adc
fs
insl
addb
cmp
jne
pop
pop
enter
pop
and
cmpsb
fists
aad
jle
lret
call
xchg
imul
gs
dec
or
js
imul
pop
lods
xor
mov
pop
fwait
imul
xchg
adc
int
push
xchg
cmp
add
xchg
xchg
xchg
gs
jge
mov
push
loop
mov
jg
dec
or
jnp
dec
out
cld
clc
jns
dec
jl
mov
stos
clc
in
add
cmp
clc
call
data16
in
jmp
push
xchg
push
xchg
push
sbb
popa
dec
xor
imul
add
jo
aam
and
fnstsw
mov
loop
mov
jnp
insb
test
mov
jb
hlt
loope
jb
in
cwtl
mov
xor
nop
loope
mov
adc
mov
push
scas
rcl
mov
aam
in
add
adc
dec
mov
and
sbb
imul
push
dec
mov
repnz
and
mov
xor
jnp
mov
push
lret
jmp
dec
mov
mov
in
mov
loopne
jecxz
jmp
outsl
out
lea
popa
pop
out
or
jne
movsl
or
pop
cmc
cmp
jp
mov
shll
mov
add
insl
fisubrs
cmp
test
cli
and
pop
aam
addr16
mov
and
into
aaa
sbb
mov
sahf
sbb
sub
dec
cmp
dec
xchg
add
lret
addr16
inc
ljmp
pusha
mov
outsb
cmp
sbbl
mov
lahf
push
ss
pop
xchg
pop
push
lcall
add
fildl
xchg
subb
jge
vcvtsi2sdl
lret
out
inc
or
addl
jecxz
adc
mov
pusha
push
cmpsb
repnz
inc
nop
ret
cmp
push
loopne
mov
fsts
xchg
rol
mov
mov
in
test
pop
roll
mov
movl
das
flds
xor
ds
dec
pop
test
inc
jnp
add
inc
fsubs
mov
call
lret
dec
mov
jmp
inc
pop
mov
xchg
xor
cmpsl
xor
stos
xchg
incb
mov
cmp
sarb
rorb
out
mov
call
popa
push
pop
call
fwait
enter
push
sub
ficomps
xchg
sbb
fimuls
addr16
mov
in
push
les
or
rorb
call
das
or
dec
push
test
xchg
js
sub
push
xor
xlat
sub
mov
icebp
mov
aas
inc
shrl
adc
gs
push
xor
je
push
cmp
jl
faddl
mov
mov
mov
arpl
pop
push
add
les
add
ret
fs
clc
mov
lods
pop
movsb
scas
ficoml
mov
int3
out
push
scas
shrb
aas
mov
or
jnp
xchg
pop
push
loope
push
xor
jg
dec
mov
icebp
hlt
dec
int3
add
xchg
push
mov
mov
lret
or
cmp
push
into
push
mov
jo
daa
dec
mov
imul
xor
mov
cmp
pop
out
inc
shr
cltd
repnz
push
imul
mov
sti
dec
fcomi
shrb
mov
cmp
xchg
clc
xchg
mov
ds
jg
and
push
or
sbb
pop
imul
dec
sahf
rcll
xlat
mov
mov
ret
pop
sub
aam
lret
xchg
nop
test
mov
inc
jns
add
pop
shr
repnz
or
loop
mov
xor
in
icebp
jb
imul
cmp
and
mov
add
cmpb
adc
mov
mov
outsb
in
enter
cmp
out
nop
lods
xchg
lods
pusha
aas
fstpl
cmp
aad
test
sub
jmp
int
sub
mov
sbb
xchg
fnstsw
arpl
aas
mov
jno
das
sbb
cmp
pusha
out
mov
mov
xor
stc
sub
std
pop
repz
test
or
push
mov
icebp
imul
nop
lods
xchg
mov
dec
sti
enter
lds
aad
mov
cmc
sbb
xor
ljmp
add
test
adc
dec
sbb
and
adc
divl
xor
iret
pop
or
sbb
xchg
cmova
add
push
in
sahf
mov
jge
mov
inc
stc
push
cmc
mov
popa
ss
push
inc
scas
lods
or
add
cltd
jne
iret
pop
int3
lods
add
mov
loope
call
fisttps
test
cmp
sti
jns
adc
sbb
test
aam
or
xor
mov
int3
xor
out
pop
sarb
inc
and
jp
loop
lret
daa
pushl
sahf
jbe
daa
shlb
nop
hlt
mov
push
inc
sarl
aas
add
stos
cltd
adc
push
imul
push
clc
lcall
mov
push
dec
popa
insl
add
aaa
mov
or
test
lret
adc
push
stos
rcr
ja
mov
test
push
mov
mov
push
icebp
push
and
sbbb
rol
jae,pt
mov
and
and
and
dec
push
fnstcw
lcall
inc
or
pushf
fstl
mov
push
fnstenv
dec
pop
stos
xchg
js
fsubrs
jo
mov
sbb
xchg
test
leave
cmp
xor
pop
aas
mov
jno
pop
cmpsb
sti
sarb
and
inc
or
sub
and
insl
dec
xchg
in
mov
aaa
or
lret
repnz
mov
sub
push
xor
sub
push
pop
gs
lods
fadd
aaa
dec
jp
psubusw
dec
xchg
mov
adc
icebp
push
stos
pop
mov
pop
sub
shr
pop
cmp
jnp
dec
sub
jnp
xchg
movsl
jp
nop
cld
pop
mov
ror
js
xor
jo
add
or
ficoms
xor
xchg
int
les
cltd
shrb
ljmp
test
aam
jns
mov
inc
adc
mov
aas
cmpsl
ds
leave
pop
mov
cmpsb
xchg
cmp
or
shlb
pop
into
jmp
pop
lea
fimull
sub
sub
loop
add
jg
loopne
notb
pop
pop
je
popf
movsb
mov
jl
testl
mov
mov
arpl
imul
jo
lods
and
xchg
gs
icebp
cmp
mov
sbb
jmp
imul
cmp
mov
scas
loopne
jne
mov
jmp
jbe
cwtl
dec
mov
call
mov
mov
popa
aam
xor
cmpsb
cs
daa
mov
push
push
inc
mov
mov
fnsave
xor
mov
or
hlt
sub
mov
xchg
arpl
adc
inc
fnsave
push
cli
and
adc
xlat
push
mov
icebp
mov
cmc
push
repnz
xchg
lret
outsb
inc
inc
mov
cmpl
outsb
fs
fisubrl
or
popa
xor
xor
incb
adc
scas
movsb
xchg
xchg
ret
mov
push
inc
adc
adc
adc
cmp
scas
lea
and
jge
outsl
inc
sub
cmp
adc
cmp
adc
jp
xor
mov
pop
jbe
push
push
sbbl
xchg
int
loop
enter
xchg
or
dec
movsl
mov
hlt
lds
xorl
jecxz
dec
imul
push
shll
mov
jg
dec
out
or
mov
jle
filds
adc
mov
xchg
sahf
fildll
movsb
dec
mov
aas
shrb
jnp
jmp
push
stos
ss
cmp
aad
dec
cmp
pcmpeqw
in
aad
lea
movsl
data16
pushf
int
fcompl
mov
push
sbb
cmp
call
pop
mov
lea
shll
cmp
cltd
nop
mov
mov
mov
or
cmp
sub
cli
pop
mov
xchg
sti
movsl
xchg
add
push
adc
push
or
mov
lods
dec
push
xor
xchg
insb
out
and
jns
sbb
jo
int3
lock
push
cmpsl
sbb
mov
loopne
stc
dec
xchg
fldt
mov
dec
cmc
call
shll
pop
shlb
sub
outsl
imul
test
mov
sbb
jge
shlb
jns
xor
or
adc
test
pop
inc
in
fwait
aam
nop
frstor
bound
sbb
push
jb
xor
popa
mov
mov
mov
mov
test
ret
xor
iret
insl
sub
sub
icebp
mov
push
mov
sbb
addl
inc
andb
and
mov
xor
les
push
jl
sarl
imul
int
in
push
add
cmpsb
pop
cltd
xchg
or
xchg
jne
ficoms
out
push
cmc
push
mov
mov
ss
push
pop
mov
lds
bound
or
mov
fs
add
aam
push
and
dec
or
and
je
enter
jmp
movsb
xchg
pop
stc
pop
mov
xor
pop
fs
add
xor
inc
mov
lds
scas
adc
adc
pop
cmp
imull
pop
loop
inc
sahf
sahf
loope
sbb
addb
push
adc
dec
mov
out
mov
ja
in
or
movsl
leave
movsl
and
adc
mov
iret
sarb
gs
int3
rolb
add
xchg
int
adc
mov
addr16
cltd
int3
pop
imul
mov
aas
test
jge
into
in
shl
data16
lock
xor
stc
push
push
cld
ja
test
add
sub
mov
setbe
lahf
push
xchg
aaa
test
cmp
push
pushf
insl
jmp
loope
xchg
cmp
cmp
popf
in
jle
and
aaa
xchg
scas
enter
jecxz
add
xlat
in
adc
xor
pushf
jne
cmc
pusha
fmuls
sbb
rorl
stos
ljmp
popa
inc
or
pop
ret
pop
mov
fisubrs
dec
xchg
outsb
dec
jns
es
xchg
xlat
pop
rorb
push
mov
sub
jecxz
jb
test
mov
or
js
mov
cld
test
or
push
insb
lock
push
mov
sub
inc
mov
ds
jge
xchg
sbb
movl
insb
sub
push
aaa
fnsave
enter
push
sti
pop
int3
dec
or
and
add
lahf
fsubrl
fcom
scas
jno
and
mov
fisubs
fldcw
ljmp
jmp
out
sahf
divb
repz
add
fwait
dec
push
ljmp
xchg
mov
xchg
scas
pop
insb
stos
mov
lea
pop
aad
and
cmc
or
lret
push
out
mov
dec
mov
repnz
pop
jmp
sti
ja
pop
repnz
add
xor
repnz
outsl
insl
xor
mov
mov
push
mov
rclb
shl
orl
dec
sti
mov
pop
pop
arpl
out
or
sbb
mov
stc
lds
lds
xchg
ljmp
out
ja
xor
shl
dec
in
mov
push
dec
pop
hlt
dec
ret
cmp
lret
xchg
lods
dec
adc
ret
das
sbb
lea
cwtl
rorb
cli
shll
dec
push
mov
cmpsl
mov
stos
in
jno
aam
pop
mov
mov
fisubs
adc
ds
mov
jg
cmp
or
in
push
rcll
adc
inc
jo
hlt
stos
ljmp
sahf
sub
dec
test
lret
mov
jmp
mov
mov
stc
jae
or
jbe
jo
sbb
mov
sub
and
adc
clc
mov
mov
pop
xor
jns
cld
mov
pop
pop
mov
and
aam
fmull
outsb
fists
testl
sub
enter
test
mov
mov
ret
push
loop
fs
popf
cmp
inc
out
or
imul
popa
es
test
mov
and
into
or
mov
rcrl
leave
lds
cli
jmp
and
or
xor
jns
test
sbb
addb
jb
lods
xchg
jae
clc
clc
sahf
push
sub
lds
mov
adc
adc
icebp
fsts
jg
cli
pop
les
and
ja
mov
jmp
sub
jle
fwait
jo
push
stc
in
iret
fisubs
stos
jg
cltd
icebp
cltd
popa
out
aad
in
out
bound
mov
mov
push
pushf
dec
daa
and
xchg
jecxz
mov
in
add
pop
je
fists
push
ss
pop
xlat
add
fnstenv
add
mov
sahf
mov
insb
jae
sub
mov
fistps
int
cmp
xchg
out
mov
adc
and
sbbb
sti
push
out
lret
pop
mov
cmpsb
arpl
adc
dec
mov
dec
fistpl
xor
inc
pop
js
out
jae
inc
push
sti
scas
add
sub
daa
adc
popa
scas
jno
sub
cmp
lods
mov
aad
test
pop
lods
xchg
or
xchg
jg
fsts
loope
mov
jmp
xor
lds
cmp
lcall
sti
dec
stos
cmp
xchg
popf
push
dec
dec
pop
outsl
push
fisubrl
fs
or
leave
pop
jns
clc
shl
test
mov
sub
mov
xor
les
or
cld
movsl
mov
push
scas
pop
cli
jmp
idiv
pop
sbb
aaa
cmc
das
and
repnz
and
pop
in
inc
push
sub
mov
out
mov
test
push
mov
jo
pop
mov
dec
shr
mov
negb
test
das
inc
in
add
or
xor
insl
out
dec
stos
data16
outsb
add
pop
popa
adc
rorl
pop
lds
lods
pop
pop
ja
xor
sarl
cmpsl
and
imul
push
mov
jg
in
or
xor
aad
movl
mov
mov
ja
push
mov
jl
pop
mov
adc
push
push
mov
mov
pop
bound
pop
sbb
adc
repz
call
mov
lock
and
mov
jl
push
jecxz
mov
cmpxchg
push
aaa
inc
pop
push
or
aad
pop
dec
cli
pop
fsubrs
int3
jae
sar
in
fmulp
and
xchg
repnz
pop
xlat
add
test
ds
push
dec
mov
cmp
jge
mov
lds
sti
mov
ds
bound
adc
mov
sbb
hlt
add
and
xchg
adc
xchg
loop
mov
sub
ja
and
or
stc
mov
sahf
adc
jp
sbb
mov
icebp
xlat
repnz
dec
sbb
adc
jmp
sbb
lods
mov
movsb
cmp
stos
adc
stc
push
shrb
push
and
adc
mov
shll
popf
mov
jo
push
into
push
or
sub
imul
cmc
dec
orb
ss
loop
pop
int
pusha
out
aaa
aam
ljmp
dec
mov
lret
inc
movsb
cld
fcmove
mov
add
sub
inc
jb
push
xor
enter
add
fld
pop
inc
aaa
ror
mov
xor
in
dec
adc
sub
in
lock
or
loop
mov
lea
lock
jp
inc
sti
pop
test
pop
inc
stos
testl
pop
xchg
pop
movsb
sub
mov
out
andb
insb
dec
ss
inc
dec
jns
xor
push
cmp
xchg
fwait
sub
sub
rclb
push
xor
push
lret
imul
ret
ret
xor
ss
fnstsw
and
movq
notb
mov
xchg
and
sbb
cltd
add
ds
and
fldenv
jo
dec
jmp
sub
loopne
cli
inc
inc
mov
adc
popf
loope
jmp
addr16
jae
pop
nop
or
jbe
sub
mov
xor
mov
xchg
fldt
data16
insb
into
pop
int3
fwait
mov
xchg
ja
and
bound
sbb
mov
std
imul
push
pushf
jbe
or
sbb
inc
fucomip
mov
fistpll
or
cmp
dec
cld
cld
add
test
dec
jb
jnp
push
icebp
repz
and
cmpsl
jns
mov
adc
jo
dec
in
bound
lcall
jl
daa
jge
mov
inc
cmp
gs
insb
addr16
cmp
pop
insl
stos
outsl
mov
jo
fidivs
pop
fs
inc
jae
outsl
push
enter
in
test
nop
and
lds
ss
bound
rcr
cmp
cmc
sbb
inc
sbb
int3
and
inc
scas
out
add
sub
inc
jmp
mov
pop
fldenv
mov
cmp
and
cmc
aaa
divb
or
mov
jno
stos
pop
test
test
xchg
daa
sbb
fsts
mov
in
bound
and
sbb
dec
in
repz
ljmp
mov
pop
ljmp
out
cmp
mov
mov
pop
popa
lea
mov
in
mov
orl
xor
scas
test
arpl
xchg
pop
loope
mov
outsb
loop
pop
cmpsl
push
mov
jne
call
in
out
ret
pop
ja
fldl
adcl
jle
shrb
dec
mov
in
push
icebp
leave
inc
mov
adc
pop
cmp
pop
jne
lock
adc
dec
mov
pop
mov
push
dec
jmp
cmp
and
or
xor
jecxz
shll
pop
push
sub
mov
push
push
loop
int
inc
sbb
cmc
out
test
mov
out
out
dec
cmpsl
cwtl
in
inc
roll
cld
adc
pop
pop
push
ret
jecxz
jg
add
in
mov
rolb
cs
or
clc
jmp
nopl
lahf
xchg
andb
lock
and
nop
popa
ret
mov
fadd
and
inc
mov
adc
test
jle
int
xchg
adc
fiadds
cmp
pop
inc
mov
pop
cld
jo
test
sbb
cmp
mov
pop
jns
sub
inc
jno
lret
ret
sub
xor
ds
rcrb
cmpsb
cmp
xchg
mov
test
fidivrs
dec
leave
jecxz
and
dec
adc
inc
cmp
push
cmp
lods
mov
add
ret
mov
add
aaa
add
in
stos
rorb
dec
lods
xor
dec
xchg
adc
jle
jmp
fs
and
and
jo
xchg
rcl
add
fldz
dec
sbb
push
or
aad
idivl
imul
loope
jmp
mov
xor
add
scas
fsubrl
inc
mov
mov
lcall
push
inc
ljmp
xor
cs
mov
cmp
fs
mov
repnz
dec
add
idivb
fnstsw
xchg
adc
mov
leave
lods
dec
push
jae
sub
mov
push
ret
mov
dec
ret
in
or
movsb
inc
into
icebp
rorl
outsb
iret
and
shrb
rclb
cli
js
out
jle
mov
stos
xchg
inc
dec
mov
mov
movsb
dec
xor
imul
aad
mov
xchg
jae
pop
scas
sub
fdivr
movsb
xor
test
cmpsl
jmp
mov
jno
movsb
jmp
cmp
out
dec
aam
jns
xchg
fsubr
add
icebp
clc
test
mov
pop
int
cmp
into
adc
sub
push
dec
call
into
pusha
cmp
push
imul
ud0
pop
inc
mov
jne
adc
mov
addr16
std
dec
mov
sbb
in
xor
xchg
add
xor
pop
in
push
ror
hlt
mov
mov
stc
call
xor
movsl
call
pop
lret
mov
push
push
jno
pop
push
or
stos
mov
sub
adcl
mov
sbb
lock
mov
dec
icebp
push
mov
adc
sub
xor
clc
cmp
stos
mov
dec
pushf
js
mov
inc
and
stos
sub
adc
test
cli
cmp
int
in
lret
shrl
repnz
mov
test
dec
lahf
sbb
enter
rorb
scas
subl
cltd
cmp
lods
popa
packssdw
andl
stos
jae
dec
in
les
dec
in
rcrl
xor
cmpb
push
lcall
jg
sbb
or
pop
in
cmp
ds
fwait
mov
add
scas
xchg
jne
in
and
pop
jge
imul
jne
hlt
mov
xor
fcomps
cmp
mov
pop
jp
pop
or
out
sub
mov
es
stos
mov
jge
pop
push
lea
roll
lret
mov
bound
lods
mov
vminpd
sub
leave
inc
mov
cmp
dec
mov
cmp
cmpsl
mov
xor
inc
test
and
mov
insl
mov
xchg
mov
push
pushf
add
rol
jns
icebp
test
loope
sar
ds
xor
cs
leave
loop
jne
xor
xchg
jg
jmp
or
in
aaa
loop
loope
push
xor
adc
mulb
or
icebp
jns
add
inc
mov
push
adc
cmp
push
out
cltd
sub
lahf
inc
jmp
int
mov
xchg
pop
shll
inc
fwait
movsl
or
inc
shlb
dec
cmc
pop
cmp
sub
andl
fiaddl
insl
out
push
into
push
es
outsl
cmpsb
sub
fmulp
mov
addr16
dec
jmp
lret
repz
inc
sub
out
pop
shr
xor
push
bound
mov
mov
pop
jbe
ja
repnz
cli
mov
sub
ss
addr16
addr16
imul
jns
adcb
and
pop
jbe
fptan
cmp
jmp
fnstsw
adc
xor
lods
pop
fwait
imul
in
scas
popa
ja
xchg
movsl
subl
insl
pop
and
mov
aad
stos
mov
mov
jb
cmp
daa
inc
inc
pop
dec
mov
pop
lret
stos
push
pusha
aam
push
inc
jp
xchg
push
mov
cmpl
fnsave
jnp
popf
inc
mov
inc
mov
inc
dec
rcll
call
xchg
mov
xor
and
or
shlb
popf
mov
adcl
shr
mov
ja
mov
or
pop
stc
inc
ret
mov
cld
push
push
lock
push
mov
dec
mov
pop
scas
js
pop
add
push
jne
pop
out
cltd
lock
adc
es
daa
sub
jbe
movsl
ficompl
pop
push
fidivl
int
mov
inc
test
jecxz
cmp
fcmovnb
shll
pushf
movsb
in
loopne
enter
in
jmp
cmc
scas
test
ss
mov
sbb
ja
nop
sub
mov
test
ret
or
mov
scas
jb
dec
cld
sub
arpl
adc
les
jmp
cmp
movl
add
ret
ret
mov
test
repz
push
xchg
cld
xchg
lds
adc
jne
cmc
add
or
dec
outsl
jmp
loop
mov
mov
cwtl
xor
in
cs
ret
inc
mov
out
test
push
insb
xchg
movsl
addr16
inc
dec
imul
mov
sbb
dec
mov
test
cmp
jbe
vmovd
dec
lods
mov
dec
fstps
js
mov
push
inc
in
inc
mov
jg
inc
icebp
faddp
mov
push
mov
outsl
sub
rcll
pop
add
decb
loope
or
loope
mov
lahf
jae
inc
pusha
push
xchg
js
ljmp
lahf
aad
js
xchg
cmpsb
adc
fsubp
nop
inc
out
cmp
xchg
jne
adc
adc
test
ss
pop
sbb
push
and
push
push
enter
fistpl
lods
test
jbe
adc
inc
outsl
mov
sub
into
and
add
pushf
lahf
lcall
js
sbb
popf
cwtl
into
cmp
pop
std
jecxz
push
dec
or
sbb
lds
xchg
mov
sub
push
ljmp
sahf
dec
ja
test
ljmp
sub
jl
cmc
push
punpcklwd
cmp
movsb
pop
push
add
sub
fisttpll
loop
push
cltd
cld
pop
out
std
and
or
pop
int3
inc
or
xchg
movsb
push
jne,pn
rcrl
addr16
scas
dec
xchg
fwait
int
ret
pop
into
pop
fs
sbb
xor
lods
mov
movsl
jae
cli
insl
mov
cli
testl
jbe
cs
dec
out
mov
mov
fldl
lret
jl
nop
inc
or
pop
mov
dec
out
mov
push
rcrb
inc
test
pandn
sub
add
push
xchg
cmp
lods
testl
add
int
cltd
sbb
jmp
push
repz
cmpl
ja
inc
adc
xlat
cmp
sub
mov
mov
clc
pop
pop
pop
mov
add
inc
sub
mov
in
inc
js
enter
dec
movsb
dec
test
or
adc
stos
sub
mov
testl
fcoms
in
imul
mov
enter
cmp
xchg
xchg
shr
adc
nop
mov
test
rolb
ljmp
repnz
test
adc
push
push
adcb
mov
jo
fdivrl
push
sub
or
aam
sbb
jo
pop
jmp
push
pop
push
mov
ret
inc
or
dec
ss
push
es
pop
divb
pop
shrl
sub
std
pop
xor
and
jnp
push
cmp
jne
gs
pusha
ret
adc
icebp
dec
add
push
jecxz
andb
push
shrl
mov
out
in
sahf
test
cmp
test
cmp
stos
imul
iret
jmp
shlb
in
mov
ret
pop
data16
in
and
adc
fsubrl
rcrl
mov
pop
xchg
mov
lret
inc
push
in
iret
fidivl
cwtl
movsl
push
lds
lea
fbstp
lods
mov
cmp
jo
stc
je
mov
lret
fwait
addr16
andl
cs
xor
adc
or
in
repz
sti
insl
xchg
mov
fsubrs
sub
in
xchg
pop
mov
mov
lds
and
jbe
inc
outsb
lods
mov
sub
cmp
mov
jmp
inc
cs
call
jge
nop
mov
mov
cltd
cmp
xor
mov
jecxz
or
and
and
sti
stos
cmp
jb
stos
dec
addr16
fwait
fwait
mov
bound
mov
lock
and
cmpsl
out
decb
clc
or
sbb
xchg
sarb
xor
mov
sti
shlb
sub
sbb
sbbl
inc
cmpsl
mov
mov
pop
inc
jne
cmp
xor
cmp
not
aad
mov
xorb
mov
mov
movsb
and
sarl
add
jmp
mov
push
es
cltd
ftst
jae
or
jns
in
stos
push
mov
xchg
mov
dec
push
jbe
push
sbb
inc
adc
pop
jo
out
adc
mov
aam
jb
cs
data16
xor
pop
jg
mov
sbb
es
xor
xor
outsl
mov
fdivrp
xchg
push
push
mov
pop
cmp
inc
cmp
sbb
aad
pop
pop
icebp
gs
sbb
xchg
in
mov
xor
mov
xor
mov
inc
pop
sahf
popa
or
cmova
cmpsl
rcrl
jae
jo
outsb
sahf
lret
sbb
jae
push
dec
dec
ret
and
mov
outsb
rcrl
mov
xchg
fwait
shl
cli
test
mov
sub
add
mov
aas
fsubs
push
sbb
xor
mov
outsl
in
pop
fldenv
xlat
inc
mov
out
jns
test
mov
addr16
dec
and
sti
sub
mov
inc
xchg
jne
jge
push
data16
roll
fldenv
insl
sti
jb
push
xorb
adc
inc
sti
mov
inc
lock
cmp
in
ret
inc
sub
outsb
mov
or
insb
cmpsb
insl
jp
adc
mov
push
fcmovne
add
roll
push
mov
xor
mov
mov
mov
inc
mov
xorl
les
jge
sbb
ret
sub
add
jl
add
xor
loop
push
push
sub
aad
mov
int
lds
sub
pop
addr16
lea
xlat
mov
shll
cmp
sbb
jno
nop
mov
push
rcrb
imul
test
pop
inc
nop
call
xor
addb
ret
or
push
jecxz
cmpsl
mov
dec
or
xor
sub
btr
bound
sysret
add
std
mov
mov
mov
sti
lret
mov
shll
test
lahf
xor
cmp
or
jp
mov
mov
outsb
je
cltd
test
sub
mov
jecxz
scas
cs
xor
sbb
mov
mov
mov
int3
push
shl
adc
jns
mov
fbld
add
add
fldt
push
loope
cltd
add
popf
sub
jge
or
cltd
mov
test
mov
xor
pop
and
lock
jmp
test
cmp
sub
data16
dec
cmp
pop
mov
test
push
mov
je
pop
les
jae
jge
jnp
xchg
or
mov
ret
adc
mov
xchg
jle
cmp
mov
or
inc
jmp
xor
loopne
pop
loop
ds
dec
mov
jno
repnz
mov
aad
inc
mov
iret
aas
clc
pop
ja
mul
pop
xor
xchg
dec
xchg
lret
pop
imul
adc
sbb
lods
jne
xorl
push
in
or
aas
jbe
sub
jo
push
jl
sub
shrl
cmp
cs
movsb
out
call
cwtl
push
mov
mov
ljmp
lret
dec
xor
out
ja
mov
fbld
push
bound
mov
pop
dec
rcl
adc
jbe
pusha
test
mov
aas
xorb
adc
arpl
add
mov
mov
jge
push
mov
pushf
clc
xchg
push
sub
nop
add
xor
xchg
fdivp
pop
aad
sbb
add
sbbb
xor
test
mov
in
mov
and
xor
mov
lcall
or
adc
sahf
adc
sbb
xchg
bound
mov
arpl
or
inc
xchg
mov
ret
addr16
sbb
movsb
js
call
mov
sbb
stos
sti
in
adc
cmpsb
pushf
ja
pop
mov
cmpsl
vmovddup
xor
rorb
ret
repz
ds
jbe
or
inc
sub
inc
inc
xor
popa
xor
mov
aas
mov
dec
aas
and
js
pop
mov
fcomip
and
push
cmp
adcb
sub
mov
mov
cmp
mov
adc
sub
inc
dec
or
jmp
pop
ret
jne
adc
call
icebp
adc
xlat
out
pop
fcompl
mov
cmpsb
inc
pop
jno
scas
mov
jg
lret
pop
lods
hlt
xchg
pop
xchg
nop
pop
pop
mov
xor
add
mov
push
cmpsl
xor
adc
xor
mov
or
sub
mov
rcrl
mov
in
push
sar
inc
push
adc
pop
pop
stos
mov
jecxz
test
mov
iret
sbb
in
stc
ja
adc
lods
out
cmpsb
xchg
and
ret
dec
xor
aas
fcomip
mov
std
mov
bound
inc
xor
mov
adc
leave
cmpsl
or
cld
mov
stos
jg
in
cmc
out
iret
adc
xchg
add
fsubrl
mov
sbb
les
or
cmp
enter
sahf
loopne
xor
jecxz
ret
lods
ss
sub
cmc
je
test
or
lret
xchg
push
sub
xchg
lock
imul
hlt
mov
test
daa
adc
aaa
inc
sarb
sbb
mov
dec
jo
gs
sbb
jb
pop
out
jmp
fdivl
cmc
cmc
lock
mov
bound
push
imul
lahf
icebp
jge
aaa
sbb
push
in
sbb
xchg
add
int
cmp
test
xor
or
pushf
sbb
sub
or
shr
inc
mov
and
add
cld
jbe
or
xor
lods
pop
es
leave
adc
je
nop
into
outsl
inc
mov
mov
sti
fsts
call
mov
in
mov
test
xor
mov
xchg
lods
cmc
jecxz
push
test
mov
fldenv
mov
jge
movl
imul
fidivrl
cmpsb
inc
xor
mov
in
test
mov
and
jge
cmp
mov
add
int3
aam
dec
jmp
pop
push
sbb
mov
mov
insl
mov
lret
mov
cld
aas
xchg
std
sti
dec
sbb
sub
sub
mov
dec
mov
push
mov
gs
push
jecxz
rorl
jae
fistpl
lods
pop
mov
mov
fdivrl
cwtl
lods
and
movsb
sub
or
arpl
or
ret
dec
imul
jnp
js
repz
imul
imul
pop
cmpsl
outsl
xor
fs
pop
call
dec
cltd
inc
in
xchg
test
call
in
ret
insl
call
sti
xorb
xchg
jnp
xchg
shll
loop
adcb
je
data16
mov
scas
mov
dec
data16
rorl
xlat
in
jno
adc
xchg
js
xor
rcr
dec
outsb
xor
call
jae
rcll
mov
mov
shrl
insb
pop
scas
and
cli
push
jp
or
adc
insb
in
xor
cmpsl
lcall
adc
decl
fldt
ss
sub
out
mov
dec
sti
cmp
dec
aas
push
and
pushf
jno
cmp
add
mov
pusha
xchg
int3
cmp
ficoms
mov
pop
pop
sub
xchg
sub
gs
mov
repnz
jp
ss
arpl
jmp
hlt
inc
aas
and
out
fisubs
pop
jg
sub
cmpsl
mov
es
push
sahf
mov
mov
iret
out
sbb
cwtl
imulb
mov
jp
mov
add
test
mov
inc
mov
mov
jns
push
stos
sub
xlat
arpl
adc
insl
cli
cmp
jl
push
sub
push
adc
sbb
iret
add
stos
lea
ret
xchg
pop
stos
clc
fwait
cmp
push
int3
push
fs
mov
cmpsl
das
sub
gs
inc
adc
test
dec
sbb
fs
jne
inc
add
adcl
push
sti
push
js
sub
arpl
jmp
pop
push
popf
cmp
adc
into
mov
imul
xor
fnclex
iret
jl
aam
pop
inc
popf
popa
lds
pop
rorl
or
sub
loopne
mov
negb
lods
or
xor
add
inc
int
in
or
les
push
inc
push
sbb
mov
or
lds
in
xorw
pop
rolb
inc
outsl
movsl
sarb
xchg
and
fstps
pop
add
cmp
pop
das
and
hlt
mov
pop
xchg
sbb
mov
lds
mov
push
cmp
add
shl
out
sbb
jecxz
cmp
icebp
sbb
mov
sub
add
mov
fadd
int
test
aam
push
xor
adc
sub
not
ss
push
sub
inc
shll
or
scas
pusha
stos
dec
lret
sbb
add
pop
adc
pop
movsl
dec
test
lea
jmp
dec
lret
cs
sbb
sarb
sbb
jl
fimull
mov
pop
es
jl
lret
jl
jge
jle
pushf
jecxz
xor
cmpsl
adc
int3
push
arpl
push
and
stos
lds
cmc
push
test
fld
cmp
cmp
adc
mov
cmp
mov
and
push
fildll
jle
fnstenv
negb
daa
xchg
mov
xlat
and
ret
adc
or
cmp
lods
ss
mov
sbbb
ds
xor
stos
scas
push
test
lret
jp
inc
xchg
push
xchg
sub
adc
icebp
daa
filds
push
dec
adc
cmp
repnz
fwait
adc
xchg
jb
popf
sbb
scas
test
movsb
lods
push
mov
mov
xor
loope
push
ret
imul
adc
fwait
mov
push
inc
and
jbe
mov
loop
stc
inc
sbb
inc
dec
mov
mov
push
out
enter
and
jmp
dec
xor
mov
add
nop
push
fidivrs
scas
sbbl
add
dec
in
inc
push
add
push
movsb
aam
data16
int3
xchg
push
orl
sbb
out
icebp
decl
lods
lock
xor
loop
lret
clc
jnp
mov
daa
into
dec
loopne
sub
out
scas
push
xchg
dec
rcl
in
sbb
mov
loopne
dec
pop
insl
and
push
je
push
dec
shlb
sbb
inc
add
les
push
mov
cmp
cmp
in
pop
mov
insl
or
fistpll
cmpsb
mov
adc
or
add
std
dec
test
sbb
xchg
cmp
dec
sub
int3
jg
loope
loopne
jno
jno
xor
push
lock
popa
jb
or
xor
dec
stos
mov
or
andb
push
push
stos
je
mov
dec
nop
testb
mov
lret
adc
repnz
mov
xchg
loope
rcll
test
or
popf
loope
outsl
inc
imul
shl
insl
insl
xchg
sbb
inc
cs
arpl
lds
dec
fwait
jecxz
out
mov
cmp
fwait
pop
add
sub
dec
fimull
jo
ret
push
mov
fdivr
mov
incb
sbb
mov
dec
add
sub
add
movsb
ljmp
lahf
cwtl
mov
mov
jp
pop
pop
das
mov
mov
clc
add
repz
icebp
fadds
xchg
outsl
push
clc
stos
jbe
out
sub
dec
fnstcw
mov
in
out
inc
adc
xchg
mov
lahf
add
xor
addr16
fisubrl
fistpll
xchg
and
je
mov
jl
add
arpl
lcall
stos
pop
add
mov
or
icebp
and
push
lods
push
js
fcmove
mov
sbb
outsl
dec
scas
test
inc
lret
bound
pop
lods
ljmp
repz
mov
jmp
jns
push
mov
xor
jl
push
rorl
dec
mov
cmp
or
out
cltd
daa
movsl
push
mov
popa
and
dec
sbb
into
and
push
pop
mov
jg
popf
rolb
jl
mov
xchg
mov
mov
push
pop
jmp
mov
xchg
dec
rcr
push
int
jbe
jge
push
inc
sub
mov
lods
pop
cmp
xchg
jno
inc
stos
mov
add
movsb
mov
pop
adc
jns
push
mov
cmpsl
bound
pusha
jge
jmp
adc
xchg
sub
xchg
or
xchg
imul
dec
leave
dec
testl
pop
sbb
jl
pop
and
sbb
cmp
mov
push
sbb
xchg
or
push
pop
or
stos
adc
add
dec
mov
jb
adc
popa
sbb
out
cli
sar
push
sti
lret
or
scas
fs
int3
iret
mov
xchg
mov
ret
iret
push
mov
inc
pop
push
stos
gs
xchg
outsl
adc
movsl
mov
dec
pop
lcall
stos
inc
enter
or
icebp
hlt
aad
in
xor
jle
inc
mov
movb
push
pop
cld
cmc
sub
mov
jne
loopne
imul
aaa
lods
sub
push
push
mov
negb
sti
rcrl
jb
inc
pcmpeqd
dec
mov
jle
add
es
inc
sbb
push
mov
xchg
stos
icebp
push
or
outsb
adc
push
int3
pop
data16
js
xor
dec
add
mov
pop
insb
cmp
mov
jo
mov
mov
cmp
push
jb
dec
sbb
sub
push
fldcw
cs
stos
roll
stc
rolb
sbb
lret
rcrl
inc
sub
loope
cmp
inc
push
rcr
repz
aam
push
inc
lret
test
repnz
mov
fwait
pop
jno
aas
add
inc
dec
shlb
repnz
test
mov
movsl
arpl
jmp
inc
jmp
and
mov
pop
add
jns
addr16
pop
xor
dec
movsl
movsb
lds
sti
or
popf
and
sub
sbb
mov
and
in
mov
pop
lock
or
shlb
pop
and
and
bound
das
adc
pop
add
in
popf
jbe
jae
icebp
xor
jns
mov
add
cmp
add
jae
into
jns
fs
inc
aas
lret
dec
or
rorl
inc
pop
mov
rcr
movsl
out
repnz
insb
jmp
xchg
mov
push
mov
mov
data16
lds
or
or
jl
jecxz
outsb
cmp
test
xchg
push
and
dec
ret
mov
in
iret
in
mov
insb
push
jl
and
xchg
pop
lock
jno
cli
xor
push
iret
outsl
inc
movsb
pop
imul
pop
lcall
in
out
out
xor
ret
es
mov
xlat
sbb
into
call
jmp
mov
ds
jmp
jae
into
lock
inc
dec
add
repz
pushf
mul
fs
in
xor
pop
mov
ret
ja
call
fwait
ja
imul
testl
cmp
mov
mov
aad
cmp
jge
mov
arpl
jbe
rcrl
lret
or
sbb
leave
lods
daa
arpl
rcl
cli
dec
push
and
or
lahf
and
cld
cmc
fcoms
pop
out
daa
and
push
bound
push
cmp
cwtl
movsl
fstps
and
xor
icebp
hlt
xlat
mov
aas
adc
fisubrs
arpl
aad
ror
mov
add
adc
push
jne
gs
mov
mov
sbb
shll
pop
ret
shl
movsl
mov
clc
in
push
cmpsl
pop
sub
or
div
push
or
xchg
jb
cmc
add
push
out
cmp
inc
push
std
fsubrs
into
mov
std
lret
mov
cs
cli
fsubrl
sahf
shlb
loopne
or
movsb
int
xchg
arpl
faddp
scas
pop
cmc
sub
pop
frstor
rcrl
imul
jnp
dec
outsb
cmp
mov
fsubrp
orb
faddp
xchg
xor
sub
jecxz
add
cmp
fiaddl
cmpb
in
stos
jne
jg
insb
stc
xchg
mov
das
jno,pt
jne
imul
sbbb
out
pop
ret
or
sbb
push
loop
filds
out
das
jo
dec
into
into
jbe
mov
mov
push
out
push
subb
jno
sub
xor
cmpsb
fwait
jo
inc
jno
shll
cmp
insl
push
jecxz
loope
and
xor
mov
mov
loopne
fcoms
mov
cmp
xor
inc
xchg
roll
mov
bound
adc
xchg
fcmovne
outsb
dec
in
mov
xchg
cmp
pop
sti
ds
sbb
pop
data16
inc
jg
arpl
subl
sahf
pop
sub
mov
out
xchg
xchg
jge
sub
jge
sahf
std
es
movhps
shl
aas
in
aas
jnp
and
sahf
jno
push
aam
cmpsb
adc
daa
sub
ret
mov
jno
pop
push
mov
pop
dec
lods
out
cs
sub
lret
push
pusha
pop
add
xchg
ret
nop
mov
imul
mov
mov
pop
inc
fs
and
pop
sub
ds
jmp
add
ret
push
xchg
in
test
aad
fisttpl
in
mov
mov
iret
pushf
sbb
add
lods
mov
aam
aaa
mov
pop
sbb
outsl
fcmovne
mov
adc
xlat
push
jecxz
cmpb
mov
xor
mov
dec
or
aad
mov
movntq
sbb
bound
je
and
and
and
or
and
pop
nopl
mov
cmp
pop
in
cmp
sarl
cmpsb
loope
ss
sub
loopne
lods
xchg
out
fisubl
pop
mov
jecxz
mov
out
or
stos
jb
mov
and
nop
fdivrs
lods
movsb
hlt
ja
dec
aad
add
stc
cltd
dec
pop
ficomps
and
aaa
clc
cmp
aaa
or
arpl
lods
cmp
mov
dec
xor
dec
sar
mov
aas
adc
sbb
test
adc
or
push
xor
mov
ret
xchg
imul
pop
divb
cmp
ret
dec
or
out
test
sub
fbstp
and
xlat
jnp
into
dec
testb
adc
add
adc
and
or
bound
mov
mov
xlat
ss
insl
fcmovnb
enter
inc
mov
movsl
pop
jle
jns
ljmp
out
push
inc
mov
adc
or
scas
nop
adc
dec
iret
and
scas
mov
lods
outsl
sub
dec
mov
nop
ficoml
jno
add
dec
dec
setge
mov
push
aas
pushw
dec
icebp
xor
xchg
lret
fwait
sub
js
rcl
adc
mov
cs
dec
pusha
fwait
sbb
inc
nop
pop
mov
inc
pop
jnp
sbbb
adc
push
aas
inc
xchg
mov
rcll
enter
into
push
or
and
pop
pusha
push
adc
push
in
scas
jo
pmaddwd
or
adc
movsl
shr
pop
mov
cwtl
push
mov
gs
jmp
mov
cs
test
add
xchg
jmp
aaa
inc
push
push
cmp
rcrb
insb
xchg
decb
cmp
clc
jo
repz
repnz
lahf
stos
lock
ret
js
mov
aas
ljmp
idivl
mov
push
jl
mov
jnp
or
iret
fcmovbe
out
dec
sub
push
and
movsb
lds
dec
popf
loop
in
pop
iret
lea
mov
ljmp
aaa
adcl
mov
mov
xchg
shll
imulb
add
xchg
push
jp
mov
sti
test
dec
fstl
mov
jb
mov
mov
mov
pusha
sti
add
insb
shll
clc
mov
push
movsb
clc
movsl
push
pop
inc
mov
aas
stos
xchg
lds
adc
mov
mov
iret
cmp
prefetchw
mov
push
mov
xor
daa
pop
pop
pushf
mov
adc
sub
scas
or
and
inc
inc
aaa
or
dec
ficoml
repz
jge,pn
rolb
pop
lcall
adc
out
pop
lds
arpl
inc
lock
adc
xor
loope
jnp
xchg
or
push
mov
add
push
in
dec
inc
cld
aas
js
sub
inc
jbe
add
aam
mov
add
rcrl
jmp
mov
out
xor
jne
repnz
pop
ja
loope
pop
jg
push
aas
mov
out
adc
call
cs
sahf
mov
dec
ret
jae
int
cltd
pop
and
push
cmpsb
pop
out
lret
or
ljmp
add
ficomps
data16
push
xor
sub
movsl
fs
jl
outsb
inc
call
ret
mov
scas
jno
into
lods
aaa
xchg
movsl
push
fiaddl
std
lcall
jnp
sbb
push
jae
adc
cmp
xchg
lods
pop
inc
lahf
jmp
lret
and
push
cs
xchg
pop
insb
push
xor
pusha
lods
mov
sub
int
ja
and
fs
fs
movl
xchg
push
mov
or
lock
jne
push
adc
sahf
int
lock
imulb
xchg
fisttpll
xor
imul
test
int
aas
aas
mov
mov
sub
icebp
push
mov
es
push
in
stos
aam
jno
inc
push
jo
and
dec
mov
int
movsl
std
adc
stc
pop
icebp
adc
ljmp
cmp
cmp
jne
inc
pusha
cltd
pop
ds
call
dec
inc
cmpsb
sub
sbb
xchg
add
cmpsb
mov
fwait
dec
or
cmc
lock
dec
mov
inc
adc
xor
pop
mov
sub
in
add
out
iret
out
xor
mov
xchg
xchg
sub
in
sub
or
imul
mov
cmp
add
mov
mov
dec
jo
dec
out
pop
fistpl
loop
sbbb
cmp
orb
cmpsb
xchg
push
ret
pop
stc
xchg
js
jle
xor
push
push
ret
ret
or
sbb
xlat
adc
and
mov
cmpsl
xchg
pop
xchg
testb
sbb
mov
into
lods
cmp
mov
sub
sub
mov
sub
sbb
cli
mov
sti
ret
push
dec
fsubrs
and
jmp
cmp
scas
pushf
scas
or
xor
and
inc
dec
in
stos
pop
sbb
ss
dec
cwtl
loopne
out
mov
xorl
xchg
fisubrl
lods
sub
mov
sti
std
loopne
dec
repnz
xchg
add
lds
mov
push
faddl
leave
sar
aas
cmp
jae
negb
icebp
and
adc
dec
xor
not
push
ret
sahf
loope
xchg
xchg
push
add
cmp
mov
sub
mov
repnz
enter
fnstenv
in
bound
sbb
dec
bound
aas
stos
pop
cmp
or
imulb
repnz
sarb
push
xchg
imul
xor
rcrb
lods
jmp
xor
mov
cmp
into
in
mov
jbe
mov
test
sbb
pop
xor
into
rcl
pop
aas
mov
shll
shrb
fst
nop
xor
stos
cmp
out
repnz
cmp
cmp
jl
xor
mov
clc
sub
add
data16
sbb
stos
push
or
fcomps
bound
xor
stos
aaa
movsl
cmp
rolb
pop
sbbl
clc
xor
xchg
scas
imul
jo
mov
out
pop
dec
stos
push
jmp
out
mov
loopne
mov
aam
jns
lock
in
scas
gs
lahf
sub
aam
add
and
sbb
dec
mov
or
push
popf
push
mov
les
xchg
dec
inc
in
xchg
mov
xchg
ljmp
inc
leave
dec
jbe
out
std
mov
jge
jge,pn
pop
mov
into
cli
add
mov
jmp
dec
xorb
test
aam
jnp
and
inc
mov
cli
ss
adc
dec
mov
negb
repz
test
ret
sbb
add
or
mov
cmc
insl
jmp
cmpsb
or
mov
pop
sub
fs
jl
hlt
dec
loope
je
pop
mov
mov
sub
pop
aaa
sbb
jecxz
or
movsb
shl
add
add
sbb
mov
fucomp
add
mov
lret
faddl
dec
adc
fbstp
or
andb
mov
dec
jbe
nop
test
xchg
stc
xchg
dec
out
dec
sub
mov
or
xchg
pop
insl
cmp
sub
cltd
mov
pop
lds
ljmp
inc
test
fadds
fsubl
in
add
not
fisubrl
push
cli
lret
inc
rcr
repnz
and
std
out
dec
ja
in
sub
xor
enter
cltd
mov
in
jo
cld
pop
shl
pop
push
insl
dec
shlb
push
adc
in
add
push
sub
scas
xor
inc
jb
and
add
gs
xchg
cltd
jge
orl
push
out
out
fsubp
sti
mov
mov
jge
and
lods
call
push
adc
insb
aaa
scas
stos
jmp
or
sub
jmp
mov
mov
mov
in
sbb
ret
test
mov
mov
xlat
fxch
cmp
out
push
insb
xchg
xchg
jmp
loope
mov
jmp
dec
sahf
mov
enter
mov
xor
pop
rcll
jns
popa
aas
fcompl
in
adc
aas
shll
addr16
mov
dec
cwtl
std
insb
xlat
push
ds
jns
cmp
mov
bound
mov
inc
aaa
cmp
xchg
aad
cmp
int3
orl
jnp
pop
dec
push
sub
mov
cmp
or
inc
stos
loop
mov
pusha
rcr
inc
pushf
mov
cmpsl
and
inc
roll
orl
lods
js
adc
mov
adc
or
ret
int
adc
in
orl
jle
mov
mov
fcmovnbe
push
subl
jl
mov
test
xchg
adc
shlb
fistl
loopne
cmpsl
scas
mov
pushf
movsb
lahf
clc
je
pop
aas
or
movsb
arpl
call
ret
test
adc
aaa
fsubs
push
jno
cmp
sahf
mov
push
push
js
mov
data16
negb
call
out
test
mov
add
dec
mov
sti
and
xor
lret
xchg
inc
xlat
shlb
lret
xchg
xchg
push
push
inc
dec
sbb
pop
fcompl
lret
dec
sub
sbb
cmp
pop
xchg
mov
sub
ret
mov
leave
insl
pusha
ss
lcall
scas
push
test
leave
xchg
iret
mov
sub
pop
cli
test
mov
sbb
orb
jp
mov
or
mov
stos
js
int
add
pop
mov
sub
pop
hlt
scas
pop
jmp
gs
xchg
subb
sahf
popa
popf
or
in
js
and
xor
or
popl
shrb
cmp
inc
mov
pop
lods
add
xlat
inc
iret
lea
cld
dec
test
cltd
fmuls
mov
sbb
addr16
pusha
mov
cs
inc
out
fs
mov
xchg
faddp
bnd
push
dec
roll
push
sub
in
inc
mov
cmp
adc
or
cmp
inc
call
jb
sub
ljmp
and
out
dec
lods
imul
jne
pusha
imul
loope
fidivs
pop
dec
pop
or
mov
xchg
out
aad
imull
test
dec
jle
adc
mov
adcb
test
lret
sahf
fs
add
sar
cltd
jbe
ljmp
dec
rolb
andl
and
ficompl
dec
notb
loop
outsl
jp
and
in
fimull
add
xlat
scas
int3
xor
shrb
out
adc
shr
mov
mov
sti
mov
outsl
xchg
xor
and
push
out
cwtl
aam
lea
lcall
xchg
in
cmpsb
mov
fcmovu
and
pop
sbb
sbb
add
lahf
xchg
mov
dec
das
cld
mov
out
mov
enter
std
add
and
iret
fistl
dec
jg
ds
xchg
das
cmp
lock
lds
bndldx
popf
lahf
aam
mov
push
stc
mov
testl
rcl
xchg
out
arpl
sti
cmp
inc
mov
into
push
adc
push
xchg
pop
insb
jae
add
fisttpll
stos
dec
adc
rolb
loopne
xchg
in
add
stos
std
fists
shl
dec
push
into
in
ror
les
mov
jnp
cmp
jo
sub
lret
adc
sbb
dec
bound
jg
out
pop
and
adc
nop
int3
out
xor
xor
int
push
outsb
outsb
into
jae
xor
int3
and
push
dec
popa
mov
or
fisttps
nop
xor
cltd
mov
mov
mov
adc
xor
repz
fwait
popf
out
je
mov
push
pusha
jp
dec
in
sub
in
lret
andl
xor
andl
popfw
sbb
mov
clc
jo
push
jge
or
jle
sub
sbb
and
bound
in
sbb
mov
or
inc
aaa
nop
repnz
sarl
xchg
mov
mov
cltd
movsb
mov
js
sub
sub
sub
dec
outsb
mov
and
xchg
xor
cwtl
xchg
test
mov
aad
pop
jg
lea
leave
mov
sub
add
jnp
xlat
fisttps
cmp
into
fs
xlat
dec
push
out
imul
cwtl
and
scas
jmp
test
movsl
jae
pop
call
push
nop
xor
pushf
test
push
pop
sub
ficompl
inc
in
jmp
or
or
sub
movsb
adc
outsb
sahf
pop
mov
push
add
fadd
xor
out
arpl
inc
pusha
push
mov
pusha
mov
mov
jmp
pop
aaa
imul
cwtl
ja
and
not
sub
rcr
sbb
jmp
adc
out
je
mov
sti
mov
rclb
cmovnp
jg
inc
sub
insb
push
mov
jmp
xchg
pop
mov
in
orb
pusha
popf
in
inc
and
xchg
jne
out
jle
frstor
jle
cli
xchg
aad
add
frstor
jg
push
mov
xlat
jge
adc
pop
push
xchg
test
arpl
fstpl
int3
dec
cmpsl
test
sub
xchg
pop
pop
xor
push
add
and
mov
push
push
mov
lcall
adc
in
xchg
push
inc
popf
mov
loopne
xor
les
xchg
inc
imul
dec
xor
or
and
pop
push
mov
jo
dec
insb
cmp
push
mov
sub
rorb
into
or
pop
or
push
loope
repz
int3
push
lret
gs
push
in
loope
repnz
scas
cmp
sub
sub
pop
fstpl
push
lea
sbb
adc
cmpsb
pop
cmp
into
or
cli
mov
int
lods
dec
rclb
les
adc
out
sub
mov
sbb
aaa
sbb
add
ja
and
test
mov
repnz
aad
mov
cmp
inc
sahf
xchg
inc
or
adc
into
jg
lret
sub
fists
in
xlat
xor
insl
cld
mov
mov
pop
inc
ja
or
pop
cltd
arpl
mov
rolb
test
leave
insb
sub
xchg
adcb
xor
daa
testl
xchg
in
inc
int
jo
stos
fidivs
outsb
test
ja
inc
sti
lock
adc
mov
and
sbb
mov
dec
lret
and
inc
inc
pop
push
jl
idiv
lret
mov
adc
mov
mov
pop
lretw
sbb
mov
idivb
out
in
sub
mov
dec
outsl
ja
lahf
sub
push
pop
test
mov
inc
add
inc
stos
mov
fucomp
rcl
jmp
xor
mov
add
call
stc
pop
mov
aaa
mov
mov
bnd
fiaddl
call
cltd
bound
xchg
fisttps
pushf
fstpl
pop
xchg
sbb
push
dec
in
xor
arpl
pop
xchg
xchg
dec
ss
gs
jae
sbb
pop
pop
dec
test
jg
outsl
and
rol
popf
or
fistl
ret
inc
inc
stos
mov
rcll
pusha
stc
push
pop
xchg
ja
mov
in
jae
test
inc
mov
cmp
fwait
jp
into
test
scas
xchg
sbb
in
xchg
dec
pop
pop
mov
test
jne
adc
das
loopw
sub
testl
pop
sub
int3
cmp
mov
fs
push
or
ficomps
fs
xlat
leave
and
sahf
jne
aad
pop
mov
nop
xlat
aad
mov
xchg
inc
xchg
and
dec
loop
sahf
rcrb
div
sbb
mov
push
ljmp
mov
scas
ja
xchg
mov
push
es
xor
and
jecxz
daa
or
jne
and
lock
mov
negb
inc
loop
ja
test
cwtl
int3
ficoms
dec
jp
jnp
or
push
and
adc
mov
leave
push
pop
pop
mov
sub
mov
or
add
mov
mov
mov
mov
fcom
push
sbb
dec
mov
cmp
pop
popf
roll
jle
mov
adc
ret
gs
xor
push
push
xchg
es
xchg
popa
sbb
sub
in
mov
pop
inc
lods
adc
pop
ret
or
scas
cmp
mov
cmp
insl
fcomp
dec
xchg
imul
lahf
stc
out
je
cwtl
cmp
sub
or
sub
ss
lea
sub
insl
arpl
dec
jl
cmpsl
xchg
mov
mov
fmul
fsts
mov
xor
mov
jg
sarl
xchg
cmp
pop
aam
int3
xor
leave
dec
ret
dec
xchg
fimull
in
mov
pop
sbb
sarb
push
call
les
and
fs
lret
sub
fsub
out
adc
dec
dec
sarl
pop
add
dec
mov
inc
inc
in
xchg
dec
push
jecxz
clc
repz
mov
jne
mov
stos
jns
jmp
fldenv
xchg
xchg
shlb
rep
and
jge
cs
sahf
int
mov
cmp
sarb
out
into
fs
icebp
push
push
xchg
sub
decb
jne
lahf
hlt
int
mov
imul
addr16
jnp
and
dec
movsb
cs
gs
sbb
popf
cmp
ret
jp
into
das
mov
js
sar
xchg
scas
cmpsb
cmp
imul
fwait
dec
push
fwait
jmp
sbb
lea
mov
packuswb
inc
popf
movsb
mov
aad
pushf
xlat
das
cmc
push
xlat
in
fnsetpm(287
call
and
push
add
xchg
inc
jae
jnp
lock
mov
or
sbb
out
lds
mov
outsb
mov
adc
mov
imul
add
jmp
insb
out
bound
pop
xor
mov
aas
jp
push
test
aaa
push
xchg
jb
xor
fdivrl
lock
imull
popl
adc
jl
rcll
dec
subl
add
add
fidivl
pop
leave
ret
push
and
xor
add
mov
or
cmpw
stos
movsl
xchg
js
neg
or
je
scas
dec
out
jecxz
jne
jne
xchg
xor
pop
jno
pushf
pop
mov
daa
insb
pusha
xchg
and
in
shll
outsb
cmp
adc
pop
mov
mov
testl
cld
into
ret
mov
cmp
xchg
fst
rcll
lret
cwtl
clc
insl
das
fs
push
clc
test
fs
and
mov
arpl
outsb
push
pushf
cmp
dec
or
and
jg
stc
mov
lret
push
arpl
mov
imul
sahf
cwtl
in
repz
sub
mulb
dec
lods
in
cld
call
xchg
jl
xchg
lahf
mov
xchg
adc
ret
fucomp
sbb
dec
arpl
jb
iret
test
or
es
in
xchg
dec
movsl
xor
movsb
dec
ror
jno
adc
leave
push
int
loopne
push
ficoml
icebp
inc
push
test
mov
xchg
and
fcoms
rcrb
popf
aas
insb
pop
lods
mov
jl
cli
push
stos
push
push
adc
and
adc
cli
aaa
out
xlat
push
lea
pop
cmovno
cltd
sub
movsb
push
xchg
sbb
xchg
sbb
mov
xchg
cmp
cmp
loope
insb
iret
mov
test
inc
cmpsb
inc
sbb
leave
cmp
sub
mov
andl
movsl
xchg
sbb
jle
pop
add
jge
add
sub
jmp
stc
insb
mov
ljmp
jle
ja
mov
xor
adc
es
punpcklbw
push
inc
scas
push
xor
inc
lock
lds
stos
lret
je
add
enter
test
shlb
inc
lret
notl
pusha
adc
push
and
mov
mov
in
repz
pop
les
push
push
fldcw
add
xchg
jmp
xchg
mov
insl
mov
or
lret
cmc
push
pop
ljmp
cmp
lds
mov
xor
imul
mov
leave
cmpl
xor
push
xchg
and
or
pop
mov
addr16
in
xchg
stos
es
mov
popa
dec
dec
xchg
push
movsl
in
mov
mov
movsl
fsubr
ficompl
orb
pop
iret
adc
pop
xchg
sub
xchg
add
mov
and
lret
or
rclb
in
daa
arpl
xchg
xorl
add
stos
addr16
pop
sbbb
xor
pop
or
mov
shrb
sbb
xlat
je
dec
cmpb
shll
aaa
jge
inc
mov
stos
lcall
xchg
ljmp
stos
add
dec
mov
std
push
cmp
jbe
or
ret
dec
add
in
xchg
scas
fstpl
stc
sbb
fistpl
out
pusha
imul
arpl
rcll
movl
pop
and
sbb
mov
inc
js
jl
ja
jne
adc
mov
rcll
push
push
or
adc
push
push
push
xchg
dec
sbb
pop
inc
ficomps
cld
test
inc
jecxz
mov
in
ja
fldt
sbb
pop
cltd
inc
pop
mov
lret
mov
mov
ja
aaa
test
mov
enter
popf
stc
push
or
or
testl
ljmpw
sub
in
adc
mov
mov
cwtl
aad
xchg
das
push
int3
push
fmuls
loopne
rcr
int
insl
dec
shrb
mov
insb
mov
cmp
jp
fistpl
mov
dec
pop
pusha
or
int
or
out
mov
sbb
jno
mov
test
in
jmp
dec
loope
mov
inc
test
xchg
dec
out
sbb
mov
inc
mov
repnz
sub
dec
notb
and
outsl
scas
add
cmpsb
cs
icebp
movsb
xchg
cs
daa
mov
push
push
mov
stos
jmp
inc
cltd
mov
xchg
repnz
or
fsubrl
ret
lock
cmp
mov
push
pop
xor
je
ret
dec
xchg
xor
push
jbe
cld
push
insb
iret
dec
out
dec
xchg
mov
jne
std
or
sub
adc
xor
fdivrl
adc
sbb
mov
sub
movsl
cmp
imul
fimuls
in
and
push
fwait
call
pop
call
sub
loope
decl
xchg
mov
and
mov
sub
dec
mov
stos
sbb
int
gs
jnp
jbe
pop
sbb
jmp
sbb
outsb
xchg
mov
sbbb
mov
jo
dec
pop
ss
into
in
lods
lock
cmpsb
rcr
and
scas
fsubrs
ja
das
xchg
daa
pusha
mov
dec
cli
push
ja
ret
sbb
lcall
fistps
fstpt
push
mov
sub
pop
sbb
push
fcmovu
jbe
and
aaa
iret
pushf
dec
push
mov
sbb
xchg
daa
lahf
and
dec
sbb
ljmp
leave
data16
add
fcoms
mov
js
cld
movsb
or
xchg
fs
xchg
fidivs
xchg
inc
xchg
xchg
adc
leave
cltd
ficoms
add
add
xchg
sub
xchg
filds
mov
hlt
imul
pop
cs
adc
dec
xlat
pop
add
fildl
test
sub
test
out
push
cmpsl
jl
cmp
dec
lahf
movsl
xchg
sbb
int
fdiv
pop
jle
xor
popl
lods
sub
out
mov
aad
or
sbb
sub
adc
xchg
jbe
xchg
jno
aam
sbbl
imul
cld
imul
push
adc
mov
out
dec
arpl
push
cli
rolb
sbb
insb
repnz
popf
jecxz
mov
mov
dec
fcmovb
nop
int3
je
mov
mov
push
pop
lcall
ja
adc
rolb
mov
or
pop
sub
icebp
mov
setb
lcall
je
cli
in
rclb
sbb
ficompl
dec
or
sub
pop
fs
mov
jns
int
jne
fsub
mov
and
sahf
cli
in
jl
adc
out
imul
or
pop
xchg
insl
xlat
xchg
xor
pop
sub
mov
and
insl
jp
sbb
xchg
pop
dec
push
and
mov
rep
mov
je
aas
lret
fidivs
xor
mov
push
mov
in
daa
mov
inc
stc
cmpsl
loopne
xor
in
test
in
sub
insl
in
and
inc
je
and
add
mov
mov
movsl
loope
movsl
fisubrs
lods
jo
xchg
int3
repnz
scas
push
xchg
test
xchg
fimuls
iret
sbb
lret
push
mov
and
shrb
idivb
mov
xchg
dec
imul
cmp
orb
xor
iret
pop
outsl
pop
test
dec
test
mov
loop
xchg
rclb
iret
pop
mov
sbb
jns
roll
add
sbb
sub
loop
rcr
subb
dec
add
movsb
and
popf
lahf
out
and
xchg
dec
jo
xorl
xor
shrb
enter
jnp
sub
jg
test
sbb
xchg
fdivl
push
jne
ficoml
cmp
or
test
cmp
lock
leave
adc
ljmp
mov
cmp
shrb
cmpsb
cmc
test
dec
aaa
cmp
cld
mov
int3
enter
inc
adc
sub
mov
cld
jge
rcrb
pop
fstpt
dec
mov
xor
sub
rcrl
xor
call
aam
in
iret
aaa
sbb
push
cltd
test
aaa
or
sbb
push
mov
pop
xor
lods
jo
dec
xchg
loopne
out
cld
xchg
sti
iret
cmp
icebp
insb
mov
cmpsb
pop
repnz
ret
pop
scas
scas
push
mov
addr16
adc
dec
fisubrs
xor
cwtl
cmp
lods
jnp
aaa
lcall
loop
push
jge
pop
mov
xor
clc
sbb
xorl
test
gs
adc
cwtd
mov
outsl
cpuid
mov
mov
mov
ja
sar
inc
dec
jecxz
fldl
sbb
sbb
hlt
test
test
mov
sti
mov
lods
pop
xchg
pop
rcr
pop
mov
repnz
jle
ret
mov
lods
xor
out
cltd
mov
dec
mov
filds
fcmovnu
push
push
sub
das
push
pop
ss
enter
jecxz
sbb
enter
aam
nop
inc
test
mov
jb
out
in
sti
enter
cmp
fwait
rcrl
repnz
inc
andl
add
arpl
push
sahf
ja
inc
xchg
mov
cmp
push
cmp
enter
in
or
outsb
xchg
add
mov
push
outsb
test
jge
out
mov
mov
cmpsb
pop
mov
mov
cmpsl
lods
cmp
mov
test
sti
idivb
cmp
jb
dec
pop
aad
loop
push
divl
sbb
dec
or
sub
mov
push
in
xchg
jae
mov
jle
sbb
test
ds
cmp
mov
adc
out
and
xchg
mov
shrl
sbb
dec
xor
mov
imul
and
nop
fcoml
add
mov
add
sti
outsl
xchg
xchg
sub
fnsave
movsl
icebp
sahf
inc
fidivs
pop
les
lcall
daa
fsub
push
and
push
outsb
inc
int3
jmp
cmp
cmpl
loopne
inc
mov
stos
aaa
pushf
in
xchg
mov
push
push
lcall
jbe
imul
out
mov
dec
pop
loop
std
testl
mov
loop
mov
jle
dec
dec
aaa
sub
xchg
into
mov
roll
jle
xor
xor
lods
mov
dec
loop
inc
in
push
jo
ret
loopne
pop
subl
pop
mov
jb
mov
sbb
stos
les
test
popf
in
cwtl
mov
cs
add
ss
adc
je
iret
call
insl
test
rolb
pop
xchg
add
mov
out
scas
adc
icebp
or
mov
sub
repz
inc
cmp
stos
xorl
fstp
out
fnstcw
adc
xchg
add
jbe
dec
pushl
cmp
inc
push
inc
jp
in
pop
dec
out
js
iret
push
jno
lods
stos
ficompl
cmpsl
outsl
jge
loopne
xchg
jno
dec
add
sbb
fcoml
push
leave
push
sub
lods
inc
adc
sti
push
arpl
pop
in
pop
add
pop
dec
push
cmp
loopne
popf
pop
jecxz
sub
popf
push
cmp
mov
shr
ljmp
loop
adc
push
decl
mov
sub
int
into
jg
xor
pop
mov
js
hlt
ret
mov
es
in
sti
sbb
jle
sbb
jecxz
cmp
and
add
push
lcall
xchg
scas
daa
mov
dec
fsubrl
out
push
mov
adc
insb
out
inc
or
jne
mov
sbb
add
clc
out
sbb
push
repz
je
sbb
and
sbbb
push
out
dec
cmp
mov
scas
mov
push
clc
fldcw
pushf
lcall
pop
push
popl
pusha
mov
lods
into
mov
xchg
movsb
add
inc
inc
xchg
mov
adc
mov
lods
loop
mov
mov
push
rcr
in
sub
pusha
mov
test
in
jge
mov
loopne
jne
inc
sarb
and
lods
loopne
cld
loop
outsl
ss
adc
xchg
faddl
xorb
scas
push
aam
sub
aad
fsubr
fs
cltd
mov
mov
xchg
dec
outsl
inc
xchg
mov
jg
std
mov
test
insb
sub
movl
lock
fs
leave
push
dec
ja
ljmp
in
cmp
mov
int3
loope
pop
gs
imul
add
push
push
cmp
cltd
cwtl
xchg
sbb
data16
or
and
js
mov
popf
cmp
in
xchg
ficoms
int
mov
lret
push
in
add
das
push
sbb
inc
imul
dec
mov
inc
jl
mov
mov
inc
jns
pop
subb
pop
stos
xchg
outsl
and
sbb
in
pop
gs
pop
jmp
std
mov
aaa
addb
out
into
aas
out
xlat
xchg
stos
in
imul
cmpsl
je
in
xor
and
jmp
jo
inc
fs
insb
das
ficomps
push
jmp
fldl
imul
mov
mov
jno
rolb
xchg
inc
xchg
adc
sub
lret
and
cmpsl
int3
push
mov
pop
sarb
xchg
ret
loopne
mov
cli
scas
dec
rcrb
sbb
arpl
icebp
imul
mov
mov
sub
adc
mov
pop
loopne
and
pop
pop
fsubs
popf
ficoms
dec
clc
adcb
jge
dec
pusha
cmp
outsl
cmp
pop
mov
jl
adc
jo
lea
cmp
jmp
jb
hlt
in
add
mov
push
mov
sbb
pop
and
cmp
push
movl
jge
dec
bound
push
mov
push
mov
adc
jmp
insb
ret
addr16
or
mov
cmp
mov
into
inc
xor
mov
cld
shl
jl
jno
inc
sbb
pop
dec
cmp
push
pop
repnz
sahf
jg
sti
aam
pop
arpl
adc
test
dec
fbld
test
gs
and
dec
push
hlt
xchg
mov
jnp
mov
cmpsl
cmp
lock
cmp
fstpt
push
jp
xlat
insb
push
xchg
setbe
fisubs
int
dec
adc
pop
clc
jmp
pop
leave
cmc
or
cs
xchg
lret
mov
mov
daa
push
mov
aas
and
cmp
mov
sbb
mov
dec
shll
add
jle
or
pop
push
fbstp
loopne
cmp
add
push
xchg
cmpsl
iret
dec
aas
mov
popf
push
fwait
pop
jo
jle
mov
les
jbe
pop
pop
lock
xchg
jl
icebp
push
fmuls
ss
stos
cli
mov
lea
cli
mov
ja
sub
int
mov
push
pop
ret
inc
xchg
cmpsb
loope
jmp
adc
int3
mov
xchg
inc
jnp
inc
icebp
cs
hlt
push
xor
xor
pmulhw
imul
adc
aad
shlb
and
sub
mov
inc
mov
or
ljmp
lock
lahf
fs
out
mov
and
adc
sbb
lahf
dec
incl
push
jg
sbb
dec
movsl
lea
cmp
mov
stos
cmp
out
xchg
mov
mov
insw
xchg
flds
enter
js
jo
mov
adc
sbb
std
sbb
dec
lret
in
int
xlat
xchg
pushf
arpl
jns
ja
syscall
ja
sbb
pop
cmp
jns
ret
or
dec
pop
xor
mov
movsl
aas
js
fsub
xchg
movd
loopne
inc
pop
imul
fwait
out
lea
or
enter
cmpsb
and
push
sub
push
dec
sbb
cmp
or
insl
aam
loop
add
push
xchg
dec
push
leave
out
sub
aas
fldcw
mov
cs
fidivl
jno
shlb
fsub
clc
sub
andl
cld
adc
mov
out
scas
repnz
push
testb
push
enter
mov
mov
push
lahf
inc
fstl
jno
call
add
dec
fs
es
mov
and
mov
lret
imul
jb
pusha
jae
dec
sbb
cmp
sbb
push
or
ficoml
fstpl
jl
shlb
xorl
xor
push
and
adc
popw
in
mov
dec
jmp
sbb
xor
js
idivl
cmp
add
jmp
xor
mov
inc
cmc
out
int
jnp
sbb
cmpb
mov
push
or
sbb
pushl
ja
adc
shl
es
inc
push
mov
shrb
adc
pop
jge
sbb
pushf
scas
jl
popf
mov
iret
imul
pushf
jne
cli
ja
dec
movsl
scas
jle
fldt
fcoml
add
cmpsb
jae
pop
mov
mov
lods
stos
pop
dec
sub
repz
pop
pop
push
jno
sbb
dec
pop
aaa
cmp
pop
lcall
addr16
jecxz
cmpsb
mov
cs
adcl
sub
popa
and
outsl
sbb
cmp
fstl
sbb
js
scas
insb
and
or
adc
leave
mov
add
lahf
adc
js
cld
dec
ljmp
push
cmp
int
inc
inc
gs
stc
enter
pusha
stos
dec
pop
negl
xor
jmp
pop
dec
mov
jb
insb
cmp
inc
adc
cmpsb
dec
sti
cs
mov
data16
add
xor
enter
pop
adc
push
test
aas
mov
xchg
enter
jmp
mov
das
out
mov
fwait
in
int3
mov
shrb
sub
cld
shll
pop
ret
push
cmp
push
ret
lret
out
sub
inc
jp
subl
mov
cld
popf
pusha
icebp
dec
mov
push
sbb
mov
jl
mov
in
dec
decl
outsl
push
out
ret
xchg
cli
aaa
push
pop
jmp
add
push
in
add
incb
xor
mov
ret
mov
sahf
ja
push
inc
xor
cmp
cs
in
arpl
mov
iret
jp
int
enter
lret
decl
icebp
xor
imul
std
mov
repz
xor
leave
xor
divl
add
push
pop
push
call
aaa
fs
enter
outsb
loop
bswap
in
mul
cs
mov
out
notb
pop
ret
jg
mov
mov
cmp
arpl
xchg
jbe
lock
out
insb
pop
pop
int
or
cltd
mov
sarl
push
fisubrl
in
addr16
push
aad
aas
or
scas
xor
jmp
sti
fisttpll
stos
mov
fmull
dec
sbb
sbb
xor
xor
orb
leave
jb
add
loop
pop
jbe
shl
xor
aam
addl
xchg
jae
or
cmp
sub
sbb
mov
divb
push
add
mov
inc
mov
adc
mov
dec
or
inc
lahf
out
or
pop
push
sbb
movl
add
dec
cmc
or
out
stc
jmp
mov
jns
lret
imul
fnstsw
dec
adc
mov
stos
test
push
jl
imulb
mov
int3
or
rorl
pusha
inc
arpl
push
call
sbb
hlt
mov
daa
stc
sbb
sahf
xchg
sub
ds
and
testl
adc
out
xor
idivb
dec
jbe
stc
test
jecxz
mov
push
xchg
mov
lret
xor
or
mov
cmpsl
push
dec
adc
pop
das
rclb
outsb
gs
mov
lcall
lods
into
movsl
mov
mov
add
xor
mov
jno
shlb
cmp
add
outsb
mov
mov
repnz
mov
aam
mov
bound
lret
sub
std
imul
xchg
push
jecxz
xor
out
and
repnz
loop
inc
cmp
mov
xchg
data16
outsb
mov
ret
push
stos
lods
out
ss
sub
fstpl
repz
adc
mov
cmpsl
cmp
adc
and
test
push
roll
fadds
jnp
sub
push
pusha
sbb
mov
rclb
pop
jg
call
sub
addr16
inc
xchg
aaa
push
push
ljmp
or
ljmp
out
inc
sbb
jae
lock
cs
sbbb
lods
in
push
mov
ds
imul
pop
scas
mov
in
xor
sub
mov
ret
into
fidivl
leave
aad
dec
xor
mov
out
out
je
bound
xchg
and
dec
shl
adc
push
mov
aas
jle
mov
loopne
ret
enter
mov
test
mov
mov
xlat
mov
xor
jecxz
dec
pop
lcall
pusha
fldt
lds
sub
sbb
sub
loop
pshufw
test
dec
mov
mov
inc
cltd
xlat
jo
cmp
clc
and
xor
in
or
scas
cmc
in
and
xchg
iret
rolb
mulb
inc
cmp
fistpl
daa
cs
mov
mov
fimull
aas
sbb
test
sahf
imul
dec
add
pop
pop
lods
push
ret
push
jl
lahf
push
div
sbb
out
xchg
nop
lea
js
adc
sahf
mov
cmp
stos
mov
iret
in
cltd
add
lods
inc
shrl
inc
out
xchg
gs
pop
jb
cmp
pop
enter
pop
imul
aaa
bound
adc
sarl
aam
sbb
loopne
int3
pushf
jae
mov
sub
lahf
cmp
sbb
push
stos
out
faddl
insb
jg
scas
mov
cmp
jmp
fildl
pop
repz
jnp
push
fsub
test
mov
sti
jns
insb
push
or
xchg
mov
adc
xchg
jbe
roll
movsl
push
inc
dec
addr16
push
call
xlat
jb
jl
or
push
push
and
sub
rolb
loop
dec
frstor
fcmovnb
clc
aam
adc
sub
mov
or
cmpsb
mov
jl
test
mov
add
inc
mov
lahf
inc
inc
xchg
mov
jge
dec
push
inc
mov
adc
inc
daa
push
xchg
push
jecxz
sbb
mov
icebp
pop
jnp
lds
pop
sub
bound
jp
mov
push
jo
adc
test
add
das
adc
sub
inc
fcoml
sbb
pop
movsb
push
or
call
and
jae
cmp
mov
or
sbb
sar
xchg
test
int3
test
test
sbb
enter
insb
jmp
dec
push
inc
jp
push
push
addb
sub
in
out
cmpsb
cmp
sbb
or
mov
pop
int3
gs
shlb
outsl
int3
subl
or
or
mov
insb
inc
es
sub
push
div
cmp
xchg
test
in
movl
cmpsl
in
inc
pop
push
hlt
or
mov
adc
add
dec
or
dec
mov
jp
pusha
and
pusha
and
shr
cmp
push
adc
and
divl
add
lock
pop
iret
add
into
xor
jae
add
and
ret
pushl
aam
add
dec
cmp
sub
fwait
xchg
xchg
jae
stc
outsb
lcall
add
lock
stos
cltd
dec
lret
rcrl
scas
addb
jo
inc
add
lods
pop
or
test
aam
int
xlat
popf
pop
adc
gs
jmp
lock
inc
int
inc
aaa
lcall
lret
sub
cmp
lea
sub
ja
daa
add
fbstp
xchg
pop
popf
in
hlt
lcall
xor
icebp
jge
xorb
mov
jnp
cld
out
mul
xchg
aas
jl
mov
lret
mov
lcall
arpl
outsb
pop
cwtl
inc
lods
push
or
fadd
test
pop
dec
cmp
mov
cli
iret
scas
xchg
add
xor
shll
inc
in
cmpsb
sahf
pop
xlat
hlt
outsl
rcl
pop
and
jo
mov
add
test
and
jmp
xchg
lds
lcall
movsb
outsl
pop
inc
ret
outsb
sbb
pusha
cs
es
cmp
sbb
or
xor
mov
cld
cwtl
cmpsl
mov
insl
andb
mov
in
sbb
sbb
scas
jne
xchg
push
fucomi
sahf
roll
pop
sarl
xchg
in
mov
sub
xchg
add
adc
push
mov
aad
xlat
cli
add
and
std
adc
sti
mov
sub
xchg
gs
in
std
gs
je
pop
nop
inc
cmp
jno
mov
cltd
inc
mov
ss
or
xor
notb
jge
and
loop
pop
out
sub
test
rorb
mov
fnstsw
inc
add
sub
inc
ja
mov
in
pop
cmp
adc
xchg
in
int
faddp
and
or
inc
and
mov
lret
sbb
cmp
cld
fcoml
rolb
push
loope
jge
lods
dec
shlb
or
jnp
jmp
rcrb
xorb
pushf
out
push
mov
aas
push
pushf
mov
mov
jmp
mov
sub
ja
dec
sbb
in
negb
cmpsb
aad
shlb
sub
dec
rcll
push
rorb
je
clc
popa
xor
jne
or
das
jecxz
xchg
outsl
in
sub
out
lcall
pop
fs
cmpb
mov
push
loope
xchg
lea
stos
mov
ja
or
cmc
mov
sub
movsb
jo
out
mov
sub
cs
push
stos
inc
dec
stos
ljmp
cmp
push
scas
stos
or
aam
clc
aad
insb
outsb
lcall
and
mov
mov
mov
idivb
lcall
stc
inc
fsubrs
into
and
push
jne
push
call
lahf
cmpsb
sub
xchg
xor
imul
inc
fsub
jecxz
repz
jbe,pt
mov
push
gs
scas
cmp
or
and
ret
sub
repnz
pop
jecxz
mov
jg
add
sub
push
aaa
xor
jno
dec
aad
jno
ret
mov
js
rorl
clc
xor
mov
and
mov
mov
aas
push
push
adc
and
and
es
fcoms
cmp
subb
mov
movl
and
cmp
jne
jne
or
jns
add
ss
mov
scas
sbb
test
adc
je
dec
adc
push
fisubrs
leave
dec
imul
fsubrl
sbb
adc
mov
and
mov
mov
cmp
add
orb
add
or
cwtl
jg
sub
add
pop
sbb
or
and
insb
jno
push
sub
mov
xchg
imul
arpl
repz
ss
fildl
mov
xor
xchg
pop
and
ljmp
jmp
mov
js
stos
mov
or
mov
xlat
add
out
and
mov
xchg
and
faddp
loopne
aaa
sbbb
arpl
add
aas
pop
fistpl
lods
adcl
loopne
xchg
inc
sbb
adc
dec
sub
fadds
pop
mov
insl
add
push
out
lods
adc
popa
arpl
sub
bound
notl
jp
jne
ficoms
push
xchg
lcall
mov
test
pop
into
out
pop
hlt
ret
in
adc
mov
bound
sti
or
lods
xor
mov
dec
insb
mov
sub
fs
and
es
dec
xchg
mov
jg
or
inc
shr
jmp
jae
pop
repz
adc
ja
xchg
add
add
inc
fdivrp
mov
mov
dec
jg
cli
call
mov
sub
mov
mov
cmp
xor
cmp
shlb
test
and
js
loopne
xor
and
mov
je
and
cmp
bound
test
xor
imulb
and
sti
sbb
and
shlb
fbstp
iret
lret
xchg
scas
fldenv
mov
sbb
shlb
aaa
mov
cli
mov
cwtl
mov
dec
or
popa
sub
ss
je
aam
mov
pop
lock
clc
aad
ret
frstor
xchg
jns
or
cld
pop
out
lock
aad
push
in
faddp
out
ret
inc
in
sbb
jae
cmp
lock
jmp
movsl
mov
mov
xor
into
and
int3
sbb
pop
aad
dec
jmp
arpl
faddp
sub
mov
shll
fs
xor
pop
daa
inc
rclb
mov
rorl
mov
push
push
dec
lods
imul
jge
xchg
and
jns
fsub
ret
ja
lcall
cli
mov
push
decb
mov
cwtl
pop
sahf
xor
je
mov
movsb
mov
addl
jmp
add
call
call
bnd
roll
cmp
sbb
lret
xchg
in
inc
je
and
mov
stc
outsl
out
fimuls
pop
xlat
xlat
in
sbb
test
rcrb
xchg
outsl
scas
fcomp
icebp
arpl
vmwrite
push
push
inc
pop
add
out
in
xor
and
xor
xor
adc
ja
shl
loop
inc
out
add
inc
add
mov
inc
sarl
mov
lea
imull
rorb
push
divl
sbb
sbb
add
test
xor
jge
sbb
sbb
dec
fimuls
pusha
mov
mov
add
inc
mov
fadds
sbb
mov
jae
std
outsb
add
mov
insb
lcall
sbb
mov
sbb
pushf
xor
nop
fwait
outsb
adc
test
mov
je
cmpsb
push
pandn
gs
ljmp
divl
xchg
jbe
cmp
loope
cmp
add
sbb
in
jl
ss
pusha
andb
pop
andps
pop
insl
dec
xor
out
out
in
mov
int
sbb
div
jmp
popf
roll
test
daa
stos
inc
clc
dec
mov
dec
imul
mov
out
mov
push
inc
popa
fs
xor
mov
mov
adc
lret
fstp
xor
push
lock
or
pop
les
mov
xlat
add
jns
pushl
or
das
sar
push
jmp
lods
sub
pop
sub
jle
stc
xchg
call
jnp
mov
insl
mov
test
fs
xchg
sub
adcl
mov
cwtl
pop
push
mov
fidivrl
fmul
mov
adc
and
xchg
fidivrl
aad
lcall
fcompl
mov
lahf
and
dec
adc
outsb
inc
sbb
outsb
mov
mov
pop
in
jmp
out
cmc
adc
jno
pop
cmp
out
iret
pusha
out
cmp
imul
cmp
adc
arpl
pop
imul
xchg
pusha
outsb
mov
xchg
and
andps
jmp
enter
stos
push
sbb
sbbb
mov
cmp
aam
je
movsl
lea
cmp
lock
xchg
pop
outsb
test
sub
aam
repz
xchg
mov
inc
jp
aas
clc
and
stos
inc
pop
xor
dec
sbb
pusha
add
push
pop
adc
ds
sbb
mov
and
in
mov
aad
scas
fistl
push
out
cmpsl
dec
and
mul
ljmp
push
sysexit
lahf
mov
loop
mov
dec
add
lods
mov
push
mov
mov
adc
jb
scas
mov
mov
push
shrl
push
je
rolb
jbe
gs
fildl
sub
jbe
mov
daa
ja
inc
and
fcoml
testl
loop
xchg
pop
js
dec
gs
outsl
inc
stos
sub
or
hlt
mov
pushf
gs
push
sub
scas
pop
aaa
cltd
xchg
adc
scas
add
pop
mov
mov
push
testb
int3
jecxz
imul
jp
sbb
jbe
sub
cmp
adc
push
pushf
mov
mov
mov
pop
sub
jge
mov
or
pop
stos
push
pop
loope
adcl
cmp
fiaddl
test
jo
loop
int
jmp
je
enter
in
xchg
out
movsl
out
push
or
lods
aaa
pop
jge
sbb
sbbb
icebp
testb
pop
arpl
mov
lcall
ficoms
imul
xchg
jmp
fimuls
ljmp
dec
xor
sbb
mov
clc
fiaddl
ljmp
jne
xor
adc
leave
sub
test
cmp
sub
lock
mov
mov
pop
add
push
add
jns
fstpl
sub
lahf
nop
pop
repnz
jg
popf
or
cld
movsl
xor
cld
mov
or
and
and
adc
xchg
gs
fsubs
ss
mov
cmp
pop
sbb
fidivrs
lret
sub
cmp
in
cld
jae
into
push
jbe
jle
cmp
cmp
xor
mov
adc
mov
mov
pop
sbb
call
sub
pop
out
pop
and
fisttpll
adc
xor
push
jmp
inc
jmp
mov
popa
jmp
inc
xor
fisubl
xchg
sbb
adc
dec
lret
imul
fcomp
mov
cmp
pop
repnz
add
push
push
mov
xor
roll
add
js
mov
idivb
lcall
xlat
test
rcr
mov
xor
lods
and
js
add
push
sub
movsb
rorb
mov
adc
jmp
gs
jmp
sbb
bound
jmp
cmp
roll
push
imul
push
xorl
dec
xchg
ss
push
dec
mov
add
lock
unpcklps
shl
sub
mov
xchg
loop
lret
cltd
hlt
sub
outsl
aad
push
mov
mov
call
sbb
test
jmp
shll
inc
negb
xchg
shr
xor
push
out
xadd
sbbb
loope
jecxz
push
sti
add
jbe
icebp
cmpsl
xchg
dec
inc
xchg
sbb
pop
nop
ja
inc
adc
adc
sbb
out
insb
lea
mov
push
sbb
cs
inc
rcr
pop
jp
xchg
out
in
cmc
out
leave
loopne
mov
cmp
mov
mov
clc
or
push
les
test
lret
loopne
mov
lcall
shr
fidivrs
leave
test
aad
cltd
arpl
sub
sbb
fidivs
test
stos
test
movsl
or
jno
mov
scas
and
insl
cmpsl
mov
out
fldl
xchg
xchg
insb
cmc
fistpll
lea
adc
mov
inc
sub
push
in
and
je
mov
push
mov
mov
icebp
mov
fld
ret
setb
cli
adc
dec
add
insl
out
sub
push
mov
ljmp
mull
bound
xor
push
jne
inc
adc
xchg
or
loope
and
cmc
inc
push
out
push
and
jns
xor
xor
push
ss
push
addr16
xchg
sbbb
mov
jmp
push
imul
add
fistps
push
ret
imul
in
mov
adc
lock
xchg
inc
xchg
add
enter
cwtl
dec
xor
sbb
xor
gs
mov
jge
mov
add
testl
dec
fucomip
andb
dec
xchg
int
popf
xchg
test
mov
inc
fnstsw
pop
push
sbb
adc
rol
mov
stc
rcl
or
test
and
mov
mov
rorb
inc
dec
sub
cli
jae
scas
cmp
loope
xchg
lret
xor
push
out
cmp
cmpsl
pop
push
testb
and
xchg
ljmp
sub
jno
mov
mov
adc
rclb
pop
jge
lret
xchg
push
mov
xchg
pop
sub
lods
pop
adc
repz
xor
jmp
sub
xor
movsb
in
or
ds
xchg
cmp
pop
hlt
frstor
cmc
sbb
jecxz
nop
decl
std
mov
and
xchg
bound
push
sub
jo
fstl
fs
push
popf
mov
push
fs
inc
stc
punpcklbw
xor
movsl
pop
sbb
test
loopne
xchg
pushf
imul
dec
jae
sbb
adc
jmp
inc
mov
sub
repz
mov
femms
pusha
jo
xchg
mov
push
sbb
mov
push
sub
out
mov
insb
imul
call
ja
sub
fwait
dec
mov
lret
dec
inc
jnp
fisubs
push
mov
and
and
ucomiss
mov
jne
push
xor
mov
gs
mov
pop
mov
int
out
mov
bound
cld
divb
outsb
and
fistpll
icebp
sbb
xchg
daa
adc
out
add
adcl
inc
or
mov
mov
xor
fdivp
mov
mov
scas
mov
nop
vpmacsww
cltd
push
cmpsl
adc
cmp
mov
push
stos
test
add
or
mov
cmp
es
test
pusha
or
fiadds
mov
test
cmp
cli
aas
push
movb
cltd
je
push
fmuls
cs
mov
push
lds
lret
dec
xchg
sub
out
stc
rcrb
push
addl
inc
aas
sbb
dec
lds
push
or
ljmp
les
and
inc
dec
mov
push
sbb
xor
ss
rcrb
lods
add
sub
xor
adc
sub
xchg
popa
xchg
dec
insl
pop
dec
mov
bswap
add
out
popf
lret
jb
enter
lret
mov
aam
sbb
mov
lret
xchg
mov
gs
mov
rorb
sbb
aam
fldcw
xor
mov
pop
das
hlt
mov
mov
xchg
aas
ljmp
and
sbb
outsb
stos
dec
pop
stos
mov
ds
incl
je
xchg
cwtl
pushf
adc
sbb
lea
outsl
adc
in
ds
or
mov
pop
fmull
sbb
ja
imul
lods
xchg
testl
lret
sub
sub
sbb
lcall
stos
lret
negb
testb
cld
adc
das
dec
fsubs
subb
ret
int
stos
movsl
inc
adc
insl
push
in
mov
outsl
add
sarl
xchg
push
xchg
ret
sub
dec
adc
popa
dec
pop
push
bound
out
mov
in
push
test
adc
repz
sub
xchg
dec
mov
add
nop
pop
arpl
xchg
fs
fwait
push
ficoms
aam
xchg
xchg
mov
and
add
lods
adc
or
push
shll
ds
jno
out
sbb
cmp
or
sub
and
nop
push
inc
hlt
cmp
pop
faddl
jae
shrb
or
in
mov
pop
cli
fst
bound
js
stc
in
aaa
jno
mov
push
push
jbe
orb
and
jae
mov
mov
fdivs
fiaddl
rorb
sbb
sub
stc
or
cwtl
shlb
gs
test
or
cmpl
lods
add
cmp
ja
loope
sbb
mov
lods
in
mov
mov
aam
in
scas
pop
nop
xchg
daa
xchg
mov
data16
movsb
xchg
pusha
mov
sbb
rcrb
adcl
mov
push
fldt
subl
test
insb
dec
scas
jmp
push
jp
push
movsl
ss
pop
cmp
out
daa
dec
jne
ret
push
or
sbb
imul
xor
push
cmp
jnp
dec
les
push
cmp
scas
into
jb
add
lods
scas
mov
movsl
int
jg
je
xor
aam
cmpsl
notb
adc
arpl
insb
add
or
xchg
dec
dec
inc
dec
cli
imul
sub
inc
jecxz
mov
outsb
lret
pop
lds
jge
outsb
adc
clc
pushl
jb
out
data16
into
jle
jecxz
fwait
or
add
mov
mov
xchg
arpl
aaa
cmp
and
fbld
sub
imul
push
mov
jne
sbbl
mov
clc
sti
mov
shll
jnp
adc
mov
ss
dec
jmp
lods
mov
dec
xchg
aad
inc
jge
repnz
les
xrelease
pop
cs
add
mov
clc
and
push
and
sub
cmp
out
adc
movb
in
dec
and
cmp
popf
leave
jnp
mov
repz
in
and
jb
xchg
inc
push
dec
ds
jbe
and
pop
aad
jle
loop
fs
outsb
and
aas
jl
pusha
bound
push
shlb
sbb
stos
mov
inc
movsl
test
gs
add
xchg
fcom
imul
xor
rolb
mov
mov
mov
repnz
ds
sub
sti
lret
mov
cli
shll
jne
enter
divl
aad
pop
jno
jmp
in
push
push
loope,pn
sahf
xchg
add
xor
sbb
jg
inc
or
push
or
or
rol
sub
fnstenv
mov
jae
pop
adc
jg
out
dec
scas
and
lret
xor
jmp
xchg
mov
jg
or
mov
aas
fstl
jne
sbb
push
data16
and
or
sbbb
cs
cmp
aam
push
fimuls
sbb
ss
adc
cmpsl
sbb
test
pop
in
fbstp
sbb
pop
stos
mov
leave
fs
mov
gs
or
jns
je
adc
inc
stc
cmp
cld
rclb
lcall
fwait
aas
xor
cmp
mov
mov
mov
inc
out
inc
idiv
pop
xor
add
xchg
call
cmpsl
je
arpl
lcall
dec
mov
outsb
call
rcrl
mov
jns
imul
sub
ret
jle
test
mov
stc
call
inc
cmp
outsl
add
pop
adc
or
test
cs
leave
xor
mov
dec
add
jl
fwait
lret
add
jb
repnz
pop
pop
ret
and
imul
sub
subl
xchg
mov
fwait
repnz
pop
mov
mov
sbb
push
lds
fwait
pop
inc
mov
ror
cs
fdivrl
jne
cmpsl
pop
and
divl
insb
inc
jle
or
in
sub
xor
sbb
fimull
xor
or
es
in
xchg
pop
scas
test
push
mov
mov
cmpsb
xor
scas
mov
out
mov
xchg
adc
pop
add
test
imul
ljmp
mov
sub
lahf
adc
loop
dec
inc
adc
negl
iret
mov
aaa
ret
test
pop
and
dec
mov
xor
jnp
xchg
clc
adc
rorb
sbb
xchg
out
push
mov
call
loopne
cmpsb
push
sbb
and
mov
pop
add
in
and
xchg
xchg
lods
and
leave
in
mov
pxor
fsub
inc
mov
daa
stc
pop
add
leave
jbe
cmp
push
mov
xor
imul
lods
xlat
mov
pop
sub
pop
ds
fstps
xor
stos
mov
lret
cmp
or
test
or
sub
adc
mov
xchg
cmp
test
mov
popa
mov
xchg
mov
sub
inc
arpl
pop
jo
inc
push
ja
nop
enter
jbe
add
mov
xchg
leave
in
cli
mov
dec
mov
in
xchg
push
jl
into
outsb
pop
pop
loop
xchg
arpl
int3
jo
aaa
jmp
mov
add
xchg
adc
aas
jmp
adc
test
jno
or
lods
fs
call
jns
pop
mov
push
mov
xchg
lods
lcall
les
outsl
cmp
and
mov
les
mov
pusha
push
jge
cmpsl
insb
fnstenv
scas
scas
pop
icebp
sbb
cmp
inc
pop
fcomp
rcr
xchg
insl
repz
pop
sahf
add
std
fnsave
mov
xor
call
imul
sti
sub
jbe
and
rcl
stos
ljmp
mov
cs
inc
pop
test
cmp
mov
inc
pop
mov
xlat
push
jo
cmp
pop
adc
andl
push
cmp
into
mov
lahf
addr16
insl
stos
or
or
enter
js
push
repnz
fidivl
jmp
pop
cmpl
fadds
and
ret
fmuls
sub
aas
aas
adc
xchg
sub
mov
mov
add
dec
arpl
sub
mov
push
fnstsw
into
mov
loope
addr16
lds
pop
inc
cmpsl
push
nop
clc
addl
sbb
xchg
xor
pop
pushf
mov
xor
std
push
fidivl
sub
test
aam
cmp
in
ds
test
push
pop
mov
xchg
scas
out
cmp
jbe
xor
cmp
and
icebp
pushf
mov
icebp
aam
and
or
icebp
clc
clc
aas
xadd
imul
jecxz
int3
divl
add
dec
addb
repz
cli
loope
shll
scas
sbb
inc
sbbl
in
lea
gs
daa
xchg
sbbb
andb
mov
mov
aaa
cmp
fwait
test
adc
xor
xor
hlt
dec
xorl
in
and
jne
jnp
pop
push
jns
mov
xor
jb
scas
push
bound
jl
mov
enter
push
ljmp
sbb
testl
xchg
mov
outsb
sbb
add
insl
xchg
ja
inc
push
jae
sti
pushf
out
enter
stos
fsubs
fiaddl
pushf
xchg
push
aaa
mov
inc
mov
movl
ret
mov
inc
mov
jl
mov
jle
aas
adc
fldl
fnsave
sub
iret
push
dec
mov
jl
mov
pop
cmpsl
stos
mov
test
pop
aad
lret
lods
sbb
dec
or
inc
push
icebp
test
and
fsubrl
test
mov
dec
jns
fdivrl
pop
sbb
sbb
adc
divl
rorb
and
subb
sub
neg
jno
push
or
mov
lahf
je
rorb
jne
push
test
push
dec
test
jns
pop
mov
push
mov
sub
push
rcll
xchg
mov
jb
std
jmp
mov
cmp
in
adc
fstpt
sub
cmc
sub
inc
inc
int
pop
mull
or
mov
dec
mov
lods
fcompl
stc
test
mull
inc
testl
add
mov
lret
add
cmp
mov
cmp
cmp
inc
cs
adc
popf
out
fnstsw
mov
scas
cmp
vpsubb
int
sub
test
mov
loop
pop
loop
xlat
and
dec
mov
pop
rcrl
enter
int3
lea
stos
rorl
aas
mov
mov
icebp
or
je
ja
push
xlat
insb
jne
and
fsts
je
xrelease
in
mov
jno
or
roll
jb
adc
push
and
cwtl
mov
outsl
pop
std
int3
movsb
mov
lret
movsl
or
jg
mov
rcll
push
add
mov
mov
jo
fstps
shlb
bound
adc
inc
inc
gs
es
mov
aas
clc
pop
scas
mov
arpl
aas
xorl
jg
mov
fsubl
call
dec
outsl
icebp
or
mov
sub
ror
adc
add
scas
and
mov
scas
inc
aam
cmpsb
aad
add
orb
testb
dec
fs
inc
rcrl
mov
popf
push
nop
add
jl
out
adc
sbb
pop
js
lahf
mov
add
mov
es
test
push
popa
lcall
insl
pop
fstps
into
jmp
xlat
jnp
rorl
inc
push
ret
div
adc
pusha
iret
cmp
out
xor
addr16
push
lcall
in
jle
insl
ficoms
out
aam
in
and
cwtl
fistl
mov
xor
push
mov
stc
ret
xlat
adc
jae
xchg
je
cwtl
push
mov
lret
pop
push
inc
and
mov
fucomip
lret
stos
in
xlat
aaa
mov
xchg
in
push
mov
stos
fmull
cmc
adc
and
cli
sahf
ljmp
clc
das
add
into
adc
mov
es
mov
faddl
leave
mov
mov
xor
pusha
pop
scas
nop
mov
and
sahf
pop
jbe
fisttpll
popa
test
pop
ss
mov
pop
jno
addr16
jmp
xchg
pop
es
leave
or
das
pushf
inc
cmp
mov
leave
mov
sti
iret
add
xchg
push
xor
add
pop
cld
ret
add
cld
pop
jns
push
roll
inc
pusha
mov
rep
imul
and
decl
mov
mov
lahf
xchg
sub
or
push
mov
push
nop
gs
orl
jge
aaa
jl
adc
push
sub
sbb
incb
xchg
xor
out
jae
pop
cs
sahf
repz
pop
or
jns
call
loopne
pushf
mov
test
hlt
loop
lret
xor
ss
in
pop
cltd
arpl
push
xchg
jge
xchg
xchg
push
movsb
mov
push
cmp
push
aaa
into
sub
xor
pop
loop
flds
jo
push
push
icebp
lea
xchg
rcrb
push
adc
xchg
inc
hlt
dec
ss
arpl
aaa
adc
addr16
into
push
ss
aam
xor
or
adc
ret
xchg
sbb
or
xchg
inc
cs
sbb
lds
xor
pop
mov
xchg
push
enter
int3
das
movsb
adc
outsl
xor
inc
in
cmp
xchg
mov
jmp
sbb
sbb
cs
hlt
leave
outsl
hlt
lret
mov
cltd
lcall
js
pop
inc
pushf
jmp
sbb
mov
add
sbb
inc
out
iret
stc
mov
xchg
pop
mov
pop
pop
ds
insb
scas
out
js
movsb
cmp
sahf
int
fwait
cmp
xchg
xchg
mov
out
or
fs
outsb
das
sub
lret
lods
test
test
xor
out
test
shll
xchg
xchg
imul
lods
aaa
xor
or
push
sub
mov
lcall
pop
das
jg
and
mov
cmpw
outsl
stc
dec
inc
dec
cs
xor
xchg
test
fsubrs
or
loope
addr16
pop
cmp
mov
or
jmp
sub
pop
ret
cmpsb
xchg
mov
popa
outsl
clc
mov
mov
mov
ja
enter
lret
psubsw
ljmp
clc
xchg
shrl
fdivs
cmp
mov
ljmp
xor
lods
jns
xor
notl
test
sub
jmp
outsb
inc
mov
sbb
adc
mov
dec
outsl
orl
dec
mov
shll
clc
push
ja
add
fistpll
add
test
cmpsl
lret
dec
lods
sbb
inc
push
addr16
dec
sbb
adc
xchg
inc
xchg
in
sub
adcb
inc
popa
adc
inc
sub
pop
mov
test
push
mov
jl
rorl
mov
lock
mov
and
and
repz
imulb
imul
aas
sub
push
inc
xor
pop
sbb
push
cmp
rolb
push
inc
jo
aas
jno
arpl
add
mov
sub
xor
jmp
add
popa
inc
sti
addr16
shrl
fildll
sbb
subb
loope
inc
rcrl
mov
mov
sub
push
jle
push
jmp
lcall
out
push
dec
inc
fidivl
movb
fidivl
es
pop
mov
int3
ret
jne
jb
int
cmp
dec
mov
mov
out
inc
pop
ljmp
cmp
test
out
fsts
cmp
cmp
aaa
mov
push
leave
int3
mov
mov
add
fdivrp
repnz
sub
and
mov
inc
call
jecxz
xchg
sbb
gs
and
sbb
outsb
or
mov
sub
dec
in
mov
int
pusha
aas
inc
mov
ljmp
js
pop
dec
repnz
cmp
aad
jae
outsb
or
je
and
mov
scas
mov
aaa
lods
or
mull
xchg
sbb
pop
mov
out
mov
sbb
cltd
mov
aam
add
cmpsl
pop
pusha
jmp
cmp
fs
mov
repnz
cmp
xor
mov
sub
lret
lret
jns
insb
cmp
cld
popw
movsl
enter
leave
sti
inc
fcmovnu
mov
and
push
dec
xchg
shl
ds
je
das
fcompl
loopne
iret
fdivp
lock
or
and
ja
daa
push
lock
adc
aas
jb
repz
mov
lods
shll
js
push
pop
lods
jb
jmp
mov
adcl
jecxz
mov
bound
jge
leave
test
push
scas
xorl
cli
insb
jp
dec
mov
mov
ljmp
pop
in
in
das
out
sbb
and
bound
loop
jne
js
dec
pop
ljmp
add
enter
add
popfw
arpl
push
mov
mov
sbb
jnp
lahf
mov
xor
mov
pop
dec
enter
jbe
fildl
les
push
sarb
gs
popf
pop
int3
sbb
mov
iret
andb
inc
mov
push
out
xchg
ss
and
incb
mov
dec
shlb
push
xor
rcrb
call
fisubs
jns
mov
sbb
push
xchg
pop
push
call
jns
cli
out
pop
data16
and
inc
es
xor
jno
adc
fcomps
and
frstor
shll
in
sbb
fdiv
jns
sarb
mov
jo
out
pop
dec
jnp
sbb
inc
shl
jns
aas
shll
sub
arpl
iret
sbb
xor
dec
in
ret
mov
xchg
bsf
pop
insb
mov
mov
imul
pop
out
pop
les
imul
inc
cmc
pop
bound
lahf
stos
push
pusha
mov
outsb
add
push
adc
leave
imul
cmp
jl
pop
xor
mov
aad
mulb
pop
push
jbe
imul
or
pop
jg
aaa
pop
mov
rorl
inc
adc
aaa
nop
out
aas
inc
fs
adc
jge
into
outsl
xchg
push
rolb
std
pop
dec
aaa
ljmp
cmp
sub
add
daa
roll
lret
pop
nop
insl
ret
xchg
mov
test
mov
pop
lods
adc
add
push
fnstenvs
repz
dec
pop
fnsave
fnstsw
sub
imul
mov
movsl
mov
popa
test
outsl
gs
add
jmp
fildll
adc
mov
add
xorl
out
pop
test
xor
cmc
movsb
ret
in
xchg
inc
clc
mov
mov
lcall
addr16
pop
fs
lock
fdivl
mov
cmp
insl
adc
insl
stc
lea
xchg
cmpsl
pop
test
aas
cmp
dec
je
xchg
adc
and
cmp
shrb
sbb
jb
mov
add
push
add
icebp
or
dec
xor
sarl
bound
inc
arpl
adc
ror
push
lock
push
nop
out
scas
lret
andb
inc
xlat
inc
decb
cmpsl
add
sbb
add
outsb
icebp
cli
push
fucomp
mov
cld
fmulp
mov
xor
int
fstpl
sbb
js
push
push
aaa
pop
fiaddl
sbb
mov
pusha
in
push
pop
mov
jbe
fisttpl
adc
sti
xor
mov
mov
ja
jbe
outsl
xor
sar
pop
ret
jge
adc
push
test
pop
hlt
cmpsb
cmp
jecxz
aad
pop
sub
push
cmpsl
lahf
push
jecxz
sbb
ret
jnp
mov
xor
sub
xchg
ljmp
mov
push
adc
ja
hlt
pop
movsl
adc
push
mov
cmp
es
js
je
popf
mov
aaa
mov
out
sub
mov
lods
insb
imul
inc
add
fwait
cltd
daa
pop
mov
push
dec
mov
ret
and
cmpsl
and
cli
cs
mov
rcr
sbb
add
lret
xchg
xchg
out
popf
lahf
add
mov
cmpl
pop
hlt
sub
sbb
cmp
xchg
gs
inc
xor
push
add
je
cmpb
and
jnp
movsb
daa
mov
and
dec
into
jne
inc
pop
jp
pop
push
or
ret
lret
jecxz
mov
and
xchg
lds
jl
lahf
ds
xchg
xchg
lods
mov
lret
mov
xchg
and
xor
pop
addr16
xor
sbb
adc
inc
dec
frstor
insl
loopne
and
arpl
call
mov
mov
xchg
out
popf
xor
and
mov
or
jns
es
test
cmp
ljmp
or
adc
sbb
mov
mov
scas
loopne
pop
inc
sbb
loop
pop
sbb
ljmp
shll
test
into
or
leave
cmpl
xchg
cmp
fdivr
inc
shlb
jle
cmp
or
repnz
daa
aad
push
dec
sbb
mov
iret
xlat
pop
mov
shrb
add
in
fstpt
jno
xor
int
test
lret
mov
push
dec
push
adc
pusha
gs
pop
push
or
mov
into
je
insl
loope
cmc
into
test
mov
dec
sbb
scas
cmp
fucom
sti
mov
inc
pop
imul
bound
jle
jl
sbb
test
dec
js
or
cmp
lods
out
lods
push
movsl
or
mov
stos
stos
lcall
sbb
sub
fidivs
stos
fwait
call
pop
sub
and
xlat
or
cmp
jmp
inc
push
fimuls
push
loope
add
and
je
psubsb
adc
fwait
cmpsb
mov
stc
mov
inc
lret
and
rclb
stos
push
test
jg
pop
movsb
adc
jmp
xchg
mov
mov
push
sbb
sbb
test
pushf
mov
mov
jae
or
or
sti
je
adc
inc
cmpsb
ljmp
push
out
mov
xchg
pop
cmc
inc
pusha
jge
dec
sbb
xchg
push
shlb
test
fneni(8087
outsl
jmp
outsl
jg
int
lock
fs
repz
bound
insl
aam
cmpsl
mov
in
sbb
dec
popa
push
adc
test
js
mov
mov
lret
push
sbbb
out
test
dec
jmp
pop
mov
dec
pop
push
sbb
pop
xchg
cmp
inc
enter
fs
rcl
imull
fdivs
gs
push
xchg
pop
shrl
push
scas
lea
rcl
aad
test
arpl
push
icebp
push
fists
insl
bound
sahf
sub
and
and
xchg
rcrb
testl
sbb
rcr
xchg
and
add
adc
gs
add
ljmp
mov
jge
push
imul
cwtl
popf
rolb
cwtl
jecxz
pusha
call
in
and
adc
adc
jne
insb
lcall
and
fstpt
mov
aaa
and
fwait
pop
and
dec
or
mov
div
jo
adcl
imul
jno
lret
push
adc
push
pop
push
hlt
icebp
cmpsl
daa
rcll
divb
inc
inc
xchg
lcall
std
fcmovu
lcall
aas
push
add
xchg
sub
ss
iret
test
xchg
jmp
test
scas
inc
mov
jg
clc
aam
sub
lods
push
mov
sub
mov
dec
inc
out
mov
fcom
fnstcw
arpl
push
idiv
cmp
iret
or
cmp
fidivl
or
xor
movsb
and
push
repnz
lods
inc
pop
dec
cmp
insl
lea
jns
mulb
sub
jecxz
sbb
loope
fstpt
mov
inc
push
loopne
jae
xchg
xor
dec
adc
fbld
jmp
inc
jno
fcompl
sub
or
aas
cmp
jno
push
lahf
mov
nop
cmpsl
add
sbb
sar
jae
das
push
aas
mov
in
push
fidivs
mov
add
push
xchg
rclb
js
enter
lret
pop
icebp
fldl
ja
fstpt
and
add
inc
gs
movsb
and
in
dec
lods
inc
mov
stos
cs
xchg
aam
movsb
sbb
xchg
movsl
inc
jecxz
scas
sarl
xor
mov
call
push
sub
mov
push
out
jne
cmp
pop
and
in
jo
je
fildll
push
outsb
sub
addr16
fsubl
scas
add
push
dec
scas
cmp
insl
stos
mov
stos
test
adc
and
in
and
fldenv
cmp
mov
fs
je
shr
data16
pop
sub
ret
rcrl
jecxz
add
pop
in
test
leave
dec
cmp
stos
pop
pop
outsl
xchg
or
mov
insb
and
jo
dec
ret
inc
loope
push
nop
lcall
dec
imul
and
repz
popa
aaa
cmpsb
or
cmp
js
loope
xchg
dec
addr16
cs
stc
cwtl
mov
sti
or
push
xor
test
cmp
je
pop
and
mov
pop
and
roll
cmpsl
leave
loop
push
ret
out
sub
fidivl
pop
cmpl
pushf
adc
in
je
xor
adc
stos
popa
mov
repz
pop
loope
fnstenv
adc
pushf
mov
push
stos
into
mov
jne
pop
pop
flds
sti
popl
dec
dec
outsb
loop
in
fistps
mov
sub
mov
mov
push
sbb
arpl
pop
mov
add
mov
add
fildl
lcall
stos
dec
into
push
dec
mov
jb
jge
aad
ja
in
xor
sbb
pop
sub
shll
jo
stos
push
lock
fisttpll
dec
sbb
sahf
hlt
sbb
and
add
inc
fists
cli
mov
popf
mov
mov
pusha
sbb
addr16
adc
jae
fisttpl
movsl
hlt
popa
sarl
inc
add
add
sbb
shr
shll
sub
dec
or
jl
aad
sahf
shlb
jns
jne
push
daa
sti
jl
fidivrl
aaa
jg
lea
xchg
lods
loopne
jl
ja
xchg
sub
cmpsl
enter
ljmp
sbb
outsl
lcall
xchg
subl
adc
pop
adc
cltd
cltd
pop
iret
add
mov
pop
xlat
or
pop
pop
cmp
enter
inc
loope
cld
es
repnz
pushf
jg
jmp
fnstcw
sub
jp
mov
je
xchg
xchg
fcoml
push
fcomp
mov
sub
xor
imul
lcall
lods
push
sbb
or
pop
fmul
or
mov
test
mov
pushf
jl
mov
das
lret
clc
sbb
mov
push
ret
mov
repnz
lahf
cmp
cmpsb
movsl
aas
cld
push
in
fldenv
mov
mov
xchg
fmuls
std
movsb
dec
xor
in
sbb
fdivs
add
xchg
jne
out
shll
push
iret
iret
mov
movsl
push
adc
int
int
stos
mov
mov
fisttpll
adc
push
push
test
int
testb
cwtl
scas
or
add
push
pop
xor
leave
test
fs
or
jle
push
or
leave
mov
shll
aas
inc
es
jo
mulb
pop
or
ret
inc
jmp
fadd
arpl
mov
sbb
xor
mov
xchg
imul
nop
sbbl
xor
scas
xor
add
fmull
pop
dec
or
in
out
insb
lret
aaa
mov
lcall
dec
rolb
add
gs
or
fs
inc
adc
imul
mov
repnz
call
sbb
call
std
out
or
lods
dec
int3
in
js
cmp
push
xor
iret
cmp
push
add
loop
xchg
gs
inc
add
es
rclb
jne
sbb
inc
pushf
jne
test
lcall
cmp
aaa
pushf
imull
flds
repnz
or
outsl
pop
rolb
xor
pop
loopne
pop
fcompl
jb
fwait
or
adc
pop
sub
in
mov
outsl
movsl
mov
dec
imul
sbb
push
jecxz
mov
pop
sbb
push
loop
cwtl
pop
fnstcw
inc
jbe
insb
aad
movsb
cmp
mov
and
cmp
mull
mov
cld
inc
or
fdivrl
loop
xlat
cmc
in
adc
scas
cmp
jg
inc
cmpsb
cs
in
insl
scas
cs
adc
cld
test
call
jne
push
xchg
sbb
in
cmp
mov
scas
add
cwtl
adc
loope
and
in
sbb
iret
mov
cmp
cltd
cmp
movsl
inc
mov
hlt
mov
inc
jb
nop
popaw
inc
lds
mov
sub
frstor
adc
sub
or
mov
inc
loopne
inc
ficoml
mov
pop
stc
xor
mov
mov
rolb
cmp
imull
dec
inc
jge
cmp
testb
out
jmp
xchg
xchg
outsb
fs
cld
mov
or
jae
movsl
push
mov
xor
adc
cwtl
aaa
jnp
xchg
and
or
mov
cmp
sbb
cmp
mov
repnz
and
imul
dec
cmpsl
cmp
leave
pushl
mov
lea
sub
lahf
jp
movsb
or
or
cmp
adc
push
out
or
js
popf
pop
jmp
repz
and
and
pop
mov
lds
sbb
cmpsb
insb
pop
nop
insb
notb
jb
push
and
cltd
sbb
jg
dec
xchg
js
xchg
dec
pushf
sahf
hlt
es
mov
out
js
daa
in
imul
sbb
xor
jno
sahf
cs
ljmp
jg
push
loopne
andl
loop
idivl
push
pop
mov
repz
movsb
fstps
or
in
lcall
cmp
mov
data16
dec
jne
in
or
mov
xchg
sbb
mov
aam
mov
sub
mov
xchg
xor
ret
push
orb
cmpsb
add
gs
pop
lret
rcrl
jmp
lock
shll
test
xor
std
mov
xchg
addr16
pop
scas
int
mov
sub
push
mov
movsl
xor
clc
jno
mov
cmc
adc
mov
daa
jno
lods
push
aad
cmp
shl
repnz
cmp
mov
and
mov
mov
dec
dec
mul
test
mov
or
in
loopne
push
clc
inc
not
or
pushf
pushf
cmc
cs
sub
fmuls
fwait
addr16
iret
xor
add
pusha
mov
mov
icebp
in
stos
adc
inc
in
int3
outsl
cmp
fucomp
scas
bound
in
add
fwait
xchg
jb
shlb
icebp
movsb
inc
add
pop
mov
xor
sbb
lds
or
mov
je
mov
xor
mov
inc
dec
hlt
aad
jmp
pop
sar
lea
lods
cmpsl
mov
xchg
xchg
pop
stc
mov
mov
adc
sbb
es
fwait
lods
push
jbe
loopne
int
mov
in
out
subl
xchg
cs
jno
push
outsb
mov
icebp
cmp
data16
pop
inc
decl
js
inc
mov
push
xchg
lret
sbb
inc
sbb
orb
mov
test
xchg
fisttpll
jle
orb
shll
cmp
iret
das
out
ljmp
cmp
das
fnstenv
or
cs
xchg
shl
subb
iret
push
je
lcall
aas
aaa
xchg
insl
cmp
xchg
mov
xchg
int
add
and
xchg
inc
insb
inc
add
ds
int
cmp
cmp
clc
mov
popf
sub
scas
neg
in
jmp
popf
lods
pop
xchg
fnsave
xchg
outsl
mov
stos
rclb
ds
lds
mov
push
rcrb
jb
jnp
mov
fadd
add
int
jl
imul
xchg
pop
das
dec
sahf
and
cmc
addr16
jno
xchg
push
shrb
add
mov
loop
pusha
in
in
pop
repnz
xchg
in
je
add
lock
mov
stos
rolb
sar
xchg
or
xor
inc
mov
lret
adc
fisubrl
ret
push
mov
rcll
jle
gs
jne
sub
xchg
or
push
mov
fdivl
sbb
adc
sub
cmpsb
testl
pop
js
add
push
cmp
leave
mov
xor
repz
mov
add
jns
out
jno
out
ja
popf
jae
imul
out
xor
jmp
je
dec
lcall
jge
scas
lcall
test
cmpsl
repz
iret
mov
cmp
paddq
fisttpl
cmp
add
repz
mov
mov
out
and
aad
mov
add
sub
mov
lahf
loope
negb
cmpsb
aad
movb
inc
les
jnp
rcrb
xchg
or
repz
fxch
mov
xor
cmp
rcll
mov
xor
lods
mov
inc
mov
sbb
push
adc
or
int
push
es
popf
mov
adc
addr16
pop
pop
js
cmp
push
pop
cmc
mov
out
in
cmp
cli
call
mov
jle
adc
in
dec
pop
fucomi
in
mov
unpckhps
push
push
pop
mov
cmpsl
fistps
sub
loopne
fiadds
push
test
push
fst
pop
mov
push
fisttps
adc
stos
lret
fldcw
sbb
in
insl
jl
cmpsl
stos
mov
pop
dec
pop
xor
cs
sub
lea
inc
sub
pusha
jns
gs
imul
dec
xor
mov
int
mov
push
add
cltd
xchg
sbb
lcall
pop
cltd
dec
mov
lea
sub
popf
jae
in
pushf
jle
pop
push
sbb
jbe
ficoms
dec
jno
ljmp
adc
mov
scas
stos
and
cmp
clc
pop
pop
stos
mov
sarb
repz
repz
push
xchg
das
cld
add
jb
jecxz
mov
jns
je
pop
outsb
cmc
stos
mov
dec
inc
mov
fs
std
imul
addr16
sbb
push
mov
repnz
das
loopne
enter
cmpsb
sbb
cld
stos
cli
and
insl
push
push
aad
lret
mov
negb
xchg
mov
shll
clc
xchg
ret
mov
xor
push
cmp
jns
fwait
xchg
cmp
mov
jecxz
adc
inc
sub
xor
and
pop
mov
ds
in
jle
mov
insl
insl
icebp
test
lods
call
call
fistpll
inc
lret
ror
xchg
and
aam
cmp
or
test
mov
mov
adc
jns
mov
add
call
add
out
mov
stos
scas
xchg
shrb
dec
sub
sarl
xlat
bound
mov
push
sti
sub
call
jl
arpl
ret
cmpl
xor
xlat
std
mov
sub
js
cltd
dec
inc
mov
mov
loop,pn
cwtl
pop
addr16
push
mov
fdecstp
sbb
cli
mov
sbb
filds
xchg
aas
add
std
inc
sub
cmpsb
fwait
mov
xor
inc
inc
popa
mov
bound
mov
dec
push
loopne
fnstsw
insb
in
leave
xchg
bts
xchg
repnz
fwait
sti
out
pop
sub
cmpsl
jle
xor
jae
sub
jmp
scas
js
sub
xchg
sbb
sbb
add
ret
inc
rcrb
and
fs
pop
inc
je
adc
cmp
mov
adc
inc
stc
pop
xchg
sub
rcll
and
sbb
jb
mov
and
mov
sub
sub
sub
xchg
dec
xor
stos
mov
lret
lahf
incl
out
js
xor
das
in
sub
xlat
mov
and
ret
test
pop
fldt
xchg
mov
pop
lret
push
cmp
sarl
insl
pop
ss
adc
sbb
mov
outsb
sbb
int3
mov
test
fwait
jecxz
pop
mov
enter
cmp
push
out
ret
int3
imulb
in
movsl
push
aaa
or
cmp
and
mov
and
or
mov
mov
pop
mov
shl
mov
jb
jbe
mov
stos
fdivs
imul
mov
negl
add
rcrl
push
and
inc
addr16
sahf
cmp
mov
or
inc
mov
stos
xor
inc
mov
dec
inc
add
jbe
push
sbb
mov
jmp
xor
movsb
push
fnstcw
jg
jle
mov
adc
cmpl
out
shlb
into
movb
add
lods
and
xor
jne
rcrb
ret
add
fisttps
or
and
std
enter
push
pop
inc
in
mul
test
inc
add
outsb
sub
jno
stc
mov
loop
dec
out
mov
dec
lods
xlat
aad
adc
out
mov
inc
and
scas
leave
in
mov
daa
xor
adc
push
cmp
jae
out
jecxz
xchg
sub
cmp
mov
cmc
inc
fnsave
xchg
add
pop
das
xchg
adc
pop
popa
pop
das
or
push
pop
nop
orb
out
sahf
incb
xor
mov
shlb
push
xor
sub
lret
xlat
ljmp
pop
je
fisubrs
test
push
sbb
fcoms
xchg
rorb
repz
cmp
adc
scas
popf
and
orl
pop
out
aaa
mov
ret
mov
sbb
cmpsl
fcmovb
leave
mov
xor
cmp
pop
or
add
lods
cmp
jge
mov
dec
inc
in
cld
mov
push
or
push
pusha
movsb
push
push
pop
js
cmp
jecxz
repz
cmp
aam
sub
cmc
out
add
inc
hlt
sbb
mov
test
jp
sbb
das
data16
jle
mov
les
mov
adc
ret
dec
dec
jne
cmpsl
jl
or
push
pushf
adc
mov
aas
xchg
adc
mov
sub
jb
nop
hlt
lock
jge
pop
sub
sbb
adc
out
pusha
xor
push
pop
sbb
jnp
add
and
das
ret
xor
or
xchg
inc
and
inc
xchg
sbb
push
test
addr16
xchg
mov
add
jns
and
js
or
inc
pop
pushf
daa
sbb
pop
inc
icebp
mov
arpl
cli
sti
setg
add
sbb
xor
pop
ja
lods
rclb
xor
aas
jecxz
xor
inc
cmpsb
push
out
jg
mov
scas
or
data16
adc
xor
pop
and
iret
inc
dec
lods
jne
in
out
xchg
mov
rcrb
xor
sub
rcl
push
add
fcoml
ficompl
mov
push
stos
jae
push
mov
sbb
jge
inc
vunpcklpd
cmc
adc
mov
insb
insb
mov
hlt
js
pop
mov
add
xchg
mov
ss
adc
cmpsl
stos
je
pop
xorb
leave
lahf
popf
xor
aam
stc
addl
jno
mov
aam
and
testl
or
fiadds
insl
nop
clc
inc
add
out
inc
flds
jge,pt
mov
push
sub
cmp
add
mov
incb
jmp
pop
gs
mov
dec
push
loope
xchg
mov
daa
mov
int
mov
cmc
dec
push
mov
sarb
cmp
insb
aaa
fstpl
enter
fcomip
xchg
mov
iret
mov
mov
repz
mov
add
clc
pop
adc
xor
pop
add
add
pop
fnstcw
push
sub
outsl
pop
stos
sbb
cmp
xchg
cli
xchg
jae
test
mov
ds
push
push
jmp
std
sarl
mov
xlat
xor
stos
aas
loope
cmc
in
mov
hlt
sub
xchg
and
xor
push
fsubr
into
sbb
loope
jmp
mov
dec
rolb
xchg
or
inc
bswap
ljmp
dec
testl
lds
insl
test
or
jo
fsubrs
xor
cmpsl
dec
dec
pushf
pop
icebp
inc
sbb
xor
mov
jno
mov
cmp
sti
stc
push
lods
and
mov
push
out
movsl
in
cmpl
std
push
sbb
lea
jae
rclb
iret
jae
in
mov
jg
add
xor
mov
cmpb
js
mov
inc
cmp
mov
add
mov
das
dec
loop
and
ret
loopne
xchg
rcll
lcall
dec
sbb
popa
xchg
xsha1
cmpsb
or
pusha
mull
dec
popf
lods
mov
out
enter
shrb
sub
in
ss
popa
mov
hlt
inc
daa
mov
hlt
shr
hlt
inc
push
or
movsb
xchg
imul
or
icebp
imul
xor
lcall
sbb
sbb
inc
xor
in
testl
imul
mov
stc
lock
dec
inc
into
add
repz
mov
cmp
add
dec
out
psllq
lds
and
mov
jp
std
and
mov
popa
movl
adc
dec
stc
rolb
dec
das
push
aam
and
loope
sub
xlat
in
push
cmc
cld
dec
fs
jae
sub
mov
or
ds
mulb
sar
push
hlt
jmp
fadd
mov
iret
sub
sahf
mov
imul
jae
jl
push
aas
lods
orb
mov
and
push
addr16
or
out
outsb
ror
xchg
movsl
xchg
pushf
fwait
push
add
test
xor
lcall
xor
xchg
cmpsl
cmc
lods
push
rcr
fisubs
fimull
fwait
push
imul
outsb
jp
cli
aas
into
mov
dec
push
movlps
jno
jl
mov
pop
mov
push
int
leave
inc
daa
fcomps
mov
xorl
adc
mov
and
insl
mov
pop
popa
fcmovnb
ret
dec
pop
andb
dec
outsb
sete
sbb
jmp
or
arpl
or
ror
frstor
xchg
inc
aas
or
cltd
incb
scas
push
mov
adc
out
sbb
cmp
scas
xchg
push
dec
sub
testl
jns
pop
and
or
mov
int3
push
mov
sub
mov
imul
sbb
add
adc
adc
test
das
pop
shrl
or
lcall
in
xor
mov
sbb
sahf
std
in
pop
and
rcpps
sub
scas
dec
xchg
mov
jbe
insl
push
outsb
sahf
sahf
lahf
cmp
aam
cmp
xor
sbbl
push
loop
pop
lds
sbb
adc
loope
les
ja
push
cmp
adc
mov
pop
lds
int
rep
daa
movsb
testb
js
aam
sarl
adc
daa
scas
mov
inc
setnp
daa
sbb
adc
ret
lods
sub
add
pop
sub
pop
xor
sbb
fbstp
xchg
and
and
xor
sub
mov
add
pop
pop
imul
fstps
in
or
sahf
hlt
mov
push
out
jno
filds
popf
jne
pop
mov
stos
and
int
cmp
cmpsl
xor
dec
xchg
popa
sbb
lcall
mov
pop
mov
add
adc
jnp
insl
test
aaa
in
test
sub
jmp
sbb
and
and
std
mov
mov
bound
aad
push
lods
lret
daa
push
fisttpll
and
pop
pop
pop
rcl
mov
inc
mov
jne
jo
sbb
pop
push
pop
mov
and
pop
jmp
cmp
repnz
icebp
lea
mov
pop
ret
mov
add
test
adc
sub
push
mov
movsl
cs
sub
dec
mov
shr
stc
scas
mov
mul
cmp
and
or
sbbl
mov
xor
sbb
popa
repnz
dec
mov
adcl
or
jmp
pop
aam
pushf
pop
aam
jo
call
aas
jecxz
sub
ss
xchg
notl
lock
mov
xchg
push
int
into
jp
push
jp
nop
into
xor
scas
inc
or
cmp
xor
fmull
sahf
mov
icebp
cmp
test
pusha
and
daa
lods
jp
lret
mov
das
adcl
mov
rol
mov
add
jg
adc
mov
sub
sub
clc
xchg
mov
mov
fadd
int3
in
sahf
jns
loop
sahf
repz
mov
xchg
xchg
jnp
sbb
fbstp
shrb
out
xchg
bound
add
cmpsl
pushf
lahf
pop
std
jnp
testl
lcall
enter
inc
pop
mov
mov
int
or
sbb
and
dec
sbb
mov
or
addr16
xor
movsl
and
clc
ficompl
aam
push
aam
jge
fisubrl
icebp
cmp
adc
pop
fs
cmp
nop
xchg
lds
jne
push
mov
jb
sbb
aaa
push
push
mov
pop
adc
push
inc
jg
xchg
jno
jge
cmpsl
in
outsb
or
mov
lods
cld
xlat
adc
xor
push
dec
xor
lret
loopne
and
fnsave
leave
jle
gs
lret
push
lea
fisubrl
mov
clc
out
or
mov
push
std
aas
xor
in
ja
jg
lds
sub
sub
insb
gs
xchg
sub
or
push
in
mov
data16
jmp
in
stos
mov
hlt
into
add
push
jle
xchg
xor
adc
add
pop
imul
mov
mov
push
dec
or
ss
cli
ror
or
inc
arpl
ljmp
daa
int3
add
imull
push
adc
lods
test
rorb
mull
mov
stc
shlb
or
xor
cmpsb
add
cmpsb
cmpsl
xor
mov
out
cmp
mov
cld
popa
pushf
cmp
cmc
and
xor
xchg
mov
and
es
xor
cmp
mov
adc
punpckhbw
testb
sbb
and
inc
repz
cld
mov
adc
mov
dec
incl
jp
int3
nop
xor
lahf
jne
push
push
icebp
sub
pop
jns
mov
icebp
mov
sub
jbe
push
cli
cld
add
sub
cmpb
inc
je
mov
ljmp
or
test
loop
pop
mov
test
dec
dec
test
sub
and
arpl
jne
pop
sub
mov
xlat
sub
test
pop
adc
and
sbbl
mov
mov
and
rcrb
mov
test
push
cmp
into
daa
xchg
sub
ja
insb
mov
push
pop
data16
add
add
leave
adc
pop
add
jns
jp
enterw
and
dec
test
and
xchg
lock
iret
pop
jmp
aas
shll
inc
pop
sbb
rcrl
jns
cmp
dec
push
xchg
adc
cs
lods
iret
cmpsb
cmc
mov
and
adc
jle
lea
dec
pop
push
lds
aam
cmc
imul
dec
lcall
mov
or
lods
sub
bound
mov
notb
scas
out
inc
push
jg
jns
push
mov
loope
xchg
fisubl
cmp
or
jmp
inc
repnz
sbb
or
dec
cmp
popa
cltd
dec
jo
popa
out
or
addr16
adc
xchg
cli
sbb
ss
test
fisubl
js
cmpsl
mov
addb
bound
les
xor
xor
adc
mov
fidivrs
inc
jno
cmpsb
in
lcall
push
pop
fs
fmul
lea
cmpsl
loope
push
pop
shll
or
mov
shll
jae
push
pop
dec
pop
xor
add
or
cmpsb
and
iret
shl
adc
mov
add
roll
jmp
dec
sub
shr
je
cmp
pop
bound
pop
movsl
xor
int3
pop
test
rcl
je
xor
mov
add
hlt
cs
dec
cmpsl
sbb
inc
lods
call
iret
or
lods
cltd
dec
mov
jle
imul
push
lret
decl
ja
fs
rorl
and
mov
push
imul
inc
je,pn
sub
mov
sarl
andl
xor
xor
push
push
or
pop
xor
lods
movsb
negb
mov
shr
jb
cmp
fistl
jle
in
adc
pop
movsl
sbb
out
mov
call
gs
xchg
jecxz
sti
adc
dec
dec
imul
jge
imul
ljmp
ds
sar
inc
clc
jp
add
mov
push
pop
push
mov
and
in
pop
fcmovu
cmpsb
repnz
or
les
xchg
ja
fstpl
out
arpl
roll
pop
jle
push
fiaddl
jle
jmp
cld
sub
out
add
xor
sub
jg
xor
pop
push
movsl
sbb
les
leave
ret
lods
pop
aaa
ljmp
and
mov
shlb
or
pop
sub
fcmovnb
daa
sbb
pop
inc
push
sub
sbb
and
inc
into
in
and
outsl
add
cmp
mov
cmp
repz
cld
imul
scas
jg
pop
aad
adcb
fwait
fwait
adc
cmp
dec
dec
mov
jmp
in
xchg
dec
addl
inc
arpl
and
pop
mov
cmp
mov
lods
mulb
aam
jge
xorl
rorb
gs
xchg
fildll
push
cmpsb
inc
cmp
pop
outsb
rol
and
cs
push
pop
xchg
imul
add
fldt
mov
inc
pop
or
addr16
jns
cwtl
mov
test
imul
and
andl
mov
jle
push
xchg
dec
lock
xlat
into
nop
cmp
jo
in
pop
dec
pop
stc
pop
inc
in
pusha
push
sub
dec
in
gs
adc
imul
sbb
or
sahf
sbb
or
jne
in
imul
insb
adc
mov
jg
aad
enter
xor
xor
jmp
jmp
movsl
ret
test
clc
mov
ret
mov
das
and
pushf
push
dec
movsl
gs
popl
push
fdivrs
dec
pusha
inc
das
std
imul
cmpsb
pop
inc
andl
scas
push
dec
xchg
xor
es
fisttpl
xor
ret
and
shrl
cli
xchg
cmp
fnstcw
loopne
mov
in
jl
sti
xchg
mov
test
or
jb
jecxz
insb
and
test
imul
ss
mov
scas
xor
loopne
mov
js
jle
mov
ja
cmp
mov
push
rorb
out
xor
xchg
mov
enter
in
lds
pop
loop
pop
ret
fisttpll
outsl
xchg
mov
push
ja
repz
mov
adc
pop
push
daa
sub
xor
jnp
gs
sub
dec
loopne
jmp
ja
pop
and
lock
mov
inc
xchg
pop
shll
addr16
cli
mov
cmp
xchg
sub
sub
test
outsb
mov
jbe
lods
lods
fistl
gs
push
call
mov
cmp
in
data16
movsl
into
idivl
sbb
lods
mov
xchg
pushl
lods
adc
in
loop
or
inc
shlb
jb
inc
in
loop
inc
enter
xchg
dec
sub
dec
adc
dec
push
ret
xchg
mov
mov
adc
filds
bnd
push
les
add
out
push
jnp
lock
fists
or
add
jge
push
int
and
ja
sub
jbe
stos
sti
adc
jbe
fidivl
shrb
mov
inc
notl
xor
xchg
lods
js
adc
fwait
enter
test
sti
mov
and
jl
push
nop
aas
inc
add
add
cs
cmp
add
add
add
add
add
add
add
mov
add
mov
add
add
add
add
mov
add
enter
or
add
test
add
or
add
cs
cmp
add
add
add
add
add
add
add
add
add
addb
add
call
add
add
add
addb
add
pusha
add
addb
add
mov
add
cs
cmp
add
add
add
add
add
add
push
pop
add
add
cs
cmp
add
add
add
add
add
add
add
add
push
pop
add
add
cs
cmp
add
add
add
add
add
add
add
add
pop
add
add
cs
cmp
add
add
add
add
add
add
add
add
add
add
mov
cmp
add
add
add
add
add
add
add
loopne
pop
add
add
cs
cmp
add
add
add
add
add
add
add
sbb
add
add
cs
cmp
add
add
add
add
add
add
push
pop
add
add
cs
cmp
add
add
add
add
add
sbbb
add
inc
add
cmp
add
adc
adcb
add
cmp
and
add
or
add
xor
add
pop
add
orb
add
test
add
cs
cmp
add
add
add
add
add
add
add
add
add
add
mov
cmp
add
add
add
add
add
add
add
pop
pop
pop
add
add
add
mov
cmp
add
add
add
add
add
add
pop
pop
add
add
add
mov
cmp
add
add
add
add
add
add
pop
pop
add
add
add
mov
cmp
add
add
add
add
add
add
add
add
pop
pop
add
add
add
mov
cmp
add
add
add
add
add
add
add
add
add
add
mov
cmp
add
add
add
add
add
add
add
add
add
add
mov
cmp
add
add
add
add
add
add
add
push
gs
add
add
add
mov
cmp
add
add
add
add
add
add
add
and
add
add
add
mov
cmp
add
add
add
add
add
add
push
add
cs
cmp
add
add
add
add
add
add
add
add
push
add
add
add
add
inc
add
inc
add
push
add
add
add
add
add
add
dec
add
add
add
add
inc
add
inc
add
inc
add
dec
add
add
add
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
add
inc
add
inc
add
dec
add
inc
add
add
add
add
inc
add
dec
add
add
add
add
add
inc
add
dec
add
add
add
add
pop
add
inc
add
inc
add
add
add
add
inc
add
add
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
add
cs
cmp
add
add
add
add
add
add
add
addb
add
add
add
cs
cmp
add
add
add
add
add
lock
add
or
sub
add
cs
cmp
add
add
add
add
add
sbb
or
call
add
add
mov
cmp
add
add
add
add
add
add
add
cs
cmp
add
add
add
add
add
add
add
test
pop
add
add
or
inc
add
add
add
push
add
add
add
mov
cmp
add
add
add
add
sldt
and
add
dec
push
add
jo
add
cwtl
push
add
rolb
xor
add
call
sldt
adc
add
cmp
add
pusha
pop
add
mov
add
mov
add
fadds
add
add
add
sub
add
push
or
cmp
add
js
add
mov
add
add
mov
cmp
add
add
add
add
add
add
push
add
add
add
add
mov
cmp
add
add
add
add
add
add
add
add
add
add
add
mov
cmp
add
add
add
add
add
add
jno
add
add
add
mov
cmp
add
add
add
add
add
add
jae
add
add
cs
cmp
add
add
add
add
add
add
push
add
shlb
les
add
cs
cmp
add
add
add
add
add
add
pop
add
cwtl
ja
add
add
add
mov
cmp
add
add
add
add
add
add
pop
add
js
pop
add
add
add
mov
cmp
add
add
add
add
add
add
add
test
pop
add
add
cs
cmp
add
add
add
add
add
add
add
adc
or
add
cs
cmp
add
add
add
add
add
add
addb
xchg
add
add
mov
cmp
add
add
add
add
add
add
pop
add
mov
add
add
mov
cmp
add
add
add
add
add
add
pop
add
fadds
add
cs
cmp
add
add
add
add
add
add
or
add
add
add
mov
cmp
add
add
add
add
add
add
add
test
pop
add
add
cs
cmp
add
add
add
add
add
add
add
pusha
mov
add
add
add
mov
cmp
add
add
add
add
add
add
nop
pop
add
add
cs
cmp
add
add
add
add
add
add
xchg
pop
add
add
cs
cmp
add
add
add
add
add
js
add
cwtl
or
addb
addb
add
cs
cmp
add
add
add
add
add
add
or
add
pop
add
add
add
mov
cmp
add
add
add
add
add
add
or
add
pop
add
add
add
mov
cmp
add
add
add
add
add
add
add
cmp
add
push
add
add
dec
add
dec
add
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
push
add
add
push
add
xor
add
add
add
cs
cmp
add
add
add
add
jg
add
or
cmp
add
sbb
add
inc
or
cmp
add
push
jg
add
jg
add
jg
add
or
addb
add
cs
cmp
add
add
add
add
add
add
or
add
add
add
mov
cmp
add
add
add
add
add
add
or
add
add
add
mov
cmp
add
add
add
add
add
add
add
rcrb
add
mov
cmp
add
add
add
add
add
add
sbb
add
cs
cmp
add
add
add
add
add
add
sbb
add
cs
cmp
add
add
add
add
add
add
or
add
push
or
adc
add
cs
cmp
add
add
add
add
add
add
or
add
push
or
adc
add
cs
cmp
add
add
add
add
add
add
add
cs
cmp
add
add
add
add
add
cmp
add
jo
or
and
add
or
dec
add
dec
add
dec
add
dec
add
add
add
add
sub
add
adc
add
and
add
add
add
add
add
rolb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
jnp
add
add
mov
mov
xor
add
jnp
jnp
xor
add
mov
mov
xor
addb
ja
jae
jo
sti
xor
addb
mov
addb
mov
add
incl
mov
inc
inc
lock
inc
inc
inc
inc
inc
addb
ja
ja
ja
add
mov
cmpb
add
sldt
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
jnp
jnp
jnp
jnp
ja
add
add
add
mov
mov
mov
mov
pop
ja
add
add
add
jnp
jnp
jnp
xor
add
add
add
mov
xor
pop
ja
add
add
jnp
jnp
jnp
jnp
xor
ja
jo
add
mov
mov
mov
mov
xor
add
add
add
jnp
jnp
jnp
jnp
xor
mov
mov
mov
mov
mov
xor
ja
incl
jnp
jnp
jnp
xor
ja
incl
ja
ja
ja
xor
ja
incl
sti
sti
sti
sti
sti
repz
ja
incl
mov
mov
incl
sti
sti
sti
sti
sti
sti
repz
incl
mov
mov
incl
mov
mov
add
xchg
incl
incl
incl
incl
incl
incl
incl
mov
mov
add
xchg
inc
inc
inc
inc
inc
add
add
addb
xchg
inc
inc
inc
inc
inc
jo
pop
jo
add
xchg
inc
inc
inc
inc
inc
jo
pop
jo
add
xchg
inc
inc
inc
inc
inc
inc
inc
inc
inc
addb
xchg
ja
ja
ja
ja
ja
addb
mov
mov
mov
jmp
add
jmp
add
jmp
add
jmp
add
aas
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
adc
add
add
sub
add
add
and
adc
add
add
call
add
lods
add
js
add
xor
add
add
inc
add
sub
add
js
add
sbb
add
lock
add
push
add
add
push
add
dec
sub
cld
das
add
cld
cmp
push
cmp
add
sbb
add
push
in
add
fsubr
add
les
add
add
add
add
scas
add
add
add
add
or
dec
inc
or
pusha
inc
or
jo
or
add
add
mov
add
add
add
add
add
inc
or
add
add
hlt
inc
or
add
add
adc
or
add
add
xor
or
add
add
pusha
inc
or
add
add
mov
add
add
add
inc
or
add
add
ljmp
or
adc
add
or
add
add
incl
inc
or
sub
or
add
add
jmp
inc
or
xor
or
add
add
inc
inc
or
xor
or
cmp
or
add
add
call
inc
or
inc
inc
or
add
add
decl
inc
or
inc
inc
or
dec
inc
or
add
add
ljmp
inc
or
dec
inc
or
push
inc
or
add
add
call
or
push
inc
or
pop
inc
or
add
add
jl
or
pop
inc
or
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
gs
xor
fs
insb
add
add
inc
gs
gs
outsl
popa
jb
push
jns
add
add
jbe
jo
xor
cs
insb
add
add
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
outsl
insb
gs
jne
xor
cs
insb
add
add
add
push
jns
inc
jb
gs
je
imul
add
jb
imul
add
add
jb
jne
jb
push
popa
insb
jne
inc
add
add
imul
insb
add
add
add
jb
popa
insb
imul
arpl
add
xor
cs
insb
add
add
add
gs
je
push
je
gs
insl
dec
outsb
dec
inc
insb
outsl
bound
add
add
add
insl
arpl
xor
fs
insb
add
add
add
dec
insl
popa
addr16
imul
dec
arpl
push
imul
add
gs
insb
xor
cs
insb
add
add
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
outsl
arpl
imul
pop
add
add
or
add
add
int3
fstl
ret
or
push
popa
and
inc
mov
add
add
loope
add
pusha
pusha
adc
sbb
dec
add
push
mov
jecxz
add
push
cmp
shl
mov
inc
add
mov
loopne
in
sub
or
add
sbb
insb
or
sbb
mov
adc
je
sbb
or
sti
adc
or
rep
pop
dec
rorl
jno
orb
add
out
or
add
add
xor
int3
enter
mov
rcrb
add
rcrb
xor
push
sbb
leavew
and
jle
stos
and
add
lret
lea
adc
add
push
sbb
repz
pop
push
mov
daa
fsub
jmp
imul
cmp
sub
xchg
add
sub
shr
add
cmp
lods
inc
mov
and
ret
lret
insl
or
out
inc
xor
sbb
or
mov
imul
std
pop
lea
movb
sub
sbb
sahf
push
lcall
mov
and
add
scas
cmpsb
movl
lods
and
insb
mov
mov
sub
push
clc
sahf
adc
jae
stos
mov
inc
rorb
je
imul
sbb
movsb
icebp
mov
mov
xchg
pop
add
inc
mov
xchg
push
inc
cmp
mov
ss
mov
mov
cmp
iret
mov
push
xor
add
xchg
cmp
push
pushf
and
cmpsb
and
and
jl
jmp
mov
dec
lret
or
adc
cmp
in
add
cmpsb
sbb
fucomip
and
adc
cmp
push
jb
stc
roll
inc
push
jmp
sub
nop
repz
nop
rol
lret
mov
dec
xor
ret
lods
out
shrb
shr
pop
sarl
bnd
xor
cs
popf
xchg
sub
lods
dec
or
shlb
int3
setl
cltd
mov
sbb
adc
lea
xorl
add
jmp
xchg
dec
sub
dec
repnz
jns
lret
and
or
sub
xor
or
cmp
xchg
push
push
mov
jne
push
lea
add
add
pushf
xchg
sub
cmpsl
jmp
xchg
shl
sbb
in
or
sbb
test
and
mov
dec
adc
hlt
adc
add
test
aad
xchg
inc
out
popf
ret
or
dec
enter
sbb
adc
cmp
mov
outsl
push
and
pop
and
in
cmc
sar
std
lret
sub
roll
xor
inc
adc
xor
sbb
inc
and
and
sub
push
repz
inc
push
jns
mov
mov
movsb
mov
adc
lret
mov
sub
ret
inc
and
loope
in
or
daa
adc
lods
adc
push
inc
mov
mov
xchg
cli
and
dec
mov
or
loopne
lea
or
in
scas
cld
dec
add
inc
and
adc
adc
add
enter
jns
xchg
mov
xor
fs
pushf
popa
iret
mov
adc
pop
lds
mov
orl
cltd
jns
push
pop
aaa
cs
fisttpll
jmp
outsb
jae
pop
lea
mov
jne
mov
sub
add
fldl
and
pop
jns
adc
jl
cmc
adc
sahf
lret
add
lea
movsb
push
insl
shlb
mov
xlat
and
loope
in
int3
jne
ljmp
jbe
ficoml
jle
aas
sar
xchg
in
push
sti
int
sub
push
mov
jge
sarl
in
dec
inc
leave
and
mov
jmp
xchg
sbb
cwtl
add
les
cs
call
jb
lret
ret
adcb
jle
jmp
xor
movsl
adc
clc
push
xchg
test
fs
sbbl
xor
sub
movsl
clc
jmp
dec
sbb
add
jmp
or
std
add
inc
in
dec
add
inc
lret
test
pop
cli
sub
jb
pushf
xchg
rcrl
lahf
jmp
and
adc
in
dec
adc
pop
push
scas
js
rolb
inc
add
mov
stc
mov
sub
cmp
xor
pop
lret
rcrb
in
sbb
add
mov
add
mov
add
sbb
push
call
mov
les
push
push
jb
cld
call
push
ficoml
mov
lahf
xor
sub
fimull
ds
push
lahf
rcrl
sahf
inc
cltd
adc
ret
add
mov
roll
aam
xor
and
inc
push
sbb
cmp
rorl
mov
andb
and
and
mov
xor
push
into
rdpmc
add
sar
xchg
mov
ljmp
fs
add
inc
add
adc
or
scas
sub
insl
aas
rclb
add
adc
ss
inc
add
xchg
aas
mov
call
orl
call
in
xor
lea
inc
cld
add
add
jbe
fdivp
push
jle
dec
jbe
pop
repnz
push
stos
add
nop
cmpl
je
jae
sbb
push
mov
mov
test
xchg
cmp
sbb
add
push
mov
cwtl
ljmp
sbb
call
nop
add
lea
aad
out
leave
push
and
xchg
aaa
or
mov
call
mov
xchg
fld
sub
or
push
pop
sub
xchg
iret
cmpsl
daa
in
add
inc
push
pusha
outsb
je
mov
lea
dec
mov
lahf
jmp
test
push
push
and
push
lea
push
aas
das
push
mov
iret
es
sbb
enter
aas
and
sub
push
adc
int
xor
or
sub
aaa
dec
fisubs
or
jle
loopne
add
sub
sub
test
adc
jecxz
sub
push
clc
sub
sbb
pushl
cmp
inc
or
pop
pop
maxps
push
imul
mov
sub
loopne
add
add
push
call
inc
mov
jle
sbb
xchg
sti
sbb
push
push
negl
ret
mov
xor
ret
in
lods
sbb
jne
scas
leave
mov
pop
mov
sub
rcrl
and
lods
mov
loopne
or
hlt
cmpsb
cltd
inc
or
push
push
and
loop
push
sbb
pop
cmp
or
and
xor
jmp
pushf
mov
push
clc
movzwl
test
jge
or
xchg
insb
xor
inc
pop
adc
add
jne
cmp
jge
leave
push
inc
jo
rolb
add
sub
mov
je
dec
mov
xlat
jne
sub
ret
push
shr
popa
rclb
les
push
dec
add
pop
roll
pop
pop
and
inc
or
sub
xor
test
push
push
xor
jmp
or
cmp
inc
xor
in
aas
add
jbe
push
push
test
lock
pop
lds
push
push
cmp
pop
std
cmc
daa
aaa
push
sub
int
inc
in
bound
jae
pop
jge
sub
xchg
clc
rorl
sub
decl
cli
movsb
push
in
roll
stos
loop
adc
cmp
cmpsb
ret
add
mov
adc
stos
inc
pushf
add
lock
push
push
inc
xchg
in
mov
mov
jge
in
es
dec
enter
push
dec
pop
and
pusha
lret
xor
dec
push
hlt
push
fs
or
cmp
test
mov
push
fistps
mov
in
pop
lea
inc
je
mov
inc
jne
adc
adc
fildl
mov
lret
sbb
nop
cli
cmp
jne
push
stc
jmp
fidivrl
inc
lock
loopne
sub
pushf
dec
dec
mov
in
in
pop
inc
mov
sub
lret
ljmp
xlat
repnz
dec
cmpb
pop
mov
xchg
je
add
out
inc
xor
jp
lcall
and
push
or
push
call
sbb
mov
adc
lds
aad
mov
mov
adc
mov
jmp
out
mov
aas
dec
inc
dec
test
ret
and
jmp
dec
push
and
fdivl
mov
add
test
roll
jmp
mov
adc
inc
mov
mov
jg
jno
or
and
jmp
sub
dec
pop
inc
dec
ds
push
inc
xor
cmp
mov
push
ret
stos
xchg
add
mov
sub
lods
popf
lea
push
pusha
in
repz
xor
sub
mov
dec
call
dec
or
push
inc
sub
repz
pop
sub
test
inc
sbb
mov
add
lea
add
daa
push
iret
shr
push
loope
push
lea
push
je
add
sti
add
add
mov
sbb
sbb
test
jbe
decb
imul
and
xor
scas
mov
xchg
insb
add
sub
xor
pop
lods
cmpsb
jmp
dec
add
jbe
lret
scas
add
mov
cmp
add
and
outsb
je
idivl
lds
fldt
adcb
jecxz
cmp
aas
fs
and
stc
in
fnstenv
pop
scas
mov
imul
inc
xor
sub
insb
and
push
jne
xchg
xor
popa
xchg
js
pop
ja
testb
cmp
mov
aas
inc
js
sub
aaa
dec
push
inc
cwtl
shrl
outsb
fs
add
xlat
mov
movl
mov
sbb
jl
pop
imul
hlt
arpl
je
dec
inc
cmpl
bound
and
dec
xchg
stos
pop
push
pop
cltd
cmp
or
adc
mov
imul
xor
mov
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
inc
or
clc
add
cld
or
add
dec
or
sbb
add
or
add
inc
add
inc
or
adc
or
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
add
loopne
dec
add
dec
dec
add
dec
dec
add
dec
dec
add
add
add
add
add
pusha
or
add
and
mov
push
push
push
mov
mov
shl
mov
push
mov
mov
mov
shl
mov
add
mov
shl
xor
sub
sub
add
mov
mov
movb
mov
mov
mov
mov
mov
mov
mov
je
mov
mov
rep
mov
movzbl
movzbl
shl
or
movzbl
shl
or
movzbl
shl
add
or
or
mov
cmp
ja
pop
pop
pop
xor
pop
add
ret
mov
mov
mov
and
mov
mov
shl
add
lea
mov
mov
cmp
jae
mov
movzbl
shl
shl
or
inc
mov
mov
mov
shr
imul
cmp
jae
mov
sub
shr
add
mov
mov
movzbl
mov
sub
mov
mov
and
shr
mov
shl
mov
mov
add
imul
cmp
lea
mov
jl
mov
sub
mov
movzbl
mov
mov
mov
add
mov
and
lea
lea
cmp
jae
mov
movzbl
shl
shl
or
inc
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
mov
test
je
cmp
jge
mov
mov
lea
cmp
jae
movzbl
shl
shl
or
inc
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
test
je
cmp
jl
jmp
sub
sub
mov
shr
sub
mov
lea
cmp
jl
mov
mov
mov
mov
inc
mov
mov
cmp
mov
jge
movl
jmp
cmp
jge
sub
mov
mov
cmp
jb
pop
pop
pop
xor
pop
add
ret
sub
jmp
sub
sub
mov
shr
sub
mov
cmp
jae
mov
movzbl
shl
shl
or
inc
mov
mov
mov
shr
imul
cmp
jae
mov
mov
mov
sub
shr
add
mov
mov
mov
mov
xor
cmp
setl
mov
mov
mov
lea
dec
and
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
jae
movzbl
shl
shl
or
inc
mov
mov
mov
shr
imul
cmp
jae
mov
sub
shr
add
lea
shl
mov
mov
add
lea
mov
mov
cmp
jae
shl
mov
mov
movzbl
shl
or
inc
mov
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
mov
test
je
mov
xor
cmp
setge
lea
mov
mov
sub
inc
mov
mov
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
jmp
sub
sub
mov
shr
sub
mov
cmp
jae
movzbl
shl
shl
or
inc
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
jmp
sub
sub
mov
shr
sub
mov
cmp
jae
movzbl
shl
shl
or
inc
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
setge
dec
and
add
mov
lea
cmp
jae
mov
movzbl
shl
shl
or
inc
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
shl
mov
lea
xor
movl
jmp
sub
sub
mov
shr
sub
mov
cmp
jae
mov
movzbl
shl
shl
or
inc
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
shl
mov
lea
mov
movl
jmp
sub
sub
mov
shr
sub
mov
add
mov
movl
mov
mov
mov
nop
cmp
jae
mov
movzbl
shl
shl
or
inc
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
mov
sub
jne
mov
mov
shl
sub
add
cmpl
mov
jge
addl
cmp
jl
mov
mov
shl
lea
mov
lea
cmp
jae
mov
movzbl
shl
shl
or
inc
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
sub
jne
sub
cmp
mov
jl
mov
sar
and
dec
or
cmp
mov
jge
shl
mov
sub
mov
lea
jmp
mov
sub
cmp
jae
movzbl
shl
shl
or
inc
shr
add
cmp
jb
sub
or
sub
jne
mov
add
mov
shl
movl
mov
mov
lea
cmp
jae
mov
movzbl
shl
shl
or
inc
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
or
mov
lea
shll
subl
jne
add
mov
je
mov
mov
add
cmp
ja
mov
sub
add
mov
mov
dec
mov
inc
inc
mov
mov
test
je
cmp
jb
pop
pop
pop
xor
pop
add
ret
mov
jmp
pop
pop
pop
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
push
mov
movzbl
cltd
mov
idiv
mov
mov
push
push
mov
movzbl
cltd
idiv
mov
mov
add
mov
shl
mov
mov
add
shl
push
push
call
mov
mov
lea
push
push
push
push
mov
add
push
lea
push
mov
call
mov
push
push
push
call
pop
mov
pop
pop
pop
add
ret
add
add
add
add
inc
add
add
aam
push
add
add
add
add
add
inc
or
adc
or
rorl
add
add
add
push
add
add
add
adc
add
push
pop
add
into
add
add
add
add
add
rolb
xchg
popl
add
incl
addb
ljmp
add
add
add
add
add
push
xchg
popl
add
incl
push
push
add
inc
push
add
adc
add
add
add
rolb
xchg
popl
add
incl
adc
add
adc
add
scas
add
sarl
add
adc
add
adc
add
add
add
add
popl
add
call
add
cmpsl
clc
add
add
push
push
call
pop
sub
lea
mov
add
sub
cld
mov
mov
mov
add
lea
lods
stos
lods
stos
lods
stos
lods
stos
nop
cmpl
je
mov
test
je
mov
add
mov
add
rep
mov
lea
add
add
add
lea
push
call
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
push
push
call
mov
push
call
lea
test
jne
push
call
push
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
add
push
push
call
test
je
mov
mov
test
jne
lea
jmp
test
je
push
and
push
lea
push
lea
push
call
jmp
mov
add
inc
inc
push
push
lea
push
lea
push
call
lea
push
lea
push
push
push
call
push
call
mov
mov
cmpl
jne
mov
mov
mov
add
movb
add
sub
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
nop
nop
nop
nop
nop
nop
push
call
push
push
pushl
call
mov
add
pop
pop
pop
pop
ret
push
mov
add
push
push
push
call
pop
sub
mov
mov
add
push
call
mov
mov
mov
add
add
xor
add
je
push
mov
add
push
pushl
call
stos
pop
add
jmp
add
add
jne
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
mov
mov
mov
lods
test
je
add
mov
jmp
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
push
push
push
call
pop
sub
mov
xor
xor
add
je
mov
mov
add
jmp
pop
pop
pop
leave
ret
mov
movzwl
test
jne
test
je
push
push
mov
xor
mov
movzwl
mov
add
cmp
jge
mov
inc
movzbl
add
sub
mov
je
dec
mov
jne
mov
cmp
jne
shr
rol
xchg
sub
mov
add
add
add
inc
jmp
pop
pop
xor
add
je
cmp
je
call
pop
sub
lea
jmp
jmp
push
mov
mov
add
sub
pushw
push
push
call
pop
add
dec
jne
pop
pop
pop
leave
ret
push
mov
add
push
push
push
call
pop
sub
mov
xor
xor
add
je
mov
mov
add
jmp
pop
pop
pop
leave
ret
mov
mov
mov
movzwl
test
je
push
mov
mov
mov
add
mov
sar
rep
add
and
rep
mov
mov
add
xor
push
mov
sar
rep
add
and
rep
pop
mov
mov
add
mov
mov
sar
rep
add
and
rep
pop
add
dec
jne
pop
pop
pop
leave
ret
push
mov
add
push
push
push
call
pop
sub
mov
xor
xor
add
je
mov
mov
add
jmp
pop
pop
pop
leave
ret
mov
movzwl
mov
push
push
push
movzwl
test
je
push
mov
mov
mov
mov
sub
mov
add
mov
sar
rep
add
and
rep
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
add
mov
mov
dec
mov
push
push
pushl
call
lea
push
pushl
pushl
call
mov
inc
je
xor
add
je
dec
mov
pushl
pushl
popl
popl
jmp
pop
push
mov
add
cmp
jne
add
jmp
mov
mov
sar
rep
add
and
rep
mov
add
shr
shl
sub
mov
xor
push
mov
sar
rep
add
and
rep
pop
pop
pop
pop
pop
add
dec
jne
xor
pop
pop
pop
leave
ret
pop
pop
pop
pop
xor
inc
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
mov
mov
xor
cmp
jne
cmp
je
add
je
add
mov
add
mov
test
je
add
push
push
push
push
call
inc
jne
dec
pop
pop
pop
leave
ret
add
jmp
push
mov
add
push
push
push
call
pop
sub
mov
mov
xor
mov
xor
inc
inc
mov
pushl
call
mov
mov
test
jne
dec
jne
xor
dec
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
test
jne
mov
test
jne
mov
movl
mov
test
je
push
mov
test
je
and
push
jmp
mov
add
xor
mov
push
inc
inc
push
pushl
call
pop
test
je
mov
mov
add
add
jmp
xor
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
push
push
push
mov
mov
mov
sub
mov
xor
lods
test
je
cmp
je
inc
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
pop
pop
pop
leave
ret
push
mov
add
push
push
push
call
pop
sub
mov
add
xor
mov
lea
add
mov
shr
shl
push
lea
push
push
push
push
call
mov
test
je
sub
mov
pop
lea
push
pushl
push
push
call
pop
pop
pop
leave
ret
push
mov
push
push
push
call
pop
sub
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
push
call
pop
sub
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
add
push
push
push
call
pop
sub
mov
mov
add
lea
mov
shr
shl
push
lea
push
push
push
push
call
mov
mov
pop
lea
push
pushl
push
push
call
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
insl
jae
bound
add
jo
imul
and
jb
jb
inc
jo
insb
imul
and
jb
jne
je
add
and
outsl
arpl
jne
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
and
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
and
add
gs
xor
dec
gs
popa
addr16
outsl
js
add
jo
imul
gs
gs
xor
add
imul
jae
inc
insb
outsl
jae
dec
popa
outsb
fs
add
outsb
push
jb
arpl
jae
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
jb
jne
insb
push
jb
je
arpl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
add
dec
add
bound
add
xchg
add
outsb
add
jp
add
xchg
add
pop
add
shrl
add
jmp
add
cmp
add
mov
add
add
add
imul
lea
adc
