push
call
ret
ret
fnstsw
outsb
mov
sbb
lret
mov
scas
mov
std
push
add
cmp
push
test
xlat
and
sbb
push
xlat
lock
and
cmpsb
dec
jnp
sbb
ds
adc
xor
xchg
dec
lock
fwait
xchg
mov
add
das
cmpb
inc
jae
and
sbb
outsl
repz
mov
aad
sbb
psubb
and
pop
mov
out
pop
mov
jno
push
aas
lods
jl
xchg
xchg
shl
imul
adc
decb
ljmp
dec
pop
repz
repnz
xchg
gs
or
xchg
or
add
daa
sbb
test
in
jne
adc
repz
sbb
loop
and
mov
repnz
xor
stos
clc
or
je
and
bnd
mov
in
js
test
mov
insl
testl
pop
fnstsw
push
iret
nop
subb
cmp
call
int
arpl
addr16
dec
leave
add
test
mov
aaa
loop
lcall
shl
int
mov
push
sbb
cmp
ss
aas
jae
pop
fstps
in
and
mov
decl
cwtl
xchg
xchg
xchg
arpl
xchg
lock
push
mov
cli
test
rcrb
out
sub
mov
sahf
das
dec
fdivp
pop
test
ret
je
pushf
inc
cmc
adc
lret
adc
jg
addr16
xchg
pusha
sbbl
lret
idivl
sbb
mov
sub
mov
leave
arpl
subb
adc
cld
in
mov
inc
add
mov
stos
leave
push
adc
cmp
xorb
ss
sarl
or
sub
and
mov
stos
aam
add
push
ja
pusha
jge
cmp
ds
movsl
pop
adc
mov
pop
out
sahf
daa
movsl
cs
rcrb
sbb
lock
dec
imul
cli
cmp
mov
jl
data16
je
jbe
xchg
mov
movsl
add
jge
sbb
sbb
pop
pop
mov
add
xor
lahf
les
pop
outsl
add
sub
pop
push
and
leave
push
mov
adc
out
or
sti
add
mov
in
testl
aad
lret
xchg
lods
push
mov
or
mov
js
add
sbb
hlt
mull
jb
sbb
sbbl
xchg
push
in
jecxz
clc
sub
jmp
and
movsb
cmp
test
stc
bound
test
adc
xor
cmp
je
jbe
adc
mov
and
in
pop
sub
dec
pop
pop
push
mov
dec
ds
aam
pop
push
sbb
jge
adc
mov
jns
xor
cld
js
mov
dec
aas
dec
xlat
or
aad
inc
push
ja
xchg
or
repz
iret
push
inc
fistpl
adc
pushf
pop
lahf
push
mov
mov
scas
cmc
scas
and
aas
call
sahf
popa
adc
pop
push
push
push
sbb
jge
or
xchg
jmp
jle
ljmp
push
hlt
inc
pop
or
stos
pop
push
das
das
lcall
pushl
and
sbb
loop
cmp
sbb
jnp
shlb
outsl
adc
outsb
jle
lods
push
insb
mov
rcl
inc
or
add
les
lock
inc
subl
cmp
xor
cwtl
pop
nop
sarb
add
mov
enter
fdivrl
loopne
adc
iret
jae,pt
and
aas
jbe
and
pop
push
stos
lods
pop
outsb
jno
jmp
int
dec
fsts
lret
divl
loopne
ds
jl
jns
adc
adc
or
movsb
imul
adc
inc
sbb
jmp
jp
xchg
cmp
addr16
lret
mov
inc
test
jns
repnz
cmpl
lret
adc
es
stos
jg
adc
fs
mov
jae
inc
mov
incl
xor
dec
mov
rclb
lahf
fstp
pop
pop
mov
cmpsb
push
push
add
insb
sub
xchg
in
cmp
lods
sti
mov
xchg
stos
call
jmp
out
pop
stos
xor
sti
fcoml
imul
xor
leave
add
leave
mov
dec
push
dec
out
pop
pop
mov
cmovbe
dec
pop
push
jge
xchg
adc
das
scas
add
pop
movsl
imul
sbb
cmp
cmp
sub
xchg
out
add
cld
out
inc
mov
aas
call
scas
push
bound
jmp
add
sub
in
arpl
mov
or
pop
leave
fbld
inc
ja
icebp
inc
mov
lock
or
push
push
xchg
fdivr
ljmp
xorb
gs
in
repnz
outsl
movsb
outsl
jbe
stos
daa
sete
fdivr
sub
repnz
dec
xlat
lret
mov
push
sar
leave
sbb
push
cwtl
pop
movsb
jb
xchg
push
xchg
shlb
movsb
cmpl
push
lock
int
bound
sbb
in
je
add
xor
dec
cmp
xor
ss
popf
and
les
mov
jb
lcall
xor
mov
test
mov
popa
cmpsb
mov
add
or
mov
or
clc
loop
sub
xchg
pushf
or
lret
cmp
mov
add
scas
or
lods
and
shll
adc
bound
sti
cmp
adc
lods
int3
nop
popa
sub
push
imul
andb
cmpsl
imul
add
add
imul
in
orl
popa
push
gs
or
and
mov
lock
mov
movsl
nop
dec
sbb
andl
add
in
imul
test
xor
call
and
sub
scas
dec
pop
insb
mov
lea
lret
cltd
xchg
cmpsl
or
repz
sub
sbb
call
cwtl
cmp
add
aas
int
or
test
or
test
sbb
mov
sarb
adc
sub
add
mov
pop
lea
push
iret
repnz
xor
mov
lret
sub
aad
inc
bound
xchg
xor
orb
mov
clc
inc
out
mov
cmp
je
int3
push
int3
fsts
push
sub
mov
shll
das
dec
ds
lret
js
mov
in
cwtl
xor
xor
xchg
cmp
inc
into
mov
pop
push
outsl
xchg
rcr
cmp
cmpsl
rorb
gs
stc
cli
hlt
sub
add
push
imul
mov
sbb
jecxz
movsb
sub
adc
jo
and
cmc
cmpsl
iret
add
outsb
mov
aam
sbb
xlat
mov
xor
into
int
enter
pop
sbbl
int
jo
adc
add
xchg
dec
mov
shlb
cltd
xchg
cli
or
test
aad
addl
in
pop
fstpl
jmp
jbe
adc
cmp
sti
ss
pop
sbb
fisttps
add
sbb
leave
add
pushf
push
in
xor
cmp
mov
or
ret
aas
mov
lods
mul
scas
sbb
and
sub
std
mov
or
loop
inc
push
lret
push
ss
sub
shrb
push
add
xorl
mov
push
je
rol
push
sahf
xchg
jbe
fisubrs
inc
mov
outsb
inc
aad
jle
fsts
stc
outsb
jecxz
decb
mov
inc
push
arpl
stos
sahf
add
push
sbb
ja
sarb
fidivrs
xchg
cld
mov
lds
dec
sub
sbb
xchg
divb
lahf
sub
sahf
into
pusha
jne
arpl
adc
inc
add
push
por
nop
popa
icebp
push
aaa
sub
dec
stos
outsl
test
sarb
xchg
out
sub
push
ret
stc
jle
mov
fdivrs
jmp
cmp
pop
lea
and
cld
dec
mov
sbb
mov
mov
mov
push
popf
test
jo
mov
nop
cmpsb
std
fdivrp
xchg
je
jnp
mov
jp
jns
and
dec
pop
out
push
jp
hlt
into
push
test
call
mov
mov
pop
dec
mov
push
aam
xor
jl
clc
imul
push
fdiv
or
cmpsb
ret
mov
cli
sbb
jmp
out
xchg
sarl
fiaddl
jecxz
out
ret
subl
ja
pushf
push
jno
inc
push
jp
xor
dec
shrl
loop
test
rolb
imul
inc
js
dec
cmp
cmp
sbb
pusha
adc
or
icebp
dec
inc
jbe
sbb
or
sub
push
ss
fcmovne
imul
sbb
sbb
inc
sahf
xor
insl
movl
int
ja
scas
mov
pop
sbb
cmp
aad
inc
mov
shll
shr
test
dec
sub
rcll
out
cli
mov
icebp
shrl
clc
cmp
or
mov
mov
js
pop
stc
mov
testl
js
scas
dec
gs
mov
scas
jb
in
or
xor
das
and
adc
ljmp
pop
in
add
xlat
push
stos
dec
push
rcr
add
dec
in
out
push
dec
ljmp
les
rcll
icebp
into
adcb
and
imul
imul
fiadds
in
or
jae
ffreep
imul
inc
sti
hlt
rolb
add
push
inc
inc
push
sbb
xor
xchg
sarb
clc
xchg
pop
das
dec
add
pop
es
cmp
mov
push
subb
xchg
xchg
les
lds
aam
in
mov
repnz
push
jnp
pusha
sub
mov
pushf
mov
mov
xchg
pop
cmp
js
dec
insb
rclb
jo
dec
ss
mov
mov
mov
mov
cwtl
pop
ljmp
loope
das
ret
out
sub
mov
fldl
movsl
pop
mov
daa
stos
add
sbb
cmc
shll
push
fs
pop
mov
cmp
enter
js
pop
rclb
sub
inc
inc
and
mov
adc
cmpb
lahf
add
in
push
inc
loop
and
cmp
add
push
and
fdivr
test
xlat
ret
scas
jae
add
sub
add
in
lcall
sub
dec
add
dec
loop
pop
hlt
repz
xchg
adc
popa
push
cmpsl
jnp
xlat
lahf
daa
test
into
dec
jmp
xchg
test
data16
mov
sub
addb
pusha
out
sbb
adc
les
clc
pop
inc
mov
xorl
mov
lods
adc
or
push
test
adc
enter
jbe
xor
push
cmp
mov
or
mov
orl
test
icebp
test
or
into
ss
push
call
and
out
icebp
lret
push
dec
push
add
movsb
fucomip
mov
into
icebp
push
adc
and
lahf
stos
push
jnp
dec
rcr
jl
vrcp28ss
addr16
ds
cmp
enter
je
dec
sbb
push
movsl
push
or
sbb
xor
int
dec
fildl
push
xor
ret
dec
push
mov
std
push
pop
pop
pop
mov
or
lods
insb
outsl
sub
stos
cmpsl
xor
or
and
or
jp
cmpsl
push
xor
addb
test
lds
and
adc
jo
adc
add
fsubr
add
sbb
int
cwtl
jns
out
sbb
xchg
sub
push
insl
dec
inc
add
jae
xor
dec
push
ds
mov
js
cld
es
fwait
je
xchg
mov
lock
lahf
into
into
and
mov
jecxz
loop
int3
dec
outsl
push
add
mov
in
pop
mov
mov
xor
jecxz
sbb
or
jmp
shrb
sbb
subb
dec
nop
jmp
fs
mov
jmp
testb
and
cld
or
mov
test
lock
inc
popa
inc
lock
inc
xor
xlat
sub
or
aaa
into
dec
fcmovnbe
fs
cli
into
sub
notl
imul
rcl
adc
rorb
adc
mov
loopne
roll
popa
outsb
mov
leave
lods
scas
aam
or
aas
mov
add
addb
test
push
adc
push
inc
jbe
pop
not
xchg
xchg
rclb
fimuls
test
cltd
pop
repnz
xor
sbb
aad
cli
js
stos
xchg
push
jne
fs
aam
xchg
test
adc
mov
fwait
mov
or
aaa
adc
das
jmp
mov
scas
inc
fisttpll
xchg
pop
incb
or
jae
mov
test
jecxz
pop
pushf
sbb
daa
or
and
fstl
mov
sbb
stos
inc
pop
adc
sub
nop
ljmp
fcoms
jns
push
stc
test
test
cmpsb
dec
out
addr16
dec
mov
and
enter
adc
xlat
mov
cwtl
sbb
fnsave
imul
cmpsl
jge
scas
mov
mov
pop
inc
jae
cltd
out
xor
pop
cmp
fistpl
popf
mov
cmc
sbb
jne
addr16
sbb
jbe
bound
lret
roll
or
cmpsl
movb
pop
push
call
insb
int3
enter
xchg
pop
or
sub
pop
inc
fs
test
or
gs
or
mov
xrelease
psubsb
mov
in
or
dec
jns
in
add
pop
fsubl
sbb
lods
jno
jmp
ret
sahf
xchg
inc
xchg
pop
movsb
icebp
cmpsb
add
scas
or
sbb
fwait
pop
xchg
mov
cltd
adc
mov
jae
in
lahf
or
scas
stos
aaa
xor
pop
pop
pop
mov
rorb
sub
cmpsb
lods
jle
pop
jo
pop
cltd
add
out
movsb
add
das
mov
inc
xchg
std
cltd
aam
nop
push
or
xchg
and
enter
mov
sub
dec
adcl
xor
outsb
inc
shll
mov
pop
outsl
inc
cmp
fisubrs
lds
cmp
or
cltd
loopne
and
lcall
mov
sahf
dec
stos
push
cmc
pop
out
xor
in
addb
loope
mov
dec
and
jg
js
insb
movsb
pop
adc
xchg
push
aaa
xor
jge
cltd
mov
and
out
aaa
and
ljmp
mov
xchg
clc
cwtl
mov
push
mov
dec
add
dec
ret
popf
mov
jb
or
dec
inc
imul
cmpsl
in
in
lods
push
ds
jmp
int3
repnz
push
into
push
cmp
dec
fisttpl
aad
adc
mov
add
push
sbb
nop
enter
cmpsb
xchg
jge
js
sbb
ret
scas
enter
adc
fcom
dec
leave
out
iret
cmc
ds
fstpt
xchg
mov
sub
clc
sbb
fiadds
jle
inc
lret
fnstenv
jno
xchg
mov
sub
mov
push
jo
test
or
xor
jae
xor
pop
push
int3
das
push
mov
ss
cli
int3
lds
call
fdiv
outsb
xor
or
jmp
popf
cli
call
lods
sbb
jp
mov
imul
pop
and
mov
loop
fidivs
lcall
js
cs
fsubrl
xchg
inc
xchg
inc
ret
lahf
adc
adcb
in
fsubr
into
push
xchg
pop
push
je
test
js
push
and
ljmp
push
sbb
jge
scas
subb
lds
loope
movsl
arpl
mov
push
mov
push
or
dec
mov
cli
es
imul
cld
sbb
filds
lcall
mov
and
mov
or
jbe
mov
dec
adc
jno
mov
and
pop
xchg
int3
cmp
bound
popf
mov
movsl
xlat
mov
lret
movsl
stc
outsb
pop
cld
pop
pop
xchg
or
sbb
bound
jns
dec
dec
test
popa
mulb
jg
lret
and
lock
jno
movsl
push
dec
and
dec
mov
aas
and
or
and
out
pop
mov
jno
sub
fcompl
pop
adc
ss
cs
rcl
xchg
and
add
mov
sub
ja
and
iret
hlt
sub
adc
movsb
bound
int
mov
popf
xchg
test
mov
pop
rorb
mov
cmc
mov
push
xor
jmp
or
and
stos
pop
in
aas
rcll
jmp
pop
outsl
sahf
sub
insl
imul
add
sub
jmp
xor
mov
push
les
push
jle
rolb
stc
mov
sub
push
pop
sbb
jne
adc
cmc
ja
xchg
sbb
faddl
shrl
stos
scas
lods
rdmsr
pop
out
packuswb
sbb
mov
fdivrl
loope
or
ffreep
jne
sbb
fs
adc
pop
dec
sbb
int3
inc
cmp
scas
push
into
lret
data16
xchg
mov
into
jmp
xor
xchg
dec
lahf
pusha
ficoms
sub
sahf
cs
cmp
cltd
loopne
movsb
lods
jne
push
push
adc
std
cmp
and
cmc
pop
stos
dec
in
jnp
jg
rclb
dec
fsubrl
xchg
adc
xchg
xchg
or
xchg
pop
imul
leave
pop
ja
stos
xchg
leave
jne
mov
lods
xchg
adc
jo
mov
sub
mov
addl
push
fwait
ja
pop
jns
mov
je
inc
cmpsb
mov
add
mov
jns
mov
lock
andl
dec
hlt
dec
add
add
repnz
cli
sbb
dec
and
mov
xchg
mov
cmp
pop
sarb
jns
je
scas
mov
fs
popf
aaa
inc
fnstcw
push
subl
test
xchg
cmp
cmp
dec
and
pop
fld1
or
shll
je
js
repz
xchg
cwtl
xor
mov
add
popa
cmp
sub
in
sahf
fldl
dec
out
movsl
push
adc
push
sbb
lea
data16
mov
lods
addr16
and
mov
rol
pop
das
sahf
fdiv
pop
dec
xchg
mov
xchg
inc
dec
mov
mov
es
sbb
fbld
jo
mov
xchg
rcrl
int
pop
in
or
add
and
push
mov
push
aaa
inc
and
push
test
fs
push
pop
out
sub
mov
decl
adc
xchg
adc
movsb
ja
sub
add
out
cwtl
jecxz
rcr
add
rcll
mov
loopne
push
xchg
pop
lock
clc
je
in
pop
std
lret
cmp
or
lahf
sub
inc
and
dec
stos
push
jp
add
mov
ljmp
inc
lcall
in
adc
push
les
out
jmp
cmp
inc
into
push
inc
sub
push
nop
cmp
into
scas
popf
sahf
and
cli
repz
shlb
orb
push
je
xchg
or
out
insb
sbb
mov
xchg
call
mov
adc
loop
inc
pop
iret
js
arpl
jp
into
lret
lahf
test
hlt
aam
xor
mov
sub
mov
and
sub
mov
xchg
mov
loopne
test
adc
popa
pop
mov
pop
rcll
mov
es
xor
dec
popa
sub
scas
imul
xor
mov
lea
and
jb
outsb
scas
sub
sub
jbe
xor
je
movsb
push
movsl
pop
aaa
or
xchg
outsb
jecxz
lahf
mov
dec
mov
je
setle
or
adcb
ret
jbe
and
ficoml
cmp
fiadds
pop
mov
pop
sub
stc
addl
test
jb
or
rcr
sub
clc
mov
iret
jb
mov
or
pusha
rcrl
loope
je
jns
ret
jecxz
fistl
fwait
xor
jnp
pop
out
jecxz
fisttpll
stos
cmpsb
add
in
mov
cmp
dec
mov
sub
push
push
xchg
mov
popf
inc
or
cmpsb
push
pop
pop
loope
cmp
adc
pop
pushf
lds
xor
push
sbbl
adc
xor
mov
shll
dec
mov
mov
inc
xchg
adc
aam
inc
xor
pop
add
fsts
cmpsl
sbb
cltd
hlt
movsb
push
adc
gs
sub
inc
mov
xor
sub
out
jecxz
in
stos
into
xor
jo
mov
js
jp
popa
addr16
jge
ljmp
scas
push
std
xor
xor
icebp
icebp
or
jl
pop
rolb
lret
scas
xchg
lds
sarb
mov
mov
dec
test
into
cmp
bound
scas
mov
out
dec
mov
fstps
into
mov
lock
jecxz
into
dec
pop
or
adc
arpl
mov
and
cmp
mov
pop
or
lock
pop
gs
ret
mov
mov
mov
out
inc
sub
jle
or
sub
js
int
xlat
scas
loop
aad
orb
cld
insl
test
mov
lret
push
ror
pop
dec
pop
das
scas
mov
xchg
lock
dec
fldl
sti
insb
lods
cld
mov
adc
sub
adc
jg
out
stos
cmp
mov
mov
jnp
cmp
mov
push
insl
jne
test
mov
add
es
aaa
jecxz
clc
shrb
stc
das
sbb
dec
outsb
jae
repnz
dec
mov
les
dec
std
out
and
std
cs
add
mov
loope
sub
push
in
je
pop
popa
fcomip
lds
fisttpl
icebp
mov
mov
rcrb
dec
and
bswap
push
sahf
es
ret
inc
in
mov
test
or
mov
out
je
notl
frstor
mov
jmp
push
and
leave
adcb
add
and
cli
hlt
adc
je
sub
fs
xchg
cmc
mov
mov
mov
movsl
push
push
int
and
sub
xlat
pop
and
mov
mov
shrl
mov
rol
imull
mov
nop
pop
aaa
or
fisubs
sub
sbb
mov
fstl
mov
push
mov
outsl
push
icebp
out
jge
repz
sub
cmp
insl
add
sarl
divl
insb
jp
cmp
jne
ret
xchg
sub
jle
inc
and
adc
dec
adc
and
xchg
or
rcrl
sbb
jg
fsubs
xchg
jecxz
fwait
icebp
jmp
push
cli
lds
ss
push
lar
pushf
jne
mov
out
mov
sub
sub
push
or
divl
test
imul
cmp
sbb
movsl
xlat
dec
out
dec
mov
mov
jbe
push
incb
dec
pop
insb
lea
jns
sub
mov
add
mov
loop
xchg
and
and
ja
fisubs
or
js
mov
mov
xor
out
xchg
mov
mov
int3
dec
fsub
xor
mov
je
pop
insb
andb
pusha
outsl
mov
mov
xchg
xchg
pushf
popf
dec
mov
inc
movsl
push
dec
daa
sbb
mov
fldl
aad
or
add
sbb
lcall
mov
and
mov
cmp
pop
inc
sub
mov
fmul
mov
xchg
arpl
cmc
inc
mov
push
adc
test
lret
push
add
sbb
jb
mov
insl
pop
xchg
or
jmp
aaa
fsubs
and
pop
fwait
std
sbb
inc
into
fmulp
pop
testb
stos
stos
mov
scas
jg
in
add
mov
mov
sbb
loope
mov
add
jp
in
sub
rcrb
pop
mov
dec
loopne
push
mov
cmpb
adc
int3
sbbb
mov
out
ljmp
fiadds
fld
add
out
push
jbe
ret
mov
push
sub
mov
popf
mov
inc
sub
lret
rolb
test
jp
arpl
fisttpll
leave
xor
cmp
mov
sub
fisubrl
xor
call
jb
fldcw
adcl
jmp
out
cs
lret
ss
push
cmp
faddl
ds
lock
stos
test
jbe
loopne
add
or
mov
sub
dec
push
adc
add
xchg
pop
rcll
inc
sub
sbb
push
popa
inc
xchg
in
jno
test
sbb
test
mov
mov
jecxz
inc
sbb
cmc
xor
insb
dec
aam
mov
arpl
int3
in
lock
or
aas
add
cld
addr16
fistpll
in
das
adc
pop
lds
repz
pop
pop
icebp
ja
lret
icebp
push
iret
dec
dec
xchg
adc
mov
ja
mov
mov
push
test
and
mov
cmp
fisttpll
rorl
fsubl
jle
cwtl
jns
lods
xchg
jmp
dec
bound
cmc
mov
dec
mov
pop
xchg
jbe
sbb
cmp
mov
enter
push
dec
pop
cmp
mov
outsl
out
fdivs
fmull
andb
sarb
fdivr
jmp
ficompl
dec
jbe
adc
mov
jp
pushf
sbb
push
jae
js
cli
jno
mov
push
inc
adc
test
loope
xchg
fwait
sub
ss
test
sub
mov
popa
lret
fildl
or
xor
jge
test
fistps
out
mov
add
lret
mov
fsubrp
loope
aad
in
int
cs
testl
sub
or
inc
mov
mov
fs
push
xlat
sub
clc
jle
into
pop
mov
push
xor
adc
inc
adc
hlt
loope
jmp
pop
adc
lret
test
xlat
mov
sbb
adc
mov
test
movsb
das
les
repz
mov
in
add
popf
ss
xor
xor
jmp
add
dec
bound
inc
cmc
and
lea
sub
in
shlb
sbb
xchg
sbb
xchg
mov
and
xchg
inc
out
push
ret
addr16
xchg
test
fs
push
lods
femms
out
fisttpl
lcall
or
pop
out
dec
push
adc
add
enter
stos
mov
cmpsb
cli
insb
pop
lahf
pop
jp
or
xchg
sub
xchg
inc
sub
test
mov
dec
lods
out
pop
xchg
cmp
push
add
ljmp
xor
gs
incb
cmp
stos
in
or
in
push
shll
pop
inc
inc
adcb
call
sbb
add
cmovae
dec
jne
mov
or
push
xchg
imul
xor
out
or
xor
and
test
push
jno
mov
stos
xlat
or
clc
jo
ret
sbb
mov
push
cmp
mov
or
push
aam
inc
enter
das
in
fmull
mov
pusha
jecxz
mov
out
mov
mov
leave
cmp
pop
xor
sub
aas
aas
cmp
lret
dec
adc
dec
or
xchg
pop
sti
push
mov
test
mov
out
ds
or
dec
sbb
mov
fwait
jl
out
lea
sbb
loopne
push
fldcw
sahf
in
insb
in
sbb
lds
inc
jbe
cmp
adc
ljmp
pop
cmpsb
sub
fstpl
or
dec
pop
cmp
xor
lods
xchg
fs
push
inc
fists
push
add
push
adcb
mov
jns
pop
mov
xchg
xchg
cwtl
aad
adc
jnp
arpl
out
fdivr
lds
cmp
xor
dec
inc
jp
adc
jbe
mov
popf
mov
mov
cmp
and
inc
sbb
pushf
shrd
scas
icebp
rcrb
push
push
adc
xchg
dec
loope
test
dec
outsb
pop
add
lahf
mov
xchg
push
cmpb
adc
jns
add
imul
out
out
add
lea
loope,pn
or
pop
fnstenv
stc
aam
cmp
mov
xorl
cmp
movsb
dec
xor
jne
loop
adc
dec
mov
xchg
dec
mov
aas
adcl
pop
inc
fdivr
test
push
loopne
fimull
dec
sub
cmp
jne
testb
cmp
decl
negb
add
xchg
pop
rcrl
mov
imull
fmulp
and
call
sub
data16
dec
aad
mov
or
xchg
test
clc
idivl
aaa
cmc
movsb
scas
jnp
jg
mov
mov
ljmp
add
adc
dec
mov
std
stos
ja
add
bound
sub
ret
cmp
cld
inc
and
jle
xor
cmpsb
out
fadds
gs
nop
fwait
sbbb
dec
add
sub
mov
test
xchg
das
jmp
scas
scas
xchg
insl
add
sbb
loop
dec
lds
mov
sub
std
pop
outsl
inc
push
and
and
gs
lret
faddl
dec
pop
jmp
dec
mov
ljmp
xchg
pop
enter
ss
push
mov
lock
sbb
lds
cld
dec
add
fnstenv
adc
aam
mov
or
addr16
jns
dec
ficompl
push
add
ret
or
mov
xchg
xlat
add
fmul
adc
jge
sti
in
mov
pop
test
mov
pusha
mov
xor
adc
daa
call
es
outsb
xor
inc
js
xchg
pop
sbbl
mov
ret
cwtl
mov
xor
pop
xor
sub
jbe
dec
sbb
cwtl
shll
dec
mov
lods
mov
or
jns
xor
xchg
fnsave
sbb
push
jge
and
cli
jg
cmp
mov
sub
pop
jbe
daa
mov
and
mov
divl
mov
and
mov
fimull
ret
sbb
add
xchg
pop
lea
mov
xor
loopne
adc
lds
jbe
mov
pop
inc
push
xor
imul
pop
pop
jns
call
mov
fmulp
pop
adc
jmp
fsubrl
out
scas
xchg
cli
dec
mov
shr
es
cltd
push
cmpsb
and
mov
push
mov
mov
jecxz
jbe
push
mov
in
out
push
push
cwtl
enter
push
inc
jmp
clc
cmpl
cmp
or
jle
adc
fstpt
cmp
gs
sti
mov
rorb
les
mov
idivl
push
rcrb
jns
mov
adc
outsb
inc
addr16
dec
addb
or
repz
insl
push
mov
xchg
ss
push
movsl
imul
in
out
mov
pop
call
scas
fcoml
xchg
mov
or
daa
stos
out
call
fs
pop
mov
or
jmp
pop
lcall
adc
mov
loope
mov
mov
cmp
cmp
jmp
cmpsl
pop
add
mov
mov
xchg
lcall
inc
aad
xor
mov
pop
hlt
jbe
fidivl
jmp
pop
push
nop
mov
fs
and
int3
imul
push
test
push
mov
mov
sbb
push
lock
pop
adc
das
sbb
ds
int
int3
ss
faddp
adc
xchg
push
iret
xchg
bnd
into
push
imulb
push
sarl
movsl
insl
roll
stos
inc
cltd
insl
xchg
inc
icebp
fcomps
push
out
pushf
add
or
xchg
aam
xchg
xor
dec
jmp
pushf
xor
sub
mov
jge
add
inc
sbb
jns
inc
push
cmp
in
sbb
cmpsl
ficoml
sbb
popa
aas
outsb
insb
jo
adc
xchg
shl
dec
mov
enter
scas
in
adc
cld
call
fbstp
jle
es
mov
pop
sbb
ljmp
lea
jge
jge
fisttps
push
lea
arpl
scas
lds
push
pop
xchg
mov
es
loopne
lods
jo
ja
notl
dec
sub
repz
inc
push
xor
jle
outsb
movsl
cld
jle
cmp
add
inc
inc
sar
bound
out
outsl
mov
xor
lahf
or
test
js
call
cmpsb
adc
xor
push
jl
mov
xchg
jge
xchg
mov
loope
mov
enter
lret
xchg
push
push
cs
jae
rorl
mov
addl
push
test
ss
mov
cmpl
addb
shrb
cld
pusha
xor
popa
add
sbb
lea
sub
and
push
cmpsb
dec
sub
outsl
mov
lahf
rcrl
iret
inc
scas
sti
push
adc
fucom
imul
rclb
pop
cmp
jb
xor
iret
outsb
mov
push
or
inc
cmc
leave
int3
out
pop
dec
lcall
aaa
mov
xchg
inc
int3
mov
dec
dec
data16
jl
inc
in
popf
hlt
push
inc
addr16
es
cmp
cltd
sar
and
sub
push
push
or
xor
lcall
mov
dec
sub
pusha
jle
rcrb
pushf
sub
ds
cmp
bound
xor
adc
mov
add
leave
pop
bound
xor
test
fistl
mov
ret
jp
fwait
mov
mov
pop
and
mov
push
and
clc
dec
insl
pop
stc
cmp
out
popa
repz
loop
push
sub
dec
xchg
pop
loop
sbb
pop
dec
pushf
mov
inc
push
push
jp
adc
mov
push
mov
push
ror
fldt
popa
test
pop
pop
lods
xchg
cld
das
cmc
fisubs
mov
gs
sub
adc
cs
faddl
ds
in
lods
test
add
dec
mov
xchg
cmpsb
test
cs
outsl
mov
test
and
sbbb
jns
cmp
mov
xchg
cltd
subl
cli
jns
push
dec
sub
std
xor
push
pop
loope
sahf
shlb
xor
dec
insl
ret
sub
and
pop
inc
movsl
enter
cmp
or
aam
nop
inc
xchg
or
or
push
and
xchg
call
mov
jae
add
into
cmp
rcl
les
andnps
mov
mov
adc
mov
insb
xchg
pop
imul
loopne
mov
pusha
add
push
inc
ret
clc
mov
dec
sbb
jne
xchg
xor
lea
jnp
mov
testl
xchg
stos
stos
sub
pop
lcall
ficoml
mov
or
xchg
lock
jbe
inc
mov
push
jp
adc
addb
sti
test
mov
mov
add
jecxz
adc
or
mov
fstl
jmp
mov
sub
jle
lea
mov
stos
aas
nop
jge
in
and
pop
icebp
andl
jae
cs
pop
push
clc
cmc
jae
pop
push
or
mov
mov
out
das
jp
cs
popa
adc
cmp
jae
or
cmp
in
dec
cmp
fs
pop
fidivl
dec
pop
add
inc
and
cwtl
jp
mov
out
pop
pop
pop
cmp
bound
cmp
jmp
inc
mov
movsb
mov
dec
jno
xchg
lea
jne
loope
mov
fistpll
daa
int3
lds
xchg
add
enter
je
roll
xchg
jne
add
cmp
in
cltd
xchg
lods
jne
cmpb
lret
sub
movsb
cmpsl
sub
xchg
mov
addr16
xchg
xchg
loopne
add
outsl
addr16
mov
jp
dec
ds
sub
int
imul
add
stc
pop
insb
in
jno
imul
pop
test
or
xor
xchg
sub
clc
mov
into
xor
cmp
enter
jmp
ss
cltd
push
jecxz
push
ljmp
inc
cld
fcmovnbe
mov
jns
dec
push
jo
push
push
pusha
sbb
and
mov
jmp
mov
pop
pop
mov
add
push
out
mov
jmp
shl
or
imul
test
inc
cld
cmp
ja
xchg
mov
mov
ja
mov
and
dec
push
mov
adc
out
jns
dec
xorl
mov
je
dec
insl
imul
xchg
pop
aaa
scas
push
mov
cmpsl
cmpsl
adc
or
nop
add
ret
cmc
outsl
adc
ss
dec
aas
sub
mov
insb
rcl
bound
xchg
push
push
xchg
or
xor
jno
loop
ss
mov
cmc
arpl
fidivs
dec
sub
mov
popa
mov
arpl
sbb
rcll
xchg
cmp
bound
cmp
negb
cmp
dec
and
je
pop
ds
pop
and
andl
inc
sub
insb
sub
mov
imul
out
mov
das
sbb
pusha
dec
leave
add
sahf
sbb
hlt
sub
scas
xchg
push
mov
cmc
xchg
nop
fcomip
inc
inc
daa
add
sar
loop
shl
cmp
in
mov
lahf
pop
fidivrl
cltd
cmp
push
js
mov
inc
jae
in
xor
fs
xor
in
leave
mov
jg
hlt
inc
aas
in
test
mov
fmull
jecxz
push
pop
xchg
pushf
nop
das
adc
pushf
sarb
pop
divl
push
inc
push
sbbb
and
jo
sub
dec
fs
mov
pop
xchg
lods
outsb
cmp
nop
mov
repnz
dec
pop
loopne
xchg
mov
shrl
test
dec
lea
push
in
movsl
pop
add
aad
stos
scas
dec
pop
call
test
lods
mov
inc
icebp
jb
mov
pop
xor
lahf
cmc
adc
movsb
insl
and
inc
cli
xchg
xor
movsb
ss
mov
xlat
xlat
add
sbb
xorl
pop
les
loope
inc
jno
lea
aaa
test
cmp
dec
or
lret
jl
mov
ret
lret
fbld
jne
push
inc
ss
cwtl
insb
xlat
push
mov
dec
push
mov
icebp
pusha
in
aad
ds
rcrl
outsl
out
inc
jmp
and
in
mov
cwtl
pop
lcall
ds
data16
jae
xor
mov
lock
fidivrs
xor
addl
mov
pop
scas
push
push
cmpsl
fcos
shlb
sahf
pusha
fldcw
mov
pop
cmp
pop
mov
loop
clc
mov
gs
inc
mov
clc
jnp
test
pop
sub
mov
xchg
scas
add
lods
mov
cltd
scas
adc
fstps
lock
push
sub
in
mov
push
rcr
and
jb
orl
inc
jo
cmp
inc
xchg
mov
jns
jge
jb
cmpsl
sbb
repz
add
cltd
fs
and
pop
ds
insb
pop
movsb
js
loope
loopne
xor
mov
dec
xor
repnz
xlat
adc
addr16
in
dec
sbb
pop
push
pushf
icebp
scas
fs
data16
or
test
jno
mov
repnz
mulb
mov
ljmp
mov
ret
cmpsl
xchg
insl
cmpsb
mov
add
loop
cmpsl
in
repz
das
fnsave
adc
mov
xchg
fs
xor
push
rcl
jo
mov
scas
shlb
and
ljmp
mov
inc
jo
daa
mov
xor
pushf
adc
movsl
sub
xor
lahf
and
xchg
xchg
fs
xchg
lret
inc
imul
xchg
adc
dec
cmp
std
into
in
jmp
lds
mov
adc
lret
push
cs
out
pop
mov
cs
arpl
sbb
xor
mov
test
or
pop
or
lret
repnz
enter
or
addb
cli
xor
and
mov
cmpsb
out
push
xchg
and
imul
pushf
pop
mov
daa
add
dec
es
jmp
and
int3
pop
inc
dec
or
lods
jbe
repnz
pop
inc
or
lea
jle
xchg
dec
fsts
aaa
sbb
pop
mov
mov
dec
jo
movsl
ret
call
rcll
repz
mov
cltd
leave
mov
jb
fcompl
test
add
fs
insb
mov
jp
faddl
xchg
mov
add
mov
jle
sbb
cwtl
add
sti
out
fisttps
xor
stos
push
fbld
cmp
fs
and
lds
dec
pop
test
mov
lods
imul
push
adc
in
negb
icebp
sbb
inc
adc
push
scas
out
aas
add
stos
sarl
sbb
frstor
popf
sub
mov
inc
sbb
xor
pop
imulb
pop
jae
icebp
and
xchg
loop
push
inc
jecxz
push
iret
xchg
jge
mov
test
pusha
jge
int3
inc
dec
fnsave
lahf
mov
sbb
lods
xchg
or
pop
adc
bound
aas
sub
and
pop
aad
nop
shrb
into
lret
into
mov
cli
gs
out
inc
test
add
mov
and
bound
jne
xchg
imull
xchg
int
stc
mov
rorl
xchg
loop
movsb
pop
pop
push
push
mov
lret
lea
leave
cwtl
popf
loop
stos
dec
push
cmp
xor
iret
pushf
dec
out
sub
cld
cmpsb
andl
ds
sub
adc
pop
in
insb
lret
cmp
leave
int
js
and
or
imul
test
sbb
addr16
mov
push
push
popa
movl
jbe
adc
outsl
xor
clc
add
pop
test
in
mov
and
leave
adc
imul
in
stc
jbe
inc
add
or
stos
add
test
sub
int
stos
push
enter
lret
fists
lods
pushf
mov
mov
xchg
scas
mov
popa
push
xor
lret
ds
sbb
dec
xor
repz
mov
incb
lret
push
mov
dec
loopne
sbb
mov
push
add
insb
cmp
jmp
std
pop
mov
andl
add
gs
jne
jno
xchg
mov
xchg
fld
sar
ja
xor
es
push
clc
scas
adc
add
add
fcoms
rclb
mov
pushf
sar
inc
adc
jne
fwait
jb
pop
jmp
xchg
sahf
jge
aad
mov
jl
mov
push
mov
adc
mov
sub
adc
fstl
sbb
imul
xchg
dec
sbb
bound
mov
jmp
cs
mov
test
mov
cli
xor
push
pop
add
cmp
mov
ss
arpl
and
repz
inc
cld
out
faddl
jns
cmc
out
mull
rclb
mov
sbb
pop
jbe
or
es
and
rorl
nop
and
pop
push
shlb
or
lret
cmp
sbb
cs
and
rcl
and
ss
pop
lret
sti
adc
xchg
jae
inc
push
lcall
out
stc
mov
add
pop
loope
xchg
dec
lods
fistpl
rolb
pop
mov
inc
inc
mov
mov
popa
mov
inc
add
sbb
shll
insl
mov
popa
cmp
aas
sbb
mov
inc
cmp
cmp
push
into
jo
mov
adc
sbb
sub
xchg
lea
popf
add
xor
mov
cld
mov
iret
jns
jle
addr16
mov
pop
push
mov
mov
lods
outsb
cmp
xchg
or
inc
or
pusha
sub
or
sbb
shl
das
int
mov
xlat
jo
pop
addr16
mov
scas
jae
lods
push
cmp
pop
or
out
inc
stc
sbb
push
pop
pop
cmp
jo
rorb
movl
inc
enter
mov
or
aad
jmp
cmp
lods
div
pop
and
add
leave
mov
push
mov
xor
mov
dec
dec
lret
std
jo
jo
incl
rorl
lahf
aam
or
pop
mov
pop
lahf
fcomps
stc
mov
pusha
aad
adc
test
sub
push
add
and
adc
lcall
jb
rolb
adc
fnstenv
jne
mov
sbb
in
clc
jp
lods
jae
sbb
push
cmp
sub
ret
cltd
fadds
das
or
test
ljmp
pop
rol
add
sub
push
movsb
lea
adc
jl
repz
jns
icebp
add
pop
xor
lcall
outsb
mov
dec
out
jl
enter
jne
lcall
cmc
das
sbb
les
cmpsl
and
mov
ds
lock
lods
out
sar
dec
sub
movsl
sub
or
xorb
and
cwtl
fwait
pop
xchg
icebp
xlat
or
and
cmpsb
loopne
call
mov
in
jecxz
dec
mov
sbb
gs
repnz
insw
sbb
dec
pop
jmp
adc
mov
dec
lahf
pusha
cmpb
push
adc
xchg
lock
adc
jo
xchg
mov
je
movsb
in
pop
lds
and
jns
push
ss
ja
pop
mov
sbb
mov
sbb
mov
or
mov
loop
ds
pop
mov
pop
gs
iret
lret
fisttpl
cltd
push
inc
loope
dec
arpl
jb
loope
xchg
sub
jmp
push
shll
sub
loopne
fs
jl
inc
repnz
sub
lods
insl
ja
in
xchg
mov
fmuls
lods
xchg
out
jbe
cs
inc
mov
pusha
pop
inc
or
cmovnp
movsl
fdivrp
jno
jg
call
add
jge
pop
xchg
jb
rolb
lock
inc
mov
rcll
sarl
dec
nop
mov
adc
mov
aam
sub
ret
orl
ljmp
aam
loopne
cmpsb
sub
xchg
sbb
loope
stc
leave
orl
push
dec
movsl
pop
pop
xchg
pop
sub
sub
mov
mov
lret
mov
ret
fstl
repnz
mov
jge
add
loopne
stos
dec
mov
pop
adc
int3
inc
mov
pop
dec
push
jmp
dec
xlat
fsubrp
gs
fwait
sub
rorl
push
dec
jne
jmp
inc
cmpsl
icebp
sbb
sub
inc
in
adc
pop
shll
arpl
pushf
lods
out
xor
nop
xchg
xor
xor
shlb
or
dec
inc
int3
dec
or
fadd
mov
adc
add
leave
jns
xor
lret
jne
cmpsl
jae
push
mov
fcmovnu
xor
dec
xchg
sub
test
pop
dec
inc
and
dec
hlt
test
fisubrs
dec
jae
mov
mov
xor
cs
aad
mov
test
add
scas
cmp
xor
fldcw
imul
push
add
movsb
xchg
jge
aam
mov
subb
mov
mov
fisubs
xchg
jns
outsl
pop
repz
into
mov
xor
xor
lret
in
xor
cmp
pop
xor
subl
vcmpsd
push
js
aam
cmp
sbb
das
mov
cmp
popf
test
data16
icebp
repz
data16
ret
iret
into
stos
jae
xorb
addr16
out
outsb
inc
xchg
mov
add
aad
jge
sbb
scas
loop
lods
dec
jns
in
push
clc
jmp
ss
mulb
shl
pushl
mov
cmp
sti
data16
enter
rcr
insl
stos
xchg
sarl
mov
mov
rcrl
dec
scas
mov
push
pop
jae
ss
mov
sub
xchg
out
push
aam
fsts
jg
mov
std
mov
jge
popl
or
xchg
loopne
lcall
mov
andb
push
pushf
mov
cmp
adc
push
and
bound
fiaddl
and
mov
test
and
fcomps
movzwl
pop
dec
fnstsw
loope
push
mov
push
and
ds
iret
call
lds
mov
mov
or
xchg
inc
sbb
jp
xor
lret
stc
fs
rclb
out
xchg
dec
inc
push
or
std
inc
push
dec
xchg
push
nop
shll
jge
dec
push
std
int
aam
test
adc
jmp
push
inc
jno
stos
ficoms
add
popa
aas
repz
push
pop
cmp
std
jmp
add
mov
jge
sbb
in
cwtl
sbb
repnz
mov
jg
cmp
jns
push
repnz
enter
imul
lcall
mov
sub
sti
out
push
mov
jo
stc
fistps
notl
jno
lods
movsb
pushf
jno
mov
inc
xchg
and
repnz
mov
jmp
push
push
pop
push
loopne
sbb
shrl
mov
daa
push
mov
adc
xchg
sub
cli
or
inc
mov
and
push
iret
and
decb
shll
stos
aaa
lock
jg
mov
mov
sub
push
mov
popf
sub
lea
test
mov
mov
lret
mov
aad
adc
inc
jne
adcb
push
mov
int3
stos
xchg
addr16
hlt
pushf
daa
adc
cmpsb
inc
popa
insl
scas
ret
push
call
ds
add
icebp
movsl
xor
repz
inc
xlat
mov
js
jns
ja
mov
lret
push
dec
and
fiadds
xchg
mov
mov
fwait
add
inc
pop
push
pop
adc
pop
aaa
pushf
cli
inc
into
jno
mov
lret
mov
adc
xchg
jae,pn
sbb
sub
sub
and
and
mov
or
jbe
push
addr16
adc
dec
pop
jnp
enter
sub
jns
es
loope
shll
mov
xor
mov
into
pushl
dec
dec
fdivp
cmp
lock
mov
cld
cmc
xchg
lea
bound
idivb
add
mov
dec
jecxz
repnz
pop
pop
mov
ret
pop
xor
jbe
pop
xor
repz
sbb
cmp
jne
push
pusha
mov
xorb
or
in
jmp
call
dec
or
add
int3
sbb
jp
xchg
jns
jno
mov
sahf
jp
ret
icebp
mov
mov
in
cmc
dec
sbb
cltd
pusha
mov
adc
dec
xchg
mov
inc
ja
push
xor
leave
je
fmuls
loopne
mov
push
popf
decl
xchg
cwtl
xlat
lock
or
push
push
data16
cmpsl
dec
in
js
test
lds
cmc
add
mov
dec
cld
xor
adcl
leave
cli
int3
dec
in
ss
push
sbb
das
insb
push
outsl
push
roll
inc
das
cmpsb
fsubrs
push
movsb
pop
ljmp
cmpsl
lret
xchg
mov
orl
jecxz
jns
out
cmc
or
ftst
sbb
xchg
shrb
xchg
xchg
mov
scas
fimull
push
or
xor
aam
adc
mov
insb
dec
fists
sub
inc
mov
fwait
insl
push
clc
sahf
dec
sub
or
ja
dec
dec
and
fs
sbb
pop
xor
adc
sarb
inc
fistpll
pop
ror
push
pop
dec
pop
jmp
add
dec
jb
stos
inc
mov
push
mov
bound
mov
xchg
and
jae
outsl
xchg
push
lret
in
adc
sub
bound
sti
mov
or
daa
std
mov
daa
jle
adc
push
in
dec
jecxz
cmp
mov
dec
sub
gs
or
fidivl
or
lahf
pushf
aad
pop
lahf
insb
pop
push
cld
and
loope
fisubrs
test
sbb
aaa
xor
pop
add
mov
pop
mov
fs
push
push
jne
fdivs
test
pusha
jmp
clc
pop
push
popf
mov
sahf
jmp
inc
sbb
rorl
out
jnp
mov
sbb
pop
mov
jns
sub
mov
out
adc
or
dec
mov
incl
aad
mov
popa
or
insl
xor
loope
stc
shl
mov
in
sbb
data16
xchg
or
cmc
mov
xor
cs
lock
in
cli
bnd
das
fadds
xchg
mov
xchg
dec
mov
or
es
sbb
loope
insb
imul
aad
mov
dec
mov
mov
mov
ldmxcsr
fwait
loop
je
dec
mov
out
out
in
or
sub
xchg
stos
ficompl
xor
cmp
fisttps
aam
cmp
jno
or
jnp
sti
jae
sbb
jnp
adc
int3
cmp
pop
test
outsb
repnz
mov
mov
cmp
cmp
in
pushf
loope
lret
std
dec
test
repnz
adc
xchg
mov
cmpsl
dec
out
hlt
inc
in
mov
push
lds
or
fdivl
pop
xchg
cmp
pop
jg
scas
mul
cs
mov
xchg
add
inc
stos
aas
mov
push
pop
pusha
lds
mov
cltd
neg
xchg
outsb
xorps
lea
sbb
ret
mov
adc
cs
mov
out
jbe
dec
mov
mov
adc
push
incb
repz
mov
clc
adc
add
in
aas
int3
push
mov
out
pop
sub
aas
arpl
fwait
cmpsl
jecxz
imul
mov
xchg
addb
mov
push
inc
mov
mov
ljmp
pop
andl
pop
cmp
cmpb
shrl
mov
inc
rcrb
mov
loope
cltd
or
mov
ret
cmp
mov
mov
clc
repnz
sahf
pop
idivl
mov
or
lods
mov
les
jno
fs
push
adc
jb
add
add
out
lcall
fcoml
imul
jp
out
gs
dec
inc
fsubrs
jmp
push
adc
mov
mov
xchg
jnp
lret
fdivs
and
and
mov
or
fwait
test
xchg
fucomip
add
fcmovb
fists
je
push
pop
imul
scas
dec
icebp
mov
cmp
arpl
in
sti
xchg
jns
adc
popf
pop
mov
inc
add
aaa
jmp
lods
repnz
in
shrl
pop
mov
pop
cmc
les
xor
mov
test
es
xor
cmpsb
push
push
cmpsb
jl
addr16
and
je
inc
clc
bts
xor
imul
mov
movsl
addr16
xchg
fisubs
cmp
xchg
pop
je
and
pop
enter
jae
push
int3
les
jl
imul
pop
or
and
xchg
sub
andl
dec
loopne
dec
out
je
bnd
xor
orb
shll
loope
add
dec
int3
mov
pop
xchg
mov
mov
jb
rcrl
dec
xor
mov
mov
mov
sahf
xor
xchg
mov
dec
fwait
mov
outsb
mov
test
adc
jbe
scas
movsl
xchg
mov
scas
mov
bound
adc
xor
das
test
sti
rep
rcr
into
mov
lret
popf
movsl
enter
adc
push
fld
mov
sti
xchg
ljmp
mov
jnp
cmp
fnstenv
stos
.byte
inc
adc
stos
sub
sbb
add
ja
popf
mov
push
sub
mov
mov
xlat
push
imull
adc
movsl
mov
dec
sub
test
and
movsb
push
jge
mov
pop
add
enter
mov
das
or
xchg
pop
cmp
mov
popa
sbb
enter
push
insb
out
cmp
adc
lock
idivb
in
add
push
push
gs
or
push
cmp
popf
xor
into
inc
mov
dec
sub
fnstsw
mov
hlt
std
lds
std
jg
mov
or
jg
xchg
adc
je
pop
scas
std
out
mov
add
push
xchg
aaa
rcr
orb
ret
jbe
daa
inc
cmp
inc
jo
jg
dec
mov
bound
cs
clc
and
xchg
pop
test
inc
test
xchg
cmp
sbb
pop
mov
das
out
mov
push
scas
mov
jb
stos
out
inc
jbe
jp
cli
arpl
popa
lahf
xlat
jns
xchg
pop
mov
fnsave
xchg
cli
stc
pop
stos
and
gs
pop
mov
div
push
fwait
xor
in
movb
scas
js
loope
push
stos
lret
inc
fsubrl
sti
pusha
loope
out
clc
lods
push
sahf
call
sbb
in
jnp
stc
jno
jecxz
js
pop
outsb
inc
fmull
adc
imulb
andb
jg
sub
cmp
test
lea
jle
push
or
jge
pop
add
jae
inc
or
ret
xchg
outsl
lcall
inc
sbb
lods
js
inc
mov
cmpsl
cmc
mull
mov
and
sbb
adc
mov
gs
jne
push
dec
and
popa
aam
std
aad
rclb
mov
xchg
cmp
adc
or
lock
mov
add
cltd
and
mov
jle
fdivl
xor
push
sbb
pop
mov
adc
sbb
sub
out
or
call
ret
jno
aaa
scas
jne
frstor
or
sbb
add
push
daa
repz
jbe,pt
dec
push
daa
xchg
stos
out
xchg
or
jp
dec
outsl
add
aas
arpl
ss
and
adc
sahf
xchg
and
cmp
cwtl
pop
push
or
cmp
lods
pop
cmp
xor
lahf
clc
aam
jb
mov
in
jmp
jmp
sti
jnp
xchg
test
clc
or
sbb
enter
cmp
lret
adc
inc
jb
and
add
mov
scas
fwait
add
lret
jp
and
out
sub
imul
js
lds
push
movsb
imul
sbb
repnz
mov
inc
and
inc
sbbl
gs
insl
sbb
arpl
cmp
loop
inc
rcl
insb
jmp
inc
push
xchg
pop
or
dec
adc
and
sbb
inc
in
xlat
dec
pop
mov
or
lcall
stos
pop
mov
arpl
lods
out
jno
xchg
pop
jle
repz
fisttpll
xchg
mov
pop
ret
in
cli
test
sbb
insb
jecxz
pop
jno
mov
or
add
xchg
mov
out
mov
imul
cli
ds
fsubrs
sbb
loope
sahf
and
add
popa
dec
cmp
outsl
ljmp
xchg
and
mov
inc
loope
mov
sbb
or
mov
cmc
push
dec
test
scas
mov
mov
adc
lcall
push
lahf
cmp
sub
jge
lock
dec
retw
les
dec
sub
sar
mov
jl
shl
movsb
mov
xchg
cwtl
mov
cld
aam
lods
push
cmp
sbb
mov
push
lret
or
push
mov
sub
cmp
jmp
mov
adc
sbb
mov
jae
adc
and
sub
dec
in
int3
and
cmc
repz
jb
push
repz
jecxz
mov
push
sbb
outsb
shr
in
shlb
pop
xlat
das
ret
add
xchg
std
ret
test
push
mov
iret
ret
loope
mov
jae
inc
xor
inc
jp
sbb
xchg
and
loope
outsb
stos
cli
cmp
xchg
mov
gs
pop
cmpsb
mov
xchg
mov
push
cmp
or
jge
repz
arpl
into
lret
jl
mov
pop
jl
xor
push
pop
xchg
mov
jmp
jecxz
fcompl
repz
scas
push
fsubr
sahf
cmp
imul
rol
in
shl
iret
das
sarb
dec
sti
cli
lds
pop
frstor
das
dec
mov
das
cltd
sub
mov
hlt
pop
adc
pop
inc
or
int
xor
das
mov
xchg
lods
movsl
lods
sbb
sbb
out
or
xlat
lods
mov
pushf
dec
mov
xchg
add
cmpsb
or
lahf
and
xor
push
mov
xchg
cmpsb
add
sub
mov
test
push
jns
adc
in
xor
push
mov
jns
out
push
cli
pop
dec
test
sub
mov
pop
cmpsb
inc
jnp
test
xchg
xchg
notb
xchg
add
mov
je
mov
or
addl
mov
outsb
add
pop
leave
lods
cmp
push
pop
mov
inc
pop
lcall
decb
adc
nop
lahf
daa
out
mov
lds
addr16
cs
aam
mov
mov
push
ret
mov
cmp
jno
mov
test
pop
xchg
inc
push
xlat
jb
dec
or
iret
imul
lds
movsl
fadd
mov
sbb
add
push
adc
jmp
inc
inc
or
std
test
ret
imul
fsubl
push
mov
enter
data16
push
xor
push
adc
add
cmc
imul
sti
dec
test
fldcw
and
cmpsb
imul
shrl
cmp
ss
int3
addr16
mov
adc
mov
in
push
push
pop
cwtl
and
mov
fsubl
inc
sbb
adc
sarb
sub
sub
pusha
push
std
mov
sub
xchg
cmp
sbb
pop
ljmp
mulb
and
xchg
inc
pop
push
je
cli
ror
ret
mov
dec
daa
vmovss
adc
data16
and
lret
cmpsl
adc
sub
sbb
fstl
jl
subb
mov
lea
loop
push
sbb
repz
lods
insl
mov
xchg
movntps
pop
push
mov
aam
in
ljmp
jle
fsubl
inc
pop
add
pushf
adc
add
shll
add
mov
mov
xchg
mov
inc
pop
in
bound
fdivl
xor
add
add
add
add
and
add
js
add
add
or
add
add
test
add
rolb
addb
add
fadds
add
lock
addb
add
and
add
cmp
add
push
add
orb
add
push
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
loopne
add
add
add
lock
add
add
add
add
add
add
add
add
adc
add
add
add
and
add
add
add
xor
add
add
add
inc
add
add
add
add
add
push
add
add
add
add
add
pusha
add
add
add
add
add
jo
add
add
add
addb
add
add
add
add
nop
add
add
add
add
add
mov
fwait
add
test
add
mov
inc
add
clc
xor
add
add
add
add
add
add
test
add
call
add
add
add
test
add
fcoms
add
push
add
add
add
add
add
add
mov
add
test
add
je
add
adc
add
xor
add
add
add
filds
add
add
lock
add
add
add
and
add
add
add
mov
dec
es
jae
loop
xchg
mov
sbb
enter
add
mov
push
mov
dec
xchg
aaa
adc
mov
and
int
pushf
cmc
inc
mov
popf
or
jmp
add
data16
jo
ljmp
loopne
outsl
inc
enter
add
aas
test
lret
push
inc
cmpsl
pop
push
out
cmc
sub
lock
sbb
inc
xchg
xchg
es
xchg
mov
decb
sbb
divl
xor
pop
sbb
jmp
cmp
mov
not
jne
cmpb
loop
sarb
pop
cld
imul
cld
or
pop
mov
jbe
mov
jnp
ss
lods
mov
pop
adc
aas
inc
and
jg
popf
adc
ja
repz
xchg
imul
lds
sti
or
mov
in
push
fnsave
and
aad
and
into
pop
mov
dec
push
jno
jmp
sarb
dec
jnp
stos
mov
ret
jecxz
xchg
cs
loop
dec
sarb
outsl
push
jb
push
push
xchg
sub
push
