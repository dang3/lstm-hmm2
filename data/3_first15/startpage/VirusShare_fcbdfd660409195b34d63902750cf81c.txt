push
call
ret
ret
and
pop
jle
sub
jae
mov
sbb
ss
xchg
mov
mov
cs
hlt
stc
pop
in
repnz
xor
jbe
or
jbe
and
push
js
push
in
jno
ljmp
xor
imul
xor
stc
ds
bound
subb
xchg
scas
cli
aam
xchg
lods
push
dec
jns
dec
out
xchg
cmp
adc
fs
aam
imul
cmp
sbb
insb
mov
lret
mov
fs
push
pop
test
clc
mov
lds
sub
ficompl
lea
ret
jmp
add
push
push
ds
iret
dec
pop
les
add
dec
cs
xor
inc
mov
dec
repz
jecxz
pop
ret
and
jecxz
add
jnp
jne
or
arpl
mov
push
xchg
test
sub
insb
add
cmp
fistpl
push
xor
das
lret
out
adc
nop
sub
shlb
pop
ret
and
pusha
daa
adc
xchg
and
push
inc
sarb
dec
sbb
aas
and
popa
or
and
jg
mov
cmpsb
xchg
es
jmp
xor
repz
xchg
push
push
into
cmp
xchg
aas
mov
iret
jp
addr16
xchg
std
sbb
add
sti
push
inc
call
enter
cmc
jne
jecxz
inc
int3
loop
mov
push
cmpsb
inc
jmp
addr16
add
xchg
dec
popa
pop
jge
xchg
nop
gs
sti
mov
jmp
or
or
mov
dec
sbb
inc
mov
mov
or
imul
mov
stos
dec
les
mov
or
pop
xorl
mov
rcll
lcall
inc
sarb
ret
or
and
xchg
mov
xor
shl
jbe
sbb
rcrl
insb
jnp
xor
mov
mov
xchg
and
push
jl
adc
js
mov
lea
ss
adc
xor
mov
xor
mov
sbb
sti
sbb
shr
mov
std
pop
push
dec
inc
mov
inc
and
dec
cmp
sbb
rol
loopne
in
iret
outsb
into
fsts
lret
js
popf
popa
push
or
and
sub
or
mov
adc
aad
mov
sub
cli
leave
pushl
xor
push
mov
inc
and
xor
mov
dec
sbb
xor
push
ds
lds
xlat
ror
subb
dec
jb
nop
sub
jmp
dec
inc
jg
sarb
fs
sti
xor
jb
imull
jae
adc
popa
cmpsl
js
pusha
jae
pop
les
stos
imul
mov
push
fs
test
outsb
lret
aam
or
loopne
inc
xor
dec
xchg
leave
fstps
movsb
frstor
aaa
icebp
dec
mov
mov
lods
scas
outsl
int
jmp
ret
mov
mov
hlt
jge
test
inc
add
adc
subb
nop
mov
lcall
xchg
out
dec
out
cwtl
cmp
xchg
xor
xchg
leave
mov
fwait
sbb
in
add
cmp
or
in
call
inc
inc
mov
jp
out
popa
push
dec
jg
inc
punpcklbw
xor
test
js
hlt
popf
int3
punpcklbw
jno
push
xchg
fwait
test
adc
jmp
cmc
dec
test
mov
in
xchg
fnstsw
pop
dec
jmp
pusha
adc
add
mov
pop
add
push
xchg
js
clc
sbb
jb
xlat
xor
mov
mov
sub
mov
mov
movsl
fidivrs
gs
ret
xchg
sbb
lahf
push
sti
jb
mov
dec
mov
mov
xor
rolb
arpl
lcall
push
imul
lret
fsubrl
jmp
lea
push
hlt
es
xchg
lds
sbbb
in
imul
inc
call
imul
test
decl
int
lretw
frstor
and
add
mov
pop
jnp
mov
adc
loopne
jl
cwtl
mov
fdivr
ret
cmpsl
mov
add
xor
push
icebp
insb
ss
pop
mul
aad
xchg
out
mov
add
xor
mov
xchg
pushf
jb
leave
xor
add
mov
inc
jp
push
outsb
stc
xchg
xchg
test
out
sub
lahf
mov
xor
adcb
mov
sbb
stc
mov
push
rolb
sysenter
xchg
sbb
add
pusha
loope
mov
jnp
jo
cltd
and
or
adc
sub
cli
xchg
pop
dec
dec
stos
or
test
outsb
mov
movsl
lahf
cltd
psrad
inc
adc
in
xchg
popa
fldcw
insb
pop
add
lods
jno
adc
mov
fs
test
or
fs
sbb
imul
shr
sbb
inc
cmp
add
mov
cmpw
mov
xchg
insb
jmp
jp
sub
ficompl
and
sbb
ds
dec
cs
out
aam
xchg
mov
inc
inc
in
sar
mov
xchg
xchg
repnz
lahf
push
jbe
in
push
sub
subl
aam
cs
mov
inc
mov
das
mov
push
es
and
pop
and
mov
and
insl
ja
je
xorl
add
addr16
ljmp
addb
push
cwtl
jno
aas
inc
call
or
std
aas
fldt
imul
jae
jmp
loopne
adc
or
imul
pusha
and
or
cld
cli
add
mov
sti
xlat
inc
adc
adc
orb
mov
iret
mov
mov
loopne
pop
leave
inc
scas
and
xor
loope
jle
push
cmp
addr16
mov
mov
insb
inc
sti
lock
nop
int
cltd
sbb
mov
sub
dec
insl
adc
adc
icebp
mov
dec
mov
dec
pop
fidivrl
cmp
cmpsb
and
pop
push
push
mov
xchg
mov
ljmp
jecxz
jge
pop
ds
std
mov
cltd
bound
mov
dec
data16
and
mov
addr16
clc
ja
pop
je
or
stos
mov
lcall
sub
jno
rcrb
rcr
xor
test
xor
std
jns
lahf
cmp
cli
pusha
lret
add
imul
int
dec
jne
jecxz
fsubr
icebp
sbb
cmp
cmp
outsl
je
pop
daa
data16
mov
insb
lea
insb
sbb
sbb
mov
in
jne
gs
into
add
add
dec
test
and
or
call
dec
dec
sub
test
mov
pushf
jnp
xchg
mov
mov
les
ror
jmp
pop
sti
push
or
inc
ret
sub
ret
dec
icebp
cmp
aaa
pop
mov
inc
xchg
loop
mov
cmp
push
adcl
dec
xchg
mov
insb
xchg
in
cs
sbb
arpl
mov
test
pushf
and
push
call
cvttps2pi
push
daa
shrb
add
cs
in
mov
jle
iret
pop
jnp
cmp
inc
push
popa
mov
xor
in
mov
in
mov
das
mov
add
pop
and
jle
xchg
xchg
jl
dec
test
sbb
mov
cmp
cld
and
adc
push
lods
popf
add
cmp
sbb
lret
in
push
cmc
loopne
in
or
cmp
pushf
xor
jle
aam
aas
sub
int
andb
icebp
mov
pop
adc
adc
fsubr
sbb
add
in
xchg
ficomps
mov
mov
pop
aam
dec
in
inc
ret
das
sbb
divb
lcall
outsb
fisubl
loop
repnz
mov
pop
es
jb
dec
push
dec
push
xor
cmp
lods
lret
pushf
fldenv
addr16
jno
and
jnp
inc
push
lods
xorl
jecxz
subps
faddp
cmp
dec
pusha
mov
sahf
xchg
lods
push
outsl
mov
jae
ds
xchg
dec
lret
mov
pop
mov
shlb
mov
sub
pop
xor
shlb
lea
roll
jmp
dec
jge
ds
adc
jno
pop
aam
lds
xor
cmp
pop
xor
push
popa
xor
rclb
jp
or
cmc
cmpb
dec
jnp
inc
cmp
hlt
rcrl
fisttpll
mov
in
mov
xor
mov
jne
shlb
bound
or
jno
sbb
xchg
pop
stos
mov
inc
mov
insl
call
inc
adc
not
repz
xchg
outsb
jmp
xlat
pop
and
dec
cmp
mov
repz
shlb
mov
int3
jbe
nop
pop
and
xchg
mov
sub
imul
cmp
and
inc
lods
add
lcall
enter
and
pop
mov
xchg
jl
xor
dec
sbb
or
mov
mov
pop
aaa
popa
test
jae
iret
mov
add
dec
mov
dec
insb
push
in
data16
cmpsl
jle
lock
pop
sbb
adc
cltd
mov
lret
out
sub
sarl
or
push
or
das
or
add
setle
jbe
fsts
cli
cmp
jbe
jbe
push
jle
rcrb
sbb
ss
cmp
test
xchg
aas
mov
lea
cmp
adcl
ret
jg
inc
pop
scas
pop
sahf
cmp
xchg
ret
int3
xor
ficoms
popa
sub
insb
and
hlt
push
popa
lahf
adcb
jne
punpckldq
adc
and
xbegin
xchg
ljmp
inc
xchg
fidivl
cs
arpl
adc
add
lret
test
pop
test
push
cld
pop
xchg
or
mov
cmp
pop
cmpsb
inc
xchg
xchg
hlt
add
mov
adc
xor
and
cmc
push
mov
gs
mov
pop
das
dec
sbb
arpl
pop
stc
bt
xchg
out
mov
cmp
xchg
aas
adc
mov
cmp
jecxz
mov
push
xchg
push
or
pop
add
pop
sets
mov
push
sbb
jmp
outsl
pop
dec
dec
pop
popfw
sahf
pop
sub
in
jmp
pop
scas
aad
mov
sbb
add
sbb
xor
mov
xchg
sbb
push
bound
jg
push
mov
sti
mov
jb
push
daa
gs
lret
xchg
xchg
leave
mov
add
in
fimuls
imul
repz
dec
push
sbb
insb
adc
cli
ljmp
out
aam
ljmp
icebp
xchg
or
xchg
push
out
outsl
ljmp
rcrl
imul
xchg
mov
lea
inc
adc
inc
xchg
mov
ret
xor
dec
daa
inc
pop
xor
insb
inc
sub
mov
popa
ret
jo
xor
outsl
cltd
or
sbb
cmp
mov
jmp
rolb
pop
mov
ja
popf
xchg
inc
fiaddl
sbb
clc
add
outsb
xchg
les
mov
test
cs
movsb
inc
sub
inc
xor
xchg
push
clc
fcoml
mov
xor
test
icebp
push
cmpsb
test
mov
cmp
push
pop
stos
fidivs
dec
es
bound
jae
pop
inc
push
pop
sbb
in
pop
push
sbb
ret
dec
sbb
das
repz
mov
push
push
test
jecxz
scas
push
pop
pop
ss
popf
pop
dec
cmpsb
mov
dec
inc
xchg
out
push
add
cs
and
and
in
mov
jns
dec
jns
cmp
push
add
je
pop
loop
dec
cmp
xor
push
and
or
mulb
lret
inc
cwtl
scas
data16
pop
rolb
jne
ret
aaa
dec
mov
shl
xchg
mov
sahf
add
xchg
xchg
gs
xchg
push
xchg
jne
insb
adcb
outsb
leave
push
out
push
jae
jge
mov
adc
data16
testl
orb
and
fld
xchg
xlat
mov
filds
sahf
push
add
xchg
add
pop
fcomip
loop
fiaddl
cltd
int
dec
cs
and
inc
into
jo
inc
movsb
lret
or
js
stc
mov
sub
add
mov
les
stos
flds
hlt
pop
add
icebp
or
mov
movsl
mov
adc
lock
cmp
or
mov
xor
xlat
stos
ds
jno
in
mov
out
shlb
jnp
sbb
adc
fcomps
inc
mov
sub
mov
pop
pop
sarb
mov
lock
add
or
in
and
push
sarb
fidivs
stc
lahf
mov
adc
je
mov
stc
cld
jae
je
scas
sub
jae
sarb
cltd
clc
cmp
test
int3
push
inc
dec
pop
fwait
mov
mov
xor
mov
inc
mov
dec
lds
stos
daa
or
imulb
hlt
shll
mov
cmp
and
in
lret
cmp
fsubl
dec
mov
mov
add
fscale
inc
iret
xchg
jp
gs
jne
scas
aas
and
fldl
test
icebp
adc
int
mov
outsb
push
or
incb
das
js
lock
aaa
enter
cltd
mov
push
add
jnp
adc
in
cs
sbb
arpl
stos
das
lcall
mov
push
xchg
dec
hlt
push
pushf
cmp
out
push
push
in
xor
aas
cmp
cmpsb
push
push
loope
and
or
mov
test
and
mull
fbld
mov
leave
lock
into
repnz
jno
dec
aad
mov
adc
mov
das
mov
sbb
adc
popa
mov
mov
testb
rcl
aas
notb
jns
or
dec
inc
inc
jge
popa
pop
dec
js
mov
sahf
and
jmp
sub
std
jb
xor
dec
jns
cmpsb
xor
test
xchg
pop
roll
popf
sub
mov
mov
ja
add
mov
or
cwtl
mov
mov
push
pop
inc
mov
cwtl
xor
pop
stc
mov
jb
push
jb
ds
pop
loope
xor
popa
mov
sbbl
outsl
push
je
xchg
in
lods
iret
frstor
adc
cmpsl
fisttps
inc
push
out
ja
pusha
sub
test
dec
rclb
or
mov
stos
xor
lea
fwait
adc
dec
call
mov
les
push
adc
or
add
cmp
or
pushf
jnp
mov
cmpsl
push
jmp
xorb
cmp
in
test
gs
stos
push
and
sbb
adc
jb
mov
roll
jmp
scas
stos
pushf
cmp
cmp
clc
sub
sahf
mov
xor
sub
sbb
outsb
ret
push
dec
test
push
leave
xor
push
loop
sbb
les
sub
insl
loope
aas
fs
test
cmc
jns
aaa
adc
or
call
mov
leave
dec
mov
ret
mov
dec
push
pusha
aam
fwait
out
fstps
push
pop
cmc
movsl
jbe
stos
clc
mov
push
mov
sbb
pop
push
aad
out
and
icebp
inc
mov
adc
or
mov
aas
cmc
das
mov
adc
lret
mov
inc
pop
or
test
dec
std
iret
mov
jecxz
cli
lods
aam
iret
mov
cmpsb
xor
jle
inc
outsb
cmp
int3
xchg
xchg
push
push
repnz
or
orb
test
push
xchg
mov
je
or
lea
xor
pop
push
xlat
out
std
rclb
xchg
jno
std
push
adc
jecxz
jecxz
cltd
jb
lret
lahf
adc
push
jb
in
push
cmp
int
jmp
cmp
gs
adc
inc
xlat
dec
test
bswap
xlat
or
jnp
shlb
shrb
xchg
fldz
xchg
cmp
sbb
xchg
or
fmul
sbb
dec
sub
iret
daa
and
lcall
pop
lods
dec
mov
add
loope
push
les
inc
ret
cmp
sub
adc
cmpsl
call
xchg
and
in
test
cmp
pop
andl
xor
repz
icebp
push
cmp
test
and
outsl
lcall
or
les
push
out
idivw
mov
sti
popa
push
or
cmpsb
jae
div
mov
je
sub
inc
mov
daa
pop
aam
lods
addb
arpl
jbe
sbb
fcmove
addr16
in
test
lods
in
mov
cmp
and
sbb
xrelease
sbb
push
es
xor
mov
mov
into
xchg
mov
in
in
leave
sub
gs
scas
lret
and
push
inc
cmp
add
mov
imulb
cmc
sub
sub
push
adc
add
mov
sarl
loop
test
cwtl
into
rcll
shld
test
rclb
push
jl
outsb
out
or
add
push
jmp
cmpsb
cmp
movsb
orl
js
xchg
mov
adc
adc
shl
mov
repz
les
jl
add
push
nop
mov
and
clc
or
fnstenv
arpl
xchg
sub
or
inc
repnz
stos
mov
lretw
bound
jmp
jns
mov
push
xor
icebp
dec
fs
repnz
push
insl
insb
ljmp
ja
cs
loope
lret
add
popa
in
je
popf
inc
daa
les
cli
int3
xlat
mov
in
pop
std
in
mov
cli
nop
dec
add
in
jno
imul
mov
pop
sbbb
push
lods
les
cmc
movsb
addr16
jle
dec
fiaddl
mov
push
pop
inc
xorb
jb
sub
mov
add
inc
aad
shlb
cmp
in
push
mov
mov
jne
dec
dec
push
cld
or
loop
add
aad
mov
pushf
add
xor
push
xchg
add
mov
ds
adc
sbb
lds
es
dec
push
popf
xor
dec
ret
sbb
pop
jne
lods
xchg
xlat
out
mov
sbbb
or
loopne
dec
fsubl
out
or
ret
push
ljmp
inc
jge
lods
shll
mov
mov
sbb
mov
sub
pop
sahf
pop
push
cmp
in
shlb
aad
mov
lods
or
inc
pop
int3
ds
dec
fiadds
adc
rclb
fists
pop
and
daa
and
adc
push
inc
cmpsb
push
ret
xchg
cwtl
or
lahf
mov
cmp
or
jmp
stc
out
push
sub
mov
sbb
cmp
sub
lret
ret
andl
mov
ret
pop
sbb
mov
pop
fs
adc
jns
push
lcall
test
or
pop
les
push
xchg
sbb
push
leave
sub
push
xchg
insb
mov
sub
xchg
ljmp
fistpl
xor
add
ror
sub
fistpll
mov
daa
xchg
repnz
push
dec
jo
dec
outsb
out
movsb
push
loopne
dec
jmp
and
pop
insl
inc
fstps
sub
fs
mov
fcoml
test
lea
stos
js
sbb
lock
jmp
cs
mov
or
testl
lock
mov
add
jnp
stc
xor
aam
dec
testl
repnz
jns
inc
adc
inc
mov
clc
outsb
mov
xchg
inc
dec
mov
xor
and
inc
jne
push
xlat
test
test
cmp
or
mov
lret
or
adc
stos
mov
pop
stc
xchg
sbb
cmp
cmp
mov
xchg
pop
or
arpl
std
sahf
ja
mov
or
xchg
jp
push
mov
push
cmp
dec
mov
dec
fnsave
sti
pushf
dec
dec
insb
xor
pop
xor
pop
and
pushf
ljmp
push
pushf
sbb
adc
sarb
adc
jp
out
in
or
push
fwait
mov
jl
mov
pusha
adc
and
or
or
insl
cmp
int
scas
fisubrs
push
sbb
stos
lods
pop
cli
sbb
cmpsl
push
fldt
movsl
mov
lahf
repz
insb
xor
aad
and
or
and
mov
and
fsubrs
pusha
push
sbb
jo
ja
call
hlt
hlt
mov
and
dec
not
pop
lea
adc
fwait
xchg
sbb
rcl
pushf
popf
cwtl
mov
in
loopne
lds
in
xor
gs
fs
aam
adc
mov
sarl
shll
movsl
dec
rorb
pop
fwait
mov
mov
popf
add
inc
mov
xor
and
loop
aam
adc
popf
sub
into
lods
dec
aad
push
pop
and
mov
or
jae
inc
and
lods
call
pop
jb
shl
or
or
scas
test
push
push
or
jb
jp
inc
xchg
mov
and
mov
xchg
pop
repz
mov
imul
fstl
int3
push
imul
cli
test
mov
out
loope
jp
cwtl
fisubs
lds
xor
cmp
stc
mov
fs
std
mov
dec
xor
xchg
jbe
cwtl
jg
ficoml
push
push
lods
mov
pushw
outsb
adc
inc
mov
aas
repnz
lcall
lret
cmp
jae
popa
xchg
scas
bnd
hlt
and
sbb
jno
mov
in
jecxz
inc
adc
lret
les
fsts
pop
push
call
leave
call
lcall
out
sub
sub
shlb
sub
int3
enter
cmp
xchg
testl
inc
inc
ss
lahf
adc
xchg
enter
pusha
or
and
int3
aam
idiv
jne
adc
test
sbbl
in
es
inc
and
frstpm(287
cmpsb
scas
in
jb
and
inc
push
pop
mov
fwait
mov
push
movsl
lcall
loop
sahf
sar
adc
xchg
mov
jmp
mov
push
push
dec
scas
aas
adcb
lcall
push
lds
lods
inc
arpl
fistpll
insl
mov
inc
lahf
jbe
xlat
sbbl
push
repnz
leave
aaa
mov
and
adc
xchg
bound
jmp
dec
mov
iret
arpl
ret
jno
add
xlat
in
dec
loopne
repnz
inc
sub
movsb
mov
mov
adc
sub
insb
jl
into
or
ret
xor
shlb
test
idivb
pop
pop
dec
inc
xor
cmpsb
mov
mov
mov
inc
aad
stos
adc
repz
push
add
mov
lcall
fincstp
mov
aam
gs
movsl
movsb
pop
pop
mov
leave
sub
imul
sub
aaa
in
add
rorl
xor
addb
loopne
addb
dec
repz
cmp
add
push
test
xor
lret
jbe
jb,pt
ss
or
or
inc
cmp
cmpsl
jbe
sub
lahf
push
addr16
push
pusha
jge
test
inc
dec
lods
pushf
hlt
add
mov
int3
loope
sbbb
fsubr
sbbl
scas
xor
int3
xchg
cmp
xor
bound
lock
dec
mov
cmp
or
jl
jo
scas
or
add
fldlg2
cld
cli
imul
xchg
jo
pop
push
nop
dec
or
mov
insl
shrb
test
clc
lods
bound
push
and
aaa
or
sub
pop
stos
testb
sub
je
and
cmp
pushf
adc
xchg
sahf
push
or
gs
arpl
mov
sub
lods
in
sti
jne
mov
dec
push
popf
insb
les
in
into
xor
cmp
sub
add
into
dec
sar
push
sbb
mov
bnd
sbb
lock
loop
mov
sbb
jns
pop
int
dec
sbb
lock
in
sbbb
xchg
inc
sub
ja
andl
fistl
fldt
push
out
jmp
sub
mov
test
or
addr16
daa
cmp
lretw
lcall
out
inc
mov
mov
loopw
adcb
adc
das
shrl
xchg
test
mov
mov
rorl
push
dec
jecxz
lds
adc
inc
inc
nop
xlat
sahf
jbe
mov
lret
xorb
idivb
or
lds
push
mov
inc
inc
dec
loopne
push
std
or
xor
adc
dec
push
arpl
out
mov
test
adc
adc
mov
incb
add
pop
ds
popa
cmc
in
pop
clc
cmp
adc
test
fld
nop
incl
adc
ljmp
inc
iret
leave
popf
mov
sub
xchg
mov
xchg
jne
and
je
sbb
arpl
xchg
pop
add
lahf
cli
mov
jge
sbb
mov
call
mov
mov
jmp
mov
jno
jb
inc
dec
or
pop
daa
cmc
xor
add
mov
push
frstor
push
mov
js
pop
outsb
mov
mov
das
out
into
clc
movsb
xor
jge
mov
or
xchg
pop
or
fsubrs
outsl
adc
cmpl
test
movlps
loop
mov
or
repz
int3
dec
inc
dec
outsb
add
push
fs
mov
out
mov
loope
mov
or
test
push
test
sbb
pop
in
jmp
jge
add
cwtl
cwtl
dec
adc
mov
mov
lahf
and
imul
jae
test
icebp
push
shl
mov
mov
clc
ljmp
xchg
das
mull
cs
popf
dec
xchg
sbb
cli
scas
inc
movlps
out
pop
nop
ja
stos
fwait
and
mov
push
and
push
push
mov
mov
pop
pop
lahf
int3
popa
jns
jecxz
stos
movsb
dec
push
fisubrl
jno
out
pop
sub
rsqrtps
das
adc
stos
cmp
sub
mov
dec
inc
push
nop
pop
cmc
inc
nop
out
popa
in
repnz
pop
icebp
push
and
aam
push
in
sbbl
test
inc
aad
fldz
movsb
sbb
push
jb
pop
outsb
jg
jo
lret
jle
ja
gs
loopne
mov
and
jb
push
dec
cli
aam
jle
fidivrl
out
fsubs
pop
orl
xchg
mov
aad
sub
adc
js
int3
and
add
test
ret
push
inc
shl
or
jle
and
xor
adcb
add
iret
dec
and
mov
pushf
lahf
mov
negl
push
push
clc
arpl
pop
shlb
adc
xor
test
shll
fcomps
in
sub
xchg
cmpsb
nop
mov
out
test
or
imul
jg
rorb
ljmp
repnz
xchg
jg
pop
sbb
or
js
jo
dec
fsub
mov
mov
mov
mov
pusha
cmp
rcrb
pop
push
dec
pop
sbb
pop
pop
add
pop
and
pop
sub
cmp
pop
add
inc
cmp
cmpsl
sub
pop
lret
and
sub
out
jle
adc
popa
mov
scas
mov
out
scas
mov
mov
dec
test
mov
and
mov
ret
clc
add
cld
scas
xchg
push
or
fldl
inc
inc
scas
push
test
ret
fisttps
and
push
push
xor
adc
xor
ss
inc
repz
xor
add
in
xchg
pop
pop
lcall
cmp
fists
pop
jae
and
cs
fisubrs
jmp
add
and
xchg
dec
mov
outsl
lcall
idivb
push
and
jmp
fcmovnu
sbb
pop
jns
mov
push
inc
popa
sub
and
xchg
pop
or
ds
mov
in
mov
ljmp
xchg
cmpsl
lcall
push
push
test
loopne
push
add
sub
mov
inc
enter
mov
pop
divb
jns
xchg
jle
shlb
popf
push
pop
cmpl
aad
mov
cmpsl
mov
add
sbb
sbb
loope
lret
add
inc
adc
inc
fisttpl
divl
or
cltd
sbb
scas
mov
mov
pop
dec
pop
mov
adc
mov
repz
out
imul
pop
jb
push
outsb
cmp
push
js
ret
and
xchg
insl
imul
or
mov
push
in
xor
and
add
push
inc
inc
mul
pusha
push
loopne
andb
or
popa
add
push
iret
dec
inc
jg
xchg
pop
test
scas
out
mov
jecxz
xor
rcrb
daa
enter
ljmp
out
scas
ss
push
insl
pop
pop
pop
ficompl
imul
dec
lcall
mulb
push
lret
xor
mov
push
loopne
jmp
or
push
adc
in
dec
add
jae
sbb
arpl
dec
xor
movlps
rclb
cmp
inc
test
adc
into
sub
xchg
xlat
out
sub
xor
or
lods
cmp
cmp
sub
or
push
inc
and
stc
mov
add
xor
xor
mov
ror
pop
in
inc
shr
mov
int
das
xor
inc
mov
loope
and
jmp
dec
popw
test
sarb
push
inc
outsb
scas
jge
mov
jno
daa
ds
addr16
cmp
mov
push
dec
sbb
mov
fildl
aad
cmpsl
mov
jns
mov
cmpsb
gs
xlat
dec
movsl
addr16
stos
xchg
adc
xchg
and
icebp
stc
aam
mov
into
mov
mov
mov
stc
pop
imul
fsubl
das
xor
dec
mov
insl
xchg
aad
imul
mov
jbe
repz
rclb
lcall
ljmp
and
xchg
mov
xchg
adc
mov
test
inc
jecxz
mov
mov
xor
mov
lcall
jmp
rclb
loopne
push
pushf
lods
sahf
or
cwtl
divb
mov
add
mov
and
movb
fidivl
fwait
repnz
jge
jp
cmp
and
clc
jp
pop
add
push
cwtl
push
cld
cwtl
adc
inc
push
das
inc
xchg
inc
mov
cltd
xor
and
int3
int
pop
pop
ret
jmp
xchg
int3
or
jb
dec
xchg
sbb
int
sbb
xchg
jl
dec
jmp
jl
rorl
ficomps
add
add
stc
jg
jbe
js
call
mov
adc
jmp
inc
lods
sbb
xchg
clc
mov
add
cmpsb
data16
mov
aaa
ljmp
mov
xlat
lea
ds
xchg
das
push
adc
cmp
pushf
cwtl
aad
xor
pop
xor
cmp
unpckhps
add
inc
dec
jae
add
dec
clc
xchg
pop
movsb
pop
adc
les
adc
gs
addr16
or
clc
in
mov
clc
outsb
fsubrs
xchg
test
push
test
adcb
aas
les
or
xchg
mov
ss
inc
push
dec
cmc
or
lret
test
adc
and
stos
xor
jnp
xchg
mov
xchg
mov
insl
inc
push
movsb
adc
movsl
ljmp
adc
enter
jnp
mov
pop
test
int
lcall
fdivrs
mov
adc
cli
sub
pop
jl
and
sub
ja
aad
addl
adc
and
inc
xchg
mov
es
outsl
stos
mov
mov
mov
mov
inc
je
adc
inc
inc
sub
lods
push
adc
icebp
pushf
lcall
test
lret
mov
test
sbb
sbb
inc
movsl
fimull
pusha
fnsave
mov
add
into
lret
mov
clc
lahf
sbb
mov
sub
push
mov
icebp
mov
push
xchg
xor
dec
popa
js
mov
jl
or
jns
sbb
fildll
ror
jmp
sub
add
mov
test
ljmp
loop
push
decb
pop
push
sub
scas
in
adc
std
lret
or
jecxz
or
mov
cmp
pop
shll
in
out
das
dec
decb
pop
push
test
mov
push
push
push
cmc
dec
xchg
push
and
leave
negl
sbb
roll
xor
mov
sub
imul
mov
push
test
fldenv
pop
andb
xor
das
inc
inc
xchg
xchg
sti
pop
insb
in
mov
aad
add
xchg
insb
ret
and
inc
cmp
or
pop
hlt
loop
jbe
xchg
xor
push
xchg
add
adc
nop
shll
or
movsl
push
adc
cmp
adc
scas
or
adc
mov
add
and
fimuls
jnp
jne
mov
push
loop
mov
xor
or
shrl
notb
sti
add
jb
sbb
jp
mov
sahf
bndldx
incl
fcompl
insb
pop
inc
push
cmpsb
aad
sbb
push
xor
pusha
xchg
xchg
inc
arpl
add
ljmp
mov
jmp
cwtl
nop
dec
sbb
push
push
pop
dec
add
sar
mov
inc
and
jo
push
push
test
inc
dec
lahf
mov
stc
in
xchg
dec
adc
popf
adc
inc
rep
add
hlt
cltd
stos
xchg
sbb
jle
xor
mov
test
dec
mov
dec
cltd
jge
leave
xchg
sub
mov
cmp
ds
sbb
addb
in
cmpsl
sub
mov
mov
mov
ds
pop
mov
in
mov
or
jl
cmp
cmc
aad
int3
stc
mov
jle
fdivr
xchg
add
xor
shll
ss
sbb
loopne
aad
mov
adc
adc
and
orl
pop
or
mov
add
push
scas
gs
adc
cmpsb
jl
bound
xor
movb
sub
ficomps
adc
cmp
imul
adc
ficoml
jp
jns
clc
fcmovu
lds
cmp
das
fdivr
andl
xor
ret
addr16
sbb
mov
sbb
sbb
jnp
cli
dec
imul
mov
jo
push
dec
add
xchg
mov
jmp
hlt
repz
xorl
test
lcall
mov
push
lds
pop
ss
dec
pushl
xchg
stos
mov
repz
mov
imul
shl
outsl
pop
and
jl
int
lods
mov
stos
dec
cmp
mov
fnstsw
fcomps
ret
arpl
sbb
push
or
mov
lods
fbstp
xchg
adc
sbb
repnz
scas
pop
push
and
sarl
jg
sbb
push
sbb
addb
in
repnz
pop
mov
pop
sbb
loopne
dec
sub
frstor
test
loop
incl
jge
fdivrs
mov
ds
pop
jg
daa
imul
cmpsl
cwtl
cmp
jb
insb
in
sti
ficompl
and
jecxz
in
adcl
outsl
cmp
sbb
jecxz
mov
sbb
sahf
fdivs
dec
xchg
xchg
js
xor
mov
test
cmp
dec
lock
mov
adc
test
cmp
xchg
adc
and
adc
xor
dec
repz
ja
popl
xchg
cmp
iret
int3
repnz
push
mov
jno
rol
cmp
jmp
sti
out
lock
mov
imul
test
sbb
push
imul
pop
jecxz
movd
push
mov
or
or
pop
sub
arpl
ret
sbb
bound
mov
pushf
test
cmp
inc
pop
cmp
jmp
pushf
stos
cmp
cmpsb
xor
adc
std
push
cmp
mov
fnstenv
pop
mov
out
mov
sub
popf
inc
mov
xchg
out
movsb
sub
xchg
mov
divl
mov
cmp
movsl
stos
fdivrl
adc
test
pop
cltd
cmc
int3
inc
sbb
lods
div
push
lods
out
fidivrl
adc
scas
stos
or
jb
push
insl
add
lret
fildl
push
jle
cli
out
jecxz
cmp
or
and
lret
or
push
lret
pop
lods
jne
push
mov
push
shr
jno
pop
shlb
mov
push
pop
push
lahf
clc
jb
repz
mov
inc
cmp
dec
adc
sub
push
jge
ja
xchg
adc
push
add
insb
in
jmp
xchg
je
xchg
or
std
pop
rcll
jle
mov
sti
sub
mov
mov
loope
aas
and
jns
inc
push
cmp
mov
leave
fadd
pop
fsin
xchg
mov
adc
mov
insl
cmp
mov
push
xchg
xchg
scas
pop
mov
or
call
mov
mov
xor
pushf
dec
aas
adc
ret
test
mov
xchg
addr16
imul
push
adcb
xchg
leave
cvttps2pi
inc
and
sbb
fcomi
shrl
ficompl
insl
leave
cmp
lock
adc
cld
push
movsl
push
push
pop
cld
jae
dec
movsb
cmp
aaa
xchg
fcoml
fstl
sub
lret
jecxz
repnz
mov
mov
mov
icebp
lods
inc
push
jno
outsb
int3
test
and
into
insb
femms
lods
xchg
mov
pop
cmp
push
dec
jp
push
inc
dec
inc
insl
cmp
hlt
pop
jge
pop
mov
mov
dec
sub
sysexit
call
lahf
push
sbbb
data16
repz
lods
std
lods
push
test
mov
movsb
rclb
mov
iret
retw
stos
insb
xlat
xor
xchg
and
nop
lret
mov
jne
or
jnp
jb
fdiv
ret
xlat
mov
mov
sbb
je
dec
mov
add
movsb
cld
xchg
sbb
aaa
xor
int3
sub
leave
aas
xor
leave
iret
enter
push
and
stc
ficomps
pop
add
movb
or
jle
repz
test
cmp
sub
aad
setge
mov
mov
cmp
rclb
sbb
mov
mov
push
jmp
mov
imul
xchg
push
das
notl
cltd
mov
and
sbb
scas
dec
clc
push
cmc
xor
test
sahf
in
je
jle
int
mov
call
sbb
and
stc
sarb
sub
loope
mov
jge
sbb
aad
mov
out
sbb
jns,pt
lret
into
movsl
fcompl
pop
movsb
call
cmp
cmp
scas
mov
jne
xchg
inc
sub
jo
push
push
add
cli
jecxz
gs
dec
jecxz
sbb
outsl
mov
mov
jns
js
jl
repz
sbb
mov
fcompl
mov
sub
clc
mov
pop
adc
insb
xorb
insl
sub
push
addr16
mov
adc
sbb
cmp
call
test
pop
sub
cmpsl
jle
push
jp
cmp
lret
push
enter
add
fldl
adc
arpl
and
outsl
mov
jnp
jp
in
fisubrl
popf
or
jo
insl
xor
ficompl
pop
pop
notb
adc
or
xor
xchg
pusha
rolb
andl
lds
mov
xchg
add
out
add
scas
sti
rclb
mov
gs
mov
sub
jnp
or
div
mov
mov
jp
fcmovne
push
in
and
and
push
test
and
nop
nop
std
or
jbe
jno
sarl
push
aas
ja
mov
mov
int3
popf
mov
add
sbbb
leave
in
mov
test
lret
popa
andl
or
ds
pusha
enterw
arpl
das
stos
xchg
in
fnstsw
mov
sub
imul
stos
adc
aas
push
incb
lock
push
call
add
jns
cmc
lock
cmpsl
dec
xor
std
int
int
jecxz
out
mov
out
push
cltd
inc
jbe
inc
fwait
clc
cmpsl
pop
mov
stos
xchg
movsl
mov
addr16
mov
mov
and
jmp
adc
outsl
or
push
jmp
ret
insb
inc
dec
sub
nop
sti
mov
addr16
push
and
xchg
cld
in
ss
jbe
add
into
mov
dec
negl
mov
mov
add
pop
loope
in
jmp
cmp
add
dec
mov
cli
sbb
push
mov
push
xchg
jo
push
jb
in
imul
mov
aas
push
jno
inc
imul
shlb
rcrb
xor
push
fsubl
cmp
outsl
pop
jae
mov
mov
je
lcall
sahf
pop
push
push
iret
mov
lret
insb
mov
push
mov
cmp
std
jge
and
cwtl
jnp
loopne
mov
mov
lcall
ljmp
and
mov
mull
add
cmpsl
pop
add
lds
fsubrl
rcr
lea
cmp
int
mul
push
jge
mov
push
mov
dec
mov
imul
or
int3
push
add
sub
hlt
fsubr
pusha
sarb
lock
or
jg
jo
popa
flds
pushf
sub
out
push
fiaddl
jnp
iret
inc
sahf
ds
sub
lret
les
fistl
imul
cmp
dec
mov
fwait
andl
aam
dec
xchg
mov
fdivs
imul
adc
idiv
sarl
pop
and
stos
pushf
scas
mov
cmc
ret
rolb
bound
imul
pop
xchg
adc
in
and
iret
adc
pop
sbb
ss
xor
test
fs
push
idiv
lods
ljmp
xchg
aas
shrl
lock
scas
push
shrb
ret
xor
mov
mov
or
jbe
test
push
dec
pop
xchg
mov
ret
jmp
std
fnstsw
mov
xor
loopne
xchg
inc
or
aaa
inc
push
arpl
fnstcw
test
mov
popf
lea
aas
pop
aam
popa
enter
negl
xor
scas
add
int3
inc
cmpsb
adc
mov
xlat
or
and
pop
add
or
int
in
xorl
lock
cmp
mov
lret
push
push
repz
mov
add
das
je
xor
push
lret
sbbb
or
mov
xchg
add
sub
insl
fiadds
dec
sub
call
outsl
nop
inc
push
shl
push
lea
icebp
jne
dec
inc
and
lock
lea
add
dec
jecxz
xchg
imul
xor
ljmp
das
mov
mov
sbb
adc
mov
outsb
jmp
xor
daa
pop
outsb
jns
repnz
out
mov
inc
sub
aad
not
cmp
int
fyl2xp1
jae
mov
pop
mov
iret
dec
sbb
xchg
or
in
add
pop
jno
repz
adc
or
jmp
dec
mov
jne
testl
mov
nop
lods
leave
mov
call
sbb
in
push
aad
out
sub
jb
arpl
aas
jb
jnp
mov
arpl
add
setle
cmpsb
arpl
or
cs
loopne
fwait
jb
clc
icebp
inc
scas
sbb
xchg
mov
stc
xchg
hlt
int
frndint
mov
out
cwtl
mov
or
dec
mov
add
clc
sarl
lea
stos
ss
stc
adc
dec
pop
inc
adc
aas
cmp
clc
mov
dec
lret
and
mov
jge
mov
mov
dec
and
and
and
test
das
dec
mov
jl
nop
hlt
pushf
scas
aam
gs
mov
mov
sti
pop
inc
mov
loop
inc
jbe
pop
mov
push
pop
ja,pn
fldcw
ss
sub
add
add
mov
insb
push
arpl
or
adc
loope
xchg
mov
ret
in
js
dec
fs
pushf
xor
adc
ret
popa
in
jbe
mov
or
push
loop,pt
shll
sub
aaa
lret
jno
mov
fnstenv
mov
fwait
lahf
je
mov
sub
cmc
cmpsl
adc
push
mov
cmp
fstl
jne
dec
sub
mov
mov
mov
loopne
into
sbb
aas
add
mov
mov
adc
daa
pop
fstpt
jl
jae
mov
aas
push
add
push
mov
fisttps
fs
push
mov
cmc
push
pop
fsubr
mov
test
pop
test
jo
idivl
jne
pushf
mov
pop
mov
cmp
popf
mov
fimuls
jno
pusha
pop
decb
call
mov
sbb
inc
fcoms
icebp
lea
loopne
pop
repz
mov
arpl
rcll
xchg
test
push
arpl
or
enter
sub
xor
cmpsb
push
lret
stc
ret
fildl
sub
jp
or
lahf
cltd
cmpsl
xchg
xchg
leave
lods
out
jae
jo
dec
insl
outsb
aam
int3
ljmp
cmp
push
cltd
cwtl
ficompl
and
sub
lahf
loope
pop
add
outsb
push
adc
test
nop
stos
mov
push
and
lahf
addb
outsb
mov
cli
xchg
daa
mov
jbe
cmp
sbb
std
leave
pushf
loope
popf
cld
dec
xor
daa
jae
imul
pop
inc
cmp
out
pop
cmp
in
add
mov
dec
pop
mov
push
cltd
pop
mov
add
cmp
sbb
jne
arpl
cmp
clc
das
outsb
dec
inc
mov
pushf
aad
sub
sub
mov
add
xchg
pop
mov
mov
mov
cs
inc
mov
xor
and
sbb
xchg
and
loopne
sub
stos
pop
mov
push
pop
das
push
pop
cltd
icebp
pushf
adc
mov
mov
push
int
aam
insb
rclb
in
jbe
fsubrl
mov
pop
dec
enter
mov
repnz
movsl
push
movsb
add
sub
icebp
cmpsb
mov
sbb
mov
lret
sbb
pushf
addb
outsl
sahf
dec
lfs
cmp
stc
and
push
cmpsl
xchg
push
adc
sbb
ja
and
mov
rcrb
in
xlat
xchg
ja
test
and
jl
sub
or
xchg
push
cld
lods
push
ficompl
fistpll
mov
cmpsl
jmp
inc
rcr
push
data16
pop
cmp
mov
sbb
mov
and
pop
mov
adc
and
xor
pop
lods
xor
mov
pop
.byte
and
inc
adcb
orl
push
mov
dec
and
pusha
jmp
mov
stc
sbb
in
out
and
dec
popa
mov
aam
movsb
push
sub
jne
xlat
lds
dec
xchg
mov
xor
enter
insl
sub
jl
mov
test
push
mov
add
insb
cmp
lret
dec
add
stos
repnz
or
push
xchg
lret
xchg
push
jl
popa
and
push
fsubrs
int
dec
ficoms
hlt
jae
scas
scas
pop
jae
mov
fidivrs
cmpsl
mov
sbb
push
icebp
out
pop
les
test
leave
mov
out
and
or
cltd
aas
in
push
lods
mov
arpl
out
push
stos
bound
popf
ja
cmp
out
cmp
fwait
sbb
push
ret
out
cltd
insl
sbb
in
mov
adc
jle
mov
adc
cmp
addr16
sub
lcall
mov
rol
pusha
xor
or
cld
pop
push
cmpsl
cmp
jbe
icebp
mov
jne
movsb
lods
stos
insb
ret
adc
cmp
int3
clc
mov
cli
xchg
sar
mov
mov
mov
int
or
mov
inc
push
insl
push
sarl
sub
cmp
cmp
dec
insb
push
add
loop
mov
mov
jmp
je
clc
jnp
out
push
adcl
jp
mov
int3
push
pop
pop
xchg
int3
xor
cwtl
popa
dec
addl
jl
aad
push
aad
in
lcall
cltd
mov
sub
xlat
movsb
dec
lea
mov
or
std
shl
push
xor
scas
das
mov
jae
cmp
lea
pop
insl
sarb
xorb
xor
mov
fstps
add
outsb
sub
fildll
inc
inc
loop
push
pop
dec
jmp
push
jbe
or
sbbb
mov
xchg
lcall
adc
jg
cmpsl
sub
sbb
mov
ja
in
aas
cmpsb
cmp
rcr
enter
push
mov
sub
aaa
cmp
into
xor
or
je
aas
scas
mov
push
into
sbb
test
lds
lods
sbb
sbb
mov
mov
fwait
lret
mov
mov
inc
ja
mov
das
xchg
push
fldenv
test
cmp
ss
pop
push
ss
repnz
push
jae
into
pop
cmp
adc
push
mov
dec
testl
fstpt
loop
lods
jmp
mov
or
xchg
jbe
mov
sar
push
pushf
repnz
and
and
rcll
mulb
mov
cwtl
push
dec
pop
mov
pop
cmp
imul
mov
in
inc
es
movsl
fld
sbb
insb
daa
sbb
xor
sub
pop
out
shrb
mov
sarl
inc
pop
lcall
shlb
out
cmp
adc
and
push
pushf
imul
loope
and
mov
mov
sub
mov
push
jl
in
push
jecxz
sub
test
aaa
jb
pop
pop
into
cmc
sbb
into
sub
ljmp
or
out
pop
pop
or
lods
adc
int
movsb
pop
push
xchg
xchg
inc
pushf
bound
xchg
outsb
dec
mov
mov
fnsave
and
outsl
arpl
aam
dec
inc
rorl
sub
xchg
dec
pusha
cmp
xchg
ret
je
std
jb
lock
add
mov
or
cmpsb
add
popa
cltd
pop
push
imul
add
mov
sub
pop
cmpsb
ljmp
fmull
stos
jo
pop
mov
adcl
xchg
add
lods
sub
into
fldenv
subb
test
cmp
push
je
dec
push
dec
enter
movsb
repnz
mov
call
out
in
dec
mov
nop
dec
dec
roll
ret
test
mov
push
addb
mov
push
cmp
add
cmp
int3
xor
mov
mov
inc
scas
xchg
mov
mov
pop
dec
add
int
mov
in
dec
mov
and
cmp
adc
lock
insl
insb
test
dec
cmc
xchg
lock
cld
daa
cli
inc
pusha
das
pop
sbb
mov
mov
cwtl
roll
in
daa
fcmovb
dec
adc
push
xor
adc
scas
sub
dec
pop
mov
xor
mov
sbb
and
imul
enter
and
sub
push
push
scas
pushf
cmp
test
sub
fsubrs
outsl
leave
lcall
cwtl
mov
xchg
xchg
mov
cmp
sbb
sub
pusha
out
mov
sti
pusha
dec
imul
negl
jnp
movsb
jl
jno
pop
and
sub
mov
xchg
jmp
aam
xor
mov
bound
packuswb
mov
adc
ds
cmc
lods
xor
dec
mov
pop
test
push
scas
test
adc
push
filds
push
pop
dec
add
push
outsl
xor
arpl
inc
mov
punpcklbw
xchg
or
idivl
bnd
cmpsb
jae
mov
les
iret
sbb
sbb
adc
in
cltd
loopne
mov
out
jae
test
popf
sub
scas
inc
aad
pop
push
mov
cmc
call
imul
push
or
dec
cld
xchg
mov
adc
inc
movsl
pop
cwtl
xchg
sub
inc
test
repnz
xlat
push
cmp
jb
cltd
push
pop
outsl
fnstcw
shrb
rcrb
mov
push
xor
jle
sbb
push
ja
cmp
xchg
cmp
jmp
jns
lcall
push
mov
push
mov
mov
sub
iret
dec
leave
sbb
dec
shll
sahf
push
cmp
inc
push
jge
sbb
iret
fs
fildl
pop
idiv
add
mov
pop
cmp
or
push
xor
dec
sti
add
inc
xchg
loop
insl
into
scas
jmp
add
sarl
mov
mov
push
mov
sahf
lods
sub
or
js
sarl
cmp
fstl
cmp
sub
data16
std
pop
repz
add
test
loopne
fs
sti
or
rol
dec
int
outsl
sti
xor
mov
or
sub
out
adc
xchg
hlt
or
into
mov
fsubp
out
or
inc
lods
and
test
mov
jle
cmc
ds
orb
dec
gs
popf
popa
mov
sar
es
push
sbb
test
ja
pop
incb
sbb
push
jnp
or
ljmp
jo
push
insb
push
mov
pop
in
in
call
push
outsl
idiv
and
dec
xchg
pop
jbe
aaa
mov
test
pop
cltd
test
in
ljmp
mov
stos
xlat
repnz
sti
sub
push
gs
pop
sbb
sbb
push
stc
sbb
xor
imul
fs
out
xor
ja
lods
loopne
das
ljmp
add
mov
shrb
cld
cmpsl
sarb
cs
loope
iret
aaa
imul
sbb
xchg
lcall
ljmp
jmp
sbb
jne
ljmp
mov
jne
in
mov
jns
push
add
test
dec
pop
mov
pushf
ljmp
pop
shll
inc
cwtl
test
ljmp
push
test
popf
push
sub
ds
xchg
mov
xchg
in
adc
or
sti
test
inc
jp
nop
hlt
push
pop
ds
xchg
das
and
popf
andb
mov
enter
out
adc
sbb
mov
incb
xor
test
xor
or
shl
cli
cltd
jl
inc
outsl
mov
xor
stc
clc
subb
cmpsl
adc
cmp
xchg
push
adc
xchg
clc
jmp
addb
mov
dec
pushl
sahf
in
daa
rolb
mov
pop
scas
ja
sub
pop
sahf
jno
int
sbb
sub
xchg
fsubl
testb
pusha
daa
sahf
mov
or
enter
outsl
insb
and
xchg
push
shlb
push
das
xchg
fmul
inc
test
inc
xor
testb
or
xor
inc
loop
xchg
std
nop
sub
cli
bound
popa
leave
add
fcmovu
scas
mov
iret
scas
add
xchg
sbb
xchg
daa
incl
adc
shlb
call
dec
pop
pop
nop
sarb
push
imul
test
sub
outsb
xor
mov
movsb
mov
xor
test
adc
lret
sub
in
push
adc
in
call
lds
fwait
sbbb
stos
mov
mov
mov
imul
fildl
das
repnz
fnsave
and
das
add
aam
fstpl
adc
imul
pop
push
mov
xor
stos
test
rclb
mov
fadd
mov
fstl
lahf
xorb
stc
jp
in
fcoml
dec
or
push
dec
repnz
and
addr16
repz
add
pop
pop
push
inc
mov
pushf
cmpsl
enter
movsb
push
xchg
mov
imul
ljmp
movsbl
sub
xor
movlps
aad
or
jmp
push
lods
imul
xchg
lcall
add
divl
lcall
dec
xchg
ret
mov
add
pop
lcall
ljmp
jg
ret
jo
pop
push
dec
cmp
pushf
idivl
lret
ljmp
pusha
cmp
and
psadbw
cmp
aam
inc
jo
dec
xchg
imul
cmp
stos
data16
inc
loop
or
mov
test
jecxz
imul
scas
pop
mov
ss
sub
push
mov
mov
cmc
data16
mov
lea
add
push
lods
shl
lock
jmp
add
inc
or
outsb
test
inc
sbb
mov
xchg
aas
imul
rcrb
push
xchg
jae
add
stc
in
mov
mov
jno
mov
jb
xchg
add
lcall
js
scas
or
and
and
mov
roll
xor
out
lret
cmpsl
add
sbb
pop
sbb
fisttpll
dec
lret
pop
sbb
mov
orb
lahf
std
cmp
jle
add
test
jnp
dec
xor
xchg
push
call
movsl
xorb
mov
xchg
shrb
pop
ret
adc
clc
pop
fldenv
int
sub
aad
push
sahf
fdivr
das
xor
or
shrb
mov
mov
push
adc
pop
int
or
int
cmp
add
xchg
loop
nop
insl
or
mov
adc
push
sbb
adcl
movq
sub
loope
pop
xchg
dec
inc
push
ljmp
stos
clc
loopne
xchg
pushf
pusha
cmp
mov
inc
mov
leave
push
and
and
mov
imul
rcll
lock
je
out
scas
adc
mov
fimuls
jl
xor
push
cmc
ja
cmpl
xor
xchg
andb
pop
lods
dec
pushf
cmp
daa
fists
mov
ficomps
add
int3
hlt
mov
decb
inc
sub
mov
in
dec
xchg
imul
jo
mov
mov
xchg
hlt
mov
mov
stos
or
pop
fisubrl
stos
xchg
jl
rcrb
jle
lret
mov
in
push
pop
jne
mov
daa
pushf
popf
xor
mov
sub
fmull
dec
mov
add
mov
xchg
cmp
leave
js
aam
lods
ss
cmc
in
addr16
mov
testl
repz
mov
cltd
not
aas
mov
mov
aad
adc
movsl
cmpsb
or
sub
cmp
cmp
testb
pop
leave
push
sbb
lods
mov
lods
jmp
mov
subl
mov
inc
test
mov
lret
jbe
subb
das
mov
inc
mov
mov
adc
std
jmp
jg
mov
jno
imul
shrb
pusha
into
sbb
mov
mov
es
jne
shrb
jmp
popf
or
push
sbbl
iret
sub
in
push
stc
mov
or
aas
cmp
pop
cmpsl
aam
lds
pop
shrl
out
jl
xchg
adc
add
or
cmp
and
repnz
loope
idiv
loope
sarl
dec
sub
jns
jmp
or
jae
cli
loope
xchg
pop
cli
xor
insb
ljmp
pop
fsubrs
push
loop
jl
push
add
xchg
lret
in
lret
jno
or
cmc
scas
sbb
pop
movsl
jmp
dec
mov
adc
scas
arpl
popa
movsl
sbb
mov
xlat
hlt
mov
jmp
or
or
push
in
sub
mov
ja
mov
mov
inc
nop
daa
cmp
imulb
xor
dec
sbb
pop
and
je
repz
fst
push
repnz
mov
jl
xor
fstl
jbe
cwtd
mov
add
divl
inc
push
cmpsl
jb
ftst
jle
popf
aaa
fwait
jp
add
aas
movsl
jl
or
pop
jp
push
pop
arpl
icebp
push
sub
push
iret
push
dec
movsl
fwait
add
ss
jnp
mov
jo
cmp
lods
adc
repnz
sbb
pop
jmp
ss
inc
loope
in
fst
inc
sub
cmpsl
sbb
fldenv
fistpll
lret
sub
cli
pushf
push
mov
push
icebp
insb
xchg
xchg
aas
adc
xchg
xchg
xchg
mov
mov
lock
les
mov
xchg
lret
xor
cmp
rol
xchg
sbb
.byte
sbb
sub
pushw
les
std
test
or
mov
pop
insb
xchg
cmp
push
imul
movups
inc
xor
movsb
cmp
inc
test
out
pop
pop
sub
adc
xchg
mov
int3
cwtl
add
push
mov
icebp
pusha
pop
aam
fucomp
cmp
mov
inc
jmp
mov
js
call
sbb
push
pop
in
lahf
rolb
outsb
mov
mov
or
pop
mov
sub
adc
lcall
xor
or
js
int3
mov
mov
hlt
stc
lret
add
int3
mov
lret
repnz
fcompl
scas
xchg
icebp
jno
test
gs
cld
test
mov
movsl
loopne
test
rorl
mov
lock
in
add
xchg
cmp
push
cmp
out
mov
in
xchg
dec
shll
adc
mov
and
dec
out
jl
push
sbb
lock
nop
xlat
test
xchg
lret
xchg
mov
loop
push
xchg
mov
mov
add
jb
xchg
out
popa
scas
sbb
stc
inc
xchg
daa
jecxz
mov
or
sub
bound
pushf
incb
mov
xchg
xchg
adc
popa
and
xchg
insb
pop
fstl
add
ret
xor
push
add
jno
outsb
xchg
inc
lret
sahf
xlat
rcr
fcompl
in
mov
mov
adc
mov
pop
rclb
mov
push
fsts
jbe
inc
mov
dec
fs
jno
mov
icebp
add
jle
mov
fnclex
cmp
jns
push
sub
das
xchg
inc
es
push
pop
sub
into
mov
cwtl
dec
loope
adc
dec
clc
adc
pop
xor
scas
cmpsb
jle
aaa
les
pop
jne
or
out
lods
inc
sbb
jne
repz
mov
pop
sbb
push
dec
mov
mov
je
sti
ficoml
call
cmp
xchg
inc
dec
jne
and
add
arpl
mov
adc
stos
mov
jne
cs
mov
cmp
cmp
ja
std
lock
imul
stos
ss
xchg
aad
in
jg
pop
mov
repnz
out
mov
jo
xchg
sub
mov
dec
cmp
int
add
pop
call
push
cmp
push
push
push
cwtl
jmp
push
arpl
lret
pop
sbb
in
in
sbb
je
pop
inc
lret
pusha
or
or
idivl
test
add
cmp
xchg
es
cmpsb
jo
not
mov
ret
daa
push
imul
pop
mov
inc
dec
jp
ret
in
cli
sahf
cld
xchg
or
pop
or
test
mov
sbb
fldcw
out
add
sarb
pop
sarl
mov
inc
sbb
add
push
mov
dec
imul
xchg
adc
insb
adc
stos
es
ret
scas
and
popa
and
dec
int
adc
rorl
sbb
mov
mov
in
or
mov
fsubs
aam
jmp
movsb
inc
inc
adc
jo
sahf
sbb
lahf
test
xor
and
mov
or
cmpsb
rcll
jle
pop
mov
inc
mov
lret
jnp
mov
jno
mov
mov
sub
xchg
out
fidivrs
stc
add
dec
and
sbb
push
faddl
or
mov
pusha
pop
xchg
in
xor
mov
sbb
xlat
mov
ficomps
movsl
mov
inc
leave
mov
stc
pop
orb
xor
xchg
cli
sbb
push
add
gs
push
movsb
cwtl
je
push
push
sti
lea
pop
add
push
sub
xor
shll
push
xor
andb
lods
js
mov
ret
pop
call
jecxz
insb
pop
inc
push
or
sbb
gs
and
mov
lock
adc
into
fstp
sbb
rcr
out
mov
pop
daa
popf
mov
xchg
fs
lods
outsl
ficoms
sub
push
push
call
arpl
aaa
call
jb
adc
push
pop
xor
daa
pop
xchg
cmpsb
cmpsb
and
nop
cmp
jmp
mov
outsl
dec
lea
sar
xchg
push
push
sbb
rorb
in
cld
sub
mov
adc
xor
pop
sub
jno
fmull
out
insl
outsb
xchg
cmp
push
andl
pop
pop
jb
mov
inc
mov
fwait
add
mov
pop
int
push
sub
stos
adc
ja
fidivs
jae
inc
int
xchg
aas
int3
adc
cmp
xchg
or
dec
jmp
adc
xchg
pop
cltd
shlb
mov
sub
sub
xchg
aam
in
sahf
lret
test
add
rorl
lods
mov
dec
mov
fdiv
les
inc
and
addb
sub
mov
mov
test
adc
fwait
push
lock
jge
mov
adc
iret
mov
in
sub
pop
mov
loope
jle
imul
push
aaa
loop
push
mov
adc
and
xor
shl
add
int3
popa
jecxz
xor
dec
push
sub
jae
fstl
mov
icebp
mov
jne
insl
adc
cld
js
inc
test
add
inc
idivl
push
out
sbb
and
xchg
lods
aaa
adc
sub
jecxz
cmc
add
pushf
adc
adc
push
test
bound
dec
sbb
imul
mov
ret
mov
jmp
shll
stos
cmpsb
and
lock
adc
push
mov
mov
stos
cwtl
int
jecxz
xchg
cmp
enter
shl
dec
testl
mov
stos
inc
xchg
jnp
shll
test
push
cli
imulb
jnp
mov
xor
ja
test
cwtl
sub
xchg
mov
xor
movsl
outsl
add
dec
popf
stc
inc
enter
push
xorl
inc
xor
aad
jns
out
jne
lret
sbb
lret
adc
test
cmp
sbb
mov
call
je
xchg
mov
mov
pushf
mov
sbb
jmp
jmp
mov
xor
mov
jae
dec
stc
aaa
sbb
sarb
rolb
out
mov
fdivs
pop
jecxz
data16
dec
sahf
imul
push
inc
fdivrs
mov
stos
inc
dec
cmp
movsl
inc
pusha
xchg
adc
push
arpl
xchg
xor
jl
xor
addr16
mov
sbbl
push
hlt
inc
cld
pop
mov
cmp
xchg
out
nop
push
iret
mov
pusha
inc
dec
mov
cmp
xchg
sbb
int
xchg
cmpsl
bound
fistps
loope
pop
stos
popf
in
adc
lret
push
int
in
js
inc
xchg
loopne
ss
out
mov
jge
testl
imul
outsl
insl
inc
add
jecxz
and
and
in
push
ss
.byte
cmpsb
add
add
add
add
and
add
js
add
add
or
add
add
test
add
rolb
addb
add
fadds
add
lock
addb
add
and
add
cmp
add
push
add
orb
add
push
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
loopne
add
add
add
lock
add
add
add
add
add
add
add
add
adc
add
add
add
and
add
add
add
xor
add
add
add
inc
add
add
add
add
add
push
add
add
add
add
add
pusha
add
add
add
add
add
jo
add
add
add
addb
add
add
add
add
nop
add
add
add
add
add
mov
fwait
add
test
add
xchg
pop
add
sub
add
xor
add
add
add
add
add
add
add
add
add
add
and
add
add
xor
add
test
add
int3
adc
add
add
and
add
test
add
jl
add
test
add
push
add
add
filds
add
add
add
add
adc
add
in
add
xor
add
and
add
add
add
arpl
mov
dec
es
jae
loop
xchg
mov
sbb
enter
add
mov
push
mov
dec
xchg
aaa
adc
mov
and
int
pushf
cmc
inc
mov
popf
or
jmp
add
data16
jo
ljmp
loopne
outsl
inc
enter
add
aas
test
lret
push
inc
cmpsl
pop
push
out
cmc
sub
lock
sbb
inc
xchg
xchg
es
xchg
mov
decb
sbb
divl
xor
pop
sbb
jmp
cmp
mov
not
jne
cmpb
loop
sarb
pop
cld
imul
cld
or
mov
int3
mov
mov
cmc
mov
ja
xchg
loope
sub
or
out
les
cmpsl
sahf
ficoml
lcall
mov
mov
xchg
pop
ret
pop
xor
push
les
lahf
test
out
loop
test
and
cmp
outsl
cmp
nop
test
cmpsb
sbb
or
pop
pop
aad
mov
and
jle
shrd
jl
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
je
xor
pushl
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
push
call
stc
ds
in
mov
cmc
pop
pop
call
sbb
cli
stos
or
push
and
fstps
fwait
pop
call
push
dec
dec
outsl
jl
pop
mov
add
add
adc
push
jmp
push
inc
sub
scas
dec
fsub
pop
jmp
popa
xchg
popf
adc
loopne
pop
aas
or
mov
call
ss
movsb
or
rcrb
sarb
iret
sub
jg
mov
add
sub
push
push
push
mov
pop
pop
popl
push
mov
pop
call
mov
int3
adc
jmp
jmp
into
out
cld
test
or
add
orl
push
call
mov
sbb
xlat
les
pop
pop
cmp
jne
push
pop
inc
mov
add
out
stos
adc
ret
cs
inc
enter
in
daa
out
push
add
das
add
pop
cmp
loopne
adc
and
add
out
outsb
jno
ret
jnp
adc
pop
das
scas
add
and
imul
out
aam
sbb
loope
or
lods
ljmp
xlat
fdiv
xchg
addr16
dec
or
push
add
pop
js
divl
mov
out
dec
insb
cmp
std
sbb
in
and
or
jo
or
mov
jle
icebp
add
push
aad
sbb
std
add
decb
adc
push
shlb
mov
jl
jl
bound
xchg
cmpsb
or
and
ret
jae
arpl
movsb
stos
adc
xchg
and
aaa
jnp,pt
inc
testb
jbe
mov
xor
add
popl
cltd
and
adc
movsb
shrb
mov
mov
xlat
and
sti
jb
arpl
jo
push
and
mov
mov
jecxz
mov
jecxz
movsb
outsb
sbb
add
enter
sub
movsb
jecxz
dec
push
pushf
xchg
js
jo
or
mov
int3
jb
adc
inc
pop
lahf
loopne
pop
aad
sub
decb
mov
jmp
rclb
mov
adc
inc
mov
adc
insl
inc
or
stos
jle
jne
xor
dec
mov
rcll
test
lods
lods
daa
in
stos
daa
in
cmpsb
jns
mov
lahf
leave
rclb
mov
icebp
sub
fwait
icebp
enter
sbb
out
add
and
dec
gs
sti
fidivrl
push
push
pop
outsb
cmp
loopne
enter
mov
hlt
push
push
ret
int
or
jp
loopne
sarl
cwtl
dec
push
jecxz
repz
push
sub
rclb
cmp
inc
dec
cmp
mov
int3
adcb
dec
jae
dec
js
push
add
cli
or
jae
popf
lret
xchg
or
fcompl
dec
cmp
jns
xor
adc
jb
dec
lret
shll
mov
imul
scas
stos
push
shl
int
xchg
dec
inc
out
jne
ljmp
mov
mov
jbe
sub
mov
jo
jae
faddl
dec
lock
dec
cmp
arpl
pop
test
mov
xor
cmc
xorl
lods
xor
sub
imul
cs
in
decl
mov
aad
push
cli
push
addr16
jecxz
mov
mov
lret
lahf
dec
sahf
out
cmp
ss
jecxz
jecxz,pn
into
mov
lret
repz
cs
test
cs
test
mov
das
int
sub
mov
sub
jo
sub
push
adc
mov
test
push
or
faddp
sbbl
xor
aas
js
aaa
cs
sub
pop
pop
sbb
imul
mov
in
sub
pop
stos
ljmp
pop
inc
sub
cs
cld
pop
cs
test
test
addl
sub
popa
pop
mov
cs
bound
pop
test
mov
pop
test
add
push
pop
ljmp
sub
test
cmp
lods
rcll
sub
ds
cs
mov
test
cs
push
ljmp
mov
cs
adc
fiadds
test
lock
push
mov
addr16
mov
andl
les
rcr
fstpl
jp
pop
test
inc
sbb
arpl
jecxz
mov
cs
push
mov
mov
orb
cs
test
das
orl
cs
test
out
push
push
lods
adc
sub
repz
adc
push
inc
ds
test
cs
ss
bound
hlt
pop
ret
pop
add
cld
and
lods
sub
pop
test
pop
test
cs
test
cltd
xorb
push
outsl
xchg
push
jg
or
in
addl
pop
or
cmp
push
sub
push
xchg
js
dec
push
lret
pop
or
cmp
push
push
jl
pop
test
and
mov
ficomps
js
push
or
icebp
shll
outsb
add
cmpb
lret
das
lret
pop
or
cmp
or
fisubrs
out
scas
pop
pop
inc
ret
xchg
test
cs
rcr
sub
jbe
das
lret
pop
or
cmp
shrl
test
pop
pushf
and
test
cs
rcr
sub
jbe
das
lret
pop
or
cmp
shrl
rcll
out
pop
js,pt
popa
test
and
and
mov
cs
jecxz
mov
icebp
shll
adc
cmpb
lret
add
sub
imul
pop
test
rolb
push
in
out
push
js,pt
popa
push
scas
push
mov
sub
imul
inc
orb
sub
xchg
cmpsl
sbb
adcb
ds
hlt
xor
xor
xor
and
cs
test
orl
clc
test
and
mov
cs
test
mov
fsubp
mov
push
xlat
push
sub
pop
push
jp
mov
ljmp
xchg
daa
cs
adc
jb
test
mov
sub
cs
push
pop
push
cmpsl
mov
inc
cs
test
out
pushf
rorb
xchg
orl
ret
das
ljmp
cmpsb
dec
fnstcw
out
cltd
sub
xor
dec
or
ret
cs
jmp
inc
insl
mov
xchg
add
xor
neg
mov
or
sub
fsubrs
lds
mov
or
in
pushf
ds
push
mov
sub
add
pop
test
cs
test
cs
test
cs
test
cs
test
cs
test
cs
test
cmp
sub
arpl
sub
pop
xchg
cs
test
cs
test
cs
test
cs
test
cs
test
cs
repz
pop
test
cs
test
cs
test
cs
test
fistpl
popa
mov
faddp
mov
es
dec
adc
xlat
push
jecxz
add
mov
sub
ret
dec
jns
pop
pop
out
ss
stos
jo
push
in
pop
insb
pop
mov
pop
push
fimull
sbb
or
pop
fistps
int
sub
or
cli
repnz
aad
mov
fstpt
inc
cwtl
dec
test
sub
cli
sub
lcall
je
dec
in
jo
cmp
push
mov
push
adc
fidivl
mov
cli
xor
js
add
dec
insl
pop
aas
es
test
ljmp
or
pop
pop
fcoms
mov
adc
fucom
insb
das
sub
into
mov
cwtl
pop
xchg
pop
mov
and
inc
sub
dec
push
jae
flds
and
sti
popa
sbb
fadd
pop
adc
xor
scas
adc
mov
jecxz
sub
inc
sbb
mov
jmp
mov
xchg
daa
xchg
add
or
inc
pop
pop
imul
inc
jno
sbb
int3
std
popl
scas
nop
movsl
and
movsb
sub
xor
test
arpl
mov
cltd
jne
sbb
mov
out
mov
sub
sub
fwait
mov
ret
std
inc
leave
mov
fs
arpl
mov
inc
xlat
fldenv
outsb
loopne
dec
lret
mov
xchg
push
mov
dec
add
xchg
out
cld
int
jl
addl
sbb
mov
push
or
jp
jnp
mov
xlat
pop
xchg
dec
aad
sbb
pop
or
adc
sbb
lret
popf
jnp
jle
rclb
xor
pop
jne
cs
sub
pop
inc
inc
ja
xchg
addr16
das
add
sbb
mov
lahf
jno
xchg
pop
pusha
sahf
mov
scas
push
or
cmp
xchg
sbb
aad
and
push
idivb
pop
out
int3
cmc
jmp
add
subb
add
test
aas
or
sub
pop
lods
ss
ja
ljmp
aad
pusha
xor
ss
xchg
mov
aas
and
fdivrl
addr16
push
pop
testl
lds
xchg
nop
lods
push
mov
or
pop
jns
push
idivl
pop
sbb
push
sbb
push
clc
scas
mov
stc
rol
pop
stos
aas
outsl
mov
pop
add
gs
xchg
add
add
inc
inc
leave
inc
test
mov
xchg
xor
add
xchg
add
add
or
add
sbb
add
sub
add
cmp
add
add
add
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
add
clc
fildl
add
add
inc
fldl
add
add
add
add
ret
add
add
lret
add
add
rcr
add
je
add
fcmovu
add
jg
add
loop
add
mov
add
ljmp
add
fldl
add
fldl
add
gs
xor
fs
insb
add
imul
insb
add
jbe
jo
xor
cs
insb
add
gs
insb
xor
cs
insb
add
xor
cs
insb
add
jbe
jb
cs
insb
add
jbe
jo
xor
fs
insb
add
je
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
fiadds
add
add
add
fiadds
add
add
add
fiadds
add
add
add
fiadds
add
add
add
add
add
add
push
fiadds
add
add
add
add
add
add
mov
add
add
add
mov
add
add
fiadds
add
add
add
add
je
imul
arpl
add
gs
je
inc
outsl
insl
jo
je
bound
inc
add
add
addr16
gs
popa
insb
jne
inc
js
add
add
gs
insb
inc
js
arpl
gs
add
add
dec
outsb
imul
add
add
je
imul
aas
pop
push
imul
jae
arpl
je
imul
and
push
jb
imul
fs
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
inc
inc
xor
jae
fs
inc
inc
inc
inc
pop
pop
dec
inc
pop
add
add
je
imul
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
add
add
xor
add
add
push
add
xor
add
add
add
add
xor
add
add
add
add
add
add
add
and
add
add
add
add
add
add
inc
inc
add
add
and
sub
add
add
xor
add
add
add
add
and
add
add
add
add
adc
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
and
add
add
andb
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incb
incb
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incb
int3
int
xor
xchg
lcall
test
jle
mov
push
std
std
std
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
sti
sti
sti
add
clc
clc
pop
out
out
fwait
lcall
into
into
into
xor
stc
stc
push
incl
incl
incl
incl
incl
incl
incl
incl
incl
incb
incb
incl
incl
incb
incb
div
testl
sub
std
daa
inc
je
and
push
aaa
and
popa
std
inc
push
outsb
shlb
cli
cli
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
repz
ret
ret
cmpb
inc
cmp
jmp
and
jmp
pop
and
push
push
push
mov
cmc
cmc
cmc
or
incl
incl
incl
incl
incl
incl
std
std
std
add
icebp
icebp
push
ljmp
push
out
out
out
adc
in
in
adc
jmp
adc
out
sbb
sub
adc
pop
push
das
call
xor
pop
cs
lcall
sub
decl
sbb
lcall
xor
ja
lea
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
cmc
cmc
cmc
or
mov
das
jmp
push
decl
inc
dec
jmp
push
call
dec
lcall
push
enter
push
out
out
out
adc
incl
incl
incl
incl
incl
fcmovnu
push
test
sub
xor
and
dec
je
xor
std
and
dec
icebp
and
stos
je,pt
incl
aam
sub
push
cmpsl
jmp
dec
lcall
cs
call
sbb
sbb
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
stc
stc
stc
push
aam
aam
test
jno
movsl
xchg
ja
incl
jbe
pushl
js
push
pushl
das
repz
js
int
int
cmc
cmc
cmc
or
std
std
add
incl
incl
incl
in
in
push
and
clc
adc
push
lcall
lcall
sub
pop
call
and
daa
lcall
inc
test
xor
mov
dec
mov
call
in
xor
mov
lcall
cmp
sub
and
push
sbb
incl
incl
incl
incl
incl
incl
incl
incl
incl
incb
loopne
loopne
movsl
movsl
movsl
pop
mov
outsl
iret
test
decl
outsl
ja
popf
jg
pushl
incl
cmp
or
push
decl
dec
mov
pushf
pushf
arpl
rcl
sub
in
in
adc
cld
cld
add
incl
incl
fcmovu
fisubl
sbb
pop
stos
jmp
pop
cmpsl
jmp
dec
xchg
jmp
inc
jl
push
and
jmp
das
dec
mull
inc
jle
xor
incl
enter
iret
ljmp
pop
test
lcall
push
and
sbb
pop
adc
stc
icebp
icebp
icebp
push
incl
incl
incl
incl
incl
incl
incl
incl
clc
clc
clc
pop
rcl
shrl
xchg
xchg
imul
jo
incb
outsl
jne
xchg
ljmp
call
test
dec
dec
dec
jmp
and
call
xchg
xchg
push
mov
out
div
testl
adc
push
jmp
push
lahf
cmp
int
sub
jmp
cmp
sbb
inc
jmp
sub
sub
inc
gs
xor
cmp
dec
incl
sub
push
es
addr16
jo
adc
sbb
cmp
pop
pushl
incl
incl
incl
incl
incl
incl
incl
incl
div
testl
xchg
xchg
xchg
insl
addl
leave
test
incl
jo
decl
popa
push
js
jne
push
push
push
call
or
push
stos
jle
jle
test
imul
xlat
sub
icebp
icebp
push
cmp
into
sbb
jmp
pushf
jmp
jp,pt
sub
dec
call
sub
push
xor
decl
call
daa
lcall
sub
xor
pushl
incl
xor
decl
and
call
sub
div
testl
incl
incl
incl
incl
incl
incl
incl
std
std
std
add
jmp
mov
mov
jne
test
incl
outsl
jne
mov
incl
push
pop
call
call
dec
cmp
xor
jne
jne
addl
nop
outsl
movsl
movsl
movsl
pop
rcl
shrb
inc
dec
pop
ret
and
dec
incl
cmp
pop
xor
xchg
sub
cwtl
inc
xor
test
jmp
pushl
cs
jle
das
decl
inc
ljmp
inc
lcall
and
pushl
imul
sti
sti
sti
add
incl
incl
incl
incl
incl
incl
incl
incl
stc
stc
stc
push
subl
jg
outsl
incl
inc
push
jmp
pop
call
jae
jnp
jo
addl
pushl
xor
incb
inc
shrb
nop
addb
jge
addl
jo
mov
sarl
push
xor
ret
mov
push
aas
pushl
xor
pushl
push
cmp
lret
push
cmp
lret
push
xor
incl
pop
or
xchg
mov
cmc
cmc
cmc
or
incl
incl
incl
incl
incl
incl
incl
incl
fstp
frstor
insb
push
pop
pushl
arpl
jnp
imul
bound
pop
aas
dec
ljmp
pop
call
jb
ljmp
pop
jmp
pusha
decl
dec
lcall
sbb
call
movups
pop
pop
pop
cmpsb
jl
jl
addb
jge
addl
addl
mov
lret
push
xor
inc
pop
aas
mov
inc
aaa
lcall
push
cmp
enter
int3
push
cmp
leave
push
jmp
sub
cmp
test
mov
inc
in
in
in
adc
incl
incl
incl
incl
incl
incl
incl
incl
mov
mov
dec
push
ljmp
pop
pushl
pushw
lcall
dec
jge
insl
call
jns
jnp
imul
inc
inc
xor
jmp
or
jmp
es
jno
addb
jge
addb
addb
mov
int
aaa
dec
pop
cmp
mov
inc
aaa
lcall
push
cmp
dec
push
cmp
les
lcall
adc
mov
xchg
je
popf
popf
fbld
incl
incl
incl
incl
incl
incl
incl
incl
jb
lds
dec
jmp
push
ljmp
pop
pushl
gs
jnp
imul
imul
jo
lcall
aas
push
jmp
pop
jmp
pushl
sub
sbb
push
or
xor
jbe
mov
xchg
outsb
mov
gs
mov
int
cmp
leave
pop
aas
inc
pop
inc
jmp
inc
aaa
jmp
push
aas
dec
push
aas
dec
push
cmp
mov
cmp
cmp
mov
dec
lret
xor
out
out
out
adc
std
std
add
incl
incl
incl
incl
incl
incl
incl
div
testb
cmp
notb
lcall
dec
jmp
push
pushl
pusha
pushl
ljmpw
popa
pushl
call
push
incl
outsb
ja
pop
push
pop
jmp
pop
and
pop
adc
sbb
sbb
imul
addl
sarl
xlat
xlat
sub
dec
cs
pop
cmp
lret
inc
pop
inc
decl
inc
cmp
stos
dec
ds
mov
push
aas
inc
push
cmp
mov
xor
call
cmp
jmp
jmp
div
testl
incl
incl
incl
incl
incl
incl
incl
incl
incl
fisubs
inc
sub
decl
cmp
push
cmp
pusha
inc
dec
ljmp
pop
pushl
pusha
ljmp
pushl
arpl
test
jmp
popa
outsb
pushl
imul
dec
push
jmp
sbb
or
or
push
push
push
stos
xchg
xchg
xchg
imul
lret
xor
lock
ljmp
dec
cs
pop
cmp
leave
pop
aas
mov
inc
cmp
addb
push
aas
inc
push
inc
dec
pop
inc
inc
push
cmp
lods
dec
xor
jns
outsl
xchg
icebp
icebp
icebp
push
std
std
std
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
pop
inc
dec
fiaddl
das
decl
cmp
jbe
push
ljmp
push
jmp
push
ljmp
pop
jns
push
decl
push
jmp
dec
decl
decl
aas
ljmp
imul
adc
adc
push
push
push
mov
loopne
pop
repz
mov
lods
mov
xor
xchg
jmp
xor
lcall
push
inc
inc
pop
inc
dec
pop
inc
mov
inc
xor
cld
test
push
aad
sub
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
jle
ja
dec
sub
jmp
inc
pushl
pop
jns
push
jmp
dec
jmp
push
pushl
jp
imul
fwait
jl
jnp
pusha
ljmp
pop
call
dec
decl
xchg
xchg
decl
dec
incl
add
mov
mov
loop
loop
mov
pop
pop
lods
pop
cs
cmp
and
sub
and
cmp
sub
jmp
push
inc
inc
pop
inc
inc
pop
inc
pushl
inc
xor
pop
cmp
mull
data16
addr16
xchg
xchg
xchg
jne
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
cmpsb
mov
dec
ljmp
dec
ljmp
pop
incl
inc
dec
jmp
push
ljmp
pop
pushl
pushl
decl
lcall
push
jmp
push
jmp
pop
ljmp
imul
add
addr16
mov
mov
cltd
cltd
cltd
push
dec
dec
mov
and
ljmp
sub
incl
ljmp
xor
mov
pop
inc
inc
pop
inc
ljmp
inc
xor
decl
mov
sti
addr16
mov
mov
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
mov
lcall
inc
jge
insl
lcall
inc
dec
jmp
push
ljmp
pop
ljmp
pop
pushl
incl
incl
arpl
addr16
pop
ljmp
arpl
pop
pop
pop
jmp
inc
inc
std
jp
jns
cmpb
pop
sub
stc
mov
call
inc
xor
xchg
dec
cmp
mov
js
ds
jle
aas
decl
push
inc
call
jg
jmp
in
stc
stc
stc
stc
stc
stc
stc
stc
stc
cli
cli
cli
jmp
in
ljmp
incl
incl
incl
incl
incl
incl
incl
incl
incl
div
testb
dec
push
aad
cmp
das
pushl
dec
lcall
dec
jmp
push
jmp
push
js
data16
jl
insb
incl
insl
jne
jb
arpl
imul
mov
cmp
aaa
jmp
and
loope
and
in
and
and
test
sub
pushl
push
aas
call
dec
inc
js
inc
jnp
ds
jns
cmp
mov
fcmovnu
call
xlat
xlat
fdivrp
cmpsl
cmpsl
cmpsl
je
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
mov
inc
std
dec
xor
lcall
dec
decl
cmp
pop
dec
push
jmp
pushl
popa
js
addr16
jg
outsb
incl
imul
pusha
pop
pop
call
dec
call
ud0
add
decl
or
xchg
cs
mov
dec
xor
lret
dec
pop
inc
inc
pop
inc
mov
push
inc
call
dec
aas
ljmp
cmp
cmpsb
lahf
popf
push
repnz
jmp
jnp
lret
lret
lret
cmp
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
xchg
xchg
xchg
jne
ss
decl
ds
jle
outsb
ljmp
push
call
inc
lcall
dec
jmp
push
ljmp
pop
jp
insl
decl
inc
pushl
popa
js
imul
pop
dec
push
decl
dec
ljmp
ud0
push
xor
ficomps
jmp
inc
jmp
insb
dec
jmp
insb
dec
fisubrl
call
gs
dec
pusha
dec
pushl
dec
cmp
movsb
xchg
cld
cld
cld
lcall
mov
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
fcmovnu
dec
xor
dec
decl
inc
dec
call
inc
jmp
dec
jmp
push
ljmp
ljmp
pushl
incl
dec
push
lcall
dec
incl
inc
inc
ljmp
adc
mov
pop
aaa
jmp
arpl
jmp
jno
jmp
jno
jmp
insl
dec
call
push
dec
mov
dec
cmp
lea
out
call
std
std
std
out
out
out
dec
int
push
push
jle
in
in
in
adc
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
jae
jae
inc
xor
cmp
mov
dec
lcall
inc
lcall
dec
jmp
push
lcall
dec
lcall
jl
imul
push
pushl
arpl
pop
inc
dec
pushl
popa
lcall
dec
ljmp
adc
mov
pop
cmp
out
inc
in
jo
out
jne
jmp
dec
jmp
jo
fisubrl
call
fs
mov
inc
cmp
jno
xor
in
in
in
jmp
call
pusha
pusha
stos
clc
add
mov
nop
nop
stos
outsl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
lea
inc
pushl
and
call
cmp
dec
xor
call
lcall
dec
ljmp
pop
pushl
pusha
jp
imul
je
lcall
push
call
inc
decl
and
test
pop
cmp
out
inc
in
jno
jmp
jb
inc
push
dec
call
dec
inc
pop
inc
decl
mov
cmp
out
pop
arpl
decb
or
incl
add
incl
add
pushl
mov
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
repnz
cmp
ss
cmp
ds
incl
xor
dec
xor
pop
ds
jmp
push
ljmp
pop
pushl
fs
jle
insl
jge
insb
jmp
push
xor
das
push
lcall
dec
push
ss
fisubs
jmp
push
call
pop
pushl
jmp
push
inc
call
nop
jmp
xor
jmp
sub
lcall
and
call
adc
mov
incl
add
call
sahf
scas
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
imul
pushl
and
cmp
incl
incl
xor
lcall
dec
jmp
push
ljmp
pop
jns
push
decl
pop
incl
or
jns
inc
pushl
push
cmp
leave
pop
inc
pushl
xchg
lcall
ljmp
fs
pushl
inc
ljmp
bnd
sub
lcall
and
call
sar
unpckhps
incl
or
incl
add
incl
add
call
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
xlat
xlat
sub
cmp
ljmp
adc
and
cmp
sub
inc
sub
call
aas
lcall
inc
jmp
push
decl
adc
test
decl
push
dec
xor
lcall
jp
lea
jmp
loopne
arpl
stc
decl
arpl
sub
out
push
sub
lcall
and
call
sbb
decl
ljmp
js
xchg
cmc
cmc
or
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incb
pop
push
pop
cmp
xor
sub
sbb
xor
pop
pushl
and
decl
cmp
push
ss
jge
push
sub
add
add
decl
or
in
adc
mov
out
xor
jg
and
mov
cs
jg
jnp
xchg
mov
outsl
pop
ljmp
cmp
jmp
sub
lcall
pop
in
adc
test
mov
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
sarb
sub
sbb
sub
push
pop
call
dec
ljmp
jmpw
push
incl
mov
incl
add
decl
or
decl
push
stos
inc
incl
out
lock
adc
mov
incl
mov
jle
cmp
jl
pop
std
xor
sbb
xchg
aas
inc
xchg
mov
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
jecxz
loop
xor
and
sub
sbb
sub
sbb
mov
jmp
in
lcall
jg
incl
inc
test
push
push
mov
std
std
add
xchg
int3
pop
mov
jl
sar
mov
test
cmp
pushl
fcos
jbe
in
outsl
mov
int
cmp
inc
push
icebp
mov
mov
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
pop
dec
dec
ret
sub
sbb
sub
sbb
jl
outsl
clc
clc
clc
sti
sti
sti
mov
addl
outsb
outsl
mov
div
testl
fcomp
fldt
dec
jp
ljmp
fdivrp
gs
decl
mov
ljmp
fwait
mov
jbe
in
je
in
jo
loope
pop
mov
cmp
xchg
xchg
lcall
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
cmpb
dec
cmp
imul
pop
pop
pop
repnz
jmp
jecxz
lcall
jns
jp
jp
incl
incl
scas
mov
push
aas
dec
push
cmp
ljmp
xor
incl
pop
pushl
inc
inc
decl
pop
incl
test
pushl
pushl
jecxz
addr16
imul
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
test
mov
push
lock
call
lods
lods
lock
incl
incl
incl
incl
dec
push
push
mov
jns
loopne
cmpl
iret
cmp
jmp
xor
jmp
xor
lcall
xchg
pushl
jecxz
outsl
mov
mov
xor
repz
popa
or
loope
push
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
div
testb
movsb
movsb
insb
xchg
xchg
xchg
nop
mov
loopne
and
incl
incl
incl
incl
incl
inc
push
pop
int
mov
decl
enter
mov
fdivrp
dec
jb
jmp
xor
jmp
das
incl
pop
pushl
pushl
jecxz
dec
jl
call
call
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
dec
pop
insl
jecxz
ret
xchg
shl
call
mov
loopne
push
mov
jmp
jge
pushl
in
dec
ja
ljmp
decl
jle
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
mov
ljmp
mov
pushl
ljmp
sar
mov
arpl
cwtl
xchg
ja
mov
out
pushl
loop
inc
bound
xorl
loope
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
xchg
jmp
fmul
ljmp
lcall
lock
xor
lcall
dec
call
mov
call
pushl
pop
je
jl
fdivr
push
jbe
lret
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incb
cmp
cld
cld
cli
jmp
in
stc
lcall
mov
jne
js
cmpl
pushl
in
push
jne
ljmp
inc
jo
outsb
xchg
decl
pushl
xchg
cltd
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
dec
dec
cmpb
jl
ljmp
jae
in
jge
call
inc
out
icebp
cmc
clc
lcall
lahf
loopne
pop
aam
ss
scas
decb
or
push
decl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
repnz
sbb
cmp
xor
ljmp
loopne
jo
jecxz
jo
jecxz
outsb
mov
fdivrp
insb
lahf
push
jnp
ljmp
into
decl
mov
add
sahf
incl
add
mov
mov
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
fcmovu
frstor
sbb
xchg
jmp
sub
and
push
xchg
lcall
lret
xchg
fdivr
push
mov
incb
mov
sub
ret
decl
or
incl
add
cld
cld
cld
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
arpl
mov
xor
mov
ljmp
xor
sub
lcall
and
decl
adc
decl
push
fcos
push
or
incl
add
div
repnz
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
aad
fisubrl
add
mov
incl
mov
idiv
xchg
xchg
out
incl
pminub
or
add
lret
add
mov
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
cmp
test
outsb
outsb
ljmp
addr16
cmp
xchg
out
incl
or
incl
add
incl
add
jmp
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
out
out
or
mov
push
repz
jmp
cld
js
jmp
add
incl
add
incl
add
popf
cli
cli
cli
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
mov
lds
or
sar
pop
pop
in
cmp
add
sar
add
mov
decl
xorb
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
out
call
scas
add
popf
incl
add
sti
xor
xchg
jmp
in
adc
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
sub
add
xor
add
pusha
add
add
add
add
add
add
or
add
xchg
add
add
imul
sbb
xchg
add
sub
sahf
sahf
sahf
add
test
add
push
cmp
sbb
rolb
or
pop
inc
add
inc
cmp
leave
pop
cmp
xchg
inc
xor
add
out
out
add
cmp
mov
cmp
jnp
jo
adc
mov
lods
lods
lods
add
pop
inc
add
add
jno
add
aad
add
arpl
pop
inc
add
push
add
sub
clc
clc
clc
add
inc
add
mov
add
mov
add
cld
cld
add
flds
popf
cmpsb
stos
add
add
loope
fucom
jmp
ljmp
add
mov
jmp
push
mov
add
add
mov
xchg
add
fildl
test
jecxz
jb
jecxz
mov
nop
add
jo
add
roll
clc
clc
clc
add
fiadds
xchg
into
jmp
xor
add
push
test
add
sub
add
push
cmp
arpl
ss
leave
leave
add
pmulhuw
or
flds
les
add
inc
add
xchg
add
leave
leave
add
push
add
mov
adc
xchg
add
push
add
sbb
add
add
xor
pop
add
mov
pop
push
push
add
dec
inc
add
xor
add
dec
insb
add
icebp
icebp
add
push
add
cmp
inc
inc
add
js
je
test
mov
pop
pop
add
pusha
add
xor
pop
pop
add
inc
add
popa
add
push
add
sbb
add
add
add
add
push
add
add
imul
push
cmp
push
add
dec
add
inc
add
pop
jl
insl
push
pop
add
dec
add
insl
je
push
push
push
add
dec
jnp
xor
add
dec
jge
cmpsl
push
inc
add
push
add
js
pop
dec
dec
add
add
inc
add
push
add
push
pusha
add
add
sub
add
icebp
testl
inc
ds
add
xor
inc
xor
add
dec
add
adc
add
int3
int3
add
jo
add
push
scas
add
loopne
add
cmc
cmc
add
inc
add
pop
add
or
push
add
jae
fs
push
add
sub
inc
pop
xchg
scas
scas
mov
subb
pop
pop
pop
add
dec
add
push
add
dec
push
add
jnp
outsl
data16
dec
add
add
push
push
push
push
add
or
rolb
dec
jb
add
addb
div
add
add
pop
add
imul
dec
push
add
push
inc
add
dec
add
add
insl
add
mov
add
jne
dec
pop
pusha
add
sub
ficompl
add
dec
add
lret
pop
inc
dec
add
push
add
pop
add
lea
add
pusha
data16
add
pop
and
lcall
add
gs
add
jg
mov
add
add
cmp
leave
push
cmp
movsl
sub
in
jb
add
daa
add
imul
or
add
pop
test
add
outsb
jbe
test
movsl
add
repz
int
add
outsb
add
mov
incl
add
push
add
xlat
les
add
push
daa
cmp
push
push
add
push
push
daa
les
enter
add
xlat
les
test
add
add
add
cli
cmp
pop
cmp
cmp
iret
mov
fst
les
add
add
neg
xchg
outsl
jns
pop
add
add
add
mov
jne
mov
hlt
hlt
repz
add
add
add
add
and
cmp
cmc
push
test
add
add
addb
ds
repz
push
cmpsl
and
idivl
and
cmp
add
jnp
fcomi
hlt
repz
aam
hlt
inc
cmp
repz
pusha
mov
add
add
add
ret
xchg
and
inc
outsl
es
adc
std
cmp
and
fcmovnbe
lahf
imul
pop
loop
testb
add
add
add
daa
sti
add
into
mull
out
mov
std
and
xchg
mov
repz
out
out
or
jmp
or
push
add
add
add
add
cmp
rorb
movsb
stos
xchg
leave
lahf
mov
clc
clc
fsubl
sbb
or
jmp
adc
mov
add
add
add
add
jo
movsb
mov
inc
jg
mov
fcoml
lcall
ficomps
push
push
push
add
mov
xlat
jbe
icebp
fistpll
leave
pusha
mov
pop
pop
pop
test
push
adc
lret
adc
out
in
push
in
pop
lcall
add
add
add
lret
add
cmp
outsl
sbb
mov
pop
pop
pop
pop
test
in
adc
jb
fsubp
push
in
push
in
loop
adc
or
add
add
fnstenv
stos
int
mov
cmp
fcmovb
lahf
pusha
mov
fsubl
sbb
push
push
lock
pop
push
add
add
add
add
add
js
cmp
mov
push
and
push
adc
push
push
sbb
lcall
add
add
add
xlat
sbb
and
cmp
mov
push
pop
cmp
adc
sbb
mov
add
and
pop
int
test
mov
mov
adc
lret
sbb
clc
jecxz
add
add
dec
mov
and
fadds
outsl
mov
out
pusha
lahf
mov
sbb
into
lret
add
jbe
nop
xchg
fbld
cmp
mov
pusha
pusha
lahf
out
push
fidivs
sbb
inc
jg
mov
add
adcl
dec
fidivrl
cmc
loop
or
scas
cmp
inc
inc
inc
xor
add
mov
fcoms
sub
mov
lcall
fisubs
adc
xor
xor
add
add
add
add
popf
xchg
and
insb
js
dec
sub
mov
adc
jb
scas
push
adc
xor
xlat
add
add
xchg
popf
sbb
ja
xchg
icebp
outsl
xchg
mov
pop
in
aad
pop
or
in
adc
cmp
and
ja
and
mov
mov
add
pop
or
or
in
jb
mov
xor
add
les
mov
mov
fdivrs
pop
add
pop
out
out
out
or
in
adc
xor
lret
inc
ja
movb
mov
pop
out
or
adc
sbb
mov
push
add
mov
popf
mov
dec
xchg
test
pop
mov
pop
inc
inc
sbb
dec
shr
add
add
xchg
mov
xchg
addr16
adc
sub
jmp
push
shr
mov
add
test
sbb
repnz
subps
cmp
mov
adc
repnz
add
push
jns
mov
xchg
add
adc
pop
loope
dec
inc
adc
pop
cmove
push
dec
jno
add
pusha
mov
fisubl
dec
mov
imul
cmpsb
pop
dec
add
pop
push
lea
cmpsl
pusha
mov
cmp
lds
mov
das
xor
cmp
sub
add
mov
cmp
out
imul
ret
das
pop
ss
xor
xor
mov
add
les
xor
out
add
mov
imul
mov
add
add
out
pushf
xor
lret
add
jae
cmp
inc
xor
ret
mov
add
add
lret
imul
add
add
cmp
aas
inc
or
ret
cmp
les
add
add
aas
dec
dec
aas
cmp
pop
lahf
lahf
pop
cmp
das
aas
mov
add
add
das
cmp
inc
xor
or
aas
or
add
add
xor
lahf
xchg
dec
cmp
cmp
mov
add
lds
sub
sarl
inc
or
ret
les
add
fs
ret
xor
cmp
inc
aaa
xor
cmpsb
push
stos
jno
add
imul
fcmovnb
xor
xor
dec
xor
jmp
add
add
loopne
fcmovnu
dec
cmp
ds
loope
shl
imul
add
fs
pop
loope
push
push
jl
mov
add
jl
ss
ss
xchg
add
add
inc
ss
call
add
add
inc
cs
pushf
inc
call
add
call
add
add
loopne
loopne
imul
add
inc
incl
add
sti
incl
incl
add
sar
add
add
incl
add
incl
jg
add
add
incl
jg
add
add
incb
aas
add
aas
add
incb
pop
add
aas
add
incb
jo
cld
add
rolb
add
cld
add
rolb
add
cld
add
add
jg
add
add
rolb
add
clc
add
rolb
add
clc
add
rolb
add
clc
add
rolb
add
clc
add
rolb
add
cld
add
rolb
add
cld
add
add
sldt
incb
add
add
add
incl
add
add
add
incl
add
incl
add
incl
add
inc
add
add
add
jmp
add
add
add
jmp
add
add
add
push
add
add
add
push
add
add
add
clc
add
add
add
cld
add
incl
add
cld
add
add
add
cld
add
add
add
incl
rolb
add
ffreep
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
incl
incl
incl
incl
inc
add
add
inc
add
add
jmp
pop
incl
add
push
ud0
add
clc
pop
incl
add
add
add
add
add
add
add
add
add
add
add
add
push
cmp
and
mov
sahf
popa
pop
add
push
mov
xchg
add
pop
add
cmp
outsb
pop
popa
add
push
add
insb
add
mov
add
fstp
jo
add
add
add
add
xchg
test
add
add
add
rcll
fiadds
add
add
loopne
out
stos
stos
stos
lods
add
add
add
push
cmpl
test
sub
add
out
mov
mov
add
add
bound
add
push
js
cmp
adc
loopne
push
stos
and
stos
and
stos
adc
add
add
call
cmp
mov
mov
cltd
adc
adc
add
add
mov
mov
mov
stos
and
inc
adc
add
add
out
mov
fmuls
inc
adc
inc
inc
sbb
add
mov
mov
mov
les
sbb
push
mov
rcrl
inc
inc
inc
inc
inc
sbb
or
adc
inc
inc
les
fmuls
add
mov
adc
mov
inc
inc
inc
ja
add
add
add
lret
mov
sbb
les
add
add
add
loope
lret
mov
sbb
dec
inc
inc
inc
dec
add
add
add
add
mov
pushf
mov
pop
aam
sbb
inc
inc
sbb
add
mov
cmp
out
rcll
sbb
inc
inc
adc
add
add
add
mov
cmp
adc
inc
inc
mov
pop
add
add
add
fwait
cmp
mov
mov
inc
les
incl
add
pop
int3
lret
mov
mov
rcll
inc
dec
lds
pop
rolb
add
add
xchg
ret
pushf
lret
mov
inc
inc
inc
inc
dec
inc
lcall
add
add
add
mov
xor
inc
inc
pushl
add
add
add
loope
cmp
lret
mov
inc
xor
inc
inc
pop
lcall
add
add
add
lret
cmp
roll
inc
dec
pop
pop
and
add
rcll
xchg
int3
lret
mov
xor
and
and
and
add
add
add
sbb
sbb
mov
cltd
inc
inc
inc
mov
and
and
mov
add
or
mov
pop
inc
and
and
addb
add
add
push
sbb
adc
ss
and
and
adc
adc
mov
sub
and
add
adc
mov
add
dec
and
add
add
add
push
adc
pushl
bound
bound
add
add
add
add
sbb
push
mov
push
push
cbtw
add
add
lret
push
cmp
mov
mov
add
add
add
add
mov
push
add
gs
push
add
add
cmpsb
push
push
push
data16
xchg
push
imul
add
xchg
push
pop
ss
mov
fists
push
mov
xchg
push
add
add
xchg
insl
add
add
cmpsb
push
pop
push
bound
addb
add
mov
and
addb
add
sub
sub
add
add
and
mov
push
es
bound
and
add
push
push
bound
sub
add
outsl
push
bound
rolb
add
and
sub
or
sub
add
add
add
inc
incl
add
sti
incl
incl
add
sar
add
add
incl
add
incl
jg
add
add
incl
jg
add
add
incb
aas
add
aas
add
incb
pop
add
aas
add
incb
jo
cld
add
rolb
add
cld
add
rolb
add
cld
add
add
jg
add
add
rolb
add
clc
add
rolb
add
clc
add
rolb
add
clc
add
rolb
add
clc
add
rolb
add
cld
add
rolb
add
cld
add
add
sldt
incb
add
add
add
incl
add
add
add
incl
add
incl
add
incl
add
inc
add
add
add
jmp
add
add
add
jmp
add
add
add
push
add
add
add
push
add
add
add
clc
add
add
add
cld
add
incl
add
cld
add
add
add
cld
add
add
add
incl
rolb
add
ffreep
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
incl
incl
incl
incl
inc
add
add
inc
add
add
jmp
pop
incl
add
push
ud0
add
clc
pop
incl
add
add
add
add
add
add
add
or
add
add
addb
dec
jle
add
cld
add
cld
add
cld
add
cld
add
add
ljmp
fsub
cld
add
loop
add
add
cld
add
cld
add
cld
add
cld
add
cld
add
cld
add
cli
cld
add
add
add
add
loop
add
fdivrp
add
cld
add
cld
add
cld
add
cld
add
cld
add
cld
add
cld
add
cld
add
cld
add
repnz
add
add
add
fdivrp
add
add
cld
add
cld
add
cld
add
cld
add
cld
add
cld
add
add
add
repnz
add
out
cld
add
add
add
add
cld
add
sar
add
cld
add
cld
add
cld
add
cld
add
cld
add
cld
add
add
cld
add
add
cld
add
ljmp
add
cld
add
cld
add
cld
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
cmp
adc
adc
adc
ds
sbb
add
adc
cmp
adc
adc
inc
inc
dec
dec
inc
inc
pop
adc
adc
inc
inc
sub
or
das
pop
or
and
sbb
inc
inc
dec
adc
dec
inc
inc
inc
sbb
inc
inc
inc
inc
inc
adc
adc
adc
add
adc
inc
inc
inc
or
inc
inc
xor
inc
inc
dec
add
dec
sub
dec
adc
sub
xor
adc
sbb
sub
and
inc
sub
inc
inc
inc
inc
adc
and
adc
or
xor
cmp
dec
inc
inc
add
adc
ds
add
add
daa
inc
inc
inc
inc
and
adc
adc
or
or
inc
inc
inc
xor
pop
inc
inc
inc
xor
adc
adc
adc
cmp
inc
inc
inc
sub
or
inc
inc
adc
adc
xor
sub
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
xor
inc
inc
inc
adc
adc
adc
sbb
sbb
sub
daa
inc
inc
inc
inc
inc
adc
or
aaa
adc
adc
pop
adc
inc
inc
inc
inc
xor
adc
inc
inc
add
sbb
dec
and
and
inc
sbb
sub
sub
inc
inc
inc
inc
and
adc
inc
or
cmp
sub
inc
inc
inc
inc
xor
inc
inc
inc
inc
dec
add
adc
sub
adc
sbb
cmp
sub
sub
daa
inc
inc
inc
inc
das
adc
daa
adc
inc
inc
and
inc
inc
inc
and
adc
adc
xor
adc
daa
inc
add
inc
inc
inc
inc
add
adc
adc
inc
ds
adc
inc
dec
inc
inc
inc
sbb
inc
and
inc
adc
or
das
cmp
adc
adc
inc
adc
and
adc
inc
dec
dec
inc
inc
inc
dec
dec
inc
sub
adc
inc
inc
inc
and
adc
inc
and
cmp
sub
daa
adc
adc
sbb
cmp
xor
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
sub
add
adc
add
and
add
add
and
jbe
jo
ja
jb
js
je
jns
jbe
jnp
jns
jge
jl
jle
jg
subb
jmp
test
jmp
mov
nop
jmp
lea
jmp
xchg
inc
lahf
ja
jb
js
je
jns
jbe
jnp
jns
jge
jl
jle
jg
subb
incl
xor
incl
cmp
decl
inc
fwait
call
dec
mov
cli
jns
jbe
jnp
jns
jge
jl
jle
jg
subb
incl
xor
incl
cmp
decl
inc
fwait
call
dec
mov
jmp
jnp
jns
add
add
jle
jg
subb
jmp
xor
incl
cmp
decl
inc
fwait
call
dec
mov
call
es
jge
jl
jle
jg
subb
or
test
lcall
jno
mov
pop
lods
inc
xchg
lret
lcall
sub
sub
subb
addb
mov
xchg
dec
movsb
int
clc
repnz
jmp
stos
aam
inc
xchg
int
lcall
incl
xor
add
aaa
jmp
cmp
jmp
pop
lods
lcall
fucomi
inc
cwtl
iret
lcall
addb
xor
cmp
cmp
fcmovb
fdivrp
xchg
inc
lahf
call
dec
cmpsb
lcall
shr
inc
lcall
xorb
add
add
add
mov
nop
adc
cmp
cwtl
decl
inc
lahf
call
dec
cmpsb
call
push
lods
lcall
js
lcall
pop
mov
test
cli
xchg
stc
mov
nop
jno
cmp
cwtl
jmp
inc
fwait
call
dec
mov
call
push
lods
lcall
push
mov
popf
pop
mov
sahf
pop
mov
lahf
pop
mov
decl
cmp
cwtl
add
xchg
inc
lahf
call
dec
cmpsb
call
push
lods
lcall
push
mov
popf
pop
mov
sahf
pop
mov
lahf
pop
mov
in
mov
nop
clc
mov
cwtl
jno
inc
fwait
add
xchg
dec
mov
jmp
cwtl
push
lods
jmp
pushf
push
mov
popf
pop
mov
sahf
pop
mov
lahf
pop
mov
out
lahf
pop
mov
add
pushl
pushl
add
je
add
jne
add
jbe
and
ja
add
add
add
jp
add
jl
add
jge
and
jg
add
cmp
add
incl
ljmp
add
add
add
add
add
add
sbb
add
add
orb
jbe
jo
pop
jo
pop
jo
and
and
and
add
jns
jne
and
jp
ja
es
daa
jp
sub
jge
sub
sub
subl
xorl
test
test
xchg
mov
xchg
mov
lea
mov
popl
nop
inc
popf
jbe
jo
pop
jo
and
and
and
and
add
jbe
and
jl
jp
sub
jge
sub
sub
subl
xorl
test
test
xchg
mov
xchg
mov
lea
mov
popl
nop
inc
popf
xchg
inc
lahf
jbe
jo
and
and
and
and
jne
add
jp
ja
es
daa
jp
sub
jge
sub
sub
subl
xorl
test
test
xchg
mov
xchg
mov
lea
mov
popl
nop
inc
popf
xchg
inc
lahf
xchg
dec
mov
and
and
and
jne
and
add
add
jns
daa
jp
sub
jge
sub
sub
subl
xorl
test
test
xchg
mov
xchg
mov
lea
mov
popl
nop
inc
popf
xchg
inc
lahf
xchg
dec
mov
and
and
and
jne
and
jp
ja
add
jl
jp
sub
jge
sub
sub
subl
xorl
test
test
xchg
mov
xchg
mov
lea
mov
popl
nop
inc
popf
xchg
inc
lahf
xchg
dec
mov
dec
movsb
js
jae
and
jne
and
jp
ja
es
add
jge
jl
sub
sub
sub
subl
xorl
test
test
xchg
mov
xchg
mov
lea
mov
popl
nop
inc
popf
xchg
inc
lahf
xchg
dec
mov
dec
movsb
xchg
dec
cmpsb
js
je
and
and
jp
ja
es
daa
jp
add
jge
jge
sub
sub
subl
xorl
test
test
xchg
mov
xchg
mov
lea
mov
popl
nop
inc
popf
xchg
inc
lahf
xchg
dec
mov
dec
movsb
xchg
dec
cmpsb
xchg
dec
test
jle
jg
sub
subl
xorl
test
test
xchg
mov
xchg
mov
lea
mov
popl
nop
inc
popf
xchg
inc
lahf
xchg
dec
mov
dec
movsb
xchg
dec
cmpsb
xchg
dec
test
dec
test
and
jl
jp
sub
jge
add
jg
addb
xorb
movsb
imul
lea
nop
test
scas
div
clc
lock
pushf
pop
cmpsb
mov
popl
shll
mov
test
dec
test
and
jl
jp
sub
jge
sub
add
subb
subl
xorl
movsl
push
incl
nop
mov
push
out
sahf
pop
test
inc
popf
shll
inc
xchg
lret
xchg
dec
test
push
lods
jnp
jns
daa
jp
sub
jge
sub
sub
subl
xorl
test
cmpsb
imul
decl
int3
clc
repz
cmpsl
imul
inc
xchg
lret
cwtl
push
stos
cwtl
push
lods
cltd
push
scas
jl
jp
sub
jge
sub
sub
add
add
xchg
cmpsb
insb
stos
jmp
lret
loop
call
mov
fcmovb
fdivrp
clc
repz
jmp
inc
xchg
int
push
lods
cltd
push
scas
lcall
sub
sub
sub
subl
xorl
test
test
cmpsl
insl
lods
call
mov
nop
inc
popf
xchg
inc
lahf
shll
inc
xchg
int
push
scas
lcall
sub
sub
sub
subl
add
add
xchg
lea
scas
call
mov
nop
inc
popf
xchg
inc
lahf
xchg
dec
mov
lahf
into
inc
cwtl
into
lcall
push
mov
sub
sub
subl
xorl
add
add
lea
nop
test
scas
inc
fwait
lret
popf
xchg
inc
lahf
xchg
dec
mov
dec
movsb
xchg
dec
cmpsb
mov
inc
cwtl
iret
fwait
push
mov
push
mov
push
mov
sub
subl
xorl
test
add
add
mov
xchg
stos
jno
inc
fwait
lret
popf
xchg
inc
lahf
xchg
dec
mov
dec
movsb
xchg
dec
cmpsb
xchg
dec
test
dec
test
inc
cltd
rcrb
popf
pop
mov
xchg
mov
xchg
mov
inc
fwait
lret
popf
xchg
inc
lahf
xchg
dec
mov
dec
movsb
xchg
dec
cmpsb
xchg
dec
test
dec
test
push
lods
mov
inc
lcall
mov
pop
mov
das
test
xchg
xchg
lea
add
mov
nop
mov
xchg
mov
lea
mov
popl
nop
inc
popf
xchg
inc
lahf
xchg
dec
mov
dec
movsb
xchg
dec
cmpsb
xchg
dec
test
dec
test
push
lods
cltd
push
scas
lcall
push
mov
push
mov
pop
mov
pop
mov
pop
mov
xor
xor
test
xchg
mov
add
mov
xchg
mov
lea
mov
popl
nop
inc
popf
xchg
inc
lahf
xchg
dec
mov
dec
movsb
xchg
dec
cmpsb
xchg
dec
test
dec
test
push
lods
cltd
push
scas
lcall
push
mov
push
mov
pop
mov
pop
mov
pop
mov
pop
mov
xor
xor
xchg
mov
add
xchg
lea
mov
popl
nop
inc
popf
xchg
inc
lahf
xchg
dec
mov
dec
movsb
xchg
dec
cmpsb
xchg
dec
test
dec
test
push
lods
cltd
push
scas
lcall
push
mov
push
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
xor
xchg
mov
xchg
add
add
mov
popl
nop
inc
popf
xchg
inc
lahf
xchg
dec
mov
dec
movsb
xchg
dec
cmpsb
xchg
dec
test
dec
test
push
lods
cltd
push
scas
lcall
push
mov
push
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
xor
xchg
mov
xchg
mov
lea
mov
popl
nop
inc
popf
xchg
inc
lahf
xchg
dec
mov
dec
movsb
xchg
dec
cmpsb
xchg
dec
test
dec
test
push
lods
cltd
push
scas
lcall
push
mov
push
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
cmp
cmp
aas
xchg
add
add
fwait
nop
inc
popf
xchg
inc
lahf
xchg
dec
mov
dec
movsb
xchg
dec
cmpsb
xchg
dec
test
dec
test
push
lods
cltd
push
scas
lcall
push
mov
push
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
cmp
cmp
aas
xchg
lea
add
add
popf
xchg
inc
lahf
xchg
dec
mov
dec
movsb
xchg
dec
cmpsb
xchg
dec
test
dec
test
push
lods
cltd
push
scas
lcall
push
mov
push
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ljmp
add
add
add
add
add
add
and
jbe
jo
jbe
jo
jbe
jo
jbe
jo
jbe
jo
jbe
jno
ja
jno
ja
jb
jns
je
jns
jne
jns
jbe
jp
ja
jp
js
jnp
jns
jnp
jp
jl
jnp
jge
jl
jge
jge
jle
jle
jle
jg
jg
xor
sub
xor
das
xor
xor
xorl
cmc
xorl
cmc
test
cmc
test
mov
xchg
cmc
xchg
mov
mov
cmc
mov
nop
cmc
mov
xchg
cmc
mov
cmc
mov
xchg
cmc
mov
xchg
cmc
lea
cmc
lea
cmc
mov
cmc
popl
testl
pop
jo
jbe
jo
jbe
jo
jbe
jno
ja
jno
ja
jb
ja
jb
jns
jne
jns
jbe
jp
ja
jp
js
jnp
jns
jnp
jp
jl
jnp
jge
jl
jge
jge
jle
jle
jle
jg
jg
cmp
sub
cmp
das
cmp
xor
xorl
incl
xor
incl
ss
xchg
incl
cmp
decl
cmp
decl
ds
decl
cwtl
decl
inc
lcall
inc
popf
call
pop
jo
jbe
jo
jbe
jo
jbe
jno
ja
jno
ja
jb
ja
jb
js
jae
jns
jbe
jp
ja
jp
js
jnp
jns
jnp
jp
jl
jnp
jge
jl
jge
jge
jle
jle
jle
jg
jg
cmp
sub
cmp
das
cmp
xor
xorl
incl
xor
incl
ss
xchg
incl
cmp
decl
cmp
decl
ds
decl
cwtl
decl
inc
lcall
inc
popf
call
inc
lahf
cmc
jbe
jo
jbe
jo
jbe
jno
ja
jno
ja
jb
ja
jb
js
jae
js
je
jp
ja
jp
js
jnp
jns
jnp
jp
jl
jnp
jge
jl
jge
jge
jle
jle
jle
jg
jg
cmp
sub
cmp
das
cmp
xor
xorl
incl
xor
incl
ss
xchg
incl
cmp
decl
cmp
decl
ds
decl
cwtl
decl
inc
lcall
inc
popf
call
inc
lahf
call
pop
jo
jbe
jno
ja
jno
ja
jb
ja
jb
js
jae
js
je
jns
je
jp
js
jnp
jns
jnp
jp
jl
jnp
jge
jl
jge
jge
jle
jle
jle
jg
jg
cmp
sub
cmp
das
cmp
xor
xorl
incl
xor
incl
ss
xchg
incl
cmp
decl
cmp
decl
ds
decl
cwtl
decl
inc
lcall
inc
popf
call
inc
lahf
call
dec
mov
pushl
jno
ja
jb
ja
jb
js
jae
js
je
jns
je
jns
jne
jnp
jns
jnp
jp
jl
jnp
jge
jl
jge
jge
jle
jle
jle
jg
jg
cmp
sub
cmp
das
cmp
xor
xorl
incl
xor
incl
ss
xchg
incl
cmp
decl
cmp
decl
ds
decl
cwtl
decl
inc
lcall
inc
popf
call
inc
lahf
call
dec
mov
cmc
ja
jno
ja
jb
ja
jb
js
jae
js
je
jns
je
jns
jne
jns
jbe
jnp
jp
jl
jnp
jge
jl
jge
jge
jle
jle
jle
jg
jg
cmp
sub
cmp
das
cmp
xor
xorl
incl
xor
incl
ss
xchg
incl
cmp
decl
cmp
decl
ds
decl
cwtl
decl
inc
lcall
inc
popf
call
inc
lahf
call
dec
mov
call
jb
ja
jb
js
jae
js
je
jns
je
jns
jne
jns
jbe
jp
ja
jl
jnp
jge
jl
jge
jge
jle
jle
jle
jg
jg
cmp
sub
cmp
das
cmp
xor
xorl
incl
xor
incl
ss
xchg
incl
cmp
decl
cmp
decl
ds
decl
cwtl
decl
inc
lcall
inc
popf
call
inc
lahf
call
dec
mov
call
movsl
cmc
ja
jb
js
jae
js
je
jns
je
jns
jne
jns
jbe
jp
ja
jp
js
jge
jl
jge
jge
jle
jle
jle
jg
jg
cmp
sub
cmp
das
cmp
xor
xorl
incl
xor
incl
ss
xchg
incl
cmp
decl
cmp
decl
ds
decl
cwtl
decl
inc
lcall
inc
popf
call
inc
lahf
call
dec
mov
call
movsl
call
and
js
je
jns
je
jns
jne
jns
jbe
jp
ja
jp
js
jnp
jns
jge
jge
jle
jle
jle
jg
jg
cmp
sub
cmp
das
cmp
xor
xorl
incl
xor
incl
ss
xchg
incl
cmp
decl
cmp
decl
ds
decl
cwtl
decl
inc
lcall
inc
popf
call
inc
lahf
call
dec
mov
call
movsl
call
dec
cmpsl
cmc
jle
jle
jle
jg
jg
cmp
sub
cmp
das
cmp
xor
xorl
incl
xor
incl
ss
xchg
incl
cmp
decl
cmp
decl
ds
decl
cwtl
decl
inc
lcall
inc
popf
call
inc
lahf
call
dec
mov
call
movsl
call
dec
cmpsl
call
add
add
jg
jg
xor
sub
cmp
das
cmp
xor
call
ss
xchg
incl
cmp
jmp
lret
loop
jmp
lret
loop
xchg
dec
pushf
decl
cwtl
decl
inc
lcall
jmp
iret
out
xchg
dec
movsl
call
dec
cmpsl
call
dec
test
add
orb
sub
cmp
das
cmp
xor
movsb
imul
call
aaa
incl
cmp
out
in
call
dec
lahf
decl
inc
lcall
int
jmp
iret
out
xchg
dec
cmpsb
call
dec
test
xchg
dec
test
cmc
jns
jbe
jp
ja
jp
js
jnp
jns
jnp
jp
jl
jnp
jge
jl
jge
jge
subb
cmc
subl
test
xorb
incl
imul
call
cmp
ljmp
repnz
call
pop
cmpsl
decl
inc
popf
jmp
int
jmp
iret
out
xchg
dec
cmpsl
call
dec
test
lcall
and
js
jnp
jns
jnp
jp
jl
jnp
jge
jl
jge
jge
jle
jle
subb
or
xor
xorl
incl
push
call
cmp
push
out
lcall
inc
sahf
jmp
into
in
jmp
shr
call
dec
test
lcall
push
lods
cmc
jp
js
jnp
jns
jnp
jp
jl
jnp
jge
jl
jge
jge
jle
jle
jle
jg
subl
test
xorb
incl
xor
jmp
lcall
mov
push
out
jmp
into
out
jmp
shr
call
push
stos
lcall
push
lods
lcall
es
jnp
jp
jl
jnp
jge
jl
jge
jge
jle
jle
jle
jg
jg
addb
add
add
add
add
xor
incl
xor
incl
insb
stos
jmp
fsubr
pushl
scas
clc
repz
clc
repz
push
out
jmp
shr
call
push
stos
lcall
push
lods
lcall
daa
jp
jl
jnp
jge
jl
jge
jge
jle
jle
jle
jg
jg
cmp
sub
add
xorb
or
xor
incl
ss
cmpsb
insb
stos
push
repnz
ljmp
fwait
decl
push
push
out
jmp
shr
lcall
push
lods
lcall
push
scas
lcall
sub
jge
jl
jge
jge
jle
jle
jle
jg
jg
cmp
sub
addb
add
add
add
add
xor
incl
ss
xchg
jmp
push
repnz
jmp
inc
fwait
decl
inc
sahf
call
pusha
lods
push
out
jmp
shr
lcall
push
lods
lcall
push
scas
lcall
sub
sub
jle
jle
jle
jg
jg
cmp
sub
cmp
das
addl
add
add
add
add
xor
cmc
test
mov
xchg
incl
outsb
lods
push
out
lcall
inc
fwait
decl
inc
sahf
call
inc
mov
lcall
fucomi
jmp
shr
lcall
push
scas
lcall
push
mov
fwait
push
mov
jge
jge
jle
jle
jle
jg
jg
cmp
sub
cmp
das
cmp
xor
test
or
ss
xchg
incl
cmp
call
dec
mov
decl
inc
sahf
call
inc
mov
call
dec
movsb
lcall
iret
out
jmp
shr
lcall
push
scas
lcall
push
mov
pushf
push
mov
jle
jle
jle
jg
jg
cmp
sub
cmp
das
cmp
xor
test
mov
xchg
incl
cmp
ljmp
jmp
int3
in
xchg
dec
mov
decl
inc
sahf
call
inc
mov
call
dec
movsb
call
cmpsb
call
shr
jmp
shr
lcall
push
mov
fwait
push
mov
pushf
push
mov
pushf
push
mov
jle
jg
jg
addb
addb
xor
xorl
inc
xchg
mov
xchg
cmc
xchg
mov
mov
decl
cmp
jmp
int3
in
mov
decl
inc
popf
call
inc
lahf
call
dec
mov
call
movsl
call
dec
cmpsl
call
dec
test
jmp
shr
lcall
push
mov
pushf
push
mov
pushf
push
mov
pushf
push
mov
xchg
lea
xchg
mov
mov
decl
cmp
ljmp
call
mov
decl
inc
fwait
decl
inc
sahf
call
inc
mov
call
dec
movsb
call
cmpsb
call
dec
test
xchg
dec
test
lcall
scas
fdivr
jmp
shr
lcall
push
mov
pushf
push
mov
pushf
push
mov
popf
pop
mov
xchg
mov
mov
cmc
mov
nop
decl
cmp
decl
ds
decl
cwtl
decl
inc
lcall
inc
popf
call
inc
lahf
call
dec
mov
call
movsl
call
dec
cmpsl
call
dec
test
lcall
push
lods
lcall
add
lcall
push
mov
pushf
push
mov
pushf
push
mov
pushf
push
mov
popf
pop
mov
popf
pop
mov
mov
nop
cmc
mov
xchg
decl
cmp
xchg
decl
cwtl
decl
inc
lcall
inc
popf
call
inc
lahf
call
dec
mov
call
movsl
call
dec
cmpsl
call
dec
test
lcall
push
lods
lcall
push
scas
lcall
push
mov
fwait
push
mov
pushf
push
mov
pushf
push
mov
pushf
push
mov
popf
pop
mov
popf
pop
mov
sahf
pop
mov
subl
test
xorb
or
xor
or
mov
mov
nop
or
cmp
decl
ds
decl
cwtl
decl
inc
lcall
inc
popf
call
inc
lahf
call
dec
mov
call
movsl
call
dec
cmpsl
call
dec
test
lcall
push
lods
lcall
push
scas
lcall
push
mov
fwait
push
mov
pushf
push
mov
pushf
push
mov
pushf
push
mov
popf
pop
mov
popf
pop
mov
sahf
pop
mov
sahf
pop
mov
xorl
test
xorl
cmc
xorl
cmc
test
cmc
test
mov
xchg
lea
add
add
cmp
cmc
mov
xchg
decl
cwtl
decl
inc
lcall
inc
popf
call
inc
lahf
call
dec
mov
call
movsl
call
dec
cmpsl
call
dec
test
lcall
push
lods
lcall
push
scas
lcall
push
mov
fwait
push
mov
pushf
push
mov
pushf
push
mov
pushf
push
mov
popf
pop
mov
popf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
xorb
incl
xor
incl
ss
xchg
incl
add
add
cmp
xchg
decl
cwtl
decl
inc
lcall
inc
popf
call
inc
lahf
call
dec
mov
call
movsl
call
dec
cmpsl
call
dec
test
lcall
push
lods
lcall
push
scas
lcall
push
mov
fwait
push
mov
pushf
push
mov
pushf
push
mov
pushf
push
mov
popf
pop
mov
popf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
lahf
pop
mov
xorl
incl
xor
incl
ss
xchg
incl
cmp
add
ds
cmc
mov
xchg
decl
inc
cltd
decl
inc
fwait
decl
inc
sahf
call
inc
mov
call
dec
movsb
call
cmpsb
call
dec
test
xchg
dec
test
lcall
push
lods
lcall
push
scas
lcall
push
mov
fwait
push
mov
pushf
push
mov
pushf
push
mov
pushf
push
mov
popf
pop
mov
popf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
lahf
pop
mov
lahf
pop
mov
incl
mov
xchg
mov
xchg
incl
cmp
addb
add
mov
xchg
or
cwtl
decl
inc
lcall
inc
popf
call
inc
lahf
call
dec
mov
call
movsl
call
dec
cmpsl
call
dec
test
lcall
push
lods
lcall
push
scas
lcall
push
mov
fwait
push
mov
pushf
push
mov
pushf
push
mov
pushf
push
mov
popf
pop
mov
popf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
lahf
pop
mov
lahf
pop
mov
cmc
test
incl
ss
xchg
incl
cmp
decl
add
add
cwtl
cmc
lea
decl
inc
fwait
decl
inc
sahf
call
inc
mov
call
dec
movsb
call
cmpsb
call
dec
test
xchg
dec
test
lcall
push
lods
lcall
push
scas
lcall
push
mov
fwait
push
mov
pushf
push
mov
pushf
push
mov
pushf
push
mov
popf
pop
mov
popf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
lahf
pop
mov
lahf
pop
mov
lcall
xor
mov
xchg
incl
cmp
decl
cmp
addb
add
lea
or
inc
lcall
inc
popf
call
inc
lahf
call
dec
mov
call
movsl
call
dec
cmpsl
call
dec
test
lcall
push
lods
lcall
push
scas
lcall
push
mov
fwait
push
mov
pushf
push
mov
pushf
push
mov
pushf
push
mov
popf
pop
mov
popf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
lahf
pop
mov
lahf
pop
mov
lcall
pop
mov
incl
cmp
decl
cmp
decl
add
add
inc
lcall
inc
popf
call
inc
lahf
call
dec
mov
call
movsl
call
dec
cmpsl
call
dec
test
lcall
push
lods
lcall
push
scas
lcall
push
mov
fwait
push
mov
pushf
push
mov
pushf
push
mov
pushf
push
mov
popf
pop
mov
popf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
lahf
pop
mov
lahf
pop
mov
lcall
pop
mov
cmc
xchg
incl
cmp
decl
cmp
decl
ds
addb
add
mov
or
inc
popf
call
inc
lahf
call
dec
mov
call
movsl
call
dec
cmpsl
call
dec
test
lcall
push
lods
lcall
push
scas
lcall
push
mov
fwait
push
mov
pushf
push
mov
pushf
push
mov
pushf
push
mov
popf
pop
mov
popf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
lahf
pop
mov
lahf
pop
mov
lcall
pop
mov
lcall
cmp
cmc
mov
nop
cmc
mov
xchg
cmc
mov
cmc
mov
xchg
decl
add
popl
or
inc
sahf
notl
inc
mov
cmc
xchg
dec
mov
cmc
xchg
dec
movsl
cmc
xchg
dec
cmpsb
cmc
xchg
dec
cmpsl
cmc
xchg
dec
test
xchg
dec
test
cmc
cwtl
push
stos
cmc
cwtl
push
lods
cmc
cltd
push
lods
cmc
lcall
cmc
fwait
push
mov
fwait
push
mov
pushf
push
mov
pushf
push
mov
pushf
push
mov
popf
pop
mov
popf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
lahf
pop
mov
lahf
pop
mov
cmc
lahf
pop
mov
cmc
lahf
pop
mov
negl
add
add
jle
jg
incl
incl
incl
incl
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
incl
loopne
add
add
add
add
incl
loopne
add
add
incl
loopne
add
add
incl
loopne
add
add
incl
loopne
add
add
jmp
add
add
fwait
jmp
add
add
pushf
jmp
add
add
sahf
incl
loopne
add
add
add
add
add
add
add
movsl
incl
loopne
add
add
incl
loopne
add
add
incl
loopne
add
add
incl
loopne
add
add
incl
loopne
add
add
incl
loopne
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
loopne
add
add
add
add
add
test
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
loopne
add
add
call
inc
call
ljmp
add
add
add
addb
add
add
add
jo
jbe
jo
jbe
jo
jbe
jo
jbe
jo
jbe
jo
jbe
jo
jbe
jo
jbe
jno
ja
jno
jns
jne
jns
jne
jns
jbe
jp
ja
jp
ja
jnp
js
jnp
jns
jnp
jns
jl
jp
jl
jnp
jge
jl
jge
jl
jge
jge
jle
jle
jle
jg
jg
jg
jg
cmp
sub
cmp
das
cmp
das
test
xorb
incl
xor
incl
mov
test
mov
xchg
mov
xchg
incl
cmp
decl
cmp
decl
cmp
xchg
decl
xchg
decl
inc
cltd
decl
inc
fwait
decl
inc
pushf
pushl
jo
jbe
jo
jbe
jo
jbe
jo
jbe
jo
jbe
jo
jbe
jo
jbe
jno
ja
jno
ja
jb
jns
jne
jns
jbe
jp
ja
jp
ja
jnp
js
jnp
jns
jnp
jns
jl
jp
jl
jnp
jge
jl
jge
jl
jge
jge
jle
jle
jle
jg
jg
jg
jg
cmp
sub
cmp
das
cmp
das
test
xorb
incl
xor
incl
mov
test
mov
xchg
mov
xchg
incl
cmp
decl
cmp
decl
cmp
xchg
decl
xchg
decl
inc
cltd
decl
inc
fwait
decl
inc
pushf
call
pop
jo
jbe
jo
jbe
jo
jbe
jo
jbe
jo
jbe
jo
jbe
jno
ja
jno
ja
jb
ja
jb
jns
jbe
jp
ja
jp
ja
jnp
js
jnp
jns
jnp
jns
jl
jp
jl
jnp
jge
jl
jge
jl
jge
jge
jle
jle
jle
jg
jg
jg
jg
cmp
sub
cmp
das
cmp
das
test
xorb
incl
xor
incl
mov
test
mov
xchg
mov
xchg
incl
cmp
decl
cmp
decl
cmp
xchg
decl
xchg
decl
inc
cltd
decl
inc
fwait
decl
inc
pushf
call
inc
sahf
pushl
jo
jbe
jo
jbe
jo
jbe
jo
jbe
jo
jbe
jno
ja
jno
ja
jb
ja
jb
js
jae
jp
ja
jp
ja
jnp
js
jnp
jns
jnp
jns
jl
jp
jl
jnp
jge
jl
jge
jl
jge
jge
jle
jle
jle
jg
jg
jg
jg
cmp
sub
cmp
das
cmp
das
test
xorb
incl
xor
incl
mov
test
mov
xchg
mov
xchg
incl
cmp
decl
cmp
decl
cmp
xchg
decl
xchg
decl
inc
cltd
decl
inc
fwait
decl
inc
pushf
call
inc
sahf
call
pop
jo
jbe
jo
jbe
jo
jbe
jo
jbe
jno
ja
jno
ja
jb
ja
jb
js
jae
js
jae
jp
ja
jnp
js
jnp
jns
jnp
jns
jl
jp
jl
jnp
jge
jl
jge
jl
jge
jge
jle
jle
jle
jg
jg
jg
jg
cmp
sub
cmp
das
cmp
das
test
xorb
incl
xor
incl
mov
test
mov
xchg
mov
xchg
incl
cmp
decl
cmp
decl
cmp
xchg
decl
xchg
decl
inc
cltd
decl
inc
fwait
decl
inc
pushf
call
inc
sahf
call
inc
mov
pushl
jo
jbe
jo
jbe
jno
ja
jno
ja
jb
ja
jb
js
jae
js
jae
js
je
jnp
js
jnp
jns
jnp
jns
jl
jp
jl
jnp
jge
jl
jge
jl
jge
jge
jle
jle
jle
jg
jg
jg
jg
cmp
sub
cmp
das
cmp
das
test
xorb
incl
xor
incl
mov
test
mov
xchg
mov
xchg
incl
cmp
decl
cmp
decl
cmp
xchg
decl
xchg
decl
inc
cltd
decl
inc
fwait
decl
inc
pushf
call
inc
sahf
call
inc
mov
pushl
jo
jbe
jo
jbe
jno
ja
jno
ja
jb
ja
jb
js
jae
js
jae
js
je
js
je
jnp
jns
jnp
jns
jl
jp
jl
jnp
jge
jl
jge
jl
jge
jge
jle
jle
jle
jg
jg
jg
jg
cmp
sub
cmp
das
cmp
das
test
xorb
incl
xor
incl
mov
test
mov
xchg
mov
xchg
incl
cmp
decl
cmp
decl
cmp
xchg
decl
xchg
decl
inc
cltd
decl
inc
fwait
decl
inc
pushf
call
inc
sahf
call
inc
mov
call
pop
jo
jbe
jno
ja
jno
ja
jb
ja
jb
js
jae
js
jae
js
je
js
je
jns
jne
jnp
jns
jl
jp
jl
jnp
jge
jl
jge
jl
jge
jge
jle
jle
jle
jg
jg
jg
jg
cmp
sub
cmp
das
cmp
das
test
xorb
incl
xor
incl
mov
test
mov
xchg
mov
xchg
incl
cmp
decl
cmp
decl
cmp
xchg
decl
xchg
decl
inc
cltd
decl
inc
fwait
decl
inc
pushf
call
inc
sahf
call
inc
mov
call
dec
mov
pushl
jno
ja
jb
ja
jb
js
jae
js
jae
js
je
js
je
jns
jne
jns
jne
jl
jp
jl
jnp
jge
jl
jge
jl
jge
jge
jle
jle
jle
jg
jg
jg
jg
cmp
sub
cmp
das
cmp
das
test
xorb
incl
xor
incl
mov
test
mov
xchg
mov
xchg
incl
cmp
decl
cmp
decl
cmp
xchg
decl
xchg
decl
inc
cltd
decl
inc
fwait
decl
inc
pushf
call
inc
sahf
call
inc
mov
call
dec
mov
pushl
jno
ja
jb
ja
jb
js
jae
js
jae
js
je
js
je
jns
jne
jns
jne
jns
jbe
jl
jnp
jge
jl
jge
jl
jge
jge
jle
jle
jle
jg
jg
jg
jg
cmp
sub
cmp
das
cmp
das
test
xorb
incl
xor
incl
mov
test
mov
xchg
mov
xchg
incl
cmp
decl
cmp
decl
cmp
xchg
decl
xchg
decl
inc
cltd
decl
inc
fwait
decl
inc
pushf
call
inc
sahf
call
inc
mov
call
dec
mov
call
jb
ja
jb
js
jae
js
jae
js
je
js
je
jns
jne
jns
jne
jns
jbe
jp
ja
jge
jl
jge
jl
jge
jge
jle
jle
jle
jg
jg
jg
jg
cmp
sub
cmp
das
cmp
das
test
xorb
incl
xor
incl
mov
test
mov
xchg
mov
xchg
incl
cmp
decl
cmp
decl
cmp
xchg
decl
xchg
decl
inc
cltd
decl
inc
fwait
decl
inc
pushf
call
inc
sahf
call
inc
mov
call
dec
mov
call
movsl
pushl
jb
js
jae
js
jae
js
je
js
je
jns
jne
jns
jne
jns
jbe
jp
ja
jp
ja
jge
jl
jge
jge
jle
jle
jle
jg
jg
jg
jg
cmp
sub
cmp
das
cmp
das
test
xorb
incl
xor
incl
mov
test
mov
xchg
mov
xchg
incl
cmp
decl
cmp
decl
cmp
xchg
decl
xchg
decl
inc
cltd
decl
inc
fwait
decl
inc
pushf
call
inc
sahf
call
inc
mov
call
dec
mov
call
movsl
call
add
add
jge
jle
jle
jle
jg
jg
jg
jg
cmp
sub
cmp
das
cmp
das
test
xorb
incl
xor
incl
mov
test
mov
xchg
mov
xchg
incl
cmp
decl
cmp
decl
cmp
xchg
decl
xchg
decl
inc
cltd
decl
inc
fwait
decl
inc
pushf
call
inc
sahf
call
inc
mov
call
dec
mov
call
movsl
call
dec
cmpsl
incl
add
add
jle
jle
jg
jg
jg
jg
cmp
sub
cmp
das
cmp
das
test
xorb
incl
xor
incl
mov
test
mov
xchg
mov
xchg
incl
cmp
decl
cmp
decl
cmp
xchg
decl
xchg
decl
inc
cltd
decl
inc
fwait
decl
inc
pushf
call
inc
sahf
call
inc
mov
call
dec
mov
call
movsl
call
dec
cmpsl
call
add
add
jg
jg
jg
jg
cmp
sub
cmp
das
cmp
das
test
xorb
incl
xor
incl
mov
test
mov
xchg
mov
xchg
incl
cmp
decl
cmp
decl
cmp
xchg
decl
xchg
decl
inc
cltd
decl
inc
fwait
decl
inc
pushf
call
inc
sahf
call
inc
mov
call
dec
mov
call
movsl
call
dec
cmpsl
call
dec
test
add
jg
jg
cmp
sub
cmp
das
cmp
das
test
xorb
mov
out
in
incl
xor
mov
xchg
incl
cmp
decl
lret
loop
mov
ds
decl
xchg
decl
inc
cltd
decl
pop
test
push
out
call
movsl
call
dec
cmpsl
call
dec
test
incl
add
add
cmp
sub
cmp
das
cmp
das
test
xorb
incl
xchg
mov
out
in
incl
ss
xchg
incl
cmp
lcall
fsubr
inc
cltd
decl
cwtl
decl
inc
lcall
pop
test
push
out
call
cmpsb
call
dec
test
xchg
dec
test
call
add
add
cs
das
cmp
das
test
xorb
incl
xor
out
in
incl
aaa
incl
cmp
ljmp
repnz
inc
cltd
enter
cltd
decl
inc
fwait
decl
pop
test
push
out
call
dec
cmpsl
call
dec
test
call
push
stos
jns
jbe
jp
ja
jp
ja
jnp
js
jnp
jns
jnp
jns
jl
jp
jl
jnp
jge
jl
jge
jl
subb
incl
das
test
xorb
incl
xor
mov
out
in
incl
cmp
decl
jl
call
mov
decl
inc
fwait
decl
pop
stos
push
out
call
dec
test
xchg
dec
test
call
push
stos
lcall
and
ja
jnp
js
jnp
jns
jnp
jns
jl
jp
jl
jnp
jge
jl
jge
jl
jge
jge
subl
test
xorb
incl
xor
incl
sar
out
in
incl
cmp
inc
mov
call
mov
decl
inc
popf
lcall
push
out
call
dec
test
call
push
stos
lcall
push
lods
jp
ja
jnp
js
jnp
jns
jnp
jns
jl
jp
jl
jnp
jge
jl
jge
jl
jge
jge
jle
jle
subl
test
xorb
incl
xor
incl
sar
out
in
incl
cmp
jmp
int
call
pop
lods
push
out
call
dec
test
lcall
push
lods
lcall
push
lods
jnp
js
jnp
jns
jnp
jns
jl
jp
jl
jnp
jge
jl
jge
jl
jge
jge
jle
jle
jle
jg
xorb
incl
xor
incl
mov
test
sar
out
in
lcall
fsubr
jmp
int
call
jmp
into
in
mov
push
out
call
dec
stos
lcall
push
lods
lcall
push
lods
lcall
es
jnp
jns
jl
jp
jl
jnp
jge
jl
jge
jl
jge
jge
jle
jle
jle
jg
jg
jg
xorb
incl
xor
incl
mov
test
ret
push
repnz
out
in
jmp
int
decl
push
mov
push
out
push
call
stos
lcall
push
lods
lcall
push
lods
lcall
push
scas
jnp
jns
jl
jp
jl
jnp
jge
jl
jge
jl
jge
jge
jle
jle
jle
jg
jg
jg
jg
cmp
add
add
xor
incl
mov
test
mov
mov
jmp
int
decl
inc
fwait
decl
inc
popf
jmp
into
in
push
call
stos
lcall
push
lods
lcall
push
scas
lcall
push
scas
jl
jp
jl
jnp
jge
jl
jge
jl
jge
jge
jle
jle
jle
jg
jg
jg
jg
cmp
sub
add
xorl
incl
mov
test
mov
xchg
mov
xchg
mov
jmp
int
decl
inc
fwait
decl
inc
popf
call
inc
lahf
call
mov
push
call
lods
lcall
push
lods
lcall
push
scas
lcall
push
mov
jl
jnp
jge
jl
jge
jl
jge
jge
jle
jle
jle
jg
jg
jg
jg
cmp
sub
cmp
add
add
mov
test
mov
xchg
mov
xchg
incl
xchg
ret
fld
mov
decl
inc
pushf
call
inc
sahf
call
inc
mov
dec
stos
aam
push
call
lods
lcall
push
scas
lcall
push
scas
lcall
push
mov
jge
jl
jge
jl
jge
jge
jle
jle
jle
jg
jg
jg
jg
cmp
sub
cmp
das
cmp
add
add
mov
test
mov
xchg
incl
cmp
call
mov
decl
inc
fwait
decl
inc
popf
call
inc
lahf
call
dec
mov
call
sahf
into
push
call
lods
lcall
push
scas
lcall
push
mov
fwait
push
mov
fwait
push
mov
jge
jl
jge
jge
jle
jle
jle
jg
jg
jg
jg
cmp
sub
cmp
das
cmp
das
test
test
mov
xchg
mov
xchg
incl
cmp
inc
xchg
call
mov
decl
inc
fwait
decl
inc
popf
call
inc
lahf
call
dec
mov
call
dec
movsb
call
leave
push
call
scas
lcall
push
scas
lcall
push
mov
fwait
push
mov
pushf
push
mov
jge
jge
jle
jle
jle
jg
jg
jg
jg
cmp
sub
cmp
das
cmp
das
test
xorb
incl
add
add
ss
xchg
incl
cmp
decl
xchg
call
mov
decl
inc
fwait
decl
inc
popf
call
inc
lahf
call
dec
mov
call
dec
movsb
call
movsl
call
mov
push
call
scas
lcall
push
mov
fwait
push
mov
fwait
push
mov
pushf
push
mov
pushf
push
mov
jle
jle
jle
jg
jg
jg
jg
cmp
sub
cmp
das
cmp
das
test
xorb
incl
add
add
aaa
incl
cmp
decl
cmp
dec
cmpsl
sar
mov
decl
inc
pushf
call
inc
sahf
call
inc
mov
call
dec
mov
call
movsl
call
dec
cmpsl
call
jge
push
call
scas
lcall
push
mov
fwait
push
mov
pushf
push
mov
pushf
push
mov
pushf
push
mov
xchg
incl
cmp
decl
cmp
inc
xchg
inc
lcall
popl
decl
inc
popf
call
inc
lahf
call
dec
mov
call
dec
movsb
call
movsl
call
dec
cmpsl
call
dec
test
pushl
repz
push
call
mov
fwait
push
mov
fwait
push
mov
pushf
push
mov
pushf
push
mov
pushf
push
mov
popf
push
mov
xchg
incl
cmp
decl
cmp
inc
cwtl
inc
lcall
popl
decl
inc
popf
call
inc
lahf
call
dec
mov
call
dec
movsb
call
movsl
call
dec
cmpsl
call
dec
test
call
push
stos
ljmp
repz
push
call
mov
fwait
push
mov
pushf
push
mov
pushf
push
mov
pushf
push
mov
popf
push
mov
popf
pop
mov
xchg
mov
mov
decl
cmp
decl
cmp
inc
lcall
popl
decl
inc
popf
call
inc
lahf
call
dec
mov
call
dec
movsb
call
movsl
call
dec
cmpsl
call
dec
test
call
push
stos
lcall
push
lods
jmp
call
push
call
mov
pushf
push
mov
pushf
push
mov
pushf
push
mov
popf
push
mov
popf
pop
mov
popf
pop
mov
mov
decl
cmp
decl
cmp
xchg
decl
xchg
decl
inc
cltd
decl
inc
fwait
decl
inc
pushf
call
inc
sahf
call
inc
mov
call
dec
mov
call
movsl
call
dec
cmpsl
call
dec
test
call
push
stos
lcall
push
lods
lcall
push
scas
lcall
push
scas
lcall
push
mov
fwait
push
mov
pushf
push
mov
pushf
push
mov
pushf
push
mov
popf
push
mov
popf
pop
mov
popf
pop
mov
popf
pop
mov
mov
nop
decl
cmp
decl
ds
decl
xchg
decl
inc
cltd
decl
inc
fwait
decl
inc
pushf
call
inc
sahf
call
inc
mov
call
dec
mov
call
movsl
call
dec
cmpsl
call
dec
test
call
push
stos
lcall
push
lods
lcall
push
scas
lcall
push
scas
lcall
push
mov
fwait
push
mov
pushf
push
mov
pushf
push
mov
pushf
push
mov
popf
push
mov
popf
pop
mov
popf
pop
mov
popf
pop
mov
sahf
pop
mov
mov
xchg
decl
cmp
decl
ds
decl
xchg
decl
inc
cltd
decl
inc
fwait
decl
inc
pushf
call
inc
sahf
call
inc
mov
call
dec
mov
call
movsl
call
dec
cmpsl
call
dec
test
call
push
stos
lcall
push
lods
lcall
push
scas
lcall
push
scas
lcall
push
mov
fwait
push
mov
pushf
push
mov
pushf
push
mov
pushf
push
mov
popf
push
mov
popf
pop
mov
popf
pop
mov
popf
pop
mov
sahf
pop
mov
sahf
pop
mov
subl
test
xorb
incl
xor
incl
mov
test
mov
mov
xchg
decl
cmp
xchg
decl
xchg
decl
inc
cltd
decl
inc
fwait
decl
inc
pushf
call
inc
sahf
call
inc
mov
call
dec
mov
call
movsl
call
dec
cmpsl
call
dec
test
call
push
stos
lcall
push
lods
lcall
push
scas
lcall
push
scas
lcall
push
mov
fwait
push
mov
pushf
push
mov
pushf
push
mov
pushf
push
mov
popf
push
mov
popf
pop
mov
popf
pop
mov
popf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
xorb
incl
xor
incl
mov
test
mov
xchg
mov
xchg
incl
add
add
cmp
xchg
decl
xchg
decl
inc
cltd
decl
inc
fwait
decl
inc
pushf
call
inc
sahf
call
inc
mov
call
dec
mov
call
movsl
call
dec
cmpsl
call
dec
test
call
push
stos
lcall
push
lods
lcall
push
scas
lcall
push
scas
lcall
push
mov
fwait
push
mov
pushf
push
mov
pushf
push
mov
pushf
push
mov
popf
push
mov
popf
pop
mov
popf
pop
mov
popf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
lahf
pop
mov
xorb
incl
xor
incl
mov
test
mov
xchg
incl
add
add
ds
decl
xchg
decl
inc
cltd
decl
inc
fwait
decl
inc
pushf
call
inc
sahf
call
inc
mov
call
dec
mov
call
movsl
call
dec
cmpsl
call
dec
test
call
push
stos
lcall
push
lods
lcall
push
scas
lcall
push
scas
lcall
push
mov
fwait
push
mov
pushf
push
mov
pushf
push
mov
pushf
push
mov
popf
push
mov
popf
pop
mov
popf
pop
mov
popf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
lahf
pop
mov
lahf
pop
mov
incl
xor
incl
xor
mov
xchg
incl
cmp
add
aas
xchg
decl
cwtl
decl
inc
lcall
inc
fwait
decl
inc
popf
call
inc
lahf
call
dec
mov
call
dec
movsb
call
movsl
call
dec
cmpsl
call
dec
test
call
push
stos
lcall
push
lods
lcall
push
scas
lcall
push
scas
lcall
push
mov
fwait
push
mov
pushf
push
mov
pushf
push
mov
pushf
push
mov
popf
push
mov
popf
pop
mov
popf
pop
mov
popf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
lahf
pop
mov
lahf
pop
mov
incl
xor
incl
xor
mov
xchg
incl
cmp
incl
add
add
xchg
decl
inc
cltd
decl
inc
fwait
decl
inc
pushf
call
inc
sahf
call
inc
mov
call
dec
mov
call
movsl
call
dec
cmpsl
call
dec
test
call
push
stos
lcall
push
lods
lcall
push
scas
lcall
push
scas
lcall
push
mov
fwait
push
mov
pushf
push
mov
pushf
push
mov
pushf
push
mov
popf
push
mov
popf
pop
mov
popf
pop
mov
popf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
lahf
pop
mov
lahf
pop
mov
lcall
xor
incl
xor
mov
xchg
incl
cmp
decl
add
add
cwtl
decl
inc
lcall
inc
fwait
decl
inc
popf
call
inc
lahf
call
dec
mov
call
dec
movsb
call
movsl
call
dec
cmpsl
call
dec
test
call
push
stos
lcall
push
lods
lcall
push
scas
lcall
push
scas
lcall
push
mov
fwait
push
mov
pushf
push
mov
pushf
push
mov
pushf
push
mov
popf
push
mov
popf
pop
mov
popf
pop
mov
popf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
lahf
pop
mov
lahf
pop
mov
lcall
pop
mov
incl
xor
mov
xchg
incl
cmp
decl
cmp
add
inc
cltd
decl
inc
fwait
decl
inc
pushf
call
inc
sahf
call
inc
mov
call
dec
mov
call
movsl
call
dec
cmpsl
call
dec
test
call
push
stos
lcall
push
lods
lcall
push
scas
lcall
push
scas
lcall
push
mov
fwait
push
mov
pushf
push
mov
pushf
push
mov
pushf
push
mov
popf
push
mov
popf
pop
mov
popf
pop
mov
popf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
lahf
pop
mov
lahf
pop
mov
lcall
pop
mov
incl
xor
mov
xchg
incl
cmp
decl
cmp
incl
add
add
inc
lcall
inc
fwait
decl
inc
popf
call
inc
lahf
call
dec
mov
call
dec
movsb
call
movsl
call
dec
cmpsl
call
dec
test
call
push
stos
lcall
push
lods
lcall
push
scas
lcall
push
scas
lcall
push
mov
fwait
push
mov
pushf
push
mov
pushf
push
mov
pushf
push
mov
popf
push
mov
popf
pop
mov
popf
pop
mov
popf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
lahf
pop
mov
lahf
pop
mov
lcall
pop
mov
lcall
xor
mov
xchg
incl
cmp
decl
cmp
decl
add
add
inc
fwait
decl
inc
pushf
call
inc
sahf
call
inc
mov
call
dec
mov
call
movsl
call
dec
cmpsl
call
dec
test
call
push
stos
lcall
push
lods
lcall
push
scas
lcall
push
scas
lcall
push
mov
fwait
push
mov
pushf
push
mov
pushf
push
mov
pushf
push
mov
popf
push
mov
popf
pop
mov
popf
pop
mov
popf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
lahf
pop
mov
lahf
pop
mov
lcall
pop
mov
lcall
pop
mov
incl
cmp
decl
cmp
decl
cmp
decl
add
add
inc
fwait
decl
inc
popf
call
inc
lahf
call
dec
mov
call
dec
movsb
call
movsl
call
dec
cmpsl
call
dec
test
call
push
stos
lcall
push
lods
lcall
push
scas
lcall
push
scas
lcall
push
mov
fwait
push
mov
pushf
push
mov
pushf
push
mov
pushf
push
mov
popf
push
mov
popf
pop
mov
popf
pop
mov
popf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
lahf
pop
mov
lahf
pop
mov
lcall
pop
mov
lcall
pop
mov
incl
cmp
decl
cmp
decl
cmp
decl
ds
incl
add
add
inc
pushf
call
inc
sahf
call
inc
mov
call
dec
mov
call
movsl
call
dec
cmpsl
call
dec
test
call
push
stos
lcall
push
lods
lcall
push
scas
lcall
push
scas
lcall
push
mov
fwait
push
mov
pushf
push
mov
pushf
push
mov
pushf
push
mov
popf
push
mov
popf
pop
mov
popf
pop
mov
popf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
lahf
pop
mov
lahf
pop
mov
lcall
pop
mov
lcall
pop
mov
lcall
cmp
decl
cmp
decl
cmp
decl
ds
decl
add
popl
nop
inc
popf
call
inc
lahf
call
dec
mov
call
dec
movsb
call
movsl
call
dec
cmpsl
call
dec
test
call
push
stos
lcall
push
lods
lcall
push
scas
lcall
push
scas
lcall
push
mov
fwait
push
mov
pushf
push
mov
pushf
push
mov
pushf
push
mov
popf
push
mov
popf
pop
mov
popf
pop
mov
popf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
lahf
pop
mov
lahf
pop
mov
lcall
pop
mov
lcall
pop
mov
lcall
pop
mov
add
incl
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ljmp
add
add
add
add
add
add
sbb
add
add
sbbb
repnz
fucomip
rcr
in
lret
fsubr
lret
fsubr
lret
fsubr
lret
fsubr
rcr
out
rcr
out
rcr
in
lret
fsubr
enter
into
ljmp
mov
jmp
into
ljmp
ror
mov
into
mov
loopne
shl
ror
scas
mov
mov
push
mov
xorl
out
out
cwtl
mov
sbb
xor
sbb
adc
cmp
fucom
rcr
in
lret
fsubr
enter
ljmp
enter
shr
mov
call
scas
ficomps
in
mov
mov
call
shl
movsb
sarl
xchg
mov
ror
mov
loopne
stos
rorb
mov
jae
pop
outsb
popf
addr16
xchg
into
out
out
cwtl
mov
sbb
and
xor
sbb
into
out
shl
ror
mov
jecxz
mov
xchg
lods
fisttpl
fisttpl
fstps
loop
in
in
mov
cmpsl
mov
test
fdivrl
int
nop
les
aad
shl
leave
out
mov
movsb
lods
rclb
insb
jnp
bound
pop
outsb
popf
bound
jnp
mov
mov
int3
aam
fsub
out
mov
fadds
jb
sbb
or
sbb
xor
movsb
mov
xchg
jbe
iret
jle
aam
lods
loope
mov
movsl
mov
fwait
mov
fwait
mov
mov
fisttpll
int
xchg
lret
lret
xchg
scas
mov
movsl
mov
movsb
lods
rcrb
mov
jne
pop
outsb
popf
bound
jnp
mov
mov
into
out
fucomip
mov
pop
sbb
movlps
pop
sbb
adc
xor
test
jno
les
fsubl
lods
shl
mov
scas
mov
movsb
mov
fwait
mov
fwait
mov
mov
loop
mov
xchg
lods
fisttpl
sarb
lret
je
les
fcoml
shlb
movl
addr16
push
mov
mov
rcr
in
lock
xchg
sbb
sub
sub
sbb
xchg
stos
into
mov
jl
mov
mov
loopne
mov
stos
rcr
rcr
mov
sahf
mov
sahf
mov
mov
loope
mov
mov
loope
mov
cwtl
scas
fimuls
fstpt
shlb
les
cltd
mov
cltd
mov
cltd
mov
test
mov
fucomp
xlat
fucomip
jl
stos
cmp
sbb
cmp
cs
sbb
xchg
stos
into
mov
mov
xchg
movsl
rcrb
frstor
movsb
mov
mov
fistpl
fbld
cmpsl
mov
movsl
mov
fwait
mov
fwait
mov
xchg
lods
fistl
lret
cmpl
mov
xorl
xchg
popf
les
mov
xchg
mov
loop
fucom
xacquire
nopl
pop
sbb
sbb
cmp
sbb
sbbb
mov
sahf
rorb
aad
stos
fwait
mov
mov
fistpl
fcompl
fbld
loope
mov
cmpsl
mov
movsl
mov
fwait
mov
fwait
mov
xchg
lods
fisttpl
les
stos
pop
outsb
popf
bound
xchg
stos
mov
cmpsb
lods
lret
ret
cltd
mov
rcr
out
xlat
fucomip
cltd
mov
sbb
pop
sbb
sbb
cmp
sbb
dec
gs
ss
xorl
adcl
xchg
mov
fwait
mov
xchg
lods
fistpl
fcompl
fbld
jecxz
mov
movsb
mov
movsl
mov
movsl
mov
lahf
mov
cmpsb
mov
fwait
mov
xchg
stos
jle
shlb
dec
gs
bound
cltd
mov
mov
stos
mov
stos
mov
mov
into
mov
out
int3
loope
xchg
sbb
adc
cmp
xor
inc
jno
pop
lea
ss
sbbl
xorl
test
xchg
lods
fisttpl
fistpl
fsubl
loope
mov
lahf
mov
movsl
mov
scas
mov
mov
out
ret
out
mov
je
mov
jae
xchg
popf
les
fcmovb
xlat
lods
mov
mov
int3
mov
loope
shl
cmpsb
lods
lret
sbb
sub
adc
sbb
cmp
mov
dec
gs
pop
jne
push
pop
lea
xor
ss
subl
test
lods
fistpl
fbld
frstor
fbld
out
call
into
ljmp
int
out
enter
in
test
popf
les
out
aam
mov
fcmovb
into
loopne
mov
cltd
mov
inc
push
jnp
inc
arpl
sub
sbb
and
inc
and
inc
inc
pop
mov
cwtl
fs
fs
pop
jge
inc
pop
mov
xor
dec
outsb
lods
insl
nop
lret
test
test
fwait
mov
mov
fbld
fbld
out
lret
shr
enter
fsubr
iret
fsubr
aad
icebp
aad
hlt
aad
hlt
not
fyl2x
xchg
movsl
cmpsb
lods
lret
jmp
fsubr
mov
in
fldl2t
mov
aam
xchg
cmp
sbb
movlps
sbb
inc
and
inc
inc
pop
mov
test
jge
pop
jge
inc
gs
push
xor
inc
gs
insl
nop
lret
test
jle
aam
cmpsl
aad
mov
fwait
mov
fwait
mov
lahf
mov
movsl
mov
mov
call
int
shr
lret
fsubr
rcr
in
aad
icebp
aad
hlt
neg
call
not
loope
int3
loope
fucom
in
ljmp
test
cltd
mov
outsb
popf
nopl
nopl
or
sbb
inc
adc
mov
cwtl
push
insl
mov
jne
push
insl
mov
gs
jbe
iret
jle
aam
cltd
sarb
aam
stos
fstps
ficomps
fbld
out
jecxz
int3
out
int
ror
enter
fyl2x
aad
icebp
neg
in
fsubp
neg
in
repz
aam
lock
cltd
mov
movsl
mov
mov
cmp
movlps
or
adc
inc
pop
sbb
adc
jno
dec
addl
pop
lea
dec
orl
test
xchg
iret
jb
lret
iret
lods
fistpl
fbld
jecxz
shl
shl
shl
shl
mov
mov
loope
leave
out
shr
rcr
out
aad
hlt
fsubp
neg
in
not
rol
repnz
out
loop
push
sbb
and
or
pop
sbb
and
inc
adc
and
push
sbb
nopl
or
push
insl
mov
nop
lret
jno
les
lret
lea
lahf
mov
cmpsl
mov
lods
shl
rcr
mov
cmpsb
mov
mov
loopne
movsl
loopne
mov
lret
fsubr
rcr
out
aad
hlt
aad
hlt
aad
hlt
rcr
icebp
enter
int3
loope
fucomp
rcr
jmp
idiv
jb
xchg
movlps
or
movlps
pop
sbb
sbb
and
sbb
or
push
pop
adc
pop
adc
pop
adc
add
push
pop
adc
sbb
inc
pop
mov
mov
cmpl
rcrb
in
mov
movsl
mov
lods
mov
mov
loope
xchg
call
xchg
call
test
scas
mov
mov
out
aad
hlt
aam
icebp
rcr
out
iret
fsubr
enter
iret
out
mov
jecxz
aam
aad
ljmp
or
movlps
movlps
pop
sbb
sbb
sbb
push
sbb
pop
adc
pop
adc
pop
adc
or
or
add
or
or
dec
outsb
lods
cmpl
in
mov
mov
frstor
in
xchg
fadds
loope
mov
xchg
stos
test
mov
in
lret
shr
aad
icebp
lret
fsubr
shr
ror
mov
out
lret
call
fyl2x
test
movlps
or
sbb
adc
adc
cmp
sbb
push
sbb
adc
push
pop
adc
pop
adc
pop
adc
or
or
push
pop
adc
add
nopl
ss
xorl
cmpsl
mov
mov
frstor
int3
jl
sarb
jl
sarb
jl
rolb
xlat
cwtl
mov
mov
out
int
shr
mov
in
in
call
call
dec
sub
dec
movlps
movlps
adc
xor
sbb
or
sbb
adc
or
sbb
push
sbb
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
or
add
or
add
cmp
fwait
mov
movsb
mov
lods
mov
cwtl
scas
ficoms
xchg
xchg
xchg
fcoms
mov
call
mov
mov
int3
xchg
mov
cmpsl
mov
mov
out
lret
lret
int3
out
ja
and
inc
or
adc
xor
sbb
sbb
adc
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
add
add
or
mov
mov
cmpsl
mov
xchg
cmpsl
fnstenv
adcl
mov
cmpsb
mov
mov
loope
leave
out
shr
int
out
rcr
out
xlat
fucomip
aam
icebp
mov
loope
jne
jle
rcrb
lods
mov
mov
out
ror
and
adc
adc
movlps
pop
sbb
adc
sbb
push
cs
adc
pop
adc
or
push
pop
adc
pop
adc
pop
adc
add
add
or
in
mov
mov
in
mov
popf
lods
fsts
fldenv
fsubs
rcrb
fisubrl
ljmp
xlat
fucomip
lret
fsubr
mov
loopne
lods
fldenv
loop
ret
call
lret
loop
mov
adc
and
adc
movlps
movlps
movlps
sbb
xor
sbb
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
add
add
or
pop
adc
pop
fwait
mov
fwait
mov
mov
in
mov
test
frstor
frstor
jecxz
mov
mov
loope
shl
aad
repz
icebp
stos
rcr
mov
movsb
mov
mov
call
lret
lret
iret
out
lret
fsubr
divb
cmp
pop
adc
adc
movlps
movlps
adc
cs
sbb
push
sbb
or
push
pop
adc
add
add
or
add
inc
dec
addr16
stos
in
stos
in
mov
lods
mov
mov
out
shl
mov
cwtl
scas
ficomps
fnstsw
out
neg
in
int
out
int
out
xlat
fucomip
lret
shr
mov
loop
mov
mov
out
lret
aad
lret
aad
lret
aad
rcr
icebp
loopne
sti
xchg
fwait
stos
add
or
adc
movlps
pop
sbb
adc
xor
and
or
sbb
push
sbb
pop
adc
pop
adc
pop
adc
add
add
or
sbb
pop
mov
mov
call
lret
leave
out
mov
xchg
cmpsl
fsts
shr
fucom
bnd
std
in
icebp
std
repz
in
cli
mov
out
mov
mov
out
lret
iret
out
lret
aad
rcr
icebp
rcr
repz
repz
icebp
aad
hlt
repnz
adc
or
sbb
sub
sub
adc
or
sbb
pop
adc
add
add
or
add
cmp
jecxz
movsl
jecxz
mov
mov
out
lret
int3
out
int3
out
leave
out
shl
mov
xchg
movsl
rclb
fadd
int
loop
cmc
in
icebp
std
in
icebp
std
repz
repz
jmp
stc
lods
mov
mov
out
into
ljmp
lret
aad
rcr
repz
hlt
aad
hlt
not
loope
in
icebp
std
insb
imul
or
or
sbb
xor
sub
adc
adc
and
pop
adc
add
add
or
add
addr16
xchg
stos
in
stos
in
mov
enter
shr
ror
mov
loopne
stos
rcrb
fadd
int
loop
cmc
jmp
stc
jmp
cmc
repz
loope
lret
shr
lret
aad
rcr
icebp
rcr
icebp
rcr
repz
icebp
aad
hlt
neg
in
mul
in
cli
mov
int3
push
pop
adc
push
sbb
adc
sbb
cmp
sbb
push
pop
adc
push
sbb
pop
adc
add
add
or
add
movlps
jle
rclb
mov
out
int
enter
shr
enter
int3
in
enter
loope
mov
lahf
mov
cmpsb
mov
mov
cmc
jmp
stc
jmp
cmc
aam
icebp
enter
out
iret
fsubr
iret
fsubr
rcr
out
aad
hlt
aad
icebp
aad
hlt
neg
in
fsubp
stc
fsubp
stc
loopne
sti
fsubrp
imull
cs
pop
adc
adc
pop
sbb
and
cmp
pop
adc
add
add
or
add
add
or
add
xor
jecxz
stos
in
mov
mov
out
int3
out
shl
ret
int3
in
lret
jecxz
enter
fcompl
aad
enter
bnd
stc
jmp
cmc
fsubp
not
loope
rcr
icebp
iret
fsubr
iret
fsubr
aam
icebp
aad
icebp
aad
icebp
aad
hlt
neg
in
fsubp
stc
fsubp
stc
fsubp
stc
in
icebp
std
pop
pusha
imul
or
adc
adc
cmp
or
add
add
or
add
add
or
add
push
pop
lea
mov
out
leave
out
int3
out
int
ret
int3
in
lret
jecxz
lret
jecxz
fcompl
aad
leave
out
jecxz
jmp
stc
jmp
stc
jmp
lock
icebp
iret
fsubr
int
out
int
out
int
out
rcr
icebp
aam
icebp
repz
neg
in
fsubp
stc
fsubp
stc
fsubrp
imul
icebp
std
mov
push
pop
adc
sbb
pop
sbb
sbb
or
add
add
or
add
add
or
add
arpl
mov
mov
loope
jecxz
jecxz
leave
out
leave
loop
jecxz
fsubl
aad
leave
out
loop
jmp
stc
jmp
stc
jmp
stc
out
cmc
xlat
fucomip
rcl
jmp
aad
lret
shr
int
out
int
out
rcr
icebp
aam
icebp
neg
in
fsubp
stc
loopne
sti
fsubrp
mul
jmp
mov
int3
push
pop
adc
pop
adc
adc
sbb
add
or
add
add
or
add
add
or
sbb
mov
mov
movsl
mov
mov
loope
shl
shl
shl
loope
fidivl
fcomps
jecxz
loop
jmp
stc
jmp
repnz
ljmp
ror
lret
shr
int
out
rcr
icebp
repnz
mul
jmp
in
cli
loopne
sti
in
icebp
std
int3
loope
push
sbb
pop
adc
adc
pop
sbb
nopl
add
or
add
add
or
add
add
or
rorb
mov
fisubrl
fisubl
fisubrl
mov
fdivs
rcrb
loope
loop
out
cmc
out
cmc
fsub
out
lret
shr
mov
jmp
int
rol
mov
jmp
iret
out
int
out
repnz
sti
in
cli
jmp
stc
jmp
stc
in
icebp
std
enter
push
cs
pop
adc
adc
pop
sbb
movlps
add
or
add
add
or
add
add
or
cs
andl
cmpsl
fsts
int
movsb
shll
movsb
lods
rcrb
les
into
movsl
mov
lahf
mov
mov
in
lock
repnz
jmp
mov
mov
loope
shl
out
int
int
out
repnz
cmc
in
cli
jmp
stc
jmp
stc
in
icebp
std
in
icebp
std
pop
sbb
push
pop
adc
adc
adc
sub
add
add
or
add
add
or
add
cmp
fisttpl
int3
jge
mov
jge
jle
movsl
xchg
test
jge
mov
int3
movsb
lods
rcrb
loope
fsubr
aad
ljmp
mov
fcoms
int3
sahf
movsb
shll
mov
scas
rol
leave
loop
loope
lock
cmc
jmp
stc
jmp
stc
in
icebp
std
mov
xor
pop
adc
adc
nopl
pop
sbb
add
or
add
add
or
add
add
or
lea
sarl
rcrb
inc
jno
mov
and
xor
ds
dec
addr16
xchg
lods
mov
popf
test
mov
loope
int3
out
shl
ror
mov
fsubrs
push
pop
lea
and
xor
cs
rol
rcl
jmp
iret
out
fucomip
out
cmc
jmp
stc
in
icebp
std
lods
mov
push
pop
adc
adc
sbb
sub
pop
adc
add
add
or
add
add
or
test
lcall
dec
inc
dec
jb
lods
lret
pusha
inc
xor
add
or
cmp
lods
lret
into
fwait
stos
shlb
loope
loopne
mov
movsb
lods
rcrb
mov
xor
xor
or
aas
cmp
sarl
outsl
cltd
mov
fucomp
loop
cmc
aam
cld
sbbb
pop
adc
adc
sbb
xor
pop
adc
add
add
or
add
or
sbb
cmpl
rcrb
or
sbb
push
mov
adc
or
or
sbb
movsb
popf
test
lcall
mov
test
loope
mov
mov
aad
lods
rorb
pusha
adc
or
or
sub
and
and
dec
dec
pop
pop
sbb
push
pop
jnp
mov
ret
int3
in
shl
popf
lods
fnstcw
inc
jno
push
sbb
pop
adc
push
sbb
sbb
sbb
or
pop
adc
add
add
or
les
sarb
lret
arpl
inc
dec
jb
and
pop
sbb
aaa
cmp
sbb
dec
dec
pop
xchg
xchg
mov
lahf
mov
mov
frstor
fwait
stos
rcrb
rcrb
into
cltd
mov
daa
cmp
and
sbb
dec
pop
mov
out
mov
mov
mov
sbb
or
sbb
pop
adc
push
sbb
adc
sbb
or
pop
adc
pop
adc
add
sbb
les
int
xchg
je
mov
xorl
mov
xchg
mov
mov
mov
mov
fldenv
fsts
test
mov
mov
jge
jae
mov
je
pop
mov
mov
mov
jb
cmp
sbb
cmp
and
adc
and
add
push
pop
adc
push
sbb
sbb
add
or
add
add
or
add
and
les
lret
sbbb
mov
sahf
movsb
rcll
stos
pop
xchg
push
pop
lea
popf
jnp
mov
mov
lahf
mov
popf
lods
fstps
fsts
pop
xchg
cmp
popa
xor
arpl
pop
cs
inc
and
xor
xor
cmp
dec
sbb
sbb
add
push
pop
adc
pop
adc
sbb
add
or
add
add
or
add
and
inc
jb
lret
mov
jns
outsl
jnp
push
pop
lea
cmp
popa
push
pop
jnp
jnp
xchg
xchg
mov
fwait
stos
rclb
xchg
inc
dec
addr16
inc
and
cmp
sub
adc
or
sbb
adc
adc
and
cs
xor
xor
adc
add
push
pop
adc
pop
adc
adc
add
or
add
add
or
add
sub
je
les
ss
cmpl
jno
cmp
inc
dec
jb
pop
lea
cltd
mov
movsb
lods
rcrb
int
mov
insb
jnp
pop
outsb
popf
inc
dec
jb
sbb
movlps
and
xor
cmp
cs
and
or
adc
and
adc
adc
and
xor
sub
and
sbb
sub
sbb
adc
adc
or
add
add
or
pop
adc
push
sbb
add
add
or
add
add
or
ss
imul
jg
insb
jnp
addr16
jnp
mov
popf
les
shrb
movsl
mov
sahf
movsb
rorl
mov
pop
mov
cs
adc
and
sbb
and
aaa
cmp
and
push
pop
adc
pop
adc
sbb
adc
and
cmp
cs
cmp
and
adc
push
pop
adc
pop
adc
pop
adc
add
add
or
pop
adc
push
sbb
add
add
or
add
adc
or
cmp
imul
nop
les
lret
xchg
movsl
xchg
movsl
xchg
stos
into
movsb
lods
rcrb
into
xchg
push
pop
lea
jnp
sub
push
sbb
adc
and
dec
sbb
or
pop
adc
and
adc
and
adc
and
xor
and
sbb
cs
sbb
push
sbb
add
push
pop
adc
pop
adc
push
sbb
add
push
pop
adc
pop
adc
push
sbb
add
add
or
add
add
or
cs
imul
nop
les
mov
mov
xchg
mov
js
mov
pop
mov
inc
push
jnp
sbb
push
pop
adc
adc
cs
cmp
sbb
add
or
or
and
xor
adc
adc
and
cs
cs
and
and
pop
adc
pop
adc
pop
adc
add
or
sbb
adc
add
or
add
push
pop
adc
push
sbb
add
add
or
add
add
or
inc
imul
nop
les
jl
mov
mov
mov
inc
push
jnp
xchg
inc
dec
jb
sbb
push
pop
adc
adc
cs
cmp
adc
add
or
pop
adc
daa
cmp
and
or
sbb
daa
cmp
and
sub
sbb
adc
push
pop
adc
pop
adc
add
add
or
add
adc
and
adc
pop
adc
pop
adc
adc
add
or
add
add
or
add
sbb
mov
mov
jno
les
jl
movb
sbbb
jnp
cmp
push
pop
lea
jb
sbb
or
sbb
pop
adc
daa
cmp
cmp
adc
push
pop
adc
add
and
xor
and
or
sbb
and
and
sbb
sbb
adc
sbb
pop
adc
pop
adc
pop
adc
add
add
or
pop
adc
pop
adc
push
sbb
sbb
add
or
pop
adc
pop
adc
push
sbb
add
add
loopne
inc
sbb
lahf
add
add
push
pop
jo
xchg
adc
mov
adc
jnp
xchg
jecxz
and
pusha
and
sub
add
push
lock
scas
push
inc
jo
add
adc
mov
sbb
inc
xchg
mov
push
mov
and
dec
ds
inc
lock
add
ret
adc
adc
cmp
push
push
je
add
xor
add
add
xor
mov
pop
or
sub
pusha
add
test
pop
push
dec
bound
add
arpl
stc
pop
push
or
jns
lahf
loopne
cwtl
adc
dec
push
outsb
imul
ja
sbb
pop
add
jo
jmp
aas
sbb
mov
inc
lods
add
test
movsb
enter
add
cmp
and
jae
add
cmp
add
xchg
jle
add
fs
cmp
pop
push
add
les
dec
add
cmp
sbb
add
and
add
cld
in
jb
cmp
lock
mov
call
in
addb
add
mov
adc
inc
mov
inc
add
fdivl
movzwl
pop
push
xor
sbb
cltd
cmp
dec
or
jp
add
sub
sbb
push
cmp
orb
cmpl
add
push
push
or
xor
push
mov
enter
jne
mov
lret
inc
mov
in
add
mov
add
rorb
mov
in
push
add
cli
fs
out
add
adc
push
pop
nop
in
mov
push
inc
add
pop
je
repnz
fsubr
jae
test
cwtl
add
push
sbb
sbb
add
jg
adc
cltd
bound
inc
arpl
sbb
mov
cld
push
lret
add
pop
ret
sbbl
mov
cld
adc
ljmp
js
mov
fists
inc
mov
or
es
jne
add
call
add
xchg
orl
jnp
add
add
ret
add
pop
jmp
out
inc
xchg
call
test
push
pop
pop
mov
je
add
clc
mov
xor
mov
hlt
push
into
add
incl
int
add
jne,pt
sarb
sub
jb
inc
inc
gs
seta
popa
in
add
add
sarl
push
iret
add
sub
ss
sub
test
sbb
jle
pop
xchg
adc
shr
sarb
test
or
cmp
test
cmp
stc
rclb
nop
loop
mov
inc
lock
or
mov
repz
decl
pop
nop
repnz
push
dec
push
shlb
jo
mov
cmp
adc
add
mov
dec
add
add
call
clc
cmc
pop
fs
and
fnstenv
add
popa
push
jo
rorb
jne
jns
xchg
add
and
push
add
dec
fmull
aas
in
add
movl
add
sti
and
push
cli
lds
repz
fiaddl
dec
hlt
jae
and
xchg
cmp
pop
ja
xor
push
xchg
mov
mov
sub
lcall
sub
and
dec
adc
sbbl
pusha
pop
popa
add
mov
rclb
cmp
and
adc
xchg
sbb
adc
add
cwtl
test
add
cmp
outsl
add
sbb
ret
daa
and
icebp
push
dec
cmp
sub
fwait
inc
ljmp
pop
addb
or
sti
pusha
nop
add
clc
fucomp
mov
cmp
js
push
pop
mov
shrb
leave
add
or
ljmp
ss
lret
lock
xchg
push
add
ret
inc
cpuid
cltd
and
xor
sahf
jmp
add
cwtl
mull
sub
inc
sub
and
jae
or
ret
mov
std
or
xor
sub
arpl
bsr
aaa
add
aas
cmpsl
xchg
out
shl
pop
aam
ja
add
jg
mov
clc
xlat
mov
push
sbb
stos
add
je
cli
inc
dec
in
or
and
inc
xor
leave
enter
call
pop
add
xchg
int3
xor
cmp
and
movsl
xlat
and
push
add
rep
int
out
aaa
add
cmpsb
pop
dec
pcmpeqb
xchg
jbe
add
pusha
sbbb
rclb
sub
mov
push
test
mov
jnp
jp
add
aaa
or
pop
leave
test
jne
clc
push
mov
pop
out
push
mov
insl
dec
lods
sub
add
mov
bound
in
test
lcallw
jmp
add
imul
jne
cmp
add
jp
in
int3
cmpl
fwait
test
adc
inc
inc
dec
pop
stos
or
adc
mov
push
lds
jge
lock
cwtl
inc
sbb
add
rolb
aam
add
pop
cmp
jae
hlt
iret
add
mov
push
add
push
mov
jl
pusha
pop
and
add
dec
cmp
add
adc
notb
repnz
pop
cmp
xchg
stos
mov
lea
sub
push
pushl
out
sub
and
mov
inc
fsts
jle
dec
adc
pop
mov
popa
inc
ret
stos
sahf
notb
clc
jo
add
sub
test
add
adc
leave
rolb
hlt
inc
cmp
inc
add
mov
jl
and
mov
mov
push
dec
xchg
jmp
in
test
cs
and
push
jl
stc
add
bts
push
aad
adc
sahf
sbb
jo
mov
add
inc
push
cmpsb
mov
hlt
xchg
add
popf
cmp
aad
cmp
jb
out
add
push
les
rolb
adc
punpcklbw
movsl
add
add
inc
imul
fistl
pop
loopne
adc
add
add
adc
dec
or
test
shrb
add
add
and
add
lcall
jmp
and
dec
fisubrl
sbb
sub
push
add
ret
add
ljmp
add
dec
xor
rcrl
or
push
clc
adc
add
jne
call
test
sub
mov
test
lret
push
inc
cwtl
sbb
add
cli
adc
add
xor
or
mov
jl
inc
or
mov
cwtl
or
incl
push
rolb
loop
add
sbb
add
enter
mov
or
jl
ljmp
test
dec
dec
or
ret
andl
lds
ss
xor
loope
sldt
je
sub
add
fiaddl
ret
sub
adc
sar
loop
and
ljmp
jb
sub
cmp
bound
push
push
and
mov
add
push
and
pop
xor
mov
addr16
or
pop
cli
clc
fadds
shll
jne
fpatan
add
push
xor
inc
inc
push
push
orl
jmp
clc
push
or
les
or
loop
in
add
fdivrl
clc
lea
aaa
sub
movq
cmp
out
xlat
lds
fistps
dec
jge
dec
imul
push
pop
xchg
data16
sbb
jmp
and
inc
add
adc
lock
not
xor
mov
stos
clc
sbb
jae
into
push
ret
lea
lret
shr
mov
add
out
xor
mov
pop
pop
dec
pop
je
mov
rcr
mov
add
sub
add
rcrw
aam
rcrb
imul
add
or
cld
pop
xor
jecxz
inc
adc
adc
xchg
pop
lcall
add
cmp
or
mov
xor
cmpb
jle
add
cmp
mov
add
adc
enter
adc
pop
dec
sbb
cmovo
imul
push
in
sbb
stc
movsl
jg
cld
popa
shll
pop
and
inc
mov
inc
and
addr16
pop
rcrl
and
call
mov
add
mov
aam
and
add
dec
pop
adc
push
add
jp
add
enter
xchg
insl
mov
xor
lcall
adc
xchg
fxch
pop
sahf
aam
icebp
adc
mov
xor
mov
sub
jne
add
mov
add
int3
test
push
inc
add
push
dec
cmp
addb
mov
cmp
push
xchg
pop
outsb
les
rsm
shlb
pusha
pop
test
push
mov
addb
loope
adc
ja
jle
mov
insb
loopne
jnp
or
inc
mov
jmp
inc
pop
sub
and
in
shll
fmuls
dec
xchg
sbb
add
xchg
negb
add
mov
movsb
sub
push
popl
mov
sub
adc
mov
out
in
and
dec
push
pop
cmc
fs
add
add
xchg
jae
sub
jmp
cmp
mov
add
add
cmpsl
add
pop
mov
dec
push
pop
ljmp
call
xchg
add
cltd
cmp
dec
jmp
add
leave
push
push
sbb
js
ret
jae
mov
mov
jle
push
adc
xchg
xchg
int
inc
test
adc
add
cmpsl
mov
jle
jne
add
and
jl
add
clc
sahf
dec
lret
cmp
popl
or
dec
and
or
push
movsl
add
sub
add
push
sarb
loope
dec
sub
or
sub
sbb
pop
push
fists
inc
jne
add
sbb
xchg
inc
push
and
pop
mov
andb
pop
test
and
mov
cmp
cli
sub
pop
sub
lock
out
add
hlt
adc
add
test
testb
lock
movsb
inc
inc
or
jmp
or
ret
mov
pusha
add
add
inc
pop
mov
add
pushf
push
or
jno
sub
push
aas
and
adc
add
cmp
sbb
add
pop
push
movsb
add
dec
cmp
cmp
jne
jno
push
les
aam
or
jle
test
imul
add
add
je
out
pop
cli
call
test
aaa
orl
mov
mov
add
dec
pop
push
push
or
add
mov
xor
mov
stc
and
add
adcb
or
out
and
mov
adc
mov
movl
jl
pusha
lahf
arpl
mov
cmp
adc
add
add
lea
dec
push
test
sub
jmp
add
and
cmpsb
sarl
add
nop
pusha
push
sbb
pop
xchg
push
mov
add
push
xor
xor
stos
cwtl
mov
jge,pn
and
in
dec
push
push
sub
sub
sbb
push
add
enter
add
lock
mov
fstpl
lret
add
and
push
in
cmp
lcall
icebp
fimull
mov
in
sub
sahf
xchg
xchg
and
add
inc
lods
xor
lea
xor
dec
loop
sub
jb,pn
and
inc
or
fmul
cli
mov
add
ja
mov
adc
cmpsl
add
pop
repnz
je
add
inc
and
inc
cmp
or
add
pop
cld
jmp
shrl
seto
clc
pop
dec
sbb
mov
push
lock
add
cmp
dec
adc
call
jmp
jg
add
mov
pop
lret
add
call
adc
xlat
adc
ret
xchg
add
lock
add
add
mov
test
pop
je
xor
mov
push
mov
xchg
add
xor
sbb
jo
in
aas
stc
sub
cmp
adc
add
push
xlat
xor
out
add
or
scas
add
call
dec
add
add
dec
dec
pop
fsubl
or
mov
enter
jo
adc
into
fcmovnu
cmp
add
loopne
jae
add
pop
in
or
push
add
mov
push
cli
mov
xor
gs
push
inc
push
add
syscall
cld
rorb
mov
and
cmc
std
add
adcb
divl
je
das
xchg
sub
js
rep
ud0
movsb
and
xchg
add
cld
inc
jl
movsl
add
xor
xchg
pop
shlb
or
add
push
cltd
push
add
pop
leave
mov
faddl
cmp
jbe
cmpb
and
or
jnp
test
adc
jmp
out
pop
and
add
add
or
adc
fcompl
sub
add
dec
sub
or
pop
adc
add
xchg
add
es
mov
nop
mov
xor
push
jae
add
or
or
and
mov
ja
add
jmp
jb
add
pop
mov
mov
push
or
add
xchg
mov
addr16
xchg
loopne
add
in
fdivrs
mov
lock
data16
add
addb
push
hlt
add
jl
rolb
xor
div
mov
add
in
sarl
pusha
mov
add
sub
rorb
std
fildll
sbb
push
sub
pop
and
cmp
leave
push
mov
or
mov
xchg
nop
adc
pop
in
cwtl
data16
fimull
push
jo
cmpsb
jb
adc
add
std
shl
pop
mov
or
inc
add
sbb
jbe
fxch
jmp
and
mov
push
add
shr
fwait
rolb
xchg
pop
daa
fcompl
out
add
mov
fnstenv
inc
dec
scas
adc
pop
repnz
cmp
testl
in
jmp
lret
sbb
pop
shl
add
or
or
add
repnz
jp
jae
mov
pop
enter
add
pop
xor
jp
cmpb
or
icebp
cmpsl
add
lods
sbb
nop
je
add
adc
mov
imul
inc
adc
test
or
mul
add
push
int3
push
inc
xor
icebp
iret
add
sub
xchg
fildl
inc
xchg
xor
sbb
add
idivb
add
add
sub
mov
add
cmp
xchg
add
jnp,pn
add
and
push
mov
and
test
testb
mov
and
push
pop
cltd
enter
ljmp
addl
pop
and
sbb
sub
sub
add
pop
loop
movntq
nop
jecxz
test
sarb
add
add
or
add
ja
sub
clc
or
sub
xchg
fadds
pusha
push
xor
out
int
loope
aam
add
pop
xor
sub
subb
add
lock
out
rclb
in
add
lds
mov
cmp
inc
xor
sbb
popa
jb
mov
pcmpgtb
adc
inc
add
push
or
add
rcl
jmp
sbbb
mov
dec
sub
mov
mov
sub
leave
add
pop
inc
cmp
shll
dec
fcmovnu
xchg
add
mov
push
dec
rclb
add
jmp
pop
add
ffreep
add
add
fiaddl
pushl
ja
dec
pusha
push
icebp
addb
pop
shl
xor
add
mov
imulb
ljmp
sub
jne
and
nop
inc
add
jmp
stos
dec
mov
jp
jbe
daa
mov
cli
nop
lds
mov
inc
dec
inc
cmp
and
pusha
pop
sbb
es
mov
lock
fadds
rclb
or
add
pop
pop
xchg
adc
psubsb
or
dec
pop
mov
or
sbb
push
sbb
nop
jmp
pop
xor
pinsrw
or
pop
jne,pt
sbb
addl
and
sub
or
dec
ja
mov
add
adc
mov
mov
add
dec
pusha
inc
cmpsl
clc
lea
xor
push
addr16
push
jmp
inc
mov
add
pop
dec
add
sub
cwtl
movl
pusha
gs
or
adc
cmp
aad
rolb
pop
inc
loopne
cltd
push
scas
adc
mov
or
mov
add
mov
and
aas
sldt
in
mov
loopne
cwtl
or
push
push
inc
push
inc
add
jb
insb
popa
outsb
fs
ja
add
jo
imul
inc
add
dec
push
popa
jae
push
add
shrl
add
sub
xlat
loopne
add
xor
mov
inc
xchg
xchg
insb
cli
push
je
or
call
mov
pop
jmp
int3
mov
ss
or
jbe
inc
outsb
sbb
call
add
sub
sub
add
cmp
shrb
add
or
call
mov
push
ret
popl
or
call
sub
int3
or
pop
pop
xor
mov
push
cld
push
add
mov
xlat
stos
mov
pop
fcomp
adc
adc
pop
inc
xchg
mov
add
mov
push
lock
sar
pop
mov
jmp
cmp
rcrl
fs
sbb
ret
mul
in
jnp
fidivl
cmp
add
je
dec
jecxz
cltd
sub
adc
add
rolb
sbb
cmp
xor
dec
mov
sbb
add
sarb
icebp
push
and
sarl
add
movl
clc
or
mov
jg
pop
add
enter
inc
cld
negl
popa
sub
push
fstps
xchg
add
jbe
adc
adc
sbb
sbb
sbb
add
push
andl
test
mov
enter
cmpsb
add
lret
je
add
incl
loope
mov
test
push
cwtl
inc
add
es
adc
sbb
mov
sbb
or
movl
into
jmp
or
pop
cwtl
or
jno
mov
inc
sub
les
add
xor
sub
shll
sbb
jl
adc
push
clc
lods
add
mov
mov
jge
jbe
cmpb
sbb
adc
andl
in
add
cmp
xlat
push
enter
dec
repz
push
bound
add
or
leave
cwtl
add
fadds
push
loop
pop
mov
dec
push
pop
or
push
adc
dec
dec
jp,pt
rorb
xor
or
pop
movsbl
clc
adc
popf
jbe
add
sbb
insl
fwait
imul
xchg
outsb
loope
cmp
pop
cmp
and
mov
add
addps
lea
cmp
and
jle
nop
fcompl
pop
xorl
push
sbb
add
adc
outsb
cld
add
sbb
cld
adc
rorb
xor
add
adc
pop
mov
shl
and
cli
out
push
je
call
xchg
loopne
jo
jbe
sub
loop
and
frstor
aad
les
out
js
inc
stos
popa
dec
inc
jnp
addb
sbb
or
loope
or
add
lret
je
rorb
add
pop
fistl
fimull
add
sbb
push
sbb
repnz
rcll
xor
jae
pushl
mov
in
pop
add
movl
push
adc
add
xchg
sbb
sti
mov
daa
add
or
sub
add
fisttpll
pop
je
xchg
es
nop
mov
jne
or
lret
bound
dec
push
or
pop
add
cmp
mov
inc
push
add
dec
jb
and
clc
test
inc
addb
dec
out
add
fs
push
cwtl
xor
mov
jnp
push
add
jg
imul
add
dec
lret
rolb
adc
fwait
js
add
ss
dec
sbb
push
mov
pop
dec
mov
testl
popl
push
adc
jns
pop
test
mov
add
xchg
xchg
mov
hlt
loope
or
mov
dec
push
mov
xor
enter
mov
add
pop
sub
pop
push
push
jge
or
enter
add
das
cmp
push
mov
ja
mov
mov
addb
dec
lock
push
mov
xchg
cmp
sarb
pop
push
push
adc
orb
dec
sarb
in
jno
mov
add
faddl
add
loop
cwtl
sub
das
mov
sub
mov
je
add
je
rcll
xchg
and
call
rolb
inc
push
sub
xchg
iret
cmp
jmp
lock
les
aas
orl
or
ret
xchg
xchg
adc
cmp
sub
inc
adc
add
and
cmp
std
wrmsr
add
push
insb
xchg
es
sub
mov
sub
pop
lock
and
iret
inc
push
xor
sbb
into
in
adc
fdiv
push
clc
or
frndint
push
add
jmp
push
or
dec
ret
add
insb
pop
ret
and
repz
repnz
inc
add
adc
mov
adc
push
pusha
popl
je,pn
push
xorb
add
fsubs
out
insl
add
inc
cli
stc
push
pushf
imul
or
mov
adc
cmp
add
or
call
je
pusha
push
add
fs
sbbb
add
enter
jo
push
add
or
inc
aas
cmp
xor
and
inc
push
xchg
sbbl
pop
add
xchg
sbb
test
mov
jle
mov
or
add
inc
xchg
rclb
and
jg
jmp
shlb
xchg
test
xor
add
mov
add
xor
fisttpl
mov
repz
sbb
add
fistpll
or
add
push
sbb
mov
jge
les
mov
sbb
and
cltd
adc
sbb
or
dec
les
xchg
push
cmpl
cmp
push
add
clc
inc
mov
dec
pop
enter
add
loop
pop
in
add
std
faddl
nop
jns
or
push
add
xor
lods
add
lret
mov
lds
pop
je
sbb
inc
push
push
js
add
sbb
cmc
xchg
out
lds
mov
test
add
enter
or
in
lods
pushf
shr
movl
cmp
out
mov
adc
dec
adcl
icebp
stos
cmp
xchg
sub
mov
incl
and
mov
push
add
rclb
inc
fwait
in
js
pop
dec
xor
inc
adc
add
push
and
aaa
xchg
add
jae
add
fcomps
inc
inc
leave
test
mov
sbb
jnp
fidivs
cli
orl
dec
orb
sarb
add
mov
out
sbb
adc
xorb
and
inc
push
or
mov
mov
addr16
add
jmp
sbb
ds
and
jo
pop
outsb
dec
adc
call
or
jne
das
add
addb
cmp
jbe
lods
push
sbb
movsb
xor
sub
pop
sub
cmp
shl
pusha
jg
fldl
mov
leave
jne
ret
sub
or
cmp
mov
add
pop
dec
lock
ret
sti
dec
add
add
mov
jb
add
outsb
push
jae
inc
dec
add
jle
addr16
arpl
loopne
cmp
xor
je
jmp
repz
nop
mov
arpl
ja
jge
dec
xchg
fists
xchg
add
andb
lea
add
dec
jl
sarb
pop
lea
scas
rclb
add
mov
push
sbb
movl
or
jle
push
fisubrl
and
add
pop
sbb
cmc
inc
addb
jae
icebp
xor
dec
add
pop
adcb
xchg
dec
lret
nop
or
fucom
fcomps
add
scas
or
or
lret
cld
test
pop
mov
xor
mov
mov
clc
lods
enter
add
or
int3
xchg
and
paddq
mov
js
cmpb
icebp
flds
stc
ljmp
movl
sti
sub
add
mov
jo
or
push
push
push
adc
call
test
mov
into
je
xor
mov
push
es
and
mov
loope
sub
inc
pop
add
cmp
push
mov
sub
mov
push
adc
or
loop
lock
cli
or
les
mov
call
sarl
pop
pop
sub
in
sub
lret
sub
bound
or
imul
mov
or
jmp
push
cmp
dec
and
mov
inc
movsb
dec
add
mov
inc
mov
pop
add
rcrl
shll
scas
cmp
out
ljmp
mov
cld
notl
push
bndldx
mov
jns
lock
or
cli
cmp
mov
add
es
int3
lea
pop
testl
popa
cmp
cmpb
clc
pop
call
rolb
imul
adc
sub
sub
add
add
add
jne
xchg
fists
fmuls
in
inc
arpl
push
and
addps
xchg
add
std
mov
mov
add
jmp
pop
push
add
push
push
cmpsb
sub
dec
add
inc
cld
add
iret
lods
pop
xor
push
add
lods
mull
fadds
into
add
jmp
lods
dec
bound
pop
lea
xchg
loopne
insb
clc
lahf
mov
test
lock
sarb
push
mov
jl
ja
add
ret
ljmp
pop
pop
int3
dec
dec
add
add
movl
pop
pushl
and
sub
cmp
pop
cmp
movsb
cmp
adc
nop
jecxz
incl
push
jae
add
popa
pop
lret
cmp
xchg
xchg
test
jmp
clc
pop
inc
js
adc
inc
loop
cmp
jo
mov
sub
orl
xchg
adc
add
pop
push
out
or
xorb
sub
xor
es
jl
add
fidivrl
pop
sub
pusha
ds
sahf
add
mov
and
rolb
mov
jecxz
add
and
sahf
mov
mov
inc
push
dec
add
jl
pusha
add
movd
aas
sub
add
int
inc
loopne
add
or
lea
jg
and
lock
rcll
inc
add
dec
xchg
xor
dec
cld
mov
sbb
or
adc
aad
xor
cmp
repz
mov
pop
add
inc
icebp
cmc
sbb
and
inc
lret
and
lock
lcall
scas
pop
and
jne
pusha
call
dec
or
loopne
ret
add
cmp
jo
cld
subb
or
add
rorb
cmp
add
pop
sub
push
out
add
test
aam
xchg
pop
pop
fldt
xchg
xor
inc
add
ficompl
jmp
push
pushf
mov
inc
cmp
add
shl
repnz
inc
sbb
sub
cmpb
adc
mov
push
jbe
add
mov
mov
add
pop
mov
mov
xchg
push
add
inc
xchg
inc
ja
add
or
sub
sbb
inc
jnp
int
adc
push
adc
aas
mov
sbb
push
push
cs
fucomip
add
aam
pusha
test
sbb
and
xchg
adc
sbb
add
and
push
mov
shlb
lea
add
les
add
sub
mov
push
enter
pop
sbb
mov
cmp
xor
or
mov
or
jg
inc
add
decb
ud0
imul
jns
cmpsl
dec
add
or
adc
repz
push
pop
or
into
pushf
clc
xor
add
mov
push
or
push
add
pop
gs
and
orb
push
sbb
and
push
lock
int3
aam
leave
inc
push
jmp
inc
inc
xor
mov
aam
adc
pop
sub
push
xchg
xchg
fsubl
inc
in
pop
or
bound
push
fcoms
mov
add
cltd
mov
jg
sbb
pusha
cmp
icebp
xor
add
sbb
cmp
sub
das
sti
or
adc
cmp
push
repz
pop
das
ret
xor
sub
push
inc
xchg
or
js
dec
test
repnz
inc
cmp
adc
and
dec
das
push
or
xor
aas
in
sub
xor
cmp
inc
add
pop
adc
jp
sbb
mov
outsb
add
pop
cli
iret
add
push
je
jnp
or
push
incb
cmpsl
cli
lret
add
cmp
insl
sbb
xorb
and
add
rorb
push
add
outsl
cld
sbb
push
or
rorl
push
ret
dec
fidivl
cmp
add
cmpl
push
add
push
in
stc
scas
pop
lock
xlat
inc
cmp
inc
mov
cli
lahf
and
add
clc
jmp
nop
sbb
pop
test
insb
lea
add
js
nop
add
test
cld
push
dec
dec
cltd
sub
and
arpl
mov
xor
push
cld
mov
push
sbb
inc
inc
inc
and
pop
fs
sbb
adc
adc
shl
jne
sub
ljmp
shll
jmp
sub
inc
and
popa
or
add
mov
dec
mulb
je
xorb
dec
and
pop
or
jmp
leave
cmpsb
dec
add
xor
sub
jecxz
dec
cltd
adc
add
or
ja
xor
incb
pop
leave
aaa
xchg
inc
ljmp
stc
and
ja
add
adc
or
cmp
dec
jmp
or
sbb
arpl
xchg
push
push
pop
in
scas
dec
dec
add
sarl
pop
push
jae
pop
sub
fisubrs
out
mov
icebp
xchg
ficoml
jne
and
xor
nop
push
in
jae
add
outsl
out
cli
push
mov
adcb
lcall
mov
cs
stos
mov
mov
rolb
aad
cmp
test
xchg
pushw
pop
xlat
cmp
mov
mov
or
sub
adc
sub
inc
or
cmp
push
inc
cmpsl
ljmp
adc
pop
push
mov
scas
aas
push
mov
adc
int
call
sbb
icebp
pop
shlb
mov
jmp
repz
ret
xor
pop
cli
loopne
and
je
fstl
loop
jne
sbb
and
sbb
das
xchg
insb
jmp
ret
add
mov
add
popa
cmp
orl
inc
std
test
or
daa
jmp
adc
adc
mov
divb
add
pusha
cmp
jae
sbb
ss
mov
jo
mov
adcb
jne
daa
add
push
pop
xchg
icebp
jns
popf
orb
or
add
mov
push
add
and
rol
dec
sbb
int3
xchg
xorl
or
add
dec
adc
inc
xor
fmuls
pop
xlat
add
inc
sub
in
push
and
call
lea
push
inc
cmp
fildl
daa
ds
pop
pop
aad
in
add
xchg
mov
pop
or
add
and
sub
dec
add
ror
sbb
shlb
outsl
lret
rclb
int3
or
aam
pop
sub
lock
xor
mov
orb
add
or
add
dec
jge
daa
push
rcrl
add
lods
dec
sub
pushf
push
add
lahf
mov
cmp
add
cmp
sub
aam
or
cmpsb
mov
call
lcall
or
inc
add
insl
push
pushf
fiadds
mov
or
popa
add
push
cmp
cmpsl
pusha
add
sti
or
push
inc
push
stos
shrb
inc
test
jp
pop
adc
dec
test
popa
mov
and
jae
sbb
ds
mov
push
scas
arpl
repnz
and
add
in
pop
pop
gs
mov
add
test
push
xchg
rol
in
adc
fcoms
add
shll
add
insb
cli
movsl
in
outsl
cmpl
add
pop
jnp
mov
inc
subb
addl
dec
loop
add
sahf
push
ds
dec
adc
out
mov
and
daa
mov
or
cmp
ret
inc
loope
pop
push
add
adc
stos
add
test
push
jg
add
popw
mov
call
cmp
rcrl
and
add
loopne
or
popf
ret
mov
sbb
add
mov
push
aas
cmc
add
and
mov
pop
add
xor
cld
xor
imul
jle
add
cmp
xchg
inc
cmpsb
push
mov
add
pop
add
xor
push
mov
dec
sbb
movsl
pushf
push
inc
xchg
push
scas
ret
push
mov
sti
enter
add
incl
and
incb
push
pop
in
push
push
lods
ret
pop
jmp
decl
dec
jo
adc
fcoms
leave
stc
and
jge
repnz
inc
inc
sbb
add
sbb
lret
push
test
into
push
adc
pop
jbe
lods
jmp
enter
test
ret
incl
push
pop
dec
and
nop
jecxz
adcl
jae
add
push
fiaddl
ret
cmpsb
push
add
cmpl
jle
test
jae
cs
subb
inc
aaa
jl
dec
inc
add
dec
faddl
addl
ret
mov
and
out
sub
sbb
mov
sbbl
sbb
push
inc
pop
xchg
js
xor
dec
clc
je
mov
xor
dec
push
or
mov
sub
push
sbb
adc
test
add
add
pop
xor
pop
dec
add
push
jno
mov
lret
inc
int3
mov
clc
pop
jl
and
rclb
cwtl
les
in
sbb
dec
int3
push
sub
inc
iret
cmpl
jne
pop
push
xchg
sub
add
sbb
loope
adc
add
add
or
and
jne
add
mov
adc
ja
out
jmp
cmpsb
mov
cld
pop
add
in
jne
out
hlt
clc
add
lret
mov
lahf
push
add
dec
hlt
adc
pop
add
cld
pop
iret
je
inc
movsb
and
and
nop
push
out
je
sub
fdivl
test
insl
out
push
push
hlt
mov
mov
popl
test
cmp
arpl
add
js
pshuflw
push
adc
loope
cmp
add
ljmp
loop
sub
in
xchg
pop
repz
jne
vandpd
ljmp
stos
cmp
add
rolb
cmovb
xor
push
push
inc
xor
add
xor
jbe
sub
das
in
xlat
add
fimull
je
jmp
or
es
sub
pop
push
rolb
inc
cmp
dec
movb
inc
fwait
add
pop
inc
mov
pop
outsb
ffreep
rolb
add
clc
dec
enter
gs
pusha
insb
xor
cs
jmp
lds
inc
sar
outsl
outsb
add
popa
fsubrl
call
mov
xor
pop
cmpsl
movsb
jge
jecxz
sub
pop
roll
inc
out
fs
push
dec
lahf
je
add
add
push
les
jb
dec
jo
dec
push
shlb
push
subb
mov
shlb
stos
jecxz
add
push
mov
add
mov
clc
dec
stos
or
sub
mov
loope
xor
dec
repz
and
xchg
repz
mov
sbb
es
dec
jo
adcb
and
scas
mov
jge
cmp
stc
pop
pushf
aas
out
pop
arpl
mov
add
mov
add
dec
and
shrb
add
addb
mov
scas
sub
sbb
add
push
adc
inc
imul
pop
mov
push
add
cmc
inc
and
leave
fneni(8087
adcb
add
jb
gs
xchg
ltr
arpl
jg
jae
dec
pop
sbb
pop
lret
nop
xchg
add
loopne
mov
fisttps
cmp
sub
mov
mov
adc
cmpsl
mov
push
or
or
and
sub
mov
movsl
add
stos
adc
jmp
xchg
add
pop
or
add
push
mov
sub
xchg
pop
test
inc
add
clc
in
xor
add
xor
test
dec
sub
clc
xchg
in
add
and
or
jnp
fwait
fiaddl
cmp
push
inc
add
cltd
push
mov
or
iret
add
adc
test
jne
aas
sbb
sbb
cld
cmp
add
or
add
push
inc
jmp
pop
mov
fistpl
mov
push
add
jne
sub
xchg
mov
aam
sub
ret
gs
jp
popf
out
dec
ret
scas
add
into
jge
sub
sub
mov
or
js
fiaddl
sarl
and
add
adc
inc
repz
pop
stc
outsl
cmp
fyl2x
cmp
in
xor
and
out
mov
add
add
dec
xchg
add
inc
jle
aas
daa
or
add
ret
dec
das
movsb
mov
xchg
mov
push
or
add
push
dec
in
inc
adc
xor
ret
dec
add
ds
add
inc
push
repz
mov
leave
loope
notb
test
dec
xor
dec
mov
push
pop
xor
jmp
sub
push
clc
mov
mov
mov
add
aam
dec
mov
or
push
adc
shrb
or
and
lock
sbb
push
adc
mov
inc
sbb
add
jmp
push
sbb
adc
adc
movswl
repnz
out
pop
push
and
push
pusha
loopne
add
sbb
fisubrs
out
pcmpgtw
or
shrl
sarb
cmp
inc
mov
add
mov
test
mov
fstl
push
ss
inc
leave
sbb
cmp
pop
cltd
mov
push
lods
and
mov
nop
popa
sub
mov
decl
inc
mov
inc
mov
dec
cmpb
pop
inc
mov
mov
loop
ret
xor
sub
ljmp
pop
push
popa
hlt
xorl
and
pop
mov
mov
pop
leave
outsl
mov
andb
add
dec
cmp
pop
ret
movsb
sarb
add
jmp
jp
mov
fisttpl
cmp
adc
aam
dec
mov
push
test
mov
adc
sbb
xor
xchg
sbb
sbb
incb
and
test
sbb
mov
jp
and
sbb
adc
loopne
dec
and
call
push
mov
mov
mov
xchg
pop
push
add
test
mov
jmp
jns
sbb
push
mov
orb
cli
add
ja
movsb
push
sub
mov
rdmsr
push
and
cmpsl
hlt
cmp
push
cmp
lock
aas
fcoml
add
dec
sbb
sbb
add
stc
orl
add
scas
clc
test
ret
and
xor
inc
mov
sbb
pushf
or
loopne
cmpsb
inc
add
push
and
push
pop
dec
dec
jb
mov
add
add
sbb
inc
int
incb
nop
push
inc
jecxz
dec
jb
cli
pop
mov
cmp
jbe
loop
sub
je
pop
add
add
shll
es
pop
xor
fmul
js
add
adc
jl
mov
inc
cmp
mov
pusha
stos
stos
pop
add
out
jmp
dec
sub
pop
jp
scas
pop
les
aam
inc
adc
mov
int
mov
iret
ret
imul
sub
cmp
jne
add
mov
or
daa
add
push
xchg
add
dec
xor
adc
adc
call
mov
cmp
xchg
cmp
data16
mov
mov
pop
mov
mov
jns
inc
cltd
enter
add
adc
xchg
mov
add
sarl
add
add
cmp
dec
add
xor
jmp
add
bound
adc
cmp
jne
mov
adc
pop
pusha
cmp
add
int
ja
lods
cmp
jno
add
orl
push
inc
jle
add
fcoml
inc
es
movb
or
pop
popl
pusha
incl
xor
lock
sbb
lret
jle
or
pop
ror
jp
push
nop
icebp
incb
movsb
sbb
add
jle
push
jmp
xchg
fisttpl
lock
out
or
jge
aad
pop
rorb
add
test
add
lret
sub
lret
push
in
add
test
ss
add
stos
jp
push
mov
pop
add
inc
add
shr
jbe
add
rorl
pop
sub
inc
add
in
xlat
and
aaa
dec
stos
jnp
fdivrs
je
xchg
jg
std
subl
xchg
fildl
add
fmulp
shr
mov
punpckldq
ds
incl
and
or
jp
syscall
ret
neg
add
inc
js
push
stc
orb
loopne
out
adc
out
enter
ret
add
sub
fldz
add
add
add
aas
cmp
jle
add
pushf
or
add
push
ret
cmpps
sub
adcb
cwtl
push
add
mov
sub
out
sbb
pushf
pop
xchg
sbbl
lret
lock
movsl
add
call
sbb
sub
xor
sbb
or
cmp
xor
add
leave
sbb
lds
mov
add
fsubrp
adc
call
mov
add
js
inc
jns
add
jp
mov
xlat
fadds
add
xchg
mov
push
xchg
push
push
adc
dec
add
add
sarl
pop
mov
popa
push
pop
addr16
enter
pop
nop
je
jbe
pop
faddl
cmp
and
daa
cmp
or
aas
cmpl
mov
mov
fisttps
add
leave
repnz
sbb
xchg
and
inc
xchg
jl
cld
mov
sub
test
lds
add
lcall
dec
pop
js
rcrb
adc
add
push
stos
mov
cmp
mov
and
dec
mov
testl
mov
inc
imul
daa
cmp
jl
fiadds
leave
cmp
call
mov
sti
jmp
stos
sbb
inc
mov
das
push
sbb
es
mov
int3
repnz
lds
add
jbe
hlt
jo
add
negb
pushf
add
repnz
repz
loope
jp
xchg
add
sbb
sbb
mov
xchg
push
cmpsb
scas
add
add
or
jne
xchg
dec
in
cmpsl
xchg
cmp
xor
in
push
in
cmp
mov
lock
movsl
pop
mov
popa
mov
and
addr16
pop
add
daa
mov
adcb
xchg
pop
and
add
les
pop
aad
bound
xor
jnp
dec
mov
hlt
out
enter
das
fs
or
es
mov
ret
add
mov
mov
xorb
leave
jne
psrld
pop
add
jns
es
out
in
cmpl
jae
iret
add
jle
xchg
fucomi
and
jne
add
jne
testb
loopne
rorb
cmp
jb
xchg
jo
sbb
sbb
inc
loop
pop
test
je
inc
imul
loopne
xor
jmp
add
mov
sbb
rorb
addl
pushl
adc
ud2
add
cmpl
js
fcompl
ret
aaa
clc
add
or
dec
mov
stos
add
test
das
adc
xchg
ficompl
fs
dec
pop
push
inc
pop
out
enter
jle
pop
jb
hlt
pop
lods
xchg
lret
and
movsb
dec
add
inc
xor
andb
test
push
push
add
and
add
sbb
pop
stos
xor
loop
adc
sti
pop
sbb
and
cli
pop
mov
add
out
xor
clc
cmp
pop
iret
xor
push
sub
fs
cmp
ljmp
pop
add
jne
add
jne
add
push
dec
or
cld
ret
or
pop
or
push
push
mov
call
inc
in
xchg
lret
adc
pop
arpl
cmovs
sub
movhps
mov
loop
jne
cmp
movb
pop
inc
lahf
inc
pop
add
call
pop
xor
sub
or
movsb
xchg
jo
enter
push
add
subb
mov
and
enter
add
lret
outsl
sub
add
and
xchg
mov
cmovnp
xchg
inc
mov
addb
sub
mov
add
dec
inc
pop
add
call
sbb
adc
push
cmp
or
mov
sub
mov
cmpl
or
mov
cli
dec
mov
push
test
pop
stos
fadds
jmp
push
cmp
dec
mov
pop
cld
lods
dec
xlat
enter
add
push
cmp
inc
push
cmpsb
ja
jl
add
jnp
mov
ss
pop
arpl
sbb
add
stos
adc
jae
xchg
sub
out
jnp
fs
ret
and
add
cmpsl
pop
mov
shlb
loopne
add
mov
cmp
scas
xorl
xor
inc
mov
les
out
and
mov
inc
push
mov
call
add
jnp
add
mov
hlt
jge
add
jne
fldenv
xchg
popf
jge
add
fcmovbe
sub
sbb
loope
push
or
clc
xchg
dec
jp
lds
pushl
mov
mov
test
push
pop
add
fcoml
or
pop
repnz
punpcklbw
nop
lock
inc
in
add
cmp
ds
pop
xor
sub
ret
clc
icebp
jae
icebp
pusha
icebp
pop
icebp
pop
lock
in
push
jb
cmp
inc
mov
inc
inc
and
cmp
xor
in
jb
cmp
sbb
and
and
sbb
and
or
mov
stc
cld
inc
in
mov
cmp
hlt
lock
sub
sub
loopne
add
jb
cmp
sbb
andb
xchg
fidivs
or
mov
cmp
and
cwtl
in
jb
cmp
mov
and
enter
jb
jo
insb
sbb
add
xchg
pop
add
pop
in
jb
cmp
jg
add
jo
insb
in
jl
and
and
add
or
or
add
sbb
push
clc
cmpsb
fadds
and
lock
in
sub
cwtl
sbb
dec
xor
loopne
fsubl
fmuls
xchg
aam
rol
int3
jb
cmp
sbb
sbb
mov
xchg
lods
enter
jb
or
pushf
sbb
and
enter
add
pop
rol
loop
pusha
mov
call
sub
add
mov
add
lahf
loop
pop
or
add
or
sub
nop
mov
enter
sub
das
adc
pop
rorb
or
dec
adc
sbb
mov
icebp
push
lods
xchg
rorl
loope
dec
add
jae
mov
inc
in
adc
repnz
xchg
xchg
lock
push
xor
icebp
div
shl
xchg
hlt
add
cmc
in
jb
cmp
xor
and
and
add
ja
mov
cmp
sbb
sub
and
setno
enter
adcb
inc
jmp
sub
sbb
add
out
jb
or
rcrl
dec
shll
or
and
xchg
add
enter
rclb
and
and
xchg
add
enter
jb
and
and
and
xchg
cmp
enter
jb
cmp
sbb
int3
int
and
xchg
iret
enter
add
cmp
and
add
sbb
cmpb
clc
adc
mov
sbb
andb
dec
clc
les
pop
ja
ret
adc
subb
push
filds
testb
push
pop
or
arpl
push
outsb
test
cli
int3
stos
cs
jge
aaa
xchg
sti
mov
jl
repnz
adc
dec
mov
loope
loop
xchg
out
pusha
add
inc
js
arpl
pop
mov
lock
push
and
adc
or
movsl
flds
test
jno
pop
pop
nop
pop
xchg
xor
xchg
cmp
add
outsl
jb
add
pop
and
xchg
dec
add
inc
dec
outsb
jns
cwtl
in
loop
or
out
or
sbb
and
mov
jl
dec
insb
sub
pop
fld
sbb
inc
push
movsb
xorl
pusha
enter
or
push
adc
add
sbb
xor
or
or
pusha
jbe
inc
jns
pop
mov
pop
testb
and
rclb
outsb
addr16
int3
jnp
pop
and
fimuls
rolb
data16
outsl
ja
je
inc
or
inc
xchg
add
nop
or
dec
cmpxchg
mov
push
sbbb
cmp
add
rolb
imul
jae
pop
xchg
add
rcr
add
xor
and
or
cwtl
add
mov
ficoms
fs
jmp
loopne
push
and
scas
mov
movaps
pusha
push
je
repz
push
insl
pop
movsl
or
or
cmp
in
arpl
inc
test
cwtl
nop
adc
rorl
mov
js
dec
hlt
or
and
cltd
int3
aam
adc
inc
arpl
push
rorl
push
mov
inc
sub
shr
cmp
in
nop
lods
pop
flds
mov
je
popa
arpl
subl
test
jo
pop
subl
xorb
inc
xchg
mov
push
add
or
mov
sbb
lds
out
and
popa
and
fs
mov
push
inc
pusha
test
andl
nop
jae
mov
cmc
int3
lfs
dec
popaw
cmp
repnz
sub
and
pop
pusha
in
xor
jo
jno
pop
mov
les
rolb
bound
add
push
test
xchg
cwtl
mov
add
push
test
jns
lahf
add
nop
out
xchg
mov
cmp
sub
mov
push
fs
insl
add
push
dec
jne
add
cld
push
cmc
push
mov
mov
clc
push
jns
outsb
std
adc
mov
mov
sub
ret
adc
testl
out
push
aam
ret
add
adc
mov
call
add
and
inc
pushf
imul
enter
test
pop
incb
daa
xorl
in
js
jnp
add
lods
stc
dec
mov
aas
add
jp
pop
pop
stos
xor
cwtl
filds
and
jo
test
pop
add
repz
ds
movsl
aaa
fadds
jns
adc
dec
add
inc
jp
shrb
add
inc
xor
sub
add
pop
xchg
jbe
lods
sbb
daa
or
cmpb
add
jbe
pop
add
leave
add
cmpsb
je
mov
pop
ljmp
hlt
mov
sbbb
mov
jno
shr
cmp
add
xor
sub
push
lods
nop
and
andb
pop
add
cmp
jne
call
mov
pop
mov
mov
int3
push
adc
add
adc
jnp
push
jp
add
decb
sbb
in
add
lock
cltd
add
repz
pop
add
add
and
adcb
or
mov
xlat
cwtl
or
dec
enter
cmp
into
sub
inc
add
xor
sub
push
mov
push
cmp
or
leave
jno
add
sbb
ret
lock
inc
sbb
add
outsb
jl
add
and
add
addr16
mov
or
add
mov
mov
jge
lods
xor
lock
add
and
or
adc
add
push
cmp
add
push
cmp
add
sub
js
cmpsb
jo
aas
inc
xlat
add
add
lock
stos
pushf
jns
mov
lret
bnd
and
and
add
cli
leave
sbb
lods
orb
adc
sbbb
and
cmp
add
arpl
push
jmp
add
aaa
push
xor
pop
fsts
xor
adc
and
cmp
adc
popa
add
push
dec
int
popf
inc
push
and
push
mov
dec
aad
cmp
mov
ss
call
daa
pop
inc
call
mov
pop
les
jg
xor
cmp
push
orb
pop
and
dec
add
out
xchg
in
xor
lahf
add
adc
add
mov
sub
fdivr
push
test
cltd
shrb
jb
je
int3
xor
daa
mov
push
pop
add
jne
xchg
fsts
bswap
sub
call
and
dec
mov
mov
rorb
popf
add
mov
cmpb
jo
jno
or
jmp
cmp
loop
adc
getsec
mov
aas
sub
out
fsub
push
add
movsb
addr16
adc
add
cltd
lock
mov
pop
mov
xor
push
inc
mov
adc
sub
jo
xchg
sbb
sbb
add
not
and
add
mov
fdivr
add
add
cld
popf
or
repnz
data16
out
hlt
jmp
pop
mov
pop
mov
push
add
inc
stos
mov
or
sbb
dec
cmp
dec
cmp
out
dec
pop
add
int
rorb
mov
pop
out
stc
add
callw
mov
ljmp
fwait
cltd
lds
outsl
and
push
add
les
push
pushf
sbb
add
push
dec
push
insb
pop
es
mov
mov
mov
mov
jmp
addr16
sub
push
lds
add
add
stc
js
rorl
add
cmpb
mov
shr
es
add
xor
inc
add
or
xor
mov
jmp
jecxz
popa
push
and
add
popf
sarb
cs
cmp
movb
push
mov
xchg
repnz
add
xchg
movsl
enter
add
loope
mov
leave
push
aad
int3
movsl
inc
adc
cs
add
mov
add
and
dec
add
loopne
jg
jecxz
js
imull
mov
pop
xor
push
cmp
cmc
add
sbb
mov
inc
cwtl
add
mov
outsb
movsl
mov
sbb
ds
adcb
pop
ret
mov
jge
loopne
movsb
je
inc
mov
data16
fucomi
add
mov
adc
or
pop
add
pop
jg
add
iret
imul
mov
push
fisubrs
sbb
leave
mov
xchg
sub
movl
fsubr
and
add
fucomp
outsl
popf
inc
and
cld
mov
add
mov
hlt
push
cmp
add
pushf
jae
add
mov
push
fwait
mov
ret
sbb
jo
jmp
pop
pushf
rolb
xor
lock
enter
cwtl
sti
xchg
cmp
add
adc
je
rcl
pop
cmpsb
aas
std
roll
jecxz
mov
mov
add
out
in
in
out
cmp
dec
add
cld
xlat
aas
adc
outsl
xchg
inc
jno
not
incl
sahf
fwait
jbe
fs
inc
and
adc
pop
pop
push
pushf
insb
pop
dec
lret
add
push
and
add
push
mov
pop
push
ja
popf
push
jge
add
jl
leave
inc
insb
jae
sbb
jmp
pop
push
pop
scas
sarl
push
stos
sbb
call
cld
daa
rolb
shl
inc
add
clc
adc
push
and
adc
sarb
orl
add
inc
jbe
adc
jp
mov
pop
cwtl
xchg
pop
cmp
add
cs
add
push
mov
add
sub
shrb
into
add
adc
sub
jbe
nop
add
lea
add
lods
xchg
daa
add
loop
inc
lahf
flds
add
shl
lea
sub
jmp
add
in
pop
cmp
repnz
lret
pusha
pop
movsl
add
ljmp
rcrb
cmc
fucomp
aad
lds
scas
imul
adc
clc
xlat
inc
ljmp
adc
lret
mov
or
aad
repnz
add
pop
jbe
mov
rorl
jge
pushf
or
add
leave
dec
test
push
ret
cmp
aaa
call
push
jo
repz
adc
leave
pushf
sub
mov
outsl
or
in
jb
xchg
sahf
daa
insl
loopne
push
mov
roll
mov
aam
rcrl
cltd
popa
dec
inc
incb
icebp
add
lock
add
mov
lock
cmp
orb
sub
jecxz
jle
xchg
ss
push
decb
jmp
sub
xor
lods
call
inc
push
cmp
or
pop
shll
adc
mov
cs
sub
out
pop
fcoml
pop
xchg
pop
mov
add
add
lcall
shll
add
cmp
cmpsl
dec
push
fdivl
pop
cli
out
or
add
dec
insb
sub
xchg
add
fdivr
sub
xor
xorb
cmp
or
imul
add
mov
sub
ret
adcb
in
pop
jmp
add
add
call
adc
jl
add
sbb
je
in
dec
fsubrl
roll
inc
insb
mov
add
add
lea
add
push
cmovle
adc
cmpsb
jle
bound
notb
or
inc
cmp
std
es
decb
and
sbb
push
sbb
rclb
or
dec
cmpl
imul
cmp
cmpb
shll
lea
xchg
add
xchg
pusha
push
cwtl
cmp
xor
dec
push
stos
sub
pop
jne
sarb
and
call
je
repnz
add
fistps
call
add
push
ret
cs
inc
or
add
hlt
push
dec
add
pop
xchg
cs
push
pusha
imul
pop
xchg
dec
push
add
mov
add
or
jne
lea
add
inc
xchg
loopne
rorl
cmp
js
or
nop
jmp
mov
test
bound
jns
or
fadds
call
lahf
mov
mov
xor
into
idivb
loopne
shlb
and
sbb
sub
ret
daa
pop
sbb
call
cmp
xchg
sub
xor
leave
movsb
and
jo
lods
seto
mov
pop
jmp
test
popf
jno
fcmovnbe
push
scas
scas
in
or
jl
xor
or
je
push
loopne
fnstsw
dec
sub
or
push
adc
push
sub
pop
add
jecxz
arpl
mov
pop
inc
push
add
movl
add
jmp
mov
add
sbb
xchg
add
aas
jg
push
inc
fnsave
add
add
adc
test
dec
in
pop
cmc
dec
addl
cld
jae
add
cmp
jbe
dec
mov
jne
mov
push
add
sbb
push
add
mov
push
mov
addb
call
shll
add
ret
push
stos
flds
lock
cmp
cmpsl
add
cmp
xchg
sbb
jecxz
lock
adcl
xchg
pop
insb
mov
ds
lret
div
imul
xchg
ljmp
in
or
sub
gs
icebp
pop
add
movsb
inc
out
add
mov
aad
lea
pop
loopne
mov
add
xor
clc
xchg
jne
add
test
out
or
jmp
cli
pop
shl
pop
cmp
add
xor
fistl
dec
jg
push
mov
push
dec
pop
movsl
test
jge
sub
adc
push
lock
jne
adc
je
mov
and
push
jnp
pop
cmp
xor
sbb
dec
mov
fistps
daa
mov
rorb
add
cs
loop
cmp
mov
mulb
mov
fldt
add
push
cmc
lcall
test
mov
daa
hlt
repnz
add
adc
xor
jmp
push
or
add
mov
xlat
inc
outsl
cwtl
fs
xchg
clc
push
sarb
add
loopne
stc
in
sbb
add
cli
cmp
inc
add
cmovno
addb
sub
xlat
imul
or
pusha
pop
scas
sub
push
roll
add
push
jb
shl
jle
fildl
add
cmpb
sbb
mov
pop
xchg
mov
or
movsb
add
fisttpll
lock
jmp
dec
cwtl
cmp
mov
and
sub
mov
sbb
sahf
or
outsl
loope
addb
hlt
lea
ss
dec
mov
aad
inc
call
jne
sub
add
mov
mov
xor
add
adcb
xchg
inc
sbb
cltd
or
iret
daa
cld
sub
pop
add
out
imull
pop
xchg
or
aam
enter
and
mov
and
adc
fnstenv
xor
add
test
nop
add
movsb
psllw
je
roll
mov
insb
fs
je
add
cli
mov
inc
xor
cli
xchg
popa
adc
push
jae
shlb
jg
lea
gs
or
add
add
xor
xchg
setbe
hlt
daa
and
andl
adcb
insb
cld
and
pop
inc
test
bound
jle
push
loopne
add
dec
pop
decb
sub
in
add
cltd
imulb
xor
insl
aas
adc
push
popf
or
sub
inc
pop
cltd
iret
inc
stc
fbstp
bound
ret
adc
sub
inc
loope
fildl
mov
fcom
adc
test
cmp
add
and
cli
jp
inc
add
sub
add
push
or
jnp
loopne
push
std
cli
sbb
or
test
jg
xor
stc
xchg
add
jo
pop
jmp
rclb
leave
lock
sbb
movsl
cmp
add
loopne
xor
scas
adc
test
imul
adc
in
leave
add
lods
mov
pop
add
pop
lcall
decl
sbb
jp
sbb
imul
xorb
les
mov
xchg
shlb
pop
jns
and
das
push
mov
push
inc
adc
inc
mov
je
pushf
sub
mov
pop
in
mov
cmp
add
adc
lods
jmp
add
int3
cmp
or
pusha
mov
push
inc
hlt
xor
push
fisttpll
inc
sub
add
or
je
sbb
arpl
pop
jns
sub
cs
out
iret
fcmovnu
rorb
add
fs
xchg
jnp
jo
mov
mov
cmp
scas
pop
lret
es
and
push
pop
stc
add
out
adc
and
add
sbb
mov
aas
insl
bound
lock
lcall
add
xor
mov
dec
cltd
xchg
jae
add
imul
add
sahf
or
popa
inc
add
adcb
add
xor
shll
out
test
rcl
mov
cmpsl
sub
into
mov
mov
and
lret
lods
mov
fmuls
add
pop
mul
in
push
in
push
mov
in
xchg
jle
sub
mov
les
lock
add
rcrb
dec
dec
ss
push
mov
movups
add
loopne
mov
mov
sti
je
mov
mov
pop
js
push
sub
add
jne
jle
jl
xchg
add
mov
lea
mov
test
bnd
aad
movb
add
cmp
jecxz
xor
add
push
test
add
mov
jb
xchg
pavgw
je
pop
js
push
pop
cmp
add
ds
cld
mov
lods
mov
rclb
icebp
in
subb
repnz
mov
xchg
out
popf
loop
clc
push
pop
pop
add
loope
push
test
mov
int
xchg
inc
in
push
mov
ja
das
mov
and
mov
mov
xor
mov
inc
mov
sbb
in
and
jnp
adc
repnz
xchg
add
shll
mov
popa
add
jne
xor
jecxz
adc
pushf
sahf
in
pop
sbb
out
cld
jnp
test
lock
dec
push
adc
call
test
call
cmpb
mov
lahf
popf
insl
and
pop
push
mov
jmp
mov
xchg
mov
xor
adc
outsl
and
push
add
and
push
push
add
in
mov
imul
inc
mov
adc
jp
aam
push
xor
cmpsl
jne
xchg
lock
jb
add
inc
or
dec
call
arpl
mov
pusha
outsb
sub
push
add
mov
sbb
lret
fadds
and
fdivrl
ffree
add
inc
cmp
add
or
push
and
in
mov
test
jmp
adc
les
orb
or
mov
and
xchg
addl
pushl
mov
repnz
movhps
jae
stos
jns
insl
inc
jb
sub
sbb
ret
ljmp
or
test
push
or
ret
sti
dec
test
sbb
stos
dec
shll
sbb
xchg
mov
adcb
xor
add
or
or
pusha
push
push
mov
mov
or
ljmp
xchg
add
and
xlat
jle
inc
lea
mov
fcoml
loop
add
inc
and
add
and
cmp
mov
jne
cld
push
xchg
push
xchg
mov
xor
and
dec
add
jp
icebp
mov
xor
hlt
popa
and
mov
dec
xchg
add
lea
pop
js
adc
xor
jbe
mov
jnp
mov
dec
pusha
mov
je
sbb
xor
sbb
push
rolb
pop
sbb
pop
add
out
add
je
jecxz
inc
mov
addr16
jns
jnp
ja
imul
or
call
fisubl
scas
and
nop
mov
sub
cmpl
cld
leave
push
or
inc
iret
dec
mov
loope
jne
les
ljmp
inc
cmpb
scas
mov
jp
sub
jl
or
dec
jg
je
jnp
add
icebp
arpl
add
pop
cwtl
xor
bnd
jl
sbb
push
inc
rcrl
xor
mov
mov
loope
sub
mov
ret
in
add
push
jne
inc
dec
add
jmp
rolb
or
inc
hlt
test
add
mov
pop
add
outsl
jo
push
push
cld
add
or
sub
cli
sbb
leave
bound
add
cmp
cmp
push
push
or
adc
cs
ds
dec
mov
add
xchg
pusha
popf
call
jg
add
xor
or
add
jg
test
add
popw
mov
in
dec
sub
sar
cmpb
jp
mov
push
add
pop
orl
add
push
popa
test
cmp
cmp
inc
pop
xchg
das
mov
jae
out
xchg
add
mov
into
push
jnp
sub
jno
add
cli
add
dec
inc
inc
hlt
cs
add
fcom
add
fwait
iret
lea
test
mov
pop
shlb
and
psubsb
and
or
xor
loop
mov
xchg
dec
pop
inc
pop
cld
dec
sub
movsb
jne
inc
les
pop
xchg
lock
mov
sub
pextrw
je
and
mov
xchg
outsl
cmp
inc
jne
dec
clc
push
pop
add
std
lods
push
adcb
jmp
out
jb
ds
insb
cmp
xorl
add
adc
xchg
add
shrl
addb
jae
js
add
push
sbb
add
outsb
or
jne
inc
clc
cwtl
fildl
ja
mov
clc
push
add
ret
and
mov
mov
jb
repz
xor
pusha
inc
and
js
adc
sbb
aas
pushf
sbb
add
xor
scas
adc
jae
add
loope
jle
js
add
loop
jl
push
decl
lock
add
call
sbb
xchg
popa
pop
test
push
add
pushf
or
pop
add
sbb
imul
pop
mov
xor
rcll
lahf
call
cwtl
add
and
lahf
add
mov
rolb
or
jae
jp
adc
and
int
mov
sbb
sbb
subb
pop
int3
or
add
sub
cbtw
mov
xchg
mov
xchg
repnz
cwtl
jecxz
rolb
mov
loop
jnp
or
add
inc
or
or
cs
pop
and
test
add
sub
inc
or
jae
cltd
or
xchg
adc
imul
mov
mov
xrelease
stc
xchg
and
add
dec
pop
jl
or
push
cmp
jo
sti
add
mov
pop
sub
mov
rolb
testb
sub
je
sbb
cld
push
or
daa
hlt
mov
push
jmp
mov
add
push
inc
out
js
pop
push
push
inc
pop
or
push
add
nop
xor
add
xor
add
faddl
add
and
stos
lret
pop
add
mov
mov
add
aam
stos
loopne
add
and
adc
pop
adc
enter
add
or
push
cmp
jne
add
lock
movlps
and
sti
arpl
call
dec
test
cltd
add
ret
add
sbb
add
imul
add
fdivrs
sbb
js
or
jle
adc
pop
adc
decl
xor
add
scas
add
mov
daa
cld
js
push
faddl
adc
es
scas
cmp
add
cwtl
test
dec
sar
inc
out
add
xchg
cs
add
dec
call
inc
mov
adc
fs
stos
adc
loopne
add
in
out
lea
aaa
sub
outsb
adc
push
loopne
mov
fiadds
adc
dec
jns
movsb
data16
call
test
mov
cmp
adc
mov
xor
add
adc
or
das
fildl
pop
ljmp
jo
test
jmp
insl
icebp
add
jns
sbb
jle
and
lret
lock
adc
int3
call
lods
repnz
sbb
sub
sbb
mov
adc
clc
adc
mov
dec
ljmp
add
call
dec
pop
clc
jmp
rolb
sarl
out
add
fisubrl
and
push
xchg
jecxz
add
dec
in
rclb
sbb
sbb
jbe
push
cmpl
jl
add
out
fs
and
xchg
adcb
xchg
sub
add
jl
push
mov
mov
fwait
sub
xor
add
test
and
adc
pop
jmp
add
mov
inc
or
xorb
push
sarl
pop
xchg
cmp
or
mov
sub
pop
xchg
push
dec
fcoms
mov
test
mov
test
add
mov
jl
jge
add
imul
sbb
daa
jae
xor
gs
mov
enter
push
push
loope
call
iret
dec
decl
and
out
int
and
jnp
es
add
sub
add
or
sub
add
aad
pop
nop
sub
or
mov
add
and
and
inc
pop
xchg
imul
jo
popa
inc
fistl
add
fsts
sbb
outsb
mov
mov
test
xor
push
xchg
add
push
sbb
fldenv
cld
das
adc
loop
xorb
pop
fiaddl
filds
add
stos
or
or
icebp
rclb
mov
inc
scas
pop
or
cmpsl
pop
jecxz
enter
add
or
sbb
mov
lea
test
xchg
add
jl
cli
adc
pop
mov
add
fwait
add
adc
xor
jb
int3
jo
or
sbb
cwtl
add
lods
mov
rcll
inc
push
jl
jne
dec
xchg
mov
xchg
jnp
test
inc
in
mov
or
sbb
add
inc
sahf
jb
push
movhps
add
sub
pop
push
mov
or
mov
fisubrl
add
jo
sub
push
add
inc
xor
jp
lret
mov
mov
pop
ljmp
je
in
sbb
xchg
mov
jo
inc
xor
dec
daa
add
push
jno
loope
adcb
lock
add
mov
add
sub
cmp
add
push
jge
out
push
push
inc
daa
add
ljmp
ret
das
jp
rolb
add
sbb
add
add
add
shll
leave
add
push
add
xchg
xor
test
fs
sarl
mov
ja
jl
jnp
add
pop
mov
fsubp
inc
mov
leave
int
push
clc
add
cmpsb
les
movsb
adc
cmp
mov
add
out
dec
inc
jge
or
popa
je
inc
nop
add
pop
movsb
add
aam
sub
pusha
or
lock
add
cld
and
in
xor
jmp
push
add
or
inc
xchg
aam
popf
add
mov
xor
xchg
loopne
neg
shlb
push
jle
je
pop
les
dec
add
into
or
push
pop
adc
push
leave
sbb
pop
movsl
sahf
test
sub
and
and
pop
adc
push
scas
sub
mov
pop
mov
or
test
loop
fs
mov
es
popa
push
add
mov
add
loope
xor
imul
outsb
sti
movsb
cmp
push
std
in
add
cmp
xor
push
add
mov
test
push
add
or
jne
push
sub
inc
int3
dec
stos
jg
add
clc
shrb
call
test
mov
aad
and
das
jnp
pop
stos
cmp
inc
inc
rorb
push
add
sahf
cmpb
or
add
ror
adc
clc
add
sbb
sahf
xor
push
ljmp
jp
lock
gs
mov
adcb
push
sub
pop
adc
inc
sub
shr
int
jo
cmp
scas
lods
push
cmpl
and
and
sahf
fmul
out
sub
dec
dec
cld
fwait
or
jmp
inc
fadd
lea
push
sub
mov
js
jmp
ljmp
and
inc
fs
mov
push
push
insb
dec
loop
sbb
inc
dec
or
xchg
add
pusha
popf
stc
and
lock
nop
lods
movlps
popa
test
mov
add
sbb
les
lods
gs
outsb
in
fadds
push
add
mov
das
hlt
xchg
sub
fldt
add
cmp
enter
hlt
sldt
push
nop
out
popa
push
dec
cmpl
jle
ret
std
jns
add
add
call
add
pushf
sbb
repz
push
in
bound
adc
sub
dec
add
mov
pop
call
shlb
and
decb
cld
js
add
push
mov
mov
clc
push
adc
push
sbb
je
add
lods
xchg
xchg
add
dec
lock
daa
ljmp
add
mov
mov
adc
xchg
mov
push
movsl
or
adc
sbb
add
mov
or
icebp
cmp
xchg
loope
cltd
es
mov
add
aas
cmc
cmp
mov
sub
rcrb
dec
jne
add
adc
adc
mov
dec
xchg
xor
inc
mov
pop
jo
xor
ret
pop
add
and
jmp
inc
call
mov
mov
orl
adc
jae
ja
hlt
ret
add
ss
xchg
stc
mov
mov
adc
and
dec
mov
fcmovnu
push
test
jecxz
scas
xor
sbb
cmpsb
mov
notl
lods
fsubl
jb
movsb
add
outsb
dec
or
mov
dec
xchg
sbb
cld
mov
and
in
add
jb
cmpsl
mov
int3
sbb
add
mov
mov
sub
jle
pop
add
pop
leave
enter
les
lods
add
ror
inc
cmpb
mov
imul
add
push
cld
pop
xchg
stos
mov
or
cmp
xchg
enter
test
fdivs
jg
or
xor
or
cwtl
shrb
add
push
ds
outsl
addl
push
jmp
adc
xchg
pop
push
cmp
mov
or
jo
pop
pop
and
sub
mov
adc
pop
bnd
je
ds
dec
adc
xor
ud2
mov
ljmp
test
scas
test
pop
add
add
sub
mov
js
out
jge
faddl
xor
ja
or
mov
loopne
push
in
and
cld
inc
ss
mov
sbb
dec
lret
rcll
sti
movsb
add
pop
add
pop
jmp
add
jbe
push
lock
and
jge
dec
adcb
je
add
push
loopne
sub
push
sub
into
cli
add
mov
mov
loopne
fwait
sub
dec
jo
pop
pusha
push
test
loopne
ja
add
insl
ret
dec
cmp
arpl
cmp
repz
pop
add
aaa
call
cmp
aas
xchg
xchg
add
mov
mov
push
push
and
add
sbb
aas
or
aaa
add
inc
inc
xor
add
inc
das
and
dec
mov
mov
ret
insb
add
push
add
out
or
or
or
test
add
seta
orb
inc
pop
xchg
mov
enter
mov
dec
int3
addr16
test
pusha
in
jnp
adc
jg
mov
es
shlb
add
popf
nop
push
inc
or
add
les
mov
str
aam
mov
adc
add
cmpsb
in
pusha
or
add
cld
mov
mov
push
xor
paddw
faddl
cmpsb
push
shrb
hlt
scas
add
mov
xor
jp
enter
test
mov
rorb
mov
xchg
mov
lods
adc
sti
test
lret
insl
cltd
enter
adcb
pop
jbe
add
test
cld
enter
sbb
or
sub
push
pop
test
xchg
xor
arpl
mov
mov
lods
and
jmp
add
les
stos
cmp
cltd
loopne
add
add
mov
dec
or
subb
pop
add
ret
mov
jmp
pop
pop
xor
mov
mov
mov
mov
add
mov
push
push
add
out
ss
incb
in
cmp
les
out
and
adc
mov
add
fcoms
mov
popa
mov
mov
xchg
insb
test
cld
jg
pop
out
add
mov
or
xchg
stos
dec
pushf
cmpsl
lcall
fists
xor
loopne
clc
and
and
mov
cmp
pop
cwtl
dec
fldt
jo
stos
cmc
mov
cmp
add
or
test
add
cld
mov
mov
notl
test
sub
rorb
pushf
movsl
xchg
adc
popf
lahf
add
add
test
pop
mov
push
add
sub
cmp
pusha
jo
repnz
arpl
jns
or
cmp
mov
loopne
lock
mov
fistpl
lock
les
mov
pusha
incb
add
adc
stos
insb
pop
dec
add
mov
dec
hlt
cld
pop
rolb
adc
addl
inc
jb
scas
add
sub
add
dec
pop
or
inc
test
jne
or
xchg
arpl
push
cmp
into
fildl
add
pop
scas
sub
aas
popa
out
je
add
fmul
js
clc
fistpl
nop
xor
bound
pop
add
sarl
cld
xchg
mov
imul
jo
xchg
aam
pusha
jmp
lcall
or
repz
fsubs
inc
sub
sbb
incl
sbb
ja
add
xor
out
push
sbb
stos
cmp
jnp
dec
jle
jae
push
imul
dec
push
lcall
outsl
push
icebp
add
loope
or
sbb
jecxz
addr16
loopne
clc
ret
add
sahf
xor
repz
xor
lret
ljmp
pop
aaa
int3
inc
cs
pusha
test
roll
and
popf
add
jg
or
das
jp
loopne
inc
jmp
jge
add
add
xchg
add
push
testb
in
cmp
test
add
cltd
or
pop
rcrb
add
xor
std
scas
xlat
jmp
arpl
adc
shlb
cs
inc
daa
add
mov
pop
push
jnp
addb
add
js
fwait
test
fnstcw
pop
out
cwtl
pusha
aad
adc
stc
xchg
add
test
pop
mov
sub
mov
xchg
xor
add
add
sub
cmp
clc
xchg
sub
sbb
cld
out
inc
jecxz
add
xchg
dec
add
cwtl
test
add
cli
das
jbe
push
icebp
icebp
rorb
xor
dec
adc
add
adc
jmp
jg
addr16
add
push
outsl
xor
call
adc
push
mov
add
adc
add
nop
dec
mov
faddl
cs
and
call
inc
jb
add
jg
or
inc
icebp
inc
nop
jmp
decl
mov
unpckhps
add
out
push
add
xchg
shr
add
push
pop
cmpsl
push
add
popf
mov
add
sub
out
repnz
or
mov
jo
dec
add
mov
cmpsb
push
roll
pop
rolb
sub
jb
pop
inc
mov
rorl
or
jne
out
icebp
jp
loopne,pn
sub
sub
rolb
clc
int3
test
stos
sbb
dec
mov
fiaddl
loope
push
push
cmc
and
jg
das
dec
lods
mov
jns
lahf
rolb
loope
outsl
mov
mov
push
adc
pop
movsl
pop
in
add
shr
test
sub
or
adc
sbb
mov
mov
in
xor
mov
dec
add
pop
sbb
add
pop
jae
add
mov
mov
inc
ja
push
repnz
and
push
in
repz
and
sbb
cmpb
sbb
pop
inc
loopne
inc
cmp
mov
arpl
fldenv
dec
shl
mov
add
cmp
and
fdivrs
cmp
fadd
test
sbb
mov
and
pop
stc
sub
mov
pop
clc
cwtl
push
hlt
cmpsb
xchg
push
enter
inc
ljmp
inc
push
mov
int3
or
les
addr16
pop
pop
mov
push
push
rolb
jg
clc
inc
nop
xchg
pop
and
push
add
push
hlt
mov
rcll
sbb
ss
stc
inc
or
lock
into
in
xor
cltd
mov
add
mov
clc
insl
das
fs
cmpsl
push
rclb
ret
add
mov
pslld
and
xchg
or
jo
add
and
jge
inc
push
add
lods
adc
add
cmp
into
test
jecxz
cltd
add
lret
addr16
inc
in
mov
add
scas
push
jmp
mov
add
add
imul
subb
mov
mov
in
and
mov
add
mov
in
cmp
negl
add
stos
nop
mov
push
out
pop
lods
pop
pop
test
mov
add
push
call
inc
les
sbb
cmp
mov
ret
pop
or
push
adc
aad
pusha
and
imul
nop
push
jo
popa
arpl
inc
xor
mov
push
pop
inc
rcrb
dec
rolb
add
jmp
addb
push
jae
xor
mov
sbb
sbb
add
mov
stc
push
or
add
cmp
xchg
mov
cmp
lods
xchg
popa
sbb
roll
sbb
jno
mov
adc
push
add
dec
enter
jo
and
addb
call
pop
mov
adc
andl
dec
call
shr
js
adc
cmpsl
inc
mov
incl
sub
xor
outsl
hlt
jg
cmovns
pop
shlb
loope
subb
add
cmp
aaa
adc
cli
xor
add
sbb
push
dec
push
mov
add
leave
int3
push
cwtl
enter
xchg
pop
pop
mov
push
inc
adc
loopne
jmp
leave
out
sarb
cmp
jne
enter
shlb
dec
mov
adc
add
mov
rclb
dec
nop
add
in
adc
clc
movsb
pop
inc
jo
nop
and
push
dec
scas
sbbb
xchg
repnz
jbe
add
pop
and
dec
mov
xchg
add
xor
mov
es
inc
add
sub
xor
cltd
push
popa
movups
sbb
sub
or
add
adc
or
and
and
je
cld
popa
mov
enter
hlt
dec
mov
lock
dec
add
cmp
call
dec
or
lret
mov
loopne
jl
add
sbb
and
mov
lods
rcl
sbb
int3
mov
dec
dec
enter
dec
les
fldenv
std
int3
add
cld
cwtl
call
and
cmp
jle
out
movsb
test
pusha
inc
jne
pushf
aas
push
cmp
sub
hlt
mov
cmp
nop
std
cmp
push
adc
lcall
mov
int
aas
js
je
xor
dec
insb
sbb
dec
dec
cmpl
mov
sti
xor
lock
pop
add
inc
aas
adc
dec
dec
jb
je
xchg
push
jge
dec
sbb
aas
add
cld
mov
add
mov
loopne
add
inc
adc
rolb
pop
pusha
setno
jb
add
and
test
movq
sub
js
jae
enter
add
add
jge
xor
rep
adc
lea
movzbl
pop
push
adc
add
add
or
xchg
call
stos
cmpb
push
jecxz
xor
iret
xor
add
or
or
rorb
mov
out
or
sub
add
ljmp
stc
std
jl
or
add
dec
stos
in
inc
dec
add
fldenv
out
mov
sbb
lock
push
je
clc
loop
mov
add
and
stos
push
pop
lret
add
sub
nop
ss
and
popf
pop
mov
pop
sub
rorb
adc
sbb
ljmp
mov
mov
out
loopne
add
dec
stos
or
jne
mov
adc
jge
cmpsl
add
neg
mov
add
push
xor
xor
xor
and
std
orl
aad
in
mov
jmp
stos
cmp
clc
and
jae
addb
cmp
sbb
cmp
outsl
dec
mov
add
jmp
xor
mov
roll
mov
div
mov
add
lods
mov
dec
rolb
hlt
add
xor
ljmp
jecxz
aas
add
or
jne
daa
sub
iret
es
add
push
or
and
and
add
cmp
jbe
add
jmp
pushf
fwait
add
mov
call
push
push
in
and
sub
add
mov
call
adc
repnz
je
add
in
xor
add
push
add
dec
cld
xchg
pop
ret
and
outsb
inc
add
pop
std
pop
sub
sbb
pop
mov
add
and
jle
test
cmp
cmp
and
adc
sub
sub
pop
xor
inc
pop
or
jb
cld
add
mov
mov
pop
in
add
pop
sbb
add
xchg
adc
scas
clc
or
ja
mov
ret
sub
or
dec
call
dec
mov
ret
nop
loopne
and
mov
adc
out
int3
cmc
data16
xor
cmp
or
cmp
adc
shll
mov
push
jle
out
add
sub
push
mov
enter
push
add
shlb
mov
add
lock
lods
ret
test
sti
push
shlb
jecxz
lods
push
cmp
je
sub
and
add
out
add
in
mov
sbb
or
add
cwtl
rcrb
cmp
xchg
add
inc
sbb
jmp
mov
sbb
mov
adc
mov
mov
int3
push
addb
pop
leave
cmp
and
ds
add
xor
shll
je
add
ss
jecxz
or
test
sahf
add
leave
pusha
add
add
daa
push
mov
dec
add
xchg
scas
sub
imul
or
sti
jmp
pop
in
ret
cmp
add
cld
repnz
sub
popa
in
imul
and
pop
dec
ret
sub
jg
in
adc
nop
add
jnp
push
mov
mov
add
sub
je
repz
sub
arpl
jne
nop
outsl
add
or
dec
pop
into
inc
daa
popf
mov
push
adc
jno
adc
nop
sti
add
imul
add
sub
cmp
mov
or
sub
in
movl
js
stc
bound
add
mov
gs
dec
lea
pop
flds
mov
and
fmuls
add
jl
sbb
add
dec
cli
jne
xorb
inc
add
jle,pt
adc
inc
sub
pop
pop
or
mov
jecxz
ret
cwtl
jp
loope
scas
and
push
mov
xor
pop
inc
addl
mov
push
repnz
mov
dec
int3
rcrl
mov
mov
leave
cmp
fisubl
scas
insl
bound
iret
scas
gs
or
add
mov
and
add
adc
inc
add
inc
lahf
adc
subl
inc
adc
movb
xor
fldt
sub
pop
imul
sar
inc
js
dec
pop
and
mov
add
sub
xor
sti
fmuls
leave
frstor
loopne
push
test
rolb
je
or
mov
idivb
add
jne
push
lea
add
mov
in
ffree
call
pcmpgtd
add
jo
jmp
xor
stos
pop
sbb
or
js
add
cmp
cmpl
decl
jae
lahf
mov
movb
fmull
add
or
adc
add
jmp
pop
movw
sub
sbb
and
icebp
adc
push
outsb
cmp
out
ljmp
push
push
push
push
out
mov
cs
add
or
imul
sti
loopne
clc
xor
jmp
iret
dec
testb
or
sub
cmpsl
sbb
loopne
jae
dec
add
and
or
pusha
js
add
inc
insl
xlat
push
mov
ret
fidivl
fwait
xlat
loopne
dec
sbb
or
and
pcmpeqw
dec
xor
jmp
xor
add
xor
stos
and
jp
push
and
pop
mov
inc
ljmp
or
push
or
hlt
faddl
cmpb
adc
int3
pop
dec
jmp
xlat
loopne
mov
sub
aad
jmp
lock
jb
fwait
jbe
call
add
out
fcoms
test
ds
addb
inc
dec
mov
call
inc
popf
cmp
sub
adc
je
dec
sub
add
aam
xchg
xor
jns
sub
shrb
lock
dec
ret
adc
call
aam
or
fchs
loopne
add
fistpll
cmp
test
jo
add
add
icebp
jmp
mov
ret
lods
cwtl
add
bswap
dec
je
lahf
add
sub
rorb
loopne
or
repnz
jb
pop
push
add
ljmp
mov
dec
mov
dec
push
sub
imul
pop
nop
cmp
jb
or
sbb
mov
or
out
xchg
hlt
mov
pop
psubsb
into
push
loopne
xchg
add
aam
movsb
lock
fwait
sub
and
mov
lods
movsl
mov
enter
pop
xor
xor
cmp
test
dec
scas
push
cmp
adcb
mov
and
or
inc
add
nop
or
or
add
adc
test
add
loopne
sub
test
mov
add
ret
nop
sahf
pop
mov
add
mov
mov
inc
and
rorl
lret
cmp
dec
sbb
mov
add
cmp
mov
ja
jb
pop
ret
add
clc
mov
add
sub
xchg
inc
loopne
add
bsf
notl
sub
fs
pop
or
test
push
pop
pop
mov
pop
mov
int3
jb
jo
mov
dec
hlt
xor
fninit
push
not
mov
pop
or
sarl
or
loopne
add
push
jno
clc
sti
or
xchg
popa
das
mov
add
fdivrs
in
insl
or
cwtl
mov
jl
push
loope
imul
push
stos
sarl
add
fdivr
fcmovb
loopne
add
test
divb
adc
jmp
test
add
pusha
mov
out
mov
call
push
ja
xchg
aad
insb
adc
adc
les
mov
xor
in
and
xor
mov
fcompl
jmp
add
pop
jb
cmpsl
pop
mov
adc
add
add
popf
mov
test
pusha
cmpsb
jp
cmp
jg
out
mov
imul
jne
stos
lret
add
clc
mov
pop
mov
pop
add
inc
cmc
sbb
and
sbb
into
jb
or
call
jmp
cli
cwtl
cltd
por
movsb
mov
add
cmpsb
sbb
daa
mov
loope
pop
xchg
aas
lret
nop
add
pop
xor
adc
pusha
outsb
add
jb
daa
or
or
mov
push
mov
rolb
shll
xor
or
pop
push
sub
jne
frstor
mov
fidivl
pop
pop
push
inc
push
repz
dec
stc
push
xchg
testl
sub
cmpsl
adc
in
add
mov
and
push
sbb
or
imul
push
rclb
addr16
push
adc
fists
sarb
lahf
dec
lock
push
stos
bound
ljmp
xor
lea
xchg
mov
push
xchg
ret
scas
rcrb
mov
idiv
add
inc
inc
inc
cmp
jne
into
lods
mov
add
mov
sbb
sbb
or
pop
sub
out
aaa
orb
push
adc
addb
jne
flds
add
push
outsl
dec
push
test
push
mov
mov
mov
xor
cmp
repnz
xchg
aam
enter
mov
xchg
fdivs
pop
add
add
loope
lcall
add
flds
sbb
loop
or
sbb
mov
andb
cmp
ret
sub
clc
pop
cs
test
repz
inc
xor
xor
cwtl
sbb
cli
ret
shrl
add
pushl
aas
dec
add
adc
mov
adc
loop
push
and
iret
push
inc
or
add
test
test
imul
mov
and
mov
cmp
leave
dec
out
pusha
fs
adc
je
loopne
mov
push
dec
negb
stos
enter
in
scas
inc
das
mov
mov
jo
add
xchg
pop
dec
jp
xor
cmpsl
daa
bound
sub
sti
add
scas
je
jle
imul
and
sbb
add
or
dec
scas
hlt
xchg
lds
and
add
in
cmp
pop
add
pusha
pop
lock
add
jne
test
adc
inc
inc
sbb
inc
inc
add
dec
dec
dec
dec
cmp
dec
dec
push
push
push
push
push
pop
push
mov
pop
popa
bound
fs
push
insb
sbb
outsb
outsl
add
jb
je
cmp
add
jp
xor
xor
add
sub
cmp
sub
orb
add
sub
add
or
or
xor
add
stos
leave
mov
push
add
lds
add
mov
add
xchg
lahf
dec
add
mov
jl
mov
bound
jbe
cmp
jmp
push
add
inc
push
mov
adc
inc
jmp
rorb
sub
hlt
sahf
push
jnp
pushf
rcll
arpl
mov
sub
push
lret
sub
test
push
lcall
mov
and
sub
and
mov
add
insl
test
sbbl
sub
sub
sar
into
lock
dec
imul
adc
mov
push
mov
or
sbb
or
inc
dec
xor
out
add
sti
orb
mov
or
pop
mov
lret
aas
mov
and
sbb
shr
dec
cmpl
jne
lahf
jg
xchg
fs
das
pop
les
add
iret
push
lods
adc
fldcw
hlt
xchg
aas
mov
movsb
in
lock
pop
orl
cmpsl
xchg
xchg
jae
pop
lcall
sti
add
add
xor
sub
scas
shlb
pop
fs
clc
xor
fwait
add
add
add
loop
add
out
pop
clc
andl
jmp
call
adc
mov
in
xchg
add
je
add
cmp
aam
inc
mov
ds
dec
jne
or
cmp
cmp
xor
and
dec
rclb
arpl
int3
jno
cli
mov
xchg
roll
dec
nop
sub
pusha
mov
cmp
inc
int
mov
sahf
pusha
jmp
xor
mov
stos
gs
fiadds
lret
mov
das
add
xor
sahf
es
imul
lcall
aaa
add
notl
add
in
addb
enter
add
fimuls
adc
cld
add
in
sub
add
sub
sub
dec
in
sbb
je
add
mov
push
xor
std
add
cmp
inc
inc
ret
fstpl
rcr
inc
int
lds
in
mov
das
inc
sub
aam
pop
xchg
or
rorb
add
or
push
cmc
test
daa
pop
jle
add
dec
lret
add
xchg
dec
mov
add
out
roll
mov
bnd
add
jo
stc
outsb
inc
push
xor
cmc
xor
lahf
ss
mov
add
jno
lock
mov
pop
and
cltd
int
hlt
inc
push
add
outsb
lret
pop
dec
sub
fistpll
sbb
loope
cmpsl
rolb
xor
xchg
adc
jae
add
xchg
push
repnz
setae
mov
mov
push
filds
mov
in
aad
fcoml
lea
adc
mov
cmp
push
push
push
sub
idivl
pop
add
cwtl
movsl
adc
mov
push
add
dec
mov
iret
cmp
imul
fs
and
add
jecxz
xor
add
subb
les
add
lock
lahf
mulb
add
outsl
dec
pop
jne
add
les
inc
lahf
mov
add
fldcw
and
or
in
pusha
cmp
movsb
ja
jl
cmp
add
or
xor
cmp
sbb
mov
adc
xor
push
add
hlt
add
movups
lret
add
subl
add
mov
js
mov
cmp
jl
mov
pop
pop
cltd
pusha
cmp
push
add
je
loop
rclb
pop
sub
mov
jmp
adcb
fiaddl
xchg
cld
incl
je
jmp
sbb
xor
lock
pop
bound
jne
movsl
jb
inc
and
loopne
sub
and
shl
es
in
outsl
dec
add
scas
fmulp
into
stos
das
add
xor
imull
mov
add
cmpl
add
fs
mov
jo
loopne
dec
sub
rcll
loope
xor
out
dec
sub
jecxz
push
sub
lods
in
and
pop
jno
dec
add
push
mov
sbb
sahf
hlt
lock
lcall
add
fldl
inc
cld
pop
push
lahf
roll
mov
test
je
add
out
mov
aam
inc
js
xchg
fsubs
mov
adcb
adc
push
add
adc
mov
jne
pop
aam
cvtps2pd
rol
hlt
push
call
xor
lret
pop
mov
mov
adc
add
push
fisubrl
js
xchg
testl
mov
popf
pop
mov
call
push
dec
nop
cld
add
push
clc
fwait
add
xchg
push
out
lea
dec
call
jle
frstor
adc
test
mov
pop
xor
or
in
jnp
ja
pop
or
push
aad
sub
stos
add
aam
add
and
xlat
ds
lret
mov
pop
aam
add
mov
leave
sbb
jae
and
dec
cmp
pop
ja
iret
sbb
ss
jge
add
xor
leave
dec
lock
inc
and
enter
aas
push
lcall
shr
xchg
fdivs
or
stos
repz
jmp
shl
ja
dec
or
pop
not
shl
shl
add
pop
add
sub
rcrb
scas
jb
fiaddl
jg
xchg
mov
pushf
mov
and
testl
lret
enter
inc
pop
add
xchg
cld
push
jne
xchg
adc
loope
jp
popa
fcompl
dec
cli
add
shrl
add
jno
adc
mov
adc
sbb
and
xor
aam
test
hlt
pop
mov
push
rol
pop
pop
add
xchg
push
mov
notb
pusha
and
into
jmp
inc
pop
inc
cmp
adc
icebp
daa
rcrl
pushf
mov
add
in
rcr
sub
xor
add
cmp
jl
das
mov
add
inc
xor
rol
xlat
fwait
add
adc
mov
mov
inc
pop
ret
add
jl
jle
mov
xchg
popf
leave
loopne
ffree
das
add
pop
loopne
fs
jae
or
test
orb
xlat
imul
mov
lock
jnp
push
mov
pop
jp
sahf
add
mov
pop
jle
sbb
cmc
into
shlb
mov
pop
and
iret
add
gs
cmpsl
sub
test
pusha
adc
sub
mov
scas
js
movsbl
leave
mov
dec
mov
push
cwtl
cltd
add
pop
pop
cmpsl
lock
loopne
stos
cmp
or
adc
ds
sub
sar
lea
push
repnz
in
test
mov
dec
out
mov
push
xor
call
pushf
icebp
xchg
mov
mov
and
pop
xor
push
sbbl
adc
mov
inc
stos
les
clc
sbb
adc
mov
add
dec
and
movsl
insl
add
loope
pop
pop
xchg
push
test
aam
clc
push
mov
cld
outsl
stos
les
mov
push
and
andb
sub
loope
in
lcall
stos
ret
aam
mov
or
dec
add
pop
jg
xor
mov
data16
popa
sub
pop
jnp
pop
sbb
add
jmp
in
ret
jge
sarl
pop
stos
ja
mov
inc
add
clc
les
add
je
push
addb
rcrb
and
pop
add
cmpsl
jo
cmp
push
add
xorb
es
test
jae
sub
xor
lock
xchg
dec
add
lods
xchg
pop
ja
or
movb
mov
adc
cli
add
dec
dec
repnz
int3
lods
inc
sbb
stc
cwtl
add
inc
dec
push
fistpll
cmc
in
or
popa
sub
cmpsl
dec
add
add
fs
xor
movsb
sbb
repnz
mov
cwtl
and
imul
push
jle
or
mov
andb
mov
xchg
adc
dec
push
in
inc
jno
add
pushf
xor
test
mov
popa
enter
call
arpl
js
add
mov
push
mov
loopne
xchg
push
leave
pop
push
dec
decl
add
xchg
stc
pusha
and
adc
mov
pusha
cmp
add
in
mov
lock
in
push
loopne
adc
mov
mov
fldl
mov
fdivs
fs
aad
cmp
cmpsb
jo
add
mov
push
je
fstpt
movsb
sbb
pop
jbe
xor
test
cmp
ds
jo
inc
and
push
pop
jge
fs
std
ret
pop
add
add
ror
jns
inc
jnp
add
scas
xchg
or
mov
out
xchg
inc
sbb
clc
aad
sub
movsb
xor
leave
fidivl
push
jle
test
add
jb
xor
push
int3
sbbl
add
les
js
pop
or
add
cmp
ja
fcmovnbe
or
pop
out
leave
rclb
pop
push
jns
rorl
xor
shrl
pop
or
in
call
add
push
cli
fldenv
dec
sub
push
cmp
pusha
inc
cltd
fsubrs
loopne
je
add
fwait
adc
repz
push
sbb
nop
dec
adcb
pusha
cld
mov
xchg
mov
add
ljmp
mov
clc
and
xchg
sub
xchg
adc
or
das
add
inc
les
lods
jb
mov
shrb
rcrl
jne
shlb
push
call
mov
pop
pop
fs
adc
jno
or
pop
dec
bound
jg
fwait
mov
inc
or
jp
cmp
cmp
add
sarb
add
iret
in
pushl
sbb
sub
fnstsw
dec
sub
mov
cwtl
out
loopne
xor
pop
add
lea
scas
rcr
or
cmp
pop
xchg
adc
pop
push
inc
pushf
add
jbe
or
dec
call
and
mov
loopne
add
ficoms
sub
xchg
or
lret
hlt
xchg
and
jb
bound
push
add
mov
mov
add
add
and
cmp
mov
loopne,pn
add
jl
pop
cld
fs
push
add
mov
add
jns
cmp
add
loopne
mov
jno
mov
test
pop
jne
pop
call
cmp
adc
mov
inc
adc
imul
mov
sub
add
rclb
pop
jne
mov
mov
adc
icebp
cmp
mov
inc
jae
inc
lds
mov
add
sarl
add
test
loopne
dec
push
adc
cmp
sub
data16
push
roll
add
cmpsl
jne
push
out
orl
outsb
sbb
or
mov
das
inc
pop
ja
loope,pt
pop
ret
xor
imul
fdivrl
imull
enter
loope
pop
jecxz
and
in
ss
inc
push
push
hlt
sub
ret
imull
mov
cmc
xor
jecxz
loope
fmuls
lret
push
loopne
pushf
movsl
cli
pop
add
mov
imul
ret
scas
add
push
aad
sahf
fiadds
xchg
loop
dec
enter
push
inc
and
add
pusha
addl
push
out
add
pop
xchg
movsb
push
and
inc
test
mov
hlt
xor
add
push
mov
inc
pop
cwtl
divl
add
movb
les
pop
pop
sbb
paddw
push
mov
or
sub
outsb
push
push
call
xor
dec
rclb
sub
sbb
push
sbb
pushf
add
cmc
or
adc
hlt
mov
clc
add
mov
add
cs
aas
add
and
adc
mov
xchg
adc
jp
inc
iret
jmp
adc
add
dec
sub
sarl
jle
inc
in
movsb
js
movsb
test
sub
subl
pop
sarb
push
sub
mov
into
fldl
add
pop
jge
or
adc
pop
mov
mov
jp
add
int
dec
mov
push
ss
rcr
pop
mov
pop
les
shlb
iret
jl
add
push
lret
push
lock
and
mov
xchg
add
movsl
pop
das
popa
xchg
mov
inc
psubq
rcl
and
cli
sbb
add
add
inc
call
push
cld
loopne
sbb
pop
negb
inc
rolb
andps
sete
adc
add
xor
jo
adc
dec
inc
mov
sbb
inc
into
cld
dec
add
xchg
add
mov
dec
add
mov
sbb
mov
cmp
jmp
lret
lock
jne
pop
addr16
and
rorb
jmp
sbb
xchg
rorb
add
xor
rcll
out
sbb
mov
lret
jno
mov
dec
and
call
adcb
xor
or
adc
dec
sbb
xchg
or
loop
dec
fsub
add
iret
xchg
and
cmpb
xchg
sub
ss
wbinvd
ficompl
dec
pop
test
ret
lock
mov
pop
add
inc
xor
add
ds
cwtl
arpl
nop
add
push
mov
and
xchg
add
dec
iret
sub
pusha
jmp
aas
adc
jle
clc
and
adc
cs
add
dec
dec
neg
jb
add
mov
add
fdivrs
xchg
int
sub
rep
push
adc
mov
add
mov
and
repnz
add
adc
loopne
lods
add
inc
scas
pop
push
mov
fmulp
gs
add
jmp
test
mov
gs
add
into
inc
inc
ljmp
cwtl
test
sarl
mov
pop
insl
mov
push
imul
xor
pop
jno
aam
bound
jl
cld
add
test
jge
dec
pop
push
inc
adc
add
inc
inc
jne
add
popl
fmull
xchg
ljmpw
jo
jnp
pop
ljmp
add
and
cmp
and
mov
add
xchg
imul
push
mov
cmp
inc
shlb
jne
jo
sbb
je
mov
bound
lods
sarb
add
push
add
ds
add
adc
loope
clc
out
dec
sbb
imul
cld
mov
push
test
cmpl
adc
jl
shr
xor
and
lahf
aad
aam
je
inc
push
filds
jo
mov
stc
imul
sub
in
pop
push
cld
fstl
mov
into
stos
add
mov
fsubrs
mov
mov
sahf
sbb
mov
int
sub
popa
mov
in
adc
pop
sub
xchg
xor
scas
incb
lds
add
adc
mov
push
add
movb
add
minps
int3
xchg
inc
push
push
popf
pop
or
call
stos
fcmovnu
and
daa
mov
mov
dec
or
pop
add
mov
ret
jge
mov
es
mov
sar
lea
push
je
dec
jae
mov
add
int
mov
mov
test
mov
movsb
add
fmull
sahf
in
nop
push
adc
push
jecxz
xchg
arpl
cs
leave
xchg
sbb
add
stos
dec
and
mov
jmp
or
test
add
adc
sbb
push
or
seto
and
pop
add
ret
jmp
inc
add
imul
call
xchg
adc
jmp
pop
stos
push
ja
fisttpll
call
sub
push
sbb
jno
aas
lret
adc
pop
mov
adc
icebp
ficompl
test
inc
insb
or
add
lods
out
and
push
dec
add
xlat
add
push
filds
and
cmpw
add
push
adc
mov
cmp
mov
push
adc
add
xor
ljmp
or
or
mov
dec
pop
add
mov
add
add
js
or
loope
pop
clc
push
add
or
mov
frstor
pop
pop
jae
pusha
jmp
or
jge
sub
in
xor
mov
je
mov
push
add
decl
mov
shlb
ljmp
shlb
push
add
sarl
or
sbb
decb
mov
dec
cmp
mov
in
mov
pop
or
add
sub
in
stos
enter
data16
cld
jge,pn
xchg
jbe
pop
adc
stos
adc
add
cli
and
stos
je
add
dec
push
test
mov
test
aad
sub
pushf
adc
out
add
dec
push
sub
xor
jge
pusha
pop
sub
adc
stos
sbb
fnstcw
adc
jno
add
mov
cmp
push
into
ret
arpl
mov
mov
icebp
dec
daa
sbb
inc
repnz
cmp
jb
sarb
test
add
cwtl
mov
sub
rolb
cmp
mull
je
sbb
add
sbb
and
clc
push
or
lock
pop
add
mov
dec
nop
or
jbe
push
inc
inc
jmp
add
outsl
inc
addl
mov
push
pop
mov
dec
fsubrl
repnz
fwait
mov
adc
cmpb
cmp
jb
rol
sub
sbb
and
push
jae
test
push
jge
add
dec
sbb
push
repnz
and
andb
add
xlat
je
add
loopne
loope
daa
pop
pop
sbb
test
sbb
or
divl
add
sbb
xchg
adc
test
adc
nop
cltd
and
leave
mov
in
lret
add
test
sbb
add
and
xor
adc
hlt
lret
add
sub
or
xor
push
ljmp
cmpsb
sbb
das
imul
notb
mov
popa
iret
and
add
inc
movb
add
pop
imul
loopne
test
push
xchg
push
js
call
add
add
and
adc
add
popf
jns
add
xlat
mov
xor
clc
push
sbb
add
ret
cmp
sub
push
sbb
das
mov
pop
sbb
fldl
jecxz
jns
push
out
dec
les
jmp
push
and
nop
subl
test
stos
and
in
pop
inc
enter
mov
dec
xchg
stos
sub
mov
mov
mov
lds
and
or
jno
movsl
aad
andb
adc
add
cmp
lea
mov
dec
stc
roll
enter
jo
in
rclb
push
xor
and
inc
enter
inc
out
add
jae
outsl
insl
dec
outsb
imul
lock
cmc
scas
fidivs
stc
adc
mulb
enter
sub
xchg
sub
lret
arpl
add
bound
dec
xchg
add
mov
fcompl
lods
add
jg
cmp
sub
iret
incl
add
mov
push
cwtl
cmp
add
lea
hlt
rolb
mov
data16
imul
jg
dec
add
or
incl
fisubs
rol
popl
idivb
das
mov
hlt
shrb
mov
jecxz
add
push
stos
ja
mov
add
push
fwait
cld
aaa
mov
lock
sbb
adc
fnsave
mov
add
jg
std
adc
pop
mov
stos
or
add
inc
faddl
dec
pop
and
mov
xor
divl
out
push
rorb
nop
rclb
xchg
dec
add
in
pop
subb
inc
es
add
jns
jmp
add
jl
push
iret
les
enter
lea
pop
xchg
in
cmp
inc
cmp
pop
sub
out
pusha
mov
cld
pop
add
mov
xchg
add
xor
ljmp
and
loope
xor
lds
test
cmpsb
hlt
addl
dec
cli
sarl
mov
inc
sbb
add
jmp
mov
sbb
stc
arpl
add
push
loope
cmp
test
lods
sub
mov
push
mov
inc
add
xor
sbb
int
adc
ljmp
push
mov
mov
arpl
clc
mov
mov
lret
mov
inc
fmuls
roll
sub
cmp
inc
push
cmpb
jo
sti
lea
sub
cld
jno
sbb
es
aas
ja
add
call
mov
add
lods
fs
mov
aas
lret
pop
inc
imul
ljmp
inc
add
inc
lret
add
sti
push
push
pop
jne
push
pop
loopne
mov
lods
push
dec
imul
test
pusha
arpl
jl
nop
js
cld
xlat
xchg
jle
mov
sub
pop
std
add
lods
pop
mov
cmp
shr
sub
xchg
push
push
movsl
xor
push
mov
add
dec
addr16
sahf
fidivrl
and
arpl
les
stc
sub
mov
stos
pop
add
pop
pop
repz
movsb
cmp
adc
leave
mov
cld
push
pop
add
xor
adc
xchg
mov
sub
inc
mov
xor
xchg
divl
jns
or
jp
jle
test
pop
xchg
and
mov
out
out
divl
xchg
inc
inc
inc
mov
dec
push
imul
mov
add
inc
mov
aas
ret
popw
xchg
dec
jnp
aam
or
pop
add
and
fldcw
pop
and
and
cs
xchg
push
mov
add
or
dec
pop
or
sub
adc
jg
inc
adc
and
adc
lgs
adc
push
push
jge
lret
rcrb
jnp
add
pop
inc
sbb
das
cs
nop
dec
add
fsubrs
or
xor
inc
push
cmc
mov
mov
mov
enter
cmp
sbb
pushf
or
enter
sub
sub
xor
cmp
cmp
sahf
fisttps
arpl
pop
ja
xor
call
ret
mov
add
flds
sub
add
mov
xchg
mov
xor
out
adc
enter
frstor
ficompl
mov
push
sbb
add
add
movsl
pop
add
cwtl
or
loop
shr
in
lret
add
sti
add
dec
sbb
pop
add
dec
adc
enter
scas
add
imull
push
popf
aam
add
rolb
add
xor
and
movb
push
jle
add
lds
ja
inc
xchg
adc
add
mov
xor
cmp
loopne
add
xor
notb
jl
pop
pop
mov
ljmp
add
mov
or
push
push
mov
decl
and
ret
mov
add
fsubl
inc
test
add
filds
rclb
inc
mov
mov
nop
fisttps
jo
push
inc
mov
mov
xchg
jae
dec
adc
mov
cld
int3
enter
aam
fadds
and
add
nop
shlb
in
and
adc
lock
mov
pop
dec
xchg
js
out
cld
out
inc
cmp
loope
imul
out
and
out
test
push
add
jnp
or
cld
sbb
xchg
jp
add
shrl
add
inc
fxrstor
jecxz
imul
dec
test
mov
cld
push
dec
adc
dec
punpcklbw
bound
sbb
je
js
jl
add
fistpll
inc
push
inc
call
pop
mov
or
lret
rolb
mov
jg
js
dec
mov
adc
jl
inc
mov
push
call
add
ss
jg
add
jl
inc
std
inc
push
dec
push
or
cmpb
ss
push
mov
mov
pop
les
sbbl
jo
add
mov
test
push
cli
je
adc
add
push
add
pop
andl
jge
add
xchg
xor
or
push
adc
add
cmp
pushf
mov
add
mov
outsl
add
stc
xchg
cmp
add
in
sub
inc
shlb
adc
xor
dec
adc
ja
sbb
cmp
sbb
pop
mov
inc
mov
adc
mov
ror
push
xchg
add
xor
test
pop
fldl
shll
xor
testl
pop
add
fiaddl
push
lods
push
cmpsb
lds
jge
or
lret
add
or
adc
pop
jp
sti
mov
add
push
nop
pop
enter
adc
inc
add
jne
sarl
test
cs
or
adc
xorb
push
or
pop
pop
les
and
adc
cmp
sbb
mov
mov
es
push
push
add
repnz
or
adc
pop
and
push
dec
adc
pop
xchg
sbb
mov
pop
cmp
pop
or
bound
mov
inc
or
iret
inc
dec
lret
fwait
adc
movsl
push
pop
pop
sbb
punpcklbw
adc
sub
adc
out
les
xchg
lods
das
stc
and
les
pop
mov
add
sbb
sbb
inc
mov
sub
shrd
adc
pop
adc
aaa
jns
or
shlb
lcall
and
or
adc
and
cmp
std
mov
movsl
insb
and
or
out
cvttps2pi
adc
pusha
and
sbb
jg
add
gs
add
adc
lea
mov
add
inc
icebp
inc
aad
int3
and
sbb
or
and
jns
scas
add
outsb
cmp
pop
sub
cmc
dec
movsl
add
jg
and
push
push
add
mov
fwait
loopne
pop
stos
or
pop
cmpb
int
add
sub
add
inc
in
or
hlt
jge
add
push
sbb
sbb
loopne
and
jne
nop
rorl
xor
cmp
cmp
packssdw
and
std
xchg
in
mov
stc
sbb
test
out
shl
xlat
stos
cmovo
cmp
jbe
incl
cmpsb
or
call
dec
lret
and
pop
sar
inc
jae
lea
ljmp
call
test
sbb
inc
adc
call
inc
int
pop
cmp
roll
notl
sub
cmp
inc
ss
test
and
leave
ds
gs
out
cmp
jae
jecxz
inc
add
add
and
jbe
or
subb
cmpsl
adc
push
inc
clc
fidivl
mov
jnp
push
xchg
dec
movb
mov
mov
mov
repz
pop
xchg
test
mov
xchg
aad
pop
sub
dec
rcl
sub
roll
push
out
dec
pop
pop
jge
push
outsl
sub
cmp
fiadds
xchg
mull
xlat
xchg
dec
pop
and
pop
sub
push
and
ret
stos
popf
adc
dec
xor
les
pushf
cwtl
adc
inc
mov
andps
or
cmp
mov
mov
add
sub
fs
xchg
fsubs
faddl
lds
sbb
fstl
sbb
scas
push
fsubs
icebp
js
add
pop
mov
rcll
and
insb
data16
xor
shlb
xor
clc
fs
xchg
xor
loopne
push
jnp
ljmp
add
adc
and
push
in
clc
bound
aas
xchg
shlb
push
push
sbb
jo
dec
or
enter
orb
ss
sub
cmp
mov
jo
jl
add
mov
push
jbe
cli
pop
sbb
cmp
fdivl
in
or
xor
shl
add
call
sub
push
data16
xor
sbb
je
inc
sbbl
pop
cmc
mov
lahf
fistl
add
jae
pop
rolb
add
leave
pop
call
pusha
imul
jbe
jb
hlt
cwtl
add
dec
js
je
pop
neg
sbbl
add
push
cwtl
pop
and
inc
add
not
pusha
call
pop
cmp
iret
subb
lods
and
rdpmc
or
pop
sbb
and
and
out
push
in
jp
add
lods
clc
cmp
out
call
sbb
insb
xor
or
xchg
lock
or
out
adc
clc
outsl
and
lods
jmp
xorb
fists
sbb
or
in
lret
adc
cmp
shlb
sbb
add
sti
adc
push
and
add
or
into
shlb
adc
jle
subl
xor
mov
repnz
or
aam
cmp
loopne
xor
in
std
cwtl
push
add
pop
add
xlat
jg
push
or
add
decl
sub
aam
enter
or
ret
xor
or
add
add
mov
or
pop
push
sbb
ja
mov
mov
jo
in
test
mov
movsb
mov
xor
dec
adc
or
mov
add
adc
icebp
or
add
adc
out
test
repnz
adc
push
rorl
hlt
push
add
push
movsb
cwtl
orb
scas
out
inc
add
push
mov
add
fisubs
pop
cmc
fs
adc
icebp
push
add
cmp
arpl
adc
add
mov
xor
fcompl
cltd
pusha
adc
mov
mov
or
sbb
pop
lock
fsubr
add
push
out
icebp
lock
hlt
jmp
in
add
xchg
jl
ljmp
sub
xrelease
fldenv
push
inc
pop
in
mov
repz
add
data16
mov
add
movsb
mov
rorb
enter
out
or
loop
insb
pop
adc
add
int
mov
repnz
jmp
xor
call
outsb
loopne
rcrl
dec
adc
leave
dec
jo
adc
add
jns
add
adc
dec
ja
add
mov
and
xchg
fadds
lock
enter
add
dec
mov
popa
paddd
mov
inc
xor
loopne
add
loope
ret
sbbl
pusha
cwtl
mov
add
int
mov
push
add
insb
nopl
fnstenv
mov
loopne
add
movb
addb
clc
cmp
mov
lods
and
aad
fistl
in
jle,pt
add
push
adc
push
cmpsb
cmpl
shl
lods
inc
mov
rclb
test
and
les
lahf
push
add
inc
pop
aad
scas
push
sbb
int3
cld
fnstcw
add
outsb
xchg
push
add
aas
add
pop
in
dec
add
cmp
jge
loope
push
add
inc
mov
dec
test
push
mov
add
sub
mov
add
sbb
add
inc
faddl
dec
jl
pop
into
pop
pop
dec
shr
push
sti
mov
add
push
outsl
push
loopne
shll
add
out
adc
and
addb
inc
add
cli
add
sti
lahf
cmpsb
loope
push
mov
cwtl
call
sub
add
dec
mov
add
dec
inc
or
xor
add
imul
iret
sar
stos
jge
into
mov
inc
and
dec
rcl
add
int3
push
add
or
push
cmp
mov
jl
test
inc
roll
add
add
xchg
icebp
lods
mov
pop
dec
inc
ja
inc
sbb
les
test
adc
js
xchg
mov
scas
inc
pusha
adc
push
test
jge
dec
fcoms
testl
pop
adc
and
scas
clc
inc
add
xor
xchg
pop
cmpxchg
sbb
mov
add
ror
cmpsl
divps
and
adc
lret
call
jno
pusha
mov
adc
add
sub
bnd
cmp
adc
mov
xchg
lock
add
and
test
and
call
fs
sbb
inc
add
xchg
clc
sbb
in
adc
mov
pop
pop
es
data16
dec
pushf
movsb
cmpsb
and
push
adc
stos
pop
mov
mov
cwtl
icebp
add
or
dec
in
call
popa
psubw
jnp
push
and
sub
push
adc
add
icebp
ss
lock
hlt
in
out
mov
mov
daa
in
add
shl
shlb
jmp
mov
shl
js
add
and
scas
pop
shlb
ret
adc
lods
loop
adc
or
adc
nop
mov
and
pop
inc
loopne
test
mov
loopne
add
iret
mov
mov
daa
cld
icebp
sbb
pop
cwtl
jo
clc
mov
cmp
fdivrs
lock
pop
fsts
add
inc
imul
out
pop
or
mov
bound
cmp
adc
int3
add
add
imulb
jno
xchg
rolb
cli
xchg
mov
or
pop
xor
sub
add
jp
pop
mov
adc
ret
sbb
sbbl
mov
add
or
mov
add
cs
or
add
sbb
adc
dec
inc
push
sti
push
and
clc
or
jnp
xor
mov
icebp
sub
hlt
mov
xchg
xchg
xor
aas
jle
sbbb
sbb
scas
dec
out
add
daa
mov
nop
mov
or
faddl
xor
aam
clc
cld
prefetchnta
add
sbb
icebp
and
cmp
rcl
ret
add
push
or
iret
add
out
test
pop
movhps
sub
adc
pop
jne
testb
lods
les
push
add
hlt
inc
lock
add
out
mov
and
push
mov
lcall
cli
testb
ja
aam
dec
add
cmpsl
adc
xchg
stos
movsb
jo
or
mov
movups
pop
add
cmp
ljmp
or
jp
push
jo
pop
add
pop
sub
inc
sbb
or
xchg
int3
aad
sbb
les
mov
hlt
out
sub
add
rcrl
test
jbe
pop
inc
mov
inc
lock
adc
add
int
fstpt
loopne
sub
inc
cld
push
add
inc
add
push
mov
mov
add
adc
or
pop
jle
notl
loopne
pop
inc
sbb
cmp
daa
js
xchg
adc
sbb
stos
add
es
nop
add
xchg
roll
xchg
mov
xor
insl
add
mov
aas
sub
movsl
push
dec
int3
dec
in
add
stos
sub
loopne
cld
adc
push
mov
jl
dec
push
aas
jle
cmp
cmp
mov
dec
or
sbb
mov
dec
mov
and
and
popa
cli
xor
mov
xlat
test
xchg
add
cmc
jno
popa
sbb
out
and
or
sub
pop
add
fwait
popf
dec
dec
lret
cmp
or
ljmp
mov
sbb
addr16
xchg
xlat
sub
xchg
test
dec
sbb
add
pop
add
jmp
jl
fildll
adc
xlat
pop
paddw
add
leave
enter
sti
jno
add
sbb
and
add
arpl
clc
or
jge
mov
add
mov
jl
push
add
pusha
cs
test
sub
cmp
cld
or
loopne
mov
xor
cmp
sbb
push
sbb
xor
cmp
and
call
cmp
or
mov
push
adcb
clc
mov
cmpsl
add
or
insb
xchg
outsl
insl
loop
enter
sub
jecxz
xor
cld
ljmp
lea
add
int
test
add
sub
xor
insb
or
dec
sti
leave
inc
fistpl
pushf
in
insl
nop
or
cs
daa
push
test
add
or
pop
adc
add
js
rcll
and
jl
add
adc
and
fucomip
ss
inc
add
and
adc
out
movsb
ljmp
or
idivb
cmp
fbld
push
and
jmp
sub
in
aaa
jle
fwait
adc
sbb
mov
adc
dec
jmp
call
leave
or
mov
cli
inc
loop
pusha
ficoml
mov
and
test
icebp
push
or
loopne
cmp
add
or
adc
sub
in
sbb
dec
inc
push
jmp
pop
add
xor
mov
cmpxchg
pop
and
shll
sub
mov
loopne
popf
add
xchg
pop
addr16
push
add
mov
sbb
call
sbb
in
dec
and
adc
mov
or
adc
add
cmp
jmp
pop
pop
out
or
adc
pop
add
inc
cli
stos
inc
fs
into
jo
pop
jo
or
inc
add
jle
sbb
push
out
jp
sbb
and
aas
push
add
push
daa
out
fbld
pop
sbb
adc
repnz
ljmp
add
aas
and
test
inc
or
jbe
add
jmp
xor
loop
aam
mov
cs
pop
jbe
sbb
lahf
rcrb
mov
sbb
mov
adcb
add
aaa
shl
scas
adc
jl
and
jns
out
iret
or
xor
wbinvd
mov
inc
and
cwtl
jns
jp
add
lea
push
add
ss
pop
mov
mov
mov
inc
dec
adc
lods
add
insl
es
pop
icebp
add
xor
xor
or
into
es
adc
inc
or
push
inc
daa
div
sbb
jmp
cmp
dec
std
and
aam
sub
aas
insb
call
push
add
push
add
in
daa
mov
sbb
aaa
mov
sbb
or
push
pusha
flds
pop
sub
repz
sbb
xchg
sub
adc
jl
or
out
adc
mov
test
cmp
lock
clc
aas
cmpsb
xor
outsb
shl
sbb
jecxz
and
cs
cmp
fsubrl
fs
add
push
fisubs
inc
sbb
add
lret
cmp
pusha
jge
jb
add
aam
aaa
mov
sub
add
mov
mov
outsb
and
aaa
cmp
sub
xchg
cmp
lods
mov
or
inc
arpl
adc
push
and
gs
incl
pop
add
jge
mov
push
mov
lea
loop
add
sub
or
lcall
lcall
repnz
xor
bound
dec
nop
and
add
test
push
dec
jl
unpcklps
mov
dec
lahf
cmp
cmp
out
sub
or
clc
icebp
pop
in
add
or
sbb
leave
cltd
cld
shl
dec
aas
mov
xor
adc
enter
in
les
call
xchg
sub
pop
mov
xor
xchg
add
inc
loope
adc
xchg
xor
adc
mov
push
add
loope
sub
paddd
pop
pop
daa
mov
ret
ss
loop
rcl
or
dec
sub
out
inc
mov
pusha
sub
clc
cs
mulb
ret
xor
movzwl
xchg
out
repnz
xchg
pop
in
sub
cld
test
or
and
std
and
sbb
nop
or
movups
push
addl
lea
adc
sahf
arpl
add
lret
popf
sub
add
pop
das
lcall
push
push
push
jl
movd
sbb
mov
add
in
dec
inc
xchg
pusha
into
je
add
mov
jge
pop
loop
mov
push
or
stc
rcrl
xchg
sbb
jns
push
std
add
cmp
scas
jo
mov
jns
pop
mull
aam
and
ss
xor
mov
movsb
xor
push
in
pop
ds
fstpt
inc
mov
repnz
jno
lods
ds
xor
adc
mov
add
xor
xor
sub
cld
fidivrl
pop
mov
repnz
stc
xchg
jp
mov
scas
jae
outsb
or
xchg
dec
shlb
pop
adc
sarb
jo
insl
mov
cmp
testl
imul
stc
lret
push
out
pop
sub
mov
or
xor
cwtl
adc
mov
adc
out
mov
clc
ss
push
jge
adc
mov
push
fs
shrl
xor
es
cmpsl
xchg
les
fnstcw
inc
and
or
push
aas
mov
add
adc
mov
or
es
pop
sub
or
add
inc
sub
call
xor
std
adc
repnz
adc
mov
hlt
xchg
cmp
pop
xor
push
mov
daa
pop
aas
jbe
ret
fisubrl
jns
add
jnp
mov
pop
stos
out
add
stos
shrl
jmp
xor
outsl
loop
jnp
mov
xchg
ss
stos
icebp
mov
jmp
or
sub
mov
inc
add
push
dec
outsb
push
adc
aaa
insb
add
and
xchg
cltd
imul
inc
add
push
or
jle
popw
add
adc
cmc
jecxz
push
ret
lahf
lock
mov
add
or
mov
faddl
arpl
outsb
lcall
js
cvtpi2ps
mov
mov
leave
jle
and
xor
add
add
add
inc
or
mov
xchg
mov
sbb
aas
inc
out
rolb
cmpsl
movsb
jno
dec
dec
add
xchg
jbe
mov
xor
adc
int3
sub
lods
fwait
out
in
loope
jle
pop
rolb
mov
sbb
rcrl
mov
rorb
jae
pop
out
cmp
jl
mov
pop
add
mov
adc
pop
or
pop
push
mov
outsl
bound
repnz
cwtl
add
mov
mov
adc
rcrl
cltd
fstps
in
pop
popa
ds
test
xor
outsl
add
or
jmp
jae
jns
pop
mov
push
and
cmp
cld
or
outsl
dec
sbb
mov
jl
push
xchg
sbb
mov
sub
pcmpgtw
rol
cmp
jbe
jge
hlt
fldl
and
shrl
loop
or
mov
sbb
jg
add
bound
dec
or
sbbb
xlat
jno
add
sbb
icebp
pop
xor
lret
lock
push
dec
adc
popf
repz
popl
repnz
jge
or
arpl
add
jo
push
jne
or
add
pop
pushf
ret
jg
loopne
or
mov
xlat
add
sbb
test
xchg
mov
mov
call
jmp
mov
lock
or
pop
add
sbb
hlt
add
fchs
push
enter
fsubl
test
push
fs
stos
xorb
adc
mov
ja
cmp
add
mov
into
test
add
dec
pop
push
in
pop
jl
add
jbe
cmp
sub
shl
and
out
mov
cs
xor
dec
mov
dec
in
pop
in
stc
pop
mov
cmpb
add
lods
sub
and
and
test
xchg
inc
clc
jo
or
add
fisubrs
outsb
add
out
test
sti
es
shl
jb
into
lods
push
fs
andb
xor
lcall
je
mov
adc
mov
jecxz
jmp
call
cli
test
and
pushf
adc
mov
pusha
ret
pusha
hlt
jb
fs
pop
enter
nop
sub
mov
xor
add
fists
testb
inc
mov
sbb
repnz
xor
clc
add
and
stos
or
je
add
scas
enter
push
clc
add
xor
lcall
test
add
and
mov
lock
insb
aad
jo
jb
imul
mov
jg
mov
test
movsl
neg
and
bound
jb
jge
mov
iret
sbb
xchg
mov
inc
pushf
test
lea
push
movsb
or
add
stos
jg
nop
test
add
jnp
add
ljmp
movsb
cmp
add
jle
imul
cmp
and
mov
out
inc
lods
pop
adc
aaa
js
add
and
fdivrl
out
adc
in
and
sub
shrd
and
jmp
out
enter
xor
mov
or
cmp
push
andb
fdivr
enter
mov
cmp
les
test
outsl
daa
test
xchg
in
adc
fiadds
jo
jb
loop
bound
cmp
lock
icebp
jae
stos
or
hlt
je
sbbl
or
adc
lret
sub
xor
or
xor
jmp
sub
sub
mov
mov
mov
adc
jg
xchg
lahf
add
sbb
clc
and
rorl
stc
stos
adc
xor
add
cmp
mov
aas
push
add
inc
add
or
push
jae
add
sub
add
lods
add
enter
mov
add
aas
xor
or
or
rol
lcall
dec
fsubl
call
jecxz
loop
sbb
xor
pop
lahf
pop
movb
in
add
cld
rol
shll
inc
xor
testb
mov
mov
je
add
jcxz
and
mov
xor
push
call
jg
and
xor
pop
dec
add
mov
addb
dec
shll
inc
ret
std
push
cmp
pop
add
rolb
pusha
jle
int3
inc
or
orb
ror
into
cmp
cmp
in
call
add
rorb
or
cld
inc
aas
fcomp
iret
push
sbb
flds
sbb
fildl
loopne
lock
out
or
sbb
loopne
add
adcl
sub
rclb
push
push
inc
ret
rorb
mov
iret
roll
sbbl
shlb
xor
icebp
add
xor
repz
cmp
testb
loopne
add
cmc
shlb
mov
add
cmp
testb
aas
cmpb
incb
cmp
sti
sarb
and
cmpl
test
jecxz
inc
sub
jmp
inc
sub
xchg
cmp
cmp
cmp
add
shr
subl
sbb
and
daa
test
addl
movl
and
loope
es
and
xchg
pop
mov
pushf
mov
stos
nop
mov
push
cmpsb
daa
cmpsl
add
movsl
rclb
cmp
add
subl
subb
scas
in
call
jo
add
test
push
or
mov
inc
jg
jg
je
jbe
jle
push
jge
mov
jl
mov
je
jne
jo
sbb
mov
mov
sbb
push
jb
mov
mov
jae
mov
jno
jo
mov
push
or
nop
adcl
push
xchg
in
call
jo
add
xchg
adcl
cmp
add
pop
lahf
sbbl
fwait
sbbb
add
pop
inc
cwtl
decb
in
mov
dec
xor
mov
mov
cmp
dec
cmp
add
inc
mov
inc
rcll
addl
addl
xor
jno
cwtl
in
loop
ret
pop
push
push
push
mov
ja
cld
add
loope
punpcklbw
popf
imul
imul
test
add
push
push
bts
loopne
mov
fcompl
xchg
jl
mov
push
inc
cwtl
and
inc
xadd
call
andb
cmpsl
out
jno
out
push
add
add
pcmpgtb
and
inc
js
push
fcoms
and
push
outsl
rcrl
je
sti
cmp
xchg
add
inc
addb
call
xor
call
add
pop
imul
call
push
push
insb
adcb
add
mov
pushf
lcall
lods
xor
js
or
shr
jae
orb
incb
leave
cwtl
cmc
pop
push
mov
dec
movsl
sbbl
mov
and
repz
movsb
syscall
mov
hlt
lock
leave
data16
sbb
or
push
and
mov
cmp
jae
dec
pusha
add
inc
dec
inc
fnstsw
add
push
jb
xchg
mov
out
add
rolb
scas
arpl
mov
fildl
das
loope
in
fimuls
jmp
sbb
jne
add
adc
add
xchg
push
xor
push
inc
add
jo
cmp
add
pop
add
movsb
sahf
push
xor
add
push
add
mov
sub
xchg
add
test
dec
mov
sar
xchg
fcompl
movl
or
dec
add
dec
pop
test
movsb
leave
inc
loop
push
ds
ljmp
mov
add
ret
jae
pop
stos
add
add
dec
ret
jecxz
sbb
stc
xor
jmp
jp
pop
sbb
add
dec
or
add
xchg
jno
jmp
into
adc
stos
lret
or
jbe
add
mov
cmp
mov
sbb
aas
fdivrp
pop
push
ljmp
mov
int
outsl
mov
cmp
sbb
mov
xchg
lock
inc
xor
add
and
scas
and
sub
xchg
jno
sub
or
add
fwait
addb
pop
mov
add
sub
test
mov
adc
cmp
add
push
push
cli
mov
rorl
sbb
dec
stc
lods
mov
xchg
sub
pop
out
pushf
mov
mov
mov
xchg
daa
push
and
test
dec
mov
adc
push
mov
mov
cmp
lods
ss
or
das
je
and
add
mov
sbb
adc
inc
xor
dec
pusha
dec
add
xchg
repz
sbb
or
xchg
clc
jb
push
lock
icebp
inc
jmp
in
dec
test
repnz
pop
adc
cmp
repnz
mov
mov
pop
mov
push
push
fs
lods
sbb
inc
dec
lods
lret
sbbb
mov
push
arpl
push
test
test
inc
lahf
or
xchg
nop
pop
sbb
mov
movsb
test
mov
and
pop
jb
int3
inc
cmp
orl
aam
jbe
dec
es
or
add
pop
push
test
sub
xor
repz
or
negl
test
xor
pop
mov
adc
and
or
or
sbb
sub
mov
in
les
and
push
in
dec
sbb
repnz
inc
or
psllq
adc
mov
pop
mov
or
icebp
push
and
mov
test
add
pop
sbb
or
or
add
mov
popl
xor
mov
pusha
push
loopne
repnz
cmp
jge
or
add
add
fstps
sbb
rorl
or
daa
or
shr
mov
inc
pop
add
rcrl
cmpsb
je
mov
lret
inc
and
sbb
sub
repnz
inc
dec
push
add
pop
xchg
sbb
or
mov
cli
and
ret
push
add
add
sub
enter
popw
push
sti
jo
sbb
mov
or
xchg
push
loop
add
jo
cmp
sub
xor
add
push
cmp
rolb
jns
add
dec
imul
mov
jnp
mov
or
mov
shll
mov
incb
sbb
cld
in
sbb
push
dec
dec
jp
xchg
mov
mov
push
dec
jo
add
sbb
or
pop
lret
rcrb
xchg
addr16
loop
loopne
add
in
jnp
xchg
add
push
leave
loopne
add
cmc
sub
push
adc
cmp
add
loopne
jo
add
lock
push
or
scas
add
mov
add
add
mov
mov
loopne
add
repz
add
mov
test
cmp
inc
add
mov
sub
and
fwait
lds
int
outsb
repz
test
hlt
xchg
out
call
cmp
jne
push
push
adc
mov
sbb
add
cmp
fdivs
jmp
xor
pusha
cld
inc
add
xlat
js
fsubl
jg
cmp
push
add
or
rolb
push
in
add
and
enter
sub
push
cwtl
scas
push
add
lods
add
aas
xchg
imulb
add
or
sbb
ret
rcrb
or
mov
push
in
test
cmp
jae
data16
jle
dec
notl
jo
dec
add
pop
leave
fimuls
iret
xchg
add
push
inc
sbb
loopne
adc
cmpb
subl
cld
xchg
add
add
or
xchg
ja
add
sub
add
mull
add
lock
cmp
add
lcall
data16
xchg
dec
loopne
sti
decl
jne
jge
add
and
and
add
sbb
add
test
xchg
repz
pop
pop
mul
mov
jo
mov
sbb
and
xchg
add
arpl
or
lds
xor
std
add
inc
jl
mov
sbb
push
dec
add
add
jl
icebp
jg
mov
hlt
cmp
adc
dec
jne
inc
add
lcall
shl
dec
sub
pop
arpl
xor
xor
shrl
fsubl
sub
xor
and
and
add
add
xorb
pop
pop
pop
ljmp
clc
add
loop
scas
cmp
mov
pusha
xchg
fs
add
mov
sti
fbld
add
push
add
jnp
lods
fmull
mov
jl
add
jb
cmp
and
cli
xor
cld
adc
and
imul
sbb
in
xor
mov
xor
add
add
push
mov
dec
nop
mov
call
or
and
out
add
ret
mov
ja
pop
inc
cld
push
push
ret
mov
push
xchg
lods
add
gs
adc
sbb
and
cltd
mov
sub
xchg
cmp
test
sbb
adc
add
push
call
and
or
fstpl
das
scas
add
or
and
add
jne
decl
int
add
loopne
pop
call
cmp
and
add
lods
shll
mulb
dec
jg
xchg
inc
clc
mov
fdivrs
adc
adc
add
push
lret
and
jg
mov
sbb
jmp
lock
add
xor
inc
xor
arpl
push
pusha
push
sbb
adc
jne
xor
add
mov
decl
es
dec
xor
flds
mov
xor
call
decl
sub
test
push
dec
ljmp
mov
rolb
cmp
jge
add
fdivs
and
loop
and
inc
outsb
add
in
sbb
add
pop
jne
in
inc
js
je
sbb
jl
push
rolb
push
add
rcll
jo
mov
xor
cmp
add
addr16
push
dec
std
or
cmp
add
addr16
lea
cmp
mov
shrl
jnp
or
fists
add
adc
add
jnp
xchg
add
hlt
les
out
xor
jp
and
or
push
sbb
push
mov
and
or
nop
sub
ret
js
add
or
pop
test
push
out
mov
fimull
add
push
add
push
jb
jns
ret
movsb
mov
in
jge
add
xor
cmpb
pop
es
lret
call
fcomps
aaa
jle
shll
incb
jmp
xor
cmc
mov
pop
adcl
icebp
dec
add
mov
mov
lidtl
and
pop
and
mov
dec
add
inc
jb
out
test
inc
pop
xlat
cli
push
xor
mov
movsb
movlps
inc
decl
ja
dec
in
jno
pop
leave
xchg
jnp
pop
loope
adc
pusha
mov
add
repnz
imulb
nop
jo
jns
cmp
loopne
rorb
fsubr
outsl
xchg
push
add
lds
inc
mov
int3
inc
cmp
push
and
sbb
jle
add
cmpsl
test
mov
fiaddl
ljmp
fists
gs
cli
cmpsl
jg
add
push
add
sbb
ret
inc
push
pop
adc
mov
mov
insb
mov
xor
or
sbb
mov
incl
lock
mov
out
inc
inc
cld
shr
push
jle
shrb
pop
lods
push
and
jle
xchg
rcr
inc
sbb
jg
test
scas
jae
fcoms
roll
cmp
sbb
xor
loopne
pop
add
movb
lahf
xchg
dec
sub
sbb
or
push
out
add
leave
add
movsl
sbb
xor
pop
cmp
cmc
mov
mov
add
mov
test
push
orb
or
add
and
pusha
lahf
into
sbb
jl
xor
adc
imul
and
rolb
xchg
hlt
fcompl
cmp
sbb
add
inc
add
push
add
lds
scas
and
shl
add
mov
mov
mov
dec
add
jo
inc
iret
loop
jno
or
lret
aad
adc
pushf
sbb
mov
pop
push
adc
lods
or
or
insb
mov
test
outsl
adc
pop
add
xorb
in
push
adc
xchg
pop
shl
ret
pusha
insb
test
fidivrl
sbb
and
pop
adc
mov
sub
mov
rolb
roll
jo
dec
push
into
mov
popf
inc
sub
clc
adc
add
incb
call
mov
push
data16
lds
or
xchg
and
outsb
inc
cli
leave
into
dec
lock
insb
sbb
push
add
pop
imul
int3
mov
pushf
pop
les
ret
arpl
push
jno
les
cmp
and
xchg
add
inc
sub
inc
push
add
ds
dec
dec
stos
add
popa
fnstcw
xchg
xor
cmp
add
mov
add
inc
lock
add
pop
clc
mov
mov
or
inc
ret
fidivrl
push
inc
xchg
mov
add
les
pop
lock
test
sub
inc
pop
jmp
add
xor
sbb
imul
loope
pop
outsb
ret
adc
leave
jmp
inc
add
inc
stos
insl
add
lahf
jle
loop
jb
inc
sub
sti
mov
dec
add
shlb
shll
pop
jmp
adc
dec
or
add
cmp
mov
data16
sbb
sub
jle
call
sbbl
insb
rorb
xor
sub
jl
pop
sub
sbb
sbb
or
out
add
push
mov
add
add
pavgb
sub
push
inc
cli
xchg
je
xchg
sbb
cmpb
pcmpeqw
adc
add
bound
ret
xchg
mov
mov
push
inc
add
or
outsl
inc
fisttpll
add
push
ret
inc
add
push
test
negl
add
push
ficoms
or
pop
add
dec
cltd
cli
out
lret
pusha
popf
fcompl
je
push
add
push
pop
mov
add
insb
inc
jb
jbe
add
ljmp
lret
dec
add
push
jo
xor
dec
loope
jp
pop
movb
or
inc
mov
ficompl
or
cmp
push
push
jmp
adc
add
cmp
and
repz
fldcw
xor
add
xor
push
es
in
add
aas
loopne
or
sub
pop
inc
mov
xchg
add
sbb
inc
add
test
in
hlt
lds
or
scas
xrelease
mov
es
lock
jno
test
cli
add
mov
fwait
loopne
and
xorl
dec
push
jmp
jg
or
push
jecxz
cli
roll
inc
jnp
jb
fsts
dec
fsubrs
andb
fbld
es
aaa
add
in
or
pcmpeqb
jno
je,pt
rorl
test
inc
movsb
and
pop
mov
push
add
pop
sbb
xchg
daa
push
pusha
cmp
jb
sbb
xor
add
push
push
pop
push
add
and
lret
mul
adc
loop
adc
pop
xlat
hlt
add
adc
mov
test
adcb
xchg
sub
add
pop
outsl
and
jge
shr
add
cmp
sub
and
inc
sarb
scas
mov
cmp
and
cmp
add
xchg
mov
mov
dec
sysret
subl
xorb
jge
push
jp
add
jl
imul
add
out
cmp
sbbb
test
sbb
xchg
into
sbb
mov
xchg
outsb
lods
call
jb
cmc
aas
dec
das
mov
pushf
shrl
ds
popa
testl
ret
add
inc
lret
jns
loopne
add
in
adc
pop
cmpb
enter
jb
cmp
call
add
and
fsubl
adcb
dec
add
gs
outsb
jbe
cld
add
jne
add
add
fs
push
cmpsb
and
add
add
add
sub
add
mov
lahf
leave
pop
out
aad
dec
stos
sub
pop
es
or
add
popf
je
adc
roll
mov
mov
sbb
sti
xor
mov
stc
leave
cli
add
ror
push
add
pop
sbb
jne
insb
pop
inc
dec
in
mov
fsub
aaa
add
loop
out
xchg
lcall
jmp
inc
and
add
dec
scas
pusha
loop
pop
cmp
and
adc
enter
mov
int3
add
fs
or
je
filds
add
xchg
pop
cmp
nop
add
call
outsb
or
test
jge
add
je
xchg
add
ljmp
pop
mov
shlb
fistpl
fadds
test
add
enter
sub
xchg
xor
mov
or
add
push
inc
scas
sbb
leave
xchg
push
add
scas
sub
ljmp
add
xor
lea
xor
das
push
adc
mov
jle
sub
add
add
mov
aad
or
je
pop
cmpsl
and
mov
add
into
add
lock
xor
sahf
lahf
cmpsb
mov
test
push
jle
movnti
ds
mov
add
inc
dec
lock
aam
add
dec
xchg
sbb
data16
inc
xchg
outsl
out
pop
rorl
dec
push
mov
in
add
sub
dec
xchg
lret
mov
add
test
jne
push
lods
add
cli
and
mov
dec
addb
movntq
out
adc
push
push
sub
pop
add
add
jmp
jbe
add
int3
hlt
je
ror
rcll
ja
sbb
sub
sbb
jo
or
jae
add
jle
fs
stos
repz
cmpb
pop
adc
push
test
sbb
inc
and
adc
loopne
cmp
add
fldcw
fwait
inc
sbb
mov
adc
pushf
nop
add
mov
or
cs
cld
add
sub
add
je
push
add
stos
es
pop
mov
sub
mov
adc
jp
or
push
add
xlat
jbe
mov
inc
pop
in
mov
shrl
lahf
adc
out
inc
xor
sbb
cli
sub
inc
or
push
push
xchg
rclb
movsb
cmpsb
hlt
push
add
mov
stos
lcall
lahf
test
dec
scas
or
mov
dec
inc
and
dec
push
add
or
sub
inc
push
cs
loopne
popf
cltd
sbb
or
add
add
push
sbbl
add
pop
rclb
push
int
sbb
inc
mov
stos
faddl
ret
push
les
ret
pusha
mov
stos
add
mulb
pop
add
ret
jb
add
js
add
lea
cmp
lret
sub
sbbb
in
enter
pop
sub
cmp
push
add
adc
add
call
inc
inc
jns
push
push
or
pusha
mov
out
sbb
or
inc
add
sbb
xchg
add
adc
mov
pop
add
cli
push
sbb
dec
popa
test
adcl
dec
add
dec
stos
ljmp
add
push
xchg
sbb
add
push
loopne
xchg
ret
adc
int
push
mov
repnz
call
repz
cmp
inc
es
leave
push
add
int
andl
cs
add
dec
add
mov
std
and
add
push
push
sub
or
mov
cld
test
add
add
mov
repnz
loopne
enter
inc
cmp
clc
loope
cmp
xchg
into
add
fsts
loopne
nop
mov
pusha
add
push
sub
mov
add
or
dec
xor
add
data16
xchg
add
lret
je
push
add
ror
fsub
cld
jg
add
pop
xchg
or
pop
ljmp
add
icebp
or
cs
ret
mov
bound
jbe
and
shrb
ja
dec
push
push
sub
mov
addl
cmp
cmp
add
adc
and
xor
pop
movsb
stos
test
add
add
and
cwtl
add
shrb
dec
into
pop
xor
xchg
add
imul
shlb
add
mov
js
jp
push
addr16
subb
mov
mov
mov
fs
sbb
ret
add
std
add
jnp
test
inc
in
sbb
and
inc
ja
push
jbe
xchg
sbb
inc
popa
test
pop
fadds
jg
nop
pop
cwtl
icebp
mov
inc
push
decb
lcall
in
add
cmp
addb
add
outsb
jl
adc
adc
flds
cmpsb
add
call
jp
mov
mov
or
mov
jl
test
mov
xlat
and
out
ss
xchg
jge
add
pop
leave
dec
arpl
add
or
mov
cmp
pop
je
push
jg
inc
sbb
push
lahf
xor
lahf
outsl
rolb
add
jle
in
and
mov
add
stos
xchg
and
add
lods
xor
or
outsl
add
xor
loopne
stos
xor
shlb
hlt
add
or
in
mov
cmp
imul
mov
push
xchg
pop
pop
cmp
std
loopne
sti
dec
jno
pop
lret
sub
repnz
or
push
push
mov
subl
pop
imul
add
cmp
inc
pop
add
add
rorb
mov
stos
xor
outsb
pop
add
xchg
or
xor
add
xchg
adc
xchg
push
fsubs
add
add
or
add
in
add
mov
es
pop
das
pop
cmp
rcll
sub
outsl
jo
and
addl
add
xchg
daa
xchg
lcall
adc
adc
vmwrite
push
push
cmpsl
sbbb
scas
jge
in
add
pop
stos
pop
ficoml
aas
xlat
adc
ljmp
orb
inc
lret
push
repz
dec
cld
add
push
cmpsl
xchg
clc
mov
inc
add
add
les
add
in
push
sahf
shr
xor
je
nop
mov
add
faddl
add
and
and
add
jae
daa
add
mov
addb
outsb
bnd
stos
xchg
test
cmp
push
cmp
adc
push
add
les
je
mov
adc
loopne
adc
outsl
sub
fsts
sbb
pop
out
inc
xorl
xlat
jnp
and
lea
inc
inc
add
gs
lock
cmp
adc
lret
xor
add
mov
je
mov
add
or
sti
adc
ds
aaa
jmp
mov
push
arpl
jne
cwtl
mov
sbb
cltd
adc
loop
jp
add
push
xchg
adc
inc
pop
push
sub
daa
lahf
add
jbe
jp
or
and
hlt
cld
dec
sbb
sub
mov
pop
push
and
mov
add
das
add
pop
cmp
stos
cltd
xchg
clc
data16
mov
cmpsl
sahf
es
cmp
ret
adc
add
jp
and
adc
ret
cs
test
push
fisttpl
and
xchg
or
and
inc
gs
add
mov
test
je
add
hlt
jns
xor
cli
out
mov
cld
ror
fisttps
fimuls
ret
in
cli
es
dec
mov
mov
jg
test
sbb
add
inc
cmp
popf
jnp
inc
sub
jae
add
fwait
xor
aas
add
cld
adc
cmp
rclb
cmpsl
sub
push
test
js
sub
cmp
orb
mov
add
jle
test
lods
mov
dec
mov
push
add
loope
js
sub
enter
andb
xchg
jns
inc
mov
dec
add
cmp
sbb
mov
movsl
mov
movsb
orb
out
xchg
push
sub
add
sbb
mov
and
mov
add
jp
add
or
mov
mov
rcr
adc
mov
test
and
movsb
shlb
mov
inc
cmc
cmpsb
add
sbb
add
xchg
int
lret
add
out
sub
mov
shlb
add
or
cmp
addb
adc
in
mov
test
shl
add
call
cmp
ret
mov
aaa
ds
push
orb
cmp
mov
mov
xchg
add
outsl
lock
sub
xchg
inc
add
jbe
add
jns
movsl
ja
xchg
pop
xchg
push
adc
lock
push
je
adc
push
imul
dec
stos
clc
sti
pop
addb
dec
ficoms
jge
cmp
xor
add
scas
das
xchg
sahf
adc
jle
aaa
mov
call
cli
inc
stc
and
in
clc
add
mov
popa
lods
sbb
enter
sub
in
stc
pop
fcomip
cmp
xchg
mov
xchg
pusha
push
sub
push
add
adc
mov
add
jae
orb
movsb
dec
add
add
sbb
ja
aad
inc
testl
cs
pop
jb
push
jae
lods
es
mov
mov
jg
stc
mov
cmp
cld
jbe
mov
out
ljmp
mov
rolb
popf
in
xchg
mov
add
nop
or
xor
cmpl
dec
int
shll
dec
add
adc
jno
rcll
addps
push
xor
daa
dec
and
dec
into
cmpsl
add
lcall
add
mov
mov
push
fldl
sahf
insb
pop
shr
sub
or
subl
add
jge
shrb
xchg
adc
xchg
mov
xchg
mov
dec
mov
add
out
fldl
mov
sub
in
pop
movl
jns
cwtl
popf
fnstsw
aam
test
mov
add
inc
in
decl
and
xor
jns
daa
mov
ret
faddl
pop
add
sti
movsb
sbb
ficompl
lcall
shlb
ret
cmp
sub
inc
or
mov
add
add
inc
adc
loop
dec
es
add
cmc
mov
mov
push
add
add
xchg
mov
orb
jbe
cmp
pop
push
cmp
jmp
pop
xlat
xor
inc
loop
push
loop
std
add
jo
push
adc
test
adc
enter
sub
cmp
outsl
pop
jl
pop
add
arpl
sub
add
test
inc
roll
lret
fiadds
sub
sub
out
fldt
or
xchg
scas
pop
add
or
cld
xchg
repz
jns
js
rorl
test
leave
add
adc
mov
add
addb
pop
or
push
lcall
aaa
notl
add
and
flds
xchg
cmp
inc
lock
lock
jns
mov
add
adc
sbb
push
sbb
dec
in
push
mov
add
insl
sub
push
cli
jl
shlb
adc
arpl
add
popa
inc
jge
loope
jae
outsb
fiaddl
cmp
call
inc
jl
pusha
jbe
outsb
add
cmpsl
dec
ja
adc
add
fs
aas
inc
push
addb
iret
seto
outsb
addr16
fisubs
in
cmp
inc
loope
outsl
insb
cld
add
push
out
in
jae
jns
imul
cmpl
fwait
add
jno
jp
mov
test
arpl
xor
hlt
jb
pusha
add
bound
addr16
mov
push
add
inc
popa
les
add
test
notl
dec
outsb
add
dec
push
jbe
ja
jg
inc
mov
or
pusha
shll
add
inc
outsl
test
inc
push
sbb
test
les
inc
jne
dec
pop
iret
inc
push
pop
stc
push
popa
loopne
push
push
je
mov
lea
xchg
inc
cmp
outsb
imul
and
jo
add
dec
gs
sub
mov
fs
jnp
add
repz
pop
mov
xchg
sbb
inc
adc
mov
popa
jbe
arpl
pusha
cmp
and
jge
test
push
lock
and
jo
sbb
imul
push
sbb
jmp
inc
add
gs
xchg
pusha
cmpsb
push
sbb
inc
ja
arpl
insb
into
mov
inc
dec
jno
popa
imul
and
insl
sub
dec
mov
loopne
adc
mov
dec
push
mov
fs
sbb
pop
mov
inc
pusha
xor
lahf
jecxz
in
lods
cmp
out
adc
xor
rol
add
mov
adc
adc
ljmp
inc
lea
pop
push
add
movb
add
daa
add
fdivrl
fldl
cmpb
lea
add
mov
out
mov
add
sub
daa
sub
xchg
add
mov
jo
je
addl
fwait
jne
movsb
add
xor
push
push
imul
dec
andb
fadds
or
stos
repz
push
add
lea
cmp
xor
shrl
mov
cmp
sbb
adc
dec
mov
mov
mov
inc
cmp
lret
sub
out
andb
hlt
xorb
add
mov
add
jle
lret
push
jmp
stos
and
add
adc
das
test
ljmp
leave
inc
lcall
inc
jbe
push
add
jae
call
pop
shlb
push
add
mov
movl
pusha
or
in
int3
add
hlt
in
xor
cmpsb
add
jae
mov
mov
hlt
xchg
rcrb
in
lcall
cmp
push
mov
int
xor
test
lahf
inc
or
push
inc
enter
add
dec
pushf
clc
test
adc
add
test
stc
lahf
pop
mov
arpl
hlt
lock
scas
add
sbbb
xor
xchg
test
and
stos
add
mov
loopne
pusha
dec
or
idivb
add
rcll
sbb
ss
push
add
out
and
loopne
adc
add
push
pushl
or
mov
jb
sub
addb
rcr
mov
push
jnp
aam
aad
xchg
faddl
sub
or
ficoml
add
fmuls
pop
je
in
mov
nop
add
inc
or
add
add
adcl
pop
cmc
pop
add
push
xorb
or
call
jl
add
sub
mov
add
ds
in
in
scas
mov
push
xor
lods
add
fdivs
lcall
and
and
sub
cltd
add
add
jne
mov
jmp
add
mov
aas
push
xor
inc
into
mov
das
bound
mov
aad
add
adc
mov
sub
jmp
movsb
cmp
cmp
sub
xchg
sub
repnz
add
out
or
sbb
lea
stos
add
jb
lret
imull
pop
or
cmp
pop
and
add
fmuls
sbb
lret
mov
adc
in
sbb
jb
xlat
push
sbb
pop
xchg
jns
fcmovu
fwait
test
mov
stos
add
adc
adc
add
cmp
sbb
add
test
add
das
cld
fdiv
loopne
jno
pop
dec
push
push
mov
xor
sub
pop
ljmp
sbb
push
add
mov
and
fcoms
xor
pop
xadd
add
push
sbb
test
mov
dec
shl
orb
mov
add
and
ret
mov
addb
jb
cmp
push
sub
mov
mov
jo
adc
jbe
in
and
adcl
mov
pop
lahf
psubb
call
add
and
push
inc
pop
add
push
dec
or
push
add
jle
lsl
in
call
loopne
xor
and
add
cmp
incb
lret
add
ds
jb
sbb
into
xor
jg
add
lods
rorl
enter
xor
decb
repnz
fiadds
ja
jnp
pop
add
iret
aas
cmp
icebp
sbbb
xor
shrb
mov
pushf
xor
fs
and
addr16
push
mov
mov
mov
pop
leave
cmp
lock
cmp
scas
adcl
sbb
cmp
push
orl
lahf
sub
inc
xor
add
cmp
inc
inc
jp
rcl
dec
add
mov
jnp
aam
cwtl
add
cmpsl
hlt
dec
stos
popf
hlt
jns
add
xchg
sbb
jl
add
jo
xchg
pop
js
jne,pt
or
mov
or
jl
pop
nop
sub
test
xchg
fs
les
and
aas
add
loop
xor
and
xor
add
mov
sub
or
xchg
ljmp
adc
mov
mov
es
int3
leave
testl
ficoms
movsb
add
ret
mov
jmp
mov
rcll
test
or
fdivp
add
sar
cmpsb
dec
fcmove
and
stos
mov
lods
cmpb
mov
dec
fabs
push
and
lds
movsb
mov
pop
add
xlat
aad
int
fwait
call
lret
movsb
mov
enter
test
sub
rclb
les
int3
mov
aam
repnz
loopne
subb
stos
push
and
cli
xchg
loop
lods
cltd
loopne
fnstsw
aad
mov
fcom
bound
lret
adc
xchg
adc
and
repnz
scas
push
mov
adc
inc
lea
xor
push
mov
sub
or
mov
stos
cmp
dec
cwtl
sbb
aad
adcl
push
add
popf
sub
pop
add
rorl
loop
dec
or
adc
sbb
and
mov
or
fldcw
enter
inc
xor
cmp
lds
inc
push
add
call
roll
cltd
pop
fadds
pop
xchg
lret
cmp
fwait
call
lods
dec
and
leave
add
out
cmovbe
inc
jae
and
push
jg
mul
rdtsc
shl
leave
add
ja
fs
cwtl
inc
xchg
stos
or
decl
movl
add
add
cmp
or
or
xlat
push
out
rol
shl
lock
into
test
cmp
stos
loop
pop
jo
inc
faddl
in
xor
jno
pop
fcompl
xor
js
or
dec
pop
stos
fdivp
fcoms
mov
or
and
pusha
push
pop
hlt
add
imul
adc
fs
add
inc
sbb
test
cwtl
cltd
push
loopne
aam
loop
or
jb
xorb
mov
jg
subb
loopne
cmp
add
imul
jg
add
inc
push
dec
faddl
loopne
fmuls
test
or
dec
cmp
in
dec
jo
add
adcl
movsl
and
bound
cwtl
fistps
sub
inc
push
add
cmpsl
and
mov
fsubrs
inc
pop
xor
scas
andb
sbb
cld
cmp
insb
in
add
inc
inc
test
push
das
add
pusha
pop
loopne
inc
mov
mov
scas
add
imul
dec
cmp
add
sti
sub
sub
js
xchg
add
push
cmpl
dec
out
enter
push
out
inc
xchg
cmp
push
pop
mov
jne
in
sbb
cld
push
xorb
pop
ljmp
stc
loopne
bound
or
jnp
push
loopne
decl
std
mov
inc
loopne
nop
push
incb
add
fists
sbb
in
add
add
rorl
sbb
test
add
cmp
xor
add
outsb
data16
out
lcall
ljmp
add
nop
cmp
rol
pusha
loop
add
cltd
push
or
adc
and
shr
mov
jb
jae
or
mov
and
pop
inc
loopne
xor
js
adc
hlt
xchg
add
jbe
push
xor
out
adc
add
inc
xchg
and
ret
imul
sub
add
xor
sbbb
std
lcall
out
testl
stos
in
adc
push
je
add
cmc
push
sbb
xlat
cmp
mov
stos
imul
add
enter
loopne
mov
xor
pop
or
test
adc
push
and
adc
mov
sbb
sti
add
jle
sub
adc
jmp
pushf
add
nop
dec
mov
add
adc
movsb
add
fs
mov
add
push
inc
mov
add
sub
and
cli
add
imul
add
in
test
adc
dec
sub
add
or
xchg
arpl
and
mov
jne
movl
and
or
add
aad
enter
mov
adc
jae
pop
les
jns
dec
or
sarb
xchg
call
jmp
push
xor
mov
loop
movsb
es
popa
call
inc
test
call
jp
aam
add
adc
jae
add
mov
jbe
add
mov
mov
cmpl
aaa
jecxz
or
add
fisubs
hlt
sahf
push
jg
add
cwtl
imul
lods
sub
or
popf
test
out
cltd
sbb
pop
pop
inc
pop
scas
je
cwtl
push
fnstcw
js
add
mov
sbb
test
lea
ljmp
add
jae
jge
and
pop
aaa
hlt
addb
fsubl
loope
lock
xor
ja
psubb
add
inc
test
test
add
dec
push
cmp
ret
pop
jne
jg
cmp
popa
dec
scas
sub
inc
add
inc
or
je
push
roll
cmp
adc
nopl
lcall
rcll
sub
cmp
icebp
mov
inc
xor
pop
scas
jmp
mov
mov
add
movl
and
pop
loopne
sbb
sbb
imul
aaa
in
inc
add
sahf
cli
push
faddp
jmp
cmp
lcall
xchg
adc
and
pop
sub
push
es
push
add
int3
jp
and
inc
and
mov
cwtl
adc
test
lahf
dec
and
add
out
xchg
or
mov
add
mov
mov
add
dec
les
andl
sbb
cmp
add
ss
dec
jb
imul
push
add
lea
mov
sbb
add
fisubrs
add
into
cmp
add
xchg
jle
add
jg
adc
stos
fildl
pop
xchg
rsqrtps
xlat
in
mov
out
push
mov
push
xchg
add
cld
cmp
ja
es
dec
sbb
push
scas
push
mov
and
jle
mov
test
jne
inc
popf
js
add
aad
repnz
pop
mov
xchg
push
pop
enter
idivb
and
sbb
fstps
mov
add
aad
xchg
jne
mov
add
xor
loope
push
mov
int
push
clc
sub
lcall
into
mov
pop
mov
in
dec
xor
scas
nop
add
add
cld
add
stos
pop
std
push
pop
mov
add
je
xor
std
fisubs
xor
mov
sbb
add
xchg
shl
test
add
cmp
sbb
stos
add
add
and
add
lea
push
add
add
inc
mov
shll
jmp
sub
imul
fcomps
lea
or
dec
or
daa
add
cmp
xchg
adc
dec
add
adc
out
xchg
lea
dec
push
call
call
mov
daa
jmp
data16
cmp
dec
jo
stos
int
push
mov
add
push
push
mov
cwtl
cmpsl
movsb
gs
jmp
hlt
push
mov
adcb
mov
fimull
pop
test
mov
mov
mov
pop
mov
rorb
mov
ret
adc
rcrl
cwtl
jle
and
andl
pop
or
dec
lock
adc
adc
mov
fistps
adc
push
push
and
add
sbb
adc
pop
sbb
xor
mov
insb
popl
or
jne
loope
sub
pop
xlat
mov
push
lea
lds
std
mov
icebp
jp
movhps
loopne
mov
or
into
les
or
add
ss
add
imull
fmull
ljmp
push
adc
xor
inc
movhps
and
or
add
loop
jmp
and
hlt
cmpl
mov
sahf
push
das
test
cmp
jne
jge
dec
cld
push
cmc
add
mov
push
das
jle
xor
lea
stc
jae
nop
ds
mov
es
jmp
push
inc
ja
add
mov
dec
hlt
cli
out
push
and
clc
jl
hlt
in
stc
pop
aad
dec
sbb
adc
push
mov
jne
push
push
scas
cmp
xor
pop
inc
xchg
fistps
add
roll
ret
lock
sub
jg
mov
outsb
dec
push
xchg
movl
jmp
mov
sbb
dec
dec
add
sbb
pop
push
repnz
add
add
add
jmp
popf
jo
pop
jb
lods
ficomps
pusha
rorb
ljmp
jecxz
push
pop
andb
jg
frstor
pop
hlt
add
leave
ds
stc
outsb
femms
loop
mov
insb
push
jne
pop
add
xor
loop
add
xchg
pop
hlt
mov
add
push
push
or
push
testl
insb
mov
jo
xchg
popl
popl
pop
sbb
adc
fstpl
or
jecxz
aam
sbb
rclb
mov
adc
mov
insb
ret
fcomps
insl
decl
add
cld
add
test
jg
pop
call
mov
push
mov
add
pop
sbb
sub
insl
inc
mov
add
loop
add
pop
mov
xor
xor
sbb
out
rcrl
add
mov
nop
dec
rorl
iret
and
rcrl
add
jae
cmp
add
lret
dec
jecxz
add
and
push
sbb
or
in
ss
pop
mov
adc
push
push
repz
add
clc
dec
rolb
add
xor
jne
mov
add
dec
je
add
jmp
adc
lds
insl
mov
push
mov
dec
les
inc
cmpsb
mov
pusha
int3
stc
add
stos
push
push
das
hlt
out
add
sub
jmp
inc
xchg
inc
flds
push
adc
bound
out
cmp
ja
push
insl
aas
pusha
push
je
scas
inc
imul
mov
insl
lods
xchg
cmp
sbb
cmpsb
aaa
mov
ret
daa
dec
jge
push
push
pop
inc
push
into
sub
push
pop
lret
add
mov
nop
adc
adc
rcr
pop
fdivrs
movsl
js
pop
add
in
mov
pusha
add
add
je
xor
mov
mov
negl
mov
ret
xchg
subl
ss
jns
in
jle
adc
lea
pop
ret
cmpsl
add
xor
sbb
pop
rclb
xchg
in
call
jne
clc
shrb
cwtl
cmpl
in
cld
push
shrd
out
rolb
loop
jno
adc
push
jge
test
cli
orb
in
jne
add
shrb
shlb
add
loop
leave
popa
xchg
add
xchg
fdivrs
cmp
cmp
push
pop
sub
jnp
push
xchg
cmp
pusha
add
lock
push
push
mov
adcl
and
push
out
lds
orb
leave
pop
or
add
repnz
pop
mov
and
shr
sbb
clc
pop
pushf
or
loopne
ja
jge
adcb
xor
nop
icebp
rorb
add
test
cmp
insb
mov
pop
shll
je
and
test
dec
pop
jbe
enter
sbb
rorl
xchg
hlt
ret
adc
mov
int
pop
shl
add
cmp
sub
add
aaa
add
fs
or
flds
jle
mov
int
sub
or
xchg
subps
jnp
adc
data16
fidivs
ret
jae
add
neg
jmp
je
cmpsl
lods
js
add
jl
sub
add
sarl
call
repz
sbb
sbb
add
inc
ret
xchg
jb
jae
ja
add
fmuls
lcall
mov
mov
lret
and
out
stc
or
lahf
mov
dec
cmp
jbe
pop
leave
lea
add
inc
dec
xor
add
cli
mov
dec
rorb
add
and
sub
scas
sub
sbb
lcall
repz
add
jno
ficoms
loope
dec
add
push
mov
add
xchg
imul
test
pop
mov
mov
loopne
pop
cmp
fnstcw
cmpl
fcoml
add
jo
mov
add
inc
dec
jne
test
mov
jns
sbb
adc
lcall
lret
jmp
push
mov
add
xor
fcmovnb
mov
mov
movsl
push
adc
mull
int3
jl
pop
adc
fidivrl
ret
loop
jecxz
xchg
add
sub
ljmp
adc
sub
cmp
add
mov
add
aas
mov
push
dec
scas
add
lods
cmc
push
popa
mov
add
sub
loop
repnz
rolb
sbb
enter
int
push
cltd
push
ret
push
and
cmp
and
cmp
add
xchg
dec
xor
out
adc
add
aam
dec
pop
jmp
xchg
add
inc
icebp
adc
dec
call
inc
or
pop
shl
push
orb
sub
loope
outsl
loopne
ret
add
mov
sbb
imul
movsb
loop
dec
fs
repz
es
popa
xor
addl
jmp
adc
shrl
sti
add
mov
sub
pcmpgtb
or
or
add
sahf
push
in
cmpb
adc
mov
clc
inc
jbe
xchg
mov
fisttpl
mov
xor
es
jno
jge
add
fiadds
dec
call
lea
xlat
mov
aad
xchg
dec
cwtl
cltd
and
add
jne
push
sbb
ss
jae
or
or
leave
lret
mov
add
ja
mov
test
xchg
sub
or
push
les
mov
jno
enter
xor
jne
push
or
ret
add
popl
cmp
iret
int3
jg
int
xor
pop
pop
ja
cmp
jbe
pushf
fmull
jb
add
sbb
cmp
loope
sub
cld
ja
ud0
push
imul
dec
cmpb
pusha
lcall
mov
lret
inc
cwtl
jbe
or
or
aas
clc
cmc
adc
add
adc
movsb
imul
popf
add
lods
pop
push
lahf
js
add
inc
scas
or
or
inc
cmpl
in
mov
xlat
loop
stos
lahf
test
cmp
pop
mov
cmp
psrlq
push
adc
movb
inc
lahf
lcall
mov
push
std
lods
mov
add
cmp
lahf
or
cmpl
dec
xor
and
in
fwait
add
inc
repnz
jg
mov
add
imul
adc
dec
das
push
and
fcomp
pop
shlb
xorb
lods
sbb
adc
sub
push
mov
add
and
lea
in
fadds
inc
add
test
mov
add
jb
or
adc
and
mov
xor
sub
xchg
xlat
add
pop
bound
and
popa
dec
pop
pusha
das
push
xlat
and
add
and
cmp
in
in
push
jmp
sub
in
les
inc
jmp
lcall
push
test
xchg
rolb
add
xchg
fimull
xor
popa
lods
aas
stos
add
sub
lret
add
orl
sub
mov
mov
jmp
ret
call
pop
decb
scas
add
orb
or
test
jp
add
leave
push
adc
aas
cmp
and
in
leave
adc
movsb
fs
fcoms
inc
fmul
stos
push
add
loopne
lea
out
jg
sbbb
pop
mov
lcall
xor
cmp
jl
jne
jo
js
dec
add
andl
push
nop
or
add
jmp
sahf
pop
loop
add
test
add
movsl
adc
sbb
push
xlat
add
loopne
pop
inc
mov
add
jnp
movsl
cmp
mov
push
cmp
push
sar
enter
or
and
add
lea
and
icebp
call
push
shr
arpl
and
mov
ja
mov
cs
mov
and
mov
jmp
bound
leave
pop
pop
cmp
inc
ret
stos
mov
push
inc
lock
lods
add
push
cmp
imul
push
pushf
enter
cs
test
push
dec
dec
stos
leave
rorb
ljmp
sbb
js
cli
cmp
xor
sub
cwtl
and
add
jne
outsl
jns
ss
dec
adc
in
push
mov
dec
popf
xor
push
add
dec
cmpsl
jno
push
dec
push
pop
shrb
jnp
in
add
mov
sbb
jmp
sbb
push
dec
jle
stos
movsl
nop
in
call
sub
in
push
aam
mov
cwtl
jns
jl
add
inc
cmp
cmp
adc
sub
xor
xor
pop
jo
xor
push
andl
jge
enter
add
adc
dec
cs
add
adc
jmp
popa
and
add
in
nop
adc
mov
ljmp
sbb
push
clc
adc
pop
add
shlb
add
push
je
mov
adc
push
add
movsb
and
pushw
push
add
pop
mov
pushf
popa
sbb
xor
sti
add
mov
or
jle
inc
enter
jne
fs
in
fnstcw
xchg
mov
add
push
xchg
or
rcl
add
fwait
jmp
lahf
loope
jne
xchg
cmp
sub
cs
xor
dec
dec
mov
pop
inc
push
sbbl
sysexit
cmp
test
adc
test
sub
add
call
clc
cs
lock
push
cmp
jne
inc
jmp
iret
test
loope
add
sbbl
dec
sub
mov
cmp
xor
jbe
cmp
inc
roll
clc
in
add
imul
add
sub
hlt
add
jmp
push
push
call
push
and
push
inc
mov
shrl
shl
nopl
push
cmp
jne
clc
je
test
mov
sub
mov
pop
mov
shlb
in
aaa
lret
jae
mov
stos
xlat
lahf
mov
add
xchg
cs
mov
xchg
nop
mov
and
pop
cmp
loope
jo
popl
push
and
ljmp
pop
adc
lock
push
mov
add
jb
pusha
add
mov
ja
sbbb
push
adc
xor
mov
sbb
out
notl
jmp
loop
xor
xchg
add
outsb
xor
lods
add
pushf
ret
je
jl
fimull
bound
push
jge
int
cwtl
clc
idiv
sbbl
jmp
mov
jle
leave
lcall
popf
jge
mov
mov
inc
jno
jmp
scas
cmp
fsubp
lock
mov
lea
push
sbb
add
sub
pop
sti
jo
js
mov
out
sbb
add
add
outsl
cwtl
mov
add
mov
add
xchg
sbb
inc
mov
xchg
cltd
adc
ffree
mov
push
popl
mov
cld
xchg
push
inc
pusha
test
or
xor
add
mov
fisttpll
out
pusha
add
jbe
xchg
or
shlb
mov
fbstp
add
lret
mov
cmp
stc
imul
xor
mov
pop
iret
sti
nop
inc
sbb
jmp
cmp
add
repnz
inc
mov
jl
ss
adc
or
add
sar
jo
add
xor
loopne
pop
jbe
das
add
mov
outsl
mov
xchg
fistpl
stos
pop
bt
data16
cs
mov
lods
lock
pop
push
sti
push
mov
add
outsl
stos
daa
cmp
xchg
or
dec
mov
jl
pop
addb
inc
add
sbbb
imul
ltr
fdivl
fsts
lea
xchg
add
lcall
fs
addr16
out
add
les
dec
roll
xor
stos
cmp
sbbb
push
std
out
test
clc
mov
inc
andb
push
pop
jno
mov
mov
lea
flds
in
insb
mov
add
mov
and
int3
jmp
cs
add
ja
jb
pop
movsb
add
mov
xor
xchg
cmp
xchg
jl
add
cmp
inc
jp
add
adc
ret
or
and
sarl
outsb
mov
add
hlt
xlat
xchg
stc
add
jge
push
add
xchg
daa
cmp
jl
cld
loopne
jbe
mov
push
push
xchg
or
iret
lock
pop
cmp
cmp
mov
or
add
jae
add
jo
out
lock
repz
les
dec
cmp
jnp
add
test
cmp
push
xor
fdiv
dec
aad
inc
cmp
mov
add
sbb
add
dec
aam
add
xor
jge
mov
and
or
cld
jle
jg
jae
add
les
ret
bnd
stc
push
test
cltd
sarb
call
in
push
icebp
cmc
cs
shl
pop
movb
xchg
push
or
jae
mov
push
mov
mov
add
mulb
ror
push
add
stc
sbb
jb
icebp
or
andb
les
mov
dec
jge
add
xor
sub
mov
enter
sbb
sarb
xor
daa
stos
paddsb
lahf
sub
xor
xor
push
or
add
mov
rcll
mov
enter
icebp
jns
xchg
faddl
push
and
mov
push
add
pop
shrb
ret
add
popf
notl
adc
pop
lea
adc
and
sarl
iret
inc
push
arpl
or
mov
or
loopne
sahf
sub
add
cld
jo
add
test
mov
sbb
sbb
out
jmp
cmp
mov
dec
xor
testb
or
int
xchg
push
fsubr
xchg
add
adc
inc
push
les
and
cmp
inc
enter
pushf
orb
mov
dec
lahf
add
pop
testl
insb
aad
insl
add
cmpb
je
sbb
push
aam
dec
pop
jg
add
xchg
inc
data16
and
imul
stos
jmp
add
ret
pop
adc
rcll
les
cmp
pop
add
or
sub
jae
add
ret
ret
out
in
jbe
add
or
inc
cwtl
dec
stos
mov
hlt
shrl
dec
mov
cld
sub
and
add
adc
sbb
adc
sbb
outsb
dec
or
xchg
cmp
mov
cmpsb
std
push
clc
or
cwtl
mov
mov
xchg
jno
add
shll
cmc
icebp
sbb
or
repnz
in
sub
gs
ret
inc
push
sbb
outsl
or
or
add
test
inc
and
mov
sbb
lds
rorl
jp
ja
ja
ja
cmp
leave
push
jg
sub
or
push
and
bound
notl
jle
fistl
or
add
test
push
cmp
mov
jg
jnp
sub
mov
push
lret
pop
dec
inc
jno
pusha
add
jg
mov
shlw
add
fsubrs
decb
jl
hlt
rcr
lcall
loop
addr16
add
sub
cli
jl
add
ret
roll
out
or
xorb
add
mov
orb
pop
sbb
mov
or
xchg
jnp
add
mov
push
add
and
lock
imull
sbb
and
and
cmp
and
add
test
outsb
inc
add
cmp
push
xlat
repnz
xlat
loopne
inc
lret
add
ret
cmp
push
add
movl
pusha
fadds
jne
call
lcall
xlat
pop
fnstsw
push
and
aad
add
add
sbb
add
add
sti
pushf
cmp
movsl
inc
fcoms
pusha
imul
fs
xor
lods
testl
mov
lock
clc
jne
mov
inc
adc
pop
iret
outsb
dec
cmp
or
add
add
shll
cmp
mov
adc
std
jnp
lcall
mov
jne
sub
std
aad
xchg
stc
jo
push
push
and
or
xorl
xor
cs
sbb
add
call
jne
add
xchg
inc
rcr
out
add
mov
popa
sbb
cmpb
add
or
pop
dec
das
lock
push
add
pushl
mov
stos
repnz
add
mov
insb
into
inc
pushl
ret
fstps
hlt
out
out
pop
xor
cmp
dec
movsl
cmp
xchg
clc
mov
xchg
add
call
jns
subps
inc
mov
jge
add
cld
sub
dec
push
add
and
add
sbb
or
xlat
push
xchg
filds
cmpsl
jne
jp
push
aam
ds
mov
mov
inc
dec
add
jo
lock
ljmp
fcomp
jmp
pop
mov
and
adc
movb
and
repnz
pop
adc
xor
adc
lods
das
les
sub
add
add
mov
xchg
pop
sbb
add
or
or
data16
add
push
lock
xchg
add
mov
jo
push
nop
push
andl
add
push
or
sub
mov
push
mov
adc
sbb
sub
jne
mov
shl
mov
add
mov
mov
mov
fists
jns
aas
pop
add
sbb
push
push
das
xor
fbld
flds
inc
scas
out
mov
data16
das
and
sub
mov
mov
add
jecxz
sldt
les
add
or
ja
aas
xor
aas
mov
jbe
push
call
cli
dec
and
xchg
jecxz
add
inc
mov
mov
pop
add
das
cs
add
adc
mov
orl
add
sub
xchg
stos
push
movb
fbstp
dec
ljmp
cmc
out
cld
and
int
lea
inc
lret
or
add
sub
and
xor
mov
lea
movsl
mov
add
mov
jb
dec
xorl
and
subl
or
xchg
mov
loopne
lahf
lret
add
in
lea
mov
mov
cmpb
into
adc
int3
or
add
push
add
adc
cmp
xor
dec
fsubrp
shll
mov
adc
mov
inc
inc
cmp
jne
jno
add
sbb
cmpsb
stc
inc
add
adc
lea
mov
rcrl
repnz
outsb
add
je
popa
jo
mov
add
enter
add
mov
add
dec
iret
cmp
and
sbb
sbb
invd
mov
inc
xor
xchg
ret
mov
push
fsubrl
in
adc
or
add
inc
fistps
add
xchg
lret
or
push
mov
dec
fistpll
clc
mov
push
jo
idivl
ret
dec
jg
add
pop
cmpl
jb
mov
mov
add
sub
daa
test
movsb
loop
sbb
addb
or
pusha
or
ja
pop
inc
push
add
add
jmp
xchg
int
add
je
insl
mov
ret
icebp
push
in
or
stos
adc
add
or
or
xor
lock
negb
cmovge
sub
in
push
cmc
and
out
mov
outsl
add
rorl
cmc
add
or
scas
icebp
in
int3
add
les
push
lcall
xchg
in
jmp
mov
movsb
sbb
int3
arpl
dec
add
push
push
jne
pop
inc
xchg
gs
xorb
push
jno
movd
std
add
sub
inc
mov
add
loop
jae
or
push
jmp
add
rcrl
daa
lret
inc
inc
loope
add
sti
pxor
add
hlt
sbbl
jle
pop
loope
jnp
push
mov
mov
add
les
sbb
loopne
frstor
dec
add
stc
xchg
aad
add
les
repnz
and
cli
add
rclb
xchg
dec
xor
mov
lea
mov
nop
pop
add
dec
pop
add
cmp
popa
mov
sbb
jecxz
jne
mov
cmpb
enter
pop
jecxz
sbb
arpl
daa
mov
jg
add
add
jl
jne
add
push
sarl
mov
add
xchg
lds
or
cld
hlt
cmp
jle
or
add
mov
adc
stos
or
dec
jo
push
pop
mov
jne
out
jb
add
jo
scas
fucomip
dec
add
outsb
push
push
dec
cltd
adc
mov
sbb
jo
mov
add
xor
outsl
sub
add
jae
pop
add
sub
jl
pop
push
cld
push
dec
add
test
inc
loop
jne
andb
adc
decl
ds
cld
jl
scas
in
aad
out
das
cmp
sar
scas
jecxz
loopne
enter
and
out
push
add
add
imul
cmp
and
loopne
cltd
cmp
clc
jnp
aas
adc
mov
out
pop
add
lahf
fwait
ret
les
std
sub
pop
scas
iret
fs
ror
xor
add
inc
popf
pop
add
test
scas
xchg
lcall
xor
comiss
push
add
stos
fstps
mov
call
or
push
mov
dec
sbb
xchg
jno
jne
push
and
jl
adc
add
pop
negl
in
inc
call
hlt
mov
jnp
js
add
sub
mov
push
movzbl
loopne
rcrb
add
incb
fwait
xlat
mov
push
int3
les
cmp
lcall
sub
int3
daa
cli
push
nop
push
mov
sbbb
insb
sub
ljmp
icebp
sbb
push
pop
je
add
pop
test
aad
mov
pop
je
add
or
les
push
add
xor
mov
int
jecxz
rclb
pop
arpl
adc
outsl
lds
sti
int3
popw
sub
add
jle
sbb
std
pusha
sahf
loope
mov
add
call
add
mov
jne
cmp
push
jmp
mov
test
or
add
push
or
and
rcr
clc
jecxz
test
nop
fadds
aaa
lock
rolb
das
loope
inc
add
or
lret
inc
and
jo
inc
movsl
or
andb
enter
lods
mov
lcall
orb
outsl
fs
arpl
mov
dec
jle
push
add
sbb
out
xor
sbb
jne
xor
je
mov
jle
add
adc
add
mov
data16
in
xchg
xchg
fstpl
adc
inc
add
push
and
js
sbb
out
ds
sub
sub
aad
fsincos
push
xor
pop
xlat
test
dec
clc
xchg
pop
call
add
xor
and
loopne
push
cmp
jbe
pop
sbb
add
mov
iret
fisubs
cmp
shlb
insb
scas
call
mov
sub
and
push
btr
addb
addr16
dec
insb
add
fadds
call
add
or
adc
mov
xlat
inc
in
adc
add
mov
sarb
dec
cmc
add
inc
or
dec
stos
lret
test
out
fmuls
cmpsb
shlb
add
ret
pop
adc
addr16
hlt
xchg
or
pop
sbb
push
fiadds
push
adc
cs
adc
adc
addr16
xor
adcl
xlat
mov
add
insl
or
pop
jb
hlt
add
cmp
add
push
jmp
test
pop
pop
inc
adc
stc
addl
les
and
out
loopne
shl
xchg
jle
add
dec
popa
insl
lock
rolb
pop
fbld
mov
add
and
lea
xchg
scas
repnz
in
xor
shr
add
push
or
orb
out
xor
add
xor
mov
movsl
mov
xchg
xchg
loopne
dec
movb
sbb
jmp
add
inc
xchg
clc
popa
loopne
bswap
add
xchg
xchg
or
cmc
call
lock
add
cli
lret
sub
sbb
sbb
cmp
fidivrl
dec
jne
add
pop
es
mov
inc
in
enter
push
dec
mov
in
push
xchg
add
pop
fisubrs
add
mov
cmp
and
add
add
or
cmp
add
push
xor
cmp
ja
mov
mov
pop
inc
mov
lock
add
and
cli
mov
addl
test
shrb
jb
inc
jle
jmp
add
call
clc
mov
ja
cvttps2pi
dec
mov
pop
les
sub
sub
std
adc
adc
sub
and
in
stos
lret
add
sub
xchg
leave
repnz
sbb
pop
inc
in
xor
rolb
arpl
lret
jmp
sub
xchg
push
sahf
push
cld
or
cmp
fldt
jmp
add
imul
dec
add
adcl
sbb
dec
dec
insl
push
jne
add
xchg
jbe
fs
js
movsb
add
sub
fcompl
aas
add
dec
pop
pop
xchg
add
and
loopne
add
push
push
adc
adc
adc
pop
pop
push
pop
sbb
sbb
sbb
push
pop
and
and
add
add
sub
sub
cs
jne
stc
inc
inc
cmp
mov
dec
pop
loop
inc
icebp
sbb
dec
pop
pop
subl
and
cmp
and
add
cmp
sbb
inc
aas
pop
adc
jo
add
add
cmp
sbbb
jnp
pop
jns
ljmp
fstl
jo
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
repnz
roll
mov
test
lods
lods
scas
scas
cld
hlt
mov
mov
mov
mov
mov
mov
rolb
movl
enter
sbb
int
add
rcl
rcl
aam
aad
push
xlat
fcomp
fisubl
jnp
pop
lock
add
in
out
out
jmp
in
add
repz
cmp
clc
cli
sti
cld
std
incb
add
test
jo
or
adc
les
sbb
sbb
jge
popa
jne
out
and
xorl
xchg
test
mov
push
push
loope
cmpsl
sub
mov
xor
test
xchg
mov
cmp
xchg
lcall
sahf
lahf
add
loop
out
xchg
movsl
cmpsb
cmpsl
test
out
add
push
fcomi
cli
mov
ret
lds
add
lcall
add
lret
add
in
add
loopne
dec
cld
pop
call
out
xor
loope
outsb
shlb
stc
lcall
add
pop
addr16
add
loope
cmp
and
jns
and
nop
test
je
pop
inc
adcb
mov
xchg
xchg
adc
cwtl
and
sbb
je
add
mov
ret
cmp
or
adc
rorb
add
in
in
xchg
lock
mov
stc
ret
cs
add
inc
int3
dec
jae
cld
into
ja
cmp
sarb
rorl
repnz
sarl
incb
ss
aad
mov
add
imul
push
inc
or
cmp
dec
add
xchg
je
dec
pop
dec
add
inc
jne
xor
add
sbb
cmp
test
mov
fstps
jp
push
sbb
add
add
scas
cli
or
adc
push
xchg
les
and
loope,pt
add
inc
mov
add
xor
cmp
aam
stos
add
inc
test
faddl
xlat
aad
fiadds
adc
test
sub
icebp
mov
and
in
scas
pop
mov
or
adc
loope
inc
xchg
les
push
rcrb
andl
pop
int3
cmpb
jo
xlat
shl
adc
jecxz
out
xor
mov
pusha
addr16
mov
jb
add
add
xchg
add
push
dec
jmp
sub
jo
and
nop
adc
mov
or
add
jns
ss
sub
mov
and
add
xlat
cmp
add
divl
test
jp
nop
sahf
jo
add
pop
add
add
adc
adc
pop
jmp
insb
jecxz
pop
leave
insl
add
loopne
shlb
push
ja
outsl
add
inc
push
pop
mov
outsb
sbb
jl
xor
daa
shrb
and
aaa
dec
sub
add
ss
push
sbb
or
loope
add
inc
in
mov
les
sub
push
mov
in
inc
mov
insb
add
and
movl
mov
fxch
sbb
adc
negl
xchg
xor
adc
je
push
insb
mov
push
loop
jae
into
add
dec
mov
pop
ret
cmp
jnp
call
jb
inc
or
in
lret
add
add
inc
in
idivb
mov
popa
out
subl
add
cmp
sbb
jno
push
cmpsl
mov
and
sbb
sbb
nop
cli
shr
cmp
inc
cwtl
jmp
loop
psrld
and
add
loopne
xor
fistpll
pop
cmp
icebp
add
or
std
add
xchg
pop
adc
cmp
gs
mov
sti
or
inc
add
push
aam
add
cli
inc
clc
push
inc
loopne
push
rorb
push
out
fadds
pop
or
popa
add
int3
jl
pop
fnstcw
mov
in
or
btr
shlb
in
cmp
fsubr
clc
add
loopne
lea
and
adc
push
add
push
faddl
pusha
jp
arpl
aaa
mov
jae
popa
mov
mov
or
sub
xchg
shrl
loopne
cmp
add
js
test
adc
stos
insl
jns
mov
sti
loope
push
mov
add
fistpll
add
into
out
add
mov
pop
idivl
rclb
inc
shrb
mov
fisttpll
sbbb
and
bound
movl
fistps
add
negb
jp
aad
test
popf
mov
mov
and
sbb
mov
add
jae
loopne
stc
fwait
adc
in
or
aas
mov
sbb
cmp
addb
addb
xor
dec
xchg
and
add
push
into
and
mov
divl
inc
repnz
add
stos
mov
sarb
pop
inc
or
sbb
into
fs
movsb
lcall
jnp
add
jbe
add
push
ds
add
mov
jecxz
scas
subb
jnp
sub
mov
dec
pusha
stos
test
add
jns
repnz
cmp
in
add
test
inc
add
xor
push
faddp
movsb
jbe
addr16
addb
in
jno
pop
pusha
add
lock
fadds
shl
sub
jle
fwait
mov
add
sub
pop
mov
add
and
jno
icebp
jo
adc
stos
mov
adcl
mov
inc
add
into
or
mov
adc
dec
insl
imul
pusha
enter
movl
bound
pop
mov
in
pop
stc
aam
rolb
shll
jmp
orl
scas
pop
push
ltr
out
fildl
inc
es
mov
mov
mov
jo
add
mov
pop
fmuls
add
or
xorb
dec
mov
pushl
cmp
cmp
adc
jno
test
cmp
rcrl
push
mov
addb
pop
out
in
mov
mov
xor
add
int3
jae
cmp
cmp
pop
pop
cwtl
sub
pop
lcall
into
xchg
imul
aas
testl
add
fadd
adc
out
sahf
mov
xchg
mov
push
add
test
adc
pop
push
adc
dec
sub
sub
jp
or
mov
cmpsl
add
or
mov
push
jecxz
inc
pusha
jne
xchg
sub
pushf
cmc
das
les
push
adc
ljmp
add
into
stos
mov
pop
sbb
sbb
inc
pop
jo
add
mov
or
loopne
add
xor
lahf
jnp
inc
jns
fldl
jno
loop
aam
xchg
push
pop
inc
jae,pn
pop
pusha
sbb
out
popf
addb
cltd
add
out
cmc
call
cwtl
popa
push
loopne
add
mov
rclb
insb
mov
andb
outsb
mov
xor
push
or
mov
out
mov
test
push
das
pop
mov
inc
shl
call
test
sbb
cmp
enter
clc
mov
xor
mov
insb
mov
add
dec
dec
lea
jle
shrb
lock
push
sub
addr16
mov
call
notl
or
sbb
cmp
scas
insl
sub
cmp
loopne
cmpb
pop
pop
push
push
push
out
shl
adcb
jae
fistpll
faddl
fwait
jo
mov
push
jo
add
leave
lret
cmc
add
add
cmp
add
pop
mov
push
add
xor
dec
lods
loope
xorb
add
xchg
lds
jecxz
data16
mov
sarb
inc
push
jae
test
jo
sbb
shll
xor
jo
add
cmp
and
mov
int
xchg
sti
pushf
adc
pop
add
and
clc
std
mov
testb
push
mov
sahf
add
xchg
fnstsw
cmp
add
int
push
cmpsl
nop
loopne
add
mov
imul
fbstp
inc
mov
cli
push
ja
cmpsl
mov
pop
fwait
xor
rcrl
add
add
cli
scas
pusha
sbb
add
pop
mov
or
gs
or
add
fiadds
mov
aaa
pop
add
mov
add
mov
dec
jmp
nop
test
add
jp
lods
mov
sbb
jb,pt
fs
mov
add
sbb
mov
inc
cmpsl
fwait
pop
ja
sahf
out
inc
mov
dec
add
add
mov
push
hlt
add
lods
test
dec
or
lcall
adc
clc
adc
add
push
int3
out
icebp
push
add
xor
inc
add
mov
adc
pop
jne
push
mov
mov
xor
sbb
sub
insb
add
lock
xor
add
ja
popf
out
xor
jb
or
add
nop
lods
fs
jo
cld
inc
pop
add
or
gs
call
xchg
pusha
xchg
xor
and
movsb
xchg
ljmp
mov
add
push
pop
sbb
add
test
sarl
icebp
push
mov
es
jl
mov
orb
inc
add
clc
inc
cmp
ja
pop
inc
popf
add
add
add
lret
mov
mov
cmp
test
cmpsl
sub
push
cwtl
jbe
mov
pop
push
and
loopne
xchg
add
mov
lea
mov
jns
hlt
pop
icebp
sti
xor
mov
fadds
add
or
enter
add
mov
lock
add
je
add
xor
sub
in
aam
mov
add
pop
movb
adc
push
and
les
iret
sub
loop
das
ljmp
push
dec
dec
idiv
push
adc
ja
add
das
lret
lods
fwait
inc
call
pop
clc
aaa
add
test
scas
jecxz
add
ret
add
jg
cmpsb
push
leave
xcrypt-ofb
cmpsl
test
pop
imul
ret
jle
cmp
iret
inc
sub
add
mov
add
cli
or
push
inc
std
lret
int3
enter
mov
ds
or
in
add
and
imul
adc
outsb
ret
xor
pop
dec
adc
or
cmp
pop
jg
cmp
xor
mov
push
xorb
cmp
jns
add
xlat
pop
jnp
add
mov
nop
add
lret
pop
sbb
or
iret
lods
add
sarb
enter
xchg
adc
das
aam
xchg
in
add
pop
popa
dec
sahf
test
add
lds
mov
inc
fidivrl
or
pop
imul
xchg
inc
std
lods
pop
int3
pop
in
pop
ret
stos
aad
mov
js
push
mov
jl
pop
push
xor
ljmp
add
cmp
push
push
js
sbbb
push
add
ss
adc
xor
mov
and
dec
xor
pushf
call
adc
xchg
js
lds
sti
xor
mov
or
jle
jg
xchg
pop
cld
orb
add
repnz
rolb
dec
shlb
cmpb
jl
jl
add
pushl
inc
cld
dec
jg
fucomi
hlt
mov
mov
outsl
add
inc
push
stc
repnz
adc
push
inc
adc
add
call
dec
or
add
adc
inc
mov
xchg
js
dec
sbb
inc
stc
push
fimuls
or
sub
add
inc
xchg
into
mov
pop
jno
add
arpl
jns
xchg
lock
sbb
xor
pop
fsubp
xor
add
test
adc
cmp
cmpxchg
cmp
rolb
divw
imul
in
flds
and
dec
xchg
pop
pop
ljmp
push
pusha
outsl
out
add
push
pop
lahf
pop
adc
push
inc
cmpb
xchg
cmp
mov
add
fsubrl
cmp
push
sub
sbb
pop
iret
add
adc
aad
sbb
push
fld
movsb
or
decl
adc
ljmp
add
popf
and
add
or
push
out
add
call
out
add
inc
hlt
lret
lods
hlt
lahf
add
ljmp
loopne
lods
aas
add
adc
pop
scas
mov
fdivl
pusha
pop
pop
cs
add
in
ret
fsubrs
mov
xchg
pop
mov
cli
xchg
pop
bound
pushf
andl
push
andb
add
mov
cmp
add
push
cmc
call
addr16
mov
cmp
fwait
je
add
cltd
inc
call
movsb
xor
out
add
push
pop
push
cmpsb
dec
cmc
add
emms
clc
lret
add
stos
sti
shrb
pop
xor
pop
loopne
cmp
pop
lock
xor
cmp
test
add
popf
mov
add
pushf
sub
adc
into
add
ret
popa
sub
add
out
sub
cmp
cltd
add
mov
xchg
call
mov
out
add
push
mov
mov
test
stos
add
mov
jp
sbb
adc
lds
add
in
loope
mov
push
xchg
in
push
test
jb
mov
jl
sbb
pop
les
add
adc
sahf
add
sub
push
ljmp
xchg
cmp
jo
add
out
or
cmp
add
inc
ret
stos
adc
xchg
sbbb
sbb
loopne
add
aas
ret
rcl
add
mov
xchg
push
mov
imul
mov
int3
out
add
jmp
xor
stos
sub
imul
sub
mov
adcb
inc
movsb
jmp
xchg
mov
pop
cmp
add
stos
cmp
inc
loope
push
add
loopne
jge
xchg
and
sub
sbb
dec
loope
mov
add
daa
jge
nop
and
add
push
dec
jl
add
subl
add
inc
mov
lret
out
add
addb
dec
fdiv
xchg
cli
pop
push
pop
and
push
lods
or
cmp
sub
pop
jne
mov
sbb
sbb
push
lret
pop
dec
jne
loop
adcl
pop
xchg
add
adc
adc
lea
enter
mov
pop
in
mov
in
mov
add
je
lods
stos
add
fists
xor
cld
push
pop
adc
inc
or
je
and
inc
loopne
push
adc
adc
ds
cli
verr
out
jmp
adc
adc
add
adc
add
add
ja,pn
pusha
and
pop
push
sahf
enter
mov
mov
pop
cmp
mov
aas
addb
insl
sbb
or
push
or
cmp
je
sti
adc
inc
into
fsubrp
jnp
xchg
fsts
in
je
nop
and
out
jno
call
mov
add
arpl
or
loope
clc
add
add
add
xor
sbb
jo
pop
imull
imul
cmp
push
cmp
dec
mov
xor
pshufw
dec
popa
outsb
leave
jcxz
jg
or
add
hlt
mov
mov
mov
je
pusha
lret
dec
test
jecxz
sbb
mov
call
push
adc
jp
lock
icebp
loopne
or
testl
sub
dec
jo
dec
jmp
or
fs
repnz
xlat
andb
test
pop
inc
cmp
popf
ja
push
gs
andb
push
fists
shll
sbb
xchg
push
aad
sbb
ja
decb
push
cmp
adc
enter
pop
daa
push
pop
inc
sub
jbe
mov
or
add
pop
cmp
ret
inc
pop
adc
lahf
andnps
outsb
loopne
clc
cmp
add
packuswb
shlb
xor
ret
cmpsb
push
movsl
mov
sub
sbb
add
adc
imul
add
push
orb
sarb
imul
aad
sbb
pop
sarb
addb
sub
je
push
cwtl
pusha
inc
stos
pop
add
aam
lds
add
rolb
push
in
mov
loop
sbb
lods
add
mov
cwtl
mov
add
repz
jo
add
push
loope
loopne
add
jo
sbb
jp
rorl
xchg
mov
loopne
mov
mov
int
jbe
mov
dec
roll
mov
push
jmp
ljmp
ret
add
sub
cmp
adc
cmc
andb
push
pop
iret
pushf
dec
sbb
dec
mov
and
add
cmp
sbbl
mov
enter
add
dec
cs
cmpsl
adc
inc
or
pop
scas
inc
decb
sub
outsb
loopne
setns
in
add
xchg
mov
xchg
jmp
add
inc
or
inc
xor
adc
cmp
aam
pop
xor
xchg
or
inc
mov
sub
mov
cld
pop
adc
inc
nop
pushf
push
js
adc
xor
mov
pop
add
cltd
jne,pn
lcall
aam
out
add
lea
jae
lods
add
jnp
or
je
sarb
incl
shlb
xor
sub
or
add
clc
mov
sarb
sbb
cmp
jge
add
int
stc
sub
mov
dec
out
push
and
in
mov
pusha
mov
pusha
jmp
mov
shrb
or
and
xor
sub
pop
hlt
cwtl
add
mov
cmp
jmp
jo
inc
and
add
cmp
mulb
ds
dec
pushf
jno
cmpsl
cmp
scas
and
pop
data16
add
mov
or
jmp
mov
pop
push
cmp
mov
mov
pop
sbb
inc
and
aas
test
leave
sub
add
sub
dec
mov
jbe
call
xchg
fadds
in
pop
sub
sti
push
inc
pop
add
push
add
pop
xor
pop
stos
adc
mov
ja
jne
sahf
sub
mov
mov
add
lods
jb
push
popa
fs
into
jbe
add
push
and
popf
cmp
push
fistpll
cld
loopne
mov
xor
dec
sub
test
add
loope
jo
add
mov
inc
jnp
add
into
sub
xlat
pushf
dec
lahf
push
pop
push
or
aaa
and
pusha
mov
add
es
imul
push
sub
push
test
pop
add
mov
mov
ds
dec
dec
fnstenv
cwtl
xor
inc
add
cwtl
mov
add
clc
pusha
fwait
loope
add
mov
cltd
sbb
leave
fadds
dec
cmpl
lock
add
outsb
sub
test
jno
add
rclb
sbb
cmp
cwtl
stos
add
rol
jge
xor
pop
inc
out
jmp
add
fiadds
pop
test
inc
shlb
inc
add
mov
dec
mov
sub
mov
add
in
loopne
xchg
sbbb
mov
pusha
push
inc
pop
xchg
stc
add
fwait
test
fwait
ljmp
dec
addl
push
cld
dec
add
fnstenv
adc
add
sub
sub
xor
xor
mov
pop
xchg
adc
jbe
add
ror
repz
and
stc
movl
add
out
mov
dec
inc
mov
push
repz
add
shld
rolb
call
add
int3
jmp
test
aad
add
add
jb
addr16
imul
cmp
mov
mov
ja
sbb
add
fs
push
data16
imul
lahf
outsb
ret
xorl
fdivrs
add
pop
in
mov
add
adc
add
jle
aas
testl
das
mov
add
insb
and
xor
adc
add
mov
out
push
mov
mov
cmp
add
or
arpl
add
or
adc
ret
cmpsl
add
int
fcompl
mov
add
push
mov
ror
sarb
add
push
mov
push
jge
add
sbb
sub
add
mov
add
xchg
mov
jo
push
inc
add
pop
mov
clts
popa
pop
stos
shl
les
pusha
pop
js
and
adc
je
add
subb
in
pop
pop
jmp
outsb
add
xor
sbb
add
or
cmp
sarb
pop
repnz
mov
hlt
adc
jb
or
and
pop
push
push
sbbb
adc
xor
dec
fcoml
ret
jns
pop
xlat
push
push
pop
add
dec
sub
mov
int3
sbb
xchg
add
or
nop
add
inc
loop
push
sub
xor
pop
int3
cmp
daa
cmpsl
nop
lahf
je
shl
mov
xor
pop
inc
cmp
subl
xor
lcall
xor
cmc
push
push
nop
mov
punpcklbw
dec
pop
push
stc
clc
or
imul
xchg
push
ds
cli
mov
cmp
mov
js
cmp
push
add
and
add
sbbb
jne
jbe
divb
push
and
and
and
lods
mov
push
push
enter
mov
pop
mov
adc
sub
in
idivl
or
jnp
add
dec
repz
jo
xlat
add
sbb
icebp
shlb
add
lret
repnz
push
mov
add
push
pushf
add
pop
xchg
push
adc
mov
add
push
mov
movsl
jl
dec
decl
cmc
add
adc
xor
mov
add
call
push
scas
cli
push
add
das
cltd
cld
jnp
cmp
add
ljmp
dec
or
or
mov
sub
mov
xor
add
lret
push
sbb
and
sub
sbb
jmp
ds
sub
dec
add
sub
cmpsb
sub
pop
mov
lock
movsb
add
leave
push
repnz
mov
clc
mov
out
add
out
pop
enter
dec
dec
loopne
lods
adc
movsb
add
dec
mov
sti
jl
sub
and
push
rorl
adc
sub
fdivr
add
addb
push
xchg
sub
add
mov
add
pop
adc
xchg
fstl
add
jb
add
mov
adcb
add
arpl
fs
push
pop
xchg
add
mov
or
xchg
mov
sbb
dec
mov
or
daa
sub
push
or
push
add
add
movsl
add
jae
bound
adc
inc
scas
mulb
pop
cld
or
dec
int
adc
sub
add
cli
push
jmp
add
out
fwait
xchg
aad
xor
or
hlt
rcrb
sub
cmp
sbb
addr16
sbb
les
sbbb
decb
sbb
mov
ret
jmp
je
add
lock
fstps
and
sub
jbe
shr
in
add
out
jno
and
shlb
cmpsl
adc
pop
lods
pop
sbb
add
push
sahf
jo
ret
popa
jmp
adc
cmp
pusha
sub
cmc
push
push
sbb
aam
add
pushf
and
inc
and
cltd
add
xor
pop
cmp
add
movsb
xchg
pop
aad
stos
push
popf
in
adc
lds
add
mov
cmp
sub
test
inc
xor
loop
add
shr
sub
add
imul
or
and
pop
push
push
pusha
aaa
bound
sbb
mov
lret
push
or
add
sbb
int3
pop
add
jecxz
inc
add
js
ret
cli
fisubrs
add
fwait
dec
data16
add
jmp
pop
mov
inc
jnp
xor
out
cli
pop
add
roll
sbb
mov
xor
cltd
mov
adc
add
lret
fdivs
mov
pushf
into
loopne
rolb
and
pop
pusha
nop
movsl
xor
in
xlat
ljmp
lahf
cwtl
or
dec
mov
jo
cmpsb
mov
add
insb
push
dec
or
add
and
or
jne
pop
add
ja
enter
movsb
add
dec
add
xchg
mov
inc
inc
popf
jg
out
cwtl
lret
add
xor
mov
add
mov
sub
dec
mov
xchg
rolb
and
sbb
dec
stos
mov
addb
add
push
imul
pop
and
mov
inc
cmp
mov
insl
scas
lahf
push
push
clc
and
jg
pushf
push
ficoml
pop
push
mov
or
pop
sbb
out
mov
and
jg
dec
xchg
add
nop
call
push
jbe
inc
orb
xlat
and
movb
in
arpl
or
adc
test
orb
add
leave
mov
xchg
mov
das
adc
and
add
jmp
sub
imul
rolb
pop
jb,pn
sub
xor
add
mov
test
jge
add
push
std
movl
mov
loopne
xor
int
sbb
mov
add
push
stos
shlb
and
add
add
aam
inc
jns
sbb
add
negl
mulb
add
or
fidivl
into
or
jbe
push
cltd
popf
nop
ret
outsl
clc
sbb
sbb
lahf
jae
sub
pop
shlb
add
xchg
dec
repz
mov
fsubs
pop
cmp
adc
adc
mov
pushf
lods
and
inc
pop
and
jmp
sti
or
sub
or
pop
ds
out
aas
es
cmpb
mov
adc
dec
arpl
ss
pop
ds
mov
nop
test
iret
sub
add
int
ret
adc
aam
or
push
push
push
addr16
pop
push
adc
push
push
imul
cmp
sti
mov
insb
sbb
or
pop
and
cli
xor
mov
pusha
jmp
push
and
push
add
dec
and
xchg
hlt
adc
and
push
xor
mov
add
fisubrl
ret
lock
out
add
cmp
add
pop
cmp
xchg
nop
sarb
fcomps
lods
repz
add
nop
or
sbb
push
cld
xchg
repnz
xchg
sub
mov
les
fdivs
and
loop
add
jne
rcll
into
add
xchg
lcall
rolb
xchg
imul
adc
xor
add
xorb
cld
test
lods
movsl
push
or
stc
stos
incb
cmpl
mov
inc
sub
shll
cwtl
pop
mov
sbb
inc
push
add
adc
xor
and
inc
push
inc
imul
fadds
cmc
sti
mov
add
dec
xchg
movaps
add
cmp
sbb
loopne
add
fdivrs
mov
in
sub
loopne
xchg
pop
xchg
outsl
add
les
dec
div
cmp
es
mov
orb
movb
and
mov
mov
add
add
jbe
fisttpll
pop
and
test
daa
mov
inc
or
jp
orb
repz
and
flds
sub
cld
sbb
sub
or
jae
inc
iret
jl
in
adc
pusha
add
movzwl
cwtl
add
push
ret
fwait
jmp
pop
cli
xchg
icebp
add
and
test
ds
mov
mov
add
add
push
push
add
jmp
push
pop
pop
pop
add
cmp
fisubrl
fwait
call
pop
orb
out
pop
mov
mov
rcrl
in
shlb
jp
aas
popa
fildl
faddp
fsubrs
adc
or
pop
fsubrl
loopne
ja
test
enter
mov
lahf
xchg
mov
jbe
adc
push
cwtl
sub
inc
sarb
jne
filds
and
push
pop
push
testb
xor
pop
add
jp
sbb
xchg
mov
sub
test
mov
mov
mov
ret
mov
es
pop
fs
lods
test
jne
mov
fcoml
ja
add
rol
je
push
and
mov
add
mov
cltd
sti
or
cld
add
fisubrs
adc
xchg
add
cmp
test
movsb
mov
xor
call
adcb
add
add
xor
es
ja
push
xchg
mov
and
inc
dec
lahf
add
jmp
lock
lret
inc
add
ja
adc
and
add
push
push
mov
sbb
mov
xor
xor
push
mov
xchg
dec
add
shll
dec
xchg
or
aas
imul
inc
dec
jne
add
push
fmull
repnz
jle
mov
mov
add
xchg
iret
or
js
or
sub
ficoms
lea
and
mov
add
sbb
mov
or
add
add
lret
stc
add
call
je
psrad
push
xor
enter
lea
out
xor
or
pop
add
lds
cmc
sbb
sub
xor
mov
je
fiadds
push
imul
sbb
sbbb
rolb
pusha
jbe
leave
das
je
xlat
jg
jne
ss
xchg
clc
mov
cld
loope
cmpl
dec
lret
jmp
adc
jne
jo
aas
cmp
push
add
and
xchg
orb
or
lods
mov
xor
es
stos
and
inc
cmp
fwait
add
xor
pop
mov
jo
les
pop
mov
outsb
xchg
xchg
mov
adc
or
shrl
pop
add
or
sub
jle
add
pop
adc
cs
push
add
xchg
jge
cwtl
mov
dec
sub
call
fstl
mov
add
adc
and
or
mov
or
add
imul
sbbb
aam
lods
jmp
call
mov
fwait
rcr
add
mov
int3
or
inc
xor
dec
jne
setae
inc
fwait
nop
xchg
add
mov
rclb
mov
xor
or
mov
push
cmp
add
and
fst
scas
cmpsl
pusha
aas
fnstenv
jne
neg
mov
sbb
or
jno
pop
mov
and
pop
mov
add
call
push
jp
mov
dec
push
lahf
icebp
nop
jl
imul
xor
sbb
andl
xor
xchg
lcall
mov
mov
or
pop
pop
mov
rolb
stos
mov
pop
mov
testb
inc
dec
add
jb
clc
mov
sbb
add
adc
add
idiv
xor
adc
cmpsb
cld
clc
adc
adc
stc
in
add
or
adc
push
and
inc
add
addl
or
addb
decl
or
mov
aam
test
popl
dec
stc
push
pop
add
or
inc
add
sti
pusha
fs
add
pop
and
xor
dec
push
adcl
jmp
push
imul
inc
outsl
add
xor
dec
add
adc
adc
jmp
mov
test
dec
idivl
and
cld
cmpb
adc
push
jne
sbb
mov
adc
int
mov
mov
es
mov
imul
and
call
jle
or
popf
outsl
or
test
mov
cwtl
cmp
push
and
and
fwait
pusha
aas
sbb
cwtl
pop
cmp
mov
sub
push
push
lea
dec
push
lcall
pop
inc
add
mov
jbe
ss
imul
gs
inc
mov
and
or
mov
insl
pusha
adc
std
inc
add
xor
add
movsl
stos
ja
and
mov
rolb
lea
hlt
add
mov
pop
sub
shrl
lds
add
lahf
pop
fwait
in
or
aam
add
push
adc
mov
cmp
push
ret
sbb
xchg
mov
xchg
in
add
fists
lahf
incb
aam
call
dec
push
imul
fcmovbe
test
mov
mov
jge
lock
xchg
add
leave
pop
push
add
mov
mov
mov
cvtpi2ps
adc
mov
inc
fwait
jmp
int3
out
outsb
in
loop
movups
pop
jno
sbb
shrb
out
mov
aas
add
mov
ja
enter
push
sbbl
or
xor
adc
dec
adc
push
and
or
addr16
jle
insl
cs
loopne
shrb
add
movsb
cmp
ja
pusha
test
jge
add
shll
add
movsl
hlt
rclb
jo
add
sub
popa
arpl
jmp
mov
sub
add
in
push
mov
mov
adc
sbb
and
pop
bound
sbb
mov
or
enter
dec
jecxz
pop
jle
sti
daa
push
pusha
cmpsb
jg
in
dec
inc
insl
add
adc
pop
push
add
or
filds
inc
sarl
mov
lea
add
shll
or
adc
dec
push
push
sahf
cmpsb
test
insb
sbb
sub
cmpl
fsubs
and
movsl
in
inc
aad
sub
pop
or
faddp
and
pop
mov
pusha
stc
adc
inc
xchg
and
inc
xchg
mov
xchg
adc
xchg
inc
sub
fildl
sub
in
push
inc
or
fimull
adc
mov
pop
and
push
lods
and
add
inc
sbb
adc
add
daa
sbb
add
adc
push
or
push
test
movl
push
loope
rolb
in
sbb
cmp
push
add
jae
cli
pusha
out
mov
jmp
add
and
cwtl
adcl
rorb
repz
sub
aam
fdivr
or
nop
pop
push
test
pop
sti
es
push
add
icebp
clc
jno
mov
aaa
rolb
sub
jb
push
add
enter
and
fsubs
mov
inc
and
and
add
and
mov
inc
pusha
and
sbb
or
pop
ds
dec
addb
aam
ret
jmp
xorb
add
mov
cmpsb
pushf
daa
hlt
add
leave
div
inc
int
add
cmp
pop
jo
ja
sbb
movb
pop
xorl
test
adc
inc
pop
mov
add
lods
jno
movsl
jmp
jle
clc
sub
test
add
lcall
add
mov
pop
or
add
cmp
imul
mov
rclb
xadd
aad
jae
xchg
mov
bound
pop
stos
mov
adcl
loop
inc
shl
dec
fdivrs
cmp
jo
stos
add
and
cld
outsb
test
mov
in
and
hlt
aam
sbb
and
and
inc
sbb
xor
mov
outsb
or
push
xor
add
push
xor
xor
loopne
lods
dec
test
push
pop
xlat
shlb
les
cmpl
dec
fcoms
cmpb
add
mov
cli
cmp
cmp
mov
call
inc
xchg
lock
jl
add
mov
dec
add
pop
mov
pop
and
test
push
cmp
out
ss
and
mov
and
sbb
mov
loop
imul
jne
rolb
adc
sub
mov
pop
icebp
mov
cmp
sub
add
mov
jl
add
js
insb
and
xchg
js
add
xchg
cld
arpl
or
rorb
push
pop
inc
cmp
daa
lock
adc
push
jb
stc
add
jecxz
shr
xor
pop
jge
adc
sub
in
test
push
sbb
jbe
repnz
pop
mov
das
push
scas
ret
mov
dec
add
mov
cmp
push
add
sbb
pushf
xor
cmp
cmp
sub
and
int3
add
cmp
dec
mov
and
xor
push
dec
movsb
add
xor
out
pop
movsl
xchg
add
mov
lcall
push
push
dec
sbb
pop
mov
inc
pcmpeqw
push
push
clc
xor
ljmp
nop
and
mov
testb
jg
dec
adc
sub
popa
mov
add
jmp
push
nop
sbb
dec
and
inc
xor
push
inc
mov
fs
ds
ret
mov
cmp
xchg
es
hlt
test
in
out
add
test
loop
xchg
std
ja
hlt
adc
push
push
mov
push
push
mov
pop
jge
add
sarl
xchg
hlt
mov
adc
jnp
shlb
mov
sub
mov
xchg
repnz
push
cs
int
xor
out
aaa
lds
sti
push
xchg
jle
add
push
pop
inc
incl
mov
sub
cmpsb
add
dec
ja
add
divb
subb
or
int3
inc
fmuls
gs
adc
add
or
lcall
rcr
mov
insb
add
lods
aas
pop
inc
cmp
add
je
clc
ret
popf
mov
jae
and
mulb
fsubl
mov
mov
mov
adc
xor
or
add
iret
movsl
dec
push
das
pop
cwtl
jb
push
add
or
adcb
fstpt
xchg
in
add
inc
or
lea
mov
mov
sub
and
ja
adc
and
fisubs
push
roll
push
movsb
mov
cld
add
add
iret
xor
cld
out
test
add
pop
mov
mov
inc
add
push
mov
pop
inc
or
rcrb
cmp
lea
ret
mov
shr
aaa
add
sub
mov
mov
adc
push
mov
rorl
cmp
fadds
sub
push
push
mov
cmc
add
les
test
cmpsl
pop
pop
add
inc
and
add
mov
mov
test
sub
sbb
sub
xchg
pop
dec
dec
out
mov
add
mov
jl
add
jb
lea
pusha
cmp
sbb
and
and
movsl
addb
xchg
outsl
and
ret
call
pushf
sub
loope
ja
add
stos
aaa
xchg
dec
out
sub
adc
cmp
or
add
mulb
sahf
add
mov
enter
leavew
sub
dec
or
sub
mov
call
add
mov
incb
int
hlt
add
sbb
jl
std
mov
into
add
imul
aaa
inc
push
dec
add
cmp
sub
loop
repz
jge
add
cli
stc
sbb
test
add
inc
shlb
mov
fnstenv
pushf
shrb
cmp
je
or
lahf
stc
mov
lea
xor
jbe
pop
jnp
cmp
lcall
xchg
es
dec
sub
pop
ret
fldcw
sub
jle
dec
add
xor
add
movsl
cmp
mov
xlat
nop
mov
outsb
adc
int3
scas
decb
mov
and
dec
or
mov
gs
mov
in
mov
jnp
aaa
fsub
add
mov
test
push
add
mov
pop
inc
test
pop
popl
enter
dec
lods
ficomps
cmp
xchg
test
inc
lcall
add
icebp
inc
inc
and
and
pop
sbb
mov
int3
cmp
push
mov
mov
daa
pop
pop
add
add
adc
sub
dec
mov
das
dec
pusha
andl
incl
mov
jnp
pop
pop
test
sbb
imul
add
rol
call
add
and
movl
cmp
fnstenv
sub
inc
inc
add
frstor
ja
mov
das
or
leave
push
mov
cmp
jle
popf
inc
sub
jo
stos
add
sub
in
sbb
adc
out
lds
or
repz
jge
outsl
or
loopne
call
scas
das
mov
pop
pop
in
add
es
dec
negb
push
add
xor
or
dec
push
xchg
sub
mov
sbb
imul
dec
or
adc
lret
dec
clc
jl
add
inc
add
pop
inc
mov
mov
sub
jge
data16
stos
add
mov
in
inc
push
add
movsb
push
jp
scas
insb
mov
push
test
cs
add
fmull
pusha
inc
fcomps
cmp
add
add
fcomi
jb
cltd
fcoml
int3
pop
push
cmc
dec
jmp
cs
fs
cs
sub
pop
push
mov
mov
nop
or
sti
jbe
sbb
add
gs
loope
sub
movsb
aas
in
add
add
ja
outsl
jb
test
shrb
and
add
je
xchg
mov
roll
mov
adc
scas
je
pop
jp
ja
movsb
sub
xor
ja
mov
mov
add
pop
fnsave
mov
lock
mov
movl
and
int3
adc
pusha
movsb
dec
adcb
hlt
dec
bsr
je
add
fs
push
jp,pt
add
cmpsb
mov
pushf
add
mov
or
pop
sub
add
cmp
test
adc
aam
adc
jp
and
lret
dec
push
pop
in
lods
pusha
ret
cmp
add
cmpsl
inc
pop
in
xchg
mov
adc
xchg
push
dec
xor
push
mov
imul
cmp
push
mov
test
pop
or
add
dec
xor
in
xor
lcall
cld
inc
test
xchg
push
mov
mov
frstor
sbb
push
cwtl
add
adc
push
push
pop
add
sub
rorl
inc
push
sub
pop
clc
outsw
jae
add
decl
stos
lcall
lock
mov
cmp
mov
mov
add
sub
and
mov
xchg
push
sbb
dec
jnp
cmp
xchg
subb
test
test
add
ret
push
and
mov
adc
adc
shll
or
fwait
xchg
arpl
add
stos
sub
pop
mov
jmp
sahf
movsb
xor
push
jg
add
xchg
jae
pop
dec
test
add
jno
es
pop
stos
outsl
mov
adc
push
leave
xor
adc
sahf
add
dec
movsb
adc
inc
in
nop
pop
bswap
mov
mov
lahf
mov
icebp
ret
cmp
add
sarb
jp
cld
and
loop
sub
pusha
neg
and
popf
fidivrs
mov
cmp
je
pop
fldl
daa
sub
movsb
and
adc
jmp
cltd
movsl
clc
je
sbb
add
mov
icebp
dec
cmp
and
clc
shlb
bt
int
cli
jge
repz
push
mov
cmp
and
xchg
pop
inc
imul
or
mov
test
into
pop
xor
fstps
adc
xchg
adc
call
ret
add
shll
and
cld
xor
xor
push
add
test
ljmp
aas
sbb
mov
xchg
aad
sti
stos
push
mov
or
add
or
push
add
jmp
xchg
lds
xor
fidivs
mov
add
mov
cli
or
xchg
iret
pusha
mov
aas
jb
cld
test
cmp
filds
add
fwait
cmovo
push
data16
cmc
in
xor
aam
sbb
orl
inc
push
clc
fistpll
rsqrtps
push
loopne
pop
dec
test
cmpsl
aam
sub
jg
cltd
add
xchg
jg
add
adc
xor
fildl
mov
int
add
stos
loop
popa
ret
or
jne
pop
add
pop
push
push
mov
dec
add
ljmp
jg
pop
adc
mov
adc
test
bound
loope
or
push
and
and
push
pop
add
adc
mov
add
sbb
push
inc
addb
adc
or
inc
lahf
dec
inc
inc
jo
jge
loopne
dec
push
add
outsb
inc
and
and
add
cld
add
sub
rol
loopne
pop
loop
mov
inc
add
adc
testb
or
jbe
cmp
jbe
add
das
int
sbb
push
call
out
jne
push
or
push
jae
jp
insb
push
adc
pop
or
mov
sub
and
xor
xorb
into
inc
push
testb
jne
add
shr
leave
mov
cmp
sarb
mov
xchg
jne
add
xor
add
jl
enter
repnz
rolb
mov
lahf
and
inc
pushf
fsincos
mov
xorl
pop
inc
movsl
cld
js,pt
sub
test
das
push
cltd
pop
add
push
cmp
adc
ret
xor
je
jp
ljmp
add
dec
mov
movsb
pop
jmp
add
push
or
sub
mov
xor
add
pusha
jae
movsl
add
enter
mov
inc
fmull
add
dec
js
test
mov
cmp
pop
ret
inc
ljmp
or
inc
mov
xor
mov
addb
nop
xor
sti
mov
xor
or
pop
push
add
sub
jb
pop
data16
inc
and
into
inc
add
add
je
add
call
dec
mov
xchg
inc
mov
push
popf
pop
cwtl
cwtl
xchg
add
lea
add
and
jmp
jne
call
adc
or
mov
fdivs
push
adc
das
add
sbb
add
rolb
jmp
cmp
call
aaa
sub
push
lock
popa
ret
clc
sub
jg
xchg
punpckhwd
mov
mov
daa
movb
jmp
xchg
popa
add
mov
rolb
les
sub
jb
or
add
push
loopne
rcrb
nop
cmp
jo
push
xchg
cli
dec
pop
fs
sub
sbb
test
add
je
outsb
add
imul
ds
push
mov
dec
push
jae
ja
dec
nop
out
cmp
hlt
add
push
fsubrs
dec
mov
pop
mov
scas
cmp
lahf
js
cmpsb
sub
pop
ret
addr16
imul
lods
xchg
add
gs
mov
jo
add
inc
ljmp
inc
add
inc
sbb
frstor
out
push
push
mov
and
jge
jle
test
enter
add
js
xchg
pop
hlt
pop
dec
or
mov
out
push
dec
xchg
push
add
add
pop
mov
and
mov
dec
rcrl
cmp
jecxz
rclb
add
test
movsb
lret
dec
jmp
cmpsl
xor
add
idiv
shlb
pop
mov
add
jne
push
xor
ja
mov
xchg
mov
pop
imul
std
sbb
add
insl
int
cmp
sbb
pop
and
fstl
add
push
mov
bound
add
jle
outsb
orb
sub
adc
pop
mov
fld
add
aad
mov
test
leave
jge
jae
push
sti
add
inc
push
xchg
pop
rorb
xor
push
sbb
add
in
push
lock
push
das
push
cmp
bound
test
nop
pop
add
xlat
into
sti
int3
lret
add
pop
arpl
push
cmp
lock
lahf
dec
je
push
and
pop
xchg
add
rcrl
fdivl
mov
rcrb
cmp
hlt
add
sbb
call
inc
lods
adc
pop
jp
mov
push
mov
scas
sbb
add
and
pop
mov
inc
cmp
add
add
cmpsb
sbb
jp
add
lods
rcr
add
hlt
inc
cmp
adc
add
mov
inc
int
dec
pop
dec
test
out
imul
or
dec
les
add
addr16
pop
add
pop
pop
or
and
mov
repz
mov
add
inc
adc
roll
mov
push
add
lds
push
shlb
add
ja
cltd
outsl
adc
pop
jb
mov
mov
pop
movsl
leave
add
dec
idivl
push
in
cmc
mov
xchg
hlt
push
add
inc
push
pusha
test
dec
push
add
test
add
push
addb
push
add
jne
sub
nop
adc
cli
sbb
inc
add
loopne
jo
cs
inc
cmp
cli
or
js
or
mov
jge
data16
sbb
pop
les
testb
mov
jp
pusha
xor
imul
jle
test
add
lea
jg
in
push
pop
pop
ja
test
inc
pop
jbe
add
and
loop
sub
loope
jns
int
fdivl
lcall
mov
adc
out
mov
xor
pusha
add
aam
inc
xor
les
in
stc
xchg
mov
sbb
test
fadds
or
insb
pop
add
ja
xlat
faddl
cwtl
adc
data16
and
add
xchg
dec
inc
mov
push
add
rorl
test
push
push
mov
xchg
scas
mov
arpl
adc
ja
cltd
push
in
pushf
jp
add
xor
sbb
xchg
lock
adc
mov
cld
sub
dec
mov
push
add
call
add
sbb
outsl
add
shrl
add
fists
add
repz
stc
popa
xchg
in
push
jnp
jne
pop
push
out
add
cli
sub
sub
sub
idivb
add
loop
push
add
pop
push
ficoms
cmp
sub
add
push
xchg
pusha
in
lret
jbe
mov
hlt
test
add
xor
add
stos
andb
addl
std
fcoml
add
cmp
jbe
push
push
pop
out
ss
pop
in
mov
add
pusha
cmp
add
fwait
clc
mov
dec
ja
call
xchg
xchg
mov
add
movsb
mov
outsl
cmp
add
mov
xchg
mov
mov
mov
out
pop
mov
adc
fiaddl
mov
dec
pop
xchg
aam
mov
xchg
in
adc
call
add
and
jno
xor
sti
xor
orb
in
and
clc
mov
xchg
call
sub
xor
sub
adc
or
ljmp
cli
add
rolb
add
pop
ds
add
je
push
add
shlb
mov
add
add
or
pop
loopne
jg
clc
mov
test
pop
inc
xor
cmp
ds
and
sub
push
push
popa
sbb
mov
jnp
mov
dec
loope
sbb
mov
stos
push
shrb
and
jo
pop
popf
xor
dec
std
cli
je
add
or
ljmp
or
or
cmp
in
pop
mov
or
insb
mov
jo
add
sbb
cwtl
and
mov
inc
mov
pop
mov
mov
lret
fildl
pop
inc
lcallw
cs
movsb
or
add
or
adc
xchg
je
jmp
repz
mov
sub
push
movb
rcl
fcoms
and
adc
push
lret
sarb
xor
add
ss
lock
into
mov
je
jne
lret
inc
test
or
push
clc
call
add
nop
stc
inc
add
pop
mov
cmp
pop
jo
dec
jg
test
sub
mov
inc
aam
add
stos
pop
in
inc
loopne
push
jo
jmp
mov
hlt
or
pop
mov
jmp
movsl
pop
loop
popa
scas
call
ret
pop
bound
add
aad
sbb
jmp
or
dec
add
rclb
addl
add
dec
sbb
ja
lock
xlat
icebp
jge
fwait
ret
cmp
adc
mov
out
add
rcrl
inc
inc
add
and
std
inc
adc
mov
add
dec
xor
je
xor
xor
sub
movsb
mov
xchg
repz
fstpt
add
cmp
or
and
imul
jl
sbb
sub
adc
inc
add
push
and
fdivl
sti
sub
mov
add
jge
pop
loop
add
fcoml
mov
add
lahf
pusha
iret
add
xor
lea
add
cmp
cmpsb
or
or
mov
rorb
mov
adc
stos
mov
push
jae
pop
lock
je
jns
push
push
lds
jg
sbb
add
insb
xchg
stos
add
and
sarl
inc
aad
or
push
cltd
sbb
adc
enter
test
jg
xlat
adc
das
mov
add
divb
flds
jmp
add
mov
nop
pop
lcall
dec
je
adc
and
sbbb
jmp
sar
shl
sbb
fsubs
add
inc
push
inc
add
jne
jle
and
cld
mov
inc
and
jmp
stc
je
and
add
inc
add
les
add
dec
or
jp
add
and
inc
add
add
fs
jns
mov
push
add
aad
sar
js
xchg
or
push
xor
cmp
adc
repz
leave
or
lock
out
add
pop
push
lret
aam
fiaddl
xor
ds
in
cmp
mov
dec
mov
pop
pop
test
test
pop
dec
daa
mov
pop
jge
add
and
les
lcall
cmp
xchg
ret
push
daa
scas
add
mov
gs
and
dec
mov
xchg
sub
push
push
loop
add
push
mov
test
cmpsb
movsl
sahf
mov
add
pminsw
les
gs
sub
mov
shll
out
das
add
lahf
jno
add
in
insl
dec
jg
add
call
ljmp
adc
mov
xor
mov
rclb
cli
jae
jge
sbb
adc
daa
push
add
inc
xor
shrb
inc
pop
mov
sbb
push
fisttpl
ror
add
out
jne
cmp
movb
cmp
lock
fldl
cmpb
and
push
add
jmp
aam
movsb
test
roll
dec
sbb
fwait
loopne
iret
add
push
push
dec
add
mov
jo
popf
and
mov
int
cmp
add
gs
ljmp
dec
push
test
sbb
mov
jnp
cltd
adc
mov
scas
mov
adc
cmp
pop
xlat
cmp
add
arpl
clc
or
add
push
add
or
sbb
and
shlb
in
dec
add
fdivs
push
push
dec
and
in
or
push
mov
stc
std
mov
inc
mov
dec
test
mov
push
call
add
inc
jl
mov
push
rclb
or
dec
mov
push
jmp
enter
jle
inc
mov
pusha
or
out
or
xchg
in
add
push
pop
add
sub
adc
orl
adc
add
xchg
test
rolb
add
inc
push
cwtl
cs
push
stc
popa
into
cld
pop
cmp
daa
inc
sub
or
fidivl
add
fs
into
fmull
sbb
push
mov
movl
add
mov
and
or
sahf
push
add
or
xchg
add
pop
imul
add
orb
add
xchg
inc
aam
es
shlb
cmp
addb
test
adc
ret
lock
xchg
movb
subl
popf
and
dec
fstl
pushf
jno
add
stos
repnz
js
sbb
add
mov
lock
jns
add
clc
jmp
pop
sbb
push
addl
cmp
fs
aaa
push
dec
inc
stos
jle
add
test
daa
test
scas
jns
add
mov
cmp
pop
hlt
dec
mov
pop
divb
pop
xchg
pop
mov
xchg
add
pop
adc
sbb
add
cmpl
jle
add
popf
js
xor
adc
jmp
add
push
call
xor
push
or
push
mov
mov
add
sub
stos
cmp
aad
movsl
daa
cmp
jg
jbe
add
js
mov
ljmp
jne
push
add
xchg
cld
xchg
xchg
add
insb
pop
xor
add
mov
add
dec
push
inc
call
push
loop
pop
adc
add
or
mov
gs
push
mov
fs
xlat
mov
xchg
mov
fisttpl
and
sbb
loope
adc
arpl
mov
jecxz
mov
inc
xchg
pop
xchg
add
mov
push
fsubs
and
loope
in
dec
out
testb
xchg
fpatan
sahf
inc
aam
adc
popa
icebp
movsl
mov
inc
in
into
add
xchg
sub
mov
add
aam
add
js
mov
std
hlt
sub
xor
sbb
cmp
les
out
adcb
add
mov
add
jae
or
jne
aas
movsl
scas
xorb
loope
mov
insl
repz
stos
mov
add
outsb
ss
insb
leave
enter
cvtps2pd
push
and
xchg
xchg
pop
mov
mov
pop
add
lea
jbe
jmp
dec
int3
lock
jne
rorb
cmpsl
addr16
cmp
pop
xor
imul
push
fcompl
iret
dec
xor
add
stc
push
dec
xorb
pop
inc
or
mov
add
stc
inc
add
ljmp
repnz
inc
push
sub
cmp
js
add
push
sub
cltd
cli
jno
pop
xchg
add
movsb
push
xchg
dec
cmp
mov
xor
jb
test
jo
jle
add
mov
add
loop
or
shld
push
pop
push
inc
dec
add
mov
sub
ds
cmc
add
jmp
loopne
push
inc
imul
aas
add
add
in
jne
xchg
arpl
push
out
mov
pop
adcb
xor
jnp
rclb
xor
inc
mov
dec
add
loope
incl
mov
gs
dec
push
xor
sti
add
jge
mov
or
push
xor
jp
rcl
or
push
pushf
lahf
in
xor
adc
mov
testb
jae
sub
popf
movb
xor
pushw
add
test
loopne
xor
cmp
jmp
add
in
jb
clc
add
add
sub
and
add
lret
adc
push
push
mov
adc
add
daa
test
jne
or
out
cmp
add
and
push
push
adcb
cld
ljmp
mov
loop
icebp
xor
mov
mov
xor
dec
dec
stos
xchg
pusha
add
mov
jl
dec
cmp
lea
xor
push
xor
mov
dec
and
stc
pop
stc
dec
aam
pop
mov
add
gs
js
pushf
add
pop
pop
sub
cmpsb
unpcklps
or
push
or
dec
jge
add
hlt
lret
cmp
adc
lret
clc
adc
dec
pop
adc
xor
shll
sub
les
lea
mov
js
cltd
stc
pop
lock
xor
sarb
lret
jns
and
ds
mov
mov
or
add
cs
orb
rorl
cs
rolb
adc
adc
add
scas
or
adc
repz
fmulp
push
xor
lcall
or
cmovg
lea
xchg
mov
sahf
add
cmpb
dec
test
pusha
push
cmp
pop
mov
add
int
cmpsb
pop
add
packssdw
in
dec
int3
js
add
in
mov
add
daa
mov
sub
xor
hlt
sbb
push
in
mov
add
sti
mov
sahf
movb
push
xchg
out
or
cmp
inc
jge
push
incl
je
push
push
push
push
add
mov
xor
outsl
add
sub
sub
loop
pop
adc
insb
add
mov
shlb
xchg
movsb
inc
outsb
mov
out
mov
dec
lods
divb
movsl
add
ret
pop
sti
call
je
adc
bound
pop
pop
mov
nop
int
jle
add
lock
mov
push
adc
js
add
or
arpl
loopne
and
pop
mov
mov
cmp
inc
adcl
dec
faddl
adc
dec
xchg
popa
jne
dec
cmp
aas
and
dec
sub
inc
push
add
das
pop
jne
pushf
test
sbb
test
adc
pop
mov
add
sbb
xor
push
or
rcrb
call
pop
pop
pusha
push
adc
movsb
inc
dec
add
mov
mov
cs
adc
sbb
in
xor
cmp
push
push
xor
fs
adc
sub
clc
add
rol
adc
mov
adc
mov
dec
add
mov
loop
inc
push
jg
add
push
adc
imul
add
xor
sub
push
pop
inc
adc
inc
push
dec
and
mov
outsl
les
pushf
and
cmp
in
adc
add
push
or
add
sub
subl
pop
popf
popa
xchg
roll
nop
inc
sub
mov
leave
fs
or
lret
push
xor
mov
fsubrl
dec
fs
in
mov
add
xchg
mov
js
hlt
cmp
dec
adc
push
in
adc
aad
loopne
daa
jle
ds
mov
jge
add
shll
add
xchg
js
push
lds
sub
and
mov
lret
cld
inc
fs
or
adc
jnp
add
dec
and
addb
push
movl
sahf
or
xchg
inc
add
push
rcl
dec
xlat
add
add
xor
les
pop
orb
lea
or
xchg
int3
in
mov
jne
add
ret
lea
jle
cmp
inc
inc
mov
pop
and
add
push
hlt
pop
pop
pushf
jmp
sbbb
flds
xchg
mov
in
ja
inc
mov
pop
jns
jl
add
dec
repnz
pop
nop
pop
add
jne
call
add
add
or
push
add
jmp
addl
inc
and
jne
repnz
add
out
push
xchg
jns
enter
imul
cmp
sub
fmull
or
shl
ret
sbb
hlt
pusha
or
lods
add
pop
test
rolb
pop
loope
cmp
les
mov
fcomip
inc
add
mov
imull
loopne
fwait
pop
test
cs
out
lahf
add
push
add
rolb
roll
cs
adc
movsl
imul
pop
or
ret
xchg
shrb
add
ret
out
ljmp
enter
xor
dec
and
out
xchg
stc
add
adc
push
and
lcall
ficomps
push
sub
and
test
add
inc
mov
das
adc
in
je
nop
fs
add
aas
call
mov
fildl
icebp
outsb
and
dec
adc
filds
mov
push
in
add
insl
dec
mov
or
jno
hlt
add
add
ss
sub
jp
xchg
mov
mov
add
xchg
flds
or
push
add
lahf
add
clc
testl
pop
mov
ds
cwtl
xchg
adc
pusha
add
jbe
mov
mov
add
enter
xchg
movsb
cwtl
jns
sbb
cld
mov
xorb
ds
pop
add
movsl
les
dec
lock
and
pop
xor
push
mov
jb
add
or
notl
cltd
adc
aas
jno
popf
ljmp
ret
cmp
and
pop
add
mov
jmp
pop
nop
sub
ss
inc
lods
aas
adc
xorb
pop
dec
mov
add
mulb
jp
in
les
inc
movsl
pop
stc
inc
orb
xlat
xor
add
test
inc
add
inc
ja
or
addl
shr
sbb
cmpsb
sbb
jb
or
pusha
push
add
push
sub
mov
movb
or
out
ljmp
shll
mov
add
lret
mov
sahf
pop
orb
js
loope
jecxz
push
dec
jnp
jns
sbb
xchg
mov
pop
adc
add
jecxz
push
cwtl
bound
gs
popa
je
jae
daa
push
or
sbb
inc
insb
add
mov
jg
dec
inc
loop
push
xor
push
or
sub
imul
cmovs
cmp
rolb
or
gs
sub
inc
xchg
and
nop
mov
mov
fs
and
ret
and
adc
or
hlt
fcom
add
divl
movsb
cmp
add
mov
xchg
push
add
data16
and
jns
or
pushf
dec
into
lods
push
add
push
push
data16
mov
insl
add
inc
es
call
popa
or
mov
add
add
dec
mov
roll
mov
mov
sub
mov
push
lea
and
ss
cs
add
mov
sbb
mov
pop
adc
add
and
fwait
sahf
jle
test
adc
mov
cmpxchg
jge
add
mov
stos
adc
dec
insb
add
jbe
add
loopne
stc
xor
add
mov
lahf
mov
mov
test
shl
push
jg
or
and
dec
adcb
ljmp
cmpsl
jg
and
jns
enter
sbb
add
jmp
or
lds
out
mov
lock
pop
outsl
add
scas
les
call
mov
add
push
sarb
and
cltd
dec
add
pop
sub
incl
push
aad
or
xchg
pop
push
subb
out
ret
std
push
xchg
sub
sbb
iret
jmp
mov
and
sub
cmp
add
push
pop
add
inc
bnd
pop
and
xchg
aam
imul
xor
sub
je
inc
cmp
sub
ficoms
push
jmp
dec
cmc
sbb
add
inc
cmp
add
ss
sub
pop
sub
cmp
xchg
xchg
fld
inc
mov
je
inc
scas
mov
andps
imul
push
clc
inc
shll
ret
shll
xbegin
loopne
xchg
push
lods
xor
add
jnp
push
in
mov
cmp
fsubrp
shlb
sub
add
popf
icebp
ja
push
sbb
pusha
out
sub
add
sub
mov
sahf
dec
fidivl
mov
sti
add
xchg
shlb
or
int3
mov
xchg
and
pusha
call
cmp
jne
fcomps
add
mov
dec
test
and
push
and
or
add
xor
lret
xchg
test
pop
stos
mov
xchg
in
subb
lcall
xor
xchg
mov
lods
cltd
jge
adc
sub
fwait
xchg
stc
dec
popa
add
sub
and
push
mov
and
gs
lcall
push
lods
test
jmp
add
les
lds
ret
mov
or
and
cmp
cmp
cmp
cmp
ds
xchg
mov
add
lods
xchg
sub
fsubl
out
dec
add
lock
xchg
call
gs
aaa
inc
pop
cmp
std
fxch
and
dec
cmpsb
cmpsl
repnz
ds
and
sti
jns
rcrl
psraw
mov
inc
mov
cld
sub
sti
pop
add
or
add
mov
lahf
out
popf
popl
out
rolb
loopne
jmp
fwait
add
xor
cwtl
es
push
add
jnp
fcomps
inc
add
xchg
rcrb
and
nop
add
sahf
in
mov
iret
xchg
pop
inc
call
add
lret
add
sub
mov
dec
flds
fldl
add
ret
xchg
mov
jl
ret
inc
mov
add
mov
dec
add
nop
test
push
xchg
bound
mov
or
add
sub
cmp
sbb
sub
add
add
add
add
or
adc
dec
lods
and
je
ljmp
and
add
push
movsb
and
jmp
sahf
sub
push
adc
lds
scas
push
adc
mov
outsl
xchg
cwtl
iret
sahf
push
mov
cmpl
jae
sub
shl
mov
je
out
xchg
jo
add
ds
ret
jecxz
inc
jg
jno
loope
add
adc
add
or
scas
add
mov
xchg
fstpt
and
xchg
cld
mov
and
sub
push
mov
jbe
xchg
push
jmp
xchg
cld
idivb
add
push
int3
pop
fisubl
push
or
movsb
dec
inc
adc
mov
xor
push
add
cmp
adc
mov
or
add
lods
jmp
addb
cmp
cmp
and
sub
data16
js
rolb
or
push
mov
xor
add
xchg
xor
mov
pop
mov
cltd
jmp
cmpb
mov
add
lahf
lret
sub
sbb
pop
jmp
dec
lret
pop
aam
push
ficompl
pop
add
mov
adc
js
jl
icebp
sar
test
add
push
cmp
sub
push
adc
jl
stc
lret
jne
ds
stc
xchg
leave
fbstp
test
or
jecxz
pop
data16
in
jg
pushf
popa
push
add
mov
mov
shl
push
add
jge
cmp
loope
and
xchg
cmp
pop
inc
add
mov
jbe
adc
loop
add
fstl
cmovo
lahf
adc
scas
lcall
pop
and
leave
xor
and
js
mov
and
nop
cmp
add
jb
fadds
mov
js
subb
push
push
push
mov
sbb
orl
into
mov
test
in
pop
ds
inc
iret
movsb
dec
sbb
je
bound
add
and
and
pop
filds
rolb
and
mov
aad
pop
mov
inc
test
sub
aam
and
or
push
adc
call
push
aad
or
xchg
sahf
test
ret
outsl
push
add
pop
xchg
loop
add
fsubrs
or
add
pop
lods
pop
mov
adc
clc
mov
adc
repz
push
add
and
jge
cmpsl
sbb
enter
test
out
mov
imul
adc
push
pop
adc
push
sbb
clc
pushf
iret
pop
mov
cmpsb
dec
dec
call
jge
adc
push
push
sahf
cmp
push
cs
str
and
mov
lcall
and
sub
out
mov
incl
add
cmpsl
out
add
loop
scas
mov
pop
lods
dec
pop
mov
cmpsb
cmp
jmp
sub
hlt
mov
stc
jne
dec
cmp
js
fsubrl
loopne
inc
sub
sbb
or
mov
stos
clc
xchg
lock
and
js
arpl
push
cmp
adc
shl
push
sbb
loop
or
sub
dec
adc
add
push
stos
enter
add
sbb
lahf
mov
and
dec
jnp
punpckhdq
cmp
aas
mov
int3
arpl
inc
add
xor
pop
and
lock
stos
mov
pusha
aam
test
inc
dec
xchg
pop
and
mov
add
mov
cltd
sub
into
add
mov
sub
sbb
js
stos
btr
xchg
enter
subb
je
xchg
or
mov
add
fwait
mov
xor
sbb
andb
out
pop
add
leave
std
fs
add
jbe
jg
je
cmp
push
pusha
in
dec
ja
add
nop
xchg
cmc
add
mov
jno
jg
enter
xchg
pop
sub
outsb
add
xor
or
stos
or
add
imul
add
add
in
pop
jae
mov
mov
add
adc
dec
cmp
mov
jb,pt
inc
push
js,pn
or
sub
dec
jo
sbb
add
aas
mov
mov
dec
jmp
mov
adcb
or
imul
xchg
orb
movsl
cmp
pop
sbb
and
pop
and
jmp
adc
fistl
cmpsl
outsb
orps
xor
sub
push
je
add
xchg
and
adc
add
adc
jnp
dec
sbb
and
lcall
das
in
pop
imul
add
jg
or
testb
adc
sbb
xchg
adc
dec
jp
add
dec
or
push
mov
xor
push
inc
cmp
fiaddl
xlat
cmc
mov
rol
mov
adc
and
add
jle
and
sub
xchg
add
ficoms
xor
sti
imul
jnp
push
pop
cmp
incl
ds
sbb
data16
and
cmp
push
jne
add
movsl
sar
sbbb
and
adc
lcall
inc
aas
bswap
gs
and
test
dec
sbb
mov
rorl
rorl
and
push
pop
out
pop
cmp
push
addl
enter
and
punpckhwd
mov
push
inc
jns
nop
je
mov
add
cmp
leave
sub
in
jmp
out
in
fsub
test
add
add
cmp
stc
shrb
flds
in
sub
mov
mov
sub
xchg
loopne
lods
sbb
andb
mov
xchg
orb
fwait
xlat
cmp
jg
data16
add
scas
shlb
insl
dec
jecxz
into
shrl
sbb
fsubl
inc
test
mov
iret
cmp
inc
aam
in
or
popf
int
xor
shlb
adc
test
and
mov
lret
sub
decl
add
xor
jmp
out
pop
clc
in
js
pop
adc
out
add
and
outsb
addb
mov
in
das
cmc
rolb
jecxz
testb
je
add
rcrb
add
cmp
add
das
pop
lds
xor
or
sahf
hlt
jae
add
shlb
add
adc
inc
cmc
add
dec
inc
testb
in
xchg
test
in
stos
mov
add
push
jmp
inc
add
xor
shr
inc
sbbl
test
lea
push
lret
fldcw
push
jno
rclb
test
and
pushf
mov
out
nop
mov
jle
add
add
fcmovb
or
adc
cmc
adc
stos
inc
aaa
lock
add
pop
addl
or
out
movb
dec
lock
add
jle
inc
dec
test
cwtl
cmp
mov
adc
adc
inc
jmp
or
jb
das
idiv
xor
mov
sar
xchg
mov
add
push
lsl
cld
xor
cmp
inc
and
loopne
popa
jno
addl
dec
stos
stos
mov
fbstp
sub
cmp
notb
and
add
popf
jl
adc
dec
or
cmp
mov
sub
rcrb
test
or
and
mov
cld
in
mov
xchg
out
inc
and
orl
imul
aad
sbb
scas
cmpsl
mov
jmp
cmpsl
nop
inc
scas
inc
lret
je
loope
pop
xor
sahf
or
xlat
xchg
shl
mov
ja
bound
sub
aaa
ret
xor
lock
jno
aas
and
add
pop
inc
push
add
xchg
lods
push
xchg
mov
inc
add
mov
mov
test
aas
xchg
and
sbb
ja
shr
cmp
decb
adc
dec
mov
or
adc
push
push
call
pop
add
rorl
mov
pop
xor
lret
insb
dec
and
loopne
lods
jb
add
rclb
jae
and
or
add
fcompl
mov
add
add
mov
mov
in
and
adc
add
out
or
ds
mov
subb
lds
mov
xlat
jl
or
cli
clc
fimull
push
push
ljmp
ret
mov
nop
stos
shl
add
inc
mov
jecxz
or
push
add
mov
hlt
out
xor
xchg
fidivrl
add
dec
rcrb
jmp
dec
add
add
xlat
adc
cmp
sub
jnp
adc
mov
pop
scas
dec
insb
add
test
sahf
out
shr
arpl
add
adc
insl
or
or
adc
stos
test
nop
push
into
lcall
loope
push
xchg
int
or
mov
sbb
clc
mov
pop
jp
in
jns
and
hlt
scas
inc
sbb
add
mov
cltd
syscall
sub
mov
push
add
ret
add
sbb
jmp
xchg
mov
add
subl
add
mov
mov
add
jns
inc
cmp
mov
pop
mov
push
adc
movb
jne
popf
xchg
sbb
cld
add
jb
ss
and
ds
jmp
stc
nop
and
arpl
and
xorl
add
or
inc
add
sbbb
add
push
je
and
sahf
aaa
sub
rcrl
cmp
jae
andb
and
sbb
xor
pop
outsl
adc
push
adc
sti
fs
daa
sbb
aas
lret
shll
xor
hlt
or
adc
or
pop
icebp
or
scas
xchg
pop
push
add
pop
cmp
push
in
add
xor
cmp
fcomps
mov
xchg
xchg
shrl
es
fucomip
cwtl
push
adc
testl
repz
mov
and
out
aam
rcrb
add
jne
call
add
sbb
repz
add
inc
outsb
inc
jne
jo
je
fisubrl
dec
imul
adc
or
or
stos
pop
mov
lea
add
inc
call
push
popa
mov
mov
or
cmp
add
lock
inc
test
je
es
loopne
mov
mov
add
data16
add
ret
aam
push
xchg
movsl
push
add
adc
cs
dec
nop
pop
sbb
in
shlb
xor
push
push
pop
inc
add
inc
insl
pop
je
dec
movntps
js
lods
pop
mov
add
sub
push
add
int
call
adc
or
jl
jmp
lods
pop
mov
mov
xchg
add
xor
cmp
mov
adc
add
adc
inc
leave
sub
push
mov
mov
push
lods
inc
dec
add
cmp
testb
or
push
mov
jne
clc
sbb
loope
cld
and
and
insb
loopne
add
imul
pop
test
adc
mov
add
sub
cmpsl
add
push
in
inc
dec
std
xchg
ljmp
movsl
dec
into
or
or
pusha
hlt
mov
fdiv
faddl
test
mov
shll
out
add
jg
push
cld
cmpsb
push
add
pop
pop
dec
lret
stos
repz
scas
int3
and
rolb
movsb
stos
test
jp
or
pop
stc
fdivs
out
and
xchg
ret
inc
add
mov
jge
in
fnstsw
or
iret
push
mov
pusha
arpl
sahf
add
ss
inc
or
dec
add
not
out
roll
clc
in
repz
jnp
cltd
add
icebp
into
push
add
jmp
cmpsl
add
mov
pushl
and
movl
movsl
push
jl
aam
je
mov
imul
adc
jge
mov
xor
push
sbb
jmp
mov
cltd
rcrb
sbb
adcb
clc
in
sub
jg
xadd
pop
add
push
sbb
out
les
inc
mov
push
push
cmp
sahf
xchg
mov
add
leave
adc
movsl
push
sbb
or
inc
mov
add
repnz
jbe
or
pusha
out
jnp
adc
add
mov
icebp
pop
jmp
adc
add
lods
adc
push
out
rorb
add
jno
or
gs
mov
add
push
and
add
lock
add
or
cmp
cli
xor
inc
mov
je
or
mov
xchg
mov
mov
addr16
lahf
push
lcall
add
dec
sub
add
call
jb
cltd
adc
mov
and
add
dec
je
sarl
or
add
test
lock
add
push
rcrb
pop
test
jle
cmp
cmp
ja
xchg
mov
andl
jnp
addb
movsb
sub
decl
test
and
mov
in
pop
xor
fdivrs
lret
bound
outsb
adc
mov
add
jmp
movsb
cli
jbe
pop
test
sbb
js
mov
in
inc
decl
cltd
sbb
test
cmovp
jo
add
push
andl
adc
xchg
add
push
pop
mov
out
mov
sbb
mov
mov
push
push
add
mov
fcmovnbe
mov
pop
jns
pop
add
insb
rolb
clc
mov
ja
fidivrs
sub
jmp
loop
add
push
fldl
mov
add
pop
orl
sbb
xor
lcall
push
push
shl
jne
or
sub
xchg
add
dec
mov
ret
sub
mov
out
pop
or
add
mov
roll
adc
shrb
movsb
mov
add
push
popa
inc
subl
loopne
and
sbbb
mov
inc
mov
in
lret
add
nop
adc
dec
and
or
jmp
dec
xor
nop
push
aas
rcrl
mov
stos
and
shl
lds
mov
nop
sub
gs
cmpb
fcomps
mov
inc
jno
js
out
es
sbb
ret
pop
cmpb
mov
popf
inc
rclb
and
pop
add
ret
sub
cmp
ds
add
pop
dec
jmp
aas
mov
mov
adc
push
inc
int
inc
add
stos
sub
push
lds
inc
orl
add
movsb
adc
dec
fdivr
aam
and
pop
imul
add
dec
mov
push
lret
int
test
mov
mov
xor
sbb
xchg
cwtl
jbe
add
test
iret
or
aaa
jmp
dec
stos
loop
add
adc
cs
cmpsb
or
sbb
and
lcall
repnz
sub
add
jg
add
inc
mov
dec
xor
incl
fwait
lds
mov
add
clc
loope
xchg
xor
mov
mov
xor
dec
repnz
mov
and
cltd
adc
push
inc
add
sbb
add
inc
jmp
add
add
or
and
dec
jge
rcrb
into
jne
out
popa
add
imul
andl
push
dec
add
jge
fdivs
mov
add
inc
es
sbb
lcall
dec
sbb
cmp
xchg
out
fwait
add
xchg
lock
lret
lods
mov
imul
inc
dec
cltd
in
pop
xchg
pop
adc
jnp
mov
pop
jg
jo
shrb
out
dec
mov
clc
xchg
push
rclb
or
scas
dec
loopne
jg
xor
je
scas
aas
push
lcall
xlat
sbb
movl
cs
jo
sbb
pop
or
push
in
adc
lret
jns
fcos
inc
add
sbb
pop
mov
addb
add
dec
jp
add
add
pop
sub
sti
aam
stos
cmp
aas
or
mov
sub
shl
push
cmp
stc
addr16
in
int3
sbb
and
cltd
out
lock
jl
add
mov
and
pusha
aad
jp
add
test
in
inc
add
inc
lock
std
jnp
loopne
mov
add
in
inc
in
push
addb
negl
fadd
loopne
and
jae
add
mov
dec
or
std
adc
mov
stos
inc
add
jecxz
leave
in
sbb
movsl
lock
push
add
pop
mov
mov
adc
add
test
jb
les
mov
or
add
xchg
add
ds
aaa
add
imul
xchg
mov
add
mov
stos
sbb
cli
adc
adc
icebp
rorb
add
push
lahf
clc
jmp
ja
popf
in
or
shr
cmp
add
rorb
popa
les
add
mov
or
mov
test
jmp
add
push
lcall
movsl
das
and
gs
or
in
mov
adc
popf
dec
leave
std
jp
cwtl
add
hlt
pop
mov
rep
jnp
xchg
dec
enter
and
fisttpll
jb
pop
add
fldcw
std
es
jnp
add
inc
lock
add
mov
push
push
add
shl
and
xchg
inc
jne
movl
adc
add
imul
je
push
and
sub
sbb
add
dec
sub
icebp
jg
nop
inc
sbb
pop
xchg
sarb
das
pop
sbb
loop
adc
nop
and
dec
add
jge
xor
cmp
outsb
dec
pop
movl
loopne
mov
xor
add
jns
pushf
cltd
sub
test
rorb
sub
pop
jg
adc
jmp
fildl
nop
add
jns
movl
loope
xor
jg
add
add
decl
int
jns
xor
adc
outsb
fs
dec
test
adc
push
inc
dec
add
test
imull
or
cmpl
pusha
mov
mov
pop
adc
lret
add
or
fsubrl
js
xor
mov
sahf
pop
lahf
sbb
sbb
jo
in
cli
cmp
adc
mov
push
fcoms
sbb
mov
push
add
pop
sub
or
add
add
mov
ficoml
or
pop
mov
push
inc
xchg
into
mov
mov
call
jmp
lock
or
cmp
testl
jmp
sbb
cmp
stos
movsb
pop
push
faddl
out
lar
xchg
add
stos
shl
add
hlt
test
cmp
add
cmp
js
xor
jbe
and
mov
add
sbb
push
out
adc
xor
xchg
adc
and
test
pusha
test
cltd
jge
add
dec
jp
scas
inc
movsb
sbbl
push
xchg
bound
es
sub
and
cmp
inc
mov
mov
jg
jp
jo
testb
mov
cwtl
sbb
add
subl
inc
jbe
mov
cmpsl
xchg
sahf
mov
push
lret
xchg
stc
mov
in
push
lret
cmc
xchg
rcll
outsb
add
test
or
in
aas
mov
xchg
jae
mov
pop
pop
in
incb
cmpsl
jbe
ljmp
subl
add
or
pushf
cmp
lods
add
sub
mov
in
mov
test
aam
aas
or
dec
in
cmp
sub
in
addl
dec
dec
in
sub
add
dec
and
pushf
cs
addl
fsubrs
daa
je
add
adc
loope
clc
test
add
mov
lds
or
adc
adc
leave
orl
and
jmp
loope
and
xchg
add
add
into
andl
add
or
or
stos
push
add
addl
xchg
xchg
inc
or
xorl
out
add
loop
mov
bound
cmp
adc
mov
xchg
push
xchg
icebp
add
push
pop
ret
xchg
repz
cmp
adc
dec
add
outsb
fsubrs
repnz
dec
add
and
roll
push
push
mov
ljmp
lea
or
fs
jmp
pop
sub
aas
lock
add
add
ja
jae
lea
shrb
add
push
mov
ret
push
stos
mov
pop
pusha
mov
or
xlat
add
pop
jns
std
scas
jp
dec
mov
add
cld
sldt
jmp
jl
push
popf
pop
inc
sbb
loopne
or
cwtl
repz
sbb
push
clc
imul
pop
das
dec
gs
popf
pusha
test
add
xor
add
cli
daa
jmp
in
clc
movsl
add
jo
add
je
shrl
addl
or
pusha
repnz
imul
loopne
aad
popf
sbb
ljmp
incb
adc
nop
lea
push
and
push
fldcw
cmp
add
mov
push
cmpsb
sbb
pop
lock
dec
scas
fcmovb
ficomps
addl
inc
push
mov
lea
push
jns
add
mov
mov
das
push
and
ret
adc
xchg
roll
clc
xor
test
push
cmc
xor
or
incb
mov
add
jge
sub
aaa
adc
or
jmp
stc
pop
aas
cmp
push
or
sbb
pushf
push
add
push
aad
cmp
push
xchg
push
mov
push
test
push
add
pushf
jmp
dec
mov
mov
jo
in
hlt
push
sbb
pushf
in
and
jmp
test
add
push
lea
pop
fcmove
add
xor
pop
add
fs
jle
test
push
notl
stc
lods
and
pop
lea
cmp
mov
sbb
call
xchg
outsl
xchg
or
mov
testb
add
jmp
mov
jp
inc
add
jmp
rolb
xchg
leave
adc
xor
fwait
and
out
mov
cmp
ret
sub
add
aas
hlt
stos
lahf
jge
xor
imul
add
jb
add
lea
jno
cli
mov
inc
sub
or
or
push
xor
testb
add
push
fwait
mov
pop
dec
outsb
add
push
dec
scas
add
jne
mov
mov
sbb
dec
jns
xchg
push
out
dec
shl
in
fmuls
loopne
mov
std
enter
adc
clc
fucomip
add
movsb
or
faddl
repnz
hlt
xchg
dec
mov
das
mov
ret
xchg
test
sbb
repnz
clc
inc
add
jns
or
cs
loopne,pt
sbb
xchg
add
adc
xor
mov
mov
xor
imul
xorb
sub
jmp
pop
pop
dec
add
inc
arpl
scas
rclb
sbb
mov
adcb
sbb
add
mov
testl
dec
cli
dec
mov
mov
loope
hlt
add
jno
dec
jp
inc
loopne
rclb
test
or
jo
dec
stos
dec
add
and
sahf
lods
sbb
jmp
mov
dec
pop
cmp
add
push
jle
decl
imul
ss
jo
fwait
mov
pop
and
push
add
mov
pop
dec
and
mov
outsb
add
pop
jne
sti
pusha
lods
pop
add
jl
nop
mov
mov
jns
mov
pop
lahf
addr16
nop
or
inc
dec
aad
fcoms
add
mov
divl
pop
add
fs
cmp
mov
adc
fsincos
sub
sub
and
test
mov
mov
ds
mov
xchg
pusha
dec
add
xchg
xchg
add
ljmp
test
pop
push
mov
andb
add
ja
inc
mov
fiadds
cmpsb
dec
pusha
lods
std
arpl
movsl
adc
or
int
stos
lret
aam
ret
add
mov
jp
incl
and
ja
jb
add
into
out
rcrb
test
push
add
dec
rol
aas
pop
mov
into
xchg
xchg
lock
in
push
add
adc
nop
cmp
add
int3
inc
jo
inc
xchg
push
push
and
adc
inc
push
out
adc
adc
mov
mov
pop
movsb
enter
xor
mov
add
mov
addb
cmp
add
add
xor
cwtl
es
mov
movsl
nop
clc
rorb
in
add
incb
mov
movsl
inc
add
add
movzwl
sarl
add
leave
das
clc
push
add
leave
pusha
dec
and
shll
add
rcrl
stos
paddq
iret
mov
jmp
or
add
dec
jne
clc
push
test
add
scas
xor
add
jns
mov
or
mov
jns
add
xchg
sbb
mov
add
mov
ret
inc
add
scas
int3
add
adc
repnz
push
jl
test
xor
mov
fidivl
inc
pop
into
cwtl
dec
cmpl
mov
and
cld
add
add
inc
adc
nop
jmp
push
jg
add
add
sbb
add
call
add
push
xchg
sbb
loop
xlat
cmp
cmp
sbb
xor
add
subl
js
aas
or
dec
xor
andb
mov
push
mov
inc
loope
shrl
jns
mov
out
call
sbb
std
mov
sub
lock
and
or
ss
notb
nop
into
adc
les
mov
mov
adc
rcl
mov
imul
and
shrb
sub
imul
dec
iret
jge
psubw
mov
into
cmpl
xchg
sbb
pop
push
pop
add
jle
add
xor
xor
mov
dec
lock
arpl
xchg
lods
xorl
or
mov
adc
sbb
jmp
leave
call
mov
mov
push
pop
int
pop
pusha
mov
hlt
out
jno
add
adc
fldl
push
mov
cmp
push
ja
shlb
in
adc
mov
push
pop
inc
dec
pop
int3
rorb
add
xchg
inc
mov
push
add
xor
mov
xchg
or
scas
dec
cmp
adcl
fs
add
repz
nopl
rolb
pop
mov
add
pop
xlat
inc
add
sub
decb
add
cmp
stos
sub
inc
icebp
adc
pop
push
rcll
pop
cmpsl
add
inc
incl
push
daa
mov
je
xchg
or
scas
add
inc
or
push
sub
addl
jg
add
rcrl
mov
or
stos
in
inc
mov
jne
cmp
in
cpuid
mov
daa
push
adc
inc
mov
or
add
xchg
adc
ret
cmp
sahf
loop
pop
aas
pop
or
push
fidivrs
add
adc
mov
cmp
in
ds
andb
push
mov
test
adc
jg
lahf
and
movsl
mov
or
or
fildl
scas
push
mov
cli
sub
push
xor
mov
cmpl
mov
jb
xchg
out
or
xchg
add
shll
add
imul
loopne
add
xor
push
lret
push
lahf
test
aaa
sarb
scas
sbb
cltd
adc
push
add
aam
movsl
add
ret
lds
xor
push
mov
adc
pop
nop
sti
sbb
inc
mov
pop
mov
ljmp
push
movl
mov
rolb
push
ror
mov
fs
mov
pop
in
imul
les
jo
mov
enter
rolb
cmp
cmp
sub
xor
stc
jmp
inc
cmp
jae
sbb
pop
add
lahf
jb
adcb
jle
adc
mov
pop
xchg
sub
insb
cmp
add
or
add
jg
sbb
add
sub
js
test
cli
xchg
divl
nop
jo
mov
push
pop
mov
aas
and
jno
repnz
sub
add
dec
mov
je
test
mov
mov
bound
add
call
mov
cmp
jno
xchg
push
mov
add
cmc
mov
pop
fiaddl
push
repnz
push
hlt
rorb
xor
add
or
jae
add
pusha
outsb
jbe
dec
fwait
pop
roll
and
in
and
cli
lea
or
sbb
lock
lret
inc
add
mov
inc
ljmp
xlat
mov
mov
add
insl
dec
dec
dec
cmpsb
in
inc
xchg
add
add
or
add
mov
add
push
xchg
adc
and
and
add
cmpsl
xadd
sbb
mov
and
rorb
xor
mov
dec
test
or
push
jle
inc
rorb
int
add
dec
push
mov
mov
jns
sub
cwtl
test
mov
add
inc
cmp
jne
clc
sub
add
roll
out
xchg
ja
add
xchg
add
inc
mov
dec
js
loope
cwtl
jne
rclb
addl
fists
shl
sbb
mov
add
mov
scas
adc
test
push
rorb
cmp
pushf
or
cmpb
and
add
or
add
sub
jne
push
jge
out
xor
pop
fadds
hlt
and
and
add
imul
out
jbe
popa
insb
pop
fs
sub
add
loope
jb
xchg
addr16
imul
add
or
add
sub
and
clc
sub
aaa
repnz
adc
adc
add
daa
mov
mov
inc
inc
mov
mov
dec
rcrl
add
mov
jbe
add
mov
scas
in
pop
xchg
pop
adc
add
cwtl
faddl
clc
xchg
unpcklps
fs
add
cmp
mov
in
add
loopne
movsb
mov
sub
inc
sbb
add
or
adc
or
std
add
push
ret
xor
sbb
and
pushf
xchg
mov
inc
cwtl
shr
mulb
inc
dec
push
or
add
jl
jnp
stc
loope
dec
adcb
popa
outsb
arpl
insb
add
repz
imul
and
add
pop
mov
cmp
aas
push
xchg
add
cs
jb
adc
add
mov
cwtl
and
movups
push
add
cmp
push
call
xor
les
jo
pop
fistl
jg
je
popf
fsubrs
or
jmp
out
shl
add
add
dec
cmp
lock
cmp
addl
dec
add
push
adc
or
out
dec
sbb
inc
push
jmp
jnp
aaa
add
data16
in
icebp
add
dec
adc
pop
push
mov
addb
sub
ds
fnstsw
cltd
fisubl
sub
xor
cmp
and
push
popa
add
jl
push
add
das
xchg
fnstsw
pop
push
pop
je
mov
arpl
call
push
ja
addb
mov
adc
scas
movsl
cmp
inc
sub
pusha
and
sar
jns
adc
adc
push
out
pop
fisttpll
mov
cmp
cltd
out
add
out
push
add
fildll
sub
pop
inc
or
or
scas
cmp
out
sbb
sub
mov
adc
xchg
jg
test
push
lds
add
add
pop
adc
push
pop
call
rcrb
sbb
lcall
add
ret
das
add
inc
adc
nop
hlt
xchg
cld
add
pop
jnp
out
inc
mov
dec
lods
std
add
and
stos
nop
or
lock
outsb
andl
ret
cmpb
call
ljmp
and
inc
orb
sbb
je
inc
mov
and
jne
test
sub
or
lret
inc
push
addr16
push
cmp
pop
out
lods
nop
and
lahf
xchg
push
js
test
xorl
pop
mov
dec
les
sub
add
mov
dec
jb
dec
pop
inc
xchg
dec
xor
jae
xlat
jno
xor
mov
add
inc
stos
or
fiadds
inc
std
and
mov
pop
pop
mov
and
and
out
push
adc
sub
sbb
add
sub
sub
ror
sub
les
add
add
add
add
inc
loop
fdivp
in
sbb
mov
sbb
test
test
scas
push
mov
xchg
cltd
es
outsl
aas
add
jns
test
stos
std
inc
cmp
add
mov
xchg
cmp
push
subb
sbb
or
inc
lahf
add
iret
cs
mov
cmovne
mov
std
aam
add
adc
mov
test
ds
orl
inc
mov
dec
mov
pop
in
out
dec
rsm
sbb
out
int
lods
lock
add
mov
adc
nop
sbb
out
clc
dec
xchg
add
bound
out
addl
notb
imul
mov
pop
add
jge
jle
add
int
into
mov
inc
pop
fxam
or
cmc
cmpb
in
jmp
daa
mov
mov
xchg
sbb
push
jle
pop
shlb
jo
imul
outsb
dec
push
add
adc
add
iret
ljmp
out
cs
push
outsb
scas
fadd
jecxz
cmp
pop
icebp
dec
jb
xchg
popa
inc
subb
addl
into
push
xor
lods
mov
cmpsl
pop
jbe
push
test
inc
sbb
and
push
pop
jae
pop
push
jbe
pop
push
cld
clc
fcompl
fiadds
or
out
bswap
cmpsl
and
push
nop
daa
inc
inc
addb
add
mov
cmp
popf
in
out
ficomps
jne
and
pop
sbb
sub
jmp
cwtl
mov
mov
dec
push
push
push
pop
pop
xchg
lcall
ja
ljmp
andl
cmp
fmull
lock
push
inc
icebp
jnp
add
add
pop
sub
add
out
pusha
imul
jne
cmp
fcmovnu
dec
pop
add
jl
std
add
stos
movsl
add
jns
mov
dec
clc
pop
cmp
loopne
xor
mov
subb
hlt
cmp
mov
in
cmp
jmp
jo
add
ja
aam
mov
xor
ret
jmp
dec
mov
test
lret
mov
pop
inc
jns,pt
adc
jno
and
mov
pop
mov
mov
cwtl
xchg
aam
push
add
dec
dec
pusha
jo
push
in
loope
leave
pop
push
xchg
xorb
mov
pop
rolb
int3
add
mov
xor
lahf
add
adc
out
push
add
push
test
adc
mov
push
in
ljmp
rolb
and
push
add
inc
inc
inc
push
add
cwtl
add
js
faddl
pop
xor
pusha
pop
popa
jbe
pop
repz
mov
out
inc
cmp
es
inc
cmp
mov
cltd
mov
call
and
ljmp
pop
jge
sbb
ds
adc
add
test
add
jge
cwtl
xchg
test
dec
dec
pop
push
pop
add
in
mov
int3
cld
gs
mov
and
sub
roll
int
mov
add
xor
jecxz
pop
add
jno
mov
sbb
xchg
push
pop
cmp
add
out
loopne
outsb
loop
sbb
add
cmpsl
jmp
add
cmp
mov
add
inc
jle
mov
int3
add
pop
fcoml
add
out
arpl
cmp
stc
add
jmp
rolb
int
mov
in
and
test
add
pop
jmp
xor
lods
shrb
jle
push
cmp
cmp
shl
add
xchg
sbb
fcompp
bound
mov
mov
imul
loope
pusha
add
ror
pop
pop
add
or
add
in
iret
scas
mov
in
lods
hlt
aad
subb
add
push
rolb
lods
stos
add
push
jno
loope
jbe
adc
inc
mov
in
gs
or
push
test
mov
aad
mov
in
nop
dec
fsubl
ret
add
rol
xchg
xchg
sub
add
sub
call
fcmovu
jg
mov
mov
mov
xlat
adc
shl
sarl
les
orb
daa
in
add
aas
mov
imul
loop
test
pop
or
ret
add
dec
nop
push
mov
add
icebp
filds
jecxz
xchg
data16
movsb
mov
add
xor
mov
or
add
rcl
add
aad
fmuls
jecxz
cmp
add
push
dec
push
cmp
sti
jae
add
pusha
add
clc
fs
cld
lahf
adc
cmp
xchg
mov
fsubs
mov
sub
pmaxsw
and
jecxz
adc
in
or
int
add
xor
std
stos
scas
lret
push
push
xchg
add
repnz
add
leave
lret
andb
sub
mov
enter
mov
rcll
jo
lret
mov
popa
add
lea
and
add
fwait
adc
xchg
mov
mov
add
subl
enter
add
inc
lods
add
pop
stos
mov
and
pop
add
jge
cwtl
and
inc
ja
inc
jne
jae
call
inc
dec
pusha
mov
sub
cmp
add
dec
add
cmp
and
rclb
pop
add
jnp
sbb
add
xor
jne
sbb
adc
add
sbb
in
add
sub
jae
jge
cmp
sbbl
es
fsubs
push
add
push
popf
mov
fiadds
jecxz
sub
loope
nop
mov
mov
mov
jno
lcall
or
push
loop
mov
add
mov
push
push
ss
add
arpl
mov
shl
cmp
add
mov
mov
shlb
add
xchg
mov
xlat
dec
jbe
ja
mov
or
in
out
add
inc
jl
xchg
push
lahf
test
mov
sub
cmpsl
std
das
bound
xor
int
mov
add
dec
dec
dec
xchg
call
test
test
inc
pop
xchg
outsl
cmp
add
call
cmp
out
add
repnz
addr16
cltd
jnp
mov
mov
xor
add
movsb
and
cmpsl
sbb
fnstsw
idivb
pop
imulb
jae
add
fsubr
int3
sub
flds
add
adc
push
add
push
push
mov
xchg
push
loop
cwtl
test
xor
add
inc
push
mov
push
aaa
loopne
mov
dec
enter
add
popa
out
jo
ret
jne
stos
add
xchg
lock
shlb
add
fcmovu
or
mov
pushf
and
cmpsb
incl
xorl
loop
cwtl
sbbb
mov
jbe
fwait
mov
in
cmp
stos
scas
add
adc
cmp
aas
ljmp
jmp
hlt
add
or
xor
repnz
jns
adc
aas
scas
clc
add
fcompl
lcall
jecxz
popf
fildl
scas
lods
scas
inc
dec
dec
jne
add
movsl
movl
ror
orl
loopne
jge
loop
into
mov
mov
pushf
mov
out
xchg
jmp
mov
mov
push
add
movsb
adc
or
out
add
push
sub
inc
inc
dec
xor
inc
pushf
inc
add
cmp
out
loope
popf
mov
push
into
rcrb
adc
jno
in
dec
xchg
nop
xchg
rolb
int3
and
inc
jne
filds
add
andl
xchg
push
sbb
adc
aam
fstps
sub
add
add
lret
xchg
popa
xrelease
jo
cld
push
insb
pushf
add
vpmulhuw
push
add
push
in
insb
add
inc
stos
stos
or
aaa
add
jno
xchg
lea
dec
insl
dec
or
xchg
dec
je
and
jns
add
push
pop
mov
dec
mov
mov
pusha
add
lret
cmp
fdivrs
int3
pop
iret
filds
pushf
mov
or
push
mov
outsb
roll
popf
mov
cwtl
add
jne
mov
in
cld
or
rcr
lods
dec
xor
jmp
leave
rol
and
jnp
jp
add
jnp
loop
decb
add
lea
bound
cmpl
shlb
fldenv
xchg
pop
call
or
je
ljmp
into
push
lods
in
fbstp
jae
xchg
repnz
sub
push
cmpsl
pop
les
sub
js,pn
fiadds
loope
bound
repnz
push
fsubrs
popa
cmp
mov
lahf
int
jl
add
lcallw
jmp
out
mov
outsl
or
addl
popf
pop
push
pusha
ret
std
cld
jmp
das
jg
dec
dec
jnp
xchg
aas
adc
add
push
mov
lcall
add
js
cmpsl
cli
sbb
and
pop
dec
insb
iret
xor
adc
push
jg
xor
mov
jno
repz
adc
mov
cmp
xlat
add
fistpll
in
push
out
add
call
rcl
dec
test
add
and
lahf
jg
add
mov
xor
mov
ja
test
setnp
push
adc
sbb
push
stos
pop
inc
sub
movsb
and
xlat
mov
cmpsb
popf
roll
dec
sbb
outsb
xchg
stos
or
add
mov
aaa
scas
nop
in
add
pop
subl
lahf
add
xchg
jb
loop
aam
mov
mov
jge
out
sar
ljmp
mov
add
mov
add
es
mov
or
and
adc
add
sub
cmp
or
dec
push
loopne
fstps
nop
jae
or
jo
add
data16
pop
sbb
pop
orb
ss
fadds
sbb
addl
addr16
sbb
adc
add
and
dec
inc
sub
add
pop
push
or
jo
daa
push
rcl
dec
pop
dec
add
adcl
inc
or
xchg
icebp
mov
jmp
push
aam
unpckhps
sarb
clc
flds
loopne
arpl
add
shlb
pop
xor
sub
out
lds
xor
add
mov
mov
xor
xchg
cmp
add
rorb
add
fsubl
adc
xor
mov
pop
jno,pt
or
je
mov
mov
fldcw
movsb
fldl
xchg
scas
leave
add
inc
int3
dec
mov
push
mov
and
ret
add
sbb
call
jl
add
mov
dec
mov
cs
push
adc
mov
inc
push
adcl
push
stos
and
push
xor
push
push
jne
test
js
dec
sbb
mov
or
add
push
dec
dec
push
loope
add
sub
jmp
jle
out
lock
call
add
and
jb
fwait
push
out
add
js
add
scas
mov
faddl
pop
test
inc
loopne
int3
pop
dec
call
adc
xchg
leave
add
jb
pop
sbb
hlt
add
sbb
xchg
ja
mov
mov
add
lret
cld
xchg
call
dec
daa
clc
addb
push
mov
adc
push
fbld
fsubr
out
mov
int3
and
mov
into
jg
hlt
aas
add
lds
push
flds
imul
add
lret
mov
push
mov
std
push
imul
inc
add
arpl
popa
or
add
jp
mov
jge
push
inc
add
clc
or
add
or
add
je
dec
jne
ja
int3
or
inc
mov
sub
add
sbb
add
inc
sbbb
cmpb
push
pushf
add
push
and
roll
jns
add
jmp
xchg
and
cltd
rclb
add
mov
bound
stos
and
adc
xor
sbb
xchg
ljmp
dec
push
adc
add
add
pop
icebp
notb
sbb
push
and
dec
add
pop
xor
mul
es
insb
sbbb
cs
and
pop
roll
andb
or
inc
add
push
stc
les
aam
xor
leave
fisubs
lds
cs
test
jne
push
stc
sub
cmpsl
cmpl
adc
jnp
ljmp
scas
stc
cmp
pop
mov
cwtl
xchg
xor
jb
jo
out
out
cmp
jae
popa
jl
jmp
clc
fs
xchg
push
cld
jae
push
jmp
add
xchg
jno
add
sbb
sub
dec
jae
add
sub
sub
pop
cmpxchg
jns
push
xor
add
jecxz
xchg
aaa
insb
or
lret
add
test
push
mov
lea
aas
cmovno
push
mov
call
jnp
mov
cli
mov
or
xor
push
sbb
cmp
pcmpeqb
push
loopne
pop
mov
or
pop
xor
add
xchg
adc
mov
pop
sub
push
adc
into
push
rcr
inc
pusha
shrl
das
popf
add
xchg
pop
add
je
dec
clc
fsts
scas
or
xchg
inc
add
add
and
ss
pop
loope
pop
sbb
xor
add
push
add
cld
call
pop
int
fiadds
add
dec
stos
call
sub
pop
ret
orb
cmpb
loop
xchg
sbb
nop
insl
xchg
sbb
add
sbb
movsb
test
test
xor
addl
jns
sub
sbb
fs
cli
or
adc
es
dec
fbld
push
std
add
cmp
stc
xchg
orb
inc
in
add
mov
les
cmpsb
aaa
and
cli
ljmp
xor
xchg
adc
lea
mov
mov
popf
inc
xor
adc
push
scas
jl
mov
add
and
xchg
rorb
jne
jle
mov
mov
push
aam
in
xchg
fadds
push
imul
les
mov
hlt
in
add
fisttpl
aad
sub
and
pop
movsb
xchg
add
sbb
add
lret
xor
ss
push
push
ljmp
pop
icebp
mov
mov
imul
adc
in
xchg
add
push
xchg
test
shlb
pop
std
dec
fsubrs
sbb
sbb
shrb
sqrtps
es
inc
dec
adc
push
push
inc
cmpl
loopne
mov
sbb
sub
scas
mov
and
in
aas
add
faddl
add
pop
add
adc
andb
cs
lea
push
daa
xchg
popa
add
and
fwait
push
dec
pop
push
cli
dec
push
iret
push
stos
add
add
sti
int3
subb
xor
xor
add
cmp
movsl
and
add
jnp
nop
sbb
cmc
or
mov
fadds
sub
mov
pop
bound
xor
cwtl
ror
add
dec
dec
ljmp
jbe
mov
movsl
ret
cli
fiadds
std
jns
xchg
and
int3
addb
adc
mov
aad
xlat
lret
addl
adc
inc
dec
jne
ja
pop
xchg
add
pop
loop
sbb
nop
add
push
jo
pop
addr16
mov
xchg
sub
push
call
jmp
movsl
mov
add
xor
sbb
cmp
push
adcb
sub
cmp
mov
insb
sbb
dec
inc
lcall
and
les
add
add
pusha
addps
and
mov
sti
push
cld
fdivrl
jecxz
cmp
pushf
stc
outsb
cld
addb
pop
jle
add
lock
and
sub
add
pop
shr
lahf
xor
bnd
dec
push
dec
adc
sbb
fidivs
aad
sbb
dec
mov
add
incb
lret
sub
filds
pusha
insb
lea
mov
ja
jae
push
movsl
push
aas
mov
loopne
fadds
adc
pop
es
or
aad
pop
mov
aas
mov
inc
jge
add
shlb
add
sahf
sbb
add
sub
adc
jg
add
test
push
cmpsl
sti
mov
mov
ret
push
add
push
ljmp
test
and
or
mov
sub
lods
pop
movsl
paddd
nop
lret
jb
lea
out
add
push
sti
mov
popf
xchg
scas
adc
add
add
push
push
xchg
dec
orl
add
push
hlt
call
stc
or
int
xor
incb
rorb
or
scas
repnz
push
out
les
imul
mov
sbb
add
incl
sub
xchg
push
daa
rorb
decl
xchg
sbb
jmp
in
mov
mov
fsubl
or
jg
push
addr16
sbb
ret
outsl
arpl
xchg
lcall
out
test
test
cmpsb
pop
addl
xor
mov
jmp
and
sub
loop
or
adc
faddl
pop
lahf
cli
xor
push
and
add
adc
or
sub
cmp
xchg
stos
pop
test
add
ljmp
push
mov
popl
push
jbe
js
pusha
or
mov
jp
fdivrl
mov
add
push
and
test
sarb
mov
xlat
add
inc
lds
test
sbb
in
mull
add
adc
sub
push
shr
popa
or
mov
or
adcb
aam
jnp
out
scas
mov
jge
inc
add
jo
add
fistps
or
inc
lods
xor
add
jne
dec
inc
arpl
push
mov
loop
loope
or
push
dec
push
testb
sub
add
adcl
lock
add
aaa
dec
pop
xor
sub
sbb
adc
mov
and
adc
out
pop
fiadds
nop
push
icebp
mov
jge
in
pop
adc
push
cwtl
cmc
mov
sub
mov
xchg
pop
mov
add
aas
mov
push
mov
xchg
add
cwtl
popa
push
jns
jo
add
scas
dec
add
leave
popf
jb
loopne
push
std
lock
or
outsl
adc
lret
dec
fs
add
push
sbb
fmuls
xchg
dec
inc
cmp
sub
lret
push
movb
mov
pop
popa
mov
add
push
or
dec
movaps
rorb
inc
add
xor
mov
rcll
dec
push
call
loope
orl
adc
jl
sub
testb
sbb
and
push
bswap
pop
add
push
jnp
xor
jns
out
jle
mov
xchg
adc
cwtl
orl
pop
rcl
and
jo
add
pusha
adc
xor
jmp
loopne
push
ret
testb
cmpsl
or
pop
add
jecxz
cmp
std
push
pop
flds
repz
push
ja
xchg
add
imul
adc
or
jae
push
xor
pop
cld
and
enter
seto
pop
repnz
sbb
andb
mov
sub
push
add
dec
imul
je
decl
lods
jbe
add
dec
scas
pushf
mov
lahf
jmp
mov
lcall
dec
outsl
insl
lock
inc
add
jo
or
pusha
or
jae
mov
les
dec
inc
into
add
dec
mov
push
dec
fdivrl
add
data16
or
test
int
lock
in
in
add
mov
clc
jno
jo
mov
mov
add
inc
mov
fmull
xlat
leave
and
and
test
pop
scas
dec
nop
mov
adc
lret
andl
and
test
inc
out
loopne
push
adc
mov
add
pop
push
inc
dec
outsl
or
pop
fs
fnstenv
cmp
dec
lds
mov
dec
push
lahf
sti
addl
call
push
or
dec
add
lcall
add
push
sbb
call
sarb
subb
inc
mov
pusha
or
mov
movb
jbe
nop
jp
fcoms
and
out
cmp
fadds
psubd
loopne
mov
fsubrs
xchg
cld
add
inc
int3
xor
mov
adcb
cmpsl
adc
cmp
jge
hlt
ret
xchg
jle
sub
insb
addr16
sub
mov
pop
cmp
adc
cmp
jge
mov
stc
les
add
adc
add
add
cli
jae
mov
pop
outsb
add
push
mov
les
out
aas
dec
cmp
insl
rol
and
sbbb
mov
xchg
add
add
mov
rorb
aam
into
add
mov
imul
addr16
push
add
test
insb
ret
add
shl
xchg
cmp
add
sti
or
fwait
js
divb
or
add
int
mov
inc
idiv
push
inc
ja
add
xchg
lods
cmpl
je
push
jg
cmpsl
pop
mov
dec
mov
jmp
add
call
push
std
mov
push
push
push
outsl
les
sbb
inc
repz
cli
sbb
add
sub
add
add
stos
and
or
push
jg
or
movsl
andl
sbb
and
call
imul
test
pop
loope
sbb
add
insl
jecxz
push
loopne
cwtl
add
xor
mov
pop
add
jbe
pop
data16
sarb
mov
add
jl
fisttps
add
sub
inc
jne
add
lret
add
loopne
mov
call
adc
lea
cmp
ret
mov
xchg
dec
add
sub
push
fmul
imul
push
testb
mov
mov
je
xchg
mov
add
lock
andb
pop
je
sldt
int
and
inc
pop
aad
dec
out
rorb
or
mov
fildl
xor
sub
imul
inc
dec
sbb
test
or
rolb
xor
clc
inc
fnstenv
mov
add
fcoml
adc
orl
pusha
jo
add
shr
xchg
push
xor
add
cmpb
call
cmc
push
pusha
aad
mov
push
add
add
fs
add
shlb
push
and
xchg
dec
mov
push
addb
push
jp
jns
sub
adc
adc
adc
js
jo
add
jne
lahf
call
test
repnz
sub
je
cmp
dec
sbb
pop
addl
cs
push
jmp
xchg
clc
scas
pop
cmpsb
pop
lahf
add
stc
repz
xchg
xor
add
mov
out
add
mov
or
jae
sbb
xchg
das
adc
int3
push
subl
dec
add
adc
push
push
in
and
or
xchg
loope
bound
or
setno
mov
inc
adc
sbbl
je
dec
add
add
adc
sub
ja
test
ds
add
ficoml
jno
and
add
ds
sub
cmp
pop
adcl
jb
call
subb
je
lods
add
push
xchg
or
add
push
mov
push
xor
in
add
cmc
icebp
xor
mov
add
mov
mov
mov
cld
pop
add
xchg
jg
mov
fldl
xchg
pop
inc
push
andl
adc
pop
adc
jl
loop
in
lods
add
sub
and
sub
pop
lea
xchg
push
push
or
pop
punpcklbw
mov
add
dec
pop
adc
or
add
xor
ss
pop
in
cs
ja
or
aam
in
insl
jmp
scas
push
pusha
mov
cmpb
jb
bound
sub
iret
and
push
movsb
jmp
pusha
flds
push
insb
pop
push
imul
push
xor
dec
inc
repz
xchg
inc
xorb
outsb
nop
aad
mov
aaa
pop
mov
xor
and
and
adc
add
stc
movsb
mov
dec
mov
xchg
fsubr
int
add
jne
dec
lods
outsb
push
fiadds
adc
mov
enter
pop
adc
nop
xchg
inc
push
call
adc
mov
pop
sbb
xorb
xchg
pop
mov
add
jae
or
inc
jmp
lea
repz
lock
loopne
add
je
push
or
aad
add
and
cmp
adc
push
mov
adc
mov
ret
xor
mov
inc
pop
clc
fistl
add
movsl
loop
jns
xor
dec
pop
xchg
mov
and
add
jl
mov
ss
int
xchg
mov
ds
and
add
add
xchg
add
dec
mov
add
xchg
jno
or
fldz
xor
inc
js
ja
pop
push
pop
add
fstps
mov
test
ret
pusha
clc
sub
cmc
call
cli
jmp
adc
pop
sbb
arpl
ja
mov
dec
fucom
cltd
subb
mov
insb
cwtl
andl
adc
xchg
jns
or
sbb
inc
pop
inc
pop
cmp
test
mov
in
xchg
add
ret
inc
jge
ljmp
mov
push
sub
dec
and
sub
fdivrs
cmovnp
aam
xor
shll
les
aas
enter
xor
mov
mov
out
adc
lahf
pusha
xor
adcl
imul
sbb
sti
hlt
xor
add
inc
push
mov
pop
add
pop
cwtl
push
shr
dec
jbe
test
imul
gs
sbb
cmp
xor
dec
call
xchg
stos
inc
xchg
sbb
cmp
push
pop
xchg
sub
movsl
mov
add
or
push
lds
jo
outsl
mov
je
mov
js
mov
adc
cltd
sub
mov
cmp
call
push
push
push
push
push
push
jbe
add
jle
adc
sbb
push
xor
add
imul
xor
mov
pop
add
xchg
cmpl
or
sbb
jp
ffree
xchg
cmc
in
nop
add
xchg
imul
push
and
xchg
cmp
add
cmp
dec
js
and
mov
mov
out
sub
dec
and
sub
adc
mov
or
jle
add
sub
push
mov
sbb
push
adc
js
mov
add
or
roll
pop
xchg
movsb
ss
mov
add
daa
jae
sbb
xor
fcom
cmc
and
push
push
in
lret
scas
add
enter
in
insb
aam
mov
xchg
jg
or
test
dec
add
loopne
push
pop
sub
pop
adc
mov
xadd
cli
orb
mov
push
or
add
xor
in
orl
repnz
push
cmp
add
jo
aam
out
sub
aad
lock
pop
test
push
js
cld
adc
pop
dec
mov
test
inc
test
add
and
nop
mov
mov
and
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
mov
cmp
ds
cli
les
xchg
sub
mov
adc
xchg
push
shl
mov
cmovnp
add
stos
add
pop
pop
pop
sub
pop
out
add
sbb
mov
out
push
call
add
sti
shl
lea
cmp
jmp
lods
test
jle
leave
push
xor
lods
jecxz
add
jo
cs
iret
loopne
mov
add
mov
lret
push
xor
inc
add
adc
test
inc
or
insb
dec
xor
xor
sub
xor
negb
xor
mov
mov
loop
mov
flds
mov
std
nop
cmp
mov
xchg
xchg
push
jle
cmpsl
xchg
sbb
xchg
jne
push
jb
push
inc
xchg
and
outsb
adcb
dec
les
add
sub
out
or
push
add
jl
add
test
pop
mov
icebp
out
or
and
pop
sahf
mov
xchg
mov
js
hlt
push
cmp
fdiv
add
push
test
sete
add
aam
stc
je
and
out
push
dec
add
and
jp
jle
add
les
pop
sub
add
shrl
popf
fs
cmp
dec
and
popa
push
pop
jp
mov
mull
jbe
add
add
sbb
mov
adc
push
unpcklps
sub
and
inc
add
enter
sub
xchg
inc
sbb
sti
add
pop
or
xchg
sbb
and
jb
adc
mov
push
and
outsl
and
xchg
test
cli
mov
push
or
and
pop
loopne
test
push
inc
dec
enter
dec
mov
dec
js
cmp
imul
and
inc
sbb
bound
push
add
divb
leave
push
lock
add
lea
xchg
mov
stc
aas
scas
shufps
pusha
mov
add
pop
mov
add
jae
adc
sub
add
sarb
add
push
or
inc
js
add
test
shrl
cmp
push
pop
sbb
sldt
xor
mov
cmc
test
add
mulb
test
pusha
add
scas
fcomps
ss
cmp
mull
mov
inc
or
stc
add
and
add
lcall
sbb
repnz
dec
sbb
hlt
sbb
add
inc
xorl
jno
pop
pop
das
rorb
jb
jg
push
add
jnp
mov
jl
jg
je
sti
int
jle
push
mov
dec
fcom
das
fiadds
cmp
add
imul
repnz
ja
adc
jmp
jle
and
push
mov
dec
add
xchg
test
push
mov
ja
or
xchg
adc
and
pop
push
inc
pop
xchg
inc
mov
inc
decb
add
adc
add
mov
fisubl
sub
push
xchg
stos
sub
mov
pop
repnz
or
xor
push
lea
adc
pop
add
and
cltd
andb
sub
and
adc
out
rorb
dec
add
imul
insl
test
aas
dec
je
and
adc
and
movl
xor
inc
mov
push
or
outsl
insl
jecxz
push
xor
jae
cmpsl
mov
or
jo
or
jns
mov
out
add
xchg
loopne
mov
cltd
xor
push
pop
pop
cmpl
mov
adc
mov
aam
repz
sub
and
mov
mov
mov
lret
imul
or
test
std
and
jb
insb
and
add
loop
and
addr16
loope
jo
ja
add
push
xor
popa
jno
or
pop
sbb
inc
insl
jbe
imul
inc
cwtl
and
outsb
dec
add
ja
jno
jo
lock
add
and
mov
rolb
sub
jbe
xor
inc
add
jo
arpl
jne
mov
es
lret
xor
mov
imul
lock
add
stos
test
stos
pusha
sbb
cwtl
in
xor
sbb
sbb
inc
add
cmp
pop
sbbb
mov
mov
int3
sub
pushf
lock
adc
mov
jae
mov
sbb
mov
and
push
sti
js
lahf
xchg
pop
stc
inc
push
icebp
add
and
loope
cs
and
ret
shrl
enter
ljmp
add
jae
testb
add
aad
sbb
rclb
adc
mov
sarb
lret
pop
push
push
add
push
push
bsr
adc
sbb
scas
and
imul
add
push
shll
cwtl
pop
xor
cli
or
add
movswl
adc
jl
add
jno
addb
add
xor
pop
and
add
movsl
cmp
sbb
cmp
add
je
pushl
ret
sbb
inc
dec
cmp
inc
or
cmp
clc
ja
xchg
or
jne
xchg
add
nop
stos
and
cwtl
hlt
pop
insl
add
inc
sub
mov
pop
or
movsb
mov
sbb
lock
xchg
adc
inc
add
hlt
sbb
and
hlt
push
and
inc
add
adc
pop
sub
adcb
out
nop
adc
mov
in
fdivrl
push
subl
sbb
jne
cmp
sbbb
lods
pop
or
push
cmp
fwait
ret
cmp
inc
mov
mov
cmpsb
or
jb
sbb
add
test
pop
mulps
clc
rolb
adc
shlb
dec
sbb
inc
out
and
cmp
inc
add
xchg
imul
pusha
pop
mov
mov
in
addb
sub
mov
sub
iret
xchg
shrb
sbb
outsl
cmp
jne
add
movb
icebp
cmpsl
shll
add
or
add
cmp
scas
sub
jne
add
push
push
lea
mov
jg
loopne
incb
mov
stc
push
add
add
cs
ja
leave
adc
loopne
testl
pop
xor
ret
add
dec
aam
dec
loop
and
add
mov
xor
jne
pop
xor
subl
shl
pop
adc
cmp
ret
mov
pop
fnstcw
cwtl
imul
add
mov
negb
ds
lock
sub
je
repz
in
inc
jle
sar
mov
incb
or
test
add
jl
dec
and
add
adc
or
add
popf
loope
shrl
add
movsl
gs
sub
sub
iret
mov
sbb
or
cmpsb
loopne
call
je
add
mov
xorl
xor
xor
xor
add
loop,pt
pop
xor
sbb
and
add
jmp
js
nop
das
add
movsl
sbb
xchg
pusha
and
adc
ja
add
and
and
roll
in
test
stos
insb
stc
insl
dec
xor
add
mov
xchg
add
fbstp
add
rorl
push
adc
add
mov
cmp
decb
mov
xchg
push
add
ljmp
add
sub
in
mov
push
pop
sub
mov
add
push
enter
fsubr
jo
jp
inc
xchg
and
ss
cs
aaa
mov
push
add
jne
cwtl
xor
loopne
arpl
dec
mov
fcoml
add
fadds
in
cli
fdivrp
mov
jecxz
push
mov
jp
adc
jbe
pusha
cmc
sbb
les
adc
mov
add
mov
cmpsl
mov
insl
clc
ljmp
addr16
movsb
and
add
or
xor
dec
cld
mov
cwtl
nop
push
fisubs
test
loopne
add
push
mov
pop
jmp
les
popa
add
inc
imul
gs
sbb
jne
faddl
xchg
or
jb
call
cmp
add
decb
push
xlat
or
scas
and
push
loop
fnstcw
sbb
add
xorb
repnz
add
dec
insl
insb
imulb
inc
dec
popf
jge
imul
xor
fists
sub
push
mov
outsl
test
add
cmpsb
rorb
jne
add
cmpsl
lods
clc
mov
xor
in
fst
cld
popf
add
sbb
inc
mov
repz
push
add
xchg
mov
cmp
js
or
add
das
movsb
adc
add
nop
aas
call
and
imul
adc
fstpl
adc
loope
sbb
adc
sub
sub
jp
xchg
dec
loopne
cmpsl
adc
jo
mov
hlt
push
sarl
fidivl
popw
jns
inc
mov
nop
mov
shr
adc
gs
mov
cwtl
or
lock
cmpsb
ds
rclb
fs
and
cltd
xchg
add
mov
and
push
xchg
push
enter
jb
inc
cmp
cmp
pop
cmp
repnz
sti
mov
xor
out
scas
push
loopne
add
mov
rolb
mov
jge
imul
sbb
adc
mov
xchg
faddp
sub
mov
shll
jmp
adc
mov
sub
jne
cmc
add
into
pop
xor
add
lret
orl
adc
inc
jg
xor
dec
aaa
jne
fimull
les
xor
outsb
hlt
inc
pop
pop
sar
push
lock
push
push
add
and
lret
xor
inc
mov
sub
jb
xchg
xchg
scas
jecxz
aas
in
sbb
or
es
lods
cmpsb
sbb
mov
adc
mov
cmp
push
fsubs
sub
or
mov
cld
imul
dec
out
mov
inc
push
adc
push
mov
aad
add
nopl
mov
sbb
pop
cld
mov
fbstp
je
pop
adc
and
push
sbb
es
mov
add
jnp
jo
xchg
add
fs
sti
jmp
loopne
fld1
pop
add
jne
cmpsl
mov
add
cli
subl
add
ljmp
add
pop
sub
enter
out
orb
add
ljmp
add
xlat
mov
movsb
add
dec
inc
and
enter
sbb
and
jns
add
push
xlat
rorl
add
inc
pop
rol
pusha
out
cmp
add
xchg
xchg
and
call
xchg
fstpl
xchg
enter
in
mov
push
subb
jp
enter
inc
pop
and
adc
lock
adc
push
fidivrl
xchg
test
ret
add
jmp
and
pop
xor
rorb
and
add
lock
lahf
pusha
je
sarl
lea
mov
adc
lds
sbb
movsb
fistpll
sar
push
mov
jge
pushf
xor
call
dec
gs
add
and
arpl
jo
testl
addr16
lods
shlb
push
inc
mov
add
sbb
cmpb
pop
call
mov
adc
or
sahf
dec
and
cltd
add
jne
dec
fbld
sub
out
add
mov
xlat
jno
dec
jp
add
mov
add
sub
sub
rorb
inc
mov
scas
xor
add
cmpb
je
mov
pop
adc
call
xchg
in
sbbb
push
stos
ljmp
xchg
aaa
mov
dec
sbb
or
add
filds
test
aas
jmp
xchg
out
cmp
cmpsl
gs
test
imul
jne
push
push
add
push
push
or
sbb
addl
mov
ret
sbb
sbb
inc
mov
js
or
or
addb
sub
iret
push
loopne
sbb
enter
lods
call
into
add
and
movsb
test
mov
sbb
hlt
out
sub
inc
dec
inc
push
dec
dec
add
push
jae
pop
cs
imul
cmp
mov
dec
mov
test
inc
pushf
scas
ret
xchg
jge
les
or
cmp
mov
xor
mov
loop
nop
dec
cmp
add
incl
mov
sbb
mov
imul
push
fildl
mov
pushf
or
jo
mov
jp
stos
and
cmpb
push
jns
mov
sub
lea
fdivrl
add
push
dec
jnp
mov
cmp
sub
cmc
mov
jl
dec
and
add
cmp
fsubl
or
bound
add
push
addl
add
lret
call
pop
add
rorb
jbe
add
orl
add
adc
xchg
xchg
cli
jne
and
mov
stos
lock
mov
pop
in
or
pop
push
sbb
jns
and
mov
repz
roll
pop
and
mov
or
cmova
ss
inc
stos
test
das
lret
aad
add
fcoms
push
adc
enter
aas
pop
and
sti
hlt
sub
mov
xlat
add
xchg
sub
adc
sub
push
js
stc
push
in
imul
movb
xchg
fmuls
add
dec
push
dec
sub
cmp
dec
call
data16
outsl
xor
adc
addr16
std
fldenv
add
xchg
test
cmp
xchg
int
andb
in
dec
add
or
cmp
cmp
mov
fiaddl
sub
shlb
iret
hlt
mov
mov
lds
mov
mov
jae
pop
shlb
add
xchg
jnp
sub
imul
dec
add
rolb
lret
xor
add
scas
pop
xchg
rcll
fadds
mov
add
or
pop
add
add
mov
push
pop
in
mov
dec
adc
lcall
cli
outsl
jo
sbb
push
adc
je
xchg
xor
ficoml
pop
xchg
add
jne
mov
insl
mov
mov
scas
cmp
inc
js
add
lods
aaa
add
jb
dec
jne
jle
add
clc
and
dec
movsb
add
sarl
adc
cmpl
outsl
sub
sub
imul
jb
add
cli
stc
ljmp
add
lea
and
add
popl
push
pop
mov
sbb
in
dec
movsb
push
xchg
mov
add
and
dec
nop
add
xor
les
cmpsb
aaa
loopne
and
hlt
mov
mov
or
add
fcomip
inc
cld
push
sub
daa
dec
adc
inc
mov
mov
jge
enter
pushf
add
add
lea
push
mov
dec
push
dec
add
fs
mov
test
mov
inc
inc
mov
dec
pushf
adc
sub
sbb
adc
hlt
addb
and
jmp
shlb
push
mov
sbb
and
nop
ljmp
mov
mov
push
add
and
xchg
inc
popf
add
test
call
lds
idivb
punpckhwd
xchg
and
movsb
out
jbe
dec
pop
iret
cld
and
add
and
movsb
mov
fs
notb
add
push
add
cmp
pop
mov
mov
enter
dec
jp
std
sahf
lock
xchg
test
cmpsl
add
inc
sub
adc
add
or
clc
add
jle
or
inc
mov
sub
pop
mov
shr
cmc
inc
and
add
adc
mov
testb
cmp
stos
les
lahf
mov
idivl
inc
fbstp
flds
stc
sub
mov
add
and
inc
push
inc
adc
push
pop
jl
jecxz
pop
enter
cmp
mov
and
outsb
and
data16
insl
andb
fs
xchg
clc
pop
dec
push
push
xchg
rorb
and
nop
mov
nop
cmpb
repnz
dec
aas
add
scas
orl
add
sbb
add
imul
sbbl
flds
adc
mov
mov
sbb
les
enter
int3
add
rorb
fs
fcoms
adc
and
add
add
clc
xor
ds
mov
mov
hlt
inc
add
inc
cs
cwtl
sub
jne
imul
pop
shl
dec
or
add
mov
imul
dec
or
add
fcmovbe
adc
and
add
jmp
nop
add
adc
push
push
call
mov
add
pop
addl
outsb
add
jne
sbb
mov
fwait
iret
dec
ss
pop
bound
and
add
push
mov
hlt
cld
inc
pop
insl
jge
loopne
xor
jne
adc
adc
mov
out
mov
add
movsl
inc
push
push
jne
insl
add
jbe
dec
mov
fsubrs
or
adc
add
inc
imul
cltd
add
mov
add
xchg
pop
in
add
sub
add
mov
mov
push
outsl
adcb
mov
and
mov
mov
add
inc
inc
in
push
push
and
mov
dec
add
xchg
add
add
lods
adc
add
sub
imul
dec
sub
mov
test
test
sub
test
pop
xor
push
inc
push
rolb
sub
cli
sub
movsb
push
pop
pop
mov
inc
sbb
push
fmul
shl
jg
add
xchg
or
push
and
mov
add
push
mov
xchg
sahf
push
mov
xor
call
test
fmuls
cs
xor
mov
add
test
mov
add
push
pushf
aas
daa
add
sbb
or
movsb
or
mov
call
mov
pusha
sbb
mov
mov
fwait
and
inc
les
icebp
and
or
mov
push
sub
sbb
repz
xchg
stos
out
into
cld
cwtl
add
pop
nop
sub
sub
add
xor
stos
cmp
adc
dec
adc
test
imul
mov
jb
fcoms
jo
jno
push
dec
cld
popf
loop
dec
mov
add
pushf
mov
jb
cmp
lods
clc
pusha
pop
jae
out
inc
movsl
xor
js
and
jns
nop
pop
rcrb
jl
pop
pop
inc
in
add
add
test
mov
dec
inc
add
add
adc
jle
adc
sub
lods
dec
push
push
mov
add
into
inc
push
add
subb
adcl
add
sti
mov
js
testb
ljmp
add
fwait
shrb
cs
and
add
sbb
xchg
aad
and
xchg
fsubr
stc
mov
dec
cmp
mov
aad
mov
test
dec
and
add
out
sub
cmp
push
pop
adcb
xor
ja
jl
aas
daa
and
imul
inc
push
jo
insb
orb
add
in
sub
jl
jmp
dec
sbb
cmp
jg
sub
push
orb
mov
hlt
or
ds
sub
cmp
adc
test
mov
test
jmp
xchg
jle
adcb
mov
mov
in
dec
and
cld
hlt
enter
imul
mov
dec
or
sub
jno
and
pop
lret
sub
sub
add
adc
inc
add
mov
loop
rolb
cmp
sub
ljmp
sub
inc
jecxz
mov
cmp
orb
insw
sub
sbb
jecxz
push
les
inc
loopne
outsb
push
and
gs
cmp
bound
jnp
jge
sbb
sub
add
push
mov
push
jecxz
insb
and
push
dec
mov
sahf
sub
cmpsb
out
jns
incb
jmp
push
fidivrs
test
mov
out
xchg
lock
or
leave
jge
or
ja
sbb
cwtl
add
push
push
shll
out
add
jbe
pop
jne
imul
adc
dec
imul
jnp
inc
add
inc
sbb
adc
test
sbbb
hlt
outsl
push
mov
add
jle
mov
xorb
mov
mov
cmp
mov
enter
pop
xchg
call
out
add
es
cld
sub
dec
test
jmp
daa
add
xor
lahf
xchg
add
push
or
add
mov
pop
push
nop
cmpsb
jp
faddl
dec
test
jne
cli
add
inc
or
add
ds
adc
and
push
and
xchg
int3
pop
and
notl
scas
xor
ud1
cmp
insl
sbb
mov
jg
add
shr
add
xchg
and
adc
add
dec
inc
xchg
pop
push
dec
add
arpl
add
mov
pop
sub
xor
mov
data16
add
leave
daa
pushf
mov
clc
add
inc
add
repz
mov
call
gs
out
loopne
pop
mov
add
push
mov
movl
lahf
stc
repnz
popa
testl
aad
xor
mov
cmpsb
dec
push
or
push
lods
jb
sbb
sub
insl
sbb
loopne
push
loop
js
add
addr16
lods
aas
mov
loop
pushf
test
cmpsl
cmovp
adc
test
and
fsub
add
sub
movsb
lea
dec
jne
jle
add
or
test
adcb
sub
cmp
repnz
add
push
jmp
repz
mov
pop
or
inc
add
orb
cmp
sub
mov
fwait
ret
insb
adc
add
mov
cmp
mov
jmp
iret
iret
cmp
addl
incb
insb
daa
adc
inc
lds
sub
imul
push
add
cmp
fidivl
lea
mov
and
xor
shl
add
adc
add
pop
mov
pop
adc
jmp
adc
push
imulb
insb
imul
xchg
push
pop
dec
ffreep
add
jp
add
push
mov
clc
inc
add
cld
and
mov
push
jmp
or
push
cwtl
adc
mov
int3
mov
add
inc
cmp
in
mov
push
sbb
hlt
pop
mov
xor
xchg
testl
fcmovnb
enter
popf
pop
mov
or
lock
push
and
cmp
pop
add
pop
andb
add
not
xchg
mov
add
sarb
repnz
add
xor
fcomp
dec
or
add
iret
test
mov
add
ret
lahf
push
push
push
xor
out
inc
jb
xor
mov
mov
in
adc
mov
mov
nop
mov
add
add
cs
rolb
lock
mov
mov
add
pop
add
mov
daa
push
mull
stc
add
loopne
dec
inc
in
adcb
xor
and
and
add
ja
rclb
hlt
push
ret
xchg
sbb
js
das
add
fldl
xchg
fcomip
mov
add
jo
aaa
jmp
or
push
adc
jb
add
add
jne
inc
arpl
jge
push
cmp
scas
mov
in
aaa
push
mov
inc
mov
push
testb
test
jmp
inc
pushf
add
sbb
add
jo
imul
icebp
adc
inc
add
mov
xchg
mov
psubb
or
jb
and
daa
subb
fstl
add
xchg
lock
in
adc
add
jo
and
jbe
rolb
orb
push
pop
inc
imul
nop
mov
daa
shr
and
icebp
mov
stc
fidivs
mov
nop
jb
add
out
pop
push
jl
out
rolb
or
daa
xor
xchg
add
ret
nop
fdivl
add
adc
mov
iret
add
xchg
in
outsl
add
pop
mov
xchg
add
and
loopne
mov
jne
add
push
add
scas
inc
xchg
loopne
call
mov
andb
mov
test
daa
sub
jns
das
std
test
add
pushl
js
adc
add
in
and
sub
dec
movb
and
mov
add
lods
fnstenv
push
ret
sub
xor
xor
repz
stos
adc
add
cli
fnsave
cmpsb
adc
rcrb
mov
js
enter
loopne
fcompl
fmuls
push
sub
jmp
add
punpckldq
popf
cld
mov
js
lock
sub
inc
sub
ret
bound
adc
add
push
das
in
or
inc
dec
sbb
mov
or
jl
push
sub
cs
jae
lock
mov
mov
cmc
jbe
inc
mov
faddl
ds
mov
loope
jmp
addl
into
add
fcompl
adc
xor
incl
jl
add
rcrb
push
add
mov
and
sub
add
pop
add
int
cmpsl
aad
fiadds
int3
je
xchg
adc
imul
and
subb
clc
adc
or
loopne
mov
ficompl
add
mov
xor
add
sub
movsb
cmp
movsl
or
mov
pop
fstpl
xchg
test
dec
jge
cmp
cmp
in
and
add
add
ljmp
testb
mov
ret
push
pushf
mov
inc
es
jne
movsl
or
sub
jno
ficomps
bound
or
pop
and
push
add
jmp
jb
aas
add
dec
or
lret
cli
testb
add
pusha
cwtl
rcll
hlt
lea
cmp
loopne
pop
sub
add
fcoms
add
push
loope
mov
jne
add
pop
shr
loopne
mov
sub
adc
dec
pushf
lea
sbb
adc
xchg
out
or
and
punpckldq
scas
loope
sbb
dec
arpl
test
sbb
lock
add
in
std
mov
rorb
movsl
pop
shr
imul
cmpb
jne
data16
inc
adc
je
movl
jmp
mov
mov
sti
add
mov
push
mov
mov
add
jne
sbb
incb
or
sti
sbb
cwtl
mov
sahf
or
in
sub
into
push
push
add
stos
sbb
int
daa
add
xlat
xor
push
xchg
lcall
mov
mov
mov
jg
sub
sub
xlat
aam
inc
add
adc
leave
ds
push
imul
mov
pop
push
cmp
add
es
add
cld
test
sub
add
enter
inc
pop
stos
add
mov
or
flds
stc
cld
dec
add
pop
inc
pop
test
in
pop
or
push
add
inc
inc
fnstenv
mov
add
dec
pushf
in
pop
add
add
add
rcrb
shll
arpl
inc
xor
xsave
les
enter
add
lcall
push
inc
in
add
inc
add
fwait
sbb
adc
out
sbb
push
push
xor
push
inc
inc
jns
add
dec
push
cmp
addb
out
mov
sub
adc
xor
sbb
jne
push
cmp
mov
mov
mov
clc
sbb
leave
lock
sbb
add
pop
test
clc
out
fildll
dec
mov
xchg
mov
jnp
jge
push
adc
or
xor
add
cli
shr
cld
fs
add
pushf
jae
and
imul
jge
mov
add
sbb
insl
add
arpl
xor
add
std
sub
jl
cmp
mov
lock
mov
jb
mov
notl
das
inc
push
out
ret
jb
fs
and
pop
add
pop
neg
cs
or
popf
dec
mov
lds
adc
pop
adc
enter
cli
shl
adc
and
adc
lret
mov
inc
cmc
ret
and
inc
add
push
mov
in
scas
add
and
xlat
clc
sub
pop
lahf
sub
push
adc
inc
add
sbb
loopne
mov
cmp
adc
or
push
in
add
add
push
insl
jp
out
mov
add
ret
push
push
xchg
jge
mov
je
push
inc
and
xchg
int3
std
in
xchg
nop
je
into
sub
jmp
jecxz
add
jp
cli
push
add
sub
pop
stos
sbb
add
call
add
fldl
cwtl
push
lret
fiaddl
test
rcpps
adc
cmp
push
stc
nop
add
mov
jp
cs
xor
push
add
fldl
pop
andb
or
aaa
loope
push
push
add
xchg
adc
cmp
xchg
call
xor
adc
negb
por
mov
stc
das
je
xchg
add
pop
roll
cmc
cmp
ret
shr
negb
pop
push
xchg
jne
loopne
pop
dec
or
je
addb
loopne
mov
jg
adc
add
test
in
add
aam
mov
ret
push
adc
mov
mov
dec
sub
loop
arpl
mov
call
add
pop
aas
sbb
add
jae
add
pop
pop
dec
mov
jnp
fistpl
sbb
cmp
inc
popa
outsb
int
cmp
movsb
fisubs
jmp
outsl
dec
push
imul
inc
push
pusha
xor
aam
es
loopne
test
or
push
push
add
add
xchg
inc
mov
and
fldenv
loopne
push
shl
cmp
or
cmp
jnp
adcb
gs
pop
fs
sbb
outsb
mov
jne
sub
out
pop
insl
arpl
mov
test
jmp
lock
and
imul
dec
jbe
add
sahf
jnp
imulb
add
fs
jo
lea
adc
ficompl
sbb
mov
lods
adc
je
lea
add
dec
lcall
xchg
loopne
pop
inc
mov
inc
sub
push
jp
add
gs
call
lock
and
xchg
add
scas
cli
addl
mov
jge
add
cwtl
iret
sbb
movzwl
out
xor
bnd
add
leave
gs
sbb
adc
jnp
loope
std
jb
mov
jge
ffree
aaa
pop
adc
add
dec
add
xor
fistps
inc
xor
and
adc
and
mov
cmp
lods
adc
mov
sub
sbb
inc
add
xchg
xor
es
or
pop
ja
add
test
mov
scas
add
mov
mov
add
imul
in
hlt
dec
add
cmp
fwait
inc
mov
subb
movsl
inc
cs
pop
je
out
lock
dec
icebp
push
jl
xchg
mov
loopne
add
lea
clc
je
pop
incl
mov
adc
add
rcrb
add
enter
pop
mov
or
je
xor
pop
add
and
mov
popf
xchg
add
jb
test
xchg
fcmovnbe
arpl
mov
in
jmp
rcrb
call
jo
stos
repz
or
lds
out
add
sti
and
imul
imul
ja
mov
add
jmp
dec
xor
add
add
cmp
push
rclb
call
pop
inc
mov
rolb
inc
dec
test
add
sub
loop
add
mov
inc
xor
inc
inc
jne
inc
sbb
in
add
mov
test
pop
sbb
aaa
jne
stos
add
push
dec
add
push
add
aad
popa
and
repnz
cwtl
pop
ja
add
jne
adc
dec
ret
add
or
leave
add
add
movsl
inc
dec
mov
sahf
movsb
nop
pop
xor
add
adc
dec
or
mov
push
lods
cmp
js
frstor
and
adc
les
jle
cmp
popf
ret
js
sbb
push
out
mov
stos
pusha
dec
addl
les
mov
push
xchg
loop
add
std
cmc
sub
jl
ljmp
sbb
andb
inc
adc
incb
push
add
cmpb
mov
pop
sbbb
imul
add
sahf
sub
add
in
sub
or
daa
out
lds
mov
pop
push
sar
jo
in
pop
roll
cli
dec
fdivrs
cmp
mov
jle
mov
mov
int3
incl
aad
or
add
cmp
add
add
test
lods
cmp
cmpsb
mov
add
les
pop
mov
aaa
inc
add
cmpsl
out
add
push
js
repnz
inc
add
test
add
adc
add
or
ret
cmp
lock
test
jo
add
mov
and
mov
les
or
repnz
ljmp
insb
adc
sti
xchg
pop
jb
or
rolb
cmc
mov
jmp
out
out
add
pop
pusha
and
cmp
push
add
pop
dec
dec
icebp
cld
hlt
jo
add
pop
cmpsl
popa
divl
loopne
add
push
add
xlat
add
pushf
jbe
or
sub
testb
pop
aad
xor
js
cld
mov
and
dec
inc
fstpt
out
add
lods
rolb
add
push
push
pop
xorb
add
in
or
xchg
outsb
sub
fiadds
pop
xor
push
in
mov
popf
push
mov
lds
push
mov
jno
cld
fcoms
mov
sbb
lcall
cmc
cltd
stc
add
not
jl
nop
pop
xchg
jne
ja
xor
iret
add
cmp
sbb
loopne
jnp
add
repz
loope
das
test
outsl
cmp
or
mov
mov
and
incb
add
out
adc
in
jo
add
leave
cwtl
loop
sbb
test
in
hlt
jg
stc
add
je
xchg
ljmp
fsub
pop
or
aad
add
mov
enter
or
cmc
xor
shr
add
dec
loopne
add
loope
sub
fdivl
xchg
add
int3
jp
inc
add
add
es
mov
xchg
and
rolb
out
fadd
mov
sub
push
inc
inc
sbb
push
add
dec
xchg
push
push
popa
sbb
repnz
jne
fcoms
imul
sub
lahf
add
mov
adc
inc
testb
mov
scas
cmpsl
repz
fmul
xorps
int
lods
push
mov
inc
dec
jg
jl
add
cmp
pop
add
inc
imul
addl
add
jne
xchg
sbb
add
das
mov
mov
andb
add
add
outsl
sbbb
test
lock
loop
add
push
clc
in
mov
add
jmp
pop
rclb
sbb
inc
int3
aas
xorl
mov
and
pop
xor
cmp
mov
and
dec
cltd
shl
xchg
cwtl
addl
jmp
mov
lock
shl
out
test
shlb
xchg
xor
rcll
mov
int3
push
int
jae
add
sbb
aaa
add
and
push
sbbb
bound
adc
xchg
pop
hlt
push
daa
cld
add
ret
out
push
clc
inc
jb
add
mov
test
pop
jne
stc
and
orb
xchg
mov
icebp
add
addr16
and
mov
mov
insb
mov
add
repz
es
call
sbb
repnz
add
or
and
lahf
add
test
add
mov
mov
inc
push
test
push
inc
push
jmp
shlb
sub
loopne
fcom
pop
sbb
add
aas
arpl
call
add
fcomps
xor
stos
mov
data16
pusha
cmp
jmp
add
stos
add
std
rcr
inc
jmp
xchg
js
cmp
or
jl
adc
jne
es
add
push
inc
stos
leave
xchg
in
in
xchg
popa
int3
aaa
inc
or
psubd
xlat
jnp
aad
testb
jae
nop
es
add
adc
mov
add
or
rep
pop
adc
inc
call
adc
rolb
bnd
push
mov
pop
in
out
jne
shrb
sub
inc
mov
inc
inc
push
jae
repz
movntps
shl
push
and
sub
or
pop
test
ds
add
rcrb
push
sub
shrl
inc
leave
push
jno
sti
add
lcall
loope
sub
push
mov
cmp
jae
imul
inc
inc
bound
jmp
clc
jg
out
popa
ss
adc
add
leave
add
xor
leave
adc
test
pop
sub
pop
das
sti
and
cld
and
lea
jg
mov
cmp
rcrb
or
ret
pop
scas
imul
sbbl
das
mov
pusha
add
add
add
pop
test
add
loop
cli
dec
mov
add
and
pop
push
repz
shrb
xor
jbe
sbb
popf
cmp
xchg
adc
insl
out
mov
and
jbe
pshufw
subb
add
pop
add
xor
mov
adcl
or
xchg
adc
xor
std
inc
cmp
stc
add
arpl
jo
fcmovnbe
mov
jp
xchg
cmpsl
and
add
out
movsl
frstor
aas
repnz
pop
in
std
ss
outsl
sub
add
roll
add
cmp
incb
push
mov
jmp
adc
add
xor
jmp
test
and
and
pop
rcl
movsb
mov
outsb
dec
lret
sbb
lock
ret
pop
or
lret
and
addr16
jnp
add
xchg
push
lahf
or
or
cmp
adcb
cli
cmp
pop
sub
mov
jae
repnz
sbb
xchg
inc
rclb
pop
dec
pop
dec
add
xchg
or
sti
jae
add
dec
in
sub
daa
mov
or
in
femms
mov
mov
xchg
subb
inc
push
int
cmp
orl
rcrb
pop
mov
add
lods
push
jmp
shr
ret
jl
add
pshufw
sbb
sub
call
jae
roll
aas
bound
adc
mov
lock
xchg
in
and
ljmp
std
inc
orb
xchg
lds
test
rclb
ja
add
faddl
push
add
lock
dec
gs
lret
andl
jge
sbb
pop
pusha
add
add
jecxz
adc
add
insb
cmp
dec
jnp
push
dec
ret
mov
in
inc
add
std
pusha
in
call
or
push
icebp
mov
out
push
cmp
lret
dec
enter
movsl
add
xor
fldt
inc
lret
or
or
das
mov
es
mov
out
nop
mov
mov
enter
dec
sub
mov
jne
jl
scas
js
cs
add
and
sub
or
les
pushf
lret
fimuls
test
dec
jg
lahf
pop
add
shrl
test
mov
add
adc
xchg
push
sarb
push
mov
mov
jae
pop
jne
add
loop
je
cmpsl
and
lcall
or
sub
in
mov
sbb
sbb
dec
fstl
mov
add
push
inc
and
aas
je
lds
inc
sbbb
or
jge
das
cs
inc
add
lea
movsb
test
clc
test
repnz
dec
out
ds
xchg
bound
popf
in
add
lret
das
cmpsl
xor
push
test
es
mov
dec
sub
sub
mov
push
ds
arpl
add
inc
mov
cmp
sub
push
xor
add
cs
bound
xor
push
mov
addb
fs
and
xchg
add
xchg
add
cli
lret
push
scas
rcrl
and
test
out
pop
inc
jne
sar
popf
clc
roll
xchg
xchg
es
rclb
fsubl
cld
stc
inc
add
xchg
ret
xlat
mov
and
popf
sti
int
fildl
sbb
pop
std
in
xchg
add
xchg
sarb
and
jne
mov
fcmovnb
mov
add
mov
adc
sub
addr16
xchg
and
out
mov
mov
push
cmp
imul
add
and
in
adc
adc
pushf
daa
sti
push
and
or
cld
cli
mov
ss
insl
or
dec
lock
push
pop
fsubl
pop
movsl
jb
add
sbb
cmp
sub
sbb
push
add
in
adc
por
out
cmpl
mov
mov
lea
dec
pop
sub
or
jl
dec
pushf
lcall
add
movsb
cmpsb
mov
test
pop
adc
add
or
pusha
and
stos
mov
lock
jae
mov
jmp
cmc
sbb
mov
inc
je
icebp
rorl
cmp
pop
or
pop
lret
add
sbb
cmp
je
add
mov
sbb
pop
pop
stos
lea
movsb
add
mov
adc
movb
mov
pop
sti
add
incb
push
push
mov
lods
jbe
add
xchg
popa
cmp
add
clc
dec
inc
mov
jne
jbe
out
jle
mov
pop
mov
ja
adc
pusha
xchg
inc
nop
hlt
inc
add
sub
cmp
ret
cmc
loopne,pn
lock
fstpl
jo
xchg
add
cmp
mov
hlt
out
push
enter
les
andb
xchg
sub
lods
add
jge
push
cmp
call
jo
and
scas
add
mov
xchg
dec
movsl
pop
adc
ret
lods
mov
add
add
inc
cmp
dec
cs
add
add
or
out
shl
add
lods
scas
xchg
push
das
out
aam
ret
pop
pop
mov
sbb
sub
inc
arpl
jne
and
jecxz
js
nop
xchg
xor
add
inc
add
inc
hlt
stos
aas
inc
adcb
cmp
imul
movsb
mov
add
lahf
shrb
cmp
or
mov
pop
loope
mov
out
imul
pusha
mov
jns
sbb
pop
fs
shrl
fdivrs
lods
or
pop
rorb
cld
xor
out
add
mov
jp
add
push
nop
mov
fcmove
sbb
lds
jl
xlat
jo
sub
adc
jne
pop
lods
dec
and
mov
in
pop
pop
popf
js
mov
lods
pushf
jmp
jp
adc
pcmpeqw
or
rolb
ja
call
mov
xchg
clc
sub
add
push
sub
mov
stc
fcompl
and
aad
aam
faddl
cmp
add
pop
cltd
add
push
or
out
int3
sbb
add
sub
mov
sbb
xchg
xchg
jl
movsl
pop
inc
enter
xchg
push
and
push
incb
or
jne
push
push
imul
daa
xor
sarl
add
dec
jne
inc
lock
addb
xor
mov
sbb
jp
sbb
in
pop
sub
dec
inc
pusha
in
jae
mov
cld
pop
jle
jp
push
rorl
add
inc
lock
cmp
mov
inc
fisubs
push
xchg
std
pushf
bswap
sti
pop
and
inc
or
sbb
add
mov
add
mov
add
mov
sbb
sbb
decl
inc
jge
mov
cmp
add
lret
call
aad
pop
dec
adc
add
ffree
jne
pop
add
inc
dec
push
loopne
adc
push
cmp
adc
add
testl
jnp
movsb
mov
and
jmp
cmpsb
xor
push
stos
add
pushf
loope
aaa
or
xor
push
dec
push
push
push
jl
dec
add
out
push
or
mov
add
in
mov
mov
test
insl
clc
adc
add
pop
adc
movsl
sub
cmpsl
fsub
xor
mov
shrb
testl
in
test
movsl
sbb
mov
js
out
add
inc
aas
outsb
call
pop
test
add
outsl
fsubrs
cmp
jl
leave
fbld
or
dec
push
mov
hlt
pop
lret
adc
addb
repnz
std
test
sub
pop
add
sarb
sbb
flds
call
jne
gs
or
out
in
rcl
ss
es
incb
add
push
mov
leave
jecxz
add
add
daa
cmp
jae,pt
add
jnp
xor
arpl
repz
xchg
out
int3
arpl
xchg
jle
add
mov
or
lea
insl
in
pop
jge
and
ret
lods
pop
pop
sub
xor
add
xchg
or
jne
mov
pop
mov
cmp
or
jmp
push
mov
sbb
pop
mov
mov
cmp
in
adcb
cmp
js
pop
add
inc
or
mov
popf
mov
out
push
push
out
popa
inc
jno
or
addr16
test
push
outsl
std
ret
jle
adc
jg
test
xchg
mov
cwtl
xor
imul
call
in
add
insl
sub
out
mov
cmpsl
addr16
jb
add
xchg
add
das
loopne
sbb
pop
add
mov
pop
add
loope
mov
mov
or
add
test
out
lsl
sbbl
and
lock
add
inc
fwait
lcall
push
add
inc
nop
test
inc
xor
or
roll
sbb
mov
mov
add
jnp
mov
sti
push
or
outsb
inc
clc
pusha
pop
hlt
jl
add
mov
sub
mov
add
into
ret
xor
test
or
inc
xor
add
pop
and
dec
outsb
mov
enter
sub
in
add
mov
movsb
adc
inc
movsl
and
ljmp
test
inc
adc
je
shrb
movsb
push
fiadds
mov
sti
or
call
cmp
scas
repz
adc
shr
mov
xor
shlb
icebp
hlt
fdivl
push
add
nop
js
call
add
mov
push
add
mov
mov
mov
nop
mov
jne
test
add
movsb
lahf
jmp
loopne
daa
in
gs
push
out
or
cmc
leave
pop
adc
add
push
rcl
stc
sarb
xchg
arpl
mov
mov
out
sbb
out
pop
test
in
xor
pop
jle
add
lock
push
addb
stc
mov
outsl
push
inc
sub
sbbb
sbb
xchg
imul
and
xor
adc
sbb
aaa
scas
xlat
ds
add
or
mov
sub
cmp
add
movsb
movb
call
mov
push
cmp
and
jo
or
mov
pop
push
imul
jp
add
inc
xor
add
xor
jnp
faddl
add
push
jb
mov
cld
add
xchg
andb
jp
dec
lock
mov
hlt
add
mov
and
add
shl
sub
mov
je
add
adc
add
imul
mov
add
jb
mov
ljmp
xchg
std
popa
cmp
pop
sub
loopne
test
sub
lods
jo
cmp
or
fwait
lret
or
mov
mov
pop
and
fists
sbbb
inc
push
pop
nop
stos
sub
add
test
cmp
sbb
xchg
adc
lcall
push
and
jns
add
test
pop
cmp
insl
popf
sub
sub
inc
push
ds
dec
add
push
adc
sub
cmp
push
cmp
aad
sub
adc
and
push
cmp
in
add
or
xor
stc
add
call
orb
add
sub
add
add
cwtl
repnz
lea
dec
add
push
add
in
and
add
mov
mov
mov
add
sub
add
ljmp
xchg
push
dec
jns
aam
pop
mov
add
lds
fstl
pop
add
daa
cld
cmc
out
out
movsb
pop
mov
mov
clc
stos
xor
fistpll
mov
ljmp
sub
shl
xchg
fadds
sti
pop
stos
jge
push
das
sbb
call
adc
inc
add
add
outsb
lods
push
mov
leave
ljmp
lea
xor
add
mov
imul
sub
in
pop
adc
jmp
fcmovbe
push
flds
ja
inc
mov
ret
mov
inc
popa
or
add
push
pop
push
js
adc
or
mov
add
dec
pop
push
mov
jl
ds
cmc
and
adc
mov
addr16
lock
pop
adc
and
push
mov
xchg
jns
mov
dec
add
ljmp
ds
xchg
mov
add
jo
loope
or
pop
push
sub
inc
mov
add
dec
lahf
les
orb
scas
lds
and
push
pavgb
adc
jnp
mov
xchg
out
cmpb
into
dec
lods
idivl
popf
push
cmpl
divl
pop
sarl
lahf
cmp
cmpb
push
add
lcall
add
std
jno
loop
add
daa
sub
adc
hlt
fwait
adc
lret
dec
cmp
je
out
xor
xlat
call
and
dec
lods
xchg
mov
add
outsl
test
push
flds
mov
and
lds
sub
xchg
xor
je
incl
outsl
cmp
adc
cmp
lods
push
adc
add
add
mov
daa
sahf
dec
push
mov
adc
dec
mov
roll
mov
es
jae
add
addr16
into
or
cli
js
inc
ret
add
test
sub
xor
xchg
hlt
fbstp
xlat
insl
pop
sub
mov
inc
push
push
xor
les
sbb
addb
sub
jbe
insb
push
ds
fsubrl
jnp
adcb
in
jmp
push
aam
ljmp
add
sbbb
jno
add
xchg
adc
mov
xchg
scas
mov
enter
mov
pop
and
add
xor
push
mov
mov
addb
dec
adc
push
dec
les
aas
push
int
test
push
push
dec
das
enter
and
xchg
push
xorb
add
push
add
ret
or
add
roll
addr16
or
sbb
add
add
div
add
push
lcall
andb
in
sarb
dec
adc
mov
add
test
mov
xchg
daa
dec
pop
cmpsl
add
out
call
add
inc
sbb
add
enter
sbb
cmpb
and
dec
dec
nop
call
add
mov
add
pop
je
xchg
mov
setb
mov
push
in
add
lcall
icebp
lock
and
or
push
call
add
push
test
push
add
enter
sub
inc
sbb
outsb
inc
push
push
cmp
outsl
mov
leave
add
push
insb
xchg
sub
and
leave
stc
rolb
mov
pop
loope
cwtl
addl
adc
stos
out
pop
cld
mov
shr
and
add
lahf
xor
sub
mov
sub
xor
add
andl
add
sbb
pop
jne
mov
xchg
or
cmp
incl
mov
imul
pop
jmp
push
jmp
or
pop
xchg
add
cmp
punpcklwd
sbb
pop
pop
lret
daa
cmp
xor
cmp
push
add
dec
lds
push
mov
rorb
sub
mov
mov
add
pop
push
dec
add
fucomi
mov
imul
fidivs
adc
xor
pop
repnz
adc
pop
lahf
inc
mov
inc
in
inc
and
inc
xor
adc
lods
bound
div
xchg
add
fcomps
out
mov
mov
repnz
gs
xchg
fucomp
xor
repnz
out
sub
add
loopne
push
enter
cmpsb
popf
inc
lahf
dec
add
xor
add
sbb
push
out
lea
add
push
notl
movsb
pop
sub
push
nop
add
adc
mov
test
inc
ret
mov
testb
adc
jbe
jge
ret
push
andl
push
pop
fistpl
adc
pop
push
jge
fmull
and
mov
sub
inc
ret
je
in
scas
add
jns
movq
add
xor
jecxz
lret
mov
add
cli
cmp
stos
loope
mov
jle
mov
sbb
push
imul
daa
add
fs
and
adc
xor
repz
subb
xchg
lret
scas
mov
pop
ss
pop
xor
ret
jle
cmpsb
xor
sbb
test
ret
sub
cwtl
dec
inc
and
mov
add
outsl
adc
add
lods
dec
sbb
mov
add
aas
das
add
or
xchg
add
inc
pop
or
popf
pop
pusha
pop
pop
jecxz
ret
mov
and
jmp
je
pop
mov
jno
ret
test
and
add
scas
aam
push
add
jp
add
mov
ljmp
movsl
add
pop
lods
push
mov
adc
je
and
add
cld
mov
xchg
add
mov
cmp
jg
add
dec
xchg
bound
inc
mov
xchg
jne
cmp
fdivl
pop
fcomps
add
add
inc
add
stos
test
mov
adc
push
jg
sub
mov
inc
sub
and
jae
cmp
maxps
mov
sub
or
shll
cmp
pop
ficoms
outsl
std
sahf
add
out
push
xchg
push
pushf
call
add
aam
add
sarl
idiv
dec
js
add
sbb
dec
push
sub
fldt
push
and
dec
fcompl
jnp
add
mov
and
in
and
mov
dec
idivb
aas
and
mov
sub
scas
mov
shlb
hlt
xor
jbe
popa
dec
test
lock
add
daa
loop
push
push
cld
js
add
jns
xor
xlat
add
dec
pop
inc
mov
jns
add
add
hlt
fwait
sbb
ja
out
mov
cmc
nop
arpl
add
adc
cmpsl
pop
test
or
outsl
and
add
cltd
cmp
les
add
and
dec
repz
lock
pop
movsl
push
mov
jne
decb
cmp
or
add
adc
int
icebp
sub
movsl
bound
cs
add
shrl
fnstsw
sti
shll
scas
loop
sub
add
pop
adc
cmpsb
and
loopne
cli
pop
cmp
lea
add
ja
sbb
dec
push
mov
jb
out
mov
pop
iret
mov
aad
mov
add
add
lock
push
test
shll
cli
fwait
or
xlat
add
pop
xchg
negb
nop
movsl
lea
push
and
filds
add
dec
sbb
dec
xchg
mov
repnz
fists
cmp
add
push
mov
xchg
popl
jne
xor
fdivrs
mov
pop
mov
inc
test
mov
addb
sahf
mov
lret
dec
xlat
xchg
jecxz
out
cld
sti
pop
add
adc
add
pop
mov
cmp
jmp
and
movq
loopne
loop
and
add
or
or
inc
add
and
out
mov
add
and
pop
outsb
inc
push
sbb
jns
sub
and
aas
orl
add
mov
adc
pop
leave
xor
mov
fs
push
rcrb
lock
cwtl
sbb
jl
cwtl
cld
add
sbb
adc
or
xor
pop
or
sub
push
mov
aam
out
ja
add
lods
or
mov
xchg
add
movsl
outsb
repz
sbb
push
add
xchg
cmp
rorl
pop
jbe
lahf
adc
sar
and
lock
cwtl
test
jb
sbb
mov
and
jg
pop
subl
mov
mov
add
test
out
in
and
lods
inc
add
testl
lea
or
int3
stc
pop
add
or
sbbl
jbe
push
adc
xor
sti
jge
and
add
lret
xor
jl
jae
xchg
shrb
dec
push
and
dec
pop
or
adcb
and
add
and
nop
xchg
js
idivb
ror
adc
test
push
push
daa
xor
mov
add
xchg
xchg
sbb
ja
mov
mov
and
mov
pop
sahf
push
gs
and
je
add
or
shlb
cwtl
add
xchg
add
push
sbbl
xor
add
pop
jno
lret
add
dec
in
sbb
leave
inc
insb
shl
mov
movl
lods
ljmp
stc
sahf
cmp
add
bound
stos
lods
push
lret
call
lods
and
fs
js
xchg
adc
fildll
push
jno
inc
outsl
add
test
push
add
push
and
push
and
lods
cmp
dec
pusha
iret
mov
fcompl
andb
mov
mov
enter
add
ja
fwait
iret
and
sub
lock
testl
push
nop
add
js
and
in
arpl
mov
out
xor
jmp
outsl
jns
add
inc
pop
mov
fcmovnbe
std
add
push
xchg
lods
push
xlat
ljmp
lods
push
add
jbe
inc
sbb
mov
jmp
cmp
in
mov
mov
call
scas
xor
jmp
xchg
sbb
pop
mov
pop
adc
faddl
das
jg
mov
jle
sbb
adc
dec
xor
dec
and
mov
sti
dec
test
push
adc
sbb
mov
jne
xchg
das
xor
pop
decl
xlat
add
cmc
iret
hlt
scas
aad
mov
mov
add
mov
mov
add
iret
jmp
add
pop
and
rolb
jge
notb
cmp
and
dec
das
jecxz
les
mov
loopne
or
dec
jle
push
movsb
test
dec
cmpsl
add
fcoml
and
mov
lret
jns
add
push
sbb
jne
popa
insl
add
push
push
and
cmp
xchg
add
outsl
frstor
imul
bound
std
pop
nop
dec
lock
cmp
mov
add
fnstenv
mov
xor
sub
ljmp
jno
nop
movups
mov
mov
push
add
fmuls
add
mov
pop
and
inc
jns
mov
cmp
popf
add
fucomip
das
add
inc
or
outsb
inc
hlt
orb
mov
jne
rcrb
xchg
imul
cmp
popa
das
clc
sbbb
xor
sarb
inc
sahf
push
add
cmp
and
fwait
lahf
cmp
sub
cmp
add
or
movsb
lods
push
clc
addr16
mov
add
pop
mov
push
data16
mov
or
push
pop
jns
or
cmp
imul
mov
pop
xchg
and
aaa
repnz
jmp
leave
test
and
movl
jno
out
test
andl
sub
leave
daa
pop
sbb
pop
push
insb
adc
pop
add
sub
mov
xor
scas
xchg
test
ss
pop
add
xlat
adc
push
sub
add
and
mov
add
push
add
jns
sbb
dec
mov
ret
push
push
shlb
mov
sarb
mov
addb
ret
test
xchg
inc
loop
cmpl
or
sbb
cmp
add
cmp
mov
in
push
add
push
jl
rcrb
out
add
mov
mov
cwtl
and
mov
sbb
aas
sub
add
sub
push
add
mov
or
mov
add
jge
add
or
lock
sbb
mov
add
pop
xor
push
out
add
repz
lret
inc
push
add
push
xchg
andb
lahf
add
push
fstl
loopne
out
add
dec
inc
xor
push
cmp
movsb
andb
jo
sar
pop
cmp
dec
add
fstl
inc
imul
lcall
pop
sub
or
cld
mov
ret
mov
xchg
lods
rolb
add
jecxz
cwtl
add
inc
and
jg
cmpsb
mov
adc
or
and
mov
mov
lock
lock
sub
jge
mov
fstps
lahf
fldcw
mov
ja
stc
outsl
sub
in
xor
cltd
scas
jo
cmp
and
iret
sub
fadd
add
addb
stos
and
je
ret
fisttpll
mov
mov
add
in
sub
add
mov
mov
xorb
or
cli
add
ret
cmp
jmp
test
movsb
pop
add
push
and
xchg
dec
mov
xor
test
negb
aaa
add
clc
mov
add
test
andb
aad
test
add
push
or
or
in
mov
int
push
mov
add
fcmovbe
lods
adc
daa
cs
movsl
lock
inc
and
jne
push
or
or
xchg
pusha
jne
add
jg
adc
add
rolb
inc
cmp
push
pop
mov
and
add
inc
cmp
push
lcall
push
dec
iret
lahf
dec
out
add
and
jo
ds
gs
movsb
or
sub
jbe
insb
mov
adc
push
inc
flds
testl
shlb
jl
adc
outsl
add
pop
jl
push
xchg
jo
jle
xchg
pop
aas
mov
inc
int3
ret
rorl
mov
mov
std
subb
mov
add
aas
xchg
adc
int
xchg
pop
test
adc
lea
fidivl
jnp
mov
cmpb
and
xor
dec
cmpsb
push
inc
in
cmpb
imul
jmp
push
push
aaa
mov
ja
mov
orb
dec
push
out
mov
bound
cmp
gs
sbb
aam
mov
aas
and
jp
xchg
dec
movsb
sbbb
enter
xor
xorl
push
sbb
xor
jl
jo
xor
or
jp
add
xor
sar
rorb
push
lods
and
add
mov
add
je
test
lock
ljmp
cltd
gs
fs
and
in
jno
add
adc
add
push
push
push
ljmp
mov
xchg
add
jmp
dec
push
mov
repz
stos
data16
adc
push
dec
std
rolb
xchg
cmpsb
movsl
pop
leave
hlt
mov
out
jl
pop
add
dec
mov
test
arpl
sbb
jne
subl
xor
lcall
data16
mov
cmpsl
adc
dec
xor
add
dec
xchg
clc
dec
pusha
repz
adc
add
add
jp
jle
sbb
xchg
fs
jmp
into
icebp
mov
movsl
and
adc
push
mov
shlb
add
psubq
xchg
pop
add
stc
sub
cmc
dec
pushf
loopne
dec
push
xchg
fs
mov
out
psrlq
in
mov
pop
cmovs
xchg
cmp
inc
inc
push
arpl
pop
insb
fistps
and
mov
add
add
test
xor
pop
or
mov
bound
jns
cmovb
and
push
inc
iret
add
das
xor
cli
cmp
out
adc
mov
xchg
inc
or
hlt
mov
enter
in
xor
or
inc
add
and
xchg
rol
arpl
lahf
add
sbb
xchg
inc
movsb
js
adc
add
clc
lds
jnp
add
leave
das
cmp
add
cmpsl
xchg
fadds
mov
je
ret
hlt
loope
rolb
aas
lock
nop
mov
jae
dec
addl
mov
and
add
push
lock
jmp
insb
sub
xchg
add
or
push
add
mov
add
xor
test
dec
leave
cmp
push
rolb
mov
xchg
add
add
and
xchg
pushf
testl
loop
aas
adc
mov
mov
ljmp
add
sub
or
popa
hlt
cmp
jp
xchg
stc
fdivrs
sbb
in
out
mov
out
add
in
data16
add
and
sub
sub
je
add
rcrb
xchg
adc
dec
add
xlat
and
and
mov
push
in
test
and
add
sbb
and
add
jle
jae
movsb
adc
dec
fadd
aam
loop
js
cli
push
add
test
je
cmpl
pop
mov
jmp
or
sbb
sbb
pop
add
lret
out
lods
hlt
lock
add
xchg
pop
mov
xchg
dec
loopne
inc
call
xchg
add
add
cmp
aas
out
orb
nop
mov
aam
movsl
mov
arpl
aas
mov
xchg
in
pushf
xor
mov
jo
mov
lods
pop
sbb
adcb
cmp
out
into
sub
dec
lret
inc
mov
and
jns
mov
cmp
psrlq
loopne
in
loopne
mov
lret
adc
adc
and
dec
mov
stos
leave
enter
mov
inc
lea
lock
icebp
repz
mov
add
fstps
data16
fstps
add
mov
jae
add
adc
test
and
sbb
or
lock
and
push
mov
scas
add
fists
pop
arpl
out
sub
ljmp
xchg
add
addl
test
pop
pop
add
push
dec
inc
add
add
lahf
ds
lods
add
pusha
andb
loopne
int3
xchg
dec
ds
mov
push
lods
cmp
sbbb
jne
lahf
dec
add
enter
out
rolb
push
xchg
outsb
std
add
loopne
push
das
add
jle
mov
jge
js
pop
fdivs
dec
incl
fcmovbe
imul
jae
pop
jl
pop
and
inc
aam
bound
xor
jbe
jb
push
add
inc
add
incl
add
arpl
out
rclb
je
dec
add
jae
bound
ja
std
ljmp
inc
add
loopne
fldenv
add
adc
and
and
or
daa
mov
lock
pop
or
dec
inc
aas
push
add
test
jge
shl
out
mov
push
mov
cli
into
add
mov
dec
mov
mov
loopne
adc
jnp
add
xchg
movsl
or
arpl
mov
dec
cli
dec
add
imul
push
std
fimull
mov
cld
add
push
cmp
adc
jecxz
enter
sti
xor
sbb
mov
rcrb
mov
cmp
push
or
cmpsb
adcb
mov
mov
mov
rclb
and
jge
or
inc
cmp
inc
test
mov
aas
xlat
sbb
or
jge
xor
cli
lcall
mov
rclb
pushf
dec
add
jnp
pop
add
inc
push
mov
and
sub
mov
sbb
lret
jnp
ja
xor
incb
add
jle
lahf
push
sbb
les
roll
adc
lock
aas
xchg
push
xor
sbb
adc
or
add
inc
jb
jle
jo
cmp
inc
add
and
repz
fiaddl
inc
loopne
mov
data16
add
cmc
dec
in
mov
fiaddl
pop
cld
stos
add
push
add
sub
cmp
mov
mov
into
inc
cmpsl
add
xchg
push
mov
ss
je
xchg
cmp
lds
push
lods
fcoml
xor
mov
ds
mov
add
or
inc
xchg
scas
sbb
pop
xor
xchg
mov
lods
shl
mov
mov
mov
mov
fmull
pop
ret
pop
loopne
dec
push
or
pop
add
sbb
mov
std
pop
mov
push
jne
add
jge
ds
cs
pushf
orb
add
xor
add
test
rcrl
push
das
adc
push
ds
inc
stos
xchg
xor
adc
add
shrb
sub
dec
adc
xchg
popf
push
mov
test
xor
shlb
mov
insl
filds
add
inc
and
sbb
mov
mov
adc
lcall
das
lods
sbb
and
clc
sub
loop
jne
cmpsb
cli
mov
loopne
sub
add
mov
mov
dec
xchg
jge
cwtl
dec
loope
xchg
mov
mov
cltd
out
jmp
enter
testb
and
mov
adc
add
sub
mov
sbb
fldl
add
test
bound
add
sbb
test
cld
add
jne
aad
roll
loopne
adc
cmp
xor
add
jmp
adc
sub
test
fcmovnb
xor
push
push
and
inc
insb
push
adc
nop
dec
sub
or
xchg
xchg
pop
push
add
xchg
fmul
in
scas
sub
popa
mov
push
cld
xchg
out
sbb
xchg
inc
lahf
sbb
sbb
repz
sbb
xorl
dec
mov
add
mov
ds
xor
sbb
cwtl
push
push
jle
iret
arpl
push
mov
imul
call
xorb
add
sub
dec
jmp
mov
add
pop
shr
mov
add
and
jl
lods
adc
out
mov
movsl
jp
inc
xchg
or
or
add
test
mov
ret
add
iret
push
push
mov
cltd
sub
pop
mov
rolb
mov
pop
enter
jae
sarb
cli
push
adc
inc
data16
mov
dec
adc
push
lea
inc
sbb
pusha
pop
neg
add
int
sti
push
mov
xor
outsb
adc
xor
mov
push
inc
test
mov
jae
inc
test
sub
add
aam
mov
add
stos
add
daa
lcall
add
call
mov
xlat
out
add
mov
add
lock
adc
inc
push
imul
jp
roll
push
aam
sub
cmp
dec
cwtl
loop
xor
ljmp
in
add
lods
stos
movsl
movsbl
cmp
adc
add
add
or
or
fsubrs
rcll
inc
xchg
sbb
xor
adc
scas
into
add
call
mov
sbb
stos
hlt
add
das
dec
in
xchg
pushf
mov
ds
fmuls
add
dec
pop
std
dec
fldenv
aas
or
sbb
jne
test
push
jae
add
leave
push
dec
inc
adc
xor
adc
pusha
push
xor
sbb
call
and
imul
push
mov
insb
sahf
push
and
jle
sbb
aaa
jl
push
inc
push
or
or
fildl
add
cltd
xor
add
loopne
enter
or
call
pop
pop
or
mov
orl
or
int
mov
repnz
vmwrite
imul
xor
mov
add
dec
sbb
push
adc
ret
jns
pop
xchg
or
mov
pop
repnz
inc
testb
cmp
mov
fs
add
decl
dec
andl
inc
lretw
clc
fwait
repnz
pop
das
hlt
adc
cmp
popf
mov
fidivrs
add
and
clc
jnp
jl
dec
pop
and
in
scas
or
aad
cli
test
mov
stc
add
mov
mov
jno
lahf
jg
enter
cmp
mov
sub
push
rolb
lods
loop
xchg
std
int3
cld
out
add
pop
ffreep
add
sub
fnsave
add
test
scas
pop
test
dec
and
ficompl
mov
add
pop
pmaddwd
mov
dec
stos
cmpsb
mov
add
xchg
imul
out
lahf
nop
push
ret
push
push
mov
jle
mov
sbbl
adc
mov
jecxz
test
add
add
jo
push
std
xchg
adcb
aad
inc
pop
addl
ja
mov
sti
add
adcl
es
or
mov
sbb
pop
mov
orl
cmp
and
push
scas
xchg
lret
sub
add
and
jo
cs
lock
add
or
rdpmc
mov
sub
and
add
test
mov
inc
test
add
add
mov
pop
adc
sbb
daa
pop
pop
pop
stos
inc
mov
ljmp
lods
cs
sbb
cmc
adc
add
or
jmp
jae
add
mov
sbb
iret
sub
je
les
call
cmp
imul
lahf
add
enter
xor
fstl
in
mov
and
cmp
inc
cmp
cld
jbe
add
inc
in
and
add
add
add
dec
cltd
popa
outsb
cmpsl
insb
rolb
stos
sahf
pop
pop
les
mov
pop
nop
mov
mov
test
sub
repnz
fucomp
add
clc
xchg
fbld
ret
push
xchg
push
or
js
add
sahf
dec
add
ret
adc
xor
sbb
js
and
sti
xor
imul
clc
psrlq
xchg
pop
shrb
dec
and
add
adc
push
add
jnp
jp
inc
aas
pusha
sub
orl
das
pop
xchg
add
jne
sub
je
rolb
sarl
bnd
and
fdivrl
std
push
add
shll
and
dec
es
add
cmp
insl
loope
hlt
push
add
dec
adc
push
or
pop
in
adc
pusha
add
add
inc
sbb
sub
jo
fwait
dec
cmp
mov
adc
inc
mov
adc
ja
xor
add
sbb
fdivs
adc
jno
pop
lret
xchg
add
adc
invd
and
imul
call
jg
add
xchg
add
pop
lds
mov
xchg
int
lods
in
adc
das
add
in
cld
mov
mov
sub
pusha
mov
add
push
jmp
aam
ds
cmp
ja
dec
aas
lret
iret
loop
add
roll
cmpsl
sarb
imul
add
push
and
add
push
dec
jp
loopne
push
and
add
push
or
push
push
nop
repz
jg
outsb
lahf
mov
adc
mov
ret
dec
dec
add
xcrypt-ecb
cmpsl
or
push
sbb
add
mov
adc
mov
and
dec
cmc
xchg
jo
call
cltd
scas
or
sarl
jbe
add
inc
pop
scas
dec
push
jmp
sub
incb
add
mov
sub
mov
pop
xor
popf
test
das
iret
mov
stc
inc
mov
mov
call
mov
cmp
lock
sbb
popf
icebp
and
pop
aaa
xchg
mov
xor
push
add
cmp
push
add
sbb
jo,pt
add
imul
add
pop
add
fsub
sti
mov
test
add
add
xor
fsubl
mov
aam
out
cmpsl
call
add
addr16
lea
jnp
aas
std
roll
inc
pop
stc
cmp
daa
fisubrs
inc
aaa
adc
add
jmp
in
flds
cli
cmp
decb
xor
loope
add
mov
or
add
lret
inc
or
cmpsl
push
add
mov
jle
adc
lret
fs
ffree
sub
add
jne
add
adc
pop
inc
xor
adc
add
xlat
adc
cmp
mov
adc
pusha
cmc
cmpb
inc
add
jmp
inc
fcmovnb
dec
in
add
sub
push
lock
loope
adc
xor
pop
jl
inc
sub
xchg
jge
mov
add
lock
popf
adc
mov
leave
aad
xlat
fnsetpm(287
mov
psubsw
filds
dec
clc
je
xor
pusha
mov
cmp
fldl
inc
mov
int3
mov
or
add
rep
push
ds
add
pop
iret
sub
loop
or
adc
xchg
rcrb
add
add
in
adc
dec
ja
add
xor
cmp
add
and
mov
mov
dec
add
xchg
cmpsb
xlat
cmp
sbb
out
xchg
js
shl
xchg
sbb
hlt
into
or
and
pop
and
cmp
stos
mov
pop
cmp
insl
orb
ljmp
enter
pop
mov
xor
xor
mov
mov
jecxz
jne
stos
lea
inc
add
adc
lods
cmp
jns
pop
jl
pop
add
nop
addb
xor
decb
lcall
test
add
jle
shr
add
add
cmpb
add
es
add
push
mov
or
push
les
mov
out
es
sub
adc
lahf
aam
mov
or
dec
push
or
cmp
push
add
lock
cmp
lcall
clc
cmp
sbb
add
sti
in
add
mov
pop
xchg
loope
pop
cmp
mov
jb
pop
push
pop
push
add
dec
add
adc
test
inc
out
push
xchg
mov
add
or
xchg
repz
stos
fsubrs
int
je
add
clc
mov
arpl
pop
or
xor
add
sub
cltd
push
add
adc
roll
pop
pop
adc
push
sub
rolb
fdivr
mov
mov
add
jmp
stos
add
jne
xchg
inc
jns
and
out
shlb
add
cmpsb
add
add
es
je
nop
test
fdivl
mov
clc
sbb
testb
jmp
lret
aam
imul
add
je
mov
fiaddl
and
fmuls
add
or
cmp
add
fldl
add
shlb
sbb
popa
push
mov
les
cs
out
flds
xchg
andl
add
int3
xorb
xor
cmp
stos
push
jge
or
nop
and
push
cmp
add
mov
push
bound
add
sbb
imul
inc
mov
xor
dec
dec
out
ret
inc
lock
in
cmp
sahf
mov
sbb
add
cmp
je
or
xor
outsb
cmp
in
mov
test
add
fildll
mov
jo
lock
xlat
inc
mov
jmp
push
push
faddl
jne
xchg
movsl
imul
push
test
mov
cmpb
add
jnp
xchg
fsts
ret
sbb
movsl
adc
jl
add
pop
add
notl
jmp
jae
jae
or
arpl
or
sbb
ljmp
xchg
aam
add
push
xor
stos
mov
and
lahf
jp
fmull
xchg
pop
push
mov
dec
aas
data16
add
andb
mov
out
pop
aad
inc
xlat
push
mov
mov
std
cmp
nop
add
dec
jne
addr16
add
mov
notb
imul
xchg
cmovl
stos
roll
sub
das
aad
in
inc
sbb
int
xchg
ljmp
clc
pop
sub
test
adc
or
add
cli
sub
mov
cld
or
inc
lret
sarb
add
pop
aad
pop
adc
push
lret
les
cwtl
clc
pop
adc
push
jmp
into
cmp
or
add
lret
or
add
adc
cmpsb
js
add
popf
rorb
add
orb
lret
nop
ror
fsubl
xor
sbb
faddl
xorb
pop
aas
testb
add
mov
add
jo
add
cwtl
jae
mov
testl
pushf
incl
movhlps
cmp
rcrb
cmp
adc
adc
sti
movb
jbe
stc
popf
or
addl
or
cmp
add
inc
add
jne
fs
xor
mov
add
inc
shlb
cmp
inc
xor
ss
adc
mov
add
sub
inc
add
test
inc
cli
and
or
inc
jmp
mov
stc
test
out
leave
add
add
add
pop
or
sbb
jle
loopne
add
sti
jl
add
jbe
xchg
add
fsubp
shlb
cs
repnz
mov
or
call
mov
add
lahf
clc
pmaxsw
std
xchg
aaa
sub
rcll
pop
jmp
lahf
loopne
cld
jle
out
add
lods
test
or
add
jp
icebp
sub
js
add
stos
and
add
bound
jl
in
divb
jecxz
cmp
mov
add
nop
mov
cmpsb
add
movsb
mov
repz
jmp
and
add
mov
add
ds
xor
add
leave
adc
jae
cmp
dec
push
loop
pop
dec
adc
loope
add
fmull
jnp
inc
fadds
daa
jg
scas
movsl
loopne
cld
repz
lret
push
and
dec
xchg
hlt
push
mov
daa
repnz
stos
in
or
cld
jmp
dec
add
in
push
arpl
shl
je
dec
call
adc
shr
cwtl
ret
add
aam
cmp
ds
icebp
js
sub
mov
push
cmpb
jo
shl
pop
icebp
cmp
repnz
add
jno
adc
sub
cs
iret
loopne
rcr
hlt
cmp
test
jp
pop
in
test
pusha
add
mov
fstps
dec
addr16
push
add
xchg
movsl
adcb
xchg
push
incl
adc
mov
cli
int3
and
cmc
push
sbb
lock
testb
pop
mov
std
gs
cmp
jl
add
mov
dec
inc
mov
jne
in
mov
jnp
adc
add
fs
stc
xchg
adc
mov
leave
aad
les
sbb
cwtl
or
xchg
into
cwtl
xchg
add
nop
xor
mov
das
add
clc
in
push
test
sbb
ss
xor
adc
sub
aaa
inc
add
inc
jecxz
push
or
sbb
sbb
pop
lahf
psubb
loopne
jae
lea
sbbl
insb
add
sbb
cmpnltps
mov
xor
mov
outsl
das
jae
lcall
xchg
sbb
imul
add
in
icebp
mulb
jnp
or
dec
iret
pusha
lahf
cli
pop
adc
add
add
addl
cmp
aas
scas
popf
inc
jno
cmp
add
push
add
adc
mov
in
add
push
or
jmp
sub
and
jle
fiaddl
xchg
pushf
flds
adc
lret
and
arpl
inc
sbb
ret
xorl
hlt
add
push
adc
dec
add
out
xchg
or
inc
add
jle
gs
popa
loope
jno
or
pop
nop
xacquire
add
dec
adc
loope
mov
mov
xchg
cli
decl
add
lret
inc
stos
rclb
cs
add
jmp
push
and
es
pop
fdiv
add
jmp
stc
add
jns
dec
ds
jo
or
push
sub
or
and
xor
cmp
scas
and
lods
adc
pop
out
add
movsl
leave
fstpl
jno
clc
inc
in
add
sar
pop
loop
out
clc
sarb
hlt
mov
push
fdivrl
sbb
mov
movl
mov
dec
adc
jl
sbb
iret
sub
jo
mov
stos
sub
add
pushf
lods
icebp
xor
arpl
clc
jmp
and
xchg
cmp
push
push
pop
dec
call
add
cmpsl
jne
pop
das
and
xchg
movsb
cwtl
rclb
add
arpl
fwait
sbb
pop
lret
setb
add
and
jbe
pop
stc
xchg
xchg
mov
ficomps
clc
nop
js
add
lcall
cmp
in
je
inc
mov
loopne
cwtl
sti
fsubrs
add
xchg
mov
xor
in
insb
ja
add
out
sub
fcompl
add
je
jecxz
pushf
ds
add
add
cmc
or
add
push
mov
aam
inc
jmp
sti
addb
lea
adc
iret
add
stos
aas
xchg
rolb
add
inc
lock
sub
sbb
imul
mov
xchg
cmp
and
add
mov
xor
inc
pop
and
clc
sub
or
leave
push
pop
push
mov
push
xor
sbb
push
dec
add
fwait
mov
push
mov
scas
orl
push
repz
or
je
adc
jmp
add
js
scas
add
icebp
cmp
nop
add
or
fwait
dec
jle
scas
popf
mull
add
and
xorl
jmp
sub
lods
mov
cmpb
popfw
rcrb
and
cltd
mov
cmp
add
xor
inc
cmp
add
xchg
inc
sub
out
cltd
daa
ja
inc
enter
and
push
mov
and
int
and
aam
sbbl
mov
cmp
mov
mov
jmp
mov
xor
iret
mov
mov
and
push
das
add
js
xchg
nop
xor
add
or
repnz
in
add
test
add
or
pop
push
leave
xor
mov
add
iret
jg
mov
push
aas
cmpsb
or
sbb
jmp
call
rclb
add
stos
gs
aam
add
jno
lock
dec
sub
dec
add
movsl
jmp
push
push
jns
scas
and
aas
add
cmp
pop
dec
pop
push
sub
add
aad
or
sub
je
lock
add
mov
out
ficomps
testl
add
sti
addl
mov
add
add
xchg
mov
dec
jne
jo
sti
pop
stos
and
xchg
mov
jo
std
add
dec
fdivrs
xor
cmp
and
addl
push
lcall
leave
sysexit
jne
sub
pop
in
adc
xor
push
and
add
push
xlat
jb
jg
sbb
jae
dec
or
add
or
movb
imul
push
rcr
add
mov
xor
and
xor
add
push
lcall
mov
inc
enter
jbe
cmp
and
or
lret
xor
add
loopne
sub
cmp
in
aaa
jb
add
add
lret
adc
ss
in
cmp
test
mov
mov
les
adc
push
adc
mov
shl
in
ds
jle
add
jns
add
or
mov
push
aaa
in
add
jg
and
cltd
lea
xchg
jae
cmp
fiadds
lret
and
loopne
dec
arpl
pop
add
add
cmp
pop
sub
mov
add
xchg
xorb
jmp
leave
push
jo
sti
rolb
mov
add
mov
pop
add
or
ret
ret
in
test
push
adc
pop
dec
cli
add
test
loopne
jne
pop
daa
icebp
add
fdivl
add
mov
inc
sbb
add
jmp
lea
push
dec
rcll
mov
adc
sbb
jge
and
imul
add
add
shrl
push
xor
sbb
adc
cmpl
sub
mov
rorb
inc
add
xor
mov
popf
testb
sbb
or
adc
adc
ret
repnz
push
sub
and
fldt
pop
or
mov
add
imul
or
shll
xorl
add
fnstenv
fcomp
or
mov
cmp
and
stos
call
leave
out
mov
dec
add
repnz
sbb
add
push
dec
push
in
in
sbb
cmp
into
xchg
stos
pop
adc
or
popa
aas
add
cmpsb
imul
outsb
in
ret
pop
rolb
sub
mulb
add
cmp
jg
mov
in
add
or
add
rcr
inc
pop
ret
push
orb
add
or
cmp
cmp
cltd
cmp
pop
add
add
rolb
mov
or
push
sbb
loopne
add
hlt
and
ret
dec
rolb
js
loopne
add
sub
add
addr16
add
outsl
fucomp
das
lcall
or
cld
pop
sbb
push
cmp
mov
js
adc
add
or
adc
cld
add
add
ffreep
lret
mov
call
cmp
adc
insb
add
in
sub
fwait
xor
addr16
sub
or
adc
rcrb
add
inc
orl
icebp
pop
adc
jmp
lods
inc
add
ss
and
in
data16
cli
jnp
dec
sub
icebp
cmc
sub
sbbb
test
pop
iret
pop
push
mov
cmc
ljmp
dec
add
dec
or
repz
xchg
add
or
inc
adc
test
lods
arpl
jno
cs
sbb
lret
insl
into
test
jge
add
xlat
test
add
sarb
jo
hlt
push
mov
roll
cmp
gs
push
mov
mov
rorb
fildl
xchg
jge
cmp
pop
add
inc
add
popf
adc
and
push
lret
mov
roll
dec
push
pusha
adc
outsl
xchg
add
xchg
cmpsl
frstor
nop
add
mov
add
stos
jmp
loopne
sbb
xchg
in
sahf
add
clc
add
test
inc
int
cmpsb
mov
cwtl
and
dec
sub
jae
push
out
push
add
jg
push
or
mov
or
dec
mov
sub
int
dec
or
add
fdivs
pop
add
jmp
clc
jle
or
pop
enter
ja
lods
and
and
adc
xchg
test
aam
int3
dec
or
sub
sbb
add
push
add
jecxz
and
or
xlat
sub
or
and
sarb
add
stc
or
inc
ret
cwtl
mov
insb
dec
mov
loopne
adcb
push
sbb
sub
cmp
adc
bound
cmp
int3
add
ficompl
jg
ja
pop
mov
sub
cmp
out
add
push
add
fidivrs
cmp
andb
call
add
mov
pop
fdivr
jo
dec
dec
test
add
adc
mov
sub
fwait
push
aad
mov
or
or
sub
add
and
dec
sbb
add
test
push
popf
es
pop
push
pop
pop
ret
mov
stc
xor
das
les
or
adc
clc
jp
add
push
outsb
imul
out
lods
cmc
pusha
es
stos
add
mov
in
push
ret
add
or
clc
and
jl
add
repz
add
cwtl
rcrl
add
cmpl
dec
loope
sub
jle
add
and
addl
mulb
xor
mov
jle
sbb
fbld
pop
in
aaa
and
push
push
push
loopne
sub
jns
clc
xor
or
add
es
lods
cltd
add
xchg
pop
test
inc
jne
add
dec
jmp
cmp
mov
add
mov
and
in
lods
lea
sub
mov
pushf
mov
add
push
in
pop
pop
es
cs
daa
xor
sbb
add
inc
pushf
sbb
inc
sbb
jne
add
add
lock
xchg
add
stos
testb
inc
addb
mov
xchg
fldcw
xor
loope
test
pop
jno
xor
mov
es
mov
add
enter
mov
cmp
sti
sbb
jmp
pop
push
outsb
test
sbb
mov
push
push
movsl
lea
inc
nop
ret
leave
inc
sub
je
push
xchg
pop
fisubrl
mov
nop
loopne
add
inc
shl
mov
ret
inc
xor
jle
add
mov
push
jmp
add
popf
mov
lods
leave
cmp
lcall
pop
repnz
ret
sub
push
add
rcrl
jmp
pop
add
add
addl
sub
aas
lret
fdivrl
push
inc
fildll
jp
adc
add
add
jbe
add
pushf
pop
push
popa
imul
add
cmp
xchg
adc
push
jnp
cmp
test
push
xchg
outsb
push
add
dec
mov
int3
sbb
mov
inc
adc
cmp
jae
lcall
cld
ljmp
in
add
xchg
jo
add
pop
int3
loope
insb
loopne
add
add
enter
ljmp
jnp
insl
push
push
add
lret
add
rolb
repz
leave
in
push
enter
sti
cmp
pop
enter
push
push
adcb
and
subb
jg
stos
add
fcompl
pop
xor
add
loop
sub
adcl
fnstenv
sbb
pop
cli
pop
ljmp
mov
mov
add
testl
rolb
push
cmp
xchg
push
add
jge
add
int3
clc
cmpsb
fisubl
pop
cmp
add
dec
stos
add
test
rclb
add
sti
adc
or
lock
icebp
jg
cs
add
sar
pop
das
dec
add
sub
jmp
out
add
add
jb
add
adc
notl
bound
andl
sti
or
leave
fwait
add
add
ss
add
dec
cmp
clc
jns
xchg
add
cmp
add
sbb
sub
and
test
add
jmp
push
orb
jno
loopne
packsswb
popa
sub
fs
add
adc
add
push
inc
js
mov
sub
arpl
add
xchg
sbb
cmp
add
inc
mov
add
push
fs
sti
loopne
pop
jp
dec
xor
and
mov
shl
add
daa
push
pop
jb
xor
cmpsb
xlat
scas
jmp
pop
ret
pop
push
lods
shlb
loopne
add
lods
xchg
and
or
sbb
aas
add
loopne
add
popf
xchg
jge
xchg
sbb
add
xchg
pop
loopne
add
push
loop
pop
incb
mov
sub
mov
ss
rolb
and
and
imul
fistpl
add
orb
mov
dec
js
push
or
scas
cmp
lds
mov
mov
rcrb
pop
je
in
rclb
shl
push
add
sbb
sub
sar
cmp
jae
lret
es
shlb
dec
loop
dec
push
stos
xchg
mov
mov
sub
add
or
push
shll
jnp
clc
dec
jo
sbb
xor
sahf
test
add
push
mov
popa
push
sahf
leave
adc
pop
jns
add
daa
jne
in
cld
lret
and
inc
ja
push
pop
xor
add
mov
pop
lock
sub
add
sti
xchg
repnz
cmpsl
and
add
imul
add
pop
or
test
jne
dec
sbb
add
popl
pop
cmp
fwait
pop
xchg
dec
fprem1
out
add
lods
adc
mov
pop
add
lea
adc
test
mov
mov
movsl
push
add
dec
inc
lods
xlat
push
add
je
sti
loop
dec
cmp
push
add
out
xchg
jmp
clc
cmp
test
hlt
negl
push
xchg
jne
mov
dec
call
adc
cmpsb
adc
stos
pop
add
lock
sub
adc
mov
pop
rcpps
mov
and
or
push
adc
shlb
pop
insb
roll
xorb
data16
sbb
inc
adc
ljmp
jb
adc
sub
mov
add
add
incb
or
push
jg
add
jb
leave
rcll
pop
inc
aaa
push
sbb
nop
call
pop
out
fadds
js
aad
dec
and
dec
jne
add
or
dec
pop
mov
push
add
inc
adc
adc
push
insb
xor
dec
inc
cmp
ljmp
popf
adc
mov
test
jg
dec
mov
cmp
lahf
jmp
les
js
inc
add
pop
nop
subb
mov
ljmp
jnp
add
nop
cmpsb
adc
out
add
loope
jg
mov
sub
inc
mov
inc
push
add
and
in
mov
push
add
fdivl
dec
add
xchg
les
mov
mov
push
aam
lock
add
mov
imul
pop
sbb
nop
sbb
ret
adc
inc
clc
in
push
jl
push
jo
gs
inc
or
loopne
jb
cltd
addr16
loop
shll
jbe
jno
movsb
mov
or
cld
adc
cmp
lahf
pusha
cltd
sub
out
rep
add
sbb
clc
push
and
add
and
adc
jns
jmp
rcrb
mov
adc
pop
add
fdivp
inc
ljmp
das
shr
fdivr
pop
add
int3
mov
stos
jbe
push
loopne
add
mov
rorl
dec
push
jb
decb
add
push
jmp
sub
rdpmc
sti
inc
lahf
add
push
sub
xorb
add
add
outsb
test
mov
inc
jle
pop
imul
mov
xor
or
mov
xchg
mov
out
mov
mov
sbb
sbb
sbb
pop
clc
adc
add
sub
js
jb
loopne
sub
xlat
ret
aam
stos
dec
adc
add
call
add
or
or
push
or
adc
daa
call
push
out
loope
enter
add
or
into
mov
loope
cltd
test
aad
adc
push
jo
mov
data16
mov
outsl
pop
pusha
push
lret
push
movsl
add
rcrl
cmp
call
jmp
or
lar
data16
and
into
aam
push
xor
or
push
in
adc
or
ret
pop
test
mov
pusha
pushf
in
cmp
dec
or
fbstp
inc
ja
push
mov
adc
sub
lock
push
sti
add
mov
add
decl
and
pusha
or
pop
inc
punpckhbw
adc
adc
in
or
or
sub
inc
add
mov
cmp
sbb
and
dec
repz
cmpps
push
jmp
lock
loopne
ret
push
je
add
xor
add
lret
mov
loope
mov
addr16
loopne
jmp
xchg
out
shll
xor
icebp
aaa
add
lds
daa
sarb
les
aas
outsl
iret
out
add
sbb
jnp
xorps
add
pusha
adc
fimull
cmp
mov
jmp
pop
cmp
mov
stos
mov
loopne
add
pop
rol
push
jb
fidivrs
pop
cmp
test
in
and
add
out
push
pop
dec
cld
std
sbbb
aaa
call
inc
cmp
add
mov
pop
mov
push
cmpsb
scas
out
mov
push
push
sbb
fwait
sbb
xchg
mov
enter
xlat
aas
dec
in
shlb
ja
and
cmp
lods
xor
cmpb
insl
pop
rcr
rolb
xor
rorb
in
push
inc
inc
xchg
add
sahf
std
xchg
xor
rolb
push
cmp
in
and
aaa
add
icebp
push
cmp
push
add
std
mov
in
cmp
add
add
clc
inc
mov
xorb
testb
push
ds
add
mov
mov
ljmp
add
loop
adc
cmp
add
in
flds
jbe
mov
pop
dec
mov
and
loopne
mov
jnp
and
outsb
pop
adc
mov
jle
inc
mov
adc
lret
out
pop
mov
lock
cmp
mov
roll
ret
rolb
rorb
xor
pop
loopne
add
dec
dec
pop
cmp
mov
outsl
xorb
mov
or
push
lcall
xor
sbb
loopne
add
into
sub
pop
xchg
add
jmp
lret
addr16
rcrb
clc
add
mov
call
jmp
hlt
xchg
add
outsb
mov
pop
jecxz
xor
add
test
push
adc
jmp
push
push
loopne
add
les
inc
add
dec
cmp
mov
sub
insl
adc
sbb
and
push
push
inc
add
inc
out
in
xor
add
inc
out
dec
lock
mov
scas
fs
call
sbb
nop
push
inc
add
dec
or
and
push
adc
ja
jnp
push
aam
lahf
das
adc
lea
pop
outsb
jo
clc
jne
xor
rolb
jnp
gs
aas
and
ret
xchg
psubd
outsl
insl
sar
lret
add
sbb
int3
stos
or
push
and
jl
loop
adc
add
add
push
sarl
xchg
xor
fs
add
adc
add
add
movsl
loope
pop
push
ror
add
mov
pop
cmpl
add
daa
fstpl
ds
das
cwtl
add
nop
out
push
pop
add
xor
mov
sub
xchg
sub
adc
lock
or
lahf
xor
pop
add
mov
add
or
cwtl
mov
jl
fdivs
xor
imul
push
push
pop
fwait
jnp
add
jo
repz
xor
add
call
shll
dec
repz
call
cmp
mov
pusha
sub
mov
test
adc
mov
mov
add
rcl
movsb
inc
sbb
bnd
push
into
mov
xor
outsl
push
jo
add
mov
je
mov
cltd
add
imul
adc
insl
lcall
or
es
or
sti
jae
shll
xor
or
push
xchg
ret
loopne
out
cmp
xlat
push
enter
test
add
rep
pop
add
fnsave
aaa
xor
mov
inc
or
loop
loope
dec
outsb
mov
fisttpl
inc
and
pop
dec
add
mov
or
or
inc
inc
xlat
push
imul
mov
loopne
add
gs
push
sbb
je
sbb
sub
xlat
add
and
add
addb
insb
push
sbb
add
mov
in
sbb
shrb
inc
or
add
jg
jne
sbb
popf
jp
pop
fs
sub
pop
ljmp
lret
jbe
pop
loope
and
add
sub
fstl
aam
xor
or
adcb
dec
das
sub
add
cmp
pop
sub
inc
repz
sbb
mov
imul
pop
jmp
outsl
cmpb
std
gs
pop
push
push
add
inc
ret
adc
pusha
add
cmp
hlt
adcb
sbb
or
and
stc
adc
dec
push
xor
xchg
mov
push
lahf
pop
ljmp
and
jne
sbb
mov
push
inc
faddl
jae
adc
push
jbe
fst
cwtl
je
add
fwait
or
dec
add
xchg
nop
ljmp
cld
jae
shl
movsl
jne
add
sbb
clc
add
pop
mov
push
pushf
push
adc
pop
mov
add
nop
inc
test
push
add
and
adc
dec
addr16
jnp
push
xor
add
popa
insl
in
add
pop
hlt
loopne
mov
sbb
adc
inc
cmp
pop
and
xchg
mov
dec
add
outsb
movsl
pop
mov
pop
je
das
cld
or
jb
or
aas
out
or
mov
pop
push
add
sbb
cmpsl
push
nop
jp
testb
das
inc
mov
int3
add
in
cwtl
mov
mov
out
jae
mov
adc
repz
pop
test
cltd
jo
add
addr16
xlat
cwtl
lcall
mov
aas
xor
and
daa
or
sbb
sbb
addb
fadds
pop
fs
sub
push
jmp
aam
shld
popa
add
pop
pop
cmc
xchg
mov
test
stos
and
mov
add
or
push
dec
dec
insb
enter
adc
jb
movsb
pusha
ljmp
fs
pop
adc
inc
and
inc
insb
popa
pop
jae
cltd
add
jp
push
addb
jo
testb
rclb
das
pushf
clc
add
pop
push
rclb
sahf
cmpsb
lock
fidivl
dec
or
shlb
popf
sbb
fmuls
add
and
int3
sub
add
stc
add
sub
mov
cwtl
rorb
xor
xor
sub
hlt
add
add
jle
cmpsb
xor
in
cs
sbb
test
xor
adc
pop
xor
lods
mov
outsl
in
adc
lcall
cli
insl
xchg
push
std
sub
aam
out
pop
dec
es
or
mov
sub
adc
adc
out
sahf
rol
push
adc
and
cmp
xor
and
cld
clc
jo
iret
aas
or
push
in
sbb
and
pop
push
cmp
mov
test
es
loope
adc
sub
or
mov
lods
dec
and
aam
rclb
lock
fxch
xor
out
cmp
clc
arpl
sbb
push
jno
and
dec
lock
cltd
hlt
jl
add
or
sbb
cmpb
mov
and
js
test
adc
add
push
dec
popa
outsb
dec
or
dec
push
clc
hlt
scas
loopne
add
and
rcll
add
add
jo
xor
rcrb
cmp
xorb
inc
add
push
pop
or
sti
push
shll
push
fisttpll
insl
ret
xchg
dec
fcoms
jp
add
iret
jo
lahf
jl
popl
cmp
into
push
pusha
test
or
pop
incl
xor
adc
push
fdivrs
and
dec
sbb
mov
inc
out
and
jnp
jg
add
push
mov
jmp
in
sbb
sub
int3
or
in
xchg
mov
and
add
or
push
adc
mov
xor
cmpb
scas
shld
into
lahf
pop
addr16
push
cmpsl
lret
xchg
and
incl
aas
dec
or
inc
test
lock
add
rol
sbb
add
adc
inc
push
inc
mov
stos
cld
lahf
je
sbb
push
add
jb
inc
std
mov
icebp
pushf
or
imul
push
inc
jmp
push
pop
lret
pop
arpl
add
cmp
sarb
and
loope
adc
sub
add
pop
push
cld
inc
sbb
inc
mov
mov
mov
add
das
jg
sahf
out
testb
mov
lret
cmp
cmp
jle
call
jns
outsb
sarl
jmp
add
or
mov
add
add
rorl
add
mov
cmp
pop
jle
addb
jns
paddw
and
loop
inc
addr16
call
sub
add
cmp
xchg
push
jle
adc
push
mov
loop
mov
push
sub
scas
pop
mov
out
add
sbb
incl
aaa
mov
jg
dec
mov
ja
cmp
gs
test
mov
push
dec
stos
sub
mov
mov
nop
mov
push
push
pop
ja
add
sti
jbe
add
xlat
and
add
ret
inc
sub
and
test
dec
and
mov
jecxz
push
pop
adc
adc
add
into
xchg
in
mov
add
and
loop
push
xchg
add
dec
jmp
aam
and
mov
and
adc
cs
lcall
pop
xchg
mov
nop
aaa
sbb
and
and
adc
sub
leave
sbb
roll
pop
xor
stos
or
sub
jmp
adcb
cmc
jae
lock
xchg
lock
mov
xchg
movsb
cmp
fs
hlt
xor
sub
or
sub
or
inc
fwait
adc
rolb
or
xchg
lret
jns
add
in
outsb
imul
fldenv
nop
sbb
xchg
lods
add
lds
fnstenv
movl
mov
add
push
sbb
sub
xchg
sbb
xchg
out
add
mov
les
jnp
add
repz
or
bound
mov
adc
negl
stc
pop
clc
dec
add
and
dec
add
mov
pop
stos
int
dec
push
lods
loopne
stc
test
not
and
imul
mov
add
jmp
iret
fisttps
call
cmc
into
dec
push
sub
jp
cmpsl
rclb
xor
in
cmp
sbb
push
test
out
mov
sbb
pusha
inc
xorb
pop
add
sub
gs
enter
in
add
dec
mov
mov
push
adc
pop
push
add
mov
sub
cmpsb
cmp
movsl
xchg
xchg
test
cmp
push
decb
xchg
pop
out
leave
cmp
nop
add
or
jae
jg
xchg
fsubrs
add
jo
xor
sub
scas
xchg
adc
daa
comiss
pop
push
inc
aaa
rcll
jmp
adc
dec
fisttps
xchg
mov
add
outsb
lds
push
push
mov
push
call
pop
inc
and
mov
stos
jmp
add
dec
mov
insl
ffreep
add
cmpl
pop
lds
pop
xor
cmpsb
clc
cs
sbb
loope
sub
fidivrl
clc
repz
in
mov
xor
xchg
mov
cmp
add
pop
scas
lods
cmp
mov
dec
add
mov
dec
shl
rcrb
sub
mov
and
je
fistps
fdivl
add
cs
ja
fmul
pop
push
add
jecxz
sbb
sub
add
adc
cli
add
test
daa
cmp
cmp
sub
jno
movsb
in
add
dec
xchg
sbb
lods
daa
mov
adc
iret
and
jl
add
cmp
bound
xor
push
test
lock
call
and
insl
mulb
and
inc
mov
sbb
pop
push
lret
sbb
rolb
jo
imul
cmp
mov
in
add
call
dec
add
push
insl
lock
xchg
xor
mov
mov
jne
ret
sub
repnz
push
xor
es
clc
jle
jae
cli
sbb
stc
ljmp
roll
fists
idivl
jecxz
add
sbb
ldmxcsr
add
add
scas
dec
adc
and
add
jae
add
sub
add
loope
sahf
xor
call
inc
pop
in
adcb
or
fstpt
inc
xor
test
shr
jmp
xchg
addb
dec
jne
adc
or
shlb
call
in
mov
popf
inc
pop
pop
sub
and
jl
xor
push
xchg
lret
test
cmp
xor
add
mov
pop
movsl
mov
das
rorl
sarb
sarb
mov
cs
push
movsl
adcl
xchg
adc
cmp
sub
hlt
mov
xchg
roll
sbb
and
pop
xor
loop
push
adc
jns
add
imul
cltd
cmp
je
mov
fcompl
dec
int3
clc
loope
jmp
inc
adcb
or
add
scas
cmpsb
dec
pop
jo
add
stos
and
cwtl
adc
loopne
outsl
sub
add
sub
inc
pop
cltd
xchg
leave
mov
xor
add
das
stos
in
mov
mov
add
xor
scas
loope
xor
sub
pop
jge
stc
ficoms
test
push
fists
cmp
mov
xchg
jnp
dec
in
xchg
in
add
inc
xor
push
bnd
andps
xchg
mov
xchg
enter
sub
mov
cwtl
shl
sbb
jle
push
dec
dec
cmpl
add
pushf
fmuls
add
cmp
rcrb
or
xchg
lods
inc
or
xor
jb
addr16
cmpsb
sahf
movsb
bswap
out
adc
loopne
std
xor
xchg
vmread
inc
inc
mov
add
and
add
ret
call
add
inc
mov
test
push
add
sub
pop
add
add
daa
or
or
lods
cmpb
jne
adc
or
jp
adc
jecxz
and
rcrb
shll
cld
and
add
mov
pop
xor
dec
add
or
pushl
cmp
add
ss
pop
cmp
or
lret
aam
sub
das
sub
stos
sbb
dec
xchg
dec
xor
mov
xchg
mov
cld
out
dec
fwait
mov
sub
rol
push
mov
addb
roll
xor
adc
sub
aad
mov
sbb
inc
sbb
add
pop
and
les
jae
inc
divps
cltd
push
or
into
jg
add
out
sub
mov
pusha
pop
push
add
cltd
push
fsubr
shlb
add
xor
nop
sub
mov
add
xor
mov
add
xor
aam
add
inc
adc
prefetchw
jo
pop
fcmovbe
and
ljmp
aam
ja
xor
pushf
inc
nop
xchg
add
and
adc
mov
loopne
bound
dec
ja
cmp
loopew
test
nop
xor
iret
mov
jg
adc
call
adc
int3
pop
in
roll
repnz
addl
sbb
mov
dec
mov
dec
mov
paddd
lock
ljmp
add
dec
insl
sub
pop
jge
loopne
jl
lea
or
mov
or
jae,pt
cs
jmp
xchg
xor
dec
sbb
jne
insl
mov
rolb
lds
int3
mov
jg
movsb
leave
sub
mov
lock
into
adc
pop
adc
add
adc
push
push
dec
lret
les
add
sbb
repnz
cmp
in
clc
adc
add
pushf
dec
push
out
pop
adc
cmpsl
inc
push
xor
add
add
lods
push
mov
add
sub
add
dec
rclb
je
xchg
add
addr16
add
dec
sbb
movsl
add
adc
xlat
push
rcrb
inc
pop
and
cmp
add
mov
dec
icebp
push
add
loopne
xchg
btl
bound
xchg
cmpsb
popa
outsl
xlat
and
pushl
fimuls
mov
aaa
loopne
add
fsubr
pop
add
aas
jl
xchg
xlat
add
js
add
mov
pop
shr
xchg
jo
inc
add
push
or
jbe
add
and
inc
sub
add
sbb
jl
fsubrl
push
lock
mov
or
jp
or
push
rolb
dec
xor
mov
mov
sti
aaa
enter
xor
mov
hlt
daa
jl
push
in
and
lea
pop
inc
add
dec
push
add
dec
or
push
int
lds
into
daa
pusha
scas
dec
lret
cmpsb
add
xor
mov
shrb
xchg
addb
jbe
leave
xchg
arpl
add
in
xor
sub
adc
stos
mov
push
mov
fistps
shlb
push
xor
add
add
in
leave
xor
in
mov
fptan
add
xchg
clc
pop
test
push
scas
ds
pop
fcomp
call
fldcw
and
inc
push
lahf
add
xlat
push
pop
add
adc
push
add
mov
adc
scas
mov
hlt
xchg
mov
loopne
push
leave
cltd
inc
add
mov
imul
mov
add
xor
pusha
inc
cmp
ret
adc
or
or
push
pop
out
sub
mov
sbb
aaa
or
add
jae
inc
fs
repnz
hlt
arpl
push
and
enter
add
xor
fstpt
jp
pop
add
imul
nop
add
push
jl
mov
stc
push
lcall
inc
xchg
mov
ds
fiadds
lret
into
icebp
xchg
sbb
fiaddl
adc
pop
push
adcb
inc
sub
jns
add
test
enter
test
pusha
fisubl
rclb
imul
jp
dec
add
xlat
mov
add
pop
in
add
push
insl
ja
dec
push
mov
xor
cs
loopne
imul
pop
xorl
ljmp
adc
sbb
xor
loop
cmp
aad
dec
sbb
mov
sub
inc
jmp
mov
pop
in
call
or
adc
sub
sbbl
cmp
aas
jb
add
sub
dec
loopne
jbe
sbb
lret
mov
sub
movsl
call
add
lock
or
pop
mov
mov
test
or
popa
sbb
push
cmp
dec
ret
push
aam
leave
push
arpl
add
call
mov
xchg
mov
js
daa
aam
xlat
sbb
add
sub
clc
add
xchg
mov
lds
fst
dec
pop
inc
and
push
cmp
dec
decl
pop
push
fwait
popa
or
adc
and
sbb
cmp
xchg
ds
inc
mov
arpl
push
cmc
cmp
lcall
gs
daa
inc
add
mov
out
js
add
filds
add
jns
cmpsb
xchg
cmp
jmp
imul
push
pushf
pop
out
enter
add
mov
cli
sub
jo
push
jge
mov
cmp
xchg
mov
pop
or
ds
push
cwtl
arpl
jle
rcll
mov
addr16
jmp
lods
pop
push
mov
movsb
add
fmull
sub
sub
pop
and
mov
test
je
adc
add
test
jg
sub
jl
repz
ret
movsb
adc
addb
add
or
inc
les
dec
ljmp
xchg
mov
cmp
inc
add
push
fiadds
adc
out
lock
clc
or
sbb
ds
push
sub
fstpl
rcl
ljmp
test
add
jno
push
dec
out
cld
add
add
xchg
sbb
dec
push
jns
nop
adc
cmp
push
sub
pop
add
insl
adc
pop
imul
wbinvd
iret
push
sub
mov
xchg
cmp
and
dec
or
into
adc
fcomip
dec
pop
push
jbe
add
ds
cs
fdivrl
rolb
add
add
cs
and
arpl
jecxz
jg
add
cmpl
shrb
add
loope
xor
pop
hlt
or
aas
sbb
jp
lds
pushf
inc
mov
and
jecxz
incb
sub
mov
insl
inc
push
inc
mov
movsl
xchg
clc
mov
or
push
dec
or
daa
in
inc
add
fwait
adc
sub
mov
pop
mov
push
mov
mov
inc
pop
out
adc
or
mov
test
in
dec
sub
jg
movsl
movsb
lret
incl
cmp
dec
or
loopne
push
xchg
pop
cltd
adc
fsts
add
add
pop
pop
jne
ja
pusha
sub
test
add
and
cmp
push
out
adc
mov
mov
subb
imul
xor
dec
jno
inc
add
movsb
or
add
adc
and
jp
cmp
push
lahf
lret
icebp
adc
sub
inc
inc
popf
mov
out
sar
in
or
mov
pop
xor
and
pop
add
aam
addb
rorb
mov
cmp
loope
adc
scas
add
inc
jbe
insb
aam
mov
and
iret
add
pusha
xor
clc
pop
cwtl
sbb
call
addr16
loopne
or
sbb
ret
shll
adc
test
mov
and
mov
pushf
ja
add
adc
repz
jp
add
mov
and
call
mov
inc
sbb
or
push
sub
pusha
nop
pop
andl
pushf
add
xor
cld
mov
adc
xor
adc
gs
rcll
imul
xor
loopne
arpl
rcrb
mov
adc
sbb
push
inc
xor
sub
clc
jmp
push
mov
sbb
xor
bound
and
or
mov
mov
jnp
bound
or
jl
insb
push
hlt
insl
cwtl
out
add
outsl
leave
jb
cmpl
popa
nop
in
stc
push
mov
test
sbbb
mov
cmpl
jo
add
dec
dec
push
mov
lcall
add
add
loope
or
cmp
sbb
movsb
shlb
jo
aad
in
aam
sbb
xor
fdivs
int3
or
or
inc
negb
ficoml
call
adc
sbb
lods
fildll
and
mov
ds
js
clc
push
and
add
stc
add
pusha
in
or
xchg
into
add
xchg
cld
dec
inc
add
pushf
inc
xlat
insb
mov
push
xor
enter
and
mov
or
jle
jno
add
pusha
push
push
add
sbb
sbb
cwtl
call
add
dec
cmp
adc
je
lret
shlb
adcl
lock
add
pop
adc
add
jo
mov
test
dec
js
loopne
and
jo
inc
inc
mov
pop
jno
mov
in
add
add
call
arpl
pop
sbb
pop
or
int3
pushf
loope
sbb
jle
push
or
push
mov
outsl
fmuls
mov
call
cltd
sub
movsl
movl
pop
add
fisttps
dec
jo
fdivl
push
add
push
int3
adc
ljmp
rorb
inc
adc
fcomps
sbb
pusha
popa
adc
xor
dec
add
outsb
je
insl
add
in
loop
out
pop
addl
sub
cmp
sbb
xor
cmp
inc
inc
inc
loopne
inc
push
dec
and
mov
pop
add
or
daa
stc
inc
rorb
pop
push
sbb
dec
push
sbb
sbb
add
dec
add
push
rol
enter
add
add
sbb
and
pop
or
pop
es
sub
mov
xchg
add
inc
fsub
mov
adc
lock
pop
adc
lods
mov
sub
xor
dec
cmp
jnp
jnp
pop
push
jecxz
mov
nop
sti
cwtl
sti
mov
cli
mov
shlb
dec
and
add
mov
pop
and
push
mov
jb
add
subb
fcoms
xor
insb
mov
hlt
sbb
aas
inc
outsb
add
shrl
jne
pop
sbb
jo
mov
sub
and
lods
pop
inc
adc
ljmp
add
push
push
add
push
add
pop
push
fs
jo
inc
pop
dec
push
js
bound
pop
addr16
add
jo
jno
jae
or
jp
jbe
add
imul
insb
cmp
cld
rorb
inc
std
cwtl
add
mov
inc
add
jno
pop
sti
shlb
pop
ret
cmp
push
add
cmpb
aad
pop
hlt
stos
cwtl
sub
pop
stc
cmp
pop
adcl
test
and
ret
add
push
je
mov
ficoms
jg
icebp
aaa
rcll
imul
out
popf
add
bswap
mov
sub
add
faddl
fimull
push
ds
insl
and
xor
add
add
push
repz
or
add
cmpsl
aad
add
sbb
sub
pop
test
mov
cmp
and
cs
add
dec
adc
mov
cmp
subb
cs
ret
test
jb
mov
pop
add
test
mov
mov
sbb
xchg
shll
jo
add
test
push
adc
push
shll
dec
ja
push
daa
mov
mov
xor
or
aam
stos
fadd
dec
dec
add
pushf
pop
rep
cs
push
je
arpl
nop
add
mov
insb
push
movsb
mull
vmread
push
inc
sub
push
adcb
je
or
lcall
repnz
or
nop
fs
and
adc
xchg
xchg
mov
sbb
inc
xchg
xor
dec
adc
popa
and
and
xor
cwtl
and
rorb
loopne
add
and
push
add
add
sbb
ljmp
and
lods
sub
or
aam
rolb
sbb
lock
mov
aas
mov
aam
es
push
push
lret
lcall
mov
mov
push
xor
loopne
sub
adc
shrd
push
stos
add
push
sub
dec
sbb
pop
mov
sub
repnz
pusha
lret
inc
add
add
rolb
xor
shll
enter
rolb
or
add
or
adc
add
mov
pusha
sub
lock
add
push
or
xchg
add
mov
cltd
mov
add
dec
hlt
cmpsb
add
fprem
inc
add
cmp
and
xor
xchg
jns
sbb
pop
pusha
jo
inc
loopne
add
rcrb
mov
mov
sub
or
mov
pop
addb
push
out
xor
pop
push
and
cmpl
or
push
jo
jnp
or
ss
jg
icebp
add
stc
adc
xor
orl
add
lcall
add
add
add
push
roll
clc
add
movups
mov
mov
sbb
add
mov
add
dec
shrb
add
xlat
and
in
loopne
out
hlt
xchg
xchg
sbb
into
ljmp
sbb
pushf
add
stc
data16
loopne
sti
adc
push
in
arpl
push
or
xchg
nop
add
cltd
jl
mov
adc
in
push
add
dec
add
add
push
call
mov
pop
mov
adc
push
test
insl
out
rol
add
or
add
xchg
dec
pusha
sbb
jo
and
cmp
sbb
add
adc
sbb
jo
add
cmp
pusha
jo
mov
dec
pop
roll
inc
lret
mov
adc
adc
push
addb
pop
js
jp
jl
jle
adc
adc
xchg
adc
add
xchg
mov
add
xor
inc
jecxz
add
pop
lods
jns
add
inc
jle
arpl
add
mov
pop
or
add
add
mov
adc
add
pop
hlt
jb
cwtl
in
adc
sub
shr
mov
iret
and
add
negl
push
ds
pop
add
xchg
es
push
je
fisttpl
clc
addl
sbbb
inc
xchg
xor
add
cwtl
sbb
inc
add
jnp
add
rorb
rep
mov
and
out
mov
lods
push
pop
mov
xor
mov
cmp
lds
push
pop
add
ss
testl
push
sbb
and
mov
push
xchg
daa
adc
jp
sub
loopne
clc
or
movsb
fidivs
sub
add
ja
xor
jle
add
pop
cmp
ret
cmp
adc
inc
inc
inc
shlb
dec
add
out
idivb
mov
out
sbb
and
lret
add
mov
push
mov
mov
add
outsb
data16
jmp
lret
faddl
fmulp
and
push
movsl
pop
dec
add
inc
dec
ljmp
mov
and
mulb
inc
stos
xchg
aas
std
add
add
rcrb
cwtl
movsb
add
dec
inc
orb
jbe
mov
dec
xor
je
xchg
enter
pop
mov
xchg
cmp
aaa
loop
xchg
lea
inc
cli
cmp
movsb
cmp
inc
loope
jb
lods
div
inc
push
push
add
icebp
push
out
addl
invd
jb
jge
mov
adc
push
xor
dec
rdtsc
and
inc
loop
cwtl
sbb
mov
mov
jge
pop
dec
stc
fwait
add
mov
les
aas
lret
icebp
dec
and
sar
add
adc
add
push
mov
adc
inc
sub
out
enter
sarb
push
aas
adc
add
icebp
and
or
pop
and
inc
or
cmp
mov
es
cmp
or
sbb
fwait
add
ret
out
lahf
jmp
pop
shll
pop
cwtl
xchg
or
add
pop
ret
shrl
rcll
add
xor
inc
inc
mov
loopne
ljmp
jmp
push
mov
shrb
dec
add
xchg
inc
adc
and
fwait
jbe
clc
cmp
ficoms
xor
roll
fdivs
outsl
mov
nop
add
adc
add
sub
adc
mov
xchg
and
fs
cvtdq2ps
repz
rcll
mov
cmp
jnp
mov
mov
add
adc
inc
push
push
movsl
mov
inc
add
mov
aad
pusha
test
dec
stos
pop
call
movsl
jge
add
mov
add
int
sub
cld
mov
and
push
sub
push
cmp
xchg
xor
jo
mov
jb
lea
inc
repz
mov
call
dec
lcall
pop
sbb
insb
sub
in
pop
nop
sbb
adc
rclb
aas
cmp
add
jecxz
xadd
and
add
jmp
jne
push
mov
arpl
sti
dec
rolb
bnd
cmp
dec
dec
push
add
dec
mov
jg
jmp
and
xchg
push
lsl
popa
orb
nop
sbb
ja
mov
pop
add
mov
dec
jno
in
add
jl
lea
dec
adc
aad
pop
xchg
stos
test
rorb
mov
stc
adc
movsb
pop
inc
shlb
loopne
movb
subb
add
add
jne
or
pop
or
pop
sbb
pusha
ljmp
test
outsb
mov
add
mov
inc
inc
dec
jne
add
xchg
inc
aaa
call
out
fs
inc
sbb
in
ljmp
sub
push
xor
mov
outsl
adc
xchg
push
add
call
sub
adc
or
inc
add
loop
and
jne
jg
shlb
or
out
sub
add
call
shr
add
cs
mov
mov
mov
das
enter
push
jl
or
insl
cmp
xchg
stos
jb
jns
add
into
sbb
or
adc
loope
or
mov
js
lret
sub
xor
jo
rcrl
ja
int
xorl
insl
and
aam
add
pop
pop
and
adc
lret
mov
addl
adc
fiaddl
adc
mov
add
ud0
jb
add
inc
add
std
inc
in
xor
push
add
cs
and
andl
and
mov
pop
dec
dec
out
or
sar
mov
add
mov
push
jns
cmpsb
std
addl
out
sbb
jp
push
inc
out
pop
sbb
stc
fs
add
push
sbb
clc
jmp
push
add
insb
cmp
and
aam
js
inc
sbb
add
and
movsl
xchg
clc
in
fadds
sbb
int
test
je
mov
not
add
xchg
rorl
std
mov
ljmp
mov
push
and
andb
adc
lds
cmp
ret
jae
clc
add
sub
roll
adc
sbb
xlat
mulb
xchg
mov
imul
bswap
or
ret
lock
je
sbb
outsb
sub
sub
stos
mov
jbe
mov
add
xor
adc
movb
mov
enter
test
call
mov
rol
popf
xor
and
sbb
inc
mov
sbb
and
jp
imul
mov
cmp
add
push
xchg
xchg
call
popa
add
cwtl
pop
inc
in
addr16
cmp
test
lahf
jns
add
data16
mov
cwtl
test
xor
adc
cltd
xor
andb
test
dec
int3
sbb
cltd
aam
and
push
add
xor
cmp
adc
sbb
mov
popf
movsl
sub
mov
cmpsl
test
jbe
dec
push
out
add
push
sbb
xor
sub
shlb
pcmpgtb
inc
data16
inc
shlb
mov
cltd
xor
pusha
adc
das
xchg
nop
loopne
dec
push
enter
add
imul
pop
rclb
xor
scas
incl
mov
jno
dec
fmull
mov
pushf
int
add
dec
aam
adc
cmp
arpl
fsubs
add
aam
adc
push
sbb
dec
add
lret
add
mov
cmp
test
jmp
clc
mov
lahf
xor
xor
loopne
and
dec
outsb
jo
and
test
mov
jb
add
jo
dec
push
shlb
xchg
imul
inc
iret
movsb
mov
jle
cmp
add
cld
rclb
mov
insb
je
add
jno
or
xchg
cmp
push
rclb
add
in
dec
add
add
jb
xor
jns
dec
add
and
les
add
jg
mov
adc
add
sub
and
jl
lock
jg
push
add
jp
test
rorb
fdivr
hlt
sbb
add
adc
dec
sub
add
push
inc
push
mov
sahf
mov
ret
sub
decb
adc
sub
inc
les
xchg
pop
and
pop
xchg
mov
ror
lock
lock
incb
push
inc
ja
mov
adc
adc
add
xchg
mov
adc
int3
and
inc
hlt
add
cmpb
add
pop
adc
call
adc
in
shlb
push
xchg
fisubs
out
loopne
jns
push
or
es
ss
push
add
mov
and
aad
pusha
add
or
jp
mov
adc
and
dec
fs
andb
repnz
jg
jg
jg
jns
or
jnp
sbb
push
cmp
push
push
inc
scas
rolb
inc
in
sub
or
cmp
jns
and
dec
pop
adcb
int3
sti
loop
test
jge
cli
dec
push
cs
add
mov
and
scas
jg
jg
jg
add
or
and
pusha
push
aad
and
cltd
adc
adc
mov
mov
sub
pop
inc
jo
mov
mov
lcall
sub
out
adc
movsl
add
cmp
and
xchg
test
mov
mov
cmp
add
and
inc
int3
xor
jb
adcb
ret
loopne
inc
cld
add
outsb
cmpb
or
dec
dec
add
pop
inc
push
mov
test
mov
add
imul
outsb
cwtl
insb
xor
cmp
add
adc
je
add
jb
outsb
out
push
popa
cmp
andb
rcr
inc
mov
imul
add
xlat
sbb
outsl
outsb
xor
dec
xchg
inc
jbe
lods
roll
jle
sub
rcll
jo
jp
dec
xor
or
add
inc
fsubr
imul
xchg
outsl
arpl
sbb
test
addr16
in
in
add
fs
push
outsl
dec
xor
add
xor
in
add
pop
and
add
fidivrl
outsb
inc
push
or
add
jns
popa
iret
clc
jp
sbb
bound
or
inc
js
cmp
cmpsb
add
in
movsl
add
outsl
inc
nop
cli
push
add
fsubl
enter
ss
outsl
decb
int
or
add
movb
adc
push
aam
xchg
dec
and
sub
xchg
aaa
inc
push
jb
cmp
hlt
insl
jecxz
xchg
add
sbb
inc
push
pop
sub
or
push
add
inc
nop
xor
mov
aad
mov
hlt
addb
sbb
outsb
push
add
xchg
cltd
xor
add
xchg
movsl
adc
sbb
dec
data16
cmp
jecxz
xorb
add
ljmp
fs
push
or
adc
jp
mov
add
imul
add
movsl
xor
jne
adc
lret
int3
jns
push
nop
mov
movsb
rorb
inc
out
push
outsb
addr16
mov
scas
mov
jp
add
dec
fildll
sbb
jbe
sub
imul
int3
pop
push
nop
xchg
add
push
jbe
sub
cmpsb
add
fwait
adc
and
fiadds
add
insl
jo
inc
mov
lock
dec
push
outsl
test
dec
aam
fs
jg
pop
and
add
lods
sub
cmp
dec
sbb
xchg
adc
add
daa
xor
mov
add
cmpsb
into
movsb
push
inc
inc
add
adc
shlb
ds
add
adc
add
and
movsb
jbe
repz
jne
insl
xchg
xchg
sbb
aas
or
add
or
shrb
js
add
jns
push
cmp
add
push
mov
js
add
lret
mov
movups
dec
xor
xchg
fisubs
cmp
push
push
cs
lret
outsl
add
cltd
mov
addr16
jae
sbb
movq
inc
aam
push
scas
cwtl
xchg
inc
mov
ljmp
cmp
fwait
inc
jno
sub
jns
add
cmpsl
jne
jge
push
add
movsb
xchg
add
sbb
or
test
shlb
popf
shlb
dec
dec
adc
sub
scas
test
dec
lcall
sub
clc
int3
xor
jno
hlt
xchg
or
shrl
push
xlat
jae
sbb
fcmovb
add
mov
pop
add
int
push
jge
les
push
jb
and
ss
mov
flds
cmp
insb
call
inc
add
sub
mov
pusha
jne
push
scas
lds
inc
inc
addr16
mov
popa
arpl
mov
data16
add
push
stos
push
lret
xchg
jne
aad
fsts
inc
push
add
cld
sub
fidivrs
leave
andb
cmp
imul
sti
add
sahf
subb
push
out
stos
sbb
ss
mov
add
xchg
mov
add
inc
imul
inc
push
je
subb
sub
mov
out
orb
push
push
shrl
xchg
scas
add
mov
inc
dec
push
jnp
pandn
mov
dec
pop
dec
xchg
es
add
dec
sub
inc
setns
cmp
xchg
hlt
fs
jecxz
sbb
sub
and
scas
mov
pushf
call
inc
out
andb
dec
js
rclb
cmp
inc
cmp
test
push
icebp
sub
xchg
or
xchg
leave
cmp
push
into
push
pusha
mov
or
inc
insb
addr16
add
mull
imul
fbstp
dec
dec
xor
sub
test
cwtl
testb
mov
je
daa
aam
lods
add
push
scas
push
dec
jb
add
scas
outsl
ret
jae
add
sub
imul
in
dec
in
push
enter
arpl
mov
jae,pt
ds
pop
sub
nop
out
ret
pop
loopne
sub
hlt
mov
push
adc
scas
ds
les
mov
xchg
add
out
push
push
stc
or
nop
xchg
add
je
imul
test
rorb
jae
add
outsb
arpl
test
pusha
loopne
mov
cwtl
jge
das
xchg
fists
cmp
lds
or
push
sbb
lcall
dec
adc
pop
add
arpl
hlt
xchg
aas
push
xchg
push
inc
test
mov
xchg
insl
gs
aam
push
jns
pop
and
cmp
leave
arpl
repnz
jl
je
test
into
add
jge
xor
and
dec
addr16
ja
movb
mov
out
sbb
push
adc
mov
repz
add
movsb
sbb
aam
loope
je
pusha
mov
popa
int
out
lods
mov
or
mov
mov
lds
jo
add
les
out
addr16
scas
pushf
push
ljmp
add
test
add
loopne
outsb
add
pop
xor
or
sub
cmp
xchg
inc
cmpsl
inc
dec
out
leave
push
rcll
loope
jmp
mov
mov
stc
stc
fdivrp
out
out
stc
idiv
loope
push
xor
leave
push
rcrl
fnstcw
add
jmp
inc
leave
dec
rcll
pop
loope
jmp
jle
xchg
mov
xchg
stc
sahf
stc
cmpsb
stc
scas
stc
mov
mov
stc
stc
fdivrp
out
out
stc
idiv
clc
add
xor
je
jbe
add
jp
jl
jle
in
call
pushf
hlt
movsb
add
xor
xchg
shlb
add
lock
cmp
jne
test
loopne
aaa
sbb
cmp
out
xchg
cmp
daa
and
sub
mov
out
leave
jno
test
mov
xchg
jmp
mov
ret
jmp
loope
add
bswap
adc
add
dec
icebp
push
stc
pusha
leave
imul
flds
icebp
stos
push
lcall
cmp
je
jbe
js
test
jl
pop
adc
and
imul
xchg
lahf
xchg
stos
scas
dec
add
push
jo
ds
leave
pop
int
jmp
lock
add
je
jbe
cwtl
jp
add
and
rcl
sbb
add
loopne
rcrl
dec
fnstenv
jmp
test
call
cli
cld
or
add
in
inc
lock
clc
jb
sbb
cld
pushf
popf
test
mov
xchg
sbb
adc
and
push
addr16
xchg
jg
sbb
out
popf
fiaddl
loopne
call
dec
cmp
pop
cmp
cmp
aas
int
fldl
addr16
xchg
mov
add
dec
adc
add
inc
or
add
jnp
sahf
shll
or
sbb
out
push
cmp
daa
and
adc
mull
jno
adc
fnstenv
loop
idiv
xor
roll
cmp
jp
mov
addr16
mov
dec
aam
lock
xor
test
sbb
shll
adc
in
jns
lahf
hlt
subb
cmp
add
in
xor
jb
into
add
je
add
sbb
sub
leave
xor
cmp
rolb
push
stc
jb
jne
push
xchg
xchg
repz
dec
mov
ss
and
sub
mov
ret
dec
rorl
push
cmp
outsb
cmp
cmp
ret
aas
enter
in
jmp
aaa
stos
enter
add
inc
mov
add
xor
fisubl
pop
push
add
in
fnclex
cmp
ss
jmp
sbb
jbe
sarl
frstor
call
incl
add
loope
push
faddl
popa
cmc
inc
int3
push
add
in
mov
imul
subb
out
add
xchg
cmp
xor
cmp
cmp
cld
push
adc
and
jl
add
in
call
sbb
hlt
push
lods
cld
jae
sub
xchg
xchg
cmpsl
jle
jle
jle
jle
jle
pop
iret
nop
dec
lahf
fstps
pop
pop
incl
cmp
and
add
ds
aas
pop
in
adc
cwtl
push
pop
es
lahf
mov
pushf
inc
int
fstps
add
xor
push
cmp
jb
je
push
mov
rorb
xor
and
add
jmp
pop
cld
popw
je
jbe
js
pop
xchg
mov
xchg
lahf
sahf
pop
cmpsb
lahf
scas
xorb
cmp
pop
fmulp
out
loope
xchg
and
in
add
sbb
xor
popf
push
sbb
shrl
ss
roll
dec
loopne
xchg
sbb
cli
jle
outsb
fdivs
dec
xchg
aas
xchg
sbbb
add
ror
es
cs
jecxz
add
inc
repnz
imul
mov
cld
negb
jle
add
cmp
cmp
cmp
aas
stc
add
dec
add
adc
push
repnz
push
inc
rorb
leave
pop
hlt
mov
hlt
js
cmp
nop
and
cwtl
cld
mov
cld
mov
cld
sar
fdivr
loopne
rorl
ds
push
xor
mov
aas
and
mov
insb
add
pop
cld
push
jmp
jmp
lret
aas
sarb
aas
shrb
verr
call
add
fldenv
sub
and
cmp
inc
xchg
dec
mov
push
stc
cmp
stc
nop
stc
cwtl
stc
mov
xor
dec
rcrb
test
adc
add
aaa
jb
je
jbe
add
jp
jl
cwtl
ret
jo
jmp
orb
aas
jb
sbb
mov
rcrb
loopne
in
call
mov
cmp
cmp
sub
push
sub
cld
mov
loopne
call
stc
hlt
stc
clc
xor
out
add
cmp
or
outsl
add
push
inc
lahf
inc
pop
dec
rorl
sbb
repnz
add
js
cwtl
clc
mov
xor
mov
lock
lock
sbb
add
dec
or
unpcklps
js
mov
ds
pop
push
inc
aas
fs
push
jo
lret
lahf
mov
mov
lahf
les
js
andb
rcll
add
adc
sbb
sbb
and
stc
and
xor
push
jbe
and
insb
and
je
sub
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
add
jb
je
add
pop
sbb
aas
jb
je
push
sub
pop
cmp
fs
rep
xchg
mov
idivl
test
xchg
xchg
sbbb
rclb
rorb
fmul
fadd
lock
cmp
sbb
sub
sbb
iret
xor
cmp
sub
jl
sbb
leave
nop
and
loopne
adc
cmp
andl
lock
or
jbe
xor
cmp
test
inc
dec
stos
xor
cvtps2pi
nop
leave
xchg
sub
movsb
out
out
loopne
xchg
in
add
popa
sbb
je
cld
dec
std
add
cs
add
inc
add
dec
mov
jle
xchg
push
mov
ljmp
mov
aas
lods
and
outsl
imul
cld
mov
push
or
loopne
jb
jae
xchg
and
sbb
lcall
daa
pop
pop
push
xchg
testl
mov
lfs
in
call
shl
loopne
mov
or
adc
sahf
adc
sbb
push
pop
and
lahf
jo
jl
add
repnz
add
dec
lods
mov
add
mov
add
xor
xor
add
mov
ret
push
xor
aaa
dec
add
cs
scas
cmp
mov
ret
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
add
adc
push
and
cmovne
add
xor
int3
sbb
add
leave
cmp
dec
aaa
int
cmp
mov
jl
rorl
sbb
lahf
daa
lock
inc
add
dec
leave
mov
fsts
cltd
icebp
popf
stc
mov
in
lods
lock
sub
cmp
add
and
loopne
and
lret
outsl
data16
negl
add
out
xchg
aas
dec
daa
mov
test
add
in
clc
test
pop
mov
nop
adc
jo
jl
add
xor
pusha
insl
xor
ror
xor
mov
mov
jbe
dec
rorb
movsl
mov
iret
add
maskmovq
testl
rclb
jg
pop
pop
jae
cmp
add
cli
jl
add
outsb
mov
add
sbb
call
lock
and
mov
mov
inc
repnz
add
fldcw
loope
sub
aas
scas
aaa
fcompl
add
fs
add
ret
lock
aas
push
add
xor
inc
in
jl
cli
add
stos
mov
add
mov
ret
cld
shl
push
add
aas
sub
add
and
cwtl
jl
leave
push
xor
clc
add
out
loopne
xor
lods
add
pop
sub
inc
xchg
jmp
jl
ds
inc
add
les
sub
xchg
ret
aaa
mov
out
cmp
push
mov
adc
mov
call
push
cmp
in
enter
jo
add
in
xchg
mov
cmp
lret
shr
fs
sbb
pop
sbb
ljmp
push
pop
lret
add
mov
movsb
add
leave
mov
sub
push
insb
add
bound
imul
push
cmp
daa
cwtl
mov
cwtl
test
adc
push
ret
jbe
mov
push
faddl
xchg
jns
cmp
orl
shrb
dec
jle
xchg
scas
mov
in
add
and
cld
xchg
dec
pop
xorb
sti
shl
add
xor
in
cmp
add
pop
cmp
cmp
cmp
push
in
fwait
cmpsl
add
sbb
xchg
nop
adc
xchg
sub
cwtl
dec
mov
adc
sahf
fs
pusha
dec
insb
or
jl
cmpsb
and
mov
adc
mov
nop
or
add
mov
les
int3
mov
add
fcoml
pop
pop
mov
call
js
shlb
or
je
dec
adc
into
and
pop
sub
xor
cmp
inc
inc
fadds
push
sub
aas
pop
and
insb
xor
fcompl
push
cwtl
iret
pushf
inc
movsb
leave
test
or
and
fcoms
cli
cld
loopne
cmp
or
js
jp
dec
sub
mov
pop
iret
pop
lret
mulb
pop
cmp
mov
xchg
clc
and
pop
les
fsubrl
push
insl
add
cltd
dec
stos
mov
cmpsl
mov
mov
cld
and
stos
mov
and
xorb
xor
inc
mov
and
clc
pushf
pop
cmp
outsl
sub
call
leave
les
enter
daa
sub
movb
add
push
in
loopne
jne
jb
je
jbe
js
jp
adc
jmp
add
or
adc
add
ja
sub
repnz
add
out
in
jo
add
jo
je
adc
add
add
sahf
xchg
push
lock
cmpl
enter
mov
cs
pusha
test
add
add
dec
or
adc
pop
fsave
loopne
mov
xor
in
cmp
cmp
add
pop
dec
mov
or
add
jmp
add
daa
out
inc
xchg
cmp
cmp
jb
cmp
andb
adc
mov
inc
call
fcoml
pop
mov
rclb
sbb
in
call
testl
adc
movsb
dec
xorb
rcrl
pop
enter
ljmp
jp
shll
adc
sbb
cmp
dec
sbb
cmp
daa
test
ret
lock
add
cmpl
xor
dec
mov
dec
les
cmp
sub
push
inc
repnz
shrl
subb
nop
mov
mov
in
call
add
test
pop
popf
add
ret
clc
mov
add
ds
add
sub
push
clc
mov
js
std
add
xor
xchg
sub
lret
mov
add
sub
mov
in
add
jno
add
sbb
movlps
or
sub
shlb
sbb
inc
mov
push
add
repnz
adc
lods
or
rcrb
pop
mov
inc
sbb
push
and
rolb
in
add
hlt
mov
push
cld
subb
add
sub
sbb
lahf
movsb
mov
mov
cmp
jae
and
popa
fldl
pop
leave
psrlw
fptan
loope
xchg
xor
mov
mov
mov
jg
cwtl
add
mov
cmp
in
mov
dec
orb
xor
adc
cmp
xchg
jbe
cmpsb
mov
add
sbb
je
sbb
add
jnp
sbbb
mov
cmp
repnz
add
sti
add
xor
aas
mov
rorl
add
adc
pop
jmp
stc
and
daa
cli
inc
fsubrl
and
pop
aaa
cld
cmp
jo
dec
cmp
push
cmp
pop
sti
pop
packsswb
imul
bnd
adc
loope
gs
xchg
push
mov
push
pop
lret
sub
loope
xor
add
pop
movsb
insb
clc
jo
outsb
dec
js
mov
hlt
sbb
pop
xor
sti
add
sub
xor
xor
cmp
cmp
cmp
mov
xchg
scas
out
repnz
bound
cmp
popf
push
adc
cld
mov
js
pop
cwtl
cmovp
add
cmp
shlb
loopne,pn
jb
add
or
dec
adc
cmp
pop
mov
xchg
push
fdivl
cmp
aas
rclb
lret
loop
hlt
iret
clc
mov
pop
fcoml
ds
ljmp
cmp
into
jo
nop
cmp
jecxz
cmp
mov
mov
js
fdivl
cmp
loope
and
aas
inc
or
adc
testb
dec
sbb
mov
xchg
cmp
inc
jg
add
pop
mov
rcrb
push
or
xor
orps
adc
mov
int3
and
or
or
gs
nop
shr
shrd
cs
inc
pusha
test
add
int3
das
adcl
push
js
mov
mov
aaa
dec
inc
jo
bound
add
out
sti
add
cwtl
and
mov
stc
fprem
xor
jbe
pop
pop
or
cld
jp
loopne
and
xchg
mov
aaa
jb
je
pop
xchg
xchg
and
jmp
lock
lcall
adc
cmpsb
dec
mov
inc
ja
clc
outsb
popf
push
lret
adc
incl
aaa
xchg
pop
or
add
cs
add
pop
test
push
mov
sbb
mov
stos
mov
call
push
mov
iret
push
mov
pop
out
inc
hlt
xchg
xor
mov
in
mulb
leave
ja
jle
xchg
add
dec
stos
or
sub
mov
jbe
adc
and
lock
cmp
cmp
ds
cmp
and
stc
pop
in
es
rolb
cmp
cmp
in
lret
in
shlb
inc
mov
push
add
cli
adc
mov
ds
nopl
andl
add
mov
pop
jb
je
dec
adc
mov
and
ljmp
daa
scas
inc
mov
xchg
dec
mov
xor
loopne
imul
lods
mov
scas
add
mov
sbbb
or
loope
ljmp
idiv
stc
or
inc
push
outsb
leave
jb
add
sub
ds
sbb
aas
aad
add
mov
add
mov
xor
dec
pop
or
loope
add
add
clc
or
adc
add
iret
in
es
sub
cmp
out
add
aaa
xor
push
mov
cmp
daa
add
out
repz
pop
and
es
dec
add
leave
stc
sarl
sub
or
add
scas
mov
das
add
test
push
inc
cld
dec
inc
add
push
ret
sti
les
pop
mov
loope
mov
mov
loope
xchg
js
call
lock
cmp
push
enter
xor
cmp
ret
mov
dec
repnz
add
or
out
das
pusha
xchg
add
pop
nop
dec
push
mov
mov
subb
out
add
mov
test
add
cmp
cmp
mov
push
push
pop
xorl
jl
pop
or
aas
out
repz
sub
push
lods
pop
push
je
or
or
outsb
rcrb
xor
fsubp
add
add
push
add
outsb
mov
add
xor
in
cmp
add
jge
mov
popf
flds
cmpsb
and
sub
jge
cwtl
popl
int3
pop
shrb
pusha
jge
add
and
pop
daa
jne
push
stos
mov
add
outsl
xor
es
xchg
enter
clc
into
sub
add
jo
xor
cmp
or
xor
rcr
aas
fldl2t
add
sub
lock
add
iret
inc
pop
loopne
xchg
add
ret
enter
push
lock
repnz
add
mov
dec
xchg
xchg
imul
cmp
cmp
cmpsl
ja
lret
lock
sti
cld
or
scas
sbb
daa
sub
cmpsl
push
mov
jecxz
add
add
xchg
sbb
mov
add
rclb
add
push
cmp
push
add
aas
stos
add
in
scas
add
xlat
inc
xchg
and
jo
or
cmp
sbb
mov
xchg
lock
js
jl
les
or
jle
add
cwtl
jno
jae
jne
arpl
add
dec
pop
inc
or
jbe
add
adc
daa
aaa
arpl
bound
call
shl
xor
movsl
out
jbe
jnp
testb
sti
or
or
xchg
add
push
and
add
fs
pop
xchg
jle
or
cmp
lcall
rol
mov
push
push
sbb
andb
add
and
lds
add
jg
mov
cmpsb
arpl
lret
and
xor
cmp
arpl
daa
xor
xor
fnstenv
jmp
testb
adc
inc
lods
jae
xor
add
pop
sbb
pop
sbb
mov
sub
out
ret
add
xor
aas
mov
sbbl
shlb
xchg
add
cmpb
std
ret
pop
add
mov
or
fcmovu
dec
in
pop
call
das
mov
pop
add
divb
adc
add
test
shl
lea
repnz
cmpsl
mov
mov
in
jmp
pusha
movb
lcall
add
scas
test
fs
jl
and
xor
xor
pop
cmpsl
fiaddl
cmp
call
inc
inc
int3
add
adcl
add
dec
ss
lcall
and
orb
and
mov
int3
mov
fmull
shrb
xor
mov
xor
xchg
add
dec
add
pushf
jmp
xchg
or
push
pop
fs
jl
push
ret
popa
test
call
push
add
and
clc
pop
or
test
and
lods
int3
or
dec
cmp
je
jbe
dec
cmp
rol
xor
add
mov
outsb
or
dec
popa
push
fnstenv
jl
das
lahf
xchg
lock
mov
mov
add
loope
add
xor
lock
ss
test
out
cli
inc
add
cmpsb
nop
jmp
or
mov
ucomiss
bound
or
or
mov
mov
in
xchg
dec
add
ds
cwtl
sti
cmp
add
fs
cmp
add
aas
scas
es
shl
in
add
pop
add
add
xchg
hlt
mov
clc
or
pop
decb
cli
sbb
test
pusha
enter
les
loopne
and
fsubs
adc
mov
dec
js
adc
out
aaa
subb
inc
cmp
pusha
aas
js
adc
gs
movsb
dec
add
sub
call
ret
inc
loopne
loop
inc
loopne
inc
pusha
js
loopne
aam
icebp
popa
add
sar
fiaddl
cmp
rclb
lods
sbb
aas
sbb
das
sub
xor
shll
call
add
pop
mov
lock
insb
dec
outsb
cmpb
jl
shll
hlt
ret
sbb
pop
inc
ds
dec
inc
pop
add
aas
ret
imul
lock
mov
out
add
pop
xchg
ror
add
jb
pop
test
call
xor
add
mov
add
rorl
in
iret
dec
add
rorl
add
push
popa
shlb
jne
jge
xor
fs
mov
add
push
push
cmp
dec
xor
add
add
gs
add
repnz
add
inc
loope,pn
or
fsts
add
clc
xchg
movsb
and
xor
cld
xchg
and
mov
push
xor
or
out
aaa
orb
aas
iret
add
inc
dec
dec
cwtl
leave
push
cmpsl
add
jp
cmc
add
outsl
je
pop
movsl
cmp
add
aad
popa
int3
adc
jo
mov
fs
and
sbb
fucomip
loopne
add
cmp
add
sub
jb
and
adc
stos
push
in
add
icebp
dec
cmc
mov
js
add
cmp
add
sbb
in
and
push
lock
sub
dec
cmp
add
cmp
cmp
in
add
inc
int3
mov
xor
pop
fwait
adc
xor
adc
clc
add
cmc
rcrb
and
fdivs
push
push
push
dec
or
pushf
dec
pop
repnz
add
xor
nop
mov
pop
mov
push
pop
lret
pop
shrb
cmp
mov
adc
add
and
inc
push
pop
pop
ret
dec
test
shr
lahf
cmp
jb
dec
out
add
or
sbb
cld
hlt
insb
or
aam
jno
adc
cmpb
lock
pop
bound
push
add
sub
arpl
jns
adc
or
xchg
dec
sub
iret
jo
jle
dec
ljmp
mov
adc
dec
push
fsubl
cmpsl
jle
sbb
sub
pop
pop
dec
subl
mov
adc
pop
addb
pop
lahf
adcl
jmp
sbb
add
cli
fdivrs
sbb
pop
mov
add
ret
add
or
pop
push
sarb
addb
idiv
and
inc
ljmp
repz
pop
pop
or
clc
and
xchg
cmp
adc
sub
add
in
seto
ret
and
sbb
xchg
and
lret
add
outsb
push
pop
test
add
imul
add
dec
sbb
adcb
int3
mov
pop
add
jo
xchg
xchg
or
cmp
pop
shrb
push
push
repnz
pusha
adc
in
pop
hlt
cld
aaa
lahf
pop
add
mov
sbb
push
pop
xchg
push
mov
mov
mov
call
xchg
add
mov
sub
pop
jns
fmuls
pop
sub
loope
pop
test
add
rolb
sub
inc
je
pusha
pop
popw
inc
cmovo
popl
inc
xor
les
mov
adc
xlat
movsb
add
inc
enter
add
xchg
nop
add
ds
pop
mov
fiaddl
mull
adc
call
mov
sub
stos
mov
loopne
add
scas
xor
add
mov
sti
and
sahf
xchg
push
inc
lock
jns
clc
mov
cld
sarl
or
aam
mov
lahf
and
cltd
leave
add
insl
jg
int3
aas
lock
dec
pcmpeqb
push
push
loope
push
stc
add
mov
imul
pop
pop
bnd
daa
xchg
inc
cmpsl
lods
xchg
dec
add
icebp
and
add
sub
push
loope
sub
add
jo
es
movl
mov
sub
aas
loopne
or
add
js
pop
fcmovb
xor
outsl
addl
xor
or
cmp
loope
cmp
or
cmp
and
cmp
std
dec
inc
add
or
pop
dec
sbb
into
pop
xor
mov
lods
mov
shl
rclb
ljmp
sbb
pop
mov
add
out
in
loope
cmp
mov
js
leave
test
push
inc
add
sbbl
div
and
loop
add
dec
js
add
sysenter
or
dec
lret
lods
cmp
or
ss
xchg
add
and
and
addr16
mov
mov
es
cmp
mov
bnd
cmp
shlb
push
test
aas
inc
jle
add
jnp
mov
call
popf
shll
adc
jo
jge
or
je
jbe
js
jp
and
jle
and
sub
aas
dec
add
iret
pop
leave
arpl
push
jae
xor
cld
mov
xchg
movsl
mov
mov
imul
loop
or
xor
xchg
sbb
loopne
xor
or
addl
jp
xor
jbe
push
pop
lods
xchg
mov
stos
inc
mov
scas
shlb
xor
in
xchg
add
adc
fcompl
ss
cmp
jno
xchg
cwtl
je
aaa
add
sbbl
inc
shll
add
imul
pop
inc
add
cmp
dec
dec
jle
add
dec
jbe
popf
js
paddd
cmp
cmp
ret
inc
fstpt
add
outsb
push
cli
sub
add
out
lods
lahf
add
mov
jecxz
cmpsb
pop
clc
push
add
sub
mov
add
jo
cltd
xchg
mov
cld
in
aaa
test
jae
outsb
cmp
xchg
dec
sbb
xchg
lods
lock
push
popa
addb
xchg
dec
add
out
or
pop
xchg
mov
xchg
mov
in
lods
mov
sbb
punpckhdq
or
pop
leave
outsb
add
dec
push
cmp
jb
fsincos
cmp
clc
xor
mov
and
test
or
jo
adc
pop
add
or
loope
pop
add
jg
subb
stc
xor
push
dec
daa
loop
add
clc
cld
and
sbb
and
mov
lock
xchg
inc
es
xchg
pop
add
push
mov
jmp
js
cmp
loop
add
xchg
jge
pop
adc
loopne
push
mov
dec
pop
ret
sub
ss
add
pop
mov
mov
xchg
test
bsf
shr
lods
div
add
pop
test
pavgb
fsubs
add
sub
jp
xchg
out
adcl
add
pop
shrb
push
pop
sbb
popf
xor
sbb
xchg
inc
pop
in
xchg
and
fimull
popf
xchg
scas
add
movsb
shrl
push
fldt
pop
xchg
pop
sub
cmp
test
call
xor
ljmp
imul
cld
xchg
daa
stos
test
mov
loopne
mov
sbb
sbb
mov
add
in
inc
xor
pop
pusha
pop
pop
adc
leave
fcmovnbe
call
or
mov
fadd
xor
xchg
sbb
add
and
hlt
pusha
push
cmp
jp
add
mov
fsubrs
push
dec
ja
cwtl
je
movsb
hlt
add
mov
and
pop
in
jns
out
mov
rorb
dec
cmp
add
leave
js
shl
and
jecxz
mov
dec
fadds
adc
cmp
xchg
test
push
pop
jbe
outsl
inc
jbe
jnp
addl
xchg
stc
lahf
andb
int3
repz
add
fnstsw
ljmp
push
mov
xorb
lcall
dec
add
push
xchg
pop
loopne
add
arpl
add
or
xor
lds
and
add
dec
add
daa
jo
popa
or
add
mov
mov
mov
aaa
xchg
cld
sbb
mov
loopne
add
pushf
cmp
cld
int3
rolb
push
hlt
inc
dec
popa
mov
das
rclb
xchg
icebp
test
enter
dec
ljmp
fisubl
mov
iret
cmp
cmovs
shl
ds
cmp
lahf
add
das
add
or
aas
sbb
adc
jo
and
dec
add
rcl
fcom
es
mov
xchg
push
dec
xchg
je
dec
cmpb
or
pop
nop
lods
cmp
cwtl
loopne
mov
push
dec
inc
pop
subb
xor
sub
outsl
popf
cwtl
ds
outsb
cmpb
add
ljmp
in
dec
push
add
dec
in
popa
push
push
cmpsb
cs
in
add
dec
stos
or
push
mov
adc
dec
nop
add
iret
call
jno
clc
add
mov
push
in
lcall
xchg
xor
add
push
or
sub
fidivs
hlt
cmp
cmp
sub
pop
cmp
cwtl
xor
mov
add
push
pop
sub
adcl
nop
add
xor
push
xchg
fsubrp
in
ds
roll
movsl
je
out
and
ret
or
inc
fmuls
test
aam
loopne
into
call
das
cmp
pop
add
in
sbb
cmp
addl
add
pop
xor
loopne
push
ret
pop
add
pop
loop
idiv
adc
in
cmp
jno
jne
jns
xor
xchg
add
dec
sub
shrl
insb
mov
loopne
xchg
mov
je
ljmp
cmp
cmp
lock
ret
add
das
pushf
in
fwait
cmp
push
mov
bnd
xchg
add
adc
pop
mov
dec
xor
mov
add
into
cmpsb
leave
stos
icebp
push
inc
add
mov
pop
incl
cmp
or
movsl
jae
jo
or
adc
adc
add
sbb
fs
and
es
and
dec
push
addb
mov
pop
scas
ret
fadds
mov
flds
adc
or
xor
pop
add
inc
ljmp
in
xor
jne
add
cmove
add
xchg
js
jle
xchg
popf
mov
mov
xchg
add
test
call
mov
cs
leave
lret
jo
sbb
aaa
add
mov
and
les
mov
inc
inc
xchg
dec
addl
repnz
popa
orl
das
ret
aam
adc
inc
xor
cmp
dec
xchg
dec
out
shrb
sub
lock
add
icebp
cld
adc
das
test
lods
push
hlt
jno
call
xor
pop
add
dec
ret
loope
xor
in
inc
push
sbb
add
clc
and
pop
pushf
stos
push
or
xor
test
fs
sbb
insb
cmp
je
test
mov
add
lret
aaa
ljmp
push
add
mov
lock
jp
cwtl
inc
dec
insb
add
inc
mov
cmp
repnz
loopne
rclb
aam
pop
cld
pop
and
or
and
loope
add
adc
clc
cmp
xor
rolb
push
xor
add
js
shl
push
xlat
cli
inc
add
cmp
add
fisubrs
jg
das
push
xchg
scas
call
adc
sub
lods
in
cld
aas
lret
and
and
add
cmp
cmp
cmp
add
rcll
push
add
outsb
ror
jmp
fs
aam
add
xchg
in
mov
sti
cld
add
xchg
test
add
inc
inc
icebp
dec
cmpb
lret
add
dec
dec
xchg
sub
cli
add
adc
mov
sahf
pop
add
fs
mulb
xchg
shl
fucom
rep
sbb
mov
andb
xor
jl
cmp
pop
ss
add
xor
add
ret
repnz
add
in
adc
lahf
add
nop
or
adc
sub
inc
add
jl
mov
mov
push
repnz
xor
fcoml
xchg
add
cmp
leave
sub
rolb
daa
bound
add
jo
movsl
cmp
shll
in
sbbl
lock
adc
push
das
jge
dec
xchg
out
mov
inc
fisubl
add
cmp
push
bound
dec
sbb
adc
rcr
pop
cmp
mov
add
cmpb
daa
stc
push
add
or
fsubrs
push
pushf
lret
cmpsb
and
sar
daa
loope
jo
dec
cmc
lret
js
and
scas
sub
mov
out
in
add
or
rcr
je
sbb
jp
jl
dec
xchg
push
or
pop
les
sub
mov
adc
cmpl
cmp
inc
add
pop
lret
insb
daa
add
dec
xchg
shlb
xor
xor
lock
sarb
or
sbb
bsf
pop
add
int3
cmpsl
fadd
jecxz
and
icebp
add
sub
imul
jg
or
mov
add
or
push
jg
xchg
xchg
mov
mov
repnz
pop
or
in
xor
xchg
mov
dec
pop
in
sub
enter
mov
js
jle
nop
ficomps
xor
loopne
xchg
incb
cmpsb
mov
pop
mov
jle
pop
bnd
jl
sbb
addb
xor
loope
je
cmp
add
pop
shlb
repz
jp
in
xchg
mov
test
lret
shl
loop
inc
pop
lock
daa
pop
inc
outsb
addr16
jle
test
aas
mov
xchg
stc
mov
or
xchg
cmpxchg
fnstenv
out
add
dec
and
mov
test
or
negl
cmp
xchg
add
popa
sti
orb
dec
add
mov
sbb
add
lock
scas
imul
add
leave
pop
push
pop
sbb
add
das
push
not
pop
js
mov
pop
cmp
aam
scas
mov
mov
jecxz
cli
mov
pop
cmp
mov
push
add
xchg
das
or
cmp
mov
mov
jl
push
stc
hlt
clc
mov
clc
add
imul
adc
cmp
lods
loop
mov
sbb
test
xor
aas
sub
daa
xor
sbb
cld
mov
je
pop
insl
lcall
mov
lahf
loopne
in
lret
xor
hlt
lcall
inc
dec
or
sahf
adc
adc
hlt
sbb
xchg
sub
nop
add
cmp
rcrb
lldt
cld
push
jl
pushf
and
fs
or
movsb
jle
adcb
aam
aam
ljmp
xchg
push
orl
lahf
scas
pop
je
aas
jl
andb
mov
nop
cld
xchg
sahf
pop
mov
pushf
mov
sub
add
cwtl
test
fnstenv
stc
pop
je
push
jo
adc
scas
test
mov
fsubl
test
les
mov
sub
mov
add
xchg
sbb
cwtl
in
add
aad
stos
adc
add
adc
mov
jge
add
cmp
das
into
push
rcrl
pop
push
pushf
mov
xchg
loope
fisubrs
or
and
js
lahf
pop
add
add
add
sbb
clc
inc
cmp
subb
js
add
dec
call
test
rolb
add
mov
in
jno
pushf
add
jp
pop
push
push
cmpsb
add
pop
fsubrs
cwtl
add
dec
shl
push
inc
je
add
insb
add
add
ss
xchg
shl
das
enter
sub
xchg
pop
xchg
aad
insl
push
xchg
sbb
sub
or
call
ret
in
inc
add
push
jp
mov
adc
push
int3
xchg
roll
add
add
dec
add
jae
add
xor
xor
in
daa
xchg
inc
xchg
das
jmp
cli
cmp
loopne
inc
popa
push
inc
dec
stc
dec
dec
push
adcb
cs
add
adc
push
add
xchg
data16
fxtract
loope
fidivrs
or
pop
inc
mov
sti
rcrl
jmp
cs
push
lock
adc
and
or
mov
subb
jo
aas
pop
dec
add
addl
mov
aas
test
xchg
add
push
loop
ja
mov
dec
xchg
mov
and
adc
add
inc
les
mov
adc
mov
or
push
adc
sbb
mov
dec
xor
or
fdiv
inc
sub
pop
or
hlt
and
mov
int3
add
dec
fsub
xor
push
in
ss
stc
cmp
mov
dec
fs
push
popf
jg
or
xor
jle
dec
mov
add
jne
call
pop
fsubl
dec
enter
in
pusha
jp
hlt
sarl
sbb
jmp
push
aas
xor
das
cmp
mov
test
pusha
mov
jnp
mov
push
nop
adc
cwtl
dec
pushf
daa
movsb
shrl
add
nop
out
les
pusha
add
add
je
pop
and
sub
lcall
add
mov
adc
je
fdivrs
xchg
push
add
and
sti
jmp
mov
jg
lods
pop
xorb
les
pop
int3
xorl
jmp
xchg
jo
push
idiv
add
and
pop
sub
negl
rol
fwait
jae
add
ret
dec
cmpsl
lock
dec
ljmp
mov
push
xor
rcrb
xchg
xor
sub
stc
rcrb
das
or
mov
and
xor
add
dec
lods
add
mov
add
adc
call
adc
loope
in
cmp
clc
add
and
dec
inc
lock
dec
mov
adc
lods
outsl
cmp
mov
push
loopne
aam
stc
nop
add
pop
pop
sub
pushf
sub
cmp
push
add
xor
push
jmp
pop
adc
push
loop
mov
xchg
add
sub
mov
sti
and
ja,pt
lea
daa
push
call
cli
fadd
sbb
int3
adc
call
sub
test
mov
mov
push
push
push
inc
mov
push
cmp
sbb
je
mov
mov
sbbl
movsb
lds
jbe
inc
ss
push
lea
sbb
pop
add
add
add
loopne
dec
add
mov
popa
cmpb
push
push
aas
and
add
loope
add
repnz
add
xor
push
addl
test
sbb
jno
inc
jo
sbb
test
cmp
orb
push
push
add
or
push
add
pop
lcall
jo
sub
push
test
mov
add
pushl
movb
ret
test
rcrl
inc
mov
aad
inc
aas
xor
or
leave
je
sbb
sbb
jmp
inc
dec
jmp
sub
addl
jae
jl
fisttpll
loopne
fcoms
dec
push
ss
add
add
movsl
sbb
movsb
add
mov
pushf
and
inc
sarb
or
ljmp
push
push
xchg
dec
popa
loop
sbb
shl
int3
ret
call
mov
fistl
aas
je
add
shr
jge
xor
rorb
add
addr16
add
pop
add
shrb
push
add
cmc
sbb
push
or
xchg
lea
loop
jbe
fcoml
popa
mov
add
rclb
jno
pop
push
cli
ret
test
and
addl
es
push
push
lock
inc
outsb
dec
adc
mov
push
push
cltd
inc
fdivrs
jnp
add
in
sbb
jle
sbb
cli
mov
or
push
mov
andb
fdivrl
push
sbbb
inc
push
mov
sub
jne
and
mov
cwtl
cltd
shlb
int
adc
jmp
cmp
fcoml
jne
pop
add
dec
shl
add
jnp
loopne
add
js
pop
call
adc
test
pop
jmp
push
push
mov
movsb
pusha
xchg
dec
mov
add
xor
fs
inc
adc
flds
adc
cmp
add
das
add
or
or
cmc
lret
xchg
add
lea
adc
add
mov
sub
daa
xor
in
mov
jbe
rolb
add
lea
popf
inc
sbb
cwtl
pop
add
xchg
adc
pusha
test
ja
out
movsb
add
fldcw
add
sbb
add
les
add
fldcw
shrb
inc
lea
ja,pn
mov
push
insl
dec
xchg
push
jb
sbb
call
sahf
mov
add
pop
xchg
sbb
loopne
xchg
inc
jne
add
inc
mov
sub
jecxz
xchg
mov
or
shrl
test
jnp
cli
pop
mov
xchg
adc
scas
jno
add
outsb
repz
in
xor
inc
add
inc
aaa
pop
inc
mov
popa
sub
and
xchg
faddp
and
testb
in
std
nopl
mov
fdecstp
and
hlt
fcoml
pop
es
add
lret
mov
xchg
push
add
lock
and
out
insl
hlt
push
push
pop
cmpsl
and
pop
std
pop
stos
clc
lcall
inc
sub
mov
pushw
int3
rcrb
jb
andb
scas
cmp
hlt
movsb
loope
and
push
test
adc
mulb
xchg
leave
pmaxsw
jne
mov
add
mov
pop
add
push
scas
cld
psubsw
ljmp
pop
pop
mov
sbb
mov
or
xorl
pop
mov
jno
mov
add
pop
fwait
movsb
add
jae
cmp
outsb
sbb
dec
out
adc
add
ljmp
dec
cmpsb
sbbb
jno
xchg
mov
mov
jns
mov
pop
add
inc
xchg
xor
add
push
into
cmp
aad
cmp
nop
shlb
adc
sbb
xor
add
jge
icebp
ds
scas
fsubrl
push
push
insb
mov
sarb
mov
outsb
cmp
add
decb
adc
push
add
loop
pop
sub
inc
in
addr16
adc
roll
shlb
dec
ss
mov
in
cmp
xor
cwtl
pusha
pop
out
lret
pop
adc
test
shrl
inc
pop
ja
push
popa
mov
and
push
pop
sbb
jg
xor
xchg
rol
hlt
pop
pop
aaa
dec
sub
pop
icebp
int3
mov
fwait
inc
xor
shlb
add
xchg
jle
sbb
jmp
mov
out
mov
sbb
loopne
jp
inc
ret
or
add
repnz
cmp
push
jecxz
mov
add
xchg
stos
add
pop
sub
leave
popa
jle
sub
jns
pop
mov
adc
sub
in
mov
add
and
push
negl
dec
loop
call
sub
add
adc
add
es
add
and
mov
pop
shll
leave
shrb
jg
pop
push
xor
jo
inc
in
push
and
mov
sub
sub
push
in
in
lcall
xor
daa
jge
jg
mov
enter
cmp
cmp
xchg
jae
or
or
lds
jno
adc
pop
or
je
push
sub
clc
pop
bound
jmp
ret
xorl
call
mov
inc
leave
rclb
sub
popf
lock
jmp
clc
pop
test
mov
lods
xor
push
jge
xor
push
add
or
inc
sbb
clc
jg
add
rcll
jge
and
xor
add
add
dec
stos
mov
mov
push
pop
in
sbb
iret
cld
popa
add
or
jns
das
adc
stos
xchg
lods
cmp
pop
push
imul
push
sub
or
imul
sbb
jo
inc
js
loop
icebp
jae
cmpsl
inc
jne
mov
sub
sti
fs
push
ja
jo
imul
dec
loopne
inc
push
and
push
cmp
loopne
cmp
ds
fs
scas
fwait
inc
jecxz
jg
fists
and
jne
fs
shl
bound
loop
mov
pop
jns
mov
and
or
divb
push
fs
mov
lock
shr
insb
rorb
in
sub
add
icebp
addr16
out
std
stos
cmc
xor
dec
outsl
inc
shrl
out
daa
dec
outsl
mov
iret
push
movsb
mov
add
cmpsb
add
xchg
jle
add
and
add
add
add
fdivl
ficoml
lea
dec
push
pop
icebp
adc
lahf
daa
lret
cmp
mov
jb
lods
fdivs
out
dec
xor
and
fdivrl
nop
push
jno
cmpsl
loopne
adc
insl
mov
jecxz
jnp
ret
push
std
fimull
rorb
sub
clc
cmp
sub
mov
cli
imul
in
test
mov
fldl
loopne
out
jl
repnz
sbb
pusha
in
cmp
mov
lret
xor
xchg
lcall
and
icebp
subl
pop
je,pt
cld
lds
gs
cmp
xor
lcall
and
popa
into
pop
sarl
lea
out
jge
subb
loopne
imul
int3
pop
clc
and
stos
and
fwait
int3
and
xchg
out
icebp
cld
xchg
add
pop
fstl
xchg
pop
dec
loope
daa
and
test
push
bound
jle
push
xorb
mov
push
int
push
fcmovne
lea
enter
mov
sbb
sbb
adc
cli
push
lods
inc
loopne
je
push
mov
stos
push
sbb
pop
jp
into
mov
dec
mov
imull
sub
mov
stos
cltd
dec
ja
push
test
scas
pop
roll
cmpsl
fistpl
faddl
das
in
pop
mov
scas
push
push
iret
imul
fdivrl
lods
rorb
push
cli
mov
mov
mov
pop
pop
dec
sti
stos
mov
mov
adc
mov
ljmp
add
mov
clc
mov
xor
dec
sbb
cmpsb
aas
add
je
mov
jbe
les
hlt
push
xchg
jg
mov
aad
mov
and
inc
rcl
rcr
fwait
adcb
jnp
push
push
into
call
pop
dec
sub
push
inc
rcl
jl
notl
pxor
jae
or
arpl
mov
jg
fdivrs
sub
lret
jmp
sbb
idivl
fbstp
jle
in
cltd
rcr
and
movsb
outsl
cld
jne
inc
mov
orb
xchg
jle
sbb
pop
jne
push
mov
mov
insb
adcb
xchg
cmp
or
lods
push
test
xchg
push
subb
push
sbb
dec
push
clc
in
cwtl
ss
test
pop
push
stos
jp
jns
sahf
addr16
es
enter
jne
fistl
ret
sub
mov
in
sub
cmp
lahf
pop
push
inc
push
push
xchg
mov
rolb
cwtl
stos
cmc
stc
cmpb
push
shrb
bound
repnz
rcrl
mov
movsb
mov
push
sti
jecxz
repz
push
ret
push
insb
adcb
int
ja
and
or
pusha
and
cmpl
cltd
dec
xor
mov
push
test
inc
cmc
hlt
xchg
shrd
bound
pusha
jns
jle
jecxz
adc
or
shll
jp
xchg
mov
adc
and
pop
jmp
aas
sub
movsl
jg
xor
and
cwtl
add
scas
and
loopne
dec
mov
int3
fstpt
xchg
out
sbb
gs
xor
mov
and
hlt
mov
outsb
mov
xchg
call
ror
mov
ljmp
pop
dec
add
pop
and
mov
mov
add
loopne
decb
mov
jg
aam
adc
inc
and
dec
insb
and
lock
shrb
dec
aam
sti
add
fwait
in
push
iret
cmp
add
dec
or
mov
adc
out
mov
icebp
lds
cmp
inc
xchg
dec
data16
scas
dec
lock
jl
clc
out
pop
popa
jg
sbb
dec
pop
ja
mov
notl
sub
sbb
call
add
mov
jae
add
test
add
cmp
icebp
aaa
mov
or
test
gs
pop
addr16
in
mov
loope
lcall
xor
test
adc
xchg
sbb
pop
push
sbb
jmp
cmp
mov
push
add
insb
xchg
jl
jb
iret
setbe
icebp
leave
movsl
hlt
jno
push
lods
cmp
addl
arpl
push
mov
pop
sbb
mov
das
cmc
out
inc
adc
push
sbb
or
mov
push
adc
xchg
mov
int3
decl
sbb
test
pop
out
in
mov
lods
adc
fisttps
cmp
aas
int
xchg
aaa
jmp
in
hlt
cld
cwtl
aas
adc
cmp
sub
movsl
test
pop
cmp
fxch
or
adc
xchg
xchg
xchg
pop
call
xchg
lahf
fs
jns
mov
sti
sahf
jle
cwtl
stos
mov
dec
xchg
aad
int
xchg
test
inc
int
push
mov
add
ss
fsts
enter
sub
lret
cld
scas
test
mov
jae
mov
push
mov
test
mov
les
jecxz
sub
mov
in
call
ss
aaa
push
pop
js
cmp
sbb
ret
adc
pop
sbb
repnz
aam
loopne
jge
push
int
mov
dec
subb
hlt
sub
cmp
jecxz
sub
and
jp
pusha
aaa
mov
and
adc
je
repz
lock
xor
negb
stos
sbb
dec
mov
dec
imul
inc
mov
je
test
adc
iret
ds
ss
push
xchg
mov
adc
ret
mov
lret
pop
push
divl
add
enter
sub
sti
sbb
mov
loop
gs
loope
mov
in
cmp
xor
aas
pusha
xchg
cmp
xchg
nop
jb
mov
and
mov
insl
out
adc
cwtl
jg
pop
adc
int3
test
pop
test
out
outsb
mov
adc
fwait
and
xchg
pop
xor
mov
and
push
xor
push
out
xchg
inc
enter
sahf
dec
jns
les
idivl
mov
mov
cmpsl
je
fistl
mov
sbb
cmpsb
or
sbb
stc
pop
dec
and
pop
imul
adc
sub
cmp
ficoms
push
sub
and
addb
jns
xchg
repnz
or
cmp
mov
imul
scas
cmpsl
mov
es
pop
push
rolb
sbb
outsb
int3
sti
icebp
loope
dec
jns
xchg
mov
dec
insl
mov
dec
add
ds
lods
lds
mov
cmpsb
out
addr16
xor
aas
xchg
fs
cmpsl
imul
int3
pop
mov
pop
daa
inc
xor
jnp
mov
sub
mov
jns
shr
xchg
dec
divl
aaa
out
js
pushf
push
test
jbe
lds
mov
xchg
add
push
mov
pop
lret
xchg
push
loop
movsb
inc
inc
and
mov
lods
and
fisttpll
add
lds
mov
mov
ds
adc
incl
inc
pop
jne
lock
int3
out
inc
mov
dec
loop,pn
or
aaa
out
mov
ret
in
fisttps
mov
add
pop
cmp
or
setl
sbb
xor
outsb
sbb
rorb
int3
sbb
jg
add
jo
pop
cmp
xor
rcrl
cmp
fimuls
mov
sbb
mov
or
repz
sti
jb
scas
mov
mov
dec
pop
out
mov
fmuls
movsb
loope
ret
pop
dec
ret
mov
cmp
add
scas
movsl
dec
dec
dec
scas
xchg
xchg
loope
pop
scas
pusha
jnp
pusha
cwtl
sbb
nop
lahf
jp
mov
jmp
mov
mov
fwait
push
jns
pop
jmp
push
xchg
mov
add
xchg
leave
aas
test
xchg
jno
shr
or
sti
cmpsl
pusha
cmp
hlt
sub
add
jne
test
cmpsl
mov
in
jle
rolb
jb
pop
xor
adc
dec
pop
imull
out
cmpsl
aas
push
xchg
inc
stos
js
mov
sub
lcall
and
ja
cs
rolb
scas
scas
ret
inc
mov
aas
xlat
mov
xor
aad
ljmp
int3
into
push
jmp
jnp
pop
lods
and
jnp
test
dec
xchg
sbb
adc
adc
lods
ret
fdivs
lds
bound
push
icebp
mov
dec
fdivrl
sbb
lahf
mov
pop
adc
sub
cmc
out
leave
cmpsl
dec
test
or
inc
mov
sarl
stos
xchg
rcll
arpl
into
xchg
cmpl
hlt
int
jnp
das
sbb
movsb
mov
mov
in
xor
ljmp
push
lods
push
mov
mov
jp
clc
outsb
jnp
cli
pop
outsl
or
outsb
sbb
jecxz
aam
enter
ss
xor
sahf
notl
jmp
sbb
xor
dec
arpl
adc
push
rcrl
mov
imul
jp
push
repnz
in
jecxz
scas
adc
sarl
arpl
daa
jmp
gs
std
clc
xor
popf
loope
jg
or
xchg
sub
int
stos
cmpsl
mov
shr
xlat
sub
mov
push
iret
lds
mov
in
clc
push
lcall
call
movd
dec
xor
or
sbb
cmp
mov
push
mov
ja
adc
sub
stos
inc
inc
pop
mov
movsb
lahf
loope
inc
movsb
dec
xchg
nop
cmc
test
in
sbb
mov
shrl
mov
inc
ja
sbb
push
in
lcall
push
loop
jb
jmp
shll
inc
testl
int
das
stos
cmpsb
orb
xchg
stc
mov
loop
and
xor
andb
sbb
loop
add
fidivl
aad
movsl
sbb
xchg
xchg
outsb
mov
test
push
movsl
into
and
ret
ljmp
push
iret
mov
xlat
jmp
and
jnp
dec
jp
sub
jnp
lret
dec
std
jmp
imul
pop
mov
dec
ret
enter
ljmp
icebp
jecxz
jno
aas
iret
stc
cltd
pop
imul
sbb
insb
stos
pop
sarl
xor
cmp
loop
adc
scas
repz
ret
sbb
fwait
orb
fistpll
sbb
cmp
and
movsl
push
cmp
testb
sub
cli
adc
mov
add
jnp
or
and
call
ret
sbb
dec
dec
and
int3
mov
xor
xchg
push
mov
sub
dec
mov
pop
sbb
or
cli
aam
inc
out
sub
push
testb
ss
pop
mov
sbb
out
ja
adc
xchg
cwtl
pushf
test
inc
inc
xor
cmp
lcall
cmc
add
scas
call
daa
cmp
and
adc
mov
sarb
shll
xor
loopne
lcall
mov
fisubl
in
mov
rol
js
cmpl
repnz
stos
data16
sahf
out
call
ret
lret
adc
pop
xor
inc
mov
fwait
jl
dec
add
repnz
sahf
shll
adc
xchg
jo
and
xor
hlt
xor
inc
push
andl
sbb
jbe
test
add
add
cmp
hlt
jo
fsubl
mov
xchg
cli
icebp
add
ss
decl
xchg
imul
movsb
jl
jmp
push
cmc
dec
hlt
dec
jmp
aam
push
es
add
sub
adc
sbb
lret
sbb
adc
adc
hlt
ss
push
lahf
xchg
sti
iret
cmpsl
rorl
aas
int3
pushf
stos
add
ret
inc
js
dec
mov
lahf
jecxz
mov
push
ja
mov
lods
cmp
loopne
insl
inc
outsl
lds
mov
lret
pop
jp
push
popa
xchg
aaa
jle
pop
inc
icebp
or
dec
mov
mov
xchg
xchg
mov
lea
add
inc
aam
sbb
and
repnz
imul
scas
fdivrs
lret
add
xchg
push
loop
mov
mov
push
pop
jecxz
xchg
js
aaa
movups
push
jl
xchg
mov
or
dec
jno
xor
aad
adc
mov
adc
mov
sti
cmp
jecxz
cmp
cs
hlt
aad
jl
lods
sbb
sub
std
loope
xlat
mov
jp
inc
pushf
add
pop
mov
add
push
rol
stos
setae
mov
daa
dec
and
or
mov
push
loop
rol
ljmp
dec
cmpsb
fstl
addps
iret
xchg
fnstsw
cmp
mov
into
jnp
lcall
fwait
stc
pop
mov
imul
popa
mov
popa
jo
cmp
std
mov
lds
or
cmpsl
push
add
xchg
lret
push
out
xchg
xor
mov
jb
js
xchg
mov
jnp
xchg
inc
jne
lea
out
pushf
pop
xor
dec
dec
orl
idivb
jbe
int
pop
pop
ljmp
in
push
jnp
stc
repnz
jl
sarl
dec
jecxz
xchg
adc
bound
inc
vmwrite
pop
fucomi
pop
sub
fwait
dec
icebp
xchg
imul
loop
pop
stos
in
inc
xorl
push
and
or
push
dec
cmc
dec
xchg
xor
lahf
shlb
inc
outsl
je
push
pop
xabort
jle
jecxz
loop
jmp
jg
mov
arpl
pop
mov
sti
mov
inc
xchg
lods
xchg
mov
xor
or
lahf
loope
jecxz
xchg
int3
subb
loop
fst
jns
xchg
mov
push
aas
push
shrl
jnp
aad
dec
sbb
sub
sbb
rorl
fcomi
cmp
and
ret
jb
mov
nop
inc
inc
xchg
push
lods
xor
call
push
add
repz
ret
dec
pop
sbb
shlb
pushf
jmp
daa
lods
imull
xchg
mov
shrb
lahf
data16
pushl
pop
ljmp
sbb
push
ljmp
mov
cs
cwtl
sub
inc
pop
jnp
hlt
test
push
out
dec
ret
adc
adc
mov
insb
fimull
sbb
or
filds
js
adc
ss
sub
loopne
mov
mov
adc
push
jb
cld
mov
rolb
or
int3
mov
or
inc
ror
insl
loop
shrl
mov
and
sbb
inc
or
lret
call
testb
xchg
push
icebp
jmp
or
mov
test
pop
and
mov
loopne
jne
aaa
sub
push
hlt
and
imul
jg
jecxz
bound
jns
lods
roll
ret
adc
mov
xor
fsubrs
int3
fidivrs
dec
lret
mov
ss
sbb
jae
aaa
fwait
dec
mov
lahf
inc
push
or
push
in
lahf
fldz
pop
fisttpll
pop
push
mov
repz
mov
jge
inc
sbb
ljmp
mov
sbb
int3
add
push
and
inc
cli
dec
mov
shlb
mov
xor
imul
jb
xor
movsb
jge
subl
mov
push
xchg
jae
jmp
test
test
jo
fcoml
mov
and
fisubs
pop
cli
jecxz
jle
jg
dec
add
je
dec
das
sbb
in
push
or
test
fadd
xor
out
je
pop
lds
loop
fmull
lods
cli
pop
or
xor
fisubl
mov
pop
fildll
lahf
push
push
rolb
sub
shlb
shl
je
xchg
cltd
fbstp
jne
in
negl
scas
add
inc
iret
rcl
adcb
shrl
and
ret
jo
insb
cmpsl
add
sbb
xlat
add
sub
jl
push
mov
mov
addps
jno
pop
enter
out
pop
nop
add
sbb
fnstsw
sub
mov
xchg
push
mov
pop
push
fstpt
cmp
and
mov
xchg
test
mov
push
lret
cmp
and
cmpsb
repz
jg
and
into
dec
dec
dec
dec
dec
sbb
or
xchg
jp
test
mov
cs
adc
jle
add
lret
fildl
daa
pop
mov
mov
test
adc
aaa
bound
pop
shlb
mov
sbb
sub
insl
mov
inc
or
lea
lcall
cli
lds
dec
mov
dec
stos
cmp
ret
sub
loop
jo
dec
sub
sub
lcall
int3
outsl
mov
add
mov
ret
into
imul
inc
lods
clc
insl
leave
jmp
xor
pop
gs
notb
aam
ss
push
lea
jnp
shlb
negl
xor
jge
clc
xor
lods
je
sbb
ret
xchg
jbe
inc
rcrl
add
ss
mov
movsl
cmp
push
xchg
fld
mov
test
fwait
sub
pop
xlat
mov
ljmp
testb
jbe
push
mov
and
mov
es
fldcw
inc
cs
or
xchg
cmp
ljmp
leave
xlat
cltd
pop
cli
pop
pop
cmp
aam
and
shr
mov
jmp
push
loopne
fstl
fcomps
sbb
dec
pop
fdivrl
pushf
dec
pop
jl
xchg
jge
xchg
ret
jnp
push
push
and
inc
pop
mov
jo
leave
cmp
pop
repnz
inc
out
rorl
rcrl
stos
and
sub
aas
push
pop
mov
pop
jmp
stc
sub
sub
ret
xchg
dec
push
add
sub
mov
cmp
jmp
jne
ja
fs
xor
pop
arpl
inc
pop
adc
sub
pop
ret
inc
push
sar
test
leave
cmpsb
sbb
cmc
lahf
insl
xor
loope
sbb
add
inc
or
orl
popf
sbb
adc
cs
notl
jmp
flds
outsb
push
or
adc
stc
movsl
push
jmp
jge
mov
add
frstor
mov
jmp
shll
out
mov
jge
cmpsb
sarl
pop
push
out
xchg
push
pop
es
fisubrl
or
pop
or
cmpsb
popf
cmp
mov
stos
jb
cli
lock
and
and
mov
pop
inc
jge
data16
sub
adc
ljmp
inc
jp
cs
ficomps
push
imul
cmp
bnd
sbb
dec
outsl
cmp
decb
idiv
jns
xchg
out
int
cmpl
jmp
enterw
mov
jns
push
icebp
stos
ficoms
adc
xchg
ret
and
cmpsb
shl
cwtl
sub
xchg
cld
dec
inc
insb
enter
in
sbb
std
xchg
mov
sbb
lods
fwait
outsb
in
push
insb
ljmp
je
outsb
mov
sub
add
adcl
mov
cmp
jno
jnp
flds
cld
sbb
xchg
sbb
inc
mov
push
stc
mov
leave
scas
jbe
outsb
dec
push
sub
inc
push
movsb
sub
xor
xor
add
add
mov
push
js
cmp
popf
fsub
aas
add
inc
fcoms
sbb
mov
jmp
mov
mov
loopne
data16
les
fdivs
pop
and
sub
rcrb
cmp
arpl
div
lea
xchg
xor
adcb
sbb
mov
iret
je
loop
jns
in
mov
lcall
xchg
dec
and
cmp
add
rcrl
test
add
adc
push
test
mov
dec
jns
into
or
add
xchg
push
incb
test
mov
push
jle
outsb
in
inc
push
out
popa
xor
movsl
cmpsb
mov
leave
cwtl
fsubrs
mov
and
cmp
mov
fidivl
out
lods
test
popf
dec
and
mov
jae
imul
dec
arpl
adc
xchg
dec
jae
loope
stos
or
dec
xorl
dec
sbb
mov
push
imul
imul
mov
xchg
ljmp
shrl
out
andb
xlat
push
addr16
iret
sbb
push
pusha
dec
inc
lret
nop
sahf
lods
insb
arpl
imull
scas
sbb
and
jle
mov
inc
add
adc
sub
mov
fadds
adc
mov
loopne
enter
cld
sub
push
sub
jbe
in
movsb
scas
jp
cltd
in
cli
out
sti
sbb
out
jecxz
mov
roll
fnstenv
pop
jl
icebp
jb
xchg
cltd
movsl
outsb
int
lods
lcall
dec
call
mov
sub
addr16
cmp
in
sub
shl
adc
jne
sub
mov
jb
or
subl
sbb
xor
cltd
or
fists
push
leave
jbe
fisttpl
movsb
sbb
es
mov
ja
fwait
xchg
mov
mov
pop
jg
test
test
jle
ja
test
sbb
mov
mov
out
aaa
mov
mov
mov
pop
rclb
ret
pop
push
xor
xchg
pop
pop
andb
mov
loope
mov
sub
das
xor
icebp
pushl
lret
stos
fimuls
sub
jg
jp
mov
popf
inc
in
aad
aaa
jge
dec
push
rclb
ds
sti
lock
into
pop
push
mov
shlb
and
pushf
imul
clc
int3
test
shr
loope
les
xor
test
cmpb
fdivrp
ret
push
pop
cmp
out
call
fsubp
out
test
xor
lods
mov
push
fmull
add
dec
stos
faddl
xchg
sub
imul
lret
icebp
test
mov
jmp
lcall
aaa
rcll
jmp
lods
xor
or
loopne
andb
iret
call
xchg
add
xchg
pusha
or
pop
push
and
mov
mov
dec
inc
loope
loop
mov
bndldx
or
push
cmpsb
mov
mov
lret
xchg
popf
cld
dec
fistps
roll
and
dec
push
push
jp
std
adc
cli
push
daa
adc
popf
pop
test
fdivr
lods
mov
sbb
mov
int
adcl
xchg
add
lahf
mov
shrb
mov
loopne
out
xchg
popf
imul
mov
mov
jae
jmp
subb
sbb
lcall
in
jg
cmp
ret
in
xchg
loopne
pop
and
jbe
shrb
adc
mov
mov
adc
int
mov
icebp
push
inc
mov
cmp
insb
lds
ljmp
subl
dec
push
scas
mov
mov
std
dec
dec
out
jo
nop
dec
mov
or
jecxz
dec
icebp
cmp
sub
das
pop
sub
jp
dec
mov
cltd
adc
fwait
sbb
fs
push
and
cmpsl
imul
mov
in
dec
sub
pop
mov
inc
mov
cmpsl
sbb
aam
mov
rcrb
sti
cmpsb
push
xchg
push
out
out
jecxz
push
xor
call
dec
and
push
outsb
sahf
fsubrl
loop
mov
cmp
xor
mov
jmp
lds
xchg
adc
inc
push
xchg
cli
mov
xor
adc
adc
mov
pop
out
je
add
out
push
pop
lahf
lock
aam
inc
jns
test
add
add
ds
jo
xchg
sbb
jp
imul
int3
push
cwtl
push
cmp
sbb
dec
daa
out
sahf
lds
int
mov
imul
pop
mov
popf
push
dec
arpl
clc
dec
js
sub
jge
push
jne
add
fisubl
insl
pop
lahf
test
sbb
jnp
adc
lock
stos
pop
sbb
mov
inc
in
push
ds
lcall
pop
out
incl
add
push
push
jp
sub
mov
mov
jb
inc
test
xor
in
and
pop
xchg
pop
in
lods
fnstenv
gs
add
std
repz
and
test
mov
mov
xor
xchg
sub
rcrb
jge
jp
jg
shl
stos
std
mov
pop
scas
sub
dec
pop
aam
clc
repz
mov
cmpsl
xor
fsubs
jmp
data16
cltd
test
cmp
push
adc
add
lret
and
and
mov
scas
aas
lds
push
cltd
outsb
inc
or
and
mov
insl
mov
add
cmpsb
or
ds
shll
add
adc
jle
rcll
cs
cld
sbb
test
add
cmp
adc
xor
rcr
push
mov
or
pop
pop
pusha
jmp
aaa
xor
cmp
xor
mov
dec
das
into
test
xchg
das
cmpsb
in
ficompl
mov
mov
mov
xor
out
dec
gs
fcmovu
adc
cld
xor
fisubl
dec
push
dec
cmpsb
adcl
cmp
mov
iret
gs
cmp
sahf
cmpb
cld
fsubs
mov
mov
scas
cmpsl
mov
jg
cli
jg
mov
icebp
pop
xchg
arpl
shlb
lock
pop
int
int
dec
arpl
fdivr
mov
xor
enter
jno
out
rcrb
mov
inc
or
inc
les
jmp
mov
jb
or
fiadds
or
jmp
js
fcmovne
frstor
inc
bound
out
sub
test
xor
mov
push
rorb
sub
icebp
pop
subl
test
bound
jp
lea
inc
outsb
jecxz
mov
lret
cmp
and
push
aad
lahf
int3
and
inc
sub
jae
cmp
xchg
xlat
sbb
scas
std
je
xchg
add
stos
jo
rcr
in
fildll
in
dec
lods
cs
dec
and
js
lahf
pop
push
daa
in
sub
lock
sbb
jno
inc
sbb
fwait
lahf
fsubrs
adc
fwait
leave
mov
int
out
daa
cmp
enter
stos
pop
push
je
mov
jae
jae
outsb
sbb
pusha
ss
mov
std
xchg
mov
push
aad
ficoml
pop
sub
xor
cmc
in
push
js
sarb
lret
rolb
stc
pop
shr
dec
je
loope
ljmp
pop
bound
xorl
mov
mov
pop
aas
roll
outsb
pop
and
test
loop
mov
sahf
xchg
inc
add
call
pop
mov
pop
stos
sbb
adc
lret
jmp
loopne
add
mov
std
les
or
mov
loope
jle
push
and
ror
jne
jle
add
jg
jno
xor
adc
fildll
or
and
call
lds
add
enter
cli
cmpsb
jo
pop
pop
dec
sbb
adc
imul
add
dec
bound
clc
push
test
jecxz
cmp
sbb
lcall
fxch
pop
insl
out
outsl
mull
stos
lea
mov
jb
mov
je
or
insl
ret
push
adc
mov
push
mov
rorb
mov
pop
cmp
add
mov
aaa
xor
push
pop
push
nop
sar
xchg
rcr
bound
ljmp
leave
leave
xor
push
dec
mov
xor
into
adc
mov
rcrb
pop
push
daa
in
xchg
mov
outsb
mov
sti
dec
dec
pop
push
jle
and
lds
aas
lahf
in
mov
jb
icebp
xchg
call
inc
sbb
fisubl
cmp
iret
add
shll
push
and
lock
mov
push
dec
mov
push
in
adc
icebp
aam
xchg
clc
fstl
add
das
sub
loopne
mov
inc
push
pop
inc
in
sti
pushf
les
add
idivb
inc
cmpps
cmpsl
jns
sub
enter
aam
mov
xor
dec
mov
repz
add
paddsb
dec
adc
xlat
cwtl
inc
js
pop
std
cmp
mov
cmp
jne
ret
rcrl
fdivrl
loopne
xor
or
jb
test
or
negb
das
addr16
dec
out
inc
and
test
cld
cmpsl
sbb
nop
dec
std
mov
pop
xor
rcrl
mov
and
pushf
xchg
pop
mov
jecxz
and
dec
call
push
outsl
jmp
sbb
flds
inc
mov
cld
pop
les
movsb
mov
lea
repz
ss
gs
jecxz
push
pop
shrl
and
ja
pop
push
lods
and
push
or
pop
imull
ds
setl
mov
pop
mov
in
push
flds
adc
ds
mov
sbb
daa
bound
out
jle
inc
push
adc
sbb
clc
lock
jb
addl
or
sbb
pop
rorb
dec
adc
adc
and
out
pop
cltd
dec
mov
shll
and
xchg
inc
imul
inc
pusha
mov
movsb
call
rcl
mov
adc
fs
cmc
inc
pusha
pop
pop
xor
imull
push
leave
loope
cmp
pop
orl
push
lcall
xor
inc
jge
outsb
add
dec
imul
xchg
mov
popf
stc
sub
std
push
add
dec
cmpsb
jecxz
sbb
sbb
cmpsl
lods
add
inc
xchg
xchg
pop
and
mov
dec
mov
loope
push
xor
push
mov
stc
and
ljmp
lods
ja
jo
ds
daa
push
mov
stc
in
movb
cmp
inc
jmp
push
aaa
imull
inc
in
dec
and
lret
sbb
fmul
lahf
push
xor
mov
dec
fcmovnbe
movsb
push
push
lea
pop
enter
aaa
lret
in
jae
lds
nop
in
push
push
lcall
adc
aad
call
jge
pop
rorl
pop
outsb
int
add
sub
movsl
xor
lahf
jl
or
daa
lcall
aad
cmc
lods
or
orb
mov
and
rcrb
dec
mov
icebp
loop
ss
inc
rcl
sti
stos
pusha
cmp
test
dec
mov
pop
cli
lods
xchg
fwait
mov
aaa
test
xchg
ss
mov
xchg
or
pop
jge
in
negl
outsb
or
ds
mov
int
dec
ds
enter
inc
push
pop
mov
and
outsb
or
sub
mov
xchg
std
cmp
and
or
push
pop
imul
mov
xor
roll
rorl
push
cmp
sbb
sub
adc
and
scas
sbb
mov
fcmovnb
push
ret
ja
fdiv
xchg
rcrl
loopne
dec
push
ss
jns
stc
out
mov
dec
sub
and
and
outsl
sbb
ficomps
inc
lret
mov
jle
xchg
lods
imul
pushf
cwtl
lods
into
jecxz
cmc
rcr
test
push
das
xor
xchg
jle
cmovnp
loopne
movsb
add
or
test
imul
scas
dec
dec
addl
das
ret
or
jbe
pop
das
inc
sub
cmp
inc
xchg
push
loop
pop
and
mov
pop
dec
mov
icebp
inc
xlat
push
cmpsb
nop
fdivs
jle
mov
sub
incl
pop
inc
pop
fildll
adc
ja
aas
xchg
mov
test
jnp
lea
iret
ds
int3
fdivp
pop
aam
cmpb
aam
aam
push
iret
sub
push
sub
repnz
loope
nop
aam
mov
adc
gs
pop
pop
bnd
test
lahf
xor
dec
shlb
fstpt
aad
jp
mov
bound
rclb
scas
mov
mov
cmc
jg
cmp
lgs
test
cmpl
sub
mov
mov
sub
xor
sbb
and
subl
test
dec
stos
lahf
lahf
jae
cmp
mov
dec
add
xor
xchg
inc
pop
call
sbb
pop
fidivs
enter
cmpsb
out
sarl
and
outsl
in
sbb
mov
push
outsl
mov
dec
xchg
sti
sub
mov
out
into
insb
out
mov
inc
adc
cmp
pop
pop
cs
mov
lods
cmpsb
ret
lret
pop
ljmp
repz
js
mov
xor
aam
sub
mov
jmp
fs
fwait
mov
leave
rorb
push
pop
pop
in
addl
mov
sub
in
sub
xchg
sub
and
into
mov
cmp
and
jb
adc
lret
sbb
aam
addr16
loop
arpl
xchg
pop
or
jge
int
imul
mov
leave
push
loop
pop
mov
and
mov
add
xchg
push
pop
sub
fiaddl
fnstsw
mov
push
loop
pop
cli
and
fstpt
retw
jmp
xor
pop
jg
lds
out
popa
fs
or
xchg
jl
mov
cli
mov
in
rcll
mov
inc
fcmovne
push
stos
or
dec
fs
sbb
roll
jne
jl
xchg
xchg
sbb
loope
iret
rolb
sarl
or
sub
cmp
inc
idivb
dec
pop
rcrb
inc
addr16
and
mov
mov
cmp
inc
inc
mov
repnz
push
insb
push
inc
cmc
dec
and
daa
testb
pop
lock
pushf
sbb
and
int3
sbb
dec
leave
negb
std
push
jl
aad
cmp
add
enter
fbstp
and
xor
test
mov
jae
xor
psadbw
dec
pop
add
in
insb
push
rcrl
add
insb
mov
aas
xchg
addr16
fcomps
mov
mov
fisubrs
js
cwtl
fwait
and
jb
mov
in
add
mov
xor
cmp
fdivrs
or
mov
fnstenv
push
jl
mov
fldl
dec
scas
pusha
bnd
clc
and
adc
sbb
outsl
rolb
mov
popa
test
cld
mov
orb
or
inc
aaa
rcrl
jnp
mov
inc
add
xor
nop
arpl
out
xchg
movsb
pushl
xchg
mov
push
and
mov
stos
fisttpll
fsubrs
pop
jp
xchg
xor
int3
stos
push
xor
test
jns
mul
pop
push
mov
pop
push
jge
add
xor
sbb
dec
leave
mov
std
mov
aad
and
mov
adcl
ss
mov
mov
add
jno
stos
mov
loopne
pop
dec
inc
xor
cmp
dec
aaa
dec
mov
ret
dec
mov
out
shrb
das
mov
sbb
arpl
mov
js
jae
dec
inc
fwait
dec
cmpsb
xchg
xorl
xor
dec
das
cld
insl
inc
outsb
cmp
mov
sahf
bound
push
mov
out
push
cmovo
pop
or
xor
ds
rclb
fidivs
lahf
pop
mov
mov
mov
xchg
cwtl
or
sbb
shll
clc
pop
sub
aad
mov
mov
inc
sbb
out
mov
inc
push
push
mov
call
insb
outsw
or
out
mov
data16
clc
jns
cmpsb
aas
inc
inc
dec
loopne
jne
dec
clc
movsl
xor
out
into
shll
cmpsb
adc
out
inc
stc
push
xchg
mov
je
cmc
cmp
out
xchg
fwait
movsl
jbe
jb
xlat
gs
sahf
sub
call
pop
jl
daa
jo
pop
es
mov
xor
cmp
loop
ja
arpl
fwait
test
mov
cmpl
aam
jge
adc
rcrb
adc
dec
arpl
testb
std
adc
mov
shlb
inc
in
pop
mov
mov
enter
add
inc
fldt
test
daa
daa
xor
xchg
jmp
jno
in
sub
and
out
sbbb
dec
int
add
or
rclb
out
data16
dec
push
dec
scas
int3
cmp
clc
fiaddl
nop
sti
shl
sbb
push
dec
sbb
sahf
lea
cli
fisttps
mov
cld
lods
dec
out
cli
into
lea
mov
xor
lahf
fwait
mov
add
mov
jbe
bound
cmp
push
out
pop
ds
and
sub
faddl
xchg
ds
inc
mov
pop
sub
fs
shlb
into
xor
int3
rsqrtps
inc
push
mov
pop
lcall
push
cmpsl
shrl
jno
adc
xor
mov
sahf
mov
cli
add
cmp
xorb
pop
lret
clc
sub
cmp
jmp
mov
fs
sub
cwtl
pop
dec
cmp
daa
std
or
pop
cmp
jle
dec
add
sbb
mov
lret
push
xchg
and
fcoml
scas
imulb
arpl
sti
push
ljmp
test
test
popa
ret
mov
into
cmpsb
jae
dec
stos
mov
sbb
scas
cltd
cltd
sbb
ret
fld
dec
add
adc
adc
sbb
or
jbe
mov
cmc
sub
mov
imul
push
out
aam
js
jns
sbb
jns
inc
xchg
dec
in
stc
mov
xlat
dec
pop
ret
xorl
push
inc
xlat
scas
in
negl
in
lods
fs
push
test
lds
addl
clc
add
or
lret
sti
dec
outsb
mov
adc
cs
jp
das
jnp
fisttpll
add
cmp
xor
fistps
insl
pop
sbb
jno
dec
nop
fsubrp
cltd
fcoms
push
clc
cmp
push
imul
add
xchg
in
push
nop
das
cmp
cmp
and
js
push
repnz
fs
addr16
leave
dec
test
xor
sub
sbb
in
leave
and
loop
in
xchg
jl
test
push
xchg
je
lahf
and
cmc
sahf
mov
adc
jns
adc
and
cmp
enter
into
imul
inc
and
sbb
icebp
push
xor
lret
xchg
lods
lcall
sahf
cmp
sbb
andl
mov
add
dec
in
pop
add
inc
shr
lret
sub
int3
or
pusha
push
dec
push
sbbl
dec
std
or
frstor
data16
xchg
lods
xlat
sub
data16
cmp
clc
pop
dec
push
cwtl
outsb
mov
xor
adc
push
test
cli
aas
add
mov
out
call
and
out
add
push
cli
aaa
dec
cmpl
loope
ja
adc
imul
sub
mov
mov
dec
sbb
fcomps
lds
xchg
push
adc
in
testb
jg
jbe
cltd
push
cmp
addr16
idivl
pop
and
pop
int3
mov
sbb
xor
rolb
into
pop
cwtl
xor
lahf
pop
fsubrl
popf
jmp
jecxz
loopne
mov
jae
aam
fsubl
mov
jae
jbe
xor
pop
insl
and
inc
movsl
add
es
mov
or
fwait
rorb
adc
xor
dec
loopne
mov
lods
popf
xchg
cli
pushl
or
addl
xor
and
lock
loope
lret
test
dec
mov
rorl
xlat
fcomp
stos
aam
in
jnp
imul
xchg
int
aam
mov
sub
jo
sub
movsl
js
cmp
dec
xchg
cwtl
test
or
lods
xor
add
jmp
cmpsl
stos
popa
lods
inc
adc
cld
aaa
push
shlb
insb
sbb
cmp
adc
sub
pop
jno
pop
pusha
pop
push
and
test
inc
popa
sub
sub
cs
jp
fwait
mov
cmovne
adc
sub
iret
xchg
sub
jmp
nop
ds
mov
fwait
int
js
push
out
int
sub
dec
movsl
imul
jecxz
mov
mov
push
loop
jge
dec
mov
xor
and
dec
pop
cmpsb
mov
dec
stc
adc
mov
push
inc
mov
addr16
cmp
cli
or
aad
rolb
js
mov
sti
inc
nop
push
mov
js
mov
add
dec
jnp
call
out
cmp
xchg
in
mov
fld
cmp
ret
add
fs
inc
mov
xchg
fwait
movsl
inc
cmpb
jecxz
in
mov
iret
push
stc
iret
cmp
sahf
mov
sbb
and
pop
xor
je
mov
aaa
lods
add
sub
jge
mov
and
cld
pop
jecxz
or
into
mov
int
jo
push
sub
mov
mov
xchg
or
bound
and
out
xchg
imul
push
inc
sub
or
push
push
or
rorb
mov
les
cld
ret
fdivr
mov
daa
cmp
jge
mov
push
push
mov
sbb
cli
push
mov
sbb
ss
stos
mov
cmpsl
sbb
insl
and
add
shl
xor
push
int
jno
cmp
xlat
cmp
add
in
sbb
imul
mov
fwait
push
ret
nop
in
inc
fcoms
add
movsb
pop
loopne
lea
scas
gs
sbb
ds
push
lds
inc
push
mov
and
inc
mov
push
pop
aad
loop
ja
push
inc
cmp
ds
popf
jns
insl
cmp
test
push
jnp
ss
popf
cmp
add
aaa
pop
lahf
fistl
mov
xchg
xchg
hlt
add
repz
jmp
xchg
in
sub
xor
inc
dec
pop
add
push
addr16
or
sub
ds
pop
pop
jle
pop
jecxz
dec
cmp
test
inc
movsl
jns
mov
lds
fdivrl
cltd
xchg
ficomps
sbb
repnz
jecxz
outsb
add
sahf
std
cs
xchg
sahf
mov
fbstp
test
stc
dec
pop
mov
addr16
cmp
mov
pop
ja
add
and
into
sti
xchg
fisttpl
add
mov
push
jo
aam
adc
jae
push
jecxz
jg
jns
lods
sub
ror
out
mov
or
and
pushf
jp
sbb
mov
lods
jnp
jle
jge
xchg
fisubs
add
mov
lock
popl
xchg
lret
push
sbb
xchg
xchg
iret
sbb
cs
cmp
cwtl
daa
arpl
subb
push
stos
es
std
mov
jo
cmp
mov
dec
inc
push
sbb
push
into
or
pop
mov
popf
adc
inc
je
ljmp
cmp
jne
push
pop
sbb
inc
out
adc
inc
push
or
mov
xchg
gs
xor
mov
pop
adc
cld
jnp
call
pop
inc
mov
push
aas
jne
rolb
div
and
xor
jl
cmc
cmp
xchg
pop
or
shl
sbb
adc
test
out
sbb
cltd
insl
jge
dec
mov
xor
pusha
xchg
add
pop
outsl
push
adc
inc
push
cs
sub
jb
mov
pop
pop
mov
xor
pop
pop
inc
aam
bound
rcrl
adc
arpl
loopne
or
xchg
mov
dec
out
scas
jp
dec
std
xor
jno
cmc
xchg
es
sbb
int3
push
loope
fiadds
cs
out
mov
ss
test
mov
push
pop
lods
xor
push
dec
xchg
imul
dec
pop
mov
and
ljmp
int3
fs
cmp
mov
aaa
jl
aam
pop
fidivl
xchg
pop
aas
cmp
push
test
xchg
jno
rorl
jbe
dec
shr
rclb
jo
xchg
out
cmp
test
mov
push
push
jmp
scas
mov
cli
and
fidivrl
jno
popa
sub
and
mov
inc
out
outsl
aad
sub
cwtl
and
push
mov
iret
fisubs
pop
es
cmp
adc
xchg
mov
test
cmp
in
push
sub
xchg
hlt
or
dec
mov
pusha
push
imul
mov
sbbb
lret
outsb
xchg
addl
imull
mov
fcoml
mov
mov
lock
nop/reserved
aad
push
cmp
cmp
imul
call
push
add
or
je
fstpt
pop
cmp
int
roll
bound
mov
les
pop
out
mov
adc
and
mov
hlt
rcl
mov
icebp
mov
adc
pop
into
jge
xchg
sub
sub
mov
bnd
inc
cmp
mov
inc
adc
xchg
jo
cmp
int3
stos
mov
in
mov
push
mov
nop
das
and
icebp
adc
std
adc
ds
pop
ds
mov
lods
imul
mov
lret
ljmp
dec
cld
inc
mov
imulb
mov
xor
test
inc
inc
ljmp
mov
pushf
pop
dec
lds
idivb
xchg
popa
das
jmp
jmp
push
adc
loopne
shrb
mov
push
jnp
cltd
ds
xchg
insb
sbb
xchg
int3
jno
sbb
xor
adc
aad
xchg
clc
mov
push
stc
cmp
test
push
sar
cld
sti
cwtl
pop
rcll
in
adc
popa
mov
pop
mov
hlt
cmc
xor
or
mov
push
lret
test
inc
pushf
js
lds
pop
xor
in
jle
into
dec
or
mov
push
jo
dec
mov
test
and
lahf
lea
mov
push
mov
ret
mov
pusha
push
cmpsl
xor
lods
push
ja
adc
mov
repnz
int3
push
xor
jae
daa
xchg
das
xor
sub
fldenv
jb
jp
sti
xor
xchg
adc
add
pop
shll
nop
xchg
or
jns
push
dec
test
mov
adc
mov
pop
out
pushf
push
jne
aam
dec
icebp
test
mov
lahf
mulb
dec
push
or
int
add
fldcw
cmp
cmpsl
mov
out
in
xchg
xchg
stos
add
mov
pop
call
mov
sbb
lock
rcrb
push
mov
mov
test
and
int
mov
cmc
add
jp
mov
pop
or
mov
inc
jne
shlb
inc
rclb
pusha
mov
not
call
inc
daa
or
test
push
mov
sbb
cmpsb
je
sbb
icebp
lret
push
jo
cs
lret
pop
frstor
outsb
cli
shl
clc
push
outsb
sahf
stc
lret
pop
ficomps
pop
add
mov
mov
mov
decl
lock
jl
and
push
test
mov
dec
pop
add
mov
fidivrs
mov
es
in
icebp
movb
mov
pop
sub
and
add
addb
nop
aas
inc
or
pop
aad
cmpsl
lret
in
cmp
push
fucomp
movsb
scas
add
vpaddq
je
jmp
cmp
movsl
mov
std
hlt
mov
add
sub
shl
outsl
xor
std
xor
xor
insl
outsb
lret
sahf
sbb
jp
sub
cmpsb
ja
mov
pop
scas
mov
mov
sub
jmp
cmp
add
add
mov
mov
arpl
iret
test
bound
leave
rorl
or
mov
jns
stos
inc
and
cmpsb
inc
pop
sub
mov
test
jecxz
mov
mov
xchg
xchg
mov
popf
mov
stos
rcl
mov
xlat
negl
in
test
imul
pushl
jnp
mov
xor
xchg
jge
xchg
mov
xchg
mov
fiadds
push
cmp
outsb
mov
into
mov
cmc
test
and
test
cmp
add
xchg
mov
popa
mov
mov
jl
movsl
jmp
arpl
popf
outsl
mov
ja
rcll
push
lret
cmpsb
rcr
lcall
or
inc
sub
push
or
adc
jge
mov
insb
lret
aad
and
shr
stos
cmp
in
call
cmpsb
es
lods
dec
sbb
cli
cld
sbb
mov
mov
jnp
iret
mov
incl
and
dec
movsb
sub
adc
dec
xchg
dec
mov
aad
lock
sti
push
rcr
mov
cwtl
cmp
out
imul
mov
sbb
mov
daa
les
scas
xor
mov
sub
jnp
pop
test
mov
jno
call
cli
test
lcall
mov
xor
ret
cltd
xchg
sbb
mov
or
add
repz
mov
mulb
lret
divb
loop
mov
dec
popf
shld
sbb
pop
xor
cmpsb
jmp
mov
test
mov
sub
sbb
mov
xor
jmp
mov
mov
out
sarl
fwait
sar
popa
mov
push
adc
push
insl
insl
cmpsl
push
mov
ret
arpl
shl
jbe
loope
out
imul
shrl
mov
sub
stos
fs
out
cwtl
jne
jle
push
pop
roll
jecxz
xchg
cli
sub
repz
js
mov
fistpl
rolb
sbb
push
pop
movsl
dec
xchg
gs
rorl
push
fildl
aaa
mov
iret
cmpsl
popl
mov
jmp
inc
inc
jnp
xchg
mov
or
hlt
jp
bound
out
scas
stos
paddusw
dec
push
js
out
lret
subl
mov
inc
aam
hlt
stos
popf
fnstcw
out
mov
inc
push
mov
dec
mov
push
nop
cmc
aad
repz
fldenv
mov
in
pop
mov
or
and
jg
adc
sub
fnstenv
lods
dec
jl
xchg
repz
mov
lahf
addb
inc
enter
cmp
or
or
cld
or
cwtl
aaa
mov
fwait
shlb
jp
mov
les
rolb
push
xchg
push
jmp
ret
adcb
add
lret
out
xchg
idiv
pop
push
mov
je
es
or
mov
and
or
ret
push
push
sahf
test
sbb
cwtl
imul
into
push
popf
rol
mov
xchg
roll
adc
dec
cmp
mov
fiaddl
cmpsl
dec
add
mov
hlt
loop
dec
movsl
sbb
scas
adc
pop
add
jge
lods
cmp
mov
cmpl
shr
inc
mov
movl
push
mov
outsb
test
lret
cltd
call
fdiv
mov
pusha
cs
sbb
orl
sti
test
insl
and
cwtl
mov
mov
mov
in
rcll
andb
aaa
and
and
jbe
aam
stos
inc
aas
ja
and
sub
mov
cmp
ja
and
insb
mov
std
scas
bound
pop
ljmp
inc
lret
cltd
xchg
sub
mov
mulb
mov
mov
pop
out
lods
gs
jae
mov
das
divl
pop
addr16
aam
movsb
test
ja
mov
ret
inc
mov
xor
dec
out
mov
push
adc
push
pop
jle
push
sahf
jg
cmpsw
push
lret
sub
adc
mov
in
cld
or
mov
clc
insb
dec
pushl
mov
sti
pop
daa
lds
pop
sbb
ljmp
aaa
out
lret
or
jl
push
addb
jno
lahf
push
pop
inc
in
mov
pop
idivb
xchg
lcall
inc
mov
jnp
push
dec
lret
mov
push
mov
cmp
pop
lock
loop
xor
inc
jge
outsb
add
mov
jge
sbb
cmc
dec
cli
aas
frstor
mov
mov
push
mov
scas
xrelease
fucomp
int
movb
mov
out
xor
mov
pop
mov
mov
pop
mov
cmp
lea
cwtl
push
test
jmp
lcall
mov
iret
fwait
idiv
adc
cmp
sub
aam
test
bound
je
pop
or
arpl
push
mov
push
out
push
dec
adc
push
cmc
jl
inc
hlt
push
mov
lock
and
arpl
pop
lea
dec
repnz
and
icebp
lods
mov
fwait
xor
dec
add
insb
subb
leave
xchg
sbb
into
inc
movsl
or
ret
mov
mov
stos
sbbl
subl
adc
inc
or
jae
leave
imul
loope
and
imull
cli
popa
cmp
pop
push
sub
cmpsb
sub
sub
or
push
mov
shll
jno
mov
ja
jp
mov
or
mov
pop
sbb
xchg
pop
cltd
data16
scas
inc
dec
outsb
arpl
dec
dec
push
mov
lret
jbe
push
xchg
xor
sub
mov
add
hlt
pop
mov
or
dec
arpl
cmpsb
loope
rcll
xlat
jo
jae
cmp
sbb
pop
cltd
in
jb
lock
and
jge
xchg
call
daa
ret
jle
inc
sbb
push
fadds
mov
jbe
clc
outsl
pop
shlb
xor
repz
mov
or
cmp
jbe
inc
push
loopne
sbb
lock
lret
xchg
add
push
lock
mov
mov
push
mov
mov
lods
test
mov
cs
fsubrl
sub
sahf
cmc
push
pop
push
cld
stos
inc
fwait
add
and
lret
mov
fwait
push
jae
adc
test
ficoms
jmp
cmpsl
scas
xor
subb
or
test
int3
fsubs
aaa
mov
xchg
jp
mov
ss
int
outsl
in
stos
or
xor
pop
hlt
inc
jecxz
fwait
ljmp
mov
stos
push
fs
gs
xchg
and
adc
insl
jb
pop
mov
outsl
xchg
sub
addr16
inc
inc
or
ljmp
repnz
mov
mov
jne
lcall
sti
dec
adc
les
dec
fcoms
je
inc
fldl
jl
popf
cld
or
vmread
jecxz
out
mov
popf
mov
pop
movsl
ljmp
and
arpl
cwtl
addl
or
cmp
push
clc
fmull
adc
das
in
sbb
xchg
fucomp
dec
and
test
les
push
clc
cmpsb
in
jl
cli
mov
dec
fisttps
dec
pushl
xchg
mov
outsb
aas
inc
mov
push
cmpb
loop
movsl
enter
cmp
sbb
mov
sbbl
int
or
fistl
and
dec
popf
push
rclb
xor
cmpsl
arpl
mov
movsb
pop
xchg
in
fs
data16
mov
dec
push
mov
inc
out
cmp
dec
repnz
xchg
add
shrl
lcall
or
outsb
sbb
and
lahf
mov
lahf
sub
add
pop
mov
loop
cmpsb
ja
loop
cmpsl
loopne
lods
out
adc
mov
outsl
fildl
pop
inc
push
jae
mov
adc
push
out
cs
test
loope
jne,pn
xor
sub
into
dec
cli
repnz
push
sbb
sub
mov
pop
movsl
out
push
push
sub
inc
add
scas
or
jnp
cmp
add
pushf
mov
bnd
pop
pop
stos
pop
fnstenv
lock
cmp
mov
sbb
push
lcall
lret
int
arpl
sbb
ja
or
jae
xor
pop
xchg
add
xchg
cmpsb
dec
push
mov
xchg
jae
jg
out
mov
mov
mov
jle
add
or
and
xchg
jge
jnp
lret
mov
mov
insl
mov
cmp
test
mov
leave
lods
inc
mov
and
hlt
jmp
pushf
pusha
and
sbb
pusha
pop
cld
lret
bound
lahf
outsl
xor
and
stos
sbb
jmp
mov
cmp
bnd
add
repnz
in
sbbl
jl
inc
mov
mov
stos
outsb
mov
rolb
adc
pop
popf
clc
sub
xor
jge
jl
rcrl
adc
push
xchg
push
add
and
or
sbb
push
icebp
xchg
jmp
add
fisubs
movsb
mov
stc
test
cmp
pushf
lea
gs
cld
dec
fidivs
movsb
aam
jge
lcall
xchg
aam
adc
out
mov
pop
lahf
std
xlat
imul
cmovno
stos
inc
sub
sub
mov
enter
xorl
jmp
add
add
dec
lret
mov
add
and
mull
push
pushf
in
aad
xchg
pop
into
bswap
xor
fistpll
sbb
inc
into
xchg
inc
je
jo
mull
inc
push
pop
add
sbb
add
pop
push
aad
sub
pop
dec
aaa
sbb
xor
repnz
xchg
repz
xor
mov
cmpsb
xor
add
leave
mov
insl
cmpsb
ja
and
or
or
inc
and
mov
inc
mov
mov
xacquire
mov
xchg
ss
jns
aam
jg
dec
and
mov
aaa
push
bound
pop
inc
call
jns
sub
addr16
or
insl
mov
mov
mov
lret
in
into
add
add
pop
lods
repnz
mov
cmp
lods
cmp
sub
push
stos
push
fisubrl
ja
jnp
pop
bound
imul
rclb
cmpsl
mov
out
jg
inc
fcompl
xchg
stc
rorb
pushf
test
mov
jne
push
cmp
jo
cld
mov
out
jns
in
mov
out
in
jo
into
mov
cld
inc
jecxz
cmp
lock
jne
in
mov
test
pop
pop
imul
sub
loop
push
aam
iret
ljmp
es
addr16
lds
imul
lahf
loopne
dec
icebp
cmpsl
dec
movl
pop
cmp
sub
jo
push
icebp
or
dec
push
cmpsl
xor
orl
jno
mov
test
mov
mov
inc
inc
sub
out
imul
cld
ficoml
mov
fsubr
in
xlat
mov
mov
xor
inc
pop
stos
pop
std
sub
xchg
addr16
test
cs
scas
pop
pop
push
std
and
fs
ror
outsb
lret
lret
aad
inc
mov
data16
mulb
sbb
xlat
andl
addb
in
out
insl
repnz
inc
fcomp
loopne
mov
lahf
pop
frstor
mov
gs
adc
cmp
mov
lret
fdivl
dec
bound
jmp
jge
adc
outsl
sub
icebp
adc
cmp
into
push
jb
pushf
lods
lea
mov
sub
fcoms
xor
lcall
dec
loop
mov
and
xchg
ja
pushf
mov
cmpsl
pop
mov
cmp
jb
pop
dec
nop
pusha
mov
inc
xor
leave
test
push
pop
repnz
mov
pop
mov
inc
dec
das
mov
xchg
enter
and
jo
lea
xor
js
ss
jg
mov
stos
fwait
push
add
or
lods
sbb
aad
mov
lcall
sub
outsl
pushf
jecxz
jge
push
pop
push
test
clc
ds
mov
movsl
daa
xor
push
adc
push
rolb
mov
pop
lret
dec
in
mov
push
xchg
leave
dec
in
mov
cmc
lock
jle
mov
or
leave
mov
gs
repnz
lock
dec
ret
dec
popa
adc
ss
push
pop
mov
xlat
or
cli
mov
xor
jo
daa
movsb
push
clc
mov
push
add
test
cmpsl
sti
shl
cmp
push
in
out
mul
ficoms
push
enter
cmp
jno
xor
cltd
bound
xor
stos
ret
and
pop
popf
ret
ds
xor
cmpsb
dec
and
sbb
xor
pop
push
xchg
jno
sbb
aas
out
cltd
dec
sbb
mov
mov
loope
mov
and
add
das
clc
cwtl
push
push
ror
call
sub
js
and
fnstenv
jl
xlat
sbb
clc
mov
push
or
sub
pop
dec
les
mov
ljmp
pop
adc
sub
xchg
int
lds
add
sti
in
push
ret
jp
or
jmp
lret
lods
push
mov
mov
leave
sub
push
in
adc
xor
popf
pop
xor
dec
cmpsl
or
arpl
ficoms
fisubrl
into
sbb
int3
xorb
mov
sub
scas
lcall
stos
stos
xchg
adc
mov
inc
stc
mov
mov
adc
xchg
loopne
inc
cmp
lcall
add
sub
sbbb
mov
nop
fisubrl
or
mov
mov
test
xor
iret
ret
int
das
sub
pop
imul
push
popa
lods
cmpl
lret
int
cltd
fstpt
pusha
out
lods
mov
xchg
loop
push
out
enter
fsubl
adc
inc
sahf
push
add
mov
call
ja
fildll
adc
jecxz
ja
nop
cmp
arpl
jns
les
data16
mov
leave
mov
sbb
sub
jl
inc
cltd
push
xchg
je
ss
ja
push
mov
test
cli
jne
add
push
adc
fists
repnz
cmc
push
fcomps
xchg
xorb
cmp
sub
push
mov
fisubrl
mov
scas
mov
push
xorb
pop
js
pop
push
jno
sub
int
mov
inc
repnz
movsl
cmp
push
xorl
scas
cmc
test
icebp
xchg
pushf
icebp
cmp
lret
sar
xor
jo
int
stos
mov
stc
rorl
push
mov
cmp
push
jo
in
faddl
mov
mov
sub
lods
dec
dec
adc
vpsllq
iret
sbbl
and
push
lret
and
mov
push
into
xchg
bound
jge
int3
loop
mov
push
inc
jge
fisubrs
jae
aad
xchg
jle
test
jnp
mov
cltd
out
and
ret
adcb
push
fsubrl
sub
inc
jb
jae
pop
mov
outsl
rolb
xchg
imul
movsl
xor
bound
lods
jnp
shl
add
ss
push
frstor
mov
cmp
hlt
mov
lds
inc
sub
test
pop
call
add
lds
push
insl
mov
in
push
or
loopne
xor
inc
cmc
sub
mov
lea
fwait
push
and
adc
jnp
stos
fstpt
call
mov
adc
imul
jmp
cmp
lods
mov
pop
scas
or
std
call
jle
int
cs
into
pop
jbe
xchg
mov
in
mov
and
add
cmc
lods
scas
loopne
jno
sub
mov
mov
xchg
mov
adc
cwtl
cmp
pop
cltd
mov
fiadds
mov
mov
insl
das
mov
sub
sbb
add
cld
test
xor
pop
pop
jns
into
jo
addb
mov
insl
inc
leave
inc
call
pop
mov
in
cld
jae
push
dec
sbb
imul
outsb
into
adc
mov
test
jnp
das
mov
and
jle
cs
or
std
fcomps
mov
shrb
movsb
cmp
lock
lcall
add
push
inc
cltd
sbb
sub
ss
inc
and
push
xor
inc
out
add
loopne
cmpsb
inc
mov
stos
fadd
jo
push
push
push
inc
sbb
mov
dec
xor
inc
add
add
or
ljmp
dec
mov
jb
dec
test
or
fimull
push
mov
icebp
adc
pop
sbb
add
cmp
pop
jp
les
adc
mov
dec
dec
push
push
nop
cmp
pop
xchg
dec
inc
or
movsl
adc
aaa
popa
jmp
je
out
aas
mov
movsl
std
mov
js
xchg
fcomps
leave
xchg
mov
sbb
add
call
ss
xchg
call
add
adc
add
std
mov
scas
das
inc
lock
mul
pop
xchg
outsb
scas
push
sbb
push
lods
and
loop
and
push
call
inc
adc
loop
xorl
test
in
fmull
jl
cltd
pop
in
jp
std
inc
mov
mov
mov
pushf
outsb
mov
inc
or
sbb
inc
add
push
jns
sti
lahf
repnz
sub
pop
xchg
and
pop
jp
dec
and
pop
sbb
lret
mov
out
sti
and
jg
popf
adc
xchg
pop
daa
xor
clc
mov
push
mov
dec
popa
mov
xchg
add
dec
ror
gs
sbb
mov
xor
gs
xchg
xchg
add
imul
mov
stc
stos
inc
cmp
idivl
jnp
lahf
inc
inc
mov
jecxz
stos
xor
scas
adc
mov
push
or
loope
jge
xchg
cmpsb
enter
push
addr16
shrl
jmp
out
enter
cltd
jbe
push
cli
xor
pushf
xchg
xchg
or
pusha
test
ret
jo
or
shlb
faddl
adc
cwtl
pop
clc
in
mov
jne
pop
loopne
scas
fwait
mov
repnz
int3
imul
fs
loop
adc
xchg
into
iret
and
mov
fwait
loope
popl
pop
js
mov
imulb
and
shrl
add
pop
pop
mov
sub
push
addr16
imul
mov
pop
fcomip
mov
ja
lcall
fsubs
sub
insl
rolb
adc
xor
or
push
fcmovb
push
add
mov
lods
mov
dec
or
mov
lds
add
icebp
es
daa
loope
aas
sub
inc
or
mov
xor
cltd
jbe
movsb
mov
or
ds
stos
sub
gs
lods
adc
es
sub
cli
inc
sub
or
inc
test
aad
ret
daa
push
push
cmp
jno
xor
cmc
aam
xor
sbb
cld
add
sub
cmp
idivl
jge
xor
je
out
mov
mov
cmp
cmp
inc
scas
out
inc
and
dec
mov
sbb
cmpsb
pop
out
fistpll
push
aam
sarb
and
mov
out
and
sub
and
inc
loopne
mov
pop
aaa
jb
push
push
fidivl
add
in
movsb
imul
insb
rorl
testl
xchg
dec
xlat
out
loopne
or
fldenv
or
pop
and
inc
xchg
movb
in
jno
xchg
bound
and
sbb
loopne
iret
sti
mov
out
imul
lea
test
push
cs
jg
jno
dec
scas
mov
push
bound
out
sbb
inc
movsb
jecxz,pt
xor
cmp
push
int
inc
lcall
ljmp
jmp
fisttpl
or
mov
adc
xchg
lret
mov
fsubrl
out
sub
ficoms
rorl
cmpsl
mov
sub
gs
jno
insl
push
push
add
pop
and
dec
lea
pop
pop
jns
stc
stos
lcall
push
sub
or
out
jb
mov
nop
pop
mov
mov
mov
adc
out
scas
dec
fnsave
xor
and
les
push
xchg
stos
lock
mov
pop
inc
out
jle
sbb
jmp
pop
xchg
or
sbb
sbb
dec
dec
sbbl
jne
mov
cmpsb
adc
pop
xor
adc
loop
call
fucomip
lahf
cld
je
jmp
pop
and
push
mov
insl
mov
xchg
subb
in
lahf
and
push
int3
xchg
cmp
or
mov
repnz
xchg
movsb
push
xor
pop
dec
test
push
mov
das
jp
subl
inc
ret
xchg
xchg
clc
mov
popl
imul
xor
sahf
fs
push
mov
jne
fldl
add
and
jne
fdivrs
frstor
leave
pop
jecxz
inc
push
xchg
jno
pop
inc
out
dec
into
xor
push
arpl
mov
lds
mov
fistl
mov
push
inc
mov
rorb
and
inc
dec
test
rolb
xchg
sub
push
sub
pop
addl
nop
cmc
pop
mov
mov
hlt
mov
ficomps
outsl
in
aaa
jnp
ss
mov
sub
jge
xchg
test
jmp
mov
jo
add
sub
out
pop
cltd
sbb
push
mov
scas
int3
inc
push
mov
popf
stos
inc
adc
fsubp
xor
pop
push
out
stc
adc
orl
lods
jp
mov
dec
cs
xchg
pop
mov
xchg
call
jl
inc
test
pushf
sub
jno
lods
cmp
movsb
in
pop
cmp
cmpsb
adc
adc
pop
sub
push
popf
or
mov
mov
jg
jp
jbe
nop
stc
fwait
outsl
mov
out
ds
mov
dec
mov
lods
cmp
pop
or
pop
repnz
outsb
cmpsb
sbb
jae
sbb
mov
stos
pop
mov
nop
pop
int3
pop
sub
pop
lcall
jl
into
cs
push
push
mov
scas
push
xor
pop
sub
mov
repnz
cmpps
push
daa
jle
sbb
fs
push
fs
dec
pop
mov
adc
xchg
mov
movsl
movsl
xchg
push
push
or
mov
push
sbb
xor
pop
dec
cmp
fst
dec
xor
add
aad
cmpsb
sbb
or
das
dec
mov
into
lret
pop
mov
push
icebp
jno
pop
or
mov
nop
jp
fildll
or
sub
push
flds
jno
pop
mov
xchg
push
aaa
push
xor
xchg
dec
cli
loop
leave
xorl
and
inc
inc
jl
jae
jb
and
add
inc
and
shlb
lea
test
cmp
cltd
sbb
jae
jne
mov
add
mov
cs
dec
in
not
enter
push
dec
pop
test
push
mov
pop
mov
call
adc
in
adc
mov
test
stos
movsb
in
push
push
test
addr16
aad
push
jl
outsb
jl
in
or
addr16
mov
xor
rcll
in
fcmovnbe
mov
stc
xchg
mov
movsb
nop
addl
push
pop
or
ror
xor
pop
outsb
push
scas
fadds
dec
pop
dec
xor
clc
ss
mov
aaa
std
fcoms
xchg
add
movsl
xor
and
sub
sbb
aaa
movsl
les
dec
arpl
cwtl
cmpsb
loop
repz
jbe
aaa
stos
xchg
sbb
test
adc
xor
pop
mov
or
sbbb
xor
push
mov
jp
lods
fcoml
in
pop
jb
shrb
stos
mov
xchg
sub
loope
xchg
gs
or
bound
dec
nop
adc
add
faddl
outsb
mov
xchg
std
xchg
mov
xchg
fs
fcmovbe
dec
jl
push
and
pop
mov
or
out
add
outsb
enter
pop
dec
int
popf
jmp
add
mov
xor
jle
out
and
mov
cmp
loop
popl
cltd
repz
push
mov
dec
gs
cs
xchg
lock
pop
fsts
xor
hlt
fisubrl
cmp
sbb
das
outsb
jno
sub
imul
sbb
pop
mov
call
xchg
sbb
inc
aaa
mov
insl
js
test
cmp
out
imul
sub
jnp
jb
test
repz
loop
sbb
jnp
int
rorb
cs
xchg
daa
ljmp
jg
and
lea
push
cld
dec
add
daa
mov
adc
xchg
jmp
in
enter
mov
cmp
movsb
adc
movb
lret
pop
push
movsl
mov
cmp
adc
xor
test
cltd
movsl
jne
dec
add
adc
mov
adc
inc
sub
fildll
cwtl
aad
push
cli
dec
and
xchg
out
dec
cli
xchg
xchg
daa
sbb
pop
stos
dec
loop
or
pushf
repnz
cli
pop
sub
xor
lcall
xchg
test
sub
daa
jae
sub
adc
ret
int3
insl
inc
dec
clc
inc
push
scas
arpl
adc
mov
cmp
jb
lcall
gs
adc
ror
or
fiadds
es
lods
stos
jge
sbb
fistpll
out
xchg
sbb
loop
mov
mov
mov
scas
push
dec
lcall
sbb
adc
cltd
pop
cmpsb
into
nopl
lods
jb
repnz
fcoms
jp
adc
lods
clc
fldl
fsubrs
and
dec
jp
adc
fstps
or
cmp
cmp
lahf
jb
fldcw
icebp
add
jne
sbb
in
push
sub
push
jge
lret
fisubrs
outsb
aas
xor
sub
jge
mov
fsub
cmpb
cmc
aaa
imul
sub
fcomps
mov
push
and
ds
cmp
mov
mov
xor
jb
push
daa
sbb
std
add
popf
pop
mov
xchg
adc
orl
sub
add
test
loopne
add
iret
movsb
fisttpl
pop
inc
or
dec
xor
jae
mov
inc
add
repnz
addl
cs
xchg
jb
dec
aaa
xor
js
sbb
inc
jae
out
mov
imul
sbbb
mov
inc
jge
push
outsb
hlt
pop
clc
das
das
fwait
mov
cld
inc
push
mov
fistl
in
mov
pop
mov
sti
mov
mov
or
sbb
and
inc
test
cmp
mov
mov
xorb
push
inc
pop
sbb
out
push
cmp
outsb
clc
addr16
sbb
push
push
popf
je
bound
push
outsl
es
nop
insb
adc
aas
dec
psubsw
in
pop
cmp
push
daa
bound
gs
pop
es
and
mov
loope
outsl
pop
or
jp
cmp
jp
scas
push
push
pop
add
xchg
jb
sbb
popf
cwtl
out
outsl
frstpm(287
sbb
das
xchg
mov
hlt
xorl
mov
or
movsl
inc
and
daa
ret
loop
ret
dec
pop
icebp
imul
adc
mov
addl
pop
test
dec
scas
popf
push
pusha
mov
dec
dec
cmpsl
push
insl
call
pop
outsb
fistpll
test
sub
sbb
lret
and
dec
jmp
jbe
std
jl
mov
xchg
cmp
pop
xchg
dec
popa
sarb
icebp
ss
sahf
xor
xchg
or
mov
pop
lahf
popa
dec
or
sub
psrlq
cmp
adcl
dec
jp
insl
xor
and
cwtl
xchg
pop
std
cld
mov
std
inc
push
mov
cmpsl
sub
cmpsb
iret
int
and
xchg
xchg
testb
add
iret
jl
mov
scas
lds
es
sub
fs
xor
fidivrs
xchg
add
sbb
fisubrs
sub
add
fmul
movsl
xor
xor
jmp
es
nop
arpl
sub
ds
movsb
jb
mov
dec
cmp
mov
movsl
pop
mov
inc
rcrb
sbb
int3
push
inc
repz
sti
outsb
jae
hlt
or
mov
push
pop
jmp
mulb
in
xor
adc
add
jbe
cmp
enter
or
mov
xchg
cmp
xchg
cmp
xchg
sub
daa
inc
iret
mov
push
addl
ret
jbe
or
mov
and
xchg
pusha
insb
pop
into
rcrb
xchg
mov
dec
pop
mov
fildl
out
mov
repnz
dec
aam
cs
jg
xlat
xchg
ret
mov
xor
insb
xlat
decb
mov
fs
mov
push
mov
xor
sbb
cltd
vpmovmskb
call
jge
imul
decl
popf
xlat
ljmp
mov
cmc
ret
or
lea
jbe
sbb
dec
les
pushf
lahf
movsb
ret
jmp
hlt
sbb
pop
imul
adc
adc
pop
jmp
ds
dec
or
jp
hlt
mov
lret
lods
adc
dec
mov
add
mov
mov
mov
dec
adc
xor
popf
mov
jecxz
and
pop
pop
inc
xorl
popf
andb
ja
incb
dec
out
je
or
adc
jnp
std
insb
inc
insb
pushf
jb
or
enter
jnp
sahf
fisubs
sbb
jne
push
push
fldl
int
sahf
std
into
cli
jbe
outsb
xor
sti
cmpsl
push
cmp
xchg
push
mov
loop
daa
aam
out
mov
add
das
fimuls
stos
out
ljmp
sub
cmp
mov
cmpsb
or
dec
pop
js,pt
xor
aam
mov
jg
sbb
in
ljmp
lcall
sub
test
sbb
sbb
jle
notb
movsl
sub
sub
dec
adcb
push
in
arpl
leave
mov
js
pop
push
dec
int
mov
add
mov
out
mov
in
push
cmp
movsl
dec
mov
sub
fidivrl
inc
daa
push
test
scas
push
cmp
in
xchg
sbb
adc
mov
mov
inc
cmc
shlb
pop
repnz
sbb
xor
sub
movsb
push
das
test
roll
repz
gs
sbb
scas
lds
and
mov
stos
inc
jns
and
pop
pop
xchg
cmc
icebp
sahf
mov
xor
or
add
push
outsl
js
mov
in
lret
xchg
in
jecxz
ucomiss
dec
clc
nop
adc
in
ss
sub
cmpsl
jns
push
and
dec
xchg
xchg
jl
test
jbe
jo
sub
aaa
mov
lahf
lods
mov
fxch
dec
imul
lds
fcoml
sub
and
push
cmp
xchg
js
stos
gs
lcall
or
mulb
jns
xchg
xor
xor
mov
xchg
test
pop
push
mov
jmpw
dec
outsl
push
pop
cmp
inc
mov
minps
mov
sub
push
sbbl
push
repz
in
decb
or
push
in
mov
rcll
les
cmp
stos
insl
pop
inc
sub
sub
int
lcall
sub
push
adc
push
cmpsb
cmpsb
shrb
dec
lcall
xlat
pop
push
in
inc
cmp
inc
cmp
lods
push
cmp
xor
cltd
mov
insl
data16
jl
pop
vmovddup
scas
mov
call
sahf
xchg
ss
je
and
mov
pop
imul
mov
dec
int
cmpsl
sub
in
insb
xchg
sub
aaa
shrb
lods
inc
int
pop
mov
jmp
push
mov
cmpb
xchg
lods
popa
xor
popf
xor
sahf
push
sbb
mov
outsl
js
jp
jg
inc
out
ret
dec
lods
and
es
aad
incl
mov
jbe
imul
fistps
mov
mov
popa
fsts
cmpsl
or
inc
push
data16
mov
sub
xor
out
jb
popa
stc
mov
js
lret
stos
pop
sbb
mov
xchg
aam
iret
shrb
jo
out
and
jle
pop
aam
cli
je
push
inc
outsl
sti
cs
scas
mov
push
and
add
dec
pop
push
or
js
in
push
push
adc
rorl
shl
sbb
or
sbbl
push
mov
push
dec
popf
lahf
lods
popf
outsb
and
test
jmp
insb
in
jecxz
in
xacquire
aam
add
xchg
pop
sub
xchg
mov
sub
rcrb
icebp
clc
push
jmp
mov
jbe
pop
mov
outsb
stos
add
mov
stc
xchg
repnz
push
pop
pop
dec
shrl
leave
dec
fiadds
cltd
adc
std
cmpsb
nop
push
dec
ret
mov
sub
aam
imul
and
adc
cwtl
icebp
xchg
add
add
cmp
mov
int
lcall
cwtl
mov
aas
jnp
out
xchg
movsl
mov
xchg
xor
adc
icebp
cld
cmp
or
addb
cmp
inc
sub
sbbb
xor
sub
push
pop
in
jo
pop
sub
je
enter
mov
in
pminub
jbe
es
xchg
cmc
push
imul
stos
gs
or
adc
push
scas
xlat
mov
sub
mov
loope
mov
and
loop
mov
shlb
push
push
scas
out
out
jo
xchg
call
cmp
pop
test
mov
mov
bound
jp
jl
nop
and
push
or
adc
fisubrl
xorb
dec
neg
rorb
adc
lcall
js
mov
xor
mov
mov
out
stos
inc
lea
xchg
mov
popf
mov
ret
inc
mov
dec
in
mov
lret
mov
ds
pop
loopne
xor
and
mov
pop
cmp
xchg
mov
sahf
dec
push
xchg
out
mov
imul
bound
sbb
xchg
cmp
int3
xchg
inc
dec
mov
fisttpll
dec
sbb
mov
and
sub
mov
cli
ljmp
lret
inc
ret
enter
scas
scas
jge
daa
in
cld
inc
test
push
mov
repnz
mov
cs
lods
cmc
dec
add
and
stc
inc
dec
sbb
push
push
std
jge
mov
loope
popa
push
adc
mov
lds
sarl
cmp
mov
arpl
cmp
ror
cld
sbb
and
test
mov
test
test
jle
clc
cmp
push
jmp
xchg
dec
dec
mov
push
and
out
jp
iret
test
or
enter
dec
xor
dec
decb
jecxz
in
mov
inc
mov
jecxz
sub
dec
sub
push
xor
ljmp
subl
nop
andl
movl
mov
testl
outsl
push
add
sti
and
mov
ljmp
fwait
daa
lds
inc
pop
xor
add
cvtps2pd
mov
pop
xchg
rcrl
outsl
pusha
sub
cmp
leave
xor
xchg
inc
jg
dec
jae
sbb
and
gs
loopne
test
or
stc
adc
mov
add
jp
pop
jo
cltd
int3
fs
mov
movsb
addr16
imul
jmp
jbe
bound
out
inc
lods
scas
dec
xchg
lcall
add
dec
decb
inc
pop
shrb
xchg
call
adc
and
xor
movsl
push
add
xor
dec
pushf
pop
push
add
outsb
mov
dec
or
cmp
insl
or
xchg
testl
adc
mov
inc
int3
jle
mov
jae
inc
push
repz
lret
jno
sbb
cli
faddp
mov
ret
sbb
jae
sbbl
out
mov
mov
addr16
loop
add
inc
xor
aam
out
or
clc
out
popf
mov
pop
pop
jbe
call
cmc
pop
sub
std
push
aad
jle
ret
cmpsl
or
sbb
push
inc
je
xchg
lds
cmpb
popa
test
mov
lret
adc
jmp
mov
dec
lahf
test
dec
in
mov
ja
mov
daa
aad
jb
int3
mov
out
xor
xor
mov
inc
sub
mov
dec
jno
jo
push
or
out
and
rolb
arpl
mov
imul
fstl
mov
mov
stos
imul
sub
lcall
and
movb
shl
push
outsb
int3
sahf
xor
negb
dec
out
xchg
mov
jecxz
xor
adc
aaa
je
ljmp
cmp
outsb
adc
notb
cmp
sbb
or
call
aas
cs
sbb
jp
cltd
mov
jno
mov
jp
idivb
popa
hlt
xor
adc
cltd
xchg
lahf
mov
adc
sti
fcoms
and
mov
fldt
cmp
mov
xor
lahf
xchg
sub
xchg
scas
add
dec
loop
pop
pop
stc
movsl
pop
dec
in
jno
scas
in
push
loopne
mov
mov
cmp
leave
call
mov
cltd
negb
ss
mov
lea
test
and
push
pop
xor
push
icebp
sahf
xor
out
or
and
mov
fcmovnb
in
outsl
inc
daa
outsw
mov
or
out
enter
sub
cmp
lcall
stos
mov
pusha
mov
test
push
and
pop
enter
inc
addb
xchg
shlb
and
push
xor
jle
ljmp
push
cmp
lahf
mov
test
pop
sysret
jns
sbb
or
jl
int
mov
shl
push
xor
test
add
fldl
adc
jo
xchg
mov
mov
aas
and
cmp
inc
xor
in
ret
cmp
cltd
mov
lret
scas
sub
movsl
mov
or
sbb
cmp
xchg
das
xchg
sbb
jb
push
fldl
pop
filds
dec
push
mov
mov
leave
pop
cli
sbb
movsb
xchg
pop
bound
cli
sbb
ja
or
jl
xlat
fcomi
inc
push
cs
dec
inc
lds
or
sub
out
iret
in
push
imul
fstpt
das
dec
dec
fldenv
adc
mov
pop
in
jp
mov
cs
or
shll
fnstenv
push
mov
mov
test
outsl
dec
sub
shll
add
leave
ds
xchg
je
push
mov
cmp
pop
ret
repz
in
iret
ja
scas
mov
xor
shl
pop
fistpl
sar
arpl
or
push
dec
iret
inc
aaa
nop
icebp
std
rorb
pop
daa
fdivs
imul
dec
orl
sub
xor
xchg
add
sub
mov
jnp
stos
std
ja
adc
fsts
push
fnstenv
xorb
dec
roll
testl
fwait
inc
shrl
xlat
sub
sub
xor
push
rclb
dec
add
adc
jno
jg
mov
add
das
mov
xchg
mov
and
fsubs
lock
fmulp
aad
inc
pop
sar
jg
lock
xchg
cld
lods
stc
xchg
pop
hlt
adc
mov
cmpsb
mov
out
jb
jge
fcmovnb
outsb
fadds
mov
lods
divb
movsl
clc
add
add
adc
sub
mov
push
push
mov
shr
sti
cmpsl
pop
add
inc
out
or
lds
xchg
mov
pop
push
icebp
push
js
test
test
fcmovbe
cmp
jb
push
xchg
clc
test
insl
dec
add
call
or
jbe
jmp
push
fdivl
call
mov
or
dec
fwait
test
pop
lahf
add
dec
mov
adc
outsl
in
push
ret
in
ljmp
in
je
xlat
stos
ja
mov
push
cmc
mov
dec
lret
push
cmp
mov
push
mov
std
insl
shl
xchg
sub
jb
inc
fnstcw
das
outsl
xchg
cmp
daa
add
cmp
jg
push
fidivrl
xor
imul
add
mov
mov
lahf
ret
sahf
mov
lcall
scas
test
inc
movb
fsubrs
and
pop
cs
ror
out
and
xor
xor
hlt
in
das
shlb
mov
and
insb
pop
daa
xchg
add
aaa
loopne
and
fistpll
loop
and
dec
push
mov
repnz
cwtl
fstps
stc
sub
imul
and
into
jno
xor
xchg
lds
mov
fmuls
cmp
imul
popf
sahf
daa
jge
data16
shll
nop
pop
jl
ja
pop
push
inc
mov
loopne
pop
loope
jae
jle
inc
or
daa
pop
lods
cltd
loop
sbbb
and
adc
push
mov
dec
iret
push
pop
mov
or
jb
loope
lret
dec
adc
xorb
data16
popf
idivb
scas
out
lret
jbe
xchg
jne
inc
sti
cmp
adc
dec
out
push
loopne
aaa
andb
shrl
and
or
gs
iret
pop
pop
loope
imulb
adc
push
pop
data16
cmp
pop
shll
fwait
or
sub
pop
imul
mov
or
repnz
cmpl
cld
ljmp
sbb
push
lds
bound
pop
add
jb
or
add
jg
lods
sbb
mov
nop
leave
mov
mov
jl
ds
jge
or
pop
das
mov
sbb
pop
jo
repnz
iret
mov
fsubs
mov
and
sub
imul
push
fcomip
shrb
pop
fdivrl
adc
int3
xchg
fsub
mov
jp
sub
push
fisubrl
inc
pop
scas
and
pop
sub
mov
addr16
xchg
pop
test
sub
lcall
jns
shll
push
mov
idivl
cwtl
mov
iret
test
aam
xlat
mov
adc
adc
push
out
jl
in
xchg
adc
lods
jnp
inc
cmp
addr16
fidivrs
js
mov
test
sub
adc
aaa
ljmp
enter
fcmovnbe
int3
sbb
sbb
mov
ljmp
gs
fmull
xchg
stc
out
fldcw
push
ljmp
sar
sub
lahf
inc
repz
data16
stc
cmpsl
aad
and
xchg
jmp
lahf
je
subl
and
mov
testb
inc
aaa
xorl
lods
pop
data16
xor
sbb
sub
or
mov
lea
push
out
and
arpl
in
add
add
in
lahf
je
sti
jbe
and
pop
test
mov
loope
ret
lret
cmp
shl
lcall
and
push
into
shll
sbb
xchg
popa
pop
push
lods
xchg
jns
sbb
test
dec
xor
jb
mov
xlat
dec
icebp
lea
iret
push
or
sbb
push
or
enter
push
pop
xlat
in
hlt
popa
mov
ficoms
stos
push
push
shrb
scas
push
or
fiadds
push
lret
aam
ret
jl
add
jae
dec
pop
jge
sub
ljmp
dec
fadd
cwtl
adc
xchg
xchg
aad
cmc
int3
lods
pop
pop
dec
mov
push
push
mov
push
dec
xor
enter
out
rcll
push
popa
mov
mov
inc
es
push
divb
ljmp
out
lahf
and
cmp
pop
pop
adc
sbb
test
add
in
fucomip
jl
pop
xchg
sbbl
xlat
push
pop
xchg
or
jmp
mov
rclb
mov
mov
or
in
sti
sbbb
sbb
mov
pusha
out
les
imul
popf
in
sub
pop
sbb
loopne
ret
call
lcall
cs
outsl
and
xor
inc
and
mov
xchg
out
add
pcmpeqb
or
push
sub
mov
sub
pop
cli
cwtl
test
imul
jg
enter
dec
mov
cmp
cmpsb
jp
pop
adc
aaa
inc
inc
aad
dec
insb
ficoms
add
xchg
nop
sbb
scas
rcl
or
cmp
xchg
inc
ds
sub
jmp
clc
sub
xor
pusha
mov
add
push
fcoml
mov
es
dec
std
inc
cmc
pop
adc
es
loope
ret
cmp
push
fdivr
fwait
cmp
mov
add
leave
ljmp
lahf
xchg
insb
cmp
xor
int
add
mov
sbb
pop
pushf
mov
js
xor
ret
cli
xlat
shll
sub
inc
mov
push
xchg
shrb
jnp
sbb
mov
fidivl
int3
setb
fcmovnbe
or
jp
aaa
cltd
popf
mov
push
sub
jp
sbb
jns
test
hlt
inc
shrb
faddl
lds
fnstsw
aas
aaa
inc
imul
stos
or
pop
mov
cmpsb
or
rcr
pushf
adcl
clc
mov
js
nop
xor
sbb
push
jmp
loope
repz
popa
jbe
adc
pusha
fisubs
mov
xor
out
aam
pop
fistpl
adc
inc
mov
and
lods
cmpl
inc
out
out
cmp
sub
aaa
mov
cmp
sbb
push
sub
das
sbb
ret
add
popa
sbb
adc
mov
in
aas
lods
mov
mov
push
xchg
sbb
push
idivb
mov
rcl
ss
rol
idivb
pushf
jmp
pop
and
in
leave
push
inc
scas
or
aaa
nop
jle
stc
cmpsb
repnz
jno
mov
sbb
jmp
or
sub
add
adc
popf
cmp
cmp
mov
ret
sbb
sti
ret
xorl
mov
mov
sbb
neg
sbb
out
add
repz
stc
adc
ret
jecxz
jno
jg
xor
jae
push
daa
mov
push
add
mov
call
jae
test
test
daa
in
call
inc
dec
pop
dec
test
popf
rcr
xor
outsb
repnz
lret
cs
ret
jne
push
sbb
sub
pop
mov
cmpl
xchg
sub
enter
shrb
dec
push
hlt
adc
cli
cld
jecxz
fwait
iret
xor
mov
sbb
imul
iret
fnstsw
daa
pop
or
aam
lods
mov
jns
and
pop
adc
mov
add
or
ja
dec
sti
scas
addr16
fsubrs
rcrl
push
pop
stos
adc
loop
lret
sti
push
cltd
adc
mov
call
or
xchg
xchg
mov
jo
mov
fildll
cmp
push
fucomip
push
ja
push
insl
stc
adc
andl
xchg
jecxz
std
out
mov
hlt
rorb
mov
out
xor
leave
dec
pop
push
or
xchg
jle
or
push
mov
push
repnz
imul
dec
push
mov
fcmovb
pop
fldl
push
inc
es
pushf
push
inc
inc
clc
je
rcll
data16
push
cwtl
jge
pop
push
or
insl
cltd
pop
shlb
mov
or
dec
adc
jae
xor
fnstsw
inc
jl
xchg
test
pop
jb
addr16
imul
daa
fwait
sbb
sbbb
xorb
std
and
mov
in
in
loope
aaa
pop
fs
test
push
jl
ds
add
cli
cmp
inc
inc
push
push
sbb
fisubrs
xchg
stos
xor
sub
cmp
int3
xor
fisttps
push
pop
cmp
xchg
sub
dec
sub
adc
jns
lock
adc
shrb
dec
pop
popa
inc
mov
subl
push
mov
movsl
or
sub
shll
inc
push
pop
in
insb
es
and
jecxz
daa
sbb
jbe
cmp
dec
stos
adc
dec
rorb
lret
stos
mov
mov
mov
push
lcall
add
inc
add
sbb
add
daa
dec
push
pop
mov
mov
mov
cs
scas
loope
je
pop
test
out
sbb
in
dec
lret
cmp
xor
scas
inc
imull
push
xor
cmp
pop
push
call
dec
ret
dec
pop
jns
jle
pop
xor
sahf
jmp
int
fcomps
dec
out
jge
sti
sub
lcall
lcall
std
hlt
movsl
xor
or
lcall
repz
es
sbb
mov
or
push
mov
cmp
cmc
push
loope
mulb
sbb
inc
cmc
mov
jg
pop
inc
mov
call
lods
nop
jmp
loop
mov
or
push
mov
iret
andb
fnstenv
lcall
outsl
push
mov
lret
dec
fwait
notl
sub
aam
jge
ret
lret
and
fmuls
dec
jle
dec
push
out
mov
loop
aam
bound
out
and
mov
and
xchg
aam
lcall
add
and
aam
xchg
lcall
stc
lahf
sbb
adc
mov
cmp
pop
xchg
adc
fdivrs
stc
js
inc
sbb
sbb
mulb
js
lea
lcall
inc
mov
sbb
stos
insb
aam
or
imul
cmpsl
sar
xor
mov
out
fstpl
fmull
sub
inc
xchg
insb
lods
sbb
cmp
cld
xor
aad
xor
add
mov
lret
fadds
mov
mov
pushf
push
repnz
repnz
cmp
aad
inc
inc
data16
xor
or
push
repnz
mov
cmpsl
inc
mov
aam
jae
loopne
adc
out
arpl
dec
cmp
jno
adc
jne
shlb
aad
sbb
loopne
or
xor
std
cmpsl
jle
js
xchg
or
outsb
lods
cmpsb
xchg
cmpsb
add
mov
ret
fnstsw
ret
mov
out
insl
mov
pusha
rorb
push
adc
jle
push
das
std
out
cwtl
loop
pop
sbb
pop
movsb
pop
sarb
jg
into
test
inc
xchg
outsb
jns
mov
andb
xchg
les
sub
aam
imul
jmp
push
or
lret
pop
mov
pop
sub
jge
test
xchg
push
inc
rcr
popa
jae
cmp
adc
les
out
mov
mov
adc
outsl
mov
xchg
std
xchg
mov
or
dec
insl
aaa
mov
sub
std
xchg
fwait
push
and
sub
jb
mov
and
mov
les
js
out
sub
xchg
pop
shlb
rorb
popf
or
loop
or
in
jo
mov
or
mov
adcl
loopew
inc
rcl
mov
push
stc
pop
pop
call
sub
lods
inc
dec
xchg
pop
mov
pop
and
mov
int
andb
sub
dec
mov
pop
out
hlt
lret
stos
out
fnstcw
adc
mov
xor
jge
or
add
cmp
mov
xchg
mov
jno
pop
scas
dec
imul
mov
aas
xchg
lcall
or
pusha
roll
sbb
and
lahf
mov
jne
cmp
imul
sti
movb
jnp
push
fisttpl
aas
out
lcall
mov
sbb
mov
out
aam
xchg
hlt
mov
fs
mov
xlat
adc
dec
and
pop
dec
fnsetpm(287
mov
jmp
xchg
mov
popf
or
jo
scas
fldt
mov
bound
inc
inc
inc
xor
mov
cmpsb
jbe
sbb
xchg
push
arpl
in
adc
pop
xor
pusha
sahf
fimuls
jmp
and
sub
xchg
sar
xchg
add
cmpsl
sub
xchg
rolb
mov
xchg
or
mov
and
and
push
adc
mov
sub
punpcklwd
outsb
push
shll
imul
hlt
sub
xor
add
mul
icebp
jno
stos
sub
mov
cmpsl
pop
enter
lods
pop
addr16
popf
fwait
sbb
sti
xor
inc
mov
enter
sbb
sti
jb
roll
push
push
jg
loopne,pn
mov
pop
adc
mov
call
in
imul
lahf
mov
or
mov
cmp
pop
dec
lahf
mov
lcall
cmp
loopne
mov
jno
mov
inc
imul
lds
in
or
sub
ss
in
decl
mov
xor
int3
imul
inc
or
mov
arpl
inc
xchg
orb
lds
mov
in
test
lods
add
leave
mov
orl
mov
mov
pusha
shlb
push
push
popa
dec
lcall
sub
xorb
gs
sub
sbbl
mov
enter
push
loop
push
sub
dec
adc
mov
cltd
in
add
and
mov
fs
add
rclb
jmp
in
mov
imul
flds
fisttpl
out
aaa
jb
in
pushl
sbb
xor
sbb
test
stos
or
lret
aas
push
pop
adc
jbe
mov
xor
mov
adc
in
push
test
and
andl
inc
lock
imul
out
stos
gs
scas
jp
cli
lods
std
data16
dec
adc
in
ss
add
mov
lods
jns
sahf
loopne
iret
pusha
or
pop
inc
sbb
div
daa
jae
xlat
lcall
sub
xorl
cmpb
cmp
xor
xchg
push
sbb
lcall
or
mov
mov
imul
inc
pop
xor
lret
push
int
sub
push
iret
lods
dec
test
ja,pt
int
and
push
test
shr
inc
sbb
xor
mov
je
mov
add
cmpsb
std
scas
repz
sbb
in
pop
xchg
imul
mov
cmp
push
dec
mov
jg
push
sbb
insb
int3
jle
fsub
pop
xor
pop
or
sbb
enter
cltd
ljmp
jno
mov
mov
inc
pop
and
lods
cld
or
pop
and
lock
inc
test
cwtl
inc
mov
mov
std
cmp
pop
mov
xorb
decb
xlat
lea
mov
aas
gs
sub
fistl
adc
jle
adc
das
sub
cmp
nop
lcall
subl
xchg
daa
xor
shll
cltd
mov
adc
adc
or
in
clc
dec
aaa
jae
push
pop
adc
sub
mov
inc
std
sub
mov
enter
hlt
or
repnz
lods
and
pop
fucomp
mov
cmp
in
orb
cmp
daa
xchg
push
xchg
inc
sub
mov
ss
repnz
xchg
ret
xchg
sub
lret
jge
outsb
pop
or
das
mov
mov
inc
add
in
shr
jno
sti
int
test
inc
pop
push
sbb
dec
shrb
push
fcmovne
mov
dec
xor
push
xor
jg
scas
pop
adc
mov
push
pop
sbbl
xchg
inc
or
cltd
jle
repnz
inc
mov
inc
adc
fs
insb
jmp
jle
fxch
fwait
push
xchg
xchg
sub
push
es
popa
je
add
push
inc
adcb
sbbl
mov
xchg
loope
sub
xor
jb
cwtl
mov
mov
jae
jp
adc
int
mov
adc
aaa
or
sar
ljmp
int
cmpsl
ss
jno
lcall
push
push
daa
push
xchg
push
inc
or
cmpsb
push
cmp
mov
js
das
pop
in
jl
outsl
pop
add
push
rolb
js
mov
movsl
scas
ljmp
imul
fidivs
out
outsl
addl
mov
add
loopne
sub
jmp
data16
fcomp
xchg
xor
out
pop
cltd
dec
ljmp
mov
sub
push
js
hlt
inc
shll
mov
add
aad
inc
fnstsw
xchg
cmp
cmpsb
mov
in
lret
mov
jbe
jns
push
addr16
mov
and
das
mov
pop
cmpsl
or
cli
fdivrl
jns
add
inc
mov
arpl
mov
inc
cmp
pusha
test
inc
aas
or
adc
rorb
imul
cld
xlat
outsl
je
push
scas
jp
out
cmpsl
pushf
fmull
push
cmp
in
je
lcall
orl
cmp
loopne
inc
jns
out
cmpsb
std
cmp
sbb
ret
dec
dec
pusha
inc
xor
pop
fistl
and
movsb
jns
dec
dec
jnp
ljmp
outsl
out
mov
repz
in
test
sub
jmp
bound
iret
dec
add
mov
and
jle
dec
push
adc
dec
xchg
mov
shrl
dec
mov
mov
adc
fbld
es
sahf
push
stos
mov
and
data16
cmp
in
mov
jmp
aaa
pusha
sub
clc
lret
xlat
sub
and
cmpsl
dec
cmp
out
sarl
dec
pop
lods
mov
dec
or
pop
mov
imul
sbb
jle
test
ja
cmp
mov
adc
add
push
dec
inc
push
ds
cmp
jecxz
bound
mov
mov
xchg
mov
add
push
sti
jno
repz
mov
je,pt
out
mov
cwtl
jbe
mov
or
out
adc
cwtl
insb
inc
mov
dec
mov
fidivl
das
adc
and
ret
xor
outsb
add
out
repz
sub
pop
xchg
aas
inc
sub
jle
xorb
sahf
out
cltd
int
add
fcompl
js
xor
mov
sub
inc
pop
inc
hlt
or
out
or
inc
ja
in
decb
mov
icebp
push
push
notl
insb
mov
outsl
sub
or
adc
mov
push
xor
cmp
fbstp
clc
xor
in
insl
data16
pusha
and
and
hlt
sub
push
lret
add
out
pusha
aad
imul
call
cs
popa
addr16
xor
fisttps
bnd
int3
mov
pop
inc
cs
enter
aad
in
enter
push
faddl
sbb
mov
cmpsb
mov
or
shl
aaa
cli
pop
ljmp
cmpxchg8b
push
fimuls
mov
cs
or
sub
dec
mov
cmp
inc
dec
addb
in
lcall
add
ror
lock
push
and
outsl
mov
sbb
incl
ja
lret
xchg
into
cli
movsl
pop
sbb
fnsave
cmpsb
cmp
imul
push
push
push
jno
inc
cmp
insb
push
subl
sti
in
mov
jle
jne
mov
es
lock
lcall
lret
pop
lock
cmc
cs
pop
rolb
pushf
pusha
and
push
and
dec
push
push
test
aad
mov
scas
clc
push
in
out
mov
scas
mov
dec
xchg
popa
loop
adc
or
in
scas
aam
mov
xchg
out
dec
fs
mov
jae
mov
sub
call
mov
or
or
inc
mov
sahf
jecxz
jae
call
iret
mov
fsubrl
push
dec
rclb
jge
mov
sub
std
push
mov
sbb
movsb
xchg
cmpsb
imul
in
mov
out
fwait
sahf
sbb
sbb
sbb
das
and
lods
or
sbb
pop
dec
out
cwtl
add
jge
inc
daa
sahf
stos
mov
inc
inc
mov
aaa
and
dec
loope,pn
sahf
sub
testb
incb
sbb
popa
xchg
lret
shl
fcomps
or
fcoml
repnz
enter
rol
and
push
popf
fdivr
pop
dec
fsubrl
mov
cmp
cltd
mov
xchg
mov
les
dec
mov
stos
jb
fcomip
stc
aas
in
add
sbb
call
push
and
or
int
fisttpll
hlt
jb
repnz
cmp
jo
xor
mov
out
movsl
or
push
jg
mov
lods
cld
test
fwait
inc
bound
pop
adc
add
and
or
add
es
xrelease
or
aaa
mov
loopne
push
rcrl
pop
add
pop
xlat
lret
xchg
sar
jb
scas
test
mov
lret
sbb
pop
cmpb
or
add
pop
add
lret
pop
roll
cld
pop
pushf
mov
sub
dec
adc
out
dec
aam
arpl
aas
test
mov
scas
es
or
mov
pop
je
push
adc
jp
je
jne
mov
cli
or
pop
les
cmp
pop
stos
jnp
les
mov
shrb
sbb
mov
push
push
push
jmp
testb
ja
jne
mov
xorb
sub
pusha
or
js
ljmp
loope
sbb
fldl
fsubrl
mov
les
cs
leave
xchg
nop
fiadds
test
in
dec
popf
adc
cmpsl
and
and
outsb
mov
mov
cmp
addr16
and
cltd
imull
mov
pop
lcall
xor
mov
jae
mov
scas
in
sub
jecxz
aaa
out
in
dec
push
out
dec
stos
cld
cmp
or
jle
sbb
jmp
es
pop
nop
int3
je
or
xchg
outsb
gs
lods
stos
call
mov
push
pushf
jne
inc
outsb
cmp
sub
and
lret
shrb
dec
xchg
movsb
and
faddl
std
lret
dec
leave
sub
orl
cmp
dec
out
sbb
insl
xor
jmp
push
fiaddl
repz
fidivrs
test
rcr
jmp
hlt
xchg
and
rol
adc
sub
leave
pop
add
into
in
out
repz
sub
mov
repnz
sub
aad
aas
mov
in
push
push
adc
push
push
xchg
daa
lea
ds
sub
inc
test
xchg
mov
sar
arpl
or
mov
inc
mov
ss
cmp
mov
stos
push
js
xor
mov
aas
push
xor
out
add
push
sbb
aas
mov
xchg
xchg
leave
lods
icebp
pop
mov
xor
aaa
fsubrl
mov
jno
les
sti
shrl
mov
ror
pop
inc
outsb
adc
stos
subl
xchg
into
mov
add
nop
movsl
push
push
xchg
aad
or
scas
lods
dec
test
loopne
outsl
stos
adc
scas
cmc
sbbb
sbb
test
cli
dec
cmp
je
test
fstps
sbb
es
ret
sub
add
jbe
sbb
mov
icebp
mov
das
sbb
cwtl
cmp
push
pop
sbb
push
lret
sbb
sti
out
mov
xchg
sbb
push
ja
jb
mov
in
or
xor
int3
xor
sub
jb
add
mov
pop
push
push
das
or
gs
pop
cli
push
iret
push
cmp
lret
in
cld
inc
cmpsb
inc
arpl
mov
int3
rorl
adc
mov
add
mov
mov
mov
movsl
xor
inc
shll
pop
lahf
cwtl
rcrb
mov
fimull
xor
pop
jbe
inc
outsl
das
es
push
push
and
pop
dec
popf
inc
das
jecxz
sub
mov
sbb
mov
jg
xlat
call
rorl
insl
in
mov
test
addr16
aaa
jl
dec
fidivs
out
lret
int
sbb
fldcw
insl
dec
cmp
int3
loope
dec
mov
fsubl
in
xor
ja
pusha
jg
jg
push
test
adc
dec
inc
mov
pop
dec
lahf
jmp
iret
idivb
or
xor
cmp
add
sahf
fwait
pop
mov
stos
and
push
xchg
or
pop
sbb
lea
or
aam
sarb
push
cmp
imul
inc
mov
arpl
in
pop
call
push
and
jo
push
mov
add
or
jge
and
int3
jae
lret
es
jo
sahf
aad
je
pusha
int3
mov
mov
push
daa
add
dec
repz
sub
inc
push
fstl
fwait
xchg
push
js
or
mov
and
lcall
push
aas
mov
pusha
cmc
and
dec
mov
push
js
test
jnp
addr16
jle
add
or
and
cwtl
dec
in
mov
mov
arpl
inc
push
ss
xor
push
das
pushf
adc
sub
arpl
pushf
jge
incl
jnp
fdiv
jae
add
xor
mov
rcrl
inc
cmc
jnp
jae
dec
inc
daa
icebp
push
xor
lods
cmc
icebp
jl
es
xchg
sub
lock
pop
js
inc
dec
aam
stc
xor
jns
sbb
push
and
add
sub
ja
bound
fdivs
call
inc
stos
out
jnp
popf
and
and
mov
enter
in
jns
outsl
lods
pushf
adcl
xchg
inc
or
out
sub
jg
mov
popa
adc
xor
shrl
or
mov
lods
xchg
out
add
mov
fwait
mov
or
cmpsb
shlb
aam
cmp
pop
sahf
xchg
mov
push
mov
scas
jb
pop
scas
cmp
xlat
xor
jo
aas
or
gs
cmpsl
jns
loop
rep
gs
movb
lret
xchg
sahf
shl
add
xchg
inc
or
xor
popw
aas
xchg
and
lds
mov
xchg
ss
jo
jmp
rcrb
pop
mov
repz
pop
mov
clc
sbb
lcall
outsb
ds
icebp
outsb
or
cmp
jb
cmpsb
adc
pushf
cmp
aad
or
fildl
outsl
loopne
arpl
mov
inc
cli
andb
mov
inc
adc
mov
mov
cltd
out
push
pop
sbb
stos
js
ja
sbb
adc
mov
mov
mov
pop
sbb
mov
cmc
loop
lret
mov
je
push
or
aas
sti
scas
push
inc
xor
or
xchg
jl
xchg
pop
inc
cld
push
sbb
dec
jns
addr16
out
mov
enter
and
repnz
popf
inc
bound
jnp
inc
ret
popa
test
mov
outsl
add
ficoms
jns
dec
push
and
aas
rorb
stc
sub
aas
scas
xor
shl
fsubr
loop
and
lcall
xlat
mov
sbb
inc
mov
sub
nop
xor
adc
or
ss
notl
inc
jecxz
popa
leave
in
sub
jb
dec
faddl
and
and
push
dec
and
pop
inc
shr
inc
mov
lcall
insb
jno
sub
sbb
das
cmp
fisttpll
call
mov
adc
shlb
ss
fwait
lret
sbb
xchg
jl
nop
mov
push
mov
stos
xchg
jo
lock
mov
dec
popa
fldenv
xor
push
std
aad
push
mov
pushf
insl
push
in
push
loop
jo
sbb
add
inc
es
and
mov
mov
sub
test
decb
sar
inc
movsl
jl
int
divb
mov
std
mov
inc
mov
mov
inc
inc
push
mov
out
sub
sarl
inc
insl
xor
ja
andb
mov
xchg
jmp
push
jp
rcr
fnstsw
enter
xor
test
sub
popf
cmp
push
mov
or
jg
nop
push
and
fwait
inc
dec
fstps
jle
push
sarb
mov
iret
popf
ret
push
sub
mov
es
and
jp
xchg
aam
add
nop
scas
or
cmp
push
loop
push
sbb
dec
mov
sahf
jp
pushf
cli
bound
es
sub
dec
or
and
cwtl
mov
sub
fneni(8087
stos
imul
jns
xchg
add
cli
je
andb
and
lea
pop
xor
sub
popa
sub
or
jno
fdivl
mov
sahf
inc
mov
pop
push
dec
adc
clc
cs
imul
push
push
int
dec
xchg
cmp
sti
test
push
lahf
scas
push
lea
frstor
sbb
mov
insb
or
enter
repnz
out
sub
xor
in
xchg
and
repz
add
aad
pushf
inc
enter
mov
mov
loope
cmp
mov
test
xlat
jge
inc
call
lock
lcall
addr16
and
stc
mov
pop
in
and
xor
std
into
cld
into
insl
pop
and
jl
in
mov
ret
clc
pop
and
and
sub
rorl
cmovbe
stos
call
cs
mov
lea
repz
mov
fbstp
clc
sub
test
sub
cwtl
mov
mov
mov
xchg
push
pop
stos
mov
cmp
mov
cmpsb
or
push
mov
and
adc
out
clc
jp
push
add
jge
mov
nop
xchg
scas
or
movsl
and
jo
int3
out
adc
ljmp
add
lahf
scas
mov
mov
in
sub
jmp
add
out
lock
or
inc
mov
sbb
mov
in
mov
arpl
jge
mov
jno
mov
fisubl
sub
xchg
or
je
jg
loope
scas
xchg
movsl
xchg
xor
aaa
or
addb
cltd
push
cli
fwait
mov
cltd
dec
popa
shrb
lds
int
icebp
fdiv
jo
lods
mov
push
lods
lcall
sub
jnp
fs
push
mov
and
push
imul
fwait
mov
and
lret
arpl
jno
test
movsl
mov
xor
lcall
jge
adc
jge
jo
aaa
outsl
mov
cwtl
xchg
push
gs
xor
sarl
cltd
fcoms
bound
imul
dec
adc
inc
fs
add
mov
int3
js
pop
mov
rclb
xchg
sbb
fcoml
loop
jo
cs
inc
aas
aas
add
icebp
jb
jle
and
pusha
mov
xchg
subl
pop
enter
mov
cmp
test
mov
mov
fistps
push
sub
cmpsl
add
es
pop
cmp
dec
mov
and
xchg
add
mov
shll
xlat
enter
adc
cmp
mov
pop
and
sub
inc
add
enter
pushf
test
daa
outsb
das
add
addr16
in
adc
ficomps
dec
pop
jp
ds
fnstenv
ret
movsl
in
mov
cli
pop
test
fdivr
add
nop
gs
test
xchg
jo
dec
icebp
pushf
adc
pushf
cwtl
enter
dec
outsb
test
or
das
push
shr
mov
sbb
or
jmp
add
out
adc
inc
jecxz
test
dec
mov
jmp
push
sbbb
sbb
addr16
mov
cli
dec
jg
mov
fdivl
insl
lret
pop
inc
mov
mov
push
add
xchg
mov
cmp
xchg
mov
inc
adc
ret
inc
in
fstpt
mov
shr
dec
push
xor
call
dec
divl
in
cmpsb
adc
and
sub
xor
push
cmc
mov
push
aaa
nop
jns
push
scas
sub
movl
mov
stos
xchg
rcll
mov
fadd
lret
outsb
test
push
push
sub
cwtl
fisubl
xchg
adc
adc
dec
jg
addr16
sub
mov
and
xor
mov
out
and
js
pop
pop
xor
jge
push
jge
mov
imul
ds
adc
out
aam
add
aas
pop
std
or
in
push
push
add
pop
pop
out
jne
out
jno
pop
sar
outsl
pop
int
mov
cwtl
cli
sub
imul
dec
pushf
jg
test
jp
adc
jg
subb
rorl
shlb
cmpsl
jg
mov
fisubl
cltd
xchg
mov
mov
xchg
icebp
in
dec
pop
sbb
mov
xchg
adc
jmp
gs
into
mov
sbb
push
xor
mov
push
jle
stc
mov
pop
andl
xor
dec
test
shll
or
out
and
imul
cmp
aas
xchg
push
ret
cltd
repnz
jbe
int
leave
repz
add
insl
adc
mov
jne
addl
mov
int3
pop
popf
test
lods
cmc
shll
int
shr
imul
sbb
test
data16
movlps
dec
je
jns
in
int
stc
sahf
xchg
ret
cmp
sub
ret
inc
std
xchg
xchg
outsb
mov
lcall
add
inc
flds
fdiv
xor
xor
jo
sti
popf
js
push
loop
icebp
arpl
sub
add
push
mov
mov
add
push
adc
stc
scas
add
shr
add
xchg
cltd
imull
dec
data16
dec
fdivl
enter
mov
out
sti
cld
add
test
lcall
inc
push
dec
mov
int
sbb
fmull
xor
and
aaa
popa
push
aaa
sbb
add
testb
lods
dec
cmpsl
scas
mov
add
inc
inc
push
pusha
aaa
adcl
push
imul
or
xor
mov
jns
pop
dec
sbb
adc
xchg
mov
cmpsb
repz
fsub
movsl
icebp
mov
xchg
push
mov
or
xchg
mov
xchg
lret
test
test
mov
fimuls
xlat
adc
cmpsl
js
repz
scas
mov
rcll
sub
xlat
cmp
or
stos
movsb
or
jmp
ss
sbb
jg
mov
out
add
jl
xchg
call
add
shll
xlat
testl
push
pop
rcrl
adc
inc
int3
adc
jo
pushf
sub
pusha
ljmp
test
cld
loopne
in
cmpsb
or
sahf
sbb
lea
and
push
into
mov
xor
xchg
pop
xchg
repz
js
cmp
lret
out
fwait
inc
cmc
hlt
or
pop
cltd
pop
shr
cmpl
lret
xchg
pop
dec
sub
dec
jge
mov
xor
lods
and
push
js
sub
sbb
xor
xchg
cmp
jecxz
aad
jp
movsl
sbb
fs
cmp
enter
gs
in
scas
scas
push
dec
mov
xchg
pop
cltd
mov
test
cmpsl
jle
les
in
leave
inc
fistl
cwtl
sub
pop
leave
cmpsl
out
sub
sub
cmpsb
add
rclb
sbb
or
cmp
lods
idivb
xchg
lcall
and
ret
pop
outsl
jo
jne
pop
jecxz
jno
outsb
mov
push
and
ljmp
adcb
lock
test
int
insl
mov
mov
dec
lods
cmp
cmpl
aas
ficomps
push
sti
pop
cmp
repz
jecxz
movsb
popl
lcall
adc
fwait
insl
pop
pop
mov
es
fisubrl
mov
std
ret
mov
or
cmp
out
xchg
dec
add
inc
inc
loopne
adc
in
les
jne
mov
mov
xorb
mov
mov
and
pop
rcrl
mov
mov
xor
mov
or
jp
mov
iret
test
and
fwait
pop
inc
or
jno
daa
andb
sub
movsb
fwait
push
loopne
cmp
xor
es
sub
xchg
out
inc
adc
ret
nop
imul
roll
adc
cmp
cmp
and
test
sahf
adc
lock
cli
mov
cltd
mov
xchg
nop
adc
je
dec
outsl
stos
pop
mov
dec
mov
sbb
xchg
xchg
lcall
or
dec
inc
js
popf
insl
mov
cli
and
iret
sbb
popf
imull
push
inc
popa
aam
sahf
xchg
mov
int3
jecxz
and
adc
jg
imul
or
and
mov
aas
or
mov
push
es
sbb
jbe
dec
lret
imul
add
sti
fsts
add
gs
popf
xchg
adc
mov
xchg
mov
in
fisubl
push
je
aaa
cmp
fs
jp
or
lods
aad
or
loope
in
sbb
or
sub
cmp
lret
mov
xchg
iret
dec
addr16
jl
sahf
int
xchg
mov
daa
xchg
sub
bound
and
rcl
xchg
repz
ja
cmp
push
aad
xorb
ja
addr16
test
dec
insl
mov
cmp
mov
push
cmp
cld
mov
and
sbb
in
cwtl
mov
pop
fistps
std
mov
popf
test
push
loop
adc
repz
in
mov
test
cld
dec
aaa
mov
push
sbb
mov
dec
popf
jle
fiadds
popa
negl
mov
mov
popa
pop
mov
and
inc
mov
sub
ja
push
push
int3
cmp
ret
adc
pop
xchg
push
fidivrl
mov
jns
negb
cmp
outsl
call
loop
fisttpll
mov
ds
adc
ja
aad
shr
pop
fsubrp
xchg
insb
adc
addr16
decb
test
inc
add
nop
inc
call
mov
inc
mov
add
add
in
xor
cmp
dec
jns
repnz
push
popl
mov
fsubrs
jmp
pop
dec
pop
fst
sti
aaa
jne
rep
push
call
gs
addr16
jb
inc
inc
adc
and
ret
push
or
subl
xchg
mov
fs
inc
mov
sbb
jae
xchg
add
mov
dec
jae
add
pushf
or
repz
mov
or
test
cs
mov
jecxz
cmpxchg
mov
jmp
pop
push
testl
cltd
xor
pop
and
lds
test
pop
lcall
lods
dec
fdivl
mov
or
nop
xchg
das
in
icebp
inc
jp
push
inc
int
cmpsl
negl
test
pop
mov
dec
mov
adc
or
popa
stos
xor
jns
pop
insb
mov
mov
or
shrb
insl
pop
dec
push
orl
aam
loopne
mov
lret
push
repz
out
jg
rolb
jb
adc
test
jg
mov
pop
popa
mov
jnp
loope
cmp
pusha
daa
adc
xchg
inc
fimull
jno
idiv
xchg
das
xchg
add
in
imul
push
cmpsl
sub
jnp
jmp
insl
test
and
hlt
xchg
sub
cmp
mov
ss
push
data16
inc
xor
sar
sarl
jo
ret
cld
jle
sbb
mov
adc
sub
xchg
inc
and
sbb
divb
into
and
es
dec
js
and
iret
dec
mov
pop
mov
fistpl
cmp
leave
push
cmp
roll
idivb
mov
addr16
xor
mov
pop
sahf
lret
sahf
or
and
inc
jnp
pop
lret
orb
sbb
int
or
xor
and
aas
ret
and
inc
add
push
and
in
jp
pop
sub
ds
push
jmp
jg
out
jp
in
imulb
jl
xchg
pop
cmpsb
and
jecxz
jecxz
mov
add
jno
pop
or
aad
push
cmp
xor
adc
test
fldln2
jns
adc
test
mov
push
leave
mov
aaa
pop
mov
add
sbb
mov
ljmp
subl
movsl
xorl
xor
jmp
cmp
cmpl
or
fistpll
leave
test
sti
repz
mov
push
cmp
insl
xchg
adc
jns
jae
push
std
aad
xor
or
add
jbe
push
iret
and
cmc
loope
dec
fsubrs
pop
mov
mov
cmp
movsl
test
addr16
ss
int3
cmp
shrb
icebp
addl
push
flds
aaa
or
mov
sbb
insl
icebp
mov
xchg
es
adc
sub
cld
mov
gs
cmp
and
andl
jo
mov
aam
sub
or
cmpsb
loope
cmp
out
fs
fidivl
inc
jp
movsl
outsb
inc
mov
repnz
and
pop
cmp
or
mov
mov
filds
fcoms
cmpsb
dec
sub
jo
ja
jne
dec
mov
adc
pop
add
dec
std
rcrl
cwtl
sbb
cli
xchg
xchg
jae
sub
pop
cmp
test
jo
ja
dec
jne
add
push
dec
les
or
or
jg
loopne
pushf
xor
add
popf
divb
nop
mov
xchg
negb
loope
sub
repz
add
add
test
adc
adc
dec
cmc
push
inc
les
xchg
and
clc
mov
lret
adc
gs
fdivrl
lcall
insb
xchg
mov
or
or
ljmp
mov
jne
mov
dec
sub
inc
push
mov
enter
pusha
xor
roll
dec
ds
orl
sbb
or
fdiv
jmp
jle
pop
aam
push
loop
ja
js
mov
push
rcll
mov
mov
imul
xor
mov
inc
jno
adc
imul
and
adc
mov
lcall
outsl
movsl
xchg
xor
cmp
pop
xchg
into
pop
add
ret
popf
inc
sub
ja
lock
cmpsl
rorb
xchg
jns
leave
push
pop
mov
pushl
aaa
pusha
and
pop
adc
cmp
fwait
test
mov
pusha
fldl
adc
mov
adc
shl
int
cli
mov
dec
pop
sbb
adc
mov
cwtl
nop
aas
dec
sub
popl
mov
movsl
repz
ret
imulb
cmc
movsb
adc
mov
les
nop
js
test
push
nop
pop
mov
jecxz
dec
push
xchg
or
sar
into
pop
pushw
lahf
jne
int3
shll
push
mov
jno
movsl
dec
je
in
dec
fldt
and
jmp
jge
dec
add
or
push
adc
notb
dec
cs
lock
lcall
test
or
mov
cmc
xor
or
int3
jno
mov
andb
out
jb
pop
adc
jnp
js
mov
repnz
inc
filds
fs
aas
dec
xchg
gs
int3
dec
jmp
xchg
and
xchg
add
jmp
rcrb
push
imul
mov
jno
es
repz
insb
mov
push
jp
or
jb
xchg
add
xor
mov
movsb
jecxz
shll
adc
push
mov
jl
int3
jae
movsb
cld
enter
paddq
scas
mov
sbb
fimull
negl
je
xor
stos
sub
rclb
or
mov
imull
jnp
push
sub
push
call
adc
testb
jne
mov
jno
ds
mov
aas
out
out
sub
inc
sarb
arpl
mov
push
push
fildl
or
push
push
decb
jo
into
lahf
outsl
xchg
add
call
mov
add
push
lret
jge
daa
inc
in
xchg
push
push
xchg
sbb
lea
or
mov
xor
insl
dec
mov
gs
pop
popa
test
aad
mov
jp
push
mov
fsubrp
cmp
stos
js
mov
dec
add
imul
shll
push
mov
or
ljmp
repnz
or
rcrl
jl
mov
push
ss
add
addl
xchg
inc
pop
mov
mov
inc
stc
xor
in
leave
and
xor
xor
inc
lds
lret
rol
push
or
aaa
and
cwtl
sahf
dec
std
mov
or
stos
int3
aas
aas
jecxz
mov
sub
cmp
jecxz
cmp
aas
pusha
jae
mov
fdivrp
push
pop
dec
push
dec
jae
enter
sub
inc
les
xchg
pop
lret
test
divb
stos
movsb
jno
loopne
arpl
xchg
aad
push
ror
jnp
xor
into
addr16
cmc
xchg
clc
mov
adc
push
mulb
mov
mov
imul
mov
jg,pn
add
notb
dec
mov
mov
mov
cltd
movsl
fstp
adc
mov
mov
add
ss
xorb
popw
dec
fmuls
daa
sbb
sbb
insb
rorl
sbb
arpl
sub
jg
dec
cli
xchg
or
aaa
loope
mov
mov
test
xchg
aad
outsb
push
sub
mov
inc
cli
jae
ret
or
bound
je
cli
lret
xor
outsl
xor
mov
sbb
aas
or
sti
test
stos
mov
pop
push
insl
loopne
out
lcall
mov
pop
fldl
aam
mov
pop
aam
and
aad
lds
add
mov
dec
fcomp
sbb
push
cmpsb
or
mov
popa
dec
js
adc
sub
test
xchg
fmuls
push
pop
mov
xchg
das
nop
sar
sbb
cmpsb
pop
rorl
std
mov
push
leave
jae
lret
mov
cltd
rorl
jge
mov
cwtl
repnz
fidivl
or
addr16
fisubrl
inc
adc
insl
sub
lea
push
repz
add
rcll
inc
jne
rcl
xchg
jle
xchg
into
or
dec
scas
and
ds
fwait
sbb
or
inc
icebp
xchg
adc
xor
push
mov
dec
fsubr
mov
addb
testb
je
mov
call
jno
jp
or
xor
movsl
rclb
sub
lods
loopne
adc
adcb
testb
ljmp
cli
out
cltd
mov
sub
and
mov
ds
xor
add
outsl
dec
adcl
aas
add
movsl
or
jnp
scas
std
fst
or
cltd
dec
idiv
mov
enter
push
jnp
test
dec
test
or
jo
and
cs
xchg
and
out
mov
outsb
lock
add
aas
xor
daa
fs
insl
cmp
js
mov
inc
mov
or
push
shll
insb
dec
pushf
ficomps
xchg
mulb
sbb
mov
sub
add
sub
adc
outsl
fwait
push
fisttpl
jns
test
stos
and
insl
xor
in
les
cmpsb
mov
pshufw
leave
sbb
mov
jge
and
sbb
ja
mov
jecxz
inc
pop
aad
or
icebp
or
ffree
out
push
test
push
out
je
fldenv
popa
mov
push
adc
cld
dec
cli
pop
adc
in
stos
into
nop
andl
lods
cli
mov
rorb
sub
jmp
inc
inc
hlt
mov
inc
gs
lods
imul
jns
je
mov
lds
jge
sub
sti
rcrl
push
xchg
test
push
roll
in
xor
pusha
mov
pop
cmp
cmp
inc
pop
in
in
pop
dec
out
sub
rcr
push
mov
repz
ss
cli
in
sub
sub
imul
test
in
and
hlt
xor
sahf
sbb
stc
ljmp
xor
loopne
dec
aaa
push
add
ja
popf
fstpt
aaa
and
and
mov
sbb
js
fistpll
rcrl
clc
fwait
jl
pop
lret
stos
js
rcrb
in
or
dec
jle
jge
push
inc
or
push
test
mov
mov
xor
sysexit
sti
int3
ja
aaa
pop
mov
ljmp
in
push
mov
xchg
push
or
mov
mov
xor
cli
xor
movsl
jne
mov
call
inc
out
mov
cmp
ret
sbb
and
and
jecxz
rorb
test
mov
inc
shll
push
ret
inc
imul
scas
ljmp
aad
adc
xor
sbb
leave
loopne
ja
popa
mov
jecxz
cmp
fdivrs
fstps
jb
cmpsb
bt
xchg
addr16
bound
inc
xor
sti
mov
int3
int
fs
adc
jl
pop
mov
enter
mov
sbb
push
xor
cmp
mov
mov
cmp
sub
inc
push
icebp
lock
in
dec
popf
daa
rcrb
lret
or
mov
xlat
addr16
es
push
xchg
popa
pusha
in
or
inc
jle
cwtl
pop
mov
sbb
pop
mov
icebp
fidivs
inc
insb
cmp
sbb
rcll
mov
lret
fwait
dec
xor
add
call
rcrl
sbb
mov
dec
mov
fisubrl
cwtl
out
push
bound
or
and
int3
dec
lea
in
mov
hlt
int
test
cmpsl
or
xor
mov
rcrb
add
cmp
push
dec
sahf
cltd
and
push
push
add
inc
popf
push
sub
xchg
insb
cmp
sub
pop
adc
inc
xor
sbbl
jmp
inc
call
mov
imul
xchg
ss
mov
mov
mov
cmp
mov
xchg
xor
mov
loope
jecxz
imul
data16
adc
push
imul
pop
mov
sbb
out
repz
popw
shr
cmp
test
cmp
scas
rcll
test
das
mov
cmpsb
mov
addb
pop
mov
sub
je
aas
jecxz
sub
pusha
out
test
mov
xlat
clc
sbb
push
test
fcoms
dec
mov
sub
jnp
pop
pop
insb
mov
daa
inc
push
shlb
dec
sti
push
dec
in
push
mov
inc
insl
sbb
or
xchg
shl
cld
fwait
dec
inc
mov
repnz
movsbl
out
sbb
cmc
mov
push
aas
ret
imul
das
jmp
test
dec
xor
je
cmpsb
rcrl
push
push
sub
daa
bound
sbb
sbb
xchg
mov
xlat
xchg
lahf
push
sbb
sub
xor
dec
mov
test
test
mov
and
nopl
cld
or
push
stos
push
mov
dec
mov
pop
or
cmp
rcll
mov
shl
aaa
test
dec
dec
clc
scas
dec
add
mov
test
mov
sahf
hlt
les
or
imul
dec
aad
inc
subl
cwtl
pop
cltd
add
icebp
andl
div
push
popl
dec
mov
pop
iret
inc
mov
mov
inc
inc
notl
push
stos
sahf
inc
ret
int3
inc
xlat
aad
push
push
shl
fmull
ret
int
sub
fwait
sub
jnp
pop
sbb
mov
pop
adc
and
jecxz
xchg
leave
cmp
adc
add
mov
pop
setne
inc
mov
rcrb
insb
pop
pop
sub
add
repz
cmp
mov
dec
mov
insb
aad
pop
aaa
arpl
dec
enter
fadds
jecxz
xchg
inc
dec
sahf
mov
sahf
icebp
push
ds
dec
or
sbb
imul
xor
add
mov
push
rorb
and
sub
aad
sub
mov
pop
test
sub
sbb
pop
xor
cmc
xchg
xor
inc
les
sti
inc
mov
stc
xor
xchg
sbb
es
lods
lods
sarb
or
cmp
mov
sub
pop
push
jne
sti
out
es
and
insb
jo
loop
and
push
and
int3
insl
sbb
decl
pop
sub
daa
das
jmp
mov
add
push
inc
jne
sahf
adc
std
fs
jmp
cwtl
push
arpl
loopne
xchg
pop
imulb
lds
nop
lahf
xor
mov
imul
and
test
aam
loop
je
pop
adc
orb
jecxz
daa
fmuls
cmp
fstpl
imul
sbb
pop
ds
push
jo
dec
in
sahf
cmpsl
jb
mov
jmp
cltd
push
das
and
les
adc
out
sub
call
sbb
mov
popf
add
and
arpl
add
or
xor
pop
and
pop
pop
mov
lret
cli
stos
repnz
call
pop
mov
sub
sub
repnz
add
lds
xlat
and
lcall
pop
xchg
jnp
movsb
cmp
dec
shrl
push
sbb
mov
lea
mov
lret
or
cmc
jae
or
adc
mov
lods
mov
xchg
xorb
popf
add
adc
rol
mov
lods
fdiv
pop
sahf
cmp
mov
xchg
dec
or
cmovno
addl
stc
xor
iret
js
das
push
outsb
pop
mov
andb
dec
movsl
dec
pop
xor
roll
mov
fldenv
andl
sub
mov
dec
inc
sub
add
mov
pusha
in
lock
cltd
xor
jnp
fucom
pushf
push
int
lock
scas
and
jp
insb
push
sub
repz
push
and
inc
cmp
test
jns
pop
mov
lret
into
cmp
mov
mov
adc
cmp
mov
mov
test
jecxz
mov
ret
imul
push
dec
jns
push
movsb
add
imul
mov
pop
cs
clc
sub
dec
gs
cmc
imul
adc
scas
push
nop
bound
cld
push
pop
inc
cld
mov
out
and
push
imul
les
scas
repnz
clc
add
xor
mov
pop
xchg
rcl
xchg
inc
or
add
adc
sub
test
aam
mov
scas
jmp
jg
cmp
or
mov
inc
adc
mov
mov
mov
lcall
scas
push
mov
adc
mov
jae
test
sbb
jne
test
pop
lret
pop
pop
adc
xor
mov
ljmp
mov
int3
adc
mov
cmp
rol
imul
sbb
movsl
pushf
or
inc
sub
pop
lods
adc
negb
jae
adc
push
inc
std
push
push
cmp
enter
scas
sub
ja
xchg
lds
mov
lock
sub
jmp
pop
lods
push
mov
je
adc
leave
mov
imul
add
pop
or
xchg
adc
and
idiv
repz
out
and
negl
outsb
int3
outsb
in
mov
faddl
enter
adc
repz
mov
push
xchg
movsb
and
in
add
mov
je
cs
and
jb
roll
jns
insb
popf
es
add
inc
rorb
jmp
add
pop
xchg
fistpll
aad
add
insb
dec
sahf
xchg
sub
cmp
lret
popa
imul
push
mov
jnp
dec
addr16
xchg
popf
aas
mov
cmp
add
loopne
in
dec
mov
mov
shrb
push
inc
andl
cwtl
xor
jecxz
mov
add
mov
push
popa
aam
inc
sbb
dec
cwtl
sub
fidivrs
xchg
fs
jbe
dec
mov
aad
aaa
out
inc
rolb
jbe
push
cwtl
dec
inc
faddp
add
xchg
pop
js
aaa
inc
lret
test
fists
jbe
jo
sub
lret
push
not
push
negl
mov
sub
xchg
adc
insb
aad
loope
sbb
lret
ret
lods
push
mov
mov
scas
jnp
ja
stos
mov
inc
xlat
mov
cli
push
mov
xchg
popf
push
sbb
daa
stos
out
push
add
mov
xor
cmp
cmpsl
js
cmc
sub
ja
sub
cmp
repz
outsl
std
add
hlt
add
xlat
sbb
adcb
fisubrl
daa
and
mov
mov
adc
orl
sub
mov
sbb
scas
loopne
fsts
repnz
xor
push
leave
mov
aad
xchg
out
and
adc
mov
mov
cs
xchg
push
clc
sbb
jl
enter
sti
cmp
lret
cmp
sub
js
and
testb
aad
loopne
cmp
dec
mov
je
adc
dec
xchg
test
add
inc
or
push
and
cwtl
fidivl
dec
scas
loop
scas
es
rolb
jne
cld
push
mov
out
jbe
add
je
rol
cmp
std
push
xchg
xor
dec
inc
xchg
mov
fs
iret
rol
dec
push
and
and
pop
xor
scas
out
cmpsb
pop
lea
in
arpl
jmp
sbb
lret
daa
cmp
mov
push
daa
aam
mov
jecxz
add
outsb
mov
adc
imul
xchg
lret
or
adc
and
insl
push
push
inc
jmp
pop
repz
add
ss
mov
xchg
jnp
cmp
fmull
sbb
dec
xchg
sbb
add
loop
dec
lds
in
adc
mov
push
mov
adc
rorb
mov
out
mov
pop
mov
mov
clc
push
daa
mov
fnclex
dec
in
adc
dec
mov
dec
leave
mov
dec
xorl
test
sbb
cld
mov
addb
mov
xor
dec
sub
xchg
mov
mov
aam
int
int3
pusha
popa
lock
mov
jnp
mov
add
inc
imul
flds
popf
cmpsb
pop
add
xchg
cmp
dec
jns
fistpll
dec
xchg
stos
push
imul
je
pop
mov
mov
test
scas
cmp
cli
xchg
ljmp
loopne
sub
lahf
adc
stos
out
in
dec
cwtl
mov
ror
sub
subl
push
ror
sub
sbb
xor
ss
jns
addr16
in
sbb
xor
mov
mov
popf
test
dec
dec
in
push
sbb
push
in
ss
dec
pop
and
add
xor
push
out
mov
mov
std
mov
push
push
sti
xchg
cmp
repnz
xchg
mov
loop
inc
push
mov
imul
fldcw
fcmovb
test
adc
cmc
movsb
testl
cmp
xor
notl
loope
xchg
pushf
cld
inc
pushl
add
lods
cltd
std
enter
or
pop
es
xor
jae
std
xchg
nop
outsl
int3
aad
sub
pushf
push
cmp
fidivrl
aam
dec
xchg
add
idivb
mov
fwait
push
sbbl
or
inc
testb
daa
loopne
lahf
dec
adc
add
sbb
mov
test
cmc
jns
clc
inc
dec
mov
test
inc
inc
cmp
test
icebp
fs
xchg
cltd
mov
xorl
leave
cmpsl
test
faddl
or
loopne
fiadds
pop
mov
iret
lds
loopne
push
adc
pop
adc
cmpsb
cmp
mov
ja
mov
inc
imul
pop
and
test
jbe
mov
jecxz
and
pop
shl
icebp
push
lods
push
mov
jge
inc
lcall
clc
mov
push
test
push
rorl
mov
mov
leave
shll
cmpl
jnp
pop
scas
xor
ror
flds
cli
loope
inc
fidivrs
inc
fnstcw
sbb
fs
cmp
add
lods
cmpsb
call
rcr
jae
int
mov
sub
lret
out
jnp
mulps
cli
inc
punpckldq
pushf
test
fstpt
cmp
mov
push
leave
ret
clc
int3
push
outsb
loopne
aas
sub
aad
mov
and
xchg
xor
cmp
into
mov
adc
and
aas
xchg
dec
push
jle
xchg
pop
xor
sti
arpl
inc
cwtl
out
in
loop
jmp
or
in
inc
xchg
xchg
int3
icebp
dec
bound
xor
enter
jbe
daa
inc
sbb
pop
inc
and
cmpsb
insl
in
mov
push
pop
cltd
mov
addl
sbb
repz
add
cmpsb
and
mov
or
mov
out
fisubrl
pop
test
loop
lret
imul
cmp
cmp
pop
and
pop
mov
mov
lcall
insb
cmc
lods
mov
cmpsb
pop
sub
adc
inc
es
les
mov
ljmp
add
push
mov
dec
orl
sub
xor
cmp
inc
fidivrs
mov
cmp
mov
mov
data16
fnstenv
ror
jg
out
sbb
add
xchg
mov
loop
std
adc
or
pushf
jo
daa
insb
mov
push
repz
mov
inc
mov
pop
inc
popf
rorb
cmc
and
lods
faddl
sub
mov
sahf
and
or
sbb
pop
vpaddusw
andb
mov
jle
js
arpl
and
ss
pop
cmp
and
ret
and
jle
and
pop
andb
dec
xor
xor
cld
inc
xchg
std
inc
sbb
sub
dec
pushf
pxor
adc
lahf
in
orl
sti
ljmp
xchg
jno
xor
pop
pop
add
mov
sbb
enter
mov
sbb
addr16
pop
js
pushf
push
cs
adc
enter
outsb
stos
xchg
cld
xor
outsb
cmp
pop
aas
dec
inc
xchg
bnd
mov
mov
jne
push
xchg
xchg
pop
jne
mov
push
imul
pop
mov
inc
push
mov
ret
mov
cwtl
call
or
or
icebp
dec
shlb
push
lahf
adc
sarb
xor
and
push
inc
loop
daa
push
sarl
in
xchg
dec
daa
and
dec
mull
mov
jle
mov
sti
mov
and
adc
sub
stc
inc
add
push
and
aam
and
push
imul
inc
mov
jmp
xchg
inc
lods
cs
dec
xor
fs
mov
inc
je
test
push
and
xor
lods
xchg
mov
movsb
jge
mov
test
mov
aad
jg
mov
nop
push
push
pop
je
fstps
test
inc
leave
jmp
xchg
test
pop
mov
push
xor
push
pop
out
jmp
push
fs
or
push
cld
loope
mov
in
pop
cmp
or
mov
inc
add
jge
jo
jno
fidivl
ja
jle
shlb
pop
inc
or
std
fwait
xor
pop
mov
pop
clc
pop
xor
std
xchg
xchg
outsl
iret
xor
sbb
pop
sbb
jecxz
addr16
jl
pusha
pop
mov
in
std
stos
scas
enter
clc
mov
xchg
insl
shl
inc
jle
arpl
shrl
ja
xchg
add
push
mov
xlat
jns
and
aad
mov
push
ret
testb
mov
cmp
orb
filds
dec
aaa
xlat
dec
lods
sub
cmp
addr16
fsub
orb
mov
bound
out
bound
and
enter
push
cld
or
in
sbb
and
xlat
xchg
jbe
push
dec
scas
cli
loope
test
cmp
test
mov
inc
lahf
loope
leave
loopne
push
jg
idivb
inc
fucompp
xlat
dec
movl
cmp
sbb
dec
inc
inc
jo
jb
das
mov
les
cmc
aam
shl
xlat
push
sar
loop
mov
je
add
sahf
inc
add
jmp
push
push
pop
cmp
enter
or
fistl
stos
jl
xchg
daa
enter
jmp
pushf
and
aam
clc
xchg
jl
dec
xor
insl
maskmovq
notl
stos
das
sub
fists
sbb
mov
insl
loopne
ret
mov
and
sbb
cmp
cli
data16
repz
xlat
push
mov
repz
mov
adc
and
push
fidivrl
mov
cmp
nop
mov
jne
int3
mov
sbb
cmpsb
out
lahf
cld
loopne
xchg
shrb
icebp
xor
aaa
push
rorl
sub
in
clc
ret
mov
out
test
add
sahf
or
das
pop
sub
sahf
arpl
les
mov
in
adc
call
or
je
loopne
sbb
mov
lds
sbb
adc
shlb
cmp
and
dec
mov
pop
aaa
cs
cs
pushf
sahf
testl
cmpsb
push
hlt
mov
mov
jge
mov
add
and
icebp
mov
arpl
xor
scas
popa
sahf
cltd
std
shll
in
repnz
test
sbb
insl
cli
clc
and
outsb
jg
mov
cmpsl
jl
inc
xchg
cmp
test
addr16
mov
xchg
sbb
clc
dec
test
call
xor
insb
rcrb
sahf
dec
push
data16
popf
jns
push
cltd
out
add
push
shl
push
pop
lods
pushf
add
jbe
or
aad
xchg
mov
fdivrp
outsb
mov
xor
shll
and
int
loop
cmc
inc
mov
into
lcall
cld
dec
mov
lcall
xor
mov
mov
mov
mov
mov
rclb
pop
jg
call
mov
xchg
sbb
imulb
shr
daa
xchg
les
xor
jl
aad
sarb
ja
lcall
dec
mov
loop
mov
sti
loopne
std
mov
test
adc
sub
pop
cmp
xor
sbb
adc
outsb
outsl
lods
mull
mov
mov
in
ds
sub
mov
or
pop
in
inc
fs
ret
jge
cmp
fwait
inc
fistps
sub
xchg
or
iret
loope
jmp
push
xor
cli
cmpsb
and
jge
popf
insl
xchg
cmpsl
jne
cwtl
sbb
repz
sbbl
xor
orl
push
loopne
mov
clc
inc
sbb
pushf
or
dec
js
adc
jbe
out
enter
fcomps
enter
push
test
push
jecxz
andb
pop
dec
mov
je
imul
test
inc
fdiv
sahf
sbb
shll
cmp
xchg
dec
imul
subl
xchg
mov
and
out
in
icebp
sub
fisttpll
daa
pop
jns
scas
test
and
xor
push
or
cld
shll
inc
jge
enter
outsb
jle
call
sbb
xchg
insb
sub
mov
icebp
stos
push
mov
sub
pop
in
cld
xor
mov
and
ss
or
loopne,pt
repnz
nop
mov
lea
pop
scas
jmp
sub
mov
jno
or
pushf
add
cmpsb
inc
iret
cmpsl
lods
mov
inc
jl
dec
loop
xor
or
loopne
or
sub
in
gs
ja
std
ret
and
das
call
or
mov
xchg
xchg
jae
ss
adc
mov
add
aam
xchg
xor
fsubr
jl
xchg
pop
or
or
imul
icebp
outsb
pushf
mov
enter
and
test
and
xor
xchg
fnstcw
xchg
dec
lret
mov
negb
stc
in
mov
lcall
pop
add
jne
shl
nop
xor
push
cmpb
cld
jb
outsb
jne
sbb
test
imul
inc
lret
lea
daa
int3
roll
mov
dec
icebp
dec
inc
mov
rol
out
fwait
jo
mov
inc
and
and
inc
jno
out
cmp
inc
push
test
jne
movsb
sbb
repz
hlt
mov
and
dec
fwait
jg
stos
inc
add
cltd
jle
stos
jbe
lods
add
dec
sbb
int3
mov
ss
adc
cmpsl
icebp
xor
sub
loop
daa
sbb
aas
push
xchg
scas
fisubrl
pusha
push
pushf
xor
inc
add
push
push
mov
xchg
jp
stos
out
in
int
push
push
subb
mov
inc
popa
jbe
jnp
adcl
cmp
jmp
arpl
or
mov
and
test
xchg
insl
xor
mov
subl
lahf
data16
ficoml
ficomps
add
sbb
push
nopl
mov
pop
xor
mov
jge
rcrb
int3
std
sbb
pop
test
cmp
inc
xchg
ss
xchg
jg
bnd
xacquire
pop
iret
push
inc
repz
or
test
cltd
test
xor
sub
mov
sbb
sbb
mov
add
idivl
imul
daa
mov
fnstenv
adc
inc
sbb
and
xchg
leave
in
insl
mov
pop
rorl
add
cwtl
jne
daa
or
xlat
sarb
mov
enter
lds
mov
daa
loopne
leave
or
sbb
jns
pop
and
jae
stc
loope
cltd
pop
xchg
xchg
idivl
mov
pusha
and
outsb
iret
test
lahf
lcall
jp
shrb
stc
cmp
mov
scas
stos
cwtl
xor
and
sbb
or
popf
mov
xchg
mov
and
sbb
pop
mov
pop
push
rclb
jo
pop
test
addl
sub
dec
repnz
fcomps
pusha
ret
or
pop
adc
iret
dec
mov
test
mov
loop
mov
pushf
movsl
pop
or
andl
dec
add
push
and
loop
outsb
insl
movsb
mov
mov
or
sbb
adc
push
push
sub
xorl
daa
mov
cmp
aaa
enter
mov
jns
enter
aam
lret
mov
cmp
test
push
fistps
jne
in
gs
gs
push
inc
into
inc
push
push
inc
push
stos
int
loopne
loope
lret
mov
sbb
sbb
sbb
pop
jmp
mov
inc
add
adcb
nop
mov
call
mov
pop
xchg
dec
mov
sbb
dec
lods
in
and
movsb
sub
pop
data16
xorl
push
test
js
pushf
and
mov
push
xor
aas
xchg
mov
and
pop
mov
lret
push
jbe
xchg
je
stc
inc
daa
jne
iret
and
dec
inc
and
dec
xor
cmp
jmp
dec
movsl
jb,pn
mov
enter
xor
loope
pushf
fisubl
xor
cmpsb
adc
shrl
in
mov
sar
mov
ret
or
and
pusha
xchg
out
push
int3
repnz
xchg
xchg
nop
rcll
dec
and
pop
pop
pop
inc
add
push
dec
fisubs
or
add
or
cmp
sub
fmull
bound
dec
mov
jle
jge
out
inc
ret
pop
hlt
mov
push
cld
hlt
loopne
enter
nop
pusha
sub
mov
fiaddl
mov
aas
add
test
mov
in
out
mov
inc
cmp
les
jle
xor
inc
and
xlat
shrb
icebp
aad
ljmp
pop
lahf
test
inc
int3
out
push
dec
push
pop
xchg
dec
pusha
xchg
stos
and
lock
xorb
cwtl
and
or
and
dec
sbb
sub
fsubp
mov
sub
xchg
add
pop
mov
and
add
adc
pop
adc
sbb
mov
adc
mov
xchg
push
loopne
daa
xchg
loope
hlt
sbb
dec
or
sbb
cltd
or
sub
ljmp
leave
jp
pop
cmp
icebp
inc
sti
cmp
adc
in
into
pop
insl
lock
ret
sub
mov
lea
popl
xor
add
xchg
jg
jae
shrb
fisttps
lcall
or
imul
jb
mov
lods
repnz
test
es
mov
clc
test
fwait
sbb
mov
and
ljmp
push
add
or
pop
mov
jne
mov
dec
pop
lock
mov
and
lea
into
out
mov
sahf
or
sarl
arpl
inc
iret
outsb
dec
mov
mov
shl
push
jae
in
frstor
div
fs
cmp
pop
inc
push
adc
xor
mov
sahf
jns
sbb
pushl
out
xorl
enter
mov
cs
mov
fidivrl
shlb
push
ss
and
loop
sar
push
jl
ss
mov
aad
insb
jg
jno
mov
jp
popa
dec
out
addr16
aad
fwait
cmp
xchg
fdivl
sbb
aam
inc
and
fisttpll
dec
adc
outsl
inc
jle
je
xor
stos
xor
es
push
adc
hlt
in
stos
aam
push
jmp
mov
mov
ret
lock
pop
sbb
or
je
dec
mov
push
push
js
out
stos
mov
lea
mov
inc
push
push
pop
and
mov
out
pop
sbb
stos
mov
xor
xchg
lcall
jae
ljmp
cld
fcmovnb
stos
test
fcomp
dec
imul
add
in
std
aam
stc
pop
aam
dec
pop
push
sub
adc
repz
insl
in
xorb
push
arpl
pop
ljmp
outsb
test
dec
or
call
and
iret
jno,pt
aaa
call
mov
sbb
dec
and
jle
mov
les
xchg
cs
mov
mov
xor
mov
sub
cmp
and
jmp
jb
xchg
scas
fs
test
nop
cmp
cld
icebp
les
cmp
push
dec
jp
outsb
sbb
nop
sbb
in
cwtl
cmp
lret
pop
inc
and
xor
aam
xor
and
add
call
xor
dec
pop
movsl
pop
add
into
xor
pop
push
dec
loopne
lret
sub
jp
xchg
into
push
mov
pushf
dec
push
cmp
push
ret
ror
ret
pop
mov
pop
scas
repnz
push
sbb
pop
mov
inc
add
repz
mov
mov
insl
pusha
xor
je
mov
mov
imul
push
imul
pop
jecxz
sub
mov
xchg
xor
push
cwtl
cmpl
outsb
ficoms
jne
gs
mov
and
ror
out
jno
dec
jecxz
pushl
push
adc
sbb
cmpl
call
and
pop
jg
xchg
int
jge
mov
or
pushf
xchg
es
nop
pusha
pop
call
add
idivl
push
jno
ret
sbb
or
adc
outsb
aaa
mov
imul
sbb
push
sbbb
insl
imul
repz
mov
in
int
lcall
and
mov
cmp
jecxz
out
adcb
scas
inc
push
adc
pop
mov
xchg
add
movb
into
and
cmp
daa
xchg
cld
jmp
push
sti
leave
mov
test
cltd
mov
cmc
ret
jne
enter
test
or
setno
pushf
mov
jge
lock
mov
cmp
mov
cmpsb
dec
data16
loop
sub
lods
xor
add
les
pop
inc
popf
push
int3
rorl
dec
cltd
jmp
adc
lret
xchg
add
scas
jge
fldt
aaa
shl
enter
inc
push
jns
fdivrl
mov
daa
sahf
repz
stc
pop
xchg
mov
rorl
cmp
sbb
jbe
js
data16
dec
cltd
add
lds
inc
fdivr
addr16
mov
icebp
mov
mov
orl
addr16
pop
cltd
add
cmp
dec
and
dec
cs
xor
rcrl
sbb
mov
mov
xchg
imul
std
xchg
cmp
and
jbe
and
push
cmp
insb
into
out
fwait
push
iret
cmp
aad
mov
add
xchg
nop
mov
movsb
cld
adc
scas
sub
pusha
pop
arpl
mov
jns
jp
mov
das
repz
sub
or
gs
lock
xor
cmc
outsb
or
inc
fcmovb
jnp
fs
call
movsb
mov
xchg
dec
or
xor
jmp
ss
cmpsb
sub
jmp
rcl
daa
jno
add
push
jb
adc
cmp
sar
push
inc
fildl
mov
add
addb
cltd
imul
daa
adc
cld
loop
jecxz
popa
cmc
add
cmp
shrl
shll
xchg
or
test
sbb
pop
lret
dec
out
loopne
sbb
cmp
insb
mov
mov
xchg
in
in
outsl
test
adc
je
js
or
mov
rolb
cltd
push
xchg
pop
and
popa
imul
popa
xor
xchg
shrl
mov
arpl
xchg
rcl
dec
fiadds
and
cmp
cmp
into
mov
arpl
sar
das
add
jecxz
mov
mov
lods
icebp
mov
rcll
inc
mov
xor
adc
cmp
insb
mov
or
mov
fsubrs
fnstcw
sbb
pushf
cmp
insb
pop
jbe
push
lcall
daa
jo
out
mov
xchg
or
adc
test
push
lcall
or
lcall
sub
add
mov
fs
cmp
adc
xor
in
paddd
xchg
data16
sub
push
lcall
lds
repz
repnz
pop
push
ret
mov
mov
outsl
mov
fnsetpm(287
mov
clc
dec
xchg
mov
adc
cmpsl
push
xor
roll
xor
lods
shlb
cmp
mov
sbb
mov
mov
xor
pop
cltd
add
int
insb
stos
cmp
xchg
out
jns
bound
int
pop
push
les
push
shlb
pop
in
xchg
mov
push
push
push
and
or
mov
adc
sbb
dec
out
scas
mov
sbb
sub
pusha
or
loopne
adc
stos
inc
jle
push
mov
outsb
int3
inc
out
cmp
sahf
fbstp
jno
cmc
dec
fstpt
mov
dec
icebp
mov
ret
out
ret
sub
scas
push
pop
mov
movsl
ret
push
test
dec
mov
dec
inc
mov
mov
repz
or
out
adc
jns
and
cmpsl
in
sbb
inc
jge
out
cmpsl
in
out
js
nop
jg
add
lret
mov
gs
jno
inc
adc
popf
cmp
xor
sub
stc
xor
out
fstp
mull
xchg
daa
lock
push
fs
inc
cld
jge
fxch
imulb
sub
xchg
mov
mov
cltd
cmpsl
inc
lret
lods
push
mov
push
mov
xchg
adc
ret
push
push
in
gs
aam
shll
in
inc
rorl
sub
sti
xchg
jl
enter
or
cmp
sbb
fsubs
push
gs
mov
ret
mov
push
sbb
pushf
pop
call
mov
movsb
lea
adc
insb
or
sub
push
mov
mov
push
out
shr
xor
pop
lock
sbb
xor
imul
sbbl
push
push
jmp
dec
mov
pop
mov
movsb
or
or
push
mov
test
xorl
outsl
pop
cltd
imul
ja
aas
int3
xchg
mov
insb
jmp
add
inc
test
push
jo
out
dec
jae
ret
jle
add
add
stos
cld
xchg
andl
xor
mov
andb
push
imull
sbb
shl
cmpsl
mov
xor
leave
or
push
mov
pushf
cmc
xchg
jge
fsub
add
cs
mov
and
dec
loop
lret
push
out
aad
fimull
inc
in
test
lret
icebp
daa
push
push
jg
jne
lods
jne
out
cmp
cwtl
stos
subl
push
ss
insb
mov
mov
sbb
fidivrs
dec
and
cmp
cmp
jae
cmp
loope
repnz
xchg
shlb
call
scas
or
sub
mov
sarb
push
loop
cmp
popl
adc
orb
or
adc
addl
imul
leave
push
add
jge
popl
and
fnstsw
jbe
enter
cmpsl
daa
dec
pusha
lods
out
or
adc
aam
mov
jbe
cli
pop
gs
jne
mov
dec
into
fldt
xlat
mov
sbb
pop
cmp
mov
sahf
dec
mov
push
sbb
es
adc
sbb
sbb
in
outsl
fsub
cli
fwait
push
frstor
int
lcall
and
sub
loope
insl
mov
cmp
sub
lds
lret
daa
sbb
ret
lea
stos
and
dec
push
adc
add
cmp
push
enter
mov
dec
jmp
pop
mov
jge
sub
xchg
in
lods
mov
sub
in
dec
push
add
dec
hlt
add
iret
xor
ret
cmpb
xchg
sub
mov
inc
mov
sbb
dec
insl
movsl
or
xchg
cmc
sbb
push
ficoml
mov
in
decb
gs
ficoms
popf
in
jge
cmp
das
add
cli
xchg
push
mov
gs
out
mov
dec
jne
pop
sub
mov
rclb
lock
lret
lret
or
xchg
fildl
or
jnp
or
jecxz
mov
or
scas
sbb
lods
mov
sub
insb
jmp
jge
aad
cmp
repz
and
pop
lods
mov
pushf
xor
cmp
imul
jecxz
push
jne
jns
cmpsl
cltd
jne
imul
pop
add
test
add
lret
mov
cmp
icebp
add
sub
insb
out
mov
movsl
push
hlt
data16
js
push
shll
fld1
fidivs
jmp
xchg
and
sbb
movsl
or
lret
inc
jmp
push
out
out
sarl
cmp
jo
and
addr16
and
test
jmp
pusha
enter
cmp
cmc
cltd
fdivrp
xor
dec
push
imul
mov
lock
cmp
fidivrs
rorb
xor
or
lcall
lret
dec
lcall
inc
fsts
loopne
movsb
pop
pop
sti
jle
sarb
pop
push
push
xchg
fs
popf
repz
into
or
cld
or
pop
jbe
leave
pop
push
es
call
dec
rclb
mov
cli
out
sub
add
pop
cmp
lds
ljmp
mov
xchg
adc
jecxz
xor
sub
ljmp
in
xor
push
daa
mov
xchg
and
pop
pop
mov
or
loopne
jns
pop
adc
mov
loopne
pusha
lcall
pop
sbb
dec
js
cli
inc
sub
mov
nop
xchg
or
jb
in
int3
xchg
ss
xchg
xchg
or
dec
xor
mov
inc
neg
push
add
cmp
or
clc
inc
aas
daa
mov
pop
add
stos
mov
jmp
insb
jg
lds
jo
adc
hlt
std
cltd
dec
xor
cmp
jge
xchg
adc
clc
fbld
mov
cltd
jb
movsb
aaa
xchg
cmp
sub
mov
adc
xor
ret
jmp
xchg
stc
jne
mov
in
push
aas
insb
into
stc
dec
outsb
fwait
je
aam
adc
test
in
add
jle
ficoms
out
lcall
pop
faddp
int3
cltd
push
shlb
jb
scas
repnz
mov
sbb
pop
dec
movsb
loope
xchg
jl
shr
pop
in
mov
mov
jb
mov
aas
frstor
daa
test
xor
xchg
test
int
xor
mov
add
cmp
xlat
adc
in
lret
mov
in
ret
jb
ds
int
cmpsl
add
or
in
fidivs
push
test
lcall
aas
repz
nop
imul
inc
rcrb
std
and
test
sub
dec
rcrb
ljmp
lea
daa
lcall
fsts
filds
fcom
adc
loopne
inc
cmpl
shl
gs
popf
cwtl
popf
popa
daa
push
pop
mov
add
mov
cwtl
and
or
mov
pop
push
jae
dec
lods
repz
sub
sti
mov
sarl
xor
or
gs
nop
fucomi
in
mov
sarl
sbb
fs
pop
mov
push
adcl
popa
sbb
xor
push
pop
dec
stos
pop
push
stos
fildl
ss
icebp
flds
fbld
je
lret
and
pop
jo
push
rcl
mov
iret
jecxz
pop
push
mov
inc
push
sub
test
scas
and
rcll
mov
xchg
jbe
loopne
adc
out
movsl
ret
lea
bound
movl
add
jbe
add
inc
rcrl
dec
xlat
jbe
out
pop
ss
pop
movsl
inc
inc
pop
adc
fsubs
mov
out
iret
xchg
fsubrs
fsubl
out
cmp
sub
push
out
ljmp
cmp
xchg
xlat
sub
pop
cmpsl
or
add
mov
stos
cmc
leave
lahf
outsl
fcomip
daa
and
push
cld
shlb
nop
jge
insl
lea
enter
ss
inc
inc
addl
mov
jmp
repnz
xchg
or
daa
sub
jecxz
hlt
lcall
test
pop
or
ja
stos
sub
push
stos
dec
outsl
movsl
fnstcw
shlb
js
fadd
leave
test
cmpsb
dec
out
jp
mov
ljmp
pop
test
in
sbb
mov
in
enter
xchg
pusha
mov
daa
in
imul
push
mov
or
cmp
cmp
inc
push
std
outsb
cs
call
push
mov
xor
xor
daa
rolb
loope
sub
add
cwtl
sti
iret
mov
xchg
loop
mov
mov
pop
sub
test
and
cmp
rcl
xor
push
mov
pop
mov
dec
neg
dec
push
jno
jge
es
push
xchg
pop
and
ljmp
gs
test
jp
mov
inc
out
or
push
xchg
push
push
xchg
lahf
loopne
imul
fstl
out
loopne
and
xchg
and
pop
pop
ffreep
cli
sbb
lret
movsb
dec
mov
insb
imul
sub
in
or
pushf
fildl
imul
inc
lret
ffree
pushf
mov
in
test
sub
dec
lock
push
lahf
xchg
jecxz
push
pop
lcall
outsb
jg
or
cmp
dec
push
or
cmp
xor
mov
test
ret
push
cmp
pop
push
std
jp
sbb
add
pop
mov
inc
out
jle
xor
mov
fcomps
and
mov
das
adc
mov
call
push
xchg
fwait
pushf
add
cltd
xor
xchg
add
ret
aaa
insb
cli
insl
in
sahf
jp
jge
sbb
add
stc
push
pop
cli
call
and
out
rolb
dec
cltd
fistpl
andb
dec
ficomps
outsb
je
add
int
das
or
xor
out
mov
mov
sub
lret
jnp
sub
push
arpl
mov
sub
add
jbe
insb
push
mov
push
sub
pop
jnp
cmp
test
fbstp
je
lock
push
jmp
fs
inc
fildll
pusha
pop
jecxz
negb
dec
ja
xor
repz
lret
test
jne
out
jmp
lea
pusha
repnz
test
xchg
or
repnz
pop
orl
ret
ss
jl
leave
xchg
add
and
xor
dec
out
mov
rorl
lock
clc
xor
push
dec
sbb
dec
xor
shl
ss
jp
xor
cs
test
pop
sub
xor
pop
mov
add
pop
lret
insb
sbb
outsb
add
int3
pop
std
in
xchg
add
punpcklbw
xor
add
insb
dec
out
test
xor
movsl
dec
add
jle
pusha
leave
cmp
mov
out
dec
pusha
shll
add
and
mov
jb
cmp
xchg
pop
mov
pop
lcall
xor
lods
imul
mov
decl
pusha
fimuls
xchg
and
push
jg
mov
in
mov
jae
pusha
lods
jp
popa
mov
adc
cmp
arpl
pushf
imul
adc
inc
jnp
lea
adc
or
push
lcall
xor
es
mov
lret
jle
adc
loopne
jg
push
cmp
pusha
mov
fdivs
push
out
xchg
lahf
cmc
mov
lods
dec
and
dec
dec
adc
sbb
loop
or
push
pusha
or
push
xchg
push
outsb
ret
cmp
sbb
out
xchg
daa
bound
cli
xor
jo
jg
or
mov
rcll
pop
push
arpl
stos
inc
ljmp
dec
pop
sbb
mov
xchg
arpl
push
leave
xchg
ja
add
push
subb
in
cwtl
dec
rorl
lret
adc
lods
add
fmull
jb
cmp
out
ja
jecxz
out
insl
jmp
mov
in
push
mov
mov
sub
shrl
rcrb
and
daa
and
xchg
fdivp
loopne
out
xchg
fmull
je
inc
fiadds
jne
lds
cwtl
imul
pop
push
mov
push
ss
out
into
scas
or
jns
stos
call
call
sbbb
xchg
inc
and
sbb
mov
jbe
mov
dec
ljmp
xchg
cmp
jle
jg
rorb
lds
inc
shlb
pusha
pop
fcmovbe
int3
dec
mov
int
or
lret
lods
repz
insl
push
cld
add
mov
imulb
xor
cmp
mov
insb
popl
vpunpckhbw
push
stc
mov
inc
xor
cwtl
mov
cmpsl
jne
shll
orl
jecxz
cwtl
sbb
aad
stos
hlt
push
cmp
rcrb
mov
adc
mov
mov
testb
addr16
xor
inc
es
lods
imul
mov
fistpll
into
ds
sub
xorl
xor
jp
cmp
test
fldt
int
ss
inc
insl
adc
push
aam
int
sbb
sbb
ss
fsubrs
lods
xor
sete
xlat
roll
imul
imul
sarl
aas
sub
addr16
and
jmp
mov
cmp
ret
inc
cmp
jnp
and
jg
mov
xlat
mov
xor
xor
jl
xor
push
mov
sub
inc
sub
mov
movsb
outsb
and
mov
and
add
sub
cmp
out
and
cmp
sbb
cwtl
dec
sub
cmpsb
shlb
dec
push
cmp
push
cltd
outsb
rcll
mov
jbe
insb
jl
push
rcl
test
mov
ljmp
dec
mov
push
outsl
insl
pop
adc
outsb
inc
mov
cmp
push
lds
std
shrb
fs
lods
and
ja
lahf
mov
dec
mov
loop
jg
movsl
nop
ret
push
xor
dec
in
enter
cmp
inc
fsts
and
dec
inc
outsb
mov
xor
pop
mov
popf
or
xlat
mov
shlb
nop
xchg
xorb
loop
aas
enter
scas
inc
inc
sub
xor
fisubrl
iret
repnz
lds
jecxz
dec
xlat
cli
rep
add
shrb
pop
dec
cmp
ljmp
mov
xchg
jb
dec
out
test
mov
fwait
shll
and
lods
fnstenv
mov
loope
adc
iret
push
xchg
sbb
pop
clc
cmpsl
cmp
xor
popf
hlt
es
fcomps
test
push
fcompp
in
dec
pop
sbbb
xor
test
in
das
or
mov
inc
imul
pop
mov
fisttps
cltd
xchg
mov
sbb
into
add
imul
cmp
pop
xchg
std
add
or
test
push
jne
jne
push
and
dec
mov
ja
mov
stos
bound
lods
sbb
jp
cwtl
cmp
jge
jle
lods
outsl
dec
fistl
arpl
or
xor
push
mov
shl
fucom
je
cmp
and
out
jnp
jb
pop
sbb
psubb
movsb
pusha
int3
xor
das
iret
call
sbbb
xchg
push
sub
js
cmp
cmp
dec
xchg
xchg
cmp
push
mov
xchg
rcrl
mov
pop
or
push
cmp
jne
pop
shll
and
cmp
or
lock
mov
test
imul
ror
and
add
cmp
xchg
ss
dec
cwtl
inc
pop
test
and
adc
jmp
shll
andb
loopne
outsl
adc
dec
testl
add
pop
stos
mov
pop
hlt
iret
pushf
push
jns
ret
loopne
loope
jne
daa
imul
jmp
push
mov
je
in
test
push
push
add
pop
fsts
xor
mov
push
mov
inc
into
or
popf
sti
rol
sub
pop
int
std
scas
mov
jp
cmp
in
mov
jg
inc
lds
stos
push
ret
or
dec
and
mov
xor
das
test
dec
add
icebp
mov
xchg
add
jns
pop
ss
pop
jb
dec
lret
fistl
faddl
hlt
test
fidivl
test
xchg
ret
pop
jnp
lods
cmc
pop
push
vmwrite
jb
mov
cmp
and
mov
cltd
jg
dec
add
mov
dec
mov
loope
data16
and
sub
leave
push
lret
sbb
out
jo
mov
repz
es
jecxz
jmp
xor
pop
fidivrs
xchg
or
pop
push
bound
rcrb
mov
fcmovnbe
imul
lret
xchg
sahf
enter
mov
arpl
aaa
mov
xchg
mov
in
inc
push
add
dec
add
sbb
xchg
pop
sub
cmpsl
sub
push
data16
pop
or
sahf
sbb
test
add
pop
or
xchg
fisubl
cli
jg
xchg
adc
mov
jb
in
jle
mov
mov
jnp
pop
rcrl
push
mov
bound
cld
divl
dec
mov
cwtl
and
je
adc
and
or
adc
mov
shrl
stos
xchg
sbb
into
scas
movsb
pop
clc
das
jbe
push
pop
pop
stc
and
rorl
je
in
sbb
add
jp
clc
jp
push
ja
imul
and
shrb
and
dec
in
mov
test
sub
xchg
sbb
or
cmpl
out
add
mov
lods
jae
dec
lcall
sub
cmpsb
arpl
jns
push
jl
mov
adc
dec
or
or
enter
xlat
mov
insb
mov
sti
sbbb
mov
lret
lret
and
inc
scas
sbb
mov
push
int
jle
addb
mov
out
mov
shlb
sahf
fwait
test
xchg
pop
cltd
push
jp
mov
and
jne
pop
xor
aas
loope
push
stc
divl
adc
xchg
and
mov
mov
insl
mov
push
mov
mov
sarl
insb
gs
sbbb
and
aaa
addr16
dec
fdivr
and
cli
dec
jle
jae
adc
sbb
push
mov
push
mov
sahf
in
fwait
inc
and
std
dec
stos
fwait
icebp
call
mov
cmc
lock
lods
jmp
sub
insl
dec
pop
push
ljmp
out
shll
jns
xchg
sbb
mov
jl
add
out
push
jecxz
jo
jb
out
leave
dec
bound
addb
sbb
rclb
push
stos
test
sbb
scas
jno
popa
sub
shrl
inc
adc
lret
add
or
bound
lahf
fstps
addr16
cmp
adc
lret
push
lahf
outsb
imul
and
sarl
push
inc
cmp
sub
xor
ficomps
leave
mov
mov
pop
fwait
movsb
cmc
xchg
pusha
pop
sub
jl
fwait
mov
lock
in
std
jmp
movlpd
adc
xchg
lret
inc
std
mov
mov
ret
lds
icebp
mov
cs
imul
lahf
sub
vcvtpd2dqx
jge
lcall
mov
sbb
xor
mov
shrb
sbb
fdivr
xchg
xchg
pop
and
in
call
sub
sub
arpl
test
xor
iret
es
jne
push
insb
or
inc
pop
in
xor
je
popf
mov
fiaddl
scas
xor
sbbb
xor
bound
sbb
fwait
jns
pop
lret
push
addl
dec
shl
pop
orl
sub
dec
pop
repz
mov
lods
mov
ja
sub
xchg
cwtl
fs
popf
movsb
and
fidivs
mulb
movsl
inc
cmp
mov
sub
ret
xchg
xchg
pop
imul
mov
mov
and
push
xor
ret
cmp
sub
sbb
push
scas
popa
pushf
test
icebp
cmp
jb
lock
mov
jle
cmpb
std
pop
lcall
addl
leave
inc
and
dec
dec
and
sub
xchg
or
arpl
notb
add
outsl
jmp
adc
pop
popa
jge
ret
push
nop
dec
or
push
ficoml
imul
fldt
mov
es
push
sub
sbb
sub
pop
pop
mov
mov
push
in
inc
inc
inc
adc
imul
cmpb
push
xchg
fldenv
lea
loopne
sti
sbb
sub
xchg
and
outsb
mov
movb
push
xchg
fsubr
dec
cmc
sbb
bound
sbb
cmc
fbstp
repz
inc
mov
icebp
rclb
and
shll
mov
mov
addr16
dec
push
movb
lods
in
loopne
sub
push
jae
pop
arpl
fstl
shrb
inc
nop
sti
sbb
add
enter
xor
and
in
aas
arpl
lock
movsb
add
push
inc
cmp
inc
inc
fdivr
adc
pop
xor
sahf
push
int
mov
lea
stos
inc
mov
stos
adc
xchg
repz
xor
dec
insb
cltd
dec
inc
cmp
push
popa
add
push
cmp
loopne
push
mov
adc
xor
sub
mov
test
sub
sub
enter
mov
dec
add
xchg
push
xchg
cltd
xor
dec
mov
mov
push
xchg
hlt
jecxz
daa
cmp
mov
iret
dec
sahf
imul
js
addr16
add
fdivs
js
pusha
loope
mov
lock
xchg
push
arpl
div
jg
aas
jl
inc
mov
pop
in
mov
pop
adc
xchg
ret
repnz
jb,pt
je
cmp
inc
shrl
add
fwait
lea
les
add
ret
mov
insb
das
sub
cmpsb
subl
mov
fs
push
sbb
xlat
xor
fstps
je
call
ss
add
push
sbb
sbb
shll
add
sarl
mov
fs
fwait
add
loopne
sbb
xor
mov
jb
jae
jns
ljmp
cmc
cmpsl
push
and
dec
xchg
iret
in
fdivrl
mov
mov
aam
mov
addr16
fldl
out
frstor
sbb
js
roll
jae
fdivrs
pop
scas
mov
shr
cld
dec
gs
cld
and
adc
mov
imul
leave
push
int
iret
hlt
scas
ret
inc
mov
into
jnp
cli
or
int3
sub
sbb
mov
out
leave
xchg
idiv
mov
jne
std
mov
pop
mov
pop
or
cmp
xchg
aaa
imul
sub
adc
add
push
rcrl
imul
and
rcr
into
fnsave
loope
xchg
mov
mov
data16
mov
dec
xchg
clc
fdivrs
rorl
pop
push
push
stos
hlt
cld
out
imul
pop
adc
add
movsl
and
dec
jl
mov
mov
insb
scas
xchg
les
xlat
mov
in
les
loop
in
pop
icebp
gs
dec
popf
mov
push
fwait
js
sbb
cmp
mov
shlb
enter
lods
xchg
cmc
mov
sub
addr16
xchg
push
inc
jne
ret
stos
roll
xor
jle
loopne
std
add
mov
push
sbb
lods
jnp
sbb
dec
in
ja
jg
jecxz
idivb
sub
xor
filds
ja
int3
popa
lcall
mov
lods
push
lahf
loopne
pushf
push
xchg
adc
lea
push
adc
cmpl
shrb
iret
push
loope
std
test
int3
xor
jne
push
adc
dec
jae
or
fcomps
inc
cmc
out
aam
out
sbb
push
or
popf
mov
js
aad
adc
out
push
fs
sbb
mov
sti
mov
mov
adc
or
xor
xchg
mov
and
cmp
jl
lahf
pop
jmp
mov
lods
mov
enter
pop
rorb
push
or
push
test
idivl
pop
aaa
push
xor
push
and
loop
adc
daa
pop
mov
push
cs
leave
jb
pop
mov
mov
out
add
lods
adc
nop
out
adcb
cli
gs
inc
leave
leave
subl
dec
arpl
xchg
insl
and
movsl
or
cmc
mov
mov
sub
pop
lods
mov
and
sub
adc
ficoms
fldl2t
mov
aam
jo
cmc
or
in
pop
cmp
testb
adc
push
jecxz
pop
fistps
inc
test
icebp
sub
andb
int3
in
leave
and
inc
loop
repnz
cmp
rorb
add
pop
lea
lahf
mov
jo
jno
imul
inc
clc
fiaddl
loop
push
test
lock
adc
push
lcall
dec
jae
lret
dec
add
out
mov
xorb
fs
out
int3
in
aad
je
cld
mov
mov
stos
fsts
out
subw
outsl
push
rorb
lret
pop
popa
mov
mov
mov
pushf
call
loopne
add
xor
int
mov
xor
pop
js
jo
mov
repz
mov
inc
dec
sar
cli
js
nop
cld
mov
push
outsb
jge
insb
incb
call
inc
sti
enter
dec
and
loop
push
mov
loop
push
dec
inc
mov
insb
pushf
out
imul
mov
lret
rcrl
data16
dec
lods
and
movsb
add
shl
xor
adc
aaa
sub
ss
add
push
test
mov
imul
xor
and
mov
daa
or
pushf
inc
aaa
leave
push
cli
jns
cmp
dec
data16
in
mov
push
scas
inc
xchg
gs
mov
out
call
xlat
pop
stc
and
xchg
mov
or
imulb
adc
sub
push
lods
aam
mov
pushf
shrb
xchg
enter
mov
push
popa
jge
mov
insb
pop
fucomip
das
or
int3
inc
xor
cwtl
inc
lods
jno
mov
xor
je
ja
into
pop
in
jne
repz
xchg
roll
aam
lahf
jae
jno
mov
js
or
std
jg
fwait
arpl
scas
sbb
mov
jle
cli
xor
in
mov
push
in
mov
outsb
cwtl
mov
iret
mov
test
xor
es
mov
jo
push
in
jo
jmp
adc
out
push
ror
lds
pop
jne
add
fwait
test
sti
push
into
xor
out
push
mov
inc
test
das
or
movsl
bnd
stc
and
mov
aas
in
add
adc
xchg
fistpll
dec
repnz
mov
stos
cli
rorl
in
mov
mov
aaa
popf
or
xor
stos
das
jmp
xlat
popa
cmpsl
test
mov
cmp
scas
lods
add
imul
xchg
lcall
sbbb
xor
js
scas
push
outsb
and
movl
data16
test
push
sbb
in
jp
fbstp
stos
xchg
ret
fstps
aad
addb
lock
lods
jns
pop
fwait
es
mov
and
aaa
xor
addr16
cmc
sbb
clc
popf
shll
loopne
inc
xchg
jbe
mov
cld
jae
pop
cli
xor
mov
inc
dec
mov
imul
ljmp
sbb
mov
pop
fdivs
inc
inc
dec
stos
mov
ss
hlt
aad
into
adc
cwtl
stc
out
stc
cmp
push
or
hlt
pop
inc
shrb
test
ficomps
fidivs
icebp
std
aaa
fdivrl
fs
or
jl
fbld
mov
push
mov
popf
js
inc
mov
xor
pop
push
mov
xor
push
jecxz
pop
jo
push
xor
mov
xor
test
insb
repnz
pop
cmp
adc
out
js
rol
bound
stos
imul
and
inc
sbb
hlt
push
mov
je
notb
sub
pop
std
adcl
mov
inc
push
adc
ljmp
lret
push
decl
hlt
movsb
mov
stc
mov
xchg
push
mov
fdivrs
shrl
cmp
push
test
mov
shrb
cmc
mov
lods
and
das
aaa
sbb
inc
aaa
aam
outsb
pop
adc
jmp
rorl
popa
mov
mov
rorl
mov
sar
shlb
dec
pop
es
jl
sub
and
movsb
int
mov
push
push
call
xchg
popa
cld
cmpsb
jo
repz
mov
inc
in
out
lea
aaa
test
mov
or
jnp
cs
mov
popa
jle
ret
out
jp
push
xor
jle
cli
pop
andb
call
mov
pop
jo
add
push
gs
xchg
cmpsl
xlat
adc
push
aad
js
mov
mov
adc
fldt
fisttpl
inc
scas
adc
lahf
sarb
shlb
pusha
shll
pop
pop
mov
inc
ret
xchg
subl
testb
cmp
fs
in
mov
jecxz
std
mov
mov
mov
pop
into
pop
dec
mov
adc
call
xchg
aad
mov
mov
mov
orl
cmp
jecxz
lret
dec
mov
hlt
lds
inc
addl
cmpsl
or
mov
pop
outsl
adc
push
sbb
pop
push
ret
mov
inc
dec
imul
xchg
push
push
push
test
push
mov
or
xchg
mov
pop
icebp
mov
jl
rcr
shrl
out
fldcw
aas
inc
push
inc
pop
aaa
cli
xlat
shll
sbb
mov
dec
push
inc
jmp
and
cmp
xchg
aad
out
mov
jmp
pop
das
dec
nop
movsl
cli
pop
xor
roll
in
push
in
fstl
mov
test
ret
and
cmc
mov
flds
aaa
cmp
xor
add
arpl
test
sbb
imul
sub
dec
nop
mov
rcrb
sub
in
rcll
sti
adc
cmp
scas
sbb
cmp
mov
mov
sahf
ret
addr16
arpl
or
mov
inc
inc
scas
scas
mov
mov
lret
aam
sub
test
stos
aam
sbb
negb
mov
inc
shll
stos
das
xor
jecxz
xchg
cmp
test
subb
lods
inc
push
cmp
xlat
push
push
xchg
cmpsl
push
aam
test
or
fsub
add
loopne
popf
push
stos
out
pop
aam
dec
cmp
push
dec
pop
mov
or
inc
lret
pop
stc
sub
cli
or
jle
pop
cli
mov
loope
jno
jmp
faddp
dec
push
jle
or
xchg
xor
outsl
ljmp
scas
add
cmp
test
mov
sbb
inc
ljmp
fmull
xor
sbb
xorl
xor
fwait
inc
cmp
jo
xor
je
push
inc
push
das
xchg
mov
inc
movsl
das
loopne
push
test
push
sub
test
push
jne
rcl
sub
lret
pop
sbb
sahf
adc
adc
in
imul
push
rorl
test
rcrl
or
adcb
xor
stc
cli
push
or
mov
pop
lock
test
add
fbld
mov
or
sub
ds
dec
in
fcompl
idivb
in
xchg
aas
mov
jl
ficompl
cmpsl
callw
lahf
ljmp
stos
jno
outsb
dec
xlat
gs
hlt
push
adc
push
jmp
ja
fbld
fidivrl
dec
inc
mov
inc
xor
repz
push
mov
xor
lods
inc
stc
test
ret
mov
adc
fbld
jbe
sti
push
adc
adc
lahf
push
lea
das
mov
push
xor
cmp
out
pop
leave
push
push
add
xor
xchg
out
std
lods
inc
loope
in
inc
loop
les
int3
adc
repnz
sbbb
rcll
sbb
andl
jp
push
pushf
xor
xor
add
mov
pop
xor
mov
cmp
les
push
test
or
cmp
popa
adc
pop
mov
rorb
dec
shl
in
ljmp
mov
bswap
in
push
inc
mov
xchg
jo
shl
mov
ds
daa
aad
les
notb
rol
pushw
cmp
stos
sbb
test
and
pop
movsb
icebp
or
mov
mov
lock
std
lods
sub
mov
cmp
pop
cmp
and
nop
inc
insb
es
xor
adcb
pop
cmp
fstl
scas
adc
fs
repnz
movsb
pop
xchg
xchg
in
movsb
inc
cwtl
adc
mov
subl
cld
xchg
ret
and
xchg
mov
outsl
out
jge
jg
pop
lcall
cmp
fisubl
xor
pop
pop
and
addr16
adc
mov
je
test
repnz
scas
lods
fistl
gs
repnz
pushf
jae
shll
ljmp
xor
jmp
mov
or
cwtl
cltd
or
insl
out
inc
andb
fcomps
cltd
add
pop
xchg
popa
dec
rclb
mov
movsb
push
out
jmp
sbb
cltd
xlat
lret
mov
pusha
fs
jno
sub
pop
xchg
jecxz
rorb
inc
pop
push
into
ljmp
and
cmc
ljmp
xchg
adcl
jl
movsl
adc
pushf
sbb
sahf
xor
mov
inc
xchg
or
lcall
test
mov
xchg
decl
adc
sbb
mov
pop
fmul
hlt
or
call
call
cmc
ss
lea
mov
fistps
ss
stos
lahf
mov
push
xor
popf
xchg
mov
cltd
adc
pop
call
scas
xor
movsl
xchg
mov
dec
sarb
cmp
mov
xchg
push
lret
out
cmp
cmp
xchg
mov
cltd
loope
imul
aaa
int
out
adc
andl
icebp
jo
mov
dec
sub
adc
pop
out
add
jmp
cmp
cmc
jmp
movsb
cwtl
and
jb
jne
dec
sarb
call
mov
push
xchg
aaa
jle
push
jge
xorb
or
pop
rolb
or
pop
jb
insl
pop
lods
imulb
mov
push
arpl
cmp
cmp
cmp
jg
repnz
adc
lahf
stos
and
bound
cli
sub
aas
mov
jne
rolb
inc
jnp
jmp
sub
cmp
fidivs
incb
jae
lret
repnz
xchg
ret
and
push
xchg
xchg
fbld
pop
int
push
jne
aaa
movb
cs
mov
xchg
sti
dec
mov
sbb
pop
cltd
mov
sub
pop
push
jno
xor
mulb
pop
xor
mov
inc
dec
pop
sarl
mov
sub
push
dec
jo
pop
push
mov
daa
mov
call
repnz
fwait
inc
lcall
pop
cmp
lcall
mulb
mov
sbb
push
les
mov
push
jl
pop
and
jae
insb
sti
test
and
xor
aaa
mov
push
popf
inc
jbe
mov
push
pop
out
jb
dec
inc
jne
sub
adc
mov
fstpt
jg
ja
add
popa
and
jnp
sub
pop
in
or
mov
mov
pop
es
es
jnp
ret
adc
lods
mov
jle
and
adc
jg
fldcw
and
sbb
mov
sub
js
sub
jle
sahf
adc
inc
adc
mov
pop
xor
push
dec
iret
stos
xor
in
inc
push
jecxz
sbb
xor
push
xor
adc
lea
and
out
rcrb
mov
dec
xchg
jnp
push
jb
lds
xor
into
push
daa
inc
jnp
cli
int
in
adc
inc
fucomip
dec
dec
inc
cmc
cltd
cmp
daa
jecxz
insb
dec
xor
addr16
mov
jle
add
adc
call
cwtl
jmp
data16
adc
into
out
je
cmpsb
cmpsl
and
fwait
add
stos
notl
addr16
mov
xchg
mov
jmp
xchg
cmp
xlat
sbb
or
lret
push
dec
in
test
cmp
push
sbb
or
jnp
jo
rorb
enter
xchg
xchg
cmp
cmp
jp
mov
or
adc
lea
cld
out
jb
jp
fwait
loop
jb
insl
and
imul
ret
mov
xchg
lcall
cltd
bound
stos
add
adc
popf
cmp
sub
xor
push
stc
aas
inc
scas
cli
popf
mov
jge
and
cmp
mov
pop
push
dec
lea
mov
cld
dec
cmp
sti
jae
add
in
movsl
loope
xor
jge
stos
into
xchg
popf
pop
mov
insl
nop
pop
and
mov
lcall
loopne
jno,pn
adcl
in
pop
xor
inc
push
jecxz
call
mov
xchg
xchg
xchg
jl
pop
scas
push
cmp
push
loop
push
sub
sub
jae
jecxz
and
sub
add
mov
adc
mov
xchg
cmpsl
xchg
shlb
mov
lret
mov
test
pop
push
cwtl
lds
adc
push
jmp
sbb
push
push
arpl
jne
add
jecxz
jbe
inc
adc
or
mov
dec
mov
sahf
hlt
mov
jne
in
inc
mov
mov
push
shlb
cmp
push
pop
push
pop
aaa
xor
jno
arpl
test
sub
imul
fcom
cmpsb
xor
adc
mov
bound
pop
xor
lock
not
and
jae
int3
cmp
ds
or
js
jae
dec
sub
outsl
insb
mov
fcompl
cld
movsl
mov
popa
push
jle
cmp
sub
rorl
loope
hlt
arpl
inc
clc
mov
add
xchg
fistl
into
adc
pop
int
dec
jp
outsb
das
movsl
insb
fisttpll
ljmp
adc
push
mov
mov
mov
mov
fcompl
aam
cmp
sub
or
pushl
shll
sbb
jnp
cs
int
mov
jg
aam
sbb
xchg
jg
mov
cs
subb
loop
inc
xor
or
add
into
jb
push
pusha
popa
sbb
out
stos
push
sub
push
xchg
cld
int3
aad
gs
mov
xor
cmp
into
push
cmp
sub
inc
dec
cmp
jnp
ret
and
xchg
inc
aad
fincstp
repz
mov
jle
jge
jp
aaa
jo
sbb
inc
xchg
fstpt
xchg
out
mov
in
mov
fdivrs
js
jae
sub
sub
sub
arpl
sbb
stos
ds
inc
push
add
out
add
dec
xor
fldcw
jl
jae
sub
mov
xchg
mov
xor
pop
ss
sti
and
clc
cmpsb
sahf
int
fdivrs
addr16
aas
mov
les
add
int3
cli
int
jge
adc
pop
cmp
pop
dec
cmp
or
inc
jle
outsl
xchg
xor
scas
inc
dec
int3
mov
cld
test
xchg
movsb
mov
mov
jns
subl
adc
add
cmp
or
or
jmp
lock
xchg
stc
push
ja
call
outsl
mov
add
mov
push
pop
sahf
sbb
xchg
adc
nop
mov
push
xchg
and
arpl
fs
cmpsl
push
sar
pop
dec
insl
and
adc
mov
mov
xchg
dec
cmpsl
stc
mov
xlat
int
rcrl
xor
pop
xlat
imul
scas
or
into
jnp
lock
mulb
cmp
push
mov
mov
adc
insl
push
cli
sti
xor
cmp
adc
test
call
mov
xlat
test
je
mov
inc
repnz
rcrb
sbb
lea
push
out
out
jecxz
test
sbbl
popa
loope
and
or
stos
jge
dec
mov
add
dec
xor
fs
popa
sub
out
cli
and
and
mov
imul
shlb
popa
cmc
iret
push
xlat
scas
rep
xchg
mov
adc
repz
cmp
fidivrs
inc
pusha
cmc
xchg
ret
popa
fadds
or
and
gs
xchg
jl
jns
sub
xchg
shrl
jl,pn
rcrl
lock
pop
jmp
mov
cmpl
flds
aam
adc
cmp
les
jnp
orb
adc
mov
arpl
mov
ret
pop
inc
xor
rorb
leave
cmc
mov
lahf
lcall
mov
addr16
xor
mov
xchg
jnp
jg
sub
sub
repz
push
cmp
mov
adc
inc
or
push
jo
sahf
lods
fistpll
fldenv
jle
cmp
hlt
and
repz
gs
fistps
test
or
dec
mov
fs
imul
leave
imul
loop
or
int3
int3
psrlq
dec
sti
lods
adc
add
xchg
imul
cwtl
add
push
add
lods
int3
ret
mov
dec
sub
and
xchg
inc
add
rep
aaa
or
loop
lahf
decl
js
jecxz
cmp
dec
xor
push
xchg
ds
inc
mov
xchg
cmp
fsubs
sub
les
xor
inc
fwait
cltd
std
iret
xchg
int
or
movsb
sub
pop
mov
gs
popf
in
enter
or
lahf
xchg
xor
pop
jecxz
mov
out
outsl
mov
sbb
lods
stos
and
and
lahf
repnz
outsl
shll
push
jne
nop
fcomp
repz
ss
orl
stc
sbb
aas
jnp
cmp
adc
push
popf
hlt
inc
xlat
cmp
pushf
mull
stos
shrb
mov
int
cld
adc
fadd
shl
pop
loope
imul
pushf
fwait
ret
xor
mov
das
pusha
inc
in
sub
cmp
xor
outsl
jmp
dec
adcl
das
mov
dec
xor
aam
std
add
cwtl
test
leave
push
aaa
pop
les
lret
push
lock
mov
and
fcmove
aaa
push
inc
test
enter
jle
push
inc
push
cmp
neg
mov
inc
dec
sbb
fwait
jmp
shrl
mov
mov
mov
mov
cmpsl
hlt
out
cwtl
ficomps
add
sub
pusha
lret
lretw
or
jo
adc
sti
sub
or
cs
aaa
inc
ret
mov
xor
xlat
mov
sbb
ljmp
cmp
test
push
jbe
out
in
push
call
adc
insl
cmp
push
push
xchg
movsb
andl
or
mov
sub
fidivrs
pusha
push
scas
cmp
nop
es
iret
or
sub
negb
jae
jo
jno
popf
ss
and
mov
pop
scas
add
movsb
test
mov
rcrl
dec
lret
cmc
mov
into
decb
es
scas
sbb
out
and
daa
das
lods
xor
mov
adc
nop
es
ret
gs
mov
jge
lods
cld
xlat
sub
xchg
repz
shl
mov
cltd
sbb
mov
rorl
lahf
jb
sub
mov
xor
stos
and
jne
dec
popa
mov
ljmp
lods
mov
adc
mov
pusha
or
push
jo
stos
les
pop
cmp
xchg
cmp
je
sub
dec
shll
movb
or
mov
cmc
and
jge
mov
inc
lods
iret
outsl
outsl
das
pop
fsubl
or
div
adc
addb
xor
pop
in
mov
je
aam
sub
push
dec
sub
in
test
xchg
and
mov
lret
mov
pop
mov
js
jns
scas
jne
adc
stc
fs
mov
mov
mov
dec
sbb
rorl
inc
jno
and
addr16
mov
hlt
loopne
or
cmp
lods
sub
adc
popf
out
iret
sbb
cwtl
xlat
lret
add
jne
mov
jle,pt
and
insb
scas
jnp
nop
popa
icebp
in
imul
aam
xor
gs
xor
jae
mov
mov
cmpsl
push
pop
xor
cli
push
push
ret
fimuls
int
sbb
mov
insb
test
leave
and
in
mull
lock
test
xchg
mov
test
push
xchg
sahf
pop
cmp
adc
ret
cmp
ret
push
xchg
sbb
stos
std
mov
sub
and
inc
sbb
fs
out
ja
lock
mov
mov
les
aad
ret
mov
andb
ret
cmc
mov
inc
cmp
out
cmpsl
xlat
inc
and
stc
cmp
or
sbb
and
mov
push
mov
jl
outsl
jle
arpl
outsl
and
stos
jb
xor
jecxz
jl
hlt
outsl
mov
xchg
mov
push
call
inc
nop
pushf
int
mov
rorb
std
movsb
and
ret
pop
add
fwait
push
jge
leave
hlt
popf
sahf
sbb
mov
cmp
scas
scas
pop
stos
push
int3
jae
xor
xchg
mov
push
fdivrp
dec
inc
push
notb
aam
divl
je
dec
pop
pop
dec
pop
jge
std
popa
cmp
out
dec
lods
mov
das
in
pop
jno
pop
mov
dec
loop
jb
inc
jl
inc
daa
int3
ljmp
xor
xchg
popf
push
lcall
cmpsl
cmp
in
and
dec
mov
mov
xor
jmp
in
filds
pop
mov
stos
clc
lret
test
add
jae
cmp
mov
movsl
add
sahf
cmc
mov
sbb
jae
xchg
mov
arpl
cli
es
xchg
cmp
cli
sarb
imul
jl
or
test
loope
fldt
nop
jge
aas
leave
jno
fisttpl
mov
lret
mov
test
push
mov
adc
xor
out
xlat
outsl
dec
adc
jp
mov
lods
mov
test
or
xor
mov
cli
mov
inc
popl
xchg
std
xlat
int3
xor
scas
add
aas
add
mov
jno
rcrl
cmp
jnp
es
or
testb
inc
scas
adc
in
jle
or
xor
nop
push
fldenv
dec
and
inc
ds
or
aaa
add
decl
ret
jno
cmp
hlt
lcall
or
jnp
sbb
inc
ror
pushw
in
sub
enter
push
cs
mov
mov
dec
lcall
shr
sub
popa
pop
cmp
jbe
jp
mov
ljmp
stc
bnd
lds
jecxz
xchg
dec
push
int3
jnp
es
scas
mov
adc
pop
jnp
mov
mov
stos
fs
push
xchg
fisubrs
mov
out
test
sbb
daa
mov
leave
mov
mov
sub
mov
arpl
into
push
pop
inc
push
and
mov
pop
shlb
mov
pop
jno
adc
fisubrs
rcll
pop
mov
inc
jae
hlt
jmp
jne
xchg
mov
xchg
xor
push
mov
sbb
or
aam
das
fisubrl
ret
and
addl
sbbb
mov
ljmp
jmp
mov
xor
cmp
xor
loope
imull
leave
iret
jae
jae
pop
and
jns
outsl
push
in
imul
pop
ja
js
and
add
push
pop
mov
pop
mulb
xchg
xor
nop
ss
mov
into
into
cmp
test
jge
cwtl
inc
xchg
adc
fmuls
jmp
push
int
rcll
idivb
dec
mov
outsl
sbb
cvtps2pi
pop
scas
jg
jge
mov
fimull
sti
daa
pop
loopne
addl
lahf
jne
mov
mov
push
ficompl
repz
jne
loope
rorl
into
fsub
imul
cmp
cld
das
mov
and
or
ret
push
lahf
push
pusha
xchg
sbb
lea
fisttpl
das
sub
fldl
mov
int
sbb
gs
mov
enter
int3
js
dec
shl
daa
lret
jne
out
sub
in
out
jbe
out
int
std
lret
mov
jno
inc
pushf
outsb
inc
sbb
and
pop
pop
addr16
dec
jge
push
push
dec
sbb
ret
cli
loopne
push
vmovsd
push
xchg
xor
sub
and
orl
fwait
outsl
add
inc
cmp
add
xchg
lods
lret
imul
sub
mov
xchg
xchg
and
dec
fnsave
mov
jg
dec
mov
adc
push
xchg
push
loope
mov
push
lods
or
push
add
jnp
hlt
fbld
lods
roll
out
dec
add
pop
inc
cmpsl
dec
rcrb
ret
pop
repnz
or
cmpsl
enter
jmp
test
inc
mov
dec
push
sub
jle
dec
sahf
push
inc
add
pop
xor
test
pusha
dec
push
addr16
fldt
inc
add
lahf
sahf
aam
lods
mov
xchg
outsb
je
in
movsb
shld
lea
mov
mov
dec
nop
and
jl
add
lods
dec
lds
or
movsb
std
adc
jns
xor
and
xchg
mov
mov
mov
pushl
out
inc
jecxz
out
decb
mov
enter
push
push
push
jnp
fidivrs
arpl
push
sub
loope
pop
repnz
jg
mov
imul
jp
into
popa
mov
dec
or
or
mov
pop
lods
cmp
icebp
dec
fldl
dec
stc
push
test
cltd
xor
dec
insl
xchg
xchg
cmc
dec
loope
lret
and
sbb
js
mov
test
cmp
lahf
jmp
negl
pushf
add
std
outsb
cli
add
loope
aaa
loope
jmp
ds
inc
jne
in
sbb
outsb
xchg
xchg
add
test
faddl
test
les
in
push
mov
cmp
mov
call
in
xchg
sub
pop
int3
pusha
mov
int
test
dec
adc
addr16
push
jmp
insl
dec
pop
fistpl
dec
sbb
scas
push
or
insl
and
mov
shrb
call
shll
testl
fs
or
sub
repnz
mov
pop
in
dec
lods
lock
mov
ljmp
pop
notl
inc
daa
cmp
jg
cltd
ds
addb
popf
in
sbb
or
jb
dec
mov
inc
sbb
xchg
xor
es
and
ss
cli
das
insb
call
insl
stos
lret
aaa
test
and
inc
inc
ret
sbb
mov
mov
sbb
xchg
xchg
push
mov
in
test
aaa
cmp
insb
mov
add
imul
add
pop
sahf
xor
jo
inc
mov
inc
test
pop
mov
add
in
or
popa
xchg
imul
decl
inc
andb
mov
xchg
mov
mov
adc
inc
xor
jns
imul
or
jp
cmp
cmpsl
int
mov
ret
fldl
fcmovnu
xor
test
or
cwtl
push
sbb
repz
cmc
mov
or
xchg
sbbb
fidivl
repnz
js
nop
out
mov
out
gs
mov
lods
mov
sbb
inc
mov
leave
add
jo
mov
fistps
insl
ds
mov
dec
call
lods
inc
and
pop
cmp
adc
push
or
sub
mov
rorb
movsl
mov
mov
and
stos
xor
shll
mov
insb
lret
sbb
aaa
pusha
rclb
inc
mov
repnz
jno
cmpb
divb
subb
add
pushf
out
mov
push
test
adc
stc
shl
dec
xlat
test
push
fmull
or
repnz
ljmp
cmp
cmp
ret
in
iret
pusha
test
mov
outsl
mov
cmpsl
sbb
sub
aad
push
jb
adc
cld
fsub
xchg
cmp
std
sbb
inc
lcall
pop
push
bound
test
dec
movsl
dec
and
add
fimull
pop
inc
inc
sub
sub
xchg
ljmp
fsubs
sub
and
sahf
rolb
icebp
mov
out
and
cltd
lods
and
sarb
or
fisttpll
test
cmp
mov
fldenv
int
aas
sub
fimuls
test
jp
cmc
call
fmuls
push
adc
dec
mov
ror
fdivs
fnstsw
cmp
or
pushf
loopne
movq
add
leave
sbb
fisttpll
xchg
rorb
inc
mov
sub
or
scas
xorl
cli
test
mov
sbbl
cli
loope
insl
stos
les
push
cld
inc
mov
mov
rcll
mov
pop
addr16
push
xchg
fistpll
jns
lret
sbb
sbb
lret
mov
out
jmp
xchg
mov
ljmp
pop
cmpsl
pop
ficoml
shlb
fstps
int3
fdiv
inc
popa
jmp
dec
sahf
and
inc
jmp
fdivrs
je
je
sahf
and
stos
and
cld
pop
sbb
dec
and
mul
cmp
ja
sub
jbe
pop
cli
sahf
cmp
mov
pop
xchg
push
es
insb
jmp
adc
scas
data16
cld
es
mov
mov
jae
repz
lea
mov
ss
jecxz
xor
sbb
pusha
mov
pop
int3
mov
sub
mov
push
push
xchg
push
mov
xchg
js
enter
inc
xor
and
in
mov
ja
adc
ret
stos
jp
gs
push
loopne
mov
mov
lret
les
jbe
outsl
jnp
mov
mov
mov
sub
inc
mov
mulb
lret
xor
mov
mov
inc
inc
lods
mov
les
cmc
adc
mov
jl
ret
add
outsb
pop
pop
pop
sub
imul
popa
mov
sbb
ret
pushf
test
sub
and
shl
dec
cmc
jne
sbb
mov
mov
repnz
pop
pop
push
pop
lret
gs
imul
fsubp
jne
push
adc
sbb
loop
inc
imulb
xchg
inc
pop
stos
bound
mov
ss
pop
pop
sahf
stos
cmpb
mov
cmpsb
mov
xor
cmp
dec
imul
je
pop
add
fdivr
adc
or
add
fsubl
dec
xor
dec
ljmp
lahf
dec
mov
cli
jno
push
mov
pop
pusha
in
out
scas
jnp
sbb
setbe
mov
daa
iret
mov
mov
pop
dec
jg
dec
scas
jne
pop
inc
ljmp
sub
movsb
shrl
jecxz
push
push
repz
pushf
hlt
inc
dec
cmpsb
sbb
in
shr
add
pop
rorl
das
fcoml
rcll
cmp
fsubrs
push
imul
sbb
jecxz
iret
jle
loopne
adc
mov
jp
cmp
lock
xlat
push
mov
das
aam
xchg
arpl
lcall
jg
mov
xchg
push
and
mov
ss
call
cs
mov
repz
in
loop
loop
enter
test
cmpl
sahf
imul
push
filds
cmp
rol
icebp
pop
push
push
stos
test
fwait
jecxz
dec
push
popa
xchg
mov
lods
adc
xchg
adc
jno
pop
iret
adc
add
xchg
lea
xlat
test
xchg
movd
mov
jae
jge
mov
test
mov
mov
cmpsb
or
scas
or
cmp
into
popa
stc
fstps
test
xor
test
fidivl
push
jnp
lcall
dec
sub
jp
sbb
dec
shrb
js
jmp
sbb
mov
jae
popa
aad
cs
or
fstpl
popa
lret
mov
rcll
mov
and
test
xor
std
mov
and
movl
adc
mov
dec
fnstsw
lahf
cmc
stc
sbb
rcll
mov
dec
bnd
cmpsb
jbe
inc
push
fldl
inc
jecxz
lea
lds
push
jb
pop
xchg
popl
adc
fistps
sahf
bound
jl
je
xlat
and
cmpsl
pushf
cmp
xor
adc
adc
fwait
iret
ret
into
xor
pop
xchg
mov
popf
insb
cmpsb
js
js
insl
arpl
loop
xchg
and
sti
mov
in
scas
lds
stos
lds
imull
push
cs
mov
xchg
cmp
addb
movsl
loop
and
sbb
std
cs
imul
push
scas
jle
test
rep
xchg
jae
push
mov
add
jne
mov
xchg
push
or
add
xchg
in
sbb
popf
lret
jmp
mov
inc
stos
cmp
lods
dec
mov
push
add
in
int3
adc
test
push
or
push
and
aad
xchg
xor
mov
dec
stc
in
ret
push
adc
idivl
jns
mov
xor
int
xchg
jmp
push
push
xchg
jo
and
mov
xor
divb
ss
pop
cmpsb
fwait
add
ffree
xcrypt-ecb
cmpsl
dec
in
pop
aas
daa
jo
or
movsl
sarb
or
dec
sub
fwait
pop
sarb
add
fnstenv
push
or
adc
fistpl
fstpt
pop
icebp
add
data16
mov
lods
fnstenv
add
add
xchg
orl
mov
test
out
jl
mov
test
in
adc
push
rolb
in
imul
insb
sub
xor
pusha
das
int
mov
push
movsb
jns
insl
test
inc
mov
outsl
lcall
xchg
adc
adc
imull
push
icebp
sbb
xchg
mov
out
ret
scas
pop
aam
filds
sbb
test
inc
inc
std
cmp
scas
imull
jb
in
dec
mov
mov
add
jae
push
push
imul
int
test
fwait
nop
inc
add
jae
jg
fistpl
mov
imul
aam
mov
or
nop
test
and
lahf
dec
push
je
pop
pop
pop
out
cmpsb
out
fs
pusha
nop
rcrl
icebp
xchg
test
test
out
jne
in
mov
das
cmp
lcall
popa
or
addb
outsb
push
into
sub
push
pop
xchg
mov
es
or
push
push
jmp
sahf
add
dec
sbb
xlat
and
pop
jge
fs
fld
sti
push
lret
rcrl
sbb
test
inc
cld
sbb
stc
adcl
int3
sbb
mov
sbb
push
shrb
xor
mov
lahf
mov
shll
scas
xor
pop
and
pusha
pop
mov
xchg
lcall
push
add
stos
and
rorl
push
fsubl
sub
clc
jnp
push
pop
ss
ss
dec
sbb
insb
scas
pop
dec
fists
hlt
mov
into
stos
enter
mov
fsubs
mov
or
sub
enter
inc
inc
inc
adc
or
pop
mov
lret
popf
jne
or
ret
mov
push
jae
jecxz
loopne
jle
cld
push
sti
mov
in
jne
inc
data16
cmp
jne
out
pushf
jg
and
cwtl
pop
mov
mov
sub
shlb
daa
jne
test
adc
add
pop
in
nop
and
adc
inc
in
outsl
fiadds
or
test
cmpl
jmp
sahf
jmp
mov
mov
push
sub
leave
add
ljmp
enter
sbb
test
cmp
cmp
icebp
jecxz
insb
lret
mov
fidivrs
leave
stc
fistpl
add
dec
and
dec
aas
or
cwtl
pop
lahf
and
mov
gs
ja
jo
cwtl
mov
xor
and
pop
xchg
dec
cld
inc
pushf
cs
out
inc
jl
popf
loopne
pushf
jne
mov
jns
cli
lea
push
and
bound
mov
xchg
es
sti
cmp
push
jns
cltd
sub
test
dec
test
mov
jae
mov
xor
clc
push
popf
icebp
iret
paddw
push
mov
loop
pushf
lcall
adc
and
push
sbb
popa
dec
outsl
fcomps
adc
lret
ret
fnsave
insb
push
in
movsl
cli
sbb
insb
jp
lahf
push
xor
lea
or
movl
fcompl
fwait
ja
lods
andl
popa
stos
mov
js
adc
inc
rorl
mov
test
out
push
inc
in
lret
xor
popf
rcr
jae
mov
in
xchg
cs
ret
loopne
pop
lahf
lcall
push
fldenv
and
fcoml
outsb
xchg
dec
in
xor
sahf
lea
xchg
stc
repnz
aam
shlb
call
rcll
adc
test
push
push
mov
std
mov
mov
bound
pop
dec
adc
push
sbb
pop
push
out
fabs
mov
or
adcl
or
jns
ficoms
pop
dec
nop
pop
mov
js
out
cmp
push
addr16
loopne
loope
aad
inc
repnz
jge
and
popf
or
cmp
iret
mov
jle
mov
push
movsl
mov
ret
push
push
pop
mov
mov
fcoml
pop
js
jp
jns
enter
fxtract
xor
mov
insl
xlat
sub
decb
mov
inc
mov
xchg
movsb
subl
add
test
das
cltd
sbb
push
into
outsb
lahf
jo
push
test
pop
xor
into
ret
fucomip
pop
dec
outsl
pop
push
xchg
mov
push
pop
lahf
pop
xor
adc
test
cli
add
sub
jne
outsb
das
jmp
pop
les
cmc
pusha
adc
stc
dec
push
xchg
xchg
or
fdivp
xchg
cmp
icebp
ret
or
lock
jle
pop
pop
lret
stos
cmc
pop
dec
and
out
daa
sbb
test
stos
xchg
add
adc
cmp
mov
jnp
sahf
cli
cmp
arpl
mov
pop
pop
lods
data16
push
pusha
mov
rolb
xlat
test
call
sysenter
rolb
jno
xchg
sbb
loopew
ret
jo
lahf
or
mov
and
fs
cmp
xchg
mov
adc
test
inc
sbb
pop
clc
push
mov
jl
jbe
notb
mov
fistps
and
ss
fcoml
sub
lods
dec
jmp
repz
or
mov
jne
mov
xchg
fisubrs
push
fisubrs
fwait
adc
stos
aaa
lds
aam
jb
xchg
mov
pushf
xchg
jg
les
aaa
into
daa
xchg
cwtl
mov
xor
xor
cli
lahf
mov
sbb
xchg
rorb
or
xor
call
outsl
mov
xchg
in
sbb
das
xchg
sub
dec
xchg
nop
pop
lcall
fisttpll
jb
or
lea
jp
out
jb
xchg
mov
int
dec
pop
cwtl
or
jnp
mov
xchg
xor
adc
shl
xchg
cltd
das
and
in
jle
push
inc
lret
cld
mov
popa
adc
push
pop
jb
rolb
int3
adcl
mov
adc
inc
mov
mov
adc
lods
test
cmp
pop
div
cltd
out
xor
jmp
jbe
sbb
cmp
mov
clc
enter
sbb
ret
pop
les
xor
out
pop
or
inc
jae
add
in
add
mov
xor
cld
shrl
rcrb
mov
xchg
mov
flds
mov
test
fsubl
ror
test
in
mov
mov
adc
out
inc
add
popf
and
jg
aam
mov
xchg
fwait
cmp
aam
mov
push
cwtl
ljmp
push
outsl
lcall
les
xchg
lahf
or
sahf
arpl
jge
or
scas
out
push
cs
daa
test
adc
cwtl
xchg
adc
adc
mov
xor
push
jnp
push
hlt
xchg
jns
jl
sub
sti
ljmp
sub
jmp
push
mov
mov
jle
pop
ljmp
js
cmp
add
cltd
dec
push
cmpl
or
movsb
cld
mov
cmpsb
mov
ds
xor
cli
outsl
into
pop
xchg
lock
push
scas
xor
sub
jo
insl
mov
fcomps
add
pop
or
fidivrl
and
mov
int
lods
mov
loopne
mov
orl
adc
mov
movsb
jb
jecxz
mov
ljmp
pop
scas
les
repz
out
xchg
or
js
pop
xchg
ss
lahf
dec
jo
out
mov
aaa
dec
lock
fucom
mov
ret
and
test
push
adc
push
and
jne
push
sub
and
das
test
xchg
outsl
sbbb
dec
add
inc
adc
mov
loopne
mov
nop
sub
add
and
cmpsb
or
cltd
je
fwait
incl
fdivr
in
sahf
clc
rol
insb
scas
call
shll
pop
mov
or
test
mov
enter
movsl
in
out
sbb
sti
inc
fisubrl
insb
andb
dec
adc
jb
aam
ljmp
cmp
cmc
inc
fs
ds
pop
out
add
inc
mov
repz
lods
dec
mov
or
mov
add
lcall
in
std
in
jne
lea
frstor
sub
inc
adc
jmp
stos
mov
dec
adc
lods
stos
stos
push
inc
push
in
pusha
popa
imul
xor
mov
enter
and
push
xchg
sarb
mov
lcall
push
rol
imul
sbb
jge
and
cmp
add
rcr
pop
xchg
dec
adc
mov
cwtl
ret
enter
xchg
test
lret
inc
push
jne
mov
adc
loop
jge
push
test
dec
test
testl
repnz
js
mov
in
lret
cld
cs
and
add
sub
inc
and
mov
mov
icebp
subb
arpl
sbb
rcrl
insl
daa
fidivrl
and
fmuls
shrb
sbbb
sti
inc
sub
fsubs
inc
or
jge
lods
jbe
mov
adc
dec
inc
inc
lods
xor
inc
inc
scas
xchg
mov
mov
iret
add
stos
pop
icebp
lret
hlt
mov
fldenv
out
imul
pop
xor
xchg
outsb
xor
fiadds
sub
dec
je
inc
or
adc
inc
and
sub
mov
push
mov
push
dec
adc
xchg
insb
mov
adc
mulb
push
adc
jns
push
push
fwait
imul
inc
xorb
test
lds
scas
dec
movsb
mov
js
xlat
in
push
add
xchg
mov
jl
mov
scas
or
sub
js
jl
dec
sbb
xchg
addr16
add
test
cmp
leave
mov
mov
jmp
xor
outsl
mov
pop
pop
mov
inc
or
out
rclb
dec
das
cmc
xchg
dec
addl
cld
call
punpcklbw
adcl
lcall
enter
ljmp
pop
pop
cltd
sub
cltd
popf
dec
test
icebp
loope
in
push
jb
xchg
cmpsb
jns
out
push
jp
in
pop
xor
mov
pushf
sub
xchg
mov
dec
sub
adc
push
inc
inc
ret
sub
faddl
add
leave
gs
int3
call
sbb
pusha
cmp
inc
pop
mov
scas
popa
lcall
fbld
scas
dec
sub
test
or
mov
aam
pop
stos
mov
pop
sub
andb
out
pop
aaa
mov
dec
lcall
aad
inc
dec
jg
dec
jp
fidivrl
jg
dec
push
sahf
test
jg
fidivrl
xlat
adcl
popa
test
gs
push
ja
sbb
ret
sbb
shlb
sbb
daa
mov
inc
mov
test
jmp
mov
cmp
stos
lret
pop
sub
cmp
cli
fmuls
jle
and
stc
gs
or
ss
pop
mov
push
mov
pop
or
scas
xchg
mov
mov
or
cld
xchg
popf
dec
jge
sub
jecxz
pop
loope
or
daa
in
pop
or
lahf
xchg
pop
mov
notl
les
and
in
dec
jg
aad
into
cmp
or
out
mov
pop
cmp
inc
jecxz
adc
ss
push
or
lahf
sub
cmp
dec
xchg
xor
or
mov
sahf
sahf
mov
xor
gs
sub
ja
out
lock
ja
out
lahf
repnz
sbb
stc
pop
sub
enter
lahf
int3
fs
adc
push
pop
cwtl
mov
aaa
lret
lods
loop,pn
fsubr
jmp
movsl
inc
into
jb
mov
mov
sbb
jmp
std
jecxz
jne
adc
call
push
bound
fucomp
in
stc
push
call
mov
fbstp
and
shll
pop
add
pusha
andb
enter
fdivrs
mov
cs
lret
inc
add
cmp
push
xchg
push
push
stc
jmp
cmp
jge
push
push
mov
and
and
ret
repz
mov
sub
inc
xchg
inc
cmp
fistpl
adc
int
dec
push
push
adc
dec
inc
adc
test
mov
dec
jnp
imul
jge
sbb
and
jecxz
js
cmp
lahf
add
xchg
int
mov
fs
fcmovnu
cmc
jge
mov
pop
xchg
inc
pop
popa
or
sbb
repnz
arpl
cmp
mov
jmp
cmpl
mov
pop
mov
sub
test
fistps
int
jle
sbb
and
xor
sub
popf
sbb
mov
inc
jl
ficoms
scas
ret
jb
dec
inc
dec
pop
pop
rcrl
adc
jb
xor
lcall
sub
fstl
ljmp
add
xor
push
js
push
pop
aam
mov
lock
push
or
stos
rcll
xchg
fsts
stos
js
sub
jbe
outsb
outsb
pop
push
je
mov
cmp
leave
test
jb
mov
inc
fwait
or
movsb
push
push
mov
ds
rcrb
imul
addr16
stc
mov
pop
std
mov
ljmp
incl
inc
xchg
shlb
cli
int3
push
sub
enter
jno
lock
lods
sbb
jne
adc
inc
inc
sbb
mov
lds
aam
adc
sub
adc
in
in
jo
inc
out
lods
fsubs
xchg
cmp
cld
cltd
ss
fnstcw
into
cli
cmp
sahf
insl
jno
ds
test
into
sbb
cmp
ljmp
mov
mov
mov
jecxz
lods
insl
repz
xor
xor
mov
push
xchg
mov
mov
sbb
jne
add
cmp
popa
movsl
ret
addr16
and
call
cmp
insb
loop
mov
sbb
test
cmp
jp
or
cmpsb
push
mov
cmp
mov
psrlq
xor
sub
pop
hlt
jbe
mov
idivl
pusha
scas
insl
push
imul
push
or
cmp
pop
and
or
cmp
loop
jne
loopne
movsl
icebp
xchg
sbb
and
or
xchg
test
push
add
mov
push
jo
add
cwtl
pop
into
stos
inc
jp
pop
mov
out
jge
leave
lahf
inc
inc
dec
cli
mov
sti
adc
xchg
aad
and
push
in
mov
mov
push
cs
cmp
daa
cmpsb
pop
adc
fbld
mov
jp
test
and
mov
mov
ret
jnp
mov
dec
fistl
pop
movsl
mov
mov
ret
loope
dec
cmc
fisttpl
xor
pop
in
lahf
inc
aam
push
or
lcall
out
mov
mov
inc
push
cld
lcall
mov
mov
fiaddl
sub
or
ficoml
adc
mov
dec
daa
sbb
jno
adc
insb
dec
xchg
jmp
insb
xchg
pop
lahf
mov
dec
mov
jae
fcmovb
adcb
pop
adc
lea
mov
out
mov
mov
es
into
cmp
fdivrl
xchg
or
xchg
into
js,pn
sbbl
jg
jne
or
pop
aas
xchg
cmp
sub
ror
aaa
push
xor
mov
shll
xor
sbb
clc
sub
mov
xor
aad
adc
insb
pop
outsl
cmp
lock
loopne
rolb
loope,pt
dec
add
push
xchg
mov
inc
pushf
mov
aam
push
xor
dec
add
adc
push
lret
mov
in
daa
pop
mov
aad
mov
mov
pextrw
fcompl
inc
mov
xchg
push
pop
vpunpckhdq
dec
mov
xor
mov
je
inc
pusha
pop
sahf
push
adc
or
mov
test
mov
jmp
fsubl
cmp
xchg
push
std
arpl
fnstcw
mov
fcoml
dec
stc
adc
mov
cmp
xor
fmull
shrl
daa
inc
pop
mov
int
sbb
scas
adc
mov
pop
jo
push
out
cmp
add
daa
push
scas
sbb
or
sub
je
fstl
or
out
test
fldenv
scas
stos
pop
pop
push
dec
jp
stos
jl
sbb
inc
mov
xchg
addl
das
fwait
inc
xchg
outsl
jo
cltd
mov
imul
adc
fimull
push
xchg
dec
sub
imul
mov
fmuls
push
sbb
stos
jae
movsl
sub
cli
pop
daa
cmpsb
loop
cmpl
sbb
movsl
push
mov
inc
push
inc
sbb
mov
fwait
mov
mov
rolb
and
inc
xor
adc
and
imul
xor
inc
jb
or
fcomi
mov
cmp
inc
fstl
addb
iret
fs
mov
adc
insl
push
xor
frstor
lock
and
jae
fwait
push
aaa
cmp
cmp
jae
jns
insl
fsts
cmp
or
push
inc
push
jp
adc
mov
and
dec
add
pushf
andb
xor
cmp
das
mov
xchg
cmc
push
add
clc
scas
frstor
sub
cli
xchg
test
test
pop
mov
ret
mov
fwait
testl
mov
pop
decb
bound
mov
xchg
jb
jo
insl
adc
aam
dec
pop
mov
aam
add
pop
dec
inc
rclb
repnz
out
cmp
arpl
jo
out
mov
push
pop
add
inc
sub
xchg
sbbb
fcomi
int
aad
adc
stos
xchg
xor
mov
push
lcall
jne
test
mov
dec
cmp
out
lea
sub
test
xchg
mov
push
adc
push
movsl
es
pop
or
ret
add
rcrb
mov
pushf
fists
cmp
out
jge
fldenv
lea
lock
enter
stos
test
imul
cmpsl
sti
mov
mov
imul
cs
out
imul
shlb
pusha
cmp
lret
fidivl
adc
mov
jne
sbbl
lds
jb
jle
push
dec
arpl
iret
loopne
movsl
hlt
sbb
fnstcw
nop
fwait
addr16
jae
add
xor
call
cmp
mov
in
aad
arpl
xchg
xchg
xchg
pushf
mov
mov
mov
mov
stos
inc
pop
jmp
xor
adcb
cmp
dec
or
pop
cmpl
mov
fdivrl
xor
add
jnp
jle
mov
ljmp
lods
pop
ret
xchg
iret
cmpsb
jae
lea
add
dec
out
scas
push
outsb
push
push
and
sbb
ror
mov
insb
jbe
in
stos
imul
fmul
sbb
xor
ljmp
mov
add
into
xchg
jns
xor
or
mov
pop
and
das
cltd
mov
leave
or
aaa
ss
dec
inc
clc
pushf
fistl
jle
inc
cmp
xor
pop
leave
pop
lock
mov
mov
mov
fildll
js
mov
push
and
inc
out
aam
adc
jne
cmp
jno
jne
cmc
pop
out
negb
orb
iret
push
aam
lret
add
sti
inc
sbb
test
xchg
icebp
push
int
ljmp
icebp
outsl
pop
pop
imul
iret
mov
loope
sti
mov
pop
dec
test
js
js
aaa
lods
push
shrb
movsl
xchg
sbb
mov
stos
lea
jae
notb
in
into
nop
cmp
adc
jg
clc
xor
sub
push
xchg
mov
mov
ror
xor
lea
out
xor
push
imul
cmc
dec
in
sub
je
jne
mov
and
jmp
jns
push
pushf
or
jl
xor
dec
adc
lods
cmc
sub
jb
and
fdivrp
add
inc
push
test
pop
jmp
clc
lods
aaa
add
loope
test
stc
mov
inc
adc
cmpsb
stos
shll
jp
negl
sbb
add
pop
xor
sub
mov
lods
je
push
push
add
xchg
pushf
fsts
fidivrs
shrb
mov
sbb
into
push
and
push
ljmp
outsl
ss
adc
std
mov
popf
xor
inc
test
sbb
jmp
and
cld
adc
clc
sub
sub
js
call
jb
test
mov
mov
push
xchg
sarb
and
testb
sahf
stos
jbe
es
mov
jnp
and
int3
mov
xor
hlt
iret
dec
movsb
aas
cmp
cltd
test
jbe
adc
stc
mov
shl
push
pushf
pop
pop
shrl
stos
mov
mov
xor
add
mov
and
fmulp
adcl
xchg
movd
push
sub
mov
xor
pop
sbb
scas
pop
ljmp
insl
lret
ds
leave
inc
dec
dec
fcompl
pusha
sub
iret
loop
xchg
jbe
dec
push
and
test
xor
fisttpll
adc
cmc
cli
push
out
clc
cs
sub
and
and
cli
aaa
ror
imul
jno
push
add
outsl
dec
call
jmp
in
mov
negb
pushf
and
jmp
stos
inc
sbb
xor
repz
outsl
repz
fstps
popa
and
pusha
stc
out
cmpsl
sbb
jmp
adc
sbb
sbb
add
adc
push
sub
sub
sahf
movsb
dec
into
das
xor
pop
jmp
mov
push
dec
and
xchg
sbb
mov
mov
mov
test
int3
repnz
in
aad
or
lcall
sbbb
xchg
sub
arpl
pushf
scas
sbb
mov
in
stos
bound
test
adc
jle
push
adc
add
nop
and
gs
xchg
scas
xor
pop
pop
cwtl
jl
xchg
mov
mov
sub
fdivrl
mov
enter
inc
ret
aas
les
lods
bound
sbb
iret
ss
cld
jns
lods
inc
fsubrs
cmp
or
push
js
and
adc
mov
dec
mov
cmp
enter
mov
push
xchg
pop
rcrb
cmp
sbb
mov
cld
out
nop
jb
je
jmp
and
cmpsb
sbb
fidivrl
mov
lock
xor
pop
into
jbe
pushf
ss
jle
xchg
enter
pusha
out
add
fwait
outsb
mov
loope
cltd
sbb
cmp
xor
push
inc
xchg
mov
jnp
pop
xchg
add
jg
mov
add
loop
push
popf
mov
notb
stc
jns
movsl
mov
call
or
mov
inc
hlt
es
imul
push
and
pop
loopne
aad
ja
pusha
xchg
dec
sbbb
subl
push
jle
cmp
aas
cmpl
mov
clc
fwait
iret
xor
sub
and
mov
lret
in
std
dec
test
pop
lahf
inc
pushf
in
jg
dec
sbb
xchg
jbe
jo
dec
lcall
adc
test
fs
lock
or
popa
xchg
testl
dec
ds
orl
es
dec
add
dec
test
xor
jae
dec
add
mov
ret
jmp
es
arpl
and
mov
fdivs
test
add
mov
cmp
hlt
fbld
int
push
xor
rcr
test
and
xchg
mov
out
cltd
leave
cld
cmc
fildll
cmp
add
lcall
stc
pop
daa
sbb
dec
sbb
test
mov
stos
cmc
cmp
mov
ljmp
xchg
rcll
push
loope
outsb
outsb
shrl
addl
test
fiaddl
in
xchg
cmp
popf
std
xchg
or
inc
sarb
lods
xor
adc
dec
sti
aaa
icebp
in
sbb
xor
dec
lea
sbb
nop
cmp
std
movsl
pop
aam
in
addr16
insb
mov
jbe
xchg
push
sub
ret
sbb
lock
jae
adc
sbb
hlt
pop
push
hlt
jmp
pop
sar
sahf
xlat
arpl
push
jbe
push
decl
cltd
pop
cltd
roll
dec
cmpsb
dec
mov
xchg
mov
add
xor
xor
xor
jnp
mov
stos
bound
das
into
daa
int
rcl
push
das
xor
xchg
lahf
and
push
mov
or
stos
cmc
push
ret
in
xchg
jo
push
lds
sbb
pop
ret
and
mov
sub
xchg
dec
and
xlat
rorb
cmpsb
jmp
add
js
xlat
loope
mov
inc
int
push
imul
lahf
mov
cltd
fisubl
fwait
sbb
sbb
add
sbb
cmp
orl
pop
lea
cmp
and
outsl
pop
jle
or
lahf
js
cmpsb
mov
sub
cmp
pop
xor
shll
dec
mov
imul
lods
int
pop
aaa
lock
lock
xor
xchg
jbe
push
push
or
pop
cmpsb
xchg
xorb
push
mov
jne
dec
inc
out
scas
xor
cli
add
push
jg
add
jmp
pop
lds
fnstenv
adc
iret
xchg
mov
ficoml
in
insb
or
xchg
rol
cwtl
addr16
orl
mov
lret
lods
cmp
xor
ds
and
jge
aas
jb
lahf
xor
and
out
sub
jno
test
or
cwtl
imul
jbe
je
sbb
or
mov
mov
sub
mov
xchg
test
mov
scas
cli
dec
push
add
mov
mov
jne
jnp
dec
pop
sub
scas
sub
inc
pusha
jmp
add
push
fldl2t
xor
xor
into
sahf
adc
xor
mov
sti
jbe
cmp
adc
inc
or
push
out
jge
mov
adc
loopne
testl
mov
xchg
push
xchg
aaa
adc
mov
cmp
imul
push
jo
jbe
das
out
lods
push
cmp
adc
mov
sbb
push
addr16
inc
outsb
pop
call
rorl
sub
enter
adc
outsb
or
cmpsb
arpl
es
test
and
repz
add
mov
inc
dec
imul
xchg
xor
mov
test
leave
shlb
mov
sbb
push
inc
negl
out
xor
imul
and
jbe
push
inc
arpl
decb
mov
pushf
jb
xchg
decb
jb
pop
mov
je
xchg
adc
test
sub
push
cmp
sub
xchg
and
repz
jbe
out
cmp
xlat
inc
sub
sbb
jne
xor
jnp
mov
sub
inc
mov
jecxz
xor
icebp
movb
inc
dec
rorb
sbb
scas
lds
xor
in
aas
std
or
sub
xchg
in
jmp
sbb
push
lret
dec
stc
mov
addr16
insb
aad
push
scas
xchg
xor
negl
mov
adc
pop
aam
sti
and
cld
cmp
mul
pop
insl
adc
clc
jnp
mov
fisubrl
test
mov
jg
cmp
fsts
mov
fsubrl
xadd
out
loop
adc
out
push
out
lret
ds
adc
inc
inc
repnz
jmp
and
out
add
lock
popa
mov
sub
insb
repz
push
xchg
bt
pop
or
xor
push
into
int3
mulb
loopne
sbb
scas
and
push
jno
int
adcl
sbbb
fildll
fisttps
testb
call
ror
loopne
jecxz
add
add
jg
xor
push
aam
xor
mov
jle
sbb
jb
imul
movsl
mov
xlat
cmp
mov
dec
in
in
sub
add
imul
push
aas
mov
test
lahf
mov
rorl
popf
jb
and
test
rcll
stos
popf
ljmp
xor
ret
jnp
lods
xor
cmpsl
or
mov
aas
frstor
mov
cmp
in
and
xor
add
rol
jae
add
jle
pop
mov
inc
lahf
pushf
cmp
pop
push
dec
mov
cmpl
sar
pop
add
movsl
dec
mov
sarl
xchg
xor
or
mov
nop
test
addr16
jp
fstpl
insl
pop
daa
jns
push
push
add
push
mov
loopne
mov
sbb
sub
in
dec
popf
icebp
push
sub
mov
sbb
imul
push
imul
pop
dec
xchg
pop
mov
stos
lea
icebp
mov
fldenv
enter
int
aas
pop
xchg
xchg
pop
loope
pushw
popf
lea
daa
push
cmpsl
adc
fwait
mov
push
scas
cmpsl
test
in
xchg
subb
xabort
cmp
repz
sbb
jp
mov
sub
cmp
sub
mov
push
push
gs
in
ss
adcl
mov
dec
xchg
into
xor
inc
jno
les
out
decb
stos
add
mov
jns
mov
negl
jns,pt
out
je
and
lods
cli
xchg
push
xchg
out
es
loope
testb
mov
adc
fwait
xor
addb
cltd
in
sti
add
cmp
xchg
cmp
popa
lods
imul
mov
outsb
adc
inc
dec
daa
jns
xlat
ljmp
test
insb
mov
jo
dec
lock
mov
sub
xor
out
jns
cmp
push
rorl
adc
mov
mov
jge
push
bound
mov
ja
mov
std
inc
imul
aam
add
and
sub
inc
cs
dec
pop
fwait
add
ret
movsl
pop
sub
cmc
xchg
fstp
jl
movsb
dec
insb
pusha
push
pop
inc
add
xor
hlt
into
sbb
mov
loopne
call
xchg
mov
pop
xor
lcall
or
cmp
sbb
jg
xchg
xor
lock
ret
pop
adc
rolb
jae
stos
push
lahf
mov
addl
pop
jo
mov
push
mov
dec
mov
push
xor
shrb
int
enter
or
add
in
inc
sub
or
je
add
sbb
cmc
add
sahf
inc
cmp
fcoml
imul
popf
mov
jmp
icebp
rcll
mov
fwait
dec
xor
mov
lret
xchg
in
xchg
jns
jp
xchg
push
mov
cmpsb
pop
sbb
pop
out
and
mov
mov
mov
test
fbstp
pop
fcomi
daa
xlat
shrb
sbb
lea
or
test
imul
inc
pop
leave
inc
loop
adc
sbb
push
scas
frstor
push
push
lock
imulb
nop
or
xchg
xorb
mov
lds
xchg
adc
mov
repnz
jmpw
cmp
in
xor
test
leave
and
sti
lea
lds
jb
mov
xchg
out
or
cmpl
mov
xchg
mov
aaa
jmp
call
pop
mov
cmp
cmc
test
shlb
mov
jb
adc
mov
pushf
ffreep
pushf
test
stc
xor
ret
cmp
cmpb
and
cmc
xchg
lahf
adc
jge
dec
incb
xchg
std
lahf
mov
cmpsl
testl
xlat
std
pop
and
shr
mov
int3
sbb
decb
sbb
mov
fwait
push
sahf
cli
sti
pop
adc
lahf
jmp
icebp
js
xchg
pop
jp
adc
mov
cwtl
mov
push
cmpsb
xchg
scas
cmp
jecxz
xchg
ret
adc
jnp
pop
imul
loop
lret
pop
push
ja
sahf
mov
push
ret
imul
push
cmp
pushf
imul
mov
decl
adc
shrl
and
sub
test
and
mov
xchg
push
iret
mov
xor
add
and
add
mov
mov
inc
mov
mov
dec
ja
jne
or
cltd
lret
cmp
and
outsl
mov
cmp
cmpsb
popfw
daa
add
mov
jns
jecxz
push
xor
or
mov
jno
movsb
add
aas
inc
leave
ret
fildl
mov
mov
xchg
or
adc
push
loop
mov
mov
and
outsl
adc
cli
clc
adc
xchg
jns
test
ja
pop
je
adc
lods
mov
push
or
adc
push
mov
push
sub
addr16
sti
cmp
jne
xchg
insl
pushf
notb
aad
jecxz
adc
xorl
or
sbb
das
xor
pop
xchg
loop
stos
sub
cs
mov
filds
and
cmpsl
mov
mov
fs
cmp
cmpsl
out
clc
hlt
mov
cltd
ja
push
cmp
inc
mov
jp
in
clc
rclb
xchg
imul
mov
lcall
dec
fildl
ja
imul
out
icebp
push
dec
ficomps
adc
ret
imul
out
pop
push
jnp
lahf
iret
sbb
repnz
loopew
xlat
xchg
rcl
dec
aam
sbb
cmp
mov
or
movsl
out
add
and
pop
jle
test
test
push
sub
add
xor
loope
adc
pushf
subl
jge
push
add
das
inc
or
arpl
sbb
pop
insb
push
clc
inc
fwait
jnp
jmp
jmp
inc
fcomp
stc
sbb
push
sub
aad
jmp
sbb
inc
adc
gs
std
sbb
cltd
stos
add
cmp
scas
jg
jns
cwtl
popa
dec
cmp
xchg
test
adc
mov
cld
subb
fistl
loop
inc
lahf
es
icebp
mov
mov
jne
cmp
pop
fwait
aas
add
xor
cmc
xchg
push
sahf
ds
xlat
adc
jbe
lahf
push
or
mov
dec
ja
push
or
movsb
mov
jl
call
jb
movsb
mov
dec
in
mov
fld
repz
jo
mov
xor
sub
mov
loop
rcrl
jle
xor
xchg
shrl
fs
stos
dec
pop
fcmovbe
pop
ja
jle
lds
push
bound
dec
push
in
in
cmc
inc
mov
or
leave
xchg
ljmp
adc
xchg
xchg
cmp
cmpsb
jbe
fnstcw
leave
das
cmpsl
test
mov
sarl
xchg
shlb
jmp
jecxz
dec
inc
loop
mov
and
test
or
mov
fcomps
cltd
push
in
insl
test
hlt
icebp
sahf
sub
xor
fs
and
loope
mov
je
les
xor
cmc
fbstp
test
in
push
cld
jge
or
dec
xchg
iret
or
pop
or
mov
cmp
adc
xchg
mov
lret
lret
movsb
out
loopne
sbb
andb
jp
xchg
popa
pop
or
or
dec
jmp
arpl
add
fiadds
cs
inc
pop
pushf
fdivr
and
add
fs
test
mulps
xchg
mov
pop
inc
sahf
mov
loop
pusha
cli
sub
inc
int3
imul
sub
mov
cmp
stos
mov
ds
lods
or
es
insb
fs
shll
ret
in
out
mov
sub
imul
and
push
or
adcb
mov
out
stos
adc
scas
rcl
xor
sub
jmp
cmp
aam
out
and
popf
mov
jg
or
mov
xchg
ja
es
sbb
pop
arpl
cli
sti
sub
fdivl
les
loopne
push
repnz
cld
push
jecxz
pop
ret
sub
mov
in
loopne
push
loop
jg
icebp
repz
sub
mov
pop
cmp
dec
imul
mov
xchg
jb
sub
fs
clc
test
push
es
push
dec
loope
popf
inc
sub
pop
cld
in
mov
jg
xchg
das
xor
dec
inc
leave
mov
dec
add
add
xlat
movsl
push
dec
bound
jl
pop
das
adc
add
cmp
cmp
ljmp
out
push
sbbl
outsb
shll
pop
pop
outsl
test
insb
mov
adc
mov
cs
jo
sahf
jno
push
aaa
ret
mov
inc
fsts
jno
lods
mov
inc
dec
out
inc
xor
pusha
and
sbb
push
shlb
mov
cmp
aad
push
xlat
xor
fdivrl
outsl
add
fldcw
clc
sbb
and
arpl
and
test
sub
jno
data16
sbb
aas
testb
adc
rorl
pop
ret
out
lock
fcoms
stc
daa
rcll
hlt
or
pop
ss
lock
adc
popf
sub
fs
lea
ja
ja
cwtl
repnz
div
lods
fcomps
push
outsl
ret
jns,pt
xchg
adc
les
ss
aam
test
int
xchg
inc
mov
mov
outsl
ljmp
or
movsb
movsb
xor
cmp
xor
loopne
les
faddl
add
push
data16
push
stc
in
test
mov
test
in
xorl
sub
mov
jl
in
or
mov
popf
xchg
ja
lret
xchg
dec
ds
sub
jl
les
or
ret
cmc
daa
or
add
into
or
lock
in
add
sub
inc
mov
leave
inc
insb
push
lret
sarl
pusha
mov
out
int
movsb
and
mov
xchg
stos
pop
cli
jmp
popa
in
lock
and
lahf
adc
sbb
inc
stos
xor
inc
hlt
sahf
xchg
jl
cmp
push
mov
pop
adcl
fcoms
into
nop
adc
push
fidivrl
jo
push
scas
out
sbb
mov
or
rolb
addr16
inc
dec
out
and
xor
loope
mov
xchg
mov
push
pusha
faddl
mov
lret
cmpsl
rorl
push
push
insl
aam
or
rolb
and
aas
aaa
testl
lret
idivl
pusha
sub
xchg
and
or
adc
into
add
push
sbb
inc
dec
fwait
mov
inc
test
dec
mov
cmp
sbb
xchg
in
adc
fcomps
fiadds
fs
xor
stos
into
roll
or
sti
push
neg
sbb
in
cs
mov
xor
mov
imull
sbb
hlt
dec
movsl
jns
xor
pop
jbe
std
movsl
mov
cli
or
jmp
adc
ljmp
and
les
mov
rcrb
adc
daa
js
push
pop
or
mov
mov
movsl
lods
pop
pushf
cmc
cmp
daa
sbb
aam
mov
aam
inc
aaa
add
adc
in
arpl
mov
mov
outsb
ds
inc
aaa
bound
push
jmp
test
into
push
push
ret
dec
mov
mov
cmp
out
loopne
sbb
jnp
mov
adc
mov
xlat
leave
mov
ret
mov
push
jbe
out
popa
sub
jbe
test
movsl
cmpsb
lock
push
add
lods
es
adc
xchg
inc
xor
in
sub
mov
pop
inc
inc
insl
xlat
dec
test
fisubrs
inc
cmpl
out
cmp
insl
stos
pop
cmp
jns
push
add
es
push
add
sbb
sub
fwait
lds
les
inc
sub
int3
inc
xor
dec
popl
mov
scas
daa
adc
clc
js
adc
loop
out
dec
cmpsb
dec
sbb
xor
adc
jne
or
cmpsb
bound
rcrb
rorl
rorb
pop
repnz
les
cmp
xchg
aaa
sti
scas
xor
mov
adc
sbb
sub
sbb
mov
add
adc
or
movsl
incb
sbb
mov
rorb
mov
nop
fsts
clc
xchg
out
sbbb
aaa
test
arpl
icebp
xchg
inc
ljmp
adc
jge
mov
hlt
xor
jmp
in
mov
fiadds
pop
xchg
sti
mov
and
jg
adc
xor
out
push
add
cmp
mov
fcomps
add
out
push
cmpsb
mov
adc
stc
movsb
mov
testl
jo
outsb
add
or
cmp
inc
lock
enter
andl
pushf
aas
pop
xor
pop
add
test
pushl
jg
js
add
cmp
int
xchg
lods
fcoml
dec
lods
mov
sub
cli
movsb
jg
mov
pop
dec
sbb
dec
in
in
insl
push
cltd
movsb
and
sub
jno
and
nop
jbe
pop
add
das
and
iret
out
xchg
dec
add
mov
jo
xlat
nop
fcmovnu
add
xchg
push
idivl
sbb
mov
aam
movsb
adc
cmp
int
mov
xor
mov
push
cs
cmp
push
lea
jmp
dec
mov
jne
mov
loope
orb
stos
stos
scas
enter
mov
jae
cmc
xor
decl
pop
and
adc
cmpsl
jle
iret
ss
add
inc
mov
in
push
lcall
add
je
push
je
cwtl
mov
clc
ret
pop
or
xchg
mov
arpl
sub
sbb
push
mov
movsl
aas
leave
jmp
dec
lcall
outsl
or
and
imul
in
xchg
int3
js
hlt
and
addb
outsb
xor
jle
push
shlb
in
sarl
jno
add
sahf
fistl
and
xchg
jo
xchg
jle
or
push
lcall
adc
pop
cmpb
cmpsl
add
cmp
lea
enter
ror
push
loopne
jg
and
fimuls
test
repz
adcl
imul
xchg
arpl
dec
test
mov
adc
pop
push
lds
jbe
xchg
jb
popa
lahf
repz
addl
push
cld
or
jns
dec
ljmp
jmp
add
int3
inc
mov
cmp
pop
testl
mov
adc
push
mov
xlat
leave
dec
mov
js
inc
adc
xchg
or
mov
add
fiadds
cwtl
dec
dec
cmp
sub
std
mov
scas
add
popf
test
push
pop
cmp
xlat
pop
xor
lock
jmp
orps
dec
dec
mov
out
mov
enter
test
loopne
xor
jo
xchg
push
jae
lret
mov
jmp
stos
cmp
sub
movsb
fists
inc
and
cmp
jge
cmp
dec
fsub
fdivrl
push
orl
cmp
or
cmpsl
in
push
dec
cmp
mov
push
jmp
test
bound
test
sbb
adc
inc
rcrb
aam
addr16
cmp
ret
cmpsl
adc
adc
arpl
loop
sbb
jae
adc
push
aas
xchg
inc
mov
aaa
cmpsb
xor
mov
inc
jb
testl
clc
mov
ret
ljmp
cld
push
in
push
push
sbb
adc
inc
dec
jb
es
dec
pushf
jmp
jge
aad
adc
mov
jp
and
sub
sbb
fdivp
out
push
mov
aaa
test
jb
adc
xchg
inc
mov
cs
fcmovnb
sub
pop
mov
inc
in
mov
fiadds
push
stos
xlat
shlb
mov
fwait
imul
fbld
mov
adc
imul
lret
cmp
ds
mov
test
sbb
jno
pop
rolb
cmc
cli
add
inc
shlb
mov
in
xchg
xor
mov
test
pop
jmp
jl
cmp
mov
outsl
dec
adc
adc
into
stc
lcall
imul
cmp
mov
mov
pop
push
rcl
jo,pt
filds
fldt
ret
popa
ret
inc
ret
jae
pop
xor
stos
mov
lcall
in
push
inc
popa
cmp
adc
popf
xor
xchg
dec
sub
rolb
cmovl
cmp
mov
bnd
jno
jecxz
dec
lcall
xchg
nop
mov
mov
cwtl
cltd
jo
test
mov
sbb
lea
sub
or
loop
loope
imul
stc
shll
ret
repz
push
pop
pusha
sbbb
mov
jb
dec
sarb
pop
and
mov
mov
fcoml
insb
lock
or
inc
dec
jecxz
stc
int3
cli
xor
fstpl
ret
pop
mov
dec
cmp
or
int
ja
icebp
inc
divb
sub
adc
lods
loope
jnp
addr16
pop
dec
ds
sbb
and
inc
push
mov
sbb
movsb
decb
sub
dec
add
notl
xor
xor
outsl
shl
leave
cwtl
stc
adc
xchg
into
and
test
addr16
jmp
jl
dec
add
lds
push
lcall
ljmp
push
xor
hlt
gs
outsl
test
dec
dec
mov
fmuls
mov
mov
mov
push
repz
pop
test
out
clc
xor
out
and
xchg
repz
push
loopne
sbb
sbb
push
add
xchg
cmpsl
push
imul
dec
mov
xor
ljmp
ss
xor
das
incb
ja
push
fs
clc
cld
jnp
inc
loope
push
and
stos
repz
sub
imull
push
stos
rcrb
movsl
adc
cmp
and
cli
push
jecxz
and
aad
lods
mov
rorl
pop
scas
pop
mov
incl
in
cli
pop
aad
jnp
add
xlat
add
xor
mov
and
mov
xchg
pop
lea
fildl
push
mov
xor
repz
pushf
int3
pop
stos
js
and
inc
jo
mov
jo
pusha
jne
xchg
nop
and
add
pop
lods
dec
sub
stos
mov
cmp
bound
jp
lret
lahf
iret
gs
cmp
aam
jb
divb
lahf
mov
sub
push
js
inc
sti
mov
in
xchg
imul
sub
scas
insl
adc
cmp
out
mulb
cmp
mov
mov
push
xchg
mov
mov
and
and
xlat
pop
es
into
loope
mov
call
nop
out
ficompl
sub
ja
stc
xchg
sbb
jae
or
fidivs
insb
in
inc
aam
dec
imul
aad
mov
into
pop
pop
stc
aas
dec
pop
lds
or
xchg
inc
int
mov
mov
lret
and
jle
mov
popf
sbb
daa
push
jno
xor
scas
leave
jecxz
sbb
inc
rorl
and
dec
adc
dec
popa
push
cld
or
sbb
add
aas
fcoms
addb
ljmp
shrl
clc
mov
aaa
es
mov
stos
fistps
into
xchg
scas
jo
pop
mov
test
jb
mov
jge
push
repz
stos
lds
mov
push
fs
inc
and
cmp
add
test
xor
inc
into
inc
fdivl
ret
bound
cmc
adc
adc
cmp
dec
push
mov
push
mov
jnp
sub
sub
jno
movsb
cmpsl
push
rolb
dec
xchg
rorb
mov
ds
inc
ret
xchg
or
test
push
repnz
mov
sub
enter
lock
sub
fcmovu
xchg
stos
outsb
xchg
inc
aam
outsl
iret
push
call
icebp
test
cmp
outsl
shll
lret
gs
mov
ror
cwtl
fmull
pop
roll
pop
repnz
in
mov
xchg
jne
pop
jge
jns
cmp
fcoms
mov
jb
lds
mov
sbb
and
sub
pop
sub
adc
adc
sbb
adc
or
scas
mov
mov
push
mov
orl
xchg
shl
mov
xchg
push
out
or
mov
jp
mov
mov
pop
mov
and
jo
lret
rcrl
ds
daa
sbb
in
jbe
leave
test
stos
mov
dec
cld
or
push
adc
and
out
and
dec
fsts
arpl
inc
jb
cli
mov
ja
in
push
shrl
shlb
jle
add
scas
xor
faddl
in
movsl
mov
lds
mov
mov
inc
mov
cmp
cli
inc
xor
mov
push
sbb
fidivl
dec
call
cmp
cmpsb
jae
pop
lcall
lea
cmp
xchg
pop
xchg
cli
pop
mov
push
push
jne
addr16
cmp
subl
push
push
hlt
adc
into
dec
jmp
les
mov
in
stc
pop
and
push
scas
leave
cmp
ljmp
popl
xchg
jle
mov
inc
shrl
fidivrs
addb
push
or
js
cs
arpl
stc
mov
xor
addr16
jge
push
arpl
adc
andl
jp
jle
dec
cmp
rcll
pop
fmull
pop
lahf
push
pop
mov
sbb
adc
inc
inc
mov
mov
adc
xor
push
repnz
add
push
add
cmp
popf
data16
repnz
mov
idivl
push
adc
jo
adc
adc
push
push
insl
xchg
test
sub
mov
mov
mov
pop
pop
xor
jns
push
mov
int3
pop
inc
push
les
push
dec
mov
jo
aad
add
mov
imul
sub
adc
and
dec
jbe
addr16
std
xlat
mov
xchg
dec
inc
cmp
in
cld
mov
sbb
stos
mov
mov
hlt
mov
push
scas
lcall
out
test
std
push
sbb
adc
out
lcall
outsb
test
std
or
outsb
adc
cmp
add
inc
ss
or
stos
lret
mov
mov
mov
arpl
mov
cs
hlt
in
cld
xchg
jbe
pop
mov
push
icebp
pushf
sti
aas
push
aam
mov
clc
pop
dec
mov
mov
push
rol
sbb
dec
xchg
add
fistps
xchg
lret
xor
inc
pop
imul
aad
daa
jp
push
mov
dec
pushf
mov
out
adc
pop
xchg
inc
dec
pop
push
pop
add
adc
sbb
dec
sub
les
push
ret
sti
add
in
jo
mov
je
in
inc
ss
repnz
shll
ljmp
ljmp
adc
lods
mov
push
ds
pop
add
in
insl
es
scas
pushf
jb
es
cmpsl
push
repnz
cmp
xchg
jne
fisttps
cmp
arpl
or
js
js
lock
xor
cltd
sahf
cld
xchg
sbb
mov
add
outsl
jb
dec
lds
arpl
mov
imul
loope
nop
mov
cmp
add
fldcw
push
or
aam
mov
fs
mov
jo
lahf
mov
jge
inc
cli
mov
jo
mov
mov
cmp
lahf
imul
lods
cli
mov
jnp
andb
lods
mov
xor
test
push
xchg
rcrb
mov
dec
inc
rcrb
repnz
lea
clc
es
fwait
xor
inc
add
mov
bound
stos
cmp
inc
cmpsl
repz
lods
repnz
adc
aam
xor
roll
or
fsin
mov
pop
mov
fsubl
pusha
clc
jns
into
into
mov
cmp
fdivs
ds
subl
call
inc
ds
cmpsl
adc
mov
mov
adc
inc
pushf
sbb
shrb
or
cs
cmpsl
mov
ss
pop
mov
outsl
dec
aam
mov
test
mov
sbb
pop
mov
jp
ja
lcall
cmpsl
lock
cmpb
nop
push
std
inc
aad
daa
mov
xchg
xor
lds
cmp
pop
mov
dec
lock
sbb
jbe
xchg
push
cli
std
dec
bound
out
ficoms
xchg
into
leave
ljmp
push
dec
les
push
push
bound
mov
cmp
jne
xchg
adc
pop
cmp
xchg
insl
loopne
sbb
adc
mov
xor
neg
lods
xor
insl
out
pop
int3
mov
sub
mov
push
ror
mov
push
stos
mov
jae
xor
jmp
fistpl
ja
fimuls
jnp
rorb
sbb
jnp
dec
mov
sub
imul
je
orl
xor
outsl
int3
js
hlt
dec
pop
cltd
out
push
jnp
mov
pop
iret
in
push
fnstsw
pop
or
test
adcl
lock
xor
and
sub
movsl
out
sbb
cmpxchg
or
scas
inc
xchg
test
aas
or
jne
mov
pop
aas
stc
inc
xor
das
pop
test
push
push
pop
sbb
out
insl
xchg
loopne
xchg
xchg
movsl
cmpsb
pop
seto
scas
rolb
sbb
insb
popa
cltd
test
mov
aas
xchg
icebp
dec
je
aad
fmuls
jnp
push
in
fstp
mov
mov
imul
fcoms
jmp
sti
push
push
inc
or
xor
ljmp
xchg
outsb
push
arpl
sub
and
clc
out
test
xor
arpl
gs
adc
in
mov
leave
push
adc
sub
and
jg
incb
add
leave
rcll
test
es
lahf
jle
inc
jl
popf
jg
rcl
ja
or
jae
leave
inc
lret
jae
mov
pop
sub
iret
lock
movsb
lcall
bound
or
fwait
lahf
jbe
xor
jecxz
ja
adc
cwtl
mov
pusha
jge
dec
mov
insl
test
or
push
jp
movsl
xchg
leave
inc
jb
cmpsl
in
scas
sub
jecxz
pop
jecxz
add
push
pop
xchg
testb
xchg
adc
push
inc
enter
sub
mov
inc
and
mov
pop
aas
cmp
sub
shr
jg
test
sbb
fldt
sti
pop
es
lahf
and
nop
and
jne
xor
jmp
outsb
xchg
lcall
ficomps
dec
and
jbe
jb
push
cmpsl
aam
xchg
xor
inc
adc
adc
pop
sub
loope
sub
push
and
xor
push
hlt
mov
adc
stc
mov
cmpsl
nop
ss
outsb
mov
cmp
dec
push
mov
mov
addr16
es
adc
inc
adc
popa
adc
lret
leave
popf
fwait
pop
mov
lods
adc
sub
push
xchg
mov
dec
cmp
movsb
scas
clc
and
cmp
mov
addr16
jno
das
leave
scas
adc
int3
es
mov
cmpsb
test
test
out
pop
cmp
mov
add
jbe
push
pop
movsb
cmpsl
xchg
and
test
adc
jmp
mov
movsb
addr16
push
ret
shl
ret
clc
inc
jecxz
mov
jmp
and
sub
add
push
xor
push
mov
rclb
mov
rorb
xchg
daa
inc
aaa
fstpt
jnp
loopne
inc
mov
inc
inc
ds
fisubrs
xor
xchg
jo
fsubrs
orl
sbb
lcall
cmp
into
push
jno
add
mov
cmpb
mov
jge
pop
sub
pop
or
fstpl
into
jmp
sbb
jno
cmpb
cmpsb
sar
ret
jecxz
mov
xchg
pop
xor
std
imulb
mov
add
clc
fimuls
aam
pop
pop
out
pop
in
adc
cmp
repz
in
xor
jbe
xlat
in
cmp
or
js
jae
call
or
fwait
in
lahf
push
push
mov
inc
fildll
rol
ljmp
dec
xor
fwait
xchg
pop
clc
ds
mov
pop
sbb
pusha
sbb
mov
arpl
mov
mov
push
push
add
adc
out
cmp
push
lea
xchg
add
mov
or
jns
dec
sbb
out
addr16
adc
add
stc
push
cwtl
ror
push
int
dec
jmp
inc
sbb
cmp
in
cmpsb
sub
mov
jg
push
mov
xor
sub
mov
sbbb
ret
dec
pushf
mov
loop
movsb
out
rcl
aaa
push
xor
cmp
in
lds
or
push
push
repnz
jmp
push
and
loop
loopne
jae
push
das
inc
adc
pop
xor
mov
js
sti
push
inc
int3
xchg
popf
imul
mov
out
or
loop
mov
jecxz
cmpsb
and
cmpl
jp
aam
sub
imul
sub
dec
inc
xchg
pop
mov
inc
inc
push
xlat
fwait
add
and
into
sbb
inc
adc
lret
inc
int3
or
cli
add
loop
mov
insb
fmull
fs
loop
mov
loop
jb
push
cmpsl
xchg
push
cltd
stos
insl
mov
xor
in
sbb
jl
mov
nop
jo
jo
jo
loope
jmp
sbb
in
cmp
std
jle
repz
fidivrs
xchg
add
leave
jg
out
cs
or
and
shll
inc
int
mov
and
add
jecxz
loope
and
sub
jg
push
loope
mov
pop
or
dec
outsl
mov
cmp
add
mov
fs
fisubrl
imul
lcall
in
jp
orl
ficoml
xchg
mov
add
mov
mov
loope
mov
mov
and
aad
jnp
push
popa
jns
aam
stos
adc
sub
pop
dec
jmp
jne
sub
leave
or
xchg
test
out
add
xchg
mov
mov
push
cmp
jae
mov
ficoml
sahf
rcrl
ret
shl
lock
adc
aaa
shl
in
fstpt
push
mov
jmp
xor
mov
inc
int
inc
mov
sbb
push
pusha
mov
sub
fisubrl
cmp
pop
ret
push
arpl
inc
mov
mov
push
std
pushf
aaa
cmp
xor
lcall
cltd
pop
lret
insl
pop
lea
and
push
mov
insl
xorl
call
pop
mov
and
es
cmp
fcoms
jge
inc
out
cmp
imul
xor
mov
int
mov
push
mov
fildll
imul
pop
dec
mov
dec
or
adc
jmp
mov
negl
jno
sahf
fcom
jb
mov
add
shl
pop
push
popa
outsl
pop
test
xchg
lods
shrl
sub
jne
push
dec
jne
mov
or
xor
test
mov
scas
movsl
outsb
push
iret
jmp
mov
dec
push
or
std
movd
incb
leave
mov
inc
inc
add
jle
pop
jl
mov
or
jmp
cmpsb
pop
sbb
xchg
ja,pt
fsubl
mov
inc
out
testl
xor
or
and
pop
adc
cs
cli
out
mov
mov
je
push
jecxz
sbb
sub
das
int3
xchg
sti
inc
push
loopne
orl
iret
lods
aaa
fstps
into
push
icebp
mov
aas
icebp
mov
push
js
cmp
ret
xor
xchg
fmulp
popf
lods
shll
mov
cmp
push
xor
xchg
in
or
jb
mov
aad
loopne
sub
std
cmpsb
sub
pop
push
cmp
orl
xchg
out
mov
mov
test
stos
jmp
cld
incl
dec
insl
in
pop
lret
repz
dec
push
push
xchg
pop
inc
ret
adcb
push
imul
dec
out
pop
icebp
loope
sti
jb
push
push
rolb
and
jnp
lds
aad
in
dec
cmpsl
outsb
adc
jl
movsb
loopne
lods
jo
imul
cmp
xchg
add
dec
sahf
adc
shrb
add
and
mov
loopne
and
or
mov
push
shrl
rcrl
ljmp
push
mov
cld
outsl
dec
outsl
push
hlt
cmc
mov
mov
jp
cmp
js
mov
lcall
test
sbb
lds
cmp
inc
and
pop
ret
or
mov
jbe
rol
jb
add
sar
add
in
mov
jg
test
dec
mov
icebp
sbb
adc
mov
inc
cwtl
popa
pop
loope
scas
out
lea
push
fisubrs
fstpt
adc
and
mov
data16
out
int3
push
jp
mov
push
mov
bound
bound
repz
pusha
jo
add
cmc
sub
scas
mov
aam
push
mov
outsb
mov
sbb
lods
push
cwtl
push
inc
push
sti
fwait
sbb
outsb
mov
rorb
stos
dec
repnz
out
push
addr16
mov
stos
in
popf
push
aas
dec
loope
mov
lods
gs
call
fwait
loopne
mov
inc
xchg
mov
inc
or
notb
das
mov
adc
fdivrs
notl
inc
push
fidivrl
cmc
lea
mov
loopne
xchg
push
cmp
mov
mov
pop
enter
mov
mov
faddl
pusha
dec
in
inc
adc
out
cwtl
dec
pop
dec
je
aas
pop
sbb
out
test
add
aad
mov
dec
push
sub
out
adc
mov
mov
rorl
les
xor
aas
test
in
testl
fwait
dec
sbb
sub
cmpsl
jg
or
mov
into
and
and
push
adc
adcb
jo
rol
pop
in
xchg
pop
inc
xor
jl
xor
in
addr16
xchg
cltd
mov
mov
adc
js
iret
cmpsl
xor
out
div
je
xchg
push
or
fisubrs
rolb
nop
js
mov
inc
fisubrs
dec
test
push
iret
or
jnp
clc
jnp
adc
mov
sub
push
xchg
mov
incl
dec
lret
test
fwait
xchg
dec
xor
cmp
aaa
pop
mov
daa
fwait
sahf
inc
pop
pop
sbb
or
push
bound
stos
imul
inc
loopne
dec
or
jb
gs
mov
xchg
es
in
into
lret
movsl
mov
or
push
or
mov
enter
loope
call
push
ljmp
inc
mov
mov
pop
sahf
sub
mov
out
fisubs
sbbl
out
sub
jmp
cmp
dec
enter
popa
xor
or
movsl
fs
jae
sahf
mov
cmp
das
ss
pusha
fistpl
adc
cmpsl
in
jle
int
pop
push
sub
in
mov
testl
test
jmp
cmp
jo
dec
mov
dec
out
xchg
add
enter
aas
adc
xlat
jle
popa
push
fildll
cmpsl
xor
xor
out
nop
dec
out
data16
xchg
dec
adc
mov
gs
mov
xchg
pushl
bound
and
push
jne,pt
mov
pop
test
fidivs
je
imul
stc
pusha
add
lahf
mov
into
fucomi
not
movsl
insl
adc
sbb
push
jg
ss
cmpsb
ficomps
sbb
cli
int
xchg
xchg
in
mov
inc
jae
jbe
push
adc
or
outsl
insb
jmp
cmp
mov
sbb
jge
mov
mov
jg
pop
arpl
cli
jge
add
mov
jne
in
or
sub
pop
pop
lock
xlat
push
cmpb
pop
pusha
mov
mov
inc
dec
pop
adc
insb
lods
pop
fwait
dec
push
xlat
mov
popa
mov
or
push
dec
pusha
mov
xchg
push
lcall
setge
mov
pop
rorl
mov
add
into
sbb
inc
mov
jb
inc
mov
out
repz
fdivrs
dec
iret
setge
in
je
jg
cltd
sbb
fldenv
jnp
lahf
xchg
sbb
adc
ret
outsl
repz
repz
or
xchg
push
ss
jae
sub
shr
icebp
cmp
imul
shr
jno
dec
rcrl
adc
stos
ljmp
xor
inc
inc
daa
dec
aam
scas
inc
jae
or
jg
ret
xlat
dec
push
sub
sub
gs
roll
xchg
cwtl
rclb
add
nop
or
add
fldcw
jmp
clc
or
jno
cs
mov
subl
loope
inc
fistl
or
adc
mov
or
imul
sahf
jbe
sub
pop
outsl
inc
test
xchg
mov
fisubrs
fiaddl
hlt
dec
xor
push
jne
adc
mov
pop
push
or
push
add
sbb
lock
fstps
push
add
in
and
sub
stos
or
mov
cmp
out
xchg
jp
xor
add
and
jae
jbe
flds
add
and
sti
mov
and
add
mov
popf
outsl
jmp
cmc
fcmovne
jae
clc
jo
jb
lcall
shll
ja
jns
dec
push
gs
vhaddps
mov
rorl
mov
insl
pop
idivb
orl
mov
loope
inc
leave
pop
jp
inc
scas
push
insb
sub
cmpsb
fldcw
jge
sub
adc
shl
sub
mov
fsubl
or
mov
mov
gs
nop
mov
adc
adc
sub
add
sub
pop
decl
jl
lret
mov
jno
jbe
ss
pop
inc
sarl
cld
mov
fsubrl
vpsubd
stos
rcl
mov
sbb
or
loop
shlb
nop
sbb
mov
add
cld
pop
pop
push
dec
pop
idivb
in
repnz
int3
lea
adc
jg
push
nop
push
pushf
pusha
xor
fisttpll
gs
dec
lret
stos
sbb
es
xor
jmp
mov
xor
into
mov
insl
mov
ja
pushf
or
adc
sbbl
lds
ret
xchg
mov
ljmp
daa
test
push
cmpsl
int
jmp
xlat
jmp
pop
out
pop
and
data16
out
mov
mov
sbb
popl
xor
ss
outsb
pop
xchg
sub
rcr
push
inc
push
aaa
mov
test
aaa
pop
test
jmp
das
scas
pop
dec
lcall
fbld
inc
mov
loop
or
push
fdivs
cli
test
out
ret
jle
add
pop
dec
or
xor
inc
clc
push
xchg
adc
jl
cmp
or
push
cmpsb
je
fiaddl
fst
mov
call
jmp
popf
lahf
adcl
xor
rorl
mov
gs
sti
dec
and
lods
addb
push
adc
mov
dec
int3
sub
push
out
in
mov
nop
pop
pop
mov
test
fisttpl
mov
dec
orl
stos
fimull
shrb
pop
sub
cs
into
jmp
bnd
call
loop
fistps
push
mov
das
shll
movl
jae
jb
dec
hlt
mov
cmpsb
mov
out
data16
mov
sub
loope
ljmp
jo
fnstsw
mov
sub
add
inc
out
xchg
xlat
stc
test
aaa
and
aaa
mov
lret
das
imul
movsl
into
ficompl
lret
ficoml
jecxz
mov
into
pusha
pop
test
mov
sub
ror
dec
inc
xchg
push
sub
cltd
vpaddd
jnp
mov
ljmp
mov
ja
sti
scas
dec
aam
lods
cmp
movsb
adc
jp
mov
mov
popa
outsb
mov
and
dec
stos
aas
lods
scas
fidivs
mov
push
cmp
xor
test
push
jl
movsl
shll
ds
rcrl
mov
out
add
sahf
jno
mov
idivb
outsb
scas
fsubrp
adc
lods
jge
push
mov
mov
dec
call
adc
aad
lea
iret
push
sbb
adc
cs
xlat
pop
pop
jbe
cmp
add
sbb
inc
outsl
xchg
pop
ja
ss
xor
xchg
in
cli
data16
les
pop
and
out
enter
fs
imul
stc
push
mov
adc
mov
aad
and
xchg
jg
jbe
jns
mov
add
or
mov
mov
xchg
xchg
std
repnz
scas
int
aam
cmp
ljmp
movsb
mov
jl
mov
sbb
pop
mov
jp
mov
lods
xor
in
dec
lods
loopne
lods
orb
push
mov
pop
pop
push
inc
sub
in
orl
sbbb
jae
ds
push
aas
mov
mov
or
pop
movsb
out
pop
cmp
xor
insb
add
loop
fisubrs
jns
adc
rcr
jb,pn
xchg
fistps
pop
in
push
pop
pop
in
enter
mov
iret
cli
jns
ret
adc
les
xor
adc
adc
pop
fwait
loop
cmp
dec
mov
xchg
outsl
test
mov
rcll
fidivs
mov
mov
gs
sub
mov
mov
pushf
arpl
lahf
mov
mov
jle
add
enter
xor
movsl
xchg
and
or
xchg
data16
fisttpl
icebp
jno
cltd
jb
ljmp
out
inc
insl
inc
add
cmp
jl
int
in
jns
stc
loop
jecxz
and
aad
add
inc
pusha
xchg
loopne
sbb
andb
in
lret
and
in
add
sahf
add
jbe
mov
jge
pop
adc
lods
lods
dec
hlt
ljmp
and
and
imul
flds
dec
dec
mov
test
fldt
mov
inc
test
mov
push
clc
push
mov
or
pop
dec
mov
in
sbb
jle
inc
xor
test
repz
mov
into
xchg
addb
pop
jae
mov
ret
es
je
outsb
pop
aam
lds
rcl
jbe
cwtl
mov
and
add
inc
and
adc
cmpl
lea
fdivrs
jns
jmp
mov
inc
repnz
xchg
xchg
stos
adc
shl
mov
and
inc
mov
pop
mov
out
cmpsb
lods
xchg
inc
out
mov
mov
dec
out
dec
lods
mov
push
dec
stos
vpaddsw
cli
push
orl
in
pop
rcr
pop
lahf
sarl
hlt
push
and
jp
lock
lcall
iret
inc
push
jecxz
stos
fidivs
faddl
test
sub
add
in
stos
mov
hlt
jl
adc
push
ljmp
bound
repnz
xchg
and
push
pop
add
push
mov
fdiv
sub
into
adc
inc
fs
rcl
jno
dec
mov
and
push
mov
int3
cmp
pop
inc
dec
mov
jl
stos
cmp
cmp
clc
sub
fstpt
mov
xor
cltd
ljmp
cmpsl
inc
cs
mov
mov
lds
mov
mov
pop
inc
xor
imul
ficompl
cmpsl
add
leave
outsl
adc
nop
inc
fs
pop
pop
push
mov
test
inc
xchg
imul
dec
loopne
dec
cmp
addr16
adcb
aam
outsb
or
call
fimuls
mov
insl
cmp
dec
mov
inc
inc
inc
and
cmpsb
mov
sbb
xchg
jmp
fwait
jns
xor
dec
test
jle
mov
mov
push
rol
aaa
xchg
repz
aad
inc
jecxz
adc
loopne
push
push
movsl
fldenv
pop
fsubrl
sub
popa
dec
subb
adc
sub
xor
stos
test
icebp
shrl
mov
mov
pop
inc
sbb
fwait
lock
mov
rcll
lahf
test
movsl
add
out
sbb
jle
les
aad
add
mov
test
mov
dec
ss
sbb
mov
out
jle
imul
xor
push
xchg
mov
mov
sub
imul
out
push
test
mov
out
outsb
mov
bound
cltd
push
dec
lds
mov
xor
sbb
repz
shlb
xchg
stos
push
mov
lret
mov
sbb
xchg
dec
test
imul
and
jp
je
call
aad
repnz
frstor
imul
imul
mov
dec
and
jmp
sbb
cmc
andl
mov
cmp
or
xchg
or
out
jbe
out
ficoml
inc
add
add
lds
or
out
addr16
fmuls
lcall
sub
lcall
dec
iret
xor
loopew
rolb
pop
pop
mov
push
push
dec
repnz
ds
aas
sbb
pop
xchg
movsl
popa
xor
mov
scas
mov
jno
jl
inc
and
or
lahf
aas
add
jb
mov
out
ds
sub
mulb
rorb
cmpsl
or
inc
inc
jmp
icebp
or
jnp
fcoms
sbb
adc
nop
xchg
lock
cmpsl
hlt
js
mov
call
sub
shl
jp
hlt
popf
dec
mov
pop
inc
jecxz
mov
inc
fimull
pop
test
popf
and
cmp
rep
add
mov
lcall
push
out
or
push
int
rclb
aad
shr
sub
sbb
stc
xchg
pop
loop
xchg
in
pushl
fmuls
inc
fabs
mov
or
mull
insl
push
fwait
int3
leave
mov
adc
inc
scas
push
pop
arpl
aad
lcall
hlt
cwtl
cmp
push
decl
test
loope
jne
mov
das
mov
sub
xchg
aas
mov
test
int
das
out
cli
jbe
in
sbb
aam
inc
notl
cmp
xchg
into
mov
push
xchg
cmp
loop
pop
push
adc
es
jmp
or
and
shrl
ret
jmp
aam
add
mov
call
sbb
cmp
insb
and
cmp
fwait
or
jg
and
pop
sbb
stos
cli
inc
xchg
pusha
push
push
adc
ljmp
insb
shlb
imul
insl
and
hlt
insb
dec
mov
outsl
mov
out
pop
sarb
xor
outsb
push
stc
adc
loopne
and
je
jp
push
js
mov
leave
add
les
jg
mov
int
jmp
ljmp
xchg
mov
xchg
xor
cmp
call
dec
mov
rol
jnp
dec
adc
add
sarb
inc
fnstsw
stc
jecxz
test
nop
inc
cmp
sbb
cld
iret
xor
hlt
jp
scas
cmp
sahf
les
cmp
add
push
dec
lret
sti
push
cmp
and
ss
mov
mov
dec
movsb
loope
imul
mov
das
sarb
imul
pop
or
mov
adc
and
test
xchg
cmp
mov
or
les
notb
sub
cmp
xchg
js
push
add
fidivs
ss
sub
popf
push
sbb
imulb
jg
xorb
fucomp
mov
imul
mov
pusha
jmp
inc
pusha
popl
in
aas
stos
and
int
fidivrl
aas
es
lods
sbb
jle
cltd
dec
push
test
in
cmp
inc
mov
sbb
xchg
mov
add
push
pop
cmp
mov
or
cli
cld
mov
sbb
mov
sbb
out
mov
int3
inc
add
pop
jb
rolb
jge
in
push
jl
outsb
rcll
sbb
inc
xor
and
outsl
dec
push
pusha
into
insb
adc
inc
and
pop
clc
adc
mov
out
and
jo
lock
pop
xor
xlat
sub
ret
imul
cmp
pusha
enter
push
xchg
into
ret
mov
xor
cmp
popa
push
shrl
or
dec
lcall
mov
insl
cmp
push
sub
mov
or
inc
or
xchg
imul
sbb
inc
les
imull
sti
dec
mov
cld
xor
insl
jb
scas
out
cmp
leave
jns
sarb
imul
sub
std
mov
xor
xchg
dec
sbb
mov
dec
addl
pop
out
test
pop
fstpt
rorb
jg
int3
jle
lea
cs
rclb
cmp
dec
mov
dec
and
ret
in
add
addr16
scas
xor
xor
insl
adcb
mov
call
jl
mov
mov
sub
iret
movsb
sbb
orl
push
into
cmpsl
or
push
jo
js
das
cmp
inc
xchg
add
fucomi
mov
mov
hlt
fbstp
lods
push
mov
repz
hlt
addb
push
jb
pop
lods
lret
jae
add
shll
or
mov
leave
pop
or
repnz
and
ljmp
inc
jnp
jp
lcall
push
addr16
stos
cmp
dec
mov
dec
int3
test
test
testb
or
int3
fwait
loope
int3
movsl
sbb
lds
jl
je
and
jo
cmpsl
add
inc
out
mov
es
jmp
nop
icebp
cmpsl
sub
std
sub
aas
jno
dec
xchg
and
push
mov
sbb
xor
adc
xchg
ss
xchg
cmp
popa
push
mov
aas
stos
das
leave
cwtl
push
jns
fcmove
bound
mov
mov
and
inc
int3
ret
push
mov
repz
mov
adc
lds
int3
jne
adc
pusha
jge
adc
mov
dec
xchg
fiadds
test
pop
xor
es
adc
in
mov
add
push
push
inc
adc
xchg
cli
jbe
sub
lea
flds
mov
sti
mov
xor
pop
jne
adc
sub
sarl
and
fwait
shlb
sub
mov
push
mov
scas
fldcw
notb
jnp
arpl
push
cmp
stos
int
sub
fiaddl
mov
pop
dec
sub
orl
inc
cmp
scas
ret
cmc
ret
pop
and
aam
pop
or
aam
pop
and
mov
arpl
xor
out
imul
fdivs
sub
bound
push
cs
mov
and
das
aam
mov
mov
pop
out
cltd
xor
xchg
or
sahf
es
jo
and
pop
jp
and
out
mov
jne
aas
adc
stos
ja
sahf
and
jmp
push
sub
lea
jo
pop
aas
xchg
das
inc
sbb
stos
jecxz
aas
cwtl
push
mov
ljmp
fstl
sahf
or
cltd
pop
xor
ret
sbb
and
scas
lcall
sbb
adc
cmp
inc
fwait
mov
jl
push
aam
cltd
jle
add
in
js
pusha
sbbl
call
aad
cmpsb
xchg
pop
jo
icebp
outsl
scas
inc
xchg
xchg
mov
cld
insb
dec
mov
jg
inc
mov
jmp
test
jbe
hlt
outsl
cmp
and
dec
xor
mov
push
sub
adc
push
xor
sub
mov
repz
and
sbb
imul
push
xlat
js
adc
in
xchg
imul
lcall
pop
mov
and
jp
imul
shlb
ss
ret
hlt
xor
sti
cmp
push
jno
rorb
push
and
inc
sub
or
scas
adc
adc
jns
test
les
or
cmp
iret
xchg
and
mov
sbb
xchg
fbld
sbb
daa
daa
imul
out
int3
es
pusha
push
xchg
jnp
lods
loopne
mov
repz
jecxz
sub
adc
xor
ja
popa
mulb
fiaddl
imul
xchg
dec
push
jg
mov
in
fsubrl
movsb
call
adc
dec
push
and
dec
push
jno
cmp
xchg
stos
xor
sbb
cmp
inc
pop
fdiv
cmp
aam
jns
sahf
idivb
add
sbb
stos
xchg
mov
sbbl
or
outsb
xchg
xlat
or
or
ret
or
out
pop
mov
jns
dec
sub
add
cmp
push
jae
mov
shll
cwtl
push
jae
iret
imul
or
nop
orb
jae
pop
mov
mov
pop
out
jmp
outsl
or
jp
push
fildl
call
xchg
push
aas
pop
adc
push
iret
mov
or
enter
jl
xchg
int
pusha
mov
push
addb
cmpsl
js
mov
push
test
inc
outsb
pushf
stos
adc
lret
lds
sub
shll
ljmp
movsl
push
jl
sub
jg
cs
rol
iretw
xchg
mov
lahf
out
dec
aam
lahf
adc
mov
les
sbb
imul
cmp
mov
dec
orb
xor
iret
pop
and
das
movsl
mov
and
pop
and
jecxz
inc
mov
fwait
dec
loopne
push
inc
mov
lods
inc
ds
xchg
mov
or
or
out
lret
cmp
mov
or
jo
xor
stos
xlat
std
xchg
popa
add
andl
inc
out
adc
jno
jp
add
pop
sub
xchg
aam
loope
pop
imul
pop
sbbb
or
loop
aaa
test
push
jae
shlb
in
repnz
dec
lods
push
xlat
fnsave
add
out
loope
adc
int3
xor
jmp
cmp
cwtl
pusha
sub
add
xor
sub
mov
xchg
mov
jg
test
add
xor
lcall
adc
or
ja
lea
fidivs
lahf
add
cmp
outsb
scas
xchg
xchg
cmp
je
mov
stos
shrl
pop
xor
inc
jnp
fldcw
adc
cmp
xchg
fmuls
rclb
sti
jnp
call
or
mov
jbe
pop
add
addr16
push
testb
dec
lea
jle
cmc
mov
rorl
loopne
fimull
psrld
test
push
repz
shlb
or
pop
mov
test
jae
push
popf
jns
sub
push
cmp
ret
xchg
pushf
mov
fsubrl
dec
sub
push
bound
xor
adc
adc
xor
mov
test
cmp
fstl
pop
addl
add
fs
xlat
xlat
and
mov
mov
cmp
iret
mov
cmc
or
pushf
gs
cmpsl
jl
rcll
dec
out
cmp
cmp
clc
jno
sbb
and
add
jge
sbb
enter
push
jle
jl
mov
scas
pop
cmp
and
dec
aam
xor
mov
fwait
add
and
dec
jnp
xorb
push
or
mov
test
test
jp
mov
push
pop
rcrb
insl
sub
push
mov
push
andl
cli
cld
sbb
push
fwait
xor
xchg
lea
les
cmp
lahf
imul
fwait
ss
or
call
int
dec
outsl
ficoml
cmp
roll
outsl
aad
push
mov
aam
test
push
jg
mov
xchg
mov
inc
mov
fadd
sub
mov
inc
xchg
inc
mov
and
lret
inc
jns
mov
or
jmp
xor
xchg
xchg
pop
sbb
push
test
xchg
mov
sub
mov
pop
sub
aas
sub
jmp
cmp
lcall
les
jo
sub
add
clc
jo
ficoml
sub
imul
cli
xchg
outsb
mov
inc
int
imul
in
xchg
push
dec
sahf
test
sub
mov
mov
mov
js
popa
pop
cli
cld
add
cmc
xchg
adc
or
mov
push
mov
lcall
fdivl
cmp
push
shll
sub
dec
pop
mov
add
mov
data16
jne
fcmovnbe
sub
in
call
sbb
movsl
push
dec
xchg
loope
andl
ss
es
fldenv
out
dec
pop
jge
mov
out
inc
inc
and
xor
adc
sbb
pop
jno
xor
addr16
gs
test
ds
mov
mov
loopne
sbb
inc
pop
xchg
mov
adc
stos
sub
roll
xchg
jne
dec
jb
add
ja
cwtl
jo
loopne
or
xor
mov
in
loop
jecxz
into
roll
mov
rclb
iret
adc
dec
inc
pop
dec
leave
push
iret
call
or
ljmp
jnp
lret
jns
pop
inc
push
push
jge
addr16
jo
out
sub
xor
cli
iret
or
xor
xchg
test
adc
clc
daa
pusha
fwait
les
into
jno
rclb
repz
sbb
mov
les
daa
xor
cmpsl
cmp
jmp
insl
iret
arpl
rolb
sbb
pop
xor
cld
mov
mov
testb
xchg
cld
pusha
jo
mov
inc
ja
or
jo
aas
ds
inc
insl
mov
int3
push
mov
fwait
jmp
inc
mov
loop
lcall
inc
or
movl
nop
jae
test
ret
xchg
dec
mov
fdivrp
out
inc
adc
je
xchg
xchg
xlat
aad
dec
push
or
mov
addr16
sti
xlat
out
dec
sete
jmp
lcall
pop
and
cmc
cmp
jb
aad
int
xchg
mov
ja
mov
ffree
or
int
or
pop
add
in
xor
insb
idiv
dec
dec
ret
je
lret
insl
mov
inc
fsub
fstpt
int3
xor
adc
fldl
call
rcrl
fists
lahf
mov
test
pop
leave
cmp
ret
mov
adc
andb
add
in
stc
or
add
cmc
dec
mov
sbbb
dec
mov
mov
pop
leave
sub
sbb
sahf
and
jp
out
popa
movsb
push
sbb
je
sub
sbb
ss
push
lret
mov
cmp
add
pop
aad
movsb
jns
cmc
cltd
call
out
fmuls
call
mov
jns
sub
pop
jl
mov
jmp
fistl
out
cld
test
lret
mov
inc
mov
mov
test
daa
stc
aam
cltd
or
mov
out
insl
test
mov
adc
sbb
cltd
sub
mov
jbe
sbb
setns
testb
lds
ljmp
pop
jbe
pop
repnz
sbb
jno
sahf
cld
mov
inc
add
sub
mov
loope
sub
outsb
dec
imul
inc
add
std
mov
pop
push
mov
leave
stos
outsb
test
mov
dec
mov
into
dec
in
enter
les
lret
js
or
dec
xor
jp
test
je
mov
gs
sub
bound
js
mov
jl
hlt
mov
jo
aaa
test
ljmp
xchg
xor
lret
cld
mov
jne
ss
out
mov
cwtl
fwait
aaa
pop
int3
xor
push
roll
std
lret
fldcw
and
sti
fld
aas
aam
lods
xchg
movq
pop
mov
xor
sub
lret
mov
lds
jp
daa
mov
push
shrl
das
cmp
jge
ja
jl
stc
jp
out
fmuls
mov
adc
push
stc
sahf
sub
add
xchg
cs
shrb
subl
pop
andl
call
dec
addr16
sub
int3
push
loop
fcmovb
decl
xor
test
sub
add
fcomps
xorb
les
daa
fildll
repz
stos
std
aam
jecxz
imul
cmc
outsb
and
xchg
jbe
ss
sbb
xchg
cs
insl
jl
mov
daa
push
pop
loope
mov
and
mov
fbld
repz
push
lret
pusha
and
js
mov
data16
rcl
divl
jbe
xor
or
out
test
pop
rcll
cmp
dec
std
or
test
cmpsl
inc
pop
mov
adc
out
mov
and
cmp
jg
xor
ja
jmp
cmp
ds
outsl
je
sahf
mov
push
jb
sbb
add
leave
lret
jle
sub
push
movsb
test
ret
cmp
add
mov
inc
aas
lds
sti
xchg
cld
shlb
mov
lods
mov
lds
lret
insl
adc
sub
sbbl
jp
icebp
cmpsl
jns
cli
dec
andl
jb
xor
sub
push
add
clc
test
inc
in
push
lret
mov
test
ret
jbe
bnd
sub
and
iret
inc
lods
jbe
cmpsl
mov
push
add
mov
mov
xchg
test
rorb
jae
mov
fnsave
jge
std
addl
lret
mov
and
mov
scas
xchg
jns
jo
stc
inc
jge
jne
icebp
fdivr
inc
xchg
mov
lcall
cmp
or
dec
adc
sub
out
test
or
sbb
xor
jb
sbb
stos
pop
lret
roll
int
movsl
fcmovne
mov
roll
or
sahf
iret
xchg
nop
adc
aad
xchg
call
sbb
mov
adc
adcb
ja
jnp
jno
cld
jae
fsubl
jg
fwait
jp
jno
pushf
mov
mull
or
lret
aad
data16
xchg
dec
cmp
sahf
jp
cld
and
jno
mov
mov
push
shrb
daa
push
fwait
and
sti
jb
mov
jbe
push
pop
push
sbb
lock
out
enter
sub
gs
mov
cltd
dec
lock
int
push
je
ret
jge
mov
add
sub
xabort
cwtl
mov
ja
mov
shlb
mov
gs
cmpsl
mov
mov
ret
loop
cmp
xor
and
pusha
int
cmp
cwtl
cwtl
xchg
xchg
adc
jns
fwait
pusha
mov
jae
pop
out
dec
loopne
popf
xchg
xor
dec
dec
jno
sbb
and
xor
repz
push
ret
or
mov
hlt
pusha
mov
rcll
arpl
std
push
adc
mov
mov
cmc
aad
shr
fimuls
sbb
sbb
ds
addr16
mov
stos
inc
mov
roll
and
js
out
int
pop
jb
cltd
cld
pop
or
aaa
sub
lods
sahf
enter
pusha
leave
cld
jne
push
cs
bndstx
inc
aad
aas
fwait
jae
mov
test
loop
gs
fdivrl
nop
jno
iret
jb
adc
dec
lods
inc
lret
movsl
fstpl
cmpsb
mov
jbe
scas
ret
pushf
xlat
sbb
mov
add
add
add
ds
and
and
out
cmpsb
push
je
push
sbb
fsts
xchg
outsl
cmpsl
fdivr
sbb
sub
fwait
jp
jl
stos
jg
imul
add
sub
ret
aas
stos
xor
aam
cli
sti
jmp
fisttpll
dec
push
inc
orb
jp
or
and
or
fsub
push
sub
mov
mov
cmc
add
popf
mov
insl
or
shll
sarb
aas
jp
push
jnp
mov
sbb
je
adc
mov
mov
jb
inc
jl
jne
in
pop
movsl
pushf
repnz
xchg
xchg
push
cmpsl
push
pop
xchg
std
add
stos
xchg
nop
jg
popf
iret
cmp
bound
mov
ljmp
cmp
ror
adc
dec
mov
mov
add
jmp
addb
mov
inc
cwtl
shr
mov
inc
test
pop
push
ror
sbbb
add
bnd
fs
pop
mov
rorl
or
or
push
lds
mov
push
loop
sar
jns
xchg
sbb
mov
sbb
loop
add
add
data16
inc
test
cmp
aad
xor
leave
sub
dec
lahf
inc
pop
jmp
dec
lcall
sbb
pop
xchg
ljmp
pop
or
arpl
call
xchg
jne
pushf
dec
inc
icebp
and
jle
jg
dec
adc
addr16
fs
inc
push
outsl
ret
dec
imul
movsl
mov
pop
cmp
and
loope
popl
out
pushf
dec
cmpl
ror
jle
test
repnz
cmp
mov
inc
jp
xor
int
and
mov
test
push
lds
mov
rcrl
movsb
nop
lods
addr16
cmpsl
lds
jle
in
pop
pushl
push
das
pusha
bound
xor
in
in
aam
rcl
mov
in
cmp
inc
icebp
sbb
shlb
mov
sbb
hlt
test
push
jne
subl
addb
xchg
stos
push
pop
or
pop
inc
ds
push
mov
jle
pusha
jg
jne
pop
aaa
sub
js
fucom
xchg
ss
pop
inc
outsb
sub
push
btr
arpl
nop
push
mov
gs
fcomi
mov
mov
dec
cmc
mov
inc
push
mov
in
pushf
and
or
mov
fistps
push
inc
cmp
into
lock
push
xor
data16
jne
lds
movsb
add
push
mov
dec
jp
dec
adc
pop
cmp
mov
aam
push
pushf
pop
or
std
sarb
lret
cwtl
cmpsl
sub
loope
dec
imul
in
lea
pop
xorl
xor
cmpsl
push
mov
cmp
fdivr
loope
push
fnsave
add
inc
in
hlt
inc
in
inc
xchg
cs
push
into
insb
and
jb
jl
cmpsb
push
push
stos
xor
push
data16
xchg
outsb
mov
fdivrs
inc
call
mov
add
jo
mov
and
jmp
cmp
or
test
pop
repnz
adc
push
pop
notl
lds
dec
jge
mov
xchg
test
test
incl
xor
ljmp
mov
inc
push
loop
sarl
jp
dec
test
dec
mov
jp
insl
js
sbbb
push
rcr
fldcw
jno
pop
xchg
adc
cmp
aaa
cmp
stos
mov
fadds
mov
jge
dec
xchg
mov
push
sub
dec
mov
addr16
dec
fxam
popa
cmpsb
mov
or
lods
sbb
mov
scas
add
rorb
push
cmp
and
sub
and
negb
and
icebp
mov
jge
aaa
push
jmp
xor
push
mov
xchg
mov
push
mov
lods
lds
mov
mov
dec
fildll
xorl
xor
push
sub
push
movsb
ja
mov
and
repz
jg
pusha
push
sbb
lcall
out
mov
ret
pushf
or
mov
mov
arpl
inc
sub
addl
pop
sub
cmp
ror
lret
push
jg
mov
jg
aad
repnz
adc
sbb
push
xchg
sbb
dec
jge
imul
sub
adc
out
mov
jno
out
call
add
mov
dec
lcall
int
mov
and
pusha
shll
cmpsl
mov
and
xchg
push
mov
bound
arpl
add
push
pop
repz
xlat
jb
shll
inc
dec
or
out
and
mov
rcr
mull
mov
cmc
cmpsb
sbb
addb
or
cld
test
leave
push
or
out
pop
imul
pop
fdivs
pop
push
adc
mov
xchg
mov
xchg
int
mov
mov
and
movsb
xchg
adc
jns
dec
jnp
bound
fnstenv
inc
fnstcw
cli
mov
cli
and
nop
lret
xchg
adc
add
ja
and
pop
mov
pop
pop
loop
dec
and
push
pop
jg
pushf
in
jns
rolb
jecxz
lods
sbb
add
lahf
pop
cltd
and
xor
cld
rcrb
aad
shl
xchg
xchg
push
repz
push
fnstenv
and
pop
test
dec
scas
inc
push
mov
pop
fcoms
cmp
cmpsl
xchg
lcall
pop
push
mov
aam
adc
push
imul
dec
adc
xor
lock
jg
mov
xchg
hlt
mov
mov
dec
sub
rcrb
sub
scas
out
clc
mov
and
mov
push
test
mov
dec
inc
push
sar
sub
xchg
filds
jnp
shrb
sbb
mov
in
loop
bnd
sub
int3
pop
outsl
loopne
das
mov
subb
xor
adc
or
cmp
or
ret
test
jg
jno
pushf
fs
faddp
ds
jae
adc
cmpsl
sbb
push
push
inc
xchg
mov
push
mov
repz
leave
aam
mulps
sub
mov
jmp
mov
push
inc
or
inc
mov
add
in
shl
insl
sbbl
adc
mov
jg
mov
ret
test
sub
pusha
push
xor
sbb
mov
jbe
das
loopne
aaa
aaa
add
movsb
stos
adc
and
adc
xchg
push
jle
xchg
dec
xor
ljmp
jns
mov
mov
lcall
test
pop
rcll
cwtl
mov
sbb
jg
mov
xchg
aaa
inc
loop
bound
sar
mov
jne
adc
jne
add
in
add
in
call
push
push
sub
adc
ljmp
aam
insl
test
jns
cmc
jbe
call
push
push
or
fldt
jecxz
mov
jle
stos
popl
sti
push
dec
stos
dec
into
jne
insb
je
sbb
das
push
sbb
sub
push
inc
mov
sti
push
xchg
cmc
mov
sbb
imul
pop
sbb
mov
lods
scas
or
jp
jns
mov
mov
xchg
popa
mov
push
mov
or
popf
mov
bsr
ret
ljmp
pop
sub
repz
pop
sub
aad
pop
xchg
sbb
xor
dec
daa
add
add
pop
dec
test
pusha
sbb
push
movsb
or
bound
shlb
insl
pop
fs
fidivl
inc
pop
adc
addl
cld
mov
test
mov
and
lret
adc
sbb
arpl
mov
inc
xchg
pop
ret
scas
or
and
pop
xor
mov
or
add
imul
xchg
mov
loopne
mov
push
and
xchg
or
stos
in
and
loopne
inc
xlat
repnz
arpl
divl
pop
jl
xchg
mov
sub
sub
ja
daa
shll
in
jae
xchg
es
inc
shll
fmulp
cli
fstps
cmp
pop
jg
lahf
fmuls
mov
out
movsb
test
lock
data16
hlt
out
cmpsb
push
fs
dec
and
pop
sbb
xor
sbb
jb
mov
test
dec
ret
pop
inc
aaa
out
xlat
orb
inc
ljmp
mov
mov
adc
mov
mov
clc
adc
fdivs
jg
inc
scas
adc
xor
dec
sub
ficomps
orb
loop
jae
fidivs
adc
iret
addr16
dec
mov
scas
push
sbb
insb
repz
sbb
mov
scas
mov
in
int3
push
adc
loope
in
cmpsl
xor
jo
push
scas
leave
inc
imul
sbb
sbb
lret
sahf
shl
imul
cmpsl
icebp
add
xor
fisubrs
pop
mov
jae
pop
imul
cmp
ja
lock
pop
testb
xor
push
sub
add
insb
sarb
test
add
jmp
mov
sbb
lds
and
pop
pop
jbe
xorb
jne
pusha
mov
adc
sbb
insl
int3
jne
adc
ss
out
rcll
std
xchg
mov
xchg
jecxz
add
ret
jge
jne
aam
jne
mov
daa
mov
jnp
leave
fxch
mov
icebp
jmp
into
jle
ret
add
dec
gs
loope
mov
arpl
xchg
xchg
mov
xchg
insb
ret
les
pop
ljmp
pushf
inc
jp
icebp
jne
and
jb
imul
mov
jmp
mov
call
filds
push
dec
xchg
mov
dec
pop
ja
xchg
pop
cmp
lock
xchg
lahf
stos
adc
push
rol
shll
and
mov
in
imul
daa
push
xor
sbb
sbb
and
out
std
mov
add
insb
cmp
push
in
lods
or
push
cmpsb
in
imul
jle
dec
fdivrl
iret
out
mov
fdiv
mov
js
cmc
jnp
mov
mov
sbb
inc
cli
or
bnd
mov
adcb
jnp
pop
cltd
mov
lret
add
pusha
pop
inc
add
stos
fcomps
cmp
lock
mov
jnp
jne
repnz
cmc
sub
cmp
xor
or
jo
cmc
ja
jg
add
pop
das
sub
mov
ficoml
adc
bound
stos
xchg
xchg
cmp
fidivrs
mov
cmovl
out
fucomp
sub
inc
sub
inc
push
lds
cmp
dec
ret
jmp
jae
add
xchg
mov
addr16
cmpb
aaa
jo
aam
dec
dec
shr
pop
fisubs
out
add
lods
push
jle
jae
imul
stos
clc
xchg
jno
push
mov
fidivs
jbe
adc
orl
and
shrl
xor
ffree
mov
sub
sarb
lcall
ss
movsl
mov
into
push
cmp
in
rorl
sahf
dec
in
scas
cmc
inc
add
pop
and
push
loopne
lahf
jnp
imul
iret
test
mov
stc
jg
push
sarb
jae
push
or
outsb
arpl
stos
jg
cltd
rorl
movsl
push
push
push
repz
inc
iret
aad
leave
arpl
xor
loope
mov
in
xchg
daa
jmp
pop
mov
xchg
xchg
aaa
sbb
cmp
movsb
enter
loopne
adc
push
push
jae
insl
pop
xor
aas
xchg
cmp
mov
push
and
push
jno
add
outsl
jge
daa
sub
xor
add
cmpsb
rcrl
in
sbb
adc
add
scas
or
rcl
in
mov
mov
push
mov
fisttps
or
jmp
dec
das
insl
outsb
push
lds
and
popf
pop
dec
out
sbb
test
jg
test
fsubrp
cmp
push
je
faddl
cmp
scas
and
int
daa
sub
cmp
movsl
int
ret
es
mov
rol
add
dec
in
and
dec
mov
cltd
pushf
setle
ds
pop
inc
jl
in
mov
push
or
jl
lock
sub
or
cwtl
jp
xor
imul
jmp
js
fisttpll
mov
hlt
push
in
jmp
mov
push
or
mov
je
movl
pop
jp
inc
ja
xchg
incb
es
mov
xorb
scas
out
popa
mov
imul
lock
push
sti
push
dec
enter
inc
sbb
xor
jns
inc
das
jo
loop
dec
push
mov
lcall
push
aaa
test
dec
sub
push
push
inc
hlt
adc
and
repnz
mov
ja
sbb
sub
mov
iret
or
cmovb
mov
lret
test
arpl
dec
add
and
mov
or
pop
outsl
fldenv
adc
xor
rorb
fcom
and
aaa
subl
xor
and
arpl
or
add
xor
or
mov
das
lods
nop
aad
test
mov
pop
add
out
loope
pop
cli
arpl
cmp
outsl
mov
inc
test
mov
das
cltd
jmp
adc
fistpl
add
pop
lds
cmp
ds
lods
jle
sub
repnz
cmp
adc
and
js
push
outsl
cmc
ss
ret
fcomip
xor
and
jge
and
fnstsw
lods
pop
loop
xlat
dec
inc
fsubrs
pop
adcl
movsb
mov
or
mov
xchg
jbe
ret
add
jb
stc
js
sahf
cmp
sahf
lds
lcall
test
out
dec
jne
fdivrs
mov
and
add
loope
jbe
int3
pop
mov
mov
fiaddl
xor
push
cmp
into
test
ss
hlt
js
stos
adc
push
mov
rorl
lods
les
jns
mov
and
mov
ja
and
add
dec
fadds
ret
mov
mov
lcall
inc
sarb
jmp
push
mov
add
insb
lea
cmp
mov
je
mov
adcl
jae
sbb
pop
pop
ds
std
shll
movsl
push
xchg
xchg
add
in
mov
mov
pop
xor
icebp
sbb
lock
or
jg
push
dec
add
jae
cmc
xor
xchg
cltd
jle
cmp
outsb
sbb
mov
dec
pop
sarb
push
repz
xor
pop
jb
push
fnstenv
inc
daa
arpl
lcall
jbe
std
inc
das
lcall
push
mov
in
push
push
out
out
pop
mov
mov
aas
xchg
xchg
push
aaa
xchg
movsb
imul
mov
cmp
shrl
xlat
pop
out
or
mov
int3
add
mov
inc
inc
xchg
ljmp
rcll
scas
dec
cs
mov
imulb
mov
test
movsb
cmc
cmp
cld
sub
imulb
addr16
jg
leave
mov
out
mov
add
mov
test
out
rol
adc
sbb
aad
push
icebp
sbb
inc
out
dec
cmpsl
mov
cmp
sarl
sub
and
data16
mov
xchg
and
insl
ret
push
mov
or
xchg
xor
ljmp
adc
sub
mov
sbb
push
mov
xchg
sbb
pusha
dec
sub
and
push
push
inc
jmp
imul
lcall
inc
inc
cmp
sbb
dec
cmp
in
sbb
sub
scas
pushf
pop
loop
push
and
ss
cltd
jp
inc
fcoms
inc
mov
mov
sbb
aam
xchg
cmpsl
mov
cmp
inc
in
stc
push
pusha
cmpsb
insl
jnp
adc
cmp
or
mov
sti
jle
mov
add
sub
nop
fcoms
cmp
or
sub
xchg
cld
ficoml
shll
ss
out
mov
and
insl
shlb
adc
push
jae
pop
sub
neg
xchg
adc
push
xchg
xchg
lret
add
jle
mov
inc
sub
jb
movsl
ss
scas
mov
sbb
adc
adc
sub
add
pop
cwtl
frstor
cmp
lret
xchg
xchg
enter
mov
inc
scas
mov
inc
shrb
repnz
test
xchg
fistps
dec
call
lret
cmpsl
push
pop
mov
xor
cld
pop
repnz
mov
test
shll
and
push
shl
sub
roll
cmp
andl
in
sbb
cli
pop
testb
sbb
push
sbb
outsl
pop
jo
icebp
scas
mov
dec
add
jl
stos
in
dec
test
mov
test
rcll
xchg
mov
outsl
in
fsubrl
xor
push
xor
pop
dec
roll
xor
jg
mov
in
mov
arpl
enter
insb
sub
jmp
mov
xlat
jne
xchg
add
cs
loop
pop
lret
clc
jmp
lods
loopne
pop
dec
xchg
inc
cmpsl
xchg
jp
cmpsb
push
xor
xchg
shrb
adc
roll
dec
imul
pushf
loopne
add
pop
adc
add
xor
push
push
dec
sbb
stos
mov
imul
aad
jge
aaa
inc
mov
dec
or
je
cmp
push
add
sti
ja
jne
mov
mov
fldcw
daa
push
jg
cmp
test
mov
push
in
shl
arpl
add
cltd
sbb
dec
sub
mov
rol
or
mov
mov
jae
cmp
inc
sbb
and
fisubrl
out
shll
inc
jmp
pop
lods
mov
lds
int
mov
add
cmpsl
jge
lea
scas
jne
or
sarb
fbstp
inc
sbb
dec
icebp
iret
jbe
mov
jo
outsl
and
and
cmp
in
xor
xchg
pop
loop
test
jp
sub
pop
cli
and
mov
jle
sbb
outsl
das
es
aam
mov
inc
jmp
hlt
pop
inc
xchg
lock
sub
sbb
arpl
jns
jo
push
dec
add
ja
xchg
fsubrs
ljmp
out
jp
cli
fisttps
adc
cld
in
sbb
pop
inc
cmpsb
inc
repnz
push
daa
xchg
adc
inc
hlt
fsts
pop
pop
push
andl
adc
js
xchg
ja
jno
or
xchg
cmpsb
pop
pusha
mov
movsb
aaa
cmpsl
mov
jno
cltd
push
or
dec
pop
nop
mov
andb
cmp
push
test
stos
loope
shrb
jbe
mov
cmp
addr16
pop
push
orb
push
push
add
jecxz
push
sub
fistps
outsl
cmpsl
jmp
xor
inc
add
daa
mov
incl
fadd
sbb
aas
test
call
dec
mov
push
gs
enter
cltd
mov
out
bound
fcoml
out
movl
xchg
xchg
testb
imul
ljmp
das
cs
out
clc
xor
lahf
pushf
dec
cmp
jmp
cmp
rolb
loope
xchg
fbld
int
dec
or
pushf
pop
sbb
outsb
mov
mov
mov
out
lods
mov
push
push
testl
dec
lods
or
enter
jno
in
mov
mov
rcrl
stos
sub
fwait
movsl
sahf
cmp
lock
xor
imul
add
fisttps
lret
sbb
inc
lcall
mov
aad
movl
or
sar
mov
in
push
aaa
test
dec
mov
add
and
pop
xor
add
mov
pop
loop
add
sub
cmp
sbb
int3
xlat
sub
loop
je
or
sub
aad
add
loopne
add
push
out
fisubs
pop
xchg
icebp
xchg
clc
xor
call
dec
add
jl
xor
xor
xchg
or
cld
sbb
jl
jl
test
aaa
dec
js
or
fdivrl
pop
mov
adc
mov
outsb
aas
jo
mov
fsubl
rcl
sahf
sub
hlt
movsl
jns
add
loop
fs
push
mov
pop
mov
inc
movsb
stc
imul
mov
sub
stos
lahf
mov
stos
xor
jae
mov
or
inc
xchg
shll
cmpl
mov
push
mov
xlat
ja
sti
imul
imul
in
pop
inc
dec
cmc
sbb
aad
or
lods
dec
fmuls
mov
cs
fstp
outsb
mov
js
mov
repnz
xor
mov
iret
out
and
ljmp
add
lock
fstpl
dec
and
out
xor
mov
xchg
and
pushf
scas
or
stos
out
cmp
test
rorl
inc
out
inc
inc
lock
dec
inc
dec
push
fs
xlat
xchg
bound
aaa
mov
adcb
push
xor
sbb
sub
dec
cmp
mov
mov
lret
dec
sarl
push
sahf
cmp
mov
clc
pop
jp
ffreep
jno
sub
std
fmul
ret
aam
stc
pushl
movsb
or
ret
pop
mov
pop
dec
dec
pop
xchg
sbb
and
fwait
repz
mov
nop
xlat
mov
mov
mov
mov
mov
les
lret
xor
call
shll
sbbl
pushf
sub
in
dec
adc
les
sub
aas
fidivrl
aam
xchg
push
cld
dec
mov
pop
sub
lahf
jnp
cmpsb
xchg
imulb
dec
cwtl
adc
leave
push
pop
loope
adc
mov
add
jae
movsl
sub
add
and
push
adc
out
adc
in
jno
cli
push
xchg
xchg
dec
mov
or
jae
imul
out
das
aaa
sub
pop
jp
pusha
test
inc
test
pop
push
mov
and
push
hlt
fisttps
fcoms
lahf
in
leave
stc
sbb
push
mov
repz
xor
pop
loope
mov
adc
test
test
pop
sub
sbb
arpl
bound
bound
jmp
push
cmpsl
scas
imul
mov
subl
je
lcall
mov
rorb
dec
jl
clc
add
shl
jge
jp
shlb
mov
ja
into
lods
movsb
shlb
push
adc
push
adc
jo
das
bswap
push
xchg
dec
hlt
stos
inc
ds
inc
pop
repz
mov
xchg
and
aaa
lret
mov
inc
sarl
addr16
sub
jne
mov
jbe
add
shl
push
or
jbe
and
cltd
xor
xchg
jno
pop
push
hlt
enter
outsb
data16
mov
pop
bound
dec
clc
stc
fistpll
mov
xor
test
add
lcall
dec
push
outsb
cmp
cmc
push
cmp
push
loope
or
push
sarb
pop
icebp
lret
jmp
popf
das
cmc
das
inc
cs
lds
push
dec
mov
adc
pop
jl
out
outsb
cmp
jns
push
xchg
push
sub
wbinvd
cmc
pop
popl
dec
insl
add
pop
or
xor
cmp
or
add
mov
jbe
sub
and
sub
addl
filds
clc
mov
cmp
push
cli
lods
into
push
inc
jecxz
and
enter
rcr
hlt
pushf
mov
mov
pop
xchg
jae
int
add
jge
cmp
cmc
dec
sbb
out
mov
push
and
daa
adc
es
mov
fdivrs
das
repnz
adc
inc
dec
test
push
push
mov
fcomp
bound
push
jbe
sbb
adc
scas
xor
dec
loope
push
hlt
repz
pop
cld
cltd
outsb
enter
into
sbbb
add
push
or
sarb
or
imul
xchg
rorb
imul
push
mov
inc
lahf
cld
lret
insb
adc
lods
inc
inc
fnstenv
or
sbbb
movsb
adc
dec
insl
stos
out
mov
int
add
mov
sti
add
or
decb
and
outsb
lret
imul
test
ja
pusha
fldcw
mov
aam
sub
mov
pop
lret
sbb
cmpsl
or
cmp
jg
sahf
test
scas
push
pop
push
inc
jnp
cmp
adc
jmp
mov
mov
xchg
dec
mov
add
incl
inc
lods
fcmovbe
mov
mov
mov
insb
popa
or
xchg
das
subl
inc
movsl
sbb
icebp
dec
ret
shlb
xor
hlt
jge
repnz
inc
lods
out
out
repz
sub
cmpb
mov
inc
aad
dec
and
or
je
cmp
dec
es
pop
and
sub
insl
jns
fdivrs
lcall
or
mov
or
cld
jle
mov
in
loope
pushf
mov
sub
add
out
hlt
xor
mov
imull
in
in
cmp
cmp
lcall
fs
orl
ret
mov
xor
xchg
mov
mov
scas
xchg
scas
pushf
jge
sub
inc
cmc
jle
lret
adc
mov
fwait
push
and
out
and
inc
fwait
ds
pop
es
outsl
jl
pop
lcall
cld
test
sub
das
xchg
ss
xor
adc
push
hlt
or
push
out
fstps
pop
mov
aam
dec
sbb
movsl
dec
out
sbb
xchg
lods
pop
call
or
xchg
popf
fnsave
out
jb
ret
icebp
cwtl
scas
shlb
mov
pop
push
and
mov
arpl
cmp
push
cmc
mov
dec
push
mov
pop
jle
sbb
jmp
mov
imul
xchg
inc
shl
jbe
xor
inc
out
pushf
out
mov
push
fwait
popa
ret
xchg
jno
bound
inc
xchg
xchg
aam
or
popa
mov
pop
movsb
pop
into
cmc
int3
loopne
mov
mov
fs
fnstenv
sub
inc
lea
daa
push
lds
pop
mov
pop
fistpll
or
cmp
lds
lds
mov
jno
adc
cmp
jb
sub
push
mov
iret
push
rcll
xchg
jnp
arpl
xor
xchg
mul
out
lock
inc
lds
or
xchg
or
pop
inc
pop
js
dec
in
adc
das
mov
push
pop
fsubl
mov
loopne
pushf
and
int3
stos
mov
add
xchg
out
sub
add
inc
push
xchg
in
pushf
jne
lcall
or
les
push
js
ljmp
data16
jmp
js
dec
shl
ss
loop
jge
or
add
cmp
test
fidivl
pop
or
int3
enter
cs
sub
imul
jle
jb
add
cmp
fistps
pop
mov
cs
adc
cmpsl
icebp
mov
mov
mov
xlat
sbb
in
dec
jp
imul
les
repnz
in
push
rol
jle
daa
push
test
inc
je
testb
into
loop
lods
push
test
cmp
adc
cwtl
fldenv
out
xor
icebp
int
xchg
xlat
out
and
push
push
out
lock
in
pushf
dec
cmp
mov
mov
test
xchg
mov
jo
out
lcall
loope
or
inc
add
icebp
and
cmp
enter
push
and
fldcw
popw
fs
sbb
adc
adc
andb
clc
jmp
mov
rorl
je
daa
repz
xchg
icebp
cmp
push
inc
pop
mov
fnstsw
movb
sbb
cltd
and
xor
or
int
sbb
lahf
call
in
hlt
xchg
xor
cmpl
mov
hlt
push
and
adc
cmp
stos
jb
pop
sti
imul
outsb
mov
mov
cltd
je
ret
rcrb
sahf
adc
rcrb
fcom
mov
and
xor
xor
rcll
sub
fisubs
jge
fs
jo
pop
mov
sahf
lea
jecxz
out
mulb
fistpl
mov
push
or
pop
je
mov
or
mov
loop
roll
pop
fsubp
mov
into
fsub
adc
add
aas
xchg
jne
nop
sbb
cmp
mov
aad
cmc
dec
xchg
pop
test
in
xrelease
sbb
test
push
push
pop
addr16
pop
rclb
scas
sbb
btl
stos
mov
lcall
in
push
jb
je
icebp
outsl
jecxz
jbe
mov
inc
mov
pop
or
das
xchg
mov
xchg
cmpsb
jg
sbb
sub
dec
dec
cmp
adc
push
mov
adcl
push
jo
loopne
adc
cmp
sub
and
data16
es
fcoml
inc
sbb
add
subb
cmpb
cli
rcl
lea
push
xorl
pop
dec
shrb
mov
pop
es
leave
mov
out
cld
push
repz
dec
lods
mov
push
mov
sub
adc
fwait
fs
movd
push
shlb
jmp
arpl
out
or
nop
jg
jecxz
orb
scas
xor
stos
pop
sbb
ds
xlat
lret
jmp
cltd
dec
and
imul
int3
cmp
pop
cmp
and
mov
sbb
notb
popf
imul
xchg
leave
sbb
or
push
push
dec
out
xchg
in
pop
xchg
jge
push
jne
clc
into
mov
push
mov
sub
xchg
cmp
rolb
mov
push
int
clc
in
push
fisubrl
mov
and
jo
mov
aaa
aas
mov
pop
ficomps
jae
faddl
jno
inc
mov
les
ret
jl
and
push
inc
sbb
mov
mov
leave
add
mov
or
js
sub
adc
pop
pop
sub
dec
mov
pushf
dec
gs
add
push
sub
sbb
sub
pop
stos
jbe
xor
xchg
sub
test
leave
push
outsb
scas
daa
cwtl
jmp
leave
shll
sub
push
push
mov
fdiv
push
adc
sarl
pop
add
add
cmp
jmp
push
lcall
pop
jecxz
arpl
pop
push
cmp
jb
imul
fxch
nop
push
and
ret
ljmp
push
sub
dec
inc
pop
pop
xchg
sbb
pop
outsb
adc
mov
xor
arpl
scas
mov
fistps
out
daa
jmp
mov
sub
mov
push
ror
pushf
gs
pop
add
and
imul
stos
std
dec
jnp
sti
stos
ret
adc
adc
shll
push
test
insb
imull
adcb
rcrl
repnz
insl
mov
pop
scas
sti
or
sahf
stc
jne
lods
stc
lcall
adc
iret
push
notrack
test
lds
fisttpl
jge
mov
inc
inc
popa
xor
repnz
mov
dec
jmp
mov
hlt
repz
loop
repz
jge
add
dec
xor
fistl
inc
fs
pushl
inc
cmpsl
push
and
jno
arpl
and
mov
dec
push
push
mov
mov
push
cmp
aaa
xor
mov
mov
and
jb
pop
rcr
fldcw
gs
lret
mov
int3
or
xor
clc
xchg
hlt
mov
stc
pop
outsb
sub
sbb
jl
fwait
les
std
dec
rcll
ljmp
xchg
xchg
cmp
adc
and
sbb
mov
jns
sub
std
mov
sti
inc
and
mov
push
mov
mov
in
jo
das
cmpsb
add
mov
xor
cmpsb
out
inc
ret
cld
fdivs
dec
xchg
inc
mov
sub
adc
test
popf
mov
test
sub
xor
or
push
jge
out
cwtl
mov
or
jecxz
sub
faddl
and
movsb
push
das
pop
dec
outsb
cmp
fidivrl
mov
mov
repnz
es
aas
dec
imul
fsubrl
adc
movsl
push
in
sub
sbb
adc
pop
movsl
ret
iret
pop
ficomps
mov
lods
jecxz
lock
dec
lahf
in
jbe
pushl
dec
dec
jae
jae
jns
xor
outsl
in
sbb
enter
mov
jg
test
add
pushl
inc
cmp
out
shlb
mov
xor
lods
jmp
and
in
and
in
sub
test
arpl
test
ljmp
adcl
fldl
inc
xchg
out
rcl
xor
cmc
sub
and
loopne
push
mov
push
movsb
lock
xchg
out
pop
cs
out
in
pop
hlt
cmp
out
in
lcall
or
leave
lds
jne
cltd
sub
pop
push
mov
and
xchg
orl
aam
lods
xor
daa
xchg
adc
cwtl
int
pop
mov
adcl
ljmp
add
push
xor
sbb
inc
mov
test
fildll
xchg
or
cwtl
nop
movsb
out
je
pop
out
or
out
pop
popa
lret
in
stos
leave
data16
fninit
inc
inc
icebp
addr16
cli
push
repz
cmp
xchg
loopne
mov
inc
cmp
xor
pop
cmpsb
mov
mov
push
add
xor
fmul
cmp
std
pop
sbb
imul
pop
and
sahf
pop
cmp
and
lret
xor
lods
xchg
aad
adc
xchg
xor
test
sbb
out
sbb
add
push
push
mov
pop
jg
mov
fdivp
sbb
push
pop
push
and
and
mov
pop
cmp
mov
push
pusha
cmp
imul
fisubrs
popa
adc
xlat
add
btsl
jmp
lods
hlt
sarb
jnp
xchg
lahf
rol
ret
lea
xlat
call
lahf
sub
lret
cmp
fs
rorl
push
aas
mov
mov
loope
mov
aam
pop
xchg
inc
mov
and
push
jbe
aad
cld
daa
dec
imul
or
adc
adc
stos
dec
stos
and
cmp
cmp
test
sti
add
popl
sbb
insl
in
push
out
inc
stc
ljmp
mov
push
cmpsb
insb
and
xchg
lret
lods
xchg
in
xor
ja
cmp
jmp
mov
lods
cld
shr
js
ss
cmpl
hlt
inc
pop
jp
test
xchg
inc
pop
fstp
test
outsl
jnp
adc
jo
insl
cmpsl
inc
test
stos
cmp
xor
lahf
shl
cmp
sbb
and
and
test
xor
aas
mov
xor
mov
scas
and
jmp
shrl
pop
fs
jb
adcb
push
xchg
fidivs
jmp
lret
insl
mov
xlat
aas
in
xchg
mov
sub
inc
push
enter
lcall
pushf
lods
in
lret
shr
repz
mov
xchg
pop
mov
int
push
jle
test
ss
sti
movsl
jno
xchg
mov
cmpsb
daa
cmc
js
pop
adc
and
pop
test
xchg
loopne
cmpsb
mov
test
sub
roll
pushf
and
test
lret
mov
xchg
sbb
mov
dec
loop
enter
sub
mov
fdivrl
or
leave
jo
loop
mov
xchg
imul
lods
dec
or
fisubl
or
sti
das
mov
push
xchg
ror
dec
leave
and
mov
inc
mov
arpl
lock
dec
lret
cs
loopne
push
xchg
push
or
push
jecxz
push
arpl
cltd
push
and
and
call
fildl
xchg
ljmp
test
sti
inc
pusha
adc
lcall
add
pop
mov
push
out
ja
sbb
push
les
sahf
bound
lret
xor
out
popa
pop
and
mov
or
cli
pusha
stc
not
js
or
dec
pop
cmp
data16
jbe
sbbl
jne
or
decb
lahf
xlat
test
mov
hlt
inc
dec
test
test
add
call
testl
push
add
push
out
das
pop
stos
mov
jp
sbb
push
xor
rol
xorl
or
add
subb
insl
dec
mulb
jp
add
jg
js
bswap
test
outsl
add
movsl
test
ret
jns
pop
lods
mov
test
push
fsubrl
neg
push
dec
push
icebp
or
and
aas
insl
inc
mov
cs
push
lods
inc
fadds
das
dec
mov
aam
mov
test
add
mov
lods
rolb
lods
lcall
xlat
dec
mov
cmp
or
xor
mov
or
jbe
mov
xchg
in
adcb
sbb
jle
cmp
xorb
jecxz
push
mov
insb
mov
loope
xchg
call
mov
in
inc
and
icebp
mov
lret
jno
sbb
push
pop
jne
fldt
cmp
jae
loop
mov
inc
ljmp
xor
cmp
xor
and
dec
pop
icebp
adc
xchg
jg
add
pusha
aas
xchg
bound
data16
sbbl
cmp
stc
xchg
pop
les
mov
jne
cld
push
adc
js
jns
and
dec
push
inc
cmpb
jmp
in
nop
nop
push
xor
xchg
int3
mov
sti
outsl
test
push
dec
ljmp
and
repz
ss
cld
ret
imul
leave
push
out
std
pop
sub
int
pop
push
fsubl
into
arpl
and
sub
mov
repnz
push
mov
dec
jo
stos
or
iret
scas
aam
cmp
add
popa
out
jne
rcr
out
enter
lret
lock
shrl
mov
add
add
xlat
adcb
mov
cmp
scas
mov
icebp
scas
adc
es
mov
cwtl
dec
add
push
push
mov
cs
mov
lahf
mov
adc
arpl
jp
ljmp
pop
test
pop
mov
cmpb
push
leave
testb
jae
incb
xchg
sbb
nop
add
fisttps
loope
test
fucomip
xor
mov
push
mov
dec
adc
repnz
cmp
add
fsubp
aaa
pop
jnp
inc
pusha
mov
hlt
mov
ja
push
ret
repz
cmp
or
sub
fbld
cmpsb
cld
push
in
mov
inc
mov
imulb
mov
or
in
rcrb
aam
adc
add
clc
jl
stos
pop
pop
mov
andl
adc
addr16
add
pop
stos
jp
fldenv
xor
in
movsb
inc
mov
xor
addr16
fwait
lret
xlat
and
mov
mov
jp
mov
sub
inc
xor
cmp
dec
sbb
lock
dec
out
pop
dec
movsb
dec
test
and
repnz
sub
add
pop
xchg
adc
jb
rcll
jle
dec
mov
inc
in
test
popa
ret
repnz
mov
loope
mov
jle
shr
shl
and
fucomip
comiss
or
subb
mov
lods
mov
pop
fisttpl
cmc
out
push
shl
xchg
fld
stos
fs
sbb
nop
stos
push
adc
sub
mov
sbb
mov
clc
rorb
or
call
add
lcall
push
loop
adc
je
cmp
mov
add
lods
mov
cmc
cmc
cmpsl
cmp
sti
popa
pop
xor
mov
imul
into
roll
mov
test
push
int
jge
cmp
cmp
loop
clc
dec
aam
cmp
loop
imul
jmp
adc
mov
and
push
jg
fdivrl
xorb
pop
sbb
or
lret
or
in
push
sub
shl
movsb
pop
jl
mov
js,pt
push
or
cmpsb
jnp
dec
xor
jae
jne
adc
clc
lea
cmpsb
sbb
aad
push
addr16
cmpsl
loop
fildl
sbb
scas
in
push
popa
mov
jg
mov
xchg
adc
test
jne
xlat
sbb
lods
xor
xchg
push
dec
out
jb
stc
dec
xchg
pusha
dec
int3
fiaddl
pop
sub
inc
jnp
or
cmc
dec
ljmp
ja
cmp
jnp
rcrl
loope
roll
sar
pushf
ss
pop
es
xor
lock
repnz
rcll
mov
xlat
movsl
jmp
xor
push
je
pop
dec
sub
mov
test
rcrl
mov
dec
and
cltd
cmpl
or
mov
push
dec
mov
adc
ds
mov
data16
pop
push
mov
aas
xchg
into
outsl
scas
enter
jmp
mov
out
pop
mov
sbb
sbb
sbb
inc
je
sub
outsb
jle
test
sbb
add
roll
mov
vpavgw
jmp
test
hlt
imulb
nop
xchg
or
mov
movsl
xchg
daa
shll
lret
int
push
pop
in
cmp
pop
mov
fsubs
sbb
mov
fidivs
xor
jb
push
pop
mov
ret
gs
cmc
adc
dec
inc
mov
rorl
ss
shl
incl
mov
test
add
mov
pop
inc
xchg
stos
sub
adc
loope
jo
fstl
std
pop
pop
in
pop
xor
xor
push
popf
lcall
dec
inc
lods
lahf
push
ficoml
dec
sbb
xor
mov
shr
dec
outsb
adc
push
int
cld
add
mov
pushf
scas
push
sub
ficoms
xchg
pop
loope
push
int
and
mov
aam
frstpm(287
or
rorl
insb
add
in
daa
rclb
jl
jg
mov
mov
aas
cmp
lcall
dec
cli
adc
push
lock
lds
jecxz
outsb
cmp
lcall
sahf
dec
lret
mov
shl
add
mov
xchg
mov
in
aam
fstpt
or
sub
push
mov
addl
ljmp
mov
dec
mov
push
mov
inc
clc
pushf
push
shrb
enter
or
xor
xchg
out
sbb
push
add
in
inc
mov
lods
cmp
dec
mov
inc
jmp
addr16
loope
pop
jp
dec
data16
jmp
sbb
mov
jecxz
push
inc
sub
and
dec
hlt
call
mov
mov
xchg
ret
pop
mov
ds
test
jns
loope
mov
sub
xlat
std
inc
cs
out
lea
push
sahf
jecxz
leave
cmp
fcmovbe
pop
andb
daa
jmp
jecxz
mov
push
add
mov
add
mov
jp
mov
movsb
ds
and
jb
mov
adc
repnz
push
inc
push
xchg
outsl
adc
fstl
dec
hlt
lods
cmpb
bound
mov
adc
pop
push
sub
push
cmpsb
mov
outsl
mov
pop
outsb
cmc
dec
lods
daa
ffree
lock
jmp
xor
cmpsb
xchg
dec
jl
cmp
nop
add
mov
lret
sub
iret
cmp
xor
inc
sahf
push
aam
fidivl
and
cmpsb
test
or
cmp
inc
fstp
add
repz
rorl
mov
leave
cmpsl
repnz
add
add
xchg
dec
xchg
scas
mov
xchg
cmp
pop
add
add
jp,pn
daa
pop
dec
mov
add
aas
pushf
adc
jge
or
insb
sarb
repz
out
out
adc
mov
fcom
popl
sbb
pop
gs
dec
xor
jne
push
and
xchg
stos
insl
cmp
dec
lea
jecxz
in
les
mov
rcl
hlt
cmp
mov
les
dec
mov
or
push
lods
ljmp
fucom
jmp
arpl
push
fdivrl
imul
pop
cltd
in
adc
jg
xor
adc
insb
pop
shl
gs
jl
mov
add
pop
test
jmp
and
and
fisttpll
xchg
stos
xchg
add
dec
fnsetpm(287
out
popa
pop
dec
and
popaw
stos
scas
aaa
icebp
or
leave
mov
xor
add
outsb
flds
incb
xchg
out
xor
dec
mov
std
sbbl
ljmp
mov
pop
mov
notb
dec
or
pop
repnz
mov
mov
cltd
pop
ljmp
cmpsl
cmpsb
ret
and
xor
pop
lret
mov
arpl
lds
fidivrl
jnp
in
clc
aam
sbb
imul
lret
cmp
pop
dec
mov
rcll
repz
je
test
sti
pop
enter
cmp
pop
mov
mov
in
mov
rcrl
ret
insl
adc
push
gs
xor
cmp
sbb
push
arpl
ret
test
ret
cmp
js
dec
cwtl
lds
jp
jns
loop
dec
jae
xorl
mov
sbb
dec
mov
scas
or
mov
into
ja
dec
js
mov
xchg
aam
adc
hlt
lahf
push
mov
popa
add
push
sub
cwtl
mov
dec
sub
xor
cmpsl
jae
mov
bound
fidivs
sti
cld
shrl
cmp
sub
pop
or
repz
arpl
std
test
xlat
cmc
xchg
stos
mov
sub
and
pop
dec
adc
push
sub
inc
mov
dec
aad
jae
aam
pop
aam
cwtl
mov
cltd
inc
mov
mov
mov
mov
andb
cltd
mov
pop
pop
inc
sub
fadds
push
rorb
loopne
ljmp
or
mov
pop
aad
inc
xor
mov
pop
fcmovnb
inc
scas
mov
jle
idivl
imul
mov
sbb
push
icebp
cld
aam
sub
jmp
cmpsl
pop
sub
aaa
xchg
ret
inc
dec
fs
das
int
adcl
movsb
out
jns
xchg
faddl
cmp
out
mov
add
adc
loopne
pusha
xor
mov
sarl
adc
sub
test
cmp
push
inc
add
icebp
jo
enter
sub
xchg
loop
sbb
push
out
hlt
jne
pop
sbb
adc
cltd
adc
sbb
xor
sbb
cmp
xor
cmp
jecxz
popf
cs
daa
fwait
mov
add
mov
rcrl
sbb
cmp
adc
lret
sahf
insl
lahf
sahf
lods
xchg
in
aad
mulb
cmp
jl
sbb
negl
sbb
add
dec
sbb
ror
jne
insl
cmpb
pop
or
nop
mov
cmp
sub
cltd
outsb
and
stc
sbb
adcl
bound
mov
orb
inc
pop
xchg
and
mov
insl
sarl
shrb
aad
les
fnstsw
cmp
notb
pop
xorb
ret
stos
cmc
mov
or
sub
or
repnz
iret
test
inc
leave
ret
mov
xor
test
mov
scas
add
js
fistpl
rcrl
push
push
jbe
and
imul
sti
das
add
mov
es
xchg
xchg
outsb
xor
xchg
lock
adcb
int
mov
jmp
ja
pop
or
lret
dec
add
fistpll
adc
and
xor
mov
in
int
fistpl
fwait
jl
pop
mov
test
gs
cltd
imul
enter
lock
push
fsub
gs
add
fisttpl
stos
les
pop
push
mov
inc
enter
mov
mov
imul
push
cltd
xor
js
xchg
mov
loope
notb
into
adc
mov
cmovs
call
dec
jbe
adc
push
pusha
loop
push
lret
sub
pop
pop
ret
cmpsb
jle
dec
sbb
out
movl
ds
push
sub
inc
inc
cmp
xor
mov
fisubrs
es
dec
into
dec
sub
aam
repz
xchg
arpl
ret
addr16
jmp
mov
sbb
xor
sar
jbe
or
xor
sbbb
scas
lods
lret
xchg
inc
ss
scas
and
in
fmuls
pushl
das
jae
mov
or
add
cmp
test
loopne
std
dec
loope
insb
cmp
fldl
ret
push
outsl
mov
and
xor
movsb
push
or
lods
jmp
sub
xchg
aaa
mov
pop
pop
jb
mov
imul
pop
icebp
jno
push
pop
pop
mov
jo
push
shlb
cmp
sub
inc
cld
ret
sbb
inc
xchg
dec
fists
fadds
mov
fstpt
xchg
adc
cmp
or
ja
and
fmuls
stc
jnp
mov
mov
jge
outsb
rcr
leave
dec
aaa
xchg
inc
pop
mov
inc
sbbb
xchg
mov
stos
sbb
mov
clc
out
mov
inc
ds
push
inc
das
int3
push
test
or
inc
and
inc
cmp
cmp
inc
dec
inc
out
repnz
mov
hlt
fxch
fnsave
pop
jbe
or
dec
pop
fsubl
xchg
sti
imul
jns
mov
add
xor
jbe
out
nop
adc
gs
cmpsb
push
mov
fwait
sbb
cmp
imul
mov
sahf
sub
pop
or
jle
jae
cmp
jo
mov
popa
mov
out
add
xchg
outsl
inc
or
xor
inc
push
ret
movsb
and
and
lret
cmpsl
scas
ja
mov
loop
xor
fdivrp
xor
jge
jle
inc
lods
icebp
bound
loope
inc
pop
or
mov
pop
pcmpgtd
cmp
inc
outsb
fstps
fisttpl
inc
fldcw
sub
add
loopne
lods
push
fisttps
push
pop
leave
push
lahf
sbb
push
mov
dec
dec
push
jae
notb
mov
mov
cld
testb
sti
xor
loopne
ja
sbb
ror
aas
fcoms
repnz
ret
mov
movsb
int
rcrb
test
dec
jne
loop
jo
sbb
dec
inc
in
mov
jle
mov
or
shr
cmp
sbb
inc
xlat
xor
das
js
xlat
imull
xor
orl
cli
cmp
gs
popa
ret
stos
push
test
enter
cmc
rclb
cwtl
adc
mov
sub
rcrb
out
jl
mov
imul
incl
cli
and
iret
ss
mov
jb
mov
mov
insl
lods
ror
dec
sub
ficoml
in
lret
insl
aaa
sub
sti
cwtl
cli
movsl
or
sahf
adcb
iret
sub
aas
add
scas
and
aas
in
pop
leave
insb
jno
or
push
sbb
jmp
ljmp
cmp
pop
mov
adc
mov
cltd
adc
lret
ficoml
and
stc
mov
cmp
adc
daa
outsb
out
xchg
dec
jnp
stos
add
cmpsb
adc
sub
sub
push
fwait
pop
or
cmp
mov
jg
dec
pop
jnp
pop
jns
scas
or
xchg
outsb
mov
jae
mov
mov
scas
daa
rcl
mov
or
mov
jbe
fwait
pushf
or
adc
inc
dec
and
leave
add
das
dec
cltd
fidivrl
jbe
or
sahf
jmp
jmp
ss
lret
test
cmp
cld
jno
cltd
jle
lret
sti
sub
xchg
jns
fmul
adc
cmp
mov
aad
mov
ficomps
inc
loopne
sub
xor
mov
dec
stos
sbb
push
mov
cmpsb
add
inc
xchg
fs
fdivrl
cmpsl
push
out
xor
lret
jecxz
popa
loopne
ficoms
arpl
mov
jl
repnz
cwtl
pop
in
daa
xchg
cmp
push
xlat
or
push
rcr
dec
fidivrl
add
or
shll
mov
pop
fdivr
push
mov
inc
rorl
or
sub
pop
jge
mov
cmpb
sahf
xor
sub
jae
hlt
dec
push
jge
out
cmp
sub
ficoms
jnp
xor
push
psubq
jecxz
pop
pop
pop
lods
mov
or
in
dec
dec
jecxz
mov
or
mov
rcr
mov
jecxz
mov
xor
jb
push
les
sahf
mov
cwtl
xchg
mov
push
aad
repz
xor
xchg
mov
scas
mov
mov
mov
jae
jg
or
sbb
fwait
pop
cld
push
xor
sti
fcmovnbe
xor
sub
dec
into
movl
pushf
loop
add
jmp
push
insl
les
fidivs
jmp
aaa
jb
test
mov
iret
mov
adcl
jp,pn
pop
lret
data16
mov
mov
sub
push
cmpsl
pop
push
ret
push
cmpsb
arpl
pop
fstps
in
jmp
adc
mov
fldl
cmc
add
outsl
push
push
test
or
sub
popf
mov
adc
fidivs
xor
mov
aas
pop
add
mov
aam
cmp
ret
adc
mov
sti
movsl
movsb
int3
popf
test
repnz
cltd
bound
je
push
notb
dec
cmpb
out
lods
or
xor
add
lods
jne
stos
dec
fisttps
lcall
outsl
pop
into
sahf
xor
xchg
outsb
test
xchg
jbe
jle
popa
orb
fwait
sbb
push
or
dec
mov
mov
xor
popf
or
mov
mov
fwait
pushf
ret
xlat
insl
cmp
ficoml
fcomps
and
and
push
jp
mov
xchg
insl
jge
loop
popf
movsl
dec
xor
outsb
xchg
mov
divb
dec
rcrb
xchg
add
lds
or
cmc
or
mov
rcll
js
xlat
jb
cmpb
stos
lock
fsubrp
jg
out
inc
sbb
into
mov
pushl
std
jae
jl
xchg
xchg
aam
cmpsb
lcall
fstpt
insl
push
jbe
stos
fidivrl
mov
iret
cmp
sbb
jp
stos
or
adc
lahf
out
rorl
cmpsl
lcall
arpl
pushf
fistpll
fcomps
test
popa
push
sbb
xchg
jle
push
data16
hlt
mov
enter
popf
xchg
pop
mov
jno
lock
stos
dec
addl
les
sub
stos
inc
push
pop
jle
popf
in
dec
adc
pop
dec
jmp
jo
mov
pop
pop
outsl
lock
and
mov
push
push
mov
jle
cmp
fiaddl
addr16
sahf
call
xor
push
jns
fdivrs
sub
sti
xor
dec
inc
outsl
sbb
clc
stos
cld
push
sti
cmpb
push
mov
pop
xchg
inc
int3
sbb
mov
pop
push
out
idiv
and
jecxz
sbb
mov
or
ds
in
shr
lret
iret
jp
xchg
je
xor
or
shrl
mov
clc
push
push
mov
mov
gs
pop
lds
sbb
pop
add
fucomi
cld
dec
jmp
lcall
push
fcomps
mov
and
xlat
pushf
fisttpll
shrl
dec
push
mov
divb
push
cmpsl
not
mov
push
je
sub
xchg
fs
ret
aas
test
adc
pop
or
add
push
rorl
ss
bound
scas
add
repnz
mov
inc
push
mov
clc
inc
jns
lea
leave
cltd
mov
lods
fdivrl
xchg
jl
shrb
push
jo
call
push
cmpsl
lock
bound
adc
movlps
add
dec
push
add
or
mov
xchg
jno
xor
lret
orb
xor
jp
mull
movsl
mov
fwait
addr16
cmp
std
jb
mul
jl
scas
xchg
or
rcrl
sbb
movsb
add
cmp
fs
xor
sub
js
lods
push
adc
adcl
aas
gs
jno
ljmp
imul
sbb
loope
adc
jb
imul
pusha
dec
ss
jns
cwtl
push
jmp
aad
inc
dec
scas
aas
xor
push
cmc
inc
push
push
adc
fnstsw
rorl
gs
cmp
mov
dec
sahf
xchg
out
sub
xor
popf
add
push
mov
mov
lods
sbb
xor
dec
fcmovnu
lods
and
fs
scas
adc
adc
jne
sub
in
jo
ds
and
sub
leave
lret
out
sub
idivl
xchg
loopne
shrb
xor
and
lahf
inc
sub
mull
push
mov
xchg
es
cs
xor
push
mov
lods
fwait
jnp
mov
cmp
cwtl
xor
outsb
push
sub
movsl
mov
xchg
loope
ja,pn
insb
rorb
lret
jge
ret
sti
daa
loope
in
lds
push
inc
sbb
scas
loope
mov
pop
xor
or
inc
pop
test
aas
mov
ficoms
xchg
lds
scas
cmpb
jb
xor
and
xchg
mov
filds
imul
sbb
inc
push
inc
iret
jnp
xchg
jno
mov
jp
cmp
ljmp
mov
cmp
mov
pusha
les
dec
fwait
sbb
xchg
jno
pushl
daa
push
mov
les
mov
sbb
lahf
add
in
and
pop
sarb
sub
mov
jns
dec
sub
out
rcrb
dec
aas
aam
xchg
jns
xchg
emms
add
pop
adc
mov
cs
stos
sub
lea
push
nop
int
mov
repz
outsb
int3
inc
mov
scas
sub
in
jecxz
fwait
inc
adc
cmp
add
cmpb
push
out
stc
addr16
inc
inc
jns
pop
clc
push
adc
dec
test
scas
xchg
jecxz
lret
jge
push
clc
leave
fld
sub
cmp
inc
pop
ret
movsl
test
out
insl
lods
sarl
jg
and
jae
insb
stc
lods
inc
fcompl
fdivp
jo
jl
mov
movsb
mov
adc
xchg
xchg
mov
aaa
xchg
ret
or
push
or
mov
rcrl
pop
xor
xor
and
add
lds
mov
popa
mov
lret
and
xor
cwtd
es
aas
stos
push
lock
negb
in
lea
push
sbb
xchg
out
jne
push
stos
addr16
dec
or
and
mov
or
inc
sahf
jmp
cmc
pop
push
repz
mov
fwait
mov
fcomip
and
xor
aas
out
jo
xchg
orl
shl
mov
push
or
sbb
movsb
jnp
pop
idiv
push
mov
rol
movsl
mov
cmp
es
lods
dec
je
test
scas
ljmpw
sbb
out
mov
aad
sti
es
lret
dec
and
subl
sub
test
pusha
sahf
cmp
les
ret
mov
adc
mov
mov
jae
ficompl
pop
mov
dec
scas
jae
adc
inc
test
jge
mov
or
lea
rolb
shl
mov
int3
daa
jb
add
decl
pop
repnz
xor
lods
push
outsl
lcall
lahf
movsb
or
lcall
mov
xchg
jp
out
subb
lea
jg
aam
setbe
scas
rcl
cmpsl
ret
mov
mov
lahf
ljmp
inc
xchg
aas
fldl
inc
fisttpl
mov
pop
bound
or
popa
mov
scas
mov
mov
inc
and
mov
cli
xchg
rcl
xor
outsb
xchg
adc
dec
mov
or
cs
pop
jno
xchg
in
lcall
xchg
add
pop
aad
sarb
pop
fsubrl
pop
xor
loop
je
add
mov
cs
jle
stc
sub
aaa
out
mov
xchg
out
xor
and
push
ds
lods
ljmp
into
imul
js
imul
jl
stos
scas
push
scas
push
push
jns
sbb
fadds
sbb
bound
mov
fadds
outsb
mov
faddl
out
xchg
imul
xchg
cli
and
pop
fcomp
js
or
cmp
or
xor
sahf
sbb
jb
push
out
sbb
popa
xchg
and
cmp
sbb
mov
push
pushf
hlt
insb
shrl
js
xor
pop
in
repz
sarb
or
mov
xchg
push
daa
mov
inc
and
pop
das
imul
xchg
sbb
mov
push
clc
iret
inc
xor
inc
jmp
and
stc
cld
je
loop
xchg
adc
sub
das
je
enter
add
cmp
es
sbb
stos
mov
and
andl
sub
mov
sbb
flds
fwait
les
dec
or
out
repz
daa
dec
test
insb
adc
out
mov
mov
leave
push
push
cwtl
xchg
pop
inc
lods
xchg
sbb
inc
rolb
xor
push
std
in
push
stos
in
test
ja
ret
xchg
fcmovnb
iret
test
jns
fstps
xor
cltd
leave
dec
xchg
dec
sbb
flds
pop
cmpsb
hlt
push
mov
sub
js
mov
fwait
cmp
shll
insl
ds
in
jae
xchg
jae
mov
sub
and
or
mov
ja
cmp
push
inc
hlt
sarb
cmp
fisubrs
adc
ss
sub
insb
pop
mov
outsb
mov
pop
inc
cmp
movsl
xchg
lods
push
pop
int
hlt
sarb
pop
hlt
mov
push
and
imul
jbe
scas
inc
lret
je
ja
inc
add
jbe
and
pop
ds
add
out
mov
cmpl
mov
push
pop
and
and
imul
jmp
xchg
xlat
jnp
sahf
push
orl
and
dec
add
sub
cld
jno
stc
lods
xor
test
in
jmp
dec
xchg
bound
ss
test
leave
call
cmp
rcll
insl
pop
in
inc
enter
pusha
mov
les
sub
mov
cmp
jno
or
clc
in
or
mov
sub
jbe
aaa
insl
push
xchg
lea
gs
sub
xchg
popa
cmp
adc
mov
push
xchg
lods
xor
les
cmpsb
mov
clc
push
mov
aam
ror
movsl
inc
inc
mov
jb,pt
sub
pop
rolb
loop
inc
cwtl
and
pop
and
cmp
xor
ljmp
scas
add
mov
dec
mov
clc
pushf
rclb
inc
ret
sbb
bound
mov
fmuls
les
add
push
and
cld
xor
enter
aaa
jmp
xor
mov
adc
mov
mov
push
int
gs
dec
testb
shlb
js
mov
push
insb
js
pop
jg
and
outsl
in
sub
stos
jle
cwtl
fs
pop
xor
jmp
add
rorb
dec
mov
popl
inc
jno
xchg
add
ljmp
sbb
lods
push
cld
dec
std
mov
mov
push
mov
fisubrs
lahf
inc
aas
xchg
bound
out
or
lcall
mov
cltd
sbb
inc
and
ja
inc
and
mov
xchg
or
push
fwait
imul
insb
push
cs
xchg
in
jge
inc
inc
jns
inc
mov
mov
mov
aaa
adc
and
adc
pop
dec
dec
fucomp
inc
mov
pop
xor
test
in
repnz
lret
imul
pop
dec
pushf
repnz
movl
cmp
arpl
jle
test
inc
mov
xchg
cltd
push
sahf
in
and
negl
sbb
lret
rep
ss
mov
es
jne
int
faddl
jne
cmp
jmp
sarl
fstl
push
or
pop
rol
adc
mov
popf
adc
out
hlt
xchg
sbb
clc
push
or
in
pop
jge
pmulhw
mov
xchg
pop
inc
or
ljmp
inc
mov
loop
dec
xchg
cmc
inc
dec
or
popa
pop
into
aam
stc
fwait
adc
dec
test
jno
adc
mov
jp
enter
shl
dec
pop
jns
mov
adc
dec
ds
or
insl
mov
mov
sbb
clc
fwait
jbe
movsb
push
lea
fwait
add
inc
xor
bound
xlat
test
or
lret
push
and
js
or
lahf
fcompl
movsb
jno
in
add
cmp
add
inc
mov
push
repnz
outsl
fists
sahf
out
push
adcb
sub
jae
nopl
fistps
pop
sbb
fisttpl
pop
dec
scas
nop
adc
push
shrl
dec
push
inc
popa
dec
inc
shll
sub
jmp
sub
ficomps
cmpsb
push
inc
ret
icebp
xchg
cli
inc
jnp
es
and
test
int
xchg
add
cmp
fldcw
jge
ret
or
sub
subl
add
ret
xlat
into
mov
xchg
out
push
lret
test
repz
stos
pusha
pop
jns
cmp
out
mov
aaa
sbb
mov
cli
pusha
inc
sub
cmp
xor
add
pop
orb
dec
stos
enter
jae
sub
mov
push
adc
jne
seto
cmpsb
pop
sarl
repnz
adc
popf
push
and
movsb
inc
dec
leave
cmp
push
adc
sub
lret
ret
flds
orl
sbb
jno
dec
mov
lods
xor
mov
mov
dec
pop
mov
into
xor
fwait
or
fsubp
lds
fsubs
add
adcb
ret
jbe
in
out
cmpsl
lcall
in
adcb
jge
stc
cwtl
mov
sbb
mov
xchg
xor
jb
leave
shr
jecxz
mov
xchg
push
dec
cmc
jno
mov
mov
pusha
jne
out
lahf
inc
dec
inc
mov
mov
outsl
dec
enter
cli
xchg
mov
cmpsl
lcall
gs
ret
mov
out
imul
loopne
in
inc
pop
lds
push
add
movsl
into
sbb
xchg
cld
stos
out
movsl
into
fidivrl
ss
rorl
fnstcw
xor
stos
and
xor
fistl
int
jmp
mov
out
inc
fs
aad
flds
loop
push
push
outsl
popa
add
leave
sbb
inc
push
aaa
cmp
pop
or
sub
and
movsl
shlb
xor
lods
repnz
jecxz
fwait
test
jns
movsl
dec
inc
nop
jnp
rorb
adc
mov
mov
mov
sub
adc
nop
popa
in
cld
push
sbb
int3
add
andb
popa
jae
rorb
loope
sbbb
gs
push
incl
mov
mov
lock
fwait
rcr
dec
cmp
ficoms
jo
add
dec
push
push
repz
lcall
and
nop
lret
outsb
xchg
repz
mov
cmpsl
xchg
aas
arpl
into
adc
lock
cmc
rorb
push
xor
push
jge
cli
cmpsl
adc
cmp
std
mov
xorb
xor
popa
mov
inc
add
adc
iret
repnz
insb
cld
jns,pn
int
in
jl
sub
sahf
jo
js
fbld
inc
out
aaa
mov
out
jp
repz
xchg
dec
sub
fildll
fadd
mov
loopne
in
xchg
sub
jne
jo
out
clc
add
adc
repz
iret
jo
sarl
pop
inc
cmpl
inc
xor
fists
fwait
test
inc
push
cmpsl
shlb
fstpt
jb
psraw
loop
insb
xchg
dec
aas
mov
push
cwtl
lods
fiaddl
ljmp
push
jecxz
fidivl
push
lods
or
mov
ljmp
mov
insb
push
test
jno
add
mov
repz
ret
lock
in
out
inc
loop
inc
mov
scas
mov
add
negb
out
xchg
daa
mov
rcrb
shl
cmp
leave
test
pop
push
cmpsl
xchg
dec
pop
or
outsl
lcall
mov
inc
xor
inc
in
xorb
aas
pop
repnz
jo
add
dec
push
inc
das
dec
mov
xor
es
lret
das
sbb
push
clc
adc
sti
mov
aas
push
sub
int
push
mov
fdivs
lods
mov
sbb
scas
cltd
loopne
mov
sarb
cltd
or
mov
fdivrp
loope
jns
and
jmp
into
ss
imul
pusha
mov
add
jge
les
stc
xorl
shll
filds
or
aaa
orl
mov
inc
sbb
daa
icebp
aam
mov
push
lods
insb
fsubs
data16
add
inc
je
sub
mov
aad
popa
add
mov
pop
fistpll
push
in
scas
jb
pop
push
xor
lds
lods
outsb
repnz
jae
mov
push
ss
cwtl
and
faddl
jle
imul
dec
sbb
and
ja,pn
pop
mov
pop
dec
cmpsb
inc
xchg
xor
mov
push
test
adc
insb
mov
mov
push
dec
loop
inc
inc
mov
loop
stos
movsw
stos
cmp
lock
jnp
mov
cmpl
lret
or
ret
xor
aad
inc
js
mov
faddl
arpl
rcl
pop
pop
and
aam
push
cltd
popa
mull
or
pop
pop
and
push
das
loopne
pushf
inc
jno
sub
shll
xlat
mov
inc
pop
rorb
jns
leave
test
notl
adc
sub
es
push
cmp
hlt
stos
jmp
pop
bound
xor
out
mov
add
scas
stc
fnstcw
jmp
popf
push
sti
cld
inc
imul
int
cwtl
aam
push
pop
sub
cmc
dec
pop
ss
push
sbb
fsubp
lcall
movsl
icebp
pusha
xchg
add
cmpsb
xchg
inc
inc
and
jns
cwtl
lcall
ds
insl
add
lcall
dec
ja
sbb
pop
jne
ds
movsl
adc
jns
cmp
test
pushf
or
pop
sbb
in
sbb
inc
or
xrelease
xchg
xchg
addl
lret
xchg
in
daa
mov
xchg
ret
jl
jb
xor
add
lods
inc
fmull
divl
rclb
sbb
and
addr16
pushl
dec
jmp
hlt
inc
stos
ret
je
and
test
enter
inc
cs
nop
sbbb
ds
movsb
or
and
arpl
push
lret
xor
jle
push
adc
or
fcomp
lock
idivl
push
pop
test
inc
push
je
js
cmp
sarl
mov
sahf
mov
cmc
pop
pop
repnz
pop
ret
jge
push
or
stos
aaa
pop
mov
xor
out
jmp
icebp
mov
jb
scas
jp
jo
das
add
push
jno
imul
cmpsb
adc
mov
shrl
adc
push
xchg
pop
pop
add
or
mov
jl
mov
pushl
xchg
xchg
dec
push
jno
aas
mov
lret
inc
outsb
icebp
out
fildl
lahf
frstor
ss
ror
inc
popa
dec
pusha
pop
imul
jmp
xchg
ret
outsb
dec
sbb
add
xor
sbb
or
sbb
mov
or
jmp
add
std
mov
ret
dec
loopne
lret
lock
and
and
jp
mov
aaa
jecxz
aam
scas
add
ficoml
push
push
pusha
mov
jp
pop
repz
inc
cmp
jbe
jl
add
push
dec
int
frstor
or
inc
xchg
mov
pop
ljmp
or
pop
clc
sbb
xor
cltd
movsl
pop
jno
aad
mov
fwait
jnp
loope
ja
or
pushf
pop
sbb
imull
mov
lret
dec
shlb
lods
mov
in
adc
call
adc
fstps
inc
dec
stc
and
lea
lcall
mov
xor
mov
cmp
call
arpl
pop
lock
mov
mov
sbb
cmpsl
pushf
mov
cmp
add
mov
xchg
pusha
sub
test
sbb
fistl
xor
dec
mov
fldcw
and
daa
punpckhbw
iret
fsubrl
xchg
cli
adcl
lods
call
or
aas
cli
loopne
mov
leave
enter
add
roll
jle
cmp
scas
cwtl
shlb
negb
xchg
and
divl
jns
dec
push
push
test
sub
xchg
pushf
test
xor
push
inc
sub
lods
movsl
jo
pop
clc
mov
push
aas
and
shl
aaa
fisttps
orl
cld
mov
sbb
push
mov
xchg
mov
adc
sbb
mov
lods
fldt
addr16
bound
adc
adc
or
xor
xchg
orl
or
cltd
inc
iret
adc
test
mov
cwtl
xchg
dec
in
or
push
in
mov
test
sbb
jbe
jl
cmp
aad
sub
jmp
or
hlt
insb
sub
je
pop
std
repz
rcll
adc
arpl
inc
out
push
xor
mov
mov
sti
pushf
icebp
mov
das
mov
and
sbb
cmp
cmpsb
ret
sub
popl
mov
loop
dec
xor
aas
bswap
xor
mov
push
mov
jns
mov
pop
jae
cmpsb
dec
fwait
inc
bound
push
cmpsl
cs
xor
xor
xor
jl
cmp
mov
out
in
test
xchg
je
inc
and
ret
mov
inc
aam
sbb
call
pop
stos
call
inc
cmp
sbb
addl
add
jo
jmp
add
mov
add
je
push
aam
sbb
hlt
fildll
pop
mov
xorl
sti
mov
or
push
jl
out
fwait
bound
sub
inc
cmc
mov
lea
sub
inc
cmp
out
out
jmp
sbb
add
mov
rcl
sbb
ja
push
repnz
pop
loope
fimull
push
hlt
jne
jo
fists
callw
cld
cmp
mov
imul
push
icebp
add
inc
sbb
jp
sbb
xchg
cmp
lods
pop
mov
push
push
adc
sbb
stc
cmpsb
sbb
pop
dec
lcall
in
test
and
push
or
push
aas
or
fimull
cmp
roll
cmp
or
add
outsb
pop
jno
loope
push
fwait
inc
mov
xchg
mov
push
inc
or
scas
sub
adc
xor
cmpsl
cpuid
movsl
pop
add
repnz
loop
adc
fstpt
rorl
lcall
jmp
idivl
out
sub
enter
or
cmc
popf
inc
rcrb
push
into
out
mov
ss
popf
add
sub
pop
mov
inc
fucomp
push
popa
fdiv
sub
mov
outsb
je
jg
xchg
mov
repz
pop
popf
mov
imul
idivl
xchg
xor
pop
idiv
pop
lods
push
adc
rclb
and
aaa
je
and
adc
mov
push
js
inc
sub
lret
xor
lea
pmulhuw
sub
sub
pop
stc
cltd
fs
xchg
mov
gs
ret
xchg
ljmp
outsb
lds
xor
cmp
loopne
icebp
rcll
pop
or
leave
lds
loopne
das
dec
lock
inc
sbb
daa
xor
jno
xorl
inc
adc
popf
sbb
xchg
mov
andb
mulb
pop
lahf
pop
mov
xchg
mov
outsl
sbb
jle
and
sti
stc
sbb
dec
mov
or
jno
mov
pop
push
roll
and
add
mov
lahf
xchg
clc
outsb
dec
push
lods
addb
inc
mov
fsts
bound
pop
add
pop
test
mov
adc
std
mov
jp
jo
icebp
xorl
fstp
nop
andl
add
mov
aad
hlt
sub
cli
outsb
dec
xchg
ja,pn
arpl
into
pusha
jnp
jmp
notb
es
popf
sbb
push
arpl
movl
retw
xor
jno
sub
push
cltd
adc
outsb
shlb
jecxz
pushf
das
into
repz
pop
cmp
mov
pop
lret
popa
mov
movsl
xor
add
pop
cs
mov
adc
imul
je
stos
pop
sbb
and
pop
in
les
cwtl
scas
stos
xor
push
or
into
pop
mov
sub
ja
mov
clc
lahf
mov
push
xchg
mov
into
inc
addl
int3
pop
xchg
out
jg
add
and
jne
xchg
pop
mov
push
push
ret
idivb
push
ret
mov
movsb
lock
test
dec
adc
mov
xchg
scas
test
push
xchg
sti
sbb
testl
dec
sub
stos
mov
loope
xchg
cwtl
or
fsub
pushf
push
pop
aaa
popf
int
std
xchg
inc
fldl
ss
xchg
mov
cmpsl
sbb
ret
mov
jbe
xchg
jecxz
mov
cmpsb
mov
push
ja
push
ja
mov
repnz
pusha
lods
pusha
jne
scas
imul
shlb
mov
in
int
pop
mov
or
dec
jmp
fistl
mov
lahf
ret
or
push
or
ja
subb
sbbb
xor
lret
add
je
sub
incb
outsb
repnz
out
mov
adc
cmp
inc
sbb
xorb
movsb
mov
jl
fistpl
push
pop
xor
inc
test
jp
lods
pop
xor
adc
dec
out
arpl
pop
fisubrs
and
add
mov
outsb
loope
push
cli
stc
addr16
push
stos
jbe
decl
jg
cli
or
mov
mov
xor
cltd
pushf
fcomps
lahf
leave
in
mov
lods
mov
jne
jnp
jmp
ss
lea
or
inc
sub
inc
xchg
sub
sub
adc
xor
adc
mov
xor
aaa
and
and
into
imul
sbb
mov
jmp
xchg
imul
jp
lds
hlt
inc
sbb
xlat
xchg
cmc
ss
fidivl
sub
inc
xchg
cltd
xchg
aaa
ja
in
xor
add
repz
outsb
inc
or
jae
sub
sahf
mov
sahf
les
movsb
cmp
insl
test
bound
mov
fwait
cs
adc
cmpsb
mov
push
int3
xchg
pop
sub
in
dec
stc
and
mov
sbb
push
mov
adc
adc
sbb
mov
pop
rcl
outsl
loopne
jno
cmp
and
and
jbe
cltd
adc
imul
cmpsl
pop
mov
xchg
pop
in
jp
add
lea
fisubs
scas
dec
pop
xor
adc
jmp
sbb
insl
arpl
mov
daa
jecxz
popaw
out
cmp
movsl
je
jecxz
js
jns
cmpsb
shrl
push
sbb
xor
shrl
xchg
out
add
mov
sub
add
sbbb
shr
in
leave
lods
fadds
mov
pushf
jbe
popf
neg
xchg
xor
stos
jle
popl
cmpsb
fsubr
repz
xchg
push
pop
inc
mov
pop
popf
pop
dec
sbb
movsl
pop
out
add
out
jl
lea
ljmp
es
fstps
mov
xchg
sub
iret
inc
jl
mov
pop
push
sub
insl
pop
cwtl
mov
or
mov
cli
outsb
mov
lahf
xor
xchg
adc
shl
mov
cmp
add
js
bnd
dec
sti
cmp
mov
lcall
mov
fldcw
or
adc
rcrl
test
dec
insl
fs
mov
ret
clc
jp
and
jmp
bound
dec
pop
inc
dec
sahf
and
incb
repnz
aaa
push
insl
lret
mov
loop
mov
aaa
pop
or
leave
mov
or
add
adc
int3
aas
test
pop
mov
xchg
bound
pushf
jl
hlt
pop
gs
xor
mov
test
mov
dec
mov
cmp
jmp
jnp
mov
loope
rolb
push
mov
hlt
xor
add
or
repnz
out
repz
out
jl
es
stos
out
outsl
push
mov
dec
jmp
xlat
lret
fimull
xchg
in
dec
es
and
push
nop
out
stos
xchg
xchg
nop
sub
adc
jno
push
jp
inc
inc
movsb
inc
mov
fistps
add
or
mov
rcrl
lret
jnp
mov
call
cs
fcmovnu
lods
dec
mov
and
xorl
push
lods
lods
sub
xchg
add
mov
pop
xchg
mov
loop
push
scas
dec
insb
inc
mov
or
int3
push
lret
inc
ja
sub
adc
push
and
sbb
fldenv
test
lahf
scas
insb
enter
cltd
mov
gs
jg
in
add
fwait
inc
aas
test
movsl
shrb
sub
or
jle
loope
movsl
mov
mov
sub
imul
sbb
lea
inc
and
or
call
sahf
mov
mov
loop
jno
lea
fwait
dec
xor
mov
xor
adc
adc
dec
out
aad
test
aas
cmp
and
add
outsb
out
mov
push
pop
testl
inc
mov
leave
cmpb
mov
xchg
iret
push
stos
xchg
jae
lods
test
pop
lret
fstl
lahf
sahf
pop
fcompp
xor
sbb
stc
cmpps
cmp
or
clc
repz
push
mov
add
out
jle
aaa
ja
aad
jne
js
scas
adc
js
cmpsl
pop
lds
mov
xchg
sub
jo
insl
cli
setno
lds
xor
add
out
sub
push
add
jp
in
mov
ret
addr16
arpl
stc
fdivrp
loopne
or
ss
jo
in
pop
ss
and
clc
fcoms
jmp
int3
and
movsb
in
mov
mov
jle
lret
mov
xchg
xor
insl
xchg
jne
pop
xchg
xlat
or
xor
ret
jns
xor
mov
push
ljmp
aaa
fistl
cs
js
cmc
lcall
dec
pop
test
scas
das
test
ds
sub
and
mov
insb
mov
mov
lods
xchg
pusha
or
xchg
test
ficoml
mov
xor
push
inc
sub
cmp
pop
push
dec
dec
cmp
mov
xor
mov
out
pop
faddl
jg
in
lret
pop
clc
jecxz
sub
inc
pop
out
sub
inc
dec
mov
mov
pop
ja
into
xorl
mov
jmp
and
jp
call
in
ja
mov
pop
jl
pop
cmp
idiv
pop
lock
dec
in
sbb
es
mov
outsb
mov
repnz
mov
cmp
rclb
dec
nop
sti
mov
in
cmp
sbb
imul
and
in
test
pushf
and
sub
xchg
inc
xchg
dec
dec
xchg
ficomps
jle
negb
ljmp
pop
mov
xor
lahf
aas
inc
lds
inc
jecxz
pop
cmpsb
push
stos
daa
cmc
mov
jno
mov
inc
test
lds
adc
in
loop
add
lods
test
movsl
fistl
xchg
scas
movsb
adcb
mov
and
sbb
out
adc
aas
adc
fists
dec
sti
shl
xchg
xchg
and
sub
clc
xor
in
stos
mov
mov
cmp
int3
mov
fbstp
sbb
mov
cmp
lods
push
cltd
jno
inc
add
cmp
cmp
das
dec
mov
lock
jge
das
cwtl
jle
out
pop
jno
jmp
jnp
test
xor
rorl
adc
mov
mov
and
xor
mov
out
add
movsb
and
ljmp
jp
call
insl
mov
inc
insl
push
cmp
insl
in
xchg
cmpsb
mov
int3
and
dec
in
push
push
bound
sub
cwtl
sbb
js
scas
ja
cltd
out
aas
dec
repz
adc
or
ss
imulb
scas
ljmp
pusha
add
mov
fs
xchg
sarl
sti
gs
mov
out
out
push
cwtl
cs
jg
das
adc
push
dec
push
outsl
aas
scas
mov
mov
cmp
lock
mov
mov
sub
mov
inc
or
add
add
int3
push
mov
fiadds
mov
std
movsl
ret
mov
pop
repnz
fwait
movsl
jg
pop
xor
add
mov
icebp
fadds
push
in
mov
dec
mov
cld
popa
or
data16
je
or
pop
mov
xor
dec
aad
pop
mov
add
arpl
lret
sahf
daa
bound
cmp
lods
adc
cmp
iret
sbb
mov
mov
jmp
sbb
fildl
inc
sub
lods
imul
fiadds
test
add
or
push
xor
or
mov
push
sub
and
pop
xor
or
outsl
bound
dec
jbe
sbb
jmp
adc
cld
insl
push
mov
aaa
add
dec
push
dec
adc
cmpsl
mov
fwait
std
repnz
jo
sbb
jne
push
dec
xor
dec
ficomps
js
sbb
sbb
lret
in
outsb
subb
xchg
pop
pop
cmpb
sbb
jp
fists
push
lret
ret
dec
iret
repnz
inc
fdivrs
jl
mov
lahf
xor
xchg
loope
imul
jae
push
imul
cmpsl
xchg
or
push
popa
sbb
test
cmp
in
pop
mov
or
lock
sbb
into
adc
aam
sarl
loope
mov
mov
xchg
in
adcb
mov
imul
inc
testl
mov
ja
mov
mov
cmp
mov
sub
jbe
or
mov
out
xchg
iret
cmpsl
pop
sbb
xchg
mov
shlb
push
test
push
adc
push
pushf
sub
mov
xor
mov
or
pop
pop
jg
ror
jge
mov
fildll
jnp
out
xchg
sbb
push
inc
sub
dec
outsl
subb
mov
fs
pop
add
mov
mov
data16
fidivrs
pop
jecxz
rclb
outsl
mov
lock
leave
gs
decl
xchg
das
add
outsb
imul
testl
cmp
pop
xchg
mov
dec
mov
sahf
mov
jno
movsb
insl
rcr
outsl
cltd
lods
ljmp
daa
adc
xchg
sbb
outsb
pushf
in
stos
jae
cld
push
inc
fimuls
ds
or
xchg
outsl
dec
test
sub
pop
cmc
stos
shlb
cli
inc
jp
push
push
leave
aad
shll
xor
jecxz
cs
in
test
add
lods
mov
mov
inc
inc
push
jno
or
mov
fwait
insl
sub
jno
sub
rep
jp
sub
adc
adc
stc
adc
pusha
add
fidivs
stos
lock
pop
lods
lcall
fcomps
and
add
jmp
ret
xor
jecxz
xor
push
shrb
out
fidivs
dec
dec
insl
shrl
add
pop
jo
pop
pop
push
inc
out
adc
cmp
mov
dec
add
out
dec
pop
imul
fdivrl
ds
daa
dec
test
outsl
outsb
lret
xor
mov
ja
ficoms
push
and
cs
lock
loope
dec
dec
or
lods
sub
roll
leave
rclb
mov
mov
scas
xor
dec
imul
xor
out
ficoml
mov
sbb
mov
xor
inc
test
fcomps
mov
dec
add
aad
add
test
sbb
jge
out
andb
imul
adc
mov
mov
js
dec
adc
cmc
inc
pop
pop
xchg
ret
push
sub
popf
int3
sbb
fucomp
addr16
or
push
test
pusha
lds
xor
jb
or
mov
xchg
jae
xor
movsb
imul
fisttpll
fstl
pop
jg
mov
in
neg
cltd
dec
or
hlt
je
shrb
mov
sbb
aam
das
jns
jae
popf
sbb
adc
outsb
mov
rcll
subb
mov
stos
dec
mov
testb
test
push
loop
sarb
mov
ljmp
push
dec
mov
push
aam
adc
mov
aad
pop
jae
jp
mov
pop
cmp
sahf
push
push
or
jnp
enter
adc
pop
dec
xor
xchg
leave
daa
or
cmp
push
gs
mov
jns
faddl
sub
repz
ljmp
testl
sub
movsl
cltd
xchg
cltd
sub
or
cmp
add
push
or
dec
test
dec
out
lret
shlb
enter
pop
lods
pop
rorb
cmc
in
popa
jnp
sub
jne
movsb
mov
push
mov
pop
fsubr
std
sbb
ss
pop
or
xor
mov
sbb
pushf
xchg
add
mov
sbb
adc
std
inc
push
mov
mov
stos
add
out
mov
jle
rcl
pushf
sub
out
outsb
jge
push
add
mov
inc
xchg
sbb
mov
pop
jecxz
cmpsb
out
pop
imul
push
adc
xchg
scas
mov
insb
mov
inc
xchg
lcall
mov
sbb
mov
mov
jbe
addr16
rcrb
mov
int
rcll
es
sti
sarb
dec
push
xor
push
lret
imul
in
push
push
jmp
jb
mov
int
cmp
lgs
aad
jmp
jne
dec
fsubs
mov
push
mov
jg
iret
stos
mov
adc
jmp
int
add
pop
push
inc
imul
mov
mov
fdivrl
xchg
pop
push
or
jo
out
shrb
xchg
jne
push
test
lret
xchg
cltd
pop
adc
ret
int3
push
xchg
js,pt
je
jg,pn
push
out
and
inc
and
mov
js
xor
or
mov
dec
faddl
imul
aas
ljmp
mov
inc
subl
outsl
fstl
cltd
cmpl
lods
push
test
sbb
sbb
jmp
gs
jp
lds
ret
inc
mov
push
mov
stc
enter
ds
scas
loopne
xchg
in
std
adc
push
sbb
mov
mov
sub
jns
imul
mov
inc
ja
lods
cmp
xchg
mov
das
scas
push
xchg
adc
sub
sbb
mov
shrl
lods
jge
cmp
mov
jbe
mov
rol
gs
out
test
mov
rcll
xor
sub
aad
mov
leave
test
inc
cmpsb
inc
cltd
and
jno
sbb
das
mov
mov
or
cs
pop
popf
sbb
es
out
es
pusha
je
or
jl
int3
mov
mov
jns
mov
dec
pop
mov
fwait
rcll
out
es
mov
stos
push
push
xchg
ja
out
out
mov
xchg
mov
jecxz
cmp
xor
inc
enter
subl
add
cmc
lcallw
in
lret
fmuls
push
or
xor
mov
iret
jecxz
mov
inc
xor
sub
jl
int
mov
inc
arpl
fs
inc
loopne
mov
mov
jno
sub
lods
pop
sub
cmc
inc
pop
mov
ds
xor
js
cmpb
jo
aaa
add
fstp
and
mov
flds
push
push
es
clc
movsb
in
iret
data16
lods
sbb
jg
sbb
pop
addl
or
mov
cmc
add
sbbb
xor
imul
xchg
sbb
jno
cmp
ja
push
pop
sti
loope
lods
pop
gs
cmp
stos
xlat
cmpsb
jo
dec
mov
mov
push
and
push
lahf
xlat
cmp
fdivs
in
mov
push
xor
sub
movsb
xorl
pop
lock
daa
ret
inc
and
cmp
in
cmp
stos
jmp
xchg
outsl
mov
jl
xchg
jbe
lret
or
test
fwait
or
push
pop
nop
sti
push
nop
adc
xchg
lods
push
push
in
mov
fists
push
xchg
cmp
sub
cs
dec
jns
xchg
sub
into
lods
pushf
xor
inc
push
sbb
inc
xchg
fsub
jae
mov
ljmp
fldl
insl
iret
insl
push
cwtl
mov
movsb
dec
cmp
inc
add
repnz
xchg
mov
ss
lret
shll
loopne
and
sbb
sbb
arpl
xchg
mov
push
push
test
std
je
popa
aas
loopne
pop
sub
mov
inc
cmp
aad
ja
jnp
jo
inc
cmp
sbb
pop
fwait
and
jmp
mov
cltd
mov
cmp
insb
jns
insb
inc
into
pop
push
imul
cmp
xor
pop
shrl
cs
cmp
add
sbb
xchg
mov
ss
sub
mov
pusha
mov
repz
or
aas
dec
out
mov
ljmp
cmpsb
dec
push
xchg
fimuls
in
or
fnsave
outsb
sbb
loop
loopne
les
adc
int
mulb
pop
xchg
pop
pop
pop
sbb
pushf
cwtl
dec
add
fs
sub
mov
lea
sarl
rcrb
push
pop
clc
mov
repnz
cld
or
xchg
ret
pop
add
push
cli
dec
ja
out
push
enter
push
jno
pop
dec
xor
pop
enter
out
mov
mov
cmpsl
jae
sahf
ss
pop
sbb
pop
test
push
ds
jge
cs
mov
xchg
dec
sbb
add
push
and
or
sub
jp
enter
pop
sbb
rcrl
shll
xchg
or
inc
mov
insl
sub
loop
adc
push
cltd
pop
pop
gs
je
inc
sbb
dec
fisubrs
bound
or
or
loop
sbb
cmp
jnp
and
mov
or
jno
cmp
pusha
mov
cmp
lret
push
or
pop
push
decl
popa
fdivs
xor
and
sbbl
ret
jb
mov
lret
cld
ja
jno
push
add
push
leave
jl
mov
je
cmpsb
push
je
shlb
hlt
cltd
stos
fndisi(8087
cwtl
call
ds
repnz
cmp
shrb
and
jnp
test
loop
out
imul
push
or
gs
xchg
stos
pop
and
dec
lret
pop
adc
testb
and
inc
in
pop
push
dec
dec
jle
mov
pop
hlt
rcrl
aaa
add
push
pusha
aas
imul
sarb
cmp
pop
add
inc
xor
leave
xorl
jmp
hlt
loopne
pop
pop
ja
shlb
loopne
push
adc
and
pop
in
dec
cmpsl
loopne
push
pusha
sbb
adc
xchg
adc
cmpsl
aaa
cmpsb
cltd
pop
mov
sbb
mov
scas
lea
and
mov
jmp
clc
push
inc
stos
pop
xchg
sub
js
loopne
mov
pushf
cmpl
pop
push
or
xchg
mov
lods
aas
aam
mov
mov
dec
and
sub
add
imul
in
pop
jle
aas
fildl
ss
jl
and
arpl
cltd
dec
jl
or
push
insb
sbb
push
pop
fcmove
jns
fmuls
or
inc
mov
and
jbe
outsb
mov
mov
pop
cmp
scas
mov
popa
adc
test
push
lahf
add
inc
div
push
enter
icebp
test
punpcklbw
mov
mov
loop
add
mov
popf
or
xor
adcb
push
mov
lahf
leave
adc
mov
negb
das
dec
loope
mov
aad
sub
cmpl
fisubrl
mov
mov
ret
pop
jmp
mov
dec
pop
xor
cmp
popf
and
dec
mov
movsb
nop
gs
pop
and
insb
push
enter
jo
iret
jle
aaa
scas
test
push
cld
adc
inc
ds
fincstp
xchg
sbbl
jb
adc
sar
mov
cmp
sbb
jae
dec
pop
push
adc
mov
push
adc
dec
mov
jbe
clc
jl
or
mov
cli
cmc
inc
mov
sub
outsb
xchg
mov
ds
sar
cli
cmp
dec
fnstsw
fsubl
mov
iret
fnstsw
fdivr
and
ds
lea
mov
divl
jg
cmp
and
mov
mov
mov
lcall
stos
add
movsl
popf
fst
add
xchg
mov
mov
mov
out
movsl
loope
jbe
adc
cltd
sub
add
ljmp
mov
mov
xor
insb
sbb
rol
cmp
xchg
dec
pop
imul
mov
negl
lea
or
mov
sahf
in
add
enter
test
xbegin
push
insb
jae
xchg
inc
lret
adc
mov
mov
pushf
shlb
mov
fwait
mov
js
imul
decl
sbb
data16
sbb
loopne
inc
rcr
jno
pop
sbb
ss
addr16
les
shrb
push
dec
pop
fdivs
mov
cmp
adc
pop
leave
subl
lods
orb
sbb
mov
in
xor
iret
in
lock
test
dec
lods
dec
add
cmpsl
out
push
daa
push
sti
add
add
sbb
fstps
cmc
cs
push
mov
les
insl
or
xlat
cmp
lods
ds
jns
cmp
lret
insl
fs
jo
push
repz
xchg
aad
sti
xor
adc
mov
inc
ds
daa
lods
pop
aad
iret
scas
outsb
and
cwtl
ljmp
dec
mov
insb
mov
mov
or
popa
fsubrs
xchg
jecxz
negl
test
inc
cmp
pop
stos
ds
out
push
stos
inc
sbbl
or
mov
inc
push
sbb
xlat
bound
es
daa
jno
jno
aad
test
push
or
fxtract
sub
or
or
mov
imulb
aam
mov
mov
ret
imul
pop
mov
fldcw
or
adc
int
push
push
inc
sti
dec
outsl
dec
insb
cmp
inc
inc
js
cmp
bndstx
sahf
data16
adc
push
cltd
repnz
in
aas
out
inc
sub
popf
dec
jo
xchg
lret
cmpb
rcr
xchg
xor
into
xchg
pshufw
mov
imul
dec
dec
adc
ret
mov
mov
push
movsl
add
adc
and
dec
out
push
push
pop
dec
xchg
sbb
lret
imul
pop
scas
jbe
mov
inc
rorl
inc
outsl
mov
aaa
adc
inc
test
fildll
jns
stc
std
push
cmpsl
mov
xor
in
sti
ja
jmp
loopne
leave
mov
sub
out
cmp
test
sbbl
pop
sti
testl
and
stc
hlt
les
or
adc
std
xchg
push
psubusw
imul
aas
pop
xchg
dec
stos
repnz
lret
jmp
inc
push
test
mov
dec
cmp
fwait
ja
test
cs
cs
js
shl
pop
mov
cmpl
js
insb
jb
sub
sarb
rolb
aaa
push
push
pop
pop
mov
out
and
out
sti
inc
or
jecxz
push
mov
add
mov
lds
dec
mov
neg
js
pop
cmp
xchg
pop
inc
push
dec
push
hlt
repz
xchg
call
frstor
shrb
fisubrl
aas
jmp
popf
xor
xchg
pop
loop
ja
mov
sub
sub
bound
test
fmuls
leave
std
loop
push
dec
mov
dec
popf
pop
sti
mov
arpl
or
pop
rcll
inc
sarl
pop
mov
dec
and
out
mov
testl
sbb
out
and
xor
mov
sarb
jl
mov
arpl
inc
clc
repz
dec
and
push
sbb
push
cmc
shll
add
movsl
sarb
inc
xor
stos
in
cwtl
movsl
push
cmc
sbb
push
arpl
push
inc
loopne
mov
hlt
sbb
inc
aam
xor
aad
jecxz
out
adc
in
ja
xor
call
cs
nop
push
xor
jnp
sar
pusha
mov
fwait
push
mov
repnz
lods
sti
jmp
adc
int3
jmp
les
push
jo
lcall
dec
icebp
mov
mov
stos
push
mov
jmp
jl
pop
sub
ret
xchg
mov
jo
and
sbb
les
aam
lret
mov
pop
fmull
xchg
addr16
mov
fisubl
in
arpl
ret
pop
je
lock
or
test
cmc
sbb
add
int3
push
out
inc
add
xor
movsb
inc
inc
stos
jbe
xor
les
lock
adc
in
les
push
jns
out
out
cmpsb
adc
int3
mov
cmpsl
inc
in
add
faddp
pop
jns
test
pop
mov
xchg
scas
enter
add
pop
mov
mov
cmp
adc
xor
sbbl
shll
adc
push
xlat
sub
and
int
cmovl
and
scas
mov
fmul
shrb
or
pop
inc
shl
add
leave
sub
jmp
test
out
insl
inc
push
inc
loopne
in
lods
out
dec
inc
sbb
jno
mov
add
int
cmp
pop
pop
add
cs
loop
xorl
sbb
mov
xor
test
arpl
push
loop
xor
jg
inc
jb
lret
or
dec
and
cmp
cmp
push
cltd
mov
js
es
and
pusha
push
mov
xor
dec
ds
outsb
dec
mov
out
mov
xchg
jo
mov
stc
ljmp
cwtl
adc
dec
in
ja
ret
rclb
aad
sahf
inc
movsl
fld
jno
into
pop
cltd
das
jp
mov
lods
out
jnp,pt
adc
into
ss
push
fdivs
popf
in
mov
in
lds
call
stc
add
imul
pop
icebp
insb
adc
or
stos
inc
cs
repz
fsubrl
mov
cmp
lcall
pop
popa
loop
add
cmp
mov
jo
mov
pop
cmp
aad
cwtl
pop
sti
stos
sub
xor
push
nop
rcll
popf
mov
mov
inc
fdivrp
lret
call
mov
mov
aas
dec
int
pop
dec
cmp
jnp
fisubrs
add
filds
popa
mov
insb
fs
sbb
lods
gs
test
mov
inc
adcl
mov
jmp
ss
jle
sti
es
shrb
lret
lods
rcrb
and
sbb
shlb
add
cmp
add
xor
jp
xor
mov
test
sub
pop
test
mov
cmpsl
repnz
stos
stc
add
push
shll
rcr
sub
inc
lcall
add
jae
ja
add
repnz
test
movsl
pushf
mov
dec
bound
stc
sbb
mov
fimull
int
add
cmpsb
inc
hlt
sub
fcoms
mov
mov
js
gs
enter
mov
mov
lahf
cmc
js
mov
add
mov
push
or
mov
mov
cmp
mov
jl
out
outsb
addr16
out
shlb
jg
scas
adc
cmpsb
nop
xchg
out
testl
lcall
inc
or
pusha
dec
repz
jle
dec
test
inc
pusha
gs
pusha
mov
push
je
test
fnstcw
setl
fcmove
inc
sar
xchg
pop
or
orl
jp
inc
xchg
xchg
xchg
or
mov
or
add
dec
dec
fistpll
in
faddl
mov
subb
out
and
fstl
ss
jge
lds
xchg
fnsave
mov
or
xchg
lret
lods
xor
xlat
add
dec
cmp
sbb
cli
or
push
mov
lahf
test
cs
pop
jmp
push
shrl
hlt
sub
loop
aam
jmp
lea
mov
nop
rclb
xor
xor
bound
daa
test
mov
out
lahf
push
mov
dec
ja
add
int3
sahf
cs
shll
adc
mov
sbb
sub
ljmp
out
xlat
jmp
sti
sbb
gs
mov
loop
test
aam
xor
outsb
cs
mov
or
jl
cmp
out
xor
addr16
sub
dec
les
mov
iret
leave
sub
inc
and
inc
mov
add
dec
mov
and
es
mov
and
into
ds
jmp
fs
lret
call
fildl
inc
jge
xlat
fsub
pusha
leave
push
mov
xor
hlt
pop
or
mov
mov
cmp
xor
ja
bound
lahf
ss
fimull
mov
leave
or
cmp
out
xor
lahf
loope
mov
push
test
stc
cmp
je
test
filds
pop
xchg
sbb
int3
es
sarl
movsl
fmulp
mov
or
cmp
in
mov
and
rcrb
dec
ss
mov
std
popa
sub
dec
push
loope
rcll
dec
adc
adcl
inc
inc
lods
mov
jl
repz
int3
sub
cwtl
lock
out
jo,pn
xchg
and
xorb
bound
es
aas
std
lock
scas
mov
mov
xlat
scas
mov
outsl
in
jmp
loop
aas
sub
stos
ret
adc
lods
or
xchg
fldenv
fbld
sar
outsb
stc
shrb
data16
lahf
mov
icebp
pop
and
xchg
ljmp
scas
loope
test
dec
mov
andl
push
mov
fcoms
xchg
leave
push
add
sub
mov
shr
jle
cmp
lock
stos
sub
sub
mov
xor
lcall
in
sbb
ljmp
jmp
test
ret
gs
nop
push
loope
sbb
scas
add
shrl
mov
xchg
sub
fsubr
dec
inc
sar
cmp
mov
lds
in
xchg
cmp
add
mov
arpl
in
and
pop
lea
mov
repz
jb
mov
push
pop
jl
dec
ret
xor
int3
inc
popa
clc
pusha
loop
cmp
xchg
adcl
sarl
sahf
mov
inc
fsub
cs
mov
jp
and
jmp
icebp
fnstsw
ljmp
test
imul
sbbb
push
out
cmpsb
or
lret
jbe
jne
sbb
inc
sub
push
rcll
push
in
shl
and
neg
and
ljmp
cmp
sub
pushf
notl
je
cwtl
mov
xchg
out
cmp
sub
dec
rcrb
inc
jg
movsl
popf
dec
mov
sub
lea
mov
jno
insl
ficoml
scas
repnz
sahf
repz
mov
cmovnp
testl
cs
lcall
adc
mov
and
fldt
outsb
xor
or
data16
shlb
arpl
xor
cmp
push
jnp
sbb
ret
rorb
push
ds
pop
sbb
pop
pushf
aam
outsb
clc
mov
mov
lcall
jo
enter
pop
das
push
lcall
loope
int3
jns
dec
insl
sbb
jnp
pop
fwait
dec
sbb
loop
stos
bound
daa
pop
fadds
call
imul
pop
mov
lods
lahf
stos
mov
stc
fidivl
cs
pop
test
sti
pop
xor
dec
mov
push
and
mov
dec
mov
mov
clc
jl
xchg
pop
or
adc
lahf
int3
ljmp
fsubrs
push
pop
lret
add
pushf
je
mov
aas
std
lods
inc
shll
fimuls
pop
insl
loop
xchg
mov
inc
xchg
aaa
arpl
inc
mov
mov
sub
in
sub
stos
fisubs
jb
and
into
xchg
cmp
dec
icebp
xchg
lea
push
sbb
cmpb
push
jo
inc
cmp
dec
cs
lret
in
movsb
jp
movsl
pop
add
push
sbb
jbe
lret
in
xor
add
xchg
add
sbb
mov
stc
insb
cmpsl
pushf
loope
jno
ss
push
cmp
adc
std
and
lahf
mov
cmp
sub
daa
cmpb
das
test
push
push
jbe
lods
pushf
xchg
shl
sbb
push
testb
pop
mov
sub
pop
out
imulb
push
test
mov
push
push
push
lock
pop
sti
mov
cltd
jo
lea
fnstsw
mov
arpl
js
dec
adc
test
in
pop
cmpsb
mov
je
adc
inc
or
out
addl
dec
sbb
ret
jge
cmp
enter
out
insb
iret
fsubl
pop
dec
sbb
mov
xor
push
cmp
and
adc
cltd
rorb
cmpl
mov
xor
push
mov
pusha
icebp
out
shlb
outsb
sti
jge
and
xchg
rol
inc
add
sti
fwait
jae
push
adc
push
mov
icebp
sbb
pop
arpl
int3
cmp
fisttpll
fisttpl
adc
mov
in
shll
imull
sub
sub
je
dec
lods
mov
imul
fnsave
mov
mov
repz
cmp
inc
jecxz
push
int
mov
or
out
push
sub
outsl
out
int3
leave
dec
cwtl
out
inc
dec
xor
subl
cmp
push
scas
xorb
and
lea
xchg
push
pushf
dec
pop
sub
xchg
pop
and
cld
movsl
inc
hlt
xor
stos
or
lds
jns
add
push
adc
scas
pop
test
pop
loop
cld
jle
push
lret
dec
jmp
sub
mov
inc
insl
dec
adc
xchg
push
cmpsb
nop
jge
fdivrl
in
ret
push
jnp
lahf
mov
mov
imul
cmp
jno
push
sarl
sbb
mov
mov
inc
push
xor
push
mov
movsb
and
xor
xorb
sbbb
rcr
insl
adc
cmp
sub
int
jns
add
mov
scas
cmp
andb
movsl
cltd
mov
cmp
out
xchg
push
push
adc
pusha
ss
mov
iret
pop
dec
test
pop
fdivr
or
push
test
outsb
test
int3
mov
mov
pop
inc
xor
cmp
xor
shll
sub
dec
and
xchg
lret
movsb
ds
jp
jno
xchg
jns
mov
sbb
outsb
add
dec
sub
cmp
jo
cmp
insb
add
jae
loopne
lock
rol
xor
mov
mov
lods
fwait
loopne
cli
dec
and
push
lea
mov
pushf
aam
fsts
pop
ss
jp
enter
cmpsb
idivl
ret
push
and
ret
mulb
pop
mov
mov
or
int3
out
mov
sbb
imul
sbb
push
fsubs
ret
sahf
inc
pusha
int
sub
sub
out
mov
cmpsl
sahf
enter
arpl
and
xor
in
jge
mov
addr16
and
fwait
push
inc
sub
xchg
or
or
scas
mov
addr16
or
sarb
pushf
push
fistps
call
mov
imul
clc
sub
dec
xorl
movsb
cmp
sahf
mov
push
sbb
jp
in
inc
mov
pop
pusha
aad
push
shlb
inc
mov
imul
jb
pop
mov
lock
lahf
imul
jle
scas
xchg
stos
not
in
push
mov
gs
data16
sbb
mov
out
dec
pop
sahf
push
add
mov
ss
lods
push
push
cmp
cmc
mov
mov
test
cmpsl
int3
sahf
ja
out
fcoml
hlt
adc
cmp
cwtl
jno
lods
shrl
mov
insb
xchg
adc
in
xchg
test
mov
jge
sub
rcll
jecxz
dec
dec
pusha
adcl
pushf
inc
leave
xor
cmp
adc
stc
imull
mov
lahf
push
nop
sbb
leave
dec
iret
pop
sub
adc
inc
cmp
adc
mov
lcall
adc
test
loopne
pop
stos
and
int3
dec
mov
fsubr
sub
out
cwtl
lcall
sub
scas
aas
imul
pop
sbb
gs
inc
dec
fbstp
xchg
daa
or
lock
sbb
fistl
mov
sbb
jbe
mov
nop
and
jnp
sbb
test
and
jecxz
stc
mov
rorl
adc
push
pop
mov
mov
iret
jae
cmp
lahf
addr16
mov
push
add
xchg
xor
dec
pop
leave
pop
popf
push
or
pop
mov
and
inc
vmwrite
dec
popa
push
dec
lcall
insl
orl
cwtl
add
insb
movsl
adc
das
add
nop
xor
stos
mov
nop
sbb
cwtl
loopne
pusha
dec
cmp
clc
dec
insb
aaa
xor
sahf
pop
test
pushf
hlt
fimuls
gs
out
adc
loope
push
stos
not
cmpsl
and
pop
fwait
mov
pop
movsb
add
sub
je
mov
insb
jg
bound
fwait
int3
xchg
push
insb
cmpsl
mov
pop
mov
mov
or
push
pusha
jmp
xchg
or
mov
inc
xchg
cltd
cmp
inc
cmpsl
mov
push
jg
jecxz
mov
xchg
xor
pop
pop
popa
add
in
lahf
sub
in
outsl
xchg
test
scas
xchg
imul
xor
outsl
push
insb
pop
push
imulb
xor
je
int3
jp
and
mov
fisttps
push
add
ja
cmc
fs
cmpsb
mov
push
xchg
mov
mov
andb
or
pop
xor
push
cs
bound
incb
ret
mov
addb
mov
mov
mov
rorb
or
pop
adc
add
loope
inc
js
jno
dec
mov
repz
cmp
add
jnp
sbb
test
push
pop
hlt
data16
loope
cmp
mov
ljmp
push
dec
in
cmpl
sarl
test
add
mov
and
and
push
inc
lret
fmull
and
jge
shl
sub
decb
push
hlt
push
rcrb
xor
aaa
dec
ret
mov
jb
cmp
loop
ret
pmaddwd
adc
cli
lahf
cwtl
dec
ds
ficoms
aad
jne
mov
dec
mov
sub
pushf
sarl
rorb
arpl
mov
aas
mov
cmp
push
jg
inc
dec
mov
jp
adc
pop
movsl
mul
call
xor
or
inc
sbbb
xchg
pop
xor
add
pop
jae
lods
push
repnz
adc
cltd
push
scas
cmp
out
addb
call
push
inc
stos
xor
jecxz
or
test
cmp
pop
mov
mov
inc
sahf
push
iret
xchg
js
out
pop
pop
xlat
decl
xchg
mov
pop
fsubrs
gs
sarl
cmpxchg
sbb
sbb
cmp
in
push
mov
add
adc
cmpsl
mov
sub
fwait
mov
arpl
cli
add
lahf
ror
lea
cmp
in
inc
fldl
pop
aam
aaa
or
cs
dec
clc
repnz
int
push
sub
push
inc
xor
push
les
mov
ficoml
jle
sahf
lahf
xchg
test
dec
xchg
mov
ret
pushl
xchg
cld
ds
jg
inc
divl
aas
inc
and
cmp
in
xchg
mov
cwtl
sub
inc
daa
push
outsb
cmpsb
sub
test
inc
xor
or
jge
xlat
sub
jle
or
aad
fsts
stos
mov
js
pop
stos
cmp
mov
fcmovb
pop
jl
loopne
dec
lods
mov
stc
push
add
cwtl
dec
clc
jb
loop
dec
xchg
jecxz
leave
gs
sarl
test
daa
inc
sahf
and
test
cmpsl
sti
rsm
gs
push
xor
out
popa
cmp
loope
dec
sahf
jb
inc
mov
sub
mov
data16
fwait
push
cmp
pop
sbb
jne
push
mov
push
fcoml
fwait
jbe
inc
sbb
jae
cmc
xlat
inc
jp
stos
xchg
cmp
xorb
sbb
jle
mov
push
fsubrl
sub
fidivrl
sbb
or
xor
pop
cmp
aad
and
xchg
mov
mov
sub
shll
loope
mov
subb
push
or
flds
mov
fcoml
pop
mov
sahf
emms
or
mov
and
and
xchg
mov
inc
push
add
add
cmp
lock
out
idivb
mov
sbb
js
rol
mov
adc
pop
iret
pop
sub
mov
es
jge
aas
insl
xchg
aas
je
inc
hlt
pop
insl
into
sbbl
push
bound
or
clc
xchg
stos
pop
adc
in
mov
sahf
or
mov
jne
xor
sbb
push
cmp
adc
repz
test
popa
cwtl
pop
mov
lods
movsl
adc
sub
out
cmp
xor
test
sbb
stos
in
xor
mov
jp
pop
mov
inc
arpl
punpckhdq
loope
sub
arpl
fsubs
sbb
and
fsubr
push
lock
fcoms
rcll
repnz
mov
hlt
adcb
rcrl
test
push
sbb
push
xlat
les
daa
jg
xor
xchg
xchg
ja
int
add
repz
adc
fbstp
mov
add
or
push
stos
dec
std
mov
sub
lock
popl
and
xchg
sbb
push
je
test
bound
cmpl
mov
js
lret
ficomps
jae
dec
mov
in
mov
cmpsb
pop
xor
in
pop
or
lret
mov
jl
cmp
lds
es
jne
jecxz
mov
jbe
pushf
std
lret
js
jns
adc
mov
jp
scas
push
sbb
scas
mov
pextrw
imul
dec
pop
and
repnz
cmc
std
faddp
loope
jecxz
xchg
rdtsc
cli
or
popa
outsb
dec
gs
roll
das
pop
and
sbb
push
shl
repz
lret
pop
stc
mov
mov
in
pop
ret
aam
cld
xchg
out
xchg
xchg
jg
clc
xchg
mov
test
adc
dec
clc
rcrb
sbb
pop
fidivrl
out
aad
pop
mov
cld
or
shlb
xchg
cmpsl
xor
repz
lods
lahf
adc
pop
fs
lcall
insb
dec
sbb
das
ficoml
movb
sub
push
retw
mov
scas
push
push
cltd
mov
leave
cmc
sub
outsl
mov
mov
std
adc
aam
les
and
pop
popa
or
fsubs
sub
cs
sub
scas
adc
inc
add
xchg
pop
stc
sub
fs
sub
sar
push
cmc
ret
and
mov
lea
insb
imul
sub
pop
das
stos
cmp
jb
les
clc
add
fnsave
mov
cmp
and
fisttps
rorl
jmp
sub
popa
rclb
adc
stc
jns
jae
shlb
imul
push
xor
or
cmpsl
mov
repnz
xor
outsb
pop
xor
stos
jg
and
imul
and
or
xchg
out
pop
jb
jge
dec
fidivs
pusha
fmuls
sbb
loopne
pop
fdiv
mov
cmp
pop
pop
imul
orl
mov
mov
repz
imulb
imul
andb
loopne
repz
adc
xchg
testb
in
xlat
or
je
cmp
mov
or
fistps
sub
xor
mov
mov
pop
icebp
fwait
std
sbb
sub
cmpsl
adc
and
and
enter
shrl
lods
negl
fcmovnbe
inc
and
push
jge
into
insb
xor
iret
adc
hlt
imul
pop
daa
mov
cmp
ja
mov
and
inc
js
inc
sahf
mov
xor
ljmp
mov
push
pop
xchg
test
xchg
int
jnp
dec
mov
sub
jo
ljmp
movsl
adc
pop
mov
test
and
mov
xchg
insb
data16
call
mov
out
xchg
pop
xor
imul
mov
push
hlt
imul
dec
out
aad
mov
shrl
adc
and
ja
dec
and
xor
mov
arpl
loop
jno
icebp
mov
adc
outsb
and
rolb
mov
imul
outsl
and
and
mov
mov
test
jnp
ret
push
stos
jno
mov
rcl
loop
mov
sub
mov
fildl
and
insb
pop
lods
push
stos
sub
inc
das
icebp
sbb
insl
into
lock
dec
sbb
sbbb
fxch
ds
negb
pop
adc
pop
sub
xchg
popf
pop
orl
xor
mov
mov
push
push
add
cmp
fld
shrl
lret
push
icebp
jns
pop
jns
mov
xchg
xchg
es
jno
aaa
outsl
dec
and
fcompl
xchg
addl
push
movsl
mov
pop
ljmp
mov
scas
ja
mov
xchg
mov
sbb
push
xor
movsl
dec
sti
mov
shll
loope
push
xchg
jle
cmp
jmp
jno
aas
adc
pop
aaa
pushf
sbbl
mov
xchg
test
fwait
xchg
shll
sub
pop
pusha
rolb
and
push
lock
hlt
or
lock
add
and
loop
dec
cld
cmp
jg
jecxz
fcoml
jg
loop
cmp
xor
fcoms
add
loope
cmp
enter
push
push
fsubl
sbb
mov
cmpsl
jmp
int3
push
and
add
adc
in
icebp
movsb
push
adc
insl
cmpb
xchg
ds
jo
jb
cmpl
add
loope
xchg
add
mov
xchg
or
outsb
jmp
push
in
or
shll
cmpsl
cltd
sbb
or
push
std
sub
ss
dec
or
lret
mov
sbb
out
and
jmp
mov
xchg
push
daa
call
xchg
jno
ficoms
mov
mov
rolb
cmp
in
out
inc
stc
std
out
rorl
cmpsl
movsl
mov
push
sbb
cmc
and
iret
pop
daa
jnp
jl
lret
popf
cmp
xchg
icebp
insl
inc
lea
repz
push
pop
adc
mulb
out
imul
jl
mov
mov
stos
push
lds
fstp
add
dec
addr16
sub
push
xchg
push
fdivrs
inc
out
xchg
or
icebp
jns
mov
adc
repnz
push
mull
daa
fsubrp
lret
mov
adc
mov
or
lahf
lret
sahf
sub
test
adc
inc
lret
icebp
xchg
mov
roll
mov
repz
jmp
ret
loope
inc
and
repnz
pop
loopne
das
xlat
cld
ss
lahf
or
das
divb
xchg
cmp
jmp
arpl
sbb
shrb
jge
cmp
popf
repz
or
push
addr16
and
pop
int3
sbb
lds
push
mov
xor
sub
bound
dec
jp
jnp
sahf
dec
mov
pop
jg
xchg
jecxz
loop
stos
repnz
insl
or
cmc
ja
dec
and
push
insl
push
mov
fisubs
fsubl
cmp
pop
negb
fwait
adc
fiaddl
insb
dec
sti
mov
scas
add
ss
out
icebp
cmp
mov
push
aaa
sbb
mov
xchg
xchg
pop
xchg
inc
xor
arpl
les
mov
insl
in
adc
or
mov
js
cmp
shl
cs
inc
pop
mov
imul
and
loopne
cs
test
mov
shlb
xchg
mov
clc
adc
mov
push
cli
stc
mov
gs
pop
sarl
arpl
xchg
inc
fucomip
iret
inc
pusha
sbb
lods
out
sbb
inc
test
mov
arpl
mov
xor
add
cmova
dec
jp
sub
lret
lock
subb
sbb
mov
pop
pop
arpl
fcmovbe
repnz
sbb
pop
addr16
mov
test
cld
imul
pop
sbb
xor
push
lcall
sub
xchg
jbe
popl
push
or
shll
sti
mov
jno
mov
fsubl
jo
insb
mov
xor
icebp
mov
mov
test
lds
lea
scas
mov
xor
js
or
or
lahf
xchg
and
and
movsl
insb
ret
xlat
cmp
jp
hlt
mov
je
cli
ljmp
pop
cmpb
fcomip
lock
adc
adc
mov
push
frstor
cmp
xor
cmp
pop
aaa
sub
cmp
out
pop
cmp
sbb
cmp
mov
sub
mov
pop
out
dec
jge
sahf
jecxz
repnz
lods
cmp
adc
pop
push
jecxz
xchg
xorb
and
fcoml
rcl
inc
into
xor
movl
aaa
scas
rcrl
ds
std
xchg
dec
ss
dec
cld
inc
int
mov
in
or
dec
aaa
dec
ds
dec
lds
sub
or
add
sub
lds
repz
loopne
mov
cmp
clc
add
and
clc
cmp
es
aas
adc
mov
cmpsb
cmp
dec
fidivrl
out
adc
jecxz
pop
inc
sahf
mov
adc
aam
mov
push
and
popf
cmp
inc
stc
loop
cmp
mov
xor
push
mov
jbe
push
mov
pop
mov
inc
cmp
xchg
cli
aaa
lds
mov
sbb
shrb
insl
orb
je
out
loop
mov
mov
adc
dec
push
ja
inc
cmpl
push
scas
mov
mov
cmpl
iret
mov
in
cmpb
adc
mov
cld
lds
cmpsl
dec
mov
push
add
daa
pop
push
jb
cmc
lea
lock
lahf
fidivl
cmpl
mov
scas
test
es
push
xchg
mulb
mov
shrl
dec
jo
cmp
xchg
push
bound
pop
mov
gs
call
in
rcrl
inc
aas
inc
out
imul
xchg
pop
fwait
shl
mov
movl
pop
nop
dec
fldl
dec
dec
or
clc
adc
lret
sub
out
icebp
pop
in
out
in
fistpll
pop
push
add
mov
int3
sbb
inc
fstl
lret
es
push
xchg
test
outsl
mov
into
test
dec
mov
cli
push
es
jle
sub
pop
decb
loop
cmp
dec
movsb
jbe
push
and
inc
jge
ljmp
push
jecxz
sbb
mov
cmp
inc
mov
push
push
push
testl
movb
call
push
dec
mov
pop
mov
push
jb
arpl
sub
pop
call
pusha
imul
int
rcrl
or
inc
jbe
pushf
dec
mov
pop
mov
out
cmpsl
sbb
mov
add
aaa
and
adc
out
stos
push
add
outsb
out
aas
fsubrp
notl
filds
pop
xchg
sbb
popf
inc
mov
inc
mov
loopne
lret
push
and
out
cmpsb
insl
cmp
pop
mov
cwtl
insb
adc
cmp
pusha
fildl
stos
dec
push
jns
cmc
mov
pop
pop
bswap
fcomi
movsb
lret
xchg
cmp
adc
mov
sti
in
fsubl
or
mov
loope
lcall
fcompl
mov
shr
dec
adc
fs
fnstsw
into
push
fmul
orb
daa
pushf
dec
sahf
push
cmp
sbb
mov
test
movsb
xchg
inc
pop
jno
cmp
mov
lods
push
neg
xchg
push
loop
jne
cld
adc
frstor
in
int
cmp
fsubrl
cmpsb
dec
stos
xor
repz
push
dec
dec
lds
jecxz
shlb
pop
lahf
sub
dec
jno
int
pusha
test
lahf
pop
sbb
pop
jo
jne
cltd
mov
pop
inc
repnz
loop
fbld
pop
xor
mov
mov
mov
sub
movb
push
mov
jnp
call
out
mov
dec
pop
pop
mov
xor
les
in
int3
call
adc
or
mov
sbb
adc
dec
stos
mov
push
icebp
cmp
and
xchg
push
jle
popf
daa
adc
xchg
mov
mov
lock
nop
imul
xchg
jle
xchg
push
lcall
push
pop
clc
cmp
xchg
adc
addb
add
cmp
bound
outsl
mov
mov
idivb
rolb
negl
out
scas
mov
pop
gs
dec
aam
xor
das
shll
xlat
xchg
cmp
lea
ss
dec
jno
into
lret
in
les
fs
cmpsb
int3
lds
push
mov
add
inc
lds
dec
stos
pop
movsl
cmp
or
add
mov
adc
add
call
sub
call
dec
sub
aad
cmp
inc
or
rcrl
int
jno
mov
shl
sub
inc
rorb
sbb
xor
and
orl
mov
jbe
sbb
mov
mov
jmp
adc
xchg
ja
shrl
mov
ljmp
movsw
call
shl
mov
aaa
scas
push
dec
jmp
aas
mov
add
xchg
mov
scas
data16
mov
enter
test
sti
pop
push
jno
pusha
int3
dec
jge
cmpsl
xchg
mov
mov
stos
xor
push
pop
and
inc
mov
in
loop
push
std
add
jno
dec
and
dec
in
dec
inc
hlt
movsl
dec
dec
dec
mov
mov
cmc
fnstcw
cltd
fmull
faddl
mov
dec
out
leave
ficoml
mov
test
inc
sub
adc
movsb
cmp
adc
mov
jle
dec
or
mov
cmp
xchg
insb
ret
inc
rcrl
movsb
push
push
jg
dec
push
cmp
sbb
fwait
ret
test
ret
push
and
je
cmc
xor
jo
in
fwait
iret
sbbb
xchg
sbb
jnp
cmpsl
xchg
enter
in
mov
mov
ror
je
cmpsb
dec
out
repnz
xchg
adc
adc
push
lods
ds
adc
sbb
push
cmp
jge
inc
cli
rorb
xchg
outsb
idivb
in
push
cwtl
insl
fwait
aas
cltd
std
aas
bound
xor
xor
dec
std
ljmp
cwtl
jae
xor
add
inc
cmp
pop
adc
sbb
roll
jmp
pop
repnz
pop
lds
dec
leave
xchg
sbb
or
lods
sub
jmp
and
dec
loopne
imul
xor
jmp
fucomip
xchg
cmp
adc
xor
sar
ret
dec
call
cs
mov
addr16
jns
push
sub
and
mov
outsl
aad
mov
insb
shr
lods
pusha
mov
mov
iret
push
out
mov
fmulp
push
sarl
push
clc
sub
cmp
and
aas
jo
flds
xchg
adc
cmp
mov
sbb
repz
or
dec
cmpsl
int
lea
cmp
pushf
ret
push
sub
push
mov
aam
sarl
in
movsb
cmp
add
xor
push
push
cmp
fsubl
jne
xor
test
fiaddl
sbb
in
lret
insb
fstpt
lret
add
mov
cmp
rclb
dec
scas
lret
addb
push
ret
rorb
es
fdivr
hlt
add
or
pop
or
sub
fisubrs
xchg
pop
mov
std
jg
sti
loopne
cwtl
ss
mov
in
lods
fidivrl
sub
into
sub
pusha
std
cld
fwait
jecxz
fwait
in
add
div
loop
sub
loopne
scas
test
cli
aam
or
in
lods
pop
xor
arpl
xor
jge
fistpll
test
xlat
insl
jae
aaa
cs
ss
pop
mov
xor
fucomi
pop
std
jle
mov
add
jne
push
mov
push
pop
jmp
or
out
fsubl
pop
out
jl
pusha
jecxz
loop
inc
inc
mov
mov
mov
mov
sub
mov
and
pop
and
rcll
sub
mov
adc
add
xchg
and
ja
pop
jns
pop
mov
mov
or
sahf
cld
gs
jg
jg
sar
mov
aaa
lods
call
std
lods
dec
and
sarl
xchg
push
xchg
or
cmpsl
push
fsubr
dec
xor
mov
adc
cltd
push
jb
clc
popa
in
inc
ja
jno
aad
sti
inc
or
lods
jg
xchg
pop
or
push
jbe
xchg
inc
xchg
or
clc
pop
pandn
inc
inc
pop
xchg
bound
insl
flds
shll
fsts
in
add
sub
aam
jbe
adc
adc
xchg
xor
and
rol
jae
push
pop
mov
in
or
in
rcll
aaa
repz
jge
popf
push
sbb
add
sub
or
fiadds
pop
mov
push
lds
js
cmp
bnd
inc
cli
and
jbe
lods
testb
add
imul
sub
icebp
and
push
push
dec
fcmovnbe
adc
mov
out
xchg
xchg
adc
dec
pop
push
int3
aaa
mov
js
lret
sbb
mov
mov
nop
int3
std
sub
lcall
sbb
sbb
loop
jb
stos
cmp
xchg
out
jge
in
stc
in
sti
mov
lret
decb
leave
push
add
mov
jne
test
inc
mov
ret
movsl
mov
mov
loopne
mov
shlb
and
mov
les
mov
push
ret
ret
push
cmp
hlt
ds
repnz
lret
xchg
adc
mov
pusha
pop
jo
pushf
sbbl
rcrb
mov
test
pop
add
fidivrl
ds
push
movsb
test
scas
lods
pushf
push
xor
mov
jae
daa
xchg
or
mov
cmc
cwtl
jne
cmp
icebp
xor
add
dec
xchg
mov
fcmovbe
xor
push
dec
sarl
inc
inc
lods
sbb
in
adc
insl
jl
cmp
sub
jp
or
imul
outsl
push
adc
lods
ljmp
inc
and
stc
test
jnp
aas
cmpb
xchg
mov
insl
inc
dec
pop
sub
mov
add
dec
ret
xlat
aaa
sti
lcall
xchg
stos
inc
cmp
leave
cs
nop
dec
sub
xlat
mov
sub
push
lods
xorb
mov
leave
shl
mov
inc
adc
jmp
mov
sti
xchg
pusha
xchg
sbb
adc
push
daa
mov
or
fidivs
sub
push
pop
cmp
mov
xor
ret
popf
or
mov
dec
mov
push
add
loop
or
xor
jbe
shlb
xchg
aas
xchg
pop
fucomip
popf
repnz
sub
out
sub
cmp
ret
fsubl
inc
xor
sbb
inc
push
mov
jecxz
cltd
scas
test
push
and
xchg
jle
lcall
mov
mov
fwait
xor
bound
pop
mov
and
jnp
sbb
push
jno
inc
push
add
cmp
cmpsl
xchg
in
jmp
dec
nop
arpl
jle
dec
mov
push
mov
jb
arpl
mov
cmpsb
test
inc
lcall
sahf
mov
into
cld
aaa
pop
xchg
mov
call
ljmp
imul
outsl
sub
lret
mov
sub
push
loop
and
cmp
dec
rcr
sub
sbb
imul
sub
cmp
das
movsb
mov
xor
insb
pop
inc
mov
pop
dec
cld
push
ljmp
mov
shll
mov
push
into
add
and
xchg
sub
cltd
or
mov
dec
in
xchg
push
jo
push
dec
jmp
lea
dec
mov
jecxz
outsb
mov
or
bound
cmpsl
dec
cmc
leave
sub
outsl
push
pop
sbb
gs
sub
xchg
pop
or
cmp
xor
or
dec
ljmp
scas
xchg
fadds
insl
mov
dec
data16
xchg
notb
pushf
into
shlb
push
inc
push
stos
insb
fldcw
cmp
loop
loope
inc
pushf
inc
shl
mov
cmpl
pop
sub
push
mov
cmp
sbb
pushf
mov
pop
or
jne
jnp
xchg
mov
aam
add
push
lds
sub
movb
mov
cmp
cmc
call
aad
mov
lcall
and
rcrb
fadds
push
mov
or
jle
loope
in
aas
es
test
imul
std
sub
loopne
jp
xor
into
test
jbe
ds
and
pop
fwait
jae
fwait
rcll
xchg
addr16
flds
ficoms
mov
dec
cs
push
test
enter
sub
sub
stos
xchg
in
daa
aad
ret
in
mov
scas
rolb
incl
sti
mov
pop
mov
popf
jmp
cmovle
mov
and
or
dec
pop
stc
fbld
ret
dec
xor
loope
dec
cmp
jecxz
lahf
mov
ficoml
dec
mov
ret
sub
cwtl
dec
lds
add
mov
fildll
call
fstl
ror
push
inc
push
push
inc
xor
jae
mov
xor
jp
dec
js
out
loopne
pop
insl
push
mov
dec
lcall
ret
imul
lcall
push
psrld
push
inc
scas
je
inc
daa
testl
mov
aad
push
sarl
cld
cld
add
lcall
or
cli
es
or
xlat
ficoml
imul
stos
pop
push
fld
mov
adc
clc
icebp
out
cmp
ss
jg
ja
adc
pop
jb
cmp
fcmovb
addr16
cmpsb
mov
nop
scas
pushf
pop
xor
das
shll
xor
dec
sbb
xchg
push
mov
xchg
out
push
xor
jno
fld
bound
jb
ss
loopne
loopne
mov
mov
dec
jb
adcb
add
fistl
sub
cmpsb
shr
mov
insb
and
and
imul
pop
ss
and
fcoms
js
imul
xsha256
cmpsb
adc
lahf
cli
leave
mov
shlb
xchg
cmp
cld
jbe
outsb
fiaddl
mov
mov
jp
outsb
jp
pop
imul
xor
inc
inc
cmp
mov
movsl
sbb
aas
mov
mulb
test
repnz
mov
sub
xor
movsb
ja
add
repz
xchg
rclb
or
fwait
dec
pop
nop
mov
dec
fcompl
push
xchg
shlb
pop
push
lock
mov
fldenv
int
and
mov
add
push
movsb
push
push
aaa
insl
push
aad
call
test
mov
arpl
pusha
fstl
adc
frstor
cmp
movb
cmp
arpl
push
das
fidivl
cmpsl
mov
imul
mov
mov
add
jg
pop
jae
push
xlat
fwait
xor
aas
mov
out
rclb
pop
notb
loope
divl
mov
loop
aam
cmpsb
cmp
leave
dec
aam
aas
cltd
jp
cmp
in
insb
lods
aad
fcompl
sahf
inc
adc
mov
sbb
sub
inc
cmpsl
test
cmc
lahf
inc
sub
es
pop
push
shlb
pop
pushf
loope
fcmovbe
mov
adc
pop
cmp
sti
shl
ret
sbb
test
daa
sub
mov
fmuls
mov
pop
popa
push
fwait
adc
int
aaa
int3
adc
mov
adc
pop
out
rcrl
std
adc
test
dec
into
adc
out
lods
out
or
push
aaa
rolb
cmpsb
or
pop
mov
jmp
test
mov
and
push
cmp
out
insb
fldt
cwtl
mov
ret
pop
xchg
fs
mov
hlt
push
ja
icebp
cmpsb
inc
call
fimull
inc
insb
stc
push
push
adc
cmp
push
aam
mov
outsl
test
ret
jl
fimuls
icebp
movsb
push
sbb
adc
or
out
subb
and
mov
mov
inc
push
subb
jmp
arpl
xor
call
mov
lret
or
jnp
das
mov
add
dec
aam
inc
mov
mov
sarl
in
insb
mov
mov
xor
andb
add
ja
and
fwait
jo
dec
pop
mov
xchg
std
mov
push
cwtl
fcomps
outsb
rolb
fisubrl
dec
je
cmp
out
imul
mov
icebp
push
in
cmp
rcll
xor
cmp
lock
sbb
pushf
insl
add
or
js
cmp
mov
mov
aad
jno
add
dec
pop
movsl
outsb
lret
sbb
cmc
mov
test
insb
icebp
push
xor
xchg
fisttpl
decb
rcr
xchg
fstl
add
popa
mov
fcomi
sbb
movsl
pop
push
cmp
push
mov
push
mov
push
jg
daa
dec
insb
ds
aaa
int3
hlt
jecxz
mov
dec
add
xchg
add
aaa
lahf
movb
ds
mov
push
leave
jl
dec
out
fsubr
stos
loop
or
movsl
movsb
gs
sub
lds
hlt
ljmp
cld
out
adc
pop
mov
hlt
ret
lock
aas
mov
lock
or
adcb
movsb
xor
cmp
xor
mov
jnp
xor
aas
mov
aam
mov
xor
cwtl
ret
sbb
mov
xchg
cmpsb
fs
insb
and
mov
cmp
dec
inc
mov
out
imul
lock
pop
jno
sub
jb
inc
push
int
mov
mov
call
push
pop
mov
not
test
xor
fs
mov
mov
xlat
xor
aad
adc
addr16
cwtl
fldenv
jl
xor
adc
add
mov
mov
popf
sahf
mov
lods
or
cvtdq2ps
in
mov
pop
leave
adc
loope
sahf
xchg
push
cli
andl
mov
fbld
mov
cmp
les
cld
pop
mov
faddl
outsb
pop
or
mov
rol
pushf
enter
int
mull
and
stc
fstps
cmp
inc
jle
jmp
loopne
int3
stos
sbb
and
mov
leave
jp
clc
sub
in
and
pop
test
outsl
mov
scas
mov
shl
out
inc
dec
sbb
jmp
sbb
sbb
pop
xor
std
lcall
loope
mov
mov
in
jbe
pop
cwtl
inc
sbb
rcr
push
xchg
mov
mov
add
adc
mov
mov
daa
dec
aam
aad
addr16
xor
xchg
mov
jne
add
cli
dec
cmp
addr16
ss
cmp
mov
sbb
into
js
cmp
or
mov
inc
dec
movsl
aam
xor
rorb
or
pop
push
nop
scas
mov
sbb
iret
mov
sub
lods
out
sub
mov
push
fstpt
popa
adc
or
fiadds
add
leave
scas
sbb
mov
mov
push
sahf
insb
lock
bnd
call
jmp
xor
movsl
pop
aam
clc
shlb
mov
in
mov
push
aaa
or
pop
clc
jle
mov
sarb
shlb
mov
mov
pop
pusha
mov
test
orb
clc
xor
ficoml
pusha
mov
add
sub
ds
mov
mov
xchg
pop
jb
xchg
hlt
in
sti
xor
push
gs
or
icebp
cmc
nop
outsl
mov
cmp
mov
and
cmp
enter
icebp
movsb
mov
ds
xchg
push
or
cmc
aas
icebp
aad
jmp
call
cmc
push
or
push
or
jo
cmp
mov
adc
xchg
sbb
adc
lret
dec
dec
shlb
cmp
sub
add
xor
and
and
gs
out
inc
out
mov
or
push
je
je
aad
dec
xchg
mov
push
push
add
cmp
outsl
cmp
fucompp
in
add
adc
mov
stos
mov
leave
inc
push
jmp
rcrl
mov
pusha
jmp
xorb
sub
push
fldt
mov
orl
lea
aad
jo
adc
push
cld
dec
xor
fcoms
pop
in
test
jmp
mov
mov
push
sub
pop
xlat
ds
or
pusha
push
lcall
stos
cwtl
mov
clc
dec
and
andb
pop
je
iret
mov
pusha
ss
ret
loopne
inc
sub
lods
mov
jae
mov
cmp
jnp
or
fsubl
xchg
dec
mov
mov
mov
inc
lcall
lret
shl
push
aaa
leave
cli
cmpsb
idivl
ficoms
inc
sub
add
and
cmp
fs
inc
mov
sbb
into
out
inc
imul
shlb
shll
pop
jo
negl
addr16
enter
xchg
lods
fiaddl
pop
rclb
test
insl
or
xchg
in
in
mov
inc
pop
dec
das
push
lock
arpl
mov
mov
cmp
mov
pop
leave
call
imul
fcomip
fsubs
pop
and
pop
in
sbb
add
lods
ljmp
paddd
xor
daa
mov
mov
cmp
lret
jmp
js
lock
jo,pn
xchg
mov
cmp
xchg
or
dec
mov
push
int
out
push
push
aaa
xor
andl
mov
cmp
jecxz
cli
loope
fidivl
shl
aad
out
jns
pop
ret
cmc
data16
test
fs
jp
sbb
sbb
dec
in
movl
push
je
stos
ja
push
mov
xchg
stos
xchg
dec
pop
jecxz
add
in
sarl
test
imul
sub
jae
fsubrl
pop
test
out
cmp
shll
push
arpl
xchg
out
xchg
enter
clc
cmc
inc
inc
add
push
mov
xchg
sti
cmpsb
faddl
sub
push
aas
test
cmpsl
mov
jecxz
test
push
adc
inc
inc
jmp
scas
movsl
xchg
cli
mov
inc
xchg
push
adc
in
ret
xchg
leave
mov
sbb
and
movsl
push
push
fldcw
pop
xor
notb
test
xor
sbb
add
add
sbbl
in
mov
adc
in
mov
jge
std
sar
call
add
inc
addb
jmp
in
nop
outsb
push
aas
mov
or
push
jp
or
add
pop
cmc
sbb
pop
inc
stos
dec
pop
push
js
push
es
xlat
sub
jnp
mov
mov
adc
mov
push
and
fistl
xchg
enter
jp
leave
std
adc
xchg
in
stos
push
das
mov
fcompl
dec
mov
mov
jp
and
shrl
pop
xchg
push
adc
es
fldl
or
pop
fdivrs
sarl
pop
cld
icebp
jae
xchg
mov
in
cmp
add
push
aad
hlt
incb
jmp
pusha
loope
cmpsl
and
sti
xchg
jnp
inc
add
xchg
dec
xor
push
rorl
sbb
mov
mov
and
pop
out
adc
in
sbb
mov
fwait
cmp
xor
out
add
xchg
xor
inc
adc
jg
inc
ds
fwait
dec
push
movsl
cld
sub
jmp
cli
dec
jg
nop
mov
repz
pop
xor
loope
andb
cld
jno
push
push
mov
sahf
push
pop
sti
push
jne
or
popf
testb
cmp
sub
jle
push
jecxz
sbb
rcll
xchg
or
mov
jle
mov
adc
pop
mov
add
sub
xor
sahf
adc
cmp
into
jne
icebp
sbb
ds
pop
pusha
fisttps
dec
push
dec
add
adc
mov
add
mov
lock
sbb
pusha
and
xchg
push
movsl
cmp
rol
push
dec
fstpt
mov
lcall
aaa
sub
mov
jno
mov
fprem1
push
dec
sub
sub
cli
addr16
jb
int
leave
shlb
sbbb
push
push
outsb
xchg
cmp
stos
iret
test
adc
les
cmp
pop
jecxz
dec
ficompl
jbe
loop
dec
inc
scas
ss
insl
outsl
out
lock
loop
fwait
adc
add
jne
add
push
pop
test
adc
push
loop
sbb
out
int3
in
jnp
out
dec
xor
xchg
rorb
and
fldenv
repnz
mov
aam
lock
imul
jmp
mov
pop
inc
jnp
xchg
int
xchg
ret
sbb
xchg
in
jmp
sub
cmpsl
ss
dec
pushf
xor
push
or
xchg
and
rcrl
mov
jns
in
dec
mov
loope
ds
xchg
std
adc
insl
inc
fwait
cmp
mov
repz
pusha
iret
jnp
out
subb
mov
scas
leave
lods
jns
sbb
dec
or
inc
dec
push
mov
test
inc
cmp
ss
in
pop
cmpb
mov
aad
xchg
sub
ja
lret
divl
mov
push
lods
insb
repnz
cmp
mov
push
mov
outsl
adc
int3
pop
bound
cmc
and
adc
mov
jmp
loopne
retw
scas
mov
and
lods
pop
lahf
mov
test
bound
bound
xchg
push
pushf
and
popf
mov
test
dec
sub
movsl
xorb
mov
enter
or
dec
inc
adc
cld
insb
xchg
push
add
std
sbb
cmp
adc
dec
mov
mov
cmp
and
dec
pop
add
in
mov
in
lea
testl
adc
push
dec
sub
lods
inc
dec
arpl
aam
xchg
cmp
pusha
stos
fs
xor
test
cmc
mov
repnz
call
int
sub
jb
ret
lock
cmp
inc
mov
out
xor
iret
stos
jmp
sahf
mov
insl
adc
xor
call
fildl
or
lock
push
jno
cmp
mov
loop
push
sub
in
adc
or
sub
inc
and
jecxz
cmp
arpl
jge
xor
imulb
sub
std
adc
test
rcrb
scas
icebp
scas
jge
rcrb
jg
scas
stos
stos
xor
in
jno
test
aaa
lahf
push
decl
leave
or
insl
popa
or
push
popf
cmpsl
iret
fs
pop
xor
int3
nop
pop
push
push
sbb
adc
inc
cs
test
xor
xchg
insb
adc
mov
push
movsl
repnz
add
sbb
cmp
and
js
je
das
sbb
xchg
call
xor
incb
adc
shrl
xchg
push
xchg
out
fisttpl
jb
cwtl
xor
xchg
loopne
mov
popf
xchg
mov
aad
mov
ret
scas
lods
lds
push
mov
dec
cmp
icebp
jnp
in
xor
xchg
jge
jle
jl
or
adc
dec
xor
push
loop
xchg
lahf
neg
bound
int3
ds
or
ds
xor
or
stos
sub
and
inc
jge
xor
inc
pop
xchg
push
cmpsb
out
add
adc
insl
or
mov
sbb
out
cmpb
sbb
gs
mov
xchg
das
xchg
add
and
int
push
sti
and
inc
call
out
xchg
lahf
std
jecxz
mov
lds
cmp
jge
mov
pop
stos
outsl
push
xorl
dec
xchg
xor
fnstenv
ret
jmp
fldpi
icebp
cld
pop
jo
push
xchg
dec
lods
test
les
notb
in
icebp
jns
popf
lods
xor
cmpsl
or
frstor
out
xchg
int
out
fidivs
jge
sahf
adc
jge
pop
sub
kmovw
imul
aad
mov
mov
pop
js
inc
or
rol
jns
sbb
cmc
add
jge
add
fcompl
and
or
out
shll
dec
add
mov
push
adc
sub
pop
jmp
push
mov
cmc
jle
shl
mov
stos
sub
cmpsl
loop
popf
sahf
adc
mov
pop
std
pop
fstpt
xchg
aaa
shlb
mov
or
mov
pop
daa
clc
pop
cli
mov
aam
shl
sub
in
pop
and
xor
pop
outsl
test
aam
repnz
mov
sub
adc
mov
and
je
in
call
test
xchg
and
mov
jp
repz
lret
adc
xchg
add
jne
adc
fisubl
mov
inc
sbb
sbb
fsts
ja
outsl
mov
lret
pop
or
sbb
mov
xlat
or
push
scas
mov
push
enter
inc
fbld
repz
rcr
cwtl
cmp
pop
cmp
or
hlt
sub
push
mov
lahf
adc
push
push
xor
scas
lods
mov
into
maxps
xchg
push
lahf
out
icebp
push
push
ds
cmc
xchg
cmp
mov
in
orb
sub
sub
xchg
mov
cld
xor
ja
mov
fsubr
xchg
push
sub
push
pop
hlt
outsl
test
outsb
fldt
fidivl
inc
push
and
ret
jno
or
jns
fxch
repnz
dec
or
arpl
dec
jge
fdivl
addr16
inc
and
mov
cltd
push
xchg
in
sbb
cmc
xor
sti
push
adc
mov
jnp
jnp
xchg
cmp
stos
imulb
fidivrl
cltd
jbe
into
pop
jo
jbe
mov
pop
sbb
stc
insl
loopne
sub
movsl
stos
mov
inc
push
insl
loopne
lock
aas
cmp
outsb
sub
lret
inc
scas
push
xor
rcrb
mov
mov
pop
jecxz
or
popa
out
adc
xchg
adc
add
andb
movsl
inc
mov
sbb
jle
decb
aaa
stos
jno
cs
xchg
popa
xlat
fnstenv
lcall
adc
mov
lds
setl
mov
inc
cwtl
dec
cmpsl
jmp
enter
popf
push
mov
decl
inc
popf
mov
mov
jbe
lea
je
fst
push
iret
inc
inc
jecxz
inc
cwtl
xchg
or
xchg
addr16
imul
in
daa
lods
mov
adc
push
test
sub
rcrl
dec
cld
lods
insb
ja
push
mov
jb
rcrl
pushf
jp
and
out
test
and
out
es
mov
mov
int
jmp
scas
jmp
mov
jae
lds
inc
add
in
decb
xchg
inc
outsb
inc
movsl
int
mov
je
adc
xchg
data16
bound
sub
or
inc
loope
and
cmp
clc
mov
adc
faddl
dec
add
xlat
jle
repz
mov
pop
cli
ficompl
sbb
lret
jns
fwait
ret
shl
lods
rol
out
sub
lods
xchg
leave
pop
mov
divl
or
stos
jecxz
xor
cmp
lock
sbb
inc
cmpsb
lock
jl
pop
dec
xchg
cltd
test
dec
xor
addr16
addl
test
out
xor
lock
mov
adc
xchg
int3
test
fstpt
jo
out
into
jge
add
push
jo
outsl
lahf
movsb
test
rcr
push
dec
cli
push
dec
mov
dec
cli
sti
pop
xor
inc
insl
fisubs
mov
cs
jge
adc
fsubrl
mov
orb
xchg
call
sbb
leave
adc
pop
or
adc
test
ljmp
jle
push
cmp
dec
push
imul
ljmp
sub
sbb
add
repnz
cmp
scas
stos
jnp
inc
jp
scas
pop
push
lods
sbb
leave
ds
or
push
scas
jne
pushf
pop
xchg
incb
push
mov
hlt
jns
lcall
pop
js
mov
dec
mov
or
pop
mov
mov
mov
pop
pop
mov
sbb
scas
mov
mov
aaa
std
psubsb
call
orb
mov
js
sti
imul
es
cmp
sahf
bound
push
pop
in
jecxz
data16
adc
and
jp
scas
out
test
add
sub
xchg
mov
lcall
dec
aam
push
lret
sub
sub
fnstenv
or
sub
int
jnp
mov
insb
mov
daa
mov
lret
loopne
and
out
out
inc
dec
jnp
inc
push
lock
lcall
add
add
fnsave
or
outsb
xchg
mov
or
in
mov
adc
jmp
bound
pop
adc
jp
repz
jbe
cmp
xor
push
mov
mov
mov
push
xor
xor
repz
int3
data16
xchg
inc
push
sub
mov
jno
sti
out
pop
aad
lahf
cmp
mov
movsb
test
sub
pop
xchg
mov
dec
push
ljmp
xorl
fdivp
xlat
dec
add
das
adc
cli
pop
xor
add
jge
mov
adc
clc
sub
push
push
jge
pop
mov
cmc
mov
sbb
fucomip
sbb
xor
dec
fildll
jl
adc
sbb
je,pn
das
cmp
pop
lods
and
xor
mov
cmpsl
mov
dec
and
je
jg
jle
dec
scas
cmp
mov
sarb
std
jo
adc
popf
add
xor
push
or
ret
cmp
mov
js
stc
cwtl
in
cwtl
pop
mov
pop
sbb
outsb
test
xor
jns
test
pop
icebp
adc
popf
push
dec
jle
sub
orl
daa
mov
sub
clc
xchg
scas
leave
ss
fldl
push
and
pop
imulb
ss
jo
fcom
lods
fsubs
fidivrl
sti
clc
push
mov
mov
dec
xor
repnz
adc
jle
add
xor
bound
std
push
add
cmp
cmp
cmc
push
push
lret
inc
add
bound
push
subb
add
xchg
aam
out
sbb
aaa
das
roll
lahf
cmc
lcall
arpl
mov
xchg
add
out
xchg
cmp
and
dec
fwait
sahf
imul
mov
ss
inc
das
sub
addr16
aam
dec
pushw
jmp
mov
mov
aam
gs
push
aad
std
sub
adc
aam
mov
cmp
fs
cltd
mov
shrl
sbb
fwait
dec
xor
fimull
pop
sub
adc
iret
mov
and
pop
sbb
jbe
lahf
sbb
jecxz
xchg
inc
pop
xchg
repz
cmp
int3
jbe
js
jecxz
pop
pop
nop
xchg
repz
in
inc
pop
ret
jecxz
jecxz
xchg
and
dec
int
xorb
xor
jnp
xor
enter
push
scas
mov
fimull
or
lret
mov
cmpsb
shrb
call
out
cli
aas
test
pop
push
inc
clc
loopne
dec
loopew
cmc
xorl
dec
xchg
mov
mov
push
or
inc
xchg
dec
inc
insb
rorb
cmp
xchg
push
mov
jg
insb
add
and
cltd
jl
xor
sub
sbb
cs
mov
xlat
inc
jae
and
sub
pop
pop
fcompl
stos
nop
je
out
adc
dec
stos
mov
xchg
int
inc
ret
aaa
and
mov
ret
adc
shrl
lcall
fadds
mov
inc
push
insl
and
pop
fprem1
jae
test
add
addr16
cwtl
jge
into
lock
pushf
dec
ss
movsb
outsl
mov
xchg
or
pop
dec
repnz
add
pop
pop
lds
add
in
cli
addb
push
pop
out
clc
push
mov
scas
jl
fldenv
or
lds
xor
loop
mov
loopne
dec
sbb
sahf
mov
repnz
mov
dec
pop
push
ret
adc
outsb
or
and
pop
sar
ss
jne
push
or
jge
aaa
out
cwtl
jb
xor
test
je
push
cmpsl
mov
mov
je
mov
das
pushf
and
mov
mov
shlb
sub
dec
push
addb
iret
inc
sub
je
scas
addl
inc
inc
push
stc
push
fs
sub
xor
pop
sbb
mov
push
sub
jg
leave
mov
xchg
add
jns
test
mov
adc
sub
lock
sbb
aam
jmp
icebp
out
mov
dec
add
scas
pushf
shrb
inc
push
iret
inc
ret
mov
dec
lret
adc
push
in
std
mov
in
sub
repz
imul
das
dec
in
pop
insl
add
mull
sub
jle
aad
mov
das
sbb
out
scas
jns
scas
jbe
adc
sub
call
mov
enter
mov
dec
dec
cltd
popa
push
in
mov
test
xor
or
aad
cmc
add
mov
ret
mull
mov
clc
aad
adc
cmpl
dec
sti
sub
push
nop
mov
xorps
push
dec
sbb
jecxz
jbe
aas
movsl
add
push
es
and
fidivs
fdivs
dec
dec
sbb
imul
push
add
mov
je
push
sarb
and
push
imul
bound
test
add
out
aas
or
pop
lret
xchg
xchg
aas
sbb
sahf
push
push
out
inc
mov
ret
jmp
add
push
and
inc
lock
sub
add
and
cmp
add
mov
popf
out
xor
in
sbb
adc
dec
mov
dec
xlat
cmp
inc
inc
pusha
mov
add
sub
mov
jnp
pop
int
repnz
fucom
clc
arpl
xor
int
repnz
xor
xor
das
or
add
punpckhwd
and
dec
sbb
inc
jge
xchg
in
jge
nopl
mov
sub
inc
repnz
dec
out
lret
testb
push
leave
or
cmpb
adc
dec
idivl
lcall
mov
ljmp
mov
mov
or
lret
test
jg
add
push
fsub
jb
mov
adc
cmp
xchg
subb
mov
addr16
sbb
fiadds
pop
sub
clc
jnp
call
sub
enter
fs
or
dec
or
test
mov
push
sub
flds
sub
push
or
arpl
adc
mov
inc
ljmp
les
xchg
xor
mov
rclb
xor
pop
shlb
aam
add
jno
dec
fiaddl
xchg
cwtl
js
cmp
fnsave
pop
push
mov
stc
arpl
push
adc
mov
jle
pusha
repz
mov
iret
jmp
je
in
sbb
fiaddl
jo
cwtl
outsl
xchg
add
ficoms
out
mov
push
test
xchg
test
pop
xchg
pop
xchg
mov
sub
mov
outsl
push
jmp
cmpsl
add
lret
jb
inc
mov
roll
adc
adc
xrelease
out
scas
add
xor
aas
fwait
sti
mov
int
scas
pop
leave
push
fwait
pop
cltd
sub
or
fwait
xchg
inc
mov
gs
out
stos
mov
clc
lock
addb
push
mov
mov
stc
adc
cmc
push
dec
or
add
stos
mov
aad
dec
test
clc
adc
into
sar
push
mov
xchg
out
dec
mov
mov
push
and
leave
lcall
cs
lret
mov
ret
clc
in
cmp
pop
popf
test
scas
stc
jle
scas
push
sbb
cmpsb
add
movsl
inc
in
push
sub
push
out
jns
ja
jne
pop
in
add
in
add
loopne
call
push
jmp
push
in
aas
mov
insl
inc
dec
xchg
xchg
jle
dec
lahf
and
jo
fsubl
dec
xor
jns
iret
push
push
lret
imulb
in
cltd
cmpsl
jp
fidivl
jo
inc
insl
pop
je
cmp
into
imul
push
adc
pusha
and
push
loop
and
repnz
ret
rcpps
mulb
mov
jl
out
lods
sbb
negl
addl
lods
inc
test
loope
cmp
adc
clc
mov
out
das
arpl
push
cld
adc
sbb
mov
imulb
addb
stos
lods
sub
mov
or
stc
inc
add
mov
xchg
outsb
loop
fucomip
dec
sub
add
adc
sbb
adc
mov
icebp
mov
ret
idivb
mov
mov
orb
mov
sub
fsubrs
sub
mov
loopne
testb
call
push
movsb
popa
into
inc
and
mov
test
sub
jle
sub
ja
dec
dec
sbbl
sbb
xor
repz
sub
push
int3
or
repnz
and
xchg
inc
jmp
mov
lea
imul
push
xchg
mov
sti
mov
cmp
dec
lret
xchg
adc
inc
push
add
sti
sbb
std
negb
nop
aad
mulb
dec
scas
shlb
inc
stc
mov
lahf
cmp
and
cli
js
fs
sbb
call
cmp
fwait
testl
mov
pop
or
xchg
arpl
movsl
xchg
push
xor
xor
mov
mov
xorl
mov
fwait
adc
mov
adc
mov
jg
aad
push
lcall
push
shr
fidivs
inc
xor
pop
push
ret
insl
mov
xchg
insb
pop
cmc
sub
lea
cwtl
sahf
add
fsubp
mov
push
and
out
push
pop
call
adc
hlt
fldcw
dec
push
fdivr
nop
dec
outsb
andb
xchg
xchg
push
or
lock
shrb
lods
test
xor
int
lcall
fisubrs
pslld
sbb
dec
push
jbe
and
fstp
inc
mov
mov
sub
ret
mov
push
in
scas
das
or
adc
pop
scas
or
shl
stos
inc
lahf
sbb
imul
sbb
ds
es
shlb
sti
loop
push
test
sahf
cmpsl
shlb
and
jle
lock
mov
cmp
mov
push
or
jb
mov
mov
sbb
loope
dec
fincstp
call
ljmp
pop
mov
push
enter
jecxz
cmp
bound
enter
int
jp
scas
mov
pusha
xchg
mov
inc
add
aad
test
cmp
mov
xchg
pop
daa
and
mov
data16
push
call
jmp
inc
mull
cli
mov
xchg
aas
or
adc
or
pushf
jmp
aas
mov
sbb
and
mov
jmp
aaa
mov
mov
add
filds
mov
adc
pop
jae
ret
xchg
popa
xchg
icebp
js
or
shll
lret
xchg
aad
rorl
idiv
ret
xchg
stc
stc
and
lds
push
dec
popa
imul
movsb
inc
dec
push
cmp
fildll
fdivrp
dec
enter
mov
fidivl
pop
pop
stos
push
fildl
mov
mov
cmp
mov
and
ficoms
mov
fmull
jne
mov
sub
mov
xchg
xchg
and
gs
dec
cmpsb
aaa
into
std
shll
lret
jb
mov
add
cltd
ljmp
pop
das
pop
cs
mov
stos
mov
sub
out
cmc
aaa
mov
mov
stos
lret
or
sbb
or
or
and
xchg
popf
lret
and
jmp
int
xor
mov
test
mov
pop
cwtl
mov
lds
dec
mov
pop
inc
add
push
xchg
data16
ficoms
sub
cs
xchg
and
mov
lcall
cmc
scas
and
loope
sbb
das
and
pop
inc
push
jle
cmc
cmp
jle
arpl
mov
sbb
lds
lds
lahf
jb
pusha
lcall
mov
cmp
push
shr
and
adc
fiaddl
push
cs
pop
pop
test
rorl
pop
rolb
vmulps
adc
cmp
movsl
fs
mov
mov
data16
lret
es
stc
imul
mov
sub
dec
dec
or
pop
shll
test
inc
je
sub
add
xor
jge
mov
je
jge
aaa
decb
shrb
in
fldt
fisubrl
aas
push
push
sub
in
push
loopne
imul
and
aad
mov
jg
fldl
xor
aad
inc
nop
jg
in
mov
lcall
ret
xchg
sbb
add
jo
cmp
movsb
fwait
into
push
or
cs
xor
aas
test
jo
xchg
adc
outsl
xchg
cmp
jp
fsubrs
and
outsl
insl
jnp
mov
out
pop
in
push
movsl
or
lds
pop
je
cmp
cmp
push
push
inc
mov
dec
inc
add
in
or
add
icebp
inc
xor
xchg
dec
add
call
loop
add
pop
push
inc
and
nop
stos
outsl
add
lods
sbb
xor
jle
push
dec
xor
outsl
in
adc
subb
ret
enter
mov
pop
lods
arpl
pop
cld
mov
popf
out
fsubrs
mov
insb
jmp
dec
push
push
fistl
dec
fcoms
popf
mov
cmc
das
test
ss
pusha
add
je
pop
in
frstor
ja
xlat
or
sub
ret
jbe
mov
jo
mov
mov
out
mov
fwait
jmp
gs
outsl
xor
loope
mov
aas
mov
sub
rcll
cltd
xchg
in
sub
bound
and
jae
sar
rolb
mov
orb
subb
or
ljmp
mov
fmuls
xchg
sbb
push
mov
in
call
ljmp
pop
and
inc
push
push
push
das
jg
pusha
stos
push
mov
pop
inc
in
jns
jg
je
mov
xchg
xchg
enter
inc
mov
push
mov
mov
add
mov
pushf
and
mov
sub
pop
addb
mov
and
loope
or
push
enter
fbld
fisubrs
int3
mov
and
popl
adc
js
shrb
aas
movsb
inc
scas
in
inc
xchg
adc
pop
aam
cmp
add
out
sub
pop
inc
jne
xchg
and
mov
push
fdivl
cmpsb
shll
dec
insl
sub
out
mov
mov
mov
inc
cmp
popf
stc
out
inc
les
loope
mov
jge
or
pusha
mov
mov
arpl
sub
test
mov
xchg
lcall
xorb
daa
fdivr
cmp
sbb
mov
lret
ret
mov
divb
mov
mov
lock
sbb
jbe
test
jecxz
adc
inc
xchg
xchg
cmp
cmp
cmpsl
sbb
jae
in
mov
enter
cmp
popa
movsl
cmc
ret
int
jle
push
aad
push
or
or
or
rclb
aam
clc
dec
adc
cmp
inc
mov
jp
movsl
jae
xchg
clc
inc
je
jmp
mov
push
loope
lea
add
adc
inc
push
xchg
jmp
mov
mov
or
jns
popa
or
xchg
movsl
adc
cmp
mov
filds
repz
fcmove
add
push
stos
cmpsb
inc
xor
fstl
cmp
add
test
stos
imul
mov
jns
xor
aaa
xlat
push
insb
iret
pop
push
test
rcll
cmp
outsb
mov
leave
xchg
dec
pop
dec
pop
lcall
rep
sub
addr16
ret
out
cld
aas
dec
pusha
fadds
lds
jb
adc
jae
mov
jp
lret
sbb
bnd
xor
mov
adc
mov
sub
and
jo
mov
mov
imul
mov
lods
pop
aad
xlat
test
loop
call
pushf
and
push
add
adc
xlat
aam
data16
lods
cmpsb
std
sub
inc
imul
cwtl
clc
or
mov
push
jl
lret
icebp
jbe
add
and
jge
loop
and
jo
add
dec
cmp
xchg
jmp
push
xor
mov
inc
stos
dec
dec
cmp
or
dec
outsl
mov
pop
cmp
popa
fistpl
addl
test
punpcklwd
ret
jge
das
dec
mov
jle
mov
push
lret
int
push
adc
mov
push
jp
pop
jb
pusha
test
and
cmp
das
jmp
fsubr
mov
xchg
aaa
cmpsb
adc
mov
adc
inc
callw
stc
stos
sub
adc
xor
ss
andl
lock
adc
mov
lret
insl
enter
sti
mov
lahf
iret
pop
test
xor
adc
cwtl
dec
cli
add
fidivrs
sbb
inc
dec
out
and
xchg
pop
jg
cmpsl
dec
mov
out
cmpsl
mov
je
lds
xlat
cltd
or
dec
cmp
clc
cmp
sbb
gs
int3
leave
dec
dec
mov
and
sti
sbb
ds
cmp
scas
adc
and
nop
ja
jbe
mov
push
mov
out
pop
cli
fs
mov
xor
jbe
add
movsb
push
dec
mov
and
or
mov
inc
out
xor
and
mov
mov
pop
sub
and
cmpl
inc
insb
xchg
fidivl
sbb
fisttpl
inc
fwait
rcr
adc
jp
inc
push
mov
stos
jg
sub
inc
inc
es
stos
jmp
adc
int3
dec
in
out
lods
cmp
push
decl
test
or
int3
xor
jle
shr
repnz
dec
movsl
sub
push
push
insb
jg
pop
mov
and
notb
lods
dec
int
fistpll
sub
not
xlat
add
cwtl
jle
adc
sbb
psubsw
lcall
inc
add
jnp
xor
mov
jl
sub
cmp
ret
mov
mov
pop
sub
ja
ss
insl
push
lret
rcl
negl
pop
sbb
insl
sbb
mov
les
pusha
mov
pop
add
mov
adc
inc
ss
cmpsl
mov
mov
jmp
in
incb
mov
mov
xchg
inc
mov
mov
lds
jecxz
inc
cmpsl
in
ficomps
sti
sti
push
in
fwait
test
or
andl
dec
lds
jae
sub
lds
das
jb
daa
xor
stos
fwait
imul
fmul
pop
adc
push
int
jbe
sarb
test
inc
sub
repz
add
out
mov
lea
test
jmp
sub
inc
jae
push
pop
ret
xorb
scas
jp
pop
arpl
shrl
or
mov
mov
adc
stos
sbb
or
loopne
sub
je
es
pop
xor
mov
and
stc
adc
scas
imul
mov
mov
negb
xlat
sbb
xchg
cmc
out
or
in
mov
or
daa
jbe
setb
adc
bt
jnp
daa
fbld
and
add
sahf
icebp
lods
test
arpl
jecxz
adc
icebp
or
fisttps
ret
mov
or
push
cmc
lret
xor
dec
outsb
jne
and
lods
sub
lret
daa
imul
dec
add
mov
sub
jnp
andl
inc
xchg
cs
mov
cmp
dec
scas
jb
lds
or
jnp
stos
fcmovne
fildll
adcl
add
xor
dec
outsb
inc
mov
mov
sub
jo
das
mov
mov
cmc
out
jmpw
push
pop
cwtl
xor
rcrl
mov
inc
cmpsl
repz
push
es
enter
push
out
push
rol
out
inc
push
adc
cmp
xchg
cmpsl
cmp
cmp
ja
inc
cmpsb
sbb
adc
adc
out
xchg
push
pop
mov
xchg
fadd
dec
sbb
aad
arpl
inc
adc
add
jns
call
pop
imul
repnz
and
pop
ret
lods
imul
lcall
subl
push
mull
aam
out
outsb
fwait
cmp
fadds
push
cmpl
jmp
cwtl
sbb
mov
insb
pop
xchg
and
outsl
fadd
adc
das
adc
sub
js
shl
cmp
jno
mov
push
jbe
cmp
xchg
xor
xor
out
xchg
lret
push
cmc
and
jl
jnp
mov
xchg
xchg
subl
push
jg
mov
stc
inc
dec
fstps
jecxz
add
pop
cmpl
das
fnsave
ret
add
scas
pop
loope
push
push
mov
subb
dec
aam
leave
push
clc
ljmp
jp
and
js
sar
adc
aam
push
ret
mov
mov
arpl
mov
call
data16
shlb
pop
into
cwtl
and
arpl
cli
out
mov
add
leave
in
lahf
js
and
cmpsl
xchg
stc
popf
pop
test
mov
mov
jecxz
inc
icebp
mov
ljmp
add
mov
mov
divb
inc
insb
or
ret
inc
push
es
jg
mov
jb
imul
jl
sarb
add
aas
gs
aam
cmc
int3
addb
icebp
add
pushf
sub
clc
mov
in
cs
mov
add
jle
cltd
mov
xchg
sti
pop
mov
jb
jb
mov
mov
aam
push
xchg
pop
jp
xchg
addr16
push
pop
test
jmp
cmp
cmp
or
js
sub
add
jo
adc
fldl
sbb
add
aas
pop
leave
fwait
mov
mov
icebp
adc
xlat
sbb
insb
adc
cs
stc
inc
ja
int
in
cmp
out
mov
pop
push
pop
stos
test
pop
push
loope
push
sbbb
jnp
cmp
stc
les
add
shlb
xlat
pop
sbb
repz
or
ss
ror
cld
insb
lcall
cld
mov
pop
nop
dec
xlat
inc
jnp
jg
sub
mov
sub
mov
push
jmp
nop
xchg
xor
jl
mov
xchg
cli
ds
fwait
and
xlat
ss
inc
dec
pop
sub
shll
ds
pop
mov
push
icebp
push
fstpt
jmp
in
test
cmpsb
sbb
dec
mov
loope
lods
adc
jno
ret
iret
dec
cmp
icebp
dec
or
mov
imul
push
inc
inc
in
clc
scas
adc
inc
sbb
fistpll
add
arpl
call
adc
sbb
sbb
fnstsw
sbb
mov
enter
stos
ja
test
ja
movsl
in
mov
ljmp
pop
inc
in
vpcmpgtw
stos
in
xor
pop
xchg
aas
lahf
cmpl
mov
and
inc
ret
jl
aas
mov
dec
mov
xor
xlat
jns
xor
jmp
mov
xor
mov
push
mov
mov
xor
jno
lret
sti
lcall
push
addr16
arpl
lret
loopne
stos
sub
rclb
mov
or
xchg
std
push
push
xchg
mov
pop
aas
out
arpl
cmp
jg
mov
shll
in
popa
fs
cmc
sub
add
fistpl
jge
dec
stc
repz
and
insl
jecxz
and
inc
fs
mov
jmp
mov
mov
cmp
jmp
jns
inc
mov
repz
call
add
and
cmp
inc
loope
jmp
jbe
cmp
sub
jbe
cmp
sbb
xchg
aas
jmp
push
lds
xchg
fnsave
xor
and
sub
daa
out
into
mov
inc
jp
repz
sub
sub
jecxz
push
filds
jl
add
test
cmp
cmp
pop
je
push
clc
sbb
fiaddl
jo
daa
sub
jecxz
push
addr16
xchg
lds
scas
scas
pusha
dec
je
cmp
xor
jbe
jne
pop
scas
mov
movsl
pop
lock
pop
sbb
push
dec
stos
pop
sub
movsb
ds
cmpsl
push
xchg
sub
inc
sbbb
push
in
pop
js
jecxz
stos
lret
idivb
pop
arpl
xor
and
push
call
push
scas
fmul
inc
js
testl
push
push
xchg
adc
inc
fsubl
mov
sbb
cs
aaa
xor
dec
adcl
aam
out
add
jne
aad
mov
out
pop
jmp
xchg
shll
and
pop
les
sahf
xor
aad
scas
pop
add
sbb
inc
shrl
xchg
out
xor
test
pop
jae
mov
inc
icebp
bound
pop
mov
pop
call
adc
dec
mov
fsubrl
and
mov
repz
mov
fbstp
andl
xchg
ret
inc
cmpsb
popf
mov
xchg
mov
bound
push
mov
dec
nop
push
cli
mov
insb
popa
sarl
adc
fwait
out
popf
jmp
cmc
xchg
movsb
sbb
and
mov
mov
ret
dec
fists
mov
mov
enter
and
test
and
addb
mov
je
fs
cmp
mov
jge
mov
mov
repz
sbb
loopne
test
xor
icebp
sbb
mov
push
into
insl
xchg
ret
into
mov
xor
ljmp
push
aas
mov
push
dec
loop
jne
or
jmp
mov
mov
ss
scas
call
push
jp
arpl
jns
call
fs
inc
mov
lds
int
mov
mov
jg
pop
js
xorl
mov
idivb
adc
mov
mov
ficompl
mov
mov
cmpsb
lahf
dec
push
lods
ds
lds
notb
pushl
gs
out
fcomp
mov
lea
stos
nop
dec
daa
cwtl
adc
dec
add
in
jno
jp
popf
dec
adc
xchg
rcrl
mov
stos
push
ds
mov
mov
sahf
pop
inc
hlt
ret
and
leave
inc
das
pop
pushf
ret
push
mov
or
jmp
push
dec
out
cltd
inc
xor
push
shll
cmp
and
ljmp
ret
lret
mov
mov
pop
fsub
in
push
popa
int3
sahf
add
das
out
push
pop
test
cmp
fcomps
insb
test
push
imul
mov
sbb
scas
hlt
sti
pushf
ljmp
cltd
mov
pop
mov
outsl
xchg
cli
fisttpl
cmp
and
xchg
mov
lea
inc
mov
ljmp
addr16
cld
inc
loop
ret
mov
inc
rolb
or
mov
inc
fistl
xor
lahf
int
movsb
sbb
out
ficoms
push
adc
or
rolb
inc
or
mov
sub
dec
rorl
jg
and
aas
pop
pop
sbb
pop
pop
out
jae
mov
and
mov
lods
clc
xor
ljmp
add
ficoml
sub
dec
fisttps
andl
xor
push
jno
lods
insb
dec
out
iret
rorb
jl
adc
sbb
mov
xchg
and
jecxz
push
int3
ret
int3
aas
add
cmc
jne
jl
xchg
outsb
push
adc
les
inc
or
dec
inc
popf
pop
into
dec
jmp
arpl
hlt
jp
fiaddl
bound
sbb
mov
jg
dec
imul
lahf
push
imul
xchg
push
adc
xchg
in
dec
pushf
cmp
fstpt
dec
and
ficomps
fists
out
addr16
and
pop
push
iret
xchg
cmp
xlat
fidivrs
xor
dec
adc
sub
pop
fnstenv
fiaddl
imul
cli
mov
mov
ja
out
xchg
pop
sbb
outsb
cmp
repnz
sbb
cmp
inc
inc
mov
pop
dec
push
loopne
dec
add
inc
ds
test
mov
incb
cmpsb
lahf
popa
das
mov
jno
test
jp
aam
enter
and
mov
cmp
mov
lods
out
lock
dec
sbb
cmpsl
stc
adc
hlt
nop
jmp
xchg
mov
jae
in
daa
dec
cmp
pop
ja
mov
sub
jne
jno
imul
loopne
movsl
sbb
sub
or
repz
cmp
mov
dec
lea
inc
daa
test
aad
cli
bound
enter
pop
inc
jge
lea
jecxz
push
jno
lret
test
hlt
add
ret
negl
jbe
je
xlat
mov
mov
dec
mov
ss
add
mov
cld
out
aaa
pop
mov
dec
out
sbb
mov
popa
cmpsl
aas
nop
filds
jp
mov
sbb
jl
icebp
lret
lahf
inc
and
cltd
xor
push
mov
inc
movsl
mov
fcmovnb
cld
daa
cwtl
sbb
adc
cmpsl
test
mov
mov
aas
out
push
inc
cmp
mov
lods
aas
out
mov
jne
addr16
or
add
push
lds
popa
mov
mov
pop
aas
pushf
and
jns
ffree
ficompl
pop
xor
test
jl
mov
jmp
pop
in
sub
xor
adc
and
mov
daa
fbstp
mov
sahf
adc
lock
push
ljmp
jne
outsb
aaa
jb
arpl
mov
call
mov
lret
cmp
pop
out
mov
cmc
push
stos
lret
dec
mov
lods
xchg
xchg
insb
and
mov
js
and
stos
push
ret
pop
adc
imul
je
xchg
or
dec
sub
cmp
movsb
and
test
popf
clc
cwtl
adcb
mov
xchg
aam
cmp
add
imul
js
push
push
sbb
or
fcompl
scas
xor
jae
jo
leave
das
out
mov
cmp
insb
in
mov
into
pop
inc
scas
mov
cmp
daa
fsubr
stos
loope
jle
pop
mov
push
pop
test
sbb
sub
inc
mov
insl
sti
sbb
cmpl
push
ds
or
hlt
sarb
shlb
adc
push
xchg
dec
scas
jae
fldcw
xor
add
jnp,pt
das
sub
rcl
jns
jo
mov
jp
and
shll
mov
lock
icebp
lahf
add
rcrl
in
xchg
hlt
xchg
outsb
mov
jnp
imul
outsl
mov
sub
push
adc
mov
xchg
sbb
movsl
jl
push
imul
lds
mov
addb
fists
dec
mov
sub
cmpsb
insl
pop
js
mov
sbb
insb
les
jns
inc
sub
mov
sbb
cs
mov
dec
push
cmp
push
cmp
rep
popf
into
push
or
sbb
sti
pop
bound
test
cmp
hlt
push
insb
pop
loopne
fwait
fs
leave
iret
inc
mov
push
stc
mov
pop
movl
movb
cmp
mov
jae
cmp
popf
jo
xchg
orb
add
mov
xor
add
cli
repz
aaa
fcompl
lock
subl
fsubr
sub
dec
insb
je
pop
shll
mov
out
mov
movsl
lock
rclb
nop
mov
or
aad
dec
psllq
pop
or
aam
lea
and
ss
mov
push
mov
xorl
xor
cmp
sbbl
in
cmp
push
insb
inc
repz
mov
pop
call
push
xchg
out
stos
sbb
insb
stos
int3
inc
test
dec
bound
movsl
jno
xor
jnp
and
dec
shl
iret
add
and
sahf
cltd
aas
mov
inc
std
inc
das
push
enter
in
xor
and
test
push
and
pop
and
pusha
xchg
sub
pop
push
test
jmp
xchg
mov
imul
add
mov
flds
mov
dec
gs
inc
shrb
movsl
mov
push
pop
add
rol
out
xlat
sbb
jg
mov
and
int3
and
mov
mov
cmpsl
jne
adc
aas
push
dec
inc
and
mov
mov
enter
mull
cmp
nop
cmp
mov
dec
xor
jl
add
pop
xor
out
lock
and
outsb
into
and
or
scas
hlt
adc
popa
icebp
sbb
jge
dec
out
in
cmc
mov
lret
popf
cld
cltd
call
js
and
xor
cmpsb
daa
popa
aas
dec
pop
roll
xchg
lds
jne
mov
add
call
cmp
pushf
lea
adc
das
inc
push
mov
sbb
mov
fldt
aam
ss
push
repz
cmpsb
jns
mov
and
or
xchg
inc
dec
jae
imul
adc
sbb
lea
inc
mov
xor
add
sub
lea
adc
xchg
push
mov
dec
jl
cld
sub
pop
pusha
jge
in
xchg
mov
jmp
jle
lods
push
out
pop
inc
push
fs
addr16
push
xchg
out
std
dec
movsb
repnz
or
scas
push
mov
clc
scas
les
aaa
insb
jo
xchg
push
mov
andl
and
shr
or
int
cs
jns
cli
and
push
stos
xchg
jge
sub
adcl
cmp
sti
mov
outsb
jne
sbb
xchg
pop
mov
inc
rcr
int
test
add
cmp
mov
cmp
icebp
lds
popf
mov
push
and
and
mov
out
sub
mov
or
and
mov
cwtl
push
sub
mov
xchg
inc
or
adc
mov
sub
mov
popa
xchg
sar
jg
and
fsubrp
in
js
xor
out
je
ds
stc
movsl
pop
adc
bound
mov
mov
mov
xchg
out
rol
pop
setns
inc
outsb
jle
mov
movl
movsb
mov
jne
dec
push
mulb
or
lds
dec
daa
in
call
add
pop
and
dec
adcl
mov
shrl
out
sar
inc
lods
inc
fucomip
ret
mov
leave
mov
ljmp
cli
jle
outsb
or
pop
mov
pop
sub
cmpsl
and
movsb
cmc
cltd
mov
mov
mov
sti
pop
push
mov
sub
dec
int3
sbb
adc
push
insb
mov
cli
bound
jmp
cmovg
mov
in
push
jp
jne
xor
les
mov
jecxz
inc
fldt
cltd
pop
mov
jo,pn
ds
push
int3
ljmp
in
out
xchg
pop
insl
xor
loopne
and
jno
cmc
inc
in
insb
stc
stos
dec
test
push
bound
out
dec
andb
in
fiadds
add
imul
or
ret
jbe
icebp
xchg
addl
cmp
push
imul
loopne
shll
rcrl
mov
xchg
mov
in
sbb
dec
stos
xor
xor
out
ret
pop
inc
cmp
cs
aas
lock
adc
or
pop
mov
adc
mov
mov
cmp
mov
into
lods
call
testb
mov
cmp
enter
popf
loop
in
lods
and
mov
mov
mov
xchg
jmp
fdivl
pop
insb
xchg
mov
adc
popa
sub
stos
popf
mov
pop
jmp
or
sbb
mov
lret
mov
mov
out
cmp
mov
scas
and
or
inc
add
sub
cmp
in
lcall
sub
popa
cld
dec
popa
nop
mov
imul
scas
mov
data16
ja
xchg
gs
shll
in
nop
stos
mov
push
cmc
out
daa
sbb
fdiv
fisubrl
pop
sbb
stos
jae
dec
addr16
dec
outsl
cld
out
fdivrl
fldenv
lret
lock
inc
repnz
roll
add
push
rcrl
dec
loope
adc
cmp
mov
int
add
orl
jb
ja
mov
int
or
sbb
push
movb
shll
jp
popa
repnz
sub
daa
fwait
jno
mov
jge
fucomp
cmp
into
stos
rcll
out
add
sbb
fucomp
mov
pop
loop
mov
xor
pop
cmp
into
push
lock
jbe
hlt
cmpsb
stos
cli
mov
push
mov
les
push
fdivrl
arpl
lcall
lea
lock
sub
fsubs
jle
outsb
xor
mov
push
stos
mov
pop
adc
pusha
cli
push
jge
jle
rolb
fsubrl
jae
add
aad
xchg
stc
jge
pop
xlat
mov
mov
xor
mov
into
incb
sysexit
jae
adc
aad
mov
sbb
pop
push
or
add
stos
insl
push
push
js
dec
adc
push
mov
aas
lds
mov
jns
fcomp
jl
pop
rcrb
loop
into
fucomi
sub
shll
je
xorl
mov
in
jns
aas
popa
push
jl
and
sbb
or
lcall
inc
ret
leave
cmc
insb
pushf
inc
dec
ss
jns
push
lret
xor
bt
mov
mov
jb
fucomi
jb
push
out
cli
test
push
mov
js
pop
js
clc
test
outsb
popf
psubd
sub
nop
lods
push
leave
cmp
ucomiss
shrb
sbb
cmp
in
jns
stos
mov
data16
in
outsb
icebp
leave
aaa
and
xor
shl
mov
mov
sti
fsub
mov
scas
ss
fisttpll
sbb
out
xchg
je
in
lods
mov
jo
jbe
cmp
sub
lods
leave
ret
fwait
jno
add
jno
xchg
jo
cld
data16
lock
jg
stc
mov
cltd
out
cli
cmp
and
movsb
mov
mov
std
dec
adcl
imul
insb
outsb
sbb
mov
dec
add
imul
push
push
mov
mov
jb
icebp
push
dec
jnp
mov
adc
xchg
cld
scas
mov
sub
mov
xchg
sbbl
and
or
int3
jbe
mov
cmp
or
or
mov
cmpsb
in
pop
inc
mov
fs
or
in
xor
sbb
push
outsl
rolb
push
pop
lahf
mov
inc
adc
xchg
aaa
ja
mov
inc
mov
pop
call
in
xchg
mov
jns
sbbb
icebp
in
pop
adcb
hlt
imul
movsb
jbe
out
notl
push
mov
lods
in
xor
cmpsl
movsl
lea
or
popa
ss
inc
sti
inc
gs
shl
orb
mov
dec
fistl
or
insb
dec
pop
imulb
or
adc
xchg
mov
mov
ljmp
cli
xchg
sbb
leave
insb
sahf
dec
pushf
push
mov
fstpl
push
xor
xchg
bound
mov
fwait
mov
inc
andl
test
jecxz
jns
gs
shrb
imul
andl
sarb
test
add
jecxz
test
movsb
test
pop
sub
xchg
inc
popa
pop
inc
andb
gs
int3
and
push
lcall
dec
dec
loope
push
push
popa
mov
inc
xchg
xor
cmp
add
or
pushf
or
mov
loopne
sub
pop
or
and
mov
add
iret
out
pop
clc
jmp
mov
jmp
cli
ds
push
fistpll
jnp
cmpsl
sbb
xor
xchg
cmp
nop
out
scas
xchg
pusha
add
bound
sbb
or
mov
outsb
scas
inc
loope
ss
xorl
jmp
pop
inc
mov
mov
pop
mov
std
sbb
fsubl
fwait
pop
ds
shll
lock
push
repz
ljmp
in
sahf
daa
mov
out
mov
dec
ret
hlt
mov
push
mov
pop
mov
ret
lret
popf
shll
mov
cmp
cmpsl
pop
or
pop
cmp
cmp
in
jnp
pop
mov
xchg
enter
outsl
jg
sahf
ja
adc
jbe
loope
insb
mov
add
iret
dec
bound
add
jge
mov
pop
dec
cmp
je
or
movsb
cmp
shrb
or
inc
insb
subl
out
sbb
adcb
jnp
or
jne
arpl
cmp
lahf
cmp
adc
gs
int3
sub
cwtl
sub
fiadds
fisttpll
inc
mov
mov
mov
ss
jg
mov
add
mov
sub
jb
cltd
fnstsw
and
enter
jb
pop
mov
mov
fstl
mov
scas
enter
mov
inc
sub
fisubs
xchg
inc
sarb
leave
popf
xchg
inc
fstps
js
orl
dec
xchg
ficompl
mov
pop
mov
mov
aam
jg
adcl
loopne
popa
add
inc
mov
jg
dec
dec
cwtl
inc
mov
add
sub
push
sub
mov
int
push
test
ret
mov
mov
int
shlb
adc
clc
loop
ror
notl
inc
mov
pusha
mov
clc
lahf
sub
pop
add
adc
mov
cmp
sbb
sbb
xchg
cmp
jnp
pop
push
pop
sti
pop
lea
aam
or
fwait
pusha
xor
jno
int
jmp
clc
push
inc
fmuls
jo
xor
xor
sbb
mov
cmpsb
repz
sbb
les
xorb
sub
roll
shlb
pop
stc
ret
cwtl
mov
pop
movsb
sub
dec
mov
js
ljmp
rcll
sbb
repnz
fwait
adcb
cwtl
inc
add
int3
sbb
movsb
xchg
aas
ja
or
call
sar
leave
mov
xchg
call
add
mov
add
les
jmp
imul
and
aad
mov
testb
jecxz
or
insl
adc
mov
jmp
fsts
push
push
sarl
push
xor
mov
mov
in
out
pop
adc
imul
decb
mov
daa
jle
ljmp
or
or
fadd
xchg
xor
cwtl
mov
xchg
enter
cmp
imul
inc
mov
pusha
xor
jnp
rcrb
lock
ret
mov
add
loope
hlt
inc
mov
inc
mov
iret
out
std
pushf
in
xchg
jecxz
movsb
std
enter
adc
test
fldenv
in
or
mov
or
mov
jg
pop
lahf
cmp
mov
mov
cmpsb
rorl
jle,pn
movntps
mov
and
loope
pusha
cmpsl
mov
cmp
push
inc
jns
sbb
push
pushf
cmpsb
add
mov
sub
mov
outsl
sbb
pop
push
movsl
jae
setno
lock
dec
ret
and
gs
sbb
mov
test
dec
or
mov
jge
pop
push
into
cli
push
jecxz
mov
sbb
cmp
dec
inc
fists
cmpsl
inc
adc
test
das
add
mov
out
stos
scas
popf
or
push
push
adc
adc
jl
jp
pop
in
pushf
jo
loopne
iret
xor
inc
inc
pop
xor
test
push
push
mov
cld
ja
inc
adc
inc
mov
bound
push
inc
aaa
out
jg
call
mov
mov
sbb
jecxz
push
mov
sub
ds
leave
dec
xchg
jnp
fisubs
ja
xchg
popa
pusha
push
inc
scas
lahf
cltd
out
pop
add
sbb
and
in
outsb
or
inc
fmuls
fdivrl
inc
aad
sbb
adc
xchg
pop
das
cmp
mov
loope
cmp
jne
mov
imul
mov
ds
mov
mov
lods
in
mov
jmp
pop
outsb
adc
rclb
mov
sbb
hlt
inc
add
call
scas
xor
enter
fldcw
mov
push
push
aad
jecxz
lods
and
lods
iret
jne
pop
mov
stos
fisttps
mov
out
movl
icebp
mov
and
scas
jle
mov
mov
inc
jne
aaa
js
ss
dec
sub
ss
ret
test
mov
imull
push
add
inc
xchg
dec
jp
nop
or
mov
jl
data16
and
mov
icebp
fimuls
pop
push
inc
call
int
rolb
outsl
push
mov
push
test
lret
cmp
pop
lods
fsts
jp
fs
imul
aaa
inc
xchg
push
out
cmp
dec
loopne
and
xchg
mov
fiaddl
testb
adc
scas
adc
into
in
daa
and
cmp
in
dec
mov
sti
fldl
mov
js
inc
scas
ljmp
mov
xor
mov
xchg
notl
dec
insb
jmp
pop
mov
jle
mov
sub
xchg
or
test
pop
imul
push
xor
jnp
fildll
leave
mov
mov
fst
arpl
popf
into
in
fcoml
cld
adc
pop
add
jno
popf
fs
repz
out
add
or
xchg
sub
mov
add
jbe
std
pop
fwait
pop
mov
push
sub
cmp
sbb
xor
call
outsb
adc
popa
push
add
scas
adc
dec
cmp
xlat
xlat
jg
imul
pop
pop
mov
lds
shrl
cli
dec
inc
sub
push
cmp
adc
leave
in
mov
out
push
mov
mov
loop
jle
cmp
mov
adc
ficomps
xchg
lcall
orb
int
lcall
and
pop
cmpl
ja
aas
add
gs
nop
xor
dec
scas
lea
dec
cmp
or
add
rolb
mov
stc
jns
jmp
inc
xor
adc
jbe
push
lods
imul
inc
xchg
jbe
repnz
in
adc
mov
xchg
add
inc
cmp
jmp
xchg
cmp
push
mov
cli
lcall
push
jne
push
pop
lahf
xchg
pop
aad
push
ljmp
xchg
inc
mov
adc
xlat
inc
pop
pop
in
cs
pop
xor
adc
imul
mov
push
fisubrl
out
cmpl
xchg
jae
pop
jge
mov
and
aam
or
cmp
or
inc
or
cmc
pop
fldl
push
push
mov
inc
popa
mov
push
cmpsl
imul
ret
out
daa
jp
ret
enter
jg
xor
js
push
xchg
movsbl
inc
mov
push
push
outsl
test
cmp
ret
es
fcmovu
js
pop
mov
xchg
jp
fbld
sub
add
test
popa
xor
cmpb
dec
pusha
rcrl
xor
xor
addr16
xchg
mov
cmp
loope
aas
or
push
fisttps
sbb
add
jnp
fs
outsl
adc
fsubrl
loope
or
mov
and
add
ss
cmpb
hlt
repz
fidivl
fnstcw
dec
mov
js
jecxz
push
scas
jl
and
out
pop
adc
loop
xchg
or
lods
repnz
push
and
xorl
aam
scas
push
dec
loope
mov
jge
cs
cmpsl
or
or
and
loope
sub
cmpb
repnz
iret
leave
pop
cmpsl
mov
cmp
cmpsl
decl
outsl
pusha
mov
push
jg
sbb
ss
aaa
cld
das
sbb
fcmove
mov
pmullw
xchg
xor
lret
dec
adc
xchg
cmpsl
jns
pop
std
mov
xchg
scas
xor
rorb
dec
xchg
mov
pop
xchg
fs
add
mov
leave
inc
ss
push
pop
fadds
xchg
mov
scas
aaa
and
adc
fisubs
ficomps
inc
test
outsb
subb
daa
sarl
leave
mov
add
data16
dec
std
popa
xor
pop
sbb
test
aam
or
rorl
jbe
jno
xchg
lods
adc
mov
jne
and
out
xor
aad
pop
and
pop
push
orb
cmp
ret
test
push
sahf
inc
lds
or
sub
cmp
add
jmp
cmpsl
adc
lret
xchg
jne
aam
fsubs
add
inc
sbb
adc
lret
pop
cmp
es
movsb
int
cmpsl
jno
call
fnstcw
cwtl
adc
cs
fisubrs
aam
xor
fs
dec
pop
jmp
ret
mov
jmp
je
ffreep
test
jno
or
dec
outsl
mov
movsb
pop
mov
popa
cmp
and
cmp
dec
sti
mov
movsl
popf
fsubrp
sbb
cmc
loopne
mov
imul
mov
lret
xchg
and
or
sbb
push
cli
and
xor
mov
icebp
jmp
outsl
fildll
cmp
cmc
nop
jp
push
inc
fistpll
ret
mov
iret
sub
push
pop
test
jns
mov
xor
nop
push
jns
in
aam
dec
adc
outsl
xchg
sub
mov
popf
inc
loop
adc
cmp
popa
fstl
mov
cmp
lcall
or
adc
jle
scas
mov
mov
add
jecxz
lret
or
xlat
in
add
xor
or
jge
out
test
jb
fcomps
xchg
dec
call
push
inc
fidivrl
push
and
icebp
testl
mov
bound
jg
sbb
arpl
mov
jne
dec
popa
inc
jmp
data16
int
loopne
fnsave
aaa
pop
mov
pushf
or
push
jle
stos
xchg
in
cmpsl
das
push
mov
xlat
jmp
addr16
das
cli
xchg
outsb
push
and
insl
mov
aam
mov
sub
cli
enter
je
in
push
lea
and
xchg
jecxz
mov
inc
mov
call
inc
sbb
dec
mov
loop
sub
xchg
xor
cld
inc
rcll
out
daa
fimuls
cmp
mov
addl
cmp
int3
lahf
push
repz
cmp
lret
mov
aam
sti
pop
and
cmp
pop
insb
repz
or
pop
mov
test
mov
sarb
std
adc
or
inc
and
call
repz
mov
push
push
dec
xchg
std
mov
std
mov
lea
cmp
fiaddl
mov
cld
push
cmpsb
insb
jne
pop
xchg
add
frstor
in
leave
fstp
and
mov
push
pop
mov
lds
or
push
dec
mov
pop
jne
jp
mov
dec
push
std
push
push
out
mov
enter
roll
mov
gs
xchg
pushf
mov
dec
mov
inc
out
scas
mov
inc
sub
sbb
popf
repnz
test
dec
stos
pop
aad
jp
mov
pop
movsl
push
stos
inc
andb
jp
dec
out
jae
hlt
jp
lahf
jmp
negb
xor
mov
push
std
movsl
pusha
mov
subb
push
push
lods
leave
gs
outsl
daa
mov
movsl
loop
dec
dec
push
sub
jae
push
or
dec
lods
xor
push
inc
lss
pop
pushf
mov
test
js
mov
aad
sbb
loop
bound
popa
dec
out
dec
xlat
mov
mov
dec
sbb
subl
xchg
scas
lods
jb
mov
in
icebp
dec
aam
jbe
icebp
movsb
or
pop
jp
xchg
pop
ja
lahf
and
sub
icebp
outsb
mov
sbb
frstor
dec
aaa
idivl
jmp
jecxz
ja
movsl
loopne
ja
or
xchg
lods
mov
jns
callw
cmp
fwait
or
or
cwtl
push
test
sub
lahf
jns
stos
xor
jg
inc
mov
mov
or
pop
arpl
lahf
ds
and
out
xor
fdivl
rorb
fidivrs
jg
outsl
add
out
cmp
fstps
test
dec
push
out
or
divb
fdivrs
rclb
mov
or
shrl
dec
pop
push
mov
insb
push
in
aas
and
sbb
xchg
ret
xor
testl
jle
fs
lock
and
out
cmpsl
test
or
sub
mov
pop
mov
mov
xor
add
inc
sub
imul
sub
sub
jne
or
sbb
ljmp
aam
shll
and
ljmp
clc
cmpl
movsb
insb
loopne
psubq
nop
cld
sub
scas
in
and
loop
rolb
dec
pop
aaa
call
sub
loopne
fxch
leave
adc
cwtl
scas
push
adc
addl
shll
in
push
and
les
add
lea
ljmp
sysenter
xchg
xchg
and
sbb
ret
xchg
aam
sbb
pop
jle
int3
xchg
jge
pop
jns
out
cmp
sti
inc
pop
leave
cltd
mov
outsb
subb
xlat
shrl
fsubrs
add
xchg
xchg
dec
mov
mov
cmp
lret
addb
ss
test
xor
xchg
mov
out
adc
xlat
out
std
dec
mov
stos
sbb
repz
mov
mov
add
repz
push
xchg
stos
and
xor
push
ret
sub
push
mov
subl
ficoml
sti
sbb
sbb
icebp
add
insb
int
lahf
out
adc
inc
bound
sar
js
sbb
shlb
sti
aad
outsb
mov
push
pop
scas
jbe
cli
mov
fidivs
fildl
cwtl
cli
sub
jge
scas
adc
xchg
and
push
shlb
push
push
or
leave
ja
and
fsubrs
push
int
int
outsb
xchg
dec
lahf
test
adc
jecxz
mov
cmpsl
lock
pop
test
and
sub
mov
mov
fwait
sbb
and
xchg
nop
movsb
mov
outsl
adc
lret
test
jbe
stc
repz
mov
or
fsubrl
mov
xor
jnp
jp
xor
adc
jp
jns
sbbb
and
push
mov
mov
lcall
push
pop
mov
mov
jne
and
and
add
fists
mov
sbb
call
mov
dec
out
outsl
out
xchg
add
mov
or
pop
ja
push
push
movsb
push
insb
and
daa
and
out
lock
xor
and
inc
and
loope
pop
lcall
movb
push
or
sbb
push
aad
aas
inc
jno
dec
icebp
testb
clc
xor
jns
mov
xchg
mov
bound
out
into
scas
aaa
fistps
pop
je
fisubrl
mov
pop
and
loop
or
test
rclb
lods
pop
int
test
fistl
pop
cmp
cmp
xchg
outsb
jo
mov
mov
jle
mov
xchg
stos
push
lods
in
in
bound
xchg
sbb
push
stc
cmp
sub
add
pop
cmp
mov
pop
cmp
xor
mov
mov
test
dec
sbb
dec
fldt
cld
sub
push
sbb
cmp
add
mov
sub
insl
outsl
inc
add
cmovns
xchg
push
mov
cmp
leave
mov
int
lret
sbb
mov
popa
fs
je
test
xor
jmp
mov
sub
push
dec
dec
xchg
pop
and
pop
cmc
scas
loopne
mov
aaa
inc
test
pushf
jecxz
repz
pop
ss
pop
lds
leave
inc
cmpsb
loop
mov
les
icebp
xor
dec
scas
pop
add
ret
mov
or
lret
dec
ja
ljmp
ds
push
lahf
fiadds
mov
dec
fsubl
repnz
add
insl
cmp
es
dec
adc
rcrb
int
cmpsl
xchg
test
cmp
popa
roll
leave
xchg
insl
lea
cmpl
pop
xlat
fwait
jnp
sub
or
mov
out
lcall
pop
sub
pushf
inc
xchg
fnstenv
mov
mov
test
int3
pop
sub
out
mov
cmpl
push
in
sub
and
aad
mov
or
mov
mov
add
inc
adc
jns
ss
push
test
inc
and
jle
sarb
push
decl
mov
pop
leave
lea
repz
xor
or
imul
addl
ds
push
push
popa
sbb
inc
sbb
pop
cmp
inc
test
cltd
scas
pop
xor
push
push
ljmp
mov
xor
sbb
repnz
push
jo
or
test
ljmp
mov
lret
cmp
fdivrp
imulb
ljmp
mov
or
or
push
push
lock
mov
outsb
and
popf
xor
lahf
or
lret
or
adc
jo
inc
push
jle
cwtl
rolb
adc
sbb
cld
push
cltd
int
jecxz
mov
out
and
pop
popa
pop
popf
nop
push
mov
push
sbb
add
insb
jmp
cmp
xchg
lret
adc
arpl
pop
insb
xchg
mov
xor
xlat
mov
and
add
decb
cmp
outsb
jecxz
push
mov
clc
mov
out
lahf
mov
xchg
test
push
mov
inc
add
mov
test
enter
mov
jae
xchg
sub
in
test
cmpsb
push
xor
xor
and
xchg
enter
out
les
sub
je
jp
cld
loopne
sbb
lock
or
hlt
out
ret
idivl
lahf
out
dec
mov
in
and
and
push
daa
lods
ja
inc
cmpsl
xlat
sub
in
cmp
or
cli
cmp
pop
into
and
mov
xor
pop
int3
test
das
aas
subl
xchg
jbe
aam
cmc
clc
push
cmp
fmul
and
mov
mov
jg
cmp
sub
xchg
popa
call
sahf
scas
addb
sbb
outsl
jb
xor
movsb
out
push
fidivrl
pop
mov
xchg
mov
aas
cld
imul
mov
mov
mov
mov
sub
daa
nop
ljmp
mov
dec
dec
mov
sub
lods
pop
mov
insl
xor
cmp
dec
pop
xchg
pop
cmp
add
movsb
add
mov
xrelease
test
arpl
out
xchg
inc
push
out
mov
scas
bound
or
and
ret
mov
popa
push
aas
sbb
rcll
sub
mov
insl
sbb
fsub
cmp
imul
jmp
jg
es
int
das
mov
jne
xchg
loope
xor
daa
push
fsub
lods
fisttpl
js
xor
pop
sub
jg
add
mov
test
icebp
test
test
mov
jbe
add
inc
es
xchg
push
inc
cltd
mov
cmpsl
pop
cmp
fimuls
inc
pop
test
scas
jbe
sahf
gs
sbb
add
xor
add
jp
jns
mov
sub
and
bndldx
pop
mul
add
pop
mov
mov
in
orb
xchg
xchg
add
push
stc
push
mull
inc
and
pop
adc
stc
mov
mov
jge
dec
scas
das
rorl
xor
push
test
mov
cmpb
add
stos
lahf
adc
cmc
bound
adc
lds
gs
cmp
outsl
mov
out
cli
repz
xchg
pushf
loop
out
sbb
decl
push
jmp
inc
movsb
push
pop
cmp
xchg
mov
sbb
es
loope
inc
lds
sbb
push
out
lds
out
clc
push
inc
mov
sbb
push
popa
addr16
sbb
mov
push
aas
data16
lahf
jnp
testl
mov
shlb
adc
mov
fsubl
jo
insl
sub
xchg
stos
bound
pop
aaa
xchg
out
out
clc
in
mov
ss
or
mov
pushf
dec
and
push
loop
in
or
nop
fistps
nop
jge
cmp
inc
or
adc
sti
ss
jp
jns
pop
push
insl
pop
scas
pop
xchg
sbb
mov
dec
clc
adc
mov
popf
jae
xor
push
stc
cmp
popf
sbb
test
iret
push
pop
pop
sbb
xchg
pop
cmp
or
and
insb
leave
pop
enter
mov
ffreep
or
mov
pop
fimuls
mov
ja
outsb
push
fmull
fistps
fldl
aas
jnp
int3
loop
aam
and
js
sub
mov
fisubrl
pop
sahf
rcll
push
jmp
push
test
call
dec
jno
add
rcrb
rolb
ror
testl
mov
out
nop
mov
decb
inc
xchg
xchg
push
ret
sub
hlt
ret
ljmp
lret
cld
orb
push
pop
ret
mov
pop
loope
fmull
pushf
jne
ret
fnstsw
jecxz
scas
cltd
cmp
and
xchg
mov
dec
add
das
or
or
stos
mov
or
adc
jmp
pop
sahf
ret
adcb
gs
sbb
cltd
rcr
cs
imul
inc
test
mov
aaa
test
out
lock
mov
bound
mov
push
or
and
cld
and
sbb
push
test
dec
inc
push
inc
cltd
jo
sbb
sarb
xchg
or
pop
pop
into
or
cmpb
sub
lcall
mov
aad
mov
adc
outsb
stos
fisubs
clc
stc
inc
or
lods
or
push
cmp
cmc
jne
mov
push
mov
push
mov
ds
xlat
mov
iret
mov
inc
sbb
jb
addr16
mov
sub
inc
sbb
shlb
jno
cmp
jp
imul
lock
lcall
sti
pop
fistps
popa
mov
mov
adc
and
aam
or
scas
jne
outsb
test
gs
xlat
lods
push
cmpl
je
mov
mov
fcoms
or
movsb
loope
mov
and
sub
loop
cltd
mov
sub
icebp
shrb
loope
push
lret
or
std
loope
cltd
inc
cmp
xlat
insl
shlb
xchg
and
dec
xchg
js
sub
aad
xlat
push
cmpsl
test
jae
ret
cmp
pop
push
push
jmp
lcall
or
adc
fwait
mov
outsl
aam
ret
jmp
xchg
push
sub
inc
scas
adc
jae
pop
rcrl
dec
adc
sbb
dec
cs
mov
pop
xor
ds
pop
out
dec
pop
test
adc
cmpsl
lock
pop
sub
shl
insl
das
jno
or
or
dec
out
in
lods
mov
mov
xchg
iret
in
pop
mov
sbb
xor
je
pusha
scas
ds
stc
jne
sub
je
cld
and
imul
xor
adcb
dec
cli
fwait
sub
push
and
cmp
int3
ffree
loope
hlt
jge
pop
fmul
pop
inc
testb
xchg
and
push
sbb
xchg
cmp
stos
mov
mov
mov
sub
sbb
push
fwait
mov
test
loopne
fildl
sub
fcoml
dec
lds
xor
push
jle
faddl
lods
ljmp
add
aam
dec
subl
and
insb
movsl
lret
call
test
imul
add
mov
loopne
jne
aaa
es
loope
jb
mov
pop
pop
push
cmp
add
cltd
dec
mov
pop
push
push
aas
add
adc
scas
outsl
mov
ds
jmp
fwait
lahf
out
pop
cmpsb
mov
lahf
std
push
dec
pop
orl
or
inc
xchg
pop
ss
rolb
adc
pop
mov
aas
scas
pop
outsl
movsb
fcomps
scas
or
and
sbb
test
ret
sahf
insb
lock
fprem
xor
xchg
xchg
scas
cmp
and
je
jns
inc
ljmp
dec
mov
fsubrl
fwait
or
out
mov
push
pop
xchg
repnz
mov
fsts
mov
push
fisubl
out
maskmovq
fwait
mov
in
aaa
insl
pop
and
int
nop
daa
inc
jge
data16
dec
pop
mov
mov
sub
xor
fidivl
sahf
cmp
cmp
lret
mov
fldenv
xor
mov
aaa
dec
pop
aam
pop
lret
das
repz
and
xor
pusha
loopne
and
adc
ret
inc
ljmp
shlb
and
jge
ljmp
add
mov
inc
mov
jne
mov
xchg
and
mov
rcr
mov
jle
fbld
scas
or
mov
aaa
cmp
iret
mov
pop
mov
pop
iret
rcrl
sti
xor
loop
and
or
popa
aad
aad
xchg
xchg
rorw
or
add
out
lcall
fldl
in
test
and
ja
cli
fwait
mov
sbb
out
push
les
add
lods
out
in
outsl
mov
dec
mov
jmp
mov
inc
mov
or
aaa
mov
pop
mov
and
test
xor
in
pop
pop
test
insb
negl
jecxz
dec
lret
or
stc
mov
or
and
mov
out
pop
mov
jae
sub
xor
aam
aad
mov
jle
sbb
fwait
mov
mov
je
mov
test
pop
aad
lcall
in
inc
arpl
fnstenv
int3
aaa
shlb
ja
mov
ja
lock
pop
sub
sbb
nop
fcmovbe
movsl
adc
fnstcw
cmp
pop
in
nop
dec
frndint
inc
push
cmp
sbb
enter
cmp
adc
inc
mov
adc
pusha
ds
mov
and
sahf
pop
ljmp
xchg
sti
gs
pop
push
popa
mov
mov
cmp
test
push
test
pop
xor
pop
jle
mov
cmpsb
nop
cmpsl
or
loopne
jmp
xchg
fucomi
push
dec
sar
jns
sbb
lret
push
hlt
push
sub
out
mov
inc
in
aam
mov
roll
inc
mov
push
stc
pop
pop
cmp
fidivrl
cmp
cli
std
mov
mov
jae
test
js
rorl
xchg
sahf
imul
xchg
and
and
push
jae
je
aas
movsb
out
jns
mov
xchg
hlt
jmpw
pop
sbb
push
mov
sbb
mov
mov
inc
mov
and
arpl
or
roll
.byte
sahf
das
.byte
.byte
